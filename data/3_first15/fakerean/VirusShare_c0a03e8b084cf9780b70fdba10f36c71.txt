push
mov
sub
movl
mov
imul
mov
mov
mov
mov
mov
mov
and
cmp
jne
mov
and
mov
mov
xor
mov
mov
add
mov
mov
add
movzbl
movzbl
sub
mov
add
mov
jmp
mov
and
mov
mov
xor
push
pop
div
mov
mov
mov
mov
add
movzbl
movzbl
xor
mov
add
mov
mov
inc
mov
mov
shl
mov
shr
or
mov
cmpl
jl
xor
inc
leave
ret
push
mov
sub
movl
mov
imul
mov
mov
mov
pushl
call
mov
leave
ret
push
mov
sub
push
mov
mov
jmp
mov
imul
mov
mov
xor
mov
mov
or
mov
mov
xor
push
pop
div
mov
mov
shr
mov
mov
or
mov
mov
mov
pushl
pushl
pushl
call
add
cmp
je
mov
mov
xor
mov
div
mov
mov
mov
jmp
mov
mov
call
mov
pop
leave
ret
push
mov
sub
andl
call
push
push
push
push
push
call
cmp
jne
push
push
push
push
call
add
xor
jmp
xor
leave
ret
in
jo
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
ret
inc
push
repz
adc
test
mov
hlt
cmp
cmpsl
xor
pushl
hlt
mov
add
outsb
int3
inc
mov
fiadds
mov
fld1
test
adc
mov
xlat
ja
adc
jno
xor
add
pop
loop
cmp
sarl
lods
jno
push
inc
jmp
adc
xchg
jb
pushf
pop
aam
or
xor
gs
lahf
sub
mov
insb
btc
js
cmpsl
xor
int
jnp
out
push
out
mov
jbe
dec
lcall
jp
adc
orl
test
sarb
rorl
aam
sub
fstpt
scas
out
popl
xchg
cli
fidivl
sub
scas
test
or
lods
push
nop
cli
mov
cmp
push
es
dec
lret
repnz
icebp
mull
inc
mov
xchg
stos
test
pop
pop
pop
push
rorb
test
mov
stos
shlb
aas
jbe
and
je
fcomip
test
sahf
inc
testb
add
cmpsl
jb
xchg
or
rcrl
aam
inc
dec
lds
sub
movsb
out
cmc
inc
mov
jp
mov
cli
jp
dec
inc
ret
xchg
cltd
ds
push
xor
faddp
pop
stos
decb
and
fcos
or
sbb
dec
inc
pop
add
fstpt
icebp
shlb
mov
push
add
inc
xor
das
push
adc
mov
repnz
roll
jmp
mov
mov
cmp
jecxz
dec
ja
or
popf
lods
mov
dec
out
adc
dec
in
hlt
xchg
mov
mov
xchg
xor
fistps
xor
xchg
sub
mov
mov
popa
ret
adc
inc
xor
arpl
pushf
aam
push
jge
in
sub
into
shrl
stos
cmpsl
xchg
add
cwtl
lea
fisubl
es
jnp
mov
cmpsb
pop
mov
shll
sub
mov
cltd
adc
xchg
add
sub
xchg
cmpb
data16
sbb
push
movsl
jns
sub
adc
test
push
mov
mov
bound
std
js
int
es
cmp
push
jmp
adc
leave
aam
cmp
or
add
mov
pusha
call
pusha
aad
inc
cmp
lret
xor
ljmp
sub
pop
dec
inc
es
cld
push
xor
dec
jbe
cmpsb
jecxz
push
pop
mov
sti
jns
adc
ljmp
xchg
test
sub
cmp
into
repz
arpl
fwait
pop
sub
sub
mov
mov
sub
add
enter
out
test
les
push
lods
pop
add
mov
fstpt
jnp
jl
mov
push
std
push
xor
push
lret
dec
mov
mov
add
inc
sbbb
add
dec
sti
das
xchg
pop
ficoml
call
pop
daa
dec
ljmp
repz
mov
xchg
push
ja
xchg
adc
inc
out
or
cs
mov
or
aad
mov
clc
pop
push
nop
adc
or
jl
nop
idivl
shl
repz
pop
push
mov
pop
out
sub
in
lret
les
ljmp
out
dec
sub
pushf
xor
push
fs
enter
sub
clc
mov
push
cmp
pop
mov
pop
pop
stc
push
loop
xchg
xchg
and
pop
xchg
mull
mov
insb
jmp
push
fs
inc
inc
outsb
dec
pop
aaa
filds
or
aas
ja
test
inc
push
outsb
push
mov
cmp
ljmp
ljmp
faddp
frstor
sbb
jbe
bound
pop
and
fstl
je
push
xor
repz
scas
and
bnd
fsubrl
xor
adc
stos
sbb
cmpsl
insb
in
test
in
ret
in
xchg
rorl
js
test
sub
inc
push
repnz
pop
mov
cmp
sahf
add
int
mov
std
inc
pushf
out
and
adc
or
xor
xor
ja
mov
mov
call
mov
dec
push
out
loopne
pop
es
jo
cwtl
out
arpl
push
daa
jo
sti
mov
clc
xchg
sub
cs
jae
clc
lods
push
sbb
xchg
shl
shr
idivb
xchg
mov
fbstp
and
faddl
add
aad
dec
push
mov
inc
in
loop
hlt
sahf
adc
jle
cmp
push
cmp
sahf
enter
in
das
or
popf
ss
clc
in
sub
ret
int
es
mov
cmp
and
ret
xchg
sbb
adc
cmpsb
out
ss
ror
adc
fistl
sbb
lcall
pop
pop
outsl
xchg
rolb
mov
and
cmp
jmp
jl
out
dec
and
xchg
scas
mov
adc
fisubs
add
xchg
ds
popa
dec
aad
sbb
sbb
inc
adc
popa
popa
or
xchg
sbb
xchg
cmpsl
mov
fisubrl
nop
js
scas
rorl
pop
sti
jno,pn
cmpl
sbb
fbstp
mov
cltd
stc
imull
dec
in
aas
mulb
mov
ret
mov
mov
clc
cmp
faddl
dec
pop
jge
mov
mov
icebp
aam
push
pop
jno
push
jge
cmp
insb
push
pop
pop
sub
mov
jecxz
in
js
sbb
out
mov
cltd
cmpsl
aas
ja
shll
movsl
lea
jg
repz
sbb
cs
cmpsb
mov
inc
mov
inc
xor
lods
mov
pushf
xchg
sub
xor
adc
int3
mov
jecxz
cli
repz
scas
nop
adc
push
or
std
std
push
ffreep
das
ror
dec
adcl
mov
mov
push
ljmp
imul
sub
cmp
inc
testb
sbb
inc
arpl
fstps
jno
or
test
fistl
push
cmpsl
inc
out
cwtl
out
add
xchg
mov
sbb
sbb
addr16
stos
roll
fcomi
lea
fwait
jno
ss
mov
pop
jl
nop
mov
jb
adc
fsubrl
pop
fbld
push
hlt
icebp
imul
outsb
jns
mov
mov
fldcw
lea
sbb
aas
mov
mov
cmp
movsb
int
sub
lcall
push
push
lea
mov
sbb
push
mov
lret
rorb
inc
xchg
mov
add
push
rcl
mov
dec
mov
xchg
inc
pop
sbb
pop
fldcw
and
test
js
nop
inc
push
js
insl
add
je
jnp
adc
push
push
lret
std
xor
js
add
xchg
jnp
mov
pop
add
or
fistpll
mov
pop
jp
mov
icebp
std
and
push
adc
lahf
daa
jge
xchg
lahf
in
int
in
imul
std
cmp
jno
pop
xorl
aam
mov
inc
mov
lret
cld
lret
cmp
iret
push
out
mov
into
push
dec
mov
cmp
add
cs
or
fildll
pop
mov
push
out
fistl
rol
push
mov
ss
fidivl
xor
xchg
sti
vpmaxub
insl
dec
out
push
aad
sahf
lret
dec
pop
xlat
lea
sbb
iret
movsb
jns
jae
and
movsl
popa
aam
outsl
repnz
mov
daa
aam
and
and
subb
cwtl
inc
xchg
jo
aad
test
sub
pop
imul
lds
mov
in
inc
out
fs
hlt
ss
adc
mov
lcall
into
loope
and
rcr
aam
cmp
bound
ret
or
inc
dec
test
cmp
sbbb
clc
popf
das
pop
aaa
add
out
in
in
vhaddpd
repz
push
rolb
dec
sahf
test
in
inc
lret
cmc
lods
mov
cmp
sbb
scas
push
sbb
mov
xor
stos
pop
ljmp
jecxz,pt
cmp
pop
and
cltd
pushf
adc
xchg
push
xor
or
jae
out
pop
mov
mov
cs
loope
mov
fdivrs
mov
mov
iret
push
orb
mov
sub
mov
sarb
push
jnp
data16
fldlg2
loopne
movsl
mov
mov
iret
sbb
aaa
inc
das
pop
mov
ss
mov
aaa
mov
test
mov
mov
xchg
imul
inc
add
inc
xchg
mov
hlt
xor
dec
adc
mov
jns
dec
loope
dec
add
mov
dec
aad
push
fnstenv
mov
mov
sub
fmulp
cmp
ss
add
sub
xchg
lods
xchg
loop
lods
mulb
leave
xchg
adc
ret
pop
jl
xchg
enter
mov
push
sub
jg
das
jg
sub
adc
rcrb
movsl
out
cld
je
mov
stos
xor
sbbb
aad
inc
inc
roll
addl
cs
push
ljmp
js
dec
or
aaa
mov
jmp
adc
shr
daa
inc
jae
fdivp
out
ret
stos
xor
add
mov
fsts
push
dec
jmp
cmp
cwtl
jg
jnp
or
mov
mov
pop
mov
mov
cmp
sub
outsl
or
jne
inc
scas
arpl
push
enter
add
mov
outsb
aam
sarb
xor
ja
jmp
pop
dec
dec
scas
ds
imulb
mov
and
xchg
stos
cld
xor
cli
adc
jne
decb
xchg
sbb
xor
push
or
add
mov
jnp
jg
cmp
push
mov
cmp
and
lock
imul
ja
and
loopne
or
out
push
cltd
jo
mov
mov
in
xchg
xor
lds
sbb
addr16
rcll
and
xchg
mov
sub
lods
xchg
in
sub
ss
push
out
jp
stos
lds
dec
stos
xor
jo
pop
clc
fwait
jmp
inc
out
or
push
cmp
cmpsl
jb
stos
loope
inc
xlat
inc
xchg
cmpsb
out
add
mov
xor
inc
hlt
add
test
push
xchg
pop
test
std
sbb
pop
and
add
sar
mov
push
cmp
and
xor
mov
mov
add
or
js
leave
lret
jge
mov
mov
xchg
subb
push
mov
lods
and
fbstp
in
xchg
sbb
es
xchg
pop
xor
loop
xchg
sub
rolb
push
movsb
add
sbb
sub
add
and
jo
in
les
out
daa
mov
lcall
adc
ljmp
idiv
outsl
sub
mov
mov
push
mov
dec
ljmp
and
mov
test
shll
jnp
dec
adc
or
dec
xor
lock
jge
in
jns
mov
sbb
cmc
roll
lea
dec
jno,pt
xor
cltd
es
icebp
mov
mov
xchg
in
mov
dec
sbb
rcrb
testb
xchg
mov
leave
pop
add
or
or
pop
test
mov
arpl
or
test
push
stc
mov
dec
adc
adc
inc
fs
cmpsl
movsb
fcomps
lds
mov
inc
add
sbb
ja
sbb
pop
and
sbb
mov
movsl
aas
imul
es
jbe
sti
fsubs
mov
into
sub
sub
je
push
add
jb
sbb
adc
cs
dec
rcl
into
daa
lahf
std
aas
pop
xor
mov
xchg
aas
jnp
add
mov
test
push
add
ret
out
jno
jle
cmp
comiss
outsl
out
xor
into
out
in
les
dec
int3
sbb
mov
or
lds
ret
or
jecxz
xor
jecxz
jl
sub
or
push
popa
inc
jbe
test
jecxz
push
pop
xchg
shrb
adcl
xchg
repnz
jecxz
mov
dec
push
stos
pop
fisttpl
and
imul
stos
std
jmp
testb
arpl
insb
dec
pop
xchg
daa
in
sahf
popa
cli
fldl
jmp
push
hlt
dec
loope
jne
int
or
fwait
stos
adc
loopne
xchg
mov
jo
insb
pop
push
adc
imul
add
sub
fisttpll
icebp
and
cwtl
sbb
into
xchg
jns
inc
add
cmp
xchg
jae
arpl
ss
sti
stos
iret
stc
pop
inc
imul
aas
push
sahf
and
sub
test
movsb
dec
out
sbb
fcom
pop
fs
mov
call
fwait
rclb
loop
enter
fldl2t
mov
xchg
aaa
fistl
add
es
lea
or
pop
dec
xchg
jecxz
jmp
mov
add
or
outsl
adc
pop
aaa
sbb
hlt
mov
dec
mov
dec
xlat
mov
sbb
mov
and
mov
xchg
aas
lds
pop
mov
cmp
lods
gs
ret
mov
es
in
jle
pop
adc
push
sub
sysexit
add
bound
and
test
pusha
and
repnz
addr16
mov
inc
sub
xchg
jmp
lret
jmp
aad
loopne
push
push
inc
sub
orl
and
cmc
add
movsl
jmp
jo
push
insl
sbbb
adc
xor
cmp
xchg
push
mov
xchg
inc
gs
inc
out
aaa
dec
inc
mov
push
cmp
out
ss
push
push
pop
das
jnp
push
pop
mov
imul
jle
test
cmpl
test
or
shrb
xchg
or
pop
ljmp
out
mov
movsb
test
fcompl
sub
or
jo
icebp
jl
xor
ja
mov
add
fldl
mov
cwtl
sub
inc
dec
pop
cltd
aaa
pop
adc
cmp
aad
lea
or
das
xchg
outsb
enter
fidivs
stc
xchg
andb
scas
outsb
adc
push
fdivl
adc
cld
push
push
mov
jno
push
push
ds
lret
jge
add
out
lock
sub
movsl
mov
push
adcb
rol
xchg
xor
fdivrs
fstpt
mov
inc
push
daa
jecxz
mov
inc
mov
call
lds
enter
xor
and
adc
adc
rcll
xchg
jge
inc
mov
jmp
fcmovbe
sub
jp
movsl
xor
push
sahf
adc
jp
fldz
jmp
xchg
popf
or
xchg
push
fiadds
repz
sub
call
lcall
and
ret
test
arpl
andb
cmc
repz
mov
lods
mov
inc
call
inc
lds
or
test
jmp
dec
arpl
pop
adc
out
fs
das
ss
pop
enter
fisubrl
mov
or
and
cltd
mov
shrb
cmpsb
popl
jmp
jae
and
inc
jns
jmp
test
enter
cltd
pop
sbb
sbb
push
xchg
popa
sub
mov
xor
dec
pop
add
push
sub
jg
bound
daa
arpl
fbld
in
sbb
dec
dec
sub
cmpsb
xor
sbb
nop
subb
adc
jle
sti
mov
stos
std
loope
inc
stc
lret
int
mov
es
ret
adc
mulb
popf
inc
and
or
test
je
cmp
pop
xchg
mov
inc
cmp
mov
dec
xor
inc
mov
sbb
mov
loop
sti
imul
mov
mov
aam
psraw
mov
inc
push
dec
sub
mov
sbb
mov
and
mov
push
sahf
adc
push
pop
jae
shll
pushl
cwtl
push
or
ds
add
arpl
dec
enter
mov
jl
stos
scas
mov
xchg
aas
jp
sub
loopne
loopne
loope
pop
push
jne
call
enter
cmp
xchg
mov
enter
pusha
inc
cltd
mov
push
ja
mov
sbb
pop
insb
or
adc
lahf
dec
insb
adc
dec
sbb
mov
fwait
sub
push
ja
dec
and
dec
in
adcb
fnstcw
dec
fs
loop
enter
add
sbb
sub
pushw
out
push
sbb
lock
push
icebp
push
push
and
mov
stc
pop
mov
jmp
aam
mov
and
inc
outsb
cmc
push
nop
xor
xlat
dec
enter
lret
or
jo,pt
pop
jl
cmp
in
dec
add
dec
jne
into
sti
pop
imul
insb
inc
out
sbb
mov
jne
enter
and
lock
test
xor
lret
push
or
mov
adcl
add
ds
test
ljmp
enter
xchg
sub
adc
mov
jne
cmpsl
mov
push
mov
fwait
arpl
lock
cltd
outsb
or
icebp
push
rcrb
sahf
push
loop
mov
shr
xor
xchg
arpl
std
pusha
dec
sbb
hlt
mov
in
mov
fwait
cmp
sbb
int
loopne
inc
loope
int3
cs
pop
inc
push
shlb
push
test
dec
sbb
fdiv
add
call
mov
and
dec
jne
mov
push
mov
mov
mov
xchg
sbb
mov
lods
mov
pushl
or
jge
fsts
dec
lcall
jecxz
int
fisubrl
dec
lds
fimuls
inc
faddp
test
mov
fwait
and
mov
sti
adc
cmp
xor
sub
add
movsl
add
mov
aam
scas
mov
lret
xchg
mov
xchg
pusha
pop
mov
inc
test
adc
xor
xchg
adcb
inc
xor
movsl
add
inc
xchg
daa
insb
fdivrs
aaa
cs
imull
or
lock
cmp
mov
insl
lahf
mov
insb
push
or
stc
or
pop
dec
xor
lahf
push
sub
sbb
cld
ret
hlt
jle
pop
sub
imul
xlat
ret
mov
xchg
xchg
stos
insb
in
clc
push
sub
insb
rolb
nop
out
pop
mov
pop
fsub
mov
cmc
in
stc
xlat
mov
insl
sub
mov
xchg
adc
lret
hlt
decl
mov
je
movl
addr16
xchg
jl
dec
sbb
bound
stos
aad
int3
and
sbb
in
xchg
adc
push
ja
mov
aaa
push
pop
and
lret
insb
cmp
xor
mov
lock
xor
aas
add
sbb
pop
sub
mov
mov
or
dec
or
push
lahf
addl
xchg
pusha
jne
dec
xchg
mov
jmp
xchg
dec
mov
push
test
mov
fisubs
cld
mov
popa
lods
das
mov
and
mov
scas
sbb
cmpl
xchg
fwait
cmp
iret
js
sbb
dec
or
sti
daa
xchg
jno
addr16
pop
jne
jnp
lock
mov
add
dec
xchg
sbb
push
xor
or
mov
push
stos
add
jnp
outsl
cmp
xchg
add
xchg
out
push
pop
sbb
adc
loope
pushf
xlat
add
lods
jmp
cmp
fwait
cmp
jmp
pand
xchg
pop
jecxz
stos
add
mov
jne
push
xor
ss
lds
into
push
rep
push
push
insb
xchg
popf
iret
adc
adc
xor
fildl
js
ficoms
and
fnsave
dec
dec
mov
iret
push
lds
add
iret
or
dec
shrb
adc
and
mov
outsb
dec
movsl
cs
movsb
in
jne
pop
push
ljmp
push
jge
aaa
dec
mov
add
cmp
xchg
addr16
mov
outsb
inc
sbb
insl
mov
cltd
push
xor
push
sbb
push
cld
jb
pop
fsubs
popf
mov
push
cmp
push
outsb
repz
pop
shll
fldenv
push
xor
and
xchg
aas
cmp
aas
push
xchg
ljmp
call
mov
adc
cmp
ret
in
pop
push
and
inc
out
mov
cmp
ss
mov
iret
je
mov
xor
call
fstps
sahf
in
xor
sbb
dec
out
push
mov
push
mov
lock
ret
addl
inc
xor
in
mov
push
repnz
orl
add
add
jmp
cmove
call
add
inc
mov
jns
xor
ljmp
lods
lds
js
jge
and
push
mov
insl
jns
or
js
imul
arpl
data16
lcall
aam
in
push
jmp
mov
inc
in
mov
in
pop
mov
out
daa
pop
enter
sub
inc
dec
xchg
add
xchg
icebp
cmp
mov
shr
into
sbb
push
mov
fsubp
clc
and
dec
test
out
or
and
inc
pop
dec
mov
push
pop
mov
test
jmp
mov
testl
add
rcl
ret
insl
jbe
mov
cmp
bound
clc
jg
xor
add
int3
sbb
pop
push
pop
jns
cld
fs
test
pop
out
sti
push
cmpsl
push
nop
repz
xlat
iret
psubusb
xor
xor
jmp
sub
testl
ret
insl
pop
fs
mul
mov
pop
das
jmp
arpl
pop
test
jb
inc
aam
sub
xchg
fildll
lods
jge
imul
popf
sti
bswap
push
lcall
cltd
into
stos
fst
fildll
sub
pop
or
ret
addr16
pop
int3
adc
mov
in
push
popl
inc
push
pop
fwait
sbb
repnz
cld
movsl
mov
jp
pop
cmpl
mov
push
dec
mov
or
in
repnz
mov
mov
notl
into
xchg
sti
mov
mov
sub
dec
adc
xchg
popa
aaa
aas
dec
mov
scas
and
or
lea
dec
cmp
mov
rol
push
enter
cmc
addr16
mov
mov
jg
xchg
dec
lret
sti
mov
push
fmulp
cmpl
push
push
or
xchg
push
xchg
fsubrp
jp
sub
jmp
por
into
mov
sub
outsb
xor
mov
or
out
ficompl
inc
cmp
push
enter
lahf
shlb
pop
mov
add
adc
leave
mov
cvttps2pi
sti
shrb
clc
jnp
or
adc
pop
xchg
sti
pusha
mov
push
popf
dec
ja
hlt
in
sub
add
rol
popf
js
sahf
in
jae
or
inc
ret
scas
xchg
es
jae
mov
out
lods
sbbb
test
add
pop
pop
fbstp
sarb
adc
dec
dec
out
fsts
sbb
xchg
repnz
addr16
popf
mov
inc
loopne
sbb
nop
lods
fdivs
lahf
fwait
enter
lea
imul
mov
subl
shlb
mov
outsb
decb
jbe
rolb
dec
inc
lods
mov
dec
jecxz
out
shlb
push
out
daa
sub
outsb
rcl
clc
or
cmp
xchg
rcrl
jae
das
nop
pop
insb
in
jo
stos
std
test
pop
test
lods
repnz
xchg
or
mov
mov
cmp
or
mov
out
bound
repnz
gs
sarl
out
mov
ja
test
mov
fs
rclb
mov
cwtl
stos
fs
aad
jle
push
pop
hlt
das
push
cmp
sub
and
mov
push
call
pop
pushf
xchg
in
clc
mull
dec
incl
fst
mov
mov
out
adc
out
adc
xorb
dec
push
inc
shl
and
adc
mov
or
inc
or
jae
sbb
mov
cmp
adc
mov
add
push
ret
lods
jnp
lret
int
mov
xchg
pop
mov
or
pop
movsl
pop
out
adc
andb
fldcw
daa
mov
mov
xor
pop
xor
xchg
fs
pop
cmp
inc
mov
and
popf
sbb
sub
xchg
dec
dec
jge
rcr
gs
mov
test
inc
movsb
cmp
inc
add
je
mov
sbb
fimuls
mov
push
sarb
pusha
in
shrl
jle
cwtl
inc
or
outsb
outsb
cmp
dec
jno
lahf
negb
sub
push
add
loopne
pop
nop
repnz
jecxz
cmpsl
and
sbb
push
adc
pop
push
andb
dec
ss
testl
jmp
push
pop
push
xchg
addr16
xchg
push
mov
mov
test
movsl
data16
inc
ficomps
xlat
ficoml
insb
leave
test
shlb
sbb
inc
in
adc
mov
xchg
cwtl
fdivrp
movsb
jl
dec
adc
mov
loopne
jbe
loope
lret
push
mov
add
and
pop
jl
cwtl
xor
lcall
fmul
cmp
imul
testb
xor
leave
xor
loope
clc
ljmp
test
jmp
ret
cmp
push
mov
jecxz
pop
or
int3
sub
subb
ss
cmp
in
pop
fimull
inc
jbe
andb
jp
pop
jge
cmc
push
cmp
outsb
dec
add
pop
cmp
inc
aaa
mov
adc
lret
inc
jno
add
sbb
and
push
add
mov
inc
sbb
mov
mov
dec
pop
repz
ja
mov
pop
pushf
cmp
adc
scas
add
fidivs
inc
stos
insl
mov
mov
or
insl
and
ds
push
jp
mov
cwtl
addr16
in
push
inc
and
rcrl
add
push
pop
push
orb
inc
lcall
aam
or
ret
sarb
sub
xchg
fdivl
lock
mov
dec
dec
push
lods
push
fwait
clc
xchg
loop
adc
popl
ret
jg
mov
cli
adc
xchg
iret
push
jge
and
xor
mov
rcll
jmp
pop
xchg
mov
out
mov
sahf
int3
jo
je
push
loope
clc
add
inc
push
jl
push
ret
shrb
mov
loopne
xor
xchg
push
add
sub
stos
push
xchg
dec
push
insb
mov
hlt
cmp
dec
fadd
push
mov
bound
pop
lret
adc
movsb
es
lcall
js
inc
insl
in
popf
sbb
xor
mov
dec
push
inc
xchg
push
push
cmp
inc
adc
pop
cmp
repz
rclb
ja
out
mov
push
jae
pushf
sub
dec
xchg
xchg
sub
cld
jmp
fisttpl
sti
mov
cld
mov
addr16
es
jle
decl
jne
mov
push
or
or
loop
stc
movsl
stos
jp
ret
dec
lret
adc
dec
or
movsb
jecxz
and
lods
pop
dec
or
out
mov
sub
lds
clc
mov
ficoms
inc
jbe
add
idivb
das
mov
push
loop
int
fs
inc
aaa
loopne
bound
jge
outsb
sub
or
or
inc
insb
cmpsl
sub
mov
pop
jecxz
das
mov
pop
cmp
mov
pop
jo
mov
or
and
loope
pop
and
or
pop
jo
sub
and
inc
testl
add
cmp
fwait
sub
mov
and
cmpsl
push
dec
jnp
mov
adc
jae
repnz
pop
mov
ja
lret
fcoml
push
leave
testb
fisttpl
fisubs
fnsave
pusha
sbb
in
jno
jno
imul
loope
sahf
jo
mov
cmpsb
and
pop
sbb
iret
sub
in
les
btr
push
lds
xchg
nop
mov
in
or
out
mov
xchg
popa
xor
lret
sahf
cmpb
dec
jb
sub
outsl
stos
xor
out
test
sub
add
dec
add
cmc
inc
add
push
out
cmp
cmp
or
cmpsl
lea
add
pusha
ds
push
dec
shll
mov
int3
mov
lahf
pop
push
push
adc
cmpsl
mov
jg
addr16
adc
mov
roll
cmp
loope
scas
xchg
sub
cmp
adc
cmp
loop
dec
sbb
inc
cmp
push
push
xlat
mov
imul
xor
jp
in
mov
add
inc
inc
jg
fwait
lds
jbe
inc
lods
hlt
cmpsl
aam
rcrb
dec
jae
push
pop
movsl
sub
jns
fidivs
jmp
inc
ljmp
gs
and
addr16
add
cmpsl
sub
scas
pop
or
pushf
sti
fadd
faddp
mov
pop
in
les
adc
adc
imull
lret
and
push
xor
mov
data16
pop
pop
lds
xchg
int
add
mov
shrb
inc
into
out
data16
fsts
outsb
stos
inc
xor
sbb
shll
sbb
fucom
lods
scas
or
lds
mov
mov
sahf
inc
xor
lret
not
fildll
push
sbb
enter
sbb
push
out
out
push
lcall
cmp
xchg
shrl
test
add
in
mov
outsl
fcmove
outsl
mov
push
inc
or
jbe
pminub
test
or
dec
add
jecxz
hlt
cmp
xchg
adc
repz
add
dec
push
outsb
push
inc
xchg
lahf
sbb
adc
movsl
test
xor
scas
pop
test
out
jae
lds
mov
mov
ss
sbb
jae
xor
and
movsl
out
push
mov
or
push
xor
adc
sbbl
sti
or
or
sub
mov
in
mov
sbb
in
add
aad
pop
rcrb
mov
inc
or
stc
or
fnstenv
out
push
adc
cmp
leave
xchg
mov
mov
pop
xchg
pop
aas
icebp
decl
jns
mov
sbb
cwtl
lods
test
and
mov
pushf
es
pop
inc
pop
pop
into
insb
loope
mov
fldcw
fsub
jmp
fisubs
jge
pop
roll
push
rolb
and
xchg
rolb
shr
addl
and
inc
xchg
adc
cltd
pushf
lcall
fcompl
mov
pop
xchg
sub
mov
push
movsl
mov
and
ds
dec
out
test
cmp
rcll
push
push
cmp
mov
test
dec
inc
iret
add
incl
lret
int
in
fisttpl
mov
leave
sub
inc
adc
add
hlt
cmp
adc
fsts
mov
idiv
lds
and
into
gs
pop
out
std
and
xchg
mov
and
repz
out
mov
dec
jle
mov
mov
and
mov
out
jo
lcall
rorb
lds
call
int3
clc
repnz
jnp
cmp
lock
and
dec
xor
or
xor
rcrb
sbb
sarb
push
stos
sbb
ljmp
inc
dec
mov
inc
fs
dec
xchg
imul
push
adc
mov
mov
fnstenv
dec
adc
mov
dec
loop
push
cmp
ds
scas
fnstsw
push
incl
fisttpll
mov
shr
das
scas
fisubs
push
rolb
int3
cld
loopne
mov
sub
sub
lret
add
lea
in
nop
es
fcoms
mov
sar
je
outsb
sbb
mov
pop
mov
mov
shlb
shlb
stc
adc
jp
jle
pusha
push
push
pop
or
out
subb
mov
adcb
or
adc
stos
lret
fsub
mov
mov
mov
xor
or
outsl
mov
fwait
daa
jp
andl
cs
bound
int3
test
push
xchg
and
repz
adc
cmpsl
sar
pop
pop
cmovg
ljmp
dec
lds
js
inc
cmp
sahf
push
fsubl
push
fistpl
pop
cmp
in
leave
insb
out
sub
cmc
nop
sub
out
test
insb
lock
lret
add
stos
adc
sbb
push
test
jb
pop
imul
or
dec
fdivrs
pop
pop
enter
xchg
cmpsb
mov
mov
push
adc
out
mov
mov
mov
mov
jne
push
sub
inc
dec
cmc
cmp
adc
mov
sbb
and
nop
push
inc
fucomip
or
ja
leave
inc
and
cmp
dec
fistps
cmp
out
lea
mov
cs
div
fsubs
xor
dec
xchg
rolb
loopne
dec
lret
mov
sub
loopne
xor
clc
pop
pop
adc
mov
roll
cs
aas
or
shrl
dec
push
push
sbb
push
push
lret
repz
out
xchg
mov
cltd
in
in
add
add
rolb
fmuls
lods
cltd
and
dec
xchg
adc
sarb
test
fdivs
xchg
pop
pop
jmp
add
sub
adc
jl
mov
push
cmp
inc
jnp
cld
aam
stos
loop
cmpsl
leave
xchg
mov
in
insl
sahf
aas
fsubrs
jae
sbb
movsb
adc
fnstsw
and
arpl
daa
push
aaa
jne
sbb
jmp
enter
fstpl
mov
xor
cs
cwtl
dec
call
jg
add
movsb
arpl
repnz
call
push
adc
xor
test
mov
xchg
arpl
lds
xchg
push
add
jecxz
sti
mov
fsts
inc
or
mov
rcll
mov
cmpb
fidivs
shrb
aas
shl
sub
add
push
add
push
fildl
add
ror
popa
and
add
sti
aaa
out
fdivrs
jl
movl
mov
ret
dec
cli
test
in
int
xor
enter
outsl
cltd
dec
dec
out
nop
xor
loope
aad
inc
dec
or
fwait
lods
insb
xchg
xor
aas
xor
push
xchg
addr16
pop
mov
and
lahf
cmp
cmp
inc
or
ret
sbb
xchg
pusha
movsl
test
fisubrs
out
sbb
fs
jbe
cwtl
dec
std
add
pop
lahf
add
jnp
jl
xor
lea
imul
add
imul
movsb
mov
fidivl
iret
mov
add
add
mov
mov
add
xchg
dec
add
aaa
fbld
push
dec
adc
sahf
mov
data16
out
stos
jmp
pusha
push
sub
je
fisttpl
cmp
rcr
std
fsts
xchg
xor
out
push
lock
cmc
cmp
xchg
push
pop
and
das
loope
je
cli
inc
ljmp
fsts
popf
clc
pop
pop
hlt
in
cmpsl
push
lcall
leave
pop
les
lret
mov
mov
mov
shlb
jne
or
mov
mov
scas
and
das
stos
dec
stos
hlt
aas
lock
sbb
add
hlt
aad
cmp
push
pop
addb
mov
mov
pop
push
ucomiss
or
int3
jo
ds
cld
fdivrs
movsb
fdivrs
or
fld
dec
push
aas
mov
push
outsl
idivb
adc
fsubrs
push
or
mov
mov
out
stos
or
aas
push
in
shlb
inc
jecxz
inc
pop
cmp
cmp
cmp
lea
add
cltd
test
xlat
mov
mov
fisubs
mov
inc
mov
adc
or
out
cmp
test
and
subb
das
push
aad
dec
xchg
ret
lret
xchg
inc
out
adc
fs
jnp
test
mov
addr16
pop
xor
mov
std
push
cwtl
loopne
mov
jp
adc
push
gs
xchg
bndstx
adc
out
and
notl
xor
ss
mov
popf
shl
leave
mov
pop
lods
pop
pop
xchg
inc
fs
in
add
sub
int3
inc
hlt
andnps
test
insb
vpshufhw
loop
dec
leave
sahf
cmp
jmp
sub
aaa
mov
hlt
ret
dec
inc
cmp
divb
dec
inc
dec
insb
mov
adc
sub
mov
cli
bound
fcoml
sub
lods
fsubs
int3
jmp
icebp
xchg
jno
scas
pop
insl
stc
not
lret
xor
xor
xchg
adc
dec
in
stc
dec
js
push
cwtl
pop
shl
jge
cmpsl
or
outsb
push
jnp
loop
mov
fsubrs
cli
cwtl
arpl
sub
mov
mov
call
inc
scas
cmp
inc
jne
adc
jne
aad
insl
addl
and
or
dec
into
shll
xor
sub
adc
stos
push
int
jbe
push
xorb
push
in
aad
dec
imull
adc
inc
xchg
add
pusha
ja
bound
push
daa
gs
xchg
jge
push
movsb
xchg
push
mov
popa
in
dec
sub
cli
in
xchg
dec
pop
push
lods
or
rorb
pop
push
jnp
mov
out
xchg
outsl
xor
and
xor
cld
adc
pop
xchg
pop
fstps
cmp
test
push
jmp
mov
jmp
notb
psubd
mov
push
out
mov
aaa
int3
jae
stos
and
fstps
hlt
or
push
popw
pop
inc
sbb
mov
jmp
cmp
shrb
push
jl
fnstcw
fiaddl
adc
xorb
daa
insb
or
inc
out
sub
sbb
xchg
insl
es
sub
cwtl
cwtl
mov
fld
xchg
dec
insb
mov
pop
std
xorb
lock
shlb
lock
loope
cltd
notb
push
mov
loope
test
mov
test
pop
cld
outsb
pop
pop
xor
adc
test
std
and
insb
pop
and
push
or
arpl
enter
ja
pop
jns
jns
fimuls
adc
aaa
fwait
cmp
inc
out
ret
mov
and
insb
shlb
lcall
push
sbb
xchg
pop
scas
sbb
mov
lcall
sub
pop
stos
jl
add
sub
push
fstl
and
bswap
or
xor
imul
sub
pop
inc
loopne
rcrl
push
adc
rcrl
push
xchg
arpl
in
or
pop
jge
push
push
inc
inc
mov
adc
pop
cmpsb
adc
mov
stos
sub
rorl
mov
out
ljmp
repnz
jg
adc
pushf
scas
sub
test
ret
stc
mov
xchg
out
cmp
push
sub
pop
flds
and
inc
inc
adc
add
adc
cmp
add
insb
pop
push
test
xor
xor
xor
mov
repz
cs
lods
cltd
and
ja
pop
mov
inc
fwait
inc
insb
dec
or
iret
push
lret
fwait
stc
cmp
imul
in
pop
mov
or
or
xlat
dec
mov
sbb
cmpsb
jae
gs
pop
shrb
popf
dec
mov
lods
dec
and
pop
movsl
ret
sbb
dec
inc
push
cli
xor
mov
rcl
push
mov
imul
sub
cmp
jle
add
sarb
inc
loope
pop
out
adc
adc
cmpsb
pop
scas
inc
lcall
push
adc
jge
lcall
dec
jmp
fists
popa
cmp
dec
jle
aaa
call
outsl
add
mov
aam
sbb
jns
adc
loope
sbb
sbb
sti
cmp
insl
adc
sub
mov
dec
cmp
in
add
andl
popa
js
xor
jno
jns
dec
outsb
js
sub
xor
cld
leave
jb
cwtl
push
pop
out
mov
bound
sub
rorl
adc
add
sub
sub
dec
jecxz
inc
mov
mov
loopne
dec
add
adc
lds
jmp
call
mov
repnz
pop
lahf
scas
or
pop
in
xchg
std
jnp
jle
nop
dec
add
adc
jg
cwtl
outsb
scas
sub
jecxz
mov
or
push
ds
shlb
push
in
xchg
lahf
ss
loope
jns
sub
push
jmp
xchg
ljmp
pop
and
inc
jecxz
dec
outsb
cmpb
mov
popf
inc
in
mov
in
mov
adc
or
mov
adc
shlb
shll
cmc
sti
or
xchg
add
dec
jbe
cmp
jmp
mov
mov
xor
ficomps
xorl
cmp
aas
mov
int3
loopne
popf
cld
push
ficompl
push
push
dec
pusha
xchg
sub
fwait
bound
inc
mov
aas
xor
xor
stos
and
das
stos
push
cmp
inc
xor
pop
test
jo
mov
sarl
test
and
add
popf
bound
loope
stc
shrb
dec
sbbb
sahf
nop
mov
sbb
dec
gs
push
xchg
test
aam
lret
jmp
movsb
adc
push
xchg
movsb
scas
mov
jb
jae
xchg
clc
das
mov
out
clc
and
sahf
js
fstl
cli
adc
cmp
sti
pop
gs
fbld
call
push
mov
pop
fildll
add
jo
jmp
lea
aam
mov
sti
repnz
lcall
test
push
dec
and
dec
pop
lret
mov
daa
pop
push
in
lock
inc
sarl
pop
mov
mov
mov
mov
arpl
hlt
cmpsl
and
and
in
fisttpll
fisttpl
sub
xchg
cmp
sub
push
fimull
dec
ret
out
mov
sbb
mov
int
or
das
fstl
sub
xlat
inc
idivb
in
das
sbb
sub
lret
pop
ljmp
adc
rcr
push
inc
sbb
sbb
add
cmp
add
cltd
xor
mov
jb
pop
aam
pop
and
mov
testl
inc
loope
add
sub
movsb
jno
scas
add
xor
mov
insb
pop
out
roll
gs
data16
xchg
pop
jns
push
pop
add
mov
pop
call
fbld
sbb
idivb
pop
pop
adc
outsl
sub
jge
mov
pusha
add
jle
xchg
dec
adc
mov
scas
pop
mov
pop
jo
pusha
jbe
cmp
mov
cmpb
lods
add
std
es
dec
aaa
mov
fcmovnu
jae
sahf
hlt
xor
dec
popl
imulb
sub
pop
pop
sub
xchg
pop
in
add
cmp
test
das
scas
sbb
js
push
daa
cmp
mul
adc
add
cltd
daa
sbb
test
jns
je
insb
ret
lret
pop
adc
xchg
mov
mov
adc
jmp
mov
sbb
push
es
pop
inc
movsl
je
xchg
cld
pop
test
cmovo
mov
mov
movsb
adc
sbb
pop
xchg
push
add
push
rolb
sarl
add
and
loopne
dec
daa
push
lcall
add
pop
cwtl
pop
jle
add
inc
push
sbb
cmp
cmp
mov
out
xlat
popa
stos
xlat
cltd
sub
mov
testb
incb
outsl
imul
push
arpl
inc
jne
xor
lcall
cmpb
stos
out
fsubrl
movl
fldt
cmp
inc
into
sub
pushf
ja
cmp
data16
subl
fwait
test
mov
and
xchg
adc
lret
mov
jl
icebp
sbb
imul
mov
jne
jb
stc
inc
xchg
mov
xchg
sub
mov
hlt
jmp
das
fninit
jae
cmp
or
insb
xor
std
cmp
pop
mov
or
lret
pop
sbb
cmpsb
pushf
sarl
testb
lret
movsl
aam
dec
int
dec
mov
popa
cmp
xor
hlt
iret
int3
add
adc
adc
loopne
sub
xchg
imul
test
mov
mov
and
sbb
in
loope
cli
add
push
inc
dec
inc
dec
push
gs
add
popa
push
mov
xorl
jl
mov
xor
jl
ret
mov
je
mov
mov
insb
addr16
out
xchg
cmp
adc
flds
test
lds
or
pop
dec
inc
adc
inc
pop
or
mov
mov
pop
push
sub
adc
adc
push
out
icebp
mov
adc
movb
leave
stc
sbb
or
lret
aam
mov
aaa
fmull
mov
dec
lret
fs
out
mov
popa
jne
movsb
adc
loop
dec
cmp
std
push
and
scas
mov
mov
rolb
popf
mov
mov
mov
sub
inc
mov
das
cmp
mov
push
push
and
lret
mov
fldcw
mov
xchg
mov
ret
pop
mov
pop
leave
mov
xchg
aaa
idivb
sbb
insb
mov
jb
jbe
imul
sub
cmp
jbe
dec
mov
mov
lods
mov
outsb
adcl
popf
xchg
int
stos
cwtl
cmp
xor
mov
dec
pop
push
push
pop
in
or
stos
mov
xlat
or
test
jb,pn
imul
jns
cmp
in
cmpsb
inc
pop
xchg
adc
cmp
add
or
fdivl
xor
cwtl
add
stos
push
jns
fisubs
sbb
lret
lds
divb
jb
icebp
mov
aaa
jge
mov
dec
pusha
or
test
xor
jle
fsubrl
cmpsb
dec
fdivl
das
pop
jbe
scas
push
sbbb
out
out
enter
jecxz
aas
pop
repnz
pop
decl
js
jl
ret
cwtl
sahf
jb
repnz
xor
xchg
pop
pusha
add
mov
repnz
inc
inc
mov
xor
fcomi
insl
pop
pusha
sub
fbld
mov
into
daa
add
test
jp
sub
fistl
rclb
repnz
xchg
into
adc
mov
pop
and
js
ret
mov
ds
popa
sub
bswap
mov
movsb
dec
jmp
stc
push
enter
rcrb
inc
push
pop
ret
inc
mov
ret
add
push
hlt
ds
sub
xor
mov
mov
add
inc
push
leave
xor
mov
popa
loope
push
mov
sbb
cmc
push
addr16
loope
mov
sub
mov
push
mov
movsb
mov
cwtl
pop
adc
inc
add
mov
jae
in
dec
fldcw
outsl
cmpl
push
stc
inc
into
repz
add
aad
cmp
add
into
xchg
xchg
add
jmp
mov
arpl
iret
in
gs
jg
dec
loopne
push
xchg
out
mov
icebp
pop
fwait
mov
shl
add
int
scas
dec
scas
inc
out
sbb
divb
leave
inc
shrl
ds
and
ljmp
adc
add
mov
and
sub
ja
sub
adc
mov
push
pop
push
imul
inc
push
es
das
dec
add
adc
test
out
aad
ss
mov
adc
jb
and
ljmp
lret
aam
cli
fstpt
or
mov
pop
jne
mov
lods
std
adc
push
ss
sbb
jle
bnd
cltd
mov
jp
and
ja
push
orb
mov
outsl
dec
or
in
xchg
int3
or
movsl
imul
mov
les
imul
jg
mov
daa
imul
xor
cmc
je
fs
es
adc
je
sbb
jecxz
cmpsl
ds
sahf
push
outsl
fisubs
adcl
dec
and
cs
inc
nop
movsb
or
mov
insl
inc
rep
cmp
cmp
adc
mulb
sbb
fs
fmull
pop
xchg
sar
push
jmp
inc
aaa
scas
xor
xchg
fidivs
push
pop
stos
sub
mov
sbb
sbb
adc
fidivrs
pusha
out
outsl
sub
popf
jmp
xor
shlb
mov
gs
hlt
jns
das
mov
pop
xor
shlb
je
mov
and
inc
lock
mov
lcall
xchg
or
arpl
lcall
les
dec
sbb
insl
inc
sarl
cmp
sub
ss
xchg
jbe
test
mov
pop
add
adc
and
fwait
call
iret
mov
sbb
mov
ret
cwtl
or
xchg
jns
and
movsb
pop
adc
fisttpll
cmp
sarl
add
adc
xor
inc
js
cs
daa
add
jmp
push
or
cmp
and
jle
dec
repnz
jne
add
dec
push
cmp
sub
sub
clc
xchg
lock
insl
lahf
popa
imul
jnp
mov
cltd
jl
fwait
ljmp
outsl
or
sarl
adc
inc
out
mov
outsl
dec
xor
fwait
dec
nop
jle
inc
mov
aas
jl
lret
dec
outsl
pushf
mov
ret
stc
mov
rorl
mov
push
xchg
inc
arpl
push
add
pop
jns
lock
leave
and
scas
mov
pop
xor
repnz
xor
push
mov
mov
in
sub
push
add
fld
scas
out
dec
add
add
orw
cmpsb
xor
dec
dec
mov
into
push
outsb
dec
outsl
jg
sarb
sti
mov
xor
sti
mov
in
es
xchg
sbb
inc
in
ficoml
jle
shrl
or
xor
aaa
pop
xor
xor
adc
lcall
into
jns
adc
jp
and
xor
or
xchg
fdivrs
subl
cmpsl
dec
les
inc
sbb
inc
pop
pop
mov
outsl
add
pop
cmp
xchg
mov
or
jecxz
dec
rorb
test
sarl
inc
ja
test
outsl
lods
jmp
push
cmpsb
lret
and
xchg
in
fstps
dec
aam
add
outsl
xor
mov
std
pusha
pop
mov
xchg
jnp
and
sahf
sub
mov
ja
popa
jmp
mov
imul
neg
sub
nop
pop
idivb
jb
add
mov
scas
xor
nop
or
pop
xchg
in
pushf
mov
sbb
insl
insl
insl
fsubrs
push
mov
addr16
mov
loopne
mov
movsb
mov
cwtl
cmc
leave
inc
jbe
jae
orb
dec
inc
mov
mov
sbb
fmulp
cmc
popf
rclb
shrb
sbb
xchg
repz
int3
push
sub
hlt
jmp
xor
push
sbb
sub
jbe
pop
mov
and
test
clc
mov
repz
filds
and
jo
add
ja
mov
sbb
and
jl
mov
call
pminub
sbbl
int3
add
sub
ret
insb
adc
and
adc
lcall
imul
stos
adc
adc
push
cmp
clc
je
mov
add
and
xchg
push
sti
lahf
adc
jle
xchg
mov
or
popa
pushf
mov
cmp
movl
pop
pop
leave
nop
test
xchg
mov
lds
jp
das
jge
ret
lcall
cmpsb
sub
cltd
inc
arpl
out
push
cmpsb
test
push
fldt
cwtl
out
ret
popa
sub
pop
je
add
insb
jge
leave
add
mov
jb
adc
rcll
jae
mov
cmp
inc
mov
sbb
pop
mov
jl
dec
and
adc
xlat
mov
vpmullw
sahf
inc
pop
pop
xor
pop
and
cmpb
mov
std
ret
jle
dec
out
call
mov
cmp
lea
xor
jne
sahf
rcrl
sub
cmp
sbb
inc
dec
scas
inc
nop
outsb
push
movsl
mov
and
enter
add
dec
lea
mov
xor
push
inc
testl
rcrb
push
into
pop
sbb
inc
gs
dec
daa
fwait
lods
xor
add
ss
stc
and
mov
mov
hlt
mov
enter
jg
in
fildl
jns
in
mov
pop
lret
scas
test
push
sbb
iret
or
sub
inc
xchg
pop
pop
sub
les
es
sahf
or
pop
or
jne
cmpsb
lret
cmp
push
sbb
imul
jae
loope
into
imulb
roll
lcall
imul
ljmp
adc
xor
and
cld
shlb
pop
lods
inc
mov
lea
push
pop
jp
lcall
xchg
and
les
xor
ss
or
in
mov
push
clc
in
stos
mov
dec
cs
pop
mov
into
and
sbb
sub
mov
jg
or
xchg
add
pop
popa
push
ret
fwait
sub
in
or
fbstp
repnz
dec
test
push
int3
fs
xchg
dec
add
and
mov
jl
mov
inc
in
int3
lea
pop
sbb
enter
pop
dec
es
imul
addr16
xlat
ficomps
and
mov
outsl
sahf
push
bound
ja
pop
and
inc
fidivs
xor
inc
and
scas
inc
push
mov
out
sub
inc
mov
aad
aad
addr16
stos
jne
outsb
mov
xchg
int3
xchg
je
test
loopne
jp
inc
adc
mov
jp
inc
arpl
iret
cmp
lock
sbbb
pop
or
out
popa
cmp
cmp
add
cld
and
inc
hlt
aad
les
mov
dec
cmpsb
or
call
mov
mov
and
les
pop
mov
jg
push
imul
movsb
aad
dec
mov
fwait
gs
xchg
inc
cmpsb
loop
inc
aaa
pop
gs
insb
dec
xor
add
adc
mov
stc
cmp
test
fcmovnbe
and
mov
add
cmp
jl
xchg
fcoml
xor
loop
stos
xchg
jge
das
sbb
fldenv
dec
mov
xchg
pop
sbb
jnp
cmpl
sbb
xchg
std
xlat
add
mov
push
cmpsl
xchg
pop
negb
fldenv
jg
insl
add
int
mov
in
inc
sub
test
sub
jns
mulb
aaa
int3
popf
sub
mov
ss
aas
data16
fdivr
adc
cmc
pop
out
inc
lcall
adc
sub
imul
test
pop
stos
xchg
mov
test
jno
cli
ljmp
cwtl
xchg
cmpsb
sub
xchg
xchg
xor
aaa
aam
imul
push
sbb
aaa
mov
xor
scas
inc
xchg
insb
jmp
inc
out
movsl
rolb
dec
hlt
js
out
lods
and
ljmp
dec
movsl
lret
mov
mov
movsb
frstor
leave
cwtl
sahf
xchg
aam
xchg
xor
arpl
nop
ja
js
jne
push
dec
xchg
test
iret
aas
jno
popa
mov
inc
and
sbb
in
inc
mov
loopne
push
nop
mov
popf
cmpsb
flds
out
pusha
jbe
fnstenv
sub
xchg
lret
adc
inc
movsl
ds
in
cmpsb
subb
sahf
fwait
aam
inc
js
or
push
jp
xor
pop
shrl
jns
xor
jb
imul
loope
outsb
lahf
sub
aam
jb
lock
dec
xchg
xor
cld
lret
rcll
mov
bound
cmp
xchg
xor
cltd
jmp
mov
ljmp
shlb
or
jecxz
cmp
in
mov
ret
and
mov
push
inc
push
fxch
lods
fisttpl
ret
jg
outsl
ds
sbb
loopne
cli
mov
shrl
mov
icebp
clc
and
sub
add
outsb
mov
jmp
jmp
out
mov
jl
cli
lret
je
and
js
lcall
xchg
out
fisttps
cli
loope
cli
push
out
daa
leave
xor
fcomps
sbb
sub
mov
xor
xchg
cmp
jg
xchg
adc
sub
add
mov
ja
pop
negl
mov
push
ja
stc
es
les
jmp
ljmp
mov
lahf
bound
xchg
negb
mov
rcpps
push
popf
xchg
ret
pop
push
repz
push
pop
and
pop
sub
pushf
pop
stos
jmp
dec
sub
lea
js
add
test
or
jge
mov
sarl
nop
jb
xor
in
andb
ss
adc
xlat
mov
sub
aad
cmp
push
or
mov
fdivrs
lahf
mov
insl
sub
sarl
scas
enter
xor
cmp
pop
out
imul
sub
adc
add
and
movb
aad
loopne
dec
pop
cmp
dec
add
xchg
push
jp
aam
std
int3
ret
shlb
and
xchg
mov
or
es
add
loopne
enter
mov
push
xchg
ficoms
jle
out
jae
fstps
mov
arpl
or
lea
xor
mov
jle
fcomi
adc
adc
pop
js
push
xchg
pop
jg
fists
jg
jge
cmc
jecxz
push
xchg
sbb
das
fdivs
nop
fisttps
sub
ror
or
xor
mov
bound
pop
fsubrl
fs
jecxz
inc
inc
jae
mov
mov
add
sub
dec
pop
dec
aas
aam
adc
pop
ffree
loop
push
jmp
scas
lret
and
nop
adc
xchg
cmpsl
jg
add
insl
mov
pop
jns
pmaxub
fdivl
xchg
lea
add
ja
enter
ficoml
fildl
fsubrs
cltd
stc
outsb
jecxz
fsubs
and
outsl
lods
gs
push
call
popf
xlat
sahf
fisttps
cld
inc
jmp
mov
sub
xchg
ret
adc
dec
push
rcl
push
inc
inc
sbb
jno
jno
inc
imull
xchg
insl
add
pushf
lods
pop
cmpb
orb
mov
rcrl
mov
repnz
repnz
mov
pushf
addr16
jl
or
lret
icebp
imulb
pop
dec
pushf
cli
pop
imul
cmp
mov
push
add
mov
int
jmp
sub
mov
je
pop
ja
dec
ja
subb
and
das
int
jns
xor
xor
push
mov
push
mov
int3
clc
jae
mov
mov
out
subl
sub
jo
mov
shl
test
test
lods
insl
mov
imul
fmuls
rorl
mov
es
sbb
mov
mov
fldenv
push
push
ret
add
push
push
add
inc
adc
adc
repz
hlt
icebp
ljmp
or
and
sbb
pop
jb
sub
xchg
mov
adc
push
repz
and
and
cmp
in
push
xlat
adc
add
xor
out
add
and
jecxz
jo
cmp
out
vxorps
dec
xor
inc
mov
pop
adc
adc
or
mov
xor
inc
jns
adc
xchg
rcll
cmpsl
shrl
mov
cmpsl
sar
loopne
pop
notb
jno
cmp
aad
jno
loope
repnz
shl
aam
or
add
loopne
mov
dec
inc
mov
jbe
stc
mov
mov
dec
add
sbb
lahf
cmp
call
lret
inc
popf
adc
test
adc
mov
loope
pop
je
sub
lock
adc
fucom
sahf
enter
jecxz
cs
mov
mov
jl
rolb
cld
outsb
or
mov
push
inc
xchg
and
dec
push
push
inc
movsb
fldt
cmp
sti
test
lds
adc
ret
in
xor
xor
incb
xchg
jmp
cmp
mov
das
scas
sar
aad
xorl
lods
adc
mov
xor
add
sub
mov
ds
cmp
aaa
loop
sbb
add
shl
insb
rorb
imulb
js
mov
lret
sbb
sbb
and
push
jae
add
ret
pusha
inc
mov
imul
pusha
adc
cmp
orl
cs
jno
or
lahf
rcrl
adcb
push
xor
icebp
add
push
mov
movsl
pop
sub
jecxz
mov
outsl
test
cmp
or
sub
sub
xchg
inc
cmp
cli
push
adc
fcoms
daa
and
or
mov
sbb
fcmovnu
pop
in
pop
pop
rcrl
or
sbb
out
sbb
xchg
jl
xchg
jle
or
fiadds
jl
dec
cmp
call
clc
sub
mov
fbstp
or
sub
mov
xor
push
fsubp
pop
and
xchg
stos
frstor
mov
push
lahf
lods
outsb
call
add
stos
cwtl
mov
xor
fidivrl
adcb
call
xchg
outsb
sub
shrl
arpl
mov
shl
pop
push
ds
lret
xchg
mov
sahf
and
cmp
sbb
jle
and
or
jecxz
aaa
pop
or
cltd
rorb
fucom
xchg
jg
out
cmp
or
imul
arpl
mov
nop
sub
pand
and
mov
sbb
test
adc
sbb
mov
jae
pop
daa
aam
mov
into
adc
xchg
pushf
inc
jle
pop
inc
addr16
shlb
insb
sbb
loop
out
repnz
dec
xor
push
inc
cmpsb
out
adc
or
pop
push
and
loop
xorb
call
push
xlat
pop
xchg
stc
adc
lds
sub
push
xchg
jle
adc
mov
movsb
mov
sub
jnp
ret
enter
outsl
fs
lods
repz
faddl
inc
cmp
push
fdivs
lahf
mov
cmp
movsl
and
xchg
mov
cmpsb
aam
jge
sbb
in
test
loop
pushf
push
jne
sub
test
pop
mov
sub
iret
popf
add
lcall
inc
pop
rcrl
mov
int3
push
and
pop
xchg
mov
bound
fwait
daa
xchg
out
xchg
inc
push
adc
loop
int3
inc
lret
dec
fldenv
push
cmpsl
aaa
mov
and
pop
insl
fstpt
sub
sbb
dec
and
mov
cmpsb
lahf
xchg
xchg
xor
mov
xor
shl
and
dec
test
mov
jns
cmp
adc
adc
mov
xor
cmp
cli
lahf
mov
cwtl
or
dec
jmp
ljmp
je
or
in
ret
sarb
cmp
cmp
cmp
ljmp
add
jno,pn
dec
jmp
pop
jne
jnp
sbb
leave
push
gs
test
shrl
test
xchg
inc
pop
fistpll
and
lcall
jg
in
jne
imul
mov
push
mov
adc
jp
lea
pusha
sahf
or
sbb
vcvtps2dq
nop
jo
cmp
jmp
ret
and
test
out
push
cld
inc
bound
xor
sbbb
add
das
mov
xor
imul
xchg
arpl
dec
xchg
shl
sub
fsqrt
vpshufd
and
mov
das
fdivrp
push
pop
in
mov
rol
pop
scas
mov
push
fcomps
shl
push
test
jl
mov
mov
sahf
push
lock
inc
fcmovbe
cmp
popf
pop
sbb
sub
pop
mov
fisubrs
mov
pop
pop
add
and
jb
cmp
aaa
lock
out
ret
inc
adc
xchg
lods
dec
mov
xchg
sub
jo
sbb
dec
xchg
add
adc
test
sub
fs
inc
mov
jmp
push
xchg
movsl
test
cmp
or
ret
std
outsb
inc
fisubs
stos
inc
add
arpl
inc
into
inc
sbb
mov
inc
jle,pt
and
dec
and
jae
cmp
or
stc
out
mov
loope
ja
dec
push
es
xchg
arpl
sbb
push
hlt
pushf
jl
addr16
xchg
mov
cs
jno
mov
push
bound
filds
or
das
int
roll
enter
push
lea
scas
outsb
sbb
mov
push
mov
inc
mov
iret
js
mov
adc
push
dec
jne
loop
mov
inc
and
inc
mov
mov
lahf
dec
repz
lret
mov
shrb
sbb
xchg
loope
inc
sub
xchg
and
or
sbb
cmp
mov
and
dec
nop
mov
mov
dec
cmpsl
lea
add
in
add
pop
cmp
mov
mov
sbb
jg
sub
mov
movsl
bound
mov
jl
insb
daa
xor
push
inc
sub
outsb
sub
adc
inc
leave
mov
mov
pop
je
cmpsb
mov
cmp
mov
aas
mov
test
xchg
add
mov
jmp
adc
ffree
lahf
inc
mov
shr
outsb
fs
movsl
ret
dec
or
jns
inc
xor
repz
sub
in
test
pop
loopne
push
cli
mov
stos
fstp
mov
inc
add
push
and
or
sbb
fildl
add
xor
in
adc
xchg
jl
movsb
loope
inc
add
loop
fidivl
add
jne
mov
mov
push
mov
xchg
cmpsl
or
add
pop
cs
mov
pop
stc
stos
or
adc
lret
les
lock
xchg
mov
xchg
mov
push
arpl
pushf
add
mov
andl
cmp
in
movsb
jp
pusha
ret
and
mov
ret
lret
pmaxub
cmp
leave
lret
adc
insb
test
stc
aad
cmpl
sbb
data16
inc
jmp
add
clc
int3
pushf
aaa
aas
cmpsb
movsl
enter
inc
xchg
iret
rcrb
in
data16
jp
repz
or
leave
sub
push
inc
mov
call
pop
and
cs
jp
mov
jb
xchg
mov
shll
test
mov
jb
push
outsb
in
xor
inc
mov
mov
sbb
inc
pop
out
lds
dec
out
fs
lret
rorb
ljmp
cli
aas
lret
enter
mov
or
xchg
call
inc
sti
push
fbld
jne
xorl
mov
or
sub
xchg
jmp
xlat
dec
push
fbld
fmuls
mov
sub
insb
push
cld
notb
enter
pop
mov
mov
mov
push
popf
ljmp
or
jne
lock
push
loop
xor
inc
push
mov
call
add
pop
jno
scas
jp
mov
dec
adc
or
jo
jno
adc
sbb
clc
imul
sub
enter
subb
add
rorb
pop
push
inc
mov
rcrl
enter
icebp
xchg
stos
mov
mov
scas
mov
mov
jns
outsl
add
mov
lods
incl
xor
cmp
iret
sub
push
ds
dec
push
test
mov
sub
xchg
mov
mov
xchg
out
data16
ja
mov
lock
test
fdivrs
lahf
in
sub
mov
test
fstl
lahf
jecxz
scas
fnsave
cmpb
sub
cltd
or
xor
sub
int3
test
jle
push
cmp
push
jns
dec
jno
xchg
cmp
jge
inc
mov
lret
sub
insl
or
mov
pop
or
dec
sti
xor
and
in
pushf
add
xchg
xchg
add
cs
das
idivl
nop
and
and
mov
lods
push
xlat
incb
jge
imul
mov
aas
xor
lret
adc
mov
xchg
jmp
xchg
lahf
or
cli
mov
or
jg
das
das
sub
push
addl
outsb
adc
out
adc
pop
loopne
aas
jb
jns
dec
scas
ds
adc
add
pop
icebp
jns
hlt
pop
es
add
dec
jno
jnp
dec
inc
ja
pop
aad
stc
lret
pushf
mov
scas
jae
int
cmp
movups
scas
cli
push
or
repnz
sarl
int
aas
in
pop
scas
insl
scas
jl
and
xchg
fiaddl
inc
dec
xor
cmp
fsubrl
dec
xchg
or
iret
call
mov
andl
in
iret
aas
aam
sbbl
xor
lock
cs
shll
incb
cmp
inc
push
push
int3
mov
inc
enter
rcrl
aad
stc
push
sub
insb
cmp
add
push
mov
xchg
cmp
mov
pop
cld
bound
jecxz
outsb
fildll
or
adc
pusha
mov
push
jbe
test
sub
cmp
xchg
sbb
or
mov
repnz
fsts
outsl
xchg
sarb
push
in
mov
pop
mov
jbe
mov
shlb
sbb
cmp
cmove
outsl
xchg
mov
daa
add
xor
push
inc
push
jecxz
sahf
cmp
in
xor
ret
and
xchg
and
sbb
and
xlat
mov
mov
mov
mov
inc
or
lock
jge
daa
dec
outsl
clc
nop
sbb
pop
push
cmovp
mov
fidivrs
clc
in
sub
mov
popa
cltd
pop
xor
hlt
dec
sub
jl,pt
pusha
pop
lahf
mov
mov
and
xchg
pop
push
daa
rorl
ja
popf
shrb
sahf
inc
movsl
in
lahf
push
stc
jg
out
lock
nop
push
sbb
xor
mov
mov
sub
lock
shll
clc
add
mov
loop
sub
aas
repz
in
popf
inc
ss
dec
sub
js
add
pop
stos
stos
xor
mov
fs
test
out
out
and
int3
mov
xchg
pop
fnsave
mov
sbb
dec
out
repz
cmp
imul
les
lret
stos
out
stos
std
or
aam
mov
sbb
popa
lods
jno
lock
cmp
inc
cwtl
test
cld
or
mov
sbb
mov
into
loopne
dec
mov
sub
test
cld
sbb
ret
hlt
dec
adc
xchg
test
jns
xchg
adc
stos
push
fnstenv
pop
les
sahf
mov
outsl
in
adc
xchg
add
out
add
push
loopne
hlt
jl
adc
aas
popf
and
pop
aad
and
xor
fidivl
cmc
div
cmp
bound
cli
sbb
sbbb
jo
lcall
pushf
xor
push
sub
pop
or
jns
cli
push
ror
mov
pop
scas
stc
scas
cmpsb
add
adc
add
inc
outsb
jle
popf
aas
jp
mov
and
add
mov
xchg
xor
ret
xchg
cld
stc
sub
sbb
dec
call
and
mov
and
mov
xor
lcall
inc
in
jbe
shl
push
fsubrs
push
add
scas
push
xor
cwtl
fbld
xor
jl
xchg
push
ds
xchg
dec
mov
out
leave
fisubs
stos
out
ljmp
jb
lock
mov
mov
imul
inc
insb
cmp
jo
arpl
mov
ljmp
push
call
scas
xor
mov
cmp
mov
add
and
jge
out
fldln2
and
xchg
cltd
aam
pop
stos
mov
lcall
loope
sbb
cmpsl
cmp
xchg
cmp
nop
push
sbb
jp
or
bnd
sahf
cmp
or
dec
pop
aaa
stc
mov
es
movsb
push
add
cmpsl
cld
loope
mov
mov
jmp
ret
pop
icebp
mov
adc
dec
push
dec
xor
xor
incl
xor
ja
sahf
pop
push
testb
bound
repz
mov
test
into
mov
outsl
sbb
jo
push
mov
mov
hlt
mov
outsb
mov
mov
xchg
pop
pop
dec
movsb
nop
cmpb
clc
lods
icebp
xor
sbb
mov
and
andb
inc
ret
inc
or
test
jge
rcrl
popa
xor
out
push
jo
stos
int
loope
and
mov
pop
arpl
sahf
icebp
add
cmc
sbb
loopne
jl
movsb
sarl
mov
sarl
or
mov
out
and
movsb
jbe
jnp
xor
test
sub
pop
cmp
pop
test
jne
mov
push
fstpl
aaa
dec
jb
or
xchg
pop
add
and
incl
bound
je
popf
mov
ljmp
or
add
or
xchg
or
pop
pusha
push
fldl
jmp
aad
ja
sbb
or
mov
fldl
mov
add
test
inc
sti
cmp
sbb
arpl
dec
gs
jecxz
sub
mov
sbb
out
loop
cmp
cmp
mov
sbb
out
andl
cmp
mov
sarl
sbb
jbe
sbb
mov
mov
cmpsb
pop
cmp
push
push
and
aaa
or
test
adc
sbb
or
fcmovu
and
add
pop
jl
jbe
xor
or
movsl
push
in
call
mov
xor
lods
aas
cmpsl
call
rcll
rcrl
jo
or
pushf
dec
and
add
loope
repz
mov
out
fsubs
mov
push
xchg
mov
sbb
push
inc
pop
aas
mov
loop
sub
es
cmc
aaa
nop
add
mov
iret
movsl
or
repnz
lret
and
inc
xchg
leave
fistpl
out
mov
imul
jecxz
mov
adc
stc
inc
inc
dec
cwtl
and
es
mov
lahf
jo
movsl
test
xor
sub
iret
xor
mov
push
pop
xchg
out
divb
repnz
xor
and
push
mov
xchg
and
pop
cmp
mov
je
lret
hlt
std
inc
lret
cs
push
push
mov
or
push
fidivrs
inc
inc
jg
jmp
mov
jecxz
loopne
mov
xchg
arpl
mov
and
leave
movsb
add
adc
ss
bound
insl
pop
fdivp
dec
xchg
dec
fstps
pop
ret
or
lea
bound
mov
lret
arpl
lahf
neg
xlat
sub
adcb
pop
shll
cmp
inc
pop
pop
and
or
test
xchg
sbb
stos
sbb
push
mov
mov
xchg
movsl
mov
and
lcall
sbbb
add
test
bound
mov
lcall
xor
dec
mov
cvtps2pi
in
jbe
cltd
cmp
sub
xchg
push
add
push
dec
dec
sti
jbe
pop
outsl
inc
lods
mov
pop
jge
push
cltd
loope
mov
call
dec
movsb
lea
cmc
int3
sarl
jg
dec
jb
into
mov
fists
pop
nop
adc
sbb
and
in
icebp
xorb
imul
insl
push
bound
fcmovnu
loopne
ds
mov
or
lds
fldl2t
sbb
rol
xchg
std
insb
imul
aaa
pop
dec
xor
sahf
lods
jge
std
nop
mov
aaa
insl
out
clc
sub
add
add
iret
out
xchg
dec
les
rcr
push
jp
stc
int3
dec
or
out
push
mov
ds
jmp
stc
out
push
xchg
cld
and
pop
sub
js
outsb
enter
sarl
jae
pop
adc
add
add
fstps
push
int3
mov
xor
sti
das
mov
jp
dec
imull
push
xlat
add
test
int
pop
mov
pop
jle
notb
jmp
inc
mov
cs
das
mov
loopne
and
addr16
cmp
lret
sub
lret
pop
pop
out
push
cltd
cmp
jb
and
gs
xor
out
xlat
divb
mov
jl
rcll
int
mov
pop
out
arpl
mov
into
mov
mov
jmp
inc
and
lds
sbb
cmp
mov
lret
sub
in
loopne
jg
adcl
xlat
addb
rcll
je
dec
xor
imul
enter
add
xor
lret
push
icebp
test
mov
das
out
ret
adc
jmp
sarl
inc
aaa
out
add
adc
mov
inc
out
in
lret
out
mov
outsl
xchg
adc
test
mov
sahf
mov
shlb
test
xchg
or
adc
inc
xor
inc
inc
ja
mov
add
or
ret
arpl
jmp
out
clc
test
xchg
inc
rcrb
adc
jge
loopne
pop
xchg
sti
inc
push
mov
ss
mov
test
cld
sub
data16
lods
mov
jns
jg
or
push
push
sbb
icebp
int3
mov
jmp
mov
xchg
mov
mov
pusha
cmpsb
ss
push
mov
dec
imul
pop
add
testl
test
jecxz
dec
jns
push
mov
sbb
jnp
je
lea
xor
movsl
xor
sbb
xor
das
push
pop
loope
sbb
imul
outsb
rclb
mov
lcall
add
mov
outsb
movb
push
mov
jmp
shlb
andl
das
insl
rcrb
sub
pop
cltd
cld
lret
xchg
sub
call
and
inc
stc
mov
and
pop
lods
bound
rcrb
inc
stos
ret
fdivrs
outsb
ja
daa
push
aaa
sbb
sub
aad
adc
daa
leave
je
sti
lcall
mov
enter
mov
cmp
xor
xchg
pop
fistpl
mulb
push
cs
cmp
xor
pop
call
add
add
mov
cltd
aam
sbb
mov
adc
jmp
add
dec
fs
es
div
repnz
jmp
xchg
rep
int3
mov
xor
or
fsubs
out
push
mov
lret
cld
xchg
push
mov
in
lea
outsb
mov
dec
pop
rcrb
mov
mov
inc
shrl
addr16
insb
fstps
jecxz
xlat
push
adc
xchg
out
aas
dec
in
loop
movsl
sub
push
in
fs
pop
or
ss
insb
mov
xor
mov
scas
dec
sbb
jbe
mov
push
mov
jb
outsl
pop
push
mov
fcoml
and
xor
xchg
jp
out
in
dec
fucomp
push
lret
cmp
xor
int
mov
andl
hlt
cld
mov
push
or
jecxz
or
add
popf
adc
dec
mov
sbb
inc
stos
dec
call
je
sub
cli
sub
lock
aad
mov
les
imul
push
imul
mov
out
mov
dec
cmp
ss
imul
add
jp
cltd
jl
mov
mov
test
das
pop
xor
test
mov
cmp
fcmove
mov
ds
push
jns
imul
mov
adc
std
int
push
cwtl
enter
pop
mov
sub
rorb
add
test
je
and
popa
inc
xchg
inc
icebp
add
js
sub
in
push
repnz
cli
adc
lahf
pop
inc
cmp
add
mov
xchg
dec
in
sarl
inc
fidivl
jo
xor
mov
clc
lods
adc
pop
jge
sub
stos
popl
sub
ss
xor
incl
mov
mov
test
or
mov
fstl
xchg
add
aad
cmp
inc
cs
mov
xor
push
je
outsb
sub
jecxz
pop
ss
sbb
sub
fldt
and
dec
rcrl
out
sub
popa
iret
and
mov
push
xchg
nop
mov
sbb
ja
pop
and
lret
dec
sbb
adc
ja
mov
push
loopne
and
dec
push
lahf
out
mov
push
loope
sub
sub
jo
sti
sub
das
xor
movsb
pop
jb
fnclex
push
xchg
xchg
mov
xchg
ret
and
and
incl
in
push
inc
cmc
test
mov
sbb
jl
push
hlt
je
jno
cs
dec
lds
jge
jne
sub
bnd
and
push
inc
adc
lret
call
add
jne
ret
rclb
xor
lods
stos
jae
rclb
push
icebp
mov
leave
lret
jb
push
and
cmp
cmpsl
xchg
ret
jns
popfw
pop
mov
sub
negb
lahf
pop
push
inc
scas
mov
sbb
rorb
sbb
xchg
js
sbb
jo
mov
dec
mov
cmp
push
fnstenv
into
pop
std
lea
jnp
jno
pushl
inc
jae
push
inc
xor
and
out
push
mov
adc
dec
fisubl
dec
cmp
xchg
adc
aaa
or
dec
push
dec
sub
ror
loop
sbb
out
out
push
flds
fbstp
sub
aas
add
test
mulb
scas
jno
push
mov
push
cs
cmpsb
in
pop
and
add
aad
jge
mov
fldl
cmp
push
mov
mov
xor
adc
sub
xchg
not
lods
pop
lcall
enter
inc
cwtl
hlt
data16
into
adc
pushl
repz
rcll
in
ret
pop
cwtl
xlat
testl
xchg
jmp
fistps
in
inc
push
pop
pop
add
gs
fdivrs
pop
out
inc
lock
dec
jnp
jecxz
pop
cmpsl
out
cmp
stos
in
outsb
lock
arpl
mov
dec
ret
mov
daa
popa
pop
in
fiaddl
loope
pop
fistpl
jp,pt
push
ss
inc
aam
daa
pusha
imul
scas
dec
lock
jns
mov
jle
in
sub
in
push
loop
mov
jae
test
rorl
addr16
dec
int
xchg
ljmp
lret
nop
inc
cmc
es
loopne
xchg
pop
sbb
je
in
pop
adc
mov
fimull
out
mov
mov
fdivrp
xchg
fcomp
push
jp
cmp
push
loopne
loop
pusha
movsl
das
cltd
sahf
pop
push
cmp
cmp
inc
mov
xchg
jle
lods
enter
xor
ss
lret
lcall
sti
test
ljmp
out
mov
scas
inc
mov
push
lock
lcall
or
cmpsl
mov
push
push
cs
sti
rcll
adcb
pusha
int
repnz
push
or
test
mov
fs
call
or
flds
movsl
push
outsl
cmp
repz
jge
add
sub
out
xchg
addb
jo
adc
xor
lahf
out
add
jmp
rcrl
repz
inc
aam
rolb
in
mov
roll
push
push
or
pop
lock
dec
punpckhdq
lods
aas
test
sub
cmp
pop
imul
clc
sub
sub
into
out
out
test
lods
mov
add
lock
jp
sbb
imul
loope
gs
stos
aaa
addr16
loopnew
nop
adc
mov
adc
outsl
cmp
jmp
insl
lods
sub
jle
inc
das
push
mov
hlt
adc
pop
mov
cmp
jg
negl
push
popf
sbb
xchg
clc
leave
sbb
dec
loopne
inc
cmc
sbb
enter
rcrl
inc
movsb
in
jge
sub
sarb
icebp
cmp
jmp
stos
mov
xor
cmp
push
loop
cmc
sbb
mov
xchg
mov
out
or
mov
ja
pusha
dec
inc
sub
data16
sbb
aaa
ja
mov
cltd
pushl
inc
setne
das
cld
push
lea
cmpsb
fildl
mov
bound
mov
subl
jns
dec
std
out
cmp
test
inc
into
pushf
mov
in
movsb
sbb
push
rclb
dec
xor
pop
push
es
popa
loop
rcll
insl
pop
cmpsb
xchg
mov
aas
mov
push
aas
push
sbb
cmp
cltd
cli
pop
test
push
mov
pusha
shlb
pop
not
sub
test
mov
inc
sbb
dec
mov
mov
adc
inc
cmc
testl
je
mov
fbstp
jns
lock
faddl
negb
adc
cmpsl
xor
xor
mov
rclb
jbe
adcb
xor
jne
lds
sbb
out
in
xchg
xchg
mov
inc
adc
in
std
mov
or
cs
push
imul
jbe
mov
mov
push
xchg
idiv
adc
outsb
in
subb
js
jmp
inc
cmpsb
push
cmc
repz
pop
pop
ficoml
shl
sahf
outsl
add
cwtl
and
cmp
or
popf
xchg
cwtl
mov
xchg
ja
int
pop
sbb
pushf
leave
ret
cs
push
xor
inc
pop
imul
mov
and
sets
in
and
sbb
pop
adcb
notl
push
test
xlat
cmp
enter
insl
sub
push
cmc
cld
nop
ds
sti
adc
js
popa
mov
dec
push
pusha
fcos
cli
sub
test
and
popf
mov
mov
mov
rcrb
mov
cld
movsl
xor
sub
ljmp
dec
cmp
cmc
xor
inc
outsl
lret
aad
xchg
or
sbb
or
lock
push
sar
loope
cmp
xchg
mov
in
mov
push
push
cld
pop
push
mov
in
insb
xchg
cmp
and
add
es
dec
pop
pushf
xor
dec
pop
enter
js
mov
test
xchg
mov
pop
xlat
pop
shrb
add
aaa
jmp
add
sahf
fidivl
jnp
cli
movsb
movsb
out
jmp
push
mov
mov
cmp
mov
loop
fmul
sbb
and
and
mov
fidivrs
shrb
xor
fwait
icebp
rcll
std
mulb
xor
outsl
sub
repz
decb
fbld
mov
cmp
outsb
mov
adc
stos
inc
jbe
add
data16
jg
xrelease
sbb
cs
aaa
out
dec
inc
mov
adc
dec
and
inc
cmp
ds
jns
jle
mov
or
call
out
mov
mov
aaa
cmp
pop
xchg
loop
call
mov
push
rolb
leave
xchg
fmulp
xlat
xchg
mov
ret
xchg
xchg
sub
ja
or
dec
in
mov
out
lahf
movl
or
pop
xchg
stos
insl
mov
jecxz
pop
in
pop
test
dec
test
add
mov
shll
pop
es
movsb
jno
jno
and
adc
xchg
mov
add
adc
lds
sarl
fimuls
fdivl
imul
ss
push
and
xchg
aas
jmp
mov
mov
push
inc
test
clc
out
pop
divl
xchg
mov
outsl
dec
jae
gs
mov
ss
cmpsl
jl
cmc
mov
xor
push
push
sbb
fiadds
xor
pop
stos
mov
das
fwait
aad
adc
orl
adc
shl
dec
or
pop
mov
push
adc
bound
cmp
add
and
lods
out
in
pushf
inc
inc
aad
stos
es
inc
fidivl
out
mov
cli
loope
cmp
dec
xchg
pop
data16
mov
pusha
jecxz
fmul
mov
jp
stos
ljmp
jge
jno
sbb
push
outsb
sbb
outsb
lret
push
mov
mov
popf
and
push
cwtl
bound
mov
fistpll
neg
aad
aam
mov
out
add
pop
vpmullw
call
pop
stc
rcr
adc
cmp
sub
pop
fs
xchg
ret
jnp
xchg
mov
sub
imul
neg
cmp
frndint
les
inc
lcall
pop
cmc
int3
fsubs
sub
aas
loopne
xchg
pop
jae
and
out
sub
jl
mov
stos
push
mov
sub
std
xor
imul
mov
es
int
or
mov
xor
xchg
and
sub
pop
shll
or
call
test
pop
inc
orb
jmp
pop
jp
std
add
ds
aam
mov
fimuls
xorl
popf
ret
add
cmp
repz
inc
sub
push
insl
in
pop
ret
mov
adc
repz
xor
inc
mov
pop
lret
pop
inc
out
pop
sbb
mov
adc
mov
and
scas
jnp
cmp
xor
dec
mov
sbb
cltd
mov
scas
rcrb
icebp
cmp
jno
mov
push
jp
insb
stos
and
pop
movsb
jl
mov
dec
mov
sub
mov
xchg
stos
cld
fs
mov
and
push
jecxz
je
sbb
hlt
and
aad
cmpsl
loope
stos
pop
adc
sub
mov
mov
push
and
jne
mov
out
inc
das
adcl
xchg
sub
dec
jge
movd
jno
aaa
or
shll
inc
sahf
and
xor
sbb
cmp
pop
or
test
or
mov
sub
push
pop
mov
bound
xlat
pop
mov
sbb
xor
divl
popf
lahf
loopne
jmp
cmp
lret
sub
lds
xchg
xor
bound
xchg
js
sbb
cmp
pop
int
xchg
or
jmp
incl
out
js
dec
rolb
mov
je
or
cltd
sbb
sbb
add
leave
loope
add
or
je
js
or
scas
xor
sub
daa
in
jmp
mov
ds
inc
negb
ret
int3
pop
lods
cmp
jle
pop
xchg
inc
adc
ret
inc
xchg
sbb
mov
je
rcl
mov
sub
mov
push
and
out
inc
pop
mov
mov
das
addb
pop
add
jp
dec
xchg
push
mov
xchg
jno
push
xchg
shr
test
inc
test
mov
rolb
inc
daa
jo
aas
sub
mov
xchg
mov
rclb
aad
mov
mov
outsl
test
imul
adc
hlt
mov
mov
popf
sbb
test
add
inc
out
aad
jle
mov
sbb
inc
cmpsl
jo
add
cld
repz
nop
cmp
push
jl
enter
mov
sub
mov
sub
and
jns
mov
mov
jbe
add
add
or
cld
or
pushf
mov
lcall
and
daa
push
leave
pop
jg
mov
adc
mov
repz
sbb
out
sbb
push
imul
cmp
fwait
add
movsb
lods
ja
cmp
or
pop
push
inc
cs
ret
dec
roll
test
ljmp
mov
mov
add
pop
or
pop
call
jo
popa
adc
jmp
divb
imul
jge
sbb
pop
stos
lock
sbb
or
jmp
mov
push
dec
push
or
sbb
les
inc
xchg
imul
sub
jno
out
xchg
insl
xchg
rorb
je
pop
cmp
cmp
mov
fisttpll
call
les
mov
or
xlat
jo
mov
pushf
insb
je
sbb
jle
xchg
cmp
push
fstpt
sbb
push
pusha
iret
mov
pxor
clc
inc
stos
sub
jecxz
stc
test
dec
ds
push
enter
jno
dec
inc
push
and
pop
sbb
and
dec
mov
shrb
mov
mov
xchg
in
mov
in
clc
push
into
lahf
and
repz
data16
cmpsb
and
xor
xchg
sub
pop
fiadds
or
sahf
call
or
and
jae
jae
movsb
popf
sbb
mov
and
sahf
pop
pop
dec
cwtl
hlt
lea
insb
scas
add
dec
mov
hlt
mov
out
push
and
sbb
or
inc
dec
add
push
scas
xor
pushf
out
scas
ljmp
inc
xchg
or
inc
outsb
jbe
imul
inc
dec
jge
inc
cmp
jl
int
jle
jg
adc
roll
mov
jbe
std
sarb
mov
in
inc
cmc
cmp
jno
pop
cmpsl
add
scas
and
dec
sahf
arpl
fwait
sbb
repnz
fldt
pop
dec
test
idivb
lock
aas
mov
push
sub
jecxz
adc
add
jmp
pushf
pop
fistps
mov
add
adcl
and
lock
test
cmp
jnp
xlat
rcrl
xchg
ljmp
addb
mov
lds
pusha
fsubrl
sbb
outsl
aam
inc
outsb
add
mov
ret
jecxz
or
movsl
int3
nop
loop
rcr
shll
xchg
jae
add
mov
pop
mov
cmpsl
fidivrs
subl
call
ds
lock
stc
adc
or
sti
jo
fadd
iret
imul
pusha
fcompl
cmp
dec
data16
mov
pop
sub
in
mov
in
enter
cmp
ja
and
int
rolb
cmpsl
fs
dec
loop
sub
scas
lds
bound
fiaddl
std
cmp
cmpsb
jae
icebp
roll
int
inc
enter
add
addr16
aaa
pushf
scas
mov
out
ds
push
pop
aaa
inc
push
xor
sti
dec
je
and
rorl
in
push
ret
push
shrb
or
push
ss
aad
mov
push
in
inc
xlat
xchg
lods
fldenv
lock
insl
movl
dec
push
cmpsb
or
and
mov
mov
insl
scas
movsl
call
adc
sbb
cmpsl
mov
repz
rorl
icebp
mov
inc
sbb
adc
fmull
mov
shl
sbb
mov
sub
push
xchg
mov
cli
inc
shr
scas
lret
push
adc
pop
dec
mov
pusha
jmp
cld
push
cltd
xor
inc
lcall
xor
add
sbb
or
test
orb
fmulp
or
mov
inc
mov
adc
cmpsb
adc
lcall
and
push
sahf
gs
xor
popf
pop
mov
adc
int
aam
mov
subl
shl
xchg
xor
jl
lahf
mov
xlat
aaa
popa
nop
xbegin
dec
lds
pop
addl
pop
dec
testb
sbb
pop
sub
int3
rclb
in
fidivl
int
cld
popf
loope
pop
fildl
in
lea
dec
pop
add
xor
pusha
mov
leave
sub
mov
mov
jb
inc
and
call
jle
negb
inc
call
lods
in
xor
xchg
dec
sub
push
out
mov
bound
popf
mov
das
ljmp
jne
cmp
or
std
jp
mov
and
inc
xor
xrelease
pop
lods
lods
mov
or
leave
dec
ret
xlat
xchg
push
and
in
or
rcrb
ds
dec
mov
push
addl
sysexit
dec
or
mov
xor
cmpsb
or
or
repnz
popa
es
pop
sbb
inc
cmp
push
adc
iret
pushf
outsb
inc
pop
pop
sub
push
shll
mov
in
dec
out
aaa
mov
jmp
andl
adc
imul
inc
nop
aad
add
lea
lods
shlb
mov
movsl
mov
int
test
in
cltd
shl
mov
movsb
test
mov
scas
fidivl
xor
pop
mov
rol
sti
out
add
pop
push
sub
aaa
or
push
mov
push
cwtl
adc
add
add
dec
fwait
js
adc
and
mov
cs
add
add
fwait
insl
dec
or
mov
bound
clc
ds
insl
popf
sub
orl
mov
xchg
ret
xchg
outsl
hlt
int3
adc
and
mov
in
mov
lahf
mov
inc
push
imul
icebp
inc
sysexit
out
loopne
popa
sbb
test
mov
push
ss
mov
fstl
test
test
cmp
push
cld
cmp
int
jmp
stos
aam
push
push
pop
push
cs
pop
scas
sbb
push
xchg
mov
aad
mov
mov
adc
push
rorl
push
push
out
cmpsb
xorb
xor
sub
mov
test
imul
out
in
and
jne
push
es
rep
add
xchg
lods
lock
dec
out
scas
neg
aam
ss
gs
js
cmp
mov
inc
xchg
jecxz
sub
mov
ds
mov
stos
cmp
inc
xchg
jl
xchg
dec
rcrb
fdivp
jle
out
adc
add
ja
sbb
dec
or
jne
adc
jmp
push
shlb
cmp
loop
pop
clc
sarb
js
xor
out
push
aaa
iret
rcrb
adc
sbb
out
and
negl
out
cltd
sti
ss
loope
sub
mov
fildll
data16
loopne
mov
push
sbbl
or
jne
imul
daa
jbe
pop
xchg
pop
add
ret
and
arpl
in
stos
cmp
inc
push
fcoms
cltd
or
dec
push
jbe
pop
inc
adc
sahf
dec
mov
mov
mov
scas
fisubs
add
bound
push
mov
js
add
push
sar
popa
sbb
mov
cmc
mov
std
cmp
jno
lret
or
dec
mov
xchg
push
mov
mov
jns
mov
xor
jmp
insw
mov
inc
scas
cmc
mov
fidivrl
mov
into
lods
repnz
jle
jo
int3
loop
mov
jp
mov
cwtl
jg
xor
dec
pop
jne
and
sahf
aaa
inc
add
dec
fwait
xchg
mov
jl
and
dec
scas
and
aas
aam
sub
sbb
ror
mov
cmpsb
cmpsb
dec
cmc
pop
dec
ret
sbb
jge
jae
push
sbb
ficomps
dec
push
push
cmp
or
mov
in
ret
push
mov
adc
int3
mov
clc
or
jns
mov
adc
sbb
push
lods
sbb
test
and
sbb
jmp
jno
repnz
sbb
inc
call
mov
sub
xor
push
cld
pop
leave
or
js
jge
fisubrs
sub
push
cmpsl
push
push
in
cld
or
add
cld
push
mov
shr
icebp
pop
cmp
xor
xchg
scas
inc
mov
mov
nop
sub
mov
mov
mov
lock
xor
addb
or
cmp
aaa
mulb
inc
cmp
gs
hlt
and
and
scas
test
popa
mov
jg
mov
sub
call
scas
daa
popf
lret
lds
sbb
xor
shll
and
test
xchg
scas
test
scas
mov
in
dec
push
mov
jnp
mov
lahf
mov
hlt
call
sub
mov
fs
adc
push
mov
adcb
xchg
cs
inc
jge
add
and
call
sub
xchg
insb
les
loope
mov
mov
divl
imul
cmp
push
and
fcmovu
data16
lahf
sub
or
arpl
cmp
push
jg
ret
pop
xchg
cmp
add
scas
lds
push
push
xor
clc
add
or
incl
test
lods
or
ret
inc
int3
jno
mov
dec
xchg
adc
out
add
xorb
jne
pop
fs
jb
push
in
add
fxch
fidivrs
xor
mov
aaa
inc
aaa
call
push
xlat
mov
sub
loopne
jmp
repnz
mov
add
sbb
push
cmp
stos
sub
jae
lret
dec
jo
xchg
pop
in
cltd
imulb
jp
mul
clc
lret
add
addr16
and
mov
stc
dec
cmp
imul
xchg
dec
lock
jmp
jnp
mov
sbb
ret
mov
sbbl
xor
pop
adc
or
iret
push
push
xor
push
loope
cmp
addr16
mov
mov
rolb
xor
ja
push
into
loopne
rorl
fdivl
sti
shlb
ficompl
cwtl
mov
imul
and
addb
pop
cmp
sahf
or
movb
and
sub
pop
cmp
inc
insl
cmp
mov
xor
lock
test
bound
ud0
pop
hlt
jbe
mov
std
sub
add
fisttpl
sbb
sub
pop
mov
adc
mov
cmp
inc
inc
jb
movsl
movsl
sub
inc
clc
fiaddl
dec
stos
mov
nop
mov
les
xor
jno
sub
jbe
and
cmp
or
cs
or
sub
push
daa
adc
pop
add
gs
aaa
movsb
and
ret
movsb
or
xchg
mov
xor
adc
mov
hlt
scas
fsubrs
in
push
jecxz
inc
jge
push
idiv
jns
mov
push
rorl
mov
outsl
sub
rcr
push
pop
lcall
lock
ret
xor
pop
nop
dec
push
and
xlat
xor
in
icebp
stos
mov
in
cs
repz
jg
dec
movsl
aad
mov
rol
sbb
lods
shrl
rcl
cmp
or
mov
inc
jp
and
shll
repnz
movhps
sub
push
xor
or
or
stos
mov
pusha
sub
popf
sub
sub
pop
inc
jge
add
in
in
jmp
frstor
pushl
fwait
push
lret
inc
pop
or
fmull
pop
ficoms
cmpsb
mov
in
ljmp
dec
addb
leave
in
mov
fbld
in
cmpsb
movsl
push
bound
xchg
pop
fistpl
push
add
ljmp
mov
jl
pushf
vcvtsi2ssl
xor
pop
cmc
jge
and
add
cmp
sahf
adc
je
andb
mov
arpl
fcom
add
scas
sub
movsl
dec
sti
xlat
or
dec
inc
aam
aaa
push
fxtract
add
repz
loope
mov
je
negl
cld
ljmp
pop
pop
xchg
jge
sahf
jae
mull
fdivl
jle
jmp
sub
je
jns
inc
outsl
lret
adc
pop
into
testb
and
aam
test
add
fwait
cmp
test
loopne
push
jp
loope
xchg
pop
dec
cld
mov
lcall
jg
fldl
jle
adc
ret
xor
out
mov
mov
push
lahf
stos
iret
adc
insb
das
push
pusha
rorb
scas
aaa
mov
stc
mov
cmp
dec
mov
ret
inc
mov
fistps
mov
adc
mov
mov
or
ret
pop
jo
xor
test
popa
cltd
test
mov
rcll
scas
test
inc
outsl
fs
sub
lds
icebp
add
push
fwait
mov
pop
leave
inc
mov
add
inc
fmull
sub
sarl
popf
add
inc
iret
int3
sbb
inc
cs
cmp
mov
cwtl
inc
nop
popa
xchg
mov
pop
mov
add
sub
pop
jl
decl
cwtl
mov
ja
xchg
insb
dec
or
push
mov
mov
xchg
jne
push
jbe
ljmp
movsl
push
call
mov
rolb
adc
adc
movsl
adc
and
nop
dec
add
and
jmp
cmp
ja
cmp
xor
es
gs
mov
and
popa
orb
stos
mov
xchg
test
xchg
fnstenv
mov
xor
or
pop
scas
and
insb
repnz
mov
and
js
xchg
ljmp
xchg
mov
sbb
add
les
dec
dec
das
gs
push
aaa
cmp
dec
jecxz
mov
or
or
or
shl
inc
into
push
xchg
in
push
xchg
jl
xchg
and
gs
and
enter
mov
jne
pop
enter
mov
xchg
fnstenv
cmp
leave
pop
daa
add
and
adc
sbb
xlat
mov
jle
xor
into
mov
mov
movsl
mov
shlb
cmp
stos
sbb
push
test
imul
xchg
pop
js
push
out
aam
dec
cmpsl
dec
ror
out
or
jno
sub
and
add
xor
clc
xor
xlat
jo
and
jle
cmp
sub
leave
pop
push
in
sti
push
stos
shl
dec
xorl
and
pop
adc
out
sbb
inc
iret
lea
mov
clc
mov
outsb
and
test
mov
cmp
out
insl
je
testl
xor
or
jmp
jg
repnz
insl
fnstcw
cld
sbb
andl
or
in
pushl
stc
adc
xorl
or
test
pop
icebp
lcall
dec
mov
xchg
mov
adc
rcrb
jnp
jo
ret
xchg
cmpb
lret
movsb
mov
leave
sahf
sbbb
fidivrl
lahf
push
mov
lahf
or
adc
jmp
sbb
adc
out
loope
adc
and
pop
dec
sub
jb
lret
out
ljmp
jl
lock
push
pop
adc
lret
gs
mov
push
hlt
lock
xor
or
in
jg
icebp
icebp
dec
add
stos
outsl
inc
xchg
xchg
xor
sub
imul
mov
jo
movsl
fdivl
imulb
ja
movsl
mov
lock
mov
sbb
dec
inc
mov
cmpsl
out
xchg
lods
jnp
sahf
pop
es
adc
mov
jmp
outsb
rcr
dec
out
lret
lods
jnp
loope
lahf
loop
dec
sub
xor
int3
dec
mov
cmpsb
outsb
dec
xchg
bound
int
ds
cmp
jnp
bound
sbb
bound
addb
inc
mov
jmp
test
fstpt
or
insb
or
mov
jne
xchg
jmp
hlt
sbb
mov
cmp
jne
shl
or
jge
cmp
ficoms
mov
in
loop
shll
stos
dec
arpl
test
mov
int
pop
or
shr
or
shlb
sub
sbb
shll
xchg
popl
insb
outsb
push
cmp
int
push
or
xor
add
pop
in
gs
cmpsl
mov
notl
or
and
cmp
ret
rol
and
mov
and
pop
scas
inc
addr16
mov
lcall
loopne
add
dec
jecxz
sbb
cmpsb
adc
inc
call
aam
adc
jl
push
popa
pop
jmp
xchg
dec
and
sub
lret
icebp
imul
jecxz
lcall
aas
call
jecxz
test
clc
scas
imul
subl
mov
jb
or
inc
ljmp
add
mov
dec
icebp
push
sbb
movswl
mov
mov
mov
mov
fcmovbe
lods
mov
pop
cmpsl
ror
sbb
shll
inc
lock
neg
sar
shlb
mov
mov
xchg
pop
daa
jmp
sarl
iret
jns
mov
mov
fcomip
test
or
insb
pushl
std
mov
inc
lds
xor
sub
sbb
fildl
dec
mov
lret
and
and
test
adc
dec
push
push
push
cltd
lret
dec
push
insl
mov
hlt
cwtl
in
rolb
fldt
xchg
xchg
aas
mov
std
inc
call
dec
paddw
xchg
nop
addr16
cltd
movsb
pop
mov
push
mov
insl
aaa
mov
jge
ficoms
mov
shl
and
mov
in
pop
frndint
or
rorb
scas
xchg
mov
rclb
xor
ja
dec
push
out
ret
jg
std
ret
ds
sbb
or
inc
scas
repz
fildll
mov
sub
enter
es
je
sti
mov
adc
int3
and
push
into
or
xchg
dec
int3
shr
sbb
ror
xor
mov
mov
pop
pop
and
out
sbb
inc
fisttpll
pop
repnz
lods
inc
or
push
arpl
mov
imul
mov
or
xchg
pusha
mov
pushf
push
mov
enter
in
push
adc
shll
in
xor
or
pop
or
mov
mov
into
ret
scas
adc
jnp
mov
fs
mov
push
stos
movsb
cmpl
loope
mov
cmpsb
sbb
shl
into
nop
sub
and
je
cli
loop
dec
das
mov
pop
out
pop
cmpsb
les
gs
pop
sbb
pop
xchg
out
rol
mov
popf
cmpl
sub
mov
pop
inc
cld
dec
add
adc
loop,pn
subb
scas
adc
push
je
adc
bound
cmp
lea
loopne
dec
xor
pop
mov
pop
loope
mov
mov
jno
mov
pushl
fs
jns
add
sbb
xchg
cld
jmp
push
mov
pop
add
je
and
ret
and
mov
lods
incl
and
sbb
out
cmp
lds
mov
jnp
ret
inc
xchg
xor
hlt
into
lret
outsb
jo
xchg
dec
mov
lahf
inc
jb
or
mov
or
cwtl
cmp
ja
mov
dec
adc
js
jns
inc
jb
insl
ss
mov
dec
cmc
loopne
pop
mov
ficomps
xor
iret
xchg
push
sub
mov
out
gs
data16
mov
lods
xlat
leave
xchg
cmp
add
push
outsl
je
xchg
add
dec
cmp
movsb
ja
xchg
out
enter
int3
divl
mov
pop
aas
dec
aad
les
add
js
jns
or
adc
sar
dec
add
mov
aad
push
push
push
mov
sbb
add
and
jbe
push
xchg
imul
jg
jl
std
jle
dec
jb
pop
loopne
sub
cmpsl
mov
lea
fs
insl
movsb
push
and
addr16
jmp
inc
mov
mov
add
sub
cmp
jl
aaa
add
add
sarl
pop
out
jge
mov
mov
adc
add
bound
pop
push
repnz
addr16
pushf
xor
icebp
ja
imul
aaa
xchg
jp
ficoms
int3
mov
adc
xchg
andb
adc
das
xor
mov
inc
ret
sub
rclb
sub
imul
subl
add
xchg
jae
roll
cltd
int
fildl
pusha
movsl
mov
je
decl
sbb
mov
mov
mov
das
fstps
ss
pop
iret
dec
mov
cmpsl
mov
jmp
xchg
jmp
arpl
fwait
or
lret
js
icebp
jge
data16
mov
outsl
shl
pop
mov
sub
fcomps
mov
sti
pop
and
in
jb
sbbb
cmp
in
testl
push
int3
mov
ljmp
mov
cmpsl
xchg
pop
orl
insl
push
hlt
out
inc
js
push
aam
or
cmp
xor
lcall
pop
inc
scas
jae
insb
imul
push
xor
mov
jb
ds
add
push
push
sub
call
inc
rorl
add
mov
ret
mov
fstpl
sarb
add
cmpsb
xor
scas
inc
and
pop
push
lahf
sub
adc
jle
ds
mov
ficompl
xor
and
inc
sub
mov
mov
out
leave
dec
or
mov
mov
je
xor
push
bound
int3
add
and
movsl
pop
cmp
fldt
insb
popa
xor
fsubl
xor
push
xchg
testb
xchg
xchg
pushf
add
in
loop
cmp
fwait
movsb
out
jae
and
or
inc
dec
xchg
or
data16
lea
aam
dec
pushf
cld
cld
ret
fsub
daa
pop
insl
cltd
in
aam
dec
testb
mov
ret
mov
sub
sarb
shlb
dec
pusha
push
divb
xor
subl
mov
shr
testl
mov
gs
sbb
dec
cmp
repz
pop
add
inc
add
das
push
lfs
test
outsl
xchg
mov
repz
xchg
mov
insl
or
cmp
scas
pop
cltd
lods
icebp
add
fdivr
push
mov
xchg
cwtl
or
addr16
cmp
fiadds
pop
push
push
mov
jns
jp
or
pop
xchg
rcrb
arpl
and
das
sarl
xor
pop
out
cmp
adc
cs
jge
mov
push
push
inc
lock
xchg
loop
pop
int
stc
xor
and
xor
mulb
in
enter
std
mov
das
and
mov
push
fildll
and
push
pop
repnz
incl
pushf
xor
cmpb
mov
jae
imul
repnz
cmc
icebp
xor
or
nop
and
mov
fmulp
mov
fidivl
subl
fstpl
popa
mov
cmp
das
nop
mov
jecxz
shlb
or
xchg
dec
jns
xor
cmpsl
add
xchg
or
mov
andb
lcall
in
dec
and
xchg
lcall
mov
cs
fsub
mov
jge
inc
jns
aad
enter
mov
ficompl
fildll
mov
mov
jecxz
push
mov
ja
xorb
fwait
orb
test
mov
les
add
repnz
repz
hlt
jb
and
fwait
js
iret
push
jle
cmp
inc
mov
loop
ss
stos
iret
lahf
loope
jecxz
pop
lahf
sti
int3
xchg
inc
into
pop
jle
push
jp
jne
dec
pop
jnp
mov
es
mov
shr
sahf
sub
xchg
mov
loope
and
cli
add
out
cmp
ds
rorb
arpl
jge
cmp
dec
mov
adcb
and
xor
sti
cli
aaa
cmc
sub
xchg
bound
repnz
jp
pop
je
pop
inc
sbb
and
pop
xchg
rorl
outsl
leave
cmp
pop
or
hlt
or
inc
cmp
inc
pop
insl
jmp
arpl
loope
loope
xor
and
jnp
inc
xor
out
call
pop
loop
mov
push
jnp
dec
in
call
dec
mov
rorl
add
fsubl
or
xchg
cmp
add
xor
sub
repnz
ret
fiadds
pop
jae
rcrl
sbb
adc
and
sub
sbb
xor
pop
bound
arpl
mov
mov
je
jo
imul
aas
and
add
mov
xor
jle
push
ret
pop
inc
cmpb
xchg
in
cs
sbb
divl
push
rolb
xchg
lcall
adc
lods
cmp
and
mov
cmc
sub
hlt
ljmp
inc
cwtl
js
stos
lods
and
jge
mov
outsb
sub
mov
inc
out
test
xor
xlat
sti
jno
aad
ds
fwait
sub
inc
rolb
dec
pop
inc
aam
pop
int
js
or
nop
push
pop
fs
or
dec
mov
cmp
mov
fcoms
dec
mov
mov
jmp
mov
push
xchg
test
int3
add
mov
mov
test
jno
mov
jno
rcrl
inc
pop
xchg
adc
sub
pop
xor
aaa
out
daa
mov
call
insb
mov
mov
shr
push
mov
jbe
xchg
push
xchg
cmc
push
add
leave
xlat
jecxz
aas
ficoml
fwait
movsl
inc
lret
adc
fiadds
sbb
lods
dec
dec
shlb
add
jae
dec
int3
jo
mov
hlt
mov
stc
mov
adc
fdiv
or
push
or
ljmp
xor
and
test
or
inc
sub
xchg
enter
loope
xchg
shll
add
xor
addr16
push
xor
mov
mov
or
push
rcr
lea
fdivs
mov
fdivrl
leave
repnz
out
lds
push
push
insb
out
add
xor
leave
cmpb
inc
inc
jmp
lods
fwait
inc
je
test
scas
ja
shlb
scas
xchg
adc
dec
pop
xor
or
test
mov
out
mov
sbb
inc
and
nop
push
in
mov
in
stos
jmp
int
push
into
sub
push
mov
push
ret
call
pop
mov
push
outsb
movsb
mov
js
xor
imul
sub
stos
push
stc
cltd
rcr
mov
ret
pop
cmp
ja
xchg
sbb
sbb
sub
adc
cmc
add
mov
mov
stc
or
nop
lret
or
cmp
mov
sbb
push
sub
push
inc
jb
fidivs
pop
rcll
xor
mov
cmc
mov
mov
sub
mov
add
xor
xchg
push
fidivrl
loopne
dec
call
or
push
iret
mov
xor
enter
out
pushl
sub
mov
push
jecxz
mov
pop
inc
pop
cmp
sbb
or
nop
outsb
call
jl
xchg
push
ficompl
jl
add
mov
xor
and
xor
pop
out
daa
in
int3
shll
mov
iret
jbe
int
dec
addr16
lods
mov
clc
mov
pop
clc
jbe
mov
mov
jmp
add
sbb
addr16
iret
sbb
adc
bound
nop
aad
pop
inc
jp
xor
inc
add
cmp
and
faddp
cwtl
out
add
dec
scas
sahf
fbld
in
shlb
bound
repnz
das
int3
xchg
and
adc
lea
and
outsb
xchg
push
cmp
and
mov
mov
cltd
or
daa
dec
lcallw
cwtl
jae
clc
les
dec
daa
xor
test
aas
cmp
addb
and
insl
push
adc
jp
mov
add
lret
mov
mov
mov
xchg
dec
xchg
adc
lods
cmp
call
xchg
dec
pop
out
repz
xor
push
sahf
push
stos
adc
mov
lahf
mov
rclb
mov
loopne
inc
stos
jns
shl
add
lret
popa
mov
mov
sbb
scas
mov
mov
loope
pop
sub
and
mov
repz
pop
mov
xchg
lods
mov
jp
jo
shll
enter
pop
xorb
add
mov
sbb
dec
add
out
fbld
testl
xor
mov
popa
subb
mov
inc
sahf
xchg
gs
add
xor
xchg
lods
add
rorl
sbb
stos
pushf
adc
xlat
mov
repz
mov
jl
movb
inc
lds
xor
jo
insl
mov
ss
cmp
ljmp
insb
enter
jmp
hlt
dec
lods
and
fldenv
call
clc
xchg
inc
lock
ror
sbb
orl
cmp
or
jnp
mov
push
cmp
push
xor
mov
xor
int
stc
arpl
sbb
cmpl
int
mov
mov
aas
adc
das
pop
xchg
mov
xchg
mov
push
inc
incl
dec
outsl
fs
dec
adc
adc
push
xor
or
repnz
inc
daa
rorl
jg
jmp
notl
std
fwait
sbb
mov
sub
sub
into
lahf
mov
ljmp
gs
push
adc
jecxz
dec
inc
mov
cli
xor
jnp
mov
loopne
cmp
cmp
cmp
jmp
push
mov
dec
test
mov
cmc
fsubrs
push
mov
jnp
loop
inc
ja
cmp
fsubp
pop
and
push
aaa
jecxz
cmp
and
adc
sub
mov
loopne
cmp
sbb
cmc
test
mull
scas
inc
cs
xchg
jno
out
arpl
stos
sbb
xchg
flds
fstp
mov
sub
push
test
mov
mov
mov
inc
shll
inc
push
sar
xchg
pop
pop
mov
sbb
iret
cld
iret
mov
cmp
push
mull
cmp
loope
cwtl
cmp
and
mov
pop
loopne
addr16
ret
push
cmpsl
jae
pushf
sbb
es
cmp
mov
imul
in
addb
and
mov
xchg
call
mov
jno
jge
outsl
inc
lds
add
ret
pop
dec
lods
add
sub
jl
lret
xchg
jecxz
adc
mov
mov
movb
fsubr
adc
out
sbb
xchg
mov
mov
ret
popf
push
lds
sub
in
mov
jns
lcall
or
testb
repz
mov
push
loop
sahf
popa
gs
popa
mov
xchg
stos
lahf
pop
inc
sub
xchg
subb
adc
xchg
mov
pop
jp
mov
jge
sub
inc
es
stos
mov
repnz
das
test
inc
add
fsts
outsb
xlat
and
xchg
nop
movsl
push
mov
ds
iret
cwtl
jno
cs
dec
push
ljmp
rol
int3
imul
mov
shrb
cmp
pop
fs
movsl
sbb
and
mov
gs
shll
or
xchg
sbb
outsb
aas
lds
push
push
xchg
sbbb
das
inc
sub
push
adc
lahf
repz
mov
cmc
cmp
jle
pop
inc
mov
mov
push
imul
pop
rclb
lods
mov
es
scas
pop
ja
fistps
xor
ds
xor
inc
push
rep
mov
mov
mov
sbb
lock
insb
xor
inc
idivb
ds
shlb
mov
or
mov
jb
jl
adc
inc
cmp
mov
aas
pop
lahf
aaa
or
je
dec
jnp
or
xor
scas
push
ret
shll
dec
mov
xor
or
jg
xchg
sbb
into
fidivs
jnp
pop
cmc
mov
aad
lods
in
jne
jg
ds
mov
pop
or
inc
cmp
sub
pop
mov
data16
pushf
and
xchg
xchg
xor
enter
and
jle
fstpl
loopne
ret
mov
adc
clc
push
add
adc
add
arpl
sub
sarb
out
push
test
dec
jge
lcall
lock
xchg
je
xchg
lret
sub
loop
test
in
push
ror
mov
and
cmpsl
push
push
in
fsubp
imul
dec
mov
cmp
adc
jecxz
iret
and
add
es
clc
stos
xor
xor
mov
mov
in
lahf
push
xor
cltd
call
in
jno
enter
pop
mov
repnz
clc
inc
mov
movaps
pop
mov
dec
mov
jo
sbb
jle
int
lret
or
daa
push
fnstenv
push
xor
stos
add
cmpsb
out
stos
inc
scas
test
jg
pusha
cmp
movsb
mov
and
popf
insb
cmp
mov
das
iret
stc
cmc
fdivl
nop
test
or
pop
jno
jmp
add
mov
jns
mov
aad
cli
bound
aad
fcompl
push
jg
dec
shl
mov
dec
lahf
and
pop
mov
lcall
fdivrs
mov
leave
sub
sarl
pop
jmp
jns
xor
mov
jecxz
mov
lret
jge
lret
inc
sub
mov
jno
inc
jle
in
xor
push
outsl
and
mov
emms
jae
movsb
mov
int
jae
xchg
mov
xchg
xlat
ss
icebp
cmp
cmpsl
jle
xchg
mov
dec
mov
xchg
ret
xor
mov
pop
mov
sub
sub
xor
sbb
fs
scas
in
pushf
inc
pop
shlb
andl
adc
dec
fsubrs
xor
ds
jg
mov
push
movsl
iret
dec
mov
fs
adc
rcll
jnp
xor
mov
arpl
inc
stos
sub
ror
inc
pop
push
hlt
popfw
jnp
cmp
imul
xor
daa
mov
add
rorb
fcmove
aaa
fwait
mov
sub
repnz
lods
sub
mov
adcl
loop
jle
lret
out
mov
shlb
sub
das
test
pop
xor
repnz
cmp
pop
jmp
mov
push
and
jg
jo
ja
pop
inc
mov
repz
and
push
std
rcrl
pop
mov
cmpsl
inc
adc
and
xor
and
orl
fisttpll
mov
sub
dec
mov
mov
lods
jmp
ret
jno
std
push
lahf
push
sbb
mov
push
jp
ret
out
jle
inc
dec
fnstsw
sbb
inc
pop
roll
mov
popa
mov
xor
and
mov
lret
mov
xchg
lret
test
mov
xor
clc
mov
hlt
shrb
dec
xchg
jle
cmpsb
sbb
or
loop
shll
push
js
mov
pop
cmp
repz
fcmovnb
fadd
punpcklbw
cmpsl
aam
jns
dec
and
or
jmp
and
hlt
lahf
std
inc
sub
adcl
pop
xchg
pop
flds
jns
in
hlt
mov
jmp
and
das
jo
jae
fucom
jp
fwait
adc
dec
or
scas
scas
mov
or
pushf
fs
xchg
sbbb
outsb
pushf
add
out
lea
adc
sub
push
xor
out
dec
xchg
inc
xchg
sbb
aas
push
dec
dec
stos
xor
dec
je
sbb
mov
push
lock
xchg
mov
or
lret
clc
adc
inc
jl
enter
fistps
dec
mov
add
ret
cmp
cmp
in
insb
fsts
jg
clc
iret
int
or
push
test
sub
mov
mov
dec
into
das
xchg
jne
mov
loopew
les
aaa
xor
sbb
cld
lods
jne
mov
ljmp
leave
xor
js
cmpsb
mov
jg
aad
call
add
jnp
bound
add
or
jge
fs
mov
sahf
movsb
push
or
dec
and
in
fcoml
push
shlb
sbb
jecxz
roll
dec
fs
and
jns
push
es
ljmp
mov
mov
inc
mov
fldl
cmp
mov
add
and
ret
and
shrb
and
jb
loopne
sbbb
xor
push
push
and
jge
pop
rcll
les
push
out
cmpsb
xchg
jle
mov
pop
and
pusha
out
sub
xor
insl
mov
decb
decb
data16
xchg
aas
dec
test
loop
xchg
cmp
mov
das
js
pop
in
cmp
mov
lret
adc
insl
in
movsl
pop
ss
sarl
arpl
push
sub
and
cmpsl
stos
inc
aad
daa
ret
xchg
sti
jo
dec
stc
js
push
mov
fcoml
test
xchg
gs
sbb
fbstp
inc
jmp
mov
add
mov
test
testl
incl
or
cmp
in
jno
push
leave
faddl
push
inc
lret
mov
mull
leave
sub
hlt
shrb
negl
mov
cmp
ficoml
add
sub
inc
ljmp
jae
ret
adcl
sbbl
loop
movsl
arpl
jle
fwait
lds
dec
pop
add
mov
xor
fsubs
adc
ds
jmp
in
das
jg
js
aam
rorb
ficoms
xchg
inc
cmpsl
adc
or
and
xchg
mov
lods
cs
or
fldt
cwtl
movsb
or
or
mov
int3
cld
cmp
sub
ret
mov
sub
push
aad
mov
cmp
mov
inc
xchg
mov
mov
dec
pop
xchg
stos
xchg
sarb
call
jecxz
jne
mov
iret
test
rcrl
mov
sahf
cmpl
cmpsl
das
inc
sbb
int
or
lea
repz
scas
jecxz
sub
and
jo
inc
jb
les
push
push
orb
pop
mov
mov
pushf
cmp
sbb
adc
push
cmp
mov
hlt
in
jne
cmp
add
xchg
aas
sub
popa
inc
sbb
xchg
loopne
lcall
xor
lcall
pop
jno
and
sbbl
outsl
and
push
popf
mov
mov
bound
out
not
push
sub
add
pop
fsubs
loope
jo
xorb
lds
cwtl
jno
sub
lods
push
pop
loop
dec
clc
add
ds
repnz
icebp
adc
sahf
inc
inc
push
mov
clc
iret
arpl
mov
rcl
or
fs
jnp
xor
or
mov
rorl
dec
adc
mov
repnz
mov
mov
adc
xchg
fsubrp
imul
mov
xor
imul
and
aas
jmp
sbb
mov
pop
dec
xorb
sti
xor
in
ljmp
js
add
test
mov
jl
mov
mov
inc
xor
lods
dec
mov
and
incb
mov
pop
dec
push
mov
xadd
add
jg
inc
or
stos
imul
ljmp
in
out
insb
stc
arpl
or
ret
and
adc
xor
mov
imull
in
mulb
adc
sahf
mov
push
pop
push
loop
inc
test
aaa
mov
out
mov
mov
mov
pop
in
in
push
add
call
xchg
aad
mov
fisttpl
sub
imul
loop
xchg
popa
or
sub
sub
stos
sbb
sbb
dec
imul
pop
cmp
adcb
and
add
negb
and
xor
hlt
mov
cli
xor
push
jl
dec
sub
dec
cwtl
inc
stc
cwtl
ljmp
daa
push
add
sbbl
dec
adc
sub
sbb
out
out
cmpb
scas
pop
inc
divl
lahf
testb
ds
pop
jne
ja
push
inc
cmp
lret
jmp
repnz
jbe
insl
cmp
sbb
imul
pop
mov
insl
add
es
sbb
mov
fiadds
lcall
clc
movsl
mov
ds
sbb
xchg
mov
aaa
repz
cmp
les
mov
leave
test
jns
push
shrl
adc
test
ffreep
jg
cmc
push
jmp
imul
cmp
jg
xor
push
cmp
pop
xor
mov
fisubrs
cwtl
pop
js
adc
les
stc
cmp
mov
jecxz
loopne
call
paddw
jle
jae
enter
mov
nop
int
ss
inc
ret
pop
jb
lcall
imul
adc
adc
inc
mov
xchg
push
or
test
int3
push
lret
mov
mov
sti
push
xor
xchg
notl
inc
jno
jne
jae
in
daa
mov
aas
rol
mov
aas
sbb
mov
jo
mov
insb
pop
xchg
lods
jg
sbb
inc
cmpb
mov
bound
es
pop
outsl
jmp
test
fwait
outsl
xor
add
dec
insb
in
mov
imul
mov
and
sub
shrb
jl
ret
or
and
mov
add
pop
cli
add
lods
lock
lret
test
mov
loope
inc
xchg
xchg
mov
jae
fs
sbb
jge
jns
xor
xor
mov
loope
mov
ffree
mov
fnsave
loopne
dec
insb
pop
or
int3
mov
lret
cmp
dec
shrb
xor
in
bound
repz
cli
cwtl
mov
pop
bound
jp
dec
int3
pop
clc
push
jle
mov
adc
std
pop
aaa
sbb
lret
test
or
cmc
dec
pop
test
mov
enter
clc
adc
jge
das
aas
mov
out
mov
jb
and
xchg
or
inc
aaa
daa
or
out
xchg
aaa
les
jl
cltd
inc
data16
out
sub
or
leave
movsb
pushf
fcmovb
call
xor
adc
imul
loope
inc
pop
jne
adc
in
fdiv
cmp
ljmp
icebp
ret
lea
scas
enter
adc
sbb
sub
pop
inc
jecxz
mov
push
dec
push
fstpt
mov
jno
pop
pop
mov
cmpsb
outsl
stc
and
xlat
sbb
sti
negb
push
lcall
int
imul
stos
in
push
fstps
aam
lea
or
push
cmpb
mov
outsl
ja
iret
or
adc
inc
jmp
jp
jge
inc
push
fcompl
adc
sbb
jae
rorb
insb
cmp
or
push
div
leave
hlt
icebp
or
cltd
ljmp
jmp
leave
cmp
cmpsl
int3
daa
mov
adc
pop
mov
rclb
and
jg
cld
call
dec
push
into
insl
cmp
mov
push
sarb
fstps
xor
adc
add
mov
jbe
push
std
pop
fisubl
dec
inc
xchg
xor
scas
mov
adc
in
xor
mov
shrl
nop
js
mov
testb
cmpsl
mov
mov
inc
cmpsl
lds
test
fwait
dec
repnz
dec
fldl
xchg
mov
and
icebp
xor
dec
add
pop
mov
test
sub
sbb
and
xor
sahf
loopne
mov
aaa
push
faddl
lds
repnz
ficomps
popa
xor
mov
push
push
fwait
outsb
movsb
pop
cmpsb
lret
rclb
push
pop
add
cmpsl
cmp
ljmp
push
lea
or
scas
out
mov
sub
test
dec
pop
insb
inc
jne
push
loope
gs
and
push
leave
xchg
mov
adcl
push
add
mov
cld
push
mov
dec
sub
add
iret
fs
inc
orb
aam
jne
aad
jbe
pushf
mov
dec
mov
and
repnz
stos
shrl
dec
sbb
cwtl
icebp
mov
cmp
mov
mov
mov
add
xor
xchg
nop
or
shlb
subb
jge
lret
insb
xor
mov
js
flds
mov
stos
addr16
lahf
cmp
popf
add
fbld
fimull
mov
lock
mull
repz
cmp
popf
arpl
cli
stos
jge
mov
mov
mov
dec
push
call
ret
into
sbb
enter
mov
adc
xor
cmp
orb
jmp
push
daa
orb
pop
lock
add
in
cmp
test
sub
ds
add
test
ror
shll
scas
pop
fs
dec
xlat
sbb
call
dec
inc
mov
sub
sti
mov
sbb
addr16
dec
or
fwait
cmp
xchg
dec
mov
xchg
pop
rcrb
paddw
add
stos
daa
sbb
sub
and
or
sbb
mov
cld
movsb
ja
lahf
mov
jbe
mov
js
xchg
push
ret
iret
and
data16
mov
push
or
adc
pop
shrb
std
std
pop
jns
mov
push
mov
xor
cmp
pop
or
mov
out
movsl
and
cwtl
int
xor
rcrb
lods
and
hlt
push
insb
in
and
sub
dec
stos
pop
movsb
call
mov
ds
cmp
out
mov
jnp
jle
jmp
loop
push
mov
imull
out
in
adc
scas
stc
mov
and
rcrl
ja
dec
push
xchg
es
lods
push
add
xchg
jp
fldenv
movsb
pop
pop
sbb
in
scas
push
jecxz
in
popf
ja
inc
jmp
sbb
mov
inc
fisubs
nop
jle
insl
xchg
jle
out
mov
xchg
arpl
push
out
jae
or
lcall
jg
push
out
in
inc
icebp
xchg
xchg
mov
or
sub
popf
popf
mov
movsb
push
dec
in
sbbb
lds
inc
cli
aad
lds
cs
jge
xor
call
or
mov
mov
mov
xor
jns
aaa
push
into
jmp
push
xchg
adc
mov
cli
subb
jae
decl
test
arpl
ds
loop
adc
xchg
sbb
add
adc
jnp
mov
hlt
lea
in
push
mov
fwait
stos
repz
test
addr16
hlt
dec
jbe
popf
cwtl
adc
inc
scas
rcrb
adc
sbb
ljmp
dec
mov
repnz
fwait
mov
mov
pop
out
jecxz
rclb
push
xchg
push
inc
dec
orb
xor
enter
mov
stos
enter
movsl
jmp
out
imul
test
sahf
xor
mov
xchg
pop
imul
leave
and
cli
mov
mov
mov
push
roll
pusha
je
or
rcl
call
add
adc
pop
push
repz
jns
sub
inc
adc
push
cmpsl
js
pop
inc
js
divb
not
out
xor
dec
sub
mov
leave
and
outsl
sbb
orl
ret
sub
cmp
js
mov
cmp
loope
cwtl
cmp
or
adc
out
lahf
ficoms
mov
push
dec
aaa
pop
jnp
fwait
loope
adc
mov
popa
cwtl
push
add
sahf
inc
jb
andl
repnz
dec
xlat
inc
and
dec
je
jp
stos
dec
sub
subb
in
push
xor
mov
add
fwait
xor
js
push
dec
xchg
clc
sub
lcall
je
mov
lea
mov
xchg
testl
xchg
push
push
sti
das
mov
test
push
pop
push
dec
push
push
add
stos
mov
add
das
mov
enter
cmpsb
mov
push
inc
test
jmp
cmp
out
hlt
push
mov
xchg
mov
lahf
in
js
mov
es
cmpsl
cs
jb
out
mov
in
push
or
popw
aaa
movl
and
jg
nop
push
sbb
push
cmp
dec
xchg
std
movsl
xchg
arpl
or
out
loop
or
enter
insb
cli
adc
pop
add
pop
sbb
add
xchg
dec
jno
cmpsl
clc
movsb
lea
push
test
mov
pop
loope
addr16
cli
xorb
inc
or
sub
xchg
adc
xor
add
pop
addr16
dec
dec
xor
std
inc
loope
dec
xor
cmp
int3
adc
mov
jb
pop
pushf
mov
gs
and
sub
pusha
jle
das
or
push
pop
mov
test
jns
test
mov
lea
jbe
movsl
sbb
out
add
xchg
sub
icebp
gs
mov
xchg
data16
adc
sub
adc
jae
jle
push
sbb
jecxz
fwait
mov
addl
adc
daa
mov
stos
test
sbb
xlat
fwait
lock
sbb
jle
data16
filds
pop
ffreep
push
push
mov
jns
push
data16
test
sub
insb
mov
std
xor
hlt
and
out
jne
leave
pop
shl
pop
test
push
sub
mov
aas
mov
push
mov
add
imul
cli
mov
sub
inc
enter
jbe
sbb
pop
sahf
mov
icebp
stc
sbb
dec
jnp
sbb
push
fst
les
into
inc
lock
xor
ret
or
mov
jo
xchg
loope
xchg
or
test
loope
cmc
pop
xchg
dec
test
dec
dec
xlat
push
inc
fbstp
outsl
test
js
xor
loopne
sub
jbe
das
imul
mov
xchg
test
aaa
pushf
or
rcrl
dec
lcall
fucomp
adc
dec
aad
fwait
dec
fwait
daa
jo
sti
inc
xor
int3
or
pushf
in
pop
nop
lret
mov
fwait
cmc
std
lock
inc
add
inc
xchg
ret
mov
dec
scas
sbbb
sti
mov
mov
xchg
in
dec
dec
mov
cmp
fcomp
and
sbb
push
out
mov
mov
sub
dec
push
or
xorb
push
push
and
or
fildl
cltd
inc
pop
and
incl
add
mov
pop
out
sarl
sub
push
sahf
push
mov
stos
and
inc
and
aas
push
je
jle
outsb
xchg
cmpsb
or
mull
dec
insl
and
cli
push
and
outsl
neg
jg
outsl
inc
mov
mov
inc
jle
rcl
mov
fisubrl
cwtl
es
xchg
dec
faddl
out
es
repnz
sub
aad
cmp
outsl
lds
subl
icebp
sarb
adc
test
xor
repnz
mov
std
stos
je
mov
mov
jle
repnz
imul
nop
in
sahf
push
add
std
sti
jne
int3
stos
cltd
outsl
inc
and
std
dec
pushf
xchg
mov
mov
repz
mov
and
fwait
jbe
cmp
ss
mov
sahf
sbb
add
or
jg
imul
push
imul
push
sahf
add
jno
lods
mov
add
inc
pop
xchg
iret
clc
push
push
cmpsb
sbb
or
mov
sub
js
dec
push
pushf
vpaddsb
jg
sub
stos
bound
sarl
xchg
xor
inc
inc
ljmp
gs
inc
mov
icebp
shll
jl
jbe
push
jecxz
jp
jns
pop
or
lret
out
pop
dec
push
dec
or
inc
dec
mov
jg
ss
outsb
dec
dec
clc
add
loopne
mov
sahf
incl
pop
pop
xchg
xchg
aaa
push
pop
out
test
loope
cld
mov
and
outsb
in
into
jno
js
adc
mov
mov
adc
test
inc
pop
or
xor
mov
lods
xchg
outsl
test
pop
mov
lret
lea
jmp
dec
jmp
out
fxch
or
pop
in
nop
sbb
cmpnleps
idiv
dec
xchg
cmpsl
sbb
movsl
leave
movsl
lret
inc
in
jno
movsb
aas
scas
rol
test
lods
mov
lahf
inc
enter
adc
jno
sbb
clc
jl
call
fmul
inc
dec
jbe
mov
xchg
sub
pop
xor
and
jo
cmpsb
aad
fiadds
fsub
dec
or
lahf
cmpsb
mov
gs
adc
mov
rcrb
mov
jecxz
mov
repnz
sub
xchg
add
insb
mov
inc
cmpsb
stc
jecxz
cmp
gs
ret
add
mov
ret
test
jb
mov
aam
xor
dec
leave
fwait
dec
push
leave
mov
and
std
and
jge
aad
dec
xchg
inc
pop
cwtl
fiadds
mov
pop
adc
jge
sbb
sbb
aaa
not
xchg
cmp
sbb
adc
loopne
jne
leave
shll
lret
movsl
sub
cmp
push
lret
xor
dec
sti
ret
pop
insb
sub
sub
int3
aam
xchg
orb
ds
xor
and
xor
testb
dec
ja
jg
pop
addr16
icebp
cltd
insl
or
xor
add
sbb
xor
fs
aaa
mov
xor
scas
and
dec
movsl
bound
aad
pop
and
mov
pop
adc
xor
xorb
test
and
pop
loopne
lds
icebp
popf
add
mov
mov
ficoml
mov
jl
pop
icebp
je
pop
ljmp
subb
xorl
popf
stc
xchg
mov
call
pop
xorb
cmp
xchg
dec
mov
adcl
jne
sbb
mov
psubsb
mov
push
push
jl
outsb
repz
mov
imul
hlt
push
xchg
in
cmp
sbb
sbb
cmp
xchg
pop
pop
mov
call
cmp
jnp
cmp
mov
addl
mov
lahf
mov
pop
sub
lahf
cld
in
mov
pop
ds
aam
sarb
sub
adc
xor
mov
mov
cwtl
out
push
sbb
mov
sbb
out
push
lret
add
or
loop
mov
lahf
fldcw
pop
roll
and
movsb
cli
clc
mov
mov
jl
in
add
jo
ljmp
mov
add
cmp
sub
push
out
push
adc
sub
add
jle
xchg
push
mov
fsubrp
call
xchg
push
stc
xchg
adc
push
fisttps
out
jge
dec
dec
push
insb
loope
fistl
xchg
push
hlt
js
cmpsl
clc
cli
add
mov
fcomps
pusha
ljmp
enter
movsl
push
scas
or
dec
outsl
mov
xchg
int
xchg
cmp
cld
inc
daa
mov
pop
daa
add
xor
mov
xchg
hlt
fiaddl
fildll
in
leave
xchg
sub
punpcklbw
hlt
leave
mov
and
pushf
test
push
add
mov
push
into
inc
shld
movsl
jo
sub
cmp
jecxz
aam
jp
fsubs
negl
jnp
jb
call
lock
pushf
pop
jnp
inc
mov
inc
dec
into
idiv
ret
orl
insb
divl
xlat
shr
dec
xchg
ret
mov
sub
mov
inc
cwtl
adc
and
ss
mov
dec
push
and
shll
rorb
or
xchg
push
fisubs
es
dec
and
mov
enter
ret
sub
inc
shlb
pop
inc
inc
repnz
cld
mov
push
mov
testb
push
sahf
movsb
outsb
jge
js
mov
and
jl
mov
mov
xchg
out
enter
fadds
cli
pop
adc
fiaddl
lret
xor
movsl
loope
scas
cwtl
mov
add
and
int3
repnz
cmp
mov
imul
mov
xlat
mov
ficoml
insl
pop
xor
xor
insb
ss
xorl
fwait
cmp
sbb
jo
xor
add
inc
mov
fs
dec
mov
jns
loope
insb
fcmovbe
cmpsl
cltd
enter
js
sub
push
sub
cmp
mov
sti
fwait
sub
inc
iret
mov
pop
lds
jns
repz
pop
mov
cmp
daa
int3
movsb
cmpsl
ds
add
sti
inc
and
out
inc
jnp
stc
mov
lahf
enter
inc
cmpsb
xor
jmp
or
cmpsb
lock
inc
leave
outsl
or
and
xchg
enter
into
dec
add
loop
jae
outsb
pop
test
pusha
dec
inc
xor
roll
xor
decb
mov
std
ret
xchg
jbe
xchg
fisubs
push
mov
adc
in
sub
sub
xor
mov
jns
in
xchg
cmp
mov
arpl
imul
jns
mov
pop
sub
mov
push
das
dec
arpl
dec
dec
xchg
cltd
test
int3
fsubs
adc
or
in
mov
and
fcmove
mov
pop
cmpsl
popa
cs
xchg
jle
mov
das
les
sahf
mov
push
dec
fistl
mov
add
insb
mov
sub
mov
loopne
inc
add
mov
adc
aad
sbbl
jbe
std
push
fidivrs
insb
add
cmpsb
fidivrs
cld
fs
fnstsw
pmaddwd
cmp
int3
sub
and
in
dec
dec
popf
rcrb
fnop
mov
shl
sub
xchg
out
mov
test
movsb
push
or
and
xor
add
aas
cmp
nop
cmp
and
lods
cmc
sbb
xsha1
cmpsb
dec
pop
sbb
jo
movsb
movsl
push
xor
inc
aad
sub
cmp
xchg
daa
fwait
push
mov
jg
jl
scas
jb
xchg
int
shrb
insl
cmp
push
loop
fwait
cld
xor
xor
das
sbb
inc
int3
fdivs
mov
dec
stos
add
lahf
ds
in
xlat
je
repz
mov
popa
cmp
cmpsl
mov
jns
addl
and
std
sub
xchg
sub
jnp
sbb
dec
int3
loopne
mov
pushf
data16
adc
jbe
push
sbb
aad
ja
fldcw
push
sar
mov
xchg
scas
imul
mov
test
out
mov
pop
fs
mov
fisubs
rorb
xlat
push
cmc
vpminsw
xor
dec
fwait
push
mov
adc
gs
add
imul
sbb
push
arpl
fnsave
adc
cmp
xchg
loope
jmp
ret
xchg
mov
mov
je
popa
add
js
in
inc
jne
or
add
cmp
mov
in
or
jg
ss
and
cmp
int
rcr
int
popf
imul
lret
movsl
xor
in
jecxz
sub
add
cmp
mov
dec
pop
aas
mov
pop
imul
data16
fs
cmp
out
idivl
push
mov
into
ds
cmp
inc
insl
fmuls
repnz
rorb
insl
xchg
outsb
fsubl
adc
shll
jg
push
push
ficomps
fstpt
test
aas
popa
push
mov
cmp
popa
pop
mov
aad
dec
inc
dec
and
hlt
lock
push
pop
ficomps
fwait
jl
psraw
and
jl
sub
movsb
sub
fmuls
dec
loopne
lods
inc
jmp
cmpsb
adc
jge
pop
outsb
outsb
sbb
sub
in
dec
pop
leave
mov
push
dec
push
sbb
sbb
cmp
fmul
mov
xchg
fs
or
sbb
rolb
pop
insb
cmp
mov
arpl
dec
addr16
mov
cmpsl
add
daa
jne
mov
pop
js
cltd
je
dec
jle
inc
daa
leave
mov
out
mov
or
cmp
or
aas
out
loop
add
cmpsb
pop
cmp
mov
inc
add
sbb
mov
sub
das
jmp
sub
jle
rcrb
cmpsl
nop
adc
or
jecxz
mov
jo
mov
je
sub
inc
leave
or
pop
mov
inc
mov
nop
xor
repz
pushf
fimuls
or
dec
xor
xchg
sti
int
fisttpll
inc
mov
dec
pop
jo
mov
fwait
in
add
and
pop
stos
test
shrl
pop
insl
dec
push
mov
outsl
mov
mov
je
xchg
andl
lods
jae
lock
les
adc
xchg
dec
fyl2x
inc
pop
cltd
adc
push
jo
leave
rcl
filds
mov
adc
cmp
lods
or
pop
add
fadd
sahf
fstpt
jmp
out
xchg
ficoml
adc
cli
and
fdivrl
sbbb
push
and
push
ret
repnz
push
imul
jmp
jge
mov
jno
mov
mov
ss
pop
cmpsb
dec
inc
mov
int
out
mov
xchg
jb
das
shlb
pop
or
push
stc
mov
sbb
cmp
inc
sub
add
std
inc
sub
sub
into
push
ret
inc
mov
loopne
mov
imul
xchg
dec
inc
fs
cmpsl
push
cli
addb
mov
inc
movsl
mov
pop
cs
mov
int3
loope
sbb
mov
sbbb
push
jecxz
test
cmp
out
mov
movsb
daa
inc
sub
scas
mov
out
mov
xchg
or
fildll
mov
das
jmp
gs
sub
imul
test
out
jno
sahf
and
jae
into
xchg
add
sub
sub
fidivrs
clc
loopne
xor
fwait
pushf
roll
test
xchg
sub
repnz
mov
mov
incb
inc
shl
push
int
cmp
mov
and
mov
add
push
inc
xchg
cmpsb
push
add
test
sar
sbb
lock
mov
movsb
js
push
loopne
adc
js
mov
push
aaa
pop
loopne
lods
bound
mov
adc
in
lods
add
xor
lods
jg
loop
out
ds
mov
xchg
je
add
jecxz
mov
pop
push
dec
test
lret
or
xchg
or
xchg
hlt
cmp
push
rcll
mov
mov
sub
mov
add
cli
fucomip
shrb
imul
pusha
lock
mov
sub
xchg
or
iret
add
cltd
data16
daa
add
rorb
adc
sbb
pop
insl
mov
xchg
jns
dec
xlat
in
adc
cmc
in
clc
fimuls
cwtl
jns
mov
clc
dec
xor
adc
jecxz
cmp
cmpsl
dec
repnz
loope
iret
lea
int3
sbb
in
sub
add
push
addr16
ja
and
aas
fisttpl
movsl
xor
mov
sahf
out
mov
or
jno
jno
out
and
sbb
xor
imul
pop
aas
xor
iret
or
and
dec
inc
int
mov
js
mov
iret
inc
aaa
mov
and
sub
mov
sbb
mov
in
cmp
in
or
in
cmpsl
cmp
popa
fwait
iret
mull
adcb
pop
and
mov
jo
xor
movb
std
dec
sti
call
mov
scas
dec
lods
mov
inc
iret
xor
lock
repnz
or
xchg
scas
pop
roll
divl
mov
push
sub
subb
das
es
nop
jl
dec
fimull
jns
cmp
dec
shlb
cmp
test
clc
push
xchg
movb
mov
dec
enter
xchg
imul
push
fsubr
adc
mov
inc
jo
mull
cmp
pop
cmp
inc
mov
lock
mov
fsts
rcl
sub
and
inc
push
and
cmp
roll
rorb
mov
xchg
fnsave
pop
mov
sub
and
xchg
out
dec
mov
fwait
xchg
or
inc
outsl
jno
stc
mov
int3
mov
movsl
cltd
xchg
mov
jbe
ficoml
jmp
movb
inc
ds
cwtl
adc
fmull
xchg
sbb
dec
iret
mov
pusha
sbb
or
lcall
cmp
push
outsb
sub
dec
jno
pushf
test
pop
and
arpl
sub
dec
clc
adc
insb
or
pop
dec
lock
jae
ja
xchg
pop
cmp
add
outsb
push
loop
sub
mov
adc
inc
lds
jg
inc
shl
push
adc
int3
pushf
mov
mov
into
jno
aas
jecxz
andb
mov
orb
lret
xor
movsl
xchg
cmc
mov
repz
sub
mov
mov
lahf
insl
pop
out
rcl
xor
ds
jae
test
and
adcb
jbe
push
dec
divl
imul
pop
in
lods
cmp
sub
aaa
adc
fstl
call
xchg
shrl
int
repz
hlt
dec
iret
dec
gs
push
dec
jno
pusha
pop
adc
sahf
push
xchg
sub
mov
dec
jp
inc
mov
push
push
jne,pt
cmp
mov
sbb
popa
adc
add
inc
dec
lods
push
sbb
mov
mov
movsb
nop
fimull
xor
jno
int3
out
and
push
inc
testb
cmpsb
jbe
sti
int
jge
fmul
clc
dec
mov
in
outsb
lods
ss
push
mov
add
into
jns
fldenv
jae
pop
inc
test
mov
bound
mov
pop
xor
push
les
addr16
pop
xchg
faddl
adc
pop
push
mov
sub
xchg
mov
arpl
cmpsb
popf
push
std
ja
xor
and
xchg
push
loop
cs
sbb
loop
addr16
in
ficoms
stos
shr
inc
ds
pop
aas
xchg
inc
pop
inc
dec
ja
je
in
and
push
inc
fwait
in
adc
rcll
jo
imul
scas
jbe
jle
mov
mov
push
hlt
sbb
push
sahf
cmp
sarb
sahf
xor
mov
test
sbb
aaa
pop
and
mov
aaa
xchg
int
cli
aaa
lahf
pop
push
jl
repz
std
in
sub
inc
pop
mov
fdivs
icebp
mov
inc
fstl
add
jmp
icebp
cmp
loope
ljmp
add
or
inc
lods
inc
jge
aam
ret
pop
fs
dec
mov
pop
nop
cld
mov
push
dec
pop
adc
pop
pop
mov
or
sub
sbb
shl
std
pop
xchg
test
mov
adc
arpl
push
dec
and
neg
test
add
dec
sbb
lcall
repz
jle
cmp
dec
hlt
push
jl
sbb
adc
dec
xchg
jmp
out
ja
popa
sbb
in
lds
fisubl
and
push
cmp
lret
jge
clc
inc
cmp
add
cmp
cltd
jp
and
pop
mov
sub
jbe
in
mov
cmp
movsb
ds
jecxz
and
icebp
in
mov
in
push
cmpsl
leave
mov
je
xor
in
pop
add
add
out
out
push
jne
mov
mov
or
cmovle
sub
cmpsb
pop
dec
icebp
lods
gs
inc
mov
divl
and
movsl
std
push
rcll
sbb
pop
sub
or
lahf
pop
push
mov
psllq
cmp
mov
lret
adcb
test
mov
inc
xchg
shlb
std
fldcw
out
daa
inc
repz
cltd
xchg
lods
mov
add
mov
mov
cmp
decb
testl
rorl
dec
fcomi
in
jns
popf
mov
cmp
mov
orl
xchg
mov
pop
movsb
lods
js
scas
ja
add
mov
lss
addr16
fdivl
pop
dec
and
ret
mov
loop
pop
gs
mov
sbb
adc
bound
js
jb
xchg
filds
stc
pop
jo
sbb
or
ret
lods
add
and
mull
and
in
xor
lret
or
xchg
rcll
and
les
out
mov
dec
mov
xchg
test
sub
adc
mov
add
test
push
scas
cli
xchg
mov
es
mov
sub
inc
dec
dec
sti
movsb
sbb
out
xchg
dec
sbb
pop
mov
js
addl
cmp
and
outsb
test
es
cltd
outsl
js
je
xchg
cmc
or
lret
xchg
mov
shrb
mov
sbb
pop
mov
or
popf
jns
jge
add
rorb
inc
jb
xchg
push
sbb
cmp
fstpt
mov
sub
movsb
pop
inc
jg
movsl
pop
mov
in
mov
add
fdivrp
call
sbb
leave
stc
add
int
sub
mov
gs
jae
cmp
inc
mov
outsl
shl
jmp
jae
icebp
dec
in
out
addr16
scas
jmp
xor
out
sub
lock
xchg
aam
icebp
mov
repz
insl
xchg
lock
push
hlt
stc
dec
xchg
movsl
mov
dec
inc
orl
jns
sub
or
pusha
mov
dec
add
jge
xor
out
frstor
out
or
popf
jae
push
test
ss
sbb
cmpsl
fnsave
xchg
addr16
cmovle
subl
push
inc
push
push
xor
adc
mov
adc
pop
pop
push
in
jb
outsl
scas
pop
push
fidivl
lcall
popf
out
push
mov
test
fsubl
push
and
imul
mov
ror
fstpl
jno
and
xchg
dec
stos
xor
out
mov
shrl
fcompl
mov
sarl
fwait
jno
sbb
rcr
fstpl
or
lahf
mov
jmp
std
jmp
fwait
into
scas
cs
cltd
rcr
pop
xor
xchg
rolb
xor
outsb
jns
enter
js
xchg
add
fdivr
addl
int
and
inc
int
cmpsb
xor
movsb
nop
pop
insl
lds
test
cld
test
mov
push
incb
popf
mov
in
lcall
sub
mov
push
test
jnp
dec
inc
cmp
and
push
daa
lret
and
shll
mov
cld
adc
pop
test
pop
mov
xchg
ja
push
jbe
ja
xor
scas
je
push
imul
adc
xchg
test
push
ret
mov
enter
in
popf
int
jne
shlb
stos
jp
sub
lret
pop
movsb
lret
adc
xchg
shll
adc
pop
inc
cmp
push
pusha
mov
cmp
jo
cs
lcall
push
clc
dec
je
mov
bound
cmp
in
mov
les
scas
lods
bound
cltd
imul
je
dec
inc
jne
rorl
lret
and
pop
sti
fmull
nop
aam
movsl
lret
icebp
mov
ds
mov
rcr
enter
sbb
ss
clc
add
xchg
mov
jno
fucomp
test
popf
cli
daa
lods
unpcklps
jo
data16
ljmp
xchg
insb
xor
push
jl
aaa
in
loop
repz
sub
pusha
fisubrl
push
insl
movsb
mov
mov
mov
push
pusha
jae
mov
mov
lret
mov
sarb
pop
sbb
push
in
in
cmp
sbb
fstps
push
inc
inc
sub
inc
shll
or
mov
fnsave
jno
or
push
enter
ret
push
jge
cmp
push
push
dec
sbb
sub
mov
in
or
aam
push
pushf
mov
mov
sbb
mov
lds
lea
cwtl
push
scas
jmp
mov
out
sbb
in
scas
sub
xor
iret
inc
jp
ljmp
jns
jae
mov
sbbb
mov
fimull
sub
rcr
in
in
in
divb
das
xchg
test
loop
jo
nop
mov
out
cmp
lods
adc
fldcw
addl
enter
mov
enter
pop
inc
push
lahf
shrb
addr16
adc
cmp
out
adcb
and
or
mov
xor
std
insl
cmp
mov
sahf
xor
xor
mov
pusha
pop
sbb
xor
test
fwait
or
stc
sub
push
mov
enter
xor
test
push
inc
pop
add
xchg
xor
rolb
cs
sbb
jl
lret
or
or
dec
sbb
xchg
lcall
mov
dec
in
lds
aam
sbb
ret
popf
rolb
shlb
push
insb
aas
hlt
pop
mov
mov
movsb
add
dec
cmp
js
cmp
add
pop
adc
mov
les
add
and
lret
ds
fsubrl
push
cmp
mov
fnsave
cmpl
test
aad
jne
sbb
stos
ror
stc
sarb
xor
push
inc
out
hlt
add
fildl
and
jno
push
mov
xlat
mov
jnp
inc
mov
pop
popa
std
pop
out
fbstp
lret
insb
cmp
sbb
pop
test
pushfw
shll
iret
sub
mov
adc
xor
repz
jae
push
insl
xor
adc
mov
jo
add
test
sbb
call
andl
add
cmp
divl
and
mov
dec
inc
divl
cmpb
out
push
loopne
int
stos
inc
scas
or
push
enter
ljmp
aaa
daa
sub
dec
rol
loope
adc
fbstp
dec
xor
pushf
mov
fcoms
or
adc
cmp
push
xor
test
nop
mov
mov
fwait
add
inc
movsl
rclb
add
pusha
movd
pop
cltd
shl
insb
sti
fistps
ss
lock
and
ja
fsubrs
dec
mov
imul
movsb
xchg
adc
cltd
adc
add
jl
adcl
push
mov
jl
mov
jge
outsl
adc
sti
mov
dec
sub
aas
inc
or
mov
pop
jae
adc
sub
push
lods
in
cs
xchg
psubsb
or
push
lahf
add
daa
mov
sbb
mov
push
test
xor
xchg
imul
arpl
jg
js
dec
cwtl
ja
pop
je
fists
loope
pop
repnz
inc
cmpb
xchg
fcoml
xchg
or
gs
lret
and
test
jmp
or
test
jo
lea
nop
add
lahf
fs
and
es
data16
dec
outsb
nop
mov
mov
subb
inc
mov
mov
gs
lahf
push
add
inc
mov
inc
popa
xchg
icebp
jge
iret
popf
inc
xchg
mov
pop
ror
aad
jae
lret
dec
lahf
mov
fmull
adc
js
daa
test
jae
jne
dec
ret
cld
rcr
inc
jne
loopne
imul
jmp
push
inc
ret
ljmp
dec
lods
idivb
mov
popa
sahf
sti
push
and
sub
mov
imul
or
cmpsb
sub
jg
in
mov
xchg
add
jecxz
cwtl
ret
cmp
rcrl
sub
jno
mov
xor
pop
pushf
xchg
lahf
or
rcrl
pop
fisubl
cmpsl
inc
iret
mov
jmp
pusha
daa
test
sub
add
sbb
add
les
fsub
mov
std
fmull
add
cmpb
jmp
in
cli
push
stos
pushl
aam
rcr
cmc
jg
pop
pop
imul
push
dec
aad
fsub
popa
lock
cmp
sub
push
jo
xor
and
cmp
in
orb
repnz
shlb
sarb
aad
jno
adc
cltd
and
cmp
mov
div
pop
xorb
hlt
jae
fwait
push
testb
cmpsl
mov
jge
aaa
dec
js
das
xchg
add
sbb
jb
shlb
add
sbb
cld
mov
mov
popf
loope
lret
pop
std
js
jg
lret
jne
cld
and
xchg
ss
scas
sbbb
cld
loopne
call
repnz
fcmovb
test
lret
xchg
adc
aam
mov
xchg
and
aam
push
jo
into
pop
ja
inc
mov
mov
pop
in
cltd
cmpsl
outsb
ret
mov
imul
pop
out
idiv
imul
sub
xor
mov
ss
cltd
scas
outsl
sub
std
ret
mov
xchg
ret
pop
mov
ja
fwait
pushf
cmc
hlt
mov
mov
add
pop
adc
cmp
sbb
fs
xchg
popf
aad
leave
xchg
mov
insb
sbb
fst
je
int
and
in
es
idivl
xor
fcmovnb
jo
cmpl
imul
add
cmp
add
fcomi
and
pop
jnp
ja
add
cmpsl
mov
call
adc
fdivrs
in
mov
adc
cmpsl
xor
or
test
sbb
adc
dec
addl
sti
fmuls
push
test
dec
les
mov
inc
sbb
sub
outsb
xchg
ds
sahf
test
and
xor
sub
jnp
cmp
mov
aam
js
sti
mov
popa
roll
push
sbb
lds
decb
setns
mov
push
xor
lahf
inc
sahf
aaa
shll
push
push
jb
out
cltd
xor
adc
push
fistl
pop
mov
adc
jo
rcrb
outsl
xor
ficomps
mov
sahf
mov
call
pshufw
iret
pop
push
add
popf
mov
movsb
xchg
jl
and
iret
fdivs
ret
scas
mov
stos
push
scas
mov
test
repnz
call
inc
out
hlt
cmp
or
jmp
push
mov
movsb
mov
movsb
and
inc
mov
je
fsubs
in
dec
dec
cmp
or
inc
sub
loopne
inc
ret
daa
arpl
and
shll
lea
add
movsb
aaa
xor
shr
fsubl
adc
es
jae
neg
int3
lret
xor
iret
stos
lea
fmulp
sbb
xchg
dec
dec
cmp
scas
inc
xor
mov
mov
fs
or
sti
insb
xchg
mov
adc
dec
aas
fisttpll
ja
push
mov
icebp
ret
xor
push
fistl
lret
shrl
pop
push
cmpsl
faddl
insb
xchg
adc
pop
pop
enter
divb
mov
cld
mov
popf
or
retw
pop
daa
cmp
or
inc
pop
bound
inc
movsb
push
test
pusha
inc
out
jmp
pushf
lcall
add
test
dec
out
cmpsl
add
pop
mov
jb
lds
adc
lea
daa
push
out
xor
add
inc
les
lds
les
nop
mov
loopne
std
sbb
lcall
mov
daa
lret
xorb
pop
addb
sarl
cmp
outsl
cmp
hlt
push
not
or
aaa
adc
and
cmp
gs
cmpl
mov
shlb
inc
int
pop
aam
or
mov
mov
fisubrl
cwtl
jno
andb
lahf
lahf
push
cltd
and
popw
jne
fiadds
out
add
faddl
mulb
sar
outsl
into
adc
push
or
leave
subb
scas
mov
jg
xchg
inc
push
loop
pop
std
jns
pop
sub
adc
jno
or
push
stc
push
mov
shll
test
cmp
mov
sahf
adc
jl
nop
fsubl
notb
andb
popf
shlb
out
mov
ljmp
div
insl
add
and
cmc
testl
xchg
mov
lods
push
add
pop
push
divl
inc
adcl
call
fstps
xor
jae
xchg
cmp
mov
cli
dec
xor
push
aaa
lahf
mov
cmpsl
cmp
out
lahf
push
push
nop
add
jnp
dec
outsl
outsl
pop
ljmp
and
sub
movsl
rorl
mov
mov
dec
mov
add
aad
fcmovu
push
fcomp
inc
sti
movsl
lahf
mov
cwtl
sbb
idivb
mov
repnz
outsb
pop
sbb
xchg
inc
xlat
jae
in
jle
xchg
dec
mov
shrb
jle
xchg
int
and
xlat
xor
test
or
lcall
cmp
xchg
mov
dec
inc
addr16
into
pandn
out
sbb
icebp
inc
out
add
pop
xchg
aas
or
sbb
cmp
lret
outsl
mov
aaa
fbstp
repnz
das
clc
cmc
add
and
mov
or
xor
movsb
dec
lock
popa
dec
mulb
push
lret
pop
out
mov
xor
add
mov
rorb
dec
movsl
push
xchg
dec
in
out
sub
xchg
xlat
jb
fcomps
push
cmpsl
insl
mov
cmp
stos
adc
mov
push
fdiv
lds
pop
insl
or
lcall
add
mov
cmc
mov
sbb
nop
stos
popf
sar
lret
adc
xchg
sub
pushf
pop
dec
lret
cmp
es
daa
inc
out
mov
xlat
and
fsub
andl
fcmovu
notl
call
bnd
inc
stos
and
fdivrs
movsb
xorl
mov
das
je
sub
test
cli
into
lcall
addr16
std
jne
enter
dec
lock
sbb
mov
sahf
cmp
negb
push
pop
js
sub
xchg
jle
jae
push
cmp
mov
iret
hlt
in
mov
daa
insl
sbb
xchg
xchg
mov
loopne
jb
mov
jb
push
iret
inc
shlb
mov
inc
jb
mov
push
xor
jecxz
or
lock
bnd
cltd
sbb
push
nop
aam
pop
andps
xor
lea
sbb
mov
add
pop
jnp
rcr
xchg
add
rcl
or
inc
ja
dec
inc
mov
ds
jmp
sub
cmpsl
fxch
xor
jns
out
cmpl
cmp
mov
xor
daa
push
outsl
ljmp
test
arpl
cmp
ja
pop
push
mov
daa
and
sbb
or
inc
mov
fstpl
jmp
or
icebp
outsl
adc
cmpsb
xor
in
pop
push
push
inc
aas
sbb
push
push
test
das
loop
mov
loope
add
pop
and
cli
dec
inc
jo
pop
fcoms
push
std
leave
cmp
sub
xlat
sub
sbb
and
sti
cmpsl
pop
or
cmpsl
push
nop
fists
es
mov
mov
push
out
mov
mov
mov
lea
pop
pop
lds
sub
movsb
rorb
mov
mov
or
scas
push
iret
inc
sub
xlat
enter
pop
hlt
ja
mov
push
aas
cmc
sbbl
cmpsl
push
arpl
push
imul
in
fdivs
sub
sbb
aas
pop
shlb
add
jmp
pop
adc
xlat
and
pop
cmp
push
insl
dec
outsb
icebp
and
push
les
inc
mov
daa
cld
mov
and
xchg
shlb
scas
aad
rcl
xor
pop
outsb
pop
shrb
or
mov
pop
add
cmp
roll
push
fs
push
test
gs
daa
mov
dec
mov
jbe
adc
bound
push
mov
cmc
fndisi(8087
fbstp
js
adc
cmp
add
sbb
js
ljmp
and
dec
sbb
arpl
mov
inc
xchg
sbb
jle
pop
clc
jbe
push
mov
mov
add
push
jl
inc
mov
push
or
adc
inc
xlat
test
xchg
es
cmp
test
jo
shlb
in
add
rolb
and
xchg
rolb
xor
hlt
in
jno
lea
in
xchg
inc
and
adc
xchg
and
mov
std
out
add
jo
mov
icebp
hlt
xorl
out
inc
and
xor
xchg
sbb
mov
ficomps
icebp
jno
sti
jae
cwtl
les
xor
call
stc
movsb
call
sbb
mov
in
add
ret
mov
in
or
rcr
test
inc
out
mov
xchg
inc
in
imul
icebp
xchg
mov
dec
cs
sbb
scas
fmuls
je
and
mov
les
into
cmpsb
xchg
adc
dec
arpl
mov
jge
inc
inc
mov
push
adc
pop
mov
cli
cmpb
xchg
sbb
cwtl
and
sub
jg
lret
lock
cmpsb
ret
lock
fldcw
fistpl
cmp
flds
in
push
cmp
ds
ds
mov
dec
mov
jecxz
xor
fwait
cmc
xlat
lret
ljmp
hlt
dec
ja
push
sub
shr
insl
aaa
cmp
mov
test
ss
sbbb
cmpsl
repnz
add
pop
lds
pusha
or
xor
pop
cmp
mov
ret
mov
dec
cmp
jge
mov
xchg
out
cmp
dec
add
je
jnp
adc
push
xor
inc
xor
push
in
fidivrs
or
adc
hlt
mov
xor
add
mov
flds
push
sbb
mov
shlb
nop
sbb
mov
sbb
fwait
stos
cmp
aad
fistps
inc
xchg
jne
pop
imul
ja
mov
pop
jg
mov
aas
in
jg
fldcw
jecxz
push
mov
out
iret
pusha
stos
mov
sbb
mov
ror
cmp
push
cmp
mov
cmp
fistps
sbb
and
push
and
mov
mov
xor
test
jle
mov
xchg
pop
test
jp
mov
xchg
clc
xchg
jecxz
mov
inc
and
mov
and
add
ljmp
cmp
or
sbb
inc
gs
push
pop
xchg
mov
dec
shll
out
lcall
xchg
outsb
in
aaa
or
pusha
and
pop
insl
bound
js
int
inc
sbb
xor
pop
xchg
addr16
imul
xor
push
jl
test
ss
les
hlt
adc
and
mov
pop
and
fisubl
sbb
sysret
xchg
adc
in
fldenv
pop
sub
push
jo
cld
and
outsb
pusha
cmp
std
xchg
sbb
and
rorb
scas
test
jecxz
push
je
add
lcall
addr16
or
dec
jnp
test
sub
push
mov
cli
xlat
dec
sub
clc
notb
popa
lods
cwtl
mov
mov
sub
xlat
mov
xor
dec
test
aam
and
mov
popf
sub
pop
mov
pop
xchg
xchg
sbbb
leave
popa
imul
sub
mov
jnp
cmpsl
ljmp
adc
mov
cmp
shl
xchg
push
lods
push
cmp
add
hlt
pop
pop
cmc
mov
inc
sbb
fisttpl
into
jne
and
popa
adc
sub
test
sti
in
pop
or
test
cmp
push
sbb
push
lea
clc
adc
clc
inc
rcrb
dec
and
mov
not
int3
sub
push
mov
stos
mov
sarb
loop
mov
test
cmp
lret
mov
dec
push
pop
lea
sub
cli
testl
mov
inc
leave
pusha
mov
int
mov
aam
sbb
mov
dec
fisubs
adc
mov
arpl
pusha
gs
add
pop
or
aaa
cli
in
sub
sub
inc
into
dec
inc
testb
test
loope
repz
adcb
inc
inc
mov
daa
and
jne
mov
mov
push
cmpsl
jo
enter
test
xchg
scas
cld
subl
into
call
sbb
pop
sbb
pop
push
mov
add
daa
fadds
mov
loopne
fs
mov
popa
and
mov
pop
pop
arpl
hlt
das
rcrl
cs
inc
add
inc
adc
roll
out
mov
jnp
cltd
lret
dec
sub
mov
ljmp
scas
ljmp
pop
in
push
or
sbb
mov
out
add
sub
cmp
test
pshufw
ss
mov
in
jmp
inc
sub
scas
pop
sub
sub
cmp
adc
cmp
add
xchg
jno
adc
jo
mov
lds
mov
jb
scas
dec
jb
jb
xor
cmp
lods
enter
dec
dec
arpl
sbb
pop
adc
adc
fmull
push
or
jns
test
xor
fisubrs
jg
mov
inc
inc
xchg
rcrb
push
in
ficoms
js
push
orb
mov
xchg
iret
push
inc
mov
or
inc
out
daa
bound
std
ret
pop
enter
mov
fucomip
xchg
dec
in
das
lret
cmp
sub
sbb
scas
inc
inc
mov
cmc
jle
and
out
mov
xchg
push
push
enter
jmp
adc
out
jmp
in
jne
cld
mov
add
xchg
repnz
inc
out
jmp
mov
jp
stos
pop
and
cli
lea
pop
mov
pop
imul
mov
iret
cmp
push
gs
divb
inc
sahf
cmp
mov
jbe
insb
into
pop
notl
xchg
pop
push
dec
inc
addr16
lea
es
pop
xor
adc
jo
push
outsl
aam
addr16
jp
or
lret
je
testl
and
mov
adc
push
cmp
cmp
mov
movsl
mov
adc
mov
in
movsl
mov
and
xlat
push
add
dec
adc
pop
addb
lock
dec
cmpsl
mov
jno
mov
jno
adc
inc
cld
lock
cmp
push
mov
jp
sbb
and
ss
pop
adc
nop
push
popl
add
cmp
xchg
int
test
sbb
mov
enter
xchg
mov
inc
jb
fisttpl
inc
push
mov
loopne
imulb
loop
xchg
add
aaa
or
test
xlat
xor
lds
add
cld
fimull
lahf
add
mov
lret
shrl
push
decl
subl
jae
cmpsb
in
cmc
in
xor
sbb
or
adc
jne
dec
xor
dec
cs
pushf
aaa
out
sbb
ret
pusha
xor
test
arpl
cmp
xor
cmp
lret
sub
popf
outsl
enter
repz
xrelease
or
cmp
fsubs
mov
inc
fldcw
add
inc
test
mov
jg
xor
cmp
xchg
or
aaa
push
cmpsl
and
rorb
sti
cmpsl
inc
repz
lods
or
pop
test
mov
and
andl
cmp
repz
and
stc
jmp
add
pushl
divl
mov
sub
pop
push
xchg
fimull
inc
xchg
mov
scas
out
add
aas
out
test
std
rol
subb
fistpl
lea
cmp
gs
mov
sbb
or
in
add
cli
mov
mov
fistpl
dec
ljmp
xchg
xchg
xor
or
xlat
jae
jno
mov
pop
shrl
stos
sahf
bound
dec
fs
and
inc
mov
hlt
aad
mov
dec
cmpsl
xchg
xchg
mov
cmp
pop
rorl
mov
sbb
leave
arpl
xor
adc
gs
mov
mov
das
stc
subb
push
dec
hlt
out
fists
pop
imul
lods
inc
daa
or
pop
and
mov
jns
cmp
outsl
je
inc
clc
or
mov
lahf
jp
mov
insb
cmpl
and
ret
sbb
fcomi
sub
and
sbb
ss
mov
sub
loop
dec
push
into
in
sbb
aam
sbb
mov
shrl
dec
xchg
push
rorl
push
and
cli
mov
mov
or
mov
test
adc
outsb
pop
xor
lret
icebp
push
xorl
lds
xchg
cmp
out
add
test
xor
mov
push
cmpsl
sahf
or
enter
sub
adc
out
test
jecxz
jp
dec
cmp
pop
add
jp
xchg
and
sub
std
jecxz
movsb
or
lcall
push
sub
push
inc
mov
lds
dec
push
cmpsl
movsb
cmp
mov
imul
outsl
dec
nop
dec
mov
adc
inc
jg
xor
inc
mov
dec
or
sub
leave
inc
jnp
dec
fucom
mov
repnz
mov
sub
push
inc
jnp
xchg
or
cmp
daa
rclb
adc
and
sbb
sar
adc
xchg
stc
inc
jle
add
add
aas
pop
test
hlt
in
xchg
add
xorl
xor
loope
leave
add
mov
daa
mov
jnp
mov
leave
fs
das
decl
pop
fnstenv
jl
add
daa
test
hlt
pop
dec
iret
aaa
sti
mov
aas
sub
fsts
or
jge
hlt
leave
in
pop
jmp
add
jl
cmp
ret
inc
out
rcr
lret
cmpsb
push
outsl
jmp
cmc
or
repz
aam
inc
lcall
mov
data16
fisubl
aaa
dec
and
popl
push
mov
adc
popa
aam
jmp
mov
mov
xor
push
jbe
sub
jmp
inc
gs
in
test
adc
jmp
stc
mov
jo
movsb
mov
sbb
in
sub
pop
push
daa
test
daa
inc
pusha
push
testb
lock
popf
dec
cmp
mov
mov
ficompl
lret
aas
inc
add
cltd
out
sub
filds
addr16
das
fstpt
cmp
xor
outsl
push
lods
outsb
and
jno
repnz
lods
sub
inc
xchg
adc
xor
out
xor
flds
jg
push
dec
fldt
dec
add
test
xchg
pop
xchg
jmp
jne
fbstp
sbb
ds
jae
xor
rorb
in
mov
cld
std
mov
inc
loopne
push
rorb
out
sbb
pcmpeqw
les
ja
ja
xor
jns
movsb
call
jo
jl
or
pop
scas
dec
ljmp
es
lock
enter
test
shl
inc
mov
cltd
rcll
push
data16
nop
mov
and
pop
inc
popf
mov
sub
sub
in
aad
or
pop
mov
out
sti
loopne
xchg
in
popa
adc
add
aad
xor
mov
inc
adc
aaa
out
sbb
dec
xchg
pushl
and
or
pusha
mov
mov
leave
fcmovb
into
pop
fimull
imul
inc
out
les
xchg
push
cmpsl
movl
fs
int
push
xchg
cli
ret
xchg
outsb
shl
adc
pop
testl
push
cmp
imul
daa
jle
add
mov
inc
pop
jge
ret
fsubrl
xor
add
cmp
popf
xor
xor
mov
cmp
imul
cmc
push
test
push
shll
dec
jmp
cmc
pop
insl
in
int3
loopne
out
jle
popa
mov
rcr
lahf
push
fsubl
jbe
pop
or
mov
xor
ljmp
sub
mov
jo
xlat
mov
jge
sti
int
mov
fadds
mov
cwtl
in
add
mov
xor
inc
fs
sbb
ljmp
scas
mov
sub
jle
testb
and
mov
lods
fcmovbe
mov
xchg
call
out
nop
or
bound
mov
inc
dec
sbb
and
mov
das
notl
jae
rorb
movsb
cmp
stc
ror
repnz
mov
mov
pusha
or
mov
outsb
cs
adc
rclb
nop
daa
loope
insl
lods
cmp
xchg
rcr
and
push
add
add
add
adc
push
mov
out
test
mov
sbb
cmpsl
mov
push
les
pop
shlb
mov
xlat
jne
loopne
test
frstor
scas
add
jnp
adc
pop
out
mov
bnd
jns
dec
adc
cmpsl
lods
jp
out
gs
mov
imul
adcl
sti
jg
gs
in
mov
mov
xlat
push
inc
xorb
inc
outsb
scas
and
je
aad
movsl
loopne
push
cmpsl
xor
xchg
or
data16
mov
and
sahf
push
jp
sbb
mov
xor
xchg
pop
mov
subl
and
xor
or
aaa
out
dec
pop
push
je
jge
clc
add
mov
outsb
push
sbb
dec
adc
xchg
mov
shll
push
ss
sub
inc
dec
xchg
pop
loopne
mov
cltd
rorb
jne
mov
xchg
lcall
sub
sbbl
fucomp
ljmp
mov
dec
mov
push
shl
lea
test
jge
sbb
push
jecxz
and
ljmp
je
add
mov
fsubs
rcrb
daa
fistpll
arpl
push
push
sbb
sub
rorb
mov
mov
push
dec
xchg
push
lea
cli
dec
pop
iret
rcrb
ror
out
jl
pop
int3
pop
sbb
repz
push
lock
or
aam
mov
and
dec
pop
mov
jo
mov
cmpl
xchg
push
sbb
dec
movsl
xchg
and
sub
xor
movsl
js
cmpsl
lret
add
js
mov
mov
lcall
shrb
mov
ret
inc
mov
leave
jns
cmp
cmp
xchg
dec
dec
xor
xorb
pushf
mov
andb
test
dec
xor
pusha
add
scas
dec
push
mov
adc
stc
push
mov
xor
dec
addr16
jl
fnstcw
inc
ss
cmp
popa
jb
icebp
mov
xor
lcall
jge
outsb
pop
jo
fdivs
or
popa
push
sbb
mov
cmpsb
lcall
mov
xor
jl
mov
insl
mov
int
enter
aam
scas
mov
dec
insl
cmp
in
jp
pop
push
pop
cmp
cmpb
mov
mov
icebp
push
int3
pop
incl
push
xchg
xor
inc
or
xor
cmpsl
mov
bound
pop
js
xor
sti
or
aaa
popa
lret
and
and
aaa
inc
js
adc
in
or
cmc
sti
stc
icebp
fcoms
xor
cmc
ss
movsb
and
pop
popf
lret
dec
xor
inc
cmpsb
popa
mov
repnz
push
add
xor
mov
adc
jns
into
mov
push
repz
cmpsb
push
add
lret
push
mov
int
dec
std
mov
scas
ja
xchg
and
mov
and
insb
mov
sub
xchg
inc
sbb
add
push
xor
clc
repnz
cmp
call
mov
mov
mov
pop
fbld
pop
addb
and
push
popa
lea
in
push
fstps
into
inc
jnp
jp
pusha
add
mov
scas
lods
test
in
xchg
and
xchg
adc
xchg
fldl
daa
jns
movsb
enter
push
imul
mov
push
inc
pusha
mov
sub
scas
cmp
jns
repnz
or
jb
mov
dec
cwtl
bound
add
hlt
lahf
dec
je
jne
xor
sub
mov
fistpl
mov
leave
rorb
cmp
mov
sbb
sarb
push
das
or
das
dec
sbb
jecxz
xor
jmp
es
test
pop
call
call
enter
outsl
lahf
cmp
mov
fstl
push
pop
movsl
mov
out
cmc
mov
scas
mov
sti
jae
arpl
addr16
mov
aaa
roll
ret
lcall
dec
jne
mov
cmc
pusha
dec
orl
xchg
subb
sahf
in
test
lret
outsl
adc
orl
mov
mov
dec
adc
xor
scas
aam
in
inc
nop
divb
cld
push
push
mov
ss
adc
mov
push
ffree
pop
lea
adc
mov
mov
xor
jne
rcrl
jge
push
stos
aad
dec
inc
clc
shll
call
out
dec
xchg
and
test
fnstsw
dec
cmp
fisubs
addr16
push
insb
pop
mov
dec
or
pop
sub
std
cmc
add
bound
ret
xchg
dec
imul
outsl
cmp
inc
sub
fsub
stc
mov
out
cmc
jg
sbbl
inc
dec
push
mov
adc
mov
lods
loop
push
fldenv
add
jno
mov
mov
xchg
pusha
cmp
ret
sub
push
mov
and
mov
fdivl
ret
add
scas
addr16
dec
ficoms
int
call
mov
movsb
mov
inc
insb
sbb
add
pop
xchg
mov
lahf
mov
sbb
dec
xor
mov
xor
ljmp
push
fwait
inc
orl
mov
and
std
push
dec
inc
std
mov
movb
cmc
scas
inc
jbe
or
mov
addb
jne
inc
sub
lret
sub
inc
stc
inc
lret
fstpt
fidivs
test
gs
jno
iret
inc
sti
int
faddl
push
xchg
jae
push
xchg
mov
rclb
add
inc
add
mov
pop
mov
lea
insb
fildll
mov
iret
and
push
push
pop
xchg
fs
insl
dec
mov
xor
xchg
dec
jecxz
push
nop
xchg
ret
pushf
addr16
loope
xlat
jg
push
sbb
shlb
dec
cmp
bound
xor
mov
fxch
add
xchg
mov
mov
pop
sub
and
jo
ret
mov
fiaddl
mov
insl
or
mov
movsb
pop
leave
xorb
mov
jmp
push
ljmp
jp
push
sbb
sbb
ss
test
dec
jmp
xchg
xchg
xor
imul
sbb
fsubl
mov
jo
add
inc
lock
js
pop
push
xchg
xchg
add
mov
pop
jge
jg
xchg
xor
mov
mov
inc
mov
and
out
mov
outsl
aaa
sub
ss
inc
sbb
jbe
inc
dec
mov
fs
lock
mov
and
jge
pop
scas
mov
or
inc
fcoml
lds
aas
mov
dec
outsb
jge
in
jne
xlat
movsb
mov
dec
jb
imul
adc
sub
push
and
mov
icebp
pop
jo
ds
ret
mov
sub
notb
xchg
out
xchg
ret
lahf
sub
rcr
mov
or
jne
or
adc
iret
mov
subl
mov
mov
aad
insl
pop
adc
mov
pop
jmp
fcomps
fwait
jb
test
push
sub
and
lds
jae
ss
lds
arpl
jns
or
sub
aad
ja
test
rcll
repnz
sbb
xor
cmpsb
mov
in
push
inc
cmp
inc
mov
mov
imul
jl
imul
sbbl
push
aaa
xor
shrb
push
mov
lahf
ljmp
and
sub
jecxz
fcmovu
jnp
push
mov
mov
mov
or
ds
push
or
xchg
sar
inc
daa
insl
inc
repz
sbb
imul
in
xlat
push
dec
fwait
cmc
iret
cmp
ds
cli
cmc
in
shl
or
pop
repz
mov
sbb
gs
nop
outsb
cltd
cmp
mov
and
and
sbb
xor
sbb
add
mov
popl
in
xchg
cmpsl
xchg
adc
iret
int3
xor
loopne
sti
xor
mov
jg
inc
out
mov
aam
pusha
push
sbb
mov
mov
sbb
bnd
pop
outsl
push
enter
subb
xchg
inc
pop
movsb
mov
stc
cli
subb
test
mov
inc
mov
loop
sbb
xchg
mov
cs
lock
jg
mov
jb
test
into
aaa
sub
push
cmp
std
cmp
push
jl
pop
test
dec
loope
inc
or
ret
pop
cwtl
bound
push
xchg
adc
stc
gs
scas
fimull
out
iret
and
leave
xchg
mov
adc
cmp
orb
sub
shrb
sbb
jmp
or
inc
outsb
imul
lcall
scas
add
ljmp
inc
xchg
mov
inc
dec
push
in
xor
sbb
dec
arpl
push
repz
fwait
or
or
mov
jne
adc
lret
insl
lahf
int3
adc
rclb
insl
fldl
mull
ss
mov
arpl
mov
pop
jecxz
xchg
cwtl
cs
and
push
popa
mov
mov
jmp
inc
adc
sbb
out
mov
mov
push
pushf
mov
divb
jge
mov
mov
jmp
jle
fstl
jae
mov
pop
add
sbb
push
mov
stc
aam
push
fs
push
stc
pop
insl
inc
mov
mov
xor
pusha
pop
jns
cmp
ret
pusha
adc
cwtl
dec
xor
push
xchg
gs
dec
lret
fsubs
add
test
out
sub
xor
xchg
xor
xor
mov
push
xchg
aad
lcall
iret
xchg
xor
xchg
test
pop
loopne
xchg
xchg
sub
add
xor
ds
fisttps
dec
fimuls
lods
mov
push
mov
push
test
mov
xorb
add
mov
or
jno
pslld
aam
loopne
mov
andl
mov
add
jecxz
xchg
jge
mov
mov
or
addr16
outsb
pop
in
push
dec
mov
sbb
les
inc
aad
fdiv
imul
popf
out
mov
ds
repnz
cmpsb
adc
mov
sahf
out
inc
cld
or
adc
sbb
add
out
cmpsl
loopne
fwait
pop
int
inc
add
fimuls
jl
fmul
xchg
xor
push
adc
inc
xchg
xor
push
test
fadds
outsl
cmpsl
sub
ja
xchg
cmp
imul
cmp
cltd
xor
inc
xchg
xchg
push
loope
inc
call
call
insl
int
clc
pushf
adc
in
adc
mov
dec
fisubrl
imul
lods
cmpsb
mov
and
mov
and
adc
inc
jns
mov
cmp
mov
jnp
dec
cmp
xchg
js
fimuls
jb
mov
test
add
mov
sub
sub
inc
xlat
lods
loope
mov
orl
sahf
mov
in
in
and
aam
jge
add
js
stos
sbb
stc
cld
mov
pop
cmp
inc
sti
loop
sbb
vxorps
xchg
mov
xor
pop
adc
xchg
lods
fnstsw
inc
adc
subl
pop
jmp
mov
push
test
pop
pop
std
inc
inc
mov
lret
xor
in
dec
test
jmp
mulb
movsb
pop
lcall
imul
sub
dec
xchg
ljmp
mov
xlat
adc
rclb
loope
cld
and
aaa
jmp
test
push
adc
push
dec
sar
out
filds
push
xor
fstl
cmpsb
jbe
inc
mov
jmp
xchg
vpavgw
push
sub
stos
xchg
jge
hlt
add
inc
ja
sbb
cwtl
ja
push
xor
scas
mov
pop
scas
adc
cltd
out
adc
add
adc
dec
out
jle
jmp
add
dec
and
and
fs
sub
adc
imul
inc
push
pop
jo
pop
mov
xor
mov
loope
mov
inc
add
gs
xchg
dec
cmpsl
popa
sub
or
xchg
mov
cs
clc
subb
push
es
stc
loop
data16
shll
stos
jns
jo
add
push
in
mov
inc
fstps
xchg
xchg
lret
std
push
adc
jg
sahf
je
repz
push
enter
insb
jl
sub
inc
jecxz
pushf
sbbl
sarb
mov
sbb
cmp
and
lahf
xchg
out
mov
add
rorl
push
dec
clc
mov
insl
pop
and
cmc
dec
int3
ja
ret
test
test
sbb
dec
fbstp
adc
je
cmp
adc
mov
hlt
jbe
cmp
add
xchg
pop
mov
pop
pop
mov
lock
insb
ljmp
mov
outsb
adcl
loop
mov
inc
mov
mov
jle
out
in
cld
das
lods
dec
mov
in
cmc
fisubrs
inc
ja
enter
mov
sbb
and
xchg
lods
loopne
mov
fldt
test
fucomp
and
addr16
scas
jo
cmp
mov
testl
jno
jnp
popa
and
jmp
pushf
stc
adc
jg
ljmp
hlt
test
rclb
mov
les
aam
int3
loopne
subb
nop/reserved
jmp
sub
add
dec
adc
out
sbb
mov
lds
lret
push
inc
fisubl
sbb
xchg
adc
fcompl
or
dec
pop
fs
lock
pop
add
insl
cltd
mov
int3
inc
push
das
jl
in
inc
sbb
or
add
sarb
xor
and
sahf
jnp
inc
popf
rcrb
push
pop
push
cmp
shll
leave
cwtl
jno
push
sbb
jl
aas
adc
sahf
cld
xchg
movsb
icebp
jbe
and
dec
movsl
fucomi
and
mov
daa
fdivrl
inc
out
jnp
adc
imul
out
nop
testl
jecxz
mov
inc
stc
inc
mov
hlt
rclb
scas
cs
fcompl
push
out
aaa
push
add
mov
lea
mov
mov
xlat
jp
shlb
cmp
lea
fildll
ret
push
iret
add
lds
or
inc
lods
push
in
mov
xchg
inc
pop
aaa
iret
cmp
adc
divl
mov
inc
inc
mov
cmp
lods
mov
or
test
pop
nop
push
imul
ss
add
pusha
pop
fwait
xlat
fmulp
cld
mov
in
mov
fldt
pop
cmc
fimull
and
out
out
sub
out
pop
scas
mov
inc
in
mov
rorb
imul
push
std
clc
movsl
repz
inc
xchg
in
mov
sub
mov
pop
pop
sub
subps
movsl
push
daa
dec
xor
dec
push
mov
lret
out
gs
mov
xchg
mov
push
mov
es
mov
adc
rep
fnstsw
movsl
dec
das
push
dec
cmpsb
push
cmp
pop
dec
add
lods
ss
testb
adc
nop
cmc
push
loop
inc
sub
dec
xchg
clc
addr16
test
rorl
nop
mov
dec
test
push
std
movsl
xor
pop
loope
sbb
arpl
je
xor
xchg
mov
ds
icebp
jo
ja
sbb
out
or
stos
outsl
adc
mov
add
pop
or
leave
lods
mov
inc
popf
out
in
call
xchg
push
cwtl
in
pop
adcl
fidivrs
bound
jle
pop
inc
std
hlt
and
and
inc
push
out
jl
incl
aam
add
movsb
dec
into
jge
mov
lods
add
sub
inc
fsubrl
or
mov
fldt
mov
mov
cmp
jge
arpl
and
and
fdivl
mov
inc
xor
push
xchg
push
jmp
cmp
repz
imul
xor
test
ss
or
add
fucomi
js
push
xor
rcll
xor
insl
repz
pop
fbstp
pop
xor
imul
stos
add
push
dec
push
add
mov
xlat
stc
popf
sbb
inc
xchg
jmp
fldcw
fmull
mov
insl
mov
jnp
cltd
cwtl
cmpsl
std
add
pop
fs
sbb
mov
or
pushf
pop
mov
adc
inc
inc
inc
mov
sub
aaa
dec
testl
sub
cs
outsb
mov
cmpsl
pop
lret
add
clc
and
aad
je
mov
lahf
loope
sbb
pop
aas
aam
cmp
push
iret
xchg
scas
test
les
xor
jne
ror
jmp
repnz
repz
rcr
test
insl
and
lea
scas
fs
jne
pop
clc
and
outsb
into
mov
push
xchg
loope
jl
dec
loope
fcompl
xor
repz
pop
cmp
testl
jmp
push
cmp
enter
mov
jle
push
sub
or
cmp
xor
pop
push
mov
test
xchg
aam
jns
mov
xorl
pop
dec
lret
dec
cwtl
adc
scas
aam
cld
xor
aam
dec
xorl
stos
lea
test
aas
mov
add
cli
mov
xchg
dec
in
cwtl
add
push
jno
inc
mov
mov
push
fxch
scas
call
sbb
in
push
xchg
push
iret
mov
pop
dec
outsl
jg
cmp
cli
xchg
or
push
fisubl
in
data16
out
das
add
cwtl
loopne
das
insb
push
sbb
lods
xchg
xor
cs
shrl
lret
jp
lds
data16
mov
push
push
sub
sub
fidivrs
inc
andb
in
add
jg
cmp
cmpsb
mov
add
push
rcll
xor
pop
call
sahf
or
lret
enter
mov
lods
lret
imulb
mov
dec
sbb
in
adc
push
test
rclb
popf
test
xchg
mov
push
xchg
call
xor
mov
sub
movsb
mov
xlat
cmp
adc
mov
jo
adc
sbb
add
movsb
pop
cmp
in
fcmovnu
pop
dec
push
shll
mov
loop
popf
pop
mov
adc
call
add
xchg
push
sub
push
jp
add
jo
push
inc
test
mov
sbb
stos
test
scas
mov
mov
movsb
aaa
fsubrs
cmp
jmp
adc
sarl
and
push
stc
ret
pop
loope
or
cltd
shll
pop
pop
pop
xor
lods
scas
jbe
pop
inc
adc
sub
adc
cmpl
mov
inc
les
xchg
and
cltd
add
xchg
mov
bound
and
in
mov
mov
repz
jp
in
das
xchg
test
dec
out
aaa
out
fmull
ret
loopne
pop
xor
jae
fisttpll
xchg
popa
jmp
ja
rolb
les
inc
pop
das
out
int
and
bound
sbb
or
outsl
shrl
cmp
xchg
in
and
iret
xor
jno
cmpl
mov
jp
rorb
repnz
aam
push
or
pop
test
sub
or
mov
jne
sub
sbb
insb
jle
fdiv
push
enter
lret
call
roll
xchg
popa
in
mov
stc
jecxz
push
xorl
ljmp
push
mov
sub
adc
pop
mov
xor
ss
push
or
sarl
mul
xlat
adc
mov
mov
push
lock
mov
push
je
xor
xchg
jbe
loop
cmpsb
ja
sbb
adc
int
xchg
xchg
xor
xchg
adc
int
push
push
push
sbb
pusha
jns
add
xchg
xor
cmp
aas
push
sarl
jne
pop
aad
fsubrs
lock
stos
negb
xchg
das
jl
fsubl
pop
enter
cmp
sub
jmp
inc
xlat
xchg
test
cltd
mov
mov
scas
popa
inc
cmp
inc
push
rcrl
rorl
jnp
dec
cmpl
xchg
adc
cmp
icebp
ss
pop
call
data16
shll
sub
mov
xor
fistpl
stos
aam
add
jbe
pop
mov
xchg
push
shrb
shlb
pop
addr16
xchg
movsb
cmp
add
gs
lahf
addr16
push
add
cmpsb
push
call
jb
push
pop
mov
movsl
jno
insl
jmp
lret
gs
xor
jp
daa
test
mov
add
adc
pop
shr
lds
or
shlb
lods
push
ja
push
cwtl
pop
jae
scas
movb
ss
movsl
cmp
jmp
test
adc
inc
cmp
inc
stos
mov
rcrb
and
sub
push
and
arpl
or
imul
xor
xchg
sarl
mov
adc
jg
in
add
sti
in
jo
pop
js
decl
mov
and
movsl
lock
sbb
inc
out
cld
sti
out
cmp
and
inc
fsubrl
outsb
js
xchg
js
sbbl
or
ja
xor
mov
xchg
xor
cmp
in
imul
sbb
jmp
push
repz
mov
mov
push
push
das
jne
xchg
add
test
loope
xor
movsb
data16
mov
pop
sub
push
dec
push
out
mov
insl
inc
je
cld
jecxz
push
xchg
xor
ss
mov
arpl
cwtl
subb
sbb
xchg
push
test
push
shll
pop
outsb
push
sti
out
xor
xor
movsl
js
mov
or
jae
sbb
ja
mov
mov
sub
push
inc
fistpll
dec
lcall
movsl
mov
jns
rorb
subb
pusha
mov
das
mov
jns
in
jno
jo
jmp
loop
mov
cs
fnsave
cs
pushf
push
fstl
xor
out
mov
push
pop
mov
mov
or
hlt
push
sub
inc
push
xchg
call
jno
cli
dec
push
pop
mov
out
shlb
repnz
fisttps
jmp
repnz
cmp
mov
in
and
mov
cmp
arpl
cmp
and
add
jmp
scas
fwait
xchg
adc
mov
mov
lods
sahf
jb
push
xlat
fwait
dec
jae
addr16
fmul
loopne
push
mov
lahf
jle
pop
cltd
inc
mov
xorb
jae
jo
mov
shrl
jle
push
and
sub
xchg
dec
insb
dec
std
adc
leave
fildl
push
sbb
fstps
xchg
push
cmp
mov
jbe
push
popa
xchg
jg
in
sub
inc
pop
mov
push
add
and
mov
dec
ror
and
sub
and
push
xor
xchg
xchg
or
fidivs
pop
jo
pop
push
rcll
dec
out
dec
sub
movsl
orb
add
mov
xchg
jmp
sub
mov
sar
jae
dec
lods
jecxz
add
adc
dec
movsb
sbb
sarb
ficoml
les
test
stos
adc
pop
adc
mov
adc
hlt
jnp
push
dec
and
js
add
ljmp
add
loop
mov
orb
sub
push
std
xchg
in
push
xchg
sub
outsb
enter
add
clc
int3
mov
dec
push
lret
test
or
mov
ret
jl
cmp
and
push
push
add
fs
leave
dec
data16
sub
xlat
push
lds
add
add
mov
scas
jae
sub
and
and
mov
sub
lock
jmp
mov
popa
insb
int
xchg
idivl
push
ljmp
mov
jmp
xor
mov
push
adc
rcrl
dec
xchg
or
push
insb
and
and
imul
stos
int
mov
xor
dec
jge
lahf
test
mov
pop
inc
cltd
xor
shrl
aas
push
jae
and
into
adc
pusha
dec
dec
sub
ja
jp
cmp
dec
fucom
and
adc
jno
subl
scas
inc
aam
adc
lea
aaa
add
lcall
pop
mov
dec
pusha
stos
sub
add
sbb
or
mov
sub
xchg
pusha
mov
test
out
movsb
ret
or
inc
xor
push
jb
pop
ss
mov
nop
addr16
inc
xchg
mov
push
ja
in
add
mov
insl
call
add
add
mov
lds
adc
mov
jp
dec
pusha
xchg
push
inc
xor
mov
adc
ss
mov
mov
sub
pop
pop
cld
js
inc
aam
aam
setg
lret
stos
mov
push
lret
add
or
addr16
push
mov
push
cmp
lcall
fwait
sub
ss
loope
cmpsb
pop
lods
push
outsl
movsl
cs
cmpb
mull
aas
ret
cmp
fcompl
cltd
cmp
test
inc
mov
cltd
out
out
pop
test
aam
sbbl
jge
cwtl
sbb
shll
mov
cld
jo
jge
mov
dec
clc
dec
inc
addb
cwtl
pinsrw
add
fldl
pushf
out
mov
sub
bound
stc
faddp
jne
ret
sub
ret
cmc
insb
mov
lcall
stc
dec
adc
sbb
stc
lods
push
pop
xor
mov
pop
dec
aas
icebp
dec
jp
aam
clc
lret
mov
jg
insl
cmp
push
repz
popf
in
mov
mov
fnsave
xlat
inc
loopne
fldlg2
mov
cli
aas
pop
cmp
add
adc
adc
adc
xorl
stos
mov
fistps
and
add
and
and
dec
xchg
mov
clc
mov
imul
push
add
orl
mov
shll
mov
call
adc
cmp
ja
aad
pushf
mov
repz
int3
sbb
mov
je
test
scas
sbb
icebp
cmp
xor
mull
pop
stos
cmp
xchg
cmp
cmp
xchg
std
jle
jl
jl
xor
pop
mov
aad
xlat
or
mov
inc
fcomp
cld
jo
loopne
cmp
push
push
xchg
xchg
xchg
xchg
mov
shll
pop
cwtl
les
lea
adc
sub
sub
sbb
adc
xchg
int3
jp
mov
or
js
lret
jg
gs
push
dec
cmpsl
mov
call
lea
test
add
adc
mov
lahf
xor
ret
nop
fmull
bound
push
push
sub
ds
mov
out
mov
push
dec
test
js
jae
mov
jecxz
outsl
inc
push
cmp
adc
mov
mov
hlt
jge
int3
faddl
mov
cwtl
mov
dec
mov
adc
inc
mov
fstpl
ret
pop
cs
ss
mov
mov
cmp
popa
xor
xchg
fistps
out
push
pop
push
aam
cmpsl
movsb
outsb
and
clc
out
loop
lret
mov
sbb
movsl
mov
inc
mov
mov
cmp
inc
mov
mov
mov
or
lods
inc
int
mov
js
int
sbb
pop
iret
lcall
les
adc
mov
cmpsl
xchg
push
add
out
stos
pushf
jge
push
into
jae
fwait
imul
lahf
xchg
pop
mov
popa
add
mov
pop
data16
cwtl
dec
ror
cmp
leave
vhaddps
mov
sub
les
sub
jl
pushf
mov
push
lods
dec
push
dec
mov
cmpsl
das
cmp
dec
cmp
add
shlb
arpl
jp
mov
inc
lahf
adc
fildl
jae
pop
add
fsubr
dec
jnp
mov
aam
push
sub
jns
in
data16
xor
mov
pop
push
aas
rclb
mov
push
xor
in
in
or
subps
and
pop
pop
mov
mov
sub
je
fisubl
addb
int3
ficomps
nop
in
inc
adc
push
mov
jno
enter
cli
mov
push
xchg
in
and
mov
test
xchg
popw
sub
mov
aam
push
sbb
jnp
xchg
rcll
lahf
and
mov
rcll
mov
mov
out
sub
test
nop
stos
dec
int3
push
aam
inc
outsb
imul
mov
test
adc
cmp
mov
and
and
mov
push
push
into
pop
and
jns
sub
push
or
jmp
aaa
aaa
iret
mov
daa
adc
inc
mov
mov
pusha
add
mov
in
push
xchg
mov
outsb
fwait
add
loop
push
push
scas
sbb
dec
stc
jmp
lds
sub
sub
ret
clc
and
cmp
adc
pop
cmpsl
ret
mov
inc
cmc
cmp
jnp
nop
add
jmp
pop
das
rcrb
les
testl
mov
cltd
bnd
stos
cmp
xor
aad
addb
out
xchg
fwait
adc
cmp
icebp
xor
repnz
adc
jnp
insl
out
fwait
or
loopne
je
add
inc
pop
pop
out
scas
rclb
pop
and
nop
call
mov
xchg
cmp
adc
insb
xor
dec
into
jb
jl
lea
orl
fsub
arpl
or
sub
mov
inc
in
jne
inc
or
cmp
mov
pusha
mov
fistpll
out
mov
loop
fistpll
loope
les
push
shll
push
jg
and
mov
notb
dec
stos
in
cli
sub
lret
xchg
pop
mov
push
ljmp
push
into
mov
or
xchg
jp
mov
outsb
ret
repnz
je
sub
test
sar
push
mov
ficoml
mov
lcall
cmp
jecxz
sub
fildll
xchg
icebp
movsl
stos
or
outsb
cmp
push
ds
dec
popa
xchg
push
js
jbe
in
cmc
and
loopne
jge
push
xor
adc
les
sub
mov
imul
add
ficomps
insb
xor
fucomip
push
mov
mov
push
sahf
sbb
ss
aas
pop
adc
sbb
enter
hlt
pop
orb
sbb
imul
jg
dec
scas
shlb
repnz
mov
fdivr
rcll
add
lea
mov
push
sbb
push
sub
cmc
imul
jae
jp,pt
hlt
int3
mov
mov
and
test
movsb
mov
sbb
xor
pop
inc
aaa
jge
xor
mov
sbb
hlt
sub
repnz
pop
push
cmp
leave
fucomi
push
jb
sbb
pop
adcb
and
xchg
sbb
out
cmp
inc
test
cmp
and
dec
in
mov
push
test
and
inc
push
aam
out
mov
ja
repz
pop
push
mov
aad
sarl
test
push
aaa
or
mov
push
and
inc
cltd
and
fstpl
leave
std
cltd
or
jle
inc
mov
mov
fs
sarb
scas
in
out
lock
mov
fdivr
sub
sbb
mov
fwait
sbb
std
shll
lret
test
test
push
or
in
jp
push
and
lret
jb
iret
mov
es
cmc
es
ja
mov
popa
repz
mov
inc
jnp
loopne
pushf
arpl
xchg
mov
xor
icebp
mov
sub
cld
adc
or
push
inc
jge
xchg
movsl
adc
sahf
sti
testl
pop
xor
add
fstp
adc
lahf
lret
push
in
lods
cmp
mov
and
int
inc
cli
pop
fcomps
or
xorb
imul
shrb
mov
bound
int
inc
fcomps
test
lret
cmp
std
adc
sti
adc
rorl
incb
dec
or
leave
mov
call
or
and
jne
fwait
pusha
ret
icebp
push
jecxz
inc
sub
js
dec
jo
pop
loop
mov
insb
addb
mov
data16
add
mov
notb
jb
and
push
aas
icebp
jnp
notl
lret
mov
rorl
mov
jae
mov
mov
mov
out
xor
push
cmp
loop
pop
repz
lock
xor
scas
lret
adc
in
or
or
in
pop
mov
pop
shlb
popf
repz
cmp
loopne
mov
cwtl
jl
lods
jmp
imull
push
nop
mov
out
emms
xchg
inc
xchg
test
lahf
lds
je
xchg
out
imul
and
iret
sub
add
xchg
xchg
push
scas
fucom
add
jnp
inc
ret
insb
add
and
jp
hlt
mov
cli
pop
jmp
inc
rorb
and
andb
rcr
ret
pop
inc
mov
inc
push
aaa
mov
insb
daa
call
mov
cmp
sub
clc
mov
sti
mov
add
push
sbb
xor
call
es
jle
cld
testb
mov
pushf
pop
xor
in
ret
rcr
or
scas
pop
mov
sar
add
adc
lods
mov
inc
inc
jns
fdivr
adc
push
mov
sbb
stos
dec
jno
sbb
daa
mov
enter
cmp
aam
int3
in
mov
adc
call
pop
sbb
and
das
mov
out
clc
cmp
test
movsl
fidivrl
shrl
test
pop
push
cmp
repnz
push
fiadds
fimuls
jecxz
dec
cmpsl
jp
dec
xlat
test
lret
jno
imul
scas
inc
sahf
adc
jo
cmp
and
pop
loop
jo
jecxz
nop
addr16
leave
dec
inc
je
sbb
jl
sbb
in
sahf
xchg
sub
loop
inc
or
add
shrl
mov
mov
arpl
mov
and
push
xchg
sbb
sub
dec
out
adc
int3
dec
add
add
dec
inc
popf
fildl
sub
out
lea
sar
lock
icebp
jnp,pt
incb
nop
cmc
push
arpl
pop
mov
aas
or
imul
ljmp
pusha
icebp
push
out
lahf
in
ds
and
xor
xchg
frstpm(287
cwtl
or
jmp
lret
daa
mov
gs
push
inc
lds
or
inc
dec
cs
mov
inc
cmc
sti
sbb
and
or
cld
in
and
sub
rclb
mov
xor
cmp
push
add
icebp
nop
imul
adc
cwtl
lret
stos
aam
lret
leave
sarb
pop
dec
fimull
aad
xor
stc
pop
adc
xor
mov
je
adc
in
pop
mov
fs
and
or
sub
inc
xchg
push
inc
cmp
jge
dec
pop
rcll
daa
fstps
xchg
out
test
mov
testl
rclb
xor
lods
inc
test
test
ret
pop
or
push
mov
dec
aas
or
inc
push
scas
sub
xor
add
and
sbb
mov
out
mov
and
in
out
fsub
add
mov
cmpb
cwtl
fwait
das
lcall
jg
in
mov
adc
rorl
out
adc
stos
pushf
mov
aas
scas
mov
es
push
push
popa
jno
loop
mov
stos
jecxz
mov
sub
lods
xchg
mov
outsl
push
push
add
cmp
inc
outsl
lret
jo
stos
fwait
jle
mov
lods
lods
xorl
pop
enter
and
sbb
bound
jae
imul
mov
push
fldenv
jle
sub
pop
mov
xchg
scas
out
das
cmp
leave
nop
scas
push
cwtl
inc
into
jmp
daa
test
subl
mov
mov
push
rorb
mov
fdivp
ss
test
imulb
and
ret
pop
daa
jns
gs
outsl
lea
sbbl
and
movl
std
pop
mov
outsb
mov
dec
xlat
js
subb
daa
inc
pop
inc
fwait
jmp
xlat
push
adc
mov
loopne
es
test
addr16
push
dec
pop
mov
pop
popa
std
sbb
mov
push
mov
inc
jb
cltd
rcrl
jmp
xchg
adcb
shlb
sub
or
pushw
push
dec
lret
xor
mov
sbb
xorl
push
or
adc
jp
dec
cwtl
mov
jecxz
sub
outsb
cld
push
popa
mov
iret
rorl
adc
rorl
pop
stc
mov
xor
mov
and
xor
mov
outsb
adc
in
insb
xchg
jle
cld
loop
add
pushf
inc
adc
fsts
adc
bound
jl
dec
xchg
or
je
sub
jecxz
outsb
push
dec
or
jne
xchg
sbb
outsb
jb
mov
lcall
loopne
dec
call
outsl
movsb
xor
daa
pusha
jbe
jne
and
push
out
adc
ljmp
fmuls
inc
fiadds
je
jp
ret
fistl
xor
pop
ret
mov
mov
in
pop
bound
out
mov
xor
xor
mov
push
sub
sub
movsb
mov
loop
lea
pop
push
mov
subl
cmp
sbb
out
sbb
inc
es
push
stc
hlt
adc
sbb
dec
sbb
jo
out
iret
xchg
push
pop
repz
dec
sti
subb
adc
outsb
add
add
push
jo
jl
je
mov
out
aas
int3
lods
or
push
sub
in
js
push
aam
sbb
push
mov
xor
test
dec
dec
rolb
adc
scas
add
lcall
or
xor
lods
ja
sub
push
fwait
push
sbb
pop
pop
je
ds
daa
insb
inc
mov
mov
add
xor
stc
pop
inc
hlt
cmp
push
mov
lahf
rol
hlt
and
cmp
sti
jo
push
cmc
cld
bound
je
sbb
fcoms
cmp
sahf
rol
push
jl
roll
jl
in
push
into
xor
jb
lea
pop
cltd
lret
lds
sub
movsb
in
out
insl
jb
std
push
aas
addr16
mov
xor
lock
xor
mulb
mov
mov
rcrl
jl
jb
aad
pop
pop
inc
test
imul
imul
outsl
cmp
add
sbb
daa
cmp
push
lret
cmp
jnp
xchg
imul
loopne
enter
into
jle
fs
fistps
ljmp
sbb
fmull
dec
jl
push
pop
pop
cmp
mov
xor
sti
jmp
dec
sub
ds
push
fistpll
jle
jno
mov
xchg
lret
lret
push
pop
lret
sub
inc
sbb
scas
scas
xor
ret
icebp
pop
fbld
outsl
gs
cwtl
add
ret
xchg
out
in
dec
push
inc
out
pop
mov
xchg
jbe
jecxz
rorb
in
outsb
xor
adc
pop
jg
xchg
pop
lock
imul
ret
in
ret
shll
stos
rol
push
inc
int3
shll
lret
cmp
imul
popf
xor
mov
lcall
das
pop
aas
cmc
stc
jnp
outsb
aas
lock
sbb
jge
int
mov
pop
mov
addr16
scas
int3
adc
iret
jb
xchg
xchg
mov
or
cmp
mov
arpl
nop
add
movsb
pop
mov
xor
jno
pusha
pop
xor
cmp
movsl
xor
dec
adc
xor
test
rcll
cltd
cmp
sub
dec
scas
cmpsb
ds
add
mov
loope
sahf
decl
pushf
fdivp
hlt
shl
repnz
es
out
iret
lret
out
js
mov
pusha
stc
test
pop
cmp
and
in
push
icebp
or
mov
pop
daa
pop
lea
in
addr16
jmp
xchg
inc
nop
adc
sub
outsb
sbb
insb
es
lods
add
sbb
outsb
jo
jp,pn
and
mov
insl
cwtl
xor
sub
push
cld
aaa
out
ss
repnz
js
jp
lock
insl
inc
or
mov
movsb
repnz
mov
push
cmc
and
cmpsb
xchg
adc
pop
xor
mov
mov
popf
in
out
mov
sbbb
lock
xor
test
xor
push
xchg
nop
add
and
or
cld
xor
push
sti
push
add
dec
and
jmp
mov
jnp
psraw
cmpsl
aam
fidivrs
movsl
pop
xchg
cmpsl
jg
cwtl
mov
movsb
mov
push
data16
xchg
inc
idivb
loopne
jp
mov
imul
add
pop
or
push
fistl
dec
popf
in
ljmp
push
cmpsb
pop
aam
sub
add
and
adc
mov
pop
jo
addb
and
push
ret
ss
movb
enter
mov
fstps
pop
mov
lock
push
test
push
adc
jp
stc
fisubl
jg
leave
inc
xchg
cmc
mov
aas
mov
mov
mov
mov
push
mov
fldl
pop
lods
lea
scas
cld
add
cmpsl
test
rcll
icebp
sub
xchg
inc
cmp
aas
mov
in
jecxz
jbe
cli
lea
mov
dec
pop
push
mov
jne
push
insl
inc
adc
fnsave
jae
stos
jmp
cmp
mov
inc
push
cwtl
scas
xorl
pop
xchg
xchg
adc
mov
mov
sub
jmp
dec
ja
daa
or
push
push
sbb
mov
popa
add
xorl
mov
mov
rcr
ja
pusha
clc
jmp
pusha
sbb
jp
pop
mov
mov
sub
out
stos
lea
push
int3
add
je
ljmp
cmpl
lret
mov
push
lcall
xor
add
into
loope
push
stos
bound
mov
inc
lret
sub
jno
jge
or
stc
mov
pop
dec
outsb
inc
inc
fisubs
or
adc
mov
shll
jnp
out
cmp
sub
repnz
fs
addb
cmc
mov
fs
decl
xor
mov
and
into
insb
loope
shll
sub
jno
adc
mov
mov
dec
fidivrl
mov
push
nop
popa
movsb
mov
mov
lcall
xchg
lods
sub
inc
sbb
sar
inc
icebp
jo
or
sti
xor
rolb
and
sbb
jb
add
lods
sbb
jae
ret
iret
xchg
push
push
out
sub
loope
jno
outsl
pop
mov
shrb
out
addr16
xor
sarb
push
adc
xchg
lods
clc
lret
and
add
je
js
adc
mov
jmp
lcall
sbb
test
mov
jae
add
and
enter
inc
int
es
cs
pop
sub
pop
add
jo
shrl
test
pop
ljmp
add
sub
iret
xchg
jge
mov
insl
out
aad
sbbb
out
scas
jmp
sbb
in
mov
xchg
mov
andb
or
arpl
cmp
lds
sub
repnz
ja
or
lahf
imul
sbb
mov
out
ss
xor
lods
jle
add
add
push
fs
popa
pushf
pop
les
adc
cmc
mov
outsb
xchg
test
sarl
mov
inc
sub
inc
jae
in
sbb
push
fisttpl
aad
xor
test
nop
jmp
fnstcw
scas
pop
test
sub
arpl
je
and
lret
add
mov
daa
adc
mov
and
std
in
or
iret
leave
out
xor
adc
ljmp
pop
sbb
movsl
sub
jb
mov
lret
add
cs
sub
cli
xchg
and
jnp
cs
stc
and
mov
add
dec
push
rorb
cmp
or
std
mov
adc
mov
push
xchg
mov
cli
sbb
or
mov
mov
add
fiaddl
pop
add
hlt
shrb
pusha
jge
and
xchg
dec
mov
xchg
lret
jp
pop
xchg
dec
push
mov
or
arpl
clc
adc
rolb
and
ljmp
or
ljmp
push
orb
outsl
fcomps
mov
jo
push
inc
test
sub
mov
aam
test
push
sbb
xchg
insl
add
adc
xorl
lods
movsb
jmp
xorb
out
fnstcw
in
jns
xor
scas
cmc
nop
mov
ss
mov
pop
push
adc
repnz
fmuls
and
cmp
and
xchg
fwait
dec
jp
dec
ret
mov
mov
movsb
fstpl
jae
jno
in
fsubrs
xchg
pop
test
pop
inc
adc
leave
push
cmp
add
hlt
stos
dec
mov
xor
push
jl
in
fisttpll
cmp
cmp
add
fadds
mov
mov
jae
iret
movsb
add
cli
sarb
les
stos
stc
arpl
std
loopne
jle
les
sub
cwtl
sbb
aaa
cmc
xor
inc
call
cmpsl
or
mov
test
mov
dec
inc
dec
pop
in
xor
mov
jno
cmp
cwtl
shrb
cmp
repz
jmp
daa
lea
movsb
popf
mov
jns
fdivs
in
or
jno
lret
jae
xor
jno
mov
clc
sbb
jnp
cltd
call
sbb
aad
xchg
pop
sbb
mov
or
add
lea
int3
dec
mov
jl
enter
lock
sti
cmpsl
cmpsb
add
push
add
pushf
dec
bound
dec
dec
adc
dec
movsl
sub
inc
ja
mov
mov
dec
xchg
fists
pop
inc
ret
js
xchg
pop
xchg
lahf
mov
clc
sbb
adc
mov
pop
cmpsl
jl
shlb
add
movsb
dec
ret
xchg
sub
push
pop
fisubrl
lahf
and
out
pop
dec
or
dec
xor
gs
ja
pop
and
inc
jne
mov
fstps
bound
cmp
sub
shlb
xchg
test
inc
idiv
xchg
push
cmp
fnsave
and
je
mov
inc
cwtl
mov
sub
inc
aaa
mov
jmp
dec
mov
clc
pop
cmp
es
xchg
in
fistpl
js
lods
ja
data16
sub
sub
scas
in
and
and
cmp
xor
mov
cmp
or
mov
dec
arpl
cmp
inc
imulb
xor
mov
mov
je
xor
mov
cld
jg
xchg
std
jmp
sti
push
hlt
es
cmpsl
xor
call
push
jl
outsl
and
mov
cmp
jae
jmp
or
cmp
cmp
inc
sbb
test
pop
repz
fisttps
cmp
insl
mov
jp
xchg
sarb
and
stos
test
or
fwait
jmp
in
int
xor
sbb
mov
ljmp
xor
jb
add
movsb
je
xchg
lea
dec
in
imul
cmp
pushl
iret
xchg
cmpb
scas
int
mov
jo
inc
repz
js
fmull
or
mov
or
rorb
xor
iret
dec
movsl
jle
pop
dec
addr16
xchg
inc
pushf
mov
push
or
pop
pop
jne
add
pop
lods
inc
mov
insb
ss
xor
lahf
push
test
loop
andl
divl
int
sub
cmp
fstps
mov
or
bound
jne
js
stos
jno
inc
sub
mov
loopne
andl
fldt
inc
push
add
aas
and
mov
adc
ficomps
mov
or
scas
fs
jmp
fstps
xor
lods
lods
imul
sbb
and
scas
add
mov
xchg
out
loope
enter
push
mov
iret
fbstp
inc
fidivs
sbb
cmpsb
mov
shrb
aas
or
sub
jmp
xorb
jmp
pop
pop
xchg
les
movb
lods
mov
in
shlb
leave
aaa
stos
fstl
cmp
lods
out
sub
jge
add
or
pushl
lods
xor
jg
jmp
dec
rorl
jbe
inc
jno
mov
movsl
push
sub
mov
shll
daa
and
ljmp
mov
push
pop
dec
hlt
dec
sbb
dec
inc
shll
and
ret
js
push
lret
dec
mov
hlt
jmp
cli
sub
push
sub
stos
jecxz
aad
aas
int3
sbb
inc
lret
lcall
xor
mov
mov
bound
inc
popa
out
xchg
jnp
adc
pop
call
inc
lods
mov
rcll
sbb
mov
inc
xor
jecxz
and
jb
fldenv
mov
fdivrs
inc
fwait
or
pop
test
out
nop
pop
mov
comiss
push
and
addr16
ja
pop
mov
mov
cmp
inc
and
push
scas
mov
std
cld
cwtl
and
popa
lea
ja
repnz
mov
adc
add
fmuls
addl
ja
out
hlt
dec
mov
lea
nop
jbe
jnp
subl
cld
fwait
dec
adc
xor
jg
or
jecxz
xlat
push
jo
testl
cmp
xchg
mov
decb
lret
ret
sbb
inc
jbe
fs
adc
xchg
add
push
and
push
mov
pop
popa
xor
lret
pop
and
out
jg
sbb
mov
fisubl
dec
xor
std
popf
imul
xor
jl
ret
les
cs
jne
imul
dec
idivl
test
dec
pop
jg
arpl
inc
pop
lcall
or
lods
jnp
mov
movsb
fwait
cmc
xchg
inc
fdivl
out
push
mov
cmpsl
mov
movsl
sbb
jae
data16
jne
call
mov
lods
xchg
mov
dec
pop
lret
int
insb
pop
aas
adc
mov
xchg
mov
lock
mov
jns
jo
mov
or
int
cmc
pop
add
mov
hlt
loopne
ja
sub
mov
dec
ljmp
arpl
mov
push
pushf
cltd
test
ret
test
cli
test
mov
shlb
add
pop
mov
es
ret
and
fists
sub
inc
pop
dec
inc
inc
ss
jg
sti
scas
xor
nop
scas
fnstcw
subb
cmc
testl
push
dec
fistpll
in
call
loop
frstor
jno
dec
sbb
sarl
jmp
mov
pushf
test
leave
sbb
or
dec
je
xlat
xor
repnz
jle
dec
xor
sbb
orb
pusha
cmp
scas
test
cmp
add
mov
scas
leave
fs
fistpl
or
cmp
int3
mov
cwtl
add
or
out
test
pop
arpl
mov
lret
mov
fadds
xor
aam
test
xlat
mov
push
jno
inc
lcall
pusha
test
adc
adc
ja
es
add
lret
mov
mov
cmc
subl
vmovss
sbb
fisttps
fildl
and
les
addr16
sbb
out
aam
out
out
adc
cmpsl
push
sub
movsb
mov
mov
jbe
jo
push
rcll
xchg
sahf
dec
divb
das
movl
pop
mov
sbb
jg
adc
xlat
repnz
push
dec
jmp
mov
inc
aad
aad
pop
hlt
push
mov
mov
dec
cmpsl
sbb
mov
lret
out
iret
shll
je
dec
fmull
stc
sub
shll
push
cmp
hlt
fs
cs
pop
and
popa
ret
pop
sub
ret
clc
ficoms
pusha
outsl
incb
or
inc
xchg
sbbl
mov
add
dec
xchg
adc
mov
lcall
subl
pop
aam
movsb
cmpsb
jb
pusha
ss
mov
or
push
mov
out
adc
dec
pop
lret
std
push
inc
lahf
xchg
mov
cmp
je
push
bswap
xlat
movsb
pop
sbb
sub
xchg
dec
cmc
push
scas
lods
imul
jmp
mov
cmp
mov
or
rcrb
jb
lret
xor
in
jp
pop
cli
cmp
dec
or
sub
ja
push
sbb
push
mov
push
xor
jno,pt
lret
sbb
dec
bound
insb
jae
mov
add
dec
xor
rcll
jge
ljmp
jne
jge
fsubrs
int3
aam
lret
adc
cmp
ficompl
pop
or
sbb
xor
out
mov
dec
rcll
iret
fiadds
sti
cmp
add
in
xor
frstor
cli
mov
xchg
cmpsl
xchg
insl
enter
adc
int3
dec
push
sub
and
je
scas
jg
dec
dec
cmp
test
push
les
adc
xchg
jae
sbb
mov
call
roll
jno
test
cmp
ljmp
inc
pop
cmpsb
nop
sbb
enter
inc
pop
pop
mov
lods
sub
jecxz
pop
mov
inc
aad
jge
fsubs
or
out
sub
out
lods
mov
sbb
sub
add
or
push
outsl
js
testb
pop
push
stos
test
jns
adcl
mov
popf
dec
leave
inc
push
mov
shr
enter
mov
push
pop
mov
insb
jecxz
sub
das
lahf
push
or
cmc
mov
mov
cltd
pushf
sbb
ret
dec
mov
mov
cmpsb
sbb
inc
sub
and
dec
out
adc
sbb
dec
xlat
loop
int
cmc
call
mov
loope
lret
mov
or
sbb
nop
int3
je
icebp
insl
dec
mov
or
out
ds
es
xchg
sbb
scas
fnstcw
fs
sbb
push
xchg
in
push
xor
jge
pop
mov
xchg
ret
xchg
icebp
jp
jp
rcr
push
aam
je
bound
pop
rol
mov
test
test
dec
insl
pop
es
cmp
jnp
dec
bound
bound
sub
cltd
mov
push
and
inc
inc
lods
push
push
movsb
push
xchg
add
xchg
inc
xlat
roll
ljmp
pop
rcll
inc
xor
sti
sbb
or
add
and
push
sbb
mov
cmpsb
or
repnz
push
cltd
ds
jecxz
lods
inc
mov
xchg
insl
test
lods
dec
push
hlt
std
adc
filds
pop
sbb
mov
cli
cmc
sti
stos
outsb
cmp
mov
mov
push
xor
mov
inc
fs
inc
pop
inc
sbb
lcall
bound
jmp
stos
icebp
fs
adc
mov
shl
add
jge
in
xor
mov
cmpsl
sahf
and
das
push
fwait
test
call
push
lahf
xor
cmc
xchg
pop
sub
call
outsb
inc
std
or
mov
loop
inc
shll
jg
xchg
sub
and
outsb
int3
or
out
popa
fsubrl
fmuls
mov
mov
inc
xchg
shll
je
popa
out
lds
addr16
mov
mov
es
mov
mov
cld
fwait
call
imul
sbb
mov
jecxz
es
cmpsb
jmp
popf
xor
rcrl
clc
sub
sub
es
out
insb
inc
iret
dec
mov
outsl
push
lret
jno
mov
push
xchg
jne
sbb
dec
les
scas
outsb
ds
ja
xchg
inc
jne
lcall
mov
gs
in
mov
mov
lret
popf
lret
pop
mov
mov
ss
mov
push
sbb
adc
mov
jg
or
mov
push
js
mov
jp
sbb
mov
push
jle
into
mov
scas
or
outsl
lds
xor
paddq
jp
mov
rcll
mov
mov
mov
bound
aad
cmpl
cmp
out
ss
mov
push
bound
mov
enter
inc
dec
push
xchg
jmp
addr16
mov
popf
ret
dec
mov
adc
inc
scas
and
xchg
ret
mov
and
les
loop
sub
fsubs
push
pop
dec
sub
out
int3
jecxz
repnz
ficompl
mov
icebp
lcall
lahf
mov
insl
push
into
into
mov
lret
cmp
ja
pop
push
popa
leave
orb
inc
mov
cltd
mov
mov
pop
inc
subb
push
xchg
repz
and
pop
imull
cmpl
pop
cmp
push
movsl
orb
pop
push
pop
push
ret
bound
and
xchg
out
gs
pop
in
fs
ja
sahf
mov
icebp
or
push
inc
nop
lret
cmpsb
inc
fbstp
daa
mov
imul
subl
mov
out
xor
mov
xchg
mov
mov
mov
mov
rolb
inc
in
jmp
mov
xor
xor
js
fldcw
test
cltd
dec
xchg
ja
fcmove
mov
sbb
inc
mov
testb
fnstsw
call
push
jb
stos
xchg
popf
inc
mov
test
add
call
jb
test
sbb
int3
cmpsb
jecxz
sbb
fsubrp
push
fstps
xlat
jle
loopne
lds
loope
jecxz
dec
xchg
or
rcrl
iret
sbb
loope
insb
push
pop
mov
jmp
test
dec
jg
sbb
sti
xor
imul
fcmovnbe
cmp
dec
dec
daa
fidivrl
shlb
repz
rolb
xorl
in
leave
or
ja
dec
mov
mov
lret
add
mov
mov
adc
shr
dec
adc
into
pop
add
xor
mov
sbb
in
sti
shll
movsl
fiadds
adc
mov
add
lds
push
push
xchg
pop
mov
push
sar
add
lock
icebp
mov
mov
loopne
fmuls
lock
xchg
inc
je
int3
adc
daa
cli
pop
out
push
mov
test
in
dec
sbb
adc
dec
ret
negb
mov
out
aad
and
out
hlt
lea
sbb
or
and
mov
out
add
add
sub
push
dec
pop
xor
lret
xor
fdivrp
push
call
adcl
cmp
cmc
inc
lret
jnp
jns
sbb
xchg
mov
jo
xchg
int3
pop
add
movsb
lret
cmpsb
hlt
push
ret
fimull
cmp
subb
push
lock
out
out
cmp
jae
int
xchg
sub
movsl
fbld
dec
hlt
mov
cli
sbb
imul
iret
xchg
icebp
nop
cmp
scas
mov
sbb
ja
inc
xor
cmp
jns
push
pusha
mov
xchg
sbb
and
mov
enter
cmp
adc
sarl
sbb
fnstcw
aad
dec
fildll
mov
mov
and
addr16
insb
ret
rcll
push
lahf
mov
sbb
insl
popf
cmpsl
or
call
clc
aas
inc
sub
and
lods
dec
test
pop
jbe
cwtl
and
cltd
push
pop
aad
inc
setg
fucomip
sbb
jbe
xchg
dec
cltd
movb
int3
int
js
stos
cmc
js
mov
cld
scas
ret
subl
add
pop
scas
mov
pop
dec
repz
icebp
pusha
ljmp
sub
sub
gs
outsb
mov
jb
or
cmpsb
shl
insb
or
aad
sub
fsubrl
push
jns
dec
push
lret
movsb
inc
movsl
mov
std
add
mov
mov
push
and
xor
push
mov
and
rolb
add
ja
lock
lahf
cmp
dec
xchg
sti
mov
sub
push
repz
mov
cmpsl
and
mov
and
movsb
xor
shll
loop
dec
sub
jmp
sbb
sub
and
inc
jge
stos
ss
fisttpl
and
pop
inc
mov
and
or
push
push
cmp
or
adc
cmpsl
mov
xchg
arpl
stc
pop
jmp
fcomip
jge
je
jg
pop
xchg
mov
pusha
jo
sub
ret
iret
scas
push
fdivrl
mov
pusha
js
outsb
aaa
xor
dec
xor
and
popa
cmp
sub
fistps
fimull
int
fldl
add
adc
mov
jmp
sub
dec
hlt
xchg
ret
pop
sub
mov
int3
test
adc
sub
loop
aad
push
lret
hlt
jmp
jno
add
int3
pop
mov
sbb
mov
shrl
sti
inc
imul
push
jp
int
hlt
mov
sbb
popa
test
sbb
lcall
mov
les
arpl
xor
pop
fdivrs
mov
outsl
sbb
repnz
lret
ficompl
mov
loop
adc
lock
adc
aaa
fimull
je
push
lods
es
movsb
push
mov
aad
ret
cmp
mov
test
jnp
movsl
fstl
pop
notl
pop
and
cmp
mov
cmp
dec
inc
dec
mov
pop
or
jo
fidivrl
and
pop
push
push
les
cwtl
fmul
mov
push
bnd
pop
or
inc
and
fisttpll
mov
jecxz
addr16
ljmp
pop
and
jl
cmp
mov
call
insb
pop
pusha
divb
inc
mov
jge
into
test
fildl
and
mov
push
movsl
decl
test
pop
arpl
mov
ret
mov
lcall
mov
push
inc
ja
and
xor
pushf
mov
ret
dec
out
adc
dec
mov
dec
scas
push
or
leave
cmpsl
push
dec
mov
mov
and
jmp
fists
pop
adc
mov
pop
icebp
inc
stos
adc
movsl
xchg
sbb
repnz
je
movsb
dec
jmp
stc
loop
in
inc
add
leave
repnz
inc
push
sub
aas
mov
dec
rcll
jno
jae
jb
sti
xlat
sahf
sub
xor
pop
sbb
bound
mov
clc
or
cli
pop
ljmp
inc
lret
inc
lods
fs
aas
and
fdivr
mov
test
in
andb
jo
xchg
lods
cmp
test
mov
aas
mov
sbb
cmp
jne
mov
sub
ljmp
adc
stc
inc
jne
mov
std
pop
inc
mov
inc
mov
sbb
mov
scas
test
jle
and
test
stos
xchg
imul
dec
cltd
cmp
xorl
stc
xor
rcrb
lock
mov
adc
inc
push
imul
adc
push
in
sub
repnz
movsb
jle
mov
and
mov
xchg
adc
mov
pop
insl
adcl
int
xor
mov
sbb
mov
jmp
xor
cmp
pop
out
inc
cmp
sub
and
mov
mov
imul
cs
xor
in
insl
into
mov
add
add
gs
in
jmp
inc
das
mov
mov
xor
dec
xor
fcmovnbe
out
pop
xchg
into
jo
mov
jl
jmp
leave
cmpsl
mov
outsb
aad
fwait
scas
shlb
lret
cmp
mov
sbb
push
mov
sahf
jp
hlt
mov
movsl
in
out
lcall
and
test
adc
push
fisubrs
mov
xchg
gs
dec
cs
gs
out
mov
imul
out
push
out
pinsrw
sbb
or
sub
cwtl
jecxz
adc
inc
cmp
mov
fsubrs
dec
mov
or
dec
cmp
loop
inc
and
test
xacquire
ret
jae
mov
cwtl
jmp
test
pop
faddp
xor
and
ja
mov
push
mov
ja
mov
orl
jae
out
inc
push
dec
aaa
loopne
int3
jns
into
arpl
fs
sbb
jecxz
test
cwtl
lret
insb
or
inc
push
sbb
icebp
jns
pop
add
push
cmpsl
lods
movsl
sahf
mov
je
pop
mov
testl
mov
lds
and
andl
jno
and
xor
dec
or
mov
aam
mov
push
std
xlat
add
add
push
inc
sub
hlt
add
lret
subb
je
cmc
mov
dec
adc
popa
rclb
jl
sbbl
push
mov
push
fsubp
mov
mov
adc
pop
mov
flds
xchg
iret
das
lock
adc
aaa
add
mov
or
cmpsl
jmp
fnsave
adcl
stos
popf
in
gs
jae
fsubrs
adc
movsb
fxch
mov
cld
or
mov
out
inc
je
movsl
out
movsb
jl
daa
mov
mov
lret
jg
push
in
mov
ficoml
sub
lods
and
bound
insb
ret
or
mov
pop
mov
mov
mov
in
leave
ds
fnstcw
adc
or
xchg
adc
aad
in
lea
out
pop
fcomi
lods
mov
ss
fnstsw
dec
push
cmp
mov
or
daa
jno
fcom
xchg
fisubs
mov
cmc
int
stos
ds
add
sub
enter
int
jne
inc
add
push
cmp
dec
imul
cmp
arpl
shr
sbb
ss
ret
in
cli
xor
gs
movsl
cmc
int
jbe
mov
push
jge
in
aam
lods
pop
fildll
adc
subb
sub
sbb
mov
idiv
sti
sub
mov
push
jle
pop
nop
call
xchg
inc
xchg
mov
insl
ret
test
sbb
sahf
mov
sub
pop
inc
push
out
fistps
inc
rcrb
fwait
sub
xlat
cmpl
add
fsts
cmc
test
jecxz
cli
and
add
in
lret
and
mov
dec
ret
adc
jnp
add
mov
outsb
mov
push
push
push
subl
lds
xchg
addr16
pop
insb
int3
sti
bnd
inc
rolb
mov
mov
xchg
push
or
add
dec
push
lods
std
push
pusha
inc
sub
ret
dec
lods
js
div
xor
cmp
mov
in
push
inc
push
or
jno
mov
enter
pusha
notl
lret
mov
jp
dec
and
jge
xchg
inc
roll
and
jl
nop
jmp
push
push
mov
fcoml
pusha
pop
les
jns
andb
sbb
and
imul
cld
mov
mov
outsb
push
outsb
test
xchg
lds
in
lods
cmp
inc
enter
xchg
and
cmp
adc
sti
sbb
lds
mov
mov
adc
mov
imul
dec
or
push
jne
movsb
imul
fstps
fwait
scas
cmp
cmpl
and
out
push
idivb
or
xor
sub
subb
xchg
pop
jp
pop
int3
loopne
in
adc
push
out
lock
rcrl
in
sti
pop
and
adcb
lcall
sub
jno
stc
or
loop
adc
into
fnstcw
sub
cmp
ret
sub
push
push
fwait
mov
test
aad
imul
and
rcr
pop
xchg
and
cli
or
push
push
dec
test
and
inc
adc
mov
mov
in
rolb
or
cmp
push
cltd
sbb
stos
fimull
pusha
pop
cmpb
xor
ds
and
inc
popf
les
jnp
jecxz
xor
ja
out
mov
decl
cmp
pop
ja
cmp
inc
shll
fstps
dec
cmc
add
int
jae
out
mov
jno
test
test
cs
pop
jp
int
shll
xchg
loope
add
adc
inc
cmp
xchg
clc
jnp
insl
dec
push
xlat
mov
sbbl
fwait
loop
mov
and
xchg
xchg
gs
movsb
sbb
inc
lahf
cmp
imul
jg
in
fisubs
imul
insl
ss
dec
or
fldt
xor
push
aad
xchg
cmpsl
pop
fstpl
es
inc
sti
ljmp
int3
adc
mov
jbe
pop
enter
movsl
sbb
call
int
adc
mov
sbbb
cltd
addr16
popf
xchg
push
dec
pusha
or
push
and
lods
dec
mov
aas
mov
sub
fldenv
and
scas
pop
aam
inc
jp
sbb
mov
dec
stc
bound
lret
ret
sub
lods
xor
outsl
stos
fsubl
out
cwtl
add
mov
mov
and
loopne
int
add
ds
popa
sbb
insl
xor
dec
movsb
mov
pop
icebp
push
xor
adc
pusha
mov
jg
and
mov
popa
inc
adc
add
fwait
rol
xchg
fs
mov
pop
and
test
fidivrs
inc
int3
xlat
cmpsb
mov
int
dec
std
xlat
ljmp
jns
scas
icebp
xor
xchg
xchg
push
fdivrs
js
rol
xchg
sbb
dec
rorb
popa
pop
jecxz
cld
out
add
xor
mov
push
adc
lret
cmpsb
daa
xor
int
jne
cmp
xchg
rclb
push
xlat
sub
mov
xchg
jae
dec
xchg
sub
and
out
mov
stos
hlt
xor
stos
in
cmpsl
sub
inc
js
test
sarb
ss
popa
scas
daa
fnstenv
inc
rcrl
aas
cmc
sti
sti
mov
mov
scas
dec
or
das
adc
inc
xor
out
push
lea
pop
inc
insl
sbb
jae
push
insb
pop
jge
daa
je
or
pushl
daa
das
xchg
push
and
in
pop
sbbl
inc
jl
outsb
ret
imulb
pop
mov
cmp
mov
stc
sub
lret
js
xchg
mov
pushl
std
sbb
xchg
iret
cmpsl
fsubl
sarb
mov
push
and
insb
and
jp
sbb
mov
jp
jp
dec
sbb
jno
pop
mov
adc
or
or
jo
pop
mov
pop
popf
scas
sbb
mov
push
pop
incl
insl
push
addr16
sub
mov
das
push
ljmp
mov
cmp
in
add
mov
popf
mov
addl
xor
pop
xor
inc
test
addl
dec
pop
push
or
nop
jecxz
jle
adc
dec
test
call
mov
or
sbb
les
and
jp
jno
adcl
ficompl
lock
push
mov
test
cmpsl
addl
or
ret
gs
sbbl
pushf
mov
aas
mov
outsl
ja
imul
cwtl
xchg
iret
in
mov
mov
xlat
sbb
xchg
xchg
scas
popa
aad
sbb
xor
lods
cmp
sub
les
fmuls
push
cmp
mov
push
leave
adc
mov
int3
loope
fldenv
out
movsl
mov
pop
sub
mov
push
mov
push
fstps
jmp
and
sbb
inc
xchg
add
test
jo
out
loopne
cltd
pop
mov
mov
scas
cmp
cmp
cmp
jp
addl
inc
xchg
movsl
lret
mov
enter
sub
addr16
sub
mov
inc
dec
outsb
insl
scas
addb
sub
and
outsb
mov
dec
repz
je
rcrb
ds
lahf
or
and
push
adc
in
dec
mov
jmp
aaa
cld
xchg
xor
faddl
inc
jge
push
lret
xchg
rcl
mov
dec
or
adc
orl
mov
inc
ret
hlt
in
or
pop
mov
daa
js
fdivrl
stos
loopne
aaa
mov
xchg
in
cli
shr
lret
jae
push
sub
inc
rcrl
leave
insb
and
iret
jae
in
decl
cmp
pushw
push
push
fs
mov
adc
cmpsl
ja
stos
imul
imul
movsb
or
js
xchg
adc
loope
test
mov
imul
xor
iret
jmp
add
jl
push
sbb
iret
jecxz
mov
xchg
mov
sub
sub
and
sub
stos
arpl
rcrl
repz
stos
sbb
inc
dec
pushf
adc
sub
aaa
repnz
or
shll
mov
arpl
push
cmp
outsl
xchg
ja
or
loopne
sbb
int
mov
mov
cmp
dec
mov
and
sahf
adc
out
xchg
jae
dec
rcrl
mov
icebp
pop
pop
movsl
ljmp
mov
mov
arpl
mov
popa
mov
lds
inc
mov
inc
inc
sbbl
insb
add
add
jmp
shrl
loope
dec
dec
addr16
jnp
je
sbb
dec
test
rcll
cld
and
xchg
mov
cmp
sbb
fwait
jmp
pushf
xor
mov
sbb
leave
inc
stos
dec
fcomps
and
or
clc
aas
shl
ljmp
push
xchg
sub
mov
stos
and
push
mov
mov
decl
mov
push
ds
mov
push
inc
lea
shlb
pushf
out
int3
jo
add
je
fsubr
push
xor
pop
or
repnz
xchg
popa
scas
inc
sahf
ret
cmp
push
and
loop
add
mov
popf
fsub
aam
xor
and
inc
push
sbb
shrb
addr16
enter
fistpll
imul
mov
mov
sbb
vpmaxsw
and
xor
ja
inc
std
pop
sbb
cmp
push
push
js
cmp
pop
and
fbld
test
xor
inc
or
push
repnz
arpl
jecxz
or
cmc
fsubrs
jp
hlt
jp
mov
je
iret
cld
pop
repnz
xchg
cmp
mov
call
jl
and
in
mov
insl
add
aas
xchg
imul
imul
lret
addl
pop
and
test
push
cmp
mov
mov
mov
xor
pop
sbb
jno
rorb
gs
ficoml
cmc
repz
lret
jae
inc
sub
and
movsl
or
mov
imulb
mov
xlat
rcrl
sbb
out
out
lcall
loopne
push
push
sbb
jb
je
mov
mov
iret
mov
in
out
and
mull
ljmp
jl
jae
cmp
push
add
insb
loopne
jge
push
int3
frstor
push
or
call
scas
cmp
fcmove
rcll
scas
into
xchg
stos
popa
out
lret
inc
decb
sbb
sub
mov
outsl
sub
dec
pop
cld
dec
pop
pushf
mov
rorl
xabort
enter
subl
dec
dec
loopne
in
rclb
rcrl
push
addb
jge
xchg
repnz
push
lret
xchg
dec
mov
xor
lea
out
adc
rcll
dec
divl
pop
loope
lahf
iret
xchg
mov
jg
inc
mov
push
ss
bnd
sub
pop
push
mov
shrl
hlt
sarl
or
cltd
mov
pop
cli
fxch
push
int
iret
in
cmc
and
xchg
imul
aaa
fildll
mov
xchg
loopne
sub
xchg
jge
popf
call
pop
mov
or
aam
xorb
mov
dec
and
push
pop
jne
shl
aad
and
gs
or
shlb
jo
js
dec
xor
push
mov
mov
rcll
inc
aad
inc
and
mov
inc
addb
or
cmp
loop
mov
jecxz
cmpsl
in
mov
lret
insb
xchg
inc
cmp
mov
stos
jo
fwait
lea
jg
pop
out
fcoml
ljmp
jae
repz
cmpsl
fildl
mull
and
adc
mov
add
xor
jo
dec
fwait
and
or
mov
adc
mov
in
orb
xchg
nop
sbb
adc
lds
or
rorl
repnz
rorb
dec
je
sahf
lahf
sub
fmul
out
lret
mov
push
test
sbb
dec
push
loopne
dec
test
inc
lret
add
xchg
rcrb
jns
cmp
xchg
lret
xchg
mov
push
adc
and
jnp
dec
and
mov
imul
or
int
cmp
dec
dec
mov
fwait
adcl
jecxz
and
adcl
push
scas
adc
outsb
dec
lds
fnclex
mov
rclb
adc
jmp
inc
mov
hlt
push
mov
loopne
out
fcomip
cmc
jmp
inc
mov
xorl
inc
in
es
xchg
or
pop
mov
inc
xchg
mov
aad
inc
fdivrs
or
aas
xchg
bnd
lret
out
sahf
xor
dec
es
adc
mov
fndisi(8087
push
dec
push
mov
mov
mov
mov
and
loopne
fimuls
orl
lcall
fiadds
cli
inc
sbb
push
and
add
imul
or
dec
addl
lret
jne
mov
xor
add
int
mov
and
sbb
push
mov
push
jno
lcall
inc
jp
pop
add
clc
pop
adc
pushl
mov
lock
sbb
aad
sbb
dec
xor
push
inc
mov
and
stos
jno
loopne
inc
and
xchg
cld
les
mov
mov
popa
outsb
decb
fdivp
aam
add
fdivrp
mov
stos
adc
sub
add
add
stc
push
mov
pop
in
es
ret
lahf
pop
push
inc
ret
aaa
jmp
rcrl
jns
xor
push
sbb
xchg
jg
xor
int
mov
dec
sub
or
imul
mov
sahf
adc
push
xchg
jp
ss
pop
add
adc
add
sub
gs
pop
scas
or
imulb
clc
pop
dec
jo
pop
and
loop
xorb
inc
adc
add
ret
mov
sub
bound
gs
pushf
daa
jno
adcl
mov
shll
cmp
ja
mov
mov
test
push
mov
mov
push
push
pop
testl
outsb
mov
jnp
out
mov
inc
pushfw
push
in
xor
inc
inc
sub
sbb
push
rcll
pop
inc
ret
outsl
out
sub
push
inc
push
cltd
inc
out
movsl
mov
fcomps
fisttpll
lret
lods
jmp
mov
push
insb
cwtl
mov
ljmp
gs
gs
mov
into
sbb
push
lahf
jl
aaa
test
popa
jno
pop
push
pop
lahf
bndldx
loopne
pop
pop
xchg
test
add
daa
or
es
sarl
iret
adcb
pop
jg
mov
cmpsl
or
sti
arpl
push
pop
fsts
add
jae
mov
aas
test
cwtl
sbb
rorb
in
test
loopne
rcll
inc
dec
adc
jp
in
sahf
add
xchg
lods
cltd
pop
iret
cmp
xlat
mov
jb
dec
cld
lcall
ljmp
add
std
repnz
test
sti
nop
pop
shl
mov
jns
pop
cmp
inc
out
sbb
inc
add
jmp
sbb
mov
lret
ljmp
inc
aas
and
fisttps
dec
dec
test
enter
pushl
sub
jle
fcomi
imul
push
lods
xchg
mov
xchg
mov
sbbb
nop
sbbl
cwtl
movq
xchg
xchg
aam
push
outsb
in
dec
sub
movsb
inc
lods
jmp
dec
popf
and
into
cli
jecxz
xchg
das
outsl
roll
jnp
aas
inc
mov
jne
pop
pop
loop
jle
jl
outsb
pop
movsb
xchg
jecxz
in
pop
out
push
pop
adc
hlt
stos
sub
popa
and
notl
xor
mov
xor
icebp
pushw
lcall
sbb
pop
hlt
sub
incl
stos
push
das
fadd
push
out
popa
shll
data16
lret
adc
push
lea
xchg
scas
pushf
xlat
or
mov
mov
test
pop
mov
dec
aad
mov
pop
add
mov
loopne
adc
cmp
jg
in
push
test
nop
xchg
xchg
add
adc
call
cmc
loope
mov
mov
jle
xchg
loope
dec
cmpb
inc
mov
int3
imul
leave
and
int3
outsb
int3
push
mov
sbb
out
clc
xor
hlt
das
test
insl
fbstp
cmp
sbb
stos
ret
push
stc
mov
or
push
pop
out
test
outsl
xchg
xor
insb
cmp
jo
inc
aad
stos
hlt
push
or
pop
sub
out
xor
lret
insw
dec
imul
adc
movsl
mov
push
add
jg
sbb
inc
int
and
aam
cltd
pop
add
jb
mov
jge
lock
mov
lock
jae
scas
ljmp
clc
mov
ret
mov
faddp
xchg
cmc
push
loopne
mov
push
adc
cmp
push
add
push
pop
xchg
jle
in
fs
decl
mov
cmpsb
cvtps2pi
mov
add
in
pop
out
xor
xchg
xor
insl
test
xchg
loope
add
jl
xchg
je
ficompl
stos
fnstenv
fldz
or
push
aad
push
xorl
les
into
sbb
insl
inc
mov
out
push
inc
lods
repz
jae
push
mov
fwait
std
mov
das
sbb
dec
shll
popa
lods
lahf
pop
movsl
adcb
pop
dec
dec
iret
and
test
ds
dec
or
pop
ja
gs
cmp
and
xor
call
das
inc
cmc
idivl
fdivrl
insl
je
dec
out
aaa
jmp
xchg
mov
xor
andl
aas
push
pop
ret
jl
stos
ljmp
ret
mov
fs
popa
sbb
loop
roll
inc
incl
xchg
and
mov
nop
insl
pop
aad
pop
std
call
pop
inc
lods
aad
mov
jne
inc
nop
sub
and
leave
loope
les
in
sti
dec
cli
lock
iret
and
aas
mov
addr16
imul
add
push
and
pusha
fcom
std
xchg
xor
aaa
or
dec
cli
mov
and
sbb
mov
in
loopne
jle
ljmp
sbb
icebp
shr
cmp
into
adcl
jl
add
mov
sub
insb
repz
mov
cmpb
sbb
sbb
cmc
lods
out
ret
push
jae
popw
pushf
ljmp
das
push
outsb
jbe
les
mov
outsb
pop
outsb
and
inc
mov
adc
and
push
out
jmp
mov
daa
xchg
mov
push
mov
xchg
jmp
dec
push
pop
ret
loop
or
shl
out
or
jl
data16
ss
mov
push
mov
xchg
mov
mov
stc
movsl
scas
push
orl
int
push
dec
cmc
out
je
js
dec
fbld
cld
and
mov
push
cmp
jg
pushf
sbbb
jp
jne
and
outsl
jmp
ss
cli
xor
mov
mov
cmp
sbb
adc
int3
push
push
in
iret
insl
in
stos
fcom
add
jl
adcl
lret
lret
mov
mov
fcmovne
repnz
pop
scas
add
jmp
push
mov
mov
lods
adc
xor
or
push
lds
xchg
rcrl
dec
sub
adc
cli
cs
in
lret
add
push
les
lret
fdiv
mov
jmp
fsubl
test
mov
push
ja
lods
clc
mov
inc
push
cmc
cmpb
and
roll
add
ja
das
jne
in
xchg
in
orb
add
xor
fidivrs
sub
sbb
andps
lods
xchg
cltd
inc
pushf
mov
cmc
jecxz
mov
mov
out
sub
push
rcrl
shll
mov
dec
shl
call
notb
mov
mov
out
mov
in
fisubs
and
pusha
shlb
push
push
out
push
add
sbb
cs
bound
mov
mov
sub
xchg
mov
fildll
je
mov
data16
fcmovbe
mov
scas
jl
push
nop
cltd
aaa
aam
dec
xor
ret
test
nop
cs
repz
pusha
stos
out
pop
xor
inc
jno
sbb
adcb
test
pop
pop
push
mov
scas
xlat
das
xchg
dec
push
int3
xor
lahf
into
xor
sbb
pop
jecxz
mov
lret
ret
sub
pop
add
es
aas
out
cli
push
dec
inc
aam
in
jge
mov
mov
mov
cli
mov
mov
sti
xor
stos
popf
dec
or
idivl
ret
and
adcl
out
lcall
mov
inc
jmp
dec
test
mov
daa
or
jge
lcall
sub
cli
adc
push
les
aam
add
in
sbb
sbb
or
outsl
mov
lcall
pop
mov
xor
push
pop
xchg
mov
gs
or
pop
mov
xchg
icebp
push
pop
fnstcw
movsb
or
xor
push
jbe
decl
push
pop
adc
push
ret
xor
loop
shr
test
dec
xor
inc
lock
arpl
cmpb
outsb
inc
mov
and
gs
cmp
mov
mov
in
sbb
gs
sar
test
push
adc
sub
push
stos
add
js
jns
lahf
dec
ret
orl
call
cwtl
lods
shlb
nop
pop
and
imul
sbb
mov
dec
mov
lret
mov
sub
push
iret
xlat
xor
fists
xchg
sarl
scas
jns
xor
xchg
mov
mov
outsb
dec
push
xor
sbbl
loope
mov
int3
sub
or
repnz
xchg
sub
das
mov
pcmpgtw
push
and
popf
mov
pop
mov
xchg
in
and
mov
sahf
push
mov
inc
fs
test
sbb
push
push
iret
mov
push
jnp
cmp
cwtl
loop
dec
xor
jne
lea
fninit
sbbb
mov
shl
mov
cmpsl
xchg
or
adc
xor
aam
addr16
aam
lods
jmp
mov
push
fldl
mov
shll
call
sub
add
add
or
jecxz
fldcw
stos
subl
mov
mov
sbb
lea
push
das
data16
xchg
loopne
je
cli
push
mov
pop
xchg
in
fstpl
or
fists
mov
lret
repz
cld
cmc
aad
sahf
adc
cmpb
push
mov
xor
jnp
dec
fnstcw
popf
jne
cli
mov
in
and
xor
inc
fcomip
jle
ds
sub
into
dec
adc
incb
lahf
cli
add
dec
push
mov
sti
gs
adc
enter
mov
mov
adc
aas
jbe
dec
inc
adc
lahf
in
dec
pop
pop
mov
cs
push
cmp
xor
adc
fstpt
push
jl
sbb
jmp
les
and
xchg
push
enter
jg
xor
xor
outsl
jmp
sub
nop
cld
test
push
mov
test
push
jne
daa
add
add
lret
sbbl
jle
psllw
xlat
sub
adc
push
mov
push
pop
or
out
mov
mov
aas
icebp
test
int
cld
mov
sti
ss
pop
daa
or
cmc
push
sub
orl
sahf
add
push
out
mov
adc
test
or
mov
or
hlt
add
out
cmp
loop
pop
mov
test
xchg
pop
dec
mov
in
dec
sbb
mov
scas
shl
xchg
and
pushf
or
cmp
into
and
xchg
out
xchg
adc
adc
stos
mov
xor
sbb
aam
push
add
std
sbbb
mov
call
lea
in
cmpsl
xor
cli
push
mov
in
adc
or
or
and
scas
daa
fstps
sbb
hlt
jg
mov
outsb
fs
mov
add
pushf
xor
imul
cmp
inc
dec
ret
mov
push
dec
rorl
dec
sub
imul
jle
pop
shlb
cmp
add
rorb
out
jnp
xchg
push
leave
xchg
leave
xchg
pop
jbe
mov
repz
scas
and
ret
lds
mov
add
insl
jg
daa
movsb
fnstenv
sub
add
rol
mov
pop
test
xor
int
loop
fildl
push
jne
fsubp
cmp
sarl
mov
dec
mov
repz
adc
adc
mov
ret
add
xor
adc
xor
pop
dec
mov
stc
mov
mov
push
adc
mov
std
xor
xchg
push
mov
iret
cmp
enter
leave
sbb
push
push
mov
dec
push
subl
sbb
js
pop
lahf
xor
es
into
or
sbb
lcall
jno
fwait
push
clc
movsl
xor
jbe
dec
mov
mov
inc
es
into
sbb
xorl
stos
sub
mov
push
fdivrl
mov
lahf
pop
xchg
sub
mull
jmp
dec
xchg
add
inc
jle
jl
imul
inc
leave
cltd
lret
push
jecxz
sub
add
test
flds
adc
push
sti
sbb
js
dec
inc
jle
or
ret
pop
xchg
arpl
sub
pop
pusha
cmp
arpl
out
je
cmp
out
fidivs
jbe
cld
mov
lea
aad
inc
stos
stos
lock
vpcomd
jl
xchg
push
popl
adc
sub
out
int
std
pop
into
out
int3
sti
cwtl
pop
enter
pop
add
mov
test
cmp
adc
adc
xor
sub
pushf
stc
cmp
outsl
shrl
hlt
out
dec
sti
fldt
jne
or
or
mov
dec
xor
xchg
pop
jns
adc
or
push
xor
and
fmuls
push
negb
shlb
rorl
daa
sbb
test
add
inc
or
xor
push
cmp
inc
outsb
fcmovbe
cmp
cli
pushf
pop
add
insb
cmp
insb
jg
js
mov
add
cmp
test
shrl
jo
jnp
push
popa
add
push
cmpsb
fisttpll
mov
inc
mov
xchg
iret
cmp
dec
add
jp
enter
push
push
jmp
repz
xchg
adc
test
xchg
fildl
push
shrb
and
jl
mov
inc
shl
jecxz
enter
pop
dec
stos
sub
mov
data16
pushf
push
xchg
lret
sti
cmp
sbb
add
enter
mov
outsb
jle
inc
dec
jns
scas
pop
out
fisubrl
xor
stos
cmpsl
sbb
add
les
adc
test
mov
mov
xchg
sar
popa
mov
sbb
add
mov
xlat
inc
cltd
add
lcall
stos
pop
cli
and
jmp
mov
mul
xlat
jb
mov
test
mov
addr16
into
call
bound
repnz
dec
sbb
pop
mov
xchg
stc
ss
aad
cmp
pop
xchg
mov
dec
out
es
je
inc
adc
jns
sub
jmp
and
push
dec
fcmove
testl
mov
push
jne
sub
push
push
into
sbb
cmpsb
sbb
test
cltd
push
add
loopne
jmp
adc
add
inc
pop
cmp
test
inc
adc
repnz
popa
push
mov
push
inc
jo
push
mov
cld
xchg
jnp
sbb
add
ds
jb
adc
pop
and
int
decl
or
sbb
sub
dec
addl
iret
dec
sub
call
mov
fcoms
stc
aas
xchg
arpl
js
adc
repz
lock
mov
call
mov
stos
data16
es
pop
in
mov
push
inc
push
roll
push
cmp
scas
ret
shrl
sbb
test
addr16
in
outsl
outsl
mov
inc
sbb
cs
je
sbb
fs
jmp
roll
dec
sub
and
fcoml
scas
mov
mov
loopne
lds
stos
fwait
jae
pop
mov
in
add
dec
jne
jmp
je
aaa
cmp
sbb
jmp
inc
fs
fs
xor
add
and
clc
pushf
mov
pop
insb
push
push
inc
rcll
rcll
inc
test
pop
push
jno
movsl
pop
dec
and
pusha
and
mov
mov
add
inc
out
inc
jmp
ss
lds
ds
jb
xchg
imul
out
push
cmp
and
pop
mov
adc
pop
xchg
xor
fnsave
mov
shrb
pop
adc
xlat
cmp
mov
push
std
cmp
aad
push
jecxz
rcrl
pop
call
and
loopne
movsl
hlt
cmc
cmp
imul
nop
push
shrl
outsb
dec
mov
dec
pop
stos
jnp
insb
call
jb
jbe
mov
inc
add
sahf
fdivrs
pop
mov
pop
mov
fcomps
ret
loop
int
cmp
mov
pop
pop
sti
adc
pop
scas
cltd
sti
xchg
cli
xor
add
cmp
add
sub
in
or
xchg
fstpl
int3
mov
pop
inc
ret
mov
pop
mov
or
insl
test
ds
leave
sbb
int3
scas
lahf
repnz
fwait
jmp
mov
inc
in
push
cmp
fidivrl
fmull
icebp
mov
cld
fisttps
scas
and
orb
lods
inc
mov
or
ffree
loop
xor
in
jge
imul
sbb
xlat
jnp
or
clc
push
test
or
lret
outsb
push
sbb
test
pop
or
jns
xor
popf
jg
dec
dec
je
lahf
and
ficomps
mov
test
sub
dec
fdivrs
imul
in
cmp
inc
mov
cmp
faddl
push
fcoms
jno
aaa
dec
pop
sub
adc
cld
test
les
cwtl
shrl
cmp
mov
or
dec
or
mov
add
daa
jg
jge
inc
dec
shlb
test
clc
jnp
mov
mov
insl
lods
jns
sub
loopne
aas
daa
gs
sti
test
jg
dec
and
or
call
cs
mov
cmp
dec
jo
push
iret
js
je
pop
pop
xor
sub
xchg
adc
es
loop
add
int3
mov
cmp
pop
std
inc
loop
popf
out
rcrb
sbb
inc
inc
jae
int
lret
fwait
gs
push
jnp
adc
int
stos
cmp
mov
dec
sbb
mov
fucomi
add
adc
test
test
mov
iret
push
repz
pop
outsl
add
daa
sub
pop
fidivrl
ret
mov
cmp
clc
xchg
pop
add
jo
xchg
jb
dec
loopw
jmp
cmc
shll
fisubl
add
push
ficoml
pop
cli
sub
xlat
loope
add
addr16
loope
fwait
sbb
xor
or
or
ffreep
sti
cmp
stos
cmpsl
inc
movsl
or
adc
jae
pop
mov
insb
in
mov
cmpsl
out
incl
fadds
repnz
loope
jbe
je
iret
mov
lahf
shl
nop
pop
mov
das
dec
movsl
lret
loop
pop
clc
sbb
scas
mov
push
cmp
loop
outsl
or
pop
aas
mov
stos
ror
fmuls
jo
and
and
fmuls
inc
loope
out
daa
imul
pop
in
mov
adc
lcall
je
and
sub
jp
jmp
inc
ret
int
mov
out
pop
into
jl
popf
loope
add
sbb
pop
outsb
call
sub
mov
push
cwtl
inc
push
lods
jnp
xchg
inc
mov
add
sahf
adc
push
shll
sbb
cs
inc
mov
push
std
data16
push
pop
or
push
adc
mov
jle
ljmp
dec
lock
mov
add
fildl
push
es
lret
pop
pop
mov
push
add
cli
leave
mov
out
mov
stc
cmp
cs
into
mov
and
out
scas
xchg
cmp
cmp
pop
push
jne
jmp
pop
std
mov
pop
in
lret
lret
sti
mov
movl
and
cmp
jb
mov
clc
add
out
push
rol
int
xchg
pop
outsb
jae
mov
ret
push
repnz
out
test
rolb
imul
and
call
fdivs
pop
cmpl
dec
gs
push
stos
imul
stc
and
fmull
cmpsb
xor
jb
jns
sub
ficomps
xor
mov
les
mov
movsl
push
ret
jnp
push
push
or
in
xor
faddl
mov
xchg
xchg
cmp
push
add
jns
adc
fmul
loopne
shrl
add
and
mov
stos
sarl
xchg
jb
dec
test
ds
xchg
xor
inc
xlat
add
adc
pop
mov
push
mov
jno
or
into
mov
imul
xor
mov
dec
bound
aas
sub
mov
mov
and
int
dec
xor
mov
lea
mov
jge
lret
addr16
push
jne
out
das
lds
xlat
mov
mov
mov
adc
in
loop
pop
cmpsb
jae
pop
xchg
stc
push
add
movsb
jmp
je
das
clc
and
inc
cli
jg
pop
push
ret
jg
imul
int3
pop
xor
pop
sub
sarl
cwtl
stos
ds
jle
push
jmp
push
pop
repz
int
xchg
lahf
adc
test
push
in
jmp
shll
add
lds
test
scas
jno
push
mov
outsl
push
mov
add
lock
stc
sahf
and
pop
out
cmpsb
sti
dec
inc
add
nop
cmpsl
push
ret
aaa
fcompl
add
ret
add
mov
jb
inc
in
xchg
movsl
ljmp
outsl
fs
lret
mov
and
inc
inc
xor
push
sar
mov
pop
arpl
ds
inc
push
xchg
or
sbb
enter
std
push
dec
fucomip
je
xor
js
mov
leave
and
clc
jmp
icebp
fwait
pop
sbb
dec
or
adc
cmp
pop
js
adc
loopne
fcmovbe
sbb
mov
das
push
and
xchg
jecxz
test
mov
pop
mov
mov
jp
aam
add
sar
add
and
and
data16
xchg
xchg
cld
loope
imul
loope
cmp
cmpsb
mov
cmp
outsl
ret
inc
mov
gs
inc
nop
sbb
pushf
jmp
and
sbb
adc
xor
lret
sbb
pushf
sbb
xchg
mov
jmp
cmp
mov
aam
xor
push
sbb
pop
scas
out
or
imul
out
and
js
jnp
xor
jecxz
call
por
test
mov
mov
sbb
xor
or
stos
das
jne
loop
dec
fucomi
clc
call
mov
mov
xchg
je
sahf
jne
jmp
or
mov
inc
dec
sub
mov
adc
mov
fcomps
popf
and
verw
icebp
cmp
fcompl
nop
rolb
punpckhbw
pop
inc
stc
inc
push
hlt
push
mov
out
les
mov
jecxz
or
pop
fdivrl
xchg
cmp
out
loope
cmp
aaa
cmp
das
jmp
cmp
mov
out
adc
pop
xchg
fcomps
adc
inc
movsb
push
pushf
jecxz
add
mov
movl
fwait
mov
gs
je,pt
adc
fucomip
pop
sub
out
outsb
xor
fwait
iret
test
mov
and
lahf
push
mov
leave
push
sahf
mov
adc
mull
shrb
mov
xor
pop
lret
cmc
xor
jge
subl
shrd
movsl
mov
ljmp
in
or
mov
pop
and
sbb
test
cmp
js
adc
sub
dec
aaa
adc
push
mov
or
mov
in
sbb
test
dec
mov
ja
or
gs
sbb
mov
cs
pop
jg
cmc
sub
adc
push
faddl
or
icebp
arpl
sub
inc
push
js
cmp
leave
add
add
stos
pop
sub
add
call
xor
or
js
lods
outsl
fsubl
lahf
xor
bound
repz
xchg
or
add
jne
lods
data16
daa
shll
int
xor
or
shl
dec
stos
cmp
cwtl
fcompl
dec
mov
inc
dec
test
icebp
mov
repz
sbb
js
rcrl
fisttpll
push
data16
lret
mov
cmc
cmpsl
or
out
cld
pop
mov
jo
inc
ret
sahf
stc
jmp
fldl
test
js
add
push
xor
xor
je
cmpsl
test
test
inc
cltd
addr16
insl
pop
cmc
data16
fwait
imul
imul
dec
or
rclb
adc
push
add
xor
add
hlt
sbb
ret
loope
sarb
dec
cltd
cltd
and
dec
mov
stos
mov
mov
into
lods
push
pop
lret
divb
or
pusha
adc
sub
stos
adc
xor
mov
mov
inc
adc
int
shlb
sub
fsubrp
push
xchg
daa
xor
jb
sahf
sub
into
pop
popl
cmp
cmpsl
test
push
sub
xchg
or
stc
in
add
pop
jecxz
push
sbb
dec
xor
sbb
loopne
mov
mov
ss
into
push
insb
cmp
sbb
scas
mov
arpl
xor
test
jo
pop
jp
pop
add
in
in
sub
test
aam
and
jl
sbb
mov
adc
in
ljmp
sub
in
aad
mov
rolb
mov
sti
inc
cmpsb
seta
sbb
movsb
pop
andb
rcrb
xchg
filds
and
iret
stc
inc
sahf
mov
out
push
subl
add
repz
push
movsl
lods
push
loope
test
xchg
inc
jo
scas
out
inc
pushf
mov
sbbl
sbb
lea
pop
mov
mov
or
outsl
lret
add
icebp
cmp
dec
dec
cmp
adc
addl
inc
cltd
xchg
dec
fidivl
lods
jmp
mov
xor
jp
fidivrl
sub
jl
push
push
sbb
dec
jb
pop
mov
and
cmpb
lcall
xlat
lock
out
sarl
xchg
add
aad
adc
incl
or
cmp
mov
or
div
cs
addr16
stos
cmp
sbb
out
loope
xchg
sub
inc
nop
and
int
sub
pop
gs
pop
xor
shrl
add
and
int3
jnp
cmp
mov
adc
pop
fdivrs
add
ss
hlt
aas
xchg
jl
sarb
adc
push
jno
dec
xor
push
pop
xor
js
adc
mov
pop
mov
into
lret
xchg
ds
sub
lahf
loope
test
bound
mov
mov
push
outsb
sbb
imul
xor
adc
pop
mov
loopne
jne
jle
pushf
mov
imul
mov
jge
inc
call
add
loope
sbb
pop
or
cmp
push
testb
cmp
or
dec
mov
mov
sti
insb
repnz
std
add
push
add
mov
rorb
addr16
mov
add
mov
xchg
adc
cmp
push
stos
arpl
stos
push
outsb
daa
and
dec
mov
sub
pop
xorb
inc
and
enter
loopne
lret
ret
xchg
inc
add
js
les
add
push
hlt
addr16
scas
xor
in
hlt
std
insl
xlat
adc
popa
sbb
cli
jne
adc
daa
adc
adc
ficompl
push
shll
jl
repnz
rcrb
sti
in
cmpsb
gs
xchg
scas
sbb
push
loopne
sub
bound
add
fstpt
add
test
jge
testl
jp
hlt
push
pop
rolb
insb
cltd
push
outsl
push
test
jmp
cld
insb
cmp
cmp
sbb
adc
mov
ret
movsl
insl
test
sub
mov
test
in
jecxz
pop
fcmovne
call
dec
aas
dec
xchg
adc
jl
notb
mov
or
jb
jl
xchg
mov
pop
mov
ret
mov
mov
lods
cmp
pop
adc
stc
dec
xor
lods
test
popf
push
jno
dec
cmp
bnd
and
call
mov
mov
mov
adc
cmpsl
mov
cmc
push
mov
add
mov
jg
cs
out
add
lea
int
imul
sbb
inc
loopne
push
ja
pop
push
fwait
cmp
mov
mov
shlb
adc
add
add
int
push
inc
fildll
jno
data16
cld
cwtl
das
adc
dec
push
or
inc
repz
mov
test
xchg
ljmp
sbb
scas
les
outsl
popf
mov
int
cmp
hlt
aad
mov
sub
push
mov
push
out
and
test
repz
mov
sbb
pop
mov
enter
jl
clc
hlt
lea
push
jp
sar
sbb
sahf
roll
iret
adc
pop
jg
lods
xchg
addr16
stc
scas
sub
jmp
mov
pop
aad
loop
lcall
sub
out
cmc
xor
sub
xor
dec
ret
cli
lret
lods
or
pop
cmpsl
mulb
aad
push
in
into
out
mov
test
pop
mov
mov
scas
pop
jecxz
xor
cmpsl
enter
xchg
inc
stos
cwtl
xor
fsubl
nop
mov
push
pop
sbb
cmc
sbb
loope
or
fiadds
push
mov
sub
outsb
shll
mov
push
std
xchg
jae
add
pusha
adc
adc
fld
mov
cmpl
cmp
sbb
nop
pop
xchg
or
int
js
mov
ret
lock
sub
sbb
jo
outsl
adc
dec
out
int3
sbb
dec
jae
push
rcl
dec
mov
push
js
inc
jb
xor
sahf
inc
and
pop
loopne
xor
sbbl
in
and
push
pop
pop
inc
filds
ret
and
mov
popf
add
loope
call
and
rolb
pop
scas
or
sbb
push
ret
mov
loopne
push
inc
add
mov
pop
repnz
movsl
add
loop
mov
outsl
jmp
aas
imulb
adc
inc
xchg
adc
dec
add
insl
mov
xchg
clc
mov
inc
pushf
mov
sahf
enter
or
add
cmp
push
call
out
scas
in
xchg
mov
das
ds
xchg
cwtl
ret
mov
push
sub
sbb
cs
scas
mov
adc
xchg
out
outsb
mov
out
pop
adc
dec
cltd
cld
out
adc
scas
jns
inc
fiaddl
mov
jecxz
xlat
cmp
test
inc
mov
mov
pop
cmp
xchg
bound
rolb
sbb
mov
add
mov
inc
arpl
cli
dec
scas
xchg
das
lahf
in
add
xchg
cmp
mov
lea
mov
and
jo
jae
aad
dec
in
popa
mov
popf
dec
mov
cmpsl
gs
xchg
push
jle
bound
ret
sbb
lahf
or
frstor
movsb
pop
cmp
fimuls
test
addr16
jmp
in
lret
pop
pusha
cmp
xchg
xchg
lds
xor
push
or
pop
xchg
loop
shll
adc
lahf
les
movsl
mov
lret
repnz
lret
mov
pusha
cli
jns
hlt
fistpl
das
cmp
in
inc
push
jle
and
imul
push
mov
jl
jne
or
cs
and
repnz
mov
dec
adc
jne
insl
repz
into
jb
popa
cmc
ss
iret
sbbb
adc
lret
mov
sahf
insb
lea
pop
aam
scas
in
out
aaa
sahf
jge
into
cltd
fdivrs
adc
cs
dec
rcr
push
sub
loopne
addr16
or
in
or
sarl
in
pop
dec
add
mov
jle
sahf
pop
sub
scas
roll
enter
and
stc
push
fistpl
or
inc
pop
leave
or
pop
xor
cmp
mov
add
in
push
cmp
adc
dec
ret
es
cs
add
push
lret
in
scas
xchg
pop
gs
cmp
lods
and
shlb
xchg
add
push
das
xor
cmp
cwtl
push
inc
test
outsb
daa
sub
cld
lcall
data16
iret
xchg
imul
dec
sbb
jno
lahf
adc
mov
jecxz
dec
iret
or
mov
leave
sbb
dec
loopne
fisttpll
aam
dec
xchg
mov
ret
out
mov
push
adc
pop
gs
scas
mov
pop
mov
xchg
sbb
ljmp
jmp
push
xor
mov
jg
scas
shl
mov
out
movsl
filds
out
xlat
and
stc
pusha
dec
sub
sarb
cs
outsl
inc
inc
push
pop
xchg
in
sbb
aas
mov
pop
arpl
lret
pop
push
outsb
fisubrl
mov
push
in
xchg
out
sti
add
xchg
push
jp
mov
out
adc
xchg
fs
in
fld
pop
js
and
fistpll
cmpsl
jne
in
pushf
xor
push
lcall
loope
cmova
lcall
add
or
in
dec
xor
sti
cmpsl
adc
test
loop
jle
mov
lods
mov
mov
sbb
and
lods
rol
popf
xchg
lcall
mov
xor
and
inc
mov
in
add
push
lds
pushf
pop
aam
xor
or
jno
cmpsl
pop
mov
pusha
fcompl
inc
es
lds
xlat
cmpb
aas
mov
int3
test
out
lret
sbb
fcompl
push
cltd
jp
out
cld
addr16
mov
adc
addr16
cltd
push
stc
scas
cwtl
xor
fisubrl
ret
jmp
pop
mov
out
mov
adc
fwait
and
sbb
mov
push
adc
or
pop
jae
insl
lods
fcom
test
test
out
and
ror
mov
push
sub
int
aad
out
inc
fwait
cmp
sub
in
mov
scas
imul
shr
mov
movsl
cmp
mov
xor
nop
test
jge
pop
mov
pusha
inc
jecxz
dec
and
loopne
or
mov
shrd
in
xchg
add
mov
int
mov
sub
mov
mov
or
xorb
pop
sbb
cltd
dec
cli
out
push
add
xchg
fidivrs
xlat
and
sti
cmp
adc
and
jno
xchg
jno
ja
gs
mov
pop
add
je
mov
test
xorb
pop
inc
xor
sbb
pop
stos
dec
sbb
stc
sbbl
outsb
insb
iret
je
gs
mov
inc
add
btr
mov
ss
jge
dec
sbb
and
push
push
arpl
push
mov
je
mov
dec
cmp
jnp
adc
mov
and
xchg
mov
pusha
xchg
mov
mov
scas
mov
inc
mov
cmc
subb
inc
shll
popa
in
test
pop
pop
jge
loope
jmp
mov
xchg
fldcw
mov
adc
or
movsl
mov
pop
mov
mov
xlat
mov
push
insl
jo
sub
lods
pop
out
cmp
mov
mov
add
adc
push
movsb
push
mov
and
and
mov
inc
lahf
test
xor
fisubs
add
pop
mov
loopne
out
mov
push
out
sub
fs
lret
movsl
mov
loopne
movsl
dec
roll
add
sbb
sub
outsl
inc
nop
lret
scas
adc
out
fisttpll
imul
push
xchg
fstl
jns
push
mov
or
cli
in
pop
push
adc
rcrl
push
add
jne
add
sub
pop
subb
mov
mov
or
outsb
loope
mov
pop
cmp
adc
data16
fidivs
pop
in
pop
xlat
sub
add
add
mov
xor
xchg
out
js
test
addl
in
pop
dec
xor
es
roll
outsb
push
movb
loopne
push
mov
aam
imul
adc
test
jl
loop
push
push
mov
push
int3
addl
mov
testb
jns
daa
dec
or
push
push
or
xorb
movsb
mov
cmpb
mov
popf
xchg
jb
add
mov
fistpll
cltd
or
xchg
call
aaa
fdivr
add
sbb
daa
pop
sub
sbb
enter
push
cmp
jne
in
stc
outsl
mov
mov
jge
in
cwtl
mov
rcrl
jne
enter
fcomi
aaa
lret
aaa
jmp
adc
push
mov
push
je
out
setns
sbb
mov
dec
in
add
outsb
jl
mov
push
pop
jmp
cmpsl
pushf
mov
mov
cmpsl
pusha
push
xchg
out
and
add
and
nop
loope
push
xor
push
das
xchg
xor
hlt
loopne
sbb
adc
idiv
imulb
adc
dec
subl
jno
adc
cmpsb
in
or
ret
and
or
imul
xchg
sahf
mov
lods
lds
lahf
repz
inc
rorl
dec
push
cmc
add
movsb
or
add
setae
jge
adc
push
adc
dec
sub
push
pop
xchg
and
stc
cld
out
xor
pusha
xor
cmp
xchg
cmp
dec
ficompl
cmpsb
test
gs
outsb
fs
imul
mov
jp
mov
out
xchg
cld
add
or
insb
popa
movsl
adc
sbb
sub
mov
repnz
rcrb
mov
push
outsb
pushf
test
cmp
xchg
lret
pusha
jg
mov
and
jbe
in
sub
mov
addl
test
mov
lret
inc
fwait
mov
sub
es
popf
cltd
filds
aas
in
xchg
int3
push
cmp
push
movsl
adc
bound
orl
pop
rcll
popf
clc
inc
mov
into
out
ljmp
adc
in
adc
jl
xchg
sub
jecxz
push
rolb
int
or
int3
pop
jno
push
fnstsw
add
test
aas
mov
sbb
jmp
dec
mov
sbb
sti
cmpsl
add
loope
inc
mov
dec
jge
xchg
dec
int
pop
inc
sbb
mov
inc
sub
or
cwtl
js
mov
add
lods
xchg
aas
sub
mov
je
push
cld
jb
ucomiss
insl
dec
stos
loopne
inc
add
add
jle
xchg
js
dec
movsb
imul
iret
dec
lods
pop
jae
push
lret
out
test
nop
push
cwtl
adc
inc
dec
cmp
rolb
aas
cmp
nop
mov
push
pop
cli
add
in
xchg
push
das
mov
imul
stos
leave
xor
bound
into
xchg
add
idivb
test
dec
je
jmp
subl
xchg
mov
les
jge
mov
imul
mov
or
sbb
sbb
xor
jg
and
les
adc
xor
pop
inc
rorb
fcom
arpl
dec
inc
in
pop
xchg
xlat
inc
les
fldl
and
push
mov
int3
and
xchg
loope,pn
adc
sub
mov
and
cmp
inc
test
mov
mov
stos
sti
in
addb
inc
rclb
das
vphaddbd
inc
and
sub
repz
mov
cmc
icebp
test
adc
pop
daa
addr16
xchg
xor
add
mov
icebp
and
jl
mov
cmp
es
lock
movb
sbb
sti
push
inc
rorl
sbb
cmpsl
imul
aaa
mov
mov
in
jo
sub
inc
imul
sbb
or
pop
sti
mov
sub
aas
jno
jns
pop
inc
int
pusha
rcrb
lret
xor
pop
enter
bound
test
ja
mov
sbb
or
dec
mov
xor
mov
ret
cltd
pop
adc
cmp
es
out
cs
movsl
sbb
xchg
and
sahf
shrl
push
mov
sub
adc
inc
add
pushl
leave
lock
arpl
or
movsl
adcl
ds
adc
xor
leave
and
push
dec
ss
adc
data16
or
cmpsb
xchg
sti
add
gs
push
push
pop
mov
pop
fimuls
xchg
cmp
xor
out
pop
out
mov
sbb
mov
cli
ret
data16
sbb
pop
outsl
or
jge
pop
xchg
mov
mov
cltd
adc
mov
fistpll
inc
call
and
pusha
push
pop
push
dec
cmp
stos
addr16
cmpsb
lea
imull
fidivs
in
movsl
nop
idivl
mov
in
stos
xchg
jnp
jne
lcall
xor
outsb
icebp
add
push
int3
insb
adc
pop
adc
shrb
adc
int3
mov
data16
addl
cmp
dec
cmpsb
mov
sub
cwtl
xchg
sti
dec
enter
leave
push
out
cld
rol
xchg
scas
push
xor
addr16
iret
or
pushf
subl
xchg
jp
xor
pop
sbb
inc
decb
cmp
dec
sbbl
xchg
xor
jno
cli
movsb
int3
rcrb
gs
shll
cli
add
mov
inc
xlat
fildll
mov
cmpsl
sahf
push
mov
dec
sub
popf
cmpsl
aad
inc
sub
xor
jmp
ds
popa
xor
push
dec
cld
aad
dec
mov
sub
insb
cmp
dec
and
fisubrs
push
sub
pop
mov
sbb
mov
fimull
pop
push
insb
mov
mov
xor
into
push
sub
xlat
xchg
jbe
stc
cmp
push
es
cwtl
inc
lea
popa
inc
cmp
ds
je
rorb
mov
js
mov
mov
ret
adc
jl
xor
pop
lcall
aam
mov
pushf
adc
lahf
outsb
sbb
mov
shl
stc
add
push
leave
adc
lahf
dec
push
push
scas
add
clc
pop
cmp
pushf
mov
adc
pop
push
cmc
fs
cltd
jmp
ljmp
gs
sahf
xor
inc
add
xchg
pop
push
inc
arpl
jmp
jae
lcall
fisubs
mov
shrb
cwtl
add
mov
or
lods
les
into
rcrl
scas
inc
roll
out
jmp
xlat
push
pop
xor
fwait
cmp
aam
xchg
xlat
push
arpl
pop
daa
lea
roll
aad
lret
push
and
pop
fildll
fld
mov
stos
in
test
inc
sbb
xchg
mov
ret
add
cmpsl
cmp
sub
sbb
into
test
hlt
imull
mov
jmp
mov
pop
and
ss
mov
pop
push
movsb
or
in
sub
inc
cwtl
xchg
push
in
inc
test
dec
mov
cmpsl
or
mov
in
add
arpl
xor
jl
lock
ret
push
std
popf
sub
mov
stc
cmc
cmp
push
xchg
xchg
lods
cmp
and
push
mov
add
mov
jle
xchg
loop
and
inc
stos
lahf
push
inc
push
jo
aaa
adc
movsl
cmp
in
data16
enter
gs
jmp
aam
or
mov
shrl
insl
lret
or
push
test
jbe
and
fdivrl
sbb
incb
dec
aas
or
cmp
popf
lret
xlat
xchg
bound
mov
fwait
arpl
stos
or
add
mov
push
mov
or
enter
scas
imul
push
sub
mov
mov
das
adc
pop
add
aaa
dec
push
sbbb
ljmp
daa
stos
ja
comiss
lock
mov
pusha
aam
xor
in
movsl
cs
outsl
xchg
mov
je
nop
es
stc
ds
mov
or
add
pop
rorl
mov
jnp
fadds
xchg
unpcklps
or
pop
lods
bound
jecxz
pop
hlt
dec
mov
xor
inc
push
fwait
movsl
mov
push
out
test
stos
mov
pop
sbb
pusha
cmp
movsl
iret
fs
push
dec
sub
mov
cld
mov
adc
fistps
out
bound
fidivl
enter
gs
popa
loopnew
push
jne
pusha
xor
test
pop
xor
sarb
in
dec
push
push
xchg
cmp
add
cmp
imul
test
gs
mov
xchg
nop
mov
loop
push
cmp
sbb
rcl
add
push
into
and
fwait
inc
ret
in
out
jl
push
lods
movsb
jp
push
add
mov
arpl
xchg
repnz
je
lret
pop
mov
dec
inc
sbb
xchg
mov
inc
lret
push
fadd
pop
ret
jns
sub
outsb
cmp
pop
mov
test
data16
dec
in
jnp
loop
inc
mov
dec
stc
stc
sub
mov
repnz
test
fisubrl
fistps
pop
push
jno
jmp
inc
pop
jb
mov
ds
adc
aad
xor
sahf
jne
loop
sbb
notb
scas
in
push
sahf
sub
icebp
mov
and
out
cs
movsb
or
sub
mov
jb
push
cltd
pushf
fisttps
test
in
xlat
scas
test
dec
pushf
rcrb
in
mov
aam
cmp
mov
adc
push
int3
andb
jl
jne
pop
sti
pop
jne
ljmp
pop
sub
jae
out
add
lret
inc
fwait
mov
adcl
mov
adc
out
xlat
sarb
out
cli
mov
aaa
xor
mov
xlat
in
iret
jns
stos
mulps
mov
lods
es
shrl
jmp
imul
cmpsl
dec
jmp
into
leave
and
icebp
cmpsl
lock
jmp
mov
add
out
inc
rclb
lea
int3
clc
inc
sarb
sub
mov
push
sub
je
xor
insl
lock
repz
mov
mov
movsl
into
bound
int3
in
push
inc
inc
mov
aam
sbb
ja
mov
stc
pop
mov
aaa
pop
or
rclb
js
cmpsl
pusha
gs
mov
push
pop
call
mov
mov
push
enter
inc
add
xchg
je
das
arpl
adc
adc
or
pop
sarb
inc
inc
inc
dec
mov
or
jbe
cmc
inc
icebp
xchg
out
pop
mov
jg
and
pop
dec
mov
cmc
insb
js
ret
daa
cmp
xorl
imul
mov
bound
or
imul
mov
sbb
inc
pop
inc
lret
shrl
test
mov
xchg
lods
sbb
pop
adc
jb
add
or
imul
push
mov
loop
push
cmc
dec
flds
test
mov
flds
mov
addr16
push
in
clc
leave
push
lret
jecxz
test
cmp
or
cmp
test
sub
dec
jno
mov
jl
outsb
test
jb
imul
pushf
imul
popa
ja
mov
insl
jne
mov
mov
and
fidivl
call
mov
ljmp
and
out
les
daa
loopne
xor
add
ret
loope
or
xchg
cmp
mov
roll
cld
pop
pop
sti
sub
lods
out
daa
inc
aad
inc
jecxz
jbe
jne
push
sub
or
xor
ret
roll
sahf
insb
push
mov
out
mov
or
push
sti
dec
lods
sub
jp
xor
jle
scas
int
xchg
mov
sub
cwtl
push
xor
xchg
scas
test
ds
mov
xchg
loope
in
fmull
push
push
xchg
mov
cmp
push
outsl
dec
mov
sub
and
pop
and
dec
add
jmp
ss
movsbl
in
and
cwtl
or
mov
jl
pushf
pop
push
neg
add
fldt
adc
test
push
sarl
int3
mov
xor
mov
dec
xor
mov
testl
pop
adc
push
test
fwait
xchg
mov
add
pop
and
jg
js
scas
inc
jo
imull
and
shr
push
sbb
imul
int
pop
pop
adc
jnp
dec
adc
call
outsl
aad
fwait
test
dec
cltd
mov
fcmovnbe
or
imul
pop
push
mov
pop
insb
add
ret
data16
stc
pop
sub
cmc
into
nop
fsts
mov
push
and
sub
jns
test
test
cltd
add
aas
mov
in
pop
loope
xchg
nop
xchg
scas
addl
call
test
insb
add
popf
cmp
lret
in
sahf
negb
pop
arpl
setge
gs
xor
jge
mov
mov
mov
hlt
bound
and
sti
add
xchg
repz
test
xor
popa
jp
mov
push
lret
fcoms
pusha
pop
jo
outsl
in
test
pop
ss
int
dec
jo
adc
repnz
pop
out
push
jbe
and
pop
sbb
mov
push
xchg
filds
mov
shrb
outsl
xchg
imul
sbb
push
je
rorb
sbb
into
push
sbb
stos
and
jg
adc
mov
lea
fbstp
jg
mov
cmc
imul
inc
jae
xchg
sbb
push
jno
xchg
sub
icebp
enter
or
jle
jmp
jno
movsb
fdivrp
mov
mov
xor
popa
push
lods
out
cmpsl
cmpb
xorl
cmpsb
or
std
and
add
andb
call
mov
and
out
dec
or
mov
sub
imul
mov
and
xor
sti
inc
ficoml
push
in
in
jecxz
and
fmuls
inc
push
neg
jae
lds
inc
inc
gs
imull
in
sub
imul
xchg
mov
adc
stos
add
in
fildll
sti
pusha
push
xchg
xor
repz
int
mov
in
jnp
jno
test
iret
inc
orb
cmp
cwtl
xor
fistl
and
in
mov
clc
xchg
and
aas
div
pop
cmpsl
or
and
aas
mov
mov
mul
pop
pop
ja
data16
sub
mov
mov
pusha
sub
xchg
xor
insl
lahf
cmp
lret
sbb
or
stos
mov
or
insl
sbb
cmp
pushl
ret
push
push
sub
adcb
add
inc
shlb
xor
stos
idivl
ret
jnp
inc
pop
pop
push
repnz
in
push
push
xchg
je
inc
and
cmp
cmc
mov
adc
jge
fmul
rcl
lret
push
xchg
mov
cmp
xchg
gs
iret
adc
jge
jp
jns
jge
inc
xor
enter
sbb
je
ljmp
inc
sub
push
pop
outsl
lods
inc
mov
jns
mov
jmp
pop
lret
xchg
dec
cmc
aam
xchg
and
add
loope
out
icebp
jo
fcmovnbe
xchg
push
ret
push
aaa
dec
sub
jp
cmp
rorl
or
pop
mov
pop
aad
popa
fcomps
adc
sbb
xor
scas
and
mov
lret
lret
xor
mov
loopne
xor
add
arpl
lds
rcr
xor
push
xor
mov
push
mov
add
xor
repz
rcrl
dec
scas
movl
ds
out
and
jge
mov
int3
jp
mov
test
repnz
dec
pop
sbb
pop
sarl
pop
lea
fiadds
sub
cmpsb
bound
cld
pushf
inc
andb
dec
jle
cld
lret
or
in
nop
cld
imul
add
pop
clc
lea
mov
dec
and
and
ret
jge
dec
add
cmc
enter
insb
inc
sub
mov
ja
cmp
in
mov
mull
inc
jnp
repnz
jecxz
leave
popf
sub
iret
push
sti
ds
dec
ljmp
jbe
jg
fwait
xor
push
jae
bound
in
cmpsl
push
mov
sub
pushf
outsb
dec
or
inc
inc
jbe
sbb
inc
xor
adcb
fidivl
mov
add
push
sbb
cmp
clc
xor
pop
mov
cltd
and
mov
push
inc
push
and
mov
inc
aam
aaa
mov
mov
sbb
push
ss
xor
ret
loopne
xchg
or
call
pop
pop
jbe
mov
aaa
xchg
popa
inc
jbe
jle
cwtl
sub
mov
and
jmp
rolb
pusha
cmp
push
or
cs
iret
add
loop
stos
pop
xchg
std
lcall
or
add
sbbl
aad
and
xchg
sbb
sbb
bound
inc
stos
hlt
bnd
clc
aas
pop
mov
pop
das
in
aam
idivb
sbb
insb
xor
and
lret
adc
inc
stc
pop
jo
in
xchg
into
lock
inc
fs
or
out
mov
sub
addr16
mov
shrb
xchg
out
aaa
frstor
add
stos
data16
lcall
push
push
outsb
dec
clc
aad
cs
and
shrl
negb
mov
jae
push
movsb
movl
loopne
movl
lock
push
insb
stc
loopne
imul
inc
movsb
ljmp
ret
pop
or
je
rcrb
clc
cmp
aas
fbld
int
cltd
sbb
and
cmp
scas
inc
xchg
clc
sbbl
ret
aaa
ret
andl
out
and
mov
xchg
ljmp
std
repnz
imul
iret
jmp
push
sub
pop
shll
xor
cmp
mov
orb
mov
das
sbb
adcb
ret
xchg
aaa
inc
inc
mov
pushf
jl
in
mov
pop
shl
lret
loop
or
loope,pt
xchg
test
xchg
stos
je
out
pop
iret
fucomip
lods
int3
dec
jge
stos
icebp
shll
sbb
xlat
add
push
add
jae
mov
lds
shl
outsl
ss
cmpsl
cli
push
rcll
push
push
and
fcoms
jmp
xchg
aas
xchg
dec
andl
subps
lods
cmp
dec
or
jl
inc
xchg
stc
pop
sub
mov
in
fnsave
add
cmpsb
popf
out
push
dec
jb
and
mov
js
insb
std
pop
add
popf
inc
inc
mov
push
call
in
outsl
add
pop
ror
xchg
ja
sbb
push
mov
adc
call
dec
xor
outsl
mov
cmc
fidivrs
nop
xor
pushf
add
jns
shrb
faddl
ss
sub
in
inc
jle
repnz
int3
mov
cmp
aaa
pop
nop
pushf
and
inc
aad
cmpsb
cmc
rorl
push
dec
inc
lahf
sub
push
inc
inc
cltd
aas
hlt
sahf
sbb
and
sub
and
add
test
or
inc
outsb
data16
std
jne
lods
hlt
leave
bound
outsl
dec
daa
sahf
push
shr
ret
adc
inc
fdivrl
cmp
jecxz
mov
sahf
add
rclb
les
lods
clc
pushf
stc
pushl
roll
mov
or
and
mov
cmc
pop
xor
mov
mov
rorb
xchg
xchg
sbb
add
mov
cmp
test
xor
jmp
aam
dec
xchg
dec
sbbl
addr16
loopne
andb
iret
je
xchg
cmp
push
and
jge
and
arpl
mov
or
xchg
cmc
push
fstps
push
mov
dec
mov
lea
fsubrl
stos
push
out
js
xchg
lock
xchg
fwait
lret
cmc
iret
jno
mov
nop
sub
inc
out
inc
cmc
jne
hlt
int
dec
jg
dec
push
mov
jns
push
cmp
pop
xor
mov
push
sbb
aad
sub
push
sub
push
lods
fs
dec
inc
pop
adc
push
inc
mov
out
push
inc
push
jo
loopne
pushf
in
pop
and
outsb
stos
pusha
mov
cmpl
mov
mov
xor
sbb
inc
or
jl
pop
fldenv
adc
arpl
ds
push
lea
pusha
clc
fcomps
mov
pop
and
mov
mov
lock
rcll
xor
or
mov
xchg
iret
decb
mov
stos
daa
mov
adcl
mov
jp
insb
clc
push
shlb
cmpsb
xchg
mov
fnop
push
mov
pusha
push
xor
push
lahf
cli
jnp
mov
call
push
loopne
pushf
dec
sub
jns
mov
loop
popf
add
lock
stos
inc
test
sbb
rolb
in
sub
mov
movsb
mov
sbbb
and
inc
mov
ds
pop
imul
out
mov
mulb
lahf
xor
add
lret
outsb
out
push
jae
dec
std
add
xchg
jns
fisubl
hlt
push
adc
mov
mov
icebp
pop
inc
mov
xchg
mov
sbb
mov
mov
jns
pop
cmpsb
mov
mov
push
mov
push
popf
cli
mov
add
dec
loope
add
xor
iret
or
lods
cltd
xor
and
mov
or
lods
jl
cmpsb
sarl
imul
sbb
pop
adc
push
push
pop
rcll
push
ffreep
add
xchg
xchg
movsb
aad
jg
cmp
arpl
xorb
jno
sbb
lods
fucomp
xchg
js
adc
push
dec
andb
andb
mov
inc
add
xor
adc
sbb
jno
dec
mov
dec
and
push
and
stc
out
and
jl
and
ret
dec
mov
movsb
mov
imul
mov
leave
and
call
and
jle
pop
jl
lods
lock
adc
xor
inc
fs
call
or
jecxz
in
lret
es
sbb
fld
add
es
loopne
test
repnz
mov
dec
mov
ljmp
fnstenv
incl
cs
mov
sti
rcr
sub
xor
rolb
sbb
mov
xlat
jbe
xor
adc
xchg
jne
in
scas
pop
push
fdiv
int
inc
dec
fs
out
adc
loope
cmpsb
imul
dec
add
popa
adc
pop
popa
push
ret
jne
mov
and
ss
ret
sahf
sbb
cwtl
jnp
dec
jg
ja
jecxz
inc
pushf
pop
mov
fadd
mov
jl
pop
jns
stos
into
push
addr16
pushf
push
repnz
fsubrl
xchg
sbb
cli
jne
es
pop
pop
fistl
lods
mov
inc
sahf
mov
dec
outsb
shll
ret
xchg
inc
arpl
ss
or
jge
mov
sarl
pushf
popa
mov
in
scas
in
test
std
rcr
and
js
mul
and
and
outsb
xchg
adc
or
mov
sti
jecxz
dec
shrb
nop
or
lock
mov
mov
sbb
pop
popa
daa
mov
cmp
mov
mov
fildl
sub
add
jae
or
pop
and
and
cli
pop
push
jbe
pop
sbb
popf
lcall
mov
adc
fsubr
arpl
popf
push
adc
sbb
clc
rorb
dec
adc
fists
lods
outsb
cmpl
add
add
fbld
cmpsb
dec
out
jne
push
jae
jb
mov
es
sti
aam
push
pusha
jb
cli
cmpsl
out
jne
cmp
aas
in
push
jns
pop
pop
xor
mov
lahf
or
loope
add
and
sub
out
outsl
idivl
sub
sti
sub
or
jecxz
out
je
pop
or
jg
pop
push
or
fsubr
setae
rorb
fs
les
dec
inc
xchg
xchg
jp
repnz
loope
jns
repz
push
inc
fisubrl
repz
sub
push
mov
and
fmull
shll
add
dec
sub
sar
xor
sub
and
mov
loope
int
adc
rorb
jae
adc
jecxz
cmp
loop
xlat
sahf
in
sub
stos
in
call
and
stc
inc
push
andl
scas
js
cmpsb
icebp
insb
les
push
add
adc
xor
sbb
xchg
repnz
mov
and
jle
cmp
sbb
fnstcw
call
jecxz
int
lret
pop
lahf
mov
sbb
rorl
dec
pop
es
pop
stos
ds
xor
test
jns
xchg
stos
mov
lret
daa
pop
xchg
sbbl
insb
xor
es
dec
mov
cmpsb
dec
push
movsb
adc
popf
cwtl
cmpsl
jbe
cld
add
or
je
mov
pop
and
in
push
fwait
je
jae
cmp
sub
gs
jmp
dec
push
jnp
xorb
adc
xchg
push
cmp
stos
inc
pushf
pop
pop
mov
sub
aad
adc
in
add
imul
rorb
aaa
cmp
adc
outsb
loop
fwait
pop
xchg
push
test
std
es
and
pop
pop
dec
ds
iret
adc
add
add
movsl
adc
fwait
sbb
inc
lea
ds
add
and
pop
sbb
mov
das
mov
push
daa
jle
mov
or
jbe
sub
imul
int
stc
jo
cmpl
inc
push
jb
sbb
rorb
dec
pop
cmpsl
test
xorb
pop
cltd
xchg
jmp
inc
sbb
fidivrl
jecxz
and
xchg
push
std
mov
mov
addr16
enter
push
test
sbb
sub
pop
adc
pcmpgtw
rorl
movsl
shlb
jge
aas
pop
pushf
add
adc
fwait
dec
dec
fwait
mov
xchg
mov
mov
in
divl
adc
dec
negb
in
mov
incl
jo
icebp
mov
xor
aam
jbe
xor
imul
jae
or
cwtl
jne
gs
push
mov
xchg
mov
push
xor
int
pop
push
bound
inc
cmp
add
in
sub
adc
out
int3
jg
jo
sbb
jnp
lods
xchg
and
fidivrs
xchg
push
xor
sbb
scas
mov
nop
dec
pop
fildll
sbb
fcmovnu
dec
push
jbe
cmpsb
fs
int3
xchg
sub
into
das
or
sbb
daa
cmpsb
jg
aad
rorb
lock
push
insb
adc
cmp
ret
arpl
std
lcall
and
mov
pushf
into
push
sarb
push
dec
arpl
es
hlt
mov
xchg
xchg
inc
into
outsb
jge
mov
push
imul
or
loope
test
out
push
popa
cmpl
pop
popf
leave
cmp
mov
push
mov
enter
lcall
jo
mov
xor
push
mov
mov
cltd
cwtl
sbb
inc
scas
shr
addr16
sbb
add
adc
bound
scas
cmp
dec
jns
xor
je
jo
mov
movsl
jb
pop
mov
int
fdiv
in
and
mov
scas
pop
mov
push
outsb
mov
push
and
cltd
lods
sbb
stos
add
push
shrb
xor
pop
icebp
std
cmpl
or
xchg
mov
testl
dec
std
addr16
inc
dec
mov
adc
or
test
xor
test
in
add
popl
mov
inc
jp
ret
mov
cmp
in
adcl
sub
lock
push
sub
mov
imul
add
test
into
adc
mov
movsb
and
or
in
and
lods
repz
inc
mov
cwtl
lret
mov
scas
pop
loopne
mov
dec
inc
dec
fisttpll
jne
fistpl
sbb
aad
xchg
pop
stos
and
fmul
push
jne
loopne
sbbb
push
cmp
cmp
nop
subb
cli
mov
out
insb
leave
jl
dec
dec
push
push
lods
jb
and
push
cmp
gs
jge
rcrb
or
push
pop
cmpsl
jge
loopne
push
sbb
lock
dec
mov
adc
rcll
insb
push
cmc
mov
cmc
dec
scas
lret
sbb
pop
mov
rcr
cmpsl
stc
je
push
inc
in
ja
inc
clc
into
jbe
enter
fidivrs
jg
cmp
jae
push
ss
inc
mov
ror
std
mov
movsb
icebp
or
jno
cmp
sbbw
or
idiv
dec
fsubs
add
std
into
leave
adc
into
and
fsubr
mov
mov
fwait
movl
sub
add
rorb
push
sub
mov
popa
arpl
pop
mov
aam
test
test
sbb
jle
in
lret
xor
imul
sbb
push
test
add
ds
sub
inc
jo
int3
and
testb
mov
xchg
das
repz
lret
std
or
mov
jno
in
mov
aas
add
movsb
sarl
xchg
and
add
lock
mov
pusha
ss
dec
rcl
xor
sahf
jae
clc
arpl
ds
jle
mov
mov
add
add
and
push
sbb
mov
movsb
jg
pop
adc
call
jno
test
shll
sub
fisubrs
xor
out
push
jb
xor
roll
std
rcrl
inc
fs
mov
mov
push
scas
dec
in
cmpxchg
adc
lcall
pop
orl
into
mov
push
aam
push
inc
xor
popa
lds
xchg
add
in
mov
push
loope
ja
mov
cmp
and
add
icebp
jae
ret
mov
push
out
jge
popf
add
or
mov
xor
scas
sbb
in
pop
cmp
cmp
xor
pop
cmp
daa
into
incl
les
push
sub
loopne
loop
sbb
and
and
xor
scas
cli
pop
mov
sub
and
xchg
notb
out
cmp
sub
push
fiadds
testl
cmpsl
mov
push
cmp
in
mov
loopne
notl
mov
stc
fnstcw
mov
mov
xchg
add
jbe
mov
xlat
sub
das
adc
das
mov
enter
adc
cmp
mov
sub
enter
push
scas
testb
stos
aas
or
stos
pushf
push
shrb
fwait
out
ja
or
sub
sti
or
insb
cli
lret
ret
imulb
lods
and
push
das
sub
stc
cmp
xor
mov
ja
mov
cld
sbbb
xchg
mov
push
rcll
push
inc
das
sub
in
jnp
push
ljmp
ljmp
test
mov
adc
add
stos
loop
xchg
or
sbb
xor
lock
leave
nop
aaa
or
dec
arpl
adcb
into
mov
stos
addb
dec
dec
scas
xorb
mov
and
in
pop
mov
movsl
jno
data16
rolb
or
gs
or
lret
neg
cmp
xchg
imul
jb
mov
loop
xchg
mov
dec
test
or
dec
fnstsw
xchg
push
push
aas
into
out
shrl
mov
mov
xchg
dec
ljmp
jle
jae
push
inc
mov
shrl
mov
cmp
xchg
dec
xchg
mov
mov
test
push
adc
and
sbb
cwtl
push
fwait
xchg
pop
sub
pusha
stos
xor
cmovb
mov
pusha
xchg
out
push
xor
mov
mov
or
popf
xchg
sub
mov
out
cmp
test
cmc
jp
xor
into
int
mov
mov
dec
cwtl
fs
pop
pusha
fdivrs
js
movsb
dec
and
imul
inc
aaa
outsb
jl
cltd
loop
fmull
push
loopne
xor
sbb
in
nop
sbb
testl
lahf
add
rol
ja
pop
sbb
jb
push
xor
add
pop
mov
mov
cmpsb
test
mov
xchg
add
sub
pusha
int3
je
xor
pop
int
and
push
test
roll
jo
and
aam
jle
lods
fistpl
ds
xor
and
pusha
mov
les
lcall
push
setp
xor
pop
sti
insl
mov
add
aas
in
jl
leave
aaa
js
es
cmpsb
stc
sbb
std
sub
fisttpll
inc
xchg
jmp
dec
daa
imul
frstor
stos
loopne
es
jno
mov
cmpsb
rclb
xchg
mov
cmp
test
add
inc
insb
std
int3
movsl
xchg
cmpsl
jae
pop
out
mov
xlat
ret
xor
sub
push
imul
xchg
icebp
push
aas
dec
adc
mov
in
cmpsb
xor
xchg
arpl
std
add
pop
loopne
insl
shlb
pop
dec
cs
insl
mov
repz
xor
mov
add
or
lods
leave
test
push
mov
jmp
into
fistps
jle
cmp
adc
je
fildl
mov
jle
mov
aas
mov
fwait
add
lcall
dec
movsb
ret
outsl
sarl
sub
in
cmp
mov
pop
cli
xchg
dec
lahf
add
mov
mov
or
mov
xchg
mov
std
lahf
sub
mov
sbb
pop
sub
pop
pop
clc
jns
out
mov
mov
and
sbb
sub
repz
sub
aaa
lret
and
mov
and
cmp
jo
popf
add
hlt
push
adc
js
pop
pop
adc
or
arpl
jmp
shl
ret
cld
xor
ror
mov
sbb
cmpb
cmc
mov
mov
loopne
inc
pop
cmp
pop
nop
fwait
and
push
les
dec
push
mov
ljmp
add
ds
loopne
add
test
mov
stc
leave
inc
dec
es
insl
mov
insb
jge
jno
jmp
rorl
jns
nop
repnz
inc
push
dec
gs
rolb
xchg
inc
mov
push
mov
add
into
pop
test
add
hlt
les
push
jle
outsl
out
jbe
xchg
mov
test
jne
arpl
mov
mov
lods
scas
or
repnz
negb
mov
adc
jg
test
insl
lods
xchg
fdivp
sbb
mov
mov
orl
dec
insb
shl
xchg
mov
fmul
data16
std
ljmp
outsb
stos
daa
xor
and
lcall
popl
adc
xlat
outsl
mov
xchg
dec
int
addr16
cmp
jecxz
jge
cwtl
xlat
rclb
cmc
addr16
jle
xchg
inc
pop
fisubs
mov
or
mov
dec
mov
stos
sbb
aam
insb
in
or
inc
lea
hlt
andl
jge
push
xchg
cmp
sbb
mov
mov
cmp
insb
jge
adc
mov
cmp
sbb
movsl
sbb
bound
add
out
fstpl
sub
inc
repnz
out
ja
xor
and
xchg
js
add
or
sti
test
rclb
cmp
insb
mov
jb
xchg
imul
and
xchg
sub
mov
call
loopne
lcall
repz
mov
ja
jmp
daa
mov
call
add
repz
add
imul
jns
cmp
mov
aam
lret
sub
sqrtps
add
call
ljmp
and
mov
loopne
hlt
aad
dec
and
sbb
cmp
mov
test
cld
cltd
mov
call
pop
nop
nop
add
dec
push
nop
xchg
insb
push
notb
mov
repz
pop
mov
add
mov
mov
xor
sbb
lods
or
adc
or
and
ss
adc
popf
xor
movsl
jae
mov
dec
xchg
pop
xchg
inc
lock
sub
push
out
in
adc
or
das
or
lcall
inc
add
push
cld
sub
mov
mov
mov
inc
or
addb
icebp
outsl
jno
inc
xor
and
xchg
cmpl
adc
fdivs
pop
ret
mov
mov
lea
sahf
hlt
lahf
das
fiadds
inc
jo
int
sbbl
fldenv
inc
jnp
fbstp
jp
test
les
adc
shll
xchg
dec
ret
cmp
pushf
push
fdivs
push
fucomi
imul
xchg
lret
pop
push
and
mov
addr16
orb
pop
dec
inc
push
lock
out
mov
fsts
mov
mov
outsb
pop
cmpsb
fcomps
mov
xor
push
or
xor
gs
mov
shr
pop
mov
scas
xor
movsl
inc
addr16
lret
fimull
add
lea
mov
iret
push
jle
rcr
pop
or
push
pop
out
cmp
in
xor
jb
inc
stos
dec
sub
sbb
mov
das
loopne
enter
addb
faddl
mov
sbb
mov
outsb
je
fsub
cmc
mov
out
lea
mov
cmpsl
imul
nop
mov
popl
push
lret
cmp
dec
push
or
outsb
nop
daa
cltd
cmc
add
xchg
pop
loope
test
loop
aad
push
gs
mov
testl
sub
mov
mov
lock
mov
xchg
xchg
xor
mov
andb
mov
pop
xchg
xor
inc
xor
bound
lock
inc
push
test
xchg
xchg
mov
shrb
subb
adc
imul
imul
pop
cmp
out
shlb
cmc
pop
adc
andl
cmpl
jnp
jge
sub
xchg
les
inc
mov
loop
in
push
lcall
adc
data16
mov
jnp
leave
sub
adc
lods
adc
jb
subl
xchg
inc
outsl
sbb
ljmp
pop
es
sub
jbe
push
sbb
scas
jg
into
mov
pop
lock
dec
xlat
ss
jbe
cmp
dec
ret
mov
sub
lcall
xor
push
dec
push
jne
into
mov
mov
lahf
aaa
mov
add
orb
nop
shll
or
dec
jns
push
cmp
xchg
sahf
dec
push
int3
cmp
xchg
int3
bswap
sahf
pop
dec
add
sbb
out
insl
add
fcomp
or
imul
emms
movsb
scas
ljmp
jno
cmpsb
pop
push
in
inc
pushf
mov
adc
sbb
xor
fisttpl
mov
add
imull
pop
data16
lds
mov
mov
mov
stos
mull
cmpsl
scas
sub
icebp
adc
push
das
xlat
sbbl
jo
leave
cmp
rcrb
lahf
mov
repz
adc
push
into
pop
inc
mull
jb
gs
push
lock
xor
add
cmp
mov
sbb
or
push
sub
loopne
jne
push
scas
inc
movsb
inc
xor
mov
push
mov
pop
arpl
cld
xchg
mov
fadds
roll
pop
jp
mov
xor
add
lcall
insb
mov
fsubrp
dec
push
push
call
mov
fstpl
mov
pop
sbb
insb
test
jge
leave
and
lret
mov
ljmp
jae
mov
sub
mov
dec
pop
or
mov
cli
add
pop
mov
stc
aam
pop
add
shlb
and
pushf
popf
icebp
jg
lahf
mov
adc
data16
jb
adc
and
ror
xor
mov
or
test
mov
imul
test
js
mov
out
pusha
cmp
icebp
sbb
mov
cmpsl
in
loopne
add
ds
add
push
mov
sti
fs
and
fsub
fmull
pop
loope
sbb
fwait
test
mov
xchg
and
sbb
xor
addb
sub
out
xchg
xlat
or
movsl
pusha
repz
adc
push
xorl
jg
iret
inc
test
and
lea
jae
out
nop
sub
loope
imul
push
inc
mov
mov
es
cmp
push
call
mov
rcrb
jns
imul
test
xchg
clc
adcb
les
add
inc
rcrb
lcall
adc
sbb
lret
mov
xchg
or
movsb
out
jge
negb
fcmovu
mov
ja
mov
sbb
push
mov
xchg
mov
and
out
dec
ret
test
adc
imul
icebp
sub
xor
or
test
ds
jb
xchg
jbe
fisttpl
cmp
jo
stos
daa
adc
inc
ljmp
add
mov
xchg
and
and
push
cld
andb
or
cmpb
pop
movsl
jmp
icebp
push
insb
es
imul
das
cmpsb
and
nop
in
es
or
and
rdmsr
fwait
lea
or
lock
lcall
imul
add
xchg
imul
sbb
outsb
mov
cwtl
popf
out
cmpsb
inc
mov
pop
es
mov
sbb
jge
dec
push
jmp
xchg
lock
movsb
xor
pop
pop
inc
orb
mov
and
loop
push
mov
dec
lds
xchg
rorb
mov
dec
pop
pop
pop
psrlq
lds
repz
test
es
mov
xor
test
mov
xchg
mov
test
xor
push
adc
stos
jg
nop
pop
jns
pop
adc
ja
push
enter
pushf
sti
jb
lcall
mov
loopne
lret
xlat
jo
into
sahf
shlb
fstpt
push
scas
inc
pop
je
dec
orb
cmp
and
and
mov
cltd
popa
ret
xor
data16
inc
js
mov
shlb
and
inc
cmp
mov
jle
aam
ss
jl
insl
test
push
and
add
mov
filds
push
or
push
ljmp
ret
or
call
lret
cmp
jge
jns
xchg
jbe
loop
rcrl
push
sbb
fiaddl
xor
fsubrl
add
jecxz
pop
jp
sub
pop
imul
lods
je
inc
pop
popa
dec
jl
ja
jbe
jmp
dec
pop
cmpsl
rorb
mov
ja
jmp
repz
shll
lock
out
lahf
mov
cmp
int
in
push
adc
fwait
cli
add
push
mov
loopne
cld
daa
xchg
andb
cwtl
mov
aam
mov
sub
sbb
xchg
popf
add
add
stos
dec
popf
push
fs
ds
sub
mov
mov
push
out
push
adc
sahf
imul
or
push
adc
mov
ja
in
cli
and
stos
push
inc
and
shrl
push
fprem1
clc
push
adc
pop
pop
xlat
bound
pop
cld
sbbb
sub
mov
in
adc
outsb
mov
pmulhw
movsb
mov
xchg
fisubrl
pushf
sub
or
jmp
lcall
loope
push
dec
adcb
jge
xlat
insl
clc
ror
pop
add
mov
icebp
shl
imul
xchg
sub
pop
inc
xchg
sbb
or
lods
mov
adc
jno
bound
push
das
sbb
loopne
inc
in
jg
jbe
mov
mov
lret
mov
jle
icebp
fiadds
test
sub
int
lcall
iret
clc
jecxz
mov
stos
std
add
jg
jo
xchg
lahf
lcall
mov
pop
dec
popw
addb
fildl
sub
sbb
push
outsl
ds
cmp
push
jmp
jo
ret
pushf
jmp
jo
imul
lahf
daa
incl
int3
add
cltd
out
jbe
inc
mov
mov
dec
cmpsb
fs
in
stos
xchg
push
clc
add
test
cmpsl
movsl
cltd
int3
test
pop
fisttpll
fistl
xor
jnp
aam
popf
inc
jge
js
dec
xchg
push
mov
push
repnz
nop
cwtl
xor
jbe
loopne
test
xchg
inc
jl
data16
xchg
aad
pushf
in
imul
rclb
or
add
movsb
dec
fadd
scas
movsl
js
ret
fldcw
inc
dec
fists
inc
iret
pushf
mov
and
cmc
jecxz
adc
xchg
sbb
jbe
je
pop
in
jmp
jg
nop
inc
xchg
mov
and
mov
sbb
movlhps
lcall
cwtl
and
rorb
and
dec
sub
punpcklbw
push
dec
mov
xchg
and
and
sbb
and
addr16
jmp
dec
mov
leave
and
and
sub
in
sbbb
inc
add
mov
addr16
fcoml
push
adc
and
inc
imul
lea
xchg
ss
mov
pop
lds
mov
movsb
cmp
repnz
out
ret
scas
rcrb
loop
ret
fs
enter
xor
ja
or
std
adc
dec
nop
lcall
insl
jge
xor
mov
sub
js
mov
aad
xchg
test
jecxz
inc
add
jl
cmp
lcall
iret
pop
nop
inc
out
pop
pushf
ljmp
xor
shrb
loop
ja
add
js
cmpsb
hlt
in
jmp
sbb
mov
imul
push
jb
jmp
repnz
pop
icebp
add
xor
out
cmp
or
popa
inc
lret
movsb
cmp
cs
mov
and
inc
lcall
outsl
ret
pusha
jb
cmp
push
mov
lretw
lods
jnp
add
and
sub
push
dec
fcoml
mov
aas
test
mov
js
xchg
mov
int3
pushf
xchg
fstp
roll
js
stos
das
mov
in
je
shlb
inc
cmp
add
sbb
stos
test
rcl
movsb
das
push
ret
shr
mov
cwtl
cmp
cli
xor
data16
in
lods
aas
push
pop
into
mov
mov
and
mov
fadds
stc
and
pop
mov
push
nop
cmp
test
int3
test
xor
xchg
sarl
add
and
insb
pop
popf
sub
cmp
xor
push
gs
inc
add
mov
addl
lods
adc
push
lock
mov
rcll
dec
sub
sbb
xchg
jb
les
fnstenv
jb
rorb
repnz
mov
mov
inc
int3
bound
test
sub
mov
cmp
and
out
js
push
dec
std
out
pop
ljmp
movsl
sbb
lea
icebp
les
xchg
je
addr16
xchg
scas
outsl
lcall
sub
nop
mov
gs
cmpsl
push
xchg
or
es
xlat
sar
pop
insb
fsubrp
jmp
cmp
sub
lcall
push
mov
push
jmp
push
test
cmp
xor
js
addr16
mov
xchg
cmpsl
mov
aam
lahf
fcoml
xor
pushf
clc
push
mov
aad
and
xchg
jno
cld
mov
mov
je
clc
sarl
adcl
inc
fdivrp
xchg
sub
add
xchg
pop
orl
push
mov
jmp
test
push
pop
lods
scas
inc
js
outsb
js
xchg
idiv
sbb
xlat
scas
testl
testb
test
and
sub
out
xor
add
or
lcall
iret
ret
in
bound
xor
movsl
mov
inc
sbb
fisttpll
and
movl
lea
mov
pop
xor
dec
lret
mov
fildll
xor
sbb
or
mov
inc
pop
jmp
add
inc
pushf
lahf
arpl
pop
out
xchg
jno
push
push
mov
cs
and
outsl
mov
sahf
shll
dec
jnp
mov
dec
pop
shr
sub
fbstp
out
or
insl
adc
bound
adc
mov
movsb
mov
std
and
out
iret
jae
xchg
in
or
scas
sub
add
aam
jecxz
add
outsl
lahf
xor
mov
cld
loope
add
subb
call
stos
outsb
jo
adc
scas
mov
cmp
add
jb
xchg
sub
dec
adcb
mov
cmp
xchg
aad
jecxz
je
and
imul
dec
push
cltd
outsl
jl
mov
mov
jge
or
or
push
inc
xor
into
mov
or
jmp
mov
mov
ss
lods
push
cmp
pop
cmp
and
mov
lahf
cmp
or
ljmp
mov
sub
jb
xchg
aaa
pop
and
mov
and
inc
dec
int3
aaa
dec
in
ds
mov
mov
in
lods
push
movsb
pushf
mov
mov
mov
shl
adc
nop
imul
adc
nop
mov
lods
xchg
flds
fidivs
sub
sub
sub
jmp
jle
xchg
mov
pop
push
cmp
jecxz
and
insl
mov
and
jbe
fdivrl
aad
stos
xor
mov
pop
sub
pushf
std
and
ja
sbb
mov
mov
fdivrp
fbstp
adc
jmp
mov
ljmp
cmp
gs
mov
mov
add
xchg
mov
out
pop
aad
cwtl
mov
mov
inc
inc
sbb
loopne
inc
pop
rorl
lea
repnz
or
dec
push
mov
jmp
ss
movsl
std
xor
cmp
adc
mov
fnstsw
addr16
pop
fcoml
xlat
push
add
popa
fcomps
sub
push
jns
sti
push
js
sub
pop
xor
mov
lret
pop
nop
sub
or
jae
jmp
insl
sahf
int
lret
sar
je
jecxz
rcll
adc
mov
imul
repnz
inc
xor
pop
das
pushf
fdivl
scas
push
xchg
adc
insl
xlat
aam
pop
mov
pusha
icebp
fwait
call
lcall
xchg
jl
and
and
cmp
push
clc
lods
inc
dec
or
fcmovnb
sbb
imul
xlat
jp
pop
pop
in
scas
in
cmp
xchg
jmp
shll
in
mov
dec
mov
inc
push
or
fisttpl
adc
inc
scas
mov
add
faddl
fdivrs
fisubl
xchg
push
pop
aas
popa
es
mov
je
jmp
outsl
or
leave
jne
or
dec
cmpb
xor
pop
imul
cltd
test
mov
adcl
or
test
xor
and
enter
lret
pop
jecxz
sbb
xchg
pop
sbb
fldl
mov
sbb
out
imul
jae
xchg
adc
in
aaa
mov
cmpb
xor
sub
loop
pop
int
and
gs
mov
add
imulb
jne
fs
mov
push
xrelease
xchg
jl
aad
pop
daa
push
test
lods
js
or
mov
psubusb
sahf
in
pop
mov
loope
cmp
stos
mov
imul
add
loop
rcl
lahf
inc
add
nop
mov
pop
and
fimull
cwtl
xor
inc
mov
enter
fs
jge
xlat
out
push
inc
scas
push
push
cmpsb
cmp
mov
out
insb
outsb
iret
jl
push
movsb
mov
in
pop
hlt
jl
pop
fs
popf
sarl
xor
loop
xor
andb
xor
and
push
adc
repz
mov
mov
add
outsl
add
cmpb
sbb
sbb
jmp
mov
rclb
lret
xchg
mov
sbb
xchg
stos
and
in
dec
xchg
ljmp
push
jns
jecxz
sti
mov
test
cmp
ja
outsl
test
aam
cmc
sub
int
xchg
shr
jge
push
lret
fstpl
jge
dec
cld
inc
add
std
fsub
repnz
imul
out
sub
adc
cwtl
addr16
cmpsb
ljmp
imul
nop
decl
hlt
push
mov
xchg
jnp
inc
pop
add
inc
sahf
data16
stc
mov
inc
fstcw
ss
into
pop
mov
mov
in
xor
sbb
or
lock
test
xchg
mov
inc
call
clc
xchg
mov
mov
mov
or
out
loope
or
mov
sbb
scas
adc
add
fwait
ja
out
xchg
outsl
hlt
fcompl
xchg
mov
roll
fpatan
outsl
repz
imul
adc
loop
xchg
adc
xchg
mov
stos
nop
mov
pop
addr16
jbe
js
xor
inc
sbb
insl
sti
stos
xchg
popa
sbb
mov
je
jle
stc
mov
out
out
adcl
shl
loop
lock
mov
aad
aam
out
cmp
lock
cmp
fstp
scas
test
ljmp
rorl
adc
sbb
pop
dec
inc
mov
clc
mov
and
push
inc
int3
fcmovne
sub
test
sahf
push
add
xchg
jnp
loope
inc
jmp
mov
inc
cmpsb
jno
stc
leave
scas
xchg
dec
sti
or
insl
push
movsl
inc
push
mov
insb
je
adc
pusha
shlb
rolb
aas
loope
jge
push
cltd
cld
dec
and
xchg
cltd
or
mov
dec
sar
fistps
aam
out
clc
aad
fs
sbb
pop
iret
adc
out
daa
adc
test
mov
arpl
push
sbbb
inc
dec
pop
std
jne
inc
jno
jecxz
shlb
rorl
jp
hlt
out
mov
inc
lret
fwait
mov
cmpsb
cmc
and
mov
mov
push
dec
seta
push
shlb
xor
mov
les
orl
pop
into
shlb
rcr
xchg
lcall
jne
sahf
fs
pop
mov
cmp
test
mov
cld
rcr
mov
outsb
mov
ss
jnp
or
jle
int3
cmp
add
ret
daa
or
ja
in
add
mov
and
xchg
mov
push
pop
cmpb
dec
or
xor
movsb
inc
ja
jp
lds
jnp
nop
cmp
sub
sub
jmp
sub
adc
xorl
sti
cld
cmp
test
sbb
or
sbb
incl
adc
sti
pop
mov
xor
jae
or
xor
test
test
fwait
movsb
inc
arpl
lret
mov
adc
notb
xchg
xchg
or
in
rclb
cld
loopne
xor
daa
xor
loope
xchg
rcrb
mov
adc
or
push
cmp
cmp
sub
mov
dec
sbb
push
or
dec
aad
push
inc
idivb
mov
test
jmp
adc
test
or
fwait
insl
push
adc
jmp
or
data16
movsl
scas
cmp
into
push
push
lods
adc
fucomp
lock
cltd
add
dec
xor
shlb
inc
in
push
jnp
cmpsl
fsubs
or
rcl
cmp
add
xlat
sbbb
push
or
push
vmwrite
push
adc
sub
movaps
out
ret
shr
xor
popa
mov
push
fstpt
ljmp
cwtl
jecxz
out
cmpsl
mov
mov
and
shlb
mov
sbb
inc
nop
sahf
sarl
xchg
into
dec
int
cmp
cld
dec
xchg
test
fimuls
adc
pushf
arpl
imul
call
scas
aaa
jmp
repnz
xor
aaa
and
dec
jb
push
adc
idiv
dec
mov
arpl
test
push
rol
xchg
jbe
je
in
das
mov
push
mov
xchg
xchg
mov
add
leave
fwait
jecxz
into
push
add
and
dec
add
jnp
xor
sub
xlat
xor
cltd
xlat
cmc
jl
ret
daa
arpl
xor
out
sbb
cmp
xchg
aad
aaa
xlat
ret
sbb
jge
psubsw
pop
iret
mov
js
push
push
pop
push
lret
mov
dec
loop
and
ds
cmp
pop
enter
fnsave
lahf
xor
jl
pusha
push
je
pop
cli
or
comiss
nop
out
clc
rsqrtps
lret
sbb
mov
dec
inc
mov
notl
divl
cwtl
xlat
lret
mov
sbb
sahf
xchg
inc
insb
and
push
xor
pop
or
js
into
cmp
fldl
jl
inc
jg
inc
sar
add
mov
xchg
addr16
push
popa
adc
inc
jge
mov
pushf
jecxz
ss
lret
ljmp
adc
movl
pop
loope
sub
and
outsb
lock
jae
cs
push
scas
sti
testb
mov
mov
push
push
cld
push
lods
std
sub
sbb
mov
lahf
fisubs
adc
add
loop
push
test
cmpsl
adc
sbb
shll
xor
push
lds
mov
in
mov
movsb
ljmp
or
sub
pop
shll
mov
add
push
lcall
jb
sbb
loopne
dec
mov
cmc
aam
into
mov
cli
cwtl
pop
add
sub
jg
mov
sbb
push
cmp
in
push
imul
mov
rcrb
fsts
cmp
leave
xchg
mov
mov
jae
sti
jne
and
ror
xchg
mov
jmp
mov
stos
jl
sub
xor
sbb
push
stos
push
mov
icebp
out
fsubl
test
ja
jae
xor
cmpsb
stos
push
lods
enter
push
jl
and
mov
ljmp
aad
jecxz
je
push
repnz
add
cli
mov
and
or
pop
cs
orb
shrb
adc
mov
or
hlt
imul
jo
pop
arpl
test
ljmp
jl
iret
arpl
jecxz
pop
and
dec
ret
push
mov
popa
cwtl
dec
cmc
call
lahf
aad
stos
shl
das
rol
fwait
jbe
and
in
aad
loope
pusha
inc
mov
fistpl
rclb
testl
jmp
or
jb
cmc
inc
pop
xlat
adc
xchg
push
or
sbb
inc
lret
jno
insl
inc
dec
or
ret
push
js
mov
enter
test
cmp
mov
add
pop
jno
jno
fdivp
jl
cltd
sbb
cmp
movsb
inc
cld
out
adc
cmpsb
stos
leave
ficoms
pushf
sub
movsb
fists
dec
sub
add
shlb
popf
in
pop
scas
fwait
pop
mov
sahf
ljmp
cmp
test
jmp
in
mov
pop
ret
or
adc
cwtl
jl
mov
xlat
ret
cld
pop
movsl
jmp
fcomi
leave
xor
hlt
popf
adc
jns
lcall
sahf
frstor
xchg
out
idiv
mov
clc
pop
mov
stos
pop
gs
sbb
xor
ret
lods
sbb
xchg
insb
lcall
push
cltd
loope
ljmp
adc
lods
cmc
call
leave
mov
cmp
or
daa
xchg
pop
rolb
out
mov
fcomps
out
scas
push
xchg
pushl
mov
rolb
sub
lea
jmp
inc
popf
mov
cmp
dec
test
xor
push
xchg
pop
inc
lea
ficoml
call
movsw
jno
xor
sbb
add
movsl
shlb
bound
sbb
and
aad
div
cmovbe
xchg
sub
pop
inc
cmc
add
add
stos
and
sbb
xchg
add
pop
dec
mov
add
pop
cwtl
cmp
mov
mov
mov
ja
cltd
cmc
inc
cli
mov
mov
fsubrs
das
int3
jno
xchg
mov
scas
pop
incb
push
pusha
adc
fsubs
test
cmp
or
xor
shll
cld
aaa
iret
add
sub
adc
xor
fwait
or
idivb
mov
mov
stos
movsl
jmp
imul
cmp
data16
fmull
dec
push
pusha
jmp
inc
rcrb
xor
std
mov
and
inc
dec
sahf
mov
inc
fwait
lcall
cmpb
je
sbb
mov
mov
pop
test
jno
inc
aas
mov
inc
rcl
gs
cmp
dec
std
cmc
dec
mov
incb
push
fistps
add
cmp
adc
cmpsb
dec
test
dec
adc
cmp
push
ret
das
jns
loop
rcrb
sbb
xchg
or
xor
mov
xchg
push
fistpl
push
lds
jmp
jnp
xor
into
int3
push
scas
pop
xor
mov
jo
fbstp
into
xchg
push
fldl
mov
mov
gs
mov
sbb
out
xor
mov
cld
xchg
in
daa
sbb
out
inc
pop
shll
cmp
mov
imul
add
mov
pop
jbe
movsb
push
sub
push
inc
pop
addr16
jo
push
add
cltd
out
in
add
and
xchg
adcb
into
ds
repz
cmp
pop
inc
enter
cmpb
and
mov
inc
xchg
or
push
xchg
adc
sub
inc
and
dec
xchg
inc
mov
sub
jns
xchg
sub
sub
xor
pop
sbb
out
cltd
ss
adc
push
mov
jge
push
aas
int3
dec
jmp
movsl
dec
cmpsl
adc
lahf
sbb
mov
add
in
xchg
xchg
inc
mov
shlb
push
push
push
xor
lret
pop
mov
insl
sub
cmp
mov
mov
push
pshufw
fisubrs
jp
sbb
jnp
enter
daa
outsb
xchg
repnz
add
mov
insb
outsl
and
ret
scas
adc
in
out
ret
pop
xchg
mov
rolb
movsb
cltd
shll
std
daa
sub
xchg
jae
and
push
jo
xchg
in
shll
sbb
jle
enter
dec
dec
push
loopne
dec
mov
and
roll
push
jecxz
test
test
out
ret
orl
mov
xchg
cs
jno
outsl
sub
mov
hlt
imul
cmp
cmp
out
push
fcomip
notb
aam
pop
je
pop
wbinvd
xchg
jmp
jl
cmp
lds
ffree
sub
arpl
mov
or
mov
jg
rcrb
inc
fs
sbb
dec
xchg
push
push
test
lds
inc
out
pushf
add
adc
shl
rorl
cwtl
fldcw
adc
pop
xchg
out
push
sub
out
cmp
or
int
adc
cwtl
dec
xor
cli
sub
fisubl
pop
flds
inc
mov
pop
push
aas
lahf
adc
stos
out
pop
ds
dec
pushf
mov
fldl
jecxz
cli
out
and
sub
push
sbbb
loop
dec
sub
inc
ljmp
sub
mov
jno
adc
icebp
lret
loope
incl
cmp
sub
mov
dec
insb
mov
stos
lods
pushf
xor
into
xchg
scas
xchg
sahf
jo
sbb
adc
jae
pop
and
into
insb
adc
clc
test
insl
loop
int
and
adc
sbb
and
add
loop
lock
jp
test
call
jp
ljmp
pop
sbb
in
mov
in
xchg
test
std
inc
cltd
and
les
inc
push
add
jne
movsb
out
pop
dec
in
adc
loop
xorl
add
mov
bound
idivb
or
in
jne
aaa
mov
or
and
mov
pop
cmovge
bnd
cltd
jne
ljmp
pop
jg
fistps
adc
ds
cmp
mov
push
jmp
sub
imul
or
imul
sub
and
dec
pusha
test
fdivrp
jmp
push
out
xchg
mov
sbbl
out
ljmp
rorl
mov
cmc
cmp
jecxz
mov
xchg
xor
imul
xchg
dec
inc
xchg
insb
inc
shll
lods
imul
push
out
loope
stos
and
sub
mov
test
lock
pop
fcmove
dec
gs
fimuls
mov
cmpsl
mov
mov
fsubl
jmp
sbb
sub
pop
adc
jecxz
mov
lock
mov
clc
scas
pop
dec
xlat
cmp
cltd
sahf
jecxz
dec
cwtl
xor
mov
mov
fwait
clc
inc
frstor
shlb
xchg
xor
or
cmpsl
ljmp
ret
ret
cmp
and
and
stc
mov
cmpsl
mov
add
xor
sbb
jmp
fisubl
or
pop
sbb
and
mov
lds
mov
xor
cmp
mov
inc
data16
pushf
and
movsl
jns
ret
mov
xor
lcall
pop
sbb
sub
push
cmpsb
js
stos
inc
outsl
subb
sarb
enter
inc
dec
push
pop
rolb
mov
push
mov
sbb
xchg
add
dec
pusha
imul
in
xchg
bound
pop
mov
arpl
rcrb
cld
fldt
cwtl
idivb
loopne
xchg
shlb
xchg
xchg
cmpsb
cmp
rcll
in
fiaddl
pop
lock
les
sti
lods
jne
in
or
inc
push
jmp
jns
cmp
mul
pop
sbb
jae
mov
ss
sub
std
sbbl
scas
pop
out
pop
pop
cmpsl
pop
ret
outsb
shlb
addl
neg
mov
data16
adc
mov
sbb
or
cltd
jle
fistps
add
xor
flds
ret
popf
mov
icebp
rcrl
jns
push
ret
mov
mov
dec
pop
shl
loop
push
repnz
inc
sti
mov
cmovl
pop
mov
lock
adc
cmpsb
sbb
mov
adc
jecxz
or
addr16
xchg
mov
xchg
in
jmp
into
imul
loopne
add
add
iret
lods
mov
pop
pushf
push
loopne
sti
jns
jp
adcl
icebp
jae
jno
inc
lret
imul
stos
sub
loop
and
insl
mov
xor
shrl
out
sarb
xchg
cmp
push
xchg
inc
mov
and
nop
xor
cltd
xchg
lret
fdivrl
movsb
pop
push
or
lock
scas
arpl
xlat
scas
fimuls
loope
inc
ficomps
in
dec
fnsave
push
xchg
mov
decl
and
push
scas
push
adc
add
rolb
call
push
xchg
cmpsl
xor
adc
push
mov
cmp
jmp
lds
dec
lcall
dec
pop
loope
pop
inc
mov
ret
adc
ljmp
dec
mov
xchg
fs
adc
inc
fxtract
ds
ret
stos
scas
lods
mov
cmpsb
fstpl
cmp
xchg
jns
idiv
fisubl
popf
addb
jle
mov
push
cmp
mov
ja
movsl
mov
lock
rcl
inc
fisttpll
sti
mov
mov
lret
enter
and
bound
inc
push
pushf
sub
bound
pop
lahf
jnp
aam
out
in
inc
mov
pop
movsl
or
xorl
adc
imul
and
pop
shll
push
jbe
cmpsl
sbb
xchg
mov
les
insb
pop
aas
mov
mov
ja
mov
pop
sbb
sbb
decl
nopl
scas
sub
pop
inc
mov
lods
xor
xor
dec
or
cli
out
mov
stos
test
jge
xlat
sbb
scas
mov
xor
jae
fsubs
addb
popf
pop
sub
movb
sub
push
icebp
mov
mov
imul
lcall
std
test
flds
into
sahf
dec
mov
push
enter
and
dec
dec
das
or
cmp
sti
dec
or
dec
pop
cmp
sbb
in
push
aam
dec
out
and
and
mov
sti
shrb
add
adc
lcall
jns
mov
xor
pop
push
xor
ror
fcomip
in
mov
cmp
mov
test
mov
xchg
in
loope
movsb
out
popf
pop
decl
push
pop
xchg
mov
hlt
or
dec
mov
jmp
jmp
add
push
xchg
xchg
inc
pop
idivl
mov
mov
cmp
call
pop
ss
inc
push
jno
jle
lods
test
fwait
ljmp
leave
jnp
mov
and
or
je
add
push
clc
push
mov
sbb
adc
dec
adc
push
pop
sti
hlt
out
adc
sti
pop
shrl
hlt
sbb
scas
ret
xchg
add
sbbl
gs
pushf
imul
or
xor
mov
ret
pop
ret
dec
lock
notb
mov
icebp
push
inc
clc
test
repz
lock
test
inc
sbb
mov
rolb
shll
jns
pop
mov
jg
pusha
mov
push
push
push
cmova
fsts
mov
popf
xchg
fildl
sbb
mov
scas
jns
fisubrl
xor
out
mov
lea
fidivl
xchg
stos
or
mov
or
fs
adc
aaa
movsb
pushf
xchg
test
pop
jae
fldcw
mov
repz
mov
push
add
mov
xchg
add
test
mov
jg
push
sub
pop
xchg
and
adc
dec
or
mov
xor
xchg
sub
mov
idivl
adc
adc
adc
mov
cmp
popf
jns
cmpsl
and
jg
mul
mov
adc
xchg
cmp
mov
dec
popa
pop
lock
imul
sub
test
fs
sub
push
xchg
ret
adc
sbb
sahf
jno
cmc
adc
loopne
inc
pop
jmp
fistl
inc
aad
loope
pop
xchg
inc
cld
inc
xor
inc
jns
cmpsb
imul
jg
mov
data16
jmp
sbbl
roll
adc
pop
das
test
jmp
decl
ret
pop
fdivl
push
js
nop
inc
enter
xchg
jne
and
push
fsubrp
pop
sub
add
call
movsl
jmp
mov
lcall
ret
lret
ror
inc
fwait
xorb
or
enter
js
pop
inc
mov
dec
pop
scas
and
lds
subb
clc
in
mov
and
xchg
aad
decl
jecxz
pushf
pop
xlat
cmp
lret
mov
inc
pop
mov
add
mov
inc
and
movl
ret
orb
jno
repz
stc
adc
mov
adc
outsb
rcll
jo
push
pop
js
push
fdivs
jae,pt
out
shll
fcmovne
out
mov
mov
push
sti
xchg
mov
sub
push
lds
cmpsl
jecxz
movsb
jo
mov
pop
jp
ljmp
push
adc
test
jmp
xchg
cmc
lahf
daa
push
into
lock
lock
adc
aad
and
pop
jb
in
mov
inc
insb
jno
data16
cmp
fadd
test
std
xchg
rcrb
push
repnz
push
or
push
imul
sbb
sub
clc
jmp
sar
cmp
mov
divb
pop
out
arpl
iret
or
sub
dec
or
lret
js
dec
xchg
jo
add
sub
movsl
or
adc
xor
lahf
sahf
popf
cmp
adc
out
dec
fsubs
ljmp
dec
inc
lahf
insb
sbb
lock
xor
aaa
in
test
adc
shl
idivb
sbb
xchg
fldl
dec
pand
sahf
xor
mov
cwtl
inc
arpl
sbb
sbb
inc
sub
in
in
jbe
inc
dec
mov
insb
ja
gs
mov
cmp
cmc
jo
lahf
es
sahf
lock
sbb
ljmp
xor
mov
pop
fistps
jb
cs
mov
ds
cli
pop
sbb
es
inc
mov
or
add
xchg
insl
adc
test
nop
call
adc
nop
arpl
repnz
ja
mov
pop
xor
cwtl
cmc
xchg
negl
vunpckhps
fs
je
pop
xchg
fs
jmp
jo
cmp
sub
or
data16
je
xchg
sbb
cmp
jg
or
outsb
pop
mov
cmp
sub
into
mov
jo
xchg
fmull
outsb
fcomi
andb
lahf
xchg
inc
adc
test
mov
jne
pop
add
inc
mov
test
out
lea
rcrb
mov
inc
adc
adc
and
sbb
sbb
mov
mov
xor
adc
mov
enter
and
pop
mov
jno
ja
repnz
movsb
sti
inc
cmp
inc
out
sub
mov
loop
or
push
xchg
jecxz
int
add
das
sub
mov
jmp
inc
cmp
mov
cmpsb
add
cwtl
xor
rcll
arpl
mov
mov
xor
fisubs
cmc
xchg
subb
mov
cmpsl
pushf
add
mov
lods
and
lods
mov
arpl
int3
push
loopne
dec
push
inc
jecxz
add
jmp
cmpsl
out
jns
into
dec
sub
stc
pop
stc
pop
pop
jae
jge
pop
in
insb
in
clc
dec
mov
ja
movl
inc
and
sbb
out
add
cmp
pushf
mov
or
setg
or
inc
mov
notl
dec
mov
fsubrl
dec
lcall
pop
mov
stc
and
mov
std
jmp
lcall
jne
and
iret
cmc
hlt
mov
hlt
xlat
inc
adc
jg
cmc
cmpsb
mov
enter
in
sub
and
mov
or
fwait
in
shll
aam
add
xchg
in
mov
lds
and
mov
das
sbb
xor
mov
mov
push
test
arpl
cmpsl
jl
sbb
adc
in
sub
push
mov
inc
fmulp
push
leave
inc
jns
mov
fdivrs
aam
aam
test
add
jl
mov
dec
hlt
push
ja
in
mov
add
pusha
adc
incb
loopne
cmp
jbe
inc
rclb
xor
mov
cmp
insl
mov
pushf
mov
mov
jle
ljmp
int
mov
mov
lods
pop
cmp
inc
test
fisttpll
loope
sub
imul
mov
imul
pop
movhps
jecxz
dec
xchg
rorl
dec
mov
fimull
imul
adc
xchg
add
lock
add
adc
push
outsl
mov
pop
fwait
add
add
aaa
pop
aaa
add
loop
and
cmp
je
xchg
and
data16
jl
pusha
ret
mov
imul
xor
mov
iret
call
ds
rcrb
out
sarb
and
mov
cmp
arpl
jmp
cmp
aaa
pop
rorb
mov
test
mov
nop
leave
aam
je
xchg
int
test
sub
xchg
cmp
xor
frstor
mov
xchg
fisttpl
lcall
pushl
gs
push
mov
pop
push
int3
in
scas
cmp
aam
push
dec
sub
and
pusha
sbb
into
xchg
lds
test
or
mov
cmp
xchg
lret
cltd
shl
push
dec
outsb
xchg
sub
aas
xchg
pop
push
mov
cmp
inc
shll
jecxz
shlb
adc
pop
bound
jnp
stos
push
mov
mov
int3
jb
lods
cmp
in
mov
push
jo
jb
cmc
sub
sub
fwait
lods
pusha
fcomps
inc
xchg
dec
push
inc
out
adc
ds
adc
cmpsb
mov
out
sti
add
insb
mov
clc
js
cmc
mov
in
test
mov
ljmp
jecxz
inc
fs
cltd
mov
inc
add
sarl
movsb
push
mov
inc
test
lcall
lea
test
inc
fisttps
push
repnz
insb
push
fisttpl
fadds
push
sbb
rclb
pop
cltd
testb
xchg
mov
or
add
push
repnz
sub
lcall
pop
mov
or
mov
cmp
jno
jmp
and
inc
stos
cmp
js
push
mov
sahf
or
icebp
stos
push
push
pop
stos
sbb
add
insl
and
sbb
adc
xor
leave
imul
or
fistps
roll
das
ljmp
icebp
xchg
js
jecxz
xchg
pushf
sbb
cmpsl
pop
pop
decl
jle
lea
shl
out
mov
mov
pop
inc
and
sahf
repnz
inc
les
clc
stc
and
push
dec
cltd
sbb
sbb
jb
cs
iret
outsb
pop
lahf
or
lock
popf
fcoms
mov
jnp
dec
sub
fwait
xor
sub
mov
icebp
xor
adc
mov
lods
adc
sub
mov
vsqrtsd
push
dec
sbb
mov
loopne
shrb
outsl
cmp
dec
out
cmp
xchg
pop
clc
in
cmpsb
stos
xchg
je
in
fs
or
mov
cmp
loop
sbb
push
cmp
popf
mov
mov
out
push
sub
push
sub
adc
ds
sbb
jg
fmul
cmp
pop
and
fwait
push
cmpsl
xor
mov
mulb
adc
std
sar
es
mov
and
stos
inc
inc
scas
aas
cld
sub
mov
adc
add
iret
ss
dec
xchg
pop
fs
adc
ds
xchg
fs
xlat
cmpsb
ss
jmp
inc
iret
push
lahf
push
push
xchg
xlat
jb,pt
aas
add
mov
or
call
adc
xor
or
dec
pop
movsl
mov
and
push
mov
cmp
xor
aas
add
mov
pusha
iret
cmp
and
repnz
test
out
repnz
lods
jo
push
inc
cmp
and
adc
pop
fsubl
mov
fnstsw
cmpsl
std
mov
push
lods
sbb
xor
and
mov
fimuls
push
jecxz
add
cltd
push
push
pop
in
push
jle
pop
les
pmaxsw
leave
mov
fmulp
inc
fidivs
mov
ss
inc
xor
btc
test
fs
pop
xchg
lods
jbe
call
mov
xchg
fs
push
outsl
jmp
movsb
in
in
xchg
push
sub
subl
inc
or
cld
lahf
ja
pop
add
pop
xchg
pop
aam
xlat
gs
jnp
fucomip
std
leave
inc
add
cmpsl
sbb
pop
loop
loopne
mov
jmp
mov
xchg
pop
vpmaxsw
add
or
pop
inc
into
mov
jle
cli
or
mov
fsubs
mov
xor
and
jecxz
mov
lcall
mov
das
out
pop
imul
xchg
ss
and
adc
and
and
adc
lahf
scas
fwait
test
bound
or
cwtl
in
sbb
xchg
sub
xlat
jp
cmp
xlat
clc
inc
push
test
sarb
imul
xchg
shll
or
or
push
or
mov
pop
xor
xchg
xlat
in
and
add
iret
cmp
leave
sub
stos
dec
jge
in
xor
addr16
pop
xor
popa
ljmp
out
adc
sub
push
gs
in
push
xchg
aas
cld
mov
mov
push
adc
xor
int3
in
mov
lock
pop
and
inc
cmc
jbe
in
roll
cmp
js
dec
fisttpll
xchg
jle
cwtl
insb
adc
xchg
outsl
stos
ds
insb
sub
js
shll
pop
dec
nop
fldl
inc
and
jns
jnp
imul
fstp
add
rcll
pop
icebp
xor
push
nop
pop
in
paddb
jecxz
fists
test
lods
sahf
and
mov
push
push
xor
incl
and
jns
inc
inc
inc
lahf
push
fwait
cmc
stos
inc
mov
push
cmp
mov
xor
pop
sbb
imul
jae
and
push
inc
mov
inc
int
add
cmp
cmp
inc
xor
das
cmpsb
lods
pop
dec
and
sub
cmp
or
and
cld
aas
std
mov
movsb
lret
test
cwtl
es
orb
sub
xchg
lahf
jg
mov
push
push
pusha
xchg
sbb
xchg
stos
adc
lods
sub
in
mov
cmp
dec
xchg
pop
lahf
test
cli
mov
cltd
inc
lret
jbe
scas
xor
lods
sbb
roll
jp
mov
push
sbb
add
fistpll
data16
das
or
xor
dec
movsb
sub
mov
repnz
dec
in
push
out
dec
lcall
sbb
push
mov
pushf
jo
jo
loopne
mov
cmc
mov
add
sub
sub
inc
or
cld
jne
fucom
lock
dec
mov
movsb
pop
popa
test
add
or
test
xor
sbb
mov
daa
mov
movsl
push
cmc
subl
stc
cld
xor
mov
pop
dec
or
in
and
inc
pusha
cmpb
sbb
icebp
jbe
pop
push
pusha
sub
lcall
lods
std
xor
xor
shlb
rolb
add
xor
pop
test
fisttpll
or
mov
mov
fidivs
and
inc
les
xchg
outsb
aas
dec
pop
xchg
sbb
push
loopne
loop
cmpsl
aam
xor
stc
fldt
faddl
mov
cmpsb
aad
testl
cmpl
cld
sarb
xlat
jae
pop
jb
and
mov
xlat
ret
mov
cmp
test
ret
jmp
sbb
inc
xchg
aam
or
push
dec
push
ss
pop
cmp
xor
mov
cmc
fimull
leave
jo
pop
out
push
dec
push
sub
mov
and
mov
or
or
push
mov
xor
add
inc
enter
loope
dec
jle
lea
lods
mov
lea
rcrb
mov
xchg
or
and
sbb
sbb
in
push
aas
frstor
pop
mov
push
mov
push
in
cmc
sbb
adc
icebp
xchg
aas
xor
inc
cmp
push
scas
sbb
cmp
push
sub
out
mov
sub
or
in
xor
jns
pop
inc
sarb
add
inc
fistpll
mov
add
mov
sbb
test
movsl
pusha
ds
mov
xor
mov
jnp
sub
and
or
bnd
cmp
mov
ljmp
pop
jb
leave
js
and
nop
add
add
icebp
mov
jmp
pop
add
add
xor
add
push
dec
inc
lahf
pop
xchg
mov
xor
pop
or
cmp
mov
sbb
push
add
push
xor
pop
cltd
and
sub
sbb
inc
mov
pop
addr16
xchg
out
dec
movsb
ja
mov
sub
call
fstpl
push
dec
push
insb
fstps
sub
icebp
or
push
aam
push
and
xacquire
push
mov
dec
popf
shll
scas
sub
int3
cmp
testl
std
mov
lds
es
inc
push
inc
jno
clc
call
gs
dec
adc
in
ljmp
loopne
jno
xor
push
pop
or
cli
fsubrp
std
mov
jecxz
js
fsubrp
cmp
xchg
or
sti
push
inc
in
fs
pop
out
cmpb
loope
gs
cmp
xor
mov
das
xor
cmpsb
xor
push
ret
xchg
cli
xor
lcall
jae
lret
test
push
insb
cmp
pop
inc
and
xor
xlat
iret
lods
ljmp
sahf
stos
es
xor
test
sbb
loope
push
push
pop
jmp
test
fmuls
insl
test
pusha
imul
push
lods
fsubrs
pop
cmpsl
jg
jmp
pop
test
pop
push
dec
aam
mov
js
push
jp
add
xor
and
out
insl
in
push
mov
fwait
dec
mov
add
lds
gs
pusha
jne
cli
out
mov
call
jno
fisubl
pop
ret
add
lcall
out
sub
or
jle
mov
icebp
push
add
or
xchg
xor
push
lds
inc
incl
fidivrl
js
loope,pn
add
icebp
xor
push
lret
or
scas
mov
xchg
add
push
popa
sahf
xchg
stos
fisttpl
adc
cld
cli
data16
ja
mov
std
cmpsl
jl
jbe
and
adc
cmp
test
repz
dec
inc
into
adc
into
mov
mov
or
mov
pushf
pop
sbb
jns
xchg
xchg
adc
sbbl
mov
loop
xor
shr
inc
pop
cmp
std
inc
fimuls
jne
add
mov
pop
adc
push
push
jle
mov
jne
cmp
scas
add
pop
lock
lcall
ss
in
mov
sbb
ficoml
ret
and
enter
loopne
push
jne
sbb
ja
mov
and
dec
hlt
lock
dec
jecxz
ja
pusha
mov
sti
arpl
in
sbb
add
icebp
cmpb
js
shl
aaa
jne
mov
dec
cmp
inc
cmc
jge
sbbl
in
outsl
jmp
lahf
ljmp
jp
ss
dec
popa
cmp
mov
jl
repnz
mov
movsl
scas
pop
enter
xchg
mov
sub
dec
cmp
test
clc
rolb
popa
or
or
inc
fidivl
js
aad
cmpsb
adc
or
outsb
rorl
mov
cwtl
in
clc
fcomip
fimull
adc
fsubr
mov
outsl
or
and
sbb
ret
cmp
cltd
pop
cmpsl
pop
push
pop
ds
add
gs
dec
movsl
shll
cli
and
inc
popl
loopne
inc
hlt
in
ror
pop
or
or
lret
clc
rclb
mov
cli
sbb
add
pop
lret
mov
dec
mov
sbb
or
cli
cli
and
es
xchg
lock
mov
fs
push
dec
imul
or
mov
arpl
pop
jo
inc
loope
xor
insl
pushf
or
add
cltd
stc
push
cmpsb
pop
dec
repnz
aaa
ss
mov
sbb
negb
push
xchg
add
lods
xchg
dec
popf
sahf
xchg
cmp
dec
mov
movb
inc
lds
into
jl
es
push
push
inc
xchg
sahf
dec
idiv
or
add
int3
dec
scas
cmp
adc
xor
dec
push
in
mov
test
aas
out
clc
mov
mov
mov
add
inc
cmp
adc
repnz
mov
add
mov
pop
les
add
aad
call
push
mov
or
pop
pop
jnp
push
pusha
cmp
xchg
test
js
cltd
inc
insb
stc
pop
sub
mov
or
out
int
jb
imull
int3
stos
mov
aad
js
lods
sub
pop
xor
popa
cmc
dec
iret
pop
leave
add
ret
in
and
fcomps
mov
jno
cmp
nop
push
shrb
popf
dec
push
pop
cmc
fistpl
cmp
shl
je
xor
imul
out
aaa
push
aad
cmp
inc
sbb
push
test
or
add
cmp
cmp
push
cmpsl
outsb
inc
testl
cmp
fisubl
test
inc
xchg
cltd
xor
or
repz
repz
cmpsl
jbe
pop
cmc
pushf
fsubrp
or
xor
xor
push
ljmp
sbb
cmc
movsl
mov
pop
ljmp
xor
shll
mov
jne
pop
xchg
pop
pop
scas
adc
out
dec
cld
cltd
cltd
xor
imul
inc
pop
dec
pop
fisttpl
pushf
dec
pop
pop
or
mov
fs
sub
andl
rclb
mov
mov
mov
inc
shll
sub
add
in
shrl
jo
and
je
in
xchg
fsts
pop
xchg
jns
sub
test
in
push
sbb
sbb
lds
push
jge
ljmp
icebp
sqrtps
inc
or
xor
sbb
jb
ror
push
push
enter
lret
adc
lcall
xor
inc
jg
xor
rorl
int
shr
jg
notl
sbb
push
cmp
push
mov
pop
sub
dec
sub
shll
sub
outsl
dec
mov
insb
fiadds
push
add
aas
pop
loopne
cmp
popa
adc
shll
test
jmp
pop
xchg
xor
push
and
inc
mov
sbb
out
xor
daa
in
movsb
sbb
jbe
cmpsl
mov
sub
jp
cwtl
fstpt
arpl
std
mov
int3
test
xchg
rcrb
pushf
jb
cld
mov
mov
fistps
lods
mov
iret
xchg
cmc
sbb
lds
test
shr
scas
adc
lret
lods
push
sahf
out
dec
push
dec
ljmp
into
and
sub
es
jle
call
hlt
cltd
cmp
and
sbb
and
push
fisubrs
fcoml
fwait
test
out
fstpl
jne
ds
popa
pushf
cmp
add
clc
test
cmp
ss
jne
in
dec
fiadds
xchg
into
test
xorl
mov
jne
mov
dec
test
cwtl
jp
nop
cltd
inc
pop
cwtl
jae
xchg
sub
inc
xchg
je
loop
mov
lahf
popf
outsb
aad
dec
inc
out
jle
sbb
int
lods
mov
lock
fs
daa
push
and
in
fcomps
xchg
add
mov
sbb
jl
mov
pop
xchg
or
and
mov
cmp
and
add
pop
hlt
inc
lret
ret
adc
lods
xchg
jae
add
lcall
dec
mov
je
gs
and
mov
icebp
add
push
mov
shrb
cltd
les
leave
mov
mov
xchg
push
or
mov
lock
pop
filds
sbb
jae
jns
leave
nop
push
cmp
sbb
shlb
dec
notb
mov
dec
rol
xchg
rcl
insb
add
add
inc
mov
push
push
call
push
add
add
jne
rcrl
ret
xchg
and
iret
and
xor
dec
push
pop
rorb
push
sub
pop
inc
jle
int
adc
nop
jecxz
add
fdivrl
pop
sub
sub
inc
add
inc
ja
pop
out
adc
lock
sti
cmp
movsl
jle
lds
or
daa
mov
pop
int3
sub
sub
add
pop
movsb
cli
mov
mov
ficomps
orb
sub
subb
std
mov
xchg
xchg
mov
dec
mov
jge
sti
loopne
jecxz
dec
in
pop
or
mov
outsl
lret
adc
push
push
mov
cli
push
or
cltd
push
inc
push
loop
les
push
fdivl
je
rcr
hlt
imul
movsl
jl
jecxz
jmp
mov
cli
inc
sbb
out
inc
arpl
mov
aas
inc
sub
insb
lahf
dec
sub
ret
inc
shll
inc
adc
sbb
fcomp
or
pop
repnz
aam
je
scas
stc
test
out
enter
in
lret
push
sahf
mov
addl
es
imul
sub
push
inc
mov
std
inc
push
cmp
pusha
cmpsl
insb
push
add
fadds
jbe
mov
pop
xchg
pop
fsts
lock
mov
add
sahf
in
mov
adc
stos
pop
dec
aam
int
scas
push
push
ds
out
aam
int3
and
lret
inc
xor
jns
pop
int3
cmp
jecxz
or
xchg
cmp
mov
mov
faddl
nop
lods
sahf
push
pop
out
xchg
popa
sub
sarl
sahf
out
pop
push
xor
out
repnz
out
popf
mov
mov
out
subl
add
pop
mov
pop
call
push
adc
les
cmpsb
ds
inc
or
cmpl
nop
ffreep
test
fnstenv
push
jp
sarb
out
mov
sti
gs
jecxz
and
pusha
mov
sti
jp
adc
inc
push
inc
mov
test
or
cmpb
out
inc
iret
cmp
sub
movsb
mov
mov
fists
xorl
fcmovnbe
xchg
pop
push
xor
mov
mov
add
movl
outsl
enter
sbb
das
xor
sbb
stos
imul
add
xor
jae
div
xchg
sub
pop
jl
pop
das
and
lret
xlat
mov
sbb
dec
mov
in
jne
ja
jg
push
orl
pop
adc
in
inc
int3
inc
mov
cmp
sbb
sub
shl
nop
outsb
pop
add
leave
jnp
std
clc
push
cmp
ret
dec
repnz
add
fdivl
jae
es
cmp
imul
add
gs
stos
fs
xchg
ja
test
mov
sahf
subb
jne
aaa
push
push
pop
int3
sbb
mov
dec
sbb
add
or
leave
xchg
pop
add
mov
mov
rcrb
add
dec
push
jne
arpl
imul
in
pop
mov
mov
jle
stc
jbe
leave
shrb
out
flds
cwtl
xor
jg
push
jl
pop
arpl
sbb
mov
idivb
sbb
sub
jns
and
push
adc
mov
lock
push
xchg
test
jl
popf
lret
leave
les
js
stc
jge
sbb
xor
push
popf
add
inc
test
pop
je
sbb
lret
pop
mov
fdivrs
jle
dec
mov
insl
stos
xchg
aam
fcomps
sti
adc
es
fsubl
test
sbb
adc
and
jmp
lahf
add
mov
cmp
std
cltd
fsubrl
xchg
jmp
or
std
cs
adc
mov
loopne
push
xchg
loop
rcr
inc
movsb
cmp
adcl
pop
test
sbb
iret
pop
or
not
int
inc
fwait
mov
sahf
push
add
or
add
add
fs
sub
or
fcomp
mov
or
dec
sub
out
add
add
mov
popf
imul
xor
arpl
pop
lcall
mov
push
insl
ret
dec
lret
xchg
cmc
push
nop
xchg
push
daa
mov
scas
cld
loope
lea
add
in
xor
les
leave
cmp
std
jnp
jl
mov
fsubl
je
imul
mov
push
mov
in
mov
mov
lret
mov
int3
adc
cltd
daa
jns
sub
xlat
sarl
shrb
pop
push
cs
mov
insb
out
ret
mov
mov
jl
inc
js
ja
nop
mov
call
sub
push
inc
xor
or
and
int3
repnz
imul
test
adc
testb
xchg
fidivs
xor
scas
test
mov
call
shrb
pop
int3
test
mov
mov
mov
push
repz
mov
aas
stos
jge
mov
sub
sub
mov
rcrb
arpl
cmpsl
mov
dec
orb
and
outsl
fisubl
imul
test
imul
xchg
int3
sub
popa
js
dec
pop
push
popa
shll
insl
and
sub
dec
fnstcw
mov
cltd
sahf
pop
test
lock
sbb
xchg
loope
sbb
aad
lods
stos
or
or
pop
repz
mov
and
mov
rolb
in
mov
dec
pop
cmp
push
pop
pop
sbb
insl
jne
insb
enter
mov
fidivl
add
cld
pop
inc
cli
and
sahf
pop
cmp
adc
and
hlt
push
cmc
or
mov
repz
mov
cmp
cmpsl
push
hlt
roll
inc
jecxz
ficoms
bound
add
jp
push
mov
and
push
cltd
lods
lahf
bound
add
hlt
nop
mov
pop
movsl
lret
outsb
imul
insl
fisubl
mov
fadd
mov
call
dec
sub
ret
cmp
lret
push
mov
jo
in
xor
lahf
cli
imul
xchg
and
jle
jae
leave
popf
push
adc
std
inc
aam
mov
inc
rolb
or
fidivl
nop
in
outsl
cmp
aad
pop
fwait
aam
icebp
adc
and
fwait
test
mov
insl
popa
data16
sti
enter
jmp
xorb
addl
pop
mov
xor
lcall
mov
jae
das
imul
mov
lcall
sub
es
clc
iret
incb
inc
sbb
lret
rorb
or
adc
nop
dec
icebp
add
xor
data16
push
cmpsl
ds
imul
insl
dec
cmp
sqrtps
test
aaa
test
xor
loopne
mov
popa
xor
fistl
lahf
or
add
push
and
add
loope
stc
and
sub
enter
adc
push
call
push
loopne
mov
xchg
out
cmp
fdivp
lea
mov
push
js
dec
push
rcrb
pop
enter
mov
imul
rep
fmuls
into
ja
push
lret
nop
fcomip
mov
or
dec
mov
sub
outsl
xchg
jb
jae
mov
cli
pop
inc
xchg
cmp
addr16
aas
pushf
fstpl
and
mov
sbb
jns
mov
lods
jle
test
cwtl
pusha
xchg
mov
xchg
test
jbe
jg
or
pop
adc
mov
xlat
rol
das
jle
ror
repnz
push
xor
add
xchg
jne
fs
mov
mov
repz
add
pop
enter
mov
movsl
fwait
push
shll
or
or
ret
adc
jecxz
or
cwtl
cwtl
sbb
xchg
arpl
stc
lods
nop
movsb
dec
cmp
pop
scas
into
push
leave
into
jae
jns,pn
popf
jmp
pushf
mov
sti
sahf
push
and
adc
mov
fimull
bound
xchg
mov
xlat
sti
add
repnz
sbb
pop
js
push
xor
mov
ss
das
negb
into
or
jg
sbb
mov
push
jb
jo
bnd
daa
cltd
notl
fidivs
loop
ljmp
add
xor
sub
jno
mov
stos
pusha
push
out
jl
cltd
sub
call
mov
or
test
sbb
es
lret
push
andnps
mov
out
dec
aam
and
addr16
es
xor
negl
pop
xor
test
inc
dec
test
in
sbb
scas
add
pop
sub
or
mov
imulb
in
in
fs
lock
pop
shll
push
insl
adc
pusha
add
jb
lods
enter
loopne
gs
push
mov
sub
xchg
dec
xchg
inc
adc
pop
aam
cwtl
rcr
jmp
jl
xchg
test
imul
mov
mov
adc
mov
aam
stc
xchg
sti
jnp
cmp
inc
xchg
push
pop
shll
jg
cmp
notl
test
in
add
adc
add
icebp
mov
push
les
dec
mov
daa
scas
faddl
lea
ss
dec
orl
icebp
inc
scas
push
icebp
fld1
push
push
fstl
popa
sbb
sbb
xchg
sub
xchg
test
dec
imul
fmulp
std
or
outsl
mov
icebp
sub
jmp
dec
sub
rcrl
cmp
mov
pop
xor
push
dec
idivb
nop
cmp
inc
shll
nop
xor
sahf
mov
inc
sti
pop
push
sbb
not
jae
push
call
or
adc
push
adc
repz
test
or
jns
ret
fnsetpm(287
hlt
sbb
pop
push
sbb
xchg
popf
test
aam
inc
adc
xor
fs
rcrb
inc
out
jo
sbb
loopne
jmp
mov
sti
loopne
std
push
jp
std
fstps
lret
adcl
jecxz
push
xor
js
pop
dec
scas
sub
mov
cli
mov
lahf
jb
mov
mov
lahf
dec
inc
test
lock
jg
test
mov
pop
mov
or
mov
mov
cmp
fcoml
push
and
xor
imul
icebp
and
mov
fwait
imul
push
push
stos
mov
loope
adc
cld
incb
add
add
cmpsb
inc
loopne
mov
loopne
mov
and
inc
arpl
mov
roll
je
mov
add
push
xor
adc
sub
les
or
or
pop
add
ret
mov
std
xchg
addb
pop
mov
dec
and
cltd
lods
add
pop
push
inc
imul
mov
mov
jecxz
int3
test
mov
jp
mov
dec
fcmove
jmp
int
into
test
pushf
adc
das
aaa
jge
xor
or
adc
xor
xor
push
clc
pop
data16
dec
clc
jecxz
sbb
mov
pop
clc
fisubrs
lahf
pushf
push
std
push
adc
mov
mov
and
cmpsb
cli
dec
out
insl
jmp
out
pop
cmpsl
mulb
ds
ljmp
add
cmp
leave
and
das
imul
xchg
dec
out
fildll
push
and
gs
push
xchg
xchg
sub
insb
and
dec
stos
data16
stos
add
push
arpl
lea
in
enter
sti
and
scas
aam
inc
cmc
inc
push
dec
dec
das
cmp
outsb
shll
or
push
push
gs
dec
and
push
add
mov
fistl
cmp
fsubrl
jp
insl
jmp
inc
and
call
cli
xlat
insl
xlat
add
subl
xchg
sbb
cmp
sub
inc
add
pop
mov
loop
dec
decb
rolb
loop
icebp
ja
mov
jno
push
es
xorb
int3
stc
mov
int
adc
repz
pop
xor
mov
imul
addb
sbb
cmp
repnz
subl
cmp
test
test
pop
incl
push
imul
flds
sbb
ja
sbb
fistpl
in
mov
sbb
sub
addr16
xor
mov
cmpsb
les
in
loopne
sub
xor
jnp
or
ljmp
inc
pop
inc
inc
adc
mov
ffree
push
addr16
adc
inc
sub
sub
and
insl
notb
add
or
lods
xchg
shlb
ja
mov
adc
mov
dec
out
test
add
lcall
outsb
push
mov
pop
icebp
push
adc
inc
cmpsb
xchg
lret
fildll
jl
xchg
outsl
push
test
pusha
movsl
in
adc
outsl
sub
inc
aas
mov
push
sbb
test
and
mov
xchg
out
mov
add
sub
outsb
jae
in
and
cmp
roll
lea
das
dec
adc
sbb
sbb
fiadds
inc
pop
push
icebp
ljmp
sub
ret
sbbb
imul
mov
adc
mov
popa
pop
adc
ss
xor
ss
and
pop
test
es
popa
push
gs
mov
hlt
pop
xchg
aas
hlt
mov
shlb
push
cld
in
xor
sub
es
fisttpll
scas
icebp
out
push
jno
inc
loopne
xchg
test
aad
xchg
mov
xchg
aad
das
sub
jb
daa
and
scas
jne
gs
jg
loopne
mov
fwait
stc
mov
sbb
xchg
loope
out
scas
leave
inc
adc
in
sub
das
mov
and
popa
int
jnp
imul
fistps
ret
or
lods
clc
scas
xor
jno
cmp
or
pop
cmpsb
insl
icebp
mov
and
and
xchg
pop
xor
mov
add
xchg
xlat
jo
adc
sahf
lock
jno
cmp
stos
imul
ret
sub
pop
cmp
or
push
add
scas
pushf
imul
xchg
xor
pushf
push
jecxz
mov
in
push
stos
mov
imul
outsl
cmp
es
or
jl
adc
pop
mov
add
cwtl
ret
push
popa
ret
pop
jb
mov
jl
and
and
mov
and
xorb
cmp
jb
imul
sub
clc
pushf
das
aad
bound
scas
insb
push
ret
in
xchg
lcall
into
inc
jnp
lret
shrl
fwait
mov
jae
cltd
sarb
push
inc
jg
mov
inc
push
cmp
hlt
and
popa
sub
and
push
mov
int3
push
mov
fwait
mov
clc
push
je
rorl
in
lcall
jmp
and
ss
mov
dec
add
loopne
inc
mov
data16
out
mov
lea
pop
and
mov
mov
mov
pop
mov
mov
shlb
arpl
addb
bound
std
pop
insl
xchg
xchg
jge
mov
fisubs
popf
roll
leave
js
xchg
push
adc
repnz
xor
cmpl
sbb
or
lea
ss
push
add
dec
andb
cmp
sbb
cmp
cmc
adc
mov
adc
push
loope
dec
das
jmp
int
xchg
imul
aad
push
xchg
call
add
add
sti
or
dec
add
sbb
dec
xchg
dec
arpl
sbb
in
leave
dec
stc
les
hlt
pusha
add
and
test
pop
pop
push
mov
inc
mov
in
mulb
sti
push
jge
shlb
add
bound
or
push
pop
das
dec
jb
out
movsl
pushf
outsl
das
sub
int3
aas
pop
dec
xor
jle
mov
lcall
xchg
aas
imul
mov
cmp
adc
lods
sbb
mov
xchg
inc
pop
fstps
inc
mov
xchg
xchg
int
and
cs
mov
sub
sub
cmp
lods
lahf
mul
mov
mov
inc
popf
cmovle
inc
xor
cmp
push
fnstsw
movsb
das
fs
mov
dec
jb
jmp
je
loopne
dec
or
roll
or
loop
sarl
scas
or
push
rclb
mov
add
jbe
xchg
in
and
fistl
iret
mov
push
mov
jno
lret
xchg
inc
pop
lahf
add
mov
imul
lds
sub
pop
aam
dec
xchg
pop
mov
cltd
out
jnp
ss
ja
scas
mov
jmp
mov
xchg
daa
imul
int
jbe
jne
inc
inc
adc
in
cli
inc
fdivs
iret
cmp
das
lds
popf
pop
outsl
pusha
adc
push
mov
or
sub
pop
cmp
push
fldt
jbe
dec
mov
mov
jp
lods
out
sti
sub
inc
xchg
add
scas
xchg
sahf
mov
roll
mov
shll
or
lock
pop
outsl
enter
ret
adc
pop
rorl
negb
sub
sub
or
call
loop
or
xchg
xor
shlb
add
sub
es
xchg
loope
mov
adc
jmp
mov
ja
enter
out
push
or
add
or
int3
cs
fs
int
test
sti
add
adc
xor
cmp
and
dec
popa
cmp
jb
xor
std
sub
xor
popa
pop
adc
xor
outsb
cmp
sti
pushf
aaa
dec
adc
inc
popl
fdivs
daa
dec
into
ret
movsl
mov
fs
movl
loopne
int
ret
movsb
inc
mov
lea
jb
sbbb
call
jnp
sbb
or
dec
jns
in
and
dec
pop
ja
xchg
push
push
icebp
cwtl
aad
mov
pop
aam
or
das
fs
aaa
es
ljmp
addb
stos
push
loop
dec
mov
cmp
mov
pop
push
mov
decb
xchg
decb
les
hlt
clc
dec
pusha
mov
push
mov
add
mov
in
divl
bound
push
add
push
sbb
fdivs
dec
dec
jbe
sbb
add
pop
jae
test
fnsave
jp
xor
movsb
xchg
cmp
dec
sbb
cld
xchg
arpl
repz
jle
loop
jae
shr
mov
iret
jle
popa
and
dec
sub
inc
stos
addr16
xchg
or
ret
inc
movsb
jbe
andl
inc
inc
xor
xor
imul
add
mov
add
addr16
mov
daa
int
pop
adc
cwtl
dec
cld
mov
adc
movsb
cs
addb
sub
iret
movsl
xchg
mov
sub
movsl
mov
fisubs
out
jns,pt
jmp
dec
xlat
push
sbb
sub
mov
imul
cmp
loopne
sub
inc
pop
rcrl
gs
shl
outsl
aaa
mov
test
in
jae
outsb
aaa
adcl
jnp
mov
and
fs
pop
jo
push
jbe
mov
xchg
push
or
xchg
sbb
sub
xchg
xorb
imul
addr16
insb
aam
stos
push
jnp
into
or
fdivrs
adc
xchg
jbe
aaa
adcl
adc
cmpsl
pusha
call
ficoms
add
xchg
pop
ljmp
mov
mov
dec
iret
xchg
lea
mov
jge
lds
pop
mov
dec
or
fcmove
fldl
and
mov
loopne
dec
adc
inc
stc
sub
leave
dec
jmp
ds
sbb
in
popa
lret
or
xchg
xor
int
rolb
daa
stc
jge
push
call
mov
push
mov
ffreep
and
mov
rcr
xchg
xchg
add
out
sahf
jno
and
adc
divb
jae
sub
loop
pushf
addr16
test
push
icebp
fldcw
inc
mov
out
mov
iret
xor
out
cli
arpl
pop
xor
sub
ds
les
iret
stos
clc
hlt
mov
mov
cld
mov
and
inc
cmp
nop
sbb
adc
mov
cwtl
cmpsb
fldt
aad
ds
mov
jp
repnz
dec
or
mov
jo
cli
popf
jle
mov
mov
aas
decl
mov
call
lcall
bound
inc
add
mov
adc
jae
jns
lock
dec
push
out
hlt
loope
mov
push
dec
and
or
out
mov
or
jo
dec
je
jb
cmp
lock
and
nop
pop
bound
or
ja
dec
jo
pushl
out
leave
adc
aam
mov
mov
incl
xchg
sti
int
pushf
adc
fnstenv
jg
and
popf
dec
sbb
ja
adc
jge
push
or
xchg
mov
rcrl
xchg
lcall
cltd
dec
sbb
popa
mov
js
stos
mov
cmpb
adc
aas
sbb
sbb
add
mov
jmp
xchg
sbb
outsb
sbb
xor
or
popa
sbb
sbb
inc
xor
repz
mov
in
push
repz
sbb
adc
xchg
inc
sbb
pop
outsl
jbe
push
in
insb
sahf
fsubrl
sub
jge
jne
outsb
jl
lea
jo
adc
jno
add
cs
pop
xchg
lds
fcomp
dec
push
push
std
pop
add
pop
test
in
jo
pop
xchg
push
adcl
call
add
addr16
xor
xlat
add
sbb
xor
aad
int3
insl
sub
cmpsl
lock
sbb
outsl
and
pop
xchg
popa
xchg
inc
insl
fdivr
cmpsl
mov
jecxz
stos
daa
or
repz
dec
mov
adc
xchg
inc
rcrb
jle
fdivl
cmpsb
into
inc
xor
and
into
lods
xor
adc
orb
adc
push
inc
repnz
or
cmp
sarl
xor
loopne
push
or
and
pop
movsb
xor
and
jno
add
into
sahf
js
or
or
adc
cli
jb
push
outsb
arpl
cmpsb
push
xchg
xchg
cmpsl
inc
push
pop
lock
jmp
xrelease
mov
inc
adc
sbb
out
fadds
dec
jmp
shld
push
mov
push
shrb
adc
mov
inc
add
sbb
pop
or
incl
lahf
sbb
cld
cmpsl
jbe
push
lret
mov
stos
in
add
sub
insl
adc
into
mov
xchg
or
sub
ficoml
jmp
mov
dec
mov
sub
pop
xlat
cmp
dec
xor
fwait
popa
adc
stc
jns
out
fimull
add
loope
xchg
shlb
xchg
aas
iret
cmpsb
test
sti
loopne
mov
pushf
lahf
stos
mov
or
sub
jle
insb
mov
pop
sub
inc
imul
out
inc
shlb
push
pop
test
jg
sub
lahf
int3
jo
rclb
xor
shrl
jnp
xchg
jmp
aad
outsl
pop
aas
or
or
cmp
inc
cmp
mov
mov
in
cmp
jecxz
mov
and
lods
pop
fcomi
adc
out
leave
xor
aas
and
mov
lods
rorb
imul
mov
ffreep
dec
inc
xor
lods
cmp
shrb
pop
fldcw
lea
jno
in
jne
stc
mov
push
mov
popa
sbb
test
cltd
dec
sti
div
lea
mov
add
stos
add
fimull
dec
xlat
leave
outsl
mov
jl
push
nop
push
pusha
repz
mov
sbb
cltd
add
sub
es
scas
jne
lret
outsl
lahf
pop
cmp
push
popl
inc
insl
fisttps
hlt
cmc
aaa
mov
in
or
lods
mov
jge
xor
in
xchg
rorl
lods
push
inc
push
loop
fbstp
jno
xor
or
sbbb
xchg
and
divb
sub
mov
or
lods
push
notl
fwait
inc
push
test
add
or
imulb
inc
jmp
rorl
sub
cmp
ret
sarb
xchg
stc
mov
pop
lods
or
jae
leave
xor
int3
cld
lods
inc
sbb
sub
orl
and
push
data16
movsb
jae
pop
sub
pop
lods
xchg
insl
jo
loop
mov
cwtl
mov
mov
lret
mov
fistpl
inc
fcoms
xlat
negl
pop
idivb
adc
dec
mov
out
in
fbld
jne
add
adc
arpl
mov
lods
sbb
bound
cltd
xchg
pop
shlb
jecxz
add
in
cmp
les
out
jg
sbb
dec
cmp
std
repz
mov
adc
xchg
mov
mov
ret
rcr
jne
lods
imul
mov
mov
adc
outsb
and
pop
outsb
lods
test
inc
ret
mov
jne
xor
int3
push
cld
mov
adc
sub
aas
imul
mov
mov
jo
stos
sbb
imul
mov
mov
clc
jp
sbb
sub
movsb
dec
add
inc
aaa
mov
enter
push
sbb
xchg
cmc
movsb
cmp
lods
push
jb
fiadds
je
nop
mov
ljmp
fwait
adc
ficomps
enter
inc
jo
imul
lds
pop
or
push
push
mov
adc
loopne
fcmovnu
fimuls
sahf
mov
stc
pop
pop
aad
push
cmp
mov
cs
and
imul
cltd
jne
jnp
das
imul
jnp
add
sbb
in
push
jns
jge
icebp
jl
and
mov
gs
mov
loopne
scas
ret
cmp
pop
ljmp
stos
outsb
xchg
and
ficoms
push
repz
jbe
sbb
test
jmp
pop
arpl
pop
and
jno
in
hlt
or
sub
in
dec
jns
test
js
dec
push
sbb
xor
out
mov
jge
adc
int3
cmpsl
fcomip
cltd
sub
and
inc
pop
mov
shr
pop
pop
stc
scas
push
ret
mov
inc
xlat
and
pusha
fiadds
and
in
sub
stos
mov
push
mov
shll
push
mov
and
xor
and
int
mov
dec
lahf
dec
mov
je
adc
push
jno
mov
xlat
cld
popw
aas
add
mov
inc
sub
shll
jbe
mov
test
bound
jge
imul
iret
fld
jp
cltd
out
sub
pop
mov
xor
shr
movsl
cwtl
loop
loope
push
mov
dec
sub
dec
dec
ret
bound
aad
xchg
loope
pop
sti
scas
xlat
pop
add
push
push
dec
ljmp
xor
push
lds
adc
xchg
fsubr
scas
rorb
addr16
mov
std
addb
jno
lods
movsl
push
addr16
shlb
inc
mov
std
xor
inc
scas
cltd
jle
sbb
jmp
aas
mov
lea
loope
and
jmp
in
mov
pop
cmpsb
adc
daa
outsb
loop
shll
je
arpl
mov
imul
stos
les
jae
xchg
into
imul
daa
int3
cmpsb
in
and
jb
adc
mov
lret
in
fnstsw
add
jo
test
adc
push
mov
adc
out
mov
shl
rol
mov
sbb
cmp
stos
ljmp
push
enter
dec
inc
cmp
and
lock
stos
sbb
cmp
ret
sub
fisttpll
jle
sbb
addb
cltd
add
jl
mov
fwait
mov
ret
jbe
popa
dec
or
mov
addl
addr16
ja
lods
and
lret
pop
in
das
pop
insl
sub
scas
dec
pop
mov
pop
jg
xor
fists
xchg
lds
arpl
icebp
push
dec
mov
xchg
cmpsb
jo
lods
shll
pop
dec
mov
or
aam
outsl
xchg
out
xor
add
dec
addr16
je
xor
loop
ja
fs
xchg
mov
cmp
or
sub
cmc
jbe
jge
jae
xchg
adc
jp
scas
pop
xchg
mull
mov
scas
mov
ljmp
nop
xor
cmpb
xor
lcall
stos
dec
inc
push
mov
ror
shlb
push
subl
xchg
mov
stos
fcmovb
fsubrl
nop
mov
pop
js
inc
in
sarb
jno
mov
pop
repz
mov
jle
cwtl
cwtl
sub
push
inc
mov
sub
cmp
pop
dec
shll
cmp
popf
adc
pop
mov
or
loope
lea
pushl
inc
or
dec
add
push
add
test
lea
in
out
aam
mov
inc
push
inc
seto
int3
mov
test
je
ds
dec
mov
arpl
fdivrs
xchg
jnp
push
jnp
inc
pop
sahf
mov
fcompl
cmc
cmp
dec
mov
dec
sbb
jnp
xchg
jne
ds
cmp
imul
sub
ret
shrb
stos
jg
add
push
mov
mov
sbb
into
leave
and
popa
jle
test
xor
rclb
xchg
addr16
sti
cld
or
pop
or
and
dec
insb
mov
in
addr16
lret
push
lock
cmp
mov
das
jno
sbbb
xor
dec
das
shl
pusha
mov
mov
cmc
setge
les
pop
mov
xchg
add
dec
and
dec
xchg
data16
stc
mov
leave
cmpsb
pushl
insb
clc
xor
mov
leave
pop
mov
rorl
push
cmp
cmpl
das
lock
xor
stc
cmpsl
lcall
int
lds
imul
sbb
adc
movb
movsb
mov
mov
xchg
adc
push
lock
xor
mov
jmp
out
lds
in
add
mov
mov
stos
cmp
in
loop
add
and
sbb
inc
idivb
or
mov
jg
cs
jb
cmp
cmp
push
lods
mov
out
sub
data16
daa
pushf
cmp
fcmovne
pushf
cmpsb
add
cmp
push
mov
cwtl
push
xlat
mov
mov
push
jae
mov
movsb
jne
jmp
inc
xorb
add
ja
shl
loop
sbb
sahf
push
inc
jne
sbb
addb
and
ret
sbb
ror
push
add
jmp
outsl
pop
and
mov
out
adc
push
jecxz
aaa
popa
mov
hlt
mov
shl
enter
movsb
dec
clc
and
sub
mov
adc
call
pop
or
scas
cmc
cli
xor
mov
cld
inc
das
cmp
je
mov
popa
lods
mov
jle
and
dec
mov
xor
sub
jb
jle
push
lods
sbb
fwait
les
mov
xchg
movsl
inc
pop
int3
aad
pop
jp
arpl
out
das
stos
cmp
cltd
jg
lods
fistps
mov
out
mov
shll
stos
dec
cltd
fmul
lods
test
pusha
fs
mov
push
push
sahf
xchg
ret
rcl
adc
dec
incb
call
fcom
push
push
stos
dec
arpl
lods
rorl
sbb
jbe
push
xor
xchg
cwtl
ret
xor
scas
test
jp
nop
mov
sub
dec
and
pop
ds
je
rolb
leave
lret
es
mov
dec
dec
popa
mov
gs
push
and
hlt
daa
icebp
idivl
jnp
jle
sbb
nop
stos
push
or
jno
pusha
sub
sbb
mov
outsl
sbb
mov
push
mov
adc
les
imul
je
dec
sub
mov
scas
push
xor
cmp
mov
sbb
aad
add
hlt
push
cld
or
xchg
mov
mov
or
int
push
pop
lock
xchg
adcl
push
xchg
hlt
and
or
push
xchg
ja
add
jno
scas
push
or
mov
add
call
sbb
cmpsl
in
cmpsl
rcl
out
mov
rorb
mov
test
aam
pop
out
sti
dec
xor
fldt
xchg
pushf
fwait
inc
arpl
cmpsb
inc
mov
jecxz
or
into
filds
xchg
stos
add
cmpsb
push
jmp
xor
sarb
sbb
or
and
leave
xchg
repz
mov
jp
jmp
adc
incl
lock
mov
xchg
popa
sbb
dec
sub
sarl
push
and
add
adcb
cld
test
mov
das
xchg
or
pop
cltd
push
bound
jb
insb
orl
fsubrl
push
push
inc
inc
and
cmpsb
ret
adc
movb
and
jp
adc
int3
adcl
xchg
popa
dec
loop
stc
mov
aam
fldl2t
adc
xlat
rcr
out
push
jno
jno
cwtl
mov
add
adc
cmp
fnstsw
imul
jp
inc
or
lds
pop
mov
xchg
adc
xchg
out
sahf
cmova
mov
or
mov
push
sub
mov
in
sahf
mov
inc
adc
daa
xchg
scas
stos
and
xor
lea
cmp
cmpsb
stos
inc
pop
scas
mov
and
sub
add
cmc
andb
push
shll
xchg
push
pop
movsl
call
lods
sbb
out
xchg
xlat
sahf
rcrb
add
andl
sbb
push
ret
pop
aaa
bswap
fisubs
fwait
or
iret
jmp
pop
jmp
mov
test
mov
pop
and
and
pop
xchg
sbb
cld
push
stc
jns
push
or
and
pop
insl
xor
dec
insb
xor
cmpsb
pop
es
push
mov
xor
pop
mov
addl
stos
cmp
test
shl
jbe
ret
cmpsl
sahf
lret
add
cmp
sti
outsb
cmp
mov
xor
mov
xchg
in
cmp
mov
add
test
xchg
pop
cmc
xchg
and
fimull
vpunpckhdq
in
xlat
mov
mov
inc
dec
mov
or
lcall
push
add
adc
into
xchg
jmp
gs
cmp
dec
lcall
aaa
push
shr
and
inc
mov
shl
in
jge
pop
pop
sub
mov
and
daa
testl
cmp
fldenv
jno
std
inc
jae
insb
test
aaa
mov
mov
push
push
jbe
bound
roll
cwtl
mov
push
aaa
lret
adc
andb
cltd
inc
jo
sbb
jo
xchg
push
jb
push
add
lods
push
cmp
lret
xchg
fbstp
das
in
dec
lcall
fmuls
pop
sbb
ficoml
dec
std
ljmp
dec
stos
sub
movsl
sahf
aas
push
add
and
sbb
adc
adc
add
sbb
lock
xor
andl
dec
pushf
dec
inc
insl
push
mov
xor
xchg
cmpsb
add
and
cmp
push
lret
lods
cwtl
push
cmp
sti
mull
test
pop
dec
nop
push
lods
sub
mov
imul
fcmovnbe
js
inc
test
add
mov
mov
mov
lods
pop
mov
xchg
repnz
adc
popf
push
pop
fisttpll
ret
iret
cmpsl
lcall
loope
mov
cmp
jg
and
inc
push
shrb
dec
adc
xchg
xor
repnz
xor
mov
push
xor
outsb
popf
push
push
inc
mov
or
clc
fldl
sub
dec
and
outsl
stc
nop
jl
adc
or
push
test
pop
out
adc
jle
cmp
mov
cmp
mov
arpl
xchg
cmp
xchg
mov
aam
mov
jno
xor
inc
dec
pusha
arpl
push
pop
inc
bts
arpl
incl
or
xchg
cmp
dec
loop
mov
jle
test
and
fisubrl
add
mov
pop
xchg
cmp
sahf
iret
add
push
in
ss
mov
out
lods
mov
xchg
ret
jno
cmp
mov
or
movsb
ret
jp
loop
dec
mov
jmp
inc
fs
scas
loopne
popf
sub
idivb
cmc
or
call
and
inc
and
shl
xchg
push
leave
inc
push
inc
imul
cmc
sub
pop
int3
outsb
inc
mov
lods
vmovd
aad
stos
sub
and
dec
stos
or
ja
mov
dec
sarb
mov
loope
push
push
push
enter
clc
test
mov
inc
in
adc
sub
mov
push
lods
dec
inc
sbb
cmc
lahf
inc
sarl
adc
decl
xchg
movsb
sbb
movsl
std
pop
rclb
outsb
scas
dec
or
outsl
jmp
mov
out
adc
sahf
call
sti
sti
lds
dec
jmp
and
je
les
push
inc
ljmp
or
mov
iret
lock
mov
push
sbb
mov
out
sbb
cmp
aaa
shll
xchg
lea
sub
lcall
xlat
mov
jo
mov
lock
dec
inc
mov
pusha
xchg
cmpl
cmp
add
xor
data16
ret
outsb
dec
gs
in
cmp
jbe
shll
pop
cmp
sahf
dec
push
push
test
leave
pusha
js
sbb
hlt
ja
ror
xor
fwait
fwait
les
subl
stc
rorb
shll
pop
xchg
cmpsl
loope
jg
jo
test
mov
ss
mov
push
stos
outsl
mov
inc
popa
lret
fwait
dec
out
inc
mov
or
lret
sti
push
outsb
enter
movsb
add
sahf
sbb
xchg
mov
fldenv
out
xor
subl
or
std
imul
jne
cmp
fsubrs
or
jbe
xchg
jg
dec
ja
jae
mov
cmpsb
repnz
jbe
imul
mov
ja
push
cmp
inc
inc
cs
mov
mov
psubusb
popa
xor
dec
mov
xchg
imul
loop
nop
push
mov
enter
sub
mov
pop
add
xchg
jge
lcall
aas
fisttps
std
jecxz
mov
subl
loope
jbe
int3
cmc
negl
add
icebp
clc
fs
int
sar
mov
jmp
pop
jo
mov
cmpsb
icebp
int3
fdivs
ret
push
push
je
outsl
insb
mov
push
ljmp
into
outsb
sbb
pop
movsb
xchg
adc
push
cmp
sahf
lods
test
scas
or
or
push
lods
int
stc
push
jne
lcall
jnp
incl
inc
pop
cmp
shl
inc
shll
stos
idiv
dec
add
push
mov
out
loop
cmc
stos
pop
dec
std
sub
fimuls
sbb
test
xchg
shr
ret
pop
clc
sahf
shll
inc
dec
cmc
mov
inc
and
aaa
mov
das
cmc
shr
cmc
popf
sarl
sbb
push
xchg
pop
mov
std
aaa
mov
jns
outsl
or
loope
movsl
and
mov
cmp
mov
cld
mov
stc
fstps
fcomps
xor
mov
cltd
fcmovnb
stc
or
xor
mulb
xor
ss
lds
mov
sbb
mov
or
push
mov
loopne
into
dec
mov
mov
movsb
xor
pop
lahf
nop
daa
push
js
je
push
and
into
iret
xlat
lar
fists
movsl
nop
cltd
jno
stc
xchg
and
sbb
aaa
pusha
xor
fwait
scas
into
adc
shrb
fnsave
shlb
dec
add
push
dec
jae
push
aaa
pop
loop
push
outsb
iret
arpl
ljmp
loope
icebp
movb
out
sbb
out
sub
into
int3
cmpsb
pop
adc
or
outsl
call
or
testl
mov
out
mov
mov
inc
test
jns
in
dec
pop
or
sbbb
addb
addl
stos
adc
arpl
stc
sbb
out
loope
sub
cld
leave
xchg
insl
or
ret
out
subb
fdivrp
mov
daa
rcrb
les
test
sbbb
loopne
sti
sbb
repz
or
in
es
jle
xchg
cmpsb
add
rol
movsl
and
dec
adc
and
repz
push
ds
inc
mov
in
je
xchg
or
in
mov
pop
mov
mov
rcrl
mov
cmp
jecxz
sbb
scas
cli
out
fnstcw
mov
push
arpl
inc
in
dec
sarl
add
sbb
rcl
jmp
inc
xchg
xorl
jp
loopne
mov
mov
push
into
daa
in
inc
inc
cmc
outsl
data16
ret
dec
ja
adcl
xlat
sub
sahf
dec
lahf
sbb
jp
movsb
push
fsubl
mov
subb
or
mov
aad
fwait
xor
adc
mov
cld
int
sub
jecxz
jae
clc
adc
add
mov
pop
dec
lcall
arpl
lods
sbb
out
cmpl
or
jnp
add
jp
or
lret
out
jne
in
mov
dec
push
js
jmp
movsl
aaa
or
movsb
sbb
xchg
adc
testb
pop
ds
inc
dec
loope
sub
repz
sbb
add
sti
ficompl
ret
les
xchg
sarl
jmp
loope
lret
push
repnz
add
mov
pop
mov
faddl
ja
push
cmp
sahf
aam
lock
out
enter
or
add
das
rcrl
pop
std
es
xor
sub
push
cwtl
jns
inc
sub
sbb
dec
lret
loope
stos
adc
mov
sbb
fidivrl
or
dec
sahf
sbb
mov
test
adc
ds
sub
loope
pop
loopne
xchg
cmp
pushf
lea
test
repz
mov
lock
lret
es
test
pop
or
dec
fidivrl
sti
or
movsl
aas
pop
and
mov
cli
jp
int
dec
sbb
lods
in
insb
jl
or
in
mov
ss
mov
ljmp
jecxz
popf
in
adc
sahf
pop
cs
mov
pop
dec
lcall
inc
pop
insb
repnz
fildll
pushf
in
jae
dec
leave
loop
dec
fst
dec
repz
add
js
dec
loop
in
adc
jns
add
int3
mov
sub
jl
push
sbb
fwait
mov
shlb
add
leave
sbb
mov
xchg
add
inc
and
cmpb
jnp
dec
jle
dec
mov
dec
dec
mov
inc
leave
cmpb
arpl
pop
push
xor
push
mov
jl
mov
mov
test
adc
push
data16
and
push
cmp
ds
arpl
sbb
jns
xor
std
arpl
mov
mov
sbb
and
xchg
and
fisubrs
dec
pushf
xchg
imul
mov
cwtl
mov
push
notb
shll
mov
push
das
inc
outsb
xchg
std
iret
sub
daa
int3
sub
ret
lcall
fldl
push
mov
xor
popa
clc
push
dec
sub
sti
stos
cmc
inc
lock
add
jns
cli
adcl
arpl
js
mov
inc
dec
loopne
pop
add
adc
sub
xlat
dec
xchg
outsl
in
scas
inc
push
sbb
pushf
lock
xchg
decb
mov
out
xor
add
add
dec
movsb
sbb
fsubrl
xor
shl
int
cld
loop
jno
mov
rolb
mov
notl
ret
mov
add
movsb
mov
addps
fstpt
std
jle
ljmp
adc
push
shrl
add
outsl
clc
xor
sahf
mov
mov
es
mov
mov
jmp
or
mov
mov
out
mov
popf
inc
lds
js
sbb
pop
daa
stos
stc
dec
add
icebp
pop
xchg
adc
inc
fimull
unpcklps
enter
inc
xor
xchg
push
push
and
ljmp
enter
xchg
jle
nop
es
mov
mov
adc
imul
push
adc
and
test
stos
xor
adc
cmp
and
popa
and
push
insb
testl
stos
sub
adc
aad
adc
and
mov
sub
jp
fistpll
lret
fwait
stos
ret
xchg
dec
adc
jp
xor
into
mov
mov
subl
int
test
ss
or
imul
push
aas
in
pop
sbbb
pop
out
loop
jmp
pop
mov
in
js
xlat
mov
outsb
bound
leave
mov
adc
add
mov
cmp
xor
and
or
dec
ss
cli
imul
nop
pop
xadd
jno
aad
inc
mov
scas
sti
add
mov
pop
in
js
mov
enter
fs
movsl
push
jnp
in
rcrl
cmc
outsb
fisubrl
cmp
lcall
sub
rclb
push
mov
and
gs
fsubrs
out
aas
test
bnd
adc
in
cmp
jbe
fisubrl
es
int
dec
loope
sbb
xchg
decl
aam
sbb
cmp
js
xor
sub
mov
jmp
clc
dec
sbb
mov
sbb
sbb
jno
sbb
arpl
sub
test
push
sti
push
add
popa
inc
or
cltd
cmp
aam
stc
outsl
mov
jnp
shl
in
mov
add
mov
pop
and
fsts
and
mov
mov
lods
dec
pushf
xchg
push
xchg
sahf
jae
scas
sbb
fld
mov
push
in
js
aas
mov
pop
cmp
int3
je
test
movsb
test
lds
jge
leave
and
sti
sti
iret
mov
sahf
and
ja
dec
mov
jb
jae
push
sub
insl
pop
xchg
mov
xchg
pop
lods
ret
orl
into
out
ss
stc
insb
mov
cmp
or
insb
ds
or
pop
push
mov
movsl
inc
mov
or
leave
cld
rclb
pushf
leave
pusha
and
mov
dec
cwtl
repz
in
inc
insb
mov
pushf
je
xor
push
rclb
and
pop
mov
cwtl
popa
mov
loope
mov
in
aam
jle
out
jmp
movsb
pusha
mov
mov
mov
cs
pushl
xchg
loope
ret
test
in
mov
push
push
xchg
mov
sbb
jp
lret
inc
les
test
xchg
aaa
lcall
jge
or
mov
aas
push
mov
push
lcallw
push
xchg
outsb
dec
and
jecxz
fsubs
out
mov
fwait
jo
mov
xor
aad
insb
test
movsl
test
cmp
imul
jbe
pop
dec
jecxz
int
xor
shlb
inc
jp
dec
fisubl
fldl
jb
pop
mov
adc
pop
xor
icebp
call
mov
push
or
movsb
lods
test
pushf
das
mov
pop
nop
mov
and
jecxz
in
cmp
mov
mov
mov
lock
test
cmp
push
mov
cmpsb
cmpl
add
out
jp
sbb
mov
push
iret
popa
mov
jmp
stos
test
or
jl
aad
je
sub
and
mov
mov
xchg
addr16
sub
idivl
adc
in
sbb
test
lret
in
das
popf
shl
pextrw
xchg
js
ficompl
pop
inc
clc
mov
mov
xchg
or
lock
xor
pop
mov
inc
mov
mov
jmp
xlat
pop
jle
test
xchg
and
fstps
nop
divl
mov
lcall
addr16
lcall
pop
mov
cmp
or
test
subb
push
pop
fisttpl
insb
cmpsl
jbe
dec
outsb
pop
and
js
pop
scas
add
out
call
ja
adc
roll
jp
pop
xadd
or
jcxz
pop
jnp
cmp
cmpl
jecxz
pop
sub
mov
pop
fstpl
dec
xchg
xor
sbb
sbb
test
push
xor
push
dec
mov
push
push
push
in
sub
or
movsb
sub
push
mov
pop
int3
insl
shlb
aam
lahf
ljmp
mov
ljmp
outsl
std
mov
pop
out
add
mov
cmc
and
pop
xor
divl
mov
cmp
pusha
icebp
lock
leave
mov
xor
cmpsl
out
jae
lret
xchg
sahf
in
hlt
scas
mov
push
mov
pop
js
pop
rcr
sub
imul
or
fsubrs
jge
push
loopne
xchg
pop
loope
xchg
fiaddl
fs
xor
cmpsb
inc
movsl
or
out
int
or
icebp
cmp
pop
aaa
test
test
test
and
xchg
aaa
or
je
movsl
xchg
and
add
pop
dec
push
cmc
push
push
sbb
add
imul
mov
push
jge
sbb
sbb
mov
fisttps
pop
adcl
popa
loopne
adc
mov
dec
mov
fnstsw
das
cmp
and
shlb
and
daa
jg
mov
fidivl
loop
mov
sarl
push
pop
mov
pop
in
inc
hlt
lret
adc
adc
sbb
mov
cli
cmc
mov
imul
jle
outsb
mov
xchg
push
cltd
nop
js
out
popf
dec
rclb
sbb
dec
test
mov
fsubrl
pusha
stc
addb
cmp
sahf
xchg
pop
sbb
xor
lret
data16
repz
mov
idiv
rorb
data16
imul
jnp
hlt
stos
or
pusha
ds
shlb
decl
ljmp
js
scas
push
mov
and
adc
add
outsl
insb
mov
insl
cmp
mov
test
rol
adc
arpl
add
movsl
fmull
cmpxchg
insb
cmp
cmp
out
or
int3
jl
cltd
lods
jae
xchg
push
inc
sbb
mov
sti
xchg
movsl
mov
lods
push
test
push
adc
ficomps
repz
mov
mov
jns
push
frstor
gs
and
ja
test
out
insl
sbb
stc
fwait
mov
fucomip
adcb
sub
aam
and
dec
addr16
scas
cwtl
dec
call
cmp
dec
xor
dec
aaa
adc
inc
sub
das
add
jne
sbb
add
imul
xor
fistpll
jge
in
lds
shll
add
mov
sub
push
idiv
xorb
popf
repz
ds
jmp
icebp
test
stc
rcr
inc
sbb
pop
dec
pop
xchg
mov
rolb
pop
lods
push
mov
std
outsb
push
mov
cwtl
lea
sub
daa
test
and
pop
xchg
pop
dec
and
pushf
dec
fmull
mov
mull
mov
sbb
xlat
jb
lds
sub
xlat
lret
dec
push
dec
notb
pop
dec
jp
pop
cmpsb
fbstp
cmp
jge
xor
ljmp
mov
call
les
mov
inc
or
adc
jae
adc
mov
inc
and
push
icebp
ds
push
dec
sub
push
push
and
mov
cli
push
inc
pop
test
or
lods
int3
cmpb
and
pushf
sub
std
jecxz
push
imul
mov
xor
fcomps
inc
jnp
clc
adc
push
cmp
push
nop
rolb
inc
aad
xor
je
hlt
ljmp
mov
mov
adc
mov
sub
or
jae
and
insb
or
cmp
push
cli
out
out
imul
shll
cmp
inc
neg
divl
data16
sbb
stc
out
xor
and
jo
scas
test
cld
push
cli
pushw
scas
mov
int
push
mov
cwtl
imul
inc
adc
mov
les
mov
stos
imulb
pop
xchg
daa
cmc
mov
cmpsb
fs
jecxz
fisttpl
add
lock
popa
pop
push
xchg
aam
push
lahf
sbb
cmpsb
mov
scas
inc
jno
push
mov
jo
add
lahf
mov
mov
cmp
cmp
adc
mov
mov
lret
out
jl
fidivs
iret
xchg
jge
daa
adc
and
ret
or
jne
adc
or
test
mov
fstl
and
cli
mov
sahf
movsl
push
add
cmp
dec
loopne
pushf
mov
loopne
cmp
mov
clc
int3
lret
or
jmp
xchg
mov
or
int
add
mov
xor
push
test
loope
sbb
cli
xor
outsl
push
arpl
jl
mov
push
cmpsl
test
aam
pop
and
pushf
xor
mov
cmp
cmp
dec
xor
cwtl
adc
imul
fs
dec
mov
inc
mov
shl
movsb
into
mov
sub
daa
inc
mov
inc
out
in
clc
add
mov
xor
inc
lea
arpl
in
push
movsb
popl
pusha
dec
push
sbb
movsl
mov
or
ds
mov
adc
sti
pop
loop
push
lcall
pop
scas
mov
mov
fdiv
loop
push
js
rcrl
xor
push
int
out
pop
jo
outsl
in
add
sahf
xchg
xchg
outsb
in
mov
pop
sub
mov
jae
adc
mov
cmp
lods
mov
pop
shlb
inc
jnp
shr
xor
mov
or
mov
cwtl
sub
jno
in
and
push
stos
adc
xchg
rcll
outsb
int
inc
jne
pop
mov
ret
sbb
call
mov
mov
iret
sub
pushf
push
mov
adc
mov
repz
jp
scas
sub
inc
mov
adc
test
leave
daa
inc
jmp
sbb
cmp
cmpsl
push
outsb
pop
push
xor
fisubl
fsubrp
ds
repnz
dec
popa
test
clc
push
adc
and
jge
fs
dec
push
adc
cmp
jne
sbb
sub
rcrb
aas
jg
and
adcl
stos
clc
cmpsb
in
jae
insb
pop
jns
gs
or
sbb
icebp
ss
mov
cmp
shlb
mov
cwtl
push
mov
fisttps
jge
and
lods
sbb
rcrl
push
into
fistpll
mov
aad
stos
jp
jbe
dec
test
sbb
ror
and
clc
stc
lret
and
insb
lods
or
mov
sti
cmc
ja
mov
lcall
push
fidivl
xor
cmp
repz
scas
pop
dec
cmc
loope
cmp
xor
jmp
and
sarl
dec
rcll
movsb
subb
add
andl
mov
roll
daa
out
cmc
lods
stc
in
cltd
fwait
add
fwait
push
xor
or
xchg
pop
repz
jle
add
mov
rep
cli
ljmp
fcomip
xchg
aas
mov
mov
and
ret
test
jne
les
popf
and
mov
iret
jmp
xchg
pop
popa
jae
nop
jne,pn
mov
or
rolb
sbb
loope
not
or
in
jae
pop
dec
jmp
sub
and
mov
mov
ja
shlb
clc
inc
mov
xor
nop
jle
or
bound
addr16
mul
insb
or
adc
sub
stos
bswap
shlb
cwtl
fdivr
mov
repnz
pop
dec
rcll
mov
sti
cmp
cld
jecxz
test
jae
jae
and
and
jno
subl
xor
jg
int
imul
movsb
sub
xchg
adc
cmpsb
mov
inc
add
inc
push
pop
and
cmp
inc
add
in
dec
fstps
push
xor
jmp
push
jle
movsb
test
dec
outsl
cld
int3
mov
jge
ret
cmpsl
insl
imul
cwtl
sbb
add
push
jnp
repz
loope
loope
push
or
mov
xor
push
sub
sub
adc
jl
fimuls
mov
fdivrp
mov
int3
or
or
push
movsb
and
add
pop
movsb
in
leave
std
xlat
outsb
ret
cmp
out
out
fmuls
mov
icebp
cmpl
stos
ss
or
add
lcall
dec
mov
push
outsl
repz
lds
xchg
inc
int3
sbb
jb
add
cmpsl
push
or
xrelease
jge
fsubrs
push
xchg
push
rclb
mov
jbe
aas
outsl
daa
cltd
mov
outsb
jecxz
dec
test
outsl
shl
ret
mov
adc
xlat
dec
out
adc
inc
push
insl
pop
inc
jno
aas
or
inc
clc
add
push
dec
rcl
fcomps
movsb
mov
add
repz
gs
std
cwtl
mov
push
lret
or
xor
sub
es
push
enter
scas
xor
cmp
dec
dec
mov
ljmp
adc
xchg
jne
cmp
xchg
loopne
add
xchg
mov
lock
mov
push
and
test
popa
lea
ret
jg
add
mov
lcall
pop
std
andb
push
dec
lahf
and
mov
test
movsl
xchg
adc
bound
add
insb
fmul
ljmp
and
push
popa
cmp
inc
jecxz
inc
pusha
nop
xor
or
push
out
mov
pusha
mov
pop
add
stos
sbb
jne
or
jg
xor
call
inc
inc
and
adc
mov
xchg
cmpsl
push
push
lret
test
inc
inc
xchg
icebp
cltd
jge
popf
sti
pop
loope
and
mov
stos
xchg
push
lock
mov
sbb
pop
xlat
cmp
out
xor
daa
sti
sbb
add
fildl
fdivs
pop
mov
inc
fiadds
js
xchg
push
xlat
in
rcrl
neg
and
test
hlt
out
out
ficoml
sub
mov
test
or
test
fs
cli
cmpsb
inc
pusha
and
cmp
lcall
lods
mov
sbb
sbb
fmull
jge
xor
clc
iret
mov
xchg
aaa
ss
sub
call
lds
sub
in
push
loopne
mov
and
cli
mov
cmp
adc
imul
lret
mov
mov
out
jne
fisubl
mov
inc
mov
or
popf
frstor
imul
add
push
lods
xchg
pusha
sub
dec
mov
mov
add
inc
cld
lahf
repz
lret
mov
cmpsb
sbb
mov
stc
push
inc
ljmp
jnp
in
push
jge
mov
fstl
mov
push
ficoms
inc
push
lods
test
mov
mov
xchg
push
mov
mov
clc
jae
inc
imulb
mov
aas
int
clc
sbb
pop
gs
sub
sbb
pop
cmp
js
stos
sbb
xlat
pop
xchg
shlb
jmp
fdivrp
fists
mov
mov
cmp
rcrb
fwait
std
xchg
mov
cld
fwait
iret
outsb
jecxz
and
push
xor
xchg
sub
dec
mov
or
stos
mov
adc
in
loopne
ret
and
in
cli
into
jno
or
jb
fdivs
shll
out
dec
inc
and
fistpll
push
sti
mov
jecxz
or
pop
fsubr
emms
xchg
jecxz
dec
mov
mov
pop
jl
xor
jmp
fwait
mov
inc
test
int3
std
out
lock
mov
sub
outsl
call
inc
ret
mov
stos
dec
call
ja
fwait
test
sub
in
imull
jno
notb
in
lahf
dec
sub
inc
out
sub
add
sahf
mov
dec
scas
testb
aam
xchg
fbstp
or
mov
sbb
and
inc
test
ficoms
mov
and
mov
xchg
adc
mov
xchg
imul
mov
inc
adc
int
xchg
dec
mov
mov
inc
sub
cmp
insb
sti
jp
sbb
inc
dec
push
jle
pushl
inc
ret
adc
movsl
xor
cltd
or
dec
stos
lea
push
subb
sbb
sti
pop
out
add
jge
push
stc
pop
and
xchg
inc
push
fldcw
in
xchg
cmp
jbe
mov
xor
jecxz
mov
jge
fsts
mov
sahf
jbe
ljmp
or
and
into
mov
push
inc
sbbl
out
in
cmpsl
into
pop
ljmp
aaa
sub
and
jno
mov
imul
push
addr16
and
sub
fldcw
adc
pop
pusha
cld
icebp
push
push
faddl
ja
mov
sub
outsl
lahf
ret
cmp
pushw
inc
les
cmc
mov
dec
shll
mov
mov
dec
push
fsubp
dec
dec
add
pop
adc
adc
dec
cmpsl
xchg
dec
test
sub
test
mov
shll
out
add
mov
push
sub
sbb
cltd
fidivl
arpl
ss
xchg
push
jbe
and
out
mov
popa
movsl
pop
ret
xchg
xchg
jnp
gs
pop
push
adc
xchg
lock
xlat
jg
add
leave
scas
jmp
and
aam
adc
stos
ds
in
aas
mov
inc
mov
cmp
pop
out
dec
int3
fdivrs
add
and
das
jae
mov
jae
pop
or
stos
cmp
pop
inc
cmp
or
lods
pop
add
in
jmp
shl
xchg
dec
movl
and
pop
pop
sbb
jns
stos
cmp
sbb
out
adc
fsubrl
dec
out
adc
movl
push
xchg
mov
xor
mov
popa
push
mov
dec
sbb
mov
mov
ror
mov
popf
lods
sti
pusha
mov
push
jnp
pop
imul
jae
lcall
inc
mov
and
cmp
and
xchg
in
mov
fcomp
fxch
inc
mov
in
sub
pop
pop
push
ja
add
inc
push
jmp
and
push
or
mov
test
js
daa
lret
jb
std
out
cmp
mov
sub
xlat
cmpsl
push
dec
fdivrs
das
les
xchg
rcrb
pop
sbb
sub
adc
orl
jcxz
cvtpi2ps
mov
cltd
xchg
push
and
inc
inc
mov
push
addb
fwait
int3
lods
sbb
test
dec
mov
je
cmp
cltd
xorb
adc
inc
lcall
ss
out
jb
sub
xchg
inc
mov
pop
jecxz
cmp
out
or
addl
push
sti
lods
or
cmp
cltd
sub
cmp
push
mov
lea
fistps
stos
ja
inc
lea
adcb
mov
loope
xor
inc
stos
dec
in
cmp
cmc
das
jmp
fstps
push
lds
pop
insl
xor
dec
add
jae
mov
mov
add
jecxz
scas
and
lahf
outsb
or
sbb
mov
loopne
jge
xor
jmp
rclb
cmp
pop
jne
push
mull
push
adc
out
out
pop
mov
push
fcmovu
mov
mov
adcb
jecxz
or
bound
ret
add
cld
lret
repnz
rcl
mov
adc
sub
mov
adc
cmp
fwait
iret
mov
sub
sbb
push
xchg
mov
pushf
or
xor
cmp
cld
jns
in
xchg
clc
or
test
and
adc
stc
sbb
pusha
lahf
gs
push
das
cmp
lods
aas
cmpsb
jns
inc
mov
aad
xlat
xchg
cld
mov
sahf
sub
sub
add
lods
paddsb
int
jnp
cld
popf
aas
fdivl
mov
flds
or
adc
sbb
cvtdq2ps
pop
ja
mov
push
adc
mov
icebp
inc
in
cmp
ljmp
push
imul
jo
cmp
sbb
ds
orl
pop
mov
xchg
dec
int
lcall
cmp
xor
ljmp
bnd
int
mov
out
sbb
sarb
push
add
jne
inc
mov
fwait
adc
shlb
jb
js
cmp
xchg
xor
push
orl
loop
fwait
and
push
fmul
or
daa
add
lret
sti
stc
lcall
js
add
lret
adc
mov
pop
add
pop
stos
sbb
mov
daa
or
xchg
push
mov
cltd
jmp
lds
dec
adc
xchg
inc
xor
ljmp
ret
cmp
dec
out
je
pushf
icebp
mov
sbb
pop
pop
xchg
cmp
inc
pop
xchg
adc
xchg
mov
and
push
xchg
pop
xor
xchg
jp
or
mov
rolb
adc
fidivl
push
sub
std
fildl
xor
xchg
jo
scas
xchg
push
push
scas
mul
inc
lods
sub
pop
lds
cmpsb
push
xchg
lcall
popa
mov
mov
mov
mov
adc
xor
out
stos
stos
sbb
fisubs
outsl
inc
pop
js
fwait
sub
sbb
adc
mov
lods
adc
or
xchg
cs
dec
cmc
mov
and
jle
mov
and
jne
xor
stos
push
out
cmc
in
add
cwtl
push
cmp
jle
shrb
add
ss
testb
enter
mov
es
push
pop
sbb
stos
pop
popa
sub
insl
or
mov
cmp
inc
arpl
mov
add
lds
push
sub
mov
xchg
movsl
dec
clc
jno
aas
cmp
movsl
mov
xchg
sarb
call
pop
and
dec
lcall
addr16
sub
xor
mov
clc
movsl
add
pop
push
aaa
pop
les
xchg
test
hlt
das
mov
lret
dec
mov
pop
js
jbe
pop
mov
ficomps
mov
push
cmp
ljmp
in
lods
dec
hlt
lods
mov
dec
sub
mov
mov
adc
sub
and
push
inc
dec
jecxz
lea
loope
fdivp
sub
sub
and
aas
xor
jns
shlb
fstl
mov
sub
mov
xor
repz
les
fdivs
xor
and
sbb
fs
add
push
out
rclb
mov
sti
xchg
push
mov
dec
jp
jecxz
xchg
das
stos
xor
sub
xorb
dec
ror
xchg
outsb
push
jmp
add
shl
add
add
call
jl
jl
push
lcall
cwtl
daa
push
insb
sti
andl
ror
lret
je
ja
xchg
mov
jmp
popf
mov
fcomps
cld
stc
lcall
mov
mulb
leave
jns
mov
inc
shlb
test
xchg
push
push
test
jg
data16
imul
lods
xchg
dec
pushf
scas
sub
popa
js
inc
mov
xor
or
aad
imulb
decb
push
inc
insb
ja
aas
shrl
cmpsl
mov
pushl
lret
jge
inc
inc
scas
lock
js
insl
in
push
js
cs
shrb
out
in
repnz
roll
dec
pop
mov
sti
cld
outsb
xor
stos
add
dec
mov
mov
insl
cmp
nop
imull
push
outsb
incb
push
sahf
scas
xor
and
dec
stc
gs
sbbb
ficompl
or
inc
dec
out
andl
das
jae
and
inc
cld
xchg
stos
sub
call
mov
das
push
test
out
and
cmpsb
sti
add
les
scas
jg
mov
sti
adc
cmp
aad
dec
pop
imul
xchg
or
rcr
sub
in
mov
jge
clc
aam
add
aad
nop
jno
inc
fs
add
je
ret
xchg
push
lret
push
es
adc
fdiv
add
rcll
jle
repz
outsl
and
in
lahf
adc
xchg
in
bound
add
pushf
cmp
lea
fisttps
jl
ret
and
fcompl
sbb
pushl
scas
push
out
cld
mov
xor
enter
loop
adc
cli
adc
pushf
in
int3
cmc
xchg
jae
in
xchg
mov
mov
cmpsl
xchg
adc
repnz
sub
mov
adc
and
push
imul
popa
and
out
fsubr
xchg
leave
mov
lahf
lar
xchg
popf
rcrl
pop
aas
xchg
aad
mov
nop
lcall
cmc
rcrb
mov
enter
mov
addl
scas
jnp
dec
cmpsl
cmpsb
mov
adc
fisubrs
xchg
sar
xor
push
mov
lret
cmp
add
stos
sbb
int
jno
dec
clc
add
bound
loopne
popl
pop
adc
mov
xchg
xchg
cwtl
int3
dec
add
sub
sbb
push
push
mov
sbb
push
mov
and
jg
push
dec
jge
push
sub
xchg
popa
addb
pop
mov
push
int
xor
enter
mov
cmp
fs
dec
mov
cltd
lret
sub
in
inc
and
jnp
and
pop
and
xor
maskmovq
testl
xchg
mov
cld
leave
xchg
mov
xchg
xlat
pop
adc
gs
ss
into
mov
push
xchg
push
push
mull
aad
jnp
push
xchg
pop
mov
adc
sub
pop
insl
jmp
leave
jb
movsl
fadds
jl
cli
sub
push
xor
jp
les
mov
or
xchg
pop
add
mov
jne
insl
cmc
sub
dec
dec
out
aad
xchg
pop
into
jecxz
pop
stc
rcrb
xlat
cs
push
xchg
push
sbb
scas
xor
pop
xchg
sub
shll
mov
jle
or
mov
cmp
aaa
repz
jnp
jmp
push
xchg
mov
andb
in
lds
hlt
mov
sbb
test
inc
imul
xor
aad
in
loopne
cmpb
loope
call
push
lret
repz
imul
or
in
mov
je
inc
cs
cmpsb
stos
push
add
pusha
loopne
stc
jle
ljmp
sti
movq
ret
pop
cmp
out
bound
repz
mov
push
movsl
ror
rcrl
cmp
scas
inc
xchg
cmp
shlb
mov
xchg
cmp
outsl
into
fcoms
mov
or
push
adc
xchg
or
mov
mov
pop
pop
je
fldt
sbb
sub
test
mov
xchg
xor
aaa
mov
insb
sub
test
xor
outsl
mov
fistpl
xchg
lret
movsl
push
pop
aas
fimuls
jmp
popa
out
sub
mov
pop
enter
sub
xchg
xchg
in
pop
push
aad
pop
mov
and
jo
pop
cmp
push
jo
fwait
and
lds
cmp
pop
loop
mov
dec
xchg
jecxz
xchg
pop
into
imul
xchg
and
test
movsb
dec
dec
xor
push
out
dec
cli
cmc
pop
repnz
sub
addr16
mov
jne
inc
cmp
mov
cli
sub
lods
mov
mov
subl
andl
dec
inc
adc
push
cmpsb
jo
inc
push
pop
inc
cmp
mov
jae
and
fwait
rclb
bound
mov
mov
pop
cmp
sbbl
xor
push
jl
hlt
inc
in
xor
sub
cmp
fadd
bound
in
mov
dec
jne
inc
xchg
push
ja
push
cmp
mov
inc
mov
lods
dec
lret
das
cmp
pop
imul
xchg
push
pop
mov
sbb
adc
leave
mov
clc
fildll
scas
insb
push
ret
or
sub
outsl
dec
add
cmc
inc
xor
xor
jle
push
lcall
adc
sub
cmp
rorl
jae
sar
ja
cmp
ds
test
in
inc
rcrl
jge
in
ret
test
test
insl
mov
adc
cmp
mov
mov
inc
add
sub
jo
sub
push
cmp
and
xchg
lds
out
jmp
push
lea
test
repnz
ret
out
mov
fstps
adc
dec
mov
shrl
push
inc
cltd
push
pop
sub
mov
sub
pop
add
mov
mov
jb
mov
or
test
jge
cs
xchg
push
mov
inc
mov
xlat
iret
jns
cs
pop
enter
popf
fldt
mov
pop
or
es
mov
lret
ret
or
gs
mov
imul
cld
sub
lds
imul
clc
cli
xor
int3
repnz
cwtl
testb
pop
adc
sub
test
sbb
xchg
int
mov
and
dec
aam
xchg
jnp
test
xchg
and
stos
fdivrs
mov
into
jle
lahf
xchg
movsb
das
incl
jae
je
out
das
or
and
int
adc
inc
lahf
out
add
cmc
jp
fdivr
add
xchg
jl
push
call
les
ror
push
adc
and
jg
adc
ret
ficomps
add
push
jo
and
sub
push
lods
add
pop
push
lcall
xor
cmp
mov
ret
aaa
test
jmp
push
arpl
push
xchg
js
cs
in
mov
lahf
negl
std
push
mov
add
icebp
bound
sbb
subl
enter
xchg
xchg
sbb
aas
dec
movsl
xchg
out
sbb
in
in
jne
ss
push
push
stc
adc
mov
loopne
sub
popf
mov
subb
lods
mov
insl
xchg
inc
cs
decl
aaa
adc
mov
cmp
xor
aam
inc
xchg
jmp
pop
mov
pop
jge
jp
add
movsl
mov
xchg
mov
mov
sbb
mov
leave
aaa
mov
jnp
loopne
shlb
test
and
and
daa
clc
daa
cltd
test
out
lcall
mov
cmp
loop
xchg
in
mov
xchg
xorl
lcall
sbb
sahf
daa
pop
mov
cmp
dec
mov
ret
ret
test
jmp
sbb
out
daa
xor
data16
scas
data16
call
pushf
data16
pop
inc
pusha
and
mov
xor
jo
bound
jbe
ds
addl
in
sti
lea
lods
or
push
call
xor
dec
clc
subl
mov
cmpsb
out
adc
and
xchg
sbbl
push
xchg
jmp
out
push
fs
inc
mov
in
jg
or
adc
xchg
push
xchg
mov
xchg
lcall
dec
push
mov
sbb
xor
or
mov
shl
and
popa
jb
xchg
test
push
mov
jne
ljmp
sub
and
xor
negl
mov
or
aad
stc
jge
jnp
in
or
sub
jmp
jb
dec
xchg
and
sar
dec
int3
dec
in
vpsubq
push
mov
cmp
dec
mov
dec
inc
xor
subb
and
lret
or
fxch
hlt
fisubs
arpl
dec
notb
jb
sub
lea
stos
fistl
xchg
push
and
pusha
dec
fdivl
int3
loop
inc
xchg
cmp
jmp
and
jg
xchg
cltd
insl
je
cmp
orb
dec
fsubl
fidivs
das
call
stos
cmc
fs
push
push
xor
mov
or
mov
cmp
jge
fnstsw
fiaddl
pusha
and
jne
neg
push
adc
sbb
xchg
cmp
punpckhdq
outsl
insb
mov
jecxz
ljmp
aad
clc
dec
nop
cltd
call
scas
mov
jbe
add
scas
push
jbe
or
rorl
insb
stos
add
and
adc
add
and
ja
xchg
out
idiv
lahf
fistl
or
pusha
jne
fldl
fiadds
gs
push
jne
jne
xor
insl
dec
lahf
negb
pusha
lock
movsb
jl
mov
xor
adc
test
mov
pop
out
enter
mov
ret
adc
inc
xchg
hlt
call
daa
add
jl
out
fisttpl
lods
mov
movsb
enter
push
les
loopne
xchg
jmp
xchg
std
add
test
mov
es
mov
ret
or
lock
lret
dec
push
push
adc
das
mov
lcall
sub
mov
xchg
ljmpw
adc
dec
mov
push
xchg
inc
mov
lret
imul
std
pushf
push
in
xor
sub
jle
js
jno
mov
jecxz
test
inc
and
mov
bound
mov
lods
jns
in
inc
pop
inc
inc
add
out
aad
add
lea
fwait
shl
lret
movsb
cwtl
xchg
sbbl
mov
mov
sub
popl
dec
jnp
test
jl
jb
lock
mov
arpl
test
xor
filds
scas
and
shufps
mov
push
lret
dec
cld
xor
std
mov
rcll
add
je
cld
xlat
mov
cmp
shrl
mov
sub
xchg
dec
and
inc
cwtl
or
or
sbb
sti
mov
movsb
ret
xchg
add
aad
jno
pop
inc
ja
adc
nop
out
jno
in
inc
pop
add
fdivs
cwtl
es
call
dec
imul
int
into
bound
xchg
imul
arpl
aaa
test
icebp
cs
pusha
enter
cli
mov
mov
repnz
fmul
dec
dec
or
movsb
and
mov
pop
or
lret
mov
ret
gs
and
sti
insb
pusha
jecxz
out
pop
decl
mov
lods
outsl
adc
jecxz
cltd
dec
and
xchg
std
xchg
lahf
repz
push
add
popa
and
in
lret
xor
mov
push
es
pop
dec
daa
push
shrl
rorb
inc
adc
and
test
andb
lock
pop
fs
mov
cmpb
mov
dec
pusha
aaa
and
sbb
mov
add
fdiv
xchg
popa
lds
out
psrad
int3
movsb
out
cli
push
fisttpl
lcall
xchg
in
mov
call
mov
adc
out
pop
cmpsb
push
inc
add
mov
xor
test
in
sti
jl
jne
or
push
iret
push
cmpsb
mov
add
js
jle
sub
mov
push
fs
gs
int3
hlt
aam
imul
pop
popf
ja
fwait
into
ss
xor
add
adc
hlt
mov
push
pop
cmp
lahf
or
lret
mov
or
cs
aas
cmp
jl
movsl
jbe
leave
inc
sar
sub
pop
or
inc
add
xchg
cmp
int3
push
movsl
loope
and
and
adc
in
cmp
xor
movsl
std
repnz
ficoml
lds
mov
jo
mov
or
dec
add
mov
pop
add
pop
sbb
js
inc
rorb
dec
test
test
sub
or
mov
mov
inc
adc
iret
jo
jae
push
fcmovu
insl
into
mov
orb
pop
and
xchg
inc
inc
dec
loopne
pop
or
cli
mov
mov
into
roll
out
mov
cmc
mov
out
aas
jns
and
xchg
cmp
int
popf
dec
andb
clc
push
or
and
loopne
mov
ret
pop
pop
subb
dec
mov
repnz
mov
jnp
cmp
out
xor
cmp
out
mov
daa
shll
fcoms
fcomp
push
rcl
mov
sbb
stos
mov
xor
lods
xchg
push
adc
imul
and
mov
je
cmp
dec
iret
push
rclb
bound
loopne
xchg
mov
sbb
aas
lret
push
push
cmp
aad
repnz
out
add
ja
mov
jns
fidivrl
sbb
push
xchg
test
loopne
dec
fnstenv
sbb
push
loop,pt
fisubrl
sub
cmc
hlt
inc
sbb
pop
call
and
cmp
mov
mov
mov
sbb
stos
inc
or
pop
add
shll
rcr
cmp
push
xchg
rcrl
cmpsl
and
sub
bound
mov
mov
rorl
add
mov
adc
sbb
sub
rclb
out
fwait
mov
gs
push
jb
mov
imul
xor
fidivrl
je
lods
sub
jg
xchg
inc
rcl
jg
pop
sbb
test
in
subl
jb
jg
stos
cltd
mov
rol
jmp
mov
xchg
fwait
add
mov
pop
xor
call
or
dec
jnp
mov
mov
push
lds
add
sbb
cmpsl
mov
inc
data16
jle
fdivr
bound
testb
inc
outsl
repz
or
das
lcall
xchg
jl
test
sub
or
enter
lcall
dec
add
cmpl
pop
cmc
xchg
mov
cmc
outsb
dec
sbbb
xor
sbbb
inc
push
out
push
mov
cmp
call
ja
shlb
push
cld
orb
leave
mov
lret
lcall
lret
pop
fwait
imul
imul
adcb
cmpsb
cmc
mov
in
mov
pop
movsb
inc
in
inc
movsb
clc
cmp
sub
lods
mov
sbb
inc
mov
dec
xor
in
xchg
in
cli
push
cmp
cmp
mov
mov
or
fdivr
lods
add
push
sti
pop
stc
cmp
jns
xor
xchg
sti
xchg
lahf
mov
out
and
jl
repz
sbb
xchg
imul
add
leave
xchg
or
adc
out
inc
fidivl
push
sbb
test
add
cmp
out
loopne
bound
filds
scas
out
jecxz
mov
xor
out
and
mov
lock
les
fadds
aas
popa
mov
imul
outsl
xor
sti
ficomps
ficompl
pop
pop
shll
cmpsl
loopne
mov
fcmovu
loopne
cltd
sbb
loopne
aaa
aad
enter
jo
loopne
push
xchg
inc
test
cmp
jmp
cmp
mov
adc
cli
fistpll
and
popf
pusha
push
cmp
xchg
scas
or
repnz
data16
fs
ds
jbe
rcll
cli
xchg
nop
pop
add
jnp
std
push
out
xchg
inc
push
and
mov
jle
pop
popf
and
scas
jbe
call
mov
xor
inc
xchg
rcrb
inc
lahf
jo
ret
add
and
jmp
movsb
xchg
mov
rcrb
or
jns
mov
xchg
icebp
sub
std
out
out
stc
and
mov
pop
mov
inc
ss
or
mov
test
mov
popf
mov
ficompl
outsl
lock
mov
pop
pop
inc
out
rolb
or
fisubrs
inc
test
insb
and
mov
fildl
inc
stc
jge
mov
jg
push
out
mov
adc
pop
cmpsl
shrb
pop
test
mov
int
insb
dec
mov
mov
push
mov
hlt
dec
mov
sbb
popf
mov
scas
pop
lcall
fadd
push
mov
pop
inc
push
cmp
pop
cwtl
aaa
or
scas
test
xor
xor
mov
mov
cli
dec
sbb
ljmp
fldt
push
and
xchg
dec
or
stos
fstpt
out
inc
inc
pop
imul
mov
inc
mov
dec
call
push
mov
jae
cltd
mov
add
aaa
sbb
pop
call
push
scas
or
mov
call
or
jnp
mov
mov
lods
mov
push
gs
xor
mov
stos
pop
xlat
iret
xor
push
iret
xchg
mull
sbb
push
push
cmc
adc
fs
stc
push
jmp
pop
push
js
andb
sub
xor
pop
test
pop
push
push
shrb
fldenv
lahf
cmp
xchg
setae
es
dec
out
je
mov
rcrl
cmpsb
sub
stc
jnp
inc
sbb
jmp
xlat
stos
sub
int3
subb
faddl
sub
push
in
leave
or
lods
leave
sub
fld
cltd
lea
inc
testl
fnstenv
mov
push
push
inc
or
lea
pop
push
mov
data16
cmp
stc
pop
mov
mov
xor
push
jp
mov
push
add
xchg
push
mov
gs
add
mov
popf
mov
xlat
add
mov
inc
xor
xor
push
push
dec
sahf
mov
xchg
loope
cmpsb
cmp
ds
into
lcall
adc
xlat
je
or
push
jns
sub
int3
data16
outsb
insb
pop
in
test
sub
dec
ret
add
dec
and
out
iret
push
mov
outsl
mov
mov
mov
and
rorb
cld
pop
shr
mov
xchg
mov
and
or
clc
add
push
ljmp
adc
mov
incb
pop
push
movsl
popa
xchg
dec
pop
clc
stos
mov
leave
arpl
arpl
div
insl
in
push
scas
daa
sub
mov
pop
push
aam
pop
xchg
fmull
sahf
mov
inc
adc
js
xchg
add
int
test
test
sub
push
lcall
loop
mov
mov
push
mov
jo
dec
das
mov
pop
aam
js
mov
mov
int3
xchg
leave
je
movsb
sbb
sbb
outsb
faddp
dec
lock
pusha
repz
adc
popf
or
out
sbbl
add
scas
adc
mov
jns
adc
bound
insl
fcompl
aas
jle
or
mov
lret
insl
jmp
xorl
aam
cmpsl
push
nop
inc
mov
inc
dec
rolb
adc
icebp
ss
push
dec
iret
push
aaa
cmp
rclb
add
popa
fcmovnu
xchg
cltd
push
adc
repnz
mov
adc
sub
insb
popa
sti
jne
push
mov
jecxz
jle
and
or
sbb
mov
scas
xor
xor
mov
push
out
inc
stos
xchg
mov
cmp
push
push
cmpsl
leave
or
leave
ja
xor
lds
loopne
xchg
add
push
cli
pop
jno
adc
fmull
add
fs
aam
pop
loope
dec
mov
pop
inc
loopne
jp
lcall
les
jne
sbb
xchg
and
es
xchg
sbb
fwait
mov
adc
jmp
sti
dec
inc
jle
inc
jge
cmp
arpl
cmp
inc
push
addl
inc
inc
arpl
stc
test
testb
mov
stc
out
rcl
in
and
iret
and
lock
inc
mov
inc
insb
pusha
sti
mov
fiadds
xchg
out
cmpsl
jp
repz
int
jne
stos
aas
dec
jp
out
mov
dec
fstpt
aaa
xchg
push
xchg
std
add
and
mov
mov
dec
lods
jp
mov
push
xor
adc
jmp
pop
out
sbb
cmp
add
mov
adc
mul
lret
xchg
push
xchg
push
jo
mov
lock
cmpsb
jge
shll
pusha
je
mov
jb
lods
scas
arpl
addr16
lea
pop
jg
push
push
mov
test
shrl
push
test
mov
arpl
mov
fcomi
cmp
jae
or
dec
push
mov
inc
out
insb
dec
pop
out
cmpsb
adc
push
jg
adc
mov
xor
jnp
xor
or
mov
testl
push
add
rcrb
sbb
jg
jg
or
or
ds
mov
and
shll
adc
cmp
add
add
xor
jg
fsubr
imull
mov
aam
fiaddl
leave
in
lods
or
cltd
mov
aam
movsb
es
inc
add
pop
push
lahf
lret
inc
pop
mov
inc
or
aaa
push
add
insb
jp
jmp
xchg
dec
fldenv
loope
sub
or
sti
pop
pushf
cli
xlat
sbb
bound
sub
insl
sbb
notb
int3
gs
mov
mov
push
call
push
and
aad
insl
dec
push
or
and
xchg
push
pop
lcall
out
push
mov
subb
mov
dec
sub
out
mov
add
jne
std
bnd
mov
jg
mov
sub
mov
insb
xlat
data16
mov
fs
mov
imul
vmptrld
sub
bound
fistpll
decl
cmp
mov
stc
xor
add
sub
lret
cmp
orl
add
push
lcall
js
rcrl
lock
loope
or
in
dec
mov
out
jno
es
std
js
rcrl
insb
scas
in
mov
inc
pushf
jae
lock
mov
inc
das
in
lret
adc
xlat
fildl
movsl
lock
inc
fisttps
jbe
sub
mov
dec
xchg
sahf
call
mov
cmp
or
hlt
xor
loopne
jno
ret
cltd
loop
add
insb
cmpb
add
cmp
mov
sub
jne
mov
push
cmpsl
ja
jmp
jo
fnsave
sbb
mov
xchg
fildll
and
sbb
pop
push
pusha
adc
or
dec
in
mov
fstps
sub
enter
mov
xor
clc
pop
inc
and
jecxz
daa
mov
out
add
mov
loop
cmpsl
mov
fldcw
cli
mov
jns
mov
inc
daa
js
inc
inc
mov
mov
push
or
pop
sub
sti
ljmp
mov
xor
add
sub
cmc
xchg
rorb
cmp
mov
mov
je
jb
mov
sbb
xor
jmp
xchg
pop
mov
mov
jmp
jo
in
inc
dec
pop
cmp
sub
cltd
xchg
cmpl
add
pop
scas
cmp
or
mov
lock
popw
fsubr
lds
lret
add
push
jnp
aas
icebp
jb
or
xor
adc
or
loope
push
mov
mov
in
orb
shlb
fldenv
mov
add
dec
push
pop
nop
or
cmp
ljmp
icebp
mov
and
xchg
data16
mov
cmpsb
out
out
pop
dec
jle
dec
push
stos
add
pushf
loope
push
adc
mov
adc
in
push
mov
lock
subl
ds
inc
dec
add
stc
pusha
fstl
pop
xchg
mov
movsl
lea
aaa
lods
in
mov
mov
and
sub
lea
mov
sub
adc
ljmp
sub
xchg
scas
push
and
pop
pushf
das
xchg
sub
adc
stos
lods
shrl
sbb
repnz
in
ffreep
mov
call
xor
test
test
xor
fs
xor
insb
leave
leave
mov
xchg
pop
fs
cmp
cmp
push
setb
push
das
icebp
dec
fildl
sbb
decb
cmp
aaa
mov
xchg
add
lods
sbb
ficomps
dec
leave
mov
xchg
mov
xchg
sub
mov
dec
fwait
adc
fdivp
cmp
imul
jle
or
fsubl
lock
dec
push
lret
xchg
mov
jg
pop
insb
fucomp
ljmp
xchg
add
je
and
lock
pop
shll
pop
in
cmp
dec
inc
inc
sub
fs
shlb
mov
xor
shl
dec
cmp
into
out
dec
movsl
imul
test
roll
xchg
fisubrs
xlat
inc
insb
dec
shl
inc
scas
mov
popa
xchg
pop
ret
fwait
arpl
sahf
jno
sub
jae
jle
in
les
je
addr16
add
xchg
fidivl
sub
cmpsb
test
sbb
pop
push
mov
cli
mov
repnz
bound
psrlq
shrl
lods
je
pop
shlb
jb
loopne
add
xchg
scas
sti
mov
adc
loop
jae
xchg
sub
loop
imul
mov
mov
mov
sbb
or
push
ss
inc
push
lods
scas
xchg
bound
and
lret
scas
fistps
les
andb
decl
adc
jbe
mov
push
push
pop
pop
xchg
mov
ret
in
mov
fs
adc
pop
in
push
test
test
sbb
call
ds
ljmp
dec
nop
mov
xor
rolb
icebp
gs
int
sbb
ret
inc
daa
outsb
jp
lods
cmp
subb
pop
into
lds
scas
mov
xchg
mov
notl
insl
add
inc
mov
nop
mov
lahf
mov
popf
jl
xor
iret
add
leave
push
mov
lret
pop
lahf
adc
loop
mov
mov
jmp
loopne
or
or
cmc
mov
cs
and
mov
sbb
xor
sbb
inc
fcmovu
fisubs
popf
mov
sahf
and
dec
jmp
lret
adc
mov
push
es
nop
xor
mov
call
jle
in
mov
and
xchg
xchg
mov
push
jp
jb
mov
lods
jge
pop
test
sbbb
ss
repnz
adc
pop
sbbb
or
arpl
mov
and
js
push
xchg
out
dec
xor
sti
pop
or
push
jne
cmp
dec
testl
movsl
mov
xorb
fwait
sub
lret
xchg
data16
lods
jecxz
cs
jne
aas
adc
xor
xchg
imul
mov
mov
dec
aaa
icebp
mov
daa
dec
or
fldl
sahf
pushf
mov
sbbl
cwtl
adc
jne
jecxz
xchg
sbbb
dec
sahf
aam
ret
lock
pop
mov
push
inc
enter
pop
add
mov
shl
xchg
mov
add
pushf
mov
cltd
mov
push
pop
mov
rcrb
jl
push
fcomps
mov
js
out
xor
sbb
push
and
or
xchg
inc
lret
sbb
dec
out
mov
data16
and
xchg
je
mov
pop
je
mov
mov
les
dec
ret
dec
push
outsb
mov
sbb
jl
test
add
shl
in
ret
cwtl
adc
mov
in
movzbl
mov
add
idivb
cmc
pop
pop
cmp
push
xchg
xchg
push
jns
data16
fistl
jp
cmp
mov
lcall
stos
lea
mov
mov
dec
cmpsb
mov
and
shll
lret
int
push
and
insl
add
mov
sub
add
mov
mov
jae
ss
lock
pop
jae
adc
mov
gs
insb
jno
jg
lcall
push
jge
lock
in
push
jae
mov
shll
mov
cmp
ss
pop
pop
adc
rorb
js
add
push
nop
add
pop
insl
and
fmulp
call
or
jnp
imul
shr
xchg
divb
lahf
arpl
insb
and
cli
mov
adc
sbb
dec
adc
clc
loope
mov
fs
dec
sbb
lods
shll
lea
std
pop
ret
mov
inc
or
movsb
mov
arpl
xchg
out
cltd
adc
fldt
mov
jp
inc
adc
sub
add
jo
in
mov
aam
sbb
loopne
cmp
je
add
mov
hlt
mov
add
in
cmpsb
ss
mov
dec
cmpsb
or
jno
inc
icebp
rcrb
sbbl
aam
sbb
outsb
sub
loope
divb
lods
xchg
xchg
movsl
pop
push
aam
and
inc
ret
cwtl
xchg
sbb
testb
cmc
sbb
or
xchg
sub
mov
adc
mov
or
and
das
scas
xchg
or
mov
enter
add
add
xor
adc
rolb
sub
sub
adc
inc
lock
xchg
push
adc
ja
sbb
pop
pop
popf
lret
or
cmp
scas
int
sbbl
in
xlat
clc
ds
ljmp
mov
inc
cld
add
pop
xchg
divb
push
adc
rcr
in
mov
and
mov
xor
and
sbb
bound
stos
dec
add
add
push
loopne
scas
out
xchg
push
lea
pushf
adc
cld
outsl
addr16
adc
mov
mov
inc
pusha
mov
mov
cmp
or
inc
mov
and
stos
aaa
push
xchg
cmp
shll
int3
push
les
or
jmp
lret
ds
popa
xor
push
and
das
cli
dec
rcll
xchg
add
pop
pusha
xor
pusha
aas
mov
insb
leave
jg
add
inc
pop
repz
incb
add
imul
pop
mov
loope
jno
gs
negl
mov
sbb
loop
cmp
sbb
cmp
jo
or
and
jno
mov
das
cmp
jecxz
inc
into
test
xchg
data16
lahf
or
mov
add
popa
push
push
lret
mov
and
mov
fildl
xchg
cmp
enter
cld
fimuls
pop
xor
jmp
insl
mov
adc
outsl
add
cmp
scas
dec
add
mov
jle
jecxz
ret
outsl
xor
xlat
scas
ja
enter
and
pop
out
cmc
xor
es
test
sbb
jle
inc
jb
or
rolb
inc
std
dec
jmp
fistl
rclb
stos
xchg
push
mov
mov
mov
inc
aad
das
dec
das
or
in
in
or
stos
shr
and
push
out
in
and
push
pop
cmp
loop
xor
out
lods
orps
push
sub
icebp
and
mov
aaa
sarl
cmp
jl
cmp
imul
stos
insl
in
int
aad
popf
and
mov
shll
sarl
xor
outsl
mov
add
popf
xlat
maskmovq
divl
pusha
xchg
rclb
lcall
loope
pop
nop
and
xor
or
mov
push
gs
ljmp
movsl
in
mov
dec
jecxz
shr
cmc
pusha
sub
gs
add
int
sbbb
pop
mov
aad
aam
mov
adc
cwtl
jle
adc
push
out
outsb
mov
pusha
popa
sti
jmp
push
ret
out
sub
cmp
fisubs
jne
mov
and
hlt
cmp
orb
rclb
xchg
cmpsl
iret
pop
sti
or
xor
es
push
das
ret
js
aas
aaa
loopne
push
lock
and
xchg
jns
rorb
xor
arpl
jle
in
repz
xchg
fwait
rcr
mov
sub
in
add
mov
icebp
dec
in
insb
das
and
hlt
adc
bound
cmpl
cmp
imul
xchg
repz
in
jo
mov
aas
jae
pop
mov
xchg
pop
and
mov
pop
sub
xchg
lds
ret
loope
mov
ljmp
jle
xor
inc
mov
fld
rsqrtps
mov
sti
hlt
fldt
push
add
jg
dec
lods
addr16
lds
repnz
aas
xor
mov
mull
imul
mov
repnz
mov
out
cwtl
fcomps
aad
adc
loope
pop
push
pushf
push
xchg
adc
xchg
lahf
and
cltd
scas
dec
mov
sbb
xchg
sub
shr
daa
outsb
ds
out
push
aaa
shrl
push
dec
jg
ja
out
push
out
loop
push
cld
femms
cmc
cmp
fstl
mov
xlat
call
aad
enter
ret
jge
dec
or
push
sub
nop
or
rcr
std
dec
fdivs
ja
test
js
adcb
push
add
sahf
hlt
mov
outsb
movsb
roll
inc
sub
rorb
mov
rcrl
call
dec
out
sbb
loopne
popf
add
inc
pop
out
cmp
mov
inc
inc
push
xor
cli
pop
leave
das
push
movb
xchg
sbb
adc
add
psllq
mov
shl
mov
jb
sub
pop
pop
push
push
adc
and
outsb
pop
adc
xchg
bound
and
fsubs
icebp
push
mov
xor
hlt
push
xchg
int3
rep
divl
shrl
aad
mov
xchg
push
in
inc
push
xor
pop
enter
push
loop
sub
popa
leave
mov
fst
out
stos
ss
xor
fdivrp
xchg
sarl
push
fs
mov
and
xor
mov
dec
jns
mov
jmp
outsl
fs
addr16
jmp
adc
xor
xchg
xorb
xor
stos
inc
imul
stos
xchg
push
divb
or
and
ret
sbb
mov
mov
ficompl
movsb
push
daa
or
sub
fisubl
ret
leave
gs
jbe
repz
das
fcoms
dec
push
int3
popf
or
outsb
add
push
jp
and
in
lret
push
cmp
subb
pop
add
jnp
mov
sub
or
loopne
dec
add
fstps
fbstp
cld
sldt
test
int
lock
mov
adc
out
ja
addr16
movsb
push
xchg
jno
sub
cmpsl
sbb
jmp
add
inc
daa
jnp
cmpsl
fxch
icebp
nop
adc
dec
add
sub
pushf
outsl
lahf
xor
stc
cmc
add
stc
cmp
pop
clc
ds
or
mov
gs
cmp
not
push
sti
sbb
inc
ds
ljmp
enter
imul
mov
mov
imull
insl
xor
jb
jns
sahf
cmpsb
popa
adc
jb
ret
push
loope
sahf
imul
add
loopne
adc
jp
and
jle
mov
mov
pop
movsl
inc
js
pop
test
popf
scas
aas
lock
pop
cli
or
icebp
test
hlt
sahf
xchg
jno
imul
mov
adc
cmp
adc
mov
dec
dec
cmc
pop
sub
and
dec
bswap
xor
or
jg
dec
cs
xchg
test
popa
jmp
xchg
mov
mov
dec
movsbl
arpl
pop
mov
stos
lcall
nop
and
pop
les
push
aam
jp
cmpsb
mov
stos
jl
sub
xchg
mov
inc
addr16
cmpsl
bound
icebp
movsl
ja
leave
cmpl
es
in
jecxz
paddusb
pusha
loop
popf
xchg
sbb
jnp
clc
push
jmp
jmp
fadd
cmp
aad
loope
xchg
add
dec
inc
enter
xor
pop
sbb
jb
inc
adc
orl
fwait
mov
out
pop
test
sub
push
xor
cmp
mov
jns
sub
xor
fimuls
push
jno
push
or
aad
sub
cmpsb
xor
movsl
push
jmp
xor
les
repz
jle
movsl
lods
popf
mov
les
cmpsb
mov
ds
jnp
int3
rcr
outsl
jle
out
fisubl
insl
sbb
fidivs
add
cvttss2si
push
inc
jo
inc
mov
or
bound
fs
xor
xchg
movl
cmpsl
lret
push
or
jo
push
in
test
cmp
jno
pop
rcrb
lahf
push
xor
push
testb
stos
and
testb
cmp
fisttpl
ja
dec
imul
aaa
movsb
jp
inc
test
aad
jmp
aad
aam
dec
in
jg
xor
or
aad
mov
xchg
and
or
test
xchg
and
mov
add
mov
mov
and
mov
mov
push
push
sti
movsb
mov
call
jmp
in
fimull
fucomip
cmp
imul
sub
lahf
push
fs
rorw
cwtl
mov
leave
stos
pop
add
and
xor
mov
pop
insl
decl
push
xor
lcall
dec
cmovg
stos
inc
jmp
loop
cmp
push
fimull
lret
adc
rolb
push
jle
cwtl
sub
int
ja
mov
xchg
in
cltd
adc
cmp
nop
out
push
mov
cli
adc
cmc
cmp
lock
dec
mov
movsb
sub
push
sub
adc
test
repnz
push
add
inc
lods
add
and
gs
movsb
jns
or
jae
ficompl
xchg
imul
ds
loope
shl
mov
sub
sbb
mov
mov
ret
jle
inc
and
dec
int3
pop
and
ret
inc
in
pop
addr16
hlt
insb
loope
cmpsl
mov
fsubl
mov
mov
in
dec
push
and
ret
hlt
sarb
outsl
add
je
stos
loope
xor
xor
add
xchg
jbe
lock
cmpsb
inc
mov
mov
sub
in
imul
sub
dec
jnp
gs
inc
out
aaa
in
ss
sub
push
hlt
jge
xchg
or
std
dec
rorb
lds
jb
inc
cmc
dec
je
out
jg
leave
jmp
out
fmull
sahf
inc
icebp
inc
roll
fists
mov
xchg
sub
jg
cwtl
add
or
pop
aam
cwtl
pop
push
xchg
adc
cmp
jno
mov
push
jno
adc
and
mov
and
add
xchg
sub
or
sti
leave
xor
mov
xor
pop
or
pusha
mov
inc
pop
std
loopne
int3
push
subl
mov
push
sub
pop
testl
dec
dec
inc
adc
sbb
jg
cmpsb
sub
push
xor
addb
cmp
jb
mov
enter
inc
lahf
pop
add
fists
pop
or
mov
outsb
pop
cmc
lahf
scas
push
jecxz
out
pop
or
add
cmp
and
adc
cmp
cmc
xchg
jmp
sub
bnd
test
xchg
leave
jecxz
jbe
mov
insb
push
xchg
and
js
popa
aaa
jno
xchg
xchg
sbb
mulps
daa
int
bound
fisubrs
out
sti
mov
gs
mov
jo
and
push
push
mov
jp
es
mov
jne
ljmp
sub
dec
leave
mov
lock
adc
aaa
lods
int
inc
push
hlt
xor
push
popf
stc
cmp
xor
mov
call
stos
lods
or
jle
pop
xchg
test
xchg
inc
mov
push
test
test
sbb
out
dec
ficomps
test
adc
loopne
test
aas
adc
fdivs
pop
ret
cmc
rep
sub
ja
or
lahf
push
hlt
or
xchg
xchg
push
movsl
lret
insl
stos
xor
pop
sub
and
pop
pop
gs
stos
jne
lahf
cmp
or
sbb
jns
add
inc
enter
movsb
mov
jge
rorb
test
or
lods
movsl
outsl
push
in
dec
add
push
pop
int
jecxz
js
nop
out
push
mov
sbb
push
mov
in
lahf
mov
lcall
int3
xor
into
fnstcw
or
jecxz
cmp
jnp
mov
insl
push
mov
mov
cmp
jmp
clc
add
hlt
dec
cmc
mov
insb
arpl
stos
inc
call
or
add
xchg
jmp
movsl
fwait
pop
andb
or
jecxz
fs
mov
ljmp
push
imul
out
jp
and
lahf
push
adc
es
xor
scas
out
push
jne
mov
add
sar
jne
adc
pop
add
or
in
std
push
inc
imul
mov
lret
data16
mov
outsb
cmpsb
inc
pusha
int3
sarl
fwait
add
popa
iret
jcxz
jbe
jns
xchg
and
cmpsl
stos
hlt
sahf
mov
mov
mov
scas
stos
push
call
or
xchg
cmc
mov
pop
xor
sbb
pop
pop
xchg
jp
addr16
hlt
pushl
cmp
jmp
cltd
cmpsb
jne
jle
adc
pshufw
stc
ret
in
lods
or
sub
les
pop
dec
sahf
mov
adc
push
xor
movsb
sbb
pop
xor
sbb
dec
inc
cmp
gs
sub
in
or
push
sahf
sub
mov
add
iret
and
out
or
xchg
das
xchg
mov
push
jbe
adc
mov
jge
cmp
push
int
repnz
push
cwtl
dec
or
cmc
iret
cwtl
jne
aad
addl
pusha
out
inc
call
and
mov
test
call
loop
mov
mov
cltd
or
dec
jnp
mov
pop
add
loopne
das
or
out
dec
add
cltd
dec
push
repnz
cltd
pusha
cld
jle
and
test
aad
or
out
loope
test
pop
jns
jo
lods
xchg
imulb
add
into
push
outsl
insl
cmp
movsb
out
push
fwait
stos
jle
ss
mov
test
shlb
sub
jecxz
ror
loopne
push
xor
cli
add
mov
or
sub
test
sarl
xchg
xchg
sarl
add
nop
ljmpw
cmc
pusha
cmp
xor
add
into
int3
adc
inc
adc
loopne
cmpsl
jno,pn
out
daa
sbb
jae
popf
xchg
jnp
or
xchg
sub
jo
ljmp
sbb
pop
mov
in
adc
clc
shlb
daa
and
inc
popa
scas
add
scas
clc
in
inc
inc
rol
mov
mov
xchg
lock
xor
xor
cmp
push
ror
mov
mov
mov
scas
ds
dec
xchg
arpl
mov
mov
xchg
jecxz
bnd
and
outsb
add
jae
push
mov
stos
ss
or
test
shl
lods
fucomip
push
fs
pop
lahf
inc
mov
popf
inc
and
out
fstl
repz
rcll
mov
pop
push
push
cmp
sbb
scas
mov
mov
xchg
inc
repnz
int
pop
jo
insl
and
leave
xchg
test
pop
scas
fstpl
push
lock
sti
push
or
xor
or
xor
std
cmp
je
sahf
mov
lahf
dec
arpl
inc
sub
cmpb
xlat
sub
xor
adc
ss
push
shrb
sub
dec
repz
push
sarb
repnz
mov
fcompl
mov
aam
push
dec
call
stc
jmp
rcrb
mov
repnz
xchg
cli
or
sub
fistpll
jmp
sub
mov
mov
or
mov
xchg
into
insb
ret
pop
jae
int
xchg
enter
cmp
dec
jmp
aas
out
fsubs
mov
test
daa
or
jmp
loop
dec
gs
fcmovbe
lcall
outsl
and
xchg
or
mov
movsb
mov
add
and
xor
in
pusha
ffree
pop
or
arpl
inc
push
mov
lcall
std
xchg
dec
dec
lret
cs
ljmp
dec
shlb
add
in
lds
xchg
bound
lods
insb
mov
outsl
mov
in
or
inc
adcb
xor
ljmp
popf
fs
pop
shl
sub
ljmp
mov
test
mov
sub
movsb
jge
fistl
out
ja
jns
movsb
fmulp
xor
in
and
xchg
cmpsb
fcomip
js
fwait
jle
test
stos
and
je
add
xchg
mov
icebp
cmp
pop
or
push
jg
sti
jge
stc
or
or
jmp
cmp
stc
ret
fsubl
cmp
mov
mov
push
mov
xor
jecxz
scas
ret
add
daa
aas
push
fcmovb
scas
pushf
frstor
in
cmp
add
cmp
call
xor
pop
fisubrs
jb
cmp
jbe
aam
testb
addr16
sbb
aaa
push
xor
add
shlb
stc
xlat
jno
cltd
jl
mov
cmp
pop
mov
xor
jle
jns
leave
add
pop
inc
insb
xor
pop
sbb
negl
aas
orb
push
pop
jb
and
or
cmp
in
push
and
ljmp
cs
jns
xchg
adc
daa
les
sarl
lahf
leave
add
enter
out
mov
nop
out
popf
clc
iret
and
inc
loopne
sub
ret
iret
mov
pop
cwtl
xor
adc
or
add
mov
or
test
cli
mov
clc
ficompl
repz
andl
clc
stc
jecxz
out
add
scas
mov
dec
aam
loope
add
aam
and
sub
pop
inc
inc
mov
fmull
sbb
pushf
insl
jns
xchg
popf
add
cs
adc
loopne
orl
cwtl
mov
call
jge
mov
pop
mov
test
loope
fnsave
repz
xchg
cmp
shl
stos
popf
pushf
mov
js
aas
xor
pop
and
push
jno
inc
mov
xchg
mov
imulb
sub
lods
scas
and
pushf
daa
adc
inc
loop
sbb
test
adc
lock
adc
rcr
xchg
xchg
aaa
push
sub
xchg
stos
jge
sahf
xchg
dec
int3
pop
inc
lods
xchg
loop
in
or
lcall
cltd
sbb
movb
gs
sub
dec
arpl
rol
mov
or
lea
aas
or
lods
sbb
repnz
cwtl
das
mov
dec
in
sub
icebp
testb
cwtl
sub
shll
cld
aad
repnz
cmp
push
xchg
push
mov
bound
dec
sahf
popa
jl
mov
sub
push
pop
js
mov
ljmp
pop
in
scas
xchg
xor
push
jno
push
jg
adcl
movsl
xchg
dec
cmp
jle
cltd
scas
negb
sub
pop
lods
add
nop
mov
out
dec
pop
jmp
cmp
pop
mov
pop
test
imul
jbe
loop
aad
or
cli
insl
cmc
xor
fstp
xor
xchg
mov
hlt
pop
jmp
in
ljmp
ljmp
and
roll
sbb
mov
mov
push
cmc
cmp
mov
jecxz
adc
imul
push
sub
pop
cmpsb
ficoms
sbb
lods
jp
dec
push
daa
jl
inc
add
jns
inc
scas
sub
jae
dec
popf
lock
gs
mov
decl
dec
jae
mov
jne
ret
mov
push
xchg
sbbb
add
jo
out
cmc
aas
aas
data16
test
cs
lock
loope
imul
cld
or
mov
shrb
inc
shll
daa
popf
roll
mov
add
movsl
lea
test
xchg
icebp
lods
fstl
or
dec
sub
sbb
cli
fnclex
stos
sbb
mov
loopne
ljmp
or
loopne
inc
test
sub
sub
sub
stos
pop
sub
fildl
jns
outsl
ret
ljmp
jle
push
sbb
subb
cmpsb
cmp
push
xlat
pop
xor
or
pop
xchg
lcall
cmpsb
xchg
out
cmpsb
arpl
bound
mov
pop
je
mov
fimull
lea
xchg
shrl
mov
cli
repnz
mov
ss
pop
inc
add
push
loop
mov
pop
aam
int3
imul
mov
fs
push
rorb
xlat
cwtl
fsubs
xor
pop
lcall
sbb
hlt
add
jnp
inc
mov
outsb
or
stos
aas
jne
repnz
fmull
imul
mov
movsl
fsubrl
jp
jb
loop
in
sbb
icebp
sub
jl
out
imul
int3
pop
mov
out
repnz
popf
sbb
jbe
and
dec
lea
add
xor
fdivrp
dec
sbb
cmpl
pop
add
xchg
pushf
jbe
mov
jne
mov
and
ror
cli
repnz
loopne
lock
std
xor
mov
sub
dec
in
gs
mov
xor
cmp
subb
out
mov
inc
imul
and
cmp
cmpl
int3
stos
xchg
sahf
int3
mov
loop
mov
adc
push
test
jmp
or
sahf
mov
mov
fs
jp
out
das
aam
or
mov
loop
xchg
lock
in
iret
and
cmp
sti
aas
and
xchg
imul
aas
imul
jns
aas
sbb
mov
dec
cwtl
in
inc
ljmp
sbb
stc
and
test
pop
lea
pop
clc
dec
loop
aas
sbb
push
in
btsl
shlb
imul
dec
mov
scas
jg
push
jecxz
mov
mov
cld
or
dec
adc
scas
add
lods
rcrl
add
push
xlat
adc
jge
fcomps
sbb
pop
pusha
insb
fidivl
push
or
bound
push
xor
adc
outsb
sub
xchg
inc
lea
mov
push
adc
aaa
and
frstor
mov
imul
push
push
repz
xor
pusha
sub
add
mov
push
pop
dec
sub
cmc
mov
xor
out
sub
add
fcoml
movsb
iret
xchg
dec
inc
push
cmpsl
mov
ljmp
dec
pushf
test
or
and
std
int
jae
jno
fwait
sub
sub
insb
mov
pop
cmp
sub
inc
sbb
sbb
lds
dec
jmp
cwtl
mov
xchg
push
loopne
pop
adc
pusha
ud0
leave
adc
mov
cmpsb
pop
out
inc
mov
jnp
mov
enter
sbb
pop
test
roll
aam
fldenv
sbb
loopne,pt
mov
cmpsb
push
cmp
das
jne
jle
adc
imul
mov
lcall
dec
add
imul
test
sbb
ds
fs
and
sti
xchg
xchg
cmc
icebp
add
test
jp
xor
jo
orb
repz
xchg
stc
fistpl
test
dec
addr16
adc
xor
jbe
in
mov
fwait
daa
aas
ljmp
pop
inc
push
inc
and
in
add
ds
mov
push
int3
sub
loope
jnp
xchg
inc
pop
hlt
xor
jae
outsl
or
xor
dec
fsts
adc
insb
imulb
ret
loope
in
lret
out
sub
idivb
sub
jno
repz
or
mov
or
or
adc
iret
dec
fnstenv
cmp
mov
lock
xor
push
add
insl
adc
sbb
int3
mov
repnz
and
inc
push
insb
mov
adc
and
in
and
adcb
lahf
xor
and
les
test
mov
ja
movsb
xchg
rorl
and
xchg
test
bnd
notl
repz
outsb
mov
inc
ds
mov
pop
in
stos
mov
imul
push
jae
lahf
movsb
cmp
fdivp
out
push
sbb
insl
xor
adc
add
out
inc
and
push
daa
sbb
lods
mov
adc
add
mov
fisubs
iret
ja
cwtl
shr
inc
inc
mov
or
sub
into
mov
outsl
jo
push
aad
sub
jmp
into
xchg
rcl
cmp
nop
xor
cmp
push
dec
fmull
adc
mov
xchg
movsb
orb
js
popa
pop
shlb
ret
mov
mull
mov
aaa
add
or
jns
in
mov
and
add
jno
dec
js
add
inc
adc
mov
push
add
cwtl
inc
imul
int
rclb
fsubrs
add
pusha
scas
rcl
cli
adc
cli
or
mov
mov
mov
pop
or
mov
add
inc
movsl
or
mov
xchg
cmp
dec
jno
push
inc
into
pop
popa
adcb
out
jmp
sti
js
mov
and
icebp
lods
sbb
lods
jp
adc
inc
fucomi
in
push
cmpsb
jl
nop
roll
and
fcoml
add
ror
int
insb
iret
mov
daa
js
xor
inc
mov
add
aad
jecxz
insb
mov
gs
pop
sub
add
ret
test
cmpb
cli
mov
incb
mov
lcall
push
jmp
fwait
jae
xor
mov
dec
mov
aam
and
fisttpl
sahf
call
test
jns
and
repnz
enter
sub
cltd
jnp
test
inc
push
vcvtsi2ssl
mov
repz
int
decb
cld
cmp
sub
fistps
pop
movsl
inc
repz
sub
cmp
stos
test
es
cmpl
push
gs
jbe
lods
out
xor
mov
in
mov
lods
lea
inc
cmc
push
jbe
imul
int3
jns
in
daa
filds
adc
aam
xchg
arpl
push
push
push
xorb
or
mov
pop
xchg
push
ss
xor
sub
jae
mov
inc
add
push
outsb
shll
jne
popa
xor
aad
mov
adc
or
jecxz
jb
pop
and
jnp
rolb
mov
dec
xchg
push
add
add
dec
mov
dec
xor
or
gs
cmp
pop
mov
ja
or
mov
add
push
push
or
fmuls
xlat
dec
pop
stc
das
in
xor
scas
pop
pop
repz
in
nop
nop
js
faddl
inc
ja
mov
paddd
rorb
and
adc
mov
mov
sub
test
jo
ds
mov
idivb
mov
jbe
outsb
dec
xchg
xchg
mov
andb
xchg
ds
mov
lods
adc
xor
test
mov
jae
scas
xchg
arpl
push
lcall
fsubl
ret
mov
outsb
adc
push
sti
sub
push
sub
movsb
xor
sbb
mov
jbe
les
fstpt
mov
xor
fidivrs
cmpsb
inc
stos
sbb
ds
jns
fdivrl
push
lret
xchg
fidivs
dec
sub
inc
push
pop
inc
pop
clc
cmc
inc
mov
inc
mov
mov
mov
and
faddl
add
inc
aaa
mov
mov
or
or
sarl
jo
femms
int
mov
in
mov
push
ret
inc
sbb
insl
sbb
scas
mov
int3
or
ds
shll
add
ss
mov
gs
mov
dec
ficoms
in
imul
xor
lods
and
and
inc
fisubrl
test
ja
imul
push
mov
mov
ljmp
xchg
mov
rclb
mov
add
repnz
repnz
jmp
scas
push
jecxz
in
packuswb
outsb
fidivrs
or
adc
mov
lea
cmc
out
loop
out
cmovl
insb
fnstenv
push
mov
jg
cmp
push
mov
pop
shr
mov
pop
clc
aad
mov
je
pop
and
scas
je
or
loop
fucomi
mov
and
out
fldcw
daa
jae
js
push
daa
stc
aad
int3
outsl
inc
inc
lret
add
ret
jl
and
sub
and
roll
mov
int3
xor
jecxz
xchg
test
xchg
cltd
inc
test
insb
mov
pop
cmp
shl
sub
push
nop
xchg
mov
sub
daa
mov
hlt
fdecstp
sub
clc
mov
frstor
mov
je
dec
outsl
fadd
inc
pop
push
sbb
imul
aaa
cmp
jmp
ficoml
pop
mov
pusha
leave
push
jb
or
xchg
ficompl
jbe
popa
mov
sbb
push
mov
insl
jp
pop
mov
sub
xchg
cmp
pop
cli
iret
aas
aad
leave
sti
xchg
shlb
vmovss
adc
adc
inc
inc
popf
ja
mov
or
mov
sbbb
inc
mov
add
cs
mov
xchg
push
dec
jg
push
mov
cmp
shll
dec
int
cmp
loop
ret
loop
test
gs
pop
mov
aas
xor
loope
lcall
mov
inc
mov
inc
mov
mov
mov
lods
movsl
cmpsl
cwtl
or
cmpb
insb
ss
mov
loop
rol
fwait
dec
cmp
stos
sahf
dec
xor
jns
cmp
icebp
push
scas
add
lcall
push
das
cmp
das
xchg
ficompl
xor
imul
out
test
fwait
test
add
adc
mov
cmpsl
mov
andb
jle
xchg
leave
push
aas
and
push
sbb
jae
into
cmpsl
sbb
ficoms
insl
jo
ds
push
pop
addl
call
mov
arpl
mov
and
sbbl
or
fcmovnu
cs
and
movsl
cmp
out
jb
nop
mov
mov
nop
adc
jg
mov
sbb
in
jp
sahf
add
xlat
in
and
xchg
sbb
push
ljmp
bound
and
jno
repz
adc
clc
cld
lock
aaa
fnstsw
pop
inc
loope
hlt
aas
sbb
sub
push
movsl
call
lea
sar
cltd
sbb
xchg
pop
mov
jl
dec
ss
push
jo
lret
cs
mov
add
lds
cmpsb
mov
sbb
nop
stc
sbb
mov
fildl
mov
push
sbb
mov
sbb
jbe
push
adc
and
repz
mov
aam
fucom
aas
bound
pop
sbb
mov
or
mov
in
mov
idivb
test
jns
adc
outsb
adcb
scas
fwait
cli
shl
pop
popa
add
arpl
jb,pn
testb
push
cmc
scas
mov
mov
sub
hlt
loope
int
cmp
js
mov
fsub
jo
dec
sub
jle
lahf
jl
data16
xlat
pushf
lcall
imull
mov
fs
mov
cltd
push
je
and
cwtl
jge
push
mov
or
adc
mov
bound
sbb
xchg
ss
push
cmc
jg
add
lret
std
imul
test
pop
rdpmc
pop
or
aas
repz
insl
or
sbb
loop
int
addr16
dec
jecxz
fistpl
mov
mov
push
insl
jmp
ja
sub
sub
inc
jmp
inc
aas
in
ret
call
mov
je
aam
inc
jnp
jle
fwait
adc
cmp
add
xchg
cmp
push
adc
aam
loope
out
mov
lds
movsl
fwait
sbb
ja
inc
shll
nop
add
inc
dec
sub
lock
push
mov
mov
and
in
shll
aas
xor
into
xchg
mov
lret
fcomps
mov
inc
dec
fwait
inc
repz
dec
mov
movb
inc
xchg
rorl
mov
push
negb
jmp
mov
xor
js
xlat
push
dec
and
test
enter
adc
pop
in
xor
stos
lock
mov
xchg
dec
dec
bound
mov
add
insb
jnp
or
mov
adc
mov
ds
out
aad
sbb
divb
enter
pushf
ds
repz
xchg
mov
push
push
flds
adc
inc
mov
pushf
adc
mov
jp
arpl
mov
and
xor
and
xor
and
mov
sub
pusha
dec
repz
pusha
out
cld
push
lods
and
das
ret
clc
mov
movsl
dec
pop
xchg
insl
push
pop
adc
js
pop
cmpsl
call
mov
dec
cmp
xor
jl
sti
xor
and
mov
cld
mov
repnz
cmp
cli
jne
push
jbe
mov
push
notl
cmpsl
inc
sbb
adcl
ret
mov
lret
into
test
jecxz
rcrl
pop
cmp
mov
and
gs
push
pop
out
cmpsb
pusha
pop
stc
mov
jae
sti
movb
dec
sti
fsubs
jnp
fbld
dec
cld
and
add
fnsave
dec
hlt
test
push
jecxz
pop
jne
mov
xchg
aad
inc
xchg
rcrb
mov
add
in
xor
push
movsb
jb
rcll
es
xchg
add
dec
adc
xchg
add
mov
imul
push
popa
sub
jnp
in
inc
sbb
les
jo
loop
sbb
mov
xor
push
stos
adc
mov
lods
jp
mov
les
sub
xchg
subb
loopne
jnp
push
pop
xor
outsb
pop
cli
ret
xor
outsl
ja
out
insl
fwait
mov
xchg
jb
lea
adc
push
mov
xorl
fdecstp
aaa
sub
sub
mov
dec
sub
adcb
lds
jnp
stos
jb
cwtl
xor
push
arpl
inc
cli
pop
popa
ljmp
adc
cmp
and
push
test
outsb
gs
sbb
mov
repz
push
es
cmp
dec
fldt
and
xchg
pop
jo
adc
pushf
pushf
in
shl
or
stos
xor
pusha
inc
imul
cld
jmp
jns
mov
xchg
ret
mov
outsb
mov
hlt
sub
mov
sub
cld
sahf
xchg
adc
jno
add
insb
lret
adc
jo
cs
ljmp
cmp
test
daa
sar
sahf
inc
bound
xchg
std
mov
add
lcall
inc
nop
jge
mov
jp
xor
rcpps
std
in
cmpsl
popf
lcall
jg
mov
gs
or
pop
lahf
xchg
test
loope
mov
ret
mov
sbb
pop
mov
add
int
mov
lds
add
faddp
enter
scas
cmc
enter
ret
mov
or
dec
cmp
dec
loop
popl
or
sub
pop
ds
mov
mov
xchg
mov
inc
rorl
jl
pushf
mov
fistpl
insb
insl
push
mov
loop
push
adc
aam
jp
repz
inc
adc
inc
xchg
push
fsubrp
rcl
les
pusha
orl
shll
stos
and
lds
lods
aas
push
xor
enter
leave
in
outsl
fildll
mov
fistl
dec
push
push
andb
mov
es
ret
jbe
les
test
inc
pop
jl
mov
dec
mov
mov
jno
cmc
mov
jns
js
add
xchg
jp
mov
fbld
fwait
adc
sarl
xorl
stos
orl
ror
pop
mov
out
out
cmp
js
lods
out
fs
negl
incb
xor
jns
cltd
mov
dec
xchg
cmc
iret
jo
push
sbb
pusha
xor
in
jmp
xchg
and
push
jl
pusha
pop
push
xor
addr16
xor
cmpsb
out
or
roll
mov
inc
pushf
in
and
sub
les
inc
jae
push
add
nop
sbb
dec
lods
pop
shll
sti
mov
xchg
adc
fldcw
cmpb
jmp
mov
xchg
jb
adc
out
add
jecxz
add
sbb
mov
out
push
mov
cli
movsb
adc
push
gs
fcmovu
je
dec
sbb
sbbl
sub
dec
pop
push
add
adc
cmp
dec
lods
cmp
inc
mov
xor
test
stc
cmpsb
icebp
call
cld
popf
add
les
inc
sub
push
mov
mov
mov
popa
and
sub
jle
sarb
inc
dec
fimuls
mov
das
xor
add
shrl
lcall
and
stos
loop
add
fcoms
cmp
insb
aad
data16
outsb
cltd
pop
xchg
xor
cmpsl
push
mov
or
pushf
fwait
cmp
push
ret
ret
out
repnz
mov
pop
cmp
cld
and
jne
fsubr
pop
hlt
dec
inc
out
inc
fwait
push
pop
aam
lock
fsubrl
lods
lahf
mov
cmp
aam
loope
scas
sub
adc
push
jge
sahf
cmp
jae
or
and
jnp
fisubl
lea
mov
add
dec
jle
lret
push
mov
lret
aas
scas
sbb
jge
andb
lahf
jg
jecxz
in
sub
in
sbb
in
dec
jne
fstps
pop
call
mov
aam
sub
xor
andb
xchg
push
rcr
inc
icebp
pop
hlt
dec
xor
inc
mov
mov
cmp
sub
mov
xor
mov
out
lock
push
insb
pop
xor
fwait
lret
hlt
push
dec
inc
sahf
or
cltd
insb
xor
mov
cs
cli
adc
xor
int
dec
or
push
jmp
push
add
stc
xchg
jg
mov
int3
out
loopne,pn
xor
sbb
mov
repz
shlb
ljmp
add
pop
push
xlat
or
cwtl
enter
cmpsl
xor
imul
mov
jl
aas
xchg
jbe
adc
in
xor
int3
inc
mov
xor
sub
fisubs
rcrb
add
out
push
int3
xchg
aas
and
mov
jl
lahf
in
add
dec
minps
xchg
xchg
fadds
adc
outsl
jmp
fs
fwait
lret
bnd
push
repnz
int3
sub
mov
pop
add
dec
fldl2t
ds
ds
out
mov
pavgw
push
roll
mov
jno
cs
jno
xor
jp
loopne
inc
and
call
aam
loop
push
push
std
dec
xorb
inc
jge
rcr
cmp
stc
xchg
jecxz
out
sbb
and
xchg
mov
rclb
das
ficoms
jecxz
add
aam
xor
imul
xchg
mov
jg
cmpsl
adc
xor
pop
stos
mov
stc
cmp
scas
add
xchg
in
ficoml
repnz
lock
inc
jb
lret
mov
push
out
add
push
dec
or
add
adc
fs
packsswb
cmp
and
sti
xlat
insb
jge
ds
movsb
hlt
pop
jmp
fstps
add
addr16
mov
and
mov
cli
lock
mov
pop
lds
out
push
jo
mov
outsb
fistl
orl
pop
push
mov
out
fstps
aas
inc
dec
mov
enter
mov
std
lret
inc
pop
xor
arpl
addr16
dec
sub
sti
fisttps
pop
pusha
jge
sti
sbb
xchg
mov
lahf
inc
idivl
add
sbb
xor
inc
dec
inc
lret
mov
add
and
addl
js
mov
mov
je
stos
adc
dec
mov
mov
fistps
loope
dec
xchg
sbb
lea
add
cltd
sbb
mov
shrl
mov
jae
mov
mov
and
loop,pn
fwait
push
insb
and
or
sbb
push
push
je
ret
push
jp
sub
jl
jp
pop
mov
cltd
xchg
das
inc
js
push
xchg
cmp
and
sub
bnd
pop
adc
and
pushf
sbb
imul
jae
mov
mov
mov
xchg
lcall
test
repz
mov
mov
pop
leave
or
xor
outsb
lods
push
xchg
sbb
fsub
mov
pop
into
int
pop
inc
add
bound
xchg
fidivrs
iret
xchg
pop
lret
testl
jb
jg
imul
xor
add
xor
das
or
repz
sbb
adc
push
jmp
std
dec
jb
lcall
cmp
stos
xor
adc
jmp
jns
xor
repz
icebp
mov
or
addr16
add
pop
and
dec
out
into
in
int3
mov
sahf
mov
out
and
xor
pushl
sbb
imul
movsl
sti
sub
out
iret
jnp
mov
imul
xchg
insb
addl
push
ss
fisttpl
insb
notl
in
add
inc
lahf
cmp
mov
lcall
movb
fnsave
shlb
jg
popa
mov
data16
mov
popf
das
mov
xchg
jp
addr16
shlb
pop
cmp
test
add
mov
les
pop
cmpsl
sub
sbb
pop
jp
push
dec
loope
ds
nop
ss
sti
stos
outsb
movsb
dec
addl
shrl
jg
mov
push
mov
lds
push
cmpsb
mov
add
mov
mov
mov
test
lods
inc
push
xchg
call
mov
test
fwait
mov
xor
pushf
jmp
jne
sub
and
mov
cld
pop
jmp
int3
push
and
dec
adc
xor
inc
mov
popf
pop
and
sub
jmp
loop
push
cmp
or
orl
xchg
mov
in
pop
insb
inc
sbb
mov
cmp
cwtl
cmp
insb
lds
roll
push
jns
mov
jp
imul
dec
mov
outsl
pop
in
cmp
in
nop
rep
shr
or
fimuls
push
jbe
pop
adc
orl
ret
filds
mov
pop
leave
xchg
scas
test
mov
mov
test
pop
push
aam
roll
sbb
clc
pop
aas
lret
lods
fsubrl
adc
cmpsl
ds
or
fidivrl
pop
clc
cs
mov
or
sub
pop
icebp
fidivrl
out
lock
outsb
fnstcw
jns
scas
in
cmp
jp
stos
sub
inc
fs
add
pop
adcb
insl
push
xchg
pop
pop
xchg
xchg
mov
cwtl
adc
imul
cmp
jbe
pusha
mov
jp
sbb
push
sub
push
sub
mov
dec
push
adc
push
xchg
lret
mov
pop
das
xchg
clc
jecxz
and
and
int3
mov
pusha
adc
bound
imul
ja
fnstsw
add
push
mull
out
mov
and
jle
cli
push
and
orl
aad
subb
lods
call
sahf
cltd
test
mov
popf
sarb
and
fcoms
addr16
fistl
cmpxchg
push
jg
test
pop
dec
ja
ljmp
inc
insb
repz
aaa
fistl
jg
push
inc
dec
mov
dec
or
outsb
push
neg
mov
sbb
mov
insb
call
add
fldenv
mov
mov
adc
test
enter
push
sub
cli
jne,pn
cmp
or
push
rcrb
fisubrl
push
scas
loop
jp
les
sbb
test
fsubrs
push
inc
js
jno
push
in
pop
inc
mov
sbb
loopne
lods
insl
es
loopne
lock
jne
ss
cmc
sbb
out
jmp
jmp
xchg
ds
jno
jp
pop
and
outsb
out
loope
scas
fsts
sbb
sbb
inc
aad
aaa
inc
andl
mov
test
dec
icebp
lods
repnz
sub
jmp
cmpsl
aam
lret
dec
test
mov
fistpl
cmp
loope
repz
push
dec
cmpsl
nop
fidivs
sahf
cmp
data16
push
pop
cmc
sub
push
xor
mov
leave
rcrl
mov
mov
adc
xor
mov
std
insl
sbb
pop
scas
mov
ror
sub
mov
mov
js
or
lcall
test
jmp
mov
outsb
lock
mov
push
lahf
xchg
mov
xchg
mov
jmp
outsb
mov
ds
jl
cmp
push
pop
pop
inc
jecxz
js
push
push
xchg
jge
cmp
xchg
fiaddl
cwtl
stos
subb
jae
or
xchg
sub
mov
adc
std
mov
mov
notb
pop
cmp
add
mov
push
and
cmpsl
test
sub
shrl
and
fildll
ret
sub
sub
push
jmp
int
andl
cli
inc
xchg
pop
adc
dec
aam
test
ficompl
jmp
jecxz
add
pop
inc
and
pop
int
sbb
xlat
mov
sub
sar
mov
negb
fiaddl
push
stc
and
mov
adc
push
mov
es
cmp
dec
jecxz
jp
rcrb
js
push
pop
insl
shlb
std
fistl
sub
fcomps
aas
addb
ljmp
cltd
jge
cmp
pop
mov
fs
inc
sbb
and
mov
outsb
mov
leave
popf
dec
jle
ja,pt
mov
mov
jns
dec
stc
jg
jg
test
cld
jg
ret
inc
and
and
mov
dec
repnz
xor
ficoml
decl
or
push
fsubrl
lods
cmp
imul
add
jl
int3
mov
pop
xchg
cmp
inc
ret
cli
mov
cmp
jmp
ljmp
rorb
mov
int
push
sub
lds
pop
xor
hlt
push
push
xchg
hlt
mov
mov
fisubrl
mov
sub
scas
push
push
xor
mov
jae
iret
shll
iret
addr16
cmp
std
insb
adc
or
aas
pop
int
adc
sub
jge
in
mov
cltd
repnz
mov
hlt
inc
arpl
das
pop
in
push
inc
incl
mov
fsub
popl
push
sbb
ja
loopne
decb
shr
daa
cltd
push
xlat
arpl
push
repz
iret
mov
divb
xor
ja
imul
adc
cmp
adc
pusha
cmpsb
movsl
lret
in
in
jmp
insl
roll
inc
mov
mov
mov
lds
mov
sbb
aaa
jb
addr16
ret
or
push
and
out
inc
loope
jge
xchg
frndint
push
notb
shr
inc
paddusb
and
cli
xorb
inc
adc
ficompl
dec
ss
and
mov
pushf
cli
dec
cs
sbb
jbe
fwait
into
stos
cmp
and
xchg
lods
cmp
jge
std
xor
cmpl
push
mov
cmpl
xchg
jl
mov
jae
and
repz
xchg
test
dec
sub
mov
adcb
popa
fnstenv
fabs
jnp
andnps
dec
jae
std
jge
shl
or
dec
loopne
in
dec
adc
inc
aad
stos
js
filds
sbb
in
aam
xchg
ds
ja
xor
jns
mov
jnp
push
andl
sti
adc
jle
daa
or
fdivl
test
insb
pop
push
inc
cmp
and
and
xchg
dec
mov
mov
inc
pop
cwtl
cld
jecxz
jns
test
out
push
sub
mov
mulb
and
sbb
test
inc
jne
pushf
daa
jl
inc
jmp
insb
ja
js
and
stc
sub
pop
xchg
sub
cwtl
inc
ret
out
sbb
pop
icebp
push
scas
mov
sbb
add
sbb
lcall
cmpsb
sbb
addr16
add
fnstcw
jnp
jecxz
jecxz
xor
xor
push
outsb
push
cltd
scas
mov
jecxz,pt
mov
xchg
push
jbe
jle
dec
dec
and
imul
bound
pop
out
xor
out
shll
xor
fwait
scas
mov
inc
scas
mov
loopne
shr
into
lret
push
pop
mov
iret
xor
movsl
push
jne
and
mov
sbb
mov
jge
test
lcall
fsubrl
mov
mov
popa
push
push
movsb
sub
or
sbb
arpl
mov
loopne
sarl
jb
mov
notb
mov
int3
ret
stos
mov
sbb
dec
negb
push
imul
jnp
fwait
lret
imul
movsl
lds
sti
hlt
daa
mov
cmp
mov
adc
pop
movd
mov
sub
stos
dec
push
sub
or
jae
call
inc
push
addr16
addb
filds
jle
push
mov
shll
xchg
sub
addr16
dec
in
dec
mov
mov
test
cmc
test
add
cmp
mov
mov
sbb
mov
ret
push
sbb
rolb
inc
fcomps
aas
jge
testb
fidivrs
mov
cltd
push
out
bnd
pop
add
lea
fadds
popf
in
sbb
mov
xlat
les
mov
mov
or
testb
add
jecxz
clc
mov
push
dec
pop
xchg
push
push
lea
cmp
fstl
hlt
iret
sub
push
inc
dec
push
xchg
pop
xchg
stc
scas
push
sbb
lret
cwtl
pop
push
sahf
xchg
fldt
and
out
mov
lods
repz
sub
hlt
iret
add
mov
adc
sub
leave
cs
repnz
jno
dec
lods
dec
popf
dec
add
ja
xlat
sub
cmp
mov
ret
add
dec
mov
or
cmp
sbb
mov
mov
add
les
push
fcom
mov
pop
xlat
orl
imul
lock
lahf
aas
out
mov
pop
out
pop
mov
inc
cmp
pop
pop
ljmp
push
mov
sbb
adc
sarl
aaa
and
sahf
cs
push
add
jecxz
inc
mov
mov
hlt
sarl
xchg
daa
inc
cmpb
jp
mov
mov
test
pop
lret
rcll
xor
mov
cwtl
xchg
inc
dec
sbb
cmpps
lea
cmp
add
pushf
push
xor
pop
in
sub
faddl
xchg
pop
cld
das
pop
push
faddl
jns
out
push
mov
pushl
pop
inc
outsb
in
cmc
dec
sahf
push
adc
mov
dec
icebp
push
insl
out
and
mov
mov
xchg
jno
lret
sbb
shrb
fcmovnu
sbb
das
mov
mov
mov
dec
xchg
ret
loope
inc
fidivrs
mov
cltd
jmp
lahf
jns
inc
std
sub
cli
loopne
icebp
sti
fisubrl
mov
ret
inc
push
fildll
dec
out
test
mov
insl
jg
adc
push
sub
push
int
jmp
push
aam
and
and
rcr
lahf
and
inc
cmp
movsb
rol
lret
sub
xchg
add
enter
imul
cld
fcomp
inc
and
sub
rclb
aas
dec
pop
cmp
cmp
ja
out
aaa
sub
inc
fisttpl
sub
loope
popa
enter
sub
lret
lret
in
sahf
call
call
adc
gs
imul
jg
inc
and
xor
scas
bound
cmp
adc
outsb
jmp
subb
jge
mov
lret
and
push
xor
adc
dec
push
cltd
mov
test
mov
jnp
les
gs
sbb
loop
es
and
sbb
pop
add
cmp
repnz
imul
mov
loopne
stos
or
jno
js
in
jmp
pushf
out
mov
sbb
test
mov
mov
insb
fdiv
jne
sti
add
mov
dec
es
in
xor
outsb
mov
popa
stos
data16
mov
stc
popf
or
jno
jns
popf
inc
and
aad
aad
xchg
jg
cmpsl
jge
sbb
pop
cmp
dec
cmp
xor
test
sub
arpl
and
inc
loope
icebp
add
vpcmpgtd
pop
dec
outsl
mov
mov
jae
jns
push
push
adc
xchg
lcall
std
stc
dec
xor
jns
cld
lods
cmp
movsl
test
mov
inc
sub
mov
repnz
inc
xchg
call
cli
or
cld
lcall
xchg
mov
fstps
imul
and
lock
nop
popa
dec
std
or
push
repnz
xor
aaa
adc
adc
push
repnz
adc
jg
mov
sbb
dec
lcall
push
rcll
lret
and
out
mov
out
or
xchg
sahf
xchg
into
add
jns
fcmovbe
push
pop
inc
dec
mov
fxch
shrl
test
sbb
cmp
stos
mov
into
mov
mov
hlt
das
aad
cltd
xchg
imul
inc
pop
clc
push
cmp
aas
add
sbb
inc
hlt
lahf
sub
lds
add
lods
xor
push
les
pushf
je
int
add
push
in
lds
imul
into
jb
and
pusha
lret
inc
xchg
fabs
aad
jmp
mov
enter
andb
ljmp
cs
mov
pop
pop
lahf
int3
xchg
cmp
fstps
mov
sub
add
adc
pusha
cmp
test
jp
fwait
pop
pop
ljmp
enter
sbb
and
stc
stos
xor
cmpsl
fdivr
push
cmp
mov
stos
lock
pop
mov
dec
inc
cmpsb
push
gs
xlat
cmp
cmpsb
push
incb
lods
and
cmp
or
negl
mov
mov
jno
cwtl
sub
loop
jae
popf
fsubrs
jne
jg
pop
xor
xorb
push
mov
xor
lea
xor
add
inc
add
jmp
aad
jge
aas
jne
cltd
sub
aad
sahf
imul
and
jmp
xor
in
fsts
sub
arpl
push
int
jbe
scas
cs
add
aaa
mov
inc
aaa
js
mov
ret
popa
mov
or
daa
lock
lea
aas
inc
ficoms
int3
push
mov
out
inc
icebp
xchg
mulb
addr16
loop
leave
add
dec
repnz
inc
add
lret
ljmp
cmpsl
add
addr16
jo
ja
stos
cmpsl
or
in
ljmp
mov
sti
cmp
mov
mov
jmp
imul
pop
jbe
jecxz
shrl
repz
pop
leave
pushf
sbb
enter
xlat
das
mov
and
fdivl
imul
adc
cmpsl
push
or
pop
sbb
loopne
mov
xor
dec
push
out
leave
shrl
cmp
cs
mov
jecxz
out
adc
repz
js
imul
adcb
aad
xchg
push
icebp
arpl
lret
mov
aaa
cmpsl
push
adc
mov
jb
xchg
sbb
jge
cmp
clc
pusha
xchg
xor
add
or
and
cwtl
aas
das
ja
lock
pop
les
icebp
or
enter
or
xchg
cmp
scas
cmp
cmp
xlat
adc
stos
push
nop
enter
enter
inc
fninit
xchg
popf
push
add
adc
adc
pop
mov
call
ss
mov
xor
es
data16
mov
sub
xor
out
jmp
push
xchg
mov
test
mov
test
mov
imul
cmp
je
in
pop
out
add
lret
dec
adc
enter
add
test
stc
sarl
push
push
xchg
push
mov
add
push
mov
xchg
adc
insl
jg
sub
lods
clc
outsb
mov
nop
mov
xor
push
scas
rcrl
call
xchg
cli
sub
je
lds
xor
inc
adcb
inc
adc
add
lahf
dec
sahf
les
sbbl
stos
cmp
sbb
jae
loope
cmpb
clc
mov
dec
jl
cmp
inc
insl
xchg
sub
inc
cmp
rcrb
jle
pop
insl
test
addr16
fwait
and
pop
or
or
ds
lahf
xorl
mov
dec
mov
xchg
or
sbb
pop
fisubl
scas
jbe
mov
movsb
inc
xchg
stos
fwait
dec
push
adc
iret
inc
dec
rsqrtps
into
imul
add
mov
push
xor
or
out
add
mov
mov
pop
stos
lea
push
xor
lahf
scas
pop
sbb
in
xor
ret
cmc
faddl
dec
iret
lret
rorb
fsubrp
inc
xchg
pop
xchg
jbe
mov
mov
scas
cmpsl
cmpb
sub
imul
lods
adcl
cltd
clc
stos
fsubs
imul
adc
mov
fistpl
cwtl
adc
aad
add
dec
dec
imul
jl
or
lea
rol
rclb
aaa
aas
lods
cmp
mov
out
jp
std
fnstcw
stos
xor
mov
inc
fs
mov
lahf
and
idivb
insb
pop
push
inc
mov
inc
cmp
lahf
push
mov
lds
leave
dec
movsl
push
es
dec
mov
or
pop
push
fisubs
pop
call
or
sub
sub
and
xchg
and
adc
push
cmp
addr16
and
mov
mov
clc
xor
frstor
mov
and
je
adc
addb
push
mov
mov
movsl
push
cs
sbb
gs
and
add
add
pushf
dec
pop
add
push
xor
mov
mov
mov
mov
mov
pop
negl
mov
lret
fcom
sbb
jg
mov
arpl
stos
sbb
hlt
mov
cltd
mov
adc
mul
fcoms
lods
mov
lea
mov
push
pop
xchg
inc
lret
xor
push
in
fldenv
idivl
mov
mov
test
ret
icebp
imulb
aaa
push
adc
mov
cmp
mov
pop
loope
cmp
fs
mov
add
mov
inc
aam
icebp
lea
dec
mov
xor
dec
pop
test
push
jmp
mov
xor
pop
popa
repnz
ficoms
pushf
ficomps
in
addr16
fldcw
scas
inc
cmp
add
xor
fwait
dec
lahf
or
push
lds
jb
inc
loope
push
or
xor
loope
xchg
xchg
push
and
jne
push
xchg
inc
dec
stos
pop
cltd
gs
xchg
mov
outsb
cmp
stos
testl
sbb
es
push
fdivrs
push
cmp
pushf
aad
sbb
lods
lods
out
popa
repz
push
or
pusha
and
sub
xor
fs
movsb
outsb
fwait
adc
and
daa
add
hlt
daa
fdivr
mov
cmp
jne
lahf
lock
mov
add
fstpt
faddl
test
movsb
cld
fiadds
jg
aaa
xchg
lods
xchg
sbbl
je
mov
inc
addb
stos
xor
jmp
xlat
into
xchg
jo
push
sub
pop
icebp
inc
fucomi
fs
mov
or
or
and
call
fstps
fisttps
sub
add
pushf
add
jl
sub
bound
cmc
add
mov
pusha
repnz
and
jno
test
or
add
cmp
sbb
pop
scas
jl
pop
pop
aad
fldl
mov
shll
or
test
imul
pop
loope
mov
es
mov
xor
arpl
pusha
push
mov
xchg
xlat
adc
inc
push
jne
pop
icebp
push
jns
test
lods
divb
jmp
add
inc
dec
pop
outsb
pop
push
loopne
in
xchg
pop
mov
add
push
adc
fisubs
fcmovu
cmp
or
movsb
cmp
pop
or
mov
stc
or
and
push
dec
les
mov
push
dec
and
xor
or
mov
jo
xor
outsl
push
push
xor
push
stc
test
inc
adc
pop
andl
jg
cmp
mov
push
dec
sbb
shl
or
nop
aaa
es
xor
fdivl
mov
jle
scas
pop
aad
aaa
jo
out
cli
stc
popf
mov
ret
mov
add
sbb
xchg
loope
lds
in
sahf
cs
mov
mov
or
in
movsl
adc
sub
fldenv
mov
xor
sub
sahf
rcl
or
add
rcrl
inc
jno
popf
sub
rcpps
jecxz
push
pop
ljmp
xchg
pop
xchg
xor
fxch
into
stos
push
dec
push
jl
or
sub
mov
dec
adc
pusha
fmull
push
ljmp
in
jle
mov
adc
pop
push
sbb
adc
clc
lods
call
dec
les
sub
or
push
mov
sbb
xchg
iret
mov
repz
daa
std
xlat
jmp
in
addb
cwtl
loope
inc
lret
mov
out
xor
push
mov
stc
xlat
cld
in
scas
push
aas
adc
imul
repnz
out
jg
inc
add
stos
push
jnp
inc
cmp
and
push
inc
dec
push
sub
cld
inc
ret
js
js
and
mov
inc
xchg
aas
xchg
in
shrb
mov
iret
and
xor
rolb
sbb
pop
adc
cs
out
cmp
mov
mov
mov
add
jg
mov
xor
test
cmp
faddl
mov
fnstsw
sub
xchg
rorl
cmp
lret
inc
pop
pop
push
inc
mov
dec
or
fdivl
cmovle
imul
jle
sub
arpl
dec
hlt
movsb
and
pop
ljmp
inc
idivl
add
cmp
inc
push
scas
and
dec
cmp
out
pop
xor
mov
cli
mov
sbb
mov
pop
int3
inc
adcb
push
add
dec
shl
fwait
and
test
sbb
adc
pop
call
inc
jle
in
xchg
cltd
adc
aam
ljmp
das
das
jp
pop
push
pop
mov
mov
shl
cli
stos
loopne
jg
shl
adc
mov
cli
je
mov
push
shl
mov
sbb
dec
loopne
xor
xchg
rcll
sbb
out
in
pop
ret
fdivl
filds
lret
lret
dec
sbb
xor
pop
lds
sub
fidivrl
sub
rcrl
jnp
adc
mov
adc
mov
popa
aas
push
and
jno
and
mov
cmpsb
popf
jmp
stc
mov
loop
xcrypt-ecb
cmpsl
mov
fcoms
pop
das
mov
insb
push
or
lcall
fldt
jne
adc
push
lcall
out
push
add
clc
xchg
pop
adc
jo
wrmsr
dec
ja
jo
subl
push
mov
sahf
inc
inc
push
sub
aam
jb
frstor
or
mov
sbbb
sub
mov
pop
into
push
xor
ljmp
stos
cltd
sbb
and
arpl
jl
add
cmp
std
sub
aaa
lcall
fcomps
mov
pop
adc
jl
pop
hlt
dec
mov
aas
repnz
xor
ficomps
lahf
into
xchg
mov
jp
and
lds
cmp
arpl
xor
mov
ror
in
mov
lea
adc
push
add
inc
mov
mov
mov
xor
mov
sbb
dec
push
or
in
ret
sahf
xor
aam
sub
lock
and
push
aas
mov
adc
lods
test
jae
add
pop
xchg
fwait
jge
std
sbb
ret
loopne
fdivrs
or
mov
sub
add
mov
pop
adc
mov
aas
sub
incb
imul
aaa
mov
jmp
lds
rolb
inc
insb
data16
mov
push
pop
dec
jno
jmp
cmp
inc
pop
jle,pn
fsubl
out
inc
add
adc
mov
sbb
popa
and
mov
dec
jno
scas
pop
test
fidivrs
jg
lds
jo
cld
in
sub
pop
push
test
imul
push
xor
sti
adc
xchg
sti
add
push
dec
stos
aam
sbb
jl
sbb
ds
push
jecxz
fbld
sbb
cmp
push
lods
push
sbb
pop
inc
mov
lret
fnstenv
jmp
outsb
mov
das
jge
sbb
ret
pop
push
and
jge
das
cmpb
and
aam
rol
fdivl
push
dec
mov
push
fimuls
leave
mov
lret
add
sbb
jecxz
push
cmp
aad
dec
or
xchg
stos
inc
push
scas
jno
lcall
stos
xor
cwtl
shlb
mov
insl
mov
and
jmp
dec
setno
aas
out
and
stc
and
mov
jno
movsb
cmp
inc
loop
jp
divl
aas
xor
push
cmp
dec
aas
push
aas
pop
arpl
mov
xchg
imul
adc
test
enter
mov
xchg
mov
call
xchg
lahf
sarb
adc
idivb
popa
jle
xchg
hlt
jl
call
jb
adc
int3
stos
and
mov
pop
test
sahf
movsb
shrb
mov
nop
mov
add
loope
repnz
fstl
xchg
pop
je
sbb
push
stc
dec
inc
sbb
mov
je
popf
jle
lea
aad
jne
xor
inc
jnp
lods
pop
inc
xor
call
xchg
gs
das
mov
or
int
pop
ss
jmp
mov
jge
cmpsb
jbe
mov
test
ror
mov
jle
jne
and
mov
push
dec
mov
dec
and
sub
xor
mov
jnp
pop
cmp
out
test
cli
ret
aaa
xchg
and
or
inc
clc
mull
in
ret
mov
cld
jb
mov
shlb
fisttpll
fimuls
aaa
mulb
stos
or
jnp
push
aaa
and
cmp
loopne
xor
inc
cmp
pop
call
out
icebp
nop
jb
push
mov
out
xlat
adc
push
push
inc
aas
dec
xchg
push
push
mov
or
xchg
cmp
sbbl
push
or
int
xchg
test
push
and
enter
ret
inc
sbb
rcr
and
adc
mov
cmp
pop
shl
lock
fwait
movsl
mov
xrelease
icebp
sub
inc
cltd
das
and
gs
sbb
inc
repnz
adc
mov
sarb
sub
add
jge
insl
pushf
je
rorl
daa
insl
sub
sbb
sbb
loopne
aas
lret
push
std
push
inc
xchg
ds
inc
data16
inc
outsb
mov
data16
xlat
jmp
fisubs
int
std
xor
push
push
mov
test
push
inc
fstl
sbb
and
ret
rolb
inc
out
adc
outsb
in
mov
sub
popa
push
dec
ret
adc
push
ror
lret
pop
cmp
xchg
in
sub
sbb
cwtl
arpl
push
jg
loop
sub
dec
inc
and
inc
lock
inc
sub
out
mov
out
pop
mov
sbb
dec
daa
loope
loop
sub
cmc
icebp
ret
push
das
lcall
out
jge
mov
pop
adc
lods
sub
lahf
cmp
inc
and
test
mov
push
pop
out
dec
sub
push
aam
xor
in
adc
in
or
fdivs
sahf
mov
xor
idiv
pop
shl
call
pushf
cmc
dec
add
mov
shlb
imul
xchg
jmp
add
leave
and
jbe
pop
mov
fidivrs
mov
adc
cmp
jae
mov
cli
insl
lea
pop
mov
xor
ljmp
lret
cmp
add
pop
loop
fbstp
mov
jmp
sub
pushf
aad
mov
and
adc
fildl
jp
sbb
mov
mov
pop
push
ljmp
mov
gs
shlb
aad
cmp
mov
add
arpl
add
adc
sbb
ficomps
inc
fld
jg
dec
mov
mov
push
xor
cwtl
stos
push
cmp
inc
dec
sbb
in
lods
pop
fimull
outsl
sbb
divl
lret
out
push
mov
or
and
push
mov
dec
jbe
lret
xchg
mov
ret
xor
je
add
xor
sbb
dec
dec
xchg
test
and
mull
aam
clc
mov
push
or
and
in
stc
push
loope
inc
sbb
and
ror
push
insl
std
das
jae
lods
data16
loop
push
stos
dec
dec
imul
int
clc
xchg
je
lcall
lock
pop
push
sbb
fldl
and
fsubl
fwait
sbbb
jae
xchg
popf
add
push
adc
inc
push
sbb
adc
test
ss
inc
pop
or
jne
imul
push
cmp
push
xchg
xacquire
mov
ret
les
outsl
shll
add
jp
mov
es
xchg
fsubl
insl
movsl
ss
popa
int3
mov
cmp
gs
out
mov
hlt
daa
std
jg
cmp
cmpsb
mov
sbb
add
xchg
jo
jg
sub
fmull
orb
pop
mov
popa
in
int3
jns
xor
cmpsl
jbe
jae
je
xchg
mov
jp
add
and
xlat
inc
popa
out
scas
lods
cmp
test
add
fs
add
scas
xchg
inc
adc
pop
mov
test
inc
dec
xor
mov
aas
test
out
pop
mov
int3
into
cmpb
sub
ss
adc
and
ffreep
insl
or
xchg
enter
sbb
bound
push
sub
or
cmp
xor
xchg
mov
outsb
xor
or
loope
jg
xchg
addr16
pop
cld
mov
and
loope
cmp
xchg
cmpsb
mov
sub
jae
orb
cld
imul
fnstenv
add
imul
cmc
mov
mov
repz
movsb
add
sbb
adc
mov
into
lret
in
push
lock
outsl
sbb
ret
dec
push
gs
and
sbb
stc
push
mov
pop
dec
nop
ret
mov
fdivr
lock
adc
in
push
push
fmuls
push
movsb
scas
fucomp
push
cmpsl
dec
xchg
xor
mov
or
inc
pushf
mov
mov
or
mov
or
stos
or
push
xchg
nop
movsb
arpl
pushf
ja
repz
in
mov
sub
leave
ljmp
adc
push
fwait
shll
inc
cmp
sbb
xor
pop
mov
inc
xlat
jge
test
mov
inc
es
jno
out
mov
dec
mov
loope
push
fcoms
test
jno
adc
mov
aad
out
fidivrl
jb
sbb
outsb
pcmpeqw
or
adc
mov
lahf
jbe
das
mov
dec
es
mov
pop
add
fsubl
xor
push
adc
inc
in
popf
cwtl
dec
cltd
test
arpl
add
test
jmp
arpl
je
movsl
push
aad
jo
mov
cmpsl
and
ljmp
cwtl
dec
inc
loopne
vmwrite
pop
push
lret
daa
cmp
fwait
lock
and
out
cmp
js
jns
stos
lock
loopne
test
add
in
pop
push
outsl
movsl
rcll
mov
jo
xor
dec
xchg
mov
nop
sbb
or
repnz
inc
call
or
ja
pop
dec
lock
or
ret
mov
ret
jne
rcrb
add
or
xor
push
inc
aaa
jne
fdivrs
adc
and
rorl
dec
dec
mov
bound
mov
and
outsb
pop
sbbl
pusha
clc
mov
push
sbb
add
imul
fbstp
shr
mov
test
adc
scas
popf
call
into
push
sbb
inc
xchg
insb
jnp
add
sbb
fiadds
popf
lds
loope
clc
je
jo
ljmp
lods
push
shlb
mov
lds
imul
iret
adc
mov
dec
in
and
lds
add
mov
inc
lods
dec
mov
xchg
loope
hlt
jl
fld
cmp
cltd
sahf
test
cwtl
mul
cmp
adc
mov
mov
adc
jbe
dec
dec
or
ss
ret
fwait
push
jne
test
xchg
sub
dec
pop
jge
xchg
cmp
insl
imull
aam
pushf
sub
ret
cmpl
movsb
in
xor
cmp
adc
jns
mov
and
mov
aad
or
mov
jo
insb
mov
aas
out
cmc
bound
push
jl
das
bound
in
xlat
lds
inc
aad
nop
or
fisubs
test
sub
mov
xor
pop
pop
aad
or
shrl
push
xor
sub
leave
jb
xor
jno
in
mov
into
insb
out
out
rcrl
mov
push
cmp
mov
jae
xor
outsl
imul
jo
add
adc
push
rcrb
sbb
inc
dec
or
fsubl
aad
jecxz
pop
mov
orb
pop
sbb
mov
inc
xor
cld
pop
insl
lahf
mov
jl
nop
pushf
jns
leave
icebp
inc
negl
sub
xchg
fbstp
jmp
jecxz
add
inc
cld
loop
or
jle
pop
int
adc
cwtl
out
into
repnz
jg
add
xor
insb
xor
bound
push
mov
outsl
into
xchg
pop
push
add
rcl
outsl
mov
sub
sbb
xor
adc
fildll
idivb
icebp
loope
ret
pop
enter
nop
fmul
shlb
xchg
and
out
enter
push
call
clc
inc
les
mov
add
cmp
pop
fs
xchg
pop
pop
gs
insl
imul
outsl
jae
nop
push
cmpsl
xchg
sub
imull
sbb
mov
lods
movsb
push
cmp
jb
loop
je
xor
xor
insl
or
mov
sbb
lods
xor
fwait
call
adc
and
insl
push
adc
mov
sub
arpl
mov
inc
fwait
pop
or
ds
mov
faddp
out
mull
jge
imul
jbe
cmp
adc
cmc
mov
pop
mov
mov
adc
rorl
aad
pop
rolb
add
addb
cmp
xchg
stos
dec
xchg
pushf
inc
lock
xchg
sub
loop
mov
jge
inc
push
negl
notl
rclb
adc
adc
adc
mov
push
adc
ret
dec
lods
in
rclb
inc
mov
test
lcall
outsb
sub
add
mov
dec
nop
rcr
rorb
icebp
test
adc
sub
cmpsl
mov
gs
mov
xor
in
sub
repnz
xchg
inc
or
dec
cmp
mov
arpl
sar
fwait
lods
cs
in
xor
xchg
sarb
lods
inc
into
cmc
ret
mov
mov
aas
mov
daa
sub
rcrl
cmc
rol
or
cmp
mov
subl
jecxz
ret
mov
and
sub
inc
sbb
cmp
pop
roll
or
ds
cmp
insl
out
sarl
enter
sbb
jmp
movsl
test
cltd
lahf
jmp
xchg
xchg
sti
cwtl
repnz
fadd
add
and
add
lds
jbe
rcl
xor
ficompl
dec
fiadds
sbb
cmc
addr16
roll
push
mov
mov
aas
push
outsl
repz
or
mov
dec
dec
jne
push
stc
add
dec
out
xor
adc
in
cmpsb
mov
lcall
inc
mov
orb
insb
jle
sub
clc
jecxz
mov
leave
ss
loopne
fidivrs
fs
add
push
loope
jp
mov
push
xor
out
aaa
test
xor
push
xor
mov
sti
cmpsl
inc
jbe
call
add
cltd
pop
cmp
sahf
les
push
cmp
ret
rolb
add
or
ficoms
or
adc
adc
movsl
repnz
mov
and
leave
xchg
add
add
pop
imul
fldt
nop
lds
pop
pop
imul
orb
fstl
stos
jns
pop
jle
cmp
jle
cmc
sbb
jmp
pop
jo
lods
ret
enter
inc
cmp
mov
aad
add
mov
ja
xlat
dec
xor
ror
lret
or
test
mov
jmp
fiaddl
adc
jp
jl
jg
pop
inc
imul
jne
cmp
xor
nop
adc
lcall
stc
lods
std
xor
sbb
xchg
jo
xchg
and
pop
cmp
adc
bound
cmc
mov
sbb
mov
jge
xchg
test
cwtl
andl
test
shlb
and
inc
js
and
and
cwtl
xor
fwait
mov
pusha
xor
push
mov
out
aad
stos
pushf
cwtl
pop
and
dec
imul
fucomp
and
dec
stos
fnstsw
sub
push
mov
fisubrs
stc
out
cmp
xchg
or
xor
adc
mov
leave
ja
out
jge
jmp
push
repnz
dec
stc
sub
decl
enter
mov
loopne
test
lods
addb
inc
stc
pop
hlt
test
fiaddl
xchg
test
data16
imull
add
and
inc
aas
pop
shrb
ja
inc
sti
xor
and
rcll
and
mov
aam
jb
xchg
cmp
sub
jecxz
push
pop
sub
adc
push
inc
push
cwtl
and
xchg
xlat
mov
ja
push
icebp
fwait
jle
xor
add
sbb
aaa
sbb
ficomps
mov
and
ds
add
mov
subb
add
mov
cli
push
xchg
xchg
lahf
push
push
lods
mov
sarb
jg
add
loopne
xlat
stos
add
cli
repz
loopne
cmp
pop
divb
mov
cmpsl
add
inc
aas
mov
xchg
out
std
enter
fstps
enter
push
dec
push
push
fs
ss
nop
jbe
ret
push
mov
test
inc
scas
mov
cmp
mov
add
xchg
or
pop
lock
fidivs
push
insb
mov
dec
pop
and
stos
pop
mov
ret
lods
sbb
mov
cmp
xchg
jbe
or
mov
shll
insb
cmp
aaa
clc
or
pop
cmp
fsub
ljmp
es
lahf
add
inc
addr16
fstpt
shlb
mov
pop
cmp
lods
shrl
add
enter
xor
ret
sarl
lea
aas
sub
mov
ss
std
idiv
adc
arpl
out
fcoml
push
pop
jno
sub
pop
in
enter
test
lret
movsl
mov
inc
fcoml
add
or
add
adc
lret
arpl
sub
mov
ss
dec
push
push
filds
jbe
in
sbb
hlt
inc
inc
jae
inc
sub
add
pushf
jecxz
push
sub
cwtl
bound
mov
hlt
inc
jp
pop
and
sahf
out
inc
gs
inc
add
or
push
rcll
push
or
imul
and
into
enter
ret
pushf
sbb
xchg
xchg
pushf
push
jmp
dec
repnz
ret
aam
js
push
sub
cmc
in
in
loope
and
sbb
int
lods
jg
andb
aas
andl
push
and
pushw
cmp
and
adc
daa
movsl
mov
sbb
sub
ja
jns
inc
lods
stos
add
add
repz
cmp
jecxz
fdivrs
stc
dec
dec
inc
dec
dec
popf
mov
cmp
pop
inc
std
lret
fadds
sbb
or
jle
add
in
pop
test
out
mov
repz
cwtl
mov
or
bound
js
add
adc
mov
push
and
xor
push
in
sbb
pop
jmp
mov
sub
imul
add
or
cltd
popa
shrl
pop
push
bound
push
call
xchg
adc
scas
sbb
push
jae
mov
lcall
stos
call
jp
inc
add
sbb
add
ret
fists
test
jle
push
sbb
lea
jno
cmp
iret
loop
inc
arpl
lods
arpl
popf
xor
inc
xor
aas
addb
out
mov
xchg
sahf
loop
add
xchg
pop
inc
mov
mov
jb
sti
push
add
test
es
loopne
or
out
aaa
daa
in
iret
add
cwtl
popa
cmp
dec
call
adc
enter
fs
lret
aad
loope
xor
and
jmp
cmpsb
clc
pop
dec
cmp
pop
sub
inc
jge
daa
rcrl
mov
paddusb
sar
lahf
cmp
mov
and
mov
and
les
rolb
push
cmpsb
movsl
and
mov
or
pop
jg
push
mov
ret
in
icebp
ror
cmp
pop
or
xchg
mov
mov
adc
jae
out
mov
adc
popf
sbb
push
mov
jns
test
cmc
popa
shll
and
jnp
insl
mov
insl
cld
ret
sub
mov
test
jae
dec
idivl
imul
pushf
outsl
xor
popf
jl
repz
jbe
mulb
pop
xlat
fcomp
mov
jbe
push
mov
xchg
or
jo
call
loope
mov
bound
cwtl
xchg
addr16
movsb
insl
inc
negl
cld
xor
mov
cmpb
cltd
dec
dec
pushf
clc
sbb
fstpl
xchg
int
out
movsb
sbb
fidivrs
push
cmpsb
jp
aaa
sub
sahf
cld
mov
sub
lods
dec
iret
mov
popa
dec
ds
push
inc
fnstcw
sub
jecxz
mov
pop
pop
ror
int3
int3
ljmp
jge
fisubl
add
int3
and
out
sti
adc
xchg
setbe
xorl
or
jge
outsl
adcl
mov
cmp
sbb
push
cmp
filds
or
jmp
jge
je
jno
scas
xchg
cmp
fnstcw
dec
lea
adc
loop
dec
cmp
lods
jge
push
ss
je
nop
icebp
jo
add
xchg
jmp
cmp
movsl
inc
adc
clc
xor
cmp
scas
jnp
adc
aam
sbb
stc
ret
mov
xor
mov
push
cmc
clts
or
call
stc
mov
mov
xor
filds
sbb
je
sbb
cs
pop
mov
sub
ret
pop
jno
add
pop
sbb
and
mov
bound
movsb
dec
nop
data16
clc
je
cmp
mov
cmpl
sub
jb
in
or
cld
fdivrl
mov
or
pop
jecxz
adc
or
cld
or
and
or
int
out
or
repz
fimull
movsb
or
xchg
gs
jno
adc
sub
scas
mov
js
xor
jo
xor
inc
dec
dec
sub
xchg
and
sbb
lods
xlat
sub
jbe
stos
in
adc
xorb
sarb
push
fdivrp
incl
fmul
cmp
pop
out
movsl
shlb
dec
movsl
sbb
or
scas
pop
add
mov
add
pcmpgtw
adc
lret
jbe
popf
or
xchg
daa
in
or
testl
add
xor
add
in
mov
lds
cmpsl
sub
popf
mov
and
inc
adc
xchg
dec
or
insb
icebp
icebp
mov
push
inc
mov
push
sarl
xchg
rorb
sub
xchg
shll
stc
int3
or
sbb
fisttpl
xchg
lea
shrl
clts
mov
popf
repz
stc
test
adc
out
cmp
mov
addr16
les
fsubs
sbb
or
out
hlt
mov
lret
mov
fwait
pop
jl
out
jl
or
ja
fwait
aaa
mov
mov
clc
jle
inc
or
mov
fdivr
add
inc
pop
pop
jae
xlat
cmpsl
in
popf
aad
shlb
adc
cmpsb
pop
mov
mov
aaa
mov
mov
push
int
aam
xchg
sti
adc
mov
sub
mov
adc
adc
mov
insl
inc
mov
fisubrs
and
popf
out
loope
pop
ja
movsl
mov
add
inc
fdiv
fisubl
in
xor
mov
fcmovnb
pop
adc
aaa
mov
xor
mov
jecxz
aaa
mov
std
xor
xchg
js
add
adc
shrb
jl
scas
sub
jae
or
imul
ret
sub
cli
mov
test
pop
and
inc
sbb
lods
cwtl
fstpl
push
das
scas
pop
adc
pop
sub
imul
fisubl
push
push
add
idiv
dec
dec
idivb
out
ficoml
pop
out
aad
ljmp
movsb
xor
popa
add
jmp
fisubl
data16
sbb
in
adc
jecxz
aaa
pop
pop
int3
mov
test
mov
push
and
or
hlt
insb
push
loopne
xlat
jg
mov
jns
inc
es
lds
inc
enter
pop
add
popf
subl
sar
or
mov
fmul
je
adcb
fstpl
push
scas
push
out
adc
inc
sbb
adc
mov
adc
enter
xchg
mov
and
mov
lods
add
enter
add
das
test
and
rcr
data16
fnstsw
mov
das
aad
dec
mov
sahf
test
and
push
scas
cmp
mov
in
cmp
pushf
pushf
dec
bound
aaa
fcompl
in
and
pop
shll
mov
pusha
xor
enter
pop
or
mov
lcall
in
lcall
jbe
sub
jg
out
push
pop
inc
cs
mov
into
xor
rolb
adc
push
mov
ds
sub
cwtl
sarb
cld
sbb
mov
jo
pop
test
add
dec
inc
and
mov
roll
scas
cmp
mov
mov
push
mov
dec
test
mov
push
lahf
in
sbb
adc
or
add
sbb
or
aam
dec
mov
pop
lods
inc
roll
adc
test
sub
push
adc
out
or
jg
and
dec
push
and
and
push
movsb
push
leave
cmp
lret
cmp
shrb
jne
ret
out
add
sub
push
nop
repz
xchg
ss
scas
sub
cmp
mov
xchg
sub
ss
push
push
push
push
sbb
sbb
pop
add
sbb
adc
dec
arpl
jno
in
push
in
xor
stos
or
jmp
mov
mov
aad
mov
scas
mov
xchg
cmpsl
lcall
xor
xorb
loope
mov
inc
add
gs
scas
outsb
cmp
lret
addb
or
arpl
mov
cmp
sub
subb
arpl
loop
fdivl
inc
or
mov
iret
push
aad
cs
aas
pop
aas
es
mov
push
adcb
dec
das
arpl
insl
shl
imul
dec
loop
pop
mov
mov
popa
push
and
idivb
mov
mov
arpl
rcrl
adc
iret
jle
inc
ret
stos
movsb
push
cmp
push
sub
pop
shrb
fucomp
xlat
addl
push
xchg
insb
sub
or
adc
rcr
in
test
pop
xor
mov
sbb
mov
xchg
leave
sti
pop
inc
xor
adcl
mov
sub
mov
aas
loope
sub
xchg
xor
lods
push
adc
mov
xchg
hlt
out
add
inc
pop
dec
dec
xchg
push
push
xchg
ret
sub
in
mov
jnp
pand
lret
out
out
fbld
xorl
pusha
cltd
cmpsb
or
out
xchg
fstpt
orl
dec
fstl
jecxz
lret
loopne
lahf
sbb
mov
push
push
add
jb
mov
jno
icebp
insl
jmp
push
loopne
out
movsb
add
jae
add
xor
hlt
and
xchg
mov
outsb
test
lods
std
popf
cwtl
cwtl
movsl
rcll
dec
sub
sbb
add
stos
out
push
fldenv
add
sbb
jne
xor
aaa
rorl
cmc
int3
ficompl
les
ret
add
sub
and
lret
scas
jmp
xchg
inc
in
gs
cmp
inc
orl
jb
shlb
mov
cmp
jnp
test
inc
pop
orl
test
push
lahf
mov
cmc
cmp
hlt
scas
and
mov
cs
xchg
adc
shr
stos
jl
and
adc
xchg
jg
mov
decb
fcmove
daa
cmp
cld
pop
lahf
sbb
push
fsubp
adc
add
or
gs
repz
mov
adc
repz
push
xor
push
ss
jbe
fstp
test
jecxz
in
jae
jp
sbb
adc
or
pop
mov
loop
out
and
es
out
hlt
in
lahf
gs
lcall
push
hlt
mov
jl
lret
arpl
repz
lds
mov
cmp
mov
jl
enter
mov
pop
and
cmp
testl
jbe
loopne
or
out
lock
rcrl
mov
jnp
xchg
pop
push
and
or
fwait
repnz
or
adc
mov
push
jo
sbb
dec
sti
xchg
lds
push
pop
cmc
les
into
jns
cmp
dec
inc
test
inc
inc
jae
enter
jmp
xchg
jge
push
out
fiaddl
dec
and
jmp
push
adc
jbe
insb
bound
push
dec
sbbl
or
xchg
jge
pop
outsb
jmp
ljmp
sbb
subb
fldt
or
mov
jge
lret
sahf
xchg
dec
cmp
jbe
add
int3
sti
in
sub
pop
dec
dec
add
aad
mov
frndint
push
cld
xlat
andb
bound
jae
add
pop
add
sub
jae
push
sbb
xor
xchg
or
lret
xchg
in
int
push
cltd
gs
in
xor
push
test
out
xor
dec
push
cmpsb
mov
lock
jnp
add
test
push
cmp
xchg
movsb
inc
push
ja
cld
and
movsb
xchg
jp
scas
mov
mov
mov
shl
shll
and
jae
dec
cmp
or
mov
xchg
jne
adc
jge
imul
and
add
outsb
dec
pop
push
cmp
inc
lods
cmp
icebp
data16
lea
mov
sti
adc
xchg
scas
test
and
or
jle
or
sub
inc
lods
fistl
jge
mov
inc
pop
cmc
push
scas
inc
mov
movsb
cmp
sbb
jl
shlb
testb
std
mov
or
and
jg
dec
insl
add
das
xchg
jae
movsl
lcall
mov
or
sahf
mov
leave
dec
sbb
rcl
xor
aad
frstor
sbb
mov
jp
insl
cld
adc
cmp
dec
sbb
dec
int
sub
scas
xchg
adc
lret
xlat
js
add
mov
dec
pop
and
sbb
mov
pusha
insb
addl
call
loop
cltd
ret
push
mov
pusha
sbbb
sbb
sub
xchg
mov
nop
fbstp
xor
add
out
popa
ljmp
add
daa
movsb
xor
add
test
stos
scas
out
xor
js
lea
out
push
dec
bound
cmp
lret
jp
adc
or
popa
sbb
adc
sub
aam
sub
mov
mov
ja
pusha
xor
mov
sbb
mov
pop
mov
mov
lods
ds
inc
ja
rorb
jnp
adc
bt
pop
sbb
mov
mov
add
ret
call
mov
loopne
push
xor
or
mov
out
xchg
push
jne
ffree
inc
add
adc
decl
and
mov
loopne
mov
xchg
jge
inc
out
cmp
out
icebp
roll
cmp
sub
cmp
sub
in
mov
xchg
ret
xchg
sub
lods
orb
adc
fisttps
adc
and
pushf
lea
jno
rorl
mov
mov
dec
sub
push
cld
bnd
jbe
jae
dec
pop
xchg
ret
inc
lea
cmc
xor
push
mov
jg
jb
add
sbb
xchg
sub
mov
xor
dec
jne
inc
mov
aas
rolb
and
int
ljmp
addr16
cmp
js
mov
add
data16
or
inc
and
aad
cmp
es
into
adc
add
cltd
iret
addr16
aas
push
dec
test
sbb
fxch
aaa
pop
pop
push
fidivl
daa
push
mulb
jns
adc
int3
in
mov
dec
mul
mov
push
stos
stos
xor
fsubrl
out
dec
popa
push
cmpsl
test
xchg
scas
fildll
push
pop
stos
mov
xor
or
mov
in
lret
xor
jnp
sbb
cmpsl
jl
inc
jne
clc
sbb
cli
jmp
insl
adc
movsl
fildl
pop
jbe
sbb
insb
scas
es
push
add
and
out
aas
loopne
enter
mov
daa
adc
leave
xor
add
leave
push
pushf
mov
aas
pop
and
push
adc
jno
cmp
pop
nop
jge
push
sbb
push
adc
pop
out
mov
and
pop
add
dec
fwait
repz
inc
add
test
popa
ror
mov
push
ret
mov
xor
adc
dec
dec
lcall
aad
aam
pop
and
outsb
scas
std
in
nop
ljmp
fs
test
push
popa
out
dec
inc
notb
push
imul
je
xchg
aam
or
call
call
or
dec
jno
cmp
fldcw
std
or
push
pushf
cmp
mov
inc
adc
push
jbe
bnd
push
in
cmp
mov
ljmp
jns
pop
shlb
ds
xchg
dec
outsb
gs
add
dec
add
hlt
push
outsb
in
xchg
test
enter
inc
xor
and
sahf
test
mov
loopne
jne
xchg
sti
in
or
movsb
pusha
xor
mov
sahf
and
test
cld
or
or
setp
lcall
mov
movsl
leave
jb
mov
cli
mov
out
mov
movsl
fisttpl
scas
push
test
jmp
inc
xor
xor
sub
outsb
ss
into
dec
int3
xchg
shl
cmp
pop
mov
xchg
in
je
or
mov
daa
lea
xchg
mov
push
mov
icebp
data16
inc
sti
xlat
cltd
iret
lret
mov
mov
mov
test
mov
dec
push
nop
push
dec
pop
mov
fcoms
inc
pop
test
js
jae
pushf
mov
xchg
popf
ss
inc
lea
shll
movsl
sbb
push
enter
fsubs
pop
mov
leave
je
orb
mov
xchg
xchg
outsb
jnp
add
insb
cld
mov
and
add
loopne
test
data16
xchg
mov
xchg
shll
xor
sub
btc
popf
sub
jmp
jbe
incb
arpl
leave
inc
xchg
ret
addr16
xor
sar
fcomi
ds
mov
sbb
push
pop
mov
out
mov
add
arpl
push
addr16
iret
fisubs
enter
gs
loop
int
xor
ds
mov
ds
sub
inc
mov
mov
bswap
lret
inc
push
mov
add
push
ss
cmp
jle
rorl
test
mov
ljmp
lods
and
jp
xor
xlat
and
sbb
lret
imul
mov
fsubrp
sub
mov
imul
mov
into
or
in
jp
inc
adc
aaa
insl
xchg
clc
mov
sub
fildll
test
adc
xorl
in
pop
pop
sbb
cmp
and
mov
bound
dec
std
adc
hlt
jecxz
enter
adc
or
xchg
es
ja
rcll
push
fisubrs
mov
jnp
sub
pop
mov
dec
sbb
ljmp
loop
sbbb
out
dec
mov
push
or
push
sub
adc
in
or
loopne
cmp
dec
dec
mov
and
addl
fwait
out
gs
fsub
into
sub
push
dec
lods
je
cld
jb
mov
daa
scas
mov
pop
mov
xchg
dec
dec
test
addr16
cmp
and
mov
sbb
aaa
mov
insl
xor
mov
pusha
mov
mov
mov
mov
pop
sbb
push
inc
dec
xlat
mov
and
outsb
sub
and
movq
dec
mov
dec
jbe
flds
mov
sbb
xchg
jb
rcll
incb
cmp
sub
pop
push
stos
in
decl
sbb
jecxz
arpl
mov
mov
mov
and
push
mov
dec
stc
mov
mov
inc
or
sbb
lahf
icebp
xchg
lahf
out
pop
sub
cmp
gs
arpl
jl
pushf
clc
fidivl
push
lock
xor
sahf
jns
inc
add
xchg
cltd
pop
lods
push
jecxz
popf
pop
aaa
ljmp
mov
js
cs
sub
inc
pusha
pusha
add
push
dec
mov
dec
mov
fldl
shll
out
adc
out
inc
int3
mov
mov
and
xorl
lods
mov
push
cmc
test
dec
mov
mov
mov
pushl
std
add
cmp
pushf
shlb
arpl
insb
jnp
lea
adc
cmp
cld
mov
cs
mov
stc
ja
shr
cmp
jb
test
outsl
sub
sbb
fistpl
popa
dec
pop
into
sbb
lods
imul
add
test
pop
hlt
aad
test
or
aad
mov
sbb
mov
fiaddl
sbb
cmpsl
lds
ret
fs
in
mov
jp
mov
out
xchg
or
test
jbe
fisubrs
add
js
push
push
adc
addr16
pusha
sub
and
pop
lcall
rol
or
jno
data16
mov
xchg
mov
es
jmp
movsl
or
scas
lcall
dec
gs
outsl
xor
aaa
dec
dec
clc
xorl
jmp
jne
aaa
xorl
adcl
mov
daa
enter
dec
and
fimuls
clc
sub
lcall
mov
movsb
fnstenv
pushf
fldl
mov
mov
or
call
jmp
daa
adc
and
dec
popa
xchg
test
icebp
mov
js
out
les
lcall
loope
and
hlt
test
sub
pop
dec
cld
scas
cmc
inc
enter
loopne
mov
cmp
xchg
ficoms
out
lods
loop
test
das
js
rorb
add
push
xchg
dec
and
jne
fcmovbe
jbe
dec
imul
cmp
xor
inc
mov
je
loope
sti
dec
or
mov
aaa
mov
pop
movsb
incb
jae
mov
daa
pushl
leave
mov
cmp
rcrl
test
sbb
jo
mov
push
ja
fmulp
mov
ss
push
outsb
sti
clc
pusha
xchg
mov
fidivrl
jg
das
and
mov
cld
or
pop
inc
std
lret
imul
shrb
insl
and
iret
or
test
pushl
stc
cmpsb
xchg
shrl
cmpsb
movsl
or
pop
lock
enter
mov
sub
inc
push
and
je
test
xor
arpl
out
sub
inc
js
push
inc
cwtl
std
xor
jne
in
sbb
jle
aad
or
fistps
ret
mov
xlat
test
adc
jb
and
test
loop
ja
xor
xchg
repnz
mov
pop
out
out
insb
dec
sbb
or
cmc
sub
sarb
jmp
pop
insw
in
jge
dec
cmpsb
xlat
jge
jg
mov
fstp
pusha
cmp
loope
adc
das
pop
sub
and
call
loop
or
fstpt
idiv
lret
adcb
aad
or
cmp
pushf
sub
shrl
shll
ljmp
push
in
dec
mov
jl
jbe
jbe
lods
fists
mov
mov
imul
ja
je
sbb
ret
cmp
mov
pop
enter
mov
mov
pop
out
fstp
inc
fs
lods
pop
adc
outsb
notb
dec
orl
inc
add
fcomip
pusha
sbb
dec
ja
mov
mov
cs
out
fistpl
mov
mov
repnz
neg
nop
pop
add
divl
cld
popf
frstor
xor
mov
cli
lock
cmp
fisttpll
push
jl
daa
rorl
or
or
jle
lods
unpckhps
adc
mov
lock
jecxz
popl
call
mov
inc
or
inc
sub
addb
aad
faddl
mov
add
mov
in
imul
test
loopne
mov
jmp
xlat
mov
cmp
iret
mov
add
loope
dec
and
aas
stos
or
or
sub
xor
dec
jne
xorb
sbb
jg
pop
inc
stos
xchg
mov
cmp
test
push
lcall
xchg
mov
pop
adc
fldl
sbb
xchg
je
out
dec
sbb
inc
mov
push
loop,pt
jp
cmp
cmp
mov
aam
push
jg
adc
mov
inc
repz
jae
add
fs
and
imul
adc
cmp
scas
jbe
mov
cwtl
int3
push
xlat
testl
add
in
addl
sahf
jp
test
mov
out
xor
xor
jb
mov
jge
push
lret
mov
mov
pop
repnz
xchg
icebp
push
mov
push
pop
sbb
mov
clc
jecxz
sub
sub
mov
shrb
mov
mov
dec
mov
or
and
testb
pop
movsl
fucomp
js
dec
test
aas
sub
enter
mov
mov
push
xchg
cmpsl
push
mov
pop
fiadds
add
jnp
xchg
movsb
push
dec
cmovbe
add
mov
inc
outsl
inc
enter
lock
int3
mov
das
jo
repnz
pop
xchg
mov
loopne
stos
adc
daa
push
shrl
repz
jg
push
sbb
divl
int3
sbb
or
mov
arpl
push
sub
jg
outsl
fwait
fwait
mov
xlat
cmpsb
xlat
out
mov
add
fmulp
stos
add
pop
adc
popf
jo
sub
ret
add
add
push
sahf
mov
into
outsl
inc
jns
ljmp
dec
addl
cltd
adc
in
cld
xor
iret
add
jns
mov
cld
test
xor
push
xchg
das
mov
xchg
loopne
xor
loopne
insl
movsl
iret
xchg
dec
mov
xchg
xor
and
add
push
jle
or
icebp
xor
and
cwtl
jle
cmp
insl
out
cmp
xchg
sti
test
lret
mov
icebp
xchg
push
mov
cmp
inc
mov
or
cwtl
in
sub
jb
sbb
sbb
push
mov
lcall
dec
hlt
add
push
imull
and
mov
clc
mov
rorl
jnp
in
dec
popa
imull
subb
cmp
sbb
push
cmp
pop
mov
cmp
cmp
xlat
or
pop
mov
mov
mov
or
push
or
flds
dec
rorl
cmpl
and
iret
icebp
cmp
or
sub
mov
or
ja
lea
inc
outsl
cmp
mov
cmp
fs
mov
mov
lcall
sbb
popa
into
or
xchg
out
xchg
pop
xchg
add
mov
clc
jecxz
arpl
dec
call
cmpsl
lods
fstps
add
pop
aad
test
jmp
je
add
arpl
cmc
xlat
mov
sub
data16
testl
sbb
mov
jl
loope
sbb
add
cmp
and
mov
dec
cwtl
add
mov
push
adc
pop
dec
mov
ja
rcl
pop
popa
test
inc
pusha
sbb
mov
adc
imul
jbe
ja
xchg
outsl
sahf
pusha
mov
push
fimull
jb
adcl
jbe
ss
jp
rcll
add
mov
sti
mov
push
test
pop
jg
in
cmpl
sbb
int3
test
dec
xchg
jbe
adc
enter
sub
subl
es
test
xchg
mov
mov
test
loop
push
sub
fistpl
mov
or
gs
ret
fwait
xchg
pop
ljmp
out
call
aas
pop
enter
ds
cltd
xchg
push
fwait
and
sbb
pop
xchg
in
aas
in
inc
shrb
cmpsb
xchg
xor
loope
cltd
and
xchg
stos
movsl
dec
mov
negb
or
aaa
cmpb
jg
lock
xchg
add
movsb
lret
test
lods
sbb
pop
scas
mov
jmp
sbb
jb
shll
pop
jae
xor
leave
sbb
sub
jnp
aaa
into
push
xor
in
addr16
mov
pop
hlt
lods
add
rorl
add
out
add
pushl
popf
pop
adc
lods
sbb
sub
and
jno
repz
insl
adc
mov
sarb
mov
pause
dec
mov
pop
bound
xor
dec
data16
mov
pop
xor
add
sbb
scas
dec
out
and
mov
push
mov
fnstsw
vorps
push
adc
or
or
fs
stos
jne
jmp
add
jb
jbe
cmp
inc
lret
dec
das
sub
pusha
data16
stc
or
fcoms
leave
sub
inc
imul
stos
inc
or
and
jp
aas
mov
pop
jg
mov
sub
sub
lahf
cmp
dec
xorl
lods
gs
in
arpl
jg
pop
fisubrl
mov
mov
ror
fstpt
mov
jge
xor
or
aad
or
xchg
dec
fcomps
jae
push
mov
add
dec
fs
xor
leave
cld
mov
xlat
orb
push
add
cld
idivl
loope
xchg
ret
xor
aaa
sub
push
fsubrs
out
ret
into
lcall
xor
daa
cld
cwtl
xchg
sbb
sbb
psubw
hlt
pushf
mov
lock
jle
ja
in
push
std
cmpl
add
scas
xlat
fidivs
adc
movsb
xor
rol
add
add
adc
mov
cmp
cmc
adc
stc
ret
pusha
popa
mov
data16
xor
icebp
cmp
cmpl
aam
cltd
nop
and
pop
cmp
jecxz
mov
jecxz
dec
popf
pop
inc
add
gs
pop
int3
pushl
sbb
repz
jnp
jns
rorb
mov
adc
sub
push
cwtl
pop
add
nop
movsl
and
lahf
icebp
ret
cmp
loopne
shll
mov
dec
jmp
push
cmpl
outsb
cwtl
jno
loope
xor
repnz
shrl
es
ljmp
mov
xchg
push
sahf
lret
pusha
add
sahf
mov
cmpsb
mov
hlt
subl
or
ljmp
xchg
cs
out
jnp
fistpll
xlat
mov
mov
push
sbb
inc
pop
cmpsb
test
sbb
jge
bound
mov
jnp
sbb
mov
decl
repz
data16
xlat
js
lock
test
stos
dec
xchg
mov
and
pop
int
mov
lret
cmp
test
mov
hlt
mov
ret
dec
sub
add
cltd
daa
sub
imul
lea
mov
pop
xchg
pop
sti
inc
imul
add
stos
xor
fistpl
or
data16
dec
xor
sub
push
int
xchg
imul
imul
xor
fidivrl
jns
pushf
sbb
aad
addb
dec
cmp
cmpsb
mov
js
add
lahf
addr16
or
cmp
mov
fs
jne
mov
icebp
andl
call
sbb
imul
loope
adc
pop
sub
xchg
sahf
mov
ds
pop
aas
pop
xchg
jp
sahf
orb
mov
insl
push
pop
jp
jge
inc
outsl
inc
push
cltd
push
and
push
jae
cmp
inc
jno
test
adc
mov
scas
sub
fdiv
pop
fisubs
sbb
scas
std
jnp
fsubrs
push
flds
mov
mov
adcl
mov
fsubrs
outsb
notb
mov
mov
cmpsb
ror
xchg
or
ss
sti
jp
xchg
enter
jmp
mov
dec
mov
lock
add
dec
mov
out
or
cmpsl
cli
sti
mov
dec
into
mov
adc
jmp
adc
jg
outsb
add
fnsave
imul
lock
cltd
inc
popf
mov
stos
fndisi(8087
xor
subb
out
mov
das
outsb
push
push
push
jp
cld
ret
stos
ret
jmp
fcmovnb
adc
in
imul
jb
sbb
sbb
sub
lea
in
push
push
xor
data16
rclb
push
push
and
pop
aad
sub
mov
cmp
adc
sti
fnsave
orl
scas
xchg
insl
push
push
dec
addl
daa
push
xchg
orl
add
imulb
sub
notb
lret
icebp
or
cmp
adc
cs
pop
xor
mov
mov
cmovae
inc
and
es
sahf
mov
out
lock
pushf
popf
jge
sub
sub
int3
clc
add
add
nop
aaa
inc
xor
or
outsb
jmp
stc
sub
xchg
js
xchg
and
je
rcl
mov
push
inc
add
out
sub
ret
lahf
cmpsb
out
sbb
jno
pop
sarl
scas
icebp
cmp
jmp
push
subb
outsb
nop
pop
loop
push
int3
xor
jae
and
pop
in
adc
int3
sub
mov
adc
shrb
xchg
outsl
adcl
xchg
dec
data16
iret
jo
xor
addr16
sub
jge
push
jb
add
pop
inc
mov
add
pop
test
movsb
test
fbstp
xchg
dec
into
jl
mov
xchg
jbe
in
ljmp
inc
dec
cvttps2pi
inc
mov
pusha
lcall
ljmp
lock
dec
popa
fnstsw
ficompl
inc
lahf
push
inc
sbb
push
xchg
ret
sarb
pusha
ja
mov
inc
jne
int
adc
lods
mov
pop
cmp
int
outsl
sbb
dec
imul
mov
and
in
cmc
lret
shrl
out
adc
dec
mov
xchg
mov
push
xchg
call
test
stos
cwtl
lock
add
xchg
adc
mov
add
push
popa
sub
push
sbb
mov
jle
in
in
je
pop
mov
adc
test
cmp
cltd
cmp
mov
sahf
call
sub
out
cmp
stc
sahf
cmpsb
mov
push
invd
or
shl
jnp
and
mov
dec
mov
push
aam
or
shl
icebp
mov
imulb
push
push
mov
sub
test
jg
or
movsl
cli
mov
pop
leave
sbb
in
or
mov
xchg
adc
mov
xor
enter
or
sarb
inc
test
cmp
mov
lcall
incb
out
cmpsl
jnp
fildll
pop
shll
out
xor
pop
in
cltd
dec
js
test
mov
jb
or
pop
and
aad
mov
rclb
int
loopne
ljmp
iret
imul
inc
mov
cmc
push
xchg
jle
test
stos
repnz
mov
mov
cld
popa
scas
testl
jae
cmp
xchg
incl
jnp
pop
push
mov
shl
and
fs
popa
mov
dec
or
test
int3
test
jecxz
loopne
ffreep
aaa
mov
adc
dec
xor
test
mov
pushl
push
leave
scas
pusha
push
out
inc
xor
dec
mov
push
scas
mov
daa
cmp
jno
xor
ds
lods
xlat
scas
push
jge
rcrb
adc
lods
xor
mov
mov
popa
or
sub
stos
mov
jp
test
inc
sub
pop
pop
fs
mov
pop
rcll
aad
mov
cmp
add
dec
aam
xchg
decb
push
jle
leave
jb
mov
int3
addb
cmp
pop
scas
cwtl
ss
aaa
xchg
sub
mulb
daa
jmp
lods
aam
repz
fmuls
roll
adc
inc
add
enter
inc
or
push
add
mov
sbb
jae
xchg
jo
mov
dec
sahf
mov
jl
inc
jne
xor
mov
sbbb
inc
divb
cld
lock
adc
fdivl
pop
cltd
dec
and
sbb
stos
push
nopl
int
push
xor
dec
fmul
or
add
sbb
in
mov
sbb
pusha
sbb
add
fbld
sub
push
jecxz
cmp
xchg
mov
fistpl
pop
push
or
test
test
sbb
and
sbb
cwtl
cmpsl
lods
mov
mov
mov
jmp
lock
inc
mov
dec
test
fmulp
push
in
or
mov
jo
sub
leave
mov
hlt
pop
dec
dec
subb
mov
stos
jle
dec
int3
sar
shlb
in
lret
imul
sbb
jge
cltd
mov
and
subb
jb
pop
sbb
enter
or
mov
xor
cmp
cs
loopne
sahf
icebp
or
and
sub
jnp
loope
cwtl
loopne
iret
xor
jmp
lea
and
inc
cmp
xchg
lret
ret
mov
cwtl
sub
push
cmp
xchg
dec
mov
js
enter
int3
mov
dec
mov
out
out
mov
test
lds
cmpsb
xchg
inc
popf
test
outsb
inc
and
jp
and
sbb
lds
mov
mov
sub
xchg
mov
xchg
lods
andb
int
mov
lcall
inc
jge
stos
jle
and
pop
and
fsts
mov
mov
gs
cld
clc
dec
insb
test
pushf
in
daa
jae
xchg
addr16
fdivrs
icebp
icebp
mov
add
stos
lods
jl
push
js
shlb
aam
sbb
mov
int
push
jae
xchg
cmp
sahf
fdivl
rclb
cmpsb
popf
enter
popa
mov
xchg
scas
test
scas
lods
test
push
mov
add
test
sahf
push
fidivs
cli
lods
cmp
int
xorl
mov
xchg
xchg
mov
pop
orb
mov
and
sbb
arpl
ljmp
mov
fcoml
inc
jmp
push
add
pop
inc
jnp
xor
rorb
cld
scas
imul
movsb
js
test
stos
mov
je
fsubr
int3
mov
in
xchg
daa
pusha
je
rorl
scas
insl
leave
mov
fcoml
arpl
aad
jo
sub
and
mov
aas
sub
mov
adc
leave
xor
push
pop
js
arpl
fildll
cmc
sarl
or
les
and
scas
push
ljmp
dec
xchg
and
cmp
aam
cwtl
aaa
pop
xchg
inc
push
mov
pop
cmp
push
lods
aaa
fwait
ret
out
imul
int3
lea
or
xor
sbb
add
js
ljmp
fcmovu
shrl
movsl
out
inc
push
mov
mov
sub
pop
jle
ret
gs
mov
sbb
cld
mov
aad
mov
jae
xchg
pop
xchg
push
sub
das
aad
aaa
xchg
lods
mov
cmc
sub
nop
xor
fdivs
outsb
xor
pop
test
mov
pop
push
popa
push
repnz
mov
xor
pushf
mov
sbb
rclb
addr16
imul
loopne
loope
sub
es
out
popf
lcall
fisubl
add
pushf
inc
jnp
or
negl
jnp
xchg
sub
jecxz
adc
cmp
jp
dec
repnz
push
cmp
scas
lcall
pop
inc
negl
fistpl
adc
shrb
xchg
pop
and
inc
add
add
movsl
lods
xor
mov
dec
xchg
dec
in
inc
shrl
mov
pop
and
repnz
dec
arpl
dec
sub
outsb
ljmp
and
jne
lret
mov
jne
adc
dec
xor
leave
mov
pop
mov
mov
lods
inc
inc
lods
push
and
leave
loope
sbb
int3
mov
mov
das
popf
sub
xchg
sbbl
mov
sbb
repz
sbb
mov
adc
inc
adc
insb
rcrl
and
push
cmp
mov
add
pop
test
xchg
mov
ja
cli
pop
xchg
sbb
lock
shr
or
inc
les
enter
sub
decb
cmp
addr16
out
ljmp
aam
xchg
or
stos
lcall
push
subl
lods
xlat
mov
ret
or
xor
outsb
sub
hlt
fmuls
push
mov
pusha
add
xchg
xchg
pop
testb
test
cmp
mov
aas
shll
inc
xchg
sub
adc
adc
jp
outsb
sarb
cld
mov
pushf
arpl
test
or
push
mov
inc
pop
jg
or
mov
dec
push
cmp
dec
fcompl
daa
sub
cltd
ljmp
nop
jo
movsb
iret
ljmp
mov
push
ret
pop
xchg
sahf
mov
adc
cmpb
mov
cmp
in
inc
dec
fdivrl
push
in
movsb
xor
in
into
cli
enter
movsl
dec
dec
arpl
es
sti
mov
xlat
inc
cli
cmp
out
xor
mov
push
mov
push
jmp
test
mov
inc
xor
and
movsl
ds
int3
scas
dec
and
and
lret
mov
js
adc
sub
loop
pop
out
adc
repnz
jae
xor
push
mov
jbe
fcoms
mov
cmp
sub
jmp
mov
mov
jmp
push
repnz
dec
repnz
adcl
xorl
int
ljmp
xchg
cwtl
fistl
cld
mov
test
jb
and
sbb
arpl
cmp
adcb
push
es
outsl
subl
mov
inc
out
mov
stc
pushf
shlb
xor
roll
jmp
xlat
daa
ss
cli
pop
mov
sbb
lock
lea
test
fucom
add
xlat
dec
jbe
sub
dec
xchg
repz
mov
adc
aaa
mov
test
stc
jns
dec
mov
leave
or
cmp
xchg
sbb
sub
fwait
xchg
add
mov
adc
test
rcr
adc
rorb
mov
and
jmp
les
daa
icebp
pop
pop
std
lods
xchg
test
movsb
pop
cld
mov
mov
incl
shlb
sbb
pop
mov
aad
xchg
out
std
sub
pop
pop
xchg
jb
jl
mov
scas
mov
dec
jmp
fnsave
in
insl
mov
roll
pushf
xor
cld
cmp
or
xor
ret
or
addr16
push
mov
pop
pop
or
sbb
mov
dec
ds
and
xchg
or
lods
into
gs
lea
add
jne
push
xor
inc
scas
push
test
test
cltd
loope
lods
xchg
push
repnz
js
cli
cmpsb
mov
mov
and
or
aam
add
sbb
push
ss
lods
dec
push
scas
cmp
xchg
lods
cmp
cmp
inc
ljmp
xor
pop
loopne
mov
pop
into
lea
shlb
pop
ret
enter
push
rorb
mov
mov
pop
inc
xchg
je
add
imul
int3
imul
ds
add
ret
mov
incl
lret
dec
mov
fldl2e
xor
push
sub
adc
leave
pop
pop
test
inc
and
cltd
mov
sub
lea
jno
xchg
xchg
movsl
ret
or
inc
btr
scas
push
rcll
jmp
mul
mov
inc
push
testb
lea
xchg
ss
sarl
dec
lahf
push
and
xchg
std
xor
jb
ja
rcrl
push
or
lock
scas
scas
jl
mov
fadds
jae
inc
jae
dec
lock
dec
incb
jo
negb
and
addb
and
aaa
fisttpll
lea
ljmp
push
or
xchg
cwtl
cmp
stc
xor
xchg
jae
outsb
jb
clc
xor
ret
in
jecxz
push
in
lock
inc
aas
lret
mov
clc
loopne
pusha
ds
push
pop
adc
pop
mov
mov
add
pop
in
pop
xchg
shll
cmpsl
js
pop
pop
roll
gs
pop
or
xor
popa
adc
add
sbb
fsub
mov
xchg
or
xchg
in
xchg
popa
adc
sbb
int3
out
push
lods
ja
out
pop
pop
sub
pop
int
xor
sbb
xor
lahf
fprem
fstpl
mov
arpl
mov
mov
xor
cltd
sbbl
jl
push
adc
rcr
lds
sbb
push
adc
mov
inc
mov
daa
push
sahf
add
stos
imul
cmp
cltd
push
movsb
dec
or
addl
xchg
adc
rcl
dec
mov
cwtl
cmpb
in
add
cld
loope
sub
loop
dec
addr16
repz
push
jae
xchg
adc
ret
mov
cltd
jns
cmp
jle
out
add
lret
into
inc
push
pandn
adc
movsl
xor
add
xlat
mov
iret
enter
data16
add
sub
and
xor
xor
jg
bound
xchg
je
pop
lret
mov
sbb
and
fisttpl
jbe
sbb
mov
jg
mov
cltd
pop
test
sbb
bound
cmpsl
and
lcall
stc
aad
stos
fs
insl
das
inc
push
in
test
stc
sub
xor
pop
push
pop
ds
cmpsb
lods
shrb
inc
iret
mov
jae
ljmp
mov
xchg
aad
in
cli
sbb
loop
adc
jp
popa
leave
ret
popa
test
pop
cli
or
popf
fidivrs
testb
cmp
shl
sbb
loop
dec
xchg
sbb
stc
in
cmpsl
inc
mov
jbe
push
lahf
out
pop
add
adc
add
popf
es
loope
xchg
jnp
in
pop
inc
lods
add
pusha
dec
repz
sbb
cmc
leave
sub
outsl
xchg
rolb
sbb
jl
sub
push
inc
outsl
mov
rolb
and
or
sbb
jno
add
mov
dec
shrb
xor
push
in
cmp
jb
daa
fidivrs
and
or
inc
test
imul
jb
clc
jae
pop
mov
or
add
shll
sbb
jmp
fnstenv
dec
add
inc
insl
inc
je
mov
mov
cmpsl
ds
aad
inc
add
mov
loope
dec
cld
sub
add
shlb
adcl
js
aas
pop
mov
aam
xor
sbb
movsl
mov
fldl
sbb
xor
test
xlat
mov
jecxz
rcrl
lds
cmp
add
test
xor
mov
push
pusha
or
imul
and
jp
xchg
dec
xchg
xor
sbb
jmp
inc
call
push
inc
or
jmp
xor
dec
cmp
mov
ret
cwtl
adc
sub
outsl
xor
mov
int3
js
mov
adc
xchg
in
lods
js
shll
sub
out
sbb
and
add
jle
and
and
fsts
imul
jge
clc
cwtl
and
imul
fstpt
int3
fdivl
lock
mov
aad
insb
in
jns
in
and
in
fistpll
cmp
pop
popa
jle
call
mov
hlt
mov
pop
enter
push
repnz
mov
nop
rolb
xchg
rep
push
ret
pop
mov
adc
xor
mov
sub
push
in
lods
mov
lods
mov
movsb
jnp
add
fistpl
orb
push
mov
push
lea
xchg
test
dec
jnp
xor
pop
test
out
fsubr
dec
js
das
fcmovnu
mov
dec
movsb
popf
in
lods
cmpsb
mov
dec
mov
push
ss
ds
sbb
pop
or
sarl
je
jne
ljmp
pop
sbb
xchg
gs
xlat
mov
push
dec
pop
lahf
es
pusha
push
add
cmc
xchg
cmp
das
shl
rcll
mov
sti
jl
cli
cs
arpl
push
or
mov
add
repz
daa
out
add
les
xor
inc
jne
xchg
push
or
je
dec
sub
cmp
lahf
cmc
dec
das
mov
aas
cs
mov
xor
ljmp
mov
popf
std
pop
inc
and
dec
popa
and
lahf
cmp
mov
mov
push
loopne
fistps
mov
or
in
insl
outsb
xlat
arpl
cwtl
add
push
push
mov
pushf
cmp
std
jl
jbe
mov
arpl
fwait
or
pop
xchg
orl
and
mov
in
mov
and
inc
mov
adc
daa
pop
mulb
out
push
push
gs
pop
xchg
dec
ja
out
dec
into
xor
in
mov
lods
out
xchg
shll
xchg
insb
iret
rcrl
rcrb
inc
jle
jmp
xor
bound
cmp
xchg
enter
jl
jbe
scas
ds
imul
pop
mov
dec
pusha
jge
imul
mov
roll
add
movsb
dec
gs
mov
adc
sub
repz
mov
xchg
mov
ds
fdivrl
std
iret
insb
je
pop
aad
push
jecxz
push
scas
push
pop
mov
lret
cld
out
mov
cli
dec
cmpsl
jp
nop
enter
out
jns
mov
add
inc
mov
add
dec
movsb
sbb
icebp
pop
jp
add
dec
pop
xor
xchg
inc
in
jbe
dec
aad
add
lahf
sbb
lock
mov
cmp
adc
mov
movsl
ljmp
jmp
mov
add
xor
pushf
sub
mov
pop
add
ljmp
mov
in
and
addr16
cs
cmp
cmp
loop
call
lahf
jo
lods
repz
fidivs
ds
frstor
aaa
add
push
sahf
jne
sbb
pop
xchg
dec
daa
pop
mov
insl
xchg
cltd
popa
mov
jns
rorb
and
push
mov
xchg
jmp
push
leave
nop
mov
adc
loope
icebp
cmp
jnp
xor
jbe
out
or
or
scas
jnp
and
test
inc
leave
push
in
outsl
jg
push
popa
ljmp
sub
ds
hlt
dec
movsb
and
cmp
xorl
cmc
imul
fwait
push
in
and
pop
xor
jb
fucomi
xlat
sub
mov
fildll
jbe
cmp
in
mov
fidivl
mov
or
pushf
movsl
repnz
jge
mov
arpl
pusha
push
add
inc
lods
mov
or
xor
cmpsl
push
or
pop
pop
jo
xchg
xor
cmc
mov
mov
mov
add
aaa
sbb
mov
lcall
or
push
push
ljmp
push
movsb
jecxz
pop
repz
cmp
in
sub
fs
mov
fcomps
add
int
and
inc
push
cwtl
dec
mov
jg
mov
sbb
call
mov
int
int
jmp
pop
inc
sarl
and
add
in
das
and
popf
test
mov
sub
lret
xorl
inc
lcall
aas
mov
pop
xor
popl
xor
adc
and
push
aam
les
xchg
dec
addr16
push
filds
inc
sbb
cmp
dec
jle
push
adc
mov
mov
jne
lret
popf
mov
cld
cltd
rclb
shll
push
and
add
iret
or
pop
push
inc
mov
mov
sbb
lods
sbb
ds
inc
in
mov
xchg
cld
lea
mov
repnz
mov
aam
xor
cmp
jl
add
inc
imul
jge
loopne
jle
push
jl
aad
sub
loope,pt
and
push
dec
stc
and
sbb
nop
leave
mov
out
cltd
in
in
lret
jmp
sbb
dec
xchg
lods
push
hlt
pop
aas
fbstp
addr16
decb
out
int
int3
es
fcomps
sti
pop
add
jns
add
inc
mov
fisubrl
cmpsl
mov
and
mov
out
imul
xor
mov
push
add
std
sub
add
cmp
sub
cmp
es
inc
xchg
jmp
repz
out
scas
jle
sbb
pop
fisubrl
push
inc
mov
dec
and
pop
jmp
clc
or
loope
repnz
dec
sti
push
ljmp
gs
rcll
sahf
pop
sbbl
in
push
int3
mov
je
xorl
hlt
adc
sub
mov
fbstp
inc
dec
rclb
jp
les
xor
cwtl
push
jo
mov
fildll
cli
testl
test
push
shrb
es
js
stc
pop
out
pop
sub
pop
or
subl
arpl
in
jno
inc
mov
cltd
cmpsb
shll
std
mov
adc
xor
mov
adc
xor
pop
insb
sub
stos
cmp
clc
std
lahf
mov
dec
xchg
test
lcall
js
push
jnp
mov
cld
pushf
xchg
push
mov
adc
insl
dec
xlat
lret
or
call
notb
ret
out
mov
pop
xlat
inc
out
cli
or
mov
repnz
xor
popa
adcb
je
shrl
jnp
mov
scas
insb
xor
jecxz
gs
pop
adc
xor
arpl
add
cmp
dec
jo
jo
imul
jl
adc
dec
mov
mov
xor
pop
loop
mov
push
inc
fs
fldt
loopne
or
test
push
stc
mov
adc
push
sbbl
fwait
push
cmp
mov
loopne
addr16
add
xor
leave
cmp
cmp
mov
mov
fxch
pushf
data16
lods
fimuls
xor
push
ret
mov
icebp
cltd
int3
ret
lock
mov
xchg
sbb
in
nop
xchg
test
fisubs
jg
push
enter
mov
arpl
fld
xchg
inc
repnz
ja
jae
adc
xchg
test
add
xchg
sbb
aam
stos
and
loope
add
std
adc
int
in
dec
cmp
jnp
add
sub
test
xchg
pop
das
pop
dec
sub
sub
aad
xor
cmp
sbb
es
cwtl
adc
push
das
xchg
adc
clc
clc
sahf
sbb
xchg
mov
ds
push
pushf
in
xchg
mov
sub
mov
mov
jmp
arpl
mov
imul
pop
out
in
pop
dec
pop
jnp
add
pop
inc
pop
sbb
inc
push
mov
nop
in
shll
push
arpl
lret
mov
push
popl
ret
mov
ja
xor
sub
or
fmuls
mov
push
mov
in
dec
aas
push
shll
pop
outsb
fisttpl
insl
into
sbb
xchg
dec
or
sbb
icebp
push
sub
cmpsb
mov
stc
xchg
in
mov
test
gs
fisttps
hlt
mov
xlat
pop
pop
cmpb
lret
in
popf
loope
mov
pop
mov
cmp
sub
dec
in
scas
clc
fwait
cmp
add
or
adc
push
pusha
dec
or
mov
shrb
and
loopne
sub
das
jge
jne
inc
xchg
add
ja
lds
int3
ds
xor
dec
imul
xor
add
mov
jb
ss
jbe
xor
add
sub
adc
sbb
loop
sbb
sti
aad
mov
lods
add
jp
push
jae
cmpsb
mov
std
out
pop
jmp
hlt
xchg
lods
mov
incl
push
sbb
fimuls
dec
loop
aaa
outsb
and
cwtl
mov
or
je
ja
cli
push
sbb
cs
fildl
or
add
xor
pop
cmc
rorb
cs
mov
add
int
hlt
push
test
cmc
mov
mov
xor
dec
in
outsb
loop
mov
dec
into
in
fsubrs
into
xor
mov
in
or
and
pop
mov
ja
mov
repnz
shll
ja
out
jl
mov
je
sub
mov
adc
and
inc
inc
xor
cmc
adc
test
das
out
mov
add
mov
in
ret
out
cmp
sub
stc
cld
repnz
clc
mov
leave
icebp
repnz
mov
jmp
sub
xorl
test
xor
shlb
inc
jmp
fiaddl
push
adc
add
rolb
lea
mov
out
pusha
fstp
aaa
cmp
pop
inc
and
rcl
mov
mov
ret
enter
sub
dec
jl
mov
jo
in
movsl
add
test
pusha
cli
xchg
mov
inc
sbb
inc
mov
jg
push
push
and
inc
cmp
lcall
lds
cmp
cli
leave
and
mov
stos
imul
mov
adc
rolb
mov
push
arpl
imul
push
xor
add
mov
jae
ret
push
dec
jo
sub
xchg
mov
outsl
push
push
mov
popa
fs
pop
push
xchg
outsb
leave
repz
jns
shlb
mov
jl
push
insb
in
or
add
ja
ret
sbb
adc
je
mov
jno
mov
jp
push
mov
and
cs
mov
rorl
jecxz
push
sbb
jg
fwait
inc
adc
scas
movl
sbb
sub
mov
rolb
leave
dec
pop
mov
dec
je
xchg
lret
dec
bound
cmp
jge
jae
leave
scas
and
adc
scas
or
sarb
push
pop
bswap
jp
push
ja,pn
lret
sub
jmp
and
fsubs
lock
cmp
cs
lret
pop
xor
pop
mov
scas
mov
xchg
clc
mov
cmp
gs
inc
leave
iret
or
jnp
addb
xchg
cmpsl
mov
mov
push
nop
notl
aam
mov
filds
scas
out
mov
mov
inc
push
mov
push
pop
mov
jno
pop
iret
xor
mov
mov
stc
jno
stos
dec
test
mov
push
bound
xor
notb
push
sub
sahf
xor
xchg
push
push
imul
cmp
js
and
mov
mov
out
xor
negb
add
xor
cwtl
xlat
pushf
sub
sahf
scas
mov
cmp
ja
outsl
test
mov
les
and
lahf
out
int
out
inc
and
and
in
dec
and
inc
shlb
call
jne
push
rcrl
sbb
gs
push
sub
cmp
pop
jmp
and
push
scas
or
cld
jle
mov
scas
xchg
ss
fwait
mov
jg
cmp
inc
sbb
cwtl
sbb
jbe
into
fadds
mov
enter
or
enter
adc
mov
repnz
dec
pop
call
enter
nop
sarl
mov
addr16
jg
xor
xchg
insl
clc
mov
mov
inc
inc
adc
in
pusha
inc
cmp
loopne
xor
cmp
pop
sti
xchg
jbe
test
and
mov
cmpb
fdivrl
jmp
int
fstl
in
out
sub
sarl
jecxz
sahf
dec
sub
mov
in
popf
aam
or
mov
and
push
stos
sbb
icebp
clc
mov
sbb
and
push
pushf
and
mov
in
lret
jle
xchg
popf
rclb
mov
test
inc
mov
out
pop
mov
push
mov
daa
test
mov
les
mov
push
rorl
data16
jbe
aad
mov
mov
or
or
std
cmp
mov
cs
rcr
arpl
xor
pop
ds
pop
xchg
push
xor
jae
xor
adc
sarl
mov
dec
hlt
pop
stos
lods
div
dec
into
sahf
movsb
cmp
imul
or
sub
xchg
adc
and
popl
adc
sbb
push
xor
clc
data16
loop
sti
lods
ljmp
aam
jb
mov
pop
lret
ljmp
in
mov
add
pop
arpl
imul
fstp
aad
xchg
push
data16
sub
mov
fmuls
repz
jno
lods
popf
aaa
xor
mov
ret
mov
addr16
push
push
test
aas
cmp
fisttpl
ret
mov
and
mov
dec
cmpl
pop
mov
mov
jo
mov
in
or
icebp
dec
or
pop
js
inc
mov
adc
int
int
mov
dec
bound
psrlw
jecxz
pop
shl
dec
aad
mov
insb
xchg
xchg
fs
or
jmp
cwtl
jae
in
cmp
mov
mov
rclb
mov
cltd
loop
jp
push
inc
dec
sub
daa
enter
fdivr
adc
mov
hlt
in
fdivrl
mov
add
add
neg
jb
lret
xor
jo
pop
mov
push
add
xor
pop
stos
and
jnp
fstp
mov
push
in
imulb
pop
fs
push
mov
fbld
aam
cmp
pop
add
enter
outsb
sarl
push
adc
and
movsb
dec
pushf
xor
xchg
test
nop
mov
push
add
es
sbb
mov
testb
pop
mov
push
push
cltd
pusha
sahf
push
mov
sub
aad
xchg
inc
test
jmp
ljmp
dec
out
cmp
push
xchg
cmpsl
and
push
mov
stos
out
mov
mov
imulb
stos
lcall
inc
lods
ret
rcrb
add
shrb
mov
inc
cli
adc
cld
push
cmp
push
or
andb
lret
dec
out
pop
jno
add
stos
hlt
adc
fcompl
mov
sub
mov
lcall
aaa
movsb
sti
dec
out
cmp
mulb
adc
popf
ffree
lods
xchg
mov
aaa
or
dec
jmp
xchg
in
mov
stos
push
xchg
add
mov
mov
std
jno
inc
fisubs
mov
in
inc
sbb
pop
pushf
nop
aaa
mov
rcl
in
ds
lods
out
xchg
mov
cmp
das
or
add
int
or
mov
popf
movsl
aam
in
inc
jbe
inc
popa
add
pop
insl
mov
cltd
lahf
inc
push
mov
inc
outsb
popl
sbb
mov
pop
jns
cmpsl
sbb
js
adcl
or
and
outsb
add
popf
sub
pushf
inc
jno
sbb
push
xlat
mov
test
jb
inc
loope
das
loope
mov
aas
mov
shr
out
rolb
in
stos
add
rorb
loop
stc
sbb
jno
adc
jmp
imul
xor
lds
jb
aam
mov
mov
test
add
inc
mov
testl
test
out
sarl
sub
jl
clc
ret
jne
jno
rclb
cld
jne
add
jae
popf
mov
das
pop
jne
out
lods
or
in
rol
lret
inc
cmp
jecxz
hlt
push
cmp
ret
xchg
in
sub
fsubrp
mov
jnp
jp
lock
shll
sbb
or
mov
cmp
lcall
icebp
mov
push
stc
jno
jecxz
jle
out
test
sub
mov
cwtl
and
psllw
mov
hlt
aaa
mov
push
or
push
in
hlt
mov
pop
pop
dec
dec
xchg
sub
shll
mov
push
lcall
or
sarb
mov
test
pop
fucomp
in
ficoml
bound
arpl
cmpsl
inc
fsub
clc
inc
lock
jo
push
clc
cwtl
loop
xchg
jl
outsl
mov
test
rclb
pop
xor
rcl
mov
cmp
aam
mov
cmp
xchg
aam
imul
fildl
call
add
mov
and
add
sbbl
push
inc
lahf
adc
or
jecxz
fxch
pop
mov
adc
shld
jb
pop
int3
jl
xchg
adc
stc
fmuls
jae
push
mov
mov
fisubs
sbb
adc
call
push
dec
mov
push
ss
jecxz
loop
xchg
xchg
repz
xor
pop
or
fnstsw
lahf
sub
mov
ret
inc
adc
repz
popf
ret
mov
cmpb
bnd
lods
movsb
xchg
movups
and
cmp
fsubrl
test
pop
pop
sbb
xor
bound
lret
sbb
jg
add
sarl
mov
ljmp
mov
pop
add
dec
aas
gs
movsl
stos
cmc
cmp
mov
xor
mov
jge
sbb
lahf
test
lahf
add
cmpsl
insb
mov
xchg
jne
mov
cmpl
repnz
fdivrl
popa
lds
nop
inc
adc
jge
je
cltd
ss
stc
cmp
inc
add
push
cltd
popf
cmp
mov
sbb
rcl
and
ja
cmp
pop
jb
popf
fidivl
pop
cmp
pop
xchg
xchg
or
push
mov
xor
popa
pop
mov
mov
iret
cmc
mov
sbb
lods
iret
scas
mov
leave
add
pop
fwait
mov
lock
fiadds
stos
push
pop
and
adc
pop
popf
call
xchg
pop
imul
addl
test
inc
sub
push
add
and
mov
inc
lret
ficoml
or
sbb
call
dec
mov
add
lea
imulb
xchg
test
sahf
cmc
mov
out
pop
dec
jbe
gs
mov
mov
jb
push
insl
jmp
xchg
push
push
test
mov
lea
out
mov
icebp
cmp
jne
jp
arpl
mov
gs
cmp
push
push
dec
jae
and
lods
xor
jl
pop
fwait
aas
lret
inc
add
inc
adc
and
add
cmpsl
and
lds
jl
rcll
xchg
int3
insb
dec
cmc
std
mov
mov
test
adc
push
or
cmp
mov
jmp
sbb
push
inc
leave
mov
sbb
ret
fmull
sub
dec
sub
loope
pop
push
dec
scas
in
push
lret
mov
ror
dec
aam
rclb
fildl
les
in
out
inc
sbb
setae
in
orl
stc
xchg
sahf
add
cmp
cs
cmpsl
xchg
and
fcmovnb
mov
cmp
push
adc
out
fcmove
mov
fsts
adc
lahf
pop
mov
mov
dec
test
sahf
inc
data16
add
or
dec
cmc
cmpsw
jae
test
jge
or
mov
adc
cltd
pop
daa
sub
inc
cmp
xor
movsb
scas
jl
xor
stos
pushf
fwait
loopne
push
loop
push
xor
mov
sbb
nop
clc
push
nop
dec
mov
xchg
push
loopne
mov
out
push
xchg
nop
inc
jb
lret
pusha
push
inc
push
cltd
jbe
je
cld
jg
mov
test
adc
lds
mov
insb
jcxz
sub
call
daa
cwtl
push
into
hlt
lods
mov
xchg
pop
or
jnp
lock
cld
cmp
lds
mov
cmp
sbb
pushf
mov
cmp
sbb
sbb
sub
cmp
out
push
xchg
loopne
nop
sub
out
pop
sub
lret
jmp
lock
enter
aad
hlt
cmp
push
ss
adc
lock
popa
cli
icebp
fs
jo
fcoml
xchg
fwait
int3
cmpsl
pop
jae
iret
shlb
cmpl
call
push
xchg
ds
jbe
rcrl
les
lds
cmpsb
test
mov
jns
aaa
mov
cs
mov
icebp
pop
xchg
mov
mov
cmp
imul
push
mov
push
inc
sbb
mov
xchg
das
mov
ja
gs
inc
sub
xchg
jb
int3
add
xor
repz
mov
sub
aas
loopne
cmc
mov
jmp
cmp
leave
or
push
adc
jle
mov
shrb
mov
and
clc
add
dec
mov
push
jp
icebp
out
in
mov
xchg
ret
divl
into
clc
test
cli
rorl
pop
mov
shlb
test
adc
add
inc
int3
lret
cmc
clc
inc
cmp
sub
into
or
mov
jno
inc
cmp
neg
sub
mov
cs
jmp
xor
jl
push
xchg
sbb
cmp
stos
adc
xchg
xchg
sahf
xchg
mov
fildl
adc
push
test
pop
xor
negb
push
xrelease
ljmp
dec
pop
jp
fdivl
bound
mov
adc
or
xchg
or
or
clc
cli
pop
inc
push
aam
das
cs
ja
jb
pop
scas
scas
cmp
sub
push
fmul
mov
pop
pop
jge
outsl
push
in
lock
mov
les
int
sarl
or
roll
sti
ficoms
push
add
cmp
ja
dec
jle
cld
dec
or
or
xlat
cmp
mov
test
push
orl
sub
push
push
mov
add
outsl
mov
pop
cmp
cltd
and
pop
pop
mov
mov
stos
pop
idivb
clc
mov
inc
pusha
imul
add
cld
stos
in
ja
cwtl
cvtpi2ps
lahf
dec
arpl
es
push
out
inc
outsb
in
fmul
xchg
popa
pop
adc
sbb
idivl
repz
int
dec
loop
iret
fsts
jecxz
ret
xchg
dec
cmp
out
and
mov
add
push
scas
jl
fsubrl
sahf
dec
out
xor
pop
cmp
xor
jo
mov
cmpsb
into
pop
mov
mov
ljmp
dec
xor
dec
push
sbb
pop
hlt
faddp
nop
arpl
lret
lods
mov
inc
dec
leave
mulb
pop
arpl
lahf
xor
push
jb
mov
cmpb
cld
enter
test
test
cmpl
imul
adc
sbb
data16
sti
cmc
xor
sub
ret
movsl
mov
fcompl
mov
pop
push
pop
test
jb
xor
push
mov
popf
fadd
mov
pop
push
mov
mov
cltd
aas
jmp
xor
or
xchg
lcall
inc
pop
lds
pop
aad
scas
adc
out
lods
fnstsw
fimull
sbb
inc
pop
int3
push
in
xchg
int
nop
xchg
push
int3
xchg
mov
dec
xchg
or
inc
mov
lret
cwtl
pushf
das
xchg
enter
mov
ds
push
shrl
push
mov
in
pop
xchg
xchg
repnz
cmc
lds
xchg
or
repnz
inc
xor
push
adc
dec
cmp
mov
mov
repnz
add
push
aas
insl
sbb
push
sub
frstor
xchg
jnp
adc
lret
sub
outsl
cltd
ret
jae
push
lret
lds
and
shll
cmc
movntq
jecxz
sbb
hlt
mov
cmc
inc
xor
popa
daa
adc
dec
sub
fiadds
rcr
jbe
xorb
push
int3
sarb
xchg
jnp
sub
arpl
sbb
movsb
jg
sbb
psubsb
xchg
mov
std
xor
aas
outsl
sbb
je
orb
in
jecxz
fldz
in
popf
mov
mov
sbb
cmpsb
mov
cmp
and
inc
adc
pop
xor
hlt
inc
jo
xorb
mov
movsl
xchg
ficoms
push
cltd
sahf
xor
cltd
ljmp
dec
decb
lea
pushf
or
ljmp
mov
punpckhbw
loopne
inc
adc
pusha
fwait
dec
mov
push
mov
mov
ss
outsl
movsb
dec
push
and
mov
mov
enter
es
stos
sbb
icebp
pop
aam
cld
jge
adcb
in
sub
lret
push
icebp
test
aaa
mov
aad
cld
jne
cmp
cld
inc
push
loop
in
sbb
cli
xchg
ffreep
add
fs
sbb
push
orb
int
sub
das
and
dec
or
outsb
imul
push
repnz
cmp
inc
adc
aad
jl
dec
fistpl
rcrb
hlt
cmp
sti
cwtl
fdivrl
and
daa
mov
adc
mov
fs
mov
mov
xor
mov
pop
data16
mov
or
sbb
mov
mov
mov
jnp
aam
inc
loope
aas
cld
push
cwtl
ret
loope
js
or
or
cli
xchg
js
jle
cmp
and
xor
jb
fidivl
jb
repnz
inc
cli
in
jns
mov
dec
push
fst
push
lock
popf
dec
js
and
cmp
sbb
cmovnp
fstpl
jo
sub
addr16
xlat
lds
loop
sub
add
mov
push
repnz
push
xlat
data16
mov
imul
mov
adc
popf
inc
aaa
mov
cs
movsl
pop
sbb
inc
jb
dec
cli
dec
add
lea
cmpsb
out
mov
mov
jae
pop
or
popf
mov
mov
fstpl
sub
add
je
pop
call
mov
dec
inc
test
add
pop
mov
hlt
or
sub
mov
shl
xlat
pop
inc
cmp
paddw
aaa
adc
int
push
subb
xlat
inc
sub
jne
lret
loopne
cltd
or
xchg
stos
jno
jp
mov
sbb
add
jmp
adc
adc
pusha
push
sbb
push
and
cmc
fmuls
in
pop
lock
pop
mov
loopne
fistpl
adcb
xchg
or
sub
xchg
sub
ds
mov
mov
jg
xor
test
xchg
aad
pop
mov
push
mov
insl
clc
or
scas
lock
icebp
adc
mov
or
add
push
inc
inc
ss
cs
add
fnsave
idivl
popf
cmpsl
pop
outsl
in
xor
popa
test
call
sub
adc
ficoms
mov
loope
repnz
jno
aaa
ret
mov
and
pusha
stc
jns
adc
mov
inc
inc
gs
icebp
push
js
jge
incl
clc
sub
mov
dec
or
jmp
push
mov
sbb
push
add
not
sbb
sub
push
pop
jle
mov
pushf
pop
mov
sub
stc
inc
jae
xchg
nop
xchg
aam
sub
add
adc
mov
adc
sub
out
shrl
dec
adcb
mov
jmp
ja
jmp
add
add
movsb
daa
pop
mov
xchg
mov
neg
mov
push
cmp
push
call
ljmp
push
sub
mov
lcall
dec
mov
dec
adc
sub
or
fldt
inc
and
inc
add
inc
je
jp
inc
or
mov
lcall
jl
pop
into
sbb
dec
insl
fiaddl
sti
mov
insb
jae
rcrl
push
and
into
jmp
and
rorb
cltd
out
sbb
pop
scas
or
sub
mov
mov
das
inc
mov
sbb
repnz
push
int
in
fmul
roll
fnclex
add
rorb
pop
daa
dec
xchg
repnz
pop
js
nop
test
fnstenv
mov
mov
jbe
add
ja
movsb
ja
xor
cmp
mov
fs
sub
inc
sahf
inc
pop
insb
push
or
into
xchg
pop
out
inc
call
dec
out
sub
sti
mov
sub
mov
cmp
imul
mov
dec
in
stos
xchg
mov
movsl
mov
daa
lret
sub
clc
cmpsl
in
stc
fdiv
or
or
adc
dec
xchg
sub
out
sub
test
popa
jge
xchg
adc
mov
push
insb
mov
dec
cmc
xlat
mov
aad
jbe
and
js
or
xchg
nop
ss
xor
mov
inc
push
inc
mov
call
addb
sub
call
insl
mov
stos
sbb
ds
ret
out
out
sbbl
lds
sbb
lods
adc
add
ljmp
jae
lahf
lock
aad
adc
and
cs
pop
cmp
xchg
xchg
cmpsb
aad
push
mov
sub
mov
jp
aad
bound
incl
and
mov
cmp
lock
dec
stos
test
pushf
push
add
fmuls
mov
inc
push
iret
sti
aad
xchg
stos
cmp
es
push
xchg
sbb
pop
xchg
incb
lret
lods
jns
pop
lds
and
movsb
cmpsb
xchg
and
fs
lea
push
es
add
push
xor
pop
inc
pop
aas
xor
add
inc
push
xchg
mov
xchg
pop
sub
and
sbbl
scas
jle
out
popf
push
jmp
pop
imul
mov
test
int
test
pop
jo
arpl
loope
xor
xor
and
sub
scas
iret
or
into
negl
mov
jl
inc
por
inc
mov
popf
aas
sub
xchg
xor
adc
fcomip
test
push
cmpsb
cmp
mov
mov
jle
pushf
stc
mov
jge
pop
cmpsb
mov
sti
or
fadd
popa
sbbb
pop
pop
inc
cmpsb
sub
ljmp
rcrb
push
lods
daa
ficompl
and
incl
push
test
pusha
push
shl
call
mov
loope
push
or
xchg
fiadds
mov
jb
repnz
dec
movsb
daa
repnz
inc
fwait
hlt
test
aaa
lods
mov
mov
pusha
jmp
adc
pop
cmp
and
fdivp
or
add
pop
fimuls
in
les
mov
lods
es
ds
fistps
mov
dec
insb
rclb
test
add
jle
in
add
fwait
and
and
sub
fiaddl
lret
mov
scas
jmp
out
jnp
lcall
test
outsb
outsl
mov
cld
pop
das
cltd
pusha
cmp
cvtpi2ps
xor
xorb
popf
movsb
je
rcrb
cmpsl
mov
ret
or
clc
fisttpl
mov
std
push
cmpsl
dec
xor
cld
out
sarb
mov
jnp
mov
movsb
mov
stos
test
das
mov
jnp
dec
mov
enter
inc
sbb
sbb
mov
mov
js
lea
sti
repnz
sub
repz
cld
test
loopne
jne
pop
adc
loopne
lods
popf
fbstp
and
fbld
data16
lahf
lret
ret
push
stos
scas
addr16
lret
fimull
pop
fstpl
xlat
or
and
pop
push
mov
add
jmp
xchg
leave
test
adc
add
mov
ss
mov
orb
dec
inc
push
pop
push
clc
sub
leave
sbb
fcoml
inc
push
cmc
leave
in
popf
xchg
xor
rcrb
test
scas
pop
fs
imul
sbb
add
out
cltd
gs
jecxz
dec
sbb
pushf
add
fwait
mov
adc
insb
or
inc
fnstcw
adc
insb
cwtl
aad
repnz
push
xor
adc
icebp
xchg
scas
clc
adc
mov
addl
inc
scas
movsl
xchg
lock
aam
inc
std
imul
add
ret
xor
xchg
inc
or
xorb
mov
or
adc
sbb
push
mov
mov
sub
push
mov
pop
lock
xorb
imul
xchg
test
or
subl
xor
mov
adc
cmp
in
nop
mov
into
hlt
cwtl
or
add
jne
aas
xchg
xchg
das
mov
sbb
or
fbstp
shrl
dec
inc
in
cmp
insb
out
xor
pusha
inc
inc
pop
imul
scas
mov
adc
hlt
sbb
stos
jbe
stos
fldl
ja
and
fldt
mov
insl
lret
sub
call
or
jmp
ret
shl
sbb
sbb
and
push
das
sbb
daa
or
sub
jno
movsb
pop
pop
je
into
mov
sbb
mov
or
in
dec
xchg
ret
jl
mov
nop
cwtl
or
pop
rolb
cmp
jnp
sbb
add
mov
add
jp
and
and
ds
jecxz
or
sub
cmpsl
adc
cmp
sbb
aad
mov
fwait
lahf
idivb
inc
push
aam
mov
add
pop
inc
add
das
orl
xchg
or
sub
or
repz
xor
movsb
addl
or
jns
sbb
push
jmp
inc
mov
cmp
add
in
shl
sbb
push
mov
push
mov
movsb
movl
inc
frstor
int3
jmp
icebp
out
aas
dec
mov
fildll
jge
mov
cmpl
xor
ljmp
xorl
pop
les
frstor
push
mov
int
cmp
push
or
adc
in
pop
add
and
mov
inc
or
push
icebp
movsl
icebp
lock
jg
scas
rcrl
hlt
inc
adcl
jnp
imul
ds
mov
pop
add
mov
jge
hlt
in
or
cmc
or
add
in
add
fs
mov
je
sti
push
and
adc
mov
add
sbb
and
in
pop
popf
dec
mov
lgs
das
iret
pop
int
mov
mov
adc
jb
push
jecxz
sub
fucomip
cmp
jns
leave
cwtl
xchg
movsl
jns
sub
ds
mov
push
leave
mov
mov
dec
pop
clc
les
movsb
not
ljmp
dec
daa
adc
xchg
stos
jge
xor
lods
inc
fmul
adc
popf
add
cmp
mov
jo
push
cmp
jl
and
int3
inc
ret
aam
mov
cmp
lods
mov
shll
xor
leave
fwait
adc
jmp
mov
push
ljmp
lahf
mov
es
in
pop
aad
pop
or
sbb
and
jo
mov
std
xlat
mov
ds
fs
in
popa
sbb
sbb
addr16
add
call
inc
mov
cmp
fcmovnb
dec
dec
test
pop
sub
shrl
pop
hlt
not
cli
loopne
cmpsl
or
mov
sbb
ss
sub
sbb
xor
dec
mov
clc
mov
cmpsl
and
rorb
mov
pusha
out
and
dec
rol
pushf
fistpll
sub
push
pop
cs
jp
cvtdq2ps
clc
lea
movsl
popa
test
cmp
lods
push
sub
pop
or
lods
add
outsb
or
ret
pop
into
dec
mov
sub
push
pop
mov
inc
inc
mov
pop
pop
mov
push
faddp
dec
imul
and
mov
push
fucomp
adc
test
cmpsl
arpl
xor
loopne
fisttpl
or
pop
cmp
pop
int3
mov
mov
loop
int
dec
in
and
in
and
jecxz
push
lods
xchg
adc
test
push
clc
int3
xor
out
cmpsb
push
dec
pop
dec
repz
adc
icebp
sbb
nop
testb
testb
imul
lcall
dec
ss
insb
mov
gs
xlat
cs
sbb
mov
xor
push
mov
mov
mov
fsubp
lahf
aad
mov
call
pop
and
pop
and
loopne
lea
mov
movsb
rcrl
xor
dec
int3
mov
adc
cmp
mov
or
sbb
xor
and
shr
sbb
mov
sub
dec
mov
add
sub
rcll
jno
fs
cli
pop
iret
shll
and
cmp
mov
lods
push
cmpsl
pop
lret
arpl
aad
jle
insl
aam
dec
leave
repnz
add
aaa
loope
pop
sub
roll
mov
test
dec
je
and
pop
imul
leave
cmp
cmp
cmp
jg
cmp
jae
mov
add
inc
and
push
or
mov
mov
mov
aaa
cmc
dec
pop
or
cmp
rep
and
fs
sarb
xchg
vmovshdup
lret
std
jns
xor
xchg
push
fcoml
scas
mov
jnp
xor
jae
mov
movsb
jae
pop
aas
lods
std
or
out
cmp
fistl
sbb
fists
push
push
mov
fldt
xchg
cltd
cmp
sbb
test
jno
jge
mov
or
outsb
jp
hlt
mov
lock
icebp
test
aaa
or
pushf
fsubrs
push
lahf
sbb
shrb
fwait
int
pop
mov
fwait
das
out
adc
mov
dec
adc
popa
add
out
jl
adc
js
adc
sub
lahf
mov
shlb
aas
test
bound
scas
and
testl
xor
cmpsb
aaa
add
push
mov
imul
out
jecxz
std
loop
push
dec
mov
or
orb
adc
inc
xchg
cmp
fs
jmp
out
arpl
cmp
jp
dec
add
pusha
loopne
mov
jge
cld
xchg
ljmp
xchg
fwait
adcb
jp
loop
push
das
or
xor
push
fimull
testb
frstor
addr16
test
rdtsc
inc
fcoml
push
arpl
jmp
pop
mov
xchg
xchg
and
jnp
testb
adc
pop
int
js
lcall
mov
or
pusha
loopne
jbe
xchg
push
popa
jnp
nop
xchg
imul
mov
pop
stc
sbb
sub
dec
fiadds
dec
jle
dec
lret
or
pop
cmc
sbb
pop
aam
mov
test
jb
inc
popa
shl
in
mov
mov
xor
add
xchg
push
cmp
xlat
add
gs
lods
dec
pop
repz
adc
aad
adcb
cltd
push
xchg
loop
mov
cmpsl
scas
in
jne
xor
leave
rcrb
arpl
jmp
adc
cld
out
xor
mov
arpl
xor
dec
and
enter
inc
add
icebp
mov
sbb
xor
jge
inc
sbb
sahf
cmp
stos
mov
mov
pop
xchg
pusha
sub
rcr
out
insb
data16
popa
pop
sarb
sbb
adcl
and
test
push
flds
mov
hlt
aad
fcompl
pop
pop
aam
push
xchg
mov
inc
test
fnstsw
or
and
in
push
xor
jp
push
or
ficomps
cmp
adc
in
adc
or
je
orb
sbb
fsubrs
mov
jl
mov
mov
pop
or
xchg
mov
xor
mov
and
jbe
ret
inc
xor
adc
outsb
out
aas
xor
xor
inc
xchg
lock
dec
fcomp
cmpsb
push
pushf
sbb
add
mov
repz
call
sub
push
xchg
mov
test
or
sub
addl
jecxz
adc
jns
fdivrp
pop
into
test
gs
push
mov
loopne
iret
xchg
lods
add
xchg
push
cmc
add
jb
roll
mov
cld
aaa
in
imul
inc
inc
xchg
cmp
dec
stc
mov
shlb
mov
mov
test
jo
and
push
adc
mov
ljmp
imul
mov
xlat
lods
cs
mov
lahf
scas
adc
add
mov
xor
add
idiv
mov
mov
movsl
inc
xchg
jno
pop
or
mulb
xchg
lds
fwait
xchg
xor
ljmp
sub
pusha
daa
push
sbb
pop
loopne
push
xor
cmp
pop
hlt
mov
xchg
push
aam
fidivs
mov
fxch
inc
mov
shlb
bound
mov
mov
cmp
stos
test
sub
mov
std
mov
notl
pusha
imul
fstp
shll
aad
cs
icebp
mov
jae
mov
jne
arpl
test
dec
pusha
add
fs
add
push
dec
ficomps
loopne
aas
scas
lock
stos
out
ds
rcrl
or
gs
and
out
int3
rcrb
mov
in
cld
adc
mov
int3
arpl
pop
sti
mov
sahf
add
or
movsl
mov
leave
sbbb
push
cmp
hlt
out
lds
outsb
pop
stos
inc
add
fcmove
aaa
or
shrl
fisubl
or
dec
xor
dec
xchg
arpl
xor
jp
andl
mov
fs
sbb
mov
and
add
pop
push
pop
bound
dec
push
xchg
movsb
fimull
inc
cmp
mov
ds
test
outsb
nop
and
or
leave
gs
fwait
cmp
aaa
xor
or
dec
sbb
popf
stos
lock
xor
bnd
ss
mov
pop
xchg
and
mov
test
lock
jo
imul
pop
inc
mov
es
loop
xchg
jno
cmpsb
stos
adc
mov
jns
js
movsl
movsb
push
mov
and
sbb
outsl
mov
lret
mov
je
lret
add
sbb
sub
push
xchg
out
sub
xchg
jb
adc
cmp
clc
jge
adc
mov
push
adc
lds
inc
pop
pop
out
push
out
iret
mov
jl
ss
scas
cmp
and
les
lock
mov
cli
xchg
xorl
int
loopne
leave
pop
ds
lcall
xor
lods
out
dec
shll
rol
fstpl
xchg
or
movsl
adc
mov
rcrb
and
inc
cli
jne
aad
xchg
stos
and
xchg
aaa
mov
inc
dec
inc
mulb
lret
xchg
jl
jp
sbb
jne
cld
andl
das
cmpl
sub
and
addr16
cld
imul
cs
addl
push
repnz
mov
xor
jno
and
sbb
fdivrl
lahf
jecxz
push
jp
or
sbb
scas
pop
adc
push
ret
sub
pop
daa
sub
dec
sbb
xor
aaa
adc
ficoms
adc
int
cmpsl
pop
cli
pop
push
fcoms
setg
scas
adc
jo
shrl
iret
cmp
xor
sarl
nop
enter
lods
orb
pushf
sti
adc
push
and
jge
orl
pop
push
add
or
out
je
inc
jne
mov
mov
xchg
sahf
mov
pop
out
pop
cmpsl
pop
adc
bound
je
and
dec
jmp
pop
je
pop
sub
inc
adc
pushf
xlat
and
adc
test
add
int3
lods
jmp
or
xchg
lea
call
mov
lock
dec
je
jb
scas
iret
push
mov
mov
stos
pop
adc
jae
test
arpl
cmp
and
jne
pop
loope
rol
mov
int
push
pusha
xor
js
sub
sub
test
xchg
jecxz
dec
add
daa
popl
xorl
lcall
fcompl
xchg
mov
push
nop
push
mov
fsubl
or
sub
ds
cmpsb
and
movsl
pop
int
xor
adc
sbbl
aad
jmp
add
xchg
lahf
popf
out
jbe
xor
pop
sub
movsl
jae
sbb
mov
sahf
lea
cmpsl
and
lahf
fldt
push
jno
ret
lret
adc
add
out
pop
mov
and
and
mov
lretw
jge
adc
ss
shrb
stos
pop
das
test
pop
test
adcb
and
pop
adcl
leave
push
sub
fs
outsl
ret
jg
dec
mov
lret
jmp
pop
add
push
xchg
dec
gs
jge
mov
loopne
ds
cmp
push
insl
iret
sbb
stc
and
mov
add
es
jl
imul
xchg
mov
repnz
aas
loopne
jns
push
mov
outsb
jecxz
xor
je
and
xrelease
imul
jno
mov
aam
jmp
icebp
aam
dec
pop
xchg
and
mov
mov
out
jmp
sbb
lods
out
mov
pushf
mov
jmp
jae
jge
nop
sub
or
xor
bound
clc
test
adc
out
js
jne
push
or
push
adc
in
adc
cs
inc
mov
addl
fcompl
sahf
xlat
mov
mov
mov
sub
jnp
popa
arpl
in
ret
pop
pop
subb
push
pop
or
and
adc
andps
idivl
sti
out
adc
push
xchg
push
lods
in
sbb
add
fists
sub
jg
jb
and
xchg
aam
xchg
lret
out
or
mov
jmp
push
enter
or
js
insb
popf
jnp
push
les
xchg
ret
push
js
mov
in
hlt
in
test
lea
mov
outsl
inc
test
mov
cwtl
iret
movsl
sar
or
aad
leave
test
mov
pop
cmp
sbb
push
xchg
pop
xchg
data16
iret
popa
jo
push
negl
jne
cwtl
pop
lahf
bound
cwtl
pop
pop
arpl
push
cmpsl
div
cld
cmpsb
ds
mov
and
sub
mov
adc
in
dec
cmp
std
push
fidivl
jo
push
cmpsb
out
xor
shl
and
scas
adc
icebp
pop
push
repnz
or
mov
cs
pop
in
test
dec
test
loopne
fs
std
ja
sub
gs
push
sub
adc
and
sbbl
inc
push
aam
adc
push
popa
pop
jg
subb
imul
ja
inc
mov
cld
mov
cmp
mov
lods
jne
and
insb
out
clc
cmpsb
lods
subb
jno
mov
mov
nop
push
jl
mov
dec
xchg
inc
rclb
out
jb
xor
movsl
jae
repnz
push
daa
loop
mov
dec
add
or
adc
mov
cmp
roll
add
push
xchg
sbb
or
cmpb
scas
mov
enter
pop
jb
mov
stos
dec
dec
mov
cwtl
cmp
add
jns
lods
inc
ret
outsb
push
ds
stos
dec
repnz
push
pop
fisubrl
push
inc
jl
or
aam
inc
cltd
fidivs
pop
lret
cmp
repnz
lahf
shrl
aam
cli
fldl
scas
inc
pop
fidivrs
and
ret
mov
dec
ja
mov
imul
mov
sarb
rol
sub
or
xor
jno
and
lods
fiaddl
mov
icebp
in
lea
inc
sub
scas
aaa
mov
cmpb
mov
and
ds
int
leave
push
sbb
or
fs
in
not
xchg
ds
or
sub
xlat
jg
adc
and
call
fcmovnbe
xchg
out
nop
dec
jl
xchg
rcrb
pop
out
bound
test
push
test
inc
notl
aad
ret
int
test
adc
dec
add
jmp
mov
xor
push
cmpsb
mov
clc
add
outsl
add
and
mov
in
daa
les
push
pop
mov
jecxz
mov
ds
movsl
insb
pusha
icebp
mov
leave
in
ss
adc
xchg
mov
sti
jg
jbe
les
shl
inc
rol
mov
incl
pop
scas
mov
addb
adc
lods
cmc
mov
int3
xchg
add
scas
sub
fcmovb
xchg
dec
push
jb
add
in
xchg
arpl
jne
jmp
fbld
push
dec
xchg
mov
cmp
aam
mov
stos
xor
jp
or
lret
mov
mov
dec
push
adc
mov
xchg
mov
outsb
push
add
mov
xor
addr16
dec
pop
xor
mov
pop
or
jae
lea
mov
xor
rcll
jmp
mov
push
xchg
mov
and
xchg
dec
jbe
in
fwait
scas
pop
loope
mov
jl
push
cmpsl
scas
daa
jge
les
jmp
mov
in
xchg
sub
test
rcrb
iret
push
inc
call
cmc
lods
sub
sbb
xor
out
test
fistl
addb
imul
cmp
xor
shl
hlt
stos
and
negl
cmp
jge
pop
lock
push
dec
sbb
fcompl
lock
xchg
lret
or
ret
stos
into
xor
rorb
cld
dec
cmp
xchg
pop
sti
sub
pusha
adc
dec
shl
cli
sbb
out
test
mov
sbb
stc
int3
mov
or
push
test
lods
mov
insl
sub
pusha
mov
mov
xlat
or
mov
pop
or
inc
fidivrl
add
bound
xchg
mov
into
cwtl
sub
jmp
xchg
xchg
add
fdivl
nop
sahf
jae
adc
or
sub
lea
repz
jae
sub
push
idivb
jne
and
mov
push
pop
push
mov
cmp
mov
or
jmp
fdivrs
in
pop
pop
adc
push
push
mov
andb
xchg
ja
and
sti
jp
add
jae
push
add
test
movsl
add
jge
jnp
inc
lock
stos
lret
out
loop
icebp
dec
lods
sub
or
test
jnp
jecxz
dec
ja
xor
fnsave
xchg
imulb
jle
nop
lods
inc
sbb
call
fiaddl
mov
xor
cli
in
sti
fs
lret
sbb
data16
imul
jp
fnstsw
xor
cmpsb
mov
lea
aam
jae
stos
aaa
repnz
cmp
cmpsl
dec
mov
lret
aas
fistpll
pop
call
int3
lret
or
std
repnz
or
arpl
mov
out
loopne
rcrl
xor
inc
int
imul
std
loopne
leave
jmp
jge
pop
add
cmpsb
icebp
and
leave
cmp
cld
test
insl
jl
cmp
clc
xchg
insb
scas
mov
je
adc
addl
stc
imul
push
in
dec
in
add
popf
cltd
jp
inc
xor
adc
mov
push
or
imull
ret
jle
and
adc
sub
pop
jl
sub
popf
pop
pop
std
iret
jns
call
add
jno
lret
lds
mov
repz
or
push
icebp
clc
hlt
mov
lret
xorb
stc
outsl
xchg
dec
and
inc
pop
add
lods
test
jns
and
xchg
push
xor
sti
inc
jp
xor
pop
pop
cmp
icebp
in
loopne
xchg
insl
mulw
fisttps
out
push
je
shll
pusha
hlt
fildll
outsl
out
mov
xchg
orb
sub
stc
mov
dec
insl
ret
mov
ss
dec
sbbl
cmp
adc
stos
inc
stc
and
and
imul
push
ljmp
loop
sub
popa
negb
stos
dec
imul
inc
push
sub
add
dec
in
test
dec
in
mov
and
ljmp
sarl
pusha
and
or
popf
mov
cmp
mov
popa
cmp
add
push
pop
xor
das
push
loopne
arpl
test
pop
loop
or
lea
lods
lods
sbb
sub
jae
scas
inc
andl
es
cltd
mov
mov
sub
sub
mov
sub
ret
push
mov
jbe
arpl
or
aam
shrb
in
ficomps
repz
sbb
pop
ret
shrl
adc
sub
adc
inc
inc
pop
lods
cltd
sbb
repz
mov
jae
add
mov
or
decl
repz
std
and
jnp
movsb
aas
cmp
daa
pop
jecxz
xchg
mov
mov
cmp
lock
or
xchg
movsl
mov
data16
or
push
setle
popf
sub
push
jb
push
mov
cmp
mov
xchg
ss
pop
dec
mov
push
mov
sbb
or
or
adc
mov
mov
jb
sub
mov
jbe
cmp
pop
pop
dec
xor
push
mov
or
add
pop
add
push
adc
add
push
fs
sbbl
fdivl
xor
mov
pop
xchg
js
ret
inc
mov
mov
xor
push
mov
push
xchg
inc
popf
cmp
cmp
cmp
fsubrl
jl
or
push
jle
sub
stos
sbb
mov
movsl
jl
imulb
mov
xor
xor
das
inc
inc
sub
pop
add
mov
pop
and
in
repz
out
ret
in
out
mov
xchg
shlb
xchg
cld
mov
jmp
out
leave
add
jbe
pop
lea
and
stos
inc
out
loop
mov
in
pop
mov
cld
pop
push
sub
sbb
sbb
xchg
std
hlt
cltd
jo
xchg
sbb
imul
rorl
mov
sbb
mov
jo
das
ret
adc
call
xor
iret
nop
les
lods
lret
movsb
cmpsl
mov
push
mov
dec
adc
jnp
push
sahf
std
popaw
lds
xorl
inc
jno
dec
jnp
inc
mov
xchg
cmpsl
jp
in
adc
jae
xchg
add
test
shlb
arpl
mov
pop
or
popa
fdivrl
ss
fcmovb
rcrb
fucomi
decl
mov
mov
aad
jecxz
sar
repz
inc
cmp
push
push
push
cld
xor
cmc
push
mov
pop
inc
popf
mov
or
leave
das
in
adc
jmp
fnstsw
sbb
psubd
in
cmp
mov
adc
jmp
sbb
push
out
cltd
push
cmp
mov
into
xor
xchg
push
je
xchg
nop
adc
pushf
and
scas
lahf
xor
inc
testl
not
ljmp
sbbb
lods
insl
push
testl
aas
lods
mov
adc
leave
mov
insb
addr16
sub
jae
dec
cwtl
add
cmpsb
pop
inc
daa
xchg
mov
clc
adc
sub
mov
inc
cmp
aas
sub
cmp
xchg
mov
dec
lods
push
movb
lret
and
add
mov
adc
and
fnstsw
out
js
xchg
dec
movsl
mov
mov
out
mov
push
in
inc
aas
mov
sahf
xor
sti
adcl
mov
insb
vandnpd
jg
std
or
xchg
dec
clc
sbb
adc
es
dec
fcompl
jne
iret
jno
inc
sbb
sub
aad
mov
in
pop
je
pop
adc
add
call
inc
mov
lods
data16
dec
in
mov
mov
in
push
mov
xchg
movb
data16
decl
push
imul
stos
pop
aam
add
jmp
jno
int3
scas
add
insl
in
pop
cmc
ss
sub
jle
xchg
in
cmp
push
xchg
sbb
push
xor
leave
dec
jmp
mov
sub
add
push
adc
sarl
inc
cmpsb
pop
je
mov
mov
or
pand
lock
sahf
cmpsb
xor
xchg
dec
scas
dec
cmp
fisubs
ret
ljmp
frstor
loop
mov
mov
lcall
popa
sub
mov
insb
lahf
pop
mov
rolb
and
adc
aaa
mov
lcall
stos
jl
aas
jns
add
jp
pusha
xchg
shll
pop
sub
stos
and
mov
push
out
scas
push
je
mov
movsb
mov
daa
sbb
pop
clc
jle
xchg
rol
dec
loop
dec
or
inc
fadd
pop
jae
stc
mov
sub
xchg
adc
or
int
lock
jg
sti
subl
pop
jge
push
sarb
hlt
lret
shll
pop
sbb
sub
popf
call
movsl
daa
pusha
xor
sbb
ficomps
loope
call
lret
or
push
inc
out
add
clc
or
xchg
adc
mov
lods
mov
jo
adc
sbb
jmp
cmp
dec
inc
fbstp
cmp
mov
dec
or
mov
jno
test
lea
lcall
mov
add
push
repz
call
fmuls
mov
ljmp
xor
addr16
cltd
lods
xor
test
pop
hlt
mov
test
mov
std
mov
cmpsb
mov
cs
ret
or
mov
imul
mov
repnz
jno
stc
int3
shl
mov
sub
cs
or
sbb
xorl
sub
test
nop
jl
inc
scas
lea
pop
and
outsb
sbb
clc
sub
lret
mov
bound
iret
sbb
pop
out
inc
loope
ror
xor
in
stos
and
in
andl
pop
push
dec
push
pop
push
dec
pop
outsl
faddp
or
xchg
lods
mov
inc
adc
fbld
mov
mov
mov
or
mov
imul
ror
cmp
lods
fists
pop
mov
sub
mov
add
sti
mov
mov
loope
add
sbb
adc
fdivl
fdivs
and
xchg
xchg
mov
mov
lock
cmp
or
jmp
ret
pushf
jno
pop
cltd
std
idivb
fbld
popa
fcoms
scas
faddl
xchg
gs
add
aad
aad
xor
fisubl
inc
js
faddl
inc
ja
test
cwtl
scas
cmp
subl
add
dec
xor
add
test
lea
test
cmp
addr16
dec
sub
mov
lock
iret
mov
ret
loopne
dec
pop
pop
add
mov
mov
jg
or
cs
jmp
js
divl
aad
ljmp
mov
add
jnp
arpl
js
or
sub
cmp
dec
lret
inc
ret
push
loopne
pop
xor
sbb
sub
and
jge
xor
adc
jno
daa
jne
cmp
test
xchg
pushf
sahf
or
fwait
pop
cmp
mov
dec
sub
xchg
sbb
mov
out
js
jge
xor
push
cltd
push
xor
mov
popf
mov
lock
mov
cmp
pop
mov
rcll
xlat
inc
test
jge
mov
jge
mov
out
xchg
enter
sub
lret
fsubl
bound
shrl
sub
mov
jle
daa
push
test
add
fistps
adc
push
and
jp
jle
stos
sahf
popa
sub
jno
mov
test
movsb
sub
pop
lods
pop
adc
jne
iret
in
or
push
loopne
mov
decl
movsl
cmpl
out
dec
cld
jg
mov
pop
call
sub
push
mov
into
xchg
testl
pop
or
inc
mov
push
cwtl
sbb
shll
sub
out
mov
arpl
mov
mov
or
mov
iret
in
into
push
jae
mov
test
push
insb
nop
out
xchg
jno
cld
xor
mov
push
dec
push
pop
pop
mov
ljmp
cmp
lods
imul
and
into
je
aas
call
fisttps
mov
mov
fcomps
das
ds
pop
jne
add
dec
jge
outsl
mov
and
es
adc
push
jb
mov
test
out
push
das
call
mov
push
dec
xchg
aaa
push
out
mov
xchg
outsb
call
adc
mov
mov
mov
pop
in
mov
bound
cmp
sub
jge
ficoms
mov
push
xchg
xor
jbe
jle
repnz
fldenv
mov
dec
pop
push
and
jbe
dec
cmp
scas
or
out
in
gs
jmp
aas
dec
orl
popf
sbb
idivb
sub
push
and
loope
mov
test
clc
push
decb
call
adc
adc
push
cmp
xchg
mov
repz
cmpsb
adc
jle
pop
inc
inc
sbb
aad
in
jmp
in
int3
ss
mov
cld
mov
ret
xor
add
and
jno
repnz
xor
movsb
cmp
test
push
mov
call
jp
jns
int3
cmp
jns
int
cmp
push
test
cli
or
jecxz
cwtl
stc
push
dec
ljmp
jmp
cmp
cli
out
scas
mov
or
add
popf
push
cmpsb
imul
mov
enter
out
mov
push
push
xchg
inc
jnp
jmp
loop
sbb
sub
mov
scas
imul
jo
or
rcll
mov
lods
xchg
test
imul
cmp
shr
fcos
inc
push
push
into
push
push
adc
out
xor
dec
sub
out
pop
cmp
xlat
dec
jns
sub
jns
mov
fbstp
inc
mov
jns
outsb
lret
ljmp
js
pop
adc
outsb
jae
cmc
call
stc
leave
cmp
mov
pop
shlb
nop
inc
cmp
aam
jl
dec
and
jnp
adc
mov
pop
pop
ja
subl
popf
push
or
mov
enter
mov
mov
je
out
das
lds
push
fcomp
nop
sbbl
insb
cmc
mov
adc
and
ja
mov
stos
mov
mov
mov
push
jne
scas
adc
cmp
and
aaa
adc
andl
cmp
mov
jns
orl
mov
outsb
adc
or
xor
jge
sbb
scas
mov
mov
push
xlat
adc
cmpsb
test
or
stos
pushf
sbb
inc
cmpsl
jbe
jecxz
rolb
xor
jae
dec
push
push
loope
xchg
jno
push
cmp
xor
fsts
push
aam
fisubl
dec
aas
and
cmp
sub
inc
push
jle
lods
xchg
xor
mov
movl
push
sbb
pop
imul
pop
mov
insb
push
out
jae
mov
lret
xor
xor
xor
pop
xor
lock
loop
cmp
cmp
adc
sbb
xchg
push
jle
iret
daa
xor
pop
inc
inc
cld
sub
scas
dec
and
adc
ja
add
pusha
popa
or
insb
xchg
push
imul
adc
sar
cmp
and
pop
push
fcomps
popf
adc
sbb
nop
arpl
lock
jo
mov
push
dec
cs
push
jle
dec
into
popf
inc
mov
push
rcr
pcmpeqb
fbstp
cmc
fs
push
xchg
adc
push
sti
ret
setbe
rolb
pop
getsec
lds
test
jl
jl
cmpsl
mov
cmp
sub
push
test
out
test
insb
pop
lret
cmpsl
sar
and
adc
movsb
outsb
mov
push
push
aas
lds
jmp
inc
push
mov
aas
cmp
std
aad
sub
jmp
mov
repnz
jbe
lahf
xchg
dec
cmp
lods
sub
aas
or
mov
fildl
push
cmp
cmp
test
and
mov
xchg
push
jb
add
push
insb
int3
cmc
pop
xlat
aam
fdivs
or
pop
inc
push
movsl
xchg
lahf
dec
into
in
test
ret
aam
arpl
loopne
and
lds
lods
and
lods
dec
and
scas
push
aam
icebp
popa
out
in
lret
fnsave
and
notb
lcall
cmp
jbe
rorb
outsl
in
sbb
insb
xor
xor
decb
xchg
sub
xor
inc
mov
sub
ljmp
xchg
test
xlat
dec
enter
movb
lahf
push
mov
addr16
out
pop
stos
mov
outsb
mov
lret
in
pop
sub
fdivrs
fwait
fwait
movsb
pop
mov
cwtl
dec
mov
add
arpl
pop
mov
jge
sub
scas
xchg
sbb
inc
push
jne
adc
xlat
imul
add
jg
xchg
cmpsl
mov
cmp
and
add
in
outsl
iret
data16
dec
jno
xor
call
mov
adc
and
int
cli
mov
popl
mov
hlt
add
pop
or
rcll
adc
pop
sbb
jns
ja
jno
test
cmp
or
cmp
cmp
scas
mov
fwait
mulb
lcallw
or
jmp
lea
adc
ss
iret
mov
or
fnstsw
lret
pop
pop
mov
rcrb
xchg
xchg
dec
jg
ds
xor
or
jne
dec
xchg
inc
pop
imul
xor
aaa
inc
cld
mov
dec
movsb
and
xlat
stos
out
pusha
mov
adc
or
sub
sbb
jae
jb
mov
pop
xor
mov
add
sub
fiadds
fidivl
aaa
shrb
mov
int
cmp
std
mov
push
dec
push
or
ret
xchg
push
push
mov
xchg
imul
ss
jge
fwait
enter
mov
scas
pop
jle
aas
inc
cwtl
and
mov
push
fistl
jo
cmp
xchg
out
cld
mov
aaa
int3
shlb
push
dec
movsl
mov
add
ss
sahf
add
int
push
push
jb
rorl
dec
jle
movsb
push
mov
in
cmpsl
stc
cltd
inc
sarl
pcmpgtw
jne
das
xchg
movsb
xor
fidivl
add
dec
push
push
pop
push
adc
xchg
mov
push
fistpl
mov
xchg
pop
mov
xor
iret
sar
jbe
gs
xchg
mov
outsl
roll
addb
lret
mov
cmp
sbb
in
mov
test
iret
cmp
cs
adc
stos
sbb
fadds
std
mov
out
scas
pop
ret
or
cmp
jmp
pusha
out
jns
push
or
jmp
sbb
std
and
xor
movsl
push
loope
jae
into
in
inc
pop
mov
out
ret
inc
add
iret
insb
dec
sti
cs
insb
xor
hlt
dec
pop
mov
test
inc
dec
adc
inc
icebp
dec
jno
in
fnstsw
jae
stos
repnz
xorl
pop
test
imul
fwait
xchg
push
scas
inc
jp
xor
subb
inc
movsl
cld
movsb
or
xchg
push
cmc
xchg
sub
shr
push
data16
adc
fwait
test
out
jle
jns
mov
sbb
iret
test
into
push
lock
sub
push
mov
mov
sub
fimuls
inc
stos
insb
imul
push
xor
int3
mov
jno
iret
sub
cmp
pop
jnp
mov
lods
scas
lods
or
or
mov
add
sbb
inc
add
mov
cmc
sub
jl
cld
sbb
jmp
jle
cli
stos
mov
add
rol
sub
mov
rol
xchg
imul
push
and
pop
push
insl
sub
push
addr16
lret
or
rcll
lahf
mov
loop
loop
mov
scas
cmpsl
dec
dec
push
das
pop
mov
mov
pop
fmulp
inc
jbe
xchg
jmp
cmp
mov
rclb
xchg
mov
pop
jnp
add
fsubrl
andb
pop
ljmp
sub
pop
out
sbb
adc
leave
cmp
push
push
adc
imul
data16
xor
sahf
xchg
mov
cmc
or
mov
dec
jg
testl
and
sub
mov
cmp
and
push
repz
push
push
ret
pop
imul
hlt
jmp
push
push
sarb
cld
inc
mov
xor
add
imul
std
mov
dec
pop
add
jg
loopne
pop
imul
arpl
sbb
hlt
cld
push
push
pop
cli
push
jge
stos
jns
pop
gs
daa
into
dec
mov
xchg
jbe
out
mov
pop
cmp
jnp
jb
cmp
pop
sub
lret
pop
jbe
pop
cltd
je
in
push
cmp
or
sbb
add
fwait
xchg
shll
sahf
xchg
pop
loopne
mov
jp
roll
sbb
fbstp
xchg
repz
pop
push
mov
push
ds
stos
inc
xchg
repz
dec
pushf
xchg
fwait
in
std
push
inc
jae
fnstcw
fucomi
stos
cmc
push
mov
pop
in
inc
and
sub
sub
mov
clc
inc
shrb
adc
in
shrb
pop
loope
adc
mov
xlat
sub
cltd
ja
mov
xor
add
leave
mov
orl
xchg
iret
add
dec
xor
js
test
push
and
rorb
int
mov
in
mov
or
jp
add
mov
pop
movsb
andb
lock
in
sub
xor
mov
pusha
test
jb
aam
lcall
out
test
rcl
cmp
cli
lea
mov
xchg
mov
movsl
ss
pop
test
nop
jne
icebp
xchg
or
rcr
lcall
xor
adc
scas
cmp
fwait
jne
ss
int
and
adc
lock
jbe
ss
enter
pop
mov
test
cmpsl
sub
cmp
mov
jecxz
push
mov
int3
movsb
andl
mov
xor
push
fwait
test
xor
or
and
inc
inc
scas
shll
out
sub
inc
lea
testl
xor
mov
loope
ficoml
lcall
mov
mov
sub
jge
push
ret
adc
out
sub
xchg
out
mov
es
stos
je
scas
sbb
xorl
cmp
mov
stos
cmpsl
push
out
test
gs
repnz
push
mov
cmp
or
test
jl
insl
mov
mov
xchg
movsb
xor
dec
fists
push
fsubr
adcl
sbb
cli
push
pop
sub
ja
jae
ss
sbb
sub
sti
jae
cmp
mov
dec
sti
lods
mov
sahf
cmc
cmp
add
fisttpl
test
das
fisttpl
mov
fbld
iret
add
int
rolb
inc
add
push
jecxz
js
sbb
out
xor
je
sub
fisubl
sub
fdivl
xchg
xchg
mov
pop
cs
push
xor
jmp
test
icebp
imul
xlat
fcomip
add
sar
stos
sub
mov
cmp
pop
les
movsb
fs
mov
sub
push
and
lock
sbb
and
cmpsb
mov
or
adcb
push
xor
pusha
inc
notb
mov
cld
scas
iret
ja
clc
and
movsb
sbbb
clc
sti
pop
dec
add
js
add
xchg
push
jle
ret
cmc
sbb
cmp
outsl
test
test
in
adc
popf
and
iret
mov
xchg
mov
cltd
sub
ret
or
mov
aas
pop
sti
push
or
adc
jp
fcomp
imul
pop
aas
and
inc
cmp
cmp
and
jle
insl
inc
outsb
lret
outsb
repz
push
insl
stos
mov
adc
sbb
pop
ret
adc
mov
dec
push
rclb
or
scas
jp
adc
mov
add
xor
sbbb
jmp
xchg
push
movsl
xchg
in
ja
or
int
mov
or
lea
and
sub
inc
pop
pusha
jp
das
hlt
stos
fucomp
scas
rcrl
xchg
fldenv
xor
negl
jmp
popa
fiadds
int3
cwtl
or
mov
hlt
pop
jb
mov
insl
daa
mov
lcall
shl
jne
jmp
or
cmp
pop
inc
mov
push
hlt
out
sub
rorl
insl
add
not
jno
subl
stc
nop
adc
sti
bound
mov
fcoml
lock
jb
or
out
in
loope
xor
jge
movsl
dec
test
sub
inc
cld
addb
cmpb
mov
insb
cmc
and
cmp
pop
dec
mov
pop
lret
les
pop
lds
mov
xchg
cmp
mov
xchg
sti
dec
push
mov
cld
std
ja
repz
cmp
sahf
mov
jmp
test
dec
sub
mov
push
push
cmp
sub
or
inc
push
aaa
test
xor
scas
inc
mov
mov
add
adc
push
pop
scas
mov
mov
inc
ret
or
dec
push
jne
and
mov
sub
or
pop
mov
sbb
push
fnstcw
js
jecxz
cmpsl
dec
arpl
mov
add
sti
je
xchg
inc
cli
jae
push
mov
adc
and
mov
cli
in
aad
mov
testl
and
fdivrs
bound
gs
mov
inc
push
sub
sarl
movsb
gs
popa
aas
lds
or
and
pop
pusha
mov
call
int
jbe
repnz
scas
test
sbb
pop
inc
or
cmp
enter
in
sub
outsl
les
inc
decl
push
popf
cs
jl
inc
repz
enter
and
xor
or
lods
sub
push
leave
pop
xor
mov
inc
xchg
dec
icebp
mov
push
or
adc
xor
xchg
sub
inc
jg
jmp
dec
outsb
testl
imul
mov
mov
lea
fimull
and
nop
scas
cmp
imul
add
mov
mov
ja
pop
xor
gs
cld
jo
test
and
or
jp
repz
lds
shr
add
out
fwait
xor
sahf
nop
pop
or
fwait
lock
fcomps
or
fnstenv
rcll
mov
jl
mov
sub
lods
in
sub
push
xchg
ficompl
push
jo
cmc
and
hlt
add
inc
out
inc
and
outsl
sub
insb
mov
mov
mov
int
pusha
pushf
xchg
jnp
shll
sbb
mov
nop
add
int3
mov
xchg
fisttpl
inc
rcr
adc
dec
mov
int
outsl
fidivs
pop
pop
iret
jo
jge
xor
or
adc
jge
xor
dec
out
mov
pop
dec
push
cmp
lcall
mov
push
pop
push
sti
jno
loope
sub
mov
addl
lcall
ret
cld
or
push
into
out
mov
mov
es
ja
inc
jb
icebp
cld
daa
sbb
or
cltd
jge
add
sahf
pop
mov
lock
mov
jnp
add
push
hlt
roll
dec
out
push
add
or
arpl
jmp
lods
inc
pop
mov
stos
push
xchg
push
out
dec
ret
dec
sub
cmpb
rcrb
test
shll
lea
or
inc
in
adc
mov
push
push
add
int
movb
xor
cli
scas
sbb
cmp
sub
add
pop
or
jmp
ljmp
shll
sub
lahf
xchg
dec
repnz
mov
push
sbb
inc
std
mov
xchg
push
scas
mov
adc
pop
lods
mov
or
dec
shrl
jae
and
dec
jbe
fidivl
imull
gs
dec
daa
sarb
test
fs
and
inc
stc
or
sub
sbb
insb
push
adc
xchg
mov
jae
sbb
push
je
inc
fwait
pushf
rclb
lret
push
and
imul
call
sarb
sub
mov
push
pop
rcr
lcall
jecxz
jbe
in
sub
pop
dec
das
pop
loope
sbb
jg
pop
push
or
jge
imul
mov
or
ret
inc
subl
or
push
or
int
loopew,pn
cs
jns
push
sahf
ljmp
cs
iret
pop
xchg
jmp
mov
pop
pop
push
ret
in
sbb
inc
mov
mov
and
cmpsb
jns
aas
cmc
jp
sub
xchg
mov
aad
pop
sub
push
lret
adc
ds
inc
fstp
ds
mov
sub
or
jne
call
aaa
adc
js
jle
jns
sbb
rorb
pcmpeqb
pushf
test
popa
fsts
sub
adcb
mov
or
out
jnp
sub
cmp
sbb
pop
popf
inc
mov
dec
jl
cmpsl
mov
mov
push
mov
jle
out
addr16
pop
xchg
in
mov
sbb
jb
stc
mov
cmp
test
fldcw
cmp
repz
mov
sub
dec
lea
in
in
outsl
jecxz
nop
lret
mov
aam
xor
fisttpll
movsl
or
pop
push
cmp
sub
lds
cs
sub
sub
sti
xor
movsb
sub
out
or
dec
sarb
lcall
add
aad
fs
outsb
mov
adc
cs
cmp
pushf
loopne
push
out
adc
sub
fistpl
fwait
mov
rcrl
sbb
dec
int
pop
cmp
xchg
mov
nop
and
rep
add
ja
pop
sbb
mov
fwait
test
push
jecxz
roll
mov
cltd
dec
jmp
movsb
jle
and
ja
cmp
mov
sub
cmp
pop
rolb
xor
dec
fldl
cmpsl
outsl
inc
lods
jnp
or
pop
movsb
loope
add
shr
clc
sub
jle
icebp
jg
jo
mov
adc
addl
cltd
lods
fists
bound
loopne
pushf
mov
hlt
jnp
mov
int
mov
xchg
pop
xlat
xchg
sbb
mov
xchg
out
outsl
clc
sar
add
mov
cmp
out
cmp
cmp
pop
in
jle
dec
xor
push
cli
aad
mov
addr16
adc
pop
int3
cltd
mov
jns
sti
data16
sahf
xchg
cld
and
jg
out
cpuid
shl
add
sti
ljmp
push
imul
push
bound
int
inc
daa
jo
cmpsl
mov
cli
xchg
jne
xor
aaa
xor
or
sub
inc
sar
aad
stc
and
ret
add
lock
out
cmpb
ljmp
stc
xor
dec
mov
orb
cmp
dec
push
mov
fisubrs
sub
jle
into
push
dec
mov
push
call
or
test
add
and
jns
imul
sub
stc
mov
mov
and
add
push
cmp
sub
xchg
scas
jp
cmp
leave
dec
int3
scas
addr16
inc
movsb
cltd
xor
rclb
lock
pusha
sub
jp
or
and
pop
add
movsb
xchg
mov
daa
dec
lods
mov
shr
rcrb
pop
xor
sbb
mov
pusha
lcall
mov
stos
xor
push
dec
push
sub
jg
cmp
clc
cmpsb
repz
cmc
jecxz
std
mov
lcall
cmc
mov
std
sbb
sub
mov
push
lcall
xchg
mov
inc
push
test
ret
push
mov
jge
mov
mov
das
push
sahf
inc
lcall
inc
pop
mov
mov
lock
pop
or
add
mov
inc
dec
addr16
add
pop
outsb
daa
enter
pop
pop
jno
sbb
add
es
mov
jo
nop
pop
scas
or
and
das
aaa
inc
in
cmp
stos
mov
and
mov
insb
idivb
or
adc
outsb
pusha
cmpsl
pop
and
mov
movsl
jae
dec
ret
mov
xchg
lea
fsubrs
xor
sub
orl
mov
mov
xchg
or
or
ljmp
jb
scas
inc
test
mov
or
ds
fldenv
rcr
aaa
or
data16
mov
inc
mov
xchg
xor
push
test
adc
mov
rcrb
add
adc
adc
dec
cmpsb
and
imul
das
ja
or
push
fnsave
sub
and
jmp
push
lods
scas
xchg
sbb
incl
popa
lcall
scas
xchg
inc
repz
pop
pop
cmp
pop
lahf
mov
repnz
inc
or
lret
push
mov
pop
bound
jnp
sarb
imul
mov
cmp
out
xor
scas
sar
test
push
pop
sbb
push
into
rcrb
jecxz
jmp
lea
enter
rolb
nop
xchg
imul
cmp
aaa
aam
adc
jge
cld
add
push
or
and
adc
daa
ljmp
js
lods
cli
aaa
mov
fstp
xchg
ror
les
jecxz
adc
fistps
dec
cmpsb
rcrl
mov
test
adc
xor
push
call
loop
out
mov
xchg
jno
out
imul
xlat
data16
xchg
inc
mov
gs
out
cmp
sbb
testl
jbe
and
mov
sbb
popa
xchg
fldcw
subb
mov
inc
and
push
aas
jp
mov
sub
imul
rcl
cmp
fcmovnbe
cmc
add
imul
and
pop
movsb
es
inc
sbb
lcall
mov
lock
xor
dec
adc
js
and
mov
insb
mov
test
adc
pop
out
dec
or
mov
lods
and
popf
lock
jle
inc
outsl
in
pusha
xchg
sti
jns
cmp
mov
adc
inc
pop
pop
sub
in
aad
xor
pop
sub
mov
xchg
push
cmp
call
adc
inc
sahf
mov
stos
fucomp
mov
aam
push
pop
in
call
mov
xchg
lds
test
out
jmp
lods
loope
mov
sub
lret
push
dec
sbb
xchg
stos
push
mov
xchg
lods
adc
subb
loopne
mov
jg
int
pop
push
lds
or
insl
push
jo
or
sbbb
or
and
mov
add
pop
jo
inc
add
mov
jbe
stos
mov
jmp
test
inc
test
jmp
out
mov
std
shr
or
stc
inc
jl
pusha
mov
outsb
and
cld
popa
pop
mov
mov
sbb
jne
pop
mov
ficompl
fs
andb
loop
or
shr
jb
cs
jo
inc
inc
lret
xchg
cwtl
mov
mov
mov
ds
push
dec
add
in
das
lret
aas
insb
dec
sbbb
lods
add
mov
adc
jno
mov
clc
jbe
cmpsb
jae
mov
mov
stc
ljmp
fiadds
jecxz
xchg
repz
lcall
lock
mov
inc
loop
xchg
lock
pxor
stos
or
xchg
cmp
xchg
mov
inc
jno
push
ret
cmp
pushf
fimull
pop
arpl
push
pop
aad
imul
mov
mov
inc
jp
lahf
cmc
aam
outsl
jae
mov
and
mov
or
mov
lret
push
or
sbb
test
in
movq
sub
jp
ss
lret
xchg
jb
aas
mov
bound
xchg
mov
pop
add
leave
ss
adc
idivl
sbbl
mov
nop
rcll
ret
jns
add
cmp
mov
mov
cltd
test
dec
jae
sbb
cwtl
add
sbb
push
add
dec
jmp
or
imul
sub
or
icebp
dec
stos
mov
inc
add
cltd
rcrl
in
fsubl
cmc
mov
popa
out
pop
inc
jl
jbe
out
in
out
sub
sbb
icebp
lret
sbbl
mov
inc
test
fsubrl
sub
addb
cmp
ss
scas
sbb
pop
xchg
aad
sub
out
push
pop
adc
aaa
xlat
fstps
jns
std
in
mov
inc
incl
fisttpll
jl
push
test
scas
fdivrs
mov
aad
loopne
push
cmp
dec
ja
popl
gs
cmp
mulb
call
into
imulb
insb
bound
push
inc
lcall
xor
jns
idivb
roll
popa
repz
pop
insb
rorl
fstps
sbb
jno
mov
mov
stos
sub
cs
lods
mov
cmp
aad
dec
stos
sbb
je
xchg
xor
mov
cmp
push
inc
pushf
call
xchg
pop
sbb
fadds
cmp
ret
loop
mov
mov
scas
pop
pop
inc
inc
jns
dec
ror
fucomp
push
loop
repz
mov
scas
mov
insb
push
daa
iret
mov
push
jge
mov
jno
cld
shlb
in
sub
lods
sub
in
in
mov
jns
dec
dec
cmpsl
ret
add
je
or
push
cltd
gs
negb
sahf
das
add
sub
mov
cmpsl
scas
cmp
lret
mov
pop
or
push
cs
dec
jmp
sbb
mov
popa
or
dec
aad
dec
enter
movb
movb
repz
enter
xchg
push
dec
jmp
rolb
mov
stc
imul
jecxz,pt
in
aam
push
adcb
adc
jbe
cmp
sar
sub
xchg
nop
cmp
cmp
add
sub
jmp
loope
jne
fdivs
sub
rorb
add
xlat
mov
xchg
inc
lods
push
orl
pop
dec
xchg
mov
loop
lcall
bound
or
daa
std
pop
or
fucomip
lds
or
xor
pop
cmp
push
xor
std
mov
std
dec
dec
fucomi
fcomip
or
fs
mov
clc
ret
adc
pop
les
rolb
sahf
iret
sub
bound
in
ret
xor
xor
inc
or
add
pop
dec
in
loope
mov
mov
hlt
aad
adcl
loope
ljmp
loope
int
pop
test
clc
lods
into
test
mov
hlt
sbb
push
and
and
cmp
sub
je
mov
jmp
lcall
lds
push
mov
repnz
cmp
or
aaa
lahf
sub
pop
sub
or
xor
in
dec
cmp
lcall
arpl
cmp
jp
cmp
mov
fiadds
lret
jnp
rcll
push
dec
pop
stc
ss
or
inc
xchg
fcomps
mov
cmp
mov
sub
pop
push
mov
lret
clc
cmp
rorl
inc
xor
pop
sbb
mov
push
add
in
inc
add
into
leave
sbb
push
gs
or
dec
jl
fldt
jmp
test
jecxz
dec
in
cmp
mov
push
dec
xor
cmc
jmp
adc
orl
and
popf
inc
stc
inc
testb
xchg
fnstenv
jb
outsl
sbb
sub
xor
sbb
sahf
add
dec
sbb
mov
adc
in
scas
pop
nop
inc
push
lock
mov
inc
ss
sub
int3
cs
push
xor
cmp
cli
shrl
call
mov
xchg
jl
pop
or
arpl
push
push
mov
pop
jb
xchg
lcall
cltd
in
pop
adcl
cmp
mov
movsb
int3
xlat
mov
test
sahf
clc
xor
orl
or
pop
out
inc
lea
lods
rclb
xor
xor
repz
sbb
cmp
call
mov
aas
fcomps
push
outsl
mov
scas
mov
adc
jmp
mov
xchg
in
pop
jne
or
insl
cs
test
es
or
cmpsb
inc
jp
movhps
jae
xlat
insb
pusha
mov
jl
sub
dec
push
arpl
push
adc
adc
push
mov
sub
test
into
sbb
jg
insb
scas
mov
pop
out
sub
cld
sti
mov
mov
jmp
stos
popa
dec
or
mov
negb
scas
pop
repz
and
ljmp
fisubl
in
xchg
sub
cmpsl
and
sti
in
or
popf
mov
popf
pop
mov
int
cld
add
data16
add
rcl
gs
fistpll
sarl
mov
and
test
das
adc
jo
push
jmp
fdivs
add
jp
fsubrs
adc
mov
jb
jge
sub
loop
imul
pop
jge
fadd
insl
movsl
pop
test
mov
xchg
jecxz
dec
mov
inc
mov
sub
insl
loopne
sbb
and
cwtl
sbb
add
cmpsb
adc
aad
pop
shll
fwait
loop
dec
mov
fstpl
orb
imul
add
cli
jno
inc
dec
cmc
and
addr16
icebp
outsb
incl
cmp
into
imul
data16
push
sub
inc
sub
mov
add
xchg
jl
out
movsl
jmp
cmc
flds
loopne
jb
mov
xchg
xchg
mov
lret
or
shll
clc
dec
and
repz
push
push
push
bound
pop
outsl
mov
aaa
fmul
dec
rclb
subb
das
lret
jo
add
mov
mov
scas
push
sbb
xchg
test
xchg
jge
pop
or
push
mov
jg
xchg
rcrb
xor
sub
test
fsubs
pop
xchg
stos
inc
push
loopne
mov
jne
push
lds
sub
xchg
idivl
jle
xchg
das
mov
cs
inc
hlt
ja
xchg
mov
inc
mov
xor
or
fidivs
add
xchg
mov
sub
subb
lock
cmpsl
xchg
nop
xchg
add
sti
mov
lock
mov
add
cli
sub
cmp
lea
std
xchg
test
int3
aad
push
mov
jp
or
fdivr
xor
or
loopne
mov
mov
or
sti
and
shrl
mov
fs
jns
fidivrl
push
sub
push
push
push
pop
add
push
inc
cmpsb
sbb
mov
jg
enter
repz
cld
lea
cli
xor
mov
mov
cld
es
mov
movsb
cmp
shlb
gs
mov
movsl
sub
ficompl
stos
aas
jp
pop
jmp
sbb
lock
cwtl
inc
movsb
in
insl
mov
std
xchg
pushf
sub
mov
lret
push
xchg
pop
movsb
xor
adc
mov
pop
xchg
inc
cli
push
loop
pop
pop
push
push
and
je
mov
mov
and
stc
and
clc
sbb
mov
repz
adc
xorl
test
push
mov
and
int
pop
push
mov
stc
mov
and
mov
inc
rcrl
clc
or
mov
pop
lret
cwtl
inc
enter
inc
movsl
sbb
fiadds
jno
inc
lea
aas
inc
cs
test
xchg
push
pop
xchg
dec
lcall
scas
sarb
adc
or
sbb
into
cmpb
xor
lods
cs
fisttps
mov
sbb
out
jle
popa
imul
pop
aaa
inc
rorb
in
mov
xor
mov
imul
xor
xchg
push
int
imul
repnz
pop
and
fcomi
testl
xchg
lahf
test
push
mov
mov
sub
dec
cmp
outsl
sub
dec
inc
dec
pop
mov
call
xor
mov
cwtl
gs
fs
push
gs
pusha
pop
cmp
or
enter
popf
fcomi
cli
sbb
shl
cmp
outsb
and
dec
out
ja
add
in
scas
rcrl
and
and
mov
in
inc
shll
pop
arpl
stos
adc
cmc
ficoml
aam
xor
roll
enter
mov
scas
fldenv
lahf
icebp
daa
sbb
out
lret
adc
mov
aaa
cmc
enter
mov
fnstsw
ret
aas
ret
inc
or
pop
sub
push
add
outsb
sahf
xchg
ret
add
mov
lock
hlt
sbb
das
xor
xchg
dec
xor
sub
push
subl
fildll
adc
xchg
insl
adc
add
stc
lds
sub
add
inc
or
pop
mov
mov
or
rorl
je
shll
cmpl
mov
pusha
sbb
mov
aad
ret
aas
dec
in
fwait
mov
es
dec
call
mov
sbb
loope
sarl
jbe
mov
inc
inc
inc
inc
in
shlb
push
fldenvs
fdivs
pusha
pop
mov
bound
push
es
mov
fwait
xchg
je
and
mov
sahf
out
cs
or
adc
fistps
lock
and
insl
iret
or
pop
loop
push
dec
jns
or
aad
jae
mov
test
jmp
mov
cwtl
push
or
mul
daa
push
mov
sub
pusha
cmp
sub
sub
push
jbe
add
ds
iret
movsb
scas
data16
dec
adc
xor
in
push
arpl
jno
mov
pop
ret
pop
add
xchg
popa
fisubrs
and
jnp
jp
push
push
pop
out
imul
testb
xlat
idiv
adc
dec
push
mov
sbb
stos
or
jno
test
data16
sub
push
stos
sub
xchg
lahf
scas
les
dec
orb
ret
mov
jbe
push
rcrl
push
inc
push
pop
into
pop
lret
loopne
pop
xchg
and
push
mov
test
mov
fidivl
push
mov
inc
inc
movsl
mov
pop
in
mov
cmp
aad
cmp
cmp
shll
xchg
test
rolb
mov
xchg
and
pusha
inc
dec
jae
push
mov
ret
pop
rolb
arpl
stos
mov
jecxz
loop
mov
xor
icebp
xor
lcall
iret
sub
and
cmp
xor
out
adc
dec
add
mov
faddl
adc
sarl
dec
add
mov
push
sbb
imul
push
lret
inc
xchg
or
add
push
gs
iret
enter
ljmp
fstl
add
mov
test
lods
mov
jns
mov
xor
mov
enter
out
lret
mov
push
shll
jle
int
push
dec
jmp
popf
jp
sub
andb
push
push
or
cmp
mov
es
xor
test
fcoms
jmp
leave
sbb
or
jmp
xor
aas
inc
or
sahf
mov
aaa
sbbb
mov
adc
xor
loop
aad
mull
lock
adc
bound
dec
rclb
push
cwtl
mov
xchg
jo
mov
mov
loopne
push
shll
add
lock
lock
sub
or
ret
lods
andl
ret
int
ss
and
mov
sbb
inc
dec
inc
ret
sub
mov
jns
les
pop
outsl
pusha
dec
cmp
cmp
fdivrl
or
orb
or
shl
ret
aam
lret
adc
mov
in
fsubs
imul
push
ljmp
xchg
mov
cs
jo
or
imul
psadbw
xor
lret
in
stos
cmp
jne
out
daa
shlb
popf
fwait
nop
aad
pop
cmc
or
mov
jecxz
push
jae
test
add
pop
bound
cmp
sbb
sub
out
adcb
sarb
out
out
outsb
jmp
imul
aam
ret
pusha
pop
xchg
fucomi
inc
cwtl
nop
mov
lock
jmp
icebp
add
adc
lahf
adc
les
stos
add
or
jno
lcall
addl
scas
cmp
rclb
mov
inc
ljmp
js
add
lea
jo
movsb
add
lret
push
ja
or
sub
add
sbb
dec
adc
sub
out
sub
cmp
mov
ds
int
imul
negb
sbb
sub
or
push
hlt
jns
out
pop
add
mov
adc
inc
jo
outsl
sti
and
jmp
jp
inc
imul
xchg
add
mov
xor
add
dec
adc
add
sub
push
popf
mov
add
sub
or
add
and
or
enter
dec
out
jmp
push
inc
jne
cmpsb
sub
mov
sti
imul
and
stos
into
xchg
inc
lret
stos
dec
mov
xor
lcall
stos
or
mov
int3
das
and
jmp
xchg
inc
pop
out
mov
adc
mov
jb
pop
sbb
sbb
cmp
sub
pop
out
sbb
icebp
fildll
lock
xor
lret
jbe
aaa
fwait
or
roll
dec
mov
pop
scas
sbb
aad
add
push
xchg
fidivl
push
cmp
aas
sub
test
lret
xor
pop
sarl
mov
cmp
adc
repnz
and
and
das
sub
and
dec
or
lea
pop
pop
jb
sbb
pop
or
inc
adc
insl
pusha
cmp
and
adc
mov
and
mov
jne
lods
in
in
testb
xor
sti
inc
fs
dec
dec
cmpsl
mov
in
mov
push
cmp
test
add
ficomps
ljmp
add
jg
and
inc
in
das
aas
repz
lcall
cmpsl
sub
cwtl
pop
or
test
sbb
jecxz
pusha
dec
inc
dec
jno
dec
pop
xchg
ret
pop
rcr
xchg
test
pop
push
cld
pushf
and
bound
pop
mov
xor
mov
movsl
jg
outsb
jnp
and
pop
not
stos
mov
sbbl
lret
sbb
aas
fbld
sbb
and
stos
cltd
xlat
ret
pop
mov
fidivs
mov
es
mov
loopne
sub
fdivs
sti
cmc
es
sub
jo
xor
sub
out
je
adc
adc
mov
cmpsb
and
xor
push
jne
cmpsl
pushf
ljmp
nop
lock
push
fmul
or
mov
in
sbb
hlt
jns
sbb
cmp
mov
push
testb
jl
out
mov
ret
xchg
mov
pop
imul
jno
jge
push
sbb
dec
mov
add
dec
in
ret
sub
cltd
es
pushl
pop
das
mov
fistps
push
in
out
fld
xchg
inc
inc
sbb
push
daa
loop
sbb
pop
daa
mov
pop
and
movsl
lds
icebp
jp
shl
jg
inc
arpl
rclb
push
cltd
aaa
jno
sahf
test
scas
incb
gs
mov
mov
repz
and
int
leave
lret
ljmp
enter
mov
lea
sub
mov
pop
jge
stos
pop
mov
daa
xchg
jnp
mov
cli
jb
ficompl
testl
fldcw
orb
aam
sub
mov
mov
mov
lret
out
push
fsin
lock
mov
fxch
jb
fwait
mov
push
jle
adc
loopne
subb
fwait
push
push
add
jl
out
xor
sub
repz
xor
inc
inc
sub
sub
mov
hlt
and
cmpsl
lods
fsub
adc
cmp
pop
mov
test
loope
cmp
dec
ss
xchg
sbb
mov
test
cmp
insl
leave
pop
fstps
xor
stos
add
arpl
stos
or
sahf
out
cmp
pop
inc
xchg
mov
stos
xchg
mov
daa
mov
xchg
dec
out
pushf
lret
je
call
sahf
call
push
decl
shlb
or
shll
add
aaa
dec
clc
aas
and
popf
sbb
imul
lea
addr16
pop
mov
cmp
and
cmc
dec
enter
lods
push
mov
sub
or
sbb
cmpsb
push
into
in
mov
clc
out
scas
call
bound
pop
popf
lds
push
bound
add
jnp
xchg
mov
adc
dec
mov
push
cwtl
out
sarb
mov
daa
dec
lock
fldt
sub
inc
cmp
adc
fsts
dec
dec
stc
sub
and
sub
ret
in
inc
and
sbbb
aam
into
loop
movsb
jne
jl
xchg
rorb
ficoms
daa
fimull
xchg
cwtl
mov
dec
sbb
notb
jecxz
arpl
xchg
xchg
mov
sub
push
fdivp
loope
jle
popf
stos
aam
rclb
jnp
sar
push
inc
mov
cltd
lret
unpckhps
out
mov
lods
bound
sub
inc
and
jnp
push
int3
adc
inc
push
scas
or
sub
ret
push
add
pop
out
jno
add
jg
scas
fadds
pop
nop
inc
mov
ds
insl
mov
cmp
icebp
and
push
cwtl
cmpsb
mov
fucomi
aad
fbld
aaa
jne
test
shlb
repz
cmp
inc
div
ja
xchg
sub
dec
sbb
push
mov
sbb
add
popf
mov
mov
jo
sub
test
sbbl
dec
sbb
push
push
lods
or
pop
insb
xor
push
filds
mov
and
jo
adc
nop
jle
push
or
mov
in
ss
ja
js
sahf
imul
mov
test
inc
negb
xchg
int
jne
and
in
xchg
loope
pusha
cli
adc
dec
adc
loop
pop
sub
call
ret
shll
leave
add
lret
out
add
movsl
jae
pushf
dec
orl
out
push
das
sub
cmc
and
push
test
sub
movsb
daa
ja
mov
mov
mov
jns
xchg
dec
mov
call
sbb
dec
sbb
repnz
mov
gs
test
push
in
outsb
mov
cld
loope
dec
out
cmpsb
jecxz
xlat
push
test
add
movsl
scas
cmp
mov
addr16
sbb
xchg
mov
popf
push
adc
and
leave
data16
add
cltd
in
xor
push
loope
pop
cmp
mov
repnz
insl
ret
adc
scas
clc
adc
cld
scas
adc
push
test
mov
imul
sbb
xor
imul
jns
daa
out
pop
inc
adc
sbb
inc
xchg
push
test
mov
fs
cmp
stc
imul
inc
mov
int3
dec
and
mov
clc
sarl
in
pushf
in
mov
mov
sti
mov
mov
and
aad
sub
push
sbbb
jmp
inc
dec
mov
xchg
arpl
test
iret
xor
jecxz
loop
or
push
jmp
jl
jl
push
adc
mov
xchg
les
cmp
dec
mov
je
push
xchg
out
and
xor
push
sbb
popa
mov
push
bound
inc
sub
int3
movl
push
mov
pop
pop
roll
xchg
jbe
popa
mov
mov
fisttpll
mov
sbb
rcrl
xorb
cmp
jge
pop
pop
mov
sti
test
divps
jmp
jno
lcall
stos
out
or
iret
xor
mov
int
push
rorl
std
inc
fcoms
xchg
adc
in
ss
xchg
jecxz
cltd
iret
push
movsl
inc
add
jbe
cmp
mov
stos
lods
jmp
pop
add
data16
mov
pop
and
and
clc
or
and
push
mov
test
inc
push
jle
int3
pcmpeqd
and
test
adc
cmp
movsb
scas
lret
test
aas
out
pop
flds
sarl
hlt
mov
jo
mov
cmp
ret
cmp
stos
mov
ret
mov
or
inc
popa
les
js
mov
rcl
sub
adc
mov
je
cwtl
stos
mov
cwtl
add
cmp
jl
mov
dec
cmp
mov
add
rclb
out
imull
lcall
in
jmp
out
mov
data16
pop
mov
mov
into
mov
sarl
pop
aad
in
dec
mov
jae
sub
dec
rcl
mov
or
out
push
imul
les
cmpsl
movsb
popf
or
ror
test
dec
jnp
movsl
cmp
fmuls
pusha
dec
into
push
xorb
push
inc
in
jmp
repz
xlat
pop
xor
sub
mov
outsb
js
mov
test
xor
loop
dec
add
jp
cwtl
stc
mov
mov
push
mov
or
stos
pushf
xchg
sub
push
loop
or
and
dec
mov
cmp
sahf
jl
mov
adc
or
sbb
pop
add
xchg
loopne
push
inc
fdivrl
cmp
dec
pop
fidivl
jb
mov
or
hlt
data16
fwait
bsf
aaa
aam
mov
fiadds
dec
fistl
mov
loope
mov
lds
or
pop
dec
mov
shrb
jmp
jns
imul
inc
cli
out
push
in
add
insb
ficoml
fsts
fisttps
jg
fnstenv
lods
mov
push
dec
sub
stc
test
mov
mov
je
mov
add
dec
add
aaa
and
mov
sub
bound
inc
mov
xchg
inc
jmp
add
xchg
sbb
jns
and
or
insl
cmp
push
pop
mov
stos
mov
jl
push
cmp
xor
movsl
xchg
xchg
adc
jecxz
push
and
iret
scas
ret
cltd
mov
dec
cld
push
nop
outsb
push
jno
and
mov
adc
xchg
bound
scas
ret
outsb
dec
arpl
xchg
bnd
in
jl
cmp
es
xorl
mov
adc
or
stc
cmp
sbb
bound
sti
mov
push
xor
push
mov
sbb
mov
cmp
dec
mov
pop
push
data16
cwtl
shlb
shl
mov
icebp
lcall
adc
add
scas
out
nop
mov
aad
aad
pop
pop
inc
inc
pop
insl
and
jle
sbbl
sahf
aam
adc
out
movsl
je
pop
sti
dec
loopne
stos
fstps
jb
pop
mov
adc
pop
jp
pop
or
les
js
fidivrl
mov
data16
inc
adc
js
dec
xor
mov
and
inc
das
jge
add
mov
ja
stc
cmpsb
int
dec
jno
jbe
xchg
xor
insb
mov
lods
xor
adc
pop
adc
std
adc
push
rolb
fistps
dec
stos
push
and
or
stos
es
mov
daa
mov
mov
or
ss
xor
jbe
sub
je
int
or
lcall
sub
and
or
adc
outsl
sub
and
xchg
fstpl
lret
lahf
popa
ljmp
mov
push
sarb
cmp
xor
and
add
xchg
mov
ror
fidivl
sbb
xor
fistps
or
adc
loopne
push
cwtl
jmp
cmp
in
jb
jbe
cmpsb
inc
les
or
mov
push
rcrb
sub
sar
jno
pop
adc
aas
xchg
lock
ljmp
jge
scas
ja
iret
arpl
jle
repnz
bound
inc
and
xor
in
sub
roll
fwait
push
push
repnz
mov
jae
sub
adc
xor
cmp
stos
xor
dec
lods
test
inc
movsl
jo
and
sub
mov
js
icebp
movsb
xchg
nop
out
or
jmp
pop
repz
jl
shrb
fcomi
rcl
cld
xor
movsb
and
fabs
into
mov
cwtl
gs
movsl
arpl
ja
test
das
mov
ds
test
fidivl
push
fsubrs
push
mov
fs
pop
imul
pop
xchg
in
inc
mov
addr16
pop
mov
adc
or
mov
test
aad
rorl
push
mov
mov
call
jbe
cmp
dec
xor
mov
rcl
adc
roll
adc
mov
lds
push
sbb
mov
lock
push
mov
or
js
insb
cmp
pop
xlat
or
ja
nop
mov
arpl
bound
jbe
pop
pop
mov
je
pop
pop
sbbl
je
std
sub
mov
sub
roll
fldt
jo
jae
dec
xorl
and
sbb
mov
and
cmpsl
out
xor
faddp
lahf
pop
mov
jmp
or
sbb
movsb
sub
dec
xor
aad
adc
in
or
aad
not
movsl
repz
cltd
jg
push
lcall
pop
loope
mov
outsb
push
addr16
cmp
push
mul
mov
xchg
pop
daa
xor
lahf
ss
jl
stos
sbb
int
shlb
lods
cmp
popa
add
dec
xchg
insl
push
push
mov
pop
inc
cwtl
cwtl
cmpsb
out
aad
fcmovnu
xchg
gs
adc
test
fcoml
xor
mov
mov
fdivrs
mov
lods
shl
fisubs
jae
std
aaa
in
jge
push
cmp
andb
lret
push
fsubrs
xchg
jl
cmc
addr16
leave
or
pop
xchg
jge
cmp
push
sbb
sub
mov
iret
mov
pop
leave
lcall
mov
call
into
sbb
stos
aam
mov
jle
lcall
lcall
imul
sub
mov
shrl
enter
divl
adc
push
jg
mov
pop
inc
and
shlb
sarb
icebp
jb
lcall
lods
ja
mov
test
ficomps
sub
sbb
das
adc
cli
out
push
sub
faddp
add
pop
ds
addr16
pop
jne
gs
cltd
int
test
adc
add
subb
pop
sbb
shrl
in
cli
enter
sub
adc
pop
fdivs
mov
fists
ret
gs
stos
push
dec
push
inc
repnz
xchg
jmp
push
ret
fldcw
add
and
cmpsb
or
inc
out
dec
popa
shlb
inc
shll
xor
push
inc
mov
sub
pop
mov
nop
lahf
lahf
push
imul
jns
insb
hlt
test
sbbb
negl
inc
mov
rcl
clc
mov
icebp
adc
mov
dec
sbb
xchg
jno
pushf
lahf
mov
data16
lds
aam
sete
addr16
pop
mov
inc
lock
shll
aaa
bound
fwait
cmp
pop
push
out
mov
ja
xor
mov
lock
ljmp
fidivl
mov
and
xchg
ficompl
bound
push
mov
divl
test
stos
pop
in
push
mov
adc
xchg
lea
enter
popa
gs
inc
hlt
inc
push
mov
xor
cmp
add
in
jno
xchg
int3
lcall
in
cmp
sbb
or
jbe
loope
lahf
bound
fcompl
push
dec
add
mov
mov
push
cmpsb
ljmp
xor
ret
iret
fisttpl
call
popf
lock
dec
arpl
movsb
push
push
cmp
cmp
jge
in
push
lock
adc
jmp
ja
jb
add
pop
sub
cmp
mov
loop
mov
inc
mov
fwait
inc
test
ja
add
test
leave
arpl
mov
lea
sub
jle
and
or
and
sub
xor
sbb
mov
lret
call
mov
es
in
lds
pop
and
adc
inc
lods
mov
dec
test
les
lcall
jno
lods
in
sar
or
inc
jle
dec
movsb
jmp
add
mov
mov
and
add
mov
dec
inc
testl
jmp
fbstp
push
xchg
nop
pushl
mov
pop
inc
dec
xor
inc
mov
stos
andl
out
fstpt
jae
das
pop
inc
or
loope
mov
insl
cmpps
xor
idivl
adc
es
dec
push
dec
or
fwait
dec
insb
mov
sti
movsl
add
in
es
sbb
mov
data16
adc
stos
adc
imul
shlb
fsub
or
push
cwtl
pop
and
dec
repz
pop
add
sub
cmc
dec
xor
scas
loope
push
mov
sub
into
cmpsb
push
hlt
in
jge
lcall
lea
loope
scas
sahf
loop
aam
repz
jbe
in
mov
test
jmp
push
loope
and
pop
dec
in
inc
xchg
push
jno
in
jp
into
mulb
lahf
std
mov
cmpsb
push
and
es
sub
rorl
pop
in
clc
mov
divb
shlb
or
push
fnstsw
jecxz
mov
mov
in
ds
enter
jge
cli
xchg
in
inc
rcl
dec
adc
pop
mov
insb
xor
mov
cli
fs
call
sti
fadds
stos
mov
loopne
imul
cmp
insb
pushf
test
jg
aam
jae
pop
add
jo
mov
mov
xchg
clc
out
xlat
dec
hlt
and
jge
mov
imul
das
push
insl
mov
xor
hlt
pusha
inc
cwtl
lcall
xchg
inc
cmp
pop
insl
cmpsl
fildl
mov
rcl
inc
adc
pop
lods
pop
add
in
push
pop
push
mov
pop
mov
pop
loop
test
frstor
out
movsb
xchg
arpl
das
repz
ret
cltd
add
pop
cwtl
xor
int3
xor
sbb
jnp
in
insl
das
jp
rcr
jmp
and
sarl
push
fadd
and
inc
dec
lcall
xchg
add
pop
je
lahf
ja
js
ss
xchg
js
decb
or
adc
xchg
mov
outsb
ret
icebp
incb
mov
pop
ficoms
pop
paddb
push
xchg
and
cmp
cmpsl
mov
clc
add
pop
repz
out
xor
xchg
jmp
cmpl
jns
xchg
adcb
loop
fdivr
dec
sti
testb
lods
jne
test
stos
shll
mov
adc
add
cmp
leave
xor
and
or
sub
and
les
stos
adc
xor
insl
push
out
xchg
and
jg
hlt
xor
mov
dec
sbb
fcmove
add
inc
fs
xchg
jmp
jne
dec
arpl
sbb
sbb
lods
or
or
adc
pop
stc
in
addr16
cmp
cmp
loope
out
aas
lret
repnz
rcrl
sub
out
dec
adc
leave
or
jp
adc
xor
cmp
adc
jbe
jle
cmpsl
sbb
mov
adc
cmp
adc
add
ja
repz
dec
push
rolb
push
rorl
mov
rol
mov
mov
or
xchg
mov
in
jno
shrb
leave
in
scas
dec
and
inc
ret
test
xor
xor
js
or
add
shlb
insb
pusha
add
in
add
sbb
leave
arpl
rcrb
lcall
scas
ret
dec
nop
push
sub
out
mov
call
fsubs
mov
fwait
sub
cmpsb
leave
shrb
xor
pop
scas
push
in
lea
int3
inc
cmp
sbb
pop
fnsave
mov
sahf
clc
sub
cmp
sub
jb
mov
mov
push
adc
es
and
xor
push
popf
add
imul
inc
mov
loope
stos
sbb
shlb
cmpsl
cmp
in
cmp
loope
mov
xor
out
jecxz
loopne
pop
cmp
jbe
hlt
adc
push
lret
into
cltd
and
add
pop
add
jbe
sarl
insl
stc
jmp
inc
inc
sub
sahf
sub
mov
mov
and
xchg
pop
pop
imulb
lcall
movsl
xchg
dec
add
xor
and
push
mov
cmp
cmpsl
or
cmc
test
shll
test
jne
push
enter
fildl
sub
and
mov
dec
mov
in
cmc
mov
rcrl
insl
push
mov
or
xor
jo
fistpl
test
inc
test
lret
xchg
pusha
ror
or
addl
xchg
std
nop
dec
or
shlb
lcall
rorl
scas
into
iret
scas
gs
lock
jl
movsb
pop
xchg
pop
out
jno
push
and
jecxz
xor
jmp
fistps
adc
sbb
mov
fsubrs
lods
push
pop
loope
and
pop
ljmp
movsl
pop
inc
xor
out
out
les
mov
out
and
mov
popf
dec
roll
mov
inc
fldl
lds
ss
sbb
fs
in
jecxz
mov
out
cmc
inc
aas
push
dec
inc
or
je
mov
adc
test
ret
dec
std
sub
ret
mov
loopne
sbb
data16
aad
xchg
jmp
lock
mov
pushf
lds
stos
xchg
or
xchg
movsb
andl
in
test
pop
cmp
dec
dec
aad
xchg
and
cmp
push
std
jno
pop
xchg
psubusw
cmpsb
mov
cwtl
or
mov
inc
pop
and
call
sbb
sti
in
subb
cmp
jno
mov
test
adc
call
aad
sub
inc
leave
loopne
lcall
xor
and
cmpsl
outsb
scas
lods
hlt
or
inc
enter
rcrb
iret
push
mov
inc
inc
mov
jecxz
dec
add
dec
out
mov
fidivs
out
jmp
fistl
mov
repnz
data16
mov
jbe
sbb
std
xlat
sbb
xor
aaa
leave
or
xchg
xchg
cmp
fsubs
fwait
dec
cs
loop
push
ss
ljmp
fistpll
into
jnp
cmpsl
or
int3
mov
or
push
push
test
out
arpl
sti
push
test
pop
mov
mov
xchg
xor
in
mov
mov
adc
mov
jns
xor
pop
push
or
mov
mov
lock
jae
ret
push
fistps
mov
out
xor
cmp
dec
mov
xchg
in
cwtl
cmp
xlat
add
cwtl
adc
or
repnz
cmp
repnz
xchg
repz
les
pop
mov
lret
sbb
aad
mov
sarl
xchg
ja
mov
daa
pop
xchg
aad
dec
int
es
cmc
xchg
insb
pushf
mov
or
mov
mov
scas
repz
sahf
in
pop
into
daa
pop
out
push
movsb
sbb
inc
arpl
sub
push
test
add
xor
fdivl
pop
mov
pop
mov
mov
push
pop
test
aam
or
xchg
pop
push
sub
popa
out
or
mov
in
repnz
pushl
loop
push
ss
ds
ret
jae
jmp
xor
mov
jne
sbb
xchg
dec
test
jg
mov
dec
push
push
sbb
cmp
sti
imul
or
test
imulb
into
lret
insl
outsb
push
ljmp
lahf
into
popa
push
add
ret
stc
jae
or
and
pop
or
sub
cmp
xorb
mov
mov
xor
ljmp
fisttpl
aas
add
test
lods
mov
adcl
or
sbb
xor
imul
notb
xor
daa
ss
inc
push
pop
add
jge
jp
ret
repz
shll
add
add
xor
cmp
xor
fisubrl
fidivrs
ret
int
cltd
add
aaa
mov
inc
aaa
das
aaa
push
loope
push
aad
dec
adc
sub
add
popa
int
mov
adc
insb
outsl
in
push
gs
add
loop
sbb
stos
loop
add
imul
xchg
mov
mov
cmp
mov
loopne
and
fdivrl
in
jp
sahf
sbb
push
cld
jg
pop
pop
outsl
jp
movsb
mov
inc
sub
fbstp
cmp
popa
xlat
mov
jge
push
icebp
and
mov
mov
push
dec
cmp
clc
sub
dec
je
rep
jo
pop
mov
jno
lret
add
popa
xchg
bnd
adc
mov
dec
loop
imul
call
cmpsb
out
xor
and
dec
aad
adc
fbld
jmp
fistpll
jne
add
movsb
jl
fcmove
int3
scas
cmp
xchg
lea
test
cmp
test
pop
mov
outsl
adc
movsl
nop
mov
negl
jnp
cmp
scas
test
add
fsubs
repz
stos
stos
lahf
push
lods
dec
sub
mov
xchg
arpl
cmpsb
xchg
mov
cmp
nop
fidivrl
cmp
xchg
ficompl
test
sahf
sub
add
shll
sub
pushfw
adc
jno
in
iret
scas
gs
test
mov
rorb
not
lds
shrl
in
or
pop
pop
dec
mov
js
push
push
mov
cmp
shrb
stos
and
sbb
xor
fimuls
es
or
xlat
mov
mov
imul
mov
add
and
outsl
ret
push
push
arpl
push
pop
or
push
push
outsl
xchg
fwait
cmp
rcrl
mov
stos
mov
les
and
movsb
btcl
push
pop
iret
jnp
sub
adc
xchg
sarl
adc
fcmove
push
ljmp
scas
mov
cmp
lods
cld
fldl
bound
or
xchg
in
mov
loopne
les
and
mov
leave
sub
push
push
js
fstpl
push
jae
mov
fmuls
xor
ficoml
sbb
iret
mov
jecxz
mov
pop
cld
ficoml
jp
push
xor
int
pusha
ja
add
testl
aas
xor
or
mov
jl
jmp
cli
dec
fwait
adc
inc
add
xor
or
cmp
sbb
pop
lret
mov
push
js
sbb
dec
jae
mov
pop
test
aam
popf
leave
xchg
sub
pop
insb
movsb
sub
dec
and
sbb
pop
bound
mov
inc
pop
popf
xchg
xchg
push
dec
insb
push
adc
fmuls
xchg
push
insb
mov
loopne
push
loope
repnz
int3
pop
repnz
inc
xor
les
cltd
cmp
fadd
xorb
and
mov
lret
mov
xchg
cli
mov
loope
imul
cmp
out
or
icebp
pop
or
out
aad
push
push
loop
jo
push
lods
icebp
subw
mov
test
pop
int
jne
jge
ljmp
inc
or
sub
loopne
out
jno
cmp
jl
mov
fwait
cmp
adc
inc
jl
jbe
in
test
push
sub
push
push
mov
adc
shlb
notl
adc
push
scas
cmp
in
xchg
scas
xchg
mov
mov
add
loope
mov
out
testb
cmc
repnz
dec
outsb
rcrb
popf
push
pop
jb
sbb
fwait
scas
int3
pop
xchg
adc
sbb
pop
add
and
jle
insl
cmpsl
imul
xchg
pop
lahf
in
pop
push
mov
mov
jle
in
push
or
inc
pop
lcallw
enter
mov
xchg
mov
lea
cmp
stos
sti
fs
lahf
aas
sarl
dec
cwtl
inc
cmpsl
popf
lret
push
or
mov
push
jp
fs
addl
and
add
test
lahf
push
lahf
or
mov
int
or
sbbl
or
pop
jp
leave
ja
pusha
cld
xor
inc
mov
push
jne
mov
fs
lods
loope
adc
cmc
fs
into
sbb
xchg
outsb
mov
movsl
sbbl
and
add
lock
and
push
int3
int
pop
cmpb
jg
xchg
scas
cmpsb
sub
fwait
movsl
xor
cwtl
cmp
ja
and
in
xchg
sbb
xor
sub
push
or
inc
loopne
add
and
inc
ret
lcall
xor
movsl
and
push
pop
mov
jbe
push
out
jns
cmpsl
jg
mov
add
xor
mov
mov
out
clc
out
inc
mov
dec
loop
imul
dec
mov
loopne
inc
add
jg
cmp
mov
ret
fdivl
xchg
sub
mov
test
nop
enter
clc
pusha
scas
sti
and
bound
push
repz
pop
cmp
mov
mov
pop
fnsave
sub
push
mov
pushf
jge
rcl
dec
sbb
fistpl
loop
shl
xor
paddb
pop
jg
ja
fs
sbb
mov
mov
in
sub
insl
movb
push
incb
xor
pushf
or
cmc
loope
test
push
mov
scas
cmpsl
outsl
xor
aaa
dec
adc
mov
or
mov
int3
inc
inc
fdiv
mov
xchg
or
xchg
inc
jg
dec
pop
cwtl
add
pop
clc
mov
call
fadds
sub
ret
sub
loop
mov
pop
aaa
inc
jno
and
add
cld
push
jge
call
call
jle
adc
sbb
addb
jle
into
pop
pusha
aam
sbbb
sub
cwtl
sub
addb
in
jnp
sbb
lea
mov
mov
sub
xchg
ljmp
cmp
inc
dec
addr16
ret
ja
test
xchg
add
divl
das
lea
jg
push
repz
imul
push
sbb
daa
jp
push
pop
mov
sub
cltd
dec
push
cli
xchg
aad
or
jg
ja
jle
cmp
jns
out
out
icebp
mov
dec
jg
push
and
lea
in
arpl
shr
push
test
je
xchg
xchg
pop
int
test
cmp
mov
dec
adc
pop
inc
std
outsl
mov
imul
cs
jbe
in
lds
push
fisubrs
inc
lods
mov
pop
int
outsb
push
fs
mov
and
fdivs
std
lock
fs
push
subb
ds
and
mov
mov
push
rep
mov
mov
adc
mov
repz
in
adc
ret
dec
inc
mov
sub
das
dec
aaa
xchg
jge
mov
jp
cmp
pop
nop
cmp
sahf
cmpsb
jl
stos
in
adc
xor
mov
movsb
loopne
cmp
inc
push
cwtl
fldcw
shl
or
popa
addl
mov
xor
loop
leave
xor
mov
scas
nop
xchg
lahf
xchg
movsl
inc
sbb
ljmp
mov
dec
jecxz
xchg
cmpsl
push
sahf
pop
int3
aam
push
or
notb
loope
sub
xchg
call
jle
nop
aam
mov
dec
adc
and
add
movsb
mov
push
je
or
sub
das
repnz
mov
dec
xchg
cbtw
cwtl
mov
int3
mov
in
sahf
jns
lret
sub
mov
data16
les
xchg
mov
push
loopne
xor
dec
ret
call
mov
inc
ljmp
dec
push
mov
aam
fwait
lret
cmpsb
pop
jmp
cmpsl
es
adc
xchg
jle
ffreep
notl
push
add
les
js
mov
loopne
cmpsl
and
sub
jle
imul
in
mov
mov
inc
daa
gs
sbb
ss
decb
sti
fidivl
push
jmp
jne
sub
inc
sti
or
adc
mov
fs
int
int
fmuls
clc
andb
mov
mov
scas
ds
xor
xor
icebp
popf
test
add
rclb
test
sbb
js
pop
and
xchg
cltd
pop
out
test
in
cmpsl
int3
xchg
inc
xchg
loop
pmullw
jle
outsl
and
inc
pop
push
fnsave
es
mov
mov
adc
fs
das
jmp
sub
jmp
pop
or
data16
ss
xchg
or
push
out
or
push
outsb
mov
loope
xchg
adc
xorb
xchg
inc
pop
push
pop
les
ficomps
adc
lcall
out
dec
cmp
and
cmp
pop
iret
lret
inc
sub
jae
or
jg
int3
jne
mov
mov
adc
mov
out
fldt
outsl
idivb
pop
fs
mov
inc
test
pop
push
cmpsb
jns
or
dec
test
sub
pop
fisttpll
dec
lcall
push
sarb
sbb
sbb
shlb
and
xchg
inc
and
mov
push
or
std
int3
push
xchg
xchg
pop
cmp
inc
add
mov
pop
les
popa
popf
bnd
push
or
mov
sahf
dec
xor
xchg
push
imul
aad
lods
pop
aas
inc
xchg
sbb
xchg
inc
loop
mov
inc
in
push
or
xchg
rol
clc
inc
ss
pop
es
in
stos
jp
outsb
push
fildl
sti
lahf
adc
aaa
inc
mov
sti
pop
testb
jno
ss
add
push
rep
xor
xchg
ret
outsl
adc
adc
pushf
in
inc
push
cmc
out
mov
negb
sbbl
fidivs
xor
xor
jle
movsb
in
push
enter
stos
xchg
lds
jnp
stos
mov
pop
mov
fsts
aas
in
not
jge
movsb
sbb
sub
add
dec
xchg
inc
or
jle
bound
fsts
dec
add
jb
push
mov
xor
pop
xchg
popa
sub
push
dec
cmpsl
repnz
add
adc
sub
sub
aad
out
fmul
fdivr
push
inc
aas
pop
push
sahf
jmp
mov
lods
inc
movl
xor
push
cmp
scas
out
xor
mov
test
add
mov
sbb
lcall
lahf
or
ret
pop
js
int3
loopne
push
pop
dec
icebp
sbb
imul
push
in
in
stc
inc
mov
push
ss
es
pop
cmp
push
mov
jns
dec
xlat
fcoms
sub
in
fwait
lahf
imul
nop
or
out
in
out
dec
mov
ljmp
fcom
aas
adc
push
rorb
xor
popf
cwtl
out
mov
icebp
sub
xchg
pop
mov
add
cmp
enter
popl
mov
shll
jge
xchg
xchg
and
mov
and
in
sti
and
dec
std
dec
mov
fcmove
in
enter
pop
add
pop
int
mov
outsb
push
imull
jnp
insl
and
or
lcall
les
push
jae
xor
mov
movsb
adcb
mov
adc
out
lahf
negl
push
pop
inc
ret
dec
ds
xchg
or
arpl
cli
movsl
into
popa
out
in
es
fdivrl
add
sub
dec
rorl
add
fldenv
sbb
mov
lds
jb,pt
xchg
mov
ljmp
adc
sub
mov
and
cld
and
push
inc
or
hlt
lret
xchg
cli
repz
pop
push
or
mov
roll
xor
data16
ret
lahf
pop
jle
lds
xchg
xchg
std
cli
adc
sar
lock
outsl
mov
dec
jne
fsubs
push
sbb
adc
and
xchg
dec
shlb
scas
jp
jg
sub
testb
xor
add
mov
mov
or
cmpsb
insb
mov
fidivl
outsl
cmp
sbb
popf
jp
std
jne
jb
pushf
mov
pop
mov
fisubl
mov
das
into
je
jge
sbb
jmp
ljmp
gs
xchg
outsl
and
pop
mov
xchg
movsl
fsts
fildll
push
mov
divb
xchg
js
call
jle
dec
push
dec
clc
or
leave
clc
or
stos
xchg
mov
push
mov
out
lock
aaa
xor
mov
lock
push
xchg
xchg
and
jns
mov
insb
cli
xchg
inc
and
adc
ret
mov
pusha
dec
xchg
jl
out
dec
mov
inc
mov
push
nop
rcrl
test
mov
push
inc
gs
ret
cmpsb
cmc
cmpsl
imul
pop
iret
sbb
mov
sbbl
imul
mov
arpl
jmp
pop
sarl
out
push
cmp
cmp
lret
pop
es
lret
pop
movsl
and
inc
movsl
or
addl
pushf
les
and
push
test
mov
add
test
dec
xchg
aas
cmp
frstor
sub
xor
dec
fidivrl
jg
xchg
jne
xor
aaa
sahf
lea
daa
inc
pop
es
mov
aas
sbb
xor
out
adc
fsubl
mov
or
inc
pop
aad
sti
sbb
jnp
and
xorl
xor
fistps
fisubrl
xchg
and
xchg
jno
ljmp
aas
mov
xchg
xorb
jmp
and
mov
pop
clc
pusha
lock
mov
adc
xchg
mov
jmp
cwtl
inc
mov
jo
ja
mov
jae
adc
test
pop
sbb
cli
fbstp
lock
and
push
adc
mov
cli
lret
sub
dec
lret
inc
rcrb
shlb
out
rcr
pop
mov
xor
xchg
stos
dec
jne
popf
cld
mov
push
fsubrl
cld
add
cmpsl
add
jno
sbb
mov
cld
sub
xor
jge
cmpsb
jp
lock
maskmovq
notl
jno
mov
xchg
dec
pop
shl
xor
sub
mov
adc
mov
mov
addr16
cmpsb
mov
clc
xchg
out
pop
xchg
jle
jnp
lahf
push
les
aad
xchg
sub
cld
xor
sti
pop
addr16
xor
mov
aam
xor
out
pop
inc
sbb
in
imul
xchg
push
cltd
dec
mov
fisttpll
rcll
rcrb
adc
xchg
out
lods
mov
cmp
push
cmp
push
imulb
inc
in
loop
decb
mov
jne
xor
scas
dec
mov
es
adc
mov
scas
arpl
in
jp,pt
cwtl
shl
inc
cmpsl
or
or
stc
call
dec
stos
test
outsl
xorb
sbbl
lods
loope
sbb
aam
cmp
jns
jnp
pop
setge
cmp
xchg
pop
imull
and
push
testl
roll
stc
jg
mov
gs
jno
jmp
fmul
jo
dec
pop
cmp
pusha
mov
js
push
xchg
xchg
cmpsb
enter
mov
mov
ja
jle
aad
push
stos
mov
mov
pop
sbb
into
push
vmovlpd
dec
cs
popa
sbb
inc
daa
jns
adc
push
shl
movsl
add
or
inc
shlb
roll
xchg
dec
shl
and
inc
and
and
ret
mov
lret
xchg
aad
add
daa
mov
loop
jb
adc
push
xchg
jne
sub
ss
repz
test
lcall
loopne
mov
xchg
lock
mov
mov
call
sub
mov
xchg
shr
addr16
scas
push
stos
add
sti
in
adc
out
popa
add
insb
es
dec
mov
iret
push
inc
cmp
cs
jle
mov
adcl
jg
mov
test
mov
rcr
insl
stos
cmpsl
mov
outsb
add
push
pop
or
ja
cmp
or
aad
inc
jge
dec
dec
outsb
cld
fs
es
pop
push
shrl
xchg
mov
pop
scas
mov
clc
shll
mov
mov
lahf
xchg
xchg
push
mov
jb
mov
out
insl
cmpsb
lea
data16
mov
cmp
mov
adc
fisttpll
cmp
leave
adc
ds
mov
xchg
popf
data16
ret
inc
add
pop
ret
repz
in
push
fisubl
faddl
ljmp
aad
sahf
inc
sub
fcom
xchg
ret
or
pushf
and
or
and
mov
push
cmp
add
add
push
and
jmp
lds
lds
aas
pop
dec
outsb
je
inc
push
sbb
dec
daa
add
push
jmp
push
mov
mov
enter
pop
push
jno
pop
loope
mov
arpl
stos
dec
jl
in
bound
scas
pop
loope
inc
adc
std
shl
push
inc
fsubs
bound
leave
and
mov
adc
and
mov
js
dec
popf
mov
mov
push
arpl
loope
push
xor
add
mov
adc
cmc
inc
setbe
mov
pop
int
mov
aas
outsb
sub
jp
cmp
mov
lahf
data16
clc
sbb
adc
in
aam
inc
xor
ds
dec
and
test
add
xchg
mov
pop
push
pop
aas
jno
dec
mov
in
nop
out
or
jl
xchg
sbb
mov
mov
mov
sub
test
adc
xchg
nop
lea
leave
push
xlat
xor
repz
jge
mov
sti
sub
or
mov
fidivl
xor
fsubr
lea
push
adc
ficompl
adc
mov
mov
and
pop
adc
mov
nop
adc
mov
cmp
mov
inc
xchg
push
adc
call
lods
les
mov
lahf
sbb
arpl
sbb
xlat
aam
sbbl
sbb
in
out
xor
adc
jno
xor
xor
popf
xchg
sbb
daa
ds
imul
pop
imul
push
outsl
mov
je
jnp
fisubrl
out
rolb
cmp
leave
insb
xor
pop
xchg
les
pop
arpl
jns
xchg
mov
add
mov
bound
inc
lret
aam
ljmp
adc
jle
jge
push
fildl
or
sub
push
loopne
dec
outsl
rorl
sbb
addl
divl
push
mov
ss
mov
xlat
ss
cmp
jg
pushw
outsb
add
jb
iret
dec
pusha
pop
test
pop
jb
fldenv
ss
stos
jmp
dec
aaa
and
and
xor
sbb
pop
sbb
sub
cld
jp
push
jns
rclb
std
clc
jmp
xchg
sbb
sub
mov
repz
add
push
in
xor
daa
call
call
push
shrb
lcall
lods
push
dec
hlt
shlb
add
repz
cmpsb
rolb
add
or
inc
xchg
icebp
adcl
sub
aas
or
jno
icebp
sti
pop
cld
cmp
int3
clc
inc
adc
xchg
pop
dec
lods
mov
dec
repz
mov
push
hlt
ja
add
ja
mov
xor
stc
fdivl
mov
mov
aas
push
shll
xchg
jnp
shll
jp
sub
mov
scas
xor
cld
sub
inc
ss
mov
lock
movsb
xchg
adc
les
mov
adc
cli
cmp
in
mov
jmp
ja
cli
sbb
jg
inc
frstor
jb
ljmp
ljmp
xor
inc
lret
inc
or
jg
out
stos
mov
lahf
imul
ret
into
insl
or
incl
int
mov
ret
fisttps
outsb
vandnpd
in
das
mov
xor
mov
leave
mov
mov
sub
das
pop
leave
push
xor
or
ja
push
sbb
shlb
push
call
sub
and
ss
clc
cmc
ds
les
imul
xlat
jb
jbe
jae
ja
add
in
dec
pop
sbb
lods
mov
mov
xchg
sub
xor
fisubl
push
sbb
xchg
mov
mov
enter
pop
or
mov
rcr
or
push
insb
sbb
mov
or
lahf
push
xor
mov
inc
mov
pop
popa
addr16
push
sub
dec
adc
adc
jb
adc
sbb
popf
pop
shlb
subb
push
inc
pop
xor
in
jo
icebp
rorl
daa
andb
inc
push
push
leave
sbbl
scas
repz
xor
add
aad
test
ds
std
inc
aam
iret
mov
mov
mov
daa
aam
mov
mov
adc
adc
stos
ds
xor
enter
xlat
insl
mov
sbb
out
jo
push
dec
cmpsl
fildl
jnp
leave
jmp
jne
hlt
aam
pop
push
adc
xor
mov
js
cmp
sub
sub
out
jno
or
pop
int
loope
pop
in
jae
inc
cwtl
pop
ret
and
loop
enter
add
es
test
mov
xor
mov
sti
or
inc
xchg
push
xchg
or
scas
sbb
jne
stos
push
or
stos
sbb
lods
sbb
imul
sti
cmp
cmp
fistpll
orps
loope
mov
mov
mov
dec
arpl
or
adc
imul
jmp
pop
adc
cltd
clc
jmp
movsl
daa
xchg
cmp
popf
push
in
mov
es
sub
shrb
ljmp
daa
jle
and
inc
jne
mov
aam
imul
mov
in
jmp
ret
dec
pop
fldcw
jbe
lea
sub
fsincos
pop
xor
icebp
sbbb
and
lcall
fcompl
jge
xchg
pushf
xchg
dec
fwait
jecxz
push
xchg
cs
xchg
loop
mov
sbb
mov
cmp
lods
mov
xchg
nop
das
mov
adc
imul
mov
mov
push
fs
js
fldenv
xor
cld
pop
push
test
movsb
cmp
push
inc
mov
clc
rorb
mov
push
sub
mov
in
dec
add
add
pop
or
push
imul
cld
repnz
ds
imul
dec
sbb
arpl
push
and
dec
insb
daa
xchg
add
dec
add
jns
jne
shl
test
cmp
adc
mov
xor
mov
pop
idivb
mov
gs
jl
dec
mov
outsb
mov
icebp
pusha
cmpsb
lahf
jo
sbb
lock
in
lret
mov
jmp
dec
inc
mov
lods
adc
pop
ss
jns
adc
mov
jo
xchg
sbb
outsl
aaa
sub
sbb
hlt
inc
in
dec
add
or
cmp
in
fwait
sbb
mov
pop
inc
das
mov
outsb
jae
dec
pop
ficompl
testl
imul
lret
xor
mov
xor
in
mov
popa
jp
ret
pop
repnz
mov
jp
dec
push
sbb
mov
sub
and
hlt
adc
dec
fwait
sub
or
jmp
xchg
xor
fsubr
das
and
xorl
inc
push
js
jl
push
jp
insb
cmp
pop
sarl
xchg
cmc
pop
mov
incl
psubusw
daa
pusha
jl
call
cmp
and
inc
mov
mov
jnp
xchg
and
xor
int3
sub
pop
mov
xchg
xchg
push
cmpsl
mov
aaa
cld
mov
sbb
sbb
sbbb
ret
imul
daa
mov
push
les
clc
outsl
aam
pop
fwait
inc
pop
inc
push
adc
cwtl
sbb
cld
ss
mov
push
pop
pop
sub
dec
out
mov
mov
jo
mov
andl
pusha
enter
mov
das
pusha
and
lds
jle
ror
or
inc
inc
into
push
and
adc
dec
loopne
sub
dec
sti
pop
xchg
mov
mov
ljmp
lret
sahf
mov
out
arpl
mov
mov
pusha
lret
cli
cmp
stos
add
into
dec
insb
jne
push
imul
inc
and
out
roll
adcl
mov
out
addr16
inc
lods
push
push
pop
fiadds
repz
mov
cmp
cmp
outsb
and
pusha
inc
push
orb
call
leave
je
push
lcall
lods
xchg
cmp
pop
jb
mov
jbe
bound
fwait
push
sbb
imul
fistpll
jo
into
xchg
xor
lock
test
fidivrs
push
add
mov
jb
sub
cmp
loopne
jecxz
scas
pop
adc
jnp
jne
add
inc
icebp
pop
pop
mov
push
loopne
push
adc
xchg
inc
pop
adc
push
inc
and
sub
mov
jnp
pop
dec
rcll
sbb
neg
in
and
lcall
enter
pop
fcoml
lock
int
jb
xchg
rcr
mov
add
test
mov
icebp
push
fisubrs
ja
jb
mov
inc
loope
push
sbb
dec
xor
test
or
pop
mov
push
push
fwait
xchg
mov
mov
add
aad
pop
mov
jmp
je
xor
incb
xlat
fcomps
fs
pop
push
int
cld
xor
push
jl
inc
out
pop
fistl
int
mov
xchg
es
mov
inc
pop
adc
mov
pop
lods
test
or
fcmovne
cmc
movsb
dec
push
cmpsl
mov
cmp
and
das
fs
mov
xor
xchg
sbb
and
fwait
push
mov
ret
in
dec
push
fs
inc
lods
fcompl
lret
and
xchg
jg
mov
dec
mov
sub
xchg
cmp
es
adc
cwtl
lret
icebp
xchg
and
mov
aad
cmpsl
enter
lods
ror
in
jmp
xlat
insb
and
out
adc
add
mov
lcall
data16
or
fxam
push
and
jo
lods
stos
xor
js
and
mov
mov
or
insl
jo
gs
and
in
mov
jne
fnstenv
mov
mov
stos
cld
mov
jne
fwait
test
jb
mov
adc
cmp
popf
inc
subl
lcall
clc
ds
mov
xor
out
scas
lret
dec
push
nop
shl
sarl
mov
sbb
push
push
orb
int
test
xor
jnp
cli
inc
in
push
loope
mov
jno
push
xorl
mov
orb
add
nop
sbb
cmp
in
stos
insb
xor
ficoms
xchg
jo
icebp
mov
pop
aaa
fldl
xchg
imul
cld
sti
add
cmpsb
inc
dec
mov
pop
icebp
out
ds
dec
mov
fmuls
mov
out
pop
test
xor
xor
xchg
data16
lock
popa
lea
xchg
cmp
int
dec
inc
sub
popf
xor
testl
les
movsb
std
outsb
test
sub
sbb
movl
xchg
push
shlb
or
push
adc
xor
mulb
cmp
ljmp
sbb
into
and
push
cmp
and
mov
adc
jmp
mov
enter
filds
into
jp
movsl
lds
aas
xor
subl
or
fimuls
pop
sub
pop
xchg
pop
stc
mov
jle
sub
mov
push
lcall
or
lods
mov
lret
rcll
jne
xor
loopne
push
mov
xchg
andb
push
rorb
jno
push
add
shl
cmpsb
int
inc
fsubl
out
mov
dec
mov
scas
inc
jle
and
test
mov
mov
pop
pushf
stos
aam
xchg
jb
mov
and
shl
mov
movsb
sub
les
pop
or
sahf
outsl
add
jne
or
jp
fsubp
xlat
sbb
jg
and
loope
ret
adc
int
rorl
in
out
cmp
sbb
rcrb
push
xor
xor
cwtl
cmp
lret
mov
test
clc
rclb
or
imul
sub
lock
fsub
inc
add
inc
stc
dec
xor
mov
pop
lods
jmp
mov
sub
mov
pop
jae
inc
nop
add
outsl
out
adc
push
notb
jp
mov
xor
or
jmp
xchg
inc
stos
imul
xchg
push
jbe
dec
mov
mov
repnz
gs
scas
and
push
fmuls
loope
push
jae
or
iret
vorpd
movsl
cmp
out
inc
je
fistl
sub
sbb
xor
sub
insl
gs
dec
and
data16
fdivrl
push
ret
sti
and
mov
fld
insl
inc
lret
cmp
nop
dec
sti
imul
fwait
jp
inc
and
pop
mov
or
shlb
adc
movsl
pop
jecxz
xchg
push
and
jbe
lods
lret
pop
mov
xor
test
lods
shll
cltd
adc
inc
mov
sub
fidivs
mov
cmp
sbb
enter
fildll
xchg
insb
dec
and
push
mov
les
pop
insb
jle
in
shll
sub
test
add
iret
push
jmp
cmc
xlat
mov
popf
sbb
sbb
lods
dec
mulb
add
jl
jmp
jecxz
lret
call
leave
test
loop
mov
xor
fcmovb
pop
outsl
rcrb
addr16
push
pop
sbb
sbb
fimuls
inc
pop
fldt
fldt
mov
lock
mov
and
pushf
cli
jb
std
xor
lret
dec
xor
loopne
sbb
mov
incb
pavgw
popa
push
xor
in
mov
jmp
jge
jno
xor
mov
mov
xchg
jp
pop
sub
adc
pop
and
ljmp
out
pop
out
mov
add
stos
clc
jge
lret
cmp
andl
shl
andb
rcrl
dec
inc
xor
divb
mov
jne
std
push
jnp
in
in
movsb
pop
insb
mov
xchg
adc
fdivr
mov
das
sub
mov
xchg
cmc
stos
sub
cmc
mov
cmp
mov
arpl
addr16
into
jo
pop
inc
out
std
std
test
lds
pop
sbb
adc
inc
testb
mov
out
iret
movsl
clc
fisubrl
mov
sbb
inc
sub
pop
jmp
and
xchg
sub
adc
nop
sbb
sbb
mov
pusha
push
adc
push
push
or
push
out
out
xchg
scas
fidivs
jbe
sub
push
fstpt
arpl
push
iret
cmp
jno
mov
push
add
cli
shr
test
test
addl
scas
add
packssdw
pop
pop
nop
sub
jp
test
sub
sti
adc
out
clc
cmp
test
ret
sbb
adc
cli
lods
stc
push
sbb
insb
sbb
scas
jne
mov
xor
cmp
stc
iret
cmp
mov
rorl
inc
add
adc
sti
fisubrl
lods
mov
notl
or
or
je
inc
dec
jle
clc
hlt
aam
pop
push
xchg
xchg
aas
xor
push
roll
inc
xchg
mov
ds
loop
in
inc
cmp
mov
dec
mov
cmp
push
push
push
jb
hlt
lahf
mov
ja
aam
outsl
add
shlb
mov
mov
pop
fsubs
repz
dec
push
jno
or
aam
ret
xchg
orb
sub
push
xor
jno
insl
adc
add
bound
xchg
push
lcall
jo
cmp
lahf
pop
arpl
insl
xchg
dec
cwtl
jo,pn
mov
pop
aad
fstl
jne
mov
out
pushf
add
cli
xchg
sbb
mov
ret
pop
mov
mov
test
rcrl
sub
je
adc
mov
dec
sbb
mov
ficomps
jne
lahf
sbb
push
hlt
fsub
pop
addb
testl
push
andb
add
and
mov
lret
cltd
push
test
shlb
mov
data16
xchg
sbb
mov
decb
out
push
iret
dec
cmp
sarb
push
dec
movsl
push
mov
dec
and
repnz
rcrl
adc
adc
push
or
hlt
sti
mov
mov
fstp
push
les
sub
jg
loop
mov
jp
cwtl
mov
jmp
shrl
shlb
push
inc
scas
xchg
xchg
mov
into
lret
aaa
add
pop
int3
adc
adc
pop
inc
test
mov
test
jle
add
addr16
or
xor
pushf
das
dec
inc
leave
js
mul
test
cmp
jb
mov
test
and
aaa
in
loope
repnz
adc
pop
cmp
push
xchg
arpl
in
xchg
popa
dec
stos
data16
mov
sbb
divl
xor
addr16
or
lock
loopne
lods
into
scas
nop
lahf
mov
adc
int
pop
mov
roll
mov
mov
inc
pop
loop
sbb
pop
into
dec
pop
or
ret
fwait
cmp
imul
dec
je
mov
sub
and
inc
out
popf
shl
lea
jmp
or
roll
mov
jg
mov
addr16
jne
jb
ds
push
or
test
cmp
lahf
mov
xchg
dec
pop
stos
pop
cwtl
dec
sbb
inc
mov
cli
and
push
fbld
push
dec
int
fiadds
fucomi
add
pop
nop
push
inc
popa
and
jae
cwtl
add
insl
push
std
ret
jmp
jecxz
push
lret
fs
stos
int
je
and
xchg
push
daa
mov
or
push
fdivs
lahf
push
inc
lea
inc
jo
inc
mov
xor
sbb
shll
pop
movsb
pop
mov
mov
inc
push
mov
cmc
and
mov
or
outsb
fdivr
cmovg
lods
mov
adc
adc
sarb
or
in
mov
enter
dec
jbe
xchg
popa
add
inc
jns
stos
icebp
mov
outsl
rolb
std
rorb
jae
aam
cmc
cmpsl
pop
mov
test
push
jle
dec
clc
lret
std
test
decb
dec
push
stos
jl
and
lds
pop
into
sbb
xor
or
adc
inc
loopne
dec
addr16
insb
or
jno
mov
push
xor
cmp
jbe
dec
xor
mov
and
pop
sahf
test
push
xchg
lock
pop
popa
inc
ret
scas
inc
lret
pop
mov
sbb
or
insb
sbb
lcall
jecxz
adc
sub
ss
mov
sub
xorb
inc
adc
out
inc
sub
dec
jb
mov
arpl
ret
out
xor
dec
insb
fwait
or
xchg
dec
dec
adc
add
cld
jge
jbe
dec
rorl
ljmp
cmp
inc
and
push
sbb
push
sub
jae
ljmp
fdivl
repnz
imul
imul
test
fstpt
shr
xor
jnp
mov
adc
insl
sbb
cmp
rclb
dec
scas
pop
rcll
add
and
lcall
jmp
fsub
scas
mov
aad
test
imul
pop
testb
xor
inc
adc
push
xor
imul
add
cwtl
ficompl
rcrl
xchg
repnz
push
insl
adc
push
fistpll
dec
lret
or
lds
daa
cmp
adc
loope
lret
ljmp
jmp
sbb
add
mov
hlt
cld
mov
mov
jge
sbb
fidivl
or
int3
xor
adc
stos
into
xchg
xchg
pushf
and
jns
inc
jmp
jns
fists
arpl
sub
lds
rcr
and
sbb
aas
cmpsb
clc
and
pop
inc
xor
jmp
mov
cs
bound
jb
imul
insb
or
mov
inc
pushf
ret
fcoml
cltd
jnp
movsl
xor
inc
mov
pop
cs
add
test
hlt
sbb
jns
mov
int
fcmovnb
out
jmp
ret
loop
ja
push
test
data16
cld
popl
icebp
in
fcoms
repnz
andb
mov
mov
faddl
push
xchg
faddl
xor
mov
in
test
cs
jl
mov
mov
or
mov
or
mov
daa
mov
jne
outsb
mov
jecxz,pn
testl
idivb
lock
jp
mov
fidivs
jg
out
jge
jmp
xchg
cwtl
inc
jae
push
sbb
sbb
push
push
jns
sbb
xchg
xor
addl
iret
push
add
dec
add
iret
lea
in
or
mov
stos
push
idivl
push
mov
shrb
sub
loop
dec
shll
and
xchg
inc
iret
test
push
inc
jmp
pop
inc
push
adc
inc
in
gs
aad
xor
cmp
sbb
mov
jp
add
data16
xchg
mov
mov
add
push
jns
pusha
push
xchg
fwait
sahf
xchg
repnz
xor
xchg
dec
out
inc
and
add
int
pushf
pusha
stos
and
daa
hlt
sbb
addr16
ret
jne
mov
cmp
mov
mov
xor
jnp
push
scas
pop
mov
jp
mov
out
and
out
mov
pop
xor
dec
inc
js
mov
repnz
mov
ss
or
je
outsl
cmpb
xlat
xor
mov
cmp
push
cmp
call
or
xchg
xor
jecxz
mov
pop
inc
lcall
cli
mov
add
lahf
xchg
sahf
mov
pushf
test
shll
outsb
cmpsb
test
lods
cs
rcrb
dec
and
stos
jnp
mov
out
lcall
ret
sub
mov
push
cmp
test
insb
push
jg
xor
sub
test
push
or
inc
adc
cltd
lds
sub
inc
sub
sub
cmpsb
and
cmp
add
mov
out
xor
insb
aad
xchg
jge
aas
xcrypt-ecb
cmpsl
dec
in
or
cltd
jb
adc
adc
mov
xor
mov
test
pop
mov
imul
test
gs
outsb
adcl
mov
xchg
outsb
test
inc
lods
jg
push
lods
xchg
push
into
das
dec
lret
nop
jle
push
jg
push
add
outsl
sbb
out
adc
sub
mov
dec
xchg
enter
push
fnstsw
add
popa
lock
cmp
dec
nop
lds
xchg
or
lds
scas
push
dec
dec
jno
js
fwait
push
jae
adc
mov
scas
aad
ficompl
loopne
imul
iret
lods
xor
fisttpl
mov
ss
push
push
mov
andb
jmp
dec
inc
mov
jb
mull
sti
lea
cmpsb
aam
fsubrl
shll
insb
or
arpl
mov
je
vmwrite
mov
bound
data16
mov
call
mov
pop
lods
call
jl
ret
mov
lcall
mov
mov
loop
mov
scas
and
enter
sub
outsl
mov
test
xlat
adc
dec
dec
negl
bnd
jb
lahf
cs
cmp
push
cmpsb
add
loopne
dec
push
subb
aam
xor
jae
adc
sub
push
fwait
loope
lret
pop
test
mov
dec
int
or
into
xchg
ret
or
outsl
or
add
pusha
xor
and
cmovb
out
hlt
and
dec
push
push
cltd
dec
cmpsl
imul
sub
push
xor
push
sub
mov
pop
xchg
jbe
cmpsb
stc
into
test
arpl
xchg
roll
cmpsl
pusha
mov
or
lcall
std
cmp
fisubl
mov
mov
jno
or
dec
jge
jne
xchg
out
sub
add
out
sbb
popa
jb
inc
xchg
mov
clc
lret
icebp
xchg
mov
lea
pop
add
xor
xchg
and
inc
pusha
ficoms
or
fs
test
jno
pushf
sbb
jno
je
gs
pop
adc
aas
decl
jge
aam
inc
pop
outsl
fbstp
mov
cmc
sub
xchg
xchg
pop
xchg
mov
jmp
sbb
cmp
add
mov
int3
cs
and
rolb
int
mov
mov
mov
sub
xchg
lret
clc
or
push
jecxz
push
imul
dec
stos
scas
je
cmpsl
or
cwtl
adc
lahf
je
ja
mov
sbb
jmp
or
pop
inc
dec
lret
xor
jbe
sbb
pop
pop
xchg
pushf
call
dec
sbb
in
jl
insb
adc
or
roll
clc
or
test
jmp
cld
push
clc
in
orb
test
mov
fcoms
xor
jnp
mov
aaa
and
adc
into
xchg
xchg
dec
lods
mov
sub
and
push
mov
cltd
movb
push
mov
mov
mov
push
xlat
jmp
cli
push
inc
shrl
mov
data16
dec
sbb
imul
aam
out
push
test
aam
dec
faddl
adc
fistl
out
pushf
xchg
in
jo
push
test
in
aad
dec
gs
int3
jbe
outsl
loop
insb
jbe
jne
jp
sub
data16
daa
xor
jl
stos
test
fmuls
mov
jbe
pop
and
inc
lret
lods
mov
jae
loopne
mov
and
mov
jecxz
sbb
sbb
test
test
or
sbb
fdivs
sbb
xchg
pop
stos
popa
gs
shrl
sbb
mov
lods
xchg
pop
in
cmp
std
sub
inc
or
movsb
push
in
outsl
pop
mov
imul
sub
std
shll
ficoml
push
cmp
fs
push
aam
rorb
idivb
mov
pushf
pusha
leave
orl
fdivp
rcrl
lods
data16
shll
sti
dec
out
mov
push
push
mov
test
ljmp
sbb
lret
arpl
fldl
rcrb
gs
adc
pushf
sub
dec
push
in
adc
push
or
or
push
mov
dec
push
mov
sti
sbb
in
push
xor
pop
jbe
movsb
aaa
xchg
outsl
lock
jno
sub
jle
sbb
ret
pop
mov
add
mov
iret
add
xchg
xchg
out
mov
imul
cltd
dec
gs
pop
jbe
mov
fwait
divl
cmpsl
mov
cld
ret
ja
dec
add
test
packuswb
adc
mov
xor
and
mov
cltd
mov
or
ss
add
mov
add
mov
imul
mov
sahf
xor
and
cmp
lret
inc
mov
mov
or
push
or
mov
popl
dec
outsl
adc
inc
push
xor
inc
popf
je
jp
sahf
xor
sbb
jmp
cltd
xor
or
in
mov
push
jle
mov
push
xlat
test
push
dec
mov
jl
inc
push
pop
sti
in
dec
sbb
pop
push
sub
pop
adc
jp
imul
gs
mov
or
dec
jno
push
outsl
cmpsb
test
bound
sub
inc
push
xchg
ret
or
mov
or
and
imul
or
mov
mov
jecxz
inc
cmp
test
adc
xchg
xorb
dec
jge
rcrb
push
inc
xchg
mov
out
adc
xor
cmp
pop
pop
mov
aam
cmc
inc
jnp
lcall
jl
les
loop
push
cmp
fadds
mov
pop
cmp
xor
and
int3
pop
imull
cmp
adc
xchg
and
loopne
shrl
pop
fnsave
push
dec
mov
xchg
push
sub
mov
out
mov
push
test
cmp
cmp
pop
and
xchg
mov
insl
std
leave
mov
shr
repnz
sbb
adc
xchg
push
xchg
push
sub
or
and
popf
movsl
inc
andl
popa
or
push
fs
in
mov
cmp
leave
mov
sbb
add
pop
add
cltd
add
add
in
adc
rcr
aas
push
cltd
pop
scas
inc
repz
call
and
push
and
test
inc
arpl
dec
scas
into
hlt
cmp
scas
fnstsw
sbb
jne
ret
sbb
dec
jle
or
or
inc
mov
cmp
stc
test
adc
xlat
mov
lea
movsb
je
das
fincstp
mov
sub
lret
push
pop
and
add
push
ds
fdiv
inc
inc
cmpsl
jbe
push
inc
and
push
inc
sub
dec
or
jge
std
fxch
in
sub
ljmp
push
scas
test
mov
std
icebp
sahf
stc
ficoms
lods
int
inc
dec
sub
cltd
cmp
and
sahf
shrb
and
xchg
in
mov
jmp
sbb
popf
sar
pop
adcb
inc
mov
imul
iret
push
mov
mov
shll
xchg
sub
stos
dec
inc
mov
xor
dec
sub
dec
pop
scas
jle
lret
mov
aas
jg
fildl
sbb
inc
sub
add
sub
not
mov
mov
fidivrl
mov
inc
xor
dec
push
pop
mov
jae
xchg
mov
sbb
mov
rolb
pop
insb
or
lcall
clc
and
imull
cmc
jo
push
cmp
cli
jecxz
or
bound
negb
lret
and
fs
cmc
dec
aas
pop
mov
push
adc
iret
rcrb
inc
int
sbb
ret
sub
imul
scas
sub
mov
cmc
imul
test
mov
frstor
mov
rorl
ror
jbe
aas
lods
lret
mov
cmp
lock
add
cmp
in
add
cltd
arpl
sarl
push
call
clc
mov
dec
ret
lds
xlat
movsl
dec
pop
mov
inc
dec
dec
sub
push
lock
icebp
sbb
subb
out
movsb
add
subb
nop
scas
mov
pop
int
sub
iret
popa
call
jbe
lods
and
sub
mov
add
mov
add
push
pause
js
xchg
cmp
sbb
adc
jg
ds
pusha
mov
push
aas
fstpt
add
adc
ss
add
mov
push
shll
dec
into
into
lods
scas
pop
por
and
jmp
xlat
pop
xor
pop
mov
jbe
test
js
addr16
mov
cmp
imulb
fldenv
push
lahf
std
sbb
push
and
mov
lods
loop
lcall
mov
fidivrl
inc
int
mov
fldenv
bound
inc
insl
ret
addb
cmp
mov
bound
roll
push
mov
scas
xchg
daa
sti
dec
cmp
ljmp
pop
nop
inc
jb
pop
xchg
jg
stos
lret
cld
cwtl
fnstenv
push
cmp
sbb
mov
or
clc
mov
movsl
ss
or
fcmovu
add
adc
or
sub
push
jg
add
xchg
jecxz
xor
lret
and
cld
insl
push
test
fucomp
aad
orl
mov
pop
sub
inc
hlt
leave
and
and
ret
incl
xorb
mov
push
sub
aas
jnp
popa
xchg
or
daa
aaa
dec
jb
test
inc
jge
xor
mov
enter
movsb
out
or
push
fists
and
jne
mov
xlat
rcr
nop
jne
pop
in
dec
cmp
xchg
adc
pop
mov
sub
call
sub
dec
cld
adc
inc
aad
and
cmpb
stc
mov
cmc
test
out
fwait
pop
push
andb
scas
stc
outsl
push
jmp
xchg
cmp
mov
std
roll
mov
mov
jns
ret
adc
lds
jg
push
push
loope
addr16
pop
call
pop
in
repnz
movsb
mov
sbb
addr16
jl
mov
cmp
test
hlt
inc
ret
rcll
std
iret
loop
inc
xor
lods
mov
data16
in
inc
cld
mov
imul
jmp
cs
scas
dec
in
mov
fstps
or
int
adc
fldenv
std
sbb
dec
test
popa
push
je
mov
mulb
ss
aaa
outsl
in
fs
data16
and
movsb
pop
inc
ljmp
push
and
dec
jns,pt
aas
mov
cmp
loope
daa
loopne
movsb
ret
mov
filds
xor
test
cld
mov
imul
jmp
mov
mov
lods
sub
js
mov
popa
rorb
cwtl
xchg
mov
enter
push
andb
int3
mov
scas
mov
fnstcw
je
stos
add
adc
sbb
push
add
xor
xor
ret
sub
xchg
ret
negb
shlb
stos
cmc
movsl
jecxz
icebp
jmp
lods
pop
and
mov
push
adcb
adc
mov
pusha
repz
insb
inc
and
mov
lret
xor
xor
mov
lret
pusha
lds
mov
add
loopne
iret
scas
iret
aad
iret
sbb
jl
test
test
movb
popa
sub
aaa
aad
add
pop
add
mov
mul
loop
stos
mov
xlat
ja
enter
mov
rorl
jg
push
cltd
stc
inc
jo
inc
xor
push
dec
aad
pushf
sub
mov
pop
lock
jae
add
mov
test
jl
cmp
mov
xchg
in
jecxz
loopne
mov
test
aaa
in
pop
cmp
push
cli
pop
leave
adc
leave
dec
sarb
push
fs
jno
jno
mov
xor
push
mov
clc
or
add
movsb
add
mov
add
ljmp
test
sbb
incl
stc
out
adc
outsb
out
push
gs
sub
push
xchg
mov
push
pop
push
mov
imul
jmp
mov
push
pop
mov
fidivl
jge
jge
movsl
aad
cltd
scas
push
sarl
mov
clc
mov
nop
push
ds
xor
jge
fs
mov
sbb
sub
xor
dec
xchg
xor
ret
jns
inc
inc
mov
lcall
sbb
aas
test
mov
out
jne
fcomip
mov
mov
jns
fdivl
sbb
popf
ljmp
je
mov
xor
lret
rcl
cmp
sub
je
leave
ret
xchg
aam
push
and
loop
enter
int
sti
add
mov
pushf
lret
sbb
hlt
das
and
adcb
rcrl
bound
aam
les
pop
and
cli
mov
fcmovne
cmc
imul
cmp
push
pop
lret
inc
pop
and
push
scas
cmpsb
icebp
mov
lock
or
out
add
repz
mov
daa
sub
sub
xchg
mov
mov
mov
int3
cmp
stos
mov
nop
aad
cmp
jae
shlb
sbb
cmpsb
sbbb
not
sub
andl
fwait
ljmp
add
mov
or
pushf
scas
xchg
das
mov
fwait
pop
push
push
adc
mov
sub
jl
push
dec
scas
daa
jmp
ljmp
push
inc
stos
pop
jns
sub
in
aas
pop
hlt
cmp
stos
push
out
mov
les
aaa
fnsave
scas
or
pop
rcrl
stc
pop
cmp
add
adc
je
xchg
and
inc
movl
stos
nop
subb
xchg
test
pop
ss
xorl
mov
in
push
lods
adc
lret
inc
inc
fcomp
rclb
and
cmpsl
cmovno
push
adc
sbb
fcomps
repz
push
mov
and
xor
enter
outsl
sahf
adcl
mov
inc
push
cmpsb
psraw
xchg
fidivl
xlat
push
stc
call
inc
shll
out
lea
fdivl
subl
cld
hlt
mov
in
xchg
sti
mov
icebp
call
dec
inc
mov
enter
inc
cltd
sahf
inc
arpl
scas
jo
dec
flds
cs
repnz
cld
mov
mov
inc
iret
es
data16
push
mov
and
sbb
int
cmp
pop
and
es
jmp
scas
aas
subl
rclb
out
out
jbe
mov
adc
into
out
pop
xchg
push
outsl
jge
addl
pop
push
pushf
push
mov
push
sbb
gs
aam
dec
mov
push
xor
fwait
fwait
dec
and
pop
iret
ficomps
cmp
dec
daa
jg
adc
push
push
or
push
sti
daa
call
out
inc
repnz
push
xor
mov
mov
ja
xor
jnp
and
add
cmp
icebp
mov
iret
pop
fstpt
cmc
outsb
fs
jmp
jno
inc
stos
sub
sub
push
dec
dec
and
adc
pusha
sbb
stos
pop
gs
inc
je
mov
arpl
test
jne
pushf
jbe
adc
mov
sub
lahf
cmp
je
cwtl
cwtl
outsb
or
dec
sbb
xor
sub
push
sub
fs
ficompl
sahf
aam
mov
sub
mov
push
pushf
outsl
cs
push
ja
dec
dec
fisubs
call
int
dec
add
stos
test
push
mov
push
orb
int3
inc
outsl
aaa
sbb
hlt
sbb
mov
jae
pusha
andb
cli
jnp
lea
mov
push
rolb
cmp
sbb
jne
stos
loopne
call
hlt
inc
pop
jg
pusha
mov
es
and
adc
loopne
cmpsb
lahf
fcoms
loopne
cmc
mov
jns
rcrl
jl
or
xchg
mov
jnp
push
mov
fimuls
gs
adc
cmc
stc
or
jge
inc
jl
pop
rorb
int
mov
push
data16
push
outsl
jno
jnp
shlb
mov
add
sahf
lret
or
ja
mov
jne
or
lret
and
pop
stc
daa
xchg
and
mov
push
pop
out
iret
or
fwait
mov
int3
inc
mov
aaa
cmovne
xor
push
testl
loop
mov
cmpl
jb
ss
sahf
sbb
xor
int
dec
push
jge
or
jns
mov
ret
xor
mov
sub
lret
jbe
mov
xchg
push
fsub
push
xchg
repz
push
xchg
rorb
cmp
imul
inc
arpl
in
cli
and
lret
push
arpl
lods
cmp
mov
sti
or
xchg
lock
ret
fxch
mov
std
inc
add
dec
jnp
dec
dec
and
sbb
lret
scas
pop
fimuls
bound
loope
and
lea
jmp
pop
xor
int3
pop
mov
cmp
fcomip
jae
inc
sti
xchg
push
mov
shl
sub
cmp
xor
and
je
rcrb
dec
or
or
icebp
mov
push
stos
fcoms
lods
mov
jl
adc
xor
leave
mov
outsl
pop
loopne
xor
push
jnp
xor
xor
into
jmp
pop
inc
stos
or
das
cs
addr16
into
xor
xor
lock
data16
adc
xchg
stos
xchg
arpl
or
jns
xchg
push
jg
cmp
hlt
add
sub
cmpsl
lds
sbb
mov
cli
or
sbb
int
lods
jmp
aaa
mov
sbb
ret
jne
ja
jno
insl
fsts
lds
cmpb
ljmp
lods
clc
addr16
sti
xor
in
dec
pop
inc
clc
cmp
lock
fcoms
mov
push
js
push
or
popa
xchg
test
cmp
pop
sti
xor
enter
es
xchg
add
notb
xorb
data16
mov
inc
pop
mov
sub
aas
test
outsl
jg
sub
push
inc
mov
xlat
add
xchg
dec
out
or
sbb
imull
add
test
push
leave
ss
dec
scas
bound
push
adc
push
es
sahf
ret
lcall
lds
stos
movsb
or
aas
jmp
xchg
jnp
aas
std
call
push
ja
pop
jecxz
jbe
mov
clc
mov
scas
lcall
xchg
or
fmull
cmp
data16
loop
dec
push
ss
sbbb
push
mov
jl
inc
pop
adc
je
cli
dec
out
push
movl
jnp
fistpl
sub
test
jb
sahf
inc
mov
sub
lock
sbb
lods
xchg
pop
in
dec
xchg
mov
in
dec
jno
hlt
inc
inc
cld
insb
fstps
cmp
in
sbb
hlt
clc
pop
and
inc
ficoms
movsl
xor
popf
imul
or
dec
lea
mov
outsb
mov
loope
scas
inc
mov
hlt
test
or
stc
add
movsl
filds
jge
mov
push
jne
gs
rolb
pushf
fs
jb,pt
or
inc
icebp
add
jb
and
dec
and
mov
sub
adc
test
inc
repnz
lret
xchg
das
daa
enter
cmp
pop
clc
mov
dec
mov
call
jge
jno
mov
insl
push
inc
in
adc
adc
test
pop
aad
jb
jmp
repz
or
or
addl
sbb
inc
in
xor
shl
push
dec
push
iret
cmp
dec
repz
and
cmp
mov
mov
lds
sbb
and
sub
fsubs
xor
jl
xchg
sbbl
mov
dec
nop
or
mov
pop
js
out
repz
or
ss
enter
icebp
mov
ret
sbb
dec
mov
mov
in
pop
or
leave
clc
and
in
xor
rcr
out
int3
mov
sbb
push
or
jb
jp
push
ds
jnp
jbe
ret
adc
xchg
sub
mov
mov
cmp
push
daa
jp
sbb
inc
push
leave
dec
sahf
mov
add
xlat
ret
rcll
data16
jmp
jno
call
mov
or
push
add
sbb
push
mov
push
mov
mov
scas
sub
xchg
cwtl
add
sbb
push
pop
or
stc
iret
int
popf
insl
cmp
daa
mov
lcall
pop
xchg
or
push
pop
inc
mov
out
add
clc
jae
subb
cltd
mov
ds
xor
int
ret
mov
loop
xchg
jae
adc
test
sbbl
mov
outsb
xchg
js
popa
xor
out
out
mov
dec
jge
movsb
insb
mov
add
or
jmp
add
add
jns
inc
pop
xchg
or
or
rcrb
mov
mov
mov
mov
and
lcall
fwait
out
jns
sahf
movsl
inc
ret
jg
push
mov
and
arpl
adc
xor
xorl
or
je
in
std
stos
xchg
mov
sarb
xor
add
pop
cmp
sub
add
sbbl
xchg
push
mov
push
repz
shl
xor
faddp
dec
adc
push
adc
and
add
jnp
out
imul
pop
adc
cltd
dec
sub
dec
out
sub
test
inc
adc
mov
push
xchg
or
fisubs
mov
movsb
lods
stos
rcll
mov
mov
out
or
bnd
cltd
lcall
mov
addb
divb
sti
lods
sub
rcll
lods
stos
jo
and
sbb
out
inc
mov
testl
jp
mov
lret
sbb
pop
fs
fcomi
scas
jbe
cmp
push
fstpt
shlb
xor
xchg
pop
jno
std
xor
fidivs
das
sbb
push
mov
or
mov
sbb
or
mov
jp
xor
pop
rcrb
in
adc
jmp
shl
jge
loopne
fldl
jmp
bound
inc
fldpi
lods
fisttpl
enter
push
mov
push
cmp
fistpll
cmpsl
popa
xor
popa
fcompl
xchg
dec
inc
aaa
cli
and
and
mov
or
push
stc
dec
cmc
xor
stc
ss
arpl
push
not
add
mov
dec
cmpsl
sbb
lahf
cmpb
popa
dec
push
sub
loop
mov
sahf
sub
push
mov
daa
push
mov
mov
ret
mov
cmp
mov
jnp
add
lea
xor
sahf
jb
mov
out
or
mov
inc
ret
out
adc
sub
or
fistl
aam
aaa
mov
repz
ljmp
xor
imul
jae
enter
bound
insb
ret
pop
addr16
dec
xor
or
add
pusha
mov
out
in
in
push
mov
xchg
pop
and
dec
push
rol
int
cmp
and
fs
lock
jae
pop
jg
into
mov
xchg
xlat
call
jecxz
notb
sbbb
xlat
dec
cmp
xchg
mov
ret
negl
dec
cwtl
adc
movsl
sub
aas
push
pusha
pop
jg
or
iret
fists
out
lea
mov
rorb
movsl
or
mov
movsb
sub
jl
inc
add
pop
adc
shr
push
xor
inc
pop
jb
hlt
hlt
xor
mov
orb
mov
or
lock
add
ds
aaa
sbb
jne
shlb
lock
lret
pop
stos
add
inc
sub
gs
jb
test
outsb
je
mov
flds
xchg
xchg
in
mov
out
jnp
pop
mov
push
jl
sbb
add
out
pop
mov
sub
imul
nop
data16
pop
inc
lock
dec
and
cmc
mov
lods
shlb
push
flds
inc
gs
test
sbb
in
and
test
sub
test
cmp
test
cmpsl
les
ds
or
sbb
cmpl
js
dec
outsb
das
int
inc
inc
dec
mov
or
push
gs
add
shrl
cmp
dec
mov
and
xor
adc
pop
shlb
imul
addb
in
jne
fs
or
dec
test
sti
xlat
lods
mov
sahf
das
enter
xchg
lahf
repnz
push
and
pop
adc
les
xor
scas
add
adc
rcrb
shlb
or
sub
inc
xor
sbb
push
hlt
xchg
add
imul
addl
jl
mov
test
int3
push
push
mov
inc
stc
pushf
or
add
pop
inc
idivb
mov
lret
rorb
mov
aam
clc
fdivs
mov
sub
pop
aam
test
cs
push
insb
or
test
xchg
in
jnp
sub
fsubr
int3
inc
mov
movsl
mov
mov
jne
in
int3
push
jns
push
adc
mov
sbb
cmp
add
xchg
xchg
pusha
adc
pushf
out
lea
pop
dec
jbe
sbb
bound
push
jecxz
aam
dec
stc
pop
cltd
xchg
sbb
lret
adc
lcall
jae
in
dec
inc
stc
les
je
fcompl
lahf
xchg
dec
aad
enter
dec
and
pop
in
xchg
sub
imul
adc
jp
lods
push
in
or
pusha
xor
rcrb
sbb
pop
lahf
dec
int3
jecxz
lahf
out
xor
or
and
cmpsb
push
mov
call
int
iret
fistps
pop
repz
shll
aam
inc
jl
or
jg
call
mov
add
mov
imul
xchg
cmp
pop
mov
jne
ficoms
pxor
mov
cmp
inc
jmp
js
xchg
add
mov
adc
add
mov
jecxz
out
push
mov
cmp
push
add
xor
mov
ljmp
out
pop
aas
xlat
dec
fnstcw
lock
out
lcall
icebp
les
inc
lock
shrl
jae
out
jmp
mov
call
sbb
addr16
pop
out
xor
xchg
push
scas
sub
xchg
outsl
mov
aam
add
xchg
mov
loope
in
or
adc
jl
dec
sbb
sbb
xchg
aad
ljmp
pop
jo
xor
or
push
and
jmp
aaa
fnclex
fxch
push
insb
lcall
adc
xchg
std
aas
cmc
fnsave
mov
jg,pn
cmp
pop
xchg
xchg
sbb
rcll
jnp
xor
and
jg
popf
mov
clc
out
andb
and
lcall
jbe
sub
test
femms
and
push
xchg
sarl
pop
jmp
xor
push
pusha
adc
rcrl
sahf
arpl
cmpsl
fdivs
scas
shll
ret
pop
test
fidivrs
jmp
icebp
inc
int
icebp
or
push
add
leave
ror
loop
fs
mov
fsubl
scas
pop
xor
fsubrs
rolb
jp
push
jo
xchg
inc
cmp
dec
lods
data16
testb
cmp
shl
sbb
push
cwtl
aam
test
dec
cwtl
testl
push
incl
inc
or
js
fdivrs
outsb
ds
inc
adc
das
int
cli
arpl
in
inc
jbe
cmpsb
fidivrl
jns
test
xchg
pop
fldenv
inc
add
ss
into
jg
push
lcall
popa
xchg
mov
icebp
sbb
push
jne
cwtl
push
fstl
mov
push
fs
or
push
mov
xchg
out
mov
and
pop
rorb
dec
add
mov
ss
stc
insl
pop
add
mov
dec
xor
inc
mov
sarb
xchg
pop
cmp
or
mov
std
ja
push
sbb
xchg
mov
addb
gs
out
mov
out
daa
dec
xlat
sbb
inc
xchg
mov
pop
dec
jb
je
je
pushl
test
in
in
or
imul
mov
nop
adc
mov
xchg
int
icebp
push
fs
ljmp
mov
cmp
mov
push
andl
xchg
and
test
add
or
shrb
push
aaa
dec
dec
arpl
sbb
mov
lock
stos
dec
cltd
xchg
fistpl
add
stc
loope
leave
push
arpl
pop
clc
or
push
adc
jnp
loop
sbb
add
mov
pop
and
cwtl
fs
aas
xchg
and
mul
push
ficomps
call
push
iret
sbb
or
fprem1
sahf
inc
stc
mov
arpl
jecxz
xor
fistps
and
pop
jae
test
jbe
std
fstpt
lods
pop
push
test
push
sarl
and
iret
cmpsl
jo
mov
fildl
push
jae
xchg
scas
push
lods
push
pop
faddl
push
push
inc
test
lret
mov
xchg
ror
clc
push
mov
ss
push
sahf
mov
mov
and
stc
inc
out
xor
arpl
rcll
push
pop
loop
stos
sub
cmp
inc
stos
and
data16
adc
fiaddl
shlb
fldenv
inc
inc
cmpsb
mov
shlb
sahf
or
dec
mov
call
xor
dec
xor
sbb
movl
repz
xlat
aaa
jg
out
mov
xchg
lea
fwait
inc
addr16
loope
sbb
lds
push
inc
lock
fwait
xor
sahf
pop
or
mov
scas
add
cmp
fdivr
dec
imul
mov
or
sbb
push
aad
mov
add
rclb
test
dec
test
mov
aaa
fldcw
mov
pop
popa
mov
or
rcrl
gs
pop
rorl
inc
mov
jns
jle
movsl
add
mov
popf
mov
rcrb
mov
popa
dec
or
sub
in
mov
std
je
pusha
enter
pop
mov
out
orl
adc
mov
cld
pop
cmp
mov
es
lds
aam
rol
cld
sbb
mov
jmp
out
cwtl
into
cmpb
adcb
lret
push
mov
stc
lahf
nop
cmp
pop
sahf
cmpsl
push
scas
aam
std
fcmove
call
out
es
dec
cld
xchg
shl
rcrb
sub
cltd
jl
and
mov
adc
lods
jno
sbb
mov
pop
out
sbb
add
lods
fldl
data16
pop
xlat
jnp
push
jp
inc
push
and
cmpsl
out
lahf
lods
imul
lret
mov
and
xchg
push
and
jb
fimull
leave
dec
and
jge
cmc
mov
mov
xor
jns
mov
ret
cmp
mov
js
jnp
dec
sub
les
adc
pop
rclb
test
mov
or
addb
sarl
dec
jno
jl
pop
out
mov
loop
imul
lahf
xchg
jecxz
jo
jne
sbbb
jl
pop
pop
cmp
lret
add
mov
xchg
fidivl
dec
or
adc
and
pop
aad
or
push
add
orb
cmp
or
sub
xchg
mov
pop
cmp
popa
mov
jno
je
or
push
push
mov
dec
xor
pop
push
pop
loopne
out
or
pop
lods
out
in
mov
mov
adc
and
xor
adc
shrl
fistpll
jge
bound
mov
js
movsl
xchg
iret
mov
push
and
hlt
add
es
mov
lea
lods
sbb
sub
cmp
xchg
jne
push
divb
lock
ja
scas
das
cmp
pop
dec
lock
out
pusha
adcb
das
inc
pop
mov
mov
fcomps
pusha
ja
pop
loop
imul
mov
inc
lcall
xchg
and
sub
dec
inc
popf
mov
test
dec
test
icebp
movsl
inc
inc
outsl
pop
dec
sbb
jp
mov
mov
repz
faddl
sti
stos
push
clc
int
jae
sbb
or
and
inc
ja
push
test
adc
aad
roll
xchg
jne
scas
jae
stc
daa
daa
daa
inc
lods
gs
or
sarl
arpl
add
daa
jo
aad
mov
in
mov
pop
pop
inc
loope
dec
jle
or
insb
cwtl
sub
stos
xchg
mov
jmp
dec
adc
jnp
daa
inc
sbb
das
mov
ds
dec
adc
cmp
add
data16
sbb
lcall
movsl
ja
adc
pop
ss
push
jnp
mov
ret
shlb
mov
and
push
mov
jne
mov
mov
insl
xlat
pushf
lods
inc
js
push
adc
adcl
or
xchg
repz
dec
js
mov
push
pop
pop
jge
and
mov
sub
mov
adc
sti
and
stos
pop
shlb
ja
inc
and
sbbb
mov
mov
dec
loopne
cmc
cli
ror
adc
test
clc
mov
lock
lcall
push
cs
inc
mov
push
dec
outsb
in
sti
pop
xor
xchg
nop
sar
stos
push
out
mov
inc
mov
inc
test
hlt
jmp
sub
popa
mov
or
cmp
out
mov
and
cmp
daa
jle
and
sbb
sub
mov
ret
mov
incl
mov
mov
test
stos
enter
sti
nop
nop
test
sbb
testl
adc
cmp
rcll
pop
mov
je
jae
mov
xchg
in
sub
fs
js
jb
xchg
jmp
and
lea
addr16
test
dec
sub
mov
xchg
movsl
int
mov
sub
and
mov
divb
imul
pop
pop
cmp
pop
pop
dec
pop
dec
sub
adc
xchg
cwtl
mov
rclb
lods
aam
test
jg
fimull
and
xorl
shrl
cmpsb
mov
cmp
dec
test
leave
jno
enter
xor
jmp
lds
and
repnz
pop
into
xchg
fiaddl
mov
ficoms
mov
mov
cmp
test
repz
inc
push
jbe
dec
nop
je
in
mov
mov
outsl
dec
mov
cmp
cmp
xchg
daa
jl
clc
iretw
call
loop
test
fxam
cltd
daa
jg
mov
icebp
cmp
mov
adcb
push
add
enter
bound
adc
push
dec
out
sub
scas
pop
push
cli
add
xchg
push
cld
jnp
and
xchg
shrb
stos
js
dec
pop
fadds
repz
xchg
pop
inc
xchg
and
pop
iret
negl
jno
pop
clc
jle
sbb
push
mov
std
mov
shll
movsb
jno
xchg
ds
pop
mov
sub
repz
jg
fsubr
test
adc
mov
cmp
movsl
xchg
je
push
out
stc
js
lcall
cmp
and
sbb
cmc
inc
lcall
jl
jns
pop
lahf
mov
pop
aaa
dec
iret
aas
aaa
mov
adc
push
les
push
rcr
call
add
push
dec
xchg
cld
ja
dec
movsb
push
inc
jnp
and
adc
mov
test
shrl
push
ljmp
add
pop
mov
ljmp
cmp
dec
jns
mov
jge
sub
push
push
push
or
adc
and
pop
mov
roll
jbe
cltd
xchg
cmc
test
mov
pop
pop
ds
scas
and
push
divb
inc
bound
cs
movsb
out
pop
and
into
fisubl
nop
aaa
nop
movsb
dec
inc
mov
lods
sub
out
lods
push
or
hlt
push
shll
cs
cmp
rcrl
sbb
or
sub
dec
jp
adc
mov
enter
sub
std
cmp
jns
add
in
mov
aas
mov
sbb
sub
sbb
mov
or
pop
sub
sbb
adc
aad
in
movsb
lea
sbb
xchg
loope
add
mov
data16
insb
cli
adc
xor
mov
mov
fldcw
in
fidivrl
xchg
testb
and
lock
or
ja
mov
imul
push
add
jg
sarb
sub
sub
roll
jnp
cs
lods
aad
insl
add
cmpsb
test
cld
inc
and
hlt
dec
jb
xchg
scas
xchg
dec
jae
ret
jnp
mov
rclb
test
stos
andl
mov
add
push
test
cmp
mov
xchg
stc
mov
sub
inc
jb
outsb
xchg
mov
mov
mov
jle
inc
cld
and
outsb
or
jl
jle
rorb
cli
jns
cmc
addr16
jecxz
hlt
out
jb
pop
xchg
cs
and
mov
daa
imul
jl
push
dec
jns
out
cmp
cmp
adc
hlt
add
xchg
cmp
or
stc
or
mov
mov
cmp
int
cld
jl
sti
lods
mov
pop
clc
cmp
fildl
movsb
jp
in
sub
arpl
xor
jnp
sbb
sahf
sbb
pop
mov
mov
xchg
xor
and
out
mov
push
loopne
loope
ss
stc
cmp
adc
out
pop
loope
ret
dec
jnp
xorb
xor
sti
mov
fdivl
pop
xchg
pusha
and
sti
mov
imul
insb
dec
lcall
insb
mov
out
sbb
dec
addr16
rclb
aas
aam
mov
in
xchg
add
jb
lods
lds
das
in
in
mov
cltd
imul
mov
lock
pop
and
push
push
mov
stos
push
jb
adc
test
inc
mov
xor
testl
xchg
imul
lods
sbb
movsb
inc
dec
sub
jg
popa
push
pushf
dec
lcall
push
and
cld
mov
inc
and
jecxz,pn
push
jg
pop
mov
mov
inc
push
stos
xor
sbb
jg
mov
das
xor
pop
push
out
xor
std
jl
incl
inc
lods
shlb
pop
add
pop
popf
mov
cmp
mov
gs
lea
sub
mov
daa
or
dec
xchg
in
aas
jne
int
in
push
mov
mov
in
outsb
jge
out
call
mov
xor
mov
in
xor
imul
iret
rcll
rcrb
mov
movsb
addb
cs
imull
ja
inc
adc
dec
xchg
testl
mov
lret
push
sub
mov
je
push
stos
mov
je
imul
sub
jb
clc
neg
out
jns
mov
jg
in
stc
jl
out
xchg
dec
imul
out
adc
add
in
xchg
aad
sbb
lds
orb
cmp
out
cwtl
repz
push
mov
daa
int3
pop
cltd
push
daa
add
xor
sub
mov
jae
pop
jmp
dec
inc
jb
xchg
pop
movsl
scas
xchg
repnz
cld
fs
rol
add
add
nop
sbb
adc
filds
jo
or
into
push
xchg
mov
and
pop
add
xchg
or
fidivrl
shrl
fisubrs
ret
fcmovnu
or
fsubrs
mov
in
push
mov
je
pop
xor
push
and
mov
lcall
pop
mov
loop
fucomi
lahf
xchg
ja
btc
loop
aam
sbb
dec
push
test
aaa
sbb
stos
cmp
clc
pop
outsl
xchg
inc
push
mov
inc
cmp
iret
pop
outsl
ljmp
xchg
outsl
mov
repnz
and
jp
roll
push
les
pop
sub
test
insl
cli
mov
mov
stos
bound
pop
dec
dec
jl
call
mov
pop
pop
jl
data16
mov
ljmp
pop
mulb
xchg
adc
push
mov
xor
aas
mov
sub
xor
insb
cmp
inc
fdivrs
mov
inc
sbb
jp
sub
push
push
test
lret
pop
xchg
fwait
or
mull
or
mov
mov
add
in
hlt
sub
fldenv
pop
pop
jmp
mov
and
leave
lds
fwait
push
aaa
and
movsb
jno
fadd
leave
jmp
cmc
incl
repnz
ficoml
xlat
lret
idivb
icebp
inc
mov
enter
jl
mov
adc
nop
sti
and
scas
clc
aaa
es
scas
sbb
iret
mov
dec
mov
mov
inc
testl
leave
cltd
iret
shlb
nop
bsr
pop
jmp
xor
dec
ss
mov
insb
scas
fisubl
pushl
inc
mov
push
mov
pop
lahf
sbb
movsb
lods
scas
adc
mov
in
sti
push
aaa
and
loope
pop
inc
shll
xchg
jbe
pop
or
imul
test
jmp
shrl
xchg
adc
imul
add
jg
test
push
push
pop
mov
cmp
sub
xor
jle
outsb
addb
repz
push
or
cmpsl
and
sbb
pop
fldl
sub
mov
notl
cmp
dec
adc
jo
fnsave
fistps
iret
mov
fs
xor
add
or
and
pusha
cs
mov
divb
icebp
test
mov
sbb
cmpsl
jge
mov
jecxz
aaa
jecxz
cmp
sub
scas
es
leave
mov
cmpsb
iret
pop
adc
mov
xchg
push
orb
sbb
clc
adc
and
imul
cmp
jae
dec
adc
sti
dec
ror
and
lret
push
push
mov
in
clc
mov
ja
test
mov
outsb
xor
cmc
dec
and
xchg
adc
push
cmp
xor
lods
mov
adc
push
ret
ficomps
aam
pop
jg
add
movsb
inc
mov
dec
or
adc
jo
xchg
popa
sub
jb
sbb
cwtl
push
shl
ret
cmpsl
and
fwait
push
idivl
sarl
mov
jl
xor
xor
or
aam
sbb
clc
insb
rcrl
xchg
jecxz
cwtl
xor
sub
loopne
testb
pushf
addr16
fwait
mov
in
sahf
adc
xor
lret
xchg
pusha
fcompl
add
or
adc
stos
sub
sub
jge
inc
push
iret
cmp
sarl
cmp
lds
sti
sbb
push
xchg
jae
popa
mov
lahf
rcr
xor
xor
push
pop
push
or
addr16
arpl
gs
mov
sub
pop
cmp
push
scas
rcrl
xor
outsl
mov
mov
mov
popf
jle
fwait
push
sbb
jbe,pt
mov
jl
push
xor
jae
icebp
clc
in
stos
pop
sti
sbb
orb
sbb
jnp
scas
aad
xor
or
orl
xchg
popf
xchg
dec
cmpsl
push
mov
push
jl
xchg
inc
divb
push
movsl
jge
sub
test
push
pop
or
jmp
ror
lea
adc
mov
add
sub
scas
fstps
mov
cmp
lods
sub
xor
adcb
aaa
ljmp
cld
add
mov
cmp
mov
lods
mov
pop
mov
lods
push
adc
roll
jmp
js
addl
mov
es
ret
leave
daa
stos
xchg
jae
and
mov
std
das
dec
sbb
scas
mov
call
xor
cmpsl
iret
cwtl
mulb
xchg
jg
loope
popa
pop
or
xchg
pop
enter
cmp
add
faddp
lods
or
and
pop
adc
xor
cmc
lahf
adc
and
adcl
ljmp
orl
cmp
out
jge
jle
in
cmpsl
aad
std
fnstcw
aad
jns
ljmp
pop
cmp
jmp
xchg
leave
int
or
or
or
aam
jbe
in
cmp
fidivs
decb
jns
popa
dec
sub
sbb
rol
cli
xor
cmp
std
jmp
int
pop
adc
hlt
xchg
mov
xchg
push
fiaddl
lsl
mov
xor
xor
inc
mov
adc
cmp
lock
cmc
mov
jl
repz
mov
sbb
xor
pop
fdiv
cmp
fsubs
lret
in
rcl
sub
ds
std
in
test
or
sub
sub
out
aas
adc
or
inc
clc
rol
sub
or
mov
js
mov
jmp
xlat
aam
mov
das
xor
rorb
sbb
cmc
xchg
lds
inc
stos
cmc
xor
mov
and
cmp
repz
mov
mov
xchg
xchg
lret
pop
lret
mul
movsl
fcomp
cmp
fistl
xchg
lods
xlat
xchg
cmp
fucomp
xchg
shr
icebp
insb
and
pop
ficoms
push
stos
fistl
outsb
adc
cmp
fcmovb
sub
push
xchg
xor
lods
sbb
sbb
xchg
lods
imul
jns
mov
in
cmpsl
sub
pop
mov
xchg
push
cmpsl
orl
jae
inc
or
inc
cli
jmp
jb
jmp
fsubs
cs
xlat
sub
mov
ret
mov
sbb
sahf
out
sbb
sbb
mov
mov
sub
and
mov
das
xlat
pusha
inc
lret
jne
je
outsl
mov
test
sub
cmpsb
mov
ds
sbb
and
jle
push
pop
mov
stos
pushf
lret
incb
jne
lret
mov
mov
out
push
add
adc
or
pop
jne
jmp
enter
fstl
test
cmp
cli
leave
sahf
test
iret
lret
xor
arpl
adc
xor
mov
push
cmpsl
gs
xor
push
nop
lods
sbb
mov
clc
stos
sub
xchg
lret
jnp,pt
js
add
out
cmp
out
push
mov
push
shr
inc
jmp
cli
sbb
andb
jmp
insl
pop
sbb
lret
addr16
xchg
aam
jae
inc
fsubr
cld
xlat
or
pop
addr16
pop
out
pop
push
in
lret
adc
mov
dec
lcall
aad
inc
push
roll
movsl
cmp
fcmovnbe
jne
dec
in
mov
fwait
repz
jnp
jnp
xor
fists
mov
adc
jbe
pop
stos
lcall
clc
and
in
cmp
shll
es
xchg
out
int
lock
loop
out
mov
pop
inc
arpl
loope
lods
push
cmp
repz
mov
mov
mov
shrl
jo
lahf
cmpl
cwtl
add
pusha
cmpsl
mov
xchg
lods
inc
mov
out
cmp
dec
xor
mov
inc
movsl
orl
pusha
mov
and
push
aas
cmp
dec
or
ds
iret
inc
inc
pop
test
jo
add
jo
push
mull
mov
push
mov
fwait
sbb
clc
fimull
jge
scas
pop
dec
xor
sbb
stos
xor
jo
xor
cmp
test
pop
pop
dec
push
test
aam
out
and
shll
pop
pop
mov
xchg
xchg
mov
js
mov
xor
testl
inc
out
lock
mov
mov
mov
jns
test
jmp
imul
filds
jp
imul
mov
int
daa
push
adc
mov
inc
dec
cli
add
sub
or
xor
fcomps
xor
add
adc
dec
mov
repnz
enter
stos
jno
loop
jo
cmp
int
xor
mov
mov
or
push
les
lahf
lret
xchg
int3
fdiv
xchg
loope
repz
mov
dec
dec
mov
scas
stc
mov
jbe
mov
xchg
outsl
fs
or
add
je
icebp
jne
sarb
add
add
sub
mov
int
push
xchg
popa
xchg
mov
sbb
xchg
lret
xchg
leave
dec
fisubrs
fbld
mov
lods
cli
fwait
and
mov
push
adc
loop
sub
js
or
add
xor
and
out
dec
aam
mov
sbb
lret
sub
jne
aad
mov
adc
xchg
add
stos
add
std
jo
inc
xor
lret
ret
in
das
xor
gs
cmp
je
movsl
push
dec
sbb
and
jnp
pushf
mov
xor
xor
inc
fisttpl
dec
mov
cmpsl
les
or
xlat
aam
or
and
shll
or
xchg
test
popf
xorb
ja
out
xchg
or
outsb
dec
adc
jmp
hlt
and
jecxz
sub
fdiv
cmc
sub
rorb
xchg
pop
and
lret
jecxz
out
mov
shlb
stos
mov
repnz
mov
dec
aaa
rcrl
movsl
in
jb
test
mov
adc
push
cmp
rolb
adc
sbb
or
scas
shll
fdivp
dec
ret
cmc
loop
bound
cmp
or
push
xor
push
out
add
add
arpl
stos
es
adc
cmp
fisubrs
xlat
cmpsb
arpl
test
clc
enter
iret
jne
push
js
movsl
pop
in
pop
mov
xchg
mov
repnz
loop
loopne
fisubrs
enter
dec
lfs
sub
adc
popl
mov
repnz
call
mov
stos
lcall
dec
pushf
int
add
lea
jge
sub
and
jae
cmc
pusha
and
ret
xor
jb
insb
xor
dec
mov
ds
stc
mov
xor
jno
mov
xor
mov
jo
xchg
gs
pop
movsl
jae
lock
jp
push
mov
jge
lahf
jo
xor
mov
add
imul
adc
out
insl
lahf
hlt
lea
test
subb
xor
cmpsl
dec
mov
into
pop
add
or
aas
leave
mov
mov
sbb
ret
sarb
outsl
add
dec
xor
lea
pushf
and
mov
stc
push
fwait
pushf
out
sub
loope
sti
loopne
xlat
pop
icebp
xor
adc
movl
inc
int
mov
adc
in
mov
mov
mov
jle
sub
arpl
clc
popf
movsl
pop
repnz
or
inc
add
int3
sbb
cmp
xchg
xchg
lret
mov
pop
iret
and
sbb
or
xchg
cmp
icebp
es
sbb
pop
mov
push
lcall
popa
dec
mov
mov
pop
add
pop
jmp
mov
and
jbe
popa
cmp
dec
mov
push
movsb
or
ficompl
out
inc
mov
mov
rolb
pop
or
test
mov
loop
into
inc
fnstenv
and
cmp
adc
out
cmpsb
test
add
dec
int3
xchg
pop
mov
fcomi
pop
or
jge
inc
lcall
or
outsl
rorb
jle
push
sub
dec
int3
pop
stc
pop
cmpsl
jae
add
mov
mov
jle
adc
fs
xchg
cmp
rcll
cld
adc
mov
out
cld
pop
inc
mov
sbb
cmpsl
ss
cmp
call
lods
pop
sub
sbb
scas
ficoml
jl
mov
mov
outsl
push
adc
je
inc
inc
push
or
ds
pop
insb
jbe
xchg
out
not
in
or
jecxz
cmp
or
inc
ljmp
sbb
push
outsb
jle
mov
sahf
mov
xor
das
xchg
sub
out
or
addr16
sbb
ja
lahf
mov
mov
pop
adc
jle
mov
push
mulb
push
jge
cs
jbe
jno
pop
js
outsl
mov
test
push
mov
dec
fs
xchg
sbb
push
xchg
es
gs
sti
mov
mov
cmp
add
rorb
push
js
fdivrl
mov
fdivs
mov
jne,pt
pop
and
in
cmp
add
sbb
jns
xchg
lret
sub
pop
shlb
sbb
xchg
inc
adc
jnp
testl
mov
lock
push
stos
adc
or
mov
into
cs
nop
jge
sub
pop
rclb
jp
dec
std
imulb
fisubs
jl
hlt
dec
cmp
and
mov
xor
inc
cltd
js
lahf
push
sbb
or
movsbl
xchg
xchg
mov
into
mov
je
fidivrs
ja
ds
test
xor
xchg
cmp
xlat
mov
inc
xlat
mov
adc
clc
lods
sbb
dec
mov
sub
sub
cmpb
lock
int
mov
cmc
add
or
lea
aaa
jge
cmpsb
cmpb
sahf
dec
push
sbbl
xor
inc
push
push
lahf
callw
out
and
mov
mov
sbb
or
pop
cmc
cmp
adc
imul
jecxz
jns
loopne
xor
xor
and
sub
mov
add
scas
sbb
mov
sti
outsl
imul
cmp
jnp
das
aad
or
insl
push
fwait
mov
push
xchg
jmp
cld
xorb
sbb
aaa
test
dec
pop
outsb
mov
xchg
lret
shl
jbe
xor
in
or
into
int
cld
and
mov
fdivs
dec
cmp
ljmp
mov
cmp
jecxz
mov
dec
imul
outsl
int3
popa
cmpsb
fildll
mov
cmp
outsl
and
adc
add
mov
test
inc
dec
loope
in
hlt
mov
mov
hlt
pop
and
icebp
add
mov
ja,pn
loopne
push
js
xlat
sub
dec
pop
jns
cmp
adc
cmpsl
pop
mov
cmc
xchg
loopne
adc
imul
jb
out
pop
jo
lock
xchg
cmp
inc
xchg
sub
jmp
mov
aam
jo
mov
data16
in
sti
outsb
jns
leave
inc
sbb
iret
iret
aaa
jle
fs
out
pop
out
repz
pop
mov
movsb
mov
add
pop
shll
dec
sti
jbe
push
jns
mov
or
jmp
stos
xor
mov
stc
mov
lret
push
or
mov
or
movsl
mov
adc
out
out
add
pushf
xchg
pop
sub
icebp
cmp
cmpsb
lea
lcall
out
scas
inc
mov
cltd
dec
and
xchg
mov
mov
pop
das
and
ds
leave
lock
andb
dec
sbb
jge
iret
rorb
cmp
add
xchg
lret
push
cmpb
sbb
stos
cli
cwtl
jp
sbbb
test
daa
lcall
xor
add
lods
fmuls
mov
mov
std
loopne
mov
add
xchg
sub
cwtl
xor
sbb
inc
push
sbb
int3
inc
sub
xchg
mov
adc
loope
mov
pop
in
je
aad
lods
repz
inc
loope
clc
ficoml
pop
jl
mov
and
and
movsl
popf
mov
ss
in
adc
adcl
or
inc
mov
out
mov
cmp
out
call
das
fnsave
dec
or
dec
std
pop
jl
sub
lret
cmovg
shl
mov
lret
adc
mov
hlt
pop
dec
test
xchg
lahf
outsb
lods
out
cld
jbe
test
jl
out
fbstp
flds
adc
aad
fisubrs
sarb
sub
movsl
fcmovb
jle
outsb
andb
dec
inc
inc
out
out
dec
inc
mov
out
xchg
xchg
lock
xor
cmp
jb
in
mov
or
xchg
pushf
flds
mov
jo
sub
jb
jge
mov
enter
jb
jo
popa
cltd
insb
mul
mov
je
mov
rolb
cmp
fisubl
mov
jle
push
dec
xchg
sbb
jle
sbb
dec
xor
mov
ja
fsubl
sub
or
es
or
iret
data16
movsl
stos
mov
cmp
jno
xchg
rorl
int
in
adc
dec
push
hlt
mov
mov
stc
and
sbb
mov
push
mov
inc
sti
sbb
loope
sub
cld
fs
xchg
and
pop
aas
push
lds
lret
dec
test
int
loopne
mov
mov
jle
stos
mov
lret
inc
mov
or
jns
inc
mov
cs
mov
mov
cmp
fwait
sbb
add
cmp
add
lds
lods
xchg
add
sbb
out
sbb
sub
stc
or
pop
lahf
subl
cmp
xor
cmpsl
push
xchg
push
testb
and
cwtl
mov
xchg
xor
test
shlb
loopne
xchg
dec
xchg
sbb
out
push
out
ds
inc
loopne
push
or
std
or
jb
movsl
pop
sub
pop
mov
into
ja
cmpsl
mov
lods
cmpsl
fidivrs
std
sub
imul
mov
mov
push
add
cmp
fmull
jp
jg
movsb
jecxz
sub
sub
adcb
movsl
cmp
insb
rcrb
inc
or
enter
adc
sub
mov
rorl
jge
in
pop
xchg
pushf
enter
pop
mov
adc
xor
popf
hlt
mov
pop
ds
push
fwait
mov
lret
cmc
xchg
iret
mov
push
fsubp
incb
mov
fucomip
dec
in
or
jg
mov
mov
and
loope
dec
pop
push
sahf
pop
cli
push
out
or
fdivp
imul
jecxz
jae
jg
mov
push
mov
lods
ja
lret
or
das
scas
push
adc
out
mov
adc
mov
mov
lods
add
pop
pushf
jo
pop
mov
xchg
xchg
call
out
in
movsb
adc
cmp
or
and
es
or
dec
sbb
adcb
push
fsubl
arpl
add
mov
in
popf
inc
mov
xor
js
xchg
pop
cli
loopne
icebp
dec
and
fstl
or
or
fwait
cmp
call
xchg
sub
jl
inc
push
iret
adc
out
pusha
subb
and
mov
mov
sbb
iret
xorb
xchg
pop
cs
sub
pop
test
inc
add
pop
shrb
cmp
mov
dec
mov
dec
subb
jl
andb
mov
stc
mov
xchg
pop
pop
xchg
cs
shll
cmp
ret
adc
pop
out
outsb
inc
sbb
movsb
fadds
and
int
lds
enter
cmp
ja
outsl
adc
pop
fwait
dec
add
cmp
jo
sub
fidivs
or
sbb
sbb
jb
xchg
and
mov
xorl
data16
push
sbb
mov
or
push
loopne
pop
pop
xor
daa
je
cmpb
push
test
sbb
movb
inc
inc
in
aaa
adc
add
jae
fisubl
mov
push
icebp
fisttps
push
insl
iret
or
cld
xor
jns
mov
cltd
std
cwtl
dec
push
inc
lods
lcall
sub
or
rorl
mov
cwtl
inc
fmull
jo
lds
xchg
jbe
mov
push
imul
loope
inc
pop
lret
loope
mov
xchg
shll
xor
popf
in
aaa
repz
or
xchg
pop
sub
ds
daa
mov
les
inc
mov
pop
xchg
sub
or
mov
sub
scas
es
pop
mov
inc
pop
in
out
or
int3
xor
xchg
inc
faddl
test
into
xchg
test
movsb
aas
mov
shl
and
jae
mov
inc
pop
outsb
pusha
mov
mov
mov
mov
int3
cmpsl
mov
dec
aas
xor
mov
xchg
and
xor
jbe
outsl
dec
inc
pop
xor
jg
cld
xchg
or
insb
push
xchg
insl
and
repnz
mov
cmpb
jnp
add
cltd
jp
fiadds
mov
xor
jae
mov
fmuls
inc
mov
pop
adc
repz
mov
rorb
push
in
add
and
pop
lahf
xchg
fldt
or
xchg
adc
mov
push
cltd
scas
adc
pop
aaa
repz
push
popa
sub
insb
cld
lds
jle
pop
and
xor
mov
push
iret
std
mov
ja
stc
or
adc
sub
cmpl
lods
jl
pop
dec
mov
push
sarl
scas
sub
js
dec
mov
je
push
push
mov
dec
sti
mov
ds
imul
push
mov
mov
push
ja
fcoml
outsl
jns
jecxz
fwait
push
icebp
inc
or
hlt
add
sbb
clc
jns
mov
push
add
xor
mov
lods
jmp
mov
pusha
mov
mov
inc
clc
mov
mov
and
xor
lods
sub
rcr
mov
pop
sbb
cmpsb
push
hlt
dec
stos
dec
jle
push
cwtl
mov
fbld
inc
arpl
bound
mov
jl
push
push
and
cmp
or
out
mov
jnp
sbb
fstps
jnp
jae
sbb
pop
cmpsb
mov
sarl
jo
dec
hlt
mov
xor
mov
or
mov
push
jbe
inc
or
cmp
push
cwtl
loopne
pusha
jg
pushf
dec
lea
inc
rorl
lods
int
and
leave
out
call
pushf
mov
mov
sub
scas
mov
adc
adc
inc
rolb
or
test
dec
fiaddl
int
sti
call
pushf
pop
adc
and
mov
movl
nop
dec
fisubl
xchg
pop
push
xor
xchg
push
push
dec
xchg
aam
pop
and
push
xchg
mull
popa
lock
jecxz
repnz
lret
icebp
fwait
adc
xchg
sbb
jge
push
setg
mov
push
pop
mov
xor
pop
mov
in
jecxz
or
je
cmpsb
insl
mov
call
and
inc
rorl
sahf
mov
jno
adc
mov
outsb
push
ljmp
ss
psubusw
and
adc
sbb
shlb
scas
or
sbb
fcomp
xor
dec
aam
sbb
jns
mov
and
lock
in
mov
pop
popf
mov
lret
sub
cs
add
sbb
dec
pop
or
xor
outsl
mov
movsb
ss
and
jmp
xchg
mov
mov
or
sbb
push
loopne
mov
add
mov
mov
adc
movsb
imul
aam
jb
xlat
mov
pop
mov
pushf
fsubs
jb
cltd
imul
sub
or
sbb
mov
jecxz
ja
andl
jno
jae
xchg
jo
sbb
mov
dec
mov
adc
xchg
int3
dec
sub
mov
lret
jp
into
jmp
movsb
pusha
mov
push
and
es
insl
or
inc
dec
outsb
pop
pop
cmpsl
leave
jne
cmpsb
sub
outsl
out
push
dec
cmpsl
jnp
and
add
popf
pop
aas
aad
xor
mov
inc
pop
cltd
cli
repz
dec
sbb
xchg
mov
roll
in
pop
pop
mov
test
out
push
mov
xor
cmc
add
cs
lea
push
inc
cmp
lods
aaa
and
pop
mov
adc
and
mov
fisttpll
xchg
arpl
xchg
dec
pop
and
clc
in
jb
int
data16
cs
cli
cmc
pop
mov
sub
cld
sbb
loop
cmp
jnp
jge
sub
mov
xchg
lods
mov
insl
xchg
jb
clc
dec
outsb
sub
adc
mov
add
xchg
mov
inc
imul
sbb
push
jns
cmp
cltd
jge
mov
aad
pop
cmp
pop
ds
dec
jno
sti
cs
outsb
xlat
leave
cmpsl
fstps
bound
mov
jno
xchg
int3
inc
push
es
test
xor
out
cs
lock
mov
test
fwait
scas
cmp
aaa
fcomi
in
sub
cmpsb
sub
stos
fcoml
dec
mov
cltd
outsb
or
inc
push
inc
mov
xor
lods
mov
xchg
mov
jno
mov
mov
jae
cwtl
xlat
cs
jo
int
shrb
push
scas
andb
push
pushf
js
push
pop
mov
pop
das
imul
mov
adc
mov
lahf
mov
daa
add
jne
cltd
rcrl
insl
jae
xor
xchg
mov
test
dec
push
jo
or
jl
adc
cmpsb
into
mov
cmp
nop
or
popf
call
shl
movsb
paddusb
push
xor
pop
pushf
ret
sbb
ja
push
xchg
jns
add
mov
pop
outsb
movsb
js
jmp
scas
js
mov
jns
cmpsl
push
stos
mov
xchg
and
cmp
scas
out
repnz
ja
into
icebp
mov
les
scas
je
scas
insb
aaa
int3
jae
pop
cld
out
dec
dec
ds
mov
movsb
into
add
jmp
adc
push
add
dec
adc
jae
rclb
mov
pop
and
out
clc
or
push
pop
pop
out
pop
js
cmpsl
insl
inc
outsb
scas
lahf
repz
add
jno
inc
fidivs
cwtl
xor
sub
nop
mulb
push
dec
imul
lret
enter
and
iret
gs
and
lahf
imul
fstl
xchg
pop
out
ja
test
lret
adc
dec
out
aad
clc
fidivrl
daa
xchg
leave
mov
cwtl
jmp
pop
mov
cmp
push
cmp
mov
ljmp
aas
mov
mov
dec
loope
fcoms
jecxz
lock
inc
mov
mov
sub
jmp
stc
popa
mov
imull
loopne
sahf
insl
mov
imulb
mov
mov
xorl
adc
pop
inc
jle
sbb
adcb
mov
inc
and
cld
cmp
mov
lock
xlat
add
adc
mov
cmp
push
addl
adc
mov
mov
pusha
jne
stos
lahf
inc
dec
and
js
pushl
inc
pop
lahf
jl
jp
cltd
fs
in
inc
out
push
rcr
dec
adc
sub
dec
lea
popf
out
inc
inc
mov
add
and
lret
sbb
sub
loopne
lahf
dec
fs
test
das
movsb
cmp
movsb
push
jb
mov
pop
and
iret
and
pop
test
fwait
push
movsl
add
insl
jg
das
jae
sbb
stc
push
sub
adc
out
mov
sub
outsb
sbb
enter
dec
pushf
mov
sbb
arpl
push
sahf
shr
mov
xchg
xor
sbb
pusha
mov
jns
xor
loope
cmp
dec
pusha
inc
adc
in
pop
rcr
or
mov
mov
xchg
aam
outsl
xchg
in
in
inc
aas
cmp
dec
push
nop
out
mov
sbb
dec
or
movsb
and
sbbl
lret
out
daa
stos
divl
imul
dec
cmpl
or
cmpsl
push
cmp
mov
xor
adc
bt
jne
ss
lret
push
lahf
out
cltd
xor
frstor
sub
ds
cmc
fadds
pop
cmp
push
lcall
mov
mov
inc
pop
les
xchg
dec
scas
cltd
push
shl
cltd
push
sub
adc
nop
scas
pushf
mov
mov
dec
cmp
div
sbb
pop
mov
fisttpl
cmp
jmp
scas
int
sbb
cmc
pop
dec
cwtl
mov
cmp
fdivs
inc
mov
out
mov
out
pusha
lret
aaa
in
imul
jle
xor
in
push
push
mov
sbb
lret
lret
nop
daa
lock
and
and
repnz
mov
add
add
ljmp
xchg
outsl
push
std
cmpsl
xchg
add
dec
jb
adc
fs
and
xchg
xor
or
adc
lds
mov
loop
adc
xchg
mov
push
adc
es
sbb
and
mov
cld
test
or
pop
push
pop
mov
dec
pop
insb
cmovs
cmp
jge
fcmove
mov
pop
insb
jmp
test
cmp
jne
adc
scas
in
shlb
movsb
adc
dec
fidivl
sub
outsb
in
repnz
ds
mov
mov
out
mov
sahf
movsb
mov
mov
std
leave
jp
in
sub
adc
pop
fsts
inc
int3
jmp
push
loop
enter
int3
cmc
lret
pop
ja
push
fmul
nop
inc
bound
aaa
loop,pn
out
aad
fs
sbb
ss
ja
imul
adc
mov
ds
es
loop
stc
enter
inc
mov
jecxz
jne
sbb
clc
mov
test
sbb
cs
int3
out
dec
cmpsl
pop
iret
dec
sub
add
iret
int
push
daa
dec
fisttpll
clc
mov
outsb
arpl
fldcw
xor
addr16
lods
sti
mov
jno
out
jae
sub
cmp
mov
inc
sbb
ja
mov
mov
cltd
sub
inc
and
stos
xor
add
mov
adc
jns
cs
cld
imul
mov
in
dec
out
push
push
outsl
add
xor
mov
mov
cmp
cmp
xor
sub
add
mov
daa
imul
sub
ja
push
push
mov
push
push
push
enter
iret
and
add
push
imul
testb
mov
arpl
stc
leave
pop
adc
lods
pop
cmp
dec
into
insl
fildl
add
xchg
xchg
dec
add
lock
scas
xchg
imulb
mov
jge
inc
incb
std
mov
xor
xchg
jbe
and
ret
push
sub
movsl
cmp
cmp
or
pop
lret
fs
mov
jne
xchg
mov
fisubrl
mov
repnz
ljmp
popf
add
mov
inc
or
add
sbb
xchg
out
or
jmp
fs
jno
sbb
xor
push
xor
mov
jae
jno
sub
scas
popa
shlb
fsubrs
sub
add
dec
and
mov
movsb
aad
jl
rcrl
lret
jns
push
in
shr
inc
les
mov
test
and
push
lahf
leave
test
jb
dec
stos
jns
lret
lods
adc
inc
cmpsb
cmp
inc
mov
std
adc
or
xor
cli
add
sahf
fwait
add
aam
xchg
lods
repz
lock
stos
in
add
in
negb
lea
movsl
aaa
scas
pop
cltd
push
push
xor
pop
sbb
adc
daa
es
dec
repnz
ret
pop
jbe
mov
sub
mov
iret
rcrl
xchg
popf
jmp
dec
xchg
push
pusha
repnz
xorb
pop
pop
fwait
or
push
pop
roll
cltd
in
mov
sbb
js
jg,pn
lea
and
int
insl
xor
inc
jno
mov
cmpsb
dec
mov
xor
out
pop
inc
inc
aaa
and
popl
lods
xlat
or
pop
add
add
out
jmp
sbb
popf
inc
cmpb
mov
leave
push
jnp
xchg
outsb
push
sahf
int
rolb
jno
aam
leave
xlat
ja
ret
mov
add
aad
cmp
push
enter
push
mov
fmuls
mov
xchg
enter
mov
xchg
fsts
jns
sub
sahf
mov
mov
ret
pop
ret
mov
mov
or
jl
jmp
lods
out
aaa
or
cli
pop
push
mov
adc
jae
scas
xchg
mov
call
dec
sub
mov
out
sbb
sahf
sub
jb
sbb
out
cli
mov
scas
ret
jecxz
xlat
mov
cmp
dec
cli
jmp
sbb
xchg
cmc
cld
imul
pop
push
sbb
dec
jbe
imul
push
push
mov
and
scas
xor
jns
jbe
pop
or
pop
mov
lock
psubusw
aaa
out
xchg
jae
popa
mov
data16
sub
mov
ds
mov
fnstenv
jno
lock
dec
jb
xchg
rcrl
sbb
scas
jmp
jne
xlat
sub
mov
add
aas
adc
pop
adc
insl
fbstp
mov
lock
aad
cli
dec
ljmp
jle
in
fidivs
pop
xor
aas
dec
xchg
xchg
mov
xchg
cmp
popf
outsb
sub
dec
or
rol
push
sbb
pop
xor
cmp
out
int
xchg
jnp
or
repnz
jmp
pop
bound
inc
pop
sbb
cmpsb
into
mov
sub
jmp
push
dec
add
orb
shrl
pop
icebp
cmp
adc
sbb
push
fmuls
inc
add
adc
pop
mov
lods
cmp
sysenter
inc
in
lret
aad
jg
dec
outsl
negl
jle
xchg
push
out
jmp
push
ror
dec
int3
aam
dec
push
loopne
mov
cmp
cmpsb
shll
jbe
mov
es
rclb
push
xor
push
mov
lret
jae
test
sbb
sti
push
cmp
and
rclb
jno
das
inc
add
leave
xchg
cld
andl
test
sbb
inc
jmp
xchg
xchg
add
cmpsl
cmc
jge
adc
push
in
mov
mov
mov
sahf
test
mulps
pop
pusha
in
pop
cmp
jge
mov
int
stos
out
enter
xchg
pop
into
jno
xchg
ret
fsubl
nop
push
inc
faddl
sbb
fs
ljmp
push
addr16
outsl
xchg
arpl
aaa
data16
mov
orl
adc
lea
cmp
or
ds
or
xor
push
push
sbb
push
cwtl
call
cmpsl
pop
sbb
cmc
mov
es
clts
sbb
sub
scas
jae
jle
jo
int
or
das
and
mov
pop
xor
push
ljmp
sub
repnz
adc
std
daa
clc
adc
push
scas
mov
mov
xor
out
mov
test
sbb
jecxz
xchg
xchg
lret
test
inc
jo
lret
jbe
xor
aas
pop
jno
sub
inc
xor
mov
mov
add
mov
rcrl
ret
xor
int3
push
sahf
mov
adc
jge
push
aad
cmp
lods
xchg
and
ret
bound
pop
das
leave
mov
pop
xchg
jmp
mov
add
mov
cmc
imul
ret
ss
dec
mov
or
es
dec
mov
mov
push
cmp
pop
jmp
aas
sbb
test
sarb
cmp
enter
add
aad
pop
pop
cmp
pusha
jp
idiv
stos
in
sbb
cld
subl
sub
dec
jae
pop
pusha
sbb
sbb
pop
and
in
cld
pop
pop
shrb
dec
out
shrb
aam
cmp
pop
pop
ja
ror
js
and
roll
fidivrl
jo,pt
inc
mov
push
mov
mov
cmp
cmp
sub
mov
jle
into
pop
movsb
cmc
and
sub
dec
out
in
les
fmulp
les
addb
fidivrs
xor
lock
inc
insb
sub
sub
lods
jo
fdivrl
movsb
leave
cmp
and
sbb
xchg
or
incl
jno
jecxz
mov
dec
push
aaa
imul
mov
inc
lret
repnz
imul
dec
fbld
xchg
xchg
xchg
dec
jg
dec
pop
dec
incb
ret
sub
in
pusha
imul
sbb
stos
pop
sbb
sbbl
mov
mov
ror
push
and
xor
xor
pop
jne
insb
sahf
icebp
push
xor
pushw
sbb
ljmp
push
push
add
sahf
mov
push
jno
in
xchg
in
xchg
ljmp
mov
aaa
fistpl
xchg
mov
fnstenv
into
lahf
stos
add
xor
das
stos
test
adc
lock
xchg
imul
sahf
cli
sahf
add
orl
ret
outsb
insb
or
or
push
add
int3
or
movsb
addr16
dec
fldenv
out
adc
bound
pop
and
insl
adc
inc
je
and
mov
jg
add
stos
bswap
sbb
dec
pop
sbb
xorl
mov
pop
pop
punpckhbw
or
movb
notb
shll
adc
das
fsubrl
fwait
mov
pop
jne
arpl
bnd
sti
dec
pop
dec
push
sti
lret
jbe
and
cmp
xor
lcall
ret
fldenv
lds
daa
int
stc
jnp
push
jb
jb
jle
cltd
sub
dec
cwtl
add
push
ds
cmp
mov
cmp
lods
loope
push
std
int
adc
xchg
push
test
sub
xor
mov
movsl
dec
loope
orb
xor
dec
xor
mov
popa
daa
mov
stos
add
sub
lods
lods
test
sahf
inc
jge
lret
or
inc
fstps
lcall
pop
mov
xlat
mov
out
sbb
pop
das
ljmp
or
mov
ljmp
lret
enter
xor
and
pop
lock
jmp
test
mov
es
sub
test
jb
lods
or
ficoml
push
pusha
divb
sti
jg
sbb
mov
cmp
mov
out
xor
lock
sbb
les
push
sbb
sbbb
inc
mov
adc
aaa
jbe
mov
test
jo
sub
pop
ja
into
push
xor
pusha
in
cmpsl
jmp
popf
fldl
cmp
sbb
add
std
sbb
in
loopne
mov
adc
lds
popa
ja
mov
js
jnp
jle
out
adcb
popa
shl
das
and
mov
fwait
adc
xchg
xor
sti
push
sub
repnz
dec
or
jle
out
jnp
cwtl
cmp
mov
lret
std
icebp
adc
push
sbb
sbb
pop
pop
xchg
and
xor
pop
add
dec
xchg
mov
sub
push
outsl
rcrl
je
pop
outsl
cmpsb
fwait
ds
jo
mov
sbb
data16
fwait
aas
pop
out
push
lahf
inc
lcall
in
mov
scas
fsubrs
insl
push
out
xchg
mov
add
cmp
iret
inc
xchg
dec
cmp
push
or
fs
scas
xchg
in
xor
dec
jl
test
jmp
mov
cmp
jp
nop
mov
imul
and
push
in
pop
sbb
stc
shrl
pop
cmp
rorl
push
bound
lcall
pusha
fwait
jno
sub
jle
xor
jae
bound
scas
sbb
pop
js
fistpll
xor
cltd
push
mov
mov
push
jle
mov
fnstenv
insl
in
insb
push
inc
jnp
stos
cmp
dec
lea
mov
filds
push
jb
loope
loopne
out
jl
jo
lods
sub
sub
cmp
xor
sbb
xchg
xor
lahf
test
xchg
pop
popa
sub
clc
or
pop
call
mov
pop
add
mov
insb
mov
jl
pop
jmp
lret
mov
xchg
push
shrl
inc
push
mov
pextrw
mov
in
push
pop
inc
push
mov
mov
mov
cmpsl
hlt
fdivs
lcall
xor
fwait
mov
jb
jae
insl
mov
out
pop
cmc
cltd
daa
sub
dec
add
stos
xchg
push
jl
and
test
outsl
xchg
add
mov
pop
pop
xchg
into
cmp
sbbl
inc
mov
sahf
or
paddsb
mov
adc
jmp
pop
lea
jp
cmp
mov
jb
xchg
call
je
imul
mov
imul
add
mov
das
mov
stos
enter
stos
mov
jecxz
mov
dec
xchg
fdivl
rcl
shrl
xchg
cwtl
neg
out
roll
xchg
in
pushw
out
or
test
and
in
rolb
int
xchg
push
enter
insb
cmp
scas
push
lds
sbb
clc
in
cmc
lods
hlt
ret
xor
or
ss
arpl
in
in
sub
stc
leave
insl
jno
es
arpl
push
dec
fnstsw
rorl
repnz
imul
into
adc
dec
xor
cmp
dec
ja
daa
lahf
repnz
fs
pushf
popa
push
or
pop
insl
rcll
cltd
push
test
cld
inc
into
insl
out
inc
sub
cli
or
pop
insb
sbb
jae
cld
adc
arpl
insb
sarb
jo
lret
aas
gs
jae
ds
jmp
or
sbb
ss
fidivrs
movsl
es
inc
xchg
or
mov
popf
or
dec
lret
push
adc
rcrb
pusha
push
dec
and
mov
push
fstps
gs
mov
inc
inc
jb
movsb
dec
push
pop
pmaxub
mov
or
dec
js
inc
xchg
push
std
dec
stos
or
xchg
mov
or
push
add
outsl
lcall
add
xchg
cs
jne
repnz
mov
jno
mov
hlt
dec
leave
xchg
aad
or
hlt
jle
addl
push
jp
lods
sbb
mov
pushf
or
cmc
insb
sti
aam
repnz
xchg
mov
in
and
add
je
mov
push
adc
fcos
leave
xor
sbb
mov
push
negl
mov
xor
test
ficomps
sbb
push
pop
pusha
aaa
jmp
repz
dec
and
hlt
mov
mov
lahf
inc
ss
iret
fdivl
mov
xor
push
fistps
fnstsw
adc
push
dec
fwait
mov
fadds
pop
jge
pop
hlt
and
lret
lahf
shlb
push
out
fsubl
sbb
imul
outsb
in
rcrl
lods
and
mov
out
lds
jnp
stos
outsb
sbb
and
jns
lahf
stc
pop
loope
jp
or
cmp
rcl
test
sbb
pop
mov
add
lcall
push
dec
adc
xchg
call
and
xchg
and
sub
fs
shrb
mov
mov
xchg
mov
mov
sbb
in
out
sti
adc
jb
clc
add
and
outsb
scas
sub
inc
jl
cmpsb
add
icebp
cs
adc
dec
add
adc
int3
xlat
sbb
popf
xor
xchg
es
sub
ret
int
dec
cld
popf
dec
inc
cmp
mov
mov
mov
sub
lods
es
cli
push
int3
js
push
outsb
sbb
stos
pop
mov
aam
xchg
scas
rclb
sub
xchg
fcoml
fs
in
sbb
xchg
js
xchg
jmp
pop
xor
popf
adc
push
repz
hlt
test
mov
jge
jnp
xor
jmp
adc
lock
fldt
add
mov
cmp
and
sub
lahf
icebp
xchg
jle
out
bound
fimuls
mov
inc
jp
mov
pop
push
incb
mov
hlt
or
jb
push
mov
push
js
mov
xor
cmp
xor
stc
cmp
es
xchg
or
mov
mov
fsts
into
xchg
xor
jb
clc
in
push
out
xchg
adc
scas
xchg
jmp
scas
ds
or
pop
jne
mov
addr16
push
jmp
mov
dec
sar
mov
xchg
leave
sbb
mov
scas
sub
ja
enter
xor
std
push
mov
add
aam
dec
dec
jbe
test
fildl
jmp
jnp
insb
nop
mov
ss
iret
clc
and
fsubs
push
push
xor
sahf
nop
pop
pop
mov
lea
out
addb
jae
repz
cmpl
sub
xor
mov
xor
jno
cltd
scas
push
mov
or
pop
add
add
push
sahf
sbb
in
ljmp
adc
data16
in
dec
inc
subb
ffree
rcrb
xchg
cld
cli
int
movsb
nop
loopne
call
jno
shrl
pop
pop
data16
imul
pop
aaa
loope
add
pop
sbb
or
lock
test
dec
cmpsb
jne
push
rcl
xor
clc
into
push
mov
fsts
cmc
mov
arpl
pop
xlat
popf
mov
stos
scas
mov
insb
in
int
xor
xchg
xchg
or
inc
push
outsl
add
inc
outsl
sbb
xor
int3
fiadds
adc
xchg
or
sarb
cmpsl
movsb
ss
mov
dec
jns
dec
mov
mov
jg
shrb
add
mov
loopne
hlt
and
divb
mov
xor
fwait
aam
mov
add
in
mov
xchg
jns
add
adc
pop
inc
jne
and
mov
mov
cmc
imul
mov
sarb
js
outsl
test
sbb
cmp
push
movsb
in
sbb
push
pop
loope
pop
push
bound
mov
or
subl
pop
xchg
in
pop
outsl
inc
or
mov
das
add
fdivrl
cmpsl
inc
call
divb
cmp
popa
scas
pusha
xchg
int
jmp
daa
stc
and
imul
test
stos
push
sbb
aam
inc
push
adc
scas
call
out
hlt
mov
xor
sbb
sete
xchg
das
pop
and
xor
fisubl
add
push
punpckhwd
out
and
test
cmp
lret
dec
mov
jns
mov
movsb
fdivr
daa
subb
call
mov
sahf
insl
jns
mov
and
ja
imul
or
lcall
and
jg
inc
popa
cld
enter
push
adc
fistps
jne
lret
add
jl
adc
push
movsl
jne
dec
aas
xchg
dec
imul
inc
xchg
jb
pop
and
clc
dec
sub
mov
mov
je
jns
clc
jmp
push
call
fldt
xchg
cmp
in
add
sub
outsb
adc
dec
shlb
adc
ret
int
repz
mov
xor
xor
cmp
adc
lcall
jb
test
add
jne
sbb
ss
push
jae
lds
push
pop
loopne
shrl
xchg
adc
push
mov
mov
fcomp
sub
js
jmp
stos
xor
daa
push
pop
mov
sbb
mov
and
rorl
hlt
adcl
loopne
movsl
dec
aad
sbb
fstl
sar
repz
adc
pop
xchg
xor
je
cmpsl
bound
in
mov
scas
lret
jns
add
pop
shll
nop
mov
pop
insl
movb
test
out
ja
dec
enter
push
or
cmpsb
flds
push
outsb
sarb
mov
push
pop
je
stc
jo
aam
mov
aad
mov
inc
xor
jbe
push
loop
into
data16
adc
lds
lock
push
outsl
xchg
jbe
cmp
repz
sub
adc
stos
ss
cmc
insl
pop
cs
aam
and
ljmp
sbb
mov
fcomps
xor
add
adc
jne
xlat
sbb
xchg
sbb
mov
mov
sbb
adc
xor
inc
cmp
xchg
mov
test
push
push
rcr
sub
lock
jecxz
or
cmp
aam
add
out
shrb
sbb
enter
aaa
test
mov
incb
sahf
mov
ds
or
es
mov
rcr
dec
mov
dec
shl
fdivrl
lock
sti
dec
repnz
push
dec
in
xor
imul
mov
sub
cld
and
jmp
fildl
push
rolb
popa
movsb
jp
cmp
aad
stos
and
mov
sub
cmp
ret
add
and
pop
push
fsubl
lods
sub
jmp
xor
les
push
mov
add
iret
mov
jo
shlb
rcrl
pop
lcall
icebp
out
outsb
setns
scas
inc
push
mov
mov
dec
push
sub
sahf
mov
jae
push
dec
mov
jnp
incl
sti
cltd
sahf
repz
daa
pop
mull
adc
xchg
mov
adc
push
loop
or
aad
daa
shrb
dec
movsl
mov
jmp
imul
orb
sahf
fisttpl
inc
cmp
and
add
loopne
xchg
shr
pop
adc
jbe
cmpsb
mov
cmp
filds
jmp
clc
scas
mov
xlat
or
push
out
jo
mov
cwtl
out
xchg
fistps
mov
sub
pop
lea
jg
or
jecxz
mov
add
jge
xchg
xor
cmp
icebp
mov
mov
xchg
cmp
xor
mov
fmulp
cli
int
js
inc
mov
pushf
sahf
clc
js
in
sbb
pop
arpl
jnp
cmp
lcall
movsb
sti
fwait
imul
mov
xchg
rolb
sbb
jnp
pop
dec
in
lret
pop
jg
fstl
enter
std
ljmp
mov
adc
mov
adc
in
mov
dec
scas
push
inc
mov
adc
add
push
xor
mulb
jp
dec
subl
lods
ljmp
mov
shll
imul
mov
dec
sti
shll
and
add
pop
call
out
stos
xchg
mov
popa
mov
pop
mov
lcall
dec
push
repz
mov
popf
aam
repnz
dec
xor
cli
jae
fisubl
leave
stos
xchg
std
or
lea
scas
push
testl
rcr
notl
jnp
dec
scas
int
leave
inc
out
aad
gs
pop
movb
sahf
xlat
and
int3
sti
repz
mov
pop
in
push
pop
and
test
sub
lea
jae
cmp
ds
lock
sbb
dec
les
mov
mov
test
adc
xor
loope
dec
clc
aas
pop
add
cmp
add
mov
ss
lret
iret
sbb
cmp
jmp
sbb
pop
mov
cli
in
push
int
jecxz,pt
push
push
jo
pop
add
or
xchg
in
push
xor
call
cmpb
imul
loop
punpckhbw
jae
sti
js
inc
rorl
sbb
mov
stc
push
and
enter
test
mov
jmp
pop
push
lea
rcrl
push
adc
incl
jp
call
jle
daa
fildl
xlat
mov
rorb
jbe
jae
sbb
out
outsl
and
fdiv
popa
sbb
pop
xchg
cltd
pop
pop
popf
xchg
adc
orb
adc
jg
pop
hlt
sub
mov
xorl
sub
xor
lret
mov
fdivr
int3
mov
gs
sub
les
adc
xchg
into
jl
push
fdivl
outsb
shrl
movb
adc
inc
pop
cmp
test
and
int
sbb
push
ret
ret
ret
fistpll
stos
mov
daa
mov
mov
scas
inc
movsl
pop
sbb
loopne
ds
arpl
and
sbb
inc
push
or
test
xchg
outsb
mov
mov
leave
std
xor
mov
jnp
pop
xchg
dec
out
leave
inc
mov
mov
inc
fs
dec
roll
ficoms
rclb
iret
clc
sub
ficoms
dec
addl
rcll
mov
es
aas
cltd
movsb
pop
fidivs
sbbb
pop
sbb
cli
lahf
fisubrs
cmp
push
sbb
push
push
inc
lret
cli
xor
popa
clc
inc
mov
int3
cmc
test
stos
jb
jb
sbb
mov
sub
adc
mov
divl
mov
mov
pusha
dec
mov
cwtl
sbb
add
xchg
ds
test
cmp
pop
xchg
xor
dec
or
mov
add
call
pop
push
xchg
cmp
icebp
les
ja
mov
sbb
and
lret
mov
jge
pop
inc
sub
out
push
fnstsw
sti
rolb
jns
rcrl
dec
mov
and
jmp
adc
scas
aas
jno
cmp
mov
jmp
mov
adc
xchg
std
add
or
lcall
paddq
dec
sub
repz
int
add
sbb
or
mov
idivl
js
mov
jmp
test
push
call
in
popf
lock
add
mov
aad
cld
sub
bound
inc
cmpsb
cli
sti
dec
arpl
or
ja
stos
std
pop
in
gs
outsb
mov
movsb
icebp
or
dec
sbb
aaa
outsl
loopne
xorb
dec
push
stos
lods
sbbl
xchg
lods
cli
sbb
inc
aas
add
ja,pn
pusha
dec
sub
adc
popa
fs
xor
xchg
mov
jno
push
lods
popf
push
cmp
pop
adc
test
lret
jo
push
or
or
out
je
sbb
sahf
mov
in
shlb
fldcw
mov
push
inc
inc
pop
cmp
mov
push
and
dec
fwait
xchg
insl
xchg
mov
je
xor
lcall
clc
dec
jl
sub
jno
and
lds
pusha
jmp
enter
push
inc
adc
pop
push
or
add
aaa
repz
push
mov
mov
xchg
push
mov
mov
fstpl
ss
jno
out
insb
movsb
jp
mov
clc
mov
xchg
push
insb
addr16
push
dec
dec
add
dec
mov
jecxz
adc
lods
les
xor
add
mov
push
dec
dec
test
jns
mov
mov
or
in
sti
sbb
nop
in
and
lock
ja
sbb
mov
dec
mov
lret
ja
lods
movsl
push
and
imul
cmpsl
leave
jns
xchg
jg
xor
dec
add
arpl
paddusw
push
mov
mov
or
or
add
dec
popa
das
into
fsub
xchg
or
lock
popa
cltd
push
push
es
push
jge
fcomip
cpuid
nop
mov
fadds
adc
fwait
sub
push
xchg
lcall
mov
xor
inc
fidivl
mov
testl
rcll
inc
into
sahf
dec
in
add
lret
clc
decb
sbb
and
rcr
and
inc
dec
fnstcw
ja
inc
das
sti
mov
andl
pop
cli
addr16
mov
sub
repz
inc
cmpsl
pop
push
in
xor
mov
cmp
stc
dec
sbbl
pop
nop
dec
sbb
sbb
xor
mov
adc
lcall
cmp
or
pop
out
adc
and
cmp
lcall
jno
in
scas
out
adc
mov
dec
or
cli
flds
push
scas
cltd
xchg
sbb
lret
cmpsb
adc
mov
push
lds
mov
popf
pop
inc
fs
cli
dec
lds
aaa
dec
xor
dec
add
adc
daa
fldcw
mov
inc
xchg
arpl
dec
fcoml
xor
and
adcb
in
jge
adc
inc
sahf
test
repz
xor
or
shl
adc
inc
jb
pop
add
iret
js
mov
ljmp
cld
xchg
or
cmp
ja,pn
sub
cld
add
pop
pop
pop
adc
imul
push
or
cmpb
inc
scas
in
addr16
ljmp
and
das
jns
jbe
stos
dec
sub
mov
pop
icebp
mov
xor
sub
pop
sbb
cmp
and
dec
inc
pop
ds
out
rolb
cmp
push
movsb
leave
enter
cmp
sbbl
push
into
and
iret
ds
push
ret
faddl
pop
inc
repnz
xchg
sub
sub
jmp
mov
sbb
lcall
xor
sti
pop
sti
sbb
or
frstor
and
jmp
xchg
shlb
xlat
dec
stos
out
stos
inc
movq
xor
pslld
outsl
insb
push
loop
mov
test
roll
aas
inc
in
pop
les
cmpsb
add
xor
pop
decl
sub
iret
loopne
iret
add
mov
ss
sbb
xchg
push
jns
pop
push
cmpsb
adc
adc
lock
push
insl
lods
in
pop
mov
cmpsb
push
xor
pop
lods
sbb
mov
inc
into
mov
jg
jl
xchg
sub
mov
loop
jmp
and
and
fimull
aaa
sbb
adc
aaa
mov
call
sub
inc
roll
test
pop
in
ss
and
sbbl
sub
dec
aam
sub
loopne
jle,pn
jno
add
cmp
mov
lods
fcompl
lods
adc
je
and
push
pop
mov
push
xchg
in
nop
mov
inc
dec
lret
pop
insl
and
inc
mov
and
sbb
stos
pop
fiadds
lahf
dec
jae
in
mov
pop
icebp
mov
je
sbb
test
lds
mov
rcrl
fwait
adc
es
mov
mov
jo
ret
and
popf
out
gs
or
sub
cmc
leave
loop
repnz
lds
dec
xchg
pop
lcall
cmpsl
mov
fadds
or
and
xchg
leave
push
add
add
sub
int3
and
insl
int
mov
sub
cmp
mov
das
mov
sbb
lock
lret
aad
jb,pn
mov
out
hlt
gs
lea
xchg
push
sti
push
mov
pop
add
lods
inc
jl
ljmp
cmp
mov
mov
dec
xchg
adc
cs
pop
jne
inc
lods
repnz
fidivrl
xchg
ficomps
jnp
aad
and
shr
leave
and
idiv
loopne
mov
cs
mov
push
fistl
mov
ficompl
arpl
fimuls
jnp
inc
inc
inc
gs
adc
out
adc
int3
jbe
fbld
xchg
mov
adc
clc
ret
lock
pop
sahf
fcompl
jl
dec
xchg
mov
xchg
popa
popf
ret
push
stos
add
fsts
fcmovu
xchg
add
pop
enter
add
pop
xchg
or
inc
mov
pop
fnstenv
inc
scas
mov
or
cmp
mov
sti
push
arpl
int
push
adc
xor
pusha
imul
mov
pop
jp
jle
push
add
fsub
adc
jno
adc
pop
push
adc
imul
and
in
orb
ss
hlt
jl
out
push
pop
int3
mov
mov
jnp
pop
insb
pop
mov
mov
push
jge
pop
clc
push
or
aas
dec
ja
fcoml
push
aam
sbb
sbb
xor
movsl
movb
popf
mov
adc
pop
mov
call
xchg
adc
bnd
xchg
sub
push
inc
pushf
dec
sbb
push
lret
in
cmp
pop
mov
js
jno
stc
les
scas
dec
mov
mov
adcl
mov
mov
out
ficoml
add
call
mov
xor
mov
js
in
sarl
xor
lcall
and
and
mov
cmp
mov
push
lret
pop
into
jne
aam
sbb
movl
and
hlt
cmp
pop
mov
xor
fsub
aad
xor
lea
and
popa
cmp
mov
pushl
jl
fsubrl
repnz
sbb
mov
cmp
cmpsb
sbb
cwtl
xor
loop
dec
je
ja
ss
pop
das
push
bnd
mov
pop
inc
mov
das
jnp
mov
dec
loope
in
pop
push
cmp
lret
out
jp
push
push
mov
stos
ret
adc
sti
aad
stos
into
xorb
sub
stc
aam
xor
rdpmc
stos
leave
pop
adc
add
xlat
push
insb
xchg
mov
sbb
in
dec
inc
dec
xchg
cltd
int3
mov
sbbb
nop
sub
and
int3
xchg
jl
dec
add
into
sbb
pop
xor
mov
sbb
sub
jnp
and
pop
jnp
inc
xchg
rcrb
dec
pop
pop
fidivrs
arpl
jae
xchg
mov
hlt
rol
dec
cmpsb
push
into
push
rcrl
mov
imul
push
or
daa
loopne
push
adc
or
inc
addr16
out
dec
mov
add
shl
int
outsl
inc
cmp
notl
test
ja
push
adc
lock
bound
and
shl
insl
enter
arpl
insl
sub
cmpsb
add
lret
xor
insb
sub
mov
in
mov
cmp
jp
mov
sub
sarl
pop
xchg
inc
stc
hlt
sub
jns
cmpsl
movsl
inc
dec
mov
fiaddl
out
addb
xor
dec
aad
cltd
in
adc
sbb
add
fisubl
and
jne
inc
push
lods
mov
jl
ja
fnstsw
add
enter
cli
stos
cwtl
mov
push
pop
sub
in
outsb
icebp
rorl
adc
mov
into
adc
lock
or
cmp
adc
push
mov
iret
test
aas
inc
hlt
pop
jge
pushf
add
mov
sub
decl
enter
gs
mulb
xor
jne
push
addr16
fs
jbe
jmp
test
loope
xorb
xor
mov
dec
add
lret
clc
sub
adc
daa
and
cmpsb
insb
mov
shlb
scas
or
push
xchg
adc
daa
pusha
sub
lea
shrb
negl
out
fstpt
out
xchg
xchg
sub
xor
jg
or
or
mov
imul
jns
or
mov
sbb
add
vpaddusb
aam
in
lret
iret
mov
shlb
xor
fs
cli
mov
in
scas
inc
sbb
inc
cli
push
inc
loope
jp
pushf
add
pushf
iret
fstl
jg
cmp
xor
and
push
mov
lret
ret
mov
push
int
ds
and
cmp
and
inc
rep
jo
in
fucomi
in
dec
pop
xor
fbld
adc
add
sub
lock
loope
and
lret
cmp
adc
mov
dec
jge
lret
cmc
lds
or
mov
cmpsl
add
sbb
in
adcl
into
rcrl
js
sub
cmp
andl
fsubrl
xor
sbb
loop
and
cs
jp
roll
negl
sub
div
loop
aas
shrl
test
imul
and
jnp
ffreep
push
dec
rcl
lcall
movsl
cmp
cmp
fstpl
and
mov
fwait
icebp
add
stc
fistpll
mov
xchg
jb
in
jg
lret
pop
lcall
rorb
add
adc
out
inc
xchg
ss
in
xchg
ljmp
sub
push
repnz
mov
test
cmp
xor
mov
rcrb
lock
call
jns
mov
dec
adc
cmpsb
cmp
push
pop
popf
lods
fwait
cmpl
cmpl
out
fidivrs
inc
ljmp
cmpb
stos
clc
jmp
aad
inc
in
andb
cmpsb
sbb
push
in
mov
mov
jge
pop
fdivrs
negl
lods
out
lcall
std
cmp
mov
push
shrb
push
dec
pop
je
gs
add
inc
popf
jae
mov
in
dec
jl
dec
or
inc
pop
add
and
ror
or
cmp
xchg
dec
xchg
fwait
mov
ret
daa
in
sbb
cmpsb
call
sti
fisubrs
ja
jns
imul
popf
mov
fwait
dec
stos
adc
sub
into
mov
lock
dec
daa
data16
es
adc
xchg
arpl
and
mov
jnp
mov
dec
fmuls
adc
jne
daa
fwait
cmp
mov
xor
mov
in
mov
xchg
jge
sbb
enter
repnz
insb
mov
cmpsb
mov
aam
adc
rcrb
in
mov
imul
aam
jge
dec
dec
sahf
mov
icebp
call
push
int3
in
pop
in
add
addb
adcl
inc
movsb
inc
add
dec
pop
enter
cmpxchg
jno
rcrl
shr
mov
stos
mov
and
int3
shl
rcrb
add
sbb
ret
sbb
mov
cmpsb
loop
in
in
mov
push
jo
sbb
push
push
fdivrl
int3
sbb
cltd
in
mov
adc
xchg
jne
mov
test
sbb
mov
pop
jecxz
fcmovb
daa
cli
out
sub
loope
enter
sbbl
mov
cmp
cmp
sub
std
mov
fiaddl
cmp
jle
push
push
dec
imul
outsl
mov
pop
mov
cmp
out
daa
in
in
loopne
je
cmp
int
cli
jno
insl
mov
xor
popa
gs
movsb
pop
cwtl
ret
mov
xor
hlt
insb
or
jle
mov
pop
push
ficoml
inc
mov
rcrb
std
or
mov
jno
lret
iret
jmp
cmpsl
sbb
loopne
mov
cmc
dec
lahf
dec
sub
xor
into
add
pop
cmpsl
pop
addr16
imul
into
cld
or
mov
adc
scas
adc
jae
mov
push
push
es
inc
inc
icebp
and
xor
mov
mov
mov
out
fstpl
jmp
cmc
push
pop
cmp
xor
pop
push
jo
jns
dec
inc
pusha
xor
mov
adc
pop
insl
stos
xor
lret
lahf
ret
inc
cmp
pushf
hlt
sbb
mov
stc
and
shl
xor
fcomps
mov
mov
add
mov
lds
adc
push
jmp
mov
js
lahf
xor
sahf
xchg
loop
cmp
stos
fs
mov
and
sbb
push
stc
and
scas
jo
out
lret
sarl
sbb
push
xor
call
adc
mov
and
cld
test
mov
movsb
or
les
out
mov
mov
dec
xchg
add
fdivrs
xor
bound
pop
cmp
pop
fdivl
test
cmp
or
sub
push
icebp
mov
mov
dec
nop
xchg
dec
sbb
jge
mov
xchg
sbb
cld
jmp
aas
les
fdivrl
in
add
pop
inc
sbb
adc
xlat
out
mov
lods
or
sbb
inc
cwtl
and
mov
mov
jg
jae
call
pop
jle
imul
jg
mov
or
add
fstpl
cmp
stos
push
pop
jnp
cwtl
lahf
sub
sti
cltd
popf
bound
dec
mov
out
and
bound
and
sub
add
in
das
insb
cmpsl
int3
pop
xor
imul
jbe
call
ficoml
out
cs
in
sbb
arpl
rcrl
sbb
pop
cmpsl
dec
test
push
mov
inc
fcmovnbe
je
add
mov
add
insl
inc
sub
mov
dec
lcall
dec
outsb
dec
dec
arpl
and
stos
sbb
call
add
pusha
cltd
inc
cs
stos
xchg
ret
and
call
sbb
sub
clc
nop
and
sbb
shl
and
inc
in
add
jne
mov
dec
and
cmp
popa
jp
outsb
fdivs
dec
adc
push
pop
mov
xchg
push
pop
adc
iret
jbe
pop
jbe
ss
xor
xchg
jle
cmpsb
in
jmp
stos
adc
jle
sub
stos
inc
or
je
mov
sbb
std
xor
jb
mov
xchg
push
and
test
mov
add
sub
mov
pop
push
or
js
mov
mov
stos
mov
adc
inc
pop
cmpsb
shll
jb
jne
fdivl
dec
ljmp
mov
or
mov
jle
jmp
outsb
mov
into
dec
jp
inc
mov
mov
mov
stc
inc
hlt
daa
xchg
cltd
inc
lret
mov
mov
cmc
cmp
jg
adc
shl
pusha
gs
and
and
scas
lahf
cmc
xchg
xor
js
pop
mov
jecxz
mov
push
and
inc
adc
sar
mov
sub
enter
inc
sub
jbe
ljmp
push
xchg
pop
pop
lods
push
jae
push
fucomip
sbb
std
test
mov
ss
cmovno
jno
sub
mov
xor
and
idivb
ja
jl
sbb
mov
seta
js
insb
jnp
xchg
popa
adc
mov
mov
xchg
jne
mov
insb
pop
bound
stc
jno
ja
and
sbb
cmp
add
mov
fstp
push
and
jmp
fstl
sbb
xlat
ret
test
add
int
cwtl
fdivr
fbstp
jnp
mov
pop
cmpsl
hlt
adc
xchg
loope
lods
pusha
and
fdivs
push
dec
mov
sub
sarl
add
out
daa
cmp
jg
jl
test
pop
dec
xor
add
dec
xor
ret
test
push
std
push
pop
jns
sahf
sub
dec
inc
lock
fistps
inc
sahf
addr16
xor
xorb
adc
andb
sub
xor
sbb
mov
sti
or
fmul
jae
push
dec
popa
cmc
adc
scas
push
ficomps
fistl
mov
xchg
jmp
arpl
and
or
pop
sub
pop
insl
stos
xor
cmpsl
and
push
lret
xchg
ss
dec
leave
nop
add
xchg
cltd
int3
lahf
sub
cmc
ja
push
push
ds
stos
mov
jb
xor
stos
cmp
sub
out
xchg
push
and
add
repnz
in
jne
in
js
mov
loope
mov
inc
adc
pop
fwait
insl
into
fs
sub
add
cmpsl
xchg
adc
scas
dec
fcompl
sbb
mov
and
xor
pop
fucom
psubsb
dec
add
sub
push
stos
adc
je
int
mov
dec
cli
cli
movsb
or
inc
sbb
shrb
mov
dec
push
ret
dec
lret
push
insb
mov
push
mov
js
shlb
loop
jge
dec
dec
lcall
xchg
pop
ljmp
lods
pop
lods
pop
jo
sub
or
arpl
dec
inc
push
insl
and
jle
insb
mov
ficoms
das
jp
dec
daa
jbe
adc
mov
mov
or
cmp
adc
imul
add
lahf
in
sub
roll
dec
js
icebp
dec
push
mov
push
hlt
mov
out
add
icebp
mov
sbb
jge
andb
jno
addr16
rcrb
inc
pop
popa
stos
pushf
mov
pop
pop
inc
insl
ljmp
add
cmp
pop
cmp
roll
add
cs
loop
adc
fs
push
lock
mov
ljmp
cmp
loopne
aad
sub
icebp
sub
cli
or
cmc
bound
adc
fwait
adc
mov
adc
or
out
mov
ret
mov
mov
fwait
ds
xchg
je
mov
adc
gs
sbb
cwtl
xchg
sbb
pop
loope
mov
jb
sub
adc
enter
jns
pusha
jg
clc
xchg
arpl
out
lcall
roll
rorl
adc
cmp
xor
int
clc
pop
inc
adcb
jmp
inc
push
xchg
fldl
aam
cmp
leave
fiadds
sarb
rorl
repnz
cli
mov
int3
gs
push
push
cli
addr16
cmp
mov
mov
xor
movsl
cmc
in
add
inc
jle
cmpsb
insb
nop
jns
jbe
xchg
jl
xchg
into
movsl
lods
dec
pop
inc
add
sbb
cmp
dec
dec
arpl
leave
mov
inc
hlt
pop
loope
pusha
in
js
cmp
jo
or
xor
xlat
sbb
bound
stos
in
cltd
mov
sub
mov
jo
jnp
in
jmp
pop
mov
sub
js
scas
sub
and
arpl
mov
orl
test
sbb
ss
lret
mov
test
xchg
dec
push
push
add
dec
sbb
mov
sbb
lahf
jno
pop
pop
mov
mov
ljmp
loope
insb
imul
xor
jne
xor
aam
and
shlb
xchg
ret
dec
pop
lock
fadd
shl
cmp
mov
pop
sub
stos
xchg
pop
push
shlb
cli
out
inc
cmp
jb
xlat
mov
jno
mov
sub
cmp
out
mov
jno
data16
mov
add
jnp
xchg
sub
aas
adc
xor
cld
inc
cmpsl
mov
je
ds
add
inc
into
cs
mov
pop
adc
aad
lods
add
push
jbe
and
add
pop
movsl
jle
insl
jns
sub
lcall
test
jnp
xlat
es
pop
cmpsb
sbb
insb
dec
fsubrl
mov
rcrl
fildl
testb
cli
out
or
mov
iret
push
fucompp
push
decl
into
arpl
jbe
imul
mov
dec
pop
inc
lret
hlt
aaa
sti
jge
je
pop
shlb
flds
mov
lcall
arpl
add
pop
xchg
ja
inc
cmp
push
lock
aam
lret
shl
lea
xor
adc
inc
insb
dec
shll
jns
das
mov
cmpsl
imul
std
push
sub
xor
cmp
pop
mov
xor
das
mov
push
std
daa
ret
cmpl
jp
test
jp
mov
cltd
xor
jle
xor
mov
movsl
pop
sbb
imul
loope
jp
sbb
insl
adc
pop
les
fsubrs
dec
divl
aas
jbe
cmc
leave
mov
imul
jno
mov
push
pop
mov
add
dec
int3
cmp
aaa
cwtl
jg
rorl
cmpsl
mov
add
cmpsb
insb
fistps
in
mov
xor
xchg
mov
adcl
inc
jp
push
fistps
jno
jmp
sub
jne
xor
aad
movsl
adcl
jo
daa
jle
pop
popa
in
dec
sbb
pop
ljmp
add
jmp
mov
mov
inc
stos
mov
cwtl
fsubrl
mov
mov
xor
pop
and
inc
adc
inc
popa
fwait
std
inc
insb
jp
inc
aad
out
xor
jne
cmc
sbb
pop
lock
mov
sub
xor
jle
lcall
in
cmp
pop
and
push
insl
mov
fisubl
in
dec
jae
cwtl
dec
push
cmp
pop
es
sub
call
and
xorb
mov
fchs
and
lods
popa
orb
lds
or
push
imul
dec
xor
and
push
test
dec
pop
test
es
inc
add
addr16
mov
cmp
jb
test
jl
dec
fwait
add
scas
mov
mov
jae
sbb
jp
orl
push
insb
lretw
ss
push
cmpsb
xchg
leave
xor
jo
jno
loope
mov
lea
lret
sbb
enter
lds
mov
pop
nop
xchg
push
dec
mov
add
scas
sub
jns
adc
test
icebp
bound
imull
sub
push
inc
adc
cld
push
inc
mov
sub
in
int
cmp
pop
out
cmp
gs
int3
fldenv
rolb
xor
sbb
lahf
xchg
jns
orb
fcoml
mov
mov
and
bound
scas
sbb
daa
adc
fdivs
lret
fwait
out
dec
jecxz
mov
dec
movsb
mov
ds
fcomp
fs
add
pop
dec
sar
mov
xchg
xchg
stos
sbb
ret
cmpsb
mov
dec
out
pop
inc
cwtl
push
into
adc
sbb
mov
sbb
mov
lea
push
xchg
add
fs
pop
xchg
fcom
mov
aam
lahf
pop
mov
add
iret
ds
rcl
cli
and
std
or
inc
cmc
lret
jbe
or
stos
inc
insl
xchg
stos
andb
xor
shr
pop
xor
fwait
je
pop
xor
les
lds
daa
ja
jb
ror
mov
loop
inc
into
enter
pushf
jbe
shrl
loope
out
cmpsl
add
fwait
or
cmp
jns
mov
or
push
loope
xor
mov
cmp
mov
notl
pop
pop
inc
andl
push
mov
std
mov
cltd
movsb
and
push
mov
sub
lods
jb
flds
jns
jb
out
adc
aas
mov
in
cmp
fwait
inc
scas
inc
and
and
push
lret
mov
xor
mov
xor
push
add
mov
aad
fldl2e
dec
pop
in
fisubrs
jne
repz
sbb
push
cmpl
mov
rolb
lret
xchg
jbe
mov
and
sbb
jge
adcb
mov
and
xor
or
outsl
mov
hlt
cli
cwtl
jns
push
dec
loopne
cli
jb
cwtl
xor
jg
das
scas
fcomip
cltd
dec
insl
jb
mov
push
dec
pop
pop
lods
repnz
lahf
xchg
jno
ljmp
cmc
aaa
mov
leave
mov
ljmp
cltd
and
fsub
popa
jmp
pusha
adc
jbe
lds
test
std
mov
lods
int
xchg
mov
fs
mov
add
stos
jae
mov
inc
cmc
and
sub
and
pop
out
insl
addr16
pop
or
insb
outsl
inc
fcmove
mov
popf
enter
mov
lahf
jecxz
stos
sub
enter
lock
int3
pushf
popa
cmc
pop
sbb
xor
push
dec
sbb
lods
inc
pusha
mov
lcall
sbb
out
mov
loope
divb
adc
in
imul
lods
or
and
add
ja
push
dec
cwtl
add
cltd
dec
pushf
xchg
loope
xchg
adc
insl
dec
roll
cmp
decl
inc
clc
enter
push
mov
dec
pop
mov
fsubs
in
ret
movsl
repnz
inc
outsl
rcll
aaa
loop
leave
dec
loop
rcr
fsubrl
push
add
into
xor
dec
mulb
outsb
add
adc
mov
sbbb
and
sbb
jmp
lcall
sarb
dec
push
aaa
adc
stos
xor
mov
int
push
jmp
enter
xlat
add
lods
jnp
sahf
es
jbe
testl
daa
mov
subb
or
jmp
outsb
add
loopne
clc
jns
dec
fyl2xp1
mov
loop
mov
clc
mov
add
xchg
mov
pop
or
or
lods
inc
pop
sbb
js
ffree
fbstp
jmp
inc
repnz
iret
addb
sbb
andl
jnp
cmp
lea
mov
jge
inc
lea
sbb
push
or
xchg
wrmsr
or
testb
dec
fwait
xchg
iret
pop
movsb
repz
or
out
adcb
movsb
inc
mov
ss
xchg
ret
in
pop
mov
jo
sub
test
in
loope
inc
or
lea
xor
daa
lcall
or
push
dec
cmp
loop
add
or
divl
jge
shl
pop
pop
ret
push
gs
movsl
mov
xchg
popa
inc
cmpsb
fimuls
adc
fs
call
jbe
popa
in
in
xor
mov
mov
xchg
int3
adc
sti
sub
test
out
dec
dec
cmp
stc
and
subl
ss
sahf
cmpsb
dec
pop
inc
js
lock
imul
pushf
mov
pop
call
fistl
dec
add
push
das
jecxz
jbe
xor
fistpll
ror
out
stc
fs
push
adc
push
lea
lods
stc
jl
scas
lcall
push
mov
sbb
inc
lret
cwtl
pop
aad
aaa
and
add
inc
ret
mov
jo
fldcw
dec
sub
int
lret
data16
xchg
mov
inc
movb
cmp
inc
jl
sub
push
popa
pop
mov
mov
fimull
xor
andb
insl
in
cmpsb
sub
stc
pop
adc
jge
les
cld
push
sbbl
jns
pop
mov
dec
and
jno
outsl
push
xor
sbb
xchg
cli
cmp
ret
arpl
pop
out
fdivl
fs
rorb
xchg
int3
dec
decl
imul
movb
lods
and
inc
leave
rolb
leave
pop
dec
dec
sub
cltd
int3
mov
mov
adc
mov
cmp
adc
pop
and
cld
int3
inc
adc
dec
cmp
sbb
and
jo
ret
mov
icebp
dec
jmp
call
pop
stc
dec
mov
mulb
or
jge
aas
icebp
pop
xchg
ret
in
mov
mov
ror
aam
cmp
jle
fldenv
dec
jmp
fldt
js
push
xchg
aas
pusha
mov
clc
in
mov
inc
aad
mov
fistps
sub
sbb
leave
add
jb
mov
mov
sti
push
fdivp
pop
cli
push
rorb
or
pop
clc
into
int
mov
scas
mov
fistl
jp
lds
adc
popf
aas
xchg
addr16
mov
pop
jp
nop
popf
jmp
sub
jbe
jge
repz
pop
pop
push
xor
orb
std
cmp
es
sbb
fsubs
sbb
jne
jle
iret
adc
jp
ds
mov
sub
mov
adc
adc
inc
rcl
iret
loope
cmp
call
mov
or
sti
clc
fidivs
insb
xchg
add
pusha
stos
jl
jecxz,pt
out
push
add
push
inc
sbb
push
adc
in
pop
cs
add
xor
stos
push
je
jne
aaa
lret
mov
hlt
jmp
clc
popf
pop
mov
push
sub
adc
enter
sar
int
movsb
mov
mov
lret
mov
js
notb
xor
je
loopne
mov
jp
jge
ds
sbb
push
mov
bound
jns
pop
jp
fxch
pop
xchg
std
xor
dec
push
movsb
sbb
sbb
adc
jo
sbb
xor
pop
cmp
mov
inc
sbb
pop
insl
ret
repz
ret
mov
xor
arpl
stos
xor
or
adc
loopne
cmp
add
fnstenv
shrb
cmp
aaa
inc
push
ficoms
jecxz
mov
sti
iret
fwait
out
push
pop
dec
push
sub
lret
push
ret
dec
push
xchg
mov
sarb
fs
mov
xchg
inc
mov
or
jmp
pop
cmp
push
xor
aas
sahf
fimuls
mov
mov
xchg
fcomp
aaa
pop
stos
ss
inc
lcall
mov
ljmp
xchg
lea
jno
popa
add
bound
lea
dec
mov
cmc
adc
inc
xorl
mov
mov
cmpsl
push
jae
in
cmp
jmp
fs
xchg
xchg
outsl
in
data16
mov
mov
dec
mov
push
sub
or
lods
inc
cmpsl
xchg
aad
push
sbb
or
dec
shlb
stos
adc
leave
scas
sub
cmp
mov
mov
dec
sti
or
pop
aam
mov
and
jecxz
or
dec
sbb
inc
sarl
bound
jg
roll
add
les
lahf
sbb
cmc
and
pop
pop
popf
in
or
mov
aas
lods
push
dec
jg
or
int
and
jbe
lds
fidivs
jno
stc
jns
imull
hlt
ret
cmpsb
loope
sbb
mov
les
inc
in
js
fmull
scas
cs
ret
add
sar
iret
lock
inc
ja
inc
bswap
inc
fdivrp
push
and
mov
out
jge
push
add
aaa
push
shr
lea
and
bound
sub
push
dec
push
lcall
add
xchg
hlt
mov
popa
in
addr16
mov
fwait
icebp
lea
ds
mov
and
sub
popa
cmp
adc
mov
repz
or
lret
sbb
shll
push
mov
loopne
sub
pop
mov
mov
aas
sbb
loope
call
fmulp
sub
pop
loop
cvtps2pi
jge
adc
push
xor
dec
in
repnz
stos
in
shll
push
jne
inc
sbb
repz
lret
push
pop
adc
out
test
scas
mov
pop
jns
movsl
pusha
or
test
sub
or
loopne
jae,pt
push
dec
dec
add
es
mov
inc
in
stos
push
cltd
mov
xchg
pop
or
push
or
push
rclb
jp
rorb
xor
lock
insb
jo
fldt
hlt
ret
test
roll
push
sub
les
out
fwait
mov
cmpsl
xchg
sbb
mov
daa
pop
loop
inc
in
outsb
out
mov
xchg
sahf
xorl
sbb
orl
test
aad
jne
in
pop
cmp
xchg
cltd
nop
add
cmpsl
movsl
popf
int3
adc
cld
cmpsb
sbb
adc
mov
push
dec
push
insb
xlat
outsb
movsl
mov
add
inc
in
imul
cmpsl
scas
push
jmp
sbb
mov
arpl
ret
mov
cmp
cld
jp
js
into
icebp
stc
popa
adc
pusha
sbb
pushf
cltd
ja
out
fimuls
mov
add
pop
dec
andl
add
fistps
jge
pop
fdivs
inc
repz
add
stc
sbb
int
push
or
or
je
jne
das
lods
iret
std
or
scas
lds
sti
mov
test
and
add
cmp
push
pop
mov
sub
jns
stos
sbb
cmc
stc
ds
stos
cmp
test
and
mov
movsb
out
into
xchg
test
bound
mov
dec
xchg
loopne
in
inc
inc
and
ret
add
shl
add
repnz
jb
xor
shrb
jl
iret
xor
cmc
jle
mov
add
dec
int
out
add
add
dec
fcmovnbe
cltd
dec
or
dec
and
or
adc
stc
test
push
sub
adc
fwait
imul
int3
xor
dec
jge
mov
pusha
dec
clc
push
mov
dec
jae
outsl
xchg
mov
mov
or
roll
or
ds
jne
aaa
test
imul
stos
pop
jne
clc
arpl
push
addr16
pop
outsl
pop
jno
push
xchg
pop
sbb
fistps
iret
sub
mov
movsb
testb
fwait
add
filds
cmp
jecxz
lds
adc
and
inc
jg
and
clc
ja
push
orl
adc
sti
dec
dec
mov
ds
shlb
dec
mov
lds
xchg
popa
testl
pop
cwtl
aaa
pushf
jmp
arpl
adc
add
sbb
push
mov
andb
mov
inc
jae
iret
fidivl
pop
pop
inc
add
xor
or
bound
mov
mov
sahf
xchg
adc
loop
leave
mov
sub
idivb
dec
mov
sub
or
jns
push
sbb
dec
jns,pt
pushf
pop
js
gs
pusha
fwait
mov
test
shll
sbb
cmpsl
xor
jmp
hlt
mov
ret
cmp
popf
icebp
es
pusha
in
jae
mov
push
andb
jg
cmp
mov
push
lods
and
roll
sar
inc
cmp
inc
mov
adc
arpl
push
push
mov
in
and
inc
rclb
in
imul
push
cs
cmp
mov
mov
xor
ret
cli
nop
push
mov
lahf
inc
dec
rol
mov
stos
mul
xchg
enter
jle
or
cmpsl
fidivl
stos
add
insb
sub
pop
sub
mov
subl
movsl
sbb
lds
jb
out
test
adc
icebp
mov
imul
jmp
in
cmc
stos
ja
faddl
bound
dec
lret
icebp
movq
xor
xchg
jns
cmp
hlt
mov
aaa
add
ds
sub
shl
lahf
push
mov
sbb
out
rorl
rcr
int3
push
dec
test
jnp
mov
ja
ja
outsb
inc
lea
pop
mov
sub
lock
data16
daa
mov
and
pop
out
ja
mov
aas
sub
sbb
jle
adc
pop
in
leave
cltd
lcall
mov
and
popf
xchg
inc
cmpsb
push
mov
xchg
stos
test
adc
pop
add
pop
scas
xchg
mov
fwait
int3
js
in
popf
xlat
mov
test
mov
pop
mov
sub
shlb
sbb
frstor
pop
dec
push
push
pop
shlb
push
and
mov
ret
inc
shrl
lahf
push
cld
and
sbb
mov
xchg
jo
sub
int
adc
or
and
popf
lret
aaa
je
xchg
cs
mov
cmp
push
or
xor
cli
fistpl
adc
pop
push
popf
inc
jns
jmp
out
pushf
cli
xor
hlt
sbb
pop
cs
ja
out
sub
sti
test
mov
stos
mov
adc
cmpsb
stc
das
add
out
fistpl
je
mov
adc
leave
pusha
out
jns
cmp
mov
fnstcw
insb
cltd
ja
fwait
loope
sub
enter
sub
popa
and
dec
adc
sub
mov
mov
lret
fidivl
mov
xchg
xchg
repnz
dec
mov
adc
sar
xchg
pop
jno
lret
sbb
clc
gs
pusha
out
sub
in
and
sbb
pop
shlb
mov
mov
mov
xchg
xorl
imul
aas
aam
pop
stos
fildll
loopne
or
cmp
sahf
ret
test
xor
cli
pop
add
mov
addr16
push
adc
fildl
int3
adc
cs
jne
sahf
sbbb
aad
aaa
push
pop
xchg
mov
push
aam
enter
sbb
pop
fisubs
shrb
insb
jge
or
aas
cmc
add
pop
dec
adc
ret
repnz
loopne
jne
js
add
inc
mov
jp
cli
and
pop
dec
push
or
or
mov
pop
stc
mov
mov
rolb
sarb
mov
insl
fwait
xor
sub
xchg
rorb
pop
repnz
pop
jmp
push
ds
cmp
scas
lods
cld
sub
jnp
insb
push
cmpsl
pop
scas
imul
into
sub
in
mov
xchg
stc
pop
or
aas
fwait
popf
pusha
scas
daa
pop
xchg
fs
jmp
push
icebp
leave
and
iret
xchg
shr
cmc
xor
lock
add
inc
mov
sbb
stos
mov
test
sahf
and
and
bound
aas
and
mov
je
imul
lods
dec
pop
mov
mov
pop
dec
rcll
pop
lret
scas
cmp
jns
adcl
ficompl
xchg
pop
mov
pop
pop
pop
test
mov
lea
mov
incl
sarl
in
and
loop
lcall
add
inc
push
jno
mov
test
xchg
or
xor
mov
push
mov
shlb
fistps
jge
hlt
test
lds
mov
call
je
jnp
xor
push
mov
aaa
aad
ror
jmp
mov
mov
cmp
out
popa
inc
in
jle
jae
push
mov
pushf
aas
and
jle
sti
adc
jnp
orb
fcmovnu
in
mov
add
adc
xchg
cwtl
mov
cmp
and
loopne
repz
iret
push
js
repz
sbbb
loopne
push
stos
or
inc
decl
popa
test
or
cmp
insl
aad
dec
mov
adc
jae
lcall
push
xorl
sarb
insb
pop
inc
std
dec
ret
subb
lcall
sbb
jae
inc
inc
push
or
cmc
pusha
arpl
push
inc
aaa
mov
les
jmp
faddl
pop
lods
add
mov
test
jb
push
jecxz
int
xchg
cmp
xor
dec
and
pop
mov
xchg
pop
cs
pop
stos
adc
gs
in
lahf
sbb
shll
pop
jbe
mov
pop
xchg
mov
and
xor
jbe
leave
lret
mov
insb
out
lods
stos
rolb
ret
fwait
aas
mov
fwait
cmp
mov
xchg
sbb
xchg
dec
jae
pop
test
sub
test
testl
or
sbb
out
add
cmpsb
sub
in
mov
or
ds
cmpsl
xor
lahf
add
into
scas
cmp
mov
mov
arpl
adc
xchg
and
inc
ljmp
lret
and
jo
notl
mov
and
push
jae
fistpl
ja
fisubs
ljmp
inc
push
test
jmp
or
push
sarl
jge
int3
add
jno
add
test
orl
add
pop
aas
pusha
push
adc
scas
adc
push
xlat
add
scas
outsb
lret
out
test
sub
cld
inc
in
sub
out
loop
adc
pop
sbb
out
ss
fistps
mov
push
rol
inc
daa
sub
hlt
pop
dec
adc
jl
inc
cwtl
mov
mov
push
mov
dec
push
sub
add
das
ficoms
or
in
hlt
sbb
inc
rcrl
lahf
mov
and
lock
pop
in
ret
mov
dec
lret
shlb
cmp
add
insl
nop
push
xchg
xchg
mov
test
adc
and
aad
fdivs
xor
shrb
push
test
adc
fwait
mov
jl
cltd
rorb
fnstcw
clc
insb
sub
stos
mov
ss
xchg
mov
flds
mov
push
fs
cmp
xor
pop
inc
insb
mov
jmp
mov
inc
divb
add
jno
fs
icebp
sbb
fstpl
ret
push
mov
ret
push
clc
mov
jl
loop
call
fsubp
movsb
mov
dec
and
cmp
aam
push
into
filds
mov
outsl
push
fsubs
push
aad
fidivrs
scas
andl
xor
incb
lcall
jge
sbb
fcmovnb
movsl
call
and
inc
xor
negl
cld
xchg
addr16
popf
jb
sub
jg
xorl
js
jno
clc
call
jl
or
fucomp
clc
sarl
push
addw
inc
les
fisubs
mov
mov
jb
flds
sbbb
in
dec
cli
shll
jne
or
xchg
jnp
ja
jmp
mov
pop
fildll
scas
cmp
test
inc
pop
ljmp
mov
fwait
or
mov
ffreep
xorb
lods
popl
push
fidivrl
cs
push
cli
sahf
inc
test
subb
stos
mov
xchg
lret
nop
cmp
jnp
cmpsb
outsb
pop
inc
add
pop
ljmp
jg
sub
and
je
scas
das
sbb
cmc
movsb
push
negl
insb
dec
xchg
int
lahf
pop
dec
push
mull
les
insl
cld
addr16
cmp
addr16
sub
mov
xor
push
add
sub
jns
arpl
sbb
push
fwait
jno
and
enter
and
xchg
jnp
mov
sbb
movsb
aaa
es
idiv
inc
fwait
inc
sub
xchg
rcr
adc
fisubl
add
shlb
sahf
fnstcw
xchg
xchg
fiadds
add
xchg
outsl
jb
data16
leave
push
repz
add
jge
adc
cmc
dec
aam
jae
movsb
movsl
mov
mov
mov
test
dec
cmpsl
jbe
jp
dec
pushf
sti
push
lds
pop
or
leave
arpl
pop
pop
movsb
sbb
push
into
adc
pop
pushl
jbe
push
and
loop
fimuls
cwtl
fisubrl
jg
lahf
pop
aas
pop
add
or
sbb
imul
leave
and
jmp
popf
mov
std
stc
sarl
addr16
data16
push
stos
xchg
fidivrs
inc
pop
dec
jb
cmp
pop
mov
cmp
push
stos
add
popf
mov
or
cmp
or
add
fistpl
imul
cltd
mov
jl
push
add
imull
xor
sbb
out
xchg
arpl
movsl
dec
add
cli
imul
xor
xchg
addl
adc
xchg
pusha
out
mov
mov
push
mov
mov
push
pop
or
adc
or
mov
cmp
fs
test
xor
into
in
mul
add
inc
push
imul
ret
sub
lods
call
push
aas
pop
in
mov
pop
rcrl
sti
cmp
sub
into
push
mov
test
out
jae
cmpsl
fstp
stc
jge
adc
insl
ljmp
cltd
das
stos
rcrl
xor
aad
andb
lock
inc
mov
mov
cmp
icebp
push
lret
and
stos
std
jb
sbb
repz
inc
ret
fucompp
mov
stc
test
pop
and
mov
std
adc
sti
mov
and
dec
or
push
lret
or
shr
mov
fldcw
mov
loopne
andl
jo
inc
dec
mov
loopne
inc
ss
sahf
cmp
jns
dec
std
push
and
loopnew
adc
xor
fisubs
adc
hlt
pushf
sbbl
xlat
dec
in
call
out
and
dec
fsubl
add
fcoms
hlt
add
imul
loopne
dec
scas
and
push
shlb
mov
sub
jge
sub
sub
cmc
xchg
xchg
call
mov
xchg
and
loopne
inc
bound
jg
push
inc
outsb
pop
sahf
sbb
stos
jnp
enter
setno
loop
mov
xor
push
jecxz
jg
gs
fiaddl
idivl
sbb
jae
rolb
inc
adc
pop
inc
push
fdivs
out
orb
adc
push
imul
push
js
sub
lcall
fwait
add
adc
stc
add
gs
fsubl
mov
adc
rcll
btc
test
adc
sbb
rcrb
jne
lods
and
adc
rcll
cmp
mov
xlat
push
stos
dec
rcl
cmp
in
cli
in
in
lea
cmp
dec
fisubl
call
mov
xchg
fstpl
mov
jns
xchg
fisubs
hlt
cmp
add
mov
js
test
xchg
mov
inc
pop
andl
add
ja
lret
imul
pop
fsubrl
push
lds
cmc
push
inc
cltd
mov
out
aad
fisttpl
jns
cld
repz
jmp
jo
fistl
push
cltd
or
adc
inc
stos
pop
call
mov
pop
pop
je
js
dec
test
jns
push
cmc
pusha
cs
pop
scas
cmp
dec
adc
and
rcl
test
out
adc
fcmovnu
add
movsl
mov
sbb
mov
pusha
outsl
jle
js
add
movsb
mov
adc
and
mov
pop
cmp
filds
push
pop
pop
cmp
and
popf
push
add
outsb
sarl
movb
xor
adc
insl
push
jb
mov
int3
ror
pop
jb
arpl
fldl
stos
dec
add
dec
lds
jo
lahf
inc
cmp
pop
sbb
addb
cmpsb
jne
push
int
jb
lahf
popl
or
ficomps
and
enter
lret
xchg
pop
adc
mov
cmpsb
inc
cld
lock
aas
fcomp
rcrl
mov
push
adc
pusha
repz
push
push
adc
ds
pop
or
xorl
mov
ret
mov
lock
fldl
pushf
cmp
arpl
pusha
fisttpl
cmp
jns
sahf
stos
and
test
sahf
mov
aad
jle
and
in
movsl
shl
ds
push
int
je
sub
aaa
mov
mov
fildl
inc
inc
cmp
pop
movsb
sub
fbstp
xor
pop
out
bts
xchg
mov
mov
xchg
pop
xchg
movsb
inc
pop
sbb
test
jp
sbb
stos
in
lret
push
loopne
sahf
pop
mov
mov
pop
adc
enter
jecxz
jmp
shll
cmc
sub
xchg
dec
sbb
jnp
or
addr16
inc
push
cltd
daa
pextrw
inc
mov
int
pop
sub
push
push
and
in
add
nop
cmpsl
pop
jg
and
imul
mov
fstpt
ficompl
pop
imul
dec
xor
shlb
sbb
fidivrl
cmp
dec
hlt
add
dec
sarb
pop
dec
shr
add
inc
lock
mov
sti
dec
sbb
lods
ret
push
inc
inc
scas
test
push
jnp
lods
inc
out
repz
les
je
sub
ds
dec
jmp
pop
in
dec
push
jnp
and
test
xor
dec
aaa
sub
push
or
add
lock
pop
std
dec
sbb
shl
push
pop
and
ret
mov
inc
inc
hlt
cs
hlt
stos
jmp
fistpll
lret
inc
inc
aam
fwait
mov
cwtl
aam
or
push
sbb
in
xchg
out
stos
mov
xor
fcoml
mov
sub
pop
mov
sahf
scas
dec
push
jnp
mov
scas
xchg
dec
movsb
jo
pop
ds
sbbl
push
mov
ss
dec
mov
bound
push
gs
lcall
test
xor
js
cs
popa
jae
in
call
out
hlt
repnz
daa
cmp
sbb
xchg
mov
popf
sbb
sbb
or
cld
mov
dec
pop
dec
add
pushf
fimull
pusha
icebp
xchg
aas
jo
test
in
aaa
mov
dec
shlb
lahf
push
push
ret
cmp
jmp
xchg
mov
mov
push
dec
cmp
fildl
push
repnz
and
inc
sahf
xchg
rep
outsl
or
and
rcrl
mov
and
hlt
dec
imul
sbb
cmc
and
push
repz
sbb
rorl
rcll
addr16
bound
pop
add
add
or
aaa
mov
outsb
lret
imul
outsl
mov
pop
or
jo
mov
clc
jl
cmpsb
inc
xor
sub
sub
xchg
cmp
jmp
fnstsw
push
ja
inc
pop
mov
add
sbb
cltd
sbb
stos
insb
mov
pop
loop
iret
roll
pushf
arpl
lret
notl
test
inc
sub
subl
mov
movsl
das
mov
popf
xchg
mov
in
cmp
dec
aad
das
std
jae
push
adc
enter
stos
movsl
cmp
pop
inc
inc
insl
mov
and
aaa
or
pop
int
movsl
mov
in
jp
subl
ret
ss
xor
push
jge
mov
add
rorb
mov
and
xchg
push
es
inc
es
adcb
ds
inc
bound
jo
mov
jle
notb
cmp
outsb
movsl
imul
xchg
loopne
loope
test
in
jecxz
mov
jns
pop
push
inc
stos
in
test
outsb
cli
sbb
pop
subl
mov
cmp
in
out
loope
cwtl
xor
jae
in
jg
ja
lds
dec
jp
inc
insl
adc
fdivrs
xchg
in
incl
xor
xchg
ficomps
vmovddup
mov
fistpl
dec
jbe
mov
push
add
lahf
and
push
shl
mov
loope
cli
xchg
mov
pop
aam
sub
push
out
mov
mov
int3
leave
fnsave
inc
int3
cmp
sbbl
pop
cli
xchg
adc
imul
gs
aad
jle
xor
les
movsl
ffreep
dec
pop
das
inc
loopne
lea
mov
lret
cmc
aaa
aas
dec
test
mov
in
inc
iret
push
fimull
push
adc
lcall
adc
push
enter
sbb
cli
enter
pusha
jg
mov
mov
push
push
arpl
or
sahf
shrl
rol
add
jmp
inc
mov
mov
int
test
add
cmp
push
cld
pop
clc
imul
sarb
xchg
fsubrs
sti
mov
adc
add
or
adc
mov
rolb
test
pusha
sbb
and
jnp
fisttpl
and
psubw
push
cmp
pop
lock
cmpb
aad
lahf
shlb
and
xchg
xchg
dec
outsl
push
dec
mov
and
xchg
mov
lds
rcl
aad
mov
popf
inc
stos
aas
mov
xchg
mov
mov
aad
add
ja
mov
iret
xor
inc
push
imul
add
cli
dec
add
scas
cmp
out
adc
int3
adcl
xor
test
test
sub
mov
mov
inc
sub
cmpsl
inc
add
push
fidivrl
add
jns
xchg
shlb
add
insl
push
in
jl
sbb
test
cwtl
mov
xchg
ret
mov
imul
lea
es
test
pop
xchg
jmp
idiv
or
bound
mov
scas
test
inc
cmp
xor
cmc
mov
push
movsb
sub
sbb
and
mov
cmp
cld
pop
out
sub
ficoms
mov
lret
subl
xor
mov
ds
jp
int
adc
add
clc
pop
ja
ficoml
bnd
sub
cmpsb
je
fucomi
addl
add
int
mov
jo
mov
lods
jl
mov
movsl
scas
mov
enter
outsb
adc
push
sub
jl
xchg
sub
test
push
aas
push
dec
sahf
loopne
je
stos
in
lods
jne
lods
icebp
jne
xchg
sti
xlat
fcompl
mov
push
inc
pop
inc
rcl
std
movsl
pop
sbb
mov
jp
in
fsubrl
or
mov
push
mov
loope
cltd
fwait
dec
into
dec
clc
jecxz
push
jg
adc
mov
lods
idivb
sub
push
push
daa
add
push
xchg
mov
mov
fsubrs
popa
js
daa
insb
mov
cld
mov
lods
xchg
adc
popa
insb
out
pop
dec
addr16
mov
jne
pop
sub
mov
add
and
les
mov
mov
into
xor
je
push
popa
mov
cmp
out
pop
out
ljmp
int
ret
cmc
pop
push
cmp
mov
movsl
adc
cmp
mov
arpl
sti
dec
cmp
add
pop
adc
xorb
jecxz
xor
in
popa
fwait
cmp
pop
push
std
and
lcall
jnp
or
push
fcompl
cltd
cli
fmull
jmp
inc
push
ljmp
sahf
out
sbb
cmc
js
and
dec
inc
sarl
repz
xorb
test
test
mov
idiv
out
sahf
rcll
nop
adc
loop
out
hlt
test
sub
adc
insl
js
aad
cli
ljmp
fldl2t
xchg
xchg
sbb
jbe
scas
loop
adc
push
nop
cld
add
push
xor
popf
mov
cmp
and
xchg
fidivrs
pushf
jge
mov
pop
sub
push
xchg
test
adc
ds
xchg
inc
mov
sub
test
imulb
sub
dec
push
nop
push
add
sub
mov
pop
inc
in
jmp
and
outsl
and
addr16
dec
fwait
xchg
add
cmc
or
pop
mov
iret
adc
lcall
sub
or
pop
daa
xchg
testl
test
lods
xor
sub
popa
jge
push
int3
cmp
mov
outsl
push
push
push
mov
mul
movsb
mov
scas
push
cltd
cltd
cmc
push
push
rcl
push
jnp
jnp
repnz
pop
push
fiaddl
scas
aaa
xorl
sti
cmp
das
aas
ror
scas
fwait
push
imul
sahf
lcall
fcmovnb
inc
jae
inc
mov
mov
gs
push
dec
pop
sbb
aad
in
mov
aaa
shrl
fwait
stos
fdivl
scas
lds
outsl
inc
hlt
add
test
sub
add
mov
fisttps
mov
mov
mov
rorl
scas
inc
rcl
bound
sbb
mov
fwait
in
jno
hlt
jl
loop
push
push
sti
sub
repnz
insl
ljmp
mov
out
and
push
sbb
jae
outsb
dec
aaa
pushf
sub
push
cld
push
out
rcrl
jnp
int3
sub
xor
sbb
outsl
lahf
jno
loop
cltd
fdiv
adc
adc
pop
repz
mov
inc
or
cmpsb
mov
push
sbb
mov
in
inc
jecxz
mov
notl
fwait
pop
cmpsl
push
lahf
shr
leave
jmp
sub
nop
jle
pop
pop
push
loop
xchg
xor
add
sbb
in
jmp
xor
add
mov
xor
test
arpl
push
jae
sbb
push
test
addr16
jge
insl
imul
pop
pop
shl
inc
jge
lea
push
xor
test
loop
loope
adc
int
or
ds
mov
stos
insb
mov
movsb
and
inc
or
sbb
repnz
repnz
lahf
ret
fdivrs
sti
sbb
subb
inc
sbb
mov
xchg
mov
sbb
xor
je
test
add
addr16
out
scas
inc
loope
xchg
in
pop
gs
and
ret
push
imul
cmc
cmp
cwtl
xchg
daa
add
dec
aas
ds
dec
add
inc
ja
xor
add
outsb
cmp
mov
fstl
jb
mov
pop
xor
cmp
jle
mov
xor
pop
pop
dec
adc
dec
xchg
push
jb
pop
push
add
pop
mov
cltd
mov
outsl
and
int3
loope
negl
sbb
lea
pop
imul
adc
rol
inc
mov
sbb
dec
scas
out
mov
xchg
push
sbb
stc
mov
fldl
push
jnp
and
fildll
sahf
std
adc
inc
adc
xchg
daa
inc
xchg
or
xchg
jmp
xchg
cmp
addr16
addb
aas
ret
inc
or
shl
add
xchg
jae
xchg
inc
ds
mov
add
mov
mov
test
popa
fidivrl
mov
andb
in
inc
dec
es
push
fwait
jmp
aaa
jle
jbe
push
adc
movq
mov
out
call
cwtl
mov
pop
push
inc
cmpsl
aam
sub
stc
lahf
loope
lock
fwait
jns
aaa
in
mov
cmp
add
xor
sbb
les
jns
out
pop
daa
inc
mov
inc
daa
ret
mov
jo
scas
and
jbe
movsl
pop
insb
add
xor
push
test
leave
lret
xor
gs
enter
lcall
imul
icebp
movsb
jo
pop
pop
xor
out
pop
imulb
adc
push
inc
sub
cwtl
adc
loope
mov
mov
xchg
dec
mov
mov
jmp
adc
xor
out
popf
pop
bound
jne
imul
pop
cld
stos
insb
add
jo
int
divb
mov
adc
mov
stos
adc
xor
xchg
add
inc
sub
xor
fwait
enter
jl
sub
push
sub
mov
aam
pushf
insl
and
mov
cmpsb
lret
pop
push
rolb
cmpsl
push
push
insb
cmp
mov
sbb
xchg
nop
inc
mov
inc
imul
xor
xchg
jg
pop
dec
push
mov
ds
dec
inc
xor
nop
leave
or
jp
int
aam
scas
aad
adc
data16
adc
mov
daa
mov
push
scas
adc
or
test
sub
push
into
mov
jge
cltd
popa
adcl
into
fwait
stos
jnp
std
js
mov
cmpb
inc
stos
aaa
movsb
bnd
loop
scas
adc
xchg
push
cld
pop
sub
xchg
push
mov
movsl
xlat
and
shrl
les
pop
cmp
mov
xor
test
sti
push
cs
in
inc
push
push
sub
add
pop
pop
dec
scas
push
and
icebp
divl
mov
ss
and
mov
cmpsl
dec
out
mov
adc
cld
mov
outsb
rol
pop
mov
bound
addr16
aad
stos
cmp
mov
aam
and
add
pop
push
insb
ss
insl
adc
xlat
nop
fsubrl
mov
in
push
call
gs
mov
lock
pop
and
test
mov
lods
fmull
jp
dec
test
adc
or
add
lret
out
mov
add
insb
js
jecxz
pop
jbe,pn
cmp
fisttps
mov
shll
pop
sbb
push
jg
push
or
outsl
pushl
adc
jmp
mov
push
pusha
cmp
mov
mov
in
cmp
data16
jnp
inc
pop
into
mov
and
xchg
icebp
stc
xor
sbb
lds
popa
xor
aad
jbe
lret
mov
and
mov
stos
and
pusha
aaa
push
jl
test
ret
fs
push
dec
mov
push
add
mov
stos
test
out
push
rorl
xchg
outsl
xchg
xlat
imul
cmp
jns
mov
add
pop
mov
popl
out
or
out
lock
lods
popf
lret
pop
mov
jno
xchg
lods
fidivrl
shl
stc
adcl
in
dec
mov
hlt
js
insb
das
lahf
aam
jle
aaa
enter
filds
jmp
cmpsb
cltd
test
add
ljmp
jnp
jno
sbb
push
popf
cld
loopne
lock
shll
pop
lock
ret
movb
clc
test
add
movsl
xchg
xor
pushf
inc
lahf
rcrb
scas
leave
lock
das
mov
lcall
subb
adc
int
push
mov
icebp
inc
jg
aas
loop
dec
xor
pusha
dec
dec
xchg
adc
scas
mov
xchg
mov
outsl
cmp
push
sti
je
lcall
add
add
mov
adc
sub
mov
lods
push
pushf
cmp
jg
mov
sbb
xor
mov
mov
xchg
mov
es
std
pop
xchg
push
aam
inc
rcr
push
sub
scas
sbb
aad
pop
cwtl
xchg
pop
aas
mov
push
orb
adc
mov
sbb
cli
sbb
fsubrs
lret
dec
cmpl
mov
aad
cmpb
pop
pop
nop
pop
out
into
mov
sbb
popl
inc
lock
push
lods
xor
mov
inc
stos
pusha
and
sahf
mov
ret
jg
sbb
outsl
mov
repz
push
cmp
mov
mov
mov
icebp
cld
frstor
jnp
xor
gs
aad
loop
cld
inc
inc
sbb
aad
xchg
adc
or
pop
add
xchg
mov
sar
mov
in
js
jno
sub
sbb
ret
icebp
sub
pop
ficomps
shll
pop
mov
jne
test
imul
sbb
iret
into
inc
pop
and
movsl
and
loop
adc
loop
repnz
div
mov
xor
mov
jecxz
cmp
fs
sub
or
push
cwtl
jae
cmp
and
lods
push
mov
xor
in
mov
mov
mov
pop
cltd
lret
and
shrb
out
or
xor
dec
insl
out
in
rcll
stos
pop
xchg
or
cmc
xchg
adc
out
sub
push
jno
and
push
cmpsb
adc
push
inc
imul
push
test
cmp
outsl
dec
jge
xchg
push
enter
ljmp
xor
mov
adc
mov
nop
imul
je
push
faddp
pushf
push
push
lcall
xor
pop
or
pop
aam
and
data16
mov
imul
cli
mov
sbb
xor
inc
mov
fdivp
ljmp
lock
pop
mov
jo
fwait
jno
cmp
sub
cmp
sbb
div
addr16
mov
in
and
push
insb
rorl
je
inc
fbstp
mov
fs
jae
outsb
mov
xchg
dec
inc
push
adc
push
and
sbb
adc
lret
negb
test
out
sbb
ret
push
xchg
xor
jecxz
sbb
js
scas
add
test
jecxz
sub
mov
mov
movsb
loopne
popa
leave
inc
mov
push
aaa
mov
repnz
mov
cltd
ss
xchg
int3
pop
jg
scas
lock
mov
push
dec
mov
push
xor
cmp
add
xor
bound
sbbb
psrad
jo
or
cmp
mov
arpl
pop
pop
shlb
lods
test
std
inc
aas
hlt
scas
aas
dec
lds
imulb
jo
dec
icebp
fldt
in
cmp
call
lods
mov
mov
and
sbb
mov
dec
dec
cmp
test
aam
pxor
loopne
mov
pop
ss
inc
gs
mov
mov
adc
sub
jo
imul
mov
cmp
repz
push
cmp
fcoml
sub
mov
mov
mov
sahf
dec
std
sbb
cwtl
sub
cmp
cmpsl
fcmovu
mov
add
push
xchg
out
mov
mov
daa
xor
je
fwait
pop
hlt
es
mov
pop
pushf
sub
inc
stos
es
inc
jne
xor
scas
repnz
mov
clc
dec
xor
xor
call
or
adc
jns
mov
cwtl
stos
fs
add
xorb
push
and
loop
je
shrb
and
xchg
xor
push
pop
add
movsb
shlb
arpl
fidivs
jbe
out
test
andb
clc
mov
jl
sbb
xor
mov
imul
push
dec
lock
loopne
or
pop
test
in
add
lods
testl
out
mov
leave
dec
es
test
adcl
lods
into
fnsave
orb
mov
pop
es
jne,pt
popa
xchg
lock
push
aas
arpl
ss
nop
rol
sti
sub
xor
jno
adc
pop
xor
xchg
mov
in
lods
pusha
rcll
rol
jle,pt
xchg
js
test
arpl
lret
lret
add
cmp
xchg
repnz
into
cmpsl
push
add
push
or
dec
lea
sti
loopne
sahf
jp
jmp
add
sub
or
push
xchg
aas
lret
mov
sub
mov
xor
insl
cmc
xchg
insb
in
enter
sbb
dec
fstps
rcr
jmp
mov
xor
cmpsb
and
cmp
lcall
and
xchg
pushf
pop
imul
cld
rorb
test
xchg
popa
mov
mov
and
push
xchg
int
js
cmpsb
pusha
test
sub
mov
inc
cli
btc
lods
cli
mov
out
dec
xchg
into
cmpb
jae
scas
ret
movsb
shl
lods
cmp
pop
push
lahf
jecxz
leave
stos
fisttpll
adc
leave
stos
flds
jle
sub
stos
andl
push
sub
pop
insl
je
in
sub
enter
xor
jle
shlb
testl
dec
scas
cmp
add
xor
andl
ds
das
or
xchg
dec
add
xor
repz
and
into
cli
pop
xchg
add
inc
fxch
sub
add
inc
test
sub
aam
jmp
ficoms
imul
jmp
jae
shlb
mov
rcrl
and
imul
pop
push
jecxz
nop
cmp
sti
dec
shrl
loopne
incl
inc
addr16
mov
xchg
int
push
add
fidivrs
mov
cs
sbb
adc
arpl
stc
aas
movsl
and
jge
js
xor
out
sub
es
sbb
iret
test
test
lds
mov
xorb
mov
mov
pushf
aam
mov
mov
push
xor
fadds
popf
dec
mov
xor
inc
loop
cltd
std
cmpl
xchg
hlt
test
test
in
or
dec
lods
pop
out
leave
imul
cmp
push
xchg
jne
stos
xchg
xor
cwtl
push
lods
repz
jmp
xchg
mov
xchg
cwtl
mov
rcrb
ds
fisubl
pop
dec
sub
mov
push
dec
rcrb
neg
adc
jbe
and
or
and
aaa
sub
jge
imull
mov
cmp
mov
cltd
ror
push
xchg
mov
push
xchg
pop
xor
jmp
mov
sub
xor
mov
sub
shr
inc
xchg
call
fucomi
fwait
adc
sub
mov
sbb
push
mov
inc
jl
xor
mov
xor
jg
xlat
cli
cld
aas
mov
mov
adc
shll
mov
dec
fldenv
adc
fcomi
adc
xchg
inc
adc
sub
push
daa
loop
fisubrs
lds
xchg
dec
and
iret
sahf
adc
jp
sti
addb
and
cmp
insb
mov
cwtl
call
imul
push
int3
xor
cmp
dec
xchg
dec
sub
and
dec
push
cs
adc
stos
ret
cmp
lock
sub
jae
popa
adc
insl
sbb
lcall
test
ljmp
or
pusha
xchg
nop
xor
push
lock
pop
jg
pushf
mov
xor
rdpmc
das
loop
dec
cmp
sbbl
xchg
inc
adc
ss
dec
dec
inc
in
dec
jbe
adc
mov
lcall
xchg
loopne
idivl
clc
out
pop
cwtl
sbb
or
xchg
inc
push
aad
shl
mov
cmp
out
add
test
sbb
push
xchg
in
cmpb
or
insl
jae
push
mov
in
data16
in
add
adc
enter
das
into
scas
aaa
adc
mov
out
aam
enter
dec
xlat
xor
sub
outsb
testl
sbb
sub
fwait
bound
add
sahf
ret
inc
push
cwtl
imul
pop
fucomi
arpl
mov
out
ljmp
xchg
daa
add
xor
aaa
pop
addr16
out
cmp
adc
cmp
inc
mov
fldcw
mov
dec
js
sbb
lock
test
and
cmp
mov
enter
jb
hlt
jnp
mov
aas
dec
out
adc
sbbl
xchg
cmp
rep
fnstenv
popa
imul
dec
add
jnp
scas
xchg
sbb
test
xor
outsl
lret
sbb
pop
stos
xor
dec
nop
mov
add
push
ret
fsubl
fucomp
xlat
adc
add
mov
adc
imul
fisubs
xor
dec
mov
or
shlb
gs
push
xlat
pusha
hlt
js
repz
xchg
test
aad
popa
hlt
jnp
push
and
sub
movsb
hlt
mov
xchg
jns
sbb
std
xchg
shlb
inc
lahf
aad
in
mov
xor
in
imul
xchg
pusha
fs
mov
add
jo
cmp
xor
push
pop
test
clc
or
or
inc
lcall
outsl
mov
cltd
aaa
mov
inc
push
xlat
mov
mov
push
fildl
lock
pop
mov
or
ficomps
mov
cs
add
out
jmp
roll
inc
mov
iret
insb
sub
jno
pop
push
jmp
adc
pop
mov
xor
std
cmp
mov
pop
add
sbb
and
sub
mov
nop
cmp
adc
mov
jle
mov
mov
les
mov
ljmp
pop
inc
cwtl
mov
ds
lret
or
jg
jecxz
fcmovne
mov
mov
out
mov
lods
clc
mov
jne
jo
cltd
inc
outsb
push
and
push
mov
lret
push
pop
movsb
push
sub
shlb
inc
mov
pop
push
test
nop
mov
inc
and
push
mov
stos
pop
mov
jnp
in
mov
popa
in
mov
mov
outsb
add
sub
mov
mov
sahf
fimull
xchg
repnz
out
cmc
xor
jnp
out
addb
lahf
xchg
and
mov
rol
cld
mov
lret
xchg
and
pop
cmp
dec
mov
stos
ror
sahf
sahf
out
jno
push
andl
mov
mov
or
mov
nop
sbb
cwtl
fcompl
cli
pop
push
repz
cltd
add
stc
jg
xchg
js
pop
sub
enter
fcomps
dec
and
dec
push
dec
repz
or
push
aad
ret
mov
fcom
jmp
fisttps
xchg
int
dec
bnd
into
hlt
xchg
testb
loopne
mov
sarb
sbb
scas
scas
jo
adc
fcmovb
test
lret
push
rep
mov
in
in
push
aaa
and
jno
mov
mov
pushf
loopne
pop
out
ficompl
shlb
mov
mov
dec
mov
cs
imul
outsb
adc
jo
inc
decl
mov
mov
push
scas
add
aas
lret
cld
es
and
shll
lahf
adc
outsb
jge
decb
jecxz
sub
jo
pop
xor
repz
xor
das
test
mov
imul
jmp
aas
ret
lret
inc
scas
xchg
jb
fmuls
mov
or
mov
push
adc
dec
xor
in
shrl
orb
test
inc
lret
jecxz
cltd
sub
lret
das
sub
out
mov
push
adc
sbb
push
sar
outsl
xor
call
sbb
test
js
mov
test
out
push
shrb
adc
test
jmp
mov
add
stos
in
sbb
pop
jmp
xor
push
divl
andb
push
mov
and
and
sbb
mov
fidivl
aas
cmc
rorl
xchg
les
push
decb
jl
enter
nop
fimull
fadds
add
aas
sarl
or
or
rolb
call
test
inc
jge
out
fbld
xor
rclb
xchg
and
sbb
push
push
push
jo
xor
scas
dec
cmp
pop
mov
jmp
xor
movsl
popf
push
xchg
cmp
add
cs
jmp
jne
int
sub
cmp
jl,pt
add
sub
lods
flds
xor
and
aas
out
popa
xor
cmp
xor
ja
mull
orb
ss
decb
sub
movsb
insl
and
repz
enter
or
jp
mov
inc
sbb
cmpsl
test
ret
jp
cmp
mov
push
lea
das
pop
mov
out
cmp
stos
add
cmp
mov
cs
add
jge
jo
mov
lds
sub
mov
or
loopne
inc
decl
mov
mov
lcall
pop
jo
loop
cli
and
arpl
test
jne
mov
aad
fwait
lea
fimuls
into
test
pop
cmp
xchg
mov
mov
dec
scas
inc
lret
mov
cmp
cmp
sbbb
inc
fadds
data16
ret
mov
lahf
movl
sub
and
jae
in
jb
fcmovbe
push
sub
xlat
xchg
cmp
jecxz,pn
std
inc
mov
mov
jle
in
mov
xchg
shl
fisttpll
nop
loopne
ret
pop
mov
int3
push
jmp
sub
sbb
mov
inc
icebp
shll
hlt
xchg
adc
adc
repnz
and
jle
mov
pushf
sahf
push
sbb
outsw
call
xor
addb
jb
inc
cmp
pop
es
mov
ret
add
pop
in
mov
jb
xchg
and
xor
imul
xor
fildll
and
rdpmc
and
inc
ret
pop
adc
stos
or
je
loop
sbb
xor
int
cmpb
dec
xchg
push
idiv
mov
xchg
mov
scas
fimull
in
fistpl
mov
mov
loope
pushf
inc
imul
fidivs
adc
xchg
std
jne
cld
mov
xor
jp
ljmp
inc
scas
jne
or
dec
sti
loopne
push
adc
fstp
push
jno
notl
jp
push
daa
dec
lds
ret
cs
andb
in
out
fnstenv
movsb
push
dec
dec
aaa
xor
repnz
cmp
xchg
dec
cwtl
cmp
outsl
cltd
shl
xchg
sbb
loope
daa
xor
adc
insl
lds
iret
inc
push
xor
push
mov
cmp
or
sbb
test
lcall
mov
shrl
push
jno
test
inc
push
sub
sbb
shll
or
loop
aaa
push
adc
out
test
jns
hlt
stos
cmp
mov
test
xchg
aas
nop
pop
add
jle
push
push
cs
daa
addr16
insb
jne
add
clc
icebp
scas
out
add
imul
mov
adc
or
cs
xor
add
je
fdiv
jnp
lea
cltd
push
cs
inc
xchg
in
xchg
or
enter
fists
leave
cwtl
adc
mov
sub
xor
and
mov
data16
pop
popf
sub
cmpsl
mov
mov
xor
ds
repz
test
call
les
jl
in
mov
in
lahf
add
and
push
xchg
mov
jnp
out
inc
mov
lsl
les
sbb
xor
dec
xor
adc
jge
adc
jno
nop
jns
faddl
mov
lret
add
push
insb
vmovsd
push
pop
mov
mov
adc
push
mov
in
pop
pop
mov
push
and
sbb
mov
xlat
sbbb
je
mov
xchg
cmp
adc
and
cmp
inc
mov
mov
es
xchg
cld
je
jl
push
adc
sub
in
mov
mov
mov
push
das
mov
hlt
test
and
vpcmpgtw
fsubr
scas
mov
jbe
adc
dec
out
mov
xor
dec
mov
in
pop
sub
movsl
lcall
cwtl
jl
sub
sbb
lea
seta
jno
push
cld
out
mov
pop
jmp
andb
pop
hlt
jns
cmp
cmpsl
push
pusha
sarl
pop
or
dec
cld
xor
inc
and
sbb
movd
sbb
loop
out
or
andb
xor
hlt
mov
dec
or
and
out
shrl
ss
push
test
fs
dec
push
clc
push
inc
iret
add
sbb
out
ds
mov
sbbb
enter
xchg
out
nop
jmp
cli
cmp
fnstenv
insl
mov
leave
test
lahf
jmp
ljmp
insl
sbb
pop
jle
fbld
jno
stc
bound
push
push
jecxz
cmp
push
out
test
mov
sti
ss
mov
lcall
orb
xchg
add
les
push
adc
lds
sub
lahf
xchg
pushw
ret
cmp
cmp
and
xchg
lds
xchg
lock
cwtl
push
popa
cltd
out
cli
dec
xor
and
push
pop
adc
or
push
sub
out
mov
push
into
inc
inc
insl
out
jp
cmp
arpl
stos
add
xor
mov
jmp
fdivrs
cmp
mov
mov
pop
fisttps
pcmpeqd
add
addl
aam
mov
outsb
sub
iret
xor
xchg
lcall
pop
sub
cs
dec
test
push
sbb
fistps
nop
and
pop
call
sbb
xor
fcmove
sub
and
fsubrl
inc
fwait
lcall
xor
mov
cmpsb
adcb
pop
negb
sub
fsubr
in
xchg
loope
mov
inc
nop
shlb
repz
xchg
xchg
mov
inc
cwtl
in
fists
outsl
out
cmpsl
and
ss
rcrl
lret
pop
mov
ljmp
cmp
cmp
imul
repnz
lea
sbb
int
lret
adcl
mov
arpl
fwait
in
mov
dec
mov
movsl
fiadds
js
xchg
shll
push
mov
decl
sbb
xchg
enter
add
insl
testb
rorl
and
stos
push
repnz
hlt
sub
cltd
fisubs
or
mov
fidivs
shlb
inc
ja
xchg
leave
popa
push
enter
cmp
inc
dec
fdivl
inc
cmp
mov
ficompl
movb
in
pop
in
lret
out
ss
lahf
or
outsb
add
sbb
and
mov
stc
mov
dec
pop
or
into
inc
nop
idiv
and
popf
xor
pop
cmp
leave
test
mov
jl
loopne
imul
ss
xchg
testl
dec
inc
icebp
sti
shlb
sbb
inc
add
dec
dec
xchg
cli
popa
rorl
ret
adc
in
rorl
xor
inc
mov
in
cwtl
hlt
nop
mov
push
int3
fildl
xchg
in
arpl
int3
ljmp
sbb
inc
jp
ja
mov
stos
jbe
insl
ljmp
jle
pop
push
ret
pop
fnsave
adc
or
add
in
or
lcall
inc
dec
mov
mov
xorb
leave
lret
jae
xchg
adc
ret
xchg
ljmp
arpl
into
out
push
or
out
outsl
leave
jmp
mulb
call
pop
fs
repnz
fucomp
sbb
mov
shr
pushf
aaa
sarb
mov
in
pop
dec
jge
and
and
cli
popf
adc
xor
fiaddl
mov
fs
adc
push
in
aas
dec
jae
fcmovu
adc
pop
mov
cmpsl
aaa
cli
or
xchg
enter
fs
nop
mov
out
sbb
or
mov
int
sbb
jae
in
push
scas
or
movsb
cmp
mov
sub
int3
xchg
je
rep
xor
push
loope
lret
icebp
adc
lcall
mov
and
mov
rolb
jno
pop
xchg
jmp
push
mov
andl
dec
inc
sub
shlb
je
sub
repnz
adc
dec
scas
das
mov
in
and
idivl
push
push
xor
test
out
add
or
sahf
aaa
insl
in
stos
jmp
mov
fildll
dec
cli
dec
stos
add
rclb
or
pop
cmc
daa
push
or
mov
cld
in
lcall
dec
test
mov
sub
cmp
cwtl
push
mov
pop
loope
push
sub
and
xchg
add
mov
or
sub
jmp
jb
out
xchg
mov
jb
arpl
jle
xchg
sbb
jmp
jge
cltd
pop
iret
dec
mov
adc
andl
repz
insb
dec
cmpsb
shll
imul
cmp
hlt
push
adc
scas
ljmp
clc
dec
lds
mov
inc
sbb
test
xor
lret
out
and
xchg
jg
inc
hlt
les
cmp
fs
inc
sbb
xor
popa
fsubrl
jg
mov
cltd
ss
xlat
test
sbb
push
pusha
pop
flds
jno
sbb
sub
add
adcb
xchg
enter
lret
inc
lea
mov
or
sub
cmp
mov
pop
mov
fildll
movsl
pop
sub
addb
aam
cmp
sub
sbb
mov
repz
xchg
xchg
cmp
mov
adc
outsl
add
jb
aaa
loope
dec
nopl
movsl
xchg
sbb
mov
repnz
aam
and
andb
ret
lods
pop
stc
pop
mov
das
clc
mov
mov
push
cld
jl
mov
test
or
ja
scas
mov
jb
push
add
cmc
sbb
lds
fldl
and
popf
push
fdivl
test
cmpsl
xorl
ds
stos
xchg
call
and
add
or
adc
aad
jne
je
xor
push
push
aaa
push
loop
mov
xchg
ljmp
sti
add
jp
ds
out
inc
xchg
cmp
lea
popa
cmpsl
push
imul
xor
sbb
fwait
bound
out
aam
movsl
push
xchg
ja
pop
sbb
sar
imul
push
sbb
aad
sbb
in
fidivrl
rclb
arpl
add
mov
out
in
add
popf
adc
push
push
mov
xlat
adcl
adc
inc
dec
sub
test
sub
in
mov
lock
inc
pop
push
pop
test
mov
mov
dec
or
in
cmp
imul
in
out
fcmovbe
add
mov
lock
cmpsl
jo
imul
sub
jae
icebp
push
mov
test
cli
daa
call
jae
sbb
sbb
lcall
je
rcrl
sub
mov
xor
ljmp
and
cmp
dec
movsb
add
xchg
ret
lahf
std
fistl
mov
inc
test
cmc
cmpsb
ja
in
jp
xor
push
mov
outsl
sbb
adc
mov
mov
ds
outsb
jecxz
xchg
jns
jo
gs
hlt
jno
and
dec
mov
pop
or
divl
jle
cmp
mov
pop
je
rorb
cwtl
xchg
xchg
sarb
es
dec
fdivs
scas
xchg
mov
es
loop
loop
pop
mov
sbb
mov
cmpsb
lahf
rcr
xor
in
jb
adc
jmp
pop
add
push
filds
jbe
inc
inc
idivl
inc
imul
or
pop
sub
push
and
or
stc
pop
sub
and
mov
cmp
lsl
xor
adc
xchg
and
xchg
les
sbb
mov
sub
jge
sub
xchg
in
push
lcall
cs
xor
sar
xor
cmp
mov
daa
adcb
push
clc
stos
addb
jbe
mov
adc
jmp
or
xor
push
cmp
adc
xchg
mov
in
or
sahf
dec
mov
imul
mov
scas
dec
inc
push
cld
sbb
sbb
fs
jns
jmp
push
mov
enter
mov
and
test
inc
mov
movsb
or
hlt
lock
imul
fisubrl
push
fcmovnbe
and
mov
mov
pop
jae
lock
mov
or
lcall
and
rcrb
cmp
je
stos
mov
rcrl
push
or
cmpb
bound
enter
hlt
mov
in
rorl
add
pop
or
cmp
test
and
stos
out
xchg
mov
sbb
cmpsl
sub
and
test
mov
mov
jo
xchg
cmp
fwait
xchg
or
sub
jnp
jmp
dec
inc
cld
lret
insl
jp
outsl
pop
inc
jae
mov
and
in
repz
jo
mov
add
pop
jge
mov
and
iret
sti
leave
mov
iret
movsl
inc
xchg
jo
loop
push
les
test
les
or
in
mov
loop
mov
mov
pop
mov
incb
sarl
sbb
push
addl
cmp
fiadds
sbb
popf
push
mov
add
imul
and
sbb
imul
movsb
imul
add
movsb
subl
push
jae
sti
add
in
int
pop
mov
push
in
filds
push
or
cmp
xor
std
in
cmp
mov
jno
loopne
xchg
and
dec
jbe
movsb
cmpsl
jns
mov
fldcw
bound
mov
ja
jne
icebp
jl
cmp
add
pop
fldt
jo
and
push
add
dec
dec
jnp
rcrl
adc
test
adc
push
mov
in
jo
add
xor
lock
cs
cmp
sbb
aaa
sti
mov
mov
xor
mov
ja
adc
data16
cmp
bound
addr16
mov
mov
movsl
mov
pop
movsl
sbb
pushf
push
lds
test
mov
stos
test
sti
test
imul
fsub
popf
mov
push
fisubs
psllq
pop
loop
sbb
push
push
jnp
mov
out
sbb
popf
sbb
sbb
sbb
int
pop
leave
nop
push
mov
aaa
add
out
mov
and
jnp
leave
int
call
dec
adc
add
in
sub
repz
daa
out
cld
clc
sub
pop
mov
shll
icebp
stos
cld
fcoml
adc
xchg
mov
inc
jmp
gs
or
lahf
mov
jge
pop
adc
pushf
mov
pusha
pop
inc
cmp
mov
sbb
icebp
sti
add
sbb
inc
add
mov
ret
push
xor
out
cmpsb
mov
stos
cmp
cmp
loopne
and
jmp
pop
push
xor
mov
xchg
nop
fwait
in
mov
daa
arpl
ret
inc
out
repnz
add
out
push
push
and
push
aas
jle
mov
call
in
insb
mov
test
stc
leave
xchg
xchg
adcl
or
lret
or
je
mov
gs
orb
sbb
cmc
lock
es
aad
push
stc
mov
test
lcall
jns
outsl
loopne
hlt
add
add
inc
clc
adc
in
mov
scas
decl
mov
jbe
mov
fisttps
orl
lock
daa
xchg
mov
into
ret
movl
arpl
xorb
add
sub
rol
sbb
inc
ljmp
inc
lea
cmp
lea
xchg
pop
jbe
or
adc
dec
lods
dec
mov
mov
es
inc
xchg
sti
imul
pop
inc
jg
sub
cld
std
mov
xlat
cs
lds
rcrb
lea
repnz
out
loopne
mov
fidivs
jbe
mov
dec
lds
fistpl
jmp
cwtl
pop
lds
xchg
inc
mov
mov
inc
jecxz
mov
js
aam
cmp
jge
enter
test
push
lahf
sbb
enter
cmp
lcall
into
inc
sbb
xchg
xor
dec
das
in
movsl
adc
xor
fs
cmp
lds
lahf
leave
in
xlat
cltd
rcll
xor
stc
mov
mov
pop
mov
jecxz
mov
test
xor
imul
push
or
into
addl
or
imul
mov
inc
and
enter
cmc
aam
dec
cmpsl
mov
xchg
mov
dec
cmc
loopne
sub
add
jg
jecxz
jp
pop
dec
pop
or
cmp
inc
mov
pop
rolb
xor
aaa
insl
pop
xor
aaa
imul
xlat
stos
in
xor
sbb
and
xchg
int
addb
push
cld
push
lret
lahf
lahf
cmp
arpl
push
mov
inc
test
jp
fbstp
sbb
test
sahf
jle
or
call
jo
dec
xchg
add
xchg
or
fwait
pop
out
mov
sahf
dec
inc
sbb
mov
fadd
mov
aad
aas
sbb
mov
movsl
and
xorl
push
test
mov
xchg
cmp
xchg
popa
cltd
into
pop
jg
jmp
jg
inc
jo
jnp
pop
pop
outsl
sbb
gs
sbb
push
pop
pop
iret
movsb
ret
loopne
vzeroall
cs
loope
iret
sbb
push
xchg
push
mov
stc
sbbl
iret
and
jp
shll
jns
inc
in
imul
scas
subl
loop
pop
pop
in
fwait
es
jle
lods
dec
data16
or
aas
icebp
or
nop
lds
xchg
cwtl
int
dec
adc
out
lret
fwait
mov
ficomps
mov
xchg
jl
roll
movsl
sbb
fsubrl
scas
cmp
ss
add
fsubr
inc
dec
cs
cmpsb
pop
movsl
xor
shlb
out
imul
fisubrs
out
clc
cltd
addr16
cltd
dec
pop
pop
sub
popf
mov
push
push
sub
xor
in
sahf
fisubrl
add
out
pop
xor
lds
fcmovnu
dec
adc
insb
add
and
jp
insb
faddp
dec
movl
sub
and
pop
mov
loop
popa
and
dec
mov
dec
inc
sbb
out
push
cmp
pop
lea
out
aad
add
push
and
arpl
movl
js
dec
push
dec
adc
scas
mov
insl
add
jp
pop
jbe
pop
add
xchg
jle
dec
add
movsb
mov
or
das
mov
in
popa
mov
js
fildl
dec
test
push
jo
fstl
jbe
cmp
adc
dec
scas
sub
mov
cmp
dec
cmp
cltd
sbb
in
popf
inc
jle
push
pop
jne
ror
adc
aam
cmp
push
scas
dec
jl
inc
pop
mov
hlt
sbb
add
push
outsb
xchg
in
mov
inc
clc
jno
fsubr
xor
lret
or
xor
xchg
push
inc
jae
inc
xor
lahf
cmc
adc
sbb
add
dec
sbbb
das
lcall
pop
test
je
es
lods
scas
or
add
pusha
out
dec
mov
or
xor
popa
xchg
ds
dec
sub
sbb
push
in
popa
aas
dec
jno
pop
repnz
das
ret
jne
jo
movb
shll
jg
dec
and
sbb
fnstsw
inc
inc
shlb
cmc
dec
sub
pavgw
arpl
mov
xor
xor
or
mov
in
scas
add
aam
mov
iret
cmp
mov
test
adc
mov
xchg
xchg
xor
cmp
lcall
test
or
mov
dec
leave
push
mov
xchg
enter
movsb
cwtl
or
inc
mov
xchg
pop
mov
xchg
mov
push
sbb
dec
ret
xchg
xchg
test
outsb
mov
fisttpll
add
push
adc
push
xchg
outsl
cmp
mov
or
leave
pop
jb
sub
mov
cmpsb
ret
call
daa
jge
gs
mov
jns
testl
push
xchg
sub
sbb
stos
test
andb
lea
xchg
xchg
mov
popl
jb
push
push
lcall
cmp
jb
cmc
clc
dec
rcl
push
ss
mov
push
adc
cmpsl
into
ror
je
inc
fimuls
lcall
add
mov
icebp
outsl
mov
push
shr
mov
and
sub
imul
jge
inc
jecxz
cmp
mov
push
leave
jb
idiv
lock
dec
aam
xchg
mov
push
pushf
inc
push
adc
pop
das
lret
cwtl
adc
out
dec
or
rorl
loope
mov
and
lret
insb
mov
into
movsl
cli
stos
sbb
or
addr16
sbb
xor
add
and
jne
cmp
fsubrl
jnp
jnp
lds
cmc
cmp
mov
mov
es
inc
rcll
in
sbb
ja
mov
jg
jne
and
pusha
xchg
fsts
and
mov
mov
pop
cmp
mov
test
or
les
xor
fs
mov
adc
mov
mov
pop
sti
imul
sbb
cmp
or
mov
cwtl
cmp
xor
sub
or
test
mov
fnstcw
clc
loope
xchg
loop
or
ljmp
in
push
movsl
test
fidivs
ljmp
jne
scas
mov
cmpsb
xor
adc
sbb
ret
xchg
mov
mov
incl
sub
mov
jp
sbb
dec
pop
push
dec
mul
stc
mov
lock
hlt
out
pop
int
mov
in
icebp
mov
jecxz
and
shlb
mov
in
stc
or
sub
mov
jb
cmp
out
dec
mov
and
dec
in
or
dec
add
stc
lock
sbb
fnstsw
jnp
mov
or
pop
push
cwtl
icebp
push
push
sbb
xor
jge
adc
ret
loopne
mov
dec
scas
stc
jge
roll
jl
enter
les
add
cld
mov
mov
xor
pop
mov
aaa
jmp
xchg
mov
push
xchg
fwait
lcall
sub
aam
push
dec
dec
lds
sahf
rol
mov
pop
addl
fmull
shlb
sbb
lcall
aas
out
mov
xchg
and
jbe
push
repnz
mov
mov
mov
mov
out
jo
shll
daa
shrb
push
cli
lea
cmp
je
shll
jge
jg
xorb
int3
cmp
lret
pop
push
mov
push
mov
rorb
bound
arpl
stos
leave
xor
xor
mov
jge
std
stos
adc
add
jne
adc
inc
insb
mov
subl
dec
pop
shll
dec
cmp
push
sbb
stc
fs
mov
sbb
add
pop
jne
cmc
popf
push
je
insl
stos
jmp
push
mov
insl
xor
outsl
dec
stos
and
fdivrl
leave
gs
jg
test
cmp
lea
xchg
jle
aas
sahf
add
pop
pop
cmp
aam
pop
leave
push
outsb
cmp
cwtl
scas
insl
dec
iret
adc
add
or
push
add
sub
mov
out
dec
into
xor
dec
repnz
push
les
dec
push
sbb
xorb
or
addr16
cli
or
filds
jg
push
push
loope
loop
mov
divb
pusha
shll
mov
mov
mov
testb
adc
mov
jbe
pop
aaa
adc
sub
mov
ja
out
sbb
or
outsb
fstpt
inc
rep
lret
lcall
enter
dec
sub
movsb
xor
fs
adc
adc
loopne
inc
sub
inc
lcall
add
ret
scas
dec
scas
xor
xchg
call
nop
inc
insb
jle
js
or
inc
sub
out
pop
out
ja
or
ficomps
mov
mov
ss
push
sbb
lods
jle
loope
mov
inc
adc
or
test
lcall
scas
mov
xchg
ret
or
movsl
sub
mov
mov
enter
js
inc
fisubs
mov
lods
mov
inc
popa
push
leave
or
dec
xchg
in
cmp
mov
adc
stos
jl
pop
dec
movsl
into
movsl
push
mov
lods
movl
sti
lds
xor
xor
je
mov
or
pop
fldt
ja
xor
enter
clc
je
enter
cmp
dec
mov
aas
add
xchg
insl
add
fcomps
mov
mov
dec
xchg
sub
jecxz
movsb
cmpsb
cmpsb
fisttpll
lock
aas
mov
inc
mov
and
cmp
fisubl
das
ss
lahf
pop
cmp
int
cli
ret
fldenv
mov
in
add
in
notb
sarl
cs
push
je
or
push
mov
mov
icebp
adc
or
mov
imul
sbb
popf
sub
rclb
push
shll
cmpsb
sub
mov
push
push
int
insb
cmp
movsb
mov
or
xor
and
sti
test
mov
cld
rcll
fsts
xor
and
cwtl
aaa
enter
mov
xchg
pop
lret
repz
shrb
fistpl
cmp
icebp
ljmp
fisttpl
imul
pop
inc
cmp
loop
inc
out
push
andl
mov
sub
and
mov
jmp
jns
push
sub
dec
xchg
and
int3
stos
stos
xor
mov
push
scas
ljmp
mov
adc
nop
jp
push
lea
push
add
mov
xor
cmp
push
shrb
adc
mov
ficoml
xlat
dec
inc
lret
xor
rcrb
xchg
jnp
mov
cmpsl
roll
shlb
sub
sti
idivl
xor
repz
adc
mov
mov
xlat
sti
cld
mov
sbb
ret
stos
mov
test
jp
push
iret
popl
and
jg
xchg
jg
inc
xchg
and
and
movsb
fildl
jecxz
std
inc
fst
mov
jne
fwait
mov
and
jnp
leave
aaa
adc
mov
lret
xchg
mov
xchg
push
and
pop
mov
popf
mov
mov
xchg
mov
push
test
push
inc
xchg
jb
add
add
jbe
mov
add
imul
or
cld
add
add
and
aad
add
insb
pushf
push
mov
and
out
mov
mov
dec
sub
scas
push
jle
xchg
shlb
pop
push
xor
mov
adc
xor
popf
fdiv
push
lret
adc
insl
mov
dec
inc
or
jmp
pop
dec
push
pushf
bnd
ret
incl
jns
mov
add
dec
and
cli
fwait
jns
sub
mov
xor
pop
ljmp
xchg
sahf
dec
inc
lea
xor
jae
mov
or
push
lret
jb
add
xlat
sbb
arpl
fsubr
test
mov
push
push
adc
sbb
mov
loop
mov
sbb
dec
xorl
sub
inc
jbe
inc
mov
adc
pop
mov
loope
cmp
and
push
call
sbb
push
test
fsubr
add
lcall
mov
lock
testb
and
stc
fistpll
ds
mov
fldl
shl
repnz
fsts
shrl
sbb
cmp
jns
mov
jge
cwtl
pop
push
xchg
lret
fcmovb
adc
ret
pop
sbb
cwtl
cmp
mov
mov
mov
ds
add
in
ret
mov
hlt
ret
in
ficoms
mov
fbld
cmp
xlat
jl
or
cmp
les
ss
in
jae
fiadds
lret
jp
cmp
jno
in
loope
and
negl
into
test
mov
aaa
mov
mov
stos
lock
and
mov
stos
mov
xchg
imul
sbb
add
mov
adc
lods
xchg
mov
lret
movd
inc
int3
add
sbb
pop
mov
daa
sbb
push
jne
mov
jnp
mov
jge
lahf
adc
stos
dec
cmp
cltd
mov
lcall
scas
movsl
lea
fsts
insb
xchg
je
cmp
fwait
es
sbb
popa
mov
imul
cmp
mov
mov
mov
mov
add
add
or
iret
mov
dec
pop
mov
cld
mov
lea
cmpsb
nop
sbb
push
and
arpl
scas
bswap
xorb
push
sbb
pop
cmp
xor
jge
cltd
xchg
xchg
in
in
es
popf
into
mov
or
cmp
mov
das
inc
js
and
sbb
out
cmpsb
pop
nop
mov
sbb
and
pop
fsubs
mov
lock
pop
ss
mov
sub
jbe
xor
ja
add
xchg
jnp
cli
add
lods
mov
sbb
mov
testl
cmp
arpl
sti
push
pop
pop
sub
lret
sbb
and
stos
pop
dec
repz
push
test
fidivs
lods
xchg
aas
arpl
nop
js
fldt
fidivl
out
xor
xchg
push
stos
ficompl
dec
aaa
mov
pop
cmp
scas
insl
cwtl
mov
mov
mov
xchg
lods
xchg
pop
sbb
sar
pop
xchg
cmp
mov
fs
sbb
sub
imul
je
mov
jae
es
enter
pop
aad
mov
popa
mov
and
subb
dec
daa
lea
xchg
std
movb
mov
divb
in
loope
ljmp
out
fdivl
loopne
pop
rcll
test
mov
loopne
loop
repz
pop
sub
mov
xchg
lahf
rcll
cmp
dec
mov
mov
push
push
and
mov
es
add
cmc
fidivrs
orl
add
repnz
or
clc
roll
fnsave
call
fisttpl
jno
mov
push
inc
adc
mov
das
in
movsb
fs
dec
add
add
bound
out
xchg
outsl
mov
icebp
inc
jbe
jp
inc
shr
push
push
jle
outsb
cmpsb
js
sarl
test
lods
lcall
aam
arpl
shr
scas
add
xor
inc
cld
dec
data16
nop
lods
cmp
mov
push
test
and
in
in
mov
jmp
dec
dec
add
mov
or
in
and
js
stos
mov
push
and
fs
outsl
mov
ja
dec
mov
dec
stos
into
mov
loop
lcall
arpl
mov
lods
popf
mov
pop
insl
leave
add
sub
xor
mov
cmp
fstps
pop
ss
in
in
mov
aad
lds
dec
das
cmc
orb
push
outsl
xor
outsl
insb
sub
addr16
cmp
adc
mov
out
pop
xor
repz
xorb
and
inc
shr
into
addr16
push
cmp
xor
sbb
jnp
and
or
fimuls
sub
push
test
xor
mov
hlt
ret
push
push
leave
add
adc
mov
and
mov
gs
pop
jmp
dec
dec
int
sub
jp
mov
iret
loope
cltd
orb
in
fwait
pop
imul
loopne
jp
es
xchg
fidivrl
sbb
nop
mov
pop
lock
inc
or
pop
cld
cmp
adc
mov
imulb
in
cmc
cltd
push
sti
stc
hlt
cmc
xchg
push
add
add
push
es
or
ja
sbb
jbe
out
push
mov
ja
mov
adc
push
xor
call
test
int3
mov
dec
fcmovu
pop
pop
jl
arpl
and
repnz
loopne
jno
adc
mov
jle
jge
fwait
or
pushf
ja
out
push
push
sarb
pusha
call
inc
daa
lret
mov
rcr
push
lods
push
outsb
fists
and
mov
aam
jb
sti
lahf
push
inc
cwtl
mov
scas
out
test
std
add
dec
mov
mov
lock
dec
insl
push
lock
and
sbb
sti
xor
aam
jle
fnstsw
outsb
jb
sub
aam
jmp
outsl
test
cmpsl
adc
aam
push
dec
movsb
das
add
out
push
xchg
pop
inc
adc
fxch
loop
push
call
je
shr
adc
xor
inc
xor
dec
aam
add
out
push
or
bound
inc
dec
xchg
adc
mov
pop
and
sbb
push
xchg
clc
test
testl
sbb
mov
adc
shl
ss
mov
dec
mov
xor
test
int
test
mov
mov
lds
ret
les
stos
stos
and
outsb
lret
jns
in
ss
mov
sbb
cltd
pusha
adc
jle
mov
lcall
aas
jmp
dec
aaa
jmpw
pop
insl
out
in
sbb
push
and
stos
push
and
cs
inc
xor
imul
add
mov
sbb
push
dec
jo
fsubs
fistps
xchg
popf
jl
inc
test
mov
jb
jg
mov
push
fwait
dec
stc
sub
sbb
or
outsl
mov
fisubl
cli
imul
sti
mov
test
xor
jns
std
mov
insb
xorl
sbb
mov
cli
loopne
aad
xor
std
or
out
jge
lock
cwtl
ljmp
lods
out
dec
inc
popa
mov
push
ljmp
adc
adc
lock
notb
add
xor
xlat
ffree
sub
push
out
xchg
xchg
cltd
inc
add
cmc
mov
mov
int3
inc
mov
insb
xchg
fsubrl
insl
jle
lahf
add
iret
arpl
jb
and
dec
mov
mov
pushf
icebp
push
mov
jae
aaa
and
mov
push
loop
or
fsubs
push
inc
fsubs
fmull
adc
ss
psubb
inc
cmpb
dec
gs
lods
cmp
xchg
mov
fwait
mov
cmc
mov
movsl
xchg
sahf
lcall
clc
je
mov
int
mov
iret
xor
mov
scas
push
or
jmp
adc
sti
push
fldenv
pop
xchg
mov
lods
sti
out
and
test
jns
movsl
mov
mov
adc
stos
insl
movsl
fistps
jl
xor
test
mov
xor
rcrb
pushf
sbb
push
adc
out
xchg
insl
lcall
xchg
lea
movsb
cmp
dec
aad
xchg
es
cmp
cmpsb
push
dec
fadd
pop
jnp
int3
push
add
loope
fwait
xor
jae
loopne
sub
pop
leave
cmp
mov
cmp
push
lock
xor
xchg
adc
jp
push
int
leave
and
popf
test
xor
dec
xchg
mov
lea
push
aas
push
xor
adc
clc
fisttpll
int3
mov
lods
jbe
arpl
sub
nop
lret
arpl
dec
es
mov
sti
out
sub
inc
fcmove
jne
lds
push
pop
in
sahf
imulb
pop
xchg
sub
or
push
mov
lea
jge
mov
xchg
shlb
pushf
or
movsl
or
mov
xchg
or
lcall
and
push
cmpsb
xchg
inc
adc
mov
movsb
push
add
add
loope
repnz
mov
shlb
cmc
mov
pop
les
dec
mov
nop
or
cmpl
pop
dec
add
repz
jle
xchg
xorw
js
sbb
int
push
and
out
popa
hlt
dec
out
fistpl
jmp
push
lret
jbe
push
adc
dec
mov
movsl
scas
ret
push
pop
add
cwtl
mov
out
fisubrs
push
inc
mov
cmp
adc
inc
jmp
jp
mov
dec
sbb
mov
ja
lock
xor
shl
cmc
mov
xchg
push
rcr
es
inc
lock
js
sbb
imul
mov
jl
sbb
xor
sti
sbb
mov
daa
jecxz
xchg
js
pop
pop
push
leave
and
lret
mov
ret
out
xor
in
xlat
fcomps
push
ret
mov
aad
sbb
add
fadd
mov
jno
mov
pop
lock
xchg
and
out
or
scas
cmp
xchg
and
outsl
fsubrp
cmp
and
pushl
and
mov
lcall
in
fld
sbb
mov
stos
sub
stos
cli
test
xchg
test
xchg
out
pop
jo
test
rcpps
icebp
xor
es
ja
movsb
stos
pushf
dec
out
scas
mov
repz
pop
mov
push
rclb
sub
dec
or
dec
loopne
pop
xchg
pop
jnp
inc
adc
jmp
lock
mov
gs
pop
cmp
lcall
lea
fistpll
cmc
nop
sub
inc
push
inc
int3
xor
or
jmp
in
push
fldl2t
incl
mov
xchg
sbb
or
push
cmp
inc
rorl
outsl
test
shr
mov
iret
inc
inc
lret
sub
pop
loope
jp
cmc
cmpb
iret
ret
cmpsl
in
add
test
jmp
and
add
push
push
into
add
push
push
or
arpl
sahf
mov
dec
add
outsl
sahf
adc
mov
mov
std
fs
or
pop
pusha
aam
frstor
ficomps
pop
jnp,pn
cmc
ret
test
mov
std
loope
test
jmp
push
imul
or
mov
aas
push
xchg
test
stos
dec
movsb
fcomp
imul
mov
xchg
mov
out
lret
inc
ja
rclb
clc
sbb
std
or
hlt
in
jg
arpl
jecxz
push
mov
fnsave
sub
imul
jge
insb
mov
int
jb
push
xor
test
stos
cmp
lea
outsl
adc
mov
or
jnp
mov
xor
scas
outsl
jno
test
add
ficoms
arpl
fcom
fdivl
push
inc
inc
notb
popf
imul
lret
aas
scas
insl
scas
mov
mov
inc
std
mov
outsl
mov
pop
popa
nop
test
inc
jle
cmp
rorl
xchg
cld
lods
push
imul
adc
inc
lahf
jne
mov
lahf
sti
in
pusha
shr
in
cmpsb
popf
push
outsl
sub
push
adc
push
call
lcall
add
in
rorb
sub
in
scas
jns
addr16
push
test
sbbb
cltd
dec
icebp
ja,pt
sbb
xchg
outsl
dec
jle
add
add
mov
or
cwtl
xchg
add
sub
subl
nop
sub
jo
cmp
mov
int3
sbb
and
sbb
push
add
lahf
int3
xchg
push
ja
shl
in
jbe
movl
fwait
and
imul
bound
push
int3
bound
jbe
add
jbe
mov
imul
mov
lahf
jnp
stos
mov
cli
enter
dec
sub
std
or
add
cmp
out
dec
dec
xchg
push
mov
mov
xor
sbb
cmp
pop
fiadds
xchg
cltd
sub
pop
cmp
xlat
pop
loope
test
addb
clc
pushf
pop
pop
push
jmp
jns
adc
xchg
aaa
and
xchg
popa
xor
outsb
aaa
div
and
imul
add
addr16
shl
mov
cmp
jne
pop
xor
lahf
adc
add
xchg
jno
or
push
sub
inc
into
add
fistps
aam
gs
push
xchg
aad
xor
jno
sub
fcoms
inc
mov
push
xor
and
rcrl
mov
repz
clc
insb
jg
mov
sahf
in
jo
xchg
mov
dec
jge
rcrl
clc
sub
js
xchg
mov
sbb
lret
repnz
fs
cwtl
ret
cmpl
cmp
jbe
cmpsb
mov
out
jnp
jl
or
test
pop
inc
int
cmp
pop
sbb
fistps
cmovl
pop
xchg
fwait
les
xchg
adc
dec
test
mov
out
pop
adc
inc
fdivrl
jg
enter
inc
in
int3
dec
pop
add
lea
std
add
inc
ffree
xchg
sub
mov
and
jb
push
jne
outsb
push
stc
xchg
jo
jne
xchg
mov
sbb
fdivl
in
or
push
lds
aam
jo
sahf
ficompl
push
push
push
lods
xchg
inc
jmp
lcall
push
xchg
incl
push
aad
or
addb
divb
ds
out
sbb
dec
bnd
pop
push
aas
jle
mov
inc
insl
pop
fimuls
push
fs
or
lods
mov
bound
pop
sbb
sub
js
adc
pusha
or
outsl
and
sarb
stos
mov
popf
jne
je
mov
and
ss
dec
mov
mov
xor
inc
sti
xchg
jnp
stc
sub
int
lods
and
cmpsb
cs
outsb
and
decb
mov
mov
dec
fcomi
les
jp
pop
push
inc
push
push
mov
mov
push
inc
loopne
jp
out
fs
fcoml
test
arpl
stos
movsb
sub
mov
xor
faddl
push
xchg
fbld
dec
in
cmp
movsb
push
xchg
mov
repz
jmp
iret
sub
out
jge,pt
xchg
call
fldenv
push
add
push
jae
into
push
test
mov
adc
pushf
mov
scas
add
icebp
es
xor
fnstsw
icebp
call
and
orl
icebp
out
addr16
test
mov
sti
and
adc
mov
mov
faddp
lret
cli
js
ret
test
rcrl
cmp
lahf
pop
lods
sbb
mov
repz
push
cli
call
out
test
lods
lahf
push
gs
mov
sub
scas
xlat
pushf
insl
lods
and
shll
roll
fwait
ss
mov
inc
cmp
mov
mov
xchg
pop
mov
leave
sbb
cli
fs
mov
add
gs
js
xor
cmp
jp
movl
xor
test
or
stos
jns
adc
cmc
cwtl
add
leave
call
ds
ljmp
arpl
jl
jge
mov
stos
pop
add
fstpt
cs
test
ja
jb
es
pusha
adc
push
ficomps
lock
sbbb
and
adc
cmp
sbb
push
cmpsb
insb
sbb
mov
xor
in
pop
jecxz
and
hlt
cwtl
cli
push
xor
repz
iret
push
ffree
hlt
pop
rolb
sbb
jmp
stos
sub
outsl
fisubs
add
das
lods
and
mov
adc
popl
daa
enter
leave
sbb
in
xchg
mov
orb
pop
push
test
pop
test
loop
mov
inc
sbb
test
xchg
pop
push
mov
sahf
dec
ret
mov
jbe
lds
ret
fnstenv
fcmovb
add
nop
push
add
mov
add
jbe
incb
sub
lods
add
jecxz
push
xor
into
outsb
subl
rcrb
fmull
sbb
lds
xor
cmpsl
jno
lahf
cmp
mov
pop
cmp
sub
mov
or
fsubs
inc
orb
xchg
sti
aas
and
xchg
mov
xchg
stos
mov
lds
orb
mov
in
leave
adc
fcmovnu
sahf
inc
xor
test
test
subb
dec
jne
in
cs
sbb
in
out
in
loop
jl
inc
cmp
mov
add
jne
cwtl
push
lret
inc
in
jmp
fwait
leave
movsb
mov
jmp
les
jecxz
in
stos
bound
pop
ds
push
jno
stc
mov
adc
stos
jle
inc
cmp
iret
or
push
inc
jp
cld
lds
mov
pop
adc
pusha
jge
or
mov
js
aad
movsb
xlat
ljmp
scas
les
lret
mov
xor
test
call
jb
jle
insl
mov
push
push
inc
dec
add
ret
or
ds
cmp
and
frstor
inc
or
in
push
test
mov
cmpsb
cs
nop
adc
out
ret
adc
cmpsl
inc
orb
pop
gs
les
jl
dec
daa
dec
pop
lods
call
or
push
insl
ljmp
push
pushf
aad
cs
out
out
mov
popa
or
cmp
xor
sbb
in
sbb
add
test
xor
mov
lcall
mov
ds
push
sbb
iret
int
xchg
jne
xchg
daa
sarl
pop
iret
xchg
ret
outsb
xchg
xor
std
rorb
pop
push
add
ret
adc
push
jnp
cmp
movsb
ja
stos
xor
popf
pop
cmp
adc
insl
xchg
jbe
add
cmpsb
xchg
notb
loopne,pt
test
sub
inc
sub
mov
scas
push
inc
cltd
sbb
mov
out
cld
xchg
cmp
pop
test
daa
jmp
test
inc
jnp
and
idiv
rcll
xor
dec
pop
jmp
mov
adc
divl
adc
sub
out
inc
insb
hlt
fiaddl
mov
mov
in
ret
dec
mov
es
test
xchg
addr16
fistps
testb
ds
push
and
insl
or
repnz
gs
adc
shl
je
inc
shl
movb
daa
add
add
cmp
out
sbb
and
pop
out
dec
xchg
inc
add
xor
scas
scas
inc
pop
push
out
fwait
push
push
mov
xchg
adc
push
push
add
and
loop
test
push
inc
cmpsl
xlat
sub
lea
sarl
or
lahf
test
dec
mov
mov
or
mov
xchg
jb
xchg
idivl
lret
push
jne
mov
ja
int
push
push
int
ret
icebp
cmp
inc
xchg
ret
mov
mov
sti
xor
pushf
push
mov
xchg
int3
adc
pushf
test
mov
leave
mov
dec
push
xlat
and
imul
aas
and
mov
adcb
pop
dec
outsl
mov
shlb
icebp
addr16
push
xchg
ss
mov
push
cmp
dec
call
test
mov
decl
in
repz
push
or
mov
sub
dec
dec
das
std
nop
adc
jno
cmp
push
movsl
lods
xchg
lcall
fstl
divb
and
pop
dec
popf
pusha
int
das
mov
inc
cmp
xlat
mov
out
push
stc
add
insl
inc
cmp
lea
pop
inc
xchg
xchg
outsl
add
scas
dec
jno
xchg
cmp
xchg
mov
pop
adc
add
lahf
stos
fmuls
cmp
jmp
es
mov
push
adc
dec
or
fidivrl
adc
cltd
data16
xor
sub
lea
adc
mov
mov
std
ljmp
leave
dec
jle
dec
mov
pop
out
outsb
sbb
cmp
pop
dec
cltd
or
mov
mov
psubq
and
push
outsb
aam
jb
repnz
mov
cmp
cwtl
pusha
pop
xchg
mov
or
pusha
add
cld
jne
jl
fwait
dec
test
jo
cmp
jg
rorb
adc
dec
fists
add
jns
push
aaa
cmp
gs
popf
and
andb
xorl
or
mov
in
or
jo
inc
and
dec
jbe
mov
ljmp
xchg
loope
arpl
icebp
mov
push
push
push
mov
aam
xlat
ljmp
xor
cmp
lods
int3
out
sub
jge
pop
pop
ret
movb
fnstcw
inc
loopne
and
aam
leave
aas
push
mov
cmp
mov
call
cli
sbb
imul
test
inc
mov
cld
test
in
fisttps
sbb
lret
dec
andb
add
iret
sub
scas
inc
inc
mov
pop
inc
test
rclb
xchg
dec
shrb
mov
out
lds
out
enter
lret
push
outsb
jle
inc
fildl
out
lahf
inc
jae
jl
push
xchg
dec
ja
test
xor
mov
jl
mov
imul
je
fcmovnu
addr16
fucom
stos
xchg
insl
inc
cwtl
sub
mov
dec
test
mov
mov
cmc
mov
push
pop
xchg
addr16
notb
dec
sub
dec
jo
cmp
faddl
aaa
adc
in
scas
jmp
adc
pushf
mov
jp
ss
sbb
dec
sbb
inc
add
out
fildll
or
pop
mov
lods
shlb
ss
push
pop
sbbl
mov
add
mov
mov
call
xchg
or
call
sbb
pop
cmp
jle,pt
xchg
das
mov
mov
pusha
fsubrs
ja
push
dec
pusha
jg
test
enter
lock
xor
jl
and
call
shll
lret
arpl
jne
mov
fcoms
dec
xchg
mov
push
clc
inc
sub
xor
bound
shll
lock
bound
aaa
outsl
cli
fistpll
outsb
mov
sbb
lock
and
cld
rcll
adc
sbbb
and
xchg
shlb
mov
ds
pop
mov
add
jns
mov
push
mov
lahf
scas
xchg
pop
mov
xchg
in
and
loop
lret
scas
nop
mov
mov
add
mov
cmp
mov
imul
cmp
mov
in
xor
inc
xchg
ds
cmp
lods
push
jo
test
ficompl
jmp
out
xor
arpl
mov
and
outsl
sub
and
repnz
inc
sahf
std
push
mov
pop
xchg
popa
jecxz
xor
daa
movb
cmp
sbb
sub
les
jne
inc
push
frstor
aad
or
dec
mov
mov
xchg
fdivp
in
xchg
inc
lock
cmp
sub
jbe
inc
mov
jno
fistpl
jnp
jne
mov
aas
cmp
mov
sub
dec
dec
fdivr
hlt
cwtl
inc
js
call
mov
cld
sarb
and
mulb
gs
mov
mov
nop
inc
loope
cmp
aam
xor
adc
push
add
jae
out
jmp
into
incl
push
rcl
cmp
testl
call
mov
and
stos
mov
or
dec
lret
pop
in
fistps
cli
stc
jg
jle
push
jns
aas
rcrb
out
mov
mov
int3
lret
push
dec
push
push
sahf
cmp
xchg
pop
mov
sbb
mov
daa
adc
or
push
je
popl
xor
jnp
aam
test
sbb
cld
fs
pop
loope
aad
ljmp
dec
imul
stos
inc
shr
cmpsb
ljmp
addb
inc
pop
and
pop
cli
jge
inc
xchg
pop
mov
popf
call
adc
aam
rol
iret
inc
inc
adc
jecxz
push
leave
imul
rclb
addr16
lods
ljmp
inc
sub
dec
dec
lock
movsl
pop
fdivs
cs
xor
cmpsl
push
lds
dec
in
js
mov
push
mov
mov
outsl
fwait
lods
ret
enter
cwtl
scas
jno
lret
arpl
pop
xor
jo
dec
jmp
mov
in
sahf
xchg
jge
xchg
jg
fdivs
in
dec
ja
fiadds
dec
inc
push
sbb
mov
js
push
adc
jns
into
or
fisttpl
mov
into
test
call
pusha
cmpsb
push
mov
test
clc
orps
out
outsl
hlt
movsl
adc
pop
and
les
cmpsl
mov
sbb
and
jns
xchg
push
adc
faddl
jo
cmp
dec
shlb
movsl
sbb
leave
sbb
fistpl
mov
outsl
xor
jne
push
out
scas
insb
mov
iret
push
test
ja
sbb
add
and
shlb
shlb
push
lock
ret
data16
lret
std
mov
cmp
lods
loopne
mov
mov
imul
sbb
sub
das
mov
mov
push
push
int3
xchg
fsubr
out
stos
mov
sub
outsb
imul
nop
xchg
pop
inc
push
xor
push
cmc
ret
xchg
lret
arpl
xor
xor
mov
dec
mov
sub
movsl
and
xor
lret
lahf
sahf
imul
lahf
mov
fmul
adc
push
mov
inc
add
insl
jmp
xchg
fiaddl
insb
nop
and
and
add
cmp
cmpsl
xor
pop
lds
mov
xchg
fimuls
mov
mov
sub
jg
pop
sbb
test
bound
cltd
daa
cmc
repnz
pop
decb
mov
bound
push
jnp
out
into
fcomps
jle
aam
jne
cli
jnp
adc
lods
sub
clc
or
dec
out
sub
daa
pop
repz
mov
dec
adcl
jae
repz
inc
inc
int3
incb
and
mov
sbb
cltd
dec
adc
rcrl
or
adc
cmp
xor
sub
int
xchg
adc
in
je
arpl
test
jb
rcr
dec
ds
ficoml
test
pop
sbbb
lods
add
cmp
bswap
arpl
and
mull
cmp
int
fs
icebp
add
movaps
les
dec
pushf
arpl
inc
adc
mov
les
icebp
push
imul
enter
sbb
xchg
fnstsw
lock
xor
dec
aas
add
es
xchg
stc
mov
pop
mov
cli
mov
push
pop
es
jecxz
and
enter
cltd
repz
js
in
add
cmp
imul
and
in
insb
fwait
out
out
mov
xchg
jge
stos
outsl
stc
cmp
or
inc
mov
in
es
inc
cltd
pop
push
lret
jb
jbe,pn
or
mov
adc
sbb
mov
sbb
loopne
shll
sub
push
pop
loop
gs
aas
sbb
pop
xchg
cld
lea
jb
mov
pop
fwait
jnp
or
pinsrw
inc
data16
cmp
xor
sbb
loop
cmp
loopne
sbb
adc
jge
xchg
mov
sar
loopne
mov
pusha
imull
sbb
cwtl
cltd
mov
pushl
and
xor
rep
xchg
negb
push
aad
jnp
std
push
mov
push
iret
in
sbb
jne
pop
jl
sbb
adc
pop
pop
dec
mov
xor
cmp
cmp
pop
inc
sarb
les
push
ffreep
fcompl
and
mov
and
ret
adc
push
add
jge
js
mov
clc
je
cld
or
gs
push
push
popa
xchg
or
push
adc
daa
xchg
mov
inc
and
add
pushl
sbb
mov
icebp
push
jp
clc
pop
cmp
out
mov
lret
xchg
mov
pop
sbb
sbb
mov
scas
xor
not
mov
adc
loope
adc
ret
cwtl
scas
leave
shll
stc
cmp
push
bound
pusha
jb
in
std
iret
push
add
ret
jmp
stos
es
stc
or
mov
xchg
xor
dec
and
ror
jecxz
fwait
stos
lods
inc
cs
push
das
mov
ret
push
mov
and
dec
xor
mov
adc
fldt
fs
shll
sub
ljmp
cmp
imul
adcb
push
xlat
ficompl
scas
mov
popf
pop
mov
iret
dec
or
and
sub
mov
and
cmp
pop
lods
das
mov
push
cwtl
sbb
cmpsb
rorb
fidivs
dec
inc
out
aad
shrb
gs
cli
fwait
ss
jbe
int
popa
cld
cmp
dec
push
inc
fisubs
mov
lea
insb
movsl
sub
dec
mov
fs
or
movsb
iret
add
lahf
cmc
lahf
xchg
es
inc
dec
adc
out
insb
shll
dec
and
sub
mov
push
daa
data16
push
ror
push
xchg
jns
nop
dec
adc
mov
out
jb
inc
es
push
int3
sbb
mov
fstp
icebp
int3
mov
popf
leave
mov
sub
adc
and
or
pop
push
cmpsb
in
adc
or
pop
out
fistps
push
scas
dec
and
mov
insb
jae
mov
ss
push
jmp
dec
mov
inc
loope
movsb
out
enter
add
cmc
xchg
fwait
adc
cmp
add
movl
mov
pusha
mov
out
cmp
and
jmp
mov
sbb
imul
or
adc
cwtl
or
insb
push
loop
pop
pop
stos
mov
out
rcll
mov
inc
and
push
rep
dec
ljmp
addb
test
and
mov
xchg
cmpl
dec
adc
inc
jle
push
xchg
sbb
aaa
dec
cmp
xorb
push
and
inc
adc
xchg
mov
fsubl
repz
pusha
imul
lods
and
adc
cmp
roll
jnp
cmp
adc
and
sti
pop
pop
add
loop
pop
xorl
inc
and
outsl
gs
mov
dec
inc
fildll
test
mov
in
jmp
loopne
js
add
ret
fistl
add
push
and
jl
cmp
fiadds
adc
insl
movsb
popa
les
insb
inc
cli
sbb
add
mov
xchg
aas
xlat
xor
cwtl
mov
dec
cld
pop
sbb
pop
call
outsl
pop
mov
mov
cmc
mov
push
divb
ljmp
adc
xchg
cmp
xchg
push
imul
clc
cwtl
add
insl
sbb
aam
ficompl
jb
cli
push
or
xchg
and
cmpsb
subb
fs
mov
pop
rcl
inc
sub
fsubrl
xchg
mov
push
jecxz
mov
jnp
xchg
xor
nop
rep
mov
in
cmp
je
enter
out
cmp
push
or
mov
xchg
add
jp
mov
mov
ror
jnp
mov
or
pop
push
fwait
xor
movsl
add
sarl
inc
in
cmp
jge
dec
sub
repz
cmp
ds
cs
lods
or
adc
pushf
mov
inc
jmp
cli
push
test
popa
popa
hlt
mov
cmp
xor
or
xchg
mov
and
dec
inc
or
cmp
clc
push
or
push
jbe
out
xchg
and
rorl
ljmp
imul
stos
or
mov
div
cmp
cmpsl
add
les
dec
arpl
testl
test
and
call
imul
push
xchg
inc
loopne
nop
dec
push
das
mov
into
jmp
aam
pushf
jg
movsl
xchg
xor
sub
xchg
push
loop
dec
or
xchg
jo
js
in
jg
xchg
cmp
fldl2t
mov
in
or
and
cmp
hlt
stc
fimull
arpl
cmpsb
inc
dec
push
imul
push
addr16
sub
sub
push
in
movsb
into
popa
dec
sub
lret
into
pop
pop
push
mov
hlt
mov
shrb
jg
xchg
push
or
cmp
int3
add
test
mov
mov
fnstcw
pop
aas
subb
pop
and
std
fs
inc
shll
mov
outsl
into
dec
pusha
jae
push
xor
mov
cmp
rcrl
rcrl
push
mov
iret
mov
cwtl
jmp
inc
and
pop
mov
jb
inc
loop
mov
xchg
or
sbb
cwtl
mov
outsl
fldcw
xchg
shll
dec
sti
stos
orl
test
push
test
xor
cmp
inc
add
inc
pushf
arpl
faddl
sub
je
push
clc
xlat
jo
out
aaa
cmp
or
mov
js
and
mov
scas
das
add
cmp
sbb
jae
xchg
sub
cmp
add
add
test
cmpsb
ds
clc
xchg
adcb
not
inc
lds
push
dec
fwait
ret
push
and
and
sahf
adc
xor
adc
in
loop
push
bnd
out
ror
das
addb
sarl
mov
je
stos
mov
mov
xlat
sbb
xchg
sbb
mov
ds
in
lods
adc
sbb
idivb
jae
je
mov
in
ds
aad
mov
fwait
xor
xor
xor
pushl
adc
outsl
call
test
je
adc
cmc
fnstsw
mov
pop
jno
dec
loopne
sub
test
int3
cmp
fs
mov
inc
mov
cmp
mov
sbb
adc
or
mov
mov
stos
dec
daa
mov
mov
push
xor
sbb
mov
in
movsb
inc
or
cmp
orb
mov
outsl
dec
lods
rcll
out
in
xchg
mov
test
adc
lcall
popf
pushf
les
mov
mov
cwtl
ss
sbb
negb
fsubs
xchg
dec
sbb
xor
cwtd
jnp
loopne
in
es
add
popf
jae
xor
outsl
in
in
les
fcmovb
dec
rcl
lods
repz
subl
lods
sub
dec
or
or
mov
mov
dec
cmpsb
mov
jnp
stc
dec
cmpsl
add
mov
inc
push
xchg
push
addb
mov
jl
cltd
mov
sbb
hlt
mov
mov
pop
xchg
sbb
cmp
mov
jg,pt
cmp
cmpsb
xchg
movsb
out
popf
xchg
cmpsl
dec
lock
jo
inc
xor
aam
in
rclb
divb
lret
fidivrs
push
aad
rclb
mov
rorl
jns
mov
icebp
mov
mov
int
push
iret
int3
les
inc
mov
jnp
cmp
movsl
test
addr16
cld
cmp
mov
mov
cmpsb
icebp
xor
jo
scas
push
jns
pusha
adc
sbb
test
mov
insb
xlat
stos
ss
scas
xor
fistps
in
sti
ljmp
test
sub
nop
pop
ljmp
xchg
add
test
rol
repnz
mov
rclb
mov
aam
std
mov
cmpsb
sbb
aas
jae
dec
mov
mov
xchg
push
xor
or
cmp
or
inc
repnz
xchg
sub
dec
dec
popa
jne
inc
test
iret
outsb
jge
fwait
in
stos
sub
sub
inc
push
fnstenv
cmp
insb
jne
sbb
stc
and
testl
out
and
and
sbb
ljmp
sbb
adc
hlt
and
or
in
int3
jae
repz
iret
add
ljmp
ret
xchg
jbe
jb
or
rcl
mov
lret
push
xchg
sbb
int
gs
lods
in
std
or
xchg
arpl
add
lret
in
xor
fcoml
mov
testl
bnd
in
sbb
mov
test
fldcw
mov
jbe
scas
daa
fcompl
adc
or
push
push
movsb
mov
rol
xchg
pop
sbb
pop
into
aas
pop
inc
frstor
sbb
push
in
call
addl
add
fcom
jb
test
imul
sub
lahf
pop
adcb
pop
dec
xor
popa
jo
cmc
mov
cmp
or
mov
ret
pop
jge
pop
xchg
mov
jmp
push
bound
jle
fisttpl
mov
out
xchg
outsl
ss
das
ja
add
fistpll
pop
int
lret
test
xchg
adc
dec
push
adc
cmp
stos
shll
mov
pop
cwtl
fmuls
hlt
popl
xlat
setl
insl
jle
xchg
xchg
xchg
cmp
fisttps
xor
xchg
lcall
push
adc
inc
and
je
jns
and
popf
pusha
stc
jle
outsb
cmpsl
xchg
jge
fldcw
push
inc
nop
xlat
pop
arpl
call
mov
loopne
add
mov
loop
cmp
adcl
push
xchg
jo
pop
fwait
or
xor
in
push
lods
lret
mov
imul
ficompl
divl
stos
sub
xchg
addr16
pop
mov
cmpsl
cmpsb
jbe
outsl
cmp
repz
aam
mov
int3
sub
fs
fcmovne
fcoml
popf
repnz
cs
icebp
sub
test
sbb
push
out
dec
stos
stos
lods
xchg
inc
stc
jbe
sub
sub
jl
mov
push
fists
cs
cmpsl
push
rclb
jne
jmp
xchg
jo
out
pop
lret
fldenv
fs
mov
jae
cwtl
xchg
dec
mov
popf
xlat
jae
xorl
or
adc
repnz
mov
mov
pop
out
inc
clc
mov
pop
inc
sbb
insb
dec
aaa
cs
pop
scas
fmuls
jecxz
aaa
arpl
xor
jl
mov
xchg
out
sub
mov
dec
dec
imul
outsb
and
pop
pusha
iret
jnp
lret
sarb
outsb
push
xorl
popf
xor
leave
les
sahf
jl
add
pop
push
pop
icebp
pop
add
mov
popf
and
push
rcr
mov
fsubr
je
jmp
lock
cmp
and
dec
push
lret
sbbl
or
pusha
roll
into
mov
add
pusha
sub
out
stos
ret
aam
lcall
add
cmp
cmc
and
mov
jl
mov
push
out
int3
ret
test
and
cmp
lods
daa
mov
jb
lods
lret
xchg
dec
mov
fisttpl
and
cld
dec
outsl
inc
into
adc
mov
nop
rcrb
bound
xchg
aad
jp
stos
hlt
cwtl
in
addr16
pop
sub
sub
fwait
mov
xor
movsl
mov
pop
lds
sub
ja
inc
mov
add
mov
les
lcall
adc
jnp
adc
dec
sbb
xor
inc
arpl
xchg
jge,pt
lds
out
aaa
repz
rclb
stos
add
push
jo
and
push
mov
and
xchg
xor
push
pause
test
cmp
pop
popa
shlb
cmp
mov
add
dec
inc
sub
mov
mov
icebp
scas
cwtl
in
je
jmp
xlat
inc
xor
cmp
xchg
test
or
jmp
jp
dec
mov
in
test
adc
sar
xor
push
push
pop
popa
pusha
repz
sub
jo
adc
out
pop
in
inc
inc
sub
mov
test
pop
pusha
inc
mov
and
daa
pushf
or
add
mov
dec
test
in
daa
sub
cmp
mov
sub
lret
fldt
jp
iret
mov
mov
call
orps
scas
sub
pop
and
jnp
and
hlt
sti
sub
ljmp
jno
mov
pop
dec
hlt
stc
mov
mov
mov
mov
cwtl
mov
pusha
fadd
loope
jecxz
aas
xor
loope
out
ja
mov
cmp
or
dec
in
cmp
cmp
inc
inc
fmull
mov
add
les
shrb
dec
push
dec
movsb
jle
cli
xor
lret
shll
xchg
adc
xor
xor
dec
mov
stos
adc
jbe
loope
adc
popf
cmp
gs
fisttpll
or
push
daa
enter
sti
mov
xchg
aam
in
inc
shl
mov
psrad
jne
ret
dec
test
adc
ja
xchg
je
lock
fstl
fidivrs
imul
mov
or
adc
fldl
jno
pop
bound
fwait
add
dec
adc
and
repz
or
xchg
sbb
pop
pop
shrl
xchg
ja
aas
rcl
add
mov
incb
pusha
mov
lret
out
cmp
out
xor
lcall
lahf
sbb
testb
xchg
stos
mov
mov
imul
cltd
js
repz
mov
xchg
and
lock
pop
loope
mov
xchg
jae
inc
fdivrs
mov
ret
adcl
mov
jl
mov
das
fcompl
jle
arpl
out
jno
adc
pop
jg
repz
cmp
fidivrl
cmp
mov
in
add
mul
lea
or
clc
xor
leave
lcall
cmp
adc
ror
aaa
fists
stos
lcall
daa
jns
xorl
hlt
and
or
and
cmp
pop
and
out
dec
out
scas
inc
insl
mov
lret
addb
cwtl
fisttpll
pop
in
popa
mov
and
sub
fsubrs
add
or
jp
pop
jmp
lret
and
xchg
sahf
push
or
out
subb
xor
jl
aam
xor
out
shrl
adc
and
or
nop
sub
loope
out
mov
out
mov
jge
dec
mov
loop
jecxz
popf
icebp
out
inc
xchg
enter
out
loopne
leave
or
pop
inc
push
adc
inc
out
sbb
xchg
mov
pop
clc
pop
out
xor
push
sub
clc
into
mov
insl
mov
adc
and
lock
ficoml
sbbb
test
jmp
decl
sbb
loopne
stos
push
xlat
insl
test
and
xlat
orl
inc
inc
sub
test
or
mov
cmp
jmp
mov
ficomps
rcrl
mov
mov
inc
shll
iret
push
outsl
out
imul
sub
je
mov
cltd
cmp
outsb
adc
notl
push
imul
push
cmp
notb
cmp
pop
sub
pop
mov
xor
cld
adc
or
aad
insb
pop
jno
sbb
jns
mov
imul
push
adc
outsl
jmp
push
test
mull
stos
sbb
out
fdivr
popf
sub
jmp
xchg
mulb
dec
jle
push
or
mov
cmp
dec
iret
pop
in
enter
aaa
rorl
test
push
mov
lret
push
je
fsubr
rcrb
lahf
adc
jl
inc
loope
and
dec
cmp
sbb
div
push
std
out
outsl
stos
mov
mov
add
lcall
ja
xor
push
mov
rcrl
push
cmc
nop
fsubrs
outsl
mov
shrl
jae
sub
fiaddl
inc
mov
xchg
js
mov
push
std
jle
mov
push
pop
dec
jecxz
and
push
add
jnp
out
dec
outsl
xchg
bound
mov
punpckldq
insb
mov
insl
mov
pushf
mov
jne
test
xchg
mov
test
shlb
fisubrl
mov
fwait
mov
xchg
dec
xchg
and
pusha
or
nop
and
push
xchg
xchg
push
sahf
js
adc
adc
ret
mov
and
push
subl
lods
pushf
push
out
adc
inc
inc
in
out
daa
sub
mov
fsubrp
xor
int3
sub
jnp
mov
and
adc
sub
shlb
outsl
pushf
ljmp
xor
enter
ja
push
mov
sub
out
jp
adc
add
popl
adc
js
xor
pop
lock
sub
je
sbb
mov
mov
andb
cmp
stc
mov
inc
lods
push
jle
cltd
shlb
push
insl
push
dec
dec
mov
push
rcrl
mov
xor
lea
es
sub
inc
xchg
mov
stc
add
fnstcw
sti
ret
aad
pushf
mov
jp
int3
call
into
xchg
push
shll
inc
dec
das
inc
call
shlb
mov
js
push
mov
push
pop
mov
pop
mov
out
xchg
int
cmpsl
imul
or
add
stc
and
lods
mov
xor
es
jns
cmp
movsb
data16
iret
add
push
mov
sub
sarl
jge
mov
dec
mov
popa
add
push
mov
inc
adc
stos
hlt
dec
test
mov
test
xor
cwtl
mov
hlt
fmull
xor
scas
out
jae
xor
and
xchg
fstpl
lea
push
lods
call
or
out
dec
rcll
fxch
fnsave
lret
nop
sbb
dec
out
inc
aas
call
lret
inc
push
cmpsb
decb
addr16
das
xchg
xchg
jmp
int3
add
ja
popa
push
hlt
int3
jle
cmpsl
je
orb
sarl
cmc
cs
hlt
sarl
test
or
push
neg
fcoms
divb
or
bound
mov
push
insl
jecxz
insl
and
mov
push
mov
lock
cmp
xor
shll
mov
sahf
lock
bound
or
call
inc
push
pop
hlt
popa
add
sbb
pusha
fidivs
pop
pushl
enter
xchg
mov
dec
jl
aaa
aaa
int3
scas
jp
push
add
mov
cmpsb
adc
sub
into
insb
popa
loope
pusha
sbb
mov
pusha
shl
daa
jecxz
lahf
cmpsb
add
mov
mov
gs
std
xchg
lcall
xor
sub
sub
flds
ja
mov
add
ficompl
stos
push
cltd
xchg
inc
xchg
jns
pop
mov
xchg
movsl
ret
data16
in
jbe
and
mov
je
scas
ds
cltd
call
dec
inc
rolb
sub
dec
and
clc
ss
inc
data16
ja
dec
xor
pop
sub
cmp
adc
in
mov
and
pushf
add
cmp
jle
dec
ds
mov
dec
mov
pop
lcall
xchg
sar
jns
sbb
jns
data16
insb
jmp
inc
push
cwtl
jg
push
insl
mov
mov
jl
clc
adc
sub
scas
dec
loope
mov
adcl
sti
xorb
outsb
repz
jmp
xor
std
aad
inc
jp
jge
sub
out
dec
cmp
cmc
or
imul
pop
mov
ss
neg
nop
jne
add
jle
pop
push
stc
push
test
inc
sub
mov
add
pop
xchg
push
aam
sub
iret
negl
outsb
jo
sub
jle
ss
out
sbb
mov
xchg
lds
fiaddl
lret
xlat
or
insb
fimull
cmp
xor
dec
popa
mov
aad
push
pop
sub
iret
fcomi
subb
lret
mov
std
shlb
repz
sub
cmp
lea
jecxz
mov
loop
and
cmc
shll
fwait
outsb
pop
jo
inc
sbb
dec
push
or
subb
jp
mov
mov
data16
jl
mov
dec
push
and
push
stos
cli
mov
dec
push
dec
xor
fdivrs
lods
fstpt
fiaddl
push
fs
xor
pop
dec
in
and
mov
icebp
and
and
in
mov
je
inc
dec
and
mov
outsb
adc
out
xchg
add
jp
or
cmp
cs
mov
xchg
sub
sub
inc
inc
push
negb
out
into
mov
cmp
gs
sub
adc
and
mov
in
mov
ror
adc
loope
jmp
dec
xor
push
mov
xor
mov
xlat
movb
cmp
and
roll
or
sbbl
lods
ss
fisubrs
frstor
pop
repnz
xor
leave
testl
aad
insl
xchg
lods
mov
out
repz
cltd
pop
in
sbb
scas
add
cs
and
push
notb
jecxz
mov
cmp
inc
fnstcw
ss
inc
pop
jmp
xlat
mov
dec
xor
nop
cmc
mov
cli
jle
ret
repnz
push
adc
add
fidivs
adc
aas
call
or
jnp
pop
mov
sbb
test
test
adc
in
and
jmp
and
jmp
add
pop
fadd
pop
lods
dec
or
or
or
jb
insb
fsubrl
call
rol
out
push
scas
xchg
or
jge
mov
push
mov
xchg
lods
cmp
xor
add
sub
imul
mov
divl
ja
inc
cmp
mov
imul
mov
dec
xor
jl
loope
int
cmp
mov
repnz
ret
stc
adc
inc
repnz
and
loopne
icebp
cmp
mov
jno
into
xchg
insl
ss
imul
pusha
mov
adc
ftst
and
or
jmp
pop
mov
in
inc
xchg
mov
test
pop
in
scas
xor
aaa
push
mov
sub
pusha
mov
push
ret
and
xchg
fistpll
out
jno
mov
jnp
xchg
cmp
bound
lret
bound
and
mov
pop
stc
lods
push
ds
int3
dec
xchg
clc
sgdtl
dec
mov
aaa
popa
loopne
stos
xlat
cmpsl
rorb
push
lahf
push
int
jecxz
into
mov
imul
dec
inc
loopne
mov
push
leave
scas
push
and
add
insl
mov
or
clc
imul
inc
cli
jle
popf
data16
mov
cmp
popa
xor
xor
lcall
outsb
jl
mov
ror
das
jnp
imul
mov
fsubrp
in
mov
ss
dec
mov
out
shr
outsb
jge
std
repnz
fs
mov
pop
pop
and
repz
push
sub
mov
adc
mov
ret
cwtl
jae
cmp
pop
imul
mov
adc
jp
jp
cwtl
call
pavgb
aam
push
cmp
nop
je
insl
mov
rcrl
orb
mov
ljmp
or
pop
push
enter
out
in
ror
and
mov
pop
movsl
mov
pop
movb
lods
sub
test
dec
sub
ret
push
inc
es
push
add
xorl
test
rorl
aas
cmp
lods
jo
add
outsl
ret
dec
inc
divb
xor
cmp
aad
or
inc
inc
test
jp
jecxz
lods
mov
jbe
dec
dec
or
fsts
out
fcmovb
dec
inc
and
mov
lock
inc
mov
xchg
push
pop
out
mov
xchg
xchg
arpl
mov
and
das
or
idivb
aad
pusha
hlt
sbb
mov
jle
fdiv
inc
sahf
lds
adc
dec
enter
push
in
pop
pop
cmp
in
imul
xchg
pop
xor
jmp
or
pop
ljmp
mov
aam
xchg
jmp
repz
in
push
dec
faddl
sbb
sbb
xor
sub
mov
mov
xchg
cmc
das
add
mov
mov
jl
add
in
shrl
ds
sub
mov
and
jb
cmp
inc
mov
fs
sarb
xor
lea
sbb
pop
jg
xor
mov
ficoml
ljmp
jns
xchg
dec
pop
xor
inc
sbb
mov
push
xchg
push
sbb
push
loope
add
rcll
stos
push
iret
push
insl
in
jbe
cmpb
addl
push
cwtl
pop
mulb
mov
jg
sbb
fiaddl
mov
jl
add
outsl
mov
loope
mov
cltd
adc
add
jno
in
nop
adc
bound
push
jns
fcomps
cmp
shlb
sbb
in
outsb
sbb
repz
sub
sbb
pop
inc
cld
jb
fxch
xor
fildl
aam
fisttpll
fxch
nop
int3
xchg
scas
cmc
sub
test
cmp
addr16
jbe,pt
mov
or
fdivr
andl
cmpsl
std
dec
jns
inc
lcall
push
popf
add
into
dec
fsub
jne
loopne
out
xchg
in
sbb
xchg
mov
int
mov
icebp
aad
mov
notb
iret
adc
xor
lcall
mov
mov
lock
outsl
mov
aam
sub
push
pop
imulb
pushf
inc
js
cmpsl
xchg
rcrl
int
in
inc
add
mov
xor
ljmp
shlb
lock
leave
sub
out
scas
or
mov
and
mov
add
mov
jle
xchg
jle
mov
cmp
pop
popf
dec
inc
mov
push
mov
xchg
out
add
repnz
add
push
mov
cmc
aad
dec
mull
aam
mov
cmp
shll
sub
xor
incl
sub
adc
out
jmp
divl
or
mov
ret
xlat
add
xlat
aaa
xor
aad
pop
data16
jle
leave
push
inc
pop
xchg
stos
sub
jge
or
stos
ret
and
jmp
jmp
jle
loopne
dec
cmp
loop
cmc
inc
and
hlt
negb
outsl
lea
int3
mov
cmp
mov
cmp
dec
pop
sahf
gs
push
out
ds
shlb
and
fcompl
mov
jbe
lds
sarb
mov
sub
xchg
dec
push
test
jne
cmp
in
repnz
jbe
popf
dec
mov
cwtl
jbe
push
insl
stos
xchg
sbb
or
addb
insl
stos
xchg
jecxz
pop
dec
in
jg
and
dec
aaa
subl
cmp
scas
pop
jo
rclb
shl
inc
adc
dec
std
xchg
cs
sarb
sbb
nop
fnstcw
mov
and
scas
js
pop
jp
adc
push
inc
scas
lret
jmp
dec
dec
lcall
ljmp
stos
mov
dec
nop
das
andl
loop
cld
mov
jns
mov
cld
iret
mov
aam
std
add
es
cmp
xchg
fsubl
stos
enter
mov
pop
add
lods
pusha
push
pop
fs
xor
lds
push
and
xchg
cmp
or
fildll
push
adc
cmc
mov
sahf
push
sub
mov
mov
lods
dec
call
pop
mov
adc
jecxz
sbb
roll
dec
cmp
call
orl
out
mov
add
mov
mov
lcall
in
pop
bnd
ret
cmpsl
stos
xlat
je
les
push
jno
push
mov
rcrl
movsl
ret
mov
mov
into
inc
xchg
rol
pop
push
mov
mov
insl
orl
xchg
lret
pushf
jbe
adc
xor
insb
outsl
add
dec
add
and
loop
sub
xor
xor
jno
inc
cmpsb
stos
xchg
sbb
mov
mov
movsb
jb
push
xchg
add
xchg
ja
xchg
lcall
fisubrl
test
mov
pop
test
xchg
mov
add
jmp
and
xchg
push
mov
addr16
push
jo
cli
xchg
outsl
dec
shll
movsb
fs
push
sbbb
out
dec
cmp
pop
pop
or
pop
stc
mov
jge
arpl
pop
pushf
mov
lock
rorb
insb
arpl
cltd
arpl
sbb
push
mov
push
cmpb
or
popf
sub
pop
dec
add
adc
loopne
mov
out
shll
jmp
loope
mov
sub
xor
push
inc
dec
cmp
pop
test
mov
mov
insb
sbb
dec
cwtl
push
add
hlt
mov
hlt
inc
or
jg
cmp
ror
imul
test
fwait
das
sbb
cld
inc
cltd
mov
sbb
lcall
adc
das
xchg
add
pop
pushf
mov
rclw
insb
movsb
inc
je
cmp
mov
popf
dec
out
testb
pop
and
jle
dec
mov
mov
dec
aaa
stc
scas
push
dec
dec
dec
lret
add
xor
xor
push
mov
mov
and
stos
push
pop
pop
jecxz
mov
cwtl
movsb
icebp
pop
adc
cld
inc
in
xchg
gs
fnsave
fisttpl
xor
mov
filds
mov
push
push
stos
scas
rcrl
sahf
cs
cmc
std
jb
test
xor
xchg
or
xor
sub
jbe
outsl
jne
xor
cmp
mov
pop
sub
or
fcmovu
xchg
ja
aam
pop
popw
stos
and
mov
mov
mov
call
push
mov
movsb
call
lret
jns
cs
mov
mov
adc
mov
inc
mov
js
lds
mov
int3
pop
stos
repz
mov
and
mov
cmp
sbb
or
call
pop
add
pop
add
cmc
in
mov
or
ret
cld
aaa
push
mov
jmp
lods
lret
mov
ss
call
cmp
dec
mull
sub
jbe
push
jecxz
pusha
pop
lret
sbb
gs
out
test
xor
adc
adc
fdivs
mov
imul
or
loopne
mov
ja
pop
mov
pusha
mov
jno
ss
inc
mov
pop
mov
add
test
jno
dec
rcr
push
das
and
lock
push
ja
addr16
or
push
pop
stos
mov
rol
sub
mov
pop
xchg
je
fsubrl
test
xchg
push
push
push
pop
inc
sbb
stos
xchg
outsb
dec
mov
orl
fistl
ljmp
and
mov
out
cmp
clc
insl
jb
idivl
shrl
pop
or
out
test
loope
xchg
xchg
mov
gs
or
dec
mov
fadd
pusha
fadds
inc
pop
push
ljmp
insl
or
imul
inc
jge
jae
mov
test
add
fistpll
pusha
lods
jmp
aaa
mov
mov
inc
mov
decb
add
testb
mov
xchg
sar
imul
sub
subb
in
fimull
sub
mov
push
cmp
lds
xlat
push
out
xchg
and
mov
push
lahf
cmp
cmp
aas
std
adc
cmp
fucomip
mov
jmp
cltd
int3
lcall
es
sub
cmp
aas
jae
push
out
lods
dec
pop
add
ficompl
push
cmp
push
and
jecxz
lods
add
xchg
or
xchg
sub
mov
inc
xorb
xlat
xchg
loop
xlat
add
mov
push
lret
in
push
mov
test
and
cltd
rcl
add
mov
jg
cli
rclb
mov
and
test
inc
mov
inc
jg
jp
xor
jb
push
push
dec
add
das
cld
dec
ljmp
inc
ret
mov
fldt
jmp
cmpsl
or
sarb
lcall
sub
sub
fcompp
or
mov
mov
jg
mov
inc
cmp
test
inc
add
popf
push
cld
inc
inc
sahf
add
popf
aaa
mov
or
xor
rcrb
gs
jmp
enter
shrb
leave
ficoms
jbe
test
arpl
cmp
aad
rclb
or
xor
pop
xor
std
movsb
cltd
mov
pop
and
xchg
outsb
push
jno
scas
push
outsb
pop
pop
dec
and
rclb
sub
test
pop
cmp
xchg
sub
sbb
pop
int
mov
imul
jl
and
or
xor
imul
jle
mov
lods
inc
fildl
pop
sub
mov
div
test
leave
dec
pusha
mov
stc
pop
sub
testb
pusha
je
xchg
fisubrl
rcrb
or
loopne
mov
dec
push
adc
repz
add
aas
test
pop
jmp
loope
ret
jns
cmp
push
fiadds
inc
jb
orb
ds
mov
incl
pop
dec
fisubs
push
jp
ljmp
mov
push
outsl
add
es
mov
push
idivb
adc
xchg
test
push
xchg
or
xchg
in
push
push
cmp
mov
or
push
xchg
mov
bound
test
push
aad
gs
lret
popa
inc
enter
inc
add
roll
movsl
mov
dec
mov
out
dec
dec
fimull
inc
dec
test
mov
xchg
xchg
loope
fdivp
push
push
mov
sbb
jmp
ret
incl
mov
and
sbb
mov
es
jno
push
push
dec
sbb
aaa
mov
pop
push
and
insb
in
jno
and
psllw
jp
dec
pusha
shrl
mov
leave
add
mov
and
push
fnstcw
or
jge
push
and
or
sbb
stc
sub
push
mov
xlat
ljmp
xor
lahf
sahf
cmp
sbb
int
xchg
mov
insl
ret
fnsave
pop
negl
shr
fisttpl
fs
decl
adc
insl
fwait
mov
jle
fdivr
cltd
in
dec
fincstp
mov
cmp
iret
xchg
call
mov
es
call
xchg
dec
int3
fldl
adc
out
out
icebp
adc
mov
cmc
in
adc
sbb
mov
xchg
adcb
cld
popl
or
sti
push
or
mov
mull
dec
rol
sbbb
and
shll
mov
lret
ljmp
in
jge
ficomps
inc
add
pop
loopne
xchg
imul
xor
lahf
push
jno
pop
aas
add
stos
outsb
inc
nop
or
push
inc
test
mov
mov
dec
mov
sbb
cmp
popf
sub
stc
inc
jno
xchg
xchg
int
rcll
fwait
ret
and
insb
xor
fisubrs
jb
cmp
imul
dec
xchg
ret
inc
inc
loopne
adc
push
jle
or
test
lods
xlat
dec
pop
fldl
ss
inc
ljmp
out
fs
mov
sbb
cli
mov
push
mov
lods
fildl
push
push
jnp
loope
into
dec
jb
loop
dec
xchg
js
add
xchg
mov
sub
test
mov
lods
lods
imul
mov
lret
outsl
outsl
movsl
outsl
out
mov
negl
out
sahf
into
test
loopne
jbe
jno
inc
daa
jns
cmc
mov
inc
fs
push
mov
cli
cmpsl
pusha
imul
dec
or
mov
icebp
lret
insl
xchg
imul
jle
inc
add
lods
push
roll
gs
adc
sbb
pop
arpl
sbb
and
mov
adc
cltd
addb
fisubl
push
mov
and
scas
fnsave
fidivrl
cmp
pop
push
in
lcall
pop
dec
icebp
push
cmp
inc
addl
pusha
push
imul
mov
loopne
xchg
push
cmpsl
js
out
rcll
and
lcall
call
inc
add
scas
add
mov
aaa
sub
int3
push
mov
mov
dec
xlat
lea
jmp
jmp
movsb
adcb
cmp
jne
inc
or
dec
inc
inc
lret
mov
push
cmpsl
ret
add
ja
sbb
jbe
jmp
mov
xchg
sub
stos
jl
adc
cmp
ljmp
les
adc
dec
push
xchg
mov
rcrb
inc
sbbl
jecxz,pt
sub
clc
xchg
int
sahf
cwtl
popa
pushf
lret
call
xor
mov
jecxz
xchg
or
xchg
cmpsl
imul
jnp
sbb
insb
in
es
out
adc
sub
xchg
or
xor
lods
jg
sbb
in
mov
cmp
add
adc
fbstp
xchg
jae
add
jmp
add
and
sub
pusha
insl
mov
outsl
sbb
xchg
sbb
push
sub
lahf
push
loop
mov
or
or
dec
cwtl
arpl
fmull
xor
add
sti
arpl
or
dec
insb
pop
and
pop
fs
push
jns
jl
inc
jo
imul
hlt
inc
mov
in
insb
icebp
jno
popa
fdivp
or
lock
pushf
insl
xchg
int
jmp
push
repz
adc
loope
pop
lret
adc
adc
xchg
jbe
sbb
in
pop
adc
mov
dec
mov
lret
add
adc
inc
mov
rcl
adc
cmp
sub
cli
out
lock
iret
mov
mov
mov
push
movsl
push
inc
insb
mov
mov
clc
cmp
cmc
and
pop
sub
addr16
push
sbb
push
bound
mov
ret
push
je
test
sbb
cmp
xor
dec
int3
and
mov
je
out
jb
les
xchg
jns
icebp
dec
jp
and
xor
or
sbb
in
dec
inc
jo
repz
fistpll
push
push
lock
popa
mov
roll
jge
xchg
xchg
std
sub
mov
mov
fs
mov
dec
pop
fdivs
clc
jle
repnz
and
icebp
cli
xchg
loopne
movsb
lock
mov
jno
push
pop
pushf
pop
lcall
push
loop
dec
xor
pusha
mov
sbbb
or
mov
push
cmpsl
inc
fmul
jecxz
mov
das
cld
jnp
imul
xchg
aas
cmpsl
lods
stos
and
or
xor
add
cld
rclb
mov
or
sbb
loope
push
mov
fistps
mov
jae
xor
mov
adc
les
loope
xchg
xchg
inc
xor
push
decl
sbb
mov
test
out
movb
cmc
loope
sbb
cmpb
fisttpll
pop
das
or
stc
jl
mov
sarl
repz
and
sub
call
pop
call
mov
loop
rcrb
inc
enter
add
push
cmp
jmp
jb
scas
or
inc
js
sbb
and
mov
push
mov
pop
or
fmulp
rcl
leave
cmpb
jmp
add
dec
ret
int
lods
cmp
push
aam
sub
inc
inc
sub
inc
xchg
bnd
sbb
and
stos
jl
dec
and
jle
mov
repz
pushf
cmp
pop
cwtl
popa
adc
sub
xchg
jl
mov
sub
push
call
and
addr16
jb
sub
lea
mov
inc
xlat
pop
push
fcmovbe
dec
dec
inc
shl
add
pop
sbb
sub
movsb
std
jg
mov
dec
out
push
jo
xchg
lahf
and
popa
in
push
cmpsb
dec
mov
push
pop
imul
enter
cmp
in
sub
xor
insl
pop
lock
imul
xor
jo
jae
cmc
aad
rorb
mov
xchg
mov
adc
add
cmp
arpl
stos
subb
cmp
mov
xchg
inc
mov
xor
and
xor
and
lds
rcrb
movsb
daa
sar
push
pop
xor
pusha
push
mov
insb
out
ficoms
xor
sti
xor
cmp
in
or
mov
sbb
mov
sbb
imul
push
add
jp
insb
ss
xchg
inc
cmp
jmp
adc
adc
dec
dec
push
sahf
enter
inc
push
xor
lea
mov
jnp
rcrl
rcl
or
loopne
icebp
insb
pop
dec
sub
cmp
pop
mov
or
loopne
xchg
hlt
adc
or
inc
imul
adc
iret
imul
es
adc
in
adcb
sub
andb
push
xchg
movl
fstps
xchg
adc
fs
push
pushf
pop
das
push
ljmp
faddp
or
js
sub
bound
aam
sbb
mov
out
push
mov
daa
add
sub
jge,pt
cmpsb
or
inc
fisubl
iret
push
push
je
lret
pop
shrb
dec
add
inc
cmp
fisubrs
mov
test
cmc
mov
sub
adc
add
sti
insb
and
adc
sbb
daa
out
xchg
mov
sub
push
arpl
push
push
int3
xchg
cld
lcall
int
and
add
aaa
hlt
mov
cmp
loope
push
push
inc
mov
xchg
jmp
and
add
cmp
es
cwtl
lret
ffreep
ljmp
pusha
push
addr16
ret
mov
es
mov
dec
aas
movsb
fldcw
dec
aaa
xchg
sarl
xlat
sti
test
xchg
inc
into
daa
push
pop
lahf
or
lret
and
shll
in
shlb
jns
cmp
repz
mov
cmpsl
inc
push
or
rcrl
dec
push
sti
xchg
in
icebp
mov
xor
fisubrs
lret
xchg
mov
mov
jmp
and
stos
in
or
dec
lds
inc
pop
push
stc
add
out
out
icebp
or
xor
gs
push
and
mov
leave
imul
push
pop
int3
ss
sarl
mov
fsubp
or
jg
pop
adc
sub
movsl
sbb
mov
push
mov
jp
cmp
push
jmp
es
xchg
enter
in
outsb
mov
sub
push
sbb
pop
push
and
mov
pop
push
shll
je
push
inc
out
jnp
lds
stc
cli
push
jg
repz
aas
and
sbb
pushf
jns
ret
xor
jae
sarb
cmp
jb
aam
push
out
rol
insb
iret
inc
in
mov
scas
sbb
sbb
icebp
in
daa
cmc
jl
jns
xchg
xchg
das
iret
and
lret
or
daa
add
pop
add
pop
pusha
pop
fidivrl
mov
xor
dec
cld
mov
inc
lods
pop
push
sub
les
adc
test
test
xorl
and
cmpsw
jg
or
fnstsw
or
xchg
sbb
mov
enter
and
xlat
scas
add
and
sahf
add
mov
popa
mov
sub
pop
lods
popf
jne
or
dec
sarb
xor
ljmp
adc
jno
lods
cmpsl
or
outsl
lret
mov
sub
add
sub
inc
data16
in
lret
lock
lret
or
lds
and
cmp
adc
sbb
or
mov
or
enter
les
cmp
aaa
fimuls
lret
add
fisubl
mov
scas
add
sbb
mov
pushf
cwtl
repz
push
mov
jno
push
sbb
inc
out
mov
imul
cmc
idivl
ds
pushf
pop
inc
jle
shrl
push
ficoml
repnz
ficoms
inc
xchg
add
cmp
imul
lods
aas
in
mov
cwtl
push
mov
mov
xor
mov
addr16
imul
repnz
mov
pop
xor
in
fidivl
sub
inc
mov
lret
lahf
ret
int
daa
lds
xor
pushf
aaa
sahf
jle
pop
cli
sub
in
loop
mov
into
and
cltd
and
sub
sbb
or
repnz
inc
add
or
xor
push
not
mov
sbb
or
xor
pop
ja
xor
adc
int
je
mov
outsl
loop
mov
and
lcall
and
arpl
mov
jno
into
or
pop
push
mov
loop
adc
push
icebp
aas
xchg
mov
push
inc
in
pop
in
call
dec
push
adc
bound
in
mov
aam
inc
pop
sub
out
pushf
add
mov
xor
jns
inc
xor
lds
shlb
xorl
rcll
jns
sbb
iret
push
test
add
cmpsb
mov
inc
pop
repnz
jp
repnz
push
xchg
fs
xchg
mov
test
jmp
pop
pop
mov
clc
xor
and
jno
sub
jge
fsubrs
pop
sti
dec
movsl
add
scas
out
sbb
iret
jmp
insl
pop
inc
push
cmp
loope
inc
cmp
jp
push
neg
test
negl
mov
mov
mov
pop
inc
xchg
adc
fwait
sbb
mov
inc
sahf
scas
jg
fildll
je
sbb
mov
fdivl
sub
stos
in
enter
dec
es
and
scas
inc
adc
pop
jmp
jp
pop
xchg
and
sbb
push
ss
and
jb
or
imul
jmp
jmp
add
daa
les
and
cmp
test
xor
hlt
mov
lcall
movsl
dec
jg
mov
jle
pop
jmp
inc
sub
sbb
mov
adc
mov
jbe
add
fmuls
sub
mov
in
inc
sbb
mov
sbb
mov
out
das
ja
fisttpl
mov
test
mov
xor
inc
test
pop
xor
adc
rcl
mov
jbe,pn
mov
adc
into
cmc
test
pop
inc
adc
sti
jbe
clc
imul
add
rclb
addb
cmp
in
fidivl
aam
mov
xlat
add
lcall
xchg
out
sbb
mov
movsl
mov
je
inc
mov
jnp
mov
int
dec
inc
push
aam
mov
or
pop
aam
push
jnp
adc
popa
add
and
mov
outsl
mov
xor
cmp
push
dec
jo
cwtl
or
xchg
js
sub
popf
pop
loopne
jbe
inc
rolb
das
clc
loope
outsl
pop
mov
xor
inc
outsl
dec
test
daa
mov
push
mov
add
neg
mov
and
out
jle
test
xchg
movsb
aaa
dec
and
pop
std
lret
mov
das
out
adc
lds
xchg
add
nop
mov
sarl
es
pop
test
pop
ret
iret
ds
push
push
push
dec
shr
das
mov
jle
push
xchg
mov
mov
sub
test
mov
stos
push
cmpsb
cltd
stc
and
pop
leave
sub
notl
pop
push
or
cli
stos
frndint
or
aam
jmp
repz
imul
sub
sub
push
mov
push
dec
adc
std
aas
std
pushf
rol
xchg
daa
mov
out
mov
adc
or
jno
mov
loop
xor
rep
dec
std
pop
out
xor
or
xchg
icebp
xor
jbe
icebp
ja
mov
repz
in
daa
push
repnz
std
or
call
cmpsl
lea
push
cmp
addb
inc
jae
ret
lcall
sbb
imul
pop
add
push
mov
mov
popf
aam
jo
insl
fimuls
popf
pop
xlat
mov
dec
lcall
fcoml
mov
lcall
push
lcall
and
and
lods
add
add
jne
nop
ret
inc
jp
dec
movb
xor
rolb
fstpt
int
inc
adcb
sahf
mov
cmp
arpl
xor
xor
xchg
mov
pop
jne
sarl
hlt
xchg
aas
dec
out
outsb
lret
fcoms
pop
cmp
push
in
ret
cwtl
outsl
inc
test
imul
cwtl
xor
sbb
icebp
jb
mov
or
push
mov
fs
or
dec
xlat
std
cmp
sub
cmp
fcomps
sarl
add
lahf
fisubrs
and
scas
add
or
repz
fnstcw
scas
sahf
cmpsb
les
gs
cmp
jmp
inc
inc
ret
xor
shr
movsb
cmp
testb
and
cltd
test
inc
int
std
sahf
pusha
sub
and
rorl
aam
sti
fsubrl
aam
vmwrite
mov
xor
mul
sbb
xor
cmpsb
lods
repz
repnz
lods
cltd
ror
dec
cmp
cmp
sti
jo
scas
push
les
pop
in
and
fwait
sub
sub
enter
cld
sbb
sar
ljmp
jnp
cmp
inc
xchg
iret
pop
subb
mov
jle
or
cmp
ret
cmp
and
cwtl
aad
mov
lahf
dec
ret
mov
xlat
into
mov
cmc
jmp
sti
push
cmpsl
cmp
test
mov
aam
cmpsb
out
xchg
jecxz
jp
and
cmp
rcrl
sub
js
add
xor
popl
mov
mov
fildl
xor
add
pop
and
fdivs
mov
ret
addr16
arpl
inc
cmp
ds
jcxz
out
data16
adc
jmp
pop
xchg
cs
pop
sub
test
cmp
xchg
out
enter
shlb
jg
out
movsb
add
sub
inc
sbb
mov
movsb
stos
jns
add
mov
cmp
std
cltd
sbb
loope
imul
nop
aaa
shrl
cmp
jmp
xor
sub
fdivl
xor
add
push
xor
push
and
or
pushf
ja
push
sub
pop
in
scas
lea
dec
xor
xor
xlat
cmc
mov
add
cwtl
inc
sbb
iret
iret
dec
xor
frstor
pop
pop
js
or
sbb
in
mov
push
sbb
loopne
adc
mov
xor
mov
rcrb
cmp
push
add
xchg
arpl
cli
and
in
adc
push
bswap
fucomip
push
negb
fnclex
or
adc
mov
sbb
fdivs
orb
push
and
xchg
jmp
gs
js
jl
jmp
pop
imul
xchg
nop
leave
fistpl
dec
mov
in
test
mov
mov
mov
xor
push
or
sarb
in
cmp
lret
xor
add
jne
daa
sar
shr
jle
hlt
fwait
mov
cmp
jg
out
and
mov
lock
and
data16
mov
imul
dec
std
cmp
push
mov
push
dec
push
dec
cmp
in
roll
dec
std
std
push
mov
push
sub
lock
mov
sbbl
mov
mov
fdivs
fs
dec
pop
sti
dec
lods
rcrl
imul
sub
int3
push
cs
cmpsb
lock
bound
dec
cs
or
mov
mov
jp
jo
arpl
xor
sbb
jae
jns
mov
je
imul
pop
loop
js
test
sar
imul
clc
sbb
insb
pusha
lret
xlat
pop
cmp
jo
out
lea
dec
jno,pn
addl
xchg
pop
jmp
mov
jbe
sub
cmpsb
shll
fnstsw
add
mov
out
cltd
jecxz
or
leave
dec
sub
jge
pop
mov
inc
imul
enter
fidivrs
xchg
rolb
jbe
lcall
jecxz
mov
fwait
cwtl
pop
jne
sti
cmpsl
scas
dec
lods
stc
adc
xchg
xchg
jnp
add
imul
mov
xor
jmp
mov
sbb
sub
movsb
mov
adc
jo
inc
loopne
jne
int3
jns
pop
or
push
std
mov
or
mov
fldl
jne
mov
fdivrs
pushf
lret
and
mov
adcl
jg
xchg
mov
mov
add
cmp
mov
lds
fcomp
mov
or
and
and
movsb
arpl
xchg
push
orb
mov
daa
xlat
bnd
mov
test
xchg
and
int3
dec
mov
push
ret
sbb
jno
or
cmpsl
add
ljmp
hlt
shl
imul
hlt
sub
push
notl
cmp
dec
xchg
push
sub
sub
sbb
ljmp
rcrb
cmovnp
sbb
dec
outsl
dec
aam
aaa
dec
and
adc
inc
ret
and
xlat
mov
fwait
pop
imul
jo
pop
mov
and
out
lahf
loope
jnp
xor
in
pop
faddp
aaa
mov
inc
inc
and
sub
cmpsb
jae
sti
inc
cld
adc
stos
push
loop
dec
and
stc
repnz
inc
loope
xchg
xchg
lret
xchg
sbb
sub
dec
and
add
fistl
inc
jo
dec
hlt
sbb
fs
imul
lock
inc
cmpsb
dec
xlat
jl
or
es
cmpsl
cmp
out
adc
cltd
mull
aam
pop
jecxz
ds
and
xor
cld
pop
adc
push
iret
scas
mov
and
mov
xlat
ficomps
test
inc
loop
aas
jae
cmc
push
or
lods
add
js
arpl
dec
adc
push
arpl
cmp
mov
test
push
pop
cmc
cs
push
mov
loope
popf
les
jns
loop
arpl
push
adc
adc
hlt
int
push
js
lods
cwtl
ljmp
dec
mov
lahf
mov
dec
push
lds
dec
pop
movsl
adcb
xchg
xchg
jae
cmp
sti
sahf
js
sti
faddp
xchg
outsl
cmp
testb
leave
popf
shr
fsubrl
or
jb,pn
das
or
out
neg
movsl
push
mov
fcompl
jnp
loope
ret
ret
inc
rcrb
pop
pop
aam
call
jbe
dec
cmp
fildl
lods
out
aaa
aaa
pop
mov
xlat
shll
mov
addr16
pop
fwait
mov
dec
add
sahf
dec
fbld
sarb
idivl
adc
aas
xchg
sti
add
mov
push
call
pop
lods
or
pop
inc
repz
mov
sbb
push
mov
mov
repnz
inc
lods
outsl
scas
das
add
mov
in
sbb
arpl
std
xor
inc
fstpl
aaa
loopne
out
gs
xchg
sub
mov
into
aaa
fisubrl
popa
cs
arpl
jl
push
inc
sbb
shrb
ffreep
pushl
jne
push
inc
push
lods
adc
bnd
addr16
push
test
cmp
aam
imul
push
test
nop
mov
sarl
jmp
jl
scas
sbb
das
mov
cld
push
hlt
mov
rep
pop
std
jo
int3
push
andl
xor
testl
xor
and
and
inc
dec
cmp
loop
jno
push
xchg
inc
dec
jle
pop
sbb
fbld
js
cli
mov
dec
push
cmc
dec
add
mov
jo
int
fsubs
lds
adc
movsb
mov
nop
lret
adc
cs
or
cwtl
xor
lret
mov
stos
in
cmpsl
ret
out
and
push
out
aad
pop
cld
or
and
fstps
inc
push
sti
or
xor
xor
pop
xchg
push
lock
push
repnz
jbe
mov
sahf
sub
jo
icebp
push
mov
icebp
xor
test
jbe
inc
fldenv
and
rorl
ror
add
mov
mov
xchg
push
lea
call
cmp
sbb
sbb
leave
jecxz,pn
mov
paddb
sbb
inc
push
cmpsb
test
lahf
xchg
hlt
xor
call
add
cmp
jb,pn
aas
fwait
inc
out
incl
test
insl
enter
je
xor
out
mov
in
mov
adc
xchg
add
cmp
ficompl
jg
in
dec
repz
rcrb
insb
clc
mov
cltd
and
jecxz
rorb
mov
add
adc
jg
imul
xlat
sub
mov
inc
in
js
xchg
rclb
pop
scas
cld
mov
int3
jae
stos
mov
stos
xchg
push
lea
cmp
pop
orl
xchg
jmp
mov
mov
jl
sysexit
rorb
in
rclb
mov
rcr
dec
arpl
fnstenv
test
leave
jmp
inc
rolb
mov
test
test
mov
push
or
push
pop
sub
or
int3
loop
xor
xor
scas
repz
fadds
mov
inc
inc
jl
xor
xchg
mov
cmp
daa
or
sti
jbe
jecxz
sbb
jno
sbb
pop
mov
adc
rcl
and
push
mov
push
jecxz
roll
popa
mov
sbb
and
adcl
cld
out
inc
adc
lea
push
xor
cmp
xchg
mov
sbb
adc
insb
sub
adc
lods
jnp
ror
and
dec
cmc
adc
push
push
add
test
pop
rcr
shll
je
fcoms
stc
loope
movb
cmpl
insb
dec
vphadduwq
cmp
les
es
add
mov
add
mov
scas
popa
inc
ds
or
int
cltd
lret
dec
inc
mov
or
sbb
es
enter
jne
daa
mov
cmp
lahf
add
scas
inc
pop
and
fdivr
sbb
mulb
sub
mov
out
fs
sbb
add
and
dec
into
adc
xor
jae
mov
xchg
dec
cmp
sub
std
ja
push
jg
rcll
sub
cmpsl
xchg
adc
xchg
jae
mov
or
mov
pop
lds
push
fbstp
bound
les
mov
dec
cmp
or
cmp
jl
jge
xor
xchg
ret
push
inc
outsl
imul
pop
and
mov
in
push
push
sub
pop
fisttpll
ss
iret
cmp
lods
jp
ret
clc
lcall
lahf
ljmp
sbb
push
cmp
pop
adc
iret
sbb
lret
je
popf
cmp
mov
xchg
sub
inc
jmp
sub
mov
fimuls
mov
and
cwtl
subb
movntq
mov
scas
cli
mov
test
imul
jo
inc
roll
leave
adc
mov
xor
sbb
out
push
leave
jg
out
out
out
ret
xchg
in
outsb
push
mov
mov
test
movl
in
test
jne
repnz
into
lret
loop
adc
pop
and
inc
fwait
in
movsb
jns
popf
pop
jp
and
mov
mov
std
pop
je
sub
popfw
push
mov
xor
pusha
sbb
int3
jge
clc
pushf
xor
and
xchg
repnz
outsb
mov
jmp
cltd
push
or
adc
cltd
fdivs
add
and
mov
mov
sub
jl
cmpsb
sub
loope
cmp
xchg
hlt
in
jmp
sbb
imul
jmp
sub
das
enter
pusha
mov
out
inc
imull
mov
mov
inc
xchg
xor
sti
sub
mov
sub
xor
add
pop
ss
pusha
cmp
nop
ja
or
fwait
jno
jo
das
push
cmc
dec
mov
xor
lods
push
xor
jl
out
das
je
and
inc
mov
rorl
fcmovnu
xchg
into
xor
int3
ja
test
daa
pop
ret
cwtl
rcrb
shrb
cwtl
lods
loope
mov
fdecstp
pop
jmp
lea
fwait
mov
jns
in
adc
insl
loop
add
aaa
or
pop
lods
fidivrl
sarl
ds
jbe
imul
jns
das
addb
negb
test
aas
negb
or
inc
gs
dec
outsb
xor
lods
and
push
mov
test
add
adc
bound
clc
dec
mov
pop
aaa
loope
stos
jnp
xor
adc
and
popl
divb
loopne
into
std
imul
or
cmpsb
orl
fistps
xor
xchg
icebp
icebp
cmp
fisubl
in
aas
xchg
imul
dec
lds
jp
shll
xor
push
orl
sub
mov
or
and
fmull
xchg
adc
test
test
mov
xchg
mov
fmull
mov
mov
mov
pop
dec
inc
leave
pop
jl
and
xchg
xlat
mov
push
test
and
fisubrl
xor
popf
mov
adc
cmp
adc
inc
out
hlt
pop
ja
xchg
les
adc
enter
test
into
push
lods
mov
gs
movl
stos
jnp
sbb
jecxz
jae
test
arpl
mov
add
jb
inc
mov
int
sbb
push
loope
xchg
jae
in
fnstsw
pop
mov
in
imul
mov
imul
lcall
mov
pop
arpl
pop
pop
cmp
jle
jmp
xor
inc
dec
cltd
test
xorl
adc
repz
or
adc
repz
jnp
mov
mov
cmp
aaa
xor
inc
out
mov
nop
lret
xchg
shlb
xchg
add
int3
incl
mov
mov
cwtl
scas
add
jge
iret
push
sahf
cmp
aas
icebp
test
inc
xor
dec
xor
enter
jnp
loopne
ss
mov
bound
and
inc
das
fsubl
pop
push
out
insb
pop
push
push
outsl
andl
clc
stos
mov
cli
pusha
xchg
in
mov
lahf
popf
dec
dec
xchg
in
scas
in
out
lock
aad
ljmp
dec
and
xchg
popl
imul
in
pop
pop
cmpsb
sbb
dec
lret
imul
xchg
push
es
xor
jp
cld
mov
mov
call
movsl
mov
push
sub
add
adc
loop
xchg
icebp
rcl
mov
cmpsl
jb
or
pop
clc
nop
enter
adc
mov
inc
into
movsb
xchg
ja
insl
jg
leave
pop
pusha
ret
adc
in
mov
fldcw
jbe
add
or
pop
das
into
inc
test
aad
mov
imul
fadds
out
movsb
insb
dec
push
and
arpl
xchg
mov
test
jl
divb
add
das
mov
jo
mov
inc
lret
adc
loopne
dec
jnp
mov
mov
ret
repz
push
clc
adc
inc
mov
cltd
dec
and
mov
jae
fildll
insb
dec
pop
push
mov
aam
cli
pop
cmp
and
mov
push
cmpb
pop
cltd
inc
in
imul
mov
leave
xor
test
cs
pushf
sbb
mov
lret
shl
leave
mov
outsl
xor
sbb
in
data16
out
mov
mov
mov
lock
faddl
int3
outsl
outsl
xchg
xchg
movsb
cmpsl
cmpsl
fstl
mov
movsl
shll
and
add
mov
mov
cwtl
ret
fcoml
sub
sbb
inc
mov
or
xrelease
push
mov
das
ss
mov
sti
mov
in
mov
stc
dec
aam
sub
std
roll
mov
or
imul
sbb
fimuls
inc
lods
mov
fiaddl
xchg
xlat
std
test
stos
sbb
js
scas
flds
dec
sub
push
cld
mov
add
aad
sti
lret
test
or
jg
fistpl
inc
inc
sbb
adc
clc
pop
arpl
ss
or
xlat
and
punpckhwd
push
pop
jo
rdtsc
daa
aam
adc
mov
xchg
faddl
adc
dec
xor
cmpsl
sahf
repz
outsb
fdivl
add
or
incl
aad
pop
pop
push
insb
loope
and
aas
xchg
inc
xchg
cmp
xor
jne
xchg
pushf
aaa
pusha
sti
dec
aad
aad
pop
sub
add
pop
jbe
insl
cmp
ja
pop
mov
push
cltd
jmp
fs
cmp
or
aas
aas
rcrb
std
push
cmc
mov
xlat
jp
in
out
mov
int
push
insl
sbb
test
ss
mov
aaa
push
xchg
bound
icebp
lret
lock
xchg
clc
cli
clc
lret
inc
xlat
ss
jle
int3
data16
movsb
xchg
sub
inc
or
push
int
mov
hlt
adc
jne
add
ja
repz
mov
mov
ljmp
out
stc
mov
jge
and
nop
das
dec
pusha
ja
outsl
addl
je
push
sub
mov
fldenv
cmpsb
xchg
sub
push
je
adc
sub
jge
mov
sub
or
mov
movsl
push
subl
xchg
shll
mov
adcb
rcrl
adc
mov
xor
cmp
test
int3
aad
fcmove
push
lea
in
ret
pop
into
insl
out
cmp
push
mov
xchg
or
pop
mov
fadds
mov
das
arpl
mov
out
xchg
cmpsl
push
pop
aam
fst
xchg
jge
rcll
ss
xchg
jo
fs
mov
inc
push
ljmp
jg
sub
out
stc
and
repz
stos
cmp
jl
cmp
push
sahf
jns
cmp
adc
fbstp
sub
repnz
and
jg
scas
or
and
into
aaa
jbe
push
addr16
les
sub
test
pop
xchg
dec
ret
ret
add
lods
mov
mov
xchg
jp
cmpb
subb
dec
xchg
out
adc
out
mov
out
aas
rcr
mov
push
into
sbbl
leave
xchg
sbb
aaa
pop
fdivl
cmp
sub
cmp
adc
pop
inc
dec
and
popa
dec
repnz
lock
movsl
fs
iret
xor
xchg
mov
add
cld
cwtl
pusha
mov
xchg
pop
xor
cmpsb
jae
cmp
jnp
subb
out
inc
imulb
sahf
jle
xchg
gs
jo
xchg
addb
inc
inc
pop
xchg
shlb
inc
ss
mov
jae
aad
sahf
shll
gs
ret
enter
or
lds
int
or
sarb
push
xchg
gs
mov
xchg
inc
mov
push
test
mov
addr16
ja
data16
xchg
xor
push
out
jae
cmc
adc
sbbb
pop
inc
and
or
adc
sub
mov
push
lret
sub
add
or
cmc
dec
or
pop
add
ret
mov
xchg
cltd
movsb
sub
push
into
mov
daa
pushf
xlat
xchg
loop
cli
in
xchg
shl
int
in
push
mov
mov
push
loop
and
test
cmp
inc
push
std
mov
adc
outsb
movsb
out
rcrb
loopne
jmp
adc
mov
rcrl
mov
lock
pop
mov
and
in
mov
push
test
sub
shll
outsb
mov
mov
insl
scas
push
xchg
xor
xchg
xchg
cmc
jnp
cmp
pusha
in
stos
mov
int3
imul
and
xchg
or
in
mov
pop
lea
imull
add
mov
jmp
push
repz
lods
cld
out
jno
cmp
xchg
jo
pop
stos
push
imul
or
cmc
dec
jne
inc
ss
cld
imul
in
imul
sub
pusha
ror
imul
mov
cmc
xlat
jmp
lret
xor
and
movsl
fldl
xor
cltd
xchg
es
sarl
push
xchg
mov
out
fiaddl
cld
out
push
xor
dec
loope
mov
push
in
cmp
lea
bound
out
lcall
xor
mov
adc
and
lcall
test
ss
test
push
inc
xchg
add
clc
mov
sbb
mov
in
aad
pop
mov
rcr
js
out
jne
sbb
xor
shrb
inc
or
arpl
inc
cwtl
xchg
adc
ds
sbb
jp
mov
cmp
prefetchnta
dec
push
xchg
repz
mov
sarb
jae
cmpsl
fnstcw
push
pop
in
dec
cmp
lds
dec
push
fidivl
cmp
out
mov
lahf
call
mov
cmpsb
sub
sti
xor
mov
push
mov
xor
sarl
jb
outsl
sbb
inc
inc
imul
mov
ja
add
cmp
pop
xor
je
lcall
adc
pop
xor
lret
shl
enter
aam
xor
mov
xchg
int3
je
aas
daa
push
adcb
insb
jae
scas
lods
int3
fdiv
out
into
jne
data16
insl
movsb
push
jo
loop
iret
sub
fiadds
xor
lret
loope
xchg
xor
std
clc
xchg
sbb
pop
pop
inc
jae
pop
jp
inc
lods
pop
dec
out
lods
and
fcmovbe
sub
inc
es
add
jne
cmp
incb
pop
pop
icebp
loope
pop
adc
ror
fstps
sub
jg
dec
pop
jge
mov
in
ja
lcall
and
test
clc
enter
cld
sti
imul
sub
lea
fldcw
outsl
cwtl
jg
sar
push
or
outsb
sub
sub
pusha
pop
cmp
mov
insb
mov
jns
add
push
movsl
stos
cmp
ja
call
xchg
jge
ficomps
or
inc
add
ret
test
pusha
das
adc
pop
jecxz
shrb
scas
ljmp
pusha
sahf
les
das
xchg
inc
add
xchg
in
pop
adc
lock
dec
mov
sahf
and
or
js
mov
in
sahf
mov
repz
jle
test
or
push
ja
ljmp
mov
inc
or
hlt
jge
jle
push
add
mov
mov
fldt
or
push
fisttpl
into
sbb
push
sub
scas
pop
es
mov
scas
adc
orb
inc
add
dec
xor
pusha
pop
cmp
and
jl
loopne
iret
fucomp
scas
push
inc
hlt
cli
sbb
or
jge
orb
lock
xor
aad
movsl
mov
aam
jle
daa
test
push
and
jmp
and
add
ret
cld
cld
and
dec
or
sub
jg
push
jbe
aad
and
sub
xor
mov
sbb
jmp
and
pop
and
insl
add
pop
sbb
jnp
cmovs
cmp
mov
adc
shlb
adc
shll
mov
cmc
scas
or
inc
sub
jo
icebp
fstpl
push
xchg
cmc
lahf
fsts
mov
sbb
dec
and
js
mov
sbb
xor
xchg
sub
popf
dec
inc
or
inc
push
scas
and
int3
loopne
movsl
mov
cmpb
inc
std
mov
mov
enter
stos
cmp
inc
in
addl
pop
lds
fbld
bound
inc
mov
pop
popf
es
pop
in
mov
pushf
arpl
arpl
sub
popf
xor
pop
mov
xchg
ficoms
sbb
inc
adc
sub
cmc
inc
sbb
loope
int
mov
ja
loop
test
dec
inc
fisubs
jp
xor
adc
mov
pop
jae
sub
je
jmp
push
sbb
repz
inc
cmp
arpl
pop
jns
mov
jl
jmp
add
xlat
out
or
and
imul
in
push
fbld
leave
add
jae
repnz
cmpsb
dec
add
clc
mov
lds
pop
add
add
mov
push
mov
pop
fistps
ror
int3
push
lcall
shl
cmc
ror
arpl
sub
and
cmp
mov
pop
adc
mov
daa
push
repz
jno
lods
loope
repz
addr16
cmpsl
or
mov
cmp
jg
inc
sbb
push
cmp
into
xchg
mov
imul
sbb
loopne
sub
das
fldenv
shrb
pop
leave
fistl
pop
xlat
ret
push
ljmp
sub
adc
leave
movsl
aaa
mov
adc
sbb
sub
cwtl
fisubrs
and
push
jmp
subl
jmp
sbb
mov
icebp
pop
sbb
jb
and
sbb
insb
adc
jno
xor
dec
int3
or
lods
mov
call
shll
sbb
hlt
jl
pop
dec
loopne
incb
dec
push
or
mov
scas
gs
ja
jo
dec
push
test
pop
inc
adc
les
aam
fimull
and
pop
xlat
mov
dec
pop
ret
fisubl
in
add
jnp
xor
mov
jb
addl
popf
lret
xor
sub
cmpsb
aad
ror
dec
adc
xchg
mov
mov
lods
repz
jbe
ss
lods
mov
or
out
jmp
cmc
mov
mov
mov
mov
push
pop
add
ljmp
into
scas
gs
sub
cmc
das
out
sti
mov
add
f2xm1
cmp
cmp
iret
les
ja
imul
pop
fs
mov
add
jbe
in
je
or
lock
jecxz
cmpsl
jnp
mov
mov
test
xchg
int3
adc
jp
in
jp
xchg
dec
xchg
dec
push
or
aam
mov
or
lcall
mov
movsb
push
mov
or
sub
addr16
rcrl
enter
jnp
pop
push
fs
jne
adc
sbb
cmpsl
mov
test
pop
in
cmp
add
scas
outsl
sti
daa
cmpsb
inc
sub
mov
int
add
js
insl
repnz
int
xlat
sti
loope
sbb
iretw
lock
pop
gs
add
les
add
out
jbe
fisttpll
sti
pop
std
mov
pop
jno,pn
mov
or
dec
fstps
pop
push
adc
mov
mov
cli
sub
jae
pop
popa
mov
cltd
out
test
xor
fistps
xchg
jge
xchg
out
test
je
cmp
inc
rorb
lret
out
and
inc
stos
xor
push
sbb
and
xor
cmp
test
or
add
mov
sarb
inc
push
pop
mov
inc
jle
xchg
adc
dec
xor
inc
xchg
fimull
sbb
mov
cmp
imul
inc
jg
inc
cs
mov
inc
pop
popa
rol
mov
mov
dec
mov
adc
or
xor
and
or
and
mov
or
mov
add
arpl
call
sar
xchg
sub
call
loopne
stos
push
jge
es
xor
jle
push
xor
dec
mov
imul
push
jmp
mov
rol
or
mov
fists
aaa
dec
mov
jno
add
mov
int3
inc
cmp
adc
scas
mov
xchg
mov
and
jbe
pop
popf
imul
jb
push
mov
xchg
fnstenv
sub
jmp
roll
xchg
dec
mov
jmp
dec
sbb
daa
vcvttss2si
push
jb
stos
sbb
push
adc
cmpb
inc
inc
cwtl
es
lods
mov
dec
bswap
add
jo
ss
xchg
dec
pop
das
es
push
nop
and
xor
lahf
leave
xchg
sub
icebp
lahf
ret
push
dec
add
jmp
out
mov
jp
into
icebp
xchg
pop
div
repnz
pop
aas
movsl
mov
imul
aas
mov
sub
or
popf
xchg
in
jl
add
mov
jne
mov
sbb
xchg
add
repnz
mov
jns
dec
or
test
sbb
movsb
cmp
sub
cmp
sahf
fdivrs
dec
pop
cmp
sub
mov
loopne
mov
sub
jnp
leave
lock
lcall
inc
lea
sub
movsl
xchg
imul
clc
lahf
xor
arpl
xor
into
xor
cmp
ss
sub
xor
pushf
pop
cmp
push
into
push
jecxz
pop
roll
sub
sub
sbb
ss
enter
test
call
sbb
xor
mov
mov
cld
jle
xchg
sbb
pop
pop
add
cmp
rorb
popf
inc
pop
lods
sbbb
daa
jno
daa
jmp
test
dec
mov
mov
and
jmp
and
cltd
stos
mov
inc
mov
shll
das
cmp
int3
es
cmpsb
jnp
mov
rcll
and
pop
sub
fisttpll
cs
fwait
mov
lcall
inc
scas
sbb
addr16
fsts
hlt
inc
dec
dec
lods
ds
loop
or
mov
push
stos
xchg
popf
out
testl
jb
popa
adc
cmp
outsl
arpl
adc
out
lods
push
pop
cmpsb
aaa
push
add
sbb
mov
test
sub
push
lcall
push
pop
sbb
mov
xchg
aam
dec
push
pusha
aad
adc
pop
sub
inc
jno
inc
push
es
push
pop
jne
fwait
mov
sahf
mov
mov
test
aad
cmpsl
push
out
outsl
xor
insl
mov
sar
aaa
nop
mov
aad
sub
sub
sub
outsb
das
xchg
lcall
jle
aad
adc
xchg
add
stos
incb
pop
pop
fdivrs
loope
lcall
sub
sbb
ljmp
or
repnz
sub
fdivrp
pop
sbb
popa
out
push
jb
dec
jl
pop
rclb
lret
icebp
into
loopne
add
xchg
adc
inc
jnp
pushfw
outsb
leave
lea
insb
jns
out
mov
xor
fucomp
sub
inc
mov
stos
mov
or
jp
into
adc
mov
inc
cmp
lea
dec
rorl
add
add
push
mov
leave
dec
insb
stc
iret
sbb
rorb
iret
mov
aas
cmpsb
loop
clc
mov
sub
fcompl
dec
loopne
push
jne
in
test
mov
mov
jns
pop
cmp
and
xchg
jmp
sbb
outsl
sub
sarb
mov
cld
dec
call
imulb
and
mov
cs
xchg
cmp
xchg
imul
xor
xchg
cmp
cmp
int
aaa
ret
popf
mov
lds
pushf
bound
mov
jno
xchg
mov
adc
in
mov
pop
xchg
push
lods
mov
test
cwtl
stos
add
pop
xchg
mov
jecxz
loopne
xchg
add
fwait
repz
clc
lods
and
or
cmc
xchg
gs
fimull
and
push
icebp
test
faddp
test
stc
mov
jb
mov
pop
xchg
add
jbe
sbb
xchg
push
adc
in
jmp
pop
stos
and
mov
lret
dec
les
adc
and
test
lock
push
lret
cmp
pop
gs
xor
xchg
clc
cwtl
movsl
jle
idivl
push
inc
pop
mov
inc
lods
sahf
pop
bound
xchg
cmp
fisubl
push
pop
mov
add
push
push
shrl
inc
out
push
add
xchg
mov
bound
insb
xor
loope
aam
dec
mov
lds
jae
mov
push
andb
inc
mov
sub
add
cmp
adc
lock
push
add
xor
cmp
pop
sar
jl
cmpsb
test
leave
mov
xchg
es
std
divb
repnz
jb
in
pop
daa
divl
jp
bound
in
push
fsubrl
aam
ja
xor
aad
mov
and
ret
movsl
mov
jno
jo
ds
jmp
push
sti
popf
sbbb
lret
mov
lcall
sahf
xchg
fiaddl
push
cmp
mov
test
notb
imul
push
fwait
int3
jge
into
push
add
or
sbb
dec
sub
push
mov
add
popa
jge
pop
dec
xchg
cmpb
mov
mov
rolb
jmp
sub
and
int
in
jbe
cvtps2pd
insl
or
push
in
and
jo
hlt
add
mov
add
sub
push
inc
lret
loop
idivb
push
subl
jne
and
xchg
push
test
stos
add
sbb
lds
mov
adc
stos
inc
pop
dec
cmp
pop
loope
inc
cmp
sti
sar
cld
adc
cmp
sti
sbb
data16
ret
movsb
sarl
pop
mov
xor
pop
push
xor
or
adc
push
das
lods
insb
and
or
sub
outsb
push
xor
sub
mov
pop
jne
jb
add
loopne
int
add
shll
pop
xor
jmp
ficompl
ret
nop
push
bnd
out
dec
inc
mov
sub
pop
movsl
insb
or
dec
sub
sbb
cmpb
movsb
cmp
lahf
lret
int
sub
xchg
js
mov
ret
dec
jg
dec
lcall
shrl
mul
dec
andb
aas
out
mov
sbb
aam
mov
cmp
and
cmp
sub
adc
test
sub
mov
out
sbb
aaa
xor
in
cs
lcall
sbb
and
add
arpl
xor
cmp
xor
test
outsl
out
mov
jle
push
dec
test
or
lcall
xor
mov
int3
and
fxch
inc
mov
pop
call
xchg
pop
push
mov
mov
fwait
xorl
jbe
gs
dec
push
aad
pop
rcrb
sub
inc
ss
or
out
filds
enter
pop
sti
and
jge
mov
add
loope
mov
jmp
and
ret
pop
movsb
mov
jl,pn
push
test
jle
or
std
shrb
add
addr16
cmp
dec
and
and
xlat
iret
hlt
sub
inc
fdivl
mov
ret
jp
mov
push
jae
pushf
cmp
push
xchg
pusha
cmp
ffree
or
xchg
jl
popa
add
imul
and
lret
jmp
incb
mov
pushf
cmp
ficoms
and
push
ret
decb
shll
out
sub
std
das
mov
pop
in
out
cltd
adc
fs
ret
push
push
outsb
gs
dec
mov
jge
xchg
lcall
mov
xchg
shlb
jmp
rcr
cmp
into
sub
jge
add
repz
faddl
ret
sbb
ss
push
jns
xor
cs
into
outsb
scas
adc
bound
inc
mov
push
insb
cwtl
sbb
mov
int
jns
fistl
push
rolb
xchg
add
pop
cmpsb
mov
sub
sub
lds
xchg
in
ret
push
cmp
sbbl
and
cmp
ret
shrb
xchg
int3
inc
mov
sub
jnp
mov
sub
cmp
push
out
xor
loope
mov
fldenv
push
cmp
iret
sub
mov
push
jae
or
mov
aad
mov
cld
mov
xchg
jb
int
imul
push
pop
aam
xor
out
cmp
lahf
imulb
xor
xchg
xchg
cmpsb
xor
test
fists
in
es
add
xchg
std
lock
cld
divb
fmulp
xchg
xchg
test
fnsave
xchg
scas
mov
daa
loope
mov
fwait
jmp
sbb
cli
pop
shl
stos
xor
mov
fadds
shlb
inc
jecxz
dec
push
test
mov
mov
add
cmc
xlat
pushf
es
in
daa
daa
or
pop
rorb
push
and
je
mov
mov
in
pop
xor
mov
mov
mov
mov
sarb
nop
cwtl
sbb
lahf
mov
stos
mov
sub
push
xor
lret
sub
inc
pop
jecxz
cli
or
stos
mov
and
insb
push
mov
dec
mov
inc
push
jmp
movsb
lcall
add
cltd
shll
or
inc
sbb
mov
cmc
std
aaa
fiadds
jo
cmp
repz
loop
and
les
push
gs
out
fcoml
mov
add
popf
popa
xchg
pop
imul
sbb
adc
mov
add
lcall
fadd
xor
push
cmp
je
push
cmpsb
out
jecxz
clc
lea
icebp
mov
xchg
arpl
push
jge
pop
mov
xchg
mov
cmp
outsb
sar
insl
enter
cmp
fiaddl
fwait
mov
rclb
lahf
lret
and
add
pop
repz
js
addr16
push
gs
pop
mov
push
dec
fs
shrb
into
xchg
in
insl
lahf
pop
dec
rcrb
fdiv
int
mov
cmpsl
cwtl
loope
fcmovne
scas
mov
gs
mov
lret
xor
das
call
je
push
pop
rcrl
mov
sti
into
js
loope
out
sbb
mull
pop
jg
jl
stos
lret
mov
sahf
push
mov
dec
pop
and
mov
lret
push
jmp
out
lret
mov
bound
add
sbb
xor
lret
jge
dec
divb
aad
sar
inc
sbb
lock
cmp
fs
adc
fwait
bound
mov
or
cs
jl
out
rclb
mov
add
push
loopne
and
aad
mov
sti
imul
adc
scas
rcrl
cli
pop
dec
cmp
sub
or
pop
gs
mov
rorl
fadds
jle
pop
aad
mov
inc
push
adc
rol
mov
or
test
sahf
jg
push
pop
xor
mov
outsb
dec
jb
aam
pop
sub
int
cmp
dec
lea
lret
pop
sbb
or
pop
inc
shrl
jo
sti
addl
push
inc
fsubrs
and
sbb
xchg
test
jl
out
xor
sbb
insb
pusha
inc
flds
js
mov
and
mov
cmp
pop
out
fdivp
xlat
xchg
inc
xchg
jl
inc
les
push
subb
and
push
repnz
push
xchg
testl
mov
stos
js
lods
mov
movsb
push
sbb
test
stc
push
mov
popf
push
mov
mov
mov
aad
add
pop
sahf
in
pop
test
testb
mov
jecxz
cld
test
push
scas
pop
nop
sub
ss
and
sub
push
hlt
xchg
ret
adc
add
jg
out
cltd
inc
inc
out
call
out
mov
repnz
mov
clc
and
test
mov
mov
pop
mov
fwait
aad
sub
or
dec
inc
cwtl
std
jbe
divb
je
lods
cwtl
in
fnstcw
xor
in
mov
add
pop
test
loop
cmpsb
daa
mov
mov
mov
inc
lret
mov
cmpsl
movsl
test
je
sub
sub
pop
mov
mov
jmp
mov
cmpsl
int3
cmc
call
rcr
xchg
cmp
mov
popf
jno
lret
xchg
xchg
lcall
dec
cmpsb
int3
sti
pop
outsl
xchg
sbb
aad
xchg
jae
pop
inc
cmpsl
adc
shll
testb
inc
clc
push
in
ljmp
cltd
pushl
mov
sbb
push
rcr
push
insb
xchg
movl
inc
sub
push
lret
repz
mov
dec
subl
in
je
iret
out
push
loop
inc
outsl
sti
mov
cmp
mov
mov
movsl
push
push
mov
daa
test
and
aad
jge
int
dec
mov
mov
sub
cmp
xlat
repz
cld
stos
pop
in
cld
dec
cltd
orb
or
jmp
negl
and
mov
mov
lds
into
dec
push
and
xor
daa
popa
or
out
ret
adc
pop
dec
pop
xor
outsb
pop
xchg
mov
jmp
sbb
cmp
in
js
iret
pushf
pop
sub
mov
adc
dec
daa
inc
adc
adc
sub
push
mov
insl
inc
inc
mov
imul
add
mov
cmp
je
les
aad
xchg
push
inc
cmpsl
aaa
sub
mov
pop
push
stos
pop
popa
in
cmp
shrb
pop
lret
test
push
out
jmp
insl
or
cs
xor
imul
ljmp
pop
mov
daa
addr16
adc
cmp
int
das
nop
aam
pop
data16
roll
sub
pusha
adc
addr16
mov
dec
sbb
ljmp
dec
andl
adc
test
cltd
sub
xchg
femms
popf
cmc
cmp
mov
cli
scas
sbb
fildl
hlt
loope
add
test
ret
sahf
inc
loope
mov
sub
push
roll
dec
ljmp
pop
and
sub
dec
dec
jmp
insb
xor
add
jp
mov
cmp
enter
xchg
push
outsb
and
je
hlt
lods
adc
pop
mov
loope
sub
mov
jp
je
and
fbld
addr16
cmp
pop
ja
inc
popa
jns
mov
xlat
xor
xchg
mov
subl
cmp
push
mov
fsubrl
mov
pop
mov
lahf
shl
call
jge
mov
sbb
repnz
mov
mov
data16
jnp
mov
stos
push
pop
dec
pop
pop
dec
or
inc
pop
jne
xor
clc
pop
add
idivl
sahf
cmp
add
out
popa
dec
jne
out
adc
jge
and
pop
mov
push
sub
dec
jle
jp
jecxz
fwait
mov
lcall
push
shl
sub
push
fcoms
mov
cmp
xchg
insl
jp
repz
int3
cmovbe
inc
cli
pushf
mov
dec
cmp
hlt
push
adc
xor
sarb
pop
adc
xchg
mov
cmp
dec
jno
inc
call
push
and
sub
add
imul
inc
sti
mov
inc
lods
loopne
sahf
scas
leave
inc
inc
dec
mov
fdivrl
add
xor
inc
mov
dec
in
inc
add
jmp
sub
pop
into
mov
lcall
aam
ds
sahf
iret
sub
fadds
sbb
dec
in
mov
xchg
xchg
xlat
dec
inc
out
dec
xlat
scas
repnz
xchg
fldcw
testb
add
test
cmp
rclb
pop
xchg
cmpsb
aad
mov
js
push
cmp
sbb
repz
dec
pop
into
sahf
loope
fisttps
ret
lcall
xchg
mov
fsin
jb
stos
inc
hlt
rcrl
test
mov
insb
movsl
jg
dec
ja
mov
or
mov
out
out
pushf
loopne
inc
scas
ret
jns
cmp
pop
test
pop
dec
cmp
pop
repnz
push
daa
cmp
push
add
adc
mov
out
mov
fisttpl
ja
rcl
movsb
data16
mov
dec
push
xor
dec
pop
inc
cmp
sbb
jae
sub
popaw
jbe
sbb
jge
aam
ss
test
mov
sbb
mov
xlat
in
sub
jne
jnp
xchg
pop
dec
in
push
into
mov
cvtdq2ps
mov
dec
mov
lock
dec
rorl
mov
int3
sbb
out
dec
mov
pusha
adc
mov
jb
shll
not
xor
loopne
mov
jge
xchg
or
sbb
lret
int
add
and
icebp
dec
push
mov
adc
scas
jne
aaa
int
add
push
and
cli
add
fwait
test
dec
addl
aad
loop
or
jbe
mov
fcoms
lods
ja
mov
popa
jb
ret
clc
pop
mov
ds
dec
fisubrl
test
xor
xlat
aam
sub
fwait
cs
or
loope
or
add
cmpsl
inc
mov
or
or
sub
lea
cmp
insl
mov
push
popf
cwtl
xchg
out
aam
push
or
inc
sub
xor
xchg
xor
scas
fcomps
pop
adc
pop
dec
movsl
push
cmpsb
aaa
xchg
cmp
int3
jecxz
les
mov
xor
and
sarl
add
sbb
psllq
mov
sbb
xor
inc
clc
dec
lock
aad
fs
shlb
stos
xor
or
push
repnz
aaa
adcl
push
xor
pop
fists
es
mull
movsb
ljmp
lcall
outsl
test
sub
xchg
cmpsb
push
test
imull
and
add
xchg
or
arpl
add
jmp
cld
cld
fdivs
inc
lea
add
stos
arpl
popa
mov
pop
or
in
mov
cmc
xor
pushf
add
inc
add
je
xor
pop
cwtl
andb
cmp
outsl
fdivr
sbb
inc
pop
pcmpeqd
dec
push
sar
loop
scas
push
je
lods
ss
and
stos
lock
lcallw
jecxz
in
in
mov
jmp
xor
out
dec
clc
mov
pop
hlt
push
add
dec
inc
inc
inc
fs
inc
ja
lock
cld
sub
push
add
xor
clc
sbb
sbb
pop
popf
aam
xchg
add
mov
arpl
dec
push
les
repnz
or
jecxz
cmp
jno
adc
in
jge
mov
pop
inc
adc
mov
mov
pushf
in
rcrl
and
out
sahf
cwtl
sbb
imul
push
lahf
mov
pusha
cmp
mov
fsubs
dec
and
jmp
outsl
mov
pop
xchg
cmp
cli
cmpsl
and
dec
fs
je
xorl
xchg
int
test
fidivl
leave
sbb
xor
test
out
popa
mov
push
mov
mov
xchg
mov
mov
test
movsl
mov
roll
adc
inc
pop
jp
filds
fldcw
ljmp
arpl
mov
out
dec
pop
fisubs
jle
mov
sbb
mulb
push
mov
xor
lock
fwait
add
mov
adc
cwtl
add
pop
or
fisttps
in
or
dec
ljmp
add
ret
pop
mov
cmp
fcoms
fldt
pop
cmp
shlb
sbb
jg
js
mov
xchg
xchg
xchg
add
out
jmp
scas
push
or
and
ss
mov
mov
in
xchg
push
pop
sbb
ljmp
cmp
xor
push
out
out
push
movsb
inc
cmp
jae
lahf
push
mov
jg
bound
scas
iret
es
fcom
std
movl
xlat
stos
stc
mov
lods
hlt
and
enter
loope
push
movsl
lods
push
imul
inc
loope
fwait
jnp
ss
cmp
dec
aad
mov
and
loope
adc
mov
push
incb
dec
jge
mov
inc
add
cmp
add
icebp
push
xchg
adc
stos
lahf
add
js
mov
mov
adc
test
xor
aad
andb
mov
and
sub
xor
scas
cli
add
sub
adc
jnp
insb
hlt
xchg
jmp
push
mov
js
push
sub
inc
xor
pop
pusha
mov
xchg
jbe
filds
dec
inc
lcall
in
xor
icebp
cmpsl
pop
decb
shrl
jge
mov
pop
jecxz
cmp
pop
fnstenv
rcll
js
movmskps
test
aad
mov
dec
push
mov
fdivrp
xchg
ret
cmp
sub
insl
sub
std
fsubs
jae
flds
ljmp
in
adcl
leave
dec
hlt
sahf
fmuls
mov
dec
dec
idivb
or
aam
insb
pop
sahf
popa
cmpsb
in
xchg
sahf
stc
dec
imul
iret
movsl
enter
mov
shrd
xor
ja
lds
mov
bound
push
push
jmp
jl
out
sub
imull
stos
cmp
enter
in
pop
or
test
jmp
aad
cmp
lret
cli
mov
ss
and
mov
andb
sbb
in
sahf
push
lods
pop
imul
cmp
call
imul
stos
jno
pop
jns
enter
dec
adc
js
fstl
hlt
stos
cmpsl
outsb
dec
lahf
dec
repnz
inc
jle
dec
cmp
repnz
mov
and
int
add
jmp
or
adc
imul
mov
and
cli
cmc
rol
push
pop
lcall
xchg
test
imul
jae
aam
jns
sub
push
shlb
aam
xchg
and
test
fcoms
fwait
sub
push
js
out
dec
and
sbb
gs
incl
xor
sahf
popf
fsubrl
inc
fdivp
sbb
fwait
int3
mul
lret
or
cmp
xor
sub
shl
loopne
test
xor
jb,pn
xchg
movsl
jae
call
inc
aaa
mov
and
dec
sbb
xchg
xchg
cmpsb
fsubrl
push
sub
das
and
fidivrs
repz
or
jnp
je
xlat
ljmp
sbb
sti
in
ds
xorl
cwtl
pop
mulb
shl
rol
ljmpw
sbb
aam
cltd
rcl
sub
xchg
adc
jbe
lods
leave
adc
int
mov
test
xchg
out
push
subl
push
and
dec
xchg
cs
cmp
into
mov
scas
inc
imul
lods
fcoms
cmpl
int
cmc
xor
shr
mov
out
push
dec
mov
fsubrp
add
cli
mov
add
pop
out
push
iret
call
loope
xchg
xor
xchg
mov
cmc
sub
push
push
ljmp
xlat
call
and
jl
loop
in
shrd
pushf
arpl
in
dec
adc
movl
out
mov
notb
jl
iret
mov
stos
test
adc
loop
or
pop
jmp
setns
enter
shlb
lods
int
or
dec
pop
add
jae
jmp
sbb
call
inc
adc
aas
stos
aad
stos
std
xor
scas
scas
pop
in
xchg
pop
add
aas
clc
push
into
movsb
jae
jo
push
scas
pop
mov
dec
shrb
arpl
sbbl
xchg
pop
hlt
int
cmc
xchg
imul
cmp
pop
ds
dec
cmpsb
lret
nop
push
push
xlat
xchg
das
xchg
bound
in
add
std
adc
mov
adc
aam
sbb
adc
sbbl
in
aad
pop
aad
sub
clc
adc
push
push
xchg
in
fdivl
decb
aad
dec
add
sub
dec
add
and
in
mov
sub
sbb
sbb
cmp
movl
or
push
aaa
sbbl
pop
and
adc
sub
xchg
in
aad
mov
daa
int
outsl
ljmp
stos
mov
xchg
jb
sub
jl
jecxz
mov
aad
cmp
push
or
push
inc
repnz
adc
out
jl
or
xor
push
aas
push
jecxz
and
in
xor
xchg
scas
dec
cwtl
outsl
xor
xchg
fimuls
mov
mov
mov
sub
daa
mov
inc
arpl
sbb
cs
out
imull
lods
ss
xchg
or
cmpsl
mov
ret
pop
cli
fldl
lret
shr
dec
ret
inc
add
add
leave
addl
testb
pushf
xor
pop
pop
jle
mov
pop
test
xchg
ret
loope
sbbb
arpl
stos
cli
addl
jno
push
inc
ret
sub
mov
out
lahf
gs
out
dec
sbb
adc
xor
mov
std
and
xor
cltd
addl
mov
insb
adc
xor
ror
shl
sbb
data16
add
pop
add
je
mov
pop
lcall
inc
sbb
call
mov
adc
rcl
pop
add
jns
jno
ficomps
pop
jne
lcall
popf
imul
push
pop
iret
in
lds
sbb
pop
pop
mov
xchg
daa
cmp
pop
pop
ss
pop
cmp
inc
sbb
mov
push
sbb
sub
push
adc
frstor
in
in
dec
aam
pop
iret
dec
mov
sub
mov
sbbl
std
or
pushf
jns
movsl
dec
sub
or
jle
mov
push
and
lea
mov
test
pop
out
cmp
mov
mov
mov
sbb
add
xchg
cli
rol
enter
jbe
sti
fldln2
ficompl
loopne
imul
jns
xor
pop
pop
sub
cmovno
fstl
pop
or
pusha
cli
es
fldt
loop
sub
cmp
mov
mov
mov
xor
jp
out
mov
cmp
pushf
add
ficompl
loopne
jns
shll
ds
in
jg
adc
out
xchg
mov
cli
mov
xchg
outsb
sbb
frstor
fnstsw
shrl
and
and
lea
rolb
cmc
push
sbb
push
jle
scas
jle
add
sbb
out
jl
out
fnsave
cltd
jnp
mov
pop
cmp
loope
daa
aas
cmp
adc
pop
jge
movsb
mov
mov
subb
inc
push
xchg
int
stos
lahf
dec
xchg
inc
mov
outsl
push
xchg
cmp
std
xor
fcompl
cltd
pop
add
imul
fimuls
push
add
inc
movsb
outsb
adc
pop
in
lods
pop
cwtl
lock
fucomp
push
lock
push
adc
loope
aam
and
xor
xor
orb
cwtl
push
stos
cmp
bound
movsl
ljmp
xchg
lock
aam
pusha
dec
sbb
and
dec
or
mov
fwait
stos
mov
cwtl
and
xor
and
aam
mov
sbb
inc
insb
xchg
mov
push
and
sub
imul
jno
cwtl
and
mov
add
loop
adc
popf
enter
inc
jbe
pop
fwait
out
inc
inc
pop
fld
lret
popf
add
testb
jnp
stc
scas
add
mov
adc
in
insl
in
push
lret
cwtl
call
mov
les
loopne
pop
cmpsl
pop
push
leave
std
add
call
inc
leave
sbb
push
aad
inc
hlt
lock
xor
add
imul
cltd
add
mov
loop
sahf
pop
daa
cwtl
cld
push
and
jecxz
push
push
ficoml
jl
rorl
pop
out
jae
pop
iret
rolb
ja
xchg
pop
dec
dec
aas
popa
adc
stos
and
sbb
xor
sbb
les
pop
outsl
sub
sbb
lcall
xorb
ret
mov
mov
and
cmp
push
cmp
sbb
ss
inc
shrl
mov
push
les
add
dec
or
pushf
or
movsl
rorl
imul
jbe
inc
cmpsb
sub
out
gs
add
xchg
aaa
mov
cld
mov
jmp
cmpsb
add
shrb
and
fmul
sub
or
rcll
lock
pop
fwait
ds
pop
mov
xor
faddl
dec
gs
mov
mov
mov
int3
mov
jb
adc
sbb
pop
mov
fildll
ret
add
loopne,pt
arpl
imull
mov
repz
sbb
pop
jl
sub
movsb
sti
or
fldt
dec
jae
cmp
in
or
cli
and
push
imul
pop
xchg
sub
push
cli
and
jae
jle
aas
sub
jmp
inc
sbb
js
sarl
cmp
xor
xor
clc
xchg
adc
adc
jne
cmc
jns
adc
ja
sbb
andl
mov
popf
cwtl
mov
in
jmp
xor
sti
cltd
pop
or
lock
mov
test
inc
iret
push
jne
scas
adcb
dec
sub
pop
stos
shll
stc
cmp
mov
xor
and
aas
jb
jl
pop
movsl
in
xchg
sbb
mov
scas
mov
pop
jae
inc
mov
mov
loop
test
cmp
jecxz
roll
dec
sbb
mull
ss
jo
push
push
jmp
add
push
movsl
push
mov
popf
lds
lods
inc
cmc
and
dec
sbb
pop
insb
push
aas
rorl
fstps
lcall
push
push
jae
flds
les
shll
lcall
pop
inc
mov
in
jae
push
jns
fwait
int
rcrb
shlb
and
xchg
xor
mov
push
jbe
pop
insl
pop
mov
andl
or
loopne
aas
pop
repnz
filds
mov
jnp
cmp
add
mov
sub
inc
xor
ss
ja
stc
and
js
xorb
dec
inc
int
and
in
inc
loop
out
scas
lret
ret
cmpsb
cmp
add
xchg
sti
jnp
lret
jge
pop
ljmp
icebp
pusha
fsubr
insl
out
pop
cltd
test
pusha
mov
and
sub
imul
xchg
cmp
push
mov
cltd
ret
leave
pushf
lds
jo
push
mov
rorb
arpl
shrl
aas
loop
mov
add
mov
mov
xor
call
aad
into
cmp
push
and
fimuls
mov
je
mov
and
jl
cmpsl
sbb
cmp
rol
in
sahf
cmp
out
scas
popa
xor
je
into
int
pusha
hlt
adc
cmpb
push
mov
mov
sub
ret
xchg
das
aas
iret
or
jecxz
shrl
add
mov
xor
cmp
xorb
rcrb
or
mov
pushf
or
xchg
cltd
lea
cmp
mov
jl
pop
inc
push
jmp
jl
pop
inc
aas
xor
mov
mov
push
inc
iret
nop
jno
pop
in
fwait
mov
lock
push
mov
or
pop
pop
add
pushf
and
je
hlt
fcmovnu
push
mov
mov
push
and
in
divb
loopne
dec
cmp
sti
mov
ljmp
add
insl
dec
sub
bound
rol
mov
or
dec
clc
mov
or
shlb
rorb
mov
sbb
sbbb
sbb
popa
jmp
outsl
notb
loop
xchg
pop
mov
mov
outsb
jmp
mov
je
mov
fld
in
arpl
ss
push
gs
es
imul
scas
movsl
dec
scas
pop
pop
dec
mov
mov
mov
or
ficoml
fiaddl
mov
push
in
pop
sarl
cmp
repz
es
idivl
fwait
inc
int3
mov
fnstcw
sahf
sarb
sbb
clc
shlb
inc
out
mov
mov
jns
sbb
and
or
or
or
xor
mov
insl
mov
es
enter
xor
push
xchg
js
mov
sbb
daa
mov
add
rorb
sarb
mov
loope
inc
and
or
shlb
cmp
pop
dec
insl
add
mov
incb
mov
xchg
push
mov
insl
jg
shl
mov
sub
inc
pop
xchg
xor
bound
rolb
ret
aaa
cmpsl
scas
xchg
jb
dec
mov
adc
js
data16
push
sahf
adcl
fsubs
and
sbb
sbb
lea
xchg
leave
dec
add
mov
sbb
jl
jle
sti
jle
ret
sti
ja
lods
daa
test
ss
jnp
cmp
jno
and
cmp
ficomps
cmp
sbb
aam
outsl
hlt
xchg
mov
repnz
scas
jae
adc
fmul
in
daa
jne
inc
cld
mov
dec
mov
xor
stc
int3
clc
push
jecxz
lea
test
jle
cmpsb
and
dec
rcrb
pop
std
sub
pop
inc
rorl
into
xchg
pop
ljmp
sub
es
shld
push
mov
mov
add
shlb
cmpsb
test
rcr
mov
leave
push
pop
fdivp
mov
cld
push
outsb
cmc
fidivs
xchg
mov
pop
and
push
outsl
xchg
push
movzwl
fldt
lods
lcall
les
movsb
cltd
add
imul
jbe
add
cli
divb
inc
lret
pop
mov
fbld
fnstenv
xchg
and
ds
loopw
loopne
sbb
adc
pusha
popf
loope
mov
fcomps
sub
fldenv
and
fs
fistpll
jae
ret
mov
fcoml
popa
test
push
add
inc
rcr
in
lcall
jne
and
push
or
jl
mov
adc
sub
fs
bnd
pop
adc
leave
xchg
cmpsl
movl
adcl
jg
in
orb
sahf
iret
inc
daa
inc
orb
das
lret
pop
test
repnz
sub
out
cmp
addr16
int
add
push
jbe
adc
sbb
xor
sbb
je
and
dec
das
movsl
sub
outsb
sbb
and
sbb
mov
push
add
sub
out
push
clc
add
xchg
loope
sbb
mov
mov
ret
sub
addr16
or
push
rolb
xchg
daa
mov
or
mov
popf
fstps
sbbl
in
gs
xchg
add
frstor
test
scas
scas
nop
fimuls
lods
insb
leave
out
stos
lds
jge
mov
sbb
lret
pop
mov
lds
scas
inc
mov
outsl
clc
pop
push
sbb
scas
jl
dec
xor
xchg
mov
testb
movsl
mov
cmp
inc
sub
in
dec
in
dec
pop
test
xor
inc
das
outsl
inc
ret
lret
add
dec
add
daa
movsb
pop
push
pop
adc
insl
xchg
stos
rorl
adc
and
sbbl
mov
lea
mov
inc
xchg
ret
cmpl
ds
repz
sub
mov
and
insl
fwait
jbe
lods
pop
xor
imulb
pop
or
std
mov
xor
push
neg
xchg
xor
jb
jns
push
push
andb
nop
stos
or
ret
shrb
aaa
sbb
outsl
and
jo
pushf
sub
nop
dec
out
test
mov
add
negb
mov
cmp
mov
aad
das
jo
inc
sub
mov
test
sub
dec
cmpsl
xlat
dec
test
jge
imul
in
daa
addr16
pop
and
inc
sub
aas
pop
into
inc
jl
enter
icebp
ljmp
and
testl
je
test
call
popa
dec
xor
loopne
sub
push
add
rep
test
mov
sub
daa
lcall
or
ss
out
pop
movsl
mov
rcrb
pop
mov
daa
loopne
out
jb
sub
cld
ret
popa
repnz
cs
dec
inc
fistl
outsb
imul
or
inc
cmp
lock
cmc
paddusb
sbb
push
repz
bound
pop
call
ret
inc
add
mov
ret
nop
js
outsl
fs
pushf
dec
mov
or
xchg
inc
mov
dec
xor
adc
pop
ljmp
push
ds
cmpsb
mov
dec
cs
inc
cwtl
dec
out
aaa
cli
lock
rcrl
cmp
gs
outsw
addr16
pop
cs
daa
inc
sbb
jp
es
mov
push
ret
mov
scas
mov
mov
dec
fadd
popf
mov
ret
cmp
lods
pop
cmp
xor
cmp
push
mov
cmp
stc
mov
decb
sub
mov
std
xor
pop
mov
push
in
xor
and
adc
sub
pop
test
arpl
add
insl
xchg
pop
test
cmova
push
mov
sbb
ret
xor
and
mov
push
push
sub
xchg
pop
pop
and
adc
inc
mov
int3
sarl
popf
mov
push
mov
mov
jno
lods
dec
cmp
cmp
sub
inc
out
ja
loop
push
out
insb
xor
fisubrs
pop
sar
js
jmp
adc
mov
or
mov
cmc
pop
pop
fadd
add
jns
jne
xchg
add
data16
push
xchg
fwait
add
jmp
sbb
pop
jmp
sub
enter
lds
sbb
mov
in
inc
sub
dec
fimull
sub
mov
inc
push
jecxz
loopne
jo
cmp
pop
mov
xchg
add
inc
sbb
sub
pop
hlt
out
aad
cs
or
adcb
cmpb
mov
push
roll
sbb
sub
dec
xor
xor
pop
mov
movsb
mov
mov
clc
out
xchg
push
cmp
fs
ret
ds
loop
pop
leave
test
ret
mov
jno
push
jmp
popf
clc
xchg
mov
add
add
rcr
imul
jns
into
and
xchg
adc
mov
cltd
mov
add
insl
push
or
mov
std
icebp
xlat
jmp
mov
hlt
jmp
movsb
mov
push
adc
cmc
sbb
push
jg
add
inc
icebp
lods
mov
push
or
je
cmp
dec
add
and
divb
cmp
mov
adcl
mov
inc
roll
cmpsb
sbb
popa
sbb
jg
rcr
cmpsl
xchg
xchg
cmc
dec
dec
adc
popf
mov
dec
add
jecxz
or
repz
insb
test
inc
xchg
in
pusha
jb
outsb
dec
mov
out
dec
dec
inc
mov
scas
xchg
scas
testl
in
pop
lods
mov
movsb
pushf
cmp
lcall
ret
test
popa
je
mov
jnp
jbe
cld
rcl
push
pop
push
xor
xchg
int
bswap
mov
call
in
push
pop
mov
add
outsl
mov
xor
rcrl
jmp
shll
ret
cltd
or
sahf
lcall
test
ljmp
inc
and
ss
cli
loop
xor
and
aaa
aad
iret
mov
adc
fcoms
test
mov
nop
xchg
popf
mov
xor
outsb
sub
xor
js
fbld
arpl
xor
or
lret
stos
sti
pop
std
push
dec
je
mov
mov
fsub
inc
sbb
mov
das
or
lea
xor
inc
aas
mov
or
adc
dec
adc
sub
adc
movsb
insl
mov
test
push
xchg
inc
adc
popa
cmp
repz
dec
xor
mov
mov
sbb
xchg
or
xchg
or
push
push
sbb
enter
es
push
mov
and
nop
cmpsl
push
mov
mov
insb
add
repnz
dec
sti
xor
mov
lret
or
inc
xchg
mov
ret
push
rcrl
aam
xor
imulb
cwtl
jno
loop
mov
je
jl
pop
cmpsl
aaa
jmp
cmp
inc
icebp
adc
xor
mov
ficompl
leave
push
xlat
cli
add
jbe
adc
adcb
xor
dec
imul
rolb
or
leave
jnp
push
sbb
and
adc
sub
jae
and
lea
jecxz
sbb
bound
add
xchg
test
or
repnz
into
pop
lods
loop
int3
mov
ja
adc
cmpsl
rcrl
cmpsl
setge
and
pop
dec
repnz
xchg
push
pop
pop
das
fwait
inc
xchg
or
sub
and
roll
xchg
lcall
lret
xchg
or
pop
jecxz
gs
jge
popf
nop
adc
hlt
mov
sub
jne
sbb
mov
sub
pop
push
cli
adc
stc
ficompl
or
popf
xchg
test
mov
stos
into
lock
stos
repnz
mov
dec
jnp
loop
dec
xchg
jp
hlt
enter
xor
pop
dec
stc
out
xchg
push
inc
pop
sub
int
jb
fld
dec
sub
insl
or
jge
jae
mov
push
ljmp
adc
mov
js
jb
sbb
cli
out
ljmp
add
sub
add
pop
es
pusha
inc
mov
imul
cmp
fwait
and
cmpsb
jge
xorb
jae
das
cmc
lret
loop
mov
xlat
insb
je
add
fisubs
imul
mov
pusha
mov
pop
pop
cs
lahf
aad
dec
aad
mov
jl
mov
push
sub
repz
xor
repz
jb
jns
add
push
jae
enter
sub
sbbb
xor
call
mov
dec
repnz
xor
sub
and
cmc
in
aam
cltd
dec
or
inc
orb
pop
adc
sbbb
je
insl
dec
xchg
cmp
aad
idiv
addr16
imul
mov
lock
mov
or
cltd
fistpll
push
fwait
bound
xchg
aad
test
jmp
inc
push
xchg
scas
mov
jb
adc
cs
mov
mov
test
push
fimull
test
lods
mov
insl
mov
mov
mov
jp
insl
int
add
cmp
sarl
add
jl
incb
pop
lcall
add
mov
xchg
adcl
scas
jns
add
int
cld
or
lock
pop
out
int3
jmp
xchg
xchg
rcll
sbb
lahf
orl
jb
mov
addl
pop
xor
jns
sbb
fnstenv
pop
cmp
hlt
mov
cmp
daa
dec
adc
aad
jb
sti
pop
jl
fsubrp
inc
vmovshdup
out
ja
cmp
popf
mov
sarl
jecxz
push
cmpsb
adc
cmpsb
fcomip
cmpsb
xchg
mov
and
icebp
sbb
sub
enter
call
and
loopne
lea
je
xor
leave
dec
bound
fistl
insl
push
push
add
ficoms
inc
inc
scas
mulb
add
xlat
arpl
pop
popa
nop
les
ss
push
jp
inc
xor
js
dec
pop
cmp
jmp
cmp
fmull
xchg
ficompl
fs
mov
jg
sbb
pop
push
cmp
sti
xchg
je
adc
xchg
popa
push
mov
imul
or
rclb
out
les
stos
pop
mov
popa
push
mov
jo
cli
aas
sub
pop
addl
push
push
or
sbb
sti
outsl
repnz
lea
push
test
mov
popa
inc
mov
xorb
into
jno
lcall
or
or
push
movsl
out
push
iret
sbb
xor
into
pop
dec
ficomps
es
cmpb
jge
popa
xor
aam
cmp
aas
and
or
cli
dec
imul
jb
imul
les
outsl
cmp
cmp
js
pop
jg
fdivl
sbb
jge
sub
pop
jb
mov
stos
cmpsb
stc
sub
sub
pop
or
pop
xchg
push
cmp
cs
sbb
inc
cmp
pusha
gs
adc
int3
loope
shl
decl
std
popf
ud2
jbe
fwait
sbb
mov
lcall
cltd
mov
stc
enter
inc
repnz
test
jns
cmpb
pop
and
cmpsb
adcb
and
hlt
fsubrs
ret
pushl
jle
mov
and
addr16
lcall
and
loopne
pop
daa
add
jno
inc
insl
cld
iret
inc
movsb
mov
std
xchg
sub
cwtl
ret
pushf
pop
lods
fisttpll
outsb
rcrl
sbb
sti
insl
pop
cmpsl
aad
add
pusha
cs
pop
add
mov
fwait
push
jle
loop
into
shrl
push
mov
nop
in
int3
mov
pop
loopne
and
dec
sbb
jle
repnz
test
stos
popf
rorb
push
inc
dec
shl
sub
wbinvd
jbe
or
adc
push
movsb
mov
scas
sbb
inc
sti
ja
push
lds
cmpsl
adc
mov
dec
shl
in
fidivrl
pop
cs
fisubl
das
cld
xchg
push
in
pusha
mov
mov
dec
popa
ja
cmp
mov
in
mov
cltd
mov
xchg
inc
imul
push
push
out
jb
mov
aad
insb
je
outsb
dec
mov
ds
lret
adc
dec
stc
and
test
mov
inc
mov
int
or
adc
call
push
lret
call
push
mov
lock
pop
cmp
mov
pop
xor
cmp
cmp
nop
mov
into
cmp
std
stos
mov
push
xchg
inc
ja
dec
mull
sub
ret
dec
inc
sbbb
adc
test
mov
mov
push
cmp
movsl
and
xchg
lahf
dec
das
ljmp
mov
dec
sub
jge
pushf
shrl
and
push
loope
aad
imul
cmp
sbb
or
mov
push
outsl
jnp
inc
lds
test
ja
gs
std
pop
in
lock
lds
fildll
and
mov
sub
andl
lret
adc
bound
adc
scas
fldenv
lret
sbb
mov
or
fstp
lret
rcrb
enter
repz
sbb
jp
into
inc
dec
es
adc
push
clc
cmp
out
push
add
leave
mov
xlat
js
int3
dec
jg
push
lcall
pop
mov
mov
mov
inc
ret
iret
insl
xchg
aaa
outsb
popf
test
loop
stos
std
hlt
or
mov
enter
sbb
and
dec
movb
test
pop
mov
add
test
pop
and
aam
or
xchg
decb
jnp
mov
in
filds
pop
test
cvtdq2ps
pop
mov
adc
xor
lods
subb
popa
inc
and
test
xlat
rclb
xchg
imulb
xchg
cmpsb
cmp
aam
sarl
icebp
clc
pop
mov
add
adc
lea
jno
stos
xchg
sbb
cmc
jmp
loop
jns
mov
sbb
mov
in
add
aaa
cmp
fistpll
arpl
and
lahf
pop
push
cltd
in
lret
call
jns
adc
dec
int3
outsb
jo
inc
mov
jo
clc
aas
push
jae
adc
scas
pop
mov
fidivrs
mov
lret
insb
mov
inc
int3
xor
lods
add
sbbb
stos
ffree
dec
adc
push
popa
out
dec
movsb
out
inc
outsl
push
pop
sbb
add
js
test
add
and
sub
cmp
imul
js
push
pushl
cmp
ss
mov
imul
test
int3
push
daa
push
jb
xor
jae
int
jb
inc
dec
fisubrs
roll
rcll
lods
sbb
in
jg
inc
jp
fidivs
fdivrl
lcall
mov
sbbl
sbb
add
pusha
or
adc
jecxz
das
jno
xchg
insl
push
addr16
jl
push
or
push
xor
test
scas
aam
inc
mov
ja
and
push
inc
add
stc
nop
insb
sbb
inc
repz
out
xlat
xchg
add
add
mov
in
mov
xor
mov
jnp
add
movsl
adc
repz
rcrl
cmpsl
bound
mov
sti
in
inc
out
jns,pt
out
add
xor
mov
int3
pop
pop
inc
ljmp
imul
cltd
add
outsl
push
cmp
mov
pop
fs
hlt
push
add
cmc
fldenv
dec
or
lret
xor
das
arpl
or
sarl
or
scas
sbb
add
mov
adc
sbb
in
aad
inc
jno
inc
sbb
int
xor
les
jno
scas
push
mov
jae
lret
adc
stos
out
fisubl
nop
add
inc
addr16
sbb
adc
adc
sbb
mov
cmpsb
in
enter
lret
sub
lahf
shrl
cmp
data16
adc
in
repz
add
inc
xlat
stc
and
dec
jmp
shll
lret
pop
and
hlt
xchg
aaa
leave
loop
push
push
mov
dec
sbb
dec
mov
popa
jbe
lret
iret
out
xor
xor
xchg
push
push
mov
push
fdivs
jle
adc
push
popa
sbb
loop
xor
jo
insb
mov
adc
xlat
testb
xor
cmp
jp
stos
lret
shlb
pop
jno
int3
xchg
push
xchg
mov
jg
inc
xor
adc
add
sub
ret
pop
or
in
incb
and
mov
jp
jp
mov
xor
lret
pop
lds
das
adc
bnd
rclb
cmp
adc
ljmp
subb
rcll
mov
cs
fs
xchg
out
in
bound
sub
les
adc
push
lds
imul
cmp
xor
std
xchg
imul
and
sti
add
icebp
test
fmuls
std
mov
cmpsb
xchg
or
ffree
lahf
mov
cmc
xor
or
cltd
cmp
andb
sbb
push
mov
xor
cmpb
and
cmp
mov
push
mov
cmpb
call
jbe
into
xor
inc
xor
imul
cwtl
jl
popa
imulb
sub
mov
fiadds
or
repz
stc
mov
sti
push
xor
loopne
aaa
cmpsb
cmpsl
rcrb
pop
lret
popf
daa
cmpsl
aad
into
popf
and
lea
jns
add
pushf
mov
jge
fcompl
cld
aas
fidivs
or
jge
std
ss
jnp
or
inc
jbe
inc
idivl
lods
inc
mov
dec
roll
fbstp
mov
sti
inc
subb
xchg
out
sarb
sbb
inc
or
out
incb
sub
cli
lcall
dec
mov
les
sub
mov
inc
xchg
push
sub
mov
ret
or
imul
ret
aas
xchg
or
lret
jle
sahf
imul
adc
xchg
repz
mov
aam
shr
cmc
iret
jne
les
cmp
repnz
inc
inc
jb
mov
and
cmp
jmp
shrb
mov
out
jg
into
insl
xchg
pop
insl
mov
cmpsb
sbb
aad
jbe
mov
mov
jge
mov
data16
lret
mov
push
and
ljmp
test
loope
jg
pop
mov
fisubrs
jecxz
adc
jmp
sub
pop
push
adc
mov
or
pop
mov
movsb
xchg
out
cmpsl
sub
mov
movsb
sbb
or
sti
dec
lods
mov
sahf
mov
cmp
xor
movsb
arpl
xor
mov
mov
xchg
jmp
and
mov
sub
and
dec
xor
cmp
xor
xchg
enter
ret
nop
sub
cmc
fdivrs
in
ret
jnp
mov
mov
ficompl
xchg
xor
data16
lahf
mov
dec
shll
in
push
adcb
jb
repz
data16
mov
mov
xor
cmpsl
bound
ret
movsl
rcrl
test
cwtl
sub
sub
xchg
jno
and
out
push
jb
push
push
mov
hlt
test
jo
pop
popa
fadds
daa
jge
xchg
mov
jp
inc
inc
dec
or
movl
fs
pushf
pop
adc
mov
jl
pop
loop
push
fwait
add
dec
popa
xchg
lea
mov
xor
jo
cmc
pop
ljmp
adc
xor
xor
and
je
test
lods
inc
mov
aam
sub
adc
out
into
pop
in
mov
je
adc
mov
adc
sub
sbb
inc
mov
inc
push
in
movsb
orb
cltd
cmpsl
fildl
jnp
push
sub
or
je
add
mov
inc
test
punpcklwd
ja
pop
ja
cmpsb
lock
int
repz
test
xlat
pop
adc
out
les
lahf
rcrb
add
push
adc
and
call
inc
or
adc
cmp
mov
out
test
out
addr16
outsb
sbb
dec
mov
add
sar
out
push
out
cmp
divl
xor
arpl
add
cmc
adc
cmc
jmp
call
push
push
pop
cwtl
subb
addb
add
test
mov
adc
sbb
addr16
movsb
sub
stc
cwtl
lcall
cwtl
loope
bound
jb
mov
scas
xchg
lahf
sbb
jo
push
pop
jbe
mov
in
gs
call
mov
mov
sub
orl
push
jmp
mov
jb
mov
or
mov
ljmp
test
mov
std
dec
pop
dec
std
js
hlt
outsb
test
adc
jge
push
mov
xor
mov
shlb
xchg
cmpsl
addr16
mov
lcall
jle
lea
cmp
and
stos
inc
pop
out
xor
repnz
and
negl
jg
les
mov
insb
dec
mov
cmp
sbb
aam
jnp
ss
and
push
or
enter
nop
sbb
lahf
cld
sub
dec
or
lret
or
push
mov
add
mov
clc
add
pop
push
cli
push
or
fidivrs
pop
mov
jnp
cmp
push
jns
sbb
and
push
cli
mov
daa
pusha
dec
bnd
stc
adc
or
xor
xor
add
vsubps
loope
jo
xorb
outsl
mov
add
in
mov
aaa
push
push
fs
mov
roll
pop
mov
push
repz
inc
push
cmp
shl
out
dec
fs
loopne
jno
lods
sbb
lret
lea
xchg
mov
scas
sub
cwtl
xor
pop
xlat
pop
lret
add
call
push
xorb
je
mov
addb
rclb
movb
or
rcr
loopne
clc
and
push
cmp
push
fsts
pop
scas
sbb
imul
mov
outsb
fbld
call
push
rcrb
inc
sbbb
pop
mov
add
loope
mov
adc
test
ds
and
add
jecxz
je
in
mov
lret
test
mov
or
lds
js
dec
pop
repnz
cmp
stos
push
outsl
sub
ljmp
xor
mov
add
out
mov
into
hlt
or
xor
adc
imul
int
mov
bound
in
inc
add
clc
ss
out
mov
inc
push
push
xor
or
mov
cmp
ret
mov
shl
add
inc
sub
dec
fimull
sbb
mov
mov
fidivrl
sub
in
popf
popa
call
push
mov
stc
cmp
dec
sub
lret
xchg
test
lods
jmp
jns
mov
dec
cld
push
or
out
mov
mov
jb
das
jp
std
sahf
mov
pop
rorl
es
xchg
mov
mov
stos
xorb
and
out
xor
xorl
xchg
cli
rclb
clc
sub
rolb
ret
push
addl
rorl
add
and
fs
scas
jecxz
mov
dec
rolb
fs
rcl
les
repnz
push
sub
mov
jne
scas
pop
add
movb
scas
fwait
pop
fistps
push
jbe
imul
jmp
cmp
jecxz
mov
pop
xchg
sbb
mov
push
cmp
idivb
add
dec
sbb
cmpsb
mov
jne,pn
mov
jns
jle
or
xor
mov
dec
popa
lcall
lods
pop
test
nop
add
fcoml
ret
push
sbb
mov
sub
jmp
push
inc
idivl
repnz
out
sbb
arpl
sub
aas
frstor
mov
xor
xor
addr16
fdivs
notl
pop
or
mov
je
data16
test
test
orl
aad
mov
shll
negb
xchg
push
in
stc
cmp
mov
iret
cmp
outsb
cmc
add
jo
mov
jnp
aam
call
sbb
cmp
push
jmp
xchg
sub
jle
icebp
insw
sbb
rcrb
jno
movsb
in
lahf
pop
imul
lret
aaa
popf
mov
push
popf
and
sub
adcl
adcb
and
xor
jo
dec
adc
subb
or
or
das
xor
pop
mov
jp
mov
rcl
mov
mov
sbb
sbb
inc
repnz
sub
pushf
lcall
sbb
mov
adc
enter
adc
hlt
nop
or
bswap
and
sbb
insb
rcrl
mov
xchg
push
xchg
jbe
aad
pop
sub
mov
ret
push
cmpsl
fldl
and
hlt
inc
fs
out
daa
pop
mov
mov
mov
add
fsubl
pop
cmp
fsubl
adc
inc
xor
out
shll
out
pushl
enter
andb
lods
and
lea
push
pop
push
roll
shr
lret
addr16
out
insb
inc
or
sub
pusha
mov
fists
pop
mov
push
lahf
pop
daa
sub
sahf
sahf
adc
fistps
xchg
dec
sub
and
int
dec
popf
pop
xchg
add
repz
push
iret
ljmp
cmp
jecxz
jmp
lcall
cs
popf
cmp
and
cmp
lods
aam
push
push
push
in
mov
pop
test
xor
jl
inc
push
pusha
lods
or
fnsave
xor
pop
jnp
mov
xchg
or
pushf
and
pusha
mov
orb
mov
dec
push
push
test
gs
inc
cmp
mov
stos
and
xchg
inc
jnp
scas
ficompl
mov
shll
ret
inc
mov
adc
add
pop
outsl
mov
cmp
std
imul
dec
xor
mov
mov
sahf
outsb
arpl
call
leave
cli
ret
inc
je
cmpsl
sub
in
xor
jne
jmp
shr
mov
mov
mov
mov
xchg
adc
jecxz
out
xor
and
xchg
popa
and
outsb
cmc
jae
les
sub
mov
decb
rcr
aas
or
inc
jb
in
push
orb
and
pop
loopne
rorl
push
inc
mov
push
mov
out
mov
aam
add
inc
jle
sahf
mov
pop
inc
mov
xor
dec
jge
sub
stc
xchg
sbbb
adc
outsl
push
pop
xchg
and
mov
call
dec
xor
fnstsw
shrb
shll
mov
mov
xchg
hlt
jnp
sub
decb
or
and
cmp
and
sbb
cld
cmp
mov
lcall
andb
aad
xor
dec
lods
sub
sahf
inc
rorl
mov
xchg
jno
jecxz
cmp
sarl
mov
aas
xor
sub
and
lock
and
inc
das
ss
mov
sahf
push
mov
out
add
stc
adc
repz
filds
dec
lock
mov
xchg
mov
mov
dec
sub
mov
pop
sbb
add
cmp
and
pop
dec
pop
adc
push
lret
adc
sarb
data16
cli
cmc
in
or
mov
stos
xchg
loop
mov
add
pop
xchg
shrl
sti
mov
add
or
mov
fwait
dec
inc
ljmp
lcall
outsl
icebp
jmp
sar
xor
jmp
pop
sarb
jns
pop
and
dec
xlat
xchg
andb
push
fldt
fnstsw
rolb
add
mov
leave
and
jb
inc
lret
mov
push
scas
mov
push
cmp
and
dec
shlb
cs
jl
cmp
push
jl
mov
push
jg
pop
test
ljmp
aad
adc
xlat
mov
adc
pop
xor
inc
or
outsl
iret
repnz
and
or
mov
jl
sub
shl
push
insb
mov
adc
pusha
inc
pop
jp
pushf
outsb
pop
int
add
fisttps
sub
out
out
cwtl
lret
loope
imul
rorb
jp
andb
push
cmpsl
fwait
test
add
subl
jmp
add
repz
add
push
dec
bound
dec
imul
mov
daa
sub
lock
xchg
jle
hlt
pop
sub
jp
adc
jb
dec
mov
jne
inc
imul
rdtsc
imul
mov
or
sbb
es
out
popf
xlat
cmp
cli
pop
cmp
push
decb
cltd
jp
and
adc
mov
cmp
lds
cmp
mov
cmp
xor
iret
iret
xchg
popf
mov
and
icebp
or
je
jb
dec
add
clc
add
push
cmp
fdivrl
rclb
jne
movsb
xor
xorl
add
push
dec
movb
dec
outsb
sub
or
stos
sbb
add
data16
hlt
mov
cmp
movsl
xor
jmp
jp
jp
sub
pop
adc
mov
fs
jo
orb
aaa
mov
dec
or
divl
mov
cld
and
inc
inc
enter
sbb
inc
jle
sbb
fdivrl
jb
out
cmpsb
sub
rol
loopne
xor
aaa
add
in
cltd
inc
nop
aas
jg
sbb
and
cmpsl
mov
inc
jns
movsl
add
out
or
pandn
sahf
pushf
movb
jns
mov
jge
pop
fwait
xor
push
xchg
ret
mov
xor
mov
inc
mov
gs
or
xchg
mov
aad
sbb
je
mov
cld
jae
jb
mov
push
dec
cmc
dec
cwtl
add
jnp
push
gs
aad
push
jnp
nop
clc
push
push
aas
pop
mov
ss
clc
dec
push
jge
xor
call
mov
clc
pop
lret
sbb
addr16
xchg
jno
xchg
xchg
sub
mov
xor
sbb
mov
push
je
and
dec
adc
and
lea
xchg
xor
mov
mov
adc
jp
cs
mov
fisubl
pop
ja
xchg
in
loopne
mov
mov
pop
fisubrl
and
sbb
dec
jns
fstl
cwtl
hlt
mov
dec
cmpsl
add
shrl
pop
adc
mov
add
outsb
pop
and
add
repz
dec
sbb
mov
lods
out
xor
mov
repz
lret
sti
mov
add
sub
mov
mov
cmp
adc
push
in
mov
insb
andl
shlb
xchg
pop
jb
pop
out
rclb
cmc
cmp
imul
lret
sub
lods
sahf
and
sub
pop
iret
pop
int
jns
pushf
mov
jb
mov
or
lahf
mov
mov
mov
insl
notb
loope
fdiv
push
push
jnp
call
mov
dec
sbb
dec
jne
sub
or
cmp
xchg
inc
lret
cmc
fs
add
jp
dec
loopne
imul
sub
dec
xor
loopne
popa
xor
xchg
dec
mov
int
adc
mov
outsb
ja
cmpsb
and
lcall
inc
dec
std
xorl
test
cmp
cmpsl
mov
fisttpll
or
ret
dec
clc
or
bound
outsl
or
add
jns
das
sub
add
push
pusha
ss
jg
inc
test
cmpsl
mov
scas
insl
repnz
imul
iret
mov
dec
pop
cmp
outsb
or
jae
aas
test
rcll
push
jl
mov
xchg
pop
jmp
mov
fstpt
push
scas
dec
mov
insb
mov
push
loop
add
ljmp
je
pusha
sub
mov
jmp
out
or
or
lock
leave
cld
lock
jb
sahf
cmpb
shll
inc
movsl
daa
and
jge
cmc
mov
mov
sub
sbb
aam
clc
dec
subb
jb
mov
adc
sub
pop
xor
cmc
data16
loope
inc
fisubrs
jecxz
ror
and
xchg
sbb
jb
leave
dec
mov
dec
xor
inc
push
ss
xchg
stc
pop
repz
scas
loopne
call
add
aas
sub
xchg
pop
pop
cmc
dec
jno
add
test
xor
mov
fdivs
sarb
mov
rcll
add
cmp
push
adc
xchg
and
pop
or
jne,pt
push
out
inc
mov
fnstenv
daa
jns
outsb
push
call
psraw
leave
sbbb
sub
imul
sub
cmp
divl
xlat
cltd
cmpsl
dec
xchg
add
jp
mov
movsl
dec
mov
lcall
push
ds
shlb
das
imul
cmp
xchg
ljmp
cli
push
inc
add
pop
or
jl
push
xchg
adc
mov
int3
je
adc
outsb
mov
inc
int3
cmp
or
jecxz
sub
fwait
xor
scas
push
dec
push
cmpsl
lcall
pop
inc
dec
push
push
loop
mov
inc
or
outsl
ret
pushf
pop
and
es
pop
jle
inc
cwtl
sub
cli
add
outsb
scas
pop
and
jae
cltd
push
mov
fadds
stos
xchg
ret
sub
fildl
mov
xor
xchg
jns
test
out
js,pn
and
fwait
add
daa
scas
je
les
lcall
cs
outsb
or
adc
cmpsl
cmp
jae
xchg
sbb
sbb
inc
inc
or
or
bnd
xor
hlt
pop
cli
inc
sbb
xchg
lods
jecxz
adc
arpl
imul
xor
cltd
and
pop
sbb
pop
xor
push
pushf
sub
dec
dec
out
or
push
mov
andl
imul
mov
leave
fisubrl
jle
xor
hlt
push
push
lret
fwait
decb
add
mov
ret
loope
cltd
add
test
dec
mov
icebp
scas
inc
mov
push
ss
mov
add
sti
xchg
sbb
filds
imul
xchg
inc
aaa
push
jbe
faddl
std
xor
push
bound
ja
or
addr16
mov
pop
loopne
or
std
inc
jnp,pt
lret
fnstenv
enter
andb
mov
ds
mov
mov
sbb
test
roll
daa
fiaddl
mov
int3
mov
shrb
aad
cmp
dec
xchg
and
arpl
test
mov
xlat
mov
pusha
shlb
fildl
imul
mov
call
lods
aad
mov
loope
enter
enter
mov
cmp
repnz
std
lahf
xchg
or
sub
jns
test
sbb
pop
cld
shll
mov
cld
xor
loopne
orl
sbb
jmp
js
and
pop
add
and
xchg
pushl
incb
imul
mov
lcall
mov
cltd
mov
push
ljmp
iret
sub
mov
jb
inc
call
addb
fwait
int3
cmp
dec
sub
xorl
add
insb
xor
jb
pop
aam
lods
cmpsl
mov
lods
jo
push
mov
inc
sahf
out
inc
push
scas
scas
into
mov
xor
cmp
mov
test
cmpsl
cli
xchg
dec
popf
push
dec
cli
cmp
incl
data16
sbb
jb
rcrl
bound
imul
getsec
inc
lock
ret
push
jge
lahf
push
les
inc
add
icebp
pop
mov
daa
cmpsl
xor
pop
testl
jo
inc
or
dec
mov
mov
test
aad
mov
xchg
and
xor
ja
sbbb
ljmp
mov
jecxz
xorb
push
shll
lods
roll
jge
pop
orl
loop
fstpl
shrl
adcb
ficomps
addr16
and
in
fnstsw
test
lret
out
and
sbb
repz
icebp
sub
pop
lods
imul
lods
les
adc
xor
stos
gs
xor
cwtl
imul
jecxz
pushf
push
pop
out
pop
jo
mov
out
mov
fstps
push
pop
shl
push
popf
in
add
xor
add
into
insl
mov
inc
sbb
inc
mov
nop
sub
fsin
ljmp
push
nop
fincstp
cmp
lret
and
imul
xlat
fwait
das
cmp
sbb
std
cltd
mov
into
stos
adc
sub
dec
mov
mov
mov
daa
cmp
mulb
and
imul
je
js
call
or
stc
dec
pop
shll
push
cmp
xor
sbb
xlat
fs
mov
xlat
mov
xchg
push
sbb
lds
sub
sub
xor
nop
cmp
lea
gs
xchg
mov
push
sahf
iret
loopne
xchg
repz
dec
cld
jecxz
dec
sbb
add
pop
into
jl
and
cmp
pop
and
mov
sbb
xchg
mov
and
mov
std
sub
in
adc
ja
xchg
mov
lods
aaa
popa
call
out
mov
lcall
sub
jg
dec
add
fwait
mov
popa
mov
ljmp
jo
and
cld
inc
dec
push
ljmp
xchg
jp
mov
les
lock
mov
and
and
adc
mov
pop
push
out
mov
dec
ds
movsl
leave
loopne
outsl
sub
fsubrs
gs
loopne
sbbl
or
or
push
aas
imul
cmpsb
popa
fs
sarl
shlb
daa
mov
lret
shll
dec
jae
push
xchg
ret
cmp
jg
mov
xor
mov
jmp
cmp
hlt
or
dec
call
repnz
jp
out
and
mov
jbe
lcall
or
xlat
pop
imul
shrl
mov
insb
int
dec
cmp
addr16
fimull
or
xor
mov
movsl
dec
push
mov
mov
inc
push
ficoms
sub
jmp
xchg
push
cmp
popa
mov
sbb
and
fisubrs
cwtl
and
adc
mov
mov
inc
roll
mov
push
xchg
stos
sbb
push
push
cld
or
pop
ja
jno
add
mov
lret
movsl
cld
inc
xor
pop
cmc
xor
shlb
ss
stc
pop
mov
mov
lock
mov
mov
nop
into
add
sub
lds
push
outsb
dec
mov
cltd
jmp
jmp
icebp
pushf
aam
scas
adc
ja
and
dec
sub
xchg
xor
test
mov
or
add
shll
test
add
in
push
pushf
in
je
dec
out
stos
mov
pop
mov
clc
jmp
iret
mov
adc
sahf
loope
adc
pusha
inc
movb
nop
mov
jmp
in
lret
add
xor
sub
pop
add
daa
call
sbb
mov
data16
jecxz
notl
repz
movsl
mov
lods
test
xchg
push
sbb
xchg
iret
mov
xorb
adc
js
mov
test
push
test
fldenv
xor
sub
imul
sahf
mov
mov
jns
cmc
stos
out
filds
mov
push
dec
xor
popa
into
fcomi
pop
pop
mov
lea
data16
scas
adc
xchg
sub
xor
xchg
and
lahf
mov
mov
ljmp
fadd
inc
popf
inc
popa
pop
popa
mov
mov
mov
push
adc
sbb
sub
push
or
adc
or
bnd
xchg
lret
pop
in
xchg
pop
push
movsb
xor
lret
ret
xchg
inc
int
sub
pop
mov
pop
inc
data16
xor
cli
xchg
enter
lods
jae
and
xchg
imul
pop
mov
inc
daa
ret
mov
test
or
aaa
stc
movsl
pop
inc
pop
psrlq
adcb
insl
sub
dec
jo
sub
jae
push
xlat
jge
sub
aam
jnp
daa
mov
inc
fwait
jecxz
mov
xor
gs
xor
pop
leave
jno
arpl
lret
aam
inc
movsb
mov
xchg
mov
gs
outsb
roll
push
je
fs
cmp
xchg
inc
pop
jo
in
lods
jo
popa
sbb
jp
or
jp
roll
dec
xchg
cmp
dec
ficoms
pop
sub
fsubrl
mov
jle
mull
dec
push
cs
push
pop
bound
dec
pop
mov
mov
and
mov
dec
lret
in
bnd
adc
mov
xor
sub
minps
inc
icebp
testl
stos
mov
insb
fists
xor
in
nop
das
jmp
stos
sbb
lea
je
push
pop
push
mov
ret
lea
cmp
sbb
adcb
add
jg
cwtd
inc
mov
xor
lahf
pop
pop
bound
sbb
push
loopne
fwait
int
xor
dec
cmp
sub
fadds
lahf
in
pop
inc
cli
addl
jecxz
fs
imul
xchg
jno
xchg
enter
xchg
dec
out
jmp
cli
xchg
add
iret
fbstp
movsb
mov
mov
xchg
adcb
shll
or
aas
jnp
clc
mov
dec
lea
aaa
imul
cmpsb
sub
test
fcoms
shld
clc
cmp
jo
int3
xor
faddp
test
dec
mov
scas
adc
js
lcall
mov
enter
xor
js
add
sbb
cld
into
xor
ljmp
cmc
cs
cwtl
mov
add
mov
fdivs
push
push
xor
pop
or
mov
cld
push
sub
enter
cmp
in
daa
fsubrl
or
add
addr16
push
pop
je
push
and
fs
outsl
hlt
lods
sbb
pop
cmpsb
mov
sbb
mov
lock
shll
daa
mov
ret
test
add
ds
mov
mov
sbb
jl
inc
mov
adc
sbb
push
sbb
add
sbb
or
sub
and
cli
into
push
cmp
inc
xor
clc
popf
dec
push
cmp
sbb
popa
or
or
fs
repnz
jo
and
push
dec
lcall
insl
loope
push
ja
xor
cli
push
push
test
sub
mov
pusha
ss
test
mov
and
and
lret
sbb
fs
pop
lods
in
out
mov
out
rorl
lds
dec
clc
imul
inc
cmp
mov
scas
dec
inc
lods
insl
fsub
idivb
xor
rol
daa
jmp
inc
or
cmpsb
jge
loope
mov
inc
out
lods
dec
imul
bound
in
in
or
call
sub
cld
pusha
dec
push
mov
jmp
cmp
sub
in
int
jp
loope
rclb
xchg
das
pop
cmpsl
fwait
ss
nop
adc
cmpsb
xchg
and
inc
xchg
decl
push
ss
and
bound
loop
jae
mov
outsb
cmp
and
pop
dec
pop
bound
cmp
mov
scas
dec
leave
xorb
jns
addr16
cwtl
push
add
scas
add
sbb
leave
ja
out
pop
mov
lret
adc
and
fbld
fdiv
loop
mov
jns
add
popa
push
xor
ljmp
in
dec
inc
lods
adc
ret
in
dec
mov
mov
sbb
aas
loopne
mov
cmp
cmpsl
pusha
jle
icebp
jmp
jbe
cmp
aad
clc
outsb
stos
dec
icebp
jae
aaa
jae
push
inc
test
dec
jle
cmp
shl
repz
mov
and
cmp
and
push
xchg
mov
das
cmp
ret
push
inc
ret
or
sub
push
inc
jno
shl
jle
icebp
push
pop
nop
inc
sbb
mov
mull
arpl
cmpsl
cs
or
xchg
xor
std
adc
push
sti
pop
mov
jns
inc
cmc
jl
xlat
and
pushf
outsl
in
aam
add
hlt
cmp
ror
test
bound
add
sbb
jmp
mov
sbb
shll
adc
inc
cmp
pop
rcrl
mov
dec
sub
dec
cmpsl
in
int
mov
lcall
lods
sbb
shrl
pop
dec
ss
aad
pop
adc
fsts
ds
pop
or
cli
dec
lret
and
rorb
and
dec
jns
mov
mov
sbb
gs
adc
jbe
and
xor
adc
xchg
inc
addr16
add
bound
je
nop
jmp
mov
push
orb
insl
imul
dec
or
sbb
mov
nop
push
mov
outsl
in
xchg
pop
int3
cs
xchg
fstps
inc
dec
test
adc
mov
cmp
sbb
lock
inc
mov
sbb
xor
push
leave
fbstp
push
pop
or
adc
push
jae
jmp
ss
addr16
fsub
xor
and
dec
jl
outsb
repnz
inc
rol
test
subb
xchg
jecxz
inc
cli
lods
inc
outsl
stos
xchg
js
pop
out
addr16
icebp
sub
sbb
dec
and
popa
aas
push
cmpsl
ror
pusha
pop
pop
sbb
and
dec
loope
xor
xlat
jbe
movsbl
aaa
mov
sbb
andb
cld
arpl
out
push
jle
lret
or
sbb
cmp
insl
loopne
cli
andb
mov
rorb
mov
xchg
xor
inc
bound
rcr
sub
push
fcmove
daa
xchg
into
push
dec
stc
stos
xor
clc
adc
enter
jae
inc
sbb
mov
lret
ss
imul
inc
stos
xor
ljmp
pop
lds
inc
inc
xor
pop
jmp
jmp
jno
mov
mov
dec
cmpsl
mov
mov
mov
push
pop
cli
xlat
push
jmp
aas
or
and
loopne
and
sbbl
pop
out
arpl
mov
mov
mov
add
jge
gs
out
or
mov
les
fnsave
sbbl
adc
cltd
in
lds
and
pop
jle
jb
mov
std
dec
sub
in
cmp
loopne
das
sbb
ss
ljmp
xchg
icebp
mov
or
xchg
mov
fwait
mov
mov
jno
adc
mov
sti
lea
cmp
popl
adc
jnp
lahf
popf
add
icebp
test
fcomps
aam
or
jmp
add
push
hlt
push
jl
pop
dec
iret
sub
in
xor
nop
fildl
lds
push
mov
mov
in
sbb
sbb
or
hlt
jg
test
mov
loopne
jg
inc
cltd
in
mov
xchg
add
jnp
cmp
push
pop
data16
push
xor
add
sbb
or
bound
dec
js
leave
out
pop
jb
dec
stos
outsb
adc
sbb
cmpsb
outsl
add
inc
ficomps
subb
and
and
xor
out
xor
sbb
mov
cmp
cmp
ljmp
jnp
push
repnz
cmp
push
xchg
lahf
cmp
out
xor
in
daa
insl
fmuls
loop
bound
ret
loop
mov
scas
ja
mov
in
lahf
xor
inc
aam
aas
fwait
pop
outsl
cmc
stc
fisttpl
xchg
pop
dec
fidivs
mov
fbstp
popa
cli
out
sbb
leave
xor
xchg
push
call
inc
fdivl
and
jns
or
ljmp
jns
out
sbb
cld
jp
add
jno
cwtl
sbb
nop
and
pop
fwait
repnz
sub
sub
inc
pop
pop
leave
pop
nop
popa
jecxz
cmp
xlat
dec
pop
adc
fbld
push
test
int3
sub
js
in
fiadds
sbb
cli
sbb
sbb
add
xlat
inc
jbe
fwait
or
pop
loop
lahf
mov
int
es
xchg
int
shll
movsb
xor
or
jne
push
lret
fstl
mov
cmp
out
lcall
dec
mov
orb
jb
xor
add
sti
icebp
aam
xor
ljmp
int
and
cmp
dec
add
lret
scas
sbb
sub
pop
xchg
test
push
xchg
rclb
fnsave
push
leave
cmp
shl
cmpsl
mov
aas
shlb
rcr
mov
add
outsl
repz
int
popa
cmpsl
sahf
pop
xor
aas
and
and
mov
jecxz
jbe
int3
xchg
pop
sub
adc
cld
mov
push
cmpl
add
lret
sahf
pop
enter
push
cmp
popf
daa
dec
add
ljmp
loopne
push
push
and
sahf
add
mov
and
flds
cmp
stos
mov
xor
in
ret
jae
pop
mov
cmp
fdivl
rolb
push
pop
sbb
add
es
sti
and
rclb
subb
pop
add
dec
sub
inc
clc
aas
add
mov
xchg
hlt
loopne
pushf
mov
mov
cld
jge
dec
push
cwtl
test
in
xchg
in
inc
out
out
lea
or
daa
xchg
sar
jb
orl
aam
mov
xor
xchg
inc
cmp
out
jo
popa
movsb
adc
aad
sub
pushl
pop
in
lcall
sbb
outsb
popa
inc
push
test
mov
cmpsb
xchg
xor
mov
mov
cmpb
scas
jo
ja
popa
jle
out
fsubrs
mov
movsl
iret
je
adc
dec
sub
fs
je
jne
sbbl
sbb
out
rcrb
mov
pmaxub
nop
dec
xchg
aam
addl
mov
cmp
and
outsl
sub
insl
xor
mov
jmp
ret
inc
adc
lods
sbb
or
push
cltd
pop
push
xor
jecxz
loope
nop
pop
popf
mov
cmp
pop
test
fisttpl
aas
sub
out
jnp
enter
add
in
into
enter
lcall
sarb
rcrb
sbb
insb
pop
sbb
addl
mov
ja
sub
add
pop
es
enter
pop
add
sub
jns
mov
daa
aad
mov
jle
call
out
sbb
adc
add
sub
cmpsl
xchg
cmovnp
stc
pop
imulb
xchg
fwait
jb
call
fisttpl
jmp
pop
inc
ds
mov
outsb
or
jbe
mov
mov
add
lea
jle
fst
and
xor
loop
adc
out
sub
nop
cmp
xor
adc
out
lret
repz
cli
jge
ljmp
sub
sar
scas
pusha
mov
mov
inc
pop
jb
push
out
repz
fdivrs
andl
jle
mov
and
cwtl
fucomi
push
xor
out
jns
data16
lcall
lds
pop
mov
and
outsl
sti
lcall
movsl
xor
push
xchg
mov
sub
wrmsr
loopne
sub
mov
and
lret
push
fcoms
sbb
fwait
mov
cmp
cld
push
sahf
xchg
xor
lds
fnstsw
lcall
lods
add
pushf
lea
testl
mov
jae
fcoml
shl
cmp
mov
enter
push
test
inc
std
fldenv
and
jg
dec
inc
sub
xor
xchg
push
and
pop
lcall
out
fs
push
addl
pop
in
adc
movsl
cld
dec
push
lret
aad
or
stos
jge
je
mov
lds
outsl
pop
outsb
incb
addb
sbb
cmpsl
xchg
cmp
in
xchg
imul
out
inc
mov
icebp
das
jnp
lcall
dec
xor
std
bnd
dec
mov
sahf
lock
dec
dec
imul
cmpsl
not
leave
dec
jbe
pop
adc
mov
jp
adc
test
pushf
mov
incl
pop
pusha
or
ss
in
adc
pop
mov
icebp
jae
out
cmp
leave
inc
push
inc
inc
dec
or
add
or
fnstenv
or
or
or
imul
xor
out
test
mov
bnd
fmul
or
es
sahf
jmp
enter
push
les
or
xor
test
lea
or
sarl
pop
and
enter
add
rcl
loope
in
out
mov
movsb
fists
cmp
push
lods
xor
insb
scas
pop
test
hlt
cmp
or
in
cmp
pop
out
pusha
enter
and
sbb
lds
mov
dec
fcoml
xchg
fwait
cld
scas
jp
xchg
jbe
sub
add
jmp
sti
jns
insl
repz
cmp
pop
dec
aad
or
mov
pop
sbb
in
call
push
jo
int
lock
xchg
mulb
pop
xchg
mov
fst
fcmovb
cmp
push
or
loope
sub
or
imul
jbe
cli
in
inc
mov
mov
ficompl
sbb
cmp
les
mov
pop
repnz
sbb
test
inc
dec
fmulp
adc
push
push
ret
in
pop
jne
jbe
bound
mov
pop
cmp
ljmp
cmp
hlt
rorl
push
pop
psadbw
ja
loop
lcall
daa
outsl
imul
lcall
enter
fucom
mull
xchg
rcll
pop
icebp
into
in
adc
icebp
inc
xchg
testb
sbb
xchg
or
data16
test
rorb
lahf
xchg
sub
das
rol
mov
data16
pusha
inc
das
push
jg
jecxz
mov
mov
imul
pop
lret
mov
icebp
jg
and
jecxz
mov
movsl
outsb
in
mov
ds
push
int
loope
mov
mov
xor
lret
mov
or
mov
sarl
jnp
fistps
pop
inc
fwait
cmp
ljmp
push
scas
btr
jecxz
icebp
cmp
aam
ret
sbb
fldt
js,pt
sti
lea
xchg
jno
pop
xor
fs
std
inc
mov
push
mov
je
add
test
xor
mov
pop
leave
hlt
ja
shlb
sub
xchg
and
pop
cmp
in
and
jbe
cmp
mov
loope
dec
out
or
outsb
jno
jl
cltd
movsl
pop
pop
mov
lahf
xchg
out
scas
test
ficompl
cmp
ja
cmp
jbe
roll
xor
ljmp
jb
and
cmp
sub
jp
pop
jb
ret
xchg
mov
jge
pop
cld
imul
fldl
adc
pop
addr16
xchg
insb
shll
sbb
lret
cmpsb
push
xor
test
sarl
inc
test
pop
fs
mov
movsl
lcall
in
mov
shll
or
gs
es
jle
shll
in
das
dec
adc
push
mov
mov
scas
ja
mov
fcmovnbe
cmc
int
inc
mov
dec
cmpsl
adc
roll
push
testl
pop
push
sbb
jmp
fbstp
mov
jnp
lds
mov
dec
outsb
and
shll
lds
pop
cmp
inc
lahf
ds
jp
bound
or
xchg
xchg
shlb
into
inc
rorb
push
mov
jp
xor
mov
fs
push
ljmp
xchg
rcr
pop
sub
popa
scas
bound
gs
insb
xchg
sub
into
data16
pop
test
xlat
jg
pop
mov
sub
xchg
fstpl
xlat
mov
cld
arpl
lods
sub
sbb
ljmp
cwtl
lea
icebp
inc
loop
lret
movsb
and
mov
rcrb
mov
shll
fdivrl
int3
icebp
or
mov
mov
jmp
fdivrs
lahf
mov
imull
sbb
adc
inc
rorb
mov
jle
roll
dec
sbb
arpl
mov
mov
test
fldl
jae
sbb
fisttpl
sahf
push
or
and
mov
mov
inc
or
xor
out
push
inc
mov
lock
cld
mov
lahf
push
xchg
dec
sub
dec
enter
sbb
xlat
and
lahf
cmp
jb
in
lcall
mov
test
mov
dec
ficoml
jns
das
sbb
lahf
fsubrp
scas
loopne
add
sub
repz
test
pop
clc
popa
mov
xchg
sahf
adc
aam
mov
inc
mov
sti
mov
dec
inc
xchg
adc
addr16
jns
aaa
dec
sbb
rolb
mov
je
xchg
mov
push
push
incb
mov
inc
mov
insl
cmp
adc
inc
hlt
xor
out
pop
jo
sub
mov
mov
pop
adc
push
push
out
add
push
inc
test
add
push
inc
cmp
cli
imul
cwtl
and
cli
xchg
inc
out
xor
inc
outsl
pusha
fwait
pop
jno
ja
cmp
pop
shll
xor
dec
iret
xor
aas
dec
out
jnp
lods
clc
mov
test
and
jnp
shll
sub
sar
dec
pop
cmp
mov
icebp
sbb
jno
sbb
fisttps
daa
aam
pop
int3
iret
fcmovnb
pop
add
mov
or
gs
jmp
ljmp
clc
cmp
lahf
out
jle
test
xchg
and
out
jp,pn
dec
ja
push
dec
push
arpl
fidivs
mov
inc
out
add
xchg
sub
mov
popf
ss
xlat
dec
je
xchg
inc
xchg
adc
sub
mov
ljmp
or
shl
movsb
sub
or
lret
je
sbb
scas
ret
rolb
insl
mov
jle
cmp
fimuls
aas
outsl
out
push
xchg
lods
and
dec
sahf
xchg
mov
in
clc
adc
push
fsts
je
jle
add
repz
jnp
add
mov
pop
mov
xchg
das
out
push
fisttps
aas
pusha
leave
rcrl
les
cmpsl
sahf
push
clc
scas
inc
cmp
ss
inc
loope
jo
imul
xchg
addl
lret
pop
lea
mov
inc
cmpsb
test
jp
jno
orb
dec
mov
mov
jo
pop
dec
int3
insb
fiaddl
inc
cmp
adc
sbb
mov
sub
in
xor
jb
xchg
ret
mov
dec
xor
scas
call
mov
scas
scas
jg
adc
clc
inc
dec
pop
mov
int3
inc
sahf
lea
lea
jns
fwait
xchg
ret
xchg
cmp
ret
xchg
lcall
hlt
push
nop
lea
ljmp
push
push
xchg
xor
lret
add
gs
pop
cmp
jle
mov
mov
dec
repnz
repz
mov
mov
add
mull
imul
sbbl
rolb
mov
les
dec
aas
sub
jno
fstpt
cmp
lahf
cwtl
and
xor
test
fistl
dec
xchg
test
lods
dec
mov
stos
aam
rorb
clc
mov
hlt
scas
jno
outsl
dec
inc
popf
pop
aad
shll
cmp
adc
mov
pop
cmp
or
xchg
xor
loop
xchg
mov
ds
dec
cmp
jp
sahf
in
mov
enter
jne
cli
popf
dec
test
gs
dec
xchg
addr16
push
fwait
cmp
les
jbe
dec
in
xchg
test
shll
divb
sub
mov
adc
xor
push
cmpsb
in
sbb
popf
mov
lock
cld
xchg
jb
or
ret
mov
xchg
sti
and
xor
fwait
push
inc
scas
scas
fwait
jbe
cs
dec
and
pop
lds
cmc
loope
and
jg
or
or
out
test
fmuls
sbb
push
jne
out
xor
gs
mov
dec
cli
xor
cs
popa
adc
add
adc
and
adc
push
jl
jg
inc
mov
xor
inc
repz
sub
push
sbb
push
fcomps
pop
push
mov
push
fistpll
mov
out
cmp
xchg
push
jae
adc
sub
fcmovbe
pop
cltd
mov
add
cmp
add
call
mov
imul
add
push
shll
inc
aam
into
cmpsl
aas
inc
cmpl
bound
push
popa
xor
pusha
test
dec
xchg
repz
ret
sti
xor
andb
adc
push
lods
nop
inc
inc
sub
addr16
add
insl
xchg
xor
inc
sbb
xchg
sub
mov
cmpsl
popf
mov
hlt
mov
and
test
xchg
or
inc
mov
push
dec
cwtl
dec
mov
call
jge
scas
mov
popa
mov
fwait
test
sbb
sub
lret
ror
fs
cs
test
xor
jp
push
int3
pop
push
xorl
mov
pop
loop
cmp
shlb
pop
das
push
fwait
outsl
push
ds
cwtl
mov
xchg
xchg
aad
bound
inc
xchg
out
mov
mov
xchg
xchg
inc
push
mov
push
sbb
pop
pop
inc
jp
inc
in
push
rorl
je
xchg
push
cmp
int
fimull
jo
and
adc
lods
data16
mov
push
in
push
add
xchg
push
dec
ficomps
ss
lcall
xchg
imul
fstl
scas
addb
test
popf
adc
mov
pop
ds
hlt
out
add
or
xorb
stos
mov
fidivs
jbe
and
xor
inc
out
mov
movsb
adc
cld
sbb
sti
and
test
push
dec
fstpt
mov
faddl
cmp
jae
cmp
mov
fisubrs
ds
mov
mov
addl
movsb
pop
gs
outsb
loope
mov
jno
rcrl
mov
and
inc
pop
inc
hlt
cmp
repnz
sar
incb
jnp
lret
xor
fstl
push
or
std
les
push
iret
jle
bound
scas
jae
int
bt
cld
mov
loopne
mov
in
incb
inc
and
xor
pop
unpcklps
mov
adc
aam
shll
jae
cmp
fmulp
aaa
andl
enter
sub
je
adc
and
sti
sub
cmp
movsb
inc
shrl
mov
or
and
add
cs
xchg
pop
fisubrl
pop
popa
push
pushf
stos
in
fstpt
and
dec
sub
aam
jmp
mov
ds
sahf
pop
inc
pushf
inc
pop
mov
sbb
cltd
mov
clc
imul
xchg
arpl
fwait
mov
daa
jle
push
dec
xchg
cwtl
sbbb
xor
jbe
inc
imul
bound
mov
mov
add
jmp
jle
flds
imul
dec
test
imul
xor
sbb
mov
add
ja
lret
clc
mov
outsl
lock
fildl
xchg
leave
pop
jmp
idivb
xchg
popa
inc
das
and
rcr
dec
sti
sub
ljmp
sti
fucomi
dec
jne
adc
fnsave
mov
cmp
packsswb
lret
jns
pop
sub
cmp
dec
cmpsl
add
and
arpl
subb
mov
gs
xchg
pop
push
sbb
clc
fwait
mov
cmp
aam
jecxz
das
sub
iret
adc
and
bound
loope
or
inc
push
insl
sub
sti
dec
fldenv
popa
inc
sbb
pop
fdivrs
aad
dec
dec
sbb
dec
xchg
scas
test
std
xorl
aas
pusha
jmp
pop
mov
sub
add
inc
sti
mov
int3
adc
xchg
fucom
jns
jecxz
xchg
cmp
pop
sbb
jae
popa
mov
adc
jl
lahf
loop
or
imul
inc
addb
out
xlat
sahf
fidivrs
push
inc
ret
lcall
cmc
sbb
out
jb
rolb
jbe
mov
outsl
jns
xchg
je
and
test
loop
cmp
and
data16
lods
jp
inc
or
jle
std
icebp
xlat
imulb
out
xchg
xchg
pop
adc
mov
cld
add
stos
inc
and
inc
fidivl
ret
xor
cmpsb
jg
cmp
mov
pop
cmpsl
adc
cs
lret
loope
dec
adc
aad
or
scas
jbe
mov
nop
scas
dec
mov
jle
leave
idivl
ds
dec
adc
xor
rol
xchg
push
xlat
lea
pop
add
inc
leave
inc
push
shrl
mov
mov
push
jge
ljmp
dec
ja
mov
data16
pop
popf
ja
shr
jb
xor
mov
loope
rcrl
adc
loop
imul
mov
popf
je
sub
aad
jge
or
call
sbb
mov
or
adc
pxor
into
mov
and
jns
cmp
mov
lahf
scas
jmp
jae
push
or
lock
pop
lret
loop
or
or
movsl
lods
fwait
push
in
rcrl
mov
outsb
in
jne
out
jg
xor
jb
add
loopne
aad
push
add
and
ret
ficoms
push
or
scas
mov
sbb
sub
clc
bound
jg
dec
cli
mov
xchg
cmp
das
jo
jge
ja
cmc
pmaxsw
push
xor
stos
jns
inc
mov
aaa
sbb
testl
test
mov
cwtl
shll
jne
lea
test
pushf
and
mov
andl
movsb
int
fwait
dec
inc
mov
lret
repnz
aaa
and
fidivs
cli
mov
xlat
mov
cmc
sub
jns
cmp
add
int3
imul
stc
idivl
mov
push
jg
movsl
mov
pop
and
push
jne
arpl
insl
ret
fisubrl
jl
leave
add
sub
xchg
insl
popf
xchg
outsl
insl
mov
je
mov
xchg
pop
out
scas
ss
cmpsb
pop
lahf
push
pop
jmp
ret
rcll
not
cmc
fwait
ss
add
je
out
jbe
sbb
mov
int3
cmp
fisttps
call
aaa
fdivrp
lods
out
xchg
outsl
repz
xchg
pushl
loop
addr16
pop
pop
rep
push
jge
scas
roll
xor
aas
mov
and
sub
roll
dec
jle
adc
cmp
push
pop
and
out
and
fidivs
or
test
in
lret
lds
sbb
xchg
add
mov
mov
jmp
sbb
int
fwait
out
sti
dec
popf
push
mov
rorb
pop
mov
iret
cmp
mov
xchg
int3
ret
xchg
cmp
hlt
mov
icebp
sub
mov
push
hlt
stc
mov
lret
int
or
mov
inc
adc
scas
mov
jecxz
push
fsts
in
fwait
out
sbb
insb
je
xor
mov
repz
pop
stos
sub
mov
insl
adc
add
fwait
sub
notl
fisubs
sbb
xchg
leave
iret
iret
jae
push
mov
push
loope
jbe
clc
mov
dec
mov
jo
movsl
rol
outsb
xchg
stc
mov
sbb
push
mov
mov
int3
sbb
mov
movsl
push
xor
shlb
orl
pop
push
inc
imul
pop
dec
and
popf
mov
fmulp
xchg
xor
push
mov
stc
shlb
jmp
test
jecxz
push
je
mov
pop
or
pop
jmp
sbb
data16
ljmp
jge
jge
push
ja
push
sbb
hlt
or
sbb
jne
xchg
jno
or
mov
test
mov
push
insl
sbb
adc
jle
pop
inc
xchg
lods
jmp
jae
lret
sub
popa
lret
sbb
push
mov
fnstenv
mov
std
sub
cmpsl
pop
pop
or
aas
push
xor
mov
clc
mov
jns
mov
jbe
mov
dec
fstpl
push
pop
cltd
push
scas
mov
add
in
sbb
jmp
lahf
jecxz
aas
adc
lret
or
out
push
repz
mov
xor
adc
add
fwait
popa
or
xchg
xchg
arpl
ja
data16
rcl
add
stc
ds
inc
lock
sbb
iret
sub
ror
push
cmp
xor
sbb
add
inc
inc
dec
cmpb
add
std
loop
test
stos
sub
stos
cmp
das
or
sahf
cmpsb
fldcw
clc
and
in
sti
jl
push
adc
adc
and
push
rorl
sbb
clc
mov
cltd
or
mov
loopne
xchg
loope
and
test
pop
call
jmp
xchg
xchg
pop
dec
jecxz
aad
xchg
shll
dec
lock
pop
popl
mov
push
jb
mov
cmp
das
cmp
pop
cli
test
ljmp
and
mov
inc
lds
das
rorb
pusha
dec
mul
and
sti
jae
pop
sahf
sbb
mov
or
xchg
jns
cli
lea
gs
add
outsl
lret
add
mov
out
mov
xchg
decb
jns
adc
arpl
jmp
xchg
pushf
test
fldenv
and
dec
adc
loopne
jno
fisubl
imul
jge
inc
in
jae
fs
scas
outsl
sub
jp
adc
add
pop
adc
pop
test
cli
fdivr
and
mov
and
fisttpll
fcomps
sbb
sub
push
pop
jmp
stos
jle
les
dec
in
lcall
mov
popf
lods
lcall
es
fiaddl
outsl
jl
mov
test
nop
movb
push
jne
mov
std
dec
lret
cld
push
lret
push
cmc
or
je
mov
repz
lock
inc
jne
outsb
and
add
pusha
leave
cmp
jp
jnp
lods
pop
rolb
out
jns
add
dec
mov
jns
shlb
lods
push
xchg
cwtl
mov
data16
pop
mov
mov
insl
push
sarb
dec
inc
push
fbld
mov
in
mov
add
push
push
sub
mov
lcall
out
add
adc
or
jg
sbb
ljmp
lahf
cmc
push
int
in
mov
cmpsl
in
pop
lahf
jbe
xchg
mov
fsubs
shrb
fnsave
ret
add
sub
stos
rcll
fst
dec
aaa
push
mov
mov
loope
in
push
scas
dec
cld
and
cmp
mov
sbb
add
mov
roll
test
or
int3
lcall
jl
add
push
outsl
xchg
jge
jge
js
mov
pop
pop
jbe
test
in
sar
enter
leave
imul
or
mov
cmpsl
sbb
pop
cltd
mov
mov
sub
pop
xchg
les
je
inc
pop
ja
inc
cmpsl
adc
in
icebp
xor
dec
scas
je
cmp
aaa
mov
imul
imul
dec
push
stos
into
stc
and
cli
adc
aam
lock
mov
jb
cmp
inc
pusha
shrb
and
push
je
call
call
js
xlat
push
xchg
test
jnp
push
add
cmpsb
xchg
insl
lret
subl
lods
pop
or
cli
xchg
rorb
aam
mov
das
add
mov
icebp
jmp
iret
add
ds
push
xor
sub
mov
ljmp
push
push
loopne
cltd
out
ss
jl
sbb
testb
mov
stos
xor
mov
testb
xor
in
cmp
in
dec
jge
cmpsb
mov
adc
push
shlb
lock
pop
jp
fstpl
sub
negb
cmc
xor
ja
sbb
test
xor
sbb
leave
test
loope
idiv
inc
movsl
stc
inc
popa
dec
out
scas
add
out
and
in
into
push
mov
push
jg
ret
mov
or
mov
in
dec
jbe
repnz
mov
testl
out
popa
insb
or
ss
xchg
or
mov
sbb
into
mov
stc
outsb
mov
ds
sbb
iret
push
jl
jg
xor
rorb
cmp
jg
push
jae
icebp
shll
inc
inc
pop
mov
out
mov
fldl
insb
pushf
popa
test
repnz
and
jno
dec
mov
inc
or
pop
in
fstl
test
mov
sbb
rorl
or
xchg
enter
mov
out
inc
incb
es
push
aam
xor
sbb
outsb
rorb
push
jnp
dec
add
jg
mov
xchg
bound
pushf
mov
mov
lahf
mov
icebp
mov
dec
aam
sbb
outsb
sub
std
jmp
es
xor
lods
mov
sub
ss
sahf
jl
mov
repz
jbe
add
push
ds
hlt
pushf
fistpl
xlat
cltd
movsl
arpl
xchg
push
xor
jge
cwtl
mov
mov
aaa
rcl
adc
cmc
repnz
or
jle
mov
int3
adc
addr16
sub
test
lods
aad
rol
popf
push
pop
mov
sbb
movsb
imul
dec
js
out
mov
pusha
and
pushf
inc
xchg
stc
xor
lcall
dec
cwtl
add
pushf
in
xchg
test
sub
ja
mov
push
mov
out
xchg
stos
rorl
and
imul
xor
cs
repnz
adc
mov
dec
insl
in
rol
lods
and
ja
inc
fcoms
inc
popf
xor
iret
mov
mov
sbb
mov
mov
test
mov
loop
jnp
dec
push
add
mov
dec
pop
mov
push
out
movl
mov
outsb
mov
lods
fmul
sahf
clc
daa
fstpl
push
shll
cmp
mov
push
movsl
cmpsl
and
and
or
out
xor
lret
shrl
fadds
push
mov
dec
add
inc
sbb
sbb
dec
dec
jl
clc
inc
filds
les
jmp
mov
adc
xchg
push
cltd
push
div
in
add
sub
or
mov
out
adc
sbb
mov
push
repz
xchg
test
mov
push
ret
mov
lods
adcb
out
and
inc
mov
aas
sub
in
mov
lock
dec
je
int
aas
das
lahf
sahf
in
xor
add
sbb
jecxz
pushf
fsts
in
or
or
fs
mulps
je
lods
stc
xchg
lret
cld
push
lcall
mov
or
cmpb
mov
mov
mov
test
jmp
adc
stos
sbb
xchg
test
jae
sbb
out
scas
jns
mov
ljmp
in
mov
lret
jne
sub
jo
and
test
test
mov
clc
mov
fcomps
pusha
imul
or
cmpsb
fimull
movsl
in
fidivrs
data16
ljmp
es
lods
sar
mov
je
fdiv
in
enter
xchg
dec
arpl
dec
notb
xchg
pop
sub
fdivr
std
push
jl
fsincos
mov
pop
inc
and
mov
sbb
cmp
mov
inc
and
jo
fistpll
in
push
cmpsb
jnp
jp
add
aaa
push
movl
lods
fimull
jnp
sub
loop
shlb
fs
ret
shrl
jg
push
orl
or
outsb
inc
and
jno
sub
repnz
xchg
mov
mov
jp
pop
lahf
mov
push
inc
hlt
push
movsl
mov
das
or
xor
sub
xchg
push
pop
fdivs
pop
mov
es
xlat
inc
jl
mov
mov
pop
bound
decl
sarl
or
ds
dec
xorl
pop
loop
jge
and
popf
xchg
dec
aam
mov
sub
mov
mov
adc
cmpsl
movsl
jne
addr16
scas
cmp
or
cmc
mov
and
xchg
sbb
je
aam
roll
and
mov
sahf
xor
inc
scas
mov
xor
mov
fcmovbe
paddusw
cmpsb
out
jb
mov
and
pop
lock
jl
in
pause
fs
in
lock
ss
rol
getsec
xor
test
dec
out
js
lret
push
fstps
pop
mov
push
dec
pop
xorl
fisttps
mov
pop
in
bound
daa
lods
dec
jp
les
clc
push
icebp
aas
es
add
cli
xchg
sub
or
and
inc
jae
and
mov
and
cli
int3
xchg
or
std
inc
push
lock
lods
mov
cmpb
cltd
in
pop
mov
cs
cld
leave
jecxz
adc
mov
dec
leave
mov
xor
xor
fsubr
and
fstl
insl
inc
dec
cs
lds
push
gs
notl
mov
sarl
arpl
push
push
xlat
jecxz
shlb
outsb
sbb
jns
mov
movsb
loop
scas
sbb
mov
and
jge
dec
movlps
sub
mov
adc
ljmp
jne
dec
pop
dec
jno
aad
sar
scas
xor
mov
pop
push
mov
hlt
mov
pop
out
fistl
adc
add
sarb
cli
push
pop
lds
mov
insl
add
jmp
sarl
jns
jno
xor
lock
fucom
inc
test
add
mov
sbb
xchg
cld
mov
ja
pop
mov
add
inc
pusha
xchg
or
pop
movsb
rol
jnp
popf
inc
sti
test
repz
and
xchg
scas
cmpsl
and
adc
shrl
repz
sub
pop
subl
and
mov
adc
mov
aaa
jge
adc
jg
or
mov
pop
add
jle
cmp
ficoml
add
push
adc
add
pop
shll
jo
and
ficoml
inc
test
nop
jnp
int3
jmp
xor
adc
mov
dec
mov
out
or
fcompl
sar
pop
aam
ja
fldcw
arpl
mov
push
orl
or
in
or
pushf
popf
sbb
call
lahf
pop
enter
cwtl
out
repnz
fildll
cli
inc
xlat
xor
leave
fistps
ss
push
icebp
leave
into
frstor
lods
xor
sahf
mov
add
push
pop
sar
loopne
dec
scas
xchg
iret
scas
push
pop
adc
or
sub
fwait
lods
xor
lret
loopne
fcomp
fcmovb
mov
jg
in
leave
sub
dec
sub
mov
ja
js
add
or
scas
pop
in
scas
andl
sbb
push
add
sbb
jmp
mov
test
mov
jo
xchg
ret
xchg
addr16
lods
dec
mov
and
sbb
sub
mov
out
add
dec
fimuls
mov
cmp
in
mov
and
pushf
add
add
mov
icebp
pop
out
ficompl
inc
pop
mov
add
mov
and
xor
lret
push
adc
ja
ljmp
jg
shrl
dec
xchg
sub
sarb
lods
jge
pop
in
inc
sub
popf
popf
cmp
xor
lods
push
sbb
imul
or
sbb
sti
lock
sbb
subb
inc
inc
test
push
in
inc
lret
inc
sbbl
pushf
push
fildll
les
mov
push
xchg
cld
mov
add
hlt
je
xchg
test
or
dec
jmp
sub
aad
test
ljmp
incl
out
in
cmp
fdivs
repnz
imulb
jl
pop
push
ljmp
xor
dec
lock
jle
mov
jae
cli
rcll
cmp
mov
jg
imul
lahf
or
push
jge
divl
enter
and
sub
jmp
ljmp
dec
stc
jl
push
inc
into
push
dec
push
inc
stos
dec
push
pop
aam
cmp
mov
sbb
nop
repz
add
arpl
clc
testl
jg
mov
iret
cs
lahf
mov
push
cld
js
das
dec
in
sub
and
add
fcom
sub
xchg
popl
imul
push
and
jle
pop
cli
and
lcall
and
xor
popa
sub
sti
push
inc
lock
hlt
fadd
enter
int3
ja
loopne
lds
adc
dec
lahf
cwtl
ret
mov
and
dec
pop
loopne
cmp
loopne
cmpsl
adc
testl
adc
push
fsubrp
mov
out
xchg
jmp
sub
iret
inc
loop
sar
mov
movl
nop
fcom
into
or
push
leave
cmp
and
pop
pushf
in
popf
pusha
cld
or
sbb
xchg
and
jp
mov
sub
push
jp
sub
and
push
popf
shll
pop
add
or
mov
fiadds
xor
xchg
xlat
cmpsb
rol
mov
sub
cmp
jle
test
negl
mov
mov
scas
jno
int
sub
mov
rol
out
movsb
xchg
jl
pop
pop
cld
sarb
jns
xchg
jp
mov
adc
or
pop
xor
xchg
xchg
shlb
push
in
mov
aaa
outsb
test
sarl
pop
test
idivb
inc
decb
sub
cli
stos
xchg
mov
movb
scas
cmpb
sahf
loopne
cmp
mov
xchg
xor
pushf
or
jns
sub
imul
aam
mov
shlb
adc
push
jb
repz
scas
jns
mov
xor
dec
mov
and
inc
xchg
movsl
nop
sbb
sub
or
imul
repnz
xor
dec
outsl
lea
xchg
and
imul
popa
adc
cmpsl
dec
dec
push
inc
adc
mov
push
xchg
sahf
or
mov
dec
xchg
xchg
fwait
mov
jp
es
add
ljmp
out
bound
cwtl
mul
inc
jb
std
mov
xchg
xorb
int3
jbe
lods
dec
and
xchg
fiadds
test
jmp
stc
dec
jmp
into
sub
popa
xchg
je
clc
stos
sbb
sar
leave
out
dec
loopne
in
jp
fiadds
and
cmp
xor
xlat
lret
into
add
xlat
es
pop
lret
xor
dec
insl
or
sub
sbb
inc
inc
enter
add
mov
cmp
add
insb
mov
pop
shll
cmc
out
outsb
orb
popa
xor
incl
push
xor
xor
out
fdivs
fsubrl
sub
jp
clc
cmp
xor
test
jmp
in
std
mov
xlat
xchg
cmp
movsl
nop
lahf
outsl
adc
cmpsb
pushw
jl
scas
sbb
ja
inc
outsb
loope
outsb
inc
fnsave
cmpsb
subb
scas
inc
push
loopne
cli
mov
test
cmp
pop
pop
or
subl
and
insl
sub
push
lcall
add
mov
jbe
jp
in
lock
cmpb
xchg
xlat
ret
mov
inc
ror
sahf
push
scas
cmp
scas
aad
pushf
sbb
out
movsb
push
lret
cmp
popa
xchg
jle
cmc
not
bound
iret
lea
outsl
lret
adc
repnz
je
loopne
scas
lahf
imul
sbb
div
sub
cmp
leave
cmp
fwait
mov
push
mov
test
inc
ret
dec
cmp
daa
jle
xchg
mov
insl
cmc
xchg
div
cmp
xchg
inc
dec
aam
adc
jbe
or
in
mov
data16
arpl
shl
inc
subb
push
jp
inc
dec
jne
inc
aaa
fdivrp
xlat
pop
neg
and
xchg
nop
or
mov
push
roll
les
movsb
cmpb
fst
ffree
js
sbb
scas
aaa
mov
loope
sub
jg
or
dec
jl
lods
or
repz
test
ja
or
adc
xor
out
inc
in
test
add
cwtl
adc
leave
push
fiadds
ret
mov
sarb
rcr
add
xchg
pop
jae
pop
xchg
lods
mov
aas
cwtl
addr16
dec
cmpsb
ficompl
cltd
push
int3
popf
ss
outsb
inc
loop
lret
out
ljmp
dec
jg
cmpsl
test
js
insl
andb
lods
inc
in
insl
popa
daa
or
pop
adc
in
frstor
xchg
jg
mov
sub
pop
es
pop
icebp
mov
push
push
push
jb
in
jb
popf
pop
popa
clc
faddp
xor
xor
inc
iret
inc
or
and
lcall
xchg
add
pop
test
scas
shll
in
cmp
add
aaa
loope
or
and
je
lods
lods
mov
dec
add
and
cmpsl
lcall
addb
cmpsl
in
adc
push
leave
or
loopne
add
inc
mov
pop
in
popf
adc
mov
lods
or
and
mov
sbb
sub
gs
inc
push
dec
xor
lcall
jae
sub
dec
ljmp
outsl
xchg
sbb
mov
iret
push
mov
push
cmp
movsb
gs
test
sub
inc
les
or
out
imul
in
adc
xor
lods
call
xchg
push
loopne
push
hlt
testb
jg
pop
xchg
pop
dec
andl
repz
std
push
push
insl
mov
arpl
jb
out
or
mov
mov
int3
pop
lods
iret
adcb
enter
pop
push
insl
lahf
pop
jae
mov
pop
xor
out
xlat
mov
loope
addr16
fisttps
xchg
std
cmp
jne
insl
outsl
cwtl
xor
aaa
sbbl
push
ljmp
push
ficoml
insl
repz
arpl
mov
loopne
test
shrb
mov
sub
mov
ret
scas
sub
cmpsl
dec
pop
stc
pop
mov
das
add
test
pushf
sti
mov
popa
fs
mov
cmp
repz
jo
lea
mov
xchg
sub
sti
jge
and
cmp
add
aad
std
imul
mov
imul
inc
jl
and
mov
mov
xor
lret
jno
push
mov
call
leave
into
in
and
sub
xchg
jl
mov
cmpsl
in
pop
dec
arpl
mov
pop
mov
push
repnz
mov
xor
out
gs
jne
loope
js
adc
cmp
push
shrb
push
jb
lahf
xor
movsl
loope
pushf
jb
mov
mov
aas
push
sbb
cmp
cmpb
jbe
nop
dec
adc
xor
hlt
pop
outsl
jno
fwait
sub
jl
incl
int3
xchg
add
iret
push
jmp
sub
es
pop
push
xchg
pop
popa
shr
xchg
inc
mov
inc
or
xlat
push
popa
push
fs
and
andl
imul
or
cltd
mov
xlat
lahf
clc
loopne
jne
mov
mov
add
xchg
adcb
in
and
shlb
xor
mov
in
mov
cmp
test
sbb
lea
clc
jmp
push
sbb
xor
mov
nop
jge
mov
push
dec
xchg
or
mov
jns
inc
add
sti
mov
pusha
mov
pop
sub
jg
pop
pop
and
ficompl
sar
xor
rorb
pop
mov
add
push
imul
jg
pop
pop
adc
leave
cmp
dec
mov
loop
push
subl
int3
int
jecxz
xchg
sub
add
sahf
xchg
fdivrl
mov
adc
daa
popf
loopne
fadd
out
or
loope
pop
scas
ss
scas
stos
and
clc
hlt
ss
jge
int3
push
jle
adc
mov
mov
and
push
ss
out
scas
mov
daa
pushf
aad
aad
int
xor
and
inc
fsts
mov
mov
iret
addb
iret
xchg
lret
mov
adcl
loope
jl
sarb
pop
clc
xchg
subb
fwait
xchg
jmp
jle
xchg
push
sub
das
xlat
pushf
add
mov
adc
scas
pop
jb
jp
add
dec
iret
loope
ja
ja
mov
out
add
insb
mov
je
std
add
mov
or
ss
ja
push
mov
push
stos
xchg
inc
jg
mov
add
enter
jg
mov
jmp
sti
pusha
fstpt
daa
ja
ss
and
mov
inc
sbb
inc
sahf
outsb
cmpsl
jmp
movsb
stos
xor
aad
add
pop
hlt
je
xor
push
mov
cs
dec
inc
addr16
sub
stc
adc
mov
pop
dec
scas
jae
sbb
test
dec
jmp
pavgb
push
lods
lea
cltd
pop
daa
dec
sbb
push
xor
jge
cmp
mov
add
dec
or
std
jge
push
xor
xchg
inc
aam
mov
and
jns
fdiv
addr16
mov
clc
pop
xlat
jns
rcrl
je
in
and
mov
adc
sbb
das
dec
repnz
pop
fistpl
cmp
xor
jecxz
fincstp
sbb
adc
ljmp
popa
mov
push
cmpsl
fcomps
sbb
xchg
pusha
rcll
enter
adc
ret
outsb
ror
das
mov
jmp
scas
fiaddl
cmpsl
lret
mov
loop
or
fdivrl
test
inc
test
mov
roll
sbb
int
push
jg
mov
xor
push
or
adc
lret
xor
scas
push
in
xchg
mov
sub
mov
lock
adc
leave
jge
shll
mov
push
je
xor
jg
inc
andb
pop
loopne
imul
ds
push
cmp
in
sahf
cmp
push
stos
xor
arpl
or
pop
incl
add
mov
and
pop
xchg
mov
fisttps
out
cmpsb
icebp
sbb
mull
fwait
or
mov
dec
sahf
insl
sbb
cmp
push
test
push
sub
push
xorl
dec
mov
mov
mov
unpcklps
add
mov
add
jmp
test
push
add
inc
xchg
sbb
cmp
out
pop
add
sub
loopne
out
push
cmovne
xchg
gs
scas
sahf
jge
xchg
push
pop
sbb
sub
push
iret
pop
add
inc
nop
sbb
arpl
mov
inc
andb
ja
je
test
in
push
cltd
cmp
cwtd
inc
dec
mov
push
mov
fmuls
ror
push
mov
lret
mov
push
and
lret
test
push
push
pop
sub
dec
jg
stos
pop
pop
push
xor
inc
push
pop
mov
xchg
mov
je
ljmp
aad
pop
mov
pop
repnz
adc
jge
cmc
lods
jge
sub
lret
or
add
lret
cs
xor
push
repnz
ret
cmp
mov
and
cld
xor
popa
scas
into
inc
leave
cmp
jnp
pop
pop
les
js
loop
loopne
sbb
mov
btc
inc
les
mov
mov
push
call
mov
imul
sbb
mov
iret
hlt
ss
std
sbb
mov
or
pop
sbb
add
rcll
arpl
jmp
sbb
pushf
pop
jp
filds
cmp
sub
out
cmp
cmpsl
rclb
push
mov
sub
stos
enter
mov
outsb
sbb
test
mov
push
out
adc
imul
scas
jbe
jmp
jle,pn
xchg
mov
cld
push
mov
nop
add
aas
and
cld
inc
pop
jae
sub
and
aaa
cmp
imul
insb
adc
popf
sub
pushf
scas
sub
mov
jmp
rcl
mov
out
cmp
jb
mov
xor
fiadds
or
stos
and
mov
xor
pop
test
push
xchg
ficompl
or
fiaddl
das
xor
insb
dec
into
mov
and
jmp
shrl
insb
mov
xchg
sub
aam
mov
mov
mov
cmp
inc
test
repz
cmp
stos
pusha
repnz
pop
cmp
jp
stos
dec
sub
add
inc
movsb
jns
inc
cmp
sbb
mov
and
pop
cmp
pop
mov
inc
add
or
lret
pop
clc
xor
repnz
cld
lret
mov
jge
push
mov
stc
jl
xchg
inc
push
in
loope
mov
andl
or
call
roll
imul
jbe
out
push
jge
jns
arpl
out
jo
fidivrl
loopne
mov
pop
xchg
in
adc
mov
aaa
das
inc
mov
movsl
ss
hlt
cmp
cwtl
jmp
dec
jnp
inc
pop
mov
pop
xchg
cli
imul
mov
in
cmp
arpl
negl
inc
pushf
aas
mov
dec
cmp
push
sub
inc
andb
or
movsl
mov
movsb
rolb
fsubs
mov
outsl
icebp
cwtl
movsl
aas
into
cmp
xor
daa
push
adc
lret
in
mov
in
cmp
mov
insl
jge
xor
daa
cmp
or
lea
add
add
cmp
pop
jecxz
xor
movsb
add
mov
xchg
popf
lret
jb
xor
mov
test
xchg
nop
clc
pop
cmp
mov
pusha
or
push
imul
aad
ds
dec
ja
inc
repz
fldcw
or
inc
inc
sbb
lret
cmp
xor
lahf
sahf
adc
int3
sbb
mov
sbbb
iret
xor
cmp
int3
push
sbb
test
fwait
ljmp
dec
repz
imul
shr
in
lcall
cmp
aaa
mov
xchg
cmp
aam
mov
test
mov
lods
push
outsb
insb
out
aad
xchg
add
dec
adcb
mov
ficoms
lock
or
bound
shl
rcrl
pop
test
push
mov
in
frstor
push
inc
cmpsb
mov
mov
enter
jae
push
jb
add
popf
push
push
test
cld
nop
and
cmp
lret
outsb
dec
cltd
outsl
sbb
mov
arpl
pop
cmp
push
mov
dec
xor
js
das
mov
clc
fbstp
in
cli
xchg
jns
cwtl
mov
cmp
push
mov
or
das
or
test
sub
stc
push
sbb
dec
stos
js
mov
pop
shll
movsb
mov
les
imul
pop
jl
inc
aam
jns
out
neg
fiaddl
test
sub
sbb
fwait
and
ss
test
jmp
insl
xchg
adc
xor
jg
cwtl
pop
int3
and
std
imul
scas
xor
xchg
xor
lds
fisttpl
cltd
cli
xor
xchg
cmpsl
repz
mov
jns
out
or
pop
loope
mov
inc
pop
jle
out
mov
andb
data16
bnd
push
addr16
jge
cmp
sbb
icebp
jmp
xchg
mov
fildll
movsb
cli
cmp
push
arpl
mov
sbb
lret
aam
xor
or
mull
lea
jg
mov
pop
dec
mov
in
lods
push
in
push
arpl
push
test
push
cmp
xor
mov
rolb
int
sbb
xchg
ret
daa
sbb
sub
mov
pop
mov
int
lret
enter
movsb
cld
movb
xchg
dec
jp
mov
xor
test
stos
fsubrl
inc
arpl
inc
fisttps
fcmovnu
mov
popl
mov
idivl
push
divl
xchg
enter
mov
adc
push
xchg
fdivrs
inc
nop
adc
fnsave
adc
and
fcoml
rcll
or
out
mov
inc
add
js
dec
mov
fisubs
push
pop
es
inc
and
xor
mov
int
lea
jae
test
stc
cltd
movsl
jge
insb
cmp
clc
pop
mov
xchg
mov
pop
push
sub
frstor
or
stos
lea
pop
rep
mov
inc
xchg
jmp
dec
mov
imul
call
out
scas
and
sar
in
ljmp
hlt
fisubl
cli
outsl
push
shll
jbe
push
dec
insl
mov
scas
fnsave
ror
pop
push
mov
dec
mov
push
pusha
aaa
add
mov
rep
ljmp
sbb
mov
or
and
jns
adc
add
loop
sub
mov
mov
mov
pop
jg
mov
jecxz
push
and
sbb
xchg
jnp
repz
pop
mov
inc
shl
push
popa
dec
mov
sbb
pop
out
mov
jge
lret
icebp
nop
push
pushf
notb
mov
mov
and
movsl
push
fmul
fdivrs
mov
pop
dec
hlt
imul
mov
push
dec
and
ret
repnz
mov
imul
xchg
bound
sarb
xchg
mov
pop
push
in
cmpsb
pop
outsl
jne
repnz
sub
xor
cwtl
sbb
popa
sti
cwtl
fs
std
pop
push
xorl
mov
sbb
jge
dec
addb
fmuls
lahf
scas
mov
add
sub
jge
sbb
in
fcmovu
mov
cltd
sbb
xchg
jo
fsts
test
sbb
cmp
xchg
and
movsl
mov
adcb
fs
jle
jo
stc
ret
imul
mov
or
sub
es
mov
in
cli
lcall
mov
inc
xor
insb
insb
jl
adc
push
add
pop
xor
mul
addr16
jmp
or
dec
inc
xor
sti
sub
push
in
ret
add
repz
cmpsb
mov
dec
repnz
dec
inc
js
cmp
pop
adc
loopne
mov
mov
xor
inc
push
cmpsb
push
call
jbe
push
mov
cltd
jle
dec
push
daa
cwtl
jle
out
mov
repnz
pop
xchg
sub
mov
ret
mov
ds
sarl
or
das
cmp
fdivs
decl
or
inc
xchg
inc
dec
rcll
loop
mov
addb
or
in
ret
in
push
aad
andl
and
adc
imul
xchg
or
xorb
jge
arpl
or
mov
add
int3
mov
cli
in
sub
dec
push
pushf
mov
mov
imul
jno
outsb
add
clc
add
es
dec
cmp
shr
cld
push
cmp
ss
into
dec
inc
push
mov
push
pusha
int
rolb
loop
inc
sub
scas
fdivrs
hlt
cmc
movsl
cltd
cmp
scas
add
pop
in
cmp
jns
pusha
pushw
mov
in
jmp
add
es
lds
dec
clc
paddb
fsts
test
stos
ds
mov
int
js
sub
mov
hlt
or
adc
add
mov
sbb
push
xor
out
lods
pop
push
faddp
dec
out
sub
xor
lahf
std
pop
or
push
pop
inc
jmp
stos
dec
imul
cmpsl
sbb
cmpsl
push
inc
repz
es
pop
pop
ret
repnz
daa
in
pop
insb
jge
add
out
inc
mov
hlt
aam
cli
flds
ficoms
pop
xchg
push
pop
or
push
sbb
lods
mov
in
jne
or
lcall
loopne
fmuls
test
nop
stos
or
ljmp
lahf
push
aaa
sbb
jne
adc
sbb
loop
xchg
push
cmp
cmp
xlat
test
push
sbbl
in
adc
mov
and
adc
stos
test
addb
add
xchg
movsb
push
cld
xor
or
pop
in
icebp
and
dec
pop
add
push
fwait
pop
std
aaa
pop
loop
repnz
mov
pop
xchg
pop
xlat
rol
fcmovb
in
cwtl
insb
out
jo
dec
das
mov
mov
dec
mov
lea
sub
push
cmp
hlt
mov
xor
mov
nop
mov
out
out
mov
add
out
cmp
pushf
cmp
ret
cmpsb
pop
mov
push
pushf
imul
les
in
cwtl
push
mov
mulb
jbe
jl
mov
outsb
pop
dec
repz
lods
ss
jb
mov
inc
or
xor
push
gs
sti
icebp
mov
rcll
aad
outsb
mov
call
xchg
xchg
sub
mov
pop
fsincos
fs
outsb
push
inc
mov
push
dec
lods
inc
into
fcomp
lea
pop
mov
fstpl
dec
orb
movsb
inc
adc
xchg
shll
mov
les
jo
sub
popa
ja
aas
loope
ret
lret
clc
xor
sub
fists
adc
adc
jle
xor
mov
orb
push
mulb
aad
mov
mov
and
jge
fiadds
pop
jp
loope
jl
ret
out
mov
loope
int
jmp
loopne
inc
fldl
scas
xor
ffreep
inc
lcall
test
dec
insl
xor
es
mov
push
enter
jne
loop
xchg
pop
xor
lret
lahf
and
cltd
fwait
cmc
stos
pop
fildll
stos
cmp
mulb
push
lods
jb
out
mov
decl
mov
mov
mov
cmp
mov
shr
stos
cmp
mov
xor
in
mov
jo
fimull
jl
in
out
cmp
addr16
loopne
mov
cmpl
insb
aaa
jecxz
fldt
js
sub
lret
or
adc
lods
mov
jno
popf
fsub
scas
dec
mov
outsl
out
fucomi
sbb
mov
data16
xor
cli
push
add
pushf
and
inc
cmpsl
cld
les
data16
roll
dec
scas
adc
or
aaa
push
mov
js
pop
les
mov
je
call
imul
outsl
or
adc
fldln2
push
push
mov
mov
pop
cmpsl
hlt
test
cmc
jg
mov
xchg
jg
stos
mov
mov
mov
sar
or
and
ja
out
mov
add
fs
xchg
fnsave
xchg
in
out
pop
mov
fbstp
lds
push
pop
sub
cltd
loopne
xchg
inc
push
in
pop
aaa
inc
or
imul
xor
fsubs
adc
stos
pushl
mov
aas
cmpsl
aad
inc
xchg
inc
xchg
mov
push
pop
mov
sub
pop
jp
jo
rclb
cwtl
adc
aas
jle
rcrb
add
pop
push
fidivs
pop
mov
fucomip
jl
aam
ljmp
sahf
or
rcl
loope
ljmp
aam
mov
lret
or
aam
or
stos
pop
das
int
in
push
xor
daa
js
ds
mov
cwtl
cmpsb
inc
dec
lahf
shll
leave
xchg
cmc
mov
jle
jecxz
and
push
popa
adc
mov
dec
rclb
rol
inc
push
int3
imul
je
popf
mov
pop
jmp
or
cwtl
fiadds
mov
insl
lods
pop
iret
mov
in
sahf
xor
mov
push
popl
jns
push
iret
leave
jecxz
cli
sub
pop
jo
nop
inc
lcall
lods
mov
cmp
mov
scas
jl
pushf
dec
xor
xor
mov
dec
mov
sbb
mov
std
and
je
sahf
adc
outsl
aas
cltd
jns
sub
xchg
bnd
stos
dec
aad
mov
cli
out
mov
dec
aad
in
cmp
jae
int3
xchg
mov
shll
pushf
jnp
sbb
mov
mov
pop
les
jae
repnz
int3
outsb
xchg
iret
add
sub
push
test
add
stos
mov
fistl
inc
mov
adc
mov
adc
test
inc
sub
and
ret
popf
testl
xor
mov
filds
xor
fadd
sbb
cmp
mov
cld
hlt
repnz
mov
or
fnsave
cmp
adc
aas
pushf
call
push
xorb
add
fdivs
mov
fisubrl
mov
fwait
or
fmull
xorb
cltd
cmpsl
rol
jp
call
xor
jle
xchg
sub
rcr
lods
inc
movb
lods
insb
mov
es
in
out
imul
xor
pusha
stos
cmpsl
rclb
js
push
cmc
test
imul
xchg
es
fcom
mov
mov
lret
lea
or
jmp
outsl
jns
jecxz
fcmovb
pusha
mov
mov
xor
fisubrs
add
sub
adc
mov
pop
faddp
icebp
push
fadd
add
push
repz
xchg
pushf
into
ficompl
xor
cltd
and
bound
fwait
lcall
dec
xchg
cs
add
popf
lds
movsb
mov
or
rorb
and
subb
push
mov
mov
bound
cli
aam
pop
cmp
and
cmc
xor
shrl
and
or
mov
enter
push
xlat
dec
inc
les
test
xchg
jb
addb
xor
icebp
sub
inc
subl
xor
nop
push
xchg
ja
jp
xor
fwait
mov
imul
pop
fwait
push
push
inc
or
in
subb
or
and
loope
int
test
or
lret
adcl
pop
mov
repz
inc
aad
adc
cmp
sbb
imul
imul
dec
dec
not
aad
jns
cmpsl
add
enter
mov
push
popa
loopew
test
bound
fcomps
daa
xchg
jle
jl
aas
dec
add
xchg
mov
dec
sub
dec
in
aam
push
xchg
mov
fidivrl
js
mov
dec
out
mov
dec
int
lea
adc
sub
sbb
imul
or
dec
pop
int
inc
jbe
repz
xchg
loopne
dec
pop
xor
test
aad
clc
test
add
and
adc
ja
xchg
addb
or
sbb
pop
adc
jbe
adc
xchg
pusha
rdtsc
insl
inc
xor
jnp
call
loope
and
pop
ficoml
into
aaa
nop
push
mov
push
mov
das
cltd
cmp
sub
test
stos
jg
das
inc
testb
add
movsl
push
arpl
roll
and
mov
push
mov
adc
pusha
lods
add
imul
mov
inc
cmp
jle
pop
adc
pushf
or
add
fdivs
ljmp
dec
add
fwait
mov
lds
jbe
fwait
int3
adc
push
xlat
popf
sbb
xlat
pop
cmp
scas
jno
and
ret
in
or
xor
adc
cmp
pushw
jmp
sbb
adc
sbb
add
push
mov
test
pop
xchg
in
out
fs
bound
mov
push
mov
leave
insb
outsl
add
or
incl
out
or
xorb
loop
sub
pop
lahf
dec
xchg
addr16
pushf
push
movb
pop
push
xchg
inc
out
popa
aaa
rep
mov
xlat
js
xchg
dec
sub
mov
lods
out
pop
lahf
loope
push
jnp
or
adc
xchg
push
cwtl
imul
adc
jo
mov
jno
in
pop
cmpsb
cmc
addr16
sahf
cmp
and
clc
mov
or
popf
and
sbb
and
sub
rcr
les
repnz
mov
dec
data16
mov
addr16
mov
and
mov
testl
idiv
jp
ja
jmp
jne
addr16
dec
xlat
aam
xor
pop
adc
jns
xchg
imul
outsb
dec
mov
test
repz
nop
gs
mov
mov
jae
pop
out
push
cwtl
xor
xchg
cmp
jge
dec
fcoml
stos
mov
aas
mov
cmp
fcomps
enter
and
dec
mov
push
or
jl
and
xchg
hlt
push
test
sub
inc
add
bound
rol
mov
mov
sti
aaa
aaa
xchg
std
pop
test
dec
push
outsl
gs
xchg
inc
xchg
and
cltd
or
mov
sbb
adc
sub
xchg
inc
inc
xchg
pop
xor
sub
mov
icebp
inc
arpl
cmp
out
jp
faddl
hlt
lret
push
cmp
sbb
adc
sub
outsb
punpcklwd
jns
fwait
xchg
test
add
shlb
cmp
dec
sub
int
daa
pusha
pop
es
jle
xchg
jbe
test
aam
addr16
inc
aad
jecxz
mov
mov
inc
mov
sbb
sub
xchg
js
jg
lea
aam
ret
aaa
loopne
mov
cwtl
push
lahf
ljmp
sti
movsb
cmp
jg
sbb
or
add
xor
push
jl
push
fildl
insl
clc
sbb
sbb
test
in
sub
ljmp
int
aam
sub
cwtl
ds
nop
inc
inc
push
or
or
scas
shl
mov
jmp
lea
test
sub
das
mov
movsl
shrb
jae
mov
mov
outsl
jp
out
sub
inc
mov
mov
data16
adc
push
add
in
xchg
imul
inc
pop
mov
xchg
imul
inc
ss
add
mov
mov
test
test
loope
pop
xor
dec
shrb
lahf
rcrl
mov
adc
das
ret
loope
dec
mull
jl
ds
mul
add
push
imul
jmp
in
adc
sbb
leave
xchg
stc
lds
mov
mov
cmp
arpl
sahf
inc
and
leave
lahf
jae
aaa
mov
repnz
inc
test
lock
enter
xor
imul
shlb
pop
jo
sbb
jae
pop
in
jae
pushf
test
push
loopne
outsl
sub
adc
lcall
lret
daa
je
repz
xchg
lds
dec
fs
mov
xchg
push
aas
push
push
mov
mov
outsb
adc
push
mov
lods
or
movsl
push
cmpsl
dec
in
add
cmpsl
xchg
and
addr16
iret
mov
and
cs
add
add
jl
movsl
inc
hlt
cmp
in
cwtl
lret
dec
sbb
jo
pop
and
xchg
test
push
aaa
push
repnz
xchg
ljmp
inc
imul
mov
add
mov
inc
dec
push
adc
ja
in
icebp
push
pop
cwtl
pushf
cli
shll
nop
in
popa
pop
push
stos
fimuls
sbb
xchg
cmp
dec
mov
das
mov
lods
or
aam
push
push
cld
add
rorl
jmp
mov
pop
sub
loope
add
sbb
mov
sub
or
xchg
lret
dec
or
adc
push
cwtl
dec
rol
incl
hlt
std
pop
jl
fsts
outsb
js
jnp
add
xchg
sbb
lea
insb
test
sti
flds
ret
out
addl
jo
and
xchg
ficoml
cli
loope
rcrb
pop
les
xchg
pop
hlt
imul
sahf
scas
mull
std
mov
push
cmp
fbld
pop
xchg
add
jne
and
mov
sub
test
sahf
inc
mov
xor
test
popa
add
scas
ss
jns
repz
stc
clc
xchg
jg
je
aas
mov
and
xor
mov
pop
pop
lea
aad
sbb
and
xor
dec
lock
sti
sbb
movsl
iret
aad
lret
cmp
iret
jns
xchg
test
loop
pop
dec
inc
lods
mov
fists
in
or
addr16
mov
mov
jns
in
stos
mov
out
cltd
leave
xor
xchg
jecxz
xchg
or
push
bound
cmp
cs
mov
cmp
fldl
ljmp
jl
push
mov
mov
mov
andb
add
adc
dec
jae
push
mov
fcmovbe
add
mov
shlb
ret
xchg
mov
hlt
inc
fldt
inc
stos
and
mov
push
sahf
popf
jbe
stc
jns
and
adc
aaa
les
sub
or
incl
fsubrs
adc
mov
xor
push
pop
icebp
inc
adc
outsb
inc
push
mov
movsl
push
je
jg,pn
sub
ret
mov
pusha
scas
aad
cmpsl
aas
inc
orl
mov
cmpsl
lock
xor
pop
xchg
pop
test
jmp
aaa
stos
insb
mov
xor
popa
fnstcw
sarl
inc
push
addb
xor
jo
in
lods
orb
popa
leave
shr
mov
mov
test
and
in
and
mov
push
dec
clc
addb
push
dec
mov
loopne
xlat
pop
push
sahf
mov
push
add
cmp
cwtl
loop
and
inc
das
jns
mov
push
ss
and
and
add
mov
lret
adc
or
mov
mov
pop
push
popf
push
insl
pop
push
pop
xchg
loope
pop
sbb
add
out
xchg
xor
not
add
jecxz
call
mov
movsl
scas
cmpsl
dec
pop
dec
lahf
loopne
test
dec
sub
mov
pop
mov
mov
mov
mov
and
xchg
daa
dec
mov
mov
and
cwtl
imull
les
add
xchg
call
rorl
nop
js
inc
mov
add
sbb
js
fistpl
nop
sub
cmpsl
mov
mov
mov
mov
js
mov
jo
loop
adc
fsubs
lret
xchg
mov
sbb
xchg
mov
add
mov
popf
movsl
add
popf
add
aas
pop
in
test
or
sbb
cmpl
or
jmp
jmp
js
repnz
or
or
loop
mov
sub
and
mov
clc
push
in
enter
adc
sbb
divw
pushf
repz
xor
in
inc
or
fs
xor
repz
sbb
adc
jecxz
mov
mov
push
cmp
add
cld
das
in
xchg
pop
xor
addb
sbb
int
notl
xchg
add
ss
sti
les
adc
add
cmp
hlt
inc
int
aaa
ret
or
xchg
dec
sub
cmp
faddl
add
ret
push
push
pop
xchg
dec
aaa
lods
cmpsl
sbb
orb
sbbb
test
lods
fldl
cmp
and
inc
mov
xchg
xor
sbb
rcrl
scas
ss
mov
cmp
sub
sub
arpl
int
jge
push
mov
mov
aaa
test
lods
lcall
or
mov
in
mov
and
push
scas
mov
cmp
mov
fcmovbe
clc
add
and
stos
dec
or
repz
das
pop
dec
out
std
jge
les
push
iret
in
adc
ret
push
push
sub
rorb
outsb
jo
fcmovnbe
mov
or
push
and
lcall
in
pusha
stos
jl
push
mov
arpl
cmp
shl
lret
pop
xchg
enter
jno
inc
movsl
mov
sahf
das
test
lock
mov
mov
xor
cmp
xor
cmpsl
cmp
ja
fwait
jmp
out
iret
pop
mov
mov
inc
mov
lock
pop
dec
lcall
icebp
outsl
xor
cmp
ljmp
sub
imul
sbb
jmp
pop
js
int
push
loop
cld
dec
pop
xor
push
xchg
dec
sub
pop
mov
test
stos
js
adc
imul
mov
jl
mov
cs
jbe
push
mov
rolb
adc
inc
stos
push
shl
je
out
mov
int
fwait
pop
stos
inc
pop
divb
cmc
mov
test
dec
xor
jg
leave
pop
out
cmp
test
aam
pop
pop
fucomip
flds
stc
or
dec
pop
stc
scas
dec
lret
dec
cwtl
ljmp
call
popa
out
and
rcl
aam
jl
fwait
jb
cmp
fsts
xor
lods
add
push
mov
add
popf
iret
stos
push
ja
push
test
dec
xor
cmp
lock
lods
push
jo
js
fidivrs
jne
aas
ret
xchg
xchg
aad
add
or
gs
dec
fldenv
and
imul
xchg
fsub
cli
in
cmp
lea
lds
mov
rcrl
in
mov
mov
sbb
lods
scas
hlt
loop
das
or
inc
inc
ja
leave
inc
outsl
rcrb
sbb
outsb
outsb
jo
test
and
inc
test
pop
mov
call
jnp
stos
jne
pop
sbb
les
sub
out
mov
scas
test
pop
jnp
adc
xor
jbe,pn
test
repz
pop
dec
or
into
loopne
add
pop
mov
jge
mov
mov
mov
push
shlb
xor
mov
adc
push
dec
nop
lock
rcrb
dec
mov
int3
jle
add
dec
clc
arpl
mov
pop
mov
arpl
dec
push
adc
and
mov
scas
lds
xchg
sub
cmp
mov
pushf
push
fldenv
movswl
adc
loopne
int3
add
dec
test
mov
push
or
movzbl
push
dec
lret
imul
aas
sub
push
mov
orl
sub
add
inc
xor
sub
fstpt
xor
mov
stos
cmc
in
test
xchg
out
push
and
mov
jb
xchg
test
mov
jae
mov
std
das
xchg
inc
push
dec
repnz
int3
push
jmp
sbbb
outsb
je
std
adc
inc
shrl
dec
cmp
hlt
jnp
xchg
adc
into
loope
aam
pop
sub
sub
add
imul
and
sub
flds
xchg
fwait
xor
fisubrl
xlat
jecxz
imul
inc
out
or
xor
or
pop
xor
add
bound
out
in
jns
mov
jp
cmp
xor
arpl
gs
jb
addr16
stos
or
cli
inc
in
js
pop
and
pop
aad
pop
xchg
aad
fsts
jns
push
in
pop
and
in
jno
mov
jp
sub
adc
ficomps
daa
or
rorb
dec
push
loopne
aam
test
cmp
push
mov
mov
mov
and
nop
gs
cld
xchg
sub
ja
int
out
inc
xor
ljmp
and
pop
lahf
xchg
cmpsb
jecxz
psrld
or
out
les
cltd
andb
push
in
lock
mov
add
or
pusha
xor
pusha
ljmp
into
arpl
mov
cmpsl
add
adc
mov
hlt
pop
imul
dec
jmp
mov
cmpsl
inc
mov
xchg
push
test
sbb
add
xchg
add
test
add
add
outsl
sub
mov
ljmp
loope
ret
fsubr
pop
push
stc
call
movsb
loopne
xchg
pop
ds
mov
pop
leave
ljmp
mov
addr16
mov
je
stos
dec
ljmp
xchg
pop
inc
nop
popa
aas
cwtl
test
stos
xchg
adc
out
pop
adc
int3
or
flds
mov
data16
jne
mov
add
outsb
pop
mov
inc
push
rcll
push
lahf
jns
mov
addb
pop
inc
xorb
mov
dec
xchg
rorb
adc
lret
lahf
sub
jp
inc
ljmp
movsl
sub
sub
mov
inc
sbb
push
test
jle
test
push
xor
push
fwait
ret
and
xchg
dec
sarb
int
sub
hlt
or
mov
sbb
les
mov
movsl
push
add
outsl
mov
popf
push
jecxz
out
cmp
push
cmp
pushf
mov
pop
loope
mov
cmpsl
aas
aad
jbe
lret
mov
jno
rclb
fcompl
jecxz
push
push
imul
cmp
mov
jo
sbb
rorb
stos
xchg
ss
das
jbe
inc
jb
insb
test
cmc
clc
stos
mov
loope
jbe
mov
out
xor
mov
bnd
mov
cmp
push
jns
pop
xor
outsl
incl
mov
std
les
outsb
fstpl
cmp
xchg
pop
outsb
loopne
or
ljmp
icebp
movsl
push
inc
add
dec
push
mov
jne
mov
xor
mov
test
cmpsb
das
js
pop
repnz
inc
add
mov
pop
mov
jg
shr
clc
jnp
xlat
xor
cs
cmpsl
iret
data16
mov
cmp
mov
enter
inc
mov
ss
jno
mov
pop
mov
inc
jecxz
imul
inc
jl
cmp
inc
cld
mov
pop
jnp
jne
subl
or
call
or
pop
add
ret
add
cli
dec
mov
push
add
cltd
push
pop
lods
jno
jne
add
inc
and
push
add
fstl
and
out
pop
xlat
xor
repnz
cld
fsubrs
cmp
movsb
xchg
movsl
fdivrl
hlt
cmp
mov
mov
jae
out
inc
add
movsl
loope
das
dec
ret
xor
mov
inc
cld
fcmove
jno
pop
testb
add
iret
cli
jbe
out
xchg
pop
lods
xor
das
test
sub
jo
imul
inc
xor
out
aam
insl
jg
xchg
fwait
pusha
sub
ret
xchg
xor
roll
sbb
loopne
push
fbstp
fists
mov
call
cmp
cmp
mov
add
sbb
or
pop
sub
or
popf
rcll
mov
mov
daa
in
movsb
xor
sbb
in
imul
fsubrl
pop
test
mov
adc
jmp
inc
sub
xchg
pop
rolb
fdivrp
cmp
mov
or
loopne
inc
repnz
in
lret
js
mov
data16
cmp
or
jns
adc
adc
inc
sbb
fldl
cs
cltd
lret
fbld
enter
cwtl
jns
cmp
lret
rcrb
mov
adc
and
mov
adc
xlat
lods
and
cltd
cmp
push
cli
or
push
daa
sub
pop
mov
sti
xchg
adc
push
je
xor
xor
mov
int
sbb
push
mov
int
pop
rcll
testl
inc
scas
repnz
adc
cltd
clc
mov
mov
xor
inc
stos
out
int
cmpsl
cmovo
push
fidivrl
out
movsl
lds
xor
sti
stos
xchg
std
sbb
mov
cmpsl
push
arpl
sbb
mov
in
sbb
pop
js
push
mov
or
and
add
out
push
jne
adc
clc
xor
les
sbb
xchg
out
push
xor
push
fnstcw
int3
lcall
data16
outsb
pop
lds
aas
imul
mov
pop
fmull
push
inc
inc
cmc
pop
mov
pop
pop
aaa
std
sub
fsubrs
jbe
and
pop
and
test
add
adc
add
mov
xchg
fsubrs
test
popa
out
mov
cs
loopne
pop
jl
adc
mov
nop
mov
jmp
dec
rorl
or
xor
adcb
inc
xchg
inc
popa
mov
mov
mov
lret
adc
push
xor
int
xor
inc
inc
mov
sbb
js
adc
pop
jle
sbb
repnz
leave
xlat
rorb
mov
xor
xchg
lock
push
movsl
std
insb
inc
mov
add
and
test
or
pusha
add
xchg
shrl
mov
and
fstp
mov
das
sub
jl
lcall
andl
es
ss
mov
pop
pop
push
je
lea
negb
sub
add
ljmp
push
inc
adc
add
mov
in
and
dec
mov
dec
fnstenv
xor
inc
out
sub
orl
xor
and
repnz
xor
roll
sub
xchg
mov
or
popa
mov
loope
mov
out
iret
and
sahf
loope
mov
or
mov
mov
addb
scas
or
and
add
out
xchg
jns
ljmp
shl
mov
insl
sahf
mov
jns
jbe
and
frstor
push
cmpl
pop
ljmp
outsl
add
mov
mov
pop
ss
js
data16
sbb
testl
sbb
push
lock
addr16
lock
testl
cmp
jns
or
sbb
dec
mov
adc
xchg
popf
xchg
cli
sbb
cs
out
inc
or
mov
jb
pop
insl
data16
adc
inc
sbb
dec
inc
mov
or
jbe
das
ret
or
xchg
mov
loop
sub
and
mov
dec
cli
scas
mov
or
and
stos
clts
mull
jg
inc
sbb
addr16
xchg
jl
jns
fs
loop
mov
pop
das
arpl
mov
std
dec
hlt
mov
sbb
push
icebp
dec
stos
adc
sub
inc
sub
jns
or
sub
xchg
xlat
das
sti
jg
mov
movb
ret
cmc
fisubrl
mov
ret
stos
mov
cmpsb
mov
mov
sub
adc
push
xor
mov
pop
or
sub
in
dec
popa
and
adcl
mov
cli
jecxz
js
idivb
leave
fstp
mov
sbb
and
data16
mov
sub
repz
rcl
negb
jp
xor
jo
add
nop
stos
out
cwtl
lods
inc
ret
lock
xchg
scas
sub
cmp
add
aaa
jge
jp
xor
clc
iret
cmp
xchg
jae
pop
jge
out
xor
ret
xor
fwait
das
xorb
jnp
jge
ds
push
fs
sbb
push
das
add
ljmp
shrb
shrb
cmp
cwtl
mov
scas
xor
das
adc
rcrb
cmp
movsb
inc
ret
inc
cmp
jge
sub
pop
pop
xchg
jo
pop
pop
cmpsb
fwait
and
test
sahf
push
sub
xor
and
fcom
dec
cmp
pop
jmp
call
add
and
outsb
and
ja
sbb
and
call
mov
jmp
inc
xchg
mov
insb
push
fdivrl
add
jp
std
inc
mov
or
mov
xchg
stos
add
push
inc
dec
out
jl
sbb
and
aaa
decb
or
gs
out
data16
push
sbb
sar
ds
mov
iret
stos
sub
and
stos
sbb
adc
daa
hlt
std
in
ret
dec
dec
test
or
je
clc
xor
inc
subb
dec
test
push
rol
jnp
scas
mov
mov
mov
stos
mov
pop
sub
sbb
lods
fldl
in
fmulp
in
popf
cwtl
inc
sbb
lcall
push
shrl
cmp
sbb
jo
mov
and
push
scas
or
and
adc
add
mov
sahf
jno
cmp
cs
jg
mov
iret
jg
mov
or
into
sbb
out
out
cmc
andl
push
movsl
andb
and
pusha
sbb
mov
bound
pop
add
fcomps
cmp
lds
stc
mov
loopne
mov
sub
out
pop
dec
loop
cmc
cmp
push
movsb
in
stos
and
shl
pop
roll
fs
adc
shrl
mov
xor
jno
je
pop
adc
movsb
mov
cli
cmpsl
jo
leave
je
lret
cmp
mov
dec
dec
mov
pop
sub
clc
push
stos
mov
dec
dec
mov
jno
mov
scas
roll
iret
sahf
cmp
bound
sbb
push
jg
jp
std
jp
mov
mov
adc
icebp
cli
push
dec
mov
push
test
std
out
outsl
mov
jnp
mov
jmp
xor
in
insb
xchg
imul
hlt
sub
xchg
jns
and
aad
xchg
cmp
pop
inc
add
mov
test
test
imul
iret
inc
xchg
popa
in
xor
sub
add
ds
add
ja
mov
or
xchg
int3
insl
sahf
cmp
aaa
dec
cmp
pop
or
js
hlt
ret
sub
xor
mov
mov
push
adc
shll
fidivrs
xchg
sti
subl
subb
cltd
repz
enter
repnz
xchg
dec
cmc
cmp
lock
adc
mov
enter
mov
pop
push
clc
jg
push
inc
int3
shll
push
add
cmp
mov
out
dec
arpl
sbb
je
adc
inc
nop
je
repnz
pushf
jb
pop
sbb
fldenv
loopne
popf
xor
aam
xor
cmp
mov
jne
inc
lods
lret
pusha
dec
fwait
xor
xchg
int
cmp
xchg
fistl
rorl
cmp
daa
inc
add
lock
pop
call
sbb
insl
jns
lret
cmp
add
inc
pop
orb
repnz
xchg
ret
cmp
lock
pop
lcall
sbbb
mov
sbb
or
xlat
cwtl
xchg
xor
push
je
loopne,pn
repz
int
nop
pop
xchg
sbb
inc
dec
stos
popa
mov
rcr
mov
or
bound
imul
and
jl
rep
mov
mov
movsl
mov
jg
or
xchg
movsb
mov
jmp
shl
inc
add
mov
sub
sbb
jno
or
and
mov
sbb
test
insl
cmp
movsl
sarl
cmp
or
cmp
cli
sbb
dec
xchg
subb
rcll
cmp
repnz
dec
push
xor
fstl
fldcw
push
mov
mov
loop
add
popf
roll
cmp
push
or
bound
cmp
in
or
dec
imul
dec
xchg
mov
cmp
int3
xchg
loope
loopne
jmp
dec
repnz
jp
jmp
xchg
sti
add
xchg
push
movsb
not
leave
fst
push
popf
iret
inc
mov
dec
dec
push
jmp
add
loop
vrcp28sd
in
mov
insl
adc
and
adc
nop
aad
movsl
add
in
popa
mov
scas
iret
jnp
cmpsb
xchg
push
mov
scas
add
shlb
pop
xchg
pop
xchg
mov
ret
dec
mov
mov
lods
jo
cld
mov
adc
ror
dec
or
roll
push
popa
ja
or
sub
push
cmp
jns
mov
lcall
cli
sbb
push
shrl
insb
aad
pusha
or
add
dec
jg
and
cltd
mov
and
mov
mov
pop
pop
dec
fwait
inc
xchg
mov
sbb
rclb
insl
cmp
push
lods
fidivrs
lds
xor
push
xchg
jno
pop
pop
mov
ss
lret
push
pusha
sarl
xchg
jno
repz
push
insl
mov
repz
add
mov
dec
clc
gs
adc
and
mov
mov
pusha
dec
dec
push
push
fs
call
lods
xor
roll
in
push
or
scas
mov
sbb
and
js
or
or
jmp
out
and
ret
call
jg
xchg
dec
jno
mov
shl
inc
push
fwait
pusha
data16
fisttps
and
cmp
fidivrs
xchg
mov
mov
cmp
sbb
sbb
repz
push
push
pushf
lods
mov
mov
xor
mov
lods
xchg
dec
cmpsl
outsb
movsb
jo
add
sub
pop
gs
scas
add
xor
and
xor
fucomip
andl
pop
jge
mov
cli
mov
repnz
pop
inc
cwtl
adc
fdivrp
mov
jl
into
sub
mov
dec
test
add
cmp
movsl
aam
add
dec
and
mov
inc
jmp
ja
aaa
lahf
inc
jl
cli
push
pop
cmpsb
mov
fcomps
sub
movsl
mov
clc
sbb
shrb
sbbl
pop
in
imul
or
and
test
stc
push
jg
fsubl
inc
mov
enter
sub
aaa
ljmp
pushf
pop
pop
pop
xlat
mov
jl
dec
mov
jge
aas
repnz
lock
lods
inc
idivl
outsl
jl
mov
push
pop
cmp
out
push
adc
std
mov
push
jae
mov
mov
cli
negb
outsb
mov
jns
pushf
loop
popf
cltd
inc
mov
jo
mov
lods
daa
mov
push
dec
pop
fcomps
jae
int
cltd
mov
mov
ja
pop
stos
push
jle
cltd
dec
xor
sbb
mov
sub
es
jecxz
repnz
sub
inc
jg
insl
push
in
ret
adc
xor
test
push
inc
dec
mov
pop
movsl
jmp
mov
ret
pop
in
loop
aas
xor
sbb
aas
push
xchg
inc
in
sub
xchg
stos
cmp
aad
jmp
es
sbb
dec
and
inc
push
sub
pop
cmp
dec
mov
dec
mov
lds
xchg
cmpsb
aas
sub
mov
mov
cmpsb
push
js
mov
aad
jbe
pop
mov
pushf
xchg
test
cmpsl
adc
mov
ret
xor
add
and
ja
cmovne
add
loope
xchg
popa
xor
adc
or
negb
repnz
xor
je
dec
push
add
push
insb
push
data16
jb
sbb
sti
push
mull
mov
push
ret
lret
and
sbb
leave
add
push
jno
das
mov
xchg
push
mov
xchg
cwtl
push
adc
test
cwtl
xchg
mov
aaa
pop
lds
mov
fwait
inc
mov
pop
xor
cmp
dec
or
lret
add
loopne
gs
imul
xor
aam
outsb
push
pop
int3
push
in
mov
sub
dec
cli
enter
lds
dec
pop
mov
mov
add
adc
fs
out
mov
insl
iret
inc
lods
cmc
xlat
filds
pusha
inc
xchg
add
add
jmp
lods
cmp
pop
xchg
xor
popa
xchg
stc
xor
cli
inc
push
cli
or
test
push
arpl
jg
cmp
adc
scas
push
pop
push
push
rorb
push
hlt
inc
mov
into
fildl
mov
loope
xchg
clc
inc
jbe
jmp
jno
jno
sub
fstp
aad
adc
mov
or
sbb
filds
in
push
or
in
icebp
inc
insl
dec
mov
jnp
sbb
sub
and
mov
push
idivl
sbb
inc
aas
cltd
fcoms
mov
xchg
pop
daa
add
mov
out
pop
xor
pop
test
mov
lret
sbb
xchg
fucomi
imull
andl
or
mov
loop
fimull
cmpsb
popf
mov
nop
add
and
add
gs
and
mov
jmp
jl
rorb
rorl
test
icebp
and
lds
xchg
int
xor
pop
xchg
std
push
jle
cmp
push
push
pop
sub
and
mov
imul
inc
xor
sbb
sub
jp
int
jle
in
sub
adc
pop
mov
repz
sub
dec
xchg
push
inc
out
cmpsl
xchg
rorl
les
mov
test
aaa
arpl
data16
mov
sahf
pop
int
cmc
xchg
sbb
push
push
rorl
dec
je
fldcw
pop
sub
sub
rclb
mov
jl
test
negb
pop
jle
jae
popa
mov
sub
nop
push
add
cld
fisubs
add
repnz
movsl
jb
cli
inc
fsubs
cmp
inc
cmp
jo
xor
jmp
sti
add
stos
add
lods
std
es
jb
xchg
inc
mov
push
out
pop
add
stos
icebp
xchg
cld
inc
fcompl
rolb
call
fwait
adc
mov
popa
push
dec
sub
cmp
cmc
dec
cmp
stc
jo
in
mov
aaa
test
or
sub
popf
lea
daa
and
cmp
mov
movsb
int
xchg
ret
jne
or
jl
pusha
arpl
in
jmp
call
aas
mov
push
adc
fdivs
lds
mov
movsl
pop
push
add
mov
jmp
pusha
in
mov
jmp
jecxz
inc
mov
pop
ljmp
loope
push
sub
faddl
enter
jle
fistl
xchg
int
inc
inc
or
mov
scas
out
aaa
xor
orb
jb
mov
jbe
xchg
inc
pop
or
jns
imul
add
fmuls
call
jge
adc
int
add
lcall
shlb
int3
jae
pop
sub
repnz
mov
popf
sub
insl
leave
enter
imul
movsb
dec
sub
xor
add
push
xchg
clc
jecxz
adc
mov
xor
hlt
xor
adc
popa
rolb
sbb
mov
fs
and
fdivr
mov
sbb
gs
stos
int3
stos
in
scas
mov
test
sahf
pop
xor
push
sub
push
xchg
subl
push
jne
dec
push
jne
insb
loope
add
mov
loop
pushf
in
mov
cld
ror
fsubs
jo
into
push
sarl
dec
xlat
adc
or
mov
es
out
pop
jg
jns
dec
popf
pop
dec
inc
daa
jp
mov
pop
and
lahf
xor
lds
add
nop
inc
popf
mov
jbe
xor
sub
dec
shll
test
jnp
aam
add
stos
and
test
cmc
or
aas
or
xlat
out
inc
es
sbb
fstps
stc
pusha
outsb
insb
push
and
xor
out
pop
rcll
out
ljmp
mov
fldcw
int3
jne
aam
dec
sbb
ret
ret
jmp
outsl
insb
pop
xchg
push
adc
aam
daa
mov
dec
and
xor
imul
stos
mov
mov
outsb
outsl
in
mov
loop
pop
jg
jg
ret
in
or
xchg
out
fisttps
leave
push
mov
lock
imul
out
jl
sub
mov
mov
xchg
stos
aad
mov
cltd
xchg
mov
popf
sub
xor
jecxz
inc
fstps
insl
adc
fstl
cmc
mov
xchg
incb
xchg
xor
sbb
pusha
xor
hlt
cmp
cmp
mov
pop
fsubl
cmp
lret
in
and
inc
xor
push
sbb
jmp
sub
pop
aas
stos
jno
add
test
add
mov
mov
lret
hlt
lds
js
das
aad
jge
std
pop
ljmp
mov
adcb
push
popa
insb
sbb
inc
scas
leave
ret
adc
mov
add
sbb
test
jno
xlat
enter
push
jp
insb
or
je
hlt
dec
cmp
cmp
scas
mov
push
jnp
xor
inc
inc
hlt
and
or
push
xchg
pop
in
mov
iret
mov
sarb
subb
jl
std
mov
pop
jne
stos
adc
xorl
mov
ja
in
lea
xor
xchg
iret
mov
mov
adcb
sub
jp
mov
sar
shl
cs
xor
fsubrl
jno
and
sbb
dec
dec
divl
xor
jae
jge
pop
std
xlat
std
sub
push
xlat
js
xchg
and
arpl
cmp
shl
jo
dec
cmp
inc
movsb
add
sbb
mov
fildl
or
mov
bound
sub
ret
aad
fcmovnb
add
xchg
sub
sbb
mov
or
nop
not
jnp
data16
dec
jmp
popa
push
mov
sbb
aas
shl
loop
cmp
dec
lahf
xorl
bound
std
fwait
mov
adc
scas
fsubl
out
inc
pop
loope
xchg
test
pop
mov
stc
orb
cmc
cltd
test
pop
push
iret
sub
mov
pop
movsl
jecxz
repnz
out
insb
cmp
adc
xchg
adc
js
mov
xchg
rcrl
stc
pop
loopne
and
test
pushf
add
xor
sub
push
mov
cmp
mov
and
test
jp
call
test
pop
pusha
sbb
pop
mov
dec
std
push
loop
xchg
orl
mov
dec
test
dec
pop
jns
scas
adc
fldlg2
jbe
cmpsl
insl
jbe
adc
pop
ss
push
sub
sub
inc
movsl
xor
fldt
leave
es
jne
dec
loope
mov
lock
lcall
push
pop
pushf
and
loope
lret
mov
jg
adc
push
mov
mov
push
fsubr
pop
scas
lret
push
xchg
cmp
sbb
scas
lahf
mov
sbb
xchg
inc
sbb
and
xor
in
xor
pop
rcrl
mov
stos
outsl
fldl
hlt
test
lret
movlps
orb
mov
sbb
in
mov
pop
and
push
dec
mov
hlt
mov
xchg
push
xor
in
cmpsl
cmp
or
pop
adc
outsb
and
lods
jb
sti
jge
push
adc
and
mov
dec
sub
mov
insb
mov
add
sarl
loope
mov
jp
outsl
imulb
dec
adc
pop
fwait
je
jnp
pop
dec
mov
ret
xchg
and
mov
dec
mov
mov
mov
add
adcb
out
aaa
dec
js
dec
mov
push
rcrb
adc
movd
hlt
hlt
test
mov
aam
shlb
fdivrs
mov
push
sbb
adc
jge,pn
mov
out
xchg
pop
test
imul
xchg
inc
ljmp
sub
jns
mov
jne
mov
jg
xor
scas
addr16
out
inc
or
mov
call
out
dec
cwtl
mov
popf
or
dec
dec
cmpsl
inc
adc
icebp
pop
or
or
rorl
or
mov
icebp
cli
mov
sbb
stos
mov
mov
xchg
divl
int
in
mov
lret
fiadds
mov
sub
add
shl
inc
pop
ljmp
dec
gs
xor
cs
jne
xor
ss
sub
mul
adcl
push
faddp
sbb
adc
cwtl
xchg
sbb
lret
mov
push
cltd
push
xor
icebp
xor
or
or
inc
mov
int
sbb
jne
push
out
fcoml
add
mov
filds
pop
je
sbb
dec
fistpll
push
lcall
jno
sbb
sbb
dec
loop
hlt
cwtl
add
loop
or
push
mov
imul
and
fstps
xor
adc
jl
pop
xchg
mov
push
aas
mov
neg
or
fistl
jae
or
loope
fiadds
je
leave
jb
nop
push
negb
cmc
aam
or
dec
lock
negl
popa
call
fistpl
xchg
imul
adc
shrb
rcrl
jmp
inc
sub
and
adcl
aas
mov
insl
mov
jo
and
add
push
sbb
dec
std
aam
pop
inc
or
jecxz
imul
mov
jmp
add
lcall
sbb
jmp
std
mov
jnp
xchg
int3
call
mov
adc
jno
out
adc
daa
cmp
into
mov
pusha
in
mov
add
mov
fnstcw
cmpsb
dec
iret
test
sub
incl
test
imul
in
in
out
lcall
xor
scas
lahf
jae
sahf
sbb
and
jl
je
mov
stc
in
jne
jmp
pop
or
adc
aam
adc
mov
and
data16
dec
cs
in
stos
out
iret
loopne
jmp
aaa
sbb
jbe
dec
adc
add
add
icebp
or
popa
loop
sub
notl
mov
je
push
cmc
jle
adc
clc
pop
shlb
sub
mov
psubsb
pop
cmpsl
cmpsb
dec
ja
into
adc
dec
jecxz
xchg
jbe
repnz
mov
mov
mov
jmp
push
mov
sub
bound
testb
mov
cmp
mov
push
sbb
aam
pop
cmpl
test
cmp
faddp
sbb
fnstenv
xchg
pop
lret
jg
push
mov
or
sub
push
sti
popa
out
sub
dec
add
sbb
or
or
jmp
test
nop
nop
in
aam
js
cmpsl
push
or
and
fucom
stos
shrb
bswap
jae
xchg
test
das
cld
push
ds
call
fmulp
cmp
push
push
pop
mov
dec
jns
xchg
cmp
dec
sti
ret
into
add
mov
jmp
aaa
jmp
sub
xchg
shrl
add
aaa
out
ljmp
ds
in
insl
and
insl
enter
sahf
repz
fcmovu
les
and
ret
movsl
add
add
pop
out
dec
rcll
or
andb
pop
fcomip
lods
mov
outsb
sub
gs
mov
sbb
aad
push
imul
dec
push
mov
addb
into
xchg
in
dec
pop
fsts
xchg
popf
insl
pop
mov
adc
adc
fidivl
lea
push
insb
lahf
fsubs
sti
js
push
dec
cmc
sbb
mov
andl
inc
jbe
jp
push
js
bound
std
mov
jae
into
xchg
fidivrl
add
push
mov
incl
popf
aad
loope
test
and
push
test
and
bnd
mov
jp
xor
push
jmp
std
icebp
pop
or
incl
xor
dec
mov
mov
mov
and
into
jns
loopne
sub
adc
xor
lahf
push
jno
ljmp
adc
push
cmpsb
push
push
setl
mov
xchg
pop
sub
mov
movsb
xchg
add
xchg
push
mov
dec
leave
dec
jecxz
sbb
inc
sti
xchg
inc
xlat
dec
fwait
push
fst
repnz
repz
and
imul
jmp
in
sbb
push
out
mov
popf
sbb
int3
out
dec
mov
dec
pop
loopne
lcall
js
cmp
or
mov
js
cmc
mov
popa
xchg
mov
fadds
repz
sbb
daa
xchg
mov
lcall
aas
sub
movsl
add
in
in
lods
pop
push
sahf
and
imul
adc
sbb
dec
sbb
mov
test
in
out
mov
dec
xchg
pusha
dec
push
xchg
in
cmpsb
in
push
mov
ds
sti
or
xchg
push
insb
mov
and
out
lahf
push
push
jge
ds
pushf
lock
clc
xchg
out
ret
push
lahf
test
cmpsb
cs
les
hlt
mov
add
fidivl
xchg
fxch
dec
out
pop
or
popf
aam
jmp
lods
dec
cmp
mov
dec
dec
rcl
pop
adc
outsl
imul
and
sti
cmp
mov
jo
out
in
and
sub
shlb
stc
push
jo
xchg
aam
inc
xorl
adc
cmp
cltd
fistpll
adc
mov
lock
inc
fmull
mov
and
xchg
inc
call
loopne
pop
enter
addps
dec
hlt
or
pusha
mov
cwtl
ja
movl
push
sbb
incb
and
push
cmp
ljmp
hlt
mov
scas
std
inc
pop
dec
ss
push
push
ss
mov
fwait
lcall
sbb
lret
fsubrs
loop
sqrtps
jmp
repz
aas
xor
pusha
mov
pop
push
add
add
jbe
cmp
dec
xchg
inc
sarb
mov
out
enter
das
add
pop
repnz
pop
sbb
mov
bound
mov
aas
inc
add
lods
push
sub
dec
push
mov
dec
dec
inc
jle
cmp
outsl
mov
jbe
inc
fwait
loope
enter
fwait
push
sbb
pop
jae
inc
mov
cmc
cmc
fs
cld
arpl
xchg
xchg
add
jp
mov
cmpsl
stc
sbbl
or
lea
lea
outsl
dec
xor
xor
repnz
kmovb
pop
pop
or
inc
into
in
dec
test
rcr
dec
bound
out
mov
and
cld
outsl
std
ret
ss
mov
mov
sti
fcoml
push
xchg
fdivs
in
mov
sarb
sbb
mov
mov
inc
fldt
aaa
adcb
nop
test
push
jp
int
adc
push
jbe
fdivs
roll
out
cmp
outsb
enter
cmp
rclb
push
gs
push
mov
push
add
xchg
rcl
lods
gs
sbb
fsubr
loop
push
sbb
sbb
add
inc
leave
push
arpl
repz
fcoms
pop
jge
jmp
pop
repz
iret
cli
mov
inc
mov
and
pop
and
pop
mov
ret
jno
jmp
pop
sbb
mov
psrld
jcxz
aaa
icebp
iret
mov
jp
or
fsubs
cli
sbb
lock
cmp
jnp
rorb
inc
inc
nop
mov
xor
lea
cmpsb
ds
addr16
ficompl
cmp
xchg
mov
fs
bound
into
test
sub
sbb
test
pop
mov
cmp
pusha
cmp
test
mov
mov
xchg
inc
mov
imul
xlat
inc
jne
shrl
xchg
jne
sahf
push
inc
sbb
addl
mov
xchg
test
lock
adc
and
jp
fistl
fwait
pop
dec
insb
mov
outsb
pusha
ljmp
push
cmpsl
dec
pop
push
jp
adc
jmp
aad
fsubs
lods
mov
insl
sbb
fucomp
xchg
in
shrl
scas
repnz
aam
aad
mov
fwait
adc
add
into
mov
je
dec
out
mov
pushf
leave
call
pop
decb
loope
jnp
cmpsb
mov
iret
scas
dec
or
add
imul
mov
or
cmp
mov
push
mov
test
xorl
xor
push
xor
ds
sub
jp
in
arpl
inc
int
ds
int3
adc
or
les
push
sahf
sub
mov
adc
int
iret
leave
stos
scas
add
or
imul
and
aas
sbb
cmp
sub
pop
loop
arpl
mov
cltd
adc
cmp
sarb
inc
inc
sub
sbb
aas
jmp
test
mov
adc
cmp
popa
cs
cmp
mov
adcl
iret
pop
lods
cld
jl
inc
cmpsl
subb
push
arpl
and
les
cmc
dec
ficoml
jp
add
pop
loopne
sub
jmp
xor
jmp
lret
lock
inc
cmp
sub
xor
fnstcw
movsl
mov
xor
jne
stos
ds
stos
adc
mov
dec
mov
sub
xlat
dec
cmp
insb
cmp
adc
inc
aam
aam
in
or
pushl
push
fwait
popf
outsl
fdivr
popa
enter
cs
cmp
xchg
dec
adc
dec
fisubs
lods
cmp
shll
shl
push
mov
cmc
jmp
scas
pop
mov
pop
pusha
add
repz
xchg
push
test
sub
mov
jmp
mov
imul
xchg
or
pop
loop
sbb
inc
jne
loopne
jb
dec
mov
push
adc
jge
dec
mov
daa
cmp
aas
clc
sbb
dec
pop
insl
dec
dec
add
mov
cld
push
pop
outsl
inc
std
loope
es
jnp
lods
jmp
sarb
xchg
rcl
shlb
js
outsl
cmpsw
movsl
inc
mov
add
or
adc
mov
pop
dec
in
sbb
pushf
lods
outsb
xor
sbb
and
mov
mov
pop
dec
imul
lock
dec
sub
sbb
mov
push
push
mov
jns
add
fistpll
aas
inc
mov
sti
sar
loope
mov
mov
fbld
cmp
jmp
pushf
pop
push
and
inc
pop
scas
outsl
aaa
stos
or
rclb
aaa
lahf
fwait
adc
mov
ja
push
xchg
xor
cld
mov
popf
lock
stos
push
cmp
push
iret
call
stos
ds
mov
in
xchg
adc
cmp
clc
push
xchg
jno
or
dec
pop
nop
int3
mov
jmp
inc
nop
es
ja
cs
inc
lret
in
xor
dec
idivb
pushf
xlat
or
mov
lods
maskmovq
testl
jmp
arpl
lock
ds
xchg
icebp
enter
sub
lret
stc
movsl
inc
mov
adc
aad
jb
subb
movsb
sub
add
fadd
addl
or
push
popa
out
jp
cmp
stc
bswap
mov
mov
orb
in
shlb
scas
cmpsb
jle
enter
pop
cld
das
es
push
mov
push
nop
xor
xchg
adc
mov
fcomi
xor
jmp
shrb
or
movsb
jmp
or
dec
push
fcmovnb
scas
push
xchg
adcb
stos
arpl
icebp
inc
shr
pop
mov
sbb
cmp
out
mov
xor
pusha
repz
mov
nop
push
push
nop
mov
frstor
jge
xor
cmpsb
inc
dec
xor
inc
scas
sub
cmpsb
mov
rcrb
test
adc
cmp
jp
sbb
stc
adc
ja
sbb
or
jno
test
cmp
dec
and
insb
fs
jecxz
push
push
dec
inc
mov
lea
jg
mov
sbb
push
fisubs
cltd
fistpl
outsl
out
cmp
jbe
dec
jecxz
in
push
clc
outsl
add
cmpsb
int3
aaa
mov
mov
lods
out
push
lahf
fcoml
cmp
push
push
aas
mov
fwait
and
cmp
roll
pushf
and
andl
lods
xorb
mov
out
lock
fidivrs
arpl
lods
roll
lret
inc
cmp
subb
subl
or
icebp
sarl
xor
xchg
cwtl
orb
mov
fstpt
addb
push
popa
ret
mov
inc
popa
xchg
pop
adcb
sbb
cmc
fidivrl
xor
or
push
sbb
sub
lock
inc
popf
mov
dec
mov
jg
or
lock
jno
scas
ud1
lret
jbe
add
mov
or
push
push
lods
add
fidivs
repz
inc
dec
repz
imul
inc
addr16
xor
js
imul
rcll
aam
jl
sahf
mov
movsb
mov
inc
test
lds
test
sbb
lret
movsl
lret
stos
cmp
enter
fistpll
decb
add
and
aaa
stos
mov
fs
dec
stos
rcr
aaa
imul
sub
inc
fcmovbe
push
inc
imul
imul
roll
sub
sub
xchg
xchg
push
sub
pop
mov
test
fiadds
scas
movsb
or
mov
icebp
cmp
push
or
sub
into
sub
int3
pop
out
data16
les
add
and
adc
nop
scas
cltd
dec
ds
sahf
sahf
jl
jecxz
pop
cltd
mov
into
add
sbbb
xchg
mov
pop
or
and
mov
inc
or
mov
xchg
jg
call
int3
shl
cmp
dec
pop
xor
dec
mov
jp
ja
pop
lret
lods
jle
int3
adc
scas
mov
push
xchg
add
std
lock
jmp
int3
push
pop
in
mov
int
outsl
add
sub
cmp
mov
outsl
negl
push
ja
push
lcall
inc
pop
fstpt
mov
jno
push
test
adc
mov
mov
into
cwtl
sub
popf
insb
out
rorl
xchg
ds
mov
inc
pop
jo
fildll
rcr
push
test
dec
aas
and
mov
outsl
imul
lods
push
adc
inc
push
pushf
mov
daa
sbb
mov
sbb
loopne
lds
xorb
jne
loop
daa
inc
pop
and
pop
and
lret
mov
cmp
stos
dec
in
add
test
cwtl
rorb
std
lds
jns
xlat
mov
pushf
adc
dec
jns
cmpsl
cmp
fidivrs
mov
sahf
shl
push
dec
fidivrl
and
inc
aaa
push
jb
pop
inc
dec
xchg
mov
ja
pop
cmp
test
xchg
ja
in
mov
xchg
loopne
mov
shlb
lock
in
enter
loopne
cmc
mov
xchg
inc
mov
adc
dec
popa
cs
movl
int
mov
divb
xor
dec
mov
cmp
jae
or
pushf
ja
shlb
mov
push
or
adc
daa
aas
ret
xor
push
fisttpll
in
mov
sbb
fs
loopne
lret
sub
inc
insl
es
add
in
test
mov
cs
mov
sbb
cmc
inc
adc
sub
fwait
out
mov
xor
pop
xchg
xchg
fstps
in
popa
jbe
fwait
call
ficoml
negl
add
mov
pop
xor
inc
or
cli
mov
ret
push
iret
out
scas
add
outsl
imul
test
pop
cli
sub
icebp
lods
scas
call
loop
cld
stc
and
push
stos
inc
pop
lcall
cmp
orl
dec
xchg
call
int3
cld
insl
js
mov
adc
imul
and
jno
shl
xor
js
mov
dec
mov
jg
test
mov
lahf
aad
aas
xchg
adcb
cmp
dec
dec
iret
das
shlb
nop
inc
pop
mov
cmp
sub
pop
clc
sti
mov
fdivr
cmp
into
adc
mov
sti
mov
jnp
inc
pusha
aad
xchg
and
mov
jb
movsb
mov
dec
shll
movsl
adc
lods
daa
adc
pop
sbb
fdivp
cmp
les
ja
sbb
imul
cmpsl
jecxz
sti
cmp
cmp
jle
movsb
inc
push
outsb
es
rcr
or
popf
cmp
arpl
pusha
xchg
aaa
flds
and
mov
sbb
and
les
ret
je
mov
in
or
mov
out
mov
shll
loope
sbb
repz
dec
jle
mov
fistps
cmp
dec
clc
lods
mov
mov
inc
xchg
xchg
jecxz
push
adc
xorb
inc
xchg
negb
stc
fs
fistpl
cld
sub
push
inc
xor
add
adc
jae
jle
add
mov
jg
fnsave
add
mov
test
js
mov
jnp
or
insl
dec
dec
ss
stc
pop
shl
add
cmp
lock
mov
mov
mov
scas
add
sub
mov
push
sbb
pop
mov
repz
inc
sub
js
sbb
jbe
push
rol
sahf
fwait
cld
bound
and
lock
xorl
pop
jle
and
out
cmpsb
xrelease
mov
mov
ljmp
mov
dec
sub
jno
in
sbb
rorl
inc
dec
das
lahf
cmp
sbbl
in
sbb
sub
icebp
pop
mov
cld
pop
xchg
add
outsl
mov
mov
cmp
mov
mov
cmpsl
push
adc
lahf
adc
xchg
je
xchg
xor
xchg
and
jg
fsubrs
leave
cmp
mov
pop
inc
aam
push
pop
ret
inc
mov
or
into
lret
xchg
in
xor
jl
lods
push
pop
cmpsb
or
shlb
adcl
fstpl
pop
mov
ret
shll
out
mov
push
leave
add
cld
adc
dec
push
push
hlt
sbb
and
push
or
repnz
sbb
and
inc
pusha
push
int3
movsl
div
lods
mov
mov
filds
ret
data16
xchg
fcompl
mov
and
adc
pop
or
addr16
cwtl
jl
in
dec
loope
mov
mov
insl
test
lds
cmp
xlat
mov
loopne
jbe
cmp
jnp
mov
cwtl
test
fisubrl
cmp
push
pushf
xchg
cmp
ds
hlt
popf
jae
popa
fimuls
fsubs
gs
hlt
fsubrs
shll
test
mov
out
mov
insl
cmp
sub
sub
movsb
or
pop
or
rolb
mov
inc
xor
sub
adc
xor
mov
jne
ja,pt
add
data16
pop
xor
pop
or
stos
sbb
sbb
ret
cmpsb
jp
add
xchg
into
xor
daa
pop
mov
ds
or
push
xlat
lret
ds
or
and
mov
pop
sbb
add
cmp
xor
adc
test
and
imul
mov
xchg
into
inc
dec
shrl
xchg
pop
test
push
cmp
pop
mov
jp
push
pop
clc
rorb
insl
test
adc
jbe
dec
jmp
lds
add
repnz
cmp
adc
mov
pop
mov
mov
jp
pop
mulb
mov
out
daa
out
jle
test
cmp
cmp
add
loope
cmovne
push
inc
es
int
mov
dec
lods
or
mov
int
ja
pop
cmp
dec
adc
cld
or
push
fists
or
cwtl
mov
inc
cmpl
fs
jnp
cmp
xchg
int
xrelease
mov
call
idivb
stos
and
jo
subb
inc
jp
xchg
dec
mov
adc
or
aam
fildl
bound
mov
stc
mov
es
xor
cmp
jecxz
xor
imul
pop
adc
jmp
decl
lods
push
push
ds
les
les
lds
mov
mov
add
adc
push
cmp
add
or
into
addr16
loope
xchg
pop
mov
cmpsb
mov
inc
dec
cmp
jb
mov
push
mov
adc
pop
inc
jge
mov
cli
xchg
inc
and
mov
ja
iret
sub
push
mov
mov
pop
push
outsb
jp
test
add
loope
jmp
icebp
pop
push
sbb
xor
adc
mov
sbb
aam
je
mov
test
movsl
xchg
rolb
lahf
mov
xorb
or
fs
sbb
data16
cli
fimuls
loope
cwtl
aad
inc
add
fimuls
test
outsl
jecxz
xor
mov
lds
sti
jle
popa
fiadds
outsl
push
das
cld
cmp
mov
inc
cmp
movsl
push
sbb
xor
stos
je
popa
adc
xlat
ljmp
xor
or
sbb
test
pop
rorl
xchg
sbb
adc
pushf
pusha
pushf
mov
xor
dec
jae
fdivrl
mov
pushf
xchg
ss
into
movl
push
cmpsb
xchg
cmp
jb
pop
or
pop
jbe
xchg
mov
cltd
jno
dec
push
pop
scas
mov
scas
cmp
inc
pusha
into
jge
mov
xor
movsl
insb
and
adc
xchg
pop
pusha
jle
jp
iret
lret
loopne
bound
push
jmp
movsl
ret
cld
sbb
jge
sbb
inc
or
lea
cli
pop
pop
sbb
cmc
loopne
mov
sub
ficoms
lock
cld
lcall
xor
std
push
fiaddl
incl
loopne
jbe
and
mov
mov
imul
push
or
popf
cmp
push
mov
in
xlat
mov
mov
push
xchg
adc
es
in
xchg
ljmp
js
sub
mov
in
xor
cmc
ret
dec
iret
mov
clc
mov
xor
pop
jno
or
mov
imul
inc
dec
dec
jmp
inc
std
sub
jo
test
mov
outsl
sbbl
stos
dec
fwait
xor
enter
jo
mov
data16
and
fsubs
int3
out
or
scas
sbb
jmp
stc
jl
xchg
dec
push
test
stos
nop
jns
fs
vmovupd
pop
pop
cmpb
stos
sbb
sbb
add
sub
sbbl
nop
mov
cld
loop
out
sub
cmc
sbbb
or
outsl
inc
and
xchg
andl
cmp
sahf
insl
mov
and
sbb
dec
mov
icebp
lds
pushf
imul
popa
hlt
mov
cmp
sti
out
enter
inc
push
test
cmpsb
scas
cmpsl
pop
outsb
xchg
in
dec
xchg
or
xor
mov
push
pop
pop
push
xchg
or
lea
mov
in
cmp
adc
les
push
adc
aas
push
sub
les
push
repnz
xchg
dec
and
mov
and
pop
sbb
lahf
mov
cmc
inc
mov
or
add
xchg
stos
sbb
jp
and
int3
call
pop
movsl
xor
es
lahf
sbb
xor
ljmp
sbb
sub
ja
mov
mov
stos
fidivl
xor
xor
add
outsb
xor
cmp
inc
mov
pusha
adc
addr16
data16
std
hlt
dec
xorb
mov
pop
adc
push
jl
int
mov
je
xchg
jo
addr16
mov
stc
push
dec
insl
pusha
inc
pop
lods
fwait
clc
push
pop
xor
xchg
stos
inc
stos
xor
xor
test
lock
jnp
inc
add
add
add
sub
sub
and
xchg
in
rcl
push
add
stos
mov
inc
mov
push
pop
sub
icebp
addr16
mov
inc
icebp
mov
cmp
in
jge
fs
mov
and
push
sbb
divl
nop
push
cmc
push
movl
imul
dec
xchg
and
jmp
add
std
push
cmc
mov
inc
insb
jb
sbb
gs
sub
sub
cmp
mov
mov
shlb
mov
cmp
pop
addr16
stos
call
jmp
imul
jmp
out
repz
insl
pop
jae
pop
sub
ljmp
add
add
dec
leave
xor
rol
sbb
or
inc
ljmp
ret
arpl
ffreep
clc
mov
jecxz
jge
and
aas
add
push
loopne
cmpl
push
icebp
add
sarl
mov
push
mov
add
adc
pop
js
or
bound
popf
pop
sbb
cmp
ret
test
cmp
in
ljmp
lahf
test
or
adc
daa
pop
pop
imul
pop
cld
or
ja
cmp
cli
enter
or
push
push
fs
lds
rclb
and
dec
loope
int
lock
pop
rcl
mov
lds
flds
out
fcomps
js
push
lret
xchg
repnz
out
lods
je
push
ds
leave
lahf
hlt
pop
mov
cwtl
aaa
push
dec
in
mov
addr16
nop
cltd
cltd
fbstp
xor
ljmp
fadds
cmpsl
xor
int3
adc
pop
adc
insl
mov
sbb
addl
fbld
jb
cmc
cwtl
jmp
inc
in
aam
call
aaa
or
mov
cli
jmp
sbb
cld
mov
mov
popf
and
mov
jmp
push
adc
dec
loop
out
fwait
mov
push
fwait
push
cmp
out
fmulp
mov
jmp
xor
ljmp
in
push
jae
jne
dec
pop
pop
inc
sti
add
fdiv
jmp
insb
aaa
adc
in
mov
cld
repz
test
dec
loop
lock
dec
mov
push
mov
dec
push
and
leave
push
adc
fwait
push
mov
mov
xor
bound
xchg
push
sahf
add
pop
ja
adc
sub
outsl
pusha
cmp
mov
into
jle
loope
cmp
popf
mov
pop
sbb
xchg
mov
sub
lret
ja
mov
inc
lock
jge
inc
aam
enter
jmp
xchg
pop
and
push
les
jmp
inc
lock
jnp
out
cld
xchg
imul
fistpl
daa
in
in
repnz
gs
jne
mov
jae
xchg
dec
stc
mov
lret
data16
jecxz
cs
xor
repz
adc
iret
stos
push
js
fs
push
sbbb
mov
fdivrs
xor
imul
js
mov
hlt
imul
lods
sbb
int
psllw
in
cmp
je
mov
add
repz
push
or
xchg
dec
mov
scas
mov
push
roll
or
fidivrl
adc
push
inc
gs
cmp
sub
xor
dec
add
sub
stc
cld
test
mov
sub
mov
jbe
dec
clc
mov
sahf
jge
imul
ljmp
shl
insb
sbb
add
mov
loop
sub
movsl
hlt
push
jnp
cmp
js
push
add
imulb
addr16
cs
xlat
std
sub
or
aaa
jl
add
es
cld
jp
les
test
scas
ret
jae
cmp
pop
sbb
data16
xor
xchg
rcrb
sbb
inc
dec
xor
add
xchg
sub
jmp
push
push
cwtl
fs
rorb
fnsave
bound
cwtl
stos
push
lods
cmp
jl
mov
dec
sub
stos
pop
fs
sti
test
or
xor
repz
sbb
mov
cmpsb
inc
aad
jbe
inc
add
mov
and
and
jecxz
hlt
sub
in
mov
dec
pop
ljmp
sub
adc
das
loop
add
outsb
fdivrp
orl
mov
sbb
mov
in
cmpsb
insl
mov
popaw
dec
jp
test
push
iret
imul
push
adc
mov
add
lret
add
mov
adcl
jg
jae
jo
push
nop
mov
loop
xchg
push
dec
fsubr
out
mov
mov
in
or
fwait
dec
and
ss
in
dec
test
hlt
adc
push
jnp
inc
std
sbb
lods
xor
jecxz
pop
sub
inc
push
and
cltd
insl
mov
insl
adc
fs
push
sarl
cmp
jmp
shl
loopne
lahf
or
push
push
cmp
ja
ja
dec
dec
enter
xlat
adc
aas
cmp
and
pop
daa
sbb
mov
and
iret
inc
out
sahf
xor
jnp
mov
insb
sarl
andl
ret
stos
sahf
call
xor
cmpsl
iret
mov
jo
mov
mov
sbb
add
push
fisubrs
xchg
mov
inc
sub
std
xchg
mov
push
or
xlat
fstpt
cmpsl
sbb
ljmp
mov
iret
shll
add
fbld
mov
imul
jne
xchg
push
popf
jae
pop
add
ss
test
int3
pop
or
lods
shlb
stos
cmpsb
out
std
pop
stos
mov
fiaddl
sbb
fwait
adc
push
mov
push
sarb
pop
lret
fistl
cmpsl
mov
mov
pusha
push
dec
push
arpl
or
push
loopne
sbb
push
lock
lds
jp
adc
sub
andb
int
cmp
ret
xchg
cmp
idiv
shll
mov
pop
push
arpl
and
shr
ret
cmpsl
pop
test
ja
lret
dec
repnz
mov
or
cltd
mov
fwait
wbinvd
xchg
loopne
roll
add
scas
movsb
push
or
add
adc
sbb
fcoms
inc
popf
and
lret
push
xchg
push
or
fwait
loope
dec
rcrl
dec
cmpsl
clc
or
decb
cltd
push
mov
popf
lds
fstpt
and
dec
or
aad
cmp
sbb
data16
fsubrl
movsb
add
loopne
roll
testb
and
push
cltd
cmp
mov
mov
jge
jnp
sub
push
rcll
adc
test
test
cmpb
sbb
dec
mov
pop
das
pop
cmp
sbb
inc
shll
aaa
idivb
inc
pop
rcrb
pop
inc
dec
jecxz
mov
push
dec
popf
sbb
dec
aam
cmpsb
sub
add
jnp
mov
lcall
bound
shrl
ja
add
jnp
test
stos
xchg
mov
pushf
aas
mov
lds
lock
push
popf
loopne
inc
or
mov
jg
fildll
int3
mov
dec
and
sub
push
pop
pop
popf
aaa
pop
pop
xor
push
scas
jns
bound
mov
push
ja
scas
or
jl
sub
inc
pop
pop
pop
orl
push
rcr
pop
jne
sub
in
jg
add
push
push
and
xor
fimuls
dec
sbb
sti
outsl
in
and
in
ret
test
xchg
das
es
int
mov
scas
add
lret
cs
adc
add
bound
inc
test
dec
int3
push
sbb
and
iret
test
or
je
xor
popa
cltd
sahf
out
push
mov
shrb
mov
mov
xchg
test
pop
imul
ds
jg
mov
inc
and
mov
xor
cmp
cltd
jge,pt
and
jbe
sub
pminub
push
xor
loope
in
mov
cld
ja,pt
or
adc
xor
enter
mov
mov
jg
fistps
out
loope
pop
xor
xchg
cld
aas
shlb
fwait
push
test
out
div
lds
mov
cs
xchg
push
outsb
jno
push
push
fwait
dec
add
cmpsl
loopne
jb
in
pop
jno
push
pop
xor
movl
and
stc
pop
popa
out
and
xor
push
inc
cmovg
icebp
add
dec
xlat
insb
imul
loop
pop
inc
sbb
loope
push
pop
adc
pop
inc
stos
or
shll
mov
adc
adc
sbb
dec
imul
pop
adc
jbe
cmp
adc
inc
js
repnz
loope
adc
lret
nop
push
pop
or
sub
push
xor
cmp
xchg
mov
loope
or
aaa
loope
out
mov
int
ret
inc
data16
int
call
dec
cmp
xchg
mov
popf
cmpsb
in
leave
dec
cmpsb
fldcw
notb
adc
xchg
mov
in
xchg
and
xor
or
jp
adc
push
xchg
inc
scas
bound
int3
les
mov
or
xchg
jmp
sbbl
fdivrs
push
aad
loopne
es
loope
dec
jae
add
xor
add
addr16
pop
sub
in
sub
repnz
out
out
ds
in
inc
rorb
cmc
les
sub
scas
jne
call
mov
addr16
mov
xchg
sbb
push
test
mov
bound
stc
ret
ljmp
mov
lret
inc
int3
cmp
or
scas
jae
in
lock
mov
mov
fwait
jl
int
mov
xor
subl
in
clc
out
lret
xchg
mov
add
punpcklwd
mov
insl
and
pusha
jnp
loop
xchg
sarl
es
push
fisubrs
mov
dec
xor
xchg
lods
xlat
inc
pop
cmp
jb
jl
movsl
test
mov
ss
in
push
mov
int3
mov
dec
mov
insl
fstpl
enter
push
dec
mov
out
gs
mov
negb
cmp
or
mull
xchg
inc
repnz
mov
jl
insl
and
outsb
fsubl
add
in
add
rorl
and
hlt
pop
fnstsw
rolb
movsb
mov
xlat
jp
lock
or
push
dec
popf
cld
addr16
lret
shrb
ljmp
cs
aas
add
dec
pop
test
mov
and
imul
fbstp
jp
stos
pop
cmp
insl
cwtl
and
adc
and
lods
stos
or
or
xchg
mov
xchg
aad
rcrl
dec
adc
outsl
xchg
mov
int
mov
cmp
mov
cmp
popa
push
push
aad
repnz
out
insb
ret
mov
pop
test
add
lcall
pop
lahf
stos
outsl
in
lds
push
mov
insb
xchg
add
pop
sbb
addl
loopne
divl
movb
mov
out
cltd
into
sarl
std
jae
lret
push
jp
push
cmp
test
inc
or
out
inc
mov
mov
adc
outsl
and
jecxz
cld
jae
xchg
lcall
loope
clc
mov
add
xor
xor
dec
mov
mov
adc
mov
je
into
jne
clc
sub
data16
sbb
clc
mov
lea
sbb
sub
cmpsl
cmp
inc
divl
imul
pushf
out
xchg
fidivl
sbb
pop
mul
scas
push
ljmp
mov
scas
or
sub
inc
mov
mov
iret
je
dec
sub
decb
jno
ja
add
inc
test
or
hlt
xor
repz
sbb
jmp
pop
fadds
add
and
aad
adc
out
sti
in
mov
xchg
out
inc
dec
and
xchg
jg
movsb
or
pop
popa
les
push
fdivp
lret
or
xchg
jb
mov
inc
div
into
pop
inc
jne
aam
sbb
or
mov
jae
or
movsl
mov
jecxz
or
cmpsb
mov
out
and
mov
cmp
test
sub
shll
mov
sub
push
pop
jnp
loope
sbb
nop
push
mov
in
xor
cmp
loope
jne
pop
aad
das
pop
cs
hlt
aam
loopne
push
xchg
loopne
mov
push
loop
inc
xchg
mov
jmp
or
xchg
xchg
add
ds
dec
fistpll
addb
outsb
and
mov
pop
sub
adc
addr16
sub
dec
push
push
test
int3
bsr
mov
stos
addb
mov
push
mov
pop
xchg
popf
mov
inc
sti
and
pop
call
test
mov
or
out
stos
outsl
mov
vpaddusb
mov
sarl
mov
ja
push
mov
push
sahf
sbb
push
dec
bound
sub
out
jnp
cwtl
mov
out
xchg
or
add
or
inc
adc
xor
or
ja
and
pusha
xlat
pop
out
push
fstpt
inc
xchg
adc
mov
cmp
repnz
pop
imul
mov
jne
mov
out
xchg
sar
js
gs
inc
pop
or
push
gs
shl
dec
and
sbb
adc
fistpl
jmp
jge
jb
out
bound
cmp
bound
jl
mov
mov
add
jne
jle
lahf
test
nop
sti
mov
cmp
and
daa
jns
adc
icebp
lock
and
and
sbb
pop
test
sub
scas
call
xchg
add
seta
or
aam
cmp
into
pop
mov
mov
pop
mov
stos
in
sub
jmp
sub
push
ficoms
or
ret
mov
jmp
push
testb
gs
cmp
int
mov
nop
adc
or
mov
daa
addr16
ret
fnsave
hlt
sub
cmp
test
arpl
fstpt
push
aas
aaa
insb
clc
lcall
sbb
jg
mov
ds
outsb
add
pop
mov
ljmp
cwtl
xchg
nop
cmp
xchg
sbb
mov
xchg
add
push
mov
pusha
add
adc
inc
adcb
rcl
ret
sub
mulb
mov
movsb
jb
call
push
mov
mov
in
xchg
sahf
adc
pop
pop
mov
das
repz
cmp
shrb
bound
mov
movsb
ja
rsqrtps
rcrl
and
cltd
or
xchg
enter
jecxz
mov
inc
jmp
iret
pop
pop
xchg
jg
mov
and
out
inc
add
pop
loopne
mov
mov
out
mov
sub
aad
sbb
in
mov
pop
test
sub
arpl
jnp
fidivrl
jns
sub
cld
sbb
mov
das
scas
add
pop
mov
jle
out
xchg
leave
push
nop
icebp
jne
cwtl
adc
sbb
aas
repnz
incl
mov
ret
aas
sub
fwait
dec
jp
mov
push
test
xor
mov
push
sbb
mov
rclb
push
int3
cmc
xchg
loopne
mov
outsb
ja
or
test
lcall
pushf
pop
mov
push
push
pushf
scas
addb
push
cmp
sub
push
lret
mov
lret
sbb
pop
xchg
xchg
mov
mov
mov
inc
bound
mov
push
pop
push
pop
mov
mov
call
xchg
into
loopne
and
nop
sub
cmpsb
pop
cmpl
fcmovnu
pusha
hlt
and
push
and
jb
mov
hlt
or
mov
jecxz
xchg
inc
jne
iret
movsb
scas
loop
mov
or
pusha
not
mov
scas
add
xor
mov
mov
mov
lods
push
bound
or
je
xchg
and
adc
aaa
mov
lds
lret
adc
lods
hlt
cmp
mov
cmpl
arpl
ret
movsb
inc
and
adcl
sbb
sbb
jae
cmpsl
jae
loop
add
push
jbe
pop
xor
mov
sbb
cmp
enter
cmp
mov
push
add
xchg
adc
xchg
loop
mov
xor
loop
fs
lods
loop
inc
scas
jl
es
pop
cltd
sub
ret
sbb
sub
xorl
inc
int
xchg
add
pop
sahf
icebp
movsb
nop
and
push
test
jmp
pop
fstpl
cmp
shrb
aam
mov
es
andb
xor
push
test
pop
cmp
add
pop
fsubrl
and
sbb
jne
lret
jno
scas
cmp
lret
pusha
lods
mov
mov
pop
mov
jle
into
jl
mov
xchg
jmp
sbb
cmp
stc
inc
pop
jo
into
dec
arpl
mov
lods
into
push
add
mov
push
mov
sbb
mov
gs
push
sahf
mov
fs
stc
in
jnp
fs
pop
inc
xchg
iret
fldt
repnz
xchg
jmp
daa
jae
xchg
and
sbb
sbb
cmp
sarb
movsb
cmp
jne
in
aaa
test
xlat
movsl
lret
adcl
pop
int3
mov
cmpsb
mov
and
fsub
aam
jnp
aaa
aam
ds
add
or
shl
push
idivb
mov
mov
or
mov
and
ds
ds
in
push
and
add
jae
jg
dec
stc
fwait
dec
bswap
mov
xor
shlb
pop
mov
xor
mov
dec
nop
add
mov
add
mov
lcall
lret
adc
leave
movsb
fs
hlt
outsl
ret
dec
push
shl
add
push
outsb
mov
jmp
xchg
inc
dec
lods
rolb
in
cli
dec
mov
scas
push
adc
sbbb
rorb
jnp
cmpsl
lret
jns
clc
mov
orl
sbb
jg
leave
loope
xchg
sbb
inc
pop
pop
jg
add
out
aaa
test
push
addr16
or
sahf
mov
mov
aam
jecxz
pop
mov
mov
fistps
inc
daa
out
mov
insb
xor
adc
rorb
nop
mov
repz
sti
xor
das
add
mov
int
jl
shrb
stos
sbb
pop
add
lea
xchg
out
ficoml
mov
pop
shrl
jge
sti
inc
mov
lods
imul
fiadds
std
mov
jmp
lret
andl
push
jmp
aam
jmp
addl
xchg
ds
push
xchg
push
mov
cli
fwait
scas
jge
mov
std
out
jne
in
add
cmp
push
mov
out
addr16
outsl
cmp
scas
imul
adc
sub
mov
inc
jge
xor
outsl
pop
roll
or
insb
jno
sbb
inc
loop
icebp
mov
lret
jmp
sbb
fnstsw
mul
mov
outsl
mov
and
push
or
or
adc
sub
in
mov
movsl
push
lds
or
fistps
xrelease
jo
push
stos
push
popf
imul
jp
es
jmp
inc
arpl
cmp
cmp
xchg
jb
or
push
mov
adc
daa
lret
popa
or
cmp
mov
test
xlat
jae
mov
clc
in
stos
mov
loopne
fimull
in
sarl
push
jno
mov
cmp
out
mov
adc
cwtl
or
data16
in
sub
add
loop
mov
out
sub
and
lahf
cmp
lock
cld
lret
push
add
jae
jns
add
sbb
mov
or
push
scas
daa
cmp
cmp
inc
sbb
and
sub
iret
push
addr16
cmp
int
cmp
cmp
fisttpll
ss
andl
mov
sub
add
sub
push
shrb
incl
xchg
xchg
sbb
cmp
mov
sbb
add
or
mov
cmpsb
xchg
jge
cwtl
adc
dec
push
xchg
mov
daa
inc
dec
cld
fstl
push
out
pop
in
inc
out
fists
xor
insl
arpl
sub
outsl
cli
inc
and
mulb
mov
push
push
mov
xchg
dec
idivb
xchg
shl
mov
dec
mov
icebp
lods
dec
negl
sbb
jbe
mov
xchg
adc
int3
xchg
adc
call
je
aam
cmpsl
add
mov
and
sbb
inc
mov
dec
je
jmp
repnz
push
mov
sub
movsl
jno
int3
aaa
add
aas
push
mov
push
sub
add
icebp
xor
add
jns
lods
xchg
es
add
fldt
stc
xchg
add
pop
and
xchg
das
mov
shll
jb
mov
jmp
adc
shr
popf
sar
mov
stos
cltd
cmp
xor
mov
sbb
add
fildl
das
mov
stos
test
mov
xchg
out
xchg
jno
jmp
xor
fdivrs
inc
lret
push
leave
mov
mov
sbb
dec
repnz
push
pop
test
xor
into
push
insl
lcall
or
push
xchg
lcall
or
jns
inc
sub
or
cld
lods
inc
arpl
pop
cmp
dec
out
jecxz
cld
rol
xchg
pop
fildll
sbbl
cmpsb
mov
mov
ljmp
movsl
inc
sbb
sbb
rcll
push
orb
mov
ljmp
pushf
push
fisttps
mov
lods
out
popa
das
push
stc
mov
in
push
pusha
xor
pop
xor
mov
dec
push
mov
mov
mov
pushf
subb
push
pusha
jge
xor
inc
add
lods
jl
cs
xchg
mov
into
push
popa
adc
cltd
inc
and
sub
add
inc
or
push
add
jo
and
orb
mov
loopne
mov
pusha
and
mov
xchg
sahf
dec
movsl
sbb
lods
cmp
mov
repz
add
in
test
cmp
cmp
mov
xchg
aam
jo
scas
adc
or
and
jne
add
je
and
add
fbstp
rcrb
add
mov
mov
fldt
lds
sbb
adc
jnp
fs
cmp
adc
fists
lcall
jae
xorl
sub
jp
pop
pop
and
mov
aaa
and
in
pop
in
cltd
out
sbb
out
pop
inc
and
data16
leave
cmp
or
clc
xchg
adcl
adc
or
pop
or
sub
and
pop
jp
mov
imul
jl
cmp
adc
fdivrl
xchg
int3
aaa
jp
cwtl
sub
xchg
and
lret
adc
jae
call
and
jge
mov
leave
push
push
jns
cs
scas
dec
int3
or
into
inc
jl
out
push
xchg
das
cli
dec
cli
repnz
ret
mull
mov
ret
adc
xchg
pop
icebp
aad
xchg
loopne
je
jg
fdivrl
mov
pop
scas
stc
fcmovnb
push
out
adc
fwait
xchg
sti
fmuls
dec
add
push
sub
orl
inc
sub
pop
sahf
mov
jb
nop
pop
ret
mov
iret
inc
cmpsb
nop
push
xor
ret
xor
pop
sub
cmp
rorl
add
push
xchg
loopne
popf
aas
fcoms
mov
mov
inc
cmp
xchg
and
pop
lret
movsl
popf
mov
pushl
push
fnstcw
mov
add
sbb
addr16
test
cwtl
pop
sub
andl
add
out
pop
push
jmp
jo
adc
out
scas
mov
jns
dec
pop
addl
xor
or
pop
clc
and
pop
mull
cmp
scas
or
jbe
mov
mov
int
cmpsl
notl
cwtl
sbb
mov
jne
push
pop
les
xor
insl
movsl
pop
mov
int3
xchg
notl
jmp
sub
cmp
jge
cmp
mov
xlat
in
ret
jnp
push
mov
xchg
int
fdivl
xchg
mov
ds
into
ja
sti
xchg
jno
bound
aas
pop
in
cmp
lods
xor
xlat
jbe
and
add
mov
and
cltd
lret
jle
xchg
mov
jbe
andb
int
or
push
lea
lods
fsubrs
pop
jecxz
popf
mov
and
or
cli
out
dec
insb
lock
cmp
test
xchg
test
adc
fdivr
push
push
sub
inc
mov
push
ss
daa
ljmp
fisttps
jne
push
je
mov
aas
and
pop
pop
cmp
push
cmp
je
dec
or
stc
push
sbb
cmp
xchg
push
stos
gs
stos
push
imul
or
aad
xor
mov
mov
add
mov
xor
or
push
jbe
in
leave
pushf
lds
insl
xchg
or
int3
popa
xchg
and
push
inc
jecxz
cmp
shll
cli
add
clc
pop
scas
mov
and
popf
mov
cmp
xchg
cmp
outsl
scas
mov
iretw
loopne
fisubl
fmulp
xor
icebp
and
and
xchg
les
enter
outsb
fistpll
idivb
icebp
inc
and
ja
jo
cmpsb
je
movsb
ljmp
or
sbb
adc
andl
and
inc
test
jbe
call
outsl
jne
mov
sub
repnz
adc
jae
adc
push
shll
insb
enter
add
lods
xor
add
xchg
pop
and
sbb
ljmp
dec
mov
xchg
xor
mov
xchg
cmp
sbb
in
fwait
add
hlt
ljmp
cmp
sti
lea
push
dec
push
sbb
cmpsb
and
sahf
sti
add
lds
into
test
aaa
inc
xor
ret
cmpsl
dec
jg
cmp
in
pop
lock
fidivl
lds
and
jne
or
mov
fdivr
xor
pop
mov
les
divl
mov
xlat
ftst
ficoml
leave
xchg
rcll
dec
les
sarb
dec
mov
std
scas
inc
dec
int3
sub
mov
cmp
sahf
mul
jno
xorb
cmp
mov
lods
xchg
scas
in
dec
roll
and
lahf
jnp
push
sub
ss
push
scas
ss
idivl
out
test
aas
dec
call
xchg
cmpl
and
xor
xchg
repnz
sub
shlb
sub
sbb
mov
cld
mov
stos
shlb
pop
sub
addr16
mov
out
add
mov
cmp
cmpsl
add
call
adc
inc
pop
jmp
sub
add
jg
add
out
xchg
stos
test
lret
jp
scas
inc
mov
push
inc
mov
mov
je
lock
das
out
dec
lahf
xchg
aad
sarb
jmp
jae
fs
fisttpl
daa
sbb
outsl
mov
test
jg
jl
mov
mov
imul
adc
cmp
inc
das
mov
arpl
andl
or
xchg
adc
leave
pop
pop
pop
or
jge
movsb
les
pushf
jmp
mov
orb
mov
jno
xor
stc
mov
mov
iret
push
orb
fdivrl
in
shl
roll
hlt
mov
push
ret
inc
shlb
stc
xor
push
dec
push
sub
idivb
loope
dec
repnz
test
repz
les
xlat
sbb
cltd
stos
enter
mov
cwtl
sub
je
adc
sub
cmp
cmp
out
sbb
and
popf
in
lret
xor
xchg
push
or
loopne
xor
mov
stc
hlt
pop
outsl
fstpt
jl
jge
dec
idivl
dec
xlat
ljmp
xor
lock
pop
xor
mov
dec
aas
out
dec
sti
ja
adc
xor
xchg
mov
test
fwait
cld
pop
cmp
mov
dec
into
adc
cmp
adc
enter
mov
nop
mov
pop
test
pop
in
mov
pushf
pop
jbe
out
je
into
cs
xchg
mov
cltd
inc
jbe
xchg
cmc
jp
adc
xor
dec
xlat
jbe
cmp
mov
mov
jo
ss
lret
adc
cmp
pop
imul
pop
arpl
dec
xchg
mov
adc
addb
jb
insl
push
push
adc
mov
cld
cwtl
hlt
popf
in
xor
xchg
mov
fldt
push
shll
fisttpl
scas
xlat
xchg
loopne
xchg
lea
cmc
lcall
jb
mov
lea
call
test
pop
orb
jne
ljmp
xor
push
cmp
leave
mov
mov
mov
stos
mov
mov
xor
add
decl
in
push
adc
movl
adc
shrb
out
sarl
inc
push
std
cmp
push
mov
xchg
aad
cmp
rcrl
adc
rclb
or
jl
leave
das
arpl
call
add
cmp
test
mov
outsb
cltd
cmp
dec
shlb
popa
popa
jge
dec
or
jnp
popf
push
lock
stos
dec
mov
idivb
loop
cmpsb
loopne
mov
fwait
push
ret
loop
ficoms
xor
and
mov
test
loop
or
inc
adc
mov
dec
sub
xchg
dec
negb
decl
int3
jae
and
jle
cmp
aad
sbb
hlt
inc
mov
lock
sarl
rcrb
inc
call
imul
push
ret
imul
xor
pop
int3
sbb
ud1
and
mov
repnz
add
call
jae
push
mov
jne
ret
out
mov
xchg
jmp
cmp
scas
dec
test
add
push
xor
inc
testb
inc
cmc
add
cmp
aam
in
in
jmp
sbb
or
into
mov
hlt
mov
mov
adcb
stos
jecxz
xor
enter
cmc
push
xor
xchg
mov
dec
addr16
fidivrs
dec
cmp
push
xor
rcll
add
pop
sub
pop
iret
das
cmp
mov
and
mov
enter
push
imul
mov
mov
stos
mov
cli
and
push
fdivrp
aam
inc
outsl
ds
jb
sbb
insb
cmc
push
dec
jecxz
loop
or
sub
xchg
ret
sbb
ret
pop
cmp
addps
dec
mov
out
and
push
in
clc
inc
daa
ss
loop
in
inc
out
dec
out
andb
pop
rcr
les
sbb
sbb
js
out
sub
mov
dec
dec
push
sub
adc
xor
daa
cmp
mov
test
jp
fcoms
jmp
or
scas
xorb
scas
ss
mov
cmp
jmp
sahf
mov
cmp
jns
adc
inc
adc
inc
inc
das
aad
pop
daa
mov
aad
aas
inc
mov
mov
jmp
clc
ds
mov
scas
sarb
cwtl
aas
push
adc
call
xorb
bound
pop
ret
inc
xchg
inc
clc
enter
roll
jge
push
xlat
mov
sti
or
sub
lahf
repnz
xchg
lock
daa
fadd
mov
mov
push
xchg
pop
out
or
cmp
movsl
and
and
sbb
push
dec
les
data16
mov
push
xor
inc
pushf
icebp
aad
inc
dec
and
je
sub
dec
sahf
mov
adc
repnz
jge
or
mov
lret
inc
ja
xchg
dec
push
or
loop
and
xchg
rcrl
dec
addr16
dec
jo
sbb
sbb
jo
push
xchg
sbbl
mov
fbld
imul
add
insb
fidivs
sub
nop
mov
pop
xlat
rolb
shrl
cltd
icebp
jo
sbb
jno
jno
stos
aam
dec
adc
pop
ret
stos
rcrb
xchg
mov
icebp
loopne
addr16
mov
mov
push
flds
adc
or
or
int
sub
mov
inc
or
int3
rorl
adc
pop
aad
or
inc
pop
and
or
add
adc
stos
enter
ret
out
jbe
cltd
push
mov
mov
jmp
mul
push
test
inc
mov
xor
ret
imul
pop
fldt
dec
bound
mov
sti
ja
int
mov
and
mov
push
inc
cli
cmpsb
mov
sbb
pop
sbb
mov
insl
mov
inc
scas
push
inc
js
jns,pn
add
cwtl
std
ret
mov
subl
fwait
add
dec
sub
enter
pop
in
adc
dec
int
cmp
std
jp
sub
cli
jg
adc
cmp
stos
sahf
sbb
stos
test
stc
repz
loopne
sbb
xlat
out
sub
mov
cmp
inc
add
test
sub
xor
leave
add
xchg
dec
dec
inc
mov
hlt
push
mov
js
inc
movsb
fwait
mov
mov
inc
lds
scas
insb
negb
arpl
or
pop
xor
mov
incl
and
sahf
mul
dec
xor
test
mov
lcall
in
pop
in
adcl
jg
lods
popa
cmp
pusha
shl
cmp
lret
push
ret
pop
ds
js
ljmp
cmp
in
fisttpll
jp
ret
std
mov
jecxz
inc
lret
and
adc
test
ljmp
aam
and
movsl
rcrl
pop
loope
xchg
notb
mov
fwait
cmp
cmp
mov
xor
adc
xchg
xor
loope
add
push
pop
cmp
xor
cs
incl
or
pop
sub
jo
mov
leave
cld
mov
sub
inc
rolb
xor
fbstp
xlat
xchg
in
mov
dec
cltd
int3
mov
or
into
pop
hlt
cmp
pop
and
and
lock
data16
mov
mov
dec
arpl
fidivrs
xlat
into
add
xor
fisttpl
out
add
out
xor
sub
cwtl
inc
mov
pop
lcall
sbb
jecxz
adc
movsl
mov
push
dec
jmp
pop
xchg
outsl
mov
dec
fsubrl
jae
or
or
xchg
inc
adc
pop
fisubl
fcoms
jae
cmc
mov
out
aad
subb
xchg
sbb
pop
adc
aad
rorb
fwait
lcall
lds
xlat
lods
jg
mov
data16
xchg
mov
pop
jne
or
mov
test
mov
add
or
cli
add
mov
movsl
inc
pop
xchg
mov
popa
cmp
outsl
dec
ja
mov
cmp
push
outsl
inc
test
or
ret
imul
mov
sbb
mov
xor
loop
mov
jnp
movsl
push
fidivrl
mov
outsl
jmp
jns
mov
adc
mov
and
mov
mul
jmp
jbe
leave
insb
pop
mov
xor
cmc
lcall
cmp
push
add
loopne
pop
mov
and
mov
xor
jns
popa
repnz
lock
inc
les
mov
in
lods
push
inc
and
hlt
out
dec
pop
movsl
cmp
sub
adc
inc
sub
loop
repz
ret
cwtl
adc
cmpsl
test
jo
test
cmp
mov
repnz
pop
aam
dec
add
sub
add
push
jb
fsubr
mov
xor
stos
fiaddl
jo
sbb
testl
jnp
mov
fwait
dec
aad
insl
popf
sbb
xor
rcr
fldl
or
sbb
flds
xchg
xchg
xor
mov
sbb
or
inc
repz
inc
jo
xchg
mov
or
repnz
mov
mov
push
mov
xor
mov
and
cvtps2pd
or
call
lods
mov
mov
dec
iret
cli
dec
fcom
adc
push
push
jo
jne
ja
or
pop
mov
in
scas
pop
push
sub
pusha
je
loopne
jecxz
xchg
adc
sub
mov
sbb
sub
lods
hlt
dec
cmc
lret
sub
dec
add
pop
sub
mov
fdivl
and
cmp
test
rclb
mov
sub
js
mov
test
test
sbb
fdivrs
les
push
pop
pop
or
mov
movsb
jns
adc
ljmp
sub
mov
cmp
push
addl
fdivrl
or
lcall
xchg
add
daa
fildl
stos
movsb
divl
test
gs
fcomp
xorb
pop
cmpsb
jbe
dec
inc
js
xor
and
pop
test
clc
shrl
ljmp
push
aas
std
out
js
push
mov
gs
bound
adc
mov
mov
lds
xchg
inc
push
les
pushl
dec
sti
test
int3
repnz
call
in
sbb
xchg
outsb
jbe
and
sbb
add
insb
dec
xor
push
push
imul
rolb
pop
aad
inc
jl
lods
fchs
mov
or
pop
sahf
push
cwtl
jecxz
or
and
movsl
std
cwtl
fwait
add
push
fldl
pop
inc
sub
std
mull
lcall
pop
push
sub
shrl
rclb
lgs
test
mov
push
cmp
scas
lds
sub
jno
pop
fimuls
inc
xor
call
inc
xlat
nop
cs
jnp
clc
lds
cmp
aaa
cmp
out
sbb
push
and
or
fildl
cs
fs
idiv
scas
les
or
dec
pop
jnp
jge
add
ss
lds
and
mov
mov
cmp
inc
pop
fdivrs
xchg
inc
or
cmc
cmpsl
xchg
int
push
inc
js
cmp
aad
push
lods
add
test
dec
fnstcw
mov
lds
mov
pop
test
xor
iret
fdiv
cmpsl
jo
pop
outsb
pop
out
or
adc
mov
and
and
inc
imul
fsubrs
arpl
dec
xchg
std
sbbb
sbb
sbb
mov
push
sbb
lahf
push
adc
or
mov
fistpl
test
lcall
lcall
push
loope
outsb
loopne
jnp
mov
data16
jo
inc
pusha
inc
mov
push
mov
adc
out
dec
cs
subb
int3
mov
sbb
mov
ss
test
pusha
rcr
sub
test
mov
ret
mov
sub
xor
fcomps
xor
add
jbe
movsb
adc
ror
mov
scas
iret
sbb
or
lea
aas
fxch
in
call
sub
sub
addr16
loope
lcall
mov
xchg
xchg
sbbb
push
leave
addr16
arpl
insb
test
jae
out
mov
sbbb
xchg
xorb
inc
mov
int3
jbe
in
insl
pop
outsl
test
shl
mov
out
mov
fdivrp
pop
xor
bound
mov
in
andb
cwtl
push
push
mov
test
push
jp
mov
sbb
mov
psubsw
cld
iret
aad
ljmp
xor
dec
int3
mov
jmp
xchg
pop
pop
mov
xchg
mov
sbb
loop
jo
cmpsl
js
pop
jge
or
cld
ret
inc
cmc
and
jl
cmp
and
arpl
dec
ja
aam
sbb
ret
lods
ss
es
xlat
lods
mov
cmpsl
lods
lods
jo
aam
jbe
push
pushf
je
jae
push
in
negb
sbb
xor
pop
inc
mulb
insb
xlat
pop
mov
pop
jnp
imul
xchg
lock
mov
loop
sbbb
dec
cmp
lcall
jbe
aas
ja
inc
cmp
test
aas
xchg
insb
mov
jecxz
cmc
xor
xor
adc
jmp
add
sbb
cmpsb
leave
mov
in
pop
push
cmpsb
scas
nop
std
fisubrs
pusha
out
push
insb
dec
add
cwtl
pop
xor
and
inc
sbb
movl
jge
sub
push
call
push
test
outsl
loopne
xor
adc
sbb
and
jo
mov
sub
jp
lcall
inc
stc
adcl
dec
xor
mov
in
pushf
adc
push
xor
cmpsl
and
pusha
sub
cmc
sbbb
loop
push
fidivrl
cmpsl
std
jl
lock
adc
call
test
or
mov
das
jecxz
lods
rol
adc
icebp
xchg
lds
testl
iret
dec
jmp
sbb
pop
mov
jle
insl
push
add
push
andb
in
repnz
mov
out
mov
jmp
mov
ja
dec
add
cmpsb
ss
xchg
mov
data16
dec
mov
push
xorb
iret
xor
mov
out
mov
lock
bound
inc
push
mov
out
xor
mov
loopne
lret
mov
out
and
cmp
out
or
add
push
clc
cmpsl
xlat
mov
xor
push
xchg
enter
pop
pop
inc
push
or
xchg
jae
inc
add
mov
adc
add
je
es
inc
inc
push
out
push
mov
fadds
gs
iret
inc
popf
lods
xchg
popf
jae
add
fnsave
lret
push
mov
rcrl
aam
loopne
sarl
and
int
ss
sub
adc
cmp
xor
mov
dec
aaa
repnz
xchg
loopne
push
add
aad
dec
repz
pop
cmp
fucom
int
rcrl
mov
lea
add
mov
sub
lret
jo
mov
or
leave
dec
fldenv
std
mov
push
add
cmp
stos
push
inc
xchg
dec
clc
pop
pop
jmp
mov
mov
inc
mov
push
pop
lahf
daa
dec
gs
jb
stos
scas
and
nop
in
sub
push
mov
ret
push
and
std
inc
push
dec
daa
fisubs
mov
test
in
es
loopne
arpl
dec
push
cmp
pushf
xchg
xchg
imul
negb
sub
ss
sub
hlt
mov
adc
inc
sbb
bnd
hlt
loop
jl
shlb
dec
hlt
mov
loope
negl
movsb
jecxz
daa
cmpsb
in
mov
icebp
push
jmp
adc
lahf
popf
repnz
cmp
jmp
sbb
inc
in
sbb
int3
insl
das
fs
pusha
jl
stos
or
scas
scas
add
sbb
cmp
stos
js
js
ss
mov
imul
fisubs
jle
sub
xchg
sar
out
xchg
sar
push
cmpsl
movsl
fdivrl
pop
ljmp
push
inc
popf
add
out
sub
mulb
adc
pop
scas
sbb
int
leave
or
dec
sub
inc
mov
popf
cmpsb
xor
mov
mov
sti
movsl
out
mov
into
xor
adc
cmp
popa
pop
js
cltd
pop
mov
sti
hlt
and
mul
cwtl
aad
outsb
xchg
cmp
fsts
add
ss
cli
adc
push
mov
repz
add
jp
leave
movsl
mov
arpl
adc
push
lret
popf
mov
sub
rclb
rcl
aas
fstpt
and
or
sbb
stc
and
das
mov
inc
fs
aam
je
jg
int
xor
in
xor
and
sahf
cmp
test
inc
mov
cltd
mov
lods
sub
movsb
hlt
jae
jecxz
cmpsl
test
push
sbb
xor
xchg
movsl
stos
dec
adc
aam
test
out
fisubs
jmp
lret
inc
inc
sub
fwait
mov
jno,pt
xlat
jecxz
jns
mov
inc
pushf
fldcw
jl
cmp
cli
ret
lock
adc
and
jl
pop
pusha
and
fwait
dec
or
mov
push
ret
jg
jg
lret
outsb
int3
push
in
lret
adc
pop
aam
enter
mov
dec
jle
addb
push
push
push
in
mov
mov
sbb
mov
in
lods
push
frstor
lret
out
imul
or
sti
inc
mov
mov
and
ret
fs
std
std
lcall
aad
add
aad
call
and
cld
pop
push
loope
dec
sti
les
ds
pushf
test
pop
pop
daa
mov
cwtl
testb
adc
inc
aam
mov
ljmp
add
cmp
lret
add
jecxz
popa
hlt
xchg
adc
movsb
lret
jnp
pop
ljmp
into
xor
popa
add
xchg
mov
push
mov
xchg
je
test
xchg
inc
jae
cmpl
dec
sbbl
fbstp
data16
jg
mov
cmp
ret
repz
ds
int
clc
scas
push
rolb
mov
push
push
stos
aad
lods
aam
jmp
int3
jne
outsl
mov
scas
ds
iret
push
addb
cltd
add
add
sbb
cmp
decb
ficoms
imul
cld
mov
jae
in
fdivp
out
push
lret
lret
cwtl
fimuls
mov
mov
aas
mov
testl
ja
xchg
xor
por
xchg
jno
sub
mov
push
shlb
push
inc
loopne
out
clc
scas
das
nop
push
push
es
jmp
fcmovu
push
or
pop
sub
fs
xchg
pop
mov
cs
push
cmpsl
stc
adc
push
jne
rcl
add
cmp
xchg
hlt
xor
std
repnz
dec
addr16
or
mov
xchg
adc
pop
mov
mov
fdivp
pop
sbb
subl
pop
imul
out
adc
sbb
in
sub
js
xor
into
push
lret
add
adc
inc
repz
test
addb
pop
out
mov
jno
sbb
testb
pop
in
jae
jl
dec
and
pop
push
cmp
mov
inc
inc
rorb
test
dec
push
xchg
push
decb
ljmp
pop
stos
cmp
dec
sbb
pop
or
lcall
aas
ret
mov
mov
mov
iret
add
xorb
adcl
movsl
dec
mov
lods
inc
push
jmp
insb
das
pushw
lret
in
cmp
aaa
sub
mov
cmp
inc
movsl
push
jo
mov
adc
cltd
mov
clc
inc
dec
rcll
mov
adc
and
in
jge
cmp
mov
sbb
adc
dec
in
push
jg
std
or
je
cmp
sbb
int
fiadds
and
jp
sti
cli
pop
mov
jmp
repz
add
outsl
lret
outsl
sahf
cmp
aaa
add
mov
jge
iret
ja
cmp
outsl
xor
in
mov
cmp
clc
push
addb
iret
or
push
jecxz
pop
bound
iret
ja
mov
rolb
mov
dec
xchg
int
clc
insl
add
xchg
repz
aad
out
push
bnd
push
jmp
inc
jns
xor
lock
int3
dec
test
aaa
sub
mov
dec
or
sbb
add
aas
push
sub
mov
and
ljmp
push
push
pusha
lea
push
shrb
into
fistps
mov
repnz
cmp
mov
xchg
sub
mov
lods
cli
add
xor
sub
gs
cltd
mov
add
mov
push
adc
adc
gs
out
loope
das
mov
iret
rol
pop
int
adc
sbb
arpl
or
adc
mov
js
xchg
inc
pop
and
push
mov
mov
cltd
mov
std
insl
es
shrb
dec
fsubs
loopne
pop
mov
lods
movsb
testl
xchg
cmpsb
and
xor
cmc
int3
pop
orl
sahf
orl
popf
popf
dec
mov
jae
add
mov
adc
lahf
xor
push
and
xor
jle
push
js
adc
rolb
cmp
xchg
ljmp
mov
js
adc
or
call
or
cmp
daa
jnp
movsb
pusha
xchg
out
lods
push
insl
bnd
mov
leave
pop
xor
or
push
sub
pop
xlat
push
sub
pushf
je
jle
xlat
fcoms
dec
pop
jmp
ss
and
or
rclb
add
mov
cmc
mov
ss
inc
xor
rcl
cltd
mov
call
fadds
dec
inc
push
pop
ja
inc
roll
or
sub
mov
dec
pop
repz
sbb
in
inc
dec
cwtl
cmc
movsl
inc
addr16
pop
ds
and
imul
jb
sbb
push
loop
or
mov
pushf
inc
xchg
fwait
rorb
inc
mov
dec
sbb
inc
sub
jmp
sbb
cli
sarl
les
hlt
xchg
push
push
sar
adc
mov
addr16
je
push
sub
adc
lock
gs
xor
jae
or
mov
mov
repnz
add
adc
xorb
fwait
push
jb
jo
sub
out
inc
imul
pop
or
sub
and
mov
mov
leave
sub
dec
jbe
push
fildll
lods
nop
push
mov
call
rcll
jno
iret
dec
movsb
xor
loope
lock
lret
incb
inc
jae
mov
lock
fistl
addl
je
jmp
xchg
push
xchg
fcmove
mov
test
mov
imul
sbb
xchg
push
xchg
dec
rol
ret
and
jb
in
inc
in
sub
fnstsw
ret
push
mov
dec
daa
push
xchg
pushf
mov
test
ret
inc
xchg
xchg
mov
popa
inc
dec
jbe
and
in
jecxz
jge
loop
inc
jmp
lret
cmpsb
jb
sahf
aas
arpl
fstps
stos
inc
pop
movsb
inc
lea
adc
cld
pusha
fadds
icebp
movsl
dec
jbe
fwait
loopne
xchg
fdivrl
cmpsl
mov
ficoml
push
push
add
shll
pop
in
andb
inc
rcll
lds
xor
loop
mov
inc
lods
and
sti
mov
mov
enter
jne
mov
clc
negb
outsb
push
add
das
aaa
loopne
div
cmp
lret
or
sbb
ficomps
ja
bound
mov
into
and
jae
pop
inc
add
cs
dec
mov
push
and
push
or
inc
and
repnz
mov
push
add
test
xchg
decl
dec
sub
cmp
ret
call
mov
into
push
dec
fidivrs
cmp
fstpl
stos
leave
inc
mov
mov
cld
pop
shrb
add
xchg
pop
adc
push
dec
mov
xor
sbb
popa
cmc
pop
dec
mov
mov
cmp
scas
aaa
xchg
sub
lcall
loopne
popa
data16
mov
mov
add
or
push
xlat
adc
mov
stos
leave
push
push
lock
out
cs
loop
rcrb
add
xlat
jge
aaa
or
aas
mov
mov
jmp
mov
mov
loop
mov
adc
xlat
sbb
add
cmc
and
into
in
adc
iret
adc
mov
div
shrb
jns
test
xchg
xor
movsl
scas
aaa
sub
push
cmp
fidivrs
pop
stos
cmp
int3
xor
in
mov
adc
leave
sbb
addr16
mov
xor
ret
cmp
inc
and
shl
adc
push
popa
pop
movaps
cmp
sbb
sub
pop
xor
jns
stos
push
loop
dec
stos
cmpsb
imul
or
addr16
sub
lahf
mov
test
jbe
mov
pop
fstps
xor
out
mov
push
xor
jno
dec
add
lret
cmp
outsb
outsl
xchg
mov
jmp
aas
fnstenv
cmp
das
and
mov
and
or
dec
add
inc
dec
js
jp
scas
add
mov
or
cmpsl
dec
lods
mov
iret
lock
pop
in
fldcw
cs
ud2
inc
ss
out
cmpsl
push
clc
lret
sbb
jg
lret
popa
pop
or
scas
xor
push
jae
push
cmp
leave
sub
xchg
cld
insb
push
inc
dec
test
ja
out
aas
scas
add
inc
sbb
repz
cmp
outsb
ffree
push
pushf
cld
lret
jb
cmc
dec
fsts
xor
or
lds
add
shlb
aaa
movsb
test
imul
or
xchg
test
imul
pusha
xor
sbb
and
push
int3
test
clc
and
das
lret
das
jnp
das
rol
xchg
cmp
jo
or
jl
outsb
out
sahf
push
jmp
scas
cmpl
push
aad
sahf
addr16
or
and
arpl
or
fs
sbb
jl
cmp
jns
ss
or
sbb
cmp
iret
and
mov
fdivrl
sub
inc
push
ret
icebp
psubusw
mov
jae
test
in
xchg
jne
jl
in
mov
push
sub
lret
movsl
add
mov
xchg
loopne
in
lock
shr
inc
pop
nop
lret
stos
adc
lret
add
jl
xchg
cmp
scas
das
sub
mov
mov
popf
in
aas
or
sbb
push
mov
cmp
jp
cltd
cltd
loope
adc
aas
test
bound
inc
and
mov
repz
sbb
mov
jmp
jg
insl
in
ss
les
jb
nop
test
xor
or
xchg
aad
repz
sub
add
lahf
adc
xorb
shll
push
test
lods
mov
jmp
enter
sub
movsb
mov
mov
adc
outsl
sbb
loope
dec
iret
sarb
fs
pop
out
adc
arpl
push
idivb
sti
fisubs
push
mov
mov
sbb
xchg
ljmp
dec
fistpll
js
and
shll
dec
rclb
in
and
in
jo
sbb
dec
mov
out
xchg
mov
lahf
out
lret
sub
sbb
lods
scas
mov
ret
and
test
fisubs
repz
mov
mov
sbb
in
mov
xchg
faddp
push
push
in
fisttpl
int
pop
fmull
adc
test
ret
outsb
and
les
cmp
mov
pop
adc
lock
movsl
fs
cmp
fists
out
mov
in
stc
rolb
pop
jns
aaa
xor
inc
lock
xor
xor
imul
ja
mov
add
mov
leave
and
lahf
xor
xchg
sbb
test
jp
enter
dec
xlat
xchg
mov
xor
mov
xchg
pop
out
lcall
daa
hlt
or
dec
adc
push
outsb
jae
push
jmp
mov
xlat
outsb
clc
or
push
add
sbb
mov
test
hlt
lea
mov
fstpl
jl
or
pop
cmp
dec
je
cmp
cld
mov
jno
dec
or
enter
lahf
jb
sbb
lcall
loopne
push
or
jb
fcoms
push
frstor
fs
mov
js
sbb
sbb
xlat
hlt
hlt
inc
sub
adc
dec
sbbb
out
add
mov
add
cmp
enter
xchg
ss
sbb
mov
mulb
pop
lods
push
sbb
xchg
into
xchg
ljmp
pop
pop
pop
mov
push
std
lods
mov
add
inc
fidivrs
mov
pop
sbb
rcrl
int
mulb
mov
mov
icebp
sub
dec
or
loopne
out
cmp
outsb
mov
mov
test
pop
and
popa
cmp
sbb
inc
ljmp
mov
sub
dec
ror
outsl
repz
js
push
or
ret
xchg
dec
and
loopne
adc
imul
add
sub
pusha
pop
add
mov
lret
cmp
cmp
sbb
mov
lret
mov
lods
sub
xchg
and
cmp
cmc
mov
fcoml
inc
dec
ljmp
jne
mov
push
test
sub
or
jmp
insb
cmp
inc
inc
xor
sbb
pop
stos
and
cld
aaa
xor
and
or
cwtl
jb
bound
pop
pop
push
out
push
jmp
lock
xchg
ficoml
seta
jbe
and
ja
repz
mov
jecxz
in
insb
add
xor
sti
push
sbb
dec
out
es
push
jp
pop
cmpsb
lock
jae
out
movsb
mov
xlat
cmpsb
mov
call
sbb
aaa
jge
cmp
sbb
jbe
mov
cmpsl
sahf
rolb
xor
pop
les
repnz
mov
jl
xor
inc
mov
shl
sub
fiadds
iret
sbb
cmp
hlt
aam
or
fcomps
sti
sub
cmp
xlat
sbb
movsl
insb
lahf
pop
sbb
dec
nop
mov
mov
lahf
push
imul
subl
shlb
popa
push
out
pop
xor
daa
pop
cmp
push
neg
xchg
js
in
scas
sbb
bound
sti
mov
or
xchg
or
jno
ss
pop
jne
bound
xchg
ss
imul
pop
mov
jnp
jecxz
insb
jbe
adc
push
data16
faddl
decl
loope
mov
cs
inc
pushf
add
rcll
lret
xor
ret
rolb
das
xchg
mov
jns
aad
insb
test
jnp
neg
inc
jmp
aas
jns
aam
jb
mov
and
test
ja
or
xchg
push
popa
in
insl
sbb
mov
jl
loopne
shrb
testb
subl
mov
pop
dec
cmc
mov
test
lret
sub
scas
aad
pop
inc
sbb
ljmp
push
repz
dec
sti
scas
std
xchg
imul
xchg
lods
nop
andl
and
mov
ficoml
ss
lods
inc
out
lock
adc
xor
jb
loopne
enter
xchg
in
daa
jns
and
fsubl
sti
or
std
sub
pop
jp
loope
or
scas
movsl
mov
cmpsb
movsl
and
xor
idiv
scas
divb
lods
mov
cmp
adc
divb
rclb
repnz
stc
ds
mov
sub
pop
add
cmp
add
arpl
sbb
filds
fisttps
shrl
test
movsb
nop
jmp
movsl
fists
loopne
add
mov
lret
data16
adc
jno
cld
push
cltd
sub
or
popa
xor
js
lea
jecxz
lahf
mov
add
aad
fdivrl
in
cltd
jbe
mov
imul
cmp
sbb
xor
call
push
xor
push
int
out
movsl
jno
daa
inc
outsl
enter
jg
ret
in
sti
aas
jl
bound
jge
dec
adc
xchg
dec
jae
or
scas
scas
loopne
xchg
dec
div
loope
fs
aad
scas
inc
fstpt
xchg
lahf
pop
filds
out
and
push
mov
pop
pop
mov
sahf
jae
jle
sub
scas
xor
rolb
negl
lods
stc
xchg
push
mov
ret
lods
mov
out
mov
enter
ret
ja
xor
cld
add
cmp
mov
pop
sub
pop
dec
fldt
cltd
jmp
inc
dec
in
adc
lret
xlat
loope
xchg
push
cmp
pop
jbe
adc
loopne
fcompl
fdivl
scas
adc
jns
movsl
mov
pop
sub
mov
push
sub
scas
insl
aas
lods
push
addr16
jb
sub
or
lea
mov
arpl
or
je
adc
cmp
sbbl
inc
inc
xor
or
add
sub
push
pushf
add
fidivl
inc
sti
mov
pop
push
pop
or
push
inc
aad
adc
jg
dec
fstpl
dec
cld
mov
jb
fmull
loope
mov
inc
out
test
in
fldcw
adc
xchg
fwait
repz
scas
sbb
mov
hlt
sahf
xor
lods
xor
test
imul
setle
enter
jl
add
ret
cmp
jmp
mov
add
andb
xor
cwtl
cmp
sub
or
mov
subb
add
mov
ss
gs
xchg
dec
pop
xor
mov
adc
fdivl
push
inc
cli
mov
and
jno
xchg
jns
cltd
call
dec
cmpsl
sub
mov
jb
andl
jle
filds
adc
aaa
mov
pop
mov
push
call
out
ljmp
xchg
sbb
into
leave
decb
lcall
inc
adc
cmp
xor
cwtl
rclb
lret
pop
js
cwtl
insb
or
jno
ret
cmpsl
jns
xor
push
mov
cmp
sbb
call
lods
push
imul
jno
leave
mov
dec
mov
mov
scas
test
fs
mov
adc
push
fwait
xchg
jbe
mov
sub
repz
mov
sarb
or
enter
fnstcw
divb
cmp
das
mov
adc
sub
cmp
adc
xchg
cmp
add
or
es
and
xor
out
push
or
and
loope
aaa
mov
xchg
out
popa
jno
lock
jmp
push
push
mov
popl
xchg
stc
cltd
call
add
and
sbb
notb
pop
inc
or
hlt
mov
push
dec
xchg
sbb
pop
repz
mov
cmp
and
jno
aad
ficomps
push
ljmp
mov
cmp
into
jp
jle
out
xor
xchg
mov
xor
xor
xchg
xor
adc
add
lahf
outsl
inc
push
add
inc
bound
in
es
inc
pop
movsb
dec
pusha
jle
mov
adc
or
cli
mov
jmp
mov
inc
das
mov
pop
jns
adc
fwait
add
in
add
xchg
sub
adc
cli
cmp
mov
inc
dec
vpshuflw
mov
jmp
xchg
push
in
xor
popa
ja
and
and
sub
cli
dec
jbe
xchg
jl
pop
mov
imul
je
fwait
cmp
cmp
adc
pop
xor
shll
je
push
test
inc
jecxz
dec
mov
ljmp
or
xchg
lret
loope
call
fwait
mov
xor
bound
in
mov
and
js
push
xor
dec
repnz
xchg
out
mov
out
dec
add
scas
inc
jmp
inc
mov
inc
pop
jle
xchg
mov
cmpsb
icebp
inc
or
mov
dec
mov
mov
sbb
mov
mov
push
in
jo
mov
idiv
cs
in
cmpsl
pushf
xchg
jp
xchg
aas
pop
push
adc
jge
and
adc
out
cli
mov
adc
rolb
sub
inc
sbbl
sub
dec
mov
jne
mov
mov
xlat
jb
shrl
xchg
fwait
mov
sub
jb
imull
rcr
sahf
inc
cmp
stos
mov
ret
cmp
daa
or
sbb
call
repnz
in
mov
adc
cli
adc
lock
jge
push
xchg
inc
inc
jo
mov
xchg
pop
or
clc
add
push
fwait
and
or
into
test
sahf
hlt
sbb
jecxz
xchg
int
ljmp
pop
mov
test
pushf
push
sbb
imul
enter
rolb
xchg
mov
mov
jle
mov
insb
aam
nop
adc
shr
push
test
mov
cltd
cs
leave
addr16
movsl
sbb
sahf
xchg
and
fildl
jmp
aad
enter
push
in
or
mov
sub
cmp
adc
hlt
xchg
cmp
inc
sbb
push
imul
inc
enter
test
xchg
outsl
mov
std
adc
jl
xchg
sub
sahf
jae
push
dec
mov
mov
sub
cmp
scas
inc
pop
cmp
mov
ja
mov
js
scas
mov
clc
lcall
fists
add
push
rclb
into
adc
aaa
pop
fdivs
mov
adc
sbb
mov
cwtl
mov
rcrb
imul
enter
outsb
ret
xchg
lock
push
fs
test
sti
out
cli
sub
and
inc
push
movsb
das
je
dec
ljmp
xor
inc
inc
xchg
and
mov
lods
jb
add
dec
sbb
push
cli
mov
push
mov
add
movsb
repnz
flds
ja
pop
mov
push
imul
cltd
add
subl
pop
add
rclb
movl
aaa
push
jne
loopne
loopne
push
push
push
scas
repnz
dec
jmp
imul
pop
shrb
pusha
or
popf
lds
inc
fmul
inc
out
xchg
into
push
shl
mov
dec
inc
fisubl
leave
mov
insb
mov
adc
push
es
cltd
sub
enter
stos
call
sahf
jge
sub
cmp
fisubs
ljmp
fcmovu
dec
cmp
and
js
pop
inc
jle
or
imul
dec
mov
xchg
push
pop
mov
xorb
lahf
loop
push
jns
mov
adc
jno
aam
push
cltd
mov
sub
pop
int3
arpl
out
mov
inc
pop
ds
mov
jecxz
and
jmp
pusha
add
add
sub
and
sbb
ficompl
orl
mov
jecxz
pop
adc
aaa
pop
test
cmp
sti
lcall
and
dec
icebp
pop
push
insl
sahf
push
inc
jns
ficoml
inc
stc
iret
int
js
xchg
mov
jnp
add
fwait
xlat
lds
mov
rolb
mov
out
pop
add
xor
in
inc
or
or
test
jg
test
mov
dec
pusha
stos
jge
xchg
dec
lcall
div
in
cltd
push
add
repz
sub
and
fwait
inc
imul
push
xor
inc
cltd
dec
enter
and
sbb
mov
mov
cmp
cs
daa
arpl
cmp
test
jne
inc
sbbl
cmpb
sub
sub
dec
dec
mov
inc
jmp
sbb
or
inc
lcall
pop
cld
dec
cltd
and
cmp
je
lahf
xor
daa
sbb
cli
sub
ljmp
clc
push
mov
sti
dec
pop
std
popa
daa
inc
cs
sbb
gs
cmp
aas
xchg
movsl
orb
xlat
ja
mov
lret
repnz
int
in
daa
push
fcompl
mov
jmp
daa
insb
sub
shll
repnz
stos
out
movsl
pushl
push
rcrb
lock
mov
inc
mov
or
hlt
cmp
sub
xor
mov
test
jge
ror
mov
mov
aaa
test
mov
ficomps
sub
xlat
pop
incl
inc
cmp
cmp
sbb
sbb
fisttpll
dec
testl
dec
mov
pavgb
fs
scas
add
popf
and
adc
lcall
jle
pop
test
test
lock
dec
add
movsb
les
xchg
xor
in
sbb
jg
fdivl
cmp
and
pop
jmp
sub
ret
cld
dec
lock
cltd
xor
xchg
xchg
pop
sub
push
sbb
pusha
cmc
mov
cmc
loop
xor
mov
xorl
xor
push
pop
pop
push
cmc
xchg
popf
popa
pop
test
leave
or
in
push
sti
jbe
mov
or
dec
push
imul
xchg
loopne
stos
pop
pop
jl
push
and
sti
jns
sarb
outsb
out
cmp
xchg
mov
cmp
adc
in
int3
stc
test
or
jns
shrb
lret
adc
inc
jl
pop
into
push
adc
mov
sbb
addr16
int3
mov
ss
push
pop
jl
dec
addr16
aad
aaa
pop
movsb
cs
push
push
ja
fs
scas
insb
xchg
mov
sbb
and
xor
mov
pop
pop
jo
fndisi(8087
mov
stc
dec
call
adc
ret
inc
outsb
inc
clc
ds
int
icebp
das
pop
inc
jmp
xchg
cltd
not
xor
adc
or
cmp
sbb
ret
dec
add
inc
adc
inc
sti
je
add
gs
clc
add
iret
movsb
ds
sahf
repnz
js
dec
or
add
iret
js
loop
in
sbb
xlat
aad
adc
cmpb
je,pt
movl
adc
cmp
idivl
pop
jp
jg
repz
inc
repz
xor
sbb
xor
mov
sub
mov
xlat
sbb
or
mov
sub
mov
cs
pop
lea
scas
mov
mov
pop
cmpsl
cld
sbbl
les
xor
jae
xchg
rcr
cmp
xchg
rclb
inc
xchg
sar
imul
cmp
sahf
in
movsb
test
je
add
lret
cmp
imul
sub
adc
pop
dec
mov
jl
sbb
aaa
mov
data16
push
int3
mov
jns
call
add
xor
lds
js
gs
and
push
inc
je
into
pop
out
pusha
jle
jnp
xor
sbb
inc
iret
jl
mov
pusha
cmpsb
fsts
or
mov
xor
in
shrb
fldcw
mov
popf
lds
popf
mov
adc
out
ja
test
lods
jecxz
or
rcr
pop
sbb
inc
jle
fs
jbe
xor
loopne
test
rcrb
cmp
inc
sbbl
jnp
mov
pop
xor
aaa
hlt
sbb
sub
stos
into
and
sbb
ret
shrb
jp
sti
cmpsl
scas
fwait
pop
js
ja
jecxz
jp
pop
pop
mov
cmpsb
mov
daa
sti
out
das
fucomp
xor
outsl
or
inc
sub
in
lds
inc
mov
mov
or
or
adc
mov
xchg
sahf
and
inc
add
dec
stc
shll
test
adc
cmp
movsb
aam
mov
cmp
lock
mov
dec
and
add
inc
push
aaa
jmp
jp
sub
shll
push
stc
out
imul
test
mov
push
out
imul
lock
adc
loope
ffreep
outsb
xchg
icebp
repz
cmp
xchg
and
jae
or
cmp
jge
movb
pop
and
sti
bound
dec
nop
mov
ret
mov
je
mov
mov
scas
mov
cmpsl
push
lods
jle
stos
pop
stos
ret
js
adc
cmpsl
jge
leave
dec
rorl
sbb
repnz
cmp
leave
imul
es
out
pop
push
sub
push
ja
push
cmp
dec
addr16
bound
fdivl
loopne
in
lret
frstor
dec
push
stos
in
cmpsb
test
mov
div
mov
je
cltd
icebp
into
gs
repnz
enter
xchg
ficoml
xor
cwtl
fwait
negb
push
lods
adcl
sbb
ja
cmp
nopl
outsl
cmp
outsl
inc
es
or
push
shrl
sub
inc
stos
mov
jmp
adc
cwtl
mov
jge
sub
sbb
cs
pop
scas
xor
movb
xlat
mov
add
es
or
sub
daa
jp
scas
fidivrl
pop
xchg
shlb
orl
jg
sub
test
loope
lds
xchg
jg
mov
mov
inc
dec
pusha
inc
scas
mov
insb
fsubrl
or
xchg
or
movl
stos
cli
pop
dec
repnz
dec
out
in
gs
add
iret
add
push
ficomps
xchg
pop
gs
sbb
sbb
test
imul
cmp
mov
or
lahf
outsb
jns
cmp
jne
adc
sbb
add
test
mov
iret
mov
push
fsubs
jno
scas
mov
mov
pushfw
scas
ret
cmp
dec
rclb
cs
test
repnz
push
push
lods
call
and
rorb
ljmp
shrb
outsb
adc
stos
or
add
and
cmpsb
ret
push
cwtl
dec
movsl
loopne
push
loope
sub
clc
pop
sub
cltd
test
out
or
adc
rcrb
sub
mull
fcompl
imul
aad
inc
dec
test
xchg
js
jecxz
push
icebp
dec
loope
sub
sub
mov
mov
push
lret
scas
sub
dec
psubq
lcall
xlat
jb
sbb
imul
sbb
lret
push
xor
out
sbb
fmuls
mov
cmp
pop
enter
lea
add
popf
cmp
push
add
mov
ret
and
and
xchg
addl
sbb
out
stos
add
pop
repz
jb
add
in
in
mov
mov
push
in
mov
clc
imul
sbb
mov
ret
add
fsubs
xor
out
aas
loopne
pop
mov
mov
jle
pop
and
push
or
in
jno
mov
ljmp
out
movsl
sub
xchg
popf
scas
pop
or
lahf
imull
fmull
push
cmp
inc
dec
push
in
jnp
adc
mov
data16
or
cmp
jo
pop
lods
or
lahf
mov
cmp
aas
jg
sti
repz
sti
mov
inc
arpl
outsb
push
or
fsubr
pushf
push
jae
mov
clc
mov
jmp
push
push
inc
sbb
cltd
cmp
lcall
xlat
test
jg
jbe
lods
in
sbb
push
lret
bound
fnstenv
out
jno
stc
mov
stos
dec
mov
orb
pop
inc
aam
inc
ljmp
mul
inc
adc
js
mov
outsl
pop
mov
pop
call
and
out
cwtl
leave
push
cmp
pop
mov
sahf
mov
lock
or
int
ftst
dec
loop
ljmp
stc
bound
aad
stos
adc
iret
fs
or
ret
add
jle
in
add
stos
fwait
dec
insb
add
dec
jmp
inc
sbb
adc
xor
divl
divl
lods
aas
jne
das
xor
fadds
inc
or
mov
sbb
pop
xchg
aad
mov
in
and
mov
xor
fwait
clc
inc
out
jnp
mov
es
es
inc
cmp
and
fs
add
cwtl
adc
dec
imul
mov
jmp
stos
outsl
ds
sub
cmpsb
mov
aaa
sbb
fdivrs
push
cli
into
leave
xchg
sbb
scas
mov
pop
cmc
les
popf
jne
leave
jmp
stos
sub
xchg
rcr
adc
aaa
adc
adc
movsl
dec
pop
push
mov
xchg
dec
sahf
mov
nop
jb
scas
sbb
jmp
fcomp
or
cld
dec
popf
dec
rcll
lcall
cmp
and
lret
enter
lahf
pop
fs
or
fistl
loop
lahf
sub
jecxz
sbb
loop
aad
mov
and
cltd
xchg
inc
xlat
aad
mov
outsb
xor
mov
cmp
out
cmpl
adc
or
into
xlat
cmp
ja
cmc
cmp
cltd
daa
adc
push
mov
dec
mov
sbb
icebp
cmp
pusha
popa
lret
add
repnz
cli
pop
jae
test
out
cmp
jns
jecxz
mov
int
call
push
lods
fisttps
xchg
ficompl
ljmp
dec
jne
test
std
test
inc
dec
shlb
aas
dec
cmpsb
int3
mov
insl
loop
fstpt
pop
or
out
pop
xchg
and
push
lcall
sbb
cmp
sub
fcmovnu
repnz
bound
hlt
lds
dec
mov
cmp
scas
xchg
dec
pop
mov
and
jp
imul
xor
mov
cmp
es
stos
test
mov
dec
arpl
jo
jbe
cmp
test
lahf
mov
int3
ljmp
push
pop
rcrb
jmp
xchg
mov
inc
add
mov
scas
je
sbb
xor
inc
sahf
inc
call
fisttpll
sub
adc
shrl
cmp
call
addr16
mov
mov
mov
fbld
int
xchg
lahf
leave
shr
shlb
pop
aas
jmp
mov
xchg
jno
xor
mov
lds
int3
out
xor
mov
fldcw
inc
out
cwtl
lcall
sbb
shl
lods
lahf
cmp
mov
cmp
test
sbb
lret
inc
loop
mov
inc
mov
loop
loop
loopne
mov
adc
jns
sbb
outsl
sub
gs
lods
push
mov
cli
inc
int
pop
nop
jae
mov
aaa
jb
icebp
add
cmp
cmp
testl
sahf
in
mov
cmp
mov
mov
pop
xchg
inc
rcll
out
mov
xchg
mov
daa
jae
lahf
pop
nop
scas
push
pop
cmpsl
jl
cmp
addl
loop
fsubs
outsb
dec
dec
jle
fwait
mov
adc
hlt
dec
into
in
cmp
fiaddl
ljmp
ret
inc
inc
aad
jo
fxtract
inc
test
or
stos
andb
mov
roll
lock
add
outsb
push
jle
adc
mov
js
or
xchg
add
mov
jge
xlat
inc
jmp
ja
jle
pop
stos
pop
enter
sub
das
mov
stos
adcb
add
das
and
or
fsubr
cmpb
add
push
or
push
mov
clc
or
jl
imul
cmp
cmp
pop
xchg
fcmovne
fidivrl
cmp
iret
cmpb
push
adc
mov
aam
aad
test
mov
mov
pop
je
movsl
inc
mov
sub
shlb
pop
xor
push
xchg
int
xchg
lea
fildl
sub
imul
mov
mov
xchg
dec
mov
cmpsl
jns
pop
jb
sbb
es
xchg
ret
hlt
shlb
adc
cmp
push
mov
sbb
fs
jmp
lcall
rclb
aad
leave
out
aad
out
inc
jns
xchg
or
mov
inc
ja
rcr
scas
aas
outsb
sarb
pop
ss
add
repz
fldt
xchg
icebp
xor
xor
add
in
jmp
pop
xchg
mov
fbstp
rcrb
loope
subb
adc
dec
orl
sub
xchg
lahf
adc
enter
dec
sbb
inc
ficomps
lret
ss
mov
jne
adc
mov
stos
cwtl
dec
arpl
sub
inc
xchg
mov
xor
push
pop
mov
sbb
dec
lret
push
pushf
jns
or
inc
xor
mov
and
scas
int
movsl
movsl
icebp
mov
enter
lret
nop
and
or
test
repz
nop
dec
inc
xor
cmp
call
mov
and
aaa
or
pop
pop
dec
or
outsl
push
jecxz
push
sbb
or
repz
sbb
sbb
and
and
gs
cltd
mov
mov
dec
aas
jg
push
sub
inc
jnp
div
mov
out
pop
adc
sbb
test
cltd
mov
test
pop
jmp
daa
movsl
and
or
adc
test
ja
xchg
mov
and
mov
cld
ret
dec
xor
sbb
jg
fidivrs
sbbl
subb
outsl
and
xor
aad
inc
dec
fbld
decl
out
lea
mov
pop
not
clc
push
mov
cmpsb
sbb
ss
jns
int3
cli
jo
sub
mov
jno
sbb
jg
or
sub
pop
loope
scas
adc
ja
in
mov
sub
shr
add
and
ljmp
lret
xchg
adc
sbb
sub
clc
or
jmp
dec
jecxz
ljmp
add
loope
mov
lret
repz
inc
call
dec
push
or
xchg
jo
and
push
push
cltd
fmul
aas
iret
sbb
gs
cmp
lahf
xor
adc
cld
pop
mov
push
jo
add
mov
inc
aaa
mov
mov
push
jle
insb
in
popf
loopne
adc
cmp
sbb
sbb
mov
dec
and
mov
fsubl
push
fwait
pop
sbb
mov
lcall
pusha
jge,pn
or
adc
push
pop
cmp
inc
and
xchg
ficomps
sub
stos
cwtl
dec
inc
rolb
pop
pop
call
add
push
mov
cmpsl
inc
mov
push
je
loope
mov
fidivrs
outsb
sbb
jns
cld
mov
out
inc
rcrb
inc
lods
mov
pop
and
push
test
cmc
jl
lcall
sti
bound
dec
mov
cmp
push
adc
sbbl
test
aad
mov
lcall
cmp
out
insb
ret
lret
repz
pop
push
rorl
popf
jmp
leave
in
sbb
push
xor
aas
aas
es
fiadds
inc
decb
psraw
xchg
movsl
mov
mov
sbb
sub
es
jmp
je
ror
imul
xor
out
mov
out
or
sbb
cltd
add
push
xchg
in
imul
adc
inc
test
or
mov
in
ret
jne
mov
mov
xchg
aad
jae
lret
xchg
cmp
cmp
mov
xchg
shrl
ljmp
inc
inc
loope
fmul
in
lods
mov
lret
xor
and
add
dec
popf
stos
push
adc
outsb
adc
dec
sub
cmp
lds
leave
pop
cmpsl
adc
arpl
ret
les
xor
iret
mov
aas
adc
roll
fucomp
ss
sti
or
cli
sbb
dec
aad
xchg
in
push
mov
insl
mov
movsb
mov
mov
add
movsb
inc
stos
cmp
dec
in
subb
ja
adc
cmp
adc
push
ret
or
pop
pop
sbb
mov
sub
arpl
fldl
adc
or
cmp
out
dec
mov
sbb
movl
leave
sbb
lock
xchg
nop
add
mov
mov
or
flds
xchg
inc
mov
call
push
arpl
rorb
push
rolb
xor
xchg
add
pop
ror
adc
push
test
pop
jg
cmp
das
mov
icebp
lret
pop
add
cmp
out
adc
xchg
and
lds
ret
xor
adc
cmpsb
fstpt
imul
dec
hlt
aam
mov
or
adc
test
int
cli
push
or
es
into
pop
out
mov
cmp
sbb
popa
sub
pop
icebp
cltd
arpl
add
daa
sub
sub
xchg
loope
sub
sub
hlt
push
nopl
data16
mov
leave
pop
mov
push
imul
xchg
jns
cmp
push
int3
jle
xor
idivl
rol
loope
cmpsb
dec
pop
xor
out
dec
mov
xor
jno
inc
lds
test
je
inc
or
inc
lcall
fiaddl
and
cli
std
enter
and
test
lcall
in
decl
sbb
sahf
ja
sbb
popf
jo
in
pop
xchg
mov
xlat
aaa
frstor
sbb
mov
stos
xor
xchg
or
jle
or
fnop
call
lcall
shrl
add
xchg
aaa
ljmp
cltd
and
scas
inc
in
inc
je
jmp
adc
imul
cmp
hlt
push
hlt
stos
adcl
mov
xchg
lds
dec
scas
mov
aaa
dec
jmp
jp
jp
push
je
dec
cmp
and
test
loop
outsb
pop
cmp
push
cs
push
popf
sub
mov
popf
xchg
mov
notb
test
repnz
or
cmp
xorl
pop
adc
out
or
mov
pop
xchg
int
lahf
in
insb
aad
add
aaa
jbe
ja
out
stos
push
or
mov
cltd
mov
andl
clc
aam
jl
aad
std
push
int
je
test
xlat
xor
stos
movsl
lret
push
xchg
mov
cmpsl
sub
jmp
xchg
jge
adc
jle
dec
es
mov
lock
mov
out
inc
pop
outsl
pop
pop
lods
lods
mov
inc
lahf
xchg
cmpsl
mov
scas
lea
mov
ror
ds
divl
sbb
das
jmp
inc
mov
xchg
nop
iret
and
enter
frstor
or
or
cmp
addb
sub
inc
leave
dec
inc
mov
inc
mov
dec
adc
lds
push
faddl
icebp
ja
xor
adc
dec
cmp
add
out
ret
cli
inc
ret
popa
cli
test
jle
sbb
dec
adc
xchg
push
aas
mov
addr16
loope
hlt
jne
rcll
sbb
loop
mov
and
xor
rolb
dec
in
outsb
add
stos
mov
sbb
cli
fadds
scas
cmpb
clc
mov
pop
pop
test
scas
leave
push
out
ret
mov
and
pusha
mov
loop
jb,pn
push
xor
xor
test
sar
adc
add
push
mov
or
int3
lcall
xchg
sub
shll
fsts
lock
mov
aad
cmp
lock
push
and
jns
in
in
dec
xorl
rol
mov
sbb
int
mov
dec
mov
jp
push
out
add
andl
xor
add
aad
lds
shll
inc
rorl
adc
pusha
jno
jmp
push
dec
dec
sub
sbb
lods
xchg
fidivs
dec
sub
mov
in
add
jmp
addr16
cmp
out
sub
ret
addb
sbb
mov
stos
cmp
push
jp
xor
or
shl
xchg
bound
mov
iret
fsubrl
xchg
pop
cmp
cmp
push
mov
stc
fidivl
jle
jo
xchg
sub
insb
add
cltd
sub
pop
stos
mov
imul
inc
lods
rorb
pusha
and
inc
out
test
and
jae
mov
imul
in
pop
pop
mov
sahf
lcall
jns
push
sbb
in
or
jp
xchg
out
lret
inc
lea
ja
movb
mov
pusha
push
andl
cs
stos
pop
es
mov
aam
nop
in
xorl
scas
icebp
or
mov
cltd
mov
addr16
lret
es
mov
xor
mov
mov
les
test
sarl
rorb
orb
repz
shr
insb
daa
pop
test
jne
fists
jbe
xor
inc
mov
in
out
out
xchg
jge
inc
add
jnp
dec
imull
sub
test
repz
jbe
jnp
ljmp
mov
repnz
lret
daa
aad
mov
jb
clc
jnp
or
mov
push
lcall
jp
dec
dec
mov
sysenter
jmp
and
mov
fisubrl
jmp
jle
lcall
fcomip
add
mov
xor
push
inc
shl
xchg
loop
insl
in
dec
sbb
mov
enter
pop
pop
adc
les
clc
shlb
pushf
add
pop
jl
rcrb
mov
pushf
cmc
arpl
mov
cli
repz
pop
ss
fstpl
ljmp
sub
loop
insl
push
mov
and
sbb
andb
dec
ja
rcr
jo
popa
add
frstor
out
add
enter
xor
mov
es
outsl
je
adc
mov
xor
in
ja
xor
lahf
arpl
pop
arpl
imul
loop
mov
jecxz
pop
loope
cmp
dec
pop
dec
idivb
testb
xor
jecxz
mov
mov
jle
xor
mov
lcall
movsb
xor
push
cmpsl
addr16
shrb
mov
in
pop
push
cmpsl
js
push
ja
mov
movl
jl
fbld
adc
mov
push
jno
sbb
mov
xchg
jp
xchg
loop
shl
movsb
lods
adc
in
xchg
sbb
lods
inc
pop
icebp
or
sbb
jae
ljmp
pop
shrb
adc
cmp
ss
cmp
lahf
pushf
or
dec
mov
xchg
fwait
adc
lods
cmpsl
cmp
fs
and
add
fisubrs
sub
ljmp
leave
pop
stos
sub
stc
and
add
stos
repnz
mov
popa
sbb
add
out
sti
push
pop
sub
inc
mov
aas
pushf
push
mov
adc
icebp
sbbb
sbb
cltd
test
mov
push
jae
xorl
inc
lret
jecxz
sbb
es
sbb
popf
sub
pop
mov
fistps
pop
stos
aaa
fldcw
sbb
or
and
xchg
mov
push
sarb
adc
mov
pop
jae
cmc
pushf
xor
negl
ja
sub
gs
insb
xorl
cld
push
enter
std
shl
sub
test
fsubrs
xchg
mov
xor
sub
ja
jp
add
mov
mov
sub
xlat
arpl
sbb
xor
aam
lea
dec
test
push
popf
addl
icebp
add
aas
loope
add
insb
pushf
pop
xor
jne
ret
movsl
xchg
xchg
repnz
shrb
stos
add
in
cmpl
push
daa
dec
into
mov
lcall
sbb
xchg
xchg
sbb
lea
sub
sbb
stos
dec
fwait
pushf
test
lcall
cmpsl
arpl
jecxz
mov
cwtl
popf
rcr
mov
fs
xor
xchg
int
imul
inc
test
jg
adc
adc
cmp
jl
sub
int3
fisttpl
aad
adc
sub
or
loop
cmp
pop
repnz
jno
icebp
inc
mov
aad
dec
icebp
into
mov
inc
pop
add
sbb
imul
leave
loop
into
repnz
into
adc
inc
jne
sub
jmp
repz
test
jae
insl
arpl
cmp
mov
pop
sbb
loopne
adc
fadds
mov
cmp
hlt
pop
lods
adc
jbe
xlat
test
push
leave
ret
mov
outsb
push
test
fistpl
adc
cmc
ljmp
dec
mov
cmp
fidivs
es
jnp
test
test
and
test
and
mov
sub
repz
popa
aaa
sub
mov
pusha
cwtl
jno
lret
xchg
lret
test
lahf
ss
or
adc
gs
cmpb
xchg
jo
cmpsl
jecxz
jge
inc
std
xor
xor
add
and
loopne
cmp
pop
mov
scas
mov
dec
mov
pop
popa
lahf
mov
inc
insl
mov
mov
mov
jl
or
fidivl
add
and
test
xor
adc
fs
cmpsb
clc
adc
int
adc
cmp
jnp
clc
inc
add
pop
xor
test
inc
outsb
xlat
mov
ljmp
scas
mov
adc
push
xchg
loope
mov
inc
not
dec
loope
xlat
outsb
shl
add
jmp
sbb
cmc
jo
mov
dec
mov
pusha
adc
xchg
mov
popf
stos
movsl
fisubrl
rorb
imul
insb
jp
pop
cmp
inc
loop
and
fs
cli
mov
sbb
fwait
add
xor
repnz
rcl
les
sahf
leave
jne
outsb
fstpt
test
adc
mov
jne
aaa
jno
add
mov
inc
popa
jbe
call
mov
xchg
mov
iret
cld
xchg
clc
jnp
jecxz
jge
xchg
and
rorl
xor
dec
pop
call
mov
push
push
ret
adc
sub
cmpsl
es
insl
mov
sahf
mov
push
sbb
cli
push
xor
xor
cs
add
mov
cs
pop
bound
pop
xor
mov
popa
pushf
les
repz
lds
xchg
loope
fildl
sub
and
cmp
jg
dec
roll
jp
push
adc
movsb
inc
mov
icebp
icebp
pushl
sbb
pushf
hlt
lret
pop
js
icebp
inc
in
das
les
fucomi
sarl
add
add
push
fwait
push
mov
das
sub
mov
mov
dec
mov
pop
mov
movsl
ds
outsb
cmp
outsb
ret
inc
push
mov
mov
data16
cmp
and
addr16
pop
outsb
pusha
jno
dec
xchg
in
and
test
push
mov
ljmp
ret
push
pushf
into
lea
mov
lock
addr16
repz
loope
xor
in
scas
sub
mov
mov
dec
sbb
notb
jne
push
shll
outsb
mov
rcl
add
cltd
jae
xchg
loop
lods
imul
xorl
jae
aam
mov
or
adc
inc
mov
inc
out
gs
lods
jns
sbb
dec
xlat
popf
negb
test
push
sbb
jle
subb
or
ljmp
jne
sbbb
loopne
mov
sub
ret
aad
adc
push
inc
xchg
mov
sarb
cmpsl
int
xchg
ret
push
mov
lret
and
mov
cld
repz
bound
mov
xchg
lods
adc
lcall
push
cwtl
sub
sub
xor
cltd
frstor
imul
push
fdivrl
std
sbb
add
adc
sub
mov
push
addr16
adc
mov
mov
sub
test
xor
popl
leave
ret
mov
mov
pop
out
imul
out
js
js
xchg
mov
loop
stos
mov
repz
xor
out
sbb
add
xchg
mov
sbb
lds
add
mov
inc
dec
sub
or
inc
fldenv
popf
fwait
out
sub
cmp
adc
out
cmc
rcrl
shrl
or
push
dec
sub
fptan
and
std
out
jmp
mov
test
xchg
sbb
and
mov
jbe,pn
iret
jg
cmp
ljmp
rcr
mov
outsb
cltd
sub
ret
outsb
add
xchg
loopne
clc
push
mov
loop
fldt
xchg
xor
mov
sub
cmp
dec
mov
insl
and
jg
mov
cmpsl
sarl
xor
sbbl
cmp
inc
mov
bound
mov
lea
cmp
test
ss
mov
mov
push
subl
push
sub
cmp
xchg
decl
mov
pushf
xor
shrb
cmp
mov
mov
and
shrl
test
sbb
lret
dec
pushf
mov
fcoms
shll
pop
inc
lock
xchg
aad
xor
or
xor
xlat
push
dec
in
out
fucompp
enter
clc
ds
clc
dec
xor
mov
push
sub
or
adc
ljmp
push
fs
ds
jg
data16
js
pop
loope
in
int3
dec
inc
pushf
stc
xchg
inc
aam
rorb
fwait
add
or
inc
jbe
sbb
xchg
ret
out
jl
lds
cmp
mov
fcoms
cmpsl
pop
dec
jno
mov
add
pusha
addr16
xchg
mov
xchg
repz
out
xorl
inc
js
imul
xor
inc
ja
mov
cwtl
hlt
inc
push
icebp
push
push
outsl
lds
je
dec
sbb
fsubs
or
mov
stc
nop
pushf
inc
aam
jne
jae
es
jno
js
push
inc
leave
cs
lret
lret
mov
sbb
lcall
push
iret
xor
outsl
mov
adc
mov
daa
xchg
adc
and
mov
ret
or
int
push
inc
in
mov
sub
repnz
inc
insb
mov
jge
xor
pop
sub
in
lret
popa
adc
xor
jns
mov
repnz
push
call
imul
fisttpl
pop
mov
dec
xor
and
cmpsb
dec
fimull
xor
clc
loope
push
cmpsl
clc
sbb
push
sub
dec
fnsave
pop
or
stc
je
jp
ja
cmp
movsb
in
rorb
insl
dec
rclb
mov
in
das
inc
add
das
std
xor
sub
jnp
cltd
sbb
mov
inc
inc
test
arpl
int
jmp
mov
lock
popa
jge
hlt
or
or
pop
subl
lock
mov
sub
test
shlb
dec
cs
gs
adc
insl
dec
mov
mull
popf
shrb
dec
mov
push
scas
add
cmc
rclb
xacquire
mov
out
jg
stos
and
fs
mov
into
sub
xchg
mov
dec
jmp
scas
jecxz
ja
inc
push
xor
inc
test
push
outsl
sbb
les
mov
pushf
sub
xor
mov
out
out
dec
sarb
test
andl
adc
sbb
mov
cmp
push
addr16
cmc
frstor
jo
das
mov
ret
fsubrl
xchg
clc
and
xchg
jp
push
push
hlt
adc
adc
in
je
bound
cmpxchg
add
rol
xchg
fidivrs
mov
loop
pop
test
xlat
mov
mov
push
inc
pop
gs
scas
push
jle
and
repz
scas
sub
cmp
js
shll
push
gs
into
daa
rolb
jecxz
mov
dec
sarb
aas
and
jne
sub
pushf
adc
lods
repz
cmp
push
cli
fimuls
popa
lret
jle
fcomps
sbb
mov
aaa
or
cmp
xor
fidivrs
mov
out
lds
push
xor
mov
cs
add
mov
fsubl
cmp
sbb
add
cmp
cmc
fildl
ret
je
cld
clc
pusha
and
push
hlt
sub
insb
push
flds
sar
sbb
aad
dec
mov
jno
imul
xor
test
fisubrs
andb
imul
aam
jmp
shlb
cmp
and
nop
es
jbe
xchg
and
test
es
xor
xor
gs
push
shlb
push
sar
into
mov
pop
inc
bound
sti
add
shll
push
mov
pop
cltd
das
loop
pop
rorl
ret
sub
cmpsl
mov
sbb
pop
push
dec
mov
or
popf
cmp
inc
lods
jge
popf
adc
mov
lock
mov
pop
aas
push
pusha
decb
xor
inc
nop
or
rolb
clc
fs
or
orl
pop
jns
lcall
je
scas
lea
jne
sbb
divb
ret
xor
mov
mov
lret
ret
in
out
subl
fwait
dec
mov
mov
outsb
dec
xor
int
loop
mov
pop
xor
lds
pop
push
jmp
aam
enter
push
pop
and
imul
int3
and
mov
fwait
in
int3
repnz
mov
dec
add
xor
aad
mov
arpl
stos
jmp
sarb
adc
sahf
jb
fs
mov
and
sahf
dec
adc
xchg
dec
addb
std
clc
push
push
xchg
insb
test
xchg
sub
outsl
out
stos
cs
jg
orl
jno
scas
mov
nop
mov
iret
pop
mov
les
xchg
pop
insl
sub
movl
cltd
shl
or
push
dec
jae
ret
or
mov
and
js
xchg
inc
inc
push
mov
pop
sbb
add
mov
push
xor
js
mov
in
adc
jbe
icebp
xor
pop
and
loopne
sub
inc
js
or
fs
fidivrl
cli
ja
cmp
aam
dec
mov
filds
jle
mov
mulb
sbb
sahf
pminsw
dec
dec
stos
mov
lds
pop
repz
ret
inc
mov
ja
stos
imul
cwtl
add
adcl
xchg
rorb
mov
pop
mov
inc
testb
pop
pop
jbe
ret
add
cmp
inc
imul
scas
lods
cs
sbb
pop
cmp
sbb
mov
xchg
dec
jge
or
popf
or
stc
mov
sbb
enter
sbb
add
xor
pop
jecxz
jns
ljmp
movsl
jmp
movsb
iret
push
cld
repnz
lea
xorl
cmp
fildll
nop
jnp
sub
not
xchg
fnstsw
int3
jo
cmpb
jne
pop
xchg
sahf
inc
mov
jnp
pop
fbld
or
lods
adc
dec
inc
repz
mov
and
pusha
add
adc
xor
xlat
nop
pop
js
dec
push
ss
push
movsb
jnp
js
dec
or
cmpsb
and
inc
push
sub
and
mov
dec
stos
add
in
rcrl
dec
cmp
movsl
in
mov
repz
xor
adc
cld
jmp
mov
mov
pusha
mov
pop
adc
mov
mov
jmp
mov
addr16
inc
mov
mov
popl
test
sub
repnz
lods
in
add
andl
cltd
mov
xchg
mov
adc
xor
sub
popf
cmpsb
in
aaa
cmp
loop
dec
scas
push
mov
notl
daa
into
jle
dec
jecxz
mov
or
lahf
out
push
shrb
pop
pop
popf
or
sbb
add
js
and
push
hlt
mov
test
inc
sbb
push
sbb
mov
jmp
add
adc
mov
movsl
sarl
push
mov
jnp
pop
outsl
lods
inc
sahf
cli
mov
xchg
lods
sub
mov
pop
sub
xchg
ss
xchg
lcall
xchg
int3
and
pop
cmp
sub
xor
test
xchg
sub
xchg
push
imul
add
cmpsl
xchg
xlat
mov
rol
push
test
in
gs
idivl
bound
movsl
xchg
iret
cmp
xor
xchg
add
mov
adc
sub
push
cmp
pushl
mov
mov
in
pop
push
sarl
loope
mov
mov
mov
in
out
xchg
nop
cmpsb
in
jno
adc
insl
adc
mov
roll
jbe
mov
pop
jno
xor
jmp
rolb
insb
cmp
out
iret
pusha
push
in
adc
adc
cmp
repnz
push
aam
push
mov
mov
test
call
pushf
sbb
fdivr
lcall
ljmp
jmp
mov
or
js
or
xchg
dec
sub
adc
gs
or
lret
out
das
lcall
xor
xor
mov
outsb
push
mov
and
mov
es
fnstsw
xchg
jl
xchg
pop
aaa
mov
ljmp
lcall
lcall
lret
dec
outsb
fistl
push
je
sub
cld
pop
adc
mov
add
and
outsl
lds
add
cmp
xchg
jnp
mov
push
cld
fcmovnu
pop
xchg
pop
sbb
jae
cmp
inc
or
addr16
into
pop
jo
arpl
sub
test
push
mov
mov
rorb
mov
shr
lret
lret
cmpsb
mov
jno
loop
imul
xor
pop
xor
rcrb
pop
and
inc
adc
ljmp
nop
inc
jecxz
in
movsl
inc
adc
push
sbb
gs
std
add
cld
lea
jno
cs
mov
cmpsb
stos
aad
cmpsb
negl
pop
out
adc
fidivrl
sarb
shll
loopne
stos
std
dec
xchg
jne
sbb
mov
xor
cmp
add
iret
jnp
cld
inc
push
in
sub
pop
shll
ficomps
scas
ss
push
pop
dec
mov
xlat
inc
mov
iret
mov
pop
loope
std
xchg
mov
inc
out
push
inc
ret
inc
add
adc
sbb
gs
shll
mov
jo
fcomps
fdivrs
fcompl
nop
mov
sti
cmp
push
daa
mov
push
fincstp
mov
mov
pop
xchg
mov
test
rolb
dec
jl
xchg
mov
outsb
pushf
and
mov
loop
das
push
sub
xchg
add
sub
cltd
cmp
mov
out
aad
jge
sbb
pusha
inc
popf
mov
mov
aas
mov
push
mov
cmpsl
sti
mov
xchg
mov
and
enter
fldenv
jb
clc
inc
dec
les
add
dec
jno
or
sub
pushf
inc
in
dec
lea
in
xchg
xchg
loopne
inc
add
cmp
jmp
dec
sub
cmc
xchg
insb
and
lea
xchg
sub
imul
adc
cmc
fs
fnstenv
pop
in
sbb
mov
mov
mov
out
push
fstpt
mov
mov
aam
ret
hlt
das
xlat
test
or
sbb
xchg
pop
xor
test
or
xor
fildl
call
cltd
xchg
jae
out
pop
push
cmp
push
jae
push
data16
or
mov
das
sbbb
jo
jnp
loopne
daa
arpl
lock
les
xchg
inc
dec
adc
mov
or
pop
jle
divl
in
xor
div
push
movsb
sub
add
std
fmull
jge
adc
mov
mov
pop
sub
out
stos
subb
cmp
iret
mov
jg
adcl
int
inc
mov
ret
in
testb
sub
mov
ret
sub
push
add
sub
rcrb
pop
or
jmp
data16
push
xchg
test
mov
out
mov
and
push
mov
jmp
rorb
and
mov
jo
push
cmp
je
jno
and
cmc
sub
lcall
cmpl
inc
and
or
or
xor
arpl
cmp
xor
loop
je
or
int
and
mov
mov
xchg
jns
mov
or
insl
test
adcb
rolb
cli
or
in
aaa
in
fimuls
mov
and
das
push
jecxz
out
lahf
nop
cmp
cmp
adc
mov
mov
mov
add
lret
mov
pop
adc
sbb
popa
into
pop
lret
sbb
rol
xor
mov
sbb
or
fidivrs
sub
andl
dec
inc
out
inc
jp
cmp
jl
fidivl
mov
movsb
and
add
rcrb
xor
aam
inc
push
std
or
bound
out
dec
cs
andl
arpl
add
arpl
cld
inc
inc
les
inc
xor
or
or
ret
xor
in
mov
mov
inc
jge
cmp
and
test
les
inc
dec
mov
cwtl
jl
bound
inc
cltd
inc
daa
jg
clc
and
out
push
call
lods
int3
repz
js
push
push
leave
lea
sub
iret
scas
jnp
add
popa
mov
xchg
dec
xor
mov
pusha
adc
mov
xlat
pop
imul
in
jge
push
mov
pop
push
fwait
negl
pop
mov
or
push
inc
dec
movsl
and
pop
xchg
je
aas
imul
jne
ds
fs
push
and
inc
imul
xor
or
in
jg
jecxz
cmpsb
test
xor
add
mov
add
cs
lret
fdivrs
pop
mov
es
outsl
jge
jl
pop
cmp
lret
push
imul
mov
inc
mov
hlt
xorl
xchg
iret
pusha
pop
sbb
ret
dec
insb
cmp
pusha
hlt
xor
aaa
int
je
lahf
mov
inc
jno
scas
cmpsb
test
cmpsl
sub
xchg
fwait
jbe
aaa
push
sbb
jae
push
jl
or
orl
mov
es
adc
in
gs
or
jae
cmpsl
inc
loop
jb
je
clc
xor
into
aaa
out
mov
cli
je
enter
pop
ret
call
iret
and
lods
or
cmp
repnz
pop
lea
ljmp
loop
divb
scas
push
pushf
dec
movsb
subb
xchg
stos
cmc
xchg
ret
fwait
or
lcall
fstpt
ret
mov
popa
jae
push
popf
dec
xor
repnz
mov
cmpsb
jp
mov
push
fistl
pop
inc
mov
dec
sub
or
call
mov
dec
sahf
sub
imul
je
stos
mov
dec
jo
pop
inc
bound
or
dec
adc
push
jnp
adc
and
sub
ss
sbb
push
insl
test
lods
fsubs
adc
sub
and
jnp
mov
xor
fiaddl
xchg
sbb
sbb
sbb
cld
or
adc
mov
inc
mov
add
and
pop
popf
fs
mov
sub
nop
fidivrs
pop
insl
and
out
pop
rolb
cmp
mov
nop
xor
mov
or
xchg
rcll
leave
xor
adc
adc
jp
daa
rolb
in
jns
daa
fidivrs
sbb
add
enter
aaa
cmp
or
mov
lods
cli
mov
push
ret
repz
fdiv
int3
mov
daa
or
pushf
les
gs
push
lods
pop
pop
lods
ucomiss
pop
ret
xchg
cli
dec
push
pop
rep
push
xor
pop
sub
sub
mov
mov
jae
sbb
mov
clc
cmp
cli
mov
data16
and
adc
bnd
cmpsl
push
sti
enter
dec
js
xchg
iret
sub
rorl
cmpsl
in
loope
hlt
push
sub
pop
jp
adc
inc
xchg
jmp
fdivr
enter
sbb
call
cmp
aad
pop
pop
xor
daa
movsl
mov
fisttpl
xor
sbb
jmp
test
movl
mov
scas
or
iret
jne,pt
xchg
adc
pushf
popa
out
in
insl
cltd
rolb
je
outsl
popf
inc
sub
sub
shll
xchg
stos
push
lods
mov
xchg
fcomi
mov
push
dec
xor
aaa
push
jle
push
jecxz
xor
lahf
pop
xchg
sub
cwtl
movsb
mov
inc
icebp
scas
xor
pop
push
out
push
das
cmp
cmpsl
repnz
scas
jnp
and
sbb
mov
fnstenv
lods
js
ja
insl
mov
les
cmpsb
orb
cmpxchg
ja
xchg
jg
jle
imul
test
jae
mov
insl
std
cltd
loope
xor
mov
mov
xchg
adcl
sbb
fiadds
push
ljmp
xchg
nop
mov
in
jp
push
or
sub
test
ficomps
jo
push
pop
fisttpl
mov
fsubrs
shll
movb
xchg
stc
xchg
mov
aaa
sub
rcll
rorl
add
das
fwait
mov
cld
lods
cmp
cmp
lds
and
sbb
lret
out
dec
bound
dec
or
adc
push
mov
pop
push
iret
popf
xor
insl
lds
add
sub
int3
sar
sbb
xor
sti
mov
imul
sbb
push
in
int
mov
sub
pop
xchg
sbb
mov
cmp
fiadds
pop
dec
add
loop
push
lcall
dec
and
lret
push
xchg
xchg
jg
scas
lcall
push
mov
pop
sahf
faddl
gs
pop
mov
je
dec
call
movsb
lods
or
in
pop
popa
sar
iret
sbb
icebp
push
aaa
aas
repz
cmp
fimuls
jne
lods
inc
js
pop
cmp
inc
push
jno
cmp
cmpsb
mov
lea
and
xor
negl
jl
dec
insb
fiaddl
scas
aad
xor
aaa
jl
push
add
add
push
mov
cmp
dec
test
in
mov
cmpsl
sbb
fcmovb
sbbl
xor
xchg
cmp
mov
xor
out
pusha
sbb
mov
jecxz
jmp
out
lret
ret
push
cmp
enter
int
int3
das
pop
js
sbb
sbb
into
cmp
dec
xchg
jecxz
xor
and
pop
xlat
sub
dec
nop
fs
pop
xor
xor
in
cmp
jo
sub
repnz
loopne
popf
jae
xchg
test
cltd
test
jne
mov
push
xchg
movhps
mov
fwait
lea
xor
aas
in
fsubr
mov
mov
add
and
dec
aam
fldt
shlb
subb
jb
daa
pop
pop
push
fidivl
adc
mov
mov
popf
out
out
daa
test
outsl
xor
adc
push
pusha
or
shl
idiv
jnp
les
fdivr
adc
add
std
fs
test
push
mov
lahf
aaa
add
int
sub
cmp
mov
xchg
mov
and
pusha
jge
cmp
lea
lods
mov
adc
and
mov
jb
rcl
pop
inc
out
sub
jne
aad
pushf
mov
fstpl
mov
nop
in
inc
xchg
jne
jle
pop
ljmp
mov
lcall
push
push
xchg
mov
notl
jl
out
dec
inc
xor
add
insl
outsb
bnd
and
jb
iret
insl
dec
jo
add
out
add
out
dec
lcall
icebp
data16
cmp
sub
popf
inc
mov
jne
adc
cs
jne
fisubrl
shll
push
dec
sti
int3
aas
sbb
adc
mov
imul
test
push
inc
cmc
neg
clc
jnp
pop
xchg
loopne
xor
addr16
xchg
jge
out
jl
jp
jo
jns
pop
or
icebp
jmp
pop
stos
jae
add
ret
scas
sbb
adc
cld
ret
out
xor
sub
mov
cmp
test
fsubl
shl
mov
pop
leave
mov
je
es
jne
jle
dec
rcrb
nop
in
sbb
ja
or
lahf
mov
fwait
push
pop
gs
pop
repnz
out
push
or
cmc
aad
jp
or
cmc
xchg
mov
lret
cmp
rclb
mov
sbb
enter
and
mov
dec
xor
mov
insb
pop
cli
adc
jecxz
aad
sbb
movsl
adc
mov
inc
xchg
jo
ret
shll
lret
andb
hlt
cmpsl
sub
dec
sbb
push
in
loop
sbb
hlt
inc
cmp
fmul
lock
sub
mov
ficoms
mov
jo
gs
sbb
push
jo
jno
inc
lea
faddl
xlat
xchg
mov
sarl
xchg
dec
ja
jle
aam
xchg
repnz
xchg
fisubl
xchg
mov
mov
pop
stc
inc
and
nop
daa
inc
fcmovb
xor
mov
adc
lds
mov
scas
lods
mov
and
pop
in
jbe
push
xchg
sbb
out
aam
mov
into
clc
stos
scas
stos
sbb
test
xchg
ret
mov
jno
sbb
cwtl
cmp
outsl
cmp
lret
gs
mov
pop
aaa
and
add
in
leave
test
dec
adc
mov
jmp
sbb
jge
movsb
ffreep
xchg
imul
add
jno
xchg
pop
mov
xchg
sti
or
dec
xlat
sti
inc
in
loope
fistpl
into
fisttps
mov
cmp
out
mov
sub
mov
sub
jg
push
cltd
cmp
das
jae
cmpsl
jmp
fistpll
incl
push
xchg
mov
xchg
inc
out
mov
pop
notl
cmc
sti
stc
into
enter
sub
insb
leave
and
hlt
mov
jle
leave
inc
fdivrl
cmp
mov
icebp
call
cmp
or
ds
add
mov
push
call
and
into
jg
and
roll
pop
mov
sarb
stc
adc
ss
clc
call
mov
push
aam
in
mov
enter
pushf
adc
mov
xor
jo
dec
cmp
les
or
mov
ret
std
leave
outsb
mov
cmp
push
fistpll
sub
push
sub
mov
sahf
std
and
outsb
fdivr
xchg
std
rorl
adc
cmp
je
and
das
lds
xchg
pop
cltd
pop
jmp
mov
xor
push
pop
stos
testb
cmc
inc
add
nop
xchg
aam
cwtl
mov
scas
push
icebp
pop
adc
es
add
jo
pop
dec
cs
cmc
cmpsb
repnz
pop
adc
ja
mov
in
lea
lds
lock
dec
xchg
inc
enter
rolb
adc
cmpsb
out
and
mov
out
xchg
xchg
es
subl
rcl
test
ljmp
cmp
pop
xlat
pusha
pop
test
mov
mov
into
addr16
inc
push
dec
xchg
push
mov
jns
cmp
xor
into
int3
sbb
aam
outsb
in
jge
lahf
cwtl
sub
mov
xchg
les
push
pop
xor
outsl
mov
inc
xor
sbb
sbb
jne
jae
out
rorl
add
add
and
in
data16
inc
test
cmp
pop
xlat
lret
outsl
test
inc
lret
loopne
shr
leave
xor
movsb
xor
test
stos
enter
das
or
xor
inc
pop
mov
cli
mov
cmp
sbbb
cltd
inc
pop
sbb
sti
or
shll
daa
lds
leave
or
fwait
outsl
lds
dec
sbb
imul
and
inc
sub
shl
add
mov
mov
jae
aad
add
mov
stc
xlat
lock
pop
add
mov
push
out
inc
pop
pop
imul
cmp
imull
aaa
mov
push
rorb
pop
or
lds
and
dec
sub
dec
or
roll
call
add
imul
arpl
test
test
dec
adc
pop
pop
andb
in
jg
cwtl
out
outsb
les
lahf
adc
mov
xchg
loopne
jno
pop
jle
xchg
out
inc
mov
inc
or
fst
inc
pop
push
xchg
movsl
sbb
lahf
push
cmp
outsb
mov
lret
rcrl
pop
dec
or
je
inc
aaa
pop
mov
das
and
sbb
lds
sarb
mov
xchg
das
sub
sbb
mov
lret
and
add
inc
cmp
and
sub
in
enter
mov
sub
unpcklps
dec
lods
sar
adc
outsl
sbb
leave
fwait
and
daa
cmp
sub
sbb
add
lds
rcr
sbb
int3
jo
dec
pop
es
inc
outsl
pushl
call
ss
dec
mov
add
mov
adc
gs
ret
pusha
sub
je
jbe
push
movsb
sbb
mov
lret
push
dec
mov
add
add
jno
push
test
imul
dec
fwait
add
mov
or
stc
xor
or
adc
add
pop
push
xchg
mov
aam
pop
stos
cli
dec
mov
xchg
and
je
out
jge
sbb
mov
mov
movsl
jge
cs
push
sub
addr16
inc
sub
ljmp
and
aaa
pop
push
or
fiaddl
test
jmp
sahf
lahf
push
mov
and
fnstcw
pop
insb
ret
ljmp
xchg
js
repz
in
and
mov
mov
test
repz
roll
in
out
fwait
mov
xchg
ljmp
fisubrs
add
repnz
ret
bound
sub
sub
in
xchg
imul
jae
adc
out
mov
jecxz
lds
push
mov
cs
pop
cmpsl
sub
add
in
add
inc
add
push
iret
pusha
sub
lods
rolb
inc
add
push
push
adc
mov
mov
mov
sbb
add
dec
sub
add
arpl
sub
pop
test
or
mov
cmp
out
into
outsb
xchg
ret
xchg
push
push
cmp
dec
icebp
int3
js
dec
mov
popf
mov
sub
jb
fcompl
test
pop
loop
enter
push
mov
test
and
mov
jo
inc
inc
mov
inc
loop
or
inc
add
lret
stc
sbbb
cmc
scas
adc
pop
inc
cmpsb
adc
hlt
out
pop
lret
fsubs
dec
push
xor
rcrl
gs
int
mov
jecxz
rolb
cmp
int3
xchg
sub
fsubs
or
cmp
dec
dec
add
pop
rep
mov
rorl
pcmpgtw
mov
push
push
pusha
or
cltd
xorb
or
xchg
incb
pop
in
mov
mov
mov
push
add
xor
rorl
std
xchg
aaa
fcomp
jno
cmpsl
hlt
mov
mov
xor
cmc
ds
fisttps
inc
popf
pop
or
popf
xchg
cmc
inc
in
add
popa
lea
pop
aas
inc
or
cmpsb
inc
sbb
lds
jno
loop
into
aad
shlb
icebp
mov
es
out
insl
cs
rolb
lds
sub
fmuls
or
data16
in
and
cltd
pop
xor
xor
leave
push
jns
inc
repnz
arpl
ds
mov
call
movsb
fstps
or
sarb
sbbb
adc
lret
sub
sti
sar
mov
ljmp
push
cli
cmp
ja
dec
xchg
lea
movsl
movsb
sbb
push
out
jl
mov
fidivrl
mov
es
insl
outsl
setl
cmp
jle
repnz
sub
mov
movsl
aad
mov
pop
repnz
inc
inc
add
in
in
cmc
clc
push
aad
nop
push
in
stos
mov
jnp
inc
adcb
sub
mov
xor
adc
dec
wrmsr
imul
jle,pn
cmp
out
jle
sub
fnstenv
add
mov
sahf
les
sbb
imul
xchg
xchg
mov
stos
xor
mov
push
mov
mov
sti
shll
sub
mov
mov
mov
je
xchg
ret
dec
cli
xor
adc
push
cmp
loop
incb
mov
inc
jp
fistpll
popf
mov
int3
jae
movsb
repnz
add
jnp
mov
mov
mov
jno
dec
push
and
jne
mov
mov
or
xor
mov
push
jbe
movsb
imul
mov
xchg
nop
sbb
xchg
or
jecxz
inc
sub
in
gs
lds
mov
pop
scas
jne
and
flds
dec
pop
adc
pop
sahf
call
cltd
xor
mov
mov
inc
cmc
icebp
stos
and
std
in
adc
sub
xchg
cmpsb
out
lcall
fists
lea
mov
mov
out
sbb
fldcw
push
shll
xchg
jle
and
lock
sub
cmp
pop
pop
popf
xchg
int
inc
adc
stos
dec
mov
push
mov
pop
mov
lcall
sub
pop
mov
in
push
pop
out
loop
pushl
cwtl
adc
movsl
loope
pop
sti
pop
cli
push
test
and
pop
add
jbe
rcrl
add
into
mov
xchg
pushf
lret
sub
scas
or
xlat
popf
mov
push
inc
add
sbb
pop
jecxz
scas
xor
sarb
subps
pop
push
xor
out
pusha
push
faddl
pop
popa
rclb
rcrl
xor
pop
mov
js
call
int
xchg
aad
sbb
sbb
dec
fists
xor
ds
movsl
out
add
and
stc
in
lcall
andb
pop
movsbl
mov
or
mov
mov
xchg
pop
mov
fldenv
sbbl
test
roll
popf
xor
mov
dec
mov
pop
jae
hlt
iret
push
ret
add
pop
leave
xchg
scas
mov
fiaddl
rolb
mov
add
xor
loope
shll
sub
test
aas
and
in
jge
inc
add
rcll
sbb
sbb
mov
push
stc
mov
popa
mov
pop
pop
dec
outsl
std
test
iret
sub
inc
jmp
push
sub
or
or
nop
add
push
in
out
adc
dec
mov
lahf
adc
sbb
roll
aam
test
sbb
xor
jmp
add
testl
dec
fbstp
cli
loop
mov
pop
sbb
add
lods
pushf
push
mov
fmulp
push
sarb
and
push
cmp
cmp
sbb
cmp
inc
inc
pop
std
sbb
sub
xor
mov
sbb
pop
rorl
mov
outsb
lahf
mov
pop
xlat
mov
pop
pop
popf
fnsave
and
cltd
dec
cli
pop
outsb
xor
cmp
cs
xchg
cmp
repnz
mov
movsl
cltd
jne
outsb
popf
daa
lods
mov
call
sbb
xchg
movb
clc
pop
into
add
pop
add
cmp
lahf
jecxz
sbb
xor
mov
jecxz
test
inc
mov
dec
fbld
in
movsl
scas
xor
mov
aaa
cmpsb
mov
mov
loopne
rol
aam
mov
jne
mov
xchg
push
mov
scas
scas
or
clc
mov
cmp
cmp
inc
loopne
cmpsb
mov
ljmp
jge
lcall
dec
push
mov
call
daa
stos
push
dec
inc
adc
bound
in
push
out
mov
cmpsl
xor
xchg
or
cli
cltd
mov
std
lret
inc
sbb
and
lods
add
out
mov
xchg
test
arpl
mov
jb
sarb
aad
and
jg
imul
mov
xor
ret
ret
loop
pusha
ja
pop
ljmp
sbbb
jo
ja
xchg
test
shll
push
sub
xchg
dec
enter
nop
push
xchg
mov
das
bnd
cmc
mov
mov
gs
jecxz
clc
hlt
dec
cs
dec
mov
popf
imul
jae
push
push
inc
test
enter
mov
fwait
push
pushf
mov
sbb
push
aaa
cmp
repz
aas
pop
fwait
sti
cmc
xlat
cmp
add
ret
imul
push
adc
cmp
xchg
pusha
jl
mov
int3
add
xchg
call
mov
aaa
cmp
push
xchg
lcall
xor
or
mov
or
and
pop
xchg
mov
xor
jg
jo
in
xchg
push
mov
lods
ja
out
in
mov
call
movsl
dec
std
push
and
imul
or
xor
stos
repnz
inc
out
mov
ds
xlat
pusha
repz
movsl
push
movsl
dec
mov
push
inc
dec
cmp
cli
pop
in
jge
fidivs
sti
push
xor
imul
je
test
arpl
or
je
fs
ds
cli
inc
xor
jp
movsb
mov
pop
jnp
jmp
xchg
mov
mov
mov
push
outsl
ja
icebp
and
ret
fcomps
pop
hlt
adc
ljmp
push
insb
sbb
add
loope
fisttpll
gs
and
aas
cmp
stos
sub
mov
cmpsb
test
mov
stos
add
ja
cmp
inc
jmp
or
stc
xchg
imul
adc
popl
mov
dec
adc
lret
or
xchg
dec
fldt
movb
aam
enter
lods
sbb
ja
and
sub
push
push
popa
lret
or
add
scas
sub
push
adc
jo
mov
lret
rorb
rclb
call
daa
xor
mov
inc
push
mov
orb
dec
mov
mov
jge
rolb
insb
loop
pop
stc
mov
ret
add
inc
jnp
adc
fcmovu
gs
stc
xchg
sbb
fstpl
ss
pop
cltd
nop
cltd
inc
rclb
and
divb
cli
lods
loope
jnp
mov
je
mov
jl
dec
mov
push
mov
push
pop
xchg
lock
push
repnz
daa
ljmp
xchg
cmc
adc
iret
iret
bound
mov
jmp
ret
ret
fs
test
fldl
mov
stc
adc
dec
push
push
pop
addr16
ja
lods
lret
daa
call
xchg
cmpsl
dec
jnp
sbb
xor
sbb
adc
cmp
sub
pop
jno
rcl
test
mov
sarb
mov
outsb
hlt
cld
mov
rcl
mov
sbb
mov
pop
cmpsl
loopne
inc
daa
dec
mov
sub
sbb
stos
stos
cltd
cmp
cwtl
hlt
adc
mov
nop
mov
loope
daa
mov
sub
into
adc
out
fcomps
setb
in
xchg
popf
xor
das
sbbl
jbe
xor
add
out
test
and
push
add
into
fwait
push
xchg
mov
ficoml
mov
cmp
xchg
mov
lret
iret
mov
jle
mov
cmp
push
add
mov
lret
dec
jle
xor
lahf
mov
dec
imul
dec
sub
daa
or
aaa
inc
mov
pop
fdivs
pusha
xchg
cmp
fucom
js
sbb
arpl
lods
pop
test
sbb
lea
int3
jp
pop
aaa
add
lods
push
add
test
dec
xchg
mov
or
jo
lret
mov
ss
sbb
adc
xor
mov
mov
jae
outsb
addr16
stc
or
aad
test
data16
xchg
sub
pop
add
sbb
imul
xchg
lock
sbb
dec
cld
fsubr
mul
push
cli
insb
and
push
lahf
dec
call
add
inc
dec
orb
pop
das
fucom
loop
cmp
loop
inc
pop
sahf
jge
mov
mov
out
jl
fsubrs
and
xlat
mov
and
repnz
sti
xchg
ds
inc
test
movsb
jg
in
push
jne,pn
aas
jnp
out
sub
outsb
adc
sarl
bound
out
push
fldl
fs
add
add
xchg
xchg
imul
ficoms
filds
mov
roll
mov
fstpt
jno
dec
and
inc
mov
mov
lock
shl
add
clc
adc
daa
orl
dec
add
pop
pop
xchg
sub
mov
jno
sahf
pop
lods
cmp
sub
pop
movsb
fwait
test
or
scas
daa
inc
out
popf
jns
dec
shl
enter
fbld
dec
push
add
push
repnz
loop
fistl
aas
pop
mov
lret
loopne
jp
cwtl
mov
or
sbb
lods
mov
ret
mov
or
repz
cmp
dec
cwtl
iret
sub
jmp
lea
daa
pop
xlat
mov
pop
lret
pop
pop
icebp
test
or
mov
jb
fldenv
movsb
loope
dec
mov
push
bound
rclb
stos
cmp
dec
dec
cmp
sbb
ljmp
xchg
fs
lods
mov
popf
xchg
mov
pop
mov
inc
dec
add
test
cmpsb
pusha
popl
xor
push
and
and
xchg
cmp
xor
push
lret
inc
int
jne
add
xchg
sbb
sub
xchg
xchg
andl
add
mov
int
test
outsl
data16
xor
les
mov
ljmp
jmp
push
fnstcw
lahf
insl
in
test
ffree
and
add
sbb
xor
sbb
xlat
mov
push
fidivs
cmp
stos
cmc
jnp
pop
dec
add
lds
push
jmp
mov
dec
adc
xor
sub
or
leave
sbb
andb
fstl
popf
jnp
mov
adc
enter
test
mov
pop
scas
pop
insb
out
shll
xchg
adc
outsl
push
inc
mov
pop
sbb
stos
addl
dec
add
or
lea
iret
mov
xor
add
inc
push
pop
js
or
mov
mov
push
enter
cmpsl
mov
inc
fsubrs
push
sbb
jmp
mov
fildl
into
insl
xlat
movsb
dec
int3
repnz
mov
mov
rol
mov
mov
incb
pop
sub
fwait
pop
mulb
and
nop
dec
int3
scas
sub
fidivrl
pusha
mov
cmp
pop
pop
cltd
push
je
jnp
cmp
sarb
jp
mov
pop
loope
insb
jnp
jbe
ret
add
mov
shrl
fsubs
push
mov
xorl
int
jecxz
pop
cmpsl
add
lret
jecxz
shll
xchg
cmp
pop
mov
cmp
dec
cmp
in
outsl
xor
ja
popa
fldcw
loope
fbld
mov
icebp
loopne
ret
jp
cld
xor
hlt
xorb
fstl
negb
jp
fbstp
xor
cmc
fs
pop
push
cmp
mov
mov
push
mov
xchg
or
cmp
imul
rep
int
popf
out
adc
into
sub
or
dec
xor
jne
inc
and
mov
repnz
jmp
sbb
fwait
or
jno
xchg
scas
inc
adc
mov
dec
sub
int
sahf
pop
dec
shll
pusha
adc
dec
add
lret
aad
sub
ret
js
mov
cmp
dec
je
shl
add
add
sub
mov
test
cwtl
aam
scas
xor
flds
mul
mov
sub
xchg
sub
or
or
scas
adc
jecxz
mov
enter
jp
dec
xor
rcrb
iret
jne
xchg
mov
repnz
ret
sbb
inc
inc
push
jo
inc
mov
out
daa
lret
jl
xor
xchg
jbe
fildll
add
imul
pop
jge
mov
dec
jg
mov
decl
sub
lds
push
push
clc
cltd
mov
push
repz
pop
mov
pop
scas
ja
divb
mov
push
inc
sbb
addl
test
jg
dec
mov
xchg
out
pop
jle
jp
dec
scas
fidivrl
mov
ja
fstl
add
out
cmp
loop
roll
bound
lcall
inc
in
or
dec
in
push
stos
bound
cmpl
and
push
je
lahf
dec
dec
dec
sti
fistpll
xor
imul
xor
xor
jne
dec
addl
ret
and
in
add
test
int
jecxz
push
sti
adc
and
push
mov
cli
sub
mov
pop
movsb
jbe
push
rolb
shr
mov
out
sub
xchg
data16
inc
push
mov
shr
inc
adc
stos
int3
cmpl
sbb
cmpsb
mov
push
ss
push
insl
xor
out
mov
out
insb
inc
shlb
dec
add
out
push
lret
mov
insl
cmp
out
pop
or
jecxz
inc
and
repz
lods
jno
xorl
stos
pushf
in
test
imul
mov
stc
mov
and
or
es
imul
dec
xchg
cmp
inc
jb
shrl
sar
inc
mov
jo
push
mov
mov
push
xchg
jg
push
push
xchg
sub
ds
in
hlt
out
push
ss
test
pop
in
xor
inc
fstpt
sub
test
sub
cmp
xor
roll
jecxz
fisubl
mov
stos
add
sbb
jmp
push
shlb
test
cmp
daa
pop
das
push
decl
ss
lods
cmp
into
and
or
or
and
rorl
int3
loope
aaa
mov
xchg
dec
add
inc
dec
shl
inc
xor
adc
mov
inc
dec
in
std
inc
sub
pushf
sbb
mov
adc
push
jno
fstpt
xchg
fnstsw
add
inc
ljmp
and
repz
inc
cs
loopne
jecxz
dec
stos
mov
nop
loop
scas
out
adc
and
inc
shll
out
mov
imul
nop
lds
add
jne
inc
popf
sub
ret
push
xlat
adc
add
jecxz
cmp
fsubs
lret
adcw
repnz
cmp
cli
imulb
idivb
adc
sub
jns
test
enter
pop
outsl
mov
adc
mov
pop
add
xchg
cmc
mov
jp
rol
mov
fdivl
test
fs
cmp
rep
cld
sbb
mov
and
push
mov
and
and
test
push
add
jg
dec
pop
sub
call
sbb
rcrl
xor
xchg
movsl
mov
stc
add
sbbl
fstpt
or
xor
xor
pop
xor
loopne
jno
fadds
je
mov
mov
cmp
jne
push
stos
pop
icebp
adc
daa
mov
pop
outsb
out
int3
mov
mov
in
or
fwait
cwtl
inc
adc
mov
mov
jmp
out
outsb
push
add
xor
push
inc
aam
jmp
mov
mov
xlat
inc
lods
addr16
push
lds
adcl
sub
in
cmp
lret
loop
add
popl
arpl
sbb
lea
push
adc
mov
sysexit
into
xor
stc
adc
mov
aas
test
iret
pushf
addl
repz
push
mov
dec
push
push
mov
push
lret
imul
adc
lock
xor
insb
push
pop
pop
pop
ret
iret
roll
adc
jp
adc
adc
or
xor
and
pop
call
xchg
imul
xlat
lock
pusha
int
mov
push
cmp
pop
testl
sub
adc
pop
xchg
clc
xchg
loop
jo
mov
jge
cmp
ret
jle
pop
xor
jbe
gs
jae
inc
sbb
pop
xchg
jg
pusha
inc
call
push
pusha
cmp
cli
das
arpl
push
sbb
xchg
cmc
mov
int
mov
mov
test
ret
sahf
add
add
test
jg
arpl
xchg
lock
cmp
push
cmp
and
repnz
push
add
jmp
add
xchg
insl
inc
xor
inc
mov
jae
leave
mov
lret
out
sub
cltd
jae
xchg
dec
stos
inc
arpl
pop
nop
sub
ss
push
loop
fsubs
rcrl
jns
ljmp
xor
mov
mov
scas
jbe
mov
xchg
fmull
inc
mov
mov
mov
dec
xchg
bound
scas
cwtl
cmp
aas
xor
inc
rol
lcall
jbe
inc
add
add
mov
adc
fmuls
imul
and
in
cmp
gs
add
adc
std
xor
imul
mov
xor
xchg
data16
jo
cvtps2pd
push
lods
ror
and
mov
or
push
js
push
jnp
fiadds
push
push
lret
ss
jae
das
pop
mov
enter
mov
daa
sti
add
addr16
dec
out
xlat
rcrl
mov
push
adc
in
mov
loop
rclb
aas
gs
test
mov
sub
or
test
inc
dec
xchg
enter
push
stos
mov
xor
js
adc
push
adc
test
adc
lods
sbbb
xor
subl
cmp
cld
sub
cmc
jno
enter
jmp
push
aam
push
xor
test
iret
shl
call
inc
jb
xchg
js
into
data16
mov
mov
cmc
sub
push
cmp
jmp
jb
and
es
cld
jl
loopne
xchg
and
sub
sbb
inc
jae
cwtl
and
insl
movsb
lcall
lds
leave
jmp
movsl
iret
add
xchg
mov
pop
insl
loope
das
push
aam
gs
inc
adc
sub
pop
adc
outsb
fdivl
adc
aas
xorl
mov
js
ja
hlt
cmp
fidivrs
pop
mov
mov
fsubrs
mov
jnp
jno
frstor
imul
popa
inc
mov
mov
jno
bound
push
push
or
inc
inc
iret
mov
std
inc
push
jbe
or
add
or
xchg
mov
xchg
push
jmp
cltd
sbb
and
and
loopne
data16
cmpsb
fdiv
arpl
dec
out
jb
jmp
sub
cwtl
stos
dec
stos
jno
imul
pushf
outsl
xlat
into
outsl
sbb
push
jno
push
cwtl
and
adc
notb
mov
push
movsb
or
jmp
divl
xchg
aas
scas
test
leave
or
pop
fxch
in
xchg
stos
fildll
adc
or
or
xlat
cmpb
push
jg
or
das
xchg
pop
mov
xchg
sub
lea
loop
ds
jmp
xor
cltd
pop
out
das
sub
jle
cld
mov
add
cmp
lret
and
or
xchg
lods
iret
adc
adc
mov
movsb
jge
push
fs
ljmp
loopne
sub
ret
or
testb
stos
jno
les
adc
in
push
in
jns
lock
mov
pop
cltd
or
adc
xchg
sti
stos
stos
pop
mov
cmpsl
or
popf
and
lret
hlt
jne
cmpb
lock
lcall
jecxz
mov
gs
in
dec
test
ret
xor
xchg
xchg
or
in
cwtl
rorb
ja
lret
shll
push
cmp
mov
repnz
rol
xor
mov
nop
fdivs
imull
mov
adc
jmp
es
ror
cmpsl
lret
xchg
mov
push
rolb
jle
notl
jp
sbb
xor
sbbb
xchg
add
mov
das
movsl
pop
add
push
add
test
loope
pop
ljmp
push
mov
std
fnsave
inc
cmpsl
pusha
mov
xchg
lret
bound
in
mov
adc
xchg
fst
in
xor
or
add
cmp
es
loopne
fisttpll
call
or
mov
out
pop
roll
and
cmpb
or
lea
mov
push
push
xchg
pop
fnstsw
fldcw
in
cltd
adc
shlb
xor
hlt
mov
aas
adc
dec
sti
cmp
aaa
sbb
add
mov
push
int3
fidivrl
repnz
idiv
fadds
iret
jge
ret
sub
in
cltd
fiadds
movsl
pop
sti
pusha
jb
mov
or
lcall
or
mov
dec
lock
or
xchg
ds
pushf
mov
scas
out
aaa
push
outsl
jnp
push
push
mov
mov
mov
xchg
lock
ds
test
scas
stos
imul
jmp
into
inc
les
and
addb
adc
jae
ss
and
out
adc
dec
dec
pop
push
das
scas
data16
jl
inc
iret
dec
mov
add
adc
mov
pop
adc
sub
mov
xor
pop
stos
stc
adc
js
pusha
xor
mov
sarb
dec
fnstcw
sub
push
into
clc
fisubrs
xchg
pusha
jle
lock
xor
iret
sbb
daa
insb
jle
fisubrl
inc
js
es
push
leave
pop
imul
or
outsb
push
and
xchg
andb
xorb
mov
dec
in
fwait
or
xchg
and
fsubrl
scas
cmp
inc
mov
mov
sub
xor
in
mov
or
or
cmp
lds
and
test
lcall
mov
xor
aam
push
pop
fdivrs
idivl
roll
inc
insl
out
adc
or
cmpsl
push
les
dec
addr16
cmp
xchg
sub
in
push
add
mov
adc
cmp
inc
pop
sbb
jmp
jecxz
pop
das
stc
push
icebp
js
adc
aaa
stos
sub
inc
mov
mov
jecxz
lret
push
inc
pop
inc
inc
sub
lahf
pop
mov
pop
ss
xchg
shrb
xchg
or
mov
daa
jp
int3
inc
enter
sub
je
int3
mov
pop
sub
or
jmp
enter
in
int3
sub
popl
mov
xchg
mov
ss
shll
test
xor
jle
mov
sub
xor
pop
add
fimuls
adc
aam
xorl
nop
mov
xorb
jne
sub
sub
fwait
scas
stos
xor
xchg
mov
imul
std
or
push
sub
shlb
test
lock
roll
nop
addr16
jmp
inc
pusha
iret
xlat
jle
sub
xchg
adc
rclb
sahf
lret
jno
adc
jbe,pt
dec
mov
cltd
jecxz
add
outsb
arpl
mov
sarb
xchg
sti
sub
dec
xchg
mov
sbb
push
xor
inc
int3
and
add
addr16
pop
fisubl
test
icebp
xor
xchg
in
into
jns
jmp
rcrl
push
adc
in
or
popf
sub
pop
ret
jl
dec
push
add
andl
add
inc
icebp
dec
mov
mov
les
dec
paddw
push
add
outsb
das
adc
mov
fs
jne
out
iret
je
jmp
movsb
das
push
pop
imul
clc
add
xor
roll
add
iret
sbb
mov
aam
mov
xor
cmpb
iret
xchg
cmp
cmp
out
sub
xchg
or
mov
mov
cmc
pushf
scas
adc
fldt
ja
sub
lds
sar
push
mov
cmc
sbb
dec
mov
jecxz
adc
dec
add
fisttpll
jle
lds
jle
aad
repz
aad
inc
sub
and
test
shl
aad
enter
adc
aad
stc
inc
movl
stos
rorb
mov
ret
inc
ss
imul
xor
mov
add
nop
fimull
inc
jg
stos
xchg
or
mov
fcmovnbe
test
xor
mov
or
mov
jnp
add
xchg
stos
arpl
cmc
mov
mov
js
xor
push
jne
xor
adc
std
aaa
inc
sarb
maxps
cmp
rorl
pmulhuw
dec
pop
std
pusha
popa
fstpl
pusha
mov
xlat
pop
cmpb
loope
das
movsl
adc
cwtl
lret
stos
stos
mov
mov
leave
mov
xchg
sbbl
cmc
xlat
in
inc
xchg
mov
mov
aas
test
xchg
pop
sub
pop
testl
test
imul
imul
in
and
jae
mov
jg
enter
lods
and
inc
xor
stos
iret
dec
cwtl
jg
cmp
dec
mov
mov
push
pop
outsb
and
push
int3
adc
pop
das
lret
fmuls
mov
jecxz
cmp
cwtl
push
mov
nop
and
cli
in
pop
sbb
xchg
iret
je
mov
and
cmp
fdivl
icebp
aaa
imul
scas
mov
pop
hlt
loope
xchg
stc
sub
cmp
test
add
xchg
addr16
sub
jns
bound
xor
add
lret
int
stos
sbb
pop
or
arpl
fdivrs
jecxz
mov
or
sub
lahf
xor
movzbl
insb
sub
xchg
mov
nop
cmpsl
push
add
incl
or
cmp
ljmp
loop
fisubs
repnz
mov
repnz
adc
jecxz
fs
inc
int3
lods
and
xchg
xor
add
aad
lret
add
gs
rcll
mov
sub
xor
mov
ss
push
mov
xor
push
jg
inc
mov
mov
idivb
dec
pop
jmp
call
loopne
jno
stos
pop
testl
or
sbb
adc
in
xlat
dec
add
aas
jl
mov
pop
out
cmc
sbb
clc
xchg
test
ret
fsubrs
mov
scas
jbe,pn
shrb
shrl
cmp
and
xor
leave
std
mov
mov
inc
popa
add
inc
mov
push
xchg
repnz
mov
cmp
stos
sbb
xchg
stos
sbb
fidivs
insb
inc
dec
mov
adc
leave
jae
or
in
push
fwait
pop
ja
cmp
dec
loope
push
push
jl
push
adc
adc
lds
xchg
sbb
pusha
inc
push
mov
bound
insb
jge
test
rep
pop
filds
in
push
mov
xchg
loop
sub
ss
lret
adc
lods
pop
push
std
cmp
dec
mov
cmp
in
fsubs
nop
outsb
enter
sbb
dec
test
imul
mov
xor
loop
dec
push
mov
mov
cli
mov
icebp
loope
add
xchg
sub
lahf
inc
aas
xchg
std
fcom
cli
arpl
repnz
test
mov
fiadds
push
jb
into
test
mov
clc
mov
xchg
loopne
enter
pop
aas
fs
push
ss
mov
popf
mov
add
je
ljmp
lods
fcom
faddl
sar
jo
fisttpll
shr
pop
pop
sub
and
and
std
int
insl
mov
das
push
int3
and
dec
ret
insl
int
mulb
das
sub
out
insb
mov
lds
mov
ljmp
sbb
shr
cmpsl
iret
inc
push
ror
sbb
pop
sub
or
int
int
pusha
daa
jge
decl
cwtl
dec
sub
out
cltd
sti
mov
inc
ja
adc
xchg
shlb
xor
xorb
mov
jl
and
popf
or
divl
hlt
push
add
repz
and
mov
pop
inc
mov
or
pop
xchg
imul
in
fstps
lret
pop
inc
lcall
stc
aad
lret
pop
add
jno
rol
shll
jno
jg
cld
xor
jg
into
mov
aam
hlt
cmp
aad
cwtl
jle
pop
ret
stc
lock
adc
arpl
and
mov
mov
add
jge
sbb
pop
mov
aaa
adc
stc
xchg
in
enter
pop
jbe
push
jl
push
or
adc
dec
mov
inc
mov
inc
push
sahf
sbb
fnstenv
pusha
pushf
sbb
scas
sahf
out
mov
or
xlat
jp
push
xchg
pushl
adc
pop
jl
int3
out
sub
mov
in
lahf
call
imul
daa
pop
movsl
and
shrl
inc
sub
repnz
jae
repz
mov
inc
mov
fiaddl
jo
mov
jl
nop
clc
dec
sahf
hlt
iret
daa
adc
jbe
std
aad
mov
fcomp
dec
xchg
dec
adc
fmuls
mov
cltd
out
dec
add
add
test
mov
pop
xor
les
pushf
shrl
jle
dec
jns
mov
or
sub
mov
mov
sub
adc
mov
inc
orl
sub
and
nop
inc
out
aas
scas
movsb
jl
fwait
aam
aas
je
push
jo
ljmp
jg
enter
inc
jg
inc
mov
fistpll
out
jle
mov
call
xor
sub
adc
jbe
mov
into
loope
xor
and
scas
gs
jbe
fcomps
sub
pop
sub
xchg
lock
and
mov
sbb
dec
dec
inc
dec
icebp
jg
xchg
iret
sub
push
aad
cmp
dec
dec
and
insb
fwait
leave
out
dec
jmp
and
fcomps
adc
sti
mov
pop
pop
stc
es
fcompl
jmp
enter
adc
push
jle
add
stc
sub
dec
inc
sub
mov
dec
iret
or
dec
inc
dec
inc
test
mov
pushl
mov
adc
out
into
ret
xchg
or
mov
adc
cmp
in
leave
mov
or
pop
add
xor
mov
jno
imul
gs
insl
je
pop
pop
add
xchg
into
out
pop
adc
adc
ja
pop
cmpsb
xor
repnz
mov
stc
test
push
sub
jge
lcall
lds
vmptrst
or
add
jbe
cld
xchg
add
fwait
xlat
icebp
xor
loope
iret
test
into
inc
loopne
cmp
jge
std
cmpxchg
in
rclb
mov
or
pop
and
loopne
lcall
dec
lea
sbb
call
dec
jp
shl
sbb
xor
pop
push
sub
rolb
or
xchg
sub
fisttpll
andl
inc
nop
aaa
fidivs
loope
pop
mov
outsl
mov
push
jp
and
jle
aam
shlb
xchg
sbb
hlt
cmpsb
push
or
icebp
adc
rorb
cmp
cwtl
fwait
dec
add
xlat
add
and
movsb
cmpsb
dec
addl
cli
cs
jae
cmc
xorl
or
test
andnps
mov
stos
mov
cmp
adc
dec
dec
sbb
cltd
push
mov
and
ds
sub
rclb
popa
and
ss
andb
sbb
rcrb
mov
stc
push
aas
fidivs
and
dec
cmp
mov
aam
out
fldl
andnps
jns
out
and
sarl
sub
or
lret
popf
lcall
std
test
jmp
push
addr16
jle
mov
js
incb
sbb
pop
shlb
fnsave
lea
xor
fidivrl
inc
les
adc
js
mov
sub
xchg
aas
orl
mov
int
cmp
je
sarl
call
push
iret
test
mov
mov
das
cmp
popf
loope
mov
fists
add
lea
cwtl
sbb
dec
dec
pop
cwtl
ds
push
sub
mov
or
sbb
cmpsl
lcall
push
adc
daa
xor
pop
insl
jg
cwtl
iret
adc
test
hlt
popf
fs
clc
scas
pusha
push
ret
xor
adc
xchg
and
fidivrl
test
std
stc
sbb
inc
cld
popa
rcll
jecxz
scas
dec
cmp
insl
lret
aad
or
mov
xor
xchg
cmp
test
xlat
sahf
out
imul
sahf
xchg
pop
mov
jbe
mov
push
out
enter
pushf
push
mov
push
mov
pop
movsl
inc
push
or
xchg
rolb
mov
and
add
lret
push
fisubrl
lods
mov
notb
sbb
scas
and
xor
ljmp
inc
xchg
cmpsb
inc
rolb
cmpsl
js
movsl
movsb
mov
add
rcl
sub
fbstp
sbb
ficoms
cwtl
lods
mov
dec
into
daa
cmp
mov
ret
cld
mov
pop
lods
sti
adc
adc
jo
mov
push
dec
jne
andl
dec
jbe
sub
and
push
xchg
add
jae
stos
ljmp
jg
sbb
cmp
push
mov
outsb
mov
fadd
outsb
mov
ret
test
in
lods
cli
mov
fucom
cmp
lahf
push
adc
out
or
cmp
icebp
mov
clc
je
lods
xchg
dec
xlat
addr16
sub
xor
std
mov
mov
aad
mov
cltd
adc
dec
movsl
inc
push
push
mov
mov
push
dec
adc
faddl
jno
ret
mov
stc
int
xchg
push
shll
icebp
aas
loop
bound
adc
insb
jle
jl
orl
or
mov
dec
xchg
test
pusha
outsl
jne
clc
mov
shl
sub
scas
adc
inc
jno
pop
repnz
addr16
xor
cmc
inc
sub
mov
insb
into
fldl
sbb
and
fwait
mov
test
mov
mov
xor
lahf
jae
add
or
lret
mov
cmpsl
std
stc
or
sti
addb
das
xor
pop
fisttpll
sahf
mov
push
sub
and
adc
mov
mov
ljmp
daa
cld
sub
xorl
test
cmp
jle
cmc
mov
mov
mov
cmpsb
sbb
sbb
pop
sahf
dec
sbb
xor
out
dec
mov
sahf
sbb
mov
outsl
xchg
dec
pop
int
out
mov
push
pop
or
inc
lods
enter
push
enter
sbb
add
push
enter
xor
ss
call
out
and
mov
adc
or
rcrl
sbb
xchg
mov
xor
repz
jp
aad
cltd
out
add
inc
notb
mov
sub
push
fdivrl
mov
sub
mov
mov
xchg
push
std
daa
jbe
push
mov
cld
pop
pop
enter
or
adcl
fldl
andl
or
add
mov
add
aaa
sbb
psadbw
sbb
xchg
cltd
orl
rcl
jg
dec
mov
test
movsl
xorl
arpl
mov
sbb
cmp
lret
lock
aaa
cmc
mov
dec
stc
shrl
mull
aas
push
lcall
sar
aas
rcl
fdivr
shr
or
out
add
fucom
dec
scas
shl
cmc
loope
push
jns
jp
nop
lods
outsl
sti
jge
insb
ret
jp
push
movsb
sarl
push
inc
jge
push
sub
xchg
pop
pop
rcr
scas
jno
jg
jmp
lret
mov
movsl
xor
jecxz
push
repnz
sbb
push
test
dec
popl
shrl
stos
jo
mov
pop
jne
cmpsb
mov
daa
xor
loope
mov
push
adc
decl
out
ja
mov
xchg
mov
and
es
lret
and
testl
inc
rolb
xchg
pushf
fidivl
fmuls
mov
jmp
insb
dec
or
out
cwtl
dec
cmp
mov
test
pushf
dec
out
adc
xor
cmc
call
stc
xchg
xchg
sahf
or
cmpb
iret
push
mov
mov
jae
xor
sub
repnz
mov
fdivs
xchg
sbb
mov
insl
pop
jns
adc
jge
xchg
in
scas
mov
pop
xchg
jns
jg
add
movsl
addr16
inc
fld
cld
pop
adc
add
mov
ret
adc
add
sub
pushf
ret
push
loope
jo
fiadds
lods
in
push
mov
push
mov
int
add
fcmovnb
shll
or
push
bound
or
in
push
inc
rcll
fnstcw
adc
sub
add
mov
lds
xchg
les
movsl
std
shrb
jle
dec
lock
cmp
imul
add
inc
jmp
cmp
inc
into
add
push
sub
mov
add
add
mov
popf
xor
out
rclb
sbbl
xor
negb
mov
pop
lahf
div
loop
cmp
xchg
xor
or
xor
testl
cmp
insl
lods
xor
fcomp
test
add
xor
or
pop
xor
adc
ds
cmpsl
pop
icebp
inc
dec
dec
sbb
push
push
mov
sbbb
add
mov
je
sbb
and
popf
int3
sub
pop
or
out
div
daa
cmp
aam
stc
out
mov
add
mov
jbe
scas
xchg
fdivs
push
int
popa
shlb
jmp
push
fs
aad
fnstsw
pusha
add
test
lea
mov
imul
mov
testb
adc
ja
scas
or
sub
popa
xor
cwtl
push
xchg
sub
jbe
mov
cmpsl
cmp
mov
add
je
aaa
cs
fstpl
pop
mov
sti
hlt
add
mov
xor
je
mov
test
es
lret
sub
mov
fwait
in
aas
jns
stc
or
or
mov
lahf
cmp
jg
jnp
daa
imul
sub
pop
scas
jmp
insl
xlat
cmp
jnp
pop
mov
les
push
fs
fimull
mov
xor
inc
push
es
push
fstpl
nop
leave
xchg
fimull
jbe
mov
jnp
sbb
sub
push
xor
mov
cmp
jno
fidivrs
push
and
jo
mov
pusha
and
ret
cmpsb
mov
sub
mov
loopne
cli
xor
mov
mov
addl
mov
aas
xchg
stos
jp
arpl
sti
into
movb
scas
pop
push
out
mov
push
jae
fbstp
movsb
popf
mov
insl
sub
hlt
lahf
aad
int3
sub
fcom
push
outsl
mov
fistpl
jecxz
mov
mov
sub
shrl
xchg
inc
fwait
iret
xlat
stos
js
or
into
aas
cmp
mov
lcall
sub
mov
dec
jle
mov
popa
insb
jmp
in
xchg
dec
dec
adc
cmc
and
jg
fisubrl
mov
adc
push
adc
inc
fneni(8087
mov
jne
jae
mov
lcall
repnz
xor
imul
out
jns
adcl
mov
mov
inc
push
lods
adc
sbb
cmp
jb
mov
xchg
filds
mov
mov
es
gs
xorl
or
xor
arpl
loop
in
insl
arpl
mull
push
outsb
inc
and
push
adc
pusha
dec
movsb
or
xor
scas
or
cmp
repz
nop
xchg
je
cmpsb
int3
scas
es
out
sti
mov
out
ds
push
jae
scas
xor
andb
push
sub
addr16
repz
jo
jl
fisubrl
xor
mov
dec
jecxz
cltd
ret
add
inc
stos
xor
leave
ss
pushf
sub
out
fst
sbb
into
js
aas
ret
mov
xchg
dec
lahf
out
test
cli
sbb
int
daa
decb
pop
pop
push
leave
add
insl
nop
cwtl
cmp
sbb
inc
test
jmp
sbb
outsl
push
shl
leave
and
cmp
in
mov
mov
lds
stc
lock
hlt
popa
xchg
pop
add
loop
jne
ficompl
dec
je
das
sti
push
cmp
lret
jno
mov
fistpl
cmpsl
popf
jl
rcrb
iret
fs
mov
bound
jg
dec
jb
pop
inc
adc
test
inc
push
dec
cli
out
das
gs
and
or
out
cmp
repnz
cwtl
xor
pop
enter
mov
sub
adc
push
int
mov
ja
ds
pop
sarl
test
sub
jne
xlat
rcr
push
sub
inc
test
mov
add
add
pop
sbb
testl
pop
sahf
jne
movl
hlt
insl
cld
arpl
push
or
jge
jae
sarb
enter
dec
call
popa
dec
mov
out
pop
out
mov
cmp
mov
jns
dec
stos
mov
in
mov
aas
push
shll
loop
sub
pop
rorb
mov
scas
fmull
mov
mov
pop
push
mov
or
fwait
arpl
popf
mov
mov
icebp
in
jg
addb
rcr
dec
cmp
in
and
jmp
inc
leave
shll
inc
hlt
dec
ret
in
cwtl
xchg
mov
cwtl
mov
out
or
rcrl
gs
popf
ret
mov
add
mov
push
pop
or
or
popa
aam
sahf
xor
push
sub
aas
add
shlb
push
and
cmpb
scas
xchg
jnp
cmp
and
dec
cld
adc
in
xchg
fs
mov
sar
aas
leave
xchg
adc
mov
push
mov
dec
mov
mov
rcrb
or
out
sbb
pop
call
mov
adc
add
cmp
jp
xchg
sub
mov
mov
pop
inc
pop
cli
inc
out
rorl
insb
shll
out
enter
inc
cmp
and
gs
lret
add
daa
scas
mov
push
cmp
sub
loopne
pop
lret
popa
cmp
int
jbe
sub
scas
or
out
adcb
or
mov
inc
inc
push
lret
ljmp
inc
loop
mov
clc
sub
test
shrb
adc
scas
push
callw
add
sbb
out
cmp
addr16
clc
xchg
loopne
mov
lret
test
lahf
lds
popa
into
cmp
outsl
js
mov
test
pop
pop
and
into
add
ja
lahf
pop
jl
mov
add
xchg
mov
inc
sub
xor
mov
pop
jge
cli
fisubrs
jmp
or
lods
aam
imul
add
pusha
leave
pop
mov
jmp
mov
lods
fisubl
mov
mov
std
lock
mov
mov
pusha
push
inc
inc
jb
and
arpl
out
mov
cmove
in
sbb
cmp
ror
and
cwtl
aad
hlt
int
push
adc
xlat
sahf
sub
mov
adc
addl
pop
pop
sub
nop
int
push
jg
pop
shll
pop
jecxz
pop
sbb
push
ss
nop
sahf
jecxz
adc
pop
data16
movsb
sub
aas
pusha
ss
ret
mov
aam
ljmp
popa
outsl
cwtl
push
fdivrs
in
loope
push
adc
add
push
fsub
stos
sub
in
push
mov
mov
int
adc
add
ja
sbb
cmp
add
and
out
call
push
jmp
inc
mov
cwtl
xchg
push
and
push
cs
pusha
in
in
cs
cld
add
mov
xchg
mov
jae
jmp
pop
inc
hlt
mov
xchg
lods
mov
dec
cmpsl
fstpl
rcrl
sbb
cmp
inc
or
mov
mov
sub
pop
pop
jno
mov
repz
sti
dec
aaa
je
push
lret
lret
xor
cmp
insb
rclb
pushf
push
xchg
jecxz
cmc
xor
dec
mov
ret
mov
ret
jb
cmpsl
dec
mov
loope
cli
mov
add
repz
jnp
sbb
fstp
inc
mov
roll
mov
subb
mov
das
sbb
iret
lea
push
sub
out
mov
push
repnz
jp
inc
cld
es
inc
clc
mov
jns
into
mov
mov
inc
ret
xor
dec
xor
bound
xor
pop
inc
cwtl
aas
rcr
or
fildll
or
adc
in
mov
insl
cmp
push
xor
sub
lods
push
ret
inc
mov
das
sarl
jo
adcl
stos
inc
jb
push
jb
clc
loopne
and
popa
jb
inc
cs
mov
popa
adc
xlat
loopne
repz
scas
test
xor
lea
and
cwtl
aam
aam
mov
dec
stc
pop
push
arpl
paddb
pop
popa
sub
xor
inc
rcrl
out
pop
inc
mov
jl
jbe
pop
loopne
and
inc
out
mov
inc
cmp
jle
maxps
and
lds
lods
fldl
dec
outsl
cmp
push
arpl
ds
adc
jecxz
fldl
inc
ret
rcl
and
outsw
fbld
push
mov
xor
or
adc
int
dec
jns
lret
pop
mov
divl
cmp
or
and
or
fnsave
sti
ret
sub
mov
pop
add
rorl
jnp
lahf
je
xor
jl
and
aaa
mov
repnz
negl
xlat
jb
aam
mov
leave
rorl
or
cwtl
xchg
mov
idiv
cmp
or
sub
scas
mov
mov
rcll
xchg
sarb
pushf
inc
lcall
hlt
rolb
mov
jbe
sub
push
roll
mov
ja
dec
insl
lcall
andl
lret
negl
lock
mov
popf
inc
shrb
sbbl
or
jmp
inc
and
cwtl
push
pop
mov
shrb
xchg
xchg
fs
mov
arpl
adc
dec
jb
add
stos
loop
inc
lods
xchg
xchg
mov
cld
fistl
inc
lods
sbb
data16
int
jle
lock
in
sbb
jmp
inc
fistl
sbb
cmc
nop
mov
mov
ret
arpl
insl
js
fxch
shll
jo
lcall
ror
cmc
insb
push
jl
jp
mov
repnz
push
in
sbbl
out
sbb
sarl
xchg
or
dec
loope
ds
in
imul
in
in
xchg
pop
inc
dec
movsb
fadds
dec
and
and
cmp
das
sub
repz
and
aam
mov
pop
jmp
out
xchg
and
arpl
sbb
xchg
int3
rol
inc
addr16
aam
adc
adc
popa
ret
and
cmpsb
mov
or
xchg
pop
pushf
and
inc
mov
mov
insl
cld
xchg
sub
mov
stos
subl
cmp
fdivp
out
iret
aad
mov
ret
outsl
movsb
dec
mov
mov
or
insb
subl
fdivrl
mov
xlat
sarb
pushf
cmp
sub
lea
rcrb
rcll
shll
jl
or
push
rorb
sbb
and
mov
or
cli
xor
mov
movsb
push
rcr
rolb
xchg
mov
mov
daa
in
push
pop
jecxz
pop
fsts
ljmp
xor
pop
rcrb
aad
test
xlat
push
pop
int3
bound
or
icebp
pop
sub
or
cmp
jg
clc
mov
dec
inc
dec
cld
pop
push
jno
bound
ret
movsl
inc
add
xor
in
mov
xchg
sti
int
sbb
push
repnz
das
lds
movsb
rolb
out
fdivrl
mov
cld
add
bswap
and
stc
or
inc
bound
outsl
xorl
add
add
jecxz
add
pop
mov
loopne
test
int
xchg
aam
xorb
jae
daa
and
adc
jmp
sbb
fcomi
jecxz
pop
cltd
mov
jmp
daa
cmp
loope
loopew
stc
mov
les
pushf
dec
and
jecxz
insl
test
and
fwait
imul
xor
adc
arpl
dec
mull
sub
xchg
arpl
push
mov
repz
add
loope
outsb
cmp
push
pop
adc
jno
jl
dec
les
rolb
sub
mov
nop
shr
dec
xchg
pop
jmp
pop
bound
cltd
repz
es
loopne
mov
lahf
fbstp
xcrypt-cfb
cmpsl
out
or
mov
mov
cmp
test
sub
xchg
adc
adcl
pop
fstp
insb
add
mov
fistpll
cwtl
stos
out
add
or
push
mov
or
outsl
jb
es
arpl
xor
pusha
ficoml
mov
mov
lods
push
lret
cmp
loop
mov
inc
dec
inc
sub
jl
in
jo
add
aaa
pop
mov
sbb
testb
mov
les
outsl
shrl
xchg
out
fs
xchg
add
loop
insl
push
adc
add
std
dec
jp
inc
ret
push
mov
adc
xlat
iret
das
mov
mov
jne
sub
xchg
pop
mov
push
daa
imul
pop
imul
dec
mov
arpl
data16
insb
out
mov
les
add
lea
int
imul
push
cmp
scas
xchg
ljmp
cmc
test
es
fs
adc
gs
or
dec
dec
mov
lock
or
mov
lods
ja
sahf
jns
int
popa
inc
pop
daa
icebp
mov
pop
or
jl
push
scas
pop
imul
bound
inc
mov
cmc
and
shlb
mov
enter
stc
push
cmp
inc
push
push
or
aam
pop
mov
pop
push
mov
cltd
fists
outsl
mov
mov
leave
shll
mov
push
cmpsb
add
jno
testb
mov
xor
pop
push
mov
in
jmp
ret
inc
pop
adc
dec
mov
mov
loop
xchg
dec
mov
push
xchg
out
mov
mov
jbe
outsb
dec
adc
ficoml
test
mov
sbb
lods
and
mov
mov
sub
das
testb
cmp
xor
xchg
mov
cmp
bound
jns
pop
dec
or
xchg
or
in
mov
xchg
test
int
test
add
adc
into
js
addb
mov
push
mov
ret
jae
mov
das
pop
cmpb
outsl
inc
push
or
jge
jmp
jmp
imul
aaa
jmp
jae
inc
lret
mov
xor
inc
sbb
jnp
test
inc
jecxz
idivb
cmp
sti
lahf
sub
iret
and
stos
dec
es
mov
cld
pop
aaa
loopne
in
xor
pop
cmp
sti
repnz
rcll
push
push
decl
xchg
ret
es
les
data16
repz
pop
sar
pushf
imul
and
mov
pusha
xor
push
jo
mov
test
mov
cmpsl
ss
mov
stos
into
sbb
sbb
mov
test
in
sarl
insb
lahf
ds
mov
fisubrs
movb
call
xlat
ds
ret
jb
daa
sub
cmpsl
mov
lcall
mov
jle
repz
js
xchg
sarb
push
mov
dec
lods
shrl
sub
icebp
out
fistpll
pop
rclb
push
test
in
adc
adc
call
or
and
xchg
and
pop
adc
ljmp
push
pop
ret
rorb
nop
stos
push
mov
lcall
aad
test
rcrl
scas
arpl
lea
outsl
lods
xchg
adc
add
leave
loopne
cmpsl
aaa
lret
outsl
push
ja
xor
add
fidivs
lret
mov
iret
daa
call
mov
mov
sub
imul
inc
pop
push
hlt
pusha
pusha
daa
mov
ret
lret
scas
les
fnsave
aaa
xchg
cmp
aas
imul
nop
pop
pop
dec
shlb
jbe
sub
xor
cmp
sub
fdivrl
test
lahf
sbb
or
test
mov
mov
inc
jae
test
lock
scas
movsb
jp
insl
je
pop
or
mov
enter
inc
sub
jg
movsl
in
les
repnz
adc
addr16
push
inc
inc
clc
cwtl
mov
lds
hlt
add
xchg
shlb
and
and
lahf
jno
aad
cld
mov
dec
mov
xchg
pop
rcl
xor
sbb
jne
sbb
pop
dec
or
clc
subl
jo
rcll
mov
cltd
add
cmp
clc
xor
out
fnstsw
dec
fcoml
shr
jnp
dec
shrl
icebp
push
cmp
fisttpll
je
jle
ret
sti
scas
movsl
and
sub
adc
iret
fbld
mov
sarl
or
sub
mov
sbb
jno
es
pop
mov
aad
sbb
cli
nop
jo,pt
jmp
xor
adc
mov
loopne
bound
in
les
fisubrs
mov
loopne
nop
outsl
adc
inc
jp
mov
push
loope
mov
dec
jmp
jno
ret
lahf
push
jmp
movsl
ja
jbe
cwtl
dec
adc
pusha
int3
cmpsb
ficoms
das
mov
sub
push
in
push
xor
or
in
in
jecxz
in
lahf
fstl
adc
aas
xor
inc
sti
or
fsubp
push
insb
shll
pop
lods
push
adc
shr
mov
filds
inc
sub
jae
sub
cs
jnp
push
mov
or
sub
cmp
pop
adc
sarb
aas
daa
or
shrl
xchg
popl
fnsave
test
sbb
sbb
loop
mov
cmp
js
js
mov
movsl
cmc
inc
sbb
fisubrl
mov
push
imul
cmpsb
xchg
or
xchg
cmp
popl
cmp
mov
mov
adc
add
pop
pop
pusha
cmp
fldenv
cs
sbb
xchg
fs
insl
push
jl
jae
pop
add
mov
lock
idivb
mov
loop
adc
ficoml
cltd
mov
ds
outsl
iret
and
cmpsb
pushf
lods
in
mov
inc
pop
cmp
inc
out
xor
jl
mov
dec
pushf
inc
fiadds
mov
lahf
mov
lea
cli
imul
cltd
pushl
mov
push
dec
lahf
jnp
decl
add
jo
sub
push
dec
ret
dec
out
stos
out
add
loope
or
outsb
ret
int
or
out
push
push
mov
fnsave
arpl
aaa
xor
inc
xor
jmp
xchg
stos
pop
push
outsb
sbb
push
flds
addr16
push
and
out
xchg
mov
fcmovnu
mov
lds
push
imul
or
mov
mov
adc
idivb
sub
push
jne
pop
pop
xor
insb
jo
fstpt
sub
lea
add
sbb
in
jnp
paddusw
xchg
out
jae
dec
lock
or
inc
fisubs
insb
movb
jae
or
sbb
or
pop
movsb
scas
daa
adc
fstpl
sti
dec
movsb
mov
loope
lret
pop
sub
fisubrl
imul
jns
repnz
mov
mov
ret
mov
scas
push
cmp
inc
inc
ljmpw
gs
mov
icebp
sbb
push
lods
mov
jmp
push
push
add
mov
scas
ljmp
jnp
adc
imul
xor
fistpll
gs
clc
jne
pop
shll
lret
sahf
out
jg
lock
arpl
orb
sbb
push
sbb
inc
jge
jae
insb
cld
push
mov
rcl
lea
inc
mov
mov
push
adc
lock
fistpl
push
icebp
add
adc
dec
or
iret
in
xchg
dec
push
xor
stos
lret
scas
les
jb
push
mov
addb
int
repz
shrl
ret
add
adc
mov
test
mov
lds
addb
mov
unpcklps
loope
sahf
leave
jg
xor
push
sub
imul
pop
mov
orl
sti
outsb
xchg
dec
cmp
sub
popa
mov
pop
pop
inc
scas
xchg
cwtl
das
lea
mov
xchg
stc
sbb
shrb
icebp
clc
outsl
jge
sahf
lret
shl
inc
mov
adcb
ret
fnsave
sub
xchg
fists
adc
clc
addr16
pop
add
inc
dec
add
add
jne
add
inc
cli
sahf
cmp
cmpl
xchg
cmp
mov
aam
jb
lods
mov
cmp
and
bound
test
andb
push
mov
dec
repnz
insl
mov
rcrb
push
out
int
and
mov
cs
ret
fcmovu
std
jle
pusha
out
sahf
cmp
xchg
add
addl
fisubs
add
lcall
mov
in
pusha
jecxz
shlb
jb
or
mov
andl
loop
mov
insl
scas
fisubs
int
rcr
pop
pop
pop
daa
movsb
lret
iret
lcall
test
fs
and
xor
and
leave
mov
addr16
mov
imul
pop
cltd
sbb
jb
inc
and
and
repnz
leave
stos
lods
lahf
xchg
lea
or
mov
movsb
aad
out
mov
xor
mov
mov
xchg
loop
and
imul
out
imul
test
cmp
inc
shlb
add
dec
sbb
decb
int3
push
pop
fidivs
insl
mov
mov
insb
mov
mov
ds
fisttps
inc
push
lock
ja
das
mov
lods
pop
inc
push
xchg
cld
es
js
leave
inc
jle
fildll
int3
or
insb
mov
fwait
mov
xchg
in
out
pop
sbb
jl
popf
out
out
sub
sbb
sub
insb
mov
cmpsl
popa
out
das
pop
mov
xchg
pop
xchg
sub
sub
movsl
push
adc
add
lcall
fadd
dec
adc
insl
pop
dec
std
add
inc
call
cmp
lods
iret
int3
adc
mov
insb
jnp
adc
les
or
pop
push
dec
push
insb
mov
xlat
in
les
ljmp
dec
mov
mov
pop
xchg
pop
jmp
rolb
repnz
xor
xchg
jno
stc
arpl
outsb
fisubs
out
dec
mov
stos
sub
mov
imul
fsubrs
xchg
testb
push
outsb
mov
call
cmc
adc
pop
lret
aas
mov
xor
popf
jmp
add
out
movsl
lods
pop
cld
shrb
sbb
xchg
mov
addr16
jo
cwtl
dec
xor
lret
pusha
scas
sub
mov
mov
enter
pop
arpl
inc
ret
jmp
pop
or
sbb
xchg
jb
sbb
iret
es
repnz
dec
test
lock
cmp
test
adc
hlt
dec
push
jl
pop
jle
xor
cmp
dec
mov
xor
aad
cmpsb
jae
call
movsl
jbe
mov
mov
ficompl
adc
mov
cmp
jg
andl
jmp
lcall
and
stc
push
mov
pop
mov
inc
fiadds
stos
imull
xorb
and
rcrl
notl
outsl
jne
fisttps
dec
mov
push
or
mov
cmp
add
in
push
push
pop
dec
and
sub
xchg
es
dec
mov
pop
mov
dec
pop
sub
fidivs
aad
mov
out
mov
push
cmp
fnstcw
mov
dec
sti
mov
xchg
adc
hlt
xor
mov
push
shr
shl
addb
dec
lret
add
loop
jns
rol
pop
enter
or
and
mov
jns
sbb
loop
inc
and
lock
fildll
sub
test
mov
mov
xor
xor
insl
add
adc
jnp
push
nop
mov
in
mov
cmpsl
adc
in
int3
fdivl
mov
sub
lds
mov
div
xchg
mov
stos
movsl
xor
mov
push
cwtl
inc
add
dec
ja
inc
cmp
mov
fsts
inc
jmp
cld
jne
enter
sbb
sub
dec
jb
pop
jne
mov
addr16
pop
bound
xchg
adc
or
lds
arpl
mov
push
xchg
mov
push
xchg
leave
loope
sti
jmp
into
xor
push
and
lea
jl
addr16
push
enter
jecxz
inc
mov
sbb
dec
sbb
pop
out
push
inc
rorb
push
js
ljmp
idiv
xchg
mov
xchg
fcmovu
jp
ds
mov
cld
leave
out
std
fsubl
mov
and
jae
cmpsb
mov
scas
sbb
push
mov
out
inc
xor
imul
outsb
add
pushl
pop
pusha
push
xchg
mov
or
pushf
mov
sub
loope
or
mov
inc
stos
clc
clc
lret
pop
and
lret
test
scas
cmp
or
mov
jmp
pop
push
mov
subl
mov
xchg
xchg
fisubrs
arpl
aas
jb
ror
fldt
int3
fsubr
adc
xor
jbe
mov
push
dec
fsubrs
hlt
lea
cltd
push
ficoms
cmp
loop
cmp
and
into
mov
sbbb
ss
jnp
mov
insl
jle
js
pop
fisttpll
orb
inc
adc
cmpsb
aaa
lods
cmpsl
adc
pop
cmpsb
push
adc
sbb
js
dec
out
aad
in
stos
jb
pushf
repz
and
outsl
mov
dec
push
and
shll
dec
jl
es
int3
and
and
xchg
jb
ja
aad
adcb
sub
and
shrl
shlb
jl
add
stc
lret
push
sbb
pushf
cmc
clc
pop
adc
cmp
cld
scas
mov
fxch
or
ljmp
mov
out
popa
sub
outsb
mov
fcmove
sbb
sbb
js
xchg
lcall
dec
shll
mov
xor
adc
mov
add
popa
xor
daa
stos
aam
mov
push
in
and
mov
pop
lcall
nop
mov
ja
mov
nop
cmp
add
mov
stos
xchg
or
sahf
pop
jae
lock
fcompl
int3
repz
cli
std
push
test
in
fsts
add
icebp
out
mov
sub
lret
aad
jp
mov
add
test
iret
xor
xor
je
inc
jle
into
lret
add
iret
insl
lock
and
mov
dec
jne
ret
mulb
or
mov
mov
pop
jmp
pusha
aam
cmp
fxch
int
inc
faddl
add
add
cmp
aaa
imul
hlt
mov
sub
dec
lret
fwait
imul
cmp
and
shl
mov
sub
adc
dec
outsb
pushf
pop
or
cmp
rorl
add
mov
mov
aaa
adc
fwait
out
and
subb
or
sarl
pop
jnp
push
inc
sti
insb
mov
push
adc
sbbl
hlt
cltd
add
jb
das
inc
mov
sbb
add
pop
xchg
outsl
scas
push
jmp
pusha
xchg
lods
enter
in
shl
sub
xchg
mov
sahf
cwtl
mov
jmp
add
sarb
mov
leave
and
push
push
outsl
sahf
adc
sub
stos
das
mov
inc
arpl
xor
lea
clc
gs
les
xchg
adc
movsl
das
adc
inc
shlb
int
mov
jmp
aam
and
inc
mov
lea
cmpsb
mov
push
mov
xor
fildl
and
out
jecxz
ds
loop
aad
insl
fs
stos
pop
pop
fstpt
fs
rorl
in
out
jae
mov
or
ja
jle
inc
repz
or
cmp
das
mov
xchg
mov
and
mov
scas
test
je
scas
add
or
cmp
push
xlat
mov
push
aam
xor
cmp
enter
mov
or
sbb
movsl
xchg
pop
xor
jb
vfrczps
or
ficompl
dec
call
outsb
mov
push
push
repz
adc
bound
cltd
push
cmp
loope
xchg
push
jno
jo
jmp
outsb
mov
stos
out
mov
loopne
dec
and
subl
fwait
decl
and
pop
inc
into
jns
pop
and
lahf
dec
sbb
std
loop
imul
jne
mov
jno
fstps
mov
mov
test
cmpsl
xchg
js
daa
test
fstl
mulb
dec
dec
pop
push
andb
cltd
xchg
and
xchg
push
xor
mov
cmp
outsb
es
insb
push
addl
sahf
push
lcall
in
mov
fmul
or
cmp
out
ret
sub
into
push
mov
imul
fistpl
xchg
pop
pop
ret
jge
cmpsb
mov
out
add
test
fcom
test
insb
addb
pop
pushf
xchg
sahf
lea
test
insl
push
mov
fisttpll
fstpl
int3
jle
repnz
ljmp
rorl
clc
loopne
and
pop
fwait
or
push
fidivrs
inc
insb
pop
movsb
pusha
adc
icebp
inc
repnz
push
imul
sub
aas
or
lock
dec
mov
shll
adc
pop
addr16
lret
cmp
ljmp
cld
jle
in
cltd
test
jle
jne
dec
or
daa
addr16
lahf
into
dec
imul
dec
push
inc
sub
xchg
add
lock
lahf
test
cmp
fisubrs
mov
rcll
xor
push
das
test
mov
arpl
pop
imul
lock
ret
imul
cltd
mov
sub
movsl
lcall
and
nop
lock
iret
sbb
sahf
cmc
mov
xchg
adc
icebp
or
scas
pop
sbb
cmp
mov
xchg
and
or
dec
inc
and
rclb
ret
fwait
cmpsl
cmp
mov
mov
pusha
and
mov
pop
lods
jbe
cmpsl
mov
call
mov
adc
fs
inc
movsl
jge
shll
mov
xlat
cmpsb
push
test
mov
in
jne
fstl
mov
cltd
push
jb
movsl
incl
inc
push
inc
or
mov
in
lcall
xlat
or
shl
push
filds
xchg
cmc
enter
xor
movsl
test
pop
mov
jo
or
shl
jge
or
adc
adc
xor
roll
mov
inc
xchg
mov
sub
mov
cld
dec
fs
in
shll
fld
dec
imul
pusha
test
xor
jo
loopne
es
inc
loope
lcall
mov
popf
scas
pop
divb
push
xchg
dec
test
sub
cmp
cmp
mov
dec
fisttpll
lcall
lods
add
jmp
sbb
in
push
sub
mov
xor
inc
and
ja
lret
inc
das
adc
mov
mov
int3
enter
sbb
js
movsb
or
test
fidivrs
fsubl
ja
inc
out
push
loope
pop
into
arpl
mov
int
jp
push
sub
pop
shrl
jne
mov
aam
or
out
es
bound
adc
mov
ljmp
loope
std
out
loope
cmovs
adc
rolb
and
jb
in
or
test
mov
adc
jecxz
out
sahf
jb
inc
jle
out
cwtl
xchg
imulb
pop
adcb
xchg
xchg
push
iret
movsl
and
rcrl
inc
in
mov
ret
test
and
sbb
jae
mov
push
push
add
xchg
add
jmp
inc
and
and
sbb
mov
jmp
adc
lods
push
pusha
lcall
subl
shl
out
call
mov
sub
sub
adc
adc
leave
lods
test
adc
inc
insl
lret
inc
sahf
and
hlt
mov
dec
mov
cli
repz
mov
mov
call
mov
mov
nop
sbb
jb
je
int
fidivrl
psubusw
inc
jl
dec
adc
pop
ficoml
xchg
or
scas
cmpl
inc
mov
testl
arpl
testl
sbb
mov
aas
cmp
mov
sub
and
fildl
push
cmp
scas
bound
fadd
adc
int
lret
push
test
and
sub
cmpsb
sub
and
jg
jge
mov
xor
repnz
ljmp
jno
es
mov
sbbb
ja
inc
pop
scas
inc
push
add
scas
xor
loopne
xor
addr16
jne
cmc
add
sub
hlt
mov
mov
stc
lret
nop
jae
adc
sub
or
cmp
xchg
fnsave
pop
pop
jg
push
mov
xor
pop
stos
iret
stc
dec
rorb
add
fwait
jo
aam
int
push
test
jne
cmpsb
mov
xlat
mov
hlt
fs
fsub
xor
popa
push
push
in
nop
decl
add
add
sub
push
push
testl
ret
js
push
and
rcll
fidivs
mov
nop
mov
xor
rcl
push
pop
scas
sbb
mov
dec
xchg
outsb
insl
xchg
clc
xchg
xchg
stos
dec
and
or
lret
inc
hlt
sub
push
push
mov
outsl
cmp
idivb
inc
xchg
test
ljmp
xchg
mov
pop
das
jmp
nop
mov
ja
clc
xor
scas
cmp
push
inc
fwait
jb
inc
adc
pop
incb
mov
xor
aas
roll
loope
xchg
lods
idiv
arpl
mov
and
out
xlat
repnz
xor
lods
fimuls
stos
fmulp
sahf
or
scas
mov
test
cmc
movsb
out
lahf
jno
cmpsl
aad
push
jne
lods
and
mov
or
adc
aaa
addr16
lcall
or
jecxz
imul
je
xchg
push
loopw
push
adc
push
pop
mov
int3
enter
add
testl
or
sbb
sahf
or
inc
outsl
dec
aad
mov
repnz
xor
shll
ds
mov
ret
test
imulb
shufps
in
popa
push
mov
test
cmp
xchg
mov
add
int
dec
sahf
hlt
je
ret
pop
and
repz
dec
loop
adc
pop
int
imul
loopne
hlt
cmp
bound
out
inc
sahf
cld
or
sub
mov
inc
jne
fcompl
xchg
in
mulb
daa
mov
cmp
mov
mov
mov
xchg
int3
mov
iret
aas
ss
addr16
movsl
push
adc
mov
push
int3
xchg
mov
lods
pop
jae
enter
sub
add
cmp
sarb
lea
or
add
out
pop
cli
and
add
or
loop
pushf
loop
or
rcrb
aad
or
mov
aad
mov
adc
sbb
mov
xchg
sarb
stos
dec
and
pop
mulb
outsl
cmpsl
mov
mov
rclb
inc
scas
jns
cmp
cmp
es
rcrl
inc
das
outsb
aaa
xchg
mov
aaa
lsl
mov
into
xchg
ret
shrl
mov
cmpsb
mov
jbe
test
imul
push
and
js
xchg
add
xor
negb
xchg
pop
jmp
popa
adcl
push
mov
popa
sbb
ss
pop
sbb
in
inc
mov
popa
xchg
ss
mov
add
pop
cmp
dec
add
cmc
mov
lods
sti
hlt
faddl
dec
fstpl
insl
adc
jg
clc
adc
push
add
icebp
fs
mov
lods
or
xor
repnz
dec
je
ja
notb
or
movzwl
loop
cli
sti
repz
and
imul
push
jge
add
imul
push
dec
imul
mov
add
arpl
adc
out
lods
fwait
push
das
test
adc
or
fs
in
dec
push
push
push
jne
mov
into
notb
jbe
adc
dec
xchg
xchg
rolb
sahf
xor
cli
mov
jne
push
ficompl
cmp
cld
and
loope
push
mov
or
mov
std
mov
mov
js
pop
shlb
cltd
aas
dec
cmpsl
cmc
add
addr16
and
add
mov
clc
icebp
lcall
es
cmc
and
xor
sbb
cwtl
mov
jns
inc
dec
add
mov
jg
jno
rcr
push
jno
cmp
lcall
mov
insl
cs
fwait
pop
mov
inc
push
shlb
sub
cs
push
fstps
stc
mov
dec
pop
pop
lds
or
xor
scas
lods
loop
dec
push
test
insb
mov
jne
or
pop
add
out
call
or
cmp
inc
adcl
je
cmp
pop
xor
dec
lods
lods
stc
lret
and
inc
sub
aas
pop
push
lds
sub
sti
imul
test
clc
xor
lock
and
mov
mov
sub
sub
sbb
jl
incl
mov
in
jb
sub
xchg
xchg
loopne
in
pop
popl
enter
push
pop
xchg
loope
inc
pop
jns
adc
xor
jg
dec
cmp
mov
rcl
sbb
in
and
mov
cmp
pop
and
mov
sbb
in
mov
pushf
adcb
insl
jge
sub
lds
jo
xor
ljmp
inc
pop
int3
sub
lcall
testl
jne
xchg
rcll
sarl
insb
xchg
and
out
sbb
bound
mov
iret
shlb
ljmp
xchg
add
jp
mov
aad
jno
push
test
push
int3
pop
loop
sbb
aad
jmp
sub
inc
fs
idivb
int
xchg
ret
and
push
shlb
insb
push
cmp
lcall
push
xor
jge
popf
testl
cmpsl
into
sbb
loop
jge
pushf
stos
sarl
repz
sub
popa
cmp
xor
jo
aad
mov
aas
sub
dec
sarb
imul
mov
daa
sbb
fimull
push
ret
lea
mov
imul
adc
jno
into
and
pop
out
inc
outsb
lcall
and
and
outsb
push
inc
inc
add
xchg
jns
push
out
mov
shr
pop
xor
xchg
test
xor
mov
jp
pop
xlat
adc
sbb
pop
add
adc
gs
movsb
jnp
subl
je
sub
imull
jmp
cltd
lret
int3
in
adc
ss
das
pop
dec
or
es
push
mov
cmpsb
nop
pop
or
jp
minps
push
xlat
push
jmp
stos
fldcw
xchg
lock
mov
jnp
xor
loope
lret
int3
push
leave
cmp
sub
mov
hlt
jnp
adc
adc
lret
mov
cld
inc
outsb
sti
dec
sbb
mull
mov
xchg
pop
enter
je
push
jnp
sub
aad
fnstcw
cmp
pop
pop
hlt
bound
imul
jle
in
insl
jge
fs
or
clc
cmp
mov
push
sub
out
pushf
ret
int
sub
dec
js
xlat
jno
and
adc
cwtl
mov
test
fst
pop
ret
push
and
or
mov
into
jnp
fsubrl
adc
lds
int3
fdivs
sbb
in
jge
mov
push
nop
jno
lods
push
daa
push
mov
and
scas
loope
scas
push
inc
jno
int
loope
fdivp
stc
ficoml
adc
cmp
or
pusha
shrl
test
cli
cmpsb
out
xlat
fst
mov
or
xchg
jge
outsb
sarl
xlat
fucomi
sub
mov
or
sub
jae
out
mov
adc
in
adc
icebp
mov
pop
movsb
mov
das
cmpsb
sbb
jg
xchg
push
popa
mov
lcall
cmpsl
fstps
in
dec
mov
fimull
sarl
jecxz
in
cld
aam
jge
push
test
repnz
out
jecxz
sub
cli
mov
pusha
sub
test
decb
sbb
test
in
inc
mov
cmpsb
or
mov
add
mov
dec
mov
sub
sbb
add
jns
outsl
jns
xor
lret
xor
rorl
dec
and
sub
push
notl
out
jno
xor
int
pop
insl
arpl
sahf
inc
nop
and
push
outsl
sbb
int
adc
loope
lahf
cmp
imulb
scas
subb
in
mov
jmp
inc
xor
pop
or
mov
jl
into
add
adc
dec
popf
repz
fistl
scas
and
call
cld
xor
int
mov
sub
dec
cmp
sub
mov
mov
mov
mov
js
sahf
mov
add
sub
push
int
dec
in
pop
xor
jmp
lret
mov
push
nop
loope
rorl
mov
adc
icebp
or
lret
mov
jnp
vmovq
xchg
adc
xchg
loopne
inc
pop
lds
mov
int3
inc
xchg
dec
mov
les
push
pop
adc
jo
add
jnp
rcr
das
lcall
sti
adc
xor
out
pop
arpl
jne
hlt
pop
nop
pextrw
xor
lods
mov
jg
inc
imul
cmp
pushl
ljmp
loope
ljmp
add
xchg
nop
push
gs
sbbb
add
int3
pop
ret
pop
or
bound
or
loop
or
jae
in
and
adc
adcl
lds
addr16
push
push
stos
cmpsb
lret
adc
cs
int3
pop
mov
or
xor
lahf
loop
mov
loopne
sti
fnsave
fldl
insl
sarl
mov
int
js
int3
adc
jno
push
cwtl
jg
aam
sub
cltd
cmp
int
add
out
movsl
sarb
andb
pop
or
stos
sti
mov
test
pop
in
fwait
jns
loope
rol
jno
jg
icebp
mov
mov
shll
lea
lahf
add
xchg
ret
sti
cwtl
stc
jno
adc
push
push
pop
sub
jbe
and
sub
jle
mov
pop
rcrl
push
inc
mov
out
sarl
movsb
push
cmp
cltd
data16
aas
mov
push
mov
scas
aad
in
pop
lods
cltd
pop
out
add
repnz
lcall
es
jg
xor
int
mov
add
ljmp
jp
push
mov
sbb
dec
pop
pop
icebp
add
fs
jecxz
lock
dec
insl
xchg
in
mov
mov
adc
fisttpl
jle
add
test
sti
push
test
cmp
es
mov
pop
cli
jnp
sub
dec
pusha
je
rcr
sub
adc
adc
sub
xchg
lds
push
in
mov
das
pop
das
rolb
pop
inc
cmp
pusha
testb
cmp
in
lret
ljmp
stos
pop
push
sarl
lcall
xchg
dec
and
sbb
push
stos
and
cmpsb
movb
incl
aaa
mov
sbb
lret
adc
xchg
sbb
cmpsb
call
std
push
dec
leave
rorb
cltd
mov
out
mov
inc
add
fs
jnp
sub
leave
hlt
cmpsl
cmp
ret
addr16
cmp
or
push
insb
fnsave
pop
xchg
lret
mov
test
fisttps
jl
cmpsl
dec
push
repnz
repz
push
cs
sub
imul
pop
and
pop
sbb
std
mov
dec
cmp
lret
aas
nop
inc
inc
fisttpll
ret
sbb
jmp
insl
mov
sub
mov
rcl
fsubl
add
mov
mov
mov
lret
mov
repz
or
repz
pop
sbb
push
bound
or
and
aad
jmp
movsl
loope
scas
inc
cmp
or
popf
add
mov
cltd
inc
mov
jp
movsb
lcall
xchg
xlat
imul
andl
ljmpw
mov
xor
xor
fnsave
arpl
aas
decb
push
repnz
lds
dec
icebp
int
test
ret
and
xor
inc
push
push
mov
jns
sub
pop
and
fimull
scas
test
int3
daa
jecxz
data16
push
sbb
xor
fwait
imul
loope
ret
pop
mov
jg
fisttps
test
lods
popf
lods
leave
ret
lea
xlat
inc
ds
loope
fdivs
rorb
dec
test
mov
jae
jns
sub
out
icebp
cltd
lahf
mov
and
push
lcall
out
or
push
mov
fdivs
int
subl
add
orb
add
mov
mov
or
lea
xchg
xchg
push
loope
in
sbb
cld
xchg
lods
shll
mov
shrb
repnz
adc
mov
mov
addr16
stos
fmull
les
in
lds
mov
stos
movsl
incl
jae
nop
daa
mov
ret
sbbl
dec
fcompl
adcb
std
leave
or
mov
pushf
mov
aas
sub
push
clc
lret
lcall
xor
sub
dec
sahf
lcall
pop
or
mov
popa
mov
or
je
dec
rcrb
xor
arpl
mov
sti
push
movsl
cmp
mov
scas
push
stos
lods
cli
mov
jecxz
mov
inc
mov
add
sub
jecxz
pop
out
ret
cmp
push
cmp
out
es
in
lea
pop
rorb
rcll
testb
pusha
jno
inc
addr16
leave
stos
push
dec
aas
enter
mov
xor
mov
dec
out
leave
and
gs
xchg
dec
stos
data16
aad
insb
std
pop
das
lret
or
xchg
jo
test
fstps
sbb
xchg
mov
mov
scas
lock
iret
add
in
or
loopne
test
cmp
frstor
insl
ss
jl
add
and
mov
movsb
inc
outsl
cmp
int3
push
cltd
nop
lock
inc
add
pop
pop
or
adc
push
xchg
cmp
je
fst
lcall
les
sub
mov
pop
mov
test
mov
sbb
inc
mov
jo
int
add
out
insb
sahf
jge
adc
mov
and
jmp
inc
aad
mov
std
aad
mov
aad
mov
sbb
testb
std
fnstenv
outsb
test
shrb
mov
or
or
loopne
dec
addb
xchg
jnp
jae
rol
dec
adc
cli
or
adcl
fcompl
test
and
xlat
mulb
jecxz
dec
fsubrl
and
outsb
sub
insl
pop
or
jo
pop
push
sarb
bound
lea
pop
adc
daa
and
cli
xchg
ficoms
cmp
add
inc
xchg
mov
inc
fdivl
test
cs
or
je
inc
jnp
bound
cmp
lret
fidivrs
loop
jnp
or
fistpll
mov
aas
xor
mov
xchg
loop
add
xchg
bound
dec
iret
shrb
pop
sub
add
add
movsb
push
pop
jmp
xchg
mov
fcompl
fwait
imul
push
push
addr16
pop
inc
pusha
xor
rorb
pop
mov
rol
mov
mov
and
sub
push
scas
rcrb
cmpsl
pop
rcrl
adc
sub
sbb
xchg
ficompl
xchg
ja
cltd
cmc
jns
movsb
jmp
sub
in
jbe
push
loop
dec
add
lds
mov
sbb
mov
push
push
test
mov
xchg
aas
icebp
loope
jbe
std
add
loope
movsl
incl
sbb
hlt
jmp
sti
jae
sahf
cmp
push
or
outsl
sub
jb
sbb
add
pop
pop
cmp
pushf
sbb
fdivrl
std
pop
pop
lock
and
pop
push
cmp
cmp
rolb
sbb
pop
pop
push
lret
xor
leave
dec
jecxz
das
je
push
outsb
int3
sub
lret
push
add
add
stos
add
or
mov
pop
movsl
push
mov
xor
lock
mov
cli
mov
int
or
jp
sub
xchg
cmp
enter
ljmp
jmp
loope
pop
int
lds
fwait
sarb
add
and
fidivs
inc
jecxz
mov
sahf
mov
sbb
roll
adc
dec
jne
cmp
jmp
mov
xchg
movsl
iret
std
hlt
scas
mov
popf
cmpsb
sti
scas
or
movsl
or
test
fcomps
dec
ret
mov
add
and
neg
test
sarl
dec
xlat
add
in
inc
xchg
dec
sti
mov
fcompl
daa
mov
pop
mov
movsl
test
mov
lret
repnz
jns
add
sub
cwtl
pushf
cmp
or
inc
xchg
scas
mov
xor
fs
and
call
push
jmp
sahf
xor
mov
stc
xor
inc
test
repz
jp
dec
mov
ljmp
je
pop
pop
faddl
rcrb
mov
adc
mov
ja
xor
sub
sub
push
jne
pop
push
inc
cli
scas
cltd
jmp
sub
pop
imul
mov
adc
loope
lea
push
js
jb
cmpsl
mov
ja
dec
negb
clc
aam
jns
xchg
sub
stos
push
stc
sbb
cld
xor
mov
scas
es
pop
ss
in
add
in
insb
jae
adc
or
add
loope
and
flds
in
push
mov
daa
lret
rorl
jecxz
xchg
sub
xor
xor
mov
cmp
cmp
lret
outsb
sub
push
pop
push
lcall
ds
bswap
rol
add
ss
mov
test
daa
and
loope
icebp
jnp
xor
divb
mov
xor
mov
decl
cmp
int3
cmp
jecxz
sti
sqrtps
or
xchg
jl
xor
call
cmp
adc
icebp
jne
in
pop
fsubs
stos
jmp
fsubl
mov
pop
je
jge
push
incl
mov
pop
outsb
nop
repz
ds
adc
add
push
les
jo
aam
add
push
mov
jo
xor
call
movsb
xchg
insl
jle
repnz
mov
inc
clc
pop
mov
mull
dec
repnz
and
cltd
iret
into
jbe
rcrl
stc
loop
cmpsb
or
push
jae
test
inc
out
mov
mov
cltd
scas
fnsave
movl
dec
pop
mov
call
lods
xor
iret
and
inc
out
pop
jnp
xchg
lret
in
inc
xchg
mov
mov
sbb
insb
cld
fisubrl
imul
jp
lahf
aaa
xchg
xrelease
imul
pop
mov
cmp
xchg
jp
xchg
jo
lock
xchg
mov
push
enter
js
clc
cmc
in
movsl
add
sti
cltd
jnp
sbb
popf
stos
add
adc
test
cmc
icebp
les
inc
daa
adc
movsl
sub
mov
add
outsb
sbb
sbb
mov
jno
xorl
and
stos
stos
push
pusha
mov
push
xchg
or
push
loope
cmp
into
pop
adc
add
fbld
sbb
pop
lock
jae
xor
or
push
sub
mov
iret
or
xor
nop
ret
scas
jmp
adc
jbe
jg
jae
and
ret
loope
aam
cltd
mov
cmp
xlat
cld
int
pop
fidivs
mov
dec
adc
mov
aaa
lods
std
mov
mov
mov
cmp
fsubp
es
adcb
pop
lods
mov
iret
pop
jns
and
rclb
mov
leave
aam
fcomip
push
pop
mov
and
push
pop
fs
xchg
mov
clc
fnstsw
leave
or
popf
dec
and
jge
test
je
leave
cmp
mov
outsb
dec
ss
or
ja
lock
pop
jg
sub
inc
ret
mov
lea
xor
add
imul
aad
jns
ljmp
xchg
and
sub
jge
push
fcomps
pop
mov
js
cmc
in
outsl
sbb
fwait
mov
lcall
mov
push
mulb
dec
test
cmp
or
fistpl
fidivs
pop
les
loope
in
adc
pop
hlt
std
ficoms
clc
je
dec
pop
addr16
js
inc
and
cs
push
imul
addr16
out
cmp
mov
cli
cmp
add
cmp
sbb
jl
neg
es
mov
test
in
add
aas
insl
mov
ss
lea
push
cltd
add
inc
cmpsb
sbb
icebp
or
outsl
pop
cs
out
loop
cs
in
shll
xchg
shl
dec
cmp
test
addl
push
loope
xor
jne
pop
int3
xchg
lods
movsl
xchg
mov
push
pop
xchg
repz
jnp
cmp
movlps
pop
insl
imul
mov
mov
jmp
push
mov
mov
mov
mov
mov
test
popa
push
push
pop
fldt
pop
dec
ljmp
test
rep
dec
push
add
iret
jne
xor
ret
xchg
cmc
pop
jb
aaa
aas
sar
hlt
cmc
jle
adc
and
jb
push
jne
jne
mov
jnp
stos
iret
lods
and
dec
push
mov
ret
fmuls
cmp
adc
pushf
stos
push
xchg
push
aaa
dec
popa
push
cltd
dec
or
jns
fwait
lahf
push
lret
pop
fcoms
leave
sub
push
jecxz
cmp
aam
pop
pop
in
sub
je
or
lea
push
cld
ss
jnp
fcmovnbe
jbe
mov
clc
dec
xor
aad
jp
out
cltd
dec
testl
outsb
fst
test
or
inc
movswl
push
mov
sbb
xor
mov
pop
pop
std
ret
lcall
shll
test
pop
mov
xor
cmpsb
cmc
aam
daa
sar
jg
in
rol
pop
out
lcall
add
sbb
mov
xor
or
aas
test
shrb
in
es
xchg
out
stc
mov
mov
xchg
aad
subl
mov
lret
add
mov
leave
sbb
mov
or
mov
jae
pop
aam
mov
rcll
sub
cld
cli
and
inc
pop
and
push
daa
js
cmpsb
fstl
jbe
jmp
or
mov
ljmp
or
mov
pop
adc
fnsave
xchg
decl
mov
loop
pop
orl
inc
jne
cld
icebp
addr16
imul
pop
sbb
scas
jae
jmp
dec
jno
pop
rorl
lods
cwtl
sbb
lods
lock
std
and
add
lret
mov
test
and
imul
add
adc
hlt
cmp
or
lock
push
lock
dec
lock
and
sub
mov
xor
jnp
mov
mov
cmpsl
pop
xchg
push
dec
xchg
xor
or
pop
xor
sahf
inc
dec
sti
fldcw
mov
stos
or
cmp
pop
jle
sub
xchg
mov
pop
daa
push
mov
sbb
mov
pop
les
pop
jp
imul
lock
push
daa
push
daa
ljmp
sti
inc
mov
inc
xchg
sub
fcompl
mov
sbb
cmpsb
push
cmp
pop
jb
mov
or
sub
test
sub
or
dec
or
test
cs
std
xor
mov
sub
add
imul
aam
pop
and
shll
push
mov
rorb
popf
lds
or
add
mov
lcall
stos
push
ret
fiaddl
gs
in
repnz
push
adc
int3
sti
cmp
xor
mov
ja
jp
rorb
fmull
jae
ljmp
jae
cmp
mov
in
mov
dec
nop
outsb
lcall
fwait
mov
dec
push
dec
dec
dec
cmc
movsb
mov
inc
cltd
scas
mov
pushfw
push
leave
or
lds
mov
jmp
aas
cmp
sbb
adc
repz
inc
add
mov
mov
xchg
ss
roll
aaa
jle
hlt
cmc
sahf
lds
add
ret
bnd
icebp
outsl
cmpsl
push
aaa
push
cmp
adc
sub
jns
xchg
push
fisubl
sbb
test
cli
dec
lods
sti
loope
clc
rorl
jge
mov
inc
dec
cmpsb
out
mov
cmp
pop
xchg
mov
sub
shrb
push
dec
push
mov
mov
scas
inc
fisttpl
fwait
sub
scas
rcrb
push
inc
adc
pop
test
push
jns
xorb
cs
jne
aas
cmpsb
xor
cmp
inc
xchg
jmp
hlt
pop
xchg
hlt
mov
loop
stc
daa
bound
cmp
incb
or
push
fs
mov
pop
xchg
or
and
int
mov
mov
or
int3
aas
outsb
or
and
dec
jmp
fsubr
test
andl
mov
scas
into
dec
jnp
ljmp
loop
sbbb
add
enter
cmpsl
push
add
loope
push
pop
dec
inc
outsb
and
mov
lcall
inc
mov
cmpsb
imul
xchg
sahf
dec
das
inc
stc
sbb
xchg
push
insl
lret
iret
and
sub
leave
inc
iret
push
add
shl
jp
mov
sub
xlat
pop
out
push
push
pop
jp
xor
xor
lock
aam
jo
popf
addb
cmp
test
aas
cmp
push
js
or
jl
and
mov
nop
repnz
xchg
jecxz
pop
adc
add
js
jecxz
loope
movsb
testb
es
vucomiss
inc
arpl
sub
scas
push
pop
mov
cli
shll
in
das
fwait
stos
inc
iret
add
jecxz
mov
and
bound
jp
inc
enter
loope
dec
cmp
jno
and
jmp
leave
jbe
xor
xchg
lret
push
out
mov
ret
ficomps
dec
loop
dec
add
mov
dec
mov
xor
push
dec
jnp
scas
aam
mov
jbe
in
push
je
test
lds
repz
fwait
dec
push
push
int
mov
std
dec
mov
movb
pop
lds
cmp
inc
scas
in
ficompl
test
inc
mov
mov
jbe
cmc
es
push
lods
aas
jne
push
mov
lret
sub
or
inc
or
sbb
leave
cwtl
adc
adc
cmpsl
mov
add
mov
cwtl
repz
cmp
js
ljmp
push
pop
sub
movsb
out
test
out
movsb
dec
mov
sub
repnz
insl
or
or
popa
inc
in
cmp
add
push
pop
or
pop
sub
imul
add
jbe
leave
icebp
jmp
stos
enter
xchg
roll
shll
mov
xchg
push
ljmp
xor
sub
xor
push
enter
popa
imul
into
cmpsl
jg
mov
or
pop
cld
loope
rcl
out
out
cltd
stc
cmp
cmc
cmc
ja
xlat
push
inc
sbb
call
add
or
cmp
xchg
lods
dec
xor
inc
sbb
rorb
cs
fs
mov
fimull
loop
not
outsl
or
or
or
dec
sarb
popf
in
int
jae
outsl
lret
xor
cmc
xchg
pusha
stos
xor
popf
ficompl
test
mov
arpl
mov
dec
add
jb
sarb
push
mov
mov
dec
push
adc
and
inc
scas
mov
add
mov
pop
fcoms
cmovge
jecxz
scas
nop
add
mov
lcall
into
mov
ljmp
sbb
inc
pop
add
cmpsl
lds
jb
test
fnstsw
and
insl
rcrb
mov
jo
pop
sub
mov
pop
lock
cmp
jbe
adc
dec
mov
cmpsb
adc
push
cmp
outsb
je
xchg
xchg
je
test
mov
adc
inc
push
or
data16
stos
and
aaa
push
or
into
mov
sbb
sub
aas
pop
jne
xchg
xchg
xchg
popf
xor
rcrb
data16
sub
lods
jp
push
bound
mov
andb
pop
loope
pop
lds
jb
cmp
xchg
rol
mov
inc
or
int
fsubs
movsl
shll
sbb
inc
outsl
out
mov
and
lods
das
xor
xor
jmp
dec
mov
pushf
loope
push
jbe
pop
movsb
imul
mov
cmp
in
xor
fnstenv
fistl
lret
add
sbb
in
push
test
hlt
push
mov
ljmp
shlb
aad
arpl
outsl
xchg
in
mov
stc
mov
out
cmpsb
add
fnstenv
add
mov
ljmp
xchg
orb
clc
push
pop
dec
rcrl
xchg
cltd
cld
add
insb
cli
sbb
imulb
mov
popa
std
mov
inc
mov
and
in
cmp
push
scas
jmp
bound
ja
jecxz
jle
mov
mov
outsl
mov
jae
test
push
push
xchg
inc
inc
adc
push
dec
lea
sbb
inc
clc
into
fwait
es
adc
cltd
mov
adc
add
sub
jmp
data16
lea
mov
cmp
inc
mov
insb
ret
cld
mov
cmp
mov
mov
fsubrl
not
imul
pop
jle
fcomps
repnz
sbb
xchg
ret
push
add
jno
inc
lea
pop
lds
mov
and
inc
pop
adc
and
cld
loop
sbb
mov
in
pop
mov
int
lods
cld
adc
mov
sub
cmp
xchg
and
insl
sub
outsb
leave
into
xchg
mov
mov
pop
jnp
xor
imul
inc
pushf
adc
and
test
fists
cmp
ss
adcb
lock
xchg
cmpb
xchg
cmp
inc
inc
jne
dec
xor
push
orb
sub
je
xchg
lods
mov
js
arpl
and
shl
push
push
sbb
lods
ja
stos
pushf
mov
dec
lret
out
sti
cmc
test
xchg
xor
rcl
dec
ficomps
aaa
sub
cmp
lahf
or
iret
mov
bound
cmpsl
adc
add
jae
lds
aaa
aad
xchg
jl
adc
xor
loope
pop
sub
cltd
addr16
outsb
fsubs
pusha
push
daa
mov
or
mov
mov
jecxz
shlb
cmpsb
lret
cli
fsts
jns
xor
inc
cmp
cltd
xor
xor
cld
les
test
push
hlt
dec
jg
push
pop
adc
sub
dec
push
push
movl
fcoml
pop
mulb
in
or
cli
push
or
repnz
sub
enter
gs
les
out
int
pop
nop
cmp
sbb
pushf
pusha
dec
es
aas
cmp
xor
sahf
cmp
pushf
out
cmc
jmp
add
leave
fsubrs
cmpsb
sar
push
push
std
mov
out
fmul
in
fwait
xor
push
outsl
add
hlt
in
add
xor
mov
jne
rorb
ficoml
arpl
int3
pop
cmc
loope
insl
ja
or
cltd
test
xor
cmpsb
push
xor
cld
cli
arpl
mov
nop
xchg
bound
mov
hlt
push
pop
mov
out
loopne
psrad
adc
add
inc
add
pop
sub
cld
lock
or
inc
cmp
lret
pushf
sub
test
mov
and
clc
mov
jne
and
insb
sbb
lds
in
aad
std
ja
dec
push
and
mov
cmc
add
lods
push
dec
cltd
fcompl
inc
repz
mov
lcall
xor
daa
movsb
nop
and
ret
clc
test
jle
les
push
in
in
mov
adc
mov
push
fcom
mov
lahf
sar
push
rcl
or
inc
xchg
pushf
pushf
jno
sahf
dec
enter
sub
rcl
ss
and
mov
imul
daa
push
fs
jg
push
dec
xchg
cld
and
jmp
ret
sbb
xchg
cwtl
daa
ds
into
pop
push
fsubrs
test
andl
mov
imul
addr16
shlb
outsl
imul
js
aaa
pop
pusha
mov
sbb
and
inc
mov
mov
pop
dec
sbb
int3
cwtl
cmp
push
and
loope
rcr
testl
pusha
test
mov
jbe
xor
sahf
sbb
mov
lods
movsl
nop
pop
hlt
dec
aaa
or
inc
or
xor
dec
add
outsl
mov
cmp
jmp
push
adc
sub
or
ljmp
sbb
fstpl
stos
pop
mov
cld
xor
sbb
int3
in
jle
mov
repz
stos
cmp
shr
clc
int
mov
in
enter
mov
test
test
add
cmp
pop
insb
mov
xchg
fstpl
xor
adc
cmc
movsl
out
and
fnstsw
pusha
sub
and
dec
xchg
imul
aas
xor
inc
pushf
ja
sub
out
fisttpl
ds
test
sahf
lret
test
popa
adc
jge
mov
add
sti
cltd
mov
cmp
fsubr
divl
insb
jl
xor
pop
jno
fnstsw
sbb
pop
mov
outsb
fadd
sbb
xchg
jl
subb
and
adc
cwtl
inc
in
iret
imul
rcrb
stos
arpl
in
sti
icebp
fcoml
aam
daa
outsl
ret
out
test
movsb
not
icebp
dec
push
mulb
pop
mov
and
ljmp
push
cmp
mov
mov
mov
roll
ss
arpl
mov
jno
jnp
ficoms
in
add
lock
out
xchg
pop
mov
jno
repz
sbb
notl
dec
add
jnp
push
js
gs
cmp
push
scas
stos
lods
lds
imul
add
enter
xchg
xor
inc
js
sahf
loop
int
pop
mov
loop
dec
aaa
insb
ljmp
mov
jg
cmpl
shrb
pop
and
rcrl
jecxz
mov
inc
shlb
fimuls
aas
ret
imul
mov
sub
sub
jle
sub
sub
movsb
dec
mov
and
outsl
push
mov
inc
sub
add
hlt
popa
pop
mov
or
sub
dec
mov
cmp
scas
rolb
scas
inc
jo
add
lret
inc
pop
pop
lret
aam
lods
int3
les
fwait
xor
gs
adc
pop
push
popa
fimull
call
pop
xchg
xchg
sub
jne
jge
mov
ljmp
xchg
jp
push
jne
js
mov
mov
mov
arpl
cltd
outsl
push
pop
adc
in
cld
xchg
repz
xchg
or
cmpsb
std
aaa
jl
loope
inc
sbb
jecxz
xchg
mov
gs
bound
fwait
mov
push
fadds
popf
roll
xor
sti
mov
push
mov
adc
xor
enter
fstl
or
or
repnz
in
stos
mov
xlat
pop
ror
repnz
add
fistpl
mov
dec
sub
jae
inc
pop
scas
addr16
xor
adc
jle
jae
sub
cltd
xor
adc
outsb
stc
nop
in
mov
shlb
mov
xor
sub
sub
mov
mov
xchg
in
inc
js
sbbl
fwait
js
cmp
cmp
sti
jmp
popf
mov
inc
xor
inc
movsl
sahf
dec
push
stos
xor
ficoms
aad
in
cwtl
adc
pop
xchg
lea
dec
push
push
mov
dec
push
pop
ret
movswl
xchg
inc
xchg
inc
int
in
in
aaa
int3
and
loopne
rorl
mov
adc
sbbb
scas
mov
add
push
fcoms
dec
mov
insl
and
mov
popf
add
push
orb
loop
mulb
and
movsb
scas
pop
mov
xor
fnstsw
or
cmc
hlt
inc
lcall
cmp
je
lods
inc
stc
dec
xor
cmpsl
cmp
dec
pusha
jecxz
std
dec
fwait
jg
pushf
sub
jmp
pop
imul
in
insb
mov
pop
inc
mov
movsl
ret
stos
popa
outsl
sahf
test
out
sub
push
ja
in
cltd
fcmovbe
jp
cmpsb
outsl
call
rclb
out
jns
push
jmp
or
dec
int
js
sbb
outsb
lret
dec
notl
in
addr16
sub
shll
push
adc
into
mov
mov
stos
ds
je
out
insb
sbb
ja
pop
pop
mov
dec
inc
jg
adc
sbb
cmc
adc
and
sub
cltd
inc
aam
xchg
lret
mov
iret
sbb
iret
sbb
cmp
dec
das
adc
jo
push
and
push
xchg
out
add
les
int3
fisubs
rcll
xchg
rclb
fisubl
test
popf
cltd
pushf
or
fdiv
push
push
pop
nop
xchg
add
sub
loope
inc
sbb
stos
ljmp
jae
lods
lret
lock
jnp
int3
scas
popa
fimuls
enter
je
mov
xchg
js
add
fwait
decl
jl
dec
fwait
push
lock
mov
adcl
pusha
in
call
and
xor
sbb
inc
test
sbb
and
stos
dec
xchg
rorl
ja
lcallw
pop
shlb
repnz
pop
xor
pop
out
mov
inc
aas
lock
inc
sub
in
mov
sahf
xor
lret
lods
lods
stos
lods
es
out
les
pop
mov
lods
jmp
sbb
sbbb
sub
add
shl
std
sub
je,pt
arpl
daa
cmp
ret
fwait
cmc
or
test
inc
mov
push
mov
pushf
nop
sbb
jnp
dec
das
jle
mov
out
push
lea
mov
mull
cmc
push
sbb
fbld
inc
bound
and
adc
into
xor
cmpsl
pop
repz
imulb
cltd
cs
xchg
cwtl
mov
and
nop
pop
js
mov
in
in
push
out
lock
cli
insl
jno
adc
jno
xor
mov
cmc
xor
mov
outsl
pusha
in
fidivs
xor
push
cli
test
je
jmp
repnz
cwtl
hlt
mov
xchg
pusha
ljmp
jge
insl
stc
scas
leave
nop
rcl
mov
sbb
mov
inc
jcxz
insl
pop
lods
and
in
jle
pop
xchg
push
popa
cmp
fs
dec
sub
out
dec
ficomps
and
jno
imul
shll
mov
scas
dec
hlt
incl
push
adc
jecxz
xor
insl
cmp
adc
xlat
xchg
adc
jno
inc
adc
jecxz
movsb
lock
sub
sbb
add
xchg
movsl
or
movsb
addr16
aam
mov
mov
push
inc
mov
stos
mov
ja
sub
lods
scas
je
add
jns
inc
adc
dec
sub
xchg
xor
add
or
mov
shr
and
lods
push
adc
cmp
call
and
and
and
repnz
jge
in
inc
sbb
mov
das
into
inc
loopne
xor
movsb
fidivl
or
sub
push
xchg
sarl
mov
fstps
scas
mov
jg
imul
add
ror
mov
sbb
inc
sub
push
jle
lea
mov
stc
fstps
mov
fdiv
imul
push
sar
push
push
fisttps
in
mov
adc
pop
into
fwait
dec
xchg
jecxz
bound
mov
xlat
xor
push
jae
je
cld
cltd
jb
or
adc
std
add
jge
test
jl
subl
cmpb
test
addr16
ljmp
mov
ret
sub
sbb
dec
mov
nop
push
test
js
fistps
subb
jmp
gs
jns
loopne
mov
fcmovne
fs
push
dec
add
cmp
mov
pop
or
push
out
leave
cmpsl
xchg
xchg
mov
cwtl
imul
and
cmc
inc
jecxz
sbb
pop
mov
leave
pop
in
jp
adc
mov
dec
jmp
iret
out
or
shrl
imul
push
shr
sti
push
scas
jl
mov
or
daa
inc
mov
push
mov
inc
dec
or
adc
lock
ss
jg
sbb
shrl
mov
mov
outsl
mov
js
inc
jb
shlb
xchg
sbb
decl
rcll
mov
sbb
jecxz
push
jbe
cs
mov
out
or
sub
xlat
cwtl
sbb
jg
push
mov
xor
xchg
mov
jns
xlat
jbe
mov
jne
add
andb
test
xor
xchg
jnp
in
sub
enter
mov
fistpl
sub
push
lret
mov
andb
fwait
insb
repz
adc
sbb
mov
sub
cs
das
push
aam
mov
mov
xlat
dec
rorb
cmp
sub
dec
pusha
pushl
repnz
sbb
iret
adcl
cmp
sub
je
scas
xchg
fldenv
push
aad
and
and
dec
push
lret
xchg
pop
fwait
je
mov
mov
mov
jecxz
dec
lret
popa
test
mov
pop
movsb
xor
lods
add
xlat
adc
sbb
test
sbb
and
sub
sub
cs
push
and
lahf
push
lret
sti
push
push
sub
call
data16
mov
xor
out
xchg
hlt
leave
add
ds
faddl
or
pop
aas
mov
mov
xchg
ss
repnz
loopne
cmp
adc
imul
adc
push
mov
leave
ja
fldt
int
jmp
rorb
iret
and
pusha
out
lods
mov
add
les
repz
insb
shrl
ror
mov
cmc
ljmp
ja
dec
and
lock
or
popf
sahf
mov
dec
lcall
dec
hlt
loopne
divb
dec
sbb
in
jmp
mov
pop
and
das
lods
push
xor
push
loopne
rorl
std
xor
jle
cld
jge
into
js
out
mov
cmpb
add
lret
sbb
ja
lods
std
mov
cltd
mov
fsub
loop
inc
push
sbb
xor
push
mov
std
out
mov
xor
testl
add
addr16
lods
imulb
sbb
jp
imul
mov
insl
sbb
aam
cltd
adc
sbb
adc
ds
pushf
mov
cwtl
or
push
sbb
sti
or
sti
push
xor
dec
shlb
jge
pop
mov
stc
inc
into
jbe
es
in
inc
xchg
adc
in
lret
adc
in
fmull
jb
mov
dec
stos
js
sub
push
lea
xchg
mov
sti
fstl
mov
add
add
pop
add
lock
test
jp
cmpsb
sub
mov
push
sub
ja
hlt
loop
jae
mov
ret
push
jbe
mov
adc
xchg
sbb
pop
mov
dec
scas
bound
imul
fwait
cmp
xchg
lcall
adcb
sarl
jecxz
aam
test
popa
xchg
daa
mov
movsl
shlb
xor
sub
mov
sbb
enter
jae
hlt
mov
cmp
mov
in
movl
push
repz
nop
movsl
outsb
shl
pop
into
scas
add
orb
cwtl
dec
push
jg
xchg
dec
push
aam
loop
and
add
jmp
repnz
push
pop
dec
xchg
pop
addr16
mov
ret
jb
xchg
push
sbb
jmp
push
dec
lahf
xor
mov
shlb
frstor
mov
mov
fstps
mov
in
or
push
pop
cmc
and
popa
jb
mov
lods
adc
dec
xchg
mov
jp
sbb
push
sub
dec
dec
adc
cld
inc
add
or
xchg
sbb
sbb
call
cltd
int3
rolb
gs
dec
xchg
mov
jno
inc
call
xchg
push
incl
mov
int3
rcrb
in
js
fists
xor
pop
push
je
mov
cmc
adc
add
fildll
shl
ret
sbb
into
iret
sub
repnz
mov
inc
mov
in
cmp
mov
test
lahf
cltd
aad
push
cmp
aad
add
mov
lods
xchg
dec
inc
iret
fwait
add
cmpsb
in
negb
and
mov
sub
or
jo
popf
loope
mov
mov
ja
and
push
mov
dec
adc
push
jb
mov
in
cmpsl
or
or
cs
mov
mov
punpckhwd
mov
popf
fidivrl
adc
mov
dec
adc
notl
int3
xchg
mov
mov
icebp
fsubrl
pop
in
inc
mov
repz
cs
jmp
jg
mov
lea
push
cmpsb
sub
addr16
mov
mov
adc
sbb
lods
and
pusha
mov
add
xchg
addr16
subl
or
jae
nop
daa
push
shrb
movsl
mov
push
idivb
cltd
cmp
cmc
mov
mov
enter
xlat
cmpsl
testb
or
dec
movsl
incl
mov
adc
add
shr
fucompp
pop
push
push
sbb
movsl
push
sbb
dec
inc
loopne
mov
xchg
aaa
enter
out
in
nop
adc
push
test
inc
pop
mov
cmpsl
jns
pop
xor
shrl
cmp
jecxz
inc
mov
mov
repnz
gs
push
sub
xchg
fnstenv
aad
xor
subb
sbb
stos
ss
jg
pop
mov
repnz
cmp
pop
or
adc
cs
hlt
mov
cld
aaa
aam
mov
dec
adc
mov
or
push
fdivrs
push
mov
jo
andb
push
push
adc
pop
insl
popa
inc
and
movhps
dec
push
or
mov
xchg
or
jg
je
push
cs
mov
xchg
dec
or
in
pop
xchg
dec
mov
mov
jecxz
aam
fwait
out
xchg
jmp
lods
nop
mov
mov
out
mov
jmp
inc
pop
xlat
dec
pop
xor
out
cmpsl
lods
and
dec
sub
adc
jp
and
push
add
jp
and
sbb
js
fimuls
ljmp
fisubl
pop
test
cmp
mov
push
mov
mov
jns
out
roll
xchg
or
and
jle
shrb
ret
dec
cs
dec
add
adc
in
mov
dec
addl
pop
push
jl
mov
fs
les
xor
test
aam
jne
push
sub
popa
push
cmpsb
jecxz
out
xorl
pop
repnz
xchg
mov
jne
push
xchg
adc
dec
xchg
cmpsb
leave
les
insb
aaa
out
adc
push
ss
int
mov
dec
mov
push
sbbl
out
lret
inc
mov
add
out
jno
call
test
movsl
fstpt
sbbl
xchg
xor
loope
and
push
push
movsl
cmpsb
jle
js
sub
push
jo
xlat
daa
out
or
lds
push
pop
mov
std
xchg
das
ss
cli
sbb
mov
fmull
stos
pop
ljmp
xchg
sbb
pop
mov
mov
mov
sub
in
iret
push
mov
xor
mov
add
repnz
sbb
popf
jmp
aad
lret
push
fucomp
pop
rclb
aas
aas
in
out
add
sbb
inc
cmp
cmp
or
test
adc
push
jo
mov
lret
xor
jmp
icebp
xchg
jns
jbe
pop
and
insl
lods
xchg
xchg
or
add
mov
mov
xlat
pusha
inc
enter
jge
and
cmp
ljmp
jb
aaa
push
ret
cwtl
loope
mov
cmp
in
pushl
sbb
xor
or
mov
repnz
mov
jb,pt
xor
xor
lods
aas
sbb
popa
outsl
adc
outsl
rol
push
sbb
mov
fsub
cwtl
punpckhbw
mov
subl
in
dec
stos
fwait
stos
and
jle
and
cs
scas
mov
add
lahf
pushf
inc
pushl
xor
lahf
inc
inc
jbe
cld
mov
dec
test
mov
out
jle
fisubs
and
js
mov
aam
adc
cmp
dec
jp
sti
jne
add
push
dec
and
in
push
adc
dec
and
stos
fadds
lahf
js
inc
cmp
std
dec
shrb
lds
int3
add
push
data16
dec
mov
insb
sbb
mov
and
sbb
push
push
scas
mov
ds
outsb
mov
imul
f2xm1
jmp
pop
mov
es
cltd
stos
dec
fimuls
icebp
lods
int3
xchg
cltd
jbe
jmp
cwtl
sbb
loope
push
enter
mov
push
inc
or
sub
xchg
out
sbb
mov
fstpt
jae
cmp
enter
lds
movsb
sub
flds
sub
add
mov
test
mov
ds
push
xchg
notb
lods
pop
fbstp
and
add
in
dec
dec
movsb
jle
add
out
popa
sub
dec
jp
stos
and
cltd
jnp
jbe
xor
test
mov
pop
aas
out
stc
insb
fdivr
mov
jne
push
and
and
js
sbb
enter
data16
in
mov
push
js
and
dec
sti
test
xor
fisttpll
xchg
enter
outsb
jle
cld
loop
or
jbe
xchg
movsl
cli
into
aam
fsubp
xlat
insb
push
subl
push
es
ret
adc
mov
mov
cmp
pop
xchg
mov
fistpl
aaa
or
imul
xor
push
lea
sub
inc
cwtl
aas
dec
sub
and
lea
jae
sbbb
push
in
insb
ret
xor
shrb
sti
scas
xchg
add
das
and
or
fidivs
je
into
gs
or
sti
enter
mov
adc
pop
lds
popf
mov
das
lahf
je
jl
dec
xor
insl
pop
test
jg
cmpsb
mov
mov
clc
mov
or
fimuls
jle
sarl
add
roll
fbstp
lods
iret
add
dec
dec
xchg
shrb
push
outsl
rolb
lods
rolb
or
xchg
mov
sub
or
and
lods
push
movsb
mov
sahf
ljmp
mov
lods
pop
rcl
sub
mov
stos
mov
int3
cld
loope
jo
dec
mov
mov
mov
sbb
lea
insb
mov
and
mov
fmuls
lods
neg
dec
push
loop
or
jmp
push
repz
nop
mov
nop
sub
xchg
and
or
mov
push
rorb
mov
add
and
lret
fchs
out
into
bound
xor
sbb
dec
enter
mov
sub
jecxz
aam
push
arpl
inc
jge
fsub
lret
notl
shl
aas
jge
inc
adc
aam
stc
push
cmc
xchg
pop
mov
sbb
pop
fstps
jne
xchg
in
pop
mov
jge
sbb
fcoms
xchg
stc
out
inc
cmpl
les
lahf
push
push
stos
sub
mov
scas
ds
nop
jl
outsb
insl
mov
testb
ljmp
cmp
dec
push
mov
das
daa
mov
mov
dec
pop
in
cli
push
pop
dec
insb
lcall
adc
aam
in
bound
jle
xchg
mov
or
push
imul
aam
adc
mov
mov
sub
lock
push
push
and
in
int3
cmp
in
xchg
movsb
pop
jae
jnp
cmp
push
mov
scas
incl
scas
jge
pop
movsb
call
mov
xchg
ret
fxam
sbb
or
xchg
mov
ja
jecxz
lret
mov
in
inc
jecxz
hlt
pop
movsb
adc
pop
xor
loope
push
or
xlat
xor
aaa
push
dec
sub
mov
das
mov
gs
adc
push
adc
dec
and
mov
xor
pop
sbb
mov
aad
jo
push
mov
sub
fcoml
rolb
dec
mov
xchg
out
cmpsl
in
xchg
shrl
cmpsl
sbb
stos
cmp
add
mov
test
xor
add
and
sub
lods
or
out
repz
fidivs
in
xor
or
int
cli
imul
out
push
test
sub
dec
andb
mov
pop
lods
js
clc
pop
aad
psrlq
adc
cmp
add
jl
jne
cmc
roll
popf
mov
out
adc
jmp
add
js
lods
cmp
mov
add
repnz
leave
pusha
adc
mov
mov
jl
mov
pop
mov
pop
fsub
pop
dec
cmp
scas
xor
xchg
adc
adc
sub
aas
adc
and
mov
daa
push
je
sahf
dec
mov
test
sbb
xchg
cmp
xor
ljmp
into
mov
inc
fsubrl
mov
cmpsb
data16
movsb
adc
xchg
xor
call
xchg
jno
add
or
inc
insb
insl
ja
jmp
dec
pop
mov
jl
iret
inc
inc
call
fnstcw
add
fisubl
xor
loop
adc
mov
aas
pushw
and
xor
pop
test
xor
pushf
dec
out
mov
xchg
idivb
loop
les
out
test
decl
jl
lods
add
testl
pop
sarl
fdivrl
dec
fistpll
lods
stos
scas
inc
sub
pop
inc
loop
sbb
nop
das
cli
fildl
sbb
insl
xor
les
push
fildl
lcall
push
insl
jne
push
add
lcall
int3
sub
int3
inc
sbb
push
stc
lock
rolb
adc
xor
sub
ret
mov
fldl
inc
jl
jns
mov
mov
mov
incl
mov
out
sahf
inc
movsl
es
xor
sarb
roll
push
mov
je
loopne
stc
xchg
sbb
in
inc
cld
in
ja
leave
outsl
mov
add
jb
xchg
bnd
push
mov
sbb
stos
push
mov
adc
sub
mov
push
xchg
scas
and
loop
enter
rcll
loop
in
mov
and
xchg
or
pop
sti
cmp
dec
lods
pop
sub
sub
out
push
cld
pusha
or
adc
mov
dec
repz
mov
repz
arpl
pop
sub
aaa
and
std
mov
aam
movb
mov
sub
mov
add
xchg
out
push
out
movsb
xchg
cld
cmpsl
cmp
jge
xchg
push
pop
jmp
loop
inc
add
or
pop
mov
lret
pop
fprem
inc
stc
daa
dec
inc
popf
cmc
mov
pop
add
js
sub
push
xor
jl
push
fnstenvs
jb
push
in
insb
push
insl
mov
lcall
pop
jno
roll
cld
or
call
pop
mov
imul
or
gs
lea
push
xchg
adc
cld
add
inc
push
rcrl
cmpsl
adc
shlb
jae
sub
lods
movsl
leave
bound
std
popa
jmp
sub
adc
mov
push
pop
xor
pop
adc
imul
mov
xchg
shrb
jp
lcall
int3
orb
out
jae
mov
cmp
aam
movsb
int
divb
mov
mov
fstps
shl
imul
notb
aad
push
sub
mov
repnz
aam
xorb
jns
mov
loop
add
dec
xor
sub
lock
adcl
dec
pop
pop
ljmp
test
add
dec
fwait
add
in
or
sub
or
jmp
mov
mov
inc
insb
fdivs
mov
insb
push
xor
inc
lods
or
loopne
lret
push
imul
jl
pop
inc
sbb
sti
ljmp
mov
clc
adc
sbb
ret
fdivr
mov
aaa
sub
jl
leave
imul
pop
jnp
dec
mov
adc
js
add
ret
push
int
xor
pop
in
jle
shlb
mov
mov
adc
in
push
sub
movsl
xchg
pop
cmpb
jno
out
daa
out
mov
in
jae
in
push
jae
mov
rcrl
fxch
mov
imulb
dec
testb
adc
bound
shrb
inc
inc
push
gs
fs
arpl
insb
pushl
scas
xor
test
pop
mov
insl
jo
adc
xchg
sub
dec
daa
sbb
fldt
sbb
xchg
mov
lods
push
out
nop
cmp
pop
sti
cld
fcoml
dec
addr16
inc
adc
jne
ret
subb
loope
daa
ja
xor
mov
dec
test
rorb
and
sub
sbb
pop
and
xor
push
mov
add
push
fmuls
xor
dec
aaa
shlb
jns
mov
mov
push
aaa
inc
mov
dec
fbld
mov
hlt
push
mov
enter
xchg
ret
inc
cmp
inc
adc
in
ror
sbb
mov
adcl
mov
push
stos
lock
ss
pusha
fs
js
xor
mov
xchg
sub
nop
aaa
into
mov
jp
and
loop
fs
test
cmpsl
xor
adc
cwtl
test
mov
loop
mov
dec
jg
fbstp
fbld
push
aas
mov
and
mov
adcb
pushf
mov
mov
cmp
pop
sub
lret
aas
mov
add
int
cmpsl
inc
or
cli
push
or
pop
cs
cmc
sub
loop
ds
xor
lds
out
jae
mov
add
mov
mov
mov
inc
pushf
mov
ja
dec
outsb
jns
sub
cmp
imul
aad
call
pop
fs
gs
jne
aas
inc
xchg
or
jo
pop
ljmp
mov
fcomip
test
insb
inc
mov
adc
mov
lods
jo
test
aad
cmp
xchg
mov
pop
daa
dec
mov
js
fs
sub
mov
pusha
or
jns
xor
dec
push
and
cmc
cli
daa
fwait
push
fsubr
inc
xchg
aad
movsl
cld
dec
pop
jo
dec
mov
lret
mov
enter
jns
or
out
repnz
push
outsl
jl
test
adc
cmc
xor
jge
cmp
pop
add
xorl
add
loop
stc
inc
imul
outsb
xlat
les
pop
repnz
and
fists
jae
cltd
cld
xchg
pop
push
xor
fldl
lods
jnp
lret
xor
pop
fildl
aad
shll
and
jg
stc
loop
outsb
imul
push
aaa
movsl
pop
cmp
pusha
mov
sub
dec
xor
mov
arpl
fwait
iret
jge
or
xchg
sub
jp
and
adc
addr16
ja
sub
ja
sbb
je
sbb
cmp
sti
push
or
out
mov
or
es
sbb
jno
cmp
or
cs
fwait
mov
or
loope
loopne
dec
loopne
push
outsl
aad
dec
ret
rclb
aaa
cmpsb
pop
push
add
bound
mov
insl
mov
mov
bound
movsl
jne
clc
jne
notb
xor
push
sbb
lret
mov
push
fwait
cltd
push
adc
add
lods
jne
outsl
fcmove
stos
or
icebp
cld
cs
mov
sub
lods
repz
shlb
inc
xchg
inc
stos
ljmp
scas
enter
fsubs
adc
sti
lret
addr16
pop
push
pushf
fists
subl
in
lods
icebp
inc
sbb
xchg
scas
test
xor
push
clc
icebp
rcrb
mov
xchg
add
xchg
inc
mov
daa
mov
add
and
shrb
mov
or
jnp
test
jnp
fsubr
hlt
int
push
sarb
addl
or
pop
inc
push
push
inc
sahf
pop
cvttps2pi
or
in
adc
mov
scas
out
outsb
data16
std
inc
jmp
mov
popa
inc
adc
push
ficoml
sbb
lret
sti
xchg
push
pop
xlat
pop
cmp
jmp
or
sub
or
aam
stos
call
insl
xor
xor
sub
pop
jb
xlat
jbe
xor
mov
dec
iret
push
jmp
xchg
pop
out
xor
mov
pop
add
pop
or
add
jg
mov
push
sbb
adc
std
pop
or
imul
jb
pop
sbb
ds
dec
and
cmc
decb
sub
enter
loop
sti
dec
adc
pop
mov
inc
pop
push
inc
pop
call
filds
lret
fs
jns
cmc
stos
sbb
call
cld
repz
or
int
stc
mulb
add
mov
sub
mov
nop
sub
iret
js
pusha
adc
enter
jno
mov
mov
inc
loopne
pop
adc
ret
lcall
mov
mov
push
fdivl
ret
adc
jo
mov
or
xchg
mov
cli
sbb
jo
push
out
inc
cld
addb
out
inc
or
pop
adc
mov
cld
pop
and
mov
push
inc
xchg
sbb
fildl
push
in
jbe
jecxz
daa
add
sti
clc
sub
fldcw
push
xchg
pop
lret
idivb
into
xchg
outsl
xchg
push
xor
or
js
sbb
push
push
incl
cld
ja
dec
or
jne
nop
inc
ret
mov
sub
stos
insb
inc
jl,pn
jb
mov
sub
push
movsb
in
dec
mov
mov
xlat
cmp
pop
cmp
mov
push
push
adc
nop
leave
push
loope,pt
cmp
sahf
or
out
push
outsl
pop
hlt
jge
jnp
rdmsr
push
sahf
imul
dec
cld
or
mov
call
aas
orl
clc
mov
push
xchg
pop
cmp
in
mov
mov
js
jge
shll
cmp
lcall
std
lea
fmulp
into
call
inc
sahf
mov
push
repz
or
fdivr
in
xchg
aad
sahf
xor
dec
cwtl
dec
sub
ja
adc
jne
aam
inc
and
mov
leave
je
aad
inc
scas
ljmp
push
adc
add
mov
xchg
mov
inc
data16
test
ficoms
cwtl
dec
lea
int3
xchg
pop
stos
sub
sub
dec
shll
sbb
out
das
pmaddwd
or
ret
mov
push
mov
mov
or
push
out
ja
add
mov
cld
fidivrs
pop
lcall
mov
cld
push
hlt
das
rorl
jo
add
xchg
sub
icebp
pop
cmp
dec
mov
mov
ffreep
and
lcall
ret
add
xchg
ffree
inc
dec
cmp
dec
dec
lcall
jmp
in
jl
sbb
mov
and
push
aas
das
or
movsb
add
push
or
xorb
or
roll
test
leave
jecxz
mov
fcom
test
or
fnstsw
es
or
pop
lret
addr16
cli
mov
mov
and
or
xor
scas
xchg
adc
fdivs
rcrb
cmp
test
jnp
in
mov
mov
cmpb
pop
jbe
or
xor
cld
test
or
push
cli
fstps
mov
add
push
pop
pop
xchg
cmp
js
mov
std
push
aad
jbe
push
test
cs
xchg
sti
adc
testl
mov
inc
lcall
mov
pop
test
push
mov
push
gs
test
and
roll
addr16
fcmovu
dec
sub
scas
sbb
in
loope
mov
ror
sub
fldl
sub
pop
cmp
pop
mov
leave
outsl
pop
insb
mov
xor
mov
pop
or
inc
dec
inc
sub
imul
mov
rcl
xorb
sbb
dec
and
mov
pop
aad
cmp
mov
mov
sub
sahf
nop
cmpsb
std
cmc
pop
arpl
or
xchg
aaa
movsl
shll
in
js
je
pop
push
push
in
dec
pop
rcr
add
adc
or
push
jle
jl
jb,pt
into
mov
dec
sahf
popl
in
sahf
and
adc
call
cmp
aaa
mov
fiadds
add
into
inc
inc
loope
jo
mov
jb
cmpsb
imul
pop
rcl
in
lea
divb
mov
sub
mov
sbb
not
pop
sub
mov
xchg
test
ret
lea
or
and
test
xor
jle
imul
xor
jp
test
lods
scas
movsb
and
scas
repz
les
mov
lods
repz
jne
dec
lret
add
mov
add
push
lds
test
dec
gs
jno
ds
sbb
fiaddl
mov
pop
jae
add
mov
jb
test
jns
dec
xchg
jecxz
imul
sbb
sti
pop
sbb
mov
je
icebp
mov
adc
pusha
cld
test
sbb
shrb
push
ret
arpl
adc
shrb
call
imull
aas
dec
bnd
xchg
ss
fnsave
out
inc
test
jg
les
jno
pop
jno
inc
lahf
fwait
iret
mov
cmp
or
inc
sbb
push
daa
inc
push
test
sbb
jmp
and
pop
push
mov
in
std
test
ss
and
addl
shll
mov
and
push
pop
cwtl
insl
sbb
jo
pop
enter
push
fnsave
lods
lea
add
mov
in
test
fidivs
aas
mov
adc
inc
push
fcoms
push
ss
sub
mov
cmp
movb
jnp
insl
jmp
popf
pop
and
push
and
es
insl
push
call
sub
pop
sti
test
orb
lods
jnp
sbb
xchg
enter
aam
popa
dec
mov
cmpsl
arpl
dec
pop
xor
and
xchg
sub
pop
test
rol
jo
sbb
inc
pop
aad
mov
adc
std
adc
pop
and
push
and
pusha
cmpsl
outsl
out
outsl
dec
std
cmp
jb
test
or
pop
mov
insl
int
inc
push
and
add
movsl
sub
out
aas
push
lock
pop
outsb
add
outsb
or
push
aad
mov
cmp
inc
cli
or
gs
pop
and
cmp
add
adc
inc
mov
dec
mov
jmp
in
insb
pop
cli
mov
cmp
pop
mov
gs
scas
inc
test
xor
mov
movsw
jae
inc
jge
xlat
cmc
data16
inc
stos
fldcw
sbb
iret
sub
xor
lods
hlt
jno
ss
int
mov
inc
mov
loop
push
aad
aas
lods
and
ds
enter
mov
jmp
push
mov
cld
push
ds
mov
ds
sub
dec
lods
ret
inc
in
faddl
sbb
cs
fwait
les
sahf
or
add
sub
add
arpl
rclb
rorb
dec
add
loopne
xchg
dec
movsl
adc
das
add
repnz
jne
jae
push
pushf
mov
jg
test
es
stos
sub
lret
sahf
cmp
dec
mov
jae
sub
fistpl
dec
mov
dec
dec
mov
mov
les
sbbl
sbb
aas
test
inc
out
rclb
and
dec
loope
xor
xchg
inc
in
xchg
fwait
ds
es
int
test
loope
mov
mov
gs
lahf
push
pusha
mov
andb
mov
mov
mov
cwtl
gs
inc
fcom
andb
mov
pop
mov
mov
lret
cmp
mov
sti
aad
pop
lea
data16
push
sub
incl
int3
jnp
lahf
mov
pop
inc
scas
sbb
xchg
out
pop
lods
jae
aaa
addb
push
fisubs
lock
pusha
xchg
lods
pusha
xchg
mov
mov
pop
bound
push
add
mov
xor
pop
xchg
adc
bound
flds
xchg
xor
daa
xchg
jns
lcall
scas
es
add
jb
mov
aas
je
dec
lods
in
cmp
jno
test
xchg
loop
mov
xchg
xorb
push
pop
rcll
mov
ss
int
jno
stc
inc
sarl
test
cmp
inc
dec
pop
jns
sbb
jecxz
mov
out
ds
xorb
stos
xor
mov
sub
jbe
sbb
lods
jg
out
push
arpl
lret
pop
push
js
cmp
scas
push
and
push
xchg
jns
rcrl
lods
aad
adc
sbb
jg
sub
xorb
sub
xor
sarl
jno
cmp
int
mov
ljmp
mov
and
mov
daa
fwait
cmp
mov
clc
iret
out
jbe
or
pusha
mov
inc
ret
insl
jecxz
add
xchg
int
xchg
push
mov
popa
adc
xchg
pop
or
xchg
pushl
scas
outsb
cmp
dec
xchg
or
sbb
int3
outsb
icebp
xchg
enter
add
mov
fs
mov
mov
and
lret
and
mov
in
mov
sahf
mov
clc
fsubs
pusha
lret
es
and
enter
sbb
rcrl
das
mov
jns
pop
inc
hlt
lods
std
xor
out
gs
jb
bnd
sar
push
pop
mov
and
dec
hlt
pop
fnstenv
lds
in
jle
jo
lods
cmp
sbb
popa
mov
iret
out
mov
pop
lahf
pop
inc
test
jnp
jg
mov
cmp
sti
xlat
int3
xchg
xchg
rorl
sbb
pop
xlat
call
in
adc
cmpl
push
stos
jmp
pop
test
xchg
cmpsb
mov
cmpsl
add
push
and
lods
and
aas
stos
lret
movl
addr16
mov
push
dec
inc
push
pop
imul
sub
mov
test
emms
mov
ret
jbe
sbb
cli
or
lds
aas
add
inc
ficompl
adc
cmpsl
sub
mov
les
in
xor
aad
cmp
loop
jne
and
fnsave
xchg
lret
fdivrl
lcall
lods
les
xor
ret
je
in
fwait
imul
mov
pushf
stos
push
imull
adc
insl
or
mov
daa
push
or
inc
repz
shl
inc
mov
stos
je
stc
test
insb
adc
nop
push
pop
lock
lret
les
mov
pop
and
sti
push
test
jmp
mov
xor
pop
inc
movsl
add
and
ds
push
push
pop
push
mov
fsubrl
push
testb
je
mov
movsb
sbb
pop
push
outsb
test
stos
xlat
test
rcl
pop
inc
mov
mov
push
jge
loopne
sarb
cld
lods
dec
dec
sbb
mov
mov
and
or
roll
pusha
out
push
sti
into
lods
xchg
xchg
cmp
adc
xor
jns
das
adc
hlt
xchg
mov
mov
and
ret
mov
pop
dec
or
inc
pop
jns
pop
sbb
xor
push
sti
push
inc
mov
xchg
int3
sbb
push
lock
or
mov
xor
and
pop
jmp
cwtl
std
leave
jne
sti
testl
pushf
jp
pop
jge
lahf
push
loopne
add
adc
movsb
and
bnd
xchg
fstp
dec
imul
std
test
and
aam
sbb
out
lods
outsb
test
and
ds
mov
pop
stc
into
rcrl
cmp
or
mov
cltd
int
pop
or
sub
xchg
inc
ds
test
add
adc
push
inc
js
popa
adc
pop
ret
in
mov
sbb
cltd
sahf
push
push
shll
nop
call
enter
mov
lds
push
add
pop
adc
lds
sbb
mov
jb
fcomi
pop
sbbb
fbstp
lret
sar
or
adc
and
lcall
stc
orl
or
fnstcw
inc
xor
shll
sub
test
mov
ss
jbe
push
jmp
rcl
or
or
push
jnp
inc
lcall
lods
mov
dec
adc
into
adc
gs
pop
add
cmp
loope
add
orb
mov
jae
les
in
test
jp
xor
mov
rorb
stos
cmpsl
pop
divl
xor
adc
pop
leave
jp
lret
xor
popf
xor
loop
lahf
cmp
xor
ljmp
daa
inc
shll
push
psrld
and
mov
xchg
ficomps
mov
loopne
arpl
fld
pop
mov
cmp
jb
mov
cmp
jno
xchg
loopne
push
lock
stos
lea
or
pop
mov
stc
cmpsb
insl
clc
fidivrs
mov
daa
or
fsubs
xor
jo
incl
shld
movb
mov
jl
mov
stos
in
or
in
sub
lcall
loop
imul
mov
cltd
lea
outsb
fbld
movsb
sar
mov
mov
cmpsl
xor
sub
imul
in
out
shll
les
jae
dec
arpl
jecxz
aad
push
xor
rcll
aaa
cld
aas
jno
out
add
push
stos
inc
mov
mov
inc
and
in
mov
imul
out
pop
stos
sahf
arpl
mov
cmp
mov
cmp
and
cwtl
hlt
dec
mov
imul
push
ja
cmp
dec
pop
and
xchg
push
cwtl
xchg
rol
in
mov
cltd
cmpsb
hlt
xchg
mov
fstl
and
mov
test
outsl
jb
xor
popf
mov
adc
hlt
enterw
pop
mov
out
call
jecxz
xor
xchg
std
je
leave
cmp
lods
stc
mov
or
xor
adc
sub
xchg
cwtl
aas
les
nop
jae
sub
cmp
in
test
iret
ss
popa
movsl
fdivrs
cs
add
jne
sar
xchg
xchg
fbld
lret
push
cmpsb
leave
iret
push
dec
fstpt
fidivrs
scas
mov
add
pop
push
es
int3
jns
in
mov
sahf
jo
mov
xor
and
xlat
std
xchg
xchg
loope
movsd
hlt
jl
rolb
dec
scas
out
jmp
loopne
xchg
and
repz
fsubl
inc
sbb
dec
imul
add
mov
inc
mov
jp
in
and
pop
lahf
push
jno
add
aaa
dec
xchg
les
test
pop
sbb
dec
addr16
cmp
mov
xchg
xchg
add
cmp
out
push
mov
sahf
pushf
push
orb
int
jne
sbb
rclb
and
je
outsb
into
xchg
mov
cmp
mov
mov
cli
loopne
mov
decb
pop
in
push
js
or
cmp
add
mov
adc
jnp
aaa
iret
jle
in
sub
nop
dec
dec
jecxz
sbb
adc
cmpb
fsts
pop
call
les
rcrb
arpl
lods
add
dec
addr16
and
nop
xor
cmp
mov
cmpl
fwait
xorb
or
or
fcoms
push
repz
arpl
mov
xor
cwtl
adcb
xchg
mov
enter
inc
inc
cltd
add
and
out
adc
pusha
push
inc
mov
repz
fs
inc
adc
aad
push
push
repz
and
repnz
js
cmp
xlat
mov
push
xor
mov
lock
pop
jmp
addr16
xchg
mov
xor
add
hlt
or
imull
loopne
mov
push
dec
loope
and
push
aam
jg
inc
sahf
dec
arpl
dec
dec
add
or
jg
and
stos
sbb
add
jle
and
xor
rcll
stos
pop
jb
adc
sahf
jae
mov
dec
dec
outsl
add
mov
les
cmp
cmpsl
inc
loop
xchg
mov
and
pop
jmp
add
fs
push
subb
lahf
and
outsb
in
push
mov
leave
pushf
sub
push
lret
mov
sbb
mov
push
out
jbe
add
gs
xchg
dec
jbe
cmp
loopne
repz
add
jb
test
call
adc
pop
dec
mov
in
call
or
ret
ss
lods
cmp
daa
stos
xor
add
orl
mov
pop
mov
ljmp
xchg
or
loope
pop
loope
jmp
in
and
mov
mov
jo
mov
sarl
addr16
movsl
xchg
push
cmp
jne
and
mov
dec
sub
bound
subl
pop
mov
push
inc
sub
push
popa
hlt
out
mov
and
jmp
mov
cld
movsl
shrb
xor
mov
pop
popa
sub
sbb
ror
or
sahf
mov
insl
sbb
leave
push
dec
inc
cmp
sahf
push
xchg
ds
xchg
push
push
xlat
gs
aaa
jo
or
loopne
mul
sub
lret
iret
sub
mov
xlat
xchg
xchg
mov
push
loope
xor
mov
lret
icebp
dec
cmc
pop
mov
cmp
ficomps
or
xchg
daa
in
sbb
mov
push
je
mov
adc
jl
nop
xchg
xchg
int
xchg
dec
fwait
std
fstp
xlat
jnp
lds
push
jbe
fdivl
mov
scas
cmpsb
cmp
roll
popf
cli
push
je
test
cli
dec
mov
inc
mov
dec
rorb
lret
cwtl
sbb
aaa
ds
xor
jg
pop
rcrb
inc
sbb
adc
aas
mov
sar
cmp
pop
push
loopne
nop
jge
ret
in
popf
push
mov
pop
sti
out
stos
ljmp
and
or
dec
nop
popf
icebp
test
mov
xor
les
adc
test
mov
int
or
lods
stc
aam
les
div
adc
xor
or
mov
xchg
xchg
mov
or
ficoml
sub
aas
lret
pop
aas
jae
loop
scas
loopne
pop
aas
je
imul
xchg
fcmovnu
push
or
push
mov
stos
out
mov
inc
sbb
inc
adc
mov
pop
and
or
mov
std
pusha
sub
and
add
push
arpl
sub
or
int3
and
cmp
pop
imul
lods
sub
adc
mov
sub
lret
mov
xor
jno
in
dec
mov
fcomps
idivb
push
push
fcmovnbe
inc
or
outsl
or
mov
jo
dec
popa
lret
gs
mov
sub
cmpsb
ss
lahf
cmp
fxch
jp
mov
ficompl
addr16
mov
ret
out
push
fstpt
fildl
shll
jle
inc
fstpt
push
andl
and
pushf
mov
jne
and
leave
pop
xor
push
pop
xor
repnz
push
test
aam
in
je
das
scas
xor
add
sarb
sbb
push
subb
call
imul
popa
fnsave
add
leave
andl
hlt
mov
fdivs
jge
les
sub
lahf
mov
dec
mov
leave
dec
ja
es
clc
sub
pop
lea
sbb
push
xchg
cld
pop
adc
dec
cmp
int3
or
mov
loop
repnz
loopne
mov
insb
es
repnz
lea
pushf
inc
xchg
int3
leave
cmpsl
iret
lcall
jmp
jmp
jb
xlat
icebp
add
lret
out
std
mov
test
mov
je
or
stos
imul
lret
imul
hlt
mov
jne
ljmp
fnstenv
and
mov
jmp
adc
dec
cmp
push
adc
sarb
and
xchg
push
push
jae
lock
pop
aam
lods
mov
enter
shrl
xchg
cmp
xor
mov
dec
daa
push
ds
stos
icebp
lds
adc
adc
lret
mov
insb
xor
pushf
les
add
xor
xor
cwtl
repz
pop
dec
dec
lods
cmp
leave
out
jnp
call
jns
ret
push
pop
jge
mov
mov
cltd
dec
int3
jne
fdivl
rcrl
pop
insl
cmp
inc
icebp
daa
push
mov
xor
out
jmp
mov
push
sbb
pop
xchg
mov
mov
out
loope
push
fldl
jmp
mov
sbb
ljmp
add
and
pop
ror
jge
jp
mov
movsb
fs
arpl
insl
scas
shlb
pop
jmp
rcrl
sub
loopne
and
rcrb
ficoms
pop
or
or
lea
or
jecxz
mov
scas
bnd
cmp
mov
fld
add
lret
mov
sbb
stos
mov
cmp
dec
cltd
dec
jnp
lahf
dec
inc
inc
das
jae
rclb
and
js
aad
pop
push
loop
mov
icebp
icebp
add
js
mov
sbb
add
sahf
xchg
jg
call
icebp
outsb
sti
fdivrl
cmpsb
push
xor
sbb
test
stos
adc
cltd
pushf
scas
insb
or
bound
in
popa
cmp
sub
adc
jp
icebp
das
pop
ljmp
aaa
cmpsb
adc
xor
push
cmc
xchg
cltd
lods
icebp
push
movsb
add
mov
add
popf
xlat
pusha
jae
inc
inc
and
aas
mov
out
sub
insl
xchg
andl
cmpb
add
pop
aam
stos
fwait
sub
xchg
mov
jb
xor
push
test
cmp
loopne
xor
mov
push
insb
xlat
fimull
pop
arpl
in
test
sub
cmc
cld
adcl
adc
stos
je
xchg
sub
out
scas
scas
fs
js
mov
stos
not
je
jno,pn
leave
dec
cld
push
push
cwtl
sbb
outsb
cmpsl
adc
xchg
popa
rcll
enter
scas
xor
mov
dec
dec
and
jg
or
cmc
loopne
push
jns
mov
mov
xor
add
sub
ljmp
js
dec
jb
or
xlat
aad
and
pop
cmpl
jmp
loope
jb
inc
jbe
fistpll
into
mov
inc
add
add
mov
mov
fdivrl
push
icebp
mov
shrb
jo
stc
lret
ret
cwtl
mov
test
negb
fs
add
fwait
jns
insl
sub
jle
repnz
inc
add
punpckhwd
push
cmpsb
mov
adc
mov
inc
jg
sub
jno
mov
or
leave
loope
mov
ds
pop
mov
pop
pop
out
fnstenv
mov
lock
pop
sub
pop
push
or
cmp
and
dec
mov
pusha
test
sbb
movsb
stc
cmp
leave
les
cmpsb
mov
inc
shll
imul
shll
sbb
and
loope
xchg
cltd
push
nop
add
fidivl
adc
mov
xchg
xorl
aas
add
out
inc
fidivrs
jg
pop
mov
lea
xor
add
pop
sahf
xor
jb
add
sbb
pop
mov
mov
cmp
inc
stos
inc
inc
fcom
fsubl
lock
test
inc
inc
xor
inc
mov
out
push
ss
add
cwtl
jnp
add
jmp
sbb
in
or
sbb
loopne
call
pop
ja
or
sbb
int3
sbb
es
add
push
pop
imul
in
popf
std
fiadds
add
push
push
out
cld
sar
inc
stc
or
aaa
cli
movsb
ljmp
lret
lret
add
fmuls
jge
scas
pop
mov
pop
call
outsb
sub
cltd
sbb
jge
mulb
icebp
cmc
jl
insb
dec
mov
mov
cmp
cli
and
xor
aaa
decl
aam
xchg
jb
stc
lods
lret
popf
psubw
push
cltd
jno
insb
push
sub
fbstp
push
ja
js
test
das
inc
mov
cmp
dec
xor
std
faddl
xchg
std
push
xor
add
fwait
ret
add
movsl
mov
bound
inc
sti
jnp
popa
bound
mov
adc
fcoms
xchg
jle
je
ret
lret
lods
mov
es
mov
sbb
rcr
dec
repnz
xor
jg
add
orl
stos
aam
ja
xchg
mov
adc
lods
sub
mov
imulb
pop
aas
scas
cs
pushl
xchg
loop
mov
pop
dec
imul
mov
add
pushf
hlt
pop
pop
ret
shlb
sub
mov
js
cmp
pop
arpl
movsl
fwait
adc
mov
aad
cmp
push
sbb
xorb
dec
or
leave
xor
add
inc
lods
jne
cmp
or
sub
adc
add
ret
inc
pop
leave
push
mov
movsb
in
mov
mov
std
cmp
pop
sbb
aas
or
jle
xchg
lahf
jge
mov
push
ja
rorb
push
fcmovnu
jns
jp
add
push
bound
mov
mov
sbb
push
cmpsl
jmp
mov
mov
xchg
mov
mov
pusha
inc
js
mov
cmp
add
popa
push
dec
ljmp
pushf
stos
pop
mov
loopne
ss
ret
xchg
mov
push
out
into
pushf
popa
faddp
pop
mov
pop
dec
jg
and
dec
mov
imul
lods
xchg
stos
aam
fwait
imul
xor
mov
dec
mov
cli
sub
push
mov
std
outsb
jnp
cwtl
loop
mov
pushf
adc
jmp
cmc
xlat
inc
mov
mov
fmuls
mov
xchg
inc
push
shll
xchg
xchg
inc
repnz
xorl
clc
out
scas
jno
mov
in
dec
mov
cld
mov
mov
dec
out
sub
arpl
mov
xor
sbb
push
mov
orl
sbb
into
xor
enter
mov
out
loope
pop
xor
out
arpl
dec
je
add
lea
mov
es
fnstcw
and
cmp
mov
or
pop
dec
jne
cmp
xlat
mov
sbb
inc
out
or
xor
sub
inc
jmp
stc
xlat
lea
f2xm1
clc
test
and
loope
adc
lods
inc
jbe
movsl
mov
and
jae
nop
popa
enter
loopne
in
je
int
jecxz
js
add
mov
xor
xor
mov
mov
xchg
mov
fdiv
es
loope
into
jo
ret
loop
aaa
mov
xor
mov
mov
imul
mov
fbld
sub
lods
mov
jmp
sarb
mov
sbb
movsb
dec
cltd
test
insl
dec
les
xor
xchg
fsts
jecxz
pop
xchg
sbb
xorl
mov
ss
mov
pop
mov
movsl
push
imul
sub
fistpl
rorl
sarb
xchg
cmpsl
cmp
addr16
jo
inc
nop
or
jmp
mov
push
mov
cmp
in
add
scas
mov
stc
leave
sbb
jb
mov
loope
cmp
into
inc
add
flds
stos
or
mov
bound
sbb
mov
lods
test
leave
lret
out
enter
je
add
ret
pop
sub
stos
xchg
mov
je
iret
icebp
loope
ja
xchg
clc
out
pop
add
xchg
mov
movsb
or
and
xchg
shr
sbb
mov
adc
clc
inc
dec
dec
push
push
cmp
pop
loopne
sub
popf
cmp
fnstcw
std
insl
mov
in
aas
mov
inc
sub
fimuls
pop
jl
inc
mov
cld
rol
in
psubb
cwtl
gs
daa
adc
andl
cmc
pusha
push
or
hlt
cmpsl
sub
fistpl
aad
mov
lret
ss
xor
addr16
into
dec
mov
das
add
in
xchg
cmove
xchg
jne
movsb
mov
pop
es
inc
or
cmp
jp
jae
push
outsl
jle
shrb
lods
pop
xchg
jae
mov
mov
dec
jbe
push
and
or
add
fiadds
xor
or
jp
sub
test
nop
cmp
out
inc
enter
es
jne
sbb
cld
cmp
lret
sbb
cmp
cld
mov
or
popf
sahf
mov
lret
mov
cmc
push
data16
mov
je
jae
adc
cltd
add
xchg
or
or
jbe
in
stos
fldt
out
xor
mov
sbb
iret
fldcw
mov
sub
jae
and
fbstp
pop
loopne
idivw
jge
cmp
test
nop
pop
push
and
movsl
imul
es
enter
adc
sbb
cli
stos
and
pop
icebp
jnp,pt
mov
and
sub
lock
pusha
mov
mov
mov
jecxz
lods
dec
xor
inc
add
push
push
cltd
sbb
out
rolb
inc
lds
jle
xchg
adc
enter
jge
sub
fyl2x
cmpsb
nop
aaa
outsl
push
loope
push
cmp
cmp
js
mov
cmp
mov
xor
stc
cmp
pop
ds
sub
pusha
mov
test
dec
and
insb
xchg
stc
dec
mov
fistpll
je
xor
cmp
test
subb
in
pop
shrl
sub
and
jl
or
or
cltd
mov
dec
dec
mov
mov
aas
hlt
jp
add
mov
cwtl
shlb
and
pop
jne
int3
lahf
pop
lock
rol
cmpsl
mov
movsb
int
mov
lock
jecxz
jmp
dec
dec
sti
loop
ds
mov
sbb
mov
push
adcl
movsl
ljmp
jg
push
imul
bswap
add
push
cwtl
testb
ljmp
mov
leave
loop
pushl
jne
push
mov
iret
sbb
xor
and
lret
cs
pop
and
negb
mov
mov
cli
enter
test
cli
pop
xchg
xchg
and
ljmp
mov
jg
inc
cli
dec
cli
pop
dec
dec
es
dec
mov
mov
cmpsl
nop
xchg
mov
sbb
pop
dec
mov
xchg
add
jo
stos
gs
mov
loop
pop
mov
push
out
xor
sbb
push
or
hlt
dec
popf
xor
push
lret
push
in
lock
inc
sbb
mov
mov
pop
ds
cmpsl
push
and
in
mov
mov
mov
pushf
sub
lahf
gs
aas
icebp
adc
lds
add
jg
jmp
jne
cmpsl
sbb
cmpl
pop
inc
cmp
jb
ret
push
mov
jg
sbb
cwtl
push
je
sub
adc
ss
mov
nop
sbb
cmpsl
adc
js
xor
push
imul
shr
xor
cmp
test
cld
push
cmpsb
pop
mov
dec
push
insl
ficoms
shrb
into
out
insl
call
xor
jge
jae
pop
cmp
std
sbb
mov
cmp
push
inc
mov
jnp
out
jecxz
fnsave
aam
test
push
dec
rcrb
test
sub
leave
add
xor
mov
inc
push
push
enter
xchg
xor
call
sti
jns
insb
push
mov
add
mov
stos
cld
dec
pusha
repz
add
and
xchg
popf
xor
lahf
ja
mov
imul
imul
mov
add
int3
pop
xchg
cmc
sub
test
cmp
push
imul
fwait
push
or
das
ja
in
add
test
nop
and
add
dec
call
pop
mov
jno
pop
xchg
cmp
fs
aam
loop
mov
mov
pop
mov
test
xor
in
mov
dec
outsb
jno
and
lods
xchg
aas
sahf
jns
les
jmp
sbb
or
mov
sbb
adc
push
xor
cmc
xor
mov
rcll
jecxz
push
ss
adc
notb
stos
xchg
or
adc
add
mov
nop
ror
dec
push
ret
cmpsb
add
in
fisttps
sahf
xor
rcrl
add
hlt
bound
sub
test
push
outsl
xchg
in
fiadds
xchg
aaa
ljmp
add
jno
adc
sar
arpl
nop
or
mov
lods
mov
stos
push
mov
jle
jno
cmpsl
cmpsb
jecxz
sbbl
ret
sub
inc
and
fcompl
mov
cmp
mov
xor
xor
push
in
hlt
xchg
or
pop
lea
mov
lods
faddl
bound
mov
and
test
popf
out
ja
mov
in
xchg
out
ss
pop
jecxz
push
xlat
dec
dec
cli
jns
jbe
scas
stos
out
push
mov
pop
dec
das
pop
negb
addr16
and
int3
sbb
adc
and
pop
cmp
insl
push
sbb
mov
mov
jns
xor
inc
sbb
imul
nop
js
xchg
mov
xor
xchg
dec
adc
aad
jecxz
insl
inc
icebp
rcrl
fcoms
inc
into
mov
ret
shlb
push
dec
mov
xchg
dec
add
sub
dec
jo
sub
fsubrl
push
push
int3
and
mov
hlt
iret
xor
clc
cmp
mov
adc
xchg
popa
or
inc
lods
popa
or
dec
mov
das
cmp
stc
ds
pop
lret
mov
inc
pop
lds
cmp
mov
mov
mov
lods
fs
mov
sarl
push
lock
ljmp
movsb
pop
cmp
lock
dec
pushf
push
sbb
arpl
outsl
lahf
mov
aas
mov
in
dec
mov
jle
scas
sti
and
jae
sbb
mov
inc
popa
dec
cmpsl
mov
js
imul
push
jnp
jne
sub
push
mov
sub
int
pop
mov
dec
jle
sbb
mov
or
sbb
repz
sti
or
pop
lods
push
sti
and
fidivrl
xor
xor
mov
cltd
rcrl
repnz
xchg
out
push
jecxz
aad
cmp
xlat
inc
push
jns
inc
icebp
adc
pop
jg
iret
xchg
push
invd
cwtl
jp
ljmp
jae
push
xchg
xchg
xlat
lds
add
pop
jo
pop
lds
pop
xchg
mov
mov
ret
mov
jp,pn
repnz
addl
ljmp
mov
movsb
enter
lret
jp
movsb
sub
decl
xchg
iret
pop
adc
mov
and
push
or
sub
jae
in
test
test
push
pop
incb
cwtl
outsl
rolb
cmpsl
jp
shll
jg
aad
enter
xchg
cmpsl
js
imul
push
call
les
imul
add
out
in
inc
fadds
test
inc
sub
cmc
jmp
cli
cmp
push
ret
add
sub
and
lea
int3
dec
sbb
adc
xchg
mov
mov
in
bound
rorl
cmpsb
cmp
cs
andl
cmpl
shrl
inc
ja
insb
popf
xor
cltd
dec
mov
add
jae
inc
out
xchg
int
xchg
outsl
mov
push
dec
fdivrl
adc
xchg
sbbl
fadd
xor
popf
push
imul
jg
push
cmp
decb
adc
js
repnz
dec
jns
lods
in
outsl
cmp
cmp
scas
lea
pop
sbb
mov
gs
mov
fs
mov
inc
push
fwait
lcall
mov
jnp
int
inc
int3
scas
or
jne
cltd
cli
aad
andb
cmp
or
inc
xchg
xor
in
subb
fisubl
nop
xchg
daa
jae
pop
push
jno
outsl
lret
add
push
cmp
mov
xchg
ds
mov
sub
xlat
push
fdiv
pop
out
sub
flds
cmpsb
scas
cld
add
sbb
bound
in
lods
sbbb
fsubs
insb
inc
xchg
out
pusha
lahf
adc
or
stos
pop
and
mov
ss
fildll
add
mov
adc
mov
adc
les
fiadds
or
shrl
mov
outsl
mov
incl
mov
inc
xchg
jb
xor
cmpsw
inc
mov
mov
mov
jae
sub
pusha
mov
mov
icebp
pushf
sub
xor
imul
xchg
pop
or
or
dec
mov
adc
test
mov
mov
mov
aas
push
cmp
xor
minps
in
and
sbb
divl
test
or
pop
adc
push
in
inc
das
mov
rorl
dec
popa
or
rorl
mov
jae
inc
xchg
push
leave
sbb
fstpt
mov
cli
icebp
mov
push
xchg
sbb
mov
push
inc
mov
and
pop
sbb
sub
les
js
pushf
push
xorl
dec
ja
sub
push
adc
xor
push
dec
jecxz
inc
dec
jae
mov
sbb
in
in
lods
or
and
lahf
fldl
jecxz
dec
or
out
in
jl
pop
pop
int
add
stc
add
xor
xchg
imul
xchg
aad
std
gs
xchg
fistpl
notb
andl
pushf
daa
fists
out
fwait
cmp
dec
cs
push
icebp
stos
orb
xchg
push
and
sahf
xchg
jb
into
stos
enter
or
lret
enter
push
dec
out
inc
movsl
pop
pop
fwait
icebp
cmpsb
cltd
xor
data16
xchg
mov
es
sub
cmpsl
outsb
pop
int3
enter
push
in
cvtpi2ps
cmp
dec
mov
push
cmc
int
fadd
or
lcall
data16
adc
aas
or
arpl
mov
lcall
jmp
scas
nop
sub
add
mov
mov
in
out
cmp
ja
cmp
mov
nop
gs
ljmp
mov
mov
cs
mov
nop
je
inc
and
sbb
push
lock
out
popf
sbb
jmp
inc
insl
mov
pushf
push
fnstsw
repnz
adcb
xor
orb
mov
jno
inc
sbb
mov
pop
das
push
std
jl
push
dec
cs
in
mov
push
or
out
cld
dec
pop
mov
push
outsl
jne
aas
sti
pop
cmp
push
mov
imul
mov
mov
xchg
lods
popa
inc
add
mov
mov
or
add
cltd
imul
xchg
imul
xchg
add
arpl
add
mov
ds
pushf
stc
add
sbb
scas
mov
push
pop
jae
fisubrl
sub
sbbl
mov
push
add
xchg
faddl
enter
imul
push
or
lea
push
jl
xchg
stc
lret
and
cmp
lcall
jb
jno
add
push
sbb
scas
sbb
jle
xor
xchg
pop
lret
cld
pop
adc
stos
mov
dec
insb
jl
sti
int3
jp
inc
shlb
inc
ljmp
push
mov
call
stc
mov
xchg
cmp
pop
arpl
aaa
in
xor
testl
dec
mov
aaa
xchg
in
adc
inc
iret
test
pop
sub
mov
push
push
cmp
movsb
push
insl
mov
jne
ret
push
lret
popf
es
dec
mov
lock
push
jo
dec
push
test
incb
movsl
mov
cmp
clc
xor
ret
sub
adc
out
cmp
js
in
dec
pop
mov
in
jmp
push
dec
lock
jecxz
sahf
gs
das
div
inc
cmp
inc
cltd
rorb
mov
out
mov
mov
or
push
add
jmp
out
mov
jo
out
jns
sti
adc
jb
sub
mov
and
sbb
stos
ja
mov
test
xor
shlb
fs
push
dec
sub
jmp
cmc
loope
xor
movsb
xor
loopne
jge
and
jmp
fidivs
test
push
fwait
popa
popf
pop
arpl
mov
es
or
push
rorl
push
shr
dec
inc
mov
xor
in
adc
xchg
mov
shrb
xchg
mov
xchg
jecxz
sub
fdivs
push
js
cltd
pop
pop
inc
dec
jg
in
inc
push
mov
xchg
adc
xchg
in
loope
orl
and
in
loope
and
call
add
add
xchg
rcrb
ss
stc
aad
sbb
cmp
sbb
sub
rcll
mov
push
fldenv
or
imul
xchg
sbb
pop
add
mov
movsl
or
push
xchg
clc
or
push
dec
sub
enter
or
mov
andb
jg
sub
rcrb
adc
loopne
jecxz
out
lahf
and
fs
in
cmp
inc
push
inc
lcall
pushf
push
rorl
lcall
insl
push
movsb
aas
arpl
fisttps
push
pop
inc
mov
out
ficoms
ljmp
xor
pop
lret
dec
pusha
push
xor
insl
psrad
xor
test
icebp
jge
out
out
inc
xcrypt-cfb
cmpsl
loop
or
pop
int
xor
push
into
or
stos
push
ficompl
adc
and
cmpl
inc
pop
int3
inc
add
mov
es
lret
push
cmc
inc
ficompl
mov
fsubrl
sbb
aad
lds
ret
mov
sub
xlat
mov
andl
sbb
scas
sub
pushf
js
movb
je
mov
add
or
out
mov
mov
mov
xchg
mov
ljmp
mov
dec
cli
or
mov
mov
dec
dec
test
push
outsb
add
mov
lods
ss
stos
sub
lret
pushf
push
mov
test
frstor
add
test
into
lret
cmpl
pop
aaa
xor
push
sub
mov
add
cmc
daa
mov
mov
mov
pop
rcl
arpl
jne
out
xor
sbb
outsb
sbbb
fdivrl
into
pop
into
add
xor
jl
pop
movsl
into
dec
stos
or
xchg
jo
add
mov
inc
outsb
mov
loopne
inc
ret
add
rcrb
pop
test
cmp
pop
inc
and
out
jae
cld
inc
jecxz
add
fiadds
cmp
lret
int
pop
or
cli
lea
out
pop
es
mov
cmpsb
cmc
mov
test
imull
dec
pop
lock
xor
cmp
incl
mov
xchg
cmp
sbb
sub
mov
lock
mov
push
sub
sbb
lock
or
mov
and
or
ds
mov
outsb
sarb
loopne
loope
mov
xchg
or
mov
push
hlt
clc
and
xchg
and
nop
sahf
sbb
push
aaa
in
lea
imul
adc
push
cmpsb
pop
pop
pop
or
adc
imul
lock
lock
xor
fsubs
cltd
xchg
or
cmp
leave
mov
or
les
add
xor
dec
test
jg
add
mov
jae
jno
mov
mov
or
pop
pmaxsw
leave
popf
xor
call
dec
fiadds
xchg
xchg
push
fs
cltd
or
repz
addr16
jecxz
xchg
mov
pop
cwtl
out
adc
ds
andl
aaa
push
adc
enter
lea
movsb
sbb
mov
adc
lods
jl
cmp
dec
mov
subb
testb
mov
imul
sub
out
xlat
daa
cmp
jnp
ljmp
sub
fidivs
cmpsl
push
pop
lods
jecxz
out
rclb
dec
pushf
sub
push
pop
sti
sbb
jbe
xchg
pop
push
iret
push
pop
fcomi
pop
inc
insb
cmp
outsb
sbb
daa
jp
mov
jecxz
sbb
mov
sahf
cmpsb
js
mov
adc
or
imul
test
stos
clc
outsb
jl
scas
stc
stos
lods
add
mov
popf
mov
out
dec
das
cmp
jbe
lahf
inc
mov
pop
call
mov
inc
mov
xchg
insb
adc
shlb
adc
icebp
addl
fs
test
test
aas
shrl
and
jmp
xchg
sbbl
mov
mov
sbb
push
pusha
add
sub
jne
pop
sbb
fsub
into
dec
add
fs
cs
jmp
cmp
sbb
inc
and
adc
dec
bound
jns
sbb
and
or
and
sarl
or
sub
in
test
cmp
inc
sbbl
push
test
xor
sbb
stos
ret
sub
adc
js
shlb
frstor
divb
xchg
pop
enter
stos
sub
push
cmp
sbb
adcb
fnsave
ret
inc
test
in
nop
xchg
in
jbe
pop
cmp
or
pop
daa
adc
out
pushf
and
in
andb
mov
cmc
pop
pop
add
add
xlat
popf
repz
xchg
jecxz
sbb
or
inc
iret
pusha
stc
mov
dec
fnstcw
and
inc
test
cld
sbb
dec
outsb
mov
dec
inc
jp
cmpl
jle
xlat
xchg
cmpsb
popa
cwtl
stc
ja
inc
fucom
iret
loope
iret
lret
push
aas
nop
jmp
mov
mov
inc
ret
loope
or
pop
cmp
mov
jmp
or
sub
fstpl
mov
in
mov
shl
je
push
xor
andb
aad
and
or
push
mov
pop
sub
scas
pop
mov
xchg
push
sbb
iret
aam
daa
mov
mov
ja
add
repz
ds
hlt
stc
aam
js
bsr
mov
xlat
popa
push
and
in
xchg
push
sbb
lods
push
test
divl
pop
and
ror
mov
sbbl
and
fstpt
fs
xchg
lods
push
cltd
inc
push
xchg
and
mov
jmp
push
fucompp
aaa
xor
pop
jp
sub
sbb
xchg
inc
addr16
or
sbb
push
or
loop
add
pop
jge
or
mov
pop
xlat
push
push
or
sub
or
ss
mov
or
and
out
jmp
cmp
push
ds
sbb
lock
or
add
cmp
xchg
jo
cwtl
test
xchg
std
xchg
fs
push
or
xchg
xor
cmpsl
xchg
push
pop
test
xchg
fisubs
outsb
cmpsb
xchg
pop
ds
pop
std
xchg
sub
adc
xor
clc
pop
imul
mov
fsubrs
add
xlat
lock
mov
pop
inc
sarb
push
paddq
mov
mov
call
jmp
sbb
pusha
cmp
insl
push
xor
js
rcll
in
filds
sahf
inc
fildl
les
and
cmp
inc
shl
mov
sub
xor
jecxz
icebp
or
cwtl
pop
das
mov
mov
jge
pusha
cmpltps
imulb
adc
out
sub
add
dec
ds
sub
mov
in
js
in
ret
mov
push
rorb
jg
push
cli
add
jbe
push
xchg
lret
inc
out
mov
fmuls
es
xor
rcrl
leave
add
or
push
fs
pop
jl
stc
repnz
flds
lods
push
cwtl
andl
and
mov
cmpb
xor
push
add
push
add
fdivrs
scas
mov
sub
scas
movsb
icebp
mov
insl
js
ss
jbe
sbb
dec
lcall
inc
sahf
popf
addr16
aas
lcall
push
loop
mov
lahf
mov
fcomp
pop
xchg
dec
out
int
jecxz
dec
or
push
cmp
jge
inc
inc
shlb
stos
js
inc
fcoml
in
cmp
pop
adc
pop
mov
adc
bswap
mov
sbb
mov
into
std
adc
cmc
and
jbe
pop
enter
out
cmp
leave
xchg
xchg
add
cmpsl
mov
imul
repnz
fdivl
add
mov
cwtl
pop
call
mov
mov
mov
or
cwtl
xor
mov
fwait
mov
out
lret
cmp
adc
ret
or
imul
stos
popf
jo
push
cli
shrl
xchg
inc
mov
mov
adc
jae
mov
loope
adc
cwtl
dec
xlat
fs
sbbw
cli
notl
fstpt
mov
push
test
cmp
sbb
aas
sti
mov
xor
mov
adcb
dec
bound
cwtl
or
push
or
aas
mov
pop
xchg
shll
and
and
mov
in
rorb
in
jb
jno
insl
lahf
movsb
scas
adc
testl
out
out
test
add
mov
jbe
mov
je
sbb
mov
dec
ret
or
insl
sbb
lret
sarl
add
inc
or
inc
test
lds
loop
push
ljmp
xchg
and
repnz
mov
lret
mov
jo
mov
push
dec
mov
iret
divb
jge
push
mov
cmpb
mov
inc
das
sub
stos
aas
push
cmpb
sbb
sub
add
mov
mov
gs
pop
subl
xor
mov
in
jp
into
adc
decb
or
hlt
rorl
shrb
adc
fsts
into
pop
aam
repnz
jnp
roll
or
outsb
sub
cmp
repnz
sub
into
pop
xchg
dec
scas
jb
push
scas
arpl
cmp
jge,pn
pop
pop
xchg
cmpsb
jecxz
cs
cmpsb
jmp
mov
ret
adc
or
jecxz
dec
push
mov
xchg
adc
push
iret
sbb
mov
or
icebp
pop
xchg
jle
mov
adc
xchg
sub
daa
jmp
add
sub
jae
ja
and
push
lcall
sub
imul
cmp
pop
and
mov
jl
dec
sub
sub
cmp
lcall
dec
push
lahf
shlb
inc
in
xlat
mov
data16
sub
pop
negb
orl
stos
xor
shll
push
mov
push
in
std
aaa
pop
xchg
enter
daa
pop
jecxz
jl
mov
inc
imul
nop
cmp
out
xchg
sub
mov
aam
dec
cmp
jno
rcll
jmp
sbb
mov
jno
movsb
arpl
push
jp
fisubl
lahf
stc
xchg
sbb
push
cmpsl
push
xor
repz
fimuls
gs
lret
inc
inc
ljmp
jge
xchg
mov
shr
mov
xor
jo
jne
mov
push
sahf
jno
mov
jle
xlat
lds
inc
xor
xchg
sbb
pop
xor
jl
jl
and
mov
sub
clc
jns
add
push
adc
jno
push
rep
and
lea
xchg
jnp
add
mov
cmpsb
xchg
sbb
pop
pop
int3
add
shrb
or
in
shll
sub
clc
mov
sub
sti
and
lcall
in
xchg
mov
add
inc
jge
mov
pop
insl
stos
inc
jae
popf
jns
outsl
mov
mov
movsb
xchg
cmp
mov
scas
jecxz
lods
mov
sbb
xchg
loope
mov
mov
cmp
bound
dec
hlt
jns
pop
aaa
push
rcll
dec
scas
sub
adc
or
inc
add
stos
cmp
dec
push
lods
mov
aam
out
fcomi
cli
enter
movsb
aas
popf
sti
mov
pop
cmpb
in
mov
je
mov
data16
mov
ds
inc
into
xor
jle
lret
mov
mov
mov
pop
movsb
fdivp
adcl
jae
lock
adc
rcl
adc
imulb
or
sub
insb
xor
mov
inc
xor
addr16
sti
in
mov
push
js
and
call
leave
aad
mov
mov
rcr
lock
mov
imull
je
inc
popa
dec
shll
ljmp
mov
add
add
add
std
inc
in
shl
not
daa
pop
repz
fwait
pop
es
push
sbb
insl
inc
fs
inc
jecxz
cmp
mov
nop
xchg
xor
inc
add
imull
cmpsl
sbbb
push
sub
in
fidivl
xchg
push
sub
jbe
das
dec
dec
mov
xor
sbb
pop
cmp
enter
imul
ljmp
ret
jg
add
imulb
xor
push
aad
fidivrl
mov
mov
sbb
mov
push
mov
inc
xchg
daa
mov
xchg
mov
push
cwtl
insb
pop
inc
je
bound
jae
dec
inc
cli
mov
mov
stc
orl
int3
and
xor
adc
dec
mov
mov
imul
pop
js
pushf
mov
jb
cmp
sahf
adc
inc
aam
push
push
sbb
push
inc
sbb
xchg
xchg
cmp
cmc
jle
xchg
add
mov
xor
mov
mov
fwait
scas
add
sub
cwtl
pop
mov
pop
cmp
push
add
sti
fnsave
lret
shl
cs
ret
sbb
into
test
jl
dec
push
sub
cli
xor
add
jo
test
insb
testl
call
mov
and
pop
arpl
scas
add
jecxz
arpl
cld
ss
cltd
outsb
repz
sub
push
test
mov
mov
aas
inc
movsl
pop
ja
sbb
sub
imul
imul
adc
mov
lock
and
xchg
adc
pop
xlat
insl
dec
xchg
xchg
mov
push
sbb
xor
bound
jb
repnz
call
mov
mov
xchg
xchg
push
cmp
pop
sahf
std
xchg
ljmp
xor
fstpt
add
xor
sbb
mov
fwait
mov
lea
inc
cmp
cmpsb
insl
push
sbb
fiaddl
mov
pop
test
dec
cmp
xlat
fildll
je
cli
xor
in
xchg
lret
cltd
xor
aam
inc
pop
cmp
call
sahf
lods
cld
repz
xchg
testl
adc
insb
nop
dec
jbe
adc
ljmp
sub
adc
fcoml
sbb
jle
in
jbe,pn
push
lcall
jg
fldl
jns
lahf
stc
out
es
pop
loop
fdivrs
insl
mov
mov
das
sub
cli
in
mov
ljmp
das
sbb
inc
stos
negl
or
xor
mov
push
stos
in
mov
push
pop
dec
mov
jmp
fnstcw
and
cmc
dec
cmp
inc
fnstsw
cld
mov
jecxz
fwait
add
xor
xchg
adc
xor
xchg
and
jg
fcomip
std
dec
adc
xchg
jg
std
sbb
test
xorl
pop
cmp
mov
xor
push
cmp
sbb
xor
cmp
lahf
out
fildl
dec
in
shlb
xchg
jbe
inc
xlat
stc
rcll
pop
cwtl
idiv
cmp
jl
sti
imul
lock
es
mov
hlt
add
push
pop
cs
stos
add
shl
jmp
loopne
sub
ss
lret
dec
mov
test
ljmp
outsl
inc
mov
and
fisttpll
insl
pop
dec
jp
push
aad
outsb
cli
sbb
xchg
cld
stos
sub
or
push
push
mov
adc
push
cmp
ds
or
aas
repnz
adc
mov
push
mov
push
xchg
ficomps
jmp
xchg
sbb
insl
sti
adc
mov
lds
scas
aam
movsl
andl
cmp
stos
mov
add
cwtl
rorb
mov
cli
mov
add
fstpl
sbb
pushw
insl
push
inc
and
lret
aaa
adc
popf
sub
fs
xchg
and
mov
dec
jno
jnp
setge
mov
out
mov
add
xchg
xorb
or
jnp
jne
fwait
push
in
or
xchg
out
inc
push
subb
addr16
rclb
mov
inc
scas
dec
int3
inc
push
outsb
mov
in
dec
cmpsb
dec
fistpll
add
jg
mov
lods
mov
enter
dec
mov
int3
push
cmp
pop
inc
cmpsb
sbb
xchg
imul
fsts
or
mov
loopne
pushw
xor
dec
addr16
jg
cmp
sbb
pop
xor
cmp
out
lcall
jle
jecxz
sbb
loop
mov
pop
sub
adc
test
fistpl
call
stc
dec
inc
dec
inc
sub
sub
adc
lea
clc
dec
fildll
jbe
add
aas
cld
test
ss
mov
fldcw
pop
jo
andb
cli
and
cmp
inc
in
ja
out
aaa
sarl
dec
mov
rol
jae
icebp
addl
sarl
clc
jp
push
sbb
mov
in
inc
mov
xchg
mov
cwtl
out
cmp
adc
jno
out
add
aam
adc
fstpl
and
and
call
add
push
jg
aad
loopne
sub
pop
mov
mov
pop
xor
cwtl
or
xor
or
movsl
sub
cmc
mov
adc
and
mov
xchg
add
xor
push
cmp
mov
cmp
rorl
rcrb
push
outsb
or
in
or
popa
sti
adc
jp
cmp
lahf
cmc
mov
adcb
inc
cld
pop
dec
or
xchg
dec
jbe
cmp
or
int3
or
xor
cmp
jecxz
sub
xor
push
arpl
arpl
movsb
xor
pop
inc
or
fmuls
dec
outsb
dec
mov
nop
sub
rorb
push
pushf
mov
in
icebp
popf
pop
mov
cmc
mov
enter
push
pop
shrb
pusha
xchg
add
cmp
movl
xor
mov
insb
mov
lds
orb
dec
mov
pop
push
mov
cmpsl
adc
sub
xchg
xchg
xchg
jg
insb
push
repz
roll
gs
mov
ss
push
sbb
pop
mov
inc
push
pop
xchg
andb
cltd
fwait
cmp
mov
mov
mov
dec
cmp
cmp
fsubs
jb
or
aam
das
dec
push
roll
scas
xor
fbstp
insl
mov
xchg
cs
clc
orl
sub
lods
sahf
sbb
inc
pop
mov
imul
mov
dec
aad
jg
sub
ss
sbb
lret
sbb
pop
mov
movsl
enter
sub
das
mov
int3
iret
cmp
mov
out
es
add
mov
inc
mov
faddp
ljmp
xchg
stos
enter
jbe
push
jne
jmp
adc
fs
call
cmp
cltd
sti
sub
cmp
or
in
imul
in
push
fnstsw
push
lret
pop
insb
xchg
test
ljmp
pushf
in
popa
dec
jge
mov
jne
pop
sub
das
push
je
pop
into
lcall
fwait
adc
sub
shl
pop
inc
js
pop
aas
pop
pop
aas
movsl
ss
inc
popf
fucomi
adc
insl
pop
imul
inc
fdivl
icebp
jne
je
push
push
lock
mov
xchg
in
mov
call
and
dec
cmp
jp
or
sub
xor
mov
js
cmp
xchg
lods
and
ret
pop
and
roll
push
adc
push
mov
and
insb
push
iret
mov
outsl
pop
ret
in
idivl
inc
rorl
cmp
fisubl
jmp
sbb
insb
fcoml
inc
jbe
and
jg
jmp
jnp
in
xchg
sub
aaa
adc
fisubrs
addb
test
stc
pop
cmp
hlt
add
popa
negl
xor
pop
ss
adc
or
test
addl
out
dec
add
mov
das
jne
push
pop
adc
xchg
aaa
jns
iret
jne
in
pop
cld
imul
pxor
test
aaa
outsl
push
scas
adc
lea
fcomps
xor
adc
test
or
mov
lods
roll
xchg
jae
lahf
adc
xchg
jmp
sub
test
dec
push
mov
and
push
mov
sti
pop
mov
xchg
xor
mov
icebp
push
jge
stc
pop
and
fdiv
cli
lret
jecxz
stos
cmc
jb
mov
sbb
add
pop
add
and
stc
pop
xchg
xor
sub
add
repz
inc
inc
fstpl
push
es
pop
inc
mov
fcompl
sub
push
outsb
cld
repnz
cmp
xchg
int3
dec
xor
fisttps
jge
ja
jmp
and
int3
xor
mov
loop
inc
pop
mov
jne
cwtl
and
sbb
in
bound
dec
sub
adc
xchg
daa
pop
jb
pop
jo
adc
cld
sbb
int3
push
icebp
popa
mov
mov
jmp
or
scas
xlat
out
jl
cmp
std
arpl
mov
or
cmp
clc
add
mov
aad
xchg
cli
jp
xor
rcrl
xor
mul
pop
cli
lcall
mov
negl
test
or
cltd
imul
mov
outsb
stos
inc
aaa
lret
ret
push
popa
push
pop
jae
lcall
leave
outsb
mov
std
scas
cld
or
outsb
adc
ja
pop
inc
outsb
bswap
dec
loopne
movsl
or
clc
jmp
in
and
test
xor
pop
jo
out
sbb
scas
arpl
hlt
sbb
push
stc
push
or
xlat
and
addr16
mov
insl
push
xchg
push
and
aad
lock
mov
ret
mov
mov
aam
fildll
pop
adc
stos
cs
jb
inc
jge
dec
pusha
call
mov
sub
shrl
jne
xchg
push
test
popf
inc
and
jle
hlt
and
insl
cmp
xchg
mov
test
fdivl
add
mov
ja
dec
inc
xchg
fwait
sbb
fs
jl
int3
popa
add
sahf
inc
and
jns
jmp
fchs
mov
in
cmp
pop
shrb
ret
and
je
jge
adc
cmp
cwtl
fwait
push
xchg
jo
ret
cmpsb
pusha
sub
add
sbb
loop
dec
mov
jge
clc
and
sar
or
std
lods
fwait
in
or
dec
sub
sbb
mov
xchg
in
test
push
add
push
push
jno
ljmp
dec
xchg
in
pushf
add
ljmp
pop
jp
fmul
int
out
pop
and
out
arpl
adcl
pusha
adc
ficoml
outsl
cld
nop
and
inc
adc
out
xor
nop
and
mov
repz
push
sbb
adcb
orl
pop
leave
loope
mov
adcb
jle
mov
and
xor
add
mov
xchg
rolb
int3
jg
mov
jle
mov
mov
adc
xchg
and
jbe
decl
insl
jno
jne
aam
adc
add
xor
mov
lret
sbb
adc
out
push
push
cs
aam
push
mov
sbb
mov
push
mov
sub
inc
lods
mov
aad
inc
cmp
pop
fs
mov
jne
cmc
clc
adc
bound
loop
mov
add
aas
loop
sbb
subl
lahf
xor
in
inc
lds
fwait
dec
jae
shlb
data16
testl
mov
test
mov
stos
or
dec
outsl
out
jnp
xchg
lcall
loop
std
mov
cmp
iret
push
xor
inc
addr16
aaa
push
lahf
fabs
ja
sti
jns
dec
jns
and
fcmovnb
jo
xchg
frstor
clc
clc
mov
lock
add
fisubrl
pop
daa
or
imul
push
icebp
pop
inc
adc
adc
inc
xor
pop
mov
jo
imul
sbb
jns
jp
aas
jae
shll
lock
xchg
adc
lods
stos
cmp
jmp
add
popa
inc
jb
ret
aaa
insb
into
das
insl
xchg
pop
mov
mov
pop
test
popf
cmpsl
imul
push
in
mov
leave
loope
or
mov
push
sub
mov
pusha
stos
test
adc
adc
xchg
sbb
pop
mov
outsl
push
xchg
mov
insl
adc
andb
popa
dec
adcl
notb
pop
dec
psubusw
sub
pop
cmp
cwtl
cmp
fbld
mov
push
les
popf
pushl
mov
sub
pop
mov
cmpsb
pop
sub
adc
test
jl
xchg
pop
outsb
leave
inc
les
xlat
ja
nop
lods
mov
mov
pusha
jnp
into
aam
jns
push
mov
pop
into
lea
in
data16
in
pop
roll
lahf
push
daa
in
mov
subb
adc
push
lcall
hlt
xchg
fstl
xor
sbb
cltd
jb
or
cmpsl
in
pop
clc
mov
loope
mov
xchg
adc
mov
sbb
adc
hlt
js
int
mov
sbb
clc
std
pop
mov
sub
jne
pop
sbb
mov
sti
arpl
dec
add
adc
stos
icebp
mov
push
cmpsb
pop
mov
push
imul
adc
testl
popf
out
adc
xor
jmp
aas
rcrb
xor
insl
cld
rclb
pop
pop
jne
xchg
push
popf
cmc
mov
pop
rclb
pop
push
out
pop
pop
lods
testl
xchg
pop
ss
push
enter
test
pop
xorl
jg
flds
lods
mov
dec
or
stos
js
jmp
fdivrs
push
xchg
mov
xor
xchg
outsb
lods
add
inc
popl
jmp
lds
rorb
adc
dec
pop
jne
mov
loopne
aaa
mov
xor
cmp
outsl
into
push
xlat
jge
adc
xor
std
push
aas
xlat
enter
jecxz
sbb
push
and
mov
js
jbe
repz
jp,pn
gs
test
mov
jbe
test
dec
mov
sahf
or
xchg
scas
xchg
jo
fistl
aas
pop
cmpsb
jo
and
gs
lret
adc
push
rorl
lcall
pop
mov
dec
xchg
scas
and
push
lret
sbb
sub
data16
mov
nopl
mov
and
xchg
pop
cmc
push
data16
adcl
mov
hlt
sbb
std
lcall
xor
rclb
cmp
sub
pop
xchg
jne
outsl
popa
call
enter
lods
divb
mov
out
mov
leave
dec
mov
leave
mov
je
test
push
ss
sbb
movsl
ljmp
aas
fcompp
xchg
aam
out
jns
out
pop
jno
mov
inc
js
inc
or
dec
adc
rol
loope
cmp
arpl
pop
mov
sbb
mov
push
in
in
jb
or
enter
call
adc
arpl
xlat
es
cltd
data16
stos
lahf
fiaddl
add
ret
outsb
xchg
jb
add
sub
es
lods
lcall
movsl
xchg
cld
cwtl
sbb
jl
push
xor
push
or
icebp
aam
inc
xchg
cmp
mov
subl
mov
cli
push
push
fwait
xor
xor
repnz
mov
jl
cmpb
cld
icebp
pushf
ret
ja
aam
movsb
xchg
mov
sub
les
xor
mov
fisttps
jle
imul
test
mov
test
scas
cmp
adc
xor
sti
adc
rolb
cld
lods
or
cmp
fistps
xchg
je
adc
frstor
lcall
test
sbb
cmp
jg
xchg
pop
rcr
mov
sti
subb
aad
push
inc
sub
dec
xchg
dec
jp
inc
jne
push
xchg
mov
addb
lock
out
pop
xchg
cli
or
out
movsb
popa
push
mov
or
inc
sbb
addr16
dec
pop
cmpsb
pop
repz
mov
imul
outsl
or
shll
out
fsubrs
icebp
adc
mov
pop
xchg
sbb
lds
push
pusha
popf
mov
cmp
cli
and
call
outsl
addl
push
call
xor
xchg
cmp
mov
dec
sbb
cwtl
cmpsl
repnz
adc
outsl
xor
mov
inc
scas
scas
test
addr16
loope
mov
xchg
call
fnstsw
data16
push
lret
mov
sbb
push
sub
xor
scas
and
jle
push
dec
mov
push
popf
daa
mov
mov
sub
data16
pusha
daa
xchg
cmpsb
enter
cmp
add
lock
fs
jns
and
jb
mov
addr16
inc
mov
inc
and
cli
dec
filds
mov
test
or
mov
popf
scas
ret
jge
xchg
lcall
or
xchg
scas
xor
stos
test
or
pop
mov
cmc
insl
cmp
inc
push
mov
jg,pn
dec
fwait
rcr
mov
stos
fldl
dec
cmp
imul
xchg
push
mov
in
loope
pusha
mov
out
test
sbb
push
lret
dec
fidivl
sbb
push
xchg
xor
scas
popf
jns
orb
fists
sbb
push
js
and
xor
in
ljmp
enter
aam
inc
daa
jg
gs
cmpsl
iret
inc
xor
mov
xor
add
lods
mov
pop
in
jp
je
xchg
push
in
divl
cmp
jb
adc
in
cmc
imul
popa
sahf
jge
lahf
xchg
rol
fsubl
mov
lret
test
hlt
adc
mov
jp
mov
xor
add
pop
gs
jbe
and
fcompl
iret
ds
jg
and
xchg
repz
sahf
cs
loope
sbb
adc
push
or
pop
adc
flds
dec
loop
mov
sbb
cmp
hlt
mov
fs
xchg
mov
push
jmp
mov
mov
lahf
in
and
rcl
lea
shlb
dec
push
mov
push
mov
je
xor
comiss
mov
cmc
jg
adc
imul
mov
sbb
and
scas
and
test
mov
test
ja
cmp
shr
push
mov
mov
adc
fldt
scas
inc
cmp
rorb
lret
add
adc
inc
xor
and
cmp
push
nop
xchg
push
cld
xchg
cmpsl
dec
aad
bound
lahf
fs
scas
pop
push
jecxz
jp
std
xchg
ret
adc
aas
push
xlat
int3
jae
sbb
jmp
dec
mov
cmp
xchg
imul
test
gs
movsb
cmpsl
call
push
ds
push
je
and
gs
and
pop
cli
jle
movsb
adc
std
and
push
sub
int
sbb
imul
push
pop
mov
hlt
je
mov
js
mov
movsb
add
dec
xchg
xor
or
and
das
sbb
test
stos
jecxz
jae
xor
in
rcll
and
jle
sbb
xor
xchg
in
cmpsl
and
sti
insb
sbb
shl
push
push
inc
xchg
push
pop
cmp
scas
pop
pop
add
xor
scas
or
pusha
sub
push
fstps
jp
aam
loope
cmp
xor
jb
testl
add
and
jl
xchg
jno
jo
scas
ljmp
pop
jg
lret
inc
fdivrs
ret
cltd
movsl
lock
daa
jl
js
xchg
out
cmp
test
and
xor
int3
out
movsl
inc
lret
rorl
jge
arpl
cmp
jecxz
push
mov
adc
inc
loop
xchg
ret
dec
push
js
xor
clc
or
cmp
pop
loope
pop
cwtl
cmp
negb
or
cmp
rol
lret
dec
mov
sbb
inc
out
test
in
mov
insl
xor
dec
and
mov
fnstenv
xor
fldt
call
mov
gs
xchg
inc
push
sbb
jecxz
jl
cmp
adc
rol
fstl
iret
pop
hlt
mov
sarl
adc
push
fwait
pop
jbe
dec
and
rcrb
xorb
leave
inc
jecxz
push
mov
shl
cmp
cli
lds
mov
daa
clc
mov
notl
cltd
sub
jge
mov
mov
popf
test
addr16
in
xor
cmpsb
or
add
push
iret
fistpll
test
fmuls
into
pop
mov
jnp
mov
mov
inc
xchg
xchg
xchg
hlt
lods
cmp
push
and
dec
mov
push
idivl
test
iret
push
pop
mov
and
mov
push
pop
fwait
gs
and
jl
dec
out
dec
mov
lea
dec
jge
sbb
pop
jecxz
dec
cmpsb
fcompl
mov
ret
push
mov
mov
push
cmp
mov
jne
addr16
pop
mov
inc
test
maskmovq
fcomp
mov
add
addr16
daa
cmpsb
scas
movsl
inc
mov
insb
cmc
insb
push
jbe
add
jmp
lret
jge
sarb
aam
dec
push
dec
add
adc
popa
fidivrs
andl
iret
adc
xor
xchg
cmc
inc
jnp
adc
pop
stos
or
inc
mov
dec
mov
mov
mov
sarl
add
adc
mulps
jae
ss
mov
out
sbb
inc
pushf
xor
repz
fisttpl
lods
pop
jge
int3
testb
pop
and
adc
aam
xor
insb
push
loop
xchg
lds
jbe
gs
imul
lret
add
pop
xor
inc
add
xchg
jo
inc
into
and
sbb
inc
negl
sbb
lds
icebp
mov
adc
cwtl
pop
sub
or
push
pop
mov
mov
xchg
mov
gs
shr
add
cmp
adc
mov
pop
or
lahf
mov
sub
fwait
lea
and
fldcw
push
inc
loopne
out
dec
cmp
adc
adc
adc
jge
dec
mov
inc
mov
std
jb,pt
lcall
jns
popa
or
scas
sub
int
xor
pop
leave
bound
dec
in
push
lahf
das
jne
inc
andb
sbb
in
sbb
ret
xchg
or
or
xchg
popf
pop
clc
jnp
pop
pop
add
push
lret
fidivrl
pop
jnp
popf
inc
mov
sub
push
inc
cmc
stc
popf
xor
xchg
cs
in
inc
xchg
outsb
das
lock
test
add
lods
lret
fists
sahf
hlt
in
sub
out
inc
out
aas
ret
pusha
sub
or
xor
cmp
xlat
enter
in
insl
dec
mov
je
mov
push
pushl
mov
jae
jbe
add
popa
inc
xchg
or
mov
add
cli
rorl
push
xor
popa
fs
leave
loop
add
orl
bound
pop
mov
aas
out
pop
ljmp
mov
fcoml
ret
popf
inc
test
leave
adcb
movsl
lds
dec
mov
fisttpll
mov
fucomp
sti
mov
mov
repnz
scas
ja
push
or
push
sbb
repz
leave
xchg
mov
insb
jg
pushf
xchg
mov
jg
fcoms
imul
fisubs
mov
cmpsl
adc
mov
adcb
lret
mov
insl
and
mov
add
mov
push
add
iret
js
icebp
and
inc
aam
test
int3
pop
xor
lock
mov
aas
insl
push
or
jns
outsb
lret
icebp
and
mov
lret
fs
stos
fcmovbe
cmp
mov
das
jle
jmp
mov
addb
cmpsb
cmp
out
dec
into
lret
inc
push
mov
cmp
scas
js
mov
jl
aas
and
jle
repz
into
data16
lret
stos
jno,pt
push
shl
cmc
jg
outsl
ljmp
ja
scas
pop
mov
cmp
pop
mov
aas
fucomp
dec
pop
jge
enter
push
das
insb
dec
or
push
fcomip
and
iret
and
push
cmp
dec
cmc
pop
in
aad
pusha
popa
outsb
dec
fcmovb
fidivl
jne
test
and
popa
dec
mov
mov
adc
dec
fwait
divb
test
fcmovne
add
loop
and
leave
lods
add
push
fildll
push
sbb
out
cmc
movsl
test
xor
adc
les
jbe
cmp
inc
pop
push
mov
fidivs
enter
repz
repnz
and
outsb
fxtract
push
movsb
push
sub
outsl
ret
mov
bound
popa
mov
test
mov
mov
stos
fstpt
add
popf
pop
ss
mull
jns
xchg
ja
adc
mov
pop
inc
rcrl
insl
add
mov
mov
fcmovbe
mov
setne
mov
cmpsl
mov
movsb
mov
inc
dec
ret
shl
es
fimuls
mov
add
rcrl
subl
jecxz
test
repz
inc
cmpsl
inc
lahf
mov
lods
fwait
add
xorl
add
push
test
jo
xor
in
pop
ja
ss
mov
inc
pushf
mov
bswap
mov
xor
jnp
pop
push
pop
xor
jns
cs
repz
jge
scas
adc
andb
sbb
mov
js
in
jne
and
shrb
out
push
jbe
mov
subb
cmp
push
dec
hlt
dec
sbb
cmpsl
hlt
arpl
or
stos
add
cli
dec
jecxz
inc
out
or
xchg
in
mov
out
outsb
cs
dec
jbe
enter
movsl
aas
in
sub
jae
pop
mov
nop
enter
sbb
adc
add
pop
xor
inc
cmpsl
jae
in
cmp
mov
in
mov
popf
das
inc
sbb
loopne
stc
and
call
and
pusha
xchg
call
xor
rdtsc
imul
repz
and
cmp
mov
adc
dec
stos
aad
push
inc
cmpsb
xchg
dec
xor
mov
inc
dec
add
push
in
pop
jns
xlat
sbb
jp
aaa
scas
add
mov
sahf
movq
lock
mov
repnz
stos
stos
nop
sbb
je
je
adc
shl
cmpsl
test
cld
addr16
adc
test
mov
sbb
xchg
sahf
dec
fisubl
fidivrl
xor
sbb
add
adc
mov
aaa
push
mov
pop
xor
xor
dec
movsl
lock
xor
imul
inc
or
sbb
jo
cli
sbb
cmp
mov
pop
in
cld
adcl
mov
ja
push
mov
fidivrl
imull
jmp
iret
dec
jns
enter
and
insl
pop
jp
sbb
rol
out
pushf
iret
sbb
cld
cli
jb
xchg
adc
xor
shl
icebp
push
cwtl
sbb
xorl
cmpsb
shll
out
cmc
jecxz
push
inc
lods
data16
aaa
test
leave
test
addl
aas
movsb
ds
in
dec
rorl
hlt
out
aaa
mov
mov
xor
dec
sti
cmpl
fisttpll
and
cmpsl
aam
sahf
adc
push
mov
insb
test
xchg
lock
js
and
pop
jge
lcall
out
sub
pusha
aad
sbb
mov
lea
out
or
cs
iret
lcall
mov
sbb
popa
mov
cmc
fprem
int3
jnp
out
pop
fdivrs
mov
es
int3
pop
jecxz
shll
mov
add
sub
sbb
add
jne
lret
into
fucomp
or
adc
xchg
pusha
scas
add
loopne
pop
jle
dec
test
xor
dec
movsb
pop
arpl
sbb
inc
dec
aas
mov
mov
adc
ds
js
xchg
xchg
jp
push
bnd
xchg
adc
ljmp
pop
pusha
ds
xor
jns
scas
cmp
mov
sub
push
xchg
repnz
pop
int3
cmc
daa
int
je
cmp
aas
adc
pop
push
sar
jb
mov
mov
mov
dec
aad
cmp
xor
cwtl
es
mov
cltd
xor
xor
sbb
ljmp
arpl
test
pop
pushf
or
xchg
xchg
loope
loopne
fimuls
adc
jl
mov
pop
push
rorl
repnz
stos
out
decb
mov
pop
das
pop
les
fs
out
sub
popf
mov
fistps
mov
lret
cmp
pusha
push
dec
mov
sub
inc
int
sbb
stos
add
xorl
xchg
pop
xchg
test
movsl
rclb
sbb
push
dec
dec
fcomps
cmp
or
outsl
ds
cwtl
jae
repz
mov
pushf
bound
mov
pop
push
shlb
out
aas
sbb
pushf
repz
inc
jno
int3
dec
fwait
xlat
cmp
mov
mov
mov
sahf
loopne
jp
and
je
sub
daa
cmp
neg
cli
jbe
xchg
call
int
inc
pop
ret
pop
xchg
adc
inc
xor
fdivl
ss
dec
mov
insb
mov
inc
or
add
ret
imul
enter
fsubs
ficompl
pop
sti
push
andb
aas
mov
or
add
stc
mov
repnz
fs
push
rorl
pop
sub
popf
pop
mov
sbb
outsl
fistps
mov
orl
test
rclb
cmovle
in
dec
or
cmp
mov
sbb
mov
stos
and
or
add
mov
sahf
pop
shl
mov
mov
jne
and
in
cmp
test
push
lcall
and
fstps
lock
xchg
mov
xorb
push
ss
pop
cmp
pop
dec
leave
and
sbb
loopne
and
lods
fidivl
push
jbe
jnp
jmp
or
fs
adc
inc
das
dec
or
jno
adc
inc
mov
inc
outsl
mov
mov
lods
gs
loope
cli
pop
insl
mov
aam
sbb
clc
movsl
sti
inc
sahf
mov
jnp
sbb
mov
inc
dec
call
push
mov
arpl
add
mov
mov
dec
add
lock
or
jmp
mov
mov
dec
jmp
in
ret
out
sub
mov
fbstp
jne
fnstsw
in
cmp
jg
xor
mov
xchg
add
fiaddl
lret
sti
shlb
loop
mov
in
sub
es
std
jge
or
cmp
daa
xor
jge
xchg
mov
mov
and
sub
leave
iret
xchg
xchg
mov
pop
add
paddsb
dec
jbe
jnp
mov
stos
push
loopne
sbb
pop
cmp
or
ret
push
sbbb
push
or
stos
xor
lret
xchg
inc
xchg
cmp
xlat
mov
or
mov
xor
jmp
sti
mov
sub
mov
cmp
sub
cmc
sbbl
mov
int
std
inc
xor
rorl
and
outsl
stos
lds
je
nop
test
sbb
addl
jnp
cmp
sub
imul
sahf
rcl
clc
scas
mov
mov
jecxz
mov
xchg
imul
rcrb
stos
mov
add
insl
or
dec
dec
addr16
mov
imul
loop
negb
in
push
xchg
sbb
ss
into
inc
and
mov
cs
xchg
push
aaa
adc
or
aad
popf
sub
movsl
xchg
pop
bound
nop
fsubrs
jno
shrl
std
mov
sbbb
jle
sbb
sbb
test
mov
out
xchg
add
xchg
jecxz
sbb
call
xchg
xchg
addr16
sbb
int
in
scas
iret
dec
inc
test
dec
push
in
insl
dec
dec
mov
pop
loopne
rcr
fld
inc
and
outsl
insb
dec
popf
jle
repnz
dec
inc
xchg
das
sbb
cmp
mov
adc
je
jmp
outsl
mov
push
into
mov
int
jmp
xchg
insb
pusha
push
cld
add
rolb
icebp
pop
cmp
push
jg
test
lock
testl
rorl
addr16
imul
pop
fstl
xor
ret
imul
outsl
push
or
lods
lcall
mov
dec
daa
inc
aad
inc
sub
inc
fs
mov
into
jae
mov
out
insl
push
lock
in
mov
sub
scas
fs
xor
sub
dec
mov
jg
scas
enter
pop
push
sub
mov
pop
dec
mov
bound
inc
mov
loope
mov
or
fdivs
adc
out
push
stc
push
xlat
mov
mov
int
es
pop
lahf
fistpll
scas
enter
mov
sbb
mov
xchg
push
jae
jecxz
dec
push
push
pop
in
lcall
jp
inc
sahf
push
les
js
inc
notl
sti
mov
jno
mov
rclb
cmp
js
xor
gs
dec
xchg
mov
xlat
mov
mov
mov
mov
aaa
pusha
adc
std
pop
outsl
clc
in
inc
leave
inc
data16
push
push
jo
stos
mov
or
test
sahf
scas
ficomps
fld
add
mov
test
mov
mov
mov
push
pop
lcall
push
std
sbb
in
sbb
xchg
xchg
dec
push
sub
lahf
stc
sub
test
mov
mov
mov
cs
jo
mov
scas
pop
ret
imul
subl
hlt
pop
xor
cmp
xchg
and
das
jge
mov
jg
inc
js
stos
mov
aas
add
xchg
dec
fldt
inc
data16
arpl
push
jbe
pop
mov
pusha
mov
sti
lcall
int
out
in
test
lods
gs
xchg
xor
ds
pop
dec
xor
mov
dec
sbb
data16
mov
rclb
mov
repz
mov
repnz
and
incb
pop
scas
mov
roll
cmc
pop
cmpsl
adc
shlb
ja
jecxz
aam
jbe
xchg
cltd
and
fs
mov
ret
inc
adcl
xchg
ja
jns
inc
cmp
xchg
push
and
cld
lret
outsb
mov
iret
sbb
add
mov
mov
cmp
xchg
add
test
add
mov
xchg
add
dec
xchg
push
pop
jno
in
cmp
xor
xchg
iret
cmp
and
aad
in
stc
or
push
add
inc
lds
cmpsb
push
xorl
push
ja
aaa
jge
or
in
test
iret
adc
add
add
add
xor
stos
shrl
sbb
stc
stos
mov
mov
jnp
push
and
adc
ret
jns
jb
insb
inc
xor
jnp
lcall
push
mov
mov
jns
mov
iret
push
sahf
shll
mov
mov
xchg
pop
jbe
fisubl
pop
fs
shlb
popa
ds
in
daa
loopne
inc
lods
ja
mov
inc
add
mov
ja
sarl
pop
add
movsl
sub
cmpsl
and
test
mov
int
and
fwait
inc
cltd
add
mov
les
cltd
shl
push
movsb
stos
jle
lcall
imul
sub
sub
decl
jae
js
mov
cmp
mov
sbb
or
mov
and
sbb
inc
and
and
out
mov
jnp
enter
out
mov
push
mov
and
jns
nop
mov
push
inc
mov
xchg
inc
xor
xchg
aad
sbb
lea
add
popa
add
into
popa
lcall
jns
lea
mov
xchg
fsub
fs
jle
ret
out
mov
in
cmp
jnp
int3
in
mov
fiaddl
loop
jg
mov
stos
pop
lahf
adc
repnz
pop
scas
jae
mov
xchg
lcall
sbb
mov
or
jo
test
jbe
js
mov
mov
xchg
out
mov
mov
or
sahf
arpl
xor
dec
dec
daa
outsl
jecxz
xchg
out
inc
lock
xor
push
xchg
lcall
jbe
jb
push
sub
dec
mov
loope
clc
insl
mov
add
ret
pop
jmp
dec
adc
fwait
in
add
jns
pop
stos
pusha
insl
imul
aad
or
xchg
gs
or
mov
int
push
out
scas
pop
and
mov
shrb
or
lock
pusha
aas
ljmp
jo
mulb
mov
ret
enter
arpl
test
and
and
jl
pop
das
mov
dec
lcall
lds
negb
out
fdivl
pop
inc
xor
ja
sub
push
jae
dec
and
movsb
fcmovbe
jnp
cmp
and
shlb
or
xchg
repnz
cmp
add
inc
clc
xor
inc
sbb
insl
scas
cmpsl
mov
bound
sub
and
mov
jl
js
icebp
jmp
loopne
divps
jg
pop
cmp
roll
cmp
sbb
lods
mov
inc
aad
jmp
push
cwtl
jmp
int
or
push
enter
pop
test
loope
mov
test
xchg
cmp
test
xchg
sub
popa
aas
and
fs
pop
aad
idivl
gs
cmp
push
in
jge
into
aas
jnp
aaa
jmp
cld
xchg
sbb
xchg
int
test
mov
in
outsl
test
sub
xor
fcmovnbe
fs
cmpsb
lcall
divb
scas
xchg
push
dec
ljmp
cmc
popf
clc
cwtl
insl
test
daa
pop
pop
addb
mov
xorl
fisubs
mov
and
xchg
inc
xchg
xchg
cmp
outsb
rcrl
jne
and
mov
mov
mov
cmp
ficomps
add
dec
mov
mov
adcb
xor
into
mov
xlat
cmpb
sub
inc
mov
mov
xchg
cmp
adc
push
in
sub
sub
testl
stos
pop
jp
dec
outsb
jg
rol
loopne
int
fldt
notb
or
idivb
jmp
daa
pop
pop
test
dec
xchg
xor
insb
push
cwtl
dec
daa
dec
shlb
stos
pop
test
aas
ds
pop
fisttpll
sarb
mov
iret
dec
cmp
insb
enter
jb
jb
xor
push
lds
insb
sar
cmp
sbb
mov
mov
adcl
cmp
mov
adc
ret
fisttps
mov
mov
and
lods
das
ja
pop
lods
dec
and
loop
loope
jge
fisubrl
sub
push
xor
and
add
xchg
cmc
leave
cmpb
inc
imul
scas
pop
push
stos
out
decl
ss
add
push
pop
jnp
pop
xor
in
push
out
jns
jo
mov
flds
js
out
and
stc
mov
cs
push
cmp
xor
adc
mov
push
dec
add
push
push
mov
in
idivl
mov
cmp
hlt
sbb
xchg
aad
out
push
inc
or
mov
cmp
ss
or
ja
xor
and
std
inc
sub
neg
sbb
mov
scas
jb
in
jmp
xchg
and
lods
pop
push
xchg
xor
scas
aaa
fadd
mov
dec
or
xlat
or
push
cmp
pop
cmp
rcl
pop
ja
popa
fdivl
adc
loopne
adc
repnz
adc
push
mov
or
movsb
xchg
sbb
jae
dec
dec
xchg
dec
dec
leave
adc
sub
xor
lahf
sbb
inc
xchg
sub
fwait
test
out
and
lahf
imul
xor
rcr
jl
push
cltd
fldcw
push
push
mov
jnp
sub
aad
fptan
inc
fs
sahf
mov
je
out
shll
sub
mov
cld
or
or
mov
shlb
mov
enter
cmc
scas
xor
shrl
xlat
and
cmp
mov
andb
imul
dec
call
inc
mov
insl
cmp
popa
pusha
jle
or
fsubrl
call
xchg
add
insw
pop
mov
xor
xor
adc
sbb
mov
int
dec
cmpb
jb
or
push
add
xor
stos
mov
push
xlat
jbe
push
pop
in
sbb
mov
cld
inc
push
mov
adc
shll
jg
mov
inc
adc
dec
aas
fidivrl
and
iret
jmp
mov
dec
in
test
adcb
jae
jmp
lret
ss
xchg
test
or
in
xchg
pop
add
sub
test
das
jp
dec
jno
je
aas
sub
adc
mov
addb
jle
sahf
mov
mov
or
inc
enter
push
outsb
mov
sub
push
orl
popa
pop
inc
pop
pop
ss
pop
mov
or
and
fidivrl
pusha
xchg
loopne
xor
jno
sbb
out
dec
ret
icebp
mov
je
cli
xor
insl
das
push
push
mov
in
mov
int
push
ficomps
cmp
mov
pop
mov
into
sbb
push
fildll
lahf
inc
inc
outsb
sbb
sub
daa
loope
inc
mov
scas
ret
push
incl
addr16
cwtl
mov
sbb
lock
push
add
andb
daa
sbb
jb
ret
or
andl
dec
ds
movsl
lds
inc
sub
mov
mov
fnstsw
ds
lock
fs
push
cmp
sub
ds
loopne
pushl
out
cmovbe
loop
jae
mov
in
stos
je
push
xchg
xchg
cmp
popa
call
pop
data16
out
dec
jo
fstpt
test
ficoms
dec
fildl
sbb
pop
rcrb
arpl
sub
iret
repnz
out
mov
jns
pop
or
aaa
mov
or
pop
movsl
lahf
mov
fmull
inc
pop
and
adc
push
sahf
mov
inc
sbb
cmc
cmp
jns
jne
push
push
je
inc
nop
fbld
gs
lcall
pusha
inc
aaa
enter
pushf
outsb
push
push
iret
gs
ret
push
aas
add
outsl
cmp
xor
jmp
fs
testl
push
lcall
adc
bound
ret
push
cmpl
inc
mov
std
std
push
mov
mov
xor
std
aam
mov
xchg
or
nop
push
mov
add
gs
or
mov
movsl
int3
cmp
sahf
sub
dec
sahf
dec
jae
inc
stos
fldl
xlat
into
jl
xor
or
or
sti
mov
fstpt
pop
adc
inc
pop
xchg
mov
pop
push
adc
cmp
cmp
imul
cli
mov
stos
aaa
push
dec
or
pop
xchg
in
cmp
mov
xchg
mov
lods
sarl
mov
or
sbb
and
int3
or
or
stc
pop
xchg
test
dec
or
iret
adc
daa
jno
fldl
mov
sbbl
ficoml
inc
push
testl
sahf
inc
cltd
pop
xor
cmp
mov
lret
iret
fnsave
cltd
dec
nop
and
mov
test
fwait
mov
dec
and
and
mov
outsl
lret
fdiv
insb
xchg
loop
and
fisubs
jge,pt
pop
je
push
loopne
push
jb
lods
xchg
or
mov
lea
dec
lcall
test
xor
bound
mov
add
pop
cmp
push
pop
sub
scas
pop
adc
cmp
in
mov
xchg
mov
cmp
das
lods
cmpsb
cmp
jbe
test
data16
ljmp
movsl
pop
test
ljmp
jmp
adc
push
cs
fcompl
ret
aam
paddsw
popa
call
jne
pusha
aam
into
mov
lret
lret
jg
mov
inc
inc
iret
pop
xor
add
imulb
xor
aaa
pop
mov
pop
cmp
popa
test
mov
cwtl
lds
clc
notb
mulb
mov
push
mov
rorl
cld
push
adc
insb
mov
sar
xor
aaa
je
pop
push
add
fstpt
inc
lahf
dec
lock
mov
popl
jg
mov
in
and
xchg
push
add
cmpsb
stc
adc
ffreep
jo
jnp,pt
aam
sub
test
push
outsl
mov
stos
jmp
mov
inc
or
dec
test
xor
loopne
inc
push
fldcw
ret
in
das
push
and
ljmp
fisttps
dec
xlat
push
push
imul
imul
mov
mov
cld
stc
mov
aas
hlt
out
push
inc
call
repnz
pop
int3
mov
nop
add
movsb
cmp
cli
jecxz
stos
subb
pop
dec
sub
inc
add
xor
lcall
hlt
add
xorb
mov
inc
mov
push
insl
cmp
aam
jne
les
cmp
adc
popf
loope
nop
push
fildl
jb
es
aad
push
jns
xchg
sub
popf
push
xchg
in
mov
mov
sbb
mov
out
mov
dec
cmp
mov
enter
mov
mov
cmpsl
inc
fs
mov
pop
dec
aad
rclb
mov
and
add
lret
add
fucomip
fdivrs
inc
sbb
cmc
inc
xchg
cltd
add
lcall
xchg
in
sub
test
mov
adc
fistps
lahf
sti
into
sbb
push
push
mov
sbb
dec
daa
xchg
lea
nop
push
inc
xor
inc
in
pop
clc
mov
inc
mov
jbe,pn
xor
fnsave
aad
xlat
sub
fiadds
push
test
inc
rcrl
insl
sub
addr16
js
and
sub
or
ret
mov
pushf
dec
daa
clc
sti
aas
fiadds
out
jmp
and
adc
xor
out
push
cmp
jne
out
push
pop
inc
sub
popa
fwait
mov
pop
aaa
mov
clc
hlt
jno
sbb
cltd
sbb
icebp
cmp
cmp
xchg
popf
mov
inc
pop
fdivl
jl
pop
loope
jl
in
xlat
inc
dec
pop
dec
out
dec
js
dec
out
repnz
out
sub
jo
fisubrl
stc
mov
mov
pop
pop
jb
ror
aas
clc
jmp
jge
mov
mov
sti
stc
mov
jl
mov
sbb
xchg
mov
cwtl
sbbb
mov
shld
add
push
outsl
call
xor
loopne
lcall
test
and
gs
cmp
or
jle
push
push
sbb
sbb
xchg
enter
and
sbb
push
or
aam
cmpsb
std
out
out
sub
addl
data16
jle
bound
adc
mov
int
and
inc
test
jb
lar
arpl
imul
ret
into
pop
cld
add
jno
push
aas
js
sub
inc
lds
and
imul
test
mov
mov
lds
jo
pop
fistpl
out
cltd
pop
mov
sub
loope
sbb
push
int
mov
inc
movsl
pop
not
cmpsb
les
push
mov
bound
pushl
cs
hlt
test
test
lret
xlat
inc
mov
push
into
add
xchg
or
adc
mov
or
dec
mov
sub
xor
out
push
inc
push
mov
jae
in
adc
xchg
cmp
imul
mov
pop
adc
sbb
pushf
xlat
jge
cmp
xor
jge
insb
ljmp
fdivr
test
mov
cli
andb
hlt
dec
fldcw
jb
das
inc
test
jg
loope
dec
push
xchg
repz
fsubs
mov
mov
pop
mov
push
or
cmc
push
jmp
jge
pop
dec
cmpl
lret
pop
imul
push
cmp
mov
es
add
push
popf
rclb
or
xchg
repnz
xor
sub
add
push
pushf
and
mov
jno
enter
test
lret
adc
mov
dec
in
jg
clc
movsb
lret
xchg
push
aaa
ret
cs
je
popl
mov
in
fadds
mov
pop
lret
mov
es
imul
lea
pop
lcall
lea
pop
mov
add
sbb
iret
pop
rcr
push
jge
push
call
pop
sbb
leave
movsl
cmp
lret
ret
xor
pop
push
andb
inc
mov
mov
xchg
mov
or
push
mov
rcll
pop
inc
fimuls
in
pop
es
scas
mov
mov
mov
mov
push
xchg
cltd
out
cli
movsl
movsb
push
and
dec
dec
dec
arpl
mov
add
add
mov
jnp
gs
xchg
sbb
icebp
cwtl
add
int
sub
mov
jge
jmp
cltd
jno
adc
in
pop
mov
jae
pop
jne
or
popa
sbb
mov
cmpsb
aaa
mov
pop
fdivs
orl
mov
das
imul
rorl
js
lcall
sbb
mov
ljmp
loope
cmc
mov
cmp
xchg
loop
js
pushf
cmp
inc
sbb
fnstsw
cld
mov
in
gs
xchg
stos
imul
pop
xor
lds
insb
mov
fsubp
out
negb
jmp
add
dec
outsl
sahf
jg
sub
xchg
mov
mov
ljmp
mov
or
adc
cmp
ds
cltd
subb
int3
jo
popf
lods
loop
lock
pop
sub
mov
jmp
js
jmp
fcoms
cli
cli
dec
pop
out
roll
fistpll
mov
mov
call
mov
jecxz
xchg
xchg
push
cs
dec
gs
mov
les
js
pop
fwait
outsl
negl
sub
fcmovnb
in
adc
mov
xor
sbb
xor
and
pop
add
fwait
mov
cli
ljmp
leave
mov
xchg
xor
or
xchg
mov
leave
xor
add
cmp
push
inc
mov
pop
add
cs
fisttpll
pop
ljmp
inc
popa
xor
jbe
daa
icebp
ja
repz
subl
scas
adc
sahf
repz
das
aam
xchg
test
out
xchg
inc
sub
or
iret
mov
sub
insl
shl
rorl
mov
xchg
sub
inc
push
mov
push
test
ljmp
push
int
aad
inc
lds
sub
fistl
jbe
sahf
aad
shrb
sub
mov
push
scas
icebp
mov
or
stos
jmp
es
jmp
and
jnp
cli
int3
pop
push
ljmp
mov
sub
and
jmp
ret
push
push
xchg
leave
cmp
jnp
in
movsl
out
pop
js
dec
push
cmpb
xchg
and
push
int3
dec
test
mov
scas
pop
hlt
lcall
cmp
mov
jns
pop
mov
mov
dec
in
lcall
shll
mov
xchg
xorl
cli
test
cwtl
scas
lea
std
negb
jae
xor
jno
scas
cmp
stc
in
fbstp
in
aas
aaa
mov
mov
loopne
sub
sbb
test
push
xchg
jno
add
mov
mov
lret
push
push
movsb
test
iret
ss
push
cmp
sti
xor
cmp
inc
fadds
out
push
add
adcl
mov
pop
jmp
cs
scas
lds
stc
pop
lods
sarl
js
push
lods
je
shlb
inc
mov
jns
mov
xchg
push
and
mov
out
loope
xor
into
jnp
pop
test
xlat
jne
xlat
hlt
into
push
dec
imul
add
dec
sub
sbb
mov
stos
cmp
repnz
fscale
test
fistps
jne
mov
and
sbb
mov
js
ret
out
cmp
rolb
ret
inc
mov
jno
cld
push
add
out
lods
in
dec
jb
shll
mov
fmuls
mov
fisubrl
repz
roll
js
inc
out
cmp
ljmp
rorb
xchg
sbb
mov
xorl
jno
push
sarb
es
mov
movsb
xor
es
out
shll
dec
cs
lea
add
inc
divl
pop
adc
jl
mov
dec
jle
inc
adc
or
pop
ss
addb
add
andl
dec
adc
push
mov
cmpsl
data16
inc
cmovnp
add
cmp
movsb
jb
icebp
and
or
mov
jns
jbe
cmp
rorb
jmp
fs
lcall
sub
fisubl
sbb
mov
insl
dec
mov
mov
jmp
adc
pop
das
push
ret
ret
jbe
push
add
xor
jmp
sub
lahf
into
pop
xor
pusha
inc
add
das
dec
push
jb
xchg
loop
notb
js
in
mov
mov
jo
dec
adc
aas
mov
jmp
jp
test
xchg
dec
jno
ljmp
or
mov
rorl
cmp
fists
xchg
test
pop
jns
push
mov
enter
xchg
and
jo
movsl
ja
ljmp
xchg
into
sti
adcb
jl
dec
inc
push
lea
mov
lock
cli
out
cld
imul
rorb
arpl
inc
mov
xchg
in
sub
pushf
push
stos
xorl
cmp
data16
xchg
mov
pop
dec
mov
aam
cs
push
aad
mov
out
mov
xchg
test
push
xlat
sub
nop
icebp
sub
fdivl
div
adc
cmp
cmp
mov
xchg
jbe
int3
add
scas
out
or
xlat
push
adc
sarb
push
cwtl
cltd
nop
dec
pop
xchg
mov
xchg
lahf
fwait
lods
dec
pop
icebp
push
dec
das
inc
sub
out
push
lock
jge
movsb
mov
test
cmp
jmp
clc
andb
jns
cmp
clc
sbb
sti
cmpsb
or
scas
sbb
cmp
inc
mov
out
xchg
adc
or
ljmp
and
cmp
popf
insb
xchg
lods
add
js
mov
into
movsb
xor
loop
mov
pop
inc
adc
loope
push
dec
lods
std
icebp
leave
out
mov
insl
icebp
add
adc
pop
and
mov
push
clc
negb
inc
sbbl
jmp
or
das
clc
ss
add
mov
mov
cmpsb
sti
mov
shlb
xchg
mov
out
stos
sbb
dec
xchg
jne
mov
ds
stos
xor
push
enter
lods
jg
pop
das
cltd
push
and
and
mov
cmp
arpl
jmp
mov
in
push
add
adc
sbb
xchg
jb
push
jnp
lahf
xchg
lock
outsb
iret
orl
pusha
xchg
lock
sub
mov
add
idivb
jno
push
and
xor
dec
cld
mov
sub
xchg
test
jno
cmp
mov
lahf
das
jecxz
jl
sub
mov
movsb
sub
fnstsw
cmpsb
inc
xorb
mov
cmpw
aas
and
mulb
mov
test
jmp
scas
sti
jo
mov
inc
sub
xchg
xchg
inc
fbld
icebp
outsl
mov
mov
ret
inc
cmp
fildl
and
mov
icebp
push
mov
jno
lea
scas
inc
nop
push
in
cs
inc
sbb
mov
sub
xchg
mov
push
xor
sub
test
push
roll
xchg
in
mov
pop
mov
gs
out
jp
insl
cmp
cmp
sti
mov
pop
pop
aam
xor
enter
data16
or
inc
int
and
mov
jl
mov
into
inc
inc
cmp
add
popf
xlat
repnz
xchg
std
aam
push
push
jp
jbe
insb
pop
stos
ficompl
mov
add
fs
sbb
push
pop
adc
in
push
flds
jb
adc
call
shll
les
cmp
sbb
int3
sub
movsb
lds
push
inc
mov
pop
cmp
cs
test
jnp
mov
stos
push
or
loope
mov
pop
repnz
out
add
or
add
outsl
ficoml
popa
ss
jae
sub
cmp
jmp
cmp
add
les
sti
xchg
mov
icebp
push
add
xchg
pop
dec
nop
add
mov
sub
out
pop
stc
xor
adc
xor
std
and
test
enter
and
aaa
mov
stos
dec
shrb
or
add
xchg
add
push
and
and
insl
jo
xchg
out
cli
or
mov
movsl
cs
push
call
and
lods
mov
xor
imul
add
or
fisttps
fwait
jno
shl
jge
sbb
push
into
rorb
push
clc
out
lahf
aas
mov
mov
cltd
enter
jbe
pop
mov
and
insl
ret
mov
add
cmpsb
xor
shrb
out
pop
call
sub
inc
jge
ja
add
push
ljmp
movsl
outsb
bound
jno
fs
addr16
pusha
mov
leave
pop
ffree
push
faddl
dec
loope
cmp
adc
insb
in
adc
filds
sahf
mov
rclb
adc
jb
and
in
pop
ljmp
sub
add
jno
or
lahf
ja
cltd
sahf
mov
ds
xchg
adc
call
negl
std
fcomps
fcmovbe
pop
fistps
inc
push
subb
xchg
dec
jge
test
sbb
inc
push
cli
xchg
rorl
lret
arpl
mov
mov
dec
jne
xlat
xchg
dec
sub
or
jmp
push
stos
dec
xor
inc
into
daa
cli
add
mov
movsb
shl
inc
divl
push
dec
es
call
xchg
das
xlat
sti
fs
sub
xchg
cmp
jno
lock
dec
leave
gs
mov
aas
cmp
pop
ret
rol
rorl
adc
mov
stos
mov
sub
xchg
sbbl
mov
iret
pop
push
sbb
ljmp
jecxz
call
movsb
lods
xor
jne
data16
idiv
and
push
aad
xchg
xlat
or
push
shrl
cmp
push
jns
fdivrs
imul
jnp
jmp
xchg
mov
xorl
loope
push
pop
jne
cmp
into
aas
jmp
imull
clc
ds
sbb
mov
push
adc
xchg
mov
imul
jnp
loopne
pop
add
sub
jmp
mov
pop
lods
or
and
in
cmp
lds
movsl
mov
xlat
dec
and
bound
aam
mov
add
mov
aaa
mov
dec
bound
fcos
lods
pause
mov
subb
jo
fsubrs
xchg
pop
xchg
je
scas
lahf
jle
mov
push
jl,pt
lret
mov
aaa
pop
dec
inc
pusha
mov
sub
int3
sbb
les
cmp
lods
outsl
and
cmc
jnp
fmulp
test
pop
lret
jbe
iret
mov
pop
cltd
fsubl
hlt
fsubrs
negl
ret
jns
xchg
imul
jmp
jmp
imul
inc
jl
popa
lcall
or
push
mov
mov
xlat
and
cmp
ret
std
mov
fistps
outsb
mov
inc
xchg
mov
cmp
sbb
jnp
inc
inc
sahf
repnz
ds
lods
or
cmp
clc
pop
stos
mov
xchg
pop
push
mov
mov
mov
or
jne
jmp
cs
daa
or
add
mov
mov
cli
and
pop
and
or
rolb
lock
fdivrl
lret
cmc
lret
push
add
add
stc
mov
push
and
jp
jnp
in
dec
rorl
mov
lods
sub
insl
xchg
ljmp
aaa
adc
arpl
ret
add
push
add
cltd
adcl
cs
jecxz
inc
pop
sbb
cwtl
mov
xchg
xor
or
xor
jg
pmulhuw
imulb
iret
dec
outsb
adc
xlat
push
pop
cmp
cmp
jmp
dec
and
hlt
push
add
jp
or
mov
mov
addr16
or
jp
jmp
stos
clc
rorb
out
xchg
cmpsl
movsl
inc
andb
xlat
sbb
dec
lahf
in
jbe
xchg
mov
adc
popf
push
add
mov
mov
jmp
test
out
pop
lods
mov
outsl
dec
inc
fwait
adc
cmc
lock
insl
cwtl
inc
xchg
mov
lahf
sub
mov
das
in
inc
arpl
icebp
je
pop
jp
mov
cmp
push
aaa
fmuls
std
js
sti
push
mov
cmp
dec
or
jbe
mov
into
jmp
mov
das
adc
rcrl
cmp
pop
inc
ds
mov
les
dec
lods
js
jle
pop
ds
test
ret
sti
loope
pop
sbb
or
mulb
xchg
mov
xchg
ffree
cwtl
jno
movsb
xchg
sbb
js
xorb
adc
fcmovbe
fimull
mov
push
mov
adc
das
push
fs
cltd
push
mov
adc
xor
dec
jae
cltd
jnp
lods
mov
out
imul
jnp
push
rcll
sub
outsb
test
adc
das
test
push
pop
fildll
jmp
stc
aas
stc
jns
lods
leave
filds
cmp
das
xchg
cmp
dec
pop
iret
pushf
aas
mov
cmpsb
fiadds
mov
cwtl
cwtl
push
xchg
stos
mov
mov
fnstsw
cli
sbb
andl
sub
mov
hlt
mov
jae
inc
add
dec
mov
into
daa
add
dec
arpl
aam
adcl
xchg
int3
aas
push
pop
mov
inc
jg
or
popa
jg
mov
shll
push
or
jb
mov
mov
ljmp
push
loope
xor
jecxz
test
gs
testb
add
dec
decl
popf
pop
xchg
rorb
push
mov
xor
std
sub
xchg
or
loopne
add
sbb
idivb
sahf
mov
push
test
lret
lret
aam
test
lods
test
fidivl
movsl
fwait
mov
repnz
dec
cmp
dec
mov
xlat
mov
enter
insl
mov
xor
cwtl
sahf
xor
or
jecxz
sbb
inc
pop
outsb
dec
aad
aaa
sub
cmp
in
lods
stos
cwtl
rorl
mov
ret
adc
cmpsl
jbe
add
sub
loope
mov
inc
mov
jne
lret
jmp
adc
or
jmp
xlat
movsl
mov
rorb
mov
nop
mov
rorb
into
jno
into
mov
in
adcl
pop
dec
inc
lea
arpl
jp
movsl
inc
push
js
arpl
dec
loopew
clc
push
std
jg
cmp
loopne
cmp
and
mov
inc
icebp
fldt
in
adcl
add
dec
pop
mov
repnz
sub
sub
and
mov
or
inc
pop
jo
ds
cs
lock
insb
in
inc
jnp
cmp
xor
icebp
insl
cmpsl
pushf
aam
adc
jmp
sbb
push
jl
pushf
xchg
sub
mov
mov
mov
insb
dec
inc
inc
popf
sub
cmp
mov
stos
and
mov
dec
or
pop
out
adc
cli
jmp
sub
fcompl
lret
and
inc
or
cld
bound
add
inc
or
lock
test
push
fisttpll
cld
jecxz
cmp
jno
aaa
and
cltd
rorb
iret
sub
test
mov
jp
shlb
mov
in
out
pop
mov
fs
nop
leave
outsl
iret
dec
pop
xchg
pop
cmp
int3
mov
add
add
das
ficoms
stc
cwtl
cs
mov
jbe
fwait
cmp
add
fcoml
call
ror
dec
out
rorb
outsl
pop
push
cwtl
insb
cmpsl
jge
mov
inc
add
push
loop
ljmp
cld
gs
cmc
mov
xchg
in
and
repz
stos
mov
imul
in
add
fimull
jno
outsl
inc
stos
aam
add
repnz
xchg
test
jbe
fisubs
mov
mov
xchg
cmpsl
sub
push
push
push
inc
and
cmc
inc
sarb
rcrb
std
shl
mov
dec
cmp
pshufw
lret
or
jbe
pop
dec
aaa
or
lods
add
inc
leave
fsubl
sti
scas
push
add
inc
push
cmpsb
mov
cs
iret
add
shrb
xchg
pop
cmpsb
mov
pop
xchg
mov
cmpsl
stc
les
inc
enter
mov
int3
xchg
in
mov
shll
sahf
cmovs
inc
shlb
lahf
cmc
ret
fs
pop
data16
js
mov
aam
enter
ret
pop
mov
xchg
cmpsb
or
pop
stos
xor
jecxz
addl
testb
lret
adc
mov
ds
jns
inc
leave
int3
nop
movsl
push
movsb
fwait
sub
push
push
xor
fstps
inc
cmpsl
mov
inc
push
fs
jp
push
jbe
jge
popf
mov
divb
daa
sbb
mov
jb
pop
and
push
lret
xor
jle
jp
mov
rolb
rolb
aad
or
outsl
lds
pushf
xchg
movsl
scas
lahf
iret
dec
mov
xor
xchg
outsl
jns
cmpsl
fcoms
mov
push
int3
lds
or
outsl
popf
jg
sbbl
mov
js
jns
cmp
sbb
repnz
aad
ficoml
adc
add
adc
in
mov
sbb
push
push
andb
aaa
and
push
or
jbe
push
jl
mov
and
xchg
loope
jecxz
faddp
pusha
xor
xchg
mov
or
scas
push
sub
test
addr16
flds
mov
adc
lret
jno
fs
int
jle
cmp
test
pushf
cmp
imul
gs
mov
cli
call
std
daa
push
jle
outsb
pop
mov
icebp
mov
je
jno
mov
add
dec
xorl
arpl
ja
out
mov
neg
enter
gs
out
rcrl
cmp
insb
push
popf
pop
and
outsl
stos
insl
push
xor
push
or
mov
and
not
in
sbb
int
adc
mov
adc
cmp
push
popf
roll
adc
xor
test
jle
cmpl
xor
bswap
aad
jle
cs
push
xchg
mov
pop
adc
es
xchg
cmpl
push
mov
test
lcall
and
fst
inc
pushf
fstpl
fdivrs
add
int
insb
xlat
les
imul
ss
push
mov
int3
cld
mov
mov
sub
test
cli
inc
inc
adc
lcall
inc
jg
lret
shlb
rorl
mov
cmpb
cmc
mov
sub
cmp
mov
cltd
and
ja
ljmp
jle
push
ss
pop
js
inc
xlat
cmovnp
and
lret
mov
repnz
fisttpl
add
call
divl
push
adc
iret
repz
fldenv
pop
std
or
pop
pop
out
jle
stc
pop
push
jge
clc
imul
test
lods
mov
mov
pop
les
push
imul
fbld
sti
mov
mov
adcl
or
and
cmp
or
incb
leave
fildll
repnz
ret
ja
and
ljmp
or
mov
or
push
and
nop
cld
add
jecxz
jb
lods
mov
ds
xor
jl
adc
stos
outsl
aaa
adc
and
jns
or
test
mov
mov
insl
in
lock
stc
sbb
mov
sbb
in
jns
shrb
cmp
jns
sub
pop
js
ret
jnp
or
push
dec
les
jno
pop
sahf
xchg
inc
insb
adc
sub
push
scas
pushf
sbb
movsl
jae
shrb
and
mov
cmc
mov
into
idivb
push
sub
fwait
sub
or
test
fcmovu
lods
or
inc
in
push
jns
jae
xchg
jb
cs
jne
and
rcll
push
mov
sub
jmp
cs
lea
sub
and
icebp
test
cwtl
sub
add
mov
fadd
xor
and
shlb
mov
jecxz
vsqrtps
or
jae
dec
cmpsb
into
popf
adc
push
mov
dec
sub
inc
jp
das
or
and
sub
sub
icebp
rcrb
in
jae
jae
mov
adc
sub
arpl
or
dec
frstor
outsl
fnstcw
fldenv
aas
or
dec
data16
test
and
xchg
inc
jg
xchg
out
cwtl
xchg
mov
cmp
lock
mov
inc
incl
repnz
inc
dec
inc
or
les
xor
pop
inc
push
frstor
xchg
orl
jae
xchg
test
test
mov
mov
lret
pushf
loop
gs
out
sti
mov
or
sahf
cmp
mov
sub
mov
push
xchg
addl
xor
in
sub
fisubs
mov
jne
sti
fcoml
stc
into
inc
mov
mov
daa
ljmp
iret
insb
fmull
push
push
mov
enter
xor
out
adc
inc
sahf
mov
popf
add
sti
pop
dec
in
sbb
lahf
jge
inc
sub
inc
sub
or
das
or
push
repz
outsb
pop
inc
rcrl
bound
loop
ljmp
jmp
inc
imul
add
cmc
push
and
std
stc
pop
or
out
push
or
out
movsl
ds
clc
stc
inc
out
aaa
and
mov
sbb
stos
dec
push
int3
mov
xchg
scas
mov
test
int3
sub
sub
push
and
aas
ds
jns
iret
cmp
pop
mov
pop
adc
incl
jno
pop
das
sbb
mov
pushf
out
mov
bts
les
or
mov
and
jno,pn
fmuls
or
jbe
cmpsb
push
mov
in
aad
mov
mov
aaa
jge
cmp
stos
bound
mov
orb
int3
ret
into
dec
imul
arpl
jmp
out
scas
jp
inc
push
sub
inc
nop
mov
lahf
pop
enter
cmc
shll
dec
sbb
notb
and
sub
call
icebp
in
fisubrs
jne
inc
cs
cwtl
or
inc
add
sub
dec
xlat
out
out
pusha
rcr
in
xlat
lret
popf
push
cs
cmp
movsb
jmp
cltd
pushl
frstpm(287
call
push
jle
push
sub
adc
rclb
fwait
xchg
fyl2xp1
mov
repz
les
pusha
data16
and
fiadds
sbb
mov
imul
ret
xchg
dec
and
fcmovnbe
dec
repz
cmp
fmuls
lock
faddl
mov
fdivrl
pop
push
inc
call
mov
jmp
dec
jmp
out
movsb
pushf
cs
inc
xor
jp
aas
jno
and
cli
mov
inc
outsb
push
call
lods
in
ds
je
dec
cmpsb
stc
or
out
add
fisubs
stos
mov
xorl
xor
fldenv
shl
or
rcl
insl
mov
sub
sbb
pop
aaa
leave
int
ds
sbb
mov
cmp
xor
out
cmp
xor
lcall
and
jl
stc
mov
sub
bound
xor
push
add
aam
mov
cmpb
pop
sahf
mov
and
cmc
addb
lahf
add
mov
pop
insb
xorb
cld
ret
add
mov
aaa
ds
push
movsb
mov
push
pop
insl
push
jg
cld
push
xchg
jo
in
jge
add
or
or
push
push
and
and
adc
ss
push
mov
jle
jns
and
loope
push
stos
sub
add
cwtl
and
xor
cwtl
jmp
xchg
and
dec
xchg
outsl
test
fs
inc
adc
pop
clc
cld
push
mov
and
or
push
imul
je
imull
jns
and
movsb
jnp
sub
and
cmpsb
lgs
stos
sbb
or
xor
mov
loop
pop
sub
dec
mull
rol
fstpl
or
out
pop
mov
sub
mov
test
cs
inc
dec
sti
clc
fld
roll
jbe
inc
jnp
pop
mov
fistpll
and
add
pop
ds
loope
jg
movsl
pop
ret
out
int3
int3
push
jmp
xor
nop
xor
test
fstl
lds
dec
cltd
or
mov
inc
test
addl
rcll
mov
sbbl
daa
inc
adc
cmc
add
jne
faddl
stos
dec
cwtl
or
cld
imul
sti
ret
mov
shr
imul
inc
clc
sbb
mov
inc
xchg
ljmpw
inc
aas
loope
ficoml
neg
xor
sub
nop
jl
cmpsb
add
cwtl
cs
icebp
or
mov
inc
inc
int3
je
xor
das
inc
inc
popa
sub
xchg
int
xchg
loopne
movsb
ret
outsb
push
out
into
rolw
sbb
lcall
call
movsb
mov
mov
push
or
mov
lods
mov
jg
add
mov
inc
push
and
pop
xlat
xor
dec
bound
dec
std
add
bound
add
nop
cmc
and
andb
dec
bound
popa
imul
lods
or
jne
iret
dec
imul
data16
bound
lret
jmp
gs
call
imul
clc
loope
int3
sub
lret
cmpsb
push
movsl
pusha
outsl
scas
fdivs
and
or
addr16
mov
cmpsb
or
mov
fs
jle
rorl
fdivrl
and
lahf
pop
gs
ss
popa
daa
xchg
insl
cmpsl
jbe
test
mov
inc
xchg
rcll
notb
mov
and
mov
inc
mov
cwtl
sti
stc
je
fucom
in
out
stc
cld
sbb
gs
adc
fs
adc
cmp
push
ret
insb
mov
dec
insl
ljmp
addl
push
push
stos
daa
sbb
mov
call
and
push
sbbl
fsubrl
in
lret
or
sbb
mov
dec
xor
pop
jl
sub
dec
jne
mov
jae
insb
add
ss
inc
sbb
jecxz
jge
xchg
into
std
rcll
xchg
test
jle
xchg
test
pop
pop
pusha
mov
sub
lds
inc
test
and
mov
es
movsb
inc
and
mov
btc
in
add
sbb
inc
movsl
nop/reserved
sub
mov
xchg
inc
pusha
call
ds
fmull
pop
divb
xchg
or
dec
cmpb
sub
test
sub
lahf
lret
xchg
or
jne
jp
mov
sub
scas
xchg
jmp
jp
ret
sub
insl
hlt
or
sbb
test
dec
out
cli
ftst
jge
imul
inc
int3
repnz
add
out
imul
in
fnstenv
aas
lods
mov
mov
das
mov
cmp
xorb
push
ss
dec
adc
addl
dec
addr16
loope
mov
ljmp
mov
das
and
stc
pushf
push
cmovg
clc
popa
adc
mov
push
inc
dec
stc
shrl
sbb
xchg
or
aaa
sub
add
xor
lcall
enter
mov
fcoms
stos
sub
cmc
mov
sbb
and
or
cmc
aas
ds
jno,pt
sahf
mov
popa
lods
xchg
push
test
dec
or
scas
sti
scas
pusha
ror
xchg
mov
test
jns,pt
mov
mov
int3
xchg
lahf
paddd
lahf
notl
push
or
aad
or
cmpsl
jmp
pusha
sub
adc
lds
sub
xchg
aad
add
pop
in
cmp
cmp
cltd
in
lcall
sub
and
repnz
pusha
mov
sti
fidivs
jg
mov
imulb
push
je
sub
addr16
push
sti
xadd
jmp
inc
mov
inc
insl
outsl
into
dec
out
xchg
rcll
cmc
gs
inc
icebp
out
ss
and
lret
jb
mov
xchg
cmp
inc
mov
cmc
xor
imul
push
test
pop
xchg
out
lahf
push
jne
pop
xchg
push
push
es
ja
out
fcoms
pusha
adc
pop
cwtl
dec
lods
out
jns
add
movsb
lods
push
adc
cmp
into
adcl
sub
xchg
and
pop
outsb
mov
fistl
xchg
cmp
mov
mov
push
pusha
jnp
mov
stc
pop
cltd
sub
lahf
xorb
pop
xor
fisttpl
mov
stos
xor
add
mov
imul
jo
adc
stos
outsl
push
int
sub
cmc
cmp
fdiv
or
scas
push
int3
inc
xchg
jno
adc
adc
push
push
or
inc
mov
aaa
sub
push
xchg
in
pop
adc
dec
cmc
roll
dec
push
fisubl
jb
call
jnp
xlat
stc
pop
push
xor
inc
sbb
and
ja
test
test
aam
insl
mov
in
and
sarl
loop
test
adc
add
dec
out
repz
and
orb
sbb
xchg
scas
sub
cmp
or
and
push
jb
pushf
adc
sub
bsf
cmpsl
mov
das
cmpl
adc
or
lds
int3
nop
mov
add
cmp
pop
cmp
xor
mov
lock
sahf
repnz
or
adc
dec
inc
sahf
jbe
add
lds
add
sub
push
or
sub
push
mov
fisubrl
xchg
imul
jno
out
sbb
pop
sub
dec
sbb
cltd
imul
mov
sub
mov
fwait
xor
pop
enter
jl
lods
cld
cmp
mov
add
xchg
push
cmovb
ret
or
or
fidivs
mov
js
dec
dec
pop
fsts
fstl
mov
shrb
add
xorb
or
pop
test
clc
add
outsl
rorb
lret
jns
mov
hlt
or
insl
pop
push
lods
jl
push
push
or
sub
aam
mov
rolb
lea
or
jle
and
pop
cmp
pushf
pushf
fdivrp
inc
xorb
in
movsl
in
call
shlb
sbb
and
decl
bound
sub
mov
cmp
jmp
cmc
test
jns
jecxz
js
lcall
lahf
or
dec
pusha
fsubrs
dec
div
movsb
scas
stos
mov
pushf
xchg
mov
lds
xchg
adc
inc
nop
in
lds
or
mov
push
arpl
inc
inc
mov
cmc
outsb
aad
mov
movsl
lea
cli
insl
xor
loop
rolb
xlat
jns
jb
jp
jmp
out
loope
fmul
fdiv
scas
sbb
xchg
std
mov
stos
lods
ja
push
into
xor
jl
dec
or
outsb
repz
sbb
mov
inc
jecxz
jp
pop
mov
fdivrl
roll
lods
ret
and
lret
jno
stos
cli
shlb
jmp
imul
cmp
sbb
scas
and
ret
cwtl
repnz
mov
xchg
out
fstl
loop
add
inc
dec
add
jmp
xchg
mov
fcmovnu
sbb
lods
fs
test
push
mov
rorb
ljmp
fs
adc
std
mov
sub
popa
das
popa
mov
sbb
jbe
lret
repz
or
push
xchg
cmp
jg
sub
dec
dec
in
sub
pusha
mull
cmc
pop
ret
out
add
sahf
jg
sahf
dec
xor
add
sbb
mov
xor
cmpsl
loope
clc
pop
sbb
cmc
sbb
stc
push
fcoml
mov
push
insb
mov
aad
mov
cmc
adc
and
fwait
mov
adc
mov
xor
dec
fidivrl
mov
lods
cmpsl
arpl
mov
aas
daa
cli
mov
popa
push
or
sbb
das
dec
dec
dec
in
jecxz
cmpsl
sbb
js
fcoml
adc
out
lods
clc
pop
mov
cld
scas
call
nopl
push
add
in
sbbb
shrl
dec
addr16
leave
jmp
jmp
je
sahf
sbb
lods
rcrb
push
shr
out
ja
adc
je
or
or
addb
mov
pop
or
out
scas
repz
xlat
pushf
stos
loope
jmp
es
in
mov
mov
fistl
mov
push
push
or
sbb
outsl
and
mov
in
aam
mov
mov
jl
test
movsb
xchg
or
mov
pop
mov
in
rorb
push
scas
pop
clc
inc
mov
pop
iret
and
mov
ja
and
or
mov
std
inc
mov
xchg
inc
jns
mov
scas
pop
xchg
rclb
sub
cmp
test
mov
fdivrp
roll
stos
pop
lcall
sbb
pop
outsl
shrb
daa
enter
je
pop
cwtl
sub
dec
cmp
dec
dec
int
aas
mov
lea
call
or
flds
jle
std
cwtl
fisubl
jnp
test
sti
lock
fildl
xor
jae
inc
sbb
or
in
mov
mov
jmp
leave
dec
or
aad
shrl
ljmp
inc
lcall
aaa
xor
push
psadbw
mov
sbb
popf
jl
xchg
stos
xchg
sbb
xchg
push
out
sub
pop
jo
add
push
lods
or
or
movsl
mov
cmp
mov
xor
jns
jp
adc
bound
ds
cmp
insb
scas
arpl
pop
aad
stos
aaa
in
in
dec
fsubl
lcall
imul
mov
imul
mov
mov
add
push
push
mov
insb
idiv
xchg
outsb
shlb
mov
and
fsts
testb
daa
push
test
xor
inc
outsl
or
xor
add
xor
mov
inc
or
cmpl
js
pop
lret
jbe
out
or
mov
pop
pusha
pop
ljmp
fisubl
inc
xchg
push
int
test
jns
pop
imul
pushf
mov
jb
mov
mov
sub
or
inc
dec
xchg
lods
add
clc
int3
daa
into
adc
nop
call
mov
pop
inc
pushf
xor
pushl
xor
call
dec
mov
push
inc
sub
cmp
cld
push
jno
rcrb
pop
mov
xchg
xchg
push
xchg
les
test
inc
add
ficompl
xchg
ror
addr16
mov
repnz
jb
push
sbb
das
outsb
pop
cmp
out
xor
sub
out
in
jl
pop
sub
xchg
mov
aaa
push
sub
and
pop
aad
sbb
inc
pop
push
pop
cmp
xor
mov
sarb
and
pop
adc
xchg
loope
xor
dec
stc
push
adc
cmp
mov
inc
jmp
jbe
je
shl
pop
stc
sbb
popa
sub
jns
in
xchg
mov
gs
loope
sbb
das
aam
mov
es
sbb
lahf
and
test
xchg
mov
mov
pop
jno
test
not
stos
aas
jnp
scas
cmp
jle
fildll
int
xchg
fcoms
je
add
adc
push
push
aam
pop
out
sub
and
dec
sbb
xchg
cs
or
insl
mov
dec
insb
jns
cltd
ja
test
sbb
inc
aam
xchg
mov
data16
test
lock
nop
in
stos
adc
mov
subl
pop
fsubrl
push
int
jge
aam
mov
adc
or
shrl
repnz
sub
adc
add
enter
cmp
push
fcompl
sub
mov
mov
jnp
test
icebp
in
mov
push
cltd
shll
push
addr16
jge
cmp
mov
adc
push
and
lret
mov
call
xchg
fwait
sbb
xchg
jne
dec
mov
xlat
cmpsb
sahf
mov
iret
pop
adc
gs
and
cwtl
pushf
enter
lods
lret
sub
stos
stc
mov
pop
mov
aaa
pusha
repz
xchg
jl
clc
mov
repnz
add
outsl
push
jecxz
into
rclb
or
aas
aam
into
cmp
adc
adc
adc
jl
aad
stos
pop
mov
dec
jmp
xchg
sbb
xor
jno
clc
adc
leave
pop
and
orb
outsb
push
mov
sub
push
fs
jmp
adcb
lahf
loopne
loopne
in
daa
xor
fidivs
pop
adc
loopne
lret
xchg
ret
mov
or
jns
rcrb
imul
mov
ds
sbb
pop
dec
sbb
pop
jge
sahf
outsb
sbb
in
mov
lea
ss
out
push
pop
mov
mov
enter
daa
divl
cmp
shrb
ss
outsl
and
scas
xchg
icebp
in
xor
xor
jno
pop
ds
jo
jo
jns
mov
cli
imul
add
xor
neg
test
xor
inc
das
jne
cmp
mov
mov
arpl
int
ss
xor
push
clc
idivb
add
sbbb
lret
pop
push
daa
xor
xchg
popa
push
imul
cmpb
jecxz
cmp
dec
mov
les
dec
lock
icebp
aas
inc
mov
sti
mov
gs
loop
sbb
mov
jb
notl
fwait
or
rolb
repnz
push
dec
pop
movsl
mov
jnp
sub
lea
mov
sarb
pop
cmp
jmp
xor
out
cmp
ret
cmp
ficompl
ss
push
cmp
stos
imul
inc
out
lods
pop
lret
insb
add
dec
addr16
sub
push
addl
pop
push
pop
cmp
sbb
cmp
push
jg
jb
inc
and
inc
add
popf
fcom
out
mov
jns
in
mov
mov
mov
test
sbb
daa
push
sbb
mov
arpl
push
jp
pop
and
icebp
push
mov
xlat
pop
mov
jle
int3
lcall
ljmp
out
cmp
scas
mov
pop
sub
decl
dec
test
xor
jne
inc
inc
jp
sbb
sbb
mov
mov
push
stc
ficompl
push
pop
inc
cltd
popf
mov
xchg
jecxz
sbbb
scas
pusha
pop
mov
or
sub
pop
divl
out
pop
test
jno
dec
fcoms
add
pop
pop
xchg
push
movsl
aas
mov
inc
fbstp
pop
fidivl
or
fs
and
call
ljmp
out
xorb
dec
shlb
enter
sub
xorl
xor
add
and
jecxz
mov
imul
clc
inc
scas
push
and
inc
xor
call
imul
fsubp
jge
xchg
aas
imul
stc
stos
inc
sbb
leave
add
and
pop
jb
sbb
scas
cltd
xchg
pop
lahf
or
ds
ljmp
mov
jp
or
shrl
out
inc
sbb
movsb
mov
xor
lods
pop
jno
xlat
ret
mov
mov
out
enter
pop
fcomps
std
jae
loopne
dec
sbb
fistl
mov
adc
push
fcoms
cmp
and
jns
pop
push
loop
fisubl
inc
xchg
fwait
dec
ret
cld
cltd
clc
mov
xchg
xchg
ljmp
mov
mov
add
jb
and
enter
push
cmp
shrl
jo
int
mov
jge
sub
data16
incl
lea
inc
dec
pop
pop
pop
jp
add
jo
inc
pop
out
jne
or
fisubs
dec
cmp
movsb
loope
nop
sbb
fldenv
and
loop
push
fcom
test
fstpt
dec
mov
jno
push
push
in
push
mov
cmpsb
sub
imul
xchg
push
dec
jg
mov
int3
jns
stc
sub
cmpsl
lret
adc
mov
daa
inc
cwtl
dec
addr16
repz
xchg
push
push
into
mov
testb
xorl
adc
lea
jae
jo
popf
test
addr16
dec
xor
add
add
cli
int
stc
lods
bound
bound
test
jl
rcrb
test
push
in
test
testb
icebp
pushf
sub
je
jae
mov
inc
pop
mov
pop
xchg
xchg
mov
mov
mov
cld
fucompp
imul
push
hlt
inc
add
outsb
inc
and
fwait
in
add
push
push
loop
sub
iret
rolb
add
adc
mov
sub
and
mov
aas
xor
mov
arpl
cs
movsb
jg
lods
loope
pop
ficoms
mov
stos
aas
sti
icebp
and
sarb
jb
sbb
xchg
ret
mov
mov
mov
mov
int3
xor
mov
sub
lods
imul
sahf
out
sbbl
mov
push
pop
lret
push
dec
sbb
test
jmp
mov
fnstcw
add
fistpll
fucomi
or
testl
aaa
arpl
bound
mov
aam
test
pop
stos
jp
or
xchg
sub
jg
or
dec
ret
add
push
jl
adc
cmp
push
or
test
jbe
imul
cmp
popf
repz
imul
jns
push
daa
mov
aad
cmpb
dec
jbe
mov
aaa
aaa
enter
cld
clc
ror
les
sahf
rol
daa
mov
lret
in
dec
popa
jbe
jmp
jbe
sub
pop
rolb
mov
rcll
sub
pop
data16
and
loop
inc
and
and
addl
orb
lds
push
jg
jle
inc
lods
adc
ret
mov
cmp
mov
cld
jns
ljmp
jno
jl
mov
out
subl
push
sbb
add
lods
adc
retw
aad
dec
sahf
movsl
add
adc
fstps
sub
repnz
repz
in
test
jl
lahf
stos
inc
or
mov
enter
push
add
xchg
sub
jb
dec
jle
mov
and
fcoms
mov
adc
cld
ds
sub
pop
lret
jae
mov
int
xchg
mov
cwtl
xor
fnstsw
sub
in
cld
or
xchg
inc
xor
retw
jl
sti
inc
dec
sbb
cmp
sbb
les
adc
scas
or
fldt
jecxz
or
pop
mov
shl
and
dec
das
movsb
or
pop
cmpb
push
cmp
jno
cli
mov
stos
or
mov
negb
mov
repz
arpl
stos
push
imull
inc
or
xlat
pop
mov
inc
cmp
fcomps
andl
adc
fstl
mov
pop
mov
add
dec
adc
leave
scas
sub
xchg
push
ja
jge
pusha
sub
loopne
mov
dec
push
aas
cmp
or
aas
fwait
in
mov
and
test
xadd
dec
pop
sub
in
dec
sarl
fsubrl
add
cmp
dec
bound
inc
pop
dec
lods
xchg
jecxz
fadds
mov
jbe
cmpsl
and
and
lods
fadds
xor
xchg
or
in
mov
test
sub
and
push
iret
sbb
fwait
jb
pop
push
sbb
dec
cmp
outsl
ss
addb
jge
push
mov
sti
cmp
jne
lea
xor
lret
leave
pop
dec
sbb
mov
push
cmp
push
jg
push
in
jmp
jecxz
mov
xchg
getsec
dec
stc
mov
sub
dec
sub
in
iret
ficompl
fstl
fnsave
adc
ret
test
push
or
out
jle
mov
inc
insl
or
mov
in
adc
adc
mov
adc
hlt
fnstsw
lcall
lock
fisubs
sbb
imul
ret
out
pop
ljmp
mov
sbb
jp
icebp
sub
cmp
mov
mov
xchg
push
mov
jnp
bound
push
sbb
aas
scas
xchg
pop
pop
cltd
mov
push
ja
out
xor
scas
cmp
sub
pop
test
pop
mov
cltd
mov
fucomp
push
push
push
xchg
push
in
shrl
enter
pop
pop
sahf
lcall
cmpsb
je
lret
mull
icebp
mov
sub
lret
insb
push
mov
aaa
cltd
cs
or
icebp
sbb
mov
jo
int
in
or
bound
clc
push
in
popf
mov
sub
aam
jno
adc
test
int3
stos
nop
stos
cmpl
jb
imul
dec
mov
jmp
mov
pop
bound
adc
stc
les
cwtl
cmp
mov
jmp
in
xor
sbb
nop
jbe
push
inc
adc
loop
mov
jg
and
add
cli
cmc
mov
push
clc
in
fildl
insl
call
mov
repnz
mov
mov
arpl
fisubs
iret
add
adc
pop
sbb
xor
sahf
mov
rol
dec
pop
mov
adc
fs
xchg
jno
cmpsb
sahf
add
mov
sbb
cs
sti
and
sub
scas
ret
lret
mov
sbb
or
ss
call
cli
addr16
xchg
push
mov
mov
out
int
mov
mov
popa
push
and
pop
mov
ss
mov
add
in
popa
pop
out
aam
rolb
add
pop
mov
fisubrl
pop
mov
and
jne
jno
push
push
cmp
mov
mov
sub
jl
cwtl
loopne
mov
inc
in
pop
aad
xchg
xor
xor
repz
jecxz
leave
sahf
divb
rclb
js
icebp
in
add
jno
fs
in
fbstp
sbb
lahf
and
imul
fisubrl
fldl
repnz
cwtl
cmp
cs
fsubs
lret
in
shrl
ficomps
xor
ret
mov
ret
sahf
sub
dec
cmp
pop
sub
test
lock
jmp
xchg
xor
cmc
sbb
adc
stos
mov
push
ss
xchg
cwtl
lea
arpl
pop
jl
mov
outsb
in
outsb
aaa
sub
push
ret
jmp
cmpsl
loop
sbb
gs
addr16
cmp
adc
inc
cmpb
mov
jae
cmp
lret
lret
int
inc
lcall
mov
cmc
mov
adc
dec
lcall
repz
into
addr16
pop
flds
sarb
ljmp
dec
pusha
pop
movsl
leave
sbb
leave
sub
adc
pop
inc
sub
out
push
add
dec
out
hlt
pusha
add
and
mov
or
mov
insb
lods
loop
dec
test
shl
jb
popa
xor
insl
mov
xchg
xlat
jae
scas
fcom
add
pop
and
pop
cmp
dec
cmp
wbinvd
test
xor
jb
sbb
sub
in
lock
fidivrl
adc
nop
jmp
int3
femms
jp,pt
ret
clc
sbb
rcrb
jns
push
fs
push
shlb
aaa
dec
ds
and
cli
seto
push
nop
fwait
and
fs
jp
mov
outsb
lret
std
pop
cwtl
popa
in
xor
mov
and
sub
xor
pop
out
xchg
rcr
push
test
adc
sbb
lcall
inc
add
mov
int
push
and
stos
push
imul
fmul
xchg
xchg
sti
ss
jae
rcrb
sub
mov
mov
popa
aaa
lret
dec
and
adc
stos
xchg
in
fcmovb
movsb
push
adc
mov
ss
dec
inc
daa
std
das
jae
cmc
js
addr16
xor
jne
out
stc
xor
lret
loop
mov
enter
daa
mov
clc
sbb
jae
bound
or
lods
mov
orl
test
and
push
dec
dec
loop
xor
xor
jne
and
or
clc
hlt
jae
mov
mov
out
test
out
xchg
dec
loopne
arpl
adc
arpl
pop
mov
inc
fnstenv
fcoml
jb
fwait
jg
mov
push
cwtl
cltd
xlat
mov
mov
mov
test
les
dec
xchg
outsl
sub
imul
cmp
xchg
adc
inc
dec
jns
mov
push
push
jg,pn
push
jmp
arpl
xchg
rcrb
xor
xchg
ror
mov
pop
stc
movsl
cltd
sub
jnp
clc
icebp
or
lcall
shlb
dec
xor
fisubs
inc
pop
mov
inc
outsb
call
adc
jmp
cwtl
mov
mov
loop
fildl
ret
fisubs
xor
pop
xlat
jecxz
dec
ret
je
or
xor
mov
cmp
fildll
pop
das
and
ficomps
lret
jmp
xor
popf
jle
sti
adc
add
mov
sbb
xchg
test
rorl
fmull
mov
mov
rorb
inc
jno
and
imul
insl
sbb
jl
fstp
test
daa
bound
adc
push
ja
xchg
es
rorb
xchg
mov
mov
jno
stc
xchg
test
hlt
mov
inc
jo
dec
mov
xchg
sub
sbb
in
cltd
pop
int3
out
cmp
mov
mov
pushf
sbb
fiadds
xchg
sbb
repz
popa
out
sub
xor
xchg
call
add
jb
pop
cmp
mov
push
pop
loopne
push
jb
into
and
sbbb
test
aaa
xchg
loopne
or
pop
lea
out
mov
mov
inc
push
or
sti
out
test
scas
rorl
aam
xlat
inc
pop
fucomi
add
sbb
addb
mov
faddp
add
mov
dec
mov
test
pop
push
mov
shll
xor
fwait
outsl
xlat
pop
jl
push
jb
gs
mull
and
sti
push
gs
stos
push
xchg
mov
push
xor
pop
jp
mov
roll
iret
xchg
lcall
cmpb
pop
sarl
orb
inc
notl
mov
fidivs
movsb
lock
inc
pop
cmc
xchg
mov
inc
mov
aas
adc
or
xor
or
or
pusha
movsb
scas
insb
xchg
movsb
leave
cmpsb
inc
add
mov
sahf
cmp
in
push
mov
ds
loope
fisttps
cmpsl
dec
lods
dec
out
xchg
arpl
xchg
cmpb
inc
aas
popa
xchg
or
enter
mov
outsb
cmc
or
clc
and
sbb
push
mov
fcmovb
fs
dec
aaa
jbe
ss
fadds
in
lea
out
push
sub
or
mov
pushf
dec
xor
cmpsl
iret
in
bound
mov
scas
mov
out
pop
xor
or
cs
dec
add
jle
icebp
pop
jmp
and
dec
pushf
push
inc
cmp
fisttpl
adcl
xor
outsl
gs
insl
sbb
xchg
shl
jne
adc
hlt
popa
xchg
aam
sub
es
sar
cmp
lods
or
loop
cmp
push
fsubs
lret
xor
aam
add
mov
xchg
or
xchg
test
adc
xchg
jns
test
adc
sbb
lock
popf
in
pop
mov
mov
xchg
sub
mov
neg
enter
into
pop
inc
mov
outsb
xlat
mov
stos
stos
int
flds
xchg
mov
int3
lods
jle
imul
add
call
or
pop
in
loope
mov
xchg
mov
push
mov
or
arpl
xor
shrl
mov
xchg
clc
xchg
mov
es
mov
aas
inc
xchg
xor
fmul
pushf
insb
pop
icebp
call
push
movsl
mov
cmpb
dec
enter
in
cmc
xor
subl
test
mov
movsl
cmc
push
cwtl
in
pop
rcl
stos
mov
outsb
mov
imul
popf
jae
mov
pop
ljmp
adc
mov
pop
call
mov
cmpsl
add
push
and
or
call
adc
inc
fistpl
and
xchg
or
aad
mov
mov
lods
adc
push
test
aaa
fstps
push
mov
push
push
or
jns
or
cmc
lahf
and
adc
movsl
mov
mov
or
mov
and
nop
inc
add
pop
into
jae
ficomps
movsl
add
cmp
add
movsl
fxch
aas
push
fistpl
scas
dec
mov
mov
mov
js
and
rcr
xor
mov
shl
xlat
adc
mov
sbbl
inc
or
sub
iret
jb
and
pop
test
aaa
daa
xlat
pop
push
fs
mov
jl
sbb
add
and
and
int
jb
ficomps
arpl
inc
add
cmp
bound
sahf
fdivrs
cmp
loop
xor
stos
loope
jg
jb
jns
mov
scas
test
fidivrl
xchg
sbb
add
and
js
sbb
lods
mov
dec
repnz
add
sbb
push
mov
popa
and
dec
mov
mov
stos
out
xor
and
inc
addl
notb
dec
rcrb
sbb
xchg
jnp
bound
cwtl
adc
into
aad
adc
scas
inc
ret
push
loopne
and
inc
popl
enter
adc
adcb
and
mov
lret
cs
dec
or
push
sub
inc
js
test
scas
pushf
xor
test
jle
icebp
int3
sbb
loop
ljmp
sbb
loope
movsb
xchg
lret
out
dec
sub
inc
mov
cmp
cltd
xchg
sub
hlt
mov
inc
dec
mov
jo
in
lret
lods
fcompl
push
pop
jge
mov
loop
popf
dec
push
push
mov
aad
call
mov
lahf
inc
mov
movsl
mov
aam
adc
in
xor
movsb
push
into
mov
int3
lret
aad
ret
sub
and
cld
mov
loop
shl
mov
push
xlat
dec
addb
ljmp
insb
sub
jb
xchg
shlb
pop
or
mov
mov
xchg
mov
push
add
ficomps
xor
adc
popa
jmp
sti
aaa
or
fwait
sti
nop
xchg
fmul
cmp
jnp
mov
enter
sbb
mov
movl
inc
cwtl
cmp
hlt
popa
jg
xor
pop
mov
mov
xchg
int
cltd
mov
daa
sub
andl
ret
mov
mov
dec
shrb
sub
sbb
mov
call
aam
push
movsb
divl
gs
push
loope
iret
insl
fld
dec
push
fwait
inc
mov
mov
push
push
xor
stos
iret
adc
xlat
lret
xchg
lock
jns
push
cmp
inc
test
cmp
inc
imul
daa
mov
push
jle
shlb
call
sbb
xchg
mov
dec
mov
movsl
adc
pushf
addr16
shlb
jae
movsb
jbe
dec
mov
jg
dec
pop
ror
ficoml
outsb
loopne
inc
dec
outsl
btr
mov
jno
ss
xchg
xor
inc
mov
xor
mov
add
insb
push
mov
mov
xor
jne
sub
orl
or
iret
cld
dec
in
add
cltd
lcall
hlt
mov
sbb
shlb
mov
and
aam
pop
cmpsl
sub
in
sbb
cmp
jle
cld
mov
outsb
sbbb
mov
pusha
jae
fisubrs
pop
pop
cwtl
scas
and
mov
int
sbb
dec
movsb
sbb
inc
adc
and
add
jns
mov
rcrl
jecxz
test
mov
push
mov
mov
icebp
ret
or
fsubl
mov
popf
xor
xchg
jmp
add
ror
push
mov
xor
int
jecxz
sbbb
cmp
push
out
sbb
jg
and
int3
imul
aas
aam
repnz
xchg
sbb
movsl
test
aaa
jae
jne
sub
inc
cltd
push
popf
fwait
and
mov
xchg
and
push
add
mov
fdiv
les
jo
fisttpll
popf
jmp
aad
mov
call
test
and
inc
mov
xor
push
adc
dec
push
insl
xchg
loop
sbb
dec
adc
fisubrs
div
push
pop
pop
mov
sbb
mov
outsb
adc
fidivl
sti
jb
aas
arpl
into
sahf
xor
pop
adcb
sbbb
dec
les
scas
cmp
push
inc
scas
ljmp
push
pop
cwtl
xchg
popl
mov
enter
jecxz
fmull
fwait
out
into
jae
push
lods
movsl
mov
push
call
in
or
popa
sub
sub
sarb
ljmp
sub
leave
ds
pusha
inc
dec
push
sbb
filds
lret
xor
jbe
mov
cmp
or
or
stos
dec
clc
loop
or
cmc
es
mov
cmpsl
inc
pop
bound
and
xchg
dec
and
lods
insb
ret
sbb
cmp
negb
aas
mov
ljmp
sbb
sub
pop
cmp
fs
mov
mov
mov
pop
outsb
adc
test
es
ret
inc
cmp
shrb
lcall
sarb
mov
or
add
sbb
leave
mov
test
dec
pop
push
inc
jmp
popa
in
sbb
xchg
jnp
jl
mov
cwtl
pop
add
add
dec
aaa
push
divb
jle,pt
dec
lds
negl
mov
add
stos
pusha
pusha
cltd
jp
push
faddl
add
add
daa
push
faddl
mov
lcall
push
sub
js
pop
fucomp
sbb
push
push
dec
shll
insl
push
or
push
xchg
xchg
ret
mov
or
das
cli
rolw
mov
idiv
stos
sub
loope
push
test
xchg
add
dec
mov
push
push
cwtl
mov
cwtl
pop
inc
mov
cli
sub
test
bound
add
into
jnp
pusha
in
jmp
dec
xor
fsubrs
push
lds
cltd
ljmp
or
ss
add
sbb
push
sub
dec
xchg
cmp
ja
arpl
lods
lods
cmp
push
jb
sbb
sahf
gs
outsb
and
fstl
out
xor
mov
std
dec
hlt
xor
jmp
inc
pop
mov
push
decl
adc
les
pop
or
std
std
mov
dec
cmpsb
adc
int3
int3
pcmpgtd
addb
adc
add
or
dec
shrl
mov
inc
hlt
cmpsb
dec
mov
fmull
outsb
and
push
push
pusha
bnd
jno
dec
nop
sahf
insl
in
test
cmpsb
mov
jge
mov
add
movsl
call
cmpb
popl
push
movsl
mov
stos
inc
inc
push
add
push
lea
pop
cs
gs
xchg
push
mov
sbb
hlt
and
sub
pop
sti
mov
inc
lea
out
dec
sub
shrb
stos
pop
rorl
jl
mov
loopne
shll
rcr
stc
cmp
les
xchg
xchg
dec
or
cmc
into
mov
shll
mov
or
cld
xchg
mov
fcoml
xor
add
test
sbb
and
dec
lods
std
gs
jns
sub
dec
les
xchg
mov
sub
or
rol
or
sbb
lods
mov
ret
js
sub
mov
push
jecxz
nop
mov
inc
out
js,pn
and
les
jg
or
jb
pop
mov
jge
push
fnstsw
jae
cld
addr16
xor
repnz
xorl
cmp
in
xchg
lret
cmpsl
popa
xchg
aad
cmpsb
sub
cld
xchg
or
fs
or
sub
pop
data16
sub
int3
mov
scas
scas
pop
jge
inc
mov
mov
cmp
out
pop
pushf
ja
dec
or
xor
imul
jns
xchg
jnp
xchg
mov
xchg
loop
aad
cmpsb
insl
std
jl
adc
jp
insl
filds
push
dec
adc
mov
add
aam
and
loop
in
int
cmp
or
and
stos
push
lret
push
pop
jne
and
in
mov
cmp
imul
dec
pop
fidivrs
push
or
pop
ljmp
xchg
subb
es
or
in
jg
cmp
test
jle
or
xor
enter
mov
dec
sbb
cmp
add
aad
popa
shrb
sti
xchg
add
inc
iret
or
jge
xorb
dec
and
add
cmpsb
lea
mov
test
nop
dec
xchg
pop
pushf
add
and
xchg
inc
gs
lods
and
cmp
je
cmp
call
pop
loopne
lods
loop
jl
xchg
xchg
dec
fldcw
pop
or
stos
aam
mov
sahf
cli
xchg
or
ss
adc
add
adc
inc
aad
or
leave
lea
jne
or
pop
jb
outsl
jl
push
fisttpll
jae
xchg
push
pop
fdivrp
sub
divl
and
add
and
inc
mov
mov
mov
mov
cmp
jle
cmpsl
sub
pushf
pop
scas
sub
pop
mov
mov
dec
mov
mov
lahf
jb
jbe
and
js
pop
lahf
popl
inc
lret
mov
mov
adc
pushf
inc
mov
pop
outsb
push
clc
pop
jb
or
ja
mov
mov
loopne
data16
in
pushf
mov
cli
in
sub
sbb
push
daa
ret
push
adc
idivb
inc
scas
outsl
cmp
pop
xor
fs
arpl
push
scas
xor
aam
dec
cmp
inc
test
jne
jns
and
and
mov
in
stos
ret
lret
ja
or
pop
inc
adc
popa
sub
test
cltd
pusha
hlt
push
orl
aam
or
adc
mov
aad
data16
and
mov
sahf
enter
push
andl
inc
arpl
std
lret
mov
lods
test
xchg
xorl
sbb
cmpb
mov
shll
stos
lret
mov
or
rol
xchg
test
sbb
inc
int
mov
dec
dec
aaa
mov
pop
pop
mov
jno
mov
int
jae
push
cld
jb
xchg
inc
dec
sbb
inc
bound
or
xchg
push
out
fisttps
std
push
clc
push
js
xchg
ss
outsl
mov
xchg
enter
lock
push
int
in
sub
pop
addr16
jo
xor
push
movsb
in
add
mov
lcall
push
push
movsb
fwait
sub
push
cmp
or
rcrl
dec
ret
lcall
sarl
mov
imul
dec
push
or
pop
mov
add
clc
sbb
insb
lds
adcb
mov
mov
mov
and
sbb
rcll
inc
shll
scas
ja
inc
test
mov
pop
mov
pop
comiss
xor
lods
shll
push
dec
mov
sbb
cs
cmp
xor
add
lods
mov
fcompl
popl
jl
hlt
push
mov
stos
mov
pop
jns
adc
pop
movl
repnz
dec
mov
in
mov
add
rcrb
adc
out
xor
popa
je
xor
test
lret
in
sbb
xor
scas
push
mov
lds
testl
shr
repz
and
movsl
jle
adc
pop
cs
mov
mov
ljmp
cmp
cwtl
repz
adc
fucom
inc
stos
das
rep
push
or
xchg
jnp
rcrb
dec
repz
outsb
pop
mov
pop
mov
in
icebp
jmp
dec
inc
push
add
insl
test
std
push
lret
mov
stc
lods
jo
lods
pop
imul
sbb
inc
mov
inc
dec
sub
test
cmp
outsb
and
push
test
pop
push
ss
lock
sbb
hlt
fisubl
or
fidivl
xchg
test
mov
sbb
mov
xchg
popa
fwait
arpl
jp
mov
inc
inc
pop
push
push
and
or
xlat
test
scas
loop
notb
xchg
fimull
lcall
sbb
jp
js
pop
subb
mov
pop
test
ds
fcomps
mov
and
inc
cli
pop
sub
ds
lea
inc
clc
out
sub
lds
ret
ljmp
sbb
push
sub
dec
inc
imul
xchg
adc
mov
and
ds
aas
lods
das
es
data16
lea
out
hlt
mov
lods
xchg
sbb
into
mov
imul
push
loope
ret
mov
mov
lods
jge
ficomps
sub
push
lret
pop
std
cmp
mov
ss
sti
rorl
xchg
lret
rcrl
dec
xrelease
lods
xlat
enter
into
fnstcw
inc
mov
arpl
dec
and
dec
loopne
and
mov
daa
lods
push
push
cmc
in
gs
mov
cwtl
xchg
enter
adc
xchg
hlt
inc
js
add
sub
push
jnp
rcll
xchg
or
mov
pop
add
jbe
loop
loopne
mov
mov
pop
fcomi
jns
mov
call
jne
lods
pop
insb
sarb
adc
mov
cmc
mull
sti
mov
push
xchg
push
ret
xchg
or
push
repnz
test
ja
cmpsl
add
dec
push
call
dec
and
test
mov
fisubl
notb
or
xchg
or
loopne
mov
mov
and
or
rorb
orl
xchg
fsubrl
fwait
outsb
push
xchg
pop
arpl
xor
dec
inc
cmp
jg
xchg
jae
out
sbb
sub
rep
or
ret
inc
aam
ss
stos
insl
jecxz
cld
fisttpl
pop
xchg
add
xchg
gs
mov
fwait
pop
pop
sbb
adcl
sub
mov
mov
jns
jecxz
out
fsin
stc
cmc
cmp
movsb
nop
es
daa
and
xchg
jae
in
fcomps
and
movsl
or
dec
jmp
mov
or
xor
xlat
xchg
dec
shlb
enter
out
sbb
add
mov
xor
mov
lcall
inc
aaa
shl
out
dec
push
push
in
jecxz
cmp
lods
fidivrs
push
adc
mov
fdivl
hlt
mov
or
add
dec
aaa
arpl
jecxz
xor
aas
mov
xorl
jae
out
stos
lret
jno
les
in
iret
cmp
lea
pop
inc
push
pushf
pop
jle
scas
sbb
pop
daa
jns
sbb
and
das
mov
mov
negl
push
movsb
mov
or
in
stc
mov
sub
dec
push
js
daa
fwait
mov
inc
insb
dec
iret
mov
push
xor
pop
ds
cld
stc
clc
jecxz
xchg
add
cmpsb
dec
sbb
pop
inc
pop
push
lret
dec
in
test
sbb
xlat
push
out
xchg
stos
ffree
inc
scas
cmpsl
out
push
jecxz
pop
and
pop
pop
mov
lds
aaa
daa
scas
sbb
cmpsl
scas
fs
lret
arpl
aad
insb
bound
cli
cmp
fldt
sub
insl
push
pop
pop
mov
fdivrs
aad
mov
shr
out
insl
xchg
scas
out
in
jbe
mov
int3
arpl
sbb
orl
jecxz
mov
cmpsb
out
mov
push
js
dec
and
mov
mov
stos
mov
into
lea
xor
ljmp
jg
cmp
int3
aas
test
push
lods
or
xor
dec
bswap
cmc
push
jmp
in
or
xchg
and
xchg
cmp
int
sub
ljmp
subb
lret
in
jecxz
jno
adc
cmp
push
fisubl
in
sub
mov
adc
pop
out
add
add
dec
shlb
int3
mov
mov
andl
in
fidivrs
subl
pop
hlt
sub
into
sahf
lahf
hlt
out
add
out
jmp
and
aas
repnz
push
aaa
out
push
js
repnz
dec
loop
jbe
fiadds
addr16
lods
test
movsb
adc
jbe
jcxz
adc
or
cwtl
mov
nop
out
and
sahf
cmp
adc
and
inc
fdivs
in
jecxz
lds
mov
movsb
or
sbb
sahf
cmp
test
nop
fadds
sbb
andb
addr16
jecxz
in
jbe
dec
pop
sub
and
and
movsb
enter
mov
mov
mov
or
fs
inc
dec
adc
popa
mull
add
dec
xor
or
js
pop
repnz
ds
std
addl
push
repnz
add
scas
mov
or
mov
dec
imull
dec
sub
and
or
xor
xchg
in
adc
sbb
shlb
jnp
shl
xlat
sub
fcoms
fnstcw
mov
das
and
dec
mov
mov
repz
dec
xchg
idivl
jne
cmp
ret
imul
and
outsl
adc
mov
jp
mov
push
or
jle
js
mov
cmc
faddl
sti
and
fistpl
fisubrs
rorb
pop
push
cmp
jg
lahf
sahf
xchg
push
imul
das
xchg
arpl
sarl
movl
push
fcmovu
inc
je
gs
jns
cmpsl
nop
cld
cmpsb
loopne
pushf
cmp
dec
into
int
adc
push
jno
frstor
pop
repnz
dec
sbb
je
cmc
push
imul
mov
inc
mov
sbb
mov
inc
push
mov
cmp
scas
shlb
ljmp
or
pop
cmp
jo
movsl
div
aas
sbb
adc
shl
xor
jno
xchg
mov
jecxz
inc
push
shll
lock
xchg
adc
stc
pop
or
mov
pop
pop
adc
dec
inc
fimuls
in
sbb
pop
cmp
aaa
iret
pop
fstpt
push
push
add
mulb
repnz
ljmp
ss
push
stos
jo
movsl
adc
or
xor
jae
jle
outsl
adc
sub
push
xchg
sub
sub
cmc
mov
jae
out
sub
push
mov
ja
les
fcoml
lcall
sub
imul
sbb
mov
out
insl
call
inc
arpl
cmc
shll
testl
scas
mov
mov
cmp
aaa
jp
cmpsl
xchg
sub
jge
push
adc
sub
or
jno
out
jne
roll
lock
imul
in
xchg
xor
sbb
sbb
aaa
in
add
lahf
sti
adc
lock
mov
add
jbe
mov
add
xchg
pop
inc
xor
xor
cwtl
xchg
movsl
jge
or
cmpl
xor
inc
call
jmp
xlat
mov
push
push
jg
inc
xchg
inc
xor
jecxz
nop
nop
mov
jle
mov
stos
sbb
mov
int
or
pop
sbb
movsl
mov
mov
jmp
insb
xchg
cmp
add
loop
popa
loop
mulb
dec
shrl
shrl
scas
cltd
jns
call
or
add
nop
jp
lods
jg
dec
mov
dec
dec
lret
lock
xorb
jnp
in
push
in
inc
inc
adc
pop
lods
xor
dec
std
shrb
mov
add
loop
jne
bt
pop
into
rcrb
out
out
sbb
test
pop
jecxz
rcl
mov
ret
inc
sub
nop
loope
dec
jns
out
cmpsl
ljmp
lret
mov
or
lds
xlat
mov
ss
dec
add
fdivrl
pop
in
xlat
data16
add
addr16
pushf
imull
add
sbb
jmp
jne
or
cs
jae
loop
inc
mov
add
xchg
sub
lods
jecxz
orb
mov
out
das
inc
std
imul
ret
idivb
add
int
push
aaa
jb
mov
mov
pop
xchg
repnz
xor
mov
mov
sbb
jmp
dec
xchg
push
jle
lods
negb
leave
or
imul
sahf
xchg
insb
add
xchg
or
jg
xchg
ror
inc
sub
call
sti
fsubr
mov
push
inc
das
xor
test
or
add
stos
cmp
or
mov
popf
int3
pop
aas
out
call
fidivrl
cmp
jns
or
cli
adc
loop
cld
out
inc
out
mov
cmpsl
ja
imull
adc
cmpl
cld
stos
dec
mov
pop
jno
sbb
int3
repnz
push
mov
out
cwtl
cmp
mov
std
xchg
jb
cltd
push
push
movsb
andps
sub
inc
les
mov
mov
lahf
or
dec
push
repnz
enter
xor
dec
sbb
or
loop
push
sub
cmp
daa
mov
fwait
xchg
lahf
lds
pop
jp
ret
mov
dec
mov
xor
jmp
test
loop
dec
mov
out
pop
cltd
and
cli
int
fcomps
jo
adc
inc
lret
mov
lea
or
sub
jge
fcompl
mov
cmp
pop
push
movsb
stos
lea
pop
and
jo
xchg
idivb
aad
arpl
dec
xchg
or
inc
sub
sarl
adc
sbb
xchg
ud2
ja
mov
sbb
fs
and
pop
mov
xchg
jle
mov
rorb
ljmp
fidivs
out
pop
sub
dec
outsl
das
xor
jp
fistpl
fdivs
pop
xor
mov
jnp
icebp
arpl
push
jl
xor
pop
mov
add
test
insb
xchg
mov
or
jl
xchg
add
mov
xlat
jno
je
popa
mov
dec
mov
addb
data16
sti
imul
mov
lahf
popa
mov
xchg
xchg
fsubrs
loope
enter
arpl
and
nop
inc
push
or
pop
jl
scas
sbb
cmpps
inc
cmp
fwait
in
arpl
sub
test
sbb
bound
repz
mov
and
aaa
mov
fistl
mov
js
cmp
jp
ss
pop
sahf
dec
mov
jnp
popa
sbb
adc
jl
xchg
test
push
push
jns
cld
and
adc
call
inc
or
inc
dec
lcall
es
add
fbstp
pushf
xchg
sub
lret
out
inc
fistpl
pusha
lea
pop
shll
fistpll
pop
fiadds
adc
cmp
pusha
mov
xor
and
adc
mov
adc
xchg
loope
stos
std
or
cs
leave
mov
dec
cmpsl
cs
sbb
jns
xchg
xor
fs
jge
je
pop
and
mov
xor
jl
scas
xchg
nop
out
dec
cli
cmp
or
jge
sub
add
fwait
dec
subl
std
iret
hlt
mov
jno
mov
popf
cli
and
ffree
ret
xchg
inc
mov
ds
sub
push
push
push
bound
sbb
cld
loope
inc
dec
lock
dec
sub
xor
fs
int
jne
hlt
mov
mov
sub
jle
mov
in
cmp
icebp
shll
xor
lea
adc
inc
faddl
fsubl
mov
popf
xor
popa
test
lcall
cmp
fcomp
push
mov
and
outsb
adc
adc
push
inc
add
xor
mov
jg
xor
cmp
cld
jae
mov
repnz
adc
push
cmp
mov
push
test
mov
lret
jno
mov
aad
pop
jge
pop
popf
in
cmp
mov
and
lea
rcrb
shlb
mov
pop
mov
mov
xor
sub
call
inc
sub
push
or
testb
sbb
jmp
mov
xor
dec
xor
lahf
test
repz
cmpsl
sub
push
xchg
pop
cmp
or
inc
mov
dec
or
testb
jns
adc
aad
and
stos
sarl
insb
xor
scas
fidivs
pop
sub
and
sub
adcl
in
sarb
dec
es
insb
int3
jno
mov
adc
jecxz
lea
test
and
ljmp
inc
fisubl
je
dec
fisubrs
sahf
int3
xor
cmp
insl
sbb
and
mov
and
pop
sbb
sbb
ret
aad
dec
pop
or
ja
jnp
movsl
movsl
das
xor
sbb
and
xorb
decl
pop
nop
dec
cmpl
movl
dec
movsl
xchg
or
inc
cmpsb
cld
push
cwtl
aaa
rclb
pop
or
negb
push
mov
jb
into
inc
idivl
loopne
inc
jl
scas
int
mov
sbb
rolb
pop
in
imul
cmp
popa
popl
int
js
cmp
cmp
sbb
cmp
mov
iret
xchg
push
icebp
divb
or
test
loope
push
sub
sbb
push
outsl
ja
jbe
ret
inc
lret
je
push
adc
fbstp
and
sbb
add
mov
jge
into
mov
mov
jp
mov
xchg
push
mull
adc
lret
push
and
les
sbb
divl
fwait
adc
adc
ficompl
outsl
add
inc
sahf
arpl
lods
xchg
arpl
sti
cld
fnstenv
pop
push
adc
mov
sti
cli
out
dec
push
jge
fwait
aam
jnp
mov
insb
je
or
or
in
test
mov
fwait
test
sahf
adc
js
push
mov
and
das
mov
sbb
mov
testb
fmull
pop
loopne
or
mov
adc
xor
xchg
pop
add
lock
faddl
xor
ja
bound
lock
push
jo
mov
fidivrl
ret
jnp
add
enter
aam
xorl
icebp
mov
jle
xchg
jecxz
gs
rorb
sti
int3
popf
add
hlt
sub
mov
xorb
cmpl
fcomi
stc
lahf
out
clc
loopne
dec
cmovo
popf
ja
inc
xor
push
lcall
insl
xchg
mov
adc
fisttpl
jno
jge
orb
xor
ret
scas
dec
outsl
push
loope
pop
xchg
jle
int3
cltd
scas
add
cmp
xor
outsb
add
fstps
jecxz
xor
mov
fisubs
mov
lods
sbb
add
jb
insl
mov
sub
sub
aad
dec
out
daa
and
xchg
and
jecxz
pop
xchg
push
cmp
push
mov
mov
inc
in
call
shll
adc
ljmp
cwtl
cltd
iret
fsubs
test
sub
in
cmp
js
aas
mov
push
jmp
or
notl
dec
inc
fwait
mov
sti
jmp
inc
xlat
cmp
xor
mov
dec
lods
and
aaa
mov
pop
pop
in
cs
stc
add
test
clc
insb
mov
pop
leave
sub
mov
rep
pop
cld
sahf
loopne
sub
movsl
sub
div
sti
inc
and
mov
xchg
pop
out
pushf
ja
xchg
andb
dec
adc
loopne
nop
xor
cmp
andb
push
nop
in
xor
shll
dec
leave
cli
insl
cltd
int
adc
inc
cmp
dec
loop
push
dec
cwtl
lea
adc
or
sub
jae
mov
or
mov
cltd
cmp
dec
and
sbb
sub
dec
push
mulps
adc
stos
jmp
insb
pop
add
jecxz
clc
xor
lods
lods
pop
push
sbb
add
aas
addb
test
dec
mov
pop
jo
lahf
scas
outsb
bts
sub
xchg
push
or
jmp
dec
adc
sub
imul
lock
push
cmp
mov
les
and
dec
and
xlat
fsub
add
scas
or
jne
mov
or
popa
push
fidivs
mov
jg
sbb
cwtl
xchg
shrb
std
loopne
out
roll
cmp
test
shrl
mov
add
out
sub
or
and
jno
xorb
dec
mov
insl
repz
addr16
aam
jae
dec
pop
push
dec
push
shlb
lret
mov
sub
or
sub
push
cli
inc
add
in
lds
ror
outsb
cmp
js
into
cwtl
stos
push
push
fsubr
fnstsw
shl
jl
pop
pop
mov
js
fcoms
test
cli
sbb
lret
cwtl
and
dec
addr16
pushf
mov
rcrl
test
or
inc
jns
out
push
hlt
popa
lahf
lods
nop
shl
adc
sub
inc
cli
add
xor
divl
iret
out
add
loop
pop
xchg
lret
decb
imull
lock
scas
push
movsl
test
aas
pop
xor
popa
in
and
daa
jbe
loop
push
fildl
inc
or
std
push
nop
cli
call
cmp
mov
sbbb
out
inc
sub
movsb
arpl
push
mov
ja
jo
push
loope
notl
outsb
aas
jno
js
cmpsl
int
mov
sub
adcl
jp
adc
xor
pop
inc
mov
jnp
sti
jmp
test
and
ret
sti
mov
jp
aad
movsl
adcb
push
xor
push
test
insl
and
dec
xchg
xor
mov
andl
push
sub
jns
or
inc
pop
and
fisttpl
cmp
xchg
pop
pop
mov
lret
pop
cmp
test
pop
adc
std
fstpl
jne
lds
push
mov
mov
in
or
pushf
lea
or
push
mov
add
or
push
mov
mov
in
cmp
mov
ds
loopne
ds
mov
aam
out
mov
bound
int
leave
or
cs
ret
adc
aas
dec
cmp
out
lds
adc
movsl
nop
ret
sub
out
int3
ds
jle
and
lock
das
lret
push
lcall
iret
sbb
fisubl
outsl
test
fptan
call
push
and
shll
bound
into
push
ja
rcl
pusha
xor
xchg
push
push
mov
andb
adc
rcl
mov
inc
loop
shl
cmpb
pop
jp
fcoms
fdivs
outsb
std
aas
cs
loop
cmpsb
lret
addl
nop
mov
sub
jg
xchg
push
insb
add
dec
andl
add
or
dec
mov
js
pushf
cwtl
stc
out
and
add
sub
and
xor
loopne
hlt
jb
fcompl
xchg
inc
pop
fldcw
sub
mov
sahf
jecxz
pop
xlat
cmp
jp
sbb
fdivp
bound
add
xor
sahf
and
sub
rcrl
mov
cmpb
into
push
mov
cwtl
inc
popf
in
dec
stos
mov
imull
lods
lods
mov
repnz
or
pop
sub
add
xchg
insl
mov
stos
stos
xor
cmp
mov
dec
jl
stos
popa
add
in
shlb
lods
rcll
imul
test
fiaddl
pop
pop
cmp
push
or
xor
push
sbb
inc
cmpsb
xchg
popf
mov
xchg
fucomip
ljmp
into
jbe
cmp
aad
fdivl
push
imul
cwtl
movsl
ret
mov
jle
stc
dec
fucomip
sti
cmp
push
inc
outsl
ret
jnp
sub
jnp
in
leave
mov
mov
pop
shrl
jp
sub
aad
in
adc
dec
mov
in
xchg
pop
dec
jae
cmp
or
jecxz
nop
dec
rcrb
dec
mov
cmc
out
xchg
shl
cmp
imul
lds
movsb
cs
xchg
in
sub
adc
inc
lds
icebp
loop
inc
inc
roll
ficoms
mov
popa
mov
aas
sbb
mov
pop
sbb
negb
inc
call
enter
push
icebp
sub
int3
cmpb
stos
xchg
cmpsb
aaa
fsubl
mov
push
sbb
imul
inc
xlat
mov
das
and
lods
enter
xchg
std
clc
dec
push
jp
fwait
and
call
jne
loop
mov
fbstp
nop
adc
loopne
daa
into
aam
lods
js
push
mov
fsubs
add
fisubs
stos
or
pop
push
inc
push
mov
xor
and
divl
xchg
pop
mov
mov
add
xchg
dec
repz
je
pop
jnp
bnd
cmp
mov
out
nop
jbe
test
out
mov
imul
ret
idivl
pop
push
aam
dec
dec
punpckhwd
mov
loop
jmp
push
jno
add
mov
lock
imul
sbb
pop
mov
pop
in
sbb
rcr
jg
test
xchg
xor
test
inc
sub
jle
pop
mov
push
mov
fiaddl
fiadds
xor
adc
scas
out
insl
jo
pop
movsb
mov
mov
xor
mov
sbb
sbb
push
xchg
xor
push
add
imull
push
or
add
dec
cmp
mov
mov
dec
mulb
jp
scas
cmpsl
mov
nop
lret
or
and
add
call
pop
pop
adc
mov
xor
sub
dec
pmaxub
or
xor
push
mov
push
nop
daa
sub
outsb
push
xor
mov
and
hlt
cmp
mov
mov
sahf
test
int
dec
pop
ret
inc
inc
pop
aas
fwait
dec
mulb
in
add
jae
xchg
cmpb
xchg
jecxz
push
cmc
adc
lods
xchg
stos
jl
arpl
addr16
icebp
test
out
scas
arpl
dec
adc
stos
and
lock
cmpb
add
int
ds
aam
out
js
outsb
push
lds
fstpt
mov
jbe
dec
fnsave
cmp
lods
mov
jmp
push
push
cs
add
mov
lret
movsb
std
out
lahf
push
in
fistps
std
ljmp
lods
mov
scas
js
or
outsl
aaa
cmp
jmp
pop
mov
imul
out
xor
xor
int
push
cmp
out
daa
jne
shrb
decb
mov
or
es
cmp
clc
enter
shlb
sub
test
push
add
and
mov
pop
cmp
mov
jmp
xchg
xor
mov
adc
and
mov
adc
ljmp
arpl
jae
xlat
ljmp
xchg
jge
arpl
pushf
push
not
add
push
in
out
out
mov
xorl
cmpb
xchg
fs
push
lea
popa
push
pop
in
and
rcrl
loop
in
mov
lods
sbb
stos
and
ret
xor
push
xor
push
daa
sar
sub
mov
out
stos
cmpsb
adc
sbb
mov
jno
in
cmp
jnp
add
xor
fbld
push
ss
fimuls
imulb
insl
xchg
pop
mov
jl
loope
xchg
loop
inc
loope
mov
lea
cli
cwtl
test
jae
lahf
enter
jae
loope
push
push
xor
dec
pop
xchg
inc
insb
out
cmp
mov
jbe
insl
jmp
addr16
adc
sub
test
and
loopne
mov
pop
lahf
faddl
cmp
mov
or
sbb
or
xlat
cmc
dec
jno
adcb
rcr
sub
test
mov
fsubrl
in
and
test
pop
popf
movd
scas
sub
pop
adc
rclb
sub
outsb
stos
out
pop
daa
or
mov
mov
rcll
scas
rcll
adc
push
int
mov
aaa
xchg
movsl
sbb
ret
lret
mov
es
aas
pop
not
jae
icebp
pop
shl
or
mov
cmc
aad
add
adc
out
cltd
idiv
adcb
jns
jle
test
hlt
or
or
cmpsl
aas
sbb
jl
dec
fs
dec
pop
jbe
jns
flds
dec
mov
pop
mov
dec
cwtl
stos
or
les
ljmp
mov
pop
or
mov
aad
xchg
and
mov
lret
leave
and
pop
mov
lcall
call
inc
fimuls
rorl
fcomip
clc
xchg
loope
push
stos
mov
les
mov
sbb
mov
lea
fsts
push
inc
or
pop
sub
dec
inc
adc
cmp
arpl
add
pop
call
daa
push
test
daa
mov
inc
add
aad
cmp
push
add
mov
mov
loope
pop
fdivl
push
jbe
std
enter
lret
inc
push
lahf
lahf
addr16
adc
test
cmp
int3
mov
loopne
movb
movsl
xchg
xor
fwait
addr16
mov
mov
push
mov
sbb
bound
mov
int
stos
mov
popl
xor
mov
jp
in
aad
and
data16
xor
add
push
mov
dec
mov
sub
in
xchg
insb
push
into
xor
cmp
leave
scas
push
dec
mov
jnp
stc
jge
inc
dec
inc
inc
lret
jmp
add
sbb
es
rorl
xor
out
jecxz
imul
adc
pop
adc
xor
orl
pop
mov
fnsave
jle
sbb
pop
mov
jmp
adc
std
rol
std
fwait
cld
loope
mov
pop
out
adc
jmp
jmp
bound
scas
lahf
call
and
pop
dec
dec
dec
ror
ja
mov
xchg
pop
imul
xchg
in
outsl
sub
in
push
fadd
dec
ret
jbe
and
cmp
dec
lea
iret
fs
dec
xchg
inc
cld
xchg
jmp
insl
clc
out
add
and
cwtl
push
call
enter
mov
sbb
or
cmp
push
inc
jo
lods
push
test
ljmp
sbb
mull
adc
push
stos
clc
jle
add
icebp
fdivr
inc
sub
popa
in
xchg
mov
cmpsl
pop
pop
test
imul
dec
add
out
daa
cmp
call
mov
adc
push
push
daa
decb
mov
aaa
xor
adcb
shrl
push
pop
mov
mov
or
popa
cmp
sbb
jae
setae
jnp
mov
add
clc
jecxz
push
jbe
filds
mov
mov
jns
jne
cld
xor
adc
pop
repnz
add
int
xor
int3
stos
and
mov
out
int3
lods
repz
lahf
ficoms
mov
pop
xchg
incb
jb
xlat
xchg
adc
xchg
daa
jp
cmp
mov
mov
mov
push
popf
fcompl
add
clc
and
adc
xlat
ror
cli
dec
test
das
cmp
dec
mov
pop
cltd
pop
pushf
push
cmp
fidivl
leave
insb
push
cltd
fdivl
test
mov
ud0
push
cmp
repz
or
adc
jo
mov
test
mov
adc
int
pop
xor
push
mov
cwtl
sub
addr16
cmpsl
adc
in
adc
sti
adc
sbb
lcall
cmp
xor
add
pop
mov
mov
add
xchg
push
xlat
cmpsl
mov
addr16
sbb
sahf
push
and
pushf
mov
sbb
test
cli
cmp
mov
sbb
test
scas
shrb
push
ljmp
js
sti
sbb
xchg
leave
xchg
sbb
xor
addl
pop
inc
insl
add
loopne
lods
out
sbb
add
insb
in
pop
pop
lret
test
jo
mov
lcall
mov
push
cli
push
jl
shrl
mov
mov
mov
dec
mov
ffreep
imul
jae
hlt
daa
lods
jne
inc
int
iret
push
mov
cmp
hlt
nop
ficompl
push
xchg
popf
push
sub
jge
push
ljmp
out
dec
pop
push
adc
sub
aam
fistpl
cli
push
or
stc
shr
imul
adc
popf
movsb
sub
pop
shll
add
fs
mov
mov
mov
in
cld
xor
add
out
xchg
push
ret
pop
and
sbb
adc
and
dec
subl
jl
mov
and
jge
pop
mov
scas
or
sub
push
mov
jge
push
movsl
cmp
cmp
divl
int
sub
mov
cmp
add
adc
fld
adc
stos
into
adc
adc
notb
aas
dec
dec
add
lock
fiadds
call
lds
pop
test
les
int3
and
aas
mulb
push
push
and
out
xor
jp
sarl
dec
movsb
inc
iret
jge
mov
popf
add
test
stos
mov
pop
mov
cmp
shll
jne
ret
loope
fsubrl
lret
insl
out
in
mov
mov
mov
fisubs
xchg
ret
das
jne
xchg
lock
ret
js
aas
lcall
jle
adc
jnp
lret
cwtl
sbb
cmpsb
dec
dec
mov
jmp
add
ret
cmp
mov
sub
fsubl
orl
mov
or
repnz
mov
dec
push
sub
mov
xchg
mov
mov
pop
sbb
pop
jmp
jae
fwait
mov
in
xchg
mov
or
fdivrs
adc
out
inc
jne
lods
cmc
call
popa
adc
out
mov
movsw
sahf
xor
mov
mov
imul
bound
xchg
cltd
dec
popa
pop
cli
and
sbb
cmp
jle
cltd
push
inc
xchg
and
dec
push
cli
add
cmpsb
inc
jno
mov
in
mov
xor
cs
add
fildl
sub
sarl
cmc
rol
in
call
popf
test
cmp
sbb
sbb
cltd
mov
lea
jge
iret
adc
dec
nop
xlat
xchg
mov
mov
cmp
sub
loope
movsl
jge
jmp
stc
xchg
inc
jmp
loop
leave
ds
dec
pop
xor
mov
pushf
incb
popf
jnp
lcall
xchg
imul
leave
and
add
cmp
insb
lods
push
xchg
lods
fld
loop
dec
call
xchg
mov
out
ficomps
xchg
insl
jo
and
mov
or
push
sub
scas
fnsave
ljmp
xor
add
xor
cmpl
ret
in
push
imul
mov
fildll
es
push
pop
leave
and
or
dec
scas
scas
outsl
lfs
pop
xor
cli
pop
js
test
out
stc
mov
roll
or
dec
pop
or
sahf
push
adc
daa
mov
cs
or
lods
sbb
cmp
xchg
call
sahf
push
mov
insb
ja
or
mov
sub
and
dec
jge
enter
mov
jmp
repz
daa
sti
stos
stos
aas
cmpsl
aam
inc
mov
repnz
adc
fucomp
out
push
xchg
and
jecxz
incl
mov
push
pop
js
movsl
jae
jbe
movsb
in
aam
fbstp
cmpsb
and
daa
shrb
jge
mov
sbb
lahf
pop
lods
jns
inc
test
add
je
testl
dec
test
xchg
push
mov
or
clc
bound
ja
fsubrp
dec
xor
lret
rorl
mov
dec
popf
je
fld
jge
rcr
mov
aaa
and
insl
movsb
mov
xchg
inc
imul
push
imul
out
xor
and
push
xchg
outsl
lds
cmp
push
add
xor
scas
sbb
pop
and
dec
mov
leave
xchg
or
xchg
jle
push
insb
roll
inc
andb
jmp
popa
sbb
in
mov
loop
push
gs
mov
mov
and
adc
aas
sub
pusha
push
dec
faddp
rep
outsb
xor
xor
test
pop
xor
add
pushf
dec
sub
in
push
xchg
pop
mov
xchg
xchg
into
out
popf
cli
mov
loope
lret
aas
jecxz
add
shll
inc
and
jns
pop
scas
jg
jne
push
bound
fildl
int
inc
aad
push
mov
pop
mov
lcall
inc
inc
dec
sub
loope
fs
adc
xor
sub
cltd
icebp
popa
mov
ljmp
mov
add
imul
fistpl
pop
es
and
mov
xchg
out
ja
pop
mov
in
out
cld
push
mov
mov
inc
pop
mov
cmp
dec
and
pop
jp
jbe
jp
lods
add
fmuls
push
or
and
and
inc
ret
inc
adc
adc
mov
imul
sub
ret
and
call
sub
iret
in
jae
sub
jbe
jecxz
pop
insl
fists
wbinvd
leave
aad
sbb
lcall
movb
mov
lods
popf
fdivrs
jne
sub
cmpsl
jmp
imul
mov
or
push
stos
ret
cmp
in
push
mov
bndldx
lea
mov
dec
xor
mov
adcl
xor
pushf
dec
imulb
cmp
jne
mov
xor
xor
and
pop
adc
pop
arpl
or
call
dec
and
sbb
aas
pop
sbbb
sub
sbb
icebp
clc
out
xchg
mov
mov
pop
push
movsl
call
test
inc
cmp
xlat
cmp
push
ret
lods
jns
xor
jecxz
mov
ja
adc
inc
push
in
lds
add
cmpb
pop
or
xchg
test
hlt
or
mov
inc
mov
mov
lods
outsl
fldcw
es
fnstsw
sbb
call
test
test
adc
insb
mov
jo
mov
xchg
jmp
movsl
sbb
xchg
jecxz
mov
xchg
mov
mov
pushf
push
push
mov
lret
push
lcall
mov
jo
cld
cmc
jp
lcall
bound
and
pop
mov
xlat
jmp
fcmovnb
lock
stos
les
fwait
arpl
out
xor
lahf
call
and
movsl
and
into
push
push
lea
jnp
imulb
dec
sub
out
adc
add
cmp
lds
jb
loop
push
jp
movl
outsb
imul
outsb
xchg
pop
adc
lahf
aaa
fdivl
inc
mov
push
bound
in
mov
mov
lea
sahf
jno
sub
movsb
ret
leave
cltd
inc
fucom
mov
inc
push
loop
cld
movsl
js
sbb
xchg
scas
mov
cmpsl
int
pop
xchg
incl
cmc
js
fcoml
cmpl
sbb
cmp
inc
ss
lcall
mov
inc
notb
call
push
push
push
pop
push
pop
xchg
jge
push
or
jle
cmp
cmpsb
pushf
lods
jg
cld
xchg
cs
int3
movsl
pop
mov
jmp
jno
pop
sbb
orb
mov
push
test
push
popf
xchg
cld
fs
mov
xchg
rclb
inc
stos
mov
mov
daa
xchg
and
sahf
lret
pop
into
in
loop
inc
rcl
es
push
add
mov
adc
xor
or
mov
xchg
adcb
data16
es
inc
pop
shrl
add
das
aad
les
mov
das
push
pushf
mov
xor
jne
inc
or
mov
jmp
or
pmulhw
cli
xlat
enter
int3
leave
jge
sbb
sbb
and
xor
mov
inc
mov
adc
or
test
mov
cmp
std
sub
ret
mov
jo
pop
mov
lds
repz
lret
dec
mov
mov
sub
mov
or
rcrb
sub
insl
mov
dec
xor
into
add
jl
xor
mov
test
fnstsw
repnz
jae
movsb
icebp
mov
divl
jo
clc
in
push
fiadds
push
loope
fwait
aad
jo
push
inc
in
and
leave
sbb
test
lret
es
jmp
mov
jge
out
add
push
aad
mov
lret
push
cmp
xor
iret
push
scas
inc
sub
movsl
ds
mov
sbb
fcoml
jecxz
dec
inc
insb
pop
push
mov
mov
ret
loopne
in
mov
fcmovb
xchg
sbb
repnz
enter
xor
mov
xchg
lret
jl
push
stos
jne
test
fwait
sub
lret
pop
sbb
je
push
mov
pop
pop
lcall
jmp
dec
aas
jae
adc
mov
mov
fisttps
and
push
aas
out
mov
mov
test
and
insl
cmp
mov
sub
xor
hlt
dec
cmpsb
out
mov
pop
fidivrl
sub
sbb
mov
inc
roll
cli
inc
inc
pop
rcl
mov
or
jo
ja
mov
cmp
mov
popa
enter
mov
testb
mov
in
jns,pn
cmpsb
xchg
sbb
lea
call
rorb
add
ljmp
sbbb
insl
push
mov
sub
fiaddl
outsl
inc
xchg
cmp
jbe
out
into
cmp
std
inc
in
test
arpl
lods
push
jmp
push
ss
mov
push
repnz
mov
dec
push
popa
std
sbb
mov
aaa
mov
or
push
lret
dec
std
dec
sbbl
arpl
imul
pop
negl
xor
int3
mov
jle
cmp
and
add
cmp
arpl
cs
sti
add
dec
or
scas
xchg
jmp
mov
push
or
push
leave
push
ds
notl
push
out
out
or
fdivr
jle
out
rcl
imul
lret
mov
mov
adc
sarb
mov
cmp
imul
pop
sbb
mov
sbb
lcall
rclb
inc
mov
cmp
sarb
dec
repnz
sbb
xor
into
loopne
jnp
movsl
jb
or
insl
inc
pop
pop
test
push
or
mov
cmpsb
xchg
cmp
cmpsb
popf
pop
xchg
mov
lret
jnp
fsubrp
adc
in
lods
adc
dec
mov
mov
add
data16
stc
jb
cmpsb
sbb
popa
cmpsb
jno
adc
loopne
add
mov
adc
dec
xor
mov
into
adc
jb
cmp
jo
mov
lods
mov
or
mov
xchg
mov
aaa
daa
mov
sbb
push
xlat
shlb
add
stos
data16
xchg
aas
xor
into
stos
clc
out
mov
lds
loope
cwtl
stos
int3
sbb
jp
adc
imul
push
adc
int3
xor
mov
jb
cs
adc
xchg
sbb
mov
inc
jno
pop
cmpl
stc
les
fildll
cwtl
mov
clc
outsl
sub
aaa
loop
jl
hlt
sbb
shr
movsb
lods
push
enter
or
aam
test
or
mov
mov
sbb
mov
dec
sub
stc
adc
jp
mov
xlat
stos
jnp
xor
movsb
outsl
push
and
filds
loope
sbb
pop
add
jo
jb
push
pusha
ucomiss
xor
push
les
stos
add
mov
lods
sahf
out
loop
mov
neg
jbe
inc
int3
mov
dec
push
adc
roll
in
inc
repnz
push
test
inc
pop
stc
cli
cmp
icebp
xchg
add
mov
insl
jns
add
and
pop
push
fcmovnbe
outsb
dec
fldl
rclb
xor
idivb
ljmp
dec
add
mov
les
fimull
ret
inc
pop
hlt
imul
pop
cs
fnsave
cmp
sbb
push
test
inc
rcl
inc
divl
pop
inc
clc
sti
out
mov
push
out
mov
adc
pop
xor
cmp
fwait
rolb
or
les
add
jne
and
jb
sbbl
out
or
fcmovne
or
inc
aaa
mov
xchg
popa
fsubl
fsubs
test
in
dec
sbb
fisubs
inc
dec
dec
push
daa
sbb
cltd
repnz
icebp
dec
mov
data16
aam
cmp
sahf
outsl
jecxz
loopne
repnz
mov
pcmpeqw
xor
js
mov
xchg
loope
int3
fidivrl
in
lods
loop
lock
pop
mov
cmp
in
mov
mov
cmp
fs
xchg
adc
in
xlat
insl
pop
test
add
rclb
sbb
xchg
and
test
pop
dec
iret
mov
cmp
pop
push
xchg
stc
jae
lods
jg
fadds
push
sbb
or
mov
inc
mov
ret
sbb
inc
out
icebp
cmp
es
or
popf
push
mov
sub
mov
rclb
rolb
cmpsb
pop
push
movsb
or
add
das
pop
int
fisubs
and
sub
pop
int3
insb
stos
in
sti
icebp
pop
push
loop
js
out
xor
xor
dec
sbb
jns
ret
ljmp
insl
lods
xor
jge
cmpsl
push
lds
insb
mov
adc
push
sti
sbb
cmp
popa
rcrb
in
pop
cmp
sbb
dec
les
cmp
int3
xchg
arpl
fwait
mov
and
cmpsl
jbe
lock
inc
call
lahf
fldenv
insb
ljmp
lret
aam
jae
mov
push
jns
mov
lret
fsubrs
movsb
shll
clc
sub
dec
mov
mov
push
arpl
push
lods
cmc
adc
xchg
sub
int
aam
fisttpl
adc
leave
mov
in
lods
cmp
imul
cmc
jmp
or
mov
pop
lahf
leave
shrb
jnp
or
mov
push
jle
push
inc
aad
hlt
std
cmp
mov
mov
hlt
cmp
mov
cld
xchg
mov
push
ret
jmp
mov
cmp
dec
stos
mov
jge
lods
decb
adc
and
loopne
dec
leave
repz
idiv
repnz
jno
cmp
leave
xchg
cmp
adc
dec
stos
cltd
mov
sbb
ficoml
pop
cmp
popf
popf
shlb
pop
mov
jle
jne
fdivs
or
pop
mov
out
mov
js
mov
mov
test
push
ljmp
into
pop
cwtl
fdivrs
test
dec
imul
fisttpl
sub
jae
adcl
mul
cmc
pop
clc
xchg
shrl
cmp
imul
popf
pop
mov
decl
jno
inc
mov
jns
dec
mov
xchg
jo
xchg
pop
iret
jb
les
xchg
pop
inc
test
sahf
sarl
push
call
mov
adc
cmp
dec
jae
pop
movsb
sbb
sahf
inc
fistps
roll
in
push
iret
in
aaa
mov
add
push
push
roll
and
sub
lcall
fdivp
hlt
int3
or
push
dec
push
pop
std
mov
fcmovb
aaa
test
cmp
inc
pop
add
shlb
xlat
cmp
add
cli
xor
xor
lods
pop
jl
sbb
inc
sub
xchg
int
popa
int3
inc
pop
cmpsb
cmp
je
push
dec
add
adc
orb
or
rcrb
lahf
dec
pop
or
inc
pop
dec
xorl
xchg
sbb
orb
aad
test
xchg
xchg
xlat
xchg
push
outsb
orl
push
sti
sbb
sbb
lods
mov
mov
pop
ds
mov
sub
arpl
push
enter
js
incl
inc
mov
xchg
push
lret
adc
test
xacquire
fs
jp
adc
mov
lret
or
mov
pop
sbb
mov
jl
loope
bound
movsl
cmp
push
ljmp
mov
mov
into
xor
xor
or
out
jle
je
cltd
loopew
pop
mov
fcmovu
test
add
movsl
mov
push
mov
push
bnd
push
in
jmp
loope
pop
add
int3
enter
sbb
nop
dec
jne
push
cltd
call
mov
sub
mov
and
add
push
add
sahf
fsubrp
call
movb
in
cmp
pop
adc
jle
jno
lahf
frstor
push
notl
std
inc
mov
loopne
jl
test
adc
ret
xor
lea
xor
pop
push
and
xlat
mov
aam
test
jmp
ja
sbb
mov
pop
mov
mov
mov
push
or
mov
add
pop
insl
sub
shlb
push
inc
enter
mov
pop
mov
xchg
mov
loopne
cmp
fnop
test
mov
lret
and
mov
pop
pop
xchg
push
rcrb
mov
add
inc
xchg
ds
mov
orl
jge
dec
pop
mov
cmp
xor
sbb
ret
pop
test
loope
and
cmp
arpl
movsl
and
in
cmpl
dec
add
call
movsb
push
inc
push
xor
xchg
std
mov
mov
fsubr
sub
jge
movsl
xor
pusha
push
pop
inc
flds
pushf
sub
xor
int3
add
jnp
fwait
out
inc
mov
ret
sub
cmpsl
xchg
ja
enter
dec
mov
mov
jb
stos
add
bound
mov
push
mov
ret
popa
int
inc
xchg
bndstx
rorb
das
test
jecxz
adc
push
or
divl
mov
call
and
cmp
stc
or
in
push
dec
cmp
jge
pop
jle
stos
sub
out
pop
xchg
imul
repnz
jle
popa
cmp
push
pop
pop
sar
pop
xchg
dec
ficomps
inc
xor
fwait
fwait
loopne
insl
test
mov
ret
pop
test
dec
add
in
addr16
sbb
mov
xchg
pop
push
sub
stos
mov
leave
dec
mov
das
push
adc
inc
mov
jns
es
jbe
pushf
cmp
arpl
or
icebp
bound
dec
xchg
add
pusha
fdivl
jnp
hlt
xlat
movsb
or
lods
pop
lods
xor
xor
mov
imul
lock
mov
fwait
jns
je
jne
jns
fildll
and
mov
aaa
mov
xchg
aas
sub
mov
sbb
or
stos
add
jp
addb
ds
icebp
sbb
imul
test
push
cs
cmp
scas
lods
or
dec
leave
xchg
sbb
fs
dec
cld
sbb
mov
in
push
pop
xchg
hlt
dec
adc
or
popa
push
inc
mov
adc
pop
sahf
fisubs
xor
or
jnp
xchg
push
xchg
iret
lods
xchg
out
ds
stos
sbb
xor
jae
scas
push
inc
jmp
xor
pop
inc
or
jbe
inc
lock
inc
lret
stc
fidivs
inc
jg
ret
nop
mov
jb
push
aas
mov
js
or
cltd
jns
fdivl
or
jmp
adc
fcomp
mov
cmp
std
je
push
ja
lret
inc
cld
fnstcw
mov
scas
das
inc
push
pop
mov
inc
sbb
negb
inc
jge
xor
sub
mov
in
sbb
adc
cs
push
je
test
xlat
nop
or
lods
cltd
fstpl
push
enter
xor
sub
xor
in
xor
xchg
xchg
xchg
cwtl
cmp
aad
push
cmp
out
in
shrl
jne
shlb
adc
lea
mov
loop
adcl
mov
adc
mov
lcall
cmp
mov
cmc
fdivrl
enter
xor
jae
fisubs
stc
in
notl
xchg
mov
scas
outsb
lret
movsb
jecxz
repz
dec
adc
xchg
and
dec
stos
subl
mov
ljmp
xchg
xchg
mov
stos
out
push
lds
inc
and
and
sbb
aas
add
push
adc
add
lods
clc
pop
shlb
loopne
incl
lock
jo
pop
call
rorb
jecxz
mov
aad
pop
int3
leave
sbb
mov
fcompl
rcr
jp
sub
outsb
xchg
mov
in
mov
int3
xlat
loopne
daa
adc
xchg
mov
int3
xchg
aaa
push
and
add
cltd
pop
sbb
cmpsl
pop
ds
adc
repnz
or
or
testl
repz
jmp
cltd
and
jae
test
add
sti
pop
divl
scas
cmpl
lfs
sbb
setl
add
jo
je
dec
sbb
mov
mov
popa
fstps
or
dec
push
push
movsl
or
xchg
adc
int3
jle
xchg
adc
aam
lcall
jno
adc
cmpsl
mov
aad
fcoml
dec
movsb
dec
adc
cmpsb
push
stc
cmp
cmpsl
jmp
add
cli
sahf
add
lods
jl
enter
xor
pop
std
xchg
loop
iret
sub
sahf
xchg
mulb
mov
arpl
sub
cltd
test
jbe
data16
rcrb
test
mov
dec
enter
sahf
mov
rclb
clc
xor
xor
push
xor
jl,pn
cld
scas
into
and
rclb
mov
mov
xchg
lods
in
pop
inc
loop
or
imul
mov
lcall
jbe
call
insb
jmp
icebp
in
cltd
sub
sub
or
out
mulb
lods
adc
cmpsl
test
push
push
push
mov
leave
sub
jb
pop
cmc
arpl
stc
scas
mov
dec
aas
enter
pop
mov
les
sub
push
dec
sub
sbb
adc
shr
or
dec
leave
pop
xor
je
icebp
and
pusha
jl
fwait
bound
jnp
repnz
pop
sub
lahf
cwtl
sbb
bnd
aad
aaa
and
or
dec
addr16
mov
ja
icebp
lahf
lret
mov
sub
jg
cmp
pop
push
xor
js
sbb
aas
mov
mov
inc
dec
enter
inc
mov
hlt
dec
iret
jmp
push
shrb
jbe
je
xchg
sbb
repz
mov
mov
cli
dec
ljmp
mov
push
dec
xor
inc
fsubl
popa
hlt
adc
inc
xchg
out
xchg
aaa
lods
out
pop
fcoms
push
sub
movsb
pop
and
lods
inc
shlb
push
pushf
dec
sub
shlb
or
inc
push
mov
cwtl
out
pop
mov
orb
test
pop
xorl
mov
aam
adc
push
cmpsl
sub
jp
iret
mov
pop
and
outsl
dec
push
call
mov
mov
add
jbe
dec
mov
sbb
call
sbb
mov
scas
nop
sbb
push
addb
xchg
mov
insb
add
jns
jp
push
jmp
xor
and
andl
jl
mov
insb
fldt
shrb
mov
jg
sarl
out
loope
lock
cmp
scas
dec
sahf
push
sbb
pop
addb
dec
out
fcmovnb
stc
repz
es
jp
rcrl
icebp
cld
push
inc
repnz
ret
push
data16
sbb
pop
xchg
out
sbbb
in
mov
and
aad
fmuls
sbb
or
cmc
xchg
push
js
ss
out
in
in
mov
bound
pop
mov
add
push
dec
xlat
jp
fisubl
pop
pop
sbb
inc
mov
lea
cwtl
xchg
mov
adc
mov
stc
mov
jns
pop
add
jecxz
sub
mov
imul
je
cmpsl
xchg
cmp
push
xchg
popa
mov
add
sbb
outsl
or
push
fcompl
int
push
xor
fnsave
test
ret
mov
lock
mull
loop
pop
mov
cmp
cld
xchg
daa
enter
pop
out
sub
fstpt
cmc
arpl
pop
loope
inc
cmc
scas
cmc
jo
lret
shlb
cmp
dec
ljmp
jp
imulb
loopne
fs
shlb
scas
dec
lahf
popa
adc
out
fdivrp
inc
push
dec
flds
inc
add
outsb
lea
or
fisubs
cltd
retw
jno
iret
sbb
outsb
or
int3
les
lds
fcomi
in
or
stc
adc
shrl
pop
push
pop
cmp
jae
pushf
subl
push
jae
clc
ljmp
inc
xor
xor
adc
cmpsb
inc
mov
jmp
xor
mov
roll
pop
orl
push
test
xchg
xchg
pop
rorl
and
xchg
mov
sbb
jno
out
fildl
push
cs
and
sub
ficomps
mov
push
mov
pop
sub
push
pop
aad
es
or
shll
test
in
sbb
loop
mov
pop
lock
xchg
or
and
cmp
pop
mov
sub
mov
mov
sub
movsb
cmp
inc
inc
push
cmp
sarl
sbb
mov
add
sub
add
cmp
xchg
ret
stos
test
sbb
ret
xor
arpl
jl
cmp
sbb
jle
clc
add
out
cmp
pop
mov
aad
jb
cmp
cwtl
nop
dec
in
aad
flds
mov
adc
adc
adc
pusha
push
add
mov
add
push
pop
bound
sbb
inc
sub
jb
and
divl
dec
int3
pop
lock
fwait
int3
dec
pop
incb
addl
popf
dec
loop
mov
fistl
pop
cmpb
mov
clc
ss
shlb
and
sbb
out
pop
jbe
jmp
sub
cmp
adc
inc
jnp
mov
scas
sbb
dec
pop
mov
lret
cmpsl
push
add
jle
insb
xchg
je
dec
daa
xchg
xchg
hlt
pop
mov
mov
lods
shl
jne
loop
xchg
add
cmpsb
xchg
cld
scas
dec
or
jg
pop
fsubr
roll
fisttpl
pop
jno
mov
fdivl
xlat
jl
in
pop
sub
out
push
or
pop
je
fisttpll
mov
test
out
into
cmpsl
push
dec
movb
lods
lcall
pop
dec
sub
lods
add
mov
mov
lods
std
mov
pushf
data16
add
inc
sub
aaa
inc
sub
push
dec
adc
in
and
pop
sbbb
xlat
push
shl
adc
lret
mov
lret
js
push
aaa
ss
jge
leave
test
jle
mov
adc
in
dec
mov
lods
pop
add
mov
sbbl
jle
mov
dec
dec
jo
jae
dec
aaa
sbb
jnp
dec
xchg
popa
adc
test
xlat
jg
jp
xor
shlb
lods
xor
mov
pop
das
or
aam
inc
pop
adc
xchg
call
das
inc
insb
dec
ret
xor
cwtl
pop
aam
or
fisubrl
jb
orb
cmc
andnps
adc
cmpsl
dec
arpl
or
push
mov
sub
into
push
fisttpll
sbb
lahf
lcall
push
scas
int3
lods
and
push
icebp
jmp
popa
add
push
push
fadds
rorb
pop
pmulhuw
fstpt
cmp
fwait
lea
sub
imulb
ljmp
rolb
call
js
repnz
loop
insb
ds
int
int3
imul
jo
std
pop
add
testl
jb
lret
adc
out
sbb
lea
inc
icebp
pop
and
test
sbb
mov
repz
dec
add
popa
daa
push
in
mov
pop
dec
int
daa
sti
push
out
nop
push
insl
xor
fstps
imul
aam
inc
jo
out
push
sbb
std
pop
mov
fisubrl
inc
lcall
rcrb
out
add
std
xchg
add
nop
dec
mov
lahf
mov
inc
and
inc
in
dec
mov
lahf
lods
inc
ljmp
shrl
shrb
iret
pshufw
pop
pushf
cmp
pushf
cld
mov
pop
aaa
mov
adc
mov
scas
inc
outsb
lock
sbbb
add
aas
push
ss
dec
bound
xchg
loope
lret
lcall
movsl
cld
cli
mov
or
in
xchg
sbb
lahf
in
out
pop
add
lock
pop
orl
cld
xor
cmpl
xor
movsb
loop
mov
rcl
cmc
pop
scas
ret
cltd
leave
jecxz
insb
jl
jne
inc
xchg
xor
mov
sbb
add
mov
sbbb
mov
adc
lahf
pop
sbb
mov
stos
jnp
loopne
pop
inc
or
ds
pop
and
inc
mov
in
vmwrite
loopne
jg
out
mov
pop
shlb
out
fldl
pop
mov
insb
ss
xor
cltd
xor
fwait
and
insl
cmpsl
xchg
leave
mov
lea
xchg
repz
and
jo
jl
mov
das
push
push
icebp
mov
lods
mov
inc
or
and
aaa
mov
adc
je
mov
jbe
cmp
jnp
jo
rcrb
pusha
fmull
jne
pop
mov
out
jp
mov
int3
leave
fcomip
add
mov
mov
sub
cmp
out
sti
cmc
insb
cltd
inc
push
stc
sti
mov
lock
imul
pop
pop
les
jmp
int3
iret
in
lods
inc
sub
icebp
jge
sub
jecxz
cmpsl
pop
and
xor
lods
imul
in
repnz
cmp
pop
into
mov
loope
and
inc
bound
adc
jb
aad
pop
and
pop
movsb
fldt
add
popf
mov
push
out
push
cs
fmuls
jle
out
sahf
ret
lds
test
xchg
jbe
adc
cmpsb
es
cmc
fs
jl
jp
outsb
outsb
fsubs
pop
into
fistpll
add
pusha
jae
daa
jo
mov
loope
popa
add
xchg
loopne
mov
cmpl
mov
jp
daa
stc
cmp
xchg
or
dec
jl
out
mov
inc
xor
lret
xchg
scas
out
ja
cltd
sti
hlt
jle
xchg
imul
jbe
ss
into
aad
call
pop
jb
push
xlat
ljmp
add
inc
stc
pop
sbb
into
pop
rorl
sub
ljmp
repnz
aad
ljmp
gs
cmc
and
xchg
inc
sub
jmp
fnstenv
xchg
in
fsubrl
ror
mov
push
ljmp
push
lret
idiv
cmp
pushf
and
or
adc
xchg
pop
jle
dec
inc
pop
mov
call
pop
stos
jns
xlat
mov
ror
incb
outsb
jbe
inc
xor
popf
and
out
pop
negb
scas
ss
fcomip
mov
xchg
scas
aad
into
aad
mov
pop
jo
push
fstps
jge
je
jmp
jle
leave
repz
cmc
popf
cmp
xor
mov
push
jb
adc
lahf
stos
jns
xlat
mov
mov
mov
add
jp
inc
jne
out
jae
and
stos
jne
mov
jbe
loop
xchg
cmp
sub
mov
mov
or
inc
stos
adc
cmp
repz
cmpsb
inc
and
ljmp
call
repnz
orl
fcomip
inc
jp
js
icebp
inc
ret
pusha
hlt
test
mov
arpl
cs
popa
test
adc
mov
and
jae
and
shll
mov
and
jno
lcall
dec
lcall
jp
fldt
sahf
mov
and
in
cli
sub
repz
lahf
xor
mov
cwtl
cmpsl
into
aad
pop
cmpsl
dec
sub
cmp
repnz
iret
sbbb
andb
idivb
jbe
adc
in
mov
fistpll
jle
lods
cli
out
lret
sbb
jbe
daa
mov
jmp
outsl
ljmp
or
xchg
jecxz
pop
cwtl
iret
or
fidivs
in
out
cmpsl
je
jns
pop
adc
daa
pop
xchg
call
leave
lds
add
lea
xor
outsl
daa
mov
lahf
repnz
mov
mov
xchg
jp
add
cmp
ss
sbb
mov
xchg
sbb
mov
into
jnp
cmp
aad
int
ljmp
fldcw
and
pop
into
pop
add
jbe
inc
iret
dec
cmp
mov
repnz
outsl
dec
sub
ds
stc
xor
adc
testl
ret
into
aas
jb
pop
into
pop
xor
push
push
jae
std
into
aam
gs
mov
fs
insb
scas
pop
nop
push
ss
mov
mov
pusha
cli
mov
scas
out
jg
adc
cs
out
xchg
push
stos
test
in
cmc
and
out
jbe
jns
aaa
sti
jns
mov
mov
fdivrl
sub
mov
sahf
fs
push
out
cli
mov
test
xor
pop
in
pop
mov
test
xchg
cwtl
mov
jbe
cmpsl
lcall
mov
push
ss
mov
mov
sub
jmp
ljmp
cmp
sub
cmp
js
push
add
sbb
dec
and
xlat
jae
cltd
movsb
into
jae
pop
stos
out
xchg
cld
cs
inc
sbb
adc
out
jb
push
outsb
cmpsl
pop
shrl
jo
and
mov
inc
sbb
mov
jno
test
scas
jecxz
rol
cld
bsf
aam
lahf
add
ret
call
icebp
mov
scas
xlat
mov
sub
jmp
lret
scas
repnz
cmp
cmp
je
add
int3
push
mov
jle
ss
jg
sbb
add
scas
fstpt
mov
scas
mov
fistps
into
pop
jle
fdivl
pushf
std
scas
into
cmc
enter
pop
js
daa
add
fldcw
jl
orb
xor
aaa
jmp
or
int
xor
cltd
or
stc
sbb
sub
or
and
mov
push
push
cmp
call
cmp
pop
cmp
mov
dec
xor
into
aad
sahf
jo
mov
cli
cmp
mov
or
sbb
ja
lcall
and
test
idivb
and
dec
test
lret
jle
pop
inc
lret
lods
cmpsb
dec
mov
xchg
mov
call
push
inc
dec
jp
sub
lret
in
and
cmpsb
addr16
push
pop
popf
fidivrs
fistpll
mov
xchg
repnz
mov
fists
popf
stos
jns
xlat
push
daa
sahf
imul
shlb
repz
jecxz
incb
add
xlat
in
bnd
scas
insb
mov
mov
add
add
movsl
fwait
out
mov
ljmp
mov
xchg
sbb
rolb
ret
std
jbe
ds
loope
mov
shl
jle
adc
call
cli
add
hlt
lods
mov
jle
aaa
jl
shr
leave
pushf
and
jge,pt
pop
add
shrl
mov
pop
xchg
pusha
mov
cs
mov
mov
jmp
leave
cwtl
xchg
xacquire
rol
aam
mov
sbb
ret
and
xchg
out
dec
xchg
outsl
adcl
cli
les
negb
shl
xor
mov
arpl
and
mov
jle
xlat
dec
mov
jne
dec
aam
cs
outsb
sub
mov
xor
cmpsb
icebp
xchg
cwtl
aas
push
inc
test
daa
add
or
inc
cli
xlat
xchg
test
lds
into
pop
cwtl
pop
leave
gs
and
movsb
std
mov
xlat
out
rol
push
mov
xchg
jbe
xor
outsb
sbb
push
push
push
pop
ljmp
cmp
adc
outsl
push
mov
fidivs
sbb
cld
out
cli
xor
lods
repnz
inc
adc
out
xlat
ljmp
add
in
ss
shll
pop
pop
xchg
pop
sbb
imul
adc
mov
cmp
dec
xchg
enter
repz
cmp
and
out
addr16
or
cmc
and
mov
ss
hlt
mov
jns
xchg
stos
or
or
sub
in
int3
mov
lahf
es
clc
inc
jmp
and
jb
divb
mov
xlat
mov
enter
int
cmpsl
jp
add
idivl
in
stos
ss
push
sub
or
bound
shl
and
ja
scas
xchg
or
ljmp
or
fcmovnbe
stos
cltd
or
js
icebp
into
push
mov
xchg
out
loop
adc
jle
out
pop
cmpsb
fbstp
cmp
pusha
stc
popa
loopne
sub
mov
cmp
mov
mov
ss
dec
lcall
add
out
xchg
fistpll
xlat
into
fcomip
adc
xchg
stos
mov
cmpsb
mov
sub
cmpsl
pop
sbb
stos
jno
test
inc
pop
shrl
inc
es
popf
mov
fs
sub
repz
movsb
inc
xlat
into
xor
or
repz
mov
xlat
mov
mov
inc
fcomps
jnp
sub
iret
in
jae
rol
fs
inc
subb
stos
stc
inc
cld
out
pop
dec
scas
es
inc
bound
inc
mov
push
in
cli
pop
lock
jmp
jmp
in
sbb
mov
fs
adc
jl
mov
lret
popa
stos
mov
mov
dec
cmp
inc
fisttpl
je
jmp
push
or
cmp
inc
mov
mov
xor
popf
adc
addr16
xor
cs
mov
les
aad
sub
in
popa
in
cmc
mov
mov
pop
mov
inc
cmp
sub
push
lcall
testb
ja
and
aad
popf
sbbb
pop
loope
xlat
arpl
or
jle
pavgw
and
add
push
out
push
repnz
icebp
and
jmp
xorl
fdivr
testl
ja
and
pop
leave
pop
pushf
out
test
pop
into
push
icebp
inc
inc
nop
sbb
cmp
lret
out
mov
sub
jno
sub
shrl
and
fstpt
loop
adc
inc
std
fldenv
push
loop
inc
jbe
sub
jae
sub
add
in
aad
ljmp
push
rep
sti
cmc
in
xchg
sbb
hlt
jae
and
insb
sbb
cmpsl
testb
out
ljmp
std
scas
inc
and
and
adc
pop
repnz
pushl
push
pop
rorb
js
jl
inc
mov
bound
jl
pop
daa
data16
xlat
arpl
sub
add
cmp
test
and
sub
out
cli
xlat
ljmp
mov
inc
push
jp
cmc
and
js
dec
es
ja
in
sub
or
push
movsl
pop
mov
out
add
aam
es
adc
insl
jae
scas
jo
sub
pop
mov
daa
or
and
inc
fistps
fimull
mov
insl
out
xchg
lahf
mov
dec
xor
inc
fucomp
jmp
dec
test
ds
xacquire
xchg
sub
xorb
scas
cmp
hlt
fstpl
pop
sub
test
or
push
push
out
movsl
sbbb
pop
and
mov
fcomip
rcrb
adc
pop
lods
cmp
into
or
les
mov
repz
mov
inc
scas
adc
stos
adc
ljmp
cmp
movsl
std
lret
mov
and
fs
mov
mov
ljmp
and
lret
jbe
dec
shlb
out
jno
mov
xor
or
insb
test
cmc
lcall
stc
and
repnz
xor
mov
rorl
adc
mov
sbb
scas
into
sub
jae
loop
data16
xlat
ljmp
ljmp
push
repz
mul
inc
mov
mov
sub
xor
push
aas
cmp
jl
push
cld
ja
imul
lods
popf
mov
out
cli
pop
popf
stos
jns
lea
in
pop
ret
sarl
mov
icebp
scas
into
aad
frstor
mov
dec
xor
pop
xchg
es
ja
dec
movsl
adc
cltd
inc
mov
addr16
push
arpl
ss
lods
or
adc
sub
in
movb
in
ljmp
mov
imul
test
pop
nop
insl
subl
sbb
mov
fisttpl
add
test
sbb
imul
insl
push
xchg
cmp
pop
cmp
mov
mov
xchg
in
mulb
in
xchg
mov
push
imul
cmp
xor
clc
xchg
repnz
pop
out
loopne
mov
imul
inc
outsl
insb
lods
ljmp
arpl
mov
sti
das
lahf
xor
pop
sbbl
mov
popa
inc
add
repnz
mov
scas
outsb
inc
fnstenv
ficomps
push
xchg
mov
stc
rcll
jbe
iret
jle
mov
or
loope
jae
mov
loop
xchg
test
daa
fs
sti
and
mov
ds
adc
sbb
out
inc
ds
push
fcomip
fcomp
xchg
adc
sbb
sbb
dec
cmp
scas
add
jo
mov
repnz
test
add
inc
mov
add
adc
xor
fidivs
sbb
popa
mov
repnz
adc
mov
mov
or
inc
out
mov
add
pop
out
cwtl
adc
dec
notl
sbb
xor
or
daa
sub
inc
xchg
ja
enter
cmp
das
inc
in
jl
xchg
test
aam
cltd
adcb
loopne
repz
sbb
aaa
pop
mov
outsb
out
ja
aam
mov
jg
inc
mov
ljmp
insb
inc
nop
sbb
pop
outsb
jmp
test
xor
addl
addb
mov
in
loop
sbb
push
jb
in
cmp
and
mov
out
cwtl
add
pop
mov
jmp
dec
adc
dec
xor
incb
push
mov
and
inc
nop
add
lcall
outsl
sahf
and
mov
leave
mov
push
push
inc
mull
jge
xchg
inc
xchg
mov
sub
dec
es
imul
out
xor
push
movsb
push
mov
jle
jg
mov
mov
or
jmp
pop
roll
pop
lods
mov
scas
or
mov
gs
out
les
sub
and
cmp
xchg
push
sbb
sub
add
add
lret
xor
nop
sarl
mov
int3
sbb
lcall
hlt
adc
incb
les
push
jae
lret
xchg
sbb
xor
sti
mov
aaa
pop
cmp
ss
sti
sahf
cmp
pushf
lods
xchg
mov
xor
stc
jmp
es
test
sbb
mov
popf
pop
mov
sub
fldenv
cmp
fcomip
add
cs
mov
sbb
inc
pushf
push
sbb
xchg
sbb
enter
pop
imul
jbe,pn
mov
jmp
xchg
sub
rorb
gs
ffreep
add
xchg
in
rcrb
push
push
popf
mov
jle
add
sub
daa
push
fdivl
sti
jno
mov
out
aaa
addr16
jb
dec
mov
iret
out
outsl
repnz
mov
stc
jge
fucomip
mov
repnz
sbb
rclb
or
and
xchg
push
sub
sbb
mov
loop
ss
pop
lods
add
mov
push
aaa
lcall
fstps
ret
jl
in
imul
add
cmp
repz
rcr
dec
subl
test
hlt
fmull
push
outsl
cwtl
fbld
lock
in
sahf
cmp
cmp
sti
iret
mov
arpl
cld
or
imul
daa
outsb
push
push
shrb
je
or
or
dec
jno
inc
pop
aam
dec
mov
sub
mov
cli
xchg
cmc
sbb
leave
sbb
sub
jae
push
je
sti
ljmp
or
scas
mov
fs
imul
push
push
jae
pop
inc
xchg
clc
dec
inc
xchg
mov
rorb
inc
xchg
sbb
nop
xor
stc
imul
mov
mov
pop
mov
adc
xor
xchg
mov
out
pop
int
mov
xor
xor
mov
inc
mov
aam
out
in
xchg
xchg
aad
js
push
sub
jo
cmp
leave
divb
jne
andb
xchg
mov
pop
pusha
jg
sbbb
mov
jno
sub
mov
jmp
shlb
adc
mov
popf
int
iret
sbb
add
lea
imul
sbb
or
mov
mov
xchg
bound
push
inc
xchg
lahf
in
sbb
inc
xchg
jmp
cmpsl
push
divl
mov
incb
jnp
add
dec
mov
test
mov
scas
fs
mov
ficomps
cs
ror
cltd
push
aas
add
loope
cltd
fsubrp
jns
dec
mov
fsubl
xchg
adc
stos
addr16
es
sbb
jecxz
jns
imul
test
stos
xchg
cwtl
xchg
pop
pop
push
aam
push
divl
sub
leave
pop
shlb
jge
jg
xor
lds
shlb
push
scas
jo
add
sub
cmp
movsb
or
mov
imul
leave
adc
sbb
mov
ret
or
lcall
mov
ret
mov
xor
into
xor
inc
aas
loopne
xor
clc
xchg
adc
sbb
sbb
clc
jp
pop
repz
pop
sub
push
sbb
cld
stos
aam
mov
in
xor
sahf
in
ret
notl
push
push
mov
jnp
xchg
adc
bound
je
pop
cmp
adc
test
lret
adc
shrb
test
push
xchg
pushf
lcall
inc
aaa
loope
mov
rorl
xchg
or
popa
mov
stos
or
adc
lods
jp
call
mov
sbb
pop
xor
xchg
and
pushf
hlt
aad
sub
inc
ret
cwtl
push
in
nop
mov
adcl
xor
mov
mov
push
xchg
and
mov
daa
mov
das
lock
push
push
aas
nop
mov
lds
enter
cmp
sbb
mov
push
ds
stos
repnz
fcom
pushf
xor
add
icebp
sbbb
roll
sbbl
and
cmpsb
xor
sbb
cwtl
out
push
shl
mov
cmp
xchg
push
icebp
out
mov
jb
fmuls
jnp
ljmp
push
fstl
leave
out
push
ja
add
ja
push
cld
js
clc
in
sti
pop
jns
and
jae
push
flds
sbb
ss
sub
pop
pop
mov
add
ret
sbb
lods
and
jg
jmp
add
jbe
pop
aad
std
clc
xchg
lock
ret
ds
rcl
jo
in
mov
loopne
cwtl
arpl
int
sub
clc
iret
jb
in
push
insl
iret
test
ret
scas
dec
jbe
stc
cli
addr16
and
adc
pop
fldt
push
ret
inc
lcall
inc
les
or
add
xchg
arpl
adc
push
sahf
jmp
stc
add
push
pop
mov
lods
insl
add
sub
jg
aaa
gs
in
cmp
lock
adc
in
cmpl
adc
int3
inc
es
adc
fdivs
std
add
mov
ffreep
xlat
stc
idivl
add
out
je
and
into
test
popa
iret
inc
lock
fstpl
or
cltd
sbb
push
mov
stos
jo
cmpsl
mov
xor
fld1
mov
popa
and
jbe
push
dec
ret
xor
fdivl
xor
pop
clc
jno
cli
sbb
xor
mov
icebp
adc
sahf
mov
test
gs
mov
xor
inc
jg
lret
mov
aas
mov
adc
pusha
lds
sub
adc
inc
insb
cmp
adc
cmp
aad
mov
jmp
push
push
sub
pop
notb
add
cmp
fwait
inc
push
sbb
mov
pop
push
popa
mov
push
lcall
fistpll
cmp
cltd
mov
xlat
adc
clc
xor
and
scas
mov
cmpsl
dec
iret
cmp
mov
das
push
bnd
inc
inc
pop
pop
ret
leave
xchg
jae
sbb
xor
inc
pusha
popf
out
or
sti
or
adc
mov
pop
sbb
fsubrl
lods
sub
xorb
and
or
stc
jmp
faddl
nop
cmp
jl
mov
cmc
dec
xor
in
sbb
ret
sbb
jnp
xchg
ret
cmc
rcl
imul
dec
test
push
inc
mov
mov
mov
js
jo
sbb
in
jb
mov
sahf
inc
inc
mov
jb
pop
xchg
je
rcr
pushf
iret
subl
or
cwtl
pop
mov
cmp
bound
lods
or
mov
mov
pop
mov
pushf
dec
xor
mov
out
cmp
sbb
shrb
sarl
mov
pop
pop
cmp
jecxz
push
dec
stos
sbb
fildll
pusha
insb
mov
pop
add
xchg
imul
mov
scas
dec
pushf
pop
jo
pop
cs
jg
adc
out
add
jmp
and
dec
pop
enter
cmp
mov
adc
mov
arpl
pop
xchg
dec
jb
jne
xchg
xchg
in
into
ret
mov
into
xor
adc
rcr
cli
adc
cmp
adc
jmp
pop
fs
dec
sbb
and
xor
daa
lcall
xchg
lcall
and
jecxz
adc
and
adc
insb
bound
fsts
or
adc
cmp
scas
sahf
inc
je
popf
lods
out
pop
jns
sub
notl
scas
rcl
xchg
rorb
popf
inc
pop
fsubrs
popf
jae
mov
xor
adc
push
xchg
xor
or
mov
ljmp
inc
pop
pop
inc
add
aam
insl
mov
pusha
repnz
clc
jmp
inc
dec
les
inc
in
dec
scas
dec
iret
push
inc
mov
outsl
fldz
mov
jge
je
js
cltd
pop
or
lds
cltd
pop
add
fcmovnbe
rcrb
aad
inc
cltd
loope
push
in
mov
mov
or
out
test
or
mov
lahf
and
popf
xchg
pop
addr16
push
mov
cmp
jge
xor
jnp
cwtl
and
enter
sbb
jp
push
ret
divl
enter
rorb
leave
out
pushf
mov
fstps
es
data16
dec
fistps
cmp
sbb
or
enter
movsb
and
imul
xchg
sub
jo
add
test
mov
idivl
jge
mulb
fstl
pop
icebp
dec
addb
pop
out
clc
cmp
push
rorl
xchg
sub
or
std
push
xor
cmp
daa
pushf
mov
dec
mov
mov
fldt
push
pop
or
pop
imul
mov
add
push
popa
lret
aam
lds
dec
dec
adc
add
shlb
fistpll
popf
std
fildl
jecxz
xchg
inc
in
push
adc
daa
mov
or
sbb
and
into
lods
enter
pop
out
cmc
es
repz
dec
push
jno
movsl
inc
lea
std
jge
js
addb
aad
mov
dec
mov
fimuls
adc
pop
out
in
nop
test
scas
push
sahf
jno
xor
dec
cmpsb
enter
cmp
cmp
scas
xchg
dec
cmp
mov
dec
add
add
mov
int3
xor
adc
stos
imul
fsubr
xor
cmp
js
adc
movsb
in
arpl
in
pop
scas
jl
adc
lcall
dec
xchg
mov
or
jmp
sbb
cmc
in
stos
mov
fbld
rcll
clc
sub
outsb
test
es
inc
mov
out
or
push
fsubp
mov
mov
mov
xor
leave
dec
push
pop
decl
xchg
adc
les
das
dec
push
shlb
dec
or
les
cmp
sti
sbb
mov
jl
and
enter
jno
rcll
imull
out
out
loop
xor
scas
cmp
les
call
mov
push
jae
add
xchg
movsb
adc
inc
leave
aam
push
movsb
xlat
lods
movsl
popf
imul
push
cmp
out
int
pop
inc
insl
inc
clc
xorb
call
loope
cmp
das
rolb
lahf
xchg
testl
cltd
cmc
xchg
fadd
jmp
lahf
sti
cld
aas
or
or
inc
lock
data16
mov
push
stos
add
hlt
push
mov
dec
fxtract
ror
mov
sbbl
jbe
add
adc
adc
mov
rclb
inc
sbb
jbe
aaa
sbb
mov
push
pop
into
das
pop
push
dec
sbb
push
push
inc
dec
subl
test
jae
fcoml
inc
and
cmpsb
lods
mov
in
and
mov
dec
ret
in
cmc
inc
scas
shlb
push
mov
fdivl
out
cmp
cwtl
jmp
pop
ret
arpl
push
pop
pcmpeqd
push
mov
stc
pop
inc
out
mov
or
mov
push
sub
cli
pop
ds
scas
ja
inc
int
mov
leave
add
pslld
xchg
loopne
xor
adc
ficompl
cmp
pop
or
dec
inc
mulb
and
adc
push
jnp
ljmp
in
negl
sub
test
fildl
mov
push
test
les
sbb
xchg
jg
and
or
aad
test
popa
jecxz
mov
cld
je
pop
js
dec
jb
fs
xlat
sub
xchg
cpuid
outsl
and
mov
mov
xchg
push
sarb
mov
leave
mov
mov
pop
xor
popf
imul
lret
push
mov
cmp
push
ljmp
xchg
push
mov
mov
mov
and
int3
mov
sarb
movsl
xchg
mov
pop
out
test
movq
out
out
jmp
cmp
fidivs
jge
pop
cltd
dec
push
sbb
sbb
mov
cmp
fcoml
loopne
and
push
roll
sbb
fsubrs
imul
pop
fwait
cmp
push
adc
aad
out
addb
inc
test
or
inc
ss
adcb
pop
cwtl
lret
sub
jb
test
xor
mov
rolb
mov
fldl
aas
gs
push
or
adc
mov
les
fsubrl
addr16
sub
mov
int
or
cli
sbb
rolb
nop
sti
or
adc
inc
popa
mov
iret
xchg
cmpsl
fmul
das
and
xor
jne
xchg
sub
fwait
adc
cmpsb
cmpsb
ficomps
xor
xchg
dec
pop
mov
scas
mov
xchg
sbb
leave
mov
aaa
pop
addr16
daa
xor
stos
push
xchg
xchg
cmc
repz
jb
lods
inc
mov
cs
or
cmp
cmpl
inc
sub
popa
out
or
add
scas
bts
insl
dec
inc
xor
popa
data16
lret
fmul
mov
mov
dec
ja
pop
dec
loopne
sub
adc
mov
pop
dec
clc
loop
push
pop
jae
repnz
cmp
xor
stos
inc
mov
setg
cmp
cmp
loopne
xor
and
les
cmc
inc
or
aam
lods
cmp
jge
xchg
je
sti
test
pop
mov
jbe
imul
pushf
mov
dec
mov
push
cmp
shrb
shr
scas
fcoms
add
fadd
popf
xchg
fidivrl
aaa
dec
je
icebp
push
inc
cwtl
icebp
xchg
sarb
sbb
aam
adc
inc
push
lahf
fs
push
das
dec
cmp
pop
jno
jbe
outsb
jp
inc
je
pop
neg
or
call
inc
jo
lret
adc
pop
or
and
dec
push
jno
push
lret
sub
mov
ja
es
or
imull
or
jecxz
or
push
les
gs
cmp
push
test
loope
push
daa
xchg
pop
or
mov
jp
out
and
mov
rcrb
jno
out
mov
fldl
addr16
adc
cli
data16
test
inc
idiv
insl
jmp
in
mov
popa
adc
cld
add
fidivl
fucomip
in
mov
hlt
fmull
pop
mov
mov
push
outsl
mov
dec
das
push
push
xor
adc
cs
xchg
sub
sbb
rolb
sbb
imul
xor
xchg
test
jle
popa
inc
loop
ds
cmp
and
jmp
pop
mov
fistpll
les
call
shr
push
inc
dec
xchg
cmp
mov
movb
es
sahf
neg
add
ret
or
cmp
pop
jno
mov
mov
loope
jo
movsb
insl
imul
enter
and
loop
test
imul
pop
pop
rcl
lods
in
add
inc
ret
lods
out
out
xor
stc
push
cmp
or
sahf
adc
dec
imull
push
inc
inc
sub
nop
cli
adc
cmpsl
mov
push
cltd
mov
mov
xchg
sti
call
fldenv
push
mov
daa
cmp
outsl
testl
dec
out
dec
mov
gs
adc
xchg
xor
insl
mov
fwait
xchg
cs
bound
mov
xorl
or
shrb
sub
outsb
inc
sbb
icebp
inc
jmp
pop
mov
jae
jb
push
jmp
insb
xor
pop
inc
ficoms
dec
insb
or
jno
lods
std
cli
mov
cld
roll
dec
movsb
add
push
lods
mov
cs
pushf
mov
or
cmpsb
shlb
popf
iret
repnz
jbe
iret
and
iret
mov
mov
cld
pop
pop
data16
aas
imul
xchg
xchg
jne
sub
je
mov
out
add
outsl
ljmp
loope
test
mov
movsb
negb
les
les
rep
dec
or
jle
xchg
mov
icebp
ljmp
std
pop
cltd
stos
cli
cmp
inc
mov
jge
outsl
fwait
arpl
xchg
js
cli
add
mov
mov
sub
test
push
icebp
jno
pop
jno
stc
jae
sbb
out
cmpsl
pushf
inc
dec
popa
xchg
cmp
out
cmpsb
pop
hlt
push
test
mov
xor
adc
mov
xchg
mov
mov
out
lret
in
or
lea
in
outsb
insb
rcrb
gs
cli
add
arpl
shlb
cltd
mov
sarb
mov
jl
xor
jns
dec
fcompl
out
mov
push
decb
in
adc
jp
cmpsb
mov
adc
in
xchg
lock
mov
cmp
sarl
nop
popa
out
mov
pushf
xor
cmp
xor
aas
loope
cmp
into
inc
and
push
dec
xor
mov
push
and
clc
mov
cmp
or
pop
shrl
add
loope
pop
arpl
add
cli
xchg
out
pop
stos
xchg
sbb
hlt
push
fst
movsb
jle
sub
cmp
out
jp
mov
mov
mov
mov
popf
mov
jno
out
jmp
shlb
mov
push
cltd
sbb
int3
out
xchg
add
clc
mov
rcll
push
xor
cmp
mov
mov
stos
insb
and
add
inc
jb
shll
dec
push
push
cmp
cld
jb
xchg
lds
pop
push
mov
sarb
loopne
ficoms
test
sbb
mov
rorb
mull
cld
inc
xor
add
stos
lods
das
pop
adc
dec
mov
cmp
mov
push
mov
jg
lea
push
pop
out
imul
adc
daa
sub
std
push
sahf
das
adc
fwait
mov
inc
jl
shll
mov
push
cmpsl
cmp
cmp
test
push
sub
cld
call
jle
mov
push
push
mov
pop
imul
push
lods
mov
out
xchg
push
dec
and
cmp
shll
insb
xlat
jmp
rolb
in
pop
xchg
mov
popf
xor
in
cmp
popa
clc
in
jnp
loop
xchg
pop
add
test
mov
cltd
loopne
jo
cltd
and
cmp
inc
xchg
mov
inc
lock
xor
push
aas
inc
and
add
sub
push
push
cmpsb
push
int3
clc
mov
mov
movsb
stos
pop
xorb
and
and
lahf
sbb
xor
mov
cmpsl
add
sub
pusha
sub
xchg
sbb
ds
iret
mov
insb
mov
mov
adc
mov
pop
or
cmc
dec
push
sti
insb
ja
imul
arpl
mov
int
loop
pop
pop
sbb
lea
adc
std
sub
insl
arpl
xchg
jae
call
addr16
or
notb
cwtl
jmp
xchg
leave
das
outsl
sbb
dec
rcrl
mov
and
pop
pusha
and
iret
push
jns
mov
mov
xchg
pop
dec
mov
pusha
sub
mov
insb
mov
ret
cmp
xor
outsl
or
aam
xchg
ds
sub
mov
je
mov
push
ds
mov
ret
leave
adc
mov
addb
fisubrs
jo
or
push
jmp
adcb
cli
aam
mov
xchg
inc
xchg
and
lock
pop
xor
popf
sbb
mov
mov
inc
add
lret
xor
dec
scas
push
sub
mov
stos
outsb
jae
or
add
lds
mov
insl
pop
jae
rcl
sub
repnz
outsl
cmp
out
mov
mov
es
sbb
sub
cvttsd2si
into
sub
mov
gs
inc
add
pop
out
mov
daa
mov
out
ja
pop
pop
clc
sub
jmp
cld
sbb
push
xor
and
jge
jb
push
mov
sti
lret
sbb
test
xchg
cs
inc
and
in
ss
jb
adc
int3
rol
int
xchg
sub
cs
adc
ljmp
mov
jae
sub
adc
jb
push
add
leave
mov
imul
and
add
je
jbe
mov
pop
and
adc
sti
jns
pop
mov
rol
push
and
pop
pop
repnz
mov
cmp
lea
pop
ds
outsl
data16
mov
lds
stos
mov
cli
jno
aam
add
xchg
test
hlt
pop
std
dec
push
es
fidivl
mov
enter
out
lds
mov
jge
popl
push
loopne
test
inc
leave
pop
leave
sbb
xor
fwait
pusha
lods
repnz
jmp
fsubrp
ljmp
dec
xor
dec
daa
pop
push
fistps
pop
mov
sbb
cmp
adc
mov
das
push
es
cs
dec
push
ss
dec
pop
inc
mov
setns
stc
rol
dec
xlat
mov
out
xor
push
fildl
js
adc
stc
repz
test
arpl
mov
cmp
sbb
sahf
filds
jle
test
cs
sub
cmpsl
cli
out
int
add
repnz
jg
inc
rorl
adc
mov
insb
or
pop
and
xor
inc
fs
jmp
sbb
sbb
adcb
xchg
and
imul
shrl
pop
xchg
add
outsb
pop
into
dec
lock
jo
xchg
negb
mov
lods
xchg
cld
or
add
arpl
sbb
and
pop
test
lea
dec
or
je
mov
xchg
mov
xor
lcall
in
mov
adc
mov
mov
mov
mov
add
lods
push
mov
xor
clc
js,pn
push
sti
or
sti
and
hlt
xor
int3
jns
mov
push
addr16
mov
pop
ret
scas
outsb
into
sbb
sbb
cmp
xor
rcr
jno
out
insl
aam
into
leave
scas
jo
jae
dec
cmp
mov
ds
fwait
les
push
cmc
ret
mov
call
stos
dec
lock
mov
scas
pop
test
shll
movb
mov
sbb
lret
add
push
out
fsub
and
loope
push
nop
mov
pop
ficomps
inc
pop
stos
lods
fnstsw
lahf
hlt
or
push
ret
sahf
movsb
dec
int
lret
push
scas
les
push
mov
push
mov
out
dec
out
add
sub
dec
and
incl
sub
negb
pop
nop
adc
xchg
and
add
push
lock
sub
mov
sub
adc
inc
lret
sbb
inc
push
icebp
scas
stc
add
shr
jne
xor
jo
mov
in
adc
in
fcoms
shrl
add
sahf
dec
jno
lods
sbb
ficompl
gs
or
pop
pop
push
or
inc
in
cmpsb
mov
cltd
add
pop
mov
xchg
dec
aad
popf
push
xor
daa
dec
dec
jge
mov
cltd
mov
out
cmc
push
pop
mov
jnp
pop
int3
push
cmp
lret
je
adc
ss
push
adc
sub
push
mov
cmp
pop
mov
into
push
mov
sub
sahf
mov
shl
mov
in
push
and
outsb
into
int
loop
daa
pop
jg
ret
xor
dec
in
psubsw
add
ds
dec
pop
cmp
imul
je
add
adc
lock
pop
fstl
pop
cltd
in
repnz
nop
mov
imul
xchg
aam
sbb
mov
jl
mov
aad
push
push
cmp
aaa
pusha
das
xchg
negl
andl
cmc
rcll
aas
mov
lods
pop
and
inc
icebp
mov
out
loop
xlat
fcmovnu
add
or
jno
push
mov
shr
xor
out
es
fmuls
mov
xor
mov
pushf
jae
mov
sub
mov
mov
jns
idivl
psrlw
sbb
lods
mov
fsts
mov
sub
adc
or
cmp
cmp
xor
pop
imul
push
movsl
adc
mov
xor
icebp
movsb
cmp
sbb
xlat
cmp
xchg
shl
xchg
test
lock
inc
test
rcrl
and
mov
mov
aaa
iret
xchg
fdivp
sbb
ldmxcsr
gs
mov
pop
inc
outsl
ret
mov
mov
jnp
sti
and
pop
das
shrl
push
mov
pop
xorb
sub
xor
fsubrp
out
add
inc
jno
push
inc
adcb
pushf
xor
push
cmp
rcrl
xor
arpl
clc
and
sbb
sbb
jmp
scas
aam
movb
mov
sub
mov
lea
dec
push
movsl
mov
pop
xchg
add
jle
aas
inc
into
xor
cltd
or
mov
cmp
adc
or
clc
dec
fstps
cmp
or
mov
neg
fsubs
lods
test
stc
out
jbe
inc
pop
mov
lock
mov
pop
jl
mov
mov
test
adc
testb
xchg
lods
testb
adc
jbe
lock
cmpsb
out
adc
std
icebp
inc
dec
pop
push
add
pop
inc
adc
mov
fidivrl
out
outsb
xor
ljmp
out
and
mov
adc
push
xchg
sahf
imulb
popf
fidivrl
popa
mov
inc
mov
jg
enter
cmpsl
xchg
loopne
gs
stos
mov
lret
sti
mov
xor
and
cmp
and
iret
add
add
and
adc
inc
jo
dec
sub
and
ss
mov
enter
ja
das
jo,pt
jle,pt
bound
xor
push
fsubrl
in
sbb
clc
or
jp
fs
xchg
xor
mov
in
pop
orl
inc
call
lahf
sbb
xchg
and
test
dec
and
out
jno
dec
in
xchg
sbb
fnstsw
fwait
hlt
pop
xchg
iret
movsb
daa
mov
ret
jb
repnz
rclb
inc
in
sub
mov
adc
push
movsl
jecxz
mull
out
jo
xchg
push
mov
pop
imul
jmp
jl
aaa
pop
jecxz
mov
cmpsl
das
dec
rcr
sahf
add
cld
pop
inc
jecxz
adc
lcall
pop
lock
into
cmp
push
loopne
xchg
sbb
mov
les
mov
mov
and
mov
in
cld
jmp
int3
inc
scas
or
cmp
test
pusha
loop
cmp
fwait
cli
sbb
nop
fisubrl
rolb
ret
icebp
mov
adc
divl
and
mov
sub
daa
int3
addb
shlb
cmc
push
cmp
cmp
js
shlb
inc
sub
sbb
mov
xchg
dec
pop
cltd
jecxz
cwtl
mov
mov
je
test
in
pop
repnz
mov
or
cmpsb
sub
sbb
fcoml
insl
outsb
cmp
insl
pop
mulb
xor
inc
lock
fbld
jle
daa
out
sahf
sub
jb
cmpsb
mov
inc
xor
push
stos
push
push
mov
push
jae
into
fildll
cmp
shr
out
repnz
jne
movsl
popa
mov
dec
mov
std
in
mov
sub
jecxz
jo
or
pop
cmp
sbb
or
adc
ds
call
xchg
movsb
fistl
aas
sub
mov
xor
sub
xchg
rcll
cmp
jae
mov
xlat
inc
mov
repnz
xchg
fdivs
sahf
stc
inc
popf
lret
notl
mov
ret
push
bound
leave
lea
incl
pusha
shll
test
jne
sar
mov
nop
xchg
std
mov
shrl
mov
adc
cmp
mov
dec
xlat
mov
sub
jmp
dec
dec
into
adc
jbe
push
lds
pop
fidivrs
insb
sbb
cmp
push
into
gs
adc
push
xchg
loopne
and
xchg
inc
pop
dec
fldcw
lcall
and
mov
lds
cmp
in
imul
inc
jbe,pt
xor
sti
aaa
test
int
inc
xor
or
dec
mov
les
sti
mov
xchg
inc
adc
stos
enter
adc
cmp
inc
and
xchg
push
movsb
jbe
repz
ror
data16
dec
mov
ja
shl
push
sbbl
cmp
jl
push
js
sbb
out
rorb
ja
jnp
mov
sbb
es
push
inc
sarb
repnz
cmp
mov
inc
inc
adc
inc
imul
popf
pop
repz
movl
loope
adc
pop
ss
jg
xor
scas
call
dec
faddl
xchg
mov
ret
je
add
jp
adc
js
sbb
sub
negl
out
xchg
ds
sub
mov
push
clc
xchg
inc
cli
push
shrb
xchg
fs
jp
mov
into
scas
dec
push
rcll
repz
adc
cs
add
aam
cwtl
daa
lea
mov
adc
ret
sub
cmpsb
xchg
popa
adc
add
xorl
cmp
mov
push
inc
cld
int
scas
mov
dec
mov
inc
inc
aas
out
adc
dec
fldcw
sbb
push
sbb
shll
pop
push
fsubrs
cmc
pushf
imul
push
adc
out
int
test
sbb
or
lret
das
jl,pn
pop
ret
data16
push
mov
push
xchg
stos
xor
outsl
xor
sbb
or
sti
sbb
push
test
mov
daa
add
pop
jecxz
push
push
fldenv
lahf
insb
int3
add
lods
push
xchg
inc
lret
std
fsubs
cmp
and
jp
stos
jmp
cmp
mov
dec
jp
sbb
sahf
push
leave
insl
pop
jnp
ja
mov
les
push
fistl
addr16
pop
adc
fmulp
es
ret
sub
lods
inc
pop
aam
ret
out
add
fimuls
cs
push
fmuls
mov
aam
jmp
dec
sbb
mov
cmp
dec
sbb
cmc
fs
jp
popa
push
dec
push
sbb
xchg
dec
add
insb
sahf
ss
push
dec
cmp
mov
inc
jae
cmp
gs
sub
es
outsb
jnp
xor
aad
aaa
sar
dec
cmpsb
flds
mov
int3
xor
imul
test
mov
aas
adc
jecxz
ret
xor
rcrb
mov
xor
add
bound
sbb
mov
jp
mov
cli
and
push
push
and
subb
sbb
add
mov
xor
outsl
imul
mov
out
dec
lea
mov
mov
mov
xor
addb
sarl
outsb
cmpsb
test
xor
bound
cmp
in
fldl
in
icebp
roll
fdivrs
js
int
call
mov
mov
repnz
cmp
jae
mov
dec
xchg
xor
pop
pop
push
cmp
out
ret
sbb
in
mov
mov
mov
jg
movsb
outsl
into
in
test
ds
push
andl
cmp
push
xorb
xchg
mov
repz
inc
inc
mov
cmp
es
roll
push
cmp
andps
imul
add
addl
mov
mov
jle
js
xor
shrl
jg
cli
xchg
dec
jne
pusha
inc
dec
xor
push
mov
add
in
cmpsb
xchg
inc
shr
dec
adc
sbb
fbstp
dec
sbb
dec
insb
mov
xchg
xchg
mov
cmpb
scas
cltd
push
iret
lret
xchg
lret
and
fwait
adc
enter
xor
mov
out
and
mov
xchg
daa
fcompl
subl
jae
mov
into
es
add
push
sar
test
dec
push
fidivrs
lds
jbe
fdivr
fisttpl
mov
pop
inc
divl
iret
int3
insl
sub
jecxz
pop
mov
or
test
or
mov
js
shl
cwtl
subb
push
popa
xor
lahf
imul
lds
push
cmp
mov
mov
repz
in
xor
cmp
je
out
sbb
cli
adc
adc
lock
icebp
sub
mov
adc
jne
fadd
ret
inc
rclb
jbe
mov
lret
and
and
sub
mov
push
lock
adcl
into
stos
mov
ja
or
add
test
mov
jns
or
jno
cwtl
mov
loop
mov
stos
outsl
adc
aam
sbb
lds
int3
sbb
jnp
lahf
cld
push
inc
xor
test
test
xchg
call
mov
push
les
shll
mov
push
add
in
xchg
cs
xor
ss
xchg
and
push
in
mov
arpl
idiv
jge
daa
into
cs
inc
push
jae
push
push
push
dec
pop
daa
xorb
ja
scas
pop
lods
popl
nop
jp
cmp
hlt
fcoms
subb
pop
in
jge
ss
dec
cmp
or
movsl
push
filds
pop
jle
imul
adc
les
adc
inc
jb
jo
jl
sbb
stos
xchg
mov
xorl
and
out
in
fildll
les
jno
enter
cmpsl
jmp
push
aad
jge
aam
inc
testl
in
movsb
and
sbb
mov
movb
mov
fildll
sti
std
cmp
or
fcomi
sub
inc
jbe
jo
or
and
int3
pop
pop
sbb
pop
lods
lock
ds
jge
mov
sbb
call
cmp
stos
cmp
hlt
sub
xchg
lret
incl
cs
add
ss
mov
cli
insb
sbb
or
push
test
scas
jb
loopne
inc
sub
add
add
push
pop
cmpb
jne
pop
mov
cwtl
pop
jno
insl
pop
fs
gs
nop
jp
cmp
jecxz
loop
cmpsb
fmul
mov
scas
pop
push
sarb
push
sbbb
and
pop
data16
mov
test
imul
out
in
cmpsb
jge
jne
popa
pop
inc
push
jmp
imul
pushf
out
and
js
jmp
movsl
jl
mov
lret
cli
scas
xor
mov
inc
xchg
leave
andl
test
int
jmp
arpl
lcall
mov
xor
outsb
lods
push
or
xchg
xor
sbb
test
test
adc
push
jbe
leave
push
and
jnp
xor
out
xor
push
out
dec
icebp
sub
sub
movsb
mov
dec
push
jmp
js
add
add
movsb
mov
ja
mov
push
or
mov
mov
in
xor
sbb
jecxz
fs
leave
vmread
out
dec
std
push
adc
push
jg
inc
lret
jo
push
jle
movsb
insl
fsubp
sti
into
test
xor
stos
rorb
bound
cmp
sbb
jmp
insb
jecxz
pop
add
cmp
stos
mov
adc
shlb
jo
sub
rcrb
sbbb
sbbl
mov
cmp
scas
xchg
into
jns
test
pop
jp
inc
pushf
adc
adc
outsl
inc
repnz
add
xor
ficompl
dec
out
out
sbb
popf
mov
xor
test
cmpsl
push
sbb
inc
mov
xchg
mov
mov
cmp
cmp
push
adc
sbb
out
adc
push
sub
cmp
loopne
inc
dec
shl
out
mov
imul
outsl
cmp
test
mov
dec
jb
xchg
fsubrs
mov
sahf
loop
sarb
mov
pushf
test
mov
adc
mov
js,pt
std
sbb
pop
pop
jne
sti
dec
movsbl
pushf
jo
cli
lods
dec
aam
movsb
and
xor
ss
add
cltd
inc
mov
orl
adc
loope
cli
iret
in
add
pop
iret
jmp
sbb
dec
ret
push
or
fs
imul
incl
popf
dec
sbb
pop
push
ljmp
jae
icebp
push
xchg
jle
sub
fcomip
cmp
mov
mov
pop
jmp
cli
dec
fmull
mov
lcall
adc
cmp
int3
mov
pop
ja
lods
and
stos
rep
sub
jle
jg
insl
jp
pushf
int3
imul
jmp
jmp
add
jnp
test
mov
subb
lock
stc
rorb
xlat
dec
mov
mov
je
scas
mov
movsb
dec
ja
xchg
jno
fimuls
mov
orb
push
push
xchg
repz
fs
movsb
inc
xor
xor
outsl
leave
inc
dec
ss
int
xor
jge,pt
test
add
mov
sub
flds
jnp
shlb
mov
fyl2x
cld
imul
jg
dec
and
repz
sub
imul
out
cmp
arpl
mulb
pop
stos
sub
adc
dec
lret
adc
xor
test
push
loope
sbb
push
sbb
aaa
mov
lock
mov
lds
xor
loop
sarl
push
and
fisubrl
movb
fisubs
pop
repnz
sub
mov
inc
je
clc
out
fsubrp
pop
and
cld
sarb
sub
test
subl
sbb
mov
leave
sti
dec
or
adc
mov
pushf
shll
ds
and
les
cmc
adc
xchg
push
jnp
xchg
dec
test
pop
add
jbe
mov
stc
in
mov
insb
clc
adc
sub
ss
mov
fisubs
pop
in
sbb
arpl
cmp
pop
loop
push
aam
xor
andb
inc
fdivs
jl
fwait
mov
adcl
mov
cmp
mov
inc
cmp
lock
pop
andb
or
dec
push
cmc
add
xor
push
iret
pop
mov
inc
enter
xchg
inc
bound
inc
and
fstpl
sbb
cs
lods
lds
test
add
lcall
xor
outsl
xorb
push
pop
pop
mov
or
jnp
clc
je
xchg
dec
xor
dec
fdivrs
sub
in
fmull
cmp
pop
shrl
xor
cmpsb
in
and
jne
nop
das
add
adc
xor
xor
sub
mov
jmp
mov
imul
mov
test
cli
inc
out
int
test
and
jae
fsubrs
push
fmuls
inc
insb
sub
aam
sub
mov
imul
sbb
xor
outsb
mov
jmp
cmp
push
mov
and
outsl
ja
in
adc
adc
lcall
clc
les
push
mov
mov
push
std
in
in
mov
fcmovbe
sub
pop
lret
roll
fwait
cmpsb
xchg
mov
adc
lret
rclb
push
in
push
push
pop
push
mov
xchg
cmp
push
adc
neg
popa
jge
cwtl
js
repz
mov
jp
sahf
leave
int3
push
icebp
lret
cmp
xchg
jp
popf
dec
cmpsb
push
sbb
in
push
loop
shrl
push
inc
testb
pusha
lock
and
mov
test
out
xchg
push
cmp
nop
mov
shll
pop
out
cmp
push
pop
subb
in
push
mov
scas
jbe
xchg
dec
and
lods
dec
int
push
mov
in
mov
sbb
outsl
lds
loopne
int3
movsl
mov
xor
mov
dec
push
lea
and
cmp
mov
fmul
sti
or
pop
arpl
pop
repz
in
adc
jge
jge
jo
push
xchg
lcall
push
insb
sub
mov
std
xchg
lret
adc
std
lret
jge
push
cpuid
lods
pop
xlat
push
sar
cmp
fstpt
add
sahf
int
jae
mov
push
pop
sub
test
es
adc
adc
or
pop
fildl
insl
xchg
push
loopne
stos
and
mov
jge
imul
push
lret
stos
rorl
sti
inc
push
nop
out
loop
cmp
arpl
push
adc
bswap
sub
pop
shrl
addr16
adc
push
cmp
sub
mov
sti
mov
cltd
lcall
bound
scas
repnz
mov
hlt
sbb
repnz
push
nop
mov
lcall
lret
out
adc
out
les
cmp
or
popa
dec
mov
pop
fiaddl
clc
test
inc
inc
mov
std
mov
mov
inc
push
ljmp
in
dec
and
cltd
adc
nop
fdivs
jae
mov
cmp
pop
lcall
and
mov
aam
inc
das
add
sbbl
pop
dec
push
icebp
call
test
pop
push
repnz
daa
mov
nop
cs
or
pop
inc
xchg
inc
mov
iret
icebp
cmp
xor
outsb
popa
sub
xchg
inc
ss
adc
aam
or
add
cmp
adc
js
inc
out
outsl
adc
and
jl
and
xchg
inc
mov
sbb
or
xchg
xchg
push
std
xchg
mov
mov
push
mov
in
xor
xchg
in
dec
jge
popf
mov
icebp
cmp
movsb
and
mov
scas
xor
orl
sub
adc
xchg
lock
or
shll
rcll
dec
and
xor
loope
cmp
push
push
xor
dec
bound
fdivl
std
inc
lea
das
arpl
pop
das
xor
xor
popa
mov
out
das
andb
shrl
jns
pop
test
cmc
in
sti
data16
shrl
cmp
ds
pusha
mov
lcall
addb
std
rep
gs
add
int
loope
hlt
aad
push
inc
push
sbb
call
mov
fimull
add
dec
sub
nop
mov
pop
pop
shr
imul
sbb
mov
push
xor
xchg
sbb
lods
fcmovb
inc
inc
fisttps
cld
stc
ret
in
imul
sub
sub
mov
mov
mov
inc
mov
loop,pn
movsb
pop
mov
icebp
cmp
push
ret
jp
fstpl
cmpsb
faddp
aaa
mov
ret
cmp
ret
fs
nop
push
div
fisttps
adc
mov
push
lret
arpl
xor
fisttpl
icebp
rorl
ja
lret
data16
lcall
add
nop
or
scas
jno
subb
adc
fldt
imull
pusha
xor
dec
imul
aaa
sbb
aas
mov
push
mov
jp
mov
daa
jg
adc
mov
gs
out
fs
dec
xchg
gs
or
dec
lods
aad
rcl
pop
insl
call
mov
ss
sbbl
sbb
or
insb
mov
lock
lock
and
frstor
mov
loopne
addw
fdivrl
icebp
sahf
shr
fsubr
sub
out
movsl
mov
ljmp
je
sbb
stc
das
inc
aam
in
xor
inc
or
stc
pushf
pop
pop
jge
icebp
xor
clc
or
loopne
data16
fcmovb
jbe
cmpsb
and
sarb
push
cmpsb
jecxz
jb
std
imul
mov
mov
mov
inc
fwait
ss
mov
mov
add
push
or
pop
fildll
inc
jbe
mov
xchg
addb
sbb
insb
mov
mov
das
out
add
out
adcl
cmpl
jne
shll
push
or
mov
mov
loopne
xchg
aaa
adc
mov
mov
push
xchg
lods
mov
sub
in
call
das
nop
push
dec
xorb
jo
jnp
int
inc
mov
xor
call
pop
xchg
xchg
xchg
call
mov
adc
sbb
scas
jne
out
pop
shrl
jnp
and
push
outsl
inc
mov
add
and
lcall
std
adc
test
jo
repnz
push
dec
int
mov
push
mov
ss
ss
pusha
insl
dec
fists
mov
clc
push
cwtl
adc
mov
and
lock
ret
xchg
add
fsubrl
sub
mov
sahf
loope
nop
xor
aam
pop
inc
movsb
bound
sub
nop
outsl
mov
movsl
cmp
push
lret
cs
pusha
mov
loope
rorl
inc
dec
sbb
arpl
push
inc
lea
pop
lcall
out
push
insb
pop
and
pop
in
in
fsubp
in
insb
xchg
jmp
cwtl
adc
jp
aam
scas
mov
and
into
jae
dec
cmp
sbb
fucom
xor
cmc
je
andl
mov
fnsave
stos
push
cmp
xor
lds
ret
or
repnz
and
fadds
or
jle
jne
icebp
call
sar
xchg
call
jecxz
pop
adc
fsubrl
jge
adc
filds
stos
ss
out
mov
into
aaa
scas
and
leave
sub
mov
scas
popl
mov
inc
xor
push
js
aam
push
mov
mov
pop
addl
cld
inc
cmp
faddp
fmul
dec
jo
jns
jo
cld
xchg
xchg
pop
pop
sbb
pusha
inc
cld
add
loope
nop
mov
outsb
jle
or
cmpsl
xchg
jle
mov
shrl
movsl
imul
andl
repz
adc
shrl
gs
xchg
push
mov
dec
les
push
inc
dec
cld
mov
cmp
inc
cld
jnp
out
cmp
cmpsl
cmpsl
test
jo
sub
xor
mov
xchg
into
jae
cltd
mov
jmp
cltd
rol
push
add
mov
adc
cltd
out
mov
mov
lds
aas
xchg
outsl
mov
push
icebp
out
jp
jl
test
fadd
adc
popa
lea
sub
rcl
inc
insl
jb
or
lret
out
cmp
push
mov
lret
sahf
mov
fstpl
lret
pop
lock
dec
mov
mov
jg
xchg
shll
xlat
cmp
add
inc
adc
xchg
call
inc
jns
test
in
stc
mov
ss
into
rcr
dec
test
sahf
lods
cmp
nop
int
loop
stos
inc
sbb
adc
arpl
inc
inc
rolb
mov
int3
inc
mov
out
and
sahf
mov
push
jle
jge
fwait
or
in
and
pop
push
xlat
jmp
xchg
push
cmp
shrl
icebp
xchg
pop
or
jmp
mov
or
lahf
les
fistpl
shll
jle
jno
xor
pop
mov
or
hlt
cmp
loop
fdivrl
xor
les
cmp
and
xchg
lods
add
mov
lods
daa
in
dec
sarl
adcb
imul
pop
loopne
fidivs
cmpsb
xor
mov
jne
xchg
gs
sarb
aas
jg
push
fsubs
xchg
xchg
mov
scas
mov
stc
iret
push
dec
sbb
imul
movsl
mov
and
iret
mov
adc
addb
nop
mov
outsb
es
xor
add
movsl
aas
xchg
es
test
pop
cmp
mov
sar
testl
sti
dec
cmc
xor
inc
lret
rclb
shl
sbb
mov
push
pop
popf
mov
insb
rcl
pop
aam
shrb
leave
iret
int
dec
mov
outsb
ja
ret
fiadds
mov
sar
and
into
repz
cmp
mov
cmp
ss
or
decl
xchg
test
jno
inc
fcmovnb
nop
jno
xchg
movsb
loop
mov
out
nop
jge
xchg
pop
xchg
sarl
xchg
mov
hlt
scas
jecxz
or
notb
lds
sbb
push
movsl
add
aaa
addl
fwait
cmpsl
ds
adc
sbb
dec
in
xchg
jb
jp
rcrb
pop
cmpl
cmp
movsl
subb
mov
fdivs
cld
shrb
xor
and
lods
adc
adc
cli
adc
dec
pop
xor
in
pop
mov
not
lods
xor
fwait
and
faddl
call
mov
scas
lea
icebp
xchg
bound
filds
inc
hlt
or
mov
and
dec
lcall
aas
mov
rcrl
das
aaa
add
fists
or
mov
int3
xchg
jb
repnz
xchg
adc
or
fucomi
jl
push
add
xchg
and
pop
mov
mov
add
pushf
add
gs
mov
fwait
cltd
lock
mov
jns
mov
lds
pop
pushw
jle
and
mov
inc
pop
fdivs
pop
shlb
test
rep
in
ret
cmp
sarb
aaa
das
xchg
cmpsl
stos
imul
adc
aam
dec
test
cmovae
mov
jmp
sbb
mov
mov
jo
insb
cmpsl
test
sub
imul
subl
ss
fadd
xchg
jmp
pop
scas
mov
les
push
inc
inc
cli
xchg
jbe
test
or
inc
les
shrb
int
mov
ljmp
xor
jns
in
aam
les
leave
xor
enter
aam
aas
int
leave
push
pop
lds
xor
cltd
fwait
or
in
popa
in
cmp
mov
ds
xor
push
shrd
cmp
cmp
fcmovb
mov
rcll
jmp
lea
sub
test
cmp
or
and
pop
jl
inc
in
imul
cmp
xor
mov
adc
daa
push
shlb
sub
cmp
inc
sub
add
and
push
rol
sahf
jecxz
fs
dec
add
out
mov
push
push
ss
dec
scas
or
icebp
and
and
add
adcl
cmpsl
adc
mov
inc
jnp
jno
stos
sub
mov
xchg
xor
push
adc
xor
lds
mov
mov
or
mov
jae
xchg
xor
mov
ss
gs
jns
lret
jl
ja
in
outsb
xchg
ss
mov
adc
lods
add
iret
sub
cmp
adc
movsl
pop
pop
sub
sbb
xor
inc
cld
into
push
mov
jp
sub
pop
mov
adc
ss
ja
shll
rcrl
movsl
mov
pop
call
mov
enter
sbbb
rolb
mov
jo
or
fisubl
lret
mov
jo
repz
push
imul
bound
sahf
sbb
cmp
imul
jns
pop
pop
cmp
sbb
or
mov
mov
roll
sbb
popa
xor
not
in
xor
ds
mov
jecxz
rcrl
dec
cmp
outsl
and
in
fcmovnbe
call
push
fldenv
adc
bound
pop
mov
ja
popf
sub
iret
repnz
mov
mov
pushf
adc
test
sbb
ret
sbb
repz
das
int3
out
push
and
daa
jg
and
dec
push
cmpb
and
repnz
int
lcall
and
loope
imul
sub
push
pop
cli
pop
xchg
sbb
cli
lock
mov
out
adc
mov
mov
jbe
mov
xor
aaa
jp
mov
jo
add
mov
adc
dec
dec
sbb
sub
push
sub
jecxz
call
std
xor
ds
or
sub
jae
je
mov
jbe
mov
push
lret
inc
fidivrl
sarb
cmp
cmpsb
movsl
bound
inc
cmp
add
push
mov
sub
fstps
sbbb
adc
ret
push
mov
jle
inc
aas
je
mov
pushl
testl
lock
sbb
cld
sbbb
jecxz
sbb
push
outsb
push
mov
fildl
lea
pushf
ret
and
and
pop
bound
adc
mov
test
stos
outsl
jmp
imul
jnp
xrelease
cld
lds
jns
and
in
std
daa
fdivl
divb
mov
test
mov
in
jmp
xchg
add
inc
dec
lret
leave
out
data16
pop
movsb
lcall
nop
pop
and
lcall
pop
inc
test
jb
mov
add
fstp
imul
or
mov
mov
push
stos
jecxz
inc
cltd
cmp
in
or
xchg
outsl
push
xorl
xor
imul
xor
or
repz
push
movsl
inc
ljmp
push
rorl
sahf
data16
lret
loopne
leave
pop
into
jl
test
rorb
sbb
pushf
fmuls
xor
jl
sbb
lcall
jne
icebp
mov
es
xchg
add
repz
enter
jmp
leave
xor
xor
dec
push
push
inc
mov
or
nop
dec
mov
aam
popf
jns
icebp
push
movsb
insl
inc
push
iret
cli
lret
pop
xor
enter
or
cmpsb
push
popa
lods
pop
fldt
jnp
cmpsl
sti
push
inc
cltd
xor
or
xlat
jecxz
lds
int3
or
int
frstor
jbe
outsb
inc
mov
sti
mov
sub
jg
stc
or
pop
and
jae
push
inc
lods
aad
bound
mov
and
sbb
js
ljmpw
in
cmp
inc
popa
add
addr16
cs
imul
pop
es
xchg
mov
push
mov
outsb
inc
iret
mov
shl
mov
inc
js
subb
push
sbb
ss
dec
sbb
mov
pop
je
pop
enter
dec
sarb
into
pop
test
jmp
add
adc
push
dec
test
cmp
and
push
jp
dec
pushf
xchg
adc
push
jl
mov
lds
subb
cmpsb
fisubl
daa
ss
les
filds
dec
ds
insl
sahf
fdivs
cmc
int3
movsb
fldln2
arpl
jp
xchg
clc
outsl
push
dec
movsl
xor
or
cmpb
cld
mov
imulb
fwait
jp
jl
mov
sbb
lea
xchg
and
mov
aas
pop
out
lret
push
adc
lret
cmp
jp
xor
xor
ficomps
fwait
or
inc
mov
sti
out
jb
cmp
sub
dec
and
xor
and
push
dec
mov
mov
mov
add
out
xchg
lahf
iret
inc
jne
push
mov
push
push
pop
clc
jp
adc
dec
xchg
ret
and
jns
xor
mov
jmp
data16
jmp
push
inc
arpl
data16
cmc
das
jb
jae
inc
mov
jns
fisubl
mov
cli
lahf
mov
in
xchg
mov
iret
aam
inc
lahf
lods
cmpsb
mov
or
or
jnp
add
cmp
xor
inc
dec
aad
lret
jbe
sub
aam
divb
sbb
jle
shl
nop
call
xchg
jns
movsb
cwtl
adc
xchg
lcall
lds
pmullw
stos
cmpsl
fst
hlt
jp
insb
sub
gs
pop
jp
into
mov
cmpsl
dec
mov
jb
pop
std
mov
jl
xchg
dec
or
xor
jne
and
sarl
jmp
aaa
test
ss
icebp
popa
jno
aam
addr16
add
andb
mov
lahf
mov
adc
in
nop
lcall
mov
test
mov
push
jo
adc
lock
inc
pop
cli
inc
jecxz
jb
hlt
or
inc
lock
sbb
orb
xchg
sub
pop
in
movsl
test
adc
pushf
iret
xchg
movsb
les
mov
sub
mov
scas
std
add
out
fdivl
mov
nop
jb
jge
aad
es
add
sub
popf
inc
rcl
stc
jp
sub
mov
sti
xchg
push
int
cwtl
jl
xchg
add
cltd
lods
test
loop
xchg
nop
jo
push
mov
movsb
lret
sub
in
jb
adc
mov
mov
inc
inc
daa
mov
sub
jb
jne
jbe
sbb
incb
aas
add
pop
jb
insl
add
push
pop
ss
dec
fsqrt
dec
loope
add
enter
loope
vandps
fcom
mov
push
dec
xor
and
cmp
in
push
jne
push
aad
jnp
push
sub
hlt
pop
pop
xor
cmp
sbb
pop
les
bnd
out
cmp
push
adc
sub
push
ret
jg
adc
and
pop
push
pop
adc
jae
std
dec
stos
mov
or
mov
mov
inc
cltd
push
pushf
xor
scas
dec
scas
sub
aaa
fnstsw
aad
cmp
sbb
and
xchg
fdivrl
into
sbb
xchg
xchg
loop
jmp
push
adc
push
sub
push
test
lcall
jp
fisubl
mov
pop
sbb
mov
mov
mov
mov
dec
in
outsb
dec
xor
aaa
mov
clc
fnsave
das
xor
fisttpll
sub
fdivs
sahf
inc
pop
push
xlat
or
pusha
xor
leave
insl
popa
adc
sub
test
jns
faddl
inc
or
fwait
les
pop
and
ss
lods
push
in
sub
cmp
orb
mov
adc
out
fisubrs
out
sub
push
cmp
inc
les
bound
clc
iret
test
xchg
shl
or
sarl
cmp
pop
mov
clc
aad
sbb
cmp
je
neg
xor
sub
lcall
cmp
stc
movsl
dec
jg,pn
test
hlt
mov
leave
rorl
cmpsb
enter
in
jmp
daa
xchg
repnz
xor
fst
cmpsb
jns
mov
test
add
mov
pop
jmp
adc
push
fildl
jns
shlb
pop
sarb
adc
cmp
inc
stos
or
cltd
stos
xchg
inc
or
loope
ljmp
jbe
sub
out
pop
jmp
aas
sti
sub
jp
fmuls
ficompl
je
cmpsb
in
cli
out
daa
push
inc
and
ret
jge
lods
adc
inc
jle
dec
adc
out
push
pop
xchg
cs
pop
xor
jae
dec
sbb
inc
or
mov
pop
fs
xor
inc
mov
add
adc
lods
int3
cmp
inc
mov
jo
mov
mov
xlat
mov
stos
jne
or
pop
out
dec
into
jo
dec
jg
xor
pop
adc
rclb
pop
out
insl
or
fs
ds
mov
aad
rcl
movsl
cmpsl
sub
xlat
addr16
js
xor
shl
ret
cld
sub
mov
movsb
stos
dec
divb
mov
mov
icebp
arpl
and
jae
arpl
jecxz
ss
sti
cmp
imul
and
cli
fistps
jmp
lods
inc
lret
out
outsl
jl
ret
cltd
pop
es
jl
aad
out
imull
aaa
icebp
push
lock
xor
jecxz
jge
outsl
test
xchg
xor
aas
push
pop
loopne
pusha
dec
rcrl
insb
mov
dec
clc
mov
or
lds
iret
mov
data16
rcll
mov
xchg
adc
aam
mov
inc
mov
push
mov
push
outsb
andb
mov
testw
int3
cmp
movsb
gs
lahf
push
sbb
xorl
inc
out
xchg
jo
sbb
dec
mov
adc
int3
mov
sbb
sub
jnp
cli
hlt
movsb
jg
repnz
aam
push
cmpsl
ret
and
enter
std
aaa
push
not
in
test
xor
cmp
cmp
add
dec
push
repnz
ret
sbb
in
repnz
dec
or
sahf
nop
fdivr
dec
lea
ljmp
shlb
imul
jne
addr16
jl
hlt
lea
push
fs
adc
jp
cmp
loopne
sub
ret
xchg
jp
outsb
cmpb
add
gs
mov
add
push
cmc
sahf
fadds
lcall
sub
fiaddl
sbb
stc
mov
sub
pop
mov
cmp
repz
jle
into
or
inc
jbe
mov
mov
ret
mov
and
sarl
xchg
lds
ret
shl
push
and
cmp
es
popa
xlat
icebp
mov
out
adc
daa
call
outsl
xlat
ss
rcrl
dec
std
test
out
mov
imul
mov
push
mov
into
adc
mov
jge
adc
jg
call
sub
ds
mov
fmuls
pusha
test
popf
sub
sbbl
pop
xchg
out
lcall
std
add
add
xor
and
and
fists
add
pop
leave
jne
lock
sbb
mov
andl
dec
push
mov
jp
jl
sahf
ja
jne
cmp
mov
mov
jnp
sub
arpl
cmc
cmp
popa
cmp
shrl
icebp
push
aad
dec
in
sub
stc
jo
or
cld
inc
inc
loope
push
gs
out
add
rep
pop
inc
icebp
jb
loopne
std
or
mov
push
insl
ljmp
mov
iret
mov
sub
fs
sti
pop
ss
leave
or
je
mov
adc
fnstsw
xor
loopne
mov
repz
xchg
imul
ret
push
pop
in
adc
sub
clc
insb
add
inc
and
push
ja
lods
stos
adc
mov
test
cmp
mov
test
test
cld
cmpsl
and
sbb
aad
inc
roll
loope
js
jae
scas
ljmp
aas
xlat
mov
out
inc
jb
pop
mov
cmp
push
out
pushf
dec
loopne
push
mov
xchg
mov
hlt
jbe
mov
or
arpl
push
pushf
nop
test
sahf
mov
fldl2t
addr16
aad
push
jno
dec
stos
or
aas
or
lret
insl
fcoml
dec
arpl
sub
loopne
mov
jecxz
push
mov
cmp
in
mov
jg
divps
fdivr
lods
xorb
push
cwtl
jno
mov
inc
arpl
imul
js
xchg
loope
sbb
mov
test
mov
push
outsl
outsb
xchg
gs
cmp
fwait
inc
push
les
mov
mov
mov
adc
or
imul
and
loope
xchg
adc
shr
add
mov
in
or
lock
repnz
jg
pop
xchg
push
hlt
mov
push
xorb
cmp
repz
mov
repnz
sub
cmpl
dec
call
jle
in
clc
and
imul
or
adc
ret
xchg
rorb
lods
popf
cmp
mov
sub
aaa
sub
jb
imull
rol
push
inc
and
clc
and
jg
jo
stc
mov
xor
push
xchg
mov
sahf
dec
pop
push
repnz
pusha
mov
addl
scas
push
push
aaa
inc
sbb
push
hlt
cmp
xchg
test
popf
adc
mov
popf
cmp
pop
dec
fdivp
mov
nop
lds
mov
pop
sub
divb
aaa
repz
fadds
dec
pop
inc
lods
mov
shlb
cmpsb
clc
xor
mov
xlat
std
pusha
jmp
jno
in
addr16
inc
cmp
divb
loopne
das
inc
push
lcall
push
mov
mov
cmpsl
loop
cmc
sub
repz
mov
pop
stc
jbe
js
ljmp
adc
cmpsb
ss
pushf
sub
xorb
iret
inc
sahf
jne
jg
ss
aas
leave
bndldx
push
sub
sbb
cmp
add
add
jae
xor
inc
add
sbb
mov
dec
cmp
or
es
cmp
cmpsb
stos
inc
jmp
add
jg
pop
pop
movl
mov
out
mov
xchg
clc
jns
mov
jno
mov
add
cmp
shlb
loope
out
add
fimull
repz
xor
adc
pop
adc
sub
pop
push
andb
mov
shll
out
xchg
cmp
dec
mov
push
aad
mov
adc
pop
mov
cmp
shrb
in
test
mov
add
pop
xor
and
sbb
cmp
cmp
sub
subb
fcoml
adc
sbb
cmp
ja
jg
cmp
lock
xchg
xchg
pop
jl
add
sub
xchg
ss
push
inc
or
pop
loop
inc
jp
jge
mov
scas
aaa
clc
sub
or
ljmp
insl
mov
inc
or
je
mov
xor
mov
mov
push
aad
mov
test
lcall
ror
cwtl
aad
adc
sti
jb
xor
aas
push
sub
aad
adc
sbb
xor
lods
enter
stc
add
push
je
pop
cli
aas
ficomps
es
ja
bound
jge
adc
out
pushf
mov
add
sbb
add
sar
mov
push
test
push
outsb
inc
pop
inc
sarw
call
sub
movsl
jne
and
aas
mov
mov
xor
inc
ja
int
stos
add
xor
or
fisttpll
or
sahf
cmp
xchg
sti
or
test
stc
orl
fimuls
dec
insl
test
dec
mov
mov
sbbb
adc
or
mov
pop
push
jge
ficomps
cmp
pop
mov
idivl
mov
inc
dec
jnp
pop
jl
in
aad
fistl
nop
pop
addr16
hlt
cmp
mulb
pop
cmp
js
into
movsb
iret
mov
mov
mov
pop
aad
xor
sahf
xchg
jb
stos
adc
lcall
in
ds
les
fdivl
in
add
sub
dec
adc
loope
push
jb
pop
les
xchg
push
js
repnz
xchg
cmpb
xchg
pop
out
sti
ja
enter
adc
push
rol
notb
das
add
add
pop
int3
lret
or
or
jne
stc
dec
repz
aam
dec
fidivrl
das
orb
and
repz
enter
sbb
push
or
push
fs
xchg
jl
aad
ljmp
jle
hlt
sbb
jmp
pop
dec
js
aam
es
nop
ret
mov
pushf
push
das
fs
jle
sbb
roll
dec
pop
mov
pop
mov
js
add
icebp
divl
aaa
cmp
ret
or
mov
fs
or
iret
mov
mov
mov
or
xlat
mov
xchg
xchg
inc
fstps
push
jae
ret
and
sar
loop
int3
sbb
adc
pop
dec
xor
mov
lahf
push
insb
loopne
push
xor
fldz
scas
test
xchg
jno
cmp
or
xchg
lret
jmp
sbbl
jb
insb
out
or
int3
cmp
mov
imul
mov
int3
outsb
popa
outsl
sbb
iret
movsb
cmp
jne
clc
call
ret
data16
mov
icebp
sbbb
jle
mov
push
imul
imul
dec
scas
lods
lods
xor
outsl
imul
mov
xor
xlat
push
mov
jp
mov
cmp
sub
lret
shrb
mov
cmp
dec
jne
pop
push
xchg
enter
leave
lods
sub
inc
mov
sub
shlb
inc
xor
mov
jo
out
sbb
adc
inc
mov
sub
arpl
jle
in
test
aaa
mov
loop
mov
std
fcmovnb
xchg
push
pop
jns
bsr
xlat
lret
sbb
lcall
adc
add
int3
dec
ret
jle
push
jl
xchg
cli
cs
sub
and
frstor
lret
insl
fs
addr16
test
in
popa
cmpl
out
jecxz
aam
add
inc
shll
int3
inc
aad
adc
les
cmpsl
addr16
push
push
iret
int3
jle
js
push
and
and
movsl
inc
mov
popa
insl
push
cmpsb
insl
or
jmp
data16
adc
inc
push
inc
dec
cmp
pop
loopne
push
ss
stos
sbb
and
push
cmp
mov
lock
ss
inc
cmpsl
scas
jge
xchg
jb
sub
mov
or
xorl
add
je
jb
pusha
ret
mov
pop
mov
push
ret
sub
rcll
scas
or
mov
add
ret
cmpsb
cmc
pop
sub
jge
scas
fadd
stos
push
push
sbb
xor
ss
stc
rcll
or
inc
icebp
daa
stc
lods
ljmp
pop
scas
and
fmuls
lds
pop
inc
inc
pop
cwtl
lods
aad
sahf
addr16
and
adc
mov
or
call
cmp
jecxz
sbb
test
add
test
sub
or
clc
cmpl
adc
xchg
cmp
pop
adc
into
inc
inc
or
pushf
cwtl
vpaddw
and
mov
xchg
pop
jle
and
add
push
lcall
inc
aam
xchg
divl
mov
pop
mov
pop
and
cmp
ds
xor
xchg
call
movsb
repz
push
xchg
adc
sub
sub
mov
sbb
lods
pmulhuw
jge
sbb
int3
outsb
fnsave
push
cmp
jl
mov
loope
insl
insb
sbb
pop
sbb
test
pop
movsl
popa
mov
dec
xor
icebp
shlb
cmpsb
aas
mov
pop
sbb
push
add
sub
insl
insb
out
lods
inc
mov
sub
xchg
inc
push
or
std
cmpb
pop
rolb
or
sub
aam
outsl
mov
and
nop
cld
cmp
movsb
inc
inc
xchg
lock
test
jnp
push
sti
sti
mov
jae
pop
imul
inc
sub
je
arpl
es
mov
mov
push
add
dec
inc
in
or
test
add
xor
icebp
push
mov
jmp
or
out
imul
xchg
ja
push
inc
jnp
lock
mov
stos
dec
pop
mov
ss
pushf
icebp
cli
ss
imul
xchg
out
mov
push
mov
push
in
adc
in
or
push
lea
pop
mov
add
push
js
push
popf
lock
sub
mov
rcll
xorb
bound
sbb
mov
pusha
xchg
sub
sbb
dec
jmp
jp
fcomps
shlb
inc
xor
fwait
and
adc
jnp
xor
fdivrs
aas
addr16
daa
lcall
jnp
jmp
out
iret
rorl
outsl
sub
pop
mov
pop
test
clc
jmp
pusha
mov
insb
lahf
dec
fwait
pop
add
push
or
js
mov
jae
cmpsb
sub
push
pop
xor
lods
rclb
enter
jl
sub
jns
dec
add
jg
or
and
mov
cwtl
dec
imul
or
repz
mov
imul
jns
mov
add
add
test
add
or
xor
sub
cmp
inc
lods
fpatan
das
jmp
mov
imul
movsl
xor
push
mov
scas
adc
mov
and
popa
dec
mov
popf
pushf
inc
dec
loope
dec
xor
out
lock
jo
subl
mov
sbb
jge
push
test
jne
jns
and
cltd
push
xlat
mov
jbe
loope
dec
pop
adc
cmc
out
push
lods
fsubrl
mov
dec
fbstp
daa
jg
push
jnp
xchg
les
jbe
dec
subb
xchg
les
mov
dec
jp
roll
push
mov
dec
sahf
fnstsw
loop
test
call
mov
outsb
adc
fcoms
cmpsb
div
pop
push
sub
xor
in
dec
sub
mov
pushf
out
lock
popf
push
mov
mov
and
mov
push
and
push
jmp
loop
sahf
sub
jle
dec
sbbb
push
dec
loope
pop
push
ja
mov
dec
push
int
stos
out
sbb
jae
adc
ret
shrb
xchg
inc
fisubl
fdivl
sahf
inc
ja
fcom
fyl2x
psubsw
mov
addb
xor
mov
fldt
test
add
cmp
pop
jge
push
pop
fmull
stos
roll
movsb
cmpb
nop
sbb
pop
jle
mov
xor
mov
fdivrs
add
stos
movsb
adc
push
aas
cmp
repnz
insb
sbb
ficomps
sub
pop
arpl
jno
jb
mov
mov
test
jle
or
sbb
sbb
shrl
jmp
jns
dec
pop
js
inc
hlt
mov
pop
std
pop
inc
addr16
inc
icebp
xchg
push
pushl
loopne
pop
mov
push
stos
sub
mov
hlt
loopne
push
icebp
aas
xor
mov
in
sbb
mov
lods
mov
mov
adc
test
xchg
jl
mov
xor
push
cmp
ss
jge
sbb
imul
loope
js
inc
mov
cli
scas
nop
pop
icebp
add
test
cmp
in
sub
xchg
push
mov
inc
imul
mov
adc
out
and
mov
hlt
push
dec
inc
arpl
fdivs
inc
xlat
fiaddl
loopne
xor
push
lahf
mov
vcvtdq2pd
inc
cmc
or
pop
mov
roll
or
push
sbb
dec
sbb
arpl
or
or
repz
and
and
sub
pop
lods
mov
call
push
mov
push
cmpsb
int3
or
jl
lds
js
xchg
fists
cs
jns
das
mov
test
rclb
cmpsl
call
inc
push
jo
sub
and
cli
mov
lds
pop
aas
fs
push
push
xchg
push
out
mov
adcb
sahf
inc
mov
pop
jge
mov
mov
divl
fcmovu
aaa
ret
mov
pushl
mov
iret
cmp
cmc
aas
lock
and
das
inc
pop
std
mov
pop
mov
cmp
out
xor
adc
pusha
or
aas
loope
mov
mov
and
mov
dec
in
push
push
stc
das
adc
pop
iret
and
pop
int3
mov
fdivs
push
test
push
mov
mov
jbe
adc
shlb
pop
lcall
mov
out
mov
sub
lcall
jge
inc
mov
insb
orl
repnz
xor
stos
data16
xlat
jno
mov
ror
xor
push
test
mov
sar
cwtl
sub
out
lcall
imul
pop
loope
jbe
inc
shll
mov
addr16
loop
mov
divb
dec
fldenv
dec
xor
mov
movsb
roll
pop
cmp
js
in
stos
dec
push
pop
sbb
sbb
aaa
test
jo
jb
xchg
subb
pop
ret
subl
dec
push
fisttps
or
jmp
andl
shr
nop
push
and
test
data16
arpl
jmp
push
jb
insb
xchg
cmp
iret
mov
popf
roll
pop
adc
mov
pop
xchg
std
daa
and
xchg
xor
lret
rcll
ja
iret
in
ss
das
or
and
stos
call
jb
mov
jnp
inc
push
xor
mov
call
push
sti
adc
pop
sub
jecxz
sti
mov
testb
cltd
sbb
jns
inc
loopne
lds
aaa
movsl
insl
inc
xchg
and
dec
mov
add
test
inc
push
stc
inc
sbb
add
sbb
rcrb
jb
rorl
xchg
cmpsb
lds
std
inc
incb
or
inc
psrlq
pop
xchg
ss
xor
pop
scas
xor
mov
clc
out
push
mov
xchg
or
xchg
xor
ret
sub
mov
movsb
cmp
adcl
fnstenv
aad
cmp
xor
mov
popf
jmp
jmp
stos
jp
pop
mov
stc
pop
or
jno
out
aam
arpl
jg
fneni(8087
lods
cwtl
xor
out
pop
lods
push
lods
jl
ljmp
stc
lea
push
dec
movsl
mov
xchg
clc
test
adc
bound
leave
fcomps
in
cwtl
jge
xchg
insl
fisubl
hlt
push
push
subb
pop
insb
push
gs
lock
gs
fiadds
fcmovne
mov
imulb
push
insb
cmp
dec
lret
test
mov
cwtl
addb
clc
mov
fnstenv
int3
enter
adc
mov
push
cs
inc
sbb
inc
cwtl
cmpsb
insl
add
lods
inc
and
xor
add
daa
ljmp
pop
imul
xchg
dec
push
sub
cld
cltd
jl
pop
dec
sub
stos
loopne
push
pop
or
int
lods
out
mov
cwtl
push
lret
hlt
xor
scas
pop
fs
in
lcall
cmp
mov
dec
pop
sub
clc
aad
inc
inc
add
jecxz
int3
pop
ljmp
push
ljmp
cmp
andb
jnp
aas
pop
aas
fs
jmp
sub
jge
push
add
das
jbe
addr16
pop
adc
enter
pusha
subl
lahf
pop
ret
push
mov
out
shr
or
add
cld
mov
push
nop
out
jge
stos
sahf
bound
or
dec
lock
cmpsl
xor
fbstp
jne
cmpsl
ret
xchg
jecxz
movsl
aaa
fildll
jnp
pmaxsw
dec
jg
test
mov
mov
adc
sub
adc
lock
mov
xor
lock
lahf
xchg
sahf
aaa
in
xchg
xchg
out
mov
call
iret
cld
sub
imul
push
cmp
jne
jmp
or
lds
repnz
cmp
adc
and
stos
xchg
jecxz
mov
xor
inc
lock
cmp
mov
fdiv
add
insb
aam
mov
cltd
push
cs
repnz
or
in
movsb
ja
push
fiaddl
js
out
push
aad
xor
outsl
sbb
movsl
add
rolb
or
or
lahf
mov
nop
sub
lea
jae
mov
cld
adc
cmp
cmp
mov
and
cmp
ja
stos
fucomip
insb
and
xchg
pop
mov
xor
pop
rcl
int
lea
sbb
push
repnz
xchg
adc
dec
sub
outsl
pop
fwait
xor
ljmp
mov
xchg
pop
adc
outsb
sub
lods
pop
add
gs
js
pop
push
and
stc
lock
sbb
dec
xor
js
rcl
xchg
xor
xchg
test
pop
daa
push
push
mov
repnz
ret
inc
dec
hlt
icebp
sub
mov
nop
call
lcall
lock
rcr
icebp
stc
push
xchg
mov
jge
xchg
cmp
push
xor
hlt
push
dec
in
jno
gs
cld
testb
inc
lret
lret
in
incl
fildl
mov
sub
cmpsb
push
xchg
insb
push
mov
addb
popl
popf
pop
mov
imul
sub
xlat
negb
popf
outsl
iret
mov
cwtl
dec
std
ret
and
inc
ljmp
lds
mov
cmc
jae
pop
xor
stos
fcoms
mov
movsl
ret
scas
mov
adc
jb
xlat
inc
cs
shlb
shlb
inc
cmp
and
or
xor
add
rorb
int3
dec
out
jle
jge
sbb
cld
jbe
ja
adc
add
dec
bound
addr16
stc
in
daa
xor
stos
cltd
int3
leave
shll
pop
cmpsl
adc
and
mov
je
dec
aam
xchg
lds
push
cmp
stc
addb
or
es
fs
call
push
or
cmpsl
push
xor
test
sti
push
repnz
add
jecxz
mov
nop
loope
testb
xchg
adc
mov
dec
into
imul
and
lock
aaa
add
inc
mov
add
mov
sub
cs
dec
sbb
sbb
movsl
jb
push
lcall
add
cmp
inc
jo
js
arpl
mov
nop
adc
inc
push
in
jne
sub
inc
xor
or
inc
xor
sbb
xor
stc
lds
mov
mov
push
xchg
cltd
sbb
stos
and
outsl
inc
or
rcr
xchg
ret
ss
push
sub
mov
cmpsb
dec
js
jp
jae
ret
popw
cmp
jb
and
sbb
mov
xor
shlb
mov
fisubrl
ss
cmp
popa
repnz
push
into
inc
sbbb
repnz
mull
jg
stos
mov
xchg
imul
xchg
es
pusha
das
jo
repz
mov
inc
cs
adc
dec
lods
mov
in
imul
fwait
xchg
jo
dec
into
sbb
xchg
bound
push
mov
pop
movsb
pusha
mov
sahf
stos
je
scas
outsb
movsl
cli
aad
mov
sbb
or
out
mov
cmp
dec
bound
mov
iret
mov
hlt
cmp
jg
aam
outsb
mov
pusha
pop
push
pop
mov
dec
mov
pop
hlt
dec
xchg
fwait
add
or
mov
fwait
mov
sbb
jg
pop
loopne
lock
fsts
xchg
add
sub
xor
sub
loop
or
imulb
or
mov
ds
push
rcrb
pop
pop
or
in
mov
adc
add
adc
xlat
divl
add
push
stos
push
popf
add
pop
mov
jmp
rolb
add
or
out
mov
lahf
stos
cmpsl
insl
scas
icebp
and
add
rcrb
push
adc
int3
or
enter
int3
pop
mov
sub
or
lods
pop
out
and
pushf
mov
add
pop
push
adc
rcll
cmpsl
adcb
xchg
test
ret
xor
pop
ljmp
adc
aas
jnp
imull
ficoms
cmp
cld
inc
ljmp
in
gs
fnstsw
ja
sti
pop
fs
jo
loopne
mov
xor
xchg
cmp
mov
xchg
sbb
repz
add
fistpl
repnz
mov
mov
notl
mov
push
mov
adc
stos
movsb
xchg
fsts
sub
adc
mov
add
pop
mov
test
jbe
or
outsb
shrb
xchg
iret
lods
push
test
pushf
std
cmc
lea
mov
lahf
push
subb
lods
inc
cmp
mov
mov
sub
xchg
aas
inc
push
das
scas
or
push
jmp
mov
xor
sbb
shll
add
jo
xchg
xchg
out
aam
xchg
dec
push
jle
callw
dec
push
clc
or
and
scas
int
addr16
jg
sbb
jp
pop
xchg
xchg
ret
fs
add
into
jbe
dec
insb
xchg
xor
in
in
cmpsl
push
cmpsb
xchg
sub
pop
add
sbbl
pusha
in
mov
lcall
pusha
cmpsl
ss
nop
aas
xor
push
mov
mov
add
jb
nop
pop
sub
adc
mov
js
inc
xchg
loope
adc
mov
xchg
jbe
addb
flds
stos
add
lea
sti
pop
cmp
sub
sub
add
add
jg
push
inc
loopne
adc
jae
mov
cmp
push
ret
mov
sub
shlb
dec
pop
daa
incl
into
in
adc
pop
and
mov
sub
lock
jbe
aad
repz
mov
jl
shrb
add
inc
fsubs
gs
mov
sbb
mov
push
fstp
lds
cmpb
and
xchg
or
andl
loope
or
call
xor
sti
and
orb
fs
leave
negb
sub
push
pop
pop
and
lahf
iret
jnp
std
adc
mov
idivb
mov
adc
rcr
repnz
loope
fsts
int
xor
mov
xor
lcall
iret
adc
lret
or
xor
sbb
es
mov
fsubr
in
jle
add
inc
push
or
cmp
sbb
push
mov
jg
jecxz
lods
insb
dec
xchg
cltd
jnp
lret
shlb
dec
mov
clc
xchg
sub
push
xor
sub
inc
xor
inc
inc
add
sub
pop
adc
arpl
test
enter
sub
or
test
inc
shrb
add
jp
mov
add
mov
mov
stos
xor
mov
pop
lahf
decl
push
imul
inc
in
data16
adc
inc
clc
mov
sarb
pop
inc
xchg
inc
cmc
rorb
sbb
call
out
sub
push
pop
mov
jae
cmp
and
js
rolb
or
je
inc
imul
inc
clc
cmpsl
bound
rclb
arpl
lcall
jno
out
out
idiv
jg
sbb
int3
nop
outsb
push
leave
fld
filds
rolb
add
xor
push
iret
sar
popa
pop
jp
daa
jbe
or
mov
cltd
cwtl
shll
aam
adc
mov
inc
fcmovnbe
or
dec
sbb
lahf
shl
mov
xchg
shlb
frstor
add
xlat
daa
push
leave
cld
clc
arpl
mov
cs
movb
cmp
xchg
mov
in
out
jg
dec
cmpsb
out
lock
sub
or
or
cmp
cmp
push
add
shll
addl
xchg
iret
adc
xchg
imul
mov
das
js
lahf
and
mov
jle
adc
xor
aam
fs
stc
hlt
sbb
inc
sub
lods
int
loopne
push
dec
ficompl
stc
pop
inc
inc
sbb
pop
jge
xchg
and
mov
out
les
dec
outsl
sub
sbb
test
mov
inc
test
mov
jecxz
lods
fstl
cmp
jle
dec
dec
and
jno
sub
pushf
outsl
pop
cmp
pop
negl
xor
in
into
mov
aam
jge
enter
jp
or
sub
inc
mov
mov
cmp
std
mov
js
out
pop
pop
in
pop
dec
xlat
sbb
inc
das
mov
loopne
mov
scas
aad
xlat
aad
divl
xlat
xor
push
and
data16
je
inc
sbb
icebp
fiadds
stos
movsl
sub
add
mov
enter
jne
cmc
mov
jbe
icebp
add
fimull
rolb
sub
jne
pop
int
add
fildll
in
jne
jae
cmp
fadds
or
adc
inc
loope
push
pop
roll
mov
fwait
mov
clc
add
addr16
loopne
cmp
stc
addr16
xchg
xchg
imul
adc
insb
inc
dec
jno
or
inc
sbb
pop
iret
sbb
jo
mov
pusha
jl
mov
movsl
sub
lret
outsb
add
mov
aad
jp
mov
inc
xor
cli
bnd
pop
mov
mov
inc
movsl
mov
pop
xchg
xchg
pop
jl
or
lcall
test
pop
in
xor
cmp
sbb
mov
and
stos
or
cmp
cld
dec
fwait
scas
push
or
mov
push
push
out
push
add
mov
fildll
lods
jp
nop
int3
insb
dec
stos
sub
mov
sub
fwait
pusha
push
bound
mov
xlat
jne
mov
add
std
je
outsb
ficompl
jb
lahf
jae
cwtl
out
adc
xlat
push
sbb
pop
mov
ret
loope
scas
test
loop
movsl
or
sarb
xchg
js
fwait
out
nop
mov
cmpsb
ljmp
test
fildll
testb
mov
jo
dec
or
push
out
imul
pusha
shrl
lret
loop
out
sbb
lcall
frstor
stos
shrb
mov
insl
mov
outsb
or
xor
push
jg
dec
rorl
cmp
aas
test
xor
fldenv
jmp
jb
out
inc
lods
in
xchg
es
xor
aam
jne
movsl
loopne
icebp
out
sub
and
movsb
adc
pop
imul
leave
insl
out
shll
jg
std
mov
mov
icebp
fisubrl
jmp
mov
filds
inc
sbb
lret
xlat
dec
pop
sbb
pop
mov
sti
sti
int3
add
pop
jnp
pop
test
dec
sbb
imul
outsb
fisttpl
and
nop
out
mov
lods
mov
fisttps
sbb
cmp
cmp
popa
sar
push
jg
mov
adc
andl
inc
repnz
jb
fcmovnb
loop
popa
mov
push
jns
jp
xchg
or
jmp
cmp
out
pop
sbb
outsl
outsl
cwtl
mov
test
mov
mov
mov
divl
sti
dec
ja
lds
aas
out
scas
cli
and
movsb
xor
xchg
ret
loope
jbe
fisttpll
xchg
xor
mov
mov
cmp
icebp
adc
dec
test
mov
cs
and
jns
push
sbb
push
gs
rcl
adc
inc
stos
inc
xor
mov
rolb
jp
popa
sarb
int3
andps
leave
adc
movsl
add
bsf
fbld
xor
clc
cmp
aam
pop
and
leave
push
push
push
fnstcw
movsb
pop
fimull
imul
pop
or
xchg
outsl
mov
js
xlat
pop
mov
out
pushf
push
mov
arpl
jo
ljmp
push
in
jge
in
and
vpshufd
ja
pop
gs
enter
fcmovne
push
loopne
adc
test
cmp
stc
addr16
push
pop
add
fwait
sbb
stos
add
push
roll
or
sbb
push
scas
push
adc
fwait
int
xlat
insb
rorb
cld
test
test
test
adc
mov
leave
std
cmpsb
pop
cmc
das
xor
arpl
push
and
jns
mov
adc
pop
gs
sub
jecxz
clc
pop
scas
cwtl
je
les
pushf
mov
xchg
test
repnz
adc
add
lcall
and
mov
sub
xlat
jecxz,pn
sub
rcll
notb
cmpsb
sahf
mov
adc
jp
cltd
xor
jg
pushf
in
jns
add
mov
divb
imul
popf
jbe
dec
and
xchg
push
loop
rcrb
inc
mov
lea
insb
push
inc
out
sub
orl
mov
aad
mulb
xor
xor
stos
pushf
xchg
push
push
sub
cld
rolb
adc
mov
inc
xchg
rcrl
mov
and
push
pushf
test
iret
lret
ds
pop
test
sub
pop
pop
inc
sti
daa
or
in
xorl
mov
inc
in
lods
dec
sub
mov
sub
sub
sub
dec
cs
fbld
xchg
inc
out
push
test
inc
lods
and
dec
jmp
shlb
push
test
sub
jo
nop
add
test
adc
cli
loop
xchg
sbb
ret
popa
pop
add
pop
clc
mov
test
xchg
mov
mov
fnstsw
pop
pop
xchg
rcrl
and
and
xchg
inc
aad
mov
call
pop
cli
inc
out
lods
push
test
call
and
loopne
jecxz
jnp
xchg
add
test
push
cmp
pop
push
cmp
jmp
mov
lock
jp
sub
cmp
push
mov
dec
mov
lds
lods
imul
aas
jno
sub
dec
add
mov
and
ret
je
mov
lret
adc
jb
repz
adc
or
and
hlt
into
in
or
mov
shll
mov
lock
mov
aas
sbb
out
sub
icebp
cmp
adc
mov
loope
daa
push
adc
mov
scas
negl
adcl
push
sub
movsl
rcll
xchg
mov
mull
stc
push
sbb
addl
aam
enter
cmpb
mov
sub
mov
push
and
aas
call
sbb
cwtl
push
enter
mov
sti
shl
enter
pop
lahf
daa
xor
pop
iret
rcll
xor
mov
jo
inc
add
mov
data16
fsubl
add
cli
pop
mov
pop
mov
rcrl
call
or
xor
int3
ficompl
sub
sbb
sub
fs
popf
or
out
sbb
imul
sub
xchg
push
xchg
mov
cmc
mov
inc
pop
inc
xchg
sub
jno
mov
sub
mov
xlat
mov
adc
xchg
test
pop
mov
xchg
pop
pop
jnp
jg
shll
lcall
cmpsl
sahf
imul
pushl
add
scas
xor
xor
loopne
add
or
and
sbb
pop
outsl
mov
xor
test
jb
inc
sbb
sub
push
push
jge
cmp
loopne
cwtl
sub
movsb
popf
sbb
sub
pop
lock
stos
jle
nop
or
adc
cmp
dec
xchg
or
fucomi
jnp
fdivrl
mov
dec
ret
xor
mov
add
push
imul
push
dec
xchg
and
and
arpl
mov
adc
push
dec
jle
imul
sub
inc
push
sub
enter
mov
insb
pop
aas
aam
pop
sub
jmp
sbb
fldenv
add
test
cwtl
or
xor
rcrb
loopne
adc
iret
je
mov
aad
mov
fisubs
jne
fistl
leave
sbb
and
les
jno
sub
enter
sbb
xchg
lock
ret
add
iret
dec
mov
lods
and
sbb
mov
fnstenv
idivb
pop
fcoms
mov
push
add
mov
mov
pop
cld
ja
lcall
flds
mov
jg
cwtl
or
inc
testb
mov
sub
cltd
js
adc
je
mov
mov
stos
xor
push
push
push
or
dec
in
pop
imul
stos
mov
in
mov
nop
lcall
xchg
lock
fisubrs
fsubrs
mov
dec
sarl
push
lods
sbb
stos
mov
cmp
dec
test
sarl
push
outsb
pushf
scas
mov
inc
xchg
sub
xor
cmp
add
cmp
push
loopne
sub
lods
lret
sbb
add
xor
fstp
sti
mov
loope
cld
push
popf
cltd
dec
cmp
popf
push
je
sbb
pop
pushf
jl
js
inc
int3
adc
pop
insb
ss
orl
notb
xor
and
or
das
popf
in
or
push
into
int3
jo
sbb
mov
inc
pop
jns
mov
jns
xchg
dec
sahf
cltd
mov
sti
mov
lret
aas
gs
jp
lds
adc
stos
xor
jp
xlat
into
imul
pop
shlb
adc
mov
push
in
push
sti
push
cmpsl
data16
xor
mov
scas
xor
pop
pusha
aaa
and
mov
fstpt
insb
pop
push
mov
jne
cmc
test
add
movsl
cwtl
and
xchg
pushf
test
ret
and
insb
pop
repz
add
cmc
or
test
sbb
dec
lret
jl
jb
push
dec
sbb
mov
pop
mov
or
test
push
mov
mov
outsl
int
ficoml
mov
mov
dec
js
das
insb
xor
xorl
jle
cwtl
in
xchg
jo
and
jecxz
inc
xchg
or
xor
enter
push
aaa
push
cmp
inc
cld
nop
xchg
xlat
rorb
lahf
cmpsl
imul
fisubrs
mov
std
jg
mov
mov
popa
in
repz
rorl
mov
lret
enter
fwait
data16
adc
pop
sub
mov
insl
push
stos
in
test
shrb
fstl
jecxz
push
pop
in
hlt
cmpxchg
xchg
and
popa
jl
or
and
insl
insl
stos
out
pop
ss
rorb
adc
and
push
imul
jo
pop
negb
add
inc
ror
cmpb
test
push
into
shl
test
inc
mov
stos
dec
aas
rclb
fisttpll
jmp
enter
cmp
idivb
sbb
stc
cmp
mov
mov
push
lahf
sbb
mov
icebp
jge
mov
adc
ss
push
pop
stc
jb
sub
out
ljmp
mov
cmpb
mov
or
int
iret
sar
xchg
jns
xor
test
sub
and
pop
nop
clc
xchg
sarb
sti
repnz
adcb
dec
and
test
jg
inc
test
push
jne
lods
test
cld
fwait
push
sbb
and
jmp
cmp
xor
scas
jb
fwait
push
out
ret
xor
call
xchg
hlt
inc
mov
pushf
adc
adc
xchg
sahf
sbb
sbb
xor
loop
inc
repz
jl
rolb
mov
into
xchg
pop
mov
mov
xchg
test
sahf
movsl
jae
jle
or
leave
mov
loope
fmulp
push
mov
xor
xchg
dec
test
scas
insb
pop
cmpsb
xor
cmp
dec
dec
push
push
imul
sarl
movsb
mov
jmp
jne
jno
shrb
sbb
stc
loopne
mov
sbb
xchg
dec
into
and
sub
mov
push
xchg
mov
cmp
cmp
fdivs
xchg
stos
lds
xchg
jno
push
or
mov
cmp
sahf
imul
nop
pop
push
push
jno
mov
push
xor
hlt
sahf
push
and
ds
in
mov
cmpb
ret
push
xor
leave
int3
test
pop
dec
into
scas
jge
fsubl
xor
loop
jl
mov
push
rorl
push
test
sbb
adc
movsl
out
popl
rcll
xor
xchg
push
add
jl
dec
xchg
enter
sbb
sub
push
repnz
call
dec
mov
fisttpll
add
and
mov
imul
mov
fsubrp
adc
cmp
cmp
into
ror
push
add
inc
dec
sbb
aas
fsubrs
enter
ljmp
xlat
loopne
in
push
lahf
sbb
pop
cltd
pop
loopne
mov
mov
mov
inc
push
icebp
lods
add
inc
or
xor
shrl
fsubrl
clc
dec
or
inc
mov
addr16
jns
fistps
pop
outsb
jg
dec
lods
or
int
xchg
sub
mov
mov
jp
dec
jnp
scas
xchg
push
or
push
mov
stc
movb
push
jbe
jbe
xor
rcrb
push
inc
icebp
outsl
sbb
shlb
movsb
aas
ret
inc
clc
push
repz
add
mov
scas
cmpsb
shr
jmp
push
mov
mov
lods
fs
sbb
jle
int3
mov
lahf
push
stos
cwtl
je
and
mov
idivl
xchg
es
pop
outsl
fiadds
or
and
repnz
cltd
lret
lock
pop
xchg
out
fwait
xorl
dec
pop
and
cmpsb
aad
mov
push
stos
pop
out
insl
adc
imul
mov
xor
jmp
call
xchg
lods
movsl
jae
bound
mov
subl
ret
push
and
lods
or
aam
fsubrp
xchg
loopne
pop
lock
lds
cld
add
fdivs
rdmsr
pop
aam
or
and
jmp
xchg
lods
push
xlat
stos
scas
jle
jmp
and
push
test
mov
lcall
stos
mov
mov
aas
cltd
xchg
lods
and
pop
push
xor
pop
and
adc
pop
das
xor
xor
sbb
fnstenv
inc
xor
repnz
mov
sbb
loopne
fwait
movsl
lods
dec
or
or
jnp
iret
jne
push
mov
cmp
outsl
out
jle
ljmp
mov
xchg
loopne
push
mov
adc
mov
nop
adc
cwtl
dec
pop
adc
xor
testb
pop
fisttpll
and
and
popa
add
cli
jo
lds
lret
mov
dec
mov
dec
sub
aad
dec
adc
dec
lock
cmpsb
sub
inc
ja
jno
sbb
add
loope
mov
inc
test
inc
fmulp
push
jp
std
mov
adc
add
jge
loopne
sub
pusha
mov
jo
std
cwtl
rcr
outsl
jp
mov
stos
mov
mov
push
pop
aaa
sbb
loopne
shll
daa
sub
loop
adc
pop
fnstcw
mov
or
xchg
mov
xchg
into
shll
and
xor
xchg
add
mov
sbb
add
pop
dec
jle
jae
sub
jp
mov
jne
cmp
jo
outsb
int
clc
xchg
inc
pop
jno
out
jle
pushf
lcall
pop
popf
fmulp
sub
jge
std
push
rorb
popf
xchg
cmp
mov
mov
xchg
ficoms
push
add
jne
jmp
cmp
mov
enter
ja
sahf
xchg
stos
push
mov
cmp
dec
notl
addr16
out
fs
mov
aaa
addr16
mov
inc
frstor
pusha
cwtl
lea
and
and
pop
stos
cwtl
addr16
and
sub
out
movl
mov
mov
in
insb
or
in
add
add
repz
xchg
add
rcl
test
mov
pusha
jg
imul
inc
mov
jo
cli
das
pusha
sbbl
imul
shrl
mov
frstor
inc
push
adc
or
jge
pop
dec
jae
lods
xor
repnz
cli
in
lret
lret
jns
pop
arpl
js
mov
cli
sub
xor
or
iret
mov
jp
scas
fs
jb
push
pop
sub
in
stc
rol
xchg
shlb
xor
rcr
ret
or
jno
fldcw
movsb
inc
inc
mov
sub
and
and
daa
and
nop
jg
sbb
call
jle
jecxz
arpl
int
sub
jo
imul
pop
mov
sub
inc
addr16
lret
sti
xor
xor
jne
and
imul
lods
mov
sub
ljmp
and
cmpsb
das
dec
pop
pushf
mov
ljmp
xchg
sahf
fstps
loop
rcl
sub
xchg
and
jno
cmpsl
orb
popa
std
leave
pop
mov
pop
in
or
js
xor
pop
cltd
pop
gs
imul
adcb
add
xor
pop
cmp
lea
enter
mov
mov
imul
add
jp
pop
dec
cs
in
push
xchg
faddl
test
fdivr
inc
push
iret
aad
jmp
mov
mov
xchg
insl
push
loopne
add
pop
pop
idivb
mov
repnz
lea
sahf
inc
jne
mov
stc
loopne
push
or
inc
dec
lock
sub
in
mov
push
xor
mov
dec
fsts
jle
shlb
ljmp
or
adc
adc
aam
lock
iretw
cmp
and
inc
push
sbb
dec
or
ret
inc
out
push
fistps
movups
fstpt
inc
dec
push
mov
cmpsl
cld
pop
xor
mov
aas
add
sub
mov
jnp
push
push
pop
dec
ss
cmp
jno
pop
adc
mov
subb
mov
cmc
addr16
mov
subb
hlt
dec
jmp
or
cmpsb
mov
cmp
push
jle
xchg
sahf
cmp
mov
jmp
fdivr
dec
lcall
ljmp
xor
mov
insb
ret
adc
mov
mov
push
mov
sub
cmpsb
pop
out
data16
stos
shll
fmull
or
out
loopne
sbb
pushf
inc
scas
into
orb
dec
lret
cmp
pop
shrl
sub
push
testl
and
shlb
dec
imul
add
fldt
in
dec
mov
js
dec
push
mov
push
mov
mov
ret
mov
sub
fdivrl
push
pop
adcb
push
and
sbb
imull
mov
arpl
jecxz
push
mov
rorl
xorb
repnz
xor
cmp
out
ljmp
loop
pop
dec
xor
fnstsw
incb
js
hlt
int
cmp
loopne
inc
dec
cmp
lcall
and
jns
out
mov
int
cltd
psllw
cmp
jo
xor
insb
mov
loopne,pn
sub
arpl
sahf
ss
jmp
mov
out
mov
mov
outsb
xchg
cld
and
cwtl
std
ret
dec
inc
sub
fwait
sarb
mov
add
dec
lahf
sub
inc
jle
ljmp
fldt
lret
cmp
dec
xchg
lcall
shlb
sub
aas
cmc
or
add
sub
mov
xor
neg
enter
sbb
test
sbb
stc
push
nop
mov
jp
out
test
mov
lock
andl
cmc
mov
movsb
add
je
ret
int3
out
fwait
xlat
test
into
and
lods
push
aad
push
test
daa
and
bound
sub
bound
int3
mov
and
push
shrb
mov
incl
das
inc
in
jne
jo
push
clc
in
mov
fcmove
and
movsl
push
outsb
xchg
xor
xor
lods
mov
push
ret
adc
lret
lret
gs
fstps
aas
xor
jno
xchg
test
mov
xor
movsl
mov
das
test
movsb
inc
rcrl
dec
jo
adc
mov
lfs
out
mov
inc
ds
xor
sbb
bound
add
jbe
sub
cmc
cli
sub
inc
mov
xchg
xchg
imul
fidivrs
pop
or
stos
or
loopne
mov
push
mov
xchg
sub
ds
xchg
adc
nop
setae
jnp
jle
mov
aad
cmp
jne
mov
inc
xchg
mov
push
outsl
mov
test
sub
pop
icebp
push
and
std
mov
sub
int3
lock
pop
loope
push
into
sti
fisttps
std
adc
push
or
movsl
cmp
push
sub
or
jmp
add
adc
xor
jge
mov
or
in
mov
adc
xlat
jmp
cs
mov
fwait
out
mov
and
loopne
xchg
jo
fscale
lret
jb
lods
dec
popa
jno
ret
add
cmp
xor
dec
add
jns
cwtl
movsl
adc
add
or
clc
mov
sahf
lret
sbb
pop
shll
aad
lea
mov
cmp
mov
cmpsb
jns
sub
dec
add
dec
push
dec
test
dec
dec
std
pop
cltd
fsubr
dec
mov
cmp
lea
mov
jmp
xchg
mov
sub
arpl
dec
fidivl
xchg
mov
addr16
mov
movsb
dec
xchg
pop
insl
in
or
xor
mov
inc
dec
jb
add
shll
cli
jl
cltd
lods
jne
or
xchg
jmp
mov
dec
mov
mov
xchg
mov
mov
xor
pop
and
xor
aad
popa
cmpsl
les
shlb
mov
pop
sub
gs
es
xor
xchg
xchg
incb
xchg
jno
xchg
fisubl
sub
pushf
repnz
cld
mov
lds
mov
push
imul
mov
jne
aaa
add
dec
add
les
push
call
lods
push
pop
or
or
or
pushf
aas
push
or
cmpsb
test
icebp
clc
xor
add
scas
ret
jge
mov
test
fs
or
xchg
addl
outsl
ret
mov
cmp
add
scas
mov
xchg
mov
scas
imul
gs
shlb
inc
sbbl
sbb
jne
cs
ficoml
mov
adc
pop
sbb
inc
push
lret
sbb
add
nop
pop
sbb
push
push
icebp
negb
pop
int3
sub
dec
cmp
movb
and
push
and
sbb
pop
mov
mov
xor
add
sahf
in
fldcw
iret
xchg
data16
jg
cmp
push
popf
test
dec
lahf
mov
add
xchg
inc
xor
nop
fwait
sti
sbb
mov
sub
cmp
mov
fcmovbe
rolb
movsl
testl
lods
mov
test
push
dec
repnz
lock
push
lahf
ja
or
rcl
lock
bound
js
adc
outsb
out
pop
cli
mov
mov
decl
fildl
xchg
sti
das
cld
dec
sub
mov
popf
inc
cli
adc
jle
ljmp
lock
fidivs
mov
lds
adc
jge
out
shl
dec
lods
pop
sbb
out
dec
lock
out
mov
inc
jb
mov
frstor
bound
dec
sub
nop
mov
sbb
shl
jbe
pop
or
lock
sbb
adc
rcll
imul
xchg
movsb
loop
enter
jl
in
dec
notb
cmp
ds
lret
aaa
dec
movsl
mov
sbb
inc
cmp
out
call
test
inc
mov
out
fdivr
imul
lock
fldl
and
jb
sbb
lcall
cwtl
hlt
sbb
jl
aaa
add
push
inc
mov
or
test
xchg
adc
adc
dec
int3
mov
adc
adc
andl
in
mov
inc
imul
push
cmp
loop
aas
or
mov
adc
inc
push
dec
fdivp
cmp
push
cwtl
mov
movsb
lret
mov
add
jp
xchg
sub
repnz
fwait
loop
dec
push
dec
pop
and
mov
mov
add
push
arpl
mov
test
cmp
cli
andb
push
jne
mov
ret
mov
cmp
xchg
xor
insl
gs
sub
or
xchg
scas
xor
and
dec
or
and
add
fadd
mov
mov
dec
push
lahf
push
jne
leave
xor
stos
pop
inc
adc
mov
jne
mov
push
out
xor
int3
sarb
fcom
jmp
out
int3
add
ret
enter
xor
mov
popa
xchg
repz
push
sub
mov
fs
out
movb
movsl
imul
or
andl
out
adc
mov
or
nop
sub
jae
fdivrs
push
outsl
add
sti
push
mov
fisubl
fxch
adc
mov
addr16
fdivs
dec
shll
xor
push
mov
mov
test
ret
fadds
xlat
daa
dec
je
std
dec
mov
xchg
pop
inc
push
or
and
mov
pusha
insb
loope
sub
lahf
push
adc
inc
push
outsl
js
shrl
jae
adc
pop
or
adc
mov
std
into
int
fs
ja
mov
xor
lahf
sbb
mov
gs
fistl
sub
test
mov
add
scas
pop
push
mov
pop
mov
ja
pop
push
lahf
mov
pop
and
fmull
push
or
or
loopne
lea
dec
mov
and
pop
out
movl
lods
andb
sbb
xorb
mov
cwtl
negl
jns
outsl
add
rep
cs
gs
mov
add
xchg
pushf
incb
in
mov
loope
push
or
mov
int
dec
mov
xchg
push
daa
lock
add
or
or
je
cmp
loope
test
sub
cmpsb
xchg
out
movsl
cmp
push
xchg
mov
add
mov
or
cmpsl
add
out
imul
jl
lods
testl
enter
xchg
cmp
scas
jecxz
orb
push
mov
and
ja
cmpsl
gs
ljmp
mov
scas
jp
dec
popf
push
dec
adc
fdivs
in
adc
fdivrs
out
imul
js
xchg
ljmp
fildll
fisubrl
pop
pop
xchg
lds
and
std
fwait
push
ret
dec
xor
push
rcll
icebp
inc
cmp
arpl
dec
jb
jge
inc
mov
sahf
jns
sti
stos
pop
fisttpl
xor
arpl
fdivr
mov
xchg
es
jo
mov
scas
jl
adc
cmpsl
aam
or
test
xchg
pop
pushf
pop
popf
into
jne
sub
hlt
imul
or
pop
cmp
xchg
pop
inc
pop
xor
addr16
and
jbe
mov
ljmp
cli
pop
mov
clc
imul
ljmp
inc
and
fildll
mov
push
sub
xchg
cmp
adc
or
sarl
mov
inc
in
push
movsl
add
jl
pop
sbb
cld
dec
push
sub
cmp
and
push
push
mov
cli
lret
sarl
and
int3
sarl
insb
sbb
popl
adc
dec
ret
lcall
xchg
cs
mov
pop
sahf
outsb
push
out
mov
sahf
or
fistl
pushl
mov
mov
stos
or
mov
daa
adcb
sbb
test
aad
mov
jl
out
cld
movsl
inc
xchg
push
dec
sub
ret
cmpsb
pop
dec
pusha
xor
inc
imul
xor
pop
arpl
sub
sarl
pop
mov
jmp
sub
cmc
push
ljmp
jp
and
repnz
je
scas
addr16
xchg
and
js
xor
add
add
mov
inc
pop
cmpsb
or
test
fs
mov
pop
and
jmp
clc
sbb
inc
scas
mov
push
dec
xchg
mov
cmpsl
mov
jecxz
outsb
fdivs
jmp
out
push
dec
xor
sub
fcmovb
fsubs
stos
push
pop
or
push
or
jmp
loop
fdivrl
repnz
xorb
dec
stos
aad
clc
or
popa
ficompl
push
shlb
outsl
adc
or
xchg
loopne
call
cwtl
rcrb
cmpsb
jae
hlt
loope
inc
push
inc
mov
aad
jl
jno
jo
sub
pushf
ret
cmpb
xchg
hlt
or
xchg
adc
mov
rcll
cmpsl
push
lods
popa
xchg
std
movsb
ret
test
mov
xchg
jg
inc
icebp
stos
mov
inc
mov
push
dec
int
jne
inc
mov
mov
xchg
arpl
test
add
lds
xor
mov
into
inc
sti
inc
sbb
or
sahf
divb
xchg
idivl
fucomi
test
pop
xchg
movb
xchg
out
test
cmp
sahf
push
sub
addw
in
sti
pop
xor
sbb
addr16
out
lcall
xor
push
push
mov
xor
lret
mov
sub
arpl
les
mov
shll
or
add
mov
das
mov
pop
dec
addr16
arpl
jno
sahf
xor
dec
jecxz
dec
sbb
xlat
cli
fnstcw
and
xchg
insb
dec
test
add
xor
add
scas
pop
and
xor
dec
inc
popa
idivb
outsl
inc
sbb
arpl
inc
push
mov
lret
pushf
pop
jle
dec
pop
add
or
dec
std
cwtl
or
lods
fdivl
xchg
ret
popf
dec
repz
and
idivb
sub
xchg
out
adc
or
je
pop
mov
xor
mov
ret
mov
lods
testb
add
push
mov
sbb
xor
add
movsb
sub
lods
mov
jg
push
sarl
cwtl
push
mov
je
adc
sub
jecxz
popf
por
sbb
mov
add
sbb
das
icebp
push
xor
fisttpl
clc
xchg
jecxz
call
daa
xchg
sbb
lea
or
out
jb
push
mov
cmpsl
sbb
xchg
xor
loop
bound
test
test
mov
mov
lock
adc
sub
cmpsl
jl
sub
or
pop
aad
into
test
sti
sub
mov
mov
jnp
lret
inc
cmpb
imul
fistl
out
daa
rcrb
js
push
shlb
push
xlat
cmp
mov
ss
dec
and
inc
add
ret
or
mul
mov
outsb
movsl
imull
mov
fwait
iret
ja
rcrb
xchg
dec
js
mov
hlt
cmc
cmovbe
or
and
mov
jmp
sub
fs
ret
add
outsl
pop
xchg
fdivr
call
into
cmpsl
mov
adc
push
mov
and
dec
popa
pop
jecxz
int
jmp
lds
sbb
mov
and
scas
jmp
mov
mov
mov
fwait
mov
dec
out
jmp
adc
stos
mov
pop
mov
or
clc
test
mov
mov
fwait
or
or
mov
cwtl
out
insl
fwait
test
stos
sbb
jno
out
fs
xchg
jo
add
in
mov
lods
iret
mov
stos
fwait
test
shlb
dec
and
es
and
xchg
in
sbb
int3
pusha
push
leave
cmp
cli
mov
sub
pop
stc
loope
push
and
out
ljmp
ss
pop
aam
xor
mov
adc
cld
insl
or
fstpt
jae
in
pushf
outsl
jle
mov
jmp
sarb
out
push
icebp
dec
dec
xlat
icebp
add
out
mov
cmc
clc
cmpsb
jge
push
stos
ja
inc
push
mov
push
or
jle
cltd
sub
mov
daa
cld
das
xchg
ror
outsb
gs
stos
popf
inc
mov
in
inc
mov
addl
dec
rolb
shlb
sbb
fwait
xchg
mov
stc
test
sub
stc
pop
lods
add
pop
lret
loop
push
decb
fs
jns
clc
push
orb
mov
inc
je
mov
div
ja
idivl
out
pop
movsb
aam
stos
fcmovne
movsb
push
pusha
sub
dec
outsb
cmpsl
cmpb
scas
push
orl
adc
ds
int
shrb
or
test
dec
inc
jle
dec
push
or
sub
loopne
jmp
pushf
mov
enter
jl
outsb
add
bound
add
ljmp
int
loop
cmp
adc
stc
mov
adc
and
clc
ss
cwtl
xchg
repnz
stos
test
mov
fcmovb
add
gs
js
jnp
push
push
inc
icebp
int
mov
pop
jo
mov
cmpsb
pop
pop
mov
notb
mov
push
insl
adc
das
mov
in
mov
cltd
shlb
or
divl
jo
lods
jnp
ja
cmp
in
repnz
jmp
adc
xchg
jnp
popa
insl
leave
int
mov
push
inc
pop
out
xchg
popa
arpl
mov
imul
fldt
sub
iret
mov
mov
ret
mov
add
sub
divb
xchg
jae
cld
dec
pop
stc
jmp
cvtdq2ps
xor
sbb
or
pop
shlb
hlt
sbb
and
jns
cld
sub
lds
fidivrs
int
lods
cmp
icebp
stos
es
mov
xor
sbb
aam
sti
and
xor
adc
adc
js
mov
loope
sub
lds
add
add
pusha
insb
cmpl
jnp
mov
enter
data16
lret
mov
pop
mov
ds
aaa
fldcw
sbb
jmp
dec
outsb
mov
push
cmpsl
xchg
sbb
cld
dec
rolb
push
or
jp
popa
pop
lds
out
sbb
inc
xchg
inc
inc
cmp
test
aam
xor
jne
adcl
sbb
sbb
mov
mov
stc
insb
cvtps2pd
notl
or
and
add
xlat
jg
ret
sahf
sti
sahf
xchg
idivb
outsb
inc
mov
rcrl
fldl
dec
lret
aaa
ret
lea
inc
into
adc
movsb
cmp
adc
enter
ret
xor
xchg
shrl
lcall
and
add
mov
and
pusha
fs
mov
adc
mov
arpl
push
es
fsub
push
andl
dec
push
les
sub
xchg
or
push
sbb
fisubrl
adc
mov
jno
cmp
cs
jbe
xor
xchg
lods
adc
and
xor
mov
mov
insl
aas
pop
cmp
and
jnp
dec
adc
loopne
nop
cmc
cs
sub
and
fidivrs
nop
icebp
adc
xor
loopne
push
insl
cmp
mov
repz
hlt
pushf
mov
out
repnz
ret
xchg
jp
xchg
push
fdiv
sahf
fdivl
in
inc
push
pop
lds
sarb
imul
and
leave
jp
and
jle
lea
jecxz
inc
enter
mov
mov
mov
movsb
in
rcrl
inc
sbbl
mov
lret
mov
xor
mov
jle
es
mov
pop
jno
mov
xor
mov
and
and
leave
push
jae
out
mov
in
mov
xorl
push
mov
cmpsb
dec
incb
nop
aaa
xchg
add
pop
adc
sarl
mov
mov
mov
mov
push
fiaddl
cmc
xor
add
cs
js
cmp
loopne
jne
cmp
pop
xor
cmp
push
push
cwtl
xlat
movsl
out
test
test
lods
sbb
jecxz
enter
mov
mov
dec
pop
pop
xor
das
cmp
bound
xor
ds
xchg
push
scas
and
outsl
dec
rclb
mov
adc
clc
iret
stc
loop
mov
insb
mov
aaa
icebp
push
dec
sbb
and
lret
bound
mov
mov
mov
jae
lcall
push
out
add
lods
push
imul
pusha
clc
in
cmp
clc
hlt
xor
sbb
rclb
xchg
cli
sub
addr16
sbb
cltd
mov
sub
sbb
ss
xchg
gs
xchg
cli
sub
sbb
add
mov
enter
xchg
sahf
mov
jmp
into
jno
aam
cmp
in
dec
push
test
sbb
sub
icebp
jo
aam
std
test
mov
not
xchg
jbe
stos
mov
hlt
stos
xor
stos
push
in
cmp
push
fsubl
stos
xchg
jno
jae
sub
scas
lret
stc
lret
mov
fldcw
andb
cmp
xor
xchg
inc
pop
cli
movb
mov
mov
cmc
loopne
sub
push
dec
mov
fs
into
xchg
rcrb
imul
mov
stos
xlat
mov
fdivrs
int
std
add
cwtl
notl
je
imul
xor
rcll
jecxz
pusha
mov
xchg
mov
and
push
stos
icebp
les
dec
addr16
pop
inc
sub
dec
jns
loope
xor
loope
mov
jb,pt
ret
dec
inc
dec
and
mov
inc
pushf
notb
push
jnp
inc
mov
cmpl
cmpsl
ljmp
xor
dec
data16
lcall
imul
hlt
mov
or
inc
mov
mov
push
stos
xor
mov
jmp
mov
push
sbb
and
jg
xor
out
lret
jo
jno
push
sub
maskmovq
idivl
jl
pushl
subl
or
inc
rcl
dec
xchg
or
sub
out
jns
aas
pusha
push
mov
jp
out
out
mov
lds
in
insl
mov
mov
or
jmp
sub
inc
out
test
loop
push
lock
jae
cltd
sbb
inc
jecxz
push
fsubl
hlt
imul
nop
xor
repz
mov
xor
add
or
sti
test
mov
bound
sub
pop
adcl
push
stos
sub
shlb
sub
inc
mov
push
out
push
orl
lret
or
pop
mov
pop
mov
inc
mov
rcll
pop
int3
mov
sbb
mov
mov
faddl
adc
xchg
push
scas
rcrb
aaa
enter
lret
shrb
test
adc
add
add
jl
loopne
nop
inc
orb
or
sub
aam
rclb
jl
mov
pushf
rclb
xchg
lret
ss
xchg
in
xlat
lret
mov
xchg
cwtl
sub
jae
xor
lret
push
inc
cmp
pop
jno
nop
ret
ret
scas
cs
std
imul
cmp
scas
fistpl
rolb
mov
and
test
mov
xlat
pop
pop
pop
or
xor
xor
add
mov
sub
fidivrl
gs
movsb
lods
scas
pop
jp
cld
pop
scas
xchg
pop
lea
xchg
repnz
lds
xchg
dec
or
mov
in
in
dec
sub
sub
cmp
bnd
jo
ficoml
add
push
addr16
sbb
lock
push
divl
mov
pop
sbb
fcoml
xor
test
test
or
popa
push
ret
aad
cmp
xor
jle
adc
ss
loop
inc
cwtl
out
int
dec
sub
je
adc
adc
cld
test
lock
clc
jb
fsts
cld
mov
mov
adc
cmp
fistl
rorl
ljmp
sahf
adcl
test
add
ja
mov
ja
cmpsb
sub
inc
out
sub
xchg
stos
mov
jp
hlt
stos
push
sub
sbb
pop
lds
mov
dec
xor
scas
jmp
jmp
fsubl
adc
incl
pop
dec
mov
adc
icebp
iret
sbb
mov
flds
pop
or
insl
cwtl
xor
in
pop
cli
stos
imul
or
mov
shrl
pop
or
ja
les
cld
lret
push
jge
push
fwait
jg
mov
iret
lea
xor
aas
js
mov
xor
fwait
stos
add
sbb
out
cli
jg
pop
adc
push
pop
dec
adc
out
xchg
cltd
lret
stc
clc
pop
pop
push
test
shlb
cli
scas
mov
stos
lret
and
push
sub
lret
dec
dec
cmp
hlt
mov
jae
push
sbb
cltd
repz
out
es
repnz
fnsave
sbb
sbb
pop
adc
mov
xchg
sarb
inc
mov
lcall
jg
fldcw
sahf
dec
adc
cli
pop
cmp
js
and
jle
in
es
repz
adc
dec
das
dec
mov
movsl
dec
in
add
ds
jb
int
add
sub
and
inc
fstps
ret
inc
push
sub
jge
push
clc
imul
test
call
cli
int3
call
xlat
sbb
pop
jmp
mov
fcomps
js
pop
sbb
adc
mov
mov
jge
arpl
popfw
leave
popf
mov
in
dec
fdivr
rcr
aas
imull
popa
push
sub
mov
xor
aaa
xor
sub
adc
jae
mov
lock
sbb
jns
ljmp
add
lret
xor
xor
in
das
test
inc
fidivrs
mov
push
call
push
stos
test
aaa
mov
lea
arpl
ret
fs
dec
dec
cli
jnp
mov
sbb
sub
loopne
mov
enter
or
es
adc
not
loope
mov
lahf
lds
jo
hlt
mov
dec
int
ret
aaa
jnp
mov
cmpsb
ret
jno
subb
scas
sahf
jno
iret
les
mov
loopne
shll
rcrl
scas
xchg
call
lods
xchg
rcrb
xchg
ret
lods
cmp
dec
rcll
sar
leave
in
ljmp
cmp
pop
aas
mov
lods
loop
stos
mov
xlat
bound
push
jb
andl
jae
fcmovbe
js
cmp
cmpsl
sbb
push
add
or
mov
sub
mov
add
es
and
and
sbb
subl
sub
push
stos
data16
inc
imulb
add
jns
or
push
sbb
adc
cltd
jge
cmp
pop
loop
test
adc
adc
or
adc
sbb
jge
out
cmp
cmp
int3
addr16
sbb
xor
and
stos
scas
shrb
adc
rcrl
rcll
inc
nop
popa
ficoml
adc
stos
pop
in
outsb
jg
test
pop
xor
pop
mov
add
dec
das
or
lods
cltd
adc
sub
clc
mov
xor
mov
mov
inc
pop
enter
cs
popl
mov
popa
rcrl
lahf
test
and
pop
dec
mov
movsb
jmp
or
cli
cmp
sahf
inc
cmp
movsl
mov
and
cmpsl
inc
adc
mov
pop
inc
lahf
pop
aam
cltd
cmp
imul
mov
cmp
insl
fs
sub
jno
cmp
push
xor
dec
lea
or
fstl
lea
mov
adcb
mov
pop
xchg
xchg
dec
xchg
inc
ret
stos
pop
pop
movsl
icebp
rcrb
enter
out
sbb
jecxz
mov
adc
sbb
int3
jge
aas
popf
mov
js
push
jnp,pt
xor
pop
jg
dec
shl
xchg
dec
cs
sahf
or
dec
mov
mov
repnz
xor
jae
repnz
mov
sub
sbb
mov
jle
xchg
ja
push
jno
stos
nop
idiv
sub
cltd
clc
mov
xor
addr16
or
mov
cli
js
out
decb
xchg
imul
fstpt
insl
mov
stc
xchg
sbb
arpl
in
imull
xchg
lret
dec
aam
pop
or
loopne
lods
pop
stos
jp
aas
xchg
inc
sbb
or
push
lcall
add
in
jmp
inc
cmp
xchg
pushf
in
fsubs
sbb
and
mov
lea
mov
out
gs
or
out
mov
add
fdiv
xchg
push
and
cmp
cltd
push
clc
mov
shll
pop
lock
add
data16
dec
cmp
cmp
sub
adc
and
lcall
and
movsb
loopne
rcrb
mov
sahf
cld
je
sbb
and
movsb
notb
aaa
jne
sahf
adc
inc
out
cwtl
add
xor
stos
mov
mov
push
mov
scas
cs
mov
negb
insl
mov
jbe
adc
and
xchg
cwtl
lock
cs
lock
sbb
aaa
mov
adc
mov
jbe
sub
adc
adc
data16
lret
hlt
jns
cmc
dec
dec
gs
cmpsl
sbb
xchg
sbb
push
adc
adc
mov
loop
sub
fsubr
imul
or
mov
and
xorb
xor
mov
add
dec
int
xchg
mov
jo
jbe
dec
ds
push
mov
int
pop
aaa
pop
loope
mov
outsl
xor
das
ret
mov
and
ja
or
cmp
xchg
dec
xchg
std
shrl
loope
sub
popf
mov
cli
push
jnp
mov
inc
jp
in
and
jbe
fninit
xchg
fs
push
fisubrl
movsl
cli
enter
cmp
pop
jge
or
xor
inc
inc
push
push
fstps
adc
aaa
ret
pop
aam
fsts
icebp
push
and
insl
sbb
xchg
jns
add
and
cmpsb
cli
aas
add
dec
xchg
inc
push
mov
or
cmpsl
pop
adc
dec
hlt
scas
or
inc
lock
fdiv
stc
adc
decl
push
insb
add
testb
cmp
stos
sbb
ds
in
aad
mov
and
lea
sub
adc
jecxz
mov
sbb
test
mov
cwtl
aam
and
cmc
fisubs
mov
add
ficompl
or
icebp
gs
adc
cmp
adcl
xor
into
mov
push
es
popa
out
xchg
mov
dec
leave
push
es
xchg
jmp
lods
or
int3
sub
mov
les
push
fcomp
pusha
cmp
or
sahf
cvtpi2ps
imul
or
pusha
mov
jnp
inc
xchg
out
inc
jo
jl
pop
cmp
mov
add
daa
cmpsl
push
mov
mov
cmc
pop
cmp
fimuls
stc
pop
mov
popa
in
mov
add
cmpsl
bound
shll
ljmp
pop
cmp
or
mov
cltd
jp
adc
ret
push
cmp
mov
ds
std
push
mov
jecxz
push
fwait
nop
leave
pop
in
stc
pop
pop
pop
mov
std
out
ja
add
jne
xchg
lds
jne
test
sub
imul
mov
and
incb
loope
out
dec
and
aas
adc
adc
dec
jbe
lock
sub
fs
sbb
pop
sbb
sub
fstpt
ficoms
push
out
and
out
adc
loope
clc
cli
repnz
pop
aas
mov
xchg
mov
ret
pop
inc
mul
dec
js
push
enter
cmp
and
push
imul
hlt
cwtl
or
sub
test
repnz
lret
xchg
add
test
add
outsb
jecxz
sbb
fnstcw
add
lret
nop
xor
pushw
pop
xor
ret
nop
test
leave
insb
jno
mov
ja
push
xchg
je
lods
mov
mov
jno
or
cmp
iret
add
xor
pop
add
add
outsl
pop
loope
ret
decl
push
cmp
bound
neg
mov
push
hlt
gs
fists
je
and
sarb
call
mov
lock
sbb
xor
pop
test
mov
shl
inc
fsubl
and
jae
jg
je
jecxz
push
hlt
pop
test
mov
out
xorl
cmovno
cltd
xor
jmp
jne
sbbb
adc
movsb
inc
sbb
jecxz
repz
dec
jg
sbb
test
push
testl
xor
xchg
test
shrl
rolb
sbb
cwtl
pop
scas
and
sahf
cwtl
clc
jecxz
xchg
fstl
pop
jp
inc
and
ljmp
pop
cmpsb
xchg
xchg
test
cltd
push
addl
rcl
dec
imul
pop
xchg
loopne
push
mov
inc
jb
lods
repnz
mov
fstps
popf
mov
dec
fsubrl
in
fidivs
jmp
je
and
or
dec
jle
ds
sti
xor
popa
shrl
pop
lds
pop
or
or
pop
les
or
aad
cmp
iret
xor
insb
push
sbb
sti
out
mov
jl
jecxz
or
sub
push
in
loope
outsl
enter
decl
cmp
adc
xchg
mov
sub
scas
adc
sbb
lods
aad
sbb
daa
add
aaa
stos
dec
loopne
xchg
pop
inc
push
xor
pop
push
mov
xor
lea
mov
cmp
dec
js
add
mov
dec
std
xchg
into
ret
es
fmull
jle
mov
das
xchg
pop
push
outsb
in
jno
std
lods
fadds
loop
pop
mov
fists
lahf
jl
or
jns
outsb
into
xchg
fwait
mov
xlat
rclb
sbb
in
cmp
cmpsb
mov
enter
add
mov
pusha
dec
cmp
push
in
jmp
or
imul
xor
inc
insb
lret
xor
dec
adc
cmpsb
test
pop
enter
test
sub
sub
xchg
lea
cmp
cmp
xor
addl
mov
inc
jnp
and
ss
rclb
iret
rcl
inc
aaa
test
mov
jo
fwait
and
int
jno
mov
or
std
add
je
popa
xchg
adc
in
mov
lock
pop
sbb
addr16
repz
mov
ljmp
aaa
pushf
pusha
push
int3
dec
push
sbb
push
ds
mov
les
ss
add
fists
push
push
sarl
xchg
aam
push
nop
adc
xorb
out
popl
mov
faddl
imul
in
nop
mov
pop
addr16
inc
ljmp
test
jo
aad
push
or
imul
pop
pop
pop
add
push
pop
ret
pop
inc
adc
mov
sbb
lea
mov
cltd
repz
iret
mov
pop
adc
bound
pop
jnp
rol
arpl
imul
notl
dec
cltd
pop
jne
imul
lret
lcall
fcmovnu
outsb
dec
bound
fsubr
sbb
popf
cmp
repnz
stos
lods
imul
mov
test
stc
outsb
mov
push
imul
in
cmp
jns
ss
mov
insl
push
dec
out
and
jb
or
enter
cmp
inc
int
pushf
jg
test
mov
xchg
and
mov
cmp
pusha
jbe
mov
lahf
std
mov
push
negb
shlb
pop
jle
enter
scas
ss
jno
mov
aaa
and
dec
adc
xor
js
mov
xchg
sub
inc
and
xchg
pushl
rcrb
pusha
jno
ret
cmpsl
pop
sbb
daa
mov
fcoml
ds
adc
push
dec
dec
leave
daa
jp
add
std
xchg
push
icebp
ljmp
add
xor
addr16
add
inc
jg
jmp
insb
sbb
sub
mov
sub
xchg
jle
push
lods
icebp
and
insl
in
enter
and
jp
or
scas
adc
push
popa
xor
sahf
inc
shll
out
push
mov
inc
jo
jno
dec
rolb
mov
cltd
leave
bnd
pop
jae
push
dec
daa
mov
jno
popa
mov
cmp
inc
mov
stos
jno
pusha
xchg
inc
into
sbb
popf
inc
je
and
or
aam
inc
inc
cwtl
pusha
dec
mov
xchg
mov
jmp
ret
js
adc
mov
mov
xchg
inc
or
call
inc
push
aam
push
mov
mov
repnz
cmpb
adc
xchg
test
out
push
or
push
fwait
scas
add
gs
sub
popa
rorl
mov
xor
mov
pop
pop
fidivl
daa
xchg
test
lahf
and
sub
or
js
push
jmp
mov
push
sub
xor
cmp
inc
xor
out
lods
int
mov
pop
dec
insl
test
push
icebp
xchg
adc
xor
xlat
cs
cmp
dec
out
inc
enter
jno
or
sub
ljmp
andb
push
aaa
mov
test
cwtl
ss
popf
int3
je
jbe
scas
out
mov
ret
lods
sub
mov
push
sub
mov
xchg
lods
and
add
jecxz
xlat
out
pop
mov
cmp
or
jnp
imul
sub
in
adc
dec
jecxz
pushf
aaa
es
pushf
jmp
mov
mov
lea
cmp
jno
fbld
push
bound
out
por
mov
inc
lea
jmp
cmp
xlat
fdivrs
lock
xchg
xchg
imul
jmp
adc
aad
xchg
das
push
das
scas
mov
and
dec
xchg
add
mov
lcall
ljmp
cmovge
sahf
xorb
fcmove
cmp
sbb
jecxz
mov
mov
fdivrl
frstor
dec
pop
and
push
pushf
jo
js
loop
or
test
mov
loope
stos
sbbb
jle
sbb
inc
push
sbb
cmpsb
and
dec
mov
adc
cmpsl
sub
sbb
mov
imul
js
push
andb
push
push
rolb
xor
ret
push
rclb
cmc
mov
enter
arpl
test
xchg
sub
dec
sbb
arpl
mov
es
arpl
adc
lods
xchg
jmp
scas
shll
rcl
lret
sub
in
sub
nop
fs
add
daa
xchg
ret
dec
rcll
mov
fdivs
xor
es
in
dec
xor
dec
sub
stos
sbb
inc
add
xor
pop
scas
loop
jne
dec
adc
jp
clc
pushf
shlb
push
and
in
stc
inc
mov
jo
xchg
add
lcall
cmp
fwait
mov
cmp
aaa
xchg
sbbb
es
mov
insb
repz
push
and
cmp
int
lcall
xor
mov
and
cmp
xchg
daa
fisttpl
icebp
mov
sbb
mov
xchg
int3
ret
sbb
shlb
mov
lret
call
mov
jno
pop
in
jp
mov
cwtl
pop
pop
jae
push
nop
ror
fldl
ja
icebp
jae
inc
test
stos
in
fneni(8087
mov
xchg
fwait
sbb
out
xchg
mov
out
nop
sti
fidivrl
inc
mov
fs
lods
ss
sbb
ret
adc
popa
test
pop
movl
nop
loop
dec
push
in
sub
stos
mov
scas
jbe
stos
aas
and
sub
jg
pop
dec
jl
adc
into
imul
inc
lcall
dec
loop
sbb
xchg
sub
loop
cmp
jle
add
enter
cli
divl
dec
or
push
xchg
adcl
mov
xorl
test
add
mov
add
loop
jne
iret
in
aad
fmul
popa
xchg
mov
outsb
jno
xchg
clc
iret
xor
sahf
popf
rcrl
push
mov
test
sub
cmc
adc
xchg
xor
ja
outsl
adc
call
or
mull
push
fld
sbb
adc
mov
mov
fdivr
stc
xchg
xchg
out
xchg
inc
add
jnp
repnz
jns
mov
and
arpl
mov
test
adc
jl
xchg
push
rcrb
ja
mov
push
xchg
push
call
in
pushf
mov
push
mov
cmc
mov
pushf
cmpsl
cmc
adc
stc
cmp
jb
jbe
mov
pop
jp
adc
pop
into
inc
enter
loopne
dec
inc
int3
xor
cmc
mov
push
std
es
sbb
pusha
adc
and
push
mov
mov
bound
sub
test
mov
xchg
shlb
sbb
pop
repnz
sahf
xor
mov
mov
add
dec
hlt
inc
mov
xchg
mov
push
push
or
in
fs
repz
push
sar
lret
dec
jns
pop
cmp
subl
popf
inc
xchg
lods
icebp
fs
mov
or
fimull
cmp
clc
xchg
lds
out
iret
std
imul
iret
out
shl
pop
popa
gs
imul
push
test
jnp
mov
cwtl
dec
loopne
xchg
sub
add
test
popf
and
bound
push
inc
dec
cmpsl
sub
aam
adc
call
imul
clc
insl
mov
gs
mov
mov
xchg
bound
pushf
and
and
mov
fsubl
add
pop
mov
aam
out
in
mov
adc
roll
or
mov
jae
sub
cmp
aaa
inc
pusha
push
pusha
pop
xor
push
sub
test
jmp
xchg
outsb
xchg
les
or
mov
cmpsb
jbe
loop
jge
fldt
xchg
or
call
mov
adc
test
gs
jl
cmp
in
or
inc
or
pop
scas
jl
xchg
adc
into
out
sbb
jne
adc
adc
xchg
cltd
inc
push
loope
fwait
pop
xor
repnz
adc
cmpl
flds
cmp
sbb
notl
adc
mov
fwait
mov
cwtl
sbbl
outsl
jmp
add
pop
mov
in
mov
sub
dec
jmp
fldenv
jmp
dec
movsb
loop
push
add
mov
pop
push
fsts
xor
fstpl
push
jns
or
mov
imulb
fisubs
jae
movsb
ljmp
test
jne
call
jecxz
shl
arpl
xchg
inc
stos
popf
decl
pop
or
mov
js
pop
mov
rcl
mov
jecxz
ja
lahf
sti
sbb
divl
add
test
jo
out
xor
pop
sub
daa
loopne
jmp
stos
hlt
sub
inc
out
dec
test
or
jg
cmp
das
dec
in
ss
mov
jb
nop
add
sbb
loope
mov
clc
inc
les
in
mov
jmp
add
sahf
imul
jo
pop
das
das
aad
push
pop
mov
jo
shlb
loop
je
and
jns
rcrl
push
pop
enter
cmp
add
and
cmp
mov
mov
push
add
idivb
sub
mov
mov
lea
and
lock
aam
popa
fdivl
mov
sub
test
jl
dec
xchg
in
mov
adc
test
gs
add
mov
mov
imulb
cltd
stc
cli
xor
mov
push
sub
dec
jb
stos
xchg
sbb
adc
pop
pop
loop
cmpsb
push
jnp
push
sub
inc
add
add
loopne
mov
jmp
std
push
mov
push
out
aad
mov
fdivl
lret
imul
pushf
loopne
lahf
dec
sub
push
movsl
clc
add
cmp
add
into
and
mov
outsb
xchg
jne
xchg
ja
inc
push
leave
addr16
sti
lcall
cmp
and
inc
mov
and
int3
or
xor
stc
test
ds
cmc
push
sbb
icebp
cmp
cmp
cltd
xchg
mov
mov
dec
pushf
adc
push
sahf
pop
pop
cmpsl
inc
push
lldt
enter
mov
rolb
jnp
sub
je
and
stc
in
stos
test
inc
int
push
cmp
int
sub
cltd
adc
int
and
or
inc
stos
ffree
mov
mov
div
cmp
stos
pop
cld
sbb
jmp
sar
jecxz
ja
ret
mov
dec
loop
je
push
mov
inc
jl
and
mov
inc
pusha
mov
jmp
aas
ds
adc
jo
scas
in
call
fnsave
push
shrb
dec
and
icebp
mov
lcall
cmpsb
lahf
xchg
push
adc
pop
or
sbb
ja
sub
ret
xor
pop
inc
inc
pop
inc
jmp
mov
mov
notb
repnz
sbbb
sbb
repnz
push
lret
sti
cmc
js
lahf
sbb
jecxz
cs
stc
ds
daa
sub
pop
in
repz
pop
mov
sbb
xor
cmp
gs
lret
sbb
pop
cs
or
int3
test
scas
movsl
stos
test
push
add
aas
lret
sub
int
fmul
dec
xor
scas
call
loope
adcl
cltd
lock
in
mov
lcall
xor
outsb
and
jle
jge
inc
xor
lret
jbe
jno
nop
or
pop
mov
movsl
push
push
aad
fistl
sbb
gs
loope
addr16
push
addb
ret
loop
mov
xchg
push
or
lds
pusha
sub
sub
inc
or
je
cmp
cltd
in
xchg
mov
and
push
or
in
sub
inc
inc
push
pop
inc
icebp
lahf
xchg
push
out
dec
adc
test
adc
lahf
clc
lods
pop
mov
stos
sub
sbb
or
mov
cmpl
popf
sti
xor
mov
jge
xchg
popf
cmpsb
inc
mov
sbb
xor
fadd
xchg
add
push
push
push
cmp
cmp
adc
adc
jle
sti
jns
sub
xor
loope
arpl
call
adc
lods
aam
data16
adc
mov
push
pop
xchg
insb
pusha
orl
fcompl
add
lret
insb
and
lds
out
mov
jmp
jno
mov
mov
add
mov
in
shlb
dec
into
ret
push
arpl
mov
and
ds
test
daa
sbbl
cli
sti
dec
pop
adc
jle
lcall
lock
das
jge
sub
std
inc
ljmp
jp
dec
subl
sbb
flds
mov
xor
cwtl
mov
jo
daa
lods
cwtl
addr16
fisubrl
cld
xchg
lea
xchg
push
mov
mov
xlat
push
sbb
sbb
push
mov
int
mov
jnp
fwait
test
sbb
popa
ficoml
adc
and
loop
das
imul
add
lds
mov
xor
enter
push
aaa
pop
mov
fdivs
push
xor
imul
push
lret
mov
jecxz
xlat
xor
pop
push
xlat
pop
sbb
sub
cmpsb
jnp
cmp
mov
mov
xor
lret
mov
pop
daa
mov
pop
stos
ret
scas
mov
ret
jo
out
mov
ret
inc
test
mov
cld
lea
andl
xor
push
push
fwait
int3
fsubl
or
lds
aas
inc
shll
dec
rcrl
jo
call
jecxz
rorl
call
mov
mov
dec
add
sub
adc
std
cmp
or
cmp
les
adc
addb
enter
adc
jne
insb
out
mov
decl
cwtl
xchg
sub
out
jge
pop
ss
test
std
add
inc
pop
sub
xor
insl
arpl
mov
jne
hlt
add
add
loop
fidivl
dec
das
jp
ljmp
pop
pop
insb
int
sub
test
stos
les
leave
mov
mov
and
inc
push
jno
iret
push
add
lea
hlt
ja
pusha
hlt
testb
loope
mov
or
fwait
scas
cmp
mov
in
cmp
push
mov
out
cmp
cld
pop
pushf
hlt
sub
gs
sub
cmpsb
inc
sarl
push
mov
adc
jo
push
push
xchg
mov
out
and
repz
test
pop
sub
mov
adc
lea
les
cld
pop
punpckhwd
jl
cmpsb
inc
pop
mov
pop
lock
xlat
adc
mov
lret
stc
imul
das
fstp
test
xchg
mov
dec
adc
add
repnz
push
inc
cld
sahf
pop
add
or
xorb
pop
cmovbe
mov
fnstsw
jmp
and
and
or
out
mov
int3
mov
mov
subb
incl
inc
scas
in
mull
inc
mov
push
cmp
mov
or
fldcw
shll
sbb
loopne
xor
push
mov
xor
inc
jge
pop
call
rep
stc
add
fildll
or
and
pushf
jbe
iret
xchg
stos
call
mov
movsl
in
loope
jle
bound
mov
mov
fmul
in
mov
outsb
jo
xlat
xchg
push
cltd
jle
repz
push
shl
push
adc
adc
pushf
sub
je
or
sbbb
dec
ret
or
mov
insl
daa
dec
ret
sub
stos
test
and
mov
addr16
inc
incb
mov
mov
xor
push
sbb
fwait
out
aaa
mov
test
add
pop
aam
inc
mov
sbb
ljmp
rcl
jge
push
in
pusha
fisttps
jmp
push
mov
pop
jl
ja
repz
lret
xchg
dec
popf
pop
add
test
lds
xchg
icebp
sub
dec
lret
adc
mov
dec
cmpsl
mov
stc
lea
repnz
addr16
jmp
push
sarl
sub
imul
mov
data16
stos
in
push
jmp
mov
dec
cmp
loopne
hlt
xchg
imul
xchg
xchg
jb
jno
mov
mov
pop
mov
xor
inc
push
sub
jb
out
mov
daa
xchg
add
xor
test
push
jns
jbe
adc
inc
ficomps
sbb
jecxz
push
pushf
iret
arpl
ret
xor
pop
adc
subl
jecxz
dec
xchg
icebp
aaa
loopne
int3
clc
mov
out
sahf
shll
dec
or
sbb
mov
sarl
out
or
aam
dec
xor
lret
loopne
lods
mov
ficompl
js
mov
pop
lret
adc
shl
push
das
aas
mov
jge
inc
test
sub
and
outsb
mov
pop
or
pop
lods
xchg
fidivrs
cmp
add
xorl
mov
and
push
xchg
mov
push
sbb
js
jecxz
andb
jne
shll
bound
and
push
fwait
push
mov
pop
pop
dec
aad
fstpl
ds
lea
stos
stos
in
mov
ljmp
mov
call
xor
mov
stos
popa
cmp
and
popa
mov
push
int
sub
xor
mov
repnz
pop
pop
jo
cmp
inc
lds
sbb
mov
sbb
test
xchg
add
jns
dec
xor
loopne
jae
cmc
jecxz
loop
or
jns
mov
xchg
ffree
pop
mov
mov
cmp
ficompl
pop
rorl
nop
orb
rcrl
cld
fwait
adc
gs
sub
sbb
xor
lret
or
shlb
jg
mov
jb
add
dec
sbb
cmpsl
dec
inc
jnp
mov
xor
xchg
pop
dec
adc
pop
andb
lock
inc
cmpsl
push
in
push
and
daa
sbb
and
inc
lret
or
xchg
cltd
cs
mov
aam
les
inc
call
rcrb
push
pusha
popf
adc
push
insb
xorb
test
mov
lock
in
repnz
shrb
or
daa
aad
cli
push
scas
jno
testl
gs
stos
mov
int3
dec
cmp
lahf
mov
and
mov
cwtl
mov
and
out
sbb
loop,pn
shll
dec
adc
mov
cld
mov
and
push
cltd
repnz
pop
popl
mov
cltd
cmp
cwtl
jb
lret
push
pop
pop
and
daa
insb
dec
std
aaa
imul
rcll
data16
xchg
mov
or
data16
sbb
inc
and
sub
xchg
pop
pop
mov
sbb
out
adc
scas
pushf
in
adc
and
jg
xchg
pop
xchg
xor
fmuls
pop
inc
scas
cmpsl
mov
mov
adc
out
repz
push
adc
add
stos
repnz
fmul
sub
dec
lods
lret
dec
leave
pop
clc
inc
inc
adc
out
aas
loopne
pop
jne
ret
and
xchg
sbb
dec
cmp
movsl
push
leave
hlt
dec
xlat
xchg
fwait
cwtl
add
and
or
add
pushf
enter
std
stos
clc
or
xchg
mov
sub
push
loope
or
adc
aas
icebp
push
jne
sub
inc
out
cmp
or
dec
sbb
sub
fistps
jp
add
daa
add
cwtl
inc
adcl
icebp
xchg
data16
hlt
insb
adc
adc
add
mov
pop
inc
enter
jge
push
movsb
push
xchg
mov
lea
aad
inc
cli
pop
shll
add
or
inc
iret
rorb
imul
sbb
jns
imul
into
fcoms
icebp
fninit
movsb
adc
es
bound
fldenv
xor
lods
and
and
loope
mov
sbb
push
lcall
dec
mov
xlat
mov
sbb
mov
cmp
mov
inc
push
xor
scas
sub
inc
pushf
mov
push
jnp
jnp
adc
vmread
jmp
mov
orl
aam
push
insl
push
das
outsl
dec
dec
push
hlt
ds
dec
lret
in
mov
rorb
scas
inc
aaa
jno
inc
mov
ja
mov
test
xor
fwait
cmp
sbb
orb
dec
sbb
dec
into
fistps
xchg
cs
mov
das
sub
sub
xor
inc
sub
ror
es
jnp
into
fdivr
jge
insb
js
cmp
pop
jle
seto
dec
pop
iret
subl
test
jbe
loopne
movsb
aad
outsl
ret
fwait
push
insb
scas
jp
pop
jb
xchg
mov
imul
hlt
test
inc
out
or
pop
push
dec
mov
lcall
repnz
xchg
sarl
cltd
out
and
xor
adcb
insb
inc
jo
mov
jg
aad
movsb
push
gs
popf
mov
fiadds
jmp
test
sub
negl
mov
jmp
xor
lcall
pop
das
mov
cmp
sub
sbb
push
subb
inc
add
inc
or
add
sbb
in
pop
jae
popa
inc
xchg
mov
icebp
cmp
jle
adc
and
sbb
jp
shll
push
push
fstl
xor
jp
ds
mov
out
inc
arpl
sti
aad
sub
and
mov
cli
pop
add
push
adc
pop
pop
mov
insb
stos
adc
sub
loope
adc
push
test
iret
xor
fsubs
mov
cli
cmp
mov
js
das
movsl
xchg
sub
mov
pushf
pop
sahf
mov
jmp
push
cmp
int3
pop
repz
iret
fadd
jae
push
sbb
pop
inc
rolb
int3
movsl
neg
subl
gs
das
sbb
addr16
mov
cli
dec
mov
push
imul
daa
or
dec
std
ret
xchg
jno
test
dec
cli
and
push
dec
enter
inc
mov
mov
cmpsl
aad
cwtl
push
clc
sbb
das
stos
or
outsl
pop
out
mov
shrb
lds
xchg
add
push
icebp
les
std
jnp
movsb
mov
rcrb
movsb
ror
or
push
std
xorl
pop
or
or
adc
sbb
pop
or
sub
loop
cmp
test
jmp
call
dec
loope
ljmp
in
clc
adc
jne
in
std
jge
pusha
pop
xor
adc
push
rcll
sub
xchg
idivb
jecxz
in
xchg
pusha
pop
and
ds
stos
cs
repnz
inc
lahf
sbbb
roll
jno
les
xor
add
xchg
sti
into
sub
insb
fldenv
nop
lahf
pop
stos
pop
cmp
bound
cmp
repz
jae
popa
sub
je
and
dec
mov
cmp
scas
mov
popf
xlat
xlat
fldcw
rolb
outsb
cmp
mov
outsb
jge
loopne
sbb
in
popa
setae
out
daa
cmovp
xlat
xor
jno
mov
sbbb
dec
out
enter
jo
clc
lahf
mov
sbb
adc
cltd
ret
add
jp
lcall
popf
mov
lock
jp
and
jmp
outsb
adc
scas
sub
stos
aam
pop
mov
rcrl
jl
inc
cmp
add
sub
xor
xor
jae
jo
pop
xchg
xor
sti
mov
imulb
cmc
popf
push
add
push
pop
ret
loop
leave
scas
and
push
sbb
jge
push
dec
scas
inc
cwtl
outsb
dec
pshufw
movsb
add
mov
mov
sbb
sub
cld
or
mulb
cmp
cmp
mov
pop
jmp
cmp
aad
push
mov
push
fs
pop
or
inc
cmp
jnp
mov
arpl
fcmove
cmp
js
in
jg
jb
ret
nop
es
test
test
xor
enter
push
cmpsb
dec
pushf
and
in
push
insb
cld
and
jp
dec
or
gs
xchg
cmc
push
aas
icebp
push
fxch
mov
jmp
cs
int
data16
or
lahf
mov
or
xor
loopne
cld
cmp
xlat
add
lods
dec
jle
or
add
sub
and
inc
outsl
clc
push
pop
xlat
insb
adc
pop
pop
icebp
out
aas
rol
jg
sbb
sahf
sbb
test
inc
xchg
mov
jne
not
mov
pop
adc
pop
and
stos
mov
inc
dec
in
mov
in
pushf
cmp
imul
ds
pushf
cmp
cltd
imul
bound
and
or
in
jae
pop
push
jp
adc
push
jle
ljmp
arpl
mov
mov
xor
add
movsb
sbb
cmc
sbb
mov
popf
mov
fistpll
or
imul
pushf
jns
mov
enter
cmpsb
insb
in
jle
cs
fdivl
test
jge
scas
ret
pop
movsl
in
xchg
std
divl
xor
pop
test
inc
push
dec
negl
imul
insl
mov
dec
and
sub
ret
sbb
mov
sub
es
mov
jne
push
add
sbb
pop
rcl
mov
outsb
rolb
sub
repnz
imul
pushf
.byte
js
dec
dec
jmp
add
add
and
add
adc
add
and
xor
jp
jecxz
clc
mov
add
ror
loope
cmp
push
push
inc
jo
adc
jg
imul
sar
xor
adc
and
test
mov
mov
cmpl
mov
mov
or
sub
cmp
xchg
or
ret
daa
movsb
xchg
or
and
movb
nop
inc
pop
jno
add
filds
add
add
add
add
call
add
icebp
pop
in
orl
testb
insl
xor
insl
clc
sub
dec
inc
xor
dec
xchg
jge
insb
out
xchg
aam
sub
fsubrl
pushf
dec
add
and
notb
jne
ss
inc
push
out
cmc
das
movl
mov
iret
pop
rclb
sahf
cmpsb
dec
data16
cmpb
cmpsb
and
pop
add
out
cmp
daa
sbb
sbb
xlat
rcll
mov
push
inc
dec
cmp
and
mov
fnstcw
test
lea
jo
push
js
mov
mov
jle
sub
cmpb
jnp
cwtl
std
or
cltd
fld
insl
mov
adc
aam
sub
in
aam
lods
lea
and
aad
je
test
fwait
inc
rcll
add
fbstp
lods
js
fwait
add
loope
mul
clc
jnp
cmpsl
iret
adc
ficoms
test
mov
jecxz
fninit
clc
sahf
les
inc
sti
mov
arpl
adc
and
and
test
mov
jnp
mov
push
mov
clc
dec
push
pop
leave
ljmp
dec
in
scas
in
cltd
mov
cmp
dec
into
cmc
push
push
inc
cmp
add
clc
stos
xchg
js
les
mov
mov
inc
pop
jg
and
jo
cmpb
lcall
mov
cmp
adc
neg
mov
stos
add
cmp
bound
pop
add
dec
test
in
mov
adc
pop
pop
dec
sub
sti
jno
mov
leave
and
xor
test
adc
xor
inc
cwtl
test
push
shl
cld
inc
mov
sub
nop
enter
jg
sub
xchg
test
jns
xor
testb
addr16
pop
mov
fimull
sub
xor
xor
pop
pop
push
jb
cs
xchg
adc
and
das
or
mov
cmp
daa
pop
adc
inc
das
test
insl
pop
dec
or
arpl
xchg
jne
xor
xchg
mov
nop
outsb
xor
in
ret
call
xlat
int3
ror
mov
testb
or
push
jg
push
or
push
js
int3
je
jb
dec
xorl
fiadds
inc
mov
jmp
xlat
and
xchg
sub
mov
stc
inc
mov
in
mov
jmp
and
push
dec
mov
push
fistpll
lods
xor
mov
xor
ds
mov
cmp
lock
stos
push
fs
xchg
ret
adc
cmp
out
loopne
inc
mov
mov
sub
iret
scas
fsubr
jge
clc
xor
stc
push
test
xchg
mov
out
cmp
sahf
jns
pop
jge
ret
mov
nop
ds
imul
or
popa
or
aad
in
mov
call
jecxz
push
repz
ret
cwtl
mov
js
aad
push
sbb
sbb
lock
and
les
jp
push
cmpsb
leave
mov
movsb
xchg
or
imul
lods
inc
cltd
pop
add
xchg
mov
imul
insl
add
sub
or
cwtl
outsl
and
cmpsb
jmp
out
pop
leave
pop
mov
xchg
out
nop
das
sbb
outsb
mov
mov
dec
and
in
mov
shrl
mov
push
jns
cmpsl
dec
xchg
pop
or
rcl
int
and
into
loopne
in
rolb
sub
imul
cmc
inc
scas
sbb
les
pop
outsl
cmc
xlat
out
arpl
sbb
dec
adc
inc
sti
pop
cmp
int
sbb
mov
pop
in
cmp
jne
jmp
lock
cmp
lea
jge
jmp
jg
mov
inc
mov
icebp
popf
orb
push
addr16
xchg
out
mov
dec
aam
in
xchg
popf
nop
jae
cmpsl
jo
push
sbb
mov
add
add
lcall
idiv
enter
jae
pop
leave
add
ja
add
mov
test
std
jmp
cwtl
jecxz
adc
jne
clc
idivb
je
outsb
sbb
std
or
and
mov
xor
inc
cmpsb
lahf
je
data16
outsb
loop
std
lods
rclb
jle
movsl
int
add
cmc
in
inc
push
xor
mov
stos
inc
jecxz
lods
push
or
xor
and
push
cli
jl
mov
jg
pop
je
adc
test
mov
cmp
cmpsl
mov
add
shrl
mov
test
lret
pop
sbb
add
mov
pop
int
addr16
push
loopne
jnp
stos
mov
pop
aad
test
xchg
je
mov
xchg
cld
loop
jb
sbb
gs
lret
jmp
lret
or
lds
fs
xorb
mov
add
and
inc
mov
dec
xchg
in
sbb
repnz
fsubrl
enter
add
sub
jbe
xchg
add
sub
ret
adc
push
push
add
or
insb
fsubrl
mov
push
sbb
js
push
or
aaa
xor
js
scas
cs
mov
das
test
add
fildl
jnp
out
cmp
push
dec
pushf
dec
push
mov
nop
jb
cmp
movsb
pop
add
add
lret
pmaddwd
push
mov
mov
sub
pop
cltd
orl
call
lret
test
stc
pop
cmpsb
sbb
iret
or
fldt
ja
sbb
push
add
jl
or
jmp
fisubs
sub
lds
xchg
sub
ret
mov
cmp
cmp
or
push
adc
xchg
sahf
leave
xchg
out
inc
pop
cmp
dec
and
dec
das
test
repz
sub
jno
fdivrp
mov
sub
das
cli
addr16
push
add
les
clc
push
push
dec
pop
cs
inc
xlat
roll
fstpt
mov
test
jmp
pop
mov
outsl
xchg
and
daa
in
ss
ret
and
mov
jg
in
pushf
leave
insl
in
out
jecxz
neg
ljmp
stc
dec
cs
mov
lock
jno
push
or
mov
cmpsl
jns
jmp
cmpsb
fwait
aaa
inc
jnp
fcmovu
stc
push
rcrb
ds
decl
mov
adcl
push
iret
sub
inc
pop
stc
push
jno
and
scas
pop
aaa
xchg
pop
ljmp
mov
dec
mov
les
pushl
push
or
jbe
push
int
adc
add
jo
jle
jb
cmc
mov
out
insl
jb
inc
sbb
and
nop
mov
inc
mov
mov
pop
dec
es
xchg
out
imul
fs
jae
lods
add
daa
out
iret
or
or
sbb
adc
pop
xchg
and
std
rcll
mov
mov
or
ret
shl
fdivl
mov
loopne
inc
in
jno
imul
adc
test
inc
cmp
cs
lock
in
cmp
insl
sbb
lods
xlat
cmp
or
or
jo
mov
out
outsb
xchg
add
xchg
jne
js
push
imul
out
jo
ja
popa
into
loopne
fs
jae
pop
mov
jae
sub
mov
push
imul
addl
xchg
jo
ja
icebp
ds
cwtl
imul
sub
sbb
repz
into
pop
push
add
outsl
xchg
frstor
aad
jnp
lea
fstl
jl
xor
jbe
pop
stc
mov
sub
xor
pop
mov
xor
in
jne
sbb
sub
add
arpl
mov
xchg
gs
lock
pop
push
cmpsl
jbe
lds
in
dec
lret
cmpb
fwait
inc
in
les
aaa
sub
mov
imul
stos
out
mov
inc
out
mov
aad
and
or
and
test
pushf
cmp
scas
lods
mov
adc
and
dec
divb
dec
nop
push
mov
outsl
jnp
jne
sbbl
mov
or
sub
std
mov
mov
cltd
adcb
rcll
inc
aas
cld
pop
jle
dec
mov
fisubs
div
dec
adc
or
js
aad
jnp
jb
pusha
xchg
pop
faddl
cmp
inc
jns
filds
repnz
and
nop
mov
lret
xor
xor
fsubrs
pop
lcall
fcom
sub
arpl
xchg
repz
or
out
testb
push
fsub
fs
fucom
mov
push
scas
mov
sub
imul
mov
mov
mov
mov
cli
in
lea
pusha
popf
push
aad
mov
pop
aam
call
hlt
push
jne
cmp
add
push
push
clc
das
jecxz
ret
inc
xorb
xchg
dec
pop
mov
xchg
outsl
or
lret
pop
push
les
xchg
xor
mov
stos
es
jge
popf
loopne
push
mov
cmp
aaa
call
sarb
test
bound
ljmp
lret
aam
pop
dec
lea
gs
sub
cmp
aas
push
adc
xchg
and
pop
mov
in
sysenter
inc
popf
inc
and
inc
scas
rorb
xor
dec
das
jbe
add
movsl
rorb
in
sub
add
ss
imulb
std
data16
sub
adc
mov
and
ja
cmp
stos
dec
xchg
pop
cli
pushf
inc
adc
dec
sub
ret
push
xlat
xchg
cmp
mov
add
add
repz
dec
add
xchg
mov
mov
mov
cmc
stos
jmp
es
mov
mov
pop
out
test
mov
loop
test
lock
stos
ljmp
mov
out
or
jge
inc
scas
sarb
mov
mov
fists
mov
lahf
or
xchg
dec
adc
mov
or
int3
int
iret
sbb
adc
imul
jbe
bound
cmp
adc
loope
sbb
mov
pushf
xchg
xorb
mov
aam
jecxz
or
insl
jbe
repz
das
stos
repz
add
push
push
jb
push
mov
sbb
inc
popa
ror
inc
xor
daa
daa
ds
sahf
imul
pop
mov
cmovp
fisubs
pushf
mov
jge
mov
pop
cmp
loop
jo
shll
dec
enter
jnp
cmp
push
push
in
jg
icebp
or
cmc
and
dec
jne
cmc
mov
sub
cltd
jge
cmpsl
and
lods
aaa
sub
test
sahf
imul
cmovne
in
mov
lea
pop
dec
jno
addl
inc
add
add
cmpsb
sub
mov
stos
jg
pop
lods
dec
mov
or
shll
movsb
fstl
out
sbb
test
test
push
and
jne
xchg
daa
inc
and
rolb
pop
addb
scas
into
outsb
dec
sti
xchg
push
clts
jne
mov
enter
add
mov
sbb
jle
add
mov
sub
sub
mov
jl
sarb
cmp
popf
call
sbb
cli
cltd
bound
pushf
test
scas
adc
repnz
and
lret
mov
mov
push
jecxz
mov
sub
mov
movsl
xchg
js
inc
and
movsb
push
imul
xor
jo
pushl
adc
mov
mov
loopne
inc
mov
es
hlt
fildll
into
jg
jp
popf
sub
mov
nop
dec
mov
adcb
inc
dec
xchg
push
nop
stc
in
enter
pop
mov
or
scas
sbb
xchg
shl
cmpsl
add
out
push
dec
jnp
test
sti
adc
adc
cmp
mov
sub
into
rcrl
and
xor
loop
stos
test
call
jno
xchg
mov
scas
xlat
mov
aas
cmp
lahf
imul
sub
and
scas
stos
addr16
into
and
rorl
sub
sbb
xlat
clc
insl
mov
push
out
jne
add
push
incl
adc
lds
ficoml
pop
xor
inc
jg
adc
and
imul
inc
or
cmp
sbb
pushf
cltd
mov
imulb
inc
mov
testl
lret
or
lahf
es
cmpsb
sub
pushf
xchg
jge
mov
cwtl
mov
and
xchg
sbb
lds
std
mov
fnstcw
es
add
push
cmp
outsl
adc
or
rorb
push
out
xor
xchg
mov
loop
dec
aad
cs
loopne
into
aas
add
loopne
loope
pop
cmp
out
xchg
cmp
mov
addl
push
mov
repnz
mov
cld
push
mov
and
xchg
leave
push
mov
filds
mov
add
adc
call
imulb
adc
xlat
jecxz
js
popa
fildl
lock
sub
movsl
xchg
jge
insb
stos
cmpsb
movb
jl
inc
dec
in
mov
daa
out
in
aaa
scas
cmp
ja
movsb
popa
ficoms
pop
mov
adc
cmp
scas
inc
cmp
push
xchg
mov
xchg
add
push
stos
bound
out
in
xor
push
in
sub
xchg
jg
mov
inc
lahf
xchg
test
xchg
mov
pop
adc
mov
push
je
xchg
fwait
pushf
push
mov
sbb
jno
mov
adc
mov
cltd
testl
aas
mov
ja
xor
and
addr16
and
sahf
jmp
ljmp
sub
and
push
push
adcl
mov
orl
arpl
test
enter
inc
inc
sub
or
sbb
jmp
jp
dec
inc
roll
inc
popf
bound
jb
jp
mov
add
or
or
dec
pop
test
jp
mov
das
dec
sub
clc
lret
dec
inc
arpl
fucomp
andb
fwait
enter
mov
adcb
pusha
ds
jo
sub
or
mov
popa
ficoms
fadds
out
fcmovnbe
inc
xchg
xchg
or
fstps
imul
out
mov
stos
sbb
and
hlt
fcoml
inc
fsubrs
jnp
pop
das
or
mov
inc
jnp
jg
jbe
shld
mov
rcrb
push
xchg
popa
stos
jns
jp
aam
push
aam
test
outsl
sub
bound
add
rorl
es
loop
aam
inc
or
and
repnz
and
movsb
jmp
je
incl
mov
js
push
pop
add
mov
ds
mov
sub
nop
xchg
lods
sub
jle
add
nop
xchg
aad
mov
fstl
ret
push
inc
mov
adc
bound
sbb
aad
sbb
shl
fstl
mov
daa
jecxz
ffreep
outsb
push
outsl
daa
fwait
or
lret
sbb
inc
adc
stos
cmp
xchg
aas
push
popa
ljmp
insl
mov
test
iret
xchg
mov
adc
lret
inc
jb
test
sub
inc
cmp
xchg
adc
pop
push
sarb
xlat
inc
orl
fsubr
cmp
mov
cli
or
mov
xor
ficoml
push
pmovmskb
imul
pop
mov
mov
push
ret
cmp
and
leave
xor
xor
cld
mov
imul
or
ds
mull
negl
sub
mov
movsl
mov
pop
test
les
mov
pop
rcll
or
and
mov
xchg
xor
adc
push
and
jbe
mov
sbb
inc
stc
sahf
mov
pop
lea
loop
dec
in
sbb
pop
scas
adc
pop
cmc
sbb
push
pop
cmp
and
adc
scas
mov
xchg
jl
les
imul
or
xor
aas
mov
and
ds
fnstenv
das
inc
mov
sbb
xor
imul
mov
insl
out
rolb
mov
pop
jne
in
loope
sub
sahf
xchg
lea
inc
scas
repnz
cs
jg
js
pop
pop
rcrb
sbb
sub
inc
and
adc
mov
mov
xchg
jne
or
pop
add
mov
pop
cmp
gs
test
in
mov
jp
cmp
inc
mull
in
sub
stos
push
jnp
sti
add
test
xchg
fwait
out
mov
mov
ss
jmp
shrb
dec
or
and
jge
mov
mov
and
mov
rep
dec
dec
int3
push
lods
xchg
cmp
pop
popa
aad
dec
sbb
jg
inc
mov
cmc
jns
push
cmpsl
pop
pop
push
mov
mov
sarl
push
dec
dec
xchg
nop
xchg
lea
cmp
inc
adc
lcall
mov
xchg
mov
jo
push
sbb
popa
notl
clc
dec
jl
fists
outsb
scas
xchg
out
loopne
or
movsb
jle
rcrl
cmpsb
stc
cltd
and
cmp
adc
into
js
jmp
repnz
sbb
xchg
add
lods
push
fisttpl
inc
add
in
xchg
mov
shr
sub
xchg
mov
xor
pusha
das
data16
cmp
orl
lret
sbb
sub
xorb
dec
idivl
adc
adc
popa
inc
xor
mov
jp
xchg
inc
fld
loopne
shlb
insb
mov
push
stos
inc
xor
mov
dec
cmpsb
pop
int
jge
fcmovbe
repnz
sbbb
pop
int3
jecxz
pop
mov
sub
mov
sub
sbb
movsb
enter
in
test
shlb
mov
adc
sub
push
mov
push
dec
insb
ret
jb
into
and
cwtl
push
xchg
add
or
pop
call
mov
dec
pop
into
incb
popa
dec
mov
cmp
sub
sti
or
or
inc
inc
loope
fcomip
outsl
mov
iret
fidivrs
repz
xchg
jl
sub
rorl
pop
shll
data16
addb
inc
cli
fistps
mov
sbb
cltd
shrl
out
sbb
imul
xchg
aad
fwait
inc
adc
lahf
mov
lcall
pop
pop
in
jne
xchg
repnz
aaa
mov
clc
mov
jge
in
mov
aas
jge
jae
mov
inc
mov
add
fsubrl
lods
push
jge
push
cmp
xor
xchg
mov
pop
dec
test
scas
inc
test
js
mov
je
or
insb
aad
mov
sub
xor
xorl
sub
jae
in
pushf
add
ja
cmpb
stc
outsl
andb
ja
clc
ret
cmpsl
xlat
add
dec
aad
je
adc
sub
cld
sarl
pop
jno
gs
pop
mov
inc
pop
mov
lret
push
mov
cmpsl
bound
stc
cmp
cmpsl
xchg
lea
mov
fildl
xor
xchg
jbe
adc
sbb
adc
adc
xchg
ljmp
adc
in
xchg
inc
xchg
inc
pop
ret
and
xor
jns
in
imul
sub
push
fstpt
enter
gs
adc
jl
sbb
nop
mov
adc
jl
xor
popf
das
xor
es
movsb
push
rdmsr
outsb
iret
iret
mov
pop
and
sbb
insl
xor
std
sub
ss
pop
imul
cmp
testl
xchg
mov
stos
pop
or
divb
inc
xor
ja
push
and
je
in
and
ja
cmp
adc
sar
mulb
add
out
mov
pusha
daa
inc
jno
jno
cmp
cmpsb
fildll
adc
pop
mov
pop
dec
int
movl
jmp
cmp
dec
inc
dec
pusha
out
out
push
add
in
mov
cld
ja
add
or
les
call
repz
xchg
add
aaa
incb
jmp
pop
ss
or
cmpsl
cmp
stos
shl
popf
xlat
xor
gs
hlt
insb
adc
js
mov
pop
lahf
xchg
mov
jns
int
hlt
mov
ret
out
fsubrl
push
rolb
xchg
jg
cmp
test
and
adc
jns
mov
dec
test
shll
out
mov
mov
mov
xchg
mov
idivb
in
fistpll
push
cmpsb
mov
xlat
out
imul
sub
cmp
hlt
jge
dec
stc
sahf
outsl
es
movsl
loopne
adc
cmpsb
and
and
outsl
sti
ds
test
xorb
dec
shlb
xor
sar
mov
sbb
or
mov
pop
lahf
or
repnz
mov
lcall
inc
bound
enter
sbb
jecxz
sub
pop
or
int3
fnstsw
loop
xlat
pop
mov
push
push
hlt
jae
loopne
pop
cltd
mov
jno
insb
leave
in
mov
xchg
int
push
mov
dec
jge
stc
cmpsb
loopne
xor
pop
mov
imul
mov
das
mov
loop
jns
popf
dec
jl
movsl
xchg
outsl
out
in
lds
sbbl
cmpsb
xor
hlt
and
test
add
mov
in
xor
cli
sbb
or
jg
pop
mov
add
addr16
sub
xor
pop
lret
sbb
sub
daa
push
push
adc
xchg
in
jns
sub
xchg
jp
iret
fmulp
cmp
sarb
sub
aas
ss
push
ss
data16
adc
jmp
sub
jne
pop
dec
stos
iret
jp
into
stos
jb
inc
bound
rcll
repnz
arpl
mov
aaa
stc
xchg
xchg
ficomps
aaa
mov
and
adc
aad
cmp
jnp
push
and
sbb
fdivp
mov
int
jmp
insl
ficompl
cli
nop
sub
add
mov
popf
pop
out
xor
add
outsb
mov
mov
sub
cs
insb
sub
lahf
fnsave
insb
mov
adc
int
leave
in
push
xchg
loopne
leave
mov
and
aam
or
pop
out
arpl
repz
pop
or
les
xor
int3
mov
mov
test
js
xchg
xor
add
ret
popf
mull
fsubrl
xchg
aam
sub
xchg
jae
mov
ljmp
inc
arpl
add
aaa
scas
ret
inc
notl
sub
mov
pop
and
fcmovnu
ss
inc
out
lods
xor
sbb
inc
ret
roll
sbb
push
mov
xchg
inc
mov
sbb
cmc
mov
lds
lods
mov
outsb
aam
in
fstps
xchg
insb
push
jno
inc
add
pop
mov
mov
sbb
sub
stos
mov
lcall
push
add
pop
and
insb
rorb
pop
add
mov
cwtl
lcall
inc
jbe
xchg
int
cltd
mov
enter
sbb
cmpsb
test
inc
sti
add
out
dec
mov
cmpsl
dec
je
bound
add
inc
pop
iret
xchg
imul
xorb
aas
mov
call
dec
shlb
ss
jns
scas
adc
push
inc
mov
cmc
mov
adc
lahf
sahf
insl
push
fidivl
or
xchg
js
mov
adc
pushf
push
scas
pop
movsb
push
xchg
lcall
lea
repnz
outsb
push
out
dec
and
gs
pop
shll
jl
addl
xchg
mov
insl
jo
xchg
dec
pop
sbb
jne
sbb
adc
xchg
ret
cmp
fidivrl
popa
fcoml
loope
lcall
and
loopne
rcrl
inc
xlat
mov
or
jb
mov
adc
xchg
sbb
pop
in
loope
push
pop
loopne
loope
pushf
sbb
sahf
mov
mov
inc
pop
lret
insl
xor
enter
pop
mov
cmp
pop
pop
pop
popf
and
clc
movsl
leave
mov
stc
mov
cmc
mull
jle
shrb
cmp
imull
pusha
stos
hlt
or
sbb
mov
inc
loope
popf
cmpsb
repnz
push
divb
jnp
lea
in
mov
inc
dec
jp
add
mov
test
lahf
jge
movhps
xor
xchg
mov
pop
shlb
jae
leave
xchg
inc
data16
incb
xor
xchg
dec
push
cs
jb
in
pop
pop
addr16
and
aam
or
into
xchg
mov
cmp
push
fs
mov
add
mov
lods
jge
in
jns
mov
out
rolb
lea
and
fisttps
and
popf
lea
int
xchg
lods
adc
xchg
mov
pop
sahf
aam
push
sbbb
sti
stc
hlt
arpl
cmp
add
pop
int3
andnps
xchg
push
mov
and
cmp
pushf
cwtl
jg
adc
frstor
leave
pop
shlb
jmp
iret
inc
sbb
mov
cld
sub
call
arpl
arpl
cmpsb
aaa
pop
pop
cwtl
pop
scas
lds
sub
das
jg
pop
mov
xor
repnz
andb
add
andl
xor
sbb
sbb
fwait
into
pushf
inc
shl
push
and
sbb
cmpsl
shll
out
sub
xchg
pop
out
pop
push
dec
jae
cmpsl
add
push
jns
fwait
sahf
push
shll
clc
cmpsl
push
adc
scas
testb
es
aam
jecxz
enter
cli
dec
aas
jne
les
mov
clc
pop
inc
dec
lock
or
out
pop
lcall
lock
out
ret
ja
js
push
mov
sbb
stos
pop
xor
mov
test
jecxz
inc
push
int3
in
loopne
arpl
cmp
jae
shrb
in
dec
pushf
mov
cmc
test
and
push
sahf
mov
adc
int
cli
mov
sti
add
adc
imul
mov
shl
inc
jmp
jmp
test
mov
pop
test
out
mov
es
mov
int
dec
cmpsb
push
outsl
pop
clc
xchg
add
inc
in
sbb
adc
scas
ret
mov
arpl
and
hlt
pop
jecxz
or
push
add
mov
imul
jmp
jb
test
mov
dec
test
mov
or
or
bound
bound
hlt
mov
in
ret
xchg
cmpsl
ljmp
mov
fcomps
and
cmp
fbld
xchg
ds
jo
jne
pusha
dec
into
cmp
push
inc
divl
add
rclb
popf
xchg
xor
mov
add
mov
mov
xchg
adc
or
jb
jnp
inc
xorl
cmp
fsubrs
fisubrs
mov
cmp
out
gs
dec
iret
scas
scas
mov
sbb
dec
aam
push
push
mov
aaa
add
loope
lds
sbb
test
cmp
xchg
movsl
clc
mov
jbe
es
push
xlat
jge
mov
lret
daa
gs
cmp
and
cmpsl
jge
cwtl
pop
cs
push
mov
push
bound
outsl
and
mov
leave
xchg
sbb
adc
xchg
push
mov
adc
xor
fildl
test
pop
nop
inc
aas
push
aas
add
or
jmp
popf
ja
push
pop
mov
push
shrl
int3
mov
ss
add
mov
and
outsb
fidivs
add
pop
xchg
or
cmp
stc
jno
sbb
outsl
test
pop
sbb
popa
adc
es
mov
int3
icebp
xor
jns
mov
clc
lcall
and
shll
repnz
jo
sbb
iret
mov
mov
cltd
pushf
vorps
dec
lret
cli
fstpt
ficompl
push
test
movb
dec
push
and
cmp
mulb
pop
adc
iret
mov
arpl
push
mov
mov
or
loopne
sahf
cmp
sbb
xchg
inc
push
pop
dec
repz
addb
add
in
xor
ljmp
jbe
cmpsl
sarl
aaa
dec
aam
pop
dec
dec
out
rclb
dec
fsubs
mov
sbb
jle
dec
add
mov
imul
fdivrp
loop
dec
in
aas
sbb
mov
imul
rorl
pop
jb
jbe
aaa
test
in
fwait
jmp
cmpsl
jp
push
sub
lock
jo
inc
and
pop
cmpsb
cmpsb
aas
es
ror
or
jle
cmp
xlat
inc
loope
mov
pop
or
sub
fsubl
orb
adc
shlb
inc
xor
jl
push
shr
lds
inc
sbb
cltd
xchg
iret
daa
jp
je
je
mov
std
ret
sub
repz
lods
xchg
jle
push
mov
mov
mov
daa
dec
add
neg
paddusw
jo
test
jl
test
xchg
sarl
pop
inc
arpl
cmp
outsb
in
rol
popf
out
insb
and
adc
inc
insl
mov
lahf
aaa
dec
add
je
adc
mov
imulb
jmp
push
pop
dec
leave
mov
das
mov
add
lods
insl
sahf
jns
jg
xchg
addr16
in
rcrb
cwtl
push
lods
dec
push
pop
xlat
or
stos
sbb
mov
movsb
xor
adc
xor
jecxz
mov
cltd
int3
dec
push
mov
fildll
mov
sub
mov
adc
mov
pop
stos
in
jo
arpl
xchg
icebp
out
pop
decb
clc
push
nop
test
or
sub
pop
add
inc
xor
scas
jecxz
sub
jle
inc
sbb
jg
pushf
xor
xchg
pushf
aam
stos
test
sub
mov
xchg
ja
sbb
pop
arpl
mov
data16
pop
mov
jne
mov
stos
dec
pop
aam
mov
xor
lea
sbb
js
lahf
or
cmp
mov
lret
sbb
dec
js
dec
fadd
fnstsw
insb
ret
adc
sub
sbb
adc
push
inc
xor
cmc
jmp
ss
push
lea
adc
or
push
ljmp
cli
dec
outsl
xor
xlat
xorb
pop
jo
addr16
out
dec
jecxz
call
mov
mov
pop
mov
mov
in
lcall
lret
pop
loopne
xchg
test
xchg
lock
sbb
movsb
pop
outsb
xchg
cmpsb
adc
shrb
xchg
std
aad
sub
ficomps
sbb
inc
fcmove
enter
int3
ret
sub
push
aaa
loope
bound
inc
jae
jmp
ja
jbe
call
xchg
jns
pop
push
jbe
pop
inc
aad
test
xchg
fnstsw
imul
sbb
test
call
and
jb
xlat
inc
iret
inc
adcl
insb
push
cs
daa
mov
push
loop
or
ret
rcrb
jno
push
xor
adc
iret
adc
inc
lahf
and
mov
movl
jg
dec
push
cmp
imul
lods
sahf
nop
js
and
mov
es
cmp
imul
in
aaa
jmp
gs
aad
out
sub
inc
and
or
inc
jno
or
mov
sti
xchg
ja
xor
sbb
les
pop
sub
movsb
inc
fwait
shll
xor
jmp
std
out
imul
insl
fnstcw
mov
cmp
inc
push
aaa
pop
test
push
push
aaa
in
arpl
std
push
imul
dec
xor
dec
addl
cmp
es
cli
or
cld
cmpsb
into
dec
cmpsb
icebp
mov
xor
pop
pop
les
adc
jg
inc
push
movb
jg
pushl
mov
fidivrl
repnz
cmp
pminub
adc
data16
push
sbbl
jg
fwait
scas
sbbb
movsb
push
imul
int
das
fs
jae
pushl
cs
movsl
fs
insb
insl
into
cs
aam
stc
ljmp
or
adc
movsb
out
adc
mov
movsl
lsl
dec
bound
sbb
lods
or
sbb
mov
outsb
push
pop
and
mov
mov
andb
sbb
scas
or
jb
jmp
gs
dec
insb
mov
jmp
push
repnz
es
mov
xchg
or
cmp
mov
dec
jnp
or
adc
xlat
loopne
sbb
daa
pop
cmp
and
mov
nop
and
dec
rolb
mov
fildl
or
popf
mov
push
je
xor
pop
mov
loopne
cmpsl
ret
push
mov
mov
inc
fildl
test
sub
daa
fiadds
push
or
sti
push
mov
jp
loop,pn
cmpsl
sub
xor
inc
data16
shr
data16
mov
daa
cmp
ret
cltd
into
cmc
sub
imul
int3
cmp
lds
and
je
mov
int
bound
mov
adc
pop
add
push
es
cmp
mov
sahf
int3
dec
pop
xor
nop
jle
adc
jb
or
jmp
xor
pop
insl
mov
xchg
sbb
push
insb
mov
mov
jns
sub
es
jp
int
sub
mov
lcall
fwait
sbb
dec
dec
cmp
cmc
jmp
data16
out
insb
or
jl
jmp
test
ror
dec
add
cmpsl
lahf
ret
xlat
imul
dec
hlt
mov
sub
movsb
dec
push
mov
ret
ljmp
cmc
add
psllw
dec
xchg
mov
cmp
pop
mov
cmpb
push
jae
xchg
mov
add
repz
cmp
cmpl
pop
mov
lret
mov
or
ror
repz
mov
inc
adc
movsb
sub
lods
rcrb
add
xchg
jns
and
dec
scas
ret
xchg
sub
pop
jp
cltd
pop
pop
push
ficomps
pop
scas
xor
ss
xchg
out
into
les
test
nop
push
dec
ffree
jl
jp
dec
or
inc
ret
ficoms
inc
pop
lret
jb
shll
pusha
push
xchg
adc
daa
adc
dec
add
cwtl
nop
cmp
pop
loope
cmpsl
sub
adc
mov
ret
fnstcw
xchg
lret
imul
inc
cld
lea
lea
pop
jno
xlat
mov
pop
popa
jecxz
and
mov
mov
lahf
mov
lock
mov
iret
xor
adc
ret
in
std
inc
add
insb
aas
ficompl
or
sbb
aaa
lock
sub
shrl
outsb
and
and
aaa
mov
sub
out
pop
dec
ljmp
arpl
cltd
pop
popf
xlat
add
in
jb
and
mov
push
jmp
insl
xchg
xor
rclb
ds
in
out
jge
or
pmulhw
pop
stc
andb
push
xchg
inc
das
test
push
call
xchg
xor
pusha
aas
out
outsl
adc
add
dec
jle
pop
cmp
sahf
mov
sbb
push
mov
or
dec
rolb
push
imul
sarl
les
jg
gs
jns
aas
pop
mov
mov
nop
xlat
addr16
push
out
popa
xchg
int
outsb
into
xchg
aas
mov
pop
xor
sbbb
sbb
jp
adc
daa
and
sbb
sbb
jnp
cmp
fadds
or
shlb
arpl
frstor
jmp
add
push
xchg
int3
lea
dec
cmp
mov
aam
movsl
bound
ret
push
clc
and
sbb
xor
ds
xchg
outsb
stos
das
out
mov
mov
lret
les
adc
push
pop
cmp
dec
sahf
jae
adc
mov
sahf
xchg
xor
push
adc
mov
jmp
add
mov
movsb
outsl
dec
and
adc
aas
add
adc
sub
or
ss
outsb
out
ret
rcrb
dec
shll
test
test
jne
std
sub
sbb
fnstenv
jo
xchg
loope
out
aad
fcomi
and
push
xchg
push
jb
xchg
jg
stc
movsb
lcall
sbb
inc
bound
or
push
jmp
mov
mov
shl
mov
mov
jne
push
movb
shlb
mov
jae
inc
or
jle
in
out
incl
and
push
push
fistpl
sub
ret
repnz
lcall
shll
lret
out
mov
dec
popf
push
shrb
dec
xchg
xchg
addr16
test
pop
xchg
mov
pop
into
and
pop
mov
out
sub
daa
or
rcl
mov
adc
sbb
scas
inc
xor
jnp
xchg
call
test
inc
out
outsb
into
sbb
add
mov
xor
andl
fdivl
mov
mov
add
add
add
repz
imul
add
mov
mov
add
push
addb
mov
iret
lods
outsl
and
or
test
outsb
or
loopne
mov
clc
lea
jmp
adc
pop
lahf
pop
sti
push
test
pop
gs
pop
in
rorb
push
inc
adc
shr
push
fwait
xor
sub
and
sub
sub
movsb
adc
or
mov
addl
cltd
test
jbe
addb
sub
adc
pushl
mov
lods
movsl
out
inc
ja,pt
sub
xor
sbb
aam
icebp
repz
and
push
inc
insl
sbb
jae
js
div
popf
jbe
push
lcall
out
in
popf
add
push
push
leave
and
in
or
test
pushf
inc
and
fnstsw
scas
call
test
cmpxchg
das
repz
and
pop
add
out
aas
ss
sbb
dec
mov
fdivrl
ret
xchg
pop
mov
enter
push
or
pop
mov
fisttps
inc
jbe
subl
sbb
dec
dec
push
ds
pop
daa
or
inc
push
sbb
inc
shl
insb
dec
cmp
pop
dec
jne
xor
adc
sbb
add
lock
mov
add
enter
call
ss
clc
mov
cmp
nop
lds
out
out
je
stos
mov
out
sti
out
xor
add
jnp
clc
outsb
popa
sbb
and
jns
jb
xorb
mov
negb
adc
dec
aam
pop
push
sbb
and
pop
std
insl
push
icebp
sub
test
jbe
jne
out
outsb
imul
rorl
rcrl
idivb
int3
and
sbb
xchg
or
addr16
inc
lods
fcomi
adcl
add
sti
addr16
dec
dec
lahf
push
mov
adc
jp
setl
and
add
test
neg
ret
inc
mov
jmp
rcrl
mov
stos
inc
push
xor
push
add
inc
imul
hlt
inc
arpl
adc
add
bound
bound
jmp
jge
or
and
or
mov
test
sub
notb
mov
pop
cmp
sti
addr16
loope
popa
jbe
int
mov
faddl
inc
xchg
movsl
fisttpl
call
test
fisubs
enter
dec
mov
sbb
push
mov
pop
cmp
and
lods
mov
push
xchg
sbb
outsb
or
mov
addl
jnp
in
call
rcrl
pop
rclb
adc
std
pop
in
out
fwait
int
push
add
inc
enter
cmp
xchg
mov
rcr
daa
enter
jb
sarl
aaa
test
in
add
cmp
xchg
divl
sub
xchg
test
rol
rolb
int3
je
jo
cmp
lret
loopne
or
fsubl
int
pop
out
push
ljmp
mov
adc
mov
shll
std
mov
push
rcll
xchg
lods
jecxz
xor
mov
insl
sbb
int3
xor
jmp
cmc
insl
aam
movntps
pop
push
movsb
stc
mov
and
iret
adc
scas
std
adc
cmp
jnp
fldenv
fwait
sbb
mov
xor
arpl
sbb
imul
pushf
mov
ss
jmp
shlb
pop
jne
scas
add
mov
xchg
jle
popf
jmp
nop
sub
mulb
xchg
pop
mov
ficoml
dec
scas
shr
fists
out
mov
mov
out
dec
add
add
mov
jmp
leave
outsb
lods
and
mov
sti
es
cwtl
or
cmpsb
loopne
dec
pop
dec
adc
xor
sti
xchg
dec
adc
adc
int3
faddl
fisubs
add
push
xchg
fnstsw
push
cli
incb
arpl
inc
movsb
les
fmuls
pop
xchg
mov
and
mov
out
mov
dec
in
in
or
and
jb
repnz
pop
ret
out
push
mov
pop
mov
xlat
lock
aaa
and
push
gs
jne
jo
fwait
inc
inc
add
xorl
or
jg
and
jg
mov
ficompl
enter
sbb
mov
cmp
pop
ret
cmp
xchg
push
jb
xchg
rclb
dec
mov
enter
pop
lods
movsl
xor
and
insb
shl
adc
push
call
fs
mov
fldcw
lret
pop
push
inc
popf
test
pop
nop
test
insb
test
gs
incl
rcll
cmpsl
mov
xchg
push
call
pop
xchg
jmp
jae
jl
sub
lcall
iret
fsubs
andl
push
sub
xchg
test
mov
sub
push
ja
pop
adc
pop
repz
fldt
and
push
daa
sbb
cli
and
subb
push
int
dec
lock
idivl
xchg
in
notb
dec
jp
cld
hlt
jge
outsb
xchg
and
fidivrl
std
movlps
adc
sbb
repnz
or
pop
enter
sub
mov
and
js
jle
or
adc
lret
cltd
stos
xor
jno
fistl
sbb
out
xor
scas
mov
ficompl
adc
movsl
data16
mov
mov
inc
lds
mov
out
xchg
jne
jns
mov
push
int3
fdivl
mov
or
cmp
addr16
cmp
in
loop
aaa
sub
sub
add
push
sahf
lods
aas
into
push
shll
dec
mov
test
xor
or
adc
mov
cli
push
cltd
pop
call
pop
mov
jbe
cmp
daa
orb
repnz
jo
adc
fidivrs
push
repz
add
pop
aam
cwtl
ljmp
mov
imul
mov
mov
cli
pop
cmpsb
xor
dec
xor
iret
insb
enter
flds
jnp
or
lds
dec
int
addb
lret
shrl
js
hlt
lahf
jbe
cs
mov
lods
add
gs
fisubs
dec
daa
fstps
jg
mov
push
or
repz
outsb
popa
clc
das
ss
lds
pop
mov
mov
in
enter
xor
xchg
into
dec
adc
xchg
movsb
inc
or
mov
out
daa
pop
xor
sbb
pop
xchg
loope
xorl
jbe
jl
gs
pop
jp
mov
roll
pop
and
jge
int
pop
out
mov
cmp
pushf
out
add
dec
push
jmp
out
dec
loope
popf
sub
shrl
lcall
inc
push
sbb
int
int3
push
inc
mov
adc
pop
dec
loope
ds
rorb
cld
or
popa
call
jp
and
mov
inc
enter
call
roll
or
ds
xor
push
fldcw
ficoml
notl
repnz
pushf
dec
sti
mov
in
xchg
out
jb
lods
popf
mov
hlt
arpl
pop
jg
mov
aad
inc
stos
cmpsb
roll
in
xor
push
mov
adc
xchg
mov
or
cmp
cmpsl
in
out
sti
and
and
enter
loopne
popf
pop
mov
dec
pop
out
dec
negl
dec
xchg
aas
mov
es
xor
test
add
mov
mov
add
inc
pop
mov
inc
shll
or
es
xchg
dec
aaa
iret
push
mov
imul
or
in
sbb
ljmp
clc
mov
xlat
inc
xlat
shll
and
lcall
sarb
push
fsubr
rorl
xlat
int3
and
stc
mov
jl
std
dec
inc
and
les
mov
sbb
fnstsw
or
push
outsb
jle
js
sbb
and
inc
mov
clc
lcall
xor
xchg
mov
mov
and
shl
popf
dec
and
and
mov
movb
pmaxsw
loopne
inc
movsb
fcompl
inc
popl
faddl
pop
nop
jno
daa
sub
pushl
mov
mov
notl
outsb
mov
xchg
cmc
jbe
push
call
mov
or
in
pop
jns
jae
into
dec
test
cmpsl
daa
mov
mov
fildll
je
andl
xchg
mov
jle
add
js
outsl
out
or
lahf
mov
scas
stos
mov
jne
in
cmp
ret
call
jnp
adc
fs
or
sahf
fdivr
cltd
pop
jl
add
cs
sbb
into
sbb
xchg
mov
xor
push
out
in
cmp
lret
jo
mov
pop
pushf
mov
xchg
add
dec
lods
or
mov
add
and
insl
mov
push
ja
adc
and
jnp
int3
shll
cli
add
cld
inc
sbb
cmc
xchg
popa
jmp
test
shlb
out
push
subb
xchg
ficomps
push
imul
jo
inc
xchg
dec
xorl
rol
xchg
loope
push
cltd
fdiv
fadd
out
mov
stc
mov
aaa
insb
movsb
mov
cmp
pusha
lretw
jo
sbb
mov
cmp
in
ja
adc
push
int
add
cmp
xchg
push
fcompl
mov
xchg
cs
js
xchg
cmpsb
push
mov
enter
pop
test
push
scas
mov
push
loope
xor
mov
lds
lcall
daa
inc
jl
pop
inc
sub
sub
sbb
mov
jo
loopne
js
js
cs
push
popa
iret
adc
iret
push
mov
cmp
jmp
inc
xor
je
mov
stc
push
adc
sub
fimull
cmp
mov
dec
inc
lods
je
ss
push
outsl
pop
mov
and
mov
xor
inc
gs
call
and
fs
addl
xorl
roll
out
mov
push
jmp
xchg
insl
push
fwait
push
mov
aam
push
add
fcompl
jbe
pushaw
inc
psllq
jecxz
sbb
jp
testb
lea
cmc
lahf
lds
sub
cmpsl
outsw
mov
inc
jno
mov
mov
xchg
cld
nop
jno
addr16
pop
mov
lea
out
cld
cmpsl
pop
idivl
ljmp
inc
cmpsl
in
push
jns
push
sub
mov
inc
mov
jb
subb
jp
out
movsb
xor
and
and
cmpsb
dec
sub
push
nop
sub
inc
mov
test
pop
dec
sub
leave
dec
scas
aaa
fs
mov
icebp
cli
daa
pusha
pop
aaa
push
mov
ds
mov
repnz
mov
faddl
push
test
repz
aad
mov
mov
insb
jp
fisttpll
outsb
addr16
roll
or
jg
adc
dec
lret
pop
aas
mov
inc
or
aas
lahf
lods
jnp
jge
cmp
stos
pop
adc
xchg
mov
xor
cmp
lret
cmp
hlt
stos
repz
fstpl
mov
aaa
ret
mov
faddl
sar
jg
stc
mov
pusha
inc
daa
es
jb
fists
movb
aad
test
enter
lret
jle
mov
ja
cmpsl
mov
iret
rcrl
dec
ljmp
inc
jnp
js
mov
repz
arpl
push
lea
mov
shl
dec
mov
mov
and
or
mov
out
mov
and
pusha
mov
add
fdiv
inc
neg
int
rcrb
pop
add
mov
mov
imull
cmpsb
ds
js
jbe
lock
daa
mov
iret
cmpsb
mov
mov
scas
add
jg
adc
inc
hlt
jnp
icebp
dec
frstor
push
cmpsl
rcrl
in
inc
pop
cmp
cmp
mov
lods
fadds
stos
inc
sub
cmp
mov
rclb
xchg
dec
xchg
pop
ljmp
int
push
push
fwait
adc
bound
aaa
add
movsl
data16
daa
out
loope
lock
xchg
mov
pop
xchg
daa
outsb
stos
mov
stos
push
or
sbbl
and
mov
lret
aad
mov
nop
jb
mov
mov
cs
mov
nop
sub
imul
push
dec
sub
dec
cltd
fucomip
ljmp
xor
cld
fildll
arpl
stc
test
rolb
mov
sbb
dec
ds
stos
and
dec
test
clc
pusha
movsl
cmp
jbe
and
lret
mov
negb
xor
xor
sub
cmp
jae
movntps
sbb
fsubl
pop
fs
mov
out
or
cwtl
jbe
sub
xor
das
es
add
daa
cmp
push
mov
lret
pop
cmp
jge
inc
inc
xchg
jmp
cmp
add
sbb
jp
push
or
loopne
dec
shrl
and
mov
test
das
mov
adc
push
pop
or
faddl
test
arpl
loop
xchg
call
jb
cs
sbb
fistps
jmp
sarb
dec
dec
xchg
cli
mov
into
and
outsl
rolw
jb
leave
icebp
jge
fs
cmp
outsb
push
mov
jbe
mov
or
jb
orl
cmp
cmp
lcall
push
es
or
adc
mov
popf
mov
xchg
dec
cmp
jg
xor
add
pop
fmuls
pop
add
dec
push
sti
rorb
mov
nop
dec
jne
adc
dec
add
adcb
lahf
mov
push
loop
adcl
scas
sbb
mov
push
mov
decl
sub
lods
jg
es
mov
aas
jbe
sti
enter
ljmp
adc
lcall
enter
jmp
jo
ret
sbb
cmpsl
pop
jns
jb
add
out
ja
dec
add
lods
ja
push
iret
pop
adc
cld
fwait
je
cli
xchg
inc
mov
decl
subb
rolb
hlt
sub
push
lcall
loop
testb
push
jns
and
imul
rcl
dec
add
mov
pop
mov
jae
cli
sub
or
xor
mov
mov
mov
or
and
mov
loop
test
xchg
xchg
xor
sar
jmp
das
dec
in
insl
lods
sbb
rcrl
aad
stos
in
insb
enter
mov
movsb
cmp
add
out
dec
and
add
push
sbb
lcall
popa
xchg
lret
mov
adc
jae
out
jmp
or
push
aaa
jg
jge
pop
add
dec
sub
ja
insl
and
lcall
aas
push
sbb
ljmp
xor
pop
jae
sub
mov
lea
push
ficoml
jmp
cmp
rolb
inc
jne
adc
es
insb
jmp
inc
imul
imul
dec
andb
fsts
fnsave
roll
pop
clc
outsb
xchg
mov
or
das
mov
jmp
out
outsl
adc
lds
push
jecxz
in
jno
cmc
inc
mov
in
notb
xor
mov
movsl
testl
or
sbb
imul
repz
jno
rclb
push
push
nop
dec
loop
leave
movsl
mov
inc
jo
sub
call
je
xchg
fcompl
sbb
or
ficompl
jo
cmp
loope
adcb
xchg
pop
dec
lock
aad
insl
fstl
rcll
jge
rcr
jne
enter
pop
es
repnz
fbld
shl
jle
xor
in
jnp
filds
in
imull
sahf
pop
fmuls
lcall
int
mov
mov
xor
jbe
outsl
or
test
test
mov
fwait
add
outsl
push
je
or
decl
scas
xchg
lods
pop
mov
add
aam
mov
jae
popf
lret
mov
add
mov
shl
sbb
and
xchg
int3
and
mov
in
stc
or
fucomp
testb
daa
xlat
sahf
nop
sbb
rorb
enter
aam
cwtl
hlt
out
add
xorb
mov
mov
icebp
dec
or
mov
ret
hlt
insb
xchg
push
xchg
aad
in
insl
insl
lea
push
sbb
rcrl
scas
and
hlt
cmc
mov
jle
mov
and
mov
and
neg
sbb
mov
ljmp
cmp
into
xor
icebp
out
mov
pop
mov
push
out
dec
orb
xlat
xchg
ss
sub
cmp
insb
inc
inc
pop
adc
jecxz
jno
mov
jne
ret
outsb
imul
and
int3
mov
lret
mov
push
jmp
mov
mov
cli
push
outsb
pop
mov
jmp
mov
mov
dec
jb
mov
sbb
adc
loopne
pop
jae
iret
mov
pop
cmpb
inc
sbb
mov
adc
out
mov
int3
sub
inc
iret
fwait
lcall
pop
lcall
or
add
shll
inc
fsubrl
fisubrl
sub
ljmp
mov
cli
push
or
add
loope
gs
fimull
adc
stos
or
pop
je
lret
les
dec
cmc
sub
into
add
mov
mov
cmp
lods
fildll
inc
xor
dec
jnp
cmp
mov
repnz
mov
push
inc
sbb
inc
insb
hlt
pop
push
lods
dec
push
roll
jno
pop
sbb
jns
push
xor
out
je
imul
pop
add
dec
sahf
lds
jno
pop
xchg
jle
mov
cmp
inc
fs
adc
scas
mov
mov
xchg
jle,pn
insl
or
sub
ss
movaps
pop
inc
das
push
or
das
testl
faddl
cmp
cmp
inc
push
push
dec
arpl
mov
test
hlt
push
loope
and
inc
mov
int
ret
adc
fisttps
leave
outsl
mov
push
sub
ret
popa
sbb
mov
and
xor
clc
jp
xor
pop
sbb
xchg
pusha
sbb
pop
sub
arpl
fwait
cmc
push
cmp
es
xchg
cltd
xchg
push
mov
je
push
sbb
cs
push
jno
fwait
jl
mov
loope
es
adc
or
inc
shlb
cmp
xchg
cltd
pusha
ficoml
fwait
sbb
mov
stos
add
jns
mov
rolb
add
or
mov
xchg
loopne
lock
push
xchg
or
into
cwtl
fists
icebp
arpl
vphaddubw
insb
sbb
lods
dec
push
pushf
lea
imul
mov
inc
sub
and
shlb
nop
movsb
xchg
cmpsl
xchg
shll
lret
pop
push
rorb
loop
push
pop
sbb
lret
fcomps
pop
and
cmp
insl
and
fists
adc
jno
daa
test
xchg
xor
arpl
mov
mov
cwtl
add
push
jecxz
lcall
xlat
and
rcrb
mov
mov
dec
cmp
in
sub
pop
lods
push
mov
mov
xlat
cmp
in
sbb
cmp
clc
std
xchg
sub
push
subb
or
adc
popa
std
push
rol
adc
lea
inc
fisttps
inc
mov
pop
cmp
cwtl
inc
mov
into
jae
movsb
mov
add
lret
push
xor
sahf
sub
push
pop
adc
adc
mov
or
ret
subl
or
mov
mov
dec
or
sbb
aam
sub
dec
std
std
icebp
push
cltd
mov
pushf
fldl
lcall
xchg
lcall
jecxz
push
sbb
inc
mov
or
xchg
mov
mov
pop
mov
fimull
lods
mov
xchg
out
cwtl
jl
lods
hlt
add
test
push
xlat
adc
xor
out
adc
fidivl
psubusb
mov
mov
dec
fdecstp
or
test
enter
sbb
lods
push
mov
dec
aaa
jno
das
je
sub
fbld
inc
inc
lcall
mov
pop
stos
sbbl
fstps
xchg
cmc
fwait
add
ss
jae
xchg
addr16
mov
jbe
sbb
push
icebp
pushf
jns
mov
pop
xchg
jnp
shlb
jbe
jp
xchg
and
fisubs
add
dec
add
push
push
inc
bound
xor
mov
mov
in
or
xchg
mov
jns
dec
fdivl
sub
dec
addr16
mov
and
sub
adc
lcall
push
push
push
push
in
movsl
push
add
mov
jne
lods
cmp
mov
int
shlb
or
out
rol
test
jnp
in
sti
lods
aaa
mov
test
adc
xchg
mov
hlt
sti
push
stos
or
dec
insb
xchg
test
stos
xchg
pop
popf
xor
dec
ljmp
or
andl
jecxz
sbb
ja
jmp
mov
loop
imull
jnp
and
inc
adc
xchg
jp
mov
or
push
pop
mov
test
mov
push
push
sbb
xlat
mov
adc
push
pop
or
movsb
or
push
mov
decl
xor
sbb
stc
dec
pop
jge
xor
call
dec
cli
mov
and
or
scas
add
jecxz
mov
sub
enter
incl
adc
cld
jnp
repnz
xchg
cmpb
mov
jb
mov
mov
mov
xlat
add
insb
lods
xlat
add
xor
and
ljmp
mov
hlt
jo
push
pop
mov
dec
sarl
mov
cmp
loopne
sbb
daa
mov
cmc
int
and
adc
mov
hlt
xchg
jmp
mov
rorl
lret
les
es
xor
lret
scas
jne
repnz
mov
sub
xchg
sub
fcoms
cmp
in
push
call
nop
add
test
shrb
mov
pop
dec
test
stc
popa
jge
inc
lret
sbb
loope
cmpsb
xchg
rorb
enter
jp
or
stc
xchg
mov
jecxz
xlat
sub
sbb
sbb
dec
popa
inc
jg
test
rcll
xor
jae
or
fisttps
inc
jns
sarl
stos
mov
xchg
fbld
mov
push
pop
adc
test
adc
jp
hlt
scas
sbb
lret
imul
and
das
scas
jmp
cmpl
inc
pop
jne
mov
push
mov
adc
icebp
sub
xchg
add
in
loope
inc
incb
pop
test
int
ss
fiaddl
mov
sbb
aad
pusha
ret
repnz
inc
in
push
mov
out
leave
sbb
aas
shr
insl
and
mov
cmpsl
xchg
cmp
sub
in
or
daa
sbb
dec
push
push
stos
stos
mov
jle
les
inc
aam
sub
repz
inc
mov
xchg
jb
push
rclb
jge
mov
cli
xchg
xchg
scas
jnp
add
jb
pop
jne
aam
vandpd
push
mov
lods
lret
xchg
lods
scas
push
mov
sub
cmpsl
xchg
or
fstpt
sbb
add
mov
or
aas
pop
sub
pushf
arpl
inc
add
lds
pop
adc
mov
loop
iret
fwait
stos
insl
fs
dec
mov
pop
jecxz
loopne
nop
xchg
mov
lret
sbb
into
addl
pop
jmp
cmp
ret
out
mov
insl
xor
das
in
adc
adc
jp
fistl
add
clc
mov
xor
cmp
xchg
sti
adc
cs
dec
pushf
in
jae
xchg
test
dec
gs
mov
imul
dec
add
dec
outsl
mov
sub
cmpsl
or
mov
pop
cs
xor
lret
bound
sti
push
rclb
aaa
cmpsl
adc
fstpl
xchg
ljmp
mov
push
js
loopne
test
rcrl
pushf
outsl
jb
add
mov
cmpsb
and
add
xorl
sub
fistps
cmpsb
cmp
or
cmp
mov
enter
gs
adc
push
scas
mov
add
xor
xchg
fldcw
fdivrs
subl
mov
out
add
dec
aam
nop
push
inc
jne
fmuls
push
mov
inc
les
sub
dec
movl
std
xor
mov
mov
sti
cli
into
dec
mov
or
mov
popf
pop
cmpsl
data16
pop
pop
scas
or
addr16
or
mov
or
sub
lods
pop
adc
vpperm
mov
xchg
int
jno
int
mov
out
jae
mov
lds
cli
test
int3
jb
notl
cmp
movsl
cli
mov
push
mov
clc
or
cltd
and
mov
xor
mov
aas
mov
xchg
dec
jno
mov
clc
clc
stc
outsl
call
pop
adc
xor
xlat
or
fbld
lods
inc
mov
sti
aaa
lret
mov
ficomps
mov
cmp
out
fldt
mov
repz
mov
cmpsb
imul
xor
arpl
in
add
pop
aas
repnz
in
inc
stc
xchg
mov
mull
aas
shlb
loop
rorl
jae
or
mov
shrl
loop
jnp
jge
dec
in
enter
js
mov
sub
fwait
test
rorb
in
pop
insl
sahf
lret
or
popf
icebp
pop
inc
dec
dec
jecxz
std
or
sbb
sarb
jle
fdivr
lods
adc
idivl
pop
repnz
in
fxam
mov
sub
rcrl
into
fisubrs
stos
cmpsb
xor
mov
loopne
sbb
xchg
push
scas
lahf
sbb
divb
jl
imul
clc
fcoms
popa
incl
cltd
inc
shr
fisubrs
mov
nop
mov
in
hlt
mov
ds
jle
or
lock
add
mov
inc
jg
mov
mov
addr16
sub
aad
daa
rcr
inc
push
imul
sub
lods
sbbl
shlb
test
iret
add
jnp
pop
push
jg
inc
jl
sbb
adc
fadd
add
sub
roll
or
push
movsb
jmp
mov
pop
mov
jle
pop
cmp
ret
xlat
in
ret
push
pop
out
int3
and
jecxz
push
push
insl
scas
push
mov
cmp
jns
rcll
pusha
jae
stc
push
lahf
les
stos
popf
xlat
jnp
add
out
dec
outsl
adc
loop
iret
mov
and
adc
dec
sbb
int3
cmp
mov
loop
add
mov
sub
cmp
mov
pminsw
aam
adc
cmp
int3
test
mov
movsl
ret
pop
push
test
ficoml
sub
ror
out
cmpsl
push
fwait
mov
jo
cmpsl
je
movsb
out
cmpsl
and
ljmp
and
pop
inc
xorb
dec
div
dec
mov
mov
in
xchg
sub
pop
add
xor
dec
mov
cmpsb
xchg
xchg
in
es
xor
imul
xchg
daa
xor
fldcw
mov
mov
fcmove
jne
insl
push
mov
jno
xchg
push
outsl
pushf
lea
cmpsb
jge
lea
mov
cli
adc
ret
fmull
dec
mov
in
push
xor
xlat
sub
shlb
dec
inc
add
dec
push
fldl
mov
sub
xchg
cmp
and
mov
xor
or
dec
push
idivl
and
jo
movsb
and
add
repz
gs
insl
stos
xchg
movsb
aaa
cs
adc
fbstp
mov
in
lds
notl
loope
xor
push
xor
jmp
test
jg
les
xchg
rcll
jecxz
xchg
es
repz
sub
pop
ret
arpl
mov
fildl
mov
mov
sub
pop
out
js
jnp
dec
movsl
mov
icebp
sub
push
cs
and
mov
popf
push
into
inc
test
dec
test
dec
fildl
xor
inc
iret
sbb
mov
fdivrp
push
test
es
movsl
ds
movb
push
ss
pop
mov
push
mov
push
mov
push
ds
inc
enter
and
mov
sahf
bound
adc
xchg
jnp,pt
dec
pop
insb
stc
adc
in
dec
mov
bound
xor
pop
mov
dec
pop
or
scas
test
aad
or
xor
testl
inc
jl
xorb
jmp
sub
jo
into
mov
jns
mov
and
mov
adc
cld
sub
mov
cmp
dec
fs
push
outsl
pop
add
or
push
aaa
lcall
imul
in
add
adc
xchg
cs
movsb
inc
ss
jnp
cmp
mov
xor
push
mull
fistpl
push
cwtl
fstpt
test
pusha
xlat
icebp
fistl
jbe
popf
jae
imul
shlb
jne
mov
daa
fimull
movsl
imul
jo
in
xchg
fisubrs
inc
adcb
sbb
mov
das
out
fsubrl
mov
and
push
lds
inc
das
shrb
clc
inc
movsl
mov
outsb
sub
loopne
push
push
pop
addr16
cmc
shrb
or
scas
jge
mov
pop
jmp
jecxz
iret
and
nop
lcall
jl
mov
mov
jecxz
inc
dec
mov
mov
xor
xchg
or
xor
adc
aas
es
xchg
shll
int3
mov
xchg
add
bound
jnp
sbb
arpl
ss
sbb
adc
repnz
sub
or
add
sbb
add
cmp
fbstp
repnz
mov
xchg
cmp
insb
and
push
sti
pushf
jnp
cmpsl
push
cld
movsl
jmp
lret
pusha
ds
inc
adc
jp
sub
mov
cmp
out
and
pop
aas
and
and
jg
aaa
lods
lret
sahf
xor
hlt
arpl
or
xor
mov
test
xchg
cmp
jbe
lock
jmp
addr16
cli
fists
je
test
jnp
push
pop
push
xchg
sub
mov
mov
push
mov
stos
call
adc
rol
divb
jb
lds
or
push
rclb
test
je
imul
ficoms
inc
jnp
xchg
push
jg
stos
in
loopne
dec
sbb
xor
fs
lahf
lret
leave
push
dec
mov
andb
dec
call
cmp
leave
mov
sahf
push
cld
xor
fildl
sub
pop
ret
dec
callw
lcall
push
cmp
add
mov
mov
test
mov
mov
enter
leave
jecxz
push
adc
mov
or
popa
jbe
nop
or
daa
rorb
add
adc
mov
test
or
das
into
sbb
push
jmp
sub
rcrb
xor
push
push
jecxz
movsl
pop
clc
jp
mov
mov
data16
mov
stos
nop
fistps
and
call
mov
add
sbb
repz
cmpl
mov
aas
mov
lea
xor
movsl
jo
sub
adcl
test
fbstp
sub
ljmp
or
or
mov
pop
cmp
mov
mov
popa
daa
add
inc
mov
loope
xor
fwait
sub
dec
aam
cmp
test
xor
and
xor
add
fs
xchg
xor
test
lock
icebp
and
dec
inc
daa
cs
pushaw
sahf
jle
or
push
adc
lcall
in
push
int3
sbb
loopne
push
les
mov
mov
xchg
push
in
movsl
ret
repnz
mov
pop
fildl
mov
insb
and
cmpsl
inc
je
and
jb
xchg
nop
and
push
pop
aas
mov
mov
mov
cltd
inc
movsb
test
repnz
xchg
push
inc
pop
out
xchg
pushl
test
jo
fs
xor
push
mov
add
fiaddl
pushl
push
test
pop
stos
movsb
loop
pop
aaa
xchg
cmp
repnz
pop
fmull
push
or
push
rcr
mov
xchg
aam
mov
sbb
sahf
mov
sbbb
aad
pushl
lods
ss
xchg
outsb
mov
mov
into
andb
mov
imul
mov
ds
pop
inc
ja
mov
ret
adc
dec
xlat
shll
and
or
outsl
ljmp
push
pop
addr16
stc
scas
push
jbe
clc
add
aas
mov
pop
test
mov
mov
lds
push
out
mov
push
sahf
dec
pop
cs
imul
call
daa
mov
pop
jecxz
imul
push
fnstcw
lods
xor
jecxz
and
test
adc
xchg
ret
str
leavew
femms
and
adc
push
rclb
jnp
sahf
in
jbe
sbb
arpl
inc
fldt
aad
lcall
xor
ret
mov
xlat
cmp
xor
or
data16
xor
incb
push
pusha
dec
lret
pop
arpl
mov
cltd
or
out
int
mov
mov
cmp
repz
jne
sbbb
cmpsb
rorl
loope
into
sti
lret
xor
rorb
inc
inc
xchg
push
lds
in
arpl
cmp
enter
lret
or
enter
or
and
outsb
in
std
mov
xchg
push
pusha
call
loope
mov
rcr
sbb
add
add
repnz
loop
insb
push
loopne
inc
pop
jbe
pop
adc
jbe
and
loope
mov
movsb
mov
inc
inc
aad
enter
loope
dec
sbb
jmp
sahf
cmpl
into
imul
mov
sarl
mov
and
mov
xchg
cmp
cmp
dec
xchg
mov
adc
scas
outsl
push
cmpsb
cmp
movsl
mov
cltd
or
sbb
dec
imul
or
add
not
pop
sub
pop
in
add
rcrl
xchg
push
push
jecxz
push
loope
xor
movsl
mov
ljmp
sub
pop
fsubrl
add
push
pop
mov
popl
xor
adc
fisubl
out
xor
fldcw
mov
dec
mov
sub
xor
or
cmp
faddp
shl
push
xor
xchg
call
mov
rolb
testl
in
jp
paddusw
xor
mov
rolb
testl
pop
stos
fdivl
add
rorl
sbb
xor
fs
mov
xchg
sti
cmpb
dec
repnz
fcmovne
sbb
sub
aam
mov
jo
jb
shlb
movsl
std
dec
jo
std
sbb
and
lea
adc
repnz
sarb
dec
push
in
push
stos
into
pop
into
and
inc
sbb
dec
adc
sbbb
dec
cmp
pop
pop
test
sub
push
stc
in
cmp
or
mov
pop
adc
or
imulb
rcrb
bound
push
repz
sbb
add
dec
test
shll
lret
out
rolb
lock
ss
adc
sbb
popa
mov
sbb
jne
xlat
in
jmp
sub
out
sub
cltd
dec
mov
repnz
mov
push
mov
loope
push
inc
nop
das
mov
in
clc
pop
aam
sbb
adc
or
std
andb
inc
fsubrl
leave
pop
mov
cmc
fs
sub
sbb
aaa
xchg
clc
les
cltd
jle
lock
pop
sbb
jp
push
mov
mov
sbb
push
fs
and
popf
imul
clc
adc
pop
out
sarb
test
shrl
push
push
xchg
sub
lock
inc
repnz
aaa
cmp
ja
mov
rcrb
pop
movsl
xor
sbb
out
scas
cli
mov
adc
fucomi
xchg
mov
pop
mov
jp
inc
cwtl
xor
in
ret
loop
adc
in
enter
jns
test
fwait
jns
lods
outsb
aas
push
jmp
jns
adc
mov
add
in
das
and
clc
mov
data16
ficompl
mov
daa
rclb
push
mov
fistps
pop
mov
add
sub
fists
stc
fidivrs
sbb
inc
add
pop
jnp
testb
loopne
jne
jns
jg
enter
ss
jle
cmp
pavgb
and
jno
stos
ss
loope
add
dec
adc
fadds
sbb
scas
rcrl
sbb
pop
in
push
xchg
mov
sub
stos
sub
lret
add
aad
sarl
sub
bound
popa
and
pop
push
and
adc
push
jnp
idiv
and
fldl
mov
in
js
das
cmc
fidivrs
ss
shlb
sub
push
jge
lret
cmp
xor
and
add
xchg
sub
jmp
sbb
and
pop
call
adc
pop
pop
sbb
mov
std
xchg
mov
fidivs
sbb
popf
pop
rorb
aaa
mov
pop
fsubrs
and
js
out
repnz
xor
retw
sahf
add
push
and
sbb
push
hlt
push
mov
pusha
mov
xchg
cmc
in
jno
jl
push
push
ret
insb
dec
call
push
dec
jae
pop
iret
in
test
mov
in
xchg
test
adc
lret
gs
inc
inc
or
sarb
repz
aam
inc
cmp
popf
xchg
stc
push
ljmp
fcoms
xchg
xor
outsl
or
add
in
loopne
aad
lret
xchg
notb
repz
mov
das
jae
inc
hlt
add
jl
ds
data16
outsb
xor
jmp
xchg
popf
in
into
xchg
out
adc
iret
movsb
inc
pop
int3
xchg
xchg
insl
pop
inc
clc
scas
in
icebp
xor
jge
mov
pop
testb
dec
in
jmp
cltd
stos
xor
mov
sub
mov
loop
rorl
sub
push
pminub
xchg
das
stos
xchg
xchg
mov
dec
adc
mov
mov
or
test
mov
call
sub
fistps
cmp
in
and
lret
mov
inc
mov
mov
js
lahf
xor
rcrb
mov
loopne
aad
jl
push
dec
pusha
negb
push
push
aas
inc
flds
dec
jp
stos
push
pop
leave
xor
and
push
and
push
xchg
jo
rcll
adc
inc
and
psrlq
xchg
addr16
sahf
dec
daa
cli
ja
sahf
adc
cmp
es
jae
in
add
add
test
js
or
mov
sub
nop
inc
push
test
stc
pop
outsl
xchg
dec
in
sbb
ficoml
out
aas
inc
aam
adc
stos
mov
in
in
pop
mov
pop
orb
imul
lds
cli
mov
jp
pushl
fwait
adc
call
jbe
xor
lcall
adc
insb
push
pop
xchg
xor
leave
jmp
bound
mov
fdivr
push
mov
cmp
xchg
insl
lret
and
mov
stos
mov
dec
fstl
pop
adc
mov
add
cmpsl
add
xlat
cmp
aas
push
insb
test
stos
dec
pop
jp
aaa
loopne
push
aas
xor
xor
push
mov
lea
incl
xor
into
lret
cmp
inc
decb
xchg
or
push
bound
call
jg
test
mov
mov
in
cld
fnstcw
adc
aas
push
push
pusha
gs
icebp
or
sub
adc
stos
push
stc
gs
lret
push
pop
jle
loope
lock
mov
cmp
jnp
sbb
jmp
push
ret
repnz
mov
sub
dec
jnp
das
pop
sbb
movsl
inc
testl
sbb
das
mov
js
arpl
mov
pushf
mov
pop
sbb
aam
cltd
test
sbb
arpl
adc
fsubrl
inc
jb
adc
and
xor
sub
fimull
jle
jmp
mov
jecxz
fwait
dec
or
dec
jecxz
stc
insb
adc
ss
pop
xchg
sub
xor
cmp
jmp
lea
sbb
lret
adc
decb
in
into
loopne
jo
jmp
mov
xchg
arpl
enter
or
repnz
ds
sub
rolb
clc
sbb
mov
js
jnp
cmpsl
add
jbe
inc
mov
sti
pop
aam
sub
int3
adcl
add
and
fdivs
cmp
cwtl
aaa
jp
jp
fmul
jb
push
shr
mov
push
movsb
gs
sub
sbb
or
or
popa
dec
int3
gs
push
sbb
cmpsl
mov
mov
aad
out
mov
aad
sahf
in
pop
and
sub
cltd
inc
push
push
xchg
or
in
cltd
rcl
outsl
or
cwtl
xchg
push
fldcw
inc
mull
movsl
pusha
xor
jge
mov
pop
jl
mov
push
cmp
insl
aaa
pop
mov
fistps
pop
add
dec
mov
cmp
ljmp
outsb
adcl
sub
push
inc
movsb
lcall
xchg
mov
cmp
adc
push
rorb
cmp
sub
pop
dec
or
lret
adc
int3
imul
aam
xchg
addb
stc
or
dec
dec
inc
ror
or
sub
sub
adc
jo
or
shll
jne
int3
xchg
ret
dec
lahf
cmp
insl
adc
data16
lcall
inc
add
les
sbbl
imul
lret
inc
or
push
cmp
push
sbb
test
aam
fdivrl
mov
xchg
ljmp
popa
push
pusha
lahf
mov
sbb
jge
or
pop
mov
shrb
pop
movb
inc
push
inc
pop
xorl
int3
jge
adc
sub
inc
jbe
fs
xchg
dec
push
mov
cmp
lea
dec
lahf
sbb
dec
test
sub
add
sbb
fld
pop
mov
xor
pop
pop
movsb
cwtl
xlat
ljmp
pushf
mov
pushf
adc
mov
fisttpl
xadd
movsb
sbb
xchg
sbb
and
adc
shlb
movsb
aam
daa
and
mov
add
pop
mov
movsb
call
sbb
dec
push
pushf
adc
imul
jae
push
leave
scas
jle
into
clts
mov
imul
add
arpl
mov
sbb
inc
inc
popa
mov
mov
pop
aad
mov
sbb
sbb
imul
fwait
lret
and
enter
xor
into
jb
or
pop
scas
test
mov
repnz
push
test
movl
enter
jl
jno
aaa
cwtl
or
bound
js
mov
iret
and
mov
dec
nopl
mov
addb
add
cmp
mov
aas
fstp
inc
sahf
dec
ret
sub
dec
sbb
mov
fcmovnb
push
je
xchg
cmp
ja
loop
or
mov
addl
insb
adc
nop
outsb
and
loope
jbe
mov
and
jp
xchg
mov
and
add
mov
cmpsl
aaa
or
xor
int3
movsl
out
dec
inc
cwtl
push
pop
dec
cmp
push
lods
outsb
sub
cmpsl
inc
xchg
mov
fbld
add
ror
add
mov
cmpsl
mov
data16
fstpt
in
sbb
adc
xchg
add
sub
mov
leave
cmp
lcall
sub
jne
into
repnz
loop
scas
mov
stc
lods
or
repnz
aam
pop
fldcw
arpl
cltd
test
daa
loop
mov
dec
js
push
push
xor
divl
mov
repnz
popf
jns
xor
mov
sbb
hlt
xor
daa
xchg
leave
data16
test
cmpsl
mov
adc
add
psrlq
aad
adc
out
pop
jo
out
mov
add
addr16
popa
pop
cmc
jmp
sahf
dec
and
or
lret
sbb
in
jno
sbb
outsb
sbb
rclb
dec
hlt
sbbl
subl
fdivrs
sub
out
jns
and
jl
jg
push
test
jp
out
inc
jne
popf
mov
test
mov
in
xorl
mov
test
aaa
loop
lret
sub
inc
mov
push
sbb
pop
jns
mov
stc
cmpsb
push
push
mov
adc
cs
out
daa
leave
inc
mov
subb
enter
inc
cli
xchg
add
jo
fcompl
cli
and
aad
repnz
or
pop
testl
ja
and
pop
ss
rcll
out
mov
outsl
xor
ljmp
fs
xchg
sarl
jne
push
mov
loope
push
xchg
xchg
hlt
or
cmc
xorb
cmp
or
sbb
push
add
in
sub
push
cli
push
inc
mov
lret
inc
imul
jle
cmp
call
dec
lods
or
lret
jg
jnp
pop
and
dec
in
fwait
call
aas
pop
out
xchg
mov
push
enter
fmull
aaa
adc
pop
xor
cmc
in
and
adc
push
cmp
ss
sub
mov
push
pop
call
and
cmpsl
mov
imul
push
insl
xchg
nop
faddp
pop
add
shrl
mov
sbb
lcall
or
jl
sahf
pusha
out
dec
pop
and
lahf
xchg
outsl
inc
fimuls
jecxz
sbb
push
push
jb
push
js
cltd
and
push
dec
or
cwtl
dec
rolb
aas
mov
nop
jnp
dec
jl
sub
imul
or
jecxz
out
mov
je
fldl
je
in
or
jo
xchg
add
loopne
adc
sbb
scas
mov
sub
xchg
mov
jecxz
and
loopne
iret
sbb
out
aas
mov
pop
rorl
js
pop
mov
push
dec
sub
insb
jno
xlat
jns
jp
push
imul
ret
loope
jp
sbb
jle
movsl
sahf
pop
jg
xchg
xchg
xchg
inc
outsb
mov
aam
fsubrs
test
sahf
push
mov
mov
xchg
roll
clc
dec
lock
add
ret
cmp
jmp
fxch
in
or
push
xchg
movq
and
mov
ljmp
lods
xchg
jge
and
pop
out
sub
mov
sbb
mulb
insb
sarl
mov
mov
rcrb
call
adc
mov
outsb
fimull
adc
sub
mov
sbb
cli
lea
sbb
out
loop
inc
or
dec
cmpsl
cs
sarl
ja
push
push
adc
mov
sbb
cmp
pushf
fs
mov
jae
or
adc
pop
xor
inc
mov
xor
pop
sub
or
dec
movsb
pop
add
in
xchg
and
iret
in
cmp
int
stc
mov
sub
sub
test
shrl
push
jmp
mov
pop
pop
pop
dec
add
add
into
icebp
test
outsb
push
mov
push
ror
or
xchg
push
inc
mov
or
and
notb
jge
fbld
nop
cmp
xor
add
pop
stos
aam
mov
push
jge
xorl
and
push
popa
mov
pop
jecxz
mov
frstor
jns
xchg
in
and
rol
jae
aaa
add
mov
mov
xchg
xor
push
cmp
add
scas
inc
ret
es
sti
je
mov
and
jnp
bnd
inc
cwtl
shlb
lahf
loope
pop
out
jbe
daa
out
add
cmc
push
fsub
icebp
lcall
outsb
lods
std
pop
cmp
jmp
jl
cmpsb
in
and
jmp
jl
xchg
adc
mov
fucom
mov
jmp
cld
imul
sub
mov
aam
test
jg
fs
xor
pop
mov
rcrb
xor
cmpl
or
clc
syscall
repz
rcll
lds
aam
es
lahf
arpl
rolb
jo
aad
nop
xchg
and
imul
lret
pop
les
neg
pushf
jo
push
push
pusha
dec
pop
sbb
int
loop
ja
jl
cld
aaa
cmp
mov
pop
popa
mov
sbb
cmp
insl
inc
fisubs
mov
pop
mov
out
mov
in
imul
sbb
les
mov
push
aad
cmp
mov
call
ret
mov
and
inc
or
push
divl
jmp
jne
pop
mov
dec
in
scas
add
stos
cli
cmp
jne
push
int3
dec
mov
mov
pop
in
daa
cmpxchg
push
aam
mov
jns
sbb
lock
inc
in
ficoml
sub
in
gs
repz
popa
jne,pn
jae
jne
fistps
mov
sbb
mov
xor
inc
sub
scas
cltd
dec
jnp
xchg
rolb
cmpsb
xlat
out
inc
jmp
adc
jg
adc
repz
sub
inc
rcll
movsl
and
jmp
imul
std
or
mov
inc
ds
pop
mov
leave
mov
adc
addr16
sub
push
cmp
lods
data16
dec
jbe
jl
mov
ret
xchg
mov
jbe
std
push
add
xor
mov
push
add
jecxz
mov
mov
inc
adc
pop
arpl
and
xor
sub
outsl
mov
pop
fsubl
mov
gs
ror
rcrl
or
in
mov
repz
push
sbb
scas
dec
dec
sub
jo
fsubp
mov
mov
test
adc
mov
xchg
jg
testb
and
pop
xor
push
cmpsb
inc
pop
mov
mov
insb
inc
das
mul
xor
fcoms
lods
cltd
dec
rcrl
loope
mov
sbb
fstpt
in
fnstenv
add
mov
ja
dec
xor
and
adc
repz
setno
movl
xchg
xchg
idivb
sbb
popa
idivb
mov
jl
or
or
xor
push
lods
stc
das
sahf
jp
sub
mov
mov
sbb
inc
xchg
in
cmp
outsl
aad
pop
lods
cmp
xchg
xchg
idivb
ljmp
sub
or
cmp
sbb
push
insb
decb
hlt
in
stc
mov
scas
cltd
sub
scas
mov
add
out
mov
sbb
pop
cmpl
hlt
ret
adc
rclb
arpl
test
mov
xor
int3
lret
xchg
cmp
ja,pt
mov
rorb
sbb
xchg
xchg
je
jno
aam
mov
popa
jg
cltd
loopne
std
adc
adcl
push
mov
jno
ljmp
sub
pop
xchg
jp
repnz
outsb
sbb
cltd
rol
mov
fcompl
rcrl
test
ficompl
mov
test
lods
lcall
xor
and
mov
dec
shrb
fnstsw
loop
dec
lahf
push
dec
icebp
adc
mov
lahf
pop
movsb
pop
sub
popa
iret
sub
pop
xchg
inc
mov
loopne
popa
or
xchg
mov
or
out
inc
push
push
insl
and
cmpsb
or
jne
add
add
shrl
mov
pop
mov
pop
cmp
push
push
jnp
rcl
jmp
xchg
jmp
xor
mov
adc
leave
mov
add
mov
inc
cmc
daa
inc
xchg
xchg
mov
outsb
test
add
jbe
fwait
push
jo
sbb
or
scas
xchg
sub
push
sbb
mov
xchg
push
xor
in
jne
test
arpl
xor
dec
sub
fbstp
add
sub
test
dec
mov
jl
xchg
hlt
pop
stc
test
sbb
daa
push
sub
jle
dec
addl
loopne
mov
scas
stc
in
xchg
jae
xor
sbb
or
dec
ss
mov
or
out
mov
cmp
xchg
lret
ds
jg
jp
mov
push
push
and
push
fcompl
das
mov
adc
mov
inc
js
aas
xor
in
lret
rorb
aas
scas
ret
jo
xchg
cmp
cmp
inc
cmp
fisubrl
inc
lahf
je
push
and
add
pop
sarl
fmulp
jl
or
scas
xor
mov
je
or
cmp
mov
pop
clc
lret
mov
inc
cmpb
pop
inc
sub
fnsave
or
scas
sub
jp
out
mov
add
call
push
xor
shlb
cmpsb
aas
loope
adc
sbb
mov
xorb
js
inc
fsubrs
xor
mov
lahf
outsl
sub
adc
cltd
pop
aaa
push
stos
aam
cmp
or
mov
push
sbbl
sub
or
out
ficoml
inc
dec
push
dec
pushf
movsb
in
inc
loopne
test
mov
cltd
pop
sub
push
sub
mov
jl
sub
popf
xchg
mov
ret
dec
xlat
outsb
hlt
mov
mov
and
out
dec
icebp
pop
inc
mov
les
int
sbb
push
cmp
popf
sub
xchg
jb
dec
nop
sar
inc
pushf
add
out
ds
das
loope
fisubrs
aas
scas
push
iret
sub
mov
push
cwtl
loop
cltd
fiaddl
sahf
adc
in
mov
adc
add
push
xor
ret
hlt
loop
scas
shll
cs
sbb
sbb
iret
xor
jmp
or
out
jg
mov
inc
orl
inc
push
andb
jmp
icebp
gs
insb
add
pop
aaa
icebp
in
shl
in
mov
lcall
lock
adc
cmovg
mov
jg
mov
push
je
cmp
xchg
mov
fdiv
incl
cmpl
cmp
adc
xor
pop
push
test
push
test
test
loope
and
xlat
movsl
inc
adc
sbb
stos
lods
sub
add
popf
rorb
scas
and
aam
xor
mov
lret
in
int3
inc
inc
je
mov
xor
jp
and
mull
jecxz,pt
fcoml
dec
and
cmp
cs
jp
dec
cmp
and
lock
dec
cmp
outsb
idivb
mov
aaa
sbb
shrl
xchg
inc
scas
adc
cli
push
scas
jge
jl
mov
lds
xchg
xchg
jb,pt
je
or
adc
mov
imulb
xchg
les
sbb
out
cli
mov
repnz
pop
gs
mov
lock
xor
lods
mov
xchg
iret
jp
sti
xchg
jo
jb
cld
data16
in
sub
mov
jno
imulb
jecxz
push
in
or
pop
pop
or
jmp
orl
lods
jg
pop
cmp
rcr
dec
jnp
lds
into
mov
je
or
xchg
out
xchg
jecxz
stos
pop
cli
push
test
pop
jl
shrl
in
jg,pn
loope
fstps
mov
loopne
cmp
push
xor
jb
mov
sbb
jmp
fnstsw
out
xchg
jno
xchg
or
pop
filds
or
outsb
pusha
cpuid
int3
mov
cmp
cld
pop
outsb
lahf
push
adc
sbb
pop
out
lds
sub
xor
fstp
mov
iret
adc
gs
rolb
xor
xchg
or
rcll
hlt
or
lods
xor
into
add
cli
mov
ret
xor
or
push
fcomp
inc
in
shlb
mov
dec
int
pusha
leave
flds
mov
cltd
lahf
sub
test
shlb
outsl
pop
hlt
imul
cmc
ficoml
ljmp
dec
imul
adc
cmp
add
xor
xor
paddd
rorl
mov
ljmp
outsb
mov
mov
mov
xor
push
lds
mov
aas
and
and
xor
jge
push
rcl
sub
loope
shll
fiaddl
outsl
fcmovu
in
aam
fsubs
rclb
sub
mov
add
aad
mov
loop
outsb
hlt
jbe
mov
ljmp
insb
in
leave
in
sti
jle
push
jns
mov
sub
xor
sbbb
inc
inc
pushf
push
or
xchg
inc
das
sbb
sbb
cli
mov
cmp
loopne
push
add
out
jns
or
xor
iret
mov
pusha
pushf
aas
push
push
js
cmpsb
stos
imul
shlb
arpl
mov
push
adc
xchg
lds
inc
dec
dec
arpl
iret
fsubs
orb
cmp
lea
enter
jnp
and
imul
or
dec
add
pop
adc
std
popf
stc
iret
push
adc
mov
ss
ljmp
xor
shl
add
inc
add
xor
out
pop
cmp
jne
mov
cmp
jg
inc
adc
cmp
xor
pop
inc
and
lcall
push
push
push
mov
pop
aam
jne
mov
push
loop
lea
pop
enter
lahf
and
fdivrs
out
lods
cmp
jmp
lret
push
ret
adc
push
call
dec
sub
pop
xchg
das
repz
jl
std
lret
rorb
push
mov
pop
mov
dec
ret
adc
sbb
arpl
roll
int3
xlat
loopne
cwtl
pop
sub
fldl
insl
pop
outsl
loope
lods
sbb
test
cwtl
mov
into
pop
push
cmp
inc
sub
loop
mov
cmp
arpl
xor
jns
arpl
loope
data16
sbb
movb
ficomps
or
subl
add
or
mov
xchg
push
leave
cmc
aad
xchg
out
xorl
test
push
leave
loopne
push
dec
sub
cmc
adc
dec
sbb
sub
jp
sbb
into
adcl
cwtl
dec
mov
cmp
jno
or
jl
adc
mov
xchg
sti
jle
test
xlat
jle
aam
imul
xor
xchg
and
outsl
cmpsl
insl
fisubs
mov
or
in
sub
mov
data16
icebp
jae
push
sbb
push
jge
fisubrs
lret
loop
xor
mov
aas
rcl
or
xchg
adc
insb
push
or
fcomip
dec
push
inc
lds
add
sub
xchg
int3
mov
jno
mov
or
push
cli
cwtl
xchg
jo
aam
aaa
frstor
ret
stc
adc
into
push
push
sub
ljmp
std
flds
add
pop
inc
loopne
jmp
push
push
or
les
dec
sbb
nop
mov
add
scas
out
or
test
sarl
mov
or
adc
lret
pop
outsb
sbb
jo
push
cmp
mov
daa
gs
xchg
push
stc
push
sub
pop
stos
shll
out
or
mov
pop
cmp
scas
jl
pop
sbb
push
fimuls
cmp
push
and
je
push
arpl
xchg
mov
jo
sti
test
fwait
outsb
loope
pop
mov
inc
test
and
in
das
mov
cmc
sbb
add
into
cmp
xorb
or
imull
mov
lock
push
or
popf
lds
outsb
push
pusha
sarl
jo
fidivrl
aam
cmc
icebp
out
aaa
xlat
es
test
push
ja
testb
mov
jb
sub
inc
sbb
dec
adc
or
xchg
inc
outsl
jbe
lea
jnp
jge
loopne
sbb
inc
stos
rcl
inc
mov
xor
mov
ret
mov
and
adcb
lods
aas
add
sbbb
jg
adc
mov
ficomps
int
pop
mov
mov
stos
sbb
in
xlat
jne
cmp
or
lret
ds
sub
in
stos
and
push
sahf
cwtl
cmp
mov
iret
fstpl
cmp
push
daa
pop
inc
or
dec
stc
mov
add
jle
mov
sti
push
pop
mov
push
subl
pop
xchg
add
leave
push
push
sbb
adc
sub
jmp
pop
ja
xor
sbb
pop
jle
addr16
sbb
xchg
fst
scas
cltd
imul
jl
push
ss
mov
gs
jg
adc
fcmovb
je
xor
call
in
mov
mov
jge
stos
and
push
movsb
cltd
sbb
pop
mov
das
cli
inc
jmp
cmp
adc
or
jmp
cmp
imul
jp
push
push
repnz
popa
and
mov
push
push
and
loopne
jle
cltd
push
insl
xchg
sub
ret
movsl
sti
pop
mov
test
mov
mov
rcll
add
and
repnz
jmp
cld
fldt
lahf
lods
cld
xchg
mov
sbb
ret
lret
pop
arpl
mov
test
adc
or
or
dec
mov
xchg
int3
hlt
enter
adc
sub
jbe
stos
lock
aam
inc
insb
das
out
addl
xchg
roll
adc
ret
outsb
xor
mov
in
and
inc
int3
es
lock
push
cli
imul
and
jle
xchg
cmpsb
repnz
pop
stos
xor
xor
pop
loopne
popa
stos
xchg
in
or
repnz
mov
int3
ja
mov
call
scas
pop
lret
repnz
fisttps
std
jae
mov
aaa
mov
inc
icebp
jo
jg
jbe
les
adc
dec
and
push
mov
inc
test
lods
dec
or
and
mov
divl
sbb
aam
rorl
lea
mov
xchg
mov
pop
jo
pushl
lcall
xchg
adc
pop
inc
jb
insl
pop
adc
cmp
adc
sysret
sbb
push
les
mov
sbb
scas
pop
xchg
sbb
rorb
bound
push
aam
sub
aas
jnp
mov
pop
idivb
arpl
int
in
aaa
mov
fwait
mov
xchg
cmc
pop
je
sbb
mov
fcoml
cmp
cltd
mov
out
mov
in
cmp
icebp
mov
iret
adc
repnz
mov
adc
sbb
jecxz
dec
fstl
into
adc
fmulp
sub
or
pop
push
jbe
xor
jne
mov
cmp
aad
lahf
sub
outsl
mov
sbb
xor
je
movsb
stos
ss
mov
mov
aad
push
xor
sub
add
push
lock
mov
sbb
pop
cmpl
addr16
push
outsb
mov
jbe
jp
push
push
sub
gs
jae
mov
and
inc
cs
adc
std
sbb
inc
mov
push
popf
mov
fsts
cmp
cmp
jne
adc
fldl
negl
outsl
addb
hlt
mov
sbb
test
mov
insb
push
and
xor
lea
aam
add
jmp
imul
push
xchg
addr16
popa
sahf
pop
fcomi
xor
and
cs
push
xor
and
sub
pop
mov
mov
dec
dec
push
pop
clc
lds
sarb
and
insb
shll
cmp
je
rcr
loop
inc
stos
add
sub
or
cmp
popa
repz
adc
in
lret
outsb
mov
cli
xchg
mov
dec
mov
lods
sbb
sub
movlps
iret
mov
pushw
out
out
incb
xchg
xor
mov
or
popa
cmpb
cmpsl
push
push
push
notl
outsb
aaa
inc
int3
test
divl
pop
and
jl
xor
lods
js
mov
addl
pop
add
iret
pop
sbb
lahf
and
cmpsl
jo
cmp
dec
shll
outsl
or
stc
je
and
and
int
pop
push
and
fucom
loopne
fwait
xor
pushf
aam
outsb
in
cld
iret
sub
inc
pop
scas
mov
imul
mov
out
lock
mov
jns
call
sbbl
mov
push
mov
cltd
repnz
push
mov
mov
jb
pusha
mov
aad
aaa
push
inc
mov
nop
sub
jp
aas
jo
dec
out
xor
add
inc
into
ffree
add
xor
loope
push
mov
mov
xor
xor
ja
mov
xchg
pushf
push
pop
repz
add
sbb
mov
loopne
insl
sub
mov
mov
push
dec
push
ja
mov
mov
jmp
roll
cmpl
aaa
sub
pop
push
mov
xchg
aaa
arpl
dec
mov
adc
mov
sub
jno
stc
pop
pushw
push
mov
jns
mov
xchg
inc
mov
je
outsb
stos
lds
cld
sub
aaa
mov
es
mov
sub
mov
xchg
lods
jmp
jecxz
daa
dec
ss
sti
jns
stos
sarb
or
scas
ja
jne
jge
mov
or
scas
sub
mov
movb
into
incl
sbb
jns
add
incl
popf
pop
mov
xor
adc
dec
lea
fcos
inc
popa
sbb
xchg
push
insb
stos
inc
push
mov
push
cmp
jns
pushf
cltd
cmpb
cli
push
mov
or
fsubs
push
xor
ret
popa
mov
fisubrl
pop
lea
in
cmp
cltd
imul
cwtl
xor
xchg
lods
aas
cmp
test
xor
pop
into
push
sbb
pusha
jle
out
sahf
movsb
xor
mov
cmp
inc
pop
out
leave
lea
loop
dec
push
dec
out
cli
loop
and
xchg
or
imulb
or
repnz
pop
mov
sub
push
xchg
fists
cmpb
xchg
push
nop
adc
add
xchg
jns
mov
mov
lahf
fsubrl
movsl
jmp
pop
fdiv
inc
pop
pop
sbb
add
gs
lea
and
mov
stc
fcoml
aas
mov
and
inc
mov
pop
fstpl
xor
sahf
or
sub
mov
inc
jno
jno
in
adc
repz
cmp
sbb
jo
jmp
frstor
inc
loop
cmp
es
dec
sahf
cmp
and
push
outsb
sbb
xor
nop
push
mov
inc
lea
or
in
das
rolb
push
pusha
mov
xchg
stc
rdpmc
dec
push
fwait
cmpsb
push
jle
imul
jbe
outsl
mov
jae
adc
sti
adc
shll
test
jne
dec
enter
pop
adc
sbb
out
repnz
cmpsl
popf
ja
pop
or
add
add
pop
out
mov
dec
cltd
and
leave
pop
ds
dec
popa
ja
mov
jp
and
nop
cmp
imul
subb
push
adc
aam
and
subl
add
or
pusha
test
pop
jecxz
or
popf
push
loope
pop
in
cmp
sbb
cmpsb
sbb
mov
icebp
icebp
hlt
addb
test
mov
mov
xchg
loopne
ds
push
js
ds
cld
mov
ds
movsb
mov
pop
repnz
cltd
inc
mov
outsl
rclb
sub
and
dec
inc
or
sub
push
or
dec
insb
test
jg
jb
imul
lcall
cld
jno
movsb
ds
js
dec
xor
ds
jecxz
and
sub
mov
gs
stos
sub
cmp
arpl
mov
testb
sbb
push
mov
iret
inc
adc
test
adc
sub
xchg
cmp
insl
in
call
pop
xorw
insb
xchg
lahf
repz
pop
repz
xchg
xor
movsb
es
mov
xor
mov
add
ds
jae
jg
mov
cmp
mov
adc
out
mov
push
pop
mov
testb
jmp
sahf
xor
mov
and
cmp
or
inc
and
pop
adc
sub
fidivl
ficompl
sahf
mov
xor
test
jne
mov
mov
out
mov
dec
shrl
mov
dec
jg
inc
mov
shll
clc
scas
pop
add
and
xor
stos
inc
imul
ss
mov
shll
loopne
add
in
cld
xchg
in
sub
add
mov
sarl
in
and
jge
mov
test
sub
dec
sbb
daa
cmc
lret
sahf
and
push
enter
clc
jnp
inc
mov
in
fs
jmp
xchg
adc
mov
adc
fnstenv
push
mov
jle
mov
mov
movb
cmp
les
movsl
popf
div
mov
cmpsl
adc
mov
fstpt
sbb
push
lret
jb
ds
sti
ljmp
das
imul
pop
scas
clc
push
mov
mov
mov
mov
int
xlat
scas
testb
sbbl
jg
in
push
jg
cmp
pop
fwait
push
dec
test
into
lods
jae
lret
cmc
sbb
loope
mov
xchg
push
flds
arpl
or
push
mov
and
bswap
xor
xchg
inc
pop
call
or
insb
jp
mov
mov
enter
sbb
sub
aaa
pop
sub
pop
popa
cltd
in
aad
in
inc
inc
cmp
aam
in
ret
nop
jge
jno
lea
and
test
adc
jmp
xchg
xor
test
in
aad
les
push
arpl
sub
decl
fmulp
lret
stc
push
mov
mov
inc
adc
dec
cwtl
mov
aad
xchg
and
fs
mov
enter
jmp
jecxz
add
movsl
insl
sarb
mov
addb
sbb
mov
pop
add
push
mov
int
xchg
mov
mov
arpl
adcb
xor
lcall
sub
push
xor
jecxz
xchg
iret
inc
test
fwait
insb
and
push
xchg
mov
lret
rcrb
and
cmp
pop
jmp
std
arpl
jmp
out
jl
lahf
add
adc
test
ja
ss
push
int3
int
loopne
int3
ljmp
pop
xor
push
adc
notl
aas
sahf
cmp
fadd
pop
xor
leave
daa
aad
adc
push
dec
lea
push
mov
adc
mov
adc
pusha
shufps
jmp
jne
ret
and
jge
dec
adc
push
mov
xlat
nop
mov
rcrl
jno
mov
in
mov
pop
hlt
xor
xchg
les
cmp
test
sbb
push
bound
inc
dec
sbb
push
out
push
jge
jge
sbb
ret
dec
cmc
sbb
pushf
cmp
flds
add
js
mov
cmp
repnz
pop
in
push
pop
fxch
mov
cwtl
std
dec
sbb
pushf
cmp
xchg
pop
jg
add
lds
xor
pop
ss
xchg
jae
mov
mov
dec
lahf
lods
xchg
scas
jecxz
push
push
ds
push
jo
sbb
lret
push
push
xchg
pop
jl
inc
xchg
ret
fimull
andl
dec
or
mov
arpl
or
test
add
mov
xor
daa
xchg
pinsrw
push
fcoml
mov
testb
add
mov
mov
cmpsl
mov
sbbl
cwtl
xor
cmp
jp
dec
sbb
rolb
xor
mov
popf
cmpsb
mov
push
test
sbb
mov
jb
jns
ret
sub
sub
jl
cmp
dec
lret
jecxz
or
lahf
cmp
xchg
push
ljmp
dec
pop
stos
stc
insl
inc
jnp
push
jp
xchg
jmp
mov
inc
rcrl
and
lcall
add
sub
sahf
or
fisubrs
std
stos
jnp
add
dec
and
sahf
scas
add
mov
std
inc
cmpsl
cmpl
daa
ljmp
stos
ja
cmp
pop
aas
orl
cmp
adc
sbb
insl
or
xor
fwait
sbb
cmp
mov
add
xor
sub
popa
imul
outsb
pop
scas
xchg
xchg
test
les
cmp
xor
clc
sti
add
jle
and
mov
outsl
dec
push
mov
adc
filds
js
ja
jmp
sbb
sub
lds
test
and
out
aaa
shll
shlb
jmp
int3
adc
add
and
mov
mov
mov
adc
jo
pop
or
sub
sti
data16
rol
pop
pop
push
pop
jg
cmp
mov
jl
dec
mov
mov
test
and
pop
rcl
push
scas
adc
fcompl
hlt
repz
test
add
lds
xlat
cs
sbb
loope
arpl
sbb
nop
inc
aad
insl
aas
cmp
jg
mov
mov
std
jno
pop
add
mov
in
pusha
sub
lods
sbb
or
shll
shlb
pop
xchg
arpl
fnstsw
xor
add
aam
or
mov
inc
xchg
add
popf
pusha
repnz
js
in
fisttps
iret
iret
inc
push
dec
lcall
push
mov
adc
roll
roll
and
jne
jo
out
sbb
adc
daa
jnp
inc
xchg
subb
dec
jmp
and
or
push
sub
xlat
inc
mov
cmp
mov
add
jecxz
inc
sub
les
push
push
icebp
rclb
jno
jae
roll
cmpsb
pop
inc
pop
cmp
xchg
loop
sbb
ds
sbb
stos
or
nop
loop
xchg
mov
insl
push
sbb
mov
xchg
std
cld
add
addr16
pushl
xchg
add
xchg
cmp
nop
jg
cmp
out
adc
rcrw
pop
pop
enter
inc
ds
aaa
scas
inc
fcompl
pop
cwtl
int3
insb
in
mull
aaa
cmp
jo
dec
sbb
mov
push
imul
push
icebp
mov
cmp
mov
imul
aas
testb
sbb
data16
sub
push
jp
lods
loop
cmpsb
flds
out
cmpsl
or
mov
mov
cmp
push
lcall
jnp
mov
inc
mov
xor
adc
adc
sub
enter
jns
jbe
adc
mov
call
or
pushf
dec
rorl
pop
cmp
fwait
pusha
imulb
hlt
mov
sub
dec
jns
xchg
sbb
adc
mov
jns
and
xor
cld
inc
in
mov
pop
int
mov
and
push
xchg
xchg
inc
mov
xor
mov
inc
push
data16
xchg
in
inc
xchg
jb
sub
mov
mov
pop
xor
and
sahf
and
jo
rcr
repz
sti
jno
aam
push
push
cwtl
jb
xor
in
ljmp
jno
or
mov
and
lods
dec
sub
in
mov
dec
push
addr16
mov
lahf
iret
xchg
in
mov
call
jnp
push
call
movsl
jl
push
mov
add
sub
cmpsl
and
cwtl
cmp
sbb
xor
stc
iret
cltd
into
dec
add
jge
vunpckhps
push
sbb
inc
mov
pop
pop
ds
pop
std
mov
aas
lea
pushf
xchg
ss
sub
pop
hlt
in
sub
xor
insb
cmp
jg
ja
push
sbb
mov
outsb
sub
and
rolb
sbb
inc
movsl
enterw
and
pop
cmpsl
dec
dec
pop
lret
inc
flds
rorb
mov
jl
fs
jae
pop
push
push
jle
shlb
sub
mull
inc
jg
or
inc
in
mov
fwait
pop
fnsave
in
dec
lret
mov
add
mov
dec
adc
daa
pop
sahf
int3
fs
push
cmp
in
stos
mov
add
pop
push
outsb
lret
pop
pop
clc
rclb
and
mov
ja
loopne
jo
test
lcall
lahf
fs
push
adc
test
push
fs
jae
sbb
inc
inc
and
rcl
or
in
add
mov
or
add
mov
or
jp
mov
sbb
loop
sahf
jecxz
and
les
cmp
sti
sbb
sahf
roll
inc
jl
push
jg
imull
aad
imul
popf
pop
cli
sahf
push
ja
inc
pop
xchg
cmp
adc
mov
sbb
sbb
mov
mov
inc
jns
push
add
xlat
inc
inc
cltd
bound
xchg
xchg
sub
mov
popf
jae
pop
mov
jle
pop
or
xchg
outsl
cmpsl
or
jnp
push
fidivl
int3
add
pop
pop
sub
fstpl
sub
inc
xchg
test
mov
inc
pop
xchg
cmc
push
test
test
cmp
push
and
pop
cli
aaa
xor
andb
add
push
push
pop
arpl
pop
jnp
xor
push
add
mov
test
xchg
sub
popa
lcall
sti
es
in
test
push
pop
mov
dec
adc
inc
sbb
mov
or
std
fs
mov
sbb
repz
call
mov
lds
call
lds
dec
lock
cmp
cmp
push
inc
jo
bound
jmp
stos
and
gs
mov
incb
ss
xchg
and
das
cli
leave
and
lds
jl
pop
jnp
hlt
mov
jne
std
in
cmp
lods
mov
push
rcrl
in
psubusw
js
ds
lods
imul
pop
and
jns
aaa
jle
jmp
mov
les
imul
mov
lret
arpl
xor
std
lds
mov
in
scas
mulb
add
rcrb
push
sub
lea
sti
movsl
cmp
pop
mov
mov
bound
cmpsb
mov
and
leave
mov
or
roll
or
adc
ja
loope
jge
inc
int3
adc
stos
inc
push
xchg
dec
push
jo
ret
addr16
nop
ds
pop
fsubs
stos
cmp
in
or
cmp
ljmp
int
jno
mov
rclb
es
stos
aad
mov
mov
add
in
pop
add
out
fimuls
ds
mov
iret
mov
inc
les
int
ja
xchg
push
mov
inc
enter
inc
aas
ficoml
dec
movsl
and
push
cs
pop
sbb
inc
pop
jp
push
testl
rclb
cmp
loop
sbbb
sub
dec
jp
jns
fcmovne
adc
add
mov
call
fistpll
and
mov
mov
js
xchg
cmpb
cld
lods
mov
sbb
xchg
mov
add
rclb
mov
imul
pop
aas
inc
cs
push
mov
inc
stc
fdivl
divb
sub
xchg
xchg
setbe
ds
nop
jp
xchg
mov
pop
mov
fsts
pop
cld
pop
xchg
xor
push
cli
mov
ficoms
or
sbb
jnp
icebp
adc
mov
imul
in
pop
jl
sbb
cmp
inc
inc
xchg
mov
mov
dec
pusha
stc
aam
addr16
testb
call
adc
xchg
mov
fsubl
in
cltd
dec
add
adc
inc
jns
fadd
frstor
out
xchg
xchg
pop
pop
scas
out
add
jge
outsl
add
lret
push
pop
jo
mov
hlt
sbb
cmpsb
sbb
mov
xor
mov
jnp
mov
pop
lret
adc
int3
into
jo
es
push
call
inc
or
mov
clc
std
ret
sbb
mov
mov
ljmp
ja
xchg
xchg
cmp
stc
mov
call
popf
mov
mov
leave
loopne
and
add
pop
and
sbb
push
dec
or
fisubl
cli
cmpsb
sub
imul
mov
push
cltd
push
dec
mov
ret
das
pop
fisubrs
out
cwtl
xor
cmp
mov
push
or
mov
or
aad
mov
cmp
les
adc
jbe
rorl
fcoms
insl
movsl
mov
add
sahf
test
xchg
cld
mov
adc
int3
sub
jl
pop
inc
cmp
pop
loope
lds
pop
inc
jbe
dec
clc
loop
nop
lods
pushf
push
push
out
lcall
xorl
add
js,pn
mov
cmp
enter
mov
jae
rclb
ror
mov
jl
pop
mov
sub
cwtl
data16
fsub
jp
mov
cwtl
scas
adc
mov
lret
push
scas
jo
loop
movsb
mov
testl
subl
inc
or
cmp
loope
gs
jecxz
lods
add
mov
sub
adc
jge
push
cmp
xor
ljmp
sahf
mov
mov
mov
out
mov
lock
pop
in
lods
xor
repnz
pop
mov
xor
mov
iret
icebp
xchg
mov
mov
js
jmp
pop
pop
clc
cmp
mov
sub
pop
clc
pop
stos
xchg
pushl
jl
sbb
movsb
insb
pop
mov
inc
bound
inc
adc
xchg
popf
dec
insb
enter
xlat
adc
gs
stos
jecxz
add
rcr
fs
imul
xor
inc
inc
pop
add
inc
gs
mov
pop
testl
nop
xchg
xorb
and
add
sti
or
mov
push
jbe
int3
cltd
push
add
mov
je
mov
sub
lds
push
mov
and
jmp
test
sbb
mov
scas
jge
test
and
shlb
sahf
cmp
xor
int3
adc
decl
xchg
jmp
outsb
sbb
jbe
bound
mov
pmaddwd
imul
stos
movsb
cmp
jne
xor
jmp
dec
scas
mov
inc
decl
out
or
cmp
ss
sarb
jp
in
mov
mov
scas
insb
cmpsb
mov
sbb
mov
mov
adc
or
xchg
jne
ret
add
lods
std
xchg
push
mov
cli
fidivrl
or
imul
in
mov
lret
setne
data16
xor
xchg
loopne
jae
xchg
mov
push
mov
sahf
outsb
mov
add
sbb
lods
out
add
mov
xchg
fldl2t
push
mov
int
sbb
mov
add
loope
inc
sbb
dec
or
fcmovnbe
clc
xor
adc
in
loop
add
fsubs
xchg
je
lods
aad
in
lods
pop
cmp
fistpl
orl
xor
les
xchg
mov
test
js
call
movsl
adc
push
mov
notb
xlat
inc
pop
sti
xchg
andb
sub
test
mov
cmp
and
sub
leave
scas
leave
fsubrs
lahf
inc
cwtl
jmp
jg
das
stos
out
xchg
mov
lret
cmp
int
fldenv
jle
hlt
mov
nop
xchg
aaa
ret
insl
je
push
sbb
jnp
ds
and
iret
cs
xor
inc
push
movsb
jnp
mov
mov
add
xor
push
fs
ss
movsb
adc
jmp
ss
dec
push
add
push
daa
out
cltd
mov
jge
mov
fnsave
js
pop
mov
aad
add
cltd
push
cmpsl
jno
test
call
sub
mov
mov
lock
adc
cmp
shll
insb
xchg
push
inc
movsl
inc
mov
shll
sbb
ljmp
xchg
push
in
fs
push
pop
adc
jo
push
mov
dec
or
stos
push
lret
mov
push
push
sbb
loop
loope
xor
sub
or
and
pusha
inc
clc
iret
ret
cmc
cmp
mov
pop
mov
inc
stos
imull
test
cmp
test
scas
mov
gs
ret
pop
cmc
aas
lds
mov
xchg
and
xchg
add
lds
in
outsl
xor
jne
jns
mov
xor
adc
lret
rol
jecxz
inc
sbb
pop
xchg
sub
adc
arpl
mov
jns
xchg
pop
insl
xor
sbb
push
push
iret
lahf
cmp
mov
jb
pop
fst
dec
adcb
mov
mov
and
sahf
mov
mov
mov
dec
xlat
jo
or
gs
gs
sub
lcall
add
je
addb
jb
xor
xchg
mov
sub
mov
jnp
mov
jae
cmp
subl
inc
test
int
test
push
and
stc
arpl
daa
adc
aas
ljmp
scas
sbb
arpl
push
cld
pminsw
mov
add
movsb
mov
xchg
push
dec
pop
dec
lods
add
push
test
lods
fisubrs
lcall
aas
pop
fadds
and
test
cmp
out
pusha
popa
mov
das
outsl
add
pusha
stos
add
sti
lods
dec
jg
pop
loop
repz
out
dec
pop
mov
xchg
clc
ret
divb
pusha
arpl
loopne
int
js
cmp
addl
movsb
nop
inc
aaa
xchg
cmc
cmpsl
dec
test
cmc
out
adc
dec
in
jmp
add
pusha
movsl
sarb
xchg
mov
xchg
dec
shll
shll
sbb
movsl
mov
clc
xor
pop
jnp
jb
in
ret
sbb
pushf
pop
mov
sti
push
or
pop
daa
sbb
scas
into
test
popf
lods
int3
jl
inc
sbb
push
movsb
sub
pushf
xor
push
pusha
pop
mov
sbb
cmp
data16
cmp
push
loopne
imul
and
test
xor
xchg
out
add
jmp
dec
jns
fld
stos
imul
pop
adc
in
jp
insb
or
sub
push
inc
adc
sarl
repnz
test
jp
cmp
aaa
shlb
mov
sbb
jmp
sbb
jg
es
rolb
add
mov
mov
cmp
bound
pusha
dec
sub
sti
add
mov
adc
sbb
fisubrs
dec
mov
jnp
add
hlt
sub
mov
fsubrs
incl
addr16
fisubl
insb
dec
jmp
daa
pop
or
mov
repz
ret
roll
xchg
sub
daa
or
mov
push
std
dec
xchg
and
rcrb
push
lret
sbb
test
pop
pslld
int
push
imul
out
sub
imul
jl
fs
std
nop
mov
cli
lock
aas
out
jle
inc
arpl
push
or
shlb
sbb
cs
into
inc
inc
das
movsb
push
dec
jns
pop
fbstp
aam
testl
pushf
mov
mov
cmp
and
dec
jp
mov
out
btc
xchg
add
cs
cmp
dec
and
test
ret
addr16
std
xchg
cmp
pop
adcl
addr16
jo
jae
xchg
mov
sub
rcll
call
push
cmp
xlat
stos
adc
inc
fistl
inc
in
hlt
cmp
adc
es
enter
jo
dec
lcall
hlt
cld
pop
aad
fcomp
fisubrs
movl
jmp
adc
sbb
dec
not
data16
into
adc
or
popa
sbb
lcall
mov
xor
fwait
sbb
inc
in
xchg
stc
cli
dec
in
or
push
jns
mov
mov
mov
aas
loope
sbb
ret
xchg
fs
dec
and
arpl
mov
pop
stc
mov
or
pop
clc
jmp
dec
mov
outsb
sti
idivl
sar
loope
jmp
loopne
fimuls
xor
push
mov
jne
jb
mov
idiv
call
pop
mov
sarb
scas
pop
fcmovu
jl
std
cmp
outsb
pop
arpl
pusha
dec
popa
scas
cmp
xchg
movsb
ja
std
test
rcr
inc
fildl
jl
sbb
jl
cmp
mov
das
push
mov
mov
add
mov
and
orl
adc
mov
cwtl
mov
or
or
in
icebp
add
cli
fistl
mov
pop
xchg
jg
fidivrs
out
mov
add
push
push
ljmp
in
mov
and
adc
cli
lcall
out
mov
int
mov
mov
insb
jnp
add
or
mov
push
ljmp
push
mov
xchg
notb
inc
jge
mov
pop
inc
xchg
jns
and
push
iret
pop
sub
dec
pop
mov
sub
jecxz
movsb
cmp
pusha
divl
aaa
lods
shrb
fwait
push
jno
jmp
fcompl
push
jecxz
add
lahf
jecxz
dec
ret
add
or
mov
cli
pop
jbe
mov
sub
and
cld
inc
imul
xchg
repz
mov
pop
or
lock
jnp
mov
mov
mov
push
push
jecxz
movsb
adc
push
adc
or
push
dec
ljmp
decb
jge
dec
fisubs
jge
xchg
fs
lahf
inc
ds
cld
or
xchg
ds
pop
mov
aaa
mov
inc
inc
xor
int
lcall
lods
sub
movsb
or
xor
sbb
xchg
add
lods
cmp
outsb
and
push
jno
jecxz
sti
mov
rclb
es
jns
sahf
and
sub
mov
and
ret
mov
loope
push
mov
or
aas
and
mov
or
stos
xchg
shr
movb
push
loop
imul
leave
ss
xor
inc
cmpsl
cmp
iret
sub
mov
test
sbb
je
dec
jg
repnz
dec
pop
xchg
mov
cmpsb
xor
xchg
mov
xchg
test
or
fisubrl
repz
ljmp
daa
inc
aaa
jp
loop
xor
adc
push
push
xchg
outsb
add
cwtl
pop
jne
out
icebp
out
or
xor
adcl
or
mov
das
push
mov
xlat
cmp
or
pop
les
lods
adc
pop
jp
shr
or
fs
les
sub
add
dec
test
jmp
mov
test
or
call
negl
mov
jmp
pop
push
pop
bnd
ss
adc
fsub
push
addl
add
orl
mov
inc
pusha
sbb
outsb
out
mov
lods
imulb
repz
sbb
popf
cmp
sub
sbb
pop
lods
loope
pop
sub
add
and
test
inc
and
and
sub
aaa
fcoml
gs
fmulp
pusha
inc
loopne
call
notb
insl
imul
je
cmpsl
pop
sub
push
sahf
out
adc
mov
or
jge
xchg
out
xchg
mov
mov
int3
sbb
adc
dec
lret
pop
or
ror
lock
or
jbe
icebp
jle
jl
clc
mov
pop
dec
pop
mov
and
adc
xor
sbb
daa
subb
push
mov
ja
stc
sarb
andl
push
xchg
pop
jle,pt
jmp
aad
movsl
push
ja
xchg
mov
insb
mov
cmpl
stos
sub
shll
cmp
xchg
cmp
addb
push
xor
cmc
arpl
out
arpl
outsl
or
sub
mov
inc
xchg
les
add
mov
fdivl
in
mov
pop
xor
and
lret
xor
hlt
rclb
out
fimull
ljmp
stos
out
mov
and
call
loope
mov
lods
mov
test
xchg
mov
addb
and
push
imul
mov
and
mov
jge
mov
cmp
inc
sbb
stos
cltd
pusha
in
fadds
fs
imul
push
xorl
pop
xor
push
icebp
shr
add
dec
cmp
popa
add
add
mul
sub
or
and
xchg
jle
repz
cmp
test
push
adc
movb
dec
cmp
into
movsb
cmp
push
dec
lcall
xchg
inc
int3
xchg
add
lret
icebp
je
sub
lret
fildl
aaa
pushf
repnz
jge
jle
sub
mov
inc
in
sub
push
jge
mov
and
aad
xchg
pusha
cli
pusha
bound
lock
jge
jg
and
cltd
jle
jmp
repnz
in
sbb
pop
inc
sbb
ret
cwtl
in
ss
mov
xor
cmpsl
dec
shlb
dec
and
and
sarl
daa
xor
jge
push
mov
insb
or
jge
add
and
or
push
and
xor
pop
and
int
push
pushf
mov
xchg
adc
sbb
push
cwtl
mov
test
scas
cmpsb
insb
hlt
dec
imul
jmp
aaa
and
fiaddl
mov
add
iret
and
mov
in
test
lret
inc
xlat
out
cltd
test
fdivs
or
push
add
mov
pop
add
push
mov
arpl
das
mov
cmp
neg
jl
mov
sub
sub
daa
jns
test
ffree
dec
add
lret
mov
jne
shl
div
pushf
insb
push
push
mov
ljmp
and
adc
pop
jl
repz
push
mov
push
add
std
in
push
mov
fildl
xor
addr16
icebp
iret
outsl
lods
sub
push
mov
dec
cltd
cmp
push
test
cld
es
and
add
popf
testl
push
dec
int
std
mov
imul
jge
mov
std
sub
lcall
inc
mov
adc
sbb
pusha
jge
inc
inc
mov
push
mov
mov
fcmovu
lahf
jbe
push
cmpsb
push
mov
arpl
sub
fwait
lahf
arpl
xchg
adc
dec
mov
mov
jae
iret
jae
stos
clc
in
sbb
inc
add
and
jp
mov
frstpm(287
adc
sbb
std
cmp
shrb
pop
addr16
or
aam
movsl
mov
testb
xchg
daa
lret
rcrl
mov
pop
xor
pop
mov
aad
lcall
or
sbb
sbb
leave
lods
call
movsb
pop
in
leave
inc
mov
add
mov
dec
aad
stc
out
mov
pop
in
movsl
aas
xchg
mov
ss
decl
into
fdiv
jo
mov
jmp
pushf
filds
cmp
or
pop
jo
sub
lcall
add
xchg
mov
inc
scas
dec
push
add
pop
mov
inc
mov
or
out
xchg
clc
test
adc
xor
dec
dec
mov
sbb
add
push
lret
inc
cwtl
inc
mov
fchs
jne
or
or
mov
sub
xchg
int
jne
sbb
stc
sbb
or
popf
js
cmpl
pop
dec
test
cwtl
sbb
mov
int3
lret
decl
mov
lock
int3
andl
dec
or
sti
push
push
sbbb
jl
sbb
out
hlt
xorl
push
jg
and
popa
jb
enter
inc
cmp
nop
cld
cmp
test
sbb
push
movb
fldl
pop
adc
inc
xchg
out
jns
sub
sbb
loop
mov
out
mov
rcpps
and
ret
or
dec
das
mov
add
pop
shrl
scas
cwtl
adc
stc
fdivs
stos
inc
dec
andl
ds
jmp
jno
cmp
xchg
cmp
pushf
push
jno
pop
cmp
jns
leave
xor
cmpsb
out
mov
out
and
and
mov
ljmpw
mov
and
xchg
push
push
mov
fcmovne
cmc
pop
mov
dec
insb
mov
loop
and
xchg
push
ficomps
mov
aaa
pop
xchg
cmp
xchg
fnstenv
xchg
mov
movsl
popa
cmp
add
xchg
or
rcll
sbb
ret
xchg
insl
test
push
loop
in
fiaddl
sub
sbb
pop
aad
inc
dec
and
xor
sbb
dec
jmp
imul
bound
sub
dec
nop
cmp
pop
mov
mov
in
push
cs
pop
shl
fisttpl
mul
dec
aad
dec
pushf
mov
sbb
pushf
repz
cwtl
jp
lock
jnp
jbe
out
fs
inc
dec
xchg
fwait
lods
mov
cmc
rclb
adcb
pmullw
cmp
mov
ret
xchg
div
mov
mov
or
leave
add
call
lods
shl
fcos
sbb
pop
shrl
cmp
mov
push
mov
aaa
flds
fldenv
cli
dec
push
and
pop
xor
xchg
push
leave
add
sahf
pop
loopne
sub
jmp
cmpsb
rcrb
pop
dec
int
push
shl
sub
adc
pop
jnp
das
shlb
lret
mov
notl
and
mov
xchg
sub
bound
adc
mov
cmc
leave
cmpsb
add
sbbl
push
mov
mov
rol
push
cmp
lcall
pop
adc
fsubs
in
mov
ret
pop
mov
jg
cmp
call
shrb
nop
sub
pop
pop
ret
jl
in
lea
cltd
or
das
pop
mov
and
imul
jmp
stc
mov
adc
scas
or
insl
jne
je
xor
push
push
mov
les
rorb
cmp
sbb
mov
xor
out
or
fcmovnbe
aam
loope
fwait
or
adc
lods
dec
out
jnp
push
jmp
mov
mov
pop
xor
shlb
test
inc
icebp
mov
cmpsb
shll
or
mov
jns
gs
faddl
das
push
jb
imul
shlb
je
dec
jns
es
or
lea
notl
or
in
cwtl
faddp
sbb
cmc
jbe
add
cs
mov
pop
icebp
roll
test
aaa
imul
imul
cmp
ret
lahf
xchg
push
in
mov
int3
push
xchg
repnz
push
scas
adc
lock
sbb
mov
insl
sub
dec
mov
mov
dec
in
and
popf
lcall
sbb
lods
push
and
shrb
adc
jb
lea
repnz
cwtl
sub
out
xor
xchg
inc
aam
repnz
xchg
sub
dec
xor
xor
jle
sbb
rorb
xchg
lods
mov
dec
push
lret
sub
mov
xorl
outsb
lcall
xlat
xor
dec
mov
hlt
sub
js
insb
ret
inc
aam
xchg
xchg
nop
lds
sub
add
out
les
and
and
fidivs
mov
mov
pop
mov
jnp
in
in
mov
insb
adc
call
nop
rol
out
xchg
add
decl
pause
ret
in
sbb
mov
dec
test
push
push
sub
lods
xchg
test
in
clc
and
sub
jge
and
popl
mov
xchg
xchg
xchg
push
xchg
ljmp
mov
out
mov
xlat
ss
sahf
leave
cld
pop
fcoms
xchg
daa
mov
arpl
addr16
dec
pushf
cmp
sub
addr16
ss
cld
cmpsb
adc
shrl
or
cmpsb
aad
push
je
out
fildll
cmp
adc
adc
mov
jecxz
inc
repnz
jle
jo
stos
sub
call
pop
pop
jl
mov
loopne
sarb
pop
pop
push
lahf
inc
mov
fisubrs
xor
pop
push
pop
scas
mov
in
aad
mov
adc
sbb
mov
fdivr
lahf
push
xchg
mov
enter
mov
cmpsb
mov
mov
ds
jbe
test
pop
inc
pop
push
int3
iret
inc
xor
sub
pushf
inc
jbe
call
cmc
xchg
and
inc
inc
and
sbb
push
out
cmp
loopne
xchg
fistl
and
fdivs
lea
gs
jno
andb
and
mov
mov
addr16
or
lret
iret
fimull
adc
pop
xor
call
dec
dec
inc
jmp
cmc
cmpsl
and
out
test
adc
int
mov
xchg
popf
jmp
cmpsb
mov
push
loope
dec
cld
cmpsb
sbb
in
push
cs
sbb
add
mov
add
xorb
movsb
fstpl
cmp
sub
movsb
and
xor
movsl
cltd
push
dec
das
lock
aam
decb
outsl
ret
mov
fsubrs
mov
mov
loope
test
insb
mov
dec
ret
jnp
push
popl
fstps
mov
je
arpl
stos
in
push
dec
insb
lea
mov
dec
adcl
mov
jl
fdivs
inc
pop
xchg
pop
mov
jmp
adc
sbb
mov
in
sarl
sub
dec
out
push
repz
pop
pop
and
xchg
xor
stc
adc
cwtl
inc
and
loope
fstps
dec
sbb
pop
imul
push
adc
mov
and
inc
jne
loope
inc
sub
xor
add
fwait
lcall
stos
ja
dec
addl
ss
insb
add
fdivrl
sti
cwtl
pop
xlat
hlt
inc
fwait
inc
push
sbb
cmpsb
out
dec
jae
int3
mov
insb
mov
jp
sahf
dec
std
and
or
ror
bound
lods
shrb
push
add
shll
push
jae
pop
icebp
ds
adc
sub
xlat
insl
xor
dec
add
sti
subl
cmp
int3
push
sarb
push
add
add
and
add
or
inc
loopne
push
adc
cmp
sbb
mov
hlt
lret
lea
xor
cli
stc
in
imul
mov
mov
cmc
out
fstpt
shrb
lods
and
xor
xor
je
dec
dec
add
lcall
ds
mov
dec
push
jecxz
scas
shr
popa
sub
xchg
ss
notb
jg
cmp
push
sbb
push
cmp
test
add
and
cmp
mov
pop
sub
xor
pop
adc
inc
xor
mov
cs
std
add
insl
shrl
stos
aam
ss
add
call
push
cmpsl
mov
ret
stos
jl
sbb
ret
cs
ret
cmp
push
push
cmpsl
lret
jle
or
pop
sub
jnp
jae
sub
test
je
or
pop
push
fisttps
movsl
test
mov
ja
mov
subl
outsl
add
dec
adc
les
jns
outsl
pop
icebp
arpl
or
je
sbbl
jg
mov
call
xchg
pop
cli
mov
stos
ret
inc
xchg
jne
dec
lock
cld
pop
adc
lea
jno
cmp
xchg
loopne
outsl
out
mov
mov
cmovg
add
jmp
xchg
cld
mov
sub
insb
adc
xor
into
inc
ja
xchg
adc
cmp
dec
mov
jno
push
mov
aas
test
rorl
jbe
sarb
xchg
or
arpl
cmpsb
cmp
pusha
adc
and
or
shll
jge
cwtl
or
int3
ljmp
dec
sbb
or
adc
sbb
mov
dec
in
or
mov
jle
mov
pop
or
rclb
jp
push
xchg
mov
iret
loopne
mov
and
xor
pop
jnp
gs
popa
orb
sbb
xchg
xlat
sbb
aam
sti
cs
mov
sbb
mov
sbbb
leave
movsb
je
stos
sbb
mov
and
xchg
lcall
or
fs
cmp
mov
movsb
inc
enter
cmp
test
push
mov
push
sbb
lods
push
dec
es
push
mov
scas
xchg
js
cltd
push
or
pop
fmuls
pop
inc
or
xchg
mov
xlat
cmc
inc
aas
cli
insb
movsb
adc
push
and
cli
imul
cmp
push
push
pop
xchg
xchg
cmpsl
add
pushf
inc
addr16
dec
xchg
push
mov
pop
data16
inc
imul
jb
dec
push
cmp
xchg
pop
in
xor
jecxz
mov
cmpsl
xchg
dec
inc
mov
aad
repnz
test
repz
mov
cmp
adcb
or
push
mov
jbe
mov
cmpsl
jnp
shlb
call
cmp
enter
jno
aas
imul
pop
mov
sbb
mov
jecxz
push
or
std
aas
xchg
dec
lock
sti
lds
sti
xlat
jns
stos
out
lds
mov
stc
mov
rclb
mov
sub
mov
add
mov
jae
adc
test
xchg
inc
popa
mov
js
mov
test
scas
cmp
or
dec
inc
lahf
mov
add
xchg
std
fs
call
and
xchg
mov
adc
and
leave
fwait
movsl
sub
mov
lret
mov
mov
mov
sbb
out
and
fcmovnb
lret
inc
push
jg
sbb
push
xchg
ja
mov
pusha
insb
and
stos
aam
shrl
testl
test
cmp
sbb
aaa
sub
scas
shrb
xchg
mov
fsubl
testb
sbb
aaa
jne
xor
sub
or
add
xchg
jg
mov
scas
bound
mov
cli
ljmp
es
cmpl
or
jo
cwtl
and
adc
faddl
shlb
test
fstl
dec
or
pop
mov
add
dec
mov
jns
inc
sub
cmp
and
push
jno
shrl
mov
mov
shll
sbb
mov
and
jmp
arpl
pusha
loop
dec
ret
add
cmp
cli
fistl
ficoml
add
fidivs
mov
push
sub
negl
lahf
dec
mov
xchg
sahf
outsb
xchg
push
xchg
es
jb
add
add
imul
test
or
cltd
dec
inc
inc
test
mov
or
dec
icebp
add
cmp
or
jmp
in
push
sti
loopne
jmp
stos
and
scas
pushf
fbld
cmp
andl
repz
into
les
mov
lock
dec
sahf
and
repz
adc
push
iret
lods
or
jb
jecxz
out
cmp
lds
xchg
je
js
jecxz
cmp
sbb
movsb
subl
xor
xor
mov
cmpsl
pop
iret
outsb
add
inc
cli
jae
pop
inc
in
jns
cmpl
sub
stos
cmp
sbb
dec
xchg
pop
or
inc
xor
xchg
lret
nop
aad
rclb
push
cltd
test
mov
in
lret
insb
jl
data16
mov
inc
dec
sbbb
push
jl
mov
bound
das
popa
iret
test
idivb
adc
inc
ret
xchg
or
cli
ds
push
gs
cltd
ljmp
icebp
aaa
pop
cmpsb
mov
add
lret
push
outsl
mov
fldl
cld
lret
push
xchg
lock
adc
das
out
mov
or
adcl
fstl
add
mov
cmp
jge
dec
pop
mov
data16
mov
mov
lock
add
mov
push
cmp
push
es
cmp
pop
mov
lcall
mov
jnp
inc
adc
bound
sbb
in
mov
lcall
faddp
lcall
sbb
push
movsb
cmp
fisttpll
loopne
ud2
jbe
jae
and
leave
lcall
sub
adc
mov
jge
lods
push
and
or
mov
mov
lret
push
popa
mov
sbb
cmp
mov
lcall
in
xchg
pop
mov
mov
jb
outsl
popa
scas
jne
sub
mov
adc
push
lods
in
dec
mov
in
sbb
fwait
cmp
mov
dec
stos
in
mov
pop
mulb
divl
fwait
mov
adc
loope
pushf
or
pop
mov
cmp
jecxz
test
loope
jnp
inc
movsl
add
ret
push
fistps
inc
jp
outsl
push
mov
hlt
stc
sbb
das
decb
xor
cmp
fisttps
jno
cmp
mov
inc
icebp
adc
sub
mull
lahf
xlat
pop
mov
xchg
inc
js
jmp
ret
dec
xor
sub
stos
mov
push
pop
inc
cmc
adc
or
arpl
outsl
add
and
sub
xchg
pop
push
test
imul
add
shlb
pop
outsl
frstors
cmpsb
pop
cwtl
adc
scas
pop
lret
popa
lahf
adc
push
clc
cmpsl
das
sub
fs
sub
inc
add
lock
cmc
data16
fsubl
fnstsw
lahf
aam
mov
sub
lods
test
cld
mov
sti
inc
inc
jae
jae
scas
cmp
sub
or
cmpsl
nop
xor
pop
cmpsb
mov
ss
test
adc
xchg
imull
push
adc
pop
shrl
gs
pop
negl
les
mov
outsb
mov
dec
scas
dec
lcall
xchg
push
or
push
mov
stc
jae
jl
sbb
cmpsb
shlb
mov
cltd
and
jne
xchg
clc
jge
stos
fxch
or
lcall
sysenter
add
pop
cwtl
push
lahf
mov
adc
rcrb
mov
es
int3
fstps
ror
xchg
mov
xchg
mov
scas
cltd
xchg
shlb
aas
and
sbb
mov
fcmovb
out
aad
and
outsl
inc
pushf
int3
movsb
mov
imul
jns
lea
xchg
push
sub
repnz
cmp
xchg
imul
aas
andb
gs
inc
xor
sub
pop
sub
cmpsb
js
ja
pop
inc
adc
mov
pop
out
addr16
add
loope
xorb
ds
pop
push
pusha
jmp
sbb
pop
sbb
and
push
testl
inc
jmp
leave
add
icebp
leave
icebp
sarl
fnsave
sub
mov
sub
cs
scas
stos
scas
jp
add
cmpsl
lahf
or
cmp
out
mov
push
jp
loopew
cmovae
push
ret
lods
mov
lcall
sbb
jno
loop
icebp
mov
xlat
das
cmpsl
ret
add
mov
inc
sub
ja
mov
add
pop
cwtl
pusha
call
insl
dec
jmp
and
shll
mov
aam
mov
or
sub
jge
mov
mov
dec
adc
cmpsl
inc
fnstsw
xor
xor
sub
mov
out
pop
lea
cmp
pop
or
jmp
or
dec
xchg
out
int
sbb
xchg
rcll
pop
sti
xchg
adc
loope
stos
adc
fwait
lahf
sarl
sbb
rol
leave
int
pop
dec
icebp
rol
shll
add
ret
das
mov
inc
inc
lock
mov
aas
xchg
pop
aad
xor
jmp
and
enter
xchg
mov
xor
sub
dec
cmp
push
pop
push
lea
lea
adc
dec
or
into
mov
jne
imul
mov
lcall
js
xor
sbb
mov
push
adc
out
add
dec
jl
mov
xor
xchg
add
dec
popa
pop
add
les
jb
or
mov
pop
aaa
jo
aaa
arpl
xchg
cmc
or
inc
dec
cmp
in
enter
les
rcll
cmp
mov
shlb
push
aas
push
xchg
sti
inc
cmpsb
notl
jecxz
hlt
sti
and
aas
and
adc
add
cmc
je
adc
mov
subl
lret
jge
mov
cmp
loopne
ljmp
dec
mov
mov
and
in
add
out
fmulp
in
int3
vmwrite
and
add
mov
mov
and
outsl
scas
inc
fiaddl
sub
imul
insl
sub
nop/reserved
push
in
js
or
mov
jmp
imul
xchg
inc
enter
push
pop
pusha
dec
and
jmp
inc
dec
sbb
ret
ds
mov
movsb
sub
fwait
pop
les
int3
mov
cmp
orb
push
clc
jmp
mov
jns
mov
push
orb
enter
push
lea
inc
insl
xchg
pop
pop
enter
inc
inc
dec
cmpb
loopne
inc
jb
or
iret
movsl
bound
mov
jle
clc
sub
fsubl
push
es
out
scas
mov
sub
or
jb
mov
xchg
bound
loope
push
inc
das
sbb
cmp
mov
jge
sub
out
sbb
lock
insb
aas
jle
push
orb
add
mov
into
ret
sbb
dec
sub
xchg
loop
adc
js
pop
ret
fnsave
aas
mov
shll
aad
fs
movsl
adc
outsb
and
aas
or
sahf
imulb
dec
stos
movsb
mov
test
aaa
stos
mov
in
push
cmp
sbb
dec
cltd
das
jmp
int3
das
mov
std
cmc
add
sbb
stc
mov
cld
mov
hlt
scas
data16
scas
mov
cmp
stc
cmp
or
ja
int
mov
adc
or
pop
testl
lods
lcall
dec
dec
xchg
lods
cmp
sub
mov
push
mov
mov
enter
aad
mov
pop
inc
jg
movsb
adc
mov
mov
lret
pushf
mov
add
out
ss
clc
loop
inc
pop
dec
int
shl
into
outsl
xor
xor
or
inc
insb
adc
sbb
ficompl
aas
push
hlt
icebp
testl
sbb
xchg
or
stos
repz
shrb
insb
push
sbb
dec
xchg
sti
dec
filds
xor
icebp
mov
sbb
push
movsb
pop
cli
insb
inc
xlat
push
imulb
cld
sbb
rcrb
xor
xor
mov
mov
fldl
test
adcl
jmp
insl
jl
mov
rorl
push
pop
divb
ja
cltd
mov
sti
test
mov
aad
and
jno
adc
sbb
pop
pop
pop
xor
bound
sbb
cmpsl
xorl
xchg
xor
fs
mov
xor
and
sbb
mov
lcall
mov
lds
cs
add
cmp
adc
lret
adc
js
aad
adc
fmulp
das
dec
jmp
je
jnp
or
rolb
scas
mov
lret
sbb
cmpsb
lret
popf
and
mov
and
lds
andl
dec
mov
mov
sub
das
dec
push
pop
out
push
xor
adc
das
push
inc
sub
rcl
out
sbb
test
hlt
mov
arpl
shl
fwait
lcall
pop
cs
jmp
ret
sar
icebp
scas
pop
stos
fwait
insl
test
pop
repz
addr16
xor
push
sbb
mov
lock
cmpsb
enter
faddl
or
aad
and
xor
sub
xor
inc
sbb
insl
pop
mov
or
jmp
jmp
and
inc
xchg
pop
roll
pop
imul
push
roll
or
sbb
cs
fnsave
mov
sub
pop
xchg
dec
sub
push
adc
int3
cs
jnp
or
sbb
sbb
dec
inc
xchg
sbb
cmpsb
rcl
imull
rcl
fsts
pop
pop
pop
aam
test
xor
xchg
jno
inc
xchg
std
xor
shl
ljmp
aad
call
adcl
inc
sub
mov
popf
movsb
pop
das
adc
pop
jbe
pop
xchg
push
sarb
imul
imul
jbe
test
xlat
mov
xlat
push
jnp
in
jnp
imul
pushf
adc
push
lock
and
xchg
sub
add
loope
imul
push
jp
ficoml
mov
or
pop
xchg
lock
sub
lods
pop
pop
mov
scas
pop
pushf
fimull
cmp
je
sbb
sbb
lods
jne
push
inc
lea
sbb
daa
sub
int
push
mov
xlat
jl
cltd
xor
cmp
cmp
outsb
mov
mov
xchg
enter
loopne
shlb
cwtl
inc
leave
sarb
insb
scas
and
cmp
inc
lahf
movsl
add
mov
mov
ljmp
adc
in
test
out
mov
fisubrl
pusha
mov
test
cwtl
ljmp
test
icebp
scas
adc
ljmp
mov
shrb
xchg
sub
inc
mov
dec
fistpl
mov
scas
std
mov
xor
mov
shll
out
cwtl
mov
daa
xchg
or
mov
sbb
sub
jb
xor
push
fldenv
ret
rcll
dec
test
inc
cmpsl
and
imul
lret
out
add
mov
test
push
repz
lretw
ss
idivb
mov
jnp
sbb
cli
xchg
sbb
clc
lret
push
into
ret
icebp
ljmp
or
push
dec
adc
adc
sub
jo
cmc
sbbl
jg
xchg
dec
out
pushf
mov
xor
outsb
outsl
mov
dec
mov
les
push
sbb
pop
dec
cmpsb
aas
and
pop
pop
pop
out
add
call
xchg
mov
imul
xor
pop
dec
xor
in
fstpl
sbb
jne
lea
cmovp
popf
push
addr16
daa
sbb
outsl
fistps
popa
push
adc
loop
mov
xlat
and
and
into
xor
sbb
ret
cmp
scas
xor
lret
jo
fcomps
cld
or
sahf
pusha
sub
jp
iret
stc
notb
loop
dec
stc
add
mov
sub
cmp
xor
cwtl
cmpsb
jmp
fadds
and
push
cmp
inc
dec
and
jbe
adc
or
xor
fisttpll
rcrl
loopne
adc
jne
jne
push
mov
inc
repz
incb
sbb
mov
rcrl
out
inc
lds
rorb
cmpsb
mov
xchg
pop
xor
and
dec
cmp
imull
mov
xchg
hlt
push
fwait
jmp
xchg
dec
jne
jmp
mov
gs
lock
sbb
icebp
sub
arpl
shlb
adc
pop
data16
in
fucom
loop
ja
cmp
inc
pop
shrd
and
and
fsubrl
mov
lds
adc
jb
inc
sbb
sbb
push
xchg
dec
loop
scas
jne
push
pop
ljmp
stc
cli
stos
xor
sub
pop
push
clc
stos
cmpxchg
or
mov
sbbl
ror
jbe
mul
jns
sbb
jg
into
push
sub
out
or
adcb
test
mov
into
jmp
jbe
loope
movsl
cli
idivb
mov
mov
scas
cmp
fisttpl
orl
mov
jnp
and
lea
pop
pop
js
and
adc
add
mov
pop
dec
mov
mov
imul
lret
dec
test
pop
or
addb
nop
clc
mov
in
or
cmp
arpl
xchg
inc
mov
ds
fwait
shlb
sub
xchg
inc
push
in
lret
lret
out
popf
mov
call
ficomps
sub
imul
xchg
jno
mov
lods
cmpsb
mov
ja
pop
mov
xor
and
js
mov
mov
dec
pop
xchg
call
jecxz
pop
add
push
push
xchg
mov
mov
xor
lret
sub
insb
xchg
sbb
add
cmp
dec
xor
xor
xor
shufps
fdivr
jae
cltd
popf
fwait
lods
dec
jo
scas
pop
ret
pop
push
dec
mov
fcmove
imul
or
add
dec
loopne
inc
cmp
xor
pop
fnstsw
jno
inc
dec
mov
leave
fldcw
add
cmpl
pop
push
xchg
mov
or
add
mov
sbb
in
fsubrl
cmp
jo
sub
mov
jb
inc
jecxz
mov
stos
push
and
fwait
loopne
popa
aam
rcl
imul
push
cmp
out
mov
adc
lods
and
xorl
mov
cmp
or
lock
cwtl
insl
pop
or
iret
push
cltd
loopne
rcrl
out
mov
es
dec
jnp
cmc
outsb
add
mov
and
lcall
cwtl
xor
adcb
int
mov
iret
sub
scas
test
and
in
fimull
ficoml
dec
push
xchg
out
inc
cmp
cs
jg
gs
jnp
xor
jb
enter
addr16
mov
xchg
sti
loope
loope
mov
in
pop
faddl
add
pop
test
xor
ret
shrl
icebp
aam
pop
push
orl
cmp
dec
add
push
sub
xor
mov
loope
jbe
std
test
cwtl
jbe
sbb
sbb
cmpb
mov
dec
lcall
push
int
and
or
jb
ljmp
ret
outsl
jp
pop
leave
pop
mov
mov
dec
fisttps
inc
cwtl
movsl
sub
les
xchg
cld
int3
dec
mov
fcomps
repz
lret
mov
pop
fmulp
sti
in
stos
cmc
in
jmp
lcall
add
les
pop
mov
sti
hlt
inc
mov
repnz
add
pop
popf
or
jae
pop
test
pop
add
leave
or
movsb
jmp
sbb
or
push
pop
out
mulb
insb
sub
and
mov
fs
and
je
push
loopne
mov
mov
es
xchg
mov
pop
mov
inc
add
cwtl
cmc
outsb
psubusw
movsl
ret
incb
or
jns
cmpsl
fstpt
mov
cmp
dec
sbb
mov
mov
movsl
test
add
shr
test
mov
pop
loope
pop
mov
fcompl
jns
stos
iret
mov
cmp
shr
pop
or
ficoms
dec
pop
ss
test
adc
les
xchg
mov
and
aaa
inc
fistpl
pop
loopne
dec
cmc
add
jae
ss
sub
rcrl
pop
mov
add
fsubrl
jmp
lods
aam
int3
mov
imul
mov
cmp
and
mov
bound
pop
nop
ljmp
in
pop
push
xchg
jle
cmpsb
lret
add
subb
shl
fwait
shlb
nop
int
mov
js
jge
xlat
push
or
sub
and
pop
in
pushf
das
jo
addr16
divb
adc
inc
dec
cmp
std
lds
pusha
dec
jle
adc
pop
and
xchg
xchg
mov
jne
pop
xor
xlat
pop
ret
in
push
pushf
out
and
sbb
sbb
adc
test
lret
sub
jae
into
popf
pop
adc
pop
cmp
roll
mov
xchg
popl
add
cli
shlb
mov
shll
or
arpl
inc
push
pushf
gs
pop
das
pop
adc
fldenv
push
pushf
xchg
in
test
sub
xchg
andb
push
dec
clc
inc
shll
loopne
pop
ret
aaa
pop
sbb
ds
xlat
xor
inc
stos
jno
jne
pop
inc
cmpsb
scas
mov
mov
sahf
push
cmp
outsl
call
fdivrs
jg
add
pop
mov
mov
clc
mov
pop
cmp
dec
inc
aas
ljmp
jb
mov
pop
daa
fidivrl
mov
pop
dec
xor
jge
movb
inc
and
rorb
cmp
and
add
cmc
mov
xchg
faddp
into
pusha
sti
dec
bound
dec
sbb
in
or
fsubs
or
clc
pop
jo
aas
sub
jge
inc
in
les
les
xlat
outsb
addr16
movsl
rorl
in
jmp
dec
lds
mov
push
pop
xor
sbb
ds
dec
icebp
ja
pop
add
shrb
test
ficomps
mov
mov
stos
out
jg
arpl
xchg
mov
xchg
andb
sbb
xchg
aaa
mov
pop
imul
jle
pop
push
pop
flds
push
mov
mov
cwtl
sub
sub
cmp
pop
mov
lret
into
icebp
adc
dec
xor
out
imul
and
loopne
push
push
insl
pop
jno
aas
fidivrs
cltd
or
sub
push
xor
mov
xor
pop
xrelease
js
push
mov
adc
inc
sub
rcr
fsubrs
xorb
sub
arpl
xor
xor
pusha
bound
jecxz
roll
inc
mov
fisttpll
xchg
inc
and
xchg
xchg
cmc
in
and
dec
inc
cmp
lods
mov
cli
test
inc
cmp
pusha
cli
int3
scas
movsb
insb
inc
mov
pushf
scas
mov
out
mov
les
std
popf
push
icebp
sbb
mov
loope
repnz
mov
mov
in
pop
loopne
fstpt
push
data16
lcall
jae
xor
popa
mov
sbb
daa
daa
leave
js
jbe
jbe
imul
adc
xchg
int
testl
mov
dec
push
out
in
mov
inc
mov
cltd
outsb
lea
mov
inc
pop
sub
or
mov
xor
xchg
fwait
test
pop
and
xor
xor
into
mov
aas
jle
enter
dec
inc
dec
xor
fcomps
fbld
inc
mov
stos
test
pusha
frstor
mov
sub
dec
jo
es
ficoml
mov
lcall
inc
inc
jle
pop
outsb
cmp
popa
sbb
imul
fcmovne
repz
pop
xchg
add
movsl
sbb
pop
test
jmp
addb
push
sbb
inc
fadd
sbb
lock
in
outsb
rcrb
repz
dec
popf
movl
mov
mov
icebp
push
jnp
mov
test
jp
mov
adc
fcomp
push
and
jle
xchg
adc
and
fs
idivl
push
push
aas
jmp
inc
pop
repnz
lret
add
pusha
out
shr
mov
addb
mov
aam
sbb
sub
add
daa
fwait
repnz
dec
inc
ss
pushf
pop
push
xchg
mov
mov
dec
out
inc
daa
hlt
imul
pusha
push
mov
ljmp
push
add
iret
jg
out
popa
pop
pop
xchg
enter
inc
scas
push
ret
xorb
