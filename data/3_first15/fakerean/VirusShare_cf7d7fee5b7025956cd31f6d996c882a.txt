adc
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
lea
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
xor
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
mov
jl
mov
mov
lea
push
call
mov
mov
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
lea
xor
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
lea
mov
push
push
call
pop
pop
pop
pop
add
ret
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
lea
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
add
shl
push
call
mov
mov
mov
mov
lea
mov
shl
add
shl
mov
shr
rep
mov
mov
and
rep
mov
sub
lea
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
lea
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
xor
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
mov
jl
mov
mov
lea
push
call
mov
mov
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
lea
xor
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
add
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
daa
adc
dec
adc
insl
adc
jl
shlb
test
test
and
adc
push
adc
and
and
add
and
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
mov
inc
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
inc
repz
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
jge
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
sbb
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
aad
inc
add
call
mov
sub
inc
add
add
mov
add
cmp
jae
mov
mov
call
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
ja
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
in
inc
add
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
cmp
inc
add
pop
add
mov
nop
nop
nop
nop
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
enter
je
mov
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
mov
inc
add
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
enter
rcrb
push
nop
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
jmp
inc
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
ret
add
inc
and
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
jle
inc
add
inc
and
add
add
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
cmp
lods
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sbb
add
add
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
pusha
push
call
mov
mov
add
add
add
add
cwtl
lea
jge
jle
lods
add
loop
push
add
in
loope
mov
add
add
push
add
mov
add
push
push
push
push
push
lea
push
push
call
add
add
insb
out
in
fs
add
xchg
mov
faddl
cmc
add
add
add
add
rolb
pop
add
out
add
add
add
add
orb
inc
in
push
push
push
lea
push
push
push
push
call
xbegin
add
add
add
in
cmpsb
faddl
add
arpl
add
add
loope
lahf
xchg
jnp
mov
jp
lcall
add
ja
add
rol
add
lds
int3
mov
jp
xchg
into
add
add
addr16
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
push
stc
add
add
out
add
loop
fsubrl
add
lods
add
cltd
icebp
mov
xchg
mov
pop
add
add
ljmp
lcall
lcall
push
push
push
push
push
push
lea
push
push
push
call
mov
add
push
add
arpl
test
clc
lret
test
jge
addr16
arpl
idiv
add
out
clc
add
filds
jne
add
imul
xchg
test
add
add
out
lret
lahf
cmc
mov
jp
add
mov
push
push
push
push
lea
push
call
add
add
add
rcll
js
mov
add
pusha
cwtl
add
mov
arpl
shrb
lea
add
push
idiv
add
jle
out
add
test
add
add
add
repnz
add
mov
add
add
jp
add
add
xchg
push
fildl
loopne
in
call
call
push
push
push
push
push
call
add
add
jp
mov
xchg
cmp
shll
add
push
add
jle
add
mov
jge
add
loope
outsl
mov
add
int
add
jge
rorb
in
pop
push
call
push
lea
push
push
lea
push
push
call
mov
in
pop
add
add
fwait
add
xchg
aad
add
popa
lcall
lods
xchg
ret
movl
ljmp
sub
pop
jmp
ret
push
push
push
push
push
push
push
call
iret
add
add
xchg
clc
add
ja
rolb
add
lret
jge
std
push
arpl
cli
jl
add
add
iret
add
mov
pop
lcall
add
add
imul
jae
push
add
add
popa
add
lcall
inc
hlt
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
xlat
add
add
lret
in
mov
xchg
jns
push
aad
out
add
push
add
pop
fwait
into
add
lods
hlt
add
pop
hlt
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
jmp
cmpsb
add
add
add
rorl
popl
test
data16
add
test
aad
fnstsw
mov
lods
imul
jge
mov
jmp
in
loopne
add
push
push
push
push
push
push
call
add
fistps
out
add
add
add
pop
nop
add
les
jmp
cmpsl
scas
add
lock
jmp
add
add
pusha
iret
jb
test
andb
add
filds
add
mov
in
call
adc
add
call
pusha
add
pusha
pop
pop
add
notb
mov
add
jge
in
add
pusha
int
loopne
add
repnz
add
jo
outsl
add
add
mov
xchg
icebp
imul
sub
pop
add
mov
push
push
lea
push
call
mov
ficomps
les
mov
fldl2e
je
out
pusha
lcall
fldl
add
xchg
jbe
mov
mov
cld
add
cwtl
jae
popf
mov
push
aam
mov
add
add
lock
cmpsl
popf
sub
pop
xor
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
add
adcb
sti
bound
xchg
add
pop
add
xchg
add
in
xchg
mov
add
add
lahf
add
call
add
ret
xchg
mov
add
mov
in
loopne
lcall
les
add
push
push
rol
push
and
add
dec
xor
sub
sub
dec
not
shr
pop
add
ror
sub
pop
push
push
call
mov
aad
add
mov
add
add
add
add
popa
add
mov
mov
movsb
cwtl
data16
loopne
cmc
movsl
add
lahf
add
add
jbe
xchg
cwtl
jno
cli
test
addr16
mov
add
movsb
add
hlt
xchg
clc
pop
add
movsl
mov
movsl
mov
pop
add
hlt
fwait
mov
jp
in
clc
lcall
jne
push
push
push
lea
push
lea
push
push
push
call
add
out
add
pop
lods
outsl
loope
pop
fwait
add
icebp
lods
add
mov
fcomps
add
lods
cmpsl
add
add
popf
pop
cmpsb
in
popa
xchg
iret
fisubl
add
add
and
sahf
add
push
add
lcall
shrb
add
push
and
mov
push
push
lea
push
push
push
push
push
call
lret
iret
fiadds
roll
add
add
popl
enter
les
xchg
lret
xchg
pop
add
roll
add
add
add
lahf
in
add
int
data16
add
push
add
arpl
add
les
add
add
mov
sahf
add
add
lcall
inc
call
push
push
push
call
add
stos
add
add
cmpsb
xchg
mov
add
imul
lds
call
cmpsl
jl
test
add
clc
add
add
add
outsl
add
mov
pop
movsl
mov
add
add
fiadds
icebp
mov
add
aam
jmp
add
add
add
lcall
inc
call
push
lea
push
push
push
lea
push
push
push
call
out
fimull
jb
mov
jns
in
mov
pop
js
loop
in
add
lret
hlt
cli
fadds
mov
fiadds
fidivrs
xchg
jmp
jle
add
push
call
add
aad
add
mov
add
movsb
add
push
je
stos
ret
add
sub
pop
pushl
pushl
push
push
push
lea
push
push
push
push
push
lea
push
push
call
hlt
cmpsb
loope
pop
add
add
jp
add
mov
mov
loopne
jp
popf
jecxz
add
xchg
add
mov
leave
jnp
add
loope
into
lcall
mov
mov
add
add
add
xchg
lret
add
add
movsb
sub
pop
call
push
lea
push
call
mov
mov
mov
jnp
add
add
add
aad
push
add
popa
add
idivb
ret
mov
mov
add
add
mov
fisubl
aad
mov
add
add
sub
pop
pushl
push
push
lea
push
call
mov
jmp
add
loope
lods
xchg
add
add
add
add
mov
add
mov
sub
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
push
call
addr16
add
data16
pop
add
add
add
roll
add
add
mov
stos
add
sub
pop
call
push
push
ror
sub
dec
push
or
inc
add
not
add
sub
ror
sub
add
pop
pop
push
push
push
push
push
push
call
cmpsb
add
lcall
je
cmpsb
add
jnp
add
sti
stos
lahf
mov
jns
aam
addr16
test
fnsave
mov
add
mov
ret
out
add
jecxz
mov
add
add
filds
add
ljmp
jnp
insb
add
cmpsl
cwtl
add
in
in
call
pushl
push
push
push
push
push
push
push
lea
push
call
pop
add
add
mov
scas
pop
add
cmpsb
add
add
js
stc
ror
xchg
les
add
out
mov
popf
cmc
add
repnz
add
mov
testb
add
add
lcall
add
add
push
push
lea
add
push
push
pop
add
add
sub
rol
rol
sub
xor
pop
rol
pop
push
push
call
add
add
add
mov
add
mov
xchg
popf
add
add
add
add
xchg
add
add
xchg
mov
add
sahf
add
lcall
push
push
lea
push
push
lea
push
call
js
add
add
add
imul
in
cmpsl
add
mov
add
jo
cmpsl
mov
ja
in
pop
clc
mov
mull
mov
in
lock
lcall
rorb
rcll
call
add
add
push
loop
jbe
icebp
add
movsb
jnp
mov
mov
rcrb
add
add
jne
lret
add
add
add
pop
jl
add
in
add
cmpsb
add
mov
int
push
pushf
jbe
add
popf
icebp
fiadds
xchg
mov
clc
lcall
push
push
lea
push
push
call
add
out
add
add
add
add
add
mov
addb
lds
add
roll
push
mov
in
stc
add
mov
pop
add
add
lret
add
imul
ljmp
rolb
push
shrl
sub
pop
push
push
push
push
call
mov
pop
add
clc
mov
push
add
outsl
xchg
mov
mov
mov
hlt
lcall
pop
hlt
push
push
push
push
push
push
call
iret
add
add
add
pop
add
add
mov
add
into
add
add
in
add
add
gs
in
jge
jbe
push
nop
add
mov
pop
mov
popf
add
add
add
scas
mov
sub
pop
add
push
push
push
push
call
add
icebp
push
arpl
rolb
mov
add
add
in
js
add
add
aad
add
mov
add
outsl
add
add
add
andb
lcall
ret
add
add
push
push
push
push
call
pop
movsl
mov
pop
jae
add
sahf
mov
add
add
add
add
pop
pop
loop
add
add
add
addl
lret
ja
lods
jns
imul
mov
add
sub
pop
add
push
push
call
in
add
rolb
add
jne
add
cmpsl
cmc
add
add
mov
movsb
add
mov
add
xchg
add
push
cwtl
add
imul
into
push
mov
add
test
in
clc
pop
mov
xor
push
push
lea
push
push
lea
push
call
repnz
xchg
mov
mov
jmp
add
add
test
add
add
loopne
push
mov
addb
add
pop
add
push
push
add
sub
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
jbe
notb
call
enter
rorb
xchg
loop
jmp
in
jge
add
add
add
mov
add
mov
addl
movl
push
push
push
push
push
push
push
call
out
add
add
data16
lcall
outsl
insb
ljmp
mov
add
push
add
clc
cmpsl
push
bound
sbb
add
fsubr
pop
pop
add
sub
pop
mov
xor
push
lea
push
push
call
push
add
add
push
lret
add
add
cmpsl
shl
popa
add
add
add
aam
sti
arpl
add
mov
enter
jle
push
xchg
outsl
xchg
int3
sub
pop
add
push
push
lea
push
push
push
push
call
mov
aam
jmp
add
add
in
add
add
loop
add
addb
fisttps
add
mov
shll
stos
mov
mov
add
add
jp
cmpsb
push
pop
arpl
jnp
mov
add
in
call
lea
push
push
push
push
push
push
push
call
add
add
jp
stos
testl
pop
lcall
add
add
add
rcrb
mov
add
loope
jmp
lods
jl
popl
add
add
add
add
mov
lea
icebp
jmp
sub
pop
mov
xor
push
push
lea
push
lea
push
call
add
leave
in
fcmovne
aad
add
add
pusha
add
icebp
pop
add
ret
add
call
add
mov
rolb
add
sub
pop
push
mov
push
push
push
push
push
lea
push
call
add
mov
ja
add
mov
add
jmp
add
jbe
add
add
aad
lds
xchg
lods
add
iret
mov
jnp
mov
jle
add
jmp
addb
add
icebp
mov
lcall
push
sub
pop
xor
push
push
push
push
push
lea
push
push
push
call
js
add
add
add
add
jmp
add
fwait
bound
cmpsb
out
nop
add
add
add
add
add
scas
lret
add
add
add
add
rcl
add
fwait
call
in
iret
add
add
add
add
add
stos
mov
lret
sub
pop
add
push
push
push
lea
push
push
lea
push
push
call
mov
cmpsb
cmpsl
mov
cmpsl
add
mov
add
add
je
imul
xlat
add
sub
mov
xchg
js
sub
pop
sub
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
add
cwtl
mov
add
add
add
cwtl
mov
add
aad
mov
add
pop
add
lds
add
rolb
pop
les
add
add
arpl
xchg
enter
add
add
lcall
rep
push
push
push
push
push
lea
push
push
push
call
in
popa
movsb
insb
mov
xchg
add
mov
jne
hlt
add
aam
add
ret
add
add
add
mov
push
add
pop
fwait
out
cmc
add
xchg
popl
out
add
popf
sub
add
insb
add
add
push
cli
add
sub
pop
pop
mov
push
push
push
push
push
push
push
call
add
js
add
add
mov
add
add
add
push
push
jecxz
clc
add
into
mov
mov
loope
lcall
in
in
add
add
push
push
push
push
lea
push
push
call
jmp
add
iret
lea
jo
add
add
rcrb
add
add
out
push
fucomp
add
add
cld
mov
pop
add
pushaw
add
fwait
jmp
add
add
add
bound
jp
add
fiaddl
lcall
ret
cltd
inc
add
mov
xor
push
push
push
push
call
add
mov
pushf
add
in
filds
lods
add
xchg
push
add
fucomi
add
add
add
add
call
mov
movsb
add
jno
add
in
lock
lcall
push
and
repnz
adc
push
push
push
push
push
push
push
call
jmp
add
rorb
add
add
sti
imul
lock
add
add
add
in
add
add
call
icebp
add
add
add
add
je
mov
xchg
add
dec
sub
jno
adc
adc
push
push
push
lea
push
call
add
into
mov
imul
mov
xchg
add
add
arpl
fisttps
lds
add
add
jecxz
popa
outsl
out
in
out
add
sti
fildl
stos
out
jge
jmp
add
add
xchg
popf
fadds
les
add
pop
sub
pop
xor
push
push
push
push
push
lea
push
call
jl
mov
add
add
mov
mov
pop
add
rcll
mov
aam
jl
add
pop
mov
mov
jbe
cmpsb
add
mov
rcl
ret
call
add
push
lea
push
lea
push
push
push
push
lea
push
call
jns
leave
mov
cltd
jl
lahf
add
in
add
add
xchg
add
fildll
push
jne
stos
loopne
popf
add
mov
test
lret
add
outsl
out
lock
add
call
lock
int
bound
pushf
jge
add
add
mov
add
sub
pop
add
push
lea
push
push
push
push
push
push
call
pop
jp
add
nop
stos
add
lods
lods
mov
add
add
clc
mov
add
mov
bnd
add
push
sub
pop
add
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
jmp
pusha
xchg
fnsave
ja
int3
roll
mov
add
into
div
outsl
scas
leave
add
mov
mov
mov
add
jle
xchg
add
mov
add
cltd
shlb
roll
loope
mov
add
je
jns
sub
pop
mov
push
push
lea
add
not
push
sub
add
shr
sub
ror
shr
sub
pop
ror
pop
push
lea
push
call
hlt
add
push
mov
rclb
fstpl
aad
add
loopne
pop
add
add
cmc
add
mov
fs
add
jns
add
add
add
add
jp
cli
pop
add
mov
nop
add
mov
xchg
sub
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
call
jo
add
pop
je
add
add
add
add
rcrb
in
push
add
add
sahf
add
add
add
jb
add
std
movsb
xorl
add
push
push
push
push
lea
push
call
pop
rcl
ljmp
xor
add
xchg
add
add
add
add
add
add
mov
add
cmc
xchg
mov
cltd
add
shll
in
lcall
add
ret
add
fnsave
fisubrl
fcoml
rolb
add
not
lea
sub
sub
pop
shr
ror
pop
push
lea
push
push
push
push
push
push
call
add
int
addb
bound
push
add
add
add
out
mov
cmc
add
add
sti
enter
add
jle
testl
lea
push
push
push
push
push
push
push
lea
push
call
icebp
out
leave
mov
add
push
testb
add
add
lea
add
mov
add
shl
push
mov
lret
add
mov
pop
push
push
lea
push
push
call
insb
aam
loop
lahf
fiaddl
add
rcrb
add
testb
add
mov
pop
jbe
sarl
jl
repnz
add
nop
jo
add
mov
fcom
sti
add
int3
loop
add
cld
add
add
add
hlt
lahf
mov
insb
fiadds
sub
pop
call
push
lea
push
push
push
push
push
call
jge
pop
iret
add
jle
movsb
js
add
out
stc
fiadds
xchg
add
add
jmp
lods
icebp
fiadds
ljmp
sahf
sti
add
add
nop
call
add
mov
add
add
in
sub
pop
mov
push
lea
push
push
push
call
mov
leave
add
ficoml
mov
out
popa
add
add
add
add
cli
xchg
addl
add
add
add
pop
jecxz
pop
gs
out
imul
popa
mov
add
mov
cld
insb
jmp
add
add
mov
lret
in
lock
push
push
lea
push
call
jns
xchg
mov
add
clc
add
push
push
add
std
testl
push
test
add
add
fiadds
add
addb
in
incb
mov
pop
jb
add
add
mull
xchg
roll
add
push
add
pop
mov
in
clc
pop
push
mov
push
push
push
push
call
mov
fadds
in
add
mov
jnp
std
pop
fwait
add
xchg
add
aam
stos
std
add
add
mov
cmc
mov
bound
cltd
mov
out
add
xchg
iret
bound
shr
add
lcall
pop
in
push
push
push
push
push
push
push
call
mov
mov
add
int3
pop
jo
mov
faddl
fimull
testb
add
loopne
outsl
add
or
add
add
push
std
add
lcall
ret
add
add
push
lea
push
push
push
push
push
push
call
clc
std
addl
popa
scas
add
mov
jb
add
add
imul
add
add
into
lret
sub
pop
add
push
lea
push
lea
push
push
push
push
call
lock
lcall
test
lods
fucomi
add
out
lds
xchg
push
add
ljmp
add
in
call
xor
push
shr
sub
sub
pop
add
push
push
push
lea
push
push
push
push
push
call
clc
je
add
js
divl
jbe
mov
shrb
sahf
add
add
add
add
add
add
push
lret
push
loopne
ror
js
add
loope
xchg
add
add
ljmp
cli
mov
iret
stc
pop
mov
jne
add
add
leave
out
sub
pop
mov
xor
push
push
lea
push
push
push
push
push
lea
push
push
push
call
aad
mov
add
add
xchg
scas
add
jno
pop
cmc
add
add
hlt
mov
add
mov
jl
in
fdivr
lcall
lock
push
rol
sub
pop
mov
push
push
push
push
push
push
call
add
pop
mov
add
in
lods
bound
pusha
add
in
add
pop
add
jge
add
jmp
lcall
lcall
or
push
push
push
lea
push
push
push
call
add
add
add
into
stos
add
push
add
fwait
lret
fidivrs
mov
add
int3
mov
add
add
popa
fwait
add
insb
sub
pop
add
push
lea
push
push
lea
push
call
lea
pop
je
add
negl
addl
ret
sti
mov
pop
mov
add
rcrl
jo
pusha
mov
add
add
xchg
add
add
lds
add
add
add
mov
add
xchg
add
xlat
jbe
lds
add
add
movsb
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
fstl
out
push
add
aad
add
mov
add
out
add
je
addl
add
or
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
negl
push
add
add
add
xchg
mov
lret
mov
add
add
jmp
pop
lcall
add
add
mov
in
fcomps
les
add
push
push
push
call
add
fidivs
xchg
add
add
loope
into
add
mov
std
mov
add
add
jmp
clc
add
in
cld
sahf
push
add
add
lcall
leave
je
push
add
add
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
push
call
jle
add
bound
add
mov
add
pop
cltd
add
leave
mov
mov
rcl
add
jecxz
jb
jmp
add
test
popa
add
sub
mov
xlat
ftst
repnz
jle
in
loopne
mov
xor
push
pop
add
push
push
call
hlt
add
outsl
xchg
lret
test
mov
cmc
in
jmp
test
add
mov
mov
jae
add
add
add
add
hlt
add
add
add
aam
mov
testb
cmc
popf
add
lcall
jne
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
xchg
fwait
add
cli
add
enter
add
in
add
jle
add
add
mov
mov
cli
in
add
pop
mov
idivb
add
add
test
data16
test
lods
sub
pop
mov
xor
push
lea
pop
add
push
sub
pop
pop
push
push
push
push
push
push
push
call
pop
add
int3
add
lea
roll
add
rcll
test
imul
add
add
lods
cmpsl
lret
jl
mov
add
add
testb
mov
lcall
movsb
push
pop
mov
xor
push
push
push
push
push
call
mov
pop
mov
mov
cwtl
add
test
add
rolb
fcomip
add
add
add
add
add
add
scas
lret
int
nop
jecxz
add
add
add
xchg
push
in
in
lcall
leave
je
push
pop
mov
push
push
lea
push
push
push
push
lea
push
call
jmp
add
add
mov
sti
add
mov
push
push
add
add
cmpsl
mov
pop
add
sti
scas
add
jne
test
push
mov
mov
mov
mov
sub
pop
add
add
push
pop
rep
push
inc
shl
pop
pop
push
push
not
add
inc
not
push
and
add
sub
sub
rol
pop
rol
dec
pop
push
push
push
push
lea
push
push
push
push
push
push
call
addr16
pop
pop
loop
roll
lock
mov
add
cltd
jno
nop
ja
aad
push
lahf
fiaddl
push
test
jne
jne
aam
mov
jo
out
add
push
jnp
testl
mov
cmpsl
in
mov
add
pop
push
shl
sub
pop
mov
mov
push
push
push
push
lea
push
call
ffree
add
add
out
add
iret
popf
mov
add
add
mov
add
test
arpl
add
add
add
add
leave
loop
add
add
aad
div
jle
out
add
cltd
add
push
push
aad
xchg
sub
pop
mov
jmp
push
push
lea
push
push
push
push
lea
push
call
add
rolb
cli
js
popa
add
mov
add
shll
jecxz
movsl
add
add
hlt
add
stc
mov
popl
add
cmc
add
in
in
idivb
add
add
push
sub
pop
push
mov
push
sub
rol
pop
add
push
push
xor
pop
push
push
dec
dec
shr
rol
pop
push
push
push
push
lea
push
push
call
add
jbe
pop
add
jl
mov
cmpl
add
mov
add
popa
into
imul
add
xchg
out
int
cli
add
je
add
fwait
in
mov
filds
loope
mov
lcall
inc
cld
push
lea
push
push
push
push
push
call
int3
rolb
hlt
add
stc
mov
add
fldenv
add
in
add
fsubs
add
imul
mov
sub
pop
pop
pop
push
shl
not
lea
pop
pop
pop
push
add
sub
rol
pop
leave
push
ror
shr
dec
pop
ret
push
push
add
pop
mov
add
push
push
push
push
push
push
push
call
add
mov
icebp
jecxz
cmpsb
mov
mov
add
sti
out
xchg
fldl
fcmove
pop
add
les
jb
add
add
add
pop
movsl
stos
sti
imul
add
add
lcall
push
sub
ror
pop
push
push
sub
xor
xor
pop
push
push
inc
sub
pop
push
movl
push
pop
addl
push
inc
pop
test
je
push
lea
push
push
push
push
push
push
push
push
push
call
roll
add
addl
xorb
push
mov
push
scas
xorb
jb
cld
pop
add
hlt
xchg
add
shlb
pusha
add
loop
jecxz
enter
add
jmp
add
add
test
jb
clc
mov
lcall
inc
or
sti
lea
sub
ror
pop
pop
push
push
push
call
add
fdivr
std
jecxz
add
add
in
xlat
add
mov
cltd
pop
add
add
add
add
xchg
add
jecxz
popl
pop
pusha
ret
add
jns
insb
mov
roll
pop
fildl
mov
add
rorl
test
lods
add
ja
rolb
lcall
push
lea
push
push
push
push
lea
push
push
call
mov
imul
addr16
add
cmpsl
cld
push
shll
movb
pop
add
add
pushw
xchg
add
adcb
out
add
cmpsl
addr16
add
pop
jmp
sub
pop
pop
push
add
shl
lea
pop
pop
push
push
call
jmp
fbstp
add
xchg
add
add
add
pushf
lcall
mov
out
leave
add
add
add
jle
roll
add
pop
insb
sub
pop
leave
push
push
push
push
lea
push
push
push
call
ljmp
lock
xchg
push
add
jae
add
lea
mov
scas
add
leave
movl
scas
int
add
ficompl
add
lods
add
add
lea
popf
add
pop
mov
push
mov
shlb
popf
mov
ficomps
in
in
lcall
add
push
add
add
pop
push
push
push
lea
push
push
push
call
je
lock
xchg
filds
jae
push
scas
push
mov
add
int
mov
movl
add
fadds
leave
lret
in
mov
add
mov
clc
add
int
addl
sahf
ret
jp
xchg
add
leave
add
mov
add
xchg
addb
mov
add
push
push
push
push
call
push
add
into
add
lds
int
add
gs
out
jne
popf
cmpsl
add
in
movsl
out
lahf
into
cli
fdivrl
into
add
lods
jae
stc
faddl
mov
mulb
add
mov
rcrl
add
andl
pop
movb
cmpsl
pop
add
add
in
lock
push
push
shl
sub
pop
push
push
inc
sub
shl
pop
push
push
push
push
push
push
push
push
push
push
call
pushf
loop
call
in
cltd
mov
lods
add
out
cmc
idivl
mov
add
lahf
push
mov
fldl
pushf
mov
pop
push
sub
pop
push
push
not
pop
testl
push
push
push
push
push
push
lea
push
lea
push
call
add
loopne
mov
add
popf
les
mov
push
lds
xchg
pop
xchg
add
add
pop
addl
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
fstl
jnp
mov
mov
js
add
add
xchg
pop
add
jnp
fiaddl
nop
add
mov
pushf
add
add
add
add
fiadds
aad
mov
out
add
add
add
lcall
add
arpl
inc
lea
push
call
add
jmp
mov
add
js
shlb
jecxz
pop
add
jno
mov
repnz
xchg
test
pop
add
add
add
aam
mov
nop
data16
add
test
add
add
add
lea
stos
fstpt
add
call
add
fiadds
outsb
cli
decl
jmp
cs
std
jge
loop
add
mov
jmp
rcr
xchg
xchg
in
add
jb
mull
xchg
add
insb
rcr
add
std
pop
fwait
pop
add
add
add
push
pop
in
mov
add
add
add
fwait
add
loope
add
sub
pop
pushl
push
push
push
push
push
push
push
call
cmpsl
lahf
enter
mov
clc
popl
add
in
pop
shlb
mov
mov
add
mov
add
add
mov
shlb
mov
movsb
add
icebp
pop
mov
add
sahf
push
rolb
pusha
push
loope
leave
gs
out
sub
pop
push
push
push
inc
rol
shl
pop
call
push
pop
cmpl
jne
pop
push
lea
push
call
add
add
cmpsl
add
fstpl
pop
fidivrs
add
add
pop
testb
out
lret
cwtl
add
add
mov
fsubl
add
lock
lret
lahf
movsb
jmp
mov
add
xlat
jmp
add
add
add
loop
in
clc
pop
pop
pop
push
shl
not
pop
pop
push
push
lea
push
push
push
push
push
call
add
nop
add
pop
gs
add
add
in
pop
test
add
add
gs
add
add
add
add
add
pusha
test
sahf
pop
loope
add
add
add
js
sub
pop
leave
ret
push
lea
push
push
call
insb
add
outsl
loop
jmp
pop
imul
add
shl
add
mov
add
add
add
add
fsts
add
fwait
cltd
jne
add
mov
jb
in
hlt
lcall
push
push
lea
push
push
push
push
call
cmpb
push
in
clc
add
mov
pusha
push
add
mov
fs
push
add
xchg
pop
jmp
fnsave
add
loopne
mov
popl
push
push
nop
add
into
mov
add
notb
in
call
sub
sub
pop
add
push
push
sub
dec
pop
push
push
lea
push
push
push
push
push
push
push
push
call
aad
mov
mov
popa
incb
in
add
roll
add
fstpl
fmul
add
lea
add
push
push
push
call
jnp
xor
push
call
jns
pop
outsl
add
cmpsb
lret
xchg
add
lods
pop
stos
out
rcl
pop
in
add
push
pop
push
push
ror
add
xor
pop
movl
push
push
push
push
push
call
test
add
push
ret
stos
mov
fldl
add
mov
mov
fs
sar
fbld
shlb
fadds
lahf
popf
add
in
mov
add
mov
xchg
mov
mov
cli
add
add
add
addl
pop
call
push
lea
push
push
lea
push
push
push
push
push
push
call
lahf
leave
mov
repnz
rolb
add
add
add
in
sahf
add
push
push
add
fdivrs
add
fbld
lea
sub
pop
push
push
add
dec
pop
call
push
shl
ror
inc
sub
pop
subl
push
push
push
push
push
push
push
call
add
xchg
xchg
aad
out
in
add
out
add
ror
lods
jge
add
add
stos
add
ja
jle
jge
mov
sub
pop
cmpl
jne
push
rol
add
pop
pop
pop
push
xor
inc
shl
shl
pop
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
faddl
into
mov
xchg
xchg
jns
mov
call
add
rolb
mov
xchg
jl
rolb
add
xchg
lcall
add
add
add
mov
add
add
add
stc
jb
mov
push
xchg
add
lea
mov
sub
pop
pop
leave
push
push
push
lea
push
push
push
push
call
addr16
std
jge
push
add
add
add
add
add
mov
std
push
jl
pop
into
push
jmp
int
add
sahf
mov
xchg
movsl
sub
pop
ret
push
push
sub
sub
sub
pop
mov
add
push
add
sub
shr
sub
pop
push
push
rol
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
add
fdivs
repnz
cld
fs
addl
mov
stc
jle
pop
pushf
faddl
js
lods
add
scas
add
stos
add
add
jle
fcmovne
pop
add
add
add
add
out
xchg
decb
movb
push
not
ror
pop
push
push
push
push
push
push
push
call
add
add
xchg
fisubl
leave
bound
ret
add
data16
cmpsb
add
add
add
mov
add
jbe
mov
add
inc
or
push
push
call
gs
pop
sti
lahf
add
xchg
push
out
test
cwtl
mov
add
jb
enter
add
test
mov
mov
enter
gs
cld
add
xchg
pop
pushf
mov
add
mov
sub
pop
lea
push
push
push
call
cmpsl
push
popa
insb
pop
xchg
add
mov
add
cmc
xchg
mov
popa
lcall
gs
fadds
flds
stc
add
add
mov
clc
call
sub
pop
sub
mov
push
rol
lea
pop
shr
add
push
inc
pop
mov
push
push
push
push
push
push
push
push
call
add
xchg
roll
cltd
add
scas
pop
jle
lea
add
shll
add
jns
add
js
add
lahf
cmc
add
out
add
lcall
andb
or
push
push
lea
push
lea
push
push
call
push
jae
pop
add
popa
lea
outsl
mov
add
add
cltd
arpl
add
mov
add
shr
add
push
add
fs
add
clc
mov
pop
pusha
mov
pop
add
push
push
push
lea
push
push
lea
push
call
popf
lea
aad
jne
add
pusha
add
pop
push
pop
add
lods
ret
add
arpl
cmpsl
push
fdivs
rolb
add
add
roll
add
cwtl
mov
push
add
push
insb
add
xchg
int3
add
int3
lcall
inc
add
add
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
xchg
stos
leave
popf
add
int3
push
imul
lods
fs
add
jge
add
add
pop
xchg
add
add
add
add
outsl
mov
faddl
mov
sub
pop
cmp
jne
cmp
jne
push
inc
ror
add
pop
mov
movl
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
push
add
cld
add
ljmp
add
testb
add
rcl
add
jno
add
mov
fwait
add
lcall
jg
add
push
lea
push
push
push
push
push
push
push
call
jge
js
lret
xlat
add
add
jle
add
xchg
add
call
jbe
add
aad
add
add
add
jne
add
js
lock
movsl
in
add
mov
pop
xchg
add
add
jnp
fwait
add
pop
mov
push
push
push
call
cltd
mov
pusha
add
addr16
mov
std
add
shll
add
add
shl
test
mov
in
hlt
lcall
push
or
xlat
pop
sub
jne
mov
push
push
lea
push
push
push
push
call
lcall
arpl
add
insb
test
mov
add
add
add
out
rolb
rcrl
add
add
mov
xchg
mov
imul
loopew
add
in
call
add
add
push
push
lea
push
push
lea
push
push
push
push
call
aad
add
loopne
add
add
pop
jbe
add
add
add
add
pop
faddl
lods
ret
add
add
mov
fadds
testl
insb
fistpll
lods
insb
jne
lea
sti
sub
pop
jmp
mov
push
push
lea
push
push
lea
push
call
jp
add
in
add
pop
test
mov
lea
jb
icebp
push
out
xchg
add
sti
add
aam
xchg
add
nop
mov
in
add
mov
add
imul
mov
add
jmp
jge
fimull
xchg
add
mov
push
push
push
call
mov
add
add
pusha
imul
add
mov
int3
fdivs
mov
add
ficomps
add
std
lods
jae
add
add
add
cmpl
fnsave
add
cmc
int
add
mov
faddl
lds
add
sub
pop
cmp
jne
mov
push
lea
push
push
push
push
push
push
push
push
call
add
add
mov
fs
cmc
add
lods
movsl
fiadds
push
stos
xchg
test
mov
scas
add
mov
test
jae
add
mov
add
add
add
add
dec
mov
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
test
jnp
xchg
ret
call
add
xchg
add
add
stc
add
out
add
lcall
sbb
cld
push
push
push
push
push
push
lea
push
push
push
push
call
addb
add
add
add
add
movsl
loopne
mov
lods
les
xchg
stos
mov
lcall
add
in
imul
add
lcall
cmpl
jne
mov
push
rol
shl
pop
movl
push
shl
add
shr
pop
jmp
push
add
inc
pop
pushl
push
pop
pop
mov
push
push
push
push
push
push
call
push
lods
sahf
add
fadds
lret
pusha
stos
xchg
pop
cmpb
popf
cltd
rolb
jge
cmpsl
add
add
cld
jno
fadds
add
out
add
pusha
add
sub
pop
mov
mov
push
push
ror
push
or
inc
add
add
sub
not
ror
shl
pop
inc
sub
xor
pop
push
lea
sub
pop
push
call
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
shl
add
add
add
xchg
xchg
mov
je
pop
add
ror
lods
mov
xchg
lock
pop
filds
xchg
add
add
js
xchg
add
jl
clc
movsb
shlb
pop
fneni(8087
add
out
xchg
add
mov
cmpl
je
push
push
dec
rol
not
push
xor
add
inc
inc
sub
add
sub
add
shl
pop
inc
inc
pop
push
lea
push
push
push
call
lcall
jnp
add
fst
in
jne
add
addl
fadds
add
add
popf
mov
add
add
loop
pop
add
xchg
push
pop
add
push
enter
add
add
add
add
aad
mov
cltd
mov
add
stos
mov
sahf
mov
sub
pop
push
push
add
add
pop
call
push
push
call
leave
faddl
add
lock
in
into
add
ficoms
add
add
mov
in
xchg
pop
call
add
add
mov
add
rolb
rolb
add
mov
fldl
lcall
js
int3
fldz
ret
ljmp
pop
push
push
sub
add
inc
lea
not
sub
pop
shl
pop
push
push
lea
push
push
push
call
add
addr16
pop
rolb
add
add
jp
mov
fld
shll
xchg
add
jecxz
add
xchg
add
add
icebp
add
in
scas
add
add
test
add
mov
xchg
mov
add
out
add
ja
add
call
push
lea
pop
cmpl
je
push
push
push
or
inc
add
add
sub
lea
xor
shl
pop
rol
pop
push
push
lea
push
push
push
lea
push
push
call
mov
ljmp
push
jno
shrl
jge
sti
add
rolb
fisubl
mov
add
xchg
int
movsb
jb
add
add
add
mov
jecxz
ret
pushf
mov
incb
jge
loop
pop
hlt
lahf
xchg
add
add
clc
add
cltd
fiadds
lcall
call
push
not
xor
ror
pop
cmpl
je
push
push
xor
add
shl
push
and
add
add
sub
add
pop
inc
add
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
int3
stos
cld
push
mov
add
jns
lea
mov
add
push
fcoms
gs
jmp
test
out
mov
add
jo
add
add
add
xchg
pop
add
xchg
add
mov
jle
pop
add
add
clc
add
sub
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
push
add
add
add
mov
ret
add
add
add
add
xchg
jbe
add
outsl
mov
cmpsb
push
fwait
add
add
icebp
loope
std
add
mov
call
cmpl
je
push
push
xor
push
and
add
sub
ror
xor
sub
ror
pop
add
shl
pop
push
push
lea
push
push
lea
push
push
push
push
call
xchg
out
loop
add
test
fwait
adcb
ret
mov
add
cmp
add
add
add
xchg
addb
add
add
mov
add
add
int3
add
push
add
fadds
cltd
add
mov
add
add
jl
roll
add
sub
pop
push
call
push
push
push
push
call
push
add
nop
outsl
jecxz
mov
stos
arpl
cld
je
pop
notb
add
lahf
add
out
add
jno
add
jle
add
cmp
or
int3
je
push
push
inc
push
xor
add
ror
shl
add
sub
shl
add
pop
shl
pop
push
dec
rol
lea
pop
push
push
push
push
lea
push
push
call
stc
pop
add
aad
push
mov
out
jmp
mov
mov
cltd
scas
add
pusha
loopne
addb
add
push
cwtl
bound
add
bound
push
out
pop
mov
add
add
enter
mov
fnstcw
add
cmpl
je
push
push
not
ror
dec
push
sub
add
sub
ror
shr
shr
pop
add
pop
push
push
call
mov
faddl
cli
gs
lds
in
add
fldl
mov
loopne
add
scas
add
add
movsl
fldl
add
add
loop
add
add
movsb
push
add
loope
lret
add
add
scas
add
mov
sub
pop
push
push
push
call
add
add
popf
add
into
fisttpl
add
jmp
add
pop
imul
fdivr
pusha
enter
out
rolb
pusha
loopne
ljmp
clc
lcall
adc
add
push
shr
rol
lea
pop
cmpl
je
push
push
sub
push
or
not
add
sub
add
shl
sub
lea
pop
xor
dec
shr
pop
push
push
push
call
add
mov
pop
add
mov
add
mov
xchg
data16
add
jo
cmpsl
lcall
icebp
lret
add
mov
in
hlt
lcall
push
add
not
lea
pop
call
cmpl
je
push
push
add
not
dec
push
or
not
add
lea
add
shr
sub
sub
shr
xor
pop
add
pop
push
push
lea
push
push
call
les
mulb
cli
add
clc
rclb
add
pop
in
outsl
add
loope
in
lock
lcall
push
push
push
lea
push
push
push
push
call
imul
add
scas
stos
add
xchg
add
jl
add
imul
lahf
mov
add
add
testb
add
cmpsl
sub
pop
call
cmpl
je
push
push
shr
ror
xor
push
sub
add
shl
shl
sub
rol
pop
inc
ror
inc
sub
pop
push
lea
push
push
lea
push
call
iret
jmp
cld
add
mov
add
flds
add
mov
add
call
add
mov
sub
pop
push
push
add
not
rol
sub
pop
call
push
shl
sub
xor
pop
cmpl
je
push
push
lea
push
and
add
add
sub
not
sub
xor
xor
pop
add
pop
push
lea
push
push
lea
push
push
lea
push
push
push
call
ljmp
add
add
add
scas
push
imul
add
add
mov
cltd
call
andl
xlat
out
mov
add
mov
jge
outsl
add
pop
cli
out
add
add
sub
pop
push
call
push
lea
push
push
push
lea
push
push
call
imul
push
add
mov
add
add
add
aam
test
add
test
incb
shll
into
loop
fldl
mov
cli
xchg
push
add
lods
test
xorb
lods
add
call
cmpsl
add
add
mov
mov
lcall
js
jmp
les
je
push
push
xor
sub
dec
xor
push
or
inc
add
add
shl
shl
rol
sub
sub
pop
dec
pop
push
lea
push
lea
push
lea
push
call
out
cmc
add
hlt
fildll
in
push
add
shll
add
scas
add
in
add
push
icebp
pop
push
flds
lcall
lock
lcall
push
push
call
popa
popf
jbe
popf
in
xchg
cltd
cwtl
pop
ror
add
add
push
pop
call
mov
add
int
jle
add
add
nop
fstl
in
mov
test
or
add
popl
add
push
add
aad
popa
outsl
add
lcall
fbstp
mov
push
push
call
add
lds
push
stc
rolb
arpl
add
xlat
add
jns
mov
mov
icebp
push
imul
add
add
js
xor
pop
ret
xlat
add
add
mov
push
push
lea
push
push
lea
push
push
push
call
mov
add
mov
insb
sahf
push
xchg
testb
loope
add
loopne
leave
pop
push
movl
add
bound
out
mov
add
mov
add
fmulp
xchg
sub
pop
mov
push
xor
pop
movl
push
lea
push
call
incb
jbe
je
faddl
insb
cwtl
sahf
add
arpl
pop
add
add
in
add
add
lock
arpl
add
jle
add
in
push
popf
sub
pop
jmp
push
shr
ror
pop
xor
push
ror
pop
pop
pop
push
push
push
call
nop
add
add
ja
cld
add
jmp
add
add
add
out
lds
push
mov
mov
jb
add
mov
fadds
lcall
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
jne
std
add
add
add
add
fs
push
fcmovne
push
pop
jo
add
mov
test
add
lock
movsl
add
add
imul
out
xchg
mov
clc
mov
add
add
add
leave
fstpl
jecxz
data16
jl
mov
aad
mov
sub
pop
leave
push
sub
pop
ret
push
push
not
ror
pop
mov
push
lea
push
push
push
call
add
adc
std
add
rcrl
add
cltd
outsl
cli
movsb
into
add
cli
add
int3
mov
add
add
jge
js
in
lock
lcall
in
push
rol
pop
cmpl
jne
push
push
rol
push
or
inc
add
lea
sub
add
sub
inc
rol
pop
pop
push
lea
push
lea
push
call
mov
push
add
aam
pusha
jge
add
icebp
mov
enter
jge
add
testb
fildl
add
jne
push
xor
shl
sub
pop
call
push
push
push
push
lea
push
call
test
fcmovbe
ja
jno
icebp
int
mov
pop
jno
xchg
mov
fldcw
add
jnp
mov
xchg
add
jbe
mov
cli
jno
mov
shll
aam
sub
pop
push
push
lea
push
push
push
call
push
out
add
mov
add
add
call
test
push
mov
lock
mov
popa
test
notl
add
loopne
add
mov
add
lahf
scas
in
in
lock
call
push
push
push
push
lea
push
lea
push
push
call
add
add
add
pop
add
add
call
fiadds
add
sbb
roll
cltd
scas
test
add
lcall
jp
add
push
push
push
push
lea
push
push
call
add
add
add
add
add
add
clc
add
out
mov
add
add
add
lods
add
mov
enter
lods
incb
mov
add
fstpl
add
fcomps
call
add
test
push
push
push
push
push
call
add
add
add
pop
iret
add
add
add
shrl
mov
add
xchg
add
stc
add
stos
je
sub
pop
cmpl
jne
push
push
push
lea
push
lea
push
push
call
add
rcrl
pushf
add
add
jne
add
into
fisttpl
pop
add
cmpsb
add
out
xchg
popl
add
push
mov
call
leave
add
push
sub
ror
pop
pop
push
lea
push
call
add
mov
lock
jecxz
jno
add
mov
aam
stos
pop
fbstp
rolb
cwtl
add
add
pop
push
lea
push
lea
push
call
addr16
test
cli
jnp
add
std
add
addl
add
add
lahf
imul
add
popa
xchg
add
add
faddl
add
iret
jb
loope
mov
pop
pop
push
push
lea
push
push
call
mov
std
jle
jle
rorb
add
lcall
xchg
add
addr16
std
shrl
fnstenv
lock
lcall
add
push
xor
not
pop
ret
push
sub
not
lea
sub
pop
jmp
push
add
ror
pop
cmpl
jne
push
push
lea
add
push
sub
add
add
sub
pop
dec
sub
pop
push
not
xor
pop
pushl
push
push
push
push
lea
push
push
call
lods
pop
add
imul
add
fwait
add
bound
clc
add
movsl
add
movsl
cld
incb
add
push
add
mov
lods
push
leave
imul
std
test
out
lahf
add
mov
je
add
mov
push
mov
add
jge
sub
pop
call
push
not
ror
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
lock
bound
lea
popa
add
movl
add
lcall
add
pop
add
add
add
add
lret
lods
cmpsb
add
add
lahf
testb
cld
incb
fldl
xorl
add
add
sub
pop
call
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
pushf
jbe
filds
fidivl
add
jecxz
fwait
in
fildll
xchg
mov
movsl
imul
add
rolb
arpl
loopne
mov
add
mov
push
add
xchg
add
mov
movl
mov
mov
push
lea
push
push
push
lea
push
push
call
add
leave
gs
out
insb
add
loopne
add
jne
xchg
add
movsb
add
aad
add
add
add
add
mov
lcall
jge
add
test
sbb
push
push
push
push
lea
push
call
add
pusha
add
push
loope
add
stc
iret
add
xchg
lahf
shr
mov
movsb
mov
shl
addl
lods
test
add
pusha
lods
add
rolb
add
add
add
push
add
rol
dec
pop
mov
push
push
push
inc
rol
not
inc
push
or
inc
add
shl
not
sub
shr
lea
xor
pop
dec
inc
pop
push
push
push
push
push
push
push
push
call
std
cmpsl
jp
jno
popl
add
xchg
in
std
mov
data16
add
add
push
lods
jl
mov
in
add
rclb
pop
add
mov
jmp
sub
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
push
call
mov
roll
mov
shr
add
add
imul
filds
xor
loop
out
jmp
fwait
loopne
insb
imul
add
mov
add
add
fdivr
lcall
cmp
add
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
jns
addb
xchg
clc
pop
movsl
stos
add
add
imull
clc
add
push
out
xchg
icebp
mov
add
sub
pop
call
push
push
inc
push
push
pop
add
inc
ror
not
sub
sub
not
ror
pop
add
pop
push
xor
shr
pop
pushl
call
push
xor
pop
call
push
push
shl
push
and
add
sub
inc
inc
rol
pop
lea
inc
add
sub
pop
push
sub
xor
dec
pop
pushl
push
not
pop
call
call
push
push
shr
add
add
push
sub
add
inc
sub
sub
add
pop
ror
dec
lea
pop
push
push
lea
push
push
push
call
add
fildl
add
add
rcl
add
push
data16
add
test
add
cld
data16
add
lcall
jne
call
push
xor
pop
call
push
push
lea
xor
add
ror
push
or
inc
add
rol
lea
sub
not
pop
rol
pop
push
add
dec
dec
add
pop
pushl
push
push
lea
push
push
call
add
ja
mov
add
add
add
pop
mov
hlt
push
add
testl
add
jno
jecxz
add
fiaddl
in
add
icebp
ficoms
enter
add
fs
add
add
fwait
lret
addl
call
push
push
not
add
dec
push
sub
add
inc
ror
shr
ror
sub
xor
rol
add
shl
pop
dec
pop
push
push
push
lea
push
push
push
push
push
push
call
pushf
loope
jno
add
add
push
mov
imul
mov
subb
add
roll
sub
pop
pushl
push
push
push
lea
push
push
call
into
test
addb
pushf
push
fldl
add
in
jbe
and
cmc
pop
fcomps
int3
fsubrl
rcr
in
add
loope
add
add
les
xchg
mov
add
add
lea
add
xchg
jle
imul
rolb
add
mov
loop
in
in
lcall
pop
sub
add
pop
jge
lahf
push
push
push
call
sub
adc
gs
add
lret
push
sti
push
popa
cmc
jae
jmp
pop
in
leave
mov
add
pop
loopne
in
add
loope
movsb
jb
add
rolb
add
add
push
xchg
aad
mov
stos
ljmp
leave
in
test
sub
pop
call
push
push
inc
push
xor
add
rol
ror
sub
sub
sub
shr
inc
inc
pop
shr
pop
push
dec
sub
sub
shl
pop
pushl
call
push
sub
sub
rol
pop
call
push
push
lea
lea
shr
push
xor
add
rol
rol
not
sub
not
inc
rol
pop
shl
xor
pop
push
push
push
lea
push
lea
push
lea
push
push
call
mov
add
je
std
add
call
add
lahf
jge
in
in
xchg
add
stos
push
fcmovb
add
add
cli
fs
add
stos
imul
add
jp
xorb
add
roll
add
les
pop
add
add
lcall
jne
call
push
push
lea
push
push
call
out
test
fcoms
add
add
mov
pop
fwait
int3
mov
lods
push
in
in
add
mov
add
rolb
test
aam
xchg
addb
add
out
push
hlt
loop
add
add
hlt
mov
jae
add
add
mov
xchg
int
frstor
sub
pop
call
push
push
sub
add
shr
push
sub
add
sub
lea
sub
add
pop
dec
add
xor
xor
pop
push
ror
lea
pop
pushl
push
shr
shr
pop
call
call
push
push
dec
add
push
push
pop
add
sub
add
shr
sub
rol
pop
add
lea
inc
pop
push
push
lea
push
push
push
push
call
jmp
add
stos
test
xchg
jecxz
add
add
les
cld
in
ret
je
flds
add
pushf
lcall
pushl
call
push
push
lea
push
push
push
lea
push
push
call
add
add
in
loope
add
out
add
add
xchg
hlt
fwait
add
add
mov
fiadds
add
add
mov
add
fwait
jle
lods
add
insb
addl
scas
ja
cwtl
aad
add
add
scas
fistl
mov
mov
push
addb
and
call
lea
push
push
lea
push
call
lods
lcall
iret
js
movb
fistl
mov
add
testb
popf
gs
add
add
out
add
add
fiadds
lcall
shrb
push
cmp
testb
inc
sub
add
add
pop
ror
rol
inc
pop
push
shr
pop
pushl
call
push
sub
add
pop
call
push
push
rol
lea
push
and
add
lea
sub
sub
lea
dec
pop
sub
xor
rol
pop
push
shr
dec
pop
pushl
call
push
ror
pop
call
push
push
dec
sub
push
sub
add
rol
sub
add
pop
add
not
shr
pop
push
push
push
lea
push
lea
push
push
push
push
call
xchg
movl
fwait
stc
jl
add
add
xchg
push
jge
add
lahf
add
mov
jge
push
stc
add
cwtl
adc
in
loopne
lcall
jne
push
not
not
pop
call
push
sub
shl
pop
call
push
shl
shl
shr
pop
lea
push
push
sub
shl
add
push
and
add
shr
sub
ror
sub
xor
xor
pop
sub
pop
push
push
lea
push
push
push
push
push
push
call
mov
add
add
cli
shrl
add
insb
add
add
add
add
add
add
add
add
rolb
add
add
fdiv
add
movsb
add
repnz
add
leave
cld
cld
addl
mov
xchg
pushf
add
loopne
pushl
push
lea
push
push
call
mov
lds
add
add
add
scas
push
mov
aam
add
add
imul
add
hlt
add
lcall
add
movsl
mov
add
add
pop
stos
ret
hlt
pop
call
push
push
push
lea
push
push
call
add
push
add
mov
add
add
add
pop
push
nop
add
in
mov
mov
add
add
add
out
hlt
mov
orl
scas
cmpsl
add
add
add
add
loop
loope
add
iret
add
sub
pop
push
push
shr
lea
pop
call
push
push
add
shr
push
xor
add
shl
sub
sub
ror
pop
lea
pop
push
xor
ror
sub
pop
pushl
call
push
rol
sub
sub
inc
pop
call
push
inc
ror
pop
mov
push
push
xor
push
and
add
ror
lea
xor
xor
sub
rol
pop
inc
not
shl
xor
pop
push
lea
push
push
call
add
jmp
mov
add
add
add
test
pop
test
std
out
mov
mov
add
jns
pushf
add
ljmp
sub
pop
pushl
call
push
push
push
push
push
push
push
push
call
fcomip
fldl
mov
int3
add
ret
cmpsb
add
fildl
pusha
xchg
xchg
out
add
add
test
out
pop
xchg
sub
pop
push
push
pop
pushl
push
shr
pop
call
push
push
lea
shr
push
or
inc
add
add
shr
rol
add
sub
shr
pop
lea
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
cmpsb
add
add
add
roll
lea
add
push
jp
std
int3
add
add
mov
rol
movsb
enter
add
add
pop
test
mov
test
loop
int
mov
test
loop
in
loopne
pushl
call
push
push
dec
not
push
xor
add
shl
ror
sub
xor
not
ror
pop
shl
shl
inc
pop
push
push
sub
push
and
add
add
sub
sub
ror
add
inc
pop
shr
shr
lea
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
loope
faddl
add
add
add
mov
xchg
test
int
add
add
dec
add
pusha
push
popa
pop
fildl
add
loop
mov
pop
mov
clc
add
scas
enter
cmc
aam
sub
pop
call
push
push
ror
ror
lea
push
xor
add
shr
add
sub
inc
add
pop
add
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
ret
add
jb
fstpt
add
mov
add
mov
add
add
pop
popf
mov
pop
rolb
fwait
in
add
popf
mov
aad
add
sub
pop
pushl
call
push
push
call
pop
mov
fstpl
push
add
mov
mov
test
cltd
lods
call
add
fiaddl
add
imul
add
pop
mov
add
add
add
inc
hlt
lea
push
push
push
push
push
push
push
call
add
push
add
rolb
lods
bnd
mov
add
testl
add
xchg
add
in
lret
mov
pop
add
sub
pop
lea
push
pop
push
push
push
push
lea
push
push
push
lea
push
call
stc
mov
mov
out
aad
xchg
mov
add
jp
add
xchg
add
mov
nop
add
call
push
push
lea
push
push
push
push
push
push
push
call
in
loop
stc
add
add
add
push
xchg
call
rolb
arpl
je
rcl
add
lret
loopne
add
add
add
push
add
movsl
adcb
hlt
pop
cmc
add
fmuls
jl
cmpb
popf
fiaddl
jl
add
push
jl
mov
xchg
add
ret
sub
pop
push
push
xor
pop
push
push
push
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
jbe
jns
mov
pop
test
jns
hlt
add
add
fsubl
add
add
jae
add
cmc
fildl
mov
mov
add
lret
add
push
addr16
addb
add
fs
roll
in
loopne
pushl
push
push
push
push
lea
push
push
push
push
call
imul
xchg
xchg
mov
lods
mov
out
add
repnz
js
into
add
testl
jle
pop
ror
push
add
je
mov
enter
jbe
pop
clc
add
add
pusha
pop
addl
mov
jp
jns
repnz
lahf
push
sub
pop
call
push
push
shl
shl
ror
push
or
inc
add
dec
dec
add
ror
sub
sub
sub
dec
pop
shl
pop
push
rol
ror
sub
shr
pop
pushl
push
shl
sub
add
pop
call
call
push
xor
pop
mov
pop
push
inc
add
pop
dec
jne
push
rol
pop
jmp
call
push
push
add
push
or
inc
add
ror
dec
sub
not
xor
not
pop
sub
shr
not
pop
push
add
lea
not
pop
pushl
push
push
call
add
jne
mov
ret
popl
fmulp
cmc
movsb
add
lock
cltd
add
xchg
add
rclb
add
scas
testb
loop
add
mov
flds
into
xchg
add
jb
add
add
add
add
lcall
inc
sbb
add
push
lea
push
push
push
push
lea
push
lea
push
push
call
cmpsl
cmc
push
add
add
outsl
pop
test
add
leave
mov
add
jb
mov
lock
lcallw
arpl
jnp
in
loopne
call
push
push
push
push
push
push
lea
push
lea
push
call
lods
ror
test
ja
xchg
test
in
mov
gs
jno
push
add
popa
pop
clc
mov
add
stos
pop
lock
pop
push
add
add
pusha
add
insb
aam
mov
add
add
add
insb
push
xchg
mov
cld
add
fadds
neg
sub
pop
mov
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
add
add
add
pushf
loopne
add
filds
add
mov
add
add
xchg
mov
add
jae
mov
add
jbe
add
sahf
scas
cli
push
mov
mov
add
mov
pop
lods
jnp
rolb
add
in
in
lcall
pushf
and
ljmp
divb
push
or
not
add
xor
sub
xor
lea
rol
add
pop
shl
lea
pop
push
lea
push
push
call
cmpsb
pop
shll
add
add
add
add
jmp
mov
add
cli
pop
pop
mov
pop
in
imul
iret
add
mov
jo
out
lds
lcall
jne
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
mov
add
add
jbe
cmpsb
add
out
add
std
sbb
add
ds
push
push
push
call
add
add
xchg
xchg
stos
add
push
lahf
jge
jl
add
add
lahf
addb
mov
pushf
add
jne
add
push
add
add
jb
add
add
aam
movsl
icebp
lock
mov
add
add
pop
push
push
sub
pop
call
push
push
lea
sub
add
push
or
inc
add
ror
not
xor
sub
ror
pop
xor
add
pop
push
lea
lea
lea
pop
pushl
push
rol
not
pop
call
push
xor
pop
call
mov
push
push
push
push
push
push
push
call
add
test
loopne
roll
add
add
jne
xlat
out
push
je
lret
fwait
sahf
add
add
add
mov
jns
add
leave
add
push
addr16
xchg
mov
add
sub
pop
lea
push
push
sub
add
rol
xor
push
sub
add
shl
sub
shr
dec
pop
shr
pop
push
sub
sub
shl
inc
pop
pushl
push
lea
push
push
push
call
sti
push
add
add
xlat
stos
test
add
add
mov
add
test
add
add
int3
pop
push
loope
in
lock
lcall
pop
sbb
add
cmp
adc
js
push
lea
push
lea
push
push
push
push
call
add
add
popa
imul
add
fwait
add
mov
add
add
add
outsl
mov
add
add
hlt
add
mov
add
add
call
pop
mov
xlat
add
mov
add
in
fdivr
lcall
add
push
push
lea
push
call
shll
add
addl
xchg
addb
mov
mov
stc
rcr
add
out
sarl
pop
movsb
push
add
std
add
test
add
add
scas
add
add
add
mov
add
add
add
add
mov
lock
lea
lcall
add
incb
mov
add
jne
push
push
ror
rol
ror
push
or
not
add
sub
sub
shr
sub
shr
not
pop
shl
dec
add
pop
push
push
push
push
push
push
call
flds
add
imull
mov
mov
add
aad
repnz
mov
xchg
lahf
push
add
jl
mov
ljmp
add
add
add
ljmp
add
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
sub
leave
add
lock
mov
jae
add
int
add
mov
add
add
in
loopne
call
push
push
add
sub
push
and
add
dec
sub
dec
add
pop
sub
shr
shl
shr
pop
push
push
push
push
lea
push
lea
push
lea
push
call
movsl
add
add
jbe
lds
gs
xchg
test
xchg
add
popl
loopne
add
enter
mov
lahf
mov
pop
mov
addl
jbe
sub
pop
pushl
push
push
call
loopne
add
add
xchg
out
add
clc
outsl
add
cld
add
push
movsl
test
add
add
add
push
mov
jo
std
mov
loop
scas
out
xchg
add
outsl
add
xchg
add
add
scas
add
loope
sub
pop
call
push
push
push
call
add
test
iret
roll
add
add
cli
imul
add
loope
fistl
add
add
fsts
add
cld
push
xchg
rorl
push
out
add
pop
lds
mov
clc
cli
aam
iret
pop
add
jecxz
add
add
lcall
call
push
push
shr
push
or
not
add
not
xor
sub
sub
sub
ror
ror
xor
pop
ror
ror
xor
shr
pop
push
rol
ror
inc
xor
pop
pushl
push
dec
rol
pop
call
call
push
rol
pop
jmp
pushl
push
push
push
push
push
push
push
call
add
lods
add
bound
outsl
scas
arpl
xchg
add
fstl
add
mov
xchg
xlat
add
add
add
mov
jle
mov
mov
sbbl
fldenv
add
hlt
sub
pop
mov
jmp
push
push
dec
sub
push
push
pop
add
inc
lea
ror
sub
add
pop
shl
pop
push
lea
push
push
push
push
call
in
add
add
push
mov
mov
add
cmpsl
add
mov
push
mov
push
add
mov
lea
jl
hlt
add
add
out
add
push
add
push
add
fcom
andb
add
add
add
sub
pop
pushl
push
inc
rol
rol
shl
pop
call
push
push
push
push
lea
push
lea
push
call
jmp
shll
std
add
lds
add
add
push
ja
add
ret
mov
xchg
add
mov
xchg
mov
jl
in
call
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
cmpsl
call
cwtl
mov
loope
push
fsubr
pop
add
add
add
les
ja
popa
scas
rolb
add
sub
pop
call
push
push
sub
sub
inc
push
xor
add
shr
ror
sub
shl
add
xor
pop
rol
sub
pop
push
sub
ror
sub
pop
pushl
push
push
push
push
push
call
push
les
add
add
mov
mov
jecxz
in
js
add
add
mov
add
push
add
mov
add
jmp
outsl
in
aam
sub
pop
call
push
push
push
lea
push
push
call
cli
stos
movsl
pop
add
roll
pop
jnp
movl
push
push
scas
mov
add
bound
add
add
movsl
add
add
addr16
mov
fld
add
add
add
lock
call
push
sub
add
pop
leave
push
ror
pop
add
push
push
call
pusha
int3
xchg
cld
lea
add
add
out
rolb
test
cmpsl
add
add
add
add
jae
addl
data16
popa
add
jns
add
fidivrs
add
add
add
xchg
lret
lock
arpl
mov
lds
push
sub
not
pop
pop
push
lea
pop
pop
push
lea
push
push
push
push
push
push
push
call
ret
fildll
add
jle
jp
add
scas
add
mov
push
jbe
jnp
mov
in
add
mov
test
lock
add
les
add
add
out
mulb
add
add
add
pop
flds
lcall
pop
pop
push
lea
push
push
push
push
push
call
mov
fidivs
popa
add
jge
into
add
pop
add
pop
mov
add
jge
test
mov
add
jnp
push
add
add
xchg
movb
in
call
leave
push
lea
inc
pop
add
push
sub
shl
sub
pop
ret
push
not
sub
inc
pop
leave
push
shr
shr
lea
pop
ret
push
push
push
push
push
push
push
push
push
call
push
add
stos
popf
add
rolb
add
mov
push
in
cmpsb
pop
pushf
add
imul
je
call
int
add
mov
push
jnp
add
std
cwtl
mov
add
in
fdivr
lcall
push
add
lea
pop
mov
cmpl
jne
push
push
push
lea
push
push
call
mov
in
mov
add
add
add
fiadds
imul
add
push
add
sub
lcall
inc
and
push
lea
push
push
push
call
lods
ficoms
add
leave
out
add
popa
pop
add
add
add
movsl
add
orb
add
sti
stos
xchg
ficoml
mov
add
jl
mov
cli
add
add
mov
add
add
popf
add
lcall
xchg
add
push
xor
dec
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
outsl
test
popf
mov
mov
add
mov
in
add
shr
mov
icebp
add
jp
push
out
addb
addl
test
add
iret
test
add
sarb
add
add
ret
mov
mov
enter
in
and
push
push
push
push
push
push
push
push
push
push
call
sbb
hlt
add
lret
cmpl
out
jnp
les
push
add
jb
mov
add
jno
add
add
int
add
add
stos
lret
jl
add
call
add
movsb
sahf
xchg
add
add
fdivr
lcall
leave
push
add
shl
dec
pop
xor
add
push
push
push
lea
push
lea
push
call
mov
fcompl
add
add
add
js
pop
add
test
xchg
scas
add
nop
mov
add
add
add
mov
stos
into
push
in
in
lcall
dec
call
xchg
notb
clc
push
call
mov
push
mov
cmpsl
mov
push
add
push
add
push
mov
add
ret
lock
gs
xchg
xchg
lret
add
scas
mov
add
popa
sahf
faddl
mov
sbb
xchg
mov
add
sub
pop
dec
sub
push
lea
push
push
push
lea
push
push
push
push
push
call
std
add
ret
stos
jne
xlat
pusha
out
mov
lock
add
lret
jne
stc
xchg
add
add
ror
xchg
rolb
sti
out
add
add
out
add
add
jns
pop
mov
jmp
stos
mov
jb
pop
loopne
fnstenv
add
icebp
add
add
pusha
stc
add
pop
add
pop
jmp
sub
push
push
push
push
push
lea
push
push
push
push
call
jmp
mov
add
ljmp
mov
xchg
lds
add
xchg
iret
add
stos
add
jle
in
fcompl
xor
push
call
pop
add
fisttpll
push
mov
add
jmp
loope
leave
loop
rolb
filds
push
mov
add
add
movsb
add
add
data16
mov
jnp
push
mov
add
mov
mov
lcall
jmp
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
add
add
add
nop
test
push
add
add
iret
arpl
stos
add
push
in
aam
add
faddl
cmpsl
mov
add
xchg
mov
add
cli
add
add
add
add
fcmovbe
fsubs
fcompl
cmp
sar
call
mov
inc
mov
push
push
call
add
out
filds
add
jnp
add
fldl
mov
push
mov
in
add
push
mov
cltd
aad
xchg
add
add
mov
add
mov
into
imul
add
outsl
mov
mov
add
push
jbe
movsl
mov
rcl
sahf
jbe
add
lcall
enter
jnp
xor
mov
pop
test
push
call
fbstp
add
mov
push
xchg
mov
jp
add
jge
mov
jbe
stos
add
xchg
popf
add
std
add
cmpsb
shll
add
movsl
cld
mov
rcrl
add
idivl
jne
ljmp
xchg
mov
mov
add
sub
pop
lea
push
sub
sub
lea
pop
sub
push
inc
lea
pop
mov
push
rol
xor
pop
shr
add
push
push
push
call
in
imul
out
imul
stc
mov
jbe
add
enter
fsubrs
mov
fbstp
loope
add
add
in
xchg
pop
add
lcall
jmp
addb
xor
lea
pop
pop
push
add
sub
shl
pop
shr
and
push
push
call
mov
icebp
add
push
in
imul
mov
stc
push
lds
add
mov
xchg
add
xchg
iret
add
lock
add
lock
sub
pop
sub
push
add
dec
pop
cmp
jne
leave
push
lea
push
lea
push
call
jecxz
add
mov
andl
add
add
add
add
mov
add
push
add
add
movsb
xchg
lret
add
cltd
sub
pop
ret
push
push
sub
pop
mov
add
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
mov
pop
mov
stos
add
mov
add
test
add
add
add
push
fisubl
add
add
add
fs
mov
push
mov
add
add
mov
lock
insb
mov
in
fdivr
lcall
push
push
push
lea
push
push
push
lea
push
push
call
jb
add
mov
push
xchg
out
add
leave
add
add
outsl
xchg
fabs
add
in
cmc
movsl
jp
movb
push
add
mov
enter
jae
test
mov
add
loope
bound
xchg
pop
add
rolb
add
add
mov
in
push
push
push
push
push
lea
push
call
test
add
loop
clc
movl
mov
jge
jb
int3
add
add
add
rolb
xchg
iret
cld
hlt
add
faddl
add
testb
roll
mov
mov
push
fwait
test
add
rolb
out
arpl
test
xchg
test
jle
sahf
mov
add
lock
lcall
push
lea
add
pop
mov
push
add
pop
lea
sub
push
not
rol
pop
mov
push
inc
pop
shr
push
push
push
lea
push
lea
push
call
add
test
jle
mov
mov
aad
fadds
pushf
stc
jecxz
lea
add
jmp
arpl
fstpt
add
add
add
pushf
add
in
add
sub
pop
add
push
rol
pop
mov
push
sub
sub
xor
pop
add
push
xor
lea
shr
pop
mov
push
push
push
push
push
call
out
mov
out
add
add
cmpsb
rolb
scas
jp
mov
add
pop
sti
add
jle
add
lods
lods
outsl
addb
pop
add
in
pop
add
xor
push
push
lea
push
push
push
call
stos
push
js
add
sarl
add
push
lds
jno
push
mov
add
sub
pop
mov
and
push
shr
not
dec
sub
pop
rol
rol
push
not
pop
xor
push
shr
dec
sub
pop
inc
cmpb
jne
push
push
push
push
call
incb
add
mov
loop
add
add
sarb
jnp
js
pop
add
add
xchg
add
add
iret
clc
out
ret
push
push
lods
sub
pop
add
push
xor
lea
pop
cmp
je
add
push
lea
push
lea
push
push
push
push
push
call
mov
jno
push
data16
out
vprotb
mov
add
cltd
lret
xchg
mov
data16
pop
imul
add
jne
add
add
add
add
xchg
add
add
add
popl
add
add
add
shrb
add
jnp
add
test
call
ds
lea
push
push
push
call
int3
out
jnp
loopne
add
xchg
jmp
fsubrs
aam
cld
pop
add
popf
add
add
mov
addl
mov
add
add
add
lcall
rclb
stos
rol
xor
pop
pop
pop
push
rol
pop
pop
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
mov
add
add
add
jmp
add
lea
push
mov
add
les
xlat
mov
mov
add
loope
xchg
add
pop
add
add
jp
mov
add
lods
add
push
jo
in
fcomps
push
push
push
call
add
add
xlat
rolb
mov
add
jmp
push
mov
add
pop
iret
mov
imul
movsb
lods
add
idivb
nop
add
jl
stc
add
insb
cli
add
sub
pop
pop
push
sub
add
ror
pop
leave
push
lea
inc
pop
ret
push
push
push
push
push
push
call
add
mov
push
fdivl
add
add
shrl
add
std
add
scas
add
add
sbbl
int
xchg
std
add
sahf
add
lret
add
lcall
push
adc
pop
push
lea
push
push
lea
push
push
push
call
in
add
add
test
jb
pop
add
pop
jne
add
pusha
add
mov
aam
add
add
enter
add
imul
add
add
add
ret
rcrb
add
sahf
popa
mov
add
add
push
not
shr
pop
push
push
add
pop
push
push
push
lea
push
push
call
add
push
add
xchg
add
in
add
aam
popa
leave
test
scas
add
add
loope
add
add
jne
lods
push
call
lock
add
mov
push
push
push
lea
push
push
push
push
push
call
pop
add
sbbl
stc
enter
add
add
loope
add
add
ja
bound
add
int
xchg
add
mov
mov
add
lcall
testl
push
push
push
push
push
push
push
push
call
mov
add
out
add
jle
fbstp
add
add
add
jecxz
iret
add
mov
pop
add
add
adcl
mov
ret
xchg
add
fcompl
push
lea
push
push
push
push
push
call
xchg
add
add
add
pusha
add
add
into
add
add
add
add
in
add
add
xchg
add
add
addl
fwait
jle
jp
pushf
sub
pop
mov
push
lea
push
push
call
cltd
add
add
pusha
add
add
add
mov
pop
mov
fwait
nop
nop
sti
lret
into
shll
jmp
xchg
pushf
mov
mov
iret
ret
mov
js
push
ljmp
pop
push
push
lea
push
push
call
jae
add
movb
push
imul
cwtl
imul
call
mov
jp
add
mov
push
fs
add
add
mov
out
fadds
pop
aam
add
in
hlt
lcall
imul
call
test
dec
xchg
and
xor
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
call
insb
jmp
add
clc
add
xchg
lods
popa
leave
jmp
push
add
add
add
jae
add
add
ret
add
add
pop
in
testb
mov
out
hlt
add
add
sub
pop
pop
pop
push
sub
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
scas
push
std
leave
push
add
add
lds
fdivr
mov
mov
movsl
add
add
pop
add
filds
xchg
add
popa
add
add
add
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
cmpsl
add
ret
add
add
call
imul
xchg
jb
popf
scas
movb
sti
add
xchg
add
leave
push
shl
pop
ret
push
lea
push
lea
push
push
call
lcall
add
jecxz
rorl
add
stos
ljmp
mov
mov
add
in
lock
lcall
push
xor
not
pop
mov
push
push
call
mov
add
add
add
lret
mov
pop
loopne
flds
add
add
add
pop
add
lds
loopne
pop
fcmovb
mov
add
jno
push
mov
add
add
arpl
lahf
les
xchg
enter
add
fistpll
out
push
lcall
hlt
push
lea
push
push
call
xchg
cmpsl
add
add
hlt
out
imul
lods
push
icebp
add
add
mov
push
jle
je
roll
shlb
cld
out
add
add
fiaddl
jnp
add
add
nop
lds
hlt
pop
push
push
push
push
lea
push
push
call
add
add
rcrb
loop
pop
icebp
pop
fwait
jbe
add
push
mov
add
add
jmp
out
jl
gs
jnp
add
xchg
xchg
add
lcall
push
xor
shr
pop
push
push
push
push
lea
push
lea
push
call
ret
je
test
add
hlt
add
imul
scas
xchg
xchg
add
aam
add
test
arpl
jmp
add
popa
jecxz
fiaddl
push
add
hlt
mov
add
in
in
pop
mov
push
xor
ror
sub
pop
push
push
rol
add
shr
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
test
mov
stc
ret
add
jb
rcrb
mov
add
add
pushf
arpl
int3
add
mov
aam
add
pop
out
lock
jae
add
add
movl
add
pop
lea
push
xor
pop
sub
push
shl
pop
mov
push
sub
pop
shr
add
push
ror
pop
mov
push
push
push
push
lea
push
call
add
pop
pop
mov
add
add
push
add
mov
js
jno
add
add
stos
add
lcall
fcos
jae
push
push
lea
push
push
push
push
push
call
add
pop
stos
add
push
mov
lret
mov
add
sbb
out
out
stc
mov
gs
add
add
fdivl
leave
jecxz
add
popf
add
mov
in
jmp
add
ljmp
add
mov
pusha
jb
fwait
add
jecxz
push
test
int
add
inc
clc
push
dec
dec
pop
mov
push
pop
add
push
dec
not
shl
pop
xor
push
push
lea
push
lea
push
push
lea
push
push
call
add
test
test
test
addl
pop
add
xchg
mov
enter
orl
add
stos
add
fs
in
sahf
sub
pop
lea
push
sub
rol
pop
mov
add
push
lea
not
add
dec
pop
xor
push
push
push
push
lea
push
push
push
push
call
icebp
in
test
sti
push
out
pop
int
add
xchg
in
xchg
test
add
mov
add
mov
push
add
xorl
nop
push
mov
pop
pushf
shrl
loope
add
aam
cltd
add
imul
repnz
add
add
add
in
loopne
lcall
rolb
sub
rol
pop
nop
push
push
lea
push
lea
push
push
push
push
call
xchg
nop
add
mov
add
leave
mov
add
popf
jecxz
loopne
lods
scas
push
add
add
bnd
lods
lock
mov
pop
mov
mov
add
add
pop
pusha
add
imul
xor
shr
pop
xor
push
lea
push
lea
push
push
call
rolb
add
xchg
add
jmp
pusha
add
push
add
add
xlat
jnp
add
les
push
cmpsb
add
int3
add
add
add
add
fucomi
add
pop
jb
add
add
add
push
add
sub
pop
nop
push
shr
pop
nop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
add
add
add
aam
out
leave
andb
ficompl
scas
add
mov
add
add
mov
add
ljmp
jne
bound
leave
add
lcall
push
xor
inc
pop
nop
nop
push
add
ror
ror
sub
pop
cmpb
jne
add
push
push
push
push
push
push
push
push
push
call
xchg
add
shlb
popf
mov
loopne
add
mov
mov
add
add
add
add
cmpsl
out
add
addb
pop
mov
add
scas
mov
mov
add
cltd
addb
add
add
push
xchg
add
shrb
aam
fiaddl
mov
cld
push
push
add
movsl
into
add
lcall
nop
push
shr
lea
lea
pop
cmp
je
nop
push
push
push
push
push
lea
push
lea
push
push
push
call
jno
mov
add
out
test
mov
add
lcall
lcall
mov
push
mov
std
addb
jns
lods
movsb
loopne
pop
aad
xchg
test
fdivr
lcall
push
sub
pop
inc
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
adcb
push
sahf
add
push
add
pushf
pop
lock
jne
roll
add
add
rcl
add
insb
fcmovnbe
fwait
jmp
xchg
mov
add
mov
add
add
mov
fwait
movsl
jne
add
data16
xlat
add
add
lcall
push
lea
push
push
push
push
push
lea
push
push
push
call
arpl
roll
add
add
addr16
sbb
push
jne
clc
add
add
loope
add
add
cmpsl
add
faddl
push
cmc
loopne
add
add
stos
add
add
xchg
add
jge
in
fdivr
lcall
push
sub
pop
cmp
jb
xor
push
shl
shl
dec
pop
jmp
push
push
push
push
push
call
stos
pop
add
lret
add
ret
ljmp
add
addb
adcb
out
fcomip
icebp
int3
mov
mov
add
xchg
add
imul
add
mov
mov
add
hlt
lcall
add
add
jno
add
pop
mov
add
push
push
push
push
lea
push
push
push
call
add
filds
pop
into
add
add
repnz
add
jnp
add
ja
add
add
sarb
popa
jnp
add
loop
add
in
in
movzwl
push
push
push
push
push
push
lea
push
lea
push
call
add
add
mov
jmp
xchg
sti
add
stos
add
fiaddl
add
pop
add
pop
imul
mov
add
mov
push
xchg
add
add
add
popa
jbe
jl
push
add
rolb
rclb
test
mov
add
lcall
inc
sbb
push
push
push
push
call
cmpsl
test
add
imul
lret
je
add
lahf
add
fmul
add
flds
xchg
movl
add
add
gs
pop
xchg
pop
add
lea
rol
add
in
pop
add
mov
push
push
lea
push
push
push
push
lea
push
push
call
add
fidivl
scas
add
jecxz
mov
test
enter
scas
fldl
pop
int3
add
push
add
arpl
add
popa
addb
mul
add
in
mov
mov
lcall
leave
push
shl
pop
xor
shl
push
shr
ror
add
rol
pop
xor
shl
push
push
push
call
out
xchg
add
mov
add
mov
insb
add
add
pop
mov
add
scas
cmpsl
addl
push
add
test
xchg
add
add
jmp
add
jne
lds
add
pop
add
add
ja
add
add
dec
nop
add
shrb
aad
ret
shl
xor
push
add
lea
add
pop
mov
push
lea
shr
not
shr
pop
add
push
push
push
push
lea
push
push
call
pop
out
mov
xchg
mov
add
add
scas
push
lds
add
iret
add
stos
add
jmp
lret
xchg
xorb
call
pop
pop
push
xor
pop
pop
pop
push
push
lea
push
push
call
pushf
mov
gs
test
add
xchg
add
out
rolb
mov
jae
jnp
cld
xchg
mov
lcall
add
movsl
mov
add
jecxz
mov
add
lock
lcall
ret
push
push
push
lea
push
push
lea
push
push
lea
push
call
int3
add
test
popf
faddl
jae
lea
add
rolb
push
add
jbe
roll
pop
pop
jnp
fiadds
pushf
stos
addl
ljmp
pop
sub
pop
push
mov
push
push
call
add
add
leave
add
test
lock
repnz
js
add
nop
add
cltd
xlat
add
iret
pusha
xlat
xchg
ja
mov
xchg
faddl
jno
jecxz
push
movsb
add
pop
jmp
mov
add
test
ljmp
aad
enter
add
xlat
sub
pop
push
push
push
add
pop
push
push
shl
shl
lea
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
out
push
imul
add
movsl
mov
add
mov
mov
add
xchg
mov
push
add
push
lcall
in
in
fcomps
dec
or
inc
pop
mov
push
shl
pop
mov
test
je
push
push
push
push
push
push
push
call
stos
leave
add
jecxz
in
aam
mov
add
aad
add
pushf
pop
xchg
outsl
add
add
push
push
nop
pop
add
mov
add
xchg
add
add
add
shl
add
mov
add
ljmp
add
out
addb
add
in
in
in
lcall
jno
test
je
push
rol
pop
mov
push
push
push
call
add
jns
mov
jge
add
mov
pop
lods
push
add
add
cwtl
add
add
add
mov
add
mov
jle
fnstsw
pusha
icebp
sub
pop
mov
push
push
lea
push
push
call
bound
add
add
add
int3
fiadds
add
stc
add
add
call
add
pop
push
testl
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
xchg
jecxz
hlt
cld
add
add
testl
add
add
jmp
popf
add
out
add
mov
add
enter
push
add
xlat
loopne
int
mov
mov
lock
add
shll
jge
in
pop
lret
add
int3
add
push
add
inc
pop
cmp
je
test
je
push
push
lea
push
push
lea
push
push
push
call
addr16
in
mov
je
loopne
add
push
add
cmpsl
loope
add
enter
movsl
add
add
add
add
add
call
add
jmp
add
sub
pop
mov
push
push
push
push
push
push
push
call
add
fistpl
pop
popa
add
add
jecxz
jae
fnstenv
out
add
add
pop
mov
in
lcall
push
pop
cmp
je
push
lea
push
lea
push
push
lea
push
call
fwait
stc
out
arpl
add
add
jne
push
add
add
ret
in
sti
scas
add
iret
sbb
add
add
std
add
xchg
gs
mov
add
fistpl
out
add
lods
int
ljmp
add
xchg
jmp
pop
movb
mov
mov
add
lcall
rorb
sub
call
iret
shl
sub
rol
pop
xor
push
push
push
lea
push
call
xchg
add
xchg
int
cltd
add
mov
add
pop
add
push
add
add
fildl
add
push
loopne
outsl
fidivs
int3
sub
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
rcr
sarl
int
add
push
jns
add
add
pusha
add
jno
add
fiadds
roll
add
movsb
add
add
out
adcb
add
add
xchg
jmp
in
add
test
add
add
add
popa
mov
rcrb
fcompl
push
lea
push
lea
push
push
push
push
lea
push
call
mov
mov
testl
add
add
add
add
imul
testl
push
popf
lret
je
mov
jge
push
add
jl
jne
bnd
cli
add
mov
jne
add
add
add
bound
fidivl
add
lcall
pop
push
sub
shl
add
sub
pop
leave
push
xor
inc
pop
ret
push
push
push
push
call
jl
lock
add
add
add
jne
add
lret
popa
enter
pop
add
lret
test
jecxz
mov
ljmp
jl
jl
out
fiadds
in
jbe
push
iret
add
add
add
icebp
add
add
mov
inc
push
push
push
push
push
push
push
call
mov
pop
push
mov
add
les
add
add
add
lret
add
add
add
addb
cmpsb
mov
add
add
add
add
stos
sub
pop
cmp
jne
push
push
push
push
push
push
call
add
jmp
lret
cmpsl
pop
xchg
mov
add
add
ret
add
add
push
stc
add
add
add
stos
gs
addb
mov
leave
add
jns
push
push
rolb
add
add
lea
mov
push
push
lea
push
push
push
lea
push
lea
push
call
add
popl
add
mov
push
popa
add
jns
mov
loope
add
clc
sti
add
add
lahf
push
scas
push
add
fidivrs
negl
popf
gs
add
add
aam
faddl
mov
int3
sti
sub
pop
test
je
push
sub
xor
lea
xor
pop
mov
push
rol
pop
add
push
push
push
call
popa
hlt
fdivl
add
jbe
jae
add
add
add
add
adcl
add
lods
mov
lcall
loopne
test
decl
mov
jns
push
push
lea
push
push
push
push
call
xchg
jecxz
add
call
add
add
push
push
mov
mov
test
loope
shll
lahf
push
mov
add
push
add
cltd
add
sub
pop
test
je
mov
push
add
add
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
call
lret
lea
pop
aam
loopne
mov
nop
cmpsl
add
movb
add
cmpl
ljmp
mov
add
add
jae
add
add
out
test
int3
push
add
jle
jp
add
lock
pop
cmp
je
push
push
push
push
push
push
push
push
push
push
call
add
stc
mov
mov
imul
scas
jge
bound
mov
insb
mov
jmp
xchg
add
add
sub
pop
jmp
push
lea
push
push
push
push
push
push
push
push
call
fstpt
mov
jne
add
imul
lret
mov
imul
sti
jge
mov
imul
add
nop
in
pusha
test
imul
lea
lock
sub
pop
xor
pop
push
sub
dec
add
pop
pop
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
movsb
add
hlt
add
add
scas
jmp
mov
fnstsw
mov
fstpl
outsl
add
add
movsb
test
add
add
add
call
add
into
ljmp
pop
pop
push
push
lea
push
push
push
push
push
push
push
push
call
popa
loopne
cld
std
movsl
add
jnp
mov
fbld
roll
test
add
add
xchg
jno
xchg
not
icebp
add
cli
add
leave
add
aad
add
add
lcall
push
lea
push
push
push
push
push
lea
push
push
push
push
call
fiaddl
add
add
xchg
add
add
iret
add
mov
mov
add
push
jae
mov
in
pop
add
stos
add
add
pop
mov
sub
add
in
add
cltd
pusha
lods
add
lcall
or
push
lea
pop
lea
push
push
push
push
push
lea
push
call
aam
in
cli
add
js
cld
add
add
add
mov
xchg
add
push
add
roll
addr16
add
pushf
lods
mov
movl
int
imul
jp
xchg
add
out
int3
sub
pop
pop
push
shr
pop
pop
push
push
push
push
lea
push
call
add
jmp
mov
sahf
add
add
add
lds
add
nop
jb
call
xlat
mov
add
add
int3
add
sahf
sub
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
call
out
in
mov
add
add
orl
fadds
fadd
in
test
mov
add
fnstenv
popa
jbe
add
fstpl
add
add
add
push
sub
pop
pop
push
dec
pop
leave
ret
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
pop
iret
add
out
loopne
enter
add
xchg
pusha
add
add
add
mov
add
add
xlat
jno
add
vmovdqu
jmp
incb
lock
je
add
outsl
rcll
fdivrs
sub
pop
mov
pop
push
push
lea
push
push
call
std
loopne
popf
leave
add
add
cli
hlt
incb
ret
add
gs
mov
add
mov
cmc
mov
add
add
lret
in
jnp
add
add
jns
add
xchg
add
add
add
in
lock
pop
push
push
push
push
call
pusha
add
add
add
add
iret
movb
aad
lods
pop
jmp
shrb
add
sub
pop
pop
push
push
lea
push
push
push
push
call
in
add
addb
outsl
xchg
add
scas
je
jl
add
js
jmp
pop
add
push
mov
add
add
jp
in
call
pop
push
push
push
push
push
push
push
push
lea
push
push
call
cmpsb
add
mov
addr16
bound
lret
lret
arpl
int3
leave
xchg
add
movsb
xchg
movsb
add
int
leave
lods
add
push
add
add
add
add
mov
add
add
add
add
xchg
fistpl
add
add
add
sub
pop
leave
ret
xor
cmp
sub
adc
icebp
adc
and
adc
inc
cmp
pop
add
adc
loopne
adc
popa
cmp
xor
adc
mov
add
stos
mov
adc
sarl
les
sbb
push
mov
jl
pop
xor
cmpsl
mov
jge
sub
lock
rol
dec
mov
add
out
xor
jae
punpckhdq
mov
outsb
xor
jmp
lds
push
popa
adc
daa
jnp
inc
nop
ss
lahf
xchg
or
pop
mov
sub
out
dec
adc
aad
int3
iret
mov
psrld
or
fwait
test
popa
es
daa
or
jne
in
xor
inc
or
lock
push
test
jle
and
stos
loop
pop
pop
jmp
cmp
mov
data16
inc
jno
cmpl
or
and
lea
and
ret
fistps
adc
mov
mov
sbb
arpl
in
dec
mov
into
mov
in
insl
hlt
sbb
sbb
mov
into
push
shl
test
ret
push
dec
cmp
loop
sub
inc
into
gs
and
fisttpll
aas
dec
lds
xchg
push
pop
cmp
outsl
cmp
mov
outsl
jns
mov
push
lds
push
outsl
js
pop
xor
xor
cmc
sub
mov
mov
jle
add
fidivrs
pop
pop
inc
mov
aaa
lds
push
jo
repz
sbb
sub
mov
jmp
xchg
jmp
xor
int
cmp
inc
mov
in
scas
in
in
sbb
cmp
push
rcrb
clc
dec
subl
pushf
lds
ss
and
in
fnstenv
xor
add
mov
mov
test
or
dec
xorl
mov
xchg
jg
cmpsl
test
cmp
push
ss
mov
scas
rorl
ja
das
mov
aad
sub
xchg
ja
popa
sub
cmc
inc
xchg
dec
icebp
jno
cmc
aad
cmp
push
and
sub
mov
cmpl
dec
and
rdmsr
fisttpll
shl
sbb
cmpsb
push
div
std
xor
mul
mov
lret
idivb
push
out
cltd
ret
inc
aam
mov
mov
adc
std
scas
sbb
imulb
push
cmp
iret
xor
jl
mov
or
lea
stos
imul
in
xor
push
pop
cmc
repz
nop
cwtl
imul
adc
pop
jg
fdivrs
mov
sbb
subl
fidivrs
outsl
inc
or
aas
lcall
pop
push
sti
inc
in
int
push
jno
sub
push
movsb
dec
jle
jp
int3
mov
jg
sub
dec
mov
aad
pusha
out
push
mov
push
inc
pop
push
scas
push
sub
mov
mov
mov
xor
xor
call
jp
cltd
insl
sbb
andl
mov
dec
and
xchg
pop
cmp
sub
pusha
leave
in
inc
andl
lock
fwait
sub
lea
push
pop
dec
xor
stos
fsts
pop
add
mov
add
or
pop
jno
shlb
mov
shll
scas
and
jne
mov
insb
rorl
sub
cs
sbb
enter
gs
push
mov
fimull
inc
sahf
push
pop
cmp
test
cli
pop
mov
insl
mov
lcall
movsl
lock
imul
inc
jb
dec
rorb
sbbl
sbb
pop
dec
pusha
nop
out
dec
ds
outsb
test
push
std
jbe
ffreep
cmpsb
jns
add
dec
mov
gs
push
xor
pop
nop
dec
mov
pop
loop
or
out
and
cmp
aas
sarl
or
orb
inc
add
cmpsb
xchg
nop
in
lret
ror
xchg
xor
mov
adc
mov
std
dec
ret
je
test
fisttpl
jbe
hlt
nop
inc
sahf
and
mov
lret
sbb
xor
xchg
test
in
mov
fmuls
ret
xchg
nop
ss
cmpsl
es
fs
xchg
pop
cmp
arpl
dec
cld
clc
int3
aam
or
test
popa
nop
push
jp
dec
inc
mov
or
testb
lret
jo
mov
mov
in
test
sub
dec
adc
adc
jp
inc
xchg
and
xchg
scas
mov
ret
jb
je
adc
inc
mov
fcmovne
nop
inc
insb
out
ss
xor
ja
and
test
push
pop
fbld
mov
cmp
jp
cs
fcmovnbe
mov
imul
iret
xchg
stos
addr16
in
or
bound
sbb
add
lods
repz
jle
inc
cltd
dec
call
out
imul
dec
add
sub
fdivl
push
in
inc
pop
sub
out
in
ffree
fcomi
pop
jnp
cmpl
mov
push
mov
test
insl
xor
sahf
inc
xlat
sub
mov
jmp
fcmovnb
add
jo
test
jb
data16
out
rcrb
aas
jecxz
aaa
or
pop
inc
add
fiaddl
test
adc
not
adc
sub
mov
or
sub
test
xchg
add
jg
mov
xchg
sahf
push
movsl
aaa
inc
pop
pop
jl
xchg
lods
fsubl
or
sbb
jbe
mov
inc
mov
push
adc
inc
mulb
outsl
leave
lcall
scas
imul
xchg
pop
push
ss
mov
aas
jp
lret
iret
shrb
test
mov
sub
fdivp
daa
adc
and
inc
sub
jle
outsl
add
jl
add
movsl
test
mov
push
xchg
cltd
sub
in
das
xchg
adc
neg
dec
mov
mov
repz
mov
fsubl
out
inc
ljmp
sub
jp
test
mov
scas
adc
imulb
out
gs
jno
push
lock
cmp
ss
bound
test
ljmp
sub
loopne
cmp
adc
shrl
mov
mov
mov
mov
mov
cmpsb
push
or
xchg
inc
fcmovnb
ljmp
xchg
pop
jb
jbe
cmp
mov
shrb
popa
jg
leave
sub
out
push
in
dec
or
inc
js
push
mov
icebp
cmp
mov
xchg
add
mov
stos
or
je
inc
mov
or
test
mov
mov
and
mov
jb
xchg
xor
jne
shrb
adc
shll
push
xor
adc
loop
jmp
loopne
iret
dec
add
outsb
xchg
xchg
jne
and
pop
incb
add
subb
shrl
xchg
lock
movsb
push
leave
cmp
inc
add
jl
rclb
push
es
xorb
das
sub
es
or
mov
or
or
or
and
lea
mov
test
jge
inc
cmp
and
cwtl
out
cld
es
jnp
and
leave
adc
je
faddp
scas
adc
ror
cs
dec
ret
mov
data16
nop
test
scas
mov
xchg
xchg
and
out
out
and
mov
add
cmpsb
mov
movsb
dec
repnz
pop
movsl
inc
dec
movsl
push
sbb
cmp
push
sarl
fisttps
mov
push
mov
iret
xor
mov
ds
mov
out
jecxz
iret
mov
jns
aas
fadds
adc
mov
xorl
xchg
stc
call
adc
sub
daa
movsb
lock
adc
jae
lret
rcrl
popl
or
das
dec
add
jp
loopne
mov
das
lea
mov
push
pop
push
jmp
push
dec
mov
inc
dec
mov
lret
std
out
pop
xor
push
adc
sub
addb
lds
sub
sub
fwait
adc
mov
dec
popf
pop
adc
test
inc
dec
mull
mov
push
cli
std
inc
mov
fsubr
lret
xchg
fadds
das
dec
pop
fcmovne
shlb
les
xlat
adc
adc
arpl
in
hlt
mov
fadds
sbb
push
insl
inc
mov
mov
and
stos
or
or
add
fnstsw
xchg
sbbl
data16
sbb
loop
leave
mov
mov
jns
pop
dec
cltd
adc
lods
push
pop
cmp
int3
cmp
lds
push
lods
mov
ja
jg
xchg
sbb
scas
out
pop
hlt
sbb
or
dec
scas
cmpb
mov
or
adc
clc
xchg
repnz
addr16
mov
les
xlat
xchg
adc
cwtl
sbb
mov
mov
jbe
je
cltd
pop
mov
sbb
mov
add
push
arpl
add
xchg
push
nop
mov
pop
and
jmp
pop
loop
aam
fstpt
inc
in
scas
dec
fstpl
cmp
jge
lahf
in
adc
pushf
ja
fcmovnu
jo,pt
jb
inc
jns
and
aad
xchg
orb
outsb
push
push
or
push
in
mov
add
cmc
pmaddwd
mov
xchg
das
ljmp
cs
jge
pop
and
daa
mov
mov
sub
push
mov
dec
push
cmp
loope
xchg
sub
fiaddl
dec
xchg
nop
xchg
jo
ret
outsb
push
mov
mov
aaa
js
inc
fildl
out
xor
add
and
imul
lds
lock
enter
rclb
add
jns
push
and
cwtl
xor
dec
sbb
in
xlat
jbe
xchg
xor
addl
lahf
and
inc
lahf
fcompl
movsl
inc
loop
mov
jmp
push
hlt
test
mov
xchg
mov
mov
pop
mov
addr16
rorb
fisubl
fbld
push
sahf
mov
aad
popa
repz
into
inc
xchg
cmpsl
push
outsb
arpl
jne
mov
pop
stos
lea
scas
enter
cwtl
movsb
or
adc
pop
pop
stc
mov
inc
sbb
addr16
push
mov
xor
bound
sarb
pop
stos
dec
scas
jb
inc
mov
mov
ret
jnp
fnstsw
int
pop
movsl
inc
aad
mov
pop
divl
dec
call
movsl
sub
push
jp
daa
ds
push
dec
sti
pop
xchg
cmp
and
adcl
scas
clc
in
idivb
inc
or
mov
sub
xor
mov
mov
inc
or
pop
mov
je
arpl
cmp
mov
ja
xor
and
repnz
xchg
xchg
jecxz
and
push
push
repnz
jno
lcall
push
inc
fisubrs
test
rclb
or
in
gs
arpl
imul
dec
push
inc
dec
dec
pop
out
adcb
into
lock
mov
dec
loopw
shlb
mov
mov
outsb
sub
push
inc
and
xchg
jnp
jp
ss
xor
pop
jnp
fs
sbb
xchg
daa
leave
xor
or
ljmp
loopne
xor
inc
push
jns
jmp
add
aas
rorl
cmp
fisttps
sub
cmp
aaa
and
loope
ljmp
out
mov
and
scas
loope
and
imul
dec
mov
mov
dec
adc
or
lcall
out
test
lds
insb
push
daa
cmpsb
sub
sub
and
cmp
hlt
push
or
repz
add
cmp
xor
xchg
add
jge
out
xchg
pushf
fwait
cli
xor
gs
lea
cld
iret
dec
xchg
fucomi
add
pop
arpl
xchg
sti
decb
cld
mov
add
pop
mov
arpl
mov
sahf
fcompl
mov
jae
xchg
cmc
dec
shll
mov
xchg
filds
cld
and
stc
or
pop
adc
imul
adc
or
sbb
loopne
and
ret
mov
adc
sub
dec
es
mov
lods
popa
jp
in
adc
lods
stos
cmpsb
repz
pop
or
pop
mov
sahf
ljmpw
mov
shll
inc
cmpsl
leave
shrb
add
cmp
inc
lods
jns
stc
cmpsb
rorb
inc
mov
mov
gs
add
ret
cmp
mov
cld
xchg
das
push
mov
iret
aad
pop
movsb
mov
cmp
fldl
or
xor
iret
test
jecxz
push
xor
fisttpll
cmp
adc
push
add
add
scas
mov
add
ljmp
add
or
xchg
inc
cwtl
adc
mov
rcl
xchg
fs
cmp
cli
les
mov
loope
xchg
test
scas
jbe
xchg
mov
fcoml
dec
jmp
rcrl
mov
and
mov
outsl
cmp
les
pop
mov
repz
hlt
out
xlat
fidivl
jl
xchg
sbb
bound
lods
scas
std
fstpl
cmp
lcall
testl
movsl
xor
popa
and
push
call
jnp
adc
icebp
jnp
rcrb
mov
fsubs
clc
scas
mov
repnz
repz
addr16
dec
jae
mov
jge
cmpsb
into
dec
mov
adc
add
aas
ljmp
jge
enter
sub
js
and
imul
adc
adc
pop
and
pop
mov
jmp
pushf
jge
mov
add
shrl
clc
push
stos
es
sbb
in
sti
test
mov
dec
fldenv
xchg
sub
repnz
lock
dec
lcall
arpl
in
mov
push
cmc
pop
icebp
and
push
mov
imul
pusha
lahf
sbb
outsb
pushf
cmpsl
in
lods
inc
andl
fwait
mov
sub
xor
nop
dec
mov
jo
aad
lcall
pushf
dec
pop
out
xchg
mov
adc
adc
cmpsb
lahf
xor
cmp
mulb
mov
xchg
loop
push
aas
inc
imul
inc
or
jle
shll
dec
jns
pop
lds
call
loop
push
cmc
or
or
pop
pop
ss
daa
cld
cmp
ficoms
divw
out
add
ret
rcrb
sbb
mov
mov
or
ret
xor
shl
inc
jp
pop
sbb
sbb
imul
xor
xor
ret
mov
sub
lcall
out
sbb
push
pushf
xchg
stos
mov
test
sarl
sbb
mov
sub
or
pop
bound
sbb
ja
cmp
adc
or
sbb
in
xor
pop
dec
sbb
and
pop
cmp
sbb
pop
fmuls
sub
xchg
jno
es
push
hlt
jmp
mov
cmpsb
and
xchg
lahf
push
sbb
mov
pop
cmp
or
mov
sti
in
xor
or
jnp
sub
lods
out
jnp
das
or
dec
xchg
js
push
loopne,pn
fldenv
leave
pop
mov
xor
push
inc
push
and
ret
xchg
rcl
sub
jo
outsl
in
mov
inc
dec
mov
and
jno
and
sahf
js
adc
fsub
popf
or
call
xor
xor
cwtl
push
loop
orb
sub
out
cmc
mov
std
cwtl
xchg
pop
sub
or
fiaddl
dec
mov
and
lock
or
or
xor
mov
sbb
hlt
dec
dec
pop
dec
sbb
shll
inc
inc
div
pop
frstor
xchg
lahf
cmp
outsb
inc
push
aad
popa
adc
dec
inc
shlb
int3
es
push
or
mov
rcll
mov
hlt
stos
std
popa
push
xchg
cmp
mov
leave
or
mov
and
shll
xlat
aad
jp
js
stos
or
jmp
loop
lret
je
mov
mov
mov
mov
decl
mov
cmp
imul
and
adc
dec
lcall
shld
rcll
shlb
mov
bound
cmc
jne
cld
add
jb
push
xor
dec
repz
aaa
nop
out
aam
adc
sbb
lcall
cmpsl
dec
cltd
add
or
push
xor
mov
pop
jnp
pop
icebp
cmp
fs
jge
out
and
push
and
fsubs
and
dec
push
dec
icebp
cltd
jg
push
and
cmp
jp
idivb
mov
push
flds
orl
cmp
aas
xchg
inc
scas
add
inc
sub
mov
mov
jnp
lret
xor
fwait
ret
cmp
outsl
inc
out
sub
sbb
rolb
mov
inc
or
enter
repnz
divb
dec
inc
adc
add
sub
fwait
add
nop
sar
mov
add
sbb
je
addb
loope
sub
mov
add
adc
add
sub
test
lock
movsl
out
scas
cmpsb
arpl
lret
and
sbb
movsl
push
arpl
inc
es
xchg
sti
shll
dec
and
jb
and
lods
xchg
inc
fisubrs
std
stc
into
arpl
sub
mov
jl
cmp
adc
jmp
mov
add
test
aam
jge
jo,pn
jbe
mov
scas
test
pop
dec
cmpsl
mov
sub
mov
xchg
mov
or
cmp
aaa
call
fdivs
lods
adc
fstpt
ret
aaa
xor
mov
mov
int3
or
mov
out
arpl
fsubs
pop
rcrl
dec
subb
cmp
gs
mov
es
lcall
orl
mov
jl
clc
imul
stos
pushf
push
xchg
cs
jl
popa
mov
in
ret
sbb
xor
adc
fdivl
jmp
xchg
arpl
stc
inc
inc
xchg
adc
jne
mov
popl
movsl
aaa
mov
inc
call
js
add
push
add
mov
sbb
loopne
push
and
jle
sbb
daa
jmp
adc
fs
push
sbb
jae
stc
dec
xor
xor
jp
jp
aam
aad
pop
imul
out
std
lds
jo
clc
and
movb
aas
push
clc
mov
lods
lret
in
sarb
inc
xchg
push
push
dec
inc
jnp
in
lods
mov
mov
or
leave
nop
rcrb
gs
cmp
ljmp
gs
jae
and
push
das
push
aad
leave
out
mov
leave
mov
fldl
dec
mov
dec
addr16
dec
std
adc
and
mov
mov
adc
lea
fiadds
xchg
daa
xchg
push
stos
cmp
or
daa
dec
jl
mov
in
inc
jle
dec
sub
es
inc
sbb
leave
add
adc
adc
out
sbb
sahf
test
lcall
gs
or
push
mov
or
js
rcr
mov
test
ret
jl
dec
sahf
shlb
push
xchg
mov
sub
push
repz
scas
mov
adc
cmp
js
push
mov
mov
xchg
cs
and
ret
cmpb
and
stos
push
xchg
pop
cmpsb
mov
stos
popf
imul
vcomisd
pop
xchg
fs
enter
push
sbb
and
mov
push
adc
jns
mov
faddl
gs
insl
dec
and
loopne
push
lret
xor
andl
pop
adc
repz
dec
ret
jmp
fbld
in
imul
clc
mov
mov
cmpsl
push
pop
cmp
mov
pop
dec
aad
fwait
call
sbb
add
test
mov
ja
push
jg
out
jl
mov
adc
pop
jmp
repnz
fldt
and
xor
or
in
adc
cwtl
pop
mov
jae
dec
pop
loopne
cltd
fistpll
aad
negb
test
jne
add
xchg
pusha
and
mov
sbb
mov
jne
add
sub
lods
fsubp
lods
jne
and
adc
dec
addr16
pushf
lret
xorl
jns
lods
xor
and
rclb
push
jo
and
add
imul
addb
addb
ljmp
and
push
mov
not
sub
fldt
mov
jmp
jle
push
and
push
mov
mov
lcall
jmp
lret
lods
pop
repz
push
mov
lcall
mov
mov
sub
cwtl
inc
jo
scas
mov
push
movsl
mov
mov
cs
rcll
imul
cmp
xor
push
xor
imul
add
sub
cs
pop
cmpsl
pop
xchg
push
inc
aas
mov
mov
in
mov
sub
xchg
out
push
mov
mov
faddp
fbld
mov
xor
mov
sbb
sarl
or
pushf
adc
mov
stos
stos
push
aad
xchg
sbb
or
jle
pop
dec
jge
ret
gs
or
xor
push
into
popf
xlat
jge
mov
jnp
loope
pop
ja
movsl
push
sahf
cwtl
or
jmp
pop
inc
pop
test
inc
aam
cs
adc
mov
add
icebp
push
icebp
cmp
or
cmp
adc
movsl
imul
das
int
fcmovnu
inc
ds
sub
xchg
scas
sbbl
into
xor
add
dec
scas
lods
int3
and
pushf
into
dec
inc
inc
aaa
ret
jnp
dec
and
inc
dec
mov
ss
pop
icebp
jae
clc
mov
sub
add
and
or
xchg
dec
xor
jnp
sub
mov
inc
xchg
sahf
out
ljmp
inc
hlt
jo
xchg
xchg
in
push
mov
mov
xchg
push
ficoms
jne
fsubl
and
repnz
leave
jns
imul
daa
mov
cld
cmp
mov
or
call
mov
mov
mov
xchg
negl
test
xor
cmpsl
or
xchg
int
dec
loop
mov
cli
lcall
lock
push
sbb
adc
and
cmpsb
fiadds
enter
dec
outsb
xor
testl
aam
stos
adc
mov
sahf
fwait
jo
fimull
sub
mov
repz
das
cli
addb
dec
mov
ja
adc
and
lods
cmp
call
sbb
jnp
inc
or
sahf
xchg
aam
xlat
mov
imul
outsl
nop
mov
sub
fists
stos
inc
mov
movsl
sbb
shll
fwait
jp
adc
dec
add
cmc
clc
test
push
mov
insb
xor
aam
sub
mov
rclb
pop
mov
lods
xor
sbb
roll
dec
into
les
pop
push
cmpsl
sbb
je
fimuls
xchg
pop
and
and
mov
mov
mov
lret
lcall
pop
push
add
enter
xchg
bound
xchg
adcb
and
pop
cltd
mov
mov
xchg
call
sbb
dec
inc
popl
dec
mov
imul
add
std
inc
mov
mov
xchg
jo
imul
cmp
outsb
insb
mov
xchg
popf
lods
in
mov
jmp
repz
ret
int3
jmp
jo
outsl
mov
aaa
jmp
inc
mov
pop
ret
sti
sahf
jecxz
pop
cmpsl
fst
inc
hlt
stos
std
subl
sbb
dec
mov
fs
mov
mov
shlb
xor
dec
mov
cmp
cmc
dec
out
pop
mov
push
sub
mov
mov
xor
loopne
test
fldt
stos
pop
xchg
out
or
addl
cmp
mov
mov
dec
fwait
loop
add
fidivrs
xchg
jle
mov
xor
mov
inc
push
mov
aas
push
into
adcl
je
in
test
xorb
ljmp
ljmp
out
and
loop
adc
outsb
clc
adc
rorl
xchg
je
or
scas
push
cmp
sub
xchg
and
and
hlt
inc
cwtl
cmp
fmulp
imul
jmp
dec
movsl
push
inc
pusha
movsl
icebp
mov
push
or
imul
cmp
add
adc
in
jae
ds
pop
dec
xor
arpl
jno
mov
mov
inc
push
sbb
or
mov
fsubl
fwait
rol
fldt
cwtl
sahf
loope
add
and
into
sbbb
add
gs
leave
gs
pop
sub
loope
ret
aas
push
add
mov
push
sti
pop
jmp
fwait
inc
push
inc
jo
lret
sbb
push
mov
test
bound
push
sub
loope
mov
pop
add
cltd
int3
dec
outsl
push
pusha
mov
mov
sub
loopne
xchg
addb
mov
rorl
mov
mov
lds
mov
and
sahf
aas
cmpsl
mov
and
cmp
int
dec
sbb
pop
repnz
pop
jmp
adc
xor
loop
inc
dec
out
insl
mov
pop
aam
cmp
add
stc
pop
fildll
xchg
or
popa
mov
or
adc
fwait
jbe
mov
jge
mov
sub
push
xchg
lret
aas
push
fwait
mov
push
arpl
mov
in
adc
xor
sahf
mov
data16
jle
mov
in
insb
movsl
mov
adc
std
dec
bound
pusha
dec
divb
les
xchg
daa
mov
dec
push
xchg
stc
jnp
clc
shlb
sti
arpl
js
inc
and
or
imul
cmovno
addr16
pop
jg
xchg
adcl
mov
push
leave
push
and
pushf
xor
xchg
mov
sub
sarb
insl
lret
adc
pop
or
mov
mov
testl
lods
xchg
pop
push
sbb
das
test
dec
jae
sbb
pop
pop
mov
mov
in
and
xchg
mov
cmc
xchg
dec
mov
pop
arpl
push
frstor
push
pop
inc
xchg
ja
or
adc
pop
push
insb
loope
pop
pop
pop
fbld
shr
mov
xchg
adc
dec
cmpsb
repnz
xchg
popf
push
cvttps2pi
mov
ret
daa
xchg
cld
jnp
shl
stos
fsubs
pusha
cmc
repnz
arpl
mov
sbb
mov
xlat
add
push
xor
test
clc
ss
pop
cli
insb
imul
push
xor
lea
sbb
gs
test
cmp
icebp
out
mov
pop
sbb
cs
or
add
inc
nop
add
das
ljmp
nop
push
mov
mov
loope
fbld
sub
inc
mov
push
mov
mov
push
jno
lods
orb
mov
lret
dec
bound
shll
xor
add
or
mov
js
pop
ljmp
filds
add
lds
pop
xchg
adc
fcmovne
xchg
xchg
addr16
pop
pop
adc
ljmp
pop
jg
sbb
nop
add
cmc
cmc
add
adc
or
mov
mov
aaa
aad
outsl
shll
out
push
loopne
lock
inc
cld
fcomps
inc
add
int3
dec
mov
jae
lods
ja
xorb
mov
rorl
lock
xchg
push
push
jbe
adc
mov
pop
js
fdivs
repnz
mov
mov
fbstp
scas
xor
mov
jmp
imul
or
mov
aas
iret
stos
push
xchg
mov
out
repnz
repnz
cwtl
sbb
dec
sub
les
call
inc
or
imul
dec
sub
aas
pop
and
jae
cmpsl
jne
out
outsl
jge
push
es
ret
or
mov
push
inc
push
cmp
gs
rcrb
popa
test
nop
loope
jmp
shll
fsubrs
scas
lock
jg
mov
xchg
out
cmp
subb
out
pop
mov
xchg
jp
cmc
je
outsb
xorl
arpl
or
dec
mov
cltd
aam
add
pop
rolb
or
xchg
ss
orb
dec
fisubs
jg
add
mov
cmpsl
pop
mov
mov
scas
cmp
imul
repnz
dec
bnd
jne
aas
xor
loop
pop
shr
cmp
clc
mov
xchg
sub
test
lods
jg
pop
mov
push
test
inc
imul
imul
mov
pushf
lds
inc
cmpsl
cmc
in
fwait
stc
scas
imul
sub
shll
jmp
rcrl
arpl
pop
and
and
fwait
add
rorb
sahf
fildll
inc
add
lods
test
popf
das
fisttpl
fadds
popf
into
lods
addr16
push
arpl
xchg
rorb
fdivr
jne
push
xor
movsb
push
mov
inc
mov
gs
sbbb
xor
aad
add
pop
jmp
adc
popa
ljmp
xchg
aaa
mov
lcall
adc
fistl
addr16
pop
and
push
or
cmp
dec
pop
push
push
scas
bound
sti
inc
mov
and
dec
or
out
cmp
stos
testb
cmp
push
dec
aam
xlat
sbbb
stos
clc
cmpsb
test
and
nop
sbb
std
imul
fdivl
pop
mov
icebp
mov
nop
int
xchg
into
mov
or
inc
cli
aam
scas
xor
cmp
mov
sahf
cmp
jns
loopew
in
sysenter
out
jle
push
outsl
pop
lods
jp
push
lock
jb
icebp
mov
andb
fstpt
mull
inc
cmpsl
test
das
pop
xor
fs
std
jne
jo
inc
nop
cld
push
add
out
push
lret
and
dec
in
mov
outsl
mov
and
or
jbe
mov
adc
dec
fstpl
and
pop
inc
dec
pop
lods
test
out
sbb
adc
xchg
mov
pop
adc
sub
nop
dec
fucom
test
add
adc
and
or
and
call
ja
add
pop
adc
movsb
push
jns
fbstp
add
sbb
stos
data16
ja
in
mov
aas
mov
lds
das
push
out
in
xor
add
or
fadd
lddqu
shl
lret
cmpsb
in
fisubl
rcrb
inc
pushf
jle
pusha
sub
aad
or
shrl
sbb
mov
lfs
divl
sbb
adc
movsl
mov
xchg
test
sub
sub
or
ficomps
das
sub
pop
sbb
addr16
hlt
fidivrs
dec
in
mov
dec
dec
cmp
inc
xchg
sub
sbb
jmp
cmp
push
mov
movsb
jb
rcrl
gs
sbb
ret
push
or
push
loop
push
xchg
pop
adc
jae
je
cmp
das
or
or
in
jl
jle
mov
aas
in
sbb
pop
pushf
xchg
lods
out
nop
data16
add
inc
inc
xchg
mov
push
mov
xchg
nop
jae
pushl
repnz
and
out
dec
data16
and
test
pusha
inc
cwtl
mov
and
dec
outsb
ret
ljmp
andb
mov
adc
push
nop
fdivl
popf
loopne
clc
xchg
add
adc
dec
mov
pop
fs
pop
fistpll
in
mov
cmp
or
int
ja
push
iret
push
in
imul
fidivrl
adc
and
adc
or
rcr
out
iret
lea
and
subl
or
hlt
pop
xchg
insb
xchg
inc
nop
adc
or
add
int
lea
xchg
insb
mov
test
call
movsb
das
sub
xor
dec
jmp
ret
out
add
cs
mov
scas
and
sub
dec
or
mov
insb
add
std
rcrl
sub
pop
mov
outsb
and
into
imul
adc
sbb
fsub
inc
aaa
mov
mov
mov
popf
mov
fdivrs
sub
repnz
addr16
nop
js
ss
xchg
outsl
mov
jle
inc
xlat
xchg
ret
jle
mov
fbld
cmp
sub
call
cmpsb
outsb
xor
xchg
into
arpl
leave
cli
ss
jmp
out
sbb
rorb
push
arpl
cmpsl
pop
imul
icebp
mov
sbb
jae
lods
clc
fisubrl
xchg
lcall
in
outsl
ret
subl
in
add
pop
xchg
mov
push
fimull
mulb
movsl
dec
add
icebp
inc
rcr
mov
jp
adc
dec
es
mul
call
mov
mov
dec
cmp
scas
add
out
cltd
loop
mov
inc
neg
iret
out
mov
or
jg
imul
pop
or
lock
adc
cld
jg
insl
sub
mov
ds
mov
mov
jo
xorb
mov
aaa
mov
or
adc
scas
mov
sti
cltd
aad
mov
daa
adc
inc
in
xor
lahf
faddp
inc
stos
shr
repz
sbb
clc
shlb
jns
outsl
lods
in
loopne
gs
mov
fisttpl
int3
inc
xchg
aas
rclb
dec
xchg
cld
cmp
orb
mov
call
add
out
xchg
test
sub
into
dec
push
das
xchg
jmp
cmp
adc
mov
dec
mov
xchg
ret
push
xor
pop
push
lods
adc
or
mov
clc
and
xor
stos
test
cmpsl
and
xchg
int3
pop
std
jnp
lds
mov
lret
pop
push
enter
xlat
loopne
cmp
imul
rorb
mov
xchg
push
lret
mov
xor
pop
enter
or
lret
ret
dec
repnz
mov
inc
lret
rorl
cwtl
into
inc
dec
icebp
xchg
xor
mov
call
pop
mov
fs
enter
lahf
mov
jmp
rol
incl
mov
sahf
ljmp
fprem1
jl
add
js
mov
and
add
mov
fsubrs
xchg
push
xchg
add
cmp
in
negl
mov
sub
scas
out
addr16
pop
movsl
in
test
mov
nop
fcom
jno
aaa
jo
push
mov
inc
movsb
jns
sub
lret
xchg
sarb
jne
loopne
mov
push
pop
mov
stos
dec
mov
xlat
mov
pop
stos
inc
pop
jbe
jae
ja
sbb
xor
mov
orb
call
sbb
and
pop
sbb
cmp
mov
loope
outsb
lret
stos
ljmp
in
popa
pop
inc
std
dec
in
mov
pop
lcall
or
cmpsb
jmp
xor
loopne
xchg
sub
fcomps
and
popf
insb
cmc
daa
pop
lret
and
and
cltd
xor
fnsave
cmovs
and
xchg
xchg
xchg
adc
mov
aaa
fwait
push
jae
xor
or
inc
jb
dec
pop
sbb
xor
ror
imul
iret
test
xor
ds
and
push
dec
sti
in
pop
cmp
mov
add
and
into
aas
xchg
adc
stos
sarb
faddl
faddl
aas
and
roll
adc
fucomip
push
nop
mov
bound
test
adc
stc
enter
testl
xor
cmpsl
dec
xchg
cmc
daa
gs
and
out
enter
sbb
xor
fisttpl
mov
sti
pop
xor
lcall
loop
mov
push
mov
mov
notb
xor
jne
nop
fmull
std
fdivrl
divb
jae
insb
xchg
push
xor
add
fsub
cmp
aam
inc
iret
inc
inc
fistps
scas
sar
jge
pop
sub
push
push
ficompl
adc
fsubr
or
mov
jne
out
movsl
ss
and
insl
hlt
addr16
jmp
je
mov
call
loope
add
addr16
xchg
mov
inc
push
stos
loope
sahf
shl
int3
push
lahf
add
shl
xor
movswl
stos
mov
fidivl
adc
ret
repz
pop
cmpsl
push
lds
sbb
pop
cmp
shrl
repnz
push
lea
mov
cmp
je
push
call
repz
mov
cmp
repz
bound
loopne
lods
mov
inc
rclb
flds
cmp
cwtl
dec
std
fdivl
hlt
out
inc
fisubrl
lret
push
cmpb
sub
add
xchg
xor
test
xchg
adc
int
test
daa
pop
and
and
stos
jecxz
inc
push
fldenv
push
adc
cmp
test
and
sub
arpl
cmpsb
push
cmpb
and
hlt
add
inc
loope
std
pop
cmp
cwtl
mov
xchg
and
out
cmp
insl
jg
adc
negl
rcrl
sub
std
pop
sub
daa
cmp
cmp
dec
insl
cmp
push
and
addb
or
popf
sub
jp
lock
rcrb
rcll
jb
mov
lods
in
push
in
js
sbb
lea
adc
insl
clc
adc
popa
jp,pn
arpl
push
repz
lret
popa
or
jle
rcrb
adcb
pusha
and
xchg
or
and
lock
pop
jl
cltd
pop
fs
cmp
arpl
stos
popa
sbb
imul
or
push
scas
jecxz
sbb
stos
in
out
mov
add
pop
lret
and
or
xchg
test
out
clc
pop
xchg
andl
xchg
dec
aam
sbb
jne
icebp
pop
dec
ror
mov
fnstcw
enter
sub
pop
sub
and
jg
pop
std
aaa
pop
out
or
js
imul
daa
xchg
fwait
sub
addr16
dec
jp
push
and
mov
jne
ja
push
sbb
xchg
pusha
jg
or
mov
stc
scas
repnz
xor
dec
or
ret
lret
repz
push
sbb
mov
sbb
testb
mov
mov
push
jne
fcomp
or
ja
adc
fwait
repnz
cmp
pop
aaa
sbb
sbb
cmp
shrl
mov
pop
mov
cld
sub
inc
mov
adc
hlt
lods
add
or
jmp
lea
xchg
ficompl
jo
or
movsl
fistpl
es
aad
mov
pop
leave
or
scas
test
in
icebp
mov
int3
sbb
sub
das
fisubs
lcall
idivb
loop
mov
or
inc
push
mov
mov
mov
and
mov
pop
mov
push
pop
ret
mov
imul
inc
mov
adc
xchg
pop
pushf
jbe
push
imul
cmp
cmp
in
dec
and
aam
or
add
inc
cli
movsb
mov
nop
test
and
jmp
test
mov
in
lods
lods
leave
xchg
pop
clc
ja
push
hlt
stos
cmpsl
lock
inc
cwtl
jg
adc
fisttps
icebp
jl
pop
sets
rcrb
xor
stos
ds
pop
dec
repz
cld
cld
xchg
hlt
dec
ljmp
ret
jnp
jo
cmp
fistps
fidivl
pop
xor
dec
clc
addr16
das
lods
lds
imul
mov
js
testb
cltd
jne
movsl
xlat
add
jb
jbe
fs
add
push
xchg
push
or
fcomps
pop
push
outsl
ja
ss
sbb
push
pop
je
mov
mov
mov
int3
sub
mov
push
pop
mov
add
jns
xchg
ja
pop
sub
or
or
push
mov
jb
mov
add
cmp
stos
aad
imulb
lret
aaa
aam
xchg
lods
mov
out
gs
mov
leave
and
xchg
sbb
lcall
jp
jns
cmp
test
repz
rorl
in
loope
adc
jp
faddl
jnp
popf
sbb
dec
movsb
and
cmp
jl
jmp
pop
jae
mov
or
scas
dec
mov
ljmp
jbe,pt
imul
inc
iret
negl
iret
int
test
xor
cmp
jp
mov
or
push
pop
sbb
fidivs
xchg
shr
xor
push
xchg
fucomp
mov
mov
inc
in
jb
ja
cmp
sub
pop
std
bound
add
xchg
lret
xor
adc
jnp
enter
scas
call
push
call
push
and
pop
cmp
mov
jne
inc
xchg
fiaddl
mov
adc
adc
seta
push
test
sub
stos
push
mov
dec
mov
add
out
pusha
push
aad
test
pop
mov
xchg
fistpll
inc
cmp
jne
les
js
mov
or
out
outsb
addb
and
mov
test
or
dec
out
dec
jbe
xlat
cwtl
cs
cmp
mov
dec
mov
daa
mov
lods
lret
inc
imul
mov
int
rcrb
or
pop
dec
dec
mov
dec
dec
pop
xorb
in
outsl
sub
push
das
lea
xor
inc
ja
in
cld
xchg
in
jle
pop
inc
es
in
mov
repnz
sub
es
aaa
add
test
dec
gs
mov
mov
into
stc
aaa
mov
cmp
pop
sbb
shr
xchg
adc
movsl
iret
addr16
jecxz
mov
or
xor
jnp
aaa
movsl
mov
mov
sbb
sbb
jbe
mov
pop
aas
negb
pop
xchg
fdivrl
dec
push
dec
push
aaa
and
pop
fdivs
inc
sti
sbb
mov
dec
cmc
ds
xchg
jmp
in
adc
dec
and
inc
out
or
or
jo
pop
sbb
cmpl
iret
add
hlt
addr16
clc
sbb
es
ds
jmp
mov
stos
and
test
mov
jo
mov
mov
mov
test
push
mov
aas
xor
xchg
jmp
scas
lods
xor
mov
pop
and
testb
test
mov
or
aaa
inc
mov
pop
cwtl
mov
jle
sub
lea
test
mov
mov
jnp
fwait
rcr
pop
pop
adc
cmpsl
adc
addl
mov
adc
stos
sub
xor
aaa
ret
fadd
ja
sarb
jne
fucomp
lret
jno
mov
push
mov
push
jmp
fsub
ret
fs
sub
nop
push
adc
pop
cmp
xor
sub
sub
pop
jno
push
push
imul
push
sti
xchg
push
mov
xchg
mov
push
cli
js
popf
call
mov
pop
std
inc
cli
xlat
ja
testl
pop
sti
fdivrl
mov
sub
ret
mov
test
lahf
aas
mov
mov
pop
int
test
enter
xor
je
pop
outsl
mov
fs
push
sbb
or
pusha
dec
cwtl
loopne
or
jb
fbld
movsl
lock
push
cmp
push
cs
scas
push
lcall
enter
outsl
inc
push
out
lods
pmullw
xchg
or
jmp
test
iret
sti
pop
lea
dec
add
jge
dec
cmc
dec
jmp
sahf
jp
sbb
popf
call
mov
mov
lds
scas
xor
mov
xchg
inc
cmc
fmuls
cmp
lock
xor
addr16
pop
mov
addr16
inc
xchg
lds
push
int3
add
sub
scas
mov
sahf
mov
inc
pusha
loope
and
push
pop
push
fisubl
int3
fidivrl
jne
and
ds
jne
mov
lock
outsb
shl
and
int3
xchg
out
pusha
dec
dec
loope
mov
cmc
sub
addl
cs
fwait
xchg
add
push
cmc
mov
daa
push
push
or
imul
mov
sbb
dec
push
mov
push
lret
in
jo
call
mov
rol
in
out
mov
fnstenv
and
pop
xchg
je
or
dec
mov
pop
push
jp
sub
arpl
stc
loop
hlt
inc
sbb
dec
mov
daa
add
mov
mov
adc
jle
aaa
pop
cmp
cwtl
pop
sub
lods
push
decb
mov
daa
add
mov
pop
imul
iret
pusha
xorb
rcrb
jecxz
sub
in
movsl
mov
mov
jno
lds
mov
jb
in
inc
shll
daa
cmp
out
xchg
pop
decb
insl
pop
or
sub
dec
inc
stc
sbb
xor
lret
stc
jbe
aad
or
das
xor
mov
sbb
and
sbb
in
pop
ffree
das
mulb
or
lods
jmp
xorl
and
test
loopne
repz
fnclex
fs
leave
inc
mov
xor
dec
mov
sbb
cmp
push
push
sbb
jge
aaa
dec
jl
aam
pop
mov
xor
out
fnstenv
movsb
push
mov
imul
in
or
clc
call
cld
jle
dec
out
mov
rcrb
dec
pop
cmp
in
ret
lock
iret
cmp
push
sub
push
outsb
sbb
aam
xchg
add
cli
lcall
add
sub
cmp
xor
cmpsb
xchg
or
cmp
dec
nop
ss
nop
out
fsubl
push
jle
and
das
mov
xor
cltd
mov
shll
pop
repz
xchg
pop
in
lock
mov
inc
mov
popf
adc
scas
std
or
rclb
loope
daa
es
and
mov
xor
mov
ret
jp
fimull
popa
or
push
ss
icebp
int3
xchg
push
mov
orb
lock
push
inc
cs
lods
jns
aad
push
sbb
rep
push
add
arpl
mov
inc
push
mov
gs
pop
push
mov
sbb
adc
cli
dec
inc
pop
add
push
rcrb
add
sti
sahf
pop
add
pop
scas
fisubs
test
loope
in
and
mulb
sub
and
popa
popa
dec
repz
mov
mov
dec
cmpl
int3
dec
shrl
daa
and
xchg
dec
inc
adc
mov
repnz
jo
insl
shrb
sbb
and
das
cmp
adc
mov
and
jle
or
dec
fimuls
fistps
push
jbe
lea
push
xchg
jl
das
sbb
xor
orb
xlat
jae
aad
jbe
mov
mov
fimull
xor
and
jo
add
or
testb
push
and
xchg
int3
lock
bound
test
lds
nop
lcall
inc
rorl
aaa
es
fisubrs
xchg
mov
fcmovb
mov
jle
popf
mov
xor
jp
add
out
push
cmovge
adc
sub
stos
sub
mov
adc
insl
xchg
inc
jge
test
insl
add
sub
je
lret
xor
xor
mulb
cs
test
enter
test
xchg
dec
data16
xor
neg
sub
stc
js
mov
add
insl
adc
mov
add
arpl
jge
aam
scas
push
mov
cltd
sbb
imul
sub
mov
outsb
cmp
xor
pop
int3
cmp
adc
pop
imulb
add
loope
add
repnz
or
ret
sti
mov
inc
rclb
aaa
scas
cli
shl
movl
add
or
lahf
or
es
scas
pop
cmova
and
xchg
cwtl
lret
andl
aam
xchg
out
mov
cmp
roll
push
imulb
fs
loope
shll
lret
loopne
inc
lret
call
dec
xorl
stos
daa
dec
clc
mov
ja
mov
cmp
xchg
sbb
push
int
or
mov
divl
xor
aas
ljmp
lea
lea
xchg
sub
push
inc
push
icebp
push
sbb
lods
cmpsl
cmp
adc
lret
pushf
xor
xchg
adc
sbb
jnp
loope
or
sub
test
xchg
in
push
pushf
lea
or
mov
and
jnp
cmp
mov
daa
fimuls
rcl
xor
setl
mov
mov
sub
or
lds
orb
or
jl
test
mov
inc
mov
lods
mov
ds
js
push
mov
xchg
stc
scas
lea
push
or
cmp
scas
outsb
andb
mov
jp
rolb
fbld
cmp
outsb
lea
mov
mov
loopne
std
and
jge
push
stc
mov
cli
mov
push
add
inc
outsl
outsb
jle
imul
xor
jae
lea
sub
push
ja
fucomip
cli
push
lds
jmp
addr16
daa
xchg
int
inc
cmp
fadd
inc
or
mov
lods
jno
shr
sub
xchg
std
mov
das
add
mov
int
inc
pop
cs
jmp
sub
cltd
or
cwtl
mov
call
xchg
xor
xchg
sub
pop
sbb
push
gs
loopnew
aaa
movsb
push
pop
scas
jmp
or
sub
dec
push
mov
xchg
jno
cs
sbb
insb
pop
push
adc
iret
sarl
xor
mov
and
testl
out
pop
dec
pop
movsb
or
je
sbb
std
xchg
out
adc
pop
mov
imul
add
sub
pop
cs
lods
cwtl
xchg
dec
dec
add
jg
and
sub
push
dec
jge
push
lcall
pop
fmuls
sti
jmp
dec
loopne
fidivs
or
fdivrs
int
xor
push
mov
or
std
xchg
xchg
and
les
outsb
jbe
sub
and
xchg
bound
cmp
xchg
loope
mov
sbb
fwait
cli
cmp
bound
dec
push
xor
ss
mov
dec
lcall
xlat
lea
jno
push
mov
psubb
mov
adc
mov
sar
lods
imul
test
sbb
outsl
sbb
movsl
loop
je
xor
push
gs
incb
or
jno
popf
sti
adc
loopne
iret
push
xchg
in
out
fidivrs
and
mov
stos
or
mov
movq
ja
dec
mov
lret
mov
lahf
xchg
icebp
inc
cmp
cltd
push
xchg
rcrb
jmp
cmc
lret
cli
xor
or
mov
ret
hlt
loop
sub
mov
ret
cmp
adc
and
loopne
cmp
cmp
or
cmp
cwtl
and
stc
ja
jmp
in
mov
mov
add
jno
xchg
xorb
ja
dec
std
mov
sbb
mov
mov
cmpsl
add
push
push
push
sti
jecxz
xor
add
out
clc
mov
sub
int
jno
fiadds
mov
and
cmp
mov
ret
cli
xor
mov
xor
push
add
sbb
and
in
insl
fs
shrb
mov
sub
fimuls
mov
sbb
loope
pop
rorb
xchg
mov
out
push
push
push
cmp
sti
pop
push
enter
int3
mov
aas
and
jbe
mov
aas
imul
inc
sub
push
adc
int3
mov
jbe
sbb
xor
mov
frndint
sub
dec
enter
push
mov
test
aam
push
adc
sbb
loopne
mov
jno
cmpsl
vmread
cmpl
mov
ljmp
mov
mov
mov
mov
inc
sub
es
dec
xchg
mov
out
push
fisubrl
push
in
hlt
pop
xor
mov
nop
test
es
pop
scas
dec
or
jge
out
jno
xchg
jns
or
add
in
sbb
jae
or
scas
ljmp
inc
pop
sub
repnz
int
test
ret
push
lret
loope
or
xor
xor
push
fidivl
scas
mov
adc
and
xchg
push
test
jecxz
cmp
jg
mov
push
loopne
mov
ljmp
push
pop
push
sub
fwait
rcr
insl
cmc
ret
inc
jnp
nop
and
xor
pop
add
xchg
nop
jns
repnz
xchg
leave
mov
mov
shl
add
mov
and
add
gs
mov
mov
mov
fsubs
mov
stos
push
mov
cli
imul
xor
imul
and
shrb
sbb
loop
adc
mov
inc
mov
pushf
aam
add
push
jle
xor
ss
jle
repz
jo
add
pop
push
mov
not
repz
dec
int3
popa
int3
lahf
push
adc
jo,pn
popa
xorb
imul
ja
push
mov
gs
je
out
dec
or
pop
outsl
and
jae
test
dec
push
in
add
addr16
jl
mov
jecxz
pop
stos
add
cli
mov
std
sbb
addr16
mov
pop
mov
std
inc
std
fsubrl
out
icebp
xor
ja
call
test
dec
dec
test
dec
sti
push
add
call
and
sub
inc
lods
outsl
dec
pop
mov
sub
sbb
push
xchg
xor
es
ljmp
sub
xor
xlat
push
cmp
pop
leave
test
loopne
call
leave
pop
lock
lret
rcrb
push
and
roll
inc
jno
call
notb
sub
pop
adc
aaa
adc
inc
or
cmc
pusha
push
xorb
test
sub
das
lret
das
pop
mov
out
rolb
add
xchg
pcmpeqd
pop
jmp
xchg
cli
int
es
xchg
fcompl
adc
lahf
imul
fwait
test
xchg
pop
xor
shl
dec
sbb
cs
faddl
mov
push
je
cli
sub
fidivrl
sub
pushf
lahf
notb
hlt
and
aas
jns
fwait
daa
cs
mov
enter
cmp
lods
push
or
or
loope
lods
loop
daa
jns
mov
dec
rcrb
popa
push
insb
sub
sub
int
lret
aad
loopne
repnz
in
push
mov
xor
xchg
push
mov
popf
xor
inc
or
mov
dec
cli
pop
or
mov
pop
cs
pop
loop
xchg
jb
js
lret
or
pop
stos
inc
mov
movb
push
xchg
jne
add
cmp
test
call
out
mov
cltd
dec
leave
mov
sbbl
adc
adcl
push
dec
loopne
push
xlat
jecxz
sub
push
repnz
cmpl
aas
sbbl
and
push
jns
and
pop
ret
adc
pop
or
outsb
inc
inc
adc
mov
stos
or
xor
repnz
push
fst
xchg
outsl
movsb
dec
dec
adc
popf
inc
cmp
pop
and
pop
addr16
sbb
push
cld
mov
ljmp
xorl
ret
movsb
jecxz
icebp
jp
mov
imul
mov
xchg
mov
jo
insb
sbb
sti
in
ret
xchg
lea
mov
xchg
lods
adc
das
fsts
mov
sub
adc
enter
push
mov
pop
aam
addr16
adc
popf
andb
pop
dec
loope
cmpsb
lock
or
xor
aam
adc
ret
outsb
out
add
mov
icebp
mov
test
cmpl
popf
jae
sub
scas
lods
dec
sbb
pop
mov
out
andl
test
xor
cwtl
data16
xchg
mov
mov
addr16
fisttpl
adcl
xchg
mov
pop
xor
fbstp
insl
mov
and
xor
cmp
push
push
mov
test
xorl
sbb
add
and
and
movsb
mov
xchg
cmc
out
out
sbb
xchg
mov
lods
cmp
xor
pop
mov
push
inc
pusha
repnz
xchg
mov
ret
jg
add
stos
jne
add
mov
mov
popa
adc
lret
lods
add
cmp
sbb
add
repz
mov
inc
scas
mov
subl
fildl
fdivrl
and
mov
iret
js
jge
mov
mov
jecxz
js
test
insb
pop
popf
jbe
test
sbb
aam
pop
inc
or
lods
inc
test
hlt
push
inc
test
scas
addr16
pusha
fidivrl
mov
add
pop
xor
add
mov
dec
cmp
inc
int3
aad
adc
xor
and
popa
sub
add
negb
mov
push
inc
cltd
mov
out
fstl
mov
out
out
test
mov
test
pop
dec
in
mov
inc
pushw
pop
cld
sbb
inc
or
xorl
sbb
lahf
sbb
loop
daa
aad
fistps
cli
jmp
lcall
mov
add
xchg
les
dec
pop
adc
repnz
pushf
or
stc
in
stc
sahf
ret
shrb
lds
int
jge
mov
loope
mov
pushf
outsl
enter
pop
cmp
inc
outsb
sbb
bound
sub
xchg
lock
daa
sbb
popa
mov
lcall
scas
sahf
dec
test
pop
sbb
push
inc
mov
mov
arpl
fnsave
xchg
xor
jl
lcall
scas
mov
enter
decb
insb
xor
loop
mov
loopne
and
mov
jb
add
xor
insl
sub
popa
leave
ja
arpl
adc
inc
in
push
aam
enter
bound
mov
push
mov
addr16
push
sbb
dec
imul
inc
push
call
and
mov
negl
int3
adc
dec
xchg
pop
aam
in
setg
push
lret
mov
std
stc
cli
ret
or
nop
adc
inc
pop
xchg
adc
fsubs
mov
jecxz
add
jl
pop
aam
mov
xchg
lret
sub
js
lods
dec
movsl
das
mov
les
push
lock
cmp
dec
rolb
int3
sbb
sub
dec
add
adc
daa
outsb
jg
out
ret
daa
push
jns
mov
in
pop
adc
lret
mov
lods
pop
pop
jae
cmp
cmp
decl
xor
inc
sbb
pop
pusha
sahf
pop
nop
mov
adc
push
imul
push
push
call
or
adc
cmp
pop
cmp
in
fstps
fnstsw
int
sbb
lods
cltd
adc
cmp
rorl
mov
jo
mov
pop
or
call
pop
lcall
ds
mov
rcl
inc
push
push
je
xor
push
jns
mov
fildl
inc
std
pusha
cmpsb
inc
xchg
mov
inc
movsb
cltd
xchg
lds
jb
adc
sahf
or
pop
push
inc
rol
sbb
imul
pop
pop
int
or
inc
mov
xor
mov
imul
and
jg
fnstsw
or
xor
jmp
add
loope
rcrb
jnp
and
cmpsb
insl
sbb
push
adc
jne
int3
pop
ffree
addr16
aam
insb
jns
mov
lahf
mov
mov
sbb
pop
lods
adc
or
xor
fsubp
inc
cltd
dec
add
mov
mov
imul
cmp
cmp
fistl
jge
mov
jle
lret
jno
out
or
xchg
data16
jle
cmpsl
fwait
and
xlat
loope
out
movl
cmp
pushf
jno
dec
cmpsl
loop
lahf
dec
cld
pop
and
lods
gs
notb
divb
cmp
lds
sbb
or
jno
mov
out
iret
inc
jmp
loopne
jnp
in
stos
and
loopne
and
cmp
out
and
adc
pop
ret
pop
sti
stc
ljmp
xchg
ss
adcb
sbb
jle
and
shll
sti
leave
or
sbb
mov
xchg
jecxz
push
loope
ja
lea
add
push
add
sahf
hlt
movl
movsl
push
mov
mov
push
rsm
mov
xchg
mov
lods
in
pop
dec
pop
mov
ret
xor
rol
adc
orl
insl
cmp
ja
inc
push
pop
mov
inc
adc
lds
popa
dec
xchg
xor
in
mov
adc
dec
ljmp
int3
pop
mov
sti
outsb
aam
ja
jns
xchg
jne
movsb
add
out
loop
fs
add
jns
add
stos
push
mov
sti
adc
jo
jnp
or
insb
sbb
dec
mov
enter
adc
das
insb
xor
push
aas
pusha
jbe
cltd
movsb
mov
sub
cs
xchg
pop
jle
jno
dec
jns
mov
push
and
push
or
cs
movsl
lods
xor
dec
rorl
add
pop
cmp
jbe
sub
push
fdivrl
shlb
xchg
cmpsb
and
pop
or
xlat
ja
in
sahf
and
ds
aas
mov
mov
gs
packsswb
inc
lds
or
adcb
insl
xlat
je
clc
add
add
je
fsubrs
std
scas
imul
and
lahf
xchg
mov
repz
aam
lods
clc
and
aas
mov
jae
or
enter
xchg
hlt
adc
or
mov
push
sbb
test
test
ds
add
mov
jb
das
and
imul
dec
jecxz
outsb
in
or
fsubrs
in
aad
testb
mov
or
rcrb
push
addb
xor
cmpsl
push
mov
fsubs
inc
adc
push
sti
jb
sub
mov
mov
jl
bound
test
push
es
add
out
jbe
jmp
jle
mov
jnp
and
test
int
int3
stc
jge
leave
mov
cltd
cli
mov
insb
mov
xchg
pop
lcall
push
in
or
mov
and
insl
cli
imulb
sub
outsl
fwait
jb
ja
inc
sbb
sub
or
jae
cltd
xor
mov
add
fcmovnb
xchg
mov
fwait
jbe
shll
in
mov
sub
vphaddbq
inc
cmp
pop
cmp
xchg
cmp
faddl
aad
jb
aad
jne
mov
leave
sbb
lds
xchg
fwait
push
movsb
pop
nop
ss
scas
stos
mov
mull
test
and
pusha
fistps
jb
test
lret
pop
push
or
sub
in
scas
xchg
cwtl
enter
outsl
lds
daa
dec
leave
or
aas
dec
mov
pop
inc
lret
sub
sub
ja
addr16
inc
sub
mov
sbb
loop
jecxz
lret
addb
pusha
shlb
in
ds
cmc
jae
mov
loopne
xor
jno
adc
jmp
popa
mov
mov
nop
jb
ja,pt
pushl
mov
push
mov
pop
clc
push
cmp
int
ds
mov
gs
jnp
pop
fmuls
frstor
cmp
mov
push
dec
loope
xlat
pop
inc
push
loop
mov
dec
das
pushf
shrl
leave
mov
dec
mov
sub
and
mov
out
dec
dec
dec
lret
std
dec
outsb
lret
pop
outsl
or
pop
cs
mov
mov
adc
jge
fdivrs
lea
sub
mov
outsb
pushf
and
add
adc
mov
es
fmuls
jg
mov
mov
and
mov
sbb
cli
jl
sbb
ds
lcall
xchg
jle
cmp
outsl
inc
xchg
fwait
mov
insl
cmp
xchg
dec
repnz
sbb
jp
mov
cmpsb
std
ja
inc
jge
and
xor
mov
mov
cmp
push
out
mov
call
cmp
cwtl
mov
loope
push
in
jnp
dec
xchg
les
jge
pop
stos
xor
pop
mov
fcompl
fdivs
adc
cmpsb
clc
fs
mov
sub
or
mov
dec
mov
sub
sarl
push
add
mov
lcall
daa
mov
inc
sub
inc
gs
jl
test
iret
fucomi
das
jl
into
iret
xor
mov
mov
orb
ret
or
xchg
flds
aad
push
mov
loopne
mov
push
jle
cmp
pusha
imul
and
or
or
xchg
dec
push
rcll
insl
mov
aas
jbe
push
stc
dec
mov
jle
jmp
mov
push
mov
pop
mov
xchg
movsb
jb
movsb
xchg
mov
fldenv
fstpt
jno
subl
sahf
aas
and
xor
js
leave
xor
dec
add
mov
iret
inc
pushf
out
push
stos
lods
pusha
cltd
pop
mov
lock
lock
pop
or
inc
jae
add
addb
iret
xor
imul
popa
pop
leave
xor
pop
aam
cmp
ds
fcoms
push
std
cmpsl
mov
adcl
inc
xchg
repz
mov
or
push
out
mov
dec
cmpsl
sbb
mov
sub
rclb
pop
call
mov
call
dec
fcomi
mov
fcoms
mov
and
sbbl
xor
mov
inc
clc
pop
ret
test
cmp
xchg
dec
dec
mov
jb
mov
pushf
cmp
in
jb
lret
add
jmp
inc
xor
shrl
xchg
repz
cli
pop
mov
lods
jbe
push
jl
dec
adc
test
adc
aam
add
adc
pop
lcall
rep
xchg
xor
lods
sbb
or
cltd
aad
sub
push
loopne
dec
lahf
roll
inc
cmp
sub
sub
xchg
repnz
cmp
and
ficoml
ljmp
jg
jge
daa
mov
jmp
xchg
cmp
mov
repz
dec
add
jo
pushf
rol
pop
or
push
push
pop
stc
lret
push
test
fcmovnb
pop
add
mov
sarb
gs
in
flds
mov
xchg
and
sbbb
mov
adc
cmc
into
bound
mov
insl
js
nop
loope
adc
out
dec
xchg
out
cmp
dec
sbb
jo,pn
arpl
rclb
mov
mov
sbb
in
dec
dec
lret
fwait
loopne
dec
fsin
ficomps
stos
or
fidivs
jle
movsb
lahf
es
xchg
mov
enter
sub
add
mov
cltd
shl
cld
jp
mov
imul
adc
loop
mov
mov
out
and
loop
mov
jle
push
loopne
jo
aad
pop
sub
cmp
and
push
and
gs
icebp
loopne
ss
pushf
fisubrl
negl
pop
scas
dec
in
inc
fs
pmaddwd
push
cmc
mov
dec
cmp
jb
xor
fisubs
addl
imul
push
test
pop
mov
pop
push
jo
pop
or
xlat
jae
in
mov
iret
xchg
fwait
inc
fcmovnb
sti
jp
andb
sub
push
inc
in
jbe
dec
or
outsb
mov
jecxz
xchg
mov
xor
mov
insl
dec
loopne
or
push
and
outsl
imul
jecxz
popa
gs
stos
inc
pop
bound
arpl
mov
daa
adc
scas
jne
mov
pop
int
jmp
or
add
cmp
pusha
push
mov
xor
mov
jb
std
jno
lods
icebp
cmp
cmpsl
test
sub
cmp
mov
cmpb
jnp
call
cmp
inc
sub
mov
pop
les
int3
inc
jle
mulb
sbb
jbe
outsl
pop
mov
push
jp
pop
aas
jne
jb
bound
fxch
popa
lock
pop
test
repnz
int
pop
dec
jnp
mov
bndcl
cmpsl
addr16
jg
add
fldt
test
cmc
test
jmp
dec
cmove
jb
into
lock
dec
in
pop
lods
std
test
call
ret
or
ds
rol
sbbl
jb
and
cmp
ja
test
rcrl
mov
movsb
push
insl
mov
icebp
loop
jl
mov
outsl
fdivl
in
xor
std
fstpt
inc
push
insl
xchg
frstor
int3
and
ljmp
scas
bound
int3
or
push
sub
sbb
add
pop
jp
and
cmpsb
sbb
pushf
lahf
out
test
jnp
repz
mov
mov
jb
shrl
adc
sbb
mov
or
call
or
mov
sub
inc
xor
mov
cmp
outsb
mov
xchg
inc
out
xchg
dec
push
pushf
cltd
add
dec
rcrl
idivb
and
push
jne
pop
roll
test
inc
ljmp
sbb
mov
cltd
rcrl
pop
popf
adc
xchg
push
aaa
and
sub
push
into
repnz
jae
xchg
xor
arpl
mov
xlat
aaa
fldcw
jl
aaa
outsb
lcall
lock
pop
lea
insl
test
push
or
or
xchg
data16
out
fwait
lahf
adc
xor
adc
test
scas
jle
mov
int3
push
lock
add
ret
push
ja
dec
in
inc
push
nop
daa
xor
sbb
std
imul
mov
or
in
cmpsb
cltd
push
call
mov
enter
xchg
inc
les
sub
inc
cmpsb
call
inc
out
je
mov
aaa
fs
xchg
pop
leave
rcrl
loopne
cli
stos
mov
xchg
mov
mov
inc
jecxz
pop
or
subl
cmpsb
jns
xorl
popf
scas
jecxz
and
fstpt
ss
xchg
dec
push
filds
lret
xor
jp
data16
push
popa
lahf
adc
xor
aaa
fnop
jne
xor
dec
mov
pop
mov
cmp
ret
test
scas
push
dec
dec
mov
idivb
cmp
or
lahf
xor
push
stc
jp
testb
js
mov
popf
repz
push
dec
mov
aam
and
pop
fucomp
cmpsb
call
roll
aad
fmulp
inc
and
cmp
sbb
rcrl
jp
dec
and
jnp
add
fwait
insl
sahf
ds
aaa
sbb
repnz
jns
cli
inc
mov
fcoml
cli
add
hlt
and
fs
jnp
jbe
mov
dec
adc
movsl
jle
xlat
and
and
mov
hlt
sub
mov
or
sbb
adc
sub
pop
pushfw
fistpll
jbe
sarb
es
and
pop
sbb
stc
mov
sbb
adcb
xor
mov
pop
fs
cmp
jo
fnsave
pop
ret
push
mov
and
pusha
sub
call
hlt
mov
push
sti
or
call
stos
xchg
jecxz
cs
rcll
xchg
sub
mov
inc
pop
testl
mov
or
mov
or
mov
das
flds
lods
insb
jns
repz
mov
push
jg
cmp
pop
ficoms
and
cmp
xchg
ret
in
lods
faddl
insb
push
out
out
push
mov
cmc
inc
xorl
bound
jne
inc
adc
jle
push
add
sti
hlt
adc
test
dec
insl
dec
movsb
or
cmp
or
mov
std
mov
cld
stos
fcom
jne
fwait
arpl
fcomps
adc
mov
repz
inc
cmp
mov
sbb
scas
push
aam
cmc
fstpt
cmc
adc
addr16
cmpsb
repz
jl
das
or
pop
xlat
pop
sub
cli
lea
push
jmp
adc
or
xor
mov
cmp
xchg
sub
stos
in
fmull
int3
dec
cltd
imul
lcall
stos
push
cld
sbb
lods
sbb
inc
sar
popf
out
sbb
or
jmp
lea
loope
inc
stos
mov
mov
cli
fsubrs
lret
jle
bound
loop
dec
popf
dec
ffreep
sahf
jo
add
inc
mov
pop
xchg
arpl
pop
es
add
jl
sbb
pop
push
sbb
andb
cmp
add
mov
test
mov
lock
add
movsl
jl
dec
bound
pop
dec
insb
mov
iret
gs
adcl
in
in
add
xor
fldenv
movb
xchg
mov
lds
fdivs
outsb
sbb
lods
jns
jmp
dec
daa
cmpsb
cltd
sbb
xlat
jg
sub
clc
add
mov
cmp
push
sahf
jns
cmp
xchg
xchg
xor
and
rcrb
int
xor
in
mov
xchg
adc
jge
std
jp
push
cmpsl
mov
ss
mov
mov
int3
or
call
add
movl
jmp
mov
jge
enter
je
pop
aas
push
int
inc
xchg
fwait
lods
mov
pushf
jl
sub
sbb
cmpsl
xor
and
repz
adc
sub
and
ret
xchg
arpl
xor
jnp
mov
dec
es
cs
loope
cwtl
sahf
adc
mov
in
xor
ret
addr16
sub
ret
push
mov
aaa
hlt
push
dec
mov
stc
mov
xchg
filds
or
fiaddl
test
rcrb
adc
bound
xorb
mov
fwait
mov
ret
cmc
jecxz
xchg
fimuls
push
xor
lahf
mov
fs
call
mov
movsl
lahf
icebp
xchg
loop
sbb
push
stos
adc
in
dec
in
dec
xor
insb
jecxz
stc
xor
cmp
lds
jg
and
mov
addl
mov
xchg
inc
inc
mov
call
dec
cmpsl
or
mov
inc
lret
push
mov
inc
push
mov
pop
and
roll
dec
jmp
fildll
pop
and
sbb
xor
dec
xor
insb
int
push
lods
mov
sub
dec
mov
jno
pop
ljmp
or
fnsave
fcomip
insb
shrb
outsl
jb
loopne
mov
neg
and
jnp
dec
xchg
adc
fdivr
data16
dec
and
bound
outsb
cmpsl
arpl
shr
pop
inc
sbb
mov
fucomi
inc
xor
pop
in
push
testb
in
sti
xor
sub
in
jmp
mov
fisubrs
inc
adc
adc
xchg
sti
test
add
rol
mov
lods
lods
cmp
xchg
mov
mov
inc
pop
mov
out
jecxz
out
movsb
mov
stc
movsl
rcll
mov
int
xor
test
jnp
mov
test
cmpsl
cmpsl
adc
xchg
mov
testl
inc
and
ds
shll
sub
push
pop
push
cmp
or
movsl
mov
sub
and
repz
test
out
xchg
ljmp
test
sbb
cmp
fstpt
jle
mov
jl
xor
cmp
aaa
repnz
cld
scas
add
inc
lret
iret
pusha
add
imul
ja
mov
out
cmp
cli
bound
pop
mov
pop
cmpsb
inc
pop
les
nop/reserved
idivb
jp
sbb
or
push
mov
push
adc
mov
push
mov
lret
loopne
clc
mov
mov
stos
xchg
fcoml
bound
or
jns
leave
hlt
adc
pop
lahf
aaa
jnp
pop
and
add
add
fnstsw
lds
aam
sub
insb
int
jbe
jb
sub
xchg
dec
sbb
insb
sbb
pushf
stos
dec
push
je
dec
inc
xor
push
jge
jge
push
add
fucomp
insl
ss
xor
cwtl
fisttpll
imul
xlat
in
stc
jecxz
push
cld
movsl
jmp
push
roll
xchg
testl
xor
arpl
push
inc
fsubs
lock
pop
add
movsl
push
fmulp
std
sub
or
iret
inc
mov
dec
sti
xchg
cmp
mov
jne
iret
rol
mov
cmp
push
xchg
push
cltd
ljmp
fdivs
xor
jno
dec
lods
lods
jp
cmp
insl
lahf
jnp
stc
pop
jno
xchg
and
pusha
fcoms
nop
xor
jb
outsb
pop
test
out
pop
sub
subl
mov
aas
sbb
mov
shll
xchg
dec
jg
js
in
jnp
rcrb
mov
aas
mov
ret
ds
aam
push
and
add
ss
cli
call
in
dec
and
imul
push
shl
jnp
dec
add
js
test
lcall
or
call
frstor
mov
repz
scas
adc
rorb
call
or
inc
outsb
ret
or
xchg
fistpll
cmpsl
aaa
xchg
mov
push
add
push
movsb
stos
call
enter
push
repnz
xor
pop
lret
pusha
iret
dec
aas
loope
mov
pop
fidivrs
jae
dec
dec
adc
sbb
bnd
or
shlb
daa
sbb
pusha
or
sbb
jmp
sbb
fsub
and
add
pop
inc
add
or
loope
lods
xchg
lret
pop
mov
add
push
and
cld
loope
xor
rclb
ret
sbb
fdivs
in
xchg
and
or
or
aaa
cmpsl
adc
dec
mov
dec
scas
fimull
test
call
push
adc
xchg
ljmp
pushf
jg
pmaddwd
cwtl
lret
mov
sub
and
dec
push
shrl
mov
jle
stos
loope
in
xchg
pop
push
mov
mov
js
pop
dec
push
push
pop
lcall
in
sar
pop
testl
inc
jnp
add
rolb
gs
inc
adc
movsl
jmp
loopne
push
es
adc
fs
scas
push
push
ljmp
jne
push
xor
in
sti
sbb
mov
adc
movsl
adc
fwait
test
rcll
test
cmc
push
fcompl
cmp
xchg
fldcw
pop
nop
xchg
test
lods
lock
sbb
cli
push
jmp
inc
or
outsl
push
mov
xchg
or
and
add
push
mov
xor
scas
mov
sarl
cmp
mov
test
inc
ret
jb
adc
add
fiaddl
insb
mulb
lea
out
lret
xchg
mov
jbe
movsl
or
xchg
inc
popf
inc
xor
jle
push
test
fcmovnu
xchg
shrl
imul
pop
mov
jns
das
arpl
mov
mov
fstpl
decl
sub
pusha
cmp
test
dec
loopne
aad
sbb
adc
and
inc
or
add
adc
pop
je
xor
clc
xchg
lahf
pop
xor
xorb
sub
adc
fisubrs
mov
pop
jle
ficomps
lret
xchg
pop
push
push
mov
xor
add
jecxz
add
mov
test
mov
test
or
push
jb
jmp
pop
lea
jg
pop
fadd
divl
xor
clc
jmp
fistl
push
scas
in
gs
in
pop
lret
xchg
add
inc
xor
es
fldenv
jae
idivb
ret
inc
push
call
push
div
xchg
adc
dec
out
sar
lock
mov
sti
cmc
adc
add
dec
push
scas
outsl
sbb
or
add
addr16
and
int
pop
daa
push
adcb
mov
add
xor
mov
mov
dec
xor
mov
das
test
rorb
and
xor
mov
stc
add
sahf
cmp
popf
daa
jb
pop
push
or
sahf
or
push
xor
loopne
jae
pushf
mov
pusha
scas
push
push
kmovb
mov
daa
xor
dec
out
in
and
mov
lahf
rcr
wbinvd
add
out
xor
inc
lcall
pop
and
in
jae
shll
insb
cmp
shrb
pop
xor
lds
adc
shll
dec
aaa
fstl
hlt
add
cmp
xlat
lret
mov
hlt
gs
sbb
cltd
dec
leave
or
ja
dec
aad
inc
mov
adc
aaa
mov
adc
sahf
loope
aaa
ss
sbb
lock
mov
pop
jo
cmp
stos
adc
movsl
dec
testl
jle
int3
mov
mov
sub
jl
aaa
lret
mov
cld
push
cmp
lcall
imul
mov
add
mov
iret
sub
mov
adc
mov
mov
lcall
fdivrs
xchg
sub
cmp
nop
in
push
mov
loope
cmp
sbb
and
xchg
xchg
stc
cmp
outsb
xor
xor
repz
mov
or
pushw
xchg
push
repz
jle
or
pop
std
call
add
shr
add
dec
cmp
dec
sbb
pop
adc
mov
cmp
sar
ljmp
mov
mov
test
xchg
mov
jo
inc
xchg
imul
inc
fcompl
push
insb
pop
call
jle
lock
and
fmuls
cli
mov
daa
jmp
mov
mov
dec
add
push
out
or
mov
outsb
dec
pop
push
in
shr
arpl
dec
inc
fnstsw
or
cmp
mov
and
jne
pop
cmp
inc
xchg
cmpsb
add
mov
fldt
push
test
add
mov
fmul
in
xlat
rcll
arpl
sbb
fsubl
shlb
inc
icebp
in
push
pop
scas
jae
mov
stos
xchg
mov
mov
rclb
lret
pop
dec
jge
mov
pop
bound
cmp
inc
xchg
push
jno
xchg
jg
mov
movsb
rcll
mov
cmp
daa
adc
rorl
xor
stos
pop
arpl
into
pushf
push
mov
push
in
push
lret
cmp
push
or
add
iret
add
push
sub
andb
or
into
in
test
push
mov
mov
scas
in
push
lods
out
movsl
fnstcw
mov
jp
incb
lock
fwait
pop
jg
outsl
xchg
dec
ljmp
mov
sbb
push
enter
add
es
push
dec
loope
xchg
shl
stos
pop
lcall
xchg
jmp
sub
jns
push
add
mov
imul
lret
inc
mov
push
sub
imul
fnstsw
inc
sbb
fwait
jl
cwtl
mov
add
shll
mov
sub
shll
and
jp
inc
xor
sbb
or
mov
aaa
cmp
mov
mov
shlb
nop
lods
mov
daa
insb
push
aaa
mov
and
jns
xsaveopt
std
repnz
jge
outsl
xchg
rcl
add
das
movsl
inc
test
mov
fnstsw
pop
dec
dec
das
jmp
or
and
mov
adc
dec
add
or
jp
or
sbb
mov
sub
aas
cmpsb
into
sbb
das
jne
add
out
mov
stos
mov
and
shlb
loopne
xchg
mov
fsts
loop
push
or
mov
mov
mov
and
out
pop
jbe
popf
sti
xor
push
ljmp
enter
cmp
inc
add
mov
fstl
xchg
aaa
sahf
pop
shl
jns
or
dec
fucomp
xchg
mov
mov
imul
sti
pop
sar
sbb
testl
mov
mov
cmp
xchg
fmull
adc
sbb
aas
and
xchg
pop
loop
pusha
jecxz
mov
sub
imul
sbb
inc
or
stos
xor
in
call
cwtl
es
int3
scas
pop
inc
jbe
pop
jns
aam
mov
rcll
add
sbb
leave
jp
mov
dec
jns
outsl
jp
stos
in
lods
pusha
repnz
mov
mov
pop
mov
daa
xchg
ret
scas
stc
adc
and
mov
add
lcall
test
fcmovnu
inc
xchg
inc
jne
pop
mov
jecxz
xchg
xor
cmpsb
mov
mov
and
fcoml
xchg
lods
and
jno
mov
imul
movsb
cwtl
inc
outsl
enter
jb
fldpi
xchg
mov
mov
ja
or
outsl
repz
adc
in
adc
lahf
dec
and
in
scas
add
lods
sub
pop
cmp
loope
dec
push
imul
test
push
xchg
inc
std
popa
mov
subl
daa
fsub
sub
xor
lods
out
cmpsb
mov
arpl
cld
out
cwtl
sbb
add
gs
mov
add
cmp
dec
push
cwtl
mov
push
imul
push
mov
lods
mov
cmp
test
out
in
push
rorb
int
aam
in
sub
ficomps
add
js
dec
or
and
rorl
jge
sti
dec
test
scas
clc
rolb
inc
shrb
xchg
pop
lret
pop
mov
mov
sbb
xor
mov
loop
cld
idivb
xchg
cmp
rorb
in
rcrl
ret
mov
xchg
push
mov
or
push
stc
pop
lods
jno
idivl
sbb
movsl
mov
adc
ret
mov
sbb
mov
add
mov
scas
arpl
cwtl
mov
jmp
in
push
xchg
je
loopne
and
inc
xchg
push
adc
dec
sahf
inc
pop
ljmp
lret
repz
lds
xor
push
add
stc
insb
jbe
loop
jecxz
cmp
xchg
cs
sub
push
pop
cmpsl
inc
sahf
ljmp
xchg
pop
out
mov
jmp
roll
jne
call
jns
xor
test
rolb
sub
lock
out
sub
jmp
popf
adc
ljmp
mov
aas
mov
sub
mov
stc
jle
outsb
jecxz
push
fmuls
inc
andl
cwtl
xchg
pop
ljmp
fwait
lahf
sarb
jg
jmp
popf
dec
pop
insb
movsb
jp
jp
rorl
mov
xchg
in
dec
jmp
lods
loopne
add
lret
jns
outsl
pop
push
mov
popa
inc
out
mov
mov
cmp
mov
test
cltd
xor
out
aas
in
pop
mov
dec
push
mov
out
mov
inc
cmp
xchg
mov
jp
sbb
mov
add
mov
cld
xor
pop
cmp
nop
icebp
and
cmpsl
js
pop
jecxz
xchg
loope
dec
mov
jnp
mov
mov
cmp
mov
sti
in
movsb
jns
add
in
jns
jne
adc
out
add
cmp
cmp
pop
scas
inc
idivl
cmc
and
in
sbb
nop
fnstenv
cmp
cmc
xchg
loope
addr16
imul
nop
cs
jb
lds
cwtl
jmp
repz
or
or
les
sbbb
lret
and
and
jns
test
adc
sbb
or
ret
xchg
mov
inc
pop
dec
sbbl
lret
stos
negb
push
out
test
cli
push
mov
or
mov
aas
sub
in
gs
adc
mov
push
fcoml
ret
mov
loope
push
aam
push
lcall
lret
sahf
in
fwait
mov
rcr
push
loope
adc
mov
lods
in
popa
mov
loop
or
xor
jl
pop
sbbl
fsub
sbb
inc
imul
push
lock
xchg
cmp
test
out
pop
push
jle
fsts
mov
rcrl
dec
pop
fldt
adc
test
sub
scas
mov
push
fidivrs
fs
pop
inc
inc
mov
xorb
and
jmp
push
cld
mov
push
popf
clc
sub
outsl
hlt
add
stos
lds
and
xchg
adc
pushf
sbb
jge
sbb
ljmp
mov
pop
sti
sub
fbld
movsl
xchg
xchg
leave
adc
pop
jmp
aam
shl
dec
mov
and
jbe
xor
add
jg
mov
dec
dec
jg
pop
fs
in
call
push
jle
xchg
push
ret
sub
dec
mov
and
sbb
sub
in
sbbl
fbstp
cld
daa
outsb
rol
cmp
xor
dec
xchg
in
in
jmp
add
and
mov
in
popa
inc
scas
cli
xor
pop
mov
push
flds
fdiv
mov
mov
add
sarl
lea
xchg
xchg
and
gs
push
ficoml
inc
leave
mov
arpl
push
jne
dec
sub
fstpt
xchg
sub
cmp
rcl
mov
mov
fcomi
ret
mov
pop
dec
mov
jne
xchg
dec
insb
or
xor
jne
xchg
ret
jge
inc
je
mov
jl
aaa
xchg
and
xor
push
mov
ficompl
jmp
mov
mov
call
outsb
dec
or
xchg
loopne
mov
in
and
push
stc
imul
add
mov
inc
pop
jp
jmp
int
add
popf
addr16
sbb
cwtl
lret
lcall
add
mov
pop
sbb
push
push
and
pushf
push
mov
ret
dec
mov
aaa
clc
jb
dec
insb
push
xor
movb
mov
lods
mov
setp
aas
lods
cmp
loopne
xlat
mov
mov
das
xlat
jge
jae
xchg
fdivrl
dec
mov
add
xchg
cmp
shll
pop
mov
jmp
int3
adc
push
rorb
movsl
push
loope
and
ds
inc
xchg
add
test
push
loopne
jle
sub
std
ficompl
push
leave
xor
dec
hlt
sub
mov
addl
or
cli
mov
fs
lods
xor
clc
adc
push
cwtl
ds
js
fs
lds
xchg
xor
je
je
jae
lods
mov
mov
add
ret
call
mov
enter
dec
shrb
or
xchg
jmp
add
xchg
jp
neg
gs
xor
ret
rcrl
incl
adc
fsubrl
add
mov
jg
shll
pop
je
pusha
rclb
fisttpl
incb
movsl
dec
ja
fimuls
nop
mov
into
in
dec
mov
inc
mov
fists
ja
xchg
aaa
xor
ja
outsl
pop
jge
xchg
cmc
mov
sahf
sbb
and
test
jne
push
adc
imul
out
lcall
jno
xchg
or
int3
fstpl
mov
inc
inc
imul
jp
in
loopne
push
iret
add
rcrl
into
cli
mov
sub
ret
mov
pop
mov
movsl
into
jmp
arpl
or
sub
add
lea
mov
daa
pop
add
mov
or
xchg
push
xlat
xchg
js
pop
js
cli
or
cli
push
cmpsb
clc
js
fs
fisubs
mov
and
and
sub
ret
fstpl
mov
add
lods
loope
adc
jb
insb
into
or
loope
or
pop
push
push
and
mov
jbe
lret
fwait
sub
sub
jl
or
cmp
mov
sbb
pop
outsl
in
fstl
jmp
jp
jne
rcl
lret
xchg
jge
pop
subb
mov
mov
scas
pop
add
add
lds
jnp
pop
push
enter
out
sub
pushf
sbb
inc
outsb
mov
dec
adc
cmc
pop
subl
cmc
ja
repz
cltd
inc
mov
not
add
push
outsb
cmp
dec
pop
xor
cmpsb
xchg
outsl
int3
loope
mov
pusha
mov
dec
pop
out
subl
cmp
inc
mov
mov
lret
push
mov
or
adc
cmpsb
fdivr
inc
cmpsl
sub
jnp
adc
daa
mov
jp
nop
and
pop
stos
aas
lcall
popa
jb
insl
je
or
mov
xrelease
repnz
test
loop
addr16
mov
sub
cmp
fnstenv
adc
cmp
ss
enter
push
mov
cltd
in
xchg
notb
clc
js
cltd
fistl
movsl
push
sbb
sub
test
adc
mov
sub
je
aad
pushf
icebp
rorl
jno
mov
push
mov
jg
xor
jnp
in
xor
ret
push
mov
subb
jecxz
or
lret
arpl
jle
and
pop
sbb
inc
ror
push
cmpsl
inc
push
call
popf
ja
call
pop
push
xor
popa
xlat
aad
jns
repz
test
push
push
loope
jle
arpl
dec
sub
or
pop
cwtl
mov
sub
sbbl
sbb
sub
addb
mov
sub
mov
test
mov
adc
mov
test
movsb
push
lcall
fwait
pop
dec
mov
fcomps
dec
dec
mov
rorb
xchg
jge
test
cmpsb
mov
in
and
loopne
jge
mov
in
lock
outsl
mov
and
stos
mov
pop
or
or
push
mov
cs
adc
or
pop
cli
sub
rcr
cmp
sbb
shll
cmp
jae
fwait
dec
ret
mov
jo
fbstp
fs
pusha
push
cmpsl
xchg
outsl
mov
mov
out
pop
ss
sbb
jne
pushf
sti
cmp
lret
lock
nop
dec
push
mov
mov
xor
dec
xchg
ljmp
add
xchg
out
dec
sbbb
mov
mov
push
mov
or
mov
sbb
pusha
sub
int3
outsb
and
popa
jns
lahf
ret
imul
cltd
and
xorl
scas
prefetcht1
inc
pop
or
cmp
popf
and
mov
hlt
fdivrs
xchg
jl
pushf
sub
test
es
testb
das
test
aam
mov
jo
push
mov
sahf
lds
push
adc
mov
mov
out
cmp
inc
inc
sub
test
ljmp
pop
pop
aam
sub
psllq
cmpsl
testb
scas
pop
jb
loop
out
xchg
adc
xchg
push
or
adc
mov
pop
jp
xor
test
cmp
or
pop
paddusw
iret
mov
fcomps
mov
les
es
pop
repnz
inc
sub
xlat
insl
push
sub
test
xlat
lahf
adc
jmp
mov
push
in
push
les
or
jo
xchg
mov
mov
mov
fwait
rcl
sbb
daa
cltd
arpl
sbb
push
loope
mov
cli
sbb
leave
ficompl
out
ljmp
cmp
imul
xor
cmc
jae
adc
lret
mov
pop
cmpsl
out
sbb
sub
jl
iret
aad
jnp
add
xchg
xchg
andl
inc
js
sub
jnp
xor
sbb
mov
mov
jmp
mov
adc
cmp
mov
cmp
cld
mov
mov
and
jecxz
addr16
and
fs
pop
push
add
sub
filds
jbe
mov
or
in
jecxz
push
xor
push
fcmovnu
inc
outsl
jge
xor
push
pop
mov
inc
in
xacquire
xchg
jns
push
dec
test
scas
pop
pop
adc
mov
push
pop
rcl
aas
and
push
mov
call
ss
popf
sub
mov
push
xchg
jo
mov
jp
in
sub
pop
jl
jnp
mov
icebp
adc
test
mov
and
enter
or
stos
push
mov
xchg
fsubrs
push
mov
push
adc
insl
and
cmpsl
out
into
dec
mov
xor
sub
loopne
fadd
cwtl
cmp
insl
or
lcall
lods
xchg
cld
sub
push
xchg
punpcklbw
mov
fiaddl
or
inc
stc
or
repz
ljmp
lods
lea
in
stos
sar
lea
cmp
in
add
dec
ret
pop
push
dec
bound
pop
scas
ret
and
data16
pop
adc
jecxz
dec
mov
or
shrl
mov
bound
mov
xor
mull
mov
mov
jl
lret
es
test
fldl
aaa
outsb
sub
scas
sbb
xchg
and
lods
and
sbb
push
push
shlb
mov
js
xchg
gs
mov
adc
pop
pop
js,pn
xlat
and
or
mov
bound
or
scas
ficompl
into
cmp
cltd
leave
enter
push
cmp
sub
cmp
iret
or
xchg
mov
sbb
jo
fwait
cltd
loop
js
or
mov
cmp
in
xor
stos
and
or
inc
and
jbe
cmp
out
adc
daa
in
pop
push
or
fimull
sbb
sbb
lret
mov
enter
hlt
popa
outsb
mov
stc
push
push
inc
xchg
mov
mov
cmp
sub
in
out
pop
xchg
imul
xor
rclb
jns
inc
or
je
fisubrs
shll
push
sbb
test
lods
dec
cld
fisttpll
int
xchg
cltd
jae
mov
sarl
leave
mov
aaa
cmp
xor
push
sti
sub
pop
sahf
jnp
out
sub
lods
hlt
cmp
jecxz
inc
rcl
lcall
mov
xchg
xchg
jb
sub
jno
dec
push
arpl
cmp
ja
loope
mov
imul
mov
fsubrs
lock
dec
hlt
ss
lds
pop
ja
pop
scas
aam
testb
adc
push
popf
adc
inc
lcall
pop
sub
mov
in
add
sarl
mov
repnz
repnz
mov
popa
push
inc
add
fidivs
mov
fincstp
sbb
aam
cs
and
xchg
xchg
xchg
fdiv
push
nop
pop
test
hlt
jle
dec
push
fistpl
in
into
xor
testl
add
pop
fbld
pop
loop
sbb
mov
mov
push
sub
stc
dec
cwtl
loope
mov
sbb
and
ds
cli
mov
data16
xchg
sub
daa
sub
imul
and
inc
cmc
inc
xchg
cmpl
call
sbb
mov
fdivrs
popa
mov
xchg
cmpsb
jl
mov
int3
or
in
loope
push
mov
jnp
cmp
les
int3
adc
push
pop
out
xchg
xchg
mov
cmp
sub
inc
mov
jae
adc
xor
cltd
sbb
add
dec
dec
add
orl
sbb
xchg
iret
loopne
int
mov
cmp
hlt
notb
or
sbb
cmp
imul
add
fbstp
sbb
dec
jno
and
inc
jbe
cltd
nop
sub
or
xchg
cmpsl
mov
imul
fldcw
ljmp
out
out
aas
add
clc
andb
aad
add
sub
add
xchg
and
sub
jo
push
inc
or
cmpb
add
inc
cwtl
cs
jae
arpl
stos
and
sahf
or
dec
mov
pop
jecxz
mov
sub
test
int3
hlt
mov
pop
sahf
xchg
sbb
je
mov
or
jmp
xchg
fnsave
mov
call
xor
lds
lock
int
cmpb
push
popa
stos
pop
repnz
sbb
inc
xchg
fdivs
mov
cmc
ds
gs
adc
xchg
jmp
pop
ss
mov
mov
std
pop
mov
inc
lcall
addb
mov
mov
dec
jbe
jecxz
xor
test
push
cmp
cmp
mov
in
or
ficomps
loopne
out
add
add
das
and
fidivrs
sbb
sub
xchg
int
xlat
sarl
mov
out
xchg
aas
add
fwait
jl
push
repnz
rcrb
addr16
and
fdecstp
subl
inc
or
shlb
cmpsl
pop
lret
cmc
pop
jbe
jp
xor
xor
stos
loopne
sahf
mov
loope
or
dec
popf
jle
stos
ss
insl
scas
xchg
sub
cmp
and
enter
outsl
daa
and
scas
call
orb
imul
cmp
xor
imul
clc
aas
imul
fimull
nop
push
clc
scas
inc
addr16
aaa
or
ja
ljmp
test
lahf
jae
arpl
push
cmp
fcmovne
cmpb
adc
mov
pusha
cmp
push
daa
rcrb
lock
mov
add
aas
das
jns
push
mov
enter
push
data16
jae
push
add
rol
repz
movsl
sar
rcll
push
mov
adc
sub
xchg
ret
int3
ss
and
pop
push
mov
ss
cmpl
int
dec
clc
jmp
dec
cmp
js
mov
movsb
push
jg
decl
fucom
negb
lock
sahf
inc
pop
xlat
addr16
xchg
in
push
mov
sbb
jg
inc
push
and
aad
inc
in
insl
leave
or
popf
mov
insl
xor
push
lods
sub
add
xchg
xchg
xor
mov
loopne
adc
stc
push
sahf
inc
scas
sbb
inc
mov
movsl
sahf
pop
cmpb
icebp
pop
push
mov
add
inc
inc
inc
jecxz
jns
addb
pop
sub
in
add
repz
fs
jl
jge
out
add
mov
repnz
sub
mov
mov
mov
xor
mov
das
mulb
dec
addr16
aam
aad
aad
jne
sbb
mov
cmc
imul
add
scas
cmp
jae
fisttps
test
xchg
xchg
add
jle
push
mov
dec
mov
in
push
mov
out
leave
stos
fmulp
testb
fs
and
nop
fmull
xchg
pop
xlat
in
inc
mov
sarl
das
daa
xchg
enter
mov
pop
lea
dec
lods
fsts
pop
outsl
movsb
ljmp
mov
add
adc
hlt
cmpsl
inc
out
cmp
hlt
mov
sahf
sbbb
dec
leave
mov
pop
pop
mov
fdivp
test
xchg
out
sbb
push
pop
cli
jl
jp
or
ret
addr16
xor
mov
mov
push
push
adc
sbb
or
add
roll
jb
test
ja
sub
inc
jae,pt
pop
push
and
sbb
dec
test
insb
mov
dec
push
sbb
dec
pushf
lock
xlat
add
cmp
sbb
push
adc
and
mov
sahf
out
sahf
mov
pop
inc
fnsave
shl
dec
fadd
dec
pop
lods
jne
and
scas
mov
mov
inc
mov
in
mov
mov
xor
jp
jno
xchg
cld
enter
add
ljmp
add
push
adc
test
jl
sub
lea
leave
push
sub
idivl
jo
bound
xchg
pop
mov
cmp
jge
data16
fmull
insb
dec
jnp
std
fxch
cltd
ja
inc
cli
ficompl
add
je
ret
outsl
jbe
in
aaa
or
test
arpl
out
cmp
sbb
pop
lock
test
jg
jo
mov
into
jmp
lds
or
mov
lret
xchg
xor
pop
jl
jg
inc
pop
shrb
xor
sbb
hlt
jg
testb
mov
outsl
fdivl
lahf
dec
mov
jo
cmpsl
imul
inc
fdivrp
mov
cmp
subb
fistpl
or
pop
fimull
jle
lcall
das
push
and
cs
movsb
dec
subl
fsubp
fimull
or
sub
or
movsl
sbb
jo
sub
add
movsl
cltd
test
sbb
xor
in
les
out
sti
out
rorb
adcb
xor
add
mov
ucomiss
jne
dec
out
pop
sahf
ljmp
ret
mov
aas
sbb
out
std
xor
pop
mov
cmp
in
jbe
dec
scas
sbb
or
loop
std
push
fdivrs
xchg
repz
xchg
jp
sti
dec
in
les
add
jl
pushf
adc
dec
mov
mov
cmpsb
sbb
push
adc
push
xor
pop
push
and
ret
and
lods
shll
test
mov
push
push
ss
mov
int
push
insl
xchg
adc
dec
in
je
adc
pop
pop
add
xor
pop
rorb
das
movsb
and
sarl
lea
push
push
test
or
je
or
test
jno
pop
adcl
mov
sbb
cmpsl
or
movsl
loopne
test
in
push
leave
aas
xchg
sahf
das
dec
test
addr16
jecxz
mov
mov
adc
sub
mov
imul
mov
sub
sahf
jae
xor
mov
pop
fsub
jbe
jecxz
cmp
addr16
pop
mov
ljmp
repnz
jne
lcall
loope
mov
sbbb
rcll
shll
or
and
movsb
or
jne
js
out
sub
sub
adc
into
clc
sbb
mov
or
mov
pop
in
test
jl
or
or
inc
test
lods
sub
xchg
shll
or
mov
das
je
jecxz
xchg
mov
pusha
dec
divb
jle
stos
inc
push
sbb
jno
incl
xlat
xchg
jl
js
mov
ss
fcomi
mov
imul
imul
pop
inc
and
xor
jl
clc
mov
les
hlt
adc
pop
in
mov
pushf
jb
or
or
in
daa
or
les
sub
mov
jae
cld
in
lcall
mov
cltd
xchg
lods
or
insb
adc
cmpsl
ja
mov
mov
push
cmp
add
aam
pop
subl
movsl
sub
popf
cmp
cmp
mov
stos
sahf
mov
dec
in
cmpsb
loopne
cmpsb
lods
lods
jecxz
jo
or
lods
ret
sub
mov
jno
sahf
inc
xchg
in
shl
adc
fldt
jge
icebp
ds
mov
dec
push
inc
inc
les
push
fstl
sub
fimuls
mov
pop
ja
cmpsb
pop
addr16
addl
cs
pop
imul
in
adc
pop
sbb
push
fiaddl
xor
fs
pusha
arpl
add
ret
push
ljmp
mov
daa
loope
pop
mov
adc
dec
in
stos
lds
xor
jae
aam
mov
pop
mov
mov
pusha
pop
test
movsl
cmp
fsubrl
cmp
inc
repz
insl
sbb
aaa
lahf
lods
or
or
mov
xor
call
scas
push
mov
insb
sbb
xchg
leave
adcl
inc
mov
pop
sbb
add
enter
sbb
daa
xchg
jg
adc
inc
ret
std
add
mov
insl
add
or
lret
jle
mov
imul
inc
push
cld
in
jl
cwtl
ds
in
sbb
cmp
bound
hlt
mov
pop
xchg
and
cmc
outsl
test
lods
pop
push
inc
xchg
or
movsl
xor
aam
shrl
in
xor
mov
shrd
xor
sub
jbe
xor
cmp
xchg
addr16
mov
fldl
jge
mov
cmp
sbb
icebp
inc
cmp
mov
fisubl
pop
test
mov
cmpsb
cld
fs
xor
das
mov
sub
out
or
mov
rol
orb
cltd
cld
mulb
mov
inc
subl
repz
or
and
xchg
inc
andb
int3
insl
inc
push
movsb
cmp
and
add
rolb
mov
push
mov
xchg
sbb
xchg
sbb
dec
pop
cmp
repz
popa
xchg
test
repnz
jg
insb
outsl
add
imul
pop
mov
mov
test
cld
stos
jb
cmpsb
in
sbb
ret
lods
andl
loopne
cwtl
in
jp
jle
mov
sbb
movsl
ss
leave
je
into
cmp
ja
ljmp
fs
sbbl
rclb
dec
lods
push
mov
dec
scas
in
xchg
xor
add
int3
ret
out
jl
mov
cmp
test
inc
das
cwtl
dec
hlt
cmpsb
scas
pop
int
add
and
cmp
lret
dec
add
pop
dec
in
outsb
or
ja
mov
and
pop
sbb
cmp
mov
leave
push
jae
inc
mov
cwtl
mov
fs
loope
bound
rorl
sahf
arpl
mov
xchg
or
inc
dec
mov
lea
and
lock
push
dec
mov
pop
adc
out
pop
inc
pop
lds
rcr
scas
ret
xchg
sub
jge
cltd
mov
and
push
mov
aam
push
pop
mov
and
mulb
pop
test
mov
fistpl
add
and
insl
push
cmp
xchg
or
sbb
das
xlat
lea
and
and
jecxz
cltd
mov
push
xchg
mov
jp
ds
pushf
or
cmp
cmp
mov
inc
loopne
rolb
or
aaa
mov
and
inc
gs
and
aas
mov
das
jmp
cmc
xchg
loopne
adc
or
inc
pop
and
mov
jp
out
pop
stc
or
or
or
adc
std
loop
aas
lcall
xchg
inc
leave
push
das
fwait
inc
inc
popa
fstl
jecxz
frstor
mov
mov
pop
jl
fs
inc
mov
mov
loop
fstps
pusha
pop
outsl
sub
jp
jg
mov
adcl
mov
xor
pop
loop
data16
std
jb
xor
inc
jle
push
pop
jb
or
adc
push
cltd
adc
out
jb
mov
cld
mov
add
nop
ds
xchg
and
out
add
push
and
dec
pop
sbb
out
xor
mov
shrl
mov
inc
sbb
psubd
or
movsb
jle
mov
inc
ja
hlt
clc
jb
fmull
xor
xor
daa
dec
and
imul
inc
adc
dec
stos
ja
and
test
adc
jns
aam
lods
mov
mov
les
fiadds
hlt
xchg
enter
sbb
xor
inc
mov
mov
sub
sub
inc
int
inc
mov
cmc
fwait
add
dec
out
mov
dec
mov
dec
jno
movsl
add
jp
push
fdivl
orb
mov
and
xchg
lcall
idivb
sbb
sbb
les
and
into
push
cmp
fsubr
xchg
inc
sub
repz
add
fiadds
shlb
aas
out
pop
sar
push
in
fdivl
fmul
pop
sbb
mov
mov
bnd
mov
mov
pushf
sbb
jmp
jns
sbb
ljmp
fs
mov
lds
xor
add
mov
mov
pushf
repnz
xor
push
pop
mov
and
mov
jle
clc
xor
jl
mov
push
or
pusha
jmp
subl
add
xchg
xchg
pop
lret
xchg
aas
adc
pop
xchg
dec
in
f2xm1
fiadds
fldenv
out
mov
mov
or
or
xchg
addb
lods
addb
xor
clc
sbb
pop
jecxz
xor
pushf
pusha
mov
pop
test
cwtl
out
push
mov
ret
or
mov
sti
addr16
cmpsl
sahf
mov
fsqrt
push
cmc
stos
adcl
and
aad
dec
out
test
mov
mov
sub
lods
aaa
push
pop
or
roll
mov
mov
jo
mov
lock
in
cli
cwtl
out
and
and
or
mov
int3
mov
mov
jl
stos
dec
add
mov
into
xor
mov
test
scas
jne
hlt
sub
cmc
out
jmp
inc
inc
js
push
adc
scas
call
insb
sbb
outsb
inc
add
in
jle
mov
cmpsl
mov
pusha
sbbb
mov
jo
in
mov
and
jno
sbb
rorl
mov
sub
xor
popf
rclb
xorl
sbb
inc
aaa
jge,pn
or
mov
xor
outsl
mov
sbb
ds
cmpsb
outsl
loope
sub
cmp
jge
pop
or
adc
mov
push
idivl
mov
sub
xor
mov
xchg
jge
fldcw
mov
sti
aaa
lret
das
cmp
fwait
cmpsl
mov
lea
mov
or
popf
in
sbb
jno
xchg
sbb
ret
pop
ficomps
loopne
pop
inc
inc
in
mov
mov
loope
sbb
pop
call
jbe
dec
insb
ret
sti
sti
cmc
jmp
xor
inc
pop
jnp
mov
cmp
mov
lods
addl
stos
sub
xchg
push
jg
jecxz
xchg
push
xchg
pop
mov
mov
in
mov
outsl
push
inc
xor
dec
sbb
cld
iret
push
out
inc
hlt
pop
insb
stos
test
mov
js
mov
mov
jns
pop
or
pop
adc
inc
or
push
and
xor
mov
in
and
xchg
push
daa
int
or
pop
iret
mov
ret
ficomps
and
scas
sti
mov
inc
movsb
jp
outsb
mov
cmp
mov
or
jp
and
add
imulb
nop
mov
jne
leave
mov
xor
sbb
sub
or
inc
mov
scas
xchg
clc
andb
push
frstor
xor
ficoml
loopne
xchg
push
jns
outsb
mov
pop
xor
cmp
sub
aas
pop
inc
sbb
ds
ss
sub
inc
mov
mov
xor
pop
or
cmp
lret
mov
fsubrp
je
int3
sti
insb
jo
pop
xor
adc
shrb
cmp
cltd
bound
leave
push
add
mov
mov
sub
arpl
pushf
mov
mov
scas
loop
aaa
rcr
xor
cld
sbb
xor
inc
or
jl
stc
movsb
outsb
mov
ss
pushf
inc
lds
sti
je
add
mov
sbb
or
mov
and
repz
out
out
xchg
pop
pop
lods
popa
mov
stos
push
call
cltd
lahf
insb
int3
pop
cmp
push
mov
in
loop
push
mov
add
in
fidivrs
and
xacquire
pop
inc
test
mov
js
xlat
fbld
cmpsl
mov
jno
fisubl
imul
xor
popf
xor
jmp
sbb
jne
push
popa
lea
vcvttsd2si
test
call
into
cmc
test
out
sbb
out
cmp
xchg
mov
sarl
cmc
pop
pop
sub
cmpsb
inc
shl
fcom
frstor
add
int3
sahf
popf
sub
fmull
push
gs
es
cmpsb
mov
jg
xchg
cld
and
dec
xchg
insb
fsubs
add
sbb
mov
cmpsb
sbb
mov
push
imul
int
lea
popa
ljmp
jle
sbb
stos
les
movsl
popa
jo
ljmp
dec
nop
pop
cwtl
pop
push
dec
js
mov
je
cmp
mov
js
aas
mov
ficompl
xchg
out
ss
mov
inc
jl
pushf
call
pop
out
filds
cmp
dec
out
inc
xchg
mov
sbb
lret
push
movsl
xchg
mov
push
out
inc
call
xchg
fnstenv
pusha
lock
or
dec
sub
sub
lret
bound
loopne
xor
jecxz
or
add
xchg
lcall
ja
aaa
imul
icebp
rcll
push
sahf
mov
pop
xchg
xor
sbb
pop
popf
loopne
neg
dec
push
ret
clc
dec
fs
loope
lock
push
std
add
dec
cmpsb
ret
mov
jge
push
jae
push
push
sbb
and
adc
push
mov
lock
sarb
test
ret
pushaw
lret
les
fisttps
std
pop
call
mov
sub
jae
xchg
lret
lods
dec
push
sarb
xchg
movsb
out
xor
scas
sarb
mov
mov
push
dec
xor
dec
test
inc
sar
cmp
lret
in
aas
push
push
fld
adc
add
jns
jns
out
cs
push
xchg
fsubrl
cltd
dec
aam
or
xchg
cmp
jnp
mul
push
ficoml
lret
gs
ds
sub
add
jl
adc
aam
add
aas
repnz
in
sub
cmp
cmc
cmp
decl
into
leave
in
mov
test
imul
push
into
out
inc
ret
and
sbb
mov
add
sub
pusha
outsl
push
dec
packuswb
cmpsb
add
sbb
mov
call
in
ret
bound
arpl
add
out
mov
mov
xchg
sbb
into
push
js
lret
xchg
xchg
lea
inc
add
call
lcall
ljmp
push
jp
jns
loop
cli
mov
pop
inc
sbb
in
aad
lods
mov
dec
lahf
dec
add
pushf
lcall
jge
iret
in
mov
pop
rcrb
mov
stos
mov
stos
mov
mov
push
scas
andb
mov
cld
daa
adc
sbb
xor
cmp
shll
jns
orb
pop
pop
inc
insl
adc
scas
jo
enter
push
gs
pop
or
push
pop
sub
or
mov
aas
ror
lahf
adc
add
lret
jmp
pop
ficoms
mov
jb
pop
fs
adc
dec
jb
clc
popf
push
insl
dec
push
cmc
dec
xchg
lea
jp
xlat
add
iret
movsl
je
loop
test
mov
xchg
or
xchg
fidivs
cmc
loop
push
imul
andl
cs
rorb
cmp
lahf
mov
jp
sbb
test
data16
jmp
mov
lods
jnp
in
dec
mov
ljmp
ja
andl
mov
mov
xor
stos
xchg
xor
dec
push
pop
sub
push
orl
int3
test
fiadds
xchg
sarb
and
sbb
sahf
lcall
cmp
xchg
jae
mov
dec
push
rol
sub
inc
mov
sub
inc
je
add
push
jne
mov
push
cwtl
mov
fs
sbb
dec
inc
out
cs
xchg
dec
test
inc
pop
jp
jo
cmp
bound
lods
cmp
adc
push
mov
pop
dec
shrl
cmpsb
repnz
fimuls
ror
arpl
xor
sub
adc
adc
push
adc
sbb
int3
movsb
pop
leave
push
jmp
hlt
adc
shr
dec
xchg
jl
pop
fwait
push
pusha
je
mov
jmp
inc
outsl
cmpb
cmc
jns
jnp
stos
das
mov
push
pop
inc
mov
inc
push
mov
add
daa
repnz
cmp
mov
lahf
pop
mov
jg
lret
mov
cmc
push
test
dec
sub
push
inc
dec
xchg
mov
out
mov
gs
pop
dec
push
cld
xor
bound
xor
pop
ja
int3
mov
gs
cmp
outsb
mov
cmp
lret
xchg
into
inc
xchg
enter
out
iret
sub
or
das
shlb
jl
adc
sbb
in
jge
lods
jecxz
cmp
pop
ret
add
pop
push
pop
and
xchg
dec
push
add
out
ss
inc
ja
fdivr
clc
ljmp
adc
ds
sahf
add
mov
mov
jnp
fsubrp
xor
cmp
xor
mov
xor
xchg
pop
arpl
cmp
data16
js
jg
jns
or
fldl
aad
xorb
std
insb
push
adc
xor
push
dec
dec
data16
cmp
pop
pop
inc
jns
pop
pop
pop
sbb
mov
jge
lods
jle
push
sub
push
pushf
or
adc
pop
ret
pushf
jno
std
jno
jno
dec
pop
loop
push
rorl
loopne
dec
push
sub
mov
dec
ret
sarb
pop
adc
jnp
inc
mov
mov
dec
ljmp
add
mov
cmpl
pop
mov
inc
adc
jle
lahf
jmp
xchg
cmp
inc
and
in
jmp
dec
jne
pop
ret
sub
xchg
jp
jne
cmp
and
testl
or
pop
adc
fcompl
or
xor
cld
cmc
inc
push
repz
loope
and
test
pop
cmp
push
mov
clc
or
xor
inc
pop
inc
pushl
test
adc
scas
ljmp
divb
sub
cmp
xlat
test
mov
adc
cmp
int
ds
sub
lods
dec
cmpl
inc
inc
xchg
adc
ja
outsb
pop
insb
test
inc
mov
inc
pop
int
je
loop
pop
imull
ljmp
leave
push
fistl
adc
mov
jo
dec
pop
inc
sub
inc
cltd
int3
stos
test
mov
mov
gs
push
pop
ja
mov
test
cs
cmp
jge
in
and
xchg
mov
sub
add
inc
mov
sbb
jne
xadd
adc
std
add
out
sub
sahf
lds
jmp
movsl
gs
shll
jne
mov
sub
and
dec
mov
mov
push
mov
add
or
data16
shl
lock
sub
lcall
xorl
mov
cmpsb
lahf
shlb
bound
add
fwait
int3
jbe
scas
aad
jl
sub
gs
jmp
xchg
mov
in
aad
cmp
mov
shl
pop
lods
xor
rorl
pop
in
jge
mov
push
or
sub
test
add
enter
xchg
or
imul
sbb
mov
loop
push
xchg
iret
pop
pop
popa
or
inc
out
mov
sub
repnz
inc
mov
inc
in
call
or
into
pusha
inc
mov
dec
mov
xorb
data16
inc
std
bound
nop
and
push
jo
jle
jg
outsl
ja
push
popf
mov
aad
cwtl
sahf
mov
inc
xchg
dec
stc
repnz
nop
inc
fucomi
sub
sarl
movsb
cmc
push
pop
xor
stos
mov
mov
mov
pop
xchg
loopne
sub
fistps
mov
in
jne
fdivrl
xchg
xor
movsb
imul
inc
inc
addr16
stc
add
dec
inc
mov
movsb
lods
mov
in
mov
pop
push
add
mov
leave
mov
cmp
push
jno
std
dec
sub
pop
leave
iret
xchg
dec
aas
gs
rolb
out
es
xchg
fxch
call
loop
popa
dec
incb
sub
push
sbb
imul
push
inc
dec
xchg
pop
adc
aaa
fnsave
push
out
fmul
mov
inc
lahf
ljmp
dec
push
clc
add
or
cwtl
outsl
adc
add
push
dec
mov
pushf
dec
mov
sub
push
sbb
shll
sub
and
outsl
sub
push
int3
movsb
xchg
xchg
or
adc
gs
mov
popf
inc
ret
mov
decl
jge
push
xchg
in
xchg
dec
mov
cmp
fistps
fsubr
dec
and
je
addr16
or
or
sub
sub
movsl
xor
jo
jl
popa
nop
lods
cmp
cmp
int
ret
cs
data16
aam
arpl
imul
ljmp
sub
inc
in
inc
test
jbe
shl
sbb
mov
xor
push
dec
scas
add
in
fcmovnu
dec
lds
fucom
hlt
sub
xor
mov
ljmp
aad
pop
outsb
clc
pop
adc
lcall
testb
sub
xchg
fisttps
adc
jnp
lret
dec
in
bound
jns
inc
in
xor
cltd
sub
xchg
mov
ljmp
inc
and
cli
out
ljmp
orb
outsl
cmp
mov
cmpsb
cmpsb
test
pushf
jb
sbb
jae
in
inc
popa
scas
inc
or
imul
lcall
aaa
push
mov
inc
cmp
xchg
inc
push
jge
or
insb
pusha
imul
pop
std
outsl
ja
in
mov
inc
aas
mov
aas
pushf
outsb
mov
js
cmp
in
loopne
mov
dec
imul
fdivs
jno
xor
jbe
and
adc
nop
call
mov
dec
add
dec
pop
hlt
adc
sarl
shlb
adc
pop
add
aam
or
xchg
pop
jp
sti
dec
jge
cs
push
rcrl
cwtl
imul
xor
xor
addl
push
dec
movsb
fsubs
jne
sbb
xchg
sbb
mov
pop
jo
addr16
cmpsb
cmp
and
les
lcall
mov
scas
out
pop
test
cmpb
xor
or
out
xor
and
mov
gs
call
mov
aas
and
lods
cltd
push
xor
shl
dec
call
add
dec
sub
stc
mov
popf
dec
rol
xchg
dec
add
jmp
push
in
mov
aas
lock
pop
sbb
inc
add
add
lea
sub
xchg
insb
dec
in
push
jae
rcl
cmp
dec
out
fildll
ret
bound
sub
iret
mov
jg
les
daa
lahf
jecxz
test
dec
rcrb
sbb
inc
xor
les
lahf
fsubrl
cs
fwait
sbb
sti
loop
pop
inc
jb
adc
les
pop
fnstcw
mov
push
push
cmp
bound
xor
sub
ds
mov
imul
cmpsb
xchg
xchg
out
xor
xor
push
mov
cmp
imul
scas
ja
push
scas
scas
fidivrl
xchg
sarb
loope
ja
dec
pop
or
xchg
inc
into
sub
jno
mov
pop
decb
mov
fdivs
adc
pop
sub
xchg
je
dec
add
std
cmp
test
repnz
cli
pcmpeqw
push
mov
push
icebp
or
xchg
or
mov
pop
jns
sub
add
mov
xorb
mov
xchg
push
cltd
out
daa
lret
add
arpl
mov
pop
arpl
jne
add
scas
pop
cmpsb
leave
push
push
cmp
sbb
push
cli
notb
pushf
push
rol
cmp
mov
dec
add
cmp
lods
test
dec
fcmovb
das
cmp
cmp
cli
sub
and
nop
inc
shlb
lcall
test
fs
add
push
inc
addl
scas
jp
ja
scas
repnz
jbe
movsb
mov
xor
lock
lahf
adc
pop
arpl
add
mov
mov
pop
lcall
mul
out
push
iret
aam
sahf
mov
in
out
addb
aaa
shll
test
enter
lds
xchg
dec
fdivl
push
or
dec
rorl
bound
test
jno
or
arpl
jo
popa
mov
loope
loop
xchg
mov
pop
mov
pop
lock
orl
mov
sub
mov
and
enter
jae
in
xor
inc
data16
mov
cmp
inc
imul
imul
inc
lcall
daa
mov
imul
sub
or
movsl
jge
fdivrl
sbb
ljmp
inc
cmp
sbb
jecxz
mov
lock
movsb
add
ss
out
fst
cmpsb
lods
out
stos
dec
outsl
inc
stc
push
mov
adc
jne
jne
lret
rorl
jbe
aas
lret
add
pop
cli
mov
add
cmp
and
andl
xchg
loop
or
mov
adc
cltd
aam
sub
imul
scas
and
mov
or
xlat
cltd
sbb
adc
loope
push
shlb
sub
pushf
and
ficomps
lea
push
movsl
daa
mov
pop
jo
gs
test
movsb
loopne
lahf
adc
lds
mov
jbe
nop
imul
ret
aaa
or
mov
xchg
mov
or
inc
jne
dec
sarl
dec
pushf
sbb
sub
imul
fwait
addr16
jo
jno
pop
lahf
divl
repz
xor
or
int
clc
cltd
cli
ljmp
pop
das
mov
xchg
mov
jge
sub
ret
cmp
inc
inc
ja
add
shll
rep
into
jae
or
mov
cmpsb
xchg
cmp
cmp
repz
or
push
imul
dec
xor
ja
cli
or
xchg
mov
inc
pop
sbb
or
sbb
mov
testl
cmovp
xchg
es
js
outsb
push
jae
mov
or
rolb
pop
push
mov
mov
dec
ds
adc
ret
pop
pop
movsb
mov
pop
push
or
xchg
test
xchg
mov
or
lds
leave
xor
inc
inc
jmp
cmp
pop
mov
jmp
mov
lcall
jae
lcall
fisttps
iret
test
mov
pop
jle
xchg
popa
pop
cmpsb
rcrl
sarb
insb
addr16
sub
repnz
mov
adc
sbb
mov
in
ret
leave
dec
mov
jne
or
or
cli
pop
push
sub
mulb
add
out
xchg
jmp
or
push
push
sub
push
movsb
cmpsb
mov
sub
or
push
add
mov
pop
jnp
add
mov
jecxz
mov
stc
outsl
jno
daa
mov
add
subl
cmp
or
dec
fwait
jne
pop
xor
gs
xor
add
aaa
subl
insb
pop
pop
aas
lea
cmp
in
lahf
mov
fistl
push
mov
test
xor
rcrl
xor
decb
dec
mov
mov
pop
loopne
jne
adc
pop
mov
and
mov
jg
or
adc
fsubrs
in
fincstp
popf
pop
test
stc
inc
dec
in
jge
outsb
push
cmp
sbb
mov
test
inc
or
lock
ret
sahf
push
ror
jge
mov
or
xchg
sbb
jnp
push
fldt
iret
out
sahf
push
sbb
push
out
gs
icebp
pop
inc
aas
pop
mov
sbb
in
into
lret
xchg
push
cltd
push
stc
fucom
dec
gs
fcompl
mov
lret
jg
sarb
lock
and
inc
and
push
fsubrs
push
cmp
rolb
mov
dec
fstl
push
cmp
jb
mov
mov
mov
stos
and
out
ret
aas
xchg
xor
sub
jo
lahf
das
pop
add
push
xchg
ss
mov
pcmpgtd
in
sub
adc
popf
lret
cli
mov
pushf
mov
cmp
sbb
push
adc
pop
push
dec
mov
mov
shrb
mov
cmp
cld
jg
jecxz
pop
loope
ss
pop
xor
mov
lds
lds
test
fidivl
gs
in
jb
lods
xor
pop
adc
lods
cwtl
sub
pop
dec
cwtl
cmp
andl
push
fildll
adc
xor
mov
fs
cmp
pop
inc
or
xor
and
jnp
loopne
adc
pop
dec
cltd
mov
lahf
ficomps
pop
jle
sub
ja
mulb
fistpll
fnstsw
xor
aam
mov
fidivs
mov
jnp
fmul
or
and
mov
stos
mov
dec
fcoms
hlt
push
jmp
ficoml
add
jg
out
sbb
mov
sbb
inc
jns
es
popa
xor
sbb
andb
imul
andl
sub
or
int
or
dec
xchg
scas
out
rcrb
xor
das
mov
jne
mov
ret
jl
outsl
xor
lcall
jo
xor
push
cmp
out
and
dec
and
jp
addr16
icebp
icebp
cmp
jns
pusha
push
std
jecxz
pop
sub
push
jbe
ljmp
insb
shl
sbb
aas
lods
test
js
add
or
repz
sahf
xchg
lcall
push
adc
xor
andl
outsl
lret
cmp
das
inc
in
cli
dec
scas
xchg
mov
cmp
shl
repz
stc
pop
jmp
daa
fwait
or
cmp
loope
fsqrt
sbb
outsb
mov
xchg
cmp
cld
cmp
or
cmpsb
inc
pop
xor
sbb
mov
mov
xchg
cmp
fucompp
or
fnstcw
dec
cmp
xchg
pop
xchg
leave
add
jmp
popf
insb
and
jle
fnstsw
imul
or
in
jecxz
jmp
cmp
mov
push
adc
leave
mov
sbbb
stos
sbb
sar
repz
popa
sti
pop
lds
fwait
sub
rcr
mov
inc
mov
pop
je
xchg
xor
dec
jo
push
loopne
xor
aad
xor
xlat
int
mov
test
ljmp
int
jno
pop
mov
pop
jle
pop
mov
or
adc
jl
cmp
push
push
je
outsb
sahf
push
addr16
mov
jne
jg
sbb
cmp
notb
call
or
pusha
test
push
and
dec
pop
loop
jno
or
sub
cmpsb
and
jge
xchg
fwait
js
in
mov
xor
int
je
divb
call
push
data16
test
je
jmp
decb
addr16
pop
push
lret
loopne
fwait
jbe
mov
ljmp
jle
mov
and
xor
cli
xchg
and
pop
neg
sbb
adc
pop
jmp
or
aam
sbb
std
push
push
xchg
adc
inc
sarb
push
adc
jae
and
jne
xchg
dec
sub
out
cmc
movsl
xorb
lods
sbb
mov
pop
leave
xlat
cmp
out
les
lock
add
repnz
jg
xor
xchg
jecxz
xchg
jecxz
repnz
mov
inc
jl
jle
mov
pop
cmp
mov
in
mov
cmp
sbb
sbb
pusha
mov
mov
add
clc
pop
jno
pusha
inc
pop
jmp
push
adc
iret
add
es
ret
push
enter
cmp
jno
les
pop
ja
rcrb
rorb
aaa
jge
iret
sub
xchg
insb
clc
inc
cli
cmp
popf
inc
dec
mov
add
jmp
fsts
cmc
push
jecxz
jg
fwait
mov
push
mov
mov
cld
cmp
ret
mov
push
or
ret
push
adc
cld
mov
add
nop
lds
mov
scas
lods
push
xchg
enter
push
shrl
pop
ljmp
xor
xchg
xlat
rcl
xor
dec
ret
jns
mov
test
mov
push
sti
cli
mov
xchg
cli
aad
jnp
xlat
test
mov
pop
mov
mov
inc
adc
inc
mov
rcr
and
pop
adc
adc
repnz
cmc
leave
dec
cltd
les
std
stos
jl
xchg
cmpsl
jo
dec
bound
sarb
xor
es
xchg
in
dec
jns
arpl
sbbb
pop
or
mov
arpl
sub
dec
or
mov
xor
dec
test
mov
mov
loop
mov
mov
jecxz
rorl
fsubrp
movzwl
cmp
int
adc
mov
imul
fistpl
or
cltd
loop
mov
cs
xlat
push
or
mov
pop
lahf
testb
scas
jmp
xor
je
andl
in
pop
inc
into
mov
cmpsl
xchg
add
insb
mov
inc
popf
subl
and
xor
fsubs
popf
inc
int
sbb
lea
shlb
lahf
jnp
shll
xchg
inc
mov
xor
loope
into
sub
shrb
xor
hlt
popf
inc
mov
sub
decb
pop
scas
add
mov
jle
nop
mov
cs
adc
inc
lea
jns
js
mov
adc
inc
xor
cmp
out
jecxz
push
shlb
xor
sub
insl
daa
ret
add
xlat
mov
sub
pop
dec
push
xor
pusha
mov
hlt
cld
adc
outsl
into
push
gs
jb
mov
sbb
fs
xchg
push
xchg
or
dec
add
rorb
decl
aas
lods
ret
mov
sbbl
ret
and
clc
shl
outsl
sti
in
xor
mov
les
xchg
mov
mov
and
xchg
les
jae
pop
out
lea
push
and
mov
out
shlb
pop
sbb
xor
jg
pop
dec
mov
js
push
jecxz
in
dec
add
dec
adc
sbb
mov
leave
iret
subb
gs
pinsrw
ljmp
sarb
pop
jp
out
xchg
mov
popa
mov
cmpsl
loop
mov
test
cmc
dec
rclb
xor
movsl
and
jl
aad
pusha
and
xor
cld
outsl
inc
push
jg
mov
push
mov
aam
js
mov
loope
push
lret
jb
sub
jmp
call
pop
push
jmp
in
cs
stos
mov
mov
arpl
adc
sahf
stos
pop
popf
hlt
sub
sub
jo
rolb
cmp
movsb
mov
repz
sbb
insl
sub
loopne
addl
icebp
lret
pusha
mov
push
sub
mov
pop
push
or
pop
stos
mov
xor
out
push
insb
std
ficompl
ss
pop
xchg
or
pop
decb
inc
push
xor
sbb
les
fsubs
jl
or
jae
fs
or
push
call
mov
cs
mov
test
xchg
in
mov
loop
adc
cmc
mov
mov
sub
hlt
out
xchg
loop
push
loop
jp
push
out
mov
push
fdivr
outsb
mov
cmp
xchg
mov
mov
push
mov
movsb
xchg
mov
es
jbe
pop
insl
dec
add
ror
out
xorl
call
pop
jge
pushf
pop
imul
or
xchg
icebp
mulb
cmp
sub
mov
and
sbb
shr
adc
outsb
testl
test
or
insl
shl
cwtl
arpl
loop,pn
lret
sbb
sub
out
fwait
stos
mov
lock
xor
sbb
mov
sarb
outsb
aad
or
cmp
gs
orb
sbbl
inc
test
sub
cmp
out
inc
cmpb
pop
movsb
cs
pop
nop
mov
add
pop
pop
pop
data16
add
sarb
scas
lods
or
lret
pop
jns
add
jg
repz
cmp
xchg
mov
pop
jle
dec
insb
pop
adc
into
popf
xor
pop
shr
jg
scas
inc
add
and
dec
mov
negb
and
push
xchg
push
sub
push
jae
mov
and
sbb
adc
icebp
mov
adc
sub
sbb
out
lods
lods
sbb
jns
lahf
jecxz
inc
sbb
aas
cmpsl
push
lcall
pop
add
lock
out
cmc
leave
lcall
push
jmp
add
add
xor
rcrl
mov
adc
std
shll
mov
sub
clc
pop
jne
mov
xchg
push
notl
das
xor
dec
xchg
xchg
mov
mov
pop
pop
sub
add
add
push
ficompl
int
pop
mov
adc
dec
dec
mov
sbbl
cmp
cmc
fwait
inc
repnz
dec
dec
mov
cmp
pop
dec
or
lea
adc
loope
push
or
jg
jmp
sub
dec
sub
mov
fs
lods
or
pop
std
ss
mov
scas
xor
sub
inc
pop
pop
jl
adc
cmp
jo
mov
into
aad
fimuls
xchg
fdiv
xor
pop
jmp
clc
movsl
add
dec
jmp
xor
push
in
das
mov
dec
orl
adc
inc
lea
xchg
jns
sahf
cmpsl
adc
inc
pop
int3
cltd
lret
sub
jg
mov
in
xchg
addr16
call
popf
fcom
mov
sti
test
stc
pop
inc
gs
jae
shrl
hlt
dec
xchg
dec
mov
xor
mov
pop
ret
dec
pop
rorl
xlat
push
xor
je
jbe
lret
mov
stc
cld
sub
cwtl
nop
sbb
fmull
sbb
pop
lahf
imul
mov
shr
adc
lret
xchg
xor
loope
out
arpl
or
jno
push
je
jnp
jo
call
mov
mov
test
mov
adc
dec
cmp
inc
sti
jp
cmpl
xchg
mov
imul
add
jmp
out
inc
outsl
dec
push
jo
data16
test
stos
mov
pop
mov
in
enter
fldenv
and
cmp
aam
cmp
cld
xor
in
aad
mov
negb
ror
mov
jb
adc
or
dec
push
jmp
aad
hlt
pop
dec
int3
adc
dec
roll
and
pop
mov
popf
jb
lock
adc
sub
jo
hlt
mov
mov
xchg
loop
jno
notb
mov
pop
xor
adc
add
xor
add
push
jmp
lahf
icebp
leave
out
xor
xor
inc
inc
out
mov
das
mov
aam
adc
test
ret
mov
ja
push
mov
cmp
adc
lcall
adc
fwait
idivb
mov
or
mov
mov
mov
mov
insb
cmc
icebp
cmp
xor
sub
and
jnp
jo
stc
jl
icebp
mov
mov
ja
add
aam
rolb
dec
jp
cltd
scas
xor
add
mov
xchg
lret
insl
push
dec
mov
add
pusha
lcall
xor
mov
js
outsl
xor
mov
or
pop
stc
sub
mov
xchg
fcmovbe
xor
jae
jne
loope
lret
push
mov
and
loop
sahf
pop
stos
insl
and
popa
outsl
test
adc
movsb
xor
fs
lock
jae
fs
push
push
cmpsl
push
add
fcoml
push
pop
add
sub
cmpsl
mov
and
push
andl
shrl
data16
cs
aas
or
popa
lods
push
scas
or
daa
dec
push
cld
sub
test
jno
inc
pop
leave
push
push
sbb
push
adc
mov
sbb
gs
fsubrp
mov
mov
add
ss
xor
stos
push
popf
adc
aam
je
adc
in
test
cmpsb
lret
jns
adc
jnp
stos
jae
imul
xchg
imul
fidivs
lret
mov
and
scas
push
movsb
sbbb
xchg
mov
repz
lods
mov
sbb
mov
inc
xor
lods
pop
fists
js
jo
jecxz
push
mov
out
aam
js
rcl
sub
lcall
imul
dec
jge
jmp
leave
stos
dec
loopne
sub
cwtl
dec
xchg
mov
lds
decl
out
shrl
ret
mov
pop
and
jl
cmp
adc
rclb
pusha
into
lock
adc
add
insl
jmp
cmp
dec
sub
jl
sub
inc
mov
cwtl
roll
fcmovnbe
fidivl
bswap
adc
sbb
test
mov
inc
xchg
sub
push
jno
cwtl
in
pop
inc
cmpsl
jbe
hlt
push
lret
fisubs
and
test
shlb
fmuls
cli
pop
ljmp
mov
sbb
ss
rcl
mov
fistpll
insb
pop
jb
int3
dec
movb
sbb
push
or
xor
cmp
stos
int3
xor
in
pop
sub
mov
scas
fdivrs
mov
es
daa
aam
jmp
jecxz
leave
incl
sub
xor
jne
push
jno
add
stos
fs
dec
push
adc
into
je
cltd
xor
mov
and
push
and
adc
push
jmp
mov
int
sbb
arpl
sub
xor
jl
pop
mov
sub
mov
and
mov
lea
test
cmp
add
fildll
add
adc
push
mov
xchg
je
xchg
rcrl
jp
ss
mov
jmp
dec
data16
inc
shrl
dec
test
sbb
or
sahf
cmp
xor
adc
ljmp
cmpb
jo
fwait
pop
or
out
shlb
out
loope
rcr
xchg
repz
test
jbe
push
shrl
xor
and
sbb
mov
movsb
stc
cmp
stos
ds
pusha
jge
subb
les
ret
push
jl
sbb
pushf
pusha
xchg
ror
mov
hlt
mov
add
je
lods
jmp
mov
sub
dec
out
sbb
xchg
xor
jl
stos
xor
sahf
mov
push
ficoml
enter
jns
aad
push
xchg
fdivs
testb
cwtl
jo
push
pop
pop
mov
jb
and
and
add
and
lods
mov
and
in
sbb
je
movsl
jge
sub
dec
shll
in
mov
mov
out
mov
stos
mov
popa
jl
xchg
cmp
inc
setle
clc
imul
dec
test
adc
pop
cltd
insb
bound
ja
push
ret
inc
or
adc
mov
movsl
fildl
mov
int3
xor
pop
jo
adc
imul
lret
cmp
add
xor
movsl
sbb
pushf
inc
stc
adc
shlb
daa
iret
cmp
ja
cwtl
adc
push
cmp
outsl
pusha
and
testb
jbe
shrb
cwtl
shrb
jnp
int
push
lds
sub
lea
es
pusha
gs
out
pushw
cmpsd
mov
cmp
sub
add
sbb
outsb
jp
cmp
mov
lahf
fdivr
ret
mulb
pop
sub
or
adc
jle
push
int3
mov
dec
push
rolb
lahf
pop
lret
mov
mov
daa
test
fbld
repnz
mov
xchg
xchg
aad
jbe
cld
sbb
lcall
das
lods
sbbl
jl
inc
data16
sbb
pop
xchg
fs
push
adc
mov
insl
sbb
mov
out
xchg
pop
cmc
xor
lcall
leave
lret
pusha
mov
cli
scas
sub
lods
mov
add
repz
shrb
push
adc
cmp
into
ja
ja
pop
cltd
ret
sub
dec
sbb
jbe
sbb
cwtl
sahf
adc
dec
scas
jg
mov
jno
out
gs
pusha
ss
pop
inc
jle
xchg
repz
je
sti
jns
sub
mov
fmull
testl
push
aas
ljmp
mov
pop
xchg
gs
test
ss
mov
sbb
push
fistl
jo
mov
popa
mov
in
sbb
daa
cmp
mov
imull
sbb
in
xchg
cmpsb
jns
fnsave
fucom
sbb
insb
cs
cmpsl
add
xor
sbb
shll
sub
jns
xchg
ds
movsl
jns
dec
test
aam
scas
jno
int
pusha
push
loope
popf
jl
icebp
out
std
test
xchg
xchg
push
fisubl
inc
jb
incl
test
gs
cmp
rcll
loopne
call
sti
jae
mov
test
or
push
icebp
sub
pop
cwtl
nop
es
sar
or
inc
inc
notb
clc
enter
fdivr
into
and
test
adc
arpl
lahf
mov
jns
add
mov
shr
aad
push
jg
out
add
fildl
jbe
mov
mov
lods
negb
fstpl
js
imul
add
jne
in
cmp
inc
mov
sub
mov
mov
xchg
popf
inc
sub
xchg
lahf
lret
mov
imul
je
pop
enter
dec
sti
test
jno
jl
insb
push
nop
sbb
mov
rcrw
pop
mov
dec
rcrl
nop
push
jp
jnp
jp
fldcw
shr
stos
movsb
jno
inc
icebp
ss
leave
in
in
mov
lock
ss
call
sbb
mov
ficompl
pushf
sbb
out
and
lods
lahf
leave
sbb
mov
pop
xchg
cmp
and
iret
push
cmpsb
inc
dec
sub
fcmovne
das
cmp
push
pop
xchg
mov
push
pushf
fsubrl
mov
lods
js
imul
inc
aad
jns
stc
adcl
push
add
fldl
sbb
xchg
fnstsw
clc
sub
mov
jmp
loope
aas
sub
jns
dec
jle
cltd
adc
shl
sbb
xchg
sahf
test
dec
je
fs
stc
and
icebp
jns
pop
and
mov
out
sub
add
cmp
or
jecxz
pop
cmp
adc
icebp
ret
mov
mov
iret
aad
aas
std
cmp
mov
ftst
stos
adc
out
jecxz
xor
push
push
aas
push
int
adc
cs
rolb
gs
mov
out
rcl
idiv
sub
mov
arpl
push
push
push
push
rorl
pop
xor
mov
daa
mov
movsl
push
pop
dec
es
or
popf
aad
xchg
std
sub
imul
mov
jmp
loop
jmp
inc
or
pushf
daa
dec
loop
sbb
xchg
mov
cld
add
enter
aaa
outsl
cwtl
or
inc
sbb
fldt
das
xor
lods
out
stos
or
popa
add
test
clc
mov
pusha
xchg
lds
cmp
faddp
bound
dec
ret
into
pop
jae
xchg
cli
mov
cmpsl
cmpsb
fsin
mov
or
sbb
movsb
pop
inc
sti
iret
mov
repnz
push
outsl
jbe
mov
imul
mov
mov
cmp
inc
sti
or
clc
xchg
dec
incb
cmp
sub
movsb
push
dec
and
in
adc
fadds
test
push
sbb
mov
mov
fmul
fldl
call
jb
ds
mov
imul
and
sub
imul
pop
ret
aad
stos
addr16
ficoml
xchg
dec
jne
xchg
jmp
hlt
ljmp
mov
das
arpl
mov
clc
jle
jno
test
jecxz
adc
rcl
add
js
push
inc
leave
dec
sbb
js
sbb
ja
clc
jns
leave
ss
mov
daa
push
xchg
mov
push
xchg
add
rcl
xchg
test
and
adc
and
das
pop
pop
cmp
iret
fbstp
or
je
fmul
mov
std
lds
and
fisubrs
mov
imul
cmpsl
cmp
fs
insb
jns
aam
das
repnz
push
inc
js
test
rcr
push
jno
jp
int
and
cmp
pushf
roll
faddl
fcomps
lcall
jp
mov
call
pop
xchg
pop
in
push
les
adc
push
pusha
ret
mov
xchg
inc
lahf
cltd
jecxz
mov
into
stos
aaa
or
cs
repz
mov
push
repnz
cmp
inc
mov
loope
mov
jns
aaa
stos
subb
hlt
fwait
icebp
mov
fucom
lahf
repz
adc
push
inc
mov
ss
ljmp
nop
dec
add
xchg
and
inc
addr16
inc
fdiv
cmp
ja
hlt
or
sbb
pop
pop
fdivr
inc
xor
jns
daa
out
outsl
cmp
fdivs
data16
xchg
mov
rorb
xchg
push
push
jecxz
aad
jle
outsl
in
xchg
dec
pop
dec
or
adc
push
out
mov
and
addb
test
xor
fists
pop
pushf
cld
cltd
pop
or
push
orl
lds
stos
cmp
ret
mov
add
icebp
lods
repz
fnstcw
cmc
jecxz
mulb
mov
out
test
ret
or
ja
push
test
ret
in
mov
ss
xor
outsl
cmc
shl
cld
in
cmp
ret
add
xchg
sub
popa
adc
hlt
sub
rolb
pop
pop
iret
add
fs
or
push
mov
push
out
bound
jo
movsl
shl
fidivrs
pop
nop
repnz
cmp
pop
xor
adc
movsl
mov
sarl
and
add
stc
in
loope
pushf
xchg
cmpsb
subl
subl
lea
in
les
das
hlt
test
cld
mov
and
xchg
or
fpatan
dec
jl
das
test
addb
call
or
jmp
and
push
std
mov
push
shrl
mov
add
gs
xlat
rolb
ds
testl
add
jnp
sbb
std
out
xor
rcrl
nop
ja
sarl
repz
or
pushf
lret
lret
adc
fsts
cmpsl
lcall
jb
ss
nop
subb
loopne
add
adc
pop
call
cltd
sbb
repz
add
add
mov
jb
lret
cmp
clc
outsb
pushf
push
cltd
or
inc
or
inc
jae
sub
mov
xlat
loope
cs
or
and
pusha
mov
roll
test
test
or
push
cld
insl
mov
add
rol
sbb
fdivrs
xchg
push
jne
stos
ror
in
in
pop
fwait
adc
scas
sub
outsl
push
es
insl
pusha
sub
jp
icebp
in
test
push
dec
add
sub
xchg
movsb
jbe
je
fwait
mov
aas
pop
cmc
js
xchg
push
sub
leave
call
sahf
ljmp
stos
xor
pop
inc
pop
or
mov
idiv
sub
shl
cmp
out
jmp
ret
jl
gs
cld
arpl
sbb
das
fs
pop
cmp
mov
jno
jmp
mov
cmc
cs
dec
negl
jnp
push
dec
pop
idivl
jmp
sub
push
aad
add
adc
adc
out
jo
push
and
push
mov
test
add
ret
popf
int3
inc
in
cs
dec
aas
adc
loop
adc
fs
add
int3
and
or
repnz
mov
aad
les
test
out
lret
dec
cmp
bound
js
out
jle
push
adc
and
cmpl
int3
inc
jo
mov
notb
dec
ror
in
cmp
pop
mov
stos
shlb
int3
mov
jno
mov
lds
outsl
es
sbb
xchg
inc
mov
sahf
add
aas
jge
stc
sub
insb
adc
popf
xlat
rcll
push
push
cmpsb
jbe
mov
xor
mov
xor
xchg
inc
dec
dec
stos
cmp
xor
stos
int
jnp
in
clc
dec
ffree
mov
loope
and
mov
cltd
add
mov
lods
fimuls
in
sbb
bound
in
rcll
sti
pop
fcmovbe
imull
cli
sub
ret
lcall
das
movsb
cmc
bound
daa
xor
icebp
lcall
sahf
lcall
mov
clc
sbb
mov
pushf
mov
clc
adc
repz
lds
jmp
out
dec
mov
sbb
dec
sub
aas
mov
xor
sub
sbb
jmp
enter
ret
fidivrl
xchg
sub
cmp
inc
sarl
mov
movsl
in
pop
sub
xchg
cmpsl
mov
mov
das
add
push
mov
in
pop
pop
test
lea
fcmovbe
push
sti
nop
mov
adc
jo
inc
mov
dec
packsswb
shlb
mul
sub
test
lret
js
xor
cwtl
loope
push
popf
ds
add
or
sub
sub
xor
imul
test
and
add
in
mov
cmp
loop
in
pushf
icebp
inc
stos
cmp
outsb
jnp
inc
dec
notl
into
ss
imul
pop
enter
int
jg
bound
push
fcoms
pop
sti
outsl
sbb
or
jns
popa
push
aam
insl
idivl
xor
pop
push
fdivs
and
adcl
test
repz
xchg
pop
test
gs
adc
and
shrb
dec
sub
inc
jl
fistl
repnz
jae
sbb
cmp
inc
xchg
fcomps
xor
lahf
ljmp
sub
push
fcoml
inc
jge
divb
lods
mov
sub
mov
mov
sub
fcomps
lds
xor
add
cmp
mov
mov
jle
pusha
rorb
push
pop
mov
fscale
ljmp
imul
or
jno
jbe
test
jo
std
mov
inc
pop
lds
dec
shlb
cmp
pop
cmc
or
ds
ljmp
push
xor
jle
pop
movsl
jp
xor
mov
cmp
xchg
daa
pop
jl
mov
movsb
jg
mov
ret
xor
mov
dec
pop
and
pop
adcl
out
mov
into
sbb
cmpsl
sub
ror
ja
sbb
sub
xor
inc
pop
lds
add
jl
inc
push
test
pop
inc
mov
out
mov
push
call
movsl
mov
sub
outsl
mov
push
int3
mul
bound
xchg
xor
jbe
aad
dec
fisubl
pop
cs
jecxz
test
adc
dec
dec
mov
jae
cmp
sub
push
arpl
dec
adc
das
jns
flds
in
sarb
add
push
fcom
dec
sbb
dec
adc
aas
add
pop
repnz
out
enter
aam
fs
addr16
into
or
repnz
cmpsl
push
pop
mov
mov
enter
out
mov
sbb
mov
pop
jnp
cld
cwtl
jno
mov
lds
fldl
stos
pop
loop
xchg
inc
fimull
sub
lds
idivl
mov
sahf
inc
repnz
lret
lods
aad
mov
push
scas
and
in
pusha
push
aad
cmp
stc
shlb
sbb
add
pop
pop
dec
jnp
fcoms
lods
mov
dec
outsb
push
mov
subb
mov
paddq
inc
jg
insb
sub
lods
das
shll
mov
popf
test
ss
cltd
jmp
add
fadd
push
jne
mov
sub
jg
loopne
mov
lds
pop
cmp
push
into
and
sub
jge
adc
fsubs
movsb
lds
popa
lea
xor
xchg
notl
hlt
test
dec
sub
push
testl
outsl
sub
imul
mov
test
nop
mulb
mov
push
dec
aam
sbb
scas
hlt
push
aad
movsb
int
stos
mov
bound
mov
adc
push
xlat
inc
movsb
rolb
and
jmp
push
jl
ljmp
xchg
pop
inc
xchg
aaa
jl
fs
aad
js
incl
inc
inc
inc
lods
nop
xchg
xor
cwtl
fdivl
in
mov
push
inc
repz
push
cmp
dec
inc
roll
stos
mov
inc
mov
mov
push
call
imul
outsb
jg
fucom
int3
xor
shlb
sbb
cmp
mov
gs
mov
adc
lcall
mov
cs
sub
les
aam
jmp
repz
repz
loopne
sbb
dec
test
aas
pop
sbbb
repnz
out
xor
movsb
or
cli
sarl
jecxz
mov
mov
out
adc
repnz
out
gs
ja
jno
jbe
jge
in
in
mov
fwait
xor
mov
add
outsb
hlt
outsl
add
adc
mov
int3
das
mov
lret
and
mov
xor
test
sub
in
push
jge
sub
loopne
mov
push
pop
sub
mov
pusha
mov
mov
xchg
in
cld
pop
xor
outsb
rcl
mov
add
add
fnsave
fisttps
in
adc
inc
test
jmp
and
cli
cmp
push
dec
cmp
ds
lahf
cmpsb
jge
and
xorb
mov
pop
cld
jbe
add
ret
orl
lea
out
mov
mov
sbb
adc
xorl
inc
rcll
sbb
and
iret
ss
xchg
nop
push
sbb
aas
int
sub
inc
push
fadd
aad
dec
inc
test
lods
inc
pop
fmuls
ja
rcll
lret
jmp
fistl
inc
cltd
je
sub
jmp
out
arpl
inc
shll
cmp
xchg
add
dec
aaa
mov
adc
sub
jp
test
inc
adc
mov
and
lea
sub
push
lds
cmpsb
mov
xchg
inc
je
lds
in
push
or
lods
enter
inc
pop
sub
lret
sbb
pop
repz
push
jp
and
lcall
shll
push
sub
push
jno
insb
mov
test
lret
jle
outsl
icebp
andps
stos
ss
mov
adc
or
leave
xorl
push
daa
pusha
inc
adc
rolb
dec
adc
pop
sbb
xchg
cwtl
data16
nop
push
pusha
out
repz
add
adc
add
inc
lret
push
aad
add
js
cmp
inc
sar
das
sti
daa
ja
outsl
dec
int
jbe
xor
dec
push
push
fdivrl
bswap
add
stos
jmp
mov
out
bound
scas
xchg
dec
addl
xchg
xor
dec
in
cwtl
mov
mov
jns
and
mov
jno
je
pmulhuw
xlat
lods
enter
int
cs
sub
std
cmc
mov
dec
nop
test
mov
sbb
adc
loope
inc
mov
mov
ss
test
outsb
xchg
mov
pop
shr
or
and
loop
cmpsl
test
sar
xor
adc
jge
iret
adc
int3
test
les
pushf
mov
icebp
push
mov
in
jg
pop
imul
sti
aad
je
mov
jp
xchg
jo
call
fwait
scas
adc
out
test
dec
idivl
pop
fucom
test
or
cmp
mov
xchg
xchg
push
mov
aas
sub
push
xor
jns
mov
jb
mov
pextrw
inc
add
stc
mov
cltd
mov
cltd
imul
add
mov
sbb
in
cltd
push
cld
xlat
test
lea
dec
loop
cli
pop
shr
mov
aam
push
sub
sti
xor
add
fstp
int3
lcall
xchg
mov
imul
xlat
inc
adc
lea
mov
enter
imulb
cmp
ret
push
in
loopne
sub
into
sbb
ja
ss
testl
mov
daa
cmp
enter
fsubl
mov
push
push
mov
lret
hlt
adc
outsb
ss
lock
sbb
loop
pop
and
orl
stc
or
hlt
push
add
xchg
movb
shll
pop
test
jl
enter
sahf
push
mov
xchg
fildl
outsl
pop
in
xorl
xchg
inc
repz
in
outsb
sub
pop
mov
jge
pop
jecxz
fprem1
lret
inc
jae
mov
je
xor
arpl
push
daa
sbb
inc
or
cmp
cmp
mov
sub
call
and
int3
or
or
push
sub
cld
xor
mov
cmp
xchg
int3
push
out
enter
test
jge
sub
int3
clc
pop
ljmp
xlat
mov
adc
xchg
and
sub
add
mov
out
ss
mov
sub
movsl
loope
and
mov
nop
adc
mov
aad
mov
pop
cmp
cmp
jb
nop
leave
mov
sahf
jno
test
adc
pop
test
loope
pop
jmp
gs
cmp
xchg
fwait
xor
jbe
pop
push
sub
shrb
fs
loopne
adc
xor
loopne
sbb
cwtl
fisubl
inc
xchg
adc
jo
xorb
in
enter
shll
loop
push
inc
push
jp
pop
dec
ret
cwtl
sbb
inc
ss
loopne
repnz
pop
push
push
dec
mov
inc
mov
test
mov
stos
inc
js
adc
mov
xchg
insb
ret
sub
inc
mov
pop
lods
sbb
sub
push
sbb
mov
scas
data16
jns
faddl
jp
fldl
mov
xor
dec
insl
inc
icebp
or
add
push
pop
pop
lods
data16
adc
or
sbb
iret
decl
cmp
push
push
mov
je
hlt
jl
add
jns
fsubl
ss
adc
mov
fs
cmp
dec
loop
es
inc
into
jecxz
in
xor
mov
jne
sbb
aam
pop
add
repnz
jbe
cmp
jo
stos
adc
mov
push
out
mov
imul
fs
pop
adc
and
pop
clc
inc
jle
or
dec
mov
xor
sub
adc
sbb
ljmp
sarb
mov
test
jns
call
loopne
es
insb
and
int3
adc
test
inc
lods
mov
lcall
jb
xchg
mov
pop
movsb
xor
jo
cmp
push
mov
dec
aaa
int3
sub
std
dec
mov
repnz
dec
stc
jp
cs
jns
pusha
les
pop
and
test
stos
jl
icebp
gs
data16
push
imul
jp
and
sub
mov
push
sub
adc
push
loope
cld
push
push
sbb
sbb
outsb
jno
mov
outsb
jg
inc
outsb
inc
push
push
jne
mov
mov
addb
fstpl
jae
pop
adc
inc
mov
push
nop
repnz
fisttpl
push
sbb
fs
imulb
aam
lahf
andl
ds
add
add
stos
cs
dec
push
or
insb
pop
cmpsb
mov
dec
test
mov
mov
ret
cmc
mov
test
sbb
or
jle
clc
in
jmp
xchg
adc
rorl
ret
lds
add
clc
xor
pop
push
sbb
leave
inc
or
cld
pushf
push
cli
adc
das
sub
inc
outsb
cmc
cmp
push
mov
repnz
pop
ss
sarb
push
or
lods
ret
lret
pop
cmpsb
xchg
dec
in
xchg
stos
pop
mov
addr16
pop
push
sub
imul
imul
dec
leave
into
push
jl
fs
xor
into
xchg
dec
add
jns
movsl
lret
leave
mov
insl
mov
or
jmp
shr
sub
fcoms
adc
or
data16
push
add
adc
loop
add
or
or
popf
cmpsb
and
sbb
pop
test
or
sub
cmpsl
mov
pop
jno
ret
cmp
leave
pushw
ret
adc
cwtl
bound
aaa
inc
jecxz
add
cmp
ret
mov
aam
int3
test
data16
in
sub
icebp
pop
jnp
push
pop
jb
and
sbb
es
xchg
sarb
test
mov
inc
dec
cmpsb
cwtl
pop
mov
cltd
push
dec
dec
xchg
dec
mov
lea
and
cmpsl
mov
jge
cmp
adc
adcb
and
js
push
fstpl
sarl
mov
sub
repnz
pop
xor
testl
out
cmpl
and
in
gs
in
shrl
cli
sbb
mov
jo
xor
aad
jge
dec
cmp
insl
push
xor
negl
scas
and
adc
sub
and
jo
test
pop
in
xchg
inc
outsl
scas
test
stos
adc
data16
ja
mov
dec
pop
mov
fdivs
xor
and
daa
dec
js
daa
mov
repnz
cmp
orb
aas
or
out
xor
lret
ljmp
pop
ja
or
pslld
jg
sahf
pop
xor
aam
mov
add
das
hlt
jo
hlt
xor
fildll
inc
int
repz
es
mov
test
icebp
sub
call
mov
fnstsw
fldcw
xor
adc
pop
cmpsb
mov
sub
mov
sar
dec
test
inc
sub
adc
repz
test
loop
ret
push
mov
jae
jl
or
in
pusha
jnp
insb
pop
out
mov
dec
icebp
add
cmp
jg
inc
push
sub
into
fprem
fdivrs
in
mov
imul
dec
enter
pop
mov
int
test
cmpsl
das
packuswb
sahf
mov
push
and
xchg
push
test
mov
push
mov
mov
cmp
int3
lahf
xor
mov
adc
mov
inc
shrb
mov
ljmp
into
jns
mov
or
aam
pushf
dec
mov
and
dec
fisubrl
mov
cmp
cmp
mov
pop
xor
and
adc
pop
inc
sbb
stos
xchg
xor
mov
cmp
and
out
mov
mov
into
adc
shlb
daa
sub
xchg
jno
jnp
pop
push
dec
xchg
push
loopne
mov
rolb
mov
push
fsub
icebp
mov
push
movsb
jmp
jb
jmp
adc
hlt
clc
jp
stos
loop
cmp
cmp
lock
mov
rolb
and
shll
movsb
xchg
repnz
stos
sub
stos
xor
ljmp
popf
call
jl
jno
pop
push
push
and
adc
cmc
pop
popf
pop
out
add
imul
adc
lods
and
dec
pop
mov
fidivrl
outsl
jmp
mov
push
sbb
sub
cmp
je
pop
insb
cwtl
adc
mulb
push
xchg
leave
into
cmp
enter
insb
inc
ffreep
sub
je
out
inc
xchg
test
loope
xchg
lods
sub
dec
imul
fsubl
push
pop
jmp
lds
mov
inc
adc
inc
shrb
dec
and
cmp
movsl
mov
rcrb
xchg
mov
rcll
out
cs
ja
fst
jo
inc
adc
stos
mov
lahf
movsl
faddp
out
aas
push
inc
adc
int3
inc
mov
cmp
stc
stos
jg
test
add
xor
mov
push
push
mov
lret
loop
inc
sub
mov
jbe
fisubs
addb
push
aas
cmp
arpl
pop
or
cmp
cmp
test
jno
xchg
lcall
xlat
cmp
mov
addr16
add
fisubs
sarb
mov
or
fmuls
in
add
inc
jo
push
mov
callw
adc
imul
fsts
mov
fildll
fcmovb
ja
sub
mov
xchg
xorb
jge
cltd
pop
pusha
xorb
or
mov
fstpl
add
inc
push
push
pop
xchg
lea
in
cmpsb
imul
push
xchg
xchg
push
mov
hlt
push
sub
xor
dec
push
mov
daa
push
icebp
sti
fs
jmp
dec
xchg
ljmp
out
add
bound
inc
adc
repz
cmp
inc
loope
in
and
sbb
pop
push
shrl
ja
lock
jns
stc
xor
sbb
jmp
addr16
jmp
insl
stos
add
sbb
adcb
fisttps
ret
mov
enter
fidivs
shrl
movsl
mov
mov
mov
jl
sbb
or
pop
aam
popa
mov
and
std
mov
ds
cvtps2pi
xchg
cld
ss
add
jnp
mov
nop
adc
add
out
xchg
cmp
fiadds
pop
inc
addb
mov
cmp
repz
push
push
dec
gs
inc
jb
push
cmp
sub
subb
cmp
insl
fcomps
jmp
xchg
in
push
inc
testb
dec
mov
sub
jo
mov
leave
mov
add
popf
loop
lods
and
or
push
jae
mov
loopne
loop
iret
mov
movsl
add
or
sbb
call
sbb
xchg
push
xchg
sbb
sti
xchg
xor
fmull
movsb
dec
dec
push
push
jns
push
popf
aaa
jle
cmp
in
jmp
push
mov
je
bound
mov
enter
and
adc
out
inc
popa
or
xchg
orl
cwtl
pop
sti
pop
popa
and
mul
test
repnz
cltd
pop
xchg
adc
cmp
not
adc
lds
mov
movsb
dec
sub
dec
insb
mov
pop
imul
stos
subl
jb
pop
lods
in
and
push
mov
cs
into
sub
shl
in
inc
and
loope
inc
cltd
leave
out
clc
inc
dec
cmpsl
addl
pop
jne
out
ss
js
lcall
pop
out
mov
cs
jae
js
inc
call
ljmp
xor
jge
orl
stc
test
and
push
icebp
clc
cwtl
icebp
cmp
sbb
push
xchg
or
pop
or
mov
push
mov
aam
inc
jle
into
pop
sub
mov
hlt
mov
imul
xor
sarb
mov
cmpsl
lods
push
jmp
leave
arpl
or
ror
popf
into
cmc
popa
jp
jno
fmulp
out
addr16
mov
ret
add
leave
lret
mov
or
jae
mov
ja
in
ficompl
xorb
orl
mov
mov
icebp
jo
call
aas
mov
ljmp
xchg
int
push
out
sahf
mov
sub
mov
rorb
jecxz
cmp
lods
ljmp
aaa
add
cmpl
int3
xor
mov
jge
sbb
leave
and
popa
test
or
mov
push
or
lahf
xchg
bound
aaa
dec
xchg
aaa
push
add
add
xchg
fs
adcb
das
xchg
lods
jnp
inc
xchg
mov
adc
lock
cmp
jle
jmp
xor
jb
mov
push
sbb
cld
daa
fwait
sbb
cmpsb
xchg
jecxz
jl
xor
adc
outsl
mov
insb
clc
mov
lret
inc
testl
pop
dec
xchg
mov
pop
scas
push
lahf
dec
mov
sub
push
aam
pop
push
jle
pop
outsl
icebp
xchg
mov
imul
orb
and
xor
out
mov
pop
push
add
jl
dec
mov
fsubl
and
sbb
adc
mov
lret
lock
mov
jb
sbb
inc
dec
mov
scas
inc
loop
sub
stc
sar
pop
sbb
aas
fimull
mov
mov
inc
jg,pn
test
sub
imul
ds
mov
inc
or
in
lods
ja
addr16
into
sbb
or
push
xor
mov
outsb
jo
rorl
pop
sti
scas
popa
pop
cs
leave
aam
sub
add
pop
xlat
mov
sub
mov
pop
out
imul
mov
sbb
loopne
sbb
or
js
test
push
mov
lret
shll
out
daa
test
or
and
pop
push
imul
inc
outsb
pop
lds
xor
ja
jno
and
or
pop
mov
sbb
dec
daa
daa
mov
and
sub
jns
incb
sbb
pop
stc
xchg
sub
ss
mov
xchg
out
test
in
jl
xor
push
inc
sub
jecxz
mov
or
sub
addb
dec
xchg
mov
pusha
cli
cmp
call
fs
fmulp
pop
dec
gs
ret
jno
and
pminub
lret
fwait
add
push
lcall
daa
xor
out
out
mov
sbbl
enter
push
popf
pusha
sbb
in
lods
jne
sarl
iret
sub
add
js
sbb
jge
dec
pop
xor
add
mov
jle
push
repnz
xchg
les
loope
imul
adc
lret
aas
data16
out
test
loop
or
jae
jle
or
inc
addr16
pop
fdivl
xchg
movsl
add
cli
xchg
out
push
mov
in
fstps
xchg
push
inc
aam
movsl
lock
mov
jae
ja
loope
xor
sub
mull
and
add
cmpsb
notb
pusha
inc
aaa
and
scas
adcl
call
pop
imul
shlb
xor
iret
into
mov
or
inc
int
mov
repnz
jmp
movsb
data16
xchg
sahf
scas
bound
aam
pop
addr16
scas
iret
lcall
jae
push
xchg
and
and
adc
cmp
shl
lea
das
cld
push
insb
adc
andb
inc
and
push
cmp
incl
insb
lods
jg
cmp
xor
cmp
sbb
daa
jp
ret
js
nop
jmp
stos
ret
jp
jae
gs
cmpsl
cmp
push
mov
cmpsb
gs
out
fnstenv
lods
pop
cwtl
or
jp
sti
call
fdivs
dec
in
or
add
sub
pushf
dec
sbb
mov
aas
sbbl
jg
mov
xor
add
cltd
sub
add
pop
lret
mov
mov
out
push
inc
cmpsb
ret
or
push
push
mov
imul
aad
inc
bound
and
sub
into
push
imul
lods
sbb
and
aas
sub
inc
arpl
sub
gs
out
push
ss
in
mov
cwtl
jmp
test
and
out
jle
xor
pop
stc
mov
jne
and
push
cld
inc
stos
loop
inc
adc
jno
sub
rcrb
out
popa
pop
dec
dec
and
mov
mov
aad
mov
dec
cmp
push
negl
pop
or
fadds
sbb
ss
xchg
and
sbb
sbb
xlat
aaa
sub
mov
and
hlt
int
insb
lock
cmc
mov
xchg
and
jmp
leave
shrl
jae
jge
cld
inc
loope
mov
dec
sti
ret
shlb
out
je
in
and
adc
jge
outsl
fdivl
inc
ret
lods
test
pop
pop
cmc
jecxz
pop
adc
adc
push
xchg
xor
loope
xor
cmp
cmovg
aaa
jne
sub
test
insb
mov
xchg
lock
test
clc
xchg
add
adc
pop
cwtl
mov
and
xor
fidivs
insl
xchg
adc
xchg
xchg
arpl
fldlg2
and
adc
add
inc
shrl
fst
aam
sahf
out
cmp
arpl
cs
xor
lods
sbb
sbbb
neg
gs
or
and
add
das
sub
shl
cmp
mov
push
adc
je
int
xor
xor
outsb
xchg
test
shlb
aas
push
mov
ljmp
push
pop
inc
jne
stos
jge
loope
mov
call
rorb
mov
mov
jg
fwait
idiv
fucomi
xchg
js
outsl
push
testl
mov
repnz
insb
in
outsb
icebp
std
push
xor
cwtl
xor
movsb
jno
cwtl
fistl
dec
loop
cld
mov
andb
sub
xor
inc
jo
mov
subb
data16
xor
inc
sbbb
xchg
popa
fsubrs
add
push
add
ror
lods
xor
sbb
adc
mov
mov
xchg
jb
mov
push
div
jecxz
xchg
push
loope
pop
sbb
xor
lock
movsb
arpl
stos
stc
inc
into
lea
lcall
out
push
fildll
jp
push
add
xor
cmp
out
sahf
jae
mov
addr16
adc
jns
cmpsl
xchg
test
push
pop
jg
cwtl
and
push
ret
jle
mov
imul
imul
std
jl
adc
or
mov
movsb
fstp
bnd
add
jle
lcall
cmp
mov
or
jp
mov
inc
dec
jle
adc
mov
push
int
jbe
ljmp
mov
in
pop
addb
lahf
inc
adc
add
and
movsl
sub
jns
add
outsl
lret
ret
test
rcll
cmp
daa
add
repnz
add
and
cmp
lcall
in
loop,pn
call
push
dec
in
divl
iret
mov
xlat
add
mull
daa
je
movsb
dec
js
arpl
out
pop
mov
xchg
repz
push
jb
jne
mov
add
push
add
xor
sub
outsl
pop
adc
jo
push
icebp
in
ret
or
hlt
add
jp
xchg
jmp
mov
outsl
call
sub
mov
jnp
pusha
out
jl
pop
cld
sbb
test
sbb
int
pop
test
jo
mov
mov
push
dec
jl
add
inc
fldl
into
jnp
int
int
jns
je
sbb
mov
mov
dec
xchg
shll
adc
adc
push
insb
jb
imul
lret
int3
sbb
icebp
lret
push
pop
std
mov
jl
cmp
pop
addr16
aad
sbb
pop
hlt
xor
sbb
mov
pusha
mov
push
dec
lret
repnz
stos
shlb
in
mov
or
inc
xor
fcompl
add
movsb
popl
and
jbe
mov
sar
cmp
fwait
jp
pop
ret
jp
pop
out
cld
xchg
mov
div
dec
pop
fiaddl
data16
mov
jno
aad
xchg
jp
mov
push
xchg
pop
cmpsb
mov
cmp
adc
dec
pop
mov
fstp
std
shrb
or
cmp
je
jecxz
dec
xor
mov
xlat
and
data16
out
jns
fs
test
mov
xchg
dec
aad
jl
les
xchg
dec
mov
mov
add
daa
inc
insb
iret
mov
push
mov
cmp
faddl
push
xor
movsb
loope
aaa
test
scas
orb
popf
xchg
mov
lods
aas
pop
pop
xor
adc
ret
scas
push
addr16
imul
push
cmp
xor
jne
inc
push
xlat
push
out
sbb
jle
iret
sub
mov
mov
out
mov
xchg
aas
cmc
add
dec
push
or
xchg
scas
iret
repz
aaa
push
test
cmc
cmp
xchg
add
adc
jo
mov
jl
mov
dec
inc
cmp
fsub
stos
aad
scas
or
dec
popa
inc
xor
negl
imul
enter
or
addr16
pop
push
mov
mov
data16
inc
push
and
or
jl
jno
sbb
in
call
leave
push
adc
fnstsw
mov
and
lret
lcall
jmp
imul
xor
or
mov
inc
ret
orb
lcall
push
rcr
enter
xchg
shl
aam
push
lea
cmp
xlat
enter
aam
adc
into
xor
movsb
push
test
rorb
jo
or
imul
insb
jg
add
fnsave
test
pop
jbe
mov
in
adc
pusha
fisubrl
pushf
xchg
aad
push
sbbl
fstpt
data16
fldcw
xchg
add
mov
loop
sbb
mov
push
mov
xor
xlat
and
xor
and
xor
sub
out
sarb
icebp
enter
dec
bound
mov
pop
xor
adc
adc
xor
ficompl
in
outsb
xorl
lods
xchg
add
jne
dec
pusha
stos
fldenv
xor
cmpsl
jae
stc
sub
dec
jmp
jo
mov
add
in
mov
loopne
cld
sub
fsts
add
je
jno
push
sbb
jecxz
insb
cmc
adc
lret
jnp
jl
sahf
popf
pop
push
ret
xchg
lea
enter
testb
sub
push
adc
sub
jns
mov
shll
imul
out
mov
mov
push
pop
int3
xor
pop
test
les
adc
xor
push
popl
push
push
mov
mov
and
dec
js
cmp
pop
pop
mov
lret
fisttpl
daa
add
mov
xchg
mov
pop
hlt
in
cmp
adc
push
inc
ljmp
adc
adc
xor
movsb
insb
mov
push
sbb
imul
push
in
jl
loope
push
jge
stos
xchg
jp
xor
lock
lds
int
aas
xchg
add
int
jne
pop
mov
test
or
addr16
test
adc
jmp
lock
jbe
push
loopne
and
les
out
and
gs
mov
imul
pop
sub
pushf
out
movsl
ds
push
call
mov
pop
mov
popf
clc
cmp
loopne
push
cmp
push
ds
pop
test
rolb
xor
mov
cmpl
outsl
mov
lea
gs
nop
into
adc
popa
cmp
dec
pop
add
inc
popa
push
dec
add
pop
jae
outsl
jb
cmp
mov
mov
stos
outsb
jp
out
in
addl
dec
inc
add
dec
mov
mov
or
push
insl
xor
push
scas
mov
popf
pusha
cltd
mov
mov
in
xor
pusha
lods
inc
mov
leave
mov
out
es
xchg
scas
fld
clc
sbb
test
add
pop
push
lret
jle
sub
or
sub
test
out
repz
push
jp
fldenv
outsb
sahf
popf
xchg
out
jle
cmpsl
dec
mov
pop
lahf
je
dec
xchg
jecxz
push
push
push
cmp
ret
jne
stc
xor
rcr
shlb
pop
pop
ja
lods
mov
in
or
shrb
push
in
out
pop
jae
mov
pushf
and
xor
testb
out
enter
xchg
fadds
jns
adc
pusha
sub
push
push
rclw
test
pop
or
enter
cmp
js
sbb
pop
sarb
xor
mov
scas
int3
outsb
aas
add
stc
adc
imul
aad
lock
push
pop
xchg
mov
jecxz
and
or
and
pop
fimuls
call
lock
sbb
sbb
aad
or
mov
push
test
cmp
and
push
pop
push
mov
mov
and
test
cwtl
inc
lcall
push
xchg
mov
jecxz
push
xchg
cltd
add
aad
sub
adc
shl
aaa
inc
arpl
cmpl
and
push
or
add
inc
outsl
jl
test
ds
dec
das
push
idivl
flds
ret
pop
cmp
rolb
aas
pushl
psrld
sbb
inc
sub
pushf
ljmp
adc
cmp
out
dec
bound
leave
rolb
xor
in
inc
negb
sbbb
or
push
js
or
push
mov
loopne
sbb
std
int
xlat
in
stc
mov
mov
mov
rorl
lods
ret
inc
movsl
aad
xchg
in
mov
jg
fsts
int3
adcb
int3
or
lcall
and
jg
shll
mov
mov
and
pop
mov
movsl
test
or
mov
pop
cltd
mov
adc
cld
and
or
sti
dec
adc
int
js
dec
js
fldl
pushf
push
sbb
es
lret
sbb
jo
push
xor
jno
fstp
mov
clc
cwtl
enter
loope
fcompl
push
jmp
lea
ss
insl
and
fiaddl
fnsave
loop
push
jg
push
xchg
cmp
or
les
cmp
dec
lret
jo
dec
cmp
shll
xlat
pop
cmp
xor
cmp
xchg
add
repz
lret
jg
push
push
and
sbb
test
adc
lea
aam
jecxz
cmpsl
int
add
test
int
mov
pop
or
sbb
aaa
inc
xchg
push
fcmovnu
jne
push
ret
pop
inc
lea
clc
mov
dec
sub
jne
jg
int
push
push
sbbb
movd
xor
gs
repz
adc
pop
xor
sub
cli
mov
mov
cwtl
push
ret
mov
mov
xchg
imul
lahf
lahf
lcall
push
mov
repz
ljmp
adc
pop
inc
je
scas
es
imul
rolb
add
push
sub
mov
jb
gs
fwait
nop
mov
or
aas
in
sbb
mov
mov
movsl
fisubs
jb
or
add
adc
enter
out
sbb
movsw
mov
mov
int
sub
pop
push
repnz
fcoml
xor
call
cli
ljmp
test
or
aaa
ss
cs
stos
xchg
xchg
and
stos
dec
mov
jo
cwtl
aaa
sbb
inc
xchg
xchg
cmpsl
add
loop
or
mov
jge
dec
or
movsb
xor
inc
xchg
pop
adc
xor
testb
sarb
aas
adc
mov
push
and
lods
jno
clc
cmpsl
mov
push
add
push
pop
mov
push
scas
adc
fstp
adc
push
mov
popf
int3
movsb
dec
ja
js
jb
repnz
fistps
mul
ret
adc
inc
and
jle
fisttps
repz
cmp
fildll
je
or
bound
test
inc
ss
loope
repnz
andb
std
add
push
pusha
ds
jmp
lahf
lret
rolb
cs
test
xor
stos
sub
int3
cmp
mov
adc
dec
jbe
mov
test
xchg
ja
push
mov
xchg
int3
inc
sbbl
cmp
out
imul
or
sub
add
cld
dec
pop
cwtl
push
inc
out
xor
push
push
leave
jae
cwtl
sbb
dec
mov
jl
xchg
cmp
dec
jmp
pop
icebp
into
xor
orb
mov
stos
imul
imul
ret
lods
daa
movsb
stc
ljmp
shll
adc
add
add
arpl
ret
imul
orb
inc
insl
adc
out
adc
push
lea
xor
pop
xorb
lahf
subb
out
mov
das
int3
aaa
push
je
adc
pop
and
inc
in
test
mov
fidivl
les
push
divb
int3
jp
repnz
negb
es
insb
cltd
mov
dec
mov
fiaddl
pop
mov
imul
jns
adc
inc
jmp
in
dec
push
inc
cmp
inc
aam
mov
push
iret
testl
xor
mov
scas
fdivr
insl
cmp
cs
add
rcl
lock
test
clc
movsl
jnp
push
mov
fcmove
jne
mov
adc
mov
fcoms
mov
mov
xor
adcb
out
inc
es
jmp
pop
in
loopne
stos
lods
loope
add
and
shll
mov
aad
xlat
mov
xchg
pop
roll
lcall
popa
sbb
push
and
cltd
and
dec
inc
pop
xor
mov
gs
jnp
inc
ljmp
jbe
sub
lock
jmp
outsb
pop
imul
jo
cmpb
xchg
jns
ljmp
in
cld
jne
std
pop
inc
lock
add
jne
xchg
pop
gs
and
mov
out
lret
jmp
sub
rcll
and
sahf
xor
fsts
mov
jmp
loope
mov
fsubrp
cmp
inc
shlb
jns
ss
cld
sbb
and
gs
mov
mov
push
pop
mov
sub
push
test
adc
cmpl
dec
mov
mov
dec
push
mov
icebp
xor
mov
movsb
sbb
loop
lret
adc
push
rolb
xchg
ss
jbe
jb
cli
pop
dec
loope
sub
mov
pop
je
ret
and
mov
mov
mov
popa
pop
push
dec
call
add
imulb
xor
nop
movsb
notb
push
cmpsl
es
jnp
shl
mov
push
adc
xor
js
sbb
mov
movsb
fs
add
scas
insb
in
push
inc
lods
into
dec
adc
shr
sub
ljmp
orb
lahf
add
ss
sub
movsb
cmp
push
jmp
xchg
ss
aad
arpl
xchg
test
ljmp
cmp
jmp
xchg
pop
sbb
cmpsb
imul
sub
mov
sbb
enter
dec
shll
push
dec
stos
push
lcall
icebp
hlt
pop
shl
fdiv
add
jbe
adc
stos
push
mov
movl
mov
arpl
adcl
pop
add
pushf
push
mov
cmp
movsb
in
pop
xchg
and
mov
cmp
addr16
jae
xor
js
js
outsb
cmp
scas
loop
sbb
test
or
mov
outsl
sbb
push
dec
call
xor
pop
cmp
mov
mov
jg,pn
adc
or
mov
sbb
jne
loop
scas
xor
dec
in
and
cmp
iret
imul
push
je
icebp
shll
mov
dec
xor
push
stc
mov
xchg
cmp
cmpsl
pusha
sub
cmp
js
cmp
cmp
ds
push
xlat
je
fistl
xchg
push
adc
inc
fwait
sbb
stc
sub
cmp
and
cli
pop
adc
and
jmp
jecxz
jl
lahf
repnz
aaa
popa
lcall
cmpsl
std
mov
hlt
lock
mov
sub
mov
je
lods
lods
fbstp
add
out
xchg
cmp
mov
mov
sbb
add
lock
inc
add
dec
fidivrs
pushf
or
mov
test
outsl
mov
push
sub
test
cmp
jbe
pop
jnp
movsl
cmp
int3
imul
push
sar
dec
pop
shll
mov
jbe
es
into
and
xor
fidivs
cmp
adc
push
rorb
imul
xchg
sar
aad
push
xor
insl
jle
fstpt
lock
mov
or
pushl
dec
enter
mov
xchg
setle
stc
mov
pop
push
pushf
and
fs
mov
bound
movsl
mov
dec
dec
lods
cmpsb
cmp
push
daa
rcll
mov
mov
push
sbb
push
or
test
xchg
scas
push
and
cmp
subl
jp
add
out
sbb
mov
dec
push
hlt
mov
inc
jne
das
out
cmpsb
js
cmp
out
xchg
repnz
outsb
inc
inc
mov
lahf
lock
jmp
cmpsl
test
in
adc
inc
push
or
mov
rcrl
pusha
ror
sahf
insb
cwtl
mov
or
fiaddl
cld
jl
arpl
inc
je
xchg
push
shll
addb
mov
mov
arpl
pop
add
imul
mov
push
add
cli
xchg
mov
mov
imul
xor
push
or
enter
mov
jae
mov
mov
xchg
adc
sub
xor
dec
jb
jl
in
push
loopne
adc
scas
and
and
mov
mov
gs
mov
repnz
xchg
incl
sbb
mov
cwtl
push
mov
mov
cmp
test
enter
arpl
adc
sbb
lods
adc
shll
push
dec
enter
push
xor
mov
pop
roll
inc
xor
mov
popa
inc
int3
jg
xor
xchg
cmp
imul
sbb
stos
push
pop
pop
arpl
mov
xchg
ds
aaa
icebp
mov
orl
cs
ret
mov
xor
cld
andl
xchg
cmp
sub
push
push
in
mov
jecxz
push
jno
data16
je
out
cmp
dec
or
loop
push
std
sub
pop
cwtl
popa
aad
pushf
rclb
movsb
mov
adc
iret
xor
adc
jnp
dec
imul
loopne
push
aad
mov
les
stc
outsb
and
je
mov
xchg
mov
sub
jnp
jo
test
dec
fwait
lods
inc
mov
dec
xchg
in
jmp
dec
sahf
add
repz
adc
mov
shl
pop
push
mov
adc
imul
mov
arpl
flds
or
pushf
adc
mov
das
or
xor
fwait
mov
cli
lock
out
pop
cmpsb
add
in
cmp
mov
in
lret
mov
mov
pop
mov
push
cmp
test
movsl
arpl
ja
mov
test
in
sub
and
jmp
dec
xor
lds
add
mov
es
icebp
insb
mov
ljmp
enter
push
cmp
pop
push
mov
xchg
popa
dec
cmp
testl
lret
xlat
dec
rcrb
add
xor
push
pop
xor
push
rcrb
xchg
in
or
jne
dec
dec
inc
movsl
call
stos
cmp
lret
inc
ret
lahf
call
in
ret
lods
ds
sbb
dec
dec
mov
in
cli
sbb
xchg
pop
or
lea
ret
out
idivl
or
cmp
mov
xor
fimull
stos
xor
jl
push
in
and
sub
xchg
jbe
sub
sahf
decl
mov
lcall
rcl
test
dec
outsb
add
cld
mov
jp
mov
std
sbb
or
pop
call
out
xlat
jnp
dec
add
adc
sbb
icebp
fldl
cli
adc
orl
faddl
sbb
xchg
outsl
pop
jb
clc
cmp
sbb
mov
loop
xchg
jnp
xor
and
popf
mov
dec
roll
mov
jecxz
mov
adcb
into
mov
int
cltd
cmp
mov
inc
adc
mov
scas
mov
into
pop
movsb
sub
xchg
lcall
lcall
xlat
jae
test
mov
jle
cli
xor
jae
in
xor
push
stos
dec
loopne
dec
dec
mov
add
pop
and
add
add
cmp
outsl
iret
or
push
imull
aad
je
call
jge
cmpsl
imul
incl
ljmp
push
nop
imulb
aam
cmp
out
xchg
mov
lret
jno
xchg
lret
push
in
push
call
cld
out
or
inc
sbbb
repz
les
adc
cmpb
pushf
or
add
jns
xchg
ds
loope
pop
or
sbb
mov
mov
adc
or
sahf
lret
push
or
out
xor
jae
iret
in
mov
adc
pop
testb
jecxz
add
repz
movsl
add
sahf
in
xchg
add
testb
or
mov
cmp
sub
mov
fstp
imul
xor
ja
fiadds
or
mov
mov
jge
sbb
nop
jmp
addr16
add
ss
int
dec
jg
xchg
mov
test
push
in
mov
shlb
sbb
sti
scas
test
adc
rcr
add
xchg
hlt
rcll
mov
test
enter
jecxz
inc
cltd
adc
jo
jl
popf
sbb
mov
pusha
fmull
sbb
xchg
xchg
mov
lock
aam
cmp
jmp
jmp
pop
pop
pop
dec
pop
cld
sub
and
jmp
cli
inc
cmp
insb
popf
mov
xchg
xchg
outsl
adc
popa
jmp
arpl
xchg
push
test
sbb
clc
push
mov
cli
sub
das
xor
fistpll
mov
jno
xlat
or
lods
jo
aam
test
sahf
ficompl
sbb
stos
movsl
push
sbb
or
fsubr
dec
pusha
pop
jae
push
or
ds
dec
aad
sub
lcall
fimuls
mov
inc
out
and
gs
sarl
xlat
mov
out
femms
das
lock
decb
or
in
jo
or
imul
in
mov
faddl
adc
arpl
jp
inc
lahf
add
inc
scas
mov
add
add
sbb
xor
mov
dec
stc
xlat
daa
and
lds
sarb
mov
mull
jns
les
clc
jp
and
imul
dec
movsl
cmp
loope
push
jno
mov
jns
or
nop
in
jbe
add
mov
in
push
ljmp
add
push
mov
mov
xor
out
adc
cltd
shlb
xchg
rcrb
jae
pop
ret
adc
scas
iret
sub
adc
xor
sbb
test
sti
mov
repz
std
dec
pop
cmp
sub
ret
adc
jle
fmuls
add
sbb
mov
movsb
lea
pop
add
push
sub
add
loop
roll
pop
aas
pop
leave
or
adc
popf
imul
and
aad
in
mov
sbb
push
addr16
ljmp
pusha
inc
push
jnp
stos
loop
inc
jnp
jp
pop
adc
dec
lret
cmp
sub
cmp
mov
testb
test
cmp
inc
fdivl
testl
xchg
lret
jmp
mov
sub
sub
push
lret
pop
fmul
pop
aad
ds
in
jl
cmp
outsb
xchg
inc
and
pop
lods
bound
mov
scas
jns
push
mov
push
ffreep
pushf
fidivs
sahf
pusha
xor
stos
and
rclb
int3
sub
push
jno
xchg
jge
shlb
lret
mov
fsubrp
test
push
mov
fwait
xchg
test
inc
cmp
loope
sbb
nop
and
loope
push
xchg
xor
mov
loope
xor
add
adc
push
loope
int
nopl
xor
cmp
sbb
jl
fcomp
xor
inc
cmp
or
or
adc
adc
sbb
std
movsl
stc
insl
rorl
roll
mov
jg
fsub
jbe
inc
xchg
add
jmp
into
fwait
ljmp
mov
hlt
mov
mov
in
stos
add
ss
and
jnp
inc
jmp
repnz
sub
imul
negl
dec
outsb
nop
mov
test
add
push
loop
sahf
jo
in
gs
push
mov
xor
pushf
push
popf
shl
cmpsb
xchg
in
bound
jno
dec
push
cmp
lahf
cmpsl
and
scas
or
rorb
inc
dec
addb
stc
jge
jns
dec
lock
pop
pop
loope
xchg
xchg
rcrb
and
lcall
sbb
imul
mov
ret
mov
push
enter
data16
insb
flds
in
xor
or
mov
cmpsl
or
lcall
and
shlb
test
push
scas
int3
leave
imul
clc
xchg
mov
jb
mov
mov
add
cld
push
jmp
xchg
jo
es
into
sbb
xor
dec
loope
add
xlat
lcall
jmp
sbb
sti
lods
dec
sub
cwtl
and
gs
and
ret
jne
in
pop
mov
jbe
cld
xor
dec
mov
sbb
jnp
push
cmc
jbe
sbb
mov
icebp
addl
mov
out
mov
fwait
lret
cmc
xor
push
fadds
std
repnz
test
or
and
dec
inc
pop
xor
fisttps
jno
mov
aaa
xlat
fisubrs
inc
loop
push
icebp
sbb
inc
aad
pop
cmp
sbb
imul
mov
pop
inc
xor
out
sbb
or
movsl
scas
cmp
xchg
lock
mov
push
jb
sub
or
or
inc
mov
and
ss
jl
pop
push
loope
std
xchg
add
daa
or
shl
roll
sub
push
jmp
jo
cld
fldenv
outsl
scas
shr
out
push
push
lock
bound
lahf
xor
xor
xchg
fwait
scas
cwtl
jecxz
mov
dec
fnstsw
mov
push
jae
mov
xor
sbb
cmp
jge
mov
in
xchg
dec
rcll
stos
fs
mov
nop
dec
dec
lods
shlb
scas
mov
mov
cwtl
paddq
or
aad
ret
dec
mov
mov
mov
push
stc
add
mov
dec
add
mov
setae
push
adc
fucomi
mov
in
jne
cwtl
lds
popa
pop
stos
add
in
or
int
mov
mov
loopne
call
decb
ret
mov
xchg
repnz
loopne
rcll
and
xchg
in
fs
jne
mov
lods
xchg
jp
xchg
arpl
pushf
repnz
dec
inc
mov
mov
cmp
lret
pop
sbb
sub
lods
sub
lock
jmp
jl
arpl
mov
fbstp
int3
or
fs
mov
out
leave
data16
push
into
cmp
and
mov
mov
sbb
mov
inc
cmp
mov
xor
icebp
outsb
adc
jne
js
cmpsb
fsubs
stos
and
jl
pop
mov
add
mov
shrl
mov
pop
enter
cs
sbb
sub
or
xor
sub
inc
mov
scas
outsb
addb
loope
or
je
lods
imul
dec
icebp
adc
pop
xor
or
or
cmp
jmp
in
sbb
rclb
sub
in
inc
mov
loope
xchg
lea
sbb
insl
xor
jne
sbb
es
fwait
dec
scas
sarl
movsl
jl
fistpl
adc
jb,pn
pop
stc
in
lods
sahf
jae
push
sbb
std
les
mov
stc
movsl
decb
sbb
inc
mov
out
popf
cmpl
int3
xchg
ret
cmp
cltd
popf
les
test
mov
int3
data16
add
test
and
mov
cld
xchg
or
repnz
imul
call
ljmp
adc
test
push
int
pop
adc
sbb
scas
xchg
cmpsl
xchg
shrb
imul
inc
lods
aad
xchg
outsl
or
fs
test
jne
xor
xchg
xchg
clc
push
incb
das
pop
mov
cwtl
dec
inc
pop
les
add
xchg
call
mov
sbb
pop
movsb
cmp
rclb
fisttpll
js
arpl
jo
or
adc
cmpsl
lahf
idivl
in
mov
ret
cmpsb
xor
in
cmp
or
adc
inc
adc
inc
jne
stos
xchg
xor
pop
mov
data16
mov
in
bound
cmp
inc
movsb
xchg
cli
dec
call
hlt
sbb
cli
les
mov
and
dec
insb
jno
adc
filds
ficoml
fwait
insl
shrl
inc
jg
fstpl
push
stos
mov
jmp
aam
push
lret
cmpsb
dec
sbb
fnstsw
dec
std
inc
sti
lods
decb
cmp
mov
mov
or
cmc
dec
mov
cmp
fisttps
pop
push
mov
lahf
cld
pop
dec
scas
aam
cmp
dec
xchg
inc
lods
cli
in
aad
sub
je
sbb
aas
push
sbb
jg
pop
sti
lds
sahf
add
and
inc
mov
jmp
push
cmp
bound
push
out
scas
rclb
lcall
in
adc
rcrl
shl
fadd
aaa
fsubrl
push
shll
xchg
mov
mov
lods
dec
sbb
inc
rolb
xchg
fwait
adc
stos
fdivrl
pop
lds
ja
sbb
jae
jne
and
cltd
je
scas
in
jg
nop
sbb
int3
adc
mov
dec
mov
aas
mov
xor
inc
mov
pop
jnp
into
push
insb
cmp
push
mov
sti
fcomps
jmp
jl
dec
or
js
inc
lcall
sbb
mov
repnz
sbb
dec
and
xchg
push
popa
xor
or
scas
mov
xlat
xor
decb
xor
jmp
daa
xor
subb
shrb
sub
je
cmp
pop
sub
inc
and
mov
ljmp
mov
cld
xchg
add
sub
in
hlt
sub
mov
mov
das
jb
and
dec
das
ja
adc
roll
add
mov
mov
cmp
xchg
jns
ret
xor
sub
enter
inc
mov
cmpsl
ficoml
xchg
lea
or
rcll
cld
mov
adc
ret
imul
dec
jae
push
xlat
rol
add
or
icebp
inc
mov
push
cltd
data16
adc
ror
xchg
pop
je
xchg
das
loop
dec
dec
std
jnp
inc
sbb
cwtl
iret
mov
je
and
mov
in
out
push
in
iret
lods
aas
mov
sbb
xor
data16
mov
pop
jno
shlb
sbb
aad
aas
xchg
mov
movsb
mov
dec
mov
and
pop
jge
std
lock
mov
orl
sub
mov
push
sbb
ret
sbb
jmp
scas
push
jp
pop
movsb
push
adc
xlat
mov
pop
pop
pop
or
ss
jns
out
test
roll
push
aam
inc
out
jge
xchg
lods
mov
mov
andl
rcrl
push
mov
scas
jp
ja
scas
fstp
cmp
jecxz
push
in
jle
xchg
push
push
xor
mov
inc
ficoms
mov
call
adc
fistpl
dec
cs
movsl
jmp
jg
in
fwait
cmpsb
sbbl
cmp
cld
adc
push
decb
or
fsubr
sub
lods
shrl
mov
data16
lods
ljmp
lock
mov
and
out
jo
mov
mov
adc
sbb
xchg
xor
pop
cmpb
addl
xchg
mov
xor
xchg
cmc
lods
mov
inc
mov
mov
popaw
cld
inc
sub
xchg
jg
ja
pop
int
fwait
lods
adc
cmp
roll
es
pop
aaa
test
insb
xchg
push
mov
sub
inc
jle
and
mov
dec
dec
push
adc
popf
sbb
inc
out
pop
das
insl
stos
mov
dec
cli
call
sub
rorb
cmp
cltd
sbb
add
lret
ret
les
jmp
xor
mov
pusha
sahf
push
cmc
js
cwtl
add
cli
sbbb
or
jno
jbe
xor
xchg
shll
push
lds
aaa
sub
cmpsb
popa
subb
scas
adc
enter
sti
xchg
push
inc
jecxz
fstpt
or
fisubs
sub
xor
mov
xchg
cmpsl
fisubrs
pop
jg
stc
adc
shrl
jmp
push
xchg
and
adc
push
rcll
in
aam
outsb
out
icebp
sbb
lret
adc
je
add
es
out
xchg
imul
dec
and
sahf
ret
in
iret
xchg
and
inc
iret
inc
inc
sub
sbb
jmp
rcl
mov
enter
and
cmp
xchg
out
mov
cmp
and
sbb
lock
fs
sbb
pop
scas
xor
jl
or
mov
add
or
mov
and
mov
cwtl
xchg
or
divl
lcall
xchg
jcxz
dec
push
push
adc
mov
push
and
sub
rcll
dec
pusha
dec
ljmp
mov
shl
das
cmpsl
push
data16
ret
jae
test
mov
daa
sbb
sahf
das
rorb
dec
pop
dec
add
mov
jmp
dec
test
jo
dec
pop
inc
lret
push
jmp
addr16
shll
pop
cmp
jp
xchg
jb
test
pop
rolb
fs
int3
loop
lahf
cmp
add
cmp
cmp
fildll
sub
sub
int3
xchg
mov
nop
mov
aas
das
mov
jp
ds
fsubr
jno
mov
andl
push
adc
pop
ds
icebp
outsl
jmp
lds
mov
adc
fdivrl
push
das
fidivrl
out
popf
xchg
adc
subb
loope
mov
out
in
and
jge
hlt
push
sbbl
push
loope
sub
rorb
jns
pop
mov
lcall
jb
push
mov
sbb
sub
scas
clc
cld
dec
es
adc
out
les
mov
addb
lcall
hlt
clc
mov
cmp
call
roll
sub
sub
inc
mov
sbb
jg
addb
insb
and
aam
pop
movsl
mov
inc
mov
pop
loop
dec
imul
push
add
and
or
jb
mov
pop
inc
data16
stos
divb
out
cmp
jg
mov
dec
sub
and
push
xor
shrl
test
pop
incl
es
divb
cmp
jo
es
fwait
mov
mov
in
xor
pmulhw
aaa
jmp
lret
jmp
inc
leave
idiv
add
add
adc
negl
jg
loope
mov
jmp
pop
test
mov
jo
movsl
and
negb
cmpsb
cmp
add
addr16
addl
lahf
lret
repz
cmc
movsb
push
shll
sub
mov
sub
cltd
sub
jno
mov
fwait
sub
pop
mov
mov
or
fidivrs
pop
js
mov
rolb
jmp
fucom
jnp
adc
aas
adc
mov
aad
mov
adc
mov
int3
enter
cmp
push
and
push
lret
sub
dec
mov
cld
mov
imul
mov
fsubl
mov
jecxz
or
sbb
js
sbb
jge
loopne
nop
popa
cltd
mov
addr16
push
and
pop
loopne
push
adc
mov
adc
xor
loope
push
rcl
ficoml
jne
ret
jle
pop
jno
cmc
mov
xchg
fld
js
lret
fs
jne
jg
jae
cmp
pop
lcall
mov
xor
xor
or
pop
in
sbb
jbe
and
pop
mov
push
jp
jecxz
cs
insb
jae
pop
cli
test
and
cmpsb
xchg
cmp
xchg
sub
pop
mov
sub
lahf
xchg
test
cmp
xor
push
stos
sti
loop
inc
in
sarb
xlat
out
mov
arpl
mov
dec
jmp
dec
loope
or
add
jnp
in
mov
rcrl
lods
ret
jecxz
mov
adc
in
sub
pop
into
xorb
fldl
push
shlb
out
or
dec
bound
inc
ficoms
mov
xchg
cmp
mov
scas
push
xor
pop
jl
test
fsubl
inc
mov
imul
dec
mov
sbb
xchg
xchg
addb
sbb
mov
push
mulb
jae
shlb
and
imul
jl
mov
pusha
test
ds
sbb
mov
sub
add
scas
cmp
sbb
in
js
and
rcl
iret
jbe
pop
xchg
pop
sub
ss
add
jae
xchg
aas
test
or
test
repz
ret
xor
pop
jne
push
mov
icebp
shl
std
cwtl
dec
cmpsl
call
sti
insl
loopne
mov
jmp
arpl
and
and
fidivl
in
and
mov
out
loope
sub
xor
push
orl
xor
and
fwait
add
shrb
sti
mov
clc
xchg
sbb
sbb
xchg
sub
xchg
xor
dec
into
push
test
fisttpl
movsb
sub
dec
mov
mov
notb
sbb
test
inc
jge
xchg
push
sbb
xlat
pop
dec
xor
out
stos
in
rcl
shlb
or
jbe
xor
dec
lret
dec
repnz
enter
and
xlat
pop
popf
pop
pop
in
pop
and
inc
mov
fsubs
ret
xchg
xlat
out
fistpl
dec
and
sub
dec
lds
lcall
movsb
mov
jle
jl
cmp
and
push
mov
test
xor
bound
push
les
outsl
jno
pop
sub
leave
and
jb
into
hlt
es
stc
sub
movsl
xlat
mov
clc
pop
cmp
outsl
out
jl
mov
pop
insl
mov
cmp
mov
pop
ja
sub
outsl
hlt
mov
push
lea
test
ret
aam
or
mov
hlt
or
jp
imul
push
divl
and
aaa
aas
lods
add
ds
push
lret
out
push
mov
sub
jmp
decl
std
or
test
setl
in
rorb
fildll
mov
aaa
repnz
loop
jb
stos
cmp
or
add
mov
xchg
push
fsubr
add
and
pop
xlat
sub
sub
pop
dec
std
pop
bound
sub
pop
xor
in
je
aam
das
add
cs
mov
pop
dec
or
outsb
rorl
sbb
test
int
cmp
sub
push
cmc
cmp
sarl
pop
mov
dec
xlat
sbb
inc
addr16
add
jns
xor
dec
mov
lcall
jg
mov
xchg
lahf
mov
lret
cwtl
ja
or
jle
sub
cmp
fcomps
repz
mov
push
int3
push
test
adc
add
lods
push
or
in
enter
adc
mov
sub
sub
mov
pusha
sbb
ss
mov
push
mov
out
sahf
notl
sub
fidivs
fs
and
mov
push
into
dec
jecxz
inc
outsb
add
je
push
shll
ja
xlat
jmp
es
sbb
test
in
jmp
adc
or
loop
cld
sarl
pop
xchg
mov
hlt
cmp
inc
sbb
cmpsb
xchg
movq
shr
mov
lea
stos
outsl
lods
xchg
push
negl
or
xor
mov
rolb
xchg
insl
loopne
xorb
add
loope
cmp
cmpsl
shll
xchg
mov
nop
and
rorb
sub
mov
outsb
mov
add
divl
fcmove
jnp
mov
stos
testb
xor
insb
xchg
push
mov
push
outsb
sbb
ljmp
mov
loop
cltd
outsb
xorb
insb
xchg
lods
pusha
xor
or
out
cmp
test
push
mov
pop
daa
shl
movsb
xor
mov
ret
stc
and
or
dec
xor
or
stc
fiaddl
push
aaa
das
and
cmp
fcoml
aaa
lret
adc
into
clc
pusha
test
lock
cmp
shll
and
movsb
sarb
mull
cltd
ror
lcall
jne
lcall
jmpw
mov
vprotd
pop
inc
movsl
repnz
xor
adc
rcll
pop
rorb
aam
ret
shrl
pop
or
push
ds
inc
ss
out
icebp
inc
cwtl
xor
push
bnd
xor
cmpsl
lods
xor
jo
and
scas
and
xchg
andb
ret
aaa
and
aad
mov
push
sbb
sub
xor
stos
int
jne
add
dec
jne
loop
xchg
scas
cmpsl
jecxz
cmpsl
sub
lret
testl
mov
push
jmp
movsb
cmpsl
xchg
push
xchg
loopne
pop
add
stos
push
push
xor
pop
daa
rol
add
ds
sub
ss
ret
sahf
and
rorl
xchg
pop
lret
mov
sub
pop
cmp
aaa
or
jnp
rcll
test
andb
cs
test
xor
jbe
cwtl
clc
push
test
xchg
jbe
push
mov
and
mov
pop
mov
mov
jnp
mov
sbb
jnp
inc
and
cmpb
ret
into
das
daa
cmpsb
out
push
xchg
dec
jno
push
dec
pushf
push
jge
push
icebp
negb
inc
cli
shr
out
mov
sbb
pop
das
sbb
xor
xchg
push
pushf
mov
stos
insb
dec
aas
and
xor
or
push
jg
jmp
pop
iret
cli
aad
repz
data16
lods
in
in
pop
fimuls
lock
fs
pop
add
cmpsl
jl
and
outsb
mov
push
cltd
sub
out
outsb
mov
insl
pop
insb
and
mov
fistpll
pop
loop
mov
and
mov
out
stos
dec
stc
stos
icebp
push
lods
sub
in
xlat
jbe
addr16
aaa
jg
sbb
or
cltd
pop
pop
rolb
shr
fucom
call
in
mov
mov
mov
mov
int
loope
pusha
push
fcomps
mov
inc
test
push
inc
push
inc
pop
push
test
push
scas
ret
out
jbe
dec
mov
sub
fmull
repnz
and
sbb
shll
out
xor
and
lds
or
adc
test
sub
loope
popf
cmp
shll
adc
xor
cmp
xchg
jae
xor
lret
adc
mov
jns
inc
rcr
mov
or
dec
cmp
xchg
test
dec
push
pusha
sbb
xchg
rclb
lahf
stos
repnz
adc
xchg
aas
test
hlt
loop
xchg
sub
aas
repz
jp
jne
inc
cmpsl
mov
subb
aam
rcrb
pop
sbb
sbb
or
aad
inc
testb
outsb
cmc
dec
out
cmp
jo
pop
stc
and
or
add
xchg
je
ljmp
nop
pop
cld
push
cmpsb
test
sbb
cmp
push
cmp
push
shll
movsl
sub
adc
pop
scas
push
bnd
jae
fdivrs
xchg
movsl
push
dec
shlb
shll
fs
hlt
sbb
fwait
sbb
in
insl
je
sbb
test
adc
dec
cmc
pushf
mov
mov
jno
mov
sbbb
cmp
and
sti
sbb
adc
jp
hlt
pop
imul
test
sub
mov
das
inc
ror
movsl
mov
add
out
pop
pop
mov
out
popa
ret
dec
stos
insl
xor
in
shll
roll
fmul
or
ret
out
bound
ja
dec
lock
aam
and
cld
aam
incl
dec
mov
test
fwait
or
xorb
jo
cmp
cli
cs
or
std
lock
add
dec
xchg
cltd
repz
inc
inc
setns
jnp
lock
lcall
das
mov
inc
int3
cmp
dec
xor
dec
mov
fwait
xor
sbb
pop
jg
pop
dec
jne
aaa
fstpt
sbb
xor
mov
cmc
or
mov
fisubs
mov
lods
inc
jne
lret
mov
outsb
enter
fcomip
std
add
jmp
std
loope
lret
addr16
xor
test
cld
pop
push
sub
push
jno
das
cmp
mov
pop
add
decb
pop
cmp
jo
push
lret
push
push
ss
das
clc
mov
les
pop
test
and
mov
jae
es
scas
mov
lds
ret
js
adc
fistps
rorb
jp
pop
add
xchg
imul
int
lds
popa
push
cltd
xchg
mov
shll
mov
aas
leave
xor
pop
test
mov
sub
xorb
cmp
and
in
pop
addb
add
xor
xlat
jle
mov
shll
or
push
clc
popa
mov
sbb
jp
lcall
push
sub
stos
mov
sbb
repnz
cwtl
adcl
pop
jo
jne
mov
sbb
jae
xor
cmc
push
mov
push
out
adc
daa
cmc
cmp
clc
scas
loop
jecxz
cmp
scas
lds
xor
xor
fstpl
fwait
sbb
adc
push
lcall
sub
imul
pop
dec
das
int
arpl
pop
insl
sti
sub
shll
cmp
or
sbb
mov
scas
sti
xchg
sub
inc
xchg
in
adc
arpl
aad
sbb
inc
out
mov
jecxz
adc
push
test
push
jecxz
mov
rclb
arpl
movsb
imul
rcrb
or
std
cli
jl
add
fdivr
jb
mov
sti
out
cmp
test
or
stc
sub
cs
mov
out
fs
mov
js
sub
ja
sahf
and
int3
and
mov
and
enter
mov
mov
mov
dec
inc
ds
sub
cmp
sub
push
repz
push
enter
ds
xchg
lea
loope
les
sarl
jge
rcrl
int
mov
sbb
shrl
repnz
mov
ds
daa
shlb
jbe
sbb
or
adc
push
es
mov
dec
sbb
lahf
xor
sub
lds
sbb
xor
xchg
ret
lret
rolb
cmp
mov
roll
jle
and
lods
subps
push
mov
add
mov
sub
cmpsb
pop
add
in
mov
or
pop
movsb
or
jle
mov
dec
xchg
loop
jne
push
pop
fwait
orl
pushw
and
ja
cmp
xor
adcb
xor
cld
insl
fsubrs
mov
pop
add
loope
push
add
mov
push
test
and
lahf
mov
mov
jmp
and
jae
xlat
adc
xchg
inc
or
xchg
popf
mov
or
movsl
push
ss
xchg
ret
pop
jnp
setp
and
ret
pop
nop
loopne
jbe
aam
out
ficoms
xor
leave
lcall
and
xchg
cmp
sub
fimuls
xchg
enter
and
dec
jnp
mov
xlat
add
arpl
in
push
popf
gs
cld
mov
or
xor
in
call
push
in
cmp
fwait
pop
cmp
mov
in
pop
mov
cmpsb
mov
xchg
lret
sbb
outsl
adc
negb
xchg
aas
and
lea
inc
int3
dec
ss
mov
dec
in
jmp
pushf
mov
mov
push
imul
loope
dec
test
out
int
call
dec
or
sbb
inc
das
rorb
mov
fnstcw
xchg
jge
cs
cmp
orl
in
inc
jno
aam
nop
jno
push
mov
add
lods
gs
inc
pushf
mov
jbe
mov
pop
cld
lds
jge
add
xchg
mov
xlat
shll
hlt
ljmp
cmp
push
stos
rcl
xor
adc
mov
and
jae
and
mov
movsl
sub
leave
or
sbb
mov
fbld
popa
movsl
xor
jmp
sub
add
stos
adc
fadd
xor
fwait
and
sbb
imul
adc
cmpsl
fidivs
and
nop
iret
scas
and
rcrl
xor
sarb
inc
jne
adc
stos
cmp
pop
fstpt
dec
ss
movsb
adc
xor
sub
outsl
pushf
mov
cmc
cli
sbb
ds
pop
dec
and
xchg
inc
push
pop
jmp
add
jp
es
xor
test
xor
std
lock
ljmp
xor
mov
cmp
fwait
bound
mov
add
inc
sub
cmp
sbbl
inc
out
cmpsl
mov
sbb
mov
into
mov
fs
enter
fisubrs
inc
icebp
sbb
lahf
rcll
lcall
std
sub
lock
add
mov
and
scas
xor
mov
sub
lret
fwait
push
jge
cltd
cmp
je
and
mov
sub
jb
sub
testb
pop
inc
xchg
pusha
scas
sbb
rclb
cmp
sbb
dec
sbb
push
mov
jle
cld
cli
in
ja
jnp
test
mov
cwtl
fcomip
xchg
ss
xchg
adc
xlat
push
mov
and
loope
enterw
mov
or
xchg
xchg
jmp
add
shlb
int
in
adc
sti
dec
mov
mov
or
add
jge
inc
lods
add
sti
push
mov
mov
popf
or
or
int3
pop
fadds
jbe
mov
push
jle
add
aaa
jg
cmp
inc
daa
add
pusha
cs
xchg
pop
and
in
andl
push
ret
mov
daa
dec
in
into
sub
mov
pop
addr16
dec
mov
sub
pop
cmp
mov
pop
daa
andl
scas
cmp
push
rorb
out
das
mov
dec
or
sub
sbb
popf
push
out
sbb
cmpsb
xor
mov
push
repnz
fwait
cmp
xor
je
es
mov
lods
add
mov
lcall
or
adc
cs
shlb
repnz
outsl
mov
movsb
mov
xchg
pop
jl
enter
addr16
data16
jb
imul
push
lea
mov
push
std
adc
mov
xchg
sbb
jb
mov
xlat
sub
pop
arpl
stc
xchg
int
imul
inc
lahf
xchg
in
push
les
push
ret
sbb
and
fsubl
xchg
and
pop
incl
pop
scas
pop
fucom
adc
or
test
and
pop
test
jecxz
inc
icebp
pusha
mov
lcall
hlt
adc
iret
aaa
pop
xor
out
push
dec
mov
lret
test
out
inc
loopne
subb
add
pushf
ret
and
push
jae
dec
scas
mov
lret
call
in
add
cmpsl
stos
fidivs
add
mov
inc
jno
xchg
nop
push
add
lods
push
dec
les
rolb
test
dec
push
mov
xlat
out
sub
ljmp
pushf
sarb
mul
out
mov
xchg
sbb
jnp
lcall
or
cwtl
fwait
imul
add
push
scas
repnz
loope
sar
sbb
sti
cld
hlt
mov
gs
jmp
pop
inc
mov
inc
movsl
mov
pop
movsb
hlt
mov
cli
push
js
mov
call
int
push
gs
aas
shrb
dec
sbb
xchg
xchg
push
adc
inc
jp
cmp
arpl
fwait
cmp
dec
int3
or
js
pop
fisttpll
xor
jp
push
pop
xor
push
mov
fnstsw
xchg
or
cmpsb
jae
cmp
aas
xchg
cmc
lods
dec
in
adc
bound
add
repz
dec
mov
add
daa
test
mov
fprem1
outsl
sbb
in
xchg
pop
fsubrl
inc
fs
je
fwait
stos
mov
ret
mov
push
sarb
enter
pop
lcall
xor
insl
cmp
imul
mov
repnz
cwtl
pop
call
ljmp
loop
lods
fs
fwait
sub
xor
push
ds
adc
lods
jns
je
mov
jp
stos
xor
mov
adcb
fwait
outsb
add
pop
das
add
es
xchg
jecxz
jg
and
cmp
jns
lret
adcl
aas
mov
call
out
int
adc
add
and
or
or
jae
sub
xor
insb
mov
notl
pop
addb
xchg
push
test
sub
push
push
fwait
test
inc
popa
push
aad
shlb
lret
test
nop
adc
xchg
cld
imul
ds
mov
push
imul
fs
sti
js
dec
out
lea
js
adc
dec
gs
div
pop
jnp
pop
in
xor
pusha
into
cmp
addr16
jb
or
mov
pusha
mov
pop
jno
fisttpl
mov
sub
mov
cmpsl
sbb
adc
cwtl
xchg
nop
cmp
cmc
insl
mov
jmp
dec
mov
or
push
push
fiadds
shl
add
mov
xor
repz
mov
stc
fwait
out
inc
mov
mov
inc
and
cmp
mov
ficoml
inc
jne
fldenv
cmpsb
xchg
clc
es
mov
add
in
outsb
push
xor
out
xchg
rolb
add
int3
pusha
sub
je
ret
in
inc
mov
mov
in
cld
xchg
shl
lret
pop
imull
pop
movsb
adc
cmp
clc
mov
data16
mov
int
into
nop
jo
mov
adc
push
add
mov
ret
test
add
push
and
negl
mov
fbstp
jecxz
pop
fisubl
sub
jnp
leave
in
mov
scas
outsl
mov
sahf
insl
mov
mov
fcoml
cs
sub
pop
test
fcompl
notl
lret
movsb
gs
push
fs
into
inc
fcomp
mov
std
or
int
stc
lret
and
test
rolb
pop
jne,pt
icebp
push
add
jo
xor
das
or
orb
dec
adc
test
insb
out
mov
xchg
fimull
inc
sbb
inc
push
mov
jecxz
out
inc
pop
cwtl
fidivrs
les
fstpt
cwtl
or
stos
out
ss
add
jb
push
scas
add
mov
negb
divl
dec
jae
xlat
and
push
outsl
push
aaa
popf
andb
and
mov
jne
cli
jb
cmc
xor
sbb
loope
inc
xchg
pop
sbb
cmp
das
xchg
dec
ljmp
out
fbstp
lds
lret
mov
sub
in
mov
cmp
jmp
pop
jo
sti
push
sub
mov
xchg
add
iret
sbb
pop
in
cwtl
dec
cmp
movsl
xchg
and
or
shrl
inc
mov
push
jg
add
xor
insl
fcompl
jge
cwtl
mov
popa
es
fst
out
add
fldl
mov
sbb
jnp
cmp
insl
push
into
out
dec
cli
add
inc
or
xor
sub
jns
pop
sub
inc
inc
ror
prefetchw
or
dec
adc
pop
in
jnp
cld
sbb
mov
dec
les
lods
mov
inc
fimull
jnp
push
pop
mov
outsb
jnp
pushf
je
scas
imul
pop
test
and
and
pop
cli
pop
mov
jne
pushf
jno
mov
enterw
mov
push
cmp
stos
sbb
fistps
iret
xchg
push
int
ja
sti
lods
pop
dec
mov
mov
mov
sbb
clc
in
pop
bound
add
inc
roll
cld
int3
aad
js
sub
flds
fs
std
scas
loop
into
cmp
jnp
test
adc
sbb
adc
add
or
stos
inc
mov
nop
lods
stos
xchg
fidivs
pop
pop
cmp
inc
mov
jnp
mov
out
add
mov
cs
leave
inc
insl
adc
imul
cmpb
mov
outsl
or
or
mov
lahf
xor
push
lea
mov
cmpsl
or
mov
ror
and
xor
leave
xlat
subl
cmp
xchg
and
mov
sbb
dec
enter
in
dec
adc
not
jl
test
dec
dec
xlat
jmp
xor
jp
int3
mov
loope
add
loope
xchg
pop
inc
lea
push
ficoml
sub
test
cmpsb
cmp
imul
bound
mov
loopne
inc
xchg
notb
ja
add
ret
cmp
adc
divl
jo
mov
jl
adc
dec
lea
pop
pop
ret
fidivrs
pop
cld
pop
stc
in
or
mov
subb
out
aam
in
xor
xchg
aaa
xchg
dec
jo
lods
inc
jmp
fsts
jns
cmp
push
cli
mov
mov
ljmp
xor
ret
leave
mov
or
int3
push
and
lret
cli
push
pop
xchg
lea
test
stos
pop
add
shl
or
scas
jl
xchg
out
ret
xchg
jge
and
mov
js
popa
xor
jbe
pop
inc
push
cwtl
dec
pop
ss
cwtl
cs
lret
xor
lds
fdivrl
inc
jbe
out
lea
pop
cmp
pusha
inc
jecxz
das
pop
or
fdivl
mov
xor
divl
jb
ss
adc
push
dec
lret
inc
sub
fwait
adc
out
xchg
jg
pop
jnp
jg
rolb
mov
mov
ss
inc
in
and
xchg
test
outsb
lret
fldt
lods
push
jae
mov
push
mov
mov
xor
adc
rcrb
jg
mov
lods
lret
into
mov
add
adc
jno
sbb
loope
pushf
mov
push
or
jnp
inc
jno
popf
jmp
icebp
das
jae
int
push
enter
stos
in
xor
mov
or
pushf
pop
pushf
loopne
and
fwait
pop
jg
pop
xor
xchg
sub
sbb
cmc
push
sbb
push
cmp
std
arpl
dec
jp
push
std
ret
and
test
shll
lahf
dec
out
xorl
test
mov
xchg
cmp
mov
lret
enter
arpl
shlb
arpl
repnz
sbb
fbstp
xor
mov
lds
hlt
inc
inc
lahf
add
sahf
imul
mov
jmp
xchg
mov
lods
mov
sbb
adc
enter
scas
imul
jmp
fstl
pop
add
add
add
adc
loope
test
subb
cmc
push
cld
inc
ja
loop
cmp
adc
mov
out
or
dec
repz
and
jno
jp
fwait
mov
int
les
inc
push
mov
das
fsubs
cmp
fstpl
das
inc
outsb
jle
pop
dec
mov
pop
sub
xchg
shr
cmp
xor
cld
es
and
xchg
jo
mov
inc
or
sbbl
xor
mov
xchg
ror
stos
add
aad
cmp
inc
aam
shll
stos
jge
andl
mov
es
jg
dec
cmpb
andl
mov
sahf
pop
xor
imul
pop
aaa
jnp
fldenv
mov
sub
cmp
mov
xor
sub
sbb
jecxz
sub
cmp
out
xor
inc
and
cmp
cmp
cmp
fwait
ret
mov
lret
arpl
or
mov
lock
sub
mov
mov
mov
out
or
shrl
add
fsubrs
in
int
out
movl
mov
dec
iret
nop
popa
mov
ret
fisubs
ds
fwait
gs
scas
fmuls
and
mov
ds
cmpsb
jns
add
mov
pop
fstpl
mov
xchg
push
push
pop
dec
fnstenv
mov
dec
jge
call
lods
xor
insb
daa
hlt
push
mov
into
lret
add
pusha
xlat
mov
cmc
outsl
pop
and
xchg
cli
jnp
stc
mov
bound
pop
out
adc
xchg
adc
add
stos
jb
inc
shrb
push
mov
add
leave
dec
xor
repnz
dec
pop
rol
mov
gs
sahf
pop
fnstcw
mov
cmc
cmc
cmpsl
ds
adcl
imul
cwtl
iret
mov
push
in
xor
insl
xchg
lret
add
mov
outsl
subl
add
jg
add
mov
pop
add
mov
ret
clc
and
push
sbb
jge
cltd
xchg
sbb
out
mov
cmp
sti
sub
data16
jns
pop
fcoml
adc
scas
aaa
add
mov
cli
dec
xor
nop
adc
dec
cmp
lret
xchg
xor
jbe
sub
push
divl
fists
xor
loop
jns
inc
mov
nop
daa
rcl
cmp
push
test
int
push
outsb
push
cmp
loop
es
les
push
into
fisttpl
faddp
clc
push
inc
loope
lds
jo
mov
jnp
inc
mov
js
inc
mov
daa
and
out
loope
pop
int
xchg
movsl
repz
lahf
mov
mov
xor
fsub
je
mov
lods
push
lea
stos
pop
dec
sti
cmp
test
ror
xchg
push
icebp
mov
add
imul
pop
movsl
ds
xchg
mov
jns
sbb
mov
sbb
inc
jg
jb
test
jno
or
xorl
inc
test
mov
jae
jge
mov
les
mov
cltd
cmp
lret
sbb
push
fsts
and
cmp
pop
jge
ja
clc
mov
lret
into
insl
pop
incb
or
and
push
adc
bound
sbb
icebp
or
fiadds
subb
push
pop
xchg
loop
mov
xlat
and
jo
mov
imull
lock
adc
ds
aad
nop
sbb
adc
xorb
xchg
nop
or
jmp
adc
push
adc
aaa
push
or
pop
pop
ljmp
gs
lds
pop
xorl
and
dec
inc
add
inc
testl
sub
dec
jae
rol
adc
mov
xchg
mov
lods
hlt
xchg
adc
push
push
jnp
xchg
dec
cmp
xchg
cmc
mov
mov
inc
pushf
mov
int
xchg
mov
or
out
shl
mov
je
cmpsl
movsb
imul
call
pop
xor
jl
call
xchg
or
pop
xchg
sarb
outsl
push
or
pop
jns
lock
push
ds
mov
outsb
xchg
fsubr
ss
int3
push
mov
js
adc
push
cmp
insl
mov
dec
lret
repz
stc
mov
mov
and
dec
in
fistpll
test
xchg
sub
xor
cld
int
mov
outsb
add
xchg
dec
shlb
shld
sub
test
jo
ljmp
rcrb
push
test
mov
insl
int3
in
jne
jg
repnz
iret
xor
mov
test
imul
xchg
or
jns
leave
pxor
idivl
xor
out
mov
or
jnp
cmpb
std
or
sti
out
inc
lock
jecxz
cltd
xor
xchg
stc
or
fwait
ja
cwtl
jle
adc
cmc
cmp
pop
fwait
pop
in
and
mov
dec
push
nop
xchg
push
neg
xchg
and
jnp
xor
fimuls
push
js
jge
pop
in
loopne
test
scas
xchg
xor
lret
mov
sbb
xchg
imul
mov
adc
lret
imul
push
push
pop
out
addr16
cmpsb
ja
xchg
inc
mov
mov
daa
sahf
jne
shlb
into
scas
ret
mov
xor
fcmovu
aas
sub
dec
outsl
sbb
cld
push
addr16
mov
push
movsl
add
pop
adc
adc
xchg
fbld
xor
daa
sbb
aam
test
add
mov
sarb
pop
mov
cwtl
pop
inc
repz
pop
xchg
sub
xlat
jb
daa
aad
sub
mov
mov
cmpb
movsl
repz
push
pop
sbb
dec
mov
repnz
mov
test
adc
rol
push
pop
loopne
loop
mov
aad
lret
xlat
mov
dec
or
inc
xchg
sahf
mulb
mov
aam
jmp
fdivs
sarb
jle
and
push
pop
xchg
stos
mov
jbe
adc
pop
mov
and
mov
mov
neg
push
cmp
sbb
or
pop
pop
adc
dec
mov
lret
test
test
xchg
add
dec
add
enter
call
and
xchg
jl
jp
dec
or
jle
xor
movl
and
mov
ror
adc
testb
scas
inc
mov
jl
cmp
loop
dec
cmp
jl
jle
cmc
xchg
test
out
cmp
lods
rcr
pop
mov
jb
popa
add
adc
fwait
outsb
or
add
add
cmpsl
or
xor
pop
xlat
mov
stos
cmc
sbb
lret
xchg
fwait
jecxz
ret
push
rclb
inc
pop
das
or
jae
hlt
sub
mov
rorb
push
push
cmp
xor
shrb
pusha
mov
aam
loopne
fs
decb
xchg
cmc
sahf
xchg
and
adc
je
imul
add
outsl
jnp
je
mov
outsb
sbb
ficoms
mov
inc
jns
jo
or
cs
je
out
popf
sahf
ret
or
popa
lret
mov
fildll
dec
jae
pop
dec
je
fistpll
mov
popf
or
or
mov
mov
js
mov
mov
jp
lods
xor
dec
test
lods
in
jo
pop
push
call
jae
imul
fistps
clc
popf
outsl
daa
add
fwait
push
cmp
cmpsb
lea
lret
cmc
dec
sub
mov
loopne
lahf
test
outsb
cwtl
ja
scas
lcall
cmpsl
test
push
sub
aam
out
rclb
movsb
inc
push
adc
je
mov
lret
insl
xchg
iret
xchg
pop
gs
fmulp
shlb
mov
mov
and
ja
arpl
jb
inc
mov
inc
test
stos
ret
cmp
out
insb
push
fistpll
jae
push
mov
adc
scas
fidivrs
push
jp
mov
cmp
add
cmp
sbb
scas
and
pusha
add
orl
push
push
xchg
inc
pop
pop
push
shl
ret
xor
adc
mov
mov
dec
popa
out
sub
lahf
push
jle
jns
in
cmp
ljmp
fisubrs
cs
dec
ja
cmp
testb
cld
mov
jno
aad
mov
pop
push
lahf
cltd
aas
push
xchg
mov
dec
cmpsb
inc
push
cmp
cmp
xchg
loope
notl
cli
inc
inc
fldt
xchg
cmp
mov
inc
popa
call
jns
leave
mov
sahf
inc
int
mov
loopne
xor
and
jp
in
lods
addb
mov
dec
lcall
mov
into
xchg
pop
mov
scas
inc
addr16
mov
sub
or
xor
mov
sub
loopne
rcll
xorb
das
daa
scas
andb
jl
mov
add
inc
push
sub
jne
pusha
add
mov
es
arpl
lret
ja
enter
in
lods
xor
xchg
iret
mov
clc
xchg
sub
mov
insl
mov
dec
std
mov
divb
pop
and
adc
or
inc
mov
ljmp
movsb
or
pop
out
notb
sbb
xchg
jb
or
add
jmp
inc
sbb
arpl
aas
clc
out
jg
in
notb
mov
jns
in
movsl
push
popa
insb
hlt
cmpsl
int
jnp
fs
ljmp
shll
inc
xchg
or
jmp
and
lret
mov
pushl
add
fldcw
mov
outsl
mov
mov
out
dec
sub
pop
inc
cmc
mov
js
xchg
pop
sbb
outsb
xchg
imul
movsl
icebp
sub
lret
jne
test
xor
jmp
or
mov
add
jmp
xchg
or
sub
jecxz
outsb
es
gs
xchg
adc
mov
test
push
outsb
test
loop
sahf
cmp
arpl
aaa
mov
rcl
mov
dec
pusha
fcoms
adc
xchg
popa
hlt
dec
xor
out
shll
dec
cld
cld
mov
dec
sub
es
mov
push
sub
add
flds
adc
xchg
les
xor
add
cmp
pop
jp
scas
adc
jecxz
aas
push
sub
daa
push
xchg
push
dec
jne
push
pushf
lahf
add
or
adc
mov
in
xor
inc
sub
call
jmp
test
ds
sahf
lods
sub
push
or
push
cmpl
dec
cmp
adc
mov
and
xor
xlat
jo
add
faddl
mov
sub
mov
mov
loope
imull
xchg
push
xchg
jle
xchg
cs
dec
sub
add
adc
clc
inc
adc
inc
push
leave
jle
lods
sbb
jne
or
gs
mov
mov
pop
dec
sti
inc
insl
mov
pop
adc
mov
fwait
mov
dec
shlb
push
mov
testl
adc
aam
push
or
push
stos
and
pop
add
pop
add
adc
in
aaa
inc
dec
and
aas
dec
cmp
je
divl
jge
mov
push
dec
mov
pop
mov
mov
adcb
or
inc
aaa
bound
scas
pop
fisubrl
cmp
lds
xadd
jae
pop
ljmp
into
negb
jge
xor
sbb
xchg
ret
push
mov
lgdtl
pop
xchg
sub
xchg
push
or
scas
adc
bound
loopne
lods
push
inc
pop
sub
fsubrp
cmp
fs
mov
shr
mov
xchg
jae
data16
xlat
cmp
scas
adc
sbb
mov
dec
mov
test
mov
sbb
nop
and
aam
aaa
scas
fbld
test
fmul
in
mov
ja
lahf
push
jne
outsb
pop
repz
shll
xchg
mov
bound
xorl
insb
mov
sub
ljmp
es
fidivrs
push
mov
popa
inc
ret
repnz
mov
adc
inc
icebp
scas
loopne
in
and
sti
jnp
sahf
pop
ss
jo
adc
mov
lcall
and
or
jbe
fdivs
popa
cmp
mov
les
std
test
xor
mov
jg
jecxz
and
rcrl
xchg
mov
mov
push
inc
jbe
push
xchg
orb
lret
pop
pop
stos
add
lds
in
out
loop
jo
add
in
mov
scas
out
pop
pushf
mov
jne
sub
int
jns
lods
nop
lods
mov
fs
pushf
inc
in
hlt
lods
fists
loop
lods
cmp
mov
in
mov
test
jns
mov
mov
hlt
push
les
hlt
jne
sbbl
stc
fwait
inc
scas
sbb
or
cmpsb
cli
sub
in
mov
repnz
fstl
jge
nop
push
mov
xor
shl
lock
xchg
push
push
ja
sti
push
or
inc
xor
sbb
push
or
shufps
cmp
fs
add
stos
fs
subl
imul
mov
and
cmp
aam
push
loopne
adc
lods
imul
mov
and
cmpsb
push
lcall
mov
adc
cmp
add
xor
mov
adc
mov
pop
jmp
cmp
add
add
mov
add
or
imul
cmpsl
imul
into
cmp
mov
pop
jle
mov
out
enter
cmp
mov
lods
push
jmp
jp
inc
jno
cmp
dec
xor
adc
push
jl
xor
rcrl
xchg
and
jmp
sbb
or
bound
adc
mov
cmp
xchg
js
pop
mov
fldcw
out
pushf
dec
or
stos
push
dec
movsb
cmp
push
js
jbe
out
fs
adc
arpl
sub
cmp
add
mov
jo
sub
int
add
or
in
aas
aad
fchs
sub
mov
mov
push
ja
sti
das
push
mov
dec
pop
adc
mov
jbe
je
sub
data16
xchg
push
xor
shlb
dec
add
mov
adc
cmp
pop
popa
arpl
repnz
mov
xlat
mov
mov
imul
imul
push
and
cmpb
mov
divps
adc
xlat
cmpsl
stos
test
adc
inc
pop
pop
cmc
cmp
in
xchg
out
mov
mov
stc
cmpsl
mov
ljmp
pop
rcr
inc
dec
push
push
lcall
adc
shll
scas
insb
xchg
ljmp
dec
pop
sub
lock
mov
and
jo
or
pop
inc
aad
ret
je
icebp
gs
jo
dec
mov
push
dec
cmp
test
or
es
jno
fnsave
sahf
jo
cmp
jne
arpl
dec
or
stos
jns
jge
mov
leave
push
pop
inc
inc
rorl
jno
jle
imul
sbb
mov
out
sbb
push
mov
mov
lea
ds
jnp
push
xor
push
mov
popf
fs
enter
inc
sbb
outsb
adc
je
pop
lods
jno
mov
cmp
or
jmp
jo
mov
in
negb
lret
sbb
lods
mov
les
cmp
ja
cmp
dec
adc
popf
mov
mov
mov
jbe
stos
mov
loope
lods
adc
or
sbb
ss
insl
or
lock
jae
pushw
push
push
push
cmp
addr16
xchg
adc
xlat
lds
loop
push
addl
pop
xchg
push
mov
mov
test
and
vmovsldup
adc
xor
imul
xchg
dec
fs
xchg
sub
adc
les
fbstp
lahf
jo
push
cmp
insb
fcompl
insb
dec
mov
pop
imul
xor
cmp
push
outsl
push
add
adc
movlps
iret
movsl
dec
jne
imul
lret
iret
mov
sbb
jl
pop
fldenv
pushf
scas
push
mov
lods
jg
xchg
das
daa
sarl
or
js
cmp
outsl
push
dec
sbb
pop
cmpsb
inc
jo
cs
enter
push
pop
les
test
push
dec
cltd
cld
in
es
aas
inc
filds
jnp
jno
icebp
lods
mov
in
imul
rcrl
cmp
cs
hlt
sbb
dec
in
mov
sbb
ret
nop
roll
inc
in
in
inc
add
xchg
lea
cld
and
aad
lret
dec
jg
cltd
imul
imul
jecxz
cli
pop
fcmovnbe
cs
movsl
stos
lock
inc
jo
movsl
insl
pop
ret
call
mov
rcll
adc
nop
cld
mov
aad
xchg
mov
leave
test
cmp
xor
mull
fwait
sbb
insb
movsl
push
pusha
ret
mov
push
mov
xchg
sub
and
pop
jae
inc
jnp
inc
mov
sbb
xlat
sub
popf
frstor
inc
and
fbld
xor
sbb
int3
loope
or
xor
or
xchg
xor
dec
fcoml
jle
mov
add
and
mov
imul
cmp
mov
sarl
and
sub
jge
icebp
out
push
lods
ds
mov
cli
or
pop
xor
jno
es
es
inc
aas
sub
mov
pop
mov
int3
xor
aad
pop
mov
inc
or
out
xchg
gs
loop
loope
ret
mov
inc
dec
jp
cmpsb
repz
stos
bound
fwait
mov
mov
scas
in
pop
jae
jmp
mov
mov
lock
arpl
push
scas
pop
pop
lcall
push
repz
xor
push
imul
push
push
xor
pop
cmc
mov
push
mov
jo
mov
add
xor
inc
idivb
inc
mov
mov
mov
shlb
mov
jae
push
hlt
arpl
add
mov
pop
jno
sub
jp
adc
lock
pop
stos
mov
mov
leave
fisttps
test
push
mov
push
or
and
dec
stc
jnp
push
popa
jp
jns
dec
stos
jmp
scas
add
data16
mov
pop
pop
mov
ds
sub
pop
push
jg
mov
sar
and
xor
in
sti
jne
or
mov
push
add
sbb
mov
xlat
adc
inc
orps
jecxz
insb
jno
movsl
lcall
roll
xor
mov
push
cmp
in
imul
sbb
push
and
jl
jecxz
dec
fmul
sbb
jae
shlb
add
sbb
xor
iret
les
int3
movsb
sbb
mov
xchg
dec
daa
sahf
and
cmc
ffreep
add
and
or
dec
data16
sub
add
lock
pop
mov
sahf
jp
cltd
mov
test
incl
inc
adc
pop
cmc
pop
mov
cli
push
les
mov
insb
popf
jg
mov
or
test
mov
jnp
pop
mov
insb
and
inc
cmp
in
mov
pop
les
pop
jno
aam
pop
inc
inc
xor
lods
dec
scas
and
aad
and
push
pop
sub
out
dec
aas
scas
cld
pop
add
lock
xor
outsl
push
sarb
mov
sub
or
inc
xchg
adc
je
mov
inc
sbb
and
xor
push
mov
mov
inc
mov
js
cmpsl
sahf
jnp
adc
das
sub
cld
rorl
mov
nop
mov
push
rorl
mov
push
mov
mov
or
out
imul
pop
lods
nop
pop
das
int3
ret
mov
cs
jg
int3
fs
mov
mov
and
icebp
mov
pop
out
pop
popf
aas
loopne
outsl
xchg
jnp
mov
scas
stos
inc
loope
dec
xchg
dec
xchg
inc
arpl
push
mov
jbe
sbb
dec
imul
push
bound
or
xchg
arpl
outsb
stc
pop
lcall
decl
jge
mov
outsl
popa
sbb
xchg
xchg
repz
aam
dec
fs
scas
pop
icebp
add
sub
adc
cs
dec
mov
jg
clc
out
adc
xchg
ljmp
inc
daa
push
fmuls
mov
jecxz
xchg
fnstenv
pop
ss
mov
mov
xor
into
loop
cmp
rcr
sbb
mov
pushf
inc
sub
repnz
out
xchg
stos
cli
cmp
or
pop
pusha
cmp
push
fcomip
and
push
add
dec
ja
pop
jb
cmp
gs
shll
jp
pop
or
ja
out
mov
je
lret
cmp
adc
and
outsb
mov
inc
pop
push
in
adc
sbb
mov
sarl
shl
or
xchg
cld
and
push
fsubrl
aaa
pop
ja
add
ljmp
js
aad
xor
lods
loop
test
out
cld
ljmp
dec
stos
and
add
jae
mov
dec
sbb
lods
sbbl
imul
xchg
mov
xchg
push
dec
lcall
ret
nop
andl
lods
cmp
jmp
or
out
into
inc
sbb
mov
pop
jnp
xchg
les
rorl
call
repnz
imul
mov
cmp
pop
xor
loope
xchg
inc
cmp
adc
loope
xor
jecxz
test
jg
in
loopne
dec
lret
and
fisubrl
cmpsl
fld
loopne
xchg
inc
insb
mov
fistl
loop
xor
nop
int
fiaddl
insb
in
pop
sbb
addl
adc
sbb
lcall
jl
femms
fldcw
xchg
bound
jno
gs
jle
sub
adc
out
aad
jl
add
sub
or
sub
mov
addb
or
mov
mov
movsl
lahf
xchg
push
mov
jno
jbe
and
push
xchg
loop
mov
fs
sbb
jne
cmp
std
out
push
arpl
mov
clc
lock
cmp
loope
icebp
out
sbb
daa
xor
clc
lahf
ret
enter
icebp
xor
xchg
test
inc
aaa
or
sub
out
dec
dec
mov
mov
inc
loopne
ss
pop
adc
lods
mov
jp
cwtl
push
fstpt
out
xor
xor
fistl
pop
dec
push
jge
inc
xlat
cwtl
xor
addr16
sbb
call
push
scas
mov
testl
rol
andl
or
xchg
das
arpl
rolb
adc
adc
pusha
test
mov
ljmp
or
js
and
adc
mov
or
outsl
add
loopne
clc
pop
outsl
pop
push
inc
sti
jae
mov
mov
aam
mov
insl
ljmp
mov
pop
jbe
push
cmp
or
mov
cs
rol
or
cmp
mov
or
mov
jg
fisubs
xlat
test
mov
std
insb
and
std
inc
mov
mov
pop
pop
jle
jecxz
repz
fcomps
out
movsb
add
push
xchg
ds
push
daa
jecxz
mov
and
cmp
rclb
les
outsb
mov
mov
test
shlb
cmp
push
mov
lods
xor
mov
jge
pusha
aad
das
xor
cmc
bound
pushl
fisubrl
mov
rorb
js
out
loopne
sub
mov
ljmp
mov
and
fnstsw
hlt
lahf
test
insl
adc
stos
and
int3
aad
push
xlat
addr16
add
or
lods
cmp
xchg
push
push
dec
test
push
lea
in
or
loop
push
stc
xchg
jl
gs
push
in
xchg
mov
xor
cli
jecxz
sbb
cmpl
lods
shlb
pop
push
add
icebp
insl
bound
cltd
or
loop
loop
enter
jg
fsub
lock
movsb
mov
push
jnp
dec
shrl
scas
in
and
cltd
mov
jge
addr16
shlb
data16
andl
ljmp
cmp
lret
loope
mov
daa
pop
enter
orl
jnp
mov
bound
clc
cli
inc
mov
mov
or
out
mov
icebp
add
rorl
icebp
mov
imull
lahf
es
fwait
xchg
pop
leave
push
icebp
fcmovbe
fsub
ror
daa
jmp
dec
inc
pop
or
call
jge
xchg
je
mov
andl
aad
inc
mov
dec
cld
incb
push
cmp
push
mov
push
pop
sbb
xor
lret
in
adc
sbb
inc
fwait
xchg
lods
ljmp
push
loop
jns
fwait
lret
loope
jo
int
jl
sbb
xor
iret
mov
fs
stc
or
daa
push
pop
mov
xchg
add
sbb
mov
fbstp
push
test
jp
mov
mov
outsb
pop
pop
mov
int3
sub
or
outsl
or
cwtl
adc
inc
push
xor
cli
cmpsb
sub
popa
xchg
inc
fcmovb
jl
shrl
jns
push
push
dec
add
jo
mov
fsubrs
xchg
cmp
push
inc
call
lods
jno
xor
pop
pop
push
dec
fmull
data16
gs
fiadds
scas
pushf
dec
mov
bound
sbb
xlat
sbb
mov
xchg
xchg
sub
sti
gs
femms
adc
fwait
xchg
das
mov
inc
mov
push
dec
stc
gs
jae
jle
int
jno
mov
or
test
inc
pop
out
stc
cli
outsb
aam
aad
jns
lret
pop
adc
das
jo
lds
lock
jmp
sbb
pop
scas
adc
sub
es
nop
inc
hlt
xchg
mov
or
data16
inc
pop
adc
and
int3
xchg
hlt
pop
std
push
mov
xlat
dec
jno
int3
cmp
aas
in
pop
inc
mov
mov
mov
add
mov
out
mov
inc
es
xchg
jecxz
sbb
out
mov
out
into
leave
pusha
test
cmp
cmc
xor
jmp
add
idiv
addr16
sbb
mov
js
adc
inc
mov
xchg
mov
sbb
pop
cmp
mov
inc
icebp
cmp
mov
aaa
mov
xor
test
jnp
aam
cmp
testb
gs
mov
iret
mov
mov
sub
test
sub
sub
pusha
call
push
leave
pop
push
bound
popa
mov
mov
add
out
pusha
fnstenv
jnp
add
fcomip
in
push
or
stos
outsb
adc
movsb
push
mov
push
pop
aaa
popf
andl
or
fsubl
test
cmpsl
adc
js
es
ret
cs
out
leave
cmp
xchg
imul
jecxz
jno
ficoml
jecxz
data16
mov
or
int
pop
mov
or
and
xor
push
out
cld
jecxz
or
inc
and
and
inc
xchg
mov
mov
mov
add
add
mov
data16
add
push
fidivl
jo
sub
jns
mov
imul
dec
add
inc
xchg
push
les
cld
loopne
insb
pop
push
pop
cmp
test
jne
pushl
jmp
insb
call
fmuls
out
cmpsl
mov
mov
push
mov
sahf
leave
lret
dec
mov
fsub
push
std
jno
fidivrl
push
dec
test
ret
mov
icebp
mov
in
mov
testb
mov
xchg
dec
add
sahf
sub
fstps
push
aam
jmp
push
sahf
push
fldl
jae
add
mov
scas
ds
mov
divl
cmp
jb
push
orl
jmp
and
test
rolb
push
hlt
test
or
push
add
add
jo
not
lds
dec
outsl
arpl
xor
fsubl
imul
and
pop
out
mov
xchg
mov
out
dec
mov
int
ret
movsl
xchg
add
addr16
loope
pop
cmc
enter
rol
inc
aas
pop
cmp
mov
popa
xchg
enter
and
loop
xor
xchg
mov
fists
aad
inc
rcrl
add
movsl
int3
fiaddl
fstpl
aam
cli
std
lea
mov
jbe
pop
adc
adc
mov
outsl
ret
mov
addl
mov
xchg
out
loop
pop
loope
cmp
pop
mov
shl
out
gs
xor
loop
cli
insb
popa
fbstp
dec
push
mov
adc
jp
push
sar
push
mov
cmpsl
sbb
jno
ret
pop
dec
lods
dec
loopne
mov
addr16
push
inc
aas
hlt
adc
push
loopne
movsl
jae
xor
mov
shlb
loope
imul
mov
add
stos
sbb
ficompl
pop
pop
adc
mov
mov
imul
insl
inc
test
mov
loopne
test
mov
sbb
leave
cmp
out
ds
mov
nop
lock
data16
in
sub
imul
je
add
mov
mov
sbb
jp
dec
mov
cli
pusha
cmp
xor
mov
mov
pop
adc
ror
sti
sub
sbb
jecxz
call
push
xor
mov
push
mov
mov
leave
ds
fdivrs
mov
rcll
cmpsb
int3
pop
movsl
gs
jb
jle
push
scas
lea
mull
xchg
inc
or
lds
lds
mov
cmp
shrl
and
mov
aaa
jmp
cwtl
shlb
in
or
insl
popa
cli
sub
xchg
fwait
popa
mov
xorb
inc
and
push
bound
mov
xchg
loopne
addb
divl
lods
test
xlat
jl
adc
setg
and
pop
xchg
sahf
sub
ss
pop
mov
mov
test
popf
push
cmp
enter
ror
pop
in
inc
add
int
pop
rcrl
push
lea
js
stc
gs
lds
rcr
sub
sub
cwtl
sbb
push
ret
push
pmulhw
bound
xor
or
xchg
in
inc
mov
and
pop
ds
add
aad
ret
xor
stc
fwait
test
push
xchg
xchg
test
mov
repnz
mov
mov
int3
xchg
sub
jno
idivb
push
aam
mov
mov
dec
rorl
push
arpl
sub
add
add
fbld
loope
or
ror
inc
mov
cmp
adc
mov
xchg
das
ror
mov
mov
ja
icebp
jmp
das
js
cmp
sbb
sbb
je
in
insb
push
ja
cmp
pushl
dec
cmp
mov
test
jns
dec
cmpsb
inc
push
mov
aas
imul
xlat
or
arpl
sub
leave
insb
push
add
gs
lods
push
lcall
incb
pop
push
xor
and
adc
jmp
jmp
inc
lods
mov
ljmp
testb
mov
repz
add
repnz
sbb
leave
fidivrl
leave
aad
pop
daa
mov
leave
cmp
addl
sub
pop
and
inc
mov
sub
rolb
mov
push
pop
push
push
negl
fwait
sti
leave
fs
out
mov
out
mov
arpl
push
xchg
lahf
mov
testb
fldcw
or
arpl
dec
push
lds
or
inc
js
and
cld
pop
nop
arpl
pushf
xor
cmpsl
lds
mov
gs
dec
sbb
add
jl
jp
sbb
sub
fcoml
mov
in
add
dec
scas
dec
arpl
push
js
movsl
pop
movsl
pop
dec
mov
mov
movsb
shll
pop
cwtl
or
setbe
imul
scas
adc
ret
inc
mov
or
andb
cmpsb
mov
mov
into
cmp
xchg
xor
out
mov
sub
sti
dec
mov
pusha
movsl
fmul
arpl
or
fadd
push
or
addr16
adc
adc
outsl
dec
jno
push
xor
and
loop
leave
jne
sub
jo
fiaddl
out
loopne
pop
ss
pop
pop
clc
jnp
inc
inc
stos
sarb
imul
jmp
xchg
in
cmpsb
xchg
mov
sub
xorb
sbb
xchg
es
inc
mov
insl
push
mov
dec
rcll
es
pop
pop
cs
pop
repnz
cmp
in
call
cmc
cld
sahf
push
push
sub
mov
jno
xor
frstor
stos
add
and
loope
arpl
lds
pop
mov
sbb
ret
outsb
scas
repz
cmp
insl
jnp
or
xchg
jns
sbb
leave
lods
cmpsl
test
sbb
sbb
xchg
imul
jne
push
mov
lret
xor
pop
pop
les
daa
push
stos
adc
pushf
dec
addr16
lret
outsb
pushf
add
inc
dec
dec
mov
mov
inc
xor
sahf
loope
sub
setns
sub
ljmp
cmp
notb
lret
mov
pop
adc
out
pop
add
loop
addr16
jbe
jecxz
pusha
mov
shl
sub
mov
pop
movsb
pop
das
jns
rclb
jl
and
pop
xor
jnp
xor
jp
in
cmp
scas
testl
je
and
movsb
and
xchg
rcrl
mov
adc
ljmp
push
xchg
mov
push
fdivs
or
add
inc
pop
lds
jb
out
shrl
iret
cs
inc
xor
lret
push
pop
jne
add
xchg
dec
add
pop
or
ljmp
jle
jb
push
fbstp
push
add
mov
loopne
clc
push
push
fildll
mov
mov
mov
sbb
or
mov
mov
mov
lods
xchg
inc
push
sub
movsl
mov
mov
gs
das
ds
hlt
ret
insl
pop
jnp
pushl
sbb
push
xchg
xchg
xlat
jg
pop
loope
jl
dec
adc
push
or
pushf
mov
in
pop
push
ds
push
mov
mov
popa
and
mov
sbb
jnp
dec
xor
mov
fists
sub
mov
xchg
dec
lock
xchg
push
xor
jle
or
daa
xor
das
ficoms
xchg
push
cmp
push
lds
cmc
mov
dec
sbb
sub
test
jnp
insl
and
filds
dec
mov
sub
xor
push
lea
mov
add
pusha
je
test
into
daa
inc
cmpsl
pop
jno
into
adc
mov
lahf
sub
daa
pop
leave
pop
xor
lock
in
jbe
mov
ret
nop
repnz
adc
and
xchg
mov
and
inc
cmp
sbb
or
mov
jle
and
jnp
sub
or
push
loop
mov
push
push
xchg
lods
jge,pn
xor
sub
inc
cmp
and
adc
jmp
aaa
fildll
jno
aas
mov
sub
pushf
loope
pop
adc
push
int
mov
xchg
jmp
hlt
inc
jge
mov
les
imul
loop
pop
je
mov
hlt
ret
dec
mov
inc
adc
and
dec
xor
mov
outsb
or
mov
jmp
frstor
xor
push
pop
cltd
shlb
insb
dec
fnstenv
mov
or
in
jmp
fidivs
in
and
out
sbb
popa
lret
addb
mov
xchg
scas
jae
sbb
pop
push
test
lods
and
sete
fcoms
outsl
movl
shll
addr16
xchg
test
cwtl
test
insl
pushf
pushf
insb
mov
in
fimull
cs
in
sbb
mov
aad
dec
jo
shrl
es
inc
jg
cmp
add
fwait
sbb
mov
sub
iret
inc
lahf
aad
movsl
sub
push
aaa
inc
cmp
cmp
aam
pop
adc
sti
call
jb
in
popa
imul
add
in
pop
and
pushl
fbld
pop
ljmp
xor
xor
or
inc
in
scas
jecxz
xor
push
pop
adc
jbe
std
cmp
cltd
outsl
inc
je
mov
leave
ret
dec
mov
adc
mov
cmp
outsl
lods
jecxz
jns
xchg
jmp
les
std
inc
arpl
sbbb
mov
sbb
xor
mov
xchg
sub
push
nop
add
sahf
push
dec
push
jnp
sbb
out
xlat
mov
out
mov
adc
lds
gs
popa
and
movsb
js
es
cmp
pop
hlt
sub
xchg
xchg
or
mov
sub
or
addr16
cmp
imulb
add
arpl
sbb
mov
test
rcll
pop
jbe
adc
testl
popf
popf
lahf
mov
cli
mov
jmp
std
nop
mov
sub
test
mov
pop
loope
push
cmpsb
sub
dec
mov
ret
lcall
iret
adc
and
lret
cld
js
inc
cmpsb
xor
in
test
fcoms
mov
jno
shl
or
xor
icebp
cltd
cld
bound
mov
jo
mov
inc
adc
mov
pop
push
jle
mov
ss
dec
pop
es
jbe
push
adc
cmp
out
mov
cmpsl
jbe
adc
add
jg
jecxz
jl
jb
inc
inc
ds
xchg
out
mov
or
fwait
repz
xor
iret
shl
es
fimuls
mov
sahf
sub
mov
pop
xor
mov
adc
adc
mov
int3
add
shrl
rcr
hlt
loopne
add
add
loop
lock
inc
clc
sbb
dec
jecxz
fisttps
lcall
sbb
inc
pop
mov
dec
mov
jne
shll
sti
sbb
push
dec
pop
ret
mov
in
cli
repnz
je
add
les
jmp
jl
mov
or
pop
fsubrs
insb
xor
outsl
mov
pop
mov
out
add
jecxz
xor
sbb
adc
rclb
sbb
ss
mov
xor
mov
sub
stos
gs
pop
dec
mov
xchg
leave
inc
cld
cmc
mov
arpl
sbb
push
cmpsb
lret
sbb
inc
push
out
mov
xchg
ret
or
fsubrl
aas
ret
stc
cwtl
inc
mov
jmp
dec
mov
xchg
ja
daa
mov
and
jae
mov
xchg
push
xchg
sub
inc
daa
cmp
push
ja
pop
bound
inc
add
xchg
inc
inc
or
inc
xchg
cmp
loopne
mov
or
mov
pushf
fiaddl
cmp
jae
out
mov
inc
in
push
or
fxam
lcall
jno
imul
inc
leave
xor
cmp
or
movb
lea
pop
push
xchg
xchg
jp
cmp
xor
out
lock
jmp
std
push
ja
xor
push
mov
in
movsb
cmp
std
stc
cmp
inc
xlat
xor
lcall
in
call
inc
iret
sbb
xchg
mov
cmc
inc
cmp
fisubl
xor
shlb
data16
pop
or
jg
fcoms
jmp
jo
ret
popf
push
das
add
stc
xchg
addr16
icebp
in
cld
sub
lods
jecxz
loop
jb
je
mov
xchg
sbb
pop
and
sub
cmp
mov
repnz
xor
repz
pop
push
ret
sbb
dec
mov
out
sub
push
or
pop
stos
jo
mov
or
sub
nop
sbb
leave
adc
cmp
gs
xchg
dec
in
adc
sub
add
movsb
pushf
push
mov
in
test
inc
bound
pop
adc
fsubr
and
jb
orl
pop
insb
push
je
testl
clc
jmp
hlt
out
mov
jge
pop
mov
sbb
sbb
out
test
rorb
loope
dec
inc
test
movsl
xchg
push
pusha
xchg
cmp
cmc
add
adc
in
iret
inc
sbb
outsl
pop
ljmp
xor
jmp
aam
push
jnp
pop
adc
xchg
dec
xchg
jne
xor
jle
inc
mov
stc
push
sbb
cmc
aas
mov
add
push
sarl
in
bound
dec
mov
push
aas
jbe
cmp
insb
clc
mov
mov
iret
pop
sub
shrl
xor
jl
in
xor
adc
or
sahf
mov
arpl
dec
pop
push
aad
cmp
es
in
jmp
or
icebp
mov
cld
test
push
cwtl
mov
outsl
addb
mov
aas
gs
fisttps
dec
jmp
clc
faddl
pop
jg
neg
dec
test
cli
add
add
push
pop
leave
insl
imul
dec
adc
inc
sub
in
xor
jecxz
mov
sbb
mov
stos
cmp
xchg
popf
mov
mov
mov
or
jnp
and
push
aas
cmp
test
orb
mov
and
je
cmc
mov
mov
ja
andl
mov
inc
or
orl
xchg
add
add
lret
lahf
aas
rcrl
fidivl
in
mov
mov
outsb
icebp
fsubl
bound
in
scas
mov
fisubs
fs
cmp
andb
mov
fwait
nop
rolb
and
stos
jae
xchg
jnp,pn
adc
jl
clc
gs
inc
sbb
jp
mov
adc
das
pop
jecxz
out
scas
cmpsl
fadd
xchg
nop
jle
fsubp
sbb
mov
mov
arpl
adc
inc
test
jno
icebp
adc
xchg
mov
and
sti
pop
lock
inc
iret
fbld
or
fcomp
lds
scas
and
sub
insl
xchg
push
or
pusha
rcr
mov
jbe
mov
sub
fsubs
pushf
imul
out
sbb
es
add
add
add
sub
adc
mov
imul
add
cli
ja
or
test
sahf
sahf
dec
aaa
mov
dec
mov
add
and
pop
cs
data16
xor
cld
push
lret
mov
and
or
notb
test
aas
sbb
push
dec
push
sbb
adc
popf
jns
or
aad
lock
xchg
xor
xchg
sbb
out
push
dec
cmp
std
pop
sbb
xlat
xor
ljmp
push
iret
in
shrl
outsb
pop
inc
hlt
inc
mov
add
push
lea
cmpsl
sbb
decb
je
jmp
sahf
std
icebp
cmp
xchg
fisubs
mov
fldt
out
mov
fwait
add
out
addr16
ficoms
mov
push
int
mov
in
push
test
gs
insb
es
fdivs
xor
stos
pushf
xchg
pop
gs
lret
fisttpl
push
sbb
xchg
or
and
rorl
lret
mov
lods
inc
and
push
ret
lods
jnp
insb
cltd
pop
cmc
insl
sbb
push
xchg
scas
int3
fnstenv
lock
sarl
push
mov
xor
fwait
in
movsb
xchg
stos
adc
add
sahf
xor
sahf
sbbl
cmp
movsb
or
cs
inc
fld1
push
mov
adc
insl
stc
pop
or
xchg
inc
sbb
xchg
lods
mov
pop
xchg
je
xchg
jne
out
hlt
lods
outsb
adc
pop
rolb
icebp
pop
rclb
inc
xchg
stc
fcomps
sub
psubusb
jbe
mov
inc
adc
inc
xchg
out
inc
sahf
mov
aad
rcll
jg
jnp
les
and
rcrl
out
inc
adc
fldl
cs
clc
sub
add
inc
add
in
scas
lret
fisubl
adc
xchg
pop
cmp
sahf
or
fucomip
or
orb
or
rorl
test
icebp
fldln2
or
adc
mov
jo
adc
scas
pop
sahf
sub
es
xor
inc
daa
dec
pushf
mov
push
data16
sahf
push
leave
jmp
mov
dec
les
fs
stos
adc
shll
jecxz
lock
adc
cmp
push
add
jnp
lahf
cmova
enter
adc
mov
xchg
shll
xor
sub
push
jmp
pusha
fs
hlt
aam
dec
sub
sarl
pop
scas
pop
call
inc
iret
add
lock
int
ja
out
xchg
movsl
dec
dec
push
xchg
das
sub
movsb
push
rcr
aad
dec
arpl
fsubr
xchg
scas
fcmovnbe
jne
sbb
xor
cmp
jecxz
rol
cmp
inc
hlt
add
sub
leave
lods
imul
jp
push
pop
lods
jmp
inc
sbb
dec
add
loope
int3
sub
sub
xchg
adc
mov
or
and
cmp
mov
inc
push
out
mov
int3
popa
negl
fisttps
push
int3
push
pop
xor
inc
push
mov
push
fucomip
xor
mov
lahf
outsb
shll
mov
fucomi
cmc
cmp
fwait
mov
mov
pop
xchg
dec
push
adc
shll
jle
mov
mov
push
push
cmp
xchg
xor
sbb
pop
pop
mov
fwait
in
aaa
ret
mov
das
xchg
inc
mov
frstor
cmp
adc
out
push
addr16
movsl
mov
cmc
xchg
idivb
xchg
mov
gs
adc
fbstp
daa
pop
dec
adc
mov
add
mov
and
push
pop
test
and
push
dec
stos
jns
shr
movsb
lret
in
scas
jo
out
push
cmp
sub
mov
notl
adc
cld
imul
pop
sahf
xor
lods
jl
push
mov
dec
pop
ljmp
data16
std
pop
push
lods
mov
add
daa
sub
mov
and
sbb
sub
sahf
pop
call
ret
sbb
cli
fildll
rorl
iret
mov
popf
dec
ja
mov
pop
mov
ret
adc
mov
xlat
pop
pop
cs
xchg
cmp
sbb
add
ficoms
lods
clc
push
cld
adc
xlat
and
ucomiss
push
arpl
call
ljmp
and
in
cli
jmp
xchg
mov
inc
lret
aaa
popa
adc
lods
dec
mov
or
xlat
sub
out
mov
lret
movups
shll
dec
testl
into
roll
xchg
cmp
xorb
push
mov
iret
xor
imul
cmp
fisttpl
and
mov
aad
jg
xor
lock
jns
add
add
mov
repnz
out
stc
sbb
sbb
or
stos
or
pop
push
and
repnz
roll
mov
insl
adc
repnz
or
les
sub
test
push
in
int3
movsl
xor
fdivrp
dec
push
cmp
push
aad
mov
adc
mov
xor
and
stc
movsb
sub
mov
stc
es
push
int
push
mov
jbe
xchg
xchg
bsr
xchg
or
push
dec
sbb
xor
out
xchg
pusha
test
inc
out
dec
hlt
loopne
mov
fdiv
mov
insb
jns
out
aad
mov
sub
fbstp
rorl
fsubr
ljmp
inc
loop
cmpsb
repnz
mov
adc
or
jno
pop
clc
inc
mov
fdivl
or
xchg
and
mov
popa
int
call
cmpsb
mov
hlt
dec
adc
ljmp
movsb
aas
add
cmp
das
inc
ss
mov
rcl
adc
xchg
xchg
jnp
inc
insb
mov
jo
std
pop
dec
sub
push
add
mov
mov
jnp
adcl
movsl
xchg
int3
cld
pop
test
mov
into
in
pusha
xor
in
lods
sbbl
jmp
arpl
pushf
divl
inc
out
or
cli
sub
add
jns
jo
pop
shll
mov
mov
testl
push
pop
mov
adc
lret
adc
ficoms
outsl
mov
pop
jbe
xchg
ja
into
pop
and
pop
push
mov
neg
pop
xchg
lret
xchg
or
jle
mov
das
mov
popa
clc
inc
pop
jmp
inc
leave
mov
pusha
mov
test
bound
andb
mov
stc
rsqrtps
and
clc
rorl
lcall
mov
cmp
xor
rcrb
loope
push
lock
mulb
cwtl
subl
push
stos
mov
push
imul
fldenv
leave
mul
add
mov
add
jnp
cmp
mov
push
ret
and
loop
call
lret
bound
xchg
cmp
or
cmp
movsb
enter
push
pusha
repnz
mov
int3
lods
inc
xor
lods
mov
and
outsl
test
daa
jp
xchg
inc
jg
mov
loope
mov
push
inc
mov
mov
outsl
inc
hlt
sbb
jb
pop
sbb
dec
shlb
lods
adc
das
nop
sarb
adc
jle
sahf
stos
daa
into
xor
dec
mov
cmc
ja
lea
mov
and
and
stc
push
into
lock
pop
pop
add
fmul
inc
test
fildl
imul
or
jne
mov
jb
sub
ret
cli
add
mov
add
mov
cmp
clc
push
cmp
fisttpll
int3
sub
jg
outsb
stos
lock
imul
inc
rcl
xchg
xchg
xchg
inc
xchg
and
push
or
push
mov
std
xchg
xor
dec
pop
sti
shll
mov
in
add
in
daa
or
sub
dec
lods
rolb
lods
mov
sbb
lock
lods
bound
and
sahf
adc
fisubrs
imul
jb
or
fisttpll
cmp
or
xchg
xor
jae
dec
and
xchg
ljmp
adc
dec
test
xchg
jae
shrb
pop
or
jecxz
adc
test
cltd
lahf
sub
mov
rcrb
std
sub
jp
adc
mov
fldenv
jecxz
mov
movsl
jbe
stos
inc
test
sub
lock
sub
fs
ja
lahf
mov
pop
dec
int3
popf
dec
inc
repz
fs
pop
ljmp
decb
adc
pop
mov
push
sbb
mov
aas
and
cmp
test
sub
cmp
ljmp
pop
mov
jl
push
dec
jle
mov
call
movsb
data16
sbb
loop
loop
pop
cmp
xchg
into
and
and
dec
mov
sarb
xchg
mov
pop
das
or
cmp
scas
pop
cmp
sti
push
les
sar
push
cmp
test
int3
lock
jg
sbb
xchg
mov
sub
adc
cs
jge
lock
outsb
mov
inc
int3
sbb
xor
bnd
xor
popa
mov
outsb
test
push
in
pop
scas
jge
cmp
lods
mov
das
negb
mov
ljmp
pop
movsb
mov
sub
jo
out
ret
lock
popf
push
and
cwtl
xchg
dec
popf
mov
jo
ds
insl
inc
movsb
push
icebp
mov
repz
cwtl
sub
pop
or
push
cld
cs
sub
push
icebp
fisubs
push
in
jno
sub
ljmp
add
xchg
jae
fidivrl
fsubrl
movsb
sub
jl
cmpsb
sahf
sub
shlb
xor
cmp
outsl
outsl
mov
cmpsl
insb
cmp
fiaddl
push
insb
sbb
dec
repnz
rcl
mov
leave
pop
cmp
or
add
popf
ret
pop
es
and
cmp
xor
shlb
iret
or
sahf
insb
jne
mov
xor
cmc
in
push
rorb
sbb
and
hlt
jno
stos
mov
icebp
sarl
mov
rcl
pop
ret
and
pop
movsl
jns
in
test
mul
ds
jae
popa
inc
fs
pop
pop
shll
jmp
push
fwait
popf
inc
mov
push
stc
out
pop
push
cmp
xor
mov
in
xchg
insb
lahf
xchg
shlb
dec
cmpsl
cmpb
call
repz
cltd
popf
or
scas
lock
sbb
mov
and
adc
scas
into
mulb
mov
sub
mov
jl
outsb
xlat
movsb
push
mov
mov
subl
adc
add
rcrb
mov
pop
xchg
dec
lea
adc
adc
adc
cli
ror
ss
dec
loopne
inc
sub
inc
pop
iret
ud2
mov
lret
sbb
scas
adc
cmpsb
out
daa
out
orb
sub
sahf
adc
in
out
test
dec
jp
dec
sbb
mov
adc
mov
xchg
cltd
xor
jb
push
ret
adc
rcr
outsb
stc
xchg
cmpsl
ret
ljmp
scas
add
popf
into
dec
pushf
and
sub
xchg
lds
icebp
sub
add
test
pusha
repz
fwait
jge
inc
xor
ret
dec
pop
cltd
mov
gs
jmp
lods
ret
mov
lock
or
jns
addr16
dec
xor
pop
mov
xor
pop
stos
in
dec
lret
inc
das
cmp
pop
mov
fbstp
inc
adc
sub
and
jnp
ds
ret
and
aam
out
subb
and
sbb
call
cltd
bound
or
inc
aas
fdivrs
cmp
mov
cltd
sbb
sbb
and
repz
sub
jno
pusha
addl
dec
int
inc
arpl
lds
pop
and
mov
ret
inc
xor
or
lret
xchg
pop
fs
push
imul
sti
leave
stos
cld
call
lock
loopne
insl
dec
cwtl
xor
rcrb
sub
push
lock
lret
xchg
jne
leave
cmp
jg
jge
cmp
rcll
xor
clc
js
loope
out
sti
test
mov
mov
ret
pop
jae
pop
push
cmp
popf
and
or
and
adc
lock
push
rorl
or
pop
aam
sub
mov
cmp
nop
idivl
xchg
popl
mov
ss
dec
ds
cmpsb
xor
jmp
jle
insl
xchg
add
cmp
popf
dec
test
mov
arpl
mov
fisttpll
fdivrl
push
jae
mov
xor
mov
or
cmpsb
and
aam
jecxz
or
add
xchg
aad
nop
divl
dec
loop
inc
les
in
repnz
leave
lret
fcmovnb
mov
sub
adc
cli
xor
xor
push
ja
inc
jno
adc
xor
mov
pop
dec
add
cmpsl
loop
fwait
cmp
lret
daa
mov
jb
xchg
call
and
and
ljmp
push
adcl
lea
ret
or
inc
popf
mov
push
push
fcmove
dec
pop
dec
cmp
dec
lock
addb
lods
jmp
es
jb
mov
push
mov
xor
jle
int
leave
lea
cmpsb
mov
jecxz
daa
mov
cmp
mov
std
mov
or
jnp
push
sub
jp
movl
jecxz
mov
sbb
jle
mov
movsb
insl
std
jmp
test
movsb
jne
ds
push
shll
mov
sub
and
lds
aas
mov
rcr
movsl
xor
jne
hlt
jle
jp
loopne
ja
add
pop
gs
push
sbbl
jge
jmp
mov
cmp
and
mov
test
xor
cmp
xchg
ss
adc
lret
stc
cmp
ficoml
test
outsb
pop
dec
and
cmp
pop
imul
or
and
lret
js
aad
rcrb
iret
push
or
pop
jecxz
dec
std
pop
lret
fs
cli
push
scas
hlt
insb
pop
lods
scas
int3
mov
sub
xorl
sub
xchg
mov
mov
mov
cld
sub
fwait
mov
pushf
xchg
adc
out
cmp
jb
xorb
mov
sbb
imul
adc
xchg
pop
adc
cmpsb
fs
rolb
cmp
mov
jmp
aad
pop
xor
sbb
pop
imul
mov
push
mov
ret
in
rol
mov
stos
es
push
fmull
mov
test
push
in
dec
insl
fwait
in
push
cmp
cmpsb
cs
popa
inc
cli
cmc
mov
fcomi
mov
fdivr
pop
sbb
sub
ja
int3
loope
mov
xchg
shlb
dec
xor
mov
jp
mov
sbb
cmp
mov
out
push
add
xor
pop
ljmp
repz
dec
je
sbb
sub
xor
dec
imul
leave
sub
dec
insb
mov
xchg
nop
jge
pushf
pop
cltd
nop
mov
jp
dec
cld
push
xor
gs
jge
jno
pop
mov
test
dec
mov
mov
cmpsl
hlt
subl
cmpsb
xor
stc
loope
scas
push
or
jle
aas
cmp
xchg
arpl
bnd
xchg
sti
bound
pop
sarb
not
pop
dec
popf
adc
xchg
arpl
in
cwtl
add
and
and
std
lock
sub
adc
inc
lret
test
stos
out
es
ret
mov
pushf
adc
push
lret
cmp
jmp
mov
imul
popf
sbb
pop
sbb
xchg
sarb
add
popf
repnz
and
xchg
repnz
push
insl
femms
ret
ja
insb
je
push
cwtl
dec
xchg
jp
push
mov
arpl
pushf
int3
loop
sub
mov
xchg
movsb
lods
mov
xchg
out
rep
jno
jle
jbe
mov
mov
or
lcall
sub
fiaddl
adc
lods
mov
push
push
cltd
mov
inc
clc
xor
lock
push
push
sbb
cltd
movl
mov
in
xor
sbb
xor
mulb
inc
mov
and
jb
mov
popf
notl
cltd
jmp
mov
les
push
mov
pop
sbb
mov
inc
arpl
imul
push
xor
push
pop
push
xchg
add
outsl
shrl
mov
push
int3
loop
push
sbb
xor
jmp
shl
int3
cmp
jecxz
push
gs
mov
and
scas
cltd
or
cmp
xchg
int
shlb
stos
adc
lret
mov
cmp
cmp
outsl
mov
cli
arpl
mov
outsb
add
enter
data16
mov
std
roll
aas
cmp
faddp
addr16
dec
inc
jbe,pn
push
fdivs
aad
fisubl
dec
pop
pop
push
inc
fs
pop
fnstenv
out
or
adc
xor
xchg
call
cwtl
or
fstps
inc
call
arpl
adc
ds
fstpt
pop
mov
pop
ss
xchg
movsl
pushf
add
lods
jne
push
or
xchg
dec
test
mov
xor
or
in
push
xchg
xchg
clc
or
lret
jecxz
dec
mov
insl
pop
pop
jmp
out
and
sbb
imul
xor
mov
clc
jge
push
dec
jae
jmp
shl
jmp
inc
out
mov
jo
dec
test
add
int
dec
sbb
jecxz
addb
imul
push
dec
jbe
and
lock
and
daa
pusha
adc
or
dec
enter
dec
or
fdivs
loop
fwait
mov
pop
or
xchg
jl
adc
int
pusha
or
jp
inc
xchg
push
inc
in
sbbl
ds
and
pop
dec
loope
cli
aad
test
fcoms
sub
pop
leave
pop
mov
cmpsl
pop
xor
movsl
test
pop
es
movsb
sub
jmp
sahf
sbb
ds
out
lock
enter
push
inc
xlat
sub
fwait
mov
mov
jne
addr16
fs
adc
push
aad
repz
test
ljmp
sti
lcall
clc
sbb
jns
xchg
xchg
add
sub
pop
push
out
ret
fwait
adc
test
adc
mov
mov
xor
mov
mov
push
jecxz
jmp
cmp
pop
dec
add
insb
push
mov
out
clc
stc
jp
imul
test
loope
xor
add
dec
std
sarb
xchg
out
mov
orl
dec
mov
and
push
or
inc
mov
mov
cltd
stc
stos
push
pop
fcompl
xor
lahf
sub
xor
bound
or
add
bound
sti
fcmovnbe
pop
pop
jl
fiaddl
add
sarb
mov
push
cli
push
int
out
jae
aaa
dec
adc
mov
or
mov
mov
or
dec
fidivs
movsb
mov
bound
push
pop
pop
stc
nop
iret
addr16
call
mov
or
loope
dec
lods
out
mov
out
out
jmp
push
shl
mov
addr16
loope
test
adc
repnz
xor
out
mov
push
jns
sbb
push
lret
aas
test
dec
lods
mov
dec
frstor
cmp
jns
or
push
xchg
movsl
pop
mov
fdivl
loop
repz
pop
call
jl
push
lret
xchg
test
pop
std
fnstcw
xor
out
push
lods
jne
push
ss
xor
sub
dec
jle
and
scas
xchg
jge
mov
daa
or
pop
je
shll
cwtl
test
cmp
test
in
xlat
addl
push
or
jl
xchg
call
jmp
pop
fdivr
pop
cltd
mov
call
in
inc
addr16
mov
mov
js
call
xor
popa
sahf
mov
mov
into
adc
aam
mov
adc
sbb
mov
add
pop
and
mov
sbb
andl
pop
sahf
cmp
enter
inc
cwtl
sbbb
mov
gs
outsl
pop
and
sub
inc
cmp
fstpl
cwtl
nop
fisttpl
sbbb
addb
mov
ss
and
xor
adc
int3
fisttpll
scas
xchg
jmp
ds
icebp
adc
dec
xor
lea
lds
ja
inc
pop
sbb
inc
or
mov
aam
xor
mov
cmp
push
pusha
ljmp
inc
fsubp
add
les
stos
loop
xor
xor
or
lds
sbb
xor
repnz
add
lcall
out
icebp
adc
fidivrs
jae
rorl
cmp
stc
inc
orl
adc
cltd
in
loopne
jmp
cld
sub
or
and
imull
ljmp
adc
push
fsubrs
test
or
movsb
and
lds
es
jo
cmp
mov
jl
aaa
mov
push
incl
add
xchg
out
fcmovne
lock
movhps
out
adc
xor
scas
add
call
xchg
mov
lods
shll
fnstsw
out
xchg
xchg
lds
aaa
mov
sahf
xchg
add
push
adc
dec
mov
ss
js
mov
jecxz
das
and
dec
fsub
pop
sarl
aas
or
mov
dec
testl
loopne
pop
xchg
clc
lahf
jle
xchg
cmp
fdivs
mov
dec
mov
hlt
mov
in
aaa
in
mov
lods
movsb
pop
sbb
mov
lea
aas
and
inc
push
pop
fs
in
adc
stc
mov
cli
daa
inc
or
or
sbb
popa
mov
dec
ret
dec
or
xor
push
mov
rorl
int3
add
mov
sarb
xor
orl
add
adc
fsubr
or
jg
shll
xchg
jp
and
data16
cmp
insl
xchg
inc
pop
jns
push
imul
cmpsb
sub
fcoml
jns
gs
orl
xlat
int3
jecxz
cld
cs
push
jnp
pop
xor
or
in
lods
and
pushf
pop
out
repz
mov
fimull
loop
iret
ficomps
aas
push
jp
or
pop
fwait
mov
dec
mov
je
pusha
inc
mov
lret
test
adc
xor
mov
cld
mov
mov
sarb
cmpsl
fists
cmp
pop
jle
mov
mov
movsl
inc
mov
jg
pop
es
xchg
lock
mov
inc
testl
ljmp
push
sti
xor
inc
and
push
push
dec
lock
shlb
loop
or
cmp
sub
push
into
xchg
or
jnp
rorb
adc
mov
push
add
aaa
jae
test
cmpsl
mov
adc
cmp
cltd
cmp
loope
fldcw
imul
cmpsl
xchg
cmp
test
sbb
add
repnz
movsl
imul
lret
xlat
mov
ljmp
cmpsb
mov
repnz
js
rcrl
mov
cmpsl
push
dec
pop
dec
inc
push
xlat
insb
fists
or
add
pop
lcall
sub
aaa
dec
add
hlt
sbb
xorb
sbb
jo
into
ja
pushf
ljmp
jmp
pop
test
xor
inc
mov
ljmp
adc
pop
mov
inc
dec
fstp
lods
enter
lahf
stc
sub
cld
fucomip
adc
cmp
inc
loopne
loop
jo
push
subb
sbb
mov
add
xchg
out
es
dec
inc
sahf
iret
xchg
pusha
movsb
xchg
les
aaa
and
cli
jb
test
xchg
jle
jnp
mov
jge
les
add
or
in
aaa
sarb
jg
movsl
shrb
test
lods
hlt
pushf
sub
pop
add
adc
imul
out
stos
push
out
inc
shll
test
lods
aad
stc
dec
out
push
and
sbb
lret
pop
pop
jmp
dec
test
dec
not
fsubrs
and
mov
dec
in
cltd
test
mov
sub
out
or
xor
ss
mov
shrl
or
imul
fmul
xchg
stos
dec
mov
ljmp
mov
test
rcrb
dec
sub
push
cmp
inc
int3
push
dec
add
aam
stos
les
aas
and
imul
test
mov
movsb
pop
cltd
lds
rcrb
push
cmp
es
pop
adc
xchg
out
mov
lods
or
or
stc
cmp
ss
sub
inc
cltd
sbb
mov
in
nop
mov
bound
push
sti
loope
call
leave
adc
cmp
das
inc
and
xor
or
mov
inc
mov
add
push
adc
cmp
data16
lods
fcmovbe
ds
xchg
fs
xchg
add
xchg
sbb
jmp
fs
inc
repz
mov
ljmp
test
addr16
mov
movsb
lods
push
imul
adc
fdivs
sub
in
pusha
dec
sub
push
pop
pushf
sbb
sub
mov
push
pop
inc
sarl
movsb
scas
pop
jnp
loop
nop
loopne
scas
aaa
aaa
stos
cmpsb
sarb
es
negl
and
ljmp
es
loopne
inc
adc
cwtl
sub
mov
dec
jo
mov
sahf
adc
pop
repnz
xor
hlt
or
pop
mov
xchg
push
xlat
int
mov
pandn
jge
jns
addl
pop
jbe
xchg
mov
push
push
ljmp
push
lcall
jne
push
inc
jmp
es
into
or
mov
pushf
movsb
fs
mov
aaa
and
jbe
iret
add
or
pop
arpl
adc
pop
xchg
dec
push
pop
gs
pop
cmp
mov
jbe
and
in
mov
inc
inc
cmc
std
fisttps
adc
lret
xchg
ljmp
fcmovnu
out
mov
lcall
push
adc
std
dec
int
mov
xchg
jle
outsl
inc
sub
mov
imul
lock
in
ja
pop
sub
gs
out
movsl
pop
inc
into
lret
pop
test
sahf
rcr
daa
enter
sub
push
addr16
imul
xor
pop
push
fadds
es
ret
push
js
xchg
movsb
dec
mov
xlat
jb
mov
push
ffree
shl
add
int
mov
adc
inc
pusha
test
dec
cs
mov
push
test
cmp
cmp
arpl
dec
mov
sar
sbb
or
sub
int3
jbe
dec
shll
lcall
outsl
movb
fwait
add
bound
xchg
mov
ss
int
add
data16
mov
sub
push
sbb
clc
loope
cltd
pop
push
mov
in
gs
popf
aad
je
or
inc
lahf
lret
cltd
inc
cmpsb
repz
loopne
or
enter
imul
pop
stc
lret
push
mov
jne
das
aas
fcom
cwtl
mov
mov
mov
cmp
xchg
jmp
pop
pop
test
adc
out
ror
pop
cmp
inc
push
flds
fcomip
xchg
addr16
loopne
mov
inc
fiaddl
pop
jmp
roll
sbb
xchg
int
jp
ja
lods
jle
jno
sbb
and
mov
loop
add
mov
xchg
adcl
pop
cmp
sahf
cmp
test
mov
xchg
mov
lahf
stos
xchg
and
push
imul
lds
add
dec
mov
push
mov
enter
dec
sbb
jge
xor
cmpsl
lods
loopne
and
xor
adc
or
jno
mov
int
scas
pop
call
in
and
fdivrs
adc
mov
push
dec
out
lods
mov
adc
repz
mov
dec
inc
or
sub
stos
dec
add
sahf
mov
loope
push
pushf
or
xchg
and
add
addl
pushf
mov
add
std
adc
insl
inc
adc
sub
and
das
or
sahf
and
enter
cmp
inc
mov
and
xchg
jle
and
shll
add
lock
sahf
leave
repz
pop
and
xchg
xchg
testl
or
mov
push
bound
adc
jge
mov
shrb
xorb
add
xchg
sub
inc
ret
cwtl
rolb
divb
inc
loope
xchg
sbb
xor
pop
fldenv
mov
mov
les
fwait
pushf
in
pushf
cmp
adc
sbb
leave
mov
mov
icebp
out
jbe
fmuls
test
xchg
stos
lcall
arpl
dec
sbb
or
je
mov
outsl
jo
rolb
mov
jp
xchg
mov
inc
rcl
sub
es
and
popa
dec
repz
pushf
pushf
movsb
sbb
fwait
in
jo
inc
push
in
iret
sub
shlb
xchg
scas
adc
pop
sbb
pop
icebp
add
lea
rorb
bound
sub
xor
iret
into
leave
cmp
fs
shrl
in
jnp
je
sub
mov
sub
lcall
cmpsb
sub
add
mov
jae
stc
dec
inc
xchg
fsub
cwtl
or
jg
js
je
gs
bound
cmp
cmp
neg
mov
sti
pop
sub
js
aas
ja
xor
sub
insl
ja
mov
ja
lea
test
sbb
fadds
insl
clc
pop
jne
jns
pop
add
mov
fidivl
xchg
lcall
fistpl
xchg
ret
jg
mov
rcl
cli
mov
lret
out
inc
push
or
les
mov
sub
out
sub
iret
ffreep
add
push
lahf
dec
add
pusha
mov
push
xchg
mov
divb
mov
arpl
inc
stos
lock
std
movsl
xchg
fistps
inc
enter
es
adc
sbb
stos
pop
scas
jp
ljmp
in
jecxz
rep
scas
mov
ds
call
popa
icebp
cwtl
pushf
cmc
je
inc
repz
aam
mov
daa
adc
or
adc
ss
push
ja
mov
in
movsl
jo
int3
ret
das
lods
xor
adc
push
dec
clc
rcrb
pop
arpl
sub
enter
jnp
add
jae
adc
rcrl
adc
out
push
movsl
addb
subl
cmpsl
repz
sub
pop
inc
push
xchg
pop
xor
popa
inc
stos
scas
daa
movsb
shr
pusha
aad
testb
imul
fisttps
xor
jmp
dec
arpl
imul
dec
imul
ljmp
cli
rcll
ds
push
rorb
rorb
or
adc
mov
je
insl
stc
shrl
fsubs
stc
sub
push
fmul
push
sbb
and
and
mov
mov
push
xchg
push
add
sahf
push
int3
jnp
sub
iret
push
mov
aaa
xchg
pop
cmc
and
fisttpll
lcall
xor
xorb
xchg
into
int3
hlt
aaa
dec
push
fildl
or
das
xchg
movsl
imul
jae
cmp
out
mov
js
and
xlat
mov
inc
rol
xchg
test
iret
sbb
aad
into
int
shll
dec
mov
push
in
mov
int
cmp
shl
sub
mov
stos
test
popa
push
cmp
sbb
push
rcrl
xchg
push
dec
cmp
pop
sahf
data16
icebp
cs
push
cmp
gs
enter
lcall
xlat
xor
ss
xchg
sub
jmp
int3
or
jbe
out
pop
clc
hlt
add
sarb
dec
movb
aaa
adc
addr16
sti
mov
pop
cld
pushf
and
movsl
add
mov
cmpsb
pop
mov
push
pop
movsb
mov
pushf
mov
mov
das
push
mov
ds
mov
sahf
adc
clc
push
lcall
mov
push
ds
push
ret
mov
add
in
mov
and
js
xchg
ljmp
scas
sti
mov
and
mov
jp
and
orl
and
sbbb
sbb
addr16
lahf
mov
inc
ds
ja
mov
outsb
orl
in
pop
shr
mov
clc
insl
repnz
cmp
sub
mov
dec
sti
jge
sub
mov
arpl
cmp
and
test
dec
dec
data16
sbb
xor
jb
in
aam
sub
bound
ds
loope
xchg
xor
cmc
dec
lcall
aaa
addl
mov
out
test
outsl
push
xlat
ror
pushw
inc
pusha
xchg
jl
pop
pop
sbb
pop
lods
fs
mov
mov
lds
imul
iret
sbb
mov
sbb
test
and
xchg
cmp
je
or
jbe
inc
or
or
sbb
sbb
fdivrs
data16
or
or
mov
mov
in
jae
gs
mov
out
mov
or
push
popf
mov
scas
insl
cmp
xchg
inc
mov
mov
jge
lahf
fsubl
jp
mov
mov
inc
and
ficoml
mov
pop
cmpsb
fwait
into
xorb
push
push
and
sub
mov
cld
xchg
pop
jns
inc
or
aad
mov
out
int
push
repnz
adc
das
jbe
aaa
jecxz
adc
lods
fcomip
xchg
enter
mov
iret
mov
mov
pop
push
repz
inc
shr
add
or
cmpsb
jge
sbb
jle
push
jnp
sub
cmp
xchg
fwait
repz
imul
nop
xchg
and
jge
jmp
mov
add
add
sbb
addb
mov
lods
subb
mov
repz
jne
cmpsl
cmp
das
sbbb
inc
shrl
pushf
xlat
pslld
mov
iret
sbb
inc
data16
or
sbb
test
inc
mov
mov
sbb
jo
push
mov
pusha
inc
push
pusha
jne
test
imul
ret
mov
cli
insb
clc
jle
push
cltd
movsb
pop
in
inc
or
fidivl
call
loop
popa
add
in
dec
mov
xchg
fmull
xchg
jnp
xor
pop
pusha
ret
loop
pop
cmp
testb
mov
pop
mov
fmuls
mov
int3
jae
or
pop
insl
push
popa
call
andb
negb
jmp
xorl
jne
jbe
xor
aaa
sub
hlt
inc
mov
enter
mov
mov
sbb
mov
call
jnp
or
ss
mov
repz
or
mov
outsb
xchg
popl
cld
mov
mov
popa
outsb
jge
jmp
stos
js
insb
xor
fs
sbb
sbb
xchg
cmp
mov
rcrb
mov
loopne
adc
mov
mov
cwtl
repnz
push
lret
xchg
xor
loope
jb
mov
mov
adc
or
pushf
ret
sarb
jle
mov
jl
cmc
sbb
loope
daa
sub
jl
enter
xchg
mov
adc
inc
inc
ret
mov
xchg
mov
sub
xor
xlat
pushf
loop
cmp
mov
push
ja
push
cltd
int3
lods
mov
mov
gs
xchg
lock
cmpsb
push
jp
sbb
sbb
mov
mull
pop
mov
adc
insb
mul
xchg
notl
shll
add
jnp
inc
lods
fs
pop
call
ja
mov
cmp
jne
adc
mov
xchg
popa
sub
pop
push
data16
sahf
and
fwait
dec
mov
mov
inc
out
mov
mov
test
xchg
scas
inc
pop
rorb
call
roll
inc
mov
in
mov
fcom
out
mov
mov
mov
imul
mov
inc
mov
cltd
pop
ljmp
jmp
push
int3
icebp
dec
or
pop
mov
call
movsl
jmp
mov
dec
xor
sub
pop
fimull
data16
insl
outsb
aaa
sub
scas
fmuls
cmpsl
push
out
push
cmp
sub
lods
bound
xor
ja
mov
push
aam
adc
insl
push
clc
shll
mov
aaa
push
sub
lock
mov
jle
add
nop
push
push
fwait
scas
nop
adc
cmpsb
fisttpll
xor
mov
es
adc
xchg
push
fidivs
jno
inc
fwait
inc
fcmovnb
xchg
jecxz
arpl
outsl
dec
cs
bound
repz
nop
test
dec
mov
mov
xor
push
rorb
mov
sbb
push
es
jl,pn
icebp
or
loop
jge
addr16
push
push
stc
mov
xor
lcall
pop
mov
mov
daa
rclb
xchg
mov
sbb
jle
in
add
or
ret
enter
mov
aas
rol
gs
mov
idivl
mov
sbb
pop
insl
das
mov
sbb
aaa
out
sub
enter
push
cmp
icebp
push
gs
pop
inc
insb
rcrl
xlat
lea
bound
js
enter
cmp
aad
xchg
shrb
jmp
cmpsl
jmp
inc
int3
movsl
int3
in
aas
rorl
std
mov
xchg
adc
sub
push
sar
fs
popf
sbb
pop
pop
mov
repz
mov
clc
ja
out
jns
pop
arpl
aaa
aam
repz
sbb
hlt
inc
mov
fsubs
daa
stc
mov
lods
sub
icebp
add
insl
xchg
decb
or
xor
jmp
mov
xchg
mov
mov
cmp
outsb
aas
repz
cs
xchg
mov
dec
adc
andb
mov
or
inc
xchg
rcll
push
enter
in
test
xchg
inc
push
jp
lret
adc
shlb
in
and
stos
mov
outsb
xchg
in
add
popf
and
cmovbe
or
pop
cmp
adc
inc
test
pop
pop
lcall
test
sahf
xor
repz
inc
xchg
ss
js
inc
mov
in
and
aaa
aas
movaps
jns
mov
fcomps
sbb
jecxz
or
idivb
mov
pusha
cmpl
out
dec
fs
ret
loope
jg
add
ljmp
push
cmpsl
jmp
in
outsb
mov
push
or
fstl
dec
into
imul
scas
dec
das
test
mov
dec
jmp
jecxz
push
sbb
sbb
andb
ljmp
jecxz
mov
cmp
test
call
decl
imul
dec
mov
xchg
imul
js
sahf
and
xor
mov
jae
iret
ja
ret
inc
or
cmp
sub
pop
or
mov
cmp
les
idivl
push
scas
popf
sahf
or
xor
jb
cmp
imul
jno
or
call
xchg
rolb
stos
fcomip
movsb
sub
sub
fmul
inc
stos
and
ds
fldcw
stos
test
jns
outsb
cmpsl
adc
fdivs
xor
xor
add
loope
lods
loop
test
loop
fs
movsb
call
xchg
roll
jae
aad
icebp
xlat
in
mov
push
stos
mov
mov
adc
jns
push
inc
mov
loop
outsl
sbb
loop
idivl
out
sahf
imul
iret
mov
leave
adc
call
sub
and
mov
shlb
adc
jo
jno
add
ja
lret
enter
pushf
es
or
stos
jne
xorb
subb
mov
int
jns
rcll
jne
cmp
std
enter
test
fsubrl
sbb
mov
clc
in
insl
and
pop
cmp
dec
mov
mov
ds
insb
push
rol
mov
test
sbb
outsb
mov
in
mov
shrl
out
xchg
ja
jnp
xor
or
jns
sbb
stos
dec
enter
or
arpl
ss
aas
sbb
push
xor
or
mov
adc
hlt
sub
les
shl
push
stos
or
loopne
pop
lahf
push
push
pop
mov
xor
or
cmpsl
jbe
ret
ja
ja
nop
cmpsb
mov
dec
fmulp
lods
subl
pushf
pop
mov
push
inc
ret
pop
test
dec
sbb
lea
pop
arpl
xchg
jecxz
or
lahf
iret
aam
dec
and
cld
jbe
jg
xchg
loopne
cmpsl
outsl
dec
xlat
sub
and
pop
xchg
loopne
jae
xchg
adc
sub
lret
cmc
test
je
mov
sub
jno
addb
in
movsb
push
add
cmp
dec
lds
pop
mov
insb
add
push
mov
inc
cmp
lds
cmp
add
jno
jle
cmp
pop
movb
fwait
add
mov
mov
lahf
lcall
dec
sub
cwtl
js
push
enter
pop
push
xor
push
inc
jmp
in
push
cmp
arpl
imul
insb
dec
cld
jecxz
push
and
cmpl
jge
out
mov
pusha
lret
and
int3
or
inc
mov
fcomp
mov
add
xor
lahf
testl
xchg
pop
dec
arpl
mov
xor
xchg
mov
icebp
or
shl
loope
push
mov
dec
lcall
sbb
mov
and
push
push
push
cltd
sub
add
sub
mov
popa
lods
int
adc
xlat
dec
sub
pop
daa
out
dec
xchg
scas
and
mov
rolb
mov
mov
dec
pop
mov
shrl
ss
ret
dec
inc
std
cmp
fildl
adc
cmp
cmp
ret
mov
xchg
fwait
mov
cmp
fsubl
aam
jb
push
dec
mov
mov
imul
loop
jmp
stc
add
mov
test
aam
in
sbb
sub
mov
xchg
sbb
push
push
inc
jne
ret
add
mov
push
pushf
pop
rorb
stc
ss
test
jne
cltd
js
inc
dec
or
cmp
out
mov
in
push
popa
lret
jmp
xchg
push
dec
sub
icebp
jno
adc
sub
leave
lock
ss
sub
pop
mov
mov
fcoml
xor
popf
mov
pop
sub
add
in
dec
test
push
lock
jno
sahf
jb
inc
adc
popf
sbb
shll
movsb
and
sbb
out
jne
lock
movl
nop
mov
out
sub
pop
push
call
or
cmp
cmp
test
lds
cmpsb
sbb
fmul
sub
clc
adc
push
int3
adc
and
adc
clc
in
add
xchg
imul
or
test
ret
sub
or
push
sub
sbb
mov
popa
pop
add
fsts
les
mov
mov
fwait
xor
mov
cli
mov
mov
out
mov
sbb
es
mov
and
sub
sbb
jp
filds
mov
inc
jo
push
inc
test
enter
pop
ret
shr
repnz
shll
scas
jp
pop
outsb
mov
push
add
xor
or
mov
dec
jbe
sub
xor
inc
stos
ja
les
sbb
inc
gs
mov
push
std
lret
cs
mov
rorl
stc
mov
push
mov
inc
mov
or
pushf
xor
pop
jmp
jne
dec
push
imul
cmp
or
lcall
leave
rcr
je
scas
jecxz
lods
fidivs
adc
ds
cmpsl
fcoms
loope
add
push
aas
push
movsl
bound
pop
dec
push
dec
js
pop
bound
pop
hlt
sub
inc
mov
in
insb
repz
in
in
pop
adc
xlat
adc
or
and
fcom
jo
subl
shll
add
mov
ret
jno
ds
bound
mov
out
jbe
notb
pop
or
push
mov
add
sti
jnp
cmc
dec
sti
shrb
and
add
fisttpll
cmpsb
cmp
stos
add
pop
fisubrl
pushf
jl
stos
vmwrite
jnp
adc
jmp
xor
inc
andl
loopne
jbe
int
subl
sbb
fisttps
pop
mov
popl
xlat
pmaxub
xor
inc
and
and
rcr
fs
ficompl
addr16
ljmp
mov
cmc
aam
jp
jno
in
xor
mov
clc
ds
daa
fstpt
cmp
pop
cmp
dec
add
negb
cmp
push
shrl
mov
mov
loopne
pop
mov
pop
test
or
xchg
lcall
pop
pop
aam
inc
cmp
add
sub
adc
bound
cmpsb
inc
andl
lcall
lret
mov
or
mov
lret
sti
mov
cmp
pusha
and
jns
mov
pop
fadd
inc
adc
push
jmp
mov
xchg
adc
les
lret
mov
popa
adc
inc
cltd
ds
and
push
jle
mov
mov
lret
les
mov
ds
lods
aaa
adc
popa
mov
orl
daa
enter
dec
stc
xchg
lods
outsb
jno
cli
movsb
cmp
sub
mov
cmp
cmc
inc
insl
andl
jae
and
lods
popf
inc
leave
fcmovb
mulb
xchg
cmpsl
cld
sub
lods
lea
imul
std
pop
xor
sbb
iret
sub
push
test
iret
push
mov
adc
loopne
divb
mov
in
dec
dec
imul
fwait
dec
and
ss
mov
adc
aaa
cmc
shlb
sahf
and
in
gs
ret
insl
pop
lret
push
lods
mov
mov
add
arpl
pop
stc
and
inc
mov
repnz
mov
sub
incl
sbb
in
cmp
xchg
jge
mov
and
jmp
movsb
arpl
imul
or
add
cmp
mov
ds
jle
cmc
mov
lds
sub
jb
xchg
shl
and
iret
aas
inc
cmp
sarl
xchg
push
sub
dec
call
sbb
sahf
out
dec
bound
hlt
int
in
shlb
pop
lds
scas
fildl
jo
add
mov
fadd
roll
mov
push
push
fiaddl
test
jp
test
or
test
dec
mov
sbb
pop
dec
mov
cmpsb
sub
stos
mov
aas
pop
xor
loope
inc
lods
int3
cmp
insb
mov
fisubs
pop
lahf
mov
loop
in
seto
pop
sbb
pushf
aad
sarl
out
fdivrl
xor
ds
adc
or
fdivrl
icebp
dec
mov
or
aaa
add
mov
push
pushw
push
mov
cli
or
pop
hlt
mov
ror
fsubs
cmp
push
std
flds
pop
test
lret
ficoms
add
cmc
stc
in
sub
enter
outsb
push
dec
cmpsl
xchg
daa
lret
js
and
pop
fisttps
push
mov
xor
mov
in
sti
fsubr
jg
scas
mov
pop
xor
daa
cs
jbe
adc
cmp
es
arpl
cmp
rorb
in
jecxz
pop
in
mov
movsb
push
ljmp
movsb
out
jg
dec
inc
out
fdiv
jg
lds
push
xchg
lds
mov
adc
ja
shrb
jmp
xchg
mov
dec
pop
mov
cld
lahf
adc
shr
outsl
mov
and
call
mov
cmp
sub
std
mov
and
imul
pop
jle
fldl
push
in
sbb
nop
int
in
movb
adc
push
mov
lods
sahf
mov
mulb
out
sarl
popl
dec
jae
pop
jge
in
inc
dec
cld
dec
ljmp
mov
je
mov
jmp
sub
ja
idivb
mov
imul
imul
mov
mov
inc
push
mov
addr16
int3
push
xchg
fistps
and
scas
mov
adc
sbb
sub
clc
test
rcrb
addr16
out
mov
mov
adc
push
push
fwait
mov
mov
mov
jp
in
inc
push
or
jle
daa
xchg
call
in
ljmp
mov
add
mov
push
test
dec
test
xchg
ljmp
mov
and
xor
pop
pop
fisubrl
sub
jb
test
scas
mov
add
mov
mov
push
inc
mov
jne
adc
xchg
rcll
xchg
xchg
dec
mov
clc
ljmp
pop
iret
rolb
pop
or
xor
push
aaa
fdivrs
jo
jecxz
pop
out
das
shrb
sar
jne
xor
sub
mov
test
ss
inc
mov
ds
xor
push
int
adc
mov
push
rorl
xor
aas
xor
cli
or
cmp
lods
push
push
cmpsl
test
mov
ljmp
int3
pop
xor
mov
jp
je
ljmp
cmpsl
mov
dec
std
or
jo
test
decb
mov
mov
jge
and
push
cld
inc
fnstenv
mov
xor
hlt
aad
inc
lods
data16
js
jb
popa
cli
cltd
pop
fimull
lock
inc
frstor
jg
sbb
cmpsb
dec
pop
inc
inc
push
or
mov
rcl
lret
mov
cmpsb
xor
xor
leave
dec
sti
add
mov
mov
dec
xchg
xor
lret
js
mov
cmp
push
sub
xor
out
aaa
cmp
std
dec
mov
pop
mov
loop
imull
push
xchg
outsb
xchg
mov
mov
jo
in
loopne
ss
sbb
aad
sub
out
adc
xor
pop
into
jns
cmp
dec
jp
mov
dec
xor
and
dec
mov
std
into
cld
mov
cmpsb
jne
cld
xor
sti
sbb
insl
fs
inc
lea
out
and
shrb
imul
xor
cmpsb
shrl
dec
pusha
mov
xor
stc
add
xchg
popw
xorl
add
arpl
mov
ljmp
imul
adc
jne
jl
clc
sbb
push
out
mov
xor
aas
mulb
jg
inc
imul
xor
push
jmp
dec
scas
stos
xchg
inc
xchg
pusha
mov
cmc
adc
lret
inc
imul
push
fs
das
pop
pop
mov
ret
push
and
adc
adc
or
inc
out
gs
es
icebp
jge
pop
fcmovbe
dec
xor
xor
push
loope
test
and
and
push
jnp
loope
pop
loopne
popa
xchg
xor
fcoml
mov
jb
test
sar
bound
repnz
sub
pop
inc
adc
sahf
sbb
dec
xchg
lcall
dec
js
mov
out
lahf
aam
mov
and
js
fs
icebp
xchg
jbe
mov
inc
dec
int3
rclb
sbb
sub
add
mov
push
ret
ss
mov
or
mov
cmc
xor
or
mov
ficoms
pop
test
xchg
mov
lods
mov
mov
mov
cltd
loope
ljmp
fsubr
les
stos
pop
adc
adc
ja
sub
pop
adc
test
cmc
nop
aam
in
sub
sub
dec
mov
fcoml
add
addr16
pushf
aad
mov
sbb
inc
andl
scas
and
int
lahf
lds
or
movsl
out
clc
inc
xor
jns
mov
dec
lret
push
mov
jp
pushf
mov
aam
mov
lret
cmpsl
pop
push
pusha
sbb
pop
and
mov
cwtl
dec
or
arpl
test
and
mov
lahf
gs
sub
in
in
dec
add
cwtl
mov
outsl
or
jl
mov
xor
pop
sbb
xor
dec
pop
sarl
mov
pop
jno
add
push
inc
pop
test
inc
xchg
push
xor
inc
add
inc
xchg
js
mov
and
xchg
or
call
mov
icebp
test
out
popa
aad
adc
or
in
into
pop
mov
out
cmp
cmpsl
imul
mov
popa
sbb
call
scas
or
mov
xchg
push
mov
cmp
out
xchg
js
out
scas
lret
sbb
pop
daa
loopne
dec
jnp
xchg
inc
dec
push
punpckhdq
stc
imul
enter
stos
mov
adc
inc
negb
lcall
addb
in
mov
dec
daa
scas
inc
cmp
scas
or
scas
icebp
scas
enter
dec
dec
scas
divb
push
outsb
mov
xor
lock
and
xor
sbb
pushl
hlt
adc
aam
or
ljmp
bound
popf
add
std
in
sbb
in
mov
pushf
es
std
or
dec
xor
mov
daa
iret
pop
outsb
mov
jmp
mov
sarb
fdivl
push
xchg
or
xor
iret
xchg
mov
scas
push
sbb
inc
lcall
insl
jbe,pt
fistpll
data16
outsb
mov
fs
pushf
sub
push
xchg
fstpt
adc
add
fidivrl
fs
outsl
scas
adc
movsl
jb
sahf
dec
cmpsb
int
mov
inc
fs
xchg
rol
aas
frstor
cmp
pop
fwait
sub
ret
xor
sti
test
jae
xor
js
dec
xchg
sbb
fisubs
ljmp
je
or
adc
push
sbb
popw
pusha
pop
jl
pushf
aad
jmp
ds
pop
cld
jo
stos
or
or
in
loope
lods
addr16
lea
cmp
cmp
xlat
inc
in
mov
and
shll
dec
scas
sahf
inc
std
pop
add
push
popa
sbb
xor
xchg
sub
xor
add
sub
xchg
in
jb
and
pop
mov
dec
push
sbb
clc
imul
imull
xor
insl
xchg
mov
mov
jb
scas
das
not
scas
ljmp
ds
repnz
lret
xchg
int
lret
mov
mov
inc
sub
arpl
xor
dec
incl
sbb
in
jp
mov
xchg
push
adc
jle
pop
insb
inc
xor
jp
stc
js
push
cmc
jbe
cmp
push
out
iret
push
sub
cmovge
cmp
out
sha1nexte
push
xchg
lret
dec
or
bound
jb
mov
bound
sbb
cli
inc
fidivs
lea
addr16
mov
std
pop
lcall
lahf
or
pushf
ficomps
push
xchg
lock
out
mov
sbb
sub
sbb
rorb
xchg
pop
test
jmp
dec
in
lods
scas
and
lds
inc
sbb
jbe
std
psllw
adc
mov
scas
arpl
sub
and
mov
push
aam
hlt
fdiv
leave
cs
inc
stc
inc
add
clc
mov
mulb
ret
in
add
adc
xor
push
xor
jmp
add
daa
stos
add
test
push
xor
js
int3
mov
cmpsl
loopne
push
repz
sbb
sbb
fdivrl
lods
fdivrp
cmpsb
xchg
jb
mov
cmc
push
cmp
adc
jne
mov
in
xor
pop
cmp
jmp
fwait
addr16
mov
ja
ret
pop
stos
xlat
and
add
adc
fld
push
pop
cmp
jne
fs
scas
aad
xchg
mov
adc
fldl
out
and
fldt
sbb
mov
mov
push
fistpl
aaa
mov
xchg
xchg
inc
dec
mov
add
je
dec
push
xchg
dec
sub
push
mov
jg
icebp
fisttpll
jmp
popf
jae
sbb
push
cmpsl
cmp
cmpsb
mov
fldcw
mov
lret
cmp
add
mov
insb
push
or
push
dec
xchg
mov
adcb
popf
add
mov
dec
xor
out
mov
fnstcw
cmp
sti
mov
leave
inc
sbbb
std
jo
xor
pop
fsubl
popf
or
mov
dec
cli
outsb
jae
iret
out
pop
mov
push
inc
fs
pushf
les
je
sub
dec
adc
cs
daa
mov
out
xchg
ret
fisubs
lea
imul
cmp
stos
hlt
test
pop
sub
je
mov
lcall
lret
sbb
mov
clc
or
dec
adc
push
rolb
fmuls
jge
lods
shlb
push
mov
fs
jg
aas
jne
pop
sub
pop
jno
fbld
dec
hlt
mov
inc
jl
shr
or
push
or
pop
jp
test
add
xchg
xchg
std
fisttpll
fninit
mov
jp
sarb
cmp
xor
ss
mov
rcr
fistps
xlat
aam
stos
ret
push
add
imul
out
and
and
or
mov
mov
cmp
ret
pop
sbb
pop
bound
inc
dec
icebp
pop
cmp
stos
xchg
repnz
dec
movsb
pop
xor
ljmp
pushf
jo
popa
aad
mulb
rolb
xchg
xchg
je
popf
pushf
test
dec
xchg
or
mov
sarl
cli
daa
jge
lods
jae
add
repz
insb
pop
push
xchg
fnstenv
aad
xchg
bound
push
or
mov
sbb
xor
lret
das
shll
rclb
or
aad
or
ror
movsb
xlat
insb
sub
sub
sub
sub
hlt
movsb
lds
xor
test
rcrl
mov
cwtl
adcb
cld
scas
xor
sti
cmp
jne
mov
inc
mov
mov
jno
das
aam
xchg
mov
push
imulb
lcall
stc
pusha
lret
ja
sti
loop
stos
loopne
xchg
adc
iret
jecxz
pop
push
xchg
xorb
fs
sbb
nop
xorb
and
push
mov
xlat
hlt
cltd
ret
ljmp
das
sub
xchg
add
out
pushf
scas
sbb
ficoml
push
lret
xor
lret
lret
jge
das
inc
cmp
push
mov
mov
cmp
popf
or
cmp
mov
ret
fcompl
movsl
cmpb
pop
in
jb
stos
and
mov
sti
cmpsl
out
in
dec
into
shll
shl
negl
xlat
int
call
dec
or
or
sbb
sbb
test
loop
and
lcall
jmp
test
stos
int
xchg
in
xchg
pop
loopne
insl
mov
lcall
mov
or
push
adc
repz
out
push
out
or
lods
cltd
xchg
pop
fstps
mov
scas
and
aam
adc
jl
pushf
xchg
mov
arpl
cmp
call
jl
movsb
ljmp
push
xchg
inc
test
fs
xor
shl
dec
or
cmc
mov
sbb
add
je
xor
inc
adc
xchg
subl
out
sub
xlat
test
bound
sahf
int
in
lahf
sahf
xchg
cmc
icebp
lret
inc
pop
mov
sbb
in
inc
lret
jb
in
pop
test
ds
bound
pushf
loopne
gs
jnp
outsl
mov
and
fwait
add
call
orl
inc
adc
pop
jae
ja
lcall
stc
adc
xchg
cmp
lock
xchg
push
jl
out
nop
xchg
sub
fnstcw
inc
adc
fildll
mov
pop
js
mov
cmpsl
movsl
push
stc
fwait
out
jmp
test
mov
sar
pop
pushf
push
xor
stos
lcall
mov
mov
cmp
mov
lcall
enter
cmpl
mov
pop
rcr
push
inc
fadd
inc
push
dec
cmpb
ja
filds
mov
jb
or
pop
xlat
movsl
insb
pop
popa
loop
daa
push
cwtl
lods
sub
sti
adc
or
xchg
rcrb
cltd
in
test
dec
stos
inc
imul
call
test
notb
pop
sub
or
xchg
adc
inc
push
and
adc
pop
and
push
inc
cwtl
enter
adc
cmp
push
sbb
sbb
imulb
daa
jno
cmpsb
push
jns
cmp
shr
add
jae
or
sbb
daa
add
push
mov
les
cmp
pop
jecxz
dec
cmp
mov
pushf
mov
insl
and
lods
push
jl
xchg
mov
or
dec
lcall
and
mov
xchg
jecxz
mov
dec
inc
jmp
push
je
cwtl
ret
mov
loop
scas
xor
outsb
sti
cmp
outsl
cld
sub
push
imul
sub
mov
push
in
xor
mov
outsl
or
pop
arpl
or
pop
jb
cmpsb
lds
sbb
sahf
xchg
or
jle
fcoms
cmp
push
jnp
ret
fldenv
into
test
repnz
xorb
out
pop
movsb
out
inc
das
aam
lods
stc
repz
add
or
jge
arpl
stos
loopne
ja
xchg
lods
test
and
cmp
fs
pop
jo
in
sbb
ljmp
in
leave
add
cld
test
in
and
addr16
shl
in
call
xor
and
pop
int3
divb
fsubl
aad
orl
stc
pcmpgtw
sub
cmp
shrl
test
push
dec
shl
push
inc
lea
ret
jnp
cltd
stos
and
notl
mov
js
lcall
ss
cli
lds
jmp
mov
xchg
dec
into
shll
lock
and
mov
sti
xlat
inc
mov
xor
pop
push
mov
cli
hlt
rcrl
push
add
xor
jbe
push
xor
lahf
sub
push
out
cmp
mov
js
add
jne,pt
mov
mov
cmpsb
arpl
mov
dec
loope
pop
in
ficomps
aaa
out
adc
mov
jecxz
mov
fmul
test
ficomps
shrb
rorl
pop
lahf
xchg
and
cmp
mov
ss
popf
ljmp
sti
insl
jne
sbb
or
es
xor
cmp
pushf
pop
lret
shrl
sub
mov
sub
pop
repz
lods
out
rolb
test
xor
ss
xchg
jnp
mov
pop
mov
lea
xor
fidivrl
mov
nop
call
xchg
cmp
jg
in
mov
testl
and
pop
dec
rcrb
dec
jecxz
mov
push
and
imul
pop
sbb
pop
js
mov
out
dec
pop
into
test
xchg
push
nop
mov
sub
pushl
gs
jmp
out
jl
fsts
loope
lcall
jae
roll
into
rcl
scas
jge
movb
jge
inc
cmc
sub
nop
and
cmp
out
add
cli
imul
int
lcall
and
clc
cwtl
push
mov
jmp
stos
jge
popa
int
mov
popa
sub
sub
loopne
adc
sub
inc
adc
cmc
cmpsb
sub
lcall
cltd
pusha
push
fstps
mov
into
rorl
andl
jne
push
jae
jg
and
out
sbb
push
nop
das
ja
rcrb
inc
cmp
fidivrs
je
fstpl
pop
lcall
std
sahf
idivb
sahf
mov
mov
sbb
call
addb
inc
out
push
outsb
insl
cmp
out
mov
filds
sub
insb
fwait
adc
sub
pusha
rorl
orb
cmp
les
aam
add
push
cli
sbb
xchg
pop
dec
jae
mov
divb
sub
adc
dec
sbb
lods
or
fstpt
fists
push
icebp
dec
pop
insl
push
stos
in
imul
mov
and
je
rep
lea
stos
adc
xchg
hlt
sbb
cmp
cwtl
jb
insl
push
jo
pop
filds
ret
cltd
scas
push
popf
add
jbe
cmpsl
adc
fcompl
cmp
adc
icebp
enter
idivb
mov
test
cmp
bound
sarl
in
jb
mov
inc
add
cmp
lock
push
inc
sub
je
arpl
stc
and
adc
int
mov
paddusb
or
inc
jne
seta
lahf
aam
js
popf
dec
mov
mov
movsb
pop
jp
adc
and
clc
cmp
sub
imul
int3
fidivs
jns
out
out
rolb
mov
imul
mov
pusha
stc
cld
mov
and
cmp
xor
xlat
es
xlat
sahf
xchg
mov
add
lret
and
xchg
sbb
repnz
cmp
shr
loopne
push
shl
je
xchg
mov
negb
mov
sar
mov
cli
daa
popa
dec
sub
push
and
iret
adc
sub
jg
aam
xchg
in
out
popa
adc
daa
cmpsl
inc
cmp
cs
mov
xchg
xor
mov
test
mov
cwtl
mov
inc
insl
mov
ljmp
lock
arpl
pop
mov
sbb
xor
aam
pop
jns
mov
int3
dec
xorl
push
mov
push
add
xchg
add
add
pop
fidivrs
or
adc
scas
sub
das
fdivrl
jnp
loope
imul
aas
dec
aam
movsb
add
mov
enter
enter
sti
jg
data16
sub
sub
call
adc
icebp
mov
xlat
test
sbb
sub
jp
sbb
dec
mov
sbb
aad
fistps
das
sbb
adc
pop
shrb
inc
xor
dec
ficompl
out
push
push
aaa
js
push
cmpsl
push
test
and
push
icebp
popa
movsb
jecxz
xor
repnz
mov
sbb
lahf
rclb
adc
outsl
xchg
cmp
ljmp
adcl
ret
out
fistl
xchg
call
out
mov
test
popl
xchg
loopne
dec
adc
and
mov
imul
mov
cmp
lcall
add
lret
andl
jp
push
mov
dec
dec
mov
jae
mov
pop
xorb
sbb
loopne
movsb
xchg
sbb
clc
pusha
movsl
mov
sub
in
call
add
cmpsb
iret
cmp
sbb
inc
and
pop
push
in
sub
lods
pop
mov
mov
jecxz
or
jb
lock
dec
fcompl
cmp
pushf
push
test
or
xchg
pop
push
out
repnz
cld
nop
shlb
cmpsb
xchg
out
jl
lcall
ja
dec
dec
and
push
lds
fstpt
jmp
sarl
mov
movsl
sbb
push
pop
push
add
mov
sbb
aam
js
push
incb
mov
aaa
data16
pop
hlt
stos
xor
xor
adc
mov
push
call
incl
data16
jbe
mov
inc
jae
mov
lret
sub
fs
dec
and
jb
mov
jns
or
mov
or
push
lret
and
test
mov
test
dec
jnp
lds
inc
or
pop
leave
pop
jbe
mov
fbld
lea
add
mov
sbb
jg
sub
cmpsb
jnp
mov
dec
jecxz
jp
shrb
xchg
lret
adcl
mov
js
test
in
dec
or
lret
aaa
int
pop
push
cmp
dec
add
pop
xchg
loope
in
and
adc
fcompl
or
or
call
mov
mov
iret
adc
pop
js
push
int3
scas
jae
mov
insl
pop
shll
aas
cltd
inc
jecxz
aaa
rcrb
loope
fs
sbb
mov
out
lahf
jnp
mov
pop
cmp
fisubrs
call
aas
pop
ja
adc
mov
xchg
mov
sbb
ret
in
sbb
xlat
andb
sub
das
xchg
inc
dec
test
insb
call
and
inc
sahf
sbb
jecxz
fldenv
test
out
xor
dec
js
sbb
sbb
fnsave
dec
pop
cmp
out
loope
and
mov
mov
fcmove
addr16
stc
jecxz
or
ja
add
aas
jo
add
pop
xor
and
sub
notl
or
mov
fstps
or
xor
repnz
out
jae
jno
pop
ja
gs
pusha
rclb
mov
sbb
aad
int3
mov
bound
es
xor
sbb
popa
push
xchg
popa
sbb
push
inc
sahf
mov
sub
loopne
into
add
inc
or
mov
fwait
jnp
mov
jns
loopne
jns
and
xchg
lahf
sbb
out
cmpsb
ljmp
sbb
mov
adc
add
aam
lcall
pop
lea
cmp
xchg
insl
std
repz
sahf
nop
xor
sbb
push
pop
aaa
movsl
and
inc
rclb
icebp
sbb
ja
xchg
insb
or
xorb
les
aam
adc
ja
and
lea
iret
dec
inc
out
pop
mov
push
pop
test
mov
stos
rclb
rol
push
lods
rcl
push
scas
out
loop
xor
addr16
or
or
push
repz
sarl
lret
and
and
or
push
outsb
xor
jmp
jno
in
cmpsl
icebp
mov
dec
jge
les
lret
dec
inc
inc
and
adcb
cltd
repz
addr16
outsl
imul
or
sarb
lret
inc
loope
and
pusha
insb
js
test
pusha
jne
jae
or
adc
pop
cmp
dec
jp
mov
in
push
pop
sbb
and
test
add
std
mov
cmpsb
testb
mov
mov
jp
jp
jns
xorl
clc
and
or
mov
loopne
add
or
sbb
imul
lahf
pop
ss
inc
mov
scas
ret
dec
mov
mov
xor
sub
fwait
mov
lahf
push
sub
push
mov
jmp
cmp
sbb
adc
imul
jp
cmpb
imul
lods
xor
scas
pop
out
mov
sbb
cmp
and
lret
scas
dec
lods
push
sbb
jp
lds
jno
mov
adc
xchg
jbe
mov
xchg
adc
rcrl
sub
sbb
sub
add
mov
jl
hlt
testl
shlb
pop
xchg
sahf
pop
inc
pop
sbb
push
push
xchg
cmp
bound
ficoms
addr16
mov
pop
and
test
test
xchg
dec
cmp
adc
orb
movsb
call
insl
mov
inc
dec
push
inc
into
or
or
dec
dec
mov
mov
out
fimull
or
pop
jp
loop
scas
dec
js
ja
mov
cld
roll
mov
movsb
ret
lret
lods
in
pop
cmc
sbb
cmp
mov
push
fs
sti
in
rcrb
loop
pop
add
inc
adc
pop
mov
add
test
pop
mov
pop
shl
cli
nop
pop
mov
rcll
enter
mov
xor
cli
cs
sub
sub
mov
jno
mov
pop
push
push
rol
clc
push
cmp
push
add
or
stos
adc
shll
mov
jge
js
cmc
add
push
aaa
js
adc
test
or
insb
mov
iret
shl
imul
push
sarl
ds
js
mov
fistpll
xchg
inc
xchg
mov
jns
bound
addb
icebp
sub
jns
test
lret
std
insl
cltd
out
call
mov
scas
pop
mov
arpl
fs
pop
out
pop
and
mov
xor
mov
jge
imul
cmp
mov
add
add
scas
aaa
push
pop
inc
pop
stos
and
scas
and
faddp
add
in
fbld
xor
fcmovnb
test
sbb
push
cmp
outsb
lea
hlt
xchg
cmp
rcr
into
adc
xchg
out
dec
jmp
adc
int3
test
hlt
adc
push
cmp
jp
push
dec
sbb
mov
test
sub
pop
xorb
xor
add
divb
inc
testb
xor
cwtl
cmp
xchg
fxtract
loopne
movsb
cmp
fwait
mov
adc
popl
mov
cmc
adc
vmread
pop
xor
popa
les
mov
sar
mov
jno
out
push
or
aas
cli
outsl
add
mov
push
add
loopne
add
xor
shll
dec
mov
lock
xchg
ja
loop
nop
outsl
push
jae
or
push
ffreep
in
fisubrl
les
jecxz
adcl
fidivrl
bound
shlb
lods
lahf
push
fisubl
or
add
or
ljmp
inc
push
mov
hlt
push
add
dec
push
ret
pop
aas
sahf
cld
mov
addb
out
iret
sub
test
cmp
in
mov
subb
mov
pop
inc
adc
push
cmp
cli
cmp
push
fildl
lea
jnp
push
ljmp
out
pop
popf
fwait
push
testl
sbb
mov
loopne
xor
mov
dec
insb
inc
xchg
xor
icebp
jb
adc
push
aam
popa
or
cmpsl
dec
fsubr
fs
decl
movsb
mov
fwait
data16
iret
inc
es
sarl
sbb
pop
pop
movsb
jo
inc
adc
jb
lock
mov
xchg
or
and
jp
leave
outsl
pop
xor
clc
xchg
mov
xor
xor
mov
mov
push
jb
andb
dec
add
pushf
jne
movsb
enter
test
into
ljmp
shrl
pop
fcoml
jcxz
push
outsb
push
outsl
push
pop
pop
ss
out
test
xchg
add
movsl
sub
jb
and
jecxz
inc
loopne
pop
adc
ss
push
notb
fnstcw
lds
in
popa
jns
add
cmp
scas
jp
jno
icebp
mov
enter
mov
mov
or
mov
js
out
ljmp
je
or
lcall
addr16
mov
xchg
cmp
ss
pop
add
sbb
testl
xchg
negl
andl
jbe
imul
leave
insl
fistps
jl
mov
addr16
shrb
inc
mov
add
hlt
enter
xchg
int3
jnp
xchg
jb
sub
xchg
cmp
ja
and
pop
int
fwait
mov
aad
sbb
adc
xchg
shll
movsb
or
in
pop
jge
push
inc
inc
scas
stc
cltd
sbb
gs
jnp
fwait
and
mov
sbb
or
pop
mov
test
shrl
loope
push
xor
out
jbe,pn
dec
pusha
mov
fs
dec
das
sbb
fisubs
js
inc
sarb
sub
std
jne
sub
scas
lcall
lea
andl
adc
data16
cwtl
fidivs
ljmp
add
jae
dec
repz
shlb
les
push
add
dec
and
mov
mov
or
xchg
test
mov
pop
decl
cli
subb
out
cs
into
pop
int
jne
stos
xchg
sbb
and
sub
scas
cmpsb
popa
stos
mov
cmp
pop
or
cwtl
and
push
out
cmp
pop
popa
scas
fcomp
cmpsb
mov
hlt
ds
inc
sbb
sub
test
lds
dec
es
or
stos
insb
lods
add
jle
sbb
push
repz
or
dec
push
sarl
inc
xchg
outsl
inc
mov
mov
and
ljmp
cli
cmpl
lret
mov
and
xor
lds
cmp
sub
pop
loope
jp
xchg
out
addr16
imul
xor
and
stos
push
push
xor
push
pop
pushf
and
fisubl
mov
out
outsl
shrl
arpl
int3
sbb
mov
mov
sub
imul
stos
xchg
sbb
sbb
pop
sbb
cmpsl
jne
ret
subb
inc
push
jbe
pop
test
pop
loope
push
mov
sub
stos
mov
push
mov
js
lods
inc
pop
adc
aaa
into
test
push
les
adc
cld
mov
jmp
lahf
je
or
mov
inc
jp
cld
jb
es
inc
push
and
clc
xor
sbb
sahf
movsb
lcall
lret
repnz
sub
or
sbb
leave
cmova
ret
std
cmpl
xor
pop
ja
fs
in
mov
mov
rorl
push
xor
push
stos
mov
inc
fsub
fptan
pop
mov
pop
inc
mov
pop
push
pop
cmp
call
pop
jmp
dec
pop
sbb
mov
cmpsl
xchg
in
push
cmp
pusha
aam
mov
jg
cld
shll
hlt
xor
lods
stc
orb
mov
and
les
inc
sbb
js
mov
in
insb
xchg
adc
clc
mov
sbb
xor
les
xchg
or
popa
imul
dec
fldt
hlt
shrl
jecxz
arpl
icebp
mov
push
imul
dec
popf
inc
fmulp
popf
dec
sbb
inc
loopne
add
cwtl
push
adc
xor
fidivrl
mov
fldt
or
test
imul
xchg
out
es
mov
mov
incb
adc
jbe
jg
outsl
out
push
mov
mov
mov
mov
pop
std
jecxz
jg
or
pop
out
ds
icebp
andb
in
movsl
and
xorb
lods
mov
repz
ja
sub
cld
clc
in
dec
lret
jo
movsl
xor
xor
sarb
ss
mov
mov
dec
shlb
das
popa
xor
xchg
sbb
lcall
push
ficomps
add
xchg
inc
xchg
int
push
roll
jns
fisubs
jge
mov
out
fwait
lahf
mov
sahf
jge
jp
mov
push
and
push
dec
sbb
jae
cltd
xor
pop
js
mov
scas
into
pop
xor
mov
mov
sbb
mov
push
jae
mov
ficompl
cmp
sub
push
subl
jl
sti
shll
xor
or
dec
lcall
es
xor
adc
in
jl
dec
les
fcompl
cltd
std
xor
mov
shll
push
push
pushf
jle
push
adc
pop
inc
cltd
xchg
lret
rol
add
popf
cmp
lahf
jbe
mov
setb
add
jo
pop
popf
in
or
aam
lds
xchg
push
mov
and
pop
add
int
scas
cmp
mov
jnp
lods
pushf
mov
cmp
shrl
outsb
enter
sbb
stc
shlb
pop
mov
jp
arpl
icebp
lret
xchg
into
loopne
ficoml
mov
adcb
cmp
loopne
data16
outsb
mov
sti
jne
rcrb
call
dec
push
cmpb
cmp
or
mov
cs
dec
pop
xchg
push
inc
pop
inc
mov
stos
dec
dec
add
test
cli
popf
psubq
xor
inc
add
dec
mov
inc
fs
iret
pusha
dec
dec
push
fbstp
push
rolb
jbe
mov
cmp
enter
inc
push
insl
adc
sbb
mov
mov
and
dec
xchg
lret
es
cmp
mov
or
sbb
bound
sbb
shrb
jl
cmc
push
pop
jbe
sbb
lock
mov
mov
mov
mov
sub
sti
mov
fsubrs
adc
or
das
and
fsub
adc
es
add
scas
jb
je
rclb
push
pop
mov
rcrb
inc
lcall
adc
dec
cwtl
or
mov
jge
xlat
mov
fwait
lock
popf
into
inc
jnp
cli
popa
pop
mov
or
sub
arpl
dec
pushf
rorl
pop
dec
push
sbb
std
xor
aad
pop
ret
das
out
nop
into
lret
sub
pop
push
test
adc
lea
out
sti
aad
loopne
mov
rcrb
cltd
and
mov
ret
push
arpl
stc
or
adc
mov
std
test
cmp
push
mov
scas
stc
movsb
jg
aad
dec
xor
push
repnz
aaa
cld
imul
and
loope
lea
sbb
push
shlb
movsb
repnz
sbbb
inc
mov
inc
xor
jno
push
jb
mov
sbb
push
push
or
shlb
jl
xor
adc
sahf
or
sub
cmp
and
cwtl
inc
cmp
push
jnp
mov
cs
pop
shrl
test
inc
rorl
insl
cmp
daa
imul
inc
lds
loop
fildll
lods
lret
inc
add
sub
jp
dec
cltd
pop
lock
fbstp
inc
push
jg
push
jmp
imul
adc
push
cmpl
fs
cmc
out
nop
test
pusha
sbb
packuswb
inc
pop
adc
mov
movsl
iret
sahf
push
imul
cld
xchg
mov
adc
mov
mov
popa
mov
mov
test
mov
xchg
jmp
mov
lahf
mov
pop
mov
movsl
movsl
insb
pusha
push
ss
inc
loopne
stos
out
push
mov
hlt
inc
mov
outsl
and
sbb
sarl
int
inc
sbb
out
mov
lock
icebp
push
mov
jb
test
xchg
movsb
test
dec
cmp
xchg
enter
cmp
addl
push
jle
lcall
ds
aam
add
mov
push
iret
inc
xor
int
or
pop
popa
pop
add
push
cmpsb
lret
in
lock
cmpsl
rcrl
mov
jbe
mov
mov
push
inc
cwtl
push
or
mov
and
or
inc
sub
loop
sti
jge
inc
pop
clc
std
pop
pop
in
rolb
dec
jmp
and
in
xor
loope
cmp
cmp
sub
sub
scas
lret
aas
ds
in
xchg
into
mov
sbb
inc
cmp
outsl
push
mov
enter
adc
mov
sbb
arpl
sar
sub
lea
mov
cmpsl
test
mov
mov
mov
jb
lret
js
pop
aam
mov
lret
aas
xchg
sbb
cmpsb
fcoml
push
out
adc
jo
jne
xor
mov
jl
xor
pop
jecxz
dec
dec
sub
jno
inc
in
pop
nop
insb
loop
xorl
imul
jno
and
jnp
insl
fs
lret
mov
push
xor
xor
outsb
in
test
jg
scas
or
fcmovbe
cmp
pop
xchg
cli
push
or
mov
mov
pop
mov
sub
mov
and
push
lcall
jge
mov
cs
or
outsl
inc
xchg
xchg
or
xchg
adc
ret
push
and
js
dec
out
ljmp
inc
inc
js
mov
push
fsubrl
sbb
mov
dec
push
xor
ss
jb
cmc
insb
dec
bound
rcrl
cli
stc
or
mov
ja
mov
pusha
xor
into
lods
push
dec
xchg
dec
stos
jno
fistpll
push
cmp
add
enter
es
mov
nop
xchg
sahf
movsl
pop
fimull
jno
ljmp
and
mov
lods
loope
xor
lahf
sbb
out
shl
or
loopne
adc
xchg
mov
sub
out
mov
cmp
push
sbb
in
cli
ds
pushf
out
xchg
les
nop
jno
leave
jnp
mov
mov
jb
pusha
mov
clc
js
inc
sub
mov
ja
sbb
xlat
sbb
mov
ret
lods
xchg
popf
aaa
push
idiv
push
leave
xchg
adc
adc
xor
lods
leave
push
inc
push
iret
mov
and
cmp
hlt
dec
sti
mov
lcall
insl
pusha
cmp
or
in
and
aaa
les
je
mov
js
add
add
add
sarb
rorb
mov
testb
push
shlb
out
pop
mov
sub
dec
push
mov
sbb
test
mov
repnz
mov
ficompl
mov
scas
lock
scas
jae
test
ja
or
push
pop
scas
push
lock
mull
cmp
sub
add
das
sbb
cltd
pop
jp
inc
push
mov
and
xchg
in
call
mov
pop
jne
dec
aad
mov
mov
sbb
dec
mov
clc
dec
mov
mov
cld
pop
sbb
rcr
sub
incb
mov
scas
je
add
in
fimuls
sbb
lahf
jne
mov
pop
pusha
stos
sbb
jb
mov
mov
clc
int3
xor
xor
jo
mov
imul
std
roll
std
mov
mov
nop
xor
sti
jae
or
jae
ret
or
mov
xsave
push
pop
arpl
sub
sub
arpl
mov
das
mov
idiv
cwtl
out
xor
adc
adc
orl
mov
mov
mov
push
jne
in
adc
lea
jge
push
add
repnz
mov
mov
push
push
cmp
push
dec
insb
push
inc
xor
sahf
push
inc
aad
and
test
xchg
mov
xlat
in
fnsave
gs
inc
sbb
sub
cmc
sub
and
and
or
inc
in
out
jge
push
je
jae
dec
ficoml
lea
push
cmp
in
xor
inc
lcall
xchg
int
pop
imul
and
push
popf
pop
xchg
int
and
and
aaa
setle
inc
test
adc
shlb
mov
mov
jo
or
sub
cmc
addr16
inc
lea
jecxz
out
aas
inc
pop
rol
jne
scas
adc
insb
mov
ret
push
or
test
jge
inc
sbb
adc
push
cmp
push
pop
push
cmp
sarl
iret
pop
pop
xor
loopne
lcall
push
movsb
xchg
push
inc
sub
push
movsl
mov
mov
lods
out
int
divl
popa
push
mov
pop
cwtl
into
insl
je
ljmp
test
cmpsb
jmp
mov
fs
cmpsl
es
data16
je
jl
push
divl
ds
movsb
fidivrl
jl
insl
cmp
or
outsl
and
int3
jns
jle
mov
jns
xor
or
in
xor
or
enter
addr16
mov
movsl
xor
shlb
jmp
push
fs
cmpsb
cmpsb
lcall
dec
shll
imul
ficomps
scas
jmp
mov
aaa
nopl
in
lcall
or
rorb
dec
dec
cmp
mov
nopl
jb
stos
rcrl
sub
add
call
lods
or
in
sbb
jbe
xor
pop
add
jle
imul
dec
xor
ror
cld
rcl
push
jmp
inc
ret
or
ret
lock
inc
jmp
fstpt
mov
jb
cmp
jecxz
mov
sbb
jnp
out
mov
jb
mov
adc
lret
xor
push
dec
adc
push
jl
add
inc
adcb
and
xor
fwait
pusha
pop
inc
lea
fstpl
or
fistpll
loop
mov
js
cmpsl
xor
sub
aad
pop
push
cmc
cmc
lcall
mov
int3
clc
das
inc
cmp
sub
shrb
into
dec
aaa
sbb
mov
movsl
mov
mov
or
dec
notl
sbb
mov
mov
lods
sub
cmpsl
mov
psrld
xorl
imul
mov
push
test
addr16
mov
pusha
inc
lods
add
aaa
xchg
push
jl
or
ret
iret
xchg
cld
sbb
cld
aam
ret
mov
or
mov
mov
xchg
scas
jno
cmp
ret
jecxz
push
cld
jno
mov
jmp
into
in
push
mov
fsts
lret
jp
ss
out
fnstenv
aad
add
enter
cmpsl
mov
mov
jle
pop
mov
adc
mov
or
xlat
push
cltd
add
adc
movsl
cwtl
push
stos
stos
push
fdivs
clc
and
popa
inc
pop
rorb
push
fistpll
je
add
xlat
mov
sbb
or
xor
or
fmul
sbb
cld
lock
inc
shrl
or
or
mov
cwtl
inc
lods
dec
loop
mov
ja
jbe
and
jmp
mov
xchg
or
gs
cli
cmp
mov
inc
xor
pop
insb
lods
adc
jle
mov
xchg
popf
popf
jecxz
pop
movsl
or
out
gs
jl
testb
cmp
test
jl
add
pop
xchg
lret
push
xchg
jle
test
and
cwtl
jbe
cmp
xchg
dec
shll
pop
sti
cwtl
loop
int3
sub
in
sub
and
ja
daa
pushf
idivb
in
cmpsl
mov
jmp
into
pop
daa
or
leave
push
andnps
jp
mov
das
pop
and
jnp
sub
aad
clc
cs
sub
mov
ja
scas
mov
mov
push
jo
xchg
in
dec
popf
or
scas
insb
gs
out
lods
bndstx
pop
mov
push
pushf
and
movsb
add
jecxz
rcll
xor
dec
das
xor
jp
sub
outsl
sbb
inc
cs
rolb
push
cld
push
shrl
stc
daa
sti
xchg
hlt
push
hlt
daa
adcl
pop
mov
mov
mov
in
sahf
fstps
push
mov
sbb
add
or
sub
int
fwait
into
and
mov
mov
jns
call
xor
fucomp
pop
lahf
dec
or
xor
in
dec
inc
adc
xchg
add
inc
out
in
xor
dec
call
les
fucomip
push
outsl
inc
pushf
sbb
inc
data16
pop
pop
push
xchg
stos
sub
inc
mov
in
mov
fnsave
jae
xor
push
add
and
jb
iret
sbb
sbbb
push
das
dec
nop
adc
push
out
mov
cmp
sbb
leave
jge
mov
mov
loopne
jbe
pop
push
inc
std
mov
push
in
jb
push
cmp
lcall
sub
xchg
and
cmpsl
out
add
dec
es
dec
stos
cmp
push
dec
shlb
scas
dec
adc
mov
nop
add
lea
sub
push
ret
pop
sub
pop
cmp
pop
repz
std
add
xlat
mov
insl
js
dec
sub
pop
pop
push
adc
dec
push
iret
xchg
pusha
test
fucomi
testl
ss
add
sbb
cmp
sbb
out
xor
adc
jmp
jge
inc
cmpsb
mov
jbe
and
sub
xchg
mov
xchg
std
lahf
mov
cmp
xorl
fisubrs
push
jmp
dec
sub
shlb
jns
hlt
cmpsl
xorl
in
jle
add
in
mov
es
scas
and
adc
int
in
jae
ljmp
leave
adc
shrb
sbb
mov
cmp
rorl
sbb
das
cwtl
popf
lods
outsl
imul
or
push
jnp
inc
or
jno
push
push
cmp
xchg
sbb
xlat
testl
or
loope
cmp
scas
fnsave
push
push
ret
inc
ret
loopne
int3
mov
mov
je
xor
sub
insb
pop
sbb
orb
push
mov
dec
mov
cmp
mov
out
mov
imul
lds
loop
insb
ss
stos
mov
or
inc
mov
sub
adc
out
push
ret
mov
or
jo
fdiv
scas
add
or
and
sub
lods
fcomi
pop
push
int
test
movsl
das
cmp
cmp
cmp
sahf
cld
lods
mov
jl
mov
cmpsl
jle
leave
sub
pop
mov
or
and
inc
jmp
mov
mov
pop
cmp
outsb
lcall
rorl
pop
xor
in
push
repnz
sbb
mov
clc
dec
sahf
or
jl
test
cmp
add
adc
mov
mov
aas
cmp
pusha
outsl
sar
lds
jne
loope,pn
push
mov
and
xor
mov
add
inc
lret
fmuls
imul
add
push
pop
mov
xor
les
in
lret
or
jb
ficomps
jno
pop
pusha
cmp
adc
mov
cmc
sub
cmp
outsl
fsubrl
push
jnp
arpl
imul
lea
leave
jae
aam
mov
and
jnp
cmpsb
test
stc
xchg
or
pusha
std
sub
push
inc
or
or
cmp
in
sub
in
dec
sbb
test
push
inc
mov
inc
lods
sbb
loope
aad
jge
int3
mov
int3
iret
or
jbe
jle
pop
jae
add
cmpsl
int
xchg
aas
out
jecxz
test
inc
xchg
subl
xlat
xchg
sub
dec
cs
scas
mov
jg
frstor
push
std
push
aam
and
inc
dec
xchg
jmp
inc
jg
and
inc
adc
pop
cmp
fiaddl
jb
lahf
inc
leave
test
in
rorl
fprem1
rcr
push
cmp
add
les
push
jnp
hlt
adc
scas
mov
jmp
sub
aas
xchg
test
daa
mov
xor
mov
outsl
inc
sarl
jl
pop
es
ficomps
xor
xlat
dec
fsubp
inc
inc
lods
fs
xor
inc
sbb
xchg
imul
xchg
fistl
faddl
dec
xchg
adc
jge
sub
cld
sbb
jl
adc
in
and
pop
fldt
mov
adc
sub
push
push
into
stos
adc
cmp
inc
rorl
xchg
out
sbb
sbb
lock
dec
faddp
ficoms
dec
inc
inc
xchg
push
push
loop
pop
cmp
nop
and
lcall
inc
notl
pop
jle
mov
dec
cmp
fsts
mov
mov
xchg
add
adc
jg
je
pop
rcl
jb
inc
or
pop
sub
push
popa
mov
dec
push
xchg
popa
pop
jp
int
ficompl
or
jno
sub
imul
adc
es
sti
and
add
icebp
fstl
push
fcmovbe
shll
imul
xchg
cwtl
mov
sbbb
cmp
nop
in
test
test
mov
repz
xchg
mov
ret
lods
xor
dec
out
jp
loop
jns
xchg
and
xchg
pop
push
xchg
and
call
into
icebp
ds
or
imul
ret
sbb
gs
repz
adc
sbb
popf
insl
inc
inc
imull
mov
out
mov
pop
inc
fistps
jne
and
call
inc
adc
mov
lgdtl
pop
mov
call
pop
in
cmp
adcb
cmp
scas
push
cwtl
in
dec
dec
cmp
lods
lahf
lcall
insb
sub
mov
adcl
aas
jg
shlb
shlb
popfw
inc
inc
or
sbb
inc
add
test
add
jmp
pop
cld
and
pop
dec
iret
out
add
sbb
aad
xchg
inc
mov
and
jmpw
jae
fsubrs
inc
imul
nop
scas
clc
or
mov
pop
lahf
pop
aam
dec
aad
push
xor
lahf
call
pushf
xor
ljmp
cmpb
dec
loope
mov
shl
cli
je
sub
mov
mov
fidivrs
into
jecxz
es
rcrl
or
testb
clc
pusha
mov
je
test
out
int3
clc
and
test
sbb
lock
inc
es
stos
out
dec
pop
pop
and
fcom
sahf
or
ja
mov
les
mov
rclb
ret
xor
fisttpl
in
pop
pop
mov
in
out
out
ret
and
cwtl
stos
ja
rcll
popf
inc
in
add
mov
xchg
push
mov
out
in
mov
fldcw
scas
jo
xchg
loope
rol
aaa
sub
lret
icebp
cltd
fisttpll
xor
pop
incl
mov
xchg
xchg
sbb
js
pop
cmp
mov
or
cmp
jnp
mov
cmp
rorb
outsl
cwtl
and
dec
push
outsb
add
mov
adc
sbb
mov
mov
stc
insl
clc
and
imul
pop
sti
subl
inc
mov
stos
lds
daa
outsl
test
mov
lret
mov
fadds
stc
pusha
mov
nop
movsb
xchg
das
ret
rcrl
pop
incl
out
or
in
and
flds
loop
sub
fsubl
cmp
ja
xor
inc
dec
sub
dec
test
fimuls
pop
cltd
push
ret
mov
popf
gs
pop
xchg
mov
push
sub
dec
mov
jae
push
xchg
fiadds
and
push
fildll
out
mov
in
add
in
repnz
mov
icebp
xchg
xor
bnd
pop
dec
jle
pusha
jle
in
hlt
jb
ds
icebp
cltd
in
sub
mov
pop
add
adc
jecxz
daa
fwait
dec
jge
lea
aaa
jnp
pop
push
push
cmp
jecxz
incl
adc
ret
loop
lcall
jne
enter
pop
cmc
hlt
pop
cmp
cmp
clc
cs
dec
jne
mov
dec
push
mov
or
out
sahf
cmp
mov
adc
mov
xor
jb
call
dec
xchg
xor
sbb
cmp
movsb
fidivl
mov
mov
inc
and
pop
mulps
fists
mov
push
push
dec
pop
and
dec
imul
test
cmp
fadd
push
icebp
cmc
mov
insb
mov
jns
pop
mov
leave
xor
js
lret
pop
insb
dec
cmp
mov
lock
mov
adc
mov
sbbl
daa
ljmp
nop
ds
mov
add
iret
aam
adc
int3
inc
inc
dec
movsl
shlb
into
pop
test
pop
push
push
sub
jmp
scas
testb
pop
movsb
in
push
mov
jnp
jbe
test
sub
or
out
out
addr16
pop
rep
xor
imul
or
sub
int3
in
loope
stc
pusha
add
xlat
push
cmpsl
out
or
mov
dec
inc
or
insl
add
enter
test
cld
sbb
cmp
test
paddq
stos
cmpsb
jmp
std
cmp
shrl
mov
je
addr16
aas
movsl
lods
mov
daa
sbb
movsb
xchg
mov
pop
and
xor
aam
stos
jo
and
arpl
sub
mov
iret
xchg
cmpsl
lret
jle
aad
cld
into
xchg
mov
adc
stc
or
out
arpl
xlat
adcb
sarb
insl
shrl
xchg
dec
push
jl
mov
loop
iret
and
or
nop
mov
pop
bound
imul
push
lcall
clc
inc
jno
cmpsb
out
jg
iret
popa
out
push
dec
xor
addr16
out
sub
add
dec
pop
sub
add
and
adc
sub
push
orl
gs
test
cmp
loopne
sbb
imul
out
cmp
dec
out
packsswb
cmpsl
sub
icebp
stc
lods
dec
scas
into
mov
stos
cmp
xchg
pop
js
pop
ret
jecxz
mov
jge
ret
lcall
mov
sbb
push
sbb
and
inc
and
subl
fisttpll
cltd
mov
xlat
and
ret
ss
sahf
mov
nop
push
enter
push
push
xor
xlat
inc
push
dec
pusha
div
pop
sti
call
jbe
adc
adc
push
jg
shl
cmp
or
xlat
ret
sub
fdivrs
mov
sahf
shll
fwait
js
js
adc
xchg
cmpsl
out
mov
jns
inc
int3
out
cmp
in
mov
out
enter
pop
dec
jl
inc
es
mov
mov
or
stos
std
ja
jge
fwait
daa
sub
mov
fiadds
mov
scas
ds
fldl
push
sub
int
in
sbb
into
push
pop
push
ret
int
mov
ret
push
popf
mov
repz
mov
jle
mov
inc
pop
mov
stos
push
add
xchg
fldt
jle
and
in
cmp
cwtl
repz
addb
aaa
adc
mov
push
mov
sub
aas
and
es
into
arpl
fstpl
xchg
adc
inc
pop
mov
enter
push
push
fildl
in
push
or
test
loop
fstpt
xor
adc
fistpl
lea
rcrl
adc
push
mov
jo
cwtl
xor
fistpll
pop
dec
negl
xchg
pop
roll
mov
lods
add
sbb
xchg
jg
add
push
rclb
pusha
xchg
in
sbb
mov
gs
cmc
jbe
mov
out
mov
sub
pop
adc
stos
push
stos
mov
mov
xchg
cli
inc
ja
fs
push
in
in
pop
mov
iret
popf
call
cmp
ret
push
push
pop
push
leave
add
push
inc
test
add
addr16
xor
mov
aas
inc
aad
std
add
es
ret
sbb
test
jno
repz
lcall
dec
jo
xor
out
shlb
xor
imul
xor
xor
aam
punpckhbw
cltd
push
cld
stos
pop
mov
orps
add
dec
or
mov
push
pop
add
nop
adc
aas
jns
cli
rcrb
inc
in
pop
test
das
loope
adc
adc
stos
imul
dec
orb
stos
fisubs
mov
mov
lcall
xchg
push
faddl
pushf
call
subb
movsl
adc
pop
notb
and
push
sub
ret
xchg
je
sub
outsl
jg
enter
mov
sahf
cmp
inc
icebp
add
add
inc
jnp
jb
lret
jo
push
xor
inc
ss
mov
mov
daa
jne
rolb
sahf
push
pop
push
pushf
jmp
xorb
sahf
xchg
daa
mov
outsb
sbb
rcll
movsb
pushf
aas
out
js
outsl
stos
dec
mov
inc
jp
pushf
aad
or
shl
jecxz
push
mov
jge
adc
lock
test
nop
or
lods
mov
sbb
shll
adc
sub
or
adc
leave
sbb
in
ret
movsl
addr16
push
xor
sub
xchg
pop
fimull
dec
ret
repz
inc
lret
push
add
cli
fstl
pop
adc
stos
leave
aas
cmp
push
sbb
out
fdivrl
je
jl
ja
xchg
pushf
ja
xchg
lods
xchg
test
in
in
push
lcall
add
pop
xchg
xor
insl
insb
js
mov
aad
xor
cmp
xlat
xor
inc
decb
push
jecxz
ja
je
flds
fcompl
aas
jb
stc
cmpsb
inc
cmpsl
pop
aas
andl
dec
movsb
lds
adcl
jecxz
cs
ljmp
inc
jmp
sub
mov
cmp
lcall
lret
out
cmp
mov
xchg
mov
or
fbstp
gs
daa
sbb
cmpsb
and
mov
mov
pop
and
pop
and
mov
add
adc
cmp
sub
or
sub
adc
jo
arpl
popa
mov
cs
sti
mov
push
sahf
adc
std
addr16
bound
push
and
mov
es
pop
sbb
test
es
inc
adc
repnz
xchg
gs
in
arpl
ret
adc
push
pop
ljmp
loope
aaa
enter
into
sti
jmp
arpl
xchg
xchg
lods
notl
inc
or
sbb
add
addr16
pop
cltd
loopne
rcr
aaa
pop
iret
ljmp
xorl
pop
fsts
call
fwait
cmp
xor
or
push
icebp
inc
fnstenv
mov
ss
fisttps
sbb
xor
jecxz
test
push
mov
cmc
adc
sbb
inc
mov
or
js
jo
inc
aad
lds
push
add
sbb
jp
scas
push
fwait
scas
dec
andl
lock
mov
mov
xor
cmovb
mov
outsb
lcall
daa
test
jmp
mov
pop
mov
jns
fisttps
ja
mov
daa
dec
add
mov
pop
cmp
push
xchg
repnz
imul
mov
cmpsl
sub
pop
cmpl
pop
ret
xorl
outsb
push
xor
mov
addb
and
cmpsl
loopne
aas
pop
mov
cwtl
cmp
mov
sbbl
cwtl
rorb
bound
sub
xor
sti
sub
rcrl
pusha
fdivrl
jmp
inc
and
shl
fistl
mov
jns
enter
or
xorb
lods
pop
xor
pop
orl
inc
icebp
add
mov
pushf
and
stos
push
ret
dec
pop
dec
push
mov
and
mov
lods
push
and
jl
call
sti
pop
xor
ljmp
ja
in
sti
ret
mov
in
xor
mov
jecxz
neg
push
lret
pop
pop
jno
xchg
and
adc
gs
and
cvtps2pd
push
xchg
pushf
es
pop
daa
xor
fistps
push
test
pop
popf
pop
fisubrl
adc
push
cmp
mov
scas
pop
jp
cmpsl
mov
je
dec
gs
imul
fld
mov
cltd
xorb
daa
mov
icebp
pop
push
add
loope
scas
in
gs
mov
scas
push
pop
iret
ss
adc
mov
arpl
in
pusha
je
xor
daa
rcr
push
mov
push
dec
pop
add
mov
sub
xor
std
adc
mov
loop
insl
shll
in
push
cwtl
int
lcall
mov
inc
push
mov
aaa
or
push
sti
jnp
lock
ret
sarb
pop
lret
int
cs
ficoml
jmp
push
int3
stc
cmp
pop
imul
mov
mov
jle
mov
push
pop
sbb
std
xchg
lret
in
ret
in
addr16
jmp
and
movsb
sub
xchg
pushf
sbb
mov
lret
mov
cmp
mov
mov
mov
mov
test
pop
xor
imul
lcall
pushf
or
daa
mov
xor
scas
xor
aas
sub
add
jno
add
xchg
mov
test
std
push
cwtl
push
insb
dec
stos
adc
dec
add
jne
outsl
sub
orl
das
sub
out
jo
in
sbb
dec
sbb
aaa
add
cltd
jecxz
and
test
xchg
dec
mov
pop
sarb
movsb
shl
pushf
es
stos
clc
inc
rol
dec
addr16
das
outsb
ret
rcll
adc
mov
cwtl
xchg
pop
mov
leave
pop
push
jns
xor
or
in
jae
mov
testb
outsl
jbe
aaa
mov
lods
fldt
movsb
lods
or
cmc
out
dec
cltd
sub
gs
ret
dec
pop
sub
push
fiadds
xlat
jge
xor
xchg
jp
hlt
jns
push
pop
push
mov
add
xchg
jns
adc
nop
fstpt
push
popa
xchg
mov
push
lret
xchg
sbb
fisubs
jbe
lret
add
xchg
arpl
push
jns
gs
xor
mov
push
adc
stos
pusha
jae,pn
sub
mov
aaa
push
hlt
cmp
call
dec
lods
or
in
xchg
test
dec
mov
add
das
mov
movsb
cmp
rcrb
mov
aam
dec
push
xchg
jb
push
lret
sbb
sub
cwtl
loope
pusha
pop
fwait
mov
fisttpll
pop
inc
ret
xchg
or
arpl
addl
rcl
and
lcall
mov
or
mov
aaa
insb
out
test
js
sbb
loopne
xor
sbb
or
inc
in
or
jle
leave
fcomip
push
sbb
push
xlat
pop
aad
das
outsl
mov
sub
xor
test
adc
fs
inc
mov
pop
rclb
outsb
sub
andb
dec
mov
aaa
push
jle
sub
mov
shr
mov
icebp
jb
xchg
mov
mov
outsl
jecxz
lcall
xchg
fsubrl
je
test
ret
iret
outsl
call
imul
xchg
outsl
cmp
adc
sub
push
fistl
add
jmp
sub
jne
les
inc
mov
push
sub
pop
data16
cli
outsb
ret
decl
push
xchg
inc
dec
mov
shlb
jg
and
add
mov
mov
lret
jp
inc
dec
repz
adc
fbstp
js
jbe
das
out
fs
js
leave
iret
int
push
int3
push
or
test
outsb
cmp
xchg
cltd
cmc
xchg
pusha
sbb
fstps
xchg
repnz
mov
jae
add
sub
jns
imul
lds
xor
mov
dec
fstpt
push
sub
test
enterw
pop
pop
lahf
xor
mov
sbb
lock
aas
aam
ja,pt
arpl
rcrb
stos
and
cmp
aaa
xor
pop
shl
mov
scas
sub
xchg
mov
dec
fstps
imul
and
adc
into
sarb
adc
pop
insl
int
clc
gs
gs
add
movsb
cmp
into
in
dec
mov
cmp
imulb
dec
push
inc
inc
add
mov
adc
ror
out
xor
sbb
sbb
adc
movsl
cmpsl
lret
cmc
xchg
ficomps
push
fwait
mov
fisubs
icebp
pop
rcrl
jne
insl
push
sar
or
mov
jbe
inc
inc
cmpsl
and
cmp
push
dec
imul
imul
jb
push
test
je
rcl
les
adc
cltd
lret
movsl
or
push
jle
cmc
in
mov
andl
nop
lock
xchg
call
repz
fwait
mov
xor
jno
mov
pop
sub
insl
mov
pushf
clc
aaa
cmp
cmp
inc
push
daa
out
adcb
add
repnz
pushf
add
mov
adc
mov
pop
or
enter
subb
nop
daa
or
or
fbld
test
xlat
sub
fnstsw
gs
clc
jne
int
arpl
es
and
mov
pop
and
rolb
add
sub
jle
or
xor
pop
sahf
pop
adc
mov
stc
jl
mov
mov
dec
add
dec
dec
bound
adc
inc
adc
mov
pop
scas
js
push
sbb
and
lods
add
cltd
xchg
adc
or
roll
orb
rolb
inc
es
or
xchg
leave
pop
pop
out
push
lahf
lcall
pop
dec
daa
ret
nop
cmc
adc
sbb
shlb
in
push
test
or
xchg
ficompl
sti
push
out
into
cmpsb
ds
sti
sbb
cmc
cwtl
gs
inc
sub
ss
inc
leave
or
jno
add
sub
and
pop
cwtl
push
stos
mov
hlt
jno
pop
fbstp
fidivl
repnz
xchg
cmp
push
pmaxub
push
cmp
xchg
add
lahf
aad
adc
push
fs
arpl
xchg
sub
daa
cmp
jno
push
jle
mov
mov
mov
insb
pop
sub
or
and
xor
push
pop
scas
test
movsl
fcoml
cs
dec
mov
pop
fisubrs
cmp
jae
sub
dec
adc
lcall
pop
mov
xchg
and
push
dec
xchg
repnz
or
pop
out
pop
lahf
mov
shr
mov
mov
xchg
movsb
xchg
jle
int3
or
inc
dec
sub
dec
or
jmp
push
mov
push
xchg
inc
or
xor
loop
cmpsb
jb
push
nop
lahf
rol
push
out
cmpsb
outsb
daa
dec
push
inc
ror
int
dec
inc
mov
jge
or
mov
scas
mov
loop
bound
lcall
mov
xchg
add
iret
sbb
imull
dec
push
popf
sbb
test
dec
popf
jecxz
arpl
out
push
cmpsb
adc
xchg
xchg
icebp
mov
mov
lods
inc
xchg
xchg
push
in
shr
mov
cmp
sub
std
ljmp
push
mov
fsubrl
clc
outsl
jecxz
aas
adc
adc
mov
shll
ret
cmpsl
adc
mov
stc
dec
xchg
sub
cmpsl
xor
or
test
test
iret
jbe
mov
mov
sbb
mov
push
int
push
xchg
xchg
repz
outsl
cli
fwait
xor
xor
test
mov
fwait
out
or
shlb
iret
ret
sbb
push
repnz
pop
pop
in
jb
ret
flds
mov
adc
xchg
rol
xchg
push
cli
nop
or
push
sub
mov
ror
daa
lea
sub
ret
mov
ret
or
sub
inc
outsb
mov
or
nop
push
jl
ja
bound
mov
mov
loope
cmp
sub
cmp
cmpsl
push
pop
mov
imul
jmp
xlat
fcoms
lods
ss
outsl
movd
jae
mov
inc
xor
sbb
adc
sbb
sbb
push
mov
mov
sub
fucom
add
mov
fnstsw
push
pop
push
xchg
push
loopne
loopne
fdivrl
les
out
ja
adc
leave
mov
push
mov
lcall
pop
fnsave
loope
rorb
ror
int
dec
fsub
mov
fidivs
mov
insb
popa
std
imul
xor
nop
sub
mov
cltd
mov
rcl
mov
pop
cmp
add
bound
ja
adc
notb
sbb
mov
mov
or
ret
xor
sub
stos
ret
pop
mov
fisttps
jo
push
out
or
xor
xlat
adc
and
sar
xchg
repz
aas
cltd
clc
xchg
push
repz
xor
cmp
imul
movsl
insb
mov
xchg
and
lods
mov
jle
aam
loope
mov
cltd
pop
pop
adc
rdmsr
mov
jle
mov
in
repnz
ja
fstps
pop
cmp
sub
mull
xor
fildl
aam
iret
out
adc
mov
hlt
and
fadd
push
or
ljmp
aad
nop
rorb
or
dec
in
or
aaa
cmp
push
movsb
xchg
andl
sbb
std
or
dec
test
movsb
dec
push
mov
fwait
std
inc
xor
es
pop
push
sbb
inc
rolb
fsubrp
scas
inc
cwtl
paddsw
xor
sub
and
push
arpl
push
jp
push
popf
jle
adc
bound
jp
jg
and
lcall
fs
test
pop
adc
xor
dec
xor
jnp
add
gs
es
inc
xchg
in
xor
cmp
data16
mov
mov
daa
loope
inc
sbb
lods
dec
mov
sti
ja
cwtl
sub
fwait
jne
pop
dec
icebp
loopne
insb
pop
add
int3
cmp
notl
dec
mov
mov
cwtl
or
push
inc
pop
les
pop
xor
xchg
or
fwait
adc
or
enter
jp
es
mov
or
push
roll
fs
inc
xchg
push
or
test
mov
adc
ja
mov
push
cmp
pop
out
notb
adc
les
fimuls
push
xor
pop
sbb
fucomip
cmp
fidivs
insb
frstor
xchg
xor
outsl
mov
xchg
cmp
and
xor
xchg
int
loope
dec
push
mov
dec
xchg
sbb
call
and
mov
jns
addb
gs
cmp
xchg
sar
in
nop
test
adc
xchg
mov
and
aad
jns
mov
jmp
cmp
xchg
sub
xor
sbb
add
jl
movsb
aad
ljmp
mov
cli
pop
aas
popa
sbb
stos
cltd
lcall
cltd
std
inc
xchg
pop
in
inc
imul
sub
and
insb
fidivl
inc
ja
divb
pop
cltd
sarl
dec
repz
jnp
int3
dec
cmp
mov
sub
ljmp
movsb
cmpsb
divb
stos
cmp
xor
dec
loope
fcoms
mov
mov
or
pop
clc
sar
rolb
scas
stos
stc
sti
jbe
inc
sbb
xchg
and
fs
repnz
int3
loopne
jl
inc
ret
shlb
in
aad
fistpl
nop
int3
outsl
hlt
jmp
fwait
int3
jno
jae
xchg
inc
shrb
aam
int3
pop
push
rcrl
xchg
mov
mov
adc
dec
push
popa
sub
aas
lret
xchg
fistl
jns
ja
jbe
cmp
or
ljmp
ficompl
push
cs
scas
fsubrl
jmp
ret
xchg
mov
fildll
push
mov
ja
mov
popa
in
push
ds
adc
ret
and
jae
leave
nop
jmp
fs
repz
xchg
rolb
adc
xchg
int3
and
leave
inc
xor
cltd
add
and
xchg
or
fadds
push
cli
test
pop
sbb
push
inc
inc
arpl
jno
ds
xchg
push
in
dec
push
aas
xchg
jp
js
adc
lret
pop
push
add
sbb
mov
xchg
shrb
cltd
lcall
out
cmp
decl
scas
sub
cmp
or
xchg
mov
sbb
push
aas
mov
lcall
push
cmp
sbb
sub
fwait
push
lds
or
mov
bound
popa
js
mov
aam
in
or
push
jge
sbb
xlat
sti
test
fisttpll
xchg
add
xor
add
mov
pop
jns
xchg
xchg
mov
xchg
cwtl
add
stos
xadd
fcmovnu
and
xchg
popa
stos
jp
imul
in
jmp
cmp
push
push
cmp
or
sarl
shrb
ljmp
push
leave
pop
out
sub
sahf
add
inc
popf
aad
dec
data16
lds
fldcw
addr16
out
mov
stos
icebp
andl
fs
xchg
jmp
mov
into
test
ljmp
push
sahf
addl
sahf
loop
gs
flds
pop
sti
or
outsb
fidivs
dec
jge
mov
ljmp
mov
or
or
pushf
test
xor
test
xchg
sub
adc
std
dec
or
sbb
int3
das
push
out
fcomi
adc
xor
or
imul
cmp
jg
xchg
call
addr16
adc
popf
movsb
mov
fdivr
lahf
pop
inc
mov
aam
push
dec
add
into
adc
movsl
or
or
ficompl
pop
mov
sub
jmp
rcr
jns
push
pop
in
std
sti
xor
es
idivb
xchg
lea
pop
add
sbb
aaa
mov
pop
stos
arpl
xchg
outsl
cld
movsl
pushf
mov
lret
sub
aaa
stos
mov
ret
pop
add
sti
sub
xchg
mov
push
sub
sbb
pop
mov
xchg
sti
mov
cwtl
das
inc
push
mov
push
push
push
je
sub
mov
or
loop
dec
push
mov
subb
mov
cmp
or
push
data16
xchg
stc
lds
xlat
mov
loop
je
cmp
sbb
dec
xchg
mov
adc
cltd
inc
ret
cs
push
push
jo
push
sub
xchg
lret
fmull
mov
jmp
iret
pop
cmc
mov
xchg
lahf
cli
push
mov
out
int3
xchg
cmpb
mov
add
or
pushf
jno
mov
cmp
in
aas
daa
repnz
scas
xchg
jbe
out
out
dec
je
icebp
fldt
inc
test
lret
dec
dec
decl
in
sub
pusha
and
push
sub
shlb
js
sub
shlb
jp
mov
mov
nop
and
enter
mov
or
add
lea
sbb
pop
shlb
push
daa
loop
outsb
inc
in
xchg
ror
sbb
ss
lds
jns
shll
or
roll
or
insb
jne
orb
lock
mov
push
or
sahf
sbb
cmp
xchg
jbe
pop
mov
adc
or
add
mov
fmul
jno
push
push
pop
jle
jecxz
dec
dec
mov
jg
dec
jne
mov
ss
fidivrl
outsl
out
adc
dec
fdivs
jg
in
or
adc
vmovups
js
cmpsl
fldenv
push
in
dec
fsubrl
add
std
push
inc
and
sub
sbb
sti
xor
loop
pop
jo
add
dec
shl
lods
xchg
int3
fisubs
lds
add
or
jp
int
xchg
push
mov
cltd
ljmp
popa
inc
mov
out
pop
pushf
or
jns
add
inc
movsb
mov
repnz
xchg
arpl
jecxz
test
pushf
hlt
push
loop
iret
inc
push
push
or
cld
xchg
das
xchg
sbb
js
xchg
dec
popa
enter
xchg
xor
rcrl
cmp
lods
pop
jp
xchg
sub
xchg
in
cmpsl
dec
scas
je
stos
inc
lock
outsb
mov
sbb
jmp
cmp
lods
mov
sub
pushf
jne
rcll
sub
fdiv
cmc
mov
cmp
push
adc
inc
out
jne
cltd
rol
popa
add
jl
push
sub
rolb
push
popa
rorl
xor
add
jb
or
iret
adc
and
and
lahf
sbb
xorb
je
mov
mov
and
ja
mov
shll
mov
loop
aad
jno
push
mov
push
aaa
or
push
jo
inc
jecxz
push
cmp
xchg
cmp
adc
cmp
orb
xchg
add
jo
clc
outsb
jmp
pop
pop
sti
fnstcw
das
jae
incb
ja
daa
mov
cmpb
dec
sbb
ret
sub
das
fistps
movsl
in
jns
pop
das
jp
sbb
or
mov
jnp
or
mov
xor
jb
adc
iret
lret
lock
sbb
movsb
test
push
and
dec
inc
jp
inc
test
in
jno
cs
push
shlb
mov
mov
jecxz
out
pusha
lea
jle
mov
push
sbb
jge
hlt
loope
mov
je
or
adc
add
out
sbb
pop
movb
testb
xchg
jo
xor
or
sbb
and
add
mov
add
std
mov
inc
push
xchg
adc
jecxz
lods
lods
fcoms
xchg
inc
mov
ret
cs
bound
xchg
test
loopne
mov
lea
xor
addr16
push
or
clc
mov
out
mov
sub
push
jns
add
out
sbb
outsl
mov
in
push
repz
enter
add
push
adcl
cwtl
std
push
jl
pop
daa
daa
mov
adc
out
out
cmc
dec
xchg
or
aad
add
fwait
adc
jecxz
adcl
test
std
gs
sbb
movups
xchg
sahf
hlt
jae
jle
orb
push
cmpsl
adc
dec
mov
faddp
mov
and
cmp
loop
in
or
rclb
xchg
inc
leave
popa
mov
mov
inc
repz
popa
sub
sbb
ja
cmp
ret
cmp
xor
sti
jmp
popa
add
aas
pop
in
xor
mov
cld
mov
dec
push
in
lds
dec
adcl
dec
jmp
add
xlat
sub
aam
jg
cmp
pop
adc
mov
lods
inc
dec
jl
cmova
xor
mov
stos
enter
lcall
mov
xor
sbbb
mov
and
ret
insb
xorl
aad
test
sub
and
adc
lcall
les
call
rcr
test
mov
ss
dec
adc
test
adc
sbb
bound
int
cmp
movsb
jl
lods
push
sbb
stos
inc
sub
adc
jge
jmp
push
lret
pop
mov
int
jp
cwtl
cmp
cmp
sarl
pop
dec
mov
add
dec
mov
push
je
mov
outsl
or
lea
jns
cmpsl
lods
dec
pop
push
pop
fstl
push
ret
mov
jbe
mov
xor
pop
inc
in
out
sub
ja
mov
cmp
hlt
add
xor
jne,pt
popf
notb
int
out
push
in
lcall
out
mov
inc
sbb
in
jl
sbb
cmpl
xlat
les
fxch
int3
ds
lds
xchg
ret
sahf
mov
xchg
inc
add
popf
jp
inc
or
sbb
sahf
xchg
test
cltd
cmp
sub
mov
sbb
pop
xlat
sbb
lahf
lds
cs
sbb
clc
push
rcrb
outsb
and
push
repz
and
cmp
cmp
pop
cs
cmc
mov
imul
cmc
pop
imul
and
and
popf
pop
add
mov
pop
xor
cmp
add
out
sbbb
pop
imul
clc
int
jae
add
cmc
fnstenv
jae
movsl
cmp
lds
xor
mov
push
sub
jecxz
loopne
arpl
shlb
mov
nop
pop
xchg
or
xchg
jb
mov
out
inc
push
xchg
ficompl
add
inc
in
push
cmp
push
scas
xor
lea
aad
fwait
outsl
sub
pop
loope
test
push
mov
fcomps
test
scas
cmc
inc
into
inc
das
leave
loope
sti
mov
testl
and
icebp
push
insl
jns
cmp
jecxz
roll
mov
fdivrs
adc
mov
sub
push
sbb
mov
adc
les
leave
sub
inc
mov
jae
sub
xchg
fisubs
cmp
xchg
mov
les
aam
add
ja
add
mov
hlt
sbb
pop
pop
div
jmp
mov
repnz
inc
imul
mov
shrb
adc
mov
add
xor
add
mov
popf
in
enter
popa
mov
daa
mov
jge
je
addr16
sbb
xor
or
call
dec
lcall
xchg
xchg
jge
push
push
jle
and
xchg
icebp
adc
mov
mov
shll
subb
idivl
cli
lea
cmp
xor
adc
add
mov
daa
mov
adc
mov
shr
aad
fisubrl
pop
mov
dec
and
js
cmp
cmpsl
or
lock
popa
cmp
lret
shr
movsb
xor
movsb
adc
iret
popa
decb
sub
gs
in
jg
or
arpl
mov
sahf
xor
cmpsl
outsb
rclb
lds
arpl
dec
pop
movsb
inc
lahf
andl
outsl
dec
sbb
aam
pop
bound
mov
push
jae
push
and
cmp
xchg
jnp
xlat
ja
push
gs
and
ljmp
add
imul
into
mov
je
cmp
jge
pushf
addr16
mov
lahf
jns
imul
jo
fs
jecxz
cmpsb
insb
mov
enter
clc
sarl
sbbb
lock
adc
mov
jne
push
outsl
lods
pop
sub
and
dec
mov
xor
dec
mov
popa
xor
inc
dec
dec
mov
in
mov
and
bound
and
cmc
jg
mov
cmp
mov
ret
cmp
push
cmp
jb
es
mov
int
aas
dec
into
mov
in
cmp
pushf
pop
je
ss
in
insl
sarb
cs
add
adc
jmp
fwait
pop
xchg
sbb
cwtl
pusha
testl
xchg
inc
pop
test
mov
fists
push
inc
in
or
xor
mov
xchg
push
lss
cmpsb
pop
out
sar
js
sahf
pop
jno
out
jecxz
and
jge
push
repz
mov
lods
mov
mov
sbb
jnp
das
xchg
ret
lahf
movb
inc
test
notl
add
fstpl
aaa
mov
pusha
inc
jp
adc
daa
pop
push
cli
sub
mov
orl
pop
js
shr
jge
cmp
mov
mov
push
stos
inc
sbbb
repnz
leave
mov
adc
or
jae
push
sbb
push
inc
insb
mov
out
dec
push
push
push
pop
adcb
cmc
shlb
dec
ret
jle
sub
inc
pop
insb
rcr
jbe
jae
pop
mov
sbb
std
mov
lret
and
lea
pop
dec
mov
sub
and
mov
ret
gs
shrl
jmp
mov
mov
cmpsb
push
hlt
xor
movsb
add
push
mov
mov
xchg
and
and
fiadds
repz
shll
or
out
mov
loop
cs
and
cmp
cmpsb
add
loopne
movsb
push
jge
fistpll
jb
pop
pushf
mov
sbb
xchg
add
push
push
mov
cmp
jns
int
loop
scas
mov
hlt
push
pminub
cmp
push
xor
int3
cmp
lock
loope
mov
mov
std
add
mov
sbb
pop
dec
in
push
xchg
or
in
inc
cmp
bound
out
stc
jbe
dec
mov
roll
pop
nop
push
andl
or
aaa
inc
aam
popa
sbb
movsl
addl
fnstcw
and
scas
push
lods
outsb
addr16
push
xchg
lret
stos
out
xchg
in
dec
xchg
mov
insb
icebp
inc
push
push
lods
lods
test
ss
leave
inc
add
mov
dec
mov
pop
loopne
stos
cmp
popl
ja
in
mov
mov
mov
clc
rol
lret
push
les
test
mov
jecxz
in
rcll
add
jne
jecxz
sub
mov
xor
jl
ja
out
pushf
out
cmpsl
aad
pop
movsb
jmp
xor
je
inc
scas
ficomps
xchg
dec
or
test
daa
push
ret
push
mov
pop
mov
inc
mov
lcall
sti
fs
inc
mov
andb
push
jbe
and
cmpsb
sahf
and
mov
aaa
mov
stc
jnp
sbb
cli
ja
sahf
add
lahf
cmp
cmp
in
jmp
push
int
arpl
add
leave
push
sub
xor
das
fldz
movsb
or
and
mov
cmc
xchg
aam
lea
and
insb
subl
cmpb
cmp
mov
testl
sub
adc
stos
popa
into
or
std
ss
loopne
shr
jnp
mov
lcall
push
fcom
fidivrs
mov
mov
popf
pop
mov
pusha
push
rolb
mov
imul
add
dec
pop
aas
xchg
mov
mov
rdmsr
adc
jne
insb
add
mov
pop
roll
in
fildl
add
pop
xor
negl
sbb
cmp
addr16
jne
lret
out
test
adc
xor
ret
imul
mov
adc
jg
les
lret
test
or
add
fimull
cld
lock
inc
dec
cmp
dec
shll
loop
incb
outsb
jecxz
lea
xor
lahf
mov
sbb
jle
sbbb
mov
repz
or
out
scas
ficoms
fadds
mov
mov
popa
in
adc
int3
mov
or
pop
pop
mov
lds
rorl
icebp
or
imul
and
mov
clc
aaa
aam
lock
loop
and
or
add
mov
cmp
xchg
pop
jns
mov
pop
mov
pop
mov
push
mov
jne
test
int3
in
inc
xchg
jp
je
cmc
sbb
lret
rcl
sahf
sbb
in
push
and
mov
daa
scas
or
outsl
sbb
popa
push
popa
mov
mov
out
push
xor
adc
push
gs
shll
fcmovb
aaa
pop
jge
popf
mov
lea
or
inc
out
aad
sbb
addr16
jmp
iret
xchg
xchg
rorb
sub
imul
gs
jne
xchg
insb
pop
popa
int3
add
inc
sti
pop
enter
inc
push
scas
js
and
movsb
xchg
lock
add
add
fwait
mov
clc
mov
adc
insl
stos
jbe
push
je
icebp
popa
dec
or
mov
inc
addb
mov
jno
out
aam
pop
test
pop
and
xor
shl
push
adc
sub
out
add
or
pop
and
andb
jge
in
call
lret
jno
aas
cmp
cli
inc
add
pop
mov
pop
das
or
inc
test
xor
mov
nop
cmc
ret
lods
xor
outsb
and
cmpb
pop
push
inc
and
or
fcos
adc
cmpsl
inc
nop
loope
divb
jne
call
pop
add
pop
xorps
lods
jnp
sub
lock
into
ja
xchg
add
jmp
loope
jae
lret
and
xorl
dec
jne
les
fsubl
mov
xchg
pop
xchg
jle
lahf
fs
jmp
data16
push
fnstcw
mov
sbb
xchg
jge
daa
inc
sbb
mov
in
out
pop
adc
xchg
inc
cmp
aad
inc
in
lcall
cmp
stc
inc
das
repz
adc
cmc
ljmp
inc
sub
aas
xorl
sbb
push
sub
mov
mov
jb
test
inc
mov
les
xor
imul
test
add
xor
es
pusha
mov
jge
lret
sbb
orl
sub
dec
xor
xchg
and
add
add
les
mov
shll
jbe
xchg
dec
or
dec
xchg
icebp
std
les
sar
add
dec
pavgw
push
sbb
add
adc
lcall
ss
jns
out
jbe
xchg
popa
or
shrl
mov
jns
or
out
inc
lahf
lahf
leave
cmc
mov
inc
out
or
cmc
pop
add
lds
dec
scas
mov
sub
in
inc
xchg
xlat
mov
xor
lods
cltd
xchg
dec
scas
fmuls
sbb
dec
xor
mulb
dec
pushf
cmp
nop
icebp
sbb
adc
cwtl
sub
dec
xchg
sub
jo
mov
add
xor
dec
push
cmp
fisttps
inc
mov
pushf
fistps
lcall
mov
push
in
mov
fwait
add
jne
mov
mov
jl
add
jnp
imul
dec
pop
repz
cli
stos
mov
aaa
test
inc
addr16
fs
inc
sbb
arpl
inc
fimull
lea
call
jl
addl
dec
cmp
inc
cmp
jge
in
pop
sbb
push
jg
lahf
mov
adc
notl
jl
push
movsl
sahf
push
cmp
ljmp
xor
push
xchg
lret
mov
ret
test
mov
adc
push
testl
push
loop
movsb
dec
stc
rol
mov
in
aaa
inc
xchg
mov
inc
or
and
insl
das
mov
cmp
jmp
cs
test
in
add
jmp
subl
mov
mov
lret
popf
outsl
loope
adc
mov
cld
out
int3
xchg
rolb
pop
fdivr
push
in
sahf
sub
test
or
and
dec
sbb
mov
push
sub
out
push
sub
lods
cmc
cltd
or
out
pusha
dec
or
shlb
dec
in
pop
inc
sahf
or
add
mov
add
test
xchg
mov
mov
dec
xor
or
add
or
dec
insl
add
push
sbbb
daa
add
pusha
inc
mov
lahf
imul
test
jg
cli
xchg
mov
jp
ljmp
mov
sub
lret
or
and
fndisi(8087
clc
push
adc
test
pop
clc
scas
sbb
sahf
cmp
leave
xor
loope
test
and
jge
pop
inc
pop
sbb
out
and
sahf
stos
fadd
jle
jecxz
push
sar
adc
divb
mov
cwtl
movsb
stos
jbe
xchg
push
lea
mov
ds
std
insl
cmp
inc
sbb
testl
dec
mov
xor
es
xchg
dec
mov
in
negl
in
iret
idivl
popa
sub
lahf
mov
cmp
das
cmp
adc
lcall
addb
in
add
rcrl
mov
or
or
ficompl
pop
clc
aad
xor
push
popf
inc
loopne
movsb
orb
loope
dec
sbb
push
xor
lcall
inc
mov
inc
call
jo
jmp
out
shrb
xchg
movsl
aam
and
xor
loop
mov
jmp
stos
push
popa
test
and
sub
pusha
pop
test
push
nop
add
repnz
or
xchg
mov
or
je
add
mov
cmpsb
xor
adcb
incl
aaa
or
cltd
sub
je
cmc
in
cmpsb
add
mov
sub
push
hlt
or
leave
loopne
repnz
dec
dec
xor
xchg
cmpsl
in
cwtl
dec
rorl
push
sbb
js
popf
or
push
sbb
dec
iret
jmp
sub
or
js
mov
add
adc
pusha
add
in
fcmovbe
ffreep
ret
das
into
jnp
cmp
cmpsl
icebp
addr16
jle
leave
cmc
repz
call
adc
out
hlt
mov
loope
test
mov
enter
cmp
test
dec
sbb
jle
aaa
dec
cmp
pusha
or
imul
movsb
and
cld
shlb
movsb
or
sbb
pop
mov
mov
xchg
and
jo
sub
and
pop
or
pop
jg
add
mov
popf
add
mov
dec
repnz
sbb
adc
inc
mov
into
push
xlat
jbe
mov
pushf
insb
mov
imul
leave
hlt
cmpsb
int
add
leave
pop
push
add
cmp
mov
dec
jbe
lds
shr
fiaddl
testb
adc
jno
pop
inc
outsb
notb
fistl
jmp
add
add
scas
xor
jl
and
je
dec
or
pop
push
or
lock
xchg
mov
xchg
sbb
imul
into
ds
pop
movsl
pop
sub
xor
rcr
and
mov
nop
jl
cmp
cmc
hlt
push
push
lds
cs
mov
xchg
or
mov
arpl
and
sbbl
out
push
dec
std
add
cmp
or
cmp
sub
push
repnz
jge
inc
push
dec
arpl
xlat
push
out
fists
in
out
sub
add
xchg
xorb
and
sub
mov
mov
mov
add
cld
xchg
pusha
push
sbb
inc
jmp
adc
mov
fisubrs
aam
mov
sub
lcall
pop
fsubl
push
hlt
fldl2e
repnz
jmp
mov
cmp
mov
sbb
xor
or
ror
jg
ja
aad
push
gs
xlat
push
pop
mov
or
subl
xor
lret
push
push
fsubs
mov
cmpsl
sub
rorl
cmp
sbb
pop
nop
shrl
or
lods
xchg
fcoml
adc
and
jmp
movsb
jmp
jbe
ret
push
mov
aaa
or
push
cli
push
pop
jns
dec
pop
iret
dec
and
fnstcw
cmp
enter
pop
data16
into
xchg
inc
mov
imul
fldcw
aas
pop
inc
add
in
fnstsw
jecxz
ror
not
xchg
pop
cmp
jg
nop
xorl
jne
hlt
dec
mov
push
xor
push
or
add
mov
jae
arpl
inc
sub
fiaddl
mov
lahf
pop
aas
or
fnstsw
scas
faddp
aam
inc
je
ficomps
and
mov
mov
int3
fldcw
mov
pop
cmp
mov
push
or
str
or
bound
push
sub
add
jecxz
icebp
push
inc
push
negl
mov
movsb
push
in
sub
jns
ljmp
mov
mov
fidivs
and
iret
cmp
pop
cmp
je
xchg
incb
inc
adc
ds
sub
dec
jecxz
pop
test
jg
or
cmp
scas
cld
xor
mov
out
or
push
lea
dec
popl
and
jle
out
add
xlat
lret
xor
gs
pop
out
push
fwait
add
cmpsl
ret
cwtl
test
mov
add
push
xchg
mov
into
mov
sarb
xor
std
push
andl
lds
cwtl
js
loopne
mov
nop
lea
jge
leave
adc
shll
cmp
mov
push
fistpl
popf
sub
cmp
mov
fcoms
mov
push
subps
sbb
or
stos
mov
sbb
mov
add
mov
sbb
rcll
push
loop
inc
inc
and
int3
out
cld
std
out
mov
test
out
sub
pop
cmp
ljmp
sbb
adc
out
or
mov
add
or
shlw
cmp
out
and
pop
nop
jge
dec
imul
stc
jno
or
int
insb
dec
movsl
loop
repnz
xor
or
shll
mov
outsb
sub
loop
test
cmp
xchg
addr16
fcoml
nop
lods
scas
cmpsl
xchg
mov
fdivrs
outsb
les
and
pop
jno
fwait
dec
xlat
rcrl
lods
daa
or
addb
out
jge
ret
pop
sub
mov
mov
sub
mov
cld
shl
ret
loope
sub
inc
xchg
stos
add
jge
test
test
push
dec
dec
insl
xchg
ficoml
inc
or
dec
in
lock
push
jmp
add
add
xor
sub
xchg
add
jno
scas
mov
mov
xor
mov
dec
stos
enterw
adc
add
adc
xchg
dec
orb
imul
push
and
test
jle
movsb
aas
arpl
aaa
loop
aas
and
addr16
outsl
shrl
push
pop
mov
das
dec
movsl
mov
fcomps
jne
js
pusha
pushf
loope
cltd
push
test
shrb
push
pop
jns
stos
lret
jmp
and
inc
out
xchg
int3
or
ret
sbb
adc
add
fiaddl
decl
jae
xor
mov
in
lds
clc
and
adc
enter
xchg
pop
xchg
cld
lea
aam
xchg
and
sarl
xor
mov
fnstcw
insl
insl
push
loopne
mov
push
mov
shll
push
out
jne
pop
insb
nop
push
inc
dec
and
mov
adc
rcll
pop
fwait
and
mov
hlt
and
cwtl
pop
xchg
repnz
and
push
mov
rolb
cmpsl
sub
shr
sbb
xchg
fwait
push
shl
sbb
xchg
fdivrs
sarl
test
sti
and
lret
pop
cwtl
add
mull
mov
pop
mov
popa
fisttpl
jns
loop
cmpsl
ja
aas
push
insb
cld
or
inc
sub
fisubs
sarl
jl
xor
sbb
in
ret
push
and
add
sub
adc
jp
sahf
aam
jnp
int3
jbe
repnz
outsl
movsb
push
mov
in
and
inc
lahf
inc
xlat
ja
int
and
dec
ja
inc
repnz
test
popa
divb
inc
movsl
lock
cltd
popa
shlb
scas
fdivrp
push
loopne
lret
sbb
push
xchg
cs
das
mov
mov
lahf
or
push
add
popa
jl
add
xor
outsb
sub
test
dec
repnz
mov
xor
jge
subl
xchg
push
data16
test
pop
into
mov
pop
mov
cltd
jmp
lods
push
cltd
jae
mov
and
std
jnp
insl
xor
lock
fdivrl
pop
lcall
push
push
ret
iret
push
arpl
andb
cmc
jmp
pop
add
xor
cltd
not
mov
arpl
out
sbb
adc
and
repnz
insl
jae
push
testb
repnz
adc
pop
sub
scas
push
push
shll
aad
xchg
sub
dec
ffreep
and
mov
testb
les
sub
sbb
push
dec
xchg
sti
dec
cmp
fldl
adc
imull
pop
out
xor
or
or
or
and
or
ja
add
repz
push
cmc
loope
pop
mov
xchg
ja
sub
in
and
mov
andb
inc
jo
xor
daa
movsl
arpl
cs
mov
dec
adc
mov
in
inc
mov
stc
shr
add
in
mov
cmp
aas
ljmp
jb
rol
rcll
aam
popaw
pushf
jne
test
test
iret
orl
jmp
loop
pop
cmp
pop
push
sahf
and
cmc
or
pop
mov
xchg
sbb
lea
sbb
mov
imul
inc
aad
movsl
jge
sub
clc
xlat
shll
mov
jb
add
dec
lods
xchg
mov
mov
pop
add
bound
add
int3
or
fisubrl
pop
jno
lock
aam
mov
les
addr16
lldt
scas
bound
xlat
mov
addr16
and
outsb
es
in
pop
std
lcall
divl
pop
pop
push
movsb
popf
int
mov
mov
notb
ds
popf
into
pop
pop
mov
xchg
xor
dec
xchg
lea
pop
or
mov
adc
js
sbb
adc
cvtps2pd
or
pop
pop
or
inc
inc
imul
cltd
inc
faddp
add
adc
stc
test
or
mov
jge
es
sub
cmp
jmp
or
dec
dec
mov
xchg
movsl
lods
inc
mov
lods
outsb
in
sub
cltd
or
sarl
shll
pop
xchg
and
mov
leave
add
rclb
popf
addl
mov
pop
ret
mov
inc
fmuls
jmp
jg
out
repnz
shlb
xchg
jmp
dec
cmove
xor
adc
pop
loope
lods
jo
push
sarb
push
adc
cmp
pop
inc
xchg
cwtl
gs
call
jge
cmpsb
jmp
xchg
dec
push
pop
pop
sub
outsb
jb
repz
mov
scas
hlt
scas
inc
mov
mov
test
std
cmc
add
mov
and
mov
cli
jo
jae
data16
inc
pushf
push
fsts
mov
cmp
push
adc
or
jge
fildll
mov
lret
roll
subb
popa
ss
insb
lds
or
je
repnz
out
daa
jge
add
lcall
mov
dec
jp
lret
imul
inc
pop
pop
jae
add
ret
sbbb
dec
cmp
enter
push
bound
or
call
jge
icebp
fistpll
pop
cmp
mov
inc
loope
imull
ja
inc
in
cld
push
and
addr16
imul
cli
mov
mov
ret
movsl
xlat
push
stos
out
inc
sub
sub
jl
jo
shlb
add
add
adc
repz
movsl
cmp
xchg
jne
iret
inc
dec
mov
mov
xchg
jns
enter
xor
xchg
sub
mov
and
bound
xor
stos
jbe
fidivs
xchg
jp
xor
popf
out
sub
inc
outsb
dec
imul
or
in
jmp
and
mov
xor
stc
and
inc
hlt
inc
or
xor
clc
cli
pop
jb
les
into
lods
jns
xor
insb
inc
test
cmpsl
sub
jg
push
push
inc
rclb
xor
xchg
aas
mov
lea
push
pushfw
es
insb
pop
in
mov
push
bound
adc
sub
in
fsubr
imul
jne
mov
jnp
aam
add
mov
dec
mov
mov
bound
aas
cmp
pop
dec
repz
fildll
push
hlt
add
test
out
lock
add
pop
clc
mov
movsl
outsl
jp
dec
mov
mov
aaa
clc
roll
push
cmc
pop
mov
ret
pusha
dec
jmp
mov
adc
mov
stos
pop
arpl
push
scas
ljmp
fmuls
lret
jmp
dec
mov
fmuls
sub
xchg
sbb
jp
shrl
sbb
je
mov
fmul
ja
mov
mov
mov
mov
lcall
lds
scas
push
and
aad
scas
std
mov
or
mov
jl
sub
mov
lock
hlt
icebp
add
xor
fisubrs
xor
and
test
cmp
sub
jmp
lods
pop
xchg
or
hlt
pop
das
std
add
push
cmp
mov
std
scas
and
lds
adc
stc
inc
stos
push
xchg
lock
xor
hlt
test
add
push
xor
imull
shlb
mov
pop
sbb
push
repnz
sbbl
push
stos
xchg
stc
dec
iret
xor
push
xor
push
rorl
in
adc
mov
xchg
or
testl
loopne
rcll
push
mov
mov
lcall
xchg
cmp
mov
in
test
imull
and
cmp
das
cmp
aas
lret
mov
out
pop
or
mov
mov
push
mov
pop
cmp
push
inc
dec
mov
xchg
xorl
andb
jno
dec
push
dec
or
cmp
stc
inc
sahf
xchg
fldenv
cli
fistpll
or
inc
adc
adc
js
cld
lods
mov
shll
cmp
in
fcompl
mov
gs
lret
test
fcomp
sub
scas
mov
out
out
insl
fdivr
cmp
aad
cmp
mov
loop
cmp
jmp
xchg
stos
and
xchg
push
lods
xchg
cmp
idivb
rorb
jecxz
cmp
dec
jnp
sbb
sub
push
daa
xchg
inc
pop
shl
xlat
lock
inc
and
cmpsl
dec
dec
cmp
rorb
xchg
or
sub
test
mov
inc
push
mov
mov
lods
push
data16
mov
test
inc
int3
pusha
mov
xlat
lret
and
and
in
jnp
mov
jmp
cmpsb
xchg
sarb
adc
cmpsl
cmp
inc
imul
ficoms
data16
pop
imul
jg
ds
fsubp
lret
mov
push
inc
gs
adc
test
idivl
sbb
mov
insl
cmp
add
js
jno
daa
icebp
lds
mov
adc
xor
fildll
mov
mov
push
fnstcw
lock
jmp
lahf
ss
cwtl
mov
add
int
sbb
frstor
aaa
xchg
aas
push
cmpsb
pop
and
es
inc
jno
scas
mov
fsubrl
cmp
test
pushf
push
popf
push
lcall
sub
movb
dec
sbb
mov
mov
movsl
lret
inc
subl
adc
sbb
mov
lcall
jg
fmul
hlt
and
or
mov
scas
gs
jl
jnp
mov
iret
shll
imul
fidivl
sub
iret
push
adc
mov
mov
xchg
mov
xor
sbb
sbb
add
aam
out
es
mov
jmp
add
xor
ret
jo
add
es
fdivrs
loope
ss
mov
addr16
or
xchg
cwtl
inc
mov
mov
xchg
cmpsb
xlat
inc
test
dec
sub
pop
insb
push
cmp
repz
arpl
rcl
sub
or
dec
aad
sub
cmp
mov
mov
inc
inc
push
xchg
test
jg
cmp
repz
adc
sbb
adc
testl
andl
dec
lret
mov
xchg
cltd
fmulp
fadd
sbb
or
xchg
inc
repnz
add
push
inc
mov
das
xchg
fistpll
sahf
xor
adc
out
bound
pop
sub
mull
xor
add
in
xchg
dec
mov
dec
mov
and
fwait
sbb
mov
dec
jmp
call
xor
push
movsl
pop
fwait
loopne
or
add
mov
xchg
sahf
or
sar
dec
popf
jmp
dec
mov
ja
pushf
in
mov
push
jnp
lea
cmp
ret
jo
test
add
and
push
sbb
jo
xor
cli
insl
sbb
fs
push
fcmovb
mov
xchg
cmp
test
mov
jge
in
mov
push
sbb
xor
cmp
xor
sub
fcomps
pop
sub
mov
push
sbb
push
or
adc
stos
adc
aad
xchg
xor
adc
inc
mov
xor
pop
fwait
imul
pop
icebp
push
aaa
inc
push
ss
sbb
or
arpl
data16
mov
lcall
cmp
gs
dec
push
std
adcl
pop
lret
push
fidivrl
jae
aad
xchg
pop
mov
pop
sub
adc
push
dec
push
out
sbb
scas
mov
data16
mov
pop
ret
pop
movsb
add
lea
in
or
stos
xchg
int
sub
dec
pop
leave
repz
punpckldq
std
mov
aad
test
add
mov
fistl
out
pop
xchg
rep
or
add
popa
push
icebp
jb
mov
push
shrl
lock
ljmp
icebp
aad
cmpsl
or
mov
push
fsub
jno
fistps
in
lods
sub
lods
cmpsl
sbb
push
stos
jno
cmp
shr
cld
ret
mov
push
and
dec
mov
inc
into
scas
xchg
mov
lods
cmpsb
aam
imul
aas
in
jge
insl
clc
outsl
sub
loope
mov
jle
jb
or
sub
insl
or
mov
push
imul
call
dec
je
fistpl
sub
bound
pop
xchg
sbb
jge
iret
lcall
out
mov
sub
daa
scas
mov
movsl
sub
xrelease
nop
cmp
jae
xlat
aam
shlb
push
jnp
leave
dec
and
dec
rcrb
loop
jl
push
cmpsb
je
jae
push
lret
add
mov
mov
les
dec
cld
rolb
jae
cmp
push
or
push
out
pop
loopne
mull
adc
or
fs
fstpt
mov
inc
scas
inc
cmp
mov
sub
shll
mov
scas
iret
lahf
cmp
add
mov
jae
pop
dec
call
adc
imul
aas
jnp
in
push
scas
daa
daa
in
xlat
push
mov
in
orl
or
cli
outsb
pop
loope
in
imull
push
inc
xchg
or
dec
mov
lock
mov
mov
int3
push
loop
ror
xchg
xchg
xor
adc
fstps
cmp
scas
into
sub
pop
adc
sbb
insl
loop
aas
xchg
and
addl
jb,pn
aam
outsb
adc
out
inc
ja
push
scas
dec
and
js
xchg
test
js
fcomip
iret
jmp
inc
pushf
icebp
pusha
xchg
or
cmp
or
nop
xor
or
xor
sub
shl
int
les
stos
std
and
dec
loop
fs
inc
icebp
mov
scas
add
sbb
cmp
addl
cltd
sub
xor
and
sub
push
cmp
jae
repz
xbegin
cmp
pusha
or
sbb
mov
inc
mov
jg
inc
xor
adc
ljmp
lcall
sarl
or
dec
mov
out
fidivs
adc
js
ficoml
jbe
inc
xor
xchg
mov
fs
cli
add
pop
xchg
adc
nop
mov
dec
nop
das
xlat
rcll
fwait
dec
push
mov
movsl
jb
dec
jmp
dec
inc
dec
arpl
dec
lds
imul
fsubl
pop
mov
repz
sbb
dec
jb
jecxz
arpl
xor
adcl
test
popf
ds
loope
dec
mov
xor
pusha
jnp
inc
fcmovnb
sbb
sbb
and
push
cmpsl
faddl
and
je
scas
xchg
test
out
and
aam
mov
scas
jecxz
xchg
fiaddl
pop
inc
mov
xorl
pop
enter
lret
shll
jns
mov
ljmp
aam
aad
dec
ficoml
flds
test
sub
xor
inc
sub
xchg
xchg
and
jb
bound
mov
subb
stos
xor
jmp
add
pop
iret
pop
fcomps
nop
imul
cli
inc
popa
sub
xchg
dec
js
push
jmp
adc
mov
sub
jae
inc
lods
add
push
jbe
dec
sahf
push
out
and
in
lods
scas
mov
jns
andl
icebp
jp
jnp
jno
push
aad
jp
scas
jp
aad
lods
mov
jmp
sbb
xor
jo
sbbb
sbb
and
lret
dec
inc
pop
rorb
movsl
cltd
repz
adc
mov
mov
jl
sbb
push
dec
xchg
push
jb
pop
mov
int
lock
imul
scas
jo
lret
lods
push
dec
pop
lods
insb
rolb
mov
pop
test
jge
int
xor
jns
xchg
fisttps
out
mov
inc
jp
sti
xchg
test
imul
mov
add
sub
prefetcht2
out
adc
adc
pop
sub
nop
mov
pop
cmp
and
fidivs
dec
jg
sbb
loopne
test
lahf
call
jnp
popa
dec
mov
out
mov
or
mov
rorb
or
xchg
sbb
loopne
adc
inc
les
cmp
inc
and
xor
inc
std
cs
or
test
mov
js
inc
lret
jmp
les
fwait
sbb
xor
arpl
mov
in
js
and
mov
icebp
scas
adc
xchg
push
push
mov
adc
ljmp
cmp
jns
xor
pop
call
adc
cld
mov
mov
pop
jnp
pop
imul
push
nop
inc
lock
aas
cmp
inc
shll
xor
adc
ljmp
sub
orb
inc
std
clc
imul
pushf
mov
cmp
push
dec
in
lret
data16
mov
cmc
fmuls
cmp
cmp
mov
sbb
adc
add
jae
sub
mov
cmc
dec
or
adc
dec
jae
push
enter
sub
test
mov
sahf
cmp
xchg
push
bound
xchg
in
testb
sti
icebp
divb
add
ljmp
cmp
lcall
loope
inc
popa
or
movsb
cmc
add
sub
inc
ds
adc
movsb
outsl
pop
pop
xchg
sub
test
mov
idivb
mov
pop
mov
xor
outsb
xchg
in
in
adc
push
sub
or
loop
jno
mov
jo
daa
incl
les
mov
xchg
dec
daa
adc
mov
mov
inc
push
cmpsb
or
cltd
ror
mov
das
and
ret
cltd
out
movsb
stos
adc
aas
mov
push
shll
sti
not
and
mov
xor
int
push
mov
ljmp
punpcklwd
dec
bound
and
xchg
mov
dec
movntq
into
scas
cltd
ja
and
inc
xchg
mov
data16
fsts
mov
adc
mov
mov
xchg
or
aaa
cmp
xchg
mov
sbb
mov
mov
lret
dec
stos
xchg
out
and
xchg
lock
inc
stos
add
aaa
mov
mov
and
in
jo
or
and
aam
xchg
or
jb
mov
jmp
stos
cmpsl
dec
add
lret
push
pop
sbb
inc
mov
popa
sub
xchg
inc
dec
dec
lret
mov
adc
mov
mov
out
ljmp
je
jbe
cmpsb
xor
sub
inc
pop
jg
add
scas
jl
imulb
xor
insl
aaa
repnz
xor
nop
je
rcrb
pop
dec
jbe
xchg
scas
cmpsl
cwtl
out
fnstenv
fmulp
outsb
lahf
jl
or
sbb
jl
movsb
mov
mov
inc
push
and
xchg
scas
cld
mov
sbb
out
sbb
xor
sahf
out
movsb
loopne
movsl
nop
lods
mov
jecxz
xor
insb
jg
dec
cmp
test
int
mov
clc
cmp
pop
stc
mov
mov
pop
mov
adc
adc
dec
mov
push
jl
fnstcw
leave
in
fidivs
and
das
leave
insl
xor
mov
mov
push
loopne
out
pop
mov
pop
pop
jecxz
xor
adc
test
fsubs
sub
aam
out
cmp
mov
adc
pop
mov
js
stc
mov
daa
lock
mov
ret
movb
mov
push
in
add
add
pop
sub
es
inc
xchg
es
or
mov
int3
sti
or
or
enter
push
inc
aas
imulb
fwait
sbbl
popf
mov
jne
dec
insl
dec
and
sbb
push
inc
xor
lds
adc
adc
sub
fwait
in
inc
and
push
xchg
cld
xor
sarl
push
pop
scas
dec
xchg
mov
xor
push
fmull
xchg
xchg
sbb
mov
push
mov
lock
dec
dec
out
mov
pop
pop
pusha
imul
sub
mov
xor
adc
xor
or
loopne
les
cmp
imul
cmc
mov
pop
or
sbb
hlt
dec
jmp
mov
into
fneni(8087
mov
fsubr
es
hlt
inc
push
push
bound
sub
xor
mov
mov
push
sbb
stos
jmp
data16
in
dec
dec
lcall
pop
inc
jg
jo
mov
adc
adc
xor
jnp
push
inc
and
fldcw
mov
and
push
pop
or
fcomp
test
mov
mov
jg
pop
fbstp
into
add
inc
scas
scas
jle
cwtl
mov
aas
movsb
mov
mov
xchg
imul
ret
dec
cltd
les
mov
fiadds
mov
dec
fimull
loop
add
adc
shrb
jnp
and
pop
sub
ret
cmp
mov
arpl
add
ds
pop
test
int3
repz
push
imul
dec
dec
rol
aas
push
mov
push
out
ret
cs
push
outsl
fdivl
clc
dec
enter
in
les
pop
popf
push
sti
lock
jmp
jae
popa
sbb
addb
mov
orl
bound
and
mov
mov
or
stc
dec
sbb
jbe
sub
repz
mov
add
mov
xor
sub
loopne
pop
js
push
and
mov
test
mov
rcrl
inc
jge
mov
cmpsl
dec
adc
mov
ds
cld
jmp
adc
push
cld
jl
inc
scas
ret
ror
fiaddl
shlb
jns
sbb
dec
pop
and
push
pop
arpl
cmp
outsl
sub
stos
mov
push
mov
add
xchg
lea
pop
xchg
mov
insb
lock
es
adc
out
or
out
push
inc
sbb
push
lret
adcl
xchg
in
add
cmpl
xchg
rcrl
push
sbb
mov
int
jge
fsubr
int3
call
add
stos
out
frstor
pop
push
lods
xchg
test
cmp
jno
sub
push
xchg
pop
aam
dec
xacquire
or
mov
mov
shlb
mov
xchg
call
dec
jo
xchg
sub
cmp
xor
xor
test
clc
xchg
jae
add
jmp
or
lods
pop
lods
and
int
pop
loope
mov
sbb
jge
xor
jae
push
inc
sub
cmp
jb
enter
fs
and
xchg
mov
lcall
call
inc
mov
insb
pusha
mov
jno
lea
cmp
mov
je
in
mov
shll
add
sbb
or
data16
and
es
out
negl
movsl
cs
int3
in
sbb
dec
xchg
cmp
xor
jno
pop
xorl
inc
push
movsb
outsb
xor
adc
dec
mov
push
mov
jp
shll
mov
lods
xchg
sub
push
insl
mov
pop
mov
in
mov
pop
pop
jl
sbb
out
test
andl
push
sub
enter
enter
scas
outsl
imul
loop
mov
xorb
out
into
push
lock
clc
mov
sbb
push
jle
sbb
sbb
pop
dec
arpl
or
xor
xor
push
cwtl
dec
inc
add
push
daa
fnstenv
fnsave
jb
in
ds
in
pop
add
sub
rclb
adc
mov
push
test
mov
cmc
jno
mov
xor
dec
xlat
pop
add
stos
sub
fnstenv
pop
lds
stos
sub
mov
xor
loopne
mov
adc
aas
dec
jb
push
add
mov
mov
jmp
adc
jmp
test
or
pop
dec
gs
dec
lea
push
in
fs
mov
inc
inc
stos
mov
cld
fsubr
mov
nop
data16
hlt
outsl
insb
mov
ja
std
lds
insb
imul
push
les
repnz
into
outsl
dec
movsl
mov
push
or
sbb
mov
or
ss
pusha
or
ret
mov
sti
leave
inc
leave
lcall
adc
push
fdivrs
push
lret
test
aaa
mov
icebp
cmp
dec
xor
repz
sarb
push
mov
clc
mov
jne
movl
stc
fsubrl
sub
lds
jae
loopne,pn
dec
aaa
in
cmp
ja
call
fldcw
or
shrb
inc
mov
pop
sub
popf
push
add
jbe
je
and
jns
xchg
adc
xor
mov
ss
outsb
jmp
lods
jg
xchg
repnz
ss
aam
inc
ror
adc
xchg
repnz
xchg
or
add
lret
mov
xlat
sahf
ljmp
test
rclb
rcr
mov
lods
jecxz
mov
loope
std
iret
push
hlt
mov
int3
xchg
xorb
fs
push
fsubl
add
sub
test
sarb
scas
xor
ljmp
add
mov
xor
or
movsb
adc
and
lahf
das
adc
push
push
pop
movsl
mov
mov
incb
adc
mov
pop
sub
out
mov
stos
lds
dec
mov
cmp
or
int
push
push
inc
cmp
cmpsl
mov
fbld
add
xor
iret
nop
push
sbb
sub
inc
add
std
inc
jbe,pt
dec
cmp
popf
ds
lock
jmp
cmpl
bound
cmpsb
aas
jbe
jns
insb
sub
inc
int
jge
xchg
or
or
jne
sub
or
cli
test
xchg
fs
xor
jae
xchg
imull
jg
mov
jnp
sbb
pop
jmp
jno
rep
jnp
pop
out
out
clc
ficomps
xlat
arpl
sub
decl
jge
idivl
jmp
xchg
std
add
hlt
mulb
mov
xlat
push
xchg
cli
loope
mov
xchg
pop
outsb
adc
mov
xchg
dec
sti
jg
jp
sub
mov
adc
inc
inc
cltd
add
mov
sti
xlat
jg
cli
push
sbb
sbb
xlat
cmp
stc
das
sar
stos
ja
incb
std
popl
repz
leave
mov
xor
lods
loopne
ss
les
pusha
mov
imul
pop
imul
xorl
lods
popf
lahf
or
or
jno
call
jbe
pop
push
test
xchg
test
dec
jae
jne
adc
scas
in
mov
and
or
enter
xchg
or
fwait
sub
add
inc
jmp
xchg
scas
xor
or
adc
out
add
mov
push
sub
add
test
xor
rcrl
push
xor
aad
gs
push
ficoml
jae
cld
adc
data16
or
sub
popf
subb
adc
cmpsl
push
add
jecxz
stos
movsl
dec
mov
sub
cmp
nop
xchg
add
xchg
hlt
dec
xor
mov
xor
test
inc
sub
xor
les
sub
mov
inc
ret
push
cltd
sbbb
inc
data16
mov
daa
outsl
sbb
idivl
add
enter
out
into
push
pushf
aad
push
cmp
testb
pop
shrb
int3
pop
les
imul
sbb
xchg
jge
fsts
jbe
pushf
mov
outsl
jg
mov
cld
mov
repnz
push
aas
dec
add
sbb
push
incl
addl
lcall
inc
mov
nop
test
sbb
mov
xchg
nop
adc
test
es
cwtl
ljmp
pop
xor
xor
daa
out
inc
addr16
dec
mov
or
push
std
adc
in
adc
movsl
lea
jb
xchg
testb
fmul
or
lcall
sbb
adc
aad
cmpsb
pusha
aaa
in
push
sub
pop
push
out
push
mov
in
push
imul
and
mov
sti
nop
imul
sarl
scas
and
adc
push
sub
or
cmp
push
loope
sbb
jmp
pusha
shll
cmp
insb
add
ljmp
sti
das
and
add
outsb
aas
inc
jecxz
xchg
jns
push
lods
inc
mov
lock
dec
xchg
js
and
bnd
jns
mov
aas
xor
sub
testb
xchg
out
lret
cmp
push
jo
inc
cmp
push
push
sbb
test
fs
adc
repnz
and
lcall
sbb
dec
das
cmpl
fstl
xchg
stos
mov
mov
in
popf
pop
scas
jb
idiv
shlb
sbb
xor
cmpl
test
push
and
test
push
adc
or
xchg
mov
shlb
repz
add
ss
add
jae
mov
scas
and
mov
fs
mov
pop
loope
cmp
sub
sahf
xor
pop
loopne
xor
cwtl
dec
inc
jg
or
and
sbb
xchg
xchg
js
push
out
test
aam
push
test
add
clc
mov
mov
push
xchg
out
cmp
pop
outsl
mov
insb
das
loop
ret
sarl
shrl
jl
mov
jge
aam
lcall
scas
and
icebp
adc
lea
cmp
test
js
mov
movsb
mov
insb
sbb
xchg
cmp
jecxz
cmpsb
out
mov
cs
std
push
rcrl
rcrb
dec
cmpsb
fmuls
inc
xor
mov
cmp
fs
insb
in
jge
and
repz
add
fcmovnu
push
jmp
stc
loope
ds
hlt
pop
or
adcb
cltd
stc
call
pushf
and
cmc
sahf
pop
aas
xor
mov
or
xorl
cmpsl
push
and
ljmp
or
movsl
inc
aam
mov
add
iret
cld
mov
mov
mov
jb
xchg
lcall
jge
lock
dec
push
inc
or
pop
int3
mov
xor
popa
dec
loope
aaa
lods
push
or
xor
clc
jecxz
in
and
lods
dec
sbb
dec
pop
xor
mov
rolb
fs
and
sahf
ret
aad
jo
dec
push
int
mov
cmc
and
cmp
mov
psraw
test
arpl
cmpsb
out
xor
sbb
fsubrl
jl
pop
lcall
dec
in
push
insb
leave
mov
mov
and
jae
add
jl
roll
dec
cmp
jae
add
or
push
cmp
lds
out
jl
mov
int
imul
fxch
xchg
call
iret
mov
test
push
lcall
mov
pop
sub
lea
lahf
fcompl
add
testl
lahf
pop
jo
cmc
mov
adc
xor
pushf
shlb
sbb
sbb
outsl
stc
sbb
xor
je
test
xchg
push
insl
mov
and
dec
mov
sarb
dec
out
pop
sbb
push
sub
lock
adc
mov
das
and
pop
or
mov
cmp
push
inc
aas
or
jbe
mov
pop
jnp
fisubrl
xor
push
arpl
sahf
fcmovu
outsb
mov
xchg
scas
cwtl
xchg
and
mov
iret
jo
bound
dec
out
mov
pop
data16
imul
lahf
xchg
into
jl
jno
cs
xor
shll
inc
mov
leave
cmp
gs
push
lea
pop
dec
sub
pop
jmp
jl
and
rorb
ljmp
outsl
mov
dec
adc
int
push
int
pusha
rclb
jo
sti
inc
jno
mov
push
dec
fwait
mov
mov
sbb
mov
xchg
inc
outsb
outsb
loopne
push
mov
mov
pop
shll
mov
imul
pop
les
jmp
fsubrl
out
mov
mov
jge
out
mov
into
mov
ljmp
out
inc
add
mov
sbb
dec
jmp
adc
jbe
add
pop
out
pop
inc
rcrl
mov
insl
fs
in
jne
lahf
mov
xchg
repnz
das
pop
stos
jnp
or
adc
loop
outsb
pop
arpl
pop
pop
xor
frstor
add
daa
xor
arpl
push
pop
mov
ss
sub
add
pop
mov
cmp
pop
jp
out
ja
xor
or
jbe
hlt
cmp
pop
xlat
loopne
xchg
mov
mov
lahf
push
mov
lea
jns
imul
out
jle
push
and
in
xchg
scas
xchg
fisubrl
decl
xor
mov
mov
lock
es
mov
mov
pop
test
pop
mov
cmp
xor
jg
daa
adcb
cmpsb
cmp
sbb
adc
adc
int
mov
stos
cmp
jae
and
mov
adc
push
pop
in
shll
jo
xchg
and
loopne
and
insl
stos
imul
sub
mov
dec
in
pop
into
data16
scas
jno
test
cvttps2pi
stc
dec
mov
rorl
js
stos
out
sub
lea
icebp
popf
nop
push
cmpsl
scas
jne
pop
sub
insb
xchg
iret
clc
mov
lret
iret
test
aaa
lret
pop
in
inc
int3
add
xor
push
insb
clc
push
std
cmp
sbb
jmp
pusha
mov
jne
jecxz
inc
repz
pop
xchg
stos
sub
mov
push
xchg
das
xchg
sbb
add
jae
add
jmp
jb
nop
push
stos
xlat
sub
xchg
rolb
sub
pop
add
pop
jmp
jb
sarl
outsb
add
test
pop
adc
js
data16
lret
iret
sub
lods
je
add
nop
pop
dec
clc
lret
mov
jge
aad
mov
xchg
jb
xor
or
jg
or
insl
popa
rclb
and
or
push
ja
mov
loop
arpl
lds
push
cmp
mov
xchg
clc
jb
cltd
cmp
icebp
jg
cs
xchg
cmpsl
lock
stos
pop
inc
test
mov
fcmovbe
cmp
xchg
mov
lea
dec
mov
jl
loope
or
jmp
xchg
sti
ret
daa
neg
push
fistpll
mov
mov
mov
pusha
mov
fisubs
jmp
or
jns
push
pop
imul
sarb
lcall
inc
mov
nop
sbb
or
add
jne
pop
loope
mov
or
outsl
popa
jecxz
in
push
cmp
lahf
cmp
mov
test
aad
adc
jo
and
dec
push
xchg
orl
out
jle
jmp
push
mov
sbbl
lret
les
cli
sti
popf
test
adc
mov
push
cld
xchg
and
mov
inc
push
mov
xchg
out
shl
sub
pop
xchg
inc
add
mov
cmp
xor
cmpsb
mov
in
xor
popa
cmp
ficoml
leave
aam
and
lea
jl
sub
pop
push
or
jnp
divb
cmp
or
and
xchg
cli
pop
fsubp
push
sub
cld
jb
test
cmc
popa
or
js
lahf
jns
cmpsl
cmc
iretw
loopne
xor
testb
cmpsl
inc
and
call
pusha
std
jp
out
aaa
cmc
fucom
mov
mov
enter
mov
rorb
push
addr16
jnp
sub
jne
cmp
imul
adc
test
fnstenv
movsb
imul
dec
jmp
js
fs
gs
lahf
sbbb
add
sub
dec
cmp
sbb
adc
ja
test
dec
loopne
repz
xor
loope
pop
sub
mov
pop
hlt
icebp
mov
test
dec
mov
fs
cmp
add
inc
or
in
sti
inc
pop
imul
push
je
pushf
and
fwait
rorl
repnz
push
cmpl
loop
jno
pusha
adc
or
adc
pop
xor
sahf
fwait
in
jne
cmp
insl
xchg
push
or
mov
xchg
call
addr16
cmpsb
inc
inc
popf
mov
fs
sbb
pop
adc
sti
cmc
and
inc
xor
mov
mov
je
xchg
cmp
iret
add
add
outsb
pushl
test
sbb
int3
xchg
mov
adc
push
leave
loopne
add
jmp
arpl
adc
cmpsb
das
aad
out
push
xchg
mov
lcall
pop
call
sub
cmpsb
ret
mov
insb
lcall
cmpsb
int3
jg
mov
xor
push
iret
mov
inc
pop
jp
cmp
mov
rcrl
icebp
into
fstl
add
cs
jle
das
dec
sbb
insl
dec
pop
push
jns
push
hlt
sbb
andl
addr16
sbb
call
out
mov
daa
sub
repnz
aas
mov
icebp
push
repnz
movsb
xor
repnz
xor
and
iret
push
test
stc
insb
pop
sub
cmp
push
xchg
aam
mov
stos
jl
fs
lret
andl
imul
das
inc
inc
jg
hlt
sbb
mov
pop
into
test
cmp
cld
shlb
out
loop
dec
in
icebp
sbb
sub
xchg
lock
loop
insl
fidivrs
out
add
sub
jp
adc
mov
dec
outsl
hlt
cli
sbb
stc
pop
leave
mov
push
cltd
cmp
enter
pop
add
js
push
mov
data16
fildll
xor
rcrl
mov
test
or
sbb
mov
xchg
cltd
jbe
insb
cltd
and
cmpsl
out
xchg
fsubrl
pop
sub
xlat
ss
stc
test
mov
jmp
xchg
inc
and
jo
mov
jmp
mov
pop
xchg
fdivl
in
ljmp
jg
pusha
ss
sbb
pushf
test
ja
xorl
mov
sub
adc
movsl
orl
dec
test
les
or
outsl
xchg
test
sbb
jne
add
scas
cmp
jnp
push
movsb
mov
push
es
sbb
aad
loope
and
cmp
pop
insl
mov
and
and
lods
loopne
cmpsb
std
add
add
int
cs
jno
outsb
mov
leave
out
pop
ljmp
add
push
sub
and
call
sub
outsb
or
repnz
fdivrl
gs
ljmp
fwait
and
or
xor
lcall
hlt
push
mov
pushf
push
cmp
cmp
aas
lock
test
gs
shl
les
cmp
sbb
out
mov
iret
mov
addr16
adc
sti
push
sbb
daa
inc
dec
leave
mov
push
xor
fs
inc
add
lods
or
jle
dec
das
inc
mov
inc
pusha
sub
sti
sub
fsts
rorl
mov
jo
sub
add
push
sub
aad
sub
push
sbb
jne
jnp
pop
sub
inc
loop
xchg
and
mull
jo
es
out
test
mov
popaw
or
or
xchg
mov
gs
push
mov
inc
lds
lds
jecxz
jns
add
mov
mov
addr16
fldenv
andb
es
rorl
pushl
xor
addr16
iret
jp
adc
jae
xchg
int3
es
xor
cmpb
ret
jbe
fistpll
jbe
sbb
push
cs
add
xor
sbb
enter
mov
dec
mov
test
fists
sbb
and
or
mov
fdivrs
inc
dec
mov
pop
dec
cwtl
lahf
stos
cmc
decl
xlat
mov
mov
stos
mov
ffree
ret
insl
jecxz,pt
inc
out
sbb
mov
in
sbb
cmp
lcall
jne
cld
push
scas
int
sub
cmp
andl
and
mov
lds
daa
loope
loopne
cltd
push
rorl
icebp
xchg
or
test
pop
mov
test
leave
add
push
call
mov
inc
jmp
dec
mov
aas
jno
sti
lock
pop
in
outsl
call
roll
jle
or
mov
das
jb
jae
sbb
stos
into
mov
xlat
loopne
aaa
gs
dec
cmp
adc
iret
pop
fstl
push
roll
add
sub
xchg
sarb
nop
insl
cmp
mov
int3
sbb
sub
mov
loopne
mov
ljmp
in
add
mov
inc
pop
dec
and
xchg
popf
xchg
push
mov
push
cmp
mov
cmpl
dec
push
scas
loopne
pop
cmpsl
mov
fldenv
cmp
fsubl
or
adc
insl
sbb
lods
jg
stos
movsb
test
xchg
sbb
mov
sub
popl
pop
pop
jmp
jo
aad
addr16
stc
sbb
filds
and
test
xor
and
out
mov
cmp
loopne
imul
in
fs
xor
ret
mov
loopne
lcall
in
cmpb
xchg
test
cmp
js
outsb
hlt
xor
or
ds
push
insl
mov
mov
and
je
mov
ret
add
out
cmpsb
cmp
sbb
daa
rcl
ficomps
jp
loope
test
xor
mov
mov
mov
mov
sti
and
lret
lret
inc
pusha
xor
push
mov
divl
int3
dec
jb
setge
fdivrs
mov
hlt
xor
and
xor
sub
dec
jns
loope
sbb
mov
xlat
cld
mov
xor
jne
adc
sub
xor
push
pop
scas
and
adc
rcrb
shlb
add
push
test
cli
into
orb
dec
cmc
mov
xchg
push
or
add
arpl
outsl
add
iret
fldenv
jno
into
push
jg
scas
inc
negl
xor
mov
sbb
fcoms
jecxz
push
test
pusha
pusha
push
fildl
das
jnp
sub
or
xor
adc
sbb
mov
aad
es
jae
insl
lret
and
lods
xor
je
pushf
sbb
into
mov
mov
mov
stos
mov
push
sbb
mov
pop
pop
dec
mov
xchg
in
mov
jb
idiv
lahf
in
cmpl
ss
pop
dec
pop
mov
dec
int
imul
arpl
clc
inc
daa
push
les
inc
mov
loopne
xchg
mov
stos
mov
arpl
mov
cmp
mov
xor
dec
inc
cld
and
inc
arpl
mov
mov
sub
ret
mov
adc
push
pop
or
and
pusha
pop
fwait
xchg
shrl
rcl
mov
mov
je
rclb
mov
mov
and
movsl
cmp
jae
scas
pusha
jl
jge
sub
inc
into
xchg
sub
xchg
add
loope
mov
cmp
pop
add
pop
std
enter
and
ret
adc
dec
dec
lahf
cwtl
ficoms
test
es
jae
cmp
sti
pop
shll
push
addr16
push
cmp
pop
inc
mov
or
loop
cmp
imul
or
cltd
test
jne
push
call
push
pop
lods
dec
sbb
icebp
cmpb
xor
inc
dec
cwtl
popa
cmp
insl
es
roll
insb
dec
iret
xor
push
sbb
in
push
jg
outsl
cmp
xor
push
pop
cltd
imul
mov
dec
cmp
pop
ljmp
pop
xor
pop
sub
mov
aaa
pop
movb
test
dec
pop
mov
push
sub
in
jns
or
push
movsb
push
push
fnstenv
dec
iret
cld
push
je
mov
lds
xchg
repz
sub
pop
sub
cld
sbb
pop
push
ss
ret
sbb
orl
mov
mov
jne
push
adc
pop
aas
xchg
sar
shlb
mov
jne
push
shlb
dec
pushf
leave
inc
imul
lahf
iret
mov
jmp
push
jmp
mov
add
mov
ds
icebp
into
fmul
push
lock
inc
sub
scas
mov
add
scas
outsl
add
loope
jno
jge
push
xlat
inc
push
cld
mov
lods
xchg
sbb
cltd
data16
in
xchg
hlt
add
aaa
jecxz
pop
popa
and
push
fistps
sub
mov
outsb
cmp
push
dec
fistpl
loope
push
sub
movsl
jb
nop
and
jae
jmp
cmc
xchg
test
xchg
into
in
mov
mov
out
in
dec
inc
mov
arpl
int
pop
incl
xchg
xor
jae
jge
add
lods
adc
dec
mov
add
loope
xor
xchg
push
pop
adc
or
xchg
adc
iret
movsb
mov
movsb
fwait
jge
std
adc
dec
repz
push
fidivrs
sti
test
xchg
scas
in
popf
xchg
dec
mov
je
dec
shll
pop
mov
xor
lret
data16
arpl
push
and
xor
mov
cwtl
out
mov
fstps
je
out
pop
repnz
cmp
push
aaa
leave
cmp
cwtl
stos
popf
loopne
in
inc
sub
adc
inc
iret
push
xchg
ret
dec
sbb
test
mov
dec
sbb
pop
flds
jge
dec
dec
js
sub
xchg
xchg
jns
add
hlt
dec
aad
sti
pop
sub
sub
dec
jns
push
lret
fwait
adc
cltd
pop
or
mov
add
test
enter
sub
fcompl
ljmp
add
dec
mov
mov
inc
ffree
inc
adc
mov
push
stc
insl
aam
je
dec
adc
jmp
in
add
and
ds
js
les
jno
mov
xchg
test
pop
mov
idivl
cwtl
lea
mov
cmpsb
into
rorb
mov
stos
std
cld
sbb
lret
mov
fmuls
sbb
xor
js
mov
or
in
leave
hlt
stc
stc
imul
sub
jle
fs
xchg
jmp
inc
adc
dec
mov
inc
jne
mov
mov
cld
stos
xor
xor
shrb
mov
das
imul
lods
push
outsl
jb
fistpll
push
cli
xor
adc
and
jns
ficoms
mov
add
and
mov
out
cmp
jne
cmp
test
lret
repz
imulb
das
pop
popa
sub
adc
test
fsubr
movsb
xchg
jg
pop
ds
lahf
mov
cmp
sub
test
pushf
imull
out
ds
fs
sub
scas
leave
sarl
xorb
lods
out
pushf
scas
dec
or
out
sahf
leave
out
dec
mov
cmp
lret
push
loope
scas
mov
es
xchg
std
mov
mov
lods
xor
mov
dec
or
xor
test
pop
std
lret
out
pop
fst
shrl
in
dec
xchg
movsb
dec
orb
adc
jp
cs
xchg
outsb
xchg
push
movsb
dec
inc
shll
popf
fs
mov
repz
cld
lock
jns
aas
mov
out
daa
add
in
lea
cs
adc
push
fs
and
in
out
push
test
daa
nop
or
popf
in
dec
in
xchg
lock
inc
iret
and
xor
mov
and
cs
dec
push
dec
inc
dec
jecxz
or
js
push
push
enter
js
inc
push
dec
mov
dec
jg
and
pusha
jge
fildll
and
test
lahf
pushl
cltd
jns
aas
mov
push
inc
mov
push
add
sbb
and
mov
cs
lods
lods
fildl
lahf
lret
repz
insl
ret
dec
inc
cmpsl
sbb
in
aad
fcompl
push
loop
jns
cmp
ret
into
outsl
rorb
aas
xchg
xchg
xchg
add
mov
pop
nop/reserved
std
cmpsb
out
jbe
lds
stc
mov
jnp
adc
jg
dec
sti
or
push
out
xchg
inc
imul
push
das
mov
iret
jo
int3
push
xor
and
cmpb
sub
fstpt
add
insb
cmp
movb
lods
mov
mov
fidivrl
push
push
sub
pop
pop
xchg
inc
xor
adc
lcall
cwtl
xor
pop
cmpsb
lods
inc
xchg
loopne
and
xor
xor
push
stos
js
rol
push
add
aam
cld
cli
arpl
shlb
test
xor
pop
or
stos
rclb
call
out
dec
xor
sub
xchg
sbb
cltd
fwait
movsb
dec
popf
orl
lock
lock
icebp
addb
push
sti
cltd
pop
adc
sbb
jbe
inc
in
dec
mov
sub
mov
add
in
stos
add
rcrb
stos
mov
ds
mov
int
inc
ret
add
aaa
xchg
add
hlt
xor
test
push
pop
jp
adc
lea
js
jae
inc
pop
mov
inc
cli
lds
mov
std
cmc
jge
jecxz
insl
shll
pop
mov
mov
inc
inc
dec
pop
or
xor
jmp
push
and
movsb
test
orl
daa
or
mov
sub
dec
mov
inc
lret
inc
sar
out
jbe
and
xchg
cld
pop
movsb
lret
dec
loop
cmpsl
xor
mov
adcl
pop
jg
test
sbb
ret
and
sub
pusha
and
ret
jecxz
pop
inc
cmp
adc
inc
out
fwait
subl
jbe
nop
arpl
popa
nop
xchg
and
scas
or
add
aam
inc
xor
pop
addl
mov
cltd
jp
and
sbb
clc
mov
aad
push
inc
insl
dec
mov
mov
mov
dec
dec
imul
mov
in
inc
mov
fdivl
jbe
loop
jb
adc
lret
xchg
adc
push
scas
in
rclb
dec
inc
fs
fdivp
lds
xor
dec
jp
imull
jnp
in
jl
int
lock
add
out
xor
dec
sub
sbb
popf
xchg
add
xor
pop
mov
data16
pop
rorb
sub
movsb
or
mov
mov
test
sub
movsl
ss
insl
push
std
outsb
jno
xchg
push
xchg
fisubrl
mov
xchg
rorb
mov
inc
cmp
push
dec
loopne
notl
data16
xor
in
jl
lea
cltd
shr
mov
xor
mov
dec
int
mov
mov
divb
dec
pop
rcl
arpl
repz
cli
pop
jnp
mov
add
std
rcrb
out
sahf
sbb
cli
push
jecxz
std
xchg
or
sbb
add
jae
pop
out
xchg
ret
push
and
cmp
mov
mov
push
rolb
dec
push
and
add
insb
imul
scas
subl
cmpsl
pop
push
mov
enter
data16
pushf
fs
push
lds
int3
daa
jge
xchg
dec
jb
mov
sub
jne
xlat
sbb
insb
pavgb
dec
push
pop
lods
xchg
mov
sbb
das
push
mov
add
xchg
add
int
and
inc
outsb
mov
sti
in
lea
mov
mov
inc
ficompl
dec
mov
shrb
lea
jbe
dec
out
stos
sub
sbb
mov
mov
insb
mov
imul
and
push
adc
xchg
ja
adc
mov
mov
xchg
mov
xchg
shll
mov
add
dec
add
mov
xchg
test
fbstp
push
out
test
aas
in
js
sbb
std
push
lcall
mov
add
pushl
imulb
loopne
jns
inc
ds
iret
leave
loopne
push
jge
or
inc
daa
shll
jecxz
aas
mov
ljmp
rcr
hlt
dec
int3
cltd
cmp
scas
jns
fisttpll
mov
shlb
cmp
daa
mov
mov
cmpsb
test
out
jb
das
inc
mov
add
cli
call
mov
jb
ja
sbb
fiaddl
das
cmp
es
dec
movsl
pop
jae
jl
sub
inc
aaa
popf
and
cli
dec
sub
push
jbe
and
orl
cmc
mov
fs
pop
iret
fucomp
ds
loope
dec
mov
jg
aaa
mov
jne
shrb
mov
popf
mov
mov
outsl
int3
fldt
lahf
hlt
mov
sahf
add
xchg
xchg
push
inc
adc
pop
push
or
das
dec
aaa
xor
inc
xchg
repnz
sub
mov
out
repz
pop
not
jp
es
add
insb
int3
add
je
xor
bswap
sub
ds
insl
fiadds
sbb
push
out
sar
jb
out
out
xchg
aas
sarl
cmp
mov
cltd
loopne
dec
cmp
add
ficomps
dec
push
jle
jl
jp
lret
je
outsb
fiadds
jg
xor
cli
or
aam
imul
int3
xlat
dec
movsl
aas
movsb
rcll
std
ja
and
jg
int3
lds
cmp
mov
pop
xchg
cli
mov
xchg
mov
mov
movl
inc
jmp
add
dec
and
mov
cmp
jge
push
aaa
cmp
sbb
pop
lock
outsb
aad
mov
add
fucomip
jo
sub
addr16
nop
daa
xorl
cmp
pop
jle
pop
fnstsw
sbb
mov
xor
cmc
and
mov
add
dec
cmc
scas
add
push
cmc
in
outsl
mov
insl
mov
test
test
push
adc
jno
and
fs
les
mov
shrb
and
shll
lds
jecxz
ja
fidivrl
xor
inc
mov
jbe
out
or
adc
cmp
adc
fucomp
add
mov
adc
movl
xlat
mov
and
pop
sbbl
xchg
outsb
mov
add
push
mov
pop
nop
mov
inc
xor
lcall
push
inc
mov
incb
cs
insl
xor
in
jg
mov
enter
inc
lods
pop
ret
div
mov
fwait
jb
test
push
fsts
fst
inc
push
add
out
mov
fstl
insb
push
pop
xchg
ds
dec
inc
repnz
and
and
movsl
dec
and
int
pop
sbb
xchg
adc
and
dec
push
ret
push
negb
jg
int
inc
inc
push
xor
adc
dec
sub
mov
mov
jle
mov
incb
mov
idivl
cmp
push
movsb
orl
inc
stos
ja
mov
outsb
xor
dec
loope
dec
gs
fdivs
inc
popf
lods
pusha
inc
cwtl
mov
pop
fistl
cli
sub
daa
dec
xchg
lods
mov
mov
or
cmp
js
xchg
out
sbb
sti
stos
mov
xchg
and
test
sbb
icebp
in
mov
nop
inc
nop
dec
push
les
xlat
jmp
insb
sub
lcall
push
aam
movsb
sti
imul
sub
mov
jg
inc
jmp
std
sti
jo
fisubrl
les
repz
iret
repnz
and
nop
xor
mov
inc
jecxz
and
cmp
scas
sub
addr16
inc
push
mov
dec
push
adc
lods
push
xor
movsl
js
mov
xor
repnz
add
push
add
clc
das
cwtl
mov
fwait
pop
and
mov
jge
xor
lret
mov
lods
call
jmp
stos
pause
xor
xor
jmp
push
jg
push
bound
in
addr16
xchg
outsl
or
pop
notb
sub
ss
mov
jno
xchg
faddp
adc
lods
pop
xor
cmpsl
pop
lea
mov
mov
cld
adc
adc
fs
dec
push
sahf
adc
mov
ss
push
mov
jae
jo
dec
inc
adc
push
cmp
std
in
outsb
mov
push
and
xor
fstpt
pusha
fcoml
pop
fadds
dec
jno
stos
xlat
pop
push
xchg
mov
fnsave
mov
fdivs
ds
icebp
cmc
inc
xchg
daa
sbb
push
mov
daa
or
push
rcll
dec
sub
cmp
inc
movsl
scas
dec
jp
mov
sbb
rcll
addl
neg
dec
cmpsb
mov
or
inc
jg
push
inc
add
fidivl
scas
add
lods
outsl
cmp
cmp
jl
mov
in
mov
cmp
out
movsl
in
dec
sbb
push
out
add
pop
mov
into
mov
xor
bound
popf
in
inc
in
xor
aas
jecxz
scas
or
mov
pusha
das
mov
stos
or
pop
aaa
clc
repnz
test
out
jbe
and
pushf
sub
lret
push
loop
inc
mov
or
xchg
outsb
inc
fstpl
cwtl
loop
ljmp
pop
or
outsb
outsb
jmp
imull
and
sahf
xor
push
xchg
fiaddl
stos
sbb
cmp
rolb
xchg
pop
pop
ja
daa
dec
aam
cmp
dec
lret
das
or
push
jno
frstor
lock
or
out
pop
and
stos
addr16
fisttpl
pop
lcall
leave
add
pop
inc
and
loopne
rorl
or
pushf
mov
inc
push
lods
es
inc
stos
mov
lret
ljmp
loope
sub
sub
sub
xor
sti
dec
xchg
dec
loopne
adc
inc
push
push
adc
mov
icebp
push
repnz
stos
ffree
repnz
pop
bound
outsl
sti
inc
test
or
adc
dec
in
loopne
push
pop
or
xor
call
shl
and
sbb
sti
pop
movsb
fcompl
inc
lods
movsl
outsl
test
adc
push
jno
or
popf
outsl
xor
cmp
clc
insl
daa
sbb
mov
ret
xchg
leave
bound
fiadds
fxch
mov
fnstenv
mov
inc
sub
arpl
ret
cmc
or
jge
inc
jbe
lcall
inc
jecxz
mov
shl
xor
inc
mov
daa
lahf
or
scas
popf
aas
pushf
sti
pop
js
push
shlb
addb
ljmp
pop
and
mov
mov
dec
mov
aas
push
mov
mov
scas
aaa
rcr
fistl
sub
pushf
jle
in
cli
das
push
xchg
popa
outsl
mov
mov
outsb
jg
hlt
cmp
fmul
xchg
stos
lods
cmp
movsb
lcall
mov
hlt
decb
xchg
jmp
jmp
pop
adc
es
pushf
mov
mov
insl
sbb
mov
pop
lea
insl
lcall
in
push
fcmovnbe
repz
out
arpl
or
pop
mov
pusha
pause
aas
jno
fsubr
and
fcomps
stos
aad
sbb
shl
mov
enter
adc
jmp
push
stc
cmc
idivl
xor
stos
jnp
cmc
rolb
aad
add
push
lret
add
add
mov
or
jp
in
or
jmp
movsl
loope
xor
js
and
or
stos
repnz
es
push
sub
bound
andb
mov
fldt
and
xchg
cmpsb
mov
cmp
movsb
adc
in
cli
sti
jns
sub
xor
mov
negl
cmp
lock
sete
push
in
jp
inc
pop
rcll
mov
push
fistl
jb
inc
pop
mov
inc
push
lds
sti
lock
xor
je
push
loop
out
xchg
add
sbb
mov
movsb
jle
xchg
stos
test
loopew
push
xor
push
fcomi
mov
int3
bound
insl
in
push
out
gs
or
add
shl
cmp
sbb
insl
sbb
push
int
lods
mov
push
xchg
out
rorb
ss
xchg
shl
sbb
or
mov
rclb
lcall
ljmp
out
xlat
mov
rorl
xchg
pop
mov
out
arpl
bound
imul
test
test
lods
xor
mov
mov
inc
sub
loope
lret
pop
mov
xor
push
pop
rorl
xorb
dec
fldenv
bnd
ds
or
xor
cwtl
jo
xlat
outsl
loope
dec
popf
cmp
dec
sbb
loop
arpl
arpl
cmp
ds
int
mov
ret
adc
sub
int
mov
sub
popf
jge
push
test
push
inc
lods
outsl
int
add
scas
push
bound
scas
and
dec
mov
sub
dec
sub
jle
in
std
cli
push
jmp
in
or
and
push
or
sti
rol
or
mov
repnz
fistpll
lods
add
cmp
out
push
mov
repnz
sbb
sbb
sbb
out
dec
fsubs
in
or
or
push
fs
icebp
cld
dec
xchg
or
lea
cmc
push
and
sbb
out
inc
jg
ret
ljmp
cmpsl
jecxz
mov
les
and
iret
out
dec
wbinvd
add
pop
mov
xchg
add
dec
mov
jns
lret
pushf
imul
test
jae
sbb
push
scas
mov
sbb
cli
lds
sbb
test
in
mov
add
jb
cmp
in
lods
testl
jmp
mov
xlat
adc
xchg
mov
inc
aas
lcall
es
popf
jle
repnz
cmc
scas
jle
add
fdivrs
xchg
jnp
jne
call
adc
loopne
or
arpl
divl
scas
adc
add
mov
mov
lods
push
fnop
jb
lret
call
in
fistpl
jb
mov
cmp
mov
arpl
dec
sbb
imul
test
or
lcall
imul
mov
test
or
popf
stos
cmp
jp
aam
dec
cld
lret
ret
xor
lahf
add
add
stos
cld
sub
and
out
jp
push
inc
dec
pop
pop
dec
jl
mov
pusha
insl
inc
mov
add
cmp
adcb
add
inc
adc
js
mov
ret
jno
shll
xchg
int
loop
push
insl
stc
fdivl
cmpsl
add
mov
push
rol
push
sub
push
push
ds
lock
daa
dec
inc
jb
and
push
aaa
imul
xchg
lods
cwtl
fwait
add
inc
fisttpl
loope
nop
icebp
jns
inc
push
lahf
stos
std
movsl
cmp
mov
mov
jno
cmp
pop
mov
out
sahf
int
fcoml
insb
test
mov
add
cwtl
adc
add
or
xorb
cmpl
mov
shrl
outsl
cli
out
into
rcll
mov
push
jge
xchg
xor
in
int
xorb
xchg
mov
push
imul
shrl
iret
mov
pop
and
scas
adc
ljmp
add
cmp
sahf
shll
lahf
push
jne
int
movsl
hlt
fs
out
in
fsubl
repnz
dec
outsb
cltd
jb
mulb
clc
push
dec
add
sarl
je
inc
lret
jno
shlb
mov
inc
or
xor
mov
jp
outsb
cli
jg
shlb
repnz
sbb
nop
popa
mov
pop
jl
fisttpl
xor
test
mov
lods
sbb
push
nop
xor
jne
hlt
inc
xchg
in
adc
mov
xchg
out
lahf
dec
lock
cmp
rcll
ror
jb
cmpl
push
xchg
jmp
shll
sbb
mov
fldcw
jb
ret
mov
cmp
xchg
mov
mov
sbb
sub
xor
xchg
insb
cmp
pushf
xchg
adc
je
loope
mov
sub
or
sbb
add
adc
fistl
in
bound
add
jecxz
jno
mov
sahf
sub
xor
scas
mov
aad
mov
idiv
xor
sub
jmp
xchg
sbb
add
push
aaa
push
nop
and
xchg
enter
imul
jmp
andl
inc
cwtl
pop
jb
mov
sti
jae
inc
sbb
sbb
push
add
dec
popf
push
jp
dec
ss
ficoms
adc
and
lods
imul
outsb
cmp
or
into
data16
dec
jne
xor
cmpl
or
pop
and
test
loop
test
in
aas
repz
fistps
or
in
leave
addr16
in
je
mov
push
les
adc
dec
mov
scas
pop
nop
push
jecxz
test
pop
xchg
movsl
inc
sbb
test
bnd
and
test
repnz
xor
mov
xor
xor
inc
movsl
popf
stos
test
je
outsb
sarb
test
fnsave
mov
xchg
inc
mov
roll
fdivl
fwait
jg
in
push
sub
and
inc
inc
pop
cld
push
jmp
insb
and
test
fimull
nop
jecxz
pop
enter
mov
xor
xchg
cmpsb
movsl
add
lret
test
cmpsl
jo
jg
test
mov
mov
iret
push
scas
and
jle
test
mov
repnz
jg
mov
jnp
inc
adc
dec
outsl
lods
adc
scas
adc
aad
dec
das
add
into
bnd
add
insl
shlb
jg
mov
push
mov
or
js
sti
and
cwtl
mov
pop
mov
and
cmp
and
shrl
pop
into
repz
cwtl
ret
popa
neg
mov
mov
dec
mul
nop
jg
stos
sahf
xchg
nop
push
inc
push
pop
pop
jb
rcll
inc
mov
or
xchg
pop
push
stos
out
es
ret
push
push
mov
scas
in
or
pop
adcl
pop
jbe
cmp
pop
fisttpl
xor
outsb
dec
scas
and
jg
mov
les
mov
xor
cmp
adc
inc
mov
cwtl
cmp
cmc
movsb
icebp
loop
movsl
cmc
xor
cwtl
loopne
aad
into
loopne
loopne
cmpsl
repnz
divl
sub
inc
push
leave
jp
stos
or
imul
xor
xor
push
stos
mov
pop
cli
test
xor
jl
test
sbbl
jg
and
and
andl
mov
adc
xchg
inc
sbb
mov
rcrl
mov
pop
rcr
push
inc
xstore-rng
cmpsl
add
jge
push
arpl
xchg
or
and
movl
insb
jl
int
adc
jae
xor
cmp
mov
inc
xor
sbb
lds
sti
mov
add
decb
and
les
mov
cmpsl
jmp
adcb
dec
cmp
popa
out
xlat
xchg
sti
aas
addl
shll
cmpsl
fisttpll
adc
fidivl
call
push
lret
lea
inc
xchg
fldl
or
mov
xchg
inc
es
jae
in
and
popf
mov
sti
mov
leave
pop
and
adc
aaa
pop
pop
shrl
ds
and
je
lret
mov
mov
out
pop
ret
rclb
mov
or
cvtps2pi
jp
xchg
int3
xor
arpl
jno
negb
or
fsubrp
dec
shll
jmp
dec
lcall
or
or
addr16
mov
adc
nopl
pop
jp
inc
adcb
xor
mov
arpl
pop
out
in
jecxz
ret
shll
push
addr16
cmp
adc
rcl
mov
daa
mov
hlt
cli
jge
lret
test
stos
adc
xchg
jge
leave
repz
jno
mov
mov
mov
lock
or
dec
or
add
jae
and
inc
cmpsb
cltd
xor
mov
stc
ret
mov
clc
xor
and
stc
jmp
int3
in
mov
push
mov
jae
repnz
mov
rcrb
xchg
inc
add
push
lret
inc
pop
sub
sub
movsl
scas
cmp
lock
pop
movsb
pop
sub
and
adc
clc
lret
cld
and
arpl
ss
push
dec
inc
cltd
and
movlps
loop
cmc
xchg
jae
mov
rcl
pop
cmp
rcrb
lods
cli
mov
int3
jecxz
mov
xor
sbb
mov
xor
scas
iret
aam
lds
addb
sub
repnz
xchg
into
push
scas
lahf
mov
mov
or
call
and
scas
cmc
ror
pop
stos
fs
pushl
pop
aam
add
cmp
cs
mov
sbb
push
clc
popw
and
ss
push
fldt
push
inc
inc
leave
cmp
jae
ljmp
inc
ljmp
ficoml
mov
sub
das
dec
fldt
mov
sar
push
mov
pop
and
adc
xchg
stos
pop
sub
fistpl
into
xor
xchg
sbb
test
shlb
sub
call
xchg
fwait
add
dec
mov
pusha
ret
fstps
ljmp
repz
icebp
ret
mov
pop
ds
ss
cltd
mov
loopne
lcall
insb
push
fnstsw
fcmovu
push
cmpsl
or
hlt
out
jmp
fsubl
push
xor
nop
cmp
fwait
je
arpl
dec
sub
add
dec
mov
and
nop
scas
stos
inc
mov
cmp
push
dec
push
clc
sbb
sub
movl
pop
imulb
loopne
mov
ja
xor
decb
or
xchg
xor
cli
mov
mov
nop
loopne
mov
enter
mov
sbb
dec
mov
jl
std
jl
pop
ja
push
shr
test
and
mov
inc
cli
lret
fldt
mov
xchg
and
inc
inc
daa
cmp
push
outsb
adc
orb
cmovge
popf
lcall
inc
cmpsl
cmp
ret
mov
adc
and
lcall
jo
inc
xor
mov
cld
rcl
xchg
xchg
xor
add
dec
je
push
icebp
cld
out
jmp
mov
adc
lods
jne
mov
add
xor
outsl
ds
stos
lock
aad
lret
push
test
gs
scas
xchg
lds
scas
in
sbb
loope
jl
jl
mov
clc
stos
imul
mov
rclb
mov
mov
jb
mov
ljmp
push
push
out
xchg
push
mov
imul
mov
mov
cli
imul
pop
xabort
popa
stos
cmp
movsb
scas
cmp
loopne
add
pop
push
cmp
sti
test
xor
xchg
dec
mov
and
js
add
cmpsl
cwtl
lret
pop
insb
push
or
stos
in
inc
test
outsl
std
aas
push
dec
sub
stc
cld
pop
andl
jbe
push
sub
imul
adc
mov
shll
mov
lds
insb
cld
cs
add
adc
push
out
push
xchg
xor
push
jbe
les
inc
mov
sbb
or
sbb
imul
mov
mov
je
cmp
jbe
call
cmp
decl
test
mov
xchg
mov
pop
inc
inc
movb
test
cmovbe
push
xchg
inc
ljmp
add
mov
inc
xor
mov
negl
es
lds
in
fsubr
sbb
push
rcrb
insb
xor
sarb
lcall
jns
push
add
callw
add
in
fstl
cli
adc
js
test
daa
pop
movsl
or
jo
insb
jne
cmc
inc
jns
adc
popf
lock
sahf
nop
ds
lahf
lods
test
stos
jp
sub
fstpl
data16
push
mov
pop
sub
outsb
popa
cmpsl
test
outsb
loop
add
jnp
movsb
aad
xchg
xchg
adc
imull
xor
sti
cmp
hlt
das
rcrl
xchg
sahf
sbb
hlt
shr
addb
cmpsb
jge
lahf
xchg
mov
mov
cltd
xchg
cli
add
leave
outsb
faddp
mov
fstl
lods
sub
add
inc
push
ljmp
mov
mov
fildll
fnstcw
jp
sahf
dec
scas
cld
shlb
mov
mov
jmp
and
xor
inc
in
add
jl
mov
push
ljmp
adc
add
inc
cmpsb
sbb
clc
mov
enter
ja
les
xchg
imul
gs
pop
lods
mull
cmp
mov
ss
and
jmp
inc
or
xchg
pop
jge
pushf
popa
repz
mov
shrl
scas
ja
jno
in
fidivrs
cmc
or
xchg
jo
loope
cltd
jmp
xor
in
mov
js
xor
mov
adc
or
roll
pop
cmp
fs
adc
call
das
arpl
out
jp
loopne
ja
lods
mov
pop
mov
mov
outsl
push
fistpll
xchg
lret
jle
jbe
std
out
mov
repz
xchg
in
enter
or
stos
jmp
das
movsl
cwtl
andl
jae
sbb
bound
cmp
dec
js
push
bound
repnz
mov
xchg
test
sti
sbb
add
xor
pop
adc
mov
jno
cmp
push
mov
mov
nopl
negl
mov
xchg
or
xor
jp
sub
in
add
sub
and
jo
adc
push
xchg
lret
xchg
bound
cmp
stos
inc
push
sub
out
inc
insl
and
popl
leave
add
test
es
xchg
dec
test
movsb
xor
mov
mov
push
or
icebp
cld
in
imul
bnd
xchg
cmp
test
in
xchg
jae
movsb
xlat
inc
pop
lret
sbb
iret
push
jb
sub
or
dec
bound
xchg
rcr
rcll
push
or
inc
push
push
sbb
call
mov
adc
push
jne
add
cmp
inc
add
or
xor
stos
dec
and
in
jae
jmp
nop
add
adc
adc
pushf
daa
aaa
test
call
fldcw
push
out
dec
insb
jo
xchg
loope
int
push
or
fs
lcall
jne
js
scas
nop
pop
and
fwait
lock
xchg
test
scas
push
pop
or
or
scas
fistpl
hlt
mov
addr16
jle
mov
aaa
add
mov
xchg
ljmp
push
xlat
mov
pop
pop
jle
stc
outsb
cli
cmp
lock
adc
lods
inc
pusha
inc
loop
aas
gs
nop
push
pop
insb
fsubrp
push
adc
test
xor
push
xchg
jge
clc
sbb
test
jle
push
jecxz
adc
pop
mov
adc
in
adc
sub
stos
mov
sahf
into
out
pushl
mov
sbb
push
jmp
popa
mov
test
jno
pop
cmc
add
xchg
dec
push
bound
lock
jecxz
jb
jmp
das
and
sbb
push
out
push
jae
push
add
or
shrl
jg
cmp
imul
pushf
cmp
fistps
xor
mov
jmp
sti
out
mov
faddl
and
lds
add
insl
mov
jno
enter
ficoml
xor
adc
clc
insl
push
jnp
adc
sbb
shl
sbb
cmp
stos
xchg
mov
xchg
mov
xor
ja
subl
imul
jbe
jb
daa
inc
sbb
dec
adc
cmp
aam
pop
or
sub
dec
sub
add
jb,pt
test
call
push
mov
in
testb
and
cmpsl
imul
lea
sbb
dec
out
xor
pop
xor
xchg
in
fidivs
pop
or
pop
jl
or
jle
or
divb
xchg
cli
jno
push
popa
dec
aam
in
pop
sbb
insb
inc
into
stos
loop
xchg
xchg
inc
insl
inc
sbb
out
adc
mov
pop
and
mov
call
pop
sbb
stos
idivl
push
push
mov
repnz
mov
das
inc
jle
sbb
in
pop
frstor
sub
js
adcb
mov
lods
mov
adc
inc
sub
mov
and
dec
jmp
and
sbb
mov
and
imul
mov
lods
cmp
imul
cltd
lret
xchg
xor
mov
out
inc
dec
fidivrl
pop
ret
lret
das
ds
rcrl
cs
add
lret
cmp
mov
jnp
addl
xchg
pop
bound
jne
jecxz
or
dec
cld
das
and
push
sbb
cmc
imul
ljmp
cmp
mov
xor
cltd
fisttpl
and
push
cmpb
jecxz
jbe
nop
jl
pop
ds
inc
sbb
sub
lods
and
mov
in
addr16
pop
mov
xlat
sbb
rorb
mov
jecxz
dec
enter
jbe
inc
rol
decb
out
mov
and
mov
mov
inc
js
xchg
adc
mov
fisttpll
test
or
inc
mov
push
mov
movsb
adc
outsb
inc
push
loope
into
adc
mov
push
add
add
iret
in
adc
mov
or
mov
jmp
cmp
ret
clc
pop
push
sbb
shlb
out
cmp
sbb
lods
dec
and
push
mull
lret
mov
jb
sbb
out
in
jg
jl
mov
cmp
aas
mov
mov
out
icebp
pop
jp
push
inc
or
lock
je
jno
jle
loope
aad
test
sarb
cltd
xchg
push
outsl
mov
test
or
mov
xchg
shll
mov
sbb
lahf
rclb
mov
andb
in
daa
jbe
push
mov
push
insl
out
xor
pop
dec
popf
jmp
push
and
mov
jno
push
dec
call
sub
lea
jg
mov
and
mov
sbb
ret
stc
push
gs
loopne
pop
xor
shrl
scas
enter
pop
test
jge
xor
pusha
repz
in
ljmp
faddp
rolb
adc
mov
xchg
stc
mov
dec
xor
mov
sbb
stos
dec
cmp
xchg
xorl
xchg
push
repz
call
enter
sti
cmp
scas
insb
mov
ret
clc
shll
dec
cltd
xor
jmp
xor
ficompl
in
mov
shlb
xchg
pop
push
xor
hlt
les
or
rcll
xchg
jno
pop
add
jbe
mov
mov
inc
cmpsb
adc
mov
mov
lods
adc
pop
fdivl
and
jmp
enter
jl
scas
mov
in
andl
cmp
push
pop
jae
or
std
mov
das
dec
push
mov
movsl
xor
push
arpl
pop
or
in
lret
push
mov
test
jbe
dec
ljmp
stos
stos
push
icebp
out
das
push
iret
inc
lods
out
ljmp
cli
inc
add
and
xchg
outsl
call
push
dec
and
lock
and
fdivl
sti
mov
cmp
loopne
mov
cs
out
in
inc
and
xor
mov
dec
lcall
xchg
ret
or
scas
ja
mov
xor
lea
jb
adc
jns
mov
add
mov
ds
push
xchg
call
jae
aaa
sub
add
roll
sarl
xor
out
sub
sbb
loop
mov
sbb
jg
std
mov
pusha
dec
mov
adc
mov
jecxz
enter
sbb
rolb
mov
sbb
ror
and
repz
ret
or
nop
push
cmc
dec
lock
cmp
mov
push
inc
jno
scas
xlat
dec
das
adc
movsb
or
adc
pop
dec
les
jbe
fcoms
into
push
mov
mov
repnz
mov
scas
ljmp
popa
lcall
fsubrs
mov
lea
fstpl
cmp
pop
fwait
enter
xor
mov
mov
xlat
scas
sub
mov
push
cmp
jecxz
mov
ds
and
inc
inc
cli
lret
in
dec
fwait
test
push
fwait
mov
mov
daa
mov
cmp
nop
adc
jnp
fistl
ljmp
gs
aaa
scas
divl
cmp
ja
xchg
popa
movsl
imul
orl
ljmp
jp
add
sbb
xlat
and
les
jno
lret
jb
dec
mov
in
insl
jle
out
aaa
fnstsw
xchg
push
mov
ja
adc
shrl
stc
mov
arpl
dec
mov
cmpsl
cmp
stos
das
mov
mov
push
push
ljmp
pop
notl
mov
mov
bound
scas
sbb
call
ret
sub
stos
cmc
inc
jge
xchg
mov
pop
sub
fcompl
addr16
mov
jne
push
cltd
fbld
sbb
jb
add
push
jmp
xchg
xchg
aas
in
movsb
jl
sub
inc
cmp
xchg
jge
jmp
or
jge
jnp
loopne
popf
or
fisubl
rol
testl
mov
call
aaa
dec
add
mov
pop
in
dec
adc
ret
xor
jmp
jp
cmc
adc
push
pop
dec
scas
adc
inc
lcall
int3
pushl
jb
adc
xchg
lea
nop
inc
xor
cmp
scas
mov
rcrb
bound
rcrl
lock
mov
push
pop
imul
mov
mov
mov
aaa
adc
ficompl
sbb
imul
mov
test
sbb
scas
dec
fidivl
or
inc
cmovns
cmp
sub
fwait
mov
in
fidivl
mov
and
aaa
and
icebp
es
pop
pop
arpl
cmp
out
pop
enter
js
fwait
and
sub
xlat
jne
mov
add
out
in
loop
enter
sub
mov
lcall
outsl
push
loopne
cmp
adc
dec
rcrb
gs
or
notl
jecxz
and
push
rol
ds
aad
dec
out
fstps
mov
jb
das
jne
ficomps
adc
inc
pop
shlb
adc
stos
mov
aam
mov
lock
mov
insb
jne
insl
ja
mov
je
cmp
ret
cs
mov
pop
pop
cmpsl
lea
xchg
clc
bound
and
push
push
repnz
iret
cmp
jne
je
xor
pushf
fs
nop
inc
add
sub
cwtl
cld
out
cmp
pop
inc
mov
in
inc
cmp
mov
inc
dec
test
dec
dec
mov
mov
mov
arpl
or
sbb
adc
add
loop
ja
lds
xchg
cmp
mov
clc
ds
inc
cmp
fimull
mov
mov
ret
shll
push
xchg
dec
mov
or
mov
clc
aaa
and
xor
sub
outsl
xchg
jge
mov
in
push
popf
and
imul
jno
xchg
ljmp
cmp
add
mov
out
sbb
push
adc
les
add
out
pop
jb
pop
dec
mov
in
mov
in
push
pop
sbb
loop,pn
lds
sub
andl
cmp
cmp
jns
or
std
cltd
jne
sti
nop
icebp
fstp
xor
rorl
jle
in
mov
test
jb
out
sarl
std
leave
cmpsl
cltd
dec
in
jo
and
mov
pop
cltd
shl
cmp
or
add
or
dec
mov
mov
das
lahf
mov
dec
outsl
inc
ss
ss
bound
cmpb
sbb
mov
rclb
cmpsb
stos
ss
jb
rcrb
or
jecxz
xchg
inc
mov
mov
push
inc
xor
lock
clc
out
jnp
pop
dec
jge,pn
lahf
iret
mov
cmp
xchg
mov
xchg
mov
or
and
shrb
fsubs
fs
test
sub
cltd
push
jmp
insl
adc
in
addl
mov
addb
push
nop
test
push
cltd
xor
stos
xchg
mov
dec
xor
push
push
test
and
sub
int3
cwtl
imul
stc
dec
inc
dec
fisubrs
popa
jmp
shr
lods
enter
int3
or
call
dec
fcoms
mov
lret
outsb
sub
dec
mov
mov
test
insb
or
adc
sti
ja
cs
pop
jg
out
pushf
fisubs
push
ret
push
mov
fs
bound
and
ret
adc
daa
faddl
push
test
mov
jnp
lds
mov
dec
mov
push
sahf
mov
or
mov
mov
push
xchg
bound
adc
mov
inc
ljmp
out
and
test
push
scas
call
add
mov
popf
lret
dec
cmp
jb
and
into
and
cmc
lods
mov
and
and
xchg
add
push
and
out
mov
and
out
icebp
popf
and
fcoms
jle
mov
jo
aaa
add
push
sub
adc
mov
movsl
xor
aaa
adc
push
cmp
pop
push
pushf
adc
lahf
adc
je
js
mov
outsb
out
jnp
cmp
mov
add
scas
jb
push
jbe
xchg
mov
enter
cwtl
mov
inc
jmp
cmp
dec
fs
mov
mov
add
jg
cmp
or
cltd
or
and
testl
cmp
je
fdivr
adc
into
unpckhps
xchg
mov
inc
mov
lahf
or
jb
xchg
dec
jo
sbb
push
sub
mov
dec
sub
stos
or
push
add
or
lock
loop
outsb
imul
dec
mov
in
sbb
jnp
sub
js
cli
mov
mov
sahf
pop
fcomp
ss
xlat
pop
mov
lret
xchg
out
lods
aaa
push
jecxz
mov
or
es
shlb
js
adc
mov
lock
xlat
movsb
jle
mov
pushf
lds
sti
jno
push
orb
mov
repnz
jmp
in
push
ret
lds
addr16
test
mov
stos
popa
pop
out
popa
inc
inc
xor
pop
xor
and
and
rorl
mov
xchg
push
dec
fstpt
jl
ss
popf
add
stos
pop
lret
scas
sub
adc
pop
lock
ret
mov
push
gs
rorb
bound
jae
cli
and
sbb
jae
push
sub
cmp
inc
sub
mov
mov
sub
test
aas
imul
clc
dec
in
fbstp
adc
cmp
stos
sub
inc
cld
movsb
push
cmpsl
in
sbb
pop
sbb
xchg
xlat
outsb
outsb
movsl
cmp
cmp
jnp
push
rorl
mov
inc
adc
sti
leave
lock
lds
xchg
jno
dec
adc
arpl
mov
inc
aad
es
int3
jo
jae
jle
adc
ljmp
negl
pusha
dec
inc
clc
pop
imul
les
mov
inc
and
push
adc
push
push
icebp
mov
mov
jp
in
add
fidivrl
sub
mov
lahf
push
shll
or
pop
in
stos
and
push
push
add
cmp
sbbl
mov
push
mov
fdivp
mov
push
inc
aam
inc
enter
fimuls
cli
xor
ffree
das
add
inc
outsl
mov
mov
stc
add
adc
cmp
sbb
pushf
ret
scas
cmp
insb
jno
ds
mov
cmpsl
jo
mov
dec
lahf
mov
inc
fdivrl
inc
xlat
jle
adc
jnp
dec
dec
push
add
cmpsb
out
clc
dec
pop
scas
js
jb
and
sahf
aas
js
sbb
mov
ljmp
fadd
imul
xchg
rcll
insl
fstps
test
xor
leave
out
xchg
push
cmpsb
cmp
test
shr
mov
mov
jp
hlt
in
ss
popa
icebp
fisubl
fisubl
ds
cwtl
stc
xchg
sbb
iret
aas
lods
adc
xchg
cmp
sti
data16
xchg
scas
test
out
mov
ja
and
insb
mov
lods
or
in
jge
cmp
sub
add
mov
xchg
and
in
nop
and
fistpl
xchg
cs
jecxz
rclb
xchg
leave
xchg
fdivr
mov
dec
jne
sub
pop
sbb
adc
adc
fstps
outsl
in
xchg
mov
mov
or
sub
sub
out
pop
fnstcw
mov
int
enter
push
cs
aas
divb
mov
adc
mov
test
out
xor
sub
xchg
out
or
mov
test
jo
jns
int3
inc
cmp
sub
rclb
inc
push
cmc
push
and
dec
hlt
cwtl
shrb
dec
fidivs
enter
xor
push
aaa
dec
int
mov
fidivrl
testl
cli
xor
gs
imulb
aam
or
dec
xchg
push
inc
es
icebp
inc
mov
xor
sbb
dec
adc
xchg
icebp
sub
sub
mov
jo
scas
in
cmp
clc
sub
shl
loop
cmp
cld
sbb
cli
insl
lahf
lock
mov
outsl
jmp
xchg
sub
test
ret
sub
jae
jnp
js
pop
cmp
and
into
pop
cs
mov
jnp
outsb
pushf
test
dec
ficoms
and
mov
mov
and
cwtl
adc
xchg
xchg
mov
stc
cmp
push
xor
cwtl
jmp
pop
xor
sbb
mov
test
jnp
cmpsl
mov
cltd
aad
sbb
fldenv
xor
sub
imul
lcall
repnz
arpl
aad
push
jne
sbb
pop
movd
mov
push
stc
or
and
daa
push
xchg
decl
push
into
jle
hlt
and
jae
adc
adc
adc
inc
js
dec
dec
clc
jnp
cmp
rol
xchg
loop
adc
fimuls
mov
xchg
mov
int
sarl
push
cmp
imul
jl
push
roll
xchg
subl
xor
aam
and
mov
sbb
mov
pop
push
iret
adc
bound
xor
cmp
xchg
imul
cmp
cli
mov
xchg
jmp
mov
xchg
add
sbb
inc
push
aam
hlt
jp
adc
pop
popf
mov
jb,pt
pop
inc
inc
jl
imul
test
mov
addb
stc
js
fldcw
lcall
int3
into
inc
faddl
cmc
mov
int
jmp
mov
loopne
push
cmpsl
mov
mov
or
push
xchg
fdivrl
lods
or
mov
lcall
nop
jl
push
cmp
clc
stc
or
mov
lods
fmul
xchg
repnz
scas
gs
cmp
inc
scas
dec
xchg
and
fiadds
lods
cmp
cltd
push
add
or
push
stc
mov
inc
repz
xchg
rorb
ret
test
push
bound
add
idivb
mov
jo
mov
aam
push
and
mov
cmpsb
and
sahf
icebp
mov
fisubl
ret
in
je
mov
dec
repnz
dec
mov
repz
into
sbb
jecxz
outsl
mov
scas
mov
out
xor
sbb
push
pop
in
pop
out
out
and
dec
pop
add
lret
mov
std
ret
adc
std
pop
test
and
call
mov
mov
xlat
les
inc
and
insl
aas
cmp
lds
cmp
out
mov
pushf
push
mov
in
mov
roll
xchg
pop
push
sub
imull
add
scas
pop
dec
push
or
aad
int
jae
mov
sahf
dec
pop
push
in
ss
mov
xor
mov
mov
push
mov
bound
inc
das
lcall
sbbb
sub
jnp
xor
punpckhwd
ret
jle
arpl
cmp
jns
call
or
cltd
xor
inc
mov
jge
xlat
cmp
mov
sahf
aad
fsts
das
data16
cmp
xchg
add
sbb
stos
xchg
mov
pusha
and
out
inc
cmpsb
mov
lds
orl
test
push
sti
mov
lock
push
and
pop
sub
or
inc
cmp
nop
inc
sarl
cwtl
mov
addr16
out
push
cmpsb
dec
and
scas
cmpsl
idiv
pop
jmp
pop
mov
jle
pusha
or
enter
mov
jnp
in
cmp
leave
or
sbb
stc
add
test
inc
pusha
pop
xor
sub
and
inc
push
add
xor
arpl
or
or
cmc
addr16
cmp
and
loop
sbb
sub
push
cmp
faddl
ret
inc
sbb
mov
fsubs
lds
adc
adc
dec
add
jmp
test
inc
push
test
cmpsb
in
in
and
rcrl
insl
sub
add
add
xchg
les
add
iret
das
jge
insl
dec
jne
sub
adc
sub
arpl
add
out
int3
lahf
xchg
xor
adc
movsl
xchg
mov
mov
or
adc
cmpsb
xchg
data16
and
nop
lods
mov
in
pop
scas
call
adc
inc
into
mov
mov
inc
movsl
xchg
sarl
adc
in
fimuls
in
and
add
sub
xchg
xor
xchg
push
push
fnstsw
stos
push
shlb
pusha
ljmp
sbb
jge
pop
mov
cwtl
xchg
shl
orb
pop
mov
xchg
push
sub
pop
movsl
push
mov
cmc
shr
jp
test
xchg
adc
dec
inc
sahf
mov
xor
adc
mov
mov
psrlw
out
pushf
je
ror
rorb
pop
jmp
loope
cwtl
xchg
push
lahf
fwait
jae
push
mov
push
sbb
mov
loopne
push
je
daa
push
sbb
sbb
and
mov
mov
mov
mov
fistl
faddl
cmp
clc
push
and
push
xchg
data16
shr
das
repz
sbb
leave
into
sbb
cli
and
xor
inc
lret
ret
push
sbb
xchg
mov
jo
xchg
xchg
pop
jl
aam
aaa
cmp
ficoml
sub
ds
ss
sub
push
repnz
cmp
lahf
fcmovnb
rcl
pop
jg
jne
mov
lret
adc
dec
push
mov
mov
incb
sbb
jge
and
or
ljmp
es
std
aas
sbb
loope
or
pop
bound
cmc
je
xor
mov
std
stos
jle
fimuls
cmpsl
mov
mov
icebp
in
scas
mov
cmp
cld
sub
xchg
xchg
aas
pop
mov
aaa
dec
ss
or
jge
jmp
xchg
cmpsl
push
test
in
mov
fbstp
push
dec
repz
dec
aam
push
mov
icebp
sub
jae
push
repz
imul
cs
data16
mov
mov
cwtl
mov
push
popf
mov
mov
add
dec
lock
push
scas
xlat
fwait
pop
mov
mov
xlat
incl
jg
jbe
icebp
adc
repnz
in
xor
push
insb
insl
xchg
not
mov
dec
pop
mov
ss
push
dec
inc
mov
dec
scas
fisubl
repnz
mov
mov
out
loop
hlt
jl
andb
cmp
mov
or
fisubl
pop
mov
jl
sub
icebp
fsubrs
imul
xchg
fucomi
lock
lods
loope
or
lret
test
pop
imul
mov
mov
push
je
mov
movsb
sbb
dec
and
sub
imul
lea
or
mov
dec
dec
xlat
or
inc
fldt
shr
add
icebp
add
pop
imul
gs
sahf
jl
mov
sub
pusha
addr16
adc
dec
xchg
shrb
mov
xchg
dec
sub
test
std
arpl
in
push
imul
xchg
mov
mov
xchg
imull
mov
pushf
ret
mov
jp
das
pop
enter
mov
repnz
adc
cltd
add
lret
add
sbb
xchg
sbb
inc
int3
dec
pusha
xor
xchg
pop
xchg
fadds
cmp
divb
push
adc
inc
or
sub
jge
sahf
mov
cmpsl
das
test
mov
loop
xor
cmp
xor
inc
pusha
dec
ja
cld
adc
cmp
leave
fstpl
add
push
adc
test
pop
lods
push
iret
movsl
pop
popf
test
jl
add
mov
push
lods
dec
jo
stc
mov
sub
jg
dec
std
pop
mov
push
cmpsb
outsl
adc
xor
int3
in
repnz
push
js
xchg
sub
ss
frstor
fbstp
sub
lea
rorl
xchg
xchg
and
call
inc
and
loope
mov
fcompl
jp
int3
scas
mov
add
push
hlt
xchg
outsl
imul
scas
add
sbb
jle
addr16
mov
lock
sub
in
cmp
push
and
in
mov
cmp
sub
cmpsl
xor
ja
mov
dec
and
add
int3
pop
xchg
xlat
dec
xor
mull
cli
sbb
or
ss
daa
insl
loopne
dec
or
int
cmc
jbe
es
ss
and
jns
add
repnz
sbb
inc
cmc
ss
mov
mov
pop
mov
lods
mov
scas
mov
stos
xchg
stos
out
fsubl
adc
pcmpeqw
jb
outsb
cmp
je
xchg
jo
or
add
popa
daa
jecxz
repz
cmp
xchg
aas
jle
arpl
mov
jle
std
cmpsb
dec
jb
xchg
adc
mov
cmp
xor
pop
push
mov
pusha
lea
and
xor
ret
sub
inc
addps
sub
mov
rcl
call
inc
mov
outsl
xchg
aas
jecxz
push
add
mov
jg
sbb
adc
int3
and
sub
fs
jnp
mov
mov
repz
ret
mov
cmp
adc
push
pop
mov
movsb
cmp
push
icebp
inc
jns
pusha
push
mov
inc
mov
sbbb
push
jae
jns
add
sbb
jge
sbb
iret
mov
in
std
ljmp
jb
mov
sub
cmp
dec
test
fwait
test
mov
pop
loope
divb
pushf
fistpll
pop
sub
inc
nop
push
or
push
insb
test
fnop
leave
fistps
lea
movb
loopne
mov
test
inc
xchg
ret
add
sbb
push
jmp
fldcw
jmp
xor
and
jge
out
test
or
loope
push
jo
sub
pop
fadds
xchg
dec
fmull
dec
inc
sub
gs
lock
jae
sbb
xchg
jnp
jno
hlt
je
adc
cmp
je
sub
cmpsb
push
mov
pusha
xor
ret
push
dec
sar
cs
inc
fstl
jb
or
outsb
sahf
dec
dec
mov
or
lret
bound
push
dec
loop
enter
cmpsb
xchg
and
cmp
mov
rclb
jecxz
mov
stos
lock
xor
jl
cld
bound
stc
dec
hlt
adc
dec
imull
test
inc
cmp
push
outsl
insb
xchg
push
inc
pop
push
lods
xlat
dec
sbb
and
lods
subl
dec
sahf
pop
add
rcrb
inc
jno
pop
and
addb
lods
pop
adc
pop
out
mov
cmp
inc
inc
test
sbb
fs
rcll
jne
cmpsb
mov
fldcw
shrl
iret
aas
in
addr16
and
or
mov
mov
mov
dec
jbe
jbe
aam
js
mov
popa
fbld
sti
add
jb
pop
mov
add
gs
adc
mov
jge
mov
fdivl
sbb
sbb
mov
push
scas
mov
cwtl
adc
lock
lods
mov
sahf
sbb
push
push
cli
mov
push
in
push
push
sahf
dec
hlt
pop
out
sbb
pop
shll
pop
cmp
loope
mov
cli
mov
mov
outsl
fldenv
jp
inc
push
xchg
rcll
or
inc
aaa
xor
cs
orb
jno
ret
shlb
mul
popf
adc
ror
stos
mov
dec
mov
xchg
sbb
popf
fdivrs
mov
xchg
bound
std
jno
insl
push
aad
mov
into
jmp
inc
sbb
int3
nop
xchg
jmp
or
push
adc
push
jbe
ljmp
push
inc
call
js
std
lret
adc
and
or
movsb
aas
or
push
in
or
mov
push
lds
imul
sub
push
sbb
sbb
mov
cmp
scas
inc
adc
loopne
js
push
loope
pop
pop
scas
movsb
fisubrl
xchg
std
aaa
push
lcall
je
adc
jnp
mov
adc
icebp
and
sahf
push
fnstenv
sahf
mov
jo
fmull
push
adc
js
test
in
cmpsb
roll
arpl
dec
xchg
lods
pop
shlb
out
movaps
dec
mov
mov
dec
jne
mov
lea
ja
mov
sbb
sub
xor
jae
and
inc
xchg
add
lock
or
sub
cld
test
imul
test
shll
jne
dec
sbb
cld
pusha
lea
nop
sub
mov
mov
adc
ret
add
mov
ja
mov
xor
mov
push
push
shl
jb
fisttpll
stos
push
out
and
aas
jo
test
cmp
dec
inc
and
jo
add
lea
sbb
imul
pop
mov
sahf
loopne
les
ret
or
or
pusha
jns
mov
mov
xchg
scas
mul
scas
loopne
lea
inc
jno
adc
dec
push
movsl
xchg
hlt
adc
push
xchg
jl
in
je
xchg
stos
inc
push
mov
push
scas
mov
hlt
or
mov
lds
or
sti
scas
adc
mov
test
mov
dec
enter
test
fidivrs
mov
rcrb
adc
lods
add
and
das
dec
push
mov
loopne
push
mov
dec
add
push
dec
adc
lret
inc
inc
jne
ds
loop,pn
or
nop
lods
fs
out
into
push
shll
pop
popf
in
insb
in
cmp
movsb
sbb
repz
mov
adc
mov
mov
ret
in
or
cmp
sbb
js
sbb
cwtl
sbb
fiadds
icebp
sbb
sub
scas
dec
rorl
pop
sub
loopew
push
add
mov
ret
fmul
gs
lds
test
cmc
pop
add
sub
cld
movsl
push
jg
fs
push
dec
mov
xor
dec
cmp
add
push
fildl
mov
xchg
cmpsl
movsb
pop
aas
aam
push
adc
or
lcall
aad
adc
mov
mov
jecxz
jae
lds
mov
int
jnp
cmpsl
jecxz
mov
pushf
xchg
pop
mov
mov
ret
add
mov
or
xchg
in
imul
aaa
push
mov
dec
popf
ljmp
dec
adc
cmp
or
dec
jo
dec
or
cmpsb
fwait
pushf
jg
push
rorl
test
sub
fstl
outsl
ljmp
pop
mov
popf
xrelease
cmpsl
jne
js
cmp
push
jmp
push
mov
inc
xchg
call
adc
dec
cltd
xchg
pmaddwd
div
jl
xchg
inc
pop
jle
pop
lods
stos
out
push
fdivr
inc
cmp
xchg
negl
add
ds
xchg
repnz
fptan
xchg
das
sub
out
fistps
mov
dec
sub
inc
out
shll
dec
xor
out
mov
loopne
mulb
mov
xor
aas
out
push
fisubl
sbb
push
adc
cltd
push
or
nop
into
test
mov
lock
mov
xor
pusha
aam
into
test
push
inc
imul
cwtl
hlt
sub
add
fxch
out
loop
enter
ds
fs
ljmp
imul
adc
test
sbb
mov
cli
fmuls
lahf
or
jg
leave
mov
pop
inc
pop
jbe
mov
bound
lahf
xor
push
sahf
jle
xchg
xor
ret
out
int
inc
cs
jecxz
loope
dec
int3
lock
pushf
fwait
mov
repz
dec
dec
lods
in
int
mov
ret
dec
shl
outsl
rcrl
out
leave
adc
or
lret
or
xlat
aaa
arpl
add
mov
mov
repz
arpl
mov
lret
mov
pop
cmp
test
cli
jl
mov
jno
and
int3
jo
dec
pushf
into
movsl
dec
mov
test
bound
xchg
and
and
cmpl
xor
add
out
outsb
pop
xchg
sbb
rdpmc
into
sbb
out
inc
cld
addb
sub
cmp
pop
mov
xor
popf
les
mov
in
or
jmp
and
mov
dec
ss
bound
mov
lods
das
cmp
addb
mov
loopne
xchg
or
cmc
jo
inc
imul
dec
ret
xor
and
ss
pop
mov
pop
jb
adc
dec
test
xchg
xchg
test
gs
pop
sbb
movsl
add
fmull
int3
push
mov
gs
mov
cld
lret
das
xchg
sub
inc
mov
fidivrl
loop
outsb
jl
and
popf
cmp
out
add
std
lock
lahf
stc
mov
loopne
adc
push
insl
stc
imul
jmp
sub
cli
shrb
out
hlt
incb
xor
cli
push
mov
push
ds
pop
pop
or
inc
mov
xchg
xor
or
je
das
push
cwtl
repnz
jl
loope
and
pop
xchg
inc
sub
lcall
je
into
pop
inc
outsl
jno
out
pop
xchg
sub
into
daa
sub
add
jb
inc
stos
cli
or
and
add
add
shl
adcl
mov
jge
sub
mov
les
inc
imul
roll
lcall
pop
mov
call
jle
or
rclb
xchg
jnp,pn
stc
repz
adc
jb
and
fnstcw
in
xchg
cmp
jg
mov
jp
jb
adc
or
enter
xor
das
sub
das
scas
jno
mov
xor
adc
cmc
jp
out
sbb
loope
pushf
or
es
and
out
and
lret
sbbb
fs
lahf
cwtl
adc
mov
insb
in
out
sti
fldt
xor
aaa
jg
add
mov
xchg
es
xchg
mov
popa
and
rorb
mov
andb
sbb
pushf
mov
rcrl
out
hlt
xor
push
out
cmp
insl
and
sbb
and
gs
fwait
cli
fldcw
cmpsl
imul
or
idivl
mov
lods
mov
or
je
cmpsl
arpl
jo
lock
mov
lea
addl
inc
jg
add
pusha
and
mov
je
mov
movsb
sbb
cmp
ss
pop
dec
mov
pop
out
sbb
mov
and
sub
push
movb
cwtl
dec
imul
popa
ss
inc
push
sahf
mov
in
in
nop
pusha
out
mov
sbb
inc
int3
rcrl
pop
dec
mov
loopne
pop
push
mov
cmpl
es
mov
inc
xchg
jle
bound
mov
xor
xor
xchg
or
jbe
scas
cmp
sbb
cli
and
aaa
mov
gs
popa
out
jg
pushf
rclb
pusha
iret
sahf
mov
inc
mov
daa
aas
std
dec
pop
insb
add
push
add
in
int3
cmp
test
ja
mov
pop
inc
into
jle
sub
cmpsl
cmpsl
xchg
idivl
push
xor
fisttpl
rcll
add
dec
xor
in
mov
fmuls
push
xchg
pop
pop
and
pop
jp
into
pop
xor
out
and
push
shll
ds
rcrl
and
imul
fldcw
fisubrl
ret
std
or
cmp
lock
ret
in
push
jnp
mov
push
les
lahf
jb
clc
fwait
or
sbb
shll
fcmove
push
das
xchg
cmp
int
push
push
mov
cmp
ljmp
aad
mov
popf
clc
dec
jecxz
popa
sbb
testb
cmp
lret
sbb
jmp
scas
ss
push
stos
xchg
inc
inc
adc
pushf
and
stos
lahf
xlat
add
dec
lods
push
cltd
sahf
icebp
jecxz
js
sbb
push
das
and
jle
jmp
aam
sti
fwait
mov
rorb
arpl
ja
sahf
push
sarb
inc
inc
adcb
ret
mov
pusha
incl
pop
mov
xchg
xchg
mov
into
mov
xchg
dec
jecxz
imul
inc
rolb
cmpl
xor
mov
jb
mov
add
jecxz
insl
mov
lods
aam
es
repnz
xchg
stos
jae
adc
dec
bound
sbb
roll
orl
jb
and
mov
and
or
fcoml
pop
mov
and
jno
mov
add
push
push
jle
push
inc
mov
inc
inc
jb
mov
push
call
jo
or
icebp
sub
sbb
add
mov
push
xchg
clc
in
dec
xor
dec
jnp
movsl
shll
test
mov
ficoml
adc
adc
bound
fwait
dec
int3
jmp
lods
rcll
and
pushf
fsubr
xor
mov
outsl
push
inc
outsb
les
mov
adc
cmp
popa
stc
sahf
dec
and
cmp
jo
xchg
and
ud1
and
add
mov
adc
daa
dec
repnz
es
jb
adc
xor
sub
add
push
lahf
fidivl
ret
popa
add
loopne
andb
push
cmp
incl
mov
mov
add
sbb
movsl
push
gs
pop
mov
idiv
ret
dec
ljmp
sbb
and
test
sti
loopne
dec
mov
lcall
xchg
add
jmp
push
and
or
jnp
mov
imul
mov
jl
rolb
divb
mov
xor
call
cli
push
mov
dec
cli
inc
sbb
sub
sbb
inc
sbb
mov
add
outsb
jp
xchg
push
shlb
or
and
js
lds
fisttpll
ficompl
cmpsb
mov
ljmp
push
pushf
ret
lret
mov
ds
push
add
push
sarl
imul
ret
cmc
jno
xchg
sbb
xor
and
mov
adc
dec
xchg
ja
dec
arpl
fs
call
daa
lcall
aam
popf
pop
jp
cmpsl
mov
test
push
dec
push
xchg
call
pop
stos
push
fs
ret
add
xchg
std
xor
push
pop
dec
mov
rolb
outsb
movsb
push
xlat
inc
xor
outsb
push
ja
aaa
inc
xchg
stc
nop
dec
push
bswap
andl
mov
and
ret
lahf
jecxz
add
jecxz
ss
nop
test
repz
adcl
xor
push
outsb
in
xchg
ja
sbb
xchg
push
lods
xchg
cmp
and
adc
shl
jg
pop
cli
mov
cmp
jg
gs
mov
mov
movsl
dec
sti
push
pusha
dec
push
inc
add
cwtl
lcall
dec
mov
iret
test
rorl
scas
in
or
inc
insb
fildl
into
imul
sbb
pop
or
cmpsb
je
shrb
loopne
repz
pop
movsl
divl
cli
out
dec
or
add
in
fimuls
lret
test
mov
into
ficomps
imul
jmp
std
fucomi
jb
push
fs
sub
jmp
insb
pop
adc
jo
lods
cmp
and
add
aad
jae
pop
enter
push
cmc
or
mov
ja
cmp
cmp
cmp
pop
pop
popf
adc
pop
ss
in
arpl
arpl
bound
popa
adc
push
mov
std
pop
and
xlat
arpl
sub
push
push
test
insb
fdivs
in
pop
insl
dec
cmpsb
js
sbb
jecxz
xorb
dec
xorb
movsl
into
or
adc
sbbb
lods
out
xor
nop
out
movsb
pop
inc
inc
sarl
mov
js
jbe
pop
or
nop
jg
pushf
jne
sbb
push
test
insb
mov
and
cmp
data16
repz
ret
ret
jp
pop
adcb
icebp
std
xchg
sub
into
pop
pusha
mov
sbb
shrb
adc
call
out
inc
mov
jno
mov
xor
or
jbe
mov
lods
mov
sbb
adc
es
jmp
cltd
lcall
pop
or
sub
roll
xchg
test
movups
sbb
pmulhw
js
subl
scas
xchg
test
adc
fsubrl
xchg
cmp
adc
in
push
js
rclb
or
xchg
xchg
add
ret
mov
adc
jmp
push
mov
es
jns
add
mov
jno
jns
in
push
ljmp
dec
leave
test
cltd
stos
sahf
dec
add
leave
outsl
in
adc
int
cltd
mov
push
and
in
repz
pop
lds
std
ljmp
or
les
out
test
in
aas
testl
and
stc
loop
icebp
mov
aam
clc
push
adc
popf
test
add
jecxz
popf
imul
sub
jmp
clc
int
and
dec
cmp
scas
leave
aaa
mov
aas
mov
xchg
imul
pop
js
inc
loop
movsl
out
mov
mov
lock
negb
in
or
cmp
add
fnstcw
xchg
mov
ret
roll
test
movsl
jge
dec
sbb
shrb
int3
xchg
pop
test
xor
fs
ss
test
mov
testb
jb
in
inc
adc
inc
imul
jbe
or
xchg
xor
dec
std
or
addr16
mov
ds
outsb
jl
xchg
cmp
sarb
loopne
fimuls
xchg
push
fnsave
cmp
loopne
adc
pop
inc
jmp
sub
scas
xor
fildl
jbe
popa
inc
cmp
mov
shlb
lock
lcall
push
push
and
adc
and
lods
stc
push
aaa
stos
movsb
mov
pop
cltd
add
repz
rcl
movd
adc
movsb
addl
shll
les
imul
push
push
popf
mov
mov
flds
out
jb
sub
push
lret
ja
mov
mov
jp
xor
jmp
inc
fucomip
lds
inc
in
popa
or
lret
fdiv
ja
jle
push
rorl
mov
gs
mov
inc
dec
outsl
jecxz
or
mov
push
rclb
int3
jo
push
push
stc
inc
fcompl
test
mov
out
inc
cmpsb
push
or
stc
and
mov
fdivl
lret
das
cmp
push
iret
xor
inc
mov
jo
dec
fs
addr16
sub
lcall
inc
sbb
push
mov
into
sub
push
insb
mov
mov
fidivrs
repnz
popf
stc
mov
mov
mov
sarl
stos
push
push
dec
add
adc
loop
inc
paddusb
movsb
icebp
mov
xchg
pusha
lcall
xor
stc
fisubrl
out
pop
lea
pop
mov
clc
jp
enter
push
add
jmp
add
fisttps
adc
hlt
and
mov
inc
cs
mov
jmp
cld
out
pop
lret
xor
jl
mov
cmp
insl
xchg
lock
jg
incb
and
push
mov
in
aas
pop
pop
stos
push
xor
xchg
push
shl
ja
mov
or
std
xor
ret
je
test
lock
mov
test
xchg
imul
ljmp
push
rcrl
movsl
fwait
mov
jns
enter
arpl
outsb
outsl
sarb
outsl
xchg
dec
cmp
and
mov
jne
call
jnp
xor
dec
sbb
sbb
mov
das
xor
lds
jae
fcoml
sbb
icebp
push
push
fs
xchg
cmpl
jo
adc
ret
popa
leave
sbb
sub
cmp
mov
orl
lcall
pop
mov
adc
test
outsb
bound
not
insb
add
decb
lea
jl
fidivl
push
push
fcompl
mov
in
jmp
pop
adc
in
ror
jge
jne
pop
outsl
into
pop
push
sbb
out
mov
mov
mov
jnp
inc
push
lahf
inc
sub
jp
maxps
dec
enter
iret
sbb
inc
xchg
pop
xchg
push
push
inc
mov
sub
jns
jp
lahf
arpl
roll
in
aaa
aam
pop
push
loopne
sahf
fistpll
add
xlat
clc
cmpsb
mov
pushf
clc
neg
mov
repz
call
xchg
inc
mov
xor
jmp
jg
mov
push
or
mov
cld
dec
xchg
sub
xchg
test
pop
nop
popa
int
mov
xlat
dec
mov
sbb
cltd
jno
fcompl
loopne
es
adcl
mov
hlt
cs
push
test
hlt
rolb
in
add
cmp
mov
push
mov
xor
inc
jo
fcmovbe
mov
and
sbbb
movsl
loopne
outsb
fistps
and
pop
and
cltd
bound
push
adc
loop
sub
pop
gs
push
rclb
mov
cmp
mov
into
cmpb
push
test
xchg
into
mov
or
clc
add
xor
stos
shll
lcall
adc
add
icebp
and
loopne
in
int3
adc
arpl
pop
div
sbb
repnz
inc
mov
and
mov
xor
sub
mov
stos
ret
mov
pop
cli
jns
push
pusha
test
sub
lahf
hlt
popf
sbb
fidivs
jmp
jae
movsl
inc
decb
or
jne
iret
sbb
mov
decb
adc
xchg
shlb
jl
test
cmpsl
repnz
mov
mov
xor
cltd
cmc
es
test
loop
clc
mov
xor
dec
dec
jno
jne
fistps
sbb
pushf
outsl
mov
xchg
out
ds
mov
inc
cld
sbb
test
sbb
lds
shll
fistl
ret
mov
sub
sti
cmp
test
add
cmc
add
hlt
out
xchg
lods
ljmp
int
stos
xchg
jmp
mov
jb
popf
pop
xchg
mov
xchg
push
lods
lahf
add
add
add
jge
or
nop
xchg
xlat
mov
ss
mov
ret
fsubrs
sub
pop
aas
popa
test
xchg
and
lea
in
mov
cmp
mov
pop
xor
jo
pushf
sub
mov
daa
out
lods
mov
fisttps
insb
in
loope
pop
leave
jne
int
shrb
in
xor
mov
shl
call
jl
outsb
subl
test
mov
aaa
stos
fistpll
insl
push
or
push
aaa
imul
xlat
push
fldl
shll
or
cmp
cmc
push
cmpsb
mov
fisubrs
aaa
cmp
or
lds
fwait
pop
rcr
mov
push
sbb
mov
ljmp
sti
loop
cmp
sbb
fs
xor
insl
in
push
aam
ss
das
mov
ss
iret
repnz
inc
sbb
xchg
jbe
iret
sbb
xchg
icebp
sub
fldt
dec
or
out
in
popf
jae
xor
sub
xchg
imul
stos
imul
xchg
pop
and
test
rcrl
sub
dec
cmc
shl
inc
cmp
arpl
pushf
jecxz
adc
ds
push
movl
jns
xchg
sahf
push
repnz
repz
fs
outsb
stc
outsl
lea
mov
aas
pop
xchg
mov
jg
inc
sub
out
sub
arpl
dec
mov
scas
adc
test
dec
out
inc
xchg
rorb
adc
jmp
xor
jns
sub
or
test
jo
cmp
sti
std
xchg
dec
fneni(8087
pop
xor
mov
pusha
aaa
fstps
insl
push
mov
insb
popa
mov
add
std
push
imul
test
fcoms
arpl
sahf
hlt
clc
mov
xchg
lock
inc
lahf
jne
cmp
jne
jecxz
adc
mov
dec
jg
mov
mov
mov
mov
mov
lock
out
stos
inc
mov
imul
out
jg
add
dec
push
add
pop
ret
sti
pop
xor
cltd
mov
in
stc
pop
xchg
loopne
movsl
jecxz
mov
iret
rcll
stc
push
dec
cmp
xor
cwtl
push
movsb
inc
cld
push
pop
xor
pop
ret
cmp
xor
mov
cmp
xor
xor
cmp
fbstp
adc
inc
jp
adc
sbb
and
adc
push
aas
out
sete
int
fistpl
xchg
ss
jb
cltd
mov
ja
inc
cmp
sub
shll
ret
dec
lret
fwait
mov
out
cmpsb
mov
arpl
sbb
cmp
pop
push
nop
int
scas
repnz
dec
jns
into
mov
xor
insl
fcompl
or
push
mov
pop
sub
loop
cmpsl
addl
add
push
frstor
flds
and
xlat
inc
push
jmp
jp
jns
dec
jg
pusha
sbb
and
bound
pop
jnp
mov
stos
test
and
popf
in
pop
in
add
mov
push
dec
aad
cmp
mov
mov
xchg
je
std
jb
test
test
scas
rcrb
and
mov
imul
inc
movsb
push
sahf
pop
mov
dec
into
sbb
loope
sub
jbe
xorb
inc
lret
mov
sti
inc
sub
stc
stos
cld
test
add
and
sub
jmp
hlt
add
xchg
call
jl
sbb
xor
shr
mov
fwait
push
arpl
scas
movsl
lret
fmull
out
inc
or
hlt
fstpt
pop
clc
add
enter
lahf
leave
dec
push
jecxz
and
push
sbb
push
adc
adc
dec
adc
pop
mov
shrb
jno
sub
jbe
pop
fildl
je
loopne
xor
adc
xor
and
mov
sbb
mov
cltd
test
shrl
fistps
xor
pop
cli
insb
int
cmc
mov
sub
or
hlt
inc
hlt
and
bound
xor
jb
js
cmpsl
xlat
and
cmp
xchg
adc
cmp
add
addb
mov
iret
fldenv
mov
sbbl
jmp
push
test
sti
test
mov
fwait
pop
sub
pushf
aad
cwtl
and
fmull
fidivl
repnz
xchg
and
add
lds
cltd
sbb
cmp
xchg
lret
pop
pop
sub
sub
nop
subl
add
icebp
xlat
daa
xchg
pop
xchg
or
cmc
pop
fsubs
pop
js
pop
adc
or
addb
jecxz
gs
test
test
aad
rcrl
add
orl
pop
and
mov
enter
inc
stc
jg
popa
repnz
cwtl
aad
jo
icebp
out
cld
gs
out
cmp
push
ljmp
mov
pop
push
cld
mov
in
out
bound
cltd
mov
stos
mov
cli
or
xor
int3
push
add
push
test
cmp
add
neg
pop
sbb
mov
sahf
or
cltd
sbb
rol
cltd
in
push
sub
pop
mov
rcrl
dec
xor
xchg
xor
shll
loopne
pop
out
adc
mov
outsl
idiv
std
xor
and
xchg
ss
push
in
mov
sahf
subb
adc
cmpsb
in
mov
push
jle
imul
sbb
or
cmpsb
lock
fsubrl
das
xor
pop
xchg
mov
fcom
push
cmovno
mov
inc
inc
adc
sub
iret
mov
lea
mov
insb
faddl
leave
sub
inc
clc
sub
lcall
rol
sbb
sub
mov
icebp
fstps
mov
jb
and
push
roll
aam
cmpsl
addr16
xchg
sbb
or
sbb
xchg
cli
lock
lods
push
xchg
lahf
call
xor
sub
ljmp
shll
lods
push
aam
or
call
xlat
adc
jecxz
ljmp
ret
xchg
jmp
icebp
in
sbb
data16
out
add
mov
fsubs
cmp
stos
push
and
out
dec
or
adc
pop
outsl
cmp
outsl
jnp
xlat
ror
sub
push
rol
pushf
pop
mov
cmp
or
inc
mov
mov
jnp
cmpsb
rolb
push
jne
adc
into
pop
ja
mov
into
mov
mov
push
jae
push
hlt
xlat
fldt
outsl
mov
mov
sub
push
bound
pop
lea
add
and
push
arpl
out
dec
popa
cmp
dec
fcompl
push
imull
xor
inc
sbb
mov
mov
leave
sub
push
lods
pop
mov
dec
xor
xor
loopne
add
aaa
cmpsb
gs
in
in
shl
dec
outsl
adc
gs
scas
or
inc
clc
inc
test
add
inc
dec
xor
jl
push
pop
cmpsl
out
rorl
dec
sub
out
mov
adc
jno
sbb
push
gs
add
daa
lea
aam
xchg
or
cmp
ficoms
pusha
jl
fldcw
or
repnz
mov
and
mov
call
add
or
scas
jl
push
out
nop/reserved
xor
or
or
insl
scas
jg
jbe
add
jb
cmc
daa
jbe
jmp
or
sbb
outsb
in
dec
push
aaa
sbb
gs
cmp
cwtl
add
insb
inc
fnstsw
adc
sahf
inc
add
loopne
mov
and
xor
sbb
jbe
fcomps
and
sbb
inc
sbbb
mov
mov
mov
daa
jle
xchg
cmp
ret
mov
pop
add
push
xchg
inc
dec
data16
sbb
cmp
jo
add
xor
add
aad
rcr
mov
dec
jo
movsb
mov
and
sbb
push
jae
push
pop
enter
loopne
dec
test
sti
cmp
mov
cmp
pop
jmp
aas
inc
add
aad
xor
cmpsb
test
lret
xchg
arpl
js
sbb
pop
out
shll
mov
stos
xlat
and
sti
jb
inc
leave
add
ss
mov
dec
mov
jb
jae
addb
in
das
jnp
lods
jae
test
mov
out
cld
xor
xchg
cli
and
dec
in
and
xchg
test
mov
inc
shrl
test
fldcw
fwait
pop
and
mov
rorl
aaa
aas
jg
dec
pop
jmp
ljmp
dec
sbb
aad
loopne
cltd
incl
mov
sbb
jmp
js
pop
mov
add
outsb
imul
xchg
fdivp
ljmp
mov
sarb
repz
add
ja
stos
aad
test
dec
and
mov
add
push
xchg
mov
pop
mov
icebp
adc
adc
xlat
mov
lods
inc
addl
adc
sti
cltd
and
bswap
dec
mov
adc
jge
pop
test
mov
or
decb
or
repnz
inc
or
xorl
scas
loope
lahf
sar
cmpsb
or
popa
sub
or
repz
fsts
test
mov
aad
xchg
loopne
imul
xorb
and
lret
shlb
repz
xchg
adc
idivl
rcll
cli
mov
mov
cmp
in
lcall
test
aaa
pop
jecxz
adc
ljmp
sub
decl
inc
cmpsb
daa
cmc
out
cmp
out
mov
fisttps
and
outsb
push
scas
iret
insl
xlat
pop
ficoms
add
sub
std
aaa
mov
loope
in
xor
lcall
das
movl
and
stc
stc
mov
mov
and
mov
test
mov
dec
xor
call
or
sarb
daa
or
sbb
lock
int
mov
je
fildll
xor
mov
sti
sbb
push
fs
fbld
call
inc
jns
mov
ljmp
mov
fucomi
les
add
mov
inc
pop
pop
movsb
inc
and
sbb
xor
mov
cwtl
imul
push
sbb
or
je
pop
or
nop
mov
jns
xor
int
mov
js
or
pop
testl
sbb
or
shr
pop
divl
aad
dec
leave
mov
xor
xchg
pop
lret
into
add
sub
xchg
jle
xchg
or
daa
xchg
pop
rcrl
das
scas
push
cli
add
into
negl
das
stos
cs
les
push
leave
std
gs
and
adcb
cmp
and
rcl
les
jae
mov
jne
bound
scas
adc
int3
in
icebp
or
mov
jnp
pop
sbb
fadd
mov
pop
negb
aad
jne
sub
gs
out
scas
xchg
inc
mov
xchg
int3
test
sti
cmc
adc
inc
jg
push
xchg
aas
lea
pop
ss
scas
mov
add
adc
xor
enter
cmp
dec
nop
mov
xor
pop
ret
jns
stos
test
add
lahf
hlt
sub
imul
mov
mov
mov
pop
mov
push
cld
decb
xchg
adc
mov
mov
or
xor
pop
mov
lods
imul
call
aas
add
sub
sahf
xor
adc
hlt
shll
adc
push
test
sub
shrl
pop
popa
sbb
ljmp
jns
pop
push
inc
pop
lea
lret
outsb
hlt
int
or
or
mulb
inc
in
sbb
stos
stc
fs
xor
adc
mov
inc
hlt
rorb
xor
cltd
lret
loopne
jmp
out
fistps
add
mov
sub
push
dec
add
mov
mov
dec
jae
popf
push
stos
je
mov
pop
movsb
movsb
cmp
sti
pushf
sbb
dec
pop
dec
push
lods
cmpsb
xorb
adc
mov
or
daa
or
and
adc
xchg
mov
mov
push
test
sti
cli
sti
in
es
lods
lcall
std
and
jae
loopne
dec
es
filds
cmp
cmp
push
and
or
cmpsl
adc
pop
sahf
mov
xchg
mov
jae
stos
add
xorb
orb
pop
lea
jecxz
aad
testb
pushf
mov
leave
dec
push
std
adc
sub
movsb
stos
clc
mov
in
ja
mov
pusha
lcall
jl
jp
outsb
push
in
jns
or
push
fisubrs
cmp
mov
add
dec
mov
or
mov
or
hlt
pop
int3
jge
aad
scas
shlb
or
sub
out
aad
pop
xor
call
popf
rorb
lret
mov
inc
fstpl
leave
ret
test
jp
fstp
call
push
aam
cmc
mov
push
or
mov
stos
insb
dec
mov
xchg
movsl
lds
dec
xchg
movsb
mov
fldcw
add
cmp
xor
and
stos
jae
cmp
ret
xchg
mov
leave
outsl
push
out
add
lea
push
xchg
dec
adc
inc
add
jle
push
adc
rcrb
add
or
mov
adc
push
jl
cmp
xchg
call
arpl
stos
lret
mov
mov
pop
or
js
push
leave
xor
adc
je
dec
mov
jo
xor
fwait
arpl
adc
and
imul
sbb
jp
or
dec
lods
test
fidivrs
cmp
mov
mov
in
ret
mov
imul
mov
xor
jne
lret
adc
xor
push
or
dec
xor
stos
scas
jge
jle
adc
aam
enter
dec
mov
pop
pop
mov
repz
ljmp
push
imul
dec
sub
in
out
push
pushf
andb
mov
inc
leave
idivl
call
pop
in
jecxz
pushf
loope
push
pop
rolb
test
addr16
cmpsl
icebp
into
out
mov
dec
pop
dec
xchg
sbb
subl
lods
lock
int
inc
fcmovnu
xor
add
inc
jbe
mov
popl
mov
lock
mov
inc
dec
les
dec
shlb
imul
xor
nop
scas
fnstsw
mov
repnz
jb
cmp
sbb
push
pop
fistpl
ret
jns
inc
jne
push
cmpl
ds
jbe
jecxz
std
out
clc
pushf
in
sub
mov
int3
inc
gs
mov
ja
cmp
hlt
daa
inc
xchg
cmp
push
xor
sub
lcall
mov
scas
ja
mov
xor
stos
push
dec
add
fwait
mov
fidivl
mov
jge
xor
cmpsl
pushf
mov
dec
stos
dec
aas
mov
lods
jle
das
lea
and
cltd
adc
cmc
lea
sbb
cs
or
pop
or
out
mov
lea
inc
xchg
dec
sbb
cmpsb
mov
inc
jmp
pop
mov
mov
dec
mov
sbb
ret
mov
add
or
call
and
push
add
inc
xchg
data16
sub
push
jo
mov
cwtl
repnz
pop
test
inc
in
test
xor
cmp
jp
imul
mov
xor
jl
out
lret
cs
xchg
imul
mov
inc
xchg
sub
xchg
pop
mov
mov
mov
jl
dec
dec
jnp
mov
aas
mov
push
mov
xchg
xchg
jmp
mov
sub
stos
sub
mov
inc
mov
aaa
divb
inc
cmp
test
fabs
cs
repz
aam
dec
adcl
sti
push
sbb
ficoms
int3
stc
xor
xor
sarb
sub
mov
cltd
aas
cld
xchg
sub
shlb
pop
insb
ret
sub
cmpsl
ss
int3
lret
rcll
stos
sub
sbbb
mov
sarb
sub
xor
and
pop
jl
dec
jae
jne
addr16
in
xchg
xchg
nop
cmpb
loope
push
repz
sahf
sub
add
fists
mov
sbb
imul
cmpsl
xor
cmpsl
daa
mov
dec
inc
into
in
jmp
pop
test
jae
mov
pop
push
mov
test
sbb
sbbl
pushf
mov
test
pop
popf
mov
mov
mov
fabs
cmc
add
sbb
pop
shll
and
jae
sbb
adc
fsubs
pop
xchg
cs
jge
testb
cmp
mov
push
lods
mov
int
mov
addr16
movsb
js
mov
push
roll
push
cwtl
or
and
push
ss
in
jb
shlb
xorb
sbb
and
adc
inc
fisttps
dec
xor
push
pop
xor
adc
fidivs
adc
loop
mov
std
test
aaa
pusha
push
das
or
adc
fcomi
pop
jbe
ret
imul
pop
in
mov
sbb
cwtl
les
ds
pop
push
push
pop
inc
jne
in
push
push
ss
jns
push
gs
add
scas
ret
lret
hlt
and
loope
mov
mov
ret
int
xchg
mov
or
les
mov
pop
xchg
cmpsl
imul
lea
aad
xchg
ljmp
ja
add
lahf
das
lea
enter
sub
in
mov
cmpsl
fdivs
jg
and
and
cmpsl
push
lock
popa
sub
fistl
xorb
sbb
add
push
cs
fldenv
or
and
push
rorb
in
inc
mov
mov
imul
inc
outsl
sub
aaa
and
xor
mov
cmp
mov
out
cltd
pop
sub
push
sbb
in
mov
adc
or
sub
mov
ja
jp
iret
in
sub
shlb
push
pop
flds
dec
jne
lret
lcall
or
in
or
dec
jge
mov
cmp
mov
iret
mov
push
movsb
shll
sub
movsb
add
jno
xchg
rclb
dec
inc
adc
lret
push
lea
cmp
nop
add
gs
out
and
fadd
sbb
imul
xchg
vpor
nop
stos
jecxz
sbb
sub
push
je
pop
add
and
lret
fimuls
mov
pop
stos
fwait
sub
cmpsb
mov
dec
movsl
ljmp
and
test
sbb
fsubrp
cwtl
jecxz
arpl
mov
fmuls
mov
cmp
out
xchg
test
and
sbb
jge
mov
aad
and
cmp
sbb
adc
das
add
push
mov
push
dec
les
dec
scas
fadds
mov
and
push
outsb
nop
ret
sub
inc
aam
or
das
mov
jb
idivb
stos
int
or
sahf
jne
int
data16
or
mov
ret
cmp
and
mov
imul
mov
add
aam
push
or
mov
mov
inc
mov
add
popa
cmp
call
and
arpl
lds
das
rcl
adc
sbb
mov
mov
mov
push
jae
int3
inc
sbb
xchg
test
enter
rcrl
adc
sbb
out
icebp
aad
push
push
lret
arpl
stos
pshufw
adc
add
lock
popf
xchg
push
dec
into
pop
cmc
push
ljmp
shll
ljmp
repnz
or
lea
or
int
cmp
cmpsl
xor
lcall
dec
lods
into
sub
mov
inc
inc
adc
test
popa
xchg
dec
jle
pusha
inc
sbb
mov
sarb
fisubl
fsubs
jmp
dec
gs
jl
sbb
xor
add
aaa
out
mov
adc
gs
out
jae
adc
or
xchg
and
xchg
and
dec
sbbb
lea
pop
mov
in
jo
xchg
sub
push
lret
push
leave
std
dec
xor
cltd
adcb
mov
ds
inc
int
nop
gs
lea
push
in
inc
bound
cmp
pop
mov
fidivl
pop
dec
repz
cmpsl
fbld
or
mov
lods
cli
xor
in
cmc
les
fidivs
popf
mov
push
adc
dec
sub
mov
pop
mov
xchg
and
cli
mov
scas
aas
aad
scas
into
dec
adc
lahf
cltd
adc
jns
adc
movsb
std
aas
lods
mov
inc
adc
jp
and
add
cld
imul
lods
sub
sbb
adc
pop
jge
jae
adc
cmp
dec
popf
mov
pushf
jl
dec
pop
rcll
sub
shlb
scas
push
ds
insb
jae
lock
xchg
scas
je
push
jbe
shlb
subb
repz
lea
sahf
adc
pushf
jne
mov
repz
sbb
adc
sbb
cmp
lcall
pushl
xchg
xor
mov
cmp
pop
xchg
fstpl
dec
adc
jb
leave
and
loope
mov
add
cmp
add
fadds
adc
xchg
xor
popa
pop
mov
pop
clc
or
outsl
jns
lcall
pop
ds
or
mov
arpl
movsb
jno
add
mov
aas
jge
cmp
incl
sahf
iret
idivb
pextrw
mov
lret
pushf
gs
es
mov
mov
outsl
inc
pop
lret
rcrb
sub
test
sub
cmp
fistpll
dec
cmp
mov
xor
jmp
aas
sbb
xor
push
pushl
call
adc
cmp
xchg
sbbb
cld
and
daa
fadds
cld
or
push
cmc
jns
aas
popf
or
lahf
push
pop
aam
out
cmp
jno
mov
xchg
fcmovb
fisubrl
sbb
divl
inc
xchg
mov
mov
xchg
add
cltd
das
in
xchg
pop
insb
outsl
push
in
inc
adc
push
push
jne
in
out
test
xchg
notl
cmpb
jbe
sbb
mov
test
test
mov
push
sbb
sbb
cmc
je
loope
mov
gs
sub
mov
call
andb
popf
or
hlt
filds
imul
cmpsb
add
adc
jle
out
das
arpl
xor
mov
adc
repz
jno
inc
inc
test
mov
inc
sub
outsl
or
popa
jns
pop
cmp
jge
fs
sbb
cs
aas
mov
int
sbb
ja
pop
scas
inc
cmp
sbb
and
sbb
aam
aad
jmp
daa
ds
or
inc
lret
dec
push
push
pusha
add
pop
clc
jo
and
pop
orl
orl
jne
lret
dec
repz
rcrl
leave
fs
nop
shll
loope,pn
mov
addr16
add
cs
or
in
out
or
add
pushl
mov
add
das
pop
rcrb
sub
push
inc
jle
ljmp
or
arpl
jl
sbb
ficoms
dec
jo
fcoms
sbb
das
sbb
rol
jge
sbb
cmpsl
shr
push
jl
mov
lock
adc
and
and
rorb
push
std
insl
cld
jne
popf
sti
aad
add
movsl
repz
inc
and
xchg
das
lcall
jns
lds
sub
stc
inc
fsts
js
mov
lret
std
movsb
mov
push
mov
lods
in
sub
inc
test
add
push
jae
push
das
adc
cmp
mov
mov
and
inc
test
xchg
repnz
js
push
xchg
adc
cltd
sbb
mov
lahf
mov
push
in
lds
jae
mov
jl
inc
in
and
das
xor
and
push
out
mov
dec
adc
cmp
enter
push
je
test
push
and
add
xlat
ficoml
outsb
mov
sub
lods
push
xchg
test
jge
fcompl
es
inc
in
or
shll
or
and
fs
push
push
into
stc
fimuls
pushf
cmpsb
add
add
dec
dec
fistl
pop
xchg
scas
outsl
adc
push
sti
dec
jne
leave
xchg
fsubrl
mov
or
inc
xor
sbb
std
psubsb
outsl
and
jge
aaa
push
dec
mov
repz
scas
sub
mov
pop
or
arpl
aaa
daa
orb
xchg
sbb
xor
aas
fs
shr
mov
test
xor
into
jns
and
cmp
shr
xor
aad
jno
xchg
orl
lahf
inc
jo
movsb
in
cli
loope,pn
test
int3
mov
or
ss
sahf
out
mov
and
inc
stc
push
ljmp
clc
sub
cmp
daa
ljmp
pop
loopne
sub
cmp
adcb
loop
cmpsb
mov
scas
add
arpl
mov
xchg
xchg
lahf
mov
pop
or
aad
pop
inc
cltd
push
mov
and
sbbl
js
les
cmpsl
push
jp
hlt
and
pop
dec
sub
dec
mov
sahf
mov
imul
cld
cmc
mov
inc
jns
pop
or
stc
mov
mov
cmpb
fsubl
mov
test
js
std
dec
dec
add
xchg
enter
stc
insb
jmp
hlt
jo
aad
in
xor
loop
hlt
lahf
decl
mov
mov
dec
mov
mov
stos
sbb
lods
pop
scas
or
mov
sbb
mov
fwait
xlat
loop
cmp
dec
mov
jb
insl
iret
xchg
sti
sbb
test
std
cmp
in
jae
cmc
lods
mov
cli
imul
mov
enter
dec
popf
inc
in
popf
add
mov
mov
xchg
xor
sub
out
add
cwtl
lea
add
lock
loopne
mov
popf
push
orw
lods
fadds
sar
mov
imul
xchg
rcrl
lahf
outsb
rclb
lods
adc
fadds
fcmovnbe
cmp
xchg
into
sbb
and
xchg
outsb
repnz
sub
cwtl
mov
mov
cmp
xlat
and
hlt
xor
js
fdivs
pop
sub
jo
mov
imul
mov
mov
xor
decl
insb
pop
mov
addr16
pusha
sub
lret
jo
mov
fcmove
pop
lret
dec
popl
mov
pop
pop
orb
out
inc
aaa
add
movsl
and
mov
scas
orl
xor
sbb
imul
icebp
xchg
in
xor
jo
pop
push
popa
inc
push
push
fsubp
test
inc
iret
sub
test
scas
sbb
lahf
dec
jae
add
loop
jecxz
ud0
movsl
dec
push
or
ss
xchg
aad
ss
add
push
stc
test
push
fisubs
jmp
mov
sti
jnp
mov
fisttps
sub
or
sti
xor
lea
xchg
leave
shlb
andl
dec
js
mov
enter
push
xchg
jns
int3
xor
adc
dec
mov
adc
pusha
mov
jge
push
mov
mov
lret
test
addr16
inc
mov
into
test
inc
pop
in
sbb
lcall
and
stc
inc
popl
sbbb
orps
cld
roll
bound
jns
stc
cmp
dec
mov
inc
clc
data16
out
xchg
inc
adc
fwait
nop
iret
sbb
sbb
in
mov
pop
mov
outsl
repnz
bnd
outsl
fsubl
pop
imul
mov
xchg
pop
insl
and
xchg
mov
lock
leave
iret
pop
fnclex
dec
lds
pop
push
xorl
jl
sahf
mov
xor
sub
mov
aas
jl
fidivrl
jns
dec
mov
push
adc
sub
or
sub
neg
pop
in
shrl
adc
mov
mov
or
cltd
push
add
cmp
pop
repnz
pop
nop
rol
cmpsl
rclb
xor
adc
aas
mov
lods
add
cmc
ret
mov
mov
inc
dec
outsb
sbb
sbb
movsb
and
adc
dec
stos
fwait
rorl
sti
mov
jle
addl
orb
fldt
popa
daa
lock
out
test
xchg
adc
fwait
scas
and
push
es
inc
dec
pop
fstpl
pop
or
mov
dec
dec
cmpsl
sub
add
or
ljmp
loope
es
divb
gs
mov
cld
adc
and
sbb
fistps
pop
add
test
mov
fstpl
jp
mov
out
outsl
jmp
gs
insl
xchg
hlt
mov
jle
pop
outsl
xchg
mov
mov
pop
push
gs
scas
push
mov
aam
out
push
or
test
imul
loope
jp
sahf
mov
push
push
pusha
pop
mov
jge
inc
and
loop
xchg
je
xorb
pop
or
leave
mov
lods
sub
mov
rorl
fwait
arpl
cmc
sti
mov
aaa
xchg
cs
push
push
enter
push
push
inc
jmp
adc
and
in
cmc
cmpsb
mov
clc
jnp
divl
ret
dec
inc
aad
push
aad
push
jle
ficoml
sbb
scas
add
cmp
xor
fidivl
cmpsl
jl
lods
xor
repnz
sbb
fidivl
in
sub
inc
pop
jg
pusha
jns
ja
inc
imul
imul
pop
inc
mov
rcrb
xchg
push
data16
xor
pop
jg
mov
incl
cmp
fcmovb
std
adc
push
mov
or
add
and
inc
mov
jae
stos
pop
cmp
adc
mov
aad
sub
mov
imulb
add
jp
sub
ret
mov
je,pt
ljmp
adc
stc
cld
imul
xor
ds
push
mov
lahf
mov
and
lret
or
ret
rorl
and
jbe
push
mov
jmp
xor
bound
imul
out
mov
jmp
push
jns
xchg
xchg
ja
mov
insl
sbb
mov
pop
cmp
jb
push
in
test
data16
ret
rolb
outsl
pop
cli
je
adcb
jecxz
jg
test
jae
or
out
sub
test
outsb
and
test
popa
icebp
ret
inc
lods
and
xchg
mov
mov
cli
fsub
adc
xor
shr
cmp
inc
out
fcmove
in
xabort
lcall
pop
push
insb
jg
icebp
lret
pop
or
sub
fcmovnu
into
iret
loope
xlat
pop
leave
xchg
test
pop
dec
push
dec
jg
stos
ds
enter
testl
push
aas
icebp
aad
inc
in
sub
mov
div
int
xchg
xchg
push
lret
inc
inc
add
es
cmp
xchg
pop
int
cmpsl
and
cmc
xor
jae
stc
ja
and
xor
add
and
xlat
mov
add
lods
xchg
sub
cmp
lahf
inc
sub
sti
dec
test
xchg
subb
mov
pop
cmpsb
mov
ret
aad
inc
mov
in
sub
lock
popf
cmpsb
add
add
mov
inc
push
popa
in
int
ficoms
loope
ret
xor
sub
lods
out
add
sbbb
cwtl
ret
fs
pushf
xor
stc
sahf
int3
lret
inc
inc
inc
hlt
and
xor
fisubrl
in
scas
jb
nop
add
xchg
jmp
and
lcall
or
mov
cmp
iret
ja
ljmp
in
push
aas
dec
push
das
adc
sub
fnstenv
cmp
ret
aas
push
sub
mov
push
pop
cmp
jns
jg
jp
and
mov
mov
inc
mov
and
inc
lret
out
das
or
sbb
cs
fcoml
and
add
or
pop
dec
jle
jecxz
and
cmp
adc
fistl
jecxz
leave
stc
xchg
add
sub
insb
movsb
in
dec
imul
mov
sub
xor
push
push
pushf
or
stos
cmp
mov
and
in
jbe
ret
mov
jp
mov
fnstcw
std
jl
mov
pop
loopne
jg
or
jns
push
aaa
pop
mov
or
ret
cltd
adc
cld
fstl
or
sbb
loopne
pop
jl
adc
test
subl
in
sub
fisubrs
inc
mov
ficompl
outsb
xchg
or
mov
mov
fs
and
inc
lock
mov
addr16
jo
xchg
movsb
adc
mov
daa
and
xor
add
push
or
xchg
int3
push
adc
jno
sub
leave
xchg
mov
lret
mov
decl
dec
dec
aas
jns
sbb
adc
xchg
adc
enter
icebp
mov
mov
std
std
mov
fbstp
adc
jbe
insb
roll
aam
lods
jno
xchg
xchg
jno
mov
mov
or
push
jne
inc
jmp
jae
jo
or
iret
pop
inc
orl
jmp
xchg
std
outsl
inc
mov
fnstenv
out
xchg
cwtl
lret
sbb
enter
push
sbb
mov
xchg
jl
cmp
sbb
pop
into
fst
fiadds
mov
popa
aam
ds
xchg
incb
out
push
jbe
mov
fcomps
pop
shrl
out
pop
dec
xchg
push
ficoml
scas
ljmp
aad
adc
mov
xchg
scas
and
sub
stos
fildl
fs
inc
push
sbb
jae
clc
icebp
and
or
pop
out
sbb
xor
cmp
xchg
xlat
pop
test
je
sti
fisubrl
push
mov
loopne
sub
ret
push
lea
clc
jge
cmp
fsubr
lcall
jl
adc
repnz
cltd
and
dec
add
pop
lret
push
push
insl
inc
rcrl
cltd
pop
xchg
jp
imul
and
push
stos
mov
das
imul
movsl
xor
xchg
sbbb
pop
jno
mov
sub
mov
lock
mov
xchg
je
xchg
ret
inc
push
daa
push
lea
movsl
mov
cli
mov
pop
sbbb
xchg
int3
mov
fwait
sbb
iret
xor
lret
mov
int
rcrb
int3
mov
and
outsl
xor
inc
movsb
adc
fwait
xchg
cmc
cmc
and
pop
movsb
adc
mov
mov
jno
add
mov
scas
mov
ds
das
clc
aas
or
cld
mov
lcall
pusha
cmp
iret
scas
mov
add
popa
fwait
data16
scas
fbld
hlt
inc
fwait
mov
xchg
dec
test
sti
scas
scas
or
outsb
stos
outsl
xor
faddp
stc
add
dec
sbb
and
inc
xor
int
and
sub
inc
testl
inc
in
mov
mov
mov
outsb
mov
cltd
ret
sub
xchg
stc
jmp
push
pop
icebp
jns
push
mov
mov
dec
xchg
mov
pop
cmp
ja
out
xor
lahf
push
loop
cwtl
xchg
shl
sub
mov
js
gs
sti
push
mov
fcomp
or
xor
mov
adc
lret
scas
mov
call
repz
xor
xchg
int3
cwtl
insb
stos
inc
hlt
add
outsb
inc
or
rcrb
and
lods
add
push
sub
jne
bound
inc
stc
flds
inc
xlat
mov
jecxz
sbb
mov
mov
jmp
in
je
je
stos
pusha
inc
xor
push
mov
in
fwait
xor
pop
fwait
movsl
stc
pushf
cli
out
add
add
iret
in
fistl
cmpsl
inc
dec
xor
jae,pt
dec
test
pxor
push
sub
bound
jb
fisttpll
rcr
sub
dec
ficompl
dec
lds
jmp
movsl
inc
shrb
lea
pop
scas
popf
rcll
xchg
je
repz
es
aas
sbb
stos
dec
sbb
imull
and
outsl
xchg
js
insb
cld
pop
add
daa
adc
jge
inc
mov
in
and
adc
mov
or
push
movsb
aas
adcb
jl
repnz
cmpl
jo
repnz
loope
fwait
test
jbe
dec
scas
add
andb
jnp
cmp
and
dec
mov
stos
ja
mov
jb
lret
js
not
push
jnp
cmc
jp
inc
stc
sub
jle
pop
outsb
fs
mov
int
push
push
lcall
dec
mov
push
cmc
cmp
xchg
rolb
mov
in
inc
ffreep
mov
insb
fwait
jne
xor
into
iret
adc
orl
daa
scas
push
movsb
int3
xchg
mov
leave
pop
and
les
mov
ljmp
cmp
xor
enter
sbb
mov
aad
mov
inc
mov
jl
cmp
mov
imul
jnp
lea
xchg
pushf
jb
cwtl
mov
imul
push
sbb
pop
test
mov
fsubp
fwait
hlt
mov
mov
push
dec
aas
jb
jo
test
mov
push
mov
movsl
fidivrs
adc
jecxz
stc
ss
inc
hlt
roll
dec
jmp
rolb
mov
or
mov
and
cmc
adc
ja
push
pop
add
push
jecxz
call
test
out
mov
pop
mov
stos
loopne
sub
pop
iret
cmpsl
xchg
cmp
and
inc
fst
sub
add
sub
imul
adc
lcall
aad
and
in
jmp
push
dec
aas
cmp
popf
les
aas
movsb
sub
fwait
push
imul
mov
jne
or
push
mov
ljmp
inc
subl
fsubrs
adc
jmp
fwait
loope
and
ja
xor
inc
out
or
movsl
adc
mov
imul
subb
addr16
add
daa
sar
xor
test
push
adc
int3
push
mov
aaa
push
push
and
es
pop
pop
xlat
push
test
arpl
int3
or
push
repz
pop
imul
popf
fsubr
addr16
test
jge
jb
paddw
test
jl
das
xor
addb
rorb
jg
sahf
adc
icebp
in
je
sti
mov
xchg
adc
js
push
inc
dec
add
xchg
and
imul
aaa
ret
cmpl
aad
adc
sbb
leave
notb
inc
sti
and
jle
rolb
test
cmp
fsubrl
movsl
ss
mov
andb
mov
in
mov
and
inc
sbb
cli
addr16
jmp
push
lret
cli
ds
int
xchg
int3
fcompl
mov
imul
fnsave
inc
jg
xor
and
in
dec
xchg
test
aad
cltd
xchg
fsubrs
xchg
mov
int3
ds
shrb
shl
bound
cmc
jge
push
inc
insl
sti
loopne
push
ja,pn
jno
loop
dec
sub
mov
std
xor
adc
dec
mov
push
adc
xor
inc
or
pop
sub
adc
and
jg
jb
mov
fsts
pushf
adc
pop
pop
dec
mov
lods
cmp
xchg
and
sub
push
out
mov
dec
mov
xor
dec
fists
xor
loopne
jmp
fstpl
and
mov
aaa
mov
mov
pop
ss
mov
popa
aam
sub
rorb
lahf
sub
sbb
fisttpll
adc
out
test
popf
adc
jno
stos
leave
sub
sub
in
ss
shlb
and
adc
insb
adc
push
push
sbb
sub
repnz
jo
aas
pop
pop
pop
out
mov
ret
notl
xchg
and
cmp
repnz
faddl
or
pop
inc
dec
gs
loopne
cld
adc
fcmovnbe
inc
push
andb
push
inc
fcoml
fisubrs
stos
and
fildl
aas
mov
clc
adc
js
fists
add
mov
imul
mov
jno
mov
jnp
mov
test
stc
stc
sub
xor
addr16
repz
add
mov
push
out
imul
nop
cmp
mov
jg
add
fwait
push
sbb
in
ret
test
fists
bound
data16
test
cmp
push
loopne,pn
adcb
aam
mov
popf
nop
arpl
rclb
xor
or
push
sti
outsb
cmc
in
aam
or
xor
add
xchg
insl
push
mov
hlt
movsl
lods
and
jno
ss
sbb
fisubs
call
loope
mov
rcll
mov
adc
cmp
das
scas
adc
mov
shlb
dec
push
push
lret
jmp
mov
mov
mov
js
push
popf
and
push
int
ret
cmp
xchg
sub
dec
adc
int3
xchg
push
cwtl
sub
or
lahf
cmp
mov
test
xor
pushf
cmc
sbb
jae
sbb
mov
mov
mov
jmp
dec
sbb
mov
sar
lea
fisubrl
inc
add
push
sbb
testl
cmp
xor
ret
incb
sub
rclb
and
cltd
insb
ljmp
shlb
pop
daa
cld
jb
xor
std
imul
or
cmp
jne
rcl
pop
mov
lret
cmpsb
mov
and
sbb
outsb
mov
leave
pop
shl
fimuls
push
int3
leave
loop
sbb
xchg
mov
push
xchg
or
pop
pop
push
int3
or
test
scas
pop
xchg
test
das
mov
ret
ja
movsl
xchg
inc
mov
mov
xlat
aad
xor
scas
dec
lret
shl
dec
in
add
dec
add
lcall
inc
xor
pusha
ret
pop
adc
imul
jg
sahf
aad
sub
int
jg
add
je
pop
pop
cmp
adc
cmp
int3
ljmp
mov
shll
out
sahf
add
popa
mov
and
test
lods
mov
es
adc
es
int
xchg
push
sahf
fdiv
or
in
or
cmc
and
arpl
out
push
icebp
ret
shlb
sbb
add
aaa
dec
sub
push
cld
xchg
or
ja
xchg
movsb
sub
hlt
nop
mov
ret
lock
jne
sahf
hlt
call
push
dec
cmp
cmp
sbb
fiadds
jae
jne
mov
mov
sub
dec
rcl
fcmovb
add
cmpsb
ja
pop
lea
push
push
stos
jo
add
push
sub
push
xor
jle
stos
xlat
scas
out
fildll
lahf
jbe
test
adc
dec
shll
into
add
xor
pop
insl
sub
pop
mov
push
sti
or
movsb
xchg
adc
repnz
jge
mov
sub
cltd
mov
jb
mov
out
mov
dec
out
dec
mov
mov
inc
fimuls
aas
fsubs
sbb
data16
mov
clc
push
shlb
sahf
inc
lret
dec
das
or
push
insb
mov
inc
jp
push
and
gs
lcall
xchg
and
pop
js
pop
inc
or
testb
sub
xchg
mov
pop
xchg
mov
dec
dec
clc
rcr
xchg
fdivl
add
push
in
idivl
inc
jo
mov
stos
enter
pop
jnp
je
leave
and
mov
dec
push
cmp
xor
in
mov
fstl
jae
push
jb
xor
inc
xchg
pop
sbb
hlt
or
call
insl
adc
xchg
adc
sahf
xchg
xchg
jnp
push
and
out
xchg
lods
pop
mov
xor
popf
and
ror
jp
jbe
mov
add
jmp
adc
rolb
stc
sub
sbb
fs
mov
adc
test
mov
cmpsl
dec
mov
inc
and
mov
sub
and
fwait
xchg
and
sub
dec
imul
mov
sbb
ret
fisubrs
mov
pushf
fimuls
xchg
icebp
fiadds
fmuls
std
pop
pushf
leave
cli
jge
sti
rorb
cltd
push
les
push
push
or
test
es
pop
fwait
cmp
fldt
cltd
fsts
cwtl
sahf
arpl
push
fwait
jmp
dec
and
pop
add
mov
ret
push
sarl
xchg
sub
mov
test
stc
negb
test
push
jne
outsl
in
sarl
andb
fildl
push
mov
andb
push
loop
pop
fiaddl
add
mov
jmp
outsl
xor
cmp
stos
rol
xchg
push
mov
dec
mov
push
daa
sub
and
adc
sahf
cmp
sbb
lret
jno
lcall
rclb
lahf
bound
mov
sub
mov
lret
jp
stos
add
xchg
es
lea
or
push
jae
inc
les
repnz
pop
insl
test
xabort
inc
addps
xor
adcl
lahf
push
test
fs
out
add
test
mov
xor
jbe
mov
and
pop
jne
ds
mov
adc
jecxz
jbe
sub
mov
cld
push
xchg
xchg
adc
out
int3
or
pushf
mov
adcb
fs
cmp
adc
pop
std
insb
ffreep
mov
loop
scas
arpl
sbb
lock
leave
out
into
dec
and
gs
pop
adc
lret
mov
cmp
xchg
xlat
les
xor
insl
and
loop
dec
xchg
add
lock
cmp
push
xor
stc
fwait
mov
mov
out
lock
enter
cwtl
int3
call
sub
hlt
lods
lods
adc
push
inc
jnp
xor
stos
dec
or
dec
xlat
push
push
in
push
inc
loope
mov
push
ja
mov
dec
adc
ret
add
cmc
jbe
int3
push
sahf
inc
in
jbe
cmpsb
icebp
xchg
and
lock
mov
data16
ret
repz
cmp
out
divl
add
mov
lock
xor
lods
ds
jp
and
sub
pop
testl
and
xor
xchg
inc
sbb
jg
push
lahf
movsb
das
inc
push
loop
aas
ljmp
adc
xor
or
adc
mov
pushf
lea
js
pop
in
rcrb
jnp
aaa
push
inc
cmpsb
scas
and
into
fstpl
xchg
sub
jne
dec
mov
loop
add
add
and
or
and
adc
cmp
pushf
sahf
movups
and
cmp
xchg
mov
inc
sbb
fsubrp
or
dec
xlat
cli
out
add
dec
pop
pop
cwtl
imul
mov
adc
jg
popa
mov
and
xchg
jmp
jle
sub
push
xchg
aam
popa
loopne
add
pusha
mov
inc
ds
or
daa
or
pop
ljmp
pop
cmp
ljmp
jge
int3
mov
mov
cmc
push
arpl
std
idivl
lahf
out
enter
mov
roll
data16
sub
lret
cmp
cmp
pop
add
push
stos
call
mov
mov
scas
push
in
jg
negl
jle
and
sub
or
js
lods
lods
int
sahf
sub
jb
xchg
inc
mov
in
fidivs
mov
xchg
je
push
jno
mov
out
xor
jns
cmc
adc
shr
ret
xor
test
xchg
xchg
mov
mov
loope
jge
push
add
dec
xchg
xchg
test
inc
xchg
mov
aaa
scas
cmc
les
repz
rorb
cmp
xchg
scas
aaa
dec
js
dec
xchg
xor
xchg
test
cmp
push
movsb
repz
movsl
push
jg
or
jae
lods
push
jg
push
push
mov
jnp
stc
sbb
pop
lcall
mov
mov
dec
cltd
mov
cmpsb
push
sbb
xchg
add
lock
fadd
sub
xchg
nop
cld
iret
mov
mov
shll
imul
outsl
lcall
stos
les
lret
and
jmp
xor
sbb
push
std
mov
lahf
movsb
xor
cld
insb
jge
cltd
sbb
lods
ficompl
xchg
or
or
ss
pusha
mov
or
pop
or
ss
sti
cwtl
adc
mov
jbe
xchg
clc
inc
mov
dec
sub
ret
cwtl
data16
imul
sahf
mov
cmpsl
insl
in
push
and
ljmp
pop
dec
pop
mov
xchg
jl
in
push
jle
inc
test
inc
icebp
xchg
rorb
mov
jmp
push
pop
xor
in
bound
out
pop
and
cmovg
inc
pop
ss
das
xchg
sub
cld
shl
stc
jge
pop
push
dec
mov
dec
fbld
insl
ror
pop
or
cmc
mov
pop
mov
lret
and
inc
mov
inc
add
pop
rorl
lret
or
cwtl
dec
add
loope
jbe
xchg
es
push
fldenv
gs
pop
mov
sahf
pop
mov
loopne
and
insl
adc
cld
sti
xor
test
stos
loope
sbb
and
and
mov
aam
add
mov
fbld
mov
cmp
ljmp
push
add
and
out
lret
hlt
mov
arpl
or
add
dec
pusha
or
jmp
cmp
sahf
lcall
pop
insb
pop
pop
mov
dec
lret
adc
lea
cmp
cli
mov
mov
xor
mov
int3
dec
xchg
fiadds
xor
xchg
push
xor
fninit
add
dec
push
aam
fisubrl
je
mov
adc
cli
insl
cs
jne
fsubr
loop
fcmovnu
jne
xor
cmp
pushf
lret
inc
fsubrl
inc
xchg
mov
adc
pand
add
dec
and
js
jge
and
or
scas
test
push
mov
xor
jl
sub
push
push
sub
mov
mov
repnz
or
pushf
jecxz
pop
inc
xor
mov
sub
leave
loopne
fdivs
mov
and
ret
jle
push
sahf
add
push
loope
and
add
push
add
inc
in
mov
jmp
sbb
popa
clc
jg
scas
xor
enter
scas
popl
or
cmp
sbb
fsubs
push
jle
or
add
cltd
xor
cmp
test
sbb
fistps
inc
inc
inc
adc
xor
mov
pop
repz
iret
pop
sbb
and
inc
mov
push
roll
xchg
aad
and
xor
cmp
mov
jnp
push
leave
push
out
andb
and
dec
test
add
dec
add
popf
imul
cmp
es
fstps
sbb
shr
adc
rcrb
cmp
hlt
addr16
mov
inc
lahf
cs
mov
mov
xor
jg
mov
nop
cwtl
push
xlat
cmp
mov
ljmp
aad
lret
jnp
cwtl
jl
jg
rolb
sahf
bnd
enter
out
sub
xor
imul
test
adc
pop
das
js
lds
scas
js
sub
push
int3
sti
xor
inc
decb
in
or
sbb
push
cmp
cli
dec
inc
fists
pop
adc
adc
mov
mov
negl
xchg
adc
hlt
xor
push
rcr
sahf
or
jne
push
fwait
nopl
inc
je
jge
mov
push
imul
clc
lcall
sub
rorb
enter
lea
jae
aam
or
jle
push
andl
xor
pushf
imul
xchg
inc
in
bound
ss
lock
push
popf
jns
jl
rorl
pop
shlb
test
push
xor
hlt
out
inc
sahf
das
mov
dec
cltd
jno
stos
mov
and
test
mov
sbb
jae
sub
test
dec
and
dec
test
out
insl
xchg
pop
pop
cli
jnp
and
std
repz
dec
push
outsb
inc
cmp
xchg
sbb
mov
dec
xor
mov
pop
fiadds
lret
imul
sbb
fwait
cld
addr16
arpl
pop
sti
push
setae
jge
cltd
aad
pop
jge
push
push
lods
dec
int3
jmp
jg
shl
repz
idivb
jae
ret
cmp
mov
scas
inc
sarb
cmpsl
sub
mov
sbbl
jnp
cmp
cmp
dec
test
ret
cmp
test
xchg
int
sub
leave
ljmp
pop
in
clc
ret
jbe
inc
arpl
sbb
in
adc
xor
call
pop
or
push
push
ljmp
test
repz
jp
aad
xor
cmpsl
fisubrl
mov
jo
cli
das
mov
hlt
push
in
or
loope
dec
clc
leave
rolb
cwtl
sub
in
lods
out
push
out
adc
incb
pop
jle
jns
xor
mov
cmp
push
lea
push
rcr
or
mov
pop
inc
dec
pop
inc
push
jecxz
cmp
lret
mov
js
ja
test
pop
xor
dec
adc
add
fisubrs
das
std
xchg
outsb
dec
or
push
sbb
into
pop
adc
aad
out
cld
mov
dec
sti
loop
ja
adc
adc
stos
out
aad
lret
push
icebp
lcall
dec
mov
jge
int
mov
cmpsl
jle
push
adc
ret
aam
js
rcll
jmp
aas
shr
cmc
ds
mov
dec
dec
stos
out
and
out
and
rcl
outsb
mov
lsl
or
bnd
push
adc
adc
sub
or
adc
push
lea
mov
xchg
sub
or
mov
dec
sbb
je
sbb
xor
adc
dec
mov
mov
gs
push
pop
push
mov
adc
rcrb
aad
add
int3
pop
xchg
xchg
xor
cs
in
pushf
cmp
sti
lods
wbinvd
adc
movb
inc
jle
pop
and
or
orl
sarb
mov
mov
push
orb
inc
jp
mov
and
repnz
and
mov
iret
data16
mov
adc
imul
lock
add
adc
enter
push
cld
fs
fildll
mov
xchg
lahf
test
push
mov
and
jno
fistpl
and
cmp
ja
mov
sub
mov
in
repz
add
repnz
add
or
lret
jp
or
movsb
add
mov
insb
jp
into
call
into
cmp
xchg
mov
mov
pop
repz
mov
pop
or
imul
or
in
fcompl
pusha
and
aad
add
push
xchg
push
pop
xorb
sbb
mov
mov
dec
leave
dec
ret
sub
mov
add
lea
push
mov
or
pop
push
dec
movsl
pop
data16
loop
push
sti
mov
pop
int3
arpl
leave
xor
bound
fistpl
push
dec
out
cmp
les
scas
repnz
xchg
cs
add
xchg
ja
adc
fstp
add
jmp
inc
mov
ret
xchg
out
or
shrb
shl
dec
dec
push
mov
loope
fwait
mov
xor
push
mov
iret
pop
xchg
je
add
xchg
jbe
mov
sar
push
mov
inc
lds
cmp
cld
mov
outsl
into
notl
out
lods
inc
into
mov
adc
les
ja
push
lahf
add
imul
cmp
stos
pop
xor
mov
push
and
mov
xchg
sbb
inc
pushf
insl
icebp
mov
scas
mov
rorb
lret
cmp
or
test
pushw
dec
push
sarb
loop
mov
cmp
xor
jno
in
mov
pop
rorl
shrb
sub
jb
add
pop
add
in
dec
cmpsb
inc
daa
mov
xor
fs
repz
fwait
xchg
mov
ljmp
jg
mov
pushf
jge
cmp
pop
add
jnp
xor
adc
inc
pop
repnz
cmp
add
or
xchg
test
mov
rcll
xchg
mov
or
cmp
lahf
jne
add
dec
add
leave
std
scas
jb
adc
adc
mulb
je
and
inc
jge
cmp
cmp
loopne
fimuls
mov
fdivs
out
insb
pop
pop
imul
cmpsl
pushf
ds
add
add
mov
loope
movsb
pop
into
or
cmp
mov
out
jo
mov
scas
test
push
ja
icebp
aas
inc
mov
movsb
pusha
ret
out
outsb
rolb
test
cltd
jge
test
je
mov
cwtl
and
fnstsw
push
mov
jp
or
test
sub
enter
pushf
push
in
mov
outsl
mov
sub
mov
dec
sbb
lods
stos
adc
inc
ds
popa
push
mov
cmp
dec
fdivrl
xor
xchg
mov
std
lret
cmp
fisubrs
jmp
jbe
and
iret
pop
call
push
fcoml
cmp
ret
push
pushf
cmp
mov
and
pop
mov
ficomps
daa
or
mov
jmp
fcmove
out
or
sahf
gs
inc
push
jp
ljmp
out
aas
mov
xor
repz
xchg
cmp
xor
jl
push
out
adc
push
jno
sbb
pop
dec
dec
or
movsl
cmp
enter
xchg
bound
dec
out
pushf
pop
cld
mov
pop
or
push
and
pop
outsb
mov
scas
xor
stos
int3
push
cmp
pop
scas
xchg
and
in
cmp
lret
push
call
mov
xor
inc
jnp
cmpl
les
in
jg
into
icebp
nop
inc
lcall
cmp
insl
iret
lods
cmpsb
dec
xchg
push
int
xchg
jae
jl
sub
jl
fidivrl
adc
ljmp
stos
cltd
jns
add
fwait
dec
mov
jge
push
mov
fisttps
xchg
lret
fdiv
ds
xor
add
dec
gs
jns
mov
push
push
pop
daa
xchg
fincstp
xchg
mov
mov
add
ret
mov
jo
rcll
pusha
or
xor
jnp
mov
pop
dec
scas
push
dec
adc
jmp
inc
fistl
mov
push
mov
pop
lret
xchg
shrl
dec
push
mov
test
xor
int3
mov
dec
mov
je
jl
add
sar
lds
jo
pop
das
imul
jnp
mov
xchg
mov
out
sub
dec
push
jne
or
icebp
cmp
cmp
fildl
es
add
or
dec
insb
push
add
pop
or
fistl
mov
ss
xchg
scas
xchg
call
mov
xor
in
popa
push
and
cmp
call
gs
inc
lret
jbe
xor
int
jmp
jecxz
inc
loopne
cld
or
ficomps
adcb
inc
pop
mov
imul
dec
lods
aas
gs
cld
fisubrs
fsub
jnp
stc
cmc
adcl
xor
mul
ret
or
outsb
pop
mov
gs
fcmovnu
fdivl
mov
mov
xlat
jg
pop
filds
daa
scas
inc
jmp
mov
test
push
shll
push
dec
cmp
jmp
loopne
add
loopne
loope
xor
mov
jnp
mov
fnstcw
aaa
cmp
ljmp
sbbb
mov
stos
dec
dec
xor
xchg
icebp
bound
pusha
push
xchg
lods
fwait
pop
add
je
loope
mov
dec
mov
pop
ljmp
out
mov
cli
repnz
rcl
sub
fstps
and
pop
mov
add
test
xchg
les
dec
mov
loope
lods
fisubrl
mov
dec
rol
arpl
rcr
mov
aam
sub
push
jne
cmc
mov
xor
adc
mov
rcrb
mulb
sbb
mov
cs
dec
mov
es
or
sbb
pop
je
inc
push
ja
gs
pop
jl
dec
negb
sub
testb
into
dec
jns
xchg
pop
mov
inc
stos
pushf
pushf
loop
cwtl
fsubs
inc
testl
inc
xchg
sbbl
test
aad
xor
mov
lret
cltd
xchg
inc
in
stos
lret
decb
push
es
inc
pavgw
xchg
cmp
test
cli
or
shrb
jo
stos
mov
data16
xchg
imul
rclb
add
into
cmp
mov
imul
ss
fiadds
cmp
popl
test
sub
pop
xchg
clc
ret
test
jp
stc
push
pop
roll
das
adcl
andb
mov
data16
sarl
jb
popa
jne
push
push
dec
jno
cmp
mov
jbe
es
fsubl
pop
mov
sub
arpl
or
test
repnz
inc
add
cltd
stc
push
pusha
sub
nop
int
xchg
scas
push
fidivrl
inc
cwtl
xchg
mov
fiadds
insl
inc
mov
insl
push
sub
shl
jns
inc
jb
xchg
sarl
orl
and
mov
mov
