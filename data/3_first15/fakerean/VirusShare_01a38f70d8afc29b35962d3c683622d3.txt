pop
mov
push
test
mov
call
ljmp
popl
inc
cmp
xor
push
mov
inc
int
pop
jmp
pop
dec
lcall
lahf
sbb
cli
stos
inc
aas
and
push
jmp
cmp
pop
decb
ss
sub
inc
scas
sub
or
mov
enter
cltd
mov
sbb
inc
iret
or
shrl
les
mov
fcomps
shlb
dec
xchg
mov
jno
mov
jns
movsb
jmp
fisttpll
sub
pop
int3
fwait
test
bnd
cmp
ss
das
fimuls
mov
call
test
int
stc
ficompl
push
inc
fdivrl
sbb
sar
or
inc
cmc
push
loope
in
fmull
push
mov
into
hlt
jnp
decl
xchg
cld
xor
scas
dec
xchg
add
pop
dec
jb
dec
aad
mov
lods
cmp
cld
mov
bound
shll
adc
outsl
sar
push
sbb
cld
xchg
add
jno
hlt
dec
add
arpl
adc
insb
dec
outsl
dec
in
jl,pn
add
xor
cmp
inc
in
int3
inc
mov
pushf
mov
adc
sbb
xchg
mov
xchg
jmp
pop
stos
loopne
or
lcall
cmp
inc
arpl
push
pushf
enter
cmp
add
repz
nop
mov
ret
sbb
clc
cli
loopne
mov
jnp
cld
sar
stc
jl
jl
mov
push
cld
loop
jno
sub
lods
push
cmp
add
xchg
rcll
inc
insb
push
mov
inc
in
mov
push
dec
fs
xchg
jb
pop
cmp
dec
mov
ret
iret
adc
cmpsb
sbb
xor
fidivl
popa
sbb
scas
pop
sub
mov
lahf
mov
add
mov
test
push
out
mov
mov
arpl
adc
mov
jo
in
imul
xchg
mov
xchg
lods
les
cmpsl
and
fcmovnu
or
movsb
scas
jae
je
das
mov
addr16
inc
or
dec
int
rcll
loope
sbb
cs
int3
aam
lods
pop
div
add
test
adc
adc
sub
in
jno
xor
mov
push
aad
adc
incl
outsl
jae
ss
mov
pop
bound
ror
or
inc
sbb
cmp
loop
ss
fimuls
cld
rep
xor
or
inc
stc
cmp
sbb
ds
push
nop
shlb
push
cmp
shll
dec
scas
or
inc
mov
daa
add
add
xchg
aas
add
arpl
cmp
push
ljmp
mov
xor
sbb
add
cwtl
push
negb
jecxz
cs
aaa
cmp
cltd
or
xchg
enter
fiaddl
movsb
shrl
jbe
imul
hlt
xchg
jne
sub
mov
or
clc
iret
adc
inc
mov
mov
push
push
sbb
sub
lahf
and
pop
je
test
or
mov
inc
roll
fidivrl
jno
or
hlt
ss
jne
inc
adc
bnd
dec
jns
fidivl
pusha
sbb
das
mov
test
repnz
adc
cmp
popf
dec
inc
add
data16
iret
sbb
xchg
xchg
fstpl
fldt
mov
and
pop
push
int3
clc
or
mov
ret
gs
fs
scas
xchg
cld
insl
mov
rclb
mov
addr16
popl
das
ret
xor
loope
and
pop
les
sub
and
gs
cmp
xor
sbb
scas
xchg
in
mov
movsl
aas
cmp
inc
mov
xchg
or
jecxz
mov
push
push
mov
rol
or
sub
jne
sahf
insl
inc
inc
pop
mov
adc
push
add
jmp
rolb
shrl
insl
ljmp
movsb
movsl
push
inc
int
dec
mov
cmp
aad
in
xchg
and
rol
xchg
fisttpll
push
and
pop
cmc
pop
cmp
test
mov
xchg
lcall
pop
aad
cmp
xor
loope
push
push
inc
add
andl
jnp
outsb
lahf
adc
adc
inc
insb
add
stc
repnz
push
sarl
pop
mov
push
hlt
add
and
cmp
pop
fabs
mov
iret
push
push
aad
push
sbb
ja
std
ds
xchg
cmpsl
adc
adc
push
ds
in
cmc
mov
movsl
jp
ja
lods
dec
aas
lods
out
mov
sub
push
sub
rep
inc
add
mov
inc
dec
add
sub
lea
lea
test
je
dec
add
and
mov
mov
add
sub
and
mov
int3
lea
imul
or
sub
sub
mov
sub
imul
inc
add
lea
add
add
sub
mov
mov
add
movzwl
add
mov
lea
add
add
add
sub
mov
inc
sub
sub
mov
mov
or
add
add
mov
mov
xor
sub
sub
add
mov
add
inc
add
add
mov
inc
movswl
xor
mov
mov
call
dec
add
and
mov
mov
inc
add
and
add
mov
sub
movswl
dec
add
mov
add
and
sub
add
mov
pop
add
ret
sub
sub
sub
lea
push
dec
sub
push
sub
mov
mov
mov
push
sub
push
dec
push
or
add
push
call
mov
push
add
add
mov
dec
sub
xor
lea
mov
add
sub
add
mov
mov
mov
dec
xor
add
sub
mov
dec
xor
dec
sub
mov
sub
sub
or
mov
mov
mov
test
je
inc
and
add
mov
add
jmp
jb
and
xor
add
mov
movzbl
add
imul
add
mov
sub
movsbl
sub
xor
add
xor
xor
sub
pop
inc
mov
test
jbe
mov
add
movzwl
add
add
push
incl
add
add
pop
add
add
lea
push
or
inc
dec
sub
and
mov
mov
add
sub
movzbl
add
sub
add
mov
and
inc
movswl
mov
and
add
mov
mov
mov
add
pop
dec
inc
dec
sub
mov
mov
xor
sub
nop
jne
add
mov
mov
lea
sub
or
movzbl
mov
mov
sub
mov
sub
add
mov
mov
sub
dec
mov
add
sub
test
jbe
lea
add
or
sub
add
lea
lea
dec
xor
or
add
push
mov
xor
imul
pop
xor
or
xor
add
lea
mov
add
dec
movzbl
sub
mov
add
mov
and
sub
mov
dec
add
movzbl
add
mov
lea
mov
add
movsbl
movzbl
sub
mov
add
lea
and
dec
add
movzbl
sub
mov
xor
mov
inc
add
inc
add
add
mov
and
dec
jne
dec
mov
add
mov
lea
pop
add
sub
pop
and
mov
pop
mov
add
inc
add
add
add
jmp
jmp
mov
xor
inc
mov
sub
sub
mov
add
imul
repnz
dec
add
add
jmp
lea
sub
xor
or
add
mov
inc
movzwl
add
sub
mov
add
add
xor
add
mov
movzwl
sub
pop
inc
sub
pop
jmp
push
mov
xor
add
sub
push
add
add
push
mov
xor
and
push
add
call
add
jmp
sub
mov
mov
movswl
mov
sub
movzwl
mov
mov
lea
mov
add
sub
xor
sub
sub
push
mov
push
sub
sub
mov
imul
sub
inc
mov
pop
sub
xor
pop
and
add
cmp
jne
lea
push
sub
sub
mov
inc
push
add
lea
push
or
dec
xor
inc
sub
xor
mov
xor
imul
dec
push
add
sub
xor
lea
mov
sub
add
mov
sub
mov
movzbl
add
movzbl
add
sub
mov
add
mov
movzbl
inc
add
xor
add
lea
sub
sub
inc
movzwl
sub
mov
lea
add
sub
xor
mov
cmp
jb
mov
xor
and
mov
add
inc
inc
sub
mov
inc
sub
dec
mov
movsbl
mov
dec
mov
mov
and
dec
cmp
jmp
mov
sub
add
sub
add
sub
mov
mov
xor
inc
mov
xor
mov
mov
mov
call
sub
sub
inc
xor
mov
mov
xor
push
add
sub
sub
mov
sub
xor
dec
add
call
lea
add
call
movswl
add
call
mov
mov
call
sub
add
add
push
add
lea
sub
sub
add
sub
mov
xor
sub
sub
mov
xor
add
sub
call
add
mov
pop
add
add
pop
dec
imul
pop
add
mov
pop
sub
add
pop
xor
add
pop
pop
mov
push
push
push
jmp
push
mov
push
and
push
sub
or
push
add
mov
push
add
sub
mov
sub
push
jmp
push
sub
mov
add
sub
inc
add
mov
xor
or
or
sub
mov
sub
or
imul
sub
mov
pop
pop
jmp
push
call
dec
inc
inc
sub
mov
inc
add
sub
sub
push
lea
add
call
movsbl
add
mov
pop
lea
lea
movsbl
add
imul
test
je
jmp
push
push
mov
push
push
movzbl
dec
push
movzbl
push
mov
mov
mov
add
sub
imul
add
mov
inc
mov
add
push
sub
sub
xor
mov
push
xor
dec
push
sub
mov
push
lea
and
add
movzwl
sub
call
mov
add
add
imul
sub
mov
pop
jmp
push
mov
push
inc
mov
add
inc
je
inc
dec
sub
mov
mov
xor
mov
add
xor
mov
mov
lea
lea
movswl
movswl
cmp
jne
movswl
add
sub
mov
add
inc
mov
dec
sub
lea
mov
jmp
mov
push
movzwl
mov
inc
sub
test
je
add
mov
add
sub
sub
add
mov
repnz
add
add
pop
jmp
sub
pop
sub
mov
sub
add
sub
add
mov
movb
mov
inc
movzbl
movzbl
dec
jne
dec
pop
sub
pop
pop
jmp
sub
sbb
xchg
push
lret
stc
cmp
div
lret
outsl
repnz
stos
mov
sbb
sbbb
mov
dec
sub
shrb
jl
ljmp
add
outsb
outsl
arpl
bound
sbb
int3
push
rol
addr16
mov
ljmp
and
outsb
scas
mov
std
inc
and
mov
fwait
es
ret
ret
dec
mov
shll
mov
out
cmp
scas
ficomps
and
fxch
icebp
pop
add
in
push
imul
mov
mov
iret
call
xchg
ja
pop
add
gs
push
daa
jno
ret
xchg
pop
or
ljmp
dec
add
outsl
sti
mov
fisttps
lds
inc
movsl
or
sahf
push
and
pushf
jle
scas
fstl
pop
cmp
cld
xchg
sub
lret
inc
mov
xchg
xor
cmp
lods
push
lret
sub
pop
pop
fadds
xor
mov
mov
mov
mov
sub
push
mov
call
jecxz
ds
xchg
lock
repz
mov
jns
pop
mov
ss
pop
jge
and
test
scas
sub
and
or
jecxz
cs
into
xor
stc
sbb
cmc
xor
leave
mov
enter
fiaddl
cmp
stos
nop
in
int
xor
int
cli
jle
icebp
sbb
add
flds
xor
mov
mov
mov
stos
push
jmp
sub
lods
ss
adc
dec
pop
sbb
sub
mov
fs
outsl
shrb
es
movsb
xchg
das
jne
jnp
mov
sbb
notl
cmp
cwtl
scas
mov
xchg
sti
jecxz
and
mov
mov
inc
adc
les
jge
cmp
subl
mov
andl
test
xchg
cmpsb
push
mov
jp
adc
jmp
shrb
sbb
xchg
pop
roll
pop
mov
insb
clc
pop
cld
push
mov
imul
sbb
arpl
lcall
sarl
out
fcomp
pushf
into
es
jbe
andl
dec
cltd
outsb
adc
inc
movsl
loop
xor
daa
cld
sbb
test
cwtl
icebp
scas
into
cmpsl
mov
enter
ljmp
fucomi
les
adc
jl
dec
inc
cwtl
and
jg
mov
scas
adc
lea
mov
in
sbb
and
mov
fiaddl
cmpsb
dec
and
push
lret
stc
lods
cli
ja
jae
cmp
xrelease
mov
sub
cmp
cmc
outsl
das
or
fiadds
stc
call
enter
lods
cmc
lret
outsb
test
fwait
mov
push
push
and
sbb
push
mov
sahf
jge
pusha
insl
jnp
jle
cmp
dec
cmc
jge
xchg
jg
mov
dec
mov
psubd
and
movl
std
cmp
subb
cld
push
int3
xor
es
pusha
jno
jl
out
and
cmp
mov
data16
and
mov
data16
divl
xchg
out
mov
xchg
mov
fs
add
cltd
shlb
mov
repnz
lret
scas
lahf
push
clc
cmp
inc
fsubs
fldenv
shll
dec
insl
dec
sbb
scas
fwait
clc
sahf
rclb
add
data16
fcoml
sbb
ficomps
mov
rorb
cmp
gs
sbb
loope
jns
repz
push
mov
jl
dec
addr16
jmp
outsl
sbb
scas
fcmove
ret
jns
xor
mull
pop
inc
dec
dec
add
mov
dec
mov
push
sub
pushf
aaa
lea
xchg
xor
sub
sbb
lea
movsb
ds
fmull
adc
mov
xchg
jb
out
cld
sub
xchg
jg
mov
adc
aam
repnz
rcrb
sbbb
and
aad
stos
pop
lahf
adc
ljmp
dec
push
jno
add
inc
sub
mov
mov
pop
addr16
pop
enter
push
loopne
xor
into
lahf
mov
mov
neg
mov
mov
bound
mov
jmp
fisubrl
sti
jge
sti
fwait
xor
sbb
pop
or
push
in
adc
mov
cmpb
jge
and
data16
push
jae
aad
fidivs
cmp
daa
or
dec
inc
int3
lods
dec
lds
adc
add
and
dec
cmp
push
pop
fisubs
in
xor
inc
out
shll
sbbb
cs
sub
jne
insl
ds
imul
sbb
out
test
dec
cmpsb
and
push
pop
mov
popf
mov
push
out
in
mov
ficompl
xor
cmp
fdivrp
and
fstl
push
pop
mov
dec
roll
clc
mov
in
jecxz
push
out
in
lret
push
xchg
clc
mov
ja
test
xchg
and
pop
jle
lods
aam
sbb
lds
xor
mov
addr16
mov
dec
insb
xchg
stos
or
into
pop
insl
xchg
clc
popl
push
mov
ds
test
push
test
hlt
sti
sub
cwtl
data16
fstp
xlat
cli
or
fs
cld
cwtl
cmp
xchg
xchg
push
shlb
pop
fidivrl
stc
dec
pushl
xor
push
cmp
pop
shlb
sbb
mov
sub
or
shr
aad
repz
xchg
shrl
test
popf
stos
jl
mov
test
xor
jl
lods
call
ss
pushf
loope
push
cmp
lea
dec
rorl
adc
adc
push
xor
ret
xchg
mov
clc
loopne
rolb
shll
ret
push
pop
xchg
loope
and
or
in
push
cmpsl
in
jb
and
fbld
jo
or
push
test
inc
mov
pop
ja
repnz
scas
mov
lods
out
les
push
outsl
jecxz
aad
test
in
mov
mov
divl
leave
pop
inc
add
pop
outsl
adc
adc
lods
push
or
and
repnz
test
dec
dec
add
or
sub
in
pushf
fisttps
push
cmp
xchg
mov
lock
filds
popa
xchg
and
or
cmp
lahf
pop
mov
mov
rcrl
mov
imul
mov
push
add
jns
mov
dec
push
lea
in
fld
ja
jae
xlat
mov
mov
loope
call
stos
xchg
out
dec
loopne
rcr
clc
cmp
in
mov
pop
pop
xor
les
and
sub
push
pop
aam
push
fnsave
push
cmc
daa
pushf
leave
in
stos
xchg
imul
das
cmp
and
andb
hlt
sub
mov
mov
sub
out
ror
mov
push
mov
iret
ret
sub
add
xchg
lret
cmp
addr16
out
lcall
sub
lahf
jae
push
out
adc
arpl
and
inc
data16
pop
jge
adc
push
add
jb
shrl
cwtl
xchg
lds
arpl
push
pop
and
cwtl
subl
testb
cld
lods
je
movsb
xchg
pop
sbb
pop
and
dec
xchg
sub
movsb
cmpsb
cmp
push
push
lret
jmp
cmp
sub
sub
in
cld
adc
xchg
js
push
mov
test
add
mov
add
adc
mov
dec
or
loop
add
add
pop
and
lods
adc
in
js
std
sub
inc
sub
pop
and
sub
jae
sbb
mov
mov
pop
pop
jno
ja
jb
fldl
lods
mov
xchg
fdivl
add
lea
das
add
add
sbb
cmc
sub
pop
mov
jle
add
dec
lods
mov
xchg
xchg
cmp
push
je
enter
fwait
sbbl
sti
cmp
popa
xlat
push
int3
cmp
fimull
xchg
out
imul
cli
xchg
xchg
aaa
ja
mov
pushf
xchg
rcl
jmp
push
adc
in
sbb
cli
aaa
fmul
cmp
in
shll
adcl
mov
sub
outsb
cmp
mov
add
jbe
in
sub
lret
sub
leave
hlt
pop
lret
out
dec
sbb
push
push
pop
sub
mov
sti
push
mov
lock
adc
loope
mov
push
mull
fdivs
pop
pmulhuw
insb
push
jecxz
es
sbb
jge
popa
or
pop
test
pop
sahf
mov
mov
gs
call
ret
aam
sti
dec
jnp
xor
lret
aas
outsl
fidivrs
xchg
movsl
sub
dec
jo
shl
mov
sub
mov
dec
gs
xor
jmp
jnp
adc
push
jae
xchg
mov
lret
sbb
call
xchg
mov
mov
or
pop
or
and
xlat
fstl
std
xchg
js
add
add
mov
ret
mov
lahf
pop
jnp
pop
fdiv
ja
pop
and
daa
mov
push
push
xchg
inc
repz
sti
adc
sarl
notb
sub
pop
add
sub
fcoml
repz
xor
jo
sub
or
fbld
in
dec
or
out
xchg
fisttpll
mov
cmp
je
push
and
test
mov
mov
ss
jp
and
scas
loop
stos
or
sub
or
inc
jmp
mov
getsec
sub
dec
xchg
cwtl
js
repnz
sub
mov
or
or
jnp
xchg
shlb
pop
dec
out
mov
sub
mov
aas
aad
adc
dec
add
rcll
mov
or
mov
sub
lods
sub
sti
es
pop
jnp
pop
push
out
addr16
adc
mov
mov
scas
aad
push
adc
imul
inc
push
ret
jb
in
sbb
ror
cmp
ds
stos
cmpsb
push
inc
sbb
sbb
inc
sub
fincstp
push
mov
shl
push
sub
int3
fsubrs
leave
mov
ja
cld
imul
sbb
dec
inc
adc
sub
test
fisubrl
stos
dec
jg
or
repz
adc
testl
ret
test
je
bts
jecxz
lods
int
xor
dec
pop
push
cmpsl
pusha
and
pop
ss
fld
fisubs
mov
add
rcrl
in
outsb
pop
outsl
jae
stc
fwait
push
jb
dec
push
cld
cltd
or
loopne
scas
or
addr16
pop
fmuls
jne
cmc
mov
iret
add
lods
sub
repnz
jae
mov
xor
lods
bound
and
loop
xchg
pop
cltd
inc
inc
mov
out
scas
pop
push
mov
mov
mov
xor
pusha
jg
xchg
adc
xchg
bound
pop
inc
mov
shrl
add
and
mov
dec
mov
aam
test
and
add
adc
cltd
fimuls
pop
jne
mov
cltd
mov
xor
cli
sub
fidivs
sbb
sbb
pop
jb
push
pop
xchg
cmp
hlt
pop
xor
push
rcrb
popa
mov
cs
jl
mov
lret
out
inc
pop
in
push
sub
daa
mov
les
in
loope
mov
fisttpll
xor
mov
push
mov
pop
jle
sbb
mov
jae
cmp
pop
mov
mov
inc
or
shrb
sahf
enter
icebp
insb
push
xor
mov
xor
sub
out
cs
xlat
icebp
jg
fiaddl
inc
icebp
push
pop
sub
clc
test
stc
and
ja
dec
mov
int
adc
cmp
fmull
les
shll
adc
jo
loope
cli
popf
imulb
mov
sub
pusha
sub
sbb
mov
mov
pop
sbb
cli
fs
mov
push
rcll
ljmp
scas
stos
mov
push
bnd
adc
jnp
mov
mov
aad
shll
dec
push
loope
mov
aas
jne
cmpsb
popf
int3
gs
out
xchg
pop
outsl
stos
dec
fdivs
int3
out
lods
xor
xlat
sub
cmp
dec
imul
mov
imul
push
cmpsb
int3
pop
jmp
test
das
inc
or
add
jbe
ret
mov
cmpsl
mov
jl
sbb
dec
or
cltd
pop
mov
test
xlat
ss
movsb
pop
call
jmp
or
xchg
fisubl
and
dec
lret
out
or
jl
movsb
pop
push
fwait
pop
in
add
push
push
mov
frstor
scas
frstor
pusha
outsb
addb
fidivrl
or
jne
enter
clc
aaa
ret
leave
push
in
ljmp
and
jno
inc
insb
pop
ret
dec
test
pop
outsb
and
push
cwtl
lods
loop
fwait
paddusb
add
adc
jle
jmp
rorl
les
aad
scas
pop
stc
mov
push
sub
cmp
push
and
mov
adc
outsb
in
es
jle
ucomiss
pop
repz
arpl
xor
sbbl
xor
lret
sub
ss
add
jp
out
sti
out
push
jno
out
inc
xor
cli
xlat
lea
push
cmp
push
aas
mov
and
dec
outsb
fists
xchg
dec
or
pop
inc
jecxz
push
sub
repz
jge
pop
pop
dec
test
js
fisttpl
or
stos
xchg
testb
insb
addr16
clc
data16
xchg
mov
cmp
inc
daa
stc
ljmp
cmp
sbb
out
nop
popf
in
sub
test
inc
sti
filds
push
cmpsb
push
push
mov
mov
lret
or
xchg
aam
rolb
pop
mov
cmc
jle
mov
aaa
or
rolb
mov
push
xor
popa
rcr
dec
sbb
test
fsubs
scas
xor
mov
mov
adc
lcall
in
fwait
mov
idivb
sbb
sbb
pop
xchg
sub
xchg
mov
jecxz
push
int
testb
jb
enter
fmul
adc
jbe
fwait
leave
inc
sbb
sub
jb
push
in
ret
jbe
push
dec
mov
jl
aad
pop
inc
arpl
pop
xchg
sbb
repnz
pop
scas
add
cmp
pop
inc
mov
adc
mov
xchg
imul
jmp
push
jecxz
jbe
and
mov
test
data16
dec
sbb
das
xor
xor
or
adc
repnz
jmp
sbb
frstor
jbe
push
popf
jle
pop
jne
and
push
call
lcall
sbb
test
inc
scas
inc
sub
lahf
shl
add
jle
pop
aas
lock
xor
push
adc
mov
fs
mov
sbb
aam
pop
push
fildl
sbb
stos
jne
rorb
mov
fwait
addl
xchg
mov
or
test
fwait
int3
das
es
sbb
cmp
mov
xchg
mov
push
lret
xchg
fsubrs
or
out
mov
jmp
add
in
jmp
mov
or
lock
ds
pop
dec
pop
xor
and
cmpsb
fs
outsl
rolb
lods
ficoml
jge
xlat
stc
int3
mov
mov
cmp
mov
mov
pop
push
test
dec
inc
inc
jp
jecxz
es
out
lods
cmp
and
push
and
sbb
inc
jmp
or
xor
out
sub
and
shlb
add
inc
int
out
pop
xor
mov
aas
pop
mov
push
inc
xor
addr16
jecxz
or
fwait
fwait
adc
pusha
push
mov
xchg
push
cmpsl
jp
cld
inc
lods
xor
xchg
push
cs
or
outsb
push
push
adc
xchg
adc
inc
lods
inc
push
cwtl
dec
adc
das
aam
dec
jge
and
roll
jae
xchg
shl
xor
sub
or
lds
cmp
pop
inc
xor
jp
sti
out
and
pop
cmp
xchg
jbe
call
or
sti
and
fistps
mov
rdmsr
push
sub
dec
add
test
enter
pop
cmpsb
pop
mov
ljmp
test
ret
mov
out
sub
out
cld
enter
dec
mov
jo
push
mov
push
ret
or
push
cs
or
pop
stos
dec
push
ficompl
rorb
push
pop
enter
pushf
jle
cltd
repz
out
inc
hlt
jg
aam
adc
loopne
push
mov
lods
hlt
push
ficoms
add
popf
daa
mov
adc
and
jns
test
xor
test
sub
sahf
cwtl
rorl
mov
and
mov
clc
pop
mov
mov
vpaddb
lret
dec
pop
lods
in
pminub
cmp
loopne
add
rcrb
push
out
int3
pop
cwtl
inc
push
pop
adc
push
cmp
sbb
popa
xor
push
dec
pop
pop
pusha
pusha
pop
mov
jmp
sbb
out
jle
xchg
fucomp
push
les
cmp
cmp
add
int
push
mov
scas
add
imul
xor
fldenv
lods
fidivrs
adc
repnz
flds
mov
mov
and
jle
adc
push
jb
sub
ss
sub
cmpsl
ret
shl
out
aam
sarb
addr16
cmp
mov
mov
nop
adc
nop
test
xorl
sarb
inc
jne
pop
rorb
push
rcrb
jo
iret
dec
dec
and
jo
mov
clc
int
into
out
xchg
lcall
sub
pop
stos
test
xchg
idivb
mov
lahf
jl
das
rcrl
les
pop
je
xchg
adc
jbe
fisttpl
adc
ja
std
je
movsl
inc
push
mov
cmpsb
clc
jnp
jle
or
jmp
fldcw
shlb
call
inc
out
pop
insb
into
xchg
shr
sub
pop
pop
or
push
push
mov
movsl
sbb
arpl
jns
cmp
mov
xor
jb
jmp
mov
push
xor
adc
popl
pop
jp
mov
lahf
into
gs
sbb
adc
jne
dec
xor
into
outsl
fiadds
stos
leave
adc
and
shl
pop
iret
or
push
and
test
cld
xor
movb
push
lcall
sti
insl
je
aaa
push
sub
movsl
inc
daa
cwtl
fldt
sarl
sbb
jmp
lret
or
testl
dec
shll
dec
fcmovnu
mov
fs
mov
pop
and
mov
mov
adc
push
mov
and
cmc
fsubrl
out
jae
or
stc
xor
mov
in
repnz
dec
xlat
jno
out
mov
paddw
mov
fcmovu
cs
pushf
cmc
add
faddl
outsl
inc
adcb
adc
imul
sahf
cmc
xchg
push
jmp
pop
cmp
jbe
adc
repz
sbb
imul
mov
adc
inc
push
mov
je
lahf
cmp
shlb
adc
jle
in
sbb
push
mov
insl
outsl
cmpsl
ds
inc
jmp
lds
fcomps
sbb
jbe
add
and
add
and
mov
je
pop
cmp
popa
movsl
and
add
repnz
mov
call
mov
mov
pop
pop
and
xchg
push
clc
out
dec
bswap
outsb
sub
out
in
mov
fnsave
into
mov
aam
sub
or
or
fstps
push
jle
pop
aad
movsb
fsubr
ljmp
dec
mov
lock
ljmp
add
jns,pn
clc
or
pushl
inc
icebp
jb
pop
lds
mov
pushf
nop
cwtl
fwait
mov
push
outsl
cmpsl
mov
rcr
sub
adc
dec
out
pop
mov
stos
xor
mov
add
xor
add
enter
mov
sar
sub
shll
arpl
mov
jae
pop
xchg
mov
adc
pop
jnp
jg
jmp
sbb
and
push
cmpsl
fucomp
ds
mov
mov
adc
pop
cltd
out
pushf
popa
pop
je
aam
mov
pop
xor
mov
and
insl
xorb
xchg
jl
xor
aad
into
jo
dec
sbb
dec
mov
mov
push
inc
inc
out
and
mov
cmp
xchg
out
ss
push
sub
xorb
xor
iret
inc
sub
out
cmpsl
mov
pop
adc
cmpsb
test
std
inc
and
popf
push
mov
jne
clc
pop
imul
inc
dec
imul
arpl
xchg
js
inc
mov
inc
clc
sti
inc
cmp
add
daa
pop
push
mov
push
and
add
lret
adc
cwtl
stc
sahf
add
orb
orb
push
adc
loop
and
push
fwait
xor
ss
jg
fmulp
call
imul
out
dec
xchg
imul
int
lcall
es
dec
sub
dec
cli
movsb
lods
repz
into
mov
sub
dec
pop
mov
fcomip
iret
dec
fdivs
push
dec
mov
outsl
xor
fs
ja
popa
xchg
lret
loop
and
sbb
rorl
scas
xor
repnz
repz
adc
popf
push
stos
sbb
loop
frstor
outsb
imul
loopne,pt
fisubrs
iret
loopne
xchg
lret
ficoms
icebp
and
int3
push
cmp
icebp
or
into
jae
jmp
ret
jo
iret
xor
filds
out
cmp
es
xor
inc
mull
fisttps
shll
xor
aad
adcb
add
out
pop
inc
fwait
xchg
fwait
jecxz
sbb
orl
sbb
fs
outsb
sahf
sbb
cmc
sbb
stos
mov
push
xor
sbb
mov
pop
cmp
jb
hlt
sahf
jg
fistpll
xor
fsubrl
in
sub
mov
rcl
xor
insl
imull
dec
out
leave
ja
sahf
and
std
iret
push
pop
add
or
add
inc
sti
in
jmp
sub
arpl
testb
adc
xchg
cmp
xor
aam
roll
jo
clc
or
mov
cmp
mov
dec
sbb
dec
int
or
mov
stos
push
in
jae
adc
pop
clc
add
lret
xchg
push
call
cld
lods
imul
cmp
xor
mov
add
adc
xor
arpl
push
scas
mov
lret
enter
and
push
dec
scas
iret
push
inc
jle
and
push
pop
in
sbb
fdivs
jo
gs
mov
cmp
fnstcw
xor
xchg
test
inc
or
mov
imul
sbb
sub
hlt
scas
mov
adc
sbb
xor
sub
leave
and
in
or
xor
jg
icebp
pop
fmulp
xlat
mov
push
sbb
inc
dec
add
je
xor
enter
pop
clc
data16
sbb
adc
inc
leave
xchg
and
loop
inc
push
stc
outsl
movsl
jmp
mov
mov
sub
push
dec
icebp
popf
push
cwtl
loopne
mov
mov
sti
pop
testb
pop
bnd
in
and
fdivrs
sub
cltd
pop
and
mov
dec
push
lret
shrb
dec
rol
xchg
test
push
or
sub
mov
push
pop
jae
sbb
jno
into
jp
imul
aaa
icebp
fcomip
and
xor
das
cltd
push
xchg
push
jae
xchg
int
outsb
in
pop
test
stos
sub
xchg
scas
adc
cld
cmp
inc
mov
xor
test
flds
add
push
jmp
jle
dec
sbb
mov
nop
pop
aas
sub
ja
lahf
xchg
mov
mov
enter
mov
lea
shlb
iret
push
jb
fwait
adcl
mov
fwait
sbb
cmp
mov
nop
stos
jmp
cmpb
in
and
insl
mov
cmp
cmpsl
inc
pop
popa
fstpt
jae
filds
lods
fs
pop
shlb
jge
loopne
add
out
sbb
jl
sub
lea
ret
jecxz
sbb
stc
scas
shrb
rcl
push
cmpsb
mov
fwait
test
push
xlat
fiaddl
mov
mov
fistpl
popf
inc
xchg
cmp
mov
cmp
jp
xor
sub
ja
or
xchg
ret
pop
push
jnp
stos
negb
mov
ja
lock
nop
pop
jnp
sbb
cmp
aas
or
leave
pop
xchg
repz
leave
mov
fdivs
imul
test
out
dec
in
push
lret
in
shrl
xchg
into
aas
pusha
sub
cld
xor
add
or
xchg
cmp
mov
rolb
mov
mov
or
shrl
add
lods
xor
test
cltd
sub
push
das
push
daa
mov
leave
shrb
stc
fidivl
xchg
daa
loopne
adc
mov
pop
push
bound
pop
lahf
sub
sti
insl
lcall
mov
inc
hlt
cmpsb
ss
mov
cli
pop
inc
mov
les
pop
stc
rolb
cltd
push
scas
push
and
cmp
aaa
jle
adc
or
or
lret
movsb
mov
pop
out
iret
movsb
cmp
push
ret
add
inc
adc
jmp
int3
pushf
mov
jge
mov
push
mov
arpl
dec
clc
mov
or
xor
inc
cwtl
test
sub
incl
outsb
push
fsubl
pusha
push
insb
fldenv
hlt
mov
ss
es
aad
jg
filds
mov
sbb
lods
cmp
cmp
in
or
add
cmp
hlt
push
mov
lods
cmp
jb
push
es
cmpsl
pushf
ds
lahf
xor
xchg
jo
fstl
jle
std
movsb
aam
sub
pop
test
mov
daa
insl
fmuls
data16
jnp
and
imulb
lahf
push
enter
nop
or
xor
pop
inc
out
cmp
out
mov
fwait
pop
fildl
xchg
pop
push
imul
sbb
and
int3
cs
out
inc
inc
mov
mov
dec
xor
cli
aaa
push
push
and
mov
movsl
in
in
fisttpl
mov
xchg
add
push
xor
arpl
and
sub
add
jmp
fstps
lcall
xchg
xchg
scas
pop
mov
mov
sub
sbb
cmpsb
cmp
adc
out
ja
fwait
xor
fidivs
inc
outsl
push
lahf
cmp
aas
jmp
aam
inc
fwait
outsb
ss
dec
mov
mov
shll
push
jae
xchg
cmpsl
aad
cmp
xor
iret
in
in
stos
sahf
scas
icebp
add
je
pop
scas
leave
call
rol
cwtl
test
lret
dec
ret
xor
sbb
and
dec
pop
mov
cmpsb
xchg
and
dec
ret
xor
mov
and
icebp
jge
lods
iret
mov
daa
jge
iret
push
je
enter
test
lods
add
pop
push
cwtl
jbe
sbb
mov
adc
xor
mov
xor
ret
cmpsl
mov
push
push
xchg
out
ss
mov
orb
movsl
push
adc
incl
aaa
sti
fs
gs
ret
gs
sahf
cmp
enter
out
dec
arpl
test
repz
test
mov
test
int
inc
das
jg
mov
ret
pop
mov
add
xchg
cmp
aam
mov
sbb
scas
loop
lret
mov
and
mov
lods
popf
pop
mov
dec
pusha
or
push
mov
jmp
hlt
push
push
push
shl
stos
push
sbb
shlb
shll
add
aad
push
pop
popf
adc
jp
clc
adc
xor
jg
mov
jp
movsl
movb
cmp
loop
push
push
jo
nop
xchg
pop
rol
sub
add
inc
xor
cmp
xor
pop
jmp
movsb
xlat
and
and
or
or
scas
aaa
rorb
ss
repz
dec
xor
and
lcall
dec
hlt
stc
cli
jno
sub
in
pop
sbb
pushf
add
sbb
push
xrelease
leave
add
lods
and
sub
lock
sub
ret
rolb
movsl
cmp
add
cwtl
mov
sbbl
aad
push
mov
fcoms
daa
adc
insb
std
sahf
sbb
pop
mov
movsl
inc
xlat
xor
xor
test
jp
push
jbe
cs
int
and
setne
mov
lods
cmp
mov
pop
push
dec
jle
test
jecxz
add
dec
rcrb
mov
jecxz
mov
push
sbbl
dec
xor
ljmp
je
cmp
or
inc
data16
pop
js
push
or
lods
mov
mov
push
dec
mov
data16
inc
sbb
mov
testb
xor
lea
and
notb
mov
gs
std
loopne
and
mov
xchg
sbb
pushf
xchg
clc
lahf
lods
pop
adc
xchg
mov
and
das
push
mov
xlat
mov
cmpsl
sbb
mov
lods
stos
add
into
add
or
pop
ja
pop
jbe
rol
dec
sahf
daa
xor
add
xchg
nop
jl
mov
insb
mov
inc
icebp
jnp
adc
lcall
cmpsb
aaa
mov
push
in
jne
incl
out
inc
xchg
xor
mov
imul
xchg
mov
sbb
add
mov
ss
pop
jl
cmp
repnz
sti
dec
outsb
sahf
fwait
ficoml
push
sub
adc
jecxz
stc
mov
and
pushf
mov
gs
jge
xchg
push
xlat
pop
out
fisubrs
jbe
mov
add
je
and
divl
push
xor
push
and
mov
repnz
push
mov
sub
or
sbb
aas
loop
and
pop
push
ret
push
repz
or
mov
bound
inc
mov
int
xchg
xchg
sub
push
xchg
add
adc
mov
mov
cmpsb
push
cmp
dec
inc
and
test
push
in
mov
leave
scas
inc
mov
loope
push
mov
inc
lret
fisttpl
jb
sub
mov
xor
aad
insb
inc
stos
call
inc
int3
repnz
fwait
in
jmp
outsb
mov
mov
sbb
inc
out
in
andl
jle
xchg
sbb
jae
testb
les
icebp
pop
ret
bndcu
cmp
mov
clc
sbb
sub
andl
hlt
aad
jge
nop
adc
mov
scas
loopne
xchg
int
sbb
pop
xor
add
dec
xlat
pop
or
jb
hlt
xor
arpl
adc
jge
mov
je
je
lret
add
and
shrb
ja
sarb
outsb
jg
test
push
lret
jmp
insb
and
xchg
cltd
icebp
and
roll
mov
cli
sbb
cmp
pop
dec
pop
cmpsb
xchg
or
xor
sbb
xchg
rcl
popf
add
int3
fmull
jg
fisubrs
and
dec
cmpb
xor
leave
xchg
fsubs
adc
cmp
xlat
mov
stos
mov
dec
ficoml
push
push
push
in
mov
mov
mov
stos
xchg
sub
fisubs
mov
xor
into
jne
and
cwtl
or
push
scas
lcall
pusha
hlt
leave
adc
cli
xchg
add
aas
mov
movsb
mov
mov
test
mov
mull
mov
jbe
cltd
mov
inc
and
xor
out
pusha
push
nop
jb
sbb
movsb
mov
pop
adc
shll
scas
mov
scas
lahf
addl
jl
push
mov
out
pop
es
sbb
add
fcompl
stc
test
inc
call
ja
jne
lock
fimuls
mov
jbe
pop
out
push
jnp
insl
xor
mov
xorl
cmpsl
jbe
cmp
push
add
inc
andl
xor
xchg
inc
in
add
push
xchg
scas
pusha
jmp
fwait
ss
repz
fildll
fimull
das
rorl
orb
hlt
mov
pop
inc
leave
and
cmpsl
aaa
xor
mov
leave
stos
nop
and
mov
sti
mov
adc
jmp
xchg
inc
fdivl
pop
popf
fldenv
pop
shrb
das
dec
mov
popa
movsb
into
push
xchg
fsts
or
insl
mov
dec
mov
ljmp
pop
arpl
push
and
nop
and
and
fbld
mov
gs
mov
mov
inc
jecxz
cmpsb
insb
mov
rcll
orl
and
test
and
lds
pop
xor
lret
or
rol
lcall
test
sahf
les
xlat
cltd
in
fstpl
daa
dec
or
je
cmp
mov
lock
mov
inc
cmp
fcoml
pop
jmp
xor
sbb
into
imul
stos
iret
test
sub
jge
mov
stc
stos
push
ja
push
in
nop
mov
out
das
scas
fimull
int3
jmp
and
and
aad
push
sti
mov
dec
push
push
out
add
sbb
pop
push
aas
fstl
inc
mov
pop
cmp
xchg
push
pop
popf
mov
shl
fsub
mov
pop
jg
popa
cmp
xor
addr16
pop
adc
mov
movsl
xchg
imul
enter
dec
sbb
push
rdpmc
and
insl
sbb
pop
xchg
mov
test
mov
inc
xor
in
out
cld
cmp
add
push
adc
push
or
lret
sbb
and
jmp
jno
mov
inc
add
pop
xchg
adc
shl
into
pop
push
mov
sbb
cmpsb
orl
fidivs
ljmp
push
dec
sub
sbb
fwait
cmp
ficomps
lahf
lock
mov
mov
mov
loopne
jecxz
hlt
les
jbe
mov
dec
dec
push
sub
mov
lea
pop
sub
pop
das
mov
xchg
iret
orl
lock
testb
sub
adc
inc
stos
ret
insb
scas
cmc
inc
ret
jns
stos
pop
std
cmpsl
cmp
inc
push
psubq
xchg
add
sbb
mov
sub
movsl
pushf
and
cwtl
dec
sbb
push
mov
daa
mov
movb
std
popa
dec
mov
pop
or
in
fildll
mov
sbb
test
mov
pop
pusha
pop
fimull
mov
cld
add
jo
int3
in
idivw
push
rorl
mov
or
fcomps
test
mov
pop
inc
mov
lret
pushf
stos
ljmp
xor
dec
dec
lret
aad
xor
ja
leave
stos
jo
dec
ja
jbe
sbb
scas
inc
cld
and
mov
push
outsl
insl
ret
in
sub
xchg
mov
mov
mov
gs
int3
xchg
mov
shll
rol
mov
pop
sbb
fwait
pop
add
mov
iret
fisubs
repnz
add
outsb
xor
inc
addr16
ret
jo
jmp
lss
dec
pop
adc
andb
dec
popf
or
dec
fidivs
jmp
xlat
mov
into
cs
mov
enter
fcoms
adc
nop
ret
add
fcmovbe
sub
mov
imul
push
mov
fidivl
xchg
add
pusha
ljmp
loopne
push
dec
shll
rclb
or
popa
pushf
cltd
mov
adcb
lcall
pop
or
dec
dec
mov
fnstenv
push
scas
push
lds
or
aam
mov
or
or
aas
fdivrs
testb
pusha
das
cmp
and
push
add
add
negb
addb
cli
pop
fistps
pop
movsb
push
lock
fimuls
jl
mov
adc
out
pop
mov
ja
mov
inc
xlat
mov
daa
mov
out
cmp
jl
inc
jl
pusha
xchg
negb
mov
add
mov
push
pop
dec
sub
add
pop
outsl
xor
call
stos
and
sub
xor
or
int
mov
add
sub
out
xor
test
dec
xchg
mov
sub
mov
mov
xchg
adc
shrl
cltd
in
call
dec
test
inc
test
addr16
in
xchg
jg
pop
into
rcll
push
sub
sub
dec
fs
insl
addl
movb
push
and
mov
or
mov
jbe
int3
lret
mov
inc
adc
std
and
push
jg
sbb
jmp
jge
push
aas
push
sbb
into
sub
mov
dec
hlt
jo
add
cmp
mov
jmp
into
in
rorl
mov
in
cmp
call
mov
and
roll
scas
push
outsb
xchg
cwtl
and
enter
cmp
int
loope
leave
pop
push
into
add
adc
clc
loopne
popa
aaa
aas
daa
xchg
dec
fbld
adc
sub
inc
scas
xchg
test
mov
aad
pop
add
sub
jmp
cmp
cld
lahf
inc
or
test
stos
mov
rolb
xor
and
mov
sub
mov
sub
sbb
push
mov
rol
inc
cwtl
pop
adcb
mov
mov
inc
xor
and
pop
inc
out
push
mov
sti
xchg
pop
rolb
shlb
pop
fistpll
push
pop
cmp
push
push
and
mov
adc
add
test
and
and
mov
in
mov
and
das
repz
mov
std
mov
cmp
ror
sbb
aad
addr16
xor
not
stos
sub
cli
aad
xchg
inc
and
insl
insb
mov
xor
imul
pop
lret
adc
je
push
addr16
shll
pop
stos
jo
sub
xor
rorb
ja
das
imul
movsb
mov
sub
and
pop
mov
scas
js
out
add
push
fstpl
or
ja
and
pop
ret
push
imul
iret
loope
sub
stos
imul
xlat
cmpsb
sub
mov
inc
std
das
daa
aas
dec
jns
hlt
addr16
jmp
push
xchg
stos
lods
clc
pop
inc
fsts
les
lret
out
pop
pop
mov
cmp
push
daa
mov
add
shrl
into
cmpsl
test
jg
inc
jmp
and
rcr
push
insb
mov
hlt
xor
rclb
stos
out
or
roll
cltd
push
mov
scas
out
loop
add
jns
mulb
mov
jecxz
daa
mov
ret
add
xchg
jne
iret
aam
cmp
mov
cmc
xlat
fadds
cltd
test
xrelease
lods
lret
mov
mov
inc
adc
or
push
shrl
mov
or
xor
bound
sub
inc
adc
cld
sbb
sbb
data16
cmpsb
clc
adc
mov
inc
jmp
pop
enter
dec
xor
sbb
mov
pop
push
ja
mov
mov
popf
jle
rclb
push
decb
push
scas
movsb
jb
and
sub
inc
call
cmpsl
fcmovbe
jmp
test
jbe
xor
cltd
jge
dec
add
and
repnz
lret
jl
push
jo
push
jb
cwtl
cli
pop
je
adc
cmp
xor
adc
xchg
inc
fistl
cltd
push
inc
push
mulb
cmpsl
iret
mov
ret
repz
bound
sbb
cwtl
and
mov
sub
popf
jp
inc
mov
daa
add
sub
push
jp
push
mov
dec
cltd
jge
mov
les
inc
das
cmpl
cmp
addr16
sub
push
insl
cmp
ja
ljmp
out
adc
daa
int3
xor
fidivrs
sahf
pop
jmp
pop
and
and
ficoms
pushl
xchg
popf
lds
mov
lods
adc
adc
sub
xor
frstor
addb
pop
mov
mov
and
lret
mov
rclb
cmp
ljmp
cmp
jg
test
mov
popl
pop
test
dec
test
cltd
lds
mov
push
dec
lods
sti
sti
xchg
dec
fs
jb
add
inc
xor
jle
mov
mov
je
adc
iret
jno
mov
inc
xlat
out
subl
mov
inc
xor
scas
movsl
pop
and
loope
sbb
dec
sbb
fisubs
xchg
scas
mov
hlt
imull
mov
add
daa
push
mov
movsb
repnz
or
push
add
cmpb
jmp
xor
push
repnz
pop
lea
pop
inc
mov
mov
xchg
sahf
push
scas
aad
ss
pop
fcompl
and
mov
leave
ffreep
movsl
insb
mov
pop
mov
push
pop
inc
xchg
ds
divb
hlt
jae
insl
roll
mov
push
pop
and
dec
outsb
int
fisubl
sti
ljmp
icebp
insb
cmp
jnp
stc
inc
add
add
jg
and
imul
lret
inc
lcall
pop
aam
int3
das
inc
xor
aad
bswap
push
jno
mov
insb
ds
cmc
dec
pop
adc
or
outsl
out
dec
xorl
cs
adc
jae
mov
leave
inc
jg
cltd
mov
cmpsb
loop
aam
xchg
jae
lock
das
rclb
xor
adc
xor
adc
jge
xchg
add
fwait
subl
inc
imul
imul
or
add
mov
in
adc
mov
mov
dec
ret
test
fildl
clc
enter
push
push
pop
cmpsl
xchg
std
mov
pop
loop
enter
pop
jge
sahf
in
jmp
fmuls
adc
aad
int
fwait
sub
ds
inc
shll
xchg
and
loope
mov
pop
data16
or
out
pop
jmp
adc
jp
sub
inc
popf
imul
insb
out
adc
and
xor
push
jb
sub
fnstsw
push
popa
cs
stc
inc
ss
int3
cmp
gs
repz
cmpsl
adc
lret
dec
iret
clc
test
bound
jb
jecxz
jge
or
mov
imulb
xorl
adc
adc
mov
pop
std
sbb
mov
or
push
scas
cmp
clc
sub
mov
or
repz
pop
dec
jge
rcr
xchg
sub
pusha
les
addr16
cltd
out
add
mov
cmc
fists
jb
cmp
cmp
pop
xor
mov
xchg
popa
stos
cmpsl
dec
leave
jb
in
int3
dec
fmuls
out
outsl
sbb
mov
pop
in
ljmp
and
jo
mov
or
dec
dec
xor
ds
arpl
xchg
push
mov
iret
xchg
jo
in
sbb
pushf
in
int
jo
pop
mov
sar
rolb
fists
mov
sub
dec
pop
fistl
cmp
and
outsl
cmp
hlt
shrb
out
enter
xchg
xchg
dec
and
inc
or
sub
mov
loop
int
push
mov
cs
mov
loopne
sbb
rolb
dec
movsb
push
pop
rcll
cmp
imul
test
lods
jb
xorb
cmp
xor
aaa
cmp
pusha
xorb
xlat
xchg
ret
outsb
mov
les
jl
xchg
add
imul
das
or
mov
outsb
es
imul
outsb
inc
cld
mov
jns
dec
test
or
dec
in
aas
pop
xor
sbb
mov
mov
fs
sbb
jmp
in
mov
scas
or
fsubl
jp
mov
bound
fsub
xchg
pop
sub
out
cs
push
addr16
pop
ret
lds
adcb
cmp
jp
jne
sbb
aaa
repnz
sub
jl
add
inc
sub
mov
xor
push
in
or
pop
mov
leave
jb
loop
aam
fwait
lcall
mov
xchg
repnz
mov
cmpsb
or
sbb
icebp
pusha
jno
pushf
movsb
xor
in
aas
cmp
and
in
xchg
sbbl
mov
jge
sarl
shlb
shlb
push
inc
or
pop
add
out
in
sbb
es
and
mov
in
sub
jae
add
cmp
and
insl
ljmp
ficomps
and
outsl
pop
repnz
mov
popf
adc
cmpsl
pushf
ud0
mov
js
or
adcb
stc
mov
clc
jno
repz
and
rorb
sarb
pop
or
inc
ret
push
xlat
xchg
inc
enter
dec
cwtl
jl
outsl
jae
movsb
adc
adc
jnp
add
mov
dec
xor
ja
lock
dec
jo
gs
popa
iret
or
stc
fdivr
or
xor
in
add
inc
data16
rorl
adc
jb
clc
inc
add
mov
sahf
push
je
lcall
je
fisubrs
add
xor
xor
mov
adc
stc
xchg
push
inc
stos
aas
movsl
int3
mov
push
mov
xchg
fcoms
imul
cmpsb
dec
shr
cmp
inc
push
inc
ja
icebp
repz
int
push
cmp
sahf
and
es
and
lea
xchg
pop
outsb
pop
inc
inc
mov
sbb
mov
xchg
cmp
les
jns
les
adcl
push
sbb
pusha
push
popf
xor
popf
repnz
inc
rcll
jmp
jne
adc
or
int
ficomps
sub
out
jg
xchg
mov
test
ret
in
cld
int
fnsave
xlat
pop
sub
inc
mov
jo
inc
mov
cld
cwtl
pop
movsb
pushf
lret
dec
xlat
mov
adc
icebp
inc
sbb
and
enter
lds
and
or
push
mov
mov
sbb
push
adc
dec
fistps
out
sub
mov
adcb
jp
add
cwtl
sub
inc
in
addb
rcll
inc
cmp
sti
sarb
mov
ljmp
repnz
cld
testb
mov
clc
sbb
rclb
out
xchg
mov
clc
ret
push
enter
xor
je
orb
add
lods
sbb
jp
rorl
insb
lds
stos
cld
jl
outsb
mov
push
jne
sbb
xchg
and
and
in
ficomps
mov
cmpb
popf
lret
ja
add
aad
cld
int
js
dec
in
sahf
mov
pop
mov
xchg
inc
xor
shlb
jne
xchg
paddusb
push
sbb
mov
dec
push
cwtl
pop
inc
fmull
mov
outsl
rcl
movsl
xor
test
mov
lcall
inc
mov
dec
idivl
cwtl
cld
jae
call
lret
inc
mov
adc
leave
cmp
mov
pop
mov
ret
dec
cs
mov
test
jne
or
add
push
mov
icebp
add
cltd
sbb
sbb
inc
cmp
sysexit
inc
ret
mov
adc
mov
jae
push
lods
sub
lds
fnsetpm(287
aaa
inc
add
int
loopne
xor
inc
shl
loopne
add
test
lret
cltd
gs
cmp
rolb
fildll
sbb
mov
xor
adc
shll
pop
cmpsl
pop
mov
add
adc
mov
xor
xchg
sahf
test
out
test
scas
mov
or
jbe
ja
orl
xor
in
and
sbb
scas
dec
fisttpll
xor
cmp
sbb
mov
push
mov
insb
stos
imul
jl
cltd
jmp
cmc
and
mov
pop
pop
rcrb
ret
cli
pop
iret
int3
pop
xchg
int3
jbe
out
rcr
mov
xchg
lods
mov
ret
jmp
imul
jb
mov
ss
out
cmpsb
fdiv
test
or
inc
inc
jp
ds
xchg
lds
mov
adc
fists
sbb
sub
cmp
mov
xor
shlb
shll
cmp
rorl
push
mov
jo
sarb
ret
sub
cmp
push
jp
sbb
ljmp
jns
push
jno
xor
pushf
jg
int3
xchg
inc
mov
fsubl
jae
hlt
pop
sbb
mov
push
int
inc
out
xor
cld
cmc
lcall
adc
lock
cli
mov
xor
test
push
daa
call
in
or
orb
mov
inc
scas
ds
xchg
lods
jb
push
and
adc
mov
jle
ljmp
cmp
jo
lods
testl
outsl
mov
mov
jmp
loop
std
xchg
or
shll
mov
shll
bound
xor
pop
lret
imul
out
xchg
mov
inc
pop
sbb
icebp
es
lock
fistps
jae
sbb
mov
js
popf
sbb
jge
rcll
icebp
cmp
push
jo
sub
mov
mov
sbb
loopnew
fwait
daa
cmpl
sbb
and
inc
and
aad
call
or
outsl
pop
jl
in
jnp
inc
repz
scas
push
pop
aam
imulb
andb
xor
and
out
sbb
dec
sub
and
insl
aam
int
hlt
fs
pop
push
fcomps
mov
pop
adc
jg
mulb
andb
cmp
adcb
mov
and
add
jmp
sub
rolb
incb
sbbl
loope
jbe
add
inc
test
inc
aad
ljmp
scas
imul
clc
loop
adc
ds
repz
frstor
fsubr
das
out
cs
jnp
lock
inc
sbb
push
push
add
ret
sub
rcr
in
and
pop
outsb
sbb
xchg
mov
xchg
and
gs
dec
push
js
cmp
aaa
sub
test
out
cmp
in
pop
jbe
xor
inc
shrb
mov
scas
test
pop
lret
dec
loop
adc
jnp
and
ret
icebp
cmp
test
scas
inc
adc
mov
dec
jbe
daa
push
or
cmp
fwait
xchg
loope
push
out
lret
inc
rcrl
xchg
mov
and
test
fidivrl
inc
int3
in
mov
pop
lahf
push
call
cli
and
mov
test
lods
push
cmp
mov
jecxz
and
repnz
addb
adcl
nop
test
mov
xchg
cwtl
imul
sahf
or
sub
cmc
cmpl
das
xor
pop
push
iret
enter
daa
jnp
cs
nop
pop
xchg
in
cmpsl
push
jae
xchg
inc
mov
lds
and
mov
aad
jbe
jge
mov
lret
out
xchg
int3
out
aam
add
push
mov
test
dec
jae
and
dec
loope
ret
cmp
dec
fsubrl
jmp
inc
in
paddsw
xor
dec
cmp
dec
sub
imul
aam
daa
pushf
jae
pop
repz
lods
xor
mov
sbb
pop
leave
mov
inc
outsl
fcoml
lods
fildl
inc
hlt
mov
rcll
packuswb
sbb
das
inc
xor
xchg
stos
scas
mov
sbb
pop
push
mov
sub
loopne
scas
sti
pop
lcall
shrl
dec
and
ret
xchg
fidivl
cmp
leave
aad
daa
rcrl
xlat
xchg
pop
inc
filds
lcall
das
stos
cmp
jo
stos
lds
mov
pop
jbe
aas
in
fisubrl
dec
or
push
loope
add
sti
call
stos
push
mov
mov
jbe
xchg
inc
mov
adc
sbb
imul
inc
sti
xor
mov
popf
je
loop
sahf
sub
outsl
and
scas
pop
int
dec
cmpb
shr
pop
test
cmp
cmp
mov
inc
pop
dec
fimuls
inc
hlt
xchg
adc
loope
adc
or
add
xchg
es
cltd
pop
ficoml
mov
jne
push
mov
adcl
push
fsts
push
in
ret
repnz
mov
popf
mov
scas
aad
pop
push
mov
xor
test
out
loopne
jb
mov
push
sahf
jo
push
lds
pop
sub
jae
sub
leave
je
mov
jo
sbb
sbb
js
fsubl
mov
pushf
cmp
pushf
mov
xor
add
insb
jecxz
push
mov
pop
jmp
movsl
sub
jno
xor
fwait
movsl
cmpsl
pop
xor
push
jg
pop
into
mov
stos
mov
scas
inc
push
loope
xor
add
test
test
xchg
add
lea
mov
mov
xor
mov
in
jl
jmp
push
dec
icebp
scas
arpl
sub
add
es
pop
or
test
ret
pop
ja
mov
pop
lds
or
aas
jmp
pop
data16
in
lock
shlb
mov
xchg
outsb
mov
inc
scas
jnp
filds
mov
test
pusha
cmp
xchg
dec
rcr
test
xchg
dec
cltd
add
fsubrs
cmp
mov
cmp
cmp
push
das
fistps
xor
mov
sub
inc
or
movsl
sub
rcrb
sub
push
sub
xchg
nop
cltd
sbb
cld
aas
fistpll
ljmp
les
cmpsl
fmul
or
cmp
sub
xchg
addr16
mov
and
jne
pop
lret
fisubl
test
add
inc
cld
enter
in
dec
inc
and
and
or
dec
inc
cmp
mov
xchg
jecxz
cs
or
sub
push
push
mov
xchg
hlt
enter
jbe
cmp
add
cmp
push
in
or
mov
pop
mov
and
repnz
inc
cmc
ljmp
in
jb
cmp
dec
or
mov
lds
jle
sub
fmuls
push
insl
gs
lcall
pop
xchg
daa
data16
mov
inc
ljmp
fbstp
cmp
or
sub
push
fwait
into
incb
mov
push
mov
add
xchg
jecxz
xorb
and
inc
or
mov
cmp
sets
ljmp
sub
dec
mov
movsl
sub
movsl
inc
imul
pop
aam
xor
jae
lods
fstpt
out
dec
inc
lret
shll
scas
not
ds
sbbb
sti
and
inc
sub
push
je
mov
add
bound
sub
ja
push
dec
movsl
mov
lcall
sub
jmp
jecxz
insl
enter
xor
inc
iret
dec
jae
jg
out
dec
outsb
enter
sbb
imul
cli
inc
rcrb
roll
out
xchg
pop
inc
addr16
cmp
ljmp
stos
clc
pop
dec
mov
loope
adc
xchg
inc
inc
pop
and
inc
ss
std
loope
movsl
jno
jle
call
ljmp
cmc
cmpl
jecxz
lret
xor
mov
sub
mulb
mov
push
cmp
in
push
pop
mov
cmp
xor
pop
cmp
pop
ss
jns
sbb
dec
dec
loopne
sub
sbb
dec
sub
push
mov
clc
in
leave
leave
adc
dec
jmp
inc
adc
xor
pop
jne
push
inc
xchg
xlat
cmp
mov
mov
ljmp
in
sti
rorl
xlat
leave
or
or
out
sub
xor
push
mov
lahf
mov
push
pop
jge
add
std
dec
xchg
mov
cmp
xchg
inc
pop
leave
lea
adc
push
dec
pop
test
cmp
and
loop
lods
xor
cmpsb
push
xchg
push
shl
fsubrs
fcompl
jnp
cmp
dec
or
imul
push
cmp
clc
popa
icebp
ficompl
sub
push
xlat
loope
stos
and
stc
pop
add
add
aaa
loope
jbe
ljmp
fadd
movsb
scas
subl
fldt
xchg
and
mov
push
cwtl
mov
add
mov
lds
mov
sbbl
mov
xchg
js
push
jp
jnp
jp
jmp
je
inc
jp
mov
insl
add
stos
fsubr
fildll
xchg
mov
add
push
dec
mov
dec
sahf
popa
mov
push
dec
jecxz
lahf
mov
cld
mov
sti
andb
jbe
mov
sub
push
add
mov
addr16
loopne
and
orl
xor
outsl
ret
add
mov
in
mov
shlb
test
test
stos
and
and
idivb
repz
cmc
mov
mov
xor
mov
push
lretw
xchg
insb
testb
insl
dec
fisubl
mov
cmpsl
cs
pop
dec
lcall
dec
lods
fistl
decb
sti
jo
pop
push
sbb
adc
pop
iret
jmp
in
sub
pop
pusha
adc
pop
push
jle
shll
stos
mov
es
or
ds
stos
movsb
test
xchg
pop
nop
jae
jle
scas
aas
sbb
mov
out
xor
pop
xor
jg
sarl
enter
cmpsb
add
fldt
aas
enter
lcall
mov
in
pop
cmp
icebp
shlb
dec
xchg
shl
jge
sub
jae
push
repnz
ret
xchg
inc
add
jecxz
lahf
jmp
inc
fisttpll
mov
jg
icebp
push
fildll
or
testb
lret
adc
sub
inc
pop
push
sbb
sub
pushl
fwait
mov
clc
int3
scas
xchg
push
push
jle
mov
fldt
stos
cmp
in
sub
sbb
xor
bound
ss
inc
cmp
lahf
rcrl
scas
mov
xor
pop
int3
inc
or
sub
push
mov
gs
jmp
jb
shl
ds
mov
and
ret
push
add
sarl
mov
inc
rolb
sbb
test
or
jb
jne
cmp
push
clc
sbb
filds
cmp
ljmp
push
mov
or
fidivl
xchg
std
stos
sti
pop
subb
lcall
mov
push
in
xlat
sti
push
iret
push
and
cmc
daa
aaa
pushf
jnp
or
jge
adc
lret
sub
ja
pop
jg
repz
mov
mov
popa
adc
pop
pandn
test
ret
add
jp
daa
aam
in
adc
or
mov
ret
movsl
ret
aad
mov
pop
sub
push
pop
cmp
adc
dec
jmp
inc
repz
test
fnstsw
xor
insb
lock
jge
data16
iret
and
add
mov
lods
imul
arpl
xor
jnp
fnstenv
dec
int
sarb
mov
or
mov
xorb
sti
pop
das
jl
imul
xchg
pop
pop
mov
xor
or
scas
inc
xchg
sub
enter
movsb
push
sbb
push
insb
add
mov
jo
mov
mov
movsb
jmp
inc
dec
xchg
sbb
int
mov
adc
das
imul
out
lcall
lcall
xor
imul
js
aas
adc
jmp
jns
fsubs
cmp
pop
fstpt
and
mov
mov
mov
inc
shlb
paddw
aas
xchg
inc
sahf
xchg
ja
aad
insb
filds
sub
mov
sub
and
mov
and
mov
cmpsl
and
inc
icebp
mov
or
rcl
in
insl
test
xchg
pushf
xchg
sbb
inc
imul
adc
add
les
fldl
fcoml
pushf
mov
nop
fs
add
gs
mov
or
jbe
jg
fmul
jae
jne
add
out
and
jb
adc
dec
ljmp
adc
rcl
fidivrl
or
or
roll
cld
das
addb
push
pop
movsb
pop
cld
dec
sbb
cmp
inc
fildl
sti
push
xchg
pop
sar
sbb
push
add
push
jp
sbb
repnz
test
dec
dec
sbb
testb
pop
nop
out
adc
pop
mov
outsl
fs
lret
int
jmp
repnz
xchg
push
sti
dec
pop
nop
test
cs
pushf
xor
xor
stos
hlt
sbb
sub
xor
pop
mov
rorb
cmp
mov
or
imul
and
cli
jmp
ret
in
insl
add
mov
and
scas
cli
mov
insb
jmp
sbb
popf
rorb
insb
sbb
jno
jb
jecxz
fsub
addr16
cwtl
sti
fsubrl
sbb
incl
cmp
dec
inc
xchg
nop
fs
sarl
mov
cmp
arpl
or
xchg
outsb
or
xor
sbb
outsl
push
push
clc
push
jle
pop
out
call
jl
cli
pop
dec
out
out
orl
lea
mov
pop
mov
jecxz
fxch
fyl2xp1
jne
sub
jne
xchg
dec
xor
rcrl
inc
jae
int
sbb
test
adc
push
mov
scas
mov
mov
insb
int3
lcall
inc
adc
jbe
dec
add
jp
test
sbb
test
mov
adc
dec
out
int
inc
lods
testl
and
int
out
outsl
fmul
mov
push
inc
shr
test
lea
pop
insl
pcmpgtd
cmp
psllw
jge
cli
mov
stos
cmpsb
fisttpll
inc
fsubrs
scas
fcomp
sbb
js
pushf
testl
jmp
cmp
rcrl
lods
mov
pop
jb
mov
lods
adc
dec
pop
mov
ss
xchg
mov
gs
jp
xor
cmpsb
es
cs
pop
scas
sbb
xchg
and
push
pop
in
cmc
pop
into
pop
cmp
test
insb
adc
in
mov
sub
sbb
mov
mov
pusha
fdivs
pop
xchg
test
filds
mov
and
jp
sarb
push
scas
test
inc
cmp
and
adc
negl
cld
pop
test
testl
insl
jmp
bound
stc
xchg
mov
xor
stos
cwtl
mov
inc
dec
sbb
cli
movsb
packuswb
ficomps
sti
sub
fwait
mov
out
xchg
cmpsl
mov
outsb
xchg
or
out
std
sbb
pop
or
xor
ret
je
jmp
test
add
mov
sub
jge
add
xchg
sub
les
fldenv
imul
icebp
inc
adc
xchg
mov
sbb
jl
push
sahf
and
je
mov
mov
pop
jne
cmc
pop
jbe
sbb
popa
jecxz
in
inc
sbb
gs
icebp
and
test
cld
jno
xchg
std
mov
cmpsl
sbb
popf
test
loope
push
mov
and
bound
add
lahf
dec
pop
scas
mov
push
movsl
and
maxps
int
arpl
adcl
leave
xor
aas
sub
vpsubusb
xor
or
mov
push
cmp
xor
sub
xor
mov
push
cmpsb
mov
es
addr16
scas
or
pop
or
xchg
mov
stos
or
xor
jo
jp
rcr
xchg
mov
movl
and
stos
pop
sub
xchg
ret
sbb
cmpsl
lods
les
in
jnp
mov
mov
mov
les
je
push
or
dec
ss
push
xchg
adc
pop
lds
adc
in
or
andl
int3
mov
insb
push
mov
mov
mov
test
cmc
enter
test
pop
xchg
sbb
mov
xor
addr16
inc
test
lods
iret
imulb
xor
jmp
test
nop
das
fdiv
out
scas
pop
imul
jmp
mov
cltd
fcoms
movsl
jns
out
mov
sub
movsb
add
sub
mov
shll
xchg
mov
pop
mov
loop
sub
mov
xchg
lock
inc
dec
add
arpl
cwtl
rcr
push
test
aas
jno
sub
inc
sbb
into
clc
aas
mov
lcall
scas
stos
and
sbb
pop
adcb
inc
inc
dec
movd
ficomps
pusha
in
sti
mov
mov
inc
push
js
ss
mov
stos
xchg
dec
fsubrs
mov
lock
pop
push
pushl
jg
insl
aas
fs
dec
push
mov
lretw
std
fstps
jno
xor
mov
or
fildll
fisttps
scas
mov
pop
push
mov
mov
xchg
data16
scas
mov
movzbl
jl
jp
jge
not
push
stc
mov
out
imul
fistpl
es
jge
pop
fwait
dec
cmp
popa
fsubrl
mov
in
lds
fisttpl
cmp
lds
imul
cmp
mov
push
out
cmpsb
sbb
inc
pop
ds
ljmp
inc
test
cli
add
dec
aaa
mov
adc
pop
in
mov
sub
cli
punpcklwd
cmp
push
xor
or
xlat
scas
ja
imul
mov
out
cmpsl
sub
adc
sub
push
jb
fstpl
repz
aas
int3
stos
mov
cmp
cmp
hlt
or
enter
lcall
mov
aam
fsubs
inc
or
rcrb
je
inc
or
cmp
sbb
in
in
push
xchg
imul
mov
and
mov
popa
lods
adc
cmpsb
mov
aam
cmp
jg
dec
in
or
sbb
fidivs
dec
orb
mov
mov
cmpsb
fmulp
cmp
push
iret
pop
cmp
mov
jmp
test
cmpb
xchg
or
es
adc
mov
jmp
imulb
push
lret
pop
imulb
ret
lods
sbbl
mov
imul
adc
cmpsl
jge
xor
xchg
add
imul
or
cwtl
into
push
pop
sub
add
pop
mov
stc
ret
jne
lcall
pushf
je
pop
pop
ljmp
mov
into
int
and
hlt
addr16
in
mov
insl
cmp
jg
cmp
push
sbb
mov
rcr
sbb
dec
mov
inc
insl
cmp
dec
les
outsb
popf
jnp
pop
sti
lock
jg
mov
sbb
gs
jnp
andl
int3
bound
jge
jmp
inc
inc
push
or
push
mov
jno
lods
xor
adc
lea
stos
push
adc
addb
pop
clc
jne
stc
mov
scas
jns
mov
adc
sub
inc
cmc
xchg
adc
mov
cmp
and
jne
std
fidivs
xor
sti
push
xor
fcomip
push
das
adc
xor
sbb
lock
mov
and
and
lods
push
sub
divb
fdivs
ffree
and
mov
pop
pop
aas
sub
inc
out
adc
mov
dec
daa
inc
push
mov
call
jmp
sbb
mov
loope
movsl
test
mov
pop
dec
mov
and
adc
popf
lock
dec
dec
sbb
inc
aam
popf
mov
add
mov
mov
arpl
xchg
or
shll
repnz
xchg
movsb
aam
add
xchg
fcoml
mov
aaa
jae
out
add
cwtl
popa
adc
mov
inc
pop
imul
push
rcl
mov
jno
loopne
addr16
sub
and
push
jae
dec
sub
rorl
stos
lret
test
mov
mov
push
lods
xor
mov
dec
imul
iret
jle
push
push
lds
fstps
das
lcall
sbb
test
andb
cmp
mov
adc
push
arpl
mov
mov
jg
sti
sub
push
jl
fnstenv
inc
ljmp
in
push
jge
mov
inc
sbb
push
xchg
loop
test
ret
add
pop
xchg
scas
js
add
int3
mov
repnz
les
arpl
out
or
out
sub
in
inc
or
das
inc
gs
xchg
jb
mov
pop
in
mov
test
addl
cmp
rorb
or
lret
push
jecxz
pop
test
lahf
push
ret
lods
out
rorl
ret
data16
mov
add
scas
jle
pop
mov
outsl
pusha
mov
mov
jae
sub
push
div
adc
shlb
icebp
push
dec
push
push
pop
jl
add
jno
mov
dec
pop
nop
sub
lds
or
mov
push
jl
dec
push
xchg
xchg
movsb
dec
movsb
out
insl
mov
mov
out
mov
dec
and
adc
imull
jl
jo
push
call
loopne
js
pusha
in
adc
jp
pop
imul
sub
push
xchg
scas
inc
aas
mov
add
fsts
sub
aad
pop
jge
in
ds
push
notb
lods
cwtl
ficomps
add
sbb
cmp
aam
insb
rcr
sbb
jge
push
inc
or
or
mov
cld
or
and
int3
push
or
mov
sub
bound
xor
mov
std
iret
mov
popf
daa
fwait
lods
mov
popf
loopne
sbb
sti
pop
bound
mov
movsb
jae
fisttpll
or
pop
lahf
sub
nop
inc
pop
sbb
cld
in
imul
inc
or
cmp
test
lock
xlat
adc
mov
adc
pop
cwtl
fcoms
mov
das
ret
call
mov
mov
cmp
je
jmp
xorl
lahf
pop
mov
ret
rol
loope
and
scas
mov
loop
mov
mov
add
push
and
push
xor
adc
inc
sti
xor
push
cmpsb
rol
fnstenv
xchg
outsl
add
mov
leave
repz
lock
das
pop
mov
add
mov
js
scas
das
fstl
test
not
setb
or
push
xor
mov
repnz
pop
mov
imul
gs
sbb
add
push
or
mov
aas
iret
ret
js
aad
decl
test
aaa
adcl
cmpsl
and
cs
xchg
lahf
mov
jle
and
add
mov
shll
imul
dec
push
xorl
or
dec
insb
lcall
and
lcall
mov
mov
xchg
insl
add
divb
stos
push
ret
or
ja
cmpsb
mov
lods
and
mov
sub
mov
std
leave
mov
cwtl
mov
mov
in
mov
jnp
das
dec
mov
enter
movsl
daa
pop
in
nop
mov
lock
std
jle
mov
mov
pop
mov
icebp
cli
in
and
mov
or
insb
mov
jns
jmp
shl
adc
adc
sbb
aaa
mov
in
stos
xor
scas
shl
dec
hlt
pop
sub
jge
pop
jmp
shlb
pop
mov
fwait
rorb
lock
shll
mov
xchg
add
mov
ret
dec
pop
mov
mov
into
in
arpl
ljmp
ss
rcl
fwait
pusha
icebp
ljmp
push
int3
sub
mov
add
nop
mov
popf
cmp
out
sbb
test
sbb
pop
or
fnstsw
add
sahf
push
pop
cwtl
aaa
or
xchg
cmp
ss
daa
cld
mov
cltd
add
push
sub
xchg
sbb
pop
cld
xchg
repz
cmp
aam
lcall
xor
dec
jle
hlt
pop
sub
iret
push
xchg
out
push
xchg
ret
dec
insb
push
xchg
sub
mov
mov
adc
inc
cmp
mov
sbb
and
bound
xchg
jno
lds
pop
cmpsl
xchg
ss
lods
inc
mov
sar
dec
and
sub
lods
xchg
in
dec
nop
jno
aam
or
mov
clc
std
int
dec
cmp
mov
adc
inc
mov
rcrb
cmp
outsl
sub
push
xchg
loop
fwait
loopne
icebp
loope
pop
pop
adc
jg
jge
stos
pop
je
sub
lock
out
mov
fiaddl
scas
xor
rcrb
mov
sar
jb
mov
xchg
cmp
es
aad
lcall
idiv
movntps
ficoml
call
mov
rcrb
ja
mov
xor
jbe
movsl
addl
dec
or
mov
xor
jmp
mov
int3
mov
int
cmp
lock
and
xchg
pop
insl
mov
ret
cmp
push
add
and
xor
add
xor
ret
fldl
ret
sbb
jae
pop
mov
adc
mov
push
out
sbbb
pushf
push
fmull
sub
cmpsb
js
lods
lds
sbbb
mov
mov
icebp
xlat
cmpsb
and
jmp
sarl
xor
add
jge
adc
cmp
fbstp
push
xor
scas
inc
fildll
sub
pushl
pop
test
aaa
lret
mov
pop
sbb
cmp
sbb
pushf
push
test
mov
negl
lods
loope
pushf
sbb
sbb
ss
lea
adc
or
or
mov
dec
stos
jg
sub
or
xor
sub
jno
popa
adc
push
mov
mov
mov
addb
stos
lret
in
arpl
outsl
sub
inc
shlb
leave
enter
xchg
cltd
or
cltd
push
sbb
lret
imul
and
pop
push
imul
sti
int
or
mov
andl
scas
int3
ss
sub
inc
fnstcw
sbb
roll
test
mov
iret
adc
outsb
mov
lret
je
push
cmpsb
in
int
ja
sbb
sarb
rcrb
shlb
inc
shll
add
or
mov
jnp
and
xlat
xor
sub
mov
rorl
popf
mov
lock
sti
inc
or
xchg
mov
jge
loop
gs
xchg
pop
aas
loope
and
sbb
cmpsb
popf
aad
mov
inc
test
das
int3
mov
mov
cwtl
ds
stc
xchg
or
cltd
adc
je
insb
push
pop
cwtl
js
test
repz
and
ret
dec
push
xor
jg
jno
or
shrb
ds
loope
aaa
jno
test
mov
adc
sar
mov
or
cmp
xor
stc
jns
test
lahf
inc
dec
decl
jb
sub
sbb
adc
pusha
dec
inc
cmpxchg
shlb
les
stos
xchg
movsl
cmp
test
or
mov
cmp
fcompl
or
mov
xor
imul
outsb
lret
aaa
loopne
inc
lods
adc
mov
xchg
dec
mov
pop
test
idiv
sub
cmp
pop
inc
dec
inc
hlt
cltd
cs
and
push
js
lock
in
add
dec
push
aaa
sbb
pop
add
add
add
or
push
pushl
out
xchg
ds
arpl
jl
xchg
subb
cmp
mov
sbb
add
sahf
mov
xchg
repz
faddl
jnp
or
jmp
stc
nop
addr16
outsb
cmp
mov
xchg
loope
pop
mov
inc
mov
xchg
dec
adc
repz
lea
imul
lret
nop
fstl
in
jl
cmc
aaa
aas
lret
int
xor
aam
out
xchg
fiaddl
mov
mov
ret
push
cmp
or
insb
sub
es
adc
push
and
ds
hlt
mov
ret
lret
loopne
dec
pop
jnp
sub
stos
inc
add
adc
pop
stc
sub
clc
ds
pop
pop
xchg
mov
or
mov
sbb
mov
and
pop
data16
cmp
nop
sub
jno
mov
dec
dec
inc
inc
dec
or
ds
mov
pop
dec
fscale
jecxz
ljmp
fldenv
fwait
adc
cmp
mov
outsl
xchg
das
cs
push
xor
ja
ljmp
lds
aam
and
enter
es
repnz
cmp
sbb
mov
pop
clc
dec
scas
idiv
cmpsb
xchg
imul
xor
ret
movl
daa
and
pop
cmp
jge
lds
xchg
std
je
fcmove
mov
enter
sahf
ret
jmp
icebp
pop
jnp
jmp
mov
pop
cltd
lret
jp
mov
aas
int
cs
and
add
rclb
xor
add
out
ret
push
das
xchg
and
lea
ljmp
push
jns
sbb
lahf
leave
jmp
fcomps
stc
cmp
mov
pop
add
mov
sub
push
jp
clc
repnz
incl
leave
xor
jmp
jp
sbb
loope
popf
push
bound
stos
das
je
shll
int3
test
sub
xor
mov
add
push
adc
push
dec
popa
adcl
std
ds
mov
out
sti
xchg
bound
add
jmp
jns
pusha
push
das
fcompl
sub
aas
push
inc
iret
inc
cmp
cmp
dec
lods
push
adc
xlat
adc
ret
stos
fsts
pop
push
mov
jae
imul
cmp
in
fwait
data16
xchg
push
mov
mov
jnp
outsl
fsubs
pop
outsb
xchg
dec
in
roll
aad
bound
popl
js
mov
push
cmp
inc
mov
xor
scas
push
mov
pusha
add
fisttps
pop
dec
xor
lods
daa
cld
test
lods
or
mov
mov
xchg
prefetch
or
fwait
cmc
cli
inc
push
imul
xor
mov
dec
rorl
mov
sbb
pop
out
out
jo
cld
pop
sbb
in
fstl
imul
cmc
outsb
lds
in
dec
push
sbb
dec
and
push
pop
fs
cmp
in
js
roll
jne
test
xchg
dec
movb
xchg
inc
push
cmp
popa
jmp
cmp
enter
ljmp
cwtl
or
xor
inc
call
sub
mov
sahf
sarl
fwait
jns
jle
cmp
cmp
push
rorb
lcall
add
daa
jl
jb
movsb
jno
fdivs
sub
sarb
mov
test
into
and
loope
call
aaa
enter
or
stc
mov
pusha
push
xchg
jp
ror
movsb
push
and
loopne
pusha
lcall
js
leave
push
xchg
inc
cmp
push
jno
fs
jl
fadds
sahf
push
stos
push
arpl
dec
mov
shll
xlat
pop
repz
fists
adc
inc
cli
push
jo
jne
add
int3
imul
das
cmp
inc
test
ljmp
fadds
movsb
jp
and
fildl
mov
loop
mov
push
mov
xor
adc
xor
ret
pusha
sub
mov
push
cwtl
xor
xor
fwait
push
cmpsl
lret
xorl
or
imul
jne
je
fldenv
ja
jns
cltd
fcoms
scas
pop
jbe
mov
or
add
jle
mov
mov
push
mov
repz
movsl
test
push
out
push
punpcklbw
notb
mov
dec
scas
repnz
aaa
imul
sti
dec
dec
popa
inc
popf
adc
mov
and
imul
mov
cld
outsl
pop
cltd
push
mov
xchg
dec
outsb
cmpl
dec
sub
xchg
cmp
cs
xchg
je
jbe
jecxz
push
jle
xchg
icebp
ror
aas
xchg
adc
ret
mov
aad
out
mov
stc
in
mov
in
xchg
pop
leave
adc
test
insb
out
adc
push
outsl
dec
loopne
jnp
rcr
sub
jnp
rcll
add
inc
shll
je
jg
daa
dec
sahf
int
jle
insb
test
dec
xor
addr16
mov
test
xchg
inc
imul
hlt
xchg
and
nop
or
mov
inc
dec
inc
and
into
into
and
push
pop
addr16
push
or
sub
mov
das
sti
dec
inc
jns
ret
mov
enter
jo
sahf
jecxz
pop
sbb
fstpt
add
sub
data16
dec
je
lock
pop
sbb
jmp
adc
or
orl
arpl
clc
fadd
pushf
mov
rorb
push
add
sub
or
lods
pushf
mov
cmpsb
lds
jge
sbb
leave
inc
mov
insb
xor
adc
and
out
jge
dec
int3
fimuls
jne
dec
xor
dec
jge
xor
push
test
lods
mov
mov
stos
test
pop
inc
push
pusha
push
mov
int3
out
ljmp
mov
mov
daa
jmp
aad
pop
push
pushf
aas
and
lea
ror
mov
sbb
add
aaa
xchg
mov
insl
iret
mov
int3
fldenv
aam
mov
sbb
mov
mov
rcr
push
sbb
aad
push
push
and
inc
imul
lds
cs
push
fdivrs
loopne
int3
mov
mov
xor
add
cmpsb
push
add
clc
or
inc
leave
mov
xor
dec
push
pusha
test
xchg
into
jae
add
repnz
pop
jo
popa
sti
xor
mov
add
jns
imul
mov
in
pop
cli
jmp
jg
mov
mov
push
imul
mov
lock
inc
fwait
mov
scas
fwait
iret
ret
push
push
stos
lock
jmp
dec
adc
or
xor
sbb
movsl
mov
or
and
insl
inc
dec
add
sahf
dec
mov
int
in
arpl
mov
repz
sahf
add
jnp
leave
in
dec
pop
mov
mov
pop
aam
aam
jae
icebp
sbb
mov
addr16
jp
jnp
ret
outsl
cmpsl
int3
xchg
push
insl
xor
sahf
xchg
lret
add
rcrl
into
xchg
mov
cmp
lret
mov
aas
jb
rcll
dec
icebp
cmp
cmp
fildll
aad
flds
pusha
iret
ret
mov
test
mov
jecxz
sahf
js
jle
aam
mov
hlt
cmpsb
dec
outsb
dec
dec
jne
add
dec
fildl
out
dec
fidivs
idivb
div
stc
movsb
mov
arpl
jmp
sahf
sbb
lahf
es
pop
rcl
fs
icebp
adc
test
xor
push
jp
sti
sbb
aaa
xor
repnz
or
jbe
and
int
mov
movsl
push
out
pop
push
je
in
sub
mov
inc
adc
lret
sbb
adc
jmp
or
pop
sbb
pop
mov
pusha
pop
push
xchg
test
adc
xchg
dec
sarb
ds
push
fidivrs
dec
or
and
js,pn
leave
dec
mov
addb
aad
sahf
jl
daa
xchg
pushf
pop
cmp
imul
cmpsl
aas
enter
subb
xchg
sahf
mov
add
push
xor
xor
out
push
lods
and
adc
sbb
push
clc
and
sub
lock
arpl
daa
mov
lods
or
add
mov
adc
cmp
cmp
lods
arpl
cltd
sub
add
inc
push
add
arpl
dec
in
cmp
jg
mov
leave
jnp
sbb
mov
cmpsl
jge
push
fs
fiaddl
call
loop
dec
adc
dec
mov
xor
in
inc
je
adc
sbb
popa
sti
add
xor
jo
cltd
sub
pop
iret
repnz
jne
push
or
iret
inc
pusha
int3
jbe
cmc
jp
jnp
dec
stos
jmp
add
lods
aam
adc
mov
mov
rorb
ljmp
cmp
ret
jae
add
sub
and
int3
add
cmpsb
push
adc
fisubrl
movsb
fstl
ficoms
and
mov
push
and
fcoms
add
lds
imul
orb
shrl
push
insb
xor
rol
mov
and
inc
cmp
imul
cmp
pop
and
and
push
cltd
sbb
shlb
pop
xchg
jno
jnp
outsl
sbb
popf
stc
in
mull
pop
xchg
sbb
mov
imull
add
ljmp
pop
mov
dec
xchg
adc
fimuls
iret
xor
cmp
push
jo
inc
pop
dec
clc
xchg
scas
cmpsb
outsb
sbb
imul
sar
int
push
xor
out
mov
mov
adc
push
imul
sub
dec
stc
popa
and
test
rol
test
loope
test
and
mov
and
push
fmull
mov
negb
mov
and
adc
cld
lret
lods
mov
cmp
jne
pop
sbb
sub
iret
lret
pop
movsb
pop
jo
sarb
sbb
push
dec
dec
adc
push
mov
sti
ret
jp
pop
insl
adc
cmp
adc
lret
fidivl
loopne
mov
dec
rcll
mov
leave
in
jl
ficomps
xor
mov
mov
xor
pop
sbb
mov
xor
xchg
cltd
dec
inc
fists
push
rcrb
fimuls
pop
dec
jl
outsb
push
or
inc
stc
mov
cmp
movsl
insb
cmp
adc
addr16
sub
and
stos
pop
jl
sti
cmp
lret
jo
fldl
int3
repnz
and
les
xchg
idiv
mov
mov
aad
pop
add
in
mov
mov
pop
add
sahf
insl
xchg
lret
pop
and
aas
fwait
mov
adc
xchg
and
imul
cmp
adc
shl
mov
mov
pop
arpl
inc
lods
mov
mov
stos
int3
mov
fmul
js
cmp
lock
es
mov
jnp
filds
scas
inc
or
jae
les
cmp
add
pop
mov
jl
jmp
dec
add
jl
lret
inc
dec
mov
dec
sub
call
inc
test
xchg
jae
cs
push
daa
and
sar
repnz
push
xchg
repz
call
lcall
test
cld
mov
xchg
mov
repnz
dec
loop
xchg
mov
jb
test
aas
jmp
mov
dec
outsl
mov
mov
mov
push
dec
xchg
gs
fldcw
bnd
shlb
mov
jge
inc
lret
imul
inc
call
inc
jecxz
inc
test
xchg
subl
inc
lock
push
dec
mov
inc
jl
loop
cmp
jl
pop
sbb
imul
inc
add
sbb
adc
xchg
jecxz
xor
loop
push
inc
arpl
das
cli
int3
sub
and
std
and
outsb
mov
sbb
out
iret
ret
mov
dec
jecxz
jmp
iret
pop
and
sbbl
mov
mov
les
fs
andb
leave
jmp
and
add
jns
test
mov
aad
mov
nop
lcall
mov
je
test
or
inc
gs
test
subl
adc
insl
adc
int3
testb
mov
sub
mov
sub
mov
mov
jge
mov
in
push
daa
sub
add
sub
mov
push
and
add
hlt
loop
and
js
fstl
sbbb
fidivrl
sbb
roll
pop
mov
and
adc
inc
inc
push
ja
call
loope
xor
lea
mov
add
mov
mov
mov
out
pop
lret
mov
push
mov
jb
repz
pop
les
or
mov
sub
ror
sub
mov
mov
xor
mov
sub
sti
pop
outsb
rorl
push
xchg
jecxz
or
out
push
cmp
outsb
outsl
add
xchg
mov
adc
inc
cs
imul
les
aaa
cli
add
hlt
sbb
cmp
jle
or
cmp
loop
in
popa
add
sub
add
jae
jge
dec
int3
pop
mov
fisubrl
testl
inc
mov
jmp
sub
push
int
lods
addl
push
hlt
jbe
out
mov
ljmp
sahf
std
in
xchg
daa
jge
lret
xor
xorl
lds
mov
dec
sbb
movsl
aad
shll
fs
jecxz
dec
dec
fmul
test
rclb
fs
out
stos
loopne
ret
arpl
push
or
aaa
lods
and
dec
pop
scas
or
subl
ja
adc
inc
into
pop
bound
jg
int
sarb
hlt
cmp
adc
or
shll
xchg
push
mov
xchg
jb
sti
fildll
or
xor
pop
pop
ficompl
test
ret
jl
fwait
or
xchg
mov
int3
mov
jo
pmulhw
push
xor
test
pop
lahf
jecxz
add
pop
fucomp
fldl
filds
mov
bound
cli
icebp
fstps
lret
or
pop
mov
stc
call
cmp
ljmp
sub
cmp
and
push
push
jle
adc
adc
or
xchg
testb
in
xchg
gs
mov
gs
mov
pop
icebp
test
orb
das
mov
dec
fs
adc
test
insl
in
push
push
outsb
mov
push
shr
stos
xlat
sub
mov
lret
or
andb
sbb
mov
loop
mov
mulb
mov
es
es
movsb
pop
lock
and
xchg
xor
and
in
xlat
pop
dec
pop
or
pop
lret
jbe
or
cmp
adc
loop
mov
or
mov
sub
pop
in
cld
mulb
das
and
xchg
pop
mov
scas
xchg
dec
mov
xor
test
loopne
test
andl
movsb
lcall
call
icebp
std
inc
pusha
ret
jo
insl
pop
push
and
xor
adc
lods
mov
and
cmp
sub
sub
pop
sbb
outsb
or
in
imull
lret
iret
push
mov
imul
sahf
xorb
fisttpll
lret
jp
or
clc
mov
mov
sbb
cmp
or
push
xor
sbb
leave
push
test
data16
filds
nop
jnp
pusha
sti
sbb
lcall
cld
dec
movsb
add
pushf
roll
loope
stos
cmp
mov
pop
adc
dec
mov
fldcw
sub
dec
cmpsl
mulb
imul
cmc
pop
pop
andps
movl
insb
xchg
aad
push
add
fldt
sub
or
sbb
ljmp
inc
cmp
out
insl
inc
jnp
xchg
movsb
jb
push
out
adc
lods
pushf
xchg
sbb
lcall
icebp
aad
daa
dec
subb
lods
sub
lcall
fmuls
adc
ret
cmp
loope
xchg
movsb
roll
out
lods
add
movsl
lods
cmp
and
mov
mov
clc
clc
cmp
push
mov
out
out
add
das
push
xor
and
or
cmpsl
cmc
adc
and
enter
mov
jl
jg
cmpl
sbb
push
jl
mov
stos
ds
mov
inc
add
gs
dec
cmovl
or
inc
into
popf
dec
int
mov
mov
sub
ds
sub
or
cmp
add
jae
or
adc
push
ja
xor
nop
pusha
shll
push
push
mov
jmp
push
lea
jp
data16
xchg
adc
inc
std
mov
mov
hlt
jae
mov
aas
and
adc
std
lock
cmpsl
sbb
jg
stos
scas
aaa
jnp
scas
push
push
sub
fwait
hlt
ljmp
mov
jae
imul
mov
dec
mov
into
mov
sahf
jns
mov
lock
lret
in
sbb
push
pop
xor
add
leave
or
scas
xchg
lahf
fs
xchg
xchg
rcrl
jmp
daa
push
mov
das
mov
cmp
xchg
or
cmp
or
dec
push
mov
push
aad
pop
stos
jns
mov
lret
xchg
pusha
clc
jbe
sub
out
sub
lock
mov
sub
fwait
pushf
cmp
mov
repnz
inc
sbb
movb
xchg
and
xor
movsb
and
scas
aam
incl
inc
lret
popf
fsub
je
push
stos
out
jb
add
adc
addr16
mov
xchg
mov
test
xchg
cmp
sbb
sbb
sbb
pmaxub
push
stos
cs
mov
cmp
sbbb
cmp
scas
and
xchg
add
xor
push
jne
sbb
add
or
lock
lock
or
imul
push
dec
imul
sbbl
sub
jno
inc
arpl
sbb
pop
in
pop
jge
sti
enter
sub
repz
pop
push
es
int3
sub
popf
nop
jecxz
insl
cmp
dec
ljmp
bound
xchg
mov
repz
rcrl
xchg
sbbb
into
inc
mov
cld
cli
pop
dec
and
dec
icebp
mov
mov
ljmp
dec
and
xor
inc
push
stos
pop
divb
ficoms
jbe
fdiv
xchg
in
dec
push
jl
mov
mov
jmp
pop
lret
sub
notl
and
pop
cmc
mov
mov
sub
inc
iret
scas
jnp
adc
add
pop
lock
sbb
fmuls
jb
jmp
adc
dec
cli
idivl
clc
ss
and
or
imul
in
and
int3
cmp
rcrb
xor
push
inc
sahf
cmp
xchg
js
mov
jge
pop
gs
mov
push
mov
cmp
pushf
jp
les
cmp
mov
mov
shrb
in
addr16
ret
pop
sbb
sub
aad
cmpsl
sbb
adc
orb
out
jp
adc
xlat
test
insb
call
jl
sahf
mov
xor
int
cld
nop
mov
lret
loope
adc
mov
and
xchg
cld
pop
xlat
pop
rol
mov
lret
push
scas
sti
jo
pop
mov
mov
jg
jecxz
outsb
out
and
push
mov
sub
loop
mulb
add
sub
cltd
push
loope
lea
xchg
inc
add
mov
and
jecxz
stos
and
adcb
out
push
add
mov
cwtl
sbb
xor
sahf
cmc
out
pop
mov
repz
dec
inc
mov
stos
out
push
mov
sbb
xor
or
push
mov
xchg
int3
xchg
divps
fistps
mov
pop
movsb
shlb
xor
mov
je
call
xor
out
clc
ja
daa
ljmp
dec
jno
jge
mov
mov
jge
dec
repz
push
and
insb
test
out
hlt
push
pop
pop
nop
dec
or
aas
jb
pop
lock
or
pop
stc
lret
loope
ds
rcrl
fisubl
or
xorl
loop
xor
pop
dec
push
mov
outsl
xor
cmp
imulb
sub
fstpl
mov
adc
sahf
cmp
add
and
cmp
bound
out
shlb
out
in
fs
xchg
sub
sbb
sub
adc
cmp
pop
cmp
add
sub
pushf
and
push
inc
roll
inc
mov
sub
mov
das
inc
or
and
sub
aam
inc
aas
sub
or
repnz
mov
mov
inc
mov
xor
jge
divb
mov
out
inc
pop
imul
sub
adc
imul
incb
ljmp
dec
iret
add
mov
xchg
adc
or
jge
or
add
movsl
sub
xchg
sbb
mov
jns
xchg
push
sub
mov
mov
push
dec
scas
dec
jl
jecxz
jns
dec
ret
sbb
jns
lret
jae
mov
jne
fwait
sub
scas
sbb
lods
xor
movsl
xchg
ror
xor
push
and
stos
jb
mov
or
xchg
out
adc
fdivl
mov
xchg
sub
in
int3
sbb
pop
jnp
pop
mov
lods
jb
mov
addr16
jg
loop
lods
fstl
inc
test
xchg
out
push
add
mov
and
inc
stos
sti
mov
in
push
clc
cmc
call
jo
in
sbb
fnsave
push
and
cmc
iret
xchg
testb
inc
rcll
lahf
adc
fsubrs
cld
or
mov
aam
cmp
push
push
sti
js
push
mov
negl
int
stos
loop
and
dec
push
jmp
lock
xor
or
outsl
repz
jne
mov
call
mov
add
jge
pop
or
or
inc
rclb
pop
pop
dec
lods
cmpsl
orb
fcmovb
cld
ljmp
sub
sarl
inc
fidivrs
mov
fistpll
int3
sbb
lret
aas
cmp
push
gs
stos
out
jnp
repnz
ret
cli
pop
push
fdivr
loop
outsl
lds
mov
jge
xor
mov
add
jle
bnd
inc
aam
repnz
dec
jecxz
jno
xor
dec
jge
les
inc
lea
cmp
xchg
faddp
and
adc
lret
fs
test
gs
repz
fstps
xchg
cmpsl
leavew
cmc
pop
push
int
fdivs
fcompl
fimuls
enter
pop
into
lods
and
add
loope
mov
jmp
xchg
jae
ret
and
push
btc
xchg
ja
sbb
sbb
lahf
popa
pop
ds
test
fcoml
shrb
daa
dec
inc
jnp
cltd
xlat
popa
in
fiadds
and
xchg
or
jae
out
cmp
outsl
fsubrl
adc
gs
mov
mov
jl
xorb
sub
inc
fimull
mov
xor
xchg
cmpsb
mov
sbb
and
pop
sub
add
mov
mov
adc
rol
mov
inc
stos
xchg
sbb
ljmp
mov
fcmovnbe
push
xchg
scas
ja
fs
jecxz
enter
dec
shrl
orl
push
mov
addr16
stc
cmp
je
mov
pop
jns
dec
push
push
leave
jecxz
and
lods
in
bound
enter
sbb
repz
mov
insl
rcr
inc
dec
mov
sub
mov
jp
lahf
cmp
idivb
mov
es
push
add
mov
popa
xchg
clc
mov
andl
ffreep
orb
sub
clc
jp
xchg
dec
dec
mov
scas
sub
icebp
loop
adc
rolb
rclb
add
rolw
ret
mov
xor
jge
out
loope
jmp
adc
lcall
xchg
popf
sub
dec
and
mov
lahf
ljmp
daa
loopne
mov
dec
mov
out
dec
cs
lcall
mov
rcrb
stos
jno
ljmp
subl
mov
lcall
mov
pusha
test
repz
dec
jnp
fisubl
ret
enter
push
in
sbb
jg
fisttpll
pop
popl
fcom
dec
fcoml
mov
out
in
xor
mov
add
outsl
stos
ljmp
popf
dec
mov
in
mov
or
insb
jmp
inc
in
fiaddl
add
loopne
std
mov
or
dec
sahf
jge
xlat
xchg
inc
xchg
push
jl
bound
cmp
push
mov
jne
jg,pt
out
movsl
stos
inc
jbe
sub
push
ss
add
mov
cmp
dec
inc
mov
ss
dec
xchg
xchg
xor
adc
fdivl
in
fs
stos
scas
adc
idivb
das
iret
cmpsb
push
jge
stc
sahf
xor
sahf
sub
mov
inc
sbb
add
push
testl
xchg
sbb
mov
inc
pop
push
cld
test
mov
pop
cwtl
xor
ljmp
xchg
int
imul
sub
fs
scas
pop
icebp
sbb
dec
dec
jg
mov
ljmp
cmp
mov
test
lea
pop
pop
inc
inc
arpl
aam
out
pop
adc
leave
ret
out
sub
arpl
stc
xlat
dec
jmp
shr
cmp
shlb
adc
and
outsl
fidivs
sbb
int
xchg
cmp
push
pop
das
jmp
add
jge
pusha
xor
stos
test
push
int
leave
sub
pusha
lret
push
mov
mov
inc
and
pop
iret
xlat
pop
fldenv
adc
jns
fimuls
movsb
lock
fdivl
jp
and
jecxz
mull
cs
psrld
cs
aam
lahf
scas
add
jae
pusha
in
fidivrl
andb
loope
pop
mov
mov
jbe
mov
sub
sub
adc
sti
testb
pop
cmp
xchg
je
mov
sub
pop
push
inc
cwtl
push
and
sbb
push
call
lods
adc
push
pop
push
push
pop
add
test
pop
and
movsb
pop
mov
inc
mov
rcl
jg
xchg
mov
push
cmp
in
ljmp
pop
mov
sbb
push
pop
test
fs
movsb
dec
mov
sub
shll
push
mov
or
aas
jno
repnz
add
or
dec
xor
xor
push
xor
inc
int3
mov
dec
sub
add
test
repz
outsb
xchg
in
mov
inc
cmp
jge
cmp
adc
data16
rcrb
push
loop
mov
int
sahf
sub
andl
jle
adcb
adc
adc
push
and
mov
xor
push
cld
loopne
decb
xchg
or
push
jl
add
cmp
test
shr
push
push
inc
cltd
push
cld
dec
mov
test
jo
fwait
inc
jnp
mov
into
inc
shll
ffree
dec
and
lea
loop
and
pop
or
imul
xor
mov
jbe
rclb
imul
mov
jl
cmp
rcrl
test
popa
aad
test
pop
not
imul
dec
pop
insl
dec
jge
clc
ds
cli
in
ret
mov
xor
inc
mov
outsb
xchg
xchg
nop
mov
test
aas
xchg
loopne
sub
inc
bound
lds
and
mov
jl
dec
fcoms
movsb
cmp
in
jae
adc
stos
lock
push
pop
cmp
daa
lret
mov
fcmovnb
test
and
mov
or
repnz
inc
push
jmp
andl
mov
sbb
dec
lea
in
sbbb
xchg
int3
dec
popf
ficomps
call
mov
repnz
xchg
je
ss
aam
jbe
lret
cmpb
mov
lret
inc
dec
push
loopne
int
push
push
rcll
inc
loop
mov
cmp
pop
gs
jb
nop
push
pop
gs
les
add
cmpsb
mov
adc
in
jb
cmpsl
dec
push
push
mov
roll
sbb
stos
add
cmpsl
or
out
adc
fisttpl
frstor
stos
adc
decl
sub
insl
mov
push
stos
mov
xchg
cltd
push
cmp
xor
mov
dec
inc
cmp
mov
xlat
xchg
xor
stos
outsb
sub
imul
pop
aas
jle
arpl
mov
cmpsl
push
xchg
sub
and
mov
push
test
jg
pop
mov
adc
and
scas
jbe
mov
jno
mov
xchg
add
xor
stos
pop
cmp
sub
mov
jmp
sub
pop
icebp
orl
xor
lods
data16
clc
sbb
daa
xchg
inc
lcall
ret
loop
fbstp
aas
mov
cmc
aaa
lods
push
das
cltd
clc
mov
hlt
xlat
js
lods
lret
push
outsb
fisttpll
test
stos
sub
xchg
dec
or
push
es
in
stc
mulb
xor
int
enter
sbb
cwtl
fwait
scas
sub
mov
aam
rol
stos
xchg
test
dec
cli
xor
and
int
push
xchg
push
xchg
ljmp
call
fs
jg
mov
daa
xchg
idivl
jmp
fdivr
mov
arpl
aas
gs
mov
xor
xchg
lcall
fnsave
pop
sti
movsl
mov
addr16
shrl
cmp
push
fistps
xor
add
jae
in
lret
repz
jmp
sub
pop
and
dec
mov
lods
or
repz
fildl
mov
cmp
jp
inc
cmp
cmp
jecxz
xor
test
dec
lret
jno,pn
cwtl
cmp
sub
add
push
mov
es
imul
sti
xorb
pop
fistps
pusha
jge
mov
jne
enter
leave
xor
repnz
dec
mov
jnp
inc
pop
lret
je
popf
pop
dec
inc
repnz
rcrl
xchg
dec
sbb
and
addr16
insb
int3
xadd
push
mov
push
sti
and
dec
loope
or
adc
fcomps
aam
push
lahf
stos
jle
add
mov
push
aaa
dec
pop
insb
mov
daa
cmc
cmc
pusha
mov
aam
xor
xchg
mov
mov
sub
mov
or
push
popa
push
pop
gs
xchg
ja
mov
xchg
pop
lods
hlt
ret
xchg
ljmp
push
inc
inc
repz
inc
loopne
xchg
out
in
push
xor
mov
dec
data16
mov
imul
ficoml
or
lods
jo
mov
pop
push
adc
mov
add
frstor
mov
dec
xchg
subl
into
in
cmpl
fs
lock
and
out
mov
cltd
and
popf
fstpl
rcrb
dec
cmp
loope
inc
das
push
sub
roll
lds
out
mov
dec
imull
ljmp
popf
cli
mov
sti
cltd
ret
scas
inc
adc
fildl
lret
or
mov
inc
xchg
jmp
xor
into
fdivs
sbb
ret
mov
shrb
mov
mov
mov
xchg
mov
lret
pusha
sub
cmp
scas
outsl
xor
mov
push
je
cmpsb
pop
outsb
popa
bound
ljmp
jae
adcb
xor
push
test
xor
xor
jl
inc
adc
inc
outsb
repnz
mov
mov
stos
xchg
pop
lahf
sbb
aad
test
mov
sub
push
pop
idiv
push
or
jp
cs
xor
punpckldq
movb
sbb
and
cmp
sbb
pop
cmpsb
scas
mov
clc
in
and
arpl
sbb
adc
jmp
add
sbb
aam
cmp
loop
push
in
aas
dec
stc
xor
sub
dec
mov
add
inc
aam
mov
xorl
test
mov
clc
pop
test
imulb
fwait
pusha
in
mov
rcr
out
jns
loope
cmpsl
cltd
jne
loope
lahf
test
mov
xlat
add
sub
and
jp
lods
pop
xor
lret
sbb
fsubp
add
iret
rorl
and
bound
push
out
ljmp
aad
xor
add
adc
rorb
movsb
inc
adc
imull
or
or
push
gs
and
clc
repz
push
mov
rcl
std
push
hlt
xchg
xchg
mull
jne
repz
lahf
lret
cmp
xchg
les
fdivrp
pusha
pushf
mov
fldenv
mov
mov
inc
sbb
cmpxchg
loop
fnstsw
popa
imul
mov
pop
mov
stc
scas
jnp
leave
mov
bound
cwtl
fstpl
scas
int3
call
outsb
dec
stos
js
clc
add
leave
pop
shrl
or
fisttpl
cmp
mov
adcl
rcrl
jp
insb
xorl
or
dec
cmpsl
jecxz
pusha
insb
xor
cmp
shrb
sbb
jle
dec
fcoms
mov
mov
test
and
dec
pop
sub
insl
cmp
dec
sahf
ljmp
pop
and
add
sahf
ja
sbb
loopne
xor
and
idivb
repnz
lea
das
jle
xchg
repz
jmp
inc
pop
aas
sub
lods
inc
sub
push
adcb
fwait
inc
xchg
std
mov
push
jne
flds
dec
push
sti
adc
push
ljmp
xor
and
sbb
push
sti
mov
pop
call
fisubl
pop
int3
mov
cmpsl
add
push
js
mov
push
inc
mov
adc
popa
test
cmp
mov
xorb
add
xchg
push
in
repnz
jecxz
inc
adc
jle
mov
outsb
divl
push
mov
pop
ds
gs
lret
push
jno
sub
hlt
add
cmp
shlb
dec
repz
jl
cmpsl
adc
rcll
mov
mov
fnstsw
hlt
movsb
add
roll
pop
xor
add
cli
mov
scas
dec
ja
fwait
out
sbb
add
inc
push
sub
mov
xor
add
jbe
add
pushf
add
adc
cmpb
hlt
int
and
xor
mov
or
test
stc
rcr
aas
xor
xchg
pop
sbb
and
and
sub
mov
mov
stc
mov
or
jo
sbb
sub
std
xor
stc
jg
jne
std
pop
rol
aaa
inc
scas
push
cmp
out
ljmp
xor
out
loopne
sub
add
int3
mov
repz
mov
mov
cmp
and
and
lret
mov
dec
and
pop
js
sub
jae
scas
outsb
jle
stc
test
sub
xchg
push
scas
test
lock
adc
xchg
xchg
cld
xor
xchg
push
fildll
out
mov
gs
pop
mov
lods
aad
gs
add
sub
dec
mov
mulb
inc
push
je
cmpsb
jge
in
mov
rcrl
or
cmp
shrb
jp
fldl
jns
and
sub
mov
inc
push
cmp
shll
mov
adc
js
and
stos
cwtl
mov
add
aad
xchg
push
mov
mov
push
xchg
or
inc
int3
mov
dec
and
int3
out
lock
rcrl
nop
divl
pop
insb
sub
dec
inc
insb
cwtl
lret
cmpsl
sbb
mov
shll
arpl
imulb
and
mul
call
inc
and
lods
cmpsl
xchg
jno
in
push
fsubl
xor
in
pop
test
push
adc
lea
adc
and
popf
addl
push
sahf
push
fiaddl
lret
out
mulb
dec
jmp
inc
fs
ds
mov
sbb
jmp
lods
sarl
mov
cwtl
leave
imul
push
sbb
lods
mov
mov
mov
je
scas
adc
idiv
xor
pop
pushf
in
mov
mov
mov
mov
dec
lahf
push
or
dec
mov
push
mov
xchg
cli
arpl
sti
xchg
mov
jl
jnp
jae
repz
mov
mov
js
jo
jle
adc
les
in
loopne
sbb
push
jae
out
in
jbe
lea
inc
jle
shlb
movsb
dec
add
push
rcll
fmull
jge
out
pushf
repnz
pusha
inc
pop
bound
test
hlt
std
pop
adc
and
mov
addr16
inc
adc
ja
pop
lock
mov
outsl
dec
sub
cs
sub
lcall
add
sbb
daa
movsl
push
cmpsl
pop
jae
jl
int3
ret
fimuls
shr
sbb
sub
pop
in
cmp
clc
push
jnp
dec
hlt
aad
insl
adc
jmp
loope
lock
clc
sub
adc
in
outsb
sti
sub
xchg
out
in
cs
mov
in
mov
cmp
mov
pushl
adc
repz
mov
sub
pop
cltd
sub
test
mov
xchg
dec
pop
adc
cmp
fsubrl
cmp
pop
es
cmp
jle
mov
and
lcall
jl
rcrl
xor
jmp
sub
rcr
rolb
cmpsl
sbb
imul
pushl
cmp
mov
xor
inc
and
clc
ss
xlat
xor
cmp
mov
xchg
rolb
mov
push
ljmp
movsl
jge
sub
pushf
sbb
or
je
cmc
pop
push
decl
jae
out
push
jb
cmc
jge
jno
into
call
cmpsb
scas
popa
push
adc
pop
call
pop
daa
dec
test
clc
inc
ss
jne
mov
testb
icebp
cmp
cmp
gs
adc
dec
fisubl
xor
loopne
cmp
jge
and
xor
or
sub
insb
scas
sub
push
pop
mov
lds
xchg
fadds
sahf
cmpsl
and
js
cltd
cmp
jnp
cmp
pmaxsw
repz
stc
push
and
sbb
inc
pusha
in
add
inc
testl
pop
pop
gs
jl
sbb
mov
xor
adc
aas
xor
clc
imul
daa
xor
cli
push
and
in
push
pop
rcrb
daa
xchg
cmp
aam
ret
jne
addl
in
je
inc
push
outsl
xchg
sub
ficompl
xor
sub
cltd
adc
cltd
or
cli
std
mov
xor
mov
fwait
push
inc
adc
sbb
push
decb
mov
xor
xor
jbe
push
in
shrb
pop
mov
in
cmpsl
and
dec
sbb
fbstp
ja
and
movsl
sarl
loop
mov
mov
sbb
int
notl
popa
jno
push
sub
xchg
jb
jno
inc
push
mov
loop
je
ja
fadds
roll
je
cmpsl
les
movl
fistpll
in
xor
jns
aad
scas
pop
mov
push
adc
inc
push
ret
mov
xor
push
cmp
out
orb
lods
sbb
dec
icebp
imul
push
sbb
aad
mov
mov
and
in
addl
ss
shll
dec
dec
shll
test
push
cmpsb
push
cmpsl
push
aas
push
jle
fidivrl
scas
dec
mov
repz
int3
outsb
add
adc
push
lret
xchg
add
xor
jecxz
jno
int
cmp
push
leave
add
js
leave
aad
imul
mov
sbb
pop
jmp
popf
mov
js
xor
xor
mov
test
popf
xor
and
addr16
ljmp
stc
je
aas
and
xor
jg
push
mov
imul
rep
inc
pop
xor
jbe
mov
daa
lea
pop
xchg
popa
dec
jne
and
inc
ds
mov
fcomi
inc
imul
jo
xchg
push
mov
xchg
shll
add
cmp
jmp
jb
push
gs
jnp
mov
iret
bound
sub
jl
and
sbb
add
jns
xchg
ffree
ljmp
mov
xor
test
jp
push
pop
lea
movb
sti
cmc
dec
xlat
loope
int3
sub
add
ret
out
add
aad
and
push
data16
leave
mov
loope
pop
inc
xchg
repnz
add
lret
xchg
xor
cmpsl
fbstp
sbb
inc
dec
out
das
inc
adc
sbbl
iret
imul
nop
lret
pop
fs
aam
jnp
leave
in
js
cmc
cs
scas
imul
and
push
or
push
or
stos
sahf
dec
test
and
and
add
cli
daa
mov
sti
pop
fwait
into
dec
push
scas
or
or
push
jle
jmp
mov
test
repnz
je
cs
mov
es
push
cmpsl
mov
adc
mov
dec
cmp
bound
shlb
mov
push
outsb
cmc
stos
push
arpl
add
mov
and
pushf
cmp
sub
sub
clc
scas
xor
clc
pop
pop
rcrl
out
insb
pop
or
in
mov
notb
int3
das
mov
sub
pop
int3
dec
cmpsl
cmp
inc
mov
jb
xor
mov
push
xor
jg
mov
mov
or
xchg
xchg
imul
shr
sbb
sbb
ss
cli
aaa
push
popa
jo
pop
jne
stos
push
lods
jl
shl
mov
inc
inc
inc
data16
ficoms
cmp
sbb
ds
mov
addr16
not
adc
jg
pop
and
xchg
pushf
aad
pop
jge
inc
fnstcw
incb
aaa
push
in
jmp
inc
inc
jge
mov
xlat
and
push
js
std
sbb
mov
mov
nop
dec
test
mov
sub
ds
sub
data16
int3
push
adc
stc
pop
cmp
ret
cmp
cld
dec
mov
add
and
sbb
addr16
jg
in
inc
mov
push
xchg
mov
adc
jge
mov
aad
jle
int3
cld
xchg
enter
push
ja
fwait
mov
mov
sbb
cmpl
outsb
pop
jecxz
lea
mov
jle
lret
add
or
adc
icebp
jp
mov
xor
ds
jge
pop
mov
xchg
loope
adc
xchg
daa
aam
and
pop
jae
and
jmp
mov
repz
pop
call
cmp
jne
dec
loopne
jge
jle
shlb
std
pop
xor
repz
push
xor
cmpsl
int
sahf
fidivrl
aad
dec
mov
lret
dec
dec
jbe
xchg
scas
xor
jmp
iret
sub
or
jmp
std
mov
dec
mov
hlt
cwtl
cmpsb
lret
push
sbb
and
xor
add
in
xchg
rclb
jmp
mov
push
mov
inc
jmp
add
std
xor
psrld
adc
je
movsb
or
mov
jl
adc
sahf
rcr
mov
adc
xchg
gs
mov
clc
lahf
divl
pop
js
jp,pt
cli
xchg
ret
and
mov
adc
push
pop
xchg
mov
lcall
gs
test
loop
push
in
andb
xchg
push
xchg
mov
scas
pop
popf
sbb
fstl
fistpl
push
pushf
lea
daa
fnstenv
adc
pushf
lret
xchg
pop
mov
cmc
lods
jnp
dec
ret
and
shlb
dec
int
fildl
cmp
les
xor
push
in
das
pop
cmp
test
jg
dec
lock
nop
clc
fisubrl
sbb
test
test
lahf
inc
mov
sbb
insb
inc
decl
xchg
xchg
in
imul
lock
popf
ss
or
dec
pop
sub
cmp
push
testl
pop
xchg
inc
lock
mov
xor
mov
add
cmp
push
mov
inc
es
int
cmp
push
inc
cmpsl
dec
jo
popa
fstps
pop
lods
mov
xchg
sub
dec
call
xchg
add
pop
sbb
shr
in
into
mov
pop
inc
enter
int3
mov
ja
fsubr
mov
mov
cltd
inc
add
cmpsl
data16
xor
pop
ret
cmp
sahf
out
int3
and
pop
pop
in
sbb
or
dec
and
or
mov
sbb
loop
ret
sbb
mov
bound
nop
mov
imul
pushf
stc
inc
movsl
addb
out
sahf
lods
mov
lcall
mov
xchg
movsb
lcall
test
xchg
inc
shlb
addr16
icebp
out
lahf
sarl
mov
cltd
sti
leave
aas
mov
or
ss
mov
shrl
sub
pop
cmp
mov
mov
test
mov
loop
and
cmpsl
dec
fs
mov
jns
pop
and
xor
push
cwtl
out
call
jnp
outsb
lock
xchg
push
fiadds
jne
lock
loope
subl
mov
xorb
ja
xor
add
add
fs
xchg
mov
add
shll
scas
dec
pop
jnp
push
mov
sti
movsb
outsb
hlt
xor
clc
mov
pop
xchg
push
xchg
rcl
test
aas
pusha
jmp
sub
cmp
ret
inc
scas
xchg
cmp
or
leave
push
or
cltd
das
xchg
pop
aam
jecxz
mov
cmp
and
or
jae
inc
sarl
subb
lret
lods
mov
pop
mov
inc
dec
lcall
xchg
fisubrs
loopne
std
call
mov
int
mov
mov
pop
or
xchg
leave
js
or
push
jl
lcall
mov
insb
test
push
leave
inc
arpl
xlat
mov
test
sbb
jae
das
add
mov
pop
in
sahf
inc
test
clc
pop
ja
mov
push
pop
mov
bswap
out
sub
xor
fistpl
bound
test
mov
jb
add
pushf
dec
fsubl
popf
lret
dec
aas
pusha
push
cwtl
or
clc
icebp
and
icebp
mov
mov
ret
add
xchg
fsub
pop
mov
sub
shr
incb
pushf
adc
inc
into
fsub
inc
loopne
scas
arpl
cmp
inc
mov
sub
mov
idivl
xchg
into
jg
popf
jle
push
add
mov
inc
jbe
insl
xchg
out
push
mov
iret
das
cmpsl
popa
xchg
imull
popa
std
cs
cli
sub
fdivr
in
jge
shlb
shll
lds
int3
dec
xchg
jge
test
mov
xchg
mov
or
sar
inc
mov
aas
and
adc
loop
inc
pushf
call
loopne
sbb
mov
pusha
dec
pop
jge
das
aas
aas
fucomp
loop
xchg
ss
xlat
test
ret
push
pop
sbb
insl
pushf
call
aad
ljmp
xchg
bound
nop
mov
jmp
add
lret
js,pn
pop
pop
ss
mov
pop
repnz
push
lods
jmp
add
mov
push
dec
imul
in
outsl
xchg
andb
jbe
cmp
fidivs
mov
push
ljmp
mov
bswap
xchg
loope
rcll
sbb
cmp
notl
and
sub
cmp
out
sarl
subb
subl
adc
and
mov
adc
pop
inc
inc
sbb
lock
mov
jle
jmp
iret
cmp
mov
jnp
ficompl
pop
and
xchg
mov
test
iret
sub
cmp
mov
xor
pop
fwait
pop
mov
mov
dec
dec
outsb
sbb
in
xchg
divb
jg
not
inc
fs
xor
ds
enter
mov
xchg
inc
aaa
and
xor
lods
mov
mov
inc
cltd
dec
adc
jnp
mov
sub
test
popf
decb
lcall
add
call
leave
inc
ret
out
pop
mov
popf
in
pop
push
call
pop
adc
jge
loope
or
test
pop
pop
lds
xchg
mull
mov
movsl
xor
adc
fistps
cwtd
int
jne
fsubr
js
clc
cld
fsubrs
ja
jle
mov
mov
xor
cmp
cmp
pop
xor
lea
xchg
mov
and
push
ja
cld
scas
std
push
dec
sub
test
mov
lods
arpl
xor
xchg
jno
push
dec
lret
cs
test
inc
daa
push
popa
fidivs
stc
rcll
loop
rcrl
stos
daa
xor
ret
xor
jb
call
loop
scas
pop
ljmp
lret
test
mov
pop
js
std
cmp
scas
mov
jno
pop
xor
std
sbb
addr16
outsl
sub
shrl
test
cs
push
jmp
je
pushw
pop
xor
scas
scas
movl
push
xchg
cmp
add
lods
mov
dec
xchg
outsl
mov
pop
or
cltd
xchg
mov
cli
pop
ficomps
outsl
lret
lock
lods
addr16
inc
inc
and
adc
pushf
jo
mov
inc
sbbl
adc
inc
mov
jmp
push
sub
pop
mov
stos
je
insb
arpl
sub
in
das
lock
cmc
push
sahf
inc
sti
test
dec
loope
arpl
jecxz
jns
mov
inc
mov
call
idivl
adc
mov
and
push
outsl
xor
and
fimuls
push
cmp
jge
mov
je
push
and
mov
sahf
dec
scas
test
push
imul
lret
xor
les
push
sbb
xchg
movsl
jne
adc
mov
mov
xor
aas
lock
fucom
rol
add
push
xchg
push
pop
dec
test
sbb
call
push
push
data16
dec
out
shr
cmp
loopne
xchg
imul
jle
and
xchg
xor
xlat
loopne
sub
scas
movsl
mov
jns
call
mov
push
add
fisttpll
sbb
addl
mov
dec
push
mov
pusha
bound
dec
out
cmc
mov
leave
jb
lret
push
dec
insb
out
loope
jne
fnsave
data16
mov
mov
or
rorb
in
arpl
sub
in
lods
lea
jge
inc
sbb
out
out
cwtl
pop
fsts
mov
stc
fwait
sub
push
xbegin
imul
add
xor
adc
xchg
loopne
inc
push
inc
mov
add
mov
push
icebp
test
jno
in
push
lret
dec
into
adc
mov
outsb
cmp
push
ret
aaa
ret
cmp
imulb
push
hlt
mov
adc
shlb
sub
cmc
outsl
cmpsb
sub
popf
mov
es
data16
push
lods
adc
inc
pushf
xor
pop
and
test
cmp
in
cmp
mov
push
pop
loop
xchg
sub
in
js
mov
arpl
dec
cmpsl
int3
cmpsb
jp
icebp
insl
xor
pop
pop
out
cld
aas
jb
push
fsubl
or
inc
addr16
sub
arpl
push
pop
or
cmpl
cmc
add
lcall
dec
xor
out
rclb
stos
cwtl
lea
mov
in
mov
sbb
in
inc
jns
pop
adc
cmp
jae
push
pop
dec
clc
shl
movl
sbb
or
xchg
fcomp
das
cmp
dec
add
sub
call
es
stos
mov
test
fcomi
call
mov
enter
mov
fldt
adc
adcb
int
add
inc
inc
add
fldl
jl
in
or
push
daa
add
int3
ss
fsub
and
mov
in
fs
dec
notl
push
xchg
cmp
inc
pushf
xor
fisttpll
and
jno
mov
push
push
clc
inc
mov
std
lods
xor
pop
inc
aaa
nop
call
cmp
leave
push
mov
push
hlt
call
movsb
out
push
call
je
dec
pop
push
cmpsb
inc
stc
pushf
xchg
sub
cmpsb
or
std
sub
into
push
into
add
mov
push
or
imul
fwait
ja
jbe
inc
dec
cmp
mov
jle
mov
mov
jmp
addl
pop
out
cld
inc
pop
aad
or
nop
mov
lock
dec
sbb
pop
imul
rclb
add
push
ret
sub
sbb
mov
out
stc
movsb
jne
and
out
loope
stos
nop
cltd
lods
mov
std
mov
lret
in
lret
lret
mov
sbb
lock
stos
mov
jg
dec
pop
sbb
xchg
ds
inc
dec
fsubr
stos
pop
cmp
pushf
mov
clc
or
or
lods
pop
jnp
shrb
adc
add
das
sbb
popf
leave
daa
shl
sub
mov
std
jge
push
ret
fwait
insb
and
xchg
aad
das
xor
in
stos
adc
lea
adc
insl
fisubrs
int3
arpl
and
cmp
push
jge
into
sub
and
inc
jb
or
jmp
fiadds
inc
cmp
aas
lret
fisttpll
jl
mov
xchg
int3
test
add
dec
ss
ret
fnsave
jp
dec
in
fists
lds
add
aad
inc
out
push
push
jle
cmp
aad
cltd
fiaddl
mov
sub
add
jmp
test
mov
jnp
mov
rcrb
ficoml
jge
mov
addb
sub
push
inc
inc
test
lods
repnz
mov
jle
sbb
xchg
pusha
fdivp
xchg
inc
lcall
loope
sbb
push
fdivl
popa
jo
in
jb
mov
ja
in
xorb
scas
sub
mov
gs
push
test
cmp
adc
xchg
pop
stc
call
sub
push
mov
dec
aam
cmpsw
scas
fstps
fsts
inc
cmp
and
mov
pop
sahf
and
adc
adc
aad
cs
aas
std
add
sbb
adc
out
insb
popf
xorb
jo
cli
pop
addr16
or
and
sahf
sbb
mov
inc
fadds
aad
mov
cltd
jnp
xchg
dec
fcoml
cli
mov
stos
pop
cmpb
sbb
xor
mov
pop
cmp
jbe
inc
out
mov
mov
xchg
xor
imul
cmp
cmpsb
jo
scas
or
cs
out
movsb
xor
xchg
sti
fwait
add
sarl
sub
clc
mov
leave
xchg
in
push
call
loop
mov
mov
push
xchg
xchg
inc
push
pop
mov
sarb
fwait
lds
je
pop
xchg
xor
cmp
es
mov
lods
xor
cmc
adc
add
sbb
mov
inc
je
lea
lret
in
out
decl
mov
pop
lea
sarb
popf
adc
cld
adc
or
stos
adc
xor
sti
and
nop
sub
inc
jle
in
sti
cwtl
bound
add
mov
cltd
ss
call
cmp
sbb
call
sub
js
pop
jne
xor
fldt
mov
push
mov
stos
in
aad
rolb
into
scas
out
adc
test
out
add
and
idivb
inc
xor
push
repnz
decb
cmp
ss
repz
std
out
or
mov
sub
push
nop
les
push
pop
mov
adc
push
jge
addl
fdivs
in
ficomps
das
pop
xor
call
mov
cwtl
out
ficompl
pmaddwd
ja,pt
icebp
mov
arpl
cmp
test
aaa
pop
sub
dec
and
insl
mov
rorl
dec
les
mov
cmp
shrb
fxch
dec
shll
jnp
out
jnp
jne
rclb
sbb
ss
mov
insl
dec
cmp
out
pop
mov
cmp
mov
mov
cmp
jae
dec
mov
test
imul
cmpb
cltd
aas
movl
outsb
jg
adc
inc
xchg
in
inc
test
das
pop
fisubrs
in
cmpsl
bound
xor
or
out
mov
adc
int
xchg
or
or
push
mov
or
fs
add
xor
xlat
mov
in
push
xor
lcall
rcl
adc
push
stc
out
xor
sub
jno
imul
sub
addr16
mov
adc
loopne
push
jmp
xor
dec
push
lret
jns
dec
sbb
scas
and
xchg
add
pop
push
mov
lods
pop
pop
cli
xor
loope
ljmp
js
cltd
in
cwtl
sbb
ret
test
jecxz
fcomps
andb
repnz
jp
dec
nop
sti
dec
scas
lret
xlat
mov
push
xor
scas
mov
xchg
in
addb
sub
mov
mov
fisttps
pusha
and
stc
push
mov
mov
lcall
pop
icebp
stc
pushf
sub
int
scas
popa
mov
ficoml
mov
sub
jb
xchg
mov
into
int3
push
outsb
lret
rcrl
fisubrs
push
inc
in
xor
jle
inc
dec
int3
test
int
and
xchg
pop
loopne
std
xchg
mov
leave
ficoml
test
in
xchg
push
push
mov
dec
sbb
xor
insl
scas
sbb
rolb
movsl
dec
adc
sub
sbb
mov
fs
ljmp
xchg
cld
pusha
loopne
mov
inc
sti
pop
jle
push
push
loope
xchg
xchg
popf
call
mov
cmp
test
popa
repnz
testb
add
out
lock
fidivs
in
mov
inc
xchg
push
jbe
xchg
add
push
push
push
jge
ljmp
das
push
lahf
cltd
jbe
ds
xchg
push
xchg
xorb
push
xlat
addb
cmc
fstl
fcom
incb
test
call
xchg
int
mov
test
test
shll
push
imul
cmp
add
sahf
dec
push
jl
je
jmp
mov
jp
gs
loop
jae
lods
push
mov
mov
push
xchg
jo
cmp
cmpl
clc
jno
push
jnp
or
and
test
rcll
jg
loope
pop
je
ljmp
push
clc
add
ss
mov
lods
int3
daa
in
jbe
mov
adc
sub
push
mov
test
push
das
cmp
mov
sub
xchg
movsl
push
call
xchg
ret
cmp
imul
mov
and
pop
or
je
xor
push
imul
cvtdq2ps
sbb
and
scas
out
pop
push
ret
push
push
fistps
movsl
jnp
subb
jmp
inc
xchg
sbb
es
repnz
in
xchg
cmp
mov
int3
mov
xchg
xor
mov
clc
test
lahf
pop
dec
fimull
rcl
push
std
repz
das
cmc
daa
add
into
enter
xchg
popa
fildll
xchg
fsub
lcall
adc
out
imulb
or
cwtl
insl
rcl
ret
scas
inc
popa
decb
stos
mov
push
ret
push
scas
mov
movsb
adc
mov
xor
dec
shrl
inc
inc
jmp
dec
es
mov
js
inc
sbb
jp
imul
mov
xchg
outsb
out
xor
and
pop
movsb
sti
push
aaa
add
jnp
cltd
ljmp
movsb
or
mov
pop
lock
xchg
dec
dec
mov
lock
xor
outsl
aas
push
aaa
sbb
and
push
or
jb
xchg
add
movsl
mov
insb
push
popf
ret
aaa
dec
ret
insb
cmp
and
out
xchg
sarb
ret
fimuls
outsb
inc
bound
add
out
std
pop
iret
fndisi(8087
dec
lods
imul
jl
fwait
loope
int3
aas
or
sub
enter
sub
pop
sub
push
mov
dec
sub
mov
mov
test
jge
fmull
dec
fadds
mov
jp
and
xchg
jmp
pop
cmpsl
insl
nop
cmp
pop
jbe
rcll
pop
cs
xchg
cmp
loop
sarb
shr
inc
lret
mulb
pop
mov
leave
in
je
dec
lea
pop
movsl
mov
leave
out
sarb
andl
int3
mov
ficompl
out
in
push
push
pop
adc
pop
dec
dec
xchg
in
lcall
loop
inc
push
popf
aad
sar
inc
push
fadds
das
xchg
and
add
fwait
inc
lock
daa
lods
out
and
or
jp
add
add
or
loope
jl
fidivl
push
les
leave
and
inc
incb
in
or
xchg
arpl
or
mov
cmp
cli
sub
cltd
lds
adc
int3
testb
ja
sub
outsb
inc
dec
pop
mov
jmp
stc
gs
sti
data16
js
xor
mov
shlb
sarl
add
push
fucomi
push
jae
ret
or
ficomps
adc
cmp
mov
lea
dec
adc
cltd
jmp
cmp
add
insb
jo
ljmp
pushf
mov
insl
shr
aaa
sbb
mov
xor
push
jns
fs
push
andl
pop
loop
lods
mov
lret
scas
push
and
xor
lods
mov
shll
xchg
outsl
push
inc
or
jmp
mov
jnp
fwait
test
lcall
daa
pop
shrl
int
xor
xor
add
jecxz
jno
aaa
mov
outsb
out
arpl
out
iret
test
shll
push
fistpll
mov
ror
dec
imul
mov
mov
cmpsb
rorl
push
mov
das
xor
sahf
pop
push
add
add
lret
int
jae
ss
jecxz
pusha
fldcw
sub
sbb
std
lcall
pop
dec
xor
jecxz
push
add
adcl
push
pop
not
xor
sti
ljmp
push
arpl
mov
jne
mov
iret
gs
lods
jnp
les
jle
jae
push
call
pushf
mov
pop
add
mov
push
jl
cs
sti
lods
mov
mov
jns
inc
rcrl
push
fisubs
repz
mov
mov
xchg
xchg
aam
bound
stos
leave
subl
xchg
sahf
mov
jnp
inc
lcall
add
inc
lods
gs
enter
xor
scas
jecxz
mov
jo
jmp
ret
pop
ss
out
add
or
fcomps
jno
imul
dec
or
xchg
jbe
mov
add
stos
cmp
dec
adc
fsubrs
cltd
in
inc
sbb
sbb
imull
stos
pushf
add
stos
mov
mov
mov
in
fsubrs
mov
fistpll
xlat
fucom
jg
aas
out
scas
xor
pop
pop
and
cmpb
xor
out
mov
push
insl
mov
pop
popa
push
out
in
dec
stos
test
mov
rcr
insl
lock
add
xor
pop
movb
push
test
sub
cli
std
sbb
pop
pop
pop
aad
stc
xchg
mov
sub
adc
repz
insl
mov
add
xchg
xor
lock
imul
add
stos
xor
in
push
mov
and
mov
jae
ffreep
push
ret
xchg
adc
imull
jo
test
add
xchg
push
addl
xchg
jecxz
jle
sub
adc
out
xor
xchg
movsl
or
cmpsl
ret
pop
adc
push
mull
jge
cmpsl
data16
cmp
pop
fs
push
ds
sti
clc
out
repnz
dec
imul
lret
cmp
or
out
mov
punpcklwd
push
cmp
mov
xchg
jg
or
and
ficoml
fidivrl
pop
jg
loopne
mov
dec
loopw
sbb
jmp
lds
pop
adc
repz
in
enter
pop
out
xlat
stos
icebp
orb
sub
push
in
lods
push
cld
aas
xchg
gs
test
insb
call
xchg
push
in
ficompl
jb
and
push
rorb
insl
int
cld
mov
cs
push
loop
mov
lcall
add
xchg
bound
inc
aaa
lea
cmpsb
lahf
push
inc
popf
dec
cli
adc
out
sub
out
lret
imul
out
clc
jno
xchg
and
add
lcall
out
fstpt
mov
pop
ja
ja
jl
in
jnp
stos
adc
hlt
dec
bsr
cmovns
icebp
xor
or
rcl
aas
mov
jnp
and
mov
pop
dec
push
out
jne
sub
push
stc
shrl
jae
xchg
push
lcall
xchg
and
out
mov
lret
mov
jecxz
int
xchg
stc
push
adc
js
std
mov
cmp
xchg
and
push
inc
into
fisubl
push
ss
push
mov
jmp
jg
ja
aam
movsl
clc
pop
pushf
and
pusha
push
lret
pop
inc
xor
sub
ret
in
cmpsb
jle
cmpsl
and
out
aam
dec
cltd
ja
shl
jnp
dec
add
mov
cld
sub
movsl
fwait
pop
push
cmp
mov
and
pop
loopne
addr16
cli
mov
testl
fdivl
dec
mov
stos
dec
data16
fists
add
cmp
iret
cltd
pop
shll
inc
add
mov
sub
mov
loopne
mov
mov
pop
inc
sub
lds
movnti
adc
lods
xor
movsl
add
mov
push
sbb
fdivrl
fisttps
xor
sub
stc
dec
in
sub
xor
pop
mov
packssdw
addr16
in
lahf
xchg
fildl
ret
mov
jns
fxch
jl
fcmovne
in
loopne
push
jne
or
pop
stos
shl
cmpsl
cltd
and
mov
sbb
and
sub
push
mov
fidivl
cmp
clc
call
inc
test
jne
outsb
sbb
mov
pop
nop
jmp
out
mov
pop
pop
cmc
test
pop
xor
jne
add
ret
push
ss
adc
lcall
mov
pusha
mov
push
mov
xchg
lahf
mov
out
movsb
stos
sti
std
xchg
or
out
cmp
in
xchg
pop
stos
cld
mov
jmp
imul
mov
sbb
fstpl
in
fists
mov
fbld
test
inc
push
fcoms
aas
arpl
dec
dec
fidivrs
inc
leave
cmp
push
or
sbb
lret
stos
inc
data16
adc
pop
mov
pop
ds
popl
daa
lret
adc
cld
push
cltd
cmp
xchg
call
outsb
add
js
leave
subb
cmpsb
and
inc
push
lock
fdivr
stos
fdivrp
es
js
lea
sub
lds
dec
mov
adc
faddl
dec
xchg
and
cmp
xchg
push
sbb
icebp
cmp
add
xor
lds
jmp
cmpsl
int3
sub
jle
push
xor
jle
mov
stos
movlhps
cmp
mov
sahf
adc
cmpsb
xchg
lock
rcrb
cwtl
icebp
fisttpll
xor
ret
test
push
decb
mov
jle
add
pushf
aad
pop
scas
cmp
in
or
loope
cmpsb
scas
movsl
les
jb
test
xlat
sbb
cmp
mov
movsl
push
push
testb
sub
mov
inc
adc
push
pop
mov
add
cmp
cld
sbbw
xlat
push
push
movsb
fstpt
adc
sbb
fcmovnbe
repz
inc
sub
leave
test
fsub
loopne
insl
and
jecxz
andb
sbb
int
je
outsl
push
sub
scas
iret
addr16
popf
add
sub
inc
cmc
fsubrl
xor
imul
sub
insl
xor
fsubs
and
add
sub
inc
add
sub
cmp
pushl
dec
fstpt
lret
call
pop
mov
mov
sarl
jno
mov
inc
ja
adcb
in
imul
sbb
mov
xchg
mov
sub
daa
scas
loopne
fdivrs
aam
push
sbb
scas
pop
cmp
sbb
clc
adc
fisubs
add
ret
mov
cmp
imul
mov
pop
inc
adc
mov
and
mov
leave
pop
mov
cmp
adc
or
cwtl
push
cltd
bswap
mov
stos
lea
lcall
das
sbb
mov
mov
dec
iret
mov
mov
cmp
je
xchg
push
push
jecxz
or
dec
push
mov
sub
mov
setns
mov
mov
xor
pop
imul
pop
mov
cmp
lods
cmp
ljmp
jae
jbe
mov
push
scas
mov
lret
js
jbe
jnp
testl
push
incb
pusha
mov
mov
mov
pop
mov
ljmp
mov
push
lcall
xchg
cmc
aam
fiaddl
mov
pop
pop
movsl
push
push
stos
icebp
outsl
addr16
in
jbe
mov
xchg
flds
fsubl
dec
add
into
lret
mov
pop
cmp
xlat
inc
add
shlb
mov
fiadds
test
jb
sbb
add
dec
mov
dec
xchg
dec
dec
lcall
loop
jns
jbe
ret
jb
adc
pusha
lret
adc
dec
xchg
pop
mov
push
shl
xchg
dec
xchg
mov
mov
pop
pushf
lret
mov
in
mov
popf
cmp
rcrl
cmp
add
mov
lock
cmp
adc
call
mov
dec
add
fdivs
outsl
test
mov
fadds
mov
outsl
push
loopne
call
sub
mov
cmc
push
xchg
sbb
add
in
das
mov
add
pop
dec
add
cs
add
jp
hlt
cmp
add
adc
cwtl
or
cmp
xor
adc
inc
insb
dec
cmp
imul
scas
stos
dec
scas
cs
sub
insb
les
jo
aas
daa
xchg
aad
jecxz
fcmovbe
add
je
test
xor
lock
pop
xlat
jns
inc
push
inc
xchg
sahf
std
mov
mov
es
sub
jp
repz
cmp
nop
rclb
pop
jp
mov
cmp
pop
mov
movl
lcall
jmp
or
inc
dec
enter
addr16
dec
pop
cmp
aad
push
dec
rcr
push
xchg
xor
xor
lods
adc
sahf
hlt
mov
xchg
scas
hlt
loopne
aam
sti
mov
sbb
lret
and
fstps
popa
popf
sbb
in
mov
and
sahf
andl
div
sti
mov
ret
adc
outsl
sbb
push
pushf
add
fwait
cwtl
adc
push
movups
xor
imul
orb
into
fcomp
lret
lret
popf
popa
sti
movsb
xchg
shlb
mov
data16
orl
int
pop
cmp
lret
das
adc
ret
stos
test
inc
sbb
cmp
outsb
mov
dec
inc
inc
xor
xchg
add
out
mov
sub
or
aam
adc
mov
xchg
mov
sti
inc
sahf
into
ss
xchg
add
mov
jg
loop
inc
dec
fistps
sub
loope
mov
xchg
imul
pushf
lret
or
stc
pop
push
leave
rcll
imul
aaa
push
sbb
dec
fidivl
ja
adc
pushf
ret
jmp
inc
movsb
xor
and
jae
pop
sbb
stos
inc
add
lea
cwtl
fidivrs
aad
pop
cmc
repnz
std
sbb
jb
stc
lret
in
jae
test
lret
xor
add
test
or
mov
or
mov
mov
inc
scas
add
xor
or
mov
hlt
adc
dec
jle
flds
mov
movsb
push
aas
test
mov
pusha
pop
cmc
xchg
mov
pop
and
insb
inc
cmpsb
mov
dec
push
adc
mov
cli
xchg
out
mov
arpl
add
mov
mov
jae
shll
jns
icebp
mov
jae
and
pop
mov
dec
xchg
repnz
push
adc
jg
dec
scas
in
adcl
xchg
mov
mov
mov
addl
or
pop
add
jecxz
movsl
aad
cwtl
fs
mov
push
cltd
mov
mov
xchg
mov
enter
add
jg
fwait
and
clc
mov
popa
das
cmpsl
sub
pop
mov
mov
pop
and
pop
mov
inc
pop
dec
push
repnz
inc
lods
cli
add
repnz
xor
or
popf
jle
dec
jmp
push
jmp
push
mov
or
icebp
mov
ja
pusha
gs
jl
test
sub
pusha
or
push
lods
cmp
pop
sub
ds
fisubrl
aad
push
iret
clc
fs
xchg
stos
psubb
stos
cmp
sbb
popf
dec
push
hlt
es
fcompl
aaa
icebp
cmc
jmp
in
mov
sahf
repnz
push
pop
lea
sti
sbb
xor
jmp
or
sub
hlt
cmp
push
leave
loope
cmpsl
repz
insb
std
mov
cmp
insb
sarl
lret
les
outsl
addr16
and
dec
push
js
pop
jmp
out
mov
pop
test
pop
scas
add
jno
outsl
mov
cmp
sbb
mulb
jno
dec
cltd
movsl
adc
les
add
and
out
sbbl
mov
in
mov
mov
and
dec
lods
insb
into
pop
rol
mov
xchg
imul
lret
push
jo
ljmp
popf
pop
inc
rcll
pop
xchg
in
mov
psubd
in
jo
ficoml
or
scas
adc
cmp
lds
jle
xor
inc
xor
ljmp
pop
mov
pop
xlat
iret
dec
inc
xor
sti
nop
in
cmpsb
cs
lods
pop
and
push
adc
inc
cs
daa
test
push
mov
mov
stc
inc
and
mov
popa
jmp
lahf
fidivl
sbb
mov
xor
xchg
repnz
lods
std
scas
mov
mov
add
inc
dec
inc
mov
ret
data16
call
test
lods
inc
icebp
xchg
inc
xchg
bnd
mov
gs
cmpsb
mov
sbb
jno
dec
and
pop
test
out
ds
scas
cmc
pop
sbb
dec
nop
scas
in
fdivl
push
aad
and
imul
push
mov
mov
mov
fidivrl
ja
nop
xchg
bndstx
jecxz
outsl
iret
ds
jae
std
inc
mov
jns
push
popf
cmp
and
fcmovnbe
pop
outsb
pop
in
xchg
pop
insb
loopne
int3
popf
sbb
sub
fs
sbb
jp
inc
mov
mov
jge
das
iret
scas
and
pop
test
sbb
xchg
mov
pop
je
cmc
mov
lods
jo
mov
push
pop
ja
js
stc
test
aad
out
cwtl
push
xor
ret
dec
bound
rorb
cmp
sbb
jmp
lock
fimuls
enter
cli
movsl
dec
in
inc
xchg
scas
ret
sub
mov
ljmp
popa
in
mov
pusha
aad
xlat
rol
cmc
incb
ret
fidivrl
jns
xchg
loopne
mov
xchg
out
int
cli
stos
jl
pop
xor
enter
hlt
sbb
ja
popa
fnstenv
popl
loopne
xchg
popf
in
mov
pop
punpcklbw
insl
repz
loopne
pop
inc
push
cmp
xor
adc
mov
mov
jl
push
mov
je
dec
cld
inc
pop
ja
adc
mov
mov
xchg
pop
lea
xchg
mov
addl
jg
je
popa
add
pop
cmpsb
lcall
add
ja
call
sub
ss
hlt
push
daa
imul
mov
sbb
das
test
js
pop
xor
js
jno
or
pop
mov
dec
or
test
mov
add
or
in
push
dec
test
cmpsb
lock
or
jmp
jl
push
or
pop
out
flds
xchg
fstpl
sbb
fs
gs
adc
sbb
out
xchg
or
sub
xchg
out
nop
jne
shll
popf
mov
sbb
mov
or
jnp
ljmp
mov
sub
imul
xchg
xchg
pop
jb
push
xchg
mov
mov
xor
pop
or
adc
insl
cmp
xchg
inc
ljmp
pop
sti
cmovae
xchg
xor
psllq
out
in
xor
cmp
fcmovu
xor
ret
out
mov
fdivrs
xor
or
out
xchg
clc
xchg
or
pop
push
mov
gs
sarl
adc
mov
mov
in
add
into
or
push
int
mov
outsb
add
sbb
mov
pop
aam
cwtl
pop
xor
inc
lds
pop
rorb
decl
cld
andb
imulb
int3
out
add
cmp
pop
iret
mov
push
fidivl
int
add
cmp
xchg
jbe
ret
out
gs
jle
fsubrs
or
fnsave
lods
lret
mov
fwait
dec
cmpsl
scas
pushf
sub
movq
repnz
mov
bnd
pop
repnz
xor
sbb
testl
test
cmpsb
test
subb
fists
rcrl
dec
lea
loopne
pusha
push
or
ja
cmc
add
pop
push
shrb
sti
lret
out
mov
scas
lcall
fsubs
ljmp
sti
mov
or
ja
test
inc
pop
mov
repz
ss
cmpsl
mov
mov
xchg
in
mov
call
idiv
pop
fs
into
pop
cld
dec
addb
xor
jl
add
test
push
sbb
jns
stos
inc
push
sbb
stc
nop
push
lods
push
jmp
sbb
pop
daa
ret
fisttpll
dec
daa
scas
lock
jge
jecxz
xchg
icebp
xchg
scas
cmp
test
sub
adc
mov
rolb
outsl
leave
out
mov
arpl
sbb
adc
in
cmp
rcr
jno
or
push
mov
xor
adc
and
dec
stos
dec
fcomi
iret
ss
xchg
or
mov
xchg
ljmp
add
xchg
sti
iret
cmp
cwtl
andl
add
rclb
in
int3
clc
mov
push
jne
sub
loop
push
scas
pop
fmull
clc
hlt
mov
mov
mov
jb
mov
mov
xchg
inc
lret
sbb
cmc
shll
subb
dec
pop
enter
lea
das
and
das
mov
sbb
xchg
add
add
pop
mov
sub
fndisi(8087
fcomps
pop
sahf
loope
inc
push
xor
add
jnp
jp
addl
stc
mov
mov
mov
loop
mov
in
pop
cmp
fidivl
xchg
outsl
nop
fldt
push
movlps
dec
xor
call
inc
xor
add
xlat
or
adc
jno
orl
movsb
push
sbb
adc
insb
int3
lock
mov
sbb
mov
xor
push
jmp
insb
jne
xlat
xor
fidivl
cs
outsl
sarl
push
pop
imul
add
sub
push
jb
mov
mov
jno
xchg
add
fiadds
and
cmp
std
pop
mov
int
sarb
mov
push
mov
mov
lea
fsubr
or
pop
sub
in
andb
cmc
cmc
pusha
adc
jge
xchg
in
shrl
idivl
and
outsb
test
dec
imul
inc
outsb
or
add
sub
clc
leave
cmp
xor
inc
orl
mov
push
sbb
mov
int
leave
cli
mov
pop
popa
lret
loopne
out
repz
stos
mov
mov
fstpt
jno
imul
ret
gs
shrl
xchg
jle
mov
or
lods
inc
xchg
mov
ja
in
rcrl
ds
cmpsb
mov
mov
test
xlat
outsl
popf
fdivrl
insb
std
pushf
xchg
test
neg
out
jp
nop
and
mov
cmp
mov
insl
cli
xchg
jl
clc
test
aam
int3
mul
and
mov
data16
jle
mov
in
je
aas
mov
xchg
add
stos
in
flds
inc
in
jle
fnstcw
and
xchg
and
stos
add
add
mov
or
das
pop
repz
adc
ds
dec
ret
cmp
pop
les
mov
and
push
lods
fisubs
lcall
xchg
push
xlat
sub
mov
cmpsl
add
jecxz
in
adc
sub
std
xchg
or
hlt
ficoml
js
dec
adc
test
leave
pop
sahf
push
xlat
inc
out
je
sub
and
ds
ret
lock
nop
cmpsl
fnstsw
rcrb
mov
in
stos
loopne
xchg
rol
xchg
mov
lahf
sub
loopne
scas
push
add
or
pop
add
or
shll
inc
add
in
mov
sbb
loop
nop
adc
inc
ret
and
mov
inc
and
ja
mov
loope
fdivr
xor
cld
xor
out
inc
mov
mov
cmp
adc
mov
pusha
fdivl
xchg
shlb
jae
xchg
pop
pop
cmpsl
lock
xchg
cmp
cmp
xchg
jbe
ja
test
pusha
sub
dec
outsb
mov
cltd
mov
add
test
add
lds
test
stc
mov
cmp
or
add
and
jmp
mov
loop
mov
mov
test
cmc
sti
in
cmp
pop
push
sub
mov
inc
lods
popa
mov
aas
fisubrs
cltd
jo
scas
inc
out
sub
fsubl
mov
mov
aaa
enter
mov
jl
sub
cmpsl
sub
cs
xor
fnsave
jle
inc
inc
call
lods
aad
sti
cmp
cmc
xchg
addr16
push
cmp
cmc
notl
dec
insl
sahf
cmpl
jl
bound
ja
push
inc
inc
hlt
lods
xlat
scas
push
cmp
shlb
imul
mov
mov
dec
lods
sub
adc
xor
push
cmpsl
in
mov
inc
outsb
decb
shlb
and
xchg
mov
jns
xor
jl
imul
je
adc
inc
adc
adc
test
push
test
test
mov
repz
fwait
loope
jp
and
sbb
jo
jb
sub
dec
jno
inc
mov
jmp
loopne
dec
jae
xchg
pusha
push
xchg
jp
push
inc
adc
cmpsl
jae
in
or
test
ja
cli
jl
cmp
fdivl
loope
loope
cmp
inc
cmp
push
enter
inc
sub
add
fmuls
push
jnp
or
outsb
ljmp
leave
jnp
mov
lods
mov
pop
mov
das
cmp
xor
xchg
sbb
out
pop
jecxz
mov
cmp
js
ljmp
pop
lods
fmuls
mov
fdivr
mov
fisttps
mov
jmp
orl
lea
jno
push
fnstcw
mov
or
and
scas
movsb
clc
aam
loope
inc
add
cmc
fistpll
bound
fucom
dec
jne
inc
cld
mov
mov
gs
add
adc
dec
fnsave
pop
sub
xchg
imulb
xor
in
in
popf
clc
push
cmp
scas
dec
jp
out
dec
xchg
xor
nop
push
jecxz
jns
xchg
adc
dec
aas
pushf
mov
aas
mov
arpl
cmp
mov
pop
mov
xor
lea
cli
pushf
cmpsl
adc
xchg
fstpt
pushf
dec
pop
pop
push
jno
add
movsb
lret
inc
jp
int
in
mov
or
cmpsb
push
aas
inc
and
loopne
jo
mov
les
add
sbb
xchg
push
lret
xor
inc
mov
or
adcb
push
push
cmp
cs
jo
push
mov
pop
call
mov
in
xchg
inc
add
sbb
mov
fldt
sub
leave
fidivl
fsub
mov
mov
nop
sub
push
in
xchg
fisttpl
scas
repz
or
icebp
out
add
xchg
fmull
bound
mov
dec
dec
dec
je
lret
mov
adc
sub
shr
ljmp
lcall
shrb
cmp
jno
pop
xor
inc
subl
mov
sbb
add
arpl
call
imulb
repnz
jg
dec
cmc
sbb
ret
int
js
shr
mov
lea
xchg
mov
jmp
stos
add
gs
dec
pop
sub
xor
and
mov
call
fadds
ljmp
dec
aam
cli
push
arpl
jo
sbb
fcoml
push
jle
cmp
jp
dec
imul
mov
push
xchg
mov
rcrb
pop
sti
mov
shrb
test
es
mov
dec
xchg
fistl
gs
cmp
movsl
lret
test
lods
mov
aad
xchg
xor
push
into
jbe
mov
lret
fcoml
arpl
mov
jmp
insl
lahf
imul
lods
push
shll
jne
das
mov
mov
pushf
mov
sub
xor
push
in
call
jp
jl
pop
inc
cli
or
push
or
les
rcpps
inc
fadds
pop
out
ret
xor
sar
js
dec
je
mov
negb
es
lock
jg
inc
repnz
and
rcll
leave
bound
into
stc
movsl
frstor
inc
pop
sbb
jl
xchg
add
repnz
dec
xchg
pop
inc
mov
push
outsl
dec
inc
stos
mov
push
fwait
xchg
cmp
test
cmp
pop
jmp
lea
cmpsl
jle
es
xlat
sbb
test
lock
xchg
scas
mov
pop
mov
sub
mov
push
gs
pop
in
fstpl
xchg
es
shrb
imul
sbb
mov
xor
mov
xor
inc
jno
das
lcall
dec
int3
xchg
fisubrs
xchg
stos
xchg
cmp
cs
loope
inc
loope
pushf
adc
repnz
ljmp
inc
pop
je
sti
add
arpl
jne
cmpb
mov
push
loopne
lock
mov
fstl
xchg
dec
inc
popf
outsl
xchg
test
icebp
lcall
push
jb
jae
push
push
xchg
and
insb
xchg
jae
inc
hlt
test
aad
loope
shll
je
int
jg
divl
mov
sub
stos
jle
popa
imul
cs
cmpsl
sbb
mov
sbb
push
push
jl
mov
sbbl
daa
in
jmp
add
into
aam
inc
lods
mov
ds
aas
jns
iret
pop
xlat
testl
bnd
xchg
inc
scas
ret
lret
mov
pop
addr16
lock
push
idivl
cmp
push
dec
inc
out
pop
outsb
jnp
push
or
mov
cwtl
jne
mov
adc
je
jo
fwait
push
mov
inc
out
lcall
daa
es
fstps
pop
cmpsl
gs
std
sub
and
cli
xlat
dec
adc
movsl
in
or
shlb
iret
stos
ret
std
mov
push
jno
mov
sub
mov
leave
cs
adc
mov
mov
dec
xchg
fs
mov
mov
lcall
fsubl
adc
adc
leave
imul
pop
pop
push
mov
fdivl
push
add
cs
lock
and
push
mov
pop
pop
lds
jns
psrad
cwtl
ljmp
jg
loopne
add
mov
fucomip
cmp
out
scas
push
xchg
lcall
imul
pop
pusha
sub
jle
push
sub
aad
and
mov
mov
xor
inc
push
neg
and
imul
pop
repz
lret
and
xorb
jge
xorl
xor
das
loope
sbbb
push
mov
cmp
mov
add
dec
nop
adc
pop
push
subl
ds
je
pop
movsl
aas
imul
jecxz
fnstcw
mov
fiaddl
adc
mov
mov
pop
mov
push
or
outsb
stc
sahf
pop
inc
fbld
dec
outsl
jmp
lods
call
jl
dec
jno
add
stc
mov
mov
repz
sub
aas
and
mov
dec
jmp
cmp
push
push
sbb
inc
sbb
sarl
jmp
test
cmpsb
cltd
xchg
push
sub
sub
jle
jmp
and
leave
rorb
push
dec
daa
xacquire
pop
push
sub
ja
jmp
es
fimull
dec
jb
xor
jge
sub
add
outsb
loopne
adc
jnp
xor
imul
jl
push
lret
data16
js
in
push
push
data16
daa
push
push
pop
cmp
decl
pop
and
or
sub
pop
cmpsl
and
push
loope
cmc
sbb
or
sub
loop
mov
cmp
enter
mov
cltd
jl
sbb
jno
push
fidivl
sbb
adc
push
out
or
roll
in
call
jge
mov
mov
push
testl
das
repz
repnz
fs
lods
mov
cmpl
sbb
cld
sbb
frndint
insb
fucomi
stos
testb
push
rol
mov
jmp
popa
jle
mov
pop
mov
or
shrb
mov
adc
iret
es
pop
lods
in
dec
test
jns
ss
lcall
push
pop
test
in
lahf
adcb
ret
sub
fnstenv
xchg
mov
movq
jl
orb
negl
add
aam
jae
push
inc
je
xchg
fwait
pop
lret
jecxz
pusha
jbe
shrl
sbb
and
mov
lret
adc
and
sub
sti
xchg
inc
scas
repnz
adc
repz
cli
adc
imul
lock
loop
xlat
lds
xorl
ror
fwait
cmp
cmpsb
fs
sti
shlb
scas
daa
sbbl
ss
jae
dec
sub
mov
xlat
jns
andb
ret
jnp
or
jmp
in
add
mov
inc
push
or
popf
or
mov
jecxz
les
cmp
sbb
imul
sbbb
ja
mov
mov
movsl
mov
inc
jl
imul
cmp
out
sub
mov
add
jb
push
iret
mov
js
sub
incl
pop
inc
dec
cmp
mov
xor
cmp
mov
cmp
sbb
loope
xchg
icebp
lret
jnp
data16
xchg
lret
aam
xor
xchg
and
mov
adc
mov
push
jae
fs
pushf
out
lods
into
mov
in
lret
dec
jmp
test
xor
mov
adc
test
es
imul
sbb
repz
clc
jecxz
xor
mov
or
push
ljmp
cmpb
push
arpl
test
leave
dec
pop
arpl
mov
push
push
es
popf
push
xchg
call
rcll
add
cmp
mov
ds
sbb
fists
clc
ret
or
push
popf
leave
rcrb
sub
leave
dec
out
das
pop
pop
cmc
inc
outsb
jbe
and
inc
mov
cwtl
imul
fcomp
xor
dec
bound
lods
test
mov
dec
testl
test
test
and
push
lock
fimuls
rcll
ret
pop
loop
shll
stos
fstpt
and
add
fnstsw
mov
call
dec
clc
sti
and
mov
cmpsb
adc
int3
and
mov
jle
arpl
mov
das
test
jmp
lret
in
jge
popa
ss
sub
in
repnz
cmp
sbb
rorb
adc
xchg
cltd
jg
addl
out
loop
jge
stos
js
rcll
test
mov
lods
xlat
inc
sbb
pop
push
pop
mov
fdivl
dec
xchg
mov
int3
cmp
cli
jecxz
out
dec
push
mov
add
pop
pop
adc
dec
in
push
jecxz
ds
mov
clc
mov
mov
push
or
je
dec
hlt
xor
outsl
dec
in
pushl
push
cwtl
push
mov
fwait
out
outsl
adcl
or
mov
jns
dec
or
nop
xchg
xor
addb
icebp
mov
jb
testl
orl
mov
pop
bswap
cli
in
push
mov
sub
xor
shll
fucomi
mov
pushf
hlt
cmp
dec
xchg
xor
stc
pop
push
xlat
push
inc
scas
gs
mov
test
and
mov
fcoml
cmpsl
mov
bound
clc
mov
outsb
xor
int3
ret
aam
je
scas
fmuls
clc
ljmp
jae
shll
jnp
jo
inc
mov
or
push
lret
push
into
pop
dec
lahf
xchg
add
xchg
dec
test
orb
and
cmp
and
lock
adc
pop
pop
sahf
js
loopne
cmpsl
rorl
cmp
add
mov
pop
mov
mov
test
sub
pusha
loop
lret
add
sub
in
lock
test
jnp
sub
xchg
stos
and
test
pop
cmp
enter
jmp
mov
mov
stos
gs
mov
repz
aad
inc
pop
arpl
pop
mov
fbstp
repz
or
and
push
sbb
mov
or
ret
add
sbb
enter
leave
or
mov
mov
stc
insl
lds
mov
jg
int
inc
test
sub
es
dec
gs
and
ja
mov
jp
cmp
das
push
ror
xchg
jmp
rcrl
add
fsubs
dec
cltd
aaa
lea
ja
push
sbb
mov
popa
cmp
sahf
mov
push
scas
in
jb
mov
cli
aad
xor
leave
push
jmp
ret
popa
and
jg
fdivrp
in
xchg
mov
mov
ret
jne
pop
out
movsb
pop
inc
xchg
add
jo
and
cld
pushf
jae
push
stos
leave
scas
cmp
aad
adc
xor
adc
lret
adc
dec
mov
stos
cmc
pop
push
aas
fmuls
fisubrl
movsl
addl
lahf
cmp
mov
sbb
mov
outsl
loopne
roll
dec
mov
pop
jo
inc
mov
pop
mov
stos
push
jg
hlt
push
push
scas
pop
jmp
pop
sar
dec
mov
out
out
test
ja
add
push
mov
jmp
daa
iret
pop
mov
mov
and
mov
in
ja
push
and
fildl
pop
mov
push
movsl
cltd
pop
icebp
pop
ja
inc
pop
inc
lcall
xchg
dec
in
ja
int
test
inc
lcall
fistl
xchg
fwait
rcr
push
xchg
idivb
jmp
mov
mov
mov
hlt
and
fsubl
adc
lods
mov
adc
and
aaa
jo
testl
push
jae
push
push
inc
mov
test
dec
clc
call
adc
lods
test
push
popf
loope
mov
push
sub
je
ds
push
adc
xchg
lods
shll
lock
xchg
rorb
xchg
inc
lahf
push
es
push
jns
pop
into
lret
mov
push
and
pop
sub
das
sbb
dec
add
mov
or
xlat
dec
cmp
or
fcmovnb
xchg
test
pop
scas
in
into
sub
mov
mov
fadd
adc
pop
or
mov
and
rcll
mov
dec
xor
jns
shl
fadd
out
addr16
idivl
cmp
dec
pusha
aas
lea
ds
inc
dec
sub
add
lods
dec
dec
pushf
in
pop
dec
lds
call
aaa
je
les
lea
std
int3
push
adc
sbb
and
sub
xchg
sarb
into
fwait
sti
jae,pn
std
out
add
popf
xor
test
adc
mov
pop
insb
in
pop
filds
aaa
mov
sub
sub
dec
daa
fistpll
in
push
cmc
and
outsb
add
sub
aas
jp
mov
mov
int3
cmc
mov
push
fxch
dec
jo
pushf
xchg
mov
loop
sub
cmp
idivb
xor
xor
popf
sub
xor
dec
mov
cmpsl
adc
xchg
mov
ret
ja
adc
lea
jp
mov
mov
lret
add
jb
out
or
xchg
pop
sub
imul
xchg
adc
iret
repz
jecxz
enter
into
pop
push
or
pusha
mov
bound
push
mov
mov
pop
inc
int3
aam
sub
adc
sahf
out
rcrb
icebp
jnp
lods
into
mov
es
notb
mov
cltd
scas
sti
into
leave
push
hlt
fstpl
fmull
rolb
push
es
sub
icebp
adc
movsb
ret
push
clc
shlb
out
dec
mov
dec
sbb
shlb
pop
adc
push
fidivs
fidivrl
sti
shrb
push
shrb
xor
loopne
sbb
sbb
mov
adcb
dec
lods
xor
inc
dec
jo
push
inc
outsb
aaa
fwait
js
lret
add
sbbl
ja
cmpsb
mov
cmp
vpcomw
gs
jp
lods
test
rcl
es
jnp
outsb
cmp
push
xchg
and
aad
pop
lcall
sbb
xchg
fcom
push
or
add
scas
sbb
and
push
sub
xor
xchg
adc
repz
data16
ja
mov
sar
mov
inc
or
push
xchg
rcrb
fistl
loop
out
test
test
pushl
inc
mov
and
inc
cli
sub
pop
fistpl
fmuls
xchg
imul
arpl
je
mov
push
sub
pusha
les
lock
test
push
adc
pop
fwait
mov
add
jo
inc
adc
adc
push
adc
ror
les
int
outsb
inc
pop
les
jge
or
scas
sub
jge
lret
ficoml
hlt
xor
in
ficomps
call
xor
mov
jo
add
nop
insb
mov
dec
pop
add
mov
lahf
subl
jb
mov
add
dec
xchg
adc
sti
hlt
pop
and
mov
insl
mov
mov
std
sub
cmpsb
inc
bound
in
xor
sub
int
fs
icebp
sbb
cmp
pavgw
test
lahf
inc
lret
loop
cmp
pop
aaa
add
subl
int
into
cmp
cmc
xor
adc
rcrb
xchg
xchg
jecxz
xor
aam
dec
inc
imul
es
adc
fistpll
int
leave
scas
mov
les
rcrb
mov
jle
and
cmp
test
pop
cs
add
test
aam
push
or
int
mov
outsb
aaa
cmpsl
cld
xor
rorb
xchg
pop
or
inc
sahf
lcall
xchg
outsb
mov
pop
lods
inc
pushf
in
xchg
jno
inc
in
jae
or
dec
fnstcw
pushf
mov
sbb
add
pop
xchg
test
jbe
inc
mov
leave
cltd
in
insl
test
data16
jae
push
lea
jmp
insl
gs
and
jnp
jns
inc
loop
xchg
mov
add
outsl
in
jl
dec
insb
dec
xor
aam
pop
cmp
push
fldenv
xchg
das
mov
insl
lds
ret
and
adc
pop
sbb
push
jle
and
sbb
mov
and
push
push
push
sbb
mov
xchg
lcall
outsl
sbb
add
jns
repz
hlt
xchg
out
loope
int
nop
jns
cmpsl
xor
jb
dec
xchg
addr16
xlat
rclb
add
in
jmp
mov
or
stos
xor
lods
jno
xchg
dec
sub
shll
jl
adc
add
add
sbb
xchg
lods
add
mov
xlat
mov
adc
cmp
or
xor
adc
inc
xchg
jne
dec
ficoml
mov
pop
addr16
push
push
sbb
fwait
jnp
test
inc
jno
lea
and
push
fwait
pop
lods
or
mov
inc
inc
mov
lods
inc
iret
pop
mov
add
add
shlb
pushf
pop
sbb
mov
hlt
push
mov
stos
add
dec
and
dec
xor
sub
cli
push
dec
xor
filds
popa
dec
cmp
adc
dec
jbe
filds
mov
adc
sbb
addr16
js
dec
cmp
xor
mov
or
mov
push
push
push
jnp
fstl
cmc
jne
mov
jbe
outsl
sub
xor
movsb
jae
cmpsb
test
xor
mov
mov
inc
loopne
popf
mov
popf
movsl
lock
fidivrl
or
inc
pop
in
or
jge
cmp
push
out
adc
mov
dec
shr
hlt
xchg
mov
mov
testl
nop
imul
xchg
mov
jp
xchg
cmp
and
adc
mov
mov
or
stos
lcall
sahf
jb
jbe
mov
lcall
fldln2
insl
adc
push
push
sub
mov
cmc
inc
jno
aas
push
stos
jecxz
add
jae
lods
adc
dec
xor
pop
xchg
pushf
cwtl
movsb
test
cmp
xlat
enter
push
push
push
and
bound
xchg
out
adc
repnz
test
add
inc
lds
lret
rcll
and
or
dec
inc
cmp
jo
jnp
dec
cmpb
xchg
out
jns
sti
cmpsb
push
xor
xor
inc
jnp
push
sbb
jp
cltd
addr16
fisubs
scas
jo
sub
clc
xor
mov
and
adc
or
push
stc
dec
sub
xchg
jmp
out
outsb
mov
enter
adc
sub
sub
or
repnz
jne
fiadds
icebp
aad
dec
pop
pop
or
fisttpll
shrb
or
ret
bound
repnz
cmpsl
jp
dec
pop
cld
pushl
repnz
push
into
iret
add
loope
add
mov
mov
test
pop
sti
sub
or
push
jmp
dec
std
inc
out
shrb
test
lret
inc
jmp
lea
fisubl
pop
test
in
test
lahf
mov
pop
or
xchg
and
jge
lods
outsl
and
mov
sbb
loope
cmp
pop
int3
dec
mov
ss
stos
lock
sub
xchg
outsl
or
inc
and
adc
or
add
ja
mov
xchg
add
mov
pop
lods
test
xor
cmpl
push
aaa
fsubrp
sbb
cmp
scas
mov
inc
xor
out
jp
cmc
insb
mov
mov
lods
nop
push
ret
xor
dec
enter
xchg
test
test
lcall
lahf
push
jb
aam
lahf
xor
fdivl
out
mov
jne
icebp
shll
imul
aaa
pop
mov
pop
mov
push
sbb
mov
dec
mov
jge
ss
cmp
gs
paddd
out
and
ja
sti
jae
fistps
jbe
push
jbe
cmc
pushf
jmp
add
mov
movsl
mov
popa
cmp
out
jg
orl
xchg
sbb
or
or
sbb
dec
and
pop
pop
fs
cmp
xor
arpl
fstl
mov
das
mov
xchg
adc
pop
leave
jge
xor
adcb
in
imul
xor
sti
cmp
daa
cmc
out
popf
jns
push
dec
mov
scas
cld
cmc
ja
jae
adc
sub
enter
aaa
outsl
jno
repz
xchg
ret
lds
dec
stc
xorb
dec
imul
sti
out
cld
test
leave
sub
jle
adc
sub
mov
xchg
lahf
popa
imul
ds
xor
add
cmp
and
iret
in
lcall
cmp
data16
jecxz
insl
add
lock
cmp
push
stc
xor
inc
int3
stos
xor
shl
xor
cmp
dec
in
jecxz
adc
lea
loop
mov
push
cwtl
jmp
xor
pusha
fsubr
pop
rcrb
nop
push
cwtl
mov
mov
dec
shlb
mov
mov
sub
jl
test
int
or
test
add
mov
es
mov
movsb
pop
xchg
jbe
fwait
or
fwait
jb
inc
shlb
dec
aas
add
xlat
jmp
and
or
aam
popf
add
push
jp
mov
mov
fnsave
sbb
dec
dec
fcoms
push
or
jno
cltd
sti
rcll
inc
or
xchg
loop
out
jno
outsl
pop
xlat
jb
int3
fiadds
cmovb
xchg
xchg
and
loopne
mov
out
pushf
dec
or
pop
insb
shlb
mov
mov
xor
sarl
add
cwtl
pop
sub
fmul
lods
cmovnp
ljmp
and
pop
push
out
pop
jno
ret
insb
mov
adc
adc
daa
repz
ret
daa
mov
adc
mov
imul
xor
inc
mov
sbbl
movsb
add
jns
push
icebp
loop
lret
clc
dec
loope
sti
add
cli
xor
lahf
testl
cs
es
mov
adc
or
popa
xor
dec
sbb
pop
sbb
enter
sbb
test
xor
mov
pop
adc
mov
and
mov
into
ror
imul
das
xor
jno
xchg
and
sbb
fwait
adc
adc
nop
es
out
xchg
jle
lret
pop
mov
mov
push
push
bound
lock
test
std
cld
lcall
mov
pop
mov
aad
mov
test
jg
adc
xor
or
mov
pop
adc
pop
mov
xchg
pop
push
orl
loopne
inc
mov
pusha
in
dec
dec
add
jmp
and
scas
sub
test
ja
jb
leave
lea
mull
pop
mov
pop
aaa
addr16
fs
add
sahf
dec
mov
rorb
cli
bound
into
cli
cld
fmull
push
push
lret
xchg
pop
and
notl
mov
push
out
popa
mov
pop
or
push
ja
or
jecxz
test
arpl
dec
es
lcall
mov
xchg
jecxz
adc
lret
iret
jae
fimuls
push
xlat
mov
xor
pop
xor
sub
shlb
xchg
jo
pop
sbb
sub
rolb
cltd
mov
xlat
dec
and
xor
jmp
aad
xchg
sbb
clc
mov
and
push
cmpsb
cli
es
cmc
and
shlb
lea
or
sbb
xchg
dec
jg
push
or
dec
arpl
int
jnp
adc
add
imul
add
jl
mov
add
adc
mov
adc
nop
clc
rorl
sub
xchg
rol
jno
mov
dec
push
mov
outsl
clc
fwait
sbb
sub
movsb
add
aad
rcll
lahf
loop
xor
sbb
jge
pop
aam
pop
sarl
cmp
jne
jg
test
cmp
pop
cmp
repnz
or
adc
popf
xchg
pop
jb
and
mov
rcll
push
mov
mov
push
mov
lods
arpl
enter
push
nop
push
mov
pop
bound
xor
cwtl
xchg
jns
mov
pop
lret
les
cmc
sub
mov
mov
jle
sarb
orl
cmp
das
adc
lret
sub
mov
xor
repnz
cmp
mulb
fs
mov
cmp
mov
lret
rol
mov
clc
cs
leave
loope
es
inc
inc
jnp
mov
add
xor
sub
sub
insl
sbb
jae
sbb
mov
shll
test
push
scas
stos
mov
push
jmp
bound
test
aas
test
push
and
pushf
in
test
mov
mov
iret
dec
sbb
xchg
pop
mov
lret
mov
dec
fcoms
jge
pop
mov
leave
inc
dec
xor
or
inc
adc
pop
mov
or
mov
pop
xchg
pushf
pop
ss
ret
dec
rolb
xlat
aad
fdivl
push
xchg
xor
mov
loop
mov
inc
ljmp
sbb
xchg
cmp
imul
mov
lds
push
not
ret
adc
hlt
dec
cs
ds
sub
out
lea
pop
inc
shll
jns
dec
call
jecxz
sub
sti
cmpsl
mov
call
and
jge,pn
outsb
roll
jo
push
test
and
inc
iret
mov
sbb
add
mov
pop
mov
dec
cmpsl
pop
adc
ror
pcmpgtd
aas
adc
adc
jl
xchg
sbb
pop
hlt
pop
into
push
dec
stc
push
testb
fcoms
enter
insl
pop
mov
inc
xchg
rcrl
sub
rorl
inc
and
mov
add
cld
jg
negl
dec
cmp
jae
fisttpl
mov
inc
outsb
xchg
mov
repnz
cmp
jge
jnp
jp
test
js
outsb
fisttpl
push
xor
xchg
add
sub
pop
inc
enter
insb
adc
stc
inc
in
stos
add
jmp
or
leave
jmp
cmp
aaa
jmp
icebp
mov
inc
fidivl
add
xchg
xor
jmp
xchg
inc
cs
add
sub
mov
mov
mov
sub
mov
push
js
jne
pop
popl
mov
stos
les
mov
mov
call
insl
pop
xchg
stos
jp
xchg
adc
or
lea
mov
int3
nop
lds
xchg
sbb
scas
dec
mov
roll
rcrb
je
call
imul
mov
xchg
pop
adc
test
repnz
cli
out
popa
mov
mov
pop
and
mov
test
sub
or
clc
imul
lret
cltd
push
das
sysexit
test
es
mov
movsb
les
sub
add
sahf
arpl
jle
sub
mov
loopne
pop
int3
add
cwtl
ss
out
sub
xor
lods
xchg
movsl
pop
dec
test
lea
jmp
in
insb
ret
test
dec
mov
push
adc
dec
nop
fstpt
add
out
jne
rorb
jae
mov
hlt
repnz
cmp
scas
push
subl
jmp
sbb
mov
insb
or
add
or
in
dec
cmc
mov
insb
je
pop
das
movsb
add
sahf
and
movsl
pop
sub
es
or
stc
jl
adc
inc
mov
sub
or
mov
lea
jmp
arpl
aas
daa
pop
add
xchg
mov
push
je
incl
push
jl
and
leave
cmp
jno
jmp
and
xchg
shr
aaa
adc
into
cwtl
movl
fmull
test
andl
ficompl
push
imul
mov
fwait
std
movsb
stc
jg
xchg
lods
or
adc
movl
pop
std
cmpsb
dec
mov
push
mov
test
idivl
sub
cmp
or
jp
add
orb
cmp
out
mov
xchg
xor
mov
cwtl
pusha
ds
push
fistpl
dec
cmp
fsubs
mov
cmpb
jnp
lcall
mov
insl
cmp
mov
sbb
fbstp
mov
pusha
sbb
in
mov
out
ret
lahf
pop
test
ret
ficompl
mov
andb
lock
ret
pushl
pop
and
mov
fidivrs
cltd
lahf
jbe
ret
insl
cwtl
xor
adc
xchg
fs
adc
fldl
int3
jp
lea
fs
pop
mov
push
mov
inc
shl
or
or
xchg
mov
mov
cmpsl
inc
das
idivl
sbb
push
hlt
adc
sub
and
stos
inc
insb
sub
inc
fisubrl
cwtl
sbb
bound
inc
mov
shlb
ljmp
push
mov
xchg
out
cmpsb
sbb
popf
adc
faddl
mov
call
cli
sbb
mov
mov
xor
scas
push
fsubrs
arpl
inc
sbb
sub
jns
dec
aad
pop
jnp
cmpsb
cmpsb
mov
ja
xlat
sbb
mov
sub
push
loop
cmp
aad
pop
or
in
push
sbb
and
mov
aaa
mov
or
rcr
stos
xchg
mov
or
imul
scas
and
cwtl
inc
push
and
cmp
cmp
fiadds
sub
push
cmp
pop
in
mov
pop
push
push
mov
and
push
ljmp
je
ret
dec
mov
or
add
lret
push
nop
inc
push
je
sub
mov
in
xchg
cmc
jnp
mov
xlat
int
xor
and
jp
imulb
imul
jae
mov
repz
mov
icebp
push
add
mov
imul
mov
mov
mov
das
push
and
xchg
fisubrs
fdivrl
mov
aad
add
enter
sbb
iret
jns
ljmp
jg
lods
ret
xchg
inc
fbstp
lds
fisubrs
imul
xchg
or
jno
push
fbld
xchg
xchg
jo
xchg
pop
adc
push
pushf
stos
pop
nop
nop
pop
dec
mov
arpl
pop
pop
adc
or
mov
sub
mov
mov
movsb
out
add
out
push
icebp
ret
jle
fdivr
jbe
xchg
shrb
or
test
fistl
mov
mov
mov
fimuls
rep
push
loopne
sti
mov
popa
dec
pushf
dec
pop
daa
mov
pop
sbb
mov
icebp
pusha
cli
pop
mov
pop
xchg
xchg
popf
pop
lcall
fcoml
jnp
repz
or
call
jecxz
mov
mov
add
call
adc
adc
jno
inc
ja
aad
sbbb
test
mov
mov
enter
mov
pop
push
int
xor
xor
mov
sbb
mull
and
and
dec
mov
popf
mov
cwtl
add
imull
js
or
rol
idivl
inc
cli
push
in
lahf
pop
pop
iret
cmpsl
sub
sbb
je
mov
ret
fcomp
push
xchg
pop
mov
dec
in
jbe
bound
or
add
jae
adc
and
lret
pushf
or
jecxz
in
inc
push
fadds
sub
lcall
clc
mov
push
inc
scas
push
inc
sbb
sbb
ljmp
loop
mov
jo
cmp
xor
dec
je
into
xchg
out
jbe
iret
into
cmpb
and
jg
mov
test
xchg
test
icebp
xor
dec
je
jae
ficoms
mov
cmp
sbb
flds
das
sub
xchg
add
clc
movsb
push
rorb
inc
popf
stos
ja
add
mov
std
mov
ret
fsubrl
or
fiaddl
out
shl
pop
fldenv
sbb
jns
icebp
into
jecxz
fucomip
arpl
imul
sahf
or
je
ljmp
stc
xchg
stos
jp
pop
dec
jmp
lret
popf
add
jle
arpl
xor
push
les
inc
add
dec
test
and
lahf
test
adc
inc
pop
jge
mov
xchg
ret
mov
popf
and
push
clc
lea
mov
jl
pop
cmp
mov
bound
mov
in
cmc
icebp
xchg
inc
mov
and
in
push
mov
fcoms
xchg
idivl
push
inc
jne
xor
add
add
out
inc
mov
mov
adc
outsb
sbb
push
adc
sbb
lds
or
pop
dec
cwtl
jns
aas
cmp
addr16
dec
add
jo
es
stos
pop
adc
lds
sbb
enter
or
lret
jmp
mov
mov
cmpsl
mov
add
fdivs
or
jmp
xchg
or
xchg
jp
adc
cmp
dec
iret
stos
outsb
mov
dec
int3
sbb
arpl
inc
arpl
cmp
jmp
or
inc
dec
jae
pop
shll
and
mov
adc
lods
jmp
jg
inc
mov
cmpsl
idivl
addl
sti
mov
jb
xchg
xchg
pop
jno
adc
popf
sarb
adc
pushf
mov
pop
roll
sbb
sahf
cmp
popa
inc
bnd
int3
adc
loopne
sbb
pop
mov
and
das
loope
jmp
push
mov
sti
ljmp
add
pop
outsl
cmpl
andb
mov
mov
dec
daa
jl
test
mov
lods
adc
xchg
push
cmp
xchg
icebp
jae
mov
or
or
test
sub
xlat
add
test
push
test
jno
xor
dec
xchg
in
cmp
imul
add
in
fcompp
int
xor
push
ret
sub
ror
push
jo
jge
stc
mov
stos
imul
or
fs
fdiv
push
imul
jg
add
dec
inc
sti
cmc
adc
dec
mov
test
jns
push
cmc
addl
out
xor
shlb
jl
xchg
mov
mov
mov
xor
sub
dec
addl
sti
sub
inc
and
dec
repz
dec
ret
mov
jmp
push
mov
shl
mov
sub
dec
pop
fwait
xor
xabort
cmc
mov
scas
addr16
test
xchg
loopne
sbb
sbb
jmp
xchg
or
xor
xor
inc
or
cld
ret
push
cmpsb
lahf
jbe
cmpl
out
mov
mov
mov
jle
pop
sbb
aam
sbb
and
adc
mov
nop
add
popa
dec
imul
push
xchg
cs
adc
mov
les
xchg
sub
mov
cmp
push
cld
and
out
pop
jne
push
imul
cmp
add
or
aas
dec
movsb
and
outsl
outsl
cld
fisubl
pop
jb
aaa
stos
jae
test
mul
sysenter
xchg
test
add
push
out
pusha
mov
cmp
movb
sbb
inc
jne
sbb
popa
testb
test
insb
xchg
test
lds
test
insb
cmp
adc
jb
sbb
xor
push
sub
mov
orl
mov
outsl
fsubrs
arpl
jae
xor
mov
xchg
lahf
es
pop
add
fisubrl
push
mov
adc
and
and
iret
aas
mov
fbld
push
push
adc
sbb
add
rorb
adc
repz
lock
movsb
pop
out
cltd
sbb
push
ljmp
mov
out
mov
mov
movsb
rclb
cmp
mov
stc
scas
test
add
fadds
sarb
xor
cli
ss
dec
nop
repnz
add
pop
dec
repz
pop
jp
ud1
pop
mov
sbb
outsl
mov
scas
xor
cwtl
cmpsl
clc
pushf
cmc
in
ja
mov
adc
cmpsb
imul
mov
ljmp
lahf
loopne
add
out
cmpsl
test
or
adc
outsb
lock
out
lcall
add
fcom
jl
cs
push
or
push
mov
fnstcw
xor
add
or
stos
scas
in
fmul
add
mov
adc
test
fdivrs
fisubrs
and
and
mov
popa
loop
xchg
idivl
sbb
std
adcb
add
push
ret
xor
add
mov
sti
pop
unpcklps
jmp
ja
xor
jbe
out
xor
sti
mov
fdivs
insl
sub
pop
test
out
aad
add
jecxz
shll
ja
mov
icebp
cmp
mov
xchg
sub
pcmpgtd
jno
cmpb
subb
add
insl
push
push
cmpb
ja
ds
and
out
push
shl
js
fadd
mov
shl
aaa
cld
inc
xor
int3
fstpl
mov
mov
sbb
mov
adcb
push
je
jno
in
fildl
out
jbe
mov
stos
fwait
jnp
add
dec
jge
sub
test
cmp
push
or
dec
ljmp
and
xor
mov
jae
rolb
aaa
fildll
inc
aad
test
xor
aad
cli
dec
pop
jns
sar
outsb
add
pop
repnz
mov
arpl
adc
ret
cld
mov
shr
lock
inc
rolb
lods
insb
cld
mov
xor
mov
pop
dec
mov
out
subb
push
jbe
mov
xchg
call
leave
loopne
fisttps
rcrb
sub
mov
sbb
lret
pop
pop
bound
outsl
xchg
shrb
pop
xchg
dec
xchg
shlb
js
sub
mov
out
ret
jmp
dec
js
mov
pop
xor
xor
aad
dec
and
je
pop
out
in
adc
cmp
jg
adc
cmpl
and
stc
mov
push
adc
jnp
cli
out
icebp
loop
sub
clc
cltd
fimuls
sahf
popf
sub
imul
loopne
mov
jb
sti
mov
cmp
rorb
cli
hlt
fcmovnb
add
in
daa
ret
mov
inc
stos
sbb
shl
or
mov
movsl
clc
movsb
je
scas
les
lds
daa
hlt
xor
cltd
mov
mov
sbb
xor
cmp
popf
xchg
cmp
ja
add
inc
cmpsl
into
lcall
pop
sub
lea
mov
push
in
icebp
popw
cmp
inc
mov
push
dec
iret
leave
or
aaa
out
mov
imul
pop
je
ss
dec
pop
pop
lods
cmp
mov
icebp
fwait
cs
sub
add
int3
scas
cmp
aas
insl
xor
mov
jg
and
imul
mov
popa
in
jge
jo
mov
outsb
out
inc
in
mov
and
cmp
ficoml
sub
aaa
xchg
int
pop
jge
or
rolb
mov
test
and
repnz
pop
pop
test
stc
nop
pop
dec
insl
sbb
xchg
xchg
stos
fistpll
cmp
enter
ret
fwait
arpl
xchg
pusha
and
mov
test
pop
cmp
mov
stos
lret
mov
je
movsb
call
in
xchg
push
cltd
ret
mov
add
xchg
jno
scas
jle
shrb
adc
cmpsl
int3
pop
mov
add
pop
loop
or
lcall
inc
in
clc
mov
cmp
jp
mov
sahf
push
xchg
inc
mov
push
jo
outsl
inc
adc
iret
mov
fsubrl
ret
addr16
or
jae
shl
dec
inc
push
in
jno
and
mov
and
bound
xchg
out
mov
or
push
xchg
add
adc
jne
shrl
add
sbb
pop
and
ss
pop
pushf
jmp
push
loopne
xor
subl
in
mov
test
pop
scas
sub
xchg
iret
fisttpll
mov
dec
jno
js
nop
push
or
xor
popf
mov
mov
mov
dec
mov
sbb
add
insb
cmp
add
int3
faddl
pop
enter
out
sbb
jle
push
jl
xchg
and
dec
outsb
hlt
sahf
dec
xchg
decb
and
push
adc
push
push
cmp
out
bound
cld
cmpsl
gs
daa
mov
insl
jns,pn
ret
lods
sbb
jecxz
loope
lea
cmp
and
sbb
xor
xor
push
aam
rcll
popf
sarl
test
sbb
pusha
iret
mov
jno
xor
testb
mov
mov
cli
xor
and
adc
lahf
sbb
fisubs
xor
inc
ret
aam
jnp
add
out
push
fmull
or
jg
out
dec
hlt
pusha
or
les
and
xchg
pop
aaa
roll
xchg
cmp
mov
imul
aad
mov
push
mov
dec
cmc
pop
sub
add
popa
mov
push
mov
xchg
push
pushf
fnstcw
sbb
xchg
nop
test
stc
xchg
enter
addr16
mov
cmp
out
sub
shlb
pop
mov
push
out
loope
jnp
dec
inc
xor
pop
or
insl
bound
jg
mov
sahf
pop
jle
js
iret
inc
rolb
inc
cmp
bound
sbb
mov
scas
les
sbb
jmp
cmp
inc
jae
in
mov
enter
test
pop
mov
sbb
jae
fisubrl
sub
stos
icebp
sub
ret
repz
or
cmp
subb
in
jl
sub
or
sub
fstpt
ret
idiv
sbb
xor
decb
push
fcmovu
sub
add
dec
je
stos
lea
addr16
aad
cmp
xchg
or
xchg
fldt
xor
sbbb
add
mov
dec
enter
pop
inc
xchg
pusha
nop
dec
jbe
ljmp
sub
in
insl
inc
adc
mul
sub
sbb
xorb
mov
mov
movsb
repnz
mov
nop
xchg
out
test
cltd
adc
js
pushf
xchg
lods
leave
aad
shl
jmp
inc
jmp
fistpl
rcrl
int3
and
into
arpl
in
sub
mov
xor
xchg
hlt
icebp
addr16
mov
movsb
inc
pop
mov
cmp
mov
and
sub
dec
test
dec
sub
sahf
inc
je
bound
mov
cmp
popa
or
jb
insl
sub
outsl
add
jp
jno
daa
or
sbb
sarl
js
clc
mov
test
inc
insl
xor
sbb
jg
aad
test
cmpsl
or
sbbb
stos
out
repz
int3
jl
sbb
adcb
leave
je
push
push
push
jns
xchg
lds
push
pop
cmpsl
repnz
jg
repz
das
sub
fdivs
test
cltd
cmpsl
pop
inc
repnz
andb
fcoms
sarl
xor
mov
xorl
orb
adc
sub
dec
popf
sub
add
inc
xchg
pop
rcll
fisttpl
push
or
and
push
mov
gs
xlat
pusha
pop
clc
push
enter
dec
scas
std
mov
sub
stc
push
mov
test
pop
js
xchg
and
jecxz
int
je
add
xor
mov
jns
cltd
mov
hlt
xor
scas
into
dec
push
lret
int
mov
test
repz
add
xchg
jae
das
in
mov
es
jns
push
mov
xchg
xor
jae
dec
bnd
in
mov
push
rolb
bound
or
std
in
ret
xchg
jge
fstps
and
pop
sub
xchg
nop
sub
xor
or
sahf
shl
gs
inc
pop
outsl
cld
stos
xchg
in
cli
arpl
int3
insl
std
repnz
sbb
stc
dec
mov
mov
jns
in
add
cmpsl
imul
aaa
push
aas
nop
xchg
popf
push
dec
dec
fwait
xchg
xchg
xor
int
mov
loop
nop
lret
jae
jb
pop
sbb
cmp
mov
jns
arpl
cli
jno
dec
xchg
imul
fst
adc
sbb
jmp
adc
xchg
mov
jne
pop
sbb
jns
or
in
xor
sub
cmc
push
cli
insb
xchg
xor
push
inc
mov
int
stos
mov
shl
mov
icebp
mov
cld
leave
lret
data16
add
xlat
push
and
mov
push
mov
add
xor
jmp
nop
mov
js
inc
cld
dec
mov
inc
sub
mov
xchg
mov
fsubrs
repz
ss
mov
mov
movsl
mov
lret
sub
xchg
sbb
fstpl
ja
mov
add
mov
filds
insb
xchg
mov
or
leave
inc
xor
jno
mov
mov
nop
repz
ret
lds
inc
popa
cmpsb
mov
out
cmp
ficompl
cmp
mov
pop
mov
sbb
icebp
inc
idiv
shrl
dec
aaa
scas
lds
ljmp
addr16
and
xchg
cmp
in
and
xchg
jo
scas
cmpb
cwtl
adc
dec
shrb
and
mov
hlt
xchg
out
mov
xor
movsb
movsb
mov
push
test
xor
imul
repz
mov
addr16
jmp
mov
push
cmpsb
mov
fdivl
dec
nop
addr16
adc
mov
scas
je
push
sbb
pop
in
adc
mov
mov
xchg
mov
xlat
jne
daa
fiadds
les
mov
fcomps
sub
andl
jg
pusha
daa
push
jnp
mov
pop
inc
filds
cwtl
push
add
inc
push
ja
test
rep
push
cmp
test
fs
pop
push
push
clc
and
mov
cld
fs
push
dec
pushf
add
mov
insb
adc
xchg
sub
stc
dec
push
xchg
pop
push
mov
imul
in
adc
push
pop
aaa
push
int3
scas
jnp
mov
out
jmp
repnz
fwait
bound
idivb
lea
frstor
or
add
sbb
popf
fisubrl
jmp
mov
movsl
push
xchg
cmp
pop
pop
dec
les
xchg
mov
out
loopne
cld
loop
mov
adc
into
dec
sub
mov
test
addr16
inc
dec
cli
cmp
cmp
in
or
sbb
es
mov
jns
ret
add
sbb
add
and
or
call
add
xchg
test
popf
mov
and
push
or
mov
mov
mov
jno
cld
inc
in
lods
pop
xor
mov
adc
push
popa
aad
js
pop
fistl
bound
sub
sbb
aad
orl
adc
add
adc
scas
inc
cmp
nop
adc
add
xor
mov
push
push
mov
call
xchg
cs
jge
sub
xchg
test
or
gs
outsl
mov
and
mov
cmp
ds
push
jge
fwait
jnp
push
mov
xor
inc
mov
rcrb
fstps
sahf
ds
hlt
push
pop
inc
pop
sub
xor
add
inc
or
outsl
push
mov
add
rcr
repz
sub
adc
enter
out
pop
or
les
push
iret
movsl
mov
insb
mov
fcompl
imul
cltd
add
and
mov
fidivl
xchg
ss
call
outsb
les
jo
and
adc
pop
add
sbb
inc
lds
ret
add
sbb
cmpsb
pusha
push
sbb
and
mov
lock
mov
andl
mov
mov
std
fs
rcrl
je
push
mov
scas
or
sub
outsl
pop
cwtl
push
std
xlat
jl
xor
cli
in
call
and
mov
add
leave
mov
lds
dec
push
or
and
mov
xchg
imull
test
jp
hlt
in
in
cwtl
adc
pop
inc
sbb
adc
rcr
inc
xor
xchg
sbb
jnp
ror
call
scas
out
xor
mov
jbe
shr
dec
sahf
cmp
xchg
rcrl
sti
shrb
pusha
adc
test
inc
mov
add
divl
into
mov
xchg
shlb
cld
mul
popa
dec
inc
xor
aas
mov
push
aad
fwait
xor
notb
mov
push
jns
pop
inc
stos
shll
cld
mov
cmp
lcall
jmp
or
or
sub
les
mov
cmp
xchg
jge
mov
mov
ja
fsub
addl
fimull
push
xor
mov
and
inc
lods
test
into
xchg
mov
mov
xchg
je
ret
and
pop
fcmovb
pop
mov
lods
sub
ret
sbb
notb
scas
in
pop
sub
or
push
jno
xchg
iret
int
rcll
lock
frstor
jecxz
push
xchg
mov
and
dec
repz
xchg
dec
and
add
lret
js
mov
lret
dec
push
inc
and
out
subl
andb
and
push
sbb
xor
xchg
sbb
and
test
sub
leave
cltd
mov
adc
addr16
cmp
or
mov
mov
or
pop
jge
in
aas
test
mov
mov
inc
shll
cmp
push
repz
sahf
push
bswap
aaa
adc
ss
inc
aaa
cmp
adc
cmovns
movsb
sub
and
movl
ret
enter
int
shlb
xor
arpl
add
xchg
sti
xchg
repnz
add
add
divb
call
xchg
cmp
and
hlt
imull
dec
roll
sub
xor
shlb
push
dec
adc
or
inc
mov
stos
pop
mov
and
iret
inc
mov
fsubr
or
push
sub
jbe
pop
cmp
or
dec
out
pop
lret
out
mov
test
outsb
jns
dec
mov
fldenv
mov
jle
arpl
in
lcall
lods
fwait
cmp
pushf
lds
xchg
inc
cmp
mov
test
into
cmpsb
mov
dec
sti
test
outsl
popa
into
rcll
add
pop
insb
mov
lds
leave
jns
pushf
call
lret
rcr
add
sub
push
out
inc
in
mov
repnz
jge
sbb
int3
aam
out
adc
sbb
push
pop
sbb
icebp
sahf
cmp
aad
sbb
jnp
orl
mov
mov
fisubs
inc
pop
dec
jecxz
mov
cs
adc
ljmp
jmp
cmpsb
in
cmpb
jns
mov
xchg
inc
jns
mov
fisttpl
adc
push
stos
popa
cltd
mov
push
pop
popa
repnz
mov
and
add
mov
fldl
stos
and
adc
ss
mov
mul
cmpsb
xor
les
lock
mov
scas
inc
rorl
push
mov
cmp
cmp
shl
dec
sti
test
sub
pop
daa
lcall
popa
or
sub
mov
xchg
stc
mov
pop
mov
jl
jg
rcll
adc
addr16
mov
ss
sbb
pop
out
iret
adc
ret
scas
push
fwait
adc
lret
in
int
dec
addr16
inc
and
mov
inc
sbb
ret
hlt
orb
aad
mov
subb
push
inc
popf
push
sti
ds
jae
les
xor
scas
in
dec
mov
inc
jo
out
dec
insb
xor
or
stc
xchg
mov
ja
out
loopne
sub
out
xchg
dec
sub
pop
push
dec
in
fwait
lods
pop
and
jno
lock
ret
cwtl
imul
sbb
pop
divb
mov
outsb
cmp
aam
jecxz
cld
xlat
push
jecxz
popf
pop
in
xor
xchg
cltd
mov
rolb
scas
push
inc
mov
in
xor
clc
test
mov
pusha
sub
cmp
mov
dec
mov
and
loope
push
xchg
jns
fiaddl
inc
rcr
popa
nop
adc
and
cmp
xchg
xchg
into
sub
pop
pop
cwtl
aad
xchg
int
cmpsb
or
adc
popa
out
icebp
push
sub
dec
dec
das
insl
lret
ss
lods
enter
jo
lods
fwait
jmp
cs
xor
enter
jo
rolb
adc
mov
jmp
mov
adc
subb
mov
push
mov
xchg
fimull
movsl
mov
dec
iret
push
xchg
movsl
or
push
push
mov
mov
adc
popa
rcll
icebp
test
bound
dec
sbb
shll
xchg
sbb
lds
callw
xchg
fnsave
es
mov
icebp
sub
dec
lcall
mov
push
inc
pop
das
mov
mov
xlat
inc
insl
test
fsubrp
jns
fidivl
loopne
sbb
fs
pop
stos
mov
ja
dec
sub
lds
daa
insl
push
nop
inc
nop
mov
dec
xor
call
fcmovbe
xchg
pop
jno
pop
adc
sbb
adc
aas
in
pop
or
mov
repnz
orl
xchg
pop
jecxz
das
push
push
inc
mov
push
mov
or
jge
add
mov
mov
imul
pusha
xor
ret
gs
pop
add
out
lods
or
mov
inc
or
mov
push
xchg
and
cmp
decl
das
xchg
cmp
rclb
add
adc
pop
add
xchg
out
out
pop
loop
pop
mov
dec
loopne
inc
aaa
out
mov
gs
in
addb
and
hlt
dec
xor
push
adc
or
enter
dec
sub
mov
add
add
lret
orl
fdivrs
test
iret
ljmp
sbb
nop
mov
and
cmpsl
adc
lea
roll
xchg
push
add
mov
or
inc
roll
cmp
das
sarl
xor
inc
xchg
mov
shrb
cmp
lahf
in
idivl
push
stos
fsub
std
ja
xorb
pop
js
adc
jp
sbb
lock
push
stos
mov
testl
mov
mov
mov
push
enter
insb
sbb
mov
cmp
icebp
addr16
stos
cmp
and
stc
shll
jg
cli
pop
call
push
or
mov
and
xlat
in
inc
je
daa
jne
sbb
scas
xor
adc
cmpsb
js
add
inc
mov
pop
pop
sbb
xchg
vpmulhuw
lret
enter
inc
mov
or
sbb
inc
out
aas
push
xor
push
xor
add
test
mov
mov
sub
clc
leave
dec
out
push
mov
add
mov
inc
jbe
push
stc
inc
mov
inc
aaa
in
push
ja
int
int
pop
aad
fstpt
sbb
cmp
paddb
pusha
test
adc
sub
cs
mov
mov
xchg
sub
adc
dec
test
sub
sub
dec
mov
adc
bound
add
insb
pop
add
lcall
in
mov
movsl
push
adc
inc
lea
mov
repz
cmpsb
jb
pusha
fs
xlat
sub
pop
dec
test
sub
out
arpl
mov
inc
fwait
leave
and
loope
sbb
stos
add
jmp
xlat
pop
jecxz
add
stos
lea
push
fwait
mov
lcall
jmp
adcl
movsl
clc
sbb
pop
dec
jns
ds
inc
outsl
pop
jo
aam
pop
xchg
mov
ja
cmc
rcrb
jnp
xor
call
and
pop
pop
adc
cmp
ja
jnp
dec
mov
in
mov
in
adc
jo
xchg
mov
ret
hlt
adc
push
jle
das
out
fldenv
add
mov
subb
cmc
xlat
cld
mov
xor
dec
imul
imul
scas
or
sarb
out
pop
lds
pop
cmp
testb
test
call
ret
xchg
inc
inc
notb
jne
pop
outsl
fs
jecxz
vandpd
mov
js
jne
mov
xor
xor
cwtl
outsb
mov
std
lcall
pop
mov
repz
pop
sbbb
pop
jns
lahf
lds
popl
dec
rcr
insb
pminub
adc
inc
push
data16
das
sbb
shr
adc
imul
push
fwait
in
sub
das
xchg
jb
fsub
cltd
dec
sub
js
pop
out
in
testb
push
add
push
dec
xchg
or
mov
rolb
ds
inc
jl
adc
and
das
and
js
pop
add
jo
dec
ja
pop
inc
xor
cmpb
fnstsw
xchg
js
arpl
test
test
dec
jp
adc
push
fisubs
pop
push
mov
jae
cmp
call
mov
mov
inc
prefetch
and
int
sub
icebp
mov
cmpsl
int3
xor
xchg
jb
insb
les
dec
or
sub
sub
hlt
dec
ljmp
cmpsl
push
pop
pop
test
jmp
xor
pop
ret
das
test
and
sub
or
xor
sbb
push
jge
cmp
ficompl
in
repnz
nop
push
xchg
dec
xchg
pop
xchg
cld
mov
lds
out
insb
mov
and
dec
sbb
call
cmp
inc
insl
scas
push
add
iret
ficoms
nop
xchg
and
sbb
movsl
jo
or
cs
push
in
mov
movsb
and
std
scas
push
lods
cmp
push
lahf
add
push
iret
out
xchg
and
or
jae
xchg
dec
pop
sbb
or
add
and
xor
insb
mov
and
cmpsl
sub
mull
divb
test
cmpsl
fdivrs
lahf
and
sbb
cltd
subb
leave
and
inc
je
jnp
xchg
xchg
mov
int
jno
sub
icebp
int
enter
insl
push
dec
mov
stc
sub
lea
neg
fsubs
jmp
test
cmp
popf
mov
int
push
or
dec
shll
lret
std
add
xor
int
push
sbb
out
out
mov
adc
iret
leave
std
ljmp
shlb
insl
or
mov
mov
cwtl
pop
andb
icebp
or
cwtl
lea
add
pop
jbe
mov
xchg
sub
and
jecxz
mov
pop
mov
adc
cmpb
sub
in
add
arpl
push
mov
cmp
xchg
je
int3
add
mov
xlat
fs
push
incb
push
push
sti
xchg
shll
in
ja
lods
xor
or
inc
adcb
out
push
cli
sbb
dec
pop
cli
adc
pop
mov
jl
jmp
push
cmp
in
data16
mov
mov
inc
ds
mov
iret
cmp
mov
xchg
jne
or
xchg
aaa
mov
in
jge
inc
leave
stos
adc
test
xchg
outsb
addl
mov
and
xorl
or
push
jne
daa
out
std
cmp
js
jns
out
jmp
aas
jb
shlb
call
aam
adc
add
sbb
xchg
popa
into
jl
or
shlb
leave
push
mov
mov
mov
sbb
pop
mov
lret
xchg
sti
clc
lods
mov
rcrb
stos
lock
stos
addb
add
fdivl
lock
nop
mov
add
imul
jmp
xor
outsb
lret
daa
popa
gs
aas
pop
aad
loopne
lret
pop
adc
les
int
orl
lret
push
inc
movsl
mov
es
pop
inc
and
fistl
fidivs
addr16
mov
outsl
add
xchg
and
or
dec
fidivl
lods
or
push
inc
jns
sub
cltd
mov
sahf
test
mov
lods
sub
out
test
xchg
stos
cs
fwait
aas
test
sub
adc
outsl
cmc
jle
and
mov
mov
or
jno
nop
xchg
push
xchg
jo
cld
add
daa
inc
jae
rep
loopne
notl
xor
subb
inc
aad
mov
xchg
fstps
jmp
dec
push
xchg
pushf
icebp
adc
mov
test
mov
sahf
push
pusha
cmp
in
test
adc
sbb
or
cmp
inc
ret
pop
lods
mov
sbb
imul
jecxz
mov
or
mov
add
add
add
sub
push
cmpsb
or
test
in
ljmp
sti
mov
cli
loopne
xlat
push
adc
or
daa
inc
mov
or
jnp
jg
test
jno
xchg
sub
repnz
jp,pn
scas
sub
stc
lds
cli
dec
or
ja
lahf
out
andb
les
mov
ljmp
mov
jp
and
or
ds
lea
pop
fstpl
adc
mov
int
inc
clc
inc
mov
stos
mov
stc
pmulhuw
or
mov
jp
jae
mov
movsb
sbb
jle
gs
or
cli
std
inc
dec
cmpsl
xchg
rcrl
std
callw
sbb
popf
sub
insl
inc
ljmp
cwtl
out
repnz
cmp
test
jne
pusha
mov
pop
fwait
nop
push
jns
mov
lret
jge
and
out
mov
inc
xlat
push
pop
xchg
pop
jle
jmp
sti
xchg
pop
dec
sti
or
xchg
cmp
addr16
insl
cltd
mov
addr16
mov
cltd
ss
xor
iret
sbb
mov
mov
sbb
jmp
pop
data16
daa
cmp
xor
push
pop
xchg
ss
push
mov
mov
inc
pop
mov
leave
and
or
insb
sub
in
lcall
rclb
pop
pop
or
sbb
out
xlat
pop
fbstp
aam
pop
dec
adc
sub
xor
pshufw
dec
ret
popf
cltd
mov
aas
cli
dec
ds
mov
int
xchg
dec
js
pop
cvtps2pd
xchg
xchg
cs
jbe
aas
mov
loopne
cmp
in
hlt
ja
push
in
test
pushf
in
mov
adc
dec
or
xor
mov
push
pop
add
pop
stos
jle
movsb
push
out
push
xchg
mov
bound
mov
jo
arpl
pop
and
jl
loopne
int
dec
adc
adc
cmpsl
mov
shrl
and
shlb
push
xchg
imul
outsb
mov
test
aas
xchg
and
adc
mov
pop
xor
inc
or
lds
movsb
or
sbb
pop
xchg
stos
sbb
xlat
pop
add
and
adc
xchg
leave
cmc
xor
push
into
and
and
test
inc
or
mov
mov
outsb
fdivr
stos
mov
js
lock
mov
push
mov
push
loope
mov
orl
lret
push
hlt
xchg
ljmp
fbstp
lds
cmp
cltd
xchg
xchg
into
scas
lahf
fdivrs
jecxz
das
xchg
adc
push
mov
outsb
lea
filds
lock
stos
dec
jg
adcl
ret
push
dec
jne
pop
jo
pop
push
in
outsl
test
mov
das
jb
push
pusha
inc
jne
fiaddl
pop
adc
daa
dec
and
pop
push
inc
push
arpl
or
xchg
xchg
jne
ret
insl
out
fnstcw
scas
lret
movsb
xor
inc
xchg
push
sbb
stc
inc
cmp
lods
clc
sub
jns
lahf
repnz
adc
mov
jno
or
mov
lahf
lds
dec
lods
std
or
inc
jecxz
test
fstl
repnz
sub
dec
and
data16
adc
sbb
ds
and
pop
mov
enter
xchg
aad
pop
mov
dec
mov
mov
inc
push
pop
popf
pusha
insl
int
aam
mov
out
jno
cmp
inc
jnp
les
sahf
out
lods
inc
push
int3
mov
and
pop
out
dec
dec
sahf
rclb
cmpsb
jl
dec
scas
jo
stc
rol
mov
adc
lret
les
dec
jno
pop
in
xor
leave
nop
fsubrs
jo
cmp
es
call
addb
inc
shr
movsl
jge
int3
mov
and
push
ss
scas
enter
push
stos
mov
sbb
lret
data16
mov
loope
sahf
rorb
clc
iret
pop
inc
dec
clc
test
mov
sub
add
add
std
sbb
push
cwtl
add
and
fldlg2
mov
mov
pop
adc
xchg
les
add
mov
mov
cmp
jp
pop
ljmp
out
lahf
jge
loope
add
loope
push
int
mov
loope
push
cmpsb
pop
int3
out
sub
imull
push
fs
mov
dec
pop
jmp
rol
jb
jecxz
in
cmp
sarb
es
inc
or
adc
mov
adc
mov
fwait
repnz
pop
xor
aaa
jecxz
sub
or
push
mov
mov
mov
jns
inc
jp
setle
ret
lds
cmp
push
xor
in
cmp
call
mov
hlt
sbb
out
adc
out
dec
add
stos
xchg
jnp
pop
add
insl
xor
aad
push
or
dec
cmpsb
and
sbb
adc
nop
cmc
sub
and
push
sbb
adc
stos
gs
xchg
mov
loopne
or
cld
daa
xchg
mov
aaa
xor
out
xadd
mov
jbe
xlat
push
testl
idivb
std
or
sahf
sub
or
xor
fstpl
cmp
and
jbe
sbb
jnp
xor
dec
mov
push
push
sbb
adc
data16
jo
pop
cmp
cmp
and
xchg
dec
ret
mov
arpl
mov
mov
mov
cmp
dec
iret
pop
divl
ret
jp
mov
jg
cltd
sti
mov
mov
fldcw
mov
imul
outsl
and
xchg
jle
call
mov
stos
and
and
pop
jmp
sub
xor
cmpsl
add
stos
adc
test
lock
xchg
rcrb
xor
xchg
movb
adc
mov
sbb
adc
fiadds
inc
gs
sub
imul
scas
gs
xor
pop
stos
hlt
call
movsb
add
loopne
gs
scas
insb
ret
mov
lcall
test
mov
int3
es
pop
inc
shrb
nop
xchg
or
cmp
jb
sti
adc
mov
ret
add
pop
lock
add
sub
sbb
or
int3
cmp
dec
aas
jmp
xor
mov
add
aad
stos
popa
data16
cmp
cs
push
inc
mov
cmp
lods
sub
xchg
jbe
jecxz
test
or
pop
mov
mov
xchg
sub
xor
mov
xchg
arpl
xor
push
cwtl
std
and
aaa
aad
sub
outsb
and
xlat
dec
sub
sbb
push
loope
imul
sarl
jp
jo
mov
jno
in
dec
xor
pop
in
lcall
dec
cmp
popa
jg
in
scas
stos
icebp
cld
scas
mov
test
sbb
pop
cmp
arpl
sar
push
mov
ret
std
adc
enter
das
pop
cltd
es
into
push
mov
lods
push
mov
outsl
push
in
mov
xchg
cmpsl
dec
cwtl
push
push
cmp
sbb
call
cmpsl
lcall
xchg
push
ret
nop
insb
mov
je
stc
pop
and
xchg
push
outsl
inc
add
fucom
stos
fxch
jbe
push
dec
pop
in
xor
add
and
into
popf
cmp
shlb
pop
dec
adc
sti
shrb
add
ja
mov
add
inc
lea
push
and
ss
cmp
idiv
pop
leave
arpl
sub
stos
aam
out
popf
mov
das
add
ficompl
push
mov
mov
sbb
ja
dec
test
out
pop
sub
in
xchg
adcl
xlat
cmp
pop
push
mov
jmp
ljmp
shl
or
xchg
and
push
and
fbstp
movsl
dec
aas
add
pop
jne
xlat
sarb
xchg
xchg
pusha
test
sbb
pop
or
jne
add
addr16
ljmp
outsl
sbb
cmp
sub
push
lcall
in
push
inc
push
shlb
add
call
outsl
outsl
or
sbb
lret
jne
sub
mov
sbb
lods
mov
cli
in
bound
nop
in
ret
inc
iret
test
lods
out
shr
inc
and
mov
popa
jle
jns
push
outsl
sbb
xchg
jno
sti
outsl
mov
cmp
scas
xchg
and
pusha
fmuls
or
in
pop
sub
sbb
sub
pushf
loopne
daa
imul
push
cmp
pushf
outsb
mov
cmpsl
dec
sub
and
adc
push
mov
inc
loop
jbe
jbe
fs
push
rcll
adc
fwait
lds
lea
shrb
aas
movsb
sbb
in
mov
inc
repz
daa
lds
popa
pop
or
jne
mov
xchg
push
jbe
andb
inc
cs
pushf
dec
sub
inc
pop
and
sbb
icebp
mov
int3
add
xchg
push
ljmp
ds
sti
mov
xchg
test
test
mov
aad
jnp
int3
mov
sub
imul
icebp
mov
xor
mov
fsubs
pop
jae
and
in
adc
push
cli
pop
xchg
insl
pop
repz
sub
int
mov
rcrb
push
jp
leave
cs
jae
mov
xor
xchg
mov
enter
and
sub
test
or
fdivs
aad
test
adc
inc
xchg
push
jecxz
or
sub
fsubrl
fisttpl
jle
test
dec
subb
and
push
cld
xchg
test
cmp
fnstcw
push
movsl
pop
jle
mov
inc
mov
movsl
aas
inc
test
mov
cmp
sti
js
sbb
pop
aas
xor
xchg
pop
add
rol
insb
xchg
jno
outsb
dec
inc
insl
ret
sub
cmp
inc
fistps
ljmp
mov
es
ljmp
fisubs
push
xor
xor
iret
cli
out
adc
mov
and
cmpsl
or
sub
stc
mov
scas
scas
inc
lret
jne
mov
stos
dec
bound
movsb
xchg
mov
out
lcall
into
xchg
and
pop
insb
call
cmp
out
in
lahf
testl
test
call
lock
lret
scas
cmp
into
fisubrs
pop
push
xchg
mov
xchg
idivl
clc
pop
adc
testb
mov
push
movl
fdivp
push
jle
adc
push
insb
popa
jb
cltd
mov
lret
out
rcll
add
pop
frstor
jbe
fcmovb
shrl
cmp
add
inc
and
sahf
dec
in
out
cld
add
in
xor
es
sub
cmp
jp
cmpsb
int
jbe
lds
shlb
in
lds
insl
xor
xchg
xor
sub
xchg
inc
cmc
popf
out
sub
movsl
adc
cwtl
add
sub
mov
shrl
pop
outsb
mov
sahf
ljmp
mov
mov
mov
mov
mov
clc
inc
das
clc
push
out
out
sbb
dec
jo
push
loop
sbb
lods
adc
push
add
emms
mov
mov
xchg
and
mov
ficompl
cs
sub
push
sub
or
aas
js
loope
std
or
in
push
cltd
fcmovb
cmp
loope
inc
jnp
in
xchg
sbb
xchg
movsb
addr16
jae
push
scas
sbb
sub
xchg
popa
fwait
mov
sbb
mov
mov
popa
test
shlb
xchg
fmul
mov
mov
outsl
cwtl
loopne
inc
adc
add
dec
aaa
pop
std
xor
mov
aad
stos
xorb
ret
pop
lods
pushf
jo
sbb
add
or
aaa
cwtl
xchg
inc
add
dec
outsb
cmp
cmp
add
std
test
ficompl
and
sub
sub
mov
cmc
jmp
jle
push
je
fucomip
cld
lret
mov
out
shlb
std
ja
push
xchg
ret
mov
cmpsb
inc
int
push
dec
pop
xchg
xlat
scas
xchg
lret
imul
jno
in
sbb
sbb
jbe
add
hlt
xor
sub
in
ds
cs
lods
test
lods
shl
and
sbb
or
lcall
sarb
cmp
xor
icebp
popa
xchg
roll
xor
sbb
pushf
and
aas
push
rolb
pop
mov
mov
push
push
dec
add
sbb
xchg
cmp
rcrl
push
add
pushw
sub
shlb
inc
sub
inc
loopne
jno
aaa
lahf
and
lret
inc
jae
pop
jne
push
pushf
and
adc
subl
aaa
test
add
inc
lods
or
aaa
jns
push
pop
sbb
fstl
icebp
js
xchg
push
popf
arpl
clc
mov
and
lods
stos
mov
test
in
xor
loope
and
pop
leave
pusha
lahf
dec
pop
add
sbb
dec
and
js
pop
mov
or
sub
cli
jb
dec
shlb
sub
pop
mov
pop
mov
cmp
or
lcall
stos
mov
iret
pop
cmp
pop
xchg
iret
shrb
fadds
andb
sbb
out
add
mov
divb
inc
add
cld
xchg
or
xor
adc
shl
lods
inc
xor
dec
fwait
mov
add
push
inc
pop
das
sbb
inc
pop
inc
lcall
test
std
negl
push
sub
push
test
push
push
ret
jle
or
jecxz
and
mov
mov
jmp
test
ja
xchg
inc
or
mov
and
popa
mov
pop
push
movsb
cmp
or
dec
inc
pop
insb
ficomps
es
mov
cmpsl
push
mov
pop
adcb
mov
repz
add
fimuls
notl
mov
call
into
aad
add
inc
lahf
mov
lret
mov
mov
pop
ss
jecxz
gs
data16
inc
inc
lods
jns
fstps
xchg
dec
ret
xchg
jecxz
mov
into
lock
scas
js
insb
pop
mov
xchg
dec
mov
cmpsb
xchg
jp
adc
mov
inc
jmp
cmp
and
test
xchg
out
mov
orl
mov
stos
ljmp
fcmovbe
xor
loop
mov
push
adc
xor
xchg
fcmovnu
push
cmp
push
mov
insb
inc
xor
iret
in
inc
insb
pop
cmpsb
xchg
fistl
inc
lcall
outsl
pop
xor
cmp
push
cmp
std
out
and
push
out
es
mov
test
pop
cmpb
js
add
mov
ja
xchg
pusha
sbb
out
pop
jmp
add
int3
xchg
jecxz
mov
jmp
mov
ja
mov
ljmp
push
insb
xchg
pop
mov
push
sbbb
and
inc
test
lds
mov
stos
lds
in
dec
jmp
loopne
sub
or
push
and
pop
adc
nop
mov
mov
out
jae
sbb
enter
inc
popa
or
pop
xor
jle
cmpsb
mov
mov
rcr
aaa
test
mov
leave
mov
xor
loopne
dec
pop
sbb
mov
push
es
fiadds
enter
js
push
push
pop
push
fbstp
inc
and
xchg
pusha
pushf
scas
ljmp
jae
mov
jno
push
shll
outsb
nop
pop
aam
imul
lock
lods
daa
in
sti
shrl
mov
notb
lods
out
xor
mov
shr
outsl
pop
and
mov
cld
add
sub
jle
jmp
jmp
loope
mov
clc
pop
ljmp
fdivp
pop
sbb
sbb
push
testl
lock
mov
mov
push
ljmp
and
adc
ja
push
sub
xor
lea
jge
fdivl
cmp
lcall
div
xchg
sbb
xchg
sbb
outsb
adc
fildll
lret
mov
push
mov
inc
or
adc
mov
and
pusha
cmp
mov
std
test
insb
arpl
fcmovnb
scas
jl
jns
mov
lret
aad
repz
stos
jae
sbb
icebp
test
fmuls
push
mov
adc
aaa
sub
pop
out
push
mov
mov
je
pop
jb
mov
js
dec
aas
adc
sub
mov
repnz
push
lods
add
pop
and
hlt
lahf
xchg
fsubs
adc
cmp
jge
clc
or
dec
les
or
lods
fdivr
mov
xchg
fidivrl
lods
mov
repz
add
mov
push
add
push
fistl
sbb
mov
push
test
jne
fdivrl
sbb
push
je
sub
shl
jl
inc
sub
mov
add
dec
jo
inc
adc
je
push
outsb
sub
pop
stos
cmpsl
mov
pop
dec
mov
sub
mov
add
adc
adc
or
fbstp
mulb
sub
hlt
xor
or
iret
xor
idivb
sbb
data16
sbb
test
mov
xchg
daa
add
push
pop
out
pushf
imul
xchg
std
int
imul
jne
adc
mov
scas
out
jl,pn
sbb
scas
and
add
test
rcll
movb
fs
clc
fcomi
les
imul
in
cmpsb
jg
lcall
aas
loop
mov
enter
and
or
shll
xchg
pop
and
stc
shll
mov
adc
push
sbb
gs
and
dec
jno
xchg
pop
je
add
dec
and
scas
ljmp
xlat
in
push
std
sbb
inc
adc
mov
jle
lahf
in
enter
jo
mov
std
sub
scas
mov
xor
ret
mov
cmpsb
insl
inc
mov
mov
movsl
xor
jbe
push
lcall
mov
int3
sub
data16
arpl
push
out
fwait
xchg
xlat
mov
jb
inc
pop
bnd
mov
lcall
dec
lea
xlat
pop
cld
ret
pop
and
sub
incl
aad
jnp
and
aad
sub
ret
adc
jae
mov
xchg
imul
dec
mov
jp
fnstsw
insb
sbb
sbb
push
mov
push
xchg
fst
inc
pushf
mov
movsl
mov
mov
iret
cltd
mov
mov
aaa
mov
xchg
jg
dec
imul
mov
push
fists
push
imul
dec
push
sbb
mov
pop
clc
lret
dec
cmp
scas
lea
pop
movsl
mov
inc
jle
nop
cwtl
or
push
nop
cmp
sbb
cwtl
mov
sar
aas
leave
cmpsl
pop
mov
pushf
mov
loope
add
mov
insb
jne
cli
pop
imul
out
mov
cli
rorb
cld
or
and
jp
lcall
add
xchg
aas
mov
imul
ss
inc
sub
imul
xchg
adc
std
sbb
push
shrl
or
cli
rclb
adc
repz
out
testb
dec
ret
lret
dec
xchg
push
lds
mov
dec
pop
inc
aad
dec
in
aas
cmp
push
addr16
idivl
leave
arpl
inc
sub
or
sbb
cmp
imul
inc
mov
lock
std
jp
add
and
es
pop
adc
xchg
mov
or
dec
rcr
xor
xchg
mov
into
and
int
xchg
lcall
dec
inc
pushf
fidivrs
fidivrl
xchg
inc
mov
pop
movl
out
mov
mov
push
dec
pop
mov
xor
out
jo
sbb
dec
push
jmp
fcmovne
aad
mov
and
add
push
ljmp
mov
cmp
je
fs
and
aas
mov
add
imul
cmpsb
lds
fsubrs
test
cmc
and
sbb
jbe
test
pushf
jg
in
xor
jne
or
push
mov
dec
repz
adc
xlat
cwtl
cmpsl
shrl
push
and
call
js
arpl
call
or
rorl
stos
mov
mov
bound
mov
rcl
pusha
stos
dec
lret
or
pusha
push
outsb
adc
loop
cmpsb
es
test
inc
jmp
fimuls
push
jo
jecxz
jb
in
imul
pop
test
inc
mov
out
jns
iret
jecxz
les
loope
ljmp
inc
imul
pop
mov
jae
lahf
lahf
and
ja
sub
pop
inc
or
push
push
sbb
mov
push
dec
push
fidivrs
sbb
add
mov
push
sbb
rolb
int3
pop
cmp
sub
jmp
fimull
lcall
test
or
jno
xchg
das
adc
out
push
lahf
repz
cld
in
push
xor
add
sbb
dec
jns
sbb
push
fldl
sub
loopne
jecxz
cmc
dec
jp
in
mov
dec
xor
cs
ret
mov
pop
adc
sahf
xchg
sub
xchg
mov
jbe
ror
mov
arpl
es
shl
sub
fistpl
insl
mov
jnp
mov
xorl
dec
add
xchg
or
arpl
and
pop
pop
loope
rcll
mov
ret
faddp
jmp
loope
outsb
movsb
add
push
stos
rcrl
dec
cmp
xchg
sub
jmp
mulps
fabs
lcall
push
dec
xor
mov
cmp
or
out
lods
xchg
rclb
cmp
icebp
push
jae
xor
cmp
aam
dec
add
cld
outsl
je
or
sbb
pop
stos
dec
jb
repnz
loope
jbe
decb
push
lods
imul
xchg
add
fwait
jmp
neg
mov
out
push
iret
icebp
lock
inc
call
fdivrs
aas
inc
daa
cli
aaa
mov
cwtl
mov
cmpsb
std
sti
sahf
in
dec
or
lahf
popf
cmp
dec
gs
xor
movsb
mov
add
push
aam
in
dec
es
xchg
pop
in
jbe
sarl
mov
sbbl
fstpl
stc
xchg
or
jo
mov
inc
shll
fs
push
sbb
movsl
fs
lret
lret
mov
xchg
lods
pushl
jle
mov
or
mov
and
outsl
pusha
outsl
lcall
mov
fucomip
dec
xor
mov
outsb
iret
in
xchg
les
clc
js
ja
pop
sti
pop
data16
sub
sub
enter
lock
imul
stc
imul
mov
sahf
es
ja
dec
push
cld
push
fstps
jb
sbb
cmp
mov
add
pop
push
sbbl
dec
sub
leave
prefetchnta
mov
test
sti
mov
mov
scas
inc
mov
es
shll
push
inc
push
cs
cmp
cmpsb
mov
cmp
lea
pop
in
sbb
pop
clc
adc
jb
scas
popa
jne
jnp
pop
jb
cld
xchg
or
push
repnz
idivb
adc
loopne
mov
cmp
inc
andl
lock
scas
jne
mov
push
pop
lret
cmp
mov
ret
adc
mov
sbb
add
push
lcall
cmp
jg
mov
and
ds
aam
jp
xor
popf
fsubrl
mov
push
jae
jge
idivl
push
inc
das
fcmovbe
add
sbb
rclb
xchg
push
ljmp
jmp
out
ljmp
adc
insl
add
jae
in
aaa
push
shll
inc
xor
cmp
mov
xlat
subb
xorb
push
jb
xchg
mov
insl
rorl
hlt
adc
movsl
loop
jg
cmpsl
sub
insl
sub
inc
outsl
test
into
addl
sub
ret
pop
shr
mov
jecxz
bound
shrl
dec
xor
cmp
popa
pusha
roll
mov
lret
adc
push
mov
int
push
cltd
cmp
lea
dec
jnp
cmp
sbb
inc
xchg
cmp
pusha
fstpt
test
sub
jle
aam
mov
pop
or
inc
dec
mov
mov
out
or
or
ret
sbb
scas
movsb
lea
adc
or
rolb
mov
dec
adc
or
aaa
sbb
repz
adc
rclb
mov
icebp
or
test
cli
cltd
cmp
adcl
cld
aam
jno
rcrb
lods
cmp
dec
xchg
mov
push
pop
imul
xchg
push
int3
inc
enter
xchg
xchg
insb
push
sbb
jns
lods
xchg
repnz
movsb
or
xor
pop
mov
push
call
popf
insb
into
inc
insb
sar
mov
popf
cld
sub
or
pop
outsl
testl
sahf
imul
jnp
popa
xchg
dec
add
push
leave
dec
push
outsl
jo
inc
mov
out
pop
push
int
xor
sbb
sbb
mov
add
inc
insb
and
ljmp
inc
mov
arpl
in
daa
in
les
jns
shrl
lret
xor
fdivrp
pop
dec
or
or
lret
xchg
pop
arpl
jle
or
sbb
pop
add
lea
nop
mov
out
insl
fisubs
or
lmsw
push
xor
ret
daa
mov
jmp
pushf
outsl
push
lea
mov
mov
or
inc
test
cmp
mov
sbb
outsb
cmpsb
inc
shrl
loopne
cmp
ret
pop
dec
dec
pop
mov
int3
cmp
pop
sub
rorb
dec
dec
xor
hlt
pop
sub
dec
dec
jno
add
add
mov
inc
out
fnstenv
idivb
mov
pop
scas
das
mov
mov
or
mov
xchg
and
aaa
cmpsb
pushf
les
addb
sub
inc
xchg
loop
std
add
nop
pop
bswap
dec
and
pushf
push
cmpsl
and
enter
sbb
cmp
sub
shll
ret
lret
dec
outsb
js
cmp
aam
pop
stc
test
scas
mov
push
clc
push
outsb
xchg
sbb
and
or
mov
js
jno
ds
rorb
add
shlb
rdmsr
cmp
pop
adc
xchg
mov
sbb
ljmp
scas
addr16
iret
in
mov
or
es
test
ljmp
adc
sub
test
notl
and
ja
inc
dec
mov
pop
insl
ret
push
negb
fldt
movsb
xchg
add
neg
mov
xor
and
dec
lret
mov
push
dec
loopne
and
pop
mov
ror
sbbl
mov
fnstenv
dec
repnz
in
int3
roll
lea
loopne
ret
scas
in
pop
dec
fistl
dec
xchg
stos
sub
or
pop
out
test
mov
pop
and
or
jl
mov
xor
add
or
add
and
jecxz
xlat
mov
pop
loop
mov
sahf
fcoml
cmpsb
or
dec
fmuls
xchg
and
loop
out
pusha
xor
mov
divl
mov
in
bswap
sbb
repz
fldenv
and
sub
enter
in
pop
add
jne
and
dec
sbb
das
aas
inc
sbb
fidivs
jl
imul
mov
fwait
add
fldt
cld
xchg
or
push
jne
aaa
test
cmpl
aam
fsubs
xor
xchg
cs
and
jmp
pop
adc
loopne
fisttps
lea
lea
cmc
sub
sbb
lret
jle
dec
or
or
xchg
in
jle
jmp
cltd
aaa
or
xor
ds
pushl
fdivrl
jmp
popf
std
les
pop
jne
and
dec
cmpsb
lock
mov
jle
gs
js
pop
repnz
sbb
mov
xchg
cltd
dec
mov
push
test
das
iret
leave
adc
adc
bnd
cmpsl
jb
mov
pop
mov
jo
in
fwait
idivb
jnp
mov
inc
cmp
mov
mov
outsb
add
icebp
sti
jae
jno
jns
in
xchg
cmp
push
push
in
das
cs
jbe
dec
sbb
sahf
scas
mov
enter
daa
test
or
cmpsb
insl
hlt
aam
mov
sbb
inc
add
lcall
lds
xor
xchg
cmp
scas
push
mov
aaa
mov
pop
in
sub
jge
dec
add
xor
pop
inc
in
xlat
shlb
lock
jle
out
add
test
fs
dec
xabort
aad
enter
or
loope
sbb
vcvtsi2sdl
movsl
sti
sbb
sbb
and
xor
adc
ja
sub
data16
outsl
cwtl
adc
xchg
jo
in
dec
mov
cwtl
mov
ret
xchg
popa
push
outsb
sbb
xlat
testl
add
fisttpll
push
arpl
mov
and
or
daa
decb
sbb
hlt
jge
inc
pop
pop
pop
pop
xor
mov
int
enter
push
or
adc
dec
loop
subl
sbb
loope
cmp
decb
or
bswap
hlt
dec
pushf
lods
lods
fwait
rorl
loope
jb
into
pop
xor
shrb
jle
imul
loop
mov
and
mov
nop
test
mov
rolb
lahf
jne
mov
fcompl
vpsubsb
in
pop
scas
fldcw
in
push
lods
daa
test
pop
ds
pop
movsl
push
cwtl
ss
dec
sti
sahf
jb
fidivl
pop
mov
jne
test
daa
pushf
mov
dec
scas
jbe
xchg
pop
call
sbb
lds
mov
idivb
enter
xor
imul
rcrl
xor
js
imull
push
push
icebp
sbb
xchg
out
into
fsubrs
jbe
inc
stos
je
outsb
pop
mov
loop
into
fisttps
xchg
pop
popl
fucomi
mov
lahf
shrl
push
lret
loope
jne
inc
fstl
xor
faddl
movsb
push
push
popf
lcall
clc
test
adc
rorb
arpl
inc
sub
add
add
push
bound
outsl
cmp
xor
dec
mov
sbb
pusha
lods
mov
push
mov
loope
cwtl
test
mov
sbb
pop
ja
pop
or
mov
test
xchg
sti
movsb
xchg
shrb
daa
cmp
push
push
mov
dec
jl
add
pusha
sbb
fcmovnb
clc
cmp
pop
push
lock
test
test
ficomps
je
jb
xchg
sub
mov
sub
sbb
xchg
inc
mov
jmp
push
fwait
test
push
cli
lods
in
clc
lods
xlat
jmp
aaa
xorb
mov
jnp
jno
mov
add
sub
fxch
fists
fisubs
mov
fmull
push
xor
add
xchg
jns
mov
push
or
pop
mov
inc
les
loope
sbb
pop
mov
sub
xor
push
mov
cli
or
lods
sbb
lea
mov
dec
dec
mov
and
sub
push
scas
rcrb
into
popa
lods
xchg
mov
in
jp
mov
ja
xchg
xorb
hlt
jmp
xchg
dec
mov
push
pop
push
jl
das
cmp
imul
xor
lods
fiaddl
pop
leave
push
xor
imul
or
pushf
repz
sarb
add
push
ret
rol
push
fiadds
lcall
sti
jo
cwtl
mov
fnsave
cmp
jmp
pop
add
fiaddl
dec
cwtl
push
sbb
aam
push
add
das
aaa
pop
stc
sub
dec
pop
or
fisttpll
sbb
mov
js
jbe
sbb
fmull
js
adc
pop
mov
xchg
pop
pop
xchg
sbbb
sbb
dec
stos
movsb
orb
fwait
push
mov
addb
dec
cmpsb
add
jge
scas
add
sub
mov
insb
mov
std
fyl2xp1
mov
push
pop
sub
fstps
jno
mov
aad
loop
or
mov
outsl
arpl
jbe
ficomps
ja
scas
add
pop
lods
jle
inc
fadds
jl
cmp
jecxz
imul
or
rcrb
in
or
xor
pop
push
sarl
cmp
sub
sbb
sub
cmpsl
loopne
xor
inc
mov
jne
inc
cmp
mov
jmp
scas
mov
add
leave
out
pop
mov
mov
lcall
inc
arpl
cld
mov
or
jmp
cs
fimuls
fsubs
lea
jmp
lret
rolb
in
pop
cmp
repz
jno
pushf
int3
int
dec
daa
fstl
enter
pop
imull
mov
enter
stos
sub
and
push
stos
mov
or
xor
les
dec
shr
pop
xchg
xchg
sub
scas
push
call
jb
loope
jg
sub
enter
cwtl
icebp
in
push
in
jg
hlt
in
jb
mov
xor
inc
sbb
xchg
adc
mov
inc
fstl
dec
push
arpl
bound
fidivl
xlat
fisttpll
inc
int
repz
xor
int
pop
movsb
repnz
push
xlat
mov
lock
push
pusha
jbe
nop
dec
cmpsb
scas
dec
cmpsl
mov
addr16
or
xor
push
sub
dec
cmpsb
jp
xchg
pop
loop
icebp
stos
jb
and
insb
jno
jno
imul
data16
or
fidivrs
lods
dec
shrl
cmpsb
mov
aad
pop
mov
or
pop
sti
mov
out
fwait
xchg
dec
clc
or
je
push
adc
and
sub
das
cld
xor
sub
mov
inc
icebp
jo
push
mov
sub
push
push
or
test
fsub
add
fwait
jb
arpl
int
gs
test
outsl
int
and
rcrb
ret
fs
xor
mov
sbb
xor
jne
jmp
repz
sub
pusha
pop
lods
xchg
vpandn
cwtl
test
lds
push
xchg
rcll
mulb
sbb
pop
btc
cmp
out
sbbb
fbld
cmp
shll
popf
outsl
dec
lds
inc
outsl
cmp
inc
roll
jnp
cmp
ja
push
ja
fs
dec
mov
xlat
mov
mov
dec
dec
out
jnp
jmp
int
ss
mov
ffreep
mov
mov
cmpb
in
inc
mov
addb
mov
call
push
adc
rol
mov
push
cmp
push
cmp
xor
nop
insb
xor
clc
movsl
mov
mov
outsl
data16
push
and
jb
imul
dec
stos
lock
fsubs
test
jbe
andl
dec
xor
popf
cwtl
mov
mov
sub
ss
cld
add
jbe
stc
movsb
pop
lock
cmp
hlt
insl
add
push
movb
xor
into
shll
lahf
test
cmpsl
imul
xlat
sub
push
cmp
mov
add
mov
add
es
iret
ret
jne
fcoml
jecxz
jnp
pop
mov
nop
mov
pop
leave
ljmp
xchg
or
jl
pop
jae
cli
jae
test
xchg
xchg
jb
jg
sbb
fists
int3
pop
stos
ja
loope
out
aam
lahf
cli
add
or
jno
pop
xor
nop
mov
cmp
dec
sti
fnsave
pop
in
xchg
inc
leave
mov
mov
xor
inc
clc
and
andl
sub
sub
inc
sti
ds
or
rclb
inc
xchg
aaa
pop
and
mov
adc
popa
lret
add
arpl
test
fadds
add
ret
mov
out
lds
cltd
cmpsl
les
enter
cli
int
hlt
mov
cs
xchg
xchg
pusha
pusha
or
sbb
xlat
imulb
mov
dec
test
adcl
ljmp
mov
outsb
fcmovnu
out
test
fistpll
gs
data16
jne
aaa
clc
jbe
mov
inc
and
bndstx
push
repnz
aad
add
sbb
xchg
andl
mov
sbb
repnz
mov
push
dec
pop
lcall
std
jp
bound
stos
gs
neg
jno
mov
mov
sarl
stos
push
aam
std
xchg
das
clc
cmp
push
cmp
jb
inc
jecxz
inc
push
ja
shrl
lds
jnp
adc
fisttps
lret
mov
inc
out
out
sub
js
hlt
js
incb
imul
inc
pushf
jbe
outsl
jne
mov
in
jne
jg
test
adcl
inc
fwait
out
jnp
or
out
mov
cmpsb
add
mov
inc
xor
push
testb
or
out
cld
xchg
pusha
add
mov
push
aad
mov
push
dec
pop
push
push
gs
xor
icebp
in
rclb
mov
mov
inc
jbe
gs
and
and
mov
dec
repz
pushf
cli
out
sub
imul
add
and
out
add
xor
in
mov
ret
push
push
icebp
sti
sbb
subb
pop
sbb
mov
or
out
xchg
hlt
sti
popa
push
cmp
add
and
sub
sub
add
rorb
stos
inc
adc
add
fmuls
jb
cmp
out
cli
mov
out
push
adc
sub
repnz
jmp
jb
sub
iret
dec
push
cmpsb
rcll
andb
jmp
loopne
push
pop
mov
xchg
or
bound
mov
pop
push
sub
jno
xor
std
outsl
loopne
test
pop
shlb
into
xchg
std
mov
inc
and
push
adc
loope
mov
dec
into
lret
xchg
jge
push
and
bound
sbb
int
icebp
ret
xor
mov
call
int3
fadds
jmp
jecxz
orl
push
mov
call
or
sbb
inc
popf
popf
outsl
loop
fcomp
cmp
add
aas
inc
popf
xor
and
add
jg
xchg
push
pushf
jae
cmc
sub
pop
arpl
jbe
pop
sub
in
inc
lret
jb
and
pop
mov
pop
inc
add
hlt
xchg
cmpsb
add
cli
aad
clc
cmpsb
xor
les
loopne
inc
loop
xchg
dec
faddl
pop
and
out
push
mov
sahf
leave
dec
rcr
dec
int
scas
cli
movsl
lock
cmpsl
cmp
kmovw
insb
inc
es
jne
movsl
inc
adc
inc
adc
or
loope
mov
lret
insb
aaa
pop
or
push
push
aam
clc
lret
mov
adc
dec
dec
jns
scas
cmp
xchg
fldenv
or
shl
xlat
and
loope
ds
testb
mov
sub
outsb
pop
cmc
leave
repnz
mov
shr
rorb
dec
fwait
or
mov
daa
adc
data16
and
add
lods
mov
pop
cld
cltd
xchg
lods
sbb
jg
ljmp
jp
add
or
outsl
movsb
cli
inc
dec
fwait
dec
push
cmp
dec
ja
mov
ficoml
jmp
out
std
dec
cmc
aad
jo
subb
in
add
jmp
repz
pop
aad
and
add
adc
iret
jl
divps
jnp
decb
inc
leave
xchg
lds
push
mov
pop
imul
dec
xchg
ret
cmp
inc
int
lock
add
sub
adc
xchg
jle
les
push
mov
aas
sub
pop
sub
inc
pop
jle
popa
jno
loop
and
or
sbb
push
cmp
movsb
and
ljmp
add
mov
aad
sbb
mov
in
xchg
inc
stos
jb
int3
fnstenv
sub
dec
xor
pop
dec
lahf
push
hlt
xchg
sbb
nop
xchg
insb
rorb
sbb
lods
popf
sub
repnz
imul
xor
mov
lods
or
jmp
out
cmp
mov
out
xor
bound
push
and
or
out
fisttpl
and
outsl
and
cmp
sbb
mov
insl
and
je
mov
push
adc
jno
das
and
mov
mov
adc
test
dec
xchg
jae
mov
mov
pop
nop
push
data16
push
outsl
fisttpll
sti
test
sub
add
cwtl
pushl
adc
xlat
mov
es
arpl
jg
enter
lock
in
enter
cmp
push
xlat
push
imul
cli
stos
mov
les
aad
sub
ds
or
fcmovb
pop
scas
mov
std
pop
in
inc
hlt
into
clc
scas
test
aas
xchg
sub
sti
int
jnp
js
rorl
sbb
rcr
xor
orl
cmpsl
pop
in
jg
push
sahf
push
lock
pop
cmp
popa
pop
in
mov
dec
ja
in
sub
pushf
cwtl
mov
inc
stc
jge
dec
push
xor
out
movsl
mov
mov
lods
add
inc
imul
xchg
icebp
jle
ret
sahf
xchg
xor
into
and
pop
insb
stos
fcmove
inc
test
ja
xchg
pop
fsubrp
lret
cmp
popf
xlat
aas
out
sub
jle
cmc
add
mov
test
fildll
mov
xor
mov
or
and
adc
or
mov
jle
mov
mov
aad
ljmp
mov
dec
movb
lods
add
out
jecxz
into
mov
xchg
pop
cmpsl
pusha
push
cwtl
pop
dec
mov
outsb
int
and
jle
rolb
jmp
imul
cmp
dec
dec
cmpsb
lahf
mov
push
jns
adc
stos
cmp
fldenv
mov
jb
mov
cwtl
and
ds
test
adc
jl
xlat
fcompl
cmp
dec
push
cwtl
sbb
out
jae
movsl
xchg
fiadds
lods
add
movsb
sub
gs
dec
in
sbbb
mov
jo
mov
sbb
pop
jp
insb
leave
pop
int3
pop
mov
jne
mov
addl
incl
imul
mov
rcrb
mov
aam
push
fstps
pop
ja
or
arpl
fidivl
push
xor
or
mov
inc
mov
aaa
add
cs
cmp
and
out
fwait
imul
mov
sbb
mov
pushf
sarl
dec
fldcw
sbb
pop
test
mov
pushf
cld
fcmovbe
divl
pop
aam
xor
inc
sarl
push
jno
iret
push
xlat
outsl
jne
fcmovnu
mov
shlb
nop
gs
pop
idivb
pushf
das
je
fwait
dec
xchg
pushf
mov
pop
pushf
adc
ret
xor
leave
inc
mov
mov
dec
mov
sbbb
loope
and
add
push
aas
movsb
jg
std
mov
sub
cmp
dec
bound
movsl
mov
sahf
lea
pusha
cld
dec
push
mov
mov
pop
ljmp
bound
sti
mov
into
mov
and
push
fwait
mov
fists
dec
arpl
cmp
mov
inc
scas
sahf
dec
or
lcall
mov
cwtl
pop
fnstcw
scas
test
sub
pusha
testl
in
pop
push
and
dec
pop
pusha
sbb
mov
mov
in
cli
push
xor
movhlps
xor
adc
mov
shlb
sbb
lcall
pop
clc
jg
shld
and
inc
sub
xchg
enter
imul
jle
cmpsl
xor
mov
pushf
adc
mov
add
loope
add
pop
frstor
sbb
jo
sub
popa
or
outsb
push
pop
sub
adc
je,pn
jnp
jge
loop
out
pop
fwait
lods
mov
pop
packsswb
or
cmp
faddl
mov
push
jg
xor
inc
and
add
pop
xlat
lock
dec
mov
mov
add
xlat
idivb
scas
out
lcall
test
xor
leavew
or
inc
addr16
cmp
test
fcoms
sbb
repnz
or
inc
xchg
sbb
inc
sarb
out
pop
mov
and
sahf
loopne
sub
inc
inc
mov
adc
pusha
stc
je
dec
sbb
adc
loope
fdivs
insl
adc
shrl
loop
mov
fsub
jno
movsl
push
inc
jns
add
inc
inc
sbbl
xor
mov
fld
add
xchg
inc
out
mov
shrl
mov
arpl
dec
pop
lods
push
xor
std
in
mov
aas
enter
push
sub
popl
movsb
mov
dec
sahf
ret
push
mov
xor
and
int
cmp
jle
xor
jbe
add
mov
inc
mov
pushf
iret
in
mov
outsb
js
popf
push
pushf
lret
push
jae
push
into
repnz
pop
shlb
gs
repnz
mov
lea
stos
shr
pop
mov
inc
mov
xlat
outsl
loop
or
mov
cmp
int3
clc
xor
lcall
pop
fmull
xchg
inc
addr16
repz
cmc
into
push
movsl
dec
mov
fstpl
dec
inc
xor
mov
mov
sbb
in
mov
lods
sbb
aam
divps
inc
lock
outsb
add
sbb
mov
xor
and
lret
adc
iret
dec
xchg
xchg
xor
xchg
iret
shlb
push
push
sub
inc
jg
fidivrl
add
jbe
imul
cld
mov
lock
imul
add
or
cmp
insl
push
mov
push
rcrb
jl
xlat
xorb
fisubrs
loopne
cs
pushf
mov
jge
jb
jmp
cmpsl
xchg
mov
jnp
cmp
out
sub
daa
lret
les
rclb
and
sbb
fcoms
pop
adc
jb
sub
mov
jns
push
push
test
xor
stc
sub
xchg
jbe
test
pop
jp
cmpsl
popf
mov
loope
divl
sbb
inc
pop
pop
neg
fbld
sbb
mov
add
call
xor
or
xchg
lret
arpl
and
cld
adc
notb
pop
adc
stos
shlb
sbbb
push
imul
fxtract
cmp
mov
pop
outsb
ja
or
mov
int3
push
shll
adc
jg
faddl
pop
pushf
mov
cld
cmpsb
cltd
rcr
mov
scas
push
sbb
mov
adc
sbb
mov
jle
sub
xchg
insl
rcrl
lcall
aaa
stos
stos
outsl
lret
xchg
xor
jmp
rcrb
das
mov
sbb
mov
std
lret
cmp
pop
pop
jnp
push
adcl
and
int3
cli
dec
cs
outsb
lcall
mov
dec
stos
imul
inc
push
jae
sub
mov
dec
in
add
imul
out
push
mov
push
mov
lods
dec
gs
adc
sahf
mov
cmp
ret
dec
lods
pushf
fnstenv
ret
sar
cli
frstor
sub
or
sbb
es
inc
sub
stc
scas
add
cmp
push
lods
xchg
xchg
xchg
jl
out
cli
lods
lea
adcl
push
jecxz
fld
jbe
mov
push
shrl
xor
mov
roll
push
jo
sbb
je
xchg
jp
jp
fdivr
in
in
pop
or
icebp
sahf
stos
mov
add
sahf
fisubl
mov
aaa
xor
sub
stc
std
jle
mov
cwtl
and
fwait
jno
dec
mov
jmp
cld
xlat
push
call
pop
in
mov
enter
cmp
jno
aad
pop
and
xchg
mov
mov
fidivrl
or
pop
mov
push
sbb
je
xchg
lods
add
mov
out
imul
inc
cmp
pushf
mov
fistpl
sub
sbb
in
mov
sbb
lods
lods
rorl
push
pushf
add
call
and
mov
clc
sub
shl
and
push
sub
loope
sub
xor
xorl
in
xchg
jae
mov
jmp
hlt
add
xor
vmovaps
sbbb
mov
jno
cli
push
xchg
xorb
dec
jns
push
sub
add
push
jmp
icebp
mov
sub
stos
mov
adc
xchg
ror
mov
adcb
out
andl
pushf
xchg
push
jae
dec
rep
mov
scas
fdivrl
ret
or
sbb
jp
jle
cwtl
pop
pop
xor
push
lods
fcmovne
sbb
enter
push
adc
mov
mov
jl
roll
or
movsl
cmc
les
std
mov
test
outsb
inc
mov
sbb
adc
xor
cli
lods
sub
xchg
xchg
outsl
xchg
imulb
int3
mov
or
xchg
and
cmpsl
fsubrl
xchg
in
rcl
sti
enter
mov
mov
rcll
add
adc
cmp
xchg
inc
add
mov
adc
jle
outsb
push
xor
popf
ret
icebp
and
rorb
jle
dec
in
adc
loop
cmp
inc
scas
jp
jo
dec
push
push
dec
sbbb
jmp
xor
sbb
push
pop
xorb
fldcw
es
adc
mov
xchg
and
mov
insl
push
dec
jne
aam
mov
push
dec
sub
dec
pusha
add
mov
jo
and
out
jg
sahf
in
xchg
insl
cmp
pop
in
dec
adc
xor
dec
das
pop
mov
mov
mov
sti
mov
mov
jae
arpl
pop
jmp
sub
jno
add
pop
cmp
lock
sbb
sub
xchg
test
pop
mov
hlt
mov
xor
inc
xchg
sbb
lods
repz
adc
push
insl
mov
xor
push
push
and
pushf
and
pop
cmpsl
clc
push
xchg
sub
mov
mov
xchg
rcl
repnz
imul
dec
and
mov
push
and
cmpsl
lret
and
pop
sbb
mov
repz
scas
xor
jecxz
sbb
test
push
leave
sub
out
sbb
fstpt
jb
ljmp
cltd
xchg
pop
stc
mov
mov
push
emms
add
add
mov
mov
and
adc
scas
sbb
push
adc
fcomp
lea
push
jae
cmp
repz
hlt
mov
pop
mov
fwait
mov
mov
jl
sub
cmpsl
inc
leave
notb
outsb
out
xor
fmull
or
add
dec
addr16
dec
or
push
repz
mov
or
imul
fmull
divb
sub
rcr
add
jmp
adc
nop
add
mov
sub
in
mov
popa
xchg
filds
cmp
bndstx
xchg
lret
dec
mov
test
ret
out
addr16
cmpsl
out
push
push
pop
lods
jg
dec
loop
dec
jmp
lret
pop
add
popa
push
das
lret
mov
pop
ret
xlat
jecxz
fcmovne
lahf
add
add
in
push
out
adcb
mov
jbe
inc
and
out
and
sub
in
cltd
jl
push
frstor
sub
xchg
stos
xor
ret
or
ja
lock
push
pop
or
shlb
add
xchg
insb
clc
fnsave
repnz
fsts
mov
and
bound
jg
mov
xor
fchs
or
int
xchg
and
mov
cmp
add
lea
lahf
xchg
xor
sub
pop
add
lcall
sub
loop
pop
test
jne
xor
inc
cmp
out
xor
ret
mov
outsl
mov
sbb
aas
in
dec
iret
sub
sahf
xor
decl
shrl
das
fpatan
scas
jmp
ret
push
jl
sbb
adc
pushf
in
ror
ficomps
xor
push
test
jns
push
cli
loope
popf
jg
rcrb
xchg
pop
xchg
inc
test
pop
ljmp
idivl
xor
pop
and
mov
fwait
adc
sti
mov
outsb
cmpsb
iret
pushl
fcmovnb
xchg
icebp
adc
cmpsl
sub
mov
stos
hlt
in
test
mov
lods
mov
mov
xor
push
mov
jle
js
mov
inc
loop
cmpsl
ljmp
outsl
loop
jecxz
lods
data16
fistpl
insb
gs
insl
mov
sbb
xor
imul
sbb
das
inc
lret
sbb
push
xchg
scas
lea
in
jb
sti
adc
pop
push
jl
jmp
in
mov
push
cmp
dec
xor
sarl
cmp
pop
adc
aaa
in
ds
repz
push
rolb
out
and
insl
ljmp
adc
sahf
iret
inc
aas
in
xor
pop
ret
push
and
pop
fbld
das
lret
or
scas
jmp
int
outsb
bound
loop
pop
mov
js
xor
stc
sub
rorb
cmp
pushf
ljmp
and
add
mov
add
in
mov
inc
inc
ja
rcr
dec
push
lds
subb
push
pop
push
jp
loopne
in
sbb
adc
arpl
in
inc
ret
cmp
mov
mov
pop
add
pop
lcall
daa
cmp
xchg
lods
mov
arpl
orb
jb
sbb
adc
jb
xchg
mov
dec
popf
sbb
andl
adc
in
mov
repnz
sahf
push
fwait
inc
pop
in
xchg
xlat
cs
pop
push
nop
fs
dec
test
iret
leave
or
icebp
neg
xor
cltd
jle
cmpl
sbb
dec
pusha
ret
adc
inc
mov
fsubrs
mov
xor
lcall
cmp
aad
push
leave
cmc
ljmp
mov
cmpsl
mov
mov
adc
mov
inc
mov
daa
je
cmpsb
fdivrs
adc
dec
pop
cmp
fwait
dec
xor
outsb
add
lcall
pop
ret
cmp
sbb
mov
or
sub
fnsave
or
ret
pop
sbbl
lret
repnz
cmp
sub
add
inc
sub
fdivrl
aad
and
lret
pop
xchg
cwtl
in
je
inc
xchg
roll
sahf
pop
add
ljmp
cs
xor
mov
cmovo
stos
movsb
fs
mov
jno
aas
add
adc
dec
test
sub
mov
pusha
dec
lret
pop
clc
mov
add
mov
movsb
mov
mov
in
scas
mov
push
movsb
or
testl
cmpsl
cwtl
sbb
cld
int3
dec
mov
icebp
sbb
jg
loope
push
xchg
mov
pop
inc
test
xor
sbb
js
scas
mov
iret
aam
push
imul
inc
xor
cmp
fidivl
addl
arpl
xchg
mov
xor
aam
pop
add
adc
into
mov
and
jl
out
outsl
adc
jl
movsl
xor
repz
mov
cld
sub
push
nop
outsb
shlb
mull
xor
inc
mov
pop
clc
mov
mov
jg
add
loop
ret
jae
cs
inc
cld
and
xchg
lock
mov
cs
mov
mov
xor
push
lret
add
add
pop
inc
jae
jmp
pop
addr16
movsb
cmpsb
sbb
sarl
movnti
fdivrp
fsubrl
inc
and
mov
cltd
sub
test
fadds
pusha
cmp
imul
pushf
jecxz
divl
or
sahf
xchg
aaa
cld
test
adc
xchg
or
inc
popa
ss
leave
or
hlt
and
xchg
jecxz
mov
adc
push
lret
jg
jle
push
push
aas
lods
test
and
mov
fildl
pop
insl
popa
int3
iret
je
cmp
or
mov
lods
jmp
loopne
push
add
stos
inc
mov
xor
push
out
dec
dec
sub
lds
sub
fists
adc
mov
adc
and
cmp
xor
xchg
test
mov
sarl
mov
jge
fs
pop
cmp
or
jg
clc
call
dec
dec
adc
jns
mov
push
push
insl
das
int
xchg
repz
cmpsl
repz
cmpl
imul
leave
jbe
mov
push
xor
push
es
sti
jnp
pop
mov
cmp
int3
mov
outsb
cwtl
xchg
or
pop
jno
mov
test
sahf
divb
push
test
inc
mov
fimull
arpl
cld
jmp
pop
loope
pop
cmp
sbbl
push
roll
push
out
cmpsl
mov
lret
test
repnz
mov
pmaxub
or
jnp
popf
jp
rcl
loop
mov
dec
dec
lea
loope
add
cmp
push
or
dec
push
fcomps
fldl
jle
shrb
mov
sbb
sahf
adc
jbe
jns
jnp
loopne
push
movsb
test
jecxz
lods
pushf
mov
mov
popf
pushf
inc
mov
loope
push
xchg
call
sar
mov
xchg
mov
sbb
mov
pop
sbb
adc
dec
mov
lods
xchg
movsl
test
es
jo
xor
xor
ss
push
pop
push
mov
leave
int3
jae
jnp
push
pop
pop
mov
cmp
dec
aaa
aaa
adc
les
lods
pop
out
push
sub
mov
mov
dec
sub
mov
fisttpll
outsb
shlb
jbe
lock
mov
inc
aaa
insb
into
icebp
jno
and
shl
cmp
mov
and
xchg
xchg
add
in
dec
js,pn
sub
mov
or
adc
cmp
ret
in
or
je
lret
jecxz
cwtl
insl
dec
mov
xorl
and
sbb
cmp
sti
movsb
ljmp
inc
pop
push
and
push
cmp
into
sub
lds
cmc
push
xor
iret
lea
pop
fildll
adc
inc
lds
popf
sti
xor
daa
dec
lcall
inc
and
and
jecxz
fnsave
xchg
jns
xchg
arpl
mov
fiaddl
sti
xor
dec
mov
outsl
inc
xchg
shrl
out
xrelease
daa
pop
aad
adc
mov
cmc
cmp
sub
cli
lcall
sti
nop
lcall
lahf
jbe
mov
inc
pop
rol
add
cmc
aas
mov
shlb
lods
mov
cwtl
in
inc
loop
test
mov
xchg
imulb
mov
jge
xor
push
xchg
pop
xchg
lret
mov
xchg
shl
faddl
enter
jge
cltd
popf
shrb
jecxz
inc
xchg
cmp
leave
pop
in
jae
aad
xchg
mov
pop
sbb
ret
fdivr
call
roll
aad
ja
mov
ljmp
add
in
pop
mov
cwtl
in
and
roll
dec
test
jl
adc
inc
or
shrl
sub
aaa
jns
xchg
mov
sbb
xor
bound
imul
xor
lea
add
adc
push
callw
popa
push
test
stc
negl
inc
cli
inc
je
push
inc
stos
in
ja
rorl
lods
push
push
mov
outsb
xlat
push
push
inc
adc
mov
out
xchg
push
das
mov
push
cmp
mov
fst
ret
or
loope
in
cmp
out
mov
sbb
loope
int3
js
add
dec
lods
hlt
je
cmp
shlb
shr
stos
mov
cs
pop
or
mov
das
lahf
pop
mov
mov
nop
cwtl
daa
rcrb
mov
mov
mov
and
cld
test
mov
sub
stos
scas
cmp
orl
fisubrs
dec
or
dec
iret
pop
leave
inc
push
mov
es
adc
jbe
xor
mov
xchg
lcall
push
enter
or
fcmovu
or
jl
std
sub
leave
mov
popf
dec
lods
pop
pop
and
out
adc
add
add
lods
push
loope
sbb
mov
xchg
rol
dec
add
outsl
lods
mov
loopne
aaa
cmp
lcall
imul
sub
jle
sub
xchg
jg
into
xchg
cmp
clc
jecxz
out
cmp
imull
orps
faddp
lock
imul
jge
add
mov
out
testl
imul
pop
ja
push
pop
adc
in
add
daa
cmp
data16
fstl
rcrl
jne
xor
popa
lahf
jmp
and
pushf
push
push
pop
mov
jl
mov
movaps
cmpsb
mov
mov
cmc
mov
sbb
insb
sub
dec
push
xchg
xor
jb
adc
subb
add
cmp
aam
xchg
and
loop
jno
dec
xchg
cli
mov
hlt
cmp
dec
xor
mov
mov
popa
sub
adc
xchg
in
divl
cmpsb
xchg
pop
outsb
jns
pop
out
adc
outsl
and
lcall
jns
inc
mov
jg
aaa
jne
push
sbb
call
cmpsl
add
mov
in
sub
stc
nop
divl
mov
mov
sbb
lds
repz
out
jl
push
repnz
jnp
std
addr16
jle
rcrl
les
sbb
sub
sahf
add
push
push
insb
popa
inc
sub
add
push
je
out
fdivs
cmp
xor
aaa
cli
lock
sub
lods
popa
inc
add
push
xor
xor
sahf
mov
js
push
aas
lret
cmc
fs
dec
insb
push
maskmovq
idivl
pop
fstl
aaa
jbe
arpl
nop
int
iret
je
idivl
cwtl
movsl
je
into
cmpsl
call
mov
es
lods
dec
and
cmp
push
mov
xchg
in
mov
int3
dec
or
fimull
mov
aam
scas
aam
mov
sub
adc
dec
fiaddl
inc
iret
or
jl
cs
js
sbb
scas
adc
pop
outsb
sbb
in
dec
xchg
imulb
pop
out
cmovbe
push
add
xabort
push
lcall
push
clc
push
pop
aam
pop
mov
add
inc
inc
jb
and
inc
pop
push
mov
scas
jae
imul
cmp
hlt
inc
mov
dec
and
xchg
cmp
imul
in
cmp
addb
dec
sub
mov
repz
negb
sub
fildll
stos
mov
sub
or
incl
je
adc
mov
xlat
jle
cmp
sub
lret
xchg
xchg
movsb
mov
jb
mov
mov
enter
push
cmp
std
nop
add
test
lea
xchg
xorb
jmp
rcll
pop
fidivl
ss
shll
mov
loopne
lcall
outsl
sub
sub
add
push
popf
push
mov
in
inc
out
push
mov
jge
fbld
mov
adc
das
arpl
test
testl
jecxz
add
mov
push
jb
aam
xor
out
xor
outsb
xchg
xlat
sbb
gs
xor
mul
xchg
in
stc
je
mov
cs
in
adc
cmp
dec
std
mov
mov
aaa
pushf
sub
xchg
xor
sub
jnp
jno
pop
arpl
sahf
mov
imul
int
and
adc
ror
fstpt
and
loop
fstpl
into
mov
pop
or
adc
inc
js
sbb
inc
mov
lret
or
fstpl
jo
mov
mov
inc
ret
push
loop
fs
xor
in
mov
scas
sti
cli
inc
mov
in
sbb
mov
add
xchg
mov
testb
iret
push
xlat
iret
orl
push
outsb
test
sti
cmp
xor
push
imul
mov
xchg
in
jp
jno
loopne
mov
rcrb
push
loope
sbb
xlat
sub
and
push
pop
fwait
rcll
rorl
popa
ja
mov
or
mov
test
mov
mov
lock
leave
loop
mov
mov
push
jnp
stc
rcrl
mov
scas
pop
fwait
cltd
lods
pop
sbbb
jp
sbb
sbb
lret
sti
test
inc
cwtl
push
xchg
stos
inc
pop
add
push
test
fs
sbb
adc
cmp
add
push
mov
pop
xorl
xor
sub
inc
dec
mov
cmp
cmp
push
cltd
mov
div
pop
sbb
jae
not
dec
push
das
lea
jne
jle
inc
leave
clc
gs
add
fcompl
add
sub
pop
cs
outsb
test
rorb
shll
insb
rcrb
cld
push
aaa
rclb
dec
cltd
sbb
xchg
jge
cmp
cmpl
outsl
sbb
stc
push
cmp
and
lcall
mov
enter
lcall
outsl
add
mov
cltd
lcall
js
pop
imul
mov
arpl
push
jb
push
jae
xor
andl
sarl
outsb
lods
aaa
mov
cmp
and
sub
aas
in
mov
sbb
push
sarb
lahf
scas
lahf
lcall
xor
jo
pop
jae
lret
jg
inc
mov
jmp
xor
or
or
dec
mov
aas
push
push
pop
pop
stos
cmpsl
and
push
rcrb
xor
outsb
test
jo
cld
inc
divb
test
into
repnz
adcl
js
and
movzwl
adc
mov
pop
dec
mov
aam
pushf
push
bnd
xchg
add
mov
in
test
mov
mov
mov
in
mov
push
in
aad
in
dec
in
cmpsb
jne
dec
pop
cmp
movsl
xorb
jecxz
outsl
inc
mov
jge
mov
mov
xlat
sub
jns
mov
xor
popl
jecxz
out
stos
inc
pusha
push
jne
out
sbb
icebp
mov
fistl
lret
push
mov
xor
vunpcklps
xchg
bound
xchg
push
ret
outsl
rclb
sti
in
leave
xchg
mov
addr16
mov
cltd
fwait
lods
or
add
in
mov
sbb
scas
jo
daa
dec
enter
mov
sub
cld
mov
and
cmpl
pop
push
inc
mov
xchg
jecxz
loopne
enter
cmp
pop
dec
fisubrl
pop
inc
push
adc
mov
sub
into
imul
sub
aaa
sbb
pop
push
pop
mov
adc
sarb
in
cmp
pop
push
push
jmp
fwait
in
lret
dec
data16
lods
sahf
imul
data16
xlat
xlat
cmp
and
inc
pop
pop
insb
mov
adc
loop
sub
in
cli
push
stc
xor
and
push
mov
add
inc
fistpll
mov
test
gs
sub
and
stc
movsb
call
pop
mov
orl
stos
adc
jns
add
pop
das
pop
arpl
or
int3
movsb
push
lods
ret
repnz
push
push
and
lea
xor
lcall
cmp
pop
int3
mov
cmpsb
data16
enter
mov
jp
lea
out
sahf
iret
idivb
pushl
sub
lds
stos
lds
aad
adc
jnp
mov
lcall
push
mov
in
outsb
gs
sbb
push
insl
sub
jmp
push
inc
dec
test
test
pop
mov
aaa
popf
push
gs
xor
addb
dec
andl
and
sub
outsb
adc
mov
or
and
cmp
scas
and
jno
orl
nopl
mov
dec
jae
divb
jmp
pop
pushf
out
sti
push
mov
lret
ljmp
dec
sub
add
or
cmpsl
sub
fistl
sbb
jne
rcrb
push
test
pop
imul
jge
jle
shlb
test
xchg
jno
mov
mov
in
leave
or
orl
inc
in
enter
enter
in
pop
ss
mov
inc
les
out
out
mov
sub
leave
or
push
sub
xchg
fsubrs
add
fs
dec
insl
push
mov
rolb
push
xchg
loopne
adc
mov
shrl
cld
push
das
adc
aam
pop
cmp
aaa
scas
pop
int3
sbb
and
push
test
leave
bound
mov
jg
inc
gs
sbb
inc
call
push
clc
jne
test
xor
test
xchg
ja
cltd
loopne
in
mov
jmp
pusha
sbb
sbb
stos
jmp
aad
ljmp
or
in
pop
mov
sub
sub
mov
repz
jg
and
cli
shlb
xchg
or
and
das
dec
lds
ljmp
and
fsts
cmp
ficomps
mov
xchg
pop
popa
cmp
into
jg
out
out
out
repnz
jl
push
cmp
dec
mov
lds
push
jbe
andb
repz
popa
out
loope
pop
enter
repnz
fs
sahf
mov
fs
loope
loopne
adc
xor
ret
pop
inc
sahf
fs
adc
add
cmp
es
jp
dec
xor
or
mov
or
xor
push
push
jns
inc
stos
xchg
hlt
push
add
jl
adc
jmp
xchg
pop
push
testb
std
inc
add
out
into
mov
rcr
subb
inc
pop
lods
pushf
shll
pop
push
xchg
daa
imul
imull
rcrb
adc
fldt
cs
decl
cwtl
jbe
aaa
sub
movsb
mov
addl
mov
sahf
icebp
mov
and
lcall
jne
mov
into
push
jp
push
les
xchg
daa
and
sbb
sub
mov
ja
in
adc
sbb
jns
js
cmpsb
outsb
pusha
add
sub
int
pop
jbe
lods
clc
mov
cmpsb
insb
inc
xchg
mov
rolb
mov
pop
dec
xor
sbb
test
lcall
loopne
mov
mov
push
jbe
cmp
or
inc
test
ret
mov
mov
push
cs
adc
stos
testb
dec
mov
test
wrmsr
jecxz
test
dec
pop
lods
lret
sub
xchg
cmpsb
sub
push
ret
rcll
xlat
pop
icebp
insb
dec
sub
xchg
sbb
push
add
fnstcw
sbb
js
push
jge
fwait
jbe
cld
insl
adc
add
push
inc
and
ret
and
ficompl
mov
xlat
fildll
xor
pusha
mov
dec
insl
inc
jg
into
in
xor
lret
stc
ds
pop
or
pop
aaa
lds
leave
notl
and
stos
xchg
insl
dec
lds
mov
rol
test
jno
mov
iret
je
pop
je
add
fsubl
loope
xor
push
shrl
sahf
pop
cmp
inc
out
jae
stc
cli
jle
cmp
mov
scas
in
lret
mov
out
adc
adc
lcall
scas
mov
pop
push
addr16
lds
pop
sub
les
xchg
pop
add
xchg
loope
int
popa
mov
adcl
xchg
xchg
add
lcall
outsl
stos
xor
icebp
cmc
or
cmpsl
mov
scas
mov
sub
pop
ds
cwtl
inc
xchg
mov
xchg
iret
inc
insl
mov
popa
cmp
cli
lret
testb
hlt
sub
jge
mov
mov
jne
push
pop
clc
outsb
hlt
out
in
dec
movsl
or
enter
jne
sti
jns
dec
add
pop
enter
stos
fsts
cwtl
add
dec
or
jne
dec
mov
scas
in
mov
mov
mov
xor
xchg
mov
sbb
adc
int
adc
mov
imul
sbb
outsb
inc
in
xchg
loop
push
inc
nop
mov
inc
in
ret
sbb
icebp
stos
xchg
fxch
ss
lahf
and
cmc
js
pop
out
inc
add
mov
testl
mov
xor
fnstenv
cmc
cli
sti
push
add
fisubs
push
push
sbb
insb
mov
shrl
pop
push
or
xor
nop
sbb
dec
xchg
and
shll
dec
shrl
lahf
cmp
stos
dec
roll
imul
inc
mov
sar
ret
sbb
push
push
mov
xlat
inc
out
mov
mov
cld
jle
test
jnp
sahf
inc
nop
cltd
icebp
push
mov
stos
push
mov
jl
jp
and
stos
addr16
cmpsl
lock
sub
and
jo
and
pushf
in
and
adc
or
mov
imul
das
xor
sahf
inc
clc
fdiv
inc
movsl
imul
ss
iret
cmpb
push
lret
ret
adc
xchg
out
mov
lret
xor
mov
add
fdivp
adc
cmpsl
pop
mov
shl
inc
fnstenv
fistps
das
inc
call
int3
cmp
stos
and
aam
mov
cmp
push
cmpsb
or
push
mov
sbb
sbb
test
add
xchg
into
insb
jb
ss
stos
xor
insb
out
pop
adc
pop
testl
imul
jno
bnd
dec
shl
aad
jge
mov
popa
rsm
ficompl
cs
cmpsb
lea
stc
movsl
cmpsb
sub
je
or
into
inc
decb
cmp
xchg
call
lret
fcompl
cmc
out
mov
in
push
movsb
add
loop
pop
lea
push
and
incb
push
jno
jge
adc
jno
addr16
mov
jne
testb
or
or
outsb
call
in
ret
pop
ljmp
xor
push
popf
xchg
xor
jle
sub
int3
xchg
jbe
push
cmpsl
xchg
ud1
xor
jg
cmp
aam
shl
xchg
mov
lock
jno
sbb
pop
cmp
sbbb
add
sbb
ss
outsl
fucompp
pop
cmpb
pop
fwait
xchg
insb
dec
aad
test
cmp
mov
and
xor
loop
add
mul
jnp
sbb
push
mov
mov
in
ja
sub
sub
or
add
aaa
xchg
jne
fwait
stc
or
push
gs
mov
enter
pop
test
test
and
sub
out
les
ffreep
push
mov
imul
jp
mov
call
jge
mov
xchg
add
lods
sub
xor
insb
lods
into
loopne
cmp
out
adc
outsl
push
std
cltd
cmc
push
imul
insb
or
addb
dec
outsb
sbb
mov
fwait
daa
ja
pushf
mov
adc
hlt
fistpll
outsl
jne
jbe
dec
sbb
fstpl
out
mov
lahf
jmp
lea
push
imul
sub
jecxz
inc
daa
xor
bound
iret
in
pushf
imul
lea
dec
mov
bound
fwait
mov
or
push
ret
out
xor
adc
out
inc
test
pop
mov
das
inc
lock
xor
xchg
mov
sbb
push
pop
cmpsl
in
push
xchg
jmp
xchg
pop
lret
movsb
adc
jno
ja
into
pop
repz
push
mov
enter
loopne
or
nop
popf
lock
inc
pop
mov
pop
push
in
fimuls
mov
mov
ja
pop
add
clc
jbe
mov
xor
pusha
adc
scas
sarl
cmpsb
jno
out
adc
mov
push
adc
in
pusha
sub
fistpl
xor
ucomiss
cli
mov
insb
scas
adc
add
nop
fidivs
lods
outsb
jle
inc
xor
loope
aaa
cmp
pop
mov
mov
jmp
int
out
jno
ds
insl
push
mov
or
pop
mov
out
push
inc
sub
lcall
sarb
dec
add
pop
jp
and
sar
xchg
scas
in
nop
sarl
ds
add
imul
xor
jl
lcall
in
aam
jge
add
aam
arpl
test
xorb
movsl
cmp
clc
cmp
push
into
mov
dec
dec
es
mov
shrb
xor
and
icebp
in
imul
insb
subl
cli
mov
or
mov
inc
jno,pt
and
sub
add
fdivl
stos
insl
mov
inc
icebp
call
test
mov
shlb
push
jns
test
xchg
fidivrl
loopne
es
lret
outsl
mov
ss
sbb
xor
cmp
cld
mov
pop
rcr
mov
das
outsb
or
adc
and
dec
jg
xchg
push
fmul
xchg
subb
jno
imul
out
in
mov
mov
loop
inc
adc
nop
enter
pop
xchg
inc
xchg
loope
jmp
decl
push
idivl
xchg
push
inc
add
outsb
push
add
test
hlt
pop
or
adc
cmp
mov
scas
cld
jno
cs
cmp
inc
pop
jb
fcoms
cmc
pop
xchg
into
xchg
pushf
cmp
cmp
and
cmp
movsl
dec
cmp
sub
dec
les
addr16
add
mov
adc
fs
sbb
cmp
idivl
dec
sahf
movsl
lods
mov
mov
mov
dec
int3
into
sub
loop
mov
pop
arpl
dec
mov
add
cmpsb
int
jbe
xorb
dec
aaa
sub
cmp
aaa
fdivrl
jo
cmp
mov
leave
pop
sti
out
sahf
repz
ljmp
pop
push
fs
movsl
enter
and
mov
mov
jp
mov
int
push
sbb
dec
pop
xchg
and
popf
add
out
cld
mov
fwait
sub
imulb
gs
stos
mov
or
imulb
in
jne
in
xor
leave
in
ror
loope
lds
adc
lods
mov
dec
rcrb
out
jecxz
adc
push
iret
scas
sub
mov
imul
fldl
jns
repz
not
vpmullw
arpl
sbb
cld
xor
int3
adc
repnz
cmp
jge
add
and
mov
loop
mov
std
clc
jns
mov
test
shll
imul
jmp
std
lret
adc
js
xchg
fdivl
sub
pop
stc
adc
leave
inc
cmpl
out
loope
and
mov
mov
sub
lahf
adc
jae
xchg
xor
or
sub
insl
sti
xor
aam
adc
push
cwtl
jbe
popf
jecxz
aaa
push
fstps
je
cmp
xor
repz
data16
cmpsl
sarl
xor
sub
sbb
adc
cmpsl
outsb
cmpsl
loope
std
aaa
dec
imulb
sbb
pop
push
push
in
mov
jge
lcall
adc
movsb
cmp
push
ljmp
jne
mov
mov
mov
jmp
cmpsl
std
add
pop
jo
mov
push
mov
dec
sub
sbb
repnz
ret
cmp
test
jns
nop
add
and
bound
loopne
lods
add
sti
arpl
xchg
leave
loopne
fcmovnu
outsb
mov
addr16
std
mov
aad
sub
push
sub
adc
xchg
jb
cmp
pop
sahf
sbb
aas
repz
mov
inc
dec
adc
aaa
mov
push
daa
sbb
xchg
cmp
popa
loop
inc
sub
mov
out
dec
sub
out
mov
jge
mov
je
mov
dec
mov
fimull
fiaddl
fimull
stc
mov
or
sahf
pop
bound
inc
int
aam
ja
jb
inc
fsubrs
fstpl
stos
clc
iret
jmp
stc
sbb
pusha
adcl
cmp
inc
jmp
xchg
sbb
jno
adc
push
std
xchg
lret
subl
sub
add
ljmp
roll
mov
sub
shrb
mov
xchg
arpl
xchg
pop
lcall
movb
scas
push
push
pop
mov
insl
push
leave
jno
sub
movsb
bound
cmp
in
inc
mov
dec
push
in
mov
mov
ja
cmp
lea
pop
sbb
jecxz
add
cmp
jp
and
ficomps
rcll
gs
pop
dec
test
mov
mov
adc
xor
cmp
mov
or
rolb
arpl
cmp
add
cmpsb
mov
sub
dec
lret
fidivl
xchg
adc
scas
sahf
test
int
and
xor
mov
and
lock
popf
push
imul
icebp
lcall
push
lea
mov
mov
mov
pop
std
push
cmp
adc
sub
and
jb
and
jnp
out
ret
add
dec
loop,pt
icebp
add
jae
adc
inc
push
push
je
fdiv
push
mov
mov
leave
call
in
xor
and
mov
inc
adc
pop
or
ja
adc
shlb
insb
gs
push
dec
pop
out
sub
cmp
pop
jmp
imul
push
cmp
bound
bound
push
dec
mov
sub
int
sbb
xlat
xchg
imul
ret
out
scas
in
mov
push
into
test
sbb
aaa
adc
bound
xchg
jae
daa
loop
ja
in
adc
imull
imul
and
xchg
jle
cmp
sub
mov
dec
and
ljmp
lret
push
outsl
add
shll
sub
out
xchg
ss
lock
mov
push
imul
add
inc
adc
add
arpl
inc
jge
mov
or
mov
pop
aad
adc
push
xchg
sbb
xchg
rorl
sbb
xchg
out
lret
fchs
fwait
shll
inc
sbb
call
adc
xor
and
bound
std
jnp
xchg
xchg
inc
add
pop
test
ret
dec
punpcklwd
and
mov
stc
sahf
inc
insb
test
lahf
sub
ljmp
lret
push
jmp
push
pop
popa
mov
ljmp
in
sub
adc
cltd
aad
pushf
mov
stos
xchg
mov
dec
inc
pop
mov
cmpsb
das
pop
arpl
daa
addr16
xchg
imul
rcrl
ja
mov
mov
imul
inc
movsl
xchg
rcrb
xor
popa
stos
inc
xor
dec
add
adc
int3
fxch
fdiv
cli
scas
test
sti
inc
rcl
push
dec
push
xchg
addr16
jge
push
jge
mov
divl
sub
dec
scas
fucomi
aam
pop
jle
bound
and
dec
push
cmp
sub
and
pop
lahf
adc
mov
aaa
insb
std
rorl
fistps
shll
jcxz
and
lods
addr16
ljmp
cmp
pop
ret
cwtl
sbb
lret
and
mov
sub
and
repnz
enter
jp
mov
das
mov
imul
bound
ja
in
movsb
sub
xchg
sub
aaa
ds
divl
loope
testl
iret
mov
push
or
ljmp
lods
mov
cli
dec
xchg
jae
inc
aam
fstps
or
dec
inc
inc
fcompl
mov
rorb
mov
addr16
cmp
pop
add
dec
mov
jl
lahf
test
inc
outsb
jmp
cli
lods
das
ja
int3
push
repnz
call
daa
lret
xor
mov
jmp
xor
inc
jno
in
gs
jb
outsl
mov
and
push
and
xlat
or
pop
push
call
bound
in
rorb
dec
lret
xchg
divl
sub
cli
mov
inc
clc
push
push
mov
mov
cmc
inc
push
iret
out
mov
jnp
push
idivl
adc
aam
movsl
mov
mov
lret
popf
shlb
xchg
sarb
movsb
test
mov
mov
orb
arpl
inc
sti
leave
fmul
jb
jns
shr
in
movsl
add
lds
imul
mov
mov
pop
jo
cmp
scas
push
rclb
in
mov
clc
test
shll
mov
leave
push
mov
leave
aad
mov
xchg
sbb
insb
stos
push
mov
pop
imul
jo
decb
push
jnp
adc
lret
dec
push
push
adc
repnz
push
repz
and
arpl
add
push
push
push
sbb
in
mov
stos
mov
cmpxchg
or
adc
test
cmpsl
add
iret
cs
sbbl
sbb
push
adc
ret
js
jecxz
and
sbb
cmp
sbb
sti
and
lea
sbbl
and
dec
pop
fldl
aad
cmpsb
push
xor
or
dec
xchg
in
outsb
int
stos
fwait
sub
repz
adc
mov
mov
pop
sbb
lods
mov
rorb
fists
jle
add
fbld
pop
cmp
fxch
xor
or
in
cmp
lcall
push
sbb
or
fstpl
jecxz
dec
dec
stos
fwait
dec
imul
cltd
ret
enter
or
and
push
xchg
imul
mov
outsb
push
out
imull
pop
xchg
push
rcrb
enter
pop
fwait
std
rorl
pusha
push
lcall
cmpsb
mov
and
fst
push
or
popa
inc
pop
jge
cs
inc
mov
add
stc
stos
jp
sar
mov
mov
loope
js
imul
cmpsl
insl
pop
int
les
and
jbe
push
sub
xchg
mov
add
sub
jb
mov
push
ja
xchg
mov
popf
idivl
js
mov
cltd
push
jp
aam
into
mov
cmpl
ficoml
fs
adc
xor
adc
lcall
bound
xchg
xchg
outsl
mov
mov
dec
iret
lret
jp
in
mov
sub
imul
lahf
mov
stos
aam
inc
jmp
cmp
sahf
xchg
sbb
rcr
outsl
ret
mov
stc
mov
out
ljmp
xor
push
fsubrs
mov
or
jge
fnsave
dec
lret
or
loop
pushf
in
mov
mov
inc
jo
loope
add
subl
loope
add
and
and
iret
aas
mov
mov
mov
mov
repnz
fcomps
incl
xchg
mov
mov
loope
and
or
stc
mov
mulb
lahf
mov
xlat
cmpsb
out
mov
mov
xchg
mov
mov
std
test
call
fsub
clc
out
scas
sub
in
inc
and
imul
mov
mov
out
sub
or
xchg
negb
sbb
icebp
cmp
ja
aas
pop
cmpsl
lods
pop
jecxz
dec
sarl
and
xchg
push
or
test
push
mov
out
pop
iret
or
lea
std
push
rolb
outsb
inc
jne
jo
loope
aas
sbb
jno
nop
mov
and
int3
addb
jmp
aam
movsl
mov
addr16
xchg
dec
push
faddp
rcll
stos
mov
jbe
ret
pop
clc
mov
iret
ss
out
sarb
mov
dec
sbbl
xchg
push
pop
inc
cmp
inc
lods
daa
pop
shll
push
xlat
jle
loop
sbb
rcll
jns
lods
add
in
sbb
jge
in
mov
xchg
sahf
lea
mov
hlt
mov
es
and
sub
sub
xor
or
add
xchg
out
xchg
push
shrl
outsb
dec
into
mov
jle
lret
mov
and
cltd
movsl
gs
into
sbb
push
push
and
sub
push
mov
popa
push
in
test
inc
inc
ljmp
inc
das
dec
scas
sub
mov
aaa
lds
sub
int
es
scas
pop
adc
ret
inc
int3
jbe
adc
fs
push
mov
lret
adc
xchg
iret
mov
sarl
jmp
in
in
cmpsl
mov
je
adc
mov
scas
lret
aad
cmp
push
fbstp
push
jbe
fucom
jge
mov
sbb
add
inc
dec
jb
lock
stc
adcl
mov
repnz
push
dec
bt
scas
daa
fistpl
fwait
mov
xor
pop
jb
insl
roll
sbb
xchg
gs
adc
xor
mov
fs
inc
mov
in
push
insb
rorb
sub
daa
mov
mov
sub
pop
sarl
out
push
enter
mov
lods
mov
mov
ljmp
xchg
push
movsb
push
dec
push
mov
xchg
jecxz
cmp
jge
sti
fisttpll
xorb
sub
sbb
pop
mov
xchg
adc
hlt
jne
loopne
outsl
xchg
inc
or
push
add
dec
bound
test
jb
push
push
push
cltd
outsl
adc
add
and
pop
stos
and
lods
xchg
xor
inc
cmp
out
cwtl
fdivrs
out
arpl
out
sbb
push
mov
xorl
push
jecxz
lds
mov
add
cmp
push
jg
sbb
js
mov
sbb
sub
jo
jb
cltd
nop
lret
cmp
icebp
sbb
push
cmpsb
mov
in
xor
out
into
mov
adc
fistpl
sbb
lret
inc
pop
mov
mov
xchg
imul
xchg
inc
cmpsb
xchg
rorb
stos
mov
jmp
push
out
fadd
mov
adc
adc
sub
in
in
or
les
stos
jp
out
inc
les
lock
add
clc
and
and
push
cmc
lods
jl
adc
dec
popa
mov
push
sub
push
stos
mov
leave
push
imul
mov
fisttpll
pop
sbb
mov
adc
sbb
je
pushf
lds
xor
arpl
arpl
mov
scas
mov
jnp
jbe
in
add
mov
cltd
push
xchg
cmp
jg
jge
push
insb
into
inc
cli
mov
sub
dec
adc
add
in
cld
inc
or
jne
stos
push
cmp
cmp
dec
sti
mov
and
xchg
pop
dec
mov
sti
movsl
dec
xchg
pop
enter
ror
cwtl
divl
scas
sbb
dec
fcompl
cli
fcmove
xchg
loope
adc
add
outsb
xchg
push
in
jmp
repz
mov
lods
out
stc
rol
xchg
fildl
test
dec
les
pusha
shl
pop
scas
ss
nop
pusha
mov
repz
lcall
fstpt
dec
mov
negl
cmp
lret
xor
mov
ret
aam
mov
sbb
ret
and
push
ds
shll
mov
xchg
add
loopne
mov
pop
and
lret
repz
cli
sub
js,pn
rclb
fbld
adc
inc
adc
inc
sub
jg
push
testb
in
fwait
and
arpl
pop
or
mov
outsl
arpl
das
ret
scas
jbe
and
int3
cmc
or
sbb
pushf
inc
cli
or
and
or
jle
xchg
in
pop
dec
ss
leave
mov
jns,pn
inc
nop
push
jp
adc
repz
cmp
dec
jo
mull
xchg
ret
dec
xor
lods
out
in
and
jmp
xor
adc
cmp
leave
mov
add
stos
clc
ljmp
repnz
stos
cs
and
mov
popf
or
pop
call
ljmp
mov
scas
or
fdivrs
out
and
es
aaa
cld
mov
dec
push
jp
aad
cmp
imul
daa
xchg
dec
mov
in
push
mov
or
bound
stc
xchg
jg
ret
aaa
mov
int3
push
test
sbb
mov
loop
and
mov
mov
lods
jmp
jp
mov
lds
and
push
inc
cmp
xor
outsl
mov
cmp
push
daa
cmpsl
out
push
or
fmuls
into
js
push
sbb
insl
test
cmp
jae
lods
push
outsb
lds
lea
int
inc
add
repz
pop
mov
gs
pop
sti
sbb
dec
imulb
pop
mov
sub
push
xor
cmp
enter
insb
push
sbb
std
in
icebp
stos
int
jge
mov
or
movsl
testl
pop
adc
xchg
cmp
mov
imul
sbbb
int3
inc
insl
pop
xchg
push
mov
daa
mov
mov
push
jno
pop
mov
mov
xchg
lods
push
add
andb
fcomps
mov
or
pop
out
mov
xchg
pop
sub
leave
stc
and
pmaddwd
nop
xchg
adc
stos
scas
adc
push
lea
cmp
fwait
outsl
mov
cmp
add
jl
into
xchg
xorb
addr16
mov
cmp
lods
outsl
dec
stos
rol
inc
ja
jno
and
cld
pop
lahf
jmp
and
inc
mov
add
jecxz
jecxz
in
or
inc
jb
push
and
add
inc
xchg
cwtl
pop
insb
or
addr16
bts
mov
pop
mov
adc
mov
inc
iret
push
lods
dec
ss
cmp
dec
sbb
lret
push
jne
push
testb
dec
jno
xchg
sar
pop
push
ss
js
ror
addb
push
jae
lods
pop
add
test
not
ljmp
dec
jns
lock
adc
cmp
xchg
dec
mov
fwait
jbe
addr16
out
sbb
cli
sub
sub
push
jb
jmp
inc
rol
rorl
aas
sbb
jmp
jae
jle
push
cmc
cmpsb
nop
fdivr
addr16
cltd
pushf
jno
icebp
std
sub
push
and
aam
out
fwait
cltd
mov
or
mov
xchg
pushf
lods
and
mov
mov
or
cld
pop
add
pop
pop
jbe
fists
mov
shl
jne
rcrb
lock
inc
push
jne
adc
in
xchg
fidivrs
push
push
adc
mov
aas
adc
out
pand
out
sahf
js
mov
stos
mov
jae
dec
arpl
inc
pop
jne
lods
fcoml
sub
iret
xor
lahf
fdivl
icebp
jg
mov
in
jge
and
push
xchg
std
in
inc
mov
cs
add
iret
sub
cltd
fs
xchg
cmp
lods
sub
push
xchg
xchg
add
and
mov
dec
out
es
rclb
sub
mov
push
add
repz
stos
cmc
fdiv
fucomp
in
fildll
pop
std
xlat
jmp
es
xchg
xchg
jne
ja
cmp
inc
bound
arpl
sub
mov
ret
adc
and
iret
cmp
ret
inc
fbld
jg
xor
mov
std
rcll
add
clc
lret
ret
movsb
ss
sub
add
pop
sbb
add
or
mov
insb
mov
adc
mov
sbb
aaa
push
pop
and
iret
xrelease
jecxz
test
cmp
outsb
mov
xor
sbb
mov
cmp
add
adc
enter
sbb
mov
aaa
mov
adc
leave
mov
adc
lock
outsl
pop
outsb
sub
and
mov
insb
pop
mov
je
mov
xor
sub
pop
pop
fnstsw
xchg
cli
lahf
popf
push
lods
add
sti
icebp
out
cwtl
or
sub
inc
lods
jne
stc
adc
mov
lods
mov
shrb
arpl
mov
push
xor
dec
push
rol
sti
push
and
mov
mov
cmpsb
push
dec
gs
sub
ss
or
xchg
outsb
adc
dec
mov
pop
scas
sub
pop
xorb
lods
stos
nop
scas
mov
aaa
pop
pop
outsb
jae
xor
push
sbb
mov
add
inc
fdivl
jg
pop
fidivrs
push
inc
lods
xchg
and
or
dec
sub
inc
pop
aas
fwait
jb
in
out
jl,pn
movsl
daa
sub
js
push
es
inc
mov
sbb
and
subl
sub
pop
mov
and
das
orl
mov
xor
decl
les
fidivrl
hlt
pop
dec
xchg
mov
add
add
aad
mov
popf
ffree
movsl
imul
fldt
aam
adc
dec
outsl
imul
adc
aad
jge
mov
test
outsb
inc
xlat
jb
popf
mov
sub
mov
ffree
icebp
repnz
outsl
xchg
inc
sbb
nop
xor
es
mov
add
inc
fwait
inc
push
cmpsl
jl
in
and
jnp
inc
scas
into
push
jb
dec
ja
lods
jae
mov
or
mov
dec
pop
push
pop
dec
stc
mov
insl
jnp,pt
jne
or
pop
bound
push
out
add
mov
lret
adc
jle
bound
andb
push
mov
leave
pushf
and
out
mov
leave
pop
test
xor
xchg
sub
inc
inc
dec
test
addr16
mov
arpl
and
ljmp
and
add
test
mov
mov
out
loope
jg
sbb
mov
les
pop
scas
sbb
sub
movsl
jmp
jae
inc
test
or
sbb
pushf
lret
scas
dec
aas
outsl
xor
popf
cmp
push
test
dec
call
js
and
rcl
testb
cmpsb
leave
test
mov
call
xchg
stos
test
mov
sub
fadds
and
sahf
mov
jnp
or
dec
cmc
loope
aas
jno
ss
fbld
adc
or
int3
stos
scas
mov
push
mov
push
pop
movsl
jno
push
in
arpl
gs
scas
pop
dec
sub
shl
mov
sbb
outsl
es
lea
pop
xchg
push
ja
mov
mov
jbe
pop
push
xchg
cwtl
out
ffreep
push
adc
push
jmp
fcoms
mov
iret
test
lea
lret
dec
dec
xor
adc
lea
sub
xchg
inc
jo
loope
jb
lcall
push
fwait
cmp
dec
and
outsb
stos
push
in
mov
or
ljmp
loop
or
pop
jb
or
popa
xorb
stos
cmc
add
leave
mov
cmp
push
push
test
test
or
jne
push
jne
hlt
push
jbe
and
add
jecxz
lcall
mov
dec
pop
out
imul
and
dec
lock
push
mov
add
and
movsl
push
push
dec
call
or
mov
push
testb
imul
loope
mov
jg
lret
in
jmp
jo
jmp
add
movsb
dec
iret
pop
mov
and
negb
dec
pop
xlat
lret
cmpb
or
add
mov
scas
push
in
pop
mov
ret
add
inc
ds
movsl
lods
div
scas
aam
cmp
test
aam
xor
cmpsb
outsl
cmp
push
mov
jmp
aam
xor
enter
fwait
jo
outsl
mov
mov
mov
mov
aad
cld
and
sbb
cmovae
jae
cli
insb
or
loope
fstpl
ss
imul
sbb
stc
jle
loop
out
sbb
daa
fsubrl
xor
dec
cmc
loopne
subb
daa
hlt
pop
xchg
mov
inc
mov
test
sub
insl
lahf
push
xchg
cltd
movsl
lds
jl
adc
xchg
pop
sbb
cli
in
mov
sahf
push
fcompl
clc
ret
enter
aaa
repnz
movsl
enter
cwtl
push
mov
test
rcrl
mov
les
js
js
sarb
jge
cmp
loope
push
mov
adcl
cmp
ljmp
sti
mov
cwtl
orl
ret
fiadds
mov
cmp
popf
lock
xchg
cmc
mov
aad
andl
mov
push
mov
fistpll
ds
and
out
into
out
mov
scas
frstor
pusha
js
xchg
mov
popa
fsubs
jbe
mov
daa
xchg
adcl
add
scas
adc
out
cmp
mov
cmp
pop
mov
outsl
jge
or
xor
call
int
mull
mov
xlat
ds
bound
in
push
hlt
bnd
pop
aad
aas
stos
push
mov
jg
sbb
popa
mov
es
fwait
dec
xchg
cmc
pop
add
dec
dec
lret
stc
adc
aaa
sub
fst
repnz
lock
xor
pop
xchg
fldcw
ss
jl
inc
mull
cld
jg
pop
addr16
mov
ss
dec
popf
cmp
jle
pop
add
rorb
test
mov
ret
inc
xchg
cltd
mov
lds
in
fisttpl
sbb
mov
dec
lods
aas
ret
fwait
mov
shl
xchg
push
loopne
outsl
cmp
lcall
dec
jae
push
and
sub
jl
bound
xchg
sbb
push
daa
mov
les
imul
std
or
add
lcall
aam
imul
scas
sub
lods
adc
mov
fs
push
bound
aas
inc
cmp
and
mov
repnz
push
pop
subl
shrb
inc
inc
pop
push
jg
push
xchg
stos
sub
ss
out
mov
inc
xor
mov
mov
push
xlat
inc
leave
test
cld
push
add
jmp
sbb
add
xchg
insb
mov
loopne
cld
test
idivb
jo
cmp
push
cmpsl
pop
sub
in
mov
push
jl
jne
repnz
shll
push
xchg
jns
and
ds
lahf
int
std
int
int3
mov
fistpl
adc
jmp
xchg
les
cwtl
out
inc
enter
inc
out
mov
out
fcoms
xor
push
push
sbb
xchg
fcom
cmp
dec
inc
mov
jns
sbb
xchg
mov
dec
mov
andl
outsb
push
aaa
ljmp
cmp
or
sti
mov
adc
mov
inc
xor
jns
xor
imul
mull
mov
int3
fadd
pop
mov
pop
jmp
pop
push
jbe
js
fstps
pusha
scas
push
fstl
dec
xchg
out
addb
js
ret
jp
fcom
push
aas
and
jg
jle
sub
fistpll
test
pusha
imul
add
rol
call
mov
or
mov
mov
mov
push
lods
xlat
sbb
popl
mov
rcrb
repz
jo
push
in
ja
xchg
lahf
xchg
mov
out
dec
xchg
sub
imul
int
or
pop
xor
dec
cmp
xor
adc
ss
sub
aaa
mov
or
sbb
push
les
aas
sub
add
loopne
cld
xor
scas
push
jbe
fwait
push
xor
dec
testb
xchg
rcrl
xchg
repz
aaa
test
mov
cmpsb
xchg
shlb
lcall
add
movl
mov
cwtl
sbb
xlat
pop
fmulp
and
nop
xor
stos
cs
pop
cmp
xchg
adc
jle
push
pop
sub
adc
lahf
jp
fsubs
mov
loop
sahf
data16
mov
iret
test
pop
mov
adc
xor
and
push
ret
jb
test
push
movsb
test
mov
adc
rol
mov
inc
daa
push
and
aas
aaa
jo
pop
pop
sub
xchg
stos
imul
ja
lods
call
xchg
push
xor
mov
sti
push
xchg
xchg
lcall
jns
jae
inc
mov
int3
out
sbb
popa
cmp
icebp
sbb
inc
cs
jmp
js
xchg
inc
push
lahf
aaa
loop
cmp
jno
ja
inc
jecxz
jg
in
ss
or
test
add
xchg
popf
sti
outsl
mov
push
and
out
bound
jg
mov
iret
mov
add
fimull
push
mov
push
jg
mov
ljmp
mov
push
and
adc
outsl
lret
bound
jge
push
fwait
or
loope
out
sti
pop
popf
mov
jb
movsb
in
mov
ja
or
add
mov
je
adc
outsb
outsl
mov
mov
aam
nop
and
push
mov
xchg
xchg
pop
push
cmc
or
mov
pop
popf
imul
dec
xlat
ja
adc
fistl
push
loope
movsl
out
ljmp
jmp
cs
in
adc
sbb
repz
cmp
data16
push
adc
arpl
inc
adc
push
or
aas
and
dec
into
xor
rol
xchg
loopne
pop
jne
sub
mov
arpl
mov
push
clc
test
rorl
inc
fs
bnd
in
and
das
cmp
test
mov
push
call
pop
mov
pushf
jbe
pop
mov
jbe
xor
aam
xchg
ficoms
and
adc
dec
mov
loopne
mov
cmp
lods
cwtl
fstpt
dec
sti
pop
xchg
sub
jmp
sti
jp
add
mov
pop
ljmp
jle
iret
or
sti
out
push
aad
sub
cmp
cmc
loop
add
es
mov
push
iret
add
in
andl
push
pop
adc
aam
lahf
xor
popf
lret
pop
and
clc
fwait
jo
mul
out
inc
cmpsl
and
andl
mov
xchg
pop
ljmp
inc
jns
mov
and
pop
xor
add
in
fnstenv
aas
outsb
fiaddl
push
pop
rol
out
out
icebp
mov
cli
xchg
movsl
mov
sbb
xor
fists
sbb
jecxz
ret
scas
adc
or
or
jl
ds
or
cld
shll
insl
pop
lock
mov
sbb
nop
jmp
mov
adc
jns
add
or
mov
test
cmp
and
and
stc
mov
rcl
je
das
cmp
mov
add
lret
fiaddl
inc
lods
addr16
or
das
leave
into
int
dec
mov
imul
xchg
push
adc
cmp
jae
push
xor
icebp
negb
dec
dec
and
mov
int3
cltd
and
lds
inc
sub
xor
xor
dec
sub
mov
add
jecxz
testb
sbb
inc
loopne,pn
xor
pop
dec
and
dec
inc
mov
add
inc
xchg
sbb
pop
fwait
and
cmp
stc
loope
cpuid
sbb
dec
dec
and
inc
call
leave
push
repz
xchg
xchg
inc
push
in
adcl
pop
arpl
lock
sbb
out
jg
sbb
dec
inc
mov
imul
imul
fsub
mov
ds
aad
add
pop
inc
sbb
loopne
sbb
jne
shlb
mov
inc
jg
testl
or
imul
and
inc
mov
adc
pop
cmp
out
mov
xchg
cmp
inc
loope
or
sub
add
mov
adc
push
push
jg
xor
or
shrl
pushf
pop
dec
mov
neg
out
adc
push
iret
adc
out
jp
mov
and
outsl
mov
jbe
fcomi
pop
in
mov
sbb
shrl
pcmpgtd
xchg
push
inc
aad
or
fwait
xchg
sahf
int
iret
idivb
mov
es
or
mov
xor
rcll
notl
int
dec
xor
inc
icebp
test
sbb
mov
xchg
sub
jmp
xchg
lods
dec
xchg
fucomp
mov
es
cs
enter
dec
mov
sbb
push
jno
es
or
sub
cld
test
insl
adc
dec
pop
dec
sub
push
adc
filds
xor
mov
add
push
or
pop
out
sbb
fistpll
inc
clc
jecxz
mov
fsubrs
cmp
adc
int
xchg
jne
push
cmp
adc
jmp
and
inc
imul
out
and
in
push
xchg
jl
cmp
push
lods
ret
and
subl
jne
stos
jmp
into
ds
add
rolb
stos
in
movsl
adc
mov
jne
mov
mov
xchg
cmc
gs
cld
xchg
and
stos
inc
ret
push
mov
fnstsw
inc
loope
mov
jbe
xchg
sbb
sahf
cld
ret
loop
fwait
inc
jmp
dec
jl
mov
sub
fcomi
aad
push
and
repnz
dec
xchg
or
in
jge
iret
adc
xchg
add
in
shrb
xor
sbbl
push
daa
mov
push
dec
leave
xor
sub
insb
mov
ret
insl
add
int
enter
mov
ds
xor
inc
pushl
xor
dec
sbb
loop
scas
adc
in
movsl
scas
call
inc
cmp
sbb
aaa
sahf
xchg
fwait
push
adc
roll
mov
jns
nop
stos
jle
jnp
cmc
outsb
sbb
jne
and
outsl
icebp
cmp
test
fldenv
sbb
in
dec
enter
movb
out
sub
or
in
into
icebp
and
mov
jb
dec
ret
mov
inc
mov
std
popf
stos
jns
sub
mov
iret
or
daa
divl
lds
fistpl
lods
ljmp
gs
jle
push
adc
es
icebp
sar
pop
out
repnz
mov
outsb
idivb
inc
test
fmuls
push
mov
bound
mov
mov
xchg
mov
in
pop
ret
or
push
orb
push
popf
fildll
xlat
jp
stos
sbb
lahf
in
jg
sahf
dec
fisubl
out
add
icebp
aas
push
mov
push
test
sub
xchg
dec
jno
notl
insl
jo
loopne
rorb
jmp
mov
test
xor
xchg
adc
paddusb
inc
cltd
imul
lock
mov
inc
insb
ja
fisttpll
mov
leave
les
cmp
ss
aam
jb
in
push
mov
ss
movsb
add
mov
rcrb
inc
sbb
mov
mov
sub
push
cmc
jno
leave
and
push
rclb
or
mov
adc
pusha
rcrb
cmp
lock
insl
test
mov
adc
add
jno
mov
xchg
cmpsl
jmp
in
push
cwtl
pop
dec
push
das
push
in
jecxz
jle
lcall
stos
out
sbb
push
rolb
out
mov
pop
mov
lea
xor
xchg
dec
fists
in
push
cmp
cmp
or
or
xchg
push
cs
cmp
sbb
pop
insl
mov
pop
push
mov
stc
aas
cltd
int3
mov
scas
mov
mov
pop
inc
inc
jl
faddl
stos
and
addl
dec
pop
xchg
and
loop
sbb
movsl
dec
mov
and
imul
cwtl
inc
push
push
lods
lahf
out
and
aaa
lahf
sub
adc
or
dec
movsb
push
jnp
sahf
orw
sbb
dec
mov
jecxz
cmp
js
push
in
sarb
ret
lods
mov
stc
cld
js
cld
aam
rclb
sub
in
add
xchg
dec
mov
call
stc
nop
sub
pop
add
cmp
ja
loopne
ret
ret
addl
mov
mov
cld
add
jecxz
ja
loopew
inc
movsl
mov
subl
cmpb
cmp
mov
inc
mov
cmp
push
adc
ret
xchg
cmp
push
pop
gs
mov
loopne
dec
jg
popf
icebp
xchg
loopne
xor
xchg
cmpsb
hlt
popf
gs
test
push
push
cltd
cs
or
xlat
std
imul
lret
add
jg
jno
repnz
jae
movsb
mov
xor
and
shl
or
je
movsl
mov
inc
sub
mov
bnd
jb
xchg
loop
jmp
jl
ds
sub
mov
dec
enter
xchg
dec
jo
and
xor
and
lods
hlt
xchg
xchg
adc
sahf
xchg
scas
rcll
add
test
mov
mov
gs
xlat
cs
cmp
push
lret
fcomps
mov
in
popl
or
push
pusha
popa
ds
test
cli
pop
sub
aas
and
adc
loopne
rcl
out
mov
ficoms
adcb
roll
arpl
lcallw
insb
outsb
outsl
or
jp
pop
cmp
dec
adc
dec
mov
ret
insl
int
daa
ret
mov
adc
mov
fldcw
aam
push
xor
adc
add
mov
jno
xchg
push
or
dec
inc
jae
pop
jp
push
mov
jle
pop
lcall
xchg
scas
popf
cmpsb
ret
push
jg
sbb
or
mov
dec
adc
sub
xor
inc
cmpsl
out
xor
int
ss
pop
out
imul
inc
ror
popa
cmp
int
xchg
mov
xchg
cmp
xchg
lret
jne
lock
stos
test
fidivs
test
or
mov
in
cmp
in
test
sahf
push
and
mov
cmp
and
sub
xor
dec
dec
imul
push
mov
jno
xchg
aam
aad
sbb
loop
stc
andl
cld
ficoml
mov
push
aas
sbb
add
js
outsb
aam
jb
jg
sbbl
cmp
jl
add
leave
ret
adc
iret
jne
jo
repz
orb
fidivl
xchg
je
push
xor
pop
sub
lret
subl
mov
inc
mov
notb
push
jae
pop
mov
nop
iret
and
jmp
out
mov
addr16
and
andl
push
fsts
adc
fdivrl
push
outsl
push
addr16
and
jo
sbb
push
mov
mov
outsl
jle
mov
lret
add
lods
adc
sbb
mov
outsl
fimull
mov
xor
ja
pop
mov
outsl
add
ljmp
xor
lahf
jg
inc
into
jg
dec
cld
mov
adc
mov
in
jae
push
std
jmp
addr16
in
in
into
ss
into
or
int
mov
or
sbb
fidivrl
das
and
out
jnp
push
sbb
lds
jle
jo
inc
aas
ret
inc
clc
pusha
inc
fstpt
jp
mov
inc
inc
sub
pop
mov
lcall
addr16
xor
mov
cmp
stos
xlat
fisubrl
test
cmc
cmp
lcall
js
or
arpl
js
sar
insl
std
mov
test
cld
inc
adc
aad
jl
sbb
cwtl
test
popa
push
mov
mov
add
popl
scas
add
xchg
bound
jae
cmp
icebp
cmp
jno
mov
xchg
sub
sbb
leave
lret
sub
test
out
pusha
mov
test
xor
loope
std
lret
and
lret
lea
lds
pop
ss
xor
repnz
inc
mov
pusha
fmull
lahf
mov
fldl
jmp
xchg
adc
xor
and
and
dec
push
ret
mov
insl
cld
es
xor
pop
daa
aam
xchg
xchg
clc
lods
je
xor
push
add
orb
cli
jl
mov
ljmp
daa
jle
dec
add
or
inc
sub
sahf
xchg
sub
mov
scas
cmpsb
fs
sbbl
mov
rorl
sub
shlb
or
insb
scas
icebp
dec
sub
jnp
ret
cmp
jmp
xor
lds
mov
cmp
iret
sti
adc
cmpsl
fistpl
stc
sbb
sub
cwtl
lret
adc
mov
cmp
out
mov
scas
dec
mov
jge
xor
sti
jl
lock
std
mov
push
jge
adc
add
lcall
push
jecxz
cltd
mov
iret
aad
es
psrad
fcoms
loopne
xchg
insb
jge
push
mov
dec
out
and
mov
fmuls
fldl
cmp
sub
jno
mov
gs
or
sub
movsb
dec
jle
jge
stos
aas
in
inc
enter
test
add
mov
fdivrs
leave
imul
inc
ds
ds
xor
sbb
jl
xchg
stos
xor
orb
mov
flds
pop
pop
add
inc
push
jnp
adcl
adc
ljmp
pusha
xchg
xchg
je
xor
cs
xchg
sahf
in
cmp
sub
and
sub
std
xlat
scas
dec
add
dec
in
call
sti
sbb
test
dec
sbb
test
iret
sbbb
sub
dec
push
and
sub
lods
lret
mov
dec
cmp
jne
lret
daa
movsl
daa
lds
fadds
add
lahf
cmc
jmp
mov
sti
xchg
scas
push
popf
jp
mov
rcll
xchg
and
add
stc
sahf
insl
xor
int3
adc
in
mov
or
insl
fs
lods
jle
scas
rol
orb
shrl
cmc
cmp
cmpsb
test
movsl
int3
mov
shlb
add
dec
lahf
adc
lock
gs
aas
call
mov
sub
xlat
jp
call
sub
mov
cwtl
jnp
aas
push
xor
ss
stos
sub
int
into
inc
mov
cmp
pop
das
loope
popa
cwtl
mov
add
jb
stos
lods
mov
mov
lcall
jne
or
adc
iret
sub
or
dec
mov
pop
ljmp
jmp
cld
mov
lahf
ljmp
ficomps
fsts
sbbl
or
lods
mov
mov
xor
push
jmp
pop
or
xchg
sbb
lea
je
in
add
cmp
pop
imul
cs
cmpsb
out
lret
int3
js
mov
sbb
sub
push
repnz
add
inc
jb
stc
inc
inc
push
cli
ljmp
outsb
push
lret
mov
inc
adc
popf
jae
mov
xchg
addb
cs
xchg
filds
or
fnsave
mov
in
jmp
das
scas
mov
popa
push
mov
sbb
xchg
aas
jmp
xor
std
xor
xchg
in
and
insl
sbb
out
jbe
lret
hlt
in
cwtl
dec
push
repz
cmp
divb
mov
inc
jno
subb
out
ss
xchg
dec
jecxz
sub
jp
loop
movsb
mov
jl
call
jne
insl
loope
lock
add
sub
xlat
xor
jno
mov
sub
and
push
out
jge
or
cmp
mov
push
addr16
xchg
mov
hlt
dec
mov
add
into
cmp
and
xor
sbb
mov
xor
mov
cmpsl
xchg
or
lret
cmpsb
sub
repnz
lods
clc
daa
pop
rcrl
mov
insb
push
fnstcw
lods
jne
lods
sub
xor
imul
mov
lock
or
in
insl
or
aam
inc
loopne
mov
push
gs
sub
xlat
sub
cltd
push
sub
in
mov
dec
push
gs
pop
pop
idiv
push
andb
jb
subb
sbbb
mov
adc
dec
pop
out
add
in
pop
in
push
push
add
mov
cs
push
dec
or
clc
cwtl
dec
or
clc
xchg
adc
pop
jns
and
adc
test
in
je
movsl
test
test
lret
and
dec
xchg
repnz
push
insb
push
lods
fimuls
pop
push
loope
out
filds
pop
mov
je
mov
rcr
pop
xor
je
out
in
aaa
aas
leave
int
and
mov
in
dec
or
mov
ret
mov
jno
adc
and
std
xor
inc
js,pt
fsubr
xor
outsb
xor
cmpsl
push
jne
pop
cmp
xchg
mov
cmp
out
mulb
mov
mov
pop
mov
jp
sub
test
addr16
test
outsl
into
jnp
es
orl
jae
xchg
mov
or
or
jo
jno
cmp
std
arpl
into
or
iret
add
in
mov
popa
pop
push
pop
or
jecxz
pop
lea
mov
sub
mov
sti
push
mov
rorl
xorl
sub
popf
lods
cld
xchg
push
mov
scas
push
stos
mov
xchg
pop
xchg
xchg
mov
push
jbe
movsl
and
pop
data16
dec
nop
adc
push
aad
pop
insb
mov
dec
js
movsb
scas
pop
enter
lods
stc
sbb
fsubs
push
fisubrs
je
inc
insb
js
cmpsl
repz
sbb
call
scas
aad
clc
rcrl
sbb
xor
mov
mov
dec
andl
mov
ljmp
mov
push
cmpsb
stos
sub
movsb
dec
es
stos
rclb
out
sbb
daa
pop
dec
scas
sbb
stos
enter
ljmp
test
mov
xchg
in
xchg
arpl
sub
pop
sub
xchg
ficomps
loop
call
xlat
scas
jno
adc
sti
add
inc
arpl
aam
jns
cltd
or
mov
rclb
fcoms
inc
sub
imul
adc
sar
mov
adc
leave
scas
les
sahf
cmp
adc
cmp
sub
mov
xor
in
pop
fsubrs
cmpl
cmp
scas
mov
ret
xchg
push
sub
adc
push
jp
lds
imul
aas
or
jmp
decb
mov
pushf
jle
cmpsb
rorb
jns
fistpl
adc
pusha
repnz
mov
shll
gs
jg
mov
jae
xchg
stos
sub
xchg
xchg
dec
in
jecxz
push
ficompl
mov
sbb
xchg
xchg
aas
cmpsl
in
out
sbb
sub
loop
shlb
sarb
test
dec
in
sbb
mov
js
sbb
test
pushf
push
adc
mov
cmp
movsl
jnp
mov
adc
push
lods
pop
sarl
cmp
pushf
cmpl
andl
dec
faddl
adc
inc
or
loop
aam
push
mov
cmp
lret
pop
and
icebp
xchg
dec
std
std
mov
xor
push
mov
mov
push
aas
sbb
and
dec
cmpl
pop
push
mov
push
sbbl
ds
cld
add
adc
insb
mov
stos
daa
and
adc
mov
push
subb
add
push
inc
mov
movl
fstp
leave
adc
out
in
sbb
push
pop
int
pop
lcall
mov
js
xchg
mov
cmpl
pop
dec
enter
movsb
jne
leave
push
dec
cmc
repz
inc
inc
inc
int3
inc
out
pop
scas
sub
mov
lret
mov
mov
lcall
stc
cmp
in
mov
inc
pop
push
jl
hlt
push
enter
inc
mov
pop
sub
pop
dec
jle
push
jp
dec
in
loopne
adc
addr16
jb
push
bound
js
mov
xchg
out
dec
add
xor
mov
shl
dec
in
inc
stos
pusha
lahf
repz
jl
daa
subb
sbb
in
push
lret
lds
insl
adc
stos
pop
outsb
push
jge
movsl
lret
cld
push
pushf
sbb
into
je
cmp
jne
mov
lahf
stos
loop
test
xchg
lahf
mov
lock
out
jmp
js
insl
inc
push
xchg
sub
jae
or
adc
outsl
and
adc
mov
fdivrl
sahf
dec
xchg
cwtl
insl
xor
nopl
nop
dec
int
push
dec
jmp
movsb
ret
xchg
divl
dec
sub
subb
cmpsb
mov
sub
stc
daa
add
mov
aad
fldt
jmp
jns
adc
leave
adc
sbbb
and
mov
loope
dec
mov
sbb
or
inc
push
int3
or
fisubs
rdpmc
gs
andb
jns
mov
mov
xchg
mov
movsl
mov
dec
imul
push
sub
xchg
add
shrb
jmp
push
jg
movsb
mov
aad
mov
mov
filds
popf
lock
fwait
aad
mov
nop
movsl
fwait
mov
fcoms
xor
xchg
push
div
frstor
pop
mov
jg
jno
sbb
inc
add
mov
addr16
lret
jmp
call
and
lods
jbe
mov
stos
push
int3
fwait
dec
xchg
stos
js
int3
push
mov
sub
clc
add
jmp
loop
inc
adc
or
stos
cmc
sub
mov
fs
shrb
jl
fptan
sub
insl
fucom
mov
inc
mov
int3
repz
mov
pop
sbb
or
mov
loopne
push
or
dec
lds
cmpsl
and
lods
xor
outsl
outsl
stos
and
mov
int3
xor
into
sbb
push
stc
ds
cs
sub
js
fisttpll
mov
pop
pop
xchg
shrb
jne
insl
inc
lret
jnp
cltd
xorb
adc
out
je
xchg
cmp
aas
scas
sbb
test
sbb
sbb
imul
jle
test
cmpsb
rorl
xor
inc
mov
mov
inc
adc
mov
sti
mov
push
out
lcall
out
sbb
xchg
test
jb
sarb
loopne
icebp
dec
push
mov
jbe
pop
xchg
rcr
les
mov
jge
out
loopne
mov
add
test
inc
rol
xchg
push
loope
mov
test
mov
fldt
and
push
ds
cmpsb
dec
lcall
and
lret
jne
jmp
add
arpl
call
movsl
adc
test
sub
mov
testl
jecxz
std
or
fwait
push
fisttpl
pop
or
out
fstpl
sbb
add
enter
mov
jl
mov
cmp
xchg
push
fildl
inc
arpl
test
idivl
adc
or
loop
add
xchg
ret
push
dec
and
jb
mov
insl
cmp
arpl
xchg
filds
fisttpll
aad
or
lcall
push
sbbb
repz
scas
sbb
loop
iret
data16
xchg
aad
aad
and
mov
xchg
ret
pushaw
inc
outsl
cmp
in
insb
ficoml
push
xchg
xor
add
test
fisubs
fldenv
lcall
push
test
push
cmp
xchg
loope
leave
push
inc
mov
popf
scas
daa
push
mov
adc
outsb
pop
fisubrl
adc
and
popf
jnp
sub
insb
aam
mov
pop
outsb
test
or
jb
xor
loop
int3
push
mov
sub
and
negl
mov
jns
jmp
shlb
shrl
push
pushf
out
out
es
fwait
cmpsb
dec
xor
xchg
xchg
outsl
je
les
fwait
decb
clc
jle
xor
sbb
lahf
lock
hlt
pop
imul
adc
inc
stos
lret
xchg
add
lahf
dec
inc
adc
sub
cltd
in
loopne
neg
ret
fdivs
gs
push
imul
and
xchg
adc
inc
push
pop
mov
or
jle
jns
daa
mov
movw
dec
cmp
jbe
inc
sbb
mov
add
shrb
mov
mov
mov
rcl
je
fs
ret
lods
add
cmp
dec
lods
scas
imul
cbtw
mov
stc
aad
sbb
ret
repz
mov
dec
pop
hlt
sbb
push
jne
stc
inc
mov
xchg
inc
or
lea
scas
in
push
mov
std
sbb
jp
mov
scas
pop
sub
inc
cmp
xchg
xchg
inc
xchg
xchg
lcallw
sbb
mov
loopne
mov
cmp
pop
pop
inc
les
imul
arpl
mov
add
call
xor
and
mov
movsb
sbb
inc
out
dec
repnz
arpl
bound
adc
pop
xchg
aam
push
xchg
roll
adc
add
movsl
ficompl
inc
sbb
mov
int3
dec
mov
cmp
pop
jge
aas
lahf
enter
fcmovnbe
push
xor
xchg
inc
call
fmuls
lods
add
jecxz
cli
das
sbb
aad
enter
ljmp
xchg
shlb
shlb
sub
xchg
jge
cmpsl
mov
push
addb
aas
xlat
into
dec
imul
orb
inc
jb
push
xchg
pusha
sbb
pusha
aad
fwait
xchg
jne
mov
pop
cmp
mov
test
nop
xchg
cmpsb
xor
jl
sbb
fimuls
pop
dec
incb
addr16
sti
push
or
push
mov
jmp
aas
inc
roll
dec
leave
mov
mov
fdivrl
inc
ss
test
mov
lds
jo
outsb
dec
sbb
mov
jp
or
icebp
orl
clc
in
pop
aaa
add
mov
cmp
test
out
rol
fiaddl
pop
ds
push
dec
mov
stos
xorb
sbb
and
jge
sbb
std
popf
xchg
ss
xchg
or
fcmovb
popf
shrb
push
push
mov
cmp
leave
xor
mov
mov
aam
xchg
fnstenv
repz
mov
mov
arpl
bound
stos
nop
add
xor
jecxz
xchg
pop
cmpsl
jno
jmp
push
or
pushf
fmull
cli
stc
xchg
popf
lods
push
adc
test
sbb
sub
mov
es
pop
mulb
sbb
jns
mov
mov
fistpl
inc
hlt
mov
inc
cmp
mov
push
mov
fs
mov
jl
fstpl
and
in
sbb
mov
cmpsl
inc
fisubrl
xor
mov
pop
cmpb
dec
lcall
mov
ljmp
sti
pop
in
jl
push
mov
aam
icebp
cmp
mov
cmpsb
addr16
cmp
fimull
imul
push
dec
outsl
or
rcll
and
stos
nop
pop
mov
leave
jb
cmp
insl
jp
int
fs
pop
xor
out
mov
inc
fcoms
adc
cmp
mov
sbb
mov
icebp
repz
push
jae
jno
mov
cmp
mov
pop
sahf
fdivrs
setb
mov
lret
xor
fmuls
pop
sarl
enter
push
adc
pop
xor
push
popa
dec
xchg
or
mov
cmp
movsl
pop
sub
sbb
cld
pop
roll
scas
mov
push
adc
rorb
and
call
mov
int3
or
cmpsl
popl
leave
cmp
loop
or
ss
push
and
xlat
dec
sti
mov
mov
fstpl
pop
sub
fcoml
ret
xchg
popf
inc
add
xchg
into
sub
mov
aam
cmpsl
lock
sbb
out
mov
aas
mov
inc
cmp
in
mov
bound
cli
loopne
jae
fsts
xchg
inc
xchg
lcall
sti
lods
imul
mov
mov
mov
jmp
shll
pushf
xchg
leave
dec
insl
jns
cld
adc
adc
dec
adc
jle
mov
jle
add
xchg
adc
cld
inc
fildll
sub
mov
int
test
jns
mov
jmp
jae
mov
loop
stc
mov
xchg
pop
fnstcw
add
xchg
repz
adc
xchg
and
jns
mov
dec
pop
inc
push
in
negl
push
js
xchg
or
or
shll
mov
push
pop
sti
mov
mov
jbe
jmp
cmpsb
mov
lea
cmp
fsubp
test
je
out
fldcw
fnstcw
sub
mov
insb
fists
pop
stos
stc
les
imul
push
enter
sub
sbb
xor
pop
dec
test
cmc
push
or
sbb
add
inc
gs
loopne
bound
sub
mov
gs
insl
cmpsb
add
ja
xchg
mov
mov
xor
stos
stos
adc
stos
push
in
mov
dec
cmpsb
iret
sarb
or
insl
or
xor
push
sub
fstl
xchg
sbb
int
sub
cltd
insl
pop
repz
cmc
test
sub
pop
pop
cs
adc
js
mov
mov
std
jp
mov
push
jecxz
cs
dec
test
mov
push
outsl
xchg
testb
ret
cmp
icebp
je
inc
push
fwait
jge
mov
mov
pop
xor
ljmp
mov
mov
aam
xchg
add
mov
sbb
cmp
xor
dec
test
movsl
xchg
rol
or
jp
rcrb
xchg
lock
jge
jns
sti
add
xchg
sahf
xor
lret
dec
or
mov
and
dec
or
cwtl
and
add
xorps
jle
jg
fwait
subb
je
push
cmp
idivl
mov
into
push
mov
sbb
movsl
scas
add
xchg
loope
inc
stc
fsubrs
xchg
push
stos
push
mov
mov
sub
xchg
gs
dec
push
pusha
adcb
clc
pop
test
inc
lea
stos
mov
xchg
mov
test
cs
inc
push
pop
jge
ret
into
mov
push
test
out
inc
xlat
iret
jl
pop
pop
jle
ss
xchg
inc
mov
lea
rcll
mov
cmpsb
aad
jp
sbb
pop
insb
lods
insb
mov
lahf
sar
ror
cmp
jmp
xchg
in
out
or
daa
inc
dec
pop
and
loope
jge
cmp
repnz
rcll
stos
divb
mov
pop
inc
or
ds
test
iret
repz
cmp
shll
arpl
fucomp
add
xchg
shlb
sahf
jno
call
orb
outsb
xor
add
in
sub
loopne
sub
cs
pop
scas
int
imulb
lahf
outsb
ret
jle
or
repnz
add
mov
pop
cmpsb
loope
cmp
outsl
arpl
jmp
xchg
xorb
addr16
shll
in
and
adc
mov
mov
ja
rcrb
mov
adc
je
cli
sub
lcall
fistl
leave
pop
popf
sbb
std
xor
inc
inc
xor
jmp
push
inc
xchg
jmpw
ss
movsb
hlt
jnp
clc
mov
mov
in
and
sub
adc
add
jns
test
lds
jo
sub
xchg
mov
loope
arpl
lock
fldcw
dec
cmp
sbb
adc
adc
inc
mov
jnp
adc
jmp
mov
inc
scas
pop
pop
lahf
mov
add
int
jge
sub
in
push
sarb
jg
loopne
cwtl
sbb
leave
xchg
dec
cmpsb
dec
pop
jb
sub
cltd
sbb
sbb
jge
int3
mov
dec
bound
sbb
cs
sbb
sbb
in
dec
adc
test
mov
cli
mov
xor
jne
lods
maskmovq
testl
ds
test
inc
lahf
adc
add
loop
rclb
xor
inc
xchg
mov
das
jg
sti
pusha
das
rclb
lahf
gs
addr16
gs
and
push
aas
mov
dec
cs
xchg
xlat
repz
loop
outsb
mov
nop
push
out
rclb
dec
icebp
and
test
rclb
xchg
lods
ret
mov
adc
sbb
xor
sbb
lods
adc
es
sarl
fs
cmp
ljmp
or
mov
ds
pop
cmp
xchg
andb
push
xchg
fstpl
imul
add
adc
jg
jnp
dec
and
int
lret
mov
mov
insb
inc
mov
ljmp
addr16
imul
lods
push
pushf
cmp
mov
jb
ja
data16
enter
pop
movsl
mov
xor
push
mov
dec
pop
lods
inc
repz
aas
out
fs
xchg
mov
push
aam
sub
es
outsl
sahf
add
xor
hlt
and
push
fmull
lahf
dec
in
jne
pushf
push
fdivp
nop
je
notl
jae
cwtl
mov
les
aaa
cmp
adc
cmp
xor
pop
xchg
jg
pushl
movsl
test
lret
fbstp
in
inc
lret
inc
jmp
xchg
addl
xchg
jae
call
adc
mov
popf
in
orb
dec
mov
cmc
cmpsb
pop
and
or
ret
cli
and
pop
rcrl
sub
pop
bnd
sbb
xor
mov
sub
ret
jmp
dec
loopne
push
js
mov
mov
insb
push
adc
pop
jae
iret
pop
and
out
out
sahf
xor
pop
sub
xchg
cmpsb
enter
arpl
mov
mov
rcll
mov
outsb
test
lds
jae
jnp
pop
insb
pop
flds
push
in
mov
mov
idivl
push
sahf
in
nop
add
sub
pop
out
xor
sbb
add
insl
mov
xchg
inc
sub
mov
sbb
mov
adc
cmp
rolb
addr16
jb
sub
lods
mov
cmc
jecxz
push
cmp
xchg
sub
cld
ds
cmc
cmp
xchg
je
fdivp
sbb
lret
fidivs
pop
enter
mov
inc
xor
outsl
sub
in
push
dec
xchg
or
pop
ret
rcll
stos
gs
push
lret
je
stos
in
rcll
pop
xchg
lcall
lds
out
fstps
sub
push
adc
mov
js
jl
js
aas
mov
xor
sbb
rorl
stos
push
adc
or
inc
mov
fdivr
ds
adc
sub
mov
push
mov
pop
jge
stos
or
fsubrs
inc
or
and
lea
sbb
inc
mov
or
dec
mov
pushf
mov
fsubrl
cmp
inc
pusha
lods
out
fldl
dec
je
loop
jne
pop
adc
je
ljmp
xchg
cmc
in
inc
jae
inc
pop
inc
lea
xchg
sti
push
cltd
adc
dec
testl
xchg
push
and
mov
inc
or
push
mov
sbb
pop
cmp
pushf
jl
xor
iret
and
jmp
test
jmp
lea
rolb
and
test
out
idivl
sbb
dec
and
in
inc
dec
stc
xchg
data16
aam
in
imul
out
jecxz
xorl
test
push
xor
sub
aad
ds
popa
scas
int
or
sahf
repnz
inc
rcrl
xor
rep
lret
inc
cmp
outsl
andb
inc
fs
lret
mov
and
pop
jae
dec
jl
pop
xor
mov
fisttps
cmp
insl
inc
mov
mov
mov
jmp
ret
lods
jns
shl
sub
xchg
bound
fwait
mov
into
or
inc
dec
inc
popf
jo
xorb
xchg
xchg
jne
in
dec
cmp
cltd
loopne
push
popf
out
pop
ss
je
mov
fxch
loopne
inc
adc
aaa
testb
xchg
pop
popa
jp
push
dec
mov
popf
cmp
inc
or
in
inc
mov
in
fmul
sub
lret
mov
jne
subb
jmp
and
pop
daa
leave
das
cs
adc
dec
mov
scas
add
into
iret
mov
mov
fnstcw
icebp
out
adc
pop
xor
jne
movsb
mov
into
notl
push
sbb
fcomps
fcomip
cmp
filds
scas
xchg
test
insb
mov
inc
ljmp
cmpsl
adc
push
call
or
rclb
mov
pop
jnp
adc
repz
cmp
into
insl
mov
dec
push
sub
lret
int3
stos
lret
cltd
in
outsb
mov
ror
mov
cltd
fwait
into
popa
hlt
pop
ret
adc
popa
idivb
out
sarb
sbb
dec
jnp
xchg
test
shll
mov
mov
test
shl
mov
jbe
xchg
insb
movsl
stos
xchg
push
dec
int3
rdtsc
inc
scas
fdivp
fwait
adc
inc
enter
add
bound
sbb
inc
mov
or
mov
ss
mov
sahf
sbb
aam
clc
lea
loop
mov
out
out
andb
push
xchg
lods
in
xorl
jns
loopne
mov
or
dec
cld
sbb
andb
push
pop
ret
xchg
inc
movsb
sbb
push
test
adc
mov
mov
and
mov
ret
fistl
mov
jns
std
lcall
push
cmp
push
mov
in
add
arpl
lahf
cwtl
push
push
insb
sbb
test
shll
cmp
sbb
lret
popf
or
bound
pop
mov
dec
dec
adc
jp
add
push
outsb
outsb
sub
ret
mov
and
xchg
lds
sub
stos
inc
dec
push
inc
imul
stc
push
mov
push
es
stos
push
aaa
lods
sub
ss
jl
pusha
mov
cmc
cmc
mov
insb
add
sar
inc
sub
xor
rcrl
ljmp
jecxz
repz
dec
lock
jne,pn
push
and
mov
and
add
push
inc
jno
jle
dec
out
push
stos
dec
jmp
mov
push
mov
ds
cld
loop
mov
aaa
pop
xlat
push
xchg
xchg
mov
mov
mov
rcll
lods
fidivs
pop
xchg
out
jnp
xchg
sahf
loope
clc
xchg
pop
nop
sbb
mov
in
xor
xor
rcl
sbb
lret
jmp
dec
push
and
and
push
ss
pop
scas
out
push
sub
and
ror
jmp
ljmp
pop
fcoms
dec
lds
jmp
subl
dec
jo
dec
mov
addr16
leave
scas
rcrl
jl
fcmovb
ss
pop
push
jge
movb
fldt
cmp
pop
mov
mov
subl
and
cltd
orl
mov
sub
jae
sbb
fcmove
sbb
mov
jmp
inc
in
mov
xchg
andb
pop
in
jo
lds
push
xchg
adc
lret
or
in
aas
xor
sbb
or
fnsave
mov
lret
ds
repz
mov
xlat
cmp
inc
in
daa
into
lcall
mov
call
lahf
mov
jo
or
sbb
pop
xchg
mov
cmpsb
cltd
mov
jns
jnp
lret
xchg
ficomps
mov
adc
ljmp
push
push
add
movsl
mov
cmp
imul
jle
in
aad
cmc
push
or
repnz
pop
push
in
pop
cmp
mov
ret
adc
lods
or
int
adc
cmp
dec
mov
stos
mov
pop
fidivrs
outsb
lods
fisttps
inc
jl
push
inc
adc
outsb
cmpsb
mov
cmp
or
imul
sarb
dec
inc
ss
xchg
pop
cltd
and
cmc
dec
insl
out
dec
fs
push
arpl
dec
push
loope
push
mov
loopne
dec
push
icebp
cmp
into
adc
and
aam
insl
dec
outsl
push
mov
adc
addl
fcmovu
sahf
mov
xlat
and
loopne
pop
fucomp
cmp
mov
not
add
stc
inc
dec
aam
pusha
pusha
dec
add
into
call
jns
xor
jo
xchg
shlb
movsl
adc
and
loopne
outsb
add
lock
mov
pop
jns
xchg
jns
mov
repnz
push
cmp
loope
pop
and
cmp
jecxz
in
xor
pop
mov
cmp
pop
jns
xchg
jns
sarb
mov
or
aam
inc
xorl
pop
sub
shr
pop
stos
pop
push
push
test
fdivs
dec
push
or
ljmp
push
rorl
mov
aaa
lcall
out
xchg
cmp
lods
lods
inc
mov
sub
push
add
mov
filds
lahf
dec
mov
jl
xorb
or
cmpsb
inc
mov
pop
and
jbe
pop
out
jmp
cltd
lcall
outsb
jbe
subl
mov
mov
jno
aad
js
push
jno
mov
orb
xor
xlat
scas
pop
inc
sbb
and
push
subb
test
clc
mov
arpl
in
mov
lret
push
je
mov
sub
dec
jle
jnp
mov
xchg
sbb
add
xchg
loop
les
stc
jb
push
sbb
pop
cmp
mov
lret
jl
and
lahf
jbe
push
xchg
iret
loop
imul
xchg
out
push
es
data16
ss
jmp
cltd
mov
lcall
xor
stos
mov
lock
or
mov
sbb
and
ljmp
ss
loopne
sahf
fisubl
ja
int
loopne
mov
mov
dec
and
std
sbb
mov
jb
leave
cmpl
mov
out
mov
fldln2
cmpsl
sbb
cmp
push
mov
dec
cwtl
inc
out
rcrb
mov
xor
movsb
cmc
jae
cmp
loopne
fcoms
push
ljmp
scas
aam
clc
es
test
bound
mov
inc
sub
icebp
pop
stos
out
loopne
mov
aad
sub
push
sbb
add
add
mov
dec
push
or
fs
cs
stc
add
push
jb
andb
sub
xchg
adc
aam
shl
or
or
add
inc
jle
pop
fiadds
mov
out
into
cmp
pop
cld
xchg
ret
xor
or
fucomi
xchg
test
ret
repnz
sub
fldenv
in
xlat
lods
hlt
jb
mov
out
inc
xchg
mov
push
adc
aas
xchg
xchg
lods
repnz
dec
les
sti
iret
xchg
jge
imul
cs
sbb
push
mov
pop
cld
imul
jae
dec
xor
dec
pop
jmp
repz
adc
or
add
sub
sar
xchg
dec
leave
dec
xchg
mov
rorb
fmull
mulb
jge
lret
int
das
pcmpgtw
stos
movsl
dec
sub
mov
jo
popa
sub
inc
or
sbb
cltd
sub
inc
leave
in
cmpsl
arpl
sub
out
pop
pop
loope
imul
mov
and
push
or
mov
jge
jno
lods
add
xchg
ret
add
push
mov
or
sub
das
adc
fsub
push
rorb
xchg
adc
mov
pop
cmp
or
mov
shll
or
call
adcl
mov
ljmp
stos
sub
add
cmp
iret
add
inc
jmp
adc
push
inc
dec
test
movsl
enter
sub
push
cmp
mov
mov
shrb
shlb
push
out
pop
mov
shlb
daa
cmp
dec
adc
leave
int
push
xchg
adc
or
repnz
jae
and
adc
and
pop
test
cwtl
jle
scas
pop
gs
fistpll
xor
scas
call
rorb
xor
mov
into
stc
cmp
jmp
cmpl
jb
cli
inc
sahf
mov
fcoms
std
repnz
mov
out
bound
mov
cld
testb
pop
mov
jp
loop
fldcw
jg
cltd
dec
or
sbb
lock
mov
cmpsb
or
inc
jecxz
push
add
pusha
vmovapd
xor
nop
pop
aad
sub
mov
push
movsl
dec
es
ljmp
decb
push
adc
rclb
arpl
cs
add
daa
push
and
inc
mov
and
das
shl
jl
add
jb
jg
or
arpl
insb
cli
stos
popf
pop
adc
dec
pop
add
lea
leave
sbb
fistpll
inc
ja
dec
pop
dec
dec
pop
sub
mov
sbb
xchg
lahf
test
inc
scas
and
repnz
repz
cmp
cltd
inc
scas
inc
idivl
mov
mov
cmp
xor
lret
dec
enter
arpl
mov
dec
pop
sub
xchg
dec
sbb
bound
xchg
mov
ljmp
push
mov
test
dec
pop
or
les
nop
cmpsb
fcompl
pop
jmp
xor
mov
and
std
sahf
sti
lock
push
xchg
icebp
jb
push
cs
mov
add
jle
or
shr
int
mov
test
dec
sti
jl
and
mov
in
cmp
pop
mov
fidivs
xor
adc
sub
stos
out
xor
inc
jge
fwait
xchg
mov
fistpl
pop
loope
mov
aas
xor
fldl
aaa
inc
testb
fwait
dec
xlat
lret
les
je
addr16
subl
movsb
mov
add
fwait
mov
jno
jle
popf
in
repnz
lcall
xchg
outsb
xor
mov
mov
jno
jl
imul
adc
mull
jbe
movsl
xchg
idivb
enter
movsl
adc
inc
inc
loop
xlat
mov
inc
pop
fistpll
fwait
cmpsb
aaa
jp
je
lods
popa
test
mov
adc
cmc
imul
fs
adc
cmp
and
jnp
loope
cwtl
pop
lret
dec
das
insb
or
jmp
fiadds
sbb
aas
add
mov
inc
ss
adc
cmp
xchg
sub
sbb
sub
sahf
and
cmp
pop
mov
adc
std
or
nop
iret
stos
push
jp
dec
ds
xchg
adcb
mov
in
stc
sbb
jnp
xchg
cmp
push
cmp
mov
ljmp
mov
adcl
xchg
push
add
movsb
stos
jle
mov
lret
push
mov
mov
add
mov
cs
decl
insb
pop
push
cli
dec
rcrb
sub
movsl
fs
daa
ja
andb
jnp
cmp
mov
popf
rdpmc
idivl
inc
sbb
mov
test
push
lret
sbbb
rcl
aad
cmpsl
out
hlt
push
pushf
loop
jmp
adc
mov
adc
inc
loopne
inc
pop
push
push
ds
push
adc
jno
fidivrs
jecxz
jp
mov
xchg
test
test
mov
jecxz
pop
adc
and
mov
stos
popa
sbb
in
icebp
dec
push
insl
jg
out
xchg
imul
pushf
loope
xchg
mov
rcrb
dec
stos
sarl
int
inc
leave
dec
movsb
sbb
test
jns
cmc
loope
sbbb
movsb
repnz
je
decb
in
ljmp
mov
sub
inc
inc
push
mov
fcompl
dec
add
arpl
dec
dec
pushf
dec
push
sub
or
ret
mov
setns
mov
dec
cwtl
jne
adc
sahf
dec
xchg
pop
mov
nop
lret
aaa
or
stos
clc
and
daa
xchg
mov
cmp
sbb
xchg
mov
outsl
mov
push
mov
and
shr
out
int
in
push
ljmp
mov
and
daa
mov
std
mov
pusha
sub
in
or
mov
imul
iret
sbb
cmpsl
push
xchg
mov
test
mov
in
icebp
stos
sbb
sbb
fcomp
fwait
out
dec
mov
insl
pop
adcb
xchg
loop
mov
pusha
cwtl
xchg
inc
imul
dec
inc
in
pop
inc
inc
push
or
lret
hlt
mov
mov
in
mov
stc
mov
ss
outsl
shr
les
movsl
shll
cmc
xor
lahf
lock
sub
fdivs
hlt
cld
xor
add
inc
daa
sbb
shlb
ds
loope
cs
mov
and
xchg
push
inc
pushf
fs
rclb
jns
jp
addb
int3
fwait
jno
sbb
xorl
in
adc
cli
arpl
cmp
inc
ds
sub
mov
into
fisubrs
dec
lahf
inc
loope
cld
les
dec
shrb
push
ljmp
push
inc
imull
jnp
jns
and
out
xchg
jl
sbb
adc
and
sarl
mov
cmc
fadds
test
push
xor
lcall
jb
into
nop
xor
inc
sub
mov
outsl
xchg
rol
out
imul
dec
push
mov
repz
jns
filds
ljmp
sahf
pop
lret
fwait
push
inc
out
repnz
mov
imul
pop
jnp
mov
pop
inc
mov
and
shll
jmp
pop
or
push
mov
nop
push
sbb
jne
or
xor
movsl
xchg
pusha
mov
pusha
jg
push
mov
inc
inc
push
popf
jl
in
in
xor
leave
arpl
inc
orb
ret
scas
js
and
mov
xor
iret
int3
sti
icebp
xchg
lods
cmp
sbbb
inc
push
lods
push
sub
add
aad
xor
mov
mov
mov
or
fbstp
fsqrt
push
sbb
pop
enter
xchg
or
stos
aam
and
aam
or
mov
daa
and
ljmp
mov
popa
enter
lcall
bound
shll
mov
inc
mov
cmp
cmp
test
ds
mov
inc
xor
fstl
mov
movsb
iret
outsl
or
flds
sub
popa
mov
fistl
fsub
mov
stos
insb
ds
fdivs
cwtl
scas
xlat
ds
dec
jl
aam
stc
aam
xor
cmp
orl
sub
and
rorl
mov
add
call
jg
mov
inc
cmpl
out
xor
js
ja
xor
sbb
push
movsb
out
push
dec
leave
pminub
sub
and
out
stos
test
fcomps
mov
divl
xchg
jg
lods
mov
cli
in
out
ficoml
mov
xchg
sub
dec
adc
mov
inc
aaa
sub
push
xchg
ljmp
scas
sub
mov
mov
in
cmp
push
sub
jne
movsb
push
mov
mov
loopne,pn
or
mov
pop
and
repnz
ds
cld
loop
orb
pop
pop
vmread
into
hlt
add
push
pop
lret
fistps
in
sti
lods
outsl
jne
in
xor
pop
rcr
testl
jg
test
mov
or
fidivrs
push
popf
inc
mov
insl
mov
cmpsl
dec
pop
in
sbb
ret
cmpsb
call
xchg
xchg
xchg
mov
test
adc
aam
imul
cmpsb
dec
and
in
xor
ljmp
ja
sbb
jb
pop
xchg
jl
enter
stc
adc
mov
mov
sbb
scas
std
xchg
and
out
cmp
xor
cmp
cltd
fisubl
cmp
cmp
inc
inc
loopne
lret
ljmp
fisubrs
insb
xchg
push
int3
inc
int3
out
fwait
xor
ds
std
insb
adc
fsubrl
loope
pop
add
aas
fists
cmp
and
pop
inc
stos
cpuid
cmc
jno
lahf
add
ljmp
lret
dec
arpl
sbb
testl
cmpsb
or
pushf
mov
add
mov
les
inc
data16
xor
enter
dec
gs
mov
push
addl
subb
insl
adcb
lahf
lret
mov
sahf
cmc
mov
aas
pop
add
fstp
push
js
jmp
bound
iret
ss
or
and
jnp
sub
push
rolb
mov
xor
pop
pop
pusha
adc
fcoms
xchg
mov
xchg
push
add
dec
and
popf
test
cmp
clc
lahf
sub
inc
mulps
and
push
sbbb
mov
rorb
ss
stc
jbe
jle
pop
loopne
add
push
sbb
pop
inc
mov
stos
lea
cltd
push
movsl
out
out
pop
pop
jns
movsl
out
jae
or
je
lret
lods
in
mov
js
lods
lods
ja
arpl
xchg
jle
push
div
rcrl
push
mov
sub
cmp
and
cmp
dec
xor
mov
mov
add
pop
mov
mov
push
lret
addr16
adc
out
inc
nop
enter
mov
adc
jecxz
fxtract
test
jmp
xor
sbb
pop
mov
jo
inc
adc
cwtl
mov
jne
aaa
sub
cmp
pusha
xor
addl
test
cmp
lret
pushf
ja
mov
sbb
pop
xor
in
lds
jo
aaa
roll
push
xor
sub
pop
mov
test
sbb
add
out
fmuls
pop
inc
jp
addr16
mov
cli
push
lods
jae
sub
ds
pop
cmp
loope
lods
dec
into
in
pop
cwtl
je
std
xor
aam
mov
pop
movb
inc
cmc
jecxz
pop
mov
rorb
ret
mov
or
enter
adc
add
sub
femms
inc
push
jp
call
mov
xchg
inc
in
push
lods
jns
in
shr
jp
cmc
push
incl
pop
enter
lods
lret
fdivl
dec
dec
inc
jb
mov
addr16
or
or
ret
out
and
jecxz
mov
sub
inc
inc
in
out
xor
mov
adc
sti
movsl
addr16
cmp
div
in
jno
xchg
in
or
mov
in
arpl
dec
dec
jns
sbb
mov
int
mov
pop
inc
sbb
jbe
push
insl
cmp
stos
dec
and
outsb
cmpsb
jge
sbb
pop
xchg
lret
lcall
test
sbb
inc
pop
bound
rcrb
xor
xor
cmpsb
add
lea
outsl
lds
mov
pop
fiadds
mov
lock
sbb
fisubl
xchg
xor
xor
iret
sub
xor
repz
faddl
xor
sub
sahf
decl
add
pop
cmc
test
fcmovu
mov
into
outsb
xchg
test
loopne
jne
mov
cmpsb
dec
jge
ret
jae
push
mov
mov
push
inc
sbb
sbb
xchg
mov
add
cmp
das
push
jge
insl
add
daa
push
std
cld
mov
mov
pop
popf
inc
scas
ljmp
cli
cmp
movsb
loope
jb
add
jae
pushl
xlat
mov
fcoms
sbb
std
stc
sbb
in
outsl
dec
hlt
inc
aad
xlat
in
ret
cmp
and
xchg
push
inc
leave
jne
adc
dec
dec
insl
sahf
dec
lret
mov
das
or
xchg
inc
data16
lds
jno
dec
repz
loope
xchg
hlt
lods
adc
inc
outsl
incb
lret
in
xchg
dec
sub
jp
add
ds
cli
lock
bound
inc
add
ds
push
sbb
or
ljmp
dec
les
arpl
sub
mov
popa
add
adc
jbe
mov
in
cltd
int3
in
int
loopne
push
pop
andl
fbstp
push
xor
jmp
insb
bound
cmp
mov
roll
xchg
loopne
mov
add
adc
fcmovbe
jne
imul
mov
and
mov
and
mov
int
insb
sbb
icebp
mov
pop
sbb
or
and
rorl
cmpsl
push
cmp
mov
jnp
iret
sub
test
rolb
sbb
ret
in
mov
addr16
mov
xor
add
inc
jo
push
shll
cmp
mov
mov
leave
mov
sbb
xchg
lods
test
test
fsubrl
jg
mov
cld
and
into
cwtl
roll
pop
or
inc
outsb
xor
sbb
xor
and
sub
in
adc
adc
je
inc
mov
xor
add
cli
ss
sbb
add
lcall
or
das
xchg
pop
mov
jl
notb
decb
aad
iret
xchg
mov
sub
cmpsl
push
clc
shrl
push
sahf
jecxz
lea
push
aas
aad
mov
push
mov
xorb
imul
xchg
mov
xlat
sti
lahf
xchg
pop
dec
addr16
cmpsb
hlt
sub
dec
mov
out
imul
in
adc
inc
ds
enter
loopne
push
loop
dec
popa
mov
fstp
test
dec
ficomps
sub
dec
in
mov
add
push
adc
aaa
scas
ret
rep
sbb
add
in
iret
inc
and
mov
das
or
inc
push
aas
push
xchg
gs
jge
xor
fisttpl
fildl
add
xchg
sbb
in
mov
jb
test
popa
std
lahf
ljmp
cmp
jo
and
dec
in
push
mov
rcrl
out
sbb
fwait
rcr
icebp
out
add
int3
jle
xor
inc
hlt
ds
into
stos
or
pop
hlt
lret
fs
int
mov
xor
fs
insb
sbb
dec
inc
xchg
inc
mov
fcoml
or
ljmp
mov
mov
xchg
pop
ret
lods
fsubr
sarb
jmp
imul
rorb
mov
jg
fdivl
imul
lods
decb
push
mov
aaa
pushl
xor
outsb
jno
loop
out
sarb
daa
inc
jno
inc
stc
repz
mov
fidivrs
sub
ja
pop
cltd
pop
and
mov
add
lock
outsl
add
sub
cltd
jmp
xchg
pop
cmp
je
ret
xchg
ja
sahf
mov
mov
cltd
push
rorl
pusha
mov
repnz
js
dec
push
stos
cmpsb
insl
jno
inc
js
pop
lret
fistps
loope
movsb
push
clc
adc
movsb
out
ds
data16
inc
push
lock
jns
mov
flds
jb
jge
sbb
push
mov
ds
sahf
and
arpl
lahf
lea
sub
or
cmpsl
pop
test
jp
jecxz
dec
ljmp
shll
imul
sahf
ret
mov
cmc
xor
ljmp
pop
clc
js
xlat
push
ljmp
pop
rclb
imul
xchg
mov
ret
in
sub
xchg
stos
push
cld
cmp
es
xor
mov
leave
adc
push
push
std
adc
push
out
and
jnp
cmp
push
jg
or
jge
sub
jno
and
mov
jno
cwtl
cmp
ljmp
xor
jmp
incb
push
pop
mov
aad
fwait
aaa
and
aad
fwait
cwtl
or
aad
mov
xchg
icebp
cwtl
cli
scas
pop
subl
push
in
test
xlat
ror
mov
dec
popf
pop
inc
shl
lods
mov
xor
test
dec
dec
ljmp
mov
lea
push
mov
addr16
popf
xlat
andb
and
xor
or
xor
xor
aas
push
xlat
pushf
ficoml
dec
mov
aas
imul
outsl
cs
cmp
or
imul
mov
insb
test
jbe
cmc
test
fistps
mov
lcall
xchg
add
popf
inc
scas
mov
das
cmp
cli
jmp
cwtl
arpl
xchg
pop
mov
jbe
mov
and
xchg
mov
jl
mov
movsb
ret
lods
push
adc
into
imul
shll
dec
stos
cli
sub
xor
cmp
dec
jl
xchg
jne
jle
jns
mov
movsb
mov
testl
pusha
mov
or
hlt
sbb
lret
inc
dec
pop
xchg
jne
and
fwait
and
imul
cld
mov
cltd
in
sbb
dec
in
cmp
imul
jns
mov
lods
shll
movsl
dec
jno
into
mov
ror
scas
lock
cmpsb
in
xor
cli
xchg
add
mov
into
or
cmpb
sti
lret
mov
mov
sbb
pop
sub
cmp
cmpl
cmp
cwtl
push
hlt
iret
cs
adc
jnp
and
fdiv
loope
test
arpl
ss
mov
cld
cwtl
mov
lret
xor
lret
and
cmp
jge
cmp
scas
fisttps
fidivrl
cmp
xor
aam
add
pop
sbb
sbb
or
push
push
addl
das
pop
fwait
jecxz
enter
imul
pop
and
divb
aas
inc
dec
in
clc
cmp
and
mov
sbb
adcl
orps
aas
fisttps
faddl
das
inc
adc
dec
jmp
inc
push
loop
les
rorb
xchg
pop
mov
pop
and
sub
imul
in
mov
pusha
mov
hlt
lcall
sbb
in
or
mov
fldcw
jecxz
ss
pop
pop
jae
push
loope
cmpb
je
xchg
cld
mov
pop
outsl
adc
loopne
mov
out
push
dec
fwait
das
cltd
leave
jp
out
les
xchg
out
test
xchg
sbb
roll
xor
xor
mov
in
into
jns
and
fisttpl
pop
pop
inc
shlb
xchg
inc
pusha
xor
sub
pop
jbe
push
dec
push
add
in
clc
repnz
pop
inc
sub
dec
cmp
fwait
jo
lods
and
mov
sub
xchg
inc
jo
mov
jecxz
inc
mov
mov
ret
jno
dec
pop
jmp
xchg
jnp
adc
jo
nop
ret
iret
je
sbb
jecxz
lods
test
shrb
mov
shll
mov
adc
adc
cmp
insl
fcompl
jnp
pusha
dec
movsb
push
shrb
sbb
pop
cld
imul
push
push
daa
std
sbb
fadd
int
adc
loopne
push
mov
pop
fists
adc
es
icebp
xor
mov
xchg
pushf
push
push
pushl
cs
ret
xlat
rorl
cmp
or
repnz
push
inc
rcrb
dec
popa
and
sbb
cs
stc
in
clc
push
add
andb
andb
mov
outsl
or
pop
sti
sub
sub
xchg
ja
cltd
movsl
stc
mov
jbe
daa
cmpsl
mov
out
pop
pop
mov
arpl
dec
aad
jno
xchg
movsl
jp
xorl
pop
xchg
jnp
pusha
push
loopne
cmp
mov
mov
loope
loope
rorb
outsl
xor
std
pop
inc
cmp
movsl
push
push
jle
jp
xor
jp
add
sbb
test
xor
ds
mov
fsubr
dec
or
and
sub
out
stos
call
ret
sbb
les
repz
subb
adc
fwait
mov
push
adc
andb
pop
divl
xor
lcall
xor
sbb
test
inc
dec
mov
jns
jp
frstor
xorl
push
mov
aaa
mov
sub
std
mov
sbb
sahf
sub
sub
icebp
in
pop
or
outsb
inc
outsl
xor
push
mov
adcl
sbb
lret
xchg
insl
shll
das
pop
xchg
shrl
sti
cmp
xchg
lock
mov
mov
fidivl
jb
adc
push
jnp
mov
dec
clc
pop
ret
cs
cld
add
xor
push
or
sbb
sysenter
jmp
repnz
test
adc
outsb
xchg
jns
dec
jo
mov
std
push
jbe
mov
insl
sub
cld
push
test
mov
test
rcrl
pop
pop
fisubrs
mov
cmp
cmp
ss
pop
sub
rcrl
jl
rcl
xchg
jnp
loope
enter
scas
inc
loop
sahf
fisttpl
push
shlb
loop
repz
mov
pop
rcll
mov
sbb
inc
xor
sub
gs
xlat
int3
mov
pop
rcll
hlt
inc
pop
cmp
fwait
lock
and
mov
int3
aaa
mov
mov
jo
sub
jg
aad
lods
adc
sbb
stos
enter
sub
and
mov
pop
decl
mov
xchg
dec
loope
mov
cmp
lcall
movsb
push
mov
jbe
inc
cli
ds
adc
mov
dec
ret
shll
stos
negl
into
push
daa
gs
push
pop
pop
mov
mov
push
push
and
movsb
aad
popa
sti
stc
add
test
lock
loope
mov
out
add
sub
push
aad
out
cmc
inc
pop
or
cmp
repz
lahf
cwtl
testl
and
mov
cld
push
and
test
xor
arpl
fldl
push
cmc
shll
push
sub
call
lea
repnz
inc
fwait
out
fdivrs
jg
mov
lods
sarb
fmul
sbb
mov
in
arpl
das
and
xor
pop
and
insb
loopne
inc
shlb
mov
mov
mov
pop
jp
and
push
shrb
push
rolb
mov
add
pop
icebp
cmp
in
ficomps
mov
sbb
add
sti
pop
outsl
je
jo
mov
xor
loopne
mov
ja
aas
jle
mov
inc
add
mov
mov
sbb
aas
add
gs
mov
stos
mov
sub
pop
pop
push
mov
arpl
push
fbld
out
pop
push
leave
and
sub
xor
sbb
or
add
int3
imul
jp
adc
pop
push
cmpsb
and
fdivrs
mov
and
jae
jge
mov
and
xchg
fs
pop
fcoms
mov
mov
sti
lock
cltd
lock
dec
inc
inc
pop
jb
or
lds
in
push
lds
pushf
fcoms
pop
aas
inc
lret
mov
shl
arpl
movl
cli
or
mov
mov
mov
rdpmc
adc
lea
dec
pusha
aad
loop
and
jp
aaa
jne
out
fsts
std
mov
fists
mov
bound
pop
aaa
mov
sub
or
mov
loop
inc
popl
out
repnz
adc
mov
imul
aas
movsl
out
and
add
test
add
arpl
scas
cli
ret
ret
mov
dec
pop
loope
mov
imull
xlat
pop
or
jecxz
gs
out
sub
ficomps
mov
lret
in
shll
call
mov
pop
jge
push
cs
xchg
outsb
popf
mov
mov
mov
cmp
inc
in
jecxz
popa
push
gs
aam
or
dec
or
aas
in
int
and
mov
jae
pop
cli
and
or
adc
pop
jg
sub
mov
scas
add
lods
out
mov
sahf
pushf
push
xor
sti
mov
pop
shl
daa
mov
imul
sbb
mov
das
adc
es
pop
xchg
bound
rolb
movsl
push
les
xchg
dec
jecxz
int
enter
les
ljmp
pop
cli
adc
xchg
fisttps
push
cltd
and
iret
rol
fldenv
aad
sahf
mov
jge
fcoml
push
dec
out
in
imul
loopne
dec
mov
or
push
fucom
call
pop
jmp
dec
push
mov
jb
jae
loope
mov
js
popa
fidivrs
sub
scas
fsubs
repz
inc
sub
xchg
shll
jecxz
jecxz
fcoms
dec
xchg
lahf
scas
push
adc
push
mov
shl
std
mov
jmp
jmp
std
ja
loopne
push
or
daa
insl
repnz
add
aad
pop
std
jle
sbb
ret
push
mov
pop
lret
lret
adc
sbb
addl
andb
mov
and
imul
sbb
xor
dec
jl
xchg
inc
iret
les
add
aaa
loop
sbb
push
and
and
adc
mov
xor
fdiv
cmpsb
dec
sub
mov
mov
aas
nop
xchg
imul
iret
sub
or
cli
adc
add
jbe
movaps
cltd
scas
and
lods
mov
inc
sub
in
out
scas
mov
fnstsw
xchg
std
fistl
stc
bound
stos
sbbl
cmp
outsb
fcmovb
int
sahf
dec
xchg
push
xor
and
sbb
and
es
lcall
vmread
cmp
leave
dec
out
or
ror
shrl
ss
jecxz
cmpb
xor
pop
aad
xchg
mov
loopne
fistpll
xlat
lcall
mov
andb
adcl
ret
iret
mov
movsb
jbe
xchg
insl
lahf
shlb
ljmp
jae
mov
pop
jle
cmp
sbb
stc
push
imul
test
aad
fcompl
cmc
loope
cli
push
dec
pop
fdivrs
sub
cmc
cmp
insb
pop
sub
mov
sbb
xor
inc
mov
insb
cmp
mov
and
mov
xchg
jae
aas
xchg
fdivr
xchg
in
push
out
lods
sub
or
xchg
xor
lret
cmp
ss
mov
adc
cmpsl
das
aaa
and
clc
jecxz
cmpsl
lods
push
inc
dec
out
pop
es
add
inc
dec
or
sbb
jge
ljmp
pop
addb
dec
or
enter
std
pop
sub
loopne
ja
dec
mov
pop
xor
xor
xor
into
ret
lods
mov
int
pop
rcl
push
repnz
mov
in
mov
shl
xor
pusha
mov
jne
jns
mull
xor
xor
mov
mov
repz
inc
fmull
cli
mov
jp
xchg
imul
fistpl
ja
inc
mov
iret
inc
popf
faddl
hlt
push
les
xchg
inc
aaa
or
push
movsl
clc
sarb
mov
test
cmp
xorb
or
sti
clc
add
mov
push
arpl
push
xchg
push
out
cmp
adcb
push
jecxz
bound
adc
cmp
out
cli
xor
repnz
jne
jae
in
insl
fildl
call
cmp
call
arpl
cmp
mov
clc
jg
sbb
xor
cmp
dec
inc
ret
ljmp
movsb
cli
sub
jge
lcall
bound
ret
push
jmp
or
aas
incl
cmp
cmp
popf
push
clc
mov
jecxz
pop
pop
mov
mov
lods
push
jmp
iret
loop
jecxz
xor
or
mov
jecxz
aad
repz
loopne
test
xchg
jne
jnp
cwtl
shl
sbb
cwtl
test
es
adc
imul
add
scas
out
sahf
mov
mov
stc
dec
jae,pn
adc
invd
and
jle
inc
fdivr
call
jae
in
push
insb
cmp
cmpsl
pop
mov
and
js
in
pop
cmpsb
mov
mov
mov
nop
sub
icebp
mov
add
mov
outsb
inc
mov
inc
in
sti
xchg
mov
jp
scas
push
ds
mov
mov
or
mov
or
push
adc
arpl
and
iret
pop
or
sbb
add
xchg
aaa
fisttpll
jge
in
or
jnp
shrl
push
mov
mov
test
jecxz
rcl
and
mov
or
js
cmpsl
in
cwtl
negb
mov
mov
push
mov
mov
fs
hlt
in
mov
aad
imul
outsb
scas
mov
xchg
push
push
sub
or
test
sahf
pop
jbe
ja
jno
dec
or
idiv
std
cmc
inc
pop
jne
js
jle
mov
and
or
add
adc
out
inc
data16
scas
lods
imul
cmp
ljmp
mov
jo
lds
enter
push
mov
lretw
mov
repz
jb
adc
cwtl
add
fwait
je
xor
adc
popa
lret
inc
cmp
inc
lahf
mov
je
xchg
inc
adc
gs
ja
stos
ja
iret
ficoml
fisubrl
hlt
pop
and
cmpl
inc
dec
jl
lock
pop
sub
sar
mov
dec
gs
sahf
sub
outsl
pop
adc
fstpt
push
jo
mov
mov
push
jbe
rol
shrb
cmpsb
mov
lea
incb
sti
xor
fwait
ja
or
jbe
and
or
fwait
add
sbb
adc
pushf
sbbb
outsl
jp
push
inc
mov
sub
loope
adc
inc
dec
cmpsl
add
aam
popf
xchg
pop
test
test
lea
jo
rcrl
movsl
lcall
out
lret
and
pop
clc
out
mov
out
jl
ror
and
push
dec
cmp
fwait
xor
or
das
out
jmp
repz
mov
sbb
sbb
adc
pop
fisubrl
lods
jmp
out
sbbl
jo
test
adc
stc
push
mov
mov
adc
dec
xchg
aaa
fisttps
xchg
hlt
jle
add
add
adc
nop
xor
adc
jnp
xchg
mov
jns
or
outsl
loop
pop
shll
and
lahf
and
sub
imul
mov
xchg
or
mov
es
addr16
jae
sub
test
ja
mov
loop
test
mov
or
mov
add
arpl
pop
sub
loope
adc
jg
std
rolb
inc
bound
cmpsb
lret
push
cli
pop
jle
sarb
dec
arpl
outsl
sbb
or
push
ret
mov
jl
fcomps
xlat
in
xor
dec
dec
push
or
mov
aam
out
out
cld
sub
loopne
cwtl
scas
xor
xor
minps
rcrb
in
and
inc
fs
lahf
mov
lods
cmpsb
jmp
mov
jp
in
mov
adc
mov
cs
mov
out
xchg
xchg
ds
push
jae
fisubl
pop
enter
rorb
jge
push
sahf
mov
pop
aaa
adc
mov
jp
lea
in
dec
pop
insl
inc
scas
add
xor
rclb
cwtl
les
loopne
mov
jbe
flds
es
clc
fmul
incb
sub
jecxz
rcrb
inc
xor
in
out
and
daa
addr16
xor
xor
lcall
leave
or
inc
or
push
imul
rcrl
lds
mov
and
cmpsl
mov
jmp
or
mov
mov
jnp
mov
cmc
sub
mov
add
cmp
and
ss
ss
mov
into
arpl
fsubrs
nop
push
loopne
imul
aad
cmp
loopne
js
in
es
dec
cli
inc
ss
mov
test
xor
push
xor
inc
push
jo
adc
mov
push
repz
push
xor
stc
test
pop
jo
pop
mov
in
outsl
in
daa
mov
pop
mov
xchg
mov
add
mov
ffree
lahf
ret
loope
cmp
stos
mov
add
out
mov
fcompp
cmp
pop
jb
cmp
dec
add
fldt
aam
xchg
push
fs
stc
and
mov
mov
jmp
cmp
ljmp
pop
mov
loope
in
cltd
push
inc
jl
adc
in
addr16
pop
sub
ds
sbb
sub
sti
lret
fimull
dec
ret
mov
xchg
sahf
shlb
insl
pop
rol
cwtl
imul
adc
cli
imul
call
movsl
lea
aad
mov
mov
idiv
add
sub
std
jmp
sub
fdivrp
inc
stos
xlat
jnp
test
mov
mov
popa
xchg
stc
clc
test
aam
mov
jno
outsb
dec
cmp
mov
outsb
mov
push
cmpsl
xchg
add
xor
test
ds
lods
fwait
insl
dec
xor
xchg
cs
xchg
xchg
lahf
jle
int
int
adc
jl
fcomps
inc
test
pop
jbe
push
xchg
sub
sbb
inc
or
repnz
lahf
sub
stc
inc
into
and
xor
cmp
cmpsb
pop
lahf
sub
cmp
pop
jg
pop
push
push
test
sub
mov
cmp
push
insb
imull
popf
inc
sahf
ret
and
ja
xlat
push
loope
cmp
bound
lods
adc
les
fnsave
cmpsb
scas
movsb
fcompl
addl
push
scas
iret
lcall
imul
adc
mov
pushf
jb
les
push
mov
repnz
clc
lock
mov
jae
or
fimull
add
cld
bound
aad
lcall
xchg
mov
in
jmp
ret
cld
mov
push
jp
data16
adc
adc
jp
jecxz
mov
xor
mov
mov
fisubs
mov
xlat
rorl
mul
daa
pop
popf
ss
insb
fists
jbe
xchg
and
ret
and
push
mov
xlat
xchg
cmc
cmpl
repz
pop
or
aaa
pop
iret
rorl
std
mov
push
pop
and
stos
popa
pop
add
ret
inc
sbb
sahf
lock
dec
and
xchg
int
mov
mov
xchg
push
sarl
or
dec
xor
jl
sbb
add
repz
jle
jb
lret
call
loop
jmp
es
out
subl
sti
test
test
jns
mov
sahf
adc
adc
in
out
test
lds
or
or
push
xchg
dec
inc
mov
mov
mov
ss
jmp
lods
stc
dec
mov
mov
stos
fucomip
jge
adc
es
inc
xchg
test
and
ret
jnp
in
sti
sahf
sti
fwait
mov
or
xor
ud2
xchg
jl
test
lds
js
test
cmp
fwait
lock
cmpl
sti
xor
xchg
cmp
test
xchg
les
sbbb
jge
sbb
lods
xchg
mov
xor
cmp
lds
push
xchg
sahf
sbb
loopne
out
mov
fdivrs
ljmp
mov
add
in
ret
inc
notl
lahf
xlat
ret
repz
mov
fdivrs
scas
test
and
icebp
push
add
outsl
xor
cmp
shll
test
dec
cmpsb
out
aad
cmp
test
lahf
fadds
or
xorb
push
aam
jg
push
xchg
and
loop
repnz
js
inc
xlat
js
sbb
cli
lock
sbb
cmp
mov
movsb
adc
fwait
sub
add
pop
fldl
sub
test
stc
out
xchg
push
scas
push
adc
pop
in
add
dec
in
adc
push
mov
dec
lret
test
cmc
mov
cmp
rcr
loop
push
push
sbb
aad
or
pop
sub
push
popa
xor
lea
mov
es
or
js
jge
pop
cmp
adc
leave
mov
in
dec
dec
es
dec
lods
lds
scas
and
pop
ja
mov
fwait
test
loop
inc
dec
movsb
cwtl
adc
push
push
inc
cmpsl
ret
inc
mov
sbbl
dec
push
inc
push
cwtl
inc
xchg
mov
xchg
cmp
std
fsubp
aaa
je
loope
andl
inc
sbb
repz
dec
popa
mov
aad
insb
pop
fmuls
add
mov
fidivrl
out
outsl
movlps
jb
in
mov
insb
and
push
mov
xor
fisubl
ljmp
push
jnp
clc
mov
loop
scas
sbb
mov
jb
push
stos
ror
loope
dec
push
sbb
cwtl
jecxz
scas
xchg
mov
adc
fsubs
loop
jb
sahf
push
sbb
lea
mov
sbb
xchg
int3
call
jno
adc
mov
or
mov
and
mov
cltd
nop
mov
mov
fwait
ss
mov
jo
push
arpl
add
repnz
ret
gs
daa
lret
push
rcll
jae
mov
stc
int3
stos
test
xchg
loope
sti
adc
pop
andl
cmp
xor
add
sbb
imul
test
push
sbb
mov
adc
and
dec
pop
out
xchg
stc
jno
cmp
js
cmpsl
out
ds
inc
or
lcall
jge
dec
scas
out
mov
jne
sbb
cmp
inc
xchg
test
mov
dec
fnstsw
cltd
pop
pop
or
pop
cmp
mov
jle
xor
mov
cmp
mov
sbb
xor
insl
xor
enter
sbb
xor
leave
xchg
inc
repnz
jbe
xchg
loope
data16
lret
mov
mov
mov
repnz
sbb
rclb
xor
add
mov
nop
gs
xor
jae
outsb
dec
xchg
stc
pushf
arpl
xor
mov
fstpl
push
add
lea
mov
mov
out
sbb
lret
xchg
lret
mov
popf
lcall
xlat
and
loopne
in
fsubrl
mov
movsb
mov
or
sti
std
test
inc
sti
in
mov
or
test
in
sub
mov
pop
mov
ret
fldcw
push
xlat
aas
jge
es
test
mov
push
push
xor
outsl
out
scas
out
pop
lods
pop
push
push
rcrl
ret
jb
or
or
and
pusha
adc
mov
add
sbb
xchg
cltd
dec
test
mov
shlb
add
push
dec
fs
mov
pop
xor
and
les
adc
pop
lods
addl
into
mov
sbb
daa
testl
adcl
xchg
add
push
cmp
lods
int3
aam
jle
fnstsw
pop
dec
adc
movsl
inc
jne
pop
into
out
in
adc
adc
dec
js
jmp
out
ja
cmp
or
jns
ret
sbb
xchg
repnz
xor
sbb
xchg
mov
cmpl
movsl
repnz
jns
pushl
push
pop
movsb
mov
outsl
add
fstps
popf
notb
jecxz
roll
test
insl
fstpt
pop
arpl
dec
and
rcrb
cs
out
mov
bound
scas
movsl
int3
or
and
xor
pop
testl
xchg
cmpb
add
adc
in
sub
stos
shlb
rcrb
xor
dec
lcall
loope
ret
leave
out
fldcw
and
pop
or
dec
push
gs
pop
lea
xlat
inc
movb
dec
test
jge
and
adc
sbbb
fldt
mov
pop
cmp
test
mov
push
inc
push
imul
insl
fistps
mov
push
inc
mov
ficompl
je
sahf
cmp
sbb
jp
pop
and
ss
lock
add
jno
xchg
inc
mov
mov
sbb
mov
enter
sti
xchg
movhps
push
test
mov
loope
adc
lock
or
and
lret
jge
pop
les
popf
inc
jns
pop
adc
ficoms
push
mov
xchg
int
inc
bound
xchg
mov
roll
mov
mov
scas
xor
cmpsl
subl
gs
incb
jb
in
mov
add
punpckhbw
jo
imul
ret
inc
in
mov
inc
mov
gs
call
fs
mov
dec
sbb
aaa
xchg
insl
jl
pusha
jl
outsl
jno
xchg
dec
pop
movsl
mov
push
xchg
add
add
mov
push
xchg
sbb
sub
jle
jns
bound
push
testl
shlb
xor
cs
jb
adc
dec
out
or
jg
xor
adc
push
cs
repnz
pop
movb
mov
xor
push
push
test
push
sbb
movsb
out
testb
mov
xchg
leave
inc
idivl
add
cmp
adcl
xchg
aaa
lods
jg
dec
jecxz
jb
pop
push
jae
test
test
fstpt
clc
das
bound
outsl
xchg
mov
ror
pop
jl
ret
insb
push
mov
cmp
pushf
push
ljmp
pop
pop
jg,pn
push
mov
les
lds
sbb
aad
lea
in
divb
das
add
lea
push
jl
push
jno
jmp
lods
cltd
push
push
inc
sahf
adc
in
aad
or
mov
jbe
xchg
jbe
sub
lea
sbb
js
add
aaa
or
sub
cmpsb
push
inc
mov
cwtl
hlt
out
les
dec
add
jl
mov
xchg
mov
mov
jb
push
pop
out
ss
xor
out
lds
dec
inc
int
pop
repnz
shrl
repnz
mov
or
daa
xlat
mov
jnp
call
add
les
cli
mov
nop
xchg
aad
jmp
lcall
inc
fistpll
test
or
into
and
cmp
cmp
mov
cwtl
jmp
mov
addr16
ret
test
bound
js
jle
es
jno
in
or
or
pop
and
dec
into
xor
xor
and
mov
pop
in
inc
jnp
jbe
lret
out
scas
push
std
ret
and
into
cmp
lods
nop
jle
lea
push
sahf
adc
add
jl
xor
test
outsb
add
adc
xchg
iret
xor
fisubs
or
call
fmul
sub
jb
adc
dec
mov
push
mov
test
out
mov
push
mov
push
ret
das
pop
stc
dec
insl
clc
shl
mov
into
push
fidivrl
push
xchg
dec
ljmp
arpl
shlb
leave
cmpsb
xchg
stos
mov
test
jno
sub
cmp
mov
les
inc
enter
push
popf
cmpsb
sbb
prefetcht2
xchg
add
lock
repnz
cltd
js
test
sub
dec
push
jnp
xchg
push
push
xor
fcomps
outsb
mov
push
hlt
es
clc
push
ret
cmp
repnz
jnp
das
mov
xchg
or
leave
pop
andl
mov
and
cmp
into
loop
imul
and
enter
je
jge
dec
inc
jno
and
and
inc
cmp
mov
mov
mov
lahf
shr
inc
xor
imul
sarb
fistpl
mov
mov
sbb
aad
mov
orl
shl
cmpsb
hlt
je
jno
mov
add
ret
push
push
cwtl
fisttpll
pop
add
lods
and
inc
fnop
and
cmpsb
imul
nop
in
inc
stc
inc
pop
std
pop
stos
push
add
mov
call
fcom
mov
jae
sub
mov
popa
clc
cmpsb
xchg
dec
adc
in
jmp
cli
lret
gs
xor
mov
ja
stos
bound
and
and
xchg
lcall
sbb
dec
sub
and
pop
repz
mov
test
je
cltd
xor
add
arpl
arpl
in
ss
loopne
aad
pop
mov
cmp
mov
popf
mov
inc
out
xlat
in
in
ret
mov
test
jge
and
xchg
adc
inc
lea
xchg
inc
shll
pop
les
data16
inc
push
push
sbb
cmp
jmpw
mov
jg
jp
jno
fsubr
jecxz
xchg
mov
pop
stos
and
fldl
pop
adc
xchg
je
rorl
adc
dec
cs
sbb
cmp
jae
enter
push
dec
or
push
mov
fwait
dec
push
xchg
push
in
push
lcall
fdivrp
lock
pop
pop
movsb
cmp
sti
dec
shrl
mov
jae
je
jge
push
dec
mov
inc
sub
xor
iret
jae
jmp
int3
addr16
xchg
jl
add
les
adc
adc
nop
lea
or
enter
aam
cld
xchg
mov
push
fucomi
ret
fsubl
js
adc
insb
mov
jnp
mov
scas
xor
subl
xchg
xchg
pop
enter
arpl
dec
int3
adc
pop
sarl
mov
mov
and
shll
test
mov
ja
and
movl
scas
aad
test
mov
xchg
movsl
stos
loope
stos
cmp
bound
cld
mov
pop
xor
sbb
jge
adc
and
roll
das
popa
outsb
loopne
mov
push
mov
loope
mov
imull
or
xchg
aam
movsl
es
push
jle
pusha
pop
ret
rclb
dec
add
cs
bound
mov
cmp
mov
sub
add
cs
je
in
shrl
insl
out
mov
popf
fidivrs
repz
stos
inc
mov
shl
mov
sti
push
test
jns
cli
stos
in
xchg
xor
dec
jnp
xchg
ljmp
rcl
testl
lahf
push
ret
inc
setp
or
push
jge
stos
fstl
fcoml
aaa
daa
sbb
mov
lret
notb
adc
int3
idiv
cmp
in
aaa
mov
pushf
inc
data16
mov
inc
pop
push
out
push
jb
sbb
test
cmp
dec
xor
addr16
mov
sub
adcb
inc
mov
jl
cwtl
dec
jno
jl
or
pushf
aaa
out
repz
ja
fnsave
loopne
mov
sarl
iret
sti
test
neg
xor
frstor
insb
js
int3
je
lcall
cli
and
add
ss
jge
dec
int3
sbb
test
clc
aaa
lods
dec
mov
lahf
mov
mov
in
into
pop
out
or
add
sbb
jno
mov
add
jae
insb
jecxz
lcall
inc
sbb
dec
jmp
pop
push
sub
jb
add
outsb
cmp
add
orps
rol
pop
lahf
xchg
test
xor
pop
dec
test
cli
add
sub
shl
sub
mov
add
pop
jmp
mov
clc
cmp
hlt
nop
jb
lods
roll
popa
out
shrl
aas
cmp
mov
fisubl
je
gs
pusha
mov
add
pop
fstl
fstpt
adc
xlat
xchg
or
xchg
out
add
in
rcr
mov
cmc
sub
mov
loope
lcall
push
sbb
es
fdivrs
dec
popf
push
lret
mov
mov
pop
cmpsl
push
cmp
dec
popf
test
xor
mov
push
mov
ljmp
loopne
popf
lret
gs
f2xm1
pop
daa
lea
mov
jl
pop
jns
sub
mov
and
clc
jbe
je
cmc
aas
inc
lods
and
xchg
jo
mov
sarb
add
xchg
in
sahf
jl
or
push
out
sbbb
sub
sub
into
mov
fldpi
add
mov
adc
inc
bound
into
dec
sbb
push
push
imul
into
mov
and
sub
adc
sub
icebp
aas
dec
imul
mov
mov
mov
or
xor
cld
lods
cmp
xor
cmpsl
mov
adc
mov
pop
cmp
jge
adc
mov
aaa
jns
outsb
loope
fisttpll
mov
pop
ss
pop
je
xchg
sbb
mov
jge
inc
sbb
sub
mov
sub
cltd
mov
mov
push
mov
imul
push
movsl
mov
mov
mov
in
xchg
and
push
or
sahf
out
mov
jb
mov
pushf
mov
cmpsb
cwtl
aaa
inc
test
enter
sub
pop
xchg
push
idiv
ret
test
cmp
jno
into
sbb
add
inc
mov
aam
mov
mov
jbe
icebp
add
pop
fsubl
inc
and
jmp
inc
xor
xlat
jnp
fwait
or
leave
aaa
xchg
fildll
xor
sbb
xchg
push
inc
add
jae
popl
push
sbb
inc
jnp
mov
cmp
xor
fdivs
pop
ja
add
pop
dec
rclb
mov
and
lods
pop
je
pop
inc
push
insb
cwtl
dec
test
cs
in
push
xor
ds
push
add
clc
pop
rclb
push
jbe
mov
jl
or
push
sbb
or
popa
push
cmp
push
or
lods
jae
inc
or
pop
xor
adcb
fdivrs
cvtpi2ps
jl
sbb
lret
sub
out
jmp
mov
popf
mov
mov
jecxz
mov
sbb
mov
and
inc
jl
jecxz
stc
inc
fwait
pop
jb
jbe
sbb
in
adc
in
jl
push
ljmp
mov
leave
lret
stos
cs
testb
cmpsb
arpl
icebp
ret
fs
pop
sbb
jmp
xor
cmpsl
fstpt
sub
aam
imul
push
cmpsb
int
sub
xchg
insb
xchg
sbb
mov
inc
sbb
ret
nop
add
cmpsb
outsl
adc
sbbl
das
in
push
push
or
inc
lods
into
and
jecxz
jne
out
inc
ret
lods
mov
movsb
sub
sahf
fistpll
and
fwait
mov
bnd
call
std
cmp
mov
hlt
jp
add
ljmp
lret
add
pop
xchg
push
xchg
cmp
mulb
mov
or
loop
pop
mov
lahf
mov
repnz
push
and
imul
add
stos
cmc
jmp
sbb
and
adc
rorl
dec
imul
pop
push
das
je
jnp
fnstenv
mov
dec
jmp
mov
pusha
andb
jne
xchg
popf
cmc
loope
inc
jmp
jbe
fs
adc
xor
jecxz
xchg
inc
ss
andl
or
imul
enter
lea
fdivl
cmp
mov
loope
sbb
cmp
lds
js
inc
inc
das
sarl
mov
mov
and
xor
mov
lock
aam
dec
in
jle
cmp
sbb
mov
incl
int3
outsb
cs
lret
and
ret
cmp
clc
in
test
mov
push
sbb
ret
sub
jmp
jl
pushf
pop
jns
push
dec
jo
test
xor
aam
xchg
jp
and
in
mov
inc
dec
ds
jp
aam
test
jmp
pusha
mov
in
addb
push
push
add
nop
in
and
fcomi
aas
dec
pop
out
jae
adc
cmp
out
adc
jecxz
shlb
notl
sub
clc
xchg
in
addr16
aam
push
data16
mov
cmc
xchg
sbb
aaa
push
add
pop
stos
xor
cwtl
pop
out
test
xor
aas
adc
lock
test
lds
xchg
and
pusha
int
xor
mov
mov
mov
imul
xlat
cmc
or
cwtl
aaa
xchg
ffreep
sub
es
out
ljmp
xchg
jg
dec
int3
mov
and
push
xchg
pop
cli
lahf
cmp
cmpsl
stos
repnz
mov
cmpsb
daa
out
jmp
push
mov
out
pop
jne
jmp
fldcw
pop
mov
inc
mov
insb
addr16
add
or
mov
lods
jns
or
xchg
mov
sbb
xchg
test
jb
repnz
jle
xchg
push
jnp
popa
es
adc
ret
jno
sbb
in
dec
or
push
scas
aas
popf
mov
sbb
pop
and
idiv
hlt
les
xor
sti
addr16
jno
movsb
rol
das
jns
lock
daa
mov
sti
movsl
mov
adc
sbb
inc
cvtdq2pd
dec
cmp
cli
sbb
jne
std
fists
sbb
pop
xor
xor
sbb
push
jbe
ret
fnstsw
popa
std
lock
jmp
inc
fldl
mov
jmp
movsl
mov
xor
push
mov
jg
mov
dec
xchg
push
leave
mov
ret
cmp
sbb
test
sub
inc
movsl
cmpsl
test
pushf
dec
jo
push
push
imul
mov
bound
inc
or
sub
sbb
clc
push
cltd
jge
out
or
lcall
fistpll
mov
fs
test
and
cld
mov
out
in
dec
int
mov
jne
and
mov
in
call
icebp
fs
push
dec
pop
xchg
out
sub
adc
pop
test
lcall
aam
cmpsl
lods
pop
dec
sarl
jge
add
sbb
fistpll
jle
jle
imul
sub
add
xchg
inc
fisubl
push
mov
movsl
aad
mov
push
divb
mov
cmp
and
jecxz
pop
mov
add
jl
sub
sbbb
add
fs
xchg
test
fs
mov
and
enter
xchg
push
lret
sub
sub
fwait
mov
push
mov
jge
rcrb
jbe
in
mov
test
xchg
xchg
pop
add
leave
pop
ja
xor
cmp
rorb
mov
xor
stos
ss
push
rol
jno
mov
in
xchg
out
and
outsb
rcr
iret
shrb
xchg
xor
sub
sub
inc
popf
clc
int3
dec
xchg
out
push
pop
adc
jne
outsl
nop
aas
ss
sbb
fstps
test
repnz
push
cltd
and
test
push
sbb
and
mov
test
movsb
inc
orb
mov
lds
add
push
repnz
sub
hlt
pop
cmpsl
sbb
or
mov
sbb
mov
mov
xorb
ss
adc
adc
je
and
shll
pop
movsl
in
shlb
adc
mov
leave
mov
orl
inc
movsl
push
inc
inc
nop
push
adc
add
add
loop
lcall
adc
sub
mov
and
xor
and
jl
xor
pop
push
inc
or
push
sbb
roll
jb
out
pop
dec
cmp
sbb
inc
stos
lret
or
ds
sbb
add
pop
fadds
stos
sbb
pop
outsl
rcl
and
sbbl
mov
idivb
sub
dec
mov
je
mov
xchg
sbb
mov
mov
outsl
mov
flds
out
push
push
jo
cli
roll
repz
fldl
sub
mov
jae
call
jl
outsl
push
push
adc
leave
inc
pop
push
push
xor
pop
xchg
and
cwtl
and
inc
test
repnz
push
movsb
pop
sub
xorb
push
repnz
xchg
gs
ret
outsl
nop
push
push
add
xchg
cmp
push
add
test
sbb
inc
xor
dec
divb
jbe
stc
and
or
cli
movsb
mov
xor
fdiv
pusha
pop
jno
ret
dec
mov
jbe
jge
add
ss
xchg
push
mov
lds
std
pop
js
stc
adc
or
movsl
fdiv
aaa
ret
negl
cltd
push
and
mov
out
xor
pop
push
or
mov
sbb
mov
add
jge
dec
pop
xor
mov
mov
cs
inc
or
scas
fldt
mov
cmp
enter
sub
jmp
xor
imul
inc
loop
pop
out
lods
xchg
cmp
inc
mov
xchg
stos
scas
xchg
iret
aaa
push
fiaddl
jb
dec
cmpsl
cmp
hlt
mov
dec
in
in
add
cli
add
mov
or
xchg
ss
and
and
sti
call
lods
mov
stos
add
out
mov
sbb
je
xor
cmp
into
cmp
xchg
cmc
adcb
or
iret
sub
mov
mulb
inc
clc
scas
push
test
xorb
idivl
push
xor
js
push
pusha
sub
add
imul
lods
mov
and
pop
aas
mov
dec
cmp
fwait
cmpsb
xor
int3
xchg
mov
dec
or
cwtl
jecxz
push
push
dec
push
dec
in
ja
and
xor
test
lods
sti
mov
scas
xchg
bound
test
xor
fisubrl
inc
or
loope
repz
loop
push
idivl
cs
sbb
pop
sbb
lds
xchg
fstpl
clc
call
in
out
shlb
adc
inc
out
mov
pusha
lret
xchg
test
jne
sti
push
and
push
sbb
cwtl
xor
add
loop
test
and
xlat
or
icebp
bound
lret
xchg
adc
loope
xor
dec
sbbb
adc
sti
dec
push
cmp
movsb
out
mov
adc
pop
inc
in
jb
and
cs
jmp
push
faddp
loopne
mov
jg
lea
fnstsw
pushf
pop
and
sub
mov
lcall
sahf
jp
add
push
inc
in
int3
inc
sbb
ret
ret
mov
pushf
pop
jae
fimuls
jmp
jo
data16
add
imul
dec
cmpl
mov
xchg
xchg
xchg
xchg
dec
sub
jo
les
movsl
add
inc
mov
push
out
and
mov
adc
movsb
mov
pop
push
aaa
in
ja
adc
shr
push
jns
mov
cwtl
adc
sub
out
push
xchg
adc
and
push
mov
mov
jp
stos
jmp
cmp
xchg
fldcw
mov
insl
int3
push
push
es
pop
adc
rcl
push
repnz
loopne
popf
sahf
jmp
out
testb
loope
cwtl
mov
push
xor
pop
fcoms
pop
lea
das
cmpb
fdiv
xchg
sbb
push
test
cmpsb
aad
imul
and
cwtl
cwtl
and
inc
clc
mov
outsl
aad
mov
cltd
pop
mov
decl
nop
shll
scas
sahf
cmp
adc
dec
es
je
push
lds
jle
into
cmpsb
xchg
stc
das
ljmp
pop
ja
lods
add
lret
or
stc
ljmp
mov
rorb
add
rcrl
rclb
sarb
mov
sub
nop
cwtl
bound
push
inc
jecxz
loop
adc
and
sahf
push
adc
xor
je
mov
mov
push
push
sbb
icebp
sbb
jo
jg
aas
test
movsb
movsl
jae
in
pop
pop
sti
cmp
inc
int
outsl
js
movsl
jmp
or
mov
sbb
inc
lahf
call
inc
ss
pushf
xor
inc
push
movsb
xorb
icebp
xchg
ss
pop
or
dec
insl
add
mov
pop
movl
repnz
daa
cmp
shrl
sbb
out
adc
fistl
ja
mov
loop
mov
add
cmp
inc
enter
sbb
daa
pop
push
fsubrp
movsl
mov
inc
insl
gs
adc
or
or
cmp
mov
lea
gs
arpl
es
sbb
repz
out
add
push
push
cmpsb
sbb
inc
xor
ffreep
mov
hlt
xchg
int3
enter
pop
ss
mov
pop
inc
xchg
sti
out
sbb
or
nop
outsl
mov
lods
xchg
stos
jae
sbb
mov
push
xchg
les
xchg
and
mov
or
mov
and
lods
jbe
add
ret
xorb
in
fistl
sarl
flds
cmpsb
arpl
aam
pop
cs
test
pop
ret
mov
add
ret
push
mov
movsb
mov
aaa
pushf
adc
in
push
jl
es
jp
cli
mov
lea
imul
addl
fstp
cmp
sub
push
ds
dec
cmpb
shrb
and
std
pop
fcompl
nop
push
and
dec
or
je
sbb
jecxz
cmpsb
fldenv
ja
test
adc
leave
sarb
xchg
push
vmread
sbb
popa
stos
clc
pop
mov
jo
test
andl
pop
add
cmc
loopne
xchg
jbe
dec
int3
ja
xor
loop
and
mov
add
lahf
dec
push
fbstp
jno
out
out
mov
xchg
leave
stos
pop
nop
mov
pushf
fcoms
mov
fmuls
xor
push
in
ja
xor
cmpsl
imul
push
sub
clc
rolb
test
jg
inc
aad
fldcw
pop
mov
or
cmp
aas
inc
sbb
call
lcall
nop
jecxz
fistpl
scas
cmp
xchg
and
sub
psubq
out
and
dec
push
pop
jmp
pop
sub
data16
daa
les
sub
addr16
shll
inc
mov
rclb
xlat
aad
bound
and
adc
inc
ja
aaa
dec
pop
push
or
mov
push
out
xlat
ret
inc
rorb
mov
inc
cmpsb
addr16
mov
and
jo
jmp
xchg
jnp
cmp
xchg
sub
popl
inc
push
lea
mov
or
lret
jle
ljmp
jne
xor
arpl
imul
fsubp
and
or
sahf
loopne
sbb
sub
xchg
nop
imul
dec
sbb
inc
jle
out
shl
jg
pop
or
call
push
int3
out
lahf
test
icebp
mov
mov
xchg
pop
pop
scas
mov
int3
xchg
or
mov
call
adc
sarb
lock
push
mov
adcb
jl
mov
mov
loop
push
adc
xor
nop
mov
pop
sub
adc
popa
sbb
push
out
cmc
push
stos
push
mov
in
loop
test
inc
test
rolb
scas
cld
shl
xor
cmp
sub
ja
inc
leave
xchg
pusha
or
push
sub
lcall
adc
push
cmc
xorl
ror
adc
add
mov
test
mov
bsf
push
out
xchg
jb
adc
adc
mov
aas
inc
xchg
bound
mov
aam
dec
enter
lret
fucomip
xlat
insb
out
int
inc
test
in
add
insl
stc
mov
xchg
cmp
cmpsl
xor
jecxz
mov
push
dec
sbbl
nop
into
add
or
out
cmp
xchg
insb
adc
test
dec
jno
jg
pop
ret
negl
shr
push
aaa
ret
inc
lea
mov
inc
dec
mov
lds
insb
push
inc
into
scas
daa
popf
jo
notb
pop
sub
or
dec
sub
lret
xor
xor
xchg
adc
push
movb
outsb
adc
cmp
fistpll
insb
add
repnz
subb
mov
push
bound
sahf
cmpsl
jmp
or
loop
sbb
cmp
cmp
ret
mov
and
jns
addr16
decl
insl
sbb
in
test
or
mov
repnz
je
jb
imul
stc
pop
add
cltd
fimull
sbb
cmp
adc
dec
dec
inc
pushf
clc
xchg
add
shrb
or
sbb
inc
add
aad
add
push
dec
std
push
rcl
iret
ds
sbb
arpl
fcomps
hlt
popa
sub
inc
jl
mov
leave
inc
xchg
add
xor
testl
stos
inc
adc
pop
pop
das
repz
out
mov
adc
call
ja
out
into
lcall
mov
mov
mov
test
dec
add
or
pushf
dec
and
inc
xor
pushf
adc
mov
stos
dec
mov
cmpsl
scas
in
rcrl
rclb
xor
popf
lahf
out
cltd
in
jae
mov
aas
push
repz
add
inc
mov
lret
lcall
mov
mov
adc
sub
dec
mov
rcrb
clc
xchg
bound
mov
fiadds
outsb
push
lret
push
xchg
enter
xor
lahf
xchg
mov
mov
and
push
xchg
das
push
adc
mov
pop
aaa
push
roll
clc
int
in
call
xchg
stc
mov
inc
and
adc
fdivs
inc
mov
mov
lods
mov
jne
loop
fidivs
or
scas
out
jg
shr
add
cmpsb
movaps
xchg
por
jge
daa
inc
or
lret
xor
mov
bound
cmc
jp
bound
inc
pop
in
xchg
fxam
std
cltd
leave
dec
xrelease
adc
add
imul
mov
in
push
outsb
jae
mov
ficoms
inc
ffree
lea
andb
repnz
jl
scas
mov
stc
fistpll
dec
jb
inc
pop
ss
mov
daa
mov
mov
inc
adc
idivl
das
scas
ret
cmp
mov
fisubrl
or
jp
lahf
jle
orl
sbb
pop
dec
push
push
adc
mov
inc
or
mov
in
mov
cmp
sub
int3
outsb
stc
test
push
cmpsl
stc
xor
pop
imul
or
sbb
sarl
in
add
shlb
xchg
jp
bnd
enter
lcall
mulb
mov
sub
mov
mov
popa
mov
sbb
push
cmp
xor
or
dec
and
pop
lahf
mov
mov
ss
stos
xchg
lahf
dec
and
test
outsb
sahf
and
imul
dec
mov
ret
stos
mov
jno
sub
pop
push
mov
pop
sbb
cs
addb
inc
setl
out
mov
push
sbbb
lea
pop
or
inc
xchg
daa
or
das
or
push
mov
mov
pop
xchg
add
clc
and
lds
lret
cwtl
xor
sub
insl
hlt
adc
ret
sbb
lea
sbb
ret
repnz
pop
xchg
push
mov
jb
fstpl
push
les
jnp
dec
mov
cmc
int
je
fisubrl
insb
jo
mov
sub
sub
push
sub
or
repz
in
aam
in
push
add
outsl
xchg
ret
icebp
repz
xor
das
out
cs
mov
cmpsb
xor
push
imul
pop
xchg
shlb
pop
int
push
add
lods
cmp
push
xor
inc
mov
add
adc
mov
push
cltd
push
mov
dec
xor
or
xor
dec
mov
mov
js
dec
push
outsl
xchg
sub
aaa
popa
xchg
push
bts
mov
and
push
xchg
push
inc
aas
cmpsl
rep
adc
sub
push
dec
lret
stos
out
jmp
xchg
mov
je
mov
push
jnp
lret
and
insl
jp
bound
loopne
xchg
xchg
mov
clc
xchg
jl
addr16
cmp
pusha
xor
loope
shl
fs
push
inc
out
hlt
ret
mov
clc
cmp
lret
xor
rcrl
rcrl
ljmp
push
ljmp
iret
inc
sub
negb
aaa
aas
xor
xor
popl
xor
movsl
xchg
push
dec
lods
in
cmpsl
push
scas
scas
das
cmp
es
dec
xor
aam
pusha
mov
outsl
test
outsb
test
insb
and
nop
mov
fidivl
pop
push
les
movsl
jo
movsl
call
add
add
cmpsb
inc
in
dec
cltd
xor
sbb
cmp
flds
stos
xchg
xlat
aas
and
punpcklbw
push
xchg
jne
and
mov
mov
pop
into
inc
adc
add
stc
pop
mov
lcall
loop
call
icebp
in
sbb
mov
imul
pop
dec
xor
imul
pop
roll
push
xchg
bound
leave
adc
repnz
push
mov
xorb
in
pop
and
xlat
push
cmc
xchg
push
and
lods
orl
mov
add
das
dec
cltd
test
xchg
push
sbb
shrb
jno
add
and
push
subl
out
pop
jmp
sbb
jle
test
push
add
pusha
or
pop
or
ss
arpl
jmp
sbb
lock
test
mov
inc
js
lcall
or
mov
jbe
insl
aam
mov
std
xchg
arpl
in
iret
das
lock
mov
loopne
stc
cmp
pushl
pop
ss
test
fsub
aam
xchg
call
clc
pop
fistpll
xchg
rcrl
push
std
dec
std
mov
push
shll
mov
adc
mov
ja
scas
or
in
loop
out
dec
mov
xor
bound
dec
cmpsb
ret
test
push
and
daa
popf
push
ljmp
jg
mov
sub
xchg
mov
inc
js
mov
xor
popa
movsl
xchg
fnstenv
mov
add
pop
jle
mov
dec
lock
cmpl
jno
test
add
fidivs
push
aas
out
and
bound
inc
movsb
cltd
scas
adc
jbe
inc
lds
xor
or
ret
mov
pop
rorl
iret
aad
fwait
test
inc
and
mov
lea
js
mov
xchg
into
dec
mov
insl
jle
sub
push
sub
push
push
mov
iret
push
fwait
adc
je
xor
push
sysenter
sbb
xorl
dec
push
mov
xchg
inc
and
sbb
xor
fnstcw
pop
sahf
in
or
cltd
jno
xor
push
cmpsl
jnp
and
xor
int
mov
orb
mov
mov
mov
pusha
fnstsw
lahf
sbb
stc
jecxz
lahf
jg
sub
call
in
lea
mov
sbb
mov
sbb
inc
lcall
lahf
mov
bound
sbb
js
ret
add
add
inc
je
ss
mov
jg
and
lock
and
sbb
popa
js
push
insb
cli
add
stos
sbb
or
js
and
dec
imul
maskmovq
idivl
imul
mov
dec
fwait
jle
lret
movsb
sbb
aaa
stos
inc
hlt
movsl
test
inc
and
pop
in
gs
lcall
mov
pusha
cmp
shlb
inc
add
mov
pop
fldl
sub
adc
xchg
shll
shll
sbb
jns
ss
out
xchg
pushf
icebp
jmp
dec
jg
mov
inc
pop
insl
jbe
aam
sahf
pop
repnz
popf
jge
sub
mov
push
dec
dec
mov
or
cs
jnp,pn
decl
lret
or
pop
inc
scas
nop
lods
jns
jo
push
mov
jmp
sahf
mov
int
inc
out
or
dec
loop
shrl
fdivrs
scas
sub
sub
idivl
pop
jne
lret
dec
es
inc
cwtl
or
fcomps
and
jmp
jb
das
cmpsl
pop
ret
xor
xlat
cli
sbb
fisttpll
rolb
mov
xor
sbb
push
add
pop
outsl
call
xor
jne
iret
sbb
pop
cmp
fcomps
insb
or
mov
hlt
fstl
sub
je
xor
mov
ret
cmp
std
push
pop
das
mov
jae
mov
push
cwtl
xor
sub
ret
add
mov
repnz
iret
insl
shll
push
lcall
sub
daa
andl
xrelease
hlt
in
lret
hlt
add
loope
xor
lock
xor
xchg
scas
insl
fs
pop
pusha
rcrl
jno
scas
mov
inc
clc
sbb
movsl
sub
jnp
xor
in
jne
mov
repz
out
ljmp
aad
sub
sbb
jns
inc
mov
cmp
fldcw
bound
ror
and
or
jae
hlt
stc
sub
daa
js
outsb
daa
shlb
xor
lret
cmp
fwait
mov
and
mov
call
mov
or
mov
testl
imul
pushf
int3
mov
mov
ss
sbb
pop
cld
jmp
movsl
movsb
pop
pop
addb
mov
push
mov
push
repz
jno
mov
adc
imul
pop
icebp
out
jno
mov
add
outsb
pop
xor
ja
xchg
cld
pop
sbb
pusha
jle
sahf
std
mov
push
mov
push
bound
adc
mov
fs
imul
jns
push
push
insl
fsubrl
pop
mov
mov
and
lods
mov
movsb
lret
repnz
rolb
xor
dec
mov
icebp
outsb
in
or
rorl
dec
mov
xor
loope
aam
adc
insl
je
sahf
out
xor
and
or
mov
out
mov
fcomi
pop
out
sbb
push
mov
imul
sbb
lea
pop
fsub
imul
add
std
dec
loopne
icebp
mov
dec
fsts
mov
cld
and
push
pop
inc
mov
ror
fsubr
in
fisubrl
cmpsb
dec
push
or
xor
cmp
inc
cmp
xor
lods
cmp
jl
or
jmp
stos
push
sahf
lahf
cmpl
movsb
cld
mov
jnp
adcl
aaa
push
pusha
out
and
and
mov
cmp
movsb
dec
bound
sbb
es
in
or
cmp
mov
inc
jecxz
bound
pop
aaa
jg
mov
add
xor
stos
jae
mov
jp
inc
imul
jo
pop
cli
cmp
mov
add
mov
pop
lock
scas
jg
pop
outsl
jnp
call
test
popa
mov
icebp
clc
cmp
sub
mov
xchg
mov
push
xchg
fldt
adc
adc
fdivrs
xchg
cld
mov
jno
cmp
jno
mov
xor
mov
mov
shl
dec
inc
mov
sti
mov
add
adcl
pop
mov
fisttpl
jmp
shlb
ljmp
jbe
mov
and
sbb
rcl
cld
fs
xchg
mov
pushf
flds
and
test
adc
std
cmc
push
cltd
shrb
sbb
inc
cmp
outsb
jnp
add
or
pop
dec
mov
lods
addl
mov
sub
add
push
push
adc
pop
xor
js
jecxz
mov
lret
leave
xor
xor
cmp
add
and
jns
push
pop
dec
fs
andb
mov
orb
push
dec
push
add
sub
push
lds
cli
sub
and
mov
cld
sbb
ret
lods
and
xor
aam
imul
sarb
jmp
jmp
mov
sub
fstpt
add
or
fcoms
jne
and
inc
aas
enter
xchg
repz
mov
in
out
add
adc
or
aaa
dec
pop
xor
sarl
sbb
imul
push
cmp
push
fisubl
or
pop
nop
fisttpll
pop
data16
xor
mov
out
push
imul
call
cmp
inc
rolb
jne
mov
dec
and
mov
adc
es
in
mov
sbb
ficompl
ret
cmp
sub
inc
out
inc
sub
and
repnz
popa
mov
inc
xchg
sub
lret
pop
mov
jns
test
dec
scas
xor
aam
inc
pop
lcall
inc
fsubs
test
add
scas
sbb
clc
shll
jg
or
sbb
jno
jo
jmp
in
movsb
sub
mov
cld
sahf
xchg
je
mov
adcl
push
js
mov
push
xchg
test
inc
push
inc
push
push
mov
and
xor
push
cmp
sub
lret
int3
adc
es
idivl
pop
outsb
mov
inc
out
xor
adc
jae
clc
daa
leave
mov
and
adcl
xchg
stos
jb
fcompl
pop
and
jecxz
outsl
ljmp
or
mov
lds
cltd
pop
pop
jp
je
inc
mov
mov
inc
jbe
mov
jae
cmp
std
add
pop
ljmp
bswap
ss
mov
and
jbe
and
fbld
push
add
inc
cmp
xchg
bt
lcall
mov
cmpsb
lods
dec
js
popa
mov
bndstx
rorb
loope
add
dec
adc
adc
sti
ja
mov
fs
jg
mov
lock
call
mov
daa
lcall
xchg
mov
fld
mov
fdivs
push
pop
pop
fisubrs
stos
mov
lcall
inc
shr
mov
aas
aam
scas
lods
test
inc
and
enter
inc
stc
add
sbb
mov
fbld
mov
sbb
sti
popf
mov
and
jecxz
divb
sahf
jae
push
push
mov
mov
cmovbe
loop
sbb
idivb
subb
cmpsl
aaa
dec
xchg
push
cmp
test
in
cmpsl
push
jecxz
fcmovnu
jl
out
pop
mov
pop
push
pop
sbb
cmp
jg
fisubl
adc
cmp
sbb
jp
and
add
fstpt
xchg
and
or
pop
xor
sbb
add
std
inc
stos
daa
leave
jecxz
xchg
sbb
inc
imul
test
stos
dec
loope
add
xor
bound
mov
std
jb
addr16
dec
int
jge
cmp
setnp
push
sbb
sti
test
xchg
xchg
and
sbb
adc
push
xor
xor
jp
xor
sarb
inc
mov
lret
push
sbb
in
pop
inc
mov
sub
les
pop
push
aas
xchg
mov
dec
pop
jb
sub
loope
negl
in
mov
jbe
or
or
push
add
aaa
xchg
add
inc
pop
and
mov
and
mov
lcall
ret
jae
lock
lds
leave
shr
dec
xor
add
adc
push
call
xor
mov
xor
loope
sar
repnz
or
sbb
push
test
std
movl
and
mov
inc
js
pop
or
ret
lds
outsb
inc
xchg
adc
xchg
xor
lret
pop
cmpsl
lods
int
cld
les
test
mov
pop
and
mov
push
sbb
jne
outsb
or
add
lock
lock
outsb
adc
js
aas
ja
xchg
movsl
xchg
pop
std
std
inc
imulb
cwtl
pop
jns
mov
mov
mov
ljmp
call
lods
inc
in
and
pop
and
outsl
das
sbb
mov
scas
lcall
pop
or
push
jnp
mov
sbb
mov
lock
rcr
push
std
imull
fcoml
xchg
push
mov
add
or
ret
cmp
add
push
xlat
sbb
popa
xchg
sbb
pop
imul
adcb
mov
jbe
push
fwait
mov
scas
mov
je
fwait
scas
lods
mov
ja
sbb
int3
into
leave
fsubrs
mov
rorb
adc
shll
and
mov
cmovp
cmp
pop
and
mov
add
mov
push
mov
ficoml
ss
xchg
sub
pop
lret
cmp
pop
jle
inc
out
sbb
fistps
and
aaa
mov
xor
rol
leave
test
dec
xchg
rol
or
testl
xchg
mov
mov
and
xor
mov
aas
nop
xor
jle
adcl
lahf
mov
mov
enter
loop
push
popa
jb
clc
lods
or
mov
in
lret
adc
inc
nop
jo
stos
cmp
xlat
leave
jae
adc
decb
mov
cmpb
and
push
movsl
add
pop
loop
mov
std
inc
pop
addb
sbb
dec
xchg
aaa
xchg
or
clc
xchg
popf
out
sbb
xchg
inc
lahf
push
sub
or
sub
insb
cmp
ss
add
jecxz
dec
ljmp
nop
dec
clc
push
loop
dec
iret
divb
rolb
pop
jno
pop
adc
jg
mov
gs
dec
leave
jo
mov
fidivrl
mov
testb
std
or
fcomp
inc
rclb
push
mov
mov
js
jnp
lods
scas
dec
inc
fidivl
push
int
jge
das
psrlq
jecxz
push
aas
call
ds
ljmp
or
xor
ljmp
dec
mulb
pop
mov
or
xor
cmp
mov
jle
sub
sbbl
shll
jae
out
subl
fidivl
lret
and
call
cmp
inc
cmp
pop
mov
fldt
lret
bound
mov
push
sub
int
mov
dec
pop
add
dec
cmpsb
fwait
hlt
pop
ja
mov
bound
mov
popa
jp
arpl
fdivr
xor
or
cmp
push
test
sysret
pxor
sarl
push
fs
dec
mov
mov
sub
push
hlt
xor
dec
cmp
shlb
adc
enter
or
imul
lcall
jbe
xchg
or
cld
dec
inc
add
push
xchg
iret
shr
loopne
cwtl
xchg
mov
xchg
lods
sub
xchg
sti
fwait
cmpsl
adc
sbb
repz
xchg
or
dec
idivb
int
sbb
sbb
imul
mov
mov
cmp
fstpt
xor
xchg
fldt
mov
push
mov
pop
fdivl
adc
sti
jmp
sbb
in
inc
xchg
pop
roll
imul
sub
add
pop
or
out
fisubrs
pop
pop
jae
repnz
sbb
pop
push
daa
xchg
mov
mov
push
icebp
mov
int3
lret
and
cs
adc
mov
mov
cmp
andb
inc
sub
jmp
loopne
lcall
sbb
mov
stos
shll
pop
ljmp
iret
movsb
cmp
imulb
xlat
xchg
inc
mov
fists
jne
test
outsb
test
adc
pop
jmp
pushf
lret
pop
loopne
jecxz
mov
xchg
sbb
dec
stos
inc
out
pushf
add
fidivrl
jge
cmp
cmp
lret
ss
push
or
jecxz
loope
cld
cltd
xchg
das
stos
mov
ds
inc
sbb
jmp
daa
or
in
loopne
push
jne
jge
or
or
push
mov
jnp
cltd
push
cmp
jl
or
sub
dec
std
lcall
or
mov
or
cmpl
jne
shr
xchg
outsb
sbb
dec
test
hlt
sbb
sarb
pop
out
inc
in
push
or
imul
stc
and
dec
out
into
mov
mov
pop
sub
adc
aaa
insl
mov
dec
fisttps
pushf
jno
jge
inc
rcrl
cmp
mov
or
sub
shrb
push
push
ss
popa
lods
mov
and
loop
sbb
pop
pop
arpl
sysret
xor
leave
sysexit
push
test
ljmp
fisubl
scas
popf
popf
xchg
in
icebp
pop
loop
scas
ja
lahf
mov
jl
inc
xchg
pop
or
xor
mov
repz
xchg
lds
mov
aaa
or
mov
stos
inc
pop
inc
fimull
xchg
push
aad
mov
xchg
fwait
xchg
dec
lcall
inc
idivl
add
add
decl
das
mov
jne
out
sbb
fimuls
negl
test
notl
call
xor
das
outsl
mov
insb
jno
add
add
adc
mov
les
add
cli
dec
out
mov
inc
fwait
gs
dec
push
lret
test
dec
push
jge
pop
mov
sti
or
les
lret
notb
aam
jb
push
loope
les
and
add
pop
repz
lret
mov
inc
mov
ds
xor
adc
stos
sbb
popa
test
in
push
jle
aas
xor
push
xchg
add
adc
push
cmp
test
cs
jo
and
inc
test
push
lods
push
adc
in
mov
mov
sub
call
aaa
lret
and
in
jb
push
pop
sbb
out
mov
mov
push
rcrl
mov
mov
out
add
pop
push
mov
inc
and
mov
jmp
jle
dec
nop
mov
mov
jne
or
fcomps
push
push
das
rorb
dec
iret
push
int
insl
xor
add
call
imul
mov
loop
cmp
inc
push
xor
orl
movb
js
std
aam
fiaddl
daa
in
add
or
sbb
push
xchg
scas
xor
daa
add
test
push
std
push
xor
das
ficompl
push
or
mov
jecxz
test
aaa
shrb
hlt
xchg
je
sub
lods
in
pop
call
jbe
jmp
inc
rclb
shrb
out
out
xor
imul
jle
and
arpl
mov
mov
jge
mov
sbb
out
add
cmp
int
mov
ds
and
repnz
adc
scas
movsb
jl
bswap
mov
in
mov
subl
in
mov
dec
jl
xor
clc
mov
lods
fadds
fisttps
and
mov
js
imul
xchg
and
out
call
enter
mov
movsl
popa
jo,pn
push
jge
xchg
jge
push
mov
cmp
push
or
fsubs
jecxz
imul
adc
adc
mov
cmp
mov
lods
shlb
cmp
add
dec
in
or
addl
daa
mov
jnp
sub
clc
sub
loop
mov
pop
xorl
imul
sub
aam
cwtl
mov
test
std
aaa
push
push
in
lock
xchg
or
mov
add
mov
icebp
xchg
mov
leave
xchg
scas
add
cld
data16
jae
dec
sub
sub
lcall
inc
hlt
lods
dec
sub
addr16
inc
and
sub
in
push
or
insb
inc
clc
sub
sbbb
xchg
sbb
aad
fldl
scas
sbb
sub
pushf
movsb
mov
lock
fisttpl
cld
lahf
mov
movsl
ds
rcr
push
mov
adc
iret
cmp
ss
push
mov
mov
fcom
call
in
push
fs
mov
push
xor
or
stos
fistpl
das
pusha
and
mov
mov
je
or
lahf
pop
mov
adc
adc
mov
push
movsb
jbe
arpl
mov
cwtl
mov
adcl
pusha
dec
enter
dec
fildll
push
int3
adc
cmp
ret
dec
push
push
add
mov
pop
or
mov
push
pusha
jle
rcrb
add
punpckhwd
xor
lock
jecxz
iret
fstps
sti
push
adc
jl
dec
sbb
dec
and
inc
jle
imul
gs
mov
iret
mov
push
mov
aad
pop
lea
inc
sbb
cs
dec
pop
mov
lds
fldenv
outsl
repnz
call
jecxz
pop
fildll
inc
jnp
scas
scas
rcrb
sub
push
pop
xchg
sahf
fcmovnbe
loopne
aad
or
and
inc
test
jge
cmp
in
pop
dec
mov
dec
push
dec
mov
push
dec
dec
and
cli
in
push
mov
leave
sbbl
sub
push
lds
idivb
iret
adc
cwtl
push
cmpsl
push
shl
dec
lods
imul
and
push
loop
xor
mov
cmpsb
mov
adc
in
jg
aam
gs
mov
test
cmp
popa
pop
fisubs
sbb
xchg
xchg
jo
push
cmc
es
xor
rcrl
pop
clc
mov
xor
xchg
cmp
sbbl
lds
pcmpgtb
push
dec
pushf
xchg
pushf
nop
pop
xor
adc
cmp
dec
mov
pop
gs
stos
test
call
sbb
movsb
xlat
aaa
shlb
lds
cmp
popf
mov
adc
insb
jno
in
adc
andb
mov
fisubl
enter
ljmp
setno
jle
mull
xlat
push
adc
dec
xchg
test
adc
pop
jmp
sahf
push
or
and
mov
cmp
lret
in
nop
es
push
lock
push
out
fwait
int3
in
add
pusha
pushf
scas
jg
cli
dec
out
adc
adc
sarl
cld
adc
test
pop
mov
sbb
daa
pusha
rcrb
shlb
fcompp
push
vxorps
inc
inc
jge
sub
sbb
pop
out
shr
stc
mov
mov
inc
mov
dec
lahf
xor
and
cld
mov
or
data16
xchg
das
int
mov
jo
mov
dec
mov
push
outsb
fmulp
sub
mov
lds
pslld
mov
jo
push
xor
cmp
cmp
lret
cld
xor
fucompp
adc
out
dec
out
test
lret
hlt
inc
mov
adc
pop
movsl
clc
into
fisttps
add
and
popf
mov
fs
jo
inc
mov
xchg
adc
ljmp
push
aad
movl
inc
cmp
add
adc
ja
mov
int3
inc
adc
push
fwait
ja
push
and
loopne
loopne
lock
dec
xor
aad
jnp
bound
adc
inc
or
js
and
push
pop
jne
or
shll
dec
scas
mov
stos
sarl
int
test
jnp
jnp
jbe
call
icebp
dec
sbb
aad
roll
xorb
sbb
or
test
add
jno
fdiv
xor
jp
jne
adc
inc
cmc
add
mov
cmp
rcr
or
test
movsb
jo
sti
lods
cli
push
or
test
fwait
std
pop
push
repz
ret
movsl
mov
in
lret
or
mov
imul
push
roll
xchg
sbb
or
inc
aas
adc
jg
hlt
cmp
lret
mov
mov
nop
push
mov
sahf
out
sbb
test
sub
adc
cmpsb
fwait
or
pop
xchg
aad
mov
and
repz
xchg
fldl
insb
add
cmp
filds
sti
fdivl
ja
mov
icebp
pusha
loop
outsl
push
xchg
pop
hlt
adc
lret
in
rcll
mov
xchg
jno
dec
sbb
cmc
push
jle
xchg
out
sbb
arpl
sahf
incb
push
push
in
push
xchg
in
test
dec
je
repnz
pusha
orl
cltd
push
mov
cmp
jle
push
xor
mov
add
or
mov
adc
cmp
jl
jmp
ja
or
nop
sub
jp
hlt
or
jns
lret
rcrb
mov
cmp
xlat
pop
stos
inc
mov
stos
cli
sbb
movsb
or
enter
xchg
adc
inc
call
and
add
inc
repnz
mov
nop
pop
mov
xor
rcr
pop
mov
xchg
jmp
xor
out
sub
or
sbb
mov
loopne
popa
dec
xor
sbb
movsl
int3
push
outsb
pop
pop
xchg
sbb
pop
cltd
sahf
daa
xor
addl
ret
mov
inc
and
mov
test
xor
mov
jge
and
xchg
add
xchg
push
mov
inc
inc
adc
jecxz
mov
jp
mov
xchg
or
mov
cmp
dec
inc
and
inc
pushf
sub
and
inc
fucomip
lret
dec
cwtl
ficomps
push
call
jge
les
jb
loop
repz
ja
dec
xor
dec
cli
imul
pop
aam
pop
fsub
mov
cltd
insb
aam
lcall
or
ja
push
enter
dec
ret
hlt
ret
push
pop
xchg
dec
dec
mov
jecxz
lods
in
pop
jl
jp
lds
jo
pop
mov
pushf
jp
xchg
loopne
ja
hlt
xor
push
cli
or
lcall
cwtl
fbstp
mov
and
dec
popa
cltd
cmp
movsl
dec
cld
addr16
bound
call
in
push
pop
jnp
push
fwait
add
cmc
or
imul
outsb
stos
call
mov
push
dec
mov
xor
arpl
imul
lds
jb
stos
ret
fldt
int3
push
movsl
jns
pop
mov
lcall
pop
leave
push
imul
mov
adcl
or
add
xchg
sahf
push
shlb
lldt
cmp
mov
adc
cmp
loope
adc
test
gs
cmpsb
adc
movsb
fstl
movsl
leave
xor
rol
push
scas
push
shl
fld
mov
sbb
dec
in
mov
push
and
add
mov
loope
cmpsb
hlt
daa
mov
add
out
insl
orl
je
inc
bnd
in
jo
pop
int3
lods
fisubl
xor
pop
dec
insl
dec
sbb
insb
lret
mov
out
imull
fwait
push
pop
insb
sbb
aas
je
and
sbb
fcmovne
jne
leave
add
mov
sub
mov
mov
aam
sbb
sbb
xor
mov
dec
xor
lods
cmp
insb
mov
movsl
mov
cwtl
dec
clc
sti
xor
addl
iret
pushf
mov
mov
dec
test
fcoml
and
mov
or
daa
popa
leave
in
jmp
cld
bound
jno
test
icebp
mov
fwait
xor
test
cmc
ret
jmp
addb
into
cs
mov
sar
in
test
dec
or
inc
loop
arpl
inc
je
pop
out
pop
sub
jge
or
dec
sbb
adc
mov
adc
ret
adc
sbb
fists
xor
xchg
pop
hlt
mov
push
outsb
inc
jg
lret
or
jmp
jnp
xchg
popf
loope
sub
sbb
addr16
or
push
dec
pop
add
sbb
pop
loopne
int3
inc
or
out
pop
bsf
xchg
jg
pop
cmpb
gs
push
jnp
cmc
xchg
jb
xorb
icebp
mov
notb
pop
test
add
es
insl
andb
sbb
scas
js
aad
xor
or
sti
add
les
dec
add
hlt
pop
popa
jo
jno
repnz
out
pop
aam
insl
push
enter
in
sub
aas
pop
add
mov
jecxz
sbbb
repnz
int
mov
xor
loope
jmp
clc
in
xchg
jecxz
aas
hlt
lahf
dec
sbb
lahf
loopne
jne
shl
push
rcl
xor
mov
xlat
push
jg
cmpsb
xchg
bound
mov
repz
jg
fdivrl
fcomps
sub
imul
fbstp
dec
push
nop
mov
lcall
mov
fwait
pop
push
enter
push
push
adc
or
mov
xor
enter
iret
pop
sbb
test
push
jno
cmc
cmp
insb
ja
scas
cld
stos
xchg
rcr
popa
push
and
stos
ror
lds
push
mov
mov
jo
or
out
fistps
mov
mov
out
clc
cmpsl
les
push
push
cmp
outsb
xor
inc
push
and
sarb
push
in
xchg
mull
outsb
inc
push
add
addr16
lret
pop
mov
and
xchg
shll
repnz
lods
int
aas
adc
in
and
push
nop
and
dec
mov
add
dec
push
cmp
fnstsw
mov
movsb
je
inc
xchg
dec
mov
cmpsl
and
and
pop
ret
xor
sub
sbb
insb
into
push
add
xchg
add
insb
add
cmp
jl
daa
and
dec
or
pop
and
mov
pop
lds
pop
inc
mov
pop
push
addr16
divl
imull
jmp
jb
inc
fwait
addb
daa
xchg
mov
xchg
int3
sub
pop
pop
in
push
pop
mov
xchg
fmul
dec
sub
loopne
xorb
addr16
ja
mov
aad
pop
sub
adc
aam
in
mov
pushf
mov
test
mov
cmp
sarl
clc
xchg
and
or
xchg
aas
xor
cltd
lret
push
pop
jae
mov
test
ljmp
out
imul
daa
jg
dec
mov
sub
inc
inc
loopne
ret
fwait
cs
std
push
out
pushf
shrb
xor
popf
stos
rclb
jae
jns
fwait
andb
call
jne
shrb
insl
arpl
fldl
xor
inc
movsl
and
and
xor
dec
dec
lahf
in
scas
imul
dec
inc
ret
mov
inc
fbstp
fldenv
xor
lahf
cmpsb
mov
and
add
ret
jl
xchg
or
xchg
bound
mov
and
iret
pushf
cmp
xor
lods
jmp
sub
aad
je
into
sbb
inc
mov
jo
cmp
push
shlb
adc
inc
jns
insb
ds
fsubs
mov
clc
in
arpl
cmp
pop
dec
push
in
cld
test
mov
loopne
inc
and
jl
xchg
imul
pop
push
sti
pop
jl
adc
in
xorl
mov
repz
clc
jp
imul
xchg
mov
adc
push
mov
rorl
push
fstpt
xchg
sbb
outsb
dec
lcall
push
aaa
or
xor
mov
popf
dec
and
cmpsl
cwtl
dec
out
fidivrl
sahf
pop
inc
mov
out
andl
in
pop
ja
into
or
adc
movsl
cmc
cmp
xchg
dec
in
cmp
lds
and
std
adc
pop
fldenv
repnz
jg
lods
or
jle
daa
testb
flds
and
gs
cmp
pop
fisubrs
sbb
hlt
pop
or
aam
sub
lret
mov
jge
and
test
inc
adc
shl
and
mov
sbb
xor
inc
test
add
sub
arpl
sub
lea
cld
xchg
arpl
sbb
fildl
xchg
scas
push
mov
out
lahf
je
add
sarl
mov
xor
out
nop
mov
ret
xchg
imul
jo
push
and
sti
popf
dec
jae
add
add
insb
lock
pop
add
cvtps2pd
les
les
lret
add
daa
ret
ss
iret
ljmp
jb
out
imul
mov
adc
imull
in
lock
lea
cmpsb
loop
inc
hlt
adc
add
jnp
idiv
xor
cmc
nop
inc
or
lds
mov
xchg
imul
repz
fcoms
out
push
push
mov
dec
stos
jbe
inc
pop
pop
test
xchg
daa
mov
aaa
mov
xor
sub
sub
mov
int
je
in
shrb
add
inc
pop
subb
cmp
rcrl
and
mov
outsb
mov
data16
adc
adc
mov
xchg
test
push
dec
scas
scas
push
pop
aam
out
mov
jge
push
aad
fs
xor
jge
cli
pop
add
jns
pop
pusha
xchg
lret
adc
pusha
mov
leave
gs
lds
jno
xchg
dec
dec
cmp
cmp
mov
arpl
mov
cmpsl
push
dec
shll
sbb
loope
sahf
leave
daa
cmp
pop
dec
adc
sti
jmp
mov
sub
leave
adc
mov
sub
adc
xor
inc
lock
pop
add
or
sub
cwtl
insb
sbb
call
mov
jp
cs
mov
jg
or
mov
cmp
lahf
loop
negb
or
lods
and
mov
mov
sbb
call
cld
inc
stos
push
add
dec
fsub
in
dec
fsubs
adc
int3
stc
jo
outsl
shl
xor
mov
jno
xchg
movsl
mov
xchg
cmp
lods
test
in
fidivs
fistpll
dec
dec
push
inc
mov
pop
cs
pop
popf
test
clc
out
pop
sub
mov
xor
xchg
add
test
inc
pusha
mov
xchg
jno
cmc
js
dec
pop
dec
xchg
shrb
lret
movsl
pop
and
jb
pushf
push
roll
sbb
pop
sub
scas
stos
pop
adc
mov
fisubs
add
sbb
sub
jbe
xchg
fnstenv
idivl
mov
into
gs
pop
das
sub
out
jno
xor
inc
daa
call
int3
push
add
loope
mov
mov
cmpsl
or
mov
insb
cmp
je
cltd
mov
adc
inc
xchg
jno
mov
scas
dec
cltd
or
xchg
cli
into
dec
das
push
cmp
adc
jnp
xor
leave
sbb
aaa
fldenv
shll
jnp
and
mov
stos
mov
lret
xchg
xchg
pushfw
xchg
mov
push
pusha
leave
aas
test
push
cmpsb
aaa
dec
xchg
cs
lret
cli
add
ds
mov
mov
dec
dec
ss
xor
stc
dec
ret
test
or
test
push
stc
lret
adc
dec
pop
add
div
andb
cmp
in
arpl
cmc
cmp
fsubrl
xor
xor
inc
mov
push
sahf
hlt
push
jp
inc
push
cwtl
mov
outsb
popa
or
aam
pop
push
scas
push
flds
mov
pop
adc
jne
dec
xor
ja
notl
jo
test
jnp
in
push
dec
xor
or
negb
jb
mov
and
adcl
pusha
subl
jns
inc
push
fnsave
sar
lea
fnstenv
ja
pop
xchg
call
sub
testb
sti
stos
push
sahf
sti
or
hlt
adc
popf
push
sbb
loopne
ret
ja
movsb
ja
repz
inc
cmp
inc
lods
aas
stos
stos
mov
cmp
and
jg
insb
icebp
cwtl
mov
xchg
inc
into
popf
and
sarl
xlat
push
and
jae
xchg
cmp
iret
subb
push
in
nop
xlat
int
test
gs
dec
outsb
lret
arpl
mov
out
daa
int
call
mov
popf
mov
push
fldcw
inc
and
aas
jne
rorb
repz
inc
lcall
loopne
int
lret
sbb
and
add
neg
or
aad
mov
mov
cwtl
stos
adc
mov
in
cld
push
xchg
pop
test
loopne
mov
push
mov
sub
repz
pop
pop
mov
out
and
out
aaa
jbe
scas
sub
jns
pop
inc
bndstx
shlb
sbb
dec
and
stos
addr16
scas
cmp
pop
mov
test
stos
xlat
es
mov
or
and
add
sbb
lea
push
mov
cmc
jl
mov
mov
push
or
jno
icebp
and
jecxz
testl
bound
daa
and
jmp
dec
loope
xchg
inc
sarl
sbb
and
mov
adc
cld
clc
mov
movsl
mov
sbb
cmpsl
and
je
push
jmp
inc
jnp
pop
sbb
push
mov
pop
cmp
ret
dec
imul
xor
jmp
or
movsb
jp
hlt
mov
pop
pop
inc
jle
hlt
and
test
out
insb
jns
cmc
imul
pmullw
filds
nop
pop
js
repnz
popf
inc
sahf
iret
xchg
divl
mov
inc
pop
hlt
rorb
mov
icebp
test
xor
subl
xlat
movl
xchg
fidivrs
mov
mov
mov
dec
jns
sub
push
add
fimull
std
jo
mov
add
stos
mov
sub
clc
in
rclb
out
add
ret
lret
movsl
ja
dec
mov
mov
pop
dec
mov
jecxz
dec
push
xor
outsl
sub
mov
scas
divl
shlb
sbb
movsl
pop
ret
push
inc
mov
sbb
push
jo
sbb
loop
stos
imul
sbb
fldcw
or
movsl
add
scas
mov
call
mov
or
pop
pop
xor
dec
and
mov
sahf
sub
aam
mov
jae
cmp
clc
pop
lahf
fiadds
pusha
push
out
inc
or
push
inc
cld
add
addr16
leave
xchg
mov
icebp
ljmp
dec
mov
sti
inc
ljmp
dec
ljmp
mov
aad
ljmp
push
mov
mov
pop
mov
pop
inc
cmp
fucom
incb
loope
mov
dec
jbe
aaa
es
mov
mov
jnp
daa
jle
jnp
sahf
daa
cmp
out
jae
sahf
mov
rcr
mov
cmp
aaa
sbb
xchg
cmpsb
inc
xor
insl
jbe
sbb
shlb
dec
xor
add
movsb
aam
xchg
jnp
adc
lret
fstps
add
jl
mov
push
mov
data16
pop
mov
aad
lcall
cli
movsb
dec
mov
jge
lret
push
jp
push
ja
mov
dec
aad
jae
insl
mov
xorb
push
dec
out
pop
cwtl
xor
push
daa
rcrb
pop
inc
arpl
popf
addr16
mov
cmpsb
pop
jae
sub
and
shl
sub
mov
xchg
lret
cmc
insl
ds
or
mov
sbb
test
mov
jne
call
ljmp
int
mov
shrl
insl
mov
iret
ljmp
sub
inc
test
xlat
cmp
adc
add
fdivrs
or
xchg
adc
repnz
sbb
add
sar
cli
iret
shl
imulb
pop
sub
and
iret
jg
adc
imul
popf
cmp
in
adc
insl
fisttps
loop
push
leave
fbld
gs
mov
cmc
int
dec
call
add
es
data16
into
mov
and
xor
adc
into
bound
into
mov
inc
pop
ds
sub
or
xchg
fadd
cli
jg
les
ljmp
inc
jmp
inc
rclb
cmpsb
sub
shrb
mov
ret
in
inc
out
push
jle
cmp
sub
xor
inc
sbb
jnp
push
loope
push
pusha
ret
loopne
fcmovnbe
mov
and
icebp
ret
repnz
ficoms
cmp
sahf
and
shll
mov
fmull
sbb
dec
data16
inc
insl
push
sub
fnstcw
cmpsb
out
adc
add
icebp
insl
cmc
aam
mov
sbb
lahf
int3
lcall
xchg
mov
pop
ds
enter
jge
shl
add
ljmp
and
cmp
cltd
jno
inc
cld
or
cli
pop
subl
pop
jecxz
push
pushf
mov
cmp
xchg
addr16
out
xchg
jp
les
or
mov
push
inc
cmp
sbb
into
mov
iret
mov
shlb
cld
lods
adc
and
pop
cmp
dec
aas
mov
pop
pop
push
add
cmpsb
clc
cmp
mov
sbb
ja
xchg
pushf
dec
daa
xchg
fadd
or
cmpsl
addr16
mov
test
bound
mov
cmp
sbb
fsubrp
lds
adc
xchg
jl
outsb
push
mov
lds
dec
lahf
loopne
xor
les
out
mov
aaa
movsb
jns
daa
pop
push
out
rep
pop
push
movsl
loopne
jbe
xchg
out
sbb
movsl
dec
and
sub
push
cmp
mov
cmp
pop
sahf
rorl
cmp
mov
shlb
and
lret
les
push
inc
daa
dec
in
stos
shrb
inc
dec
ljmp
mov
nop
cmp
sub
popf
int3
xchg
jno
ret
and
push
pop
jp,pn
push
test
loopne
or
add
push
flds
fidivrs
les
sub
or
daa
test
ja
mov
sbb
rolb
add
mov
xchg
in
xchg
cmp
and
mov
pop
dec
push
ljmp
xchg
shlb
out
movsl
mov
or
sbb
rclb
mov
push
sbb
fwait
xchg
adc
iret
sub
inc
aad
adc
pop
js
or
sbb
mov
cmp
jns
cld
arpl
jg
mov
lods
adc
nop
mov
and
mov
dec
outsl
adc
dec
fwait
mov
psraw
movsl
pop
inc
pop
sbb
add
inc
and
pop
in
enter
adc
aam
sbb
sbb
cwtl
addr16
jno
stos
pop
divps
sbb
out
xor
push
pop
xor
ret
int3
sub
ds
mov
or
mov
in
xlat
iret
lods
int3
ret
into
jno
addr16
movsl
fistl
std
xor
or
rol
movl
mov
adc
pop
jl
mov
sbb
fimull
cmp
mov
sarl
jo
test
stc
stos
xor
or
lcall
stos
xor
test
subl
lods
ja
and
sub
test
test
shlb
icebp
aad
scas
in
iret
movsl
xchg
lcall
push
inc
pop
addb
push
pop
and
push
jno
push
ljmp
sbb
sarb
fldcw
ret
cli
dec
mov
xchg
push
jl
jns
jo
add
psadbw
mov
dec
orl
loopne
cmp
and
js
inc
dec
shr
je
ds
pusha
sub
mov
rcrb
jno
pusha
out
imul
inc
jbe
push
xchg
fsub
and
arpl
ljmp
out
fs
pop
movsb
cs
movsl
mov
jns
ret
out
xchg
xor
incb
pop
cmp
insb
xlat
jns
and
pop
jb
jg
lds
push
mov
sub
imul
movsl
adc
shll
push
sbb
dec
dec
addl
out
rcl
xor
add
dec
inc
sub
incl
xor
sub
adc
and
mov
xchg
stos
inc
xor
out
add
dec
jmp
movl
adc
pop
push
ss
shlb
jge
not
jge
mov
in
shrl
adc
mov
sbb
xor
mov
sbb
xor
popa
sbb
lods
popaw
call
pop
inc
imul
idivb
loop
mov
mov
sub
inc
mov
jo
shlb
and
add
cmp
cmp
out
outsb
ret
mov
cmpsl
mov
repz
mov
adc
mov
lcall
mov
leave
push
adc
inc
push
lcall
inc
pop
fimull
das
adc
sub
mov
out
add
outsl
sbbb
scas
jns
xchg
mov
sbbb
pop
flds
xchg
std
js
jp
sahf
push
jae
and
or
or
inc
add
jl
fnstcw
call
je
jns
or
cmc
mov
xchg
and
push
mov
sahf
xor
push
into
ljmp
mov
xchg
fisubs
popf
push
roll
push
cmp
adc
movsb
testb
xchg
in
sub
pushf
repz
jae
sub
repz
dec
int
mov
out
movsb
mov
sbb
mov
xchg
xchg
test
xor
and
daa
add
shlb
cwtl
es
add
pop
mov
cltd
test
pop
repnz
jecxz
in
sbb
or
test
cmpsb
xor
je
adc
pop
repz
les
pop
arpl
dec
in
out
aam
adc
jg
and
fldlg2
cmpsb
cli
add
lret
push
in
call
jl
js
outsl
stos
in
jecxz
mov
stos
jno
cmc
insb
ds
sub
test
xchg
dec
pop
dec
fstpl
mov
jmp
test
jmp
jp
ror
aaa
stos
fld
adc
cwtl
lret
rorb
lock
adc
and
stos
shr
dec
test
xchg
lret
fs
roll
divl
icebp
mov
and
add
gs
int
mov
mov
sbbl
pop
popf
bound
es
repnz
mov
lods
bound
jmp
out
or
lods
ljmp
xor
xor
loope
out
mov
or
lret
xchg
fimuls
mov
mov
inc
mov
loope
testl
sub
jl
cmpsb
lahf
mov
cmp
int3
fcomi
mov
sub
fucomi
ja
lahf
jg
out
enter
xor
out
out
fldt
test
int3
popf
xchg
data16
lret
call
dec
xchg
add
or
addb
dec
bound
out
lcall
xor
mov
push
xor
cli
pop
cmp
rorb
cmp
sahf
push
dec
cmpsb
out
sahf
les
mov
sub
jp
aam
das
enter
dec
in
outsb
xor
stc
push
adc
inc
addr16
mov
pop
cmc
mov
pop
mov
aam
cmp
xchg
dec
push
and
stos
adc
jge
jnp
cltd
mov
add
pushl
enter
das
dec
and
jbe
jg
fists
lahf
and
cmp
inc
icebp
rclb
cmp
sub
dec
xor
pop
test
mov
incl
fldenv
jp
in
pop
clc
lahf
lods
gs
loop
xchg
inc
shrb
xor
and
mov
add
jge
test
jb
cld
mov
xor
cltd
out
movsl
popf
adc
fsubp
and
lret
or
mov
sub
jg
lea
xor
mov
icebp
xor
jl
xchg
jo
mov
je
dec
dec
mov
ret
fidivs
arpl
xor
pop
popa
mov
inc
pop
jecxz
adc
push
ror
cmp
rcrl
lods
adc
movsl
xchg
adc
dec
cmc
movsl
ss
xlat
subb
test
out
xchg
mov
pop
add
cmpl
imul
rcrl
jo
test
jae
aas
stc
je
pop
mov
mov
ret
and
or
stos
pop
adc
scas
test
leave
std
out
rcrb
ret
dec
ret
push
jo
pop
cmp
pop
add
fdivl
xchg
and
daa
mov
outsb
and
ret
fidivs
sbb
andl
jb
outsb
and
mull
sub
jns
xor
loop
or
jp
jg
jae
jle
add
adcb
adc
sbb
aad
mov
push
mov
mov
rcrl
es
xor
les
aas
cmp
mov
popa
repz
push
xchg
lret
mov
mov
and
imul
rcrl
dec
add
bound
cmpsl
test
int3
push
das
int
loop
lea
mov
mov
outsl
push
out
sahf
in
lods
sbb
das
or
dec
xchg
rol
fwait
cmp
clc
push
shl
loopne
add
mov
mov
add
cmpsw
idivb
jg
mov
xchg
icebp
xchg
leave
scas
mov
movsl
mov
js
mov
lret
test
or
mov
pop
jno
cltd
xlat
test
maxps
int
cmp
or
cmp
add
sti
xor
jae
nop
jmp
cmp
sub
test
push
in
jne
mov
push
mov
out
popa
mov
push
xor
ljmp
dec
mulb
dec
int
pop
pop
mov
cltd
pop
xorb
test
sub
mov
and
cltd
das
mov
dec
dec
fnstcw
test
das
jnp
sti
jo
or
mov
dec
mov
and
mov
adc
mov
xor
xorl
fxch
in
mov
add
push
mov
icebp
adc
popw
xchg
jmp
sbb
andb
add
rcrl
pop
xor
cltd
lds
sub
out
adc
dec
aad
dec
shl
lock
mov
or
xchg
out
mov
inc
test
sub
or
jl
icebp
sahf
xchg
xor
and
movsb
pop
adc
in
pop
fistpl
mov
movsl
mov
cmc
in
or
movb
pop
inc
mov
push
push
lcall
pop
jl
xor
js
lahf
fidivl
or
adc
or
inc
popf
ficoml
pop
test
cmp
jecxz
addb
cs
cmpsb
pop
add
adc
pop
fisttpll
sbb
sub
cs
in
out
inc
js
lock
pop
mov
cs
mov
jmp
sbb
fnsave
int3
dec
push
shlb
xchg
xlat
fwait
sub
shll
cld
jns
mov
add
cmc
outsl
mov
inc
in
lret
or
bound
mov
pop
pop
pop
add
sbb
xchg
xor
daa
gs
outsl
in
xchg
mov
xchg
fmuls
out
mov
jmp
idivb
xchg
les
inc
fadd
loop
jnp
mov
cmp
int3
mov
add
cmpsl
testb
sub
fidivl
pop
sub
outsl
pop
jo
jmp
pusha
mov
cli
outsl
enter
cld
subl
push
sbb
cwtl
sub
out
xor
sbb
ret
jl
aaa
js
pop
xlat
pop
imul
test
testl
scas
pop
sbb
xchg
leave
in
cmp
lret
rcrb
lods
pop
pushf
jns
cmp
and
cmp
mov
imul
mov
push
jmp
mov
ljmp
mov
dec
dec
or
pop
xor
push
pop
out
inc
dec
and
pop
imul
cmpsb
sub
int
cwtl
mov
jecxz
xchg
add
int
mov
xor
sbb
xor
pop
fisttps
mov
clc
mov
scas
jae
dec
arpl
out
rorl
loop
fs
adc
outsb
pop
or
jle
mov
adc
add
xchg
outsl
xchg
test
hlt
adc
and
dec
cmp
add
mov
ds
sub
leave
mov
push
adc
or
lods
cmpsl
icebp
or
aad
cmovne
cld
push
movsb
mov
pop
pop
pushl
orb
shrb
add
dec
push
dec
dec
jo
cmpsl
btr
or
lahf
stos
inc
cli
push
jne
sbb
adc
dec
sub
jmp
data16
mov
pop
dec
mov
xor
jo
xchg
dec
sub
cmp
fadds
in
int
addr16
pop
mov
les
clc
sub
push
ret
push
popf
ret
push
dec
test
call
dec
lods
popa
icebp
sahf
aas
mov
stos
cmp
sbb
and
sub
idivb
cltd
imull
cltd
dec
insl
jle
test
mov
nop
jmp
sub
das
not
cmp
jl
mov
mov
sbb
movsb
mov
add
pushf
in
push
aad
xchg
fstpt
mov
add
dec
popf
daa
ljmp
call
and
adc
and
scas
adcb
xor
mov
jmp
jg
loop
int
sub
dec
jmp
xchg
mov
jne
push
in
jg
pop
xor
ljmp
in
dec
dec
xor
rorl
push
push
add
imul
push
push
test
test
mov
mov
jl
xchg
loop
sbb
jnp
xlat
inc
rcrb
and
stos
mov
bound
out
or
pop
adc
xchg
push
fisttpl
movsl
inc
cmpb
in
add
bound
pusha
xor
xchg
jb,pt
bound
jae
loop
scas
pop
mov
mov
call
pop
push
stos
jae
sub
and
stc
pop
imul
dec
dec
xchg
lahf
mov
fs
xor
rol
jmp
es
adc
test
xlat
adc
cld
mov
adc
inc
pop
add
shl
sub
inc
jae
xchg
dec
push
inc
call
mov
or
fmulp
loopne
daa
push
dec
ds
push
push
scas
cmp
inc
dec
repnz
cwtl
dec
and
and
xor
incl
fidivl
cmp
fwait
shrb
in
mov
dec
dec
cmp
push
and
ss
pop
mov
mov
outsb
push
adc
cwtl
inc
sbb
adc
in
cmp
add
push
sub
xor
enter
or
test
pop
into
dec
rorl
jno
in
sub
sti
cmpsl
push
sub
jmp
adc
mov
imul
cltd
inc
mov
scas
xor
insl
stos
fwait
mov
fmull
inc
lret
imul
push
insl
addr16
test
rcrl
enter
jae
add
repz
stc
ja
pop
pop
inc
jg
dec
data16
repnz
scas
sub
push
xchg
cmp
imul
cld
call
cmp
int3
adc
xor
mov
jmp
mov
daa
xor
cmp
xor
add
clc
test
ret
in
pop
lock
cmc
cmpsl
dec
ljmp
sbb
out
xchg
and
aaa
stc
sub
add
inc
xlat
dec
bound
and
add
add
pop
fwait
jecxz
aad
add
test
or
icebp
sub
ss
imull
mov
sbb
fisttpll
cmpsb
sub
mov
loopne
mov
xchg
fxch
imul
in
cmp
std
fdivrp
pop
inc
xor
setae
push
xchg
lods
push
out
sub
outsl
dec
jnp
lret
daa
push
pop
jo
into
cwtl
jp
and
sbb
jp
fxam
icebp
sub
push
add
in
imul
mov
lahf
mov
jo
movsl
jbe
sbb
les
std
clc
in
sub
rcrb
dec
mov
or
sbb
in
dec
shlb
jae,pt
xchg
call
es
mov
test
jecxz
js
dec
mov
adc
imul
jecxz
adc
sbb
loopne
inc
out
mov
mov
and
aaa
fwait
pusha
or
push
testl
add
filds
mov
jns
cmp
push
jb
jmp
mov
pop
scas
or
iret
jle
mov
mov
test
stc
cs
es
adc
dec
dec
std
in
cltd
xchg
rorb
mov
ljmp
pop
push
ret
sbb
add
shll
adc
mov
sbb
mov
jns
jg
lcall
scas
or
loopne
sub
inc
push
js
mov
sub
in
xchg
pop
aas
cmp
xor
dec
std
test
call
add
or
ljmp
lahf
popa
mov
or
jmp
jo
int3
outsb
in
mov
inc
scas
sbb
in
std
stos
into
jg
push
sti
cmp
or
inc
dec
xchg
shlb
jo
imul
sub
inc
pop
insl
xor
adc
repnz
push
xchg
and
adc
mov
cmp
jp
mov
jg
ror
cmp
add
adc
lods
orb
add
mov
outsl
mov
cmpsl
gs
sub
stos
dec
sarb
scas
sub
jae
and
xchg
cltd
xchg
xlat
xchg
jge
sbb
cmp
mov
pop
adc
addl
jbe
insl
cmpxchg
rolb
into
mov
iret
loopne
mulb
scas
lock
add
and
sub
xchg
xchg
xor
xor
push
scas
nop
or
lods
push
sub
iret
aam
out
mov
dec
push
int3
je
sub
pop
dec
sbbl
int3
rcl
xor
sub
test
adc
mov
outsl
jge
test
repnz
in
addr16
icebp
cltd
shrb
int3
xlat
pop
dec
cmp
push
sbb
imul
xchg
imul
into
or
ret
notl
sbb
ffree
scas
adc
xchg
pop
sbb
add
jl
push
dec
arpl
enter
push
xlat
jne
jg
pop
scas
mov
mov
lcall
adc
or
mov
jmp
lret
stos
jae
sbb
xchg
test
insb
iret
in
fs
out
repnz
loopne
out
out
mov
mov
pop
mov
push
jmp
cmp
inc
js
ljmp
xchg
ljmp
in
inc
pop
in
loopne
test
aad
cmp
or
cs
orb
xchg
nop
test
xchg
jge
in
in
inc
mov
js
ds
jmp
insl
adc
movsb
mov
pop
cmp
mov
mov
dec
sub
lods
cmp
ds
add
jp
insb
test
enter
push
ret
pop
addl
fdivrp
push
pop
scas
and
aaa
cmp
int3
dec
jne
enter
mov
scas
adc
mov
mov
push
and
mov
js
insl
and
pop
mov
cld
or
mov
mov
mov
out
mov
add
shl
je
xor
fsubrl
loop
in
xor
fists
repz
cli
stos
or
push
lea
in
jmp
mov
inc
cmp
xor
shrb
mov
inc
mov
and
mov
mov
xor
gs
adc
in
inc
aaa
inc
jno
sub
xchg
shrb
jg
adc
jnp
push
rcl
sub
dec
dec
and
xor
sbb
popf
cmpsl
ds
test
push
mov
aas
shl
and
push
sub
and
loope
pop
dec
sub
call
cli
lret
lahf
sbb
jne
xor
rcll
stos
pop
test
or
std
mov
sbb
cmpsl
or
in
pop
xchg
ss
aas
fsubrl
movsl
test
fnstenv
push
cmpsb
repz
mov
fiadds
sbb
mov
mov
int
pop
ficompl
xor
add
sbb
test
add
adc
in
lock
test
add
pop
stc
pop
mov
int
xchg
mov
cmpsb
call
push
sarl
push
cmp
stos
mov
sub
xchg
lahf
dec
lock
pop
push
je
jnp
add
xor
aam
lret
add
add
jge
rcrb
mov
adc
ljmp
cmpsb
out
inc
int
cmp
jge
mov
jp
daa
shrl
jecxz
mov
jmp
xchg
cwtl
and
imul
mov
fisttps
rcrl
mov
sbb
aas
add
cwtl
int
mov
jge
dec
adc
fdivrl
jmp
sbb
mov
cmp
jmp
cmp
sysret
xchg
cltd
add
mov
xchg
or
sub
xor
push
fwait
gs
aas
lea
jne
ljmp
cwtl
push
or
dec
in
pop
mov
push
inc
aad
push
pop
mov
lret
shlb
add
xchg
inc
test
mov
outsl
push
or
cmp
in
stos
int
clc
sbb
bound
movsb
mov
faddl
pop
jmp
push
sbb
mov
mov
ja
pushf
es
xchg
cwtl
pop
std
jns,pn
sub
scas
ret
and
inc
pop
cmpsl
ljmp
out
lret
loop
rcrl
mov
ss
mov
dec
lea
imul
jb
xor
mov
clc
orl
adc
fcmovnu
mov
xor
fildl
je
adc
jmp
mov
inc
call
mov
mov
rcll
mov
inc
inc
mov
adc
cvtps2pd
pop
mov
mov
aas
mov
notb
xor
scas
xchg
je
or
add
test
sbb
pop
das
mov
add
mov
arpl
inc
fisubs
int
push
xor
out
negb
lcall
dec
adc
lods
aaa
aas
push
int3
jnp
scas
out
cld
add
mov
je
ljmp
arpl
loopne
inc
loop
sbb
imulb
notb
cmc
in
out
sub
out
xchg
imul
popa
les
sub
push
and
add
sbb
mov
lcall
jmp
gs
jge
dec
decb
outsb
imul
push
inc
pop
xchg
pop
mov
mov
mov
insl
mov
sub
sbb
sub
mov
xchg
xlat
ret
fs
xchg
dec
cltd
jp
jge
adc
loop
mov
and
dec
mov
in
out
test
sub
sbb
push
cld
rolb
push
scas
xchg
in
mov
mov
fidivrl
outsb
fisttpl
mov
push
jecxz
in
fsubs
mov
stos
aad
and
pop
push
add
dec
mov
lahf
jnp
imulb
stc
sub
test
inc
xchg
cmp
inc
sub
jge
icebp
jnp
cmc
and
xchg
or
pop
pop
rol
jmp
aad
mov
popf
or
bound
mov
je
pushw
stc
paddusb
push
fildll
addr16
fisttpll
rcrb
jno
dec
jg
dec
roll
xor
pop
inc
hlt
push
pop
imul
mov
stc
scas
cltd
pop
xchg
popa
mov
jecxz
ja
jg
push
lret
imul
fdivrl
jns
inc
lret
pop
cli
xor
int
mov
jbe
adc
lcall
mov
fisubrl
inc
fcmovnu
pusha
xchg
mov
lret
pop
into
mov
insb
dec
sub
cli
rcr
xor
mov
push
push
in
fidivl
pop
lods
sbb
cltd
lods
fcompl
pop
test
push
xor
jg
sub
jg
lea
das
ret
jmp
cmp
je
out
jbe
mov
das
and
test
fstl
dec
inc
movsb
add
lods
xchg
mov
mov
mov
jp
jmp
leave
loopne
pushl
fdivs
xor
std
dec
or
paddsw
popf
pop
insl
sbb
ret
push
lods
xor
add
adc
outsb
sbb
rcr
int3
mov
or
sahf
or
call
iret
dec
clc
lods
adc
mov
xor
jns
xchg
pop
lods
adc
mull
adc
push
sbb
iret
aad
movsb
jge
sbb
cmp
ret
or
rcll
lcall
rcll
loop
cli
test
test
push
dec
pop
dec
xor
movsl
jecxz
inc
sub
popa
les
sbb
add
lods
arpl
pop
clc
mov
mov
insl
ja
xchg
imul
sbbl
shlb
sub
sahf
inc
dec
cli
ja
add
testb
mov
divl
shll
jmp
insl
inc
xor
pop
enter
les
gs
cmp
loopne
jp
and
jle
xor
and
ljmp
dec
cmpsl
jns
xchg
mov
xor
push
aaa
aaa
sub
mov
mov
test
mov
adc
aas
push
mov
daa
xchg
fdivp
lock
pop
pop
and
pop
hlt
sarb
fisttpl
pop
cmp
loopne
imul
insb
test
sbb
sbb
mov
repz
les
fldcw
push
enter
hlt
xchg
jbe
sub
dec
mov
dec
icebp
fucomp
xchg
sbb
mov
or
sub
add
nop
rclb
in
sbb
mov
mov
sbb
mov
mov
ss
or
mov
xchg
push
sub
lods
jp
stos
xor
imul
or
cmc
jne
sub
sarb
out
movb
std
pop
icebp
das
mov
lret
call
sbb
imul
add
sbb
ljmp
aam
sti
mov
in
mov
sbb
mov
xor
sub
mov
into
dec
push
ljmp
jno
jb
lock
and
outsb
sbb
movsl
mov
mov
adc
js
and
xor
fs
cmp
xor
jge
add
aaa
pop
add
mov
push
ret
std
cmp
or
sbb
jo
aam
stos
daa
xchg
mov
flds
mov
outsb
inc
getsec
loope
movsl
jns
adcb
popa
in
in
popf
sub
fcoms
pop
lret
xchg
lahf
dec
dec
dec
pop
dec
inc
nop
sbb
jge
jp
stc
test
fcoml
adc
repnz
adc
push
adc
cmp
pop
jl
cmp
scas
add
jge
loopne
lods
jo
stc
hlt
rcrl
pop
loopne
stc
inc
and
and
jbe
mov
jns
lods
mov
xchg
jbe
dec
addb
daa
dec
fbstp
adc
out
xchg
aas
mov
pop
xor
push
es
sbb
cmp
fadds
xchg
outsl
mov
jmp
into
push
jno
push
bnd
cwtl
adc
mov
lret
jecxz
ss
out
pop
stc
in
iret
cmpsb
xor
mov
or
inc
rclb
push
or
jge
pushf
sub
shll
arpl
sbb
outsl
pusha
sbbb
cmp
xor
pop
lret
outsb
ja
add
sti
cmp
icebp
movsb
stc
je
scas
sbb
hlt
outsl
dec
sub
and
mov
mov
mov
add
inc
mov
notl
lret
push
sub
mov
lea
aam
fmuls
mov
aam
and
pop
cmp
repnz
push
adc
imul
sub
mov
fildll
pop
shl
and
mov
add
ret
inc
fiaddl
rcll
insl
loopne
loopne
push
sub
adc
mov
mov
jmp
fimuls
push
xchg
sbb
push
lcall
lahf
jo
and
inc
xor
fstpl
xchg
imul
leave
cmp
fstl
shrb
repnz
push
mov
dec
sub
test
mov
icebp
xor
insl
mov
shr
mov
and
out
pop
insb
outsb
add
jmp
or
add
and
insb
stc
iret
lret
ss
push
adc
adc
iret
popa
jmp
mov
clc
sub
jle
leave
push
cs
out
cli
in
mov
cmp
imul
pop
mov
mov
bound
mov
or
mov
fdivs
or
test
and
jl
jecxz
add
out
fnstsw
cld
jb
outsl
repz
mov
mov
mov
repnz
mov
and
xor
and
sbb
in
mov
or
and
stos
pushf
adc
bound
inc
popf
or
xor
dec
insl
xchg
and
rcrb
sub
and
scas
mov
or
xchg
int
js
test
inc
cld
xchg
inc
pop
push
add
inc
addb
rcrb
or
and
imul
jb
fiadds
dec
push
jmp
mov
data16
pop
repnz
mov
ss
inc
mov
jne
push
loopne
mov
xor
pop
add
mov
push
dec
pop
or
and
adc
orb
sbb
inc
push
scas
popf
sbb
pop
mov
pop
add
sar
negb
cmpl
xor
repz
jb
mov
xchg
and
cltd
adc
xorl
push
or
xchg
add
cmp
js
cmpsl
aaa
test
out
mov
jp
push
cmp
jbe
pop
data16
xchg
sub
push
jle
mov
addr16
mov
loopne
xchg
and
inc
enter
or
rcr
lret
adc
pop
fisttpl
ficompl
xchg
popa
outsl
pop
stc
inc
daa
es
and
out
pop
ffreep
fildl
fcoml
mov
xor
fiadds
adc
cs
pop
dec
mov
jne
push
sbb
jmp
sbb
or
jge
cmp
inc
cltd
sub
addr16
in
sti
mov
xor
bound
ja
mov
mov
add
xor
mov
mov
push
lock
jecxz
jno
jmp
jbe
adc
data16
xor
fwait
shlb
cmp
dec
push
and
rorl
cmpsb
aam
mov
and
add
push
mov
mov
dec
repz
mov
insl
mov
push
xchg
scas
aaa
punpckhdq
lds
das
int3
jl
andb
test
dec
sub
mov
mov
push
scas
sub
add
mov
pop
dec
adc
xor
sub
dec
lret
lea
jmp
cmp
or
mov
jb
cmp
adc
cmp
or
mov
iret
lods
adc
add
lcall
into
xchg
inc
inc
sub
decl
mov
jae
push
imul
jl
xchg
aad
jne
in
mov
fisubrs
mov
test
ja
pop
dec
mov
sbb
xor
js
cmp
int
js
push
jno
pop
out
jg
in
sub
adc
pop
sbb
fsubs
cmp
mov
mov
test
data16
mov
or
dec
dec
xchg
push
xchg
push
leave
frstor
xchg
call
stos
es
add
jmp
sbb
daa
xlat
jle
dec
ja
cmp
cs
out
out
mov
fwait
sbbl
sub
mov
adc
push
es
sub
xor
jo
mov
jmp
dec
rolb
jge
ss
xchg
dec
jb
movb
xchg
pop
divps
fadds
push
insl
pop
ljmp
aam
inc
subl
rorb
xchg
xor
push
fdiv
mov
imull
pusha
nop
mov
cmp
dec
std
psubw
xorl
ja
pop
lds
gs
mov
jno
mov
sbb
dec
in
sbb
sub
xor
mov
mov
out
jmp
into
filds
mulb
sub
and
fidivrl
mov
mov
cwtl
add
fs
inc
data16
cmp
sbb
cwtl
mov
xor
adc
or
fwait
jp
push
pop
jns
les
arpl
sub
dec
movsl
aam
shrb
je
add
sbb
jecxz
push
js
rorl
lahf
mov
sub
insb
test
inc
dec
in
lea
jcxz
pop
pop
xchg
jg
enter
xor
or
sub
dec
out
add
add
push
ret
arpl
into
pop
sbb
addr16
data16
aaa
and
xor
cmp
dec
inc
add
mov
xchg
sbb
inc
add
adc
dec
movsb
sub
daa
sbb
xchg
push
je
adc
movsl
xchg
popa
sbb
mov
pop
fmull
mov
sti
or
mov
pusha
cltd
fildl
push
lcall
leave
int
push
xor
sbb
mov
push
pop
jl
popf
xor
rclb
test
stc
shrl
imulb
mov
test
dec
stos
xchg
xor
inc
daa
cmp
movsl
das
xor
shll
and
cmp
int
lea
sbb
xchg
inc
jle
inc
andl
aas
scas
pop
cld
in
mov
cld
xchg
jge
and
ja
testb
add
add
in
mov
cmp
daa
popf
int
dec
push
add
xchg
add
jo
ds
inc
push
sbb
sbb
inc
sub
jmp
pop
cmpsl
mov
hlt
stos
jp
cmovle
cmp
mov
pop
pop
jp
adc
dec
mov
leave
rcl
xor
dec
and
adc
mov
jns
push
jg
pop
inc
inc
out
int3
jmp
sbb
cld
jae
daa
jne
dec
push
xchg
xor
sub
lods
sbb
jnp
or
out
jg
mov
mov
fwait
ljmp
jne
mov
add
mov
das
int3
cmpsb
push
out
mov
nop
mov
test
sub
int3
mov
ret
lahf
pop
sub
sahf
push
es
repnz
fs
mov
into
aad
out
cmpsb
xchg
sbb
stos
inc
xlat
or
push
jmp
cmpsb
and
sbb
popa
leave
push
test
or
pop
jno
xchg
jge
ss
rcrl
fstl
aam
insb
jle
lahf
addb
cli
push
adc
insl
push
jmp
test
test
fildl
add
js
dec
repnz
sub
inc
xor
xchg
lea
jl
or
inc
xchg
xor
insl
sbbl
jbe
ja
mov
test
xor
push
add
into
dec
gs
imul
enter
jne
clc
outsl
xlat
and
lret
rcrl
jle
pop
fneni(8087
xchg
fimuls
bound
push
and
mov
inc
adc
mov
lcall
or
movl
stos
mov
jge
add
push
subl
fs
push
shlb
mov
cmp
sub
fucom
ret
cld
sbb
jo
jbe
popa
mov
movsb
aaa
cmp
testb
adc
sub
push
dec
test
and
andl
inc
lock
adc
sub
mov
jmp
mov
aad
aam
sub
dec
imul
mov
jl
push
test
add
loop
cs
sub
sarb
push
bound
cmp
cli
fdivrl
outsl
div
mov
sub
inc
or
and
push
lret
pop
into
jne
sahf
jne
lea
dec
mov
mov
mov
xchg
sub
aad
and
imul
pop
inc
leave
push
nop
push
pop
mov
sbb
push
xor
dec
xchg
jmp
sbb
in
xor
roll
les
sbb
fwait
mov
xor
sbbb
xchg
or
cmp
aas
icebp
bound
mov
and
sti
cmp
stos
pop
test
pop
push
cmp
pop
inc
call
add
cmpsb
test
pop
sbb
adc
jne
inc
mov
test
fscale
andb
addr16
mov
adc
inc
jge
dec
xor
jl
stos
sarl
incb
in
repnz
mov
xchg
negl
rorl
mov
xchg
push
and
pop
into
xor
pop
dec
cmp
enter
push
or
inc
pop
rorl
xor
inc
push
add
jl
pop
and
imul
push
jmp
out
ljmp
imul
imul
jnp
adc
xor
xor
push
ret
push
and
sbb
out
nop
insl
pop
ficoms
ret
leave
lret
repz
addl
dec
adc
lahf
pop
and
mov
sbb
cmp
shlb
jae
std
xchg
std
sahf
stos
mov
shlb
xor
mov
gs
out
int3
fisubrs
les
bound
dec
jbe
shrl
fisttpl
push
xor
mov
dec
mov
dec
xchg
push
jl
xor
sub
cli
xchg
das
sub
aaa
xchg
data16
jb
daa
mov
ljmp
dec
fcom
ret
stc
push
das
rolb
jecxz
insb
adc
das
stos
ja
mov
dec
std
mov
shrl
push
int
jb
mov
sbb
out
sub
add
stos
sub
cmp
sub
pop
xchg
pushf
cmp
push
xor
pop
gs
shl
imul
fsubrl
fidivrs
mov
jmp
addr16
into
mov
sbb
data16
rcr
lret
shrl
mov
or
out
jmp
fnsave
mov
fwait
add
shl
adc
mov
mov
xchg
fiadds
and
dec
enter
ds
jp
stc
test
xor
jae
leave
mov
jecxz
jbe
xor
add
dec
cs
mov
aad
mov
je
jnp
test
ss
test
in
mov
outsb
lret
xor
adc
and
push
mov
arpl
mov
clc
jb
lret
cmp
inc
inc
inc
int
jns
push
jl
dec
ja
lock
out
add
mov
aam
mov
pop
inc
fwait
icebp
dec
xlat
sub
add
mov
push
out
aaa
das
mov
loope
data16
xor
shll
push
fiaddl
mov
std
cmpsb
adc
sub
outsl
push
adc
nopl
pop
sub
and
nop
inc
ret
dec
mov
inc
and
adc
mov
mov
cmp
mov
js
mov
lret
sub
or
xor
insb
jp
dec
stos
test
cld
mov
popa
jbe
stos
inc
sub
out
mov
xchg
cmpsl
lret
sbb
test
daa
xor
pop
sbb
mov
pop
in
lods
stos
pop
in
add
push
mov
aas
and
adcb
call
pop
loopne
lahf
xchg
push
mov
push
repz
out
sar
into
sbb
out
cmp
sbb
mov
pop
test
bound
xor
cmp
stos
push
mov
pop
sub
fwait
push
fisttpl
cmp
push
sti
int
pop
ljmp
xchg
popf
loop
push
out
add
pop
pop
fsubrp
xchg
sbb
jnp
dec
mov
pop
mov
mov
imul
pop
sub
inc
jl
mov
push
stos
ss
mov
ds
lods
mov
and
cld
repnz
jmp
loop,pt
mov
loopne
inc
scas
mov
fsubp
aas
push
and
xor
lcall
lds
mov
mov
mov
push
dec
jb
movsl
adc
mov
sbb
push
sbb
loope
lds
sub
mov
xorb
hlt
popa
mov
mov
addr16
mov
negb
out
aaa
adc
jle
jle
push
sti
inc
std
adc
sahf
daa
push
and
outsb
mov
jns
fs
int3
jnp
cmp
in
loop
mov
loop
icebp
dec
sbb
repz
mov
sbb
push
push
sbb
adc
data16
lods
int
inc
or
adc
cltd
hlt
jp
fstpl
jmp
lcall
int3
add
pop
push
jp
pop
daa
fildll
mov
loop
mov
sub
sub
popa
es
pop
loop
mov
fmulp
pop
push
add
and
stos
stos
cmp
jge
xor
mov
mov
jmp
xor
das
test
add
pop
pop
lret
mov
or
js
mov
ret
xorl
faddl
lcall
fxch
dec
pusha
jle
shrb
jge
xor
mov
add
jecxz
push
das
lock
sbb
imul
mov
add
lcall
jb
mov
push
adcl
imul
jbe
jae
lock
es
jmp
mov
jae
test
sbb
xchg
pop
mov
fldl
fldcw
enter
imul
lds
adc
scas
rorl
dec
lds
or
adc
cltd
dec
lds
mov
fsts
xchg
and
cmc
push
jp
xchg
jae,pn
push
stc
inc
mov
test
in
mov
cwtl
loop
cmp
loop
lods
xor
int3
addb
imul
notl
xlat
rolb
mov
lds
inc
inc
and
and
inc
insb
pop
push
jo
xor
xor
or
pop
psubb
dec
jb
jo
or
mov
loopne
pushf
or
sub
push
addr16
or
or
inc
xlat
fidivl
sbb
sub
push
cmp
es
mov
ret
and
xchg
and
pop
push
es
andb
add
xor
cmp
add
or
or
sahf
scas
mov
in
aad
push
push
mov
xor
mov
inc
fcom
sbb
jo
bound
add
cmp
imul
shr
gs
test
insl
insl
ljmp
in
or
push
sub
loope
cmpsb
sbb
inc
add
icebp
add
rcl
sub
stc
movsb
ja
push
enter
fwait
shr
loop
shl
pop
add
and
add
mov
pop
loope
dec
pop
jne
imul
or
ja
movsb
push
cmc
adc
inc
mov
sub
sbbb
push
test
aas
push
pop
fldcw
arpl
add
add
enter
pop
lahf
rclb
add
stc
mov
out
sbbl
lcall
or
push
std
xchg
mov
add
daa
into
xchg
out
lret
adc
shlb
sub
out
inc
stc
je
adc
xor
cs
and
and
repz
insb
outsl
jo
out
mov
push
pop
rolb
imul
adc
and
orl
jno
dec
arpl
stos
dec
movsb
rol
ret
sbb
mov
clc
testl
mov
test
idivl
ljmp
push
xor
jge
das
inc
inc
stos
in
mov
xchg
lahf
imul
js
jge
repnz
insl
add
xorl
das
popa
or
mov
xor
mov
and
add
or
aaa
dec
xchg
fstpl
jmp
add
pop
jmp
loope
and
push
mov
dec
xchg
xchg
rcrb
int3
sbb
inc
pop
pusha
push
jo
clc
jg
dec
xor
inc
scas
dec
nop
push
xor
adc
daa
inc
movsb
mov
aaa
idivl
inc
inc
cmp
cmp
cmp
aam
fnstcw
dec
mov
xor
shlb
mov
or
pusha
inc
in
xor
aad
pop
cmp
fmuls
adc
jmp
inc
or
push
sbb
inc
xchg
clc
push
xchg
push
push
and
in
out
fildl
rcrl
mov
in
sti
mulb
icebp
dec
mov
sub
add
push
pushf
and
cmpsl
jo
js
adc
mov
sub
mov
sbb
pushf
ljmp
pop
jmp
mov
or
inc
int3
dec
outsl
mov
in
stos
mov
aam
xlat
push
adc
push
dec
fimuls
cmp
pop
call
icebp
xchg
xchg
adc
mov
imul
cli
dec
cmc
ja
add
dec
xchg
ss
pop
dec
dec
inc
mov
cmpsl
out
gs
lods
dec
fwait
test
mov
outsb
test
addps
fcomp
int3
addr16
and
inc
inc
sbb
pop
and
fistpll
outsb
mov
adcb
cltd
xchg
icebp
and
push
imul
xchg
adc
mov
lea
in
push
jno
pop
adc
orl
sbbl
cmp
and
cmpsl
mov
rolb
fdivrl
mov
sbb
js
mov
and
cmp
into
jbe
sub
and
jae
sub
mov
mov
rcrb
hlt
dec
sbb
cmpsb
push
test
loopw
push
inc
sahf
sub
pop
lret
and
cmp
jns
dec
lods
nop
dec
pop
test
push
dec
mov
popf
shrl
stc
xor
lods
ficoml
sti
push
loop
nop
sbb
jne
out
repnz
cmp
dec
jmp
pop
inc
xor
in
call
pop
sti
or
pop
mov
adc
add
sbb
je
inc
add
enter
outsl
lock
lock
int3
cmp
mov
cmp
sub
mov
fcoms
dec
mov
sarl
sarl
enter
dec
adc
adc
sbb
xchg
add
cld
dec
mov
xchg
add
lods
lock
call
adc
sti
mov
and
lcall
inc
sbb
bound
xor
rclb
cld
jne
arpl
cmpsb
aas
stc
dec
sbb
jne
sub
pop
aaa
pusha
push
mov
mov
movsl
out
call
sub
sub
nop
push
add
and
test
jge
adc
sub
das
cli
mov
call
and
jne
out
jmp
sbb
int3
push
xor
lds
pop
cmc
outsl
lock
test
mov
dec
loop
test
sub
push
data16
pop
bound
fwait
rorb
mov
jne
clc
jp
cmp
xchg
jno
push
xor
mov
sub
imul
adcb
inc
push
or
and
push
jnp
dec
cmpsl
sbb
imulb
inc
in
popa
test
add
dec
sti
pop
int3
xlat
jb
jne
test
dec
mov
jae
in
es
cld
xor
inc
xlat
jle
sbb
lods
inc
xor
je
cmp
mov
cmp
orl
stos
sbb
xchg
lds
push
jnp
sub
jno
cwtd
lahf
arpl
jl
pop
or
push
mov
lds
cmp
je
and
mov
push
cmp
pushf
clc
jge
stos
in
mov
and
lahf
push
jae
ljmp
dec
in
jno
dec
mov
cmp
scas
or
addl
test
mov
sbb
loope
pop
or
mov
sahf
lret
das
mov
pop
daa
push
nop
sahf
and
jb
inc
cwtl
decl
jp
add
xchg
add
outsl
sarl
cmpb
in
mov
inc
popf
movsl
jge
push
jnp
or
inc
mov
push
xchg
cmp
iret
mov
xor
andl
std
sub
call
mov
shrl
mov
movsl
lock
sarl
lea
pop
sub
add
push
mov
mov
jno
js
mov
ljmp
aam
hlt
test
mov
jno
imul
jge
mov
cwtl
repz
addr16
sub
xchg
inc
ret
enter
testb
popf
inc
repnz
push
adc
mov
cmpsl
fucom
aam
and
out
xchg
jbe
loop,pn
bound
xchg
lahf
push
inc
jle
dec
push
mov
fcoml
rcll
xor
scas
aaa
test
xchg
jb
xchg
mov
ret
sub
add
dec
mov
lret
scas
xchg
xchg
pop
mov
lahf
dec
scas
push
imull
aas
jp
test
cmpsl
popa
xchg
xchg
out
push
jmp
gs
stos
jmp
stos
cwtl
xchg
out
cmpsb
mov
fdivrs
push
out
fstps
lcall
lret
decb
dec
jnp
ret
shld
dec
inc
pop
adc
jae
daa
mov
mov
icebp
scas
and
pop
jmp
fidivs
sub
add
loop
adc
cltd
push
std
flds
jecxz
iret
out
outsl
icebp
pop
jae
pushf
dec
test
sub
jmp
xchg
roll
dec
hlt
pop
sub
cmc
ret
push
lea
sub
and
dec
sbbl
mov
mov
inc
and
sub
shll
sbb
mov
xor
imul
int
sahf
push
xchg
jo
sbb
adc
and
mov
nop
add
int
jg
mov
imul
out
int3
outsl
pop
outsb
aad
pushf
data16
aam
fistpll
cmp
xchg
inc
adcb
cmp
lret
or
rcrl
scas
xlat
leave
sbb
insl
fcompl
xchg
mov
lahf
leave
sbb
enter
pop
xchg
movsb
dec
push
and
adc
ljmp
js
hlt
inc
repz
mov
jno
jbe
mov
mov
out
or
mov
mov
add
lods
inc
shr
sbb
cmp
jmp
adc
jb
es
push
bound
cmc
icebp
orl
faddl
add
pop
popa
xchg
inc
push
lret
daa
xchg
dec
pop
aam
inc
adc
jp
push
jg
prefetcht2
sar
fbstp
test
lcall
mov
sbb
nop
gs
dec
mov
addl
enter
scas
repz
test
xchg
cmpsb
mov
cmp
xchg
jo
add
and
jnp
xchg
mov
mov
aam
lock
jp
inc
mov
jl
lret
fwait
mov
cmp
iret
das
or
dec
mov
pop
mov
imul
loope
adc
sahf
pop
cs
pop
jns
sahf
rorl
jp
jb
jo
pop
clc
dec
add
in
and
pusha
xor
and
shrl
incb
mov
add
into
fbld
dec
shl
outsl
lock
inc
lahf
pop
lock
mov
shrb
icebp
push
xor
incb
cld
lea
mov
add
aam
addr16
or
orl
js
ret
pop
popa
in
dec
push
std
test
stos
inc
ja
ljmp
push
jb
mov
push
jge
in
sbb
mov
xchg
loope
stc
addl
pushf
enter
sub
mov
pop
sub
xchg
loop
sbb
ljmp
add
mov
and
jecxz
iret
cmpsl
xor
das
rolb
xlat
call
into
inc
in
popf
and
mov
insl
mov
xchg
jecxz
xchg
push
rcll
mov
push
mov
jle
mov
lcall
aam
cmp
xor
push
or
shr
loop
enter
dec
xchg
out
adc
mov
loop
daa
pop
addl
mov
or
push
sub
scas
sub
lret
mov
and
repz
sbb
add
push
jmp
cmp
push
dec
pop
pop
aaa
out
mov
inc
push
jp
xchg
xchg
shrl
inc
popf
add
outsb
leave
daa
push
daa
pop
mov
outsb
adc
hlt
data16
enter
or
push
shr
mov
or
pusha
rorl
gs
pop
or
int
or
enter
lret
out
icebp
fucom
stc
mov
mov
mov
cmpsl
rolb
stos
fmulp
aaa
push
mov
xchg
adc
cld
jge
pop
inc
inc
sbb
adc
imul
fldt
inc
adc
xor
sub
cmp
lods
or
in
leave
sahf
adc
xor
push
dec
sub
mov
fisttpl
in
stos
dec
stos
fisubrs
pop
movsb
shl
push
pop
test
icebp
adc
frstor
push
cmp
push
adc
or
mov
mov
cwtl
inc
rol
sub
popa
outsl
je
mov
loope
vpxor
mov
xchg
sub
ss
subb
or
mov
inc
call
loop
mov
jne
mov
sbb
jb
mov
sbb
jae
orl
es
out
insb
adc
mov
and
mov
in
cmp
into
dec
jge
and
test
test
sbb
lock
pop
cmp
cmp
adc
sub
insl
fdivrs
repz
add
stos
pop
cwtl
jb
jle
jbe
sbb
jbe
vmovaps
fs
fidivl
mov
cmp
and
adc
pop
out
jbe
sbb
cmpb
inc
lock
add
icebp
push
pop
ljmp
movsb
out
bnd
andl
dec
pop
in
inc
jmp
int
in
mov
jo
and
dec
in
dec
call
cwtl
dec
inc
stos
jb
cmc
sahf
xor
cmp
test
xchg
hlt
outsb
xor
mov
adc
xor
add
sbb
jl
add
xlat
jle
imul
sub
arpl
sti
jns
or
jns
insl
les
jns
adc
lods
push
mul
inc
insl
dec
push
test
mov
xchg
adc
movsb
es
mov
int
or
rorl
mov
cmp
add
pop
imul
push
sub
mov
rolb
fldenv
scas
and
pop
cmpsl
cwtl
pop
adc
insb
inc
mov
mov
or
jl
sarl
dec
pop
adc
mov
mov
sub
adcb
sub
ret
jns
inc
mov
js
cmpsb
jnp
xor
cli
sub
jo
cmp
add
lret
sbb
or
dec
mov
lea
bnd
ret
jnp
inc
fdivp
inc
es
jp
popf
xlat
test
arpl
mov
ljmp
insl
mov
lock
inc
inc
scas
mov
dec
filds
sbbb
ja
mov
fldcw
popf
cmp
cmp
sub
push
bound
cli
add
lea
pop
repnz
adc
cld
test
fucomip
stc
push
mov
mov
xlat
sahf
jbe
xchg
je
fs
adc
xor
jae
sub
movsb
pop
lods
and
cmp
mov
addr16
out
and
mov
aas
rcrl
icebp
mov
leave
dec
cmp
je
stos
sahf
leave
stos
add
pop
mov
out
cmp
pop
mov
sub
out
aaa
mov
push
mov
rcll
dec
cmp
lock
popf
and
pusha
add
lahf
xor
pop
xchg
fucomp
loopne
adc
bound
and
cmc
sbb
cmc
out
inc
sub
fldl
mulb
and
das
in
push
cmp
das
add
and
inc
mov
and
xchg
out
xor
xchg
fadds
jne,pn
dec
std
push
jmp
cmc
sarl
sub
pop
loopne
mov
mov
mov
adc
sbb
jne
cmp
bound
bnd
fwait
out
inc
sub
mov
cltd
lods
push
cmp
jo
push
xchg
clc
insl
pop
into
mov
insb
rcl
xor
jge
dec
pushf
outsl
rcll
sahf
cmc
loopne
adc
dec
fsts
cltd
cmpsb
inc
pop
push
sbb
xor
adc
test
mov
inc
scas
inc
xor
icebp
dec
loopne
adc
in
lds
scas
sti
shl
out
bound
mov
dec
mov
mov
scas
push
mov
scas
mov
movsb
adc
test
ss
and
mov
fsubs
out
daa
push
leave
nop
xor
int3
lock
cs
pop
or
pusha
xchg
mov
js
das
add
push
pop
jg
iret
shll
xchg
sarb
loopne
arpl
cmp
push
mov
sbb
inc
add
push
ljmp
scas
lahf
mov
adc
cmpsl
push
fcompl
jo
fnsave
arpl
neg
sbb
or
xor
ret
aas
mov
jb
popa
int3
aad
test
mov
cltd
pop
jbe
pop
pop
and
inc
cwtl
movsb
inc
lcall
int
adc
ror
and
and
jne
stos
andb
ljmpw
int3
add
cli
xorb
xchg
mov
pop
clc
fldenv
push
popf
pop
js
sbb
and
mov
loop
int3
bound
adc
inc
sub
mov
aad
sub
or
mov
lcall
add
hlt
push
test
mov
pop
test
pop
test
loope
lcall
test
ljmp
push
cmp
dec
scas
push
cmp
add
sahf
sbb
and
lret
or
pop
sub
mov
xor
pop
inc
sbb
rolb
cld
sti
push
cmp
dec
adc
pop
imul
cs
xor
xor
in
call
mov
arpl
pop
jmp
inc
adc
pop
push
sbb
inc
aaa
xchg
shll
hlt
and
add
ficoms
cltd
hlt
repz
jae
mov
mov
imul
mov
fistpl
mov
dec
jae
pop
and
mov
jle
addl
cmp
in
cmp
mov
out
das
mov
dec
test
scas
clc
aaa
jbe
pop
or
js
scas
test
dec
xchg
lds
adc
hlt
add
testb
setle
in
jno
outsb
adc
pop
pop
push
insl
call
lods
mov
sbb
jb
imul
mov
jb
rcr
imul
cmp
mov
mov
dec
loopne
js
xchg
push
xor
lea
jmp
dec
sti
loopne
sbb
pop
pop
inc
jecxz
mov
es
push
mov
shl
ret
or
sbb
add
jmp
and
lock
andl
push
sbb
std
lcall
pop
cwtl
adc
xchg
xchg
push
mov
cmp
mov
sub
mov
add
xchg
lret
stos
sub
mov
sub
sbb
mov
mov
mov
sub
sbb
cli
test
pop
lcall
dec
add
cli
rcl
sub
pushf
adc
mov
push
inc
and
jae
mov
ja
aas
test
daa
popa
arpl
dec
xlat
mov
sub
test
rorb
mov
mov
xor
mov
icebp
fisttpll
adc
fwait
es
cli
pop
jbe
jecxz
movsb
repz
mov
mov
or
inc
fwait
mov
aad
sahf
mov
lret
xor
gs
scas
es
jge
test
pop
cli
or
mov
push
pop
mov
out
pop
or
les
out
mov
andb
mov
lods
cmpsb
popa
push
push
insb
lds
xor
scas
loopne
xor
lods
push
sbb
xor
inc
hlt
sub
mov
clc
sti
xchg
add
rcr
insl
std
xchg
xchg
outsl
jmp
jne
inc
dec
mov
das
and
xchg
mov
jo
cmp
and
xor
mov
dec
adc
aaa
sbb
dec
fidivl
fprem
mov
mov
or
call
out
sub
cmp
cmp
fdiv
cmpsl
fdivrl
xchg
add
push
jmp
lods
cmpl
cwtl
mov
push
ljmp
test
jne
mov
pop
fdivrl
dec
sub
int
nop
mov
lods
sbb
ja
xor
ljmp
ss
test
int3
stos
cmpsb
xor
push
fwait
rorl
or
push
std
js
pop
inc
inc
jle
fisubrl
adc
mov
sbb
loope
xchg
outsl
das
fs
cmc
add
dec
jg
dec
xor
mov
cmp
or
xchg
movsl
adc
mov
xorl
lods
rcrl
popa
aad
mov
call
mov
sbb
adc
mov
add
pop
imul
lea
add
sbb
adc
mov
test
insb
in
out
dec
pop
sub
xchg
push
inc
adc
stos
xchg
rolb
or
mov
ret
add
fstl
pop
dec
hlt
jbe
movsl
inc
fbld
aaa
arpl
aas
push
adc
jb
mov
jns
out
movsb
popf
pop
fistpl
dec
or
dec
clc
imul
test
and
or
xor
popf
std
fiaddl
cmpb
xor
push
xchg
out
mov
push
inc
cmp
and
xchg
fwait
mov
and
mov
subb
lret
shr
lods
andb
mov
sbb
jns
dec
dec
jmp
mov
sub
cmp
clc
in
xor
jae
jne
and
xor
insb
or
test
ficomps
mov
mov
gs
bswap
adcl
pop
mov
pop
xor
adc
mov
push
push
and
and
cwtl
sahf
out
out
jno
sbb
adc
and
sub
jl
aas
push
aas
aam
sbb
imul
scas
cmp
aas
inc
ss
sti
mov
ds
loopne
out
sub
test
mov
std
pusha
cmp
xlat
loope
shl
mov
mov
sbb
sbb
in
or
fnstenv
pop
inc
pop
mov
arpl
ja
lods
stos
fcmovu
ljmp
ds
cwtl
addb
sub
les
lea
pop
icebp
idivl
fmuls
push
daa
imul
repnz
ficoms
add
arpl
add
inc
sbb
pop
or
popl
xchg
inc
sub
xchg
imul
or
inc
out
jno
cltd
sarl
sbb
sarl
pop
jne
and
imul
es
xlat
enter
outsb
push
ja
add
adc
jmp
mov
or
cmpsl
pop
inc
mov
enter
dec
jge
mov
into
add
nop
xlat
lret
outsb
or
mov
cmpb
or
add
lods
gs
stos
pop
xchg
mov
push
lock
loopne
dec
push
adc
inc
or
bound
and
cld
push
cmc
cmp
dec
push
fcoms
imul
js
pusha
lods
ja
btr
and
lods
je
pop
cmpsb
dec
js
sarl
jecxz
mov
cmpsl
mov
dec
inc
jo
lods
out
pop
aam
push
cwtl
mov
push
push
push
es
push
xchg
stos
shlb
fcoml
pusha
cmc
lret
lahf
cmp
mov
xchg
mov
in
push
in
imul
subb
xor
out
std
adc
xor
lgs
mov
cmp
and
push
push
cwtl
out
cs
daa
ja
jns
addl
jecxz
int
mov
pop
adc
cmp
jecxz
mov
mov
scas
jmp
mov
inc
jg
mov
xorl
jb
jp
outsb
scas
loope
push
sbb
inc
test
pop
xor
cmp
lcall
or
mov
loopne
pushf
call
in
jmp
inc
ss
mov
sbb
mov
pop
enter
push
outsb
andb
imul
xchg
jne
cli
pop
jp
mov
adc
out
inc
ret
iret
or
xor
push
aaa
jno
sub
nop
cmp
xor
push
test
cmp
insb
mov
push
sub
shrb
pop
sbb
dec
divl
push
out
push
sahf
lret
pop
mov
and
mov
mov
pusha
inc
push
mov
repnz
jecxz
sub
roll
in
es
imul
add
cld
and
mov
leave
ds
cmpsb
pop
incl
jecxz
inc
sbbb
adc
sub
outsl
jl
mov
loop
stos
jp
mov
mov
pop
jl
lods
xchg
loope
bound
jmp
aad
xchg
lcall
sar
xchg
leave
mov
adc
std
pop
test
dec
and
arpl
jg
shl
dec
cmc
mull
jmp
mov
fwait
in
hlt
cmp
leave
lods
fs
or
stos
mov
jae
fistps
cmp
aam
xchg
repz
movsb
idivb
mov
dec
adc
jg
cltd
xchg
and
or
xchg
dec
adc
xchg
jb
cmp
repz
jno
dec
inc
enter
dec
push
mov
jb
das
jg
cmp
out
daa
jnp
das
push
into
sub
clc
push
repnz
pop
iret
xor
and
xchg
xor
and
js
jb
dec
lcall
mov
data16
popf
mov
outsb
jg
outsl
inc
lcall
and
mov
xor
push
xchg
lea
mov
in
mov
pop
xchg
std
pop
inc
xchg
mov
jne
or
dec
inc
mov
mov
mov
xchg
inc
out
or
cmpsl
addl
mov
mov
dec
loopne
mov
push
sbb
mov
jns
push
ror
sbb
test
push
add
jp
mov
daa
call
in
outsb
lods
jmp
dec
lret
xchg
push
movsl
lahf
test
xor
adc
adc
jnp
insl
arpl
rcr
xor
pusha
inc
dec
push
pop
sbb
fmulp
mov
icebp
rorb
shrl
loop
shlb
lcall
nop
pop
jo
cmp
push
sbb
dec
loop
xchg
jmp
mov
push
cmp
das
mov
je
aad
xor
lret
andb
xchg
mov
jmp
sbb
xlat
dec
adc
dec
sbb
sbb
mov
mov
cmpsl
jb
pop
xor
cmp
jmp
lcall
xchg
sbb
xchg
xchg
inc
sbb
cltd
push
out
or
inc
mov
cltd
cwtl
xor
xchg
inc
sbb
inc
jle
cmp
mov
push
inc
mov
inc
pop
or
xor
sbb
push
cmp
je
fsts
inc
xchg
xor
sub
sbb
and
xchg
mov
hlt
sub
punpckhwd
in
and
mov
aas
nop
hlt
xor
mov
mov
imull
xlat
hlt
mov
out
xchg
sbb
xchg
bound
xchg
stc
lcall
mov
cmp
push
mov
pop
cltd
cld
jnp
leave
ja
dec
mov
pop
mov
sarl
in
add
push
or
and
xchg
adc
inc
insl
scas
jge
sub
jmp
sbb
and
cmpsb
out
bound
adc
mov
cmp
aad
mov
jle
pop
mov
les
mov
push
adc
stos
mov
pop
in
pusha
hlt
jb
enter
out
pop
fwait
popa
or
mov
nop
dec
xor
sti
lret
cmp
je
jl
stos
xor
stos
test
dec
negb
jae
into
push
add
out
mov
push
mov
fisttpl
push
add
sbb
xorb
aam
sbb
xchg
lret
repz
mov
fs
cmc
mul
outsb
movsl
sub
setle
out
fmull
fstpl
enter
push
mov
das
pop
shlb
aam
popa
das
cltd
push
push
sti
xorl
rcr
jo
cmpsl
stos
mov
shlb
jl
cwtl
in
aaa
loope
cmp
loop
nop
mov
mov
dec
andb
orb
hlt
jno
xchg
inc
mov
adc
sahf
push
and
xor
inc
aaa
and
xchg
test
or
push
hlt
sub
push
mov
push
or
mov
cmp
xor
stos
mov
fs
imul
mov
int3
icebp
pop
out
or
decl
inc
cmc
loopne
mov
rcll
add
and
lock
fsts
in
popa
mov
sbb
fcomip
addr16
repnz
mov
cs
ss
imul
add
and
jbe
ret
neg
inc
int
push
dec
adc
inc
test
sub
fnstsw
xor
push
subl
dec
inc
sbb
cmc
lds
outsb
xor
icebp
xchg
xchg
xchg
xchg
sub
mov
cmp
icebp
ffree
fwait
and
insb
or
push
inc
lods
jle
push
xchg
mov
ss
push
mov
mov
or
dec
or
rcll
lock
arpl
insb
shlb
jle
jmp
lcall
adc
or
fiaddl
add
outsb
or
xchg
and
xchg
mov
mov
pop
adc
scas
ds
adc
push
out
clc
jl
scas
push
fsubs
sahf
cmc
push
ljmp
sbb
movl
inc
inc
jmp
dec
add
pop
in
das
pusha
mov
scas
adc
in
jae
icebp
pop
sbb
stos
divl
inc
fnsave
test
lret
and
dec
dec
daa
movb
xchg
scas
movsl
movsl
ja
in
and
push
loop
or
js
fistpll
push
and
jo
cs
sub
inc
inc
mov
shl
popa
out
pop
icebp
and
or
jae
cld
sbb
repz
ret
push
sbb
mov
sahf
cltd
sbb
mov
jno
pushf
xchg
pop
mov
cmp
leave
or
jle
pop
jo
jnp
fbstp
cmc
fisubrs
push
shl
mov
dec
stos
lret
and
jmp
add
dec
mov
mov
jae
fsub
push
ds
int3
in
mov
mov
sbb
push
pop
inc
push
les
mov
popa
jmp
lock
mov
pop
or
dec
notl
test
sar
pop
xor
lea
je
hlt
aad
repnz
daa
je
xchg
and
orl
les
push
xchg
push
push
loopne
pop
pop
cmp
les
shrl
push
sbb
and
test
daa
mov
scas
in
jmp
xchg
dec
and
adc
mov
xchg
pop
mov
push
enter
fwait
sahf
xchg
jbe
fcomps
les
jo
jp
rorl
in
pop
imul
dec
jmp
xchg
lods
mov
pop
cli
add
dec
sbb
mov
push
add
add
es
mov
cs
or
cmp
lret
mov
rol
jecxz
scas
mov
dec
mov
inc
adcl
and
pop
in
lods
jle
push
jnp
clc
hlt
pop
push
push
or
xchg
xor
push
and
mov
dec
pop
into
inc
sbb
movsb
out
scas
dec
sub
cld
adc
aaa
lock
int
inc
lret
add
mov
and
dec
ja
mov
lahf
fiaddl
or
or
and
stos
jno
sti
out
jecxz
repz
fsubrs
out
stc
push
fldenv
add
push
popa
lea
mov
or
sub
lret
xor
int
stos
sbb
and
dec
inc
test
adc
add
xchg
mov
notl
int3
leave
mov
dec
aad
jp
pop
pop
xchg
or
cmp
dec
inc
repnz
imull
das
mov
aad
ret
test
aam
imul
fcom
sub
dec
cmp
ds
adc
or
mov
int
and
stc
inc
xchg
cmp
ret
mov
xchg
adc
mov
scas
or
fistps
sbb
test
and
dec
fucom
and
mov
mov
cmp
inc
inc
xchg
imul
mov
mov
inc
mov
ljmp
insl
sbb
push
and
repz
arpl
lcall
aas
pop
inc
inc
mov
xchg
popa
test
push
cmp
pop
mov
push
or
out
sbb
jp
adc
xor
stc
fisttps
jne
cmp
dec
rcrb
jns
sub
and
fsubrl
sahf
ja
fidivs
movsb
push
mov
ret
cwtl
xor
mov
mov
inc
mov
push
add
test
push
xor
xchg
lods
lcall
and
test
adc
mov
aas
dec
push
sub
jg
notl
cmp
rcrb
pop
mov
push
sbb
add
lds
daa
and
adc
sbb
int3
push
sbb
sbb
lret
aaa
sarb
mov
imul
cmpsl
sbb
push
out
std
sub
adc
jno
sub
loopne
in
mov
popf
rcll
ficompl
shrb
mov
sub
out
imul
xor
xchg
push
leave
jns
fldt
adc
imul
and
xchg
sub
stos
cmpsb
or
mov
mov
cli
add
mov
ffree
mov
dec
jmp
mov
sti
push
mov
mov
clc
sub
repnz
and
aaa
frstor
mov
add
mov
xor
jns
out
push
pop
add
and
push
mov
cmpsb
movsb
mov
bound
aaa
adc
in
jge
movsl
lcall
insl
pushf
insb
call
mov
mov
pop
xor
fisttpll
aaa
push
pop
mov
or
inc
cmp
mul
bound
bswap
jmp
inc
scas
lahf
scas
adc
loope
lahf
ret
mov
pop
ss
push
cmp
imul
xchg
jns
stc
aas
jl
pop
lahf
je
pop
add
push
lahf
push
rolb
mov
dec
cli
mov
inc
aad
stc
pop
push
enter
iret
leave
fimull
sbb
pop
jnp
scas
call
sub
adc
jle
stc
arpl
lahf
fwait
les
shrb
or
mov
call
outsl
in
cmp
xchg
pop
int3
insb
mov
jmp
adc
inc
mov
sub
fsubs
xor
and
mov
icebp
nop
movsl
stc
mov
pusha
push
xchg
mov
cli
mov
loopne
lock
hlt
sti
inc
mov
dec
pop
stos
imull
xchg
fcmove
jecxz
push
xchg
add
add
mov
jne
test
inc
pop
dec
jae
les
push
popf
into
inc
shll
inc
dec
mov
imul
stos
jl
addr16
mov
xchg
xor
pop
sbb
ret
fsts
sub
xchg
mov
shlb
mov
aas
jo
sub
inc
sbb
enter
cwtl
sbb
mov
roll
fucomip
sbb
xor
iret
out
add
mov
ret
arpl
flds
lret
sbb
hlt
cltd
cli
push
cmp
mov
dec
fsub
pop
pop
aad
lcall
lds
inc
rcr
dec
cwtl
stc
add
jl
call
jmp
mov
pop
xchg
cmp
inc
mov
sarl
cmp
aam
leave
mov
lret
pop
jns
scas
pop
into
inc
outsl
cmp
cmp
mov
adc
test
add
repz
fwait
bound
cmp
insb
lods
pop
iret
clc
cld
jecxz
xchg
scas
lock
ljmp
mov
xchg
cli
dec
jns
or
test
xchg
pop
js
fsubl
push
loop
das
in
or
mov
lldt
out
and
add
adc
ljmp
dec
lahf
popf
ficoml
hlt
out
cld
repnz
iret
stc
clc
push
xchg
push
sahf
fdiv
stos
jge
pop
dec
jo
dec
add
into
ret
add
ficoml
arpl
mov
mov
imul
movsb
sar
sbb
data16
sub
test
or
mov
xchg
adc
and
xchg
stc
xchg
push
std
adc
pop
and
enter
enter
mov
sbb
xor
dec
stos
xor
sbb
mov
jge
or
mov
jle
loop
jg
dec
or
inc
mov
ss
xor
push
cmp
cwtl
push
pushf
mov
sbb
cmpsb
rclb
fidivrl
mov
in
js
nop
ja
and
cmp
or
ror
mov
lds
xchg
add
push
stos
sub
add
push
or
fisttpl
mov
inc
out
sarb
call
lods
mov
adc
aam
movsb
pop
jns
sub
je
leave
ret
adc
mov
mov
iret
test
scas
mov
inc
jmp
dec
inc
and
iret
js
pop
lret
sub
imul
mov
jge
dec
daa
jo
loopne
pushf
dec
clc
push
mov
leave
lea
mov
push
test
push
test
inc
sarl
ror
jle
push
sbb
push
and
jno
mov
aas
scas
inc
adc
dec
addr16
mov
xchg
rcrb
inc
cmp
mov
push
push
sub
push
sarb
outsl
cmp
shlb
inc
cli
pusha
movsl
arpl
lret
dec
xchg
cmp
push
dec
jecxz
inc
jnp
adc
adc
lods
les
cmpsb
and
mov
and
sbb
xchg
push
sub
jns
ret
rcrl
fwait
pop
or
rcr
clc
mov
inc
xchg
dec
add
jmp
arpl
repz
test
sbb
jns
pushf
in
insb
aad
sbb
mov
sti
push
push
jbe
adc
or
jle
add
mov
ljmp
jo
mov
pushf
push
mov
fstps
movsb
xchg
mov
add
and
fucomp
add
loope
push
js
repnz
adc
pop
xchg
orl
mov
mov
xor
out
xchg
aam
lods
jns
lea
mov
fs
dec
jp
clc
sti
pop
or
xor
push
or
in
mov
pusha
ret
lods
inc
sbb
sub
mov
test
lret
lret
fndisi(8087
cmc
loopne
adc
sti
cmp
jecxz
or
xchg
enter
and
popf
xchg
cmp
shl
sar
aas
negb
dec
or
dec
mulb
lahf
leave
and
dec
inc
dec
arpl
jmp
aas
out
cmpsb
fdivrs
cmpsl
faddl
pop
inc
cli
iret
insb
push
adc
das
dec
cltd
mov
arpl
leave
out
jp
add
push
and
push
and
ds
pop
or
mov
mov
mov
inc
negl
in
mov
test
int
mov
testl
int
lds
sete
gs
call
add
pop
pop
push
sbb
jle
rcrb
jne
fnstsw
sahf
mov
popl
mov
add
hlt
movsl
cwtl
in
imul
mov
aaa
pop
std
or
push
sahf
ret
sbb
imulb
sbb
jne
cmp
movsl
das
push
jecxz
sbb
cmp
fisubrs
dec
inc
in
stos
clc
ss
nop
vpsllvq
mov
std
decb
inc
jg
add
test
jle
bound
dec
in
sub
jg
and
cwtl
xchg
loope
xor
cmp
dec
int3
rcl
aaa
pop
inc
or
rclb
jae
pop
jne
add
pop
jbe
call
repnz
and
and
mov
cs
push
shlb
jo
pop
xchg
lea
in
ss
add
push
jge
jmp
adc
jbe
mov
in
xor
sahf
pop
xor
hlt
push
lods
cwtl
addr16
neg
fistpl
mov
arpl
jmp
lods
stc
lods
das
fs
mov
inc
adc
jae
mov
dec
sub
or
dec
test
lock
cmp
mov
filds
mov
sbb
loop
or
and
pop
and
jle
mov
das
dec
cmpsb
ficompl
mov
stos
je
int3
push
mov
enter
orl
inc
dec
ficoms
jp
xchg
mov
popf
sub
fs
xor
dec
push
imul
loope
call
call
incb
jg
arpl
jns
cmp
scas
mov
xchg
stc
push
xchg
add
aas
jb
loopne
aaa
sub
mov
or
sahf
nop
out
xor
or
inc
test
outsl
jb
inc
inc
repz
sub
fwait
cmpb
or
pop
dec
push
pop
cmpsb
fwait
out
and
xor
sahf
popf
pop
inc
leave
mov
ds
scas
push
and
xlat
test
ljmp
jns
addr16
rorl
and
sub
fsubrs
add
clc
loop
mov
loope
fsub
enter
push
adc
aaa
mov
aam
js
repz
je
lds
sbb
sti
repz
pusha
pop
xchg
fbstp
mov
sti
xor
mov
ljmp
jnp
push
adc
gs
scas
jecxz
inc
push
mull
sarb
cmc
subb
jb
bound
xchg
mul
adc
lcall
js
cmp
lret
or
sub
fwait
push
out
fidivrl
cmp
cmp
std
or
insl
cmp
js
rcll
popf
fs
ret
arpl
dec
mov
fmuls
jmp
push
mov
call
leave
cmp
cwtl
mov
inc
xor
push
ret
out
sarb
adc
cmp
arpl
xchg
xor
dec
sub
pop
pop
xchg
lahf
xor
push
cs
sti
cmpsl
sbb
mov
push
loopne
mov
or
adc
push
jecxz
jmp
or
cmc
cs
sbb
xchg
inc
mov
mov
cmp
push
or
out
cmpsb
stos
rorl
callw
pop
lods
sub
popf
xor
pusha
pop
mov
or
rcl
es
pusha
fisttps
shrl
or
sti
pop
lock
rolb
pop
orl
out
adcb
mov
cltd
sti
pop
pop
repnz
lret
or
cmp
ret
cld
push
mov
test
leave
andl
ds
fnstsw
es
pushf
punpcklbw
std
ja
popf
pop
adc
cmp
fbstp
push
add
jg
cmp
push
cmp
push
push
jns
fisttpl
lret
dec
movsb
lds
jl
rcll
addr16
fdivrl
dec
rcrl
lcall
jmp
or
lahf
bound
push
in
pcmpgtb
xchg
std
cmp
fisubrl
pusha
xor
lret
push
jno
mov
out
loope
mov
push
dec
jecxz
xchg
dec
push
xor
dec
or
mov
nop
fs
mov
movsb
iret
jmp
sbb
loopne
jp
mov
scas
adcl
mov
add
cmc
cmp
lret
cmc
pop
xlat
ds
pop
aas
cltd
inc
ret
xor
pop
mov
insl
pop
arpl
pushf
out
imull
jo
sbb
dec
in
and
dec
and
mov
and
adc
push
insb
test
pop
pop
sub
inc
mov
jg
or
lock
cwtl
push
pop
mov
mov
sbb
lods
cmp
js
adc
inc
add
jp
cmpsb
or
std
sbb
aam
rorb
push
cmpsb
mov
dec
xchg
mov
mov
insb
sub
fistl
aam
pusha
cmpsl
mov
imul
sahf
fdiv
inc
outsb
daa
push
mov
lds
mov
in
add
pusha
bound
test
mov
sub
fwait
stos
mov
add
gs
dec
push
sahf
cmpsl
xor
dec
add
movsl
repnz
push
or
loopne
mov
adc
sub
arpl
in
mov
mov
adc
cltd
mov
adc
lret
xchg
or
jne,pn
inc
pop
adc
xorb
xchg
cmp
or
jbe
cmp
movsb
movsl
xor
mov
sub
cmp
movl
jno
mov
lret
add
movsb
hlt
mov
mov
xchg
adc
pop
stos
or
out
mov
fcomi
clc
mov
jle,pt
jl
cmc
or
pop
leave
add
outsb
fxtract
cmp
bound
fs
xchg
xlat
cld
cmpsl
lret
imul
and
pop
jecxz
cmpsl
and
aas
mov
cld
mov
lcall
stos
fistps
mov
orl
xchg
xchg
fdivrl
cli
ljmp
pop
lods
and
das
mov
sub
lea
clc
jmp
bound
jne
repz
adcb
sub
adc
xchg
mov
mov
ret
loop
jmp
iret
leave
inc
movsb
pop
cmp
inc
arpl
loope
push
jnp
stos
jecxz
mov
mov
rorb
push
sbb
in
cmp
mov
ss
add
jbe
gs
stc
call
mov
push
cwtl
mov
test
lods
imul
imulb
and
push
pop
jo
loope
dec
popa
test
sti
dec
fxch
xor
outsb
cmp
push
push
pusha
jmp
xor
cmp
inc
cmp
adc
lret
pop
sub
outsb
sbb
cmp
mov
pop
push
pop
push
push
cmp
pop
fwait
add
jns
movsb
loopne
pop
leave
jle,pt
pop
add
iret
enter
xchg
dec
test
mov
dec
add
xor
mov
lret
push
out
jl
and
push
in
inc
jmp
outsb
out
mov
loope
out
ljmp
dec
adc
outsb
jbe
dec
xor
xchg
push
and
or
addb
lock
adc
lods
jle
xor
adc
push
jo
ret
insl
mov
jae
std
push
lret
mov
inc
shlb
in
int
sbb
cwtl
sub
in
sbb
stos
push
cmp
sti
in
aas
iret
ss
je
sub
and
add
xor
clc
out
icebp
fnstsw
and
inc
jl
ret
mov
or
or
sbb
sbb
push
mov
jge
jns
fwait
dec
push
rorb
inc
popf
inc
in
test
and
in
imul
mov
cli
enter
iret
rclb
jmp
mov
mulb
dec
repnz
push
stc
daa
cmp
lahf
addr16
jmp
fs
rorl
hlt
jle
mov
pop
lods
or
arpl
rcll
add
shll
mov
or
insl
divl
jno
sbb
inc
jae
cmp
stos
sub
jb
xchg
insl
add
mov
cmpsb
or
push
sub
imul
or
outsl
sub
push
aam
pop
jecxz
jbe
arpl
test
jl
jmp
dec
fadds
popf
mov
in
fst
cmpsl
movsb
jp
lods
fwait
lcall
addr16
repz
sti
hlt
cmp
sbb
xchg
push
leave
data16
add
aam
dec
mov
cmp
mov
sub
dec
aaa
mov
xor
cmp
mov
jmp
inc
sub
inc
fidivrl
outsb
insl
inc
mov
push
aad
cmp
cmp
lea
push
pop
nop
cltd
imul
add
mov
xor
pushf
push
loop
add
cmpsb
dec
adc
mov
ja
insb
jp
cli
and
fmulp
repz
movsl
in
leave
nop
iret
add
aam
pop
adc
test
ljmp
xor
xchg
in
scas
jge
jns
and
popf
dec
mov
jl
imul
fildll
mov
pop
jle
xchg
mov
mov
fsubrs
sarb
lcall
push
xchg
jo
or
and
adc
mov
fistl
clc
fistpll
lea
inc
sahf
testb
xor
lods
je
fisttpll
mov
push
gs
je
nop
rcll
or
mov
push
cmp
ljmp
mov
out
cld
shl
fiadds
pusha
in
or
rolb
push
dec
out
mull
lret
inc
out
sbb
mov
lods
jo
add
pop
ror
leave
mov
mov
pop
and
pop
lock
jmp
scas
sbb
in
scas
mov
pushf
push
dec
fs
lods
sub
das
pop
and
sub
mov
dec
jne
xor
pop
sub
adc
adc
hlt
cltd
xchg
xchg
ljmp
imul
enter
sub
xor
dec
fmull
movsl
jmp
xor
pusha
xchg
pxor
sub
inc
mov
lret
cltd
vminsd
icebp
mov
rclb
ret
dec
fyl2xp1
loope
sub
pop
in
subb
jo
js
xlat
ds
sahf
fucom
arpl
movsb
pushl
push
movsl
lea
addr16
xor
andb
out
js
mov
test
sbb
mov
pop
sbb
dec
in
cmpb
fiadds
push
or
loop
outsl
dec
in
fisttps
in
insb
leave
aad
daa
push
xor
hlt
out
push
jecxz
lcall
mov
or
fldenv
inc
es
add
loop
sbb
dec
dec
fadd
bound
cli
adc
lret
das
sub
sti
daa
in
mov
sub
bound
push
cld
xchg
or
leave
fnstsw
dec
in
dec
sub
into
cmp
imul
cwtl
pop
out
repz
rcr
push
xor
add
pop
enter
lcall
aas
fucom
pop
or
sub
nop
pop
in
int
pop
roll
pop
inc
add
lcall
negb
mov
out
pop
inc
pop
mov
add
cli
add
dec
mov
mov
sub
repz
lock
adc
sbb
test
insb
xor
cmpsb
xchg
xor
fadds
or
movsl
inc
call
mov
adc
mov
or
sub
popa
stc
leave
xchg
pusha
xlat
jae,pt
in
mov
push
xchg
iret
out
inc
mov
cmp
xor
sub
dec
lock
mov
xlat
and
into
idiv
outsb
lahf
mov
jns
in
lahf
or
mov
jno
leave
lock
add
or
lods
push
mov
movsl
call
push
xchg
ljmp
push
jbe
mov
fistl
sub
es
and
adc
popa
xor
push
pop
jmp
ja
fs
notl
inc
das
and
out
and
ret
xor
or
adc
sub
test
mov
pop
xchg
mov
lea
stos
push
inc
cmc
das
daa
inc
sbb
push
jo
hlt
xchg
sbb
movb
cmp
inc
iret
push
pop
sbb
xchg
jns
movsl
and
lods
btr
mov
dec
repnz
pusha
scas
pop
xlat
mov
add
lods
mov
cmp
push
in
mov
fiaddl
ljmp
jae
jne
in
cmp
decl
cltd
adc
cmp
jmp
imul
push
loope
mov
stos
add
jb
sub
bound
ds
sbb
popa
push
cmp
popf
push
cmpsb
lahf
jp
inc
lea
sbb
sub
dec
ss
inc
outsb
pop
cmp
out
shll
adc
pop
pop
xor
xchg
lock
push
jo
sbb
cli
notb
negl
inc
cmp
stos
aaa
decl
in
fimuls
stc
inc
sets
gs
cmpsb
arpl
das
int
adc
sub
mov
divl
popf
jnp
sbb
jecxz
jbe
fdivl
adc
adc
divb
test
lods
push
add
fmulp
lds
sbb
mov
in
inc
inc
out
or
dec
lock
pusha
test
cbtw
push
mov
pop
dec
lods
and
cmp
idivb
outsb
xor
gs
mov
in
fs
adc
mov
loope
mov
out
add
add
fnsave
stc
outsl
das
add
notb
jnp
mov
cmp
xchg
pop
jo
int3
mov
fwait
dec
sti
sbb
fidivrs
mov
cmp
and
lret
xchg
das
addr16
push
jmp
jg
jge
movsb
repz
xor
inc
adc
mov
jl
cmp
xchg
mov
xor
stc
jecxz
mov
rolb
fdiv
in
movsb
lods
jno
stos
das
mov
jmp
push
lahf
adc
outsl
mov
push
or
pop
jmp
xchg
and
jb
jnp
enter
push
bound
sub
rcrb
je
pop
xlat
xor
xor
clc
stc
add
scas
ss
cmp
pop
and
jae
jl
push
je
pusha
push
pusha
and
cltd
into
mov
pop
push
jge
cwtl
push
push
pop
jno
mov
jmp
jnp
hlt
and
inc
sub
fdivrl
add
sahf
or
xor
gs
rorl
shlb
add
adc
inc
xchg
je
gs
xor
jmp
or
push
push
imulb
pop
xchg
ret
imul
jno
in
cmp
out
out
and
lahf
imul
sarl
pop
jno
shll
adc
mov
test
push
pusha
pop
cmpsl
scas
jmp
sbb
aam
sbb
inc
rcr
pushf
jne
pop
dec
popa
rolb
pop
aas
cmp
dec
pushf
pop
pop
jecxz
xchg
mov
push
call
cmp
int
movsl
pusha
stos
fsubrl
mov
outsb
hlt
testb
leave
popf
aas
jne
pop
sub
js
insl
orl
inc
aam
push
jbe
sub
push
test
fnstsw
lea
stos
xor
adc
and
or
popf
dec
mov
mov
imul
mov
call
push
xor
out
jge
out
push
jo
lock
cli
test
jbe
subb
push
fidivrl
mov
orb
fucomp
movsl
or
pop
js
jp
pop
add
push
pop
inc
push
popf
mov
mov
cmp
test
or
pop
inc
leave
lret
mov
loop
outsl
sti
movsb
inc
cmpsb
stos
pop
repz
outsb
adc
out
pop
enter
dec
cwtl
adc
lret
popa
sub
stos
sbb
inc
adc
mov
imul
sub
insb
jbe
mov
in
pop
jmp
pop
scas
jecxz
and
outsb
push
insb
fistl
push
cmp
push
dec
fucom
out
fmul
mov
idivl
aas
les
cli
mov
ljmp
add
jo
xor
push
sbb
xchg
mov
ror
nop
lea
pop
hlt
pop
lods
cmp
xor
jne
lahf
sbb
push
imul
lock
add
rclb
mov
mov
pop
mov
jmp
add
cmp
mov
xchg
jne
cs
inc
jb
out
or
xchg
or
jbe
stos
sarl
cmc
jbe
adc
mov
xchg
pop
cmp
lahf
notb
or
xchg
xor
adc
add
inc
lret
mov
adc
cwtl
fiadds
or
xchg
and
dec
paddw
push
lret
inc
mov
inc
sti
mov
mov
fisttps
dec
hlt
test
jnp
sbb
jne
jno
std
dec
mov
lea
ret
ret
jne
xor
loopne
cmp
adc
popa
and
xor
sub
sbb
fidivl
add
shl
dec
jmp
adc
add
push
in
ret
xchg
ds
repz
adc
ja
in
outsb
xchg
nop
inc
adc
adc
stos
sarl
lods
ss
adc
adc
xchg
out
add
aad
xchg
adc
dec
fwait
stos
stc
and
push
jo
lods
jge
xchg
pop
and
jge
sbb
push
jns
cmp
lds
dec
cwtl
bound
fs
andl
xchg
mov
sub
cmpsb
fs
leave
sti
sbb
mov
mov
je
loop
add
pop
stos
addr16
scas
loop
out
add
jno,pt
insb
ficompl
xlat
out
jecxz
das
inc
stos
sbb
xchg
pop
dec
addr16
pop
cmp
xchg
int
pop
cld
or
aaa
out
test
icebp
jo
sarl
pop
xchg
in
mov
xor
or
sub
cmc
data16
dec
inc
outsl
add
xchg
pusha
aam
jns
fildll
outsl
push
cmp
xchg
or
cmp
push
sbb
repz
dec
cmp
lcall
xor
xchg
dec
pop
mov
imul
daa
or
inc
adc
insb
ret
pxor
mov
dec
adcl
push
cmp
pop
enter
pop
xorl
pop
out
xchg
cmp
js
clc
pop
jmp
int3
in
mov
imul
shll
int3
or
rol
ret
sbb
dec
arpl
push
xchg
imul
int
into
cmc
loopne
jno
lods
mov
in
jmp
xorl
jmp
lock
mov
in
outsl
mov
jns
jecxz
mov
push
push
aam
enter
jmp
inc
addr16
sub
mov
notl
lret
or
xor
test
fs
lds
stos
adc
and
dec
sbbb
push
push
clc
sub
movsb
push
les
mov
das
xchg
mov
pop
cltd
lahf
addr16
sbb
fcomp
gs
leave
adc
push
testb
jmp
andl
push
test
xorl
cmpsb
subl
push
xlat
repz
cmc
test
or
arpl
cmpsb
lock
shll
mov
imul
push
fnstcw
imul
jo
dec
mov
jnp
lea
and
lcall
or
je
repz
hlt
jbe
sbb
jmp
xchg
lea
daa
gs
jbe
loope
aas
adc
xor
insl
push
mov
ja
cmp
push
or
pop
push
cmpb
cmpsl
repnz
mov
ja
cld
jl
sti
test
pop
js
inc
push
std
add
xor
and
lret
sbbb
inc
or
xchg
xchg
pop
adc
mov
aam
or
xchg
inc
and
cmpsb
nop
out
stos
or
addr16
inc
das
stc
xor
push
jp
out
sarl
pop
xchg
inc
cmpsl
xchg
loopne
call
push
bound
jno
xor
jno
cmp
dec
lahf
fildl
in
sub
mov
jmp
xor
aam
cli
sahf
adc
cmp
repnz
fcmove
push
mov
push
jne
cmp
sbb
bound
dec
jecxz
adc
adc
insl
or
int
dec
pop
sti
inc
mov
in
mov
pop
add
inc
enter
inc
push
adc
mov
je
int3
xor
pop
imul
xchg
das
add
stc
dec
test
sub
sbb
pop
cli
mov
ss
in
adc
dec
das
cli
in
mov
push
xchg
orb
inc
call
bnd
pop
cmp
repnz
sbb
popf
jns
add
insl
add
mov
push
push
lock
inc
out
imul
sub
mov
cmpsl
pusha
mov
cmp
das
cld
dec
out
lds
dec
xlat
mulb
and
push
pop
cmp
orb
inc
mov
lock
mov
xchg
cli
div
xor
inc
loopew
insb
and
andl
push
jge
push
lret
bound
fistps
jo
outsb
or
and
push
les
inc
jge
add
lds
cmp
adc
adc
idivl
std
in
mov
mov
fsubl
leave
jecxz
and
jmp
stc
inc
mov
sub
jmp
subl
and
pop
repz
je
inc
add
mov
adc
mov
pop
addr16
int
push
lcall
push
inc
neg
jmp
aad
cmc
fwait
sbb
xchg
xor
pop
and
and
mov
stos
and
sbb
aaa
stos
sub
xor
xchg
xchg
xchg
data16
mov
hlt
test
xchg
orl
mov
and
test
in
cmp
dec
xchg
pop
xlat
add
mov
mov
adc
das
sarl
out
cmpsb
or
mov
sbbb
popa
and
xchg
xchg
insl
jecxz
lock
js
pop
cmpsb
cmpsl
out
push
cwtl
cmpsl
jne
rcll
jp
inc
cmpsl
iret
shrb
jmp
lahf
cmc
aaa
sub
into
add
mov
gs
in
sti
add
or
mov
push
sub
mov
aad
pop
cltd
cmp
sub
scas
lcall
shll
xor
fdivr
addr16
mov
pop
clc
or
dec
mov
xor
pop
call
jl
mov
ficoml
jp
insl
mov
mov
xor
inc
cmp
mov
stc
mov
rcl
icebp
bound
push
das
jecxz
sbb
mov
jmp
in
pop
insl
jne
fwait
pop
scas
ret
xchg
and
cld
mov
ljmp
mov
jae
cltd
outsb
sbb
mov
leave
inc
cli
and
call
fld
movd
mov
mov
cmp
dec
adc
loop
repnz
popf
pop
sbb
ljmp
ret
add
mov
lahf
adc
mov
fdivs
aas
aad
or
inc
jmp
push
xchg
cmp
cltd
fs
test
or
movsb
mov
and
hlt
nop
or
pop
aad
cmp
add
fs
xor
jae
inc
mov
bswap
loope
pop
xchg
add
enter
shlb
data16
scas
pandn
cmp
jno
les
jp
jecxz
out
int
sahf
popa
ret
inc
jae
xchg
mov
iret
ds
ss
out
shl
sub
xor
mov
jecxz
push
fdivr
movsb
loopne
scas
in
jecxz
incl
inc
cli
int3
jb
cmp
fldt
iret
add
hlt
rcll
bound
outsb
in
dec
repnz
sub
clc
inc
fcmove
std
mov
sub
repz
lret
cltd
test
repz
jns
loop
std
sarb
scas
pop
adc
das
je
xor
mov
bound
dec
adc
lods
push
stc
xchg
pushf
push
push
sarl
sbb
fmulp
fisttpll
jb
mov
cmpsl
pop
outsb
push
mov
mov
and
xor
pop
ficoms
jae
sub
pop
loop
pop
xchg
pop
fwait
inc
fsubl
fidivrs
rcll
or
enter
mov
sbb
push
dec
xlat
fmull
sbb
movsb
subb
inc
shll
ljmp
cmp
out
and
sahf
push
out
cmp
cmp
rcl
lds
data16
shl
clc
mov
es
sub
in
mov
mov
int
and
jp
fstl
mov
outsl
push
cmpsb
inc
in
jae
xchg
dec
or
mov
negl
adc
or
es
lahf
mov
sbb
aas
jmp
and
lahf
push
adc
sar
fdivrl
test
addb
data16
sbb
push
imul
xchg
sub
popa
dec
inc
into
jp
mov
gs
xor
outsb
or
jg
out
aad
cli
and
rorb
mov
push
and
sahf
fstl
fildll
int
sbb
mov
xchg
pop
cmc
pop
test
stc
lds
in
push
das
shll
repnz
push
lret
rcll
lock
aad
push
call
loopne
add
pop
in
push
jno
outsb
mov
inc
sbb
mov
stos
pop
inc
arpl
push
jne
dec
push
xchg
push
jae
cmpb
jecxz
push
sbb
ljmp
inc
cmp
jo
add
and
pushf
inc
fwait
pop
sub
pop
cmp
mov
loopne
leave
adc
jno
imul
repnz
dec
push
mov
int
sub
dec
mov
mov
aaa
scas
lret
ret
idivb
scas
push
popa
xchg
int
mov
add
sub
negl
loopne
sbb
pop
std
push
cwtl
mov
out
mov
cld
push
mov
xchg
cmp
lcall
rorb
add
push
mov
jge
cmp
mov
ja
xchg
inc
xchg
addl
loope
repnz
es
push
xchg
jp,pt
jne
sub
add
out
and
mov
cmp
mov
lret
push
or
sub
and
xchg
mov
mov
roll
mov
mov
pop
test
mov
cmp
mov
imul
daa
add
dec
add
icebp
cmp
fwait
push
mov
or
pop
mov
imul
inc
xor
ret
movsb
jbe
adc
adc
mov
sub
out
cmp
scas
stos
cmp
pop
mov
and
scas
cmp
in
jmp
push
test
int
sub
fdivrs
jecxz
fstl
and
dec
or
xchg
add
push
dec
repz
cltd
je
mov
xlat
jnp
inc
popa
push
pop
mov
mov
rcrl
rcll
insb
dec
cmp
jb
mov
and
pushf
push
push
scas
rorl
bnd
negl
pop
xchg
add
add
ja
iret
ret
lods
clc
mov
fucomip
and
pop
add
in
jle
aaa
jo
jp
mov
xorl
adc
jl
pop
pusha
call
add
loope
push
and
jnp
adc
jge
notb
and
push
pushf
push
add
inc
rolb
lds
dec
arpl
cmp
jle
jl
test
push
pushw
mov
jl
imul
mov
pop
inc
xor
adcl
aad
cmp
cltd
fisubrs
jp
inc
mov
xor
adc
cli
rclb
mov
pop
jo
imul
add
movsb
inc
xchg
adc
in
cmp
lret
dec
push
or
and
sbb
stos
cwtl
addb
add
sub
stc
xchg
dec
and
inc
pop
inc
cmp
jmp
and
movsl
lcall
inc
inc
lods
rcl
mov
dec
inc
adc
and
pop
sub
or
add
lods
jnp
cmp
iret
mov
orb
xor
sbb
sub
out
jmp
mov
push
es
jmp
arpl
mov
dec
in
out
loopne
and
cli
mov
data16
outsb
in
clc
mov
inc
add
jb
and
insb
dec
push
add
call
ljmp
subl
insl
loop
cld
mov
mov
adc
inc
adcb
pusha
arpl
mov
dec
or
ror
adc
xchg
mov
jbe
dec
addr16
push
imul
xchg
lea
mov
sub
xchg
orl
lds
fstl
fistpl
fidivrl
rcrb
mov
insb
rclb
in
int3
shlb
outsl
frstpm(287
push
jle
dec
and
jnp
sbb
xchg
dec
scas
addb
int3
mov
xor
sbb
aam
mov
mov
test
ret
ret
jl
not
inc
sub
add
cmp
ffree
mov
idivl
adc
fmuls
mov
in
mov
pusha
or
ja
adc
aam
hlt
mov
sub
arpl
testl
jmp
addr16
jl
imul
mov
pop
xor
ss
xchg
dec
cs
pop
xchg
cmpsb
mov
or
out
mov
sbb
enter
fcoms
push
jle
pop
sub
mov
cld
cld
push
push
ss
dec
je
adc
mov
and
push
nop
cmc
stc
mov
push
jg
hlt
and
sub
xor
sub
loopne
stos
add
xor
jle
out
inc
fs
or
hlt
lods
popa
add
movsl
outsl
xor
and
rcrl
les
imul
rorl
fmull
and
pop
insb
out
push
jmp
dec
sub
cmp
xchg
inc
or
ficoml
fmul
or
dec
sbb
dec
movsl
add
mov
nop
xchg
add
dec
icebp
push
xlat
pushf
je
xchg
ret
mov
mov
mov
sbbb
jae
out
and
movsl
pop
loope
ret
sbb
jb
inc
loop
add
and
push
mov
inc
dec
shlb
loop
movsb
or
xorl
rcl
scas
inc
jp
mov
in
xchg
inc
mov
aas
loop
in
les
or
mov
jb
mov
jp
sub
add
or
adc
dec
pop
js
testl
push
adc
cmpsb
je
mov
inc
sbb
mov
cld
add
and
sub
dec
push
sub
fwait
mov
pop
sbb
ficompl
lods
iret
daa
adc
xor
add
loopne
clc
stos
outsl
mov
cmpsb
scas
xor
jecxz
int
and
dec
xchg
sub
sub
sub
insl
pop
dec
cli
leave
or
popf
pop
mov
mov
ret
pop
dec
test
ds
add
xchg
nop
andb
daa
pop
stos
es
and
push
push
inc
shlb
push
ss
cmpl
xchg
pop
mov
stc
imul
mov
pop
rclb
ljmp
or
xchg
inc
or
and
adcl
add
pop
mov
xlat
clc
mov
adcl
loope
adc
pop
mov
out
mov
xchg
pop
push
ret
xor
movl
pop
mov
inc
jge
test
movsb
call
push
aam
or
imul
scas
repnz
push
popa
fsts
aam
imul
mov
xchg
lret
aad
adc
notb
push
ss
lret
adc
xchg
push
xlat
outsl
xor
das
inc
or
test
imul
hlt
sbb
negl
fwait
nop
push
push
rclb
push
inc
mov
fldenv
stc
icebp
or
lods
test
in
jno
pop
pop
mov
or
ljmp
lcall
test
data16
jno
jne
sti
lcall
into
jne
push
push
xchg
jmp
and
addr16
in
xchg
shl
int
push
or
add
and
and
cmp
loopne
jmp
sub
cmp
dec
push
out
addr16
add
in
movsb
fnstsw
jnp
lret
pop
adc
and
iret
or
mov
mov
loopne
sbb
fimuls
cmp
and
inc
sarb
push
pop
cmpsb
insl
inc
cmp
rcll
dec
sarb
js
dec
dec
aas
inc
sbb
loopne
mov
cmp
pop
cmpsl
and
daa
lds
adc
sub
in
jg
cmc
mov
xor
xor
jb
xor
stc
jg
jle
dec
inc
popa
sub
lcall
enter
es
or
add
iret
xchg
out
hlt
jo
push
dec
repnz
lds
subb
push
out
xchg
mov
push
sub
add
scas
mov
sbb
xchg
cmp
cld
jle
inc
enter
add
mov
mov
mov
aad
xchg
int
cmp
in
repz
ja
in
sub
mov
mov
cmp
cmpsb
enter
lret
xor
rolb
adc
scas
mov
push
sbb
icebp
iret
jle
into
in
sbb
test
xor
xchg
std
mov
jo
out
stos
into
dec
mov
inc
js
call
mov
add
inc
not
test
jmp
dec
xchg
dec
push
pusha
add
fwait
push
stos
xchg
insb
fdiv
or
push
mov
out
mov
jmp
mov
jmp
ret
lds
dec
push
cmp
dec
lret
sbb
cmpsb
outsb
decb
in
aam
out
jae
or
shrb
inc
rcll
sub
loopne
mov
call
jnp
mov
push
push
xlat
add
les
fistpll
lods
dec
scas
cmpsl
push
repz
das
mov
rorb
icebp
insb
arpl
jne
xchg
shll
xchg
xorb
subb
addr16
loopne,pn
adc
mov
cmp
inc
insb
mov
mov
movsb
lret
mov
push
cli
xor
inc
cmp
mov
adc
fwait
bound
cmp
sbb
jg
jo
movb
xchg
push
repnz
data16
lds
mov
add
and
sub
fldenv
das
outsl
dec
mov
fcmovb
jp
xor
mov
jno
pop
push
mov
psubb
jbe
xor
jle
ret
pusha
adc
mov
aam
and
mov
jmp
ds
iret
push
cmpb
xchg
sbb
mov
fmull
mov
adc
adc
mov
loopne
or
repz
sbb
test
or
loop
pop
sarb
pop
push
mov
out
inc
jle
add
jns
push
lea
xchg
adc
sbb
sub
inc
inc
mov
and
orb
fucompp
aad
pop
sbb
sbb
dec
add
and
pop
orl
push
mov
jns
sub
jne
cmpsl
adc
or
push
sbb
xor
mov
iret
ljmp
dec
cmc
pop
mov
lret
in
repnz
inc
sahf
test
enter
pushl
or
nop
sbb
daa
push
push
fildll
js
aad
and
popf
inc
call
mov
sbb
and
lods
jo
add
lea
js
movsl
and
mov
dec
or
inc
scas
out
aad
pusha
adc
sti
mov
call
fdivl
xorb
xchg
ds
pop
adc
xchg
sti
fidivl
mov
je
add
imulb
shlb
ljmp
movsl
jg
mov
pop
xchg
sbb
repnz
lods
div
lahf
pop
loop
inc
out
mov
test
jae
bound
adc
xorb
push
mov
and
push
out
mov
mov
cmp
jp
dec
ficoms
shl
fisttps
nop
nop
jle
push
xchg
cmp
xchg
loopne
dec
std
aad
mov
repnz
es
out
xchg
mov
dec
lods
jae
sub
ljmp
bound
popf
out
push
mov
mov
cmpl
push
inc
mov
ljmp
lahf
orb
in
cmp
lcall
or
mov
pop
test
xchg
roll
bound
fwait
cmp
jno
ds
mov
cmp
aaa
pop
test
lret
mov
add
jae
sub
out
popf
fucomp
es
lret
sbb
xchg
mov
mov
fldenv
jo
push
jnp
push
call
sub
sub
adc
popf
and
xor
aam
push
jae
cmp
incl
pop
arpl
or
mov
mov
add
test
dec
mov
jo
jo
xchg
adc
mov
add
insb
lods
push
xor
sbb
cmp
xor
inc
ss
cmp
pop
adc
sahf
inc
js
nop
dec
stc
push
fldenv
xchg
testl
int3
jno
mov
testl
scas
aad
add
sub
pusha
dec
mov
and
int3
gs
iret
add
cmpsl
sub
mov
enter
cmpsl
ret
popf
push
fdivs
pop
mov
lret
and
xor
pop
add
add
adc
mov
in
je
or
aad
cltd
fwait
je
sub
ss
outsb
pop
mov
scas
push
jmp
aaa
mov
orb
sub
add
cmp
into
lahf
mov
pop
dec
push
out
insb
cltd
add
loopne
data16
push
insb
ret
inc
mov
aaa
pop
cmp
push
xchg
cmpsl
push
pop
xor
aas
aaa
paddd
mov
bound
js
je
out
sbb
pop
push
or
mov
lock
adcb
leave
not
mov
xchg
fisttps
mov
stos
popf
cmpsl
add
jb
aam
jl
mov
int
xor
xor
jae,pn
inc
andb
xor
or
int
mov
jbe
test
jae
cmp
xchg
dec
negb
cltd
xchg
adc
xlat
mov
adcl
out
call
lds
jo
xlat
mov
jmp
lahf
add
int3
pushf
insl
sarl
stos
roll
or
mov
incl
xor
xchg
ljmp
and
cmc
xchg
cmp
popa
int
enter
mov
inc
cmpsb
cmp
js
pop
fadd
std
sahf
xchg
mov
test
ljmp
or
add
jae
pop
jns
jge
mov
fidivs
mov
inc
inc
lahf
pop
mov
jo
mov
mov
sbb
lcall
add
nop
test
dec
hlt
cmc
hlt
dec
pop
jnp
out
pop
popf
rcrb
adc
xchg
push
jnp
cli
xchg
gs
sbb
mov
mov
xchg
icebp
push
sub
fdivrp
sub
ss
je
leave
pop
xor
ljmp
push
mov
outsl
inc
pop
mov
inc
addr16
mov
mov
fbstp
pop
cs
jp
cwtl
xchg
subb
repz
scas
inc
cmpsl
mov
pop
push
xchg
inc
pop
std
test
pusha
pushf
xlat
sarb
and
rol
add
out
cmp
push
paddb
fisttpl
rcl
mov
ds
shlb
mov
sahf
mov
and
adc
ficoml
fwait
inc
aam
out
push
pushf
sahf
outsb
push
jae
dec
cs
or
iret
jnp
mov
mov
inc
stos
sbb
xchg
in
lret
fisubrl
mov
jmp
int
neg
loopne
sub
mov
xchg
push
jl
ret
loop
lea
mov
into
es
aam
popf
cmp
jne
arpl
loopne
cltd
out
jecxz
stos
cmp
lcall
inc
mov
mov
test
push
mov
jge
cmp
shlb
dec
mov
inc
outsb
fsubl
aad
cmp
jne
lea
data16
lods
dec
fsubr
inc
pop
cs
push
popf
cmp
imul
mov
cli
mov
mov
add
gs
xchg
in
xchg
rcl
jno
or
pop
pusha
fdivr
stc
sbb
clc
pop
mov
cmp
mov
sbb
mov
mov
jae
xor
cwtl
mov
in
fimuls
lcall
add
lods
or
loope
paddq
nop
bnd
push
lret
sub
xchg
std
cs
stos
mov
scas
pop
sub
stc
push
push
imul
fistl
cmp
les
mov
call
lahf
les
ja
xchg
inc
rcrb
lea
adc
dec
jg
in
xor
out
fnstsw
sbb
mov
sbb
cmp
shlb
es
cld
inc
add
cmp
sti
push
repnz
inc
ja
cltd
push
dec
cmp
in
popa
cld
std
xchg
lahf
jns
and
aad
pushf
sbb
fnstsw
push
push
sub
repnz
and
cmp
fs
dec
mov
xchg
dec
push
sbb
aam
pop
add
cs
aad
in
add
adc
lahf
gs
push
aam
mov
or
dec
arpl
repnz
or
push
mov
inc
scas
ret
test
lahf
lret
jmp
out
fnstenv
mov
mov
jle
dec
inc
cld
mov
mov
ds
inc
ja
mov
in
leave
mov
bound
inc
mov
xchg
add
ret
xor
mov
addr16
mov
hlt
xor
push
sbb
ficomps
loope
xor
and
adc
pop
cmp
push
pop
fcmove
push
cli
xchg
cmp
xchg
mov
outsb
popf
push
insb
sub
push
adc
push
xchg
jl
and
xchg
in
push
out
mov
xchg
pop
jne
or
addb
movsl
xchg
inc
mov
mov
xchg
jae
sbb
xor
lods
inc
lahf
sub
loopne
cmp
gs
push
aaa
fiadds
xor
pop
cmp
and
jl
cli
or
pusha
and
xchg
outsb
sub
jg,pt
xchg
and
cwtl
fs
mov
lret
mov
mov
test
shrb
leave
lret
mov
lahf
movsb
inc
std
cmp
mov
test
ds
fdivrl
out
pop
rcll
or
cmp
lcall
push
sub
and
add
jb
popf
jp
xor
push
xchg
js
mov
jl
scas
jno
sub
inc
dec
test
fwait
test
mov
adc
daa
jg
loope
das
push
sub
imul
push
shlb
inc
sbb
jmp
jnp
xchg
xchg
mov
je
roll
loope
add
sbb
ds
and
and
cmp
pop
sub
out
pop
mov
mov
arpl
xor
add
fdiv
int
pop
cmpsb
sub
push
jnp
push
sub
adc
push
movsb
out
pop
mov
or
mov
jmp
or
adc
and
xor
mov
movsl
into
out
in
pop
cmp
sti
lods
mov
aam
sbb
pop
cmpsb
cmp
mov
jo
adc
mov
dec
pop
adc
aaa
in
aas
cltd
cmc
movsb
mov
sbb
or
add
scas
ret
clc
cmpsb
ljmp
push
push
sub
scas
xchg
adc
shrb
sub
fdivrs
repz
xchg
mov
sbb
lret
mov
outsl
cmp
in
xchg
add
test
mov
mov
sbb
inc
dec
out
mov
lahf
inc
data16
nop
dec
xor
jb
jge
push
push
cmc
mov
aam
pop
cmpsb
lret
sbb
stos
xchg
or
stc
jp
out
fwait
cs
push
cld
sub
sub
add
lds
mov
int
aad
xchg
push
cs
jp
mov
loope
out
and
pop
adcl
leave
add
dec
inc
rclb
adc
fists
adc
sbb
adc
mov
inc
jno
dec
sar
in
add
dec
movlps
mov
lods
mov
test
jnp
pusha
cmpsl
scas
fsubs
out
ret
repz
sarb
dec
clc
xor
pop
add
jo
push
ficompl
adc
inc
xchg
pop
punpcklbw
lahf
or
jmp
data16
sub
nopl
mov
dec
inc
pop
icebp
cmpsb
fstp
fsubr
subl
hlt
mov
js
popa
int3
call
xor
inc
push
cmpsb
add
mov
repz
mov
mov
mov
loopne
cmpsb
enter
adc
into
cmp
pop
aad
or
es
mov
sbb
dec
jae
lods
sub
push
pushf
mov
mov
pop
pop
mov
mov
jecxz
mov
fidivrl
in
outsl
hlt
sub
fsubr
inc
imul
jl
adc
aaa
jnp
cwtl
push
cmp
pop
shr
xchg
adcl
adc
popf
daa
add
xchg
inc
pop
ljmp
movsl
in
in
fsubrs
mov
adc
sub
mov
lea
xchg
in
cwtl
int
xchg
pop
mov
pop
jg
adc
test
cmp
sarl
cmpsl
in
jmp
jbe
pop
rcr
xor
inc
dec
sti
sbb
pop
rorl
mov
and
sbb
mov
mov
xchg
stos
sub
icebp
hlt
jo
xchg
rorb
adc
xchg
imul
push
adc
jecxz
cmp
mov
movsb
addr16
pop
adc
and
cmp
adcl
push
hlt
pop
push
cmp
mov
jmp
out
pushf
sub
pusha
dec
mov
adc
or
ret
ds
adc
outsb
sahf
or
outsb
cmpsb
lret
inc
pop
fmuls
int3
negl
mov
add
mov
ret
jp
cmp
push
cli
sub
cwtl
sar
cmc
lds
hlt
mov
jns
idivb
dec
fildll
insl
mov
sbb
mov
cld
jecxz
or
andb
cmp
mov
jno
cmp
lret
mov
xor
inc
push
xchg
cmpsb
loopne
and
rorb
sbb
sbb
rcl
fdivrl
shll
and
mov
push
jnp
into
mov
shrb
out
cmp
inc
and
mov
pop
dec
and
sbb
sub
inc
dec
jl
xchg
or
inc
jecxz
imulb
addr16
jbe
jecxz
aam
hlt
pop
sub
ss
iret
sub
aam
scas
jle
fldt
enter
repnz
adc
sub
mov
mov
xchg
mov
inc
jmp
scas
dec
aaa
idivl
add
pushf
mov
addl
or
mov
ret
ss
in
xchg
cltd
imul
into
imul
and
int3
inc
push
mov
cmc
repnz
shr
adc
hlt
xchg
cld
sahf
stos
es
test
push
jg
clc
xchg
jmp
out
subb
shrb
add
xor
mov
ljmp
stos
and
loope
dec
pop
adc
in
cmp
repz
sub
sub
in
add
push
lret
enter
push
jmp
adc
mov
das
lcall
ljmp
lahf
or
mov
mov
xchg
or
jge
movsb
shr
lea
loopne,pn
cmp
pop
xchg
fstpt
out
mov
jne
inc
imul
xchg
push
nop
cwtl
dec
sub
insb
pop
adcl
addb
cld
add
inc
mov
mov
gs
lret
inc
sbb
fidivs
sti
and
imulb
jp
mov
xor
std
in
jnp
add
call
ss
subb
xchg
movsl
loopne
add
push
inc
mov
push
mov
and
js
inc
icebp
inc
mov
mov
xchg
lock
and
icebp
loop
and
int3
dec
add
adc
inc
xchg
xchg
jecxz
or
loopne
fldl
and
add
mov
push
jg
mov
xchg
lret
std
stos
sahf
xchg
movsb
jmp
and
push
adc
les
dec
mov
jmp
adc
out
movsl
sub
inc
pop
push
and
aaa
sbb
incl
or
xchg
les
jo
push
ljmp
in
imul
ds
test
jnp
push
scas
adc
mov
out
sub
cmp
xor
mov
or
cli
push
gs
pop
das
push
outsb
int3
cwtl
dec
ss
cmc
lret
andb
imul
adc
div
mov
xchg
or
in
dec
xor
xchg
jle
ret
mov
or
and
cwtl
jg
mov
add
or
in
cmpsb
or
notb
cmpsb
in
std
loop
jp
cmp
mov
jb
jmp
lret
xchg
test
push
xor
push
jbe
jbe
dec
loop
out
xchg
mulb
jecxz
xor
loopne
fbld
jo
fistl
jns
mov
movsb
faddl
out
pop
insl
cmp
ljmp
inc
cmp
jmp
cs
leave
inc
lds
in
inc
jle
mov
loopne
cmpsl
push
lret
stc
scas
ret
cmpl
add
mov
xor
mov
popa
and
inc
out
sub
jae
daa
jge
mov
adc
mov
ret
sbb
sahf
ficompl
mov
dec
xor
inc
cltd
repnz
jne
adc
mov
jge
xor
test
fst
jle
cmpsb
adc
mov
cmc
in
fnstenv
jo
push
mov
gs
data16
dec
stos
testb
push
test
pushf
dec
mov
inc
cmc
pop
imul
sbb
or
or
mov
mov
rcrb
ljmp
add
repz
ds
enter
lret
adc
insb
rol
fnstenv
pop
outsl
mov
fldl
inc
lds
or
int3
or
mov
pop
es
int
addr16
xchg
loop
xchg
push
adc
jmp
push
enter
and
arpl
mov
dec
xchg
add
aam
mov
inc
fimuls
or
lcall
ficoms
jbe
imull
mov
cs
inc
imul
add
cltd
or
inc
sub
adc
and
mov
mov
mov
xor
jbe
sbb
mov
pop
adcb
jb
sub
mov
jg
icebp
add
dec
mov
in
jns
loope
shlb
or
test
lcall
mov
push
outsl
insl
cmpsl
test
div
movsl
dec
jno
dec
fidivs
mov
xchg
pop
add
adc
xor
das
lret
pop
xor
nop
mov
fcmovnbe
adc
pop
push
xchg
inc
and
mov
lods
add
movsb
test
jg
mov
jb
sbb
push
in
jmp
lods
mov
in
mov
ja
dec
inc
stc
pslld
and
mov
and
xor
data16
in
fldcw
lds
cmp
push
pop
cmp
inc
shl
insl
xor
jl
loope
mov
sbbl
pop
push
mov
insb
ss
enter
sti
cmp
sub
mov
mov
lods
clc
sarl
shl
shl
iret
push
push
jmp
fnstsw
aas
and
pusha
arpl
int3
sub
fwait
mov
pop
lods
outsl
or
in
fsub
std
cli
cmp
mov
xor
mov
stos
mov
push
negl
sbb
in
push
xchg
add
enter
lret
lahf
movsl
ja
cmpsl
xchg
push
and
dec
pop
pop
imul
mov
pushf
js
mov
inc
fidivrl
adc
cmpsl
in
lret
xor
loop
repnz
daa
scas
inc
xor
or
mov
addr16
adc
add
bound
cvttps2pi
adc
mov
popf
into
xlat
dec
cmpsl
scas
cmpsl
mov
mov
js
cltd
es
iret
scas
adc
outsb
jo
outsl
adc
cmpsl
mov
xchg
cltd
push
dec
lods
or
add
xchg
sub
int
cld
popa
imul
pusha
outsl
cld
stos
dec
leave
mov
hlt
push
dec
xor
rcr
sub
inc
mov
fiaddl
arpl
xchg
sbb
test
mov
lret
xchg
add
das
movsl
pop
xor
add
bound
cmp
mov
or
gs
mov
mov
sahf
push
mov
pusha
adc
mov
fwait
js
or
call
mov
pop
xor
in
cmp
popf
add
mov
int3
popf
int3
xchg
xchg
lahf
xchg
insl
dec
or
pop
fcoms
fbld
imul
dec
into
mov
mov
sahf
cwtl
fwait
mov
test
mov
out
test
in
ja
out
es
or
ljmp
xchg
or
mov
test
in
xchg
shr
loope
je
inc
aam
adc
mov
enter
pop
out
test
aam
sub
sub
pop
mov
or
adc
pop
mov
mov
xor
in
xor
sub
cld
pop
pop
mov
stc
and
repnz
jbe
or
and
sub
lahf
inc
xor
popf
ljmp
test
sbb
inc
movsb
cmp
lretw
bound
mov
outsl
jns
std
repnz
xchg
inc
aad
mov
sub
and
dec
jnp
pop
sbb
aam
ja
ret
jge
mov
lcall
pop
ret
xchg
sub
shrb
push
inc
cmp
arpl
sbb
pop
sbb
dec
in
subps
in
in
test
pop
adc
mov
adc
jl
call
movsb
decl
orl
adc
cmp
insl
and
sbb
inc
or
fimuls
cli
in
mov
jmp
sub
jae
dec
shrb
pop
sub
sub
jle
xor
fidivrs
add
adc
movsb
dec
xor
xchg
xchg
jecxz
aam
test
add
lret
add
sti
negb
push
popf
xchg
jecxz
push
into
adc
xor
jbe
jns
push
and
test
xchg
call
in
push
aaa
hlt
dec
xor
cmp
pop
sub
and
mov
lret
pop
cmpsl
bound
mov
add
in
cli
insl
iret
imul
out
push
sbb
push
mov
and
shlb
cmovns
aad
idivb
xlat
outsl
cmpsl
lret
xor
push
orl
dec
adc
sub
inc
cmpsb
xchg
adcl
imul
popf
std
ret
and
sub
cmp
cwtl
shl
fwait
or
mov
js
mov
push
sub
stc
int3
dec
imul
mov
fsts
inc
scas
insl
add
jae
jno
adc
icebp
aad
pusha
push
xlat
sbbb
push
sub
test
add
mov
inc
movsb
sbb
xchg
test
xchg
xchg
std
and
pusha
lret
pushl
into
mov
pop
add
dec
pxor
les
negb
fstpl
or
mov
mov
cld
add
push
jno
cs
pop
push
sub
movsl
pop
add
sbb
pop
xor
lds
movsl
pop
xor
add
icebp
adc
std
es
sbb
cmp
mov
dec
sbb
aas
xor
stos
xchg
adc
or
in
inc
into
cmp
dec
pop
jmp
mov
sti
xrelease
pop
ljmp
add
cmpsl
jo
imul
out
inc
rcrb
and
mov
push
ss
jle
int
imul
and
fwait
addr16
rclb
roll
movsl
jns
xorl
xlat
inc
lahf
xor
cmpsb
xchg
jns
in
xlat
or
lahf
in
mov
and
ljmp
fdivs
mov
pop
fwait
ljmp
aaa
cli
aad
mov
leave
xchg
inc
les
pop
pop
sbb
ftst
decb
xchg
jno
out
test
hlt
add
mov
test
or
adc
fsubl
xlat
stos
jne
stc
cmc
movsl
loopne
in
mov
xchg
fsubrs
cmp
stos
add
lea
insl
addr16
repz
mov
push
in
mov
jecxz
dec
fildl
cmpsb
inc
ret
cmc
in
push
add
in
int3
add
add
shlb
push
cmp
push
mov
lret
sub
movsb
inc
call
and
cmp
mov
repz
mov
push
movsb
cmpsb
and
sub
es
push
arpl
and
mov
mov
or
add
ret
xor
fcmovb
out
mov
add
adc
adc
js
sub
sbb
add
icebp
ja
sub
gs
fidivs
js
gs
push
negb
dec
and
mov
and
dec
in
mov
mov
cs
adc
insb
inc
sbb
inc
pop
push
jecxz
push
mov
push
fsubrl
lcall
mov
loope
jle
cli
jae
cs
and
xor
dec
stos
jge
pusha
out
arpl
imul
mov
sbb
outsl
loopne
jle
shll
add
std
xchg
push
int3
pop
add
aad
dec
das
sbb
push
fisubrl
cmc
js
sti
push
adc
ds
mov
bound
inc
test
push
push
call
xchg
jge
stos
test
rorb
push
jne
imul
outsb
movlps
addr16
mov
ja
aad
enter
cmp
lds
adc
daa
mov
xchg
inc
xor
outsb
test
add
lahf
mov
arpl
jne
sub
mov
cs
xor
ss
fmull
negl
add
call
inc
pop
and
imul
dec
jge
ss
je
test
add
pop
push
rcr
sub
sbbb
sbb
mov
mov
push
and
jno
add
and
dec
lods
out
or
mov
mov
push
jo
enter
dec
inc
sarb
cmovno
rcrl
in
lea
gs
int3
loop
test
mov
mov
and
pop
jge
in
push
mov
add
pop
rcrb
pop
lock
or
xchg
push
sub
push
xchg
cmpsl
dec
sahf
or
enter
js
insb
dec
mov
and
cmp
add
mov
jmp
and
into
pop
test
push
dec
outsw
xchg
jecxz
call
xchg
stc
xor
or
incl
aam
or
xchg
push
js
lds
mov
gs
test
inc
sub
pop
xor
loopne
xchg
jbe
fwait
jmp
int3
dec
icebp
adc
or
fwait
stos
mov
incb
adc
mov
mov
add
push
data16
sub
test
aas
data16
fistps
lea
mov
pop
xor
icebp
add
adc
fwait
and
mov
loopne
fs
pusha
mov
aad
mov
icebp
cmp
shlb
adc
jge
pushf
out
sahf
popa
jp
aaa
mov
or
or
dec
divb
imull
push
push
mov
add
pop
sub
mov
adc
arpl
push
imul
je
pop
fimuls
push
nop
sbb
dec
jo
daa
loopne
into
pop
and
push
fsubrl
cmp
lretw
inc
adc
mov
ss
arpl
push
incb
xlat
mov
ja
shll
leave
mov
mov
sbb
je
cmp
inc
xchg
icebp
mov
pop
or
outsl
push
mov
sub
dec
dec
test
sub
xor
push
pop
push
nop
mov
cmp
pop
sbb
subb
enter
out
sub
mov
adc
and
lahf
shlb
mov
xor
aaa
and
outsl
mov
in
jb
outsb
push
sub
mov
shl
aad
mov
xor
dec
pop
jl
jecxz
adc
fs
pushf
daa
xlat
out
rcrl
rcl
jmp
pop
inc
cs
outsl
cld
fwait
adc
aam
and
int
mov
je
inc
lret
add
jle
inc
leave
cmpl
ficompl
stc
fildl
jbe
mov
sbb
xchg
lret
xchg
test
mov
and
andl
adc
daa
sbb
and
rcll
xor
xor
fisubrl
movsb
lahf
cwtl
daa
scas
lcall
out
push
and
jno
movl
push
mov
push
inc
xor
adc
xchg
gs
loope
push
imul
or
and
adc
adc
add
push
lcall
out
or
nop
imull
testb
push
mov
movsl
shlb
lea
aas
xchg
stos
bound
jge
insb
sbb
rcll
xor
fs
loopne
mov
imul
shlb
xchg
mov
push
fdiv
js
loop
adc
pop
jae
imul
loope
es
sbb
pop
in
jno
repz
cmpsl
mov
movsl
push
mov
xchg
repnz
xchg
inc
xor
fisttps
cmc
lahf
xchg
dec
jge
in
subb
pop
out
sub
movsl
or
imul
pop
jae
adc
push
mov
or
mov
mov
insl
sub
addr16
cmp
jge
test
sahf
cmp
out
roll
loopne
jbe
xchg
cmp
data16
inc
loop
and
inc
js
mov
shll
fsubr
pop
test
clc
add
xchg
cmp
sub
push
in
mov
ds
sbb
sub
lahf
xchg
test
loope
je
dec
jnp
cltd
cwtl
popa
leave
adc
and
rorl
frstor
and
inc
sti
shl
call
clc
lock
subl
imul
popa
jmp
jo
loop
movsl
xor
push
mov
into
gs
gs
shll
xor
popa
mov
cmpsb
inc
call
ds
pushf
arpl
shlb
inc
out
mov
push
mov
add
stos
cmp
inc
mov
pop
add
ljmp
mov
cmpsl
aad
lcall
cmp
add
popa
fdiv
sahf
pusha
adc
xor
dec
cli
mov
cmpl
push
pop
cli
push
push
insb
sbb
mov
out
js
testb
pop
das
mov
nop
js
lods
scas
cmp
fsubrs
push
pop
add
in
mov
sti
xchg
sub
dec
xchg
mov
sbb
pop
aaa
dec
mov
fsubrp
xorb
mov
push
sbb
in
arpl
pop
push
sahf
cmp
out
dec
inc
ficomps
aas
inc
mov
and
loope
xchg
adc
in
scas
inc
pop
pushf
mov
jne
repz
imull
sbb
and
sbb
imul
aam
sbb
add
mov
sbbl
mov
mov
aad
in
sbb
es
inc
fldl
xchg
inc
push
and
insb
repz
scas
push
push
lret
jp
scas
xchg
loopne
sub
jmp
xlat
push
push
dec
mov
sub
or
out
mov
pop
push
push
shll
aas
and
adc
cmpb
mov
aas
sub
hlt
scas
test
or
rorl
dec
inc
mov
es
cmpsl
out
mov
pop
xchg
mov
imul
mov
je
popf
inc
mov
popa
cli
pushf
add
leave
testl
lods
popa
inc
cld
inc
and
in
outsb
dec
leave
dec
cmp
mov
mov
inc
mov
xor
mov
repnz
xor
cmp
jae
jno
in
jae
popa
adc
dec
lret
daa
popa
movsb
sbb
jns
sub
mov
mov
or
jg
fstpl
xor
add
xchg
rorb
push
cmpsb
add
mov
sub
daa
shrb
push
dec
jp
rcr
sub
sbb
mov
jbe
std
sub
add
push
insl
mov
and
push
and
daa
mov
sti
je
xchg
das
orb
les
outsl
std
sub
mov
ficoms
inc
scas
flds
push
push
jns
dec
pop
outsb
push
aaa
inc
sahf
xchg
pop
je
xchg
cld
rorl
inc
imul
mov
sbb
popf
mov
loopne
pusha
repz
in
pop
out
pop
mov
xor
add
mov
ds
sbb
xchg
mov
adc
pusha
popa
push
or
mov
jo
test
out
pop
or
mov
out
sti
or
aad
loopne
jae
push
nop
dec
adc
add
fwait
in
push
lods
movsb
in
and
inc
push
iret
dec
pushf
les
pushf
fildll
pop
ret
cmp
mov
pop
movsl
movsb
mov
fisttps
sub
jno
idivl
rolb
cld
test
or
adc
cmc
pop
lcall
push
push
sub
test
sbb
fildl
adc
hlt
idivb
jmp
jg
mov
lret
jl
inc
add
push
inc
mov
arpl
jne
and
mov
ret
and
mov
inc
pop
shl
dec
adc
in
dec
test
mov
fdivrl
mov
ds
loopne
add
imul
inc
sti
cwtl
jb
outsb
ret
or
jb
arpl
push
imul
cmpsl
arpl
movsl
mov
in
dec
ljmp
outsb
xchg
cmc
out
or
add
pop
fisubs
inc
xor
test
lea
movsb
xchg
jae
es
sub
push
mull
dec
in
dec
and
jp
fcompl
jp
cmp
jns
scas
sbb
stc
das
mov
pusha
adcl
nop
lods
lea
cmp
or
mov
inc
test
ret
test
inc
in
pop
clc
mov
mov
inc
sub
mov
add
dec
pusha
shlb
test
aas
pop
dec
sub
jo
ret
adc
mov
sub
mov
out
das
ds
inc
push
push
add
loop
jmp
jle
mov
or
icebp
inc
add
mov
sti
ret
jnp
lahf
push
cld
out
pop
jno
sub
and
add
or
jmp
movsb
push
ljmp
push
imul
add
out
outsl
add
ss
and
xor
push
add
fistpl
sbb
jle
imul
pop
push
loop
cld
mov
push
pop
test
out
push
icebp
into
pop
cld
pop
das
sbb
subl
les
mov
jb
add
mov
loopne
lahf
cmp
popf
inc
cmp
lcall
mov
loopne
hlt
sub
sahf
inc
dec
jae
test
int
pop
gs
cwtl
mov
fs
inc
lret
pop
push
push
aam
mov
mov
xor
les
insl
dec
pop
pop
sub
test
mov
push
jns
mov
or
sub
mov
mov
pop
xchg
and
mov
test
jl
mov
rorb
xor
inc
mov
jne
mov
sbb
bnd
jmp
call
fisubrl
aam
call
pop
into
insb
negl
loopne
pop
pop
add
rorl
clc
fld1
imul
rcrl
pop
mov
adc
frstor
inc
aaa
pop
repnz
notl
scas
nop
daa
sbb
jecxz
popf
arpl
push
loope
dec
xchg
jl
mov
push
and
sub
lds
repnz
movsl
push
dec
sti
aam
in
xchg
iret
sbb
pop
int3
loop
dec
and
clc
bound
ss
gs
jecxz
popl
bound
lock
sarb
out
jae
sbb
cmc
add
lds
jae
or
test
repz
mov
sub
jp
fidivl
cmc
stos
mov
arpl
sub
mov
mov
mov
and
sbb
rol
adc
add
xchg
sbb
pop
lret
and
test
adc
jecxz
push
push
fnstenv
mov
ja
push
rolb
dec
pop
mov
int
push
lea
inc
mov
xlat
lods
fstl
xor
inc
inc
in
roll
and
ret
jnp
xlat
lret
push
mov
inc
aad
mov
xchg
fistps
jp
cmp
lea
inc
mov
pop
pop
or
and
out
mov
in
mov
and
add
sarb
mov
lods
imul
jle
dec
mov
lea
sbbl
adc
sti
dec
fcomps
jnp
imul
mov
mov
lock
sub
rol
add
and
imul
pop
out
xchg
rolb
into
cmpsl
sbb
cmp
repnz
cs
dec
jne
jns
push
lea
in
cmp
cs
mov
cmp
dec
xor
xchg
lret
pop
mov
or
mov
push
xchg
add
das
sub
inc
hlt
arpl
lcall
mov
data16
sahf
adc
dec
in
dec
jns
push
push
dec
repnz
add
xlat
pop
adc
adc
imul
outsl
mov
push
sbb
push
sub
in
and
into
popf
jmp
testl
push
fistl
aad
cmc
xlat
xlat
lods
test
xchg
adcl
add
lret
xchg
and
ljmp
sub
out
xor
shll
or
js
xchg
fwait
subb
add
sub
cli
push
mov
lds
imull
in
push
ror
fldt
repz
lahf
cli
cs
or
sbbl
and
mov
cwtl
inc
pop
das
je
and
sbb
mov
movsb
sbb
sbb
pop
mov
jp
nop
push
and
sub
je
cld
and
scas
push
lds
sub
mov
xchg
leave
dec
hlt
imul
mov
inc
inc
stos
daa
or
xor
cltd
loopne
rcll
xor
adc
test
jno
jbe
pop
outsb
adc
shl
enter
push
jae
cmp
mov
lcall
pop
mov
stos
sbb
popa
cmp
sub
lcall
sub
les
ljmp
pop
push
add
adc
test
mov
dec
ret
lcall
jae
cwtl
sbb
mov
ret
xchg
loope
je
fisubs
pop
xor
aas
adc
pop
mov
xorl
dec
insb
adc
movsl
dec
stos
lret
and
insb
adc
xor
in
cmp
sub
subb
mov
stos
push
sbb
ja
jb
pop
jle
inc
pop
jg
out
jmp
out
inc
add
lcall
pop
mov
push
out
and
roll
and
add
icebp
jecxz
mov
jg
mov
lea
loop
aaa
inc
mov
adc
cmp
dec
inc
test
add
ret
test
fbstp
call
gs
mov
or
sahf
xor
xor
sub
lahf
out
jge
cmp
cmp
jle
cmp
pop
lods
sahf
xor
mov
int3
or
push
in
cmp
fwait
cmpsl
lds
mov
pop
jle
ss
sbb
les
mov
push
dec
lods
ja
and
push
rol
jns
sbb
sti
jbe
hlt
xchg
push
stos
mov
fdivl
loopne
pusha
movsb
push
and
adc
pop
add
inc
test
xor
mov
add
ret
leave
repz
cli
add
jge
sbb
add
pop
add
sub
mov
and
add
insl
andl
inc
jecxz
decb
mov
sti
mov
xor
dec
jp
push
cld
and
loop
push
stos
mov
nop
adc
mov
jbe
mov
test
or
xlat
cmp
incb
cli
pop
fistl
out
pop
and
add
icebp
mov
jl
jno
lock
sbb
sub
lcall
cli
arpl
movsl
fisubrl
stos
in
inc
mov
jbe
lock
std
js
lea
es
mov
inc
xor
lods
popa
mull
jge
cmp
and
pusha
jb
xor
mov
es
sub
call
mov
enter
addr16
jecxz
mov
fdivrs
mulb
or
mov
gs
mov
or
mov
mov
loope,pt
push
call
sbb
or
lds
in
xchg
daa
les
stos
ljmp
mov
add
dec
ss
sub
std
sbb
push
ja
les
and
lods
mov
add
loopne
pushf
jmp
fneni(8087
xchg
ficompl
popf
fs
and
ds
xlat
sub
mov
lods
into
sarb
stc
xor
dec
shl
cmc
jp
mov
pinsrw
gs
sub
aaa
mov
mov
or
cltd
jecxz
cmp
call
dec
cmp
stos
das
xchg
enter
mov
cs
cmc
push
jo
pop
outsb
pushf
xor
int3
mov
and
mov
test
jnp
pushf
pop
sub
xchg
fwait
mov
cmp
add
inc
inc
sbb
pusha
adc
mov
aas
mov
mov
std
test
pop
movsl
outsl
cmp
xor
inc
sub
lock
push
sub
mov
xor
je
jmp
sbb
adc
movsl
mov
add
sub
adc
cwtl
call
or
stos
shll
lods
ss
inc
push
idivb
ret
jmp
mov
clc
mov
jmp
dec
movsb
sbb
stos
movsb
dec
hlt
fsubl
mov
cmpsl
mov
dec
sub
xchg
adc
pop
add
mov
sbb
int3
es
lahf
xchg
cmp
inc
scas
call
nop
stc
iret
aaa
push
push
inc
sahf
push
push
fucom
mov
mov
icebp
ds
cwtl
in
test
addr16
mov
xchg
cmp
inc
jbe
mov
add
xchg
enter
inc
sbb
out
mov
fcoms
mov
xor
pop
cmp
repnz
je
jb
and
add
div
xchg
loopne
nop
shl
lret
xlat
fcoml
mov
jmp
push
pop
lea
sbb
imul
mov
ss
xor
mov
stos
ret
mov
or
xchg
cld
sbb
je
jle
movb
ss
xor
stos
mov
gs
jb
lret
insb
jmp
lahf
mov
movsb
popa
mov
sahf
sbb
mov
fcmovnbe
or
movsl
mov
ljmp
xor
add
push
imul
xor
pop
outsl
dec
mov
mov
fidivrs
lea
and
lds
mov
scas
push
ffreep
sub
test
shll
jno
andb
out
int
pop
rol
stc
imul
mov
das
adc
xor
les
jae
add
ja
sub
in
flds
and
mov
icebp
jo
adc
xor
lcall
xchg
jo
loope
dec
cmp
push
push
xchg
sub
shrl
jecxz
mov
pop
repz
ss
sti
xchg
cmp
sbb
or
sub
sub
decl
mov
push
cmc
call
test
mov
xchg
enter
leave
int3
cmc
test
aam
mov
les
jmp
roll
fiaddl
push
idivb
xchg
bound
cmp
outsl
push
cmpsl
push
pop
imul
jne
mov
in
ss
sub
loopne
and
fwait
jmp
adc
shr
psubusw
jo
cmc
out
fimuls
lea
mov
inc
ret
mov
and
in
pop
in
sbb
pop
adc
ret
jge
and
mov
dec
dec
pusha
xchg
and
fs
adc
mov
push
nop
stos
inc
scas
aaa
bswap
fnstenv
mov
cmc
and
call
adcb
daa
mov
aad
add
inc
loope
xchg
adc
insl
xabort
pop
pop
cmpsb
xchg
pop
enter
xor
jae
jg
nop
call
les
call
shlb
ljmp
jnp
std
lret
push
pop
sub
sub
pop
pop
cmp
or
scas
imulb
js
cmp
shll
xchg
cwtl
mov
sbb
dec
mov
or
aaa
xchg
push
hlt
iret
jns
imul
or
or
daa
es
cmpsl
mov
insb
sbb
fiadds
sbb
mov
cmpsl
dec
xor
leave
gs
push
xor
decb
push
stc
add
dec
out
fdiv
sub
movsl
mov
mov
sbb
lds
mov
push
mov
push
aas
push
icebp
xchg
sbb
stc
sbb
adc
mov
pop
adc
cmp
inc
roll
movsl
ja
in
dec
sub
xchg
sar
mov
aas
dec
inc
inc
adc
imul
inc
mov
xchg
mov
jmp
and
lea
dec
inc
pop
pop
sub
pusha
push
mov
xchg
pop
pop
movsb
sbb
cmp
dec
popa
xor
aam
and
pop
sub
mov
adc
cmp
imul
cmp
mov
nop
fucomi
inc
push
into
mov
jle
xor
ds
cltd
fwait
mov
xor
int3
pop
aad
adc
int3
outsl
mov
ljmp
std
mov
cmp
mov
and
pusha
dec
hlt
fsubrl
lret
sub
shll
movsb
mov
test
push
push
mov
movsb
frstor
cmp
insl
pop
into
mov
call
mov
pop
clc
daa
cmpsb
add
aad
popf
inc
loopne
cmp
add
mov
insw
push
add
or
xchg
ret
dec
sub
and
nop
mov
jp
repnz
dec
push
mov
sub
cmp
shl
gs
pushf
out
jmp
inc
adc
aam
mov
push
into
iret
insb
clc
imul
sarb
jbe
rorb
sar
shll
iret
xor
mov
xchg
inc
fldl
cmp
ljmp
push
fcomip
leave
insl
push
rcrl
jbe
push
adc
mull
cmp
xor
mov
cmp
add
xchg
jecxz
fstpt
push
sub
insb
jecxz
mov
push
sbb
pop
enter
and
sti
dec
xchg
es
pop
orb
xchg
jmp
push
aad
aas
rorb
icebp
lods
fisubl
dec
ret
orb
cld
add
inc
sub
push
sub
lock
and
movb
ds
pop
aas
test
leave
or
inc
fmuls
xor
xor
jecxz
push
mov
inc
pop
negl
or
inc
xchg
jbe
mov
pop
ds
xchg
in
sub
imul
rcrb
mov
incb
in
push
jns
stos
xchg
ret
jnp
pop
ja
arpl
jl
dec
cli
std
add
int3
jb
outsl
mov
aaa
mov
adc
mov
sub
call
dec
pop
xor
out
js
adc
aam
out
enter
xchg
pop
jecxz
ljmp
sbb
xor
out
pushl
out
dec
rcrl
nop
sub
test
mov
mov
adc
sub
jne
outsb
popa
notl
push
in
das
dec
add
in
jo
cld
movsl
or
addr16
push
or
and
push
es
frstor
mov
sub
test
push
mov
scas
fs
in
lods
test
sub
dec
ja
mov
nop
dec
outsb
daa
out
cmp
rcrl
scas
hlt
movsb
mov
inc
rclb
mov
je
and
adc
cmc
lods
movsb
repz
pushf
mov
sub
repz
adc
xlat
ljmp
fstp
xchg
mov
rcrl
lahf
pusha
leave
inc
es
shlb
lods
shll
in
mov
lcall
cltd
andb
and
sar
insb
shr
outsb
sbb
lahf
jl
xor
push
in
pop
stc
nop
cltd
mov
mov
sub
xlat
or
push
push
test
or
movsl
je
mov
or
mov
sbb
shll
mov
inc
jge
fnstenv
mov
int
scas
mov
xchg
addl
bound
popl
xor
xor
es
or
dec
jne
arpl
add
aaa
sbb
js
jl
cmp
sbb
stos
lds
adc
adc
and
fs
xchg
lods
dec
sahf
clc
add
js
mov
add
lcall
daa
pop
pop
push
add
xchg
push
outsb
dec
sbb
sahf
mov
movsl
mov
pop
inc
mov
xorb
mov
cmpsl
add
dec
and
cmc
arpl
adc
jno
aam
das
data16
pop
js
adc
jl
call
sbb
iret
sub
dec
in
mov
shlb
xchg
or
sbb
mov
fucomi
arpl
les
adc
sub
cmp
mov
fdivl
aaa
adc
test
sub
in
xchg
js
mov
int3
imul
ret
adc
or
jb
push
xor
add
mov
mov
mov
hlt
or
adc
fisubrs
sbb
cmp
xor
sub
jo
insb
dec
or
ror
sbb
pushf
mov
lea
push
and
or
repz
shr
jno
pop
dec
mov
sbb
sti
fwait
ds
push
popa
imul
pavgw
movsl
cmc
stos
push
add
call
outsb
xchg
aaa
sub
sbb
roll
in
arpl
btr
or
popa
xchg
hlt
sbb
rcll
stc
mov
idivl
cmp
lahf
xlat
xor
fs
cmpsb
aas
aas
cmp
enter
ret
lods
adc
push
sar
les
shlb
aad
or
add
jb
and
jae
sbb
jmp
or
xchg
es
xchg
add
xchg
jge
mov
jo
lcall
xchg
cltd
mov
clc
cmp
out
push
xor
mov
and
mov
ret
mov
pop
aaa
push
fadd
lock
mull
shlb
leave
push
in
push
adc
fs
xor
dec
test
or
and
pop
lret
cmp
pop
xchg
repz
stc
sub
stos
and
cmc
jmp
jmp
mov
push
jge
lock
popf
sbb
out
push
lret
xchg
sbb
lret
push
mov
jne
gs
mov
fidivl
fdivl
int
sub
lock
in
cmp
and
jecxz
not
and
fcoml
or
clc
push
or
enter
inc
dec
xchg
pop
int3
push
test
out
push
inc
sti
scas
lret
loopne
ds
insl
ja
sbb
or
pop
out
and
cmp
and
and
cmp
fstpt
xor
ror
je
cmp
inc
adcb
ljmp
mov
adc
and
std
sbb
testb
mov
sbb
sub
pushf
xlat
push
sub
outsb
dec
lea
loope
rorb
sub
adc
pop
dec
pusha
pop
call
mov
aas
mov
adc
push
bound
cld
push
sub
fs
pop
xor
stos
mov
mov
cmpl
idivb
jl
add
jnp
mov
out
cmp
cmc
popf
mov
subl
inc
mov
pop
scas
sbb
sub
orl
mov
rorb
leave
cwtl
lret
add
mov
mov
cmc
movsb
data16
mov
mov
jb
sub
add
bound
sub
jbe
xor
sub
outsl
cs
rcl
pop
sbb
pop
lock
std
and
or
hlt
or
imul
sub
inc
sbb
shll
sarl
fstps
aam
mov
fdivs
adc
lret
dec
inc
pop
adcb
push
std
push
sar
loopne
mov
and
mov
test
mov
stos
frstor
mov
mov
lcall
jp
sbb
lods
scas
push
mov
repnz
pop
mov
orl
dec
rcl
dec
mov
xor
xor
or
xor
xchg
pop
sti
dec
aad
pushf
js
test
or
in
shlb
lods
cmc
jg
xchg
fs
mov
xchg
mov
cmc
and
cmp
jne
dec
push
jg
jp
add
arpl
xchg
pop
dec
mov
lods
cmp
and
hlt
test
xchg
scas
lret
in
xchg
out
pop
sahf
cmp
cmpsl
jne
cld
xchg
test
sbb
add
sarl
aad
imul
outsb
es
mov
sbb
mov
mov
lods
push
mov
test
adc
aad
rol
jl
dec
roll
gs
fcoms
cmp
out
mov
int3
sbb
stos
xor
out
sub
outsb
test
pop
xor
fists
xchg
js
mov
movsl
mov
hlt
out
xor
pop
add
sub
and
sbb
sub
adc
sbb
dec
adc
xor
jnp
pop
or
mov
mov
fnstsw
inc
divl
mov
dec
add
mov
pop
dec
cmp
scas
pop
sbb
sbb
js
push
arpl
xchg
mov
lods
ja
mov
cmp
xor
stos
mov
popa
xlat
stos
cmp
ficomps
push
pop
fidivl
gs
add
cmp
mov
inc
mov
pop
jecxz
mov
dec
add
mov
movsl
aam
jle
ss
jecxz
sbb
jno
push
out
mov
nop
mov
cmp
movsl
jmp
adc
imul
fiaddl
sbb
into
std
mov
test
xchg
mov
sbb
dec
mov
jle
loop
xor
push
jl
xor
mov
cmpb
push
gs
neg
or
xchg
pop
lock
cmp
xor
mov
and
mov
scas
pop
outsl
cmp
lods
inc
lret
cmp
stos
es
out
or
cmc
out
lods
out
and
cmp
fistpll
xor
loope
mov
iret
dec
jbe
jb
lea
loopne
test
mov
xor
in
inc
test
jno
out
sbb
dec
jbe
call
pop
jg
lret
out
bound
mov
fs
jmp
sbb
adc
lret
xchg
das
xlat
sbb
ljmp
xchg
mov
sub
and
stos
or
in
test
enter
mov
int
mov
xchg
lcall
cmp
mov
pop
nop
or
xchg
adc
mov
leave
jp
fsubs
lahf
es
movl
shl
and
dec
movsb
pop
movsl
sbb
das
dec
push
pop
pusha
xor
std
sub
pop
sbb
mov
dec
dec
movsl
sbb
xor
cmp
dec
cmc
lods
sub
lea
push
or
out
push
enter
mov
shl
pop
xor
dec
mov
psrad
xchg
scas
fsts
test
add
cmp
or
cld
adc
ljmp
cmp
jle
repnz
notl
imul
or
or
and
push
xlat
daa
ja
jmp
mov
cmpsb
mov
mov
pop
int3
and
mov
notl
xchg
jp
lahf
nop
loop
jnp
mov
mov
ljmp
cmp
and
insl
pop
xorl
mov
pop
jns
out
mov
xor
in
imul
mov
pop
sbb
int3
adc
add
stc
cmpsl
stc
mov
mov
fiaddl
aas
out
push
mov
gs
adc
push
shl
xchg
int
es
mov
outsb
xchg
mov
add
lret
jmp
inc
mov
insb
fs
pop
sub
xor
movsb
adc
or
lret
imul
sbb
icebp
adc
int
xor
lods
xchg
cmp
jo
sti
in
or
pop
mov
std
out
in
mov
pusha
insl
cmpsl
mov
call
xor
hlt
inc
add
or
ds
sub
inc
push
cmp
test
insb
sbb
stos
sbb
and
ljmp
cld
sub
jb
into
sahf
sbb
popa
sub
and
pop
mov
adc
pop
jns
sahf
mov
cmp
push
loope
popa
sbb
jle
sub
test
or
push
sti
rcl
orl
mov
sbb
ds
cmp
jle
mov
insl
mov
movsl
adc
mov
pop
nop
imul
adcb
mov
arpl
imul
and
int
scas
lods
or
sub
in
dec
add
cwtl
pop
mov
add
adc
cmc
in
sub
enter
cld
sarl
ljmp
fldt
aaa
jge
mov
mov
mov
or
cmp
loop
cmpsl
lret
roll
mov
dec
fs
mov
adc
cli
scas
mov
sbb
js
aad
cmp
push
adc
adc
pusha
popf
inc
jae
rolb
rolb
pop
jg
shl
add
sbb
pushf
mov
fwait
test
sahf
cmp
jo
fdiv
mov
stc
push
mov
dec
push
push
add
insl
adc
out
test
adc
mov
scas
and
inc
icebp
push
add
xchg
pushf
outsl
nop
cmp
mov
lea
in
in
icebp
push
incl
pop
mov
jnp
fs
xchg
lret
cmp
push
int
push
cs
jnp
flds
loope
mov
xchg
fistl
stos
cmp
xchg
pop
xor
sbb
push
mov
push
fsubp
sub
jmp
movsb
in
pop
lods
dec
fnstsw
inc
pop
std
mov
pop
in
jecxz
lret
rolb
sti
add
and
aad
ret
sub
jbe
and
inc
adc
imul
cltd
cs
lret
push
and
sub
sbb
fdivs
enter
loopne
add
cmpsl
div
pop
movsb
fbstp
and
mov
insl
les
popa
out
insb
aad
xor
stos
imul
insl
rolb
in
into
xchg
mov
inc
add
test
fistpl
jne
xchg
dec
xor
pop
jle
nop
std
cli
in
and
push
ret
sbbb
cmp
push
cwtl
pop
daa
sbb
cmp
pop
cmp
ss
popf
xor
sbb
daa
and
icebp
sub
rolb
mov
fs
mov
loop
xor
addl
sub
ret
in
add
pop
icebp
xor
fcomps
push
addl
xchg
xchg
mov
cmp
loopne
ljmp
adc
sub
xor
jg
loope
push
fcoml
loop
popf
filds
cs
sarl
xor
int3
popa
xor
mov
data16
xor
jbe
push
ss
pop
push
add
sbb
add
inc
fbld
ljmp
xor
test
int3
cmp
fwait
push
xchg
lds
sbb
test
inc
cli
cmp
imul
or
adc
sbb
and
daa
in
inc
call
fneni(8087
jp
mov
xor
mov
aam
xchg
movsb
stos
lock
ss
push
pop
jbe
pop
rdmsr
push
or
xchg
fisttps
adc
test
push
jne
sbb
repnz
cmc
dec
push
aas
pop
jmp
jp
lret
sub
mov
leave
lahf
mov
mov
or
pop
jle
add
test
pop
int3
mov
jecxz
cmpsb
xlat
stc
xchg
test
xor
loope
mov
int3
push
idivl
mov
in
jecxz
sti
gs
fwait
insb
out
or
repz
jle
std
movsl
push
or
cmp
ja
or
mov
int
lahf
dec
fadds
repnz
cmpsb
cmp
push
cmp
and
repnz
cmp
pop
dec
or
or
jp
mov
aaa
jecxz
jle
sub
add
mov
test
lock
xchg
in
test
sub
and
xor
insl
add
cmp
loop
and
scas
mov
mov
jl
es
leave
into
je
mov
imulb
test
add
enter
or
xor
popf
mov
xor
js
lds
scas
es
push
mov
pop
mov
adc
push
gs
and
ds
js
sub
mov
fisttpl
jge
add
repz
inc
shlb
push
push
call
enter
je
roll
push
out
add
test
test
push
js
std
out
xor
loope
mov
iretw
fwait
popa
lret
mov
xchg
mov
push
mov
outsb
push
sar
sti
and
lea
sbb
hlt
int3
arpl
push
sub
inc
jg
xor
lea
cmpsl
aaa
lock
stos
aam
les
es
cmp
push
mov
sub
dec
and
ljmpw
jb
jl
stos
xor
add
imul
iret
inc
mov
sti
addr16
arpl
pop
fwait
jnp
mov
pop
push
push
mov
cs
dec
push
hlt
jge
sbb
negb
push
nop
or
add
xor
jne
stos
push
sub
xor
movsb
inc
mov
call
adc
inc
dec
push
sbbb
mov
das
pop
std
push
add
xcrypt-cbc
cmpsl
xchg
fcoml
icebp
mov
pop
fs
cmpsl
shrl
cmp
xchg
xchg
sbb
inc
adc
pop
mov
outsb
mov
sbb
jo
arpl
in
stos
xor
inc
in
mov
daa
pcmpeqw
mov
cwtl
scas
out
adc
xor
sbb
pushf
mov
mov
cli
scas
test
dec
mov
fistps
adc
call
mov
cmp
pop
leave
push
xor
call
das
sub
and
test
add
std
pop
nop
jae
ljmp
xchg
mov
mov
mov
add
cmpl
rcr
movsl
sub
sub
fisttpll
arpl
push
iret
cmc
jns
andl
jl
xor
iret
push
ja
das
mov
sub
dec
xchg
cmpsl
hlt
je
std
jno
call
test
je
pop
pop
xchg
push
fwait
push
xchg
test
sub
sbb
mov
xchg
scas
out
ss
cwtl
repz
cs
add
sbb
fdivrs
mov
cld
rcrl
test
xchg
xchg
in
int
cmpsb
push
pop
outsl
cld
outsb
jmp
jg
out
mov
sbb
mov
sub
je
xchg
xchg
aad
cs
lds
cmpb
or
ficoml
mov
inc
xor
jmp
leave
jb
in
mov
and
aaa
fiaddl
sbb
add
add
in
add
mov
cmp
fstpl
idivl
es
pop
stos
jp
jbe
push
push
test
into
lds
imul
dec
popf
jge
sbb
test
ja
loop
out
pop
or
or
cmpsl
stc
mov
jae
lret
dec
ror
sbb
xchg
mov
sbb
mov
andb
insl
xor
add
std
notl
arpl
add
push
call
das
in
dec
mov
mov
adc
jnp
sbb
stc
and
xor
push
pop
lret
mov
outsl
scas
aaa
dec
dec
imul
lds
and
fcompl
rcrb
cmp
imul
sbb
push
stos
lcall
sbb
dec
xchg
adc
sub
or
adc
ror
add
hlt
addr16
adc
lds
pop
inc
mov
arpl
ficoms
push
fsubrl
popa
sahf
add
push
push
stos
js
or
pushf
mov
jecxz
adc
sub
xor
xorl
aas
out
inc
pop
xchg
or
inc
sub
xor
jbe
dec
mov
scas
test
mov
ret
mov
sti
mov
in
cmp
ss
push
mov
ljmp
lahf
cmp
cli
sahf
cltd
sbb
sbb
push
or
or
cmp
lret
inc
sub
mov
sbb
aaa
and
aam
pop
fs
icebp
and
in
test
adc
cwtl
ret
jno
ss
dec
jns
icebp
push
dec
inc
ljmp
dec
jo
cmp
mov
je
dec
fcomp
insb
push
xor
enter
sarb
movsb
imul
cmp
push
cmp
lcall
repz
dec
xchg
stos
pop
sahf
insb
loopne
movsb
scas
mov
push
sub
dec
stc
ja
ficompl
jno
sub
inc
cmp
adc
repz
xchg
insl
cli
push
pop
adc
sub
insb
es
push
mov
divb
xchg
or
pop
out
lret
mov
repz
inc
push
leave
stos
outsb
mov
or
mov
pushf
jmp
popf
ret
data16
pop
cmp
or
lds
or
adc
cmovno
mov
jmp
cwtl
out
std
ja
mov
das
subl
testb
inc
pop
lahf
popf
inc
and
sub
pushl
xchg
dec
jp
jmp
in
ds
daa
inc
push
pop
sti
js
push
xor
icebp
xchg
cld
fmuls
aaa
inc
cwtl
and
mov
rclb
add
movsl
lea
pusha
aas
subb
push
xchg
nop
les
mov
mov
inc
leave
div
out
popf
loopne
xchg
cli
inc
cmp
sub
adc
into
aam
cmp
pop
loope
ret
jo
mov
ljmp
sub
pop
cmp
testl
jae
mov
dec
aas
outsl
mov
dec
out
or
cmpsb
in
repnz
jns
hlt
sub
sbb
sbb
and
mov
repz
idivl
daa
push
mov
cmp
js
mov
es
pop
leave
fwait
fwait
mov
cmp
hlt
cld
iret
mov
dec
pop
aad
insb
jle
push
xor
lret
add
inc
and
ret
dec
pusha
cmp
sub
popf
aad
push
test
mov
jg
add
or
sub
out
pop
jne
jecxz
in
sub
pushw
mov
jo
rclb
outsl
and
das
out
rolb
es
pop
pop
loopne
andl
cmpsb
hlt
negl
xchg
inc
or
or
lock
jns
addb
jne
jo
dec
mov
lods
pop
leave
and
insl
in
les
jp
shll
push
mov
or
movsb
xchg
js
pusha
js
xor
test
rcrb
adc
outsb
cmp
add
into
adc
pop
mov
xor
sar
pop
push
gs
in
pop
mov
and
sub
add
fisubl
cmp
push
jo
cmc
pusha
dec
xor
icebp
push
repnz
ss
ret
fwait
addl
cmp
or
addr16
jns
mov
cmpb
push
pop
adc
push
shrb
movsb
pop
add
mov
lds
sbb
dec
xor
push
hlt
rcr
dec
sarb
xor
inc
mov
sbb
enter
lds
imull
jno
sbb
lahf
add
imull
push
aad
and
jbe
nop
jmp
dec
insb
or
pop
test
cld
jo
jp
out
lret
push
arpl
cmpsl
jmp
mov
adc
push
lret
and
fldt
mov
cld
dec
es
jnp
clc
in
dec
push
cli
loope
and
cmp
cmp
enter
jmp
mov
insl
inc
aas
mov
dec
lcall
ret
add
xor
jg
or
add
or
daa
and
aad
divl
dec
fistpl
xchg
cmp
sub
mov
mov
mov
inc
mov
aas
icebp
fdivrs
movsl
out
inc
push
test
hlt
out
orl
dec
lock
xorb
xchg
lds
push
test
cmp
mov
mov
dec
leave
xchg
and
lods
mov
hlt
or
xchg
les
and
dec
xchg
adc
or
cmpsb
adc
jecxz
mulb
pop
cmp
scas
dec
ljmp
fbstp
cwtl
fimuls
clc
push
lea
nop
les
jl
lock
cmp
movsb
jae
outsl
jl
sar
xor
lods
push
cmp
pop
lahf
xchg
sbb
mov
inc
mov
call
mov
lds
sbb
push
inc
inc
or
negl
es
xchg
stos
ret
push
fwait
test
mov
xor
mov
adc
scas
movsb
xor
pop
test
xchg
mov
or
fildll
pop
push
ret
repz
pop
cmp
xchg
jmp
jl
mov
pusha
cmp
sub
xlat
mov
xchg
jnp
sbb
sub
pusha
addr16
sbb
loope
in
daa
cmpsb
lds
adc
cld
pushf
push
mov
cmp
rolb
mov
stos
ljmp
std
dec
jecxz
test
cmp
bound
jle
jecxz
loop
iret
mov
pop
inc
pop
sbb
mov
mov
dec
push
mov
int3
mov
sub
leave
sub
test
movsb
aam
mov
lahf
ljmp
mov
xorl
sarb
sbb
push
and
lods
dec
mov
ret
add
movsb
fwait
adc
push
outsl
inc
fcomps
dec
mov
ret
inc
inc
insl
jp
jns
sub
xchg
and
add
xchg
or
jne
jne
out
setle
mov
pushf
scas
scas
or
add
mov
push
mov
loope
jle
inc
mov
sub
mov
jecxz
push
xchg
or
push
out
inc
sbb
lods
fnstcw
mov
fnstcw
jnp
xlat
xlat
mov
repnz
lods
dec
hlt
out
pop
cmp
mov
leave
xorl
pop
jne
fwait
xchg
xchg
pop
xchg
adc
icebp
inc
push
pop
scas
repz
cmp
inc
pop
dec
push
push
or
mov
or
cmc
andl
mov
push
sub
lcall
pop
and
mov
cmp
inc
out
inc
mov
andb
xor
call
push
jg
mov
lea
movsl
sub
in
insb
pop
repnz
imul
mov
iret
inc
jmp
mov
lock
pop
sar
popa
sbb
jecxz
cmp
test
sub
xlat
movsl
xchg
je
push
aam
je
call
cli
out
imul
or
pushf
popa
cmp
mov
jo
cwtl
das
lret
add
adc
xchg
lods
jp
adc
inc
shlb
mov
push
stc
add
adcl
aas
lods
xchg
sub
aaa
sbb
ss
pop
mov
lods
shll
jl
mov
loopne
cmp
pusha
sbb
or
mov
cwtl
mov
insb
sahf
and
das
push
cmpsl
shl
cli
lahf
and
mov
ffree
ja
test
inc
aam
pop
adc
out
xchg
stc
push
pop
cmp
fimull
xor
push
fcomp
push
rcr
sub
jmp
push
movsb
cmp
adc
xchg
mov
sbb
std
sarl
test
mov
cmpsl
push
test
outsb
rcrb
push
shrb
dec
neg
pop
push
cmp
pop
mov
and
pop
push
test
mov
test
inc
adc
mov
pop
negb
push
scas
jns
addr16
mov
mov
fdivl
scas
mov
out
stc
sbbl
lahf
js
repnz
adc
adc
shl
jae
ss
inc
mov
sub
mov
out
add
stos
popa
sub
cmc
rolb
ret
pop
push
xchg
mov
cltd
dec
test
and
aam
mov
mov
jge,pn
jmp
ja
push
xchg
int
push
bound
ffree
jmp
xchg
pop
fdivs
lods
fucom
popa
call
imul
adc
cmp
sbb
fcomps
xchg
inc
call
or
adc
add
jle
jno
cmp
mov
je
notb
sub
pop
adcb
jp
jmp
xchg
sti
push
mov
or
adc
loopne
lds
inc
cltd
scas
rcl
in
adc
adc
mov
cmc
or
mov
stc
in
in
daa
push
in
xchg
jo
push
cmpsl
xchg
imul
and
push
hlt
das
popf
mov
icebp
mov
or
sub
and
mov
push
xchg
pop
rcll
hlt
push
cltd
pushf
inc
sbbl
mov
jno
imull
jp
mov
xlat
stc
clc
push
xchg
cs
mov
bound
add
and
outsb
lea
sub
sub
mov
mov
rorl
pop
xchg
mov
pop
and
xor
aad
pop
and
lahf
pop
mov
sbb
push
inc
out
movsb
cli
dec
dec
scas
mov
or
sahf
cwtl
xor
cmp
ja
cmpb
adc
fisubl
sahf
xchg
sub
incb
push
fiaddl
and
ficoms
sub
fs
adc
shll
cmp
jns
push
xor
mov
push
jge
mov
jp
cmpsb
cmpl
jbe
aas
push
mov
mov
cmpsb
mov
out
imul
adc
cs
mov
sbb
jae
outsl
add
daa
and
inc
mov
hlt
addr16
pop
xchg
xchg
mov
mov
ficomps
xor
scas
inc
adc
adc
mov
mov
xor
xor
insb
imul
fidivrl
pop
mov
lods
push
sbb
mov
sub
and
inc
mov
andl
pop
ljmp
flds
pusha
xor
test
pop
imul
out
sub
aad
enter
mov
mov
aam
dec
loopne
pop
dec
stc
stos
orb
subl
fidivrs
sahf
fldenv
sbb
cmp
loop
fst
inc
add
flds
xor
mov
decl
jp
add
movsl
add
movsl
dec
stos
das
xchg
std
add
test
and
imul
mov
push
pop
das
inc
inc
pop
and
sub
or
test
scas
mov
std
or
xchg
repnz
mov
inc
ja
mov
popf
les
mov
pop
jbe
and
xor
cmp
and
mov
or
aas
sbb
popf
mov
mov
pop
ret
mov
into
lcall
pushf
outsw
add
repz
adc
loopne
lds
jbe
out
inc
xchg
xor
xchg
sti
push
sbb
xor
ss
push
adc
and
sti
push
jmp
adc
jp
out
outsl
jecxz
cmpsl
lds
xor
rolb
adc
push
pop
insb
hlt
mov
mov
push
xor
mov
data16
push
adc
int3
shll
pop
js
stos
adc
sbb
sahf
lock
imul
xor
xor
test
aad
and
adc
pop
mov
lock
pop
popa
inc
fprem1
int
mov
inc
outsl
inc
mov
inc
movsl
leave
out
in
add
fdivr
aaa
addr16
clc
scas
cltd
mov
pop
push
jae
jnp
out
push
inc
ds
xlat
test
mov
sbb
data16
js
push
inc
cmp
mov
mov
fdivs
cmp
sbb
imul
mov
daa
xlat
sub
xor
add
push
int3
cmpsl
cltd
push
adc
fwait
ja
fnstcw
or
jecxz
adc
mov
daa
orl
repnz
popa
mov
mov
je
cmp
sti
cmpsl
cmpsl
popa
mov
push
cmp
int
inc
push
jo
lahf
outsl
stos
xor
fwait
cld
mov
sbb
jnp
loope
mov
cmp
xlat
inc
jl
sbb
mov
adc
push
cmp
addl
popa
jle
jo
in
sub
pusha
nop
adc
rclb
hlt
pop
jp
mov
shrb
out
imul
mov
ss
sbbl
mov
mov
mov
imul
shll
dec
sbb
xor
push
push
or
sub
push
jle
sbb
idivl
jbe
je
dec
xor
sub
pop
cltd
sbb
mov
inc
fisubrl
pusha
fists
jl
jo
mov
fs
mov
sbb
test
jp
push
int
mov
ss
pop
mov
jne
add
pushf
sub
rcrb
jle
aad
dec
mov
add
xor
fdivl
popf
adc
xor
shlb
inc
loop
ss
pop
sbb
aam
sub
add
rcrb
xchg
ret
push
test
scas
lods
mov
js
dec
adc
add
pop
xchg
int
stos
hlt
aad
cmp
loopne
mov
cmp
dec
jno
outsl
cmp
sbb
insl
stos
test
scas
dec
out
pop
mov
sar
push
jecxz
arpl
mov
push
jae
cltd
loope
mov
shr
mov
imul
cld
scas
add
nop
jle
dec
test
push
sbb
shlb
inc
incb
out
pop
imul
sbb
shr
or
xor
sbb
dec
push
cmpb
and
pop
jne
xor
cmp
repnz
mov
ret
mov
dec
popa
ljmp
cmc
mov
and
fcoml
adc
sahf
mov
nop
add
mov
sbb
out
imul
push
jl
data16
push
or
sahf
and
xchg
push
push
daa
push
rcrb
arpl
dec
lods
addr16
dec
sbb
test
pop
fisubrl
cmp
pop
dec
dec
xchg
cmp
xor
flds
pusha
pop
mov
xor
cmpb
out
mov
lahf
std
mov
scas
fs
insl
jae
add
xchg
in
cld
fcoms
hlt
push
fs
cwtl
sbb
mov
inc
insb
mov
jg
inc
jg
sbb
or
and
mov
inc
shrl
stos
cmc
or
pop
inc
imul
push
aaa
clc
fwait
mov
fldcw
cmp
sahf
imul
out
push
es
sbb
mov
call
test
push
aaa
jnp
cwtl
mov
mov
adc
in
mov
adc
data16
gs
xchg
or
push
iret
xchg
movsl
pop
or
inc
mov
lret
cwtl
add
pop
int
mov
fnstsw
lret
aam
mov
ret
and
xchg
addr16
add
jne
inc
lock
pop
jbe
and
aas
cmpsb
push
xor
jge
icebp
sub
or
dec
xorb
push
shl
pushf
mov
into
xor
add
aas
adc
dec
adc
cmc
adcb
xchg
fsubrs
add
mov
cmc
jns
xlat
lret
dec
and
xor
mov
mov
jecxz
xor
std
fwait
stos
sbb
sbb
cmp
js
mov
fcmovne
adc
clc
call
es
xor
rolb
gs
jns
fisubrs
mov
out
fdivrp
stc
fdivrl
mov
call
xchg
push
in
out
xchg
les
out
and
push
arpl
jmp
fbstp
aas
out
test
sbb
fwait
dec
fidivrs
xchg
pushf
pop
lcall
sahf
mov
pop
or
iret
lcall
test
xchg
cmpl
out
repz
inc
clc
test
mov
mov
pop
popf
cmc
loope
scas
sbb
pop
pop
cmp
jmp
dec
cmp
lfs
adc
je
xor
mov
and
mov
add
stc
mov
dec
xchg
decl
cli
mov
pop
mov
pop
repz
fnsave
inc
jbe
sbb
nop
out
aaa
scas
add
rcr
in
inc
lock
lea
mov
inc
pop
cmpsl
rorl
data16
roll
jne
aam
mov
xchg
shr
sbb
lea
adc
pop
test
inc
inc
fsub
xor
add
aas
adc
dec
jle
push
std
push
in
push
xor
in
in
mov
inc
dec
nop
and
xchg
pop
pop
repz
mov
out
cmpsl
sahf
jno
dec
ror
int3
insb
sbb
popf
and
xchg
add
insb
inc
push
sbb
sub
movsl
add
in
icebp
and
jmp
les
jns
jg
inc
cmpb
lods
pushf
cmp
pop
sbb
mov
pop
jnp
fistl
addl
inc
xchg
push
push
mov
add
repz
push
xor
ja
pop
fsts
clc
loope
and
cmp
lea
lret
jbe
jg
fsubrs
pop
sbb
xorl
push
jne
fwait
xchg
pop
mov
sbb
sub
jecxz
int3
cwtl
popa
fwait
pop
popa
cld
bnd
mov
pop
push
inc
out
inc
ss
pushf
mov
das
les
inc
xchg
ss
insb
scas
add
mov
popa
sbb
js
ret
xchg
andb
loope
or
testl
es
ficomps
jl
mov
sbb
xor
mov
xor
push
xchg
shll
enter
add
sti
sbb
lret
repz
fidivrs
aaa
sub
movsl
cs
fldenv
xor
and
xorl
xchg
lahf
adc
pop
dec
mov
leave
dec
out
in
xor
sbb
test
xchg
decl
fnsave
insb
in
jbe
pop
insl
xchg
scas
ficomps
push
mov
mov
fwait
aad
or
push
icebp
bound
sbb
iret
in
shll
jl
dec
mov
es
mov
aaa
inc
mov
jae
int3
xchg
ljmp
and
pop
testl
or
sbb
and
popf
or
mov
jge
sub
xchg
vmulss
push
stos
jecxz
adc
and
incl
stos
fwait
cmc
iret
mov
repnz
inc
shll
shll
pop
test
iret
pushf
jg
mov
mov
xchg
lds
hlt
inc
data16
int3
cmp
pop
fiadds
or
movsb
adc
lods
rorb
push
les
test
adc
enter
jno
inc
scas
sub
in
xor
scas
and
xchg
stos
fbstp
xchg
mov
loopne
or
xor
stos
or
pop
jle
adc
xchg
inc
scas
scas
push
cltd
aad
out
mov
cli
pop
cli
into
cwtl
jg
mov
cmc
sub
inc
jnp
test
push
mov
mov
sbbb
movq
int3
test
jns
ficoml
dec
mov
xor
mov
mov
loop
cmp
out
mov
pusha
jno
add
pop
test
fwait
xchg
inc
iret
or
rdpmc
enter
out
push
in
outsl
or
jbe
xchg
jbe
jns
mov
mov
sahf
bound
fcoml
jle
dec
sbb
xchg
sbb
mov
fbstp
xorb
mov
cmp
jle
dec
enter
sub
jo
andl
scas
or
and
mov
mov
call
mov
pushf
mov
arpl
adc
das
push
or
test
add
or
dec
pop
mov
adc
test
and
aaa
or
sbb
mov
jae
and
xor
scas
mov
pushf
nop
lods
test
clc
fiaddl
mull
cmp
xchg
dec
loop
orl
std
mov
fmuls
out
xchg
dec
mov
lock
dec
insb
pop
dec
pusha
movsb
es
pop
repnz
xchg
iret
xchg
mov
insb
in
ret
out
mov
cmp
shll
js
push
dec
pop
cmp
int
adc
adc
xchg
call
mov
adc
or
lahf
insl
out
pop
lea
xchg
pop
shrb
fdivs
jl
inc
fisubl
mov
adc
push
pop
xchg
mov
mov
sbb
test
mov
repz
cwtl
xchg
inc
sbb
jmp
mov
bound
dec
mov
push
mov
pop
cmp
mov
cwtl
in
frstor
pop
add
sub
jnp
xor
cmp
cld
cmp
in
int3
lcall
cs
push
movzwl
rcrl
repnz
hlt
jmp
fisubs
ja
dec
into
cs
xchg
jb
sbb
icebp
aad
mul
ds
xor
mov
imul
and
call
sti
pop
pop
aaa
xor
mov
cmp
xchg
aam
cld
jae
dec
xchg
in
pop
cmp
stos
and
icebp
loope,pn
or
jl
adc
mov
mov
insl
in
lret
mov
and
test
push
les
je
mov
aam
push
les
fisubs
jne
test
mov
outsl
lret
or
mov
sub
aas
or
add
aam
popf
stc
icebp
lcall
ds
add
push
enter
loope
sub
test
adc
dec
jmp
sbb
or
pop
cld
pop
loopne
and
jg
cmc
xchg
enter
push
jae
repnz
mov
push
mov
nop
aad
xchg
testl
cmp
aaa
in
in
sbb
hlt
test
pop
into
dec
xchg
test
mov
stos
lahf
nop
cwtl
mov
mov
inc
mov
mov
xor
sbb
xchg
rcll
cltd
fs
aaa
mov
pop
repnz
or
jbe
sbb
cs
add
leave
jp
mov
imul
adc
pop
cmp
dec
sbb
ret
push
stc
jnp
mov
rcrl
push
mov
mov
mov
xchg
pushf
lahf
andb
push
shrl
mov
fwait
xor
lcall
fwait
mov
xchg
roll
mov
stos
dec
popa
testl
jp
and
xor
cmpsl
es
dec
push
addr16
cwtl
fdivrs
cmp
jmp
push
pop
push
mov
mov
mov
mov
xor
int3
es
adc
clc
lcall
movsl
pop
jp
and
push
imul
fwait
push
cmp
rolb
ficompl
mov
sti
int
cmpsl
mov
shrl
pop
fsubrs
lcall
or
pop
leave
ret
xchg
jo
jo
mov
out
jno
lods
or
fs
pop
in
roll
inc
bound
pushf
dec
xor
ljmp
mov
lock
inc
dec
in
adc
ret
dec
push
push
addb
testl
dec
adc
cltd
dec
mov
cmp
xor
add
add
jl
sahf
mov
stos
mov
jle
add
es
adc
stos
adc
jle
les
lds
xchg
je
aam
mov
mov
xor
rolb
mov
pop
arpl
div
xchg
mov
sub
jnp
jbe
pop
adc
pusha
push
ret
lods
add
cmpsl
pop
cli
dec
aas
xchg
cs
jle
outsl
insb
mov
ljmp
or
mov
jne
push
mov
mov
xchg
mov
mov
mov
aaa
pop
or
xor
push
mov
fnstcw
xor
inc
daa
mov
push
xor
xor
jge
inc
arpl
das
ljmp
mov
or
cmp
int
push
pop
mov
je
pop
cmp
in
repnz
pop
arpl
cmp
jmp
push
mov
cmp
int3
test
or
and
xor
cwtl
fistpl
xchg
and
jle
xchg
jl
fsubrp
pop
sbb
mov
std
sub
lret
xor
add
push
pushf
sahf
sub
jge
mov
cld
sub
mov
movsb
push
xor
inc
loop
test
into
in
outsb
add
dec
aad
push
gs
cmp
shl
ficoml
mov
or
xchg
mov
add
jo
mov
xchg
cmpsl
cmp
cmp
fs
push
out
and
lods
push
sub
cmp
jge
inc
xor
lea
jp
fdivl
mov
cmp
mov
fmull
stos
xchg
out
sti
and
cmp
subb
cmp
mov
fwait
movsl
std
cmpsl
icebp
imul
sub
jbe,pt
imul
fcmove
mov
icebp
and
mov
sbb
insb
lock
loop
bound
adc
xchg
dec
insb
and
out
or
mov
aam
mov
mov
xchg
push
stos
das
mov
test
fldt
out
mov
push
push
fisttps
cmp
mov
cmp
or
pop
and
inc
lret
test
push
das
in
sbb
cmp
mov
mov
add
pop
sub
faddl
sbb
sbb
lods
lahf
or
dec
gs
out
jns
mov
cld
shll
stos
dec
loope
pop
mov
fisttpl
ljmp
lock
loopne
xchg
popf
pop
clc
add
das
sub
adc
lods
cmp
lret
jb
imul
clts
aam
outsb
jno
test
xchg
shll
or
mov
mov
faddl
xor
push
mov
mov
fistpl
or
inc
xchg
testb
jne
push
addr16
mull
and
push
les
push
stos
insl
push
call
in
scas
bound
movsb
cmp
rcrl
iret
ficompl
popa
loope
jmp
mov
aam
xorb
inc
dec
int3
cmp
mov
pusha
shlb
add
repnz
test
or
repz
cmpsl
inc
cltd
gs
out
and
jns
fsubrl
icebp
push
pop
mov
aam
stos
mov
addr16
jl
mov
syscall
ror
fiadds
mov
xor
mov
insl
std
fs
dec
dec
sub
insl
ret
pop
inc
pop
push
xchg
ret
insb
dec
cmp
pop
add
pushf
out
into
or
scas
pop
test
into
lds
add
lds
dec
fs
pushf
and
adc
jge
inc
sub
stos
mov
adc
push
push
call
mov
loop
in
sahf
and
jne
and
notl
jnp
pusha
incb
movsb
or
dec
mov
add
lahf
lds
fdivrs
mov
mov
lods
adc
nop
add
scas
mov
adc
shl
jo
pop
or
mov
mov
dec
nop
sbb
stos
sub
rorb
rcl
and
or
add
lret
int3
dec
mov
lds
insl
stc
jl
xchg
pop
jbe
insl
call
inc
dec
mov
xor
popf
pop
inc
cmp
xchg
repnz
loopne
jl
xor
hlt
add
cltd
mov
aam
testb
mov
out
out
push
aas
dec
leave
xor
int
mov
mov
test
push
daa
mov
test
xchg
mov
js
fldl
rcll
mov
popa
icebp
mov
and
insb
icebp
sahf
call
pop
adc
insb
bound
test
lods
push
xor
test
rcr
or
clc
and
jo
or
mov
es
mov
or
xor
sub
addr16
shl
mov
das
push
mov
cmp
test
push
adc
push
int3
jne
call
add
pop
mov
xchg
cmc
das
and
insb
imul
push
or
in
mov
aaa
cmp
fildll
cld
or
sub
add
lea
ja
jae
fwait
add
pop
dec
sbb
cmp
aaa
sti
lcall
cmc
fidivrs
or
daa
xchg
mov
and
mov
sub
clc
jl
es
pusha
int
dec
add
dec
das
iret
loop
std
xchg
mov
or
xchg
popf
insl
fs
fwait
sub
stos
xchg
sbb
popa
jmp
xchg
jb
inc
mov
xchg
clc
mov
push
or
mov
leave
jae
repz
cmc
and
lret
popa
cmp
out
or
lret
jl
or
inc
xchg
movsl
movsb
lahf
cmp
lds
test
lods
xchg
repz
pop
cs
jb
lret
movsl
cs
popf
in
sub
sarb
inc
push
mov
int
bnd
iret
inc
xor
arpl
notl
rorb
stos
fwait
insb
sbb
sub
adc
iret
jae
xor
sub
xorb
test
lcall
aam
addr16
imul
inc
xchg
mov
leave
mov
xchg
inc
shlb
popf
js
aaa
push
insb
add
lahf
into
sub
fldl
pop
int
aaa
jns
push
rol
popf
scas
push
adc
inc
jge
shll
int3
xchg
lock
scas
scas
test
pop
mov
inc
sbb
cmc
xchg
loop
cltd
stos
into
sbb
xor
nop
xor
pushf
adc
in
stc
out
in
imul
test
popf
xor
sub
xchg
and
add
mov
xlat
pop
jecxz
pop
xchg
rcrb
cmp
test
jecxz
add
push
pop
movsl
fwait
push
idivb
inc
xchg
dec
movsl
sbb
sub
es
movsb
adc
cmp
mov
mov
push
decb
dec
inc
adc
cmp
sub
adc
shrl
rol
ss
xchg
shrb
std
or
sarb
scas
push
adc
xor
add
idiv
outsl
push
dec
dec
fsubr
imull
sub
jg
loop
mov
pop
cli
shrb
mov
int
push
sub
pop
fs
mov
xchg
lock
inc
lret
roll
cmovo
jge
mov
pop
sbb
mov
mov
push
test
pusha
ja
movsl
adc
scas
outsl
jecxz
add
andb
sbb
push
dec
lcall
stos
xchg
iret
out
icebp
cld
and
pusha
adc
or
rcr
push
stos
loopne
pop
mov
fs
icebp
xor
sarl
mov
repnz
pop
push
sub
jb
push
ftst
mov
mov
idivl
jge
mov
lods
out
cs
cmp
xor
mov
imul
sbb
or
sub
dec
rcr
in
pop
and
loopne
xlat
les
test
inc
dec
jl
mov
adc
inc
push
mov
xor
mov
les
repz
jne
clc
push
xchg
daa
daa
push
lods
std
jb
xchg
add
subb
shll
push
in
mov
sbb
loopne
out
cs
in
mov
add
outsl
cmp
sub
daa
xchg
enter
or
cmp
xchg
in
pop
sub
xor
popf
movb
sbb
ja
loope
mov
mov
xor
into
jnp
xor
xchg
lahf
mov
es
in
aam
mov
in
pop
or
jne
inc
adc
inc
xor
ljmp
addr16
push
and
imul
xchg
loop
lahf
icebp
rolb
insb
adc
push
les
and
fwait
and
inc
xchg
jmp
in
dec
mov
je
add
ret
jns
and
call
mov
cmp
lea
add
or
push
cmpsb
cmp
fwait
sub
mov
movsb
fistl
push
push
popf
inc
or
and
jae
push
test
cmpsl
add
test
or
repz
in
fadd
push
push
faddp
sub
fdivrl
inc
lahf
mov
cmp
xchg
pop
cmpsb
scas
test
mov
mov
ret
mov
push
es
cmc
icebp
mov
rolb
je
call
jbe
loopne
fisubs
outsb
xchg
mov
aas
dec
out
stos
mov
and
mov
lret
dec
pop
and
pop
out
loopne
cmp
ret
divb
fs
sub
xchg
inc
sbb
and
adc
and
jmp
fdivs
loope
xchg
jmp
scas
insb
sub
cmp
jl
pop
pop
mov
jecxz
sbb
in
mov
dec
sub
insl
scas
mov
stos
push
mov
daa
pop
sbb
sbb
popf
adc
or
or
push
push
jb
and
pop
cmp
mov
loop
clc
dec
mov
lds
add
push
dec
fst
mov
mov
in
xchg
xchg
push
jbe
add
add
push
nop
jne
shrb
in
adc
stos
subb
push
cs
mov
mov
ds
push
xchg
ret
mov
dec
test
rcrb
in
nop
stos
push
sbb
aaa
add
sahf
insb
leave
push
ret
sbb
xor
lret
int
cwtl
loop
gs
push
cmc
inc
inc
cmp
xor
jmp
lcall
fisubrs
int3
and
add
insb
push
in
or
es
and
add
push
fwait
jo
fsubrs
pop
pop
adc
add
mov
pop
mov
and
add
dec
xchg
lods
adc
xchg
jae
pop
es
adc
add
jo
inc
inc
data16
inc
divb
sbb
add
in
mov
adc
lods
lret
cmp
fdivrs
cld
push
mov
cld
pop
subb
inc
push
adcb
add
or
xchg
mov
jle
ret
fidivrs
mov
jp
jno
xorl
sbb
outsl
outsl
dec
in
xchg
mov
int
mov
push
scas
shl
jns
jo
sbb
jnp
ds
jbe
lock
out
jno
jo
subb
js
shlb
xchg
pop
lods
shl
mov
push
ss
adc
jno
and
cmp
sub
sub
icebp
cli
call
cmp
xor
jmp
inc
sub
sbb
nop
jb
lcall
or
into
add
xor
aam
int
dec
fbstp
js
testb
aaa
aad
push
jmp
xor
push
dec
xchg
into
sub
xor
inc
xchg
jmp
sub
xchg
lret
jne
sbb
add
jmp
ds
jle
mov
mov
testb
lcall
and
lods
es
jne
pop
adc
and
and
inc
push
mov
mov
js
arpl
in
adc
stc
outsl
push
shll
scas
mov
leave
cmpsl
jp
xchg
or
jp
sbb
outsl
out
adc
push
outsl
xor
movsb
or
loop
ljmp
xchg
es
fisttpll
inc
int3
sbb
incl
push
cs
iret
mov
sbb
in
mov
inc
shlb
in
pushf
je
cmp
aaa
mov
sar
cmp
cmpl
fsubrl
xor
jge
and
push
ja
add
xchg
movsb
jge
cmp
add
hlt
dec
cmpsl
mov
xchg
repz
lods
insb
aam
adc
movsb
data16
inc
jmp
scas
ret
mov
subl
mov
aas
pop
mov
adcb
mov
inc
cmpsl
clc
xchg
xchg
xor
insb
jp
xchg
loope
pushf
or
outsl
into
lds
rcrb
sti
popf
push
mov
out
jmp
jns
inc
sbb
pushf
ret
pop
pop
and
pinsrw
inc
js
xchg
and
jne
xor
cwtl
pusha
pushf
jmp
pop
fisubs
cmc
in
jno
hlt
lds
sub
sbb
lret
popf
push
jl
push
dec
lock
cmpsl
mov
lret
and
dec
jb
adc
bnd
jno
mov
xchg
sahf
jae
sbb
fldt
adc
shll
fidivl
inc
xchg
dec
loop
mov
xchg
cmp
aas
mov
jmp
int
shlb
sub
sub
adc
ja
cld
push
mov
xchg
lret
sbb
cmpsb
insb
mov
xchg
scas
leave
xchg
repz
xchg
mov
insb
mov
sbb
and
sub
and
pop
out
jecxz
dec
repnz
jg
imul
sub
cwtl
fwait
int3
pop
inc
hlt
arpl
pop
sub
or
leave
xor
dec
push
mov
cli
std
jb
mov
jg
inc
insb
xchg
adc
loope
pop
test
jae
and
inc
subb
mov
out
lds
xchg
pop
lock
mov
lock
std
and
add
insb
les
and
jmp
mov
dec
sbbb
scas
and
stos
pop
test
push
sub
push
mov
adc
or
mov
lods
add
mov
mov
cmp
dec
jp
push
cwtl
mov
mov
fnstcw
imul
cld
fidivs
jle
mov
and
lret
insb
add
or
jne
rdtsc
out
cmp
sub
sti
sub
fidivrs
xchg
divl
inc
or
xor
lret
jge
or
icebp
shrl
fwait
xchg
pop
push
cmp
push
cmc
shll
dec
lahf
je
sub
add
in
push
dec
jno
adc
and
pushf
out
fs
gs
mov
dec
cmpsb
cld
hlt
sbbl
inc
pop
cmp
cmc
lods
imul
jae,pt
pushf
dec
lods
or
sbb
xor
mov
pushf
sbb
daa
lea
rol
in
loop
push
cmp
jb
pop
daa
jle
add
dec
mov
cltd
fsubs
pop
dec
push
movsl
push
pushl
and
out
mov
cmp
cmpsb
mul
xchg
mov
arpl
fldt
sub
jae
pop
add
sahf
or
shlb
fwait
mov
test
sbb
jmp
cli
jmp
movsl
cmc
stos
dec
repnz
xlat
jmp
sbb
out
out
push
stos
cmp
sbb
mov
cmc
push
mov
inc
pop
mov
enter
aam
clc
sub
mov
out
and
mov
test
push
enter
xlat
fimuls
xlat
es
ficoml
and
fisubrl
jmp
cmpsb
pop
mov
outsb
into
mov
cli
pusha
adc
sahf
ret
iret
jmp
pop
aad
repz
pop
sbb
shlb
pop
pop
xchg
mov
fucomip
xor
sub
jge
cwtl
or
imul
mov
cmp
adc
repnz
lods
inc
mov
xor
rcrb
xchg
pop
clc
fiaddl
push
or
decb
sbb
nop
xchg
xchg
out
movsl
adc
nop
enter
sbbb
seto
je
icebp
icebp
decb
mov
cmp
xchg
outsb
out
mov
ss
pop
ficompl
lret
push
les
push
add
das
and
xor
inc
adc
jo
aaa
subb
jne
daa
mov
add
xchg
or
xor
stos
notb
test
jl
out
mov
inc
inc
dec
jp
hlt
stc
div
inc
inc
push
cmp
xchg
shll
dec
push
push
jle
pop
jbe
dec
std
dec
push
pop
sbb
cld
es
dec
push
push
rcrl
inc
pop
bound
xchg
pop
jle
cmp
lret
je
jns
nop
sbb
ficompl
jbe
in
andb
cwtl
and
sahf
ds
adc
les
cld
or
sbb
mov
sbb
pop
cwtl
sub
cmp
mov
mov
shlb
pop
popf
pop
pop
mov
sbb
repz
mov
fstpl
lods
mulb
sbb
mov
add
aam
pushf
jge
push
cli
test
pop
pop
inc
mov
push
sub
mov
mov
repnz
in
sub
stos
nop
fs
rcrl
adc
inc
lea
push
outsl
stos
cmp
nop
lcall
mov
outsb
sti
scas
mov
cmp
sub
lret
scas
mov
fisttpl
jb
push
out
sub
mov
int
adc
adc
popf
jb
je
cmc
push
fbstp
push
pushf
cmp
sub
add
movsl
and
dec
dec
cwtl
cmc
sbb
shlb
sub
test
push
test
iret
add
sub
test
jmp
push
pop
hlt
cld
adc
sbb
xor
test
jbe
sarb
mov
movsl
stos
subl
out
fldt
xchg
imul
fdivr
sahf
dec
lcall
xchg
pop
xor
loop
test
mov
xor
stc
inc
sahf
test
lea
jne
cli
push
pop
in
and
inc
jno
mov
jae
mov
es
adc
pusha
and
xchg
imul
ds
fbld
xlat
sarl
dec
rol
sub
hlt
pop
arpl
sub
dec
lret
pop
enter
jae
inc
or
sbb
dec
out
add
inc
xor
imul
sub
hlt
pop
dec
dec
mov
into
lret
jecxz,pn
mov
jl
repnz
push
pusha
jle
dec
adc
fs
inc
in
jl
xor
mov
jo
inc
push
in
imul
push
cmp
movsb
mov
fs
test
mov
mov
lea
pop
nop
lds
or
inc
sbb
lock
or
cmc
rcll
cltd
es
addr16
out
addl
mov
dec
or
repnz
push
push
mov
mov
mov
nop
dec
scas
daa
pop
pop
into
rcl
cmp
fnsave
mov
add
inc
test
std
fcomps
push
fisubs
or
std
cmpsb
sub
push
in
push
stos
shr
jo
leave
lcall
pop
sub
push
mov
lods
in
je
in
mov
cwtl
and
es
push
cmp
clc
sub
imul
stos
cmpsl
sbb
add
cmp
popa
mov
movsl
push
fcomi
mov
and
sbb
sub
cmovbe
repz
sbb
hlt
mov
enter
mov
xchg
dec
popf
adc
pushf
xchg
dec
ljmp
rclb
sub
and
or
lret
insb
das
mov
sub
out
sti
lods
adc
mov
lods
in
push
and
jne
dec
popa
cltd
inc
xchg
mov
repz
inc
xchg
push
aas
push
dec
xchg
add
lods
cld
mov
inc
pop
inc
mov
in
sbb
fcmove
icebp
imul
mov
popf
dec
mov
cmp
hlt
mov
arpl
lahf
inc
lock
cmp
dec
orl
push
push
cmp
adc
scas
in
jmp
outsl
dec
notb
mov
ljmp
leave
dec
lods
sub
loop
lahf
push
fwait
in
in
sub
into
fucom
or
fcomp
sub
jmp
pop
mov
mov
push
jae
add
cmpsb
fldl
movsl
adc
mov
xchg
mov
dec
loopne
jo
fwait
subl
or
loop
jle
xchg
fadds
faddl
fwait
in
and
aam
pminub
mov
push
setp
mov
mov
out
in
repz
into
jge
mov
std
or
ljmp
jns
clc
scas
xchg
adc
es
std
int3
mov
addr16
xchg
cmp
mov
int3
aad
in
mov
iret
mov
inc
jne
sub
aaa
jo
inc
and
cwtl
push
pop
shl
mov
mov
inc
jle
in
lea
push
push
rorb
xchg
inc
and
xor
in
push
xchg
sti
lds
dec
push
dec
and
and
out
mov
arpl
adc
rorl
or
and
vandps
outsl
cmpsl
inc
sbb
add
fcoml
cmp
dec
pusha
idivb
xchg
jb
add
jne
mov
mov
push
xchg
push
sbb
add
pop
int3
insb
dec
fldcw
rcrb
cmc
lock
push
sbb
and
pushf
lret
xlat
pop
inc
mov
fisubrs
jno
sub
jb
jbe
or
push
cmpsl
pop
pop
jg
mov
adc
shlb
addb
pushf
js
sti
fists
jnp
cmpsl
and
or
or
fldl2e
and
sub
mov
repz
dec
out
in
jne
les
mov
cwtl
in
lods
shrl
insl
pop
mov
xor
mov
jns
cli
fidivs
xchg
adcb
seto
cmpsl
mov
jno
dec
es
fidivl
scas
mov
jecxz
dec
loopne
mov
setp
adc
fcmovne
inc
dec
in
mov
outsl
lea
js
sbb
cmc
inc
push
push
sbb
sbb
jns
sub
sti
lea
mov
lahf
dec
popf
jp
or
cmp
popa
cmp
push
pop
and
jae
mov
xchg
xchg
pop
cmp
bound
in
fstps
or
xor
sbb
mov
loopne
aam
mov
push
out
and
mov
xchg
movsl
adc
lods
clc
push
inc
paddw
inc
sub
lret
jle
fisubs
clc
xor
sbb
bound
stos
mov
dec
stos
scas
fcmovnb
jmp
imul
jb
cs
fucomi
xchg
outsl
cmp
movsl
jecxz
dec
cmp
mov
shrb
push
shl
cmp
jne
pop
insl
inc
pop
lahf
push
insb
dec
leave
mov
out
cmp
movsb
jl
aam
fs
sub
and
icebp
lds
and
add
cmpsb
lods
sbb
pop
call
insl
add
sahf
add
aas
jae
lea
sub
scas
inc
std
xchg
pushf
sbb
scas
movsb
xlat
dec
rclb
inc
not
push
decb
test
roll
hlt
add
scas
fistpl
repnz
sti
cmpsb
je
sub
rorb
dec
testb
push
stos
sahf
ret
cmp
xor
das
into
nop
inc
mov
push
lahf
insl
pushl
leave
mov
mov
icebp
pushl
mov
cmp
and
pop
vprotq
cmp
repnz
lods
dec
sbb
lds
aas
jmp
iret
add
jle
test
jnp,pn
aad
inc
cli
cmp
aas
loopne
dec
dec
test
push
push
mov
pop
lock
mov
push
push
lock
jno
jae
mov
lods
loopne
sbb
loop
and
add
push
or
mov
mov
arpl
hlt
mov
inc
inc
add
popf
repnz
insb
nop
inc
inc
xor
data16
mov
xchg
xor
int
hlt
mov
jbe
mov
jno
ljmp
xchg
push
movsb
sbb
mov
test
pushl
mov
sbb
mov
and
and
jne
cwtl
rcll
loop
jo
cwtl
repnz
loop
pop
in
push
sahf
adc
xchg
jecxz
fdivrl
jecxz
dec
movsb
push
or
adcl
pop
scas
das
and
movsb
jb
lea
out
out
adc
dec
enter
xor
jmp
adc
dec
lds
mov
or
cmp
pop
pop
aam
push
testb
incl
hlt
sbb
fs
adc
cmp
mov
push
xchg
inc
or
cmp
das
imul
aam
test
mov
add
push
pop
loop
fimull
jnp
and
or
cmc
sub
loop
xor
xor
adc
pop
fnstsw
cs
je
filds
sub
cwtl
ja
xchg
mov
mov
cmp
jns
test
push
dec
mov
mov
ret
jp
cmp
cmpsb
push
bswap
roll
xchg
ja
sub
mov
stos
jae
jae
cmp
mov
roll
mov
mov
lods
inc
in
fisubrs
mov
sub
inc
mov
idivl
dec
and
xchg
push
ds
mov
or
fistps
adc
dec
cwtl
jl
adc
or
mov
dec
or
mov
insb
push
cmp
scas
pop
mov
xchg
loope
rcll
in
es
sbb
jne
cwtl
dec
push
out
adc
and
xor
jb
inc
jge
jp
jge
sub
adc
nop
jg
sahf
pop
shlb
inc
test
dec
adc
push
out
dec
push
int
clc
inc
pop
sub
jne
sbb
cmp
ja
pop
cmp
mov
xor
add
jo
lods
mov
pop
lds
cmpsl
pop
xchg
cmpsl
popf
inc
lods
jae
jns
push
mov
jae
mov
sti
xchg
xor
xchg
jp
sub
push
and
inc
enter
xchg
cltd
cmp
lret
shll
dec
fisttps
jb
clc
add
fisubrl
mov
jnp
adc
sti
and
mov
add
fildl
les
ficompl
rcrb
clc
lds
xchg
jp
cmc
cmp
scas
xchg
push
addl
xchg
push
inc
sbb
jmp
mov
add
stos
add
bound
rclb
mov
mov
or
aaa
pop
inc
adc
pop
push
jge
cwtl
sbb
fistpll
and
mov
iret
inc
push
test
fstp
mov
fistps
xor
clc
jmp
shr
xor
aaa
mov
bound
or
movsl
mov
imul
fwait
movsb
mov
enter
mov
mov
ret
or
iret
jl
stc
add
jno
fdivs
xchg
push
dec
mov
mov
stos
lock
xchg
es
movsb
adc
dec
and
sbb
dec
gs
mov
lret
dec
mov
pushf
xor
call
leave
mov
cmc
das
mov
out
lods
mov
mov
sbb
popa
addr16
or
jnp
fdivrl
pop
aas
inc
call
ror
jbe
jae
fstpl
ret
dec
xor
scas
mov
imul
movsb
add
leave
aas
sbb
cmpsb
jo
push
xor
adc
imul
inc
adc
cmp
cmp
and
sub
fdivrl
rcll
dec
pop
add
int
outsl
jb
mov
pop
dec
stc
rcll
sub
mov
lret
inc
mov
sub
mov
ffree
nop
adc
outsb
push
imul
out
lahf
gs
aam
xor
mov
ret
jno
dec
sbb
loopne
dec
sub
mov
xchg
add
shrb
cmp
add
jecxz
mov
dec
pop
je
xchg
leave
int
movsb
jp
mov
negb
adc
sbb
addr16
mov
lea
sbb
add
stc
jbe
cmp
movsb
stos
push
sub
or
pop
jno
in
icebp
add
cmc
lahf
shlb
popf
xchg
lods
cmp
push
out
in
dec
sub
lods
pop
and
in
sbb
hlt
bound
arpl
mov
pop
aam
xchg
add
cmp
cmc
and
movsl
mov
or
int
and
sbb
pop
push
pusha
xor
adc
js
sbb
xchg
mov
cmp
imul
pop
stos
movsb
sub
sbb
out
outsb
jge
cltd
add
ja
addb
jg
cmp
or
scas
pop
enter
ja
cmp
sub
mov
push
jns
lea
jge
mov
je
fstpt
jbe
jbe
push
daa
icebp
adcb
js
ficompl
loopne
mov
pop
xor
lcall
imul
xlat
pop
cmpb
pop
xor
std
imul
mov
and
popf
les
in
add
sbb
xor
jbe
test
stos
popa
es
jle
insl
mov
or
xlat
xlat
push
jnp
in
push
mov
lret
sbb
sub
inc
stos
cmp
and
and
jmp
pop
and
jne
sarl
sbb
mov
or
lods
ds
cli
add
mov
roll
cmp
popa
out
mov
into
fsubrs
push
roll
data16
insl
mov
mov
pop
mov
pop
subb
mov
push
js
mov
aam
daa
addr16
es
mov
xchg
aas
dec
mov
loopne
int
adc
push
loopne
inc
repnz
adc
push
xlat
inc
aam
push
nop
iretw
and
push
xchg
dec
outsb
xchg
mov
inc
jecxz
sub
cmp
push
dec
or
inc
outsl
xor
adc
fwait
dec
mov
imul
enter
pop
in
int
xor
sub
adc
adc
pusha
xor
mov
inc
insl
sbb
cmp
stc
jnp
std
mov
mov
sar
outsl
int
xor
stc
cmp
pop
xchg
cwtl
sub
std
iret
shll
fstpt
xor
sbb
out
je
bound
pusha
shr
mov
mov
sbb
clc
inc
mov
lds
fistpl
jo
xor
lret
pop
or
out
gs
aam
ljmp
or
push
mov
cmp
in
or
adc
mov
adc
mov
mov
or
sub
sub
xor
jg
les
inc
lret
aas
fistl
cmc
mov
dec
mov
inc
xchg
sbb
and
pushf
push
cwtl
push
out
fwait
push
scas
push
jno
add
sbb
fdiv
rolb
push
adc
loope
or
mov
loop
mov
cmp
or
or
dec
xchg
add
dec
inc
jp
sbb
add
or
or
pushf
cld
sbb
xchg
repz
inc
adc
cmp
dec
push
mov
mov
popf
repz
cmp
mov
mov
sub
std
fldl
pushf
enter
cmp
lods
mov
into
sub
push
cwtl
xor
pushf
ret
xchg
mov
pop
std
lret
xor
cltd
jns
or
rclb
mov
mov
pop
in
pop
add
idivb
ror
ss
lock
popf
fcoms
xor
popf
sub
loope
movsb
mov
insl
xlat
fwait
push
lock
les
xchg
add
rcl
push
inc
sarb
cld
push
mov
fimull
pop
push
push
and
add
sbb
imul
cmpsl
dec
or
js
mov
lahf
pop
ljmp
push
pop
sbb
adc
mov
lods
mov
pop
jge
pusha
add
jl
adc
sub
xor
xchg
out
sub
cmovns
rol
out
pop
cltd
or
std
mov
daa
divl
push
mov
mov
dec
sub
push
or
iret
daa
or
lods
pop
repnz
push
sub
std
xor
push
pop
jo
stos
enter
test
cld
shlb
jmp
lret
xchg
xchg
shlb
pop
lea
sbb
cmp
fiaddl
andb
aam
js
mov
add
mov
jp
clc
and
inc
sub
inc
or
sbb
cltd
lock
call
inc
xlat
mov
xchg
and
mov
pop
mov
lea
imul
sub
add
mov
jle
inc
cmp
sbb
shrl
movsb
pop
lock
ficoml
loop
dec
jge
push
pushf
sub
cmp
stos
leave
repnz
jmp
aad
rorb
mov
mov
push
xchg
push
popa
into
push
mov
cmpl
sbb
mov
js
inc
fadd
outsb
cli
pusha
imul
shl
cmp
fisttpl
pop
negb
dec
in
rorl
pop
les
popa
add
pop
jno
mov
shlb
enter
lock
or
sahf
xchg
mov
shld
xchg
xchg
dec
push
adc
add
jo
aaa
xchg
test
cli
mov
push
lret
sbb
ljmp
test
dec
js
arpl
aad
enter
sbb
jle
sub
enter
inc
sbb
sbb
in
add
pop
inc
lahf
inc
jbe
jns
or
or
nop
hlt
or
cmp
fidivs
xor
test
jb
cs
dec
shrl
sub
in
and
pusha
sbb
movntq
hlt
movsb
pop
ret
mov
in
popa
mov
addr16
mov
insb
cmp
xor
in
imul
in
notl
mov
xlat
cmp
xor
xor
cltd
cmpsl
add
push
insb
inc
and
pop
daa
in
icebp
gs
jbe
adc
pop
jno
mov
mov
pop
jns
cld
insl
loop
fsubl
shlb
xchg
js
lcall
fldl
push
inc
add
imul
dec
in
data16
int3
in
pop
cmp
nop
mov
jnp
or
ljmp
ds
dec
mov
inc
call
insl
cmpsb
out
adc
lds
mov
imul
pop
loopne
xor
mov
mov
cmp
mov
arpl
aad
jnp
push
aad
sbb
les
sbbb
outsl
push
mov
xchg
dec
mov
aas
mov
int
cmc
sub
test
int
pop
xchg
sbbb
out
sub
cmp
incl
sahf
push
ret
jae
and
jns
jge
rcrb
or
jo
into
imul
lret
pop
xchg
das
fst
int3
adc
ret
icebp
insl
inc
test
mov
lds
jl
cmp
imul
ret
xchg
out
and
mov
push
and
cwtl
sbb
xchg
mov
mov
outsb
mov
cld
je
mov
clc
xchg
sbb
lods
xchg
addr16
sbb
sbb
mov
and
jl,pn
pop
pusha
fdivr
xlat
cmpsl
adc
or
fisubl
loopne
adc
or
add
push
adc
pushf
mov
ret
andb
push
sar
push
fwait
jbe
sub
icebp
insb
lods
jp
hlt
sub
adc
lret
das
mov
jnp
loope
jmp
movsl
jp
cwtl
addb
add
dec
mov
or
inc
cmpsl
mov
cmp
test
jecxz
fcompl
test
xchg
int
jbe
movl
jmp
sbb
gs
push
shrb
xchg
pop
xchg
push
push
push
mov
fcomps
pop
lahf
xchg
ja
push
or
adcl
int
loope
fnstenv
mov
jbe
cmp
out
push
test
sbb
lods
pop
cmpsl
out
xor
inc
dec
pop
dec
lock
daa
sub
roll
jae
dec
lods
lods
fisubl
push
call
popa
loope
fisubrl
lods
mov
push
mov
dec
jno
stos
dec
pop
addr16
cmp
jle
ljmp
ja
loope
test
push
imul
mov
cmp
inc
cmp
jbe
test
shrl
jnp
sarb
xchg
mov
cmpsb
and
push
fidivrs
xchg
addr16
fstl
aad
pushw
cmp
sahf
std
test
in
lods
xor
js
test
bound
xor
add
mov
mov
inc
xchg
add
or
outsl
in
cwtl
loopne
pop
inc
jae
daa
or
dec
clc
loop
into
push
adc
cmp
out
adc
inc
pop
sbb
xchg
fwait
lcall
push
lret
sbb
push
push
mov
pusha
repz
cli
lret
mov
in
test
lods
inc
dec
mov
cld
dec
loop
imul
add
rorl
int3
sub
mov
jbe
push
lret
insb
sub
cmp
xor
push
xor
mov
mov
push
gs
lds
data16
or
stc
dec
mov
into
inc
ljmp
jle
out
pop
and
jbe
fsubrp
xchg
jg
bound
sub
pop
pop
movsl
loope
rolb
mov
lret
mov
sbb
pop
rorl
dec
inc
inc
mov
out
adc
pop
and
xor
xchg
push
push
aad
inc
ja
test
adc
pop
add
shrl
mov
push
loopne
mov
lds
ljmp
lret
mov
lcall
cmp
jo
sub
pushl
xchg
fists
dec
insl
fistpll
add
sti
jg
sub
outsb
testb
jl
or
test
push
jp
hlt
sub
cmpsb
ljmp
sbb
repz
cmpsb
push
cmpsl
fsubs
stos
mov
inc
popa
fnstenv
or
pop
pop
sbb
sub
nop
out
inc
add
adc
add
mov
xchg
mov
mov
icebp
cs
inc
add
arpl
sti
arpl
mov
xchg
pop
fwait
mov
mov
mov
mov
mov
mov
dec
sub
orb
in
pminub
js
jb
cwtl
cmc
jmp
xchg
inc
and
ja
dec
mov
pop
ljmp
fcmovbe
iret
lcall
rolb
fwait
rorl
or
in
and
nop
adc
inc
ret
cwtl
mov
sbbb
and
lret
aad
xchg
in
outsb
in
mov
pop
movsl
push
sub
dec
adc
cltd
mov
test
popa
pop
and
cmp
sub
repnz
push
ds
aad
mov
fcompl
std
iret
or
popf
idiv
sub
jbe
cmp
dec
push
sub
insb
movsb
or
movsb
in
and
sub
daa
and
push
nop
loope
mov
adc
pop
xchg
xor
adc
and
popa
inc
mov
inc
mov
mov
in
xorl
push
fildl
lock
cmpsl
pushf
fiadds
xlat
xchg
test
aaa
jo
cmpsl
inc
ret
lahf
test
aas
xor
mov
sbb
repnz
jns
lds
test
jge
sub
ss
test
inc
pop
mov
xchg
xchg
aas
es
jae
pop
adc
in
into
or
sti
lret
adc
sbb
in
pop
stos
cmpsb
mov
imul
fcompl
mov
insl
cli
and
mov
fdivs
ja
std
out
xchg
shl
cmpsb
add
lock
xchg
adc
xchg
push
xchg
fstl
cltd
mov
cli
pop
lret
test
mov
clc
xlat
adc
and
fsubrl
je
outsl
pop
in
dec
xchg
ret
or
or
nop
imul
scas
push
fsub
xchg
outsb
xchg
test
out
push
testl
push
out
in
cwtl
data16
mov
or
js
loope
dec
outsb
cmp
mov
add
mov
es
cld
xchg
xchg
xchg
and
shrl
sarb
dec
pop
jp
pop
pop
mov
pushf
push
fcomps
sub
add
test
pop
xchg
push
addl
cs
adc
pop
dec
bound
jg
shlb
inc
leave
fwait
mov
pop
clc
push
enter
cmp
orl
clc
xchg
sahf
push
pop
jp
inc
xlat
and
add
add
adc
xchg
adc
mov
jmp
mov
pop
ret
sbb
sbb
dec
cmc
jno
xchg
sub
push
pop
in
xchg
inc
fsubr
mov
pop
dec
xlat
adc
out
cmp
fdivs
movsb
inc
icebp
leave
push
push
pushf
mov
pop
ret
jno
imul
test
popa
inc
roll
cli
pop
or
nop
mov
sub
and
imul
push
or
mov
add
xor
mov
push
push
rorb
out
mov
mov
jge
mov
push
test
dec
leave
jmp
faddl
rcrb
xor
sar
and
adc
dec
jmp
repz
sub
mov
out
jle
dec
push
imul
xor
cmp
mov
mov
push
in
roll
add
xor
xchg
jge
jne
into
adc
mov
jp
xchg
xor
fildl
test
fwait
sbb
rcll
ret
xchg
out
push
outsl
or
push
xchg
mov
jecxz
sub
or
negb
jae
mov
or
iret
scas
mov
loopne
stc
notl
pop
push
mov
ret
arpl
jp
ficomps
cmp
stc
and
sub
outsb
or
mov
mov
mov
push
iret
movsb
sarb
out
aaa
xchg
xchg
jge
movsb
adc
fcmovnb
mov
cmc
mov
add
in
push
rol
push
loop
clc
cmp
adc
jnp
and
inc
adc
jle
inc
ret
mov
add
lcall
cmp
icebp
mov
stos
sub
repz
mov
mov
mov
fldt
jnp
sbb
sbb
mov
dec
push
dec
daa
mov
popf
pusha
mov
shrb
lahf
cmp
clc
and
sbb
mov
mov
outsl
cmp
add
mov
lret
mov
inc
jmp
pop
rol
push
int3
js
dec
adc
int
dec
mov
stos
in
or
mov
cmpsb
inc
loope
daa
ljmp
jge
inc
call
cmp
mov
lahf
dec
and
xorl
cmp
and
cmpsl
loopne
data16
dec
pop
jae
stc
xor
scas
adc
adc
cli
fs
ds
movsl
lahf
cmp
js
or
sub
mov
cwtl
jne
js
or
pop
cwtl
jge
ud2
xlat
addl
scas
fstpt
bound
sub
cmp
popf
movsb
call
leave
push
add
mov
scas
adc
push
pop
mov
and
fiaddl
push
push
push
inc
mov
dec
push
xchg
jl
pop
aad
xchg
jg
pop
push
pop
pop
jo
addb
addr16
int3
and
pop
pushf
cmpsl
inc
inc
push
pop
sbb
sbb
mov
sub
or
addr16
dec
add
mov
imul
lock
jmp
pop
pop
xchg
pop
jns
xor
cltd
repz
in
push
jo
sub
xchg
inc
push
and
sarl
jl
mov
outsb
test
push
jne
fwait
jb
enter
jl
cmc
imul
ljmp
scas
and
cmp
jecxz
loope
repnz
adc
arpl
icebp
jns
adc
cmp
inc
mov
xchg
minps
cmc
sbb
push
rclb
inc
fadd
icebp
into
ret
jp
adc
push
outsl
cmpl
jo
daa
cmpsb
in
sti
mov
push
jbe
scas
sbb
incb
rolb
or
popa
mov
mov
mov
nop
sbb
push
add
imul
dec
bound
mov
adc
sbb
fisttpl
push
pop
add
pop
inc
ret
mov
jg
ljmp
push
out
fldenv
mov
sbb
mov
aam
pop
lahf
pop
push
loopne
add
jle
movsl
add
int
xor
cmp
les
mov
mov
rep
in
mov
pop
pop
lods
fucomp
push
pop
repnz
dec
dec
adc
pop
popf
dec
adc
sub
bound
jp
jo
sbb
adc
sbb
mov
add
popf
cmp
mov
mov
jl
mov
nop
push
add
inc
scas
jbe
jns
mov
in
cli
and
repnz
jne
pop
jmp
out
and
and
cmp
fcomps
inc
stc
jo
cmp
pop
xor
dec
mov
testl
out
clc
test
je
sbb
sub
sbbl
outsl
cmp
cmp
pop
lods
cmpb
mov
push
push
jp
add
jae
shrb
cltd
mov
cmp
clc
int3
sub
loope
xchg
sub
push
das
loopne
add
xchg
mov
jecxz
fildll
mov
fdivs
inc
test
lret
outsb
mov
ljmp
scas
jle
gs
mov
div
cmp
sbb
cmc
jg
push
popa
jnp
hlt
js
mov
pop
add
dec
and
fiaddl
pop
enter
inc
shll
fistpl
and
pop
jbe
dec
sub
xchg
fisttpll
jg
xor
inc
in
xlat
cmp
aam
push
rol
pusha
sbb
jg
pop
and
cmpsl
adc
push
add
bound
inc
xchg
sub
scas
rcr
lea
mov
push
pop
in
and
or
jo
popa
iret
je
pop
call
stos
inc
insl
ret
mov
jle
cmp
xor
mov
add
lret
pop
fcompl
pop
cwtl
xlat
xor
or
loope
xor
dec
pop
sbb
inc
imul
mov
add
decl
cmp
nop
xor
movsl
push
push
mov
mov
fiaddl
mov
aaa
and
rolb
pop
aaa
cmp
insb
xor
or
repnz
mov
enter
jb
jns
aas
ret
cwtl
add
mov
mov
and
inc
mov
movsb
mov
push
ja
sub
das
inc
jno
adc
mov
pushf
or
sbb
push
jg
sub
loop
fcmove
ret
addr16
add
mov
add
pop
jmp
xor
sahf
fimuls
cmpl
push
mov
push
dec
jnp
dec
iret
and
sub
les
jbe
dec
adc
insl
test
and
jns
xlat
jns
cs
jmp
sbb
insl
ficompl
lods
add
adc
popa
push
into
repnz
jp
out
dec
mov
mov
lret
cs
fsubp
cmp
cmp
popa
push
sahf
aad
xor
cli
inc
fimull
sub
jle
out
pushf
fadd
hlt
pop
insb
notb
push
sub
add
jae
scas
mov
push
inc
jmp
jl
int3
mov
loope
std
pushf
fcom
adc
inc
jns
jae
clc
call
rcrb
lock
mov
fimull
and
add
cmp
rolb
cwtl
decb
sub
jns
adc
nop
push
xor
dec
dec
cld
mov
lret
lret
jo
in
and
jmp
sub
loope
sub
cmpsb
rcrl
pop
in
cwtl
dec
sub
imul
std
in
xchg
dec
popf
or
outsb
cwtl
push
push
int
pop
sahf
mov
push
push
jle
scas
inc
cmp
aaa
cmp
es
fimull
jecxz
punpckldq
notb
ror
fistl
hlt
or
inc
mov
in
lret
mov
xchg
mov
mov
inc
test
jno
aad
cltd
test
dec
imulb
xchg
and
aam
cmp
or
sbb
push
pop
xorl
fcomps
dec
sbb
out
fcom
stos
cli
lret
test
jne
inc
cmc
mov
jg
int3
or
pop
stos
push
or
popa
clc
movsb
aaa
adc
fmull
dec
push
hlt
dec
xor
push
jne
hlt
fisttps
push
jle
mov
push
mov
and
enter
push
jno
jmp
mov
pop
jb
out
mov
inc
mov
add
xor
pushf
push
and
mov
dec
jbe
mov
rcrb
add
test
mov
and
pop
sbb
addr16
jb
jbe
lret
push
push
shr
ret
nop
dec
adc
mov
and
pop
adcl
mov
xchg
push
lahf
xor
rorl
add
push
add
loope
jl
push
scas
mov
push
xchg
cmp
jno
ljmp
stos
jmp
cltd
cltd
xlat
lahf
packsswb
pop
adc
sub
and
mov
mov
jns
xchg
or
xlat
push
daa
add
out
inc
pusha
fwait
icebp
cmpsb
test
pop
lea
or
push
push
push
das
cwtl
push
std
icebp
xchg
iret
sti
cmp
cmpsl
mov
mov
or
iret
sub
out
faddl
enter
cwtl
stos
addr16
lods
jmp
mov
push
jle
popa
hlt
sbb
and
pop
xor
push
mov
movsl
pop
ja
mov
xchg
nop
lock
cltd
movsl
sub
dec
insb
in
stos
pop
sbb
out
mov
jecxz
xor
add
mov
inc
imul
pusha
xor
xchg
lret
int
addr16
test
mov
test
sub
call
shll
mov
stos
leave
xchg
jle
mov
daa
in
inc
mov
outsb
shrl
ja
cmc
or
scas
xor
dec
mov
cmp
test
rclb
lret
pop
add
mov
or
sub
dec
lcall
icebp
sbb
push
je
shrb
jge
jmp
lret
outsb
into
roll
push
je
sbb
mov
in
adc
jo
xlat
sbb
fidivl
push
lret
daa
xchg
mov
mov
insb
insl
mov
adc
pop
add
sub
jl
daa
fdivr
stos
cmp
mov
or
xor
imul
out
mov
cmp
or
pop
loopne
lock
mov
sbb
pop
adc
divl
mov
lcall
sbb
cs
orb
adc
pop
sub
pop
cmp
xchg
shlb
in
jnp
in
cmp
pop
repnz
gs
aas
mov
clc
movsb
jge
sbb
and
das
repnz
sub
fwait
push
mov
push
mov
bound
mov
fcompl
test
mov
outsb
cld
mov
push
jnp
mov
xor
hlt
pop
shll
pop
cmp
in
ja
xchg
aas
repnz
dec
pop
mov
loop
pusha
or
jne
fcoms
jmp
insb
jl
inc
mov
shl
aam
loop
dec
das
pop
pusha
adc
pop
xchg
dec
mov
insb
fldcw
fisttps
fwait
or
int
in
sub
movsl
and
test
pop
and
adc
push
stos
sbb
ds
pop
xor
lcall
leave
xlat
mov
repz
mov
xchg
mov
xor
push
push
pushf
fs
mov
imul
mov
insb
push
lcall
iret
push
test
arpl
lcall
fstps
jbe
mov
mov
push
inc
clc
and
add
inc
add
rorb
andb
and
sub
aam
add
dec
dec
or
sbb
in
or
pop
dec
test
adc
pusha
pop
in
out
mov
stos
jge
cli
leave
sarl
out
xchg
pop
sub
inc
arpl
push
xrelease
dec
rorl
pop
lahf
enter
cs
mov
inc
cmp
xchg
psadbw
loopne
lret
andl
pop
iret
lock
lock
cli
dec
cmp
cmp
or
lahf
lods
sbb
jmp
cltd
lret
rorb
and
push
das
jle
xchg
push
push
mov
testb
mov
iret
inc
fnstcw
sti
sub
outsb
fwait
xchg
shlb
xchg
jne
or
sub
mov
mov
and
fnsave
mov
in
test
adc
add
xchg
pop
mov
mov
adc
adc
arpl
stc
out
jmp
test
repnz
mov
call
aaa
sbb
imul
dec
jmp
imul
shrb
imul
inc
or
push
push
negl
inc
cmp
shrb
test
leave
add
inc
push
fwait
cmpsl
scas
inc
add
adc
pop
push
je
ss
pop
in
pop
mov
inc
mov
test
stc
dec
stos
push
insb
push
add
scas
aad
aaa
sarb
add
push
mov
pop
aaa
arpl
jle
psubq
mov
fisubl
mov
inc
jp
test
mov
enter
les
jae
out
sub
jae
jo
fstp
mov
notl
pushl
sub
mov
inc
mov
test
xchg
and
dec
xor
in
jle
mov
inc
push
stc
inc
jno
jg
or
mov
jge
pop
and
xor
and
es
rcrl
cs
sbb
cmp
fwait
aam
stc
js
xchg
in
pop
int
jne
aad
lret
shrb
icebp
add
ret
fdivr
in
nopl
xchg
dec
adc
add
jne
loop
mov
sbb
push
sub
pop
in
sub
lods
in
not
mov
or
xrelease
shr
div
cli
inc
addr16
imul
movsb
in
jge
mull
les
lret
clc
les
lret
repz
imul
dec
popa
sahf
sti
shlb
call
cmp
pusha
lock
push
sbb
incb
xor
je
dec
lret
jb
xchg
inc
adc
jp
sbb
pop
lret
stos
sub
or
sbb
adc
mov
inc
out
mov
loope
pop
das
cmpsb
addb
imul
fnstsw
test
jle
xor
and
push
test
lods
lret
and
and
ret
mov
jecxz
push
iret
in
sub
push
pushf
in
xlat
fdiv
int
outsb
jmp
xor
int
xor
rcll
jmp
mov
pop
inc
movsb
jge
xlat
cs
or
and
mov
cmpsl
add
je
mov
inc
out
je
cltd
pop
push
jle
pop
inc
mov
cmp
in
addb
ss
icebp
cmp
cmpsb
aaa
mov
addb
ret
sar
ljmp
sub
sbb
stc
movsb
jnp
popf
push
call
insb
loopne
loope
je
js
outsb
xchg
jns
add
insl
decb
mov
sbb
add
lret
pop
cmc
adc
fcom
mov
xchg
test
ja
icebp
cs
lcall
mov
adc
xor
sub
inc
repz
pushf
add
mov
aas
and
xor
ret
leave
lret
iret
sbb
jp
add
imul
out
popf
jbe
test
xchg
cltd
movsl
or
ret
in
mov
test
xchg
sub
lods
mov
hlt
loop
outsb
ret
fidivs
mov
pop
out
mov
sbb
jle
and
fwait
pop
popf
lret
lds
xchg
aas
cmp
lods
loop
mov
push
mov
jne
xor
in
ds
loope
adc
mov
movsl
adc
or
fsubrl
sub
jl
les
imul
insl
popa
jecxz
fs
mov
out
fs
pop
xor
adc
mov
xchg
clc
dec
fnsave
sub
leave
lods
dec
dec
add
cmp
inc
xchg
inc
push
lea
pop
cmp
fnsave
enter
shl
inc
xchg
mov
add
flds
iret
jnp
or
cli
ja
movsl
inc
pop
add
sbb
sbb
aad
mov
push
inc
in
imul
xor
cmp
xor
frstor
xchg
or
stc
xchg
mov
call
push
stos
jmp
lods
notb
leave
inc
es
rcrl
sub
lds
fldt
cmp
out
dec
mov
rcr
jl
aam
call
inc
cwtl
add
test
and
scas
mov
mov
test
int
not
sbb
jb
bound
jne
mov
adc
test
inc
in
fldenv
mov
cmpps
shll
sbb
sub
pushf
je
xor
adc
aam
xchg
movsl
jbe
inc
push
xlat
lods
nop
inc
mov
xchg
in
testl
in
adc
xlat
ret
js
dec
xor
into
push
jp
fwait
xchg
mov
stos
inc
cli
push
pop
dec
push
fst
cmpsl
add
adc
pop
xchg
mov
scas
in
es
mov
jne
test
aam
sub
cs
lods
mulb
and
jecxz
or
inc
addr16
xor
fwait
popf
mov
ror
mov
leave
movsb
test
push
jo
adc
mov
fildll
push
aam
loop
ret
dec
nop
mov
sub
stc
inc
sub
push
mul
mov
jge
pop
pop
int3
adc
mov
jle
dec
mov
inc
push
mov
mov
into
xor
mov
stc
sbb
js
sbb
sub
repz
mov
ret
xor
xchg
pop
mov
adc
push
imull
cmp
or
nop
adcl
imul
jmp
mov
lods
dec
xchg
jo
pop
nop
movsl
shll
pushf
rol
in
sub
dec
fnsave
cmp
push
add
rclb
xchg
pop
fisubl
test
idiv
stos
push
insl
push
push
pop
adc
push
fnstenv
and
sub
clc
sbb
push
and
and
and
or
movsl
sbbb
mov
mov
dec
sub
jmp
push
push
or
fwait
jne
sub
cmp
and
out
aas
mov
aad
lret
sbb
xor
pop
and
std
xchg
or
psubw
push
fsts
fwait
mov
int
push
les
xor
add
arpl
jmp
dec
mov
insb
inc
lcall
mov
aam
inc
sbb
test
mov
out
pop
or
and
stc
ds
stos
dec
inc
mov
mov
ret
jnp
mov
filds
fadd
xor
jg
jns
mov
and
xchg
ja
sbb
jle
and
test
cmp
mov
fwait
adc
inc
roll
test
lea
add
mov
stos
nopl
leave
mov
scas
sub
jb
js
icebp
cmp
add
fs
jmp
mov
mov
mov
nop
adc
adc
add
mov
scas
lds
and
test
fdivrl
loopne
xor
cltd
sti
pop
xchg
sbb
cmp
iret
out
cwtl
or
push
push
pop
gs
gs
push
lcall
mov
cmp
pusha
movsl
hlt
adc
scas
cmpsb
lods
sbbl
out
daa
jmp
adc
sub
add
lods
push
jmp
les
jb
mov
inc
add
gs
ja
lcall
mov
pop
or
sub
sub
pop
flds
hlt
push
mov
shll
adc
daa
ret
loope
dec
test
sbb
subl
aad
out
scas
inc
shlb
adc
fidivrl
xor
mov
push
dec
imul
or
shl
mov
mov
mov
mov
mov
sub
repz
cmp
leave
les
rol
jmp
xor
mov
xchg
shrb
or
inc
pop
stc
fldenv
leave
dec
aam
add
ja
popa
and
cmp
sub
cmp
repnz
lcall
sub
sbb
in
jl
loopne
cmp
inc
adc
aam
insl
cli
bound
push
in
cli
fdivrs
xchg
clc
lods
mov
insl
mov
xchg
push
les
sub
push
sub
mov
push
jnp
movsb
movsb
addr16
in
es
scas
movsb
insl
mov
mov
lock
push
xchg
adc
arpl
shrb
xor
mov
test
and
mov
jmp
inc
sarb
jnp
decl
out
call
xor
jg
add
xchg
xlat
adc
int3
shlb
das
sbb
and
inc
sbb
ljmp
lock
fstpt
mov
loope
pop
into
rcrb
jnp
rclb
lahf
ffree
fsubs
or
notb
xor
and
mov
icebp
rorl
sub
mov
xchg
mov
mov
xchg
pop
adc
mov
test
mov
and
data16
dec
add
sub
ds
add
loope
pop
into
jge
or
mov
jp
sbb
shrb
loopne
outsb
add
jae
call
inc
pop
in
jbe
push
xchg
loopne,pn
cmp
mov
scas
xor
inc
loopne
or
sahf
lds
dec
fisubrl
ljmp
scas
sbb
jmp
in
jge
aam
cmp
sub
add
pop
mov
sub
adc
cmp
mov
and
insl
ja
jmp
or
mov
sti
inc
imul
fmuls
das
rolb
pop
dec
repz
mov
pop
jno
xlat
mov
enter
test
xchg
xor
push
xchg
hlt
into
or
rcrb
mov
mov
adc
repnz
ret
cmpb
jo
movsb
mov
dec
out
mov
fstps
mov
xchg
pop
rcrl
lods
mov
pop
inc
xchg
mov
arpl
movsl
fs
pushl
mov
jns
aaa
aas
ret
sbb
jno
out
les
imul
cwtl
add
test
ret
xor
int
in
jae
les
pop
cmp
dec
pusha
insl
xor
aad
outsb
movsb
inc
dec
xchg
pop
cwtl
mov
adc
outsb
imul
xchg
test
pop
fimuls
lock
sub
pop
jnp
lahf
jns
or
sbb
push
dec
data16
xor
jp
inc
mov
mov
jmp
sahf
push
jmp
sbb
mov
sub
bound
push
or
and
xchg
clc
lea
loopne
in
sub
pop
mov
outsl
mov
and
sahf
test
mov
or
jg
shr
adc
mov
cli
and
rcl
mov
jno
test
cmpsb
fdivs
out
aas
insb
adcl
mov
inc
xchg
out
je
mov
out
jns
push
in
push
out
pop
push
mov
xor
popa
aad
add
cltd
cmp
out
mov
add
js
jecxz
mov
hlt
test
stc
lock
fcomp
adc
lods
int
stos
addb
jno
leave
test
mov
jb
mov
add
jbe
lahf
imul
je
lods
mov
inc
pop
pop
push
and
xchg
xchg
mov
fwait
cmc
jbe
stos
and
iret
aas
inc
cmp
shll
inc
jl
outsb
es
lock
into
push
rcr
sbb
pop
pop
xor
sub
scas
imul
xor
xchg
or
rcll
sbb
sub
fwait
mov
loopne
sbb
loopne
and
leave
push
ja
cltd
lock
inc
dec
imul
out
cmp
inc
scas
mov
leave
ja
pop
xchg
mov
sub
push
popa
push
js
sub
les
sub
lods
add
fwait
sbbb
subb
adc
iret
in
loope
popa
cmp
aas
xor
lcall
and
xchg
aad
dec
movsl
push
insb
stc
jns
sbb
mov
jmp
loopne
or
push
lea
enter
int
cmp
push
add
rclb
fs
cwtl
pop
fdivrs
push
daa
rclb
loopne
gs
jp
xchg
cmp
dec
sbb
jge
daa
adcb
sahf
dec
xor
push
sub
mov
push
mov
adc
and
mov
and
dec
xor
adc
inc
lea
ficomps
bound
lret
dec
aas
or
mov
sub
jl
aaa
adc
ds
mov
pop
mov
ljmp
aaa
dec
dec
and
mov
pop
rcll
mov
pop
push
mov
out
and
add
lret
lret
rorl
add
add
in
pop
cmp
cmp
test
lahf
jne
inc
adc
flds
push
or
hlt
sub
push
push
sbb
or
jl
in
mov
imul
sbbl
pop
push
pop
xchg
outsb
les
jp
xlat
ret
dec
pop
xor
dec
add
and
xor
mov
int
lahf
jns
adc
push
pop
push
cmp
push
divl
pop
inc
lock
mov
sbb
lock
sub
pop
into
ja
ret
sbb
adc
push
push
shlb
cmc
push
out
in
pop
fdiv
inc
xlat
shl
mov
add
jb
imul
pop
and
pushf
push
or
or
push
pop
lock
adc
mov
lcall
mov
mov
jne
sub
rclb
xor
push
push
flds
inc
add
icebp
mov
mov
or
movsw
ja
sub
dec
mov
aas
mov
adc
mov
mov
stc
push
pop
addr16
jo
add
outsl
push
ficomps
ja
rcll
insl
adc
dec
mov
cmp
inc
and
sbb
dec
hlt
inc
stc
icebp
inc
mov
cmp
mov
dec
mov
mov
or
repnz
jne
in
adc
loop
pop
add
fwait
icebp
stos
push
sbb
jl
push
shll
leave
jle
out
test
xchg
dec
jmp
mov
out
sti
or
add
cwtl
insb
pop
nop
jl
or
sbb
pusha
aas
or
pop
dec
mov
in
enter
gs
movsb
stos
fidivrs
mov
sarl
inc
test
das
sub
inc
mov
out
in
inc
fwait
daa
sysexit
mov
mov
cld
jecxz
out
enter
xchg
pop
pop
movsl
push
push
xchg
mov
push
pop
aaa
or
int
jno
data16
jb
sbbb
call
imul
mov
mov
jg
jae
mov
loope
inc
incb
pop
pop
out
inc
push
or
fldcw
aaa
inc
sbb
cmp
pop
lods
adc
icebp
mov
in
test
icebp
js
sub
shl
idivb
inc
or
mov
cmpl
cmp
sbb
add
dec
mov
call
lahf
mov
adc
lds
js
sub
mov
push
shr
cwtl
sub
jns
fnstenv
push
cmpb
mov
mov
call
sbb
inc
dec
inc
inc
inc
clc
push
cltd
pusha
les
hlt
and
cmp
xorl
xor
jb
rclb
faddl
daa
or
sti
mov
sbbb
in
outsb
sub
dec
jecxz
test
cmp
stos
hlt
and
adc
hlt
mov
out
pop
mov
ja
mov
or
shlb
fmuls
and
push
dec
arpl
bound
mov
out
fs
inc
fbstp
aam
setge
push
cld
push
in
repz
ss
fistpll
inc
xchg
push
jge
lods
shl
xor
mov
mov
dec
nop
sarl
pop
jne
lods
rorl
pop
cmc
jl
xchg
xchg
jl
mov
or
in
sub
push
push
mov
xor
repnz
mov
mov
data16
push
pop
xchg
fnsave
sub
push
jns
dec
inc
and
and
fs
fmull
addr16
adc
movsb
adc
in
cmp
xor
inc
sbb
mov
jecxz
push
test
ds
or
mov
push
icebp
inc
data16
std
jmp
mov
push
lods
mov
roll
push
call
sub
jmp
sbb
xor
in
daa
ret
fadd
cmp
data16
in
push
outsb
pop
inc
xor
data16
fcomps
daa
mov
loop
push
sbb
lock
push
inc
fstpl
sbb
jl
xchg
icebp
sbb
int
add
inc
ret
sub
and
lret
xchg
push
imul
lahf
fs
enter
scas
or
push
aam
pop
pushl
fists
jecxz
fisubrl
mov
add
std
pop
push
dec
mov
cmc
movsl
pop
mov
sub
jnp
xchg
fcomps
add
mov
testb
push
dec
test
inc
test
push
in
adc
xchg
pop
jecxz
jl
pop
cltd
jg
sti
cwtl
pop
enter
nop
ficoms
cmp
xchg
push
adc
lods
testb
imul
lahf
aad
mov
or
push
jnp
mov
mov
pop
add
fnstcw
jl
and
scas
mov
lock
sti
cmc
loop
and
fdivrp
lahf
cltd
repz
mov
adcl
jge
or
mov
test
clc
cmp
sti
xchg
jne
adc
cld
nop
lcall
mov
loope
mov
or
stos
loope
dec
in
out
je
pop
fdivl
pop
repnz
mov
mov
sub
add
xlat
cmpsb
scas
pop
adc
hlt
mov
xchg
add
xchg
sub
loop
int3
push
add
push
les
lods
stos
lret
loopne
and
test
insl
jmp
stos
test
popf
cmp
insb
jae
cmc
rcrb
popa
xor
cmp
stos
pushf
or
jl
outsl
push
push
sub
mov
test
and
subb
inc
or
adc
sbb
add
loope
push
orl
mov
push
imul
aam
div
loop
in
rcrb
mov
ljmp
add
xchg
enter
mov
filds
rcll
dec
ret
aam
cmpsb
lds
jae
mov
push
mov
fisttpl
in
mov
in
ljmp
insb
pop
dec
dec
aas
jnp
ficoml
xorb
inc
xlat
andl
test
jnp
mov
bound
and
shlb
arpl
sub
add
xchg
out
dec
repnz
loope
int3
sbb
xor
repz
xor
and
out
push
push
lret
cmpsb
test
in
stc
cld
sub
add
outsl
add
fimull
and
testb
imul
or
insb
dec
insl
jl
loop
sub
inc
es
movsl
pop
sbb
imul
test
pop
aaa
mov
push
and
lret
outsl
sbb
xor
inc
mov
mov
icebp
xchg
add
mov
push
popa
out
test
out
mov
mov
ds
fcmovb
lock
add
and
aad
ds
test
mov
shl
cs
repz
pushf
loop
cli
inc
imull
jo
hlt
dec
fsubrs
jns
adc
push
push
call
mov
lock
outsl
icebp
nop
pop
testb
sub
push
fdivr
shr
test
jnp
mov
outsb
xor
jge
nop
mov
lcall
shll
rclb
jg
jecxz
jp
mov
icebp
or
xchg
push
push
bound
ror
mull
in
or
bound
or
stos
xor
xor
cli
out
inc
std
xchg
das
leave
push
mov
push
add
in
call
dec
iret
or
js
daa
sub
and
stos
sub
inc
rorb
das
inc
jno
loop
data16
push
pop
mov
xor
cwtl
or
adc
bnd
and
shll
test
fs
in
cmp
add
and
add
outsb
sub
lcall
pop
loope
leave
pop
test
in
jo
sarb
push
mov
int3
dec
mov
jge
and
xchg
test
aam
jbe
bnd
into
mov
in
ds
push
dec
iret
adc
or
hlt
notl
xor
ror
out
pop
dec
mov
pop
fbstp
dec
mov
icebp
clc
test
imul
data16
fdivr
jo
into
push
fcmovne
and
cs
add
jmp
cld
jae
sub
adc
enter
xor
sbb
xchg
movsl
mov
push
sub
dec
pop
cmpsb
pop
hlt
mov
push
mov
loop
into
add
inc
leave
add
xor
sbb
dec
pop
add
rolb
xchg
and
repnz
cmp
rcrl
pop
rcl
add
xchg
filds
and
out
cli
add
sbb
flds
xchg
push
jl
push
scas
into
scas
insl
out
push
pop
mov
cltd
add
rol
loopne
stc
fisubrl
lret
mov
lcall
xchg
rcll
inc
hlt
push
and
stos
icebp
cltd
xchg
sbb
sbb
or
sbbb
lock
lret
pop
insl
adc
jns
inc
push
sub
das
xchg
imulb
lret
ret
imul
jg
outsl
and
cmc
inc
pop
testl
jp
mov
test
add
jp
lahf
xor
xor
idivl
dec
push
adc
in
jns
mov
andl
sub
cmp
push
movsl
mov
dec
adc
push
test
je
jecxz
cmpsl
ror
fwait
xchg
pop
pop
test
add
ds
cmp
cmc
or
add
add
pop
lods
and
cltd
dec
adc
pop
jecxz
jb
sub
sub
outsb
test
xchg
cmp
or
mov
or
imul
icebp
mov
shrb
mov
cmc
or
pushf
cli
jmp
fnsave
mov
fdiv
cmp
divl
mov
xchg
fstl
leave
in
xchg
out
jl
lea
push
dec
jns
shr
cmpb
fisttpl
out
orb
iret
or
mov
push
lock
mov
lret
mov
sbbb
icebp
es
jmp
mov
dec
inc
lret
out
cld
and
stos
cmp
jle
xchg
push
or
leave
push
jle
adc
ficomps
repnz
or
lock
mov
dec
packsswb
cmp
bound
aam
cmc
popa
je
jo
dec
andl
iret
pop
aad
xchg
int
mov
int
jbe
lcall
mov
in
rorb
movsb
adc
ja
stos
mov
cmp
xorl
hlt
mov
push
test
fs
es
lds
or
leave
mov
xchg
fidivl
js
daa
vpshlq
pushf
lret
xor
mov
movsb
dec
or
mov
faddl
inc
int
out
jmp
popf
mov
cmc
jns
jl
das
daa
sbb
mov
sahf
aam
fcomps
lds
scas
int3
cmp
cmc
adc
hlt
cmp
cld
cli
cmp
in
mov
jns
lret
cmp
and
mov
fbld
inc
push
add
outsb
in
loope
jp
ds
jp
sbb
addr16
int3
das
sbb
pop
xor
mov
mov
sub
mov
push
repnz
xor
std
insb
add
cs
ja
mov
push
cmp
insl
std
and
and
fldenv
test
adc
into
adcb
fnsave
xor
shll
push
ret
sub
mov
fsubl
jmp
jbe
test
and
paddusw
xor
push
cwtl
pop
inc
mov
mov
jecxz
out
iret
loop
out
dec
cmp
test
insb
cli
in
shlb
sti
adc
sub
out
add
insl
cs
xorb
dec
mov
or
push
dec
push
xor
or
mov
stc
push
xor
loopnew
hlt
mov
test
imul
addr16
xchg
cld
outsb
sbb
arpl
lret
mov
pop
mov
cmp
add
shlb
movsb
pop
aas
test
test
or
dec
dec
push
mov
into
les
or
sub
mov
mov
cwtl
jge
xchg
jle
cs
jecxz
xchg
add
int3
cmp
inc
xlat
outsb
inc
jno
cwtl
jg
ret
scas
ja
lret
push
mov
jbe
imul
and
test
sbb
or
adc
scas
adc
lock
and
cmp
sbb
sbb
xchg
inc
jp
cld
jns
bnd
sti
jecxz
rcrl
xor
in
xor
arpl
mov
adc
inc
and
rorl
out
mov
lret
xor
cmpsl
inc
leave
jmp
fcom
daa
and
inc
mov
test
cmc
sbb
dec
xor
cs
pop
lcall
mov
add
inc
lret
and
fwait
sti
xor
jl
jg
aad
jo
inc
je
and
sarl
daa
fwait
call
testl
jnp
cs
test
test
cmp
or
hlt
add
ja
repnz
in
push
dec
lahf
loopne
dec
in
jo
repz
cmp
mov
fstpl
xchg
adc
int3
pushf
pop
enter
repnz
inc
or
mov
in
mov
mov
ja
mov
ret
jb
push
int
inc
stos
fsubl
push
mov
push
cmp
jmp
je
pop
push
mov
lret
push
mov
xchg
inc
add
xchg
scas
cwtl
push
push
lret
cs
sub
mov
sbb
xor
push
rclb
les
loopne
fwait
movsl
aaa
fistl
xor
loop
call
pop
movsb
fmull
add
push
call
popf
cli
rcl
test
adc
das
jle
add
inc
out
sbb
notb
sbb
jp
xchg
cmp
push
and
sbbl
jecxz
xchg
fdiv
dec
push
cmp
adc
movsl
imul
adc
or
int
ss
jmp
fmull
cmp
addr16
das
or
xor
lea
addr16
xor
icebp
push
fistpl
mov
lahf
cli
inc
les
add
inc
pop
gs
pop
sahf
mov
inc
or
ds
leave
jl
pop
mov
mov
mov
addr16
out
dec
std
and
fisubrs
mov
test
push
out
xchg
push
nop
in
or
je
adc
push
adc
pop
in
pop
out
cmp
push
mov
add
mov
movsb
ss
or
nop
dec
mov
or
imul
arpl
mov
cs
js
ret
mov
fcoms
iret
lret
popa
pop
sbb
sub
push
sbb
add
xchg
sub
sbb
inc
mov
xor
cmp
not
mov
and
mov
mov
xor
jb
lea
dec
jae
and
mov
jp
or
pop
loop
jmp
scas
sub
push
and
lods
dec
in
insb
sahf
jns
out
pop
xlat
lsl
mov
out
icebp
in
test
fwait
aam
rorb
cmp
xor
push
dec
mov
cmp
pop
xor
add
push
add
iret
xor
lds
in
sbb
insb
pop
dec
test
hlt
pop
dec
aad
add
repnz
sbb
lcall
lods
pusha
mov
sbb
sbb
mov
dec
xor
inc
cmp
jge
lods
imul
jecxz
mov
mov
fstl
xlat
cmp
and
xor
mov
rcr
and
pop
lds
dec
inc
xor
or
ss
dec
scas
xor
pushf
fwait
mov
jnp
fistpll
icebp
outsl
jge
mov
mov
pop
inc
or
jge
fisttpll
fldcw
je
add
add
insl
fistl
movsl
lods
shl
sbb
dec
cmp
std
insl
and
lock
add
icebp
xchg
lds
and
dec
ret
add
imul
aam
hlt
rcrb
or
pop
push
add
stos
imul
add
push
pop
in
test
or
mov
fsubs
nop
dec
xchg
lods
mov
mov
sbb
jnp
and
xor
xchg
cmp
sbb
jne
pop
cmp
jnp
cltd
loopne
inc
sarb
int
add
repnz
out
jo
loopne
add
out
mov
xor
out
andl
ffree
sub
iret
add
jmp
pushf
dec
test
inc
and
inc
addr16
cltd
daa
daa
and
or
outsl
out
ret
mov
neg
setg
sbb
push
or
adc
cmp
in
inc
sbb
pop
xor
push
das
mov
movsl
xor
xchg
adcb
or
fwait
fs
and
imul
mov
pop
adc
sti
pop
sbb
cli
pop
into
cltd
iret
in
cmc
or
lods
int
and
jp
xchg
ljmp
ret
pop
shrl
add
clc
mov
jnp
add
dec
xor
hlt
pop
sub
out
notl
adc
pop
sti
push
cmc
bound
pop
insl
xchg
and
xor
mov
jnp
pusha
xor
mov
jb
test
lahf
shll
add
lcall
insb
imul
dec
out
cwtl
inc
mov
dec
jnp
jb
cmp
popf
cli
lcall
mov
cmp
xor
xchg
mov
add
ds
jmp
xchg
and
leave
movsl
sahf
jge
mov
inc
and
iret
mov
psubsb
jb
ficomps
xchg
pusha
jg
stos
xor
jb
je
lret
sub
scas
push
fs
add
into
lds
negl
pop
fimuls
xchg
cwtl
dec
xor
fists
ljmp
push
pop
inc
jl
jo
test
or
push
and
in
icebp
je
xchg
sbb
std
add
sbb
outsb
xchg
lret
sbb
mov
and
test
sbb
stos
cmp
sbb
xor
rcrl
inc
jnp
in
notl
mov
addr16
mov
ja
scas
pushf
mov
pop
xor
mov
mov
add
xchg
jle
mov
jns
sub
lock
in
mov
stc
ja
jo
loop
jle
fcomp
xor
and
cli
fldl
sub
arpl
rcr
mov
xchg
out
gs
push
sarl
mov
pop
jae
xor
es
xor
jl
xchg
pop
dec
mov
pop
pop
jb
adc
mov
rcll
aas
in
je
rcrl
sub
xchg
pop
hlt
push
push
sub
adc
add
fimuls
mov
and
mov
mov
dec
sbb
rolb
ret
mov
or
cmp
xchg
ljmp
pusha
cmp
pusha
out
adc
les
mov
or
lret
xor
dec
jno
cmp
push
mov
xorb
imul
add
fadds
mov
iret
test
shlb
ja
cmp
dec
sub
lods
push
pusha
jae
fcmovbe
mov
clc
adc
push
jne
push
push
fnstsw
shrb
add
adc
adc
add
loopne
mov
int
test
shr
rcrl
cmp
pop
xchg
mov
xor
and
mov
jnp
and
and
cmp
push
mov
mov
cmpsb
aas
cld
push
push
xchg
es
dec
pop
add
push
xor
test
pop
ffreep
aas
cltd
fmuls
out
pop
adc
lea
jae
movsl
push
js
rorb
shrb
dec
loop
fistl
call
xchg
cmp
es
scas
orl
rcl
push
xchg
mov
or
xchg
test
jecxz
iret
mov
es
xor
mov
loopne
jne
lret
sbb
mov
mov
es
jle
incl
cmp
dec
lret
pop
mov
int
nop
insl
jecxz
sti
out
mov
lea
sub
and
xchg
lcall
int3
mov
mov
push
aas
sub
fs
pop
js
mov
mov
pop
fildl
fcoml
lods
push
frstor
rclb
jb
cs
pop
pop
shll
popf
das
nop
xchg
mov
or
cmpsb
xchg
xor
pop
loopne
or
ret
pop
arpl
jno
lods
shrl
icebp
dec
sub
cmp
lret
loop
repz
pop
mull
fnsave
nop
dec
mov
in
and
add
das
sub
fcmovnu
inc
mov
pop
xchg
inc
jp
scas
cmpsb
add
leave
mov
cld
div
pop
repnz
jp
pop
je
xchg
jmp
xchg
xchg
int3
or
lds
arpl
or
fstpl
add
lea
push
mov
or
or
and
je
fs
in
hlt
aaa
jg
dec
insl
rorl
push
movsb
test
mov
fsubrs
test
jae
scas
imul
loop
lock
or
mov
lds
mov
shll
test
push
mov
and
inc
lcall
and
inc
out
adc
push
lock
jmp
inc
dec
inc
out
outsb
sub
pop
pop
imul
in
ds
stc
mov
mov
rclb
ret
mov
loopne
sub
fsubl
ficoms
cltd
pop
xchg
mov
dec
lcall
jbe
std
sub
mov
out
lods
adc
shl
daa
cs
pop
jo
push
adc
sub
pop
daa
push
sets
dec
pop
roll
stos
pop
insb
out
ljmp
std
ds
gs
adc
insb
jns
mulb
int
into
pop
jno
xor
dec
xchg
movsb
xor
xchg
pop
in
xor
movsl
push
mov
cmp
cmp
cmp
add
lods
jp
mov
xor
out
sarb
push
insl
gs
pop
mov
cwtl
sub
fisttpl
xchg
push
adc
popf
ja
push
movsb
stc
dec
cli
dec
ljmp
js
push
push
xchg
jle
mov
jns
mov
int3
sbb
mov
mov
ret
sbb
rorl
pop
arpl
cld
sarb
xor
loopne
cmp
pop
xor
dec
jecxz
rclb
fsubl
or
jecxz
in
or
nop
mov
dec
mov
xor
test
rorl
jecxz
test
loopne
and
and
jns
dec
mov
sbb
pushf
dec
prefetchwt1
and
push
lds
pop
mov
mov
xor
push
das
lods
and
or
mov
leave
outsl
xchg
push
and
out
or
add
decl
pop
cmpsb
or
push
mov
xchg
inc
mov
clc
daa
lahf
sub
and
scas
sub
cmp
cmp
das
jmp
in
std
fwait
ret
inc
mov
or
in
sub
into
and
rolb
test
push
aas
inc
sbb
adc
cwtl
arpl
andb
cltd
movsl
ret
xor
mov
add
int3
pop
mov
xor
call
mov
fst
aas
add
push
xchg
and
hlt
std
jns
shlb
insl
xchg
jae
xchg
scas
dec
push
xchg
or
mov
js
outsl
call
lcall
lods
add
dec
inc
cmp
pop
adc
fisubrl
cmp
pop
ret
lds
inc
dec
add
xchg
push
mov
fwait
pop
mov
fistpl
jmp
jmpw
fisttpl
cmc
mov
jp
sbbl
xchg
push
push
jo
mov
popf
imul
xchg
outsb
xchg
addb
into
push
jno
push
scas
jecxz
push
pop
imul
mov
repz
fstps
ds
xor
lods
jge
mov
mov
in
lret
push
int
mov
cmp
xor
shrl
lea
xor
push
xchg
jbe
push
and
fnstsw
or
stos
lods
push
rorb
mov
jl
aas
mov
jae
mov
loop
xchg
repnz
inc
outsb
fst
movsb
xchg
lret
out
cmp
push
push
mov
outsl
sub
lock
ret
xchg
add
fldl
scas
xor
repz
dec
mov
cmpsl
push
cmp
fnop
ret
scas
fs
mulb
mov
rcll
rorb
and
nop
mov
into
xor
ljmp
out
adc
std
inc
dec
sbb
je
es
xlat
test
rorb
fstpl
sbb
push
test
inc
or
test
test
jno
xor
lret
jbe
data16
jmp
ss
xchg
inc
movl
mov
data16
and
mov
aaa
sbb
xor
fwait
inc
xor
and
sub
cmc
lds
insb
sbb
stos
cmpsb
or
xlat
movsl
clc
fnsave
stos
push
ss
mov
xor
mov
or
into
popf
cmp
loop
sti
mov
cltd
ret
test
jmp
cmp
sub
sub
adc
movsb
data16
lret
fsubl
sbb
adc
mov
int
adc
shr
or
inc
cmpsl
inc
push
mov
pushf
inc
xchg
movsb
nop
mov
outsb
sub
mov
push
inc
xor
lods
out
ljmp
test
test
mov
add
sti
scas
je
shll
mov
jg
jo
jp
xlat
jge
fnstcw
jae
sbb
push
xchg
push
jbe
paddsb
mov
es
jle
sub
in
rcrb
ret
test
pusha
out
adc
cmpsl
test
fidivrs
jmp
in
loopne
ja
outsb
fcompl
cmpsb
pop
lahf
dec
add
popf
jb
in
cmp
lahf
mul
scas
ret
mov
fadds
insb
jns
es
xchg
pop
push
or
xchg
push
and
aaa
pop
mov
lcall
fdivrs
ds
mov
scas
cmp
xchg
in
mov
mov
insl
sbb
jge
fidivs
adc
mov
jge
inc
and
inc
inc
pop
iret
adc
jmp
sbb
mov
sub
aas
push
pop
xchg
fimull
mov
jo
jecxz
cltd
imul
cmpsb
testl
stos
jmp
add
mov
jle
inc
inc
pshufw
sbb
jnp
xchg
fadd
jns
test
clc
add
dec
cmp
mov
xchg
sbb
stos
and
sti
test
cmc
mov
adc
inc
cmpsl
arpl
xchg
add
pop
pop
sbb
xor
mov
sbb
arpl
daa
dec
cmp
scas
add
into
not
andb
mov
test
cmp
es
push
dec
or
movsb
scas
pop
push
sub
push
adc
insl
adc
and
adc
rcr
mov
cs
jns,pn
test
jno
inc
hlt
mov
mov
jo
inc
imul
mov
out
ret
and
fsubl
addr16
imul
pusha
jg
xchg
mov
xchg
jo
mov
push
adc
inc
or
mov
sarl
sub
jns
sahf
jnp
dec
pop
or
inc
mov
decb
cld
aaa
in
ret
jne
sub
js
lds
and
out
lahf
dec
cmpsb
xor
aad
jmp
inc
cmpb
inc
inc
mov
mov
sub
adc
jle
xchg
mov
fwait
les
mov
mov
push
mov
dec
sbb
fstps
inc
and
rclb
out
push
ljmp
pop
add
push
cmp
xlat
rcrb
dec
shlb
cltd
xlat
shl
mov
int
nop
pushf
aad
mov
pop
faddl
sub
push
addr16
inc
add
repnz
xlat
add
dec
dec
mov
xchg
and
xchg
adc
dec
cltd
adc
cs
test
outsl
cs
cmp
pop
sub
loopne
dec
cwtl
fisttps
xor
xor
push
pushl
lea
movsl
fistpll
and
xchg
sub
movsl
xchg
adc
xor
cmpsb
cmp
adc
cmp
cmp
negb
fistpl
adc
test
fs
jmp
and
mov
hlt
jge
mov
cltd
mov
sub
jle
loope
xor
pop
addr16
add
sub
adc
adc
incl
nop
mov
and
mov
mov
aas
push
dec
hlt
std
pop
inc
push
repz
xor
xor
ds
or
lds
or
sub
and
push
xor
mov
in
lea
rcrl
scas
sar
mov
xchg
pop
and
pop
leave
imul
movsl
mov
dec
iret
push
rcrb
dec
lahf
mov
mov
dec
bound
cmc
inc
jmp
mov
arpl
or
sbb
mov
js
and
dec
sub
sbb
inc
arpl
inc
xchg
push
insb
fidivrl
in
mov
cltd
mov
repnz
je
pop
fs
dec
fsubr
jae
add
or
xchg
push
std
push
xchg
cmpsb
iret
sub
data16
je
jle
aas
cmpsl
xchg
iret
movsb
sub
data16
jnp
jle
cmp
out
jae
inc
sbb
mov
int
inc
xor
orl
dec
sub
jnp
test
mov
sti
cwtl
push
jo
into
sbb
adc
pop
push
adc
inc
inc
in
jle
out
or
jnp
lods
loop
sbb
idivb
mov
push
jb
sahf
push
jns
incb
mov
xchg
inc
jae
xlat
loope
cltd
add
std
insb
push
popl
jle
or
les
gs
sti
rcll
fwait
mov
shll
jns
into
incb
jns
sbb
mov
lahf
xchg
mov
sub
fwait
mov
outsl
out
pop
aam
jb
jmp
int
jne
pop
insb
fmuls
push
fadds
push
and
mov
jnp
je
inc
lds
adc
sub
dec
sbb
inc
mov
ljmp
add
sub
xchg
mov
scas
cltd
adc
sbb
cmpl
dec
or
sub
popf
dec
sub
pop
mov
jnp
mov
cmp
cld
jl
jo
adc
ss
and
xor
xchg
dec
int3
inc
jne
in
push
xchg
jo
std
or
jbe
mov
and
frstor
int
fwait
dec
sub
mov
dec
into
mov
in
or
pop
aaa
out
or
xchg
add
add
out
xor
pop
or
xchg
mov
imul
add
cmpsl
pop
and
rcll
mov
pop
pop
cmp
push
int
test
mov
shrb
in
xchg
sti
cwtl
cmp
loop
mov
mov
movb
jp
aaa
xor
push
cmp
incl
mov
scas
pop
xchg
js
fldcw
iret
xchg
xor
out
lock
pusha
push
inc
mov
push
xor
movsl
or
sub
jae
imul
fsubs
push
cmp
out
push
push
push
push
or
and
pop
aaa
outsl
add
mov
movsb
mov
fnsave
mov
mov
inc
cwtl
int3
aam
mov
push
mov
sbb
jmp
in
pslld
adc
mov
js
mov
cltd
mov
les
lcall
pop
pop
and
dec
imul
cmp
xchg
push
mov
shll
adc
dec
rcrl
push
mov
mov
push
imul
dec
mov
ja
mov
and
push
jmp
aaa
in
push
mov
xchg
adc
xor
out
pop
hlt
sbb
jns
mov
dec
lods
sub
loope
cmp
sarl
jne
cwtl
cld
cmpsb
cmp
outsb
cld
or
pushf
lock
and
pushf
sbb
xor
dec
popf
push
mov
movsb
push
pusha
add
mov
mov
arpl
inc
mov
pop
mov
cmp
in
cmp
push
lcall
movsb
loope
outsl
call
xchg
inc
xor
lahf
xor
in
mov
dec
orb
adc
pop
xchg
arpl
mov
add
push
sbb
add
lcall
mov
out
loopne
cli
mov
cmpsl
push
sub
test
repz
and
mov
adc
push
or
jp
or
pop
or
cmpsb
loop
mov
aaa
in
test
sbb
cld
pusha
bound
xchg
add
movsb
mov
sbb
xor
scas
bnd
lods
insb
mov
mov
aad
xor
jmp
sbb
repnz
cmp
ret
push
mov
test
xchg
lods
fsubrp
dec
sbb
xchg
sahf
ljmp
xor
sbb
jecxz
push
push
add
fidivl
cs
sub
push
mov
pop
cmpsl
xchg
pavgw
pop
jmp
mov
push
es
mov
sub
dec
pop
hlt
loopne,pn
adc
cld
daa
iret
jo
mov
add
out
pop
pop
lret
ja
js
add
pop
sarb
cld
jp
cltd
inc
sahf
pop
pusha
test
jne
jno
sub
jmp
pop
add
sbb
pop
or
push
out
inc
pop
cli
out
add
cmp
push
pop
rolb
mov
xchg
push
pop
sbb
xor
mov
out
adc
adc
rorb
cmp
ljmp
mov
pushf
and
xchg
fsub
mov
dec
jg
jmp
je
xchg
fisubl
or
cmp
xor
mov
lahf
imul
or
call
adc
cltd
pushf
xchg
idivl
jl
decb
xor
inc
sbb
xchg
lods
or
sbb
stc
sbb
mov
lcall
pop
xlat
sbb
jno
ret
test
lcall
fdivr
lods
push
subb
js
repz
pop
push
out
mov
push
jnp
lods
dec
add
mov
mov
adc
push
add
push
add
ret
arpl
leave
loope
clc
push
push
ret
jl
lahf
and
cwtl
fwait
pop
jae
roll
pop
inc
out
jg
sub
imul
sti
mov
push
ret
call
repnz
xor
and
out
lahf
sbb
pop
inc
arpl
fwait
push
jbe
cltd
pop
inc
aam
xor
out
repz
xchg
jnp
xor
data16
fwait
pop
jnp
es
ror
adc
cmc
outsb
xor
sbb
mov
xchg
scas
call
inc
popf
icebp
into
add
pop
add
lds
add
sbb
jo
push
sbb
push
cmp
cmp
add
jl
shlb
mov
jg
sarl
adc
out
cltd
mov
sti
push
lds
sub
cmp
insl
push
jecxz
popa
ja
xchg
clc
bound
push
jge
cmp
shlb
incb
mov
loope
aaa
sub
sahf
ljmp
push
insb
es
cld
cmp
icebp
call
cmp
dec
in
popa
ret
push
mov
jl
sti
rcrb
int3
loop
nop
les
adc
mov
outsl
cltd
and
test
mov
cld
test
sbb
xor
mov
cmp
push
jp
push
lahf
sti
xchg
lahf
aad
xchg
or
roll
push
icebp
out
sbb
xor
inc
xor
push
int
fpatan
in
xor
push
lea
lret
stos
lret
inc
or
decl
add
shlb
sbb
scas
xchg
mov
mov
inc
push
cmp
push
push
xchg
mov
cmpsb
sbb
pop
mov
je
or
gs
mov
push
pop
das
inc
rorb
movsb
jb
leave
in
mov
lcall
nop
fwait
loopne,pt
lods
cmp
repnz
cmp
mov
jno
xchg
das
cmp
pop
xchg
iret
insl
leave
lahf
mov
mov
icebp
out
and
aad
mov
xchg
cwtl
or
or
in
dec
aad
dec
add
xchg
sarb
pop
addr16
pop
shl
je
pusha
dec
or
cs
add
cltd
mov
and
inc
aad
hlt
jae
jp
push
pop
gs
cmp
pop
pop
adc
add
mov
xor
xchg
jmp
mov
pop
popa
xchg
jnp
pop
ljmp
scas
jne
adc
in
fistl
dec
je
test
mov
jno
or
call
sub
sbb
rcr
arpl
push
push
mov
and
jbe
mov
dec
adc
ds
xchg
push
loop
fdiv
pusha
xchg
aad
jno
dec
pop
or
or
into
or
dec
jo
sbb
inc
nop
mov
mov
sub
mov
push
and
push
imul
jbe
out
jp
push
cmp
jo
enter
lret
pop
mov
dec
push
cmp
pop
call
fcmovb
mov
dec
cmpps
sti
mov
repz
shrl
jp
xchg
sbb
jbe
xor
jmp
in
in
xchg
push
sub
jge
dec
out
dec
lret
in
outsl
xchg
pop
mull
jecxz
inc
xchg
fwait
mov
sbb
or
jno
scas
adcb
bound
mov
or
out
lret
outsl
add
std
mov
and
adc
sbb
out
mov
cmpsb
xchg
ffree
out
je
popf
lret
das
filds
xchg
push
push
mov
xchg
xchg
pop
lret
imul
cwtl
popf
iret
test
iret
jecxz
aaa
shrb
lret
loope
push
pusha
ljmp
dec
pushf
push
xchg
in
jecxz
fsubl
cmp
add
mov
xchg
adcl
and
push
jg
and
sbb
sbb
sbb
lcall
cmp
cmp
and
inc
mov
imul
test
sub
repnz
push
xchg
data16
movsl
mov
ror
aaa
mov
adc
cmp
cmp
mov
je
ja
xchg
inc
out
cltd
pop
dec
fisubrl
aad
inc
adcl
sub
mov
sar
sbb
dec
mov
xchg
cmpb
xchg
jmp
les
lahf
repz
nop
cmp
cmp
mov
push
cmpsl
and
xor
jecxz
pop
out
int3
mov
cs
int3
cmp
or
fst
inc
or
xor
scas
imul
cmp
add
sbb
sbb
jg
pop
or
out
outsl
or
orb
jp
xchg
mov
pop
pusha
stc
sti
and
aam
jl
call
rorb
cld
les
lods
xor
into
or
jo
or
xor
sub
jbe
mov
adc
adcl
dec
mov
push
mov
pop
movsl
inc
adcl
or
fnstsw
add
push
nop
add
sbb
rcrl
loop
aam
fldenv
cmc
xchg
mov
lods
push
shrl
push
pop
cltd
lea
fistl
sbb
clc
push
xor
or
and
cmpsb
aas
addr16
pop
iret
rorl
and
stc
dec
rclb
or
mov
add
pop
sbb
shll
push
repz
stos
mov
or
mov
xchg
sbb
pop
icebp
fs
push
jnp
movsl
or
xchg
xlat
add
jp
mov
cmpsb
inc
mov
or
cld
ret
stos
inc
adc
sbb
xor
test
pushf
push
add
xchg
ds
mov
or
inc
int3
xor
pop
mov
nop
cmpsl
ret
xchg
xor
or
or
jae
cli
bound
push
pop
mov
push
pop
ret
out
lahf
aaa
inc
mov
cltd
scas
adc
push
mov
leave
push
jnp
rolb
daa
repz
movsl
sbb
mov
pop
xchg
hlt
ljmp
mov
adc
sbb
imul
test
sbb
lods
pop
sbb
hlt
outsl
pop
mov
xor
mov
rcrl
dec
ss
cmpsl
pop
lock
cmp
cli
popf
jb
gs
jmp
xchg
and
sub
lcall
fsub
test
jle
inc
pop
inc
pop
loopne
or
out
aad
mov
push
call
and
lock
push
into
rolb
stos
sub
cmp
test
cmp
mov
xchg
das
sbb
sarl
rcrl
sub
xlat
mov
test
mov
cltd
ja
xor
dec
clc
pop
ficomps
stos
and
ret
and
adc
cmpsb
add
inc
cltd
adc
jecxz
pop
or
mov
int3
mov
pop
xor
cmp
adc
xchg
cs
outsb
imul
loope
mov
dec
xor
pop
xchg
add
movsl
push
jno
cmp
aaa
jo
jg
push
push
xchg
in
test
movsb
xor
jno
in
sahf
imul
insl
jmp
or
mov
loop
ljmp
adc
adc
data16
into
adc
xor
xor
mov
push
xor
movsl
jno
pop
mov
mov
push
jecxz
jae
mov
popf
jb
out
adc
pushf
mov
aas
or
in
push
cmp
push
or
addr16
xchg
add
das
das
mov
xchg
jl
loope
adc
mov
xchg
cmpsb
ja
cmp
sbb
cmp
cltd
jae
das
sbb
or
mov
insl
sbb
aas
and
sbb
xchg
cmp
lahf
xlat
xchg
cmp
outsl
push
xor
mov
xchg
push
xlat
out
lock
out
cmp
jg
xlat
push
push
jns
pop
in
push
dec
xor
add
hlt
mov
loopne
dec
mov
call
pusha
fs
or
jecxz
mov
mov
inc
shr
addr16
mov
cmpsl
push
lds
insb
xchg
out
cmp
std
and
out
pop
in
mov
data16
pop
jmp
test
xlat
cmc
pop
add
out
imul
popa
xor
lahf
add
pop
push
mov
push
mov
ja
xchg
cmpsb
movsb
into
std
fwait
cmp
jbe
mov
mov
cmp
cmp
test
pop
and
add
inc
aam
es
mov
jae
xlat
pop
in
sahf
lods
xchg
lods
adc
add
xchg
sbb
outsb
cmp
xlat
pop
movsl
push
cmpsb
dec
jecxz
aad
test
in
inc
jae
adc
cltd
mov
jns
sbb
push
mov
mov
mov
pop
push
aaa
xchg
dec
or
outsb
lds
cltd
jae
test
mov
cwtl
in
mov
nop
loope
adc
and
gs
push
lock
es
pop
xor
data16
sub
lahf
xchg
jns
xchg
outsb
mov
or
jnp
or
sbb
outsl
push
add
je
subb
imul
mov
mov
jl
data16
aaa
jae
inc
sbb
xchg
stos
sbb
dec
inc
fs
inc
sub
insb
add
nop
and
fsubs
nop
shll
lds
pop
mov
test
cwtl
inc
adc
in
stc
push
mov
fistps
sub
inc
or
ja
sbbl
and
sti
sub
mov
adc
adc
cmp
pop
lret
jnp
jne
ds
movsl
xor
fdivs
fidivrs
js
test
stos
fsubrl
jp
adcb
push
pop
std
in
add
pop
aaa
daa
adc
and
mov
dec
or
mov
ret
mov
js
subl
leave
push
xor
mov
jo
stos
inc
push
mov
sub
int
out
mov
lahf
dec
and
pop
iret
mov
add
jge
mov
pushf
dec
cmp
loope
loopne
dec
iret
dec
decl
push
in
mov
std
pop
sbb
sti
xchg
mov
adc
cmc
stos
mov
sahf
sbb
insl
and
push
sub
sbb
xor
push
daa
mov
ljmp
aas
hlt
pop
mov
mov
xchg
dec
and
adc
sahf
aaa
inc
sti
push
fcomi
sti
test
and
movl
int3
dec
negb
or
cld
jno
xchg
xlat
cwtl
gs
pop
adc
nop
mov
loopne
ds
push
jmp
mov
in
testl
and
adc
subb
push
pop
cwtl
xor
dec
js
xchg
inc
orb
push
lods
xchg
rcrb
inc
sub
insb
shl
pop
dec
in
push
cli
inc
mov
push
jg,pt
popa
jle
or
or
and
pop
ljmp
scas
pop
jnp
rcll
outsl
add
and
comiss
lock
or
repz
mov
subb
dec
imul
sbb
insw
xchg
sbb
sbb
sub
std
inc
int3
inc
mov
in
jecxz
data16
rclb
cmp
xlat
loop
jns
mov
sbb
out
mov
sbb
fdivr
gs
rorb
sub
addr16
lods
jo
lea
cmp
sbb
test
loope
cmpsl
xchg
xlat
cmpsl
stos
xchg
dec
mov
lcall
mov
lea
arpl
shrl
pusha
mov
mov
mov
jp
push
cmp
nop
add
or
push
in
cmp
mov
clc
ffree
dec
jge
aas
out
not
inc
xchg
jmp
xor
cmp
add
fsub
fprem
or
jbe
dec
inc
dec
dec
daa
add
int3
sbbb
out
jp
adcb
pop
or
iret
inc
push
rclb
cwtl
iret
test
mov
cld
mov
pop
pop
sarl
ret
inc
mov
out
add
push
lret
dec
lea
in
push
out
adc
or
mov
scas
lds
xor
test
sbb
cmp
ret
pop
and
xchg
sbb
sub
sbb
adc
push
mov
std
mov
addr16
hlt
movsl
sbb
xchg
cld
lds
add
sbb
cmp
out
jecxz
adc
sbb
pop
sub
lods
into
jno
cmc
add
dec
lock
cmpb
adc
sarl
and
lea
cwtl
adc
imul
stc
mov
mov
es
mov
mov
in
push
sbb
xchg
add
xlat
call
popa
faddp
or
aaa
jb
mov
scas
lret
scas
mov
mov
sarl
xchg
inc
sbb
mov
add
filds
add
jg
sbb
xchg
cmp
scas
pop
rorl
cltd
mov
jnp
roll
push
inc
das
into
inc
mov
xchg
jno
sbb
outsl
sub
add
js
out
out
lret
xor
pusha
nop
orb
or
imul
cmpsl
mov
out
cmpsb
cmpl
iret
push
adc
loope
jg
sti
not
push
lods
je
lock
inc
ljmp
subb
mov
sbb
xchg
push
cli
mov
psllw
adc
sub
mov
sbbl
or
outsl
and
nop
sub
sbb
and
or
aas
call
inc
loope
test
adc
adc
je
in
ljmp
push
lods
jbe
ss
fs
xor
fwait
call
jno
mov
inc
xor
cmpsb
dec
push
dec
adc
push
imul
lahf
or
push
inc
jb
xorl
inc
or
mov
xchg
mov
pop
pop
aam
add
cmp
adc
add
or
and
adc
sbb
sbb
fstl
sub
ja
jp
bound
xchg
add
mov
adc
xor
jp
push
cmp
ret
sbb
jnp
insl
scas
dec
rclb
int
mov
flds
inc
popf
jae
daa
xor
insb
sub
adc
cmpsb
int3
mov
cmc
stos
mov
sub
sbb
add
add
out
rcrw
mov
add
pop
push
rcrb
pop
pop
dec
ret
test
cmp
mov
pop
jmp
cmp
push
mov
mov
insb
mov
setp
dec
inc
imul
sub
jae
ss
cmp
repz
or
lret
xlat
push
xor
sub
inc
adc
push
imul
pop
xchg
pop
inc
pop
pop
outsl
and
sti
push
scas
dec
cltd
popf
addb
inc
pop
mov
jns
add
lcall
sub
sub
mov
adc
inc
or
mov
loop
mov
xlat
jg
lret
add
mov
mov
jle
dec
mov
jbe
xchg
cld
out
and
add
pusha
xchg
jno
les
cli
add
ror
and
xor
in
fidivrs
xchg
lods
and
xor
dec
mov
add
repnz
inc
push
and
xchg
xchg
daa
xchg
lahf
inc
pusha
push
xor
lock
insb
ja
les
xor
push
andb
gs
out
or
lahf
push
push
pop
fnstenv
pop
cs
test
jb
orb
daa
lea
shrb
push
mov
add
xchg
cli
sbb
mov
mov
sub
loopne
push
call
xorb
pop
mov
add
pop
in
aaa
and
stos
pop
ljmp
fistps
rorl
shll
pop
lret
out
lcall
and
repz
out
inc
xor
mov
cmpsb
mov
xchg
ss
arpl
lods
pop
sub
jnp
lock
divb
adc
fld
pop
ret
pop
mov
push
shlb
jno
iret
xchg
and
lahf
ret
inc
clc
jp
sarl
fisttpll
pusha
and
stos
int3
or
add
pop
xchg
fwait
xchg
mov
inc
adc
mov
add
popa
imull
out
outsb
xlat
mov
nop
or
divb
and
inc
ret
nop
lds
adc
sub
outsl
pop
dec
or
sub
in
jne
add
and
jbe
arpl
dec
scas
stos
subb
mov
jge
dec
test
ret
mov
jne
push
inc
xchg
repz
sti
in
sti
mov
cmp
in
jge
jecxz
dec
adc
aas
and
or
cmp
mov
add
mov
sbb
ficomps
scas
pushf
mov
mov
icebp
add
mov
or
pop
dec
fwait
and
cmp
push
or
orl
add
and
out
push
lcall
mov
aaa
ljmp
pop
mov
push
push
imul
and
shlb
call
int3
sti
dec
ret
pop
out
cli
add
push
push
arpl
or
xchg
or
pop
sbb
lret
xor
out
jae
xchg
stos
sahf
pop
pop
int3
mov
dec
dec
and
les
in
sub
fdivrs
imul
arpl
je
jl
mov
lret
imul
sub
stos
outsl
inc
outsb
add
pusha
mov
or
jecxz
adc
movsl
add
movsl
xlat
iret
enter
int
jle
and
outsb
xor
stos
enter
mov
sti
or
and
in
jecxz
xchg
cmpsl
testl
fistpll
xchg
mov
mov
icebp
jge
mov
mov
cltd
push
mov
jb
pop
cmp
mov
adc
sarb
xchg
movsb
je
sbb
fs
adc
mov
pop
sbb
inc
push
aam
lea
adc
imul
add
dec
popf
cmp
scas
fcompl
or
in
cwtl
clc
mov
cmp
and
or
jno
arpl
xchg
inc
insb
lods
pusha
sahf
adc
push
xor
dec
js
mov
mov
rcr
mov
aam
sub
add
push
outsl
push
les
insl
mov
cmp
mov
movsb
lds
pop
mov
mov
imul
ss
jmp
mov
lods
stc
enter
xlat
vmovq
cmp
loopne
dec
mov
push
jne
arpl
ljmp
sti
divb
and
push
xor
mov
jg
push
jbe
inc
pop
fwait
xchg
cwtl
add
ret
pop
xchg
adc
pop
dec
jg
ljmp
push
mov
test
or
push
ja
add
dec
cmp
mov
push
inc
testl
pushf
inc
cmp
bound
gs
mov
add
lea
xchg
lret
dec
add
inc
lret
push
test
xlat
mov
cmp
orl
imul
in
and
jl
push
adc
std
ja
sbb
lahf
jp
aaa
mov
pop
orl
sub
andl
mov
mov
cmpxchg8b
dec
mov
fnstcw
or
xchg
sub
sub
mov
mov
cmp
fdivl
push
push
pop
cli
ret
cld
mov
cld
mov
sti
ss
dec
scas
push
sub
xchg
xor
rorb
adc
mov
call
fwait
es
ss
ffree
pop
pop
mov
add
pop
in
mov
mov
int3
cmp
enter
adc
leave
xchg
cwtl
ror
xchg
inc
outsl
sub
mov
inc
mov
cmp
push
jnp
filds
pop
adc
cli
add
xchg
pop
adc
imul
clc
das
mov
mov
mov
stos
out
test
mov
or
mov
lret
outsl
lahf
loop
mov
movsb
xor
xchg
lahf
popf
dec
clc
add
iret
jno
mov
mov
add
add
das
enter
mov
pop
daa
or
pop
movl
fldcw
push
push
pop
fs
arpl
fiadds
cmpsl
repnz
pop
pop
dec
nop
shlb
insl
pop
ds
hlt
pop
nop
jo
int
js
stos
mov
mov
or
sub
cwtl
xchg
dec
fidivs
or
adc
mov
push
mov
scas
inc
out
aaa
outsb
mov
cmp
xor
add
mull
ss
scas
fimuls
xchg
add
lock
xchg
or
subl
stos
lret
data16
mov
es
jecxz
ja
stos
js
add
jmp
insl
rcrb
push
hlt
movsl
aas
jbe
mov
push
sub
gs
add
xchg
jbe
sarb
ret
idivb
sbb
loop
outsl
or
mov
sbb
or
cs
shlb
add
cmpsl
scas
adc
push
fsubrl
das
or
out
pop
jo
dec
rcll
lds
jmp
imul
imul
cli
mov
mov
lea
lods
imul
in
clc
cwtl
inc
add
mov
fbld
sbb
cmp
ror
outsl
push
int3
and
sbb
xor
pop
cwtl
jne
mov
ret
pushf
jb
je
int
or
into
sub
cmpb
das
shll
stos
bound
add
push
test
sub
filds
iret
pop
xchg
dec
xchg
sub
jno
adcb
clc
in
fstl
mov
inc
adc
jb
mov
test
rcl
dec
test
idivb
cmp
push
or
gs
push
js
lods
cmc
insl
mov
sbb
xor
mov
outsl
dec
fadds
fs
jb
in
sub
dec
push
jbe
test
fcompl
fmull
xor
int
ret
data16
mov
popa
or
popa
cs
loopne
lock
scas
add
mov
mov
stos
jg
push
gs
xor
push
cmpsb
dec
enter
shll
ss
inc
xorl
inc
and
adc
xchg
sbb
out
mov
mov
inc
xor
cmp
repz
dec
sbb
mov
aas
cmc
mov
pop
dec
mov
icebp
xchg
xor
fldt
and
test
fnsave
clc
push
js
fimull
scas
repnz
and
iret
push
cmpsb
pop
inc
sahf
fs
cltd
dec
movsl
jo
aad
push
decb
lret
xor
dec
ret
sub
adc
lods
inc
jecxz
in
shlb
jmp
loopne
jne
data16
popa
mov
dec
in
addb
fistpll
xor
scas
push
adc
rol
or
shll
popf
mov
cltd
iret
inc
add
mov
lret
jmp
lcall
fistl
mov
mov
lcall
shrb
mov
pusha
pop
fdivrp
fwait
popa
mov
jae
xchg
xchg
icebp
shr
pop
pop
push
hlt
int3
adcb
rep
jmp
sub
mov
xchg
mov
and
std
rclb
lea
mov
or
inc
shrl
push
add
into
jl
or
imul
adc
movsb
push
add
shlb
adc
mov
call
scas
xorl
mov
or
or
mov
outsl
lods
lcall
or
sti
gs
stc
adc
mov
popa
and
fisubl
cmpsl
inc
and
jle
imul
shlb
push
and
popf
inc
lods
mov
test
adc
sbb
xorb
mov
dec
sbb
jns
insb
in
add
mov
rcl
rorb
dec
cmpsl
icebp
nop
mov
xor
adc
inc
loope
adc
mov
loope
jo
lds
loopne
xchg
or
add
pusha
jmp
iret
or
pop
ret
xchg
mov
lods
xor
fstpt
sbb
xchg
rolb
fnsetpm(287
xchg
adc
lds
jl
out
sub
shlb
aad
fwait
fs
lods
xchg
les
pushf
lods
leave
lock
jle
xor
dec
insb
push
xorl
lahf
jbe
push
flds
or
and
sbb
and
mov
push
int
dec
aaa
sbb
inc
mov
lods
add
mov
or
iret
sub
lds
mov
out
mov
rorl
sbb
or
jnp
mov
les
in
frstor
add
ja
sarb
mov
pop
jecxz
xchg
out
fdivrl
xchg
mov
inc
xchg
lea
pop
mov
and
mov
or
inc
mov
xchg
dec
lret
sbb
mov
inc
jo
fwait
stos
or
loope
push
fisttpll
sbb
arpl
mov
cwtl
iret
xchg
jle
push
mov
push
adc
xor
xchg
repnz
sbb
iret
pop
in
push
data16
data16
test
and
mov
pop
call
out
mov
inc
shrl
repz
hlt
dec
out
push
inc
out
incb
and
pop
push
jae
into
shlb
les
es
push
add
inc
and
inc
and
ljmp
jnp
scas
sbb
rcrb
clc
add
pop
xchg
scas
mov
cmpsb
pop
aas
cmp
sti
jne
xor
sbb
scas
mov
dec
fs
mov
sbb
pushf
out
test
mov
mov
into
repnz
mov
jmp
outsb
mov
into
xlat
outsl
jge
jno
pop
adc
xor
xchg
or
fs
cmp
popa
adc
xor
lods
inc
inc
pop
add
inc
mov
mov
in
inc
sbb
pop
ret
insl
loopne
mov
test
or
test
iret
xchg
or
fisttps
push
fcmovnu
pop
push
xchg
or
push
ficompl
pause
scas
mov
cmp
popa
pop
adc
pop
dec
in
aam
ja
pop
jbe
cmp
int
insl
mov
jg
inc
ds
lret
sub
in
into
mov
jbe
adc
or
mull
xor
and
outsb
js,pt
adcl
std
xlat
push
add
xchg
mov
or
xchg
xchg
xor
sub
call
jnp
iret
stos
sbb
aad
gs
cmp
fcompl
xchg
pop
push
cld
adc
inc
push
popa
mov
sar
out
jl
mul
leave
sbb
and
push
rolb
xor
shll
pop
clc
daa
push
ljmp
orb
lret
pop
lods
xor
in
jae
rcrl
aaa
mov
lods
dec
movsb
aad
movsl
outsb
mov
dec
mov
inc
imul
aad
loope
nop
std
push
pavgb
xchg
leave
out
test
add
xchg
imul
repz
mov
sbb
aad
push
outsl
je
mov
inc
mov
and
in
jne
into
pop
and
outsl
loop
jmp
insl
xchg
orb
notb
iret
or
mov
addr16
cmp
ja
add
push
add
in
loope
add
inc
push
insl
xchg
mov
scas
sbb
push
pop
add
mov
push
xor
push
xor
xchg
aas
fnsave
cmc
cmpsb
mov
xchg
mov
xchg
mov
inc
mov
xor
xchg
adc
push
mov
and
pop
pusha
stos
int
sbb
sti
push
cmp
icebp
mov
loope
sar
dec
mov
adc
mull
xchg
sub
xchg
push
push
gs
lahf
dec
xor
mov
add
push
lock
lret
aad
push
pop
mov
dec
fs
test
fildll
es
mov
xor
inc
mov
in
fdivl
push
add
push
pop
push
pushw
mov
pop
inc
repz
adc
and
cmpsl
das
cmp
jb
out
dec
inc
clc
pop
lock
and
xchg
addr16
inc
dec
jg
or
push
mov
ret
mov
mov
sahf
or
sbb
xchg
jp
jne
adc
pop
and
fimuls
adc
pop
sub
pop
dec
cmp
mov
sbb
push
out
and
test
xor
mov
dec
inc
sbb
aaa
fxch
pop
xor
and
adcl
lea
popa
push
jno
loop
int
lea
pop
and
xor
add
cmp
push
call
enter
jns
icebp
in
lea
inc
and
ja
pop
xchg
into
mov
and
fs
in
push
mov
nop
sbb
jge
or
add
call
cmp
mov
mov
stos
adc
es
not
push
test
xor
fistl
insl
push
outsb
sbb
addr16
out
push
push
sub
testl
adc
mov
or
outsb
loopne
int3
jg
aas
mov
pop
jbe
inc
mov
idiv
jns
mov
dec
push
in
push
ja
arpl
xchg
cmc
clc
pusha
xorl
dec
iret
pop
in
in
fstpt
aaa
pop
repnz
add
filds
test
outsb
jbe
adc
aaa
lea
pop
adc
stos
and
mov
mov
mov
fs
fadd
adc
push
pop
or
insb
in
repnz
stos
je
jnp
test
enter
inc
sub
push
mov
push
ret
mov
outsb
sub
and
lcall
enter
pop
push
fwait
mov
mov
inc
add
or
adc
fmull
jnp
push
cmp
sahf
enter
insl
pop
outsl
or
xor
adc
push
mov
mov
push
fmull
jo
das
add
xchg
push
in
stc
adc
dec
mov
push
arpl
dec
pop
insl
aad
shll
hlt
mov
pushf
push
cmp
arpl
xor
mov
sub
xchg
xchg
jno
nop
sbb
push
xor
jo
and
enter
sarb
imul
loop
dec
adc
fildll
mul
lea
insl
adc
and
push
and
pop
jae
mov
or
dec
mov
add
mov
sub
flds
mov
in
push
inc
jmp
cmpl
inc
out
inc
and
out
cmp
sarl
arpl
jne
icebp
mov
sbb
int3
dec
ljmp
movsl
push
and
add
mov
push
fcompl
dec
into
cmpsl
das
ja
rolb
inc
or
in
sti
cmp
shrl
or
dec
mov
sub
scas
xlat
mov
into
rcr
loope
xor
mov
xorb
cmp
stos
les
jne
and
fwait
add
cltd
cmpsl
xor
jae
loope
aam
pop
jns
fwait
jg
and
scas
enter
xchg
mov
adc
add
pusha
mov
test
add
mov
mov
in
xlat
and
xor
aam
push
ficoml
fsubs
ret
cmp
mov
lds
cpuid
mov
andb
mov
xchg
xchg
rcrb
sub
xchg
and
mov
or
jae
push
test
xor
jns
cmp
loope
cmpsb
dec
mov
inc
popa
mov
jmp
out
dec
in
mov
test
mov
in
xor
adc
shlb
cmc
loope
in
push
adc
iret
inc
adcb
push
and
mov
daa
shll
dec
dec
dec
xchg
jo
movsl
jg
fisubrl
xchg
and
dec
mov
leave
shll
fucomi
jae
xchg
add
cld
cmc
dec
and
pop
mov
pop
push
das
mov
daa
xchg
mov
idivb
mov
dec
in
or
cmp
roll
add
pop
shll
int3
mov
sti
popa
ficomps
imul
xor
cmp
push
out
testb
repnz
in
pop
cli
sub
cmp
inc
cmp
pop
dec
inc
ds
mov
and
clc
ret
in
out
push
xchg
icebp
ret
aas
and
adc
bound
jo
ljmp
jle
int
cmp
scas
cli
fbld
cli
nop
fbstp
inc
jns
dec
fidivrl
sub
movsb
push
mov
iret
lret
adc
sub
adc
or
fildll
cmpsl
mov
sbb
data16
xchg
movsl
in
jnp
or
sbb
xchg
mov
lcall
inc
add
out
in
xchg
adc
insb
int3
das
mov
das
adcl
mov
daa
sbb
out
insl
sbb
or
les
xchg
pop
scas
add
add
stos
mov
sarb
jbe
imul
fwait
mov
sbb
mov
cltd
ss
scas
adcb
jp
inc
in
lods
daa
int3
rcr
ror
mov
fs
mov
imul
ja
pop
mov
xchg
adcb
jp
xchg
sub
push
pop
add
pop
ret
mov
insl
jecxz
cld
dec
mov
cli
and
sar
xchg
cmpsl
lret
mov
call
or
outsb
cmp
lods
mov
sbb
jnp
mov
add
ret
mov
mov
push
or
and
fadd
jmp
out
sbbl
test
or
leave
jl
shrl
cltd
and
cmp
sbb
or
sbb
lea
push
sbb
inc
dec
or
subb
and
dec
and
rolb
mov
xchg
das
repnz
xchg
lea
push
pop
aam
push
and
push
mov
leave
xchg
les
inc
jg
lods
cmp
mov
fst
pause
dec
add
or
fwait
mov
pop
in
adcb
lea
jge
sub
out
pusha
ds
add
xchg
pop
pop
cmc
movsb
stos
sbb
cli
mov
pop
fucomp
and
icebp
addr16
sub
mov
push
fcomps
lods
xor
jo,pt
sti
xchg
mov
in
in
inc
imul
lret
lea
fst
cmp
insb
lea
cwtl
adc
sar
arpl
sub
fisubrl
or
rcrl
clc
mov
je
sbb
adc
daa
stos
cmpsb
mov
scas
data16
mov
xchg
imul
insb
xor
mov
rcl
inc
mov
ds
pop
and
mov
mov
jecxz
inc
jns
jecxz
mov
cli
xor
repnz
push
mov
or
lcall
sbb
shlb
sbb
pop
pushf
ficomps
not
in
adc
and
imul
lods
xchg
rcll
dec
loope
inc
repz
adc
rorb
aaa
aas
mov
ja
cmc
cmp
sub
sahf
push
or
jg
or
scas
push
pop
cmp
mov
jecxz
mov
mov
rorl
inc
cmp
aam
adc
stos
sub
jecxz
popa
ret
mov
mov
xor
add
mov
rorl
mov
decl
pop
rclb
movsb
xlat
lea
fxtract
mov
xchg
or
jecxz
loopne
in
push
push
ljmp
xchg
in
fs
ja
test
aaa
fst
add
add
cmp
ds
sbb
inc
pop
or
divb
jmp
mov
cmp
lock
out
cltd
add
dec
push
test
add
push
int3
pushf
outsl
out
pop
add
pop
nop
sahf
mov
xchg
andl
gs
lds
dec
sub
and
popf
jns
inc
idivb
and
filds
add
mov
inc
clc
bound
int3
icebp
je
test
jo
mov
js
mov
or
pop
imul
push
pusha
das
out
lret
inc
idivl
jmp
fwait
add
pop
aam
push
push
add
and
orb
idiv
pop
xchg
lahf
sub
adc
sarl
out
pusha
push
inc
add
in
ficomps
push
ljmp
iret
imul
push
insl
pop
push
mov
cmp
and
in
jmp
pop
int3
jmp
fdivrl
push
fidivl
xchg
and
pop
int
add
gs
mov
lock
sahf
inc
pop
jne
ds
dec
mov
stos
and
enter
add
cld
test
push
sbb
and
jle
test
mov
push
push
xchg
lea
push
jle
aad
adc
inc
mov
mov
jp
xor
xor
add
jp
jle
pop
mov
xor
dec
scas
pop
add
mov
cli
outsl
addl
in
lock
sub
nop
pop
stos
stos
or
sub
shlb
mov
sbb
mov
xchg
xchg
push
mov
push
jecxz
dec
imul
sahf
mov
scas
sub
jns
sub
bound
addr16
push
pop
mov
jmp
stc
xor
xlat
enter
sti
lcall
popa
sub
adc
dec
xor
sarb
rcrl
or
insl
sub
gs
jbe
mov
xor
and
xor
mov
shll
add
test
test
mov
iret
mov
push
shll
cli
out
fwait
lea
in
popf
sahf
cmp
int
mov
pop
arpl
inc
cltd
push
push
cli
jo
pop
dec
and
mov
mov
lcall
xor
mov
pop
clc
incb
mov
cmp
add
jle
nop
cmp
mov
in
inc
dec
out
shrb
mov
add
addb
jno
add
push
xchg
fmull
aaa
ljmp
movsb
push
roll
das
fs
and
push
push
insb
sarl
push
and
out
cmpsl
adc
pop
mov
outsb
subb
xor
pop
or
cmpsb
sub
std
mov
adc
mov
mov
ds
pushl
xor
push
mov
cmp
add
outsl
dec
in
lret
rol
push
xchg
stos
xchg
sbb
lahf
cmpsl
icebp
jle
push
stos
fsub
xchg
xor
inc
ret
popl
adc
les
lahf
add
shrb
sti
pop
negb
mov
xor
mov
popf
pop
add
stos
jnp
push
sbbl
aam
or
and
divl
imul
jg
sub
loop
addb
cmp
nop
loop
dec
xchg
mov
xchg
lcall
mov
sub
lods
xchg
frstor
icebp
pusha
enter
sbb
lock
jl
sub
xchg
aad
push
inc
cmpsb
adc
lock
iret
daa
cmp
es
insb
inc
fldt
ja
test
sar
push
bound
cmp
outsb
sub
pushl
outsl
push
mov
and
cmpsl
lods
cltd
in
cmp
push
xor
mov
bound
iret
pop
push
inc
adc
sahf
cmpsl
popa
loopne
fs
sub
sbb
cmp
roll
rol
mov
lods
fst
cwtl
xchg
cmp
or
fwait
push
xchg
cmp
mov
inc
ret
mov
push
sti
cmp
out
sbb
inc
lret
mov
mov
in
push
sub
push
lcall
jmp
in
dec
mov
fisttps
mov
inc
out
or
inc
mov
cmp
pusha
lahf
jne
ss
enter
inc
outsb
jg
jmp
push
push
lods
es
sub
in
js
nop
add
mov
hlt
mov
ror
push
mov
fsubrs
inc
iret
fstpt
mov
jo
jb
stc
mov
int
add
cmp
adc
mov
popa
jp
lret
repz
jb
dec
and
add
xchg
mov
and
xchg
cld
pusha
rcl
sti
jb
arpl
mov
xchg
dec
fs
xchg
cmpsl
imul
lret
fdivrl
push
cmp
jb
imul
dec
cmpsl
lret
sarl
daa
aam
aas
mulw
int
lods
sub
ja
jge
mov
jl
lods
cs
addr16
push
addr16
lret
movsl
adc
inc
bound
dec
xchg
pop
xchg
xchg
shlb
xchg
lods
xchg
ret
ror
iret
push
out
sub
mov
fdivrl
adc
popf
outsl
enter
roll
insb
insl
lock
sub
loope
sub
rol
rorl
mov
fisttpl
in
inc
orb
stos
push
outsb
pop
cltd
mov
or
adc
xor
mov
aad
adc
pop
cmp
ret
jns
nop
movsl
adc
stc
mov
std
xchg
sbb
popf
mov
popa
cld
loope
fucomp
dec
add
push
lods
fcoml
cltd
movsb
fdivr
or
mov
mov
mov
push
xchg
pop
cmpsb
xchg
or
jo
cmp
int
lds
inc
mov
scas
inc
push
mov
cmp
adc
or
arpl
test
xchg
and
and
jae
outsl
in
add
scas
cltd
rcrl
sub
sub
addl
and
rcrl
loopne
pop
in
pop
test
jg
or
into
in
mov
xor
mov
outsb
or
cld
inc
ljmp
sub
pop
hlt
mov
call
outsl
mov
fidivrl
jge
or
lods
arpl
jmp
or
testl
xor
pop
mov
sub
loop
xor
sub
call
pop
jge
shrl
shll
and
pushf
enter
ja
cwtl
imul
insl
push
push
fiadds
adc
pop
outsl
pop
in
push
test
cltd
stos
push
inc
mov
out
out
xchg
xchg
and
in
xor
shlb
mov
xchg
mov
mov
stos
ds
rorb
enter
pop
popa
pop
jae
sub
out
test
mov
and
dec
in
push
and
pop
inc
mov
stos
or
mov
xor
ret
push
push
jle
pop
sbb
jns
push
btcl
jno
pushf
dec
or
xorl
cmp
out
rclb
pop
jg
mov
mov
jg
xchg
lahf
test
sarb
mov
div
push
adc
adc
inc
dec
hlt
xchg
cmp
addb
xor
dec
inc
js
inc
pop
xchg
xor
pop
dec
jge
inc
inc
jbe
movsb
mov
add
add
and
in
xorl
ss
popf
mov
xor
mov
nop
inc
cs
cmpsb
dec
lahf
sbb
imul
stos
mov
fidivrl
jle
mov
aaa
fnstcw
dec
adc
test
aas
jbe
or
cmpsl
jae
sarl
inc
xchg
fidivrs
sarl
or
cmp
fs
jns
pop
popa
push
and
pop
lcall
and
jne
aam
xchg
pop
movsl
pop
cmp
idivb
mov
add
adc
cmp
pop
push
jmp
push
mov
repz
cmp
inc
push
popf
inc
in
inc
mov
std
fiadds
stc
pusha
lea
dec
adc
and
sbb
inc
clc
sti
xor
orl
iret
adc
xlat
inc
adc
incl
adc
inc
in
outsb
iret
addr16
mov
pop
and
iret
pop
pop
aas
dec
dec
divl
xor
repz
xchg
mov
adc
leave
into
inc
mov
xchg
fwait
push
jo
push
fnstsw
lods
pushf
sub
mov
jne
loop
mov
jo,pt
outsl
fdiv
sbb
mov
fwait
jns
repnz
jnp
rcll
out
mov
and
clc
out
jl
and
sbb
test
adcb
jns
adcb
jae
mul
jne
push
fcomps
xor
imul
mov
pop
cmpl
cmp
dec
rorb
std
mov
orb
jmp
pop
push
xor
repz
outsl
rolb
cmp
jno
pop
xor
in
cmpl
push
daa
stos
mov
movsl
outsb
stc
test
rcll
aaa
fcompl
nop
leave
ss
test
pop
mov
sub
into
pop
call
cmpsl
aas
movsl
mov
and
mov
mov
pop
sub
mov
mov
push
mov
iret
mov
filds
pop
leave
ja
fdiv
dec
lds
dec
mov
pop
xor
push
mov
scas
rolb
out
cmp
scas
mov
addr16
sbb
gs
in
lret
or
out
fimull
pop
dec
mov
adc
sti
mov
lcall
ljmp
cmpsb
fwait
jg
in
or
dec
cmc
loop
leave
stc
xchg
inc
lret
inc
push
adc
jo
mov
jmp
sahf
lods
lods
call
fidivl
shll
in
stos
imul
into
inc
popw
cmpsb
cmpsl
pop
fdivrp
mov
mov
mov
mov
test
sub
mov
mov
sti
push
jo
pop
repnz
pop
push
mov
add
enter
xchg
mov
sbb
jl
loop
test
sub
das
mov
inc
jb,pn
pop
cmp
push
xorl
and
cltd
xor
pop
aas
pop
fstps
enter
sbb
push
imul
in
sub
pop
movb
sarl
addl
sub
fsts
lods
add
cmp
test
adc
rcrb
fsubrp
jle
gs
jo
cmpb
push
jb
mov
mov
out
push
xor
jb
and
jb
insl
stos
sbb
adc
aad
pop
mov
jecxz
add
dec
test
add
jnp
xlat
ja
subl
inc
sbbb
and
fwait
pop
push
daa
xchg
mov
sub
insl
cwtl
mov
lods
jmp
lcall
jg
mov
cmpsb
sub
lock
test
mov
sbb
pop
push
xor
in
test
jle
mov
ljmp
cwtl
scas
sub
stos
shlb
into
sbb
loop
enter
push
hlt
shlb
dec
xor
nop
inc
into
rolb
pop
xchg
dec
and
cmp
jnp
xchg
add
mov
clc
clc
ss
les
leave
ja
or
out
aad
mov
movsb
adc
dec
lds
nop
lock
adc
pop
sub
int3
lea
or
in
repnz
ret
out
mov
xchg
dec
sub
add
dec
insb
xchg
mov
lods
pop
jbe
in
inc
mov
out
movsl
out
sti
pop
enter
xchg
roll
movsl
mov
xchg
push
dec
lret
iret
pusha
xor
in
ljmp
add
push
push
cmpsb
mov
loope
jmp
test
fdivrp
nop
inc
bnd
dec
and
cld
sbb
sub
insl
dec
dec
not
pop
cmc
lods
lcall
pop
push
repz
or
cmpsl
mov
dec
sti
jmp
fidivrl
pop
and
call
xor
xchg
pop
mov
popa
aam
push
cld
pop
sbb
mov
inc
js
cli
jb,pn
jne
aaa
xchg
out
xchg
mov
into
push
push
push
sar
lods
xor
pop
jmp
or
or
es
out
repnz
aam
fs
and
push
mov
out
sub
aad
inc
cmp
sub
cltd
xor
push
repz
mov
sahf
add
add
jnp
roll
cmp
rcrl
cmc
pop
pop
mov
inc
movb
bnd
mov
push
jle
jecxz
rcrl
xor
cmp
adc
xor
shlb
sbb
or
mov
mov
ficompl
out
push
dec
add
addr16
movsb
movsb
xor
inc
sub
mov
xchg
jno
cmpsl
fs
jb
cmp
in
pusha
nop
out
adc
mov
pop
and
or
adc
popf
loope
out
sbb
leave
leave
dec
xor
push
mov
jge
insb
ret
int3
add
dec
mov
pushf
pop
adc
data16
fs
fidivs
pop
mov
mov
out
mov
sub
cmp
add
push
push
push
ret
push
push
jl
in
xchg
xchg
out
rclb
sarl
dec
repnz
jo
std
adc
push
ss
mov
push
dec
enter
fbld
lcall
and
ficoml
and
cmpsb
sub
push
and
adc
mov
scas
sub
xlat
inc
adc
pop
sbb
mov
psubusw
mov
or
ret
or
jo
cli
mov
push
js
mov
call
rclb
or
shlb
in
js
xchg
cmp
or
pop
andb
and
xor
pop
int
jnp
sub
lret
xlat
add
in
pop
xchg
test
pop
mov
pop
hlt
mov
jle
in
xor
roll
push
jnp
fisubrs
cmc
adc
inc
and
fiadds
lods
pusha
cmc
push
sub
repz
imul
call
sub
mov
xlat
fs
or
inc
sub
mov
pop
pusha
xor
sbb
mov
out
test
cwtl
add
jnp
mov
ss
xchg
test
pop
out
push
test
jp
jno
mov
shl
or
mov
or
decb
inc
or
sbb
mov
or
arpl
sbb
jne
out
jge
rcrb
repnz
lods
imul
ret
mov
xor
ret
ficomps
push
rclb
push
mov
sahf
insl
and
and
xor
lret
xor
mov
mov
and
les
sub
push
jbe
sbb
or
xchg
mov
inc
dec
fs
mov
test
push
addr16
pop
sub
loop
iret
lds
xchg
or
xchg
repz
push
movsl
fwait
mov
mulb
loop
adc
xor
negl
fldenv
cmp
call
jnp
pop
iret
pop
stc
xchg
inc
cmp
lcall
fildll
and
xchg
aaa
test
jecxz
inc
popa
iret
mulb
mov
mov
lgs
stc
mov
sub
fildll
cltd
out
fisubrs
jae
inc
cli
or
add
mov
jbe
or
sub
push
fnsave
pushf
push
adc
ja
xor
push
adc
aam
jne
mov
jns
pop
adc
jae
sbb
dec
dec
mov
enter
push
arpl
cmc
fsubrl
xchg
aad
cmpsl
xchg
pop
insb
xchg
sbb
push
mov
ljmp
fwait
sbb
lock
daa
ret
scas
push
and
aam
sbb
incb
lds
jnp
stc
dec
inc
adc
cmp
outsl
jle
negb
gs
push
add
nop
cmp
pop
pop
mov
push
xchg
ljmp
and
leave
movsb
push
js
adc
xor
dec
shll
popa
out
int
fcoms
movsl
or
push
jnp
sub
fisttpl
sbb
mov
add
dec
mov
int3
add
jg
ss
cmp
inc
and
sbb
stos
hlt
pushf
and
push
dec
mov
mov
xor
sahf
icebp
ss
mov
xchg
sbb
cld
in
imul
stc
ja
rcr
mov
scas
mov
dec
pop
push
add
jg
jg
inc
push
add
sub
xchg
mov
insl
xchg
push
dec
add
enter
popf
insl
aad
ljmp
adc
jae
in
clc
mov
fwait
add
lods
and
xor
mov
ds
pop
or
and
cmp
mov
mov
subb
lcall
orb
push
mov
jle
or
cmpsb
jge
lock
jg
mov
addr16
lret
and
cwtl
dec
jmp
and
mov
ret
and
aam
aam
mov
shlb
push
sbbl
cld
push
sbb
mov
push
xchg
and
inc
js
icebp
inc
sub
or
adcl
jp
arpl
sub
pusha
adc
popf
cmpsb
cmpb
test
shl
jge
aam
cmp
cld
das
jg
pop
push
inc
mov
into
ds
test
lock
imul
loop
push
or
lods
ss
push
int3
jno
mov
imul
shl
rcrl
in
jl
into
add
push
jp
mov
mov
imul
mov
cli
add
mov
ret
pop
outsb
lea
aad
push
push
mov
mov
push
mov
push
jne
and
or
mov
mov
pushf
xchg
jae
icebp
mov
pushf
dec
adc
push
jmp
adc
ficomps
pop
sbb
push
inc
jmp
ljmp
dec
sub
cltd
pop
and
stos
and
cwtl
scas
add
cmpsl
enter
jae
push
and
enter
mov
jb
jg
mov
xorb
lahf
push
outsl
xor
lret
cltd
scas
push
inc
xchg
jp
scas
negb
adc
lock
mov
push
push
mov
mov
and
dec
add
cmpsl
inc
mov
inc
js
cwtl
push
and
mov
add
cld
jge
daa
adc
inc
pop
pushf
sbb
inc
xor
ja
jge
pop
in
jnp
pop
testl
and
cmpsl
mov
ret
mov
or
and
and
or
aaa
lret
cmp
movsl
jmp
inc
and
jmp
mov
stos
dec
cmpl
sub
int
pop
out
xchg
xchg
add
xchg
repz
add
cmpsl
jae
test
sti
clc
inc
pop
xor
jns
mov
out
jmp
cld
inc
ret
sub
inc
dec
cli
jp
stc
std
jmp
adc
insb
mov
push
movsb
sub
add
cwtl
aas
lds
jle
pop
add
in
sti
out
or
xor
jbe
cmp
inc
push
addr16
nop
push
jmp
pop
popf
ljmp
sbb
pop
lret
xchg
lods
aad
nop
sub
cmpsl
sbb
or
inc
and
stc
dec
fldcw
xchg
inc
fists
cmp
ds
fs
lret
nop
into
xchg
adc
or
xor
xchg
mov
loop
sbb
mov
test
std
out
mov
push
push
jb
pop
sbb
scas
loope
mov
sub
xchg
mov
in
jnp
lods
push
cmp
push
das
cmc
adc
int
shlb
add
and
dec
xlat
stos
sub
lea
stos
dec
cs
in
testl
cmpsb
sub
mov
xor
fwait
add
bound
xchg
repz
loope
add
jno
subb
pop
sub
mov
je
ret
enter
rclb
dec
imul
scas
mov
hlt
push
std
and
mov
cld
iret
filds
mov
rclb
xchg
adc
push
push
aaa
bound
cmp
hlt
mov
push
movsb
call
out
out
cmc
adc
outsb
cmp
add
and
xchg
jmp
frstor
jns
and
push
andl
ror
push
xlat
test
sub
into
and
push
call
mov
pop
sbb
movsb
xchg
cmp
xor
adc
or
nop
imul
jge
or
push
fstpl
pop
xchg
sub
xchg
stos
movsl
mov
and
lret
and
sub
out
scas
call
repz
dec
orb
idivb
push
sbb
mov
inc
test
pop
jno
jmp
xchg
out
stos
rcrb
pop
iret
fwait
dec
imul
ret
or
mov
mov
out
es
mov
dec
mov
mov
js
ljmp
jo
lea
fdivrp
xchg
sbb
dec
dec
scas
bound
push
jmp
push
roll
maxps
mov
adc
iret
and
ja
xor
mov
jbe
ss
mov
jl
stc
xorl
mov
lods
sbb
gs
pop
mov
imul
test
jo
sbb
and
cltd
dec
lea
lcall
std
stos
and
cwtl
sub
aas
outsl
jl
push
stc
daa
ja
or
push
je
xchg
xor
lret
inc
sahf
in
subb
sub
pop
pushf
mov
jg
loopne
mov
mov
dec
sahf
in
testb
cli
mov
lcall
mov
out
rorb
pop
sbb
dec
adc
pop
inc
stos
outsl
ds
test
mov
xlat
cwtl
shlb
xchg
lret
leave
inc
lods
push
push
push
or
ss
mov
mov
fldt
mov
add
push
int3
cmp
xor
cmp
lcall
movsb
leave
pop
test
inc
sub
adc
mov
cld
fdivrs
and
sahf
loop
mov
cwtl
fstpt
jbe
and
cmpsl
sub
mov
sub
into
and
inc
adc
inc
jg
cmp
xchg
popa
jnp
stos
fildll
jo
div
outsl
xchg
aad
sub
mov
add
fcmovbe
rcrb
push
scas
jecxz
sbbl
push
test
out
add
mov
rcrb
push
push
adc
repnz
ljmp
cmpsl
jl
sub
dec
and
imul
push
leave
cmpsb
call
lcall
mov
ficoml
std
dec
jne
ds
xchg
lods
fld
jnp
inc
push
inc
lods
pusha
sbb
cmpsl
repnz
lcall
mov
fdivrl
and
xchg
sbb
scas
repnz
and
addl
sti
clc
xlat
lock
pop
testb
mov
xchg
cmp
or
xor
pop
fs
dec
cmpsl
call
pop
in
lret
fxch
sbb
bnd
sahf
xor
jno
cmp
fucomp
dec
xor
and
inc
movsb
adc
cs
lds
sbbl
pop
sbb
and
pop
jo
cmpsb
ja
pusha
arpl
push
push
dec
gs
cld
mov
bound
and
sbb
enter
in
stc
jne
pop
lahf
int3
jl
mov
add
adc
pop
cmp
int
and
int3
cmp
adc
xor
adc
jne
cltd
mov
movsl
sbb
dec
mov
inc
stos
aam
pop
repnz
fistps
arpl
and
in
pop
xor
das
mov
xor
or
int
es
loope
lret
mov
insl
jle
push
repz
xchg
lods
mov
xlat
add
imul
out
xor
dec
js
sub
insl
pop
movsb
test
jb
fldcw
ret
shrl
sbb
sub
scas
xlat
push
lods
jge
insl
lods
xchg
inc
xchg
add
call
mov
movsl
jo
mov
inc
ja
push
iret
pop
pop
fs
clc
sbb
mov
push
cmp
loop
lds
cmp
mov
mov
call
pop
pop
gs
and
push
xor
xor
rolb
cmp
sar
loope
clc
jmp
sbb
xor
jnp
ret
inc
jp
mov
jge
xchg
dec
push
xlat
fcmovne
popl
lds
loopne
in
dec
insb
int3
mov
pushf
mov
adc
fdivs
xor
xor
movsb
xchg
sbb
cmc
aam
das
scas
xchg
mov
fiaddl
mov
add
sbb
je
lret
insb
sbb
xor
out
imul
insb
into
mov
jns
pop
stc
out
xor
mov
pop
and
push
test
xchg
jnp,pn
fmuls
gs
jecxz
jb
stos
mov
incb
sub
rcrb
test
aaa
xchg
mov
mov
ss
mov
cli
and
jno
mov
push
cmc
inc
jae
push
push
cltd
sub
mov
mov
int3
cmpsb
dec
test
or
mov
sub
cmp
cmp
mov
xchg
jbe
sbbb
xchg
scas
ljmp
bound
sahf
aam
mov
idivb
dec
dec
add
imul
jns
pop
xchg
call
xchg
pop
mov
ret
mov
xor
jge
dec
jl
add
sub
loop
sub
pop
inc
jl
push
inc
in
jmp
or
jle
jne
sti
test
push
in
fidivrl
ljmp
cmp
out
stos
xchg
ret
in
mov
push
adc
add
cltd
les
icebp
xchg
sbb
mov
mov
mov
and
and
jo
scas
sarl
mov
mov
xchg
mov
xchg
andb
xorl
lea
int3
sbb
cld
mov
and
in
cmp
mov
movl
jmp
int
pop
xchg
jno
aam
sti
loope
std
enter
pop
cmp
sti
ret
or
outsl
pushw
sub
rorl
cmpsb
stos
or
addb
pop
insl
cmpsl
pop
xchg
ret
adc
sub
loope
push
in
call
add
sbb
shrb
ss
sbb
xchg
pop
sbb
mov
mov
fcomp
popa
mov
dec
sahf
ja
stos
insl
sbb
daa
mov
mov
xchg
ret
sub
pop
in
sub
or
sbb
pop
bound
je
rolb
divb
cmc
arpl
and
out
add
rol
loopne
fs
gs
mov
xor
and
mov
mov
mov
stos
loope
adc
sbb
xchg
pop
inc
addl
int3
lock
mov
push
add
add
les
push
icebp
cmp
push
adc
loop
and
adc
stos
sar
push
fs
jne
sbb
out
push
ret
flds
jmp
sub
mov
cmc
mov
jb
movsl
mov
inc
sbb
mov
sub
gs
jmp
in
inc
lods
cmovne
sub
clc
push
or
mov
test
jecxz
scas
test
mov
cmpl
out
pop
sub
loop
stc
popf
sub
pop
aas
into
lcall
fsubl
rcrl
jo
les
push
call
test
outsl
xor
mov
jmp
mov
pushw
dec
xchg
xchg
ficompl
xor
xchg
div
loopne
dec
and
pop
cli
lret
jp
pusha
mov
adc
aad
cs
jmp
sub
in
cmpsb
or
popf
gs
cmp
mov
or
cmp
outsb
aaa
sub
daa
pop
scas
or
outsl
stc
mov
pop
adc
inc
cmp
push
mov
fucom
lock
add
mov
mov
stc
dec
scas
cmp
or
movl
cld
jg
inc
ror
xor
ss
mov
dec
jle
pop
pop
scas
dec
int3
rcl
mov
loopne
rcl
mov
add
xchg
inc
out
es
push
adc
push
push
add
jmp
add
mov
icebp
jb
shrb
pop
sub
mov
push
jmp
out
leave
addr16
sahf
pushf
leave
shlb
shrl
incb
loop
imul
in
sub
lcall
sub
or
mov
inc
xchg
jne
pop
addr16
inc
sahf
jmp
cmp
lods
jge
mov
pop
push
and
scas
or
mov
movsb
jecxz
push
lahf
repz
rorb
cs
lds
je
jb
adc
xchg
jbe
mov
aad
shrb
lret
sarl
lret
and
jne
push
and
sarl
in
aaa
cmpsb
add
aaa
cltd
jmp
push
push
shll
sti
jl
add
lods
xchg
cld
lock
cmpsl
and
push
fnstsw
push
scas
scas
ljmp
cmpsb
ret
int3
lock
xor
fmuls
push
les
inc
and
out
imul
sub
pop
inc
fcmovnb
jne,pt
mov
rol
push
jle
jge,pn
aaa
xchg
cs
jp
rcll
aas
lock
adc
negl
xchg
mov
mov
sti
nop
adc
push
mov
loope
pusha
out
push
jae
pop
pop
cwtl
cmp
adc
or
int
dec
outsb
out
sub
push
or
xchg
xchg
mov
mov
es
pop
scas
jae
or
mov
adc
fwait
jmp
aaa
jbe
cs
icebp
cwtl
jnp
sahf
or
jno
shr
xchg
in
dec
insl
stos
mov
sub
ficompl
dec
popf
sbb
jecxz
push
mov
repz
inc
sub
repz
jecxz
xor
or
push
fs
aad
loope
sbb
ds
push
push
repz
add
pop
cmp
cs
mov
out
cmpsb
mov
lods
add
mov
iret
mov
into
std
out
das
pop
out
pop
inc
mov
addl
pop
iret
test
lahf
insb
and
cmp
stc
sbb
pop
stos
je
xor
push
mov
or
add
add
stc
cmpsb
gs
inc
int
lret
jecxz
pop
sbb
sbb
or
xchg
shlb
jecxz
hlt
sbb
nop
cld
gs
mov
dec
adc
cli
jmp
jnp
ja
adc
test
inc
scas
mov
fcmovbe
les
adc
ja
pop
inc
ljmp
dec
adc
les
movsl
scas
in
xor
sub
fs
scas
sub
xor
mov
jg
jne
fdivrl
pop
shlb
sub
xor
outsl
push
test
pushf
clc
aas
jae
pop
int
clc
mov
mov
mov
neg
rcrl
sbb
inc
pop
daa
mov
jnp
xchg
out
insb
cmp
push
jb
cmp
mov
fiaddl
cmp
dec
add
rcrb
or
jbe
or
inc
and
sbb
jmp
cmp
dec
sbb
or
mov
pop
and
mov
xchg
mov
push
pop
xor
add
movsb
stos
cwtl
into
in
mov
add
int
imul
sbb
scas
int3
mov
loopne
les
and
jno
int
scas
lea
pop
stos
outsl
cs
adc
mov
mov
push
mov
xchg
dec
cmp
test
lcall
push
mov
clc
icebp
sbb
mov
push
cmc
push
add
int3
sbb
and
dec
mov
xchg
sub
jne
icebp
in
push
adc
xlat
outsb
jns
clc
or
sub
mov
insb
out
mov
jp
lret
lret
stos
inc
hlt
mov
popf
test
sbbl
cmc
fists
cld
js
mov
cwtl
dec
or
sub
scas
and
imul
xchg
bound
imul
aam
and
add
lret
enter
pop
push
push
stos
pop
cld
loopne
or
push
mov
cmp
xor
cmp
mov
push
jge
ret
fisubs
fisttpl
out
cld
dec
adc
mov
pop
mov
mov
jle
mov
push
mov
rol
subl
sbb
push
mov
xchg
imull
aad
pushf
imul
mov
call
std
jl
sti
push
mov
jnp
jmp
clc
ss
sub
out
out
lahf
jp
and
in
fs
mov
mov
jb
popa
decl
pop
adc
jle
ljmp
jno
shlb
mov
je
and
outsl
sub
dec
jnp
or
sbb
mov
dec
arpl
mov
pusha
leave
sbb
or
mov
mov
das
shl
pop
jl
sub
ljmp
or
lret
or
imul
lods
mov
hlt
out
xor
sub
movsb
xlat
std
test
pop
out
cli
jo
push
cwtl
or
in
sbb
add
stos
testl
and
shll
fsubrs
mov
mov
leave
ds
cld
xchg
and
xchg
ljmp
xchg
pusha
out
mov
in
pop
mov
add
mov
mov
repz
xor
bound
mov
fldenv
lea
repnz
add
push
int3
push
mov
jle
mov
sbb
imul
test
sbb
xchg
fwait
outsb
xchg
cmp
leave
mov
xlat
and
pop
repnz
fidivs
in
mov
iret
enter
insl
shll
mov
loope
add
mov
adc
xchg
mov
imul
fisttpl
stc
and
dec
adc
inc
sub
inc
ja
pop
or
push
lcall
dec
add
mov
call
rcrl
rorb
test
adc
sub
fs
xchg
pop
push
lea
xchg
mov
xchg
jne
inc
fimuls
sub
pop
scas
loop
daa
jno
xlat
mov
push
xchg
call
xchg
mov
jmp
pop
xor
shll
jns
jl
adc
call
xchg
inc
pop
jmp
vphaddwd
cli
adc
or
ss
mov
in
out
sub
mov
das
push
mov
daa
pop
add
ret
mov
clc
push
sti
int3
dec
test
gs
jge
in
jo
in
inc
mov
aam
mov
mov
in
jmp
popf
gs
pop
or
loope
ret
fisubs
in
pusha
lds
outsb
sub
popl
test
cs
mov
loop
xor
inc
ss
xchg
push
pop
adc
cs
dec
rclb
cmp
das
sbb
push
movsb
mov
ja
pmaxub
mov
xor
pop
mov
mov
jbe
mov
mov
mul
and
movsb
xchg
loop
fdivs
sub
dec
xchg
scas
inc
add
sub
xchg
nop
add
push
fwait
mov
or
fsubs
lods
push
sbb
aad
fnstcw
pop
adc
push
pop
or
jmp
jecxz
rol
mov
fisttps
xchg
lods
pop
aad
mov
aad
hlt
ftst
fidivs
mov
ds
imul
add
cwtl
or
fistl
out
ljmp
pop
pop
inc
push
dec
xor
mov
or
aas
fsubs
mov
out
and
mov
roll
or
cmpsl
int3
add
push
push
fidivrl
xor
pop
lret
cmpsl
fcmovbe
pop
mov
mov
bnd
cld
push
sub
rcrb
scas
sahf
jp
inc
popa
mov
dec
fisttps
push
rclb
fnstenv
lret
cwtl
xchg
jno
push
add
inc
mov
movsl
cmpsb
jae
inc
mov
cmp
mov
lret
cmc
sub
outsl
add
jl
mov
mov
ds
stos
lcall
add
loope
xchg
xchg
imul
jnp
push
inc
lea
sbb
fwait
mov
pop
leave
aaa
sbb
mul
fcoml
js
pop
sub
xor
fsubr
xchg
lret
adc
into
or
stc
sbb
addr16
lds
xchg
rcrl
jae
or
loop
fidivl
negl
mov
jmp
out
and
pop
xor
arpl
dec
in
or
inc
clc
sub
daa
aas
mov
pop
xchg
insb
test
sbb
test
fmuls
frstor
cwtl
mov
mov
out
pop
mov
loope
lahf
xor
mov
in
test
adc
add
repz
mov
rcrl
push
ja
sarb
xchg
sbb
fistpl
mov
sbb
push
lods
push
std
cwtl
mov
pop
pop
mov
inc
adc
mov
adc
dec
pop
or
mov
mov
xor
inc
dec
xchg
inc
pushf
in
inc
lcall
es
loope
or
fcmovu
add
adc
jnp
push
fldenv
cmc
lock
sahf
ds
push
cmpl
cmp
call
and
lods
cmpsb
arpl
negl
cmp
fsubr
cmp
mov
test
sub
dec
test
into
xor
pop
jp
add
add
nop
cmp
xor
mov
test
sub
sbb
cmpsb
lds
out
inc
imul
lock
stos
cmpsb
pop
into
mov
je
scas
scas
shlb
and
xlat
or
mov
mov
pop
enter
push
inc
movsb
pop
sub
xchg
jae
sar
mov
sbb
pusha
xchg
gs
mov
scas
dec
sub
cmpsb
inc
mov
sarb
push
jge
sbb
add
sar
ret
xorb
inc
stos
inc
adc
das
enter
jo
push
jmp
pop
xchg
push
mov
lock
aam
inc
sub
in
addr16
or
adc
pop
sbb
dec
cmp
mov
sub
push
scas
arpl
imul
push
pop
pop
or
cmp
mov
jae
sbb
jg
insb
adc
inc
lods
pop
add
xchg
subl
jge
xor
dec
sbb
shll
test
push
and
or
mov
dec
inc
ffree
idivl
aaa
std
aad
push
jb
dec
sub
cs
xor
push
ret
sahf
subl
xchg
xchg
mov
mov
decl
addr16
in
icebp
test
inc
push
xchg
loopne
jle
mov
and
fisubrs
iret
sbb
gs
movsl
cmp
out
into
jg
sbb
pop
xchg
cmp
cld
sbb
test
fs
sahf
out
popf
clc
fisttpl
lret
int3
mov
fs
imul
loopne
icebp
cmpsb
fidivrl
loopne
hlt
cmp
and
imul
add
scas
jl
mov
sub
iret
sub
iret
mov
mov
xchg
inc
scas
xor
ss
mov
sbb
push
cmp
iret
jne
mov
and
insl
jecxz
jl
outsb
addl
cmp
iret
push
sti
add
push
add
movsl
movsl
mov
add
ficoml
mov
es
and
ficoml
sbb
ljmp
and
jnp
sti
inc
mov
jb
jae
jae
xchg
jge
push
push
mov
or
adc
lret
or
aad
add
in
bound
dec
scas
mov
stc
push
icebp
mov
jmp
xchg
aad
jne
xor
insl
test
mov
repnz
sbb
and
jne
iret
cmp
and
dec
push
into
in
jecxz
mov
fisubs
cltd
inc
xor
lods
in
jmp
mov
or
faddl
stos
inc
imul
out
push
sub
into
add
pushf
sub
and
sub
daa
pop
and
loope
rcrb
cmp
mov
mov
cmpsl
sbbb
sub
call
arpl
sahf
bound
gs
shr
enter
cmpb
int3
or
lahf
jns
pop
stc
inc
push
cmp
shld
fdivp
dec
push
std
inc
sti
sub
pop
je
dec
subl
pushf
int3
sbb
cmpsb
fisubrl
loop
mov
popf
shlb
rsm
shll
pop
jno
jmp
inc
jmp
in
outsl
std
add
cs
pop
lds
xorb
xorb
dec
sub
pop
pop
jno
inc
xor
cmp
gs
ffreep
pop
rol
sub
lcall
fsubp
cmp
and
fistl
aam
aad
sbb
stc
sub
and
pop
lcall
pop
fsubrl
push
mov
fwait
int
std
mov
xor
cmpsb
pop
mov
sub
add
mov
addb
sbb
pop
dec
push
outsl
je
and
gs
jecxz
pushl
scas
cwtl
push
in
aam
lcall
dec
mov
rorl
cld
push
ret
outsb
int
cmp
add
test
sub
and
stos
mov
lret
lea
adc
scas
pop
sub
mov
and
jbe
inc
es
sbb
bound
std
add
shr
mov
ret
cltd
inc
xchg
jmp
sub
push
sub
adc
mov
mov
mov
xchg
mov
xor
cmp
fs
stos
add
add
pusha
mov
cmp
fbstp
push
mov
cli
cld
ja
dec
lods
push
mov
xor
daa
or
fidivs
imul
cltd
into
pop
dec
cli
xchg
jns
push
lds
cmp
or
pop
in
fldt
sbb
xor
adc
pop
cmp
imulb
loop
stos
out
and
cld
lods
mov
jo
xchg
xor
push
imul
je
shlb
cli
jle
pop
push
call
adc
inc
sbbb
jge
add
andl
outsb
testb
or
add
or
pusha
jle
cmpsl
cld
mov
push
popa
pmaddwd
lret
inc
cs
aas
xor
xor
adcb
pop
std
mov
ljmp
mov
pop
add
imul
inc
and
sbb
push
pop
out
aad
scas
loopne
jno,pt
fwait
dec
sub
incb
shrl
outsb
std
mov
jecxz
pop
xor
loope
scas
sti
ret
and
daa
outsl
lea
push
push
and
mov
divb
cmp
xor
scas
cmp
mov
add
inc
jne
movswl
sub
cmp
mov
inc
shll
mov
inc
cmp
stc
pop
inc
cli
or
in
xor
out
or
in
push
lea
jne
mov
mov
sub
add
mov
xchg
sub
cli
mov
sti
ljmp
cmp
jmp
xchg
add
popf
inc
jo
pop
xchg
mov
cs
cmpsb
pop
int
mov
mov
adcb
sti
aad
test
mov
dec
das
mov
fdivrp
push
shll
xchg
and
dec
xchg
mov
inc
xlat
inc
ja
mov
movsl
and
sbb
mov
mov
fxtract
adc
aas
out
gs
mov
push
movsl
jecxz
jns
out
jbe
leave
and
or
push
push
pop
fdivrl
cwtl
xchg
aaa
shrb
cmp
pusha
negb
cmp
ljmp
mov
dec
pop
xlat
jecxz
adc
pop
je
dec
xlat
mov
and
dec
dec
push
sbb
adc
push
pop
mov
inc
and
inc
xor
jns
sub
push
jl
imul
out
mov
and
lock
ret
xchg
out
dec
aaa
jg
push
jmp
int3
push
xor
push
pop
xchg
or
stc
outsl
push
fidivl
inc
xchg
mov
enter
insb
sub
scas
test
ss
pop
adc
repz
add
stos
adc
fbstp
stos
ja
pop
movsb
pop
cmp
xchg
mov
movsl
lret
push
push
lret
inc
mov
push
es
lahf
inc
cmpsb
std
pop
adc
mov
xor
test
xor
mov
je
cwtl
loop
mov
lret
movsl
ret
sahf
data16
sahf
add
jns
mov
stos
mov
gs
fldenv
pop
stc
pop
insl
sarb
cmc
xor
and
mov
insl
add
je
sarb
or
pushf
mov
sbb
aaa
adc
dec
in
xor
hlt
loop
mov
dec
mov
stos
cmp
mov
sti
jb
sub
jge
push
inc
enter
fimuls
enter
stos
add
cmp
inc
out
aaa
outsb
xor
sbbb
and
mov
ss
fildl
xor
sub
cmp
out
or
push
cs
cmp
fldl
sbb
in
cmp
sub
dec
andb
mov
jge
mov
inc
int3
and
rcr
mov
mov
pop
add
lcall
fs
les
dec
pop
xchg
add
jne
cmp
ja
cli
loope
aam
sub
pop
mov
outsl
popa
dec
jbe
push
test
jno
icebp
push
inc
sub
mov
pushl
daa
xchg
out
ret
or
mov
mov
sub
in
mov
adcb
adc
int3
dec
mov
mov
pop
jl
dec
mov
xchg
loope
sbb
nop
adc
aaa
xchg
or
addr16
pushf
mov
int
and
js
xchg
xor
dec
mov
cmp
jle
pop
std
js
sbb
jb
mov
or
mov
xchg
add
xchg
cmp
mov
jmp
test
clc
ljmp
mov
imul
out
in
mov
cmp
push
add
pop
jno
pop
xor
dec
scas
mov
pop
in
push
dec
cmp
xchg
sbb
cli
xor
call
pop
cmp
jp
lret
and
repz
inc
pop
and
sti
pop
xor
or
push
dec
test
push
cmpl
mov
and
movsl
arpl
and
pusha
jmp
outsb
mov
or
mov
lret
imulb
push
xlat
les
xsave
ljmp
mov
shll
sub
negl
stos
aaa
dec
shlb
jg
or
mov
jmp
pop
es
inc
stc
sbb
pop
sbb
push
push
imul
ss
jb
test
fisubs
lods
ja
pop
add
ret
xorl
cmp
jo
xchg
mov
inc
lret
xchg
rcr
mov
adc
mov
shl
add
jns
sbb
dec
out
mov
mov
and
outsl
sbb
jge
in
insb
mov
icebp
pusha
inc
mov
add
inc
push
shlb
pusha
jnp
inc
push
pop
pop
lods
cwtl
aaa
rcll
insl
das
dec
rorb
xor
test
push
fimuls
scas
sti
mov
jnp
aaa
or
jp
xor
fadds
cltd
aam
in
dec
or
test
xrelease
push
add
cld
add
fadd
dec
inc
push
jl
mov
jmp
cmp
inc
repz
inc
adc
out
insb
mov
or
xor
clc
cmp
xchg
inc
jl
push
icebp
push
jge
sub
ret
mov
dec
push
pushf
sbb
inc
ljmp
fs
ja
xchg
or
ficomps
mov
mov
jge
roll
mov
jmp
fmulp
or
jae
lock
out
js
cmp
sbb
pop
imul
test
stc
push
loope
or
xor
ja
pop
mov
cld
adc
mov
xor
nop
fdivrs
mov
bound
mov
push
xchg
or
pop
jg
mov
pop
std
daa
ret
sbb
out
and
lret
pop
call
xchg
adc
sbbl
jno
mov
jp
mov
sbb
inc
mov
pavgw
pop
jp
outsl
sub
push
adc
lret
jl
test
jmp
inc
lea
sub
movsb
cmpsl
fs
pusha
pop
dec
lret
or
adc
adc
js
cmpsb
sbb
lret
jae
mov
jmp
ret
test
sarl
addr16
and
ss
fnstcw
jmp
test
and
push
pop
mov
mov
mov
imul
inc
dec
mov
cmp
adc
pop
js
mov
xchg
adc
scas
ficoml
sbb
jecxz
jnp
push
das
mov
sub
mov
add
jmp
adc
pop
scas
dec
mov
cmp
sbb
sub
aas
xchg
xchg
mov
cmpsl
push
xor
out
leave
das
insb
int3
mov
sbb
loopne
add
mov
cs
call
sub
dec
mov
dec
inc
mov
inc
popa
mov
stos
mov
data16
and
pop
mov
scas
cld
jp
xor
outsl
lret
adc
adc
hlt
aaa
adc
inc
sti
scas
jo
mov
xor
add
sbb
cmp
lcall
mov
dec
mov
movsl
sub
lahf
adc
pop
ret
jo
leave
inc
xchg
popf
pop
add
ds
jae
dec
out
shll
insb
jp
adc
insb
test
shl
push
push
cmp
fsubl
mov
daa
sub
int3
pop
adc
cmpb
stc
mov
inc
xorb
mov
lcall
mov
ss
xchg
scas
sub
inc
cmpsl
jmp
mov
fcom
sbb
movsl
push
je
pusha
lods
outsl
fstpt
dec
std
sub
in
push
lcall
outsb
int
dec
adc
push
lods
sub
add
mov
or
inc
in
sbb
xor
sub
int3
ret
imul
mov
mov
lcall
jnp
sub
add
inc
nop
lock
aad
iret
jnp
or
clc
mov
jmp
jb
mov
inc
es
pop
jae
in
fcoml
jnp
xor
je
mov
mov
dec
xor
std
xchg
daa
ret
lea
push
inc
add
sub
jmp
dec
call
lret
nop
aam
jg
mov
sbb
adc
ja
lods
or
xchg
mov
xor
imul
lret
xchg
cld
pop
dec
sub
jae
ss
cmp
mov
dec
sar
loope
jb
icebp
ret
ret
repnz
rorl
mov
sbbb
mov
popf
push
or
cmpsb
jbe
addr16
faddl
sbb
subl
pop
mov
sti
mov
and
cmc
into
pop
xchg
adc
jo
push
pop
inc
jno
movsl
and
loope
jb
adc
sub
ds
cmp
fimull
fisttpl
xor
adc
outsl
inc
hlt
push
mov
xchg
push
sbb
sbb
mov
repz
mov
jns
jecxz
xchg
cmp
sbb
push
and
fs
int3
movsb
shll
cmp
repz
push
bnd
popa
dec
sub
sahf
dec
and
jle
ds
hlt
push
fcomps
sub
ret
ljmp
mov
and
call
es
fdivr
iret
mov
and
pop
sarl
push
mov
movsl
daa
popa
inc
pushf
adc
mov
into
adc
and
or
popf
adc
lret
lret
dec
sbb
es
and
sub
jl
sub
mov
clc
movhps
mov
cmp
jns
mov
sahf
aas
repnz
scas
pop
push
lds
loopne
fnstenv
dec
adc
mov
lds
sti
sub
and
mov
mov
sub
loopne
test
add
sub
push
pop
idiv
les
insb
add
dec
arpl
std
test
fmuls
dec
ja
popa
addl
pop
pusha
push
aas
dec
pop
mov
out
pop
out
jo
mov
lret
ror
xchg
in
lcall
sub
mov
cmp
sub
shl
pop
mov
clc
mov
sbb
mov
push
jo
jbe
and
jnp
jns
movsb
mov
cs
add
aas
das
loope
xor
xor
mov
iret
dec
dec
fsub
pop
mov
jp
sbb
aaa
pop
mov
icebp
pop
dec
stos
test
das
mov
repz
inc
adc
xchg
ror
fstpt
out
jb
lods
add
xchg
fs
jne
cld
sahf
sbb
xlat
outsb
daa
cmpsb
cld
pop
in
addr16
adc
sarb
mov
shll
mov
xchg
xlat
pop
push
and
mov
xchg
push
or
mov
ljmp
pop
mov
scas
aad
addr16
mov
push
es
mov
and
pop
pop
push
sbb
lret
xor
lcall
in
add
cmp
roll
push
xchg
movsb
adc
sub
das
arpl
jo
jle
mov
mov
inc
insl
gs
mov
mov
push
xchg
lahf
and
pmulhuw
xchg
push
mov
push
adc
push
icebp
stos
ret
nop
push
jecxz
inc
lods
pop
mov
clc
inc
jbe
outsl
dec
xchg
rcll
push
sub
jno
ljmp
and
push
mov
out
or
push
fisubrs
fmull
jb
mov
add
test
jnp
and
pop
push
pop
sub
push
mov
call
xchg
xchg
and
inc
mov
inc
mov
cmc
aaa
cmp
add
pop
lods
mov
inc
add
jnp
jne
js
xchg
sbb
repz
mov
cmc
pushf
add
dec
fs
mov
popf
and
mov
int3
and
out
or
das
js
jg
ljmp
or
mov
adc
mov
jno
aam
mov
inc
mov
shrb
push
nop
cwtl
outsl
nop
mov
xchg
jno
in
out
call
aas
or
xchg
loopne
ja
push
adc
inc
addb
out
clc
insb
out
push
mov
jecxz
cmp
inc
jae
or
jge
pop
xor
pusha
adc
dec
mov
mov
data16
les
fwait
xchg
addr16
imul
ret
mov
mov
sarb
xchg
sub
pop
push
std
clc
shlb
lock
xchg
push
hlt
xchg
adc
xchg
add
sbb
xor
fbld
inc
scas
inc
lahf
sahf
test
mov
xor
mov
sti
outsl
adc
push
push
xor
cs
dec
sbb
mov
stc
in
mov
dec
into
inc
cmp
and
mov
dec
push
push
cmp
inc
lods
pop
mov
mov
imul
adc
mov
xor
stos
in
dec
dec
jp
jp
or
xor
xor
enter
jns
ljmp
push
add
scas
jb
imul
cli
rcr
add
stc
jp
aas
cld
roll
loopne
pop
adc
add
sbb
sbbl
push
arpl
test
mov
add
cmp
aas
inc
orb
stc
mov
adc
mov
pop
xchg
push
xchg
inc
aam
push
xchg
incl
movsl
add
nop
lahf
lret
pop
icebp
pop
xchg
enter
lods
sub
inc
adc
add
mov
add
dec
sahf
mov
js
and
cmp
repz
mov
pop
xchg
mov
addr16
fstpt
cld
enter
cmp
mov
add
adc
mov
jnp
jmp
insl
inc
adc
cltd
btr
adc
jl
les
push
pushf
insb
cmpsb
mov
mov
sub
jl
mov
and
mov
jne
inc
in
orl
mov
scas
pop
test
int3
add
inc
xchg
in
cmp
sbb
subl
loop
test
shll
mov
sahf
push
xor
inc
xor
cmp
cmc
push
sub
cs
push
sub
and
fimull
sub
nop
sbb
leave
test
sub
repnz
mov
roll
ja
ja
xor
out
push
cmp
ja
mov
imul
out
dec
xchg
icebp
jge
aad
lds
dec
mov
jge
pop
sub
xchg
les
mov
pop
adc
adc
inc
js
xchg
inc
add
inc
mov
lock
int
pop
addr16
rolb
hlt
pop
loop
ds
pop
fisubrs
mov
mov
mov
adc
xor
rolb
dec
movsl
push
sbb
push
mov
decl
add
or
jg
cli
sub
out
pop
push
shll
sti
jge
jae
in
xor
int3
ret
xchg
and
jno
cmc
es
ss
in
stos
mov
xorl
dec
mov
lea
outsb
jl
ret
jle
xchg
test
sub
xor
cmp
adc
add
push
xchg
pop
scas
std
cmc
pop
test
insb
jo
leave
jo
popa
push
rorl
jnp
mov
enter
in
cli
sub
movsb
popa
cmp
mov
jb
pop
sbb
ss
out
add
and
stos
inc
int3
or
pop
dec
shll
or
clc
sbbb
nop
test
popa
fwait
movb
xlat
adc
pop
das
sahf
std
xor
fs
out
xor
loope
and
jge
addr16
lret
lds
adc
es
jbe
jl
and
push
xchg
pop
mov
cmp
mov
jge
imul
test
les
mov
mov
mov
xchg
or
inc
das
push
out
add
mov
dec
push
into
cltd
outsb
mov
add
frstor
sbb
sbb
bound
xchg
push
dec
xor
inc
inc
xlat
add
xlat
nop
adc
push
stos
clc
dec
stos
negb
mov
sti
rclb
shrb
jno
xchg
icebp
cli
or
insl
mov
cmp
sub
xlat
dec
and
lods
imul
xor
leave
pop
orb
out
jp
imul
push
mov
fsub
into
jecxz
mov
movsb
inc
push
jmp
dec
mov
mov
mov
jg
dec
lret
in
and
mov
mov
sub
pop
xlat
adc
xchg
push
or
cmpsb
mov
ret
mov
cmpsl
push
test
in
mov
int3
test
jb
push
push
dec
mov
or
loop
xchg
push
xor
sub
movsl
dec
jle
data16
inc
out
and
jg
cs
cmp
ficompl
ja
cld
aad
out
and
enter
fiadds
mov
fists
push
je
dec
fmuls
sub
lcall
mov
mov
mov
mov
adc
mov
cmp
or
prefetch
xchg
and
mov
imul
cmp
sbbl
jecxz
mov
loope
dec
imul
testb
and
mov
fisubrl
stc
mov
jle
xchg
lds
jp
mov
pop
lods
mov
xor
sbb
xchg
loop
loopne,pn
lds
leave
fbstp
dec
dec
push
call
push
lock
mov
pop
int
mov
ds
jbe
rol
mov
loop
sub
jmp
pop
lock
push
les
xor
push
rclb
mov
pop
popf
fdivrl
push
mov
mov
push
and
adc
adc
cmp
xor
mov
andb
fwait
and
xchg
outsl
daa
shrb
sbb
sbb
xchg
mov
int
push
adcb
and
add
inc
notb
call
sbb
ds
lods
xor
add
lahf
mov
addr16
inc
loope
es
sbb
adc
scas
add
mov
or
mov
adc
inc
je
mull
and
and
imul
repz
je
add
cli
fdivr
in
mov
inc
cmpsb
adc
mov
inc
sub
leave
in
bound
fwait
inc
ja
das
jne
sahf
jns
idivb
dec
lock
movsl
mov
fisubrs
sub
jmp
ljmp
mov
lret
into
test
cmpsb
and
sub
lock
cmc
popa
xlat
call
sub
pop
dec
and
into
dec
popa
ret
shll
push
mov
adc
mov
xor
inc
mov
mov
xor
cmp
lock
insb
lea
aad
and
sub
xor
sub
or
ret
jle
out
pop
mov
xchg
aam
stos
jle
jp
rclb
stos
ljmp
bound
jb
daa
insb
xchg
mov
ficomps
adc
xchg
mov
sub
rcrb
ret
loope
mov
pop
je
xlat
subl
push
cmpsb
xor
loope
sub
rorb
dec
insb
xchg
jo
xchg
push
sub
jge
ret
sbb
loopne
dec
das
aad
inc
ljmp
enter
jmp
imul
xor
jo
cwtl
adc
iret
fs
movsl
mov
test
mov
mov
gs
mov
je
push
mov
xor
jecxz
inc
es
push
int3
cltd
inc
fsubrl
movsl
inc
loope
dec
roll
mov
icebp
ja
and
data16
cs
jl
mov
aaa
sub
sbb
pop
je
int
mov
mov
out
jae
mov
pop
fcomp
lods
pop
pop
mov
rcrb
mov
inc
rcrl
mov
fdivr
out
ja
mov
aaa
add
adc
jae
pop
jbe
ret
cmp
pop
ds
rorl
rol
cmp
mov
enter
cmp
insb
dec
cmp
or
adcl
popf
xchg
gs
outsl
cmp
out
repnz
clc
fmull
repz
shll
fisubs
cmp
shr
subb
dec
scas
ja
push
fs
inc
loop
cmp
popa
adc
and
sbb
inc
pushf
jle
setle
fcomp
loopne
add
sub
adc
fstpl
sbb
push
hlt
shrl
cmp
dec
shll
popf
test
mov
inc
imul
jg
inc
push
mov
lods
ljmp
pop
mov
push
add
addr16
lahf
xchg
shlb
push
dec
aas
out
sbb
inc
mov
stos
mov
int3
xor
pop
and
xor
shlb
sub
and
idivl
xor
cmp
cltd
sarl
aaa
rcl
inc
add
mov
xor
mov
dec
push
pop
xchg
and
daa
jns
jb
out
xchg
and
jecxz
cmp
mov
rolb
les
lret
test
xor
insl
xor
and
out
outsl
fistpl
fistl
mov
jmp
movsl
xor
dec
and
mov
and
test
dec
call
call
test
or
mov
insb
xor
pop
leave
std
pop
xor
outsl
pusha
gs
push
mov
sub
add
mov
andw
push
xchg
jecxz
lret
repz
outsl
pop
jg
add
pop
test
sub
lods
xchg
push
clc
rorb
mov
imul
jecxz
or
rorb
mov
mov
sbb
inc
mov
add
mov
xorb
xchg
sbb
bound
fisubs
test
push
mov
or
sub
or
xor
ret
test
mov
push
cwtl
cmpsl
ds
push
lock
arpl
push
xchg
mov
mov
cld
sahf
xchg
mov
pusha
mov
pop
jae
cli
and
sub
push
cmp
xchg
xchg
insb
scas
cmc
mov
sub
sbb
outsb
les
add
xor
pop
dec
movsl
adc
xchg
mov
push
test
sti
push
sbb
das
mov
push
stos
fbld
stc
pop
mov
xchg
mov
cli
push
adc
pop
outsl
aaa
aaa
push
cmpsl
stos
rorl
std
jmp
sub
pop
scas
or
cltd
imul
mov
xor
xchg
sbb
js
inc
lahf
stos
dec
pushf
mov
jns
gs
test
lea
clc
or
mov
sbb
std
xchg
sar
cltd
loope
mov
je
sti
sub
sub
jecxz
divb
xchg
jge
dec
ret
cltd
cli
push
push
lock
xor
cli
or
fs
jo
mov
aam
loope
lock
xchg
sbb
ret
movsb
call
mov
sti
es
arpl
mov
rcl
pop
xchg
clc
gs
sahf
or
enter
cmpsl
leave
imul
sbb
sub
add
popa
mov
xor
das
sbbb
repnz
adc
and
mov
inc
cmpsl
cmp
pop
sub
cmp
and
mov
insb
lds
loop
push
in
decb
jbe
sarl
add
or
test
xchg
out
out
pushf
jmp
mov
repz
pop
xchg
cmp
push
pusha
out
xor
inc
pop
xchg
sub
pop
call
jbe
scas
dec
int
stos
and
adc
pop
decl
js
mov
std
loop
cmp
pop
mov
aad
dec
notb
push
push
cmc
inc
scas
orl
not
fildll
test
cmp
pop
popf
add
sbb
andb
frstor
inc
inc
es
mov
jns
pop
lcall
or
nop
movsl
aas
cs
fcmovb
mov
cmp
sub
sbb
ret
in
movsl
push
mov
sbb
test
cmp
pop
hlt
jge
clc
lock
mov
fisttpll
leave
cmp
mov
adc
dec
pop
repz
mov
push
and
inc
xchg
push
pop
into
cld
inc
or
jns
push
dec
leave
mov
lods
int
test
jp
mov
aad
arpl
popf
xor
fnstenv
mov
and
lods
jge
or
fstps
stc
fildll
mov
dec
cmpsl
fdivrs
ret
cld
xchg
inc
sbb
sbb
decl
adc
imulb
mov
dec
dec
popf
jne
add
mov
dec
or
cmp
rclw
shrb
icebp
add
shl
in
fsubp
xor
dec
das
movsl
push
lods
and
xchg
pusha
pop
sub
mov
es
adc
cmp
pop
leave
loop
stos
mov
mov
es
jbe
mov
jne
sbb
mov
xchg
mov
xor
mov
inc
push
stc
mov
dec
or
mov
or
jmp
mov
je
mov
fs
das
movsb
fistpl
roll
loop
mov
xlat
cmc
jecxz
lods
mov
mov
and
cmpsl
push
xchg
mov
and
sbbl
jl
adc
aas
push
sbb
ret
aam
cmp
jge
add
fdivs
push
aam
push
push
mov
and
sub
jns
xchg
shl
pop
dec
in
pop
dec
jo
out
clc
push
inc
adc
cld
lock
movsl
loopne
jg
movsb
sbb
cmp
pop
sub
and
push
pop
inc
pop
lods
inc
cmp
xor
aam
ljmp
push
dec
stos
push
in
cmpsb
ds
pushf
adc
mov
das
pop
jl
push
iret
outsl
cwtl
lods
mov
xor
push
cmp
jmp
pop
and
pop
jbe
std
cwtl
nop
mov
adc
ds
push
jb
mov
pop
sub
mov
add
sub
lret
fisttpll
icebp
dec
mov
das
dec
sub
cs
imul
sub
unpcklps
or
push
mov
xchg
into
or
jge
es
mov
out
and
in
aaa
jo
push
jb
fstp
push
scas
notl
into
std
enter
shll
cmpsb
cwtl
out
scas
std
mov
pop
xlat
sub
sub
lods
fadd
imul
jecxz
mov
data16
popf
js
jne
jbe
xor
jns
cmpsl
mov
out
out
adc
jb
sub
xchg
cmpsb
stos
jge
jne
je
out
push
push
pop
or
fld
jecxz
sbbl
jecxz
stos
mov
inc
inc
fcompl
repnz
push
fdivp
loop
ficomps
dec
inc
mov
mov
push
cmp
jbe
sarl
sbb
xchg
mov
ss
cltd
jb
jmp
jmp
mov
xchg
pop
inc
pop
dec
hlt
xchg
sub
cmp
add
decl
xchg
and
mov
lock
loope
ss
into
and
adc
dec
inc
and
mov
int
sbb
ljmp
and
dec
xor
mov
sub
loope
das
mov
dec
pop
fwait
dec
and
sub
popf
push
addr16
lock
and
loop
das
or
adc
shlb
sbb
push
shlb
inc
mov
sub
in
pop
jecxz
or
cwtl
jge
adc
dec
fwait
lea
pop
cltd
xchg
dec
das
cwtl
push
xor
fstp
sub
ret
xchg
pop
push
jp
or
push
ljmp
fs
push
faddp
dec
mov
stc
cmp
stos
add
mov
and
mov
mov
or
and
adc
lods
lahf
ds
rcl
sbb
loopne
adc
outsb
loope
jb
mov
dec
je
mov
test
pop
push
into
fisttpll
popf
test
sub
jle
jge
sub
fldcw
movl
mov
and
mov
inc
lahf
call
clc
push
imul
popf
jl
pop
test
orb
jae
mov
nop
shr
int3
xor
in
adc
gs
ficoms
cmp
jle
xchg
lock
pop
subl
cmp
movsl
mov
xchg
cmp
fsubrs
mov
mov
jmp
mov
push
cltd
pusha
sub
not
xor
je
inc
in
call
pop
scas
lret
mov
push
fsubl
xchg
push
cmpsb
and
inc
dec
sti
sbb
lds
test
outsl
fadds
inc
mov
mov
rorl
daa
mov
loop
mov
or
xor
mov
cmc
xor
inc
daa
scas
push
in
mov
cmc
jmp
pop
mov
inc
jae
loopne
nop
lahf
cmc
mov
fidivrl
ret
and
sti
push
aas
stc
add
sub
subb
xor
sub
jbe
push
pop
fwait
das
jl
mov
cltd
add
loopne
pop
push
jae
iret
or
fldl
out
negb
push
icebp
or
rorl
outsb
xor
in
sbb
and
leave
pand
addr16
pusha
push
daa
mov
icebp
cmpsl
out
mov
pop
data16
stos
out
sub
and
mov
adc
and
mov
xchg
adc
aam
std
sub
fwait
dec
loope
xor
arpl
and
mov
fidivrl
push
inc
test
push
addb
outsl
test
dec
mov
lds
jne
xor
arpl
xor
jge
cli
adc
call
fcompl
int3
lds
decl
pusha
sbb
stos
mov
xor
scas
out
cmp
jno
mov
ret
fcoms
loope
jo
stc
or
fwait
rolb
insl
lods
push
test
or
mov
in
das
rclb
inc
addb
mov
out
int3
stos
mul
dec
sbb
fs
int
aaa
ljmp
mov
je
jmp
jb
pop
mov
mov
push
in
dec
and
pop
and
xor
mov
fadd
pop
lret
rcrl
xor
push
test
in
cltd
jae
movsl
outsl
mov
pop
xchg
pop
mov
pop
rcrb
daa
jns
dec
xor
ficompl
test
enter
jecxz
test
jge
in
bound
inc
mov
push
inc
pop
lods
gs
cli
lds
sbb
lock
mov
sub
sub
push
and
xor
jae
icebp
jmp
call
push
in
mov
adc
adc
loop
pushf
jle
dec
and
or
or
stc
std
jl
stos
movsl
mov
js
pop
ds
sbb
xchg
pop
pop
mov
mov
imul
adc
mov
pop
cli
jns
lods
add
sbb
cli
xchg
dec
mov
ja
sbb
pop
push
mov
mov
mov
es
aam
pop
and
enter
pusha
sti
adc
nop
decl
sub
push
sub
mov
cmp
and
orl
fwait
enter
jbe
lcall
adc
inc
pop
jle
ret
mov
pushf
int
push
mov
icebp
stc
stos
jo
mov
popa
cmp
xor
out
js
loopne
mov
or
sbb
sbb
cmp
jns
push
ljmp
cmp
sub
sub
and
dec
loope
dec
popa
nop
xchg
push
dec
push
out
add
loope
rcl
mov
pusha
xchg
ficoms
in
movsb
test
into
sub
add
sti
jne
cmp
outsb
dec
enter
add
mov
stos
nop
les
xor
pop
rolb
push
fcmovnu
int3
subl
xor
jle
xchg
mov
jnp
lds
cli
ret
cmp
rorl
inc
cmp
jo
imul
loopne
int3
enter
dec
add
addl
mov
out
jnp
pop
dec
loope
xchg
enter
mov
out
xlat
cmpsl
xchg
and
pop
and
xchg
xor
divl
ss
test
push
mov
xchg
bound
inc
cmpl
or
js
or
adc
mov
jle
push
dec
add
scas
pop
xchg
out
int
push
or
ljmp
dec
into
add
iret
add
fadd
fisubl
pop
mov
call
or
mov
aad
xchg
add
jae
mov
scas
mov
mov
in
ret
pop
std
es
and
movl
adc
loopne
gs
pop
mov
mov
cmpsl
add
lcall
inc
loopne
sbb
adc
mov
cmpsl
jge
adc
in
fdivrl
pop
cwtl
stc
push
rclb
mov
dec
sbb
out
lcall
jno
cmc
enter
or
ret
push
cwtl
xor
mov
sbb
out
mov
xor
iret
jecxz
lock
fcomps
das
test
jae
pop
mov
mov
es
test
dec
addr16
paddsw
jno
fcomps
call
leave
fwait
dec
or
fwait
scas
pop
je
scas
clc
add
inc
movsb
fs
jge
or
xchg
js
add
scas
ret
or
push
inc
fldt
rcrb
push
neg
sub
mov
int
xor
jnp
cmp
ret
fiadds
add
jbe
imul
dec
in
mov
cs
push
ret
clc
test
repz
sbb
jnp
xor
fidivrs
fld
dec
int
shll
adc
movsl
cmpsl
negl
icebp
notb
adc
cmpsl
mov
jl
insb
adc
push
adc
aas
aas
mov
lcall
frstor
xor
ss
mov
outsl
sbb
rcl
mov
xor
sahf
movsl
fldenv
in
push
sub
or
in
std
shll
cmp
cmp
or
add
shll
dec
ret
xchg
lock
inc
sti
sti
cmp
push
arpl
mov
shlb
push
xor
ret
xchg
out
sar
jge
adc
jecxz
mov
inc
xor
adc
cld
cmpsb
inc
cmpsb
insb
push
mov
pop
mov
testl
mov
jle
outsl
sbb
xor
inc
out
test
sti
repnz
jb
add
loop
push
aad
pop
and
pop
popl
jmp
and
xchg
lret
mov
or
cmc
fisubs
je
pop
xlat
inc
sub
clc
sub
mov
arpl
dec
pop
test
cmp
jecxz
sbb
sahf
pmaxub
stc
rclb
inc
adc
in
pop
movsb
and
fidivrs
cmp
in
sahf
call
inc
push
out
sbb
aam
fs
aas
ret
adcl
ret
pop
dec
xchg
sub
shlb
rolb
jmp
mov
jo
fstpl
lea
and
clc
aam
ret
inc
negb
repz
fistpl
nop
xchg
push
sbb
sbb
mov
or
add
pop
cmpsb
xchg
inc
stc
jmp
fdivrs
ljmp
sub
jg
popa
ret
jg
nop
test
or
icebp
pop
pop
xor
popf
xor
test
pushf
jno
pop
stos
scas
fiaddl
ds
testb
jecxz
cmc
fbstp
xchg
xor
mov
cmp
not
pop
out
push
outsl
push
jl
xor
sbb
scas
jne
pop
mov
xchg
jb
dec
xchg
jge
out
ror
mov
imul
rol
fisubrs
push
fwait
outsb
loop
pushf
rorb
xor
sbb
cmp
sti
pop
jbe
adc
iret
stos
dec
push
scas
or
popf
mov
push
cli
pop
dec
xor
sar
adc
and
pushf
ja
xchg
xchg
popf
arpl
ljmp
mov
imul
sbb
push
xchg
lock
mov
jo
rolb
or
push
cwtl
add
xlat
sbb
dec
adc
inc
xchg
lods
xor
sbb
aad
pop
call
lea
push
sarl
aam
idiv
ret
push
pop
xor
pop
hlt
add
outsl
pop
jo
sbb
dec
xchg
or
mov
jae
fcoms
or
inc
xor
negl
inc
lahf
js
xchg
xor
enter
int
aaa
cmp
loopne
adc
mov
push
test
pop
dec
pop
push
lret
out
out
lods
es
or
gs
popa
dec
or
loop
sar
shrl
sub
popf
ljmp
pop
xchg
jecxz
pop
lret
mov
loope
sbb
or
cwtl
sti
mov
cs
out
mov
mov
add
aam
shlb
mov
flds
ficoml
pop
jns
outsb
pop
and
clc
lock
int3
enter
inc
xchg
cmp
mov
xchg
clc
popa
push
jns
xor
pop
inc
cmpsb
cltd
push
jg
xor
mov
xchg
movsb
int3
mov
fwait
pop
jns
lds
and
dec
inc
fwait
sahf
and
ds
pusha
push
sub
hlt
sbb
pop
pop
inc
dec
and
add
mov
filds
shll
je
lret
orb
cs
xor
loopne
sbb
xchg
test
pop
inc
pop
addr16
jns
sub
xchg
xchg
bound
sbb
clc
mov
sub
cmp
pop
sub
insb
jno
mov
bound
das
mov
cmpsb
addl
fsubl
push
cwtl
mov
jg
loop
js
dec
insb
lock
xchg
dec
adc
mov
xor
sarl
xchg
mov
iret
call
dec
aaa
jmp
out
xor
and
pusha
leave
or
sbb
sbb
mov
adc
orl
les
fistpll
mov
rcr
pop
xchg
jg
mov
jae
mov
stos
pop
xchg
das
add
pusha
or
jecxz
add
daa
sbb
enter
sub
add
sbb
iret
les
adc
imul
sbb
pop
sub
aam
mov
dec
jl
ljmp
pop
mov
xor
les
mov
mov
js
out
ljmp
shl
push
jb
cs
inc
std
int
aam
dec
int
or
popa
popa
icebp
sti
mov
adc
xchg
std
push
xor
mov
call
stos
mov
imul
sub
sti
cltd
out
ret
jl
mov
mov
cli
test
gs
inc
xchg
mov
and
xor
aam
in
outsl
lods
xor
cmp
jp
dec
mov
jl
inc
cmp
push
into
sbb
jg
aad
mov
fisubs
add
lahf
pop
push
out
addr16
and
or
in
mov
jbe
push
les
daa
fdivrl
bound
sub
jp
cmp
daa
xchg
jp
sub
call
xorb
test
aas
repz
popa
out
je
ret
mov
out
sbb
inc
inc
in
test
xlat
leave
std
fmuls
lcall
insl
out
out
out
jle
loopne
adc
shlb
js
mov
and
ss
mov
daa
jecxz
push
add
push
sti
icebp
out
mov
stos
stc
adc
and
mov
sahf
stos
aaa
iret
xchg
stos
xchg
ret
lea
push
outsb
add
movsb
jp
pop
int
in
mov
cli
repnz
push
inc
mov
mov
add
sbb
sub
test
icebp
out
lds
popa
inc
pop
data16
adc
adc
and
mov
sbb
mov
sub
mov
fdivl
sbb
jg
lock
push
adc
loop
add
jno
and
test
imul
ss
movsb
xor
call
jno
cmp
inc
mov
imul
xchg
mov
pop
hlt
gs
loopne
addr16
imul
or
sarb
ljmp
xor
mov
mov
test
jg
fwait
sbb
mov
fs
add
shll
jmp
daa
adc
fsubp
push
mov
cs
iret
xchg
cmpsl
popl
cmp
and
sbb
ret
hlt
hlt
jg
mov
mov
test
jecxz
test
in
mov
sub
pop
leave
add
mov
xlat
ret
popa
sub
and
pop
jl
xchg
pop
push
repnz
jecxz
push
lds
insl
dec
mov
mov
pop
jl
mov
dec
lea
mov
inc
push
test
cwtl
xor
sub
pop
imul
test
pop
fimuls
adc
and
sub
loope
loop
mov
lahf
stos
fwait
mov
cmp
lds
push
pop
into
inc
sub
das
mov
sbb
ss
adc
test
pop
xor
cwtl
repz
nop
lret
stos
icebp
mov
test
sbb
loope
add
jno
gs
or
xor
loope
loop
lret
mov
xor
xchg
hlt
push
xchg
movl
stos
std
orb
popf
rorb
ret
adc
push
dec
adc
frstor
cmpsl
testb
ds
mov
aas
adc
test
jne
mov
cmp
cmp
or
add
fs
in
pop
rcl
loop
cmc
adc
pop
addr16
popa
loop
xorl
shrl
shlb
in
movsl
fsubl
aad
ds
inc
pop
aad
cmp
xlat
ds
push
jmp
sbb
out
dec
iret
xchg
mov
int3
jg
or
shl
add
add
lret
mov
enter
insb
mov
notl
ljmp
shll
movsl
sbb
repz
jnp
leave
and
addb
cwtl
or
add
mov
fsubs
shll
mov
jl
ds
lds
mov
jns
add
add
xchg
and
pushf
sbb
lods
aaa
jg
adc
test
jae
call
cmpsl
lods
popa
jg
push
inc
dec
xor
rcrb
fstpt
or
push
repz
dec
mov
fsub
addr16
lret
out
cmp
fcoml
rorl
mov
mov
jns
hlt
mov
mov
mov
iret
or
or
mov
jge
add
xor
mov
jecxz
pop
shrl
outsl
jge
mov
xor
popf
in
xor
stos
push
and
mov
inc
and
push
mov
and
aaa
pushf
pop
dec
or
mov
add
je
xor
pushaw
faddl
xor
lea
mov
daa
jb
and
addb
int
sbb
jb
xor
dec
fnstsw
jl
mov
mov
enter
dec
inc
fiaddl
pop
sub
sbb
cwtl
shlb
std
lock
repnz
or
and
add
sbb
push
mov
add
cmpsb
cmp
sahf
or
shrb
aaa
add
jbe
faddl
into
pop
decb
lock
fs
stos
enter
mov
imul
and
xchg
xchg
mov
imull
je
fdivrs
xchg
dec
pop
cmp
push
jne
dec
adc
pop
jns
lods
sub
push
fcmovnb
leave
repz
aas
pop
jo
jp
xor
xchg
stos
mov
dec
dec
mov
mov
push
xchg
cmpsb
jbe
pop
inc
pextrw
push
mov
fxam
mov
shrl
pop
addr16
popa
out
pusha
mov
dec
repz
or
and
and
imul
mov
cmc
inc
add
jg
jbe
mov
lock
pop
cmp
jg
dec
fs
mov
loop
lcall
or
jbe
imul
lahf
adc
jno
sub
les
stc
ljmp
je
adc
add
jo
add
loopne
je
xor
mov
aas
lret
mov
outsl
sub
mov
sub
and
js
aas
out
mov
jns
repnz
inc
jecxz
cmp
and
mov
and
loope
stos
out
adc
je
push
xor
and
xchg
sbb
mov
ljmp
cmpb
ss
filds
mov
xchg
or
sbb
fcomi
xor
xorb
fmul
xchg
sbb
ss
lret
add
cltd
pop
push
mov
psrlq
mov
dec
pusha
dec
fistpll
shl
push
push
cmpsb
in
int
out
je
ds
fwait
pusha
cs
push
das
mov
movsb
mov
or
addr16
cwtl
cmp
lods
jle
popa
inc
scas
sarb
addr16
add
lods
mov
lahf
xor
lods
push
adc
loope
lea
or
sbb
sub
or
sub
cli
xorl
mov
pop
test
loop
push
xchg
test
add
add
inc
jp
leave
ret
in
cmp
push
sub
sti
cmpsb
lcall
sar
mull
lret
in
sub
jae
mov
sbb
add
inc
call
fadd
xor
sub
cmpsl
fldt
sahf
insl
mov
push
sahf
mov
or
mov
fwait
loopne
inc
pop
in
ss
cmp
push
loop
addb
jne,pt
imul
push
jle
cld
inc
out
ds
mov
mov
and
xchg
out
aas
jecxz
cmp
aaa
jecxz
sub
sbb
pop
mov
repnz
pop
adc
test
repz
adc
sub
pop
in
sahf
mov
inc
in
int
xor
popf
sbb
pop
mov
enter
pushf
push
xlat
enter
mov
jb
adcb
mov
popa
push
in
mov
xchg
mov
cmp
ss
addl
mov
push
mov
notb
cmp
lds
xchg
je
add
pop
out
add
cs
fsubr
adc
cmp
rol
jne
sub
sub
pop
lods
jmp
stc
sti
pushf
ja
push
nop
push
or
stos
cwtl
dec
call
pop
loope
sbb
push
out
push
adc
jns
jne
jb
aas
pop
loop
xchg
jle
jg
pop
cmc
repz
jbe
sbb
lret
xchg
fists
mov
pop
sbbb
sub
or
mov
sub
or
fnstenv
or
fwait
cmp
dec
fnstsw
insb
xbegin
scas
or
dec
clc
dec
jbe
mov
xchg
test
inc
scas
outsl
inc
dec
jne
leave
xor
ror
mov
sarb
jns
and
mov
push
dec
sub
inc
pop
fbld
into
movsl
inc
bt
pop
pusha
jae
jnp
aas
mov
pushw
daa
into
xor
bswap
mov
movsb
xor
sahf
pushf
pop
dec
addb
bound
pop
mov
or
out
and
icebp
sahf
sti
dec
mov
xor
jmp
jg
xchg
stc
pop
xchg
inc
nop
inc
js
lret
shll
xor
in
cmp
in
xlat
sub
mov
pop
lds
xor
mov
ja
xor
shll
mov
test
jge
imul
jnp
cmp
inc
push
jecxz
int
stc
adc
shll
aad
xor
cmp
nop
inc
xchg
xchg
fisubrs
popf
mov
aas
insb
sbb
std
loopne
aas
cmc
outsl
xor
lods
das
ds
and
mov
flds
dec
std
cwtl
adc
cmpsb
in
rcrb
outsb
or
sbb
add
insl
jo
leave
into
cmp
cli
fbld
mov
ret
sub
ffreep
lret
sbbb
adc
outsl
and
mov
push
cmp
lods
mov
out
xchg
sti
ljmp
insb
stos
xor
cmp
lods
xor
and
mov
incl
popf
cmp
aam
push
sbb
leave
inc
mov
jle
repnz
xchg
dec
mov
loop
or
sbb
std
cmp
lock
jp
gs
push
cmp
iret
lods
ja
jge
unpcklps
shl
dec
hlt
mov
sbb
outsb
inc
pusha
sub
into
daa
fbstp
or
sub
xor
dec
jne
mov
int3
mov
pop
movsb
push
push
testb
aas
popa
ja
cmpsb
mov
and
pop
icebp
int3
movsl
xchg
nop
pop
cwtl
shl
jg
fsubl
lahf
or
js
jo
stos
out
loop
movsb
dec
and
dec
gs
jnp
push
loopne
xor
and
sbb
lret
hlt
pop
mov
clc
push
aaa
lea
sub
je
mov
sbb
xor
int
sbb
stos
mov
and
pop
push
sahf
and
and
mov
insl
stc
or
sahf
cmp
cmpsl
dec
mov
push
scas
lods
lods
pusha
call
and
jge
in
jmp
test
jecxz
imul
fldcw
xchg
mov
jg
inc
ss
daa
dec
inc
push
js
stos
xor
daa
icebp
sbb
xchg
scas
sub
xchg
aam
or
push
into
inc
orb
adc
or
fsubs
pop
sbb
mov
lods
xlat
subb
jne
popa
fiadds
mov
push
repz
xchg
adcl
push
sbb
aaa
decb
out
sub
es
cs
jmp
jo
mov
lock
dec
leave
cmp
ss
fidivs
outsb
pop
inc
dec
popf
pop
jmp
adc
out
xchg
lahf
aad
add
pop
sbb
into
mov
lock
das
add
xlat
cltd
cmp
mov
icebp
add
or
push
jge
inc
mov
xchg
dec
push
js
pusha
test
sbb
xchg
jb
add
sbb
div
addr16
mov
aad
adc
jns
jp
das
sbb
inc
inc
imul
or
add
mov
pop
add
outsl
stos
int3
xor
repz
je
shlb
ret
and
add
push
inc
loope
and
add
int3
or
add
mov
mov
into
cs
jl
xchg
adc
lahf
insb
ja
jns
jo
dec
popf
in
push
xor
mov
push
pop
xchg
lock
lret
loopne
push
cmpsb
dec
das
mov
jbe
cli
pop
vpunpckhbw
adc
mov
insl
mov
add
ds
ss
push
sbb
mov
mov
sbb
insb
lock
popw
sbb
sbb
pop
subl
xor
add
and
jle
mov
data16
jg
mov
cmp
ret
scas
adcl
add
ds
dec
sbb
out
sarl
cmp
jnp
xor
into
int
dec
xor
stos
inc
mov
jno
pop
lea
and
andb
xchg
sbb
sbb
shr
in
add
idivl
leave
mov
push
mov
jmp
cmc
cmpsb
pop
out
and
ror
out
shrw
ss
and
mov
enter
pop
scas
test
mov
and
cmc
std
rclb
outsb
inc
adcb
rcrb
mov
test
cpuid
lahf
jg
jb
pop
cmpsb
jge
cmp
pop
inc
pop
lret
jns
test
push
nop
div
mov
cmp
mov
xchg
fucomip
xchg
pop
test
xchg
sahf
push
mov
mov
pusha
loopne
xchg
xchg
xchg
cmp
sub
jecxz
outsb
pop
ljmp
sbb
push
xor
inc
cmp
adcl
mov
loope
cmc
sti
inc
cmp
push
xchg
push
mov
push
xchg
jle
xchg
inc
cs
cmpsb
out
push
shlb
into
aas
mov
in
push
or
movsb
adc
jmp
decb
xchg
mov
mov
imul
xor
push
leave
adc
push
sarb
test
daa
lods
push
and
inc
cmpsb
dec
nop
fnstenv
imul
inc
outsl
test
push
pop
xor
jl
lret
test
sub
push
fnstsw
iret
call
je
cli
in
int
mov
fildll
movb
mov
fsts
outsl
js
mov
or
jmp
mov
repz
rcrb
test
inc
test
addr16
pop
fdivrs
std
pop
push
adc
jp
insl
push
adc
ds
icebp
push
mov
inc
push
movups
subb
jl
push
and
xchg
stos
lret
jp
xor
dec
call
out
sub
out
subl
mov
out
mov
int3
adc
std
sub
push
fmuls
daa
xor
subb
sub
mov
adc
sub
packssdw
cld
ret
pushl
imul
sub
jle
lods
mov
cld
shrb
sbb
sahf
movsl
ljmp
jmp
loopne
mov
addr16
test
cmpsl
inc
dec
inc
cmpsb
push
fwait
inc
mul
dec
push
inc
ss
mov
pusha
dec
hlt
pop
test
int
roll
inc
clc
test
mov
cs
xchg
lods
fwait
mov
stos
mov
movsl
dec
xchg
pop
add
lock
and
sbb
sub
xor
pop
mov
dec
dec
jg
adc
adc
jno
xchg
mov
sbb
sub
adc
packssdw
stos
mov
and
lcall
jge
test
sub
lahf
fsubrs
gs
push
stos
cli
add
aam
icebp
int
push
scas
adc
sbb
mov
pop
dec
aam
cmp
pop
repnz
lock
fists
loope
mov
jmp
out
add
pusha
mov
dec
mov
cmp
or
mov
xchg
add
out
cmp
jecxz
jbe
mov
or
insb
adc
sti
or
push
loope
push
mov
int
xlat
fstpt
pop
add
repnz
push
cmp
loop
adc
sub
popa
cltd
pushf
inc
ljmp
jmp
push
std
mov
adc
loope
jmp
inc
add
call
xchg
inc
insb
add
jbe
and
dec
cwtl
jo
mov
bound
paddw
jp
loopne
aam
sahf
xchg
in
out
in
jno
mov
adc
test
jp
movsb
loope
xchg
dec
out
sub
lret
hlt
lahf
inc
test
jo
jo
jns
insb
and
roll
in
or
sahf
mov
mov
sbb
and
aad
lretw
movsb
mov
icebp
inc
dec
mov
rclb
bound
les
lret
je
cld
fwait
adc
sub
cld
add
inc
js
push
adc
aas
pushf
mov
insb
loopne
fwait
push
sbb
pop
rcll
inc
mov
dec
mov
inc
mov
pop
not
adc
lea
fs
dec
push
mov
and
sbb
and
icebp
dec
pop
dec
mov
push
sarl
push
rclb
mov
mov
push
imul
ret
mov
mov
cmpsl
cmpsl
mov
js
and
adc
sub
and
dec
mov
call
add
and
imul
sub
pop
fidivrs
inc
nop
imul
sbb
stc
mov
sbb
push
dec
fisubl
mov
jp
std
dec
dec
nop
hlt
jnp
jg
cmpb
stos
movl
push
fists
lds
in
jo
mov
sub
mov
ja
and
enter
sub
jg
mov
adc
pop
lods
add
dec
mov
xor
jg
jne
vmovdqa
shl
sarb
aam
stc
lods
cmc
sub
push
ja
jo
push
rorl
insl
pop
adc
pop
jae
mov
or
out
dec
mov
xchg
ret
enter
lods
push
sbb
push
inc
mov
xor
mov
inc
ret
pop
xor
test
sti
push
stos
inc
dec
lock
dec
xor
sti
sbb
pop
xchg
sbb
mov
jge
inc
stc
xchg
rcl
push
xchg
add
jmp
mov
xor
inc
std
mov
mov
test
lea
sahf
jge
adc
and
adc
jae
mov
add
push
xor
mov
cmp
or
xchg
mov
mov
push
popa
mov
mov
and
pop
popa
inc
dec
mov
mov
adc
cmp
sub
ds
icebp
sbb
mov
sub
xor
cmp
cld
jmp
cmp
jle
bound
mov
lea
imul
sbb
xor
dec
mov
dec
stos
test
sbbl
push
cli
jl
clc
lods
cmp
pop
cmc
aad
cmp
xchg
mov
or
mov
pop
cmpsb
stos
inc
pop
push
adc
mov
mov
sbb
mov
lcall
test
sbb
mov
stos
fdivrl
icebp
popa
push
jne
xchg
insl
adc
sbb
les
clc
aam
adc
and
push
enter
add
outsb
jns
and
leave
rolb
aas
fdivrl
push
inc
inc
push
mov
test
sub
sub
out
xor
xchg
ds
xchg
mov
mov
adc
push
rorb
fisubs
xchg
xor
inc
lods
sub
repnz
sbb
xchg
mov
jl
adc
sti
jl
mov
in
xchg
jle
shrl
loope
in
insb
out
xchg
jno
out
sahf
xchg
or
ror
mov
cmp
lods
call
sahf
or
imul
mov
clc
or
aaa
adc
xchg
pop
cli
frstor
sub
add
repz
lea
pop
mov
xchg
and
fwait
sub
loope
int3
sbb
pop
nop
pop
fnstenv
sub
pop
xor
hlt
pop
add
xchg
ret
mov
add
jl
jge
data16
test
cld
dec
xchg
push
mov
shr
test
push
sub
add
xchg
mov
push
mov
dec
mov
adc
xor
add
les
mov
cmp
push
es
cmc
xchg
arpl
jle
mov
push
mull
out
daa
jno
push
sub
sub
lcall
cwtl
push
and
pop
rorl
xchg
mov
pop
aaa
sub
xor
fdivl
and
repnz
fidivs
adc
in
mov
mov
addr16
rclb
outsb
mov
int3
and
push
paddusw
arpl
adc
xlat
lock
sub
out
ret
nop
push
mov
sti
int
mov
es
adc
mov
imul
fcmovne
xchg
cmc
clc
push
or
cmp
int
popf
icebp
push
sbb
or
mov
and
xor
pop
or
fnstsw
push
cmc
insl
pop
call
fcmove
cs
jecxz
fs
ja
dec
sbb
nop
adc
repz
jbe
xchg
xchg
daa
inc
fistpl
jp
jmp
sub
stos
mov
push
mov
push
mov
mov
inc
lret
int
push
and
mov
gs
xchg
outsl
dec
dec
mov
inc
cmp
jl
call
test
xchg
lret
ss
arpl
sub
dec
fidivrs
enter
out
loope
ret
lret
flds
dec
cld
pop
pop
dec
jnp
outsb
adc
sub
sub
cld
add
pop
pop
sbb
sbbl
xchg
xor
mov
inc
iret
ret
loopne
loope
shlb
lock
jbe
mov
outsb
jl
je
xchg
int
jmp
icebp
movsb
in
adc
push
mov
insl
pop
add
push
xor
aam
repnz
inc
pop
fists
sbb
mov
push
xor
lock
not
sub
mov
out
leave
xor
out
push
jno
lds
je
inc
xchg
rcrl
fisubrl
clc
cwtl
loope
xor
iret
fstpl
push
xchg
pop
mov
sbb
inc
inc
mov
mov
daa
repnz
stos
mov
xchg
call
insb
mov
lods
aam
rcrb
sub
mov
mov
and
fs
cltd
imul
jl
pop
inc
lahf
adc
notl
call
sub
lret
test
inc
jle
arpl
mov
out
pop
and
in
push
mov
push
mov
outsb
mov
leave
out
popf
mov
jbe
xchg
or
adc
shlb
xchg
dec
jno
mov
sub
mov
jecxz
adc
shr
loopne
js
xchg
popa
fisttps
divl
and
pop
nop
ss
repnz
dec
sub
les
cmp
xchg
cmp
xchg
jp
dec
data16
xor
mov
mov
mov
inc
movsb
xchg
mov
adc
fistps
bound
sbbb
std
dec
out
fimull
adc
or
test
test
mov
push
in
inc
repz
add
in
push
sbb
lret
in
aas
leave
mov
into
cmp
mov
outsb
das
and
sub
push
push
insl
pop
pop
popl
inc
fs
xor
cli
es
outsl
add
inc
jl
push
iret
jg
in
adc
or
cltd
movsl
dec
jne
bound
repz
out
push
or
and
lahf
and
es
add
jns
js
push
pop
jno
jmp
mov
ss
sarl
pop
lock
mov
imul
jge
daa
mov
sbb
jge
cmp
xor
fidivs
xchg
pop
cwtl
jge
xchg
or
in
dec
jg
cli
imul
mov
outsl
mov
adc
xchg
test
adc
xor
inc
shrl
shlb
out
push
jmp
pop
fstpl
out
repz
dec
mov
and
mov
vcvttss2si
add
mov
mov
insl
dec
mov
lcall
push
popa
cmp
leave
jne
cmc
cmc
push
sub
movsl
or
popf
loop
fwait
mov
imull
xlat
aam
lcall
xchg
dec
mov
jno
sbb
lret
adc
cmp
aas
push
lret
dec
xchg
int
loope
sbbb
test
sbb
test
jle
inc
mov
pop
sbb
sbb
js
xchg
loop
lcall
daa
push
cmp
jno
clc
xchg
dec
mov
movsl
clc
mov
and
in
sar
outsb
cwtl
mov
fidivrl
mov
int3
or
cmp
xchg
cmp
aad
cmp
xorl
fnstcw
sbb
mov
cltd
sub
dec
dec
jo
xchg
or
cld
fldenv
out
xor
add
mov
leave
xchg
sti
mov
call
mov
bound
lret
xor
mov
jae
xchg
dec
push
nop
pop
sbb
int
mov
inc
sub
mov
call
mov
xor
data16
pop
les
xchg
ret
popa
in
aam
mov
push
rcl
rcll
adc
sub
insl
xor
call
aam
jno
adc
stos
sar
add
jg
sub
sub
jae
pushf
add
ret
test
jo
int
jbe
clc
xor
mov
mov
stc
divb
inc
fs
jg
mov
pusha
cwtl
loop
jae
movb
jne
rcr
or
pop
repz
cmc
out
xor
dec
outsl
push
test
xchg
push
insl
xchg
jge
sbb
ljmp
pop
mov
and
cmpsl
sub
xor
sti
stos
inc
ret
js
jmp
bound
mov
cmp
cltd
dec
push
inc
les
pop
in
or
lods
pop
add
mov
ret
sbb
movsb
mov
pop
movsb
push
pop
jmp
rcr
cmc
mov
loop
xchg
imul
mov
pop
jp
pop
pop
dec
stc
scas
mov
in
gs
sbb
loopne
insl
jecxz
flds
xlat
in
mov
fmulp
stc
pop
or
mov
dec
stc
push
ss
pop
dec
ds
jp
cwtl
das
sub
pushf
xchg
jge
aam
lds
int3
xor
aaa
ret
or
sti
pop
jbe
cmp
into
iret
mov
dec
rep
pop
pushl
cmp
mov
pop
or
lods
aad
pop
mov
std
mov
lods
mov
add
pop
lcall
jle
test
mov
or
lret
push
pop
or
dec
fistps
pop
dec
daa
pop
out
scas
in
jns
arpl
push
inc
dec
aam
push
sbb
cs
push
int3
fildl
inc
dec
fnstsw
jns
add
gs
and
add
test
loope
adc
push
jbe
pop
mov
mov
aaa
sbb
cmpb
loope
mov
mov
arpl
cmpsl
sbb
sahf
push
shlb
movl
insl
popf
jno
add
decb
mov
dec
cmp
scas
test
out
sti
pop
roll
call
sahf
rorb
fisttpl
je
push
mov
xchg
dec
mov
lods
cmpsl
and
push
jbe
push
leave
xchg
sbb
shlb
je
ret
lahf
xchg
hlt
stos
test
movsl
movsb
aas
fs
test
addb
dec
push
arpl
add
bound
jl
iret
pop
push
test
scas
jl
push
hlt
lret
shrl
js
movsl
stos
lret
pop
push
cmp
xchg
xchg
pop
test
xorb
scas
xor
mov
xlat
or
lahf
stos
xchg
loop
clc
mov
sub
dec
shrb
xchg
pop
push
push
shr
pop
pop
test
rclb
cmpsl
fucomp
push
gs
ror
sbb
decl
int3
shl
adc
out
enter
lock
pusha
insb
jecxz
rolb
mov
pusha
dec
xor
mov
cmp
mov
scas
aas
sub
jl
mov
xor
in
testb
movsl
dec
rolb
inc
dec
aaa
in
dec
test
mov
add
jae
imulb
xor
cli
mov
mov
push
or
adc
and
cmp
negb
dec
sub
dec
popf
sahf
sti
jecxz
imul
es
shlb
and
mov
xor
aad
and
inc
out
repnz
xor
jns
filds
add
adc
lahf
dec
out
inc
popf
mov
test
ljmp
add
xor
or
mov
vxorpd
jmp
out
mov
hlt
out
push
filds
mov
hlt
scas
out
inc
inc
push
dec
or
stos
add
sbb
neg
sub
in
in
out
aam
imull
cmp
loope
pop
das
std
xor
pop
pop
jne
cmp
addb
jp
iret
mov
pop
repz
movsb
iret
cmpsb
xchg
cmpsb
sbb
xchg
bound
in
dec
in
dec
add
pop
push
push
movsb
nop
inc
fsubs
mov
xor
pop
shrl
das
pop
insl
and
sbb
xor
push
adcb
std
stos
mov
or
add
mov
stos
inc
lahf
imul
push
pop
fdiv
and
pop
mov
loope
adcb
add
mov
pop
dec
push
mov
shlb
pop
xchg
test
test
mov
rorl
insb
out
icebp
jge,pn
insl
ret
je
pop
inc
iret
pop
and
data16
or
ss
clc
test
loopne
push
jo
fdivrs
xchg
sbb
xor
xor
push
cmc
insb
out
aam
nop
fcmovu
ljmp
push
mov
xor
and
push
cmp
mov
or
sbb
pop
sbb
aas
cmp
daa
add
ss
and
popa
add
xchg
sbb
movsb
sub
arpl
inc
xchg
or
or
sbb
nopl
cmp
push
lods
xlat
or
fcomps
cltd
xchg
inc
xor
in
inc
icebp
sbb
add
xor
mov
or
pop
push
mov
xor
das
jno
push
pusha
jbe
cmp
icebp
sub
dec
mov
fcoml
fiadds
push
pop
mov
and
cmpsb
xor
push
cmp
dec
pop
push
imul
stos
roll
rcll
mov
and
push
and
subb
test
lods
and
inc
jbe
stos
loop
in
xchg
cmp
push
loop
push
das
shll
test
and
fsts
shl
or
push
addl
adc
lret
xchg
pop
mov
fldcw
int3
ja
movsl
fisttpl
mov
xor
clc
pop
leave
jne
fcomps
jb
incl
test
enter
stos
out
mov
jno
sahf
and
xor
mov
pcmpgtw
xchg
dec
mov
push
cmp
jae
js
insl
inc
mov
sub
out
mov
push
clc
adc
pop
inc
ja
mov
xchg
testl
mov
mov
push
shufps
sahf
les
hlt
popa
jae
imul
add
lret
ret
cld
xor
ret
daa
fstl
aas
loopne
push
scas
jbe
stos
cmpsb
mov
fildl
fimuls
xor
mov
push
mov
inc
ret
or
bnd
cmpb
sti
leave
mov
pop
in
xchg
scas
inc
lret
mov
pop
mov
enter
push
xchg
push
test
insb
sahf
arpl
outsb
mov
pusha
mov
clc
lock
mov
ljmp
mov
inc
mov
dec
mov
push
data16
clc
das
or
mov
mov
mov
jl
xlat
xlat
sub
inc
ret
jmp
jg
int3
lret
fmuls
incl
arpl
cmp
xor
cltd
outsl
adc
pop
or
leave
scas
mov
daa
stc
pop
out
jmp
mov
leave
inc
cmp
lahf
inc
dec
enter
inc
scas
mov
test
xchg
xor
sub
mov
mov
repnz
sbb
andb
jl
int3
pusha
test
fimuls
xchg
dec
lock
or
lret
psllq
jno
nop
outsb
movsb
fstpt
ljmp
stos
or
inc
aad
sbb
xchg
adc
cmpsl
sbb
mov
mov
subb
mov
mov
adc
jmp
sub
add
jo
scas
add
xchg
cmp
jl
jecxz
pop
pop
call
repnz
in
xorb
aam
cltd
lahf
mov
mov
mov
int3
enter
mov
jmp
mov
mov
fcoml
cmpsl
pop
dec
imul
inc
hlt
cmpsb
pop
jns
jns
mov
mov
add
sahf
jo
in
sbb
cmp
pop
xchg
ljmp
mov
push
fisttps
leave
insl
lock
sub
jae
pop
into
adc
scas
xor
or
add
xchg
mov
cmpsb
scas
insb
mov
lds
repnz
dec
shl
in
xchg
sahf
pop
mov
dec
xor
sub
fisubl
mov
lods
jno
or
pop
mov
add
dec
hlt
jecxz
jp
mov
outsb
je
in
enter
addl
inc
rorb
loope
xor
sub
lods
out
jne
outsl
lods
shl
xlat
xor
jbe
fs
pop
movsb
stc
insl
or
inc
fcmove
xor
sub
pop
xchg
sbb
sbb
movzwl
cvtps2pd
push
in
fldt
mov
fst
inc
xor
sbb
or
mov
test
fdivs
jg
cmpsl
lods
xchg
out
enter
or
sarl
cwtl
scas
js
push
cs
movsl
lods
sub
popf
iret
jl
dec
pop
es
test
sbb
add
out
orb
push
fs
xor
adc
mov
and
sub
jae
jno
inc
aaa
pop
adc
leave
jne
add
dec
test
mov
and
push
int3
loop
or
push
lret
mov
jp
push
js
mov
in
fidivs
pop
mov
push
cmpsb
jb
test
xchg
cmp
xor
sub
push
pop
clc
cwtl
outsb
lock
mov
xchg
outsl
fs
dec
push
je
mov
push
jecxz
flds
push
mov
mov
or
push
push
movsl
adc
mov
xor
add
cmp
pop
inc
test
sub
lahf
jnp
aad
daa
cmp
je
fsubp
xchg
mov
push
fmull
or
jg
insb
sub
and
cwtl
jne
int
adc
fdiv
arpl
xchg
push
sub
mov
sub
inc
jge
cmp
cmp
iret
mov
and
ret
es
in
jg
ja
aaa
dec
adc
shlb
insl
dec
mov
or
push
fstpt
or
adc
insl
or
out
les
or
stos
and
adc
xchg
add
fisubs
cmp
ss
sarb
push
shll
xor
mov
scas
addr16
jge
mov
fnstenv
stos
sahf
sub
xchg
movsl
xchg
jnp
mov
xlat
nop
and
aad
iret
repz
insl
jmp
pop
pop
movsl
repz
fistl
xor
push
mov
test
jb
adc
ljmp
xlat
adc
imul
pop
inc
sbb
fcomps
sbb
dec
fstps
mov
rcrl
ret
sbb
add
sub
in
fsubr
movsl
bound
push
iret
es
psllq
dec
shrb
mov
xchg
cwtl
loop
ja
dec
fistpl
pop
pop
insb
or
sub
movsl
addr16
xor
or
pop
ja
lahf
mov
add
dec
imul
fildl
lret
out
ljmp
jae
repz
sub
mov
or
dec
iret
adc
nop
cmp
mov
cltd
inc
mov
dec
xor
cmp
imul
add
aas
pop
sbb
pop
jle
fcoms
imul
mov
adc
roll
in
adc
dec
jnp
xchg
stos
fs
ret
or
movsb
sbb
cmpb
mov
fsubrl
mov
xor
jne
lret
add
enter
ss
push
or
xor
xor
test
mov
push
ljmp
lock
xchg
call
shlb
mov
or
jge
loopne
mov
xor
dec
pushl
ja
mov
and
and
outsb
dec
xor
sub
cmpsl
pop
lock
loop
mov
call
scas
repz
lds
xor
loop
clc
fucomp
bound
push
cmp
push
outsl
cmp
inc
push
test
hlt
clc
and
xor
sbb
ja
movsb
push
fidivrl
push
aaa
push
loope
ret
xor
scas
lods
fcompl
pop
fs
sub
mov
in
aas
stc
sub
insb
js
test
pop
movsb
mov
add
xchg
pop
rolb
mov
dec
out
push
push
jl
into
and
pop
mov
jne
push
cmp
mov
xchg
nop
dec
bound
mov
mov
sbb
xor
lock
stos
lret
jmp
popf
inc
mov
sbb
fnstenv
icebp
hlt
xchg
mov
dec
pop
sub
test
sub
pusha
in
dec
insb
aam
insl
pop
jmp
movsb
mov
or
inc
lret
push
out
sahf
jle
adc
jmp
mov
sub
jae
fs
jle
adc
push
mov
in
mov
add
ss
jg
dec
mov
sti
jns
jbe
jno
inc
push
push
loope,pn
ds
xor
je
add
adc
add
flds
sbb
shlb
fnstenv
inc
das
push
sub
insb
stos
inc
sbb
mov
sub
mov
add
push
js
mov
inc
in
mov
lock
inc
pop
push
push
push
push
pop
lret
xchg
popf
ss
add
jl
test
push
dec
outsb
stos
mov
rcrl
pop
ljmp
ret
jmp
in
scas
push
and
mov
add
jbe
push
imul
xchg
xchg
adc
add
out
mov
jp
daa
ss
or
lea
fcomip
subb
inc
pop
xchg
dec
xor
stos
pop
arpl
jmp
mov
pushf
sahf
push
sub
xlat
daa
ror
cwtl
lods
push
jae
stos
fildll
push
fmuls
lahf
into
icebp
xor
test
and
pop
mov
mov
add
nop
das
lods
lret
mov
mov
lret
in
imul
xchg
xlat
rcrb
add
test
xor
jg
sahf
push
dec
adc
sbb
fldenv
enter
bnd
push
and
push
pushf
push
sbb
into
std
jns
push
ret
mov
test
fwait
or
mov
and
push
rclb
imul
sti
dec
jp
ret
mov
jmp
cli
xchg
das
out
lods
mov
daa
inc
scas
adc
sbb
hlt
sbb
nop
jge
scas
sub
mov
mov
add
add
insb
inc
fdiv
xchg
pop
imull
inc
rorb
mov
stc
and
jg
mov
outsb
fldt
or
popf
loope
out
iret
sub
outsb
xchg
pop
ret
aaa
cmp
leavew
in
sub
iret
lods
xchg
rcrl
mov
inc
sarb
push
aam
mov
sub
clc
inc
mov
cmc
aaa
test
divb
dec
or
cmp
outsb
or
lods
cld
adc
hlt
cmp
push
jne,pn
dec
add
mov
mov
jnp
ja
jne
mov
inc
sub
push
mov
push
push
lods
mov
jg
or
outsb
dec
lea
insl
xor
dec
mov
in
or
adc
or
cmpsb
les
xchg
push
xor
sbb
pop
aas
loopne
push
fildll
fs
push
das
and
and
mov
out
test
insb
mov
movsl
pop
gs
push
leave
jae
sbb
mov
sbb
adc
xor
cmpsl
fwait
sub
arpl
xchg
insl
mov
fisubrs
pop
repnz
xchg
andl
mov
sbb
mov
cmp
dec
add
pop
mov
push
pop
jg
push
loop
jb
repnz
in
pusha
test
dec
loopne
outsl
mov
mov
mov
xchg
mov
or
cmpsb
push
mov
inc
cmpb
sub
mull
cmp
and
shl
mov
dec
dec
mov
xchg
sub
fsubp
movsl
cmc
adc
push
popf
and
inc
adc
rep
lods
push
adc
mov
cmp
push
ds
sbb
xchg
ret
call
movsl
pop
xorl
jnp
mov
pop
pop
jbe
call
outsb
cli
mov
mov
inc
pop
imul
js
jae
fists
inc
jae
push
add
push
iret
fcoms
add
lods
loopne
std
fcomps
adc
arpl
mulb
stc
addr16
imul
adc
out
pop
fstpt
sub
adc
movsl
sbb
imul
outsb
inc
les
push
mov
dec
push
xchg
shlb
lret
pusha
xchg
divb
scas
jg
mov
jb
sub
in
cmp
xchg
inc
xchg
cmp
fcoml
mov
scas
sub
xor
in
imul
pushf
pop
out
outsb
xchg
fwait
rcrb
sbb
pop
mov
test
pop
dec
fcomip
leave
enter
lods
cs
pushf
jl
loopne
pop
enter
jns
pusha
lods
push
imul
jbe
mov
inc
addr16
or
frstor
xor
mov
pop
imul
push
mov
sahf
dec
rclb
or
inc
leave
sbb
xlat
stos
cmp
movsb
cltd
mov
outsb
out
add
std
xor
cmp
inc
inc
lock
cli
test
push
inc
push
in
xor
adc
repz
cwtl
pop
mov
faddl
inc
out
push
mov
xchg
loopne
or
mov
gs
cmp
in
les
mov
xor
pop
pop
int3
push
popf
pushf
sbb
daa
shlb
shll
mov
mov
mov
in
movsl
ror
popa
mov
xor
xchg
aam
mov
jae
pop
xchg
mov
adc
pushf
cltd
ds
insl
adc
imul
push
in
clc
leave
xorl
dec
lds
jl
and
insb
adc
jle
inc
incb
fistpll
jmp
jo
dec
insl
fsub
in
incb
fsubs
adc
jmp
fisubrs
mov
mov
dec
mov
daa
jg
fwait
jb
sbb
push
mov
fsubrs
push
lock
addl
jbe
mov
inc
sti
cmc
mov
int
jns
rep
adc
jge
and
fstpt
inc
out
or
xor
push
insb
cmp
idiv
mov
scas
incb
jmp
insb
ss
lods
sbb
pop
loop
fwait
jo
aas
and
sub
lock
push
mov
sti
mov
ret
mov
push
orb
jo
cmp
testb
pop
mov
inc
fisubrl
pop
jg
imul
popa
loope,pn
imul
jecxz
jb
xchg
adc
mov
dec
mov
jp
repz
loopne
push
ja,pt
fistl
lods
pop
mov
arpl
push
shll
mov
dec
push
mov
pop
cmp
lods
mov
data16
nop
hlt
sahf
push
push
or
popa
xor
mov
add
xchg
mov
fsubp
lods
mov
jmp
cltd
ficoml
int3
ss
popa
add
pop
pop
int3
push
jbe
jmp
cmp
bound
adc
adc
call
jl
push
jmp
movsl
mov
imull
in
movsl
mov
push
push
jo
xor
in
sbb
mov
dec
test
sbb
fwait
lcall
dec
pop
and
insb
clc
bound
mov
dec
jmp
fs
inc
out
lds
pop
and
mov
je
outsb
adc
inc
sub
jb
mov
and
jo
outsl
push
dec
push
test
pop
jns
jp
test
je
imul
sti
bswap
or
mov
scas
lods
mov
mov
xchg
cmp
push
dec
adc
xchg
jp
lock
xchg
inc
lret
add
fdivr
push
ja
push
mov
cmp
sbb
xchg
jle
hlt
or
pop
jecxz
pusha
stos
imul
push
lret
push
pushf
cmp
xchg
outsb
and
cmp
int3
jmp
xchg
inc
pusha
push
into
xchg
pop
and
and
pop
jns
cmc
cmpsl
mov
aas
cmp
and
cmp
jmp
xchg
fsts
out
test
insl
std
sub
dec
dec
std
lds
les
test
aam
jge
test
loope
into
adc
loope
stos
cmpsl
in
lods
jge
dec
test
add
test
sub
outsb
adc
mov
add
repnz
lds
mov
jge
arpl
lods
pop
push
inc
outsl
insb
xor
pop
in
jbe
push
push
mov
jl
dec
outsb
out
pushl
dec
cli
mov
lret
std
sti
pop
and
je
das
mov
sbb
xchg
imul
mov
jl
aaa
lret
out
cwtl
xor
push
in
movsb
lret
adc
inc
das
sti
adc
pusha
adc
mov
aaa
ret
add
xchg
data16
or
push
xchg
inc
add
es
imul
push
clc
mov
test
and
cld
scas
or
mov
stc
sbb
mov
pop
enter
std
xchg
jnp
lea
xor
pop
xchg
cmpsb
sub
int
aaa
mov
addb
sbb
xchg
sbb
cltd
dec
out
repz
sbb
divb
sub
xchg
mov
jne
push
mov
and
in
int
adc
mov
xor
mov
adc
lret
jmp
in
outsb
pop
sub
cld
es
and
push
lods
roll
mov
cwtl
sarl
push
push
xor
lret
jg
rcl
or
je
mov
lcall
les
mov
or
sbb
test
test
sbb
loopne
aad
ss
test
les
add
inc
aam
inc
and
loop
cmp
sbb
xchg
mov
jo
jbe
aas
cld
repnz
pop
shll
stc
jp
add
fisttps
das
fcomi
or
mov
lea
cmp
dec
mov
dec
lea
jo
aad
add
xchg
jbe
lock
cmp
jle
push
mov
pop
das
out
les
inc
orl
das
xchg
mov
add
mov
pusha
lcall
lods
cmpsl
mov
pop
ret
pusha
outsl
movsl
pop
adc
xor
sbb
mov
dec
test
jp
push
lds
pop
in
pop
icebp
xor
adc
adc
out
test
add
pushf
mov
xlat
dec
push
into
push
dec
cmp
jmp
xchg
xor
inc
scas
rorb
cs
das
sbb
cld
xchg
pusha
inc
out
rcrl
ss
ficoms
lahf
xor
or
adc
xor
lahf
test
xchg
stos
jns
test
int3
inc
and
imul
fmull
outsl
sub
cmc
push
push
and
aam
mov
sub
mov
xchg
pop
fwait
and
mov
cmpsl
iret
jno
xor
sub
jne
iret
mov
imul
sub
mov
push
pop
jl
sub
push
sub
outsb
and
fwait
aam
push
cs
and
int3
je
xor
add
fsubs
pop
hlt
cs
push
mov
push
mov
mov
out
jbe
hlt
dec
repnz
loop
das
cmp
repnz
push
outsb
pop
adc
pop
xchg
inc
repz
xor
loop
daa
push
lods
je
test
movsb
dec
push
add
pop
sub
sbb
imul
int
push
cwtl
ret
movsb
test
or
or
and
outsl
mov
hlt
xchg
push
aas
add
push
sub
mov
repnz
mov
shrl
push
icebp
sub
addb
lea
andb
bound
clc
push
xor
xchg
out
pushf
pusha
aas
sub
enter
or
xchg
xor
jecxz
jbe
xor
mov
inc
ljmp
dec
int3
jmp
lret
sbb
lds
jne
jne
mov
adc
cs
adc
aaa
test
mov
jl
cmpsl
inc
sub
lea
mov
sub
ficompl
lret
sub
pop
pop
sbb
out
sbb
sbb
adc
push
cltd
ret
pop
mov
jg
out
inc
aaa
divl
ljmp
popf
cmp
repz
les
and
sub
xorb
out
mov
pop
adc
iret
lea
test
out
pop
sbb
fiaddl
sbb
xor
mov
out
or
lods
xchg
imul
repz
dec
lret
fldl
inc
mov
or
dec
push
int
fisubrs
mov
cld
call
pop
xor
sbb
and
mov
inc
pop
enter
fcom
pop
mov
int3
pop
jg
mov
scas
inc
jecxz
push
repz
sahf
jl
lods
mov
dec
data16
rdtsc
sub
push
nop
movsb
jecxz
mov
push
in
mov
fists
ljmp
mov
ljmp
cmpb
push
sub
jno
scas
and
lds
xchg
mov
repz
jnp
or
jmp
or
or
test
fs
jg
jb
scas
xchg
add
or
iret
cwtl
loop
and
inc
mov
push
mov
out
sti
test
std
cmpsb
push
push
inc
movnti
or
pop
enter
and
in
and
stos
jo
push
mov
sar
push
movsl
mov
cli
outsb
jg
rolb
mov
pop
jecxz
aas
out
sbb
lret
mov
imul
shll
or
pop
add
lea
imul
pop
jo
mov
add
adc
xchg
mov
mov
sbb
add
es
sub
lret
xchg
mov
in
scas
cli
movsl
sub
aad
pop
mov
call
mov
dec
js
sbb
add
mov
and
fisttps
lcall
outsb
fcompl
fwait
xchg
inc
mov
or
leave
adc
jp
or
inc
jle
mov
push
addr16
sub
mov
mov
fcmovb
stc
bound
bnd
xchg
mov
xor
jle
enter
jge
divl
nop
sub
shr
lret
sbb
mov
jb
ds
push
xchg
xor
and
sbb
cmp
add
js
cmpsb
arpl
or
out
cmpsb
xlat
sub
fnstenv
mov
cmc
jne
in
xorl
addb
xor
sub
mul
fdivrl
ljmp
xchg
adc
jge
xor
movsl
lcall
jmp
shrb
push
stos
pop
jl
cmp
sub
fidivl
cli
shll
popf
outsb
jns
dec
adc
push
fwait
shrb
push
mov
sub
rclb
xchg
and
pushf
loope
icebp
lea
cmc
push
cmp
cmp
xchg
xchg
lahf
ds
loopne
cld
fwait
inc
pop
dec
cmp
js
pop
dec
lods
or
movsb
lret
or
sbb
mov
fcmovu
xor
cmp
mov
sar
lock
rcrl
add
cs
push
fcmovbe
cld
mov
data16
pop
dec
pslld
adc
mov
mov
cli
push
mov
push
lock
mov
fidivs
jne
fldenv
pop
leave
cld
inc
lods
sub
scas
inc
testb
pop
dec
sti
pop
outsb
inc
pop
inc
in
jmp
fnstcw
roll
sbb
lcall
cmpsb
outsb
inc
inc
xchg
lock
dec
icebp
jmp
fs
fisubrl
add
mov
jle
pusha
or
push
mov
and
shlb
push
push
xor
mov
andl
daa
xchg
roll
jp
dec
ja
dec
int3
clc
sub
inc
int3
or
idivl
inc
cmp
fcoms
scas
ja
in
mov
dec
cmc
and
inc
or
cli
pop
xor
popf
xlat
mov
add
xor
arpl
popa
push
mulb
add
sbb
pop
lds
mov
imul
dec
and
fmul
add
xchg
jmp
and
mov
dec
inc
shld
xor
mov
mov
fs
enter
add
mov
sub
fstpl
adc
hlt
push
and
xor
iret
mov
popf
dec
xor
lret
push
or
inc
sahf
jmp
out
arpl
lds
imul
jns
mov
fidivrs
xchg
lcall
or
xor
or
mov
mov
cld
add
pop
xchg
sbb
ret
xchg
xchg
outsl
and
stos
pop
stc
bound
lds
inc
inc
sub
mov
into
loopne
push
dec
xchg
cmpsl
adc
stos
js
sub
xor
lea
mov
pop
and
xor
repnz
jns
aad
mov
push
inc
divb
insb
xor
adc
fildl
mov
mov
pop
mov
cmpsb
or
or
add
es
lcall
jo
adc
aam
sub
push
pushf
fcomps
mov
js
imul
mov
popf
pop
stc
pop
rorl
out
jge
out
sarl
imull
out
cld
mov
mov
insb
adc
push
dec
iret
sub
enter
movsb
push
xor
leave
sbb
mov
sarl
daa
outsb
or
iret
repnz
pop
sbb
adc
inc
mov
sub
or
fisubl
sbb
cmp
add
add
mov
imul
inc
ret
negl
jnp
push
nop
lret
mov
es
jb
adc
pop
sub
push
push
push
iret
pop
gs
mov
or
in
mov
nop
insb
popa
shrl
mov
or
xchg
cmc
push
adc
jmp
fldenv
adc
fwait
pop
sbb
adc
inc
cmc
orb
pop
dec
fs
jae
xchg
pop
xchg
nop
cmp
fistpl
dec
mov
inc
xchg
mov
jnp
loop
cmp
insb
jge
ljmp
xlat
test
mov
jecxz
pop
fldenv
fisttpl
insb
stos
test
call
mov
mov
jp
jp
lds
adc
out
inc
jns
imul
mov
fcompl
jbe
or
addr16
mov
test
add
cmp
arpl
sub
and
xchg
ss
cmc
sub
jl
andb
hlt
cltd
dec
shrb
adc
adc
sbb
leave
mov
cmp
xchg
outsb
adc
popa
sub
aam
repz
stos
push
in
out
add
mov
int
scas
out
mov
out
iret
mov
je
shll
cmp
scas
adcl
push
push
fistpll
xor
jmp
jecxz
mov
push
mov
mov
adc
mov
sbb
mov
sbb
lcall
test
mov
pop
mov
js
push
clc
call
mov
sub
jg
jns
popf
mov
sti
out
and
mov
shrl
es
hlt
lods
insl
data16
scas
sub
mov
ret
out
lahf
xchg
into
aas
xor
popa
icebp
mov
imul
adc
or
or
shll
push
std
std
mov
ret
stos
jmp
div
test
out
into
pop
fisubs
in
addr16
hlt
xchg
push
xor
jns
movsl
stos
xchg
lret
dec
sub
push
cmp
cmp
aad
cmpsb
mov
mov
lahf
mov
lcall
mov
dec
inc
scas
out
mulb
leave
lea
int
push
cmp
xlat
add
hlt
add
iret
adc
push
mov
xor
push
jb
frstor
push
cmp
mov
js
or
mov
inc
lock
iret
addb
maxps
cmp
push
mov
xchg
test
cli
lods
arpl
cmpsl
ss
out
movsl
enter
push
mov
sub
add
loop
insl
test
push
push
stos
xchg
jge
in
xor
pop
jns
test
dec
lods
sbb
inc
pop
inc
andb
aad
jl
push
mov
mov
xor
xor
movsb
insb
div
lahf
testb
call
jmp
mov
fisttps
arpl
out
cld
jbe
lea
pushf
xchg
fidivl
xor
mov
pop
nop
in
ror
mov
movsb
lcall
jmp
pusha
das
push
add
xor
mov
fisubs
jecxz
add
pop
and
movb
fcoms
lcall
out
std
icebp
mov
ss
in
sub
cs
sqrtps
cli
cmp
repz
or
cs
cmp
fcomps
cli
mov
pushl
cmpsl
cmp
popl
popf
cmc
imul
inc
jns
daa
fwait
rcr
cmp
ds
add
sbb
pusha
cmp
push
cmp
stos
sbb
cmp
repz
pushl
inc
popa
xchg
aam
jp
add
or
jb
data16
fxch
mov
mov
xchg
jbe
xor
pushf
mov
cmpsb
xor
adc
ds
sti
sbb
lods
mov
fstpl
xor
jmp
lods
je
addr16
out
mov
movsb
shll
lock
and
les
jo
cvtdq2ps
dec
fisubs
cli
cltd
sub
cwtl
mov
xchg
sub
pop
sub
lret
adc
sbb
adc
aaa
push
or
ljmp
cltd
push
lea
addps
adc
loope
mov
fidivs
aas
fcmovnb
xor
fnstenv
xor
push
icebp
add
cltd
fildl
sbb
mov
mov
push
mov
gs
outsl
cli
xchg
push
fsts
sbb
test
in
xor
outsl
sub
sub
xchg
sub
push
into
mov
jp
push
push
es
fildl
fsubs
ret
dec
stos
int
fdivl
pop
outsl
or
movsb
push
je
shll
roll
andl
jmp
sub
adc
or
push
mov
mov
add
jbe
pop
in
xor
xchg
inc
ljmp
ss
mov
xchg
sahf
jo
sbb
sub
loope
mov
insb
mov
insb
popf
fcmovnb
dec
dec
dec
sbb
xlat
je
adc
dec
jp
cltd
insl
xchg
mov
sbb
lods
pushf
mov
mov
sbb
adc
or
fidivrl
add
sbb
subl
push
add
jg
ficomps
mov
mov
outsb
push
cmp
adc
sub
test
add
ja
fldcw
lret
test
fisubrs
lea
sbb
xchg
std
fisubrs
cmp
jns
ficoml
mov
mov
pushf
mov
push
xchg
push
push
icebp
push
stc
xor
xor
imul
dec
mov
or
cs
clc
mov
rclb
cmp
sbb
ret
push
pop
loope
repnz
sbb
pop
rcrb
lods
scas
ds
test
dec
dec
roll
les
sub
mov
fsts
std
daa
scas
sub
les
sub
sub
mov
add
add
jecxz
sbb
xor
shrl
inc
jae
xor
push
hlt
inc
ret
push
imul
xor
outsl
adc
dec
mov
jmp
push
jmp
ljmp
in
push
in
xor
in
sub
paddusw
push
movsl
out
mov
call
ret
addr16
ljmp
xchg
sub
lret
jecxz
sbb
add
fdivs
cmp
scas
fwait
or
movsl
adc
out
mov
test
push
pop
sbb
test
filds
cmp
mov
inc
mov
pop
out
or
and
in
outsl
insb
push
aaa
or
ja
jno
outsb
mov
mov
movlps
add
arpl
xchg
int3
mov
mov
mov
inc
aam
imul
sbb
pushf
lods
cmp
jns
push
cwtl
les
adc
jl
and
mov
repnz
push
shr
xchg
shl
shlb
cmp
and
in
dec
jne
int3
dec
inc
sahf
cmpsb
sbb
adc
fistps
mov
ja
movsb
pushf
jb
jle
rcr
cmp
add
insb
jb
jne
sti
cmp
int
adc
decb
sbbb
inc
movsl
mov
and
xor
jbe
or
cmp
add
test
jbe
clc
push
and
xchg
jbe
cmc
xchg
les
jns
cmp
or
mov
cmp
fnstsw
shlb
lret
lods
aaa
mov
add
push
dec
inc
sbb
adc
mov
insl
pop
cwtl
imul
das
or
xor
dec
sbb
cmp
jns
pop
and
xor
mov
or
movl
pusha
push
sbb
xchg
push
stos
sub
cmp
call
mov
imul
xchg
mov
xchg
dec
jae
push
shrb
movsl
push
inc
out
sti
or
rcll
lods
adcb
testb
stc
je
fwait
leave
mov
jno
ret
lock
sub
jbe
popa
inc
dec
adc
call
jp
adc
add
cmc
aas
mov
fcom
insb
fnstcw
mov
sub
inc
mov
dec
int
pmaxsw
popa
adc
adc
pop
xchg
adc
arpl
xchg
or
ss
ja
insl
sub
xchg
and
pop
jge
sub
pop
shll
sub
mov
pusha
adcl
mov
xor
in
in
dec
jnp
jb
fsts
pop
lret
cltd
sub
add
mov
push
push
gs
add
in
mov
mov
cmpsb
addl
or
mov
pop
sub
jnp
cmp
int3
or
jae
inc
outsl
adc
scas
jns
clc
inc
sbbb
repz
rcll
adc
push
sbb
out
and
add
cmpsb
clc
scas
mov
dec
es
adc
mov
add
iret
shrb
lcall
push
push
xchg
hlt
in
adc
inc
iret
pop
adc
dec
push
mov
xchg
xchg
outsb
cmp
mov
inc
or
aaa
test
data16
aad
in
stos
sbb
mov
std
pop
or
fstpl
rcrl
adc
pop
mov
dec
scas
add
sahf
cltd
jmp
ss
push
sarb
arpl
cwtl
nop
add
mov
andl
popa
jns
ja
xor
movsb
add
popf
or
cwtl
dec
fs
repz
mov
test
outsl
and
sub
sahf
jg
xor
lods
jp
aas
in
out
outsb
in
ret
call
insb
cmpl
es
cld
aas
iret
mov
loopne
add
inc
sbb
jae
scas
cmpsl
mov
add
add
ret
pop
test
cmp
sahf
gs
cmp
and
aaa
inc
mov
pop
aas
fisubl
scas
xchg
lret
jl
cmc
or
mov
mov
and
add
xor
aam
push
fwait
xchg
mov
inc
adc
pushf
push
movsb
sub
jno
and
sub
mov
mov
jbe
and
outsb
aam
into
or
cs
bound
pusha
stc
and
in
outsl
aaa
xchg
push
inc
and
nop
xor
pop
pop
fnsave
sub
push
mov
inc
aam
lret
sti
popa
jle
enter
fs
jp
mov
pop
push
xor
jnp
cmp
mov
ljmp
pushf
dec
xchg
lods
push
sub
imul
mov
sbb
push
adc
idivb
cmp
fwait
and
out
ljmp
mov
mov
inc
add
iret
dec
xchg
mov
lock
sub
inc
loopne
xor
mov
das
dec
sub
outsb
mov
xchg
pop
adc
pushf
add
cmp
test
push
xor
andl
pop
jecxz
jns
es
jns
lock
in
mov
and
orl
dec
jmp
push
dec
in
es
enter
movsl
pushf
xor
imul
loopne
mov
loop
clc
inc
mov
adc
pop
pop
test
cmp
adc
lock
scas
mov
jo
repz
jmp
daa
and
cmp
inc
add
sahf
pop
sbb
push
cltd
into
cmp
and
and
ds
dec
and
pop
mov
pop
push
xor
xor
xor
pop
or
push
pusha
jle
fwait
clc
jp
or
subl
aas
and
xor
scas
push
fwait
sahf
add
inc
in
dec
sti
pop
pushf
xlat
pop
lods
fildl
pusha
add
push
mov
ja
xlat
mov
insb
xor
out
xor
dec
ret
cli
push
test
int3
push
aam
and
push
mov
cltd
ret
pop
insl
int
lods
push
aad
lods
orl
ds
fistl
fisttps
mov
dec
or
sbb
stos
xchg
push
aas
sub
insb
loopne
and
sub
repz
cwtl
push
mov
mov
ret
push
int3
repnz
fstps
sbb
cltd
cli
sbb
mov
les
mov
push
inc
pop
pop
iret
js
pop
mov
divl
arpl
xchg
adc
xor
loope
jg
jl
fwait
add
sub
mov
das
xorl
push
aaa
xchg
sbb
dec
pop
fs
stc
push
incl
loope
cmp
data16
pop
loopne
sbb
push
sub
sbb
pop
test
dec
movsl
adc
rorb
int3
ss
pop
push
dec
push
inc
and
loope
dec
aas
fxch
hlt
aad
lods
aam
test
dec
iret
cmp
pop
clc
mov
loop
movsb
scas
pop
ds
enter
adcl
out
mov
sub
stos
dec
or
push
and
ret
pushf
and
or
shrb
pop
or
mov
pop
aaa
add
pop
les
cmp
sub
pop
jmp
aas
pop
outsl
mov
and
mov
roll
cmp
incb
sbb
ja
testl
sub
push
and
lret
cmp
xor
enter
push
jae
dec
fsubl
xchg
stos
xchg
lea
lea
in
cmp
sbbl
cmpb
mov
push
bnd
ds
and
xchg
jg
or
aas
mov
and
daa
or
sarl
arpl
mov
adcb
jns
cmp
outsl
inc
mov
rcr
lret
lods
cmp
push
aaa
mov
and
jp
lods
loop
inc
adc
add
jbe
rclb
popa
gs
lcall
lret
imul
pop
iret
mov
sbb
icebp
shlb
or
movb
movsl
push
adc
adc
jmp
test
sub
sbb
xor
add
mov
mov
fildll
and
bound
lahf
loop
sub
ja
out
pop
leave
jno
pop
pop
cli
ds
jecxz
adc
out
xor
push
inc
adc
adc
adc
xchg
pop
or
jl
adc
fldl
cltd
or
mov
jo
sub
mov
shrb
dec
xlat
sahf
orb
comiss
push
xchg
stc
and
cmpsb
xor
rcr
dec
mov
clc
xchg
aaa
pop
lock
fsubrl
ljmp
sbb
adc
adc
into
mov
mov
inc
mov
xchg
inc
and
in
and
mov
sub
sbb
rorl
cmp
lret
scas
dec
popf
jp
sub
inc
stos
fmulp
icebp
outsb
fs
inc
add
test
test
rclb
or
aam
mov
push
iret
mov
insl
jge
xchg
pop
cmp
dec
test
test
xchg
js
in
ss
pusha
mov
push
mov
xor
jp
std
pop
ljmp
ret
xor
hlt
pop
jae
lahf
dec
movsb
sahf
pushf
add
out
pusha
jmp
push
and
orl
pop
int3
dec
nop
lods
dec
stos
dec
cmp
xor
enter
mov
add
daa
lds
loop
jecxz
in
cmp
addr16
lods
xchg
sbb
and
add
lahf
dec
popa
sub
mov
pop
inc
sub
ret
ss
or
stc
push
xchg
insl
mov
mov
pop
fmuls
xchg
scas
lahf
in
dec
or
and
into
frstor
cmp
adc
cmpsb
lods
ds
lret
sbb
test
aaa
mov
int3
lahf
out
mov
sahf
mov
mov
loop
fistl
std
lahf
inc
mov
out
stos
incb
xor
xor
mov
iret
loop
inc
rolb
xchg
fcomps
popf
xor
stos
sub
call
or
mov
popf
or
sbbl
mov
pop
cmpb
in
pop
call
dec
push
gs
jb
jg
dec
inc
push
in
iret
pop
nop
push
stos
add
inc
xor
hlt
addr16
mov
leave
jo
mov
stos
fmul
adc
push
test
ffreep
out
scas
loope
outsb
jp
dec
pop
lcall
pop
mov
fdivrs
addr16
mov
add
push
das
mov
mov
fistps
sbb
ds
push
hlt
repnz
ja
jg
mov
test
mov
add
mov
sbb
adc
dec
push
sbb
mov
bound
sbb
and
data16
fwait
in
outsl
loop
adc
pusha
repz
negl
dec
arpl
mov
sti
fadd
daa
cs
dec
jmp
and
inc
imul
sbb
js
nop
sbb
add
pop
mov
push
in
xchg
repz
sti
aas
sub
ljmp
jb
pusha
into
call
xchg
lret
or
xchg
lods
adc
cmp
insl
add
cli
dec
push
out
dec
imul
ror
fs
add
pop
ret
fwait
push
loop
jno
and
sub
mov
jg
and
pusha
outsl
ret
jge
aaa
lahf
in
fsubr
jg
pop
mov
mov
xor
xor
mov
mov
add
xchg
pcmpgtw
xor
cmp
in
icebp
dec
sbb
cmpsb
insb
and
or
pop
je
push
dec
add
mov
fdiv
adc
xchg
icebp
aaa
bound
jle
mov
jecxz
push
add
lret
or
insb
dec
dec
mov
cwtl
xchg
sub
in
xchg
loope
sub
jno
and
inc
lcall
lahf
push
fistpl
add
jmp
sub
mov
mov
addr16
iret
xchg
push
add
adc
jecxz
icebp
or
cmp
or
shlb
add
cmpsb
movsb
jle
aas
cli
ss
inc
fisttps
jo
cltd
into
push
and
inc
push
mov
hlt
daa
je
cli
pop
pop
adc
nop
ret
mov
sbb
cmp
les
rolb
xchg
lock
mov
dec
or
out
and
mov
lods
sbb
stc
lods
mov
mov
dec
push
lret
cmp
sbb
movsb
pop
mov
mov
or
loope
mov
fcompl
or
sub
dec
add
mov
test
xor
stos
push
cmpsl
add
stos
sbb
popa
lods
fidivs
loop
ret
sub
insb
lahf
cmp
jbe
push
pushf
ret
leave
and
imul
sbb
test
mov
inc
jnp
push
pusha
rcrb
enter
loopne
std
cltd
dec
mull
je
cmp
jnp
jge
mov
adc
insb
test
out
arpl
xor
add
popf
aam
jo
in
xchg
adc
mov
jo
push
jg
dec
clc
dec
sahf
sbb
add
pop
test
je
cli
adc
adc
jb
ljmp
sbb
xor
sub
xor
lock
inc
jmp
mov
pop
push
dec
and
pop
mov
sub
inc
dec
pop
cwtl
jno
insb
or
sub
add
sub
aad
cmpl
out
jo
jp
cmp
insl
sub
add
jne
sub
push
jle
scas
es
lret
popa
or
xchg
push
jne
push
sub
cmpsl
addr16
push
and
gs
bnd
gs
inc
pop
pop
jmp
or
in
cs
loopne
inc
test
or
push
pop
faddp
jne
mov
test
fwait
push
cmp
pop
cli
mov
and
clc
out
movsb
es
jge
mov
or
fisttps
addb
jns
nop
jecxz
dec
adc
int
adc
push
push
mov
jns
fs
decl
adcl
ret
bound
add
pop
mov
and
loopne
mov
cli
inc
push
aad
and
pop
pop
fistpl
mov
out
dec
cli
adc
jmp
sbb
mov
scas
add
notb
jg
push
jno
insl
imul
std
jno
pop
adc
stc
jle
xchg
fildl
bound
test
imul
mov
mov
inc
sbb
icebp
jo
data16
test
pop
cmp
sub
popa
das
dec
mov
or
mov
mov
sbb
test
push
fsubrs
mov
sub
pop
adc
in
xor
fidivs
pop
testb
mov
or
mov
cmp
jle
ret
in
xchg
pop
sbb
xlat
test
ret
jge
arpl
gs
mov
fadd
sbb
mov
inc
adc
fsubp
test
sbb
and
pop
arpl
add
push
data16
sbb
das
mov
clc
jbe
repz
sbb
push
add
aas
add
xor
mov
stc
stos
into
ret
push
sub
or
sahf
inc
dec
ds
xor
sti
fistpl
xchg
xor
jmp
pop
fld
inc
mov
pop
aaa
jno
and
adc
xor
ja
icebp
mov
repnz
add
inc
fstpt
hlt
dec
push
bound
push
in
xchg
pusha
test
lcall
mov
js
js
jae
push
mov
add
stos
dec
mov
les
xchg
cmp
mov
cmc
cmp
lea
inc
repnz
movsb
mov
iret
add
pushf
call
and
test
loopne
jg
addr16
gs
rcll
mov
jg
mov
cmp
fwait
ret
mov
or
xor
mov
shr
or
mov
pop
add
mov
push
adc
mov
repnz
hlt
bound
mov
fisubrs
cmp
pop
aad
stc
jecxz
cmc
mov
ret
sti
add
daa
push
add
cs
fmul
hlt
cld
aam
jle
inc
and
inc
aas
jp
adc
mov
dec
xchg
push
push
dec
mov
jnp
jbe
adc
push
cli
es
sub
and
icebp
fdivrs
fldenv
and
ss
adcl
lahf
jns
jo
pop
mov
test
iret
xchg
cltd
pushf
call
rcl
sbb
lock
jbe
xchg
pop
ds
loopne
icebp
daa
imul
adc
outsb
aam
sbb
xlat
stos
sbb
aaa
scas
movsl
pusha
sbb
into
lds
xor
adc
lods
cmp
fldenv
cltd
bound
fnstenv
lods
dec
cmp
popa
push
mov
fisubrl
mov
std
lcall
mov
mov
shll
dec
shlb
pop
lock
lahf
in
pushf
mov
repnz
adc
das
scas
call
daa
notb
insl
into
shll
or
push
in
push
sub
cmp
sbb
cmp
or
xor
mov
ljmp
pop
lods
mov
pop
fwait
cmp
test
shl
ret
fadds
fwait
jne
out
push
add
insl
loop
iret
mov
jbe
jge
popa
dec
inc
xchg
lds
out
out
cmc
sarb
cmp
xor
sub
jne
fwait
sub
cld
push
mov
lahf
fisttpll
ljmp
mov
in
add
pop
dec
pop
fldenv
push
xor
mov
cmp
xlat
xor
int
and
jnp
pop
dec
inc
hlt
test
jae
in
dec
outsl
sbb
nop
adc
inc
pop
cli
ss
mov
sub
pop
xor
inc
mov
les
mull
mov
mov
iret
jp
ss
sub
shll
rolb
mov
cmp
cmc
mov
sbb
mov
stc
jl
adc
and
int
xchg
jns
and
push
imul
int
outsl
xchg
shrl
daa
mov
int
popf
and
pushf
in
aas
aad
shll
xor
mov
mov
mov
cmp
mov
jb
lret
scas
aam
shlb
cmpsb
push
fcmove
push
pushw
pop
lcall
std
aam
sbb
xchg
out
push
nop
dec
popa
push
lea
test
dec
sub
sti
dec
jl
sti
and
jg
jb
shr
jnp
mov
adcl
test
mov
ret
cld
and
inc
xor
outsl
sti
pop
js
inc
cmpb
push
movsl
in
jno
mov
aam
fst
cmpsl
xchg
cs
mov
test
cs
push
outsb
into
add
adc
scas
mov
dec
jb
popf
adc
jnp
jno
or
sbb
mov
pop
inc
sbb
movaps
jge
xor
and
push
stc
adc
fimull
loopne
lea
push
cmp
pop
mov
or
adc
xchg
fadd
popf
out
or
mov
adc
test
xor
popf
pop
mov
jno
jge
dec
cli
data16
in
pusha
xchg
out
mov
sub
add
cmp
xor
inc
sub
cmp
stos
and
int3
dec
cmpsl
pushf
ret
adc
fidivl
mov
clc
pop
ret
popa
jno
icebp
dec
jmp
inc
inc
ja
arpl
repnz
mov
sub
mov
xchg
sbb
jge
and
sbb
inc
push
leave
sahf
ja
cltd
test
cltd
jns
pop
push
adc
xor
clc
jo
arpl
ljmp
pusha
pop
or
fldcw
add
jle
pop
xor
int
movb
and
push
loop
push
call
out
inc
jns
lods
cltd
xchg
sbbb
xlat
call
shll
loop
aam
sbb
rolb
sub
addb
fwait
inc
clc
fimull
xchg
and
movsl
mov
jecxz
iret
dec
out
or
push
jl
orb
adc
adc
std
mov
mov
sub
pop
pop
mov
rorb
loopne
and
cmpsl
cmp
push
adc
push
or
rclb
test
adc
fisubrl
int
iret
cmpsb
fsubl
push
pop
sub
rcll
icebp
cmpsl
aam
out
mov
outsl
sbb
pop
push
cmp
and
shlb
movsb
ret
sbb
cmc
mov
popa
lahf
test
jo
jle
sar
mov
daa
ja
push
jns
aam
or
dec
and
and
mov
hlt
mov
cmp
shrl
fdiv
jne
outsl
pop
aas
ficoms
push
jmp
lret
pushf
hlt
icebp
jge
adc
cmpsb
inc
lret
inc
iret
add
cmpb
pop
and
mov
roll
and
into
loopne
jnp
mov
data16
adc
arpl
or
cmpsl
mov
inc
les
sbb
mov
pop
in
mov
rclb
xor
pop
xchg
out
mov
lock
imulb
jge
push
idivb
out
fs
ljmp
push
mov
lds
call
jnp
mov
scas
adc
or
sub
xchg
or
xor
cmp
stc
les
test
hlt
stos
daa
imul
add
sbb
jno
lret
insl
mov
or
sarl
dec
xchg
inc
push
inc
pop
loopne
arpl
test
adc
xor
out
or
pop
add
adc
xchg
xlat
test
jb
loopne
lret
cmpsl
inc
hlt
jno
push
outsb
dec
add
sbb
ret
sbb
and
repz
or
in
xchg
jge
addr16
cmp
stos
dec
lods
leave
lock
ret
cmp
leave
xchg
scas
mov
js
xor
and
add
xor
dec
cmp
add
orb
jno
or
xlat
sbb
jb
movsb
pmaxub
test
into
jecxz
sbb
dec
xchg
mov
mov
subl
mov
pusha
and
js
ss
jp
push
cmpsb
fisubrs
xor
or
in
mov
gs
adc
sbb
jmp
mov
pop
xor
inc
jo
imul
or
jmp
lret
xor
cmpsb
dec
cmpsb
add
arpl
negl
test
pusha
xor
lcall
int3
imul
pop
dec
jno
inc
addr16
xlat
xchg
dec
xchg
outsl
fbstp
ljmp
stc
imul
and
testb
push
popa
xor
xor
div
ror
or
pop
fucomip
mov
out
out
scas
lods
nop
mov
lock
push
out
add
ret
mov
pop
mov
sbb
sti
push
mov
xchg
inc
orb
rol
popf
xor
jp
int3
pop
stc
pop
mov
xor
outsl
xor
popf
xchg
pop
mov
jl
scas
inc
lcall
shl
push
sbb
aaa
adc
adc
out
int
loop
test
jo
add
test
aam
inc
jae
mov
mov
in
out
mov
xchg
subl
pop
shlb
or
jg
adc
sub
dec
mov
dec
cwtl
aad
je
pop
xchg
cmp
push
stos
or
mov
xchg
lods
or
ljmp
xchg
lock
push
push
rcl
jle
pop
std
ficoms
mulb
js
orb
xor
jo
inc
sahf
xor
push
or
faddl
jns
push
mov
mov
inc
test
test
add
outsb
pushf
pop
push
xchg
sbb
sub
pop
jns
imul
pop
xchg
dec
push
push
jle
mov
test
scas
fistpll
out
nop
jae
cmp
cltd
nop
adc
cmp
push
sti
mov
ret
fistpll
scas
jo
es
sbb
mov
jecxz
imul
ficomps
inc
pop
fxch
cltd
nop
out
fsts
pop
inc
xlat
outsl
das
clc
ds
addr16
popa
push
xchg
pop
gs
es
jbe
test
xchg
inc
jbe
loop
dec
pushf
adc
mov
fisttpl
iret
mov
int
loope
in
out
xor
mov
push
fidivrs
lea
dec
pop
mov
clc
int3
add
push
pop
or
or
gs
cmp
dec
aaa
or
fisttpll
mov
popa
fwait
bound
js
or
shr
adc
or
loopne
sbb
jmp
or
mov
lock
cmp
es
pop
xchg
ss
movsl
add
cmp
in
mov
push
cmpsl
in
cli
ror
mov
pop
and
sub
sti
ss
pop
cmp
repnz
mov
adc
sbb
in
loope
call
or
inc
fld
add
dec
insl
test
in
inc
hlt
in
loop
mov
ss
and
fisttps
leave
xlat
xlat
xor
ret
call
clc
test
ret
pop
inc
xor
xchg
lods
jg
ret
mov
outsl
fdivrl
sbb
mov
scas
data16
or
inc
cmp
jl
pusha
mov
enter
push
push
stc
repnz
sbb
push
sbb
jb
sar
dec
popl
push
dec
xchg
jmp
pop
dec
mov
xor
loop
rcrl
mov
stc
test
and
sti
and
and
cli
in
and
jo
cmp
sbb
out
sbb
pop
shll
cltd
out
mov
std
dec
or
outsl
std
cmp
call
outsb
and
mov
adc
or
mov
popa
ds
xchg
jne
inc
cwtl
arpl
pop
incb
adc
mov
cmc
fwait
cmp
push
mov
stos
add
cmpsl
jb
add
mov
and
jbe
push
xchg
ret
mov
loopne
or
mov
xchg
cmp
sub
icebp
iret
int
shrl
lret
pop
add
fimuls
scas
mov
and
push
cwtl
popa
test
or
xchg
cmp
sbb
pop
inc
sbb
cmpsb
into
and
dec
aas
cmc
inc
subb
ljmp
mov
xchg
ficoml
jno
vcmpordss
mov
sbb
pushf
js
cmpsl
pop
add
lea
movsl
repz
inc
aaa
loope
mov
les
mov
jle
jl
pop
inc
xor
xor
dec
into
xchg
fs
push
mov
and
inc
mov
adc
mov
inc
dec
testl
repz
sbb
dec
mov
aam
jg
out
add
outsb
rcrb
sub
ja
hlt
push
dec
in
sub
adc
out
loopne
lods
frstor
sbb
rol
pop
add
push
push
push
fwait
icebp
jecxz
inc
leave
dec
xor
and
loope
iret
aad
xchg
fwait
xor
adc
inc
sbb
int
xlat
mov
jmp
test
sub
arpl
lcall
or
frstor
xchg
add
push
mov
adc
nop
js
je
xor
inc
stos
push
loope
idivb
push
xchg
push
popl
popf
sbb
mov
fcomps
mov
fidivrs
lods
or
add
movsl
iret
das
fwait
and
xor
mov
inc
jbe
imul
icebp
cltd
lock
add
sbb
ljmp
loopne
mov
ss
push
imul
sbb
cmp
das
jle
lret
mov
adc
cmp
jo,pn
and
movsb
push
bound
adc
xchg
addr16
jl
add
lret
test
repz
mov
adc
dec
push
daa
sub
out
mov
jmp
inc
mov
ret
jmp
je,pn
adcl
repnz
lahf
scas
or
lcall
adc
jle
xor
push
std
movsl
mov
out
push
push
fsubr
cld
cmp
inc
push
fucomp
and
mov
jl
mov
lret
outsb
push
xor
adc
ficomps
ja
or
fcoml
dec
enter
lods
inc
sbbl
push
sub
add
pushf
push
mov
stos
push
lahf
loop
and
clc
in
xchg
cmp
mov
xor
add
mov
push
je
mov
ds
jbe
inc
or
inc
xchg
jge
pop
cmp
icebp
test
mov
js
cmpsl
jg
mov
xchg
insl
inc
xchg
sbb
call
addb
into
mov
pop
jp
push
mov
and
stc
out
inc
test
aam
pusha
lret
insl
mov
push
xor
dec
inc
jae
or
lret
jmp
test
pop
sbb
mov
aas
arpl
sbb
inc
nop
int3
add
xchg
and
adc
xchg
repz
das
pop
mov
jmp
sub
and
sub
lods
call
push
std
adc
push
push
adc
pop
jmp
push
repnz
imull
in
cltd
fs
push
sub
imul
cmp
dec
ss
cmpsl
outsb
stos
xor
fcmovb
insb
lret
sahf
sti
mov
loopne
inc
daa
add
cmp
ds
sbb
jo
inc
icebp
dec
fildll
sbb
jmp
or
jl
test
lret
fists
subb
jp
ss
pop
repnz
hlt
ds
sub
test
adc
sbb
es
pop
mov
adc
fisubs
mov
daa
dec
sub
xchg
jnp
scas
push
and
fsubs
jge
and
les
cwtl
inc
mov
add
and
rolb
or
sub
outsb
push
hlt
nop
es
ret
cmpsl
inc
out
sbb
lret
xor
hlt
xchg
xor
adc
push
xchg
pop
sub
push
add
cmpsl
and
cs
xchg
mov
packuswb
jl
mov
test
mov
mov
cmc
or
in
push
test
inc
sarl
pusha
xchg
in
into
gs
pusha
ret
xchg
cmp
sbbl
mov
inc
mov
mov
xchg
pushf
xchg
mov
outsl
or
cmpsb
jp
mov
sbb
pop
push
jbe
lea
ret
or
je
sbb
or
adc
and
loope
push
mov
lcall
push
addl
xor
in
mov
jne
sub
push
xor
test
xchg
cmp
insl
loope
mov
mov
int3
stc
add
testb
mov
stos
not
loopne
push
lcall
cmc
mov
mov
cmp
jno
mov
pop
mov
push
repz
add
int3
nop
mov
fwait
leave
stos
pushf
leave
jno
test
jmp
push
push
pop
notl
ljmp
repz
in
cmp
adc
out
cmp
inc
jp
push
jns
cmp
mov
out
push
xor
mov
adc
push
imul
jp
aaa
or
push
arpl
aaa
stc
ret
shll
loope
or
cmpsl
xor
mov
int
bswap
popa
lahf
das
fmuls
mov
les
bound
and
xchg
dec
rcll
and
jge
sarb
movsl
mov
jae
sub
mov
cs
mov
psubsw
scas
daa
pop
cmp
ljmp
out
shrb
jle
add
xlat
xchg
mov
shl
cmp
sahf
cmp
dec
adc
sub
pop
cmp
cli
lock
cmp
bound
test
mov
adc
or
test
sbb
popf
sbb
mov
mov
push
aad
xor
cmp
jb
test
sarb
lret
xchg
lds
scas
in
enter
inc
add
movsl
and
addb
int3
and
pop
add
push
push
inc
dec
or
adc
xor
add
cmc
and
jne
cwtl
dec
mov
movsb
sbb
movsb
sub
and
adc
pop
cmp
mov
std
sbb
and
bound
push
and
sub
hlt
sub
push
mov
dec
enter
jp
mov
rorb
cmp
sub
fcoml
xor
push
and
cs
and
inc
adc
cmpb
add
cli
adc
andl
in
gs
cmp
sub
adc
outsb
mov
fdivp
popa
gs
repnz
insl
les
adc
idivb
rclb
inc
push
adcb
xor
and
xchg
fwait
repnz
pop
or
stos
in
imul
mov
mov
dec
cmp
ja
mov
aam
imul
hlt
dec
cltd
outsl
test
adc
test
out
add
lahf
popa
and
movsl
inc
mov
add
inc
mov
add
jge
shll
mov
int
jbe
int3
imul
lds
movsb
xchg
add
mov
loop
mov
in
cmc
inc
faddl
mov
and
rclb
xchg
scas
xchg
sti
dec
lahf
cmpsl
add
dec
int3
push
add
mov
add
or
add
push
imull
dec
shr
cmp
pop
clc
mov
push
xor
jae
mov
sbb
pop
adc
repnz
gs
add
mov
mov
test
lods
xor
ss
insb
popf
sbbb
mov
stc
inc
add
pop
adc
fidivrs
loope
xchg
jne
adcb
addb
in
jecxz
jg
jl
add
in
adc
pop
and
mov
cmp
jg
out
loop
dec
sub
jns
fnstsw
inc
test
xor
rclb
sub
push
je
jge
adc
std
fcmove
ljmp
mov
or
push
dec
lods
inc
push
lea
dec
lods
test
add
mov
clc
jl
loope
ljmp
jg
in
pop
arpl
add
sbb
and
adc
sub
mov
rcrb
test
inc
cmp
cmp
dec
mov
push
iret
dec
pop
es
xchg
insb
cwtl
jo
fimuls
pusha
or
mov
idivb
xor
jno
subb
repnz
ds
adc
notb
stc
jnp
mov
jp
aas
mov
adc
xor
pushw
fcoml
xchg
dec
lret
xor
dec
jmp
in
imul
jg
pop
or
push
cmp
mov
cmp
in
adc
outsb
or
out
cli
test
sti
ljmp
fmulp
adc
push
std
subb
jp
pop
pop
iret
lea
push
daa
scas
pop
mov
enter
in
mov
out
or
and
fidivrs
push
or
das
sub
push
mov
lds
lret
sub
lods
inc
roll
sbb
xchg
jmp
scas
sbb
cmc
add
nop
std
repnz
jno
sub
in
inc
stos
daa
aam
dec
and
cmp
rcrb
push
fimull
pop
fs
xor
fwait
insb
shlb
data16
rcrb
stc
nop
mov
jle
sub
inc
sbb
mov
iret
mov
pop
xchg
lret
sbb
push
sub
lea
pop
loop
xor
out
jge
jle
imul
xchg
adc
jbe
and
pop
dec
mov
pop
int
in
and
cmp
cmp
or
imul
push
and
mov
fsubrp
leave
dec
push
icebp
sbb
cmpsl
int
cmp
movsl
mov
repz
xor
gs
mulb
inc
xsaves
mov
fildl
inc
ficompl
add
fdivs
test
hlt
xchg
scas
sub
test
insb
mov
xchg
pop
fnstsw
sbb
sbbb
das
popf
imul
and
push
bound
push
inc
pop
rorl
adc
push
mov
stc
cli
dec
out
cmpsb
add
mov
stos
data16
loope
push
fidivl
push
and
push
sub
or
leave
lds
sub
sar
ljmp
scas
repz
pop
xchg
std
mov
or
mov
jp
mov
les
int
or
mov
cwtl
lret
sti
mov
xacquire
data16
jg
cmp
sub
sbb
add
push
outsb
inc
mov
rcrl
mov
dec
lret
dec
inc
ja
inc
in
pop
add
inc
shr
xor
test
jno
test
xchg
loopne
movsb
jecxz
inc
push
sbb
fimull
jmp
sub
cmpsl
add
nop
mov
shl
cwtl
fdivrs
mov
mov
sub
or
gs
jge
xor
inc
ret
test
jb
add
mov
sarl
jo
test
pop
sahf
popa
std
mov
sbb
jp
insb
mov
push
loop
lds
mov
inc
daa
inc
sbb
cltd
lods
adc
pushf
pop
stos
cmp
or
mov
mov
sbb
cli
sub
xor
fnstsw
fwait
lock
mov
and
pop
idivb
add
add
push
movsb
sbb
mov
sub
nop
fcomp
popf
sub
or
cmp
xor
fsubrp
push
sti
hlt
mov
xchg
mull
jge
std
out
imul
pop
mov
scas
mov
xlat
aam
not
adc
repnz
inc
repz
dec
out
stc
notb
test
push
int
sbb
xchg
test
jbe
jge
mov
repnz
loope
and
outsl
stos
insl
lret
sar
popa
add
jp
cltd
pop
jecxz
and
daa
sub
jmp
or
stos
pop
xchg
test
and
shlb
pop
cmpsb
mov
in
insl
pop
in
xor
pusha
add
lret
daa
pop
xor
sbb
sub
pop
push
jae
and
stc
xor
mov
sbb
push
mov
addr16
or
aaa
add
xor
jmp
or
sbb
cs
pusha
leave
push
nop
sahf
xor
xor
scas
pop
test
dec
pop
pop
stc
xchg
out
adc
inc
jbe
pop
xchg
jmp
inc
lcall
lcall
ret
cwtl
orl
nop
xor
hlt
lret
aaa
and
dec
imul
sbbb
test
xor
mov
sarb
lds
pop
rcrb
shlb
fdivr
mov
stos
data16
jo
lret
js
fwait
leave
mov
loop
stos
jb
cmp
xchg
dec
inc
unpckhps
push
xchg
dec
cmp
rclb
fsubs
jnp
vpaddq
inc
push
js
aad
push
jo
mov
scas
jb
lock
aam
pop
mov
xchg
lock
lods
mov
mov
inc
push
f2xm1
test
lret
dec
sub
in
rol
sti
mov
jae
push
mov
adc
sub
outsb
and
popa
pop
push
das
xor
ds
jbe
inc
xor
sub
add
shlb
sbb
adc
filds
mov
js
movsl
and
std
dec
shlb
jmp
psrlw
out
jle
fs
inc
cli
test
pop
mov
repnz
push
imul
xor
cmp
repnz
or
loop
cmp
jne
lcall
or
pushl
push
fwait
jmp
inc
stos
jne
pop
dec
jae
mov
mov
cmp
adc
into
call
xor
lcall
lcall
jge
or
dec
daa
push
jmp
pop
sbb
jmp
nop
cmpsb
fmuls
jb
bound
enter
jl
fs
add
gs
or
adc
in
or
or
sbb
adc
lahf
fcomip
in
inc
repz
and
sub
xchg
mov
mov
in
mov
xchg
jge
scas
shrb
mov
in
mov
out
dec
sbb
push
test
cmpsl
fidivrl
xchg
shlb
xchg
or
lods
mov
mov
mov
mov
push
rcr
mov
mov
movhlps
cli
notb
jno
xor
sbb
xchg
or
fldenv
add
call
fnstsw
inc
loop
aam
push
pop
ret
jb
cmp
pop
pop
ljmp
lret
pop
jl
add
mov
adc
loop
or
cmpsl
mull
shl
jae
adc
int3
mov
mov
adc
dec
enter
pop
movsl
push
pop
stos
and
testl
fucomp
mov
and
test
cld
cs
das
mov
pop
sti
dec
inc
xor
xorl
shll
xchg
roll
mov
aas
push
and
sbb
call
out
ja
daa
xor
fisubrs
rolb
fwait
das
jbe
or
push
sbb
mov
mov
cmp
mov
lock
jge
aas
popa
dec
gs
sahf
es
push
xchg
hlt
xchg
dec
dec
and
add
mov
push
out
test
sbb
push
mov
lcall
loopne
int
int3
or
movsl
fld
js
repnz
ja
pop
popa
cltd
adc
sbb
pop
mov
gs
dec
hlt
nop
fdivl
test
cmp
jb
stos
mov
push
inc
jmp
jl
test
adc
jo
or
mov
shrb
insl
xchg
outsl
outsl
adc
dec
rclb
stc
iret
push
popa
dec
pop
sub
cmp
jae
lods
adcl
or
jnp
gs
imul
repnz
cwtl
cld
dec
push
mov
inc
lods
xor
add
daa
leave
in
out
adc
xor
lea
outsl
jmp
mov
sub
shlb
outsb
outsl
movsb
inc
cmp
sub
pushf
sbb
jne
push
dec
inc
cmpsl
repz
in
insb
mov
cltd
mov
pop
out
mov
orl
jl
mov
xchg
test
mull
jp
xchg
mov
ljmp
in
out
int3
mov
and
mov
outsb
and
test
std
and
pop
adc
outsl
jno
dec
xor
jbe
inc
arpl
test
mov
inc
xor
addl
adc
int3
mov
pop
stos
dec
iret
mov
pop
push
fadds
add
xchg
cmp
nop
xchg
sbb
je
pop
pop
xchg
imul
jns
cmpb
pop
lcall
scas
int
ljmp
lock
xchg
mov
outsb
pop
daa
sbb
scas
stos
mov
sbb
inc
mov
insb
cmp
call
cmpsb
and
and
loop
daa
add
jecxz
pop
pshufw
divl
mov
adc
xchg
xchg
sub
arpl
mov
or
in
add
mov
popf
std
outsb
lea
inc
or
xchg
push
js
jg
xchg
shll
bound
sbb
mov
sbb
xchg
xor
test
jg
and
repnz
in
fidivrl
pop
les
mov
jae
jnp
shl
dec
push
lods
adc
jo
sarb
push
roll
xchg
rcll
mov
mov
adc
in
mov
jmp
mov
mov
xor
pop
mov
sbb
sahf
pop
rcrb
fldt
fimuls
int3
mov
add
sbb
xchg
mov
jae
pop
ds
loopne
mov
addr16
cli
sbb
rol
xor
cld
shlb
dec
pop
mov
push
inc
mov
sbb
clc
mov
aas
mov
mov
pusha
push
mov
or
sbb
fistpll
xchg
repz
jo
add
sbb
stos
sbb
fidivs
ret
ret
push
mov
pop
rcl
out
ds
dec
mov
mov
xchg
xlat
mov
int3
inc
adc
xchg
hlt
sub
ss
pop
mov
mov
mov
xor
cwtl
dec
or
jno
movsl
je
jge
jb
mov
push
adc
jae
js
and
adc
mov
inc
or
inc
add
jae
lea
adc
ss
xchg
mov
jo
mov
adc
nop
hlt
mov
inc
pop
movsl
out
adc
lret
rcll
arpl
push
sub
into
and
test
insl
mul
jl
mov
xchg
shrb
mov
scas
subl
fstpl
sahf
sbb
fucomip
icebp
cmp
jl
ss
mov
in
push
repnz
sub
nop
cmp
imul
pusha
xchg
mov
cmp
xor
fistpll
test
dec
test
pushf
in
jl
je
jo
xchg
mov
scas
mov
fmuls
mov
inc
jl
scas
sub
scas
ficoms
cmpsl
jp
sti
cmpsl
xchg
dec
dec
mov
sbb
lret
fidivrl
dec
mov
popa
add
pop
dec
add
faddl
adc
or
jmpw
cmpsb
loope
pop
inc
data16
cmpsb
pop
dec
and
push
inc
push
sarl
jmp
sub
cmp
mov
jmp
mov
pop
mov
es
es
sub
in
ret
cmp
in
leave
cmp
gs
clc
mov
outsb
jl
fiaddl
adc
jmp
mov
into
mov
sub
test
out
insb
mov
lods
mov
aad
addr16
sub
lret
mov
and
dec
push
cmpsb
call
mov
dec
xchg
cmp
adc
in
cmp
imul
out
imul
ljmp
push
dec
inc
push
sahf
fld
cli
or
xor
jns
lret
pop
in
fldt
test
sbb
call
lods
outsl
fs
mov
adc
xchg
in
cli
mov
xchg
and
mov
ljmp
xchg
mov
leave
mov
mov
cmp
cmp
inc
adc
or
xchg
xor
orb
pop
add
sbb
repz
leave
aam
sahf
clc
xchg
shr
cmpsb
pushf
ret
in
xchg
adc
stos
inc
jae
xchg
push
adc
test
mov
out
dec
cmpsl
lds
repnz
test
sbb
sahf
lods
fisubs
mov
cmova
dec
mov
mov
adc
dec
and
push
xchg
adc
aaa
outsb
sbb
inc
jecxz
clc
outsb
adc
xchg
repnz
sbb
xlat
std
loope
add
mull
xchg
ficomps
mov
cmc
cmp
sbb
adc
fsts
add
es
sub
inc
lcall
fmuls
in
pusha
jp
pop
or
xchg
jns
sbb
jae
mov
xchg
aad
sub
or
mov
scas
jge
cmp
sub
lahf
ficoml
sbb
addb
int
stos
cltd
cmp
subb
test
outsb
jno
out
stc
sub
sub
push
sar
or
or
bound
inc
cmp
in
enter
inc
or
pop
dec
dec
xchg
jl
jmp
push
fadds
orl
jbe
or
daa
dec
mov
les
adc
negl
mov
js
enter
aad
mov
stos
cmc
and
jecxz
mov
adcl
lods
mov
jbe
outsb
sub
sub
bound
jg
into
cmpsl
inc
ljmp
shl
sahf
call
ret
stc
fnstenv
rcrb
rorb
scas
inc
ret
xlat
loop
fstp
pop
cmp
lods
mov
cmp
cwtl
mov
mov
popa
imul
cmpb
jns
dec
out
repnz
dec
pop
jae
inc
xchg
js
gs
xor
mov
mov
xor
adc
fwait
popa
xchg
imulb
and
inc
arpl
insb
pop
cli
fisubrs
cmpsl
imul
repnz
fs
and
outsb
std
aas
dec
cmp
dec
clc
mov
add
lods
xor
dec
lea
sbb
out
add
add
mov
leave
adc
sub
shl
je
adc
cs
pop
jle
jno
les
xlat
jmp
lcall
pop
add
aad
fimuls
stc
fxtract
mov
push
sbb
jp
aas
outsb
mov
aam
jno
fidivs
fs
int
fists
stos
sbb
pop
push
jne
push
lahf
fistps
jg
dec
pop
adc
push
or
dec
jp
cmp
mov
dec
cmp
and
mov
or
wbinvd
cltd
add
or
aas
insl
fidivs
mov
ss
add
mov
sahf
pop
clc
add
dec
bound
test
outsb
cld
ja
sbb
scas
out
mov
xor
mov
mov
mov
xor
jae
insl
subb
arpl
cmpl
mov
jb
or
dec
in
jne
sub
sbb
scas
je
fwait
lea
push
repz
fucomp
pop
lds
stos
in
nop
fimuls
ret
and
ret
add
shll
and
sub
push
inc
cld
push
insb
sti
xchg
adc
xor
dec
into
test
inc
add
and
pusha
fwait
jo
pop
mov
push
or
pushf
hlt
lea
lds
movsb
bnd
fists
mov
and
push
test
adc
arpl
test
shr
out
pop
dec
pusha
aam
push
arpl
dec
cmpsl
jb
lods
leave
arpl
add
addr16
mov
ljmp
push
xchg
scas
jne
adc
xchg
jg
movsl
cmp
cld
jg
jmp
pop
push
ljmp
pop
push
pushf
adc
cmpsl
scas
ss
addr16
in
into
divb
test
sahf
adc
mov
fdivrs
cld
add
and
test
flds
inc
adc
fistpll
xchg
jbe
cmpsb
call
jl
int
jb
sub
mov
or
or
xor
insl
mov
cmpsb
out
sub
xor
fcmovnbe
out
repnz
sub
jecxz
jne
or
mul
pop
lea
jo
enter
movsb
dec
outsb
pop
adc
arpl
fsubr
xor
call
jmp
cmp
sbb
cmp
cltd
mov
in
insb
hlt
adc
notl
and
add
push
les
call
repz
cld
xor
mov
cld
imul
scas
add
pop
pusha
adc
insl
or
jle
loopne
mov
fldenv
sbb
xchg
je
pushf
pop
cmp
mov
aaa
jnp
mov
aas
js
shlb
mov
cmp
mov
xchg
sbb
addr16
test
shll
inc
iret
jne
outsb
xchg
cmpsb
or
insb
gs
lret
lcall
sub
dec
jge
sar
arpl
push
jp
stos
int3
scas
xchg
rcrl
pop
xchg
lret
push
mov
ds
cld
inc
mov
sub
outsl
cmp
orl
adc
push
mov
jmp
xchg
pop
pop
push
push
adc
fs
out
xchg
shl
clc
add
jmp
jnp
push
jle
xchg
jg
into
hlt
ret
inc
xorb
dec
call
mov
jns
jg
mov
xchg
inc
push
jecxz
jns
imul
xor
mov
push
sbb
jae
jle
or
mov
mov
dec
xor
cmp
jns
or
lods
push
inc
ss
and
push
mov
das
rclb
push
push
mov
inc
pop
or
fsubl
cmovl
push
inc
or
gs
shlb
loop,pn
js
add
inc
shrl
or
xlat
xlat
cmpsb
sub
inc
fsubrl
icebp
and
into
ja
imul
lret
push
jmp
mov
arpl
xchg
imul
jmp
pop
and
push
orl
mov
repz
icebp
push
mov
enter
ficompl
aas
add
das
pop
push
inc
fldcw
outsl
shlb
or
pavgw
jle
cmp
pop
jge
lods
fidivrl
mov
xlat
lea
push
mov
or
inc
push
jno
mov
fists
xchg
add
mov
pop
xor
divl
adc
mov
add
mov
xor
inc
mov
std
adc
sbb
fld
push
int3
add
ljmp
shr
repz
inc
xlat
push
push
or
xchg
scas
repz
sbbl
int
mov
imul
movsb
mov
mov
xchg
out
pop
xchg
pusha
inc
adc
mov
pop
fs
xchg
xor
lret
out
test
pop
mov
mov
in
shll
inc
xor
mov
jae
outsb
js
jle
adc
fstpl
adc
ljmp
pop
arpl
push
pop
std
fdivl
aad
lock
xor
daa
lock
and
popa
test
and
sub
jns
imul
out
std
jl
mov
ss
bound
rdpmc
pop
imul
ret
xchg
sbb
add
in
cmp
ljmp
dec
mov
push
mov
xorl
mov
fldcw
aaa
dec
adc
ret
sbb
push
in
or
fisttps
dec
test
sbbl
add
push
adc
imul
push
mov
push
aaa
incb
pop
push
jbe
lahf
lock
gs
lock
and
dec
push
ret
jl
jge
jb
push
xchg
icebp
ljmp
dec
pop
mov
mov
lea
aam
mov
pushf
jecxz
je
mov
sub
mov
popa
adc
aas
mov
push
cmp
lods
movsb
and
push
adc
jge
pop
push
cmp
loop
fisubs
or
stos
and
pop
mov
adc
lea
cmp
sub
mov
lcall
jnp
inc
movsl
sbb
xor
pop
rcrl
push
xor
cltd
clc
or
movsb
int3
jmp
lcall
sub
mov
rorb
jne
ficoml
cltd
jne
mov
sbb
pop
xchg
push
and
data16
aaa
inc
xor
inc
out
andb
push
xlat
xchg
filds
add
lret
mov
sbb
mov
or
addl
insl
sbb
imul
fcompl
out
mov
cld
push
sar
sub
movsb
rcrl
repz
mov
add
lret
mov
push
cwtl
jae
mov
mov
cltd
adc
pop
mov
popa
jb
dec
in
xchg
dec
je
dec
out
std
dec
stos
loope
icebp
inc
pop
sbb
pop
mov
jecxz
add
shrl
and
outsl
inc
sbb
movsl
push
loope
lods
dec
fwait
sbb
push
aas
es
adc
cltd
cwtl
dec
xchg
iret
stos
jno
mov
inc
cmp
scas
andb
mov
or
push
mov
push
les
sbb
scas
lds
sub
mov
inc
rorb
das
or
sbb
push
pop
xchg
iret
divl
pushf
push
add
mov
mov
mov
loop
es
fldl
in
ja
dec
or
aaa
cli
xchg
pop
outsl
push
xchg
and
and
push
pusha
push
loop
outsl
das
andps
push
dec
mov
mov
test
out
scas
test
push
sbb
mov
inc
mov
shlb
in
filds
add
insb
and
dec
repnz
stos
or
mov
push
pop
repz
mov
jecxz
lods
xchg
sbbb
sbb
faddp
mov
in
xchg
inc
pop
fadd
cmpsl
or
mov
cld
dec
xchg
inc
sub
loopne
fxch
jecxz
pop
cwtl
sub
mov
jae
inc
add
fiaddl
icebp
inc
cmc
outsl
mov
ljmp
mov
mov
sti
sbb
sahf
push
push
jp
xchg
aaa
addl
jle
mov
repz
je
cmp
leave
jae
jge
cmp
dec
int3
sub
mov
and
orb
cli
push
in
cwtl
sbb
inc
cs
sti
aam
sbb
cmc
pop
test
pop
jl
adcb
sub
lcall
mov
jne
mov
mov
faddp
xchg
lret
cmp
je
jnp
jnp
dec
adc
leave
push
rdmsr
loope
push
movsb
mov
cltd
popf
pshufw
jae
inc
dec
gs
movsb
jle
xchg
sbb
jmp
pop
xchg
sbb
pop
mov
das
testl
jl
mov
fimuls
test
movb
xorb
xchg
stc
aam
xor
jnp
jp
xchg
fwait
jo
xor
add
or
dec
pop
arpl
je
dec
add
adc
nop
jno
mov
scas
mov
sbb
scas
jge
sub
inc
loope
inc
xchg
mov
jge
call
scas
sub
or
loope
enter
push
cmp
jmp
andb
pop
aam
out
inc
mov
jp
mov
addb
dec
idivb
jmp
pop
out
mov
sub
adc
and
in
cmpsl
cltd
mov
xor
les
mov
sub
xchg
push
nop
aad
ret
jnp
inc
push
push
mov
jae
insl
inc
mov
mov
and
xchg
jg
add
lahf
xchg
xor
mov
test
insb
lret
push
jo
and
xchg
mov
pop
shrb
jo
popa
arpl
push
jb
pop
je
sbb
mov
js
jo
mov
lret
lock
xor
mov
mov
sbb
sbb
mov
mov
addr16
inc
nop
add
out
mov
cmp
out
addr16
ss
jo
adc
pop
dec
bound
fsubl
pop
stos
stc
sub
sbb
or
pop
cmpsb
mov
mov
mov
cmc
fistps
rcrb
sub
mov
or
fnstenv
leave
cmpsb
test
cmp
test
xchg
mov
data16
xor
push
stos
add
dec
cmp
mov
jb
push
mov
xchg
xor
int
fmul
xor
addr16
aam
stos
cmpl
out
lret
add
adc
or
lahf
in
cwtl
pop
inc
bound
in
aad
dec
cltd
test
jns
jne
jno
outsb
pop
lock
pop
xchg
fwait
in
aam
sbb
add
sbb
jne
cmp
das
or
xchg
sbb
inc
mov
add
rcll
adc
pop
fisubrs
fstenv
cmp
mov
popw
repz
lods
test
xchg
clts
lcall
mov
xor
inc
aaa
es
popf
add
and
sbb
inc
out
pop
lock
push
dec
xor
cmp
cli
fcomip
sub
pop
push
roll
or
adc
push
iret
jns
cmp
add
fsubl
cmp
nop
inc
test
cltd
enter
aas
add
mov
mov
and
scas
adcb
pop
adc
jb
enter
popa
movsl
mov
xor
xchg
mov
xchg
inc
dec
and
mov
adc
scas
ficompl
sbb
pop
mov
icebp
mov
and
addr16
inc
dec
inc
add
dec
shl
jecxz
dec
mov
xor
out
jecxz
popa
adc
scas
hlt
or
in
aaa
jns
fwait
and
xor
je
or
adc
rolb
sbbl
icebp
xchg
sbb
ljmp
and
std
popa
add
sub
pushf
push
xchg
jbe
cmp
jmp
pusha
aas
addb
arpl
fdivp
sub
cltd
xchg
cmp
mov
push
xchg
test
inc
rcll
lret
xchg
incb
push
ret
mov
sbb
das
sbbb
pop
mov
mov
repnz
lcall
sti
jge
xchg
adc
sbb
bound
mov
loopne
inc
stc
outsb
and
inc
stos
or
jle
cs
mov
cmpsl
mov
ffree
dec
lock
iret
mov
cld
jmp
dec
mov
jo
movsb
jnp
fistpll
das
xchg
pop
outsl
ds
jg
ljmp
xchg
cmp
mov
or
lods
pop
pop
ljmp
popf
push
jo
xor
iret
aad
sbb
pusha
bound
xchg
ret
loopne
bound
push
pop
add
sub
sar
mov
into
lret
mov
ljmp
outsl
push
test
sub
imul
bound
testb
fs
rcrb
cwtl
push
inc
sub
dec
sbb
es
adc
in
leave
ljmp
xor
push
or
xor
jno
or
or
jns
and
cmp
mov
jo
cmpsl
in
push
test
clc
dec
cmp
lcall
pusha
adc
lds
sub
inc
pop
pop
add
xchg
jmp
xchg
mov
mov
aam
push
mov
cmpsl
pop
cmpsl
rol
mov
push
jbe
jb
in
aaa
ret
cmp
and
scas
pop
fdivl
xchg
mov
adc
pop
jnp
mov
mov
dec
sbb
sub
ror
aam
sbb
call
into
incb
imul
rcrl
sbb
jmp
fbld
pop
and
add
fistpl
repnz
fstpt
add
femms
sub
stos
aam
jle
js
dec
out
cs
orb
sbb
pop
stos
jle
mov
not
loope
jg
fwait
xchg
mov
test
jmp
fsub
push
ja
jae
or
add
arpl
out
lds
fs
dec
inc
test
insb
pop
sbb
cld
mov
add
mov
xor
add
and
and
stc
fnstsw
xchg
ljmp
and
xchg
pop
sub
daa
dec
xor
sbb
add
add
idivl
daa
int3
fstpl
cmp
mov
inc
mov
sub
jge
enter
popa
xor
je
jnp
adc
mov
adc
nop
inc
fdiv
adc
cmpsb
aas
add
xlat
aas
jnp
scas
sub
lea
push
xchg
scas
repnz
sub
dec
inc
dec
jmp
pop
xchg
pop
dec
cli
pusha
dec
push
arpl
adc
mov
test
sti
mov
stc
out
sti
fidivrl
pop
loopne
jle
jecxz
xor
push
fwait
add
data16
icebp
leave
dec
jp
cld
push
out
cld
cmp
arpl
popa
cmp
cmpsl
jp
dec
rolb
sub
mov
cmc
mov
popf
pop
sub
pop
adc
add
movsb
out
push
xchg
stc
sub
mov
push
aad
mov
insb
jb
sbb
push
jmp
dec
jae
lods
push
sub
jnp
aad
dec
out
mov
push
mov
push
push
int
movsb
sahf
dec
mov
jnp
mov
fiadds
test
cltd
hlt
mov
icebp
and
outsl
sub
int3
xchg
or
dec
cs
mov
cmp
add
sbb
or
add
mov
pop
sub
and
dec
pushf
mov
xor
pop
lea
sub
cmpb
inc
popf
adc
cmp
xor
sub
sbb
mov
mov
sbb
inc
lods
inc
adc
mov
mov
lcall
and
inc
arpl
dec
cmp
or
aad
negb
cmp
repz
jmp
out
pop
lret
movsb
pop
outsl
cmpb
mov
stos
dec
xlat
and
lcall
pop
shll
loop
xor
shl
sbb
jp
jo
dec
xchg
mov
xchg
jecxz
sti
mov
popa
sub
in
cmc
inc
jmp
icebp
pop
lcall
jb
adc
cli
outsl
sub
imul
lea
mov
repnz
push
mov
addr16
push
mov
aam
orl
and
dec
int
cmp
mov
mov
jp
mov
sbb
in
and
adc
xchg
insl
lds
add
fimull
insb
dec
sub
mov
or
mov
ds
dec
xor
sub
scas
dec
sub
cmp
fs
dec
sbb
pop
out
push
repz
xor
movsb
lret
movsb
adc
cmp
repnz
fsubs
ljmp
mov
cld
stos
push
mov
xor
mov
or
je
and
icebp
mov
dec
daa
cmp
out
fnstsw
sbb
aaa
ss
sub
outsb
mov
cmpsl
pusha
push
add
aam
out
ljmp
lcall
inc
dec
rcrl
xchg
sbbb
inc
mov
cltd
in
cmp
std
call
jnp
adc
xor
loope
aaa
cmp
pop
cmp
hlt
and
dec
mov
xchg
lock
stos
leave
mov
cmpsb
icebp
and
into
push
fstpl
loopne
sbb
mov
xor
jmp
jo
and
xor
jle
xchg
jecxz
rorl
icebp
popa
xchg
stos
dec
data16
xlat
and
xchg
fldt
xchg
cmp
fisttps
sub
das
push
and
out
mov
push
dec
sahf
notl
dec
movsb
cmc
dec
into
out
icebp
push
cmp
pop
in
inc
or
inc
dec
lea
add
sub
jo
xlat
rolb
and
mov
pop
imul
mov
rorl
sarl
or
stos
xchg
repnz
push
sub
fwait
shlb
insb
pop
adc
rorl
inc
aas
mov
repz
mov
dec
imul
cwtl
repnz
jb
loop
lahf
jne
dec
adc
idivl
adc
outsb
xchg
or
ja
xor
jmp
cltd
mov
not
stc
pusha
push
xor
lret
pop
xlat
rolb
lret
mov
mov
lods
cmpsb
lds
jns
addr16
sbb
js
shll
loopne
push
jmp
in
inc
scas
or
jp
sar
jg
test
fwait
xchg
pusha
dec
add
cmpsl
inc
xor
xchg
or
push
sar
aas
dec
push
aam
mov
leave
lds
or
out
aad
jp
push
fsubrp
and
cmp
or
mov
call
jge
pop
adc
mov
imul
sbb
cmpsb
jmp
aam
adc
pop
or
or
push
xor
mov
xchg
dec
push
leave
out
push
test
outsl
jecxz
data16
dec
mov
xchg
cmp
cmpb
cld
lods
jmp
loope
loopne
mov
adc
cmp
inc
in
pop
cmp
inc
rorb
repnz
out
dec
push
mov
lea
xor
lret
mov
lret
jbe
lahf
rclb
lea
lds
dec
cli
maxps
mov
leave
imul
mov
and
cmpsl
push
test
jmp
lods
push
cmp
cmpsl
sbb
sti
out
in
sub
enter
cmp
cmp
cmp
xor
loope
adc
push
or
inc
jne
sbb
dec
push
daa
sub
out
adc
into
push
cmp
fwait
mov
jg
mov
cmp
jmp
cmp
aad
ja
jecxz
mov
cs
in
fwait
fwait
pop
dec
xchg
cmp
aad
mov
push
push
in
xor
out
lret
ss
pop
js
in
cmp
push
js
sahf
test
lcall
push
mov
push
mov
push
inc
clc
enter
xchg
xchg
mov
sub
inc
mov
mov
dec
test
lcall
lcall
pop
mov
xor
mov
ljmp
cmp
inc
push
lea
push
sub
cmpsb
ljmp
sbb
stc
jb
fiaddl
jl
sub
mov
fnsetpm(287
dec
cwtl
pop
icebp
fstps
cmp
sub
sub
mov
mov
pop
jns
adc
or
ds
fld
adc
fsubrl
xor
and
js
lret
sub
idivb
push
ljmp
repnz
xchg
test
add
ror
repz
or
mov
mov
xchg
test
shrb
sahf
push
das
push
lcall
push
mov
xor
nop
inc
lret
and
cmp
push
cmp
imul
repnz
jg
push
xchg
mov
dec
inc
hlt
mov
shlb
repz
or
mov
cmpsb
popf
or
xchg
mov
push
int3
bound
bound
mov
fcoml
das
sbb
lahf
xchg
mov
pop
xor
int
out
cli
inc
ficompl
sbb
test
dec
lahf
loop
xor
inc
jl
inc
cmp
and
insb
hlt
jg
fs
adc
add
cmp
add
stos
ss
fldenv
add
inc
inc
mov
cmp
push
jecxz
push
mov
arpl
fwait
mov
sbb
mov
add
and
inc
jae
cmpsl
out
mov
inc
pop
sbb
fs
mov
test
lret
adc
inc
leave
aas
xor
push
push
out
inc
lahf
dec
les
out
inc
or
xor
stc
imul
lds
or
jl
dec
pop
std
icebp
dec
mov
dec
pop
inc
test
inc
outsl
mov
cmp
pop
adc
pop
aam
mov
add
sbb
lret
xorl
dec
or
jb
roll
fmul
push
inc
xchg
daa
in
sub
push
sub
outsb
sub
mov
or
sti
inc
cmp
mov
ds
mov
jae
movsl
xchg
mov
jg
gs
les
inc
pop
imul
sbb
or
nop
stc
iret
cmp
es
mov
mov
sbb
lea
xlat
xchg
sbb
call
test
ficoml
roll
mov
jecxz
and
add
outsb
xchg
pushf
sub
nop
addr16
nop
add
cli
xchg
lea
loopne
out
sti
sub
scas
xchg
inc
jne
enter
xor
test
cmp
xchg
jl
pop
jge
add
and
cltd
or
sbb
in
adc
pop
cmp
push
fcmovne
and
or
and
xor
cwtl
insb
faddl
xchg
jg
imul
jno
xor
pop
add
cltd
cmpsb
inc
xor
or
cmp
test
mov
mov
imul
cmp
jg
lock
test
sub
lret
jmp
dec
fstpt
out
ret
push
rorb
scas
shrb
cmp
stc
clc
sub
inc
mov
sbb
loopne
cld
pop
in
std
add
mov
push
mov
dec
xor
rcll
test
cmpsl
adc
aas
sbbb
into
or
xchg
cwtl
push
shll
jns
lods
mov
mov
ds
in
sub
ja
out
mov
pusha
shll
repz
iret
sbb
lcall
xchg
push
cmp
mov
lock
test
addr16
aam
pop
xchg
lret
daa
sbb
outsb
push
jecxz
jns
adc
je
pop
iret
test
cmc
jo
xchg
scas
and
shlb
fidivs
icebp
ffreep
jbe
mov
insb
adc
in
dec
mov
lcall
push
dec
andb
rolb
rcl
ja
mov
add
pop
lods
jne
sti
das
push
push
neg
jns
and
clc
arpl
mov
push
inc
xor
cmp
jno
lcall
mov
sub
in
cltd
pop
add
mov
mov
and
or
xchg
enter
test
add
xor
pushw
test
and
stc
lcall
mov
mov
adc
pushw
lret
inc
xor
imul
pop
and
push
pop
outsl
and
jae
xor
cltd
adc
out
sahf
jecxz
mov
mov
adc
adc
inc
out
loope
jae
shlb
mov
jb
sbb
int3
daa
cltd
xor
inc
push
lods
movsl
cld
jns
xchg
xchg
push
inc
or
adc
insl
push
xchg
loop
stos
lock
repnz
cmp
mov
push
xchg
push
fsts
movsl
cmc
xor
mov
cmp
push
lret
add
lea
or
les
jge
movsl
cltd
mov
add
stos
loopne
adc
and
dec
sahf
sbb
cmpl
sub
dec
add
dec
cwtl
sti
shl
icebp
mov
ret
or
aaa
pop
test
ficoml
push
shrb
mov
int3
lret
mov
pop
shll
mov
or
clc
and
mov
lcall
and
loopne
cmpb
stos
mov
sbb
ret
fnstcw
fisttps
mov
push
xor
mov
sbb
xor
inc
gs
cmpsl
adc
cmp
loopne
fimull
jecxz
js
push
lahf
negl
or
mov
mulb
stos
push
cmp
fists
add
sub
into
out
cwtl
pop
scas
xor
cli
xor
outsb
or
mov
out
jo
aas
sbb
sbb
scas
lods
pop
pop
frstor
sbb
sbb
cli
push
aam
jnp
push
enter
jae
adc
rdpmc
stos
add
ret
inc
mov
js
cli
xchg
pop
repz
sarl
leave
and
lds
cmp
dec
jnp
ret
sbb
bound
sbbl
fwait
cmp
in
jecxz
mov
js
ds
push
insb
adc
add
aam
sub
cmp
pop
jns
andb
aaa
and
pop
mov
mov
adc
push
xor
fsubl
enter
movsl
ret
rcrb
pop
xchg
mov
lea
sti
and
cmc
sahf
jmp
xchg
lds
iret
scas
pop
pop
test
iret
dec
mov
outsl
mov
add
mov
push
inc
pop
xchg
in
test
icebp
ds
lcall
shrl
fisttpll
popf
mov
jb
out
loopne
xchg
shrl
or
int
or
scas
and
insb
sub
mov
mov
pop
or
gs
push
fs
sub
dec
fs
cmp
cs
add
push
test
out
push
push
inc
sbb
add
or
adc
cmp
jns
inc
cmpsl
movsl
iret
js
bnd
ja
sub
stc
and
aad
jmp
movsl
dec
aaa
push
sub
inc
push
aaa
jo
push
and
and
enter
or
xchg
pop
jno
xchg
jge
mov
dec
in
sarl
cmp
xor
out
popf
cmp
jle
lcall
xor
popf
cmp
ljmp
imul
imul
push
mov
imul
pop
push
scas
xchg
mov
xchg
mov
daa
lahf
jecxz
xor
call
imul
mov
xor
sti
pop
shrl
or
test
js
insb
in
bound
cli
fwait
pop
mov
sub
push
pop
xchg
js
jge
outsb
pop
mull
dec
scas
mov
xor
mov
outsb
insb
pop
dec
movsl
mov
xor
adc
xor
dec
dec
mov
xchg
and
ret
add
mov
sub
pop
icebp
mov
jo
rcll
mov
add
js
and
dec
out
cs
shrb
fadds
cs
lcall
bound
fsubs
mov
out
mov
push
aam
sub
xchg
or
push
xor
movsl
push
icebp
mov
xchg
punpckldq
sbb
fistpl
pop
jmp
jmp
xchg
mov
push
scas
cli
roll
adc
fnsave
push
inc
shlb
insb
add
daa
xor
js
fcmovbe
pop
sbb
outsl
xrelease
decl
jecxz
push
cmp
inc
sbb
es
and
hlt
adc
cmp
cmc
pop
push
adc
mov
pop
add
or
mov
enter
test
cmpsl
sub
ret
xor
sahf
fldt
repnz
push
ljmp
inc
or
addr16
sub
scas
pop
inc
push
fdivrs
adc
push
inc
sbbb
jbe
jmp
pushf
cltd
fs
testl
xor
jbe
fdivr
mov
mov
sub
mov
in
mov
mov
popa
or
sbb
notb
stos
imul
ret
push
sub
jns
sti
mov
dec
addr16
fwait
mov
pop
arpl
inc
in
pop
enter
sbb
rclb
aaa
psubw
inc
adc
or
xlat
out
aaa
hlt
dec
push
out
shl
cmp
iret
or
shll
mov
ljmp
fwait
sbb
push
xchg
int3
or
shrb
mov
shll
jbe
cs
jecxz
add
into
inc
sarb
nop
dec
jbe
xchg
push
mov
mov
jnp
xchg
add
imul
dec
aad
jb
in
scas
adc
insl
cli
es
push
mov
lcall
mov
fs
lds
lcall
fmuls
mov
test
cmc
xchg
arpl
mov
aam
push
fistpl
lock
orl
inc
in
int3
sbb
pop
stos
shl
or
adc
or
jbe
mov
std
out
xchg
or
in
fdivrl
add
cltd
push
stos
rorl
stc
lcall
in
sub
mov
pop
xor
bound
cltd
dec
xchg
xor
xor
ds
repnz
testb
shll
jns
mov
pop
sub
xor
jne
push
and
repnz
or
jnp
clc
cmp
imul
imul
loope
pop
sahf
addr16
lcall
mov
mov
cmp
push
sarb
or
sub
add
nop
out
or
jg
dec
push
sahf
jecxz
shll
cwtl
sub
mov
adc
sub
scas
in
adcl
cmpl
pop
inc
andl
jne
jnp
inc
inc
or
nop
jnp
test
pushf
aas
cmp
xlat
sbb
and
jns
dec
insb
pushf
aad
mov
jnp
popa
jo
xor
dec
addl
dec
or
push
repz
jbe
jae
sub
sub
cmp
ja
adc
xor
mov
out
leave
stos
cmpsb
fcmovb
sub
int3
popw
jae
and
inc
imul
and
mov
mov
mov
in
aam
pop
shrl
loopne
arpl
daa
clc
xor
out
andb
fdecstp
lret
es
push
notl
add
mov
shlb
lcall
pop
cmpsl
dec
es
scas
ja
sub
pop
nop
or
shl
xor
inc
insb
sub
jnp
xor
test
add
push
stos
push
xlat
sbb
aam
data16
cmp
xor
ret
mov
sbb
pop
xchg
pushf
vorps
fsubrl
cmovg
ds
mov
fcoml
or
or
inc
xor
jg
fistpl
sbb
in
sub
and
sub
orl
pop
inc
out
add
orb
repnz
lret
mov
js
fs
orb
je
add
je
dec
push
and
adc
repz
jae
adc
mov
out
adc
adc
fwait
lret
or
push
and
aas
scas
out
les
fs
testb
es
scas
mov
push
sub
clc
xor
nop
pusha
adc
push
ret
dec
adc
ret
jecxz
shrb
out
or
mov
in
mov
sti
pop
into
mov
sarb
cmp
imul
stos
iret
mov
lods
push
cmpb
std
or
xchg
addl
int
push
cmpsl
jle
subps
mov
ljmp
rcll
mov
add
adc
aas
jbe
mov
xchg
lea
pop
xor
dec
dec
pusha
icebp
out
shll
lahf
out
fisubrl
fidivs
scas
pop
xchg
xchg
xor
cmpsb
ret
fbstp
nop
dec
lret
inc
push
ss
mov
xchg
insb
movsl
out
outsb
inc
sub
dec
xchg
sbb
popf
adc
divl
sahf
daa
push
xchg
out
test
add
inc
imul
jo
dec
fisubl
xorb
cs
and
lods
mov
jno
xchg
dec
out
lcall
sbb
sub
mov
mov
mov
in
sub
or
dec
mov
inc
mov
aas
mov
bound
add
mov
add
and
mov
shlb
ficoms
adc
jne
aas
push
imul
mov
pop
cs
jmp
mov
ret
sbb
inc
and
int3
gs
jnp
cltd
inc
testb
leave
push
mov
jle
mov
mov
jns
stos
push
mov
cmpsb
add
cld
jae
in
daa
ja
cld
push
mov
and
or
sti
imul
fistpll
xor
pop
cltd
xchg
fcmovb
iret
lods
mov
jl
out
lret
enter
push
mov
xchg
icebp
inc
mov
fildll
test
pop
cltd
test
inc
in
imulb
dec
lds
pop
jmp
into
pushf
xchg
fldl
enter
xor
nop
xchg
jg
insb
jnp
aaa
in
les
dec
dec
push
and
jb
xchg
fdivl
adc
add
mov
ret
jne
push
adc
mov
popa
push
loop
das
aam
out
cmp
adc
imul
cltd
cmpsb
dec
push
test
insl
call
call
insl
mov
mov
shr
fidivrl
cwtl
arpl
stc
dec
scas
xchg
pop
arpl
jns
mov
shll
jecxz
dec
mov
mov
mov
lcall
clc
mov
cmp
xchg
inc
shlb
inc
or
arpl
xchg
scas
and
mov
mov
fld
outsb
scas
sub
mov
xchg
cmp
sbb
and
xchg
jle
loop
dec
sbb
lret
clc
ret
adc
jg
or
xchg
mov
add
jnp
push
push
xchg
adc
fnop
fists
cmp
hlt
fwait
fs
adc
popf
xor
add
gs
mov
dec
hlt
xchg
add
std
ja
ja
xor
and
cmp
andb
neg
mov
add
jb
jmp
notl
add
aas
jae
pop
cmp
loope
xchg
sbb
xor
pop
mov
addl
addr16
shll
push
jns
mov
icebp
jbe
add
int
xchg
jae
pop
popa
lret
stc
arpl
mov
jge
lock
bnd
movb
dec
enter
dec
xcrypt-cbc
cmpsl
roll
and
ljmp
enter
arpl
xchg
popf
into
pop
xchg
jo
mov
insb
xchg
dec
ret
cmpb
clc
or
lahf
mov
test
sub
jecxz
cmc
pushf
imul
fidivrl
xchg
xchg
lea
cmp
les
adc
lock
ljmp
insl
jle
inc
stc
shll
int
pushf
in
xor
imul
push
das
icebp
push
jns
jmp
fisttpl
dec
test
das
push
jo
and
fstpt
add
jle
dec
mov
outsl
lock
sub
lods
dec
push
bound
fists
arpl
push
and
inc
sysexit
adc
mov
push
lds
loop
and
fiadds
or
je
xor
clc
data16
insb
test
and
inc
push
push
arpl
enter
imul
jl
jne
pop
data16
and
jno
add
cmpsl
bound
cmc
xchg
cmp
insl
dec
js
add
dec
and
fwait
out
sahf
push
jae
pop
in
cmc
pop
sahf
test
add
sbb
daa
sbb
sti
adc
xor
mov
subl
lods
add
ja
fidivrl
xchg
test
aam
and
add
roll
inc
mov
into
movsb
fsub
xchg
mov
xchg
lret
mov
into
xlat
lock
and
addl
pop
insb
xor
sbb
mov
mov
outsb
std
ss
xchg
mov
into
mov
add
fiaddl
jp
jmp
mov
outsb
int
cwtl
push
sahf
sar
dec
add
pop
sbb
xor
lods
arpl
popf
jb
adc
mov
pop
in
cmc
cmpsb
dec
and
fsubrl
inc
movsb
sbb
jo
add
and
xor
jp
addb
and
sub
out
clc
aas
adc
outsb
fidivrl
pop
inc
inc
setge
das
movsb
mov
sub
js
mov
cmc
push
aaa
sbb
mov
pusha
test
mov
mov
mov
fcompl
addr16
adc
xchg
add
aaa
popa
aad
push
dec
mov
loope
enter
add
xchg
and
pop
lea
aaa
addr16
clc
pop
outsb
lock
sbb
lock
loope
dec
pop
fisubrl
and
bound
ja
mov
scas
xchg
and
jb
or
cmp
xor
push
inc
xchg
mov
adc
inc
mov
testl
push
and
adc
or
mov
pop
nop
popf
sbb
mov
ret
adc
sbb
cmp
push
leave
mull
push
or
mov
loopne
push
adc
cmp
ds
xor
add
lea
sub
pushf
dec
negl
lea
push
dec
add
std
add
imull
push
pop
in
lea
mov
adc
mov
in
fwait
nop
enter
jno
data16
iret
ja
test
pop
xlat
adc
mov
dec
ret
pop
add
cmp
cmp
sarb
xor
orb
cmp
inc
pop
outsl
xchg
mov
sub
outsb
jae
jne
inc
dec
in
add
decl
arpl
std
sbb
lods
lcall
cli
push
push
jbe
in
rcr
outsb
out
enter
adc
pop
cmc
xor
pop
repnz
lret
or
push
loope
push
call
mov
movsl
rol
mov
push
popf
and
lods
popa
mov
push
in
iret
push
jmp
or
jp
stos
sbb
mov
inc
je
push
pop
push
xor
arpl
ja
push
dec
in
fs
add
mov
mov
dec
cltd
mov
in
push
sbb
xor
rcrl
iret
jecxz
adc
sub
lret
mov
push
cmp
mov
push
int3
and
pop
divb
sti
adc
dec
iret
jmp
cmc
sub
push
mov
sbb
js
push
mov
xchg
out
test
inc
es
jmp
adc
dec
in
cmpsl
popf
subl
rclb
sbb
lret
call
sahf
adc
movsb
jno
clc
xchg
mov
sub
ror
xchg
or
cmovnp
jle
test
adc
fwait
insb
cs
xlat
ss
aam
loope
mov
push
jne
or
jae
data16
push
inc
int
push
jmp
and
test
popa
xchg
js
idivb
xlat
mov
add
ret
rcrl
xchg
rorb
out
sub
ficompl
pop
ret
lds
cmp
cwtl
lods
mov
and
xor
out
enter
fcmovnb
shlb
mov
scas
icebp
enter
in
enter
fisubl
xorl
mov
sti
addb
lret
add
das
mov
cmp
fcmovbe
leave
push
inc
fldcw
pop
test
pop
cmp
and
adc
dec
sub
xor
and
pop
mov
mov
push
push
pop
repz
fimuls
test
mov
repz
lret
cmp
es
std
lock
ljmp
jp,pt
scas
and
pop
inc
cmpsl
in
pop
in
or
dec
shrb
test
in
dec
xchg
in
jle
xchg
and
dec
lds
insl
push
add
push
cmp
ljmp
mov
and
adc
push
movsb
pop
push
dec
xor
hlt
sub
xchg
dec
adc
lods
dec
cwtl
pop
mov
sbb
push
xor
xchg
mov
pusha
imul
vsqrtpd
in
ja
mov
mov
lods
repnz
jmp
sub
cmpsb
dec
push
cwtl
xor
and
and
out
push
movsl
push
movsl
or
cmc
ja
push
fistpl
mov
fdivrl
jns
dec
xor
shll
icebp
inc
ss
scas
xchg
mov
repnz
adcb
adc
sub
add
jl
lods
inc
sub
lahf
rolb
sarb
pop
dec
lds
sbb
ret
jae
sub
out
jnp
stc
loop
pop
hlt
mov
adc
jg
inc
stos
mov
xor
mov
lods
cmp
data16
jnp
in
and
imul
push
and
sbb
pop
jne
xchg
push
loop
loopne
dec
lcall
test
sbb
cwtl
pop
in
cli
ror
jle
aad
scas
aad
shll
outsl
push
cltd
or
repz
inc
fwait
lahf
subl
and
stc
cmp
das
outsl
sub
adc
mov
dec
aaa
repz
fs
ret
bound
sbb
pop
pop
insl
cmc
inc
jecxz
pop
xchg
and
scas
cmp
sarb
icebp
mov
ret
push
sbb
out
insl
popf
mov
lret
xchg
int3
or
sti
call
mov
cld
adc
inc
sbb
mov
mov
stc
and
loope
mov
fsubrs
sub
add
stos
lcall
adcl
jl
cmc
bnd
fisubrl
add
pop
lea
std
repz
mov
pop
pop
les
pop
sahf
jbe
jl,pt
lret
lods
add
mov
mulb
rcll
lret
out
lods
test
push
inc
inc
jbe
outsb
sahf
jp,pt
mov
mov
pop
push
cwtl
pop
repz
out
scas
fidivrs
sahf
mov
add
cmp
push
mov
inc
push
adc
pop
cmp
imul
test
mov
out
lds
mov
adc
cmp
push
mov
fldenv
int3
sub
lahf
andb
inc
or
ret
mov
shl
lea
push
js
sub
adc
cmc
pop
popf
jo
insl
out
lea
movsl
fmuls
popf
popf
push
lcall
movsb
call
jge
inc
mov
xchg
sbb
and
add
in
lods
orl
insb
jmp
fidivrl
lret
adc
xchg
inc
roll
test
mov
popfw
xchg
push
add
icebp
sbb
mov
lahf
fmul
ss
add
outsl
daa
sub
dec
inc
lret
mov
xchg
test
insb
xor
adc
sbb
rorb
shll
rcl
or
jbe
sti
rolb
push
pop
cmpsb
stc
sub
shr
loope
jne
jnp
cmp
xor
fcmovbe
subb
xchg
xchg
cmc
pusha
cmpsb
repnz
and
mov
mov
adc
mov
fimuls
dec
xchg
pop
cs
fidivrs
nop
push
outsb
push
jmp
adc
into
mov
dec
les
loope
inc
andb
pop
movsl
jle
pop
loope
pusha
mov
mov
fldenv
shl
in
sub
or
scas
dec
imull
es
shrl
test
sbb
mov
es
shlb
mov
cmp
sahf
repz
jmp
push
and
mov
sub
xchg
inc
mov
mov
les
xor
xchg
sbb
lret
fs
js
js
inc
jo
les
mov
arpl
aaa
faddp
adc
push
icebp
dec
cs
pop
ficompl
jo
cmc
dec
adc
jle
inc
lahf
adc
lret
pop
sarb
jnp
dec
sub
inc
push
faddl
aas
push
pop
dec
gs
xchg
jnp
push
arpl
int3
lcall
out
jo
cwtl
xchg
roll
lret
adc
mov
iret
pop
bound
cmp
cmp
mov
add
jnp
daa
or
pop
addb
lods
stc
jo
xchg
cmpsl
dec
push
das
xor
jp
push
jecxz
loopne
stos
xor
mov
sub
insb
enter
es
xor
andl
push
inc
mov
shl
js
bnd
pop
shlb
test
das
push
ret
xchg
repnz
mov
xor
fildll
cltd
mov
push
rcrb
sahf
pop
jno
inc
pop
frstor
push
in
shll
jo
jae
imul
fwait
and
push
jecxz
inc
ja
inc
and
inc
fwait
adc
cltd
xor
jg
test
push
and
in
pushf
add
sbbb
in
dec
lretw
cltd
jge
stos
movsl
dec
data16
pop
push
cmc
das
test
cld
cld
call
aad
mov
lods
jb
loope
jbe
or
cld
out
xor
notb
and
dec
das
mov
bound
fs
shr
outsb
add
arpl
cmp
int3
or
mov
inc
aad
hlt
scas
imul
inc
stc
dec
dec
in
adc
aam
lods
cld
hlt
adc
push
mov
inc
cwtl
mov
inc
mov
mov
and
sbb
mov
dec
mov
ret
outsl
mov
dec
mov
adc
xor
rorb
inc
xor
aaa
push
jle
xor
xchg
xchg
jo
pop
jmp
popf
sbb
dec
jmp
adc
mov
pop
test
iret
fsubrs
xor
and
ficoms
pop
pop
std
mov
imul
jno
sub
sbb
mov
adc
sarl
sub
in
fsubrl
popf
das
mov
jge
aas
cmc
data16
inc
addr16
jmp
inc
loopne
sahf
pop
cmp
mov
mov
loope
pushf
inc
push
and
sbb
mov
mov
fistpl
mov
xor
jns
add
hlt
stos
xchg
lret
popf
dec
das
and
dec
leave
mov
stc
imul
push
xor
pop
push
outsb
dec
dec
cmp
gs
add
jo
sub
push
lds
mov
test
inc
xchg
mov
scas
mov
or
jbe
sub
mov
call
arpl
jns
loope
stos
xor
add
inc
and
pop
or
inc
sub
push
clc
lds
xchg
cs
leave
loopne
jmp
out
loop
adc
push
and
xchg
jb
jno
stos
int3
push
push
repnz
dec
ss
dec
push
mov
out
loope
or
shrb
sti
and
jae
test
jo
lock
mov
adc
shrl
mov
adc
dec
inc
pushf
lahf
insb
dec
push
jnp
mov
inc
add
and
lahf
stos
les
mov
out
mov
into
sub
pop
cmpsl
lret
insb
loope
push
notl
cmc
pop
incb
mov
je
lret
bound
int
pop
xor
mov
adc
hlt
sbb
sub
ja
dec
imul
cmp
pop
cmp
mulb
mov
out
lret
cmp
mov
xchg
fildll
xchg
popf
cld
loop
lahf
and
hlt
push
imul
add
lea
pop
xchg
push
sub
adc
pop
ret
test
repz
sbb
mov
jno
push
clc
pop
enter
fisttpll
push
pop
nop
inc
sbb
ret
icebp
out
jle
bound
sbb
gs
xchg
lock
mov
mov
ret
jle
scas
and
pop
in
loope
push
inc
pusha
int
xlat
mov
inc
mov
leave
fs
and
sbb
cwtl
cmp
jne
cli
ret
out
mov
icebp
inc
pop
lods
pushf
fwait
push
sbbb
push
sbb
jl
cmp
ljmp
fidivl
sub
mov
das
cs
out
pop
mov
fildll
or
mov
or
cmp
negb
jo
xor
jmp
movsb
sub
inc
insb
mov
sub
call
scas
push
mov
sti
aam
stos
cmp
xchg
test
xorb
dec
clc
cmp
mov
cmpsb
ret
daa
arpl
mov
jl
add
scas
xchg
xor
out
pop
jo
in
enter
inc
fucom
fbstp
jp
mov
iret
mov
dec
daa
cmpsl
sbb
or
in
pop
outsl
add
into
pop
les
movsb
jnp
lahf
xchg
daa
lods
and
xchg
and
add
xor
imul
hlt
fistps
push
pushf
xchg
test
jmp
xor
inc
aam
add
insl
out
jecxz
jns
mov
outsl
pop
aas
addl
scas
sbb
cmp
jge
xchg
lcall
cmp
xor
dec
ds
lahf
test
out
pop
aam
outsl
out
mov
cmp
test
ror
mov
inc
in
mov
pusha
cmpsb
lds
in
add
mov
repz
shrb
adc
cwtl
hlt
push
mov
daa
xchg
fildll
pop
lahf
cmp
pushf
lret
pusha
fcoml
mov
add
icebp
xor
jl
adcb
lcall
addr16
ficoms
faddl
mov
in
mov
mov
xor
stos
mov
mov
add
mov
and
push
frstor
cs
sbb
pop
leave
or
leave
and
in
call
jge
mov
jp
pop
jno
xor
ficompl
mov
mov
mov
bnd
mov
aaa
xlat
and
stos
or
mov
sub
push
push
js
pop
add
test
cld
dec
fs
cmp
and
insb
mov
adc
popf
jge
push
int3
push
ss
and
shrb
cmp
adc
jo
gs
out
fildll
insl
stc
stos
scas
xchg
dec
inc
or
lahf
je
shll
sbb
imulb
jb
push
sub
mov
ret
shl
jge
sbb
cmpsl
mov
enter
mov
bound
mov
xchg
loope
mov
xchg
jae
mov
or
stc
ljmp
jle
mov
sub
popa
mov
or
int
fcmovnb
jnp
cwtl
xchg
push
clc
fldl
jbe
pop
ret
fiaddl
setp
mov
mov
add
or
ss
notb
cmp
mov
cltd
fisttpll
mov
jae
jo
loop
cli
sub
jb
clc
xor
pop
pop
idivl
rcl
xor
je
jno
adc
sbb
adc
loope
cmp
movsb
xor
dec
or
cmp
cmc
rorl
and
dec
pop
and
dec
ret
add
inc
pop
xlat
pusha
out
dec
lock
lods
iret
push
xor
inc
cmpsb
sub
mov
repz
out
xor
push
int3
jnp
insb
xchg
insb
add
dec
cmp
and
xchg
xor
lret
jle
mov
add
mov
into
push
and
stc
shlb
pop
fisubrl
hlt
jb
add
xchg
fisttpll
pop
mov
out
pop
into
ljmp
int
sbb
mov
pop
pop
call
mov
xor
push
scas
stos
dec
dec
int3
aam
lods
clc
int3
xchg
fsubrs
pop
leave
rcrb
nop
lods
inc
xchg
mov
inc
ljmp
sbb
repz
imull
xchg
je
push
call
jae
and
cli
popa
rol
push
test
fucompp
in
xor
cmp
cwtl
push
dec
cs
adc
fstps
push
daa
sbb
xchg
jmp
lods
sahf
jo
je
cmp
scas
jns
lret
and
das
sbb
adcl
test
out
xchg
or
lock
add
cmp
push
xor
mov
ficomps
dec
adc
es
cmp
sbbl
mov
lods
cmp
push
xchg
jb
jnp
pop
jae
clc
adc
aas
dec
test
adc
mov
mov
icebp
fisubs
leave
dec
dec
loop
cmp
or
push
mov
lahf
retw
cmp
dec
xor
out
in
xorl
mov
mov
sub
dec
xchg
enter
add
dec
sbb
repnz
inc
inc
sti
or
xchg
mov
int
mov
mov
xor
add
adc
sbb
daa
rclb
imul
ljmp
add
cs
mov
mov
jbe
and
jns
sub
pop
mov
lret
and
js
mov
popfw
cwtl
xor
std
and
clc
pop
pusha
rcrl
shlb
clc
inc
push
shlb
sti
int3
mov
icebp
jbe
pop
std
sahf
sbbb
add
repz
wrmsr
jmp
jne
int3
icebp
pop
pushl
xor
enter
mov
mov
aaa
mov
mov
cs
cmpsb
js
arpl
add
jg
push
cli
cwtl
fldcw
inc
xor
mov
jle
icebp
jp
imull
incb
insl
adc
loop
call
xor
lret
xchg
iret
pop
fadds
jmp
mov
push
fsubrl
pushw
cli
jne
jl
dec
imul
into
imulb
jmp
filds
bswap
ret
dec
jno
mov
xchg
aas
ja
lock
sub
mov
andl
or
hlt
xchg
mov
es
lahf
sarb
fisubrl
fidivl
repnz
cmp
ljmp
notb
dec
mov
or
ja
fptan
mov
sbb
mov
in
shll
push
mov
cmp
inc
in
nop
pop
outsb
mov
pop
rolb
mov
jbe
cltd
in
jmp
sarb
clc
data16
stos
std
test
pop
xchg
xor
sub
or
and
bound
sti
push
adc
jge
mov
push
inc
fbld
and
pop
inc
jo
out
pop
negl
insb
faddl
pop
stos
movsb
outsb
aam
cmp
or
pop
jmp
mov
ss
int3
cmp
jg
inc
int3
fnstsw
add
inc
jae
push
out
out
arpl
pop
mov
cwtl
imul
jmp
daa
cmp
ret
scas
pop
sub
pop
mov
repnz
fsubp
les
ret
adc
cmc
inc
jb
lods
xor
inc
sbb
mov
pop
outsl
cmp
pusha
sub
es
mov
sub
lods
dec
in
nop
push
out
adc
cmpb
cmpsl
or
mov
push
mov
stos
mov
push
mov
pop
push
xor
mov
xchg
imul
push
and
xchg
pop
lock
dec
pop
jnp
ret
stc
jp
pop
scas
add
mov
and
pop
xor
fldcw
adc
hlt
rorb
ljmp
dec
lods
xor
loope
sbb
and
je
cwtl
dec
or
lahf
jecxz
pop
pop
outsl
aam
xor
xchg
xor
addr16
lock
cmp
sbb
cmc
jecxz
bound
jbe
fistpll
push
stc
lret
pop
mov
mov
xchg
fnstenv
gs
adc
enter
mov
fsubr
cwtl
jne
sbb
cmpsl
fstpl
jmp
lods
sbb
or
popf
dec
or
imull
jmp
adc
push
outsb
cmp
inc
cmc
add
out
fistpll
icebp
dec
test
inc
or
test
inc
push
fcomip
cmp
ja
jno,pt
cld
add
cmpsb
mov
imul
inc
mov
push
loopne
push
in
data16
filds
pop
decl
sbb
push
cmp
jb
mov
push
mov
outsb
mov
pushf
scas
xchg
dec
xor
jmp
lret
mov
and
gs
sub
sub
int3
pop
adc
jmp
mov
nop
push
xchg
xchg
sub
xchg
mov
les
dec
sub
ljmp
inc
xchg
jp
popf
jnp
lret
jno
adc
sub
std
or
jmp
jnp
xor
shl
mov
inc
dec
insl
mov
leave
adc
xorb
ret
ret
mov
mov
jle
cmp
adc
jae
out
ret
mov
icebp
dec
or
sbb
out
mov
xchg
je
aas
mov
and
and
inc
loope
jg
adc
ret
mov
cli
push
xor
adc
xchg
loope
sti
outsb
pop
inc
push
and
fimull
shll
lret
fisttpl
pop
fdiv
jns
xor
int3
mov
int3
jmp
addl
jnp
xchg
push
jmp
mov
outsb
push
and
sti
int3
in
inc
add
mov
ficoml
mov
or
or
addr16
fsubp
adc
inc
mov
push
mov
mov
fdivr
mov
push
lds
sbb
subl
cld
xchg
xor
jg
sub
frstor
xchg
push
daa
aad
and
int
adc
pop
in
mov
cmp
mov
jp
stos
push
in
int3
xchg
push
call
mov
xor
dec
add
sub
ljmp
or
repnz
mov
test
loopne
popa
push
xor
mov
loope
lcall
leave
jbe
cmp
cltd
mov
jnp
pop
pop
int3
in
rclb
ret
mov
xchg
and
xchg
xchg
ret
mov
pop
adc
aas
sbb
lds
fcmovu
pop
xchg
loopne
enter
fs
test
andb
xor
mov
das
lock
add
or
leave
or
mov
jns
xchg
bound
lds
mov
push
hlt
inc
insb
movsl
push
shll
daa
jne
push
roll
xchg
cwtl
mov
lds
outsb
ljmp
movsl
outsb
ljmp
ficomps
mov
aad
mov
jge
cli
cmpsl
insl
sub
cwtl
das
in
pusha
dec
lods
mov
push
ret
repnz
mov
addr16
inc
xchg
adc
sahf
add
xor
adc
xchg
dec
test
fwait
sub
inc
not
nop
sbb
fisubl
in
xchg
stos
push
hlt
enter
cmpsb
adc
dec
test
aad
ret
std
jp
aas
in
imulb
fcomps
jo
cwtl
stos
push
test
insl
in
addr16
jnp
jg
rcrl
call
dec
aaa
dec
fwait
pop
pop
xor
cltd
scas
mov
pop
bound
ret
test
mov
add
cmpsl
inc
lret
mov
lods
imul
lock
sub
mov
divl
jg
ds
shlb
adcb
jge
cmp
jns
and
out
mov
mov
dec
jnp
andl
fnstenv
inc
imul
jmp
cmc
pinsrw
push
sub
cmc
mov
pop
test
or
dec
leave
mov
lods
popa
jns
int
and
dec
fsubl
pop
mov
dec
add
divb
add
mov
cmp
pop
test
les
cmpsl
push
clc
mov
cmp
jnp
call
fcmovb
orb
scas
add
ss
mov
mov
fcmovb
jg
std
push
cmp
jbe
rorl
stc
lods
sahf
rclb
jecxz
jl
or
sub
mov
jp
xchg
sub
nop
mov
pop
mov
movsl
xchg
xor
repnz
test
push
sbb
sbb
out
lcall
subl
rol
push
xlat
xchg
inc
dec
shll
fldcw
into
hlt
mov
cmpb
cmc
lds
mov
push
out
jno
loop
add
xchg
push
cmpsb
cltd
leave
mov
in
dec
insb
aaa
dec
or
lcall
sub
xchg
ljmp
divb
push
ret
enter
rcrb
add
stos
idivb
clc
adc
xor
sub
add
cmp
cmp
mov
daa
lahf
loopne
or
bound
repz
hlt
imul
dec
cmpsb
fsubrs
lds
xchg
insb
pop
xor
add
pop
repz
andb
popf
xchg
jae
jno
cs
inc
mov
loope
jecxz
sbb
sbb
outsb
ljmp
and
mov
mov
cltd
or
xchg
cmovae
test
xlat
xchg
xor
into
pop
and
scas
nop
mov
repnz
adc
mov
call
jge
pop
adc
ja
mov
cs
inc
test
inc
ljmp
enter
outsb
into
int3
inc
push
lahf
into
dec
fists
rcrb
out
fsubs
pop
xchg
fwait
stc
sbbl
mov
cltd
xor
into
mov
repz
dec
aam
xor
aam
add
dec
pop
outsl
in
out
popa
sub
pop
lods
loop
cmpsb
jmp
adc
dec
inc
iret
lea
mov
push
cmp
xchg
cmp
out
or
jno
xchg
testb
inc
ret
ret
pop
mov
movsb
jno
pop
push
mov
dec
xchg
stos
dec
into
mov
je
arpl
xchg
cmp
jp
jge
fs
or
mov
je
mov
jp
dec
push
jns
mov
outsl
in
jne
jl
out
movsb
push
outsl
call
mov
mov
pop
dec
mov
push
es
or
jmp
jle
sub
push
stc
repnz
cmp
adc
and
dec
inc
hlt
cwtl
leave
scas
stos
pushf
test
xchg
jo
scas
fstpl
dec
frstor
add
aas
shrl
fwait
fwait
hlt
pusha
mov
into
add
rclb
push
in
data16
and
jns
jecxz
pop
out
in
int
adc
int3
push
fnstcw
subb
xchg
push
sbb
cmp
aas
lea
cmpsb
push
cmp
imul
adc
fcoms
cmc
sub
lds
das
dec
inc
mov
mov
pop
dec
stos
push
fst
add
jae
push
testl
xchg
orl
sbb
cli
jo
or
lds
inc
push
data16
xor
inc
xor
inc
nop
pop
xor
inc
sbb
aas
push
lock
mov
inc
cmp
sbb
aas
out
je
push
lods
push
mov
and
inc
mov
jle
out
imul
cli
movsl
push
les
test
int3
stc
movsb
out
mov
fcomip
ljmp
sub
scas
mov
cltd
jne
add
lcall
inc
push
out
mov
rcl
rorb
pop
push
or
lods
sub
and
mov
mov
dec
cmp
push
pop
std
sbb
dec
les
xchg
xchg
fs
pop
mov
cmc
mov
loopne
inc
adc
aad
int
add
sub
std
popf
dec
mov
push
mov
pop
add
cmp
mov
mov
jecxz
push
out
shl
lret
jg
pop
mov
xlat
mov
mov
and
das
adc
lods
mov
shlb
arpl
lods
shl
lea
lcall
push
shrb
mov
inc
mov
sub
xchg
cmp
sbb
sarl
xchg
mov
into
test
test
sahf
in
test
out
mov
in
sbb
cmp
sub
insl
cmp
mov
mov
push
push
shlb
pop
movsb
in
add
aad
in
jno
invd
xchg
popa
mov
movsl
and
mov
cmpb
xor
lret
sub
int
sub
hlt
frstor
stos
jb
xchg
and
jmp
mov
mov
movsl
test
mov
adc
adc
xor
cmp
cs
jl
int
jnp
clc
jns
fidivs
dec
cwtl
femms
xchg
xor
xchg
pop
loope
add
leave
xor
or
xlat
adc
icebp
divl
cmp
mov
add
pop
cmp
shlb
or
jbe
ror
pusha
mov
xor
arpl
mov
adc
mov
test
xchg
cmp
add
scas
mov
adc
ret
lret
or
decl
dec
movsl
inc
sbb
pop
xchg
ret
xchg
or
loopne
sub
sbb
lcall
iret
mov
dec
mov
aad
sbbl
dec
shr
mov
test
pop
xchg
pop
enter
sub
pop
imul
add
jp
cmp
lahf
cmp
cmpsl
push
cmp
lods
lods
leave
mov
sub
or
aam
mov
jmp
es
addr16
push
mov
or
call
xchg
sbb
shl
xlat
add
xor
pop
sub
pop
pop
jge
push
notl
in
push
push
cmp
and
xor
sub
push
fiadds
jne
sbb
or
mov
mov
into
or
stc
cmp
xchg
or
into
aaa
xor
mov
cmp
cs
test
inc
fstps
mov
int3
xor
push
sbb
sbb
push
out
loope
and
push
push
aam
hlt
and
xchg
sar
pop
iret
jnp
outsl
mov
dec
sti
inc
stos
ds
cmp
call
pop
rolb
push
out
and
adc
cltd
mov
and
sub
sbb
sub
sti
pop
jg
test
ret
push
lods
pop
test
mov
sub
cmpb
out
mov
stos
dec
jp
mov
cmp
push
scas
das
jp
popf
lret
rolb
orb
fldl
pop
add
fsubs
inc
mov
mov
xchg
push
jp
pop
xor
hlt
cmp
ljmp
mov
fs
add
xchg
sbb
es
aad
push
ds
adc
mov
mov
or
mov
xor
loop
pop
js
loopne
push
insl
out
xor
lods
pop
js
loop
push
andl
jne
jl
cmp
mov
loop
xchg
ja
fildl
push
adc
test
adcl
roll
sub
dec
push
add
xlat
das
fstpt
jb
sbb
jecxz
into
out
add
mov
xor
addr16
mov
cmc
push
out
lret
jl
cld
dec
mov
mov
jmp
int3
idivb
jmp
sub
cli
sbb
push
dec
scas
pop
pop
add
and
nop
ljmp
sbb
inc
jmp
ror
jle
pushf
sub
daa
data16
and
push
cltd
ret
das
out
js
mov
cmc
test
fs
bound
or
popf
cmpsb
pop
out
movsl
nop
addb
add
dec
mov
push
xor
sub
sub
mov
pop
movsl
pop
jns
lahf
loop
cmp
test
fildl
mov
dec
xlat
xor
aam
add
test
and
push
inc
gs
cwtl
sub
xlat
loop
sbbb
movl
mov
nop
stos
mov
inc
or
mov
pop
andb
jo
bound
int3
shl
push
in
lret
inc
cmc
adc
xor
outsl
aas
jae
add
inc
add
popf
loopne
or
ss
aad
xor
xorl
inc
cmpsl
lods
sarl
mov
jb
xchg
fstpl
subl
stos
dec
inc
pop
call
cmpsl
std
add
mov
push
setns
mov
fadd
stc
lret
js
mov
push
inc
dec
fidivs
pop
inc
jo
add
sub
adc
add
jle
pushf
insl
lahf
adc
movsl
dec
mov
adc
jp
pop
xlat
push
es
fists
in
sahf
xchg
std
into
scas
js
stos
mov
mov
xchg
test
aad
nop
outsl
repz
in
shl
fsubr
inc
push
dec
and
push
lods
je
fcmovnu
or
dec
cltd
daa
call
outsl
adc
stos
loope
and
fimuls
mov
pop
cmpsl
fcom
sub
stos
jecxz
adc
lods
inc
gs
fcompl
aaa
fldenv
ret
addl
or
lock
cmp
popf
jae
fsubs
xlat
stc
push
test
pop
cmp
arpl
imul
outsl
mov
mov
cwtl
xor
pop
or
mov
jae
jbe
cmp
xor
inc
sub
subb
iret
xchg
data16
popa
aaa
ljmp
data16
pushf
pop
adc
pop
lods
pushf
adc
inc
jno
nop
in
pusha
mov
or
cmpsl
imul
test
pop
mov
sub
sub
push
xor
sbb
stc
js
dec
sbb
movsb
mov
hlt
adc
sarl
adc
jb
ficoml
imul
scas
mov
push
popa
mov
clc
out
les
cmc
mov
pop
out
push
data16
daa
xchg
mov
mov
outsl
aaa
lods
mov
add
inc
ljmp
scas
shr
inc
es
stos
int
xchg
iret
sbb
xlat
mov
mov
pop
lods
pop
ror
sub
push
or
addr16
add
and
push
mov
and
push
stc
dec
xchg
pop
mov
push
out
arpl
mov
test
loopne
inc
mov
daa
les
cmp
addr16
mov
imul
push
cli
mov
je
andl
in
dec
call
bound
sbb
sbb
add
jbe
pop
xor
mov
test
sub
imul
ljmp
out
loopne
xor
fwait
xchg
xorb
xor
push
hlt
xor
sbb
movsb
adc
insl
pusha
pop
add
mov
not
adc
stos
mov
ja
ficompl
mov
ds
sub
or
pop
cld
imull
push
outsl
xchg
aad
ret
sub
mov
cmpsb
insb
pop
dec
sarl
cmpsb
movzbl
aad
dec
xor
out
adc
or
pushw
jno
xor
ds
adc
pop
inc
sbb
fistl
repnz
inc
jmp
adc
movsb
rcrb
repnz
es
xor
adc
or
jb
inc
cli
xchg
push
lcall
and
push
xor
mov
push
dec
mov
daa
test
fiadds
jno
jne
cmc
lds
cld
out
cmc
lock
int3
push
arpl
stc
xlat
sahf
roll
pop
ficompl
test
lock
scas
sarb
rcll
mov
imul
cmp
out
add
adc
cmpsl
fs
shll
les
xchg
ret
xor
sub
mov
push
adc
roll
pop
sub
add
in
aad
lcall
test
fimull
aam
inc
in
scas
jp
das
xor
jle
cmp
xchg
sti
pop
adc
sbb
cmc
mov
mov
adc
bound
inc
in
xchg
rol
dec
jl
lea
add
pop
icebp
mov
pushf
cmp
loope
and
imul
movsb
mov
jns
or
ret
and
int
jo
xor
and
sti
fldcw
notl
bound
push
enter
push
cld
mov
cmc
mov
es
sbb
mov
cli
inc
scas
outsl
sub
inc
ret
add
int3
inc
in
mov
aas
mov
sbb
xchg
inc
jns
adc
pop
sbb
aaa
add
sbb
xchg
into
jbe
sbb
xchg
cmp
fistps
in
sub
pop
stc
push
test
into
fxch
push
rcll
daa
leave
push
push
jb
pop
sbb
repz
lods
mov
push
jae
out
jmp
pop
cli
xchg
das
aam
sti
adc
cmp
out
pop
add
pop
shll
adc
out
inc
outsb
sbb
loope
sub
pop
les
add
sbb
jecxz
lods
mov
nop
sub
shl
movsl
sbb
sub
idivb
clc
xor
pop
adc
mov
pop
xchg
pop
in
arpl
movsb
std
mov
mov
mov
outsl
sbb
imul
xchg
out
pop
mov
mov
cmc
pop
xorb
andl
sahf
lea
loopne
cmp
pop
or
xor
mov
stos
lret
lret
cmp
test
adc
add
jmp
sti
jecxz
mov
add
push
in
lahf
cld
add
pop
or
sbb
jecxz
jl
cmp
es
xchg
jbe
xor
inc
test
pusha
insb
add
clc
addb
bound
cltd
mov
and
push
cmpsb
rclb
loop
xchg
arpl
rolb
pop
sti
pop
incb
ret
call
cmp
ds
dec
xchg
jno
mov
inc
or
negl
ljmp
or
mov
pop
inc
mov
inc
dec
fbld
call
aad
push
or
scas
inc
dec
ret
xor
in
cmc
or
out
sbbb
in
mov
outsb
sub
xor
in
or
es
mov
pop
xlat
rcrb
jge
cmp
pop
adc
aad
jne
jno
lods
sbb
and
mov
dec
push
mov
daa
shlb
jmp
mov
enter
fwait
imul
push
ja
fdivl
outsb
mov
cld
ds
jns
mov
push
push
xchg
sbb
xor
mov
lahf
fwait
and
fs
and
ret
or
stos
or
pusha
inc
xchg
push
sbb
dec
mov
add
adc
out
arpl
add
and
adcb
cld
cmp
sub
jne
mov
pushf
xchg
cmp
ja
cmp
or
cmpb
int3
mov
rclb
popa
insb
sub
loopne
ja
fcmovne
pusha
test
lret
fdivrl
jno
push
adc
aad
ret
sub
je
inc
mov
fldl
imul
ds
insl
ljmp
jae
popaw
sbb
out
dec
mov
pop
inc
mov
jmp
xchg
dec
dec
jmp
out
subb
iret
std
jns
cmp
ds
aaa
xor
xchg
inc
stc
inc
sti
inc
sub
push
adc
or
movsb
add
inc
and
push
xor
bound
repz
jae
cmp
insb
jecxz
mov
push
cld
xor
mov
mov
and
xchg
loopne
add
adc
mov
sbb
xor
or
mov
lock
inc
fs
inc
in
mov
pop
fwait
data16
je
enter
mov
push
in
mov
js
pop
fs
lcall
aas
mov
mov
adc
jp
lods
inc
adc
jno
xchg
test
mov
int
das
rcll
gs
fwait
cs
sub
daa
into
mov
inc
ss
jo
inc
add
ja
mov
mov
inc
out
lcall
cli
pop
rol
repnz
inc
movsl
pusha
ds
dec
lock
fs
xchg
test
dec
sub
push
inc
cmp
dec
std
mov
fstpt
cs
push
aad
pop
movsl
aaa
xchg
ja
sub
or
pop
test
pop
enter
push
andl
lcall
cmp
jb
pop
xorb
loopne
xchg
push
mov
mov
cmp
adc
testl
nop
stos
cmp
decl
or
mov
mov
jae
arpl
inc
dec
popf
mov
jno
sub
pop
call
or
mov
insb
addr16
iret
lahf
nop
xor
adc
fdivr
sub
inc
fildll
out
adc
cwtl
clc
push
dec
fs
gs
pop
dec
xlat
mov
fstl
cmpsl
lock
jle
cmp
frstor
dec
jnp
iret
shl
out
data16
out
mov
test
add
lcall
adcl
add
lock
faddl
xor
xor
cmp
mov
test
jecxz
jecxz
lahf
or
mov
rcrb
into
mov
int
fnstenv
add
cmpsl
bound
mov
pop
mov
lret
outsl
cmpsl
inc
xchg
sub
fadds
lret
lock
mov
add
or
rorb
sbb
insl
or
or
sub
mov
mov
push
jns
mov
adc
xchg
sbb
jmp
pop
repnz
cmp
xchg
jmp
and
xchg
jae
out
dec
fistpl
xchg
push
mov
pop
test
icebp
cmpsb
xchg
mov
mov
mov
pop
stc
out
cltd
out
add
pop
lea
sub
mov
mov
lock
call
jns
mov
or
in
jae
adc
scas
xchg
out
insl
popf
mov
test
mov
std
ret
sub
stos
mov
outsl
xchg
dec
or
dec
std
push
nop
data16
call
pusha
scas
jg
mov
or
add
in
insl
je
sbb
sub
aam
cmp
dec
mov
sahf
pop
test
out
test
js
jb
stc
lods
rcll
adc
shlb
insl
fmuls
je
mov
les
je
pop
or
sub
out
std
jo
mov
mov
pop
adc
pusha
je
sub
jnp
inc
xor
jns
sub
mov
fnstsw
into
ret
jge
push
cmp
xlat
inc
sti
jp
mov
jns
sarl
subl
cli
mov
shl
lds
nop
sbbb
xchg
popa
prefetchwt1
or
or
iret
inc
xor
loop
jp
aas
mov
rcrb
mov
jno
jp
inc
mov
cld
and
in
pusha
mov
lret
lds
or
mov
int
cltd
push
ficoml
lcall
aad
pop
hlt
test
loopne
mov
or
push
sub
xchg
push
int3
imul
imul
push
xchg
sarl
xchg
push
scas
dec
jmp
popa
iret
push
push
out
ja
push
mov
daa
int3
bound
and
lidtl
testb
test
testl
out
adc
mov
push
mov
call
lcall
add
dec
pop
mov
int3
ret
stos
xchg
dec
push
sbb
es
fsub
mov
xchg
dec
test
push
rclb
aaa
inc
out
jl
adc
shll
xchg
fwait
mov
scas
sub
ret
push
push
call
jmp
push
movsl
mov
cmc
push
aaa
mov
in
lods
jge
int
loopne
js
lock
push
pop
push
inc
cwtl
stc
xor
aam
jge
jb
ja
insb
andb
pop
jo
xor
mov
cmp
icebp
int
and
mov
cwtl
pop
iret
pop
orb
mov
aam
std
cs
int3
add
mov
int
jge
stos
push
and
das
cmp
pusha
jl
cltd
jbe
mov
imul
fnstcw
data16
add
data16
test
outsb
aad
adc
mov
rolb
xchg
add
arpl
ret
pop
push
aaa
ss
push
les
les
cwtl
xor
mov
pop
aas
adc
mov
mov
shrl
int3
jp
xorl
jecxz
idivb
sub
add
fistl
jns
faddl
popa
push
jmp
in
xor
jecxz
or
cmp
cli
out
jl
popf
inc
loop
mov
xchg
pop
add
push
xor
cmp
mov
adc
pop
jae
pop
addb
inc
stc
addr16
mulb
jmp
sbb
popf
das
xchg
add
push
adc
outsl
call
pop
cmp
jno
adc
fsubr
xlat
inc
or
loopw
aam
sarb
fmul
sub
test
jo
add
adc
dec
add
les
cmc
subb
lock
cmpsl
push
mov
jo
shrb
push
shr
sub
lret
lock
pop
or
scas
lods
sarl
not
add
mov
xchg
icebp
int
call
movsl
sub
jge
mov
lret
dec
dec
dec
push
shrl
dec
mov
adc
hlt
imul
jmp
outsl
jbe
lcall
js
and
je
add
pop
fsubr
jl
jb
mov
sahf
lahf
add
int3
mov
jns
fs
jge
jle
rorb
lret
mov
pushf
pop
cmp
insl
ret
out
xor
or
xor
cmpsl
mov
pop
push
cmp
jecxz
cmp
push
pop
mov
cmc
push
xor
pushf
push
and
pop
call
loopne
push
cmp
pop
loope
nop
pushf
jl
imul
xchg
lret
adc
ljmp
fsts
and
mov
cmp
cld
lea
lcall
jge
icebp
les
xor
aaa
cltd
cmp
add
lods
pop
jmp
outsl
sub
fwait
add
test
fidivs
lods
sub
sub
jge
test
clc
push
test
jb
and
lods
insl
mov
or
dec
mov
xchg
cmpsb
aam
mov
out
fldenv
das
leave
fwait
pushf
ljmp
push
fneni(8087
fdivrs
popl
movsb
iret
int3
je
push
or
sub
mov
out
inc
dec
mov
in
and
or
dec
dec
cmp
fucomip
enter
out
lock
and
and
push
jnp
mov
xor
and
dec
imul
mov
cld
into
inc
dec
or
xchg
cwtl
rcrb
mov
cwtl
gs
sbbb
push
das
add
jecxz
jp
xchg
outsl
cmp
sti
rcl
inc
pop
bound
imul
fs
push
les
pop
mov
repz
jecxz
mov
or
lcall
or
cmp
add
jp
test
xchg
in
imul
popa
adc
addr16
out
xchg
in
or
jo
mov
cmp
mov
and
fisubs
leave
jno
xchg
pop
aaa
sbb
iret
lods
jl
inc
mov
or
inc
mov
inc
mov
mov
iret
es
cmp
movsl
mov
mov
mov
stc
xchg
in
shll
add
je
mov
mov
jbe,pn
add
push
popf
adc
loop
sbb
pop
xchg
push
cli
pop
xlat
jo
rcrb
mov
gs
in
xchg
mov
inc
cli
dec
mov
xchg
sbb
pushf
dec
cli
lahf
les
lock
jecxz
fstpl
rorl
mov
push
xchg
ret
mov
jp
adcb
iret
shlb
pushf
dec
push
mov
adc
xchg
sti
ret
jg
dec
xchg
aad
jns
xchg
outsb
dec
xor
xchg
std
xor
dec
stc
int3
scas
lock
pop
movsb
mov
add
fstpl
dec
dec
jl
mov
data16
dec
cmp
add
stos
out
mov
add
fisubs
sbb
jp
cmp
insb
push
int3
jbe
cmpb
and
xor
rorl
cmp
int
or
xor
pop
pusha
fmull
icebp
xlat
xchg
out
sub
outsl
sbb
cmp
adc
mov
call
cmc
dec
dec
or
mov
jp
ret
mov
rorl
mov
sbb
cltd
adcb
add
add
fsubs
and
aad
pop
dec
mov
mov
pop
xchg
pop
jl
repnz
repz
cmp
dec
jp
and
mov
pop
xlat
andl
pop
ret
inc
inc
mov
orb
lock
and
outsl
sahf
std
xchg
fidivrs
fiaddl
aaa
mov
cmp
insl
and
loopne
inc
stos
mov
fnsave
adc
push
xchg
xchg
xchg
movl
shrl
xor
mov
push
push
pushf
jbe
push
ljmp
sbb
cmc
ljmp
mov
xchg
push
ret
lahf
push
idivl
mov
in
adc
shr
loop
push
and
or
mov
pop
or
xchg
stos
sbb
add
xchg
cmpsl
stos
ret
insl
outsl
aam
push
ret
sub
shr
mov
jbe
inc
cld
fs
movsl
jmp
out
add
xchg
add
mov
fisttpl
pop
or
imul
or
loop
loope
dec
jbe
cmpsl
call
xor
jecxz
test
inc
out
sbb
inc
rclb
lcall
stos
sub
and
aad
ss
jle
mov
enter
adc
or
xchg
dec
shll
and
ffree
adc
dec
mov
pop
nop
pop
sub
mov
push
and
in
cmp
ret
xor
sub
shl
repz
lock
shl
stos
sbb
hlt
xlat
fcmovne
bound
rorb
inc
vmovaps
outsl
movsb
xor
jo
ja
add
ret
mov
sahf
xchg
loop
xlat
push
outsb
je
pop
add
mov
in
pusha
lods
mov
mov
lcall
pop
xchg
lods
pop
ljmp
sbbb
dec
sub
pop
sub
aam
cs
enter
icebp
sub
je
test
scas
adc
mov
cltd
rcrb
dec
testb
mov
jl
add
call
xchg
xchg
xchg
stos
adc
out
cmp
push
pop
sub
xor
ja
rcr
lret
lds
call
or
popf
pusha
pop
mov
in
pop
fdivrl
inc
js
push
outsl
push
mov
cmp
mov
fs
dec
jle
sub
dec
aam
add
cmp
inc
sbb
pop
sub
gs
xlat
fidivs
push
mov
and
out
add
add
jne
in
push
jmp
dec
adcb
cmp
push
lahf
jns
test
repnz
in
mov
jecxz
lcall
sub
dec
mov
in
loope
ud2
sub
aad
mov
iret
dec
mov
sub
pop
out
or
mov
jmp
outsb
mov
fidivrl
mov
clc
xor
cmpsl
out
xchg
fsts
push
jp
or
notb
dec
ljmp
xchg
jecxz
pop
add
sbb
sbb
pop
fwait
xchg
dec
outsl
add
adc
ds
push
sub
orl
cmp
pop
jno
xchg
and
add
and
add
hlt
dec
fidivs
sarb
outsb
mov
mov
mov
push
fdiv
fs
fsubs
ja
mov
adc
jecxz
stos
ja
pop
add
in
fwait
pop
stc
xchg
stc
or
lock
incb
popa
dec
pop
add
inc
add
mul
push
and
mov
mov
bound
rolb
dec
mov
inc
adc
mov
stc
ja
imulb
lret
call
sbb
mov
mov
pop
popa
xchg
arpl
repnz
fsubrl
fstl
shll
and
cmpl
lods
fdivl
push
stos
sub
mov
icebp
pusha
jg
icebp
clc
daa
insl
sub
push
mov
cld
cmp
aas
cmp
enter
jle
js
mov
sbb
add
das
add
mov
insl
lcall
enter
aad
pop
insl
arpl
subl
lret
movsl
call
cmp
mov
adcl
jl
and
and
sti
pop
dec
outsl
sub
lds
fisttpl
sbb
fidivl
dec
inc
pop
cmc
and
enter
orb
ja
test
movl
xor
jg
mov
lahf
or
pop
lahf
dec
dec
rorl
loop
jecxz
movsb
bound
icebp
out
inc
jo
mov
dec
or
xlat
in
cmpsl
inc
adc
std
and
push
leave
adc
sbb
sbb
inc
insl
push
pop
mov
or
imul
test
test
cltd
loopne
mov
int
mov
sub
push
testl
adc
mov
popa
jecxz
insl
mov
push
scas
adc
adc
loop
out
outsl
sub
mov
mov
lret
jl
sbb
or
lods
mov
jecxz
in
mov
mov
pusha
sti
and
jo
daa
inc
mov
fisttpl
pop
sub
stos
pop
je
add
xchg
mov
and
push
mov
aad
cmp
ljmp
insl
inc
push
sbb
aaa
in
incl
pop
lahf
imul
bound
lods
cli
dec
fsqrt
cmpsb
adc
dec
pop
ljmp
cmpsb
xchg
push
fsubl
xchg
cmp
or
ja
movsb
out
sub
andb
leave
aas
outsl
push
insb
sub
inc
dec
jnp
jns,pn
add
ljmp
mov
push
dec
lea
mov
mov
pop
fisttpl
pminsw
sbb
lea
mov
rol
sbb
cmp
test
jmp
jno
aad
sbb
test
lock
jp
mov
adc
jg
and
mov
push
in
jno
out
fnsave
xlat
subl
div
out
push
cld
out
mov
out
addr16
sti
push
aam
adc
mov
out
nop
rclb
aad
sub
push
repnz
test
int3
or
and
int3
mov
mov
lods
sbbb
xlat
mov
mov
stc
in
mov
adcl
imulb
cmpsb
fucomi
test
call
jno
pop
inc
stos
mov
ja
shrb
mov
fs
insb
xchg
fiadds
sbb
lds
xchg
add
xchg
mov
cltd
push
into
xchg
xchg
or
cli
pop
filds
or
cmpsb
maxps
add
cld
mov
dec
pop
jnp
rcrb
in
dec
pop
mov
jle
nop
sub
xor
jecxz
sbb
lret
pop
test
stos
mov
shl
std
pop
dec
jno
push
mov
hlt
shl
rolb
cmpsl
xchg
movsl
stc
andl
or
repz
and
mov
int3
jnp
ljmp
jl
std
ret
orb
lahf
xor
sub
jnp
inc
ds
xlat
pop
fiadds
mov
ss
or
into
int3
in
cltd
xor
xor
jnp
out
lods
inc
stc
lods
aad
push
pop
lcall
pop
test
dec
jns
and
dec
jg
adc
xchg
fnstcw
fbstp
dec
push
mov
cmpsl
push
aad
dec
pop
push
call
loop
sub
xchg
pop
jle
pop
jne
iret
cmp
sub
in
or
mov
jmp
in
xlat
cltd
in
dec
in
mov
int3
loope
lahf
or
sti
adc
cmpsb
in
sarl
mov
hlt
push
pop
and
add
out
ljmp
inc
push
adc
cs
push
xor
lock
repz
sub
sub
jp
fsubs
loopne
movsb
cltd
stc
sub
orb
mov
and
cmp
ret
jle
adc
mov
js
or
lea
mov
pop
pushf
xor
cmp
adc
ja
add
sti
leave
inc
iret
arpl
push
add
jb
mov
add
adcb
es
or
sbbb
xor
lods
mov
inc
cmp
pop
xchg
int3
cmc
rclb
adc
add
fwait
pop
jmp
cld
jg
sub
cmp
shl
add
lea
lds
xchg
xchg
xor
aam
lret
or
pop
mov
lods
movsl
lods
push
xlat
mov
dec
ss
pop
mov
adc
or
xchg
cmpsl
and
cmp
sbb
into
mov
testl
insb
jno
mov
sarl
shlb
loope
push
dec
clc
dec
mov
fcmovu
out
fstps
movsl
insl
ljmp
into
mov
dec
sbb
lahf
and
dec
cmp
mov
adc
scas
repnz
mov
inc
or
bound
jle
ret
nop
data16
icebp
push
mov
int
mov
jns
cld
mov
xchg
shrl
je
test
pmulhw
push
imul
lods
mov
orl
sarb
jl
add
adc
in
or
aaa
loopne
and
xchg
xlat
pop
iret
ret
js
iret
cmp
ret
sarl
pop
xchg
inc
jle
fldt
mov
shll
fistps
popa
loopne
mov
loop
sub
and
fimull
inc
fwait
lea
daa
loop
adc
mov
sbb
inc
jne
xlat
repnz
and
std
mov
movsb
pop
sar
inc
push
fwait
mov
das
and
xchg
lods
mov
mov
cs
pop
inc
shrb
in
adc
pop
lods
inc
dec
mov
fisubl
jae
xor
inc
imul
cli
mov
and
mov
out
jmp
pop
mov
or
frstor
cld
xor
add
roll
push
movq
add
xchg
mov
mov
mov
mov
in
mov
cmpsb
outsl
dec
arpl
cmc
and
mov
xchg
pop
xor
outsl
dec
or
test
mov
pop
arpl
sbb
mov
enter
fwait
xchg
or
data16
test
add
dec
cmpsl
mov
test
cmpsb
add
mov
mov
movsb
and
mov
outsb
lods
cmpsl
fwait
pop
cltd
fs
shll
fsubl
repnz
daa
test
adc
sahf
test
ret
pop
adc
fadds
fnstenv
sbb
stos
cwtl
addl
inc
mov
arpl
mov
lcall
ss
jl
jge
push
test
ret
add
adc
sti
cmpsl
xor
aas
jnp
ljmp
lea
jge
push
in
sti
loopne
ret
push
sub
call
dec
ljmp
push
jnp
rcrl
push
arpl
hlt
and
jmp
push
pushf
adc
adc
cmp
mov
daa
ds
dec
fisubs
clc
sbbb
scas
and
nop
inc
mov
pop
jge
das
pop
pop
mov
data16
and
bound
mov
dec
aaa
cmp
lods
mov
jg
push
mov
or
into
or
mulb
sbb
push
cmp
loopne
sub
xor
sub
xor
dec
cmp
pop
jnp
outsl
bswap
pusha
and
mov
rcrl
pop
lcall
sbb
cli
in
pop
or
xchg
stc
add
push
xchg
inc
popa
and
inc
pop
jl
cmp
adc
add
adc
andl
clc
loopne
xchg
pushf
out
pop
add
aas
dec
and
lea
jmp
dec
xchg
or
mov
arpl
stc
out
cli
push
pushf
sbb
imul
movsl
sbbl
dec
adc
cmpsl
dec
add
sbb
dec
pop
adc
fmul
jge
inc
filds
xor
aam
scas
sub
mov
movsb
jl
xlat
add
or
and
xchg
jg
shlb
int
inc
ret
and
loope
and
shll
mov
addr16
in
out
mov
in
data16
iret
sar
cmp
jo
clc
mov
hlt
into
xchg
es
int3
push
mov
dec
mov
xchg
cli
xlat
sti
cmp
cmp
cmpl
sbb
mov
cltd
dec
xchg
xor
hlt
jbe
pushf
inc
dec
pop
and
test
or
movsb
ljmp
aaa
xchg
in
ja
test
movsl
rcrb
mov
or
idivl
sbb
xor
cltd
lods
mov
xor
cmpsb
jp
mov
dec
test
add
sub
mov
test
call
out
repz
addb
adc
gs
enter
push
cmp
insl
gs
adc
push
test
subl
rcl
gs
lahf
bswap
scas
in
and
and
xchg
popf
adcl
mov
lret
imul
mov
ret
sarb
and
les
das
cmp
dec
in
loope
pushw
lret
leave
jle
int3
cltd
into
je
jmp
xor
push
hlt
or
sbb
inc
sti
jns
fs
mov
outsl
cmc
mov
ret
fst
or
pop
sahf
dec
cmp
mov
mov
xchg
jle
adc
in
push
sbb
dec
inc
outsb
xor
cmp
loopne
testb
pop
dec
dec
inc
add
jl
ljmp
mov
mov
mov
dec
or
jo
popf
stos
fcompl
pop
ds
jge
iret
sub
popa
stos
jmp
push
jno
push
daa
cmp
cmpsb
aam
cmp
nop
dec
sbb
sbb
sbb
and
sbb
in
and
sbb
mov
xlat
pusha
push
iret
fwait
pop
call
sar
pusha
xorb
repnz
mov
nop
jnp
sub
dec
and
mov
or
popf
movsb
sub
cmp
stos
add
movsl
fs
mov
add
mov
insl
and
sub
push
mov
jo
mov
adc
fimull
pop
je
cmp
iret
sub
ret
pop
in
out
aas
out
ds
imul
sub
into
data16
or
frstor
pop
stos
jbe
out
sbb
aad
lea
cmp
orl
mov
or
idivl
ds
mov
cmp
dec
in
fcmovnu
sub
mov
mov
bnd
xor
es
out
iret
imul
cld
sahf
add
aaa
adc
fcoml
mov
pop
jmp
fs
lock
xchg
dec
shlb
push
xor
insb
loopne
mov
mov
sbb
mov
lret
add
outsb
lock
daa
mov
mov
cwtl
jne
mov
jmp
int3
inc
frstor
int3
mov
mov
pop
insl
out
shll
cwtl
out
dec
insb
xchg
scas
and
imul
pop
push
jle
dec
adc
jae
push
fcmovne
mov
mov
sahf
mov
xchg
jns
xor
mov
sbbl
cld
sarl
aas
jae
inc
add
inc
dec
sub
movsl
lock
leave
inc
ds
pop
xchg
ljmp
mov
inc
mov
jl
xor
jno
pop
add
adc
in
aaa
movsb
jp
rclb
imul
test
lret
mov
leave
cli
in
lcall
js
pusha
mov
scas
fcomp
addl
xchg
pop
dec
enter
in
cltd
pushf
aam
pop
cmp
sub
shl
idivl
gs
mov
mov
pop
add
addr16
jbe
pop
hlt
dec
push
push
bound
ss
mov
and
das
mov
aaa
xchg
les
fs
push
out
cmpsl
mov
pushf
lods
lret
stos
stc
xor
lods
push
pop
cltd
rorl
pop
dec
mov
fbstp
mov
leave
movsl
dec
jnp
mov
out
or
ret
je
push
adc
roll
test
adcb
sub
cmp
mov
test
sbb
mov
nop
cmp
data16
jnp
clc
pop
mov
lock
push
xor
mov
mov
sarl
dec
pushf
mov
fistps
fnstcw
fwait
mov
mov
inc
dec
jl
loopne
xchg
call
and
adcl
sbb
cltd
mov
repnz
dec
incl
lock
das
push
daa
nop
lea
mov
pushf
repnz
movsb
add
int
cmp
pop
stc
repz
cmpsb
push
mov
je
int
push
jns
lahf
out
pop
add
pushf
and
movsl
daa
lahf
mov
xor
jl
sub
mov
aam
sub
jl
push
and
mov
adc
add
sub
int
lahf
cmp
ret
out
dec
push
pop
or
pop
pop
int3
add
jns
loopne
jg
jge
xor
bound
adc
pop
and
rorl
jle
or
js
pop
cvtdq2ps
fbstp
lret
mov
pop
aam
dec
mov
cmp
inc
inc
mov
and
scas
shrb
sbb
adc
xchg
lret
test
pop
loopne
rclb
push
pop
push
jp
jecxz
rcrb
mov
and
outsl
jle
inc
mov
es
pop
mov
mov
out
sti
mov
or
bound
sub
jno
nop
sahf
or
xchg
push
cltd
sbb
jae
mov
push
push
das
cmc
sarb
test
outsb
pop
xchg
call
in
cld
out
inc
sarl
push
xor
adc
or
push
push
lahf
xchg
push
pop
popl
mov
jno
push
or
mov
lods
ljmp
mov
push
xchg
sbb
sbb
mov
in
cs
lahf
ret
clc
scas
stos
xor
sbb
pop
das
inc
cs
fnstenv
and
xlat
in
stos
inc
imul
sbb
add
scas
push
fdivs
inc
sub
icebp
cmpsb
push
gs
lcall
pop
inc
es
cmpl
cmp
inc
insb
sub
neg
ror
mov
sbb
pop
dec
imul
jg
subl
cltd
fwait
loope
test
cmp
ror
xor
ja
jae
pop
sbb
push
xchg
mov
jl
imulb
xchg
xorb
pop
daa
insb
popa
fldl
xor
xchg
outsl
push
mov
sub
enter
lods
xchg
and
push
jns
cmp
jae
mov
jecxz
lret
jno
adc
js
pop
test
sub
movsb
pushf
ficoml
jmp
iret
ret
add
or
frstor
fisubrl
xchg
and
ja
sub
sub
push
xchg
xchg
sub
out
outsl
lret
stc
flds
std
adc
push
mov
imul
or
bound
xor
ret
push
and
add
xor
aam
mov
or
adc
testb
rclb
rcrb
jne
ret
rcrl
pop
mov
mov
sbb
ja
mov
int3
sbb
mov
cs
lea
cmpsb
imul
or
fisubrs
mov
adc
cltd
test
outsb
adc
lret
dec
fwait
jg
cs
sub
dec
xchg
mov
mov
mov
mov
add
sub
xchg
jmp
pop
out
add
popa
lods
inc
scas
push
push
pop
cmp
shl
pop
fwait
int3
adc
xlat
lret
pop
js
shrb
mov
mov
xlat
mov
pop
jg
shrl
lret
adc
sbb
or
dec
xchg
adc
xor
insl
mov
sbbl
mov
push
sbb
repz
push
pop
std
shlb
and
loopne
xchg
lods
jp
cmp
jnp
push
lods
xchg
pop
xor
or
imul
dec
std
shlb
mov
xchg
cltd
test
and
or
movhps
movsb
subl
inc
insb
dec
arpl
jge
lcall
add
or
enter
and
or
shr
test
add
adc
push
push
mov
mov
jo
adc
out
repnz
aaa
in
push
lds
into
aaa
fsubl
jne
mov
lods
sub
mull
mov
and
or
into
pop
pushf
dec
jp
movl
sbb
sti
lgdtl
sbb
sbb
ljmp
add
jle
cmp
or
add
push
cmp
xchg
fisttps
mov
lods
jno
cmc
pop
push
xchg
sbb
xchg
test
jno
cmpsb
sub
cli
repz
daa
mov
int
pop
cmp
jb
adc
pushf
test
push
add
loop
leave
mov
mov
sti
fimull
xchg
lret
and
mov
cmp
xor
mov
jmp
es
mov
mov
adc
mov
sahf
loop
fistpll
pop
xchg
xor
dec
and
movsl
adc
xor
test
fidivrl
dec
ret
and
ret
ret
jne
push
lret
imul
sbb
cld
xchg
cmpsb
es
mull
jp
rcr
mov
in
jae
mov
dec
mov
out
iret
in
loop
inc
and
fsts
sti
stos
mov
jae
and
outsb
movsb
mov
push
adc
and
jne
add
cwtl
or
insb
gs
aas
dec
xchg
jno
push
loop
mov
adc
fnstsw
cmc
jp
aaa
adc
outsl
add
mov
ficoml
mov
mov
aam
jmp
and
icebp
inc
orb
jp
push
test
cli
icebp
pop
lcall
aam
test
jle
jnp
or
inc
push
sbb
cmc
mov
push
add
inc
es
xchg
jg
and
pop
mov
jnp
sub
pop
xchg
sbb
lds
sbb
xor
pop
mov
pushf
pop
stos
xor
lcall
adc
or
or
pop
xor
adc
fwait
out
lds
gs
rcl
mov
mov
cli
sahf
or
fnclex
pop
lds
and
cmpb
pop
adc
xchg
sbb
loope
ss
xor
or
fst
dec
xor
pop
cmp
mov
mov
adc
lret
or
pop
jne
mov
sbb
and
insl
push
mov
jno
outsb
scas
fbld
call
jbe
frstor
and
out
xor
fs
cltd
mov
dec
mov
repnz
lret
test
mov
cltd
lods
nop
xor
clc
int
lods
dec
add
testl
nop
mov
dec
push
mov
fisubs
cld
or
mov
pop
dec
ficoml
jmp
lahf
pop
addr16
stos
pop
les
jecxz
push
jae
cmc
cwtl
loop
hlt
loope
outsb
aaa
push
push
rcrb
sbb
js
mov
mov
out
jno
js
pop
cltd
lea
jge
xor
rclb
dec
mov
xor
ret
mov
daa
pop
push
bound
jge
inc
in
adc
push
jge
or
xchg
fisubrl
pop
ljmp
cltd
das
ret
dec
scas
mov
gs
pop
fldl2t
push
lret
jnp
int
lret
addr16
inc
ss
addr16
std
aaa
xchg
add
rclb
inc
stos
test
mov
stc
lahf
imul
pop
jmp
outsb
sub
dec
lret
mov
cmpsl
xchg
aam
jecxz
add
in
popf
lret
rcrb
js
cmp
in
sub
out
popf
in
sub
mov
mov
fnstcw
inc
add
cltd
movsl
add
and
sub
fstpl
pop
sub
cmpsb
pop
push
xlat
push
sbb
push
or
push
mov
mov
leave
xor
out
jno
xor
and
ss
clc
into
daa
add
lret
pop
sarl
andb
std
jmp
and
movsl
icebp
jmp
mov
adc
inc
dec
add
leave
sub
sub
faddl
ja
loop
jnp
ja
xchg
push
stos
movsb
inc
lock
xchg
lods
sahf
mov
push
pop
mov
bound
adc
sbb
cli
mov
ret
pusha
adcb
dec
sub
imul
cli
mov
lret
push
cmc
cmp
jne
aam
xchg
mov
dec
cmp
jle
xchg
xchg
sub
mov
fbstp
xchg
fistl
pop
xchg
in
enter
pop
jmp
scas
pop
lods
fcomps
mov
or
je
xor
push
ss
int3
clc
adc
lcall
out
inc
int
popa
or
jge
sub
ret
xor
dec
cmp
repnz
sub
shlb
cmpb
and
das
xlat
test
cmp
pop
mov
pusha
cmp
lcall
xor
pop
bound
es
mov
in
jmp
and
into
adc
mov
push
scas
incl
jb
fistps
out
xor
xchg
and
jbe
rcrl
roll
stos
or
nop
test
movsl
call
push
gs
imul
mov
xchg
insl
mov
sbb
decl
add
xor
lahf
div
mov
hlt
mov
mov
stos
sbb
jno
je
hlt
xchg
mov
jno
lods
movsl
or
loope
dec
fwait
and
jno
fwait
xchg
sub
ljmp
sbb
jmp
push
dec
test
scas
lock
stos
mov
inc
loopne
or
out
shr
adc
fs
mov
fbld
out
movsl
out
fs
and
push
rol
loop
inc
xchg
mov
in
cmp
cld
and
pop
dec
mov
leave
fidivrl
mov
andb
push
xchg
jno
push
cmp
xor
dec
xchg
ja
xchg
gs
cs
mov
and
mov
xchg
xor
pop
or
nop
popf
and
es
cmc
pop
loope
dec
or
dec
adc
and
ja
mov
pop
int
sbbb
repnz
mov
inc
dec
movb
notb
sbb
pop
add
adc
int
dec
addr16
xor
js
sub
fs
mov
ds
jne
dec
imul
notl
cmp
mov
push
fsubl
fstl
jg
inc
and
orb
inc
xchg
pop
jmp
jbe
mov
call
das
shrl
push
add
cmp
sahf
pop
mov
xchg
cli
mov
cmp
adc
lods
inc
ds
sub
jmp
idivl
sbbl
mov
and
aam
jne
add
pop
lds
outsl
pop
dec
fisubrs
les
es
mov
push
xor
sbb
sub
pop
data16
outsl
push
dec
loopne
movsl
repz
gs
push
push
shr
and
and
out
jb
xchg
lds
int3
add
into
adc
and
mov
mov
pop
mov
popa
aam
cmp
cmpsb
fs
inc
fsubrs
in
jnp
int3
inc
add
out
bswap
sbb
xchg
dec
dec
data16
call
movsb
incl
mov
mov
xor
mov
pop
cmp
repz
out
ss
sbb
mov
imul
dec
mov
cmc
xor
cmc
fistl
sub
mov
mov
clc
bnd
dec
inc
mov
pop
adc
icebp
test
push
cmp
pop
push
inc
gs
dec
mov
jl
lock
mov
mov
lahf
xchg
mov
daa
int3
push
push
test
je
outsl
jmp
adc
push
dec
ret
or
js
or
fstpt
bnd
push
fsubrs
adcb
dec
xor
addr16
lahf
frstor
jno
popa
push
fimuls
fwait
sub
jno
inc
test
sub
or
lods
mov
popl
adc
ljmp
dec
ror
xchg
jg
mov
mov
and
cwtl
sbb
xchg
inc
xchg
ret
inc
xchg
xchg
fisubl
cs
xor
inc
les
inc
jns
xchg
fsubrp
mov
cltd
inc
push
orl
and
dec
rcrb
roll
mov
lret
mov
pop
push
aam
shlb
aaa
xchg
orl
sbb
ja
add
cmp
lea
test
lock
test
xor
shlb
cmpsb
sti
mov
or
inc
dec
add
loopne
xlat
and
lcall
add
pushf
dec
jecxz
sbb
iret
mov
sahf
xor
or
ret
adc
xchg
push
das
inc
movsb
push
lcall
jg
mov
aam
pop
pop
xor
jno
call
inc
mov
and
push
ss
ljmp
popf
cmc
daa
aaa
mov
xor
fisubl
add
jp
inc
cmp
inc
or
pop
mov
and
cmp
int3
or
loop
mov
xchg
out
xor
dec
fiaddl
ds
mov
ds
aaa
or
jne
xchg
mov
push
push
push
hlt
xor
into
xchg
add
adc
push
pushf
jge
sahf
int
loopne
decb
add
or
ficoml
add
loopne
jbe
dec
jge
pop
jp
pushf
imul
mov
fs
jo
pop
adc
and
into
push
in
fdivrp
fisubs
es
cmp
cli
ds
jno
push
jl
inc
or
sti
mov
sub
ret
daa
hlt
arpl
mov
in
add
movsl
repz
sahf
pop
cmc
mov
popa
andl
outsl
or
jmp
xor
dec
mov
jmp
cmp
loope
outsb
inc
mov
arpl
mov
push
and
out
pop
add
xchg
mov
ret
cld
dec
push
inc
rcrl
and
scas
daa
mov
push
cmp
lods
inc
addr16
ror
xchg
sti
sti
stc
addr16
inc
pop
mov
fs
mov
xchg
in
mov
pop
movsl
loopne
out
stc
pop
sub
jp
lret
gs
mov
xchg
add
jmp
aad
lds
or
clc
cmpsl
jb
icebp
out
pop
inc
cmp
mov
lods
lret
imul
mov
shrb
mov
push
enter
mov
out
jo
ja
mov
and
int
or
xor
aam
jb
push
shlb
lret
js
in
leave
inc
mov
xchg
aaa
aas
inc
das
fistpll
std
imul
and
bound
adc
mov
jne
sub
inc
leave
addl
stos
das
cmc
jecxz
jae
adc
add
xor
addb
lods
dec
inc
out
mov
sub
cli
pop
and
push
xchg
cmp
loopne
stc
push
sbb
cmp
jmp
shll
movsb
sub
lea
call
cmp
mov
std
sbb
inc
scas
scas
sub
in
jg
sahf
mov
pop
mov
mov
cmp
dec
arpl
popa
inc
imul
aad
sub
sub
adc
sarb
xchg
in
pop
sub
sbbb
add
mov
nop
inc
xchg
popa
jae
sti
jb
shlb
xchg
dec
je
loop
lahf
fnstcw
int3
sub
out
test
push
imul
push
mov
cmp
loop
leave
adc
push
test
add
jg
dec
lahf
inc
lcall
sbb
jge
push
dec
sbb
ljmp
iret
call
ret
pusha
add
push
icebp
mov
and
dec
aam
lcall
adc
mov
jns
xchg
pop
jmp
aas
ja
pop
mov
movsl
sbb
mov
sahf
out
sti
jne
or
adcb
cmpsb
ja
cwtl
mov
and
pop
inc
loopne
enter
pushf
xchg
lea
jo
and
ret
shl
ss
mov
icebp
dec
dec
inc
cs
dec
paddd
inc
pop
inc
out
xchg
scas
push
es
fbstp
mov
js
jmp
pop
pop
xchg
lock
enter
and
iret
cmpsl
adc
mov
movsl
adc
outsb
xchg
mov
sbb
pop
mov
mov
ja
sbb
inc
adc
data16
int
stos
mov
and
xchg
cli
sub
ror
into
dec
stc
imul
out
gs
xlat
push
data16
push
ljmp
jo
iret
inc
xor
or
add
xchg
in
pushf
dec
les
jnp
fs
bound
push
or
xchg
fbld
xor
ss
xchg
into
mov
jae
cwtl
mov
jp
loop
jno
push
popf
mov
jne
repz
mov
pop
stc
cmp
movsb
xor
xchg
pop
shll
xlat
pop
jbe
call
mov
push
lods
fildll
lea
movaps
cwtl
sbb
lock
loop
cmp
and
mov
add
in
pop
cmpsl
jl
push
adc
test
imul
je
popf
xor
or
xchg
lods
fmuls
push
or
into
and
addb
out
and
add
and
jnp
fldt
mov
rorb
adc
add
rcll
out
xchg
lea
push
repz
xchg
mov
mov
iret
push
int
mov
mul
or
in
pop
cld
rolb
mov
sahf
xor
outsb
inc
dec
pop
movsl
incl
or
mov
sub
fwait
pop
mov
xor
ja
sub
leave
push
popf
out
dec
test
cli
inc
xchg
movsb
and
fs
pop
ret
cs
xor
pop
mov
xor
sbb
mov
mov
inc
int3
aas
lods
pusha
in
or
fcomps
int
xor
test
dec
push
aas
adc
call
xchg
imul
mov
pop
xor
xor
test
aad
imul
xchg
mov
imul
mov
int
in
xchg
cwtl
pop
hlt
jne
xchg
jmp
jg
and
js
sbb
or
ja
dec
imul
add
rol
popf
pop
add
ret
pushf
jno
stos
js
imul
push
xor
jo
inc
mov
mov
hlt
imul
mov
test
cmpsl
lock
nop
jb
divl
ret
loop
xor
inc
jns
mov
shll
filds
sub
pop
cmc
daa
incb
pusha
push
cmp
inc
pop
shll
jns
cli
loopne
sbb
mov
shr
ret
fwait
push
push
cmp
fiadds
xchg
mov
xchg
lret
fdivrs
jl
jne
jne
cli
rcrb
loopne
stos
push
push
mov
in
push
jns
xor
insl
xchg
mov
xchg
outsb
dec
inc
push
xchg
in
xlat
jnp
in
mov
inc
imul
dec
inc
movsb
push
mov
mov
in
cmp
or
ret
xchg
daa
mov
sarl
mov
scas
fmull
add
std
ss
test
dec
rcrl
lret
jmp
add
pop
outsb
or
mov
loope
mov
out
jo
mov
and
popf
aam
outsl
lret
out
je
mov
pop
mov
lcall
insb
outsb
xchg
cwtl
lcall
test
out
adc
xchg
and
pop
inc
cli
inc
fsubrl
push
testl
xlat
in
jl
inc
ss
movsl
jl
loope
pop
inc
jo
mov
call
dec
rolb
sbb
cmovg
and
lods
shrl
or
jl
add
adc
push
fldcw
push
sub
cmc
fcmovbe
sbb
in
pop
inc
mov
and
jg
mov
lahf
aam
cmpsl
pop
enter
mov
jp
cmp
xchg
add
call
xchg
pop
xchg
xor
es
movb
fsubrs
pop
pop
in
in
inc
pushf
ljmp
das
adcb
xchg
xlat
stos
xchg
cli
sbb
or
in
jae
and
int
cmpsb
pop
push
adc
fcoml
and
data16
adc
adc
pop
inc
insb
movsb
sub
dec
add
dec
daa
fnstsw
jge
daa
scas
inc
das
sbb
fnstenv
fsubrl
sbb
and
mov
icebp
out
fmuls
filds
fsubrl
inc
fldenv
in
mov
fwait
outsb
das
sbb
test
notb
cmp
fiadds
ss
push
ret
pop
stc
sub
cs
sub
sub
xlat
out
icebp
scas
mov
push
push
xchg
fbld
jae
mov
adc
and
mov
ds
data16
or
rclb
mov
sti
testl
inc
inc
mov
imul
sub
lods
add
pop
shll
cs
mov
test
add
mov
sbb
in
aad
nop
push
call
hlt
int
aad
sbb
es
mov
scas
jge
cmp
ja
sbb
in
lods
mov
out
mov
test
imul
jmp
inc
xor
mov
test
or
clc
fildll
xchg
scas
or
aad
ds
into
aaa
inc
aaa
lcall
lcall
mov
shll
pop
loop
dec
lcall
and
dec
pop
mov
mov
or
repnz
xor
dec
mov
mov
gs
cmp
or
sbb
mov
sub
stos
inc
mov
dec
cmpsl
fnstsw
xor
xchg
push
dec
cmpsl
cli
out
fisttps
xchg
xor
cmp
xchg
xchg
pusha
sub
sub
fnstcw
xchg
hlt
sub
xchg
movsb
adc
jp
aam
aaa
mov
adc
outsb
popf
push
lret
mov
insl
mov
nop
lcall
daa
mov
cwtl
mov
aaa
popf
xchg
jg
mov
or
movups
add
mov
nop
jge,pn
sub
leave
test
in
add
das
mov
or
fwait
push
sti
fld
ficompl
jo
test
ds
jecxz
pop
mov
in
dec
cmpsl
jnp
ljmp
arpl
mov
mov
leave
or
lret
and
inc
jo
clc
popa
xchg
ds
scas
fcomp
pushf
push
mov
mov
ret
add
cmp
outsl
mov
movsl
add
lock
mov
pop
sar
mov
cmc
shl
das
push
aam
popa
outsl
outsb
pop
rcll
add
cld
fs
clc
mov
dec
mov
loopne
inc
cmp
mov
in
test
icebp
dec
sub
ljmp
sub
adc
ss
pop
xchg
sbb
mov
daa
push
in
lock
pop
stos
add
pop
ret
jnp
push
mov
movsb
or
cmp
lret
stos
ja
jno
fistps
add
and
out
adc
add
xlat
out
cmp
mov
cld
jmp
jbe
jmp
push
aaa
aaa
enter
insb
aam
xor
mov
and
out
adc
cmc
xchg
bound
jns
test
mov
inc
add
push
movsl
aas
jne
icebp
mov
sbb
mov
movsl
mov
add
mov
movsb
xchg
cmpsl
adc
mov
aad
inc
mov
jne
stos
push
or
pop
cltd
pop
test
cmpl
jns
xor
push
sbb
sbb
hlt
cmp
mov
stc
xchg
push
int3
mov
xchg
mov
ret
cwtl
push
int3
mov
pop
jo
or
data16
les
xchg
pop
mov
addr16
mov
cld
mov
lods
jg
and
ret
lds
leave
pop
adc
aam
xchg
insl
sbb
dec
jecxz
test
adc
repz
pop
ret
bound
xchg
gs
cmp
sub
or
lods
out
adc
push
mov
gs
dec
sbb
iret
adc
adcb
lret
sbb
pushf
mov
aam
mov
cmc
mov
cmp
xor
aaa
mov
push
das
push
dec
pushf
test
mov
aad
dec
orl
push
xchg
sbbl
test
jecxz
ja
das
inc
push
add
icebp
lret
repz
inc
adc
addr16
mov
dec
xlat
into
call
dec
mov
mov
add
push
mov
mov
decb
das
pop
push
push
pop
es
scas
mov
dec
loop
cmpsb
and
xchg
lock
sub
sarb
mov
sbb
std
inc
add
sbb
das
push
push
jo
sahf
mov
das
adc
enter
add
mov
jg
mov
pop
imul
xchg
xor
mov
mov
or
dec
cs
jns
into
jns
inc
xchg
in
pop
or
sub
enter
push
sub
mov
cmc
sbb
out
or
fs
adcl
mov
push
dec
fdivr
push
mov
cmp
xor
addr16
sub
push
sbb
in
fistpl
loop
adc
mov
jnp
imull
push
inc
shll
cmp
add
jne
or
push
data16
sub
push
rcll
enter
xorl
sbb
mov
js
out
mov
cmovge
clc
leave
adc
add
adc
xchg
fdivrl
sbb
icebp
jl
leave
mov
shll
xchg
inc
dec
adc
jl
lahf
mov
mov
mov
jns
mov
xchg
dec
and
adc
pop
jl
mov
in
dec
push
lds
xchg
loop
xchg
mov
adc
pop
in
repnz
gs
add
mov
push
hlt
stos
cmp
add
and
xchg
push
xor
imul
jge
sbb
cmp
cs
push
pushf
sarb
jg
addr16
pop
push
fsub
mov
jno
push
mov
mov
pop
mov
dec
and
aam
lcall
fcompp
mov
dec
cld
mov
lahf
add
dec
int
dec
imul
fidivs
cmc
movsb
and
add
mov
ss
xchg
and
lahf
enter
repz
pop
xor
nop
test
fimuls
pop
cwtl
or
add
imul
xchg
xor
lret
aam
pop
mov
into
xchg
dec
push
sub
adc
or
push
pop
insb
and
mov
and
sbb
sub
jo
imul
pop
je
jle
sbb
test
inc
push
lcall
fmull
xchg
xor
aas
pusha
insl
insb
cmp
stos
xchg
popa
inc
mov
push
dec
inc
scas
repz
rorl
rorl
cmpsl
jl
notl
xor
mov
ss
jmp
mov
out
mov
sub
sbb
add
push
adc
int3
insl
and
push
aaa
gs
out
cli
lret
in
mov
imul
scas
sub
lock
xchg
jnp
cmpl
inc
and
sub
gs
stc
xchg
adc
shlb
insl
test
xchg
jmp
or
cmp
mov
mov
addr16
cmpsl
cmp
inc
arpl
ss
dec
mov
lds
xchg
jg
cmp
ret
fs
dec
fisttpl
mov
cmc
adc
mov
ljmp
fucom
nop
xchg
add
clc
mov
lds
lock
dec
mov
dec
jae
mov
jnp
cmp
aam
insl
mov
in
mov
push
cmp
out
dec
xchg
xor
fidivs
shl
mov
stos
xchg
fbstp
rcrl
lds
jae
arpl
sbb
test
mov
jle
xchg
cmp
iret
add
pop
mov
sahf
jecxz
out
jle
pop
push
lahf
jge
pop
fdiv
out
insb
hlt
es
jnp
stos
sbbb
pop
xchg
rcrb
mov
jo
mov
xchg
lret
add
xor
push
dec
push
int
push
xchg
mov
test
iret
dec
dec
insl
inc
and
sbb
mov
insb
pop
fnstenv
roll
aad
data16
cmp
and
xor
mov
add
adc
mov
and
jmp
jbe
push
sbb
bound
sbb
fstpt
out
push
dec
popf
mov
adc
sti
jp
push
cmp
sbb
fmulp
call
mov
xchg
sbb
ss
bswap
in
std
mov
jae
jae
push
pop
cli
insl
sahf
outsl
in
inc
or
aam
pop
daa
mov
sub
aam
push
movsl
enter
and
jns
addl
lret
or
sbb
jns
cli
lea
lahf
rcr
xor
adc
push
in
rolb
call
jecxz
pop
pop
mov
mov
lcall
add
xchg
fldt
pop
stos
mov
cli
je
and
cmpsl
mov
in
xchg
pop
clc
rorb
dec
jnp
push
mov
int3
mov
lods
add
push
ss
mov
add
adc
ds
in
and
or
and
mov
test
or
in
mov
xor
dec
mov
sarl
or
scas
lods
lcall
rcrb
dec
cmp
ss
je
xchg
mov
daa
lods
or
lcall
in
push
lret
xchg
sbb
fisubs
sub
push
ja
adc
imul
fsubl
xorb
xor
jae
xchg
into
pusha
pop
pop
repz
push
aas
fsubrs
ds
adc
xor
inc
cmpsb
inc
sub
jmp
xchg
push
iret
mov
xor
cmc
pop
add
in
sbb
adc
les
pop
cltd
xchg
push
test
sub
fldt
sbb
je
xor
push
rcl
xrelease
les
or
adc
movsb
daa
sub
mov
push
loopne
dec
lods
dec
inc
imul
lcall
repnz
lods
mov
mov
cwtl
mov
rcrl
add
jmp
test
out
jle
mov
cld
and
lods
sarb
psllq
testl
push
pop
movsl
mov
jo
jne
mov
aas
pop
test
add
je
test
adc
inc
in
or
mov
out
aad
xor
movsl
sub
cwtl
orps
push
dec
or
dec
into
push
jmp
icebp
out
mov
adc
inc
fsubrs
pop
sub
cwtl
roll
fisubrl
leave
add
cmp
out
mov
cli
mov
hlt
adc
push
js
inc
mov
fstps
mov
popf
aas
sub
push
inc
aam
adc
cwtl
nop
test
inc
imul
pop
bnd
xor
push
and
fs
lea
sub
and
mov
shlb
incb
dec
pop
ds
add
cmp
sub
sbb
bound
cmp
imulb
test
in
xchg
and
rclb
xchg
sti
jl
push
sahf
pusha
xor
and
xchg
dec
in
mull
xchg
mov
inc
mov
testb
pop
test
xchg
pop
insb
xchg
or
xor
push
shrl
cs
in
xlat
movsl
xchg
int3
push
and
mov
push
mov
in
subl
pop
sub
stc
and
aam
push
sbb
dec
popa
lcall
insb
sar
cmp
cmpxchg
xorb
mov
adc
insl
xchg
ljmp
mov
mov
mov
enter
in
fidivrl
cmp
lret
hlt
sarb
xchg
loop
je
jmp
lods
scas
out
cs
insb
cmp
inc
xchg
test
xchg
call
insb
and
xlat
mov
push
add
hlt
sub
das
cld
jae
inc
mov
hlt
or
sbb
aad
std
dec
or
inc
mov
xor
xor
push
lea
cmp
mov
mov
bound
xor
icebp
dec
sub
cld
sbb
mull
icebp
xor
jmp
imulb
push
outsb
mov
insl
pop
jg
pop
movsl
sbb
call
sub
xchg
rorb
rorl
xorb
sarb
sbb
mov
pop
hlt
loop
mov
shll
outsl
or
std
aam
mov
sub
lea
mov
cmpsb
movl
xorb
mov
clc
lock
xor
ja
fs
js
pusha
sub
mov
or
sub
fs
test
pop
and
std
lds
add
in
enter
insb
sar
lahf
and
pop
ret
stos
in
fistl
scas
jnp
loope
inc
cmp
or
dec
and
cmpsl
xor
les
aaa
cltd
dec
push
rorb
pop
aad
inc
inc
movsb
scas
mov
xor
jbe
pop
mov
xlat
imul
mov
mov
shlb
pop
ret
test
jg
shrl
fwait
push
fucomp
pop
imul
in
push
jo
dec
mov
push
mov
aad
mov
jo
daa
pop
ret
cmp
iret
adc
cld
add
or
dec
cmpsl
mov
xchg
jnp
loopne
in
call
add
or
inc
sbbl
loope
pop
insl
add
loopne
insl
mov
test
xchg
jo
js
or
je
insl
fisubrl
dec
mov
fdivrl
xchg
loop
xor
pusha
js
aas
jbe
xchg
jmp
adc
mov
insb
leave
pop
adc
xor
ret
pop
add
xchg
movsb
rcrl
ficomps
dec
sub
js
movsb
lahf
popf
sbb
xor
out
icebp
cmp
pop
lds
jb
addr16
xor
push
add
int3
fstp
jecxz
fsub
loop
jecxz
data16
sub
jecxz
leave
adc
inc
outsb
jbe
pop
dec
inc
leave
jb
jle
sub
adc
lret
xor
jmp
shll
jae
jl
lods
lahf
push
push
cwtl
out
jle
xchg
inc
mov
mov
adc
and
mov
fwait
mov
sub
stc
xchg
out
loop
das
out
xchg
insl
call
pusha
jmp
sub
push
sub
pop
popa
rorl
xchg
cmc
js
mov
xor
and
rorb
push
sub
ficoms
test
pop
sbb
mov
mov
sub
jmp
and
dec
fwait
lods
lcall
mov
adc
sarl
push
lret
inc
add
push
xchg
leave
xor
sub
fnstenv
hlt
data16
or
incb
mov
adc
push
jle
aad
test
jmp
pop
imul
pop
add
mov
pop
loop
ret
lock
mov
mov
fwait
mov
mov
aaa
mov
lret
imul
les
aaa
mov
mov
jmp
sub
js
rorl
pop
jns
in
repnz
outsb
lahf
fwait
mov
add
xor
hlt
dec
fidivs
ljmp
call
ss
test
pop
rolb
push
outsb
shl
scas
repnz
mov
cli
adcb
fxch
movsl
add
in
push
sbb
mov
repnz
icebp
and
bound
cwtl
inc
sub
mov
iret
daa
bound
pop
aam
and
mov
lds
jbe
ja
shrl
loopne
call
mov
dec
daa
cmpsl
scas
clc
xor
xchg
mov
cmp
pop
dec
ror
in
cmp
mov
test
add
and
clc
es
mov
xor
into
stos
and
lret
mov
mov
push
dec
out
int
add
xor
jg
mov
sbb
fisubrs
inc
xchg
ret
mov
xor
fsubs
cltd
dec
lcall
xchg
push
pop
mov
icebp
scas
jl
ret
psubusw
aam
or
cmpsl
icebp
mov
xor
test
inc
inc
fwait
push
pop
sbb
rcr
shl
test
loopne
mov
cmp
mov
in
in
stos
clc
mov
ja
gs
ret
sbb
jnp
out
or
loop
xor
enter
mov
jo
pop
push
in
jle
push
dec
hlt
mov
mov
adc
push
and
pop
dec
cmp
cmp
cmp
sub
cmp
dec
dec
inc
sarl
stos
mov
inc
test
int3
push
orl
xchg
arpl
movsl
mov
icebp
or
mov
mov
mov
mov
das
js
mov
loope
fwait
aaa
flds
subb
cmp
xchg
adc
mov
dec
cmc
xchg
test
scas
loop
lret
push
inc
sbb
sub
pop
gs
int3
out
outsb
and
addb
pop
sub
jmp
cmpsb
mov
shlb
pop
int3
inc
add
fcoms
jge
pop
xchg
jne
jae
testl
insb
push
xor
ret
cs
cwtl
inc
adc
ret
jecxz
xor
xor
push
pusha
add
mov
xchg
sbb
or
xchg
add
addl
in
cwtl
test
leave
cli
sub
lret
daa
loope
cmp
sub
aaa
faddl
mov
and
fbstp
sbb
mov
mov
mov
or
jb
addr16
int
imul
test
imul
aam
mov
or
icebp
jle
xchg
mov
frstor
sub
scas
leave
sti
roll
sub
cltd
xor
addr16
lcall
cmp
pop
push
lods
mov
test
lahf
xor
inc
loopne
xor
dec
ja
push
add
in
sbb
and
cmp
pusha
add
ret
sbb
pop
mov
imulb
xchg
addl
mov
aas
les
int
ret
lds
jo
hlt
movb
std
mov
pop
out
clc
outsb
imul
ret
ljmp
pop
pop
mov
movsb
jl
addr16
dec
sub
into
xor
dec
cmpsb
in
aad
push
movsl
les
sbb
inc
inc
add
fbld
pop
add
inc
scas
dec
out
stos
loopne
pop
ja
xchg
mov
into
pop
jnp
pop
out
xor
shlb
scas
testl
mov
in
add
dec
pop
adc
mov
popf
push
add
out
jl
in
js
es
movsl
cmp
jnp
mov
mov
call
fwait
lcallw
mov
mov
fs
mov
adc
iret
xchg
leave
dec
dec
mov
lock
test
out
testb
das
jae
cmc
push
fdivrl
add
sarb
jp
jns
clc
into
dec
test
cmp
sbb
or
xor
xor
mov
shlb
popf
jae
leave
sub
mov
xor
pop
fists
fldl
and
adc
cmp
aad
and
lods
mov
or
add
dec
jbe
leave
xor
adc
sbb
mov
adc
inc
or
mov
pusha
inc
and
sub
inc
adcl
dec
inc
rcrl
scas
stc
test
jno
adc
dec
fs
and
ficomps
pop
mov
jb
leave
outsb
stos
mov
pushf
xchg
daa
pop
imull
cwtl
js
outsb
pop
popa
das
leave
push
adc
dec
bound
and
ds
inc
cltd
ficomps
push
rcr
mov
pop
dec
lea
orl
add
loopne
adc
or
cmpsl
cmp
or
mov
test
mov
fistl
sub
xchg
stc
ds
test
cmp
mov
sbb
enter
loopne
push
hlt
mov
loop
pop
jg
cltd
xchg
jmp
out
sub
nop
int3
jbe
popa
in
dec
cmp
sbb
scas
push
sbb
jne
std
push
outsb
dec
gs
inc
fmul
xchg
aas
pop
leave
pop
xor
adc
rclb
mov
jmp
addl
mov
or
inc
popa
xchg
mov
jecxz
sbb
mov
mov
pusha
mov
loope
jmp
sbb
sbb
sarb
jl
fdivrl
mov
mov
ja
mov
pushf
nop
lcall
inc
xlat
and
popa
addr16
mov
addl
jge
and
and
test
fst
jg
shrb
in
mov
imul
adc
xchg
jp
sub
dec
sbb
aas
push
pop
ljmp
outsb
xchg
adc
dec
inc
int
jnp
lods
jle
xchg
scas
fmull
and
lea
and
jp
in
mov
rorl
xlat
jns
aad
test
int
and
lea
mov
inc
adc
add
in
shrb
popf
sbb
xchg
enter
sahf
and
lea
xchg
rcll
cmp
mov
sub
jl
stos
or
dec
pop
xchg
fstp
les
ja
daa
int
sbb
jnp
je
push
xchg
rcrl
stos
imul
shll
xor
adc
aam
jmp
and
sub
lea
xchg
mov
mov
adc
int3
sub
orl
or
fs
fucomi
push
ss
les
movsl
icebp
cwtl
and
inc
lret
ficompl
jbe
bound
add
jle
push
pop
es
mov
pop
xor
popa
jb
pop
mov
xchg
mov
sub
cmp
scas
leave
int
stc
pop
stc
xchg
into
rcrl
lret
fiaddl
mov
add
das
lret
lret
xor
add
imul
gs
mov
cmp
movsb
and
leave
mov
dec
or
enter
clc
in
cmpsb
dec
pop
and
fmull
xlat
jp
ud2
mov
push
loop
test
sub
jbe
xchg
loope
add
inc
test
into
cbtw
mov
xchg
call
and
pop
outsl
mov
fwait
insl
pop
and
clc
jb
pop
mov
cmpsb
sti
cmp
cmp
hlt
mov
inc
adc
sub
mov
dec
add
mov
cmc
jmp
push
rclb
pop
fidivrs
adc
popa
jnp
xchg
pusha
push
mov
decb
add
dec
push
out
hlt
repz
dec
pop
mov
mov
sbb
cs
push
outsl
imul
clc
repz
repnz
adc
icebp
aaa
faddl
in
mov
mov
addr16
repz
rorb
stc
and
insl
out
mov
lods
fists
lea
sbb
inc
aam
push
pop
addr16
push
pop
cmpsl
imul
sbb
ljmp
jne
mov
push
xchg
or
pop
repz
pop
mov
xchg
xor
inc
mov
dec
mov
inc
sub
repnz
xor
int
repnz
and
push
add
gs
or
into
push
ss
sub
mov
testl
push
mov
push
pop
movsb
and
nop
mov
scas
sti
ljmp
inc
pop
or
dec
and
inc
rclb
or
dec
ljmp
ljmp
xor
sahf
mov
jne
inc
fs
mov
push
mov
cmp
or
lock
lods
insb
iret
xchg
sub
cmc
and
sub
rorl
call
xor
sub
pop
inc
cmp
sub
pop
hlt
out
test
cmc
into
cmp
sbb
xchg
fildl
dec
sub
mov
sub
jge
cs
aas
xor
jo
dec
rorb
add
cmp
aad
fwait
insl
dec
or
cld
daa
fs
lea
iret
cmp
out
js
repz
push
lahf
adc
pop
inc
or
sti
arpl
rorb
and
inc
fcomp
or
cmp
and
xor
jg
idivb
add
je
jecxz
mov
jg
pop
shlb
cmp
xchg
mov
dec
jmp
push
push
icebp
inc
mov
lcall
aam
hlt
sbb
movsl
mov
int3
test
xchg
push
out
inc
lret
inc
repz
xchg
das
adcb
inc
mov
fisubs
fcoml
sub
lock
adc
cwtl
mov
call
mov
dec
pop
scas
sbb
es
es
add
aad
jo
cmp
xlat
xor
pushf
cmp
lahf
and
int
jae
mov
aad
inc
mov
mov
jp
out
in
scas
sub
jl
aas
stos
shlb
and
xchg
dec
outsb
cld
push
and
negb
xor
test
fimuls
sbbb
push
out
dec
test
push
sbb
fwait
mov
ss
imul
in
xchg
pop
and
cmovno
into
mov
xor
mov
or
mov
stos
push
js
sub
mov
jl
cld
mov
insb
dec
popf
out
shlb
push
int3
hlt
mov
jnp
rorb
mov
pushf
lcall
push
or
push
pop
mov
dec
cld
movsb
iret
jne
pop
add
ret
or
cmp
push
push
out
hlt
sbb
ret
aam
std
cmp
movsb
lcall
mov
stos
ljmp
xor
nop
into
inc
lods
pushf
cs
cmp
mov
test
negl
lret
aad
sti
dec
fnstenv
jo
cmp
fsubrp
ret
scas
mov
mov
lret
int3
dec
sub
repz
leave
sarb
xchg
and
scas
pop
inc
push
lds
push
pop
lods
inc
xchg
filds
aaa
into
lret
push
mov
imul
js
out
xchg
loop
test
push
cli
sub
add
adc
cs
orl
adc
inc
xchg
test
jns
mov
xor
sbb
or
gs
pop
jmp
sbb
daa
mov
iret
and
adc
pop
inc
lcall
mov
cmp
mov
push
push
arpl
hlt
ljmp
mov
les
sarl
cmp
and
inc
bound
mov
adcl
and
jge
outsl
subl
lcall
jmp
cmpsb
mov
leave
ja
jmp
scas
mov
mov
adc
adc
mov
mov
std
mov
dec
mov
bound
sbb
mov
adc
mov
adc
mov
popa
and
addr16
mov
cmpl
xor
ret
lret
loopne
or
cmp
ficoml
dec
and
mov
sub
cs
lret
jae
mov
add
insb
mov
dec
cmp
mov
xor
flds
adc
in
outsl
mov
fwait
or
mov
call
lret
push
mov
mov
ljmp
cmc
cmp
sub
pop
jb
sbb
sub
hlt
xor
cli
dec
repnz
call
cmp
jne
xor
lcall
or
push
or
or
jbe
inc
cld
scas
lea
sarl
cli
repnz
pop
push
mov
bnd
repz
lods
aas
sarb
mov
roll
out
in
push
dec
sti
sbb
sbb
and
fs
and
test
mov
ret
dec
jecxz
mov
pop
mov
and
lahf
sti
mov
add
jbe
xor
and
sub
jg
and
push
ror
inc
jnp
inc
mov
out
movsl
cmp
sub
lret
push
sub
or
dec
std
scas
xchg
add
inc
lret
mov
fisttps
gs
jmp
push
mov
sahf
test
imul
push
fsubrs
or
popf
mov
dec
add
pop
faddp
cmp
stc
mov
lds
jnp
ror
lods
jl
cld
jmp
mov
dec
and
jo
test
cmc
adc
out
cli
jb
mov
rcrb
movsl
and
push
mov
add
cmp
sahf
iret
test
mov
inc
ret
add
jae
push
lret
ljmp
or
pop
pop
xor
cmp
xor
push
in
pop
and
xor
nop
mov
mov
xchg
mov
es
int
xor
cmp
pop
dec
in
cld
jno
xor
inc
adcb
adc
bound
xor
dec
pop
cmpsb
pop
lea
addr16
push
mov
iret
pop
mov
push
imul
dec
arpl
add
xlat
adc
imulb
jecxz
adc
in
movsb
pop
in
clc
cmp
es
mov
fisttpll
cltd
sub
push
xchg
pop
sub
pushf
mov
mov
pop
dec
or
jp
dec
sbb
add
push
out
push
push
addb
enter
in
nop
mov
or
iret
in
jae
adc
in
sub
mov
das
xor
push
loop
data16
aad
aam
xchg
xchg
fisttps
cli
cmp
nop
test
dec
mov
scas
cmp
aaa
pop
mov
mov
rcl
mov
test
inc
sbb
rclb
stc
outsb
add
lcall
or
loope
and
loopne
sub
and
lcall
jge
jne
cltd
jge
cmp
mov
inc
js
jne
adc
lahf
sub
cmpsl
push
add
fnstsw
inc
das
push
push
add
adc
cwtl
dec
mov
or
jmp
outsl
sub
data16
loop
mov
movsl
loope
push
aam
push
testl
inc
mov
cmc
outsb
xchg
repz
or
jg
jae
jecxz
and
and
and
popa
ss
dec
jmp
dec
sbbl
dec
cwtl
jge
jg
xor
push
adc
movsl
mov
or
sarl
daa
inc
xchg
cmc
not
jmp
hlt
gs
out
nop
push
cmpsb
mov
add
sbb
repz
dec
push
push
aam
add
push
dec
dec
fstp
in
lahf
rclb
movsb
mov
andl
cmpsl
jmp
mov
cli
xor
call
mov
repnz
push
mov
mov
add
inc
mov
add
sahf
cwtl
test
sub
push
outsb
cwtl
insl
add
test
mov
jbe
push
ja
lret
gs
mov
xchg
sub
push
sbb
jno
in
push
repz
lcall
sub
out
mov
mov
andl
push
scas
push
mov
jns
xlat
nop
cltd
ret
test
imul
mov
insl
cli
movsb
ret
rclb
or
mov
jecxz
in
in
jne
push
xor
pop
add
jl
out
pop
jle
ret
js
push
mov
xor
or
mov
loope
std
orb
int
adc
lret
push
cmp
rorb
xchg
jns
test
test
fsubl
and
pop
test
ljmp
add
cmp
lods
xchg
mov
and
dec
cltd
imul
mov
xor
ljmp
out
int3
mov
jmp
mov
lahf
jns
dec
xchg
sbb
push
mov
enter
push
push
pop
or
sbb
mov
out
jge
js
cmp
cmpsl
das
inc
cwtl
lds
mov
pop
jo
mov
xor
out
jp
adc
cmpl
or
pushf
stos
ljmp
nop
mov
lea
rorb
test
xchg
push
cmp
pop
dec
lock
cmp
shlb
insl
popl
out
mov
mov
xor
add
sti
mov
jns
dec
movsl
adc
mov
clc
imul
and
jno
jnp
ss
mov
mov
lock
lcall
shrb
add
ljmp
push
sub
ret
arpl
push
cmp
fdivr
push
loopne
mov
mov
scas
inc
ss
xor
pop
loop
das
dec
nop
mov
push
es
cmovle
jge
xor
aam
iret
or
add
clc
jmp
cltd
lods
dec
stos
call
addr16
xchg
mov
cltd
adc
cli
xlat
xchg
faddl
ss
add
cs
ficoms
jo
cmp
call
mov
mov
inc
fistps
cli
push
add
addr16
sub
daa
daa
lret
mov
sbb
pop
stos
inc
lods
pop
pop
sti
jae
push
or
movsb
push
cld
sub
add
xchg
inc
out
rolb
hlt
movsb
pusha
arpl
js
push
push
add
add
jecxz
ja
addb
sbb
unpcklps
add
jb
jecxz
jnp
loopne
insl
or
shlb
jbe
mov
insl
clc
cmpw
mov
out
subl
mov
and
add
mov
push
mov
lahf
mov
mov
dec
inc
aaa
push
mov
sbb
repz
pop
aas
pop
shr
adc
mov
cmc
add
and
mov
in
add
mov
aas
mov
cs
in
sub
dec
outsl
xchg
xchg
adc
iret
pop
icebp
loope
push
mov
add
loope
clc
pop
lahf
xchg
mov
pusha
mov
lds
mov
mov
ja
mov
test
cmp
sbb
stos
stos
push
pop
adc
stc
add
jp
add
xchg
jo
pop
insb
in
and
fcomps
popf
xchg
jmp
js
aaa
cli
loope
cmp
jg
outsb
and
in
popf
xchg
movsb
aas
sub
adc
in
stos
call
das
test
nop
sti
dec
stos
jge
jmp
and
ret
das
test
push
cmpsl
push
repnz
cld
fidivs
cs
pop
das
loopne
push
ret
jo
call
jb
fs
shll
pop
out
mov
mov
jbe
and
icebp
xchg
in
inc
dec
outsb
rclb
aam
cmp
sbb
xchg
pop
xor
sub
xchg
repnz
cwtl
movsb
mov
cmp
mov
xor
jae
jbe
xor
cmp
xor
mov
sbb
mov
inc
cmp
mov
dec
sub
jb
out
pushf
mov
sub
mov
xchg
ljmp
sub
jno
daa
test
andl
cmpl
pop
xchg
ss
inc
ss
mov
out
lret
ret
lahf
jne
mov
outsb
mov
lock
mov
pop
cli
mov
insl
cmp
jge
mov
jmp
repz
mov
fwait
repnz
cld
pop
xlat
pop
les
cld
and
call
sbbl
outsl
sub
jge
nop
cs
inc
ret
add
clc
ds
hlt
dec
jle
out
call
sub
push
mov
rcrb
stos
les
push
pop
lds
js
mov
je
mov
mov
ja
stos
fcomps
fs
movsb
jnp
mov
pop
or
mov
mov
adc
push
xchg
dec
ljmp
cltd
sub
out
fadd
cmp
ja
pop
daa
cmp
out
andl
push
testb
sub
jp
inc
movsb
movsl
ret
cmp
cmc
and
or
mov
bound
mov
mov
out
ret
jo
add
push
aad
mov
pushf
ljmp
imul
ja
mov
stos
aaa
jb
fwait
xor
add
sub
jp
int3
mov
mov
test
ret
push
dec
mov
or
mov
inc
popf
pop
mov
fists
push
dec
inc
inc
std
pop
adc
test
call
jle
mov
push
inc
inc
push
add
adc
stc
pop
mov
cmpsl
addr16
out
ds
inc
jle
lret
mov
push
cmp
shll
sub
lods
mov
jb
aad
test
fwait
sahf
push
in
lcall
outsb
leave
cltd
cmpsb
aas
sbb
inc
mov
mov
jecxz
push
outsb
sahf
nop
sub
or
fidivs
adc
ja
dec
mov
sbb
adc
cli
lods
loope
loopne
cltd
sti
mov
into
ret
mov
test
push
jns
add
mov
mov
mov
cli
rorl
dec
fchs
mov
popa
in
cli
fcmovne
dec
scas
bt
imul
int3
fisttpll
xor
iret
mov
loop
xchg
cmpsl
addb
pop
push
sub
pop
cs
cmp
or
jne
pop
out
jmp
or
sub
shll
ds
loopne
xchg
subl
add
pop
pop
scas
cwtl
cmp
scas
mov
or
fnsave
mov
sbb
jp
into
out
cltd
shrl
loopne
in
and
inc
lock
jle
jmp
pop
sub
mov
pop
outsb
or
push
stc
xlat
xchg
or
stos
cmp
xor
outsl
into
leave
faddl
dec
or
sub
leave
inc
inc
fadd
pop
inc
ja
inc
inc
add
mov
movsb
push
repz
shrb
pmulhuw
mov
push
sarb
rcr
xorl
jae
mov
or
repz
call
pop
in
pextrw
in
mov
in
inc
ds
ds
in
mov
daa
adc
fisubrl
xchg
adc
int
dec
mov
rolb
rolb
xor
in
push
test
inc
sub
ds
push
or
or
pusha
xchg
fs
cmpsl
and
push
dec
lea
push
rclb
lds
fcompl
mov
xchg
jo
and
iret
sti
push
sti
mov
or
xchg
add
mov
gs
into
inc
cmp
cmp
jmp
xchg
inc
or
mov
mov
in
pusha
into
add
xchg
xorb
std
or
in
das
xchg
fcoms
inc
test
or
je
out
mov
lcall
sub
movsl
cmpsl
push
pop
out
push
mov
xchg
add
adc
jbe
jne
lea
jno
les
sbb
xchg
inc
cmp
push
xchg
scas
dec
jecxz
repz
faddl
movsb
int3
lret
imul
jnp
stos
ds
push
xor
cwtl
arpl
test
xchg
jmp
push
mov
in
or
inc
adc
outsb
dec
adc
insb
fs
pop
jecxz
clc
lret
cs
mov
pop
cs
ret
mov
inc
cmc
repnz
pop
imull
mov
sahf
push
rorl
pop
dec
test
push
lock
and
jg
xlat
ss
lea
dec
testb
fsubs
int3
mov
push
inc
popa
or
xchg
push
jae
ljmp
test
cwtl
adc
add
popf
leave
out
pop
lea
push
inc
mov
into
jb
push
in
iret
jge
push
into
mov
shrl
nop
xchg
in
in
adc
add
popf
cmp
and
xchg
push
shlb
and
ljmp
pop
push
fisubrl
popa
sub
ds
int3
ret
pop
push
jno
in
sub
test
cmp
pop
imull
das
jno
insl
mov
adc
xor
xor
in
jge
mov
jb
ficoml
ret
and
mov
cmp
mov
lods
enter
jge
mov
xlat
dec
ds
out
pop
or
inc
fcoms
inc
cltd
sub
gs
cli
mov
pushf
pushf
dec
mov
testl
and
adcl
cmp
je
movsl
cli
mov
push
xor
das
pop
cwtl
aad
adc
add
imul
mov
sbbb
push
cmc
std
mov
ja
inc
enter
jae
or
mov
jno
xchg
fwait
jp
fdivr
test
ja
add
cmc
popa
jmp
dec
cmp
test
fs
out
cmp
or
pop
stos
fnstcw
push
jg
push
movsl
ret
jmp
sbb
cli
test
sbb
in
sbb
jnp
cwtl
cld
xor
push
dec
into
fadd
emms
scas
mov
cmp
mov
movsb
pop
fdivr
xor
jne
stc
das
adc
dec
jae
cmp
adc
mov
lods
test
out
sub
jle
mov
lahf
inc
mov
cwtl
movsb
sbb
mov
inc
cli
xchg
cmp
xorb
popf
mov
rcrl
mov
ficompl
pop
xchg
aas
filds
mov
mov
scas
inc
pop
add
insb
inc
and
sbb
dec
add
int3
daa
scas
aam
jp
arpl
jb
gs
pop
mov
push
iret
xchg
push
push
cmp
mov
insb
int3
in
adc
inc
shll
sub
fdivrl
pop
adc
mov
jl
mov
adc
stos
mov
inc
inc
clc
lods
inc
jp
hlt
mov
xchg
or
sub
test
mov
pusha
push
testb
ss
xor
addr16
hlt
loopne
jno
repz
pop
arpl
jbe
outsl
stos
in
rcl
or
scas
sbb
dec
pusha
sbb
or
xor
scas
mov
sahf
mov
aam
sbb
rolb
in
dec
dec
stos
pop
xchg
adc
push
dec
mov
cmp
mov
das
lcall
add
stos
mov
xor
imul
sub
das
iret
mov
nop
fimull
fcomp
add
lcall
es
lea
xor
ljmp
int3
pop
out
fisubs
jne
jle
pop
push
lahf
push
leave
daa
pop
mov
repz
mov
call
nop
aad
inc
in
fldl
sbb
pop
or
pop
mov
adc
push
dec
lret
adc
add
inc
sahf
sbb
prefetch
xor
fnsave
xchg
mov
push
mov
xchg
dec
fisubl
pop
aas
lahf
pop
leave
jnp
jmp
sub
adc
int3
subl
and
fcomip
enter
hlt
lods
pop
rorl
push
jle
xchg
jl
in
aaa
mov
ljmp
or
or
xchg
lret
lcall
rep
jmp
stos
rcl
mov
pushf
sbb
mov
stc
jnp
les
aaa
jl
dec
sbb
je
iret
aaa
imul
inc
or
adc
or
cmpsb
mov
push
mov
pop
out
jle
dec
mov
fstpt
cltd
addr16
movsb
ja,pt
jae
lds
stos
jns
stc
mov
inc
sarl
cltd
inc
sti
or
jg
loop
insl
clc
pop
scas
dec
xchg
movsb
popf
push
dec
adc
aaa
xor
fmul
aam
cli
leave
loop
pextrw
test
inc
mov
cmpsl
fsts
mov
ficompl
ja
pushf
mov
data16
mov
dec
ds
mov
shrb
mov
xchg
push
mov
dec
xchg
cmp
sbb
xchg
mov
push
pop
sti
in
int3
xchg
je
scas
jl
xor
insl
dec
or
xor
imul
pop
adc
shll
add
xchg
mov
into
stos
test
jg
inc
pop
adc
sbb
adc
popa
and
push
sbb
dec
iret
xorl
pop
nop
push
hlt
gs
xlat
sbb
push
jmp
aas
mov
cmp
imul
aas
rclb
clc
fstpl
sti
ror
movsl
or
xchg
xchg
leave
fcomi
xchg
gs
or
jle
aad
aad
dec
jnp
inc
mov
sti
js
sbb
mov
and
mov
lahf
ret
push
push
jecxz
and
and
outsb
stos
pop
cs
mov
add
mov
add
js
enter
dec
cmp
les
xchg
jnp
or
push
cld
mov
cltd
sub
dec
js
mov
dec
pop
pop
scas
loop
xchg
fildll
ficomps
lahf
add
xchg
ret
cmpsl
cmp
xchg
cld
mov
daa
or
cmp
test
push
pop
stos
mov
cmpsl
subl
xor
test
ja
jae
inc
and
fwait
xor
outsb
enter
or
mov
sub
fucom
repnz
add
lahf
and
daa
mov
test
cmp
mov
mov
dec
punpcklwd
mov
fcompl
andb
mov
push
lret
cld
and
mov
jb
stos
cmpsl
mov
jp
cmp
and
cltd
in
pop
ja
insb
test
outsl
icebp
cmpsb
xchg
push
mov
adc
xchg
shrb
out
loopne
pop
rcrl
push
mov
js
pushf
icebp
mov
iret
lods
or
and
mov
jnp
xor
shrb
xor
pushf
ret
dec
mov
divb
xlat
sbb
dec
sub
and
stc
loop
aas
mov
push
sub
sbb
out
int3
shll
lret
inc
dec
adc
jl
mov
stos
das
xchg
sbb
movsb
adc
jp
fstp
outsl
inc
dec
and
in
mov
xchg
push
add
gs
daa
xor
mov
inc
movsb
popl
push
insl
rcrl
jmp
fidivl
push
and
pop
into
push
sub
shr
pop
test
enter
sub
jecxz
mov
cmpsl
rolb
lret
xchg
ficomps
scas
lds
adcb
nop
mov
push
lock
nop
jge
ja
or
and
inc
dec
dec
outsl
movsb
bound
sbb
push
rcrb
xchg
imul
jle
and
inc
es
dec
pop
mov
mov
mov
stos
pop
push
dec
loope
xor
aaa
mov
sbb
stos
iret
or
jle
xchg
jmp
push
mov
cltd
shlb
or
dec
cmp
cltd
inc
loop
and
call
es
xor
dec
lret
out
movsb
into
mov
mov
adc
push
movsb
aam
push
sub
adc
xchg
hlt
xor
mov
pop
jne
mov
adc
outsb
js
sub
lock
adc
dec
jo
adc
sbb
push
les
xor
jmp
push
or
das
lret
and
push
xor
or
cmp
fsts
mov
cs
hlt
sub
arpl
fstpt
ret
inc
xor
mov
in
jns
out
lcall
insl
pushf
add
xor
repz
pop
aad
push
loope
adc
push
jb
pop
test
jmp
insl
pop
adc
out
scas
xor
adc
div
imul
cmp
pop
mov
mov
xchg
sbb
and
sahf
in
lahf
arpl
clc
enter
data16
jbe
cli
mov
jg
mov
mov
fstpt
or
test
in
add
loopne
cmp
and
subb
cld
cs
cmpsl
pop
gs
xor
adc
ret
pop
xchg
push
movsl
push
add
orb
mov
loop
mov
lahf
inc
iret
and
aam
stc
call
mov
sar
pop
sbb
addr16
je
stc
jp
je
or
arpl
push
cmp
jno
mov
push
lret
mov
dec
or
pop
jns
int
aam
js
shlb
fnstenv
sub
cs
and
push
pop
jp
mov
cmp
lret
xchg
sbb
xor
jb
push
ja
ret
pop
scas
data16
fsubrl
mov
loop
pop
ds
fcmovne
sbb
out
leave
clc
pop
and
rcl
xor
fwait
mov
dec
fwait
jmp
add
loop
mov
jbe
jae
inc
pop
out
adc
jmp
addb
dec
in
jo
lods
mov
xor
and
lret
sub
mov
shll
mov
addb
pop
loopne
cmp
imul
daa
mov
jb
jl
pop
push
push
xchg
jo
xchg
and
insb
psubusb
sbb
jle
mov
mov
push
or
adc
fdivs
stc
and
push
dec
jae
ja
outsl
das
jae
aam
out
mov
xchg
push
out
sbb
andb
ficomps
and
xchg
inc
cmpsl
cmp
incb
movsb
jae
fsubr
fwait
push
xchg
lcall
jp
xchg
or
push
cmpsl
lret
mov
ds
test
cmp
popw
jge
mov
pop
xchg
push
inc
fcomps
mov
dec
inc
or
cmp
sbb
aaa
lahf
test
idivb
loopne
adc
mov
adc
mov
jae
inc
shl
ja
pop
hlt
sub
arpl
imul
inc
sbb
shll
cmp
lret
or
inc
movb
cmp
mov
mov
fdivrs
stos
mov
push
repnz
mov
xchg
cmp
mov
push
mov
aaa
ret
int3
mov
jmp
aas
mov
inc
mov
push
pop
outsb
mov
jle
dec
fnsave
aas
and
or
je
ljmp
cmp
in
mov
pop
ss
aad
lcall
sbb
and
daa
out
mov
stc
shr
jmp
pop
sbb
pop
jp
mov
ss
lea
xor
xchg
int3
shlb
pop
mov
outsb
fistpl
cmp
pop
test
xchg
pop
and
clc
nop
lods
bound
mov
mov
pop
fwait
ret
rcrb
dec
cmpsl
ss
hlt
inc
cmp
cmp
cmp
fwait
add
sub
les
or
adc
and
aad
lods
movsb
mov
fildll
test
js
test
xchg
movsl
jbe
sbb
mov
dec
dec
xchg
repnz
pop
lods
ds
dec
dec
xchg
add
fsts
mov
test
popa
xor
movsb
fucomi
pop
lret
xor
and
mov
subb
mov
push
cs
and
loope
or
stos
int3
and
pop
dec
mov
or
cltd
push
das
pusha
in
mov
add
xorb
iret
pusha
pusha
pop
mov
and
cmp
dec
mov
lock
outsb
movsl
test
jo
jne
sbb
out
popl
insl
lcall
or
push
dec
cmc
cli
and
mov
push
fcomip
mov
cmc
sti
xchg
dec
lock
cmp
lds
jo
add
sti
in
mov
pop
popf
adc
jno
into
cmc
lods
in
idivl
subb
add
or
mov
push
hlt
jle
out
stc
xchg
jo
jne
mov
roll
loope
cmpsl
mov
pop
mov
fsubs
inc
mov
cmpsl
mov
out
pop
xor
mov
stos
inc
popf
into
add
mov
in
dec
push
xchg
nop
loop
push
adc
xchg
int3
out
outsl
faddl
dec
call
cld
add
jmp
cmc
insb
roll
pop
je
pop
cltd
fs
mov
add
mov
inc
cwtl
xchg
fcompl
in
mov
push
adc
cmp
inc
bnd
xchg
imull
mov
call
add
lret
adc
sbb
sbb
fwait
adc
fidivrs
mov
iret
dec
lret
in
jbe
jl
fnstsw
inc
xchg
jle
and
xchg
shrb
add
jnp
popf
cmp
test
loopne
ss
fwait
sub
int3
loop
push
lcall
fdivs
xchg
shlb
and
pop
push
test
daa
stos
int
arpl
stos
mov
add
cmp
add
add
push
test
sar
fwait
pusha
inc
mov
ret
dec
test
cmp
imul
jo
inc
pop
sbb
xor
jmp
xchg
in
cs
cmp
iret
pop
jecxz
out
jg
add
lret
sahf
dec
cwtl
adc
adc
cmp
decb
test
insb
repz
sarb
push
cmc
pop
ret
call
add
jo
imul
icebp
push
addr16
repz
rclb
call
mov
xlat
cli
sub
inc
sahf
dec
push
loop
cmp
push
cmpl
mov
pop
call
inc
adc
out
sbb
in
test
mov
sahf
and
mov
bound
shll
adc
mov
cmp
cmp
inc
aaa
dec
xchg
xchg
out
fisttpl
mov
mov
and
pop
pop
movsb
cmp
ret
pop
mov
test
pop
outsb
sub
mov
je
push
mov
lcall
pop
fwait
push
dec
aam
push
inc
movsl
sbb
mov
js
xchg
cmc
inc
jle
cmp
movsb
test
scas
sbb
mov
out
stos
test
stos
push
fldl
mov
scas
cwtl
jmp
mov
call
int
xchg
mov
push
rolb
imul
mov
lea
mov
mov
push
sub
fwait
mov
dec
gs
or
shlb
fdivs
mov
xor
push
mov
es
jb
ds
lcall
ja
mov
lods
js
fstps
pop
dec
loope
jb
cs
xchg
into
mov
inc
pop
fwait
das
sub
xchg
mov
mov
jno
push
sarl
sbb
pop
nop
rorb
pop
mov
pop
xor
ror
dec
mov
mov
xor
pop
scas
adc
inc
or
insl
ret
pop
jp
loope
adc
mov
jp
add
xor
and
sub
negl
frstor
pop
or
push
pop
outsb
jp
ss
mov
cwtl
in
das
sub
sahf
sub
fs
pop
int
insl
or
rorl
dec
xchg
add
pop
sbb
imul
getsec
testl
fisubl
lcall
mov
negl
mov
inc
dec
aam
mov
popf
fstpt
jl
aaa
xor
pop
mov
adc
orb
and
stos
add
xor
mov
mov
add
rorb
call
mul
mov
loop
mov
cmpsl
xchg
jne
ja
and
adc
bound
clc
js
adc
pop
gs
mov
xor
push
mov
mov
fwait
jecxz
mov
gs
leave
push
scas
fiadds
sub
nop
sub
out
jbe
loop
push
xchg
dec
jne
ja
mov
mov
jg
jle
mov
inc
ret
dec
pop
fimuls
in
lock
in
push
jno
cmp
sub
xlat
inc
sbb
inc
js
ret
es
adc
pushf
neg
dec
mov
aas
clc
idivb
mov
and
or
into
mov
and
mov
repz
orb
jmp
xchg
testl
out
cmpsb
inc
and
rorb
push
jp
jns
pop
xchg
cld
fcomip
mov
jmp
imull
sub
inc
das
dec
gs
xor
addb
data16
lret
push
lea
lds
jle
mov
jg
jge
sarb
lock
xor
push
and
and
jl
popl
aad
mov
xor
adc
aaa
je
mov
xor
les
imul
fsubrl
xor
lret
xchg
cli
pusha
dec
dec
and
fs
pop
adc
in
faddl
pop
ds
xchg
addr16
mov
jb
fbld
ret
adc
jmp
out
and
mov
or
adc
movsl
sub
mov
stos
xchg
hlt
aaa
adc
sbb
in
pop
fdivrl
flds
add
sub
jbe
stc
jno
push
push
adc
xchg
sarl
pop
mov
mov
sbb
mov
mov
cli
filds
push
les
xchg
mov
leave
fiadds
outsb
imul
and
mov
or
adc
loopne
cmp
xor
jmp
movsl
in
clc
mov
imull
sbb
cmpsb
rcrl
clc
mov
mov
push
dec
jno
pop
cmpsl
ds
push
dec
jbe
subb
ficompl
bnd
xchg
add
push
push
push
cmp
adc
enter
jmp
mov
dec
add
nop
xor
in
dec
pushf
cmp
out
and
jg
in
mov
mov
push
iret
jg
dec
pushf
std
out
in
je
mov
fdivrl
lods
orb
cmp
mov
sarb
ss
pop
loop
jmp
add
inc
movsb
adc
cmp
xchg
or
sub
sub
bound
xchg
add
lahf
jp
sahf
jp
push
or
jecxz
arpl
mov
pop
out
or
xrelease
fists
loop
add
stos
adc
ss
inc
mov
fmuls
int3
shlb
push
xchg
pop
add
push
jge
sub
sbb
sti
orb
sub
jg
cmc
in
cmp
push
mov
inc
jbe
and
and
daa
pop
mov
adc
repnz
or
icebp
pop
xorb
pop
outsb
out
jle
pop
lea
ds
cmp
sub
xor
pop
lods
data16
lret
sbb
cld
orl
sbbb
pop
rcrl
push
sbb
xchg
jns
sub
cmp
mov
imul
and
adc
inc
mov
test
jp
and
popa
cwtl
aas
repnz
test
outsb
jmp
test
cmp
shl
rcr
subl
ds
xor
in
rcll
leave
bound
or
mov
shll
popf
mov
push
mov
mov
cmp
pop
push
mov
xchg
jge
icebp
pop
and
stos
pop
inc
in
icebp
out
or
adc
aaa
dec
lret
mov
pop
cmpsb
jo
pushf
ret
aaa
jo
lret
jmp
adc
xchg
cmp
jl
addps
pop
pop
mov
mov
mov
push
jbe
pop
sbb
pop
or
cwtl
lods
mov
fsubs
lcall
jbe
dec
lea
mov
test
and
mov
das
adc
pop
insb
xor
notl
inc
loop
adc
cltd
pop
jecxz
out
fistpll
in
sub
jmp
inc
pop
sti
pop
cmpsb
cmp
aaa
pop
add
ds
or
lcall
aaa
cmp
dec
daa
bound
or
rorl
adc
xchg
sub
mov
das
xchg
xchg
repz
rorb
repz
inc
pop
arpl
pusha
adcl
dec
jg
rclb
enter
cmp
xor
dec
cld
shll
fistps
jmp
in
insb
xor
adc
xor
add
mov
sarb
clc
gs
mov
arpl
sbb
mov
into
cmp
xor
stos
testl
adc
insl
adc
fsubl
xor
out
pop
repz
pop
cmpsb
imul
pop
rcll
or
movsl
in
mov
sub
sbb
add
dec
mov
jmp
test
ret
into
sub
push
mov
push
sub
mov
mov
das
outsl
ja
fidivrs
ret
aaa
aaa
xor
sbb
sub
popa
cmp
cmpsl
pushf
cmp
pop
push
scas
cs
fistpl
push
fs
fwait
rolb
inc
iret
fdiv
in
dec
vpminsw
mov
jns
mov
or
pop
push
jae
ss
adc
repnz
mov
je
ficompl
iret
movsl
dec
and
push
inc
stos
test
dec
push
lock
imul
pop
in
rcr
out
imul
sub
mov
cmp
repz
ss
push
push
inc
xor
enter
dec
dec
and
outsb
ds
int
es
adc
add
subb
xor
push
hlt
in
inc
push
fs
jp
adc
hlt
lds
xchg
mov
ds
je
adc
stc
shlb
sub
loop
mov
hlt
subb
cltd
std
mov
jae
dec
lret
mov
addr16
inc
orl
dec
repnz
sti
icebp
filds
cmp
adc
imul
sbb
pop
mov
stos
shlb
stc
sub
lds
je
lret
sub
outsb
xchg
lods
enter
test
cmp
gs
mov
and
add
int3
mov
sbb
adc
sti
int3
test
insl
push
fcomi
call
or
sarl
dec
push
inc
pop
sbb
sub
cs
loopne
sbb
test
dec
pop
pop
rcll
movl
jns
sub
cmp
lds
xchg
scas
in
jne
repz
mov
inc
mov
xor
cmc
std
jb
or
popf
xor
sarb
mov
pop
out
mov
cmpsb
and
and
iret
and
mov
adc
in
xlat
pop
insb
repz
flds
outsl
aaa
test
add
push
lahf
and
hlt
repnz
mov
nop
popa
loopne
xchg
inc
jl
jle
inc
sbb
pop
mov
push
add
jge
mov
sub
push
adc
mov
notl
xor
xor
sub
adc
popf
add
jnp
mov
int3
adc
push
add
inc
movsb
and
imul
sbb
popa
aaa
sub
mov
xor
sub
push
js
out
rcrl
leave
push
mov
pop
cmp
std
stc
loopne
xchg
or
pusha
jge
dec
mov
push
outsb
test
mov
movsl
adc
jne
pop
sub
mov
jle
je
enter
sub
aam
incl
or
mov
xor
jle
jno
jmp
fsts
lods
cmp
mov
mov
pop
mov
pop
sbb
sahf
add
stc
jp
or
popf
jns
lahf
xlat
into
xchg
mov
mov
lods
loope
cmpsb
lahf
or
mov
filds
mov
sbb
inc
cld
pop
jp
sub
mov
scas
pop
ffreep
jmp
mov
inc
pop
mov
aas
pop
add
dec
popf
inc
and
cmp
clc
sti
ds
sub
test
imul
leave
nop
enter
dec
push
cmpsb
lret
das
push
movsb
xor
pop
jno
mov
roll
cltd
sub
mov
jecxz
cmpsb
dec
push
cmpsb
dec
or
insb
aam
ss
jge
add
je
stos
test
cmp
mov
jns
test
pushf
mov
gs
sbb
cmpsb
add
andb
jp
push
aas
dec
lcall
mov
jnp
cmpsb
dec
dec
pop
pushf
and
ja
push
push
jno
jge
in
js
xor
xchg
ljmp
dec
mov
mov
cmc
dec
sbb
insb
mov
cmpsl
repnz
fwait
sub
mov
dec
int3
xchg
or
or
test
dec
sub
lods
pushf
stc
push
pop
pusha
or
jl
xor
sub
inc
mov
lcall
mov
stc
cmc
stos
xchg
lcall
cmp
push
pop
int3
xchg
inc
fildll
movsl
inc
je
add
jne
cmp
push
dec
pushl
mov
jmp
shlb
lret
pop
xchg
andl
push
in
adc
mov
lea
push
xlat
rcll
mov
add
jbe
xchg
les
mov
jnp
int
sbb
pop
pop
jmp
jmp
popf
iret
ret
cmp
cwtl
scas
orl
shrl
jecxz
mov
lea
or
push
pop
cmp
insl
push
jne
testb
adc
jle
mov
add
sbb
fistpll
rcr
xchg
cli
mov
sbb
xor
stos
out
cmp
cld
cmpsl
imul
test
add
xchg
repz
sbb
lahf
push
orl
fildll
adc
cmp
jbe
in
nop
cmovp
sub
jle
mov
ds
pop
imulb
xchg
in
orb
mov
fdiv
test
jecxz
sbb
mov
decb
arpl
and
mov
jbe
std
test
mov
cmpsl
mov
fldenv
hlt
repnz
dec
in
pop
neg
push
sub
daa
mov
leave
mov
aas
call
lret
mov
aas
sbb
sbb
cmp
sarl
shrb
or
adc
lret
mov
push
insl
mov
xchg
pop
lds
arpl
enter
pop
jp
push
adc
dec
fmul
cmpsl
lcall
iret
outsl
xor
out
jle
test
sbb
xor
pop
clc
loopne
adc
lcall
mov
movsb
push
and
sub
mov
aam
cltd
mov
xor
mov
mov
xchg
sub
test
or
xor
mov
cli
leave
gs
cmp
cmp
subb
loopne
gs
ljmp
rcrl
adc
icebp
pushl
add
mov
dec
xchg
pop
pop
pop
cli
insl
or
stos
divps
jno
js
pusha
mov
adc
push
clc
add
add
je
in
loopew
shrl
dec
js
or
or
into
adc
notl
dec
mov
add
mov
out
xchg
fnstenv
sti
mov
adc
adc
sbb
pop
sub
pop
fsubs
pop
stos
pop
mov
fcomps
xchg
aam
mov
pop
or
call
fistps
enter
aaa
xchg
adc
dec
mov
lods
push
aas
push
mov
push
xchg
lock
in
fiadds
mov
jbe
popf
dec
push
loope
cwtl
mov
dec
or
les
popf
imul
mov
ds
cld
sub
or
frstor
dec
movsb
push
xor
push
pop
faddl
sarl
les
shrl
inc
and
push
int
leave
inc
notl
push
mov
cmp
lods
scas
xchg
aam
incb
repz
add
sub
xor
ljmp
adc
fwait
fwait
loope
xchg
jnp
add
das
mov
lea
xorb
xchg
cmpsw
lods
xor
stos
jl
int3
andl
xor
shrb
jnp
clc
gs
inc
pop
mov
and
sub
push
push
push
xor
mov
hlt
nop
nop
jb
xchg
ret
pop
jmp
sbb
in
inc
sub
inc
sbb
pop
jg
enter
mov
sub
lock
push
mov
rcll
ret
mov
cwtl
push
rcll
test
mov
loop
addr16
in
add
mov
lock
cmp
pop
jae
ja
dec
adc
and
lods
mov
or
insb
aas
jle
adc
test
call
in
mov
add
mov
fiaddl
and
xor
movsl
pop
lret
fildl
inc
and
xchg
mov
lret
fs
lret
jl
nop
dec
mov
xor
and
loop
xor
call
sbb
sub
dec
mov
sbb
andl
and
push
mov
push
jmp
mov
sti
xchg
pusha
dec
mov
or
scas
sbb
sti
push
scas
cltd
loop
pop
cli
push
out
iret
popf
push
push
es
sbb
pop
jmp
pop
fdivrp
inc
aas
pop
add
sti
stc
add
jns
jmp
mov
cmp
push
ror
jo
movl
push
cmpl
lret
lock
imull
stos
stos
les
pop
pusha
mov
fsub
sub
adc
and
jmp
ss
adc
cmp
cmpsb
xchg
dec
push
les
pop
inc
mov
jge
inc
add
pop
jne
cmp
jle
xorl
mov
stc
xchg
fistl
adc
or
test
mov
and
jb
roll
or
daa
mov
test
stc
xor
push
mov
mov
or
add
imul
xor
lcall
and
xchg
jmp
pop
fisubs
jae
xchg
lea
cli
xor
je
rcrl
shll
xlat
mov
sbbl
loope
cmpsb
std
sub
shll
mov
ret
ss
push
ss
mov
outsl
push
and
mov
or
leave
cmpsl
add
xchg
rorl
loope
gs
mov
sub
cmp
jle
and
imul
mov
enter
cmpl
inc
add
mul
int3
mov
xchg
dec
or
jbe
outsb
xchg
insb
sub
adc
dec
jp
data16
shll
xchg
mov
data16
testb
mov
push
push
hlt
outsl
movsl
mov
faddp
xor
lods
sbb
sarb
js
pop
pop
add
add
clc
aam
pop
icebp
and
push
cmp
ja
imul
dec
int3
mov
inc
mov
mov
imul
push
dec
arpl
jmp
cmc
sub
push
jo
inc
aam
adc
xchg
lds
lea
jb
push
cmp
fldt
std
lods
inc
fcompl
jns
js
xchg
js
ret
aaa
push
jg
stos
sub
or
hlt
gs
fsubr
xchg
fstl
mov
or
stc
repz
fsub
int
sbb
insb
mov
mov
fisubl
shl
or
mov
insl
into
dec
fdivrs
or
cmpsl
sub
pop
and
pop
xchg
in
sub
mov
cmpsl
pop
dec
stos
dec
sbb
mov
mov
pop
loop
insl
in
push
cltd
das
movsb
aam
cwtl
mov
scas
neg
sbb
lcall
into
mov
jbe
jle
mov
ret
xchg
mov
pop
stos
leave
cwtl
add
mov
jne
adc
xchg
mov
pop
sbbl
cmp
push
nop
mov
into
pop
std
lret
mov
sub
mov
inc
stos
dec
or
or
repz
insb
aaa
mov
mov
or
ljmp
cmp
dec
shl
jl
jmp
cwtl
fnstenv
mov
or
xor
out
xchg
test
push
push
xor
sahf
mov
cmc
lret
cmp
and
jmp
inc
mov
mov
inc
cld
insb
cmp
jl
jl
imul
imul
mov
icebp
xchg
scas
jns
sarb
mov
pop
sub
mov
lds
into
hlt
cmpsb
add
jge
in
lods
es
xor
mov
stos
jp
aaa
lock
jmp
test
das
mov
stos
pop
or
pop
lcall
cltd
ljmp
sub
rcrl
std
shrl
std
stos
jge
push
mov
cmc
jne
shrb
xor
dec
cli
xor
sub
jae
int
aaa
icebp
cmp
dec
xchg
shll
pop
and
fdivl
sarl
loop
xchg
xchg
jne
cmp
jp
inc
movsl
inc
pushf
add
jno
xchg
cmp
sub
mov
mov
push
sub
ds
jae
ss
mov
mov
std
jge
mov
cmp
add
jle
test
cld
ret
mov
fmull
fistpll
clc
insb
inc
sarl
fcoml
xlat
daa
ret
xor
leave
jmp
clc
cs
pop
push
pop
loope
ret
arpl
cwtl
addb
ljmp
mov
vpavgw
sub
loope
jbe
xor
sbb
fcom
and
sbb
in
out
imulb
push
das
adc
int
ss
add
popa
pop
andl
mov
ljmp
sub
outsl
xchg
xchg
jp
push
andl
mov
int3
popf
ds
sbb
pop
es
addr16
mov
cli
out
push
dec
sub
inc
dec
incb
xor
cmp
lahf
out
mov
xchg
mov
mov
testb
and
xlat
lret
sbb
cltd
mov
pop
xchg
sbb
lret
in
fnsave
shr
cltd
es
dec
xchg
andb
and
ds
ret
and
pop
popa
cmp
shl
sbb
xchg
jo
or
mov
inc
mov
inc
sti
cmp
and
in
in
leave
andb
loop
scas
or
fisubrs
jecxz
jle
rclb
xor
loop
in
cwtl
sbb
jmp
jl
lret
push
and
imul
adc
int3
mov
fidivl
mov
push
mov
mov
aam
popa
fidivrl
mov
inc
cmp
push
mov
cmp
loop
cltd
mov
mov
int
and
jnp
shrl
cmp
aas
into
cli
rcrb
xor
mov
xchg
dec
repnz
mov
pusha
xor
sahf
movl
fadd
jmp
imull
pop
dec
mov
mov
inc
sub
push
loopne
mov
call
pop
sbb
or
cmpb
pop
gs
aaa
jmp
mov
mov
subl
jmp
and
out
and
mov
jl
mov
adc
xchg
lcall
pop
mov
push
mov
loop
pop
sbb
sub
add
rclb
in
sub
cmpsb
out
mov
push
mov
pop
lods
sysexit
aam
fwait
cld
lret
stc
hlt
sti
cld
adc
jg
arpl
mov
sub
stos
xlat
mov
dec
inc
add
mov
mov
lahf
lds
add
in
mov
mov
sub
sub
stos
rep
or
push
sub
adc
outsb
mov
sti
in
fbstp
inc
je
push
out
pusha
lods
inc
mov
xor
push
push
pusha
xor
je
das
jmp
add
daa
push
xor
inc
push
mov
ret
jmp
enter
lcall
mov
or
popa
inc
or
outsb
les
loopne
ja
mov
addr16
popa
inc
mov
mov
movsb
ja
sbb
pushl
mov
pop
sub
div
filds
mov
jb
movzwl
xor
jle
dec
ds
lcall
out
adc
testl
aad
pop
out
pop
dec
pop
mov
imul
fs
andl
bound
add
mov
outsl
adc
inc
stos
adc
and
lret
stos
sbb
xlat
in
fcmovne
adc
mov
push
es
jg
dec
adc
call
into
nop
subb
lods
insb
stos
or
out
mov
dec
pusha
add
out
cmp
out
mov
outsb
shlb
dec
inc
mov
lds
cmpsb
xor
aaa
rcrb
imul
pop
jp
rol
insl
sub
or
movsl
sarb
pushf
sbb
xor
fwait
dec
movsl
push
pop
mov
scas
push
arpl
jle
lahf
sub
cmpsl
and
mov
aad
xchg
shrl
std
lahf
rorl
ret
fwait
sbb
inc
add
mov
sub
hlt
jle
cwtl
xchg
xchg
sahf
aam
pop
sbb
ljmp
push
jbe
rcll
insb
es
sub
or
xor
stos
out
jnp
or
call
addb
clc
arpl
lcall
inc
jnp
push
mov
cwtl
lock
pushf
cmc
out
cmp
call
inc
inc
xchg
rol
cmp
cmp
xchg
adc
ret
mov
int
sbb
sub
push
and
push
roll
inc
pop
pop
pop
fwait
xchg
add
sub
scas
adc
mov
add
mov
fistpll
call
testb
test
jmp
push
clc
cmpsl
dec
das
ret
jb
jb
cwtl
sarb
jmp
out
add
mov
mov
arpl
outsl
sub
push
or
mul
inc
stos
push
hlt
cs
sbb
jge
mov
xchg
int3
xor
and
lods
mov
popa
inc
jecxz
sbb
fcoml
popf
sub
mov
add
push
ja
push
mov
xchg
mov
je
ss
inc
cmp
emms
out
mov
hlt
cmpl
mov
sahf
push
call
cli
mov
push
mov
cltd
mov
std
mov
dec
insb
popf
xor
popa
in
pop
fstl
fistpl
mov
xor
icebp
das
mov
lcall
dec
sahf
xchg
ret
push
loope
fs
data16
enter
mov
scas
ds
dec
mov
pop
and
adc
dec
and
push
clc
imul
call
test
repnz
add
push
push
int
movsb
loope
fstps
incb
in
dec
mov
mov
mov
mov
cmpsb
mov
push
or
jg
push
pop
dec
mov
dec
aas
fdivp
in
and
sbb
sub
dec
or
and
fdivr
mov
aas
jnp
dec
inc
mov
jg
dec
mov
movsl
push
xchg
cmp
jp
cmp
mov
inc
test
outsb
jmp
leave
enter
mov
rorl
loope
out
push
cli
push
mov
pop
mov
push
push
std
aam
outsl
cltd
insb
std
mov
and
stos
in
sarb
inc
mov
mov
or
mov
sbb
cld
iret
iret
pop
std
movsb
jb
cltd
or
mov
ljmp
jnp
imul
push
lea
or
mov
loop
xchg
adc
ljmp
and
inc
jmp
xchg
subl
mov
aas
sbb
aaa
xchg
or
push
or
dec
pop
sbb
ret
push
xor
jle
out
iret
dec
mov
mov
mov
xchg
nop
xchg
aas
mov
jle
lcall
sbb
ret
mov
lock
jg
lock
test
sbb
xchg
mov
push
out
shl
jb
sbb
xor
sub
or
arpl
mov
cmp
mov
mov
jg
pop
push
das
or
xchg
mov
mov
xorl
mov
cmp
jnp
aam
cwtl
outsb
push
repnz
mov
loopne
push
cld
loopne
mov
call
mov
mov
cmp
test
lahf
sub
push
test
mov
cmp
dec
jb
in
xchg
cmp
xchg
and
xor
mov
xlat
mov
cli
xchg
jp
pop
xchg
mov
push
mov
jp
repz
inc
sarb
pop
cmp
push
inc
orb
popa
mov
xor
and
pop
cli
test
cld
pop
mov
outsb
cltd
das
push
movsb
sbb
pop
cmc
adc
and
lds
in
lret
pop
cmp
cmp
xor
test
mov
inc
aaa
movsl
add
arpl
jp
xlat
ret
popa
jle
test
cmp
cmc
fsubs
sbb
push
test
xchg
ret
xchg
cli
push
mov
insb
fimuls
sub
mov
repnz
lahf
repz
lret
sbb
decb
cmp
mov
or
stos
jg
clc
fwait
arpl
js
nop
pop
jne
cmp
fs
test
jmp
adc
addr16
xor
nop
mov
xor
dec
mov
jb
icebp
enter
cld
rcrl
loope
sub
inc
flds
push
int3
outsl
adc
insb
pushf
sbb
dec
fisubl
xchg
scas
loop
andl
mov
mov
pop
out
icebp
jecxz
xchg
and
pop
mov
into
jecxz
xchg
data16
clc
loopne
add
aas
call
dec
lods
dec
stos
add
lds
dec
outsb
mov
cmp
in
inc
movsl
daa
stos
push
jbe
bound
mov
lahf
push
in
sbb
mov
stos
add
mov
xor
fidivrl
pop
xchg
inc
jmp
mov
bound
mov
into
out
bound
jl
pop
ja
aaa
inc
dec
add
fs
mov
cmp
adc
movsl
jne
mov
push
cmp
dec
ja
outsl
in
add
jae
mov
enter
int
jge
dec
or
xor
cld
push
insl
push
popa
dec
icebp
cmp
imull
fbld
cli
sub
add
add
push
sub
push
pop
shr
cmp
aas
psrlw
mov
xor
jle
xor
push
std
push
ficomps
lock
rorb
dec
or
pop
xchg
push
leave
xor
roll
das
out
rcrb
adc
insb
push
sbb
out
int3
fsubrp
insb
xchg
shrl
and
push
mov
cmpsl
fs
std
jne
inc
add
scas
dec
daa
xchg
in
jle
sbb
adcl
test
jecxz
mov
fwait
sahf
iret
rol
scas
mov
sub
adc
out
add
adc
jge
push
outsb
aad
and
mov
add
push
pushf
sbb
loope
cmpsb
imulb
adcb
mov
mov
in
fidivrs
sub
addr16
inc
jge
int3
or
shl
pop
in
repnz
jmp
call
out
jg
lea
mov
outsl
jge
push
out
in
inc
mov
cmove
jl
inc
loop
shrb
aaa
in
cmc
and
fldenv
mov
jne
dec
pop
jb
data16
cmp
leave
nop
stos
xor
lods
sbb
ds
sub
push
or
mov
mov
lcall
lods
xchg
xchg
mov
fstl
pop
popa
jle
aam
pop
cwtl
pop
out
gs
jle
out
sbb
mov
xor
repnz
ret
xor
cmp
push
call
call
stos
stc
cmpsl
push
sub
loop
loope
fcomip
mov
mov
fs
sarl
pusha
aam
ja
jecxz
and
mov
cld
mov
pop
mov
mov
xor
adcb
aad
sub
movsl
add
xor
pop
or
mov
jne
push
xchg
arpl
stc
cmp
arpl
mul
cwtl
sub
fs
xor
mov
mov
daa
dec
fsts
sub
adc
lds
outsb
mov
mov
dec
sti
fldl
stos
popf
dec
sbb
or
shll
dec
fsubs
test
fstps
loopne
sbb
clc
dec
mov
pop
ficoml
mov
mov
stos
push
in
jo
adc
les
push
mov
push
lcall
mov
bound
cltd
cmp
stos
popf
fldl2t
lcall
ret
push
loope
rcrb
xchg
cli
sub
and
xchg
ja
fisubl
imul
mov
xor
stos
cmpsl
sbbb
into
stos
sbb
daa
movsb
or
cmc
pop
xchg
and
jge
jp
xchg
out
fs
jmp
leave
adc
cmp
jl
mov
aad
jb
fwait
push
sbb
adc
imul
xchg
sbb
jp
test
or
test
and
popf
insb
fisubrs
and
cmp
insl
cmc
mov
jge
popf
xchg
loopne
cmc
inc
call
and
xorl
jbe
xchg
movsl
insb
cmp
adc
ja
loopne
sbb
sbb
xlat
stos
lret
clc
les
sub
fimuls
mov
stc
lods
xchg
popa
jl
dec
xchg
insl
inc
ljmp
mov
fldcw
aas
int3
ret
jbe
inc
outsb
push
repnz
dec
imul
xor
pop
mov
aad
push
std
mov
push
mov
test
loope
repnz
lret
dec
fsubl
or
loope
pusha
sub
neg
cli
js
leave
lret
mov
jno
xor
icebp
xchg
lea
lahf
in
in
rorl
in
lds
insl
test
cmp
inc
testb
mull
mov
test
mov
pop
leave
push
jle
push
cmc
pop
fucomi
mov
loopne
fucomp
jl
loopne
lret
xchg
mul
aad
into
fdiv
pop
popf
mov
sbb
scas
inc
das
loop
mov
and
cli
mov
mov
loope
mov
int3
lea
bound
test
push
lret
push
pop
inc
jp
in
ja
movsl
dec
sub
out
fwait
xchg
mov
in
jg
sub
into
sahf
sub
lods
dec
popa
lods
mov
dec
sbb
pop
inc
lret
enter
push
dec
cmp
out
jbe
inc
xlat
or
add
imul
adc
aas
push
aaa
mov
inc
shr
adc
les
sbb
fmuls
addl
clc
cmp
test
stos
in
out
arpl
and
fnstenv
int3
or
shll
xor
js
fcomip
call
jge
sbb
add
or
fsubrs
inc
adc
jne
es
jne
out
push
stc
dec
imul
inc
adc
loop
sub
daa
jl
add
dec
jbe
and
das
mov
scas
int
out
mov
inc
lahf
pop
add
cs
rcrb
and
and
cwtl
nop
xor
popf
mov
cmp
ret
cmp
sbb
or
bound
ret
cli
sub
adc
push
cmp
xchg
push
lret
jnp
ljmp
or
mov
pusha
pop
xor
fdivr
fstsw
addr16
mov
push
repz
jmp
adc
sub
xor
cmp
ljmp
in
cmp
jnp
mov
xlat
test
adc
fldenv
dec
pop
sub
loopne
cmpsl
sbb
mov
push
ss
lret
xlat
xchg
scas
fidivrs
lahf
repz
es
clc
push
mov
cmc
pushf
jge
and
pop
dec
cwtl
shll
adc
leave
or
lret
out
shlb
sub
jecxz
pusha
loop
xchg
jno
test
in
ret
sub
lret
ror
or
or
cmp
xchg
xor
inc
push
mov
adcb
jg
dec
pop
mov
cmp
repz
jae
popa
xchg
rcll
call
mov
test
repz
mov
adcb
lds
mov
cmp
loop
or
xchg
std
push
sbb
xor
pop
das
aam
jp
adc
out
lods
cld
imul
mov
jns
jg
dec
sahf
jp
mov
sbb
pop
aad
les
sbb
dec
inc
outsb
sar
dec
dec
outsl
lock
cmp
cwtl
popa
cmpsl
out
shrb
ret
adc
int3
inc
mov
add
mov
sub
dec
pop
mov
ror
cltd
scas
xor
xchg
testb
mov
mov
addr16
insb
cmp
push
loope
mov
adc
out
pop
inc
jo
xchg
sbb
cwtl
lods
xor
cmpsb
cmp
cmp
inc
ss
lods
sarl
xor
xor
imul
movsl
shrb
lea
add
shr
insb
push
cmp
arpl
ja
aaa
jmp
ret
sbb
push
ret
mov
inc
cmp
mov
fisubl
sub
jmp
fistl
jmp
cmc
xchg
hlt
mov
sbb
dec
leave
pushf
std
mov
add
insl
push
shrb
dec
push
leave
loop
pop
sti
mov
mov
mov
pop
cltd
push
lea
push
push
mov
push
outsb
adc
icebp
imul
xchg
xorl
aas
outsl
mov
inc
or
sti
imull
test
or
mov
inc
mov
fnstenv
lahf
ja
lret
test
cmp
int
and
orl
cmp
rolb
push
das
or
icebp
cmp
lds
mov
push
jns
test
add
outsl
in
mov
mov
jecxz
jge
mov
adc
add
xlat
test
xchg
or
aas
es
mov
popl
repz
inc
and
sbb
sub
sub
xchg
cmpsl
out
les
xchg
aad
fidivrl
sub
es
mov
add
int
insb
xor
rcrl
add
lods
jg
xchg
popa
and
popf
sub
push
pusha
mov
call
xor
sbb
mov
aam
push
push
or
outsl
les
add
sub
adc
out
in
fnstcw
dec
adc
jns
jnp
mov
pop
xchg
sub
fsubrl
jae
addr16
cmpsl
test
xor
cltd
rolb
dec
or
push
stos
subb
int3
fldt
add
loope
mov
and
cli
dec
dec
mov
mov
fwait
mov
mov
lods
pop
shl
int3
mul
addr16
xor
mov
mov
cmp
in
xor
mov
and
jp
mov
fdivr
cmc
mov
stos
xchg
out
jo
sbb
pushf
pop
dec
movsb
test
mov
push
xchg
out
mov
cltd
jmp
psubq
pop
sbb
pop
repz
pop
fwait
jnp
add
adcl
sbb
frstor
stc
rcl
mov
jo
cmpl
jp
mull
scas
mov
pop
bound
mov
mov
jne
push
loope
mov
sub
into
mov
leave
enter
mov
sti
sub
add
xor
cwtl
outsb
sbb
jge
lret
cmpl
jns
pop
jno
jecxz
aaa
dec
adc
or
xchg
push
mov
sub
inc
sbb
test
lock
jbe
ljmp
das
or
outsb
push
inc
insb
subl
jo
bound
pusha
andb
in
into
add
sbbb
jb
loopne
ds
add
cmp
sti
adc
aad
nop
fadd
push
adc
loop
imul
outsb
aad
push
das
aad
adc
xchg
inc
xchg
testb
aad
mov
add
enter
adc
nop
lret
test
add
ret
out
inc
fsubl
cmp
pop
and
loope
stc
xchg
inc
fstl
setno
sbb
jbe
cltd
dec
cmp
fcmovnbe
xor
clc
mull
jp
sbb
lea
mov
xchg
mov
push
lahf
cmp
and
inc
aad
imul
dec
test
in
inc
push
add
ret
iret
and
stos
sub
lods
aaa
das
arpl
pop
push
dec
mov
mov
push
iret
insl
out
mov
pusha
dec
ljmp
dec
push
mov
es
repz
xchg
xchg
icebp
in
cltd
pop
or
mov
out
xor
mov
jae
testb
mov
mov
icebp
lret
cld
xchg
outsl
mov
or
aam
ja
push
xchg
rorl
cmp
mov
jge
mov
arpl
mov
add
lods
ljmp
std
mov
cmpsl
sbb
push
out
mov
lods
popf
jno
andl
sbb
test
push
cmpsb
test
adc
ss
enter
movsb
and
hlt
jns
sub
ss
sub
fcmovnb
daa
xorb
push
fwait
sub
data16
adc
inc
aaa
shr
adc
pusha
jne,pt
push
jl
mov
fld
stc
push
loop
pushl
sub
jle
in
jbe
es
push
pop
push
lahf
dec
fs
cltd
cltd
jnp
popa
push
xor
add
mov
push
xlat
pushl
scas
xchg
pop
adc
dec
aas
xchg
inc
ds
ficoms
pop
jp
dec
jo
pop
subb
popf
imul
ret
imul
loop
or
jno
in
jge
mov
arpl
leave
inc
lods
jg
jle
ret
cmpsl
in
inc
scas
sub
mov
push
cmp
mov
sub
aas
add
pushf
pushf
sub
popa
aad
scas
daa
fistps
adc
cmp
lret
dec
shll
test
mov
fs
rcll
or
ss
cmp
cmp
pusha
das
and
sbb
inc
cli
ds
pop
xlat
jmp
daa
push
jae
fistpll
mov
cmp
or
jo
lods
mov
add
sar
leave
adcl
test
outsb
insl
sub
jbe
lahf
test
jae
dec
inc
rcll
dec
xor
insb
fiadds
mov
jecxz
ret
iret
mov
add
mov
fisubrs
sarb
shlb
les
mov
rorl
adc
dec
cmpsl
jbe
cmpsl
insl
xor
orl
aam
sub
sub
iret
mov
mov
lahf
push
xchg
jae
mov
scas
fisubl
mov
jbe
in
cmc
aaa
push
dec
mov
xor
test
xor
test
adc
loopne
or
cmpsl
ds
xchg
mov
jp
mov
cwtl
dec
push
push
pusha
mov
jno
pop
rcrl
xorb
scas
and
sbb
pusha
lret
mov
mov
lcall
into
idivl
add
inc
dec
mov
jp
sbb
mov
jbe
lods
loop
mov
aaa
xchg
pop
in
pushf
aad
cltd
ret
jmp
lds
sarl
mov
xlat
sbb
cld
sub
push
das
sub
jg
imul
loop
sbb
ds
push
adc
icebp
data16
xor
sbb
pop
pop
sub
bound
and
pop
ds
sub
jns
or
xor
dec
sti
icebp
rcrb
movsb
sbb
add
repz
jl
in
psrlw
std
add
pop
clc
aad
pop
scas
jo
sub
mov
incb
push
sti
arpl
aam
cltd
push
dec
movaps
xchg
cmp
sub
jge
mov
mov
sar
aas
or
in
mov
fildl
mov
xor
andb
outsb
ret
mov
scas
mov
cmp
mov
addl
fwait
xchg
xchg
clc
lcall
es
mov
xchg
cmp
sub
adc
and
stos
loope
push
rorb
sub
dec
pusha
pop
lods
enter
out
jo
mov
sarb
add
adc
pop
xor
dec
sub
in
xlat
pop
mov
mov
and
jmp
mov
dec
rol
das
popa
insb
outsl
mov
rolb
iret
hlt
sarb
cmpsl
repz
lret
xor
mov
fbld
adc
fisttps
nop
and
xor
orl
insl
icebp
pop
inc
inc
mov
mov
mov
jmp
dec
or
lea
and
cwtl
push
movsb
lods
ds
movsl
cmp
loop
outsb
or
rorl
mov
mov
sti
into
sub
jno
incb
add
add
and
jnp,pt
inc
sub
dec
mov
loopne
mov
sub
jge
jns
pop
cmp
mov
cmpsb
decb
cli
mov
mov
mov
rclb
inc
and
ret
popf
or
je
sbb
adcl
pop
stos
or
or
test
cmp
push
int3
push
sbb
sub
cli
jo
ret
icebp
jg
dec
rcll
add
daa
mov
sbb
dec
pop
mov
popa
xor
ret
mov
and
xchg
cmp
repz
popf
sub
sub
cmpb
pop
push
dec
sbb
push
or
aad
inc
fldcw
sbb
enter
daa
pop
lahf
popf
imul
add
and
ja
cwtl
movsl
add
xlat
xor
shlb
push
push
lds
test
outsb
addr16
scas
negb
pop
cmp
push
test
dec
push
inc
jmp
je
cli
adc
adc
mov
mov
jmp
xchg
add
fdiv
arpl
cmp
jecxz
xchg
stc
mov
in
xor
lcall
add
js
mov
xor
lds
mov
ss
jnp
dec
scas
mov
or
nop
aad
lret
stos
mov
mov
mov
xchg
addr16
nop
pop
push
nop
push
out
fstpl
test
xchg
cmc
or
mov
fisttps
insb
es
or
clc
das
add
test
fcoml
xor
iret
test
lds
outsl
mov
cltd
jo
sbb
fs
fadds
jge
pop
dec
jg
je
xor
rcrl
mov
nop
sub
adc
mov
mov
push
daa
imul
sbb
hlt
shlb
stos
mov
sahf
sbb
mov
push
xchg
icebp
das
ljmp
divb
pop
jbe
pusha
cld
lods
jecxz
xchg
loopne
in
inc
dec
sbb
fsubrl
adc
add
out
mov
jno
mov
pop
imull
push
xor
pop
ffree
into
cmpb
mov
iret
jl
cmp
stos
jecxz
mov
in
roll
lcall
and
iret
mov
lds
fsubrs
imul
scas
jnp
in
dec
dec
insb
orl
test
inc
mov
daa
jns
xor
daa
sbb
or
and
sahf
jo
das
pop
imul
xchg
fsubl
repz
arpl
orl
je
cmpsl
bound
xor
mov
mov
sbb
jmp
mov
int3
clc
push
bound
aad
or
sub
in
popf
dec
xor
lds
ret
dec
mov
imul
fidivl
sahf
test
into
cmp
fadds
pop
sbb
shlb
outsl
sbb
xchg
shlb
iret
fisttpl
push
popa
jmp
lret
shll
lods
imul
daa
inc
mov
sbb
pusha
mov
cmp
popa
andl
insb
hlt
rolb
jge
lods
in
and
mov
aam
stos
stc
cmp
test
mov
aad
pop
sub
pop
aad
stc
xchg
cli
pop
ss
or
mov
incl
mov
imull
xlat
aaa
icebp
jne
and
aam
dec
push
ficomps
sbb
pop
enter
enter
inc
fs
pop
push
ret
cltd
fs
mov
pop
adcb
jecxz
ret
xchg
sub
rcr
push
jbe
in
dec
or
sub
ja
adc
ret
xchg
aad
lret
scas
loope
pop
inc
lret
jbe
inc
mov
pop
push
lods
pop
adc
cmp
push
call
fiaddl
popa
sbb
clc
fcmovu
adc
fstpt
sbb
cmp
fistl
fildl
dec
enter
fadds
movsb
int3
xor
push
ret
jg
sub
iret
jno
ds
decb
sub
bound
arpl
mov
je
pop
sbb
mov
outsl
lock
rclb
aam
jnp
mov
add
xchg
andl
icebp
fldenv
sub
out
sbb
xchg
and
dec
pop
pop
mov
repz
or
mov
mov
out
rcl
call
iret
mov
aad
loop
push
hlt
add
pushf
pop
xchg
cmp
cmc
std
jae
mov
out
mov
mov
add
and
add
add
ffree
js
mov
imul
adc
fs
xor
mov
jne
or
mov
jb
gs
outsl
gs
imul
loop
aam
ret
xchg
out
dec
scas
mov
popa
and
mov
mov
in
loope
pop
cld
arpl
je
xor
dec
add
arpl
fnstcw
cli
mov
out
cmpsl
aaa
insl
aaa
push
xchg
jno
mov
ljmp
lret
fld
lea
jg
fucomip
sahf
ror
mov
push
mov
jb
loop
jge
xchg
or
imull
rcrb
lods
cmp
mov
pop
cmp
mov
mov
insb
inc
movsb
inc
sarb
cmpsl
xlat
inc
xchg
aas
inc
lods
mov
jns
push
xchg
scas
adc
push
sbb
sarl
lock
stc
mov
pop
adc
push
cli
jnp
adc
adc
lret
movsb
add
popf
sbb
jo
insb
push
push
inc
and
cmp
xchg
dec
mov
cmp
xchg
jb
fcompl
xchg
stos
cmp
adc
lret
or
test
leave
cs
jl
stos
dec
test
adc
xchg
stos
bound
aaa
fmul
add
daa
jns
data16
adc
add
dec
shll
hlt
lahf
mov
fucom
call
mov
mov
popf
mov
pop
xor
dec
popf
fistpll
mov
xchg
pop
repnz
cld
sbb
fdivl
cmp
repz
jbe
das
lock
xchg
mov
aaa
sbb
adc
adc
push
xlat
arpl
pop
lds
add
fisubs
jge
cmpsb
out
js
sub
sti
push
je
enter
dec
jno
or
pop
ret
cmp
inc
fidivrs
jecxz
jae
cmovnp
mov
sahf
xlat
mov
les
lock
mov
out
dec
pop
and
cmpsb
aam
mov
cmc
jmp
mov
pusha
adcl
test
cmpsb
es
dec
hlt
mov
cld
loop
popa
out
lds
incl
cmpsb
dec
scas
cmpsl
cmp
enter
fisubs
and
push
scas
or
mov
sub
test
orb
inc
adc
repz
lahf
hlt
pop
dec
mov
sub
pop
cmpsb
sbb
sub
nop
dec
loop
sarb
mov
sub
add
add
cmpsl
cmc
and
add
jnp
lret
sbb
cli
lods
aaa
inc
xchg
repnz
sbb
sti
or
sbb
xchg
mov
ja
lea
xor
mov
mov
inc
movsb
test
xor
dec
fcomip
cs
pushl
mov
call
mov
mov
nop
add
mov
fwait
movl
mov
je
pop
or
mov
pop
sub
lret
enter
push
and
push
mov
adcl
jl
dec
in
xor
push
mov
pop
xchg
sbb
mov
insl
inc
push
or
stos
sub
test
push
ror
cmp
adc
clc
mov
adcl
add
movd
cmp
je
xor
scas
jmp
xor
fwait
sub
aas
mov
sbb
pusha
ret
hlt
aas
adc
subb
xchg
inc
push
inc
out
outsl
jae
cmp
push
mov
adcb
sub
ret
fidivrs
jg
mov
xor
mov
pop
adc
mov
pop
dec
stos
das
fs
sarl
nop
xor
push
decb
push
mov
fisttpll
mov
fwait
mov
cwtl
leave
nop
mov
lret
pushf
jae
mov
adc
leave
xor
aaa
stc
add
bound
cltd
js
mov
movsb
or
aam
stc
fs
mov
push
fxch
xor
jno
test
mov
cmpl
or
fildl
sti
xchg
adc
test
dec
or
lcall
dec
loope
jne
pop
mov
xchg
add
int3
jg
cmp
data16
xchg
mov
les
daa
mov
pusha
jbe
out
addr16
scas
add
arpl
data16
xlat
or
push
mov
xchg
sub
bound
xchg
leave
inc
test
and
loop
cmp
cmp
int3
mov
push
jne
jb
sub
jmp
fs
sbb
jae
cmp
xchg
dec
add
jg
fs
je
stos
mov
inc
or
in
fmul
pop
nop
out
xchg
cmp
pushf
lcall
or
insb
mov
xchg
sbb
push
stos
push
into
outsl
loope
roll
dec
mov
push
imull
sub
je
or
pop
ljmp
push
pushl
lret
je
mov
pusha
ror
xchg
lret
add
fldz
out
dec
lret
scas
xchg
hlt
adc
je
cltd
adc
dec
add
mov
sub
out
test
outsb
cmp
jmp
cmpsl
sub
pop
rcrl
mov
bound
rcr
mov
inc
repnz
pushf
and
loope
cli
mov
std
jb
je
adc
dec
lds
jne
push
mov
lret
fs
jae
jge
cmp
push
mov
lret
arpl
je
dec
mov
xchg
jp
xor
inc
mov
pop
cli
dec
sub
xor
cmpsl
imul
dec
hlt
icebp
mov
stos
das
nop
adc
push
add
and
and
inc
pop
mov
mov
movsl
inc
inc
sahf
or
cmpsb
cmp
or
incl
or
out
pop
enter
js
aaa
lcall
je
mov
mov
push
outsb
mov
pop
dec
lods
sub
jbe
adc
decl
fsubl
sbb
and
jb
nop
pop
inc
dec
je
insl
lods
sub
andb
into
fsubl
shlb
ljmp
xorl
nop
rorb
test
inc
loope
mov
insl
pop
in
pop
dec
or
ds
mov
fcomps
jno
sbb
jle
jle
loope
dec
fiadds
in
sub
push
xchg
pslld
add
mov
arpl
mov
fs
scas
adc
sub
mov
cmp
outsb
pop
hlt
adc
or
fildl
divb
jg
mov
sbb
insl
inc
aam
jb
cmpsl
rcrl
bound
sti
scas
or
arpl
test
sub
jbe
add
jle
mov
cmp
enter
imul
mov
mov
inc
lods
orb
arpl
enter
and
enter
lock
call
fnsave
sub
add
lret
mov
xlat
fs
sahf
call
cwtl
hlt
daa
sbb
sbb
int
lret
hlt
hlt
stc
xor
jecxz
cwtl
jecxz
jns
mov
adc
fists
scas
pop
in
push
out
xor
sbb
mov
mov
pop
jbe
aad
popf
fistpll
cmp
push
scas
inc
sbb
sbb
cs
push
add
inc
pop
or
sarl
in
enter
cmp
mov
sti
int3
adc
push
xchg
or
insl
lret
jo
pop
and
and
je
push
inc
xchg
pop
cmp
mov
movsb
outsl
push
and
jge
das
pop
stos
push
xor
lods
orb
subb
aam
addb
mov
lcall
fmul
and
popf
idivb
test
cs
div
xchg
fisttpll
xor
xchg
out
dec
pxor
bound
sub
inc
rcr
xchg
mov
xchg
mov
xor
push
adc
test
and
or
push
add
sti
pop
xor
adc
mov
mov
lcall
and
xchg
data16
iret
mov
xor
cs
and
int3
jno
mov
mov
rclb
sub
movsl
insb
cmp
out
sbb
aad
jno
in
sub
scas
enter
or
fwait
in
push
inc
jae
mov
add
cmpsb
xor
pop
and
insb
mov
mov
mov
jbe
cltd
int3
aas
outsl
pop
xchg
cmp
jp
or
mov
mov
cmp
xor
mov
in
lret
xor
pop
subb
jne
jnp
mov
add
and
jmp
aam
sbb
push
fbld
in
fcomi
jo
orl
push
notl
mov
fsubrs
iret
int
xor
sub
inc
xor
popf
adc
sti
push
ds
and
lods
loopne
js
out
mov
sub
bound
imul
loope
and
enter
pop
pop
and
adc
xor
bound
arpl
rcll
pop
add
ja
movsb
inc
shrl
jl
scas
negl
jp
xchg
aaa
fwait
lret
outsb
adc
pop
punpckhdq
mov
aad
lods
leave
xchg
das
fsubrl
mov
and
inc
mov
sub
int
pop
cs
sub
in
fadds
imul
push
cmc
jmp
ljmp
adc
dec
pop
push
daa
in
and
xchg
jae
ret
faddl
fsts
sbb
scas
out
push
jecxz
jo
fidivl
xor
and
movsb
inc
std
inc
sbbl
mov
mov
xor
arpl
pop
test
sub
xchg
jne
cmp
cmp
addr16
pop
fcmovnb
leave
test
jmp
repnz
test
inc
sub
mov
imull
aaa
xchg
mov
fdiv
loope
cmpsl
push
xorl
cmc
xchg
cltd
inc
push
pop
adc
pushf
out
push
dec
sub
je
adc
fcomi
mov
add
jmp
icebp
inc
sbb
movsl
adc
pop
fistpl
ret
xor
add
mov
incb
jb
xor
add
cltd
out
shr
ret
stos
out
push
outsl
icebp
jnp
imul
in
insb
iret
inc
xchg
jmp
cmp
lcall
in
jecxz
cmpsl
sbb
or
and
clc
jge
hlt
push
xchg
movl
imul
dec
pop
push
mov
lds
test
sbb
mov
mov
add
mov
add
pop
lahf
sahf
jo
pushf
push
xor
jb
hlt
mov
and
xchg
mov
mov
mov
jb
mov
in
mov
sub
jge
clc
test
pop
or
cmc
or
inc
cmp
sbb
inc
nop
inc
jle
adc
pushfw
xchg
xor
sub
dec
lea
jge
mov
fildll
out
or
xchg
addr16
push
stc
popa
dec
outsb
push
js
xor
js
in
test
or
dec
fistps
jae
pop
jl
mov
int3
dec
sub
or
out
xlat
mov
js
bound
dec
or
push
mov
mov
int3
scas
cmp
add
push
scas
dec
int3
movsl
mov
shlb
mov
inc
cmpsb
cltd
iret
out
adc
es
jbe
and
aas
dec
iret
pushf
add
xchg
xchg
jbe
push
mov
mov
rclb
inc
mov
ds
aam
ds
add
cmp
imul
pop
pop
dec
pop
push
rorl
sbb
outsl
out
jg
adc
xchg
pop
pop
xlat
mov
push
cmc
scas
arpl
xchg
je
adc
push
jo
mov
mov
jge
es
sarl
and
hlt
fsubp
mov
test
negl
lcall
dec
cltd
rcr
pop
ljmp
or
test
fwait
inc
xchg
scas
les
sub
into
repnz
pop
aas
cli
inc
sahf
pop
outsl
push
xor
aaa
ret
sti
mov
mov
ds
sub
fcomp
or
movsl
push
jp
xchg
push
jmp
pop
arpl
in
dec
xchg
xchg
fldl
jnp
push
add
add
sub
outsl
outsl
push
xchg
pop
jmp
out
push
cwtl
aaa
pop
adc
cmc
sbb
dec
lds
adc
adc
je
push
jecxz
and
pop
adc
repnz
imul
or
push
push
std
mov
inc
out
adc
xchg
jecxz
xlat
push
or
adc
cmp
les
mov
call
test
daa
les
push
loop
test
cmp
jmp
sbb
mov
jae
fmuls
xchg
pushf
sub
jg
mov
jmp
in
daa
sbb
add
lahf
mov
fbstp
repz
imul
mov
xor
fmull
mov
bound
enter
sub
sbb
faddl
shlb
sarb
fstps
sbb
rolb
jo
faddp
es
jne
mov
xchg
rorb
cmp
jge
inc
insl
sbb
dec
mov
sub
xor
popf
insl
push
lcall
cmp
clc
pop
lret
loope
jae
xor
sbb
adc
scas
cld
int3
imul
jg
in
mov
pop
daa
mov
jb
jnp
ja
shlb
pop
xor
add
into
jmp
aam
or
nop
mov
cmp
mov
xor
adc
or
mov
pop
add
jnp
cwtl
leave
jg
mov
je
inc
enter
pop
daa
mov
push
mov
mov
fisttpll
dec
sub
adc
fildll
test
and
xor
adc
popa
inc
mov
sub
push
mov
repnz
ljmp
iret
out
pop
push
imul
jo
ja
push
push
insl
shlb
cwtl
repnz
push
jnp
faddl
ret
fmuls
and
test
shl
cwtl
jle
inc
xor
dec
cmpsb
mov
mov
adc
mov
mov
clc
das
pop
sbbl
jns
push
push
scas
mov
inc
loope
or
cmc
jbe
rclb
icebp
cmp
outsb
cmpsb
sub
mov
dec
cmp
push
hlt
cmp
clc
ss
mov
add
xchg
mov
mov
inc
cmpsb
cli
sarl
jl
and
inc
gs
lock
or
rorb
dec
ficomps
stos
arpl
aad
pop
add
adc
idiv
cltd
xchg
filds
cmp
bnd
or
and
jecxz
cwtl
or
jecxz
pop
pop
cmp
cmp
xor
cmpsl
ja
sub
adc
stc
and
cmp
shlb
inc
pop
sarb
and
xor
leave
push
enter
push
mov
push
push
pop
push
mov
lcall
mov
adc
mov
jae
push
xor
outsb
and
pminub
in
scas
decb
push
mov
sub
fnstsw
sbb
mov
add
movsl
cmc
ret
scas
popf
sar
and
sbb
bound
cmc
jns
inc
cld
mov
sbb
les
adc
and
jae
cmp
add
out
and
stos
pop
les
dec
xchg
dec
loop
xchg
rolb
mov
mov
sub
cmpsb
xor
and
push
jg
jecxz
jmp
roll
or
jnp
or
inc
mov
push
sbb
jno
mov
dec
loope
arpl
sub
xor
or
shll
cmc
inc
lds
jae
mul
jb
divl
test
roll
cmp
xor
cmpsl
cli
mov
mov
mov
sete
cmp
arpl
cmp
sbb
cmpsb
inc
popa
scas
cmp
into
push
pop
adc
jae
imul
in
push
inc
insb
mov
mov
scas
pop
addr16
cmp
mov
mov
ficomps
inc
das
fidivrl
int
inc
xchg
ljmp
icebp
in
cld
sbb
loope
pop
imul
mov
dec
xchg
xchg
sarl
daa
cmp
cmp
lret
sub
in
lret
cwtl
cld
cli
andb
pop
xchg
mov
lds
stc
cmp
cmc
mov
sub
sub
je
or
test
les
or
mov
and
xlat
xchg
add
xchg
enter
xchg
and
xchg
push
mov
and
sahf
jle
mov
or
push
inc
add
push
dec
or
lods
stc
mov
sbb
xlat
mov
xor
xchg
fisttpl
and
dec
cmp
fnstsw
and
ja
mov
mov
je
fnstsw
inc
in
xor
ds
stos
xor
fstpt
xor
mov
jmp
ljmp
rclb
add
xchg
push
adc
mov
mov
sub
loop
jno
sbb
int3
add
lcall
mov
ret
test
jecxz
aad
test
mov
les
mov
inc
gs
es
ljmp
push
cmp
sbb
lock
push
icebp
mov
sub
xchg
inc
xchg
dec
mov
repnz
mov
ds
mov
pop
bound
cmp
jl
orb
sub
and
stos
mov
mov
loopne
or
test
pop
sbb
in
push
dec
push
mov
scas
jns
mov
mov
in
ss
loop
lret
rcrb
cld
inc
cmc
pop
mov
and
repnz
fistpl
idivb
mov
jo
push
fdiv
lcall
push
fldl
pop
jle
and
push
sbb
mov
das
sub
arpl
cmp
mov
repnz
sbb
fildll
call
rolb
push
gs
mov
sbb
sbb
andl
es
pop
stos
js
push
testb
call
repnz
xchg
jno
xlat
inc
xchg
ja
enter
movsl
les
dec
adc
jmp
hlt
adc
dec
dec
jecxz
enter
cwtl
push
push
fldcw
xchg
call
add
shr
incl
fiadds
lea
rcll
std
mov
scas
mov
pop
jg
cmpsl
lret
mov
fists
lock
pop
rol
pop
xchg
jge
dec
in
shlb
adc
jmp
sub
ror
pop
fildl
es
cmp
mov
ds
cs
outsl
add
push
add
scas
ficompl
ret
mov
pop
lods
fidivrs
les
push
sub
sbb
popa
movsl
mov
test
dec
sbb
add
sbb
push
adc
inc
pop
xor
xor
movsl
sub
fnstcw
insl
aas
in
pop
add
orl
cmp
inc
inc
popfw
cmp
aaa
inc
or
jo
add
rcrb
mov
cltd
pop
popf
nop
test
lret
loope
dec
mov
sahf
add
or
aad
dec
in
mov
mov
arpl
sub
movsb
outsb
sbb
addb
inc
cmp
mov
jae
std
in
cmpsb
aas
out
adcb
fistps
fsubrs
ficoms
nop
or
das
jle
jmp
pushf
xor
push
xor
dec
inc
mov
dec
out
ljmp
mov
pop
jmp
or
das
shlb
outsl
inc
clc
das
in
or
sbb
jmp
adc
je
mov
sti
push
inc
lahf
dec
int3
imul
dec
cld
mov
clc
repz
imul
lods
ds
pop
lahf
mov
push
bound
outsb
push
icebp
mov
fstpl
cmc
les
push
sbb
xlat
arpl
rol
call
mov
jp
pop
sti
sbb
inc
jne
and
lods
aam
fimull
ja
and
sbb
icebp
jno
fiadds
dec
and
lock
xor
lds
mov
cmp
xchg
lea
push
aas
pop
fistpl
push
loop
in
imul
sub
push
push
mov
mov
add
in
inc
cmpsb
rcrb
shlb
jnp
in
jb
out
movsb
popf
jle
in
mov
aaa
sbb
sahf
inc
sbb
cmp
adc
pandn
add
lcall
inc
cli
dec
xor
jecxz
hlt
and
inc
sub
cmp
xchg
and
jne,pn
pop
loope
outsl
loopne
fmuls
ljmp
xchg
outsl
shlb
cli
jns
lret
and
pop
sbb
xor
int3
pslld
cmpsl
mov
push
adc
fincstp
mov
pusha
stos
shlb
ficompl
rorb
rcll
pop
out
or
lret
and
mov
push
push
scas
cli
aad
mov
pop
mov
fistpl
dec
orps
out
rcll
fldcw
and
pop
xor
mov
lret
mov
ja
adc
sub
pop
in
stc
fmuls
out
pop
xchg
sahf
jns
xchg
mov
push
push
sub
test
inc
sub
imul
scas
mov
adc
cmp
or
mov
push
sbb
push
mov
cmp
rorl
jo
mov
mov
mov
out
in
inc
in
inc
push
shl
xor
lock
mov
or
daa
and
xor
cltd
aam
and
mov
inc
jl
addr16
adc
mov
sahf
dec
mov
inc
pause
repz
out
sbb
imul
mov
jl
xor
pop
mov
push
bound
incb
test
cmp
mov
pop
xor
fs
jge
fidivrs
call
xchg
dec
hlt
es
out
cmp
shll
lods
sahf
ret
call
xor
fnstenv
data16
ljmp
sbb
bound
and
adc
jle
or
add
lea
pop
mov
scas
imul
and
add
inc
and
mov
xchg
pop
addr16
push
sti
add
out
mov
fcmove
inc
aad
dec
dec
je
or
ds
imul
jg
xor
imul
dec
into
xlat
std
sub
andb
fmul
daa
push
add
xlat
std
pop
pop
mov
push
test
test
nop
adc
dec
dec
xchg
mov
jmp
mov
push
negl
rolb
push
aam
mov
push
add
push
lds
mov
mov
imul
jbe
je
outsb
gs
jb
cmp
movsb
cmp
fmuls
push
andb
scas
insb
lock
ljmp
jmp
fadd
insl
das
fcomip
cmp
pop
ret
les
add
enter
subb
pushf
sbb
pop
or
mov
test
cmp
and
fdivr
nop
mov
add
retw
sub
push
adc
adc
dec
pop
xorl
insl
mov
lea
mov
pop
neg
out
or
in
mov
rclb
jb
gs
cmp
xlat
mov
xchg
scas
imul
sti
mov
fsubrl
sub
fimull
outsl
rol
jb
shl
adcb
mov
mov
pop
dec
ss
sbb
pop
cmp
inc
push
mov
jo
cmp
les
dec
call
xor
dec
iret
add
xchg
mov
subb
xor
mov
insb
out
jo
lods
mov
and
cmc
and
push
mov
es
mov
outsl
lret
lock
test
leave
xchg
lods
jbe
fincstp
insb
cmp
add
xor
cmp
jae
and
jnp
test
xchg
cmpsb
adc
xchg
mov
pop
arpl
dec
cmp
repnz
sub
loopne
sbb
inc
pop
xor
cli
jno
test
pop
idivl
stc
cs
pushf
not
mov
and
add
sub
or
and
cmp
and
xor
inc
dec
imul
cmp
imul
adc
jmp
popf
jmp
outsb
insl
lret
loop
ds
mov
jae
lahf
out
cmc
mov
sub
mov
cs
ret
in
xor
cmp
popa
xor
rcl
push
push
mov
jl
pushf
sbb
mov
lret
sarb
into
loope
inc
lock
dec
test
push
out
mov
imul
repz
call
inc
aam
pop
jno
bound
lods
fnstenv
cld
add
dec
sbb
and
daa
pop
fisttps
mov
bound
xor
add
jno
test
or
pop
out
sbb
fs
jl
in
fs
mov
pop
andl
movsb
adc
sub
pop
xlat
inc
into
clc
mov
dec
bound
mov
insl
push
sub
mov
push
xchg
push
je
push
rcl
and
repz
cmp
fadds
cli
fdivs
dec
ja
lods
popa
sti
sbb
push
ss
pop
sbb
or
xchg
ret
shl
jbe
cmp
pop
lea
lcall
sub
popf
nop
sbb
pop
fnstsw
imul
add
xchg
mov
xor
pop
inc
faddl
xor
cmp
xchg
shld
push
fstps
jb
pop
nop
js
out
xchg
adc
in
and
or
pop
gs
aaa
mov
movsl
in
int3
sti
inc
push
test
and
jno
aas
jo
js
not
bswap
popf
pushf
rcrb
das
cltd
rclb
or
add
data16
scas
hlt
pop
stc
inc
lods
lds
das
adc
or
add
int
sbb
fsubrp
dec
icebp
ret
xchg
insb
test
repz
outsb
dec
decl
fs
fstpt
dec
and
mov
pop
sbb
pop
xchg
adc
call
mov
pop
and
mov
pop
aam
gs
pusha
sub
inc
mov
sbb
mov
fsubrl
stc
mov
test
adc
prefetchwt1
sub
sbb
lcall
dec
fs
inc
lcall
and
xchg
rcrb
fcompl
arpl
jae
xchg
pop
pusha
idivb
sbb
xchg
mov
out
pushf
and
test
dec
aaa
out
cmpl
mov
or
sub
mov
aam
push
stos
xor
je
les
ss
fs
rolb
mov
insl
cmp
aam
sarl
mov
sub
sub
cmp
negl
and
and
sub
popa
sbb
dec
loopne
adc
or
pop
sub
rcrl
mov
mov
jnp
aad
jne
push
lcall
inc
xchg
stc
mov
pop
or
sub
sbb
lret
xor
in
jecxz
fs
movl
scas
pop
sbb
outsl
jecxz
scas
ja
pop
out
popf
nop
push
lock
insl
insb
inc
xchg
jno
psubq
adc
cmp
pop
pop
pop
aad
and
stos
add
add
inc
xchg
cmp
or
ljmp
outsb
mov
mov
cmp
div
pusha
add
mov
into
insl
dec
or
icebp
not
jp
in
jne
loop
nop
sbb
faddp
push
pop
sarb
filds
in
pop
jp
pusha
lds
mov
lahf
jp
int3
cmp
cmp
mov
insl
push
out
cmc
xchg
data16
pop
pop
jne
jns
jp
mov
jo
push
xchg
shl
or
dec
orb
jl
dec
sub
jns
xchg
push
insb
xor
divb
push
sarb
mov
mov
pop
push
int3
inc
popf
push
xchg
jecxz
sub
dec
adc
mov
sbb
mov
pop
aaa
lea
orb
fldl
fidivrl
sbb
lods
mov
stos
pop
adc
or
mov
aad
inc
mov
cld
repnz
loop
mov
dec
call
outsb
das
into
call
dec
xchg
pop
cmp
mov
jl
stos
and
ret
mov
mov
cld
adc
dec
xchg
out
in
jo
sub
dec
fcoml
add
xchg
mov
ds
enter
lock
add
inc
js
ljmp
lea
ret
rorb
insl
xor
jl
jmp
js
xchg
dec
add
rol
xchg
outsb
rorb
sbbb
pop
mov
stos
mov
mov
xchg
sti
add
jnp
mov
push
mov
push
in
or
mov
leave
shlb
or
sbb
inc
xchg
xorl
imul
cmp
aam
test
sbb
out
and
ds
jno
pop
aaa
inc
stos
cltd
sarl
nop
and
mov
pop
cmp
testb
cmc
dec
sbb
xor
filds
mul
aam
or
fidivs
dec
or
jl
add
mov
add
inc
insb
test
in
cld
pop
cmp
scas
adc
mov
dec
ljmp
push
xor
pop
es
mov
pusha
mov
mov
push
outsb
push
mov
xor
xor
adc
cli
sbb
pop
adc
subl
arpl
test
out
dec
mov
jbe
cli
fdivrl
jns
dec
imul
arpl
jg
lret
cs
dec
loope
xor
pextrw
push
or
lret
sub
movhlps
lahf
mov
arpl
mov
stc
daa
add
and
inc
dec
mov
aad
adc
sub
and
inc
lret
into
add
and
test
xchg
adc
insb
or
xlat
sti
adc
push
lods
jle
pop
dec
push
ds
push
push
bound
inc
mov
mov
test
cmc
jne
fdivr
fnstsw
push
aaa
stc
repz
mov
sub
fucomi
xchg
outsl
or
sbb
mov
hlt
or
repz
shlb
push
popf
inc
xor
sub
sbb
sub
jmp
sti
cli
xchg
jle
xchg
test
in
jne
mov
sub
mov
and
lea
int
xor
fwait
sbb
xor
insl
and
aas
push
adc
jae
jl
cmp
enter
insl
outsb
lret
ja
lret
test
cli
loopne
cwtl
jo
lods
mov
sub
into
imul
repnz
mov
hlt
mov
ss
xchg
jl
cmp
xchg
loope
mov
scas
test
lods
mov
mov
gs
mov
or
pop
pop
add
popa
iret
cmp
lahf
adc
or
push
xor
mov
loopne
pop
lods
stc
leave
mov
mov
test
test
and
add
sarl
ljmp
add
add
sbb
aaa
push
outsl
sub
enter
popa
dec
xor
lret
pop
es
stos
inc
pushf
lahf
inc
jb
pop
aam
jecxz
and
cli
mov
cld
xlat
dec
sbb
sbb
bound
insl
int
jns
cmp
bswap
sbb
pop
pop
xchg
jmp
fdiv
nop
int3
sub
xchg
popf
mov
push
xor
cli
push
xor
dec
cmc
cmp
inc
cmp
or
jle
sub
xor
sub
xchg
adc
push
adcl
mov
movsb
test
push
enter
js
jno
push
iret
imul
lahf
int
jns
fimull
push
je
jle
fnstcw
imul
or
jno
mov
into
jp
dec
into
jle
out
add
pop
sbb
jl
in
jo
insl
jns
jb
cmp
mov
jne
pushl
mov
xlat
mov
jae
dec
cmp
push
hlt
xchg
std
shlb
mov
xchg
sbb
mov
subb
inc
fsts
push
insw
push
jmp
fsubs
loop
jb
push
cmp
gs
sub
loopne
out
ljmp
add
push
cmp
orb
dec
into
push
sbb
lahf
cltd
mov
sub
addl
xor
fs
es
jb
jp
mov
lods
ret
icebp
adc
jne
and
xchg
push
xchg
pop
mov
out
adc
push
push
pusha
mov
mov
call
push
cmc
insl
int
int3
dec
data16
lods
insb
popf
shll
push
insb
xor
setle
daa
add
pop
out
hlt
subl
lahf
or
adc
fcomps
sub
movsb
sbb
jns
sbb
pop
lcall
fcompl
rolb
dec
adc
cltd
mov
and
pop
scas
negl
or
lock
rcr
mov
cmp
dec
icebp
out
sub
sub
xor
shlb
pusha
add
push
cltd
mov
xor
mov
mov
add
jb
or
mov
jb
xchg
cli
outsb
aas
or
scas
jge
add
push
lahf
mov
xor
cmp
jmp
dec
stos
loop
imulb
lahf
inc
imul
dec
pop
inc
mov
add
mov
mov
out
push
aas
mov
clc
mov
xor
lock
ds
push
je
aam
mov
mov
roll
pop
mov
sub
scas
push
lret
sarl
out
pop
shll
inc
cmc
sub
in
jl
pop
xchg
divl
adc
test
loopne
sbb
sti
xor
mov
sbb
stc
jmp
jge
int
daa
cmp
popf
movsl
ss
sub
in
test
sbb
idivl
cmc
sub
pop
push
and
daa
cmpsl
mov
inc
jo
lret
iret
inc
or
mov
sbb
xorb
jae
cmpsb
jmp
rcr
inc
sti
xor
and
inc
xchg
outsl
xchg
movsb
sahf
aad
es
inc
sub
sub
test
jb
addl
insb
sbb
xchg
pop
call
test
cmpl
insl
mov
fsts
cmc
or
ljmp
mov
xchg
sub
cmc
adcl
mov
push
push
addr16
mov
cmp
dec
jo
mov
adc
xor
out
call
xor
in
lds
mov
lods
hlt
xchg
cli
je
test
cs
pushf
loope
sbb
mov
or
inc
testl
leave
or
pop
sub
jo
mov
add
cmc
xchg
ret
popa
les
sub
aaa
sub
inc
lds
popa
xchg
mov
loope
xor
iret
leave
and
jl
mov
sub
out
les
add
call
xchg
mov
xor
push
in
dec
xchg
xor
xor
cli
outsb
pop
xchg
mov
popf
aaa
inc
popa
subl
cmp
sti
adc
sti
inc
fisubl
jnp
lods
jae
test
stc
adc
pusha
and
inc
out
mov
and
sub
stos
dec
outsb
in
mov
iret
nop
cmc
xlat
xchg
out
xchg
cwtl
mov
cmpsl
lods
mov
popa
adc
mov
add
xor
cmc
push
push
repz
lret
iret
xchg
and
add
mov
push
mov
cmpsl
mov
cli
inc
adc
in
dec
xor
adc
mov
scas
push
cmc
pusha
and
js
cmp
add
cli
icebp
inc
pop
mov
cmp
mov
pushf
mov
cmpsl
nop
divl
int
test
arpl
es
popa
std
lods
ret
adc
hlt
add
fisubs
fldl
lret
push
mulb
adc
cwtl
fstpl
cmp
inc
movsl
sbb
dec
data16
imul
aaa
sarl
loop
add
ficompl
xor
leave
int
dec
sti
dec
bound
imul
call
adc
xchg
and
pusha
jae
in
pop
repnz
dec
fildl
cs
xchg
fwait
lret
test
aaa
call
pop
jle
enter
push
push
xchg
cmp
mov
sbb
and
sbb
inc
lds
sbb
popa
pop
in
int3
xor
fdivrl
push
push
stc
cmp
push
les
dec
rclb
push
mov
nop
insb
mov
jp
pushf
clc
fbstp
arpl
jo
fnstcw
das
inc
lcall
insl
test
mov
outsl
pop
push
ret
fstpt
jecxz
fimuls
xor
fcoms
push
lods
jbe
and
divl
and
and
popf
jmp
mov
or
roll
fstl
and
movsl
sbb
lock
push
daa
call
pop
stc
xchg
int3
xchg
jb
mov
icebp
dec
imul
inc
pushw
dec
mov
push
ss
inc
sub
jge
inc
and
dec
ja
xchg
add
and
push
jns
fisubs
ds
imul
push
lods
loopne
xchg
leave
pop
push
call
mov
lret
sub
outsl
or
rcrb
popa
dec
in
cmp
jl
jecxz
fisttps
cmp
subl
jle
cmp
or
nop
adc
orps
mov
or
push
push
pop
or
mov
sahf
je
and
pop
adc
cmp
repz
addr16
push
cmp
mov
arpl
dec
stos
sti
aas
sub
into
in
incb
arpl
repnz
loope
js
adc
hlt
jle
xchg
mov
mov
das
dec
fdivs
or
shlb
scas
inc
loop
add
xchg
out
outsb
sub
addb
loop
cmp
xor
in
imul
mov
mov
in
mov
add
popf
les
dec
xor
sbb
adc
cmp
push
push
dec
test
jl
cmpsb
aad
inc
jnp
dec
or
xor
jae
mov
sbb
dec
lea
jl
mov
add
mov
js
add
or
stos
aam
sub
lret
out
std
mov
lock
cs
sarl
xor
or
insb
dec
and
sbb
jge
mov
cmp
je
hlt
adc
fsubl
cmp
daa
sbb
in
pop
jne
or
shll
push
sub
inc
outsl
jno
sub
push
cmp
sub
mov
popa
ljmp
jne
pop
cmp
inc
rorl
and
jb
xchg
pop
add
xchg
xchg
xchg
or
mov
xchg
cmp
js
push
pop
mov
cmp
std
jl
push
mull
outsb
fbstp
adc
pop
cwtl
dec
ds
xchg
xor
cmp
mov
mov
or
clc
add
sarl
or
lret
mov
and
hlt
cltd
sahf
ret
sbb
sarl
mov
sahf
xchg
into
ljmp
mov
sbb
adc
cmp
sub
fs
cmpsb
in
leave
add
dec
jg
and
shl
sahf
aam
rcl
add
cmc
scas
jmp
aad
jp
ss
push
mov
dec
cmp
pushf
and
clc
jecxz
stos
cmp
fsubl
cmpsl
mov
dec
lret
mov
xchg
and
sbb
movsb
fs
addr16
mov
rcrl
sbb
inc
pop
xor
xchg
sub
cli
adc
test
hlt
ljmp
mov
das
mov
test
imul
xchg
lcall
or
andl
push
das
cmpsb
xchg
dec
stc
sbb
pop
xchg
or
test
pop
lods
mov
lea
or
jle
push
xlat
fldl
sub
adc
sbb
or
stos
mov
out
or
mov
fimull
sti
mov
outsb
sub
add
sbb
push
ret
and
dec
shll
lock
xor
cmp
add
inc
or
scas
xchg
pop
mov
mov
movsl
testl
test
aad
adc
xchg
imul
stos
rorl
jmp
lods
sub
add
insb
and
es
dec
cwtl
rcl
lds
mov
jle
sub
inc
pop
js
sbb
adc
xor
ja
shl
sbb
stos
xchg
lea
sub
mov
jp
pop
or
stc
pop
out
rorb
dec
jp
cli
scas
inc
pop
test
rol
mov
push
xor
shr
ljmp
fistpll
leave
scas
loopne
inc
in
or
mov
adc
dec
jge
loope
ds
and
mov
rorb
dec
mov
shlb
mov
scas
lds
insb
fs
iret
inc
sbb
mov
mov
lcall
cmpl
xchg
out
push
arpl
insb
adc
dec
inc
xor
adc
test
cmp
aad
faddl
inc
sbb
inc
mov
or
xchg
xchg
gs
push
mov
push
pop
fs
dec
stc
jecxz
test
jp
mov
fisubl
push
aam
mov
xor
and
dec
aaa
pop
adcb
out
out
pop
dec
add
pop
add
jns
in
push
cmpb
or
ficomps
xchg
inc
hlt
push
cli
jb
cwtl
es
aas
sbb
and
xor
adc
jg
adc
test
ss
fiadds
call
out
push
test
fwait
cltd
adc
or
lods
test
rcll
clc
out
fisubrs
lret
mov
add
lds
sub
add
xor
repnz
cmpsl
xchg
aas
bnd
ficomps
nop
inc
in
stos
xor
jle
js
and
push
sbb
xchg
or
xor
arpl
and
inc
inc
or
mov
in
mov
lret
inc
push
stc
int
dec
or
and
xchg
or
idivb
movsl
inc
adcb
icebp
mov
daa
mov
out
mov
in
in
jmp
mov
and
sbb
dec
sahf
jg
ds
or
sub
fstpt
xchg
fidivl
iret
xor
inc
fists
adc
and
jno
mov
movb
mov
pushf
rol
scas
daa
fadd
idiv
and
fistpl
imul
roll
lods
pop
jmp
in
lcall
int
mov
aad
jp
adc
std
fistps
iret
je
fmuls
lea
cmp
fimuls
insl
lret
sti
es
pop
add
and
add
and
and
add
add
dec
gs
into
mov
add
mov
and
ja
push
fstps
int3
loopne
aad
mov
pop
cwtl
scas
inc
mov
or
inc
nop
mov
inc
pop
cvtpi2ps
lcall
push
jg
iret
rol
lea
pop
cmp
btrl
sar
add
orl
sub
cmpsb
fidivs
out
or
push
mov
push
repnz
ret
xchg
sbb
sbb
mov
push
shll
or
dec
je
filds
stos
fimuls
andl
cmp
test
insb
addr16
cmp
push
rclb
test
sbb
in
imul
jb
mov
imull
cmp
mov
cmp
cmp
pusha
push
rcll
lock
or
sbb
das
push
dec
repnz
inc
mov
cmpl
push
movsl
xor
push
rorb
test
std
enter
mov
sub
jl
shl
pop
out
testl
pop
sbb
push
out
nop
popa
mov
leave
push
mov
ret
mov
mov
inc
out
fnsave
dec
mov
test
and
daa
test
outsb
aaa
add
add
xlat
mov
xor
push
imul
sbb
subl
movsl
fbstp
dec
hlt
lret
out
sbb
inc
lcall
cli
dec
jb
int
ret
out
lcall
lods
loopne
dec
and
sahf
je
dec
fwait
sbb
out
sbb
sbb
iret
addr16
stc
test
jmp
dec
stos
mov
jecxz
lds
or
rcr
and
fnstenv
int3
cmp
pop
imul
mov
mov
add
test
pop
mov
gs
adcl
cltd
add
repz
sbb
sbb
lret
in
inc
and
inc
popf
jge
xchg
push
sbb
sub
push
mov
push
add
cvttps2pi
frstor
aam
pusha
mov
test
stc
sub
inc
mov
into
xchg
stos
add
pop
jl
pop
in
sbb
cmc
add
dec
jbe
fdivrp
jmp
repnz
out
cmpsb
adc
xor
gs
or
mov
xchg
sbb
add
jae
push
lods
cmp
mov
xlat
inc
jbe
pusha
test
lods
xor
mov
mov
out
cli
bound
mov
in
inc
push
pop
std
adc
add
rcl
lds
adc
nop
outsl
mov
gs
jg
ljmp
sub
jne
into
movsb
or
scas
xor
inc
fsincos
mov
nop
mov
cmp
out
js
mov
mov
xchg
sub
pushf
adc
pop
dec
inc
cmp
int
dec
adc
in
xchg
jle
pushf
iret
int3
mov
xchg
sub
pushf
rorb
outsb
shll
cmp
sahf
in
push
neg
fwait
inc
lret
into
and
lret
iret
dec
push
cmpsb
testl
xor
jne
xchg
imul
cld
inc
repnz
adc
movsb
jb
ss
cld
lret
iret
pop
push
sub
out
jp
push
inc
inc
jb
mov
jb
ljmp
xchg
subb
pop
add
int3
scas
xor
mov
mov
inc
push
add
imul
in
fwait
mov
mov
jle
ret
and
loope
insl
ds
out
jbe
sub
gs
adc
cwtl
cmc
mov
jne
aas
cmp
sub
call
or
outsb
pop
divl
stc
arpl
cmp
out
out
out
sbb
xchg
popa
pop
outsb
push
aaa
inc
push
and
sbb
aaa
cmp
cmp
pop
shrb
adc
outsl
das
xlat
pop
popf
cmp
sbb
shrb
sahf
popf
fadds
add
dec
pop
mov
mov
cmp
xchg
jo
xchg
push
das
sti
add
lahf
and
xlat
xchg
or
fs
int
lea
sub
or
sbb
movsl
out
test
mov
shl
mov
push
mov
cmp
mov
sub
lret
sub
dec
ja
jl
push
fstpl
rolb
bnd
lods
sub
lret
lea
and
mov
push
jecxz
in
cltd
inc
xchg
stos
movsl
add
jne
std
mov
test
insl
add
into
pop
sarb
lcall
in
ss
jecxz
loope
out
dec
arpl
hlt
fisubrl
xchg
add
mov
dec
cmpsl
bts
fistps
cmp
mov
or
pusha
out
or
mov
cs
scas
mov
ljmp
jle
push
ret
loopne
jmp
mov
mov
in
test
shrl
cmp
and
xchg
add
enter
or
vcomisd
fsub
loop
ja
mov
mov
dec
gs
mov
loope
lea
pushf
fimuls
push
ja
stos
jle
into
mov
aas
adc
rorb
lret
dec
mov
jns
loope
std
jmp
aaa
dec
dec
pop
ja,pt
in
test
inc
inc
push
sahf
or
cmp
imul
mov
mov
fs
sbb
mov
adcl
insb
cld
xorl
inc
lret
xor
dec
imul
add
mov
outsl
sbb
in
sub
xor
ret
inc
mov
lods
inc
bound
ret
movsb
cld
popa
in
scas
test
stc
pushf
xlat
push
icebp
xchg
fimull
xorl
pop
negb
and
mov
aaa
push
sub
test
mov
mov
cmpb
daa
pop
in
cmp
vpshad
jge
push
cmp
movb
insl
xchg
push
sbb
push
sub
add
popf
push
aaa
ds
inc
in
add
jl
push
pop
cmp
out
and
stos
sarb
inc
fwait
insb
mov
enter
outsb
add
mov
fnsave
sti
add
xchg
cmp
cmp
mov
sub
pop
aad
mov
adcl
ds
cld
lret
jno
sbb
cs
inc
ret
mov
mov
stos
out
hlt
lahf
mov
jl
push
int3
rcrb
push
xchg
lahf
loopne
and
mov
xlat
in
jp
or
dec
or
out
lret
out
daa
xchg
sbb
dec
sahf
push
dec
pop
xchg
aas
outsl
push
ljmp
iret
adc
stos
loopne
std
insb
jb
ds
sbbl
push
jecxz
push
adc
jne
push
repz
adc
int
cmp
out
shll
in
xor
or
cmpsb
daa
lahf
icebp
xor
mov
jo
jge
sbb
mov
or
test
or
fnstsw
outsb
leave
stc
and
dec
sbb
push
dec
in
lcall
outsb
dec
mov
mov
xor
cmp
iret
mov
mov
mov
andl
mov
push
cmpsl
sbb
sub
or
push
jne
sbbl
add
mov
push
and
push
es
push
sbb
aad
inc
jns
push
pop
inc
sub
aaa
inc
lds
xchg
fcmovnb
adc
xchg
popf
mov
cmpsl
aaa
shr
adc
dec
fadds
adc
jmp
sub
rorl
stc
xchg
xor
in
inc
xchg
loopne
mov
push
push
and
mov
dec
lcall
xchg
outsl
pop
xchg
cmpsb
xchg
cmp
psubusw
cltd
ds
sbb
lods
or
sbb
gs
adcb
push
stos
inc
cld
push
jae
pusha
jecxz
jle
nop
iret
jg
adc
jb
xlat
sti
mov
adc
xchg
ljmp
inc
inc
jae
push
icebp
leave
movsl
adc
roll
cmp
imul
dec
cmp
cmpsb
inc
call
mull
fcompl
push
test
les
lahf
adc
iret
int
into
pushf
cmc
les
imul
sbb
cmp
push
mov
inc
js
daa
cli
sbb
jns
mov
add
push
mov
lods
ljmp
test
popf
or
imul
inc
lods
dec
cmp
cmp
ds
xor
mov
or
out
popf
xor
fidivrl
push
cmp
icebp
pop
subb
and
sbb
inc
lds
testb
daa
dec
insl
add
ss
test
cs
adc
push
mov
push
inc
push
sahf
je
jl
je
rorl
mov
lcall
cltd
lcall
adc
fs
ljmp
test
imul
popf
lods
lahf
push
sbb
rolb
popa
int
aas
cmp
enter
add
dec
fwait
cli
adc
hlt
pop
add
or
hlt
cli
push
add
mov
mov
pop
popf
scas
jle
mov
test
add
leave
pop
jl
lock
adc
stc
lea
popf
push
xchg
dec
jg
lret
pop
ja
mov
dec
sbb
mov
cs
fstps
bound
out
scas
mulb
lods
sub
ds
mov
mov
xchg
pushw
mov
or
dec
loope
push
addr16
xchg
mov
in
test
dec
cwtl
mov
jne
mov
cli
sbb
cwtl
adc
sbb
sbb
mov
jbe
in
das
call
xorl
xor
les
rcl
add
sbb
push
push
sub
pop
jno
add
test
xchg
xchg
adc
push
lret
and
pop
fs
ret
movsb
inc
insl
andb
fs
jns
cmp
je
sbb
in
mov
mov
dec
mov
jge
sbb
sbb
inc
xor
mov
mov
jno
insl
xor
dec
mov
mov
data16
icebp
push
das
sahf
xor
out
dec
mov
fidivs
mov
inc
rolb
cld
cli
or
or
fwait
test
aas
sbb
xor
repz
or
ljmp
ja
cld
xchg
loope
in
lret
test
push
push
clc
shlb
pop
jne
cli
lock
push
das
mov
hlt
xor
cmpsb
out
stos
addb
adc
cmc
sub
aas
mov
jo
mov
call
pushf
mov
inc
add
out
mov
inc
pop
arpl
jo
mov
sub
sbb
movsb
shufps
cltd
js
fldenv
mov
lods
icebp
cmp
mov
repz
cwtl
push
jle
sbb
inc
fs
lcall
and
shll
xlat
and
pop
sbb
dec
sbb
mov
dec
push
mov
aas
mov
add
fsts
repnz
adc
dec
jbe
jnp
je
adc
ret
adc
dec
cli
ss
enter
push
push
int3
jnp
mov
nop
adcl
popa
or
in
les
pop
popl
stos
jmp
and
xchg
or
out
fcomps
loope
cwtl
pop
aaa
out
arpl
clc
push
add
dec
sub
std
lret
dec
in
jne
cwtl
or
insb
hlt
sahf
xor
sbb
cmpsl
adc
pop
leave
mov
js
loop
pusha
xor
aam
lds
repz
scas
inc
cmp
rcr
ljmp
call
pop
sbb
test
idiv
mov
push
pop
push
aad
repz
and
or
ficompl
mov
jns
out
mov
and
test
movsl
movsb
xor
pusha
fmuls
jmp
jg
sub
add
sbb
mov
test
lock
pop
dec
lods
cmp
push
sbb
std
lahf
inc
loop
rclb
shrb
or
fidivrs
mov
push
fmul
fcmovnb
sub
and
lock
sti
fucomip
pushf
fst
arpl
lds
lret
jmp
sarl
mov
movsb
popa
xorl
clc
or
pop
int
lods
imul
cmpsb
idiv
jns
in
sub
aad
out
push
add
xchg
jp
mov
lret
fucomp
pop
jge
push
mov
and
mov
xor
loop
adc
mov
jmp
pop
out
movsb
adc
insb
adcb
sahf
mov
scas
popa
jl
ret
sahf
xchg
aam
cmp
rcrl
push
dec
stc
xchg
mov
iret
cmp
xchg
jl
je
cmovno
jne
daa
lds
mov
adcl
jmp
sbb
mov
cmpsb
mov
and
popa
shlb
dec
dec
jle
test
adc
dec
sbb
xchg
sub
sti
arpl
cwtl
cld
inc
inc
int3
mov
aam
jmp
stc
stc
xchg
clc
jle
out
stos
xlat
pop
in
adc
sar
icebp
sub
int
aam
cmc
xchg
xlat
sbb
mov
or
je
xor
pop
das
inc
ja
je
sahf
mov
pop
sub
sarl
fsubr
cmp
xchg
pushf
jle
icebp
jbe
lret
imull
iret
ret
mov
cltd
repnz
and
add
cld
cmpsb
mov
and
call
jle
mov
xchg
mov
test
sarl
xorl
cmpsb
jge
out
leave
mov
xchg
and
leave
pop
xchg
push
pop
lret
xorl
fcoml
movsb
and
popf
and
adc
sarb
push
mov
shlb
xor
daa
mov
fnstcw
push
cmp
std
push
sbb
int3
jmp
jp
mov
int
jno
aad
aaa
popa
fwait
or
js
sbb
lretw
dec
pop
js
aaa
movsl
jns
lea
jle
push
cmp
jns
fcomps
cmpsl
pop
sub
sahf
sbb
add
sub
jge
aas
mov
dec
jge
lock
adc
lods
sbb
leave
lods
popf
jb
es
leave
fsubp
jmp
lds
sbbb
sbb
xor
fs
cltd
inc
outsb
aas
div
lods
rcll
inc
xlat
stc
push
cmp
mov
push
addl
sbb
xor
fdivs
jecxz
loopw,pn
ja
leave
sar
mov
lods
test
sbb
aam
pop
push
mov
cltd
adc
mov
or
pop
jo
hlt
mov
movsb
lods
jb
imul
mov
pop
mov
push
mov
mov
xchg
into
mov
cmp
aam
inc
push
xlat
fimuls
xor
std
mov
arpl
loop
sbb
xchg
popf
stc
lds
jns
sbb
adc
loopne
mov
or
inc
ror
sub
pop
adcb
lods
add
into
bound
and
push
cltd
gs
push
adcb
adc
xchg
pop
mov
jp
or
cld
in
mov
xor
or
cmpsb
std
push
fadds
xchg
adc
stos
rol
hlt
stos
or
jnp
sub
cmp
aad
push
inc
jns
push
jnp
add
mov
loop
push
fs
push
and
fbstp
popf
inc
xor
loope
lcall
sbb
testl
pushw
lcall
cmpsl
mov
mov
in
ss
shll
mov
test
push
int
movsl
or
out
lds
lods
or
fdivl
test
ja
rcrl
sbbl
mov
shll
push
inc
pop
jp
push
rcr
in
and
ficoms
lods
lcall
dec
aad
test
call
pop
idivb
lock
lods
test
std
jnp
pop
andl
mov
xor
jo
loop
bound
add
add
xchg
mov
imul
mov
xor
adc
out
ret
xor
shlb
mov
lock
xor
cltd
shrl
ret
jb
bound
scas
sbb
stos
pop
jb
leave
pop
mov
ljmp
xchg
mov
sbb
test
mov
add
mov
stc
mov
sahf
jns
aad
mov
mov
mov
jl
lods
or
fimull
popf
cmpsb
sbb
fdivs
xlat
sbb
je
stos
xchg
outsb
mov
fwait
mov
nop
int3
fstps
xor
jo
fadd
pop
mov
stos
mov
mov
lahf
xchg
popf
jo
mov
sbb
push
cmp
int
dec
stc
push
xchg
ss
ds
pop
sbb
stc
jns
or
push
aaa
ljmp
ljmp
movntq
out
test
inc
lods
lods
jecxz
push
pop
sbb
pop
mov
mov
ja
test
mov
xlat
sbb
xor
and
push
lock
and
out
test
adc
and
or
enter
cmp
lods
xchg
shr
cld
xchg
cmp
push
into
out
push
fcoml
sbb
dec
ss
sub
push
sub
sbb
xor
daa
push
cmc
push
cmp
pop
cwtl
sbb
fisubl
popf
out
gs
mov
loopne
mov
sbb
jnp
jle
adc
sub
jp
aad
or
orl
mov
in
sbb
call
inc
and
das
addr16
iret
cmpsl
es
sub
mov
adcl
cmpl
pop
push
sti
dec
sbb
sub
stos
add
les
pop
adc
mov
pslld
fdivrp
xorb
lds
jbe
hlt
sbbl
pop
daa
xchg
neg
push
or
lea
popf
test
aam
pop
push
movsl
or
ret
mov
jns
and
test
daa
sbb
testl
lret
fisubrs
add
cmc
jp
enter
mov
out
cmc
mov
dec
ss
mov
inc
push
push
sahf
mov
mov
movsl
xor
dec
mov
cli
rol
aas
and
pushf
cmc
leave
push
inc
add
mov
fisttpll
lahf
jl
xor
sahf
test
iret
shlb
mov
xchg
xor
aaa
scas
imul
xor
xchg
pop
xlat
mulb
mov
outsl
or
add
push
aam
push
xchg
and
jne
push
sub
pop
fnstsw
stc
scas
mov
add
push
xor
mov
push
add
add
adc
andl
pop
mov
je
icebp
sbb
inc
add
mov
jnp
fdivp
arpl
mov
lds
sti
lods
je
in
and
out
iret
iret
push
add
mov
mov
jo
mov
sahf
jl
loop
gs
js
cltd
pop
ds
movsb
xor
loopne
push
push
aam
and
jns
push
sbb
mov
movsl
xor
iret
jb
dec
das
jns
in
or
stc
mov
ret
xchg
and
mov
xor
hlt
leave
popa
dec
lock
mov
push
les
in
arpl
mov
push
loop
sub
lcall
and
repz
cmp
mov
das
shrl
rclb
pushf
cli
sbb
dec
js
cmpb
dec
mov
loop
shrb
iret
in
or
roll
sub
add
pop
test
and
leave
or
xor
mov
out
out
xchg
jno
and
mov
mov
divl
xor
arpl
adc
mov
mov
nop
push
dec
lret
les
add
jecxz
shrl
inc
outsl
inc
adc
inc
fbstp
inc
add
mov
clc
aas
test
adc
ljmp
xor
scas
fmul
sbb
mov
cmp
inc
adc
fstps
mov
pop
repz
into
lods
xor
shl
or
adc
or
jne
clc
or
sub
push
sar
fwait
or
jne
fcoml
and
xchg
sub
movsl
out
sahf
push
les
or
sbb
inc
sbb
xchg
lods
loop
xchg
lods
call
andb
jp
add
or
bound
or
jl
adc
xor
mov
mov
rclb
sbb
pop
in
mov
insl
ret
andb
decl
push
fdivrs
mov
sub
scas
cmp
mov
jmp
jmp
clc
aas
push
mov
nop
sbb
inc
adc
rcrb
lds
pop
mov
cmp
pop
inc
insl
xchg
in
adc
mov
jno
mov
push
pusha
xchg
call
jle
cmpsb
sbb
out
xchg
mov
test
and
sub
dec
movsb
pusha
jg
ss
scas
sub
fnstcw
pop
mov
dec
pop
lret
arpl
lea
pop
and
out
int
adc
lahf
aaa
sbb
inc
lret
fwait
pop
cmp
or
adc
xchg
or
and
mov
inc
arpl
mov
xchg
dec
out
lock
inc
or
and
push
adc
popf
enter
inc
add
lods
xchg
mov
or
dec
push
mov
mov
ljmp
mov
stos
int
dec
addr16
xchg
add
nop
xor
xchg
decl
add
inc
jge
je
cwtl
and
in
and
mov
push
cmc
in
out
push
mov
outsl
lods
sub
insl
repnz
loopne
nop
cmp
mov
inc
out
and
sbb
cs
cmp
ds
mov
inc
sahf
inc
daa
fwait
movsl
ret
mov
xor
push
sarl
movsl
aad
rorl
sbb
cmp
in
push
es
mov
mull
sahf
in
fsubrs
push
fadds
hlt
xlat
xor
aam
push
push
lock
fnsave
xchg
test
pop
je
fs
mov
int3
fwait
push
push
jbe
sub
or
xchg
sbb
lret
clc
ds
mov
push
jmp
mov
mov
jge
jecxz
push
jmp
xchg
mov
sbb
fwait
out
loope
scas
jne
mov
dec
popf
mov
imul
mov
xchg
pop
sub
out
inc
pop
jmp
mov
sbb
pop
jmp
pushf
bound
ljmp
add
xchg
lahf
cwtl
adc
js
ss
adc
sbb
test
pop
repnz
xchg
push
fsubs
push
pop
daa
rcrb
inc
or
leave
mov
add
pop
lcall
jns
xchg
adcb
pop
jge
fs
int3
fldcw
jle
fsub
sbb
push
cmpsl
test
ljmp
or
add
xchg
jns
sbb
rorb
mov
xchg
filds
xor
xchg
mov
testl
sub
cltd
xchg
or
jp
fists
or
fldcw
inc
mov
xor
xlat
test
pushf
stos
xchg
int
push
aam
or
dec
pop
mov
add
test
xchg
popf
test
cwtl
fnstsw
xor
sub
xor
fs
icebp
fistpll
imul
sub
xchg
imul
mov
mov
fstpt
shll
cmp
pop
sbb
loop
ss
stc
push
stc
pop
outsb
pop
loope
xlat
xlat
jecxz
inc
in
xor
fs
and
mov
sbb
mov
dec
out
or
rcrb
pop
dec
sarb
push
xchg
add
hlt
add
cmp
and
cwtl
mov
in
jae
mov
sub
cs
dec
in
pop
mov
gs
aas
insl
mov
dec
xchg
icebp
sbbb
in
hlt
jns
pop
ret
mov
mov
jmp
mov
lret
lock
push
orl
aaa
aam
jno
int3
cmp
mov
mov
pop
loope
xor
in
filds
mov
sbb
xchg
add
jae
pop
jg
leave
jmp
je
addr16
ss
mov
push
mov
shll
cmp
arpl
or
add
mov
and
xlat
in
jge
push
cmp
mov
jno
pop
adc
je
add
int3
js
jmp
loope
push
rol
push
cli
or
pop
test
ljmp
jae
outsb
ret
outsb
movsb
mov
pusha
pushf
cmp
rorl
incb
xor
cmpsb
add
xor
imul
in
pop
scas
popl
test
lock
sti
xor
push
adc
mov
icebp
and
jecxz
mov
jno
xor
sahf
pop
adc
xchg
shr
xchg
pop
loope
popf
push
xchg
sub
dec
cs
mov
push
xchg
pop
andb
xor
pop
add
hlt
adc
hlt
add
xchg
sub
mov
outsb
loopne
add
cwtl
fdivrp
dec
adc
push
loope
inc
or
pop
das
mov
mov
inc
mov
sub
std
sbb
out
xchg
fs
cld
ja
iret
add
push
nop
inc
iret
js
pop
xchg
mov
ljmp
jl
and
stc
data16
push
xchg
jne
mov
jmp
loope
pushw
sbb
add
sarb
add
mov
insl
sahf
dec
test
fsts
std
outsb
sbb
mov
sub
adc
jmp
or
leave
cmp
call
dec
sbb
scas
and
xchg
mov
cmpsb
sarl
imul
scas
int
inc
push
dec
xor
xchg
lea
fidivrl
mov
imul
mov
push
mov
stc
std
jg
push
nop
outsl
inc
pop
sub
cmpsb
aad
loop
js
mov
inc
jb
sbb
cmpl
ret
negb
mov
addr16
dec
mov
clc
sub
and
sub
mov
inc
jae
push
or
push
mov
inc
mov
mov
pushf
andb
roll
cmp
fstpt
adc
shrb
rolb
cs
insb
mov
cmp
or
insb
aam
fcompl
cmp
pop
push
mov
push
insl
inc
sub
xor
mov
mov
dec
push
sahf
dec
pushf
loopne
out
cmp
mov
loopne
jecxz
inc
xor
lods
sbb
adc
and
lcall
dec
mov
cmpsl
fcmovnbe
movsl
mov
fidivrl
sbb
fdivrs
test
pushf
andb
loop
mov
fs
pop
push
or
add
xor
mov
stc
data16
clc
cwtl
or
lds
loope
jg
add
into
iret
mov
js
mov
aad
mov
mov
test
fisubrl
xor
in
in
or
in
pop
lcall
xchg
adc
cmp
fmull
jmp
insb
mov
jle
pop
in
and
mov
xlat
fsubrl
gs
push
cld
popf
mov
data16
ljmp
mov
ljmp
cmp
call
jecxz
cli
arpl
fdivs
jno
mov
mov
mov
mov
mov
add
dec
fisubrs
xchg
mov
pushf
xchg
push
push
scas
cwtl
mov
mov
dec
and
sbb
xchg
mov
mov
xor
mov
adc
loopne
mov
shll
add
hlt
add
outsb
fldt
lock
mov
stos
dec
xchg
sub
xchg
test
sub
imul
jle
mov
inc
cmp
or
sub
ret
mov
jae
repnz
out
mov
lock
arpl
les
test
or
mov
sub
stc
lcall
push
aaa
fildll
push
or
xchg
push
push
seta
into
mov
fs
inc
jge
shll
pop
sbb
daa
inc
inc
addr16
pop
add
mov
pushl
and
push
test
push
add
repz
jae
pop
sbb
shrl
or
movsl
xor
test
inc
les
loopne
pop
cmp
cmp
popa
hlt
dec
adc
adc
cmp
xchg
inc
mov
xorb
sbb
ror
push
xchg
jno
int3
lcall
out
mov
and
push
bound
xchg
psubb
out
ljmp
mov
out
and
iret
dec
jne
xor
pop
jb
mov
nop
pop
out
xchg
scas
and
sbb
out
jg
mov
xchg
jns
mov
and
lahf
pop
mov
pop
xchg
inc
cmp
in
in
adc
cmp
leave
dec
stos
test
mov
inc
in
mov
pop
sub
call
push
outsb
imul
jbe
aad
xchg
ja
xchg
movsl
repnz
in
xchg
cmp
fcom
pop
jbe
xchg
pop
xor
shll
shlb
push
popa
outsl
jns
daa
pop
pop
in
dec
sub
sti
repz
lds
or
jno
xchg
icebp
mov
ds
mov
inc
pop
or
loopne
mov
fisttpl
lods
push
mov
add
sub
rol
and
cmpsb
popa
addr16
mov
out
cld
nop
pop
or
repnz
in
cmp
iret
adc
arpl
push
mov
xchg
or
aaa
rol
in
sub
lcall
gs
ret
popf
jne
push
mov
inc
jae
imul
inc
pop
inc
pop
adc
add
sahf
jmp
mov
fnsave
icebp
sbb
int
push
es
gs
dec
addl
add
cmpsl
aad
in
mov
dec
scas
fstl
movsl
pop
xchg
arpl
test
call
movsb
mov
jl
insl
cmp
cmp
push
fs
sbb
inc
pop
or
int3
lahf
xchg
adc
stc
dec
notl
xorb
std
jnp
xor
xor
mov
inc
aam
andl
adc
jle
jb
stos
xchg
jbe
jp
lods
jb
jb
imul
jnp
pop
jle
into
ss
js
bound
out
call
or
lock
daa
xor
repnz
rorl
pop
mov
mov
and
mov
dec
cmp
mov
repz
sbb
sbb
out
jnp
int3
adc
inc
into
cmp
cld
imul
sbb
dec
sub
loopne
inc
or
andl
mov
sub
or
cmp
push
sbb
enter
push
inc
aas
lods
ljmp
mov
mov
cs
cs
sbb
ret
pop
xor
xchg
rcr
outsb
test
sbb
rol
out
js
pop
push
fadds
out
mov
push
jno
jg
xor
daa
ffree
jns
scas
adc
cld
sub
dec
lcall
outsl
cmc
lea
and
pop
sbb
sub
cmp
push
jae
mov
mov
jp
mov
mov
mov
js
sbb
mov
jge
cmp
xor
add
in
sahf
or
stos
pop
xlat
ds
mov
lret
in
mov
outsl
movsl
and
cmp
push
lret
mov
xchg
adc
adcb
dec
sub
inc
mov
inc
daa
jbe
pop
dec
sub
repz
jg
iret
out
popf
enter
sbb
mov
add
loope
xchg
insl
pop
mov
fsts
in
inc
xor
push
mov
pop
in
pusha
movsl
jbe
in
push
aam
es
fists
dec
jne
cs
jo
cmp
sbb
and
clc
mov
inc
pop
ss
insb
in
out
sbb
scas
lock
cmpsb
lock
dec
jp
inc
pop
ret
dec
cmp
hlt
cmovle
test
xlat
or
and
push
aas
inc
pop
pushf
jmp
inc
mov
pop
pop
int
mov
aam
cmpxchg
inc
lods
sti
sub
arpl
sub
cmpsb
add
mov
das
add
push
pop
dec
mov
cwtl
lods
fldcw
dec
jns
sbb
test
add
popa
out
push
push
push
addl
movsl
push
pshufw
idivl
outsb
ret
mov
pop
dec
mov
push
inc
pop
dec
sbb
out
jae
shl
addr16
fsubrs
mov
gs
dec
jbe
hlt
jb
shr
cwtl
cmp
push
out
mov
mov
mov
mov
bound
sbb
adc
mov
addr16
and
jo
xor
mov
mov
and
insb
stos
fsubrp
mov
xor
pushf
aad
xchg
adc
pop
push
jmp
scas
xchg
xchg
repnz
jmp
clc
jp
icebp
shlb
mov
sbb
sti
mov
add
or
std
cmp
push
mov
xchg
data16
push
aaa
dec
out
shr
pop
or
dec
pop
mov
cmpsb
cmc
rorb
ret
or
add
inc
mov
add
bnd
dec
dec
scas
xcrypt-ecb
cmpsl
lss
dec
lea
imul
lret
je
pop
pop
rcl
pop
push
ds
and
mov
out
test
xor
inc
pop
aaa
lret
push
add
sub
adc
dec
stos
xchg
dec
jo
jge
mov
mov
aaa
aaa
cmpsl
adc
cmc
cmp
daa
into
push
cmp
mov
mov
jne
ffree
pop
mov
push
sbb
xlat
mov
pop
negl
inc
sub
cltd
mov
scas
push
and
es
ret
ja
lcall
test
mov
cmp
sbb
into
test
mov
xchg
add
int
shrl
loop
xchg
pop
jl
enter
lahf
cltd
pop
inc
push
mov
out
jo
mov
or
movsl
lock
lret
inc
testb
out
sbb
mov
sbb
push
xchg
adc
mov
jb
adc
jbe
mov
ja
mov
push
cli
pop
popf
cmp
sti
in
pop
push
sbb
pushf
mov
dec
cmp
cmp
enter
mov
lea
push
mov
out
into
sub
aam
rcll
mov
sub
not
cmp
adc
push
in
aaa
cli
pop
pop
fidivl
pop
outsb
pushl
pop
fs
pop
fs
xor
sbb
push
adc
or
cmp
dec
into
jae
push
daa
loop
and
mov
dec
orb
jns
cmp
adc
setae
xchg
fdivs
and
or
xor
das
imul
sti
dec
xor
mov
cmp
xor
dec
sti
fidivrs
pop
pop
mov
inc
jb
aaa
fsubrp
ja
test
inc
and
jecxz
test
in
pop
dec
or
mov
or
xchg
fwait
mov
inc
aad
adc
push
jno
je
out
fwait
jb
sub
dec
into
fs
dec
xchg
fwait
mov
sub
shl
aaa
xchg
nop
sbb
dec
pusha
ja
out
lret
xchg
mov
mov
test
fbld
ljmp
mov
jne
sub
adc
arpl
pop
imul
and
ljmp
pop
leave
mov
std
cmp
leave
sti
jge
popf
loop
xchg
push
aas
daa
movhps
xor
imul
les
test
mov
adc
daa
push
adc
jecxz
adc
cmp
pop
sub
call
or
or
mov
adc
repnz
gs
in
fwait
mov
shll
mov
xchg
cmp
std
adc
in
mov
mov
xchg
enter
fisubl
jae
in
ret
cwtl
mov
cmpsb
sub
push
push
inc
dec
xchg
fdivs
mov
enter
in
adc
cmc
add
outsl
pop
stos
leave
ret
push
or
push
sub
inc
jl
sub
xchg
lcall
testl
das
insl
dec
jecxz
cmp
lahf
pop
cmpsb
test
repnz
dec
lods
or
nop
das
ficompl
aad
dec
sbb
mov
push
bound
popa
mov
add
js
inc
add
sub
andb
push
das
sub
enter
test
sbb
xor
lcall
pusha
test
fmuls
sub
and
mov
loope
repnz
or
aad
mov
hlt
popa
bound
arpl
add
movsl
leave
sahf
mov
and
push
jmp
xor
jb
add
lods
cs
mov
push
ja
out
or
dec
mov
aad
or
inc
mov
xor
jns
push
dec
addr16
stos
hlt
xlat
push
or
xchg
cmp
mov
xor
cmp
fsts
push
sti
xchg
mov
pop
push
dec
sbb
inc
push
cld
xor
or
adc
test
xchg
jbe
pop
fcoms
fsts
call
roll
loop
movb
jmp
clc
in
mov
fistpll
sub
mov
test
adc
stc
arpl
adc
or
jl
popf
xor
in
add
cwtl
xlat
repz
decl
pop
or
inc
int
sbb
dec
int
pop
fmull
rorb
out
mov
cs
xor
xor
inc
lcall
hlt
sbb
pop
push
mov
sub
and
xor
lods
enter
and
xchg
and
cmp
add
iret
sbbl
rcrl
jge
imul
dec
out
jns
push
pop
aam
aad
inc
rcrb
fists
cltd
popf
cld
jl
inc
sbb
ja
movsl
mov
ffree
es
mov
mov
and
lahf
pop
call
xchg
adc
pop
in
popa
nop
lret
iret
cmp
xchg
subl
sub
mov
push
dec
sbb
inc
nop
aad
inc
xlat
daa
loope
push
mov
nop
movsb
das
sub
cmp
or
ljmp
test
das
jl
fwait
push
dec
sti
out
loopne
sahf
mov
sbb
sarb
xor
in
lock
push
inc
movhps
movsl
outsb
cmpsl
lret
movsb
test
ficompl
push
jo
stos
dec
lret
cmpb
mov
cmp
add
sbb
mov
jb
aam
xchg
jo
xor
adc
loop
movsb
or
loopne
inc
xchg
mov
dec
and
inc
jge
or
lods
adc
push
in
decl
mov
sub
ds
inc
or
popa
pop
jae
and
ljmp
hlt
adc
out
xorl
add
sbb
scas
sbb
enter
dec
jl
cmpsb
pop
fabs
pop
dec
and
in
add
pop
pop
sub
cmovbe
sti
push
mov
icebp
adc
loop
and
jne
in
add
jae
cli
bnd
lods
int
xchg
pop
pushf
insb
jmp
and
cmp
inc
in
movsb
shlb
jo
push
out
and
pushw
pop
sub
popa
int3
mov
movb
int
lods
lods
pop
loope
pop
insl
stc
push
mulb
xchg
mov
push
data16
mov
adc
jg
mov
push
repz
jge
into
js
fdivr
mov
cld
ret
in
jmp
fsubrl
addb
xor
cmpsl
test
push
stos
loope
stos
andb
movsb
sahf
ret
roll
mov
xchg
and
cmp
fldl
xchg
movsb
addr16
shlb
cwtl
add
ret
or
pushf
add
inc
jl
and
stos
repnz
sbb
push
aam
mov
cli
dec
imul
into
mov
cmp
inc
jnp
loope
lea
or
cmpsb
test
test
cmpsl
mov
and
je
paddsw
xchg
addr16
inc
inc
xor
or
fistl
inc
outsb
jmp
pop
scas
out
inc
and
roll
sbb
cmp
dec
clc
pop
test
mov
push
xchg
insb
inc
sub
fmull
and
and
mov
in
pop
jns
fisubrs
pop
out
and
mov
arpl
jge
mov
test
jle
sbb
rcll
mov
cmp
ret
or
ret
scas
dec
or
aad
repz
movsb
mov
jl
addr16
push
int
cmc
imul
lcall
xchg
int3
lret
and
fcompl
fnstenv
sahf
sbb
sub
inc
cwtl
add
cltd
sub
pop
pop
pop
inc
mov
or
inc
fldcw
jae
mov
mov
test
push
lahf
test
mov
popf
lea
fidivrs
movsb
sub
in
mov
add
jne
aaa
test
mov
and
lcall
pop
ljmp
test
sbb
in
lods
les
test
shrb
cmpsl
shlb
pop
mov
push
xorb
lret
xchg
push
adc
fidivl
xor
shlb
iret
fimuls
cs
lret
or
js
shrb
rcll
and
lcall
dec
jnp
addr16
aaa
lahf
shrl
sub
jl
dec
push
or
pop
outsb
pop
in
ja
adc
fcompl
lcall
cmpl
es
lcall
and
or
int3
loop
mov
pop
loope
inc
mov
jge
in
jmp
xchg
dec
call
mov
lods
sub
add
cld
cwtl
dec
out
push
enter
stos
mov
sub
repnz
mov
adc
fwait
sbb
orb
inc
test
loop
movsl
divl
inc
sbb
mov
push
and
inc
add
int3
sub
push
mov
movsb
push
or
xchg
das
jb
inc
cld
cmp
dec
add
stos
xchg
rorb
int3
sbb
push
push
mov
call
push
les
movsb
test
pushf
fs
xor
xchg
cmc
mov
jle
push
out
or
popf
jp
shlb
lock
cltd
std
dec
jo
dec
add
jae
xor
cmpsl
mov
dec
cmp
fiadds
adc
neg
fcoms
sbb
daa
xlat
mov
mov
mov
xor
ss
int3
lcall
int3
inc
fisttpll
leave
mov
nop
xor
pop
int3
shll
or
imull
jge
dec
mov
sahf
rcrl
pop
mov
jle
mov
inc
out
in
test
adc
in
popa
std
lock
adcb
add
in
mov
push
test
call
xchg
in
mov
imul
jle
xor
push
xchg
xchg
in
out
test
pop
mov
jne
mov
inc
mov
fldenv
xchg
mov
xchg
je
push
lods
mov
test
sub
sarb
je
mov
push
fildll
or
xchg
inc
repz
aam
nop/reserved
jl
mov
and
ljmp
add
pop
sbb
aam
xorl
mov
jb
or
lret
and
push
lret
mov
aam
sub
iret
addr16
jmp
mov
adc
in
inc
mov
add
inc
testb
mov
cmpsl
or
xor
or
in
inc
xor
inc
mov
iret
mov
xchg
mov
into
fistpl
das
sti
dec
lods
xor
and
pop
sbb
mov
jno
jns
and
inc
arpl
test
inc
xchg
sub
xchg
in
call
cmp
adc
in
lea
sub
in
fcmovb
cli
inc
push
jle
push
repnz
add
test
ds
repz
and
ja
pop
cmp
add
xor
lods
adc
dec
sbb
pushf
pushf
gs
xchg
xor
into
mov
test
jmp
lret
cmp
lret
xor
mov
jb
pop
fcmovnu
insb
mov
hlt
xor
rep
cli
pusha
jg
push
xchg
enter
loop
stos
out
pop
stos
jns
cmp
divl
mov
in
sub
pop
mov
in
scas
and
cmp
fs
test
out
push
xor
mov
and
cli
or
push
push
scas
and
adc
loop
xchg
fimull
ljmp
dec
pop
mov
and
cmp
iret
add
and
adc
ds
push
mov
jno
loopne
adc
push
push
push
jp
or
mov
dec
xchg
mov
es
loop
pop
pop
mov
xchg
mov
lods
inc
lods
sub
dec
inc
jecxz
dec
dec
pop
inc
jmp
inc
lods
push
dec
test
out
std
xor
idivb
xorl
shll
fs
scas
or
repnz
aam
subb
sub
cmc
xchg
adc
mov
sbb
scas
sub
and
jbe
dec
xor
lahf
subb
movsb
mov
rcll
push
andb
mov
pusha
idivl
je
sar
pop
incb
or
loop
inc
rorl
cmpsl
pop
incl
sbb
addr16
inc
loopne
xor
inc
mov
add
xor
rcrb
inc
ss
clc
rcr
xlat
push
cli
data16
pop
jl
sbb
ja
aas
jg
sub
dec
pop
mov
mov
int
clc
xor
popa
movq
lods
in
test
add
or
pop
aaa
xchg
pop
shll
mov
cmp
mov
test
pop
pop
aam
dec
loop
inc
fcom
in
cltd
jg
xchg
clc
mov
xchg
mov
inc
add
cmp
jb
dec
shll
jb
aad
mov
loop
mov
mov
pop
inc
in
push
or
bound
cmp
mov
jecxz
insb
pop
mov
pop
sbb
mov
cmp
adc
sbb
lds
lock
idiv
push
push
push
out
das
lret
mov
mov
and
int
decl
add
cli
jp
xor
fmuls
jp
mov
mov
pop
shlb
adc
push
inc
int
aad
push
ljmp
shlb
push
push
jmp
daa
pop
mov
push
test
push
popa
aaa
jmp
cwtl
dec
in
xor
fnstsw
cs
jns
repz
inc
and
xor
or
cs
sbb
call
dec
dec
mov
or
popf
inc
pop
movsl
sbb
rcl
xchg
test
adc
xor
ja
jle
arpl
outsl
rcl
xor
lea
jp
popa
nop
pop
cli
xor
mul
gs
mov
xchg
ja
cmp
cwtl
shlb
sti
push
lret
mov
lock
push
ds
mov
enter
or
repz
lea
xchg
jle
insl
das
loopne
testb
stc
pop
adc
lahf
pop
jl
pop
sub
je
push
push
popa
cli
jnp
in
mov
lahf
inc
pop
push
test
imul
xorl
mov
mov
iret
xchg
cwtl
shrb
and
lahf
mov
aad
cmp
je
inc
jbe
out
shlb
mov
or
pop
test
std
and
out
aam
xor
inc
repz
mov
cltd
pop
xlat
iret
mov
stc
xchg
push
xchg
push
add
fcom
int3
notb
in
pop
push
ljmp
sub
adc
mov
loopne
dec
sti
mov
imul
pop
data16
inc
xor
sub
mov
mov
out
jge
dec
aam
in
cmc
inc
test
scas
popa
leave
xchg
mov
xor
test
xchg
dec
nop
cli
and
ss
push
jle
mov
rcll
popa
inc
pushf
push
aas
lret
fcmovbe
pop
lods
outsb
int3
popf
out
mov
gs
lcall
cmpsl
stc
pop
jne
cmp
xor
add
out
mov
push
xchg
mov
mov
mov
cld
push
fldcw
lret
add
mov
and
or
sub
mov
stc
push
dec
jp
cli
inc
push
icebp
xlat
popa
lcall
xor
leave
add
jbe
sbb
xchg
cmp
insb
lock
inc
ret
mov
adc
sahf
insb
loopne
xchg
daa
sbb
data16
mov
out
pop
mov
pushf
xchg
lcall
shrb
cmc
shlb
cmpsb
mov
out
js
cltd
cmc
xor
jp
std
std
sbb
adc
arpl
popf
jne
je
in
enter
pop
jns
movd
shll
fucom
jne
push
icebp
xor
addr16
pop
mov
mul
push
lcall
dec
out
add
cmpsb
popa
jnp
or
inc
iret
fstpt
sbb
jge
rcrb
jnp
in
mov
pop
fldt
cs
mov
icebp
int
push
stc
into
int
std
decl
lret
inc
enter
pop
mov
nop
les
cmp
gs
aam
mov
jbe
push
imull
test
dec
mov
mov
std
icebp
fstps
sbb
imul
xchg
inc
and
movsb
mov
sub
es
rorl
mov
sahf
mov
into
data16
or
adc
jae
pop
jmp
jns
aad
xchg
mov
int
les
imul
add
lock
icebp
aas
sarl
mov
jle
pop
push
psrlq
ret
les
movl
mov
iret
cmp
sbb
movsl
nop
shl
xor
imulb
gs
inc
xchg
xor
mov
push
sub
inc
lods
and
or
cltd
mov
xor
pushf
repz
xor
sti
xor
jne
add
mov
adc
ja
lcall
or
icebp
sbb
jecxz
xchg
pop
xchg
dec
jno
insl
sahf
lds
sbb
pop
xchg
xchg
pop
push
pop
jg
adc
fldcw
dec
add
cmp
loop
sbb
push
mov
add
dec
les
hlt
cmp
es
pop
cmp
pop
fidivl
in
fdiv
sahf
xchg
inc
ds
jmp
insl
jl
lock
adc
icebp
orl
jnp
mov
test
dec
ljmp
inc
add
addr16
dec
mov
add
inc
hlt
mov
stos
in
add
fstl
stos
push
pop
mov
and
imul
dec
cmpsb
mov
dec
jecxz
stc
cmc
adc
mov
dec
push
aad
hlt
mov
and
xchg
mov
xor
popf
add
insb
mov
adc
rorb
outsb
out
cli
jecxz
add
icebp
cmp
mov
add
lea
push
xor
inc
shll
pop
aaa
push
stos
xor
scas
int
cltd
mov
inc
sub
cmc
out
sbb
in
sub
xchg
fwait
arpl
and
dec
stos
movb
mov
jbe
mov
stc
adc
push
push
mov
xchg
lahf
nop
ja
aaa
enter
lcall
xchg
mov
mov
sub
dec
ljmp
ja
xor
adc
rcr
jb
xchg
xlat
jnp
imul
xor
out
xor
sbb
sub
cmpsb
adc
sarl
testb
into
out
cltd
out
cmpsb
adc
sub
adc
mov
jno
cld
iret
inc
cld
xchg
stc
repnz
cli
push
das
jns
cmpsl
jo
rcrl
pop
repnz
push
jg
mov
adc
jl
jb
data16
jae
sbb
loop
loope
orb
jg
mov
pop
xlat
popa
xlat
adcl
cmp
inc
lods
insb
movsl
je
notl
sub
dec
xor
mov
cmpsb
cltd
repnz
lds
inc
cmp
mov
daa
test
dec
xor
lret
and
pop
flds
dec
or
addr16
pushf
pop
imul
js
stc
daa
bnd
out
or
push
ljmp
jl
adc
fwait
pop
iret
lock
mov
and
lea
sub
lods
push
mov
nop
add
pop
das
sbb
out
pop
sbb
popl
dec
gs
cs
rcr
or
inc
fs
lcall
push
jg
and
cmp
cmc
cmpsl
enter
mov
mov
push
sbb
cmp
inc
dec
add
stc
fiadds
imul
es
rolb
pop
cmpsb
lcall
gs
dec
xchg
mov
mov
jbe
js
nop
pop
jno
sbb
dec
test
or
push
push
push
mov
clc
das
mov
sbb
pop
test
lods
cmp
inc
pop
xor
ret
jno
and
push
cmp
add
add
jmp
sbb
outsl
out
cli
dec
mov
test
scas
rorb
repz
xor
fwait
mov
cli
lcallw
in
push
jmp
jl
ret
rcll
imul
pop
ljmp
jno
or
cmc
or
xor
mov
es
rcll
inc
cmp
les
test
xchg
inc
adc
es
sbb
scas
mov
mov
lea
pop
adc
and
dec
out
xor
ret
xchg
push
xchg
xor
mov
sbb
sub
lcall
or
out
inc
mov
scas
inc
inc
or
push
sub
in
jecxz
ret
mov
or
pop
sbb
inc
jg
stc
sub
fildll
subl
clc
decb
or
repnz
inc
ret
pop
testb
pop
dec
xchg
cmp
mov
mov
and
mov
aam
push
pop
movsl
xor
xor
jae
bound
popa
xor
adcb
int3
push
lds
cld
out
jge
repz
jno
mov
shr
inc
fdivp
out
imul
aad
les
pop
icebp
lret
pop
and
cli
adc
add
inc
sbb
push
test
or
add
loopne
push
jns
inc
mov
nop
sti
fcomps
stc
hlt
cmc
mov
xchg
test
push
rcll
sar
pusha
rclb
fcom
aad
mov
iret
stc
scas
rcrb
jbe,pt
pop
pop
stc
cld
imul
sub
push
push
aam
leave
mov
movsb
sub
rorb
sahf
fs
repz
sarb
mov
data16
fdivs
or
push
adc
or
dec
cmpsb
lods
xchg
enter
mov
inc
cmp
pop
lcall
rorb
decl
add
pmaxsw
inc
dec
jl
inc
stos
xchg
xchg
push
mov
push
icebp
adc
add
addl
inc
fcoms
xor
in
adc
out
loopne
fidivrs
fstl
scas
leave
je
insb
or
sbb
fistps
add
test
or
xchg
shl
jmp
andb
aam
pop
pop
mov
sbb
loop
xor
xchg
lcall
sub
add
lahf
sar
add
pushf
inc
mov
leave
xor
icebp
push
adc
mov
insl
dec
jbe
test
or
nop
addr16
cli
aad
cmp
and
xor
push
pushf
fsubr
popa
inc
int
bound
test
jecxz
cmp
cs
popa
outsb
pushf
out
mov
mov
push
pop
cmpsl
inc
fdivs
jmp
dec
cmp
sarl
jecxz
mov
sbb
cmp
mov
cld
mov
mov
pop
lcall
xor
push
xor
ljmp
sub
idivl
scas
jb
mov
and
sti
or
inc
sbb
push
mov
mov
inc
pop
ljmp
push
or
push
test
pop
pop
js
scas
or
addl
or
std
fadds
lret
xchg
adc
daa
je
and
ljmp
adc
mov
push
cmp
mov
inc
lock
xchg
lods
ja
ret
sub
pop
movsl
mov
jnp
xchg
cli
xor
xchg
inc
push
in
mov
ds
inc
or
or
gs
das
punpckhwd
daa
insl
test
jo
mov
shr
loopne
and
cltd
push
push
xor
aad
pop
lock
lock
popf
outsl
add
jbe
rcl
pop
clc
hlt
xor
mov
inc
mov
mov
adc
daa
clc
add
ds
mov
movsl
pop
movsl
jmp
outsb
clc
addr16
pop
push
jl
lea
xlat
jecxz
pop
iret
inc
cmp
sbb
pop
pop
adc
das
pop
adc
cmp
sbb
movsb
popa
adc
out
call
neg
push
or
cmp
sub
popa
ss
rcrb
lcall
cli
es
xor
das
out
es
sub
test
push
lahf
xchg
sahf
pusha
sahf
mov
into
push
aaa
mov
add
cmp
push
jl
in
inc
test
and
mov
pop
ds
dec
and
jne
gs
loop
mov
jg
dec
or
push
dec
mov
dec
nop
pop
mov
sbb
xor
ss
cmp
sub
ljmp
sti
out
orl
or
pop
xor
std
into
nop
dec
jmp
add
and
repnz
lds
xor
cmp
cmp
sub
or
mov
mov
out
aaa
push
xor
sbb
lock
in
adc
hlt
out
fs
xchg
cli
push
jl
inc
aas
pop
and
hlt
inc
pushl
pop
inc
and
js
push
mov
into
cmp
movb
inc
mov
sbb
jns
add
jmp
push
jns
shll
insb
sbb
pop
loop
jno
mov
inc
mov
loopne
push
pop
or
loope
or
sub
scas
or
add
movb
aam
idivb
and
mov
pop
push
mov
repz
icebp
sub
jg
pop
jne
mov
fcmovu
or
fcmovu
inc
aad
jmp
jns
push
pop
xor
test
lahf
cmpsb
xor
lods
or
add
movsb
jb
jb
inc
and
mov
movsl
inc
aas
ss
cmc
data16
push
sub
push
mov
jg
xor
or
cmc
stc
add
loop
inc
push
xabort
mov
add
lods
jb
jae
push
imul
stc
push
std
push
pop
jmp
push
mov
jp
ljmp
repnz
cmc
add
ss
rcl
mov
aam
push
out
nop
ds
push
xor
out
inc
mov
mov
jp
xchg
in
lea
sahf
cltd
push
add
imul
jmp
push
add
dec
xorb
repnz
bound
rolb
jbe
test
cltd
adc
sbb
pop
jmp
out
push
fsubrs
xor
dec
je
movsl
xor
sbbl
dec
les
hlt
xchg
shrl
test
movsb
loope
je
ret
in
fisubrl
xchg
dec
insb
sbb
sbb
pushf
jnp
cltd
push
int
in
cmc
jecxz
jae
mov
mov
mov
cld
mov
inc
out
fsubl
add
clc
addb
out
pop
mov
outsb
lret
out
popf
push
hlt
inc
push
mov
sub
scas
hlt
dec
xchg
cmp
cmc
mov
inc
sub
insb
push
jge
lahf
clc
in
and
sbb
das
testl
pop
ret
mov
ret
xchg
jns
add
fcmovne
dec
mov
imul
aad
orb
inc
shrl
sbbb
add
sub
jne
cmc
fwait
mov
repz
pop
jl
inc
popf
stos
imul
sti
insb
xor
call
stc
out
adc
repz
pop
jp
bswap
addb
inc
aaa
jecxz
and
xchg
cmp
addb
sub
mov
adc
fcom
inc
out
cmp
incb
in
in
or
insl
jnp
ja
loop
pop
ds
jb
insb
adc
popa
cmpsb
jbe
data16
ss
ja
xchg
lahf
adc
fnstcw
aam
push
mov
dec
fbstp
add
mov
jl
add
pop
shll
movsb
push
je
sbb
sti
out
outsb
adc
push
xchg
add
jno
pop
rcll
lds
cmp
loopew
call
and
jne
inc
inc
xchg
mov
ja
mov
and
adcb
inc
imul
jne
outsl
lock
outsl
mov
imul
out
es
ret
sti
mov
dec
push
leave
outsb
adc
push
mov
pusha
cmp
cmpsl
sub
div
cld
je
sbb
dec
jae
in
mov
fmul
inc
mov
jecxz
fstpt
sbb
jge
xchg
sahf
pop
or
and
cmp
stos
sub
xor
add
bound
cmp
sub
fsubrs
mov
pop
cmpsl
jp
mov
fs
inc
inc
sub
mov
shlb
std
sahf
pusha
sbb
mov
add
shl
pushf
into
cltd
cmc
xor
add
stos
sarl
mov
xchg
or
cs
jle
fists
test
lods
dec
push
outsl
pop
cwtl
push
or
imul
pop
imul
dec
sub
aaa
mov
sbb
jne
jnp
test
xor
jae
jmp
in
lds
imul
cmp
bound
xchg
fisubs
in
pop
ret
cmp
xchg
leave
sti
and
pusha
clc
and
lahf
mov
inc
inc
jecxz
mov
scas
in
sub
out
in
fisttpl
dec
push
sub
pop
mov
test
add
add
leave
adc
cmp
lcall
popf
xchg
ja
jno
mov
decl
std
into
lret
add
hlt
xlat
clc
scas
in
sahf
jge
cmp
inc
mov
nop
lcall
repnz
or
lahf
mov
sbb
dec
leave
not
sbb
cmp
lea
loope
add
inc
pop
add
mov
inc
mov
inc
or
inc
sub
sub
xchg
dec
cmp
pop
xor
xor
scas
lds
cmp
leave
out
aam
adc
loope
adc
push
shll
cmp
mov
insl
repnz
cltd
mov
xchg
push
nop
add
sub
sub
cmp
jb
add
jle
into
push
fwait
sbb
push
stos
inc
ljmp
push
mov
dec
and
lret
sub
mov
adc
cmp
and
push
mov
addl
inc
scas
xorl
push
jle
out
dec
mov
pop
add
mov
lods
pushf
mov
pop
movsl
cwtl
push
outsl
xchg
out
ror
in
dec
xor
stc
cmpsl
dec
pushf
test
and
add
enter
lcall
addb
jmp
mov
add
jne
mov
stc
cs
int
pop
jl
movsl
fs
pop
mov
pushf
arpl
push
mov
call
mov
in
xchg
cmpsb
mov
mov
cmp
pop
imul
gs
mov
sub
cmc
xchg
loope
aam
sbbb
ss
lea
fdivrp
mov
sbb
inc
clc
push
sbb
imul
mov
test
je
push
adc
push
xchg
daa
cmpsl
add
sbb
sarl
and
lret
push
imul
adc
add
test
mov
out
or
je
xchg
sahf
stos
repz
mov
inc
sub
mov
inc
cltd
pop
mov
add
addl
je
out
testl
push
add
lock
mov
ljmp
mov
ja
hlt
leave
jmp
dec
std
lcall
imul
nop
test
sbb
mov
jecxz
xchg
lock
stc
dec
xor
cli
inc
stos
push
setne
lcall
popa
jbe
cmc
fimuls
mov
jge
inc
bound
mov
daa
sub
shll
pushf
xchg
imul
mov
mov
imul
or
mov
insb
jne
push
shl
ds
fs
fsubrl
push
xchg
sar
cmc
pop
in
es
mov
push
pop
push
sub
aas
xor
pop
jb
xlat
mov
mov
xor
push
ror
mov
mov
leave
jecxz
jae
add
dec
xchg
rol
and
std
fnstenv
mov
jmp
test
pop
xchg
xchg
dec
inc
inc
dec
push
jbe
ja
pop
push
clc
pop
sbb
aam
je
and
rcrl
test
aam
pop
push
dec
cmp
out
movsl
xchg
cwtl
add
cmp
dec
cmp
je
xchg
imul
in
fcomp
sahf
shll
mov
fnsave
push
mov
hlt
cmpsl
lods
rcl
inc
subb
fdivl
fidivrs
call
dec
add
jle
mov
push
addl
outsb
aaa
pushf
into
js
push
jae
and
in
push
loop
mov
sub
pop
lods
loop
push
in
dec
dec
fldl
in
scas
cmp
mov
aam
mov
inc
push
add
push
mov
sub
in
push
shlb
fiadds
les
gs
sbb
in
ss
pop
sub
popa
test
or
mov
dec
push
xor
sbb
fsubp
out
outsb
mov
mov
mov
pop
subl
aas
xchg
push
cmp
push
jge
xor
xchg
movsb
jge
sahf
or
out
pop
sub
negb
loopne
ss
xor
movsb
ljmp
addr16
push
aas
fnstsw
ficompl
jle
std
das
inc
sbb
sub
mov
add
jle
xchg
jmp
pop
stos
push
cltd
xor
add
ljmp
dec
mov
sub
sbb
outsl
mov
cs
adc
repnz
xchg
mov
lds
lock
xor
mov
in
xor
je
shrd
pop
add
out
aaa
xchg
mov
xchg
mov
add
add
jbe
push
mov
xchg
out
cmpsl
pushf
push
sbb
pusha
mov
adc
les
stos
mov
cmp
loop
movsb
outsl
adc
movsl
sub
xchg
in
cli
in
sub
rcll
xchg
dec
fbstp
sub
xlat
sbb
mov
pusha
and
cmp
ja
popa
orb
movsl
xchg
mov
push
dec
fmul
lss
jns
pop
push
dec
pop
arpl
jbe
and
shrb
mov
sbb
lods
adc
adc
ret
loope
mov
lods
cmp
or
cmpsl
fisttpl
push
int
jg
and
pop
adc
sar
mov
sub
pop
sbb
mov
xchg
stos
dec
xchg
repnz
clc
dec
add
push
loopne
test
mov
lea
sub
push
lock
int3
add
mov
cmp
nop
push
push
pop
ds
cmpsl
mov
lock
push
pop
pop
in
mov
push
popl
decl
movsl
shll
adcb
es
lea
xlat
in
dec
daa
lds
add
mov
lahf
call
addr16
pop
add
lock
pop
ret
and
movsb
pop
cltd
in
xlat
mov
adc
jmp
xchg
nop
js
sbb
add
subb
jl
xchg
mov
stos
shrl
pop
sub
cmc
xchg
pushf
sub
pop
inc
pop
out
loope
mov
sbb
sbb
xchg
test
xchg
arpl
adc
xchg
dec
xchg
outsl
jmp
mov
xchg
test
in
mov
mov
push
adc
mov
sahf
jns
cmpsl
in
test
mov
lcall
je
fiaddl
jle
jmp
or
pop
lock
dec
jmp
and
fwait
push
outsl
pop
sub
cmp
mov
cmp
rcrb
cli
in
mov
push
shll
pop
aaa
cwtl
lods
xchg
pop
xor
fsubrp
push
sbb
jnp
mov
dec
mov
mov
pop
push
or
int
jns
dec
aas
jecxz
aas
cmp
jo
mov
int3
or
push
sbb
add
adc
sub
in
and
sarl
mov
sbb
ss
outsl
popf
jns
jp
popf
add
and
out
insb
sbb
lcall
scas
lock
les
andb
adc
call
insb
push
lret
sub
xchg
adc
sub
insl
pop
rcll
jmp
and
add
out
leave
lods
fsub
xchg
mulb
int
in
sub
or
mov
divb
add
clc
adcl
in
rcr
mov
jo
fsubrs
fadd
lahf
pusha
lcall
jno
push
or
push
and
dec
decb
add
out
shll
or
aas
lret
push
mov
sar
lret
ljmp
lods
push
fwait
fwait
enter
mov
mov
adc
mov
mov
sbb
cltd
sahf
mov
sub
cli
into
jmp
dec
scas
lds
lea
mov
mull
mov
out
pushf
sub
inc
pushf
xchg
repz
ljmp
jmp
ljmp
outsb
push
inc
in
pop
aad
cmp
push
dec
test
pop
pop
cli
and
cmp
xchg
icebp
and
enter
or
test
mov
push
imul
mov
push
repz
gs
les
fcompl
aaa
fcoms
mov
jl
movhps
ss
ss
push
pop
movsb
jne
pop
js
inc
pop
mov
test
loopne
pop
repz
xchg
out
adc
jno
cmp
das
xlat
mov
pushf
mov
std
push
mov
mov
sbb
fwait
stos
shll
fcompl
insl
jbe
jmp
mov
rcrl
cmpsl
sbb
hlt
ret
add
lds
mov
popa
add
lret
jb
jge
fwait
push
ret
jmp
sbb
outsb
pop
inc
popa
mov
lahf
orl
mov
jne
jle
js
in
imulb
jge
or
jecxz
out
rcr
dec
mov
xor
mov
or
jae
movsb
jl
push
sub
leave
sub
insb
pop
in
int
xchg
add
ficomps
dec
or
repz
push
movsl
arpl
or
lahf
mov
mov
rcr
fwait
lret
inc
cmp
jae
dec
imul
rcrl
dec
shl
out
jecxz
xchg
cmp
add
cli
xor
fsubrs
out
push
stos
xchg
fistl
and
fcomps
in
orl
ret
dec
das
fsubl
iret
push
xor
inc
outsl
or
push
fs
pop
mov
cli
call
fimull
mov
add
cmp
shll
aaa
fisubs
push
mov
xchg
push
mov
pusha
cltd
clc
mov
movsb
addb
adc
fs
lcall
and
push
jns
mov
pop
ss
xchg
push
imul
jae
insb
jb
mov
push
cmp
and
jg
jns
add
stos
pop
fldz
dec
or
ret
pusha
jo
jmp
pop
push
scas
call
xchg
loope
js
mov
dec
mov
in
lret
adc
das
leave
in
adc
sub
outsl
adcb
js
fisubs
xchg
cmp
jl
xor
mov
lods
pop
push
fimuls
loopne
in
lcall
mov
and
push
cli
mov
pop
scas
loopne
jo
xchg
stc
repz
xchg
js
sub
movb
call
xchg
pop
mov
cld
mov
cli
mov
push
or
repnz
mov
pop
and
mov
stos
ret
stos
jnp
data16
xchg
sub
mov
mov
or
in
cmpsb
pop
sbb
xor
mov
arpl
jo
fwait
mov
push
adc
icebp
inc
in
cs
inc
insb
fstpt
scas
adc
mov
push
xchg
shl
inc
jmp
pusha
sub
jg
arpl
nop
mov
push
xchg
adc
xchg
shl
into
dec
loope
imul
mov
jns
enter
xlat
stos
cmp
pushf
jns
push
stos
in
popf
xchg
iret
cmp
cmpsb
mov
shlb
shl
pop
cmpsl
outsb
cmp
cmp
cmpsb
push
xlat
in
out
add
mov
push
rol
imul
push
and
or
mov
push
pop
repz
out
add
lods
insb
dec
out
dec
mov
pop
std
xor
sub
mov
lock
push
or
jno
fs
jb
xchg
fucomi
pop
in
jno
test
xchg
lods
aas
jbe
pop
mov
ss
dec
bound
pop
xchg
xor
mov
or
jb
shlb
idiv
xchg
push
inc
mov
es
ret
or
mov
mov
push
ret
push
fs
pop
and
or
inc
repnz
push
das
in
cmpsl
fmuls
cmp
enter
into
test
xor
fldln2
iret
setl
flds
inc
xchg
shlb
enter
xchg
xor
xchg
and
mov
pop
cmpsl
jae
xor
leave
ret
movsb
push
and
add
xor
jbe
fldcw
mov
xchg
daa
xor
xchg
xchg
xchg
push
pop
in
cmpsb
test
iret
fiadds
dec
loop
mov
repz
daa
adc
push
mov
lods
pop
imul
pop
dec
fisubrl
cld
xchg
pop
cltd
fsubl
in
scas
negb
cmpsl
inc
into
inc
add
test
push
push
jo
jae
xchg
loope
sub
xor
stos
cmp
pop
cmpsl
mov
mov
int3
sbb
cmp
fimuls
mov
fs
mov
adc
add
fs
jno
pop
shrb
and
jb
int3
fwait
je
jp
cmpsl
lcall
cmc
imulb
mov
xchg
mov
fidivrl
ret
pop
popf
push
ret
mov
cmp
enter
aad
push
mov
xor
push
jecxz
roll
jnp
or
jl
or
inc
mov
aad
lahf
sbbb
xchg
jmp
add
sub
xor
push
out
mov
into
hlt
sti
ficoml
push
and
cmp
mov
inc
and
lods
fsubrl
mov
stc
mov
sti
dec
cld
xlat
enter
add
xchg
and
iret
icebp
mov
neg
testl
gs
shll
sti
add
dec
jl
fidivrs
shrb
add
and
stc
sub
lods
sbb
push
mov
cmp
mov
sbb
pop
arpl
jp
or
mov
xchg
loope
insl
mov
fs
iret
add
fistpll
lret
shrb
and
push
loop
jle
popf
cmc
mov
test
sbb
inc
insl
xchg
cmp
jae
mov
icebp
cmp
cli
xor
fsubs
imul
inc
cmp
sysenter
ds
ret
std
repz
test
cmpsl
fsubrs
dec
fisttps
mov
out
cmp
sahf
jae
loopne
jp
inc
lret
pop
xor
gs
loope
mov
jg
mov
sti
nop
or
notl
add
movsl
aas
in
or
ljmp
sbb
data16
in
lock
lods
enter
fwait
jp
mov
xor
jb
std
and
xor
sarl
inc
xchg
push
sub
lods
mov
hlt
xchg
add
out
adc
xchg
sub
aad
or
fs
aas
mov
roll
std
xor
sbb
cld
adc
mov
enter
mov
ret
xor
addb
repz
mov
mov
ret
xchg
jl
sbb
lret
xor
sub
ss
pop
xchg
shll
aam
loope
je
cmp
aad
test
cwtl
dec
enter
adc
xchg
sbb
jl
hlt
movsb
lcall
dec
ja
enter
dec
divb
and
mov
adc
or
int
test
dec
sbb
in
gs
add
jae
cmp
push
push
dec
sub
or
lcall
movsl
movsl
movsl
arpl
cmp
ror
xor
jo
stos
fstpt
xchg
in
inc
int3
repz
mov
ljmp
ss
sub
xchg
lret
xchg
fistpll
nop
loope
loopne
in
subl
cmp
call
lock
popa
jae
addr16
shlb
clc
push
out
jle
xor
and
mov
sbb
xor
hlt
pushf
and
inc
sub
jmp
insl
dec
inc
je
and
xor
jbe
fdivs
aas
les
pop
rol
jmp
sbbl
push
rcll
jne
add
sub
stos
mov
inc
stos
sbb
push
mov
xor
dec
dec
int3
pop
int
mov
mov
lock
push
add
leave
lahf
inc
mov
lcall
push
rorb
pop
xchg
pop
mov
lcall
ss
imul
sbb
add
push
mov
adc
int3
pop
cwtl
gs
mov
mov
fdivp
lret
fucomp
jmp
xor
ja
ss
ljmp
pop
call
and
ss
addr16
xchg
push
lret
pop
mov
fidivrl
sbb
mov
push
push
test
insb
jb
add
int3
sub
sbb
pop
inc
mov
or
psrlq
jne
enter
adc
dec
fstps
sti
es
sub
in
push
jbe
insb
mov
sub
sub
xchg
adcl
ljmp
loop
mov
in
mov
inc
sub
dec
rolb
push
out
sub
es
or
cld
shl
sbb
sbb
std
cmp
sub
sub
test
mov
mov
in
sbb
jbe
cmp
mov
daa
ficomps
ja
test
dec
imul
fxch
mov
cmp
push
dec
sub
add
and
mov
inc
lock
add
push
xchg
scas
push
push
xchg
or
or
mov
imul
jo
icebp
xchg
gs
xchg
dec
and
adcl
mov
std
pop
adc
adc
ss
mov
popf
fwait
repnz
mov
pop
push
aad
js
es
daa
pop
aaa
ja
fildll
cli
lcall
pop
cmp
fiaddl
in
jge
xchg
xor
notl
lcall
insl
inc
imul
push
or
repz
and
rcr
ret
xchg
pushf
test
jno
out
scas
mov
addr16
sub
inc
jp
je
cld
sub
jb
inc
and
and
jg
or
pop
ljmp
pop
pushf
divb
pusha
or
jp
xchg
inc
pop
push
popa
jne
cmp
lahf
sar
mov
cld
fdivrl
std
movsl
mov
push
iret
pop
stos
bound
movsb
stos
inc
inc
aad
jae
jg
and
push
jnp
jne
xor
and
lcall
push
sbb
adc
inc
xchg
xchg
cmp
aam
outsb
aad
push
fsubrs
sbbb
cmp
aaa
in
out
and
sbb
adc
cld
test
idivl
mov
and
pop
scas
cltd
push
popf
jp
lds
int
cmp
xchg
mov
mov
pop
loope
cmp
add
jl
into
and
mov
js
cmpsl
jle
pop
setbe
faddl
out
xor
int3
shll
icebp
outsl
push
arpl
xor
dec
push
cmpsb
ret
or
mov
mov
into
insl
pop
jmp
stc
mov
in
pushf
xchg
push
pop
imul
aam
and
pop
ror
inc
icebp
pop
into
push
cmpb
add
cmp
pop
jle
jge
leave
dec
mov
sbb
mov
jb
lock
paddusw
stc
mov
lahf
pop
jns
adc
jp
mov
cmpsl
fisttpl
cld
or
data16
or
shl
stos
outsl
lods
clc
xor
sbbb
mov
fadds
sub
dec
in
je
sbb
pushf
out
lahf
mov
mov
pop
js
sub
xchg
pushf
pop
inc
and
push
pusha
adc
mov
jg
subb
aas
fmuls
shl
or
mov
push
jbe
int3
aaa
add
shl
ret
push
pop
pop
xlat
js
sbb
mov
mov
add
in
pop
int3
pusha
cmp
xlat
stos
fsubl
inc
es
sti
jecxz
sub
pop
rcrl
adc
pop
ret
mov
mov
pop
cwtl
lcall
jl
enter
ds
sub
mov
add
and
jmp
push
inc
jb
add
xchg
add
push
jne
push
xchg
and
cli
subl
mov
mov
and
mov
inc
or
inc
out
or
mov
mov
and
mov
or
shr
mov
or
fildll
fsincos
add
inc
jns
stos
fisttps
mov
inc
dec
gs
hlt
fwait
sub
fistps
or
movsl
jl
xor
sub
js
cmpsl
int3
and
dec
sub
pop
bound
pushf
fisttps
aad
jno
loopne
jmp
or
xchg
sbb
dec
ja
add
sub
inc
dec
inc
add
sub
sub
orb
mov
imul
mov
adc
sbb
cmpsb
aad
mov
outsl
lods
imul
or
out
fs
sub
ljmp
dec
inc
rcrb
cwtl
movsb
jle
mov
mov
dec
stc
dec
movsl
push
repz
pop
das
xchg
ds
jns
ror
add
movsb
mov
aas
xlat
sub
add
add
sub
xor
scas
repnz
or
hlt
xor
dec
rol
roll
flds
jge
adc
xor
imul
sub
vmread
or
push
test
and
fdiv
and
loope
mov
xor
pop
in
xchg
pop
jo,pt
mov
loop
dec
mov
sub
mov
mov
sbb
push
stc
push
add
adc
insl
pop
jle
xchg
loopne
or
in
lds
or
push
cmp
jmp
mov
push
sti
in
pop
cwtl
std
push
enter
jl
dec
xchg
push
shlb
jno
int3
movsl
ljmp
or
jbe
imul
fisttpll
ss
push
pop
cmp
push
add
lds
rolb
mov
out
xor
or
fisttps
xor
adc
cli
sbb
std
sbb
repz
insl
or
je
add
mov
mov
push
lcall
fbstp
jge
aaa
xor
test
pop
dec
sub
push
pop
daa
add
mov
clc
dec
popf
jbe
ja
das
xchg
pop
aas
std
std
pushw
sub
test
test
inc
mov
subl
imull
lahf
iret
subl
enter
fucomp
xchg
into
jg
or
out
gs
ret
jb
xchg
mov
clc
iret
push
mov
ja
stos
mov
lods
pop
sbb
mov
cmp
jecxz
mov
mov
dec
lds
faddl
loope
add
out
lods
dec
adc
loopne
mov
loop
pop
mov
push
adc
mov
inc
lds
push
and
inc
sbb
and
mov
dec
add
daa
addr16
jge
or
or
inc
cld
mov
in
nop
mov
out
hlt
xchg
sahf
inc
inc
popa
cmpsb
stc
mov
push
cmpsl
adc
sbb
mov
jl
pushf
ljmp
icebp
dec
jno
pop
xor
push
inc
fwait
push
add
sub
sbb
dec
sbb
sub
movsb
xchg
sbb
adc
dec
inc
mov
fwait
sbb
mov
sahf
fdivrl
or
sbb
imul
mov
fwait
or
pop
jl,pn
icebp
sbb
fsubp
outsl
jno
jecxz
cmp
mov
call
add
adc
ret
xor
ja
sbb
and
mov
pop
aas
pop
add
testb
outsl
loopne
fsubp
mov
test
imul
adc
aad
and
jl
cmp
dec
popa
push
rcrb
in
or
popa
scas
push
rorl
push
andl
out
xor
out
or
shl
dec
gs
or
push
jne
lods
mov
xlat
and
cmp
repnz
cli
iret
outsl
sub
sub
push
adc
add
test
push
ret
pop
mov
lcall
testl
mov
sarl
sbb
cmpsb
pop
fdiv
cmp
add
mov
ds
dec
pop
jl
enter
lea
rcll
stos
fisttpll
movsl
leave
fisubl
and
sbb
loopne
mov
dec
test
and
sti
or
mov
sbb
jg
test
je
dec
and
aaa
or
mov
add
jbe
mov
daa
das
inc
adc
or
test
sbb
addr16
dec
es
mov
ss
ret
enter
call
repz
outsl
cmp
jno
mov
or
cmp
insb
int
repnz
cmpsb
pop
and
fisubl
repnz
pop
rorl
xor
mov
std
hlt
push
pop
nop
pop
out
inc
sahf
pop
cwtl
js
push
pop
sub
add
jno
sbbb
sbb
push
movsb
cmp
int
dec
push
push
xor
jnp
ret
jbe
das
into
outsb
dec
xor
mov
push
cli
sahf
pop
enter
xchg
adc
icebp
jne
mov
inc
or
cli
fstl
pusha
pop
and
lods
and
gs
sbb
loop
push
mov
int3
in
xchg
push
loopne
pusha
adc
mov
pop
arpl
sahf
icebp
mov
adc
jne
cmp
jecxz
dec
das
push
hlt
dec
dec
inc
xor
inc
dec
je
out
pop
ljmp
mov
mov
push
icebp
xchg
and
jp
xor
int3
push
lcall
sub
lret
aaa
popf
insb
cmp
mov
fnsave
daa
daa
or
add
pop
enter
mov
sbb
loope
pop
jno
inc
pushf
in
dec
aam
adc
jno
out
cmp
pop
xor
push
icebp
cmp
jo
jmp
jecxz
rcrl
jp
aam
sub
lret
insl
mov
cmp
jbe
mov
scas
xchg
ret
pop
mov
scas
adc
sbb
incb
sbb
lcall
rclb
js
pop
sub
mov
rcll
and
idivb
mov
xchg
fimuls
add
adc
movsl
xchg
xor
enter
cmc
jne
addr16
out
pop
daa
sub
mov
jp
xorb
xor
dec
xor
push
sbb
and
adc
loopnew
fcomps
imul
pop
es
xchg
outsb
mov
cmc
sbb
daa
mov
enter
add
lcall
jp
fs
xchg
cmp
pop
jle
call
cmpsl
ret
clc
cmp
mov
insb
nop
jmp
lcall
dec
sub
cmp
pusha
scas
imul
fisubrs
xchg
push
xor
push
lods
sbb
push
sub
add
jo
sbb
imul
sub
sub
les
or
jecxz
xchg
mov
leavew
fstpt
icebp
insl
inc
pop
cs
dec
mov
out
push
out
sub
dec
pusha
sub
movsb
and
test
xor
mov
mov
mov
dec
sbb
and
sbb
dec
push
sub
push
jg
arpl
mov
sti
adc
pop
dec
int3
rcrl
xor
and
nop
stos
dec
adc
and
insb
stc
sbb
je
sub
xor
lods
or
stc
push
inc
clc
out
repnz
mov
pop
scas
imul
xchg
pop
clc
add
nop
pop
fnstenv
cmp
stc
in
mov
addr16
ljmp
xchg
adc
test
mov
cmc
mov
jecxz
negl
insb
xchg
movsb
cltd
insl
dec
out
ret
and
sbb
cmc
rcrb
xor
jmp
jecxz
nop
bound
cld
pushf
cmp
dec
fistpl
sub
push
icebp
aas
lahf
dec
cmpsl
mov
pop
rorb
ljmp
cld
fmuls
mov
cs
fwait
push
xchg
cmp
out
lcall
sahf
cs
mov
dec
lret
ds
cli
push
or
rcr
mov
and
in
mov
out
fs
out
or
fdivp
xor
popf
scas
pop
test
test
adc
jo
mov
mov
pop
push
and
mov
mov
xchg
push
cmp
xor
cmpb
jbe
jne
and
xor
mov
popa
ja
out
mov
pop
inc
fucom
pop
cwtl
stos
sub
sub
inc
popf
jo
out
inc
jbe
xchg
add
mov
imul
fwait
sub
hlt
dec
ljmp
cmp
and
or
xor
add
test
dec
dec
sahf
pop
inc
decb
dec
add
pop
push
xor
inc
lds
mov
jge
jl
in
cmp
lods
mov
mov
sub
aaa
sbb
mov
hlt
push
mov
cmp
adc
dec
imul
or
dec
cld
div
rcr
test
pop
push
xchg
jg
inc
ret
push
mov
iret
xchg
mov
stos
sahf
sub
ljmp
mov
add
daa
lret
fnstsw
cmp
repnz
int3
jecxz
jbe
mov
push
outsl
sub
inc
stos
inc
in
lret
cmp
sbb
lods
mov
fs
pop
stos
mov
jbe
jl
dec
in
icebp
int3
cmp
scas
scas
jge
loopne
sub
sub
js
es
in
add
out
ja
leave
mov
clc
leave
sbb
imul
pop
push
push
aad
fmulp
pop
lahf
mov
push
bound
es
dec
jbe
cmp
stos
xchg
sbb
icebp
xchg
push
pop
frstor
push
sub
aas
mov
les
mov
dec
sub
shll
sub
mov
sub
rcrl
pop
or
movsb
call
scas
push
mov
mov
sahf
jbe
or
cmp
in
fbstp
out
in
ja
sbb
rcrl
inc
cmp
cmpl
lock
pop
jle
pushf
insb
scas
xor
jl
add
sahf
ret
adc
pop
dec
add
out
cmpsb
mov
out
lret
and
mov
xchg
test
mov
jle
adc
cld
pop
mov
lahf
mov
and
adc
push
fisubl
cmp
or
xchg
es
dec
push
sarl
stos
sub
pushf
rcr
sub
dec
mov
flds
iret
cld
aas
scas
dec
mov
or
mov
cli
hlt
xor
out
and
out
mov
stos
pop
clc
mov
loop
push
lea
dec
mov
push
cmp
cmpsb
push
adc
cmp
mov
cli
pop
out
add
adc
ja
inc
outsb
add
mov
xchg
icebp
insb
or
insb
add
sahf
loope
inc
xor
inc
jmp
mov
xlat
sbb
sbb
enter
lret
lret
popl
stos
lods
call
inc
xor
out
and
pop
jo
mov
sub
sbb
push
imulb
or
jns
sub
jb
rolb
rcll
push
arpl
xchg
into
adc
sub
imul
add
add
mov
cmp
shlb
call
daa
mov
and
sbb
fimuls
insb
sub
inc
fisttps
fadd
cmp
cmp
cmp
dec
stos
dec
pop
sub
bnd
js
jnp
push
out
xchg
xchg
push
fbstp
sahf
cli
ljmp
add
jnp
lods
xchg
inc
out
rolb
sub
inc
fsub
ja
test
or
loop
aad
pop
xor
shlb
out
pop
push
iret
jmp
pop
test
jbe
sbb
mov
lret
mov
add
push
xlat
into
clc
add
ja
adc
dec
and
adc
cmc
sbb
inc
dec
xchg
fildll
stos
cmc
pushl
mov
scas
in
stos
call
ja
scas
mov
inc
xor
push
sub
jp
rorb
add
add
lret
ja
call
subb
push
out
rolb
mov
fisttps
push
xorb
mov
mov
addb
push
add
cli
dec
sbb
movsb
ja
push
lret
movsl
aaa
cwtl
shrl
pop
imul
stos
sbb
or
dec
and
cs
jne
add
sbb
add
mov
cmp
dec
xchg
mov
push
test
imul
mov
cmp
iret
lock
push
or
push
cmp
xchg
adcb
cli
add
jmp
inc
mull
xchg
xorl
sbb
sub
fsubrs
xchg
loope
xor
icebp
js
and
push
cli
ljmp
test
sbb
xor
mov
call
and
sbbl
mov
int3
notb
test
jb
lret
jg
adc
jecxz
js
out
rcrb
lea
inc
xor
popf
mov
cmp
pop
jl
cmc
or
pop
pop
jo
pop
mov
mov
stos
in
loope
pusha
xor
jp
xchg
push
js
xchg
mov
or
mov
add
add
xor
mov
xchg
sub
mov
jl
mov
and
xchg
add
fstl
imul
into
push
lret
popa
das
cmpl
or
mov
hlt
or
imul
mov
push
scas
aas
pusha
mov
loope
inc
pop
push
out
add
cmp
iret
imul
inc
in
shll
in
push
jb
testl
inc
leave
jnp
push
inc
cmp
xor
in
and
dec
mov
bound
mov
jle
mov
loop
repnz
cs
dec
sub
leave
mov
xor
add
test
or
xlat
lds
fisubl
adc
cmp
inc
mov
dec
or
cmp
fdivl
lods
lahf
push
xchg
test
rcrl
out
dec
dec
pop
sub
cld
jne
xlat
xchg
push
jne
lcall
push
jae
fcmovb
scas
stos
push
mov
dec
mov
aam
sbb
sbb
ret
imul
push
mov
int
inc
mov
mov
lret
iret
sarl
and
sub
bound
insl
push
ja
sarl
push
xor
xor
add
test
stos
adc
bound
mov
push
inc
addb
insb
movsl
cld
push
mov
pusha
rcrl
repnz
add
add
mov
or
lods
cld
test
fadds
dec
jg
and
fcmovbe
rorl
mov
ja
aas
sbb
and
pop
and
mov
ret
inc
stos
cli
loop
pop
pop
sub
testl
ss
repz
push
lret
cmp
jnp
add
cmp
cli
loop
in
sbb
adc
sbb
out
out
and
lods
push
jb
das
fcmovbe
mov
pop
jbe
xchg
shlb
jne
jno
cmp
sub
je
adc
inc
cld
pop
iret
mov
or
out
in
insb
inc
xchg
in
popf
cmp
and
and
aam
loope
and
mov
or
dec
jnp
adc
aad
fisttpll
adc
cmp
mov
enter
xchg
fisttpl
psubd
and
pop
fwait
movsl
sub
sub
mov
sarl
mov
xchg
nop
sarl
mov
pusha
pop
push
dec
cmp
imul
mull
cld
into
jp
data16
stos
dec
test
scas
cmpsl
jmp
js
xchg
ret
loop
subl
enter
xchg
lods
pop
jbe
loopne
fsubrl
mov
pop
movb
shrl
adc
enter
sahf
sbb
pop
push
or
out
cmp
inc
xor
pop
sub
push
lds
mov
jae
fildl
andl
mov
sti
mov
test
adc
dec
sarl
dec
in
jmp
push
sbb
sbb
jecxz
in
jl
xlat
mov
fdivl
xlat
ret
out
pop
jecxz
cwtl
into
sub
clc
jae
cmpsb
pop
outsb
inc
jb
adc
jl
repz
notb
addr16
loope
icebp
outsb
xor
std
pop
sarb
clc
jbe
inc
adc
dec
push
pusha
inc
loope
imull
pop
repnz
push
pushf
bound
imul
and
sti
mov
js
xchg
in
sbbl
ja
inc
outsl
inc
shrb
enter
loope,pt
fs
pop
pop
pop
mov
sbb
std
mov
loop
arpl
inc
cld
mov
cmpsl
popf
scas
repnz
mov
lcall
xor
push
mov
xchg
xchg
mov
test
test
sub
in
mov
iret
loopne
stos
mov
dec
jo
jl
hlt
scas
popa
aad
in
push
cwtl
or
jecxz
mov
cmp
pop
push
fiadds
test
mov
andb
and
fiaddl
pop
push
clc
xor
mov
imul
or
push
cmc
jnp
mov
push
add
mov
jmp
fsubl
pop
jge
mov
enter
and
xor
or
pop
rcrb
popf
into
les
mov
inc
leave
cmp
mov
in
inc
outsb
repz
enter
loope
shlb
stos
mov
cmpl
add
repz
cli
ljmp
out
mov
sub
mov
fcomi
pop
cmp
addb
sub
inc
jno
sbb
mov
jae
cmp
arpl
scas
loope
shrb
enter
cltd
imul
arpl
insl
lret
decl
sti
loop
adc
pop
mov
adc
xchg
addr16
adcl
dec
setle
push
cmp
pop
push
inc
xor
xor
popa
ljmp
and
jbe
jo
in
sub
cmp
pop
ljmp
dec
and
or
jle
addr16
adc
out
cmpsl
loop
push
in
add
mov
mov
or
outsb
inc
adcl
in
insl
xchg
mov
push
cmpsb
insb
call
fisubl
sbb
dec
cli
mov
dec
loope
push
and
and
nop
mov
imul
out
mov
repnz
and
xchg
cmpsb
fwait
adc
testl
xlat
ret
test
sbb
leave
jns
sbb
xchg
sub
std
jnp
das
add
in
rclb
std
cwtl
rorb
pop
xor
inc
xchg
push
ds
mov
dec
out
faddl
ja
sbb
sub
dec
mov
loop
bound
xchg
stos
bound
cmp
sub
insb
jb
cmp
adc
cmp
mov
test
mov
jo
cli
inc
mov
pushf
stc
or
fwait
lret
add
jmp
push
push
sbb
mov
jg
ldmxcsr
mov
fcmovnu
hlt
push
in
shl
inc
imul
aas
add
add
aam
inc
ret
imul
ds
loope
xlat
cmp
dec
push
insb
outsb
in
sub
dec
fnstcw
loopew
scas
jo
repnz
sub
or
lret
je
pop
add
dec
mov
iret
xor
dec
inc
shlb
xor
mov
push
loopne
aas
sbb
mov
cmp
in
sbb
and
xor
sub
mov
loop
mov
push
rcl
inc
mov
xor
and
jmp
testb
xorpd
cmc
cmp
addr16
cld
incl
pop
jge
xchg
mov
roll
cmp
push
test
and
sub
fdivs
dec
inc
int3
jb
xchg
or
sub
sub
jae
mov
cli
ljmp
mov
or
add
sub
xchg
jle
popa
mov
addr16
mov
sub
jmp
mov
jg
jb
inc
test
lds
sahf
test
test
pop
stos
test
mov
fnstsw
lock
push
sarl
mov
cs
or
add
adc
nop
inc
sbbl
fbstp
jmp
ret
outsl
push
jne
mov
hlt
inc
mov
add
inc
xchg
les
mov
lahf
outsb
push
inc
loope
xchg
gs
pusha
jns
mov
push
adc
ret
xor
jp
sbb
add
pop
iret
xchg
sbb
out
push
and
add
push
adc
jae
outsl
out
adc
fldenv
repz
lds
fs
je
cmc
testl
outsl
inc
ror
subb
lret
shrb
aam
data16
repnz
dec
fistps
in
movb
cld
xchg
pushf
dec
mov
aam
xchg
push
lret
scas
push
sub
dec
lock
daa
push
cmp
mov
sub
and
int
and
mov
lods
inc
imul
xchg
cmp
cmp
xchg
push
stc
push
jnp
out
scas
hlt
dec
test
test
repz
sarb
sub
clc
mov
lahf
or
fwait
jmp
mov
scas
iret
cltd
rcll
jbe
movsl
sub
xchg
jmp
mov
out
xchg
in
sub
push
mov
adc
push
test
in
rcrl
stos
rolb
mov
cs
add
aad
inc
dec
xchg
pop
mov
push
mov
shrl
mov
fcoml
sbb
lret
decl
pop
fnsave
dec
mov
sarl
data16
push
jl
sbb
push
test
inc
inc
inc
push
fimull
cmpsl
push
cli
imulb
cwtl
mov
out
add
mov
xchg
add
shll
out
mov
push
add
stc
leave
jl
and
xor
cmc
mov
sub
cmp
and
and
mov
sub
jg
jge
push
dec
pusha
mov
xor
ljmp
pop
xlat
sub
sub
add
gs
jnp
out
sub
loop
in
adc
int3
cli
xor
cmp
xor
loope
jg
imul
ficompl
insl
das
sarb
movsl
dec
repnz
sahf
pop
lods
sbb
xchg
je
andl
repz
push
call
lods
push
inc
jnp
adc
push
imul
arpl
pusha
pop
add
iret
repnz
je
sar
jo
mov
lret
jmp
inc
inc
add
and
sbb
jl
mov
push
jns
out
popa
adc
stc
mov
push
push
push
push
mov
jbe
jp
out
out
js
pop
aaa
test
xor
lret
inc
mov
mov
add
lock
inc
ja
ret
cmp
adc
jmp
or
cmpl
lods
enter
mov
and
dec
scas
pushf
sahf
popf
aad
and
add
call
aad
call
cmp
adc
jae
sub
and
mov
or
arpl
sbb
jg
mov
xor
dec
addb
lret
mov
push
cpuid
and
pop
cmc
pusha
jge
or
inc
lods
rorl
pop
xor
lcall
adc
into
jb
in
mov
cmpsl
pop
roll
sarb
pusha
jg
push
iret
jge
dec
cmp
lods
les
je
out
adc
in
and
das
mov
xchg
cmp
xchg
cmp
dec
sub
adc
movsb
mov
mov
push
enter
test
add
cwtl
cmp
xchg
xchg
in
push
shll
btc
or
add
es
mov
pop
imul
testb
cmp
pop
popa
dec
je
or
out
mov
lds
cmpb
adc
dec
ds
pop
sar
icebp
cmp
mov
sbb
xor
add
scas
mov
cmp
test
cmpsb
nop
pop
mov
xchg
lcall
imul
push
mov
rcr
lods
or
or
out
mov
xchg
testl
cwtl
add
mov
imul
lret
xchg
test
int3
dec
and
pop
dec
mov
adc
sarl
adc
gs
ficompl
mov
aas
insl
inc
mov
mov
sub
adc
or
mov
cmp
loopne
arpl
roll
xchg
mov
add
lret
add
xor
call
xchg
mulb
mov
cmp
mov
xchg
sbb
pop
pop
add
daa
jo
pusha
ljmp
add
insb
rclb
mov
enter
sub
shlb
or
test
push
fdivrs
fs
xchg
pop
mov
cmpb
inc
loop
jmp
pusha
jno
mov
xchg
dec
out
sbb
cmp
dec
pop
mov
imul
jno
lret
pop
mov
cmpsl
sbbb
jge
inc
fcomip
ret
xchg
popa
mov
mov
and
jo
mov
test
xchg
negl
xchg
xor
movsl
and
push
mov
pop
loop
in
fcom
loopne
pusha
addr16
clc
jg
imul
sub
xor
xchg
and
add
mov
add
in
xchg
mov
pop
pop
or
xchg
iret
lds
lock
mov
pop
pop
movsb
sbb
jge
push
adc
xor
cmp
aaa
loopne
stc
sub
xchg
push
or
addr16
xor
rcll
cs
inc
inc
jge
and
adcb
fidivrl
iret
dec
adc
inc
popf
test
xchg
out
lret
add
add
sub
nop
cmpsb
sbb
sub
push
cmp
lcall
nop
cmp
xorb
and
mov
jne
je
testb
scas
mov
gs
test
loope
rolb
or
sub
jb
xchg
inc
fidivrs
inc
mov
sbb
movl
cwtl
dec
movsl
popa
xchg
or
cmp
sub
pusha
cmp
pop
mov
push
mov
and
xor
dec
jo
inc
ds
pop
jnp
mov
ljmp
add
xchg
pop
add
dec
cmc
add
ss
test
jo
jne
je
imul
mov
out
or
dec
dec
fwait
adc
inc
arpl
jmp
popa
std
mov
jl
aas
pop
push
xchg
roll
inc
push
gs
imul
jns
out
cld
imul
xor
xor
mov
js
adc
sbb
sbb
and
int
mov
insl
lods
jl
fcmovne
xchg
call
sti
sti
xor
add
push
dec
scas
mov
push
lahf
decl
add
add
pusha
push
sbb
or
fwait
sub
out
lods
shll
xchg
mov
sbb
and
dec
cmpsb
push
fidivs
lahf
pop
stos
inc
lcall
pusha
repz
clc
jne
aad
jae
add
sub
xchg
mov
or
popa
in
scas
xor
outsb
lret
loop
and
stos
adc
xor
mov
fcmovb
sub
lods
mov
pop
adc
add
fucomi
push
push
jnp
out
dec
dec
addb
jecxz
daa
xor
mov
pushl
out
addr16
imul
jge
hlt
push
shrb
adc
mov
jae
cmp
sbb
scas
cmc
inc
and
push
jbe
cwtl
popl
mov
push
or
jno
loopne
icebp
aas
or
add
insl
mov
icebp
cwtl
insl
jecxz
xor
gs
xlat
fwait
adc
push
lods
clc
lahf
das
mov
faddl
add
shll
jne
lock
stos
pop
popa
xchg
xchg
fstpt
arpl
pop
shr
sahf
fidivl
cmp
insl
xchg
rorl
ja
pop
push
test
ret
fisttpl
clc
push
add
push
or
cmc
sbb
push
sbb
jg
nop
fidivl
lock
leave
pop
dec
inc
add
in
sub
rcrb
dec
arpl
jecxz
fcompl
and
iret
jne
push
ja
pop
insl
jne
add
test
and
and
fdivrs
shlb
pop
bound
mov
pop
out
mov
clc
mov
in
imul
mov
dec
adc
fcoms
mov
fdivs
fldenv
add
mov
pop
sub
pop
pop
xchg
pop
jl
cwtl
or
or
add
rcrl
inc
pop
jmp
xorb
xor
repnz
mov
movsb
ljmp
sub
add
push
push
scas
scas
ja
mov
jns
jnp
add
aas
jbe
mov
inc
or
cmpb
xchg
or
mov
lock
popf
mov
mov
cld
data16
das
jge
cmp
not
lahf
cmc
mov
lahf
sub
push
inc
idivb
mov
jno
push
dec
stos
stos
fildl
test
pop
sbb
push
stc
outsb
dec
push
in
shlb
out
adc
aaa
mov
lods
fadds
sarl
mov
fistpl
lds
xchg
das
jp
cltd
add
adc
jmp
lods
cmp
xor
dec
inc
ret
or
stos
pusha
mov
imul
popf
push
push
mov
and
insb
scas
insl
cld
cmpsl
and
shlb
jo
push
ja
arpl
vmptrst
pushf
mov
loopne
jg
in
jmp
sbb
pop
mov
push
scas
fisttpll
ret
push
movsb
inc
movsl
sbb
nop
fiaddl
push
fcompl
sbbb
dec
jge
xchg
leave
dec
dec
mov
cmp
movsb
xor
and
pop
andl
add
repnz
pop
fists
cmpsb
sub
lock
imul
loop
push
fisubrl
dec
pop
cmc
das
clc
push
loope
std
add
into
xor
enter
or
mov
inc
lods
mov
mov
push
insb
scas
les
jne
add
testl
push
dec
in
sbb
gs
mov
pop
lgs
cmc
es
mov
lods
inc
mov
inc
mov
xor
jp
push
test
cmp
xor
incb
pop
dec
ja
repnz
aad
lret
xor
dec
mov
add
sbb
mov
jo
dec
jle
ret
mov
push
mov
pop
rcl
rorl
popw
in
mov
or
push
jne
mov
sub
adc
and
shlb
int
inc
ja
inc
gs
push
mov
mov
dec
ss
jnp
mov
cmc
cmp
repz
lods
mov
ss
jbe
in
fsubrs
test
inc
in
std
push
stos
sbb
push
popa
sub
cltd
sahf
std
std
mov
cmpsl
shll
jae
pop
in
mov
add
pop
mov
shlb
cmp
adc
sar
pop
cs
add
leave
insb
ds
je
or
adc
push
mov
fs
pop
stos
mov
cmp
push
in
mov
mov
add
cmp
movb
xchg
lea
out
fistps
stos
dec
addr16
ss
xor
ja,pt
outsl
ds
int3
test
push
inc
mov
inc
xchg
int
mov
dec
sarb
xlat
cmp
aaa
decl
inc
xor
testb
popf
movb
inc
stos
or
lahf
jns
call
dec
sub
jnp
add
add
push
out
mov
shlb
or
fwait
xchg
out
stc
push
test
dec
iret
adc
jmp
pop
ljmp
scas
movsb
adc
ss
add
adc
jmp
adc
cltd
cmp
fdivr
fildll
and
addr16
aaa
jmp
xchg
push
int3
push
jp
jle
xchg
loop
cmp
add
push
mov
push
in
adc
test
push
popf
imul
cmpsb
arpl
push
dec
jb
mov
out
in
mov
dec
sub
mov
sub
push
shlb
push
aas
dec
jo
and
xor
jne
in
imul
cmp
xor
and
lea
adc
inc
sti
rorb
fstpl
into
repnz
nop
cmp
sub
xchg
xlat
pushf
pop
push
inc
mov
rclb
sub
xor
push
fcmovnb
rcl
in
lret
xchg
push
mov
popa
lahf
mov
jb
lods
add
or
push
mov
sbb
jg
dec
xor
lods
mov
movsl
pop
or
data16
cltd
lds
push
jmp
cmp
push
xor
popa
lock
adc
in
ds
xchg
imul
int3
stos
es
add
je
fcmove
sbb
xor
in
out
sub
cmp
jg
pop
fdivr
std
pop
je
js
mov
insl
mov
or
adc
xor
or
jmp
out
jge
jge
pop
dec
sbb
into
cmc
cmp
xor
adc
push
repnz
cmc
out
dec
inc
sar
mov
clc
sarl
pop
pop
mov
das
mov
aam
jb
mov
cmp
adcl
addl
mov
in
imul
pop
and
mov
mov
push
ss
mov
push
enter
scas
jns
cld
xchg
in
jbe
arpl
push
and
arpl
and
push
push
xor
mov
sbb
scas
fstpt
push
sub
sub
or
pop
std
pop
arpl
pusha
jecxz
or
jbe
xchg
sub
aam
aad
jmp
pmulhw
adc
ss
js
jo
and
pushf
inc
adcl
mov
jge
popa
cmp
call
aam
mov
aad
out
push
test
cmp
mov
push
push
imul
in
sarl
inc
and
xchg
jae
adc
push
jmp
ljmp
adc
push
mov
in
sub
sbb
ficoml
push
jns
cmp
mov
loop
sbb
int
xchg
sub
inc
movb
sarb
jns
pop
mov
cld
popf
inc
sti
add
aaa
push
dec
inc
dec
iret
inc
mov
jg
adc
add
jns
aad
push
scas
cmp
test
fcom
xor
stos
mov
jmp
mov
loope
sbb
in
adc
cmp
mov
gs
jb
fistl
push
leave
add
icebp
stos
mov
pop
inc
xor
cmp
cltd
push
jns
scas
imul
in
inc
repz
lret
cs
mov
dec
pop
mov
inc
shlb
pop
add
subl
shlb
xor
out
adc
outsb
push
inc
xor
pop
push
ds
call
or
mulb
fisubl
pop
icebp
adc
fisubl
addl
pop
xchg
outsl
lahf
sub
scas
lds
fidivl
jl
sbb
xor
jg
cmp
mov
jns
jmp
cmpsb
sbb
sti
ret
push
lock
dec
xchg
inc
xor
jnp
jo
cltd
mov
lret
loopne
out
shl
jno
bnd
inc
sti
cmpb
push
mov
aaa
aad
orl
jle
jns
xlat
lods
inc
dec
xor
adc
divb
lea
pop
pop
icebp
jo
rcrl
out
in
sub
and
aad
adc
dec
sub
xchg
iret
cmp
xchg
sbbl
mov
idiv
rorl
jle
inc
mov
sbb
xchg
fsts
je
rclb
xchg
mov
sbb
inc
test
rclb
inc
sbb
sarl
push
in
aas
xchg
mov
hlt
repz
and
insb
adc
andl
add
push
aaa
test
call
repz
jae
mov
les
scas
lods
mov
sub
push
repnz
imul
ljmp
mov
in
inc
push
outsl
jns
xlat
xor
jp
push
mov
add
insl
jb
in
push
cmc
dec
mov
arpl
aas
movsb
repnz
subb
push
ret
mov
inc
xchg
sub
mov
outsb
mov
mov
add
push
xchg
inc
jg
xchg
ljmp
jo
fsts
test
add
add
into
xor
in
or
ljmp
ret
stos
add
out
hlt
lret
add
pop
sub
iret
negl
push
paddd
ret
cmp
cmp
xchg
ljmp
in
add
bound
add
repz
test
scas
and
xchg
cmc
cmc
lret
fs
imul
into
sub
lods
into
dec
sti
ret
sti
or
mov
popa
pop
mov
xchg
jae
imul
out
test
cmpsb
les
out
sbb
ja
xchg
addr16
call
xor
xor
mov
lcall
mov
and
cmp
sbb
ret
jp
xor
aam
and
clts
lcall
xor
inc
data16
inc
mov
pop
lea
add
dec
rol
test
mov
push
dec
and
push
mov
in
cmpsb
add
or
pop
mov
fisttps
pop
add
lahf
leave
bound
mov
jp
sarb
stos
pop
ja
in
or
shlb
stos
dec
fldl
rcrb
add
ds
sub
fwait
jg
mov
cmp
shlb
cmpsb
pushf
jmp
cwtl
mov
sbb
and
jle
jns
push
imul
jb
dec
lds
mov
aam
shll
jns
adc
iret
insl
or
cmp
xchg
push
mov
repz
mov
add
mov
jbe
jae
sbb
fs
add
cwtl
cli
rorb
pop
jecxz
lcall
test
outsl
mov
add
dec
mov
mov
pop
mov
and
dec
dec
insl
imul
jg
mov
mov
cltd
mov
pop
mov
ljmp
xlat
mov
cmpl
fwait
inc
pop
sbb
aam
repz
test
ds
pop
sub
sub
scas
fwait
jbe
push
cmp
call
or
mov
adc
fisubrl
je
ja
xor
mov
inc
lcall
push
jae
mov
xchg
sub
jg
lds
sbb
stos
dec
sub
mov
addb
xorb
jecxz
xor
pop
pop
xor
adc
xchg
jge
sub
pop
movsb
popf
push
mov
and
int3
cmp
out
idivl
cmp
popa
pop
xchg
push
sbb
xlat
ret
repz
sbbl
ljmp
inc
cmp
sub
mov
arpl
dec
add
mov
out
cmp
jb
dec
lret
into
test
jb
cmc
pop
in
ror
cli
arpl
mov
sub
leave
inc
push
in
xchg
inc
rcl
xchg
fistpll
inc
mov
adc
clc
inc
shll
mov
loope
inc
push
ret
mov
int
aaa
sbbb
add
xcrypt-ecb
cmpsl
dec
mov
mov
int3
scas
push
movsb
add
icebp
frstor
out
test
movsl
xor
push
push
and
arpl
psubb
xor
fadd
pop
push
and
bound
cs
jle
and
in
mov
fnstcw
mov
xchg
adc
xchg
test
inc
loop
lret
cmp
cmpsl
jno
adc
test
mov
inc
or
xchg
adc
xchg
jnp
sub
and
shlb
push
jge
mov
scas
inc
movsb
dec
in
cwtl
push
lret
mov
xchg
scas
out
hlt
xor
pop
imul
shll
inc
jg
ds
inc
pushl
lods
ljmp
gs
sbb
xor
fisttps
stos
scas
dec
cmp
pop
outsb
xor
int3
popf
sbb
jl
dec
nop
add
cmc
mov
movups
pop
xlat
pop
pop
mov
cmp
cwtl
repnz
and
ds
mov
push
cmpsb
and
test
or
xchg
lea
in
mov
mov
pop
xor
sahf
daa
pop
scas
aas
movsl
jnp
mov
scas
dec
cmp
pusha
mov
fsubrs
cmp
mov
jne
sbb
xchg
dec
and
push
data16
test
jl
ret
xlat
mov
xchg
ds
mov
je
fs
test
inc
stos
out
xchg
mov
pushf
add
insb
movsl
ja
daa
in
inc
and
xor
jmp
stos
es
mov
daa
xchg
pop
movsb
adc
pop
sub
insb
jno
iret
call
jo
jmp
stos
daa
adc
bound
lcall
xchg
loopne
mov
repz
jae
add
dec
aaa
movsl
cmp
mov
mov
movnti
dec
repnz
or
cmp
adc
and
xchg
popf
aad
jge
mov
out
jmp
outsl
cmpsl
cmp
movsb
les
es
sub
xor
rorl
loope
arpl
outsb
xchg
push
dec
jp
ds
out
pop
int
jbe
sbb
xchg
cmp
in
fiaddl
mov
pop
in
flds
push
dec
xchg
jno
inc
push
or
push
cmp
jmp
cs
xchg
testb
popf
push
and
pushf
push
cmp
movsl
or
push
imulb
push
clc
cwtl
sub
push
push
fs
into
pop
jge
lcall
mov
adc
insl
inc
call
dec
inc
push
add
test
cmp
sub
ljmp
cmp
and
pop
stos
inc
cmpsl
cmp
xchg
movntq
aaa
cmpsb
mov
xchg
aad
push
mov
add
insl
ret
lds
cmp
cmpsb
jne
mov
std
add
jns
pop
pop
cmp
pop
add
sbb
xor
jl
fistps
mov
sbb
push
repz
ss
std
cmc
pop
xchg
mov
lret
loop
stc
sti
lret
cltd
ss
shrl
sub
push
jge
inc
and
rolb
fisubrs
leave
push
shll
jmp
pop
mov
sbb
pop
popf
push
pop
hlt
xor
cmp
fsub
negl
sbb
jmp
jmp
sub
add
cmp
push
daa
movsb
or
pop
sbb
mov
pop
mov
mov
imul
pushf
bound
int
lods
outsl
mov
mov
adc
add
movsb
add
hlt
bound
addb
leave
mov
adc
push
inc
sub
scas
mov
inc
hlt
sub
cltd
or
mov
add
das
jne
daa
mov
push
xchg
lahf
mov
xor
dec
ret
cmp
es
ficoms
pop
outsb
cmp
cwtl
dec
inc
bound
jno
adc
arpl
dec
mov
adc
dec
ja
sub
cmp
and
add
imul
iret
lea
dec
outsl
arpl
cli
gs
dec
shr
jo
pop
push
gs
mov
jp
pop
xchg
mov
sbb
aam
push
in
mov
stc
scas
mov
sahf
gs
mov
sbb
cmp
sbb
mov
add
or
test
xchg
mov
pop
mov
sahf
lea
lods
pop
and
pop
xor
sbb
cmp
dec
or
add
stc
out
iret
fs
or
hlt
inc
lcall
hlt
inc
into
lods
push
mov
imul
jmp
mulb
cmc
lock
jo
scas
loopne
push
loopne
cmp
lcall
add
stos
xchg
sbb
bound
push
inc
int3
aad
xchg
aam
popa
add
cmc
int
push
test
and
or
in
push
int3
cli
mov
scas
xor
dec
push
push
pop
movsl
das
sub
fisttpl
inc
add
imul
mov
xchg
jmp
mov
call
test
sub
test
call
or
std
fidivs
push
cmp
jae
dec
pop
fildll
xchg
pop
inc
cld
lock
and
cwtl
and
push
pop
xor
xchg
arpl
sbb
mov
add
and
ret
pop
jns
jg
mov
sbb
push
inc
pusha
popf
pop
lods
movsl
es
in
cltd
xchg
add
in
sbbb
flds
adc
iret
sub
pushf
inc
adc
out
arpl
cmp
ret
lds
jl
xchg
mov
mov
inc
lods
dec
addr16
in
scas
jge
aam
adc
mov
jecxz
xor
push
xchg
lret
sub
lock
jge
lea
xchg
sub
sbb
mov
js
pop
repz
jo
push
and
xlat
dec
pop
nop
push
fstl
lods
inc
xor
imul
fisubs
xor
in
jne
adc
sbb
adc
jmp
repz
add
stos
lret
insl
sub
mov
sbb
inc
shl
rcll
sbb
pop
jo
or
sbb
loope
imul
add
adc
aam
lahf
push
mov
adc
xor
xchg
faddl
mov
loope
inc
les
testl
movsl
cmp
mov
sub
xchg
bound
xchg
mov
xor
fmuls
out
roll
shlb
ss
sbb
sub
popa
ja
xlat
aaa
fwait
xchg
xor
cmp
pop
push
fwait
adc
fimull
nop
inc
loope
sti
das
mov
dec
mov
xor
jecxz
lret
loop
orb
clc
in
inc
out
inc
int
ja
les
inc
pop
adc
fidivl
cmp
pop
pop
pop
mov
rcrl
mov
xor
cmp
dec
mov
mov
stos
sti
call
mov
cmp
fisubl
add
nop
xor
scas
mov
ret
lods
imull
out
cld
add
negb
pop
stos
mov
xor
inc
xor
mov
jmp
cmp
push
mov
pop
sti
pushf
aad
jb
sub
lea
push
es
mov
sub
ljmp
mov
rcrb
adcb
sbb
xchg
mov
fdivs
add
dec
out
sub
mov
std
and
das
sub
leave
add
mov
nop
mov
adc
pop
pushl
xchg
mov
sahf
mov
adc
mov
or
cwtl
and
fldenv
push
sub
fsts
scas
push
inc
loop
sub
addr16
outsb
popa
pop
sub
ljmp
cmp
sub
mov
fists
mov
call
movsl
pusha
lds
aam
pop
and
into
sub
jle
push
sar
inc
js
movsl
jae
jg
pop
outsb
lcall
clc
push
fimull
xor
mov
adc
sbb
fldenv
mov
call
or
and
gs
out
gs
cmp
aas
testb
iret
data16
xchg
adc
xor
xchg
mov
jmp
mov
sub
out
add
cwtl
lahf
fldenv
mov
cmpl
inc
mov
jbe
xadd
pop
int3
sub
lea
aad
fcoml
add
xchg
in
push
adc
dec
leave
dec
lock
jecxz
or
jg
inc
xchg
mov
xchg
pop
jle
or
inc
sbb
xor
xchg
add
cmpsl
or
loop
mov
cmpsb
icebp
jmp
pop
push
inc
test
mov
loopne
push
pop
pop
or
in
imul
adc
xchg
mov
jp
cli
mov
lock
dec
cmc
test
xlat
add
sbb
sar
sub
mov
loop
aad
movsb
add
movsl
insl
push
sti
arpl
xchg
xchg
fstps
mov
sub
xor
fisttps
ss
adc
xchg
push
or
add
sub
cmp
fidivrs
addl
ss
sbb
addb
jb
fwait
loop
es
sub
inc
in
lea
pop
or
cwtl
int
xchg
movsl
jae
cmp
jp
add
mov
icebp
fs
dec
imul
lret
jmp
jmp
lret
push
mov
jmp
stos
xchg
flds
and
sub
add
dec
jg
hlt
xor
xchg
cwtl
pop
mov
pop
ja
xor
or
mov
mov
out
loope
js
sbb
fcmovnb
push
pusha
scas
push
dec
cmpsl
inc
jns
lcall
jp
les
lahf
cltd
and
or
sub
ljmp
insl
push
lods
xor
cld
jne
sarl
mov
test
push
shrd
sub
leave
xor
push
add
pushl
xchg
jne
inc
fldl2t
nop
imul
ds
mov
mov
out
pop
xchg
mov
loopne
mov
adc
lds
and
mov
gs
dec
inc
inc
shlb
sub
pusha
out
xlat
adc
enter
int3
xor
movl
mov
call
mov
iret
inc
je
cmc
push
xor
push
leavew
aas
arpl
pop
cmpl
inc
pop
fcomi
jns
pop
dec
mov
insb
je
jp
dec
ss
ficoms
lahf
jmp
in
dec
xchg
and
push
insl
sti
and
icebp
cmp
jbe
mov
out
icebp
add
insl
jo
mov
mov
fmull
add
dec
mov
adc
arpl
jecxz
aad
sub
lods
jno
jl
inc
inc
dec
or
mov
stos
pop
fsub
rol
mov
push
repz
push
data16
sbb
adc
pop
pop
into
push
sbb
sub
cmp
mov
sarl
or
jae
pop
adc
jg
cli
pop
lcall
jo
mov
mov
stos
stos
sbb
fldt
ret
jp
inc
mov
jne
jl
cmp
mov
popa
fnsave
call
cs
lret
jge
mov
fstpt
outsb
rcrb
mov
aad
adc
sahf
jle
sub
rcr
cld
out
mov
push
xchg
add
pop
sub
iret
mov
mov
js
je
sbb
int
xchg
jl
lods
mov
add
lods
dec
jmp
inc
pop
xchg
lods
jl
je
pop
into
jp
test
rolb
aas
sti
push
or
xor
sub
cvtps2pd
idivb
outsl
inc
aaa
jp
xchg
iret
adc
mov
movsb
stos
imul
stos
jb
loope
in
push
insl
sti
xchg
jmp
je
pop
gs
icebp
outsl
sbb
xor
aas
add
dec
ja
fsub
cwtl
xchg
lds
jb
xchg
and
shrb
fisubrs
sub
into
push
mov
movsb
xchg
push
jb
add
rclb
or
pop
rol
mov
ss
jne
iret
movb
adc
sub
pusha
mov
addr16
outsl
idivl
into
add
and
aad
adc
pop
lods
ficoml
es
mov
std
imul
cmp
pop
sbb
repnz
out
ljmp
out
push
inc
mov
cmp
cmpsl
stc
sub
mov
pop
cmp
mov
sub
dec
lds
loope
jo
mov
push
sub
cmp
push
push
data16
mov
stos
les
sbb
aam
pop
in
stos
shl
jmp
and
xchg
cmpsl
mov
into
lahf
in
push
cmpsb
loopne
sub
insl
jb
mov
inc
test
lret
mov
jmp
sub
push
sbb
aas
cltd
mov
lds
mov
pop
in
adc
xchg
pop
mov
add
sub
inc
adc
and
lea
fistpll
add
sub
sti
jg
adc
add
xor
pop
xor
lds
cmc
test
aas
js
lahf
movb
repz
jbe
and
jbe
mov
cmpsl
cli
cmpsb
dec
mov
lock
out
mov
in
sub
outsl
mov
and
addl
fwait
dec
sbb
cli
mov
add
cs
pop
iret
jb
jae
push
decl
aad
rolb
pop
js
in
inc
outsl
rorb
push
call
adc
enter
int3
push
into
mov
insb
cmp
imul
jae
adc
cmp
fimull
fdivs
jo
test
repz
movsl
sub
jnp
mov
inc
mov
movsl
stc
dec
int
xor
xor
sbb
mov
and
xor
xchg
jns
aam
rsm
push
mov
arpl
pop
pop
insl
inc
lea
or
outsl
and
xchg
mov
mov
mov
xor
push
ja
jmp
fbstp
and
inc
outsl
sub
hlt
mov
leave
push
scas
loope
jne
adc
test
loop
fistpl
pop
pop
or
mov
or
outsl
out
cltd
push
sbb
sbb
push
or
mov
dec
lret
jno
repnz
jno
jo
jp
mov
push
sub
sbb
insl
jae
and
mov
fildl
xchg
pop
xor
add
pop
adc
mov
xchg
inc
std
jle
mov
push
les
fldcw
lds
mov
ret
inc
shrl
out
pop
aaa
fstpl
lock
icebp
cwtl
orl
pop
push
ret
or
lock
push
out
sbb
test
mov
push
icebp
imul
mov
sub
movsl
out
gs
add
jmp
arpl
popf
int3
jo
adc
sbb
xor
in
aaa
clc
aaa
xor
cwtl
sbb
mov
and
das
cmp
arpl
add
dec
adc
out
jl
jle
or
insl
jg
jae,pt
ret
out
test
out
fisubrs
adc
mov
jne
and
aas
test
mov
outsl
mov
xchg
pop
fisttpll
cmp
push
adc
mov
mov
pop
mov
mov
rcll
jmp
cmp
mov
ss
loop,pt
cli
push
jmp
sub
stos
ss
add
in
pop
xchg
out
sub
dec
dec
outsl
pop
push
push
fbstp
sub
insl
inc
les
aam
mov
jge
add
out
add
pop
sub
add
inc
jge
leave
outsb
mov
jno
insl
cltd
push
pushf
icebp
enter
sub
inc
iret
bound
jmp
or
popf
push
jmp
repnz
mov
inc
movsb
test
push
es
adc
imul
dec
popl
xorb
inc
inc
imulb
jmp
cli
adc
addr16
mov
pusha
call
sti
test
xchg
cmc
sub
loope
adc
mov
icebp
xchg
cmp
cmpsl
jnp
mov
out
movsb
or
jo
sahf
inc
xchg
dec
xchg
aas
popf
push
repnz
aad
add
in
xchg
push
rcrb
shrl
std
sahf
inc
jno
jo
cwtl
adc
adc
adc
lahf
mov
popa
mov
and
add
xchg
pusha
cmpb
sub
push
mov
jo
mov
stc
pushf
pop
andb
push
imul
paddusw
jge
mov
lret
inc
and
repnz
int
shll
add
sbb
pop
movsb
cltd
mov
mov
addr16
push
dec
loop
mov
pop
fists
push
lcall
cmp
pop
mov
xchg
in
and
xor
notb
hlt
out
or
and
mov
ret
jmp
push
xchg
jbe
std
inc
cltd
stos
jge
lds
sub
je
inc
jb
inc
dec
addr16
iret
mov
pop
fsubl
xchg
pop
jbe
rorl
cmp
outsb
sbb
mov
dec
lahf
aam
fdivl
inc
adcb
test
push
subb
popa
push
jg
push
fs
sbb
dec
mov
daa
bound
fstps
into
lods
or
shlb
ds
pop
push
push
cmp
stos
cli
mov
dec
in
jg
cmp
or
movsb
push
je
xor
in
fmull
xor
sbb
mov
inc
cmpb
xchg
add
inc
movsl
fistpll
jb
icebp
ds
es
sub
stc
xchg
pop
cmp
mov
xchg
pop
pop
xchg
nop
sub
nop
pop
mov
orl
sub
loopne
int
jecxz
or
xor
jbe
movsb
ds
xchg
push
pop
sbb
into
and
aas
aam
jge
sbb
mov
iret
cmp
lcall
push
ss
sub
jno
and
fdivr
sar
push
pop
inc
push
mov
jmp
pop
jnp
outsb
stc
jo
lods
fstps
inc
mov
in
add
test
lods
mov
jno
gs
and
mov
or
xchg
mov
cmp
and
mov
je
int
pop
ret
out
shl
sbb
mov
push
out
popf
mov
std
jns
test
mov
cli
lret
outsb
pop
test
imul
cmc
clc
aad
fnstcw
sbb
imul
or
xchg
test
inc
loopne
shrl
sub
mov
andl
push
ret
out
mov
and
hlt
outsb
mov
ljmp
and
jne
xor
xor
arpl
lcall
sahf
lock
in
mov
dec
mov
outsb
push
in
decb
cmp
push
lock
dec
fdiv
sub
mov
cmpsl
cltd
dec
lods
or
jb
lods
jecxz
jbe
inc
stc
inc
pop
push
add
mov
sub
and
mov
insl
sbb
jae
adc
arpl
and
icebp
scas
fdivrs
inc
mov
int3
jp
sub
repnz
lcall
adc
imul
xor
push
add
jmp
inc
lods
and
adc
add
cmp
mov
test
aad
clc
xor
dec
xor
pop
sub
mov
icebp
add
push
push
mov
dec
jmp
shl
ljmp
dec
fdivs
mov
cmp
sub
scas
js
pop
rcll
rcll
sbb
push
sub
pmuludq
insl
xchg
arpl
ds
add
mov
push
test
add
orb
aas
or
sahf
jns
xchg
ljmp
add
push
sub
dec
adc
mov
repz
mov
jbe
in
mov
push
lods
test
or
ret
cld
add
xchg
jns
ret
in
or
jmp
ds
mov
jbe
lcall
add
xchg
xchg
dec
mov
inc
inc
in
add
mov
cmpsb
divl
cmp
sub
xchg
jge
ljmp
xchg
movsl
icebp
push
or
sbb
jg
mov
orb
aam
insl
imul
push
pop
rdpmc
les
ja
push
test
hlt
out
fisubl
fimull
mov
loopne
mov
adc
xor
inc
adc
jecxz
mov
mov
popa
aad
in
ljmp
xchg
subb
adc
daa
aam
mov
mov
lea
and
xchg
dec
cltd
dec
filds
push
or
imul
dec
loope
mov
dec
cmovge
addr16
fucompp
andl
push
pushf
or
xchg
cmc
outsl
fildll
movsb
push
ljmp
sar
orl
ds
jle
push
sub
mov
imul
fistpl
fcomip
sti
mov
jo
fwait
ret
cmc
cmpsb
and
mov
mov
pop
lcall
ret
and
enter
outsb
mov
jo
xchg
or
jg
mov
aam
imul
dec
mov
dec
fsubp
mov
mov
in
mov
mov
lds
jno
adc
imul
cmp
and
or
cwtl
ret
jnp
mov
test
inc
cmp
jae
jne
jg
cmpsb
cltd
sub
test
add
lea
or
sar
jo
pop
cmp
pop
mov
add
addr16
imul
ds
adc
lock
jle
bound
imul
mov
test
cmpb
sub
cmp
rclb
stos
mov
cli
aaa
sbb
inc
stos
lret
clc
xlat
add
and
scas
repz
inc
mov
insb
pop
negb
xor
inc
test
and
xchg
mov
jno
loopne
rcll
lret
push
or
lret
dec
xchg
cmp
inc
and
lds
scas
pop
or
xor
push
aas
and
das
andl
mov
and
lods
xchg
pminub
repnz
push
push
cs
pop
jl
lret
adc
jno
daa
cmp
outsl
and
dec
test
hlt
cmp
outsb
cmpl
das
add
popf
pop
vmread
xchg
xchg
inc
aad
sbbl
pop
mov
test
jg
cmpb
push
lds
scas
icebp
adc
in
xchg
pop
in
dec
push
mov
pop
adc
in
aam
sbb
jp
adc
mov
sub
movsl
dec
insl
sahf
mov
les
jns
js
repz
fldcw
into
inc
rcrl
adc
in
push
cmp
aas
mov
add
cmp
cmp
call
jb
mov
lret
cmp
adc
in
mov
aas
dec
xor
pop
cmp
stos
cmc
xchg
cli
in
pop
je
mov
xchg
mov
or
add
es
sti
sbb
movsl
lahf
bound
xchg
lcall
daa
push
mov
jnp
jecxz
push
xor
stos
or
push
decb
lret
jmp
sub
in
loop
jns
movsb
fwait
xchg
mov
and
lret
lea
shrl
int
cmp
dec
inc
push
icebp
ret
in
mov
jns
sar
loopne
sub
cmpl
xor
jle
cmp
imul
dec
ss
xor
dec
dec
gs
sub
dec
add
xchg
and
adc
and
sarb
sbb
jg
mov
jbe
xchg
sub
addl
jb
in
lea
cmp
jp
cwtl
pop
ja
cmc
jo
outsl
idivl
jno
sub
mov
pop
xchg
adc
xchg
lret
aad
nop
inc
mov
ja
popf
cmp
imul
adc
cmpsb
push
adc
sbb
and
pop
outsl
mov
leave
fdivl
out
into
aad
or
sub
lret
mov
icebp
in
jp
sbb
ud2
push
mov
enter
sbb
mov
lahf
scas
rorl
jbe
and
mov
pop
push
jl
mov
cli
int
data16
jp
cmp
les
inc
repnz
out
xchg
gs
shrb
ja
push
sbb
xchg
sbb
mov
aaa
test
cmc
xlat
push
sub
xor
loop
cmc
push
xor
loop
jmp
pop
fidivrl
fwait
in
jnp
inc
dec
jg
or
add
jo
jecxz
imul
push
xchg
mov
dec
repnz
shrl
add
add
cli
scas
sub
cld
mov
sti
aam
add
sbb
mov
inc
cmp
rcl
cltd
add
inc
sbb
sbb
lods
or
and
pop
adc
addb
ss
shl
nop
lahf
jmp
or
fstpl
test
mov
stc
xchg
push
mov
push
adc
and
aas
clc
subl
jno
or
test
push
jo
test
cmp
mov
xor
call
loop
jns,pt
and
push
jmp
pop
loop
xor
inc
adc
xchg
dec
add
sub
jmp
enter
test
insb
xor
and
inc
scas
lcall
cwtl
pop
aam
daa
or
in
and
add
fs
xchg
call
aas
push
xchg
add
xchg
js
push
imul
push
scas
bound
adc
sarb
or
js
sbb
lods
bound
xchg
shlb
dec
dec
pop
jo
clc
inc
in
dec
sbb
sub
lock
lret
cmc
leave
sbb
xchg
shr
mov
xor
sbb
or
jge
stos
iret
out
movsb
fs
inc
and
aas
icebp
jmp
mov
cmp
add
adc
xchg
fcompp
add
ljmp
stos
stos
xchg
stos
cmp
or
add
nop
sbb
fs
stc
lea
ds
and
inc
call
gs
clc
int3
jg
xchg
xor
out
jecxz
out
cmp
jo
in
lods
sbb
and
loopne
fsubl
mov
cs
lods
add
insl
out
in
movsb
fimuls
nop
aad
cmp
in
sbb
hlt
mov
and
aas
dec
cmp
aaa
mov
push
mov
add
int
das
clc
mov
std
movsl
inc
shlb
cmp
lcall
sub
mov
jb
xchg
pop
cmpsb
adc
arpl
mov
cltd
inc
and
adcb
test
push
add
icebp
mov
sub
push
pusha
push
pushf
dec
xchg
leave
jne
cmp
xor
ret
xchg
xor
out
movsb
stos
and
sub
bound
mov
iretw
sub
call
stos
and
pop
iret
outsl
scas
mov
pop
sub
pop
aas
pop
push
push
cmp
ljmp
imull
pop
fs
or
add
ja
aaa
push
cmpsb
lcall
shll
out
jle
or
shl
nop
ret
stc
jne
out
jb
mov
inc
in
dec
dec
test
mov
arpl
or
fimull
pop
add
sbb
mov
jecxz
stos
mov
scas
loopne
sar
or
cmpsl
mov
cmp
sub
pop
outsl
mov
test
xor
mov
push
out
stos
pusha
or
loope
pop
mov
mov
xorl
inc
les
xor
stos
xchg
mov
xor
fists
fwait
loope
mov
and
lock
mov
repz
add
jbe
mov
incl
or
adc
or
sub
xlat
inc
icebp
and
xlat
or
outsb
add
push
adc
out
jmp
pop
enter
dec
sub
add
xchg
loopne
sub
xchg
adc
lods
divl
pop
ret
es
dec
mov
cmp
fstl
enter
lea
es
bndldx
mov
lea
popf
dec
pop
inc
outsb
or
lea
bound
scas
dec
or
cmpsl
shufps
filds
adcb
cmc
xor
cmp
cmpsb
out
xchg
pop
call
pop
test
ret
ljmp
add
pop
movsl
lods
ss
xor
iret
stc
xlat
xchg
pusha
jg
imul
aam
movb
push
in
int3
adcw
out
aad
xor
mov
es
pushf
mov
xchg
mov
ret
lret
cmpsl
jmp
xchg
loope
push
mov
xchg
paddsw
pop
xor
arpl
cmp
outsb
pop
push
out
out
jle
movsl
in
xchg
sub
lcall
idivb
push
cmpsb
jecxz
sbb
insl
fucomi
mov
adc
jb
xorb
loopne
adc
cwtl
pop
leave
sarb
inc
popa
jo
cwtl
sbb
ret
pop
dec
sbb
in
ret
cmp
mov
pushf
dec
or
stos
push
mov
adc
movsl
jae
sbb
pop
shll
and
xchg
inc
aas
adc
lcall
push
sbb
add
imul
fs
jmp
pusha
dec
repnz
xor
sub
mov
xchg
adc
outsb
add
push
push
mov
jmp
sub
mov
pop
xlat
sahf
in
movl
aaa
push
adc
mov
xor
push
inc
adc
push
sti
cmp
cwtl
ret
data16
sarb
pop
mov
push
sahf
xor
fbstp
into
js
out
cmc
inc
lahf
mov
push
outsb
push
and
lret
outsl
fnstenv
imul
or
adc
and
push
arpl
push
push
lahf
mov
mov
and
inc
mov
mov
sub
insl
int3
divl
cld
push
idiv
xchg
lret
lods
nop
scas
lret
lock
lods
ret
xchg
int
pusha
mov
cmp
lahf
ja
mov
cmp
pushf
xor
push
repz
fistl
mov
test
lar
cmp
lret
gs
imul
test
sub
xor
fcomps
xor
cmc
es
dec
cmp
add
mov
mulb
inc
mov
inc
mov
cmp
mov
inc
ret
cmpsl
jne
mov
jmp
cmp
loope
sub
lret
lds
mov
aam
test
push
scas
mov
jns
idivl
jecxz
adc
les
shlb
lcall
push
shrl
mov
fwait
mov
inc
jmp
pop
pushf
adc
sub
fwait
xchg
mov
scas
xor
ja
jmp
loopne
push
mov
ss
push
ljmp
add
hlt
div
inc
push
mov
scas
pushf
loopne
add
adc
pop
mov
push
fucomi
es
cmp
jae
pop
sbbb
xchg
movl
or
cmp
xchg
cmpb
mov
call
push
jle
mov
fstpl
out
jmp
mov
ja
fidivs
push
dec
orb
fidivrs
pop
data16
in
pop
cld
inc
or
sbb
cli
and
ja
dec
dec
insb
jmp
add
xor
mov
and
out
mov
xchg
cli
pop
ds
or
xchg
adc
mov
jo
mov
inc
out
jo
addr16
cmpsb
int
aaa
leave
bound
mov
repz
in
setae
dec
lret
xor
jmp
lahf
fstps
dec
or
and
mov
sar
inc
decb
and
xchg
aad
xchg
lds
cmc
ss
fwait
sbb
mov
xor
mov
sti
and
xor
xchg
mov
int3
inc
notl
jmp
push
cmp
push
lods
test
mov
push
movsl
insl
dec
in
fistl
push
clc
je
je
xor
pop
int3
mov
jne
stos
xchg
dec
adc
mov
sti
in
dec
add
das
xchg
ds
dec
packssdw
adc
xor
inc
xlat
push
stc
xor
dec
pusha
jp
xor
xchg
dec
xor
inc
jo
aaa
sub
int3
xor
int3
nop
ljmp
adc
mov
jbe
push
daa
iret
xchg
out
aaa
daa
sub
push
mov
shl
sbb
pushf
ds
mov
or
mov
lcall
adc
into
and
ds
xchg
pop
dec
or
pop
sbb
xchg
fstpt
aad
pop
fstps
pop
inc
mov
and
pop
pop
add
jecxz
out
fnstsw
add
mov
pushl
fiaddl
push
sarb
les
loopne
ds
not
icebp
arpl
loopne
push
sbb
push
jmpw
fisttpll
push
clc
cwtl
decl
mov
hlt
cmp
hlt
lds
pop
sbb
or
push
jne
lret
mul
jbe
sbb
dec
xlat
sub
loope
dec
jo
ja
push
movsb
sbb
fisubl
xchg
jns
sbb
cmp
inc
mov
movsb
or
sub
pop
rcrb
cmp
cmp
testl
or
in
call
and
ljmp
push
and
inc
jb
jnp
jge
ja
rorb
jmp
mov
andb
cwtl
sub
and
inc
mov
les
mov
mov
or
xchg
push
stos
cld
jae
sub
jbe
jb
ret
cmp
mov
imul
jmp
popf
xor
leave
aam
xchg
mov
mov
mov
mov
sub
mov
aaa
mov
cltd
stos
cltd
cmpsl
cmc
movsb
arpl
xor
sub
sub
incb
stc
sub
arpl
adc
mov
out
pop
jecxz
mov
mov
push
xlat
or
and
and
js
data16
xlat
aas
jns
adc
arpl
fnstenv
sbb
lock
add
pop
lock
mov
and
lods
imul
or
add
or
loope
cmp
pop
xchg
push
lods
sbb
mov
in
aam
mov
jns
mov
rcl
ds
and
mov
lods
mov
cmp
cwtl
das
sub
nop
call
mov
push
xchg
outsb
sahf
lcall
jmp
and
dec
xchg
call
push
int3
xchg
out
scas
jge
je
mov
mov
push
mov
das
jb
sarb
out
popa
ret
jle,pn
sub
sub
lock
iret
cmp
pop
or
jns
lods
in
nop
mov
push
lds
push
push
mov
ret
loope
aaa
fstpl
ss
mov
out
xor
inc
cltd
xchg
int
out
xor
pop
xchg
mov
jnp
lods
out
jo
mov
cmp
cmp
adc
rcll
mov
cmp
inc
jb
xchg
sbb
rorl
loop
divl
daa
sbb
sbb
mov
movsl
xor
pop
sbb
inc
inc
dec
daa
lds
jne
adc
in
and
sbb
inc
mov
repnz
cli
insl
adc
in
and
push
push
hlt
int3
lea
xor
sub
add
cmp
sub
scas
mov
xchg
sub
mov
xchg
clc
mov
int3
out
push
and
fwait
fnstenv
push
mov
repz
insl
mov
mov
mov
movsb
or
xchg
or
mov
or
lcall
arpl
andb
sub
mov
std
pop
mov
adc
fcmovnb
xor
fidivrs
insl
push
pop
fs
cmpsb
leave
popa
jmp
xchg
invd
mov
push
adc
inc
lods
fidivrs
ja
in
pop
sbb
test
jle
sarb
dec
daa
dec
cmp
into
incb
mov
mov
out
dec
lcall
xchg
cld
in
cmp
es
nop
aas
mov
fnstsw
xchg
shlb
adc
lret
fldcw
or
ror
loopne
jmp
test
repnz
mov
mov
out
push
test
ficoms
inc
imul
pop
mov
je
push
stc
mov
inc
mov
jp
mov
loope
das
mov
scas
stos
addr16
sarb
outsl
sbb
sbb
int3
pop
xor
pusha
mov
fld
fs
inc
mov
push
mov
addl
in
dec
aam
push
mov
add
sti
jo
roll
lds
lahf
lcall
shll
int
sahf
pop
mov
inc
mov
bnd
cli
or
daa
mov
inc
sub
inc
dec
cltd
mov
push
mov
xchg
jnp
clc
add
mov
mov
lcall
sub
mov
int
int
mov
and
jge
push
repz
out
and
push
test
ret
mov
push
adc
pop
scas
push
js
in
nop
fstl
mov
das
fstps
inc
xorb
cmp
aaa
ljmp
fsubr
test
andl
and
push
push
sbbb
mov
cmpsb
xchg
rclb
es
leave
cmp
rcl
cmpsb
mov
mov
aam
dec
into
lret
push
xchg
xchg
jae
push
adc
lcall
add
xorb
test
cmpl
es
jmp
xor
test
insl
push
lods
aad
cmp
pop
xor
lods
and
mov
jne
rol
sub
sbb
lods
in
ret
adc
dec
daa
push
sarb
leave
into
ret
pop
ja
out
imul
inc
outsb
push
scas
test
mov
lahf
and
push
bound
jecxz
arpl
mov
inc
inc
inc
fucom
mov
jb
xchg
push
xchg
jmp
cmp
push
cmpsl
jbe
aad
loope
clc
cmp
cmp
jmp
sbb
fisubs
mov
int
xchg
add
insl
mov
mov
lods
sbb
lret
in
mov
push
sub
mov
xchg
pop
mov
fsts
mov
fiaddl
aam
push
push
xchg
pop
pop
fsubrp
cmp
gs
xor
cmc
aam
mov
testl
lods
xor
mov
cmp
inc
xor
mov
jo
test
fldt
xchg
pushf
add
es
pop
mov
aaa
adc
sahf
fmull
pop
xchg
iret
int
ret
out
mov
je
scas
sub
cli
divl
std
jmp
rcl
sub
inc
add
mov
ret
mov
push
dec
dec
push
int3
sarb
das
or
imul
aam
sbb
outsl
cmp
or
jmp
xchg
pop
adc
cwtl
add
jb
fldenv
stos
mov
dec
aas
and
lods
adc
rcrl
jl
inc
cmp
jo
xor
cmc
movsb
repnz
jge
clc
enter
fcomip
lods
push
pop
out
xor
jmp
adc
es
inc
outsb
lahf
jo
and
and
sub
jnp
inc
in
je
jl
jmp
adc
fs
cltd
cmpsl
dec
push
or
pushf
pop
out
xchg
cmpsl
aas
movb
dec
sar
pop
sbb
pop
dec
add
xchg
xor
aam
out
sbb
dec
jno
inc
push
inc
in
sbb
das
clc
je
or
inc
pushf
sub
xor
cli
in
cmp
push
cmc
mov
ret
adcl
xor
cli
mov
sub
pop
pop
mov
jo
mov
cmpsl
hlt
fiaddl
enter
xor
sti
bound
lcall
out
std
jmp
add
fwait
xor
stos
aam
aas
cld
dec
add
loopne
push
int
js
jmp
xchg
pop
inc
out
pushf
add
shll
dec
repnz
int3
and
mov
repnz
or
inc
les
iret
cli
xor
inc
outsb
arpl
arpl
movsl
mov
pop
sbb
ret
mov
das
movsl
arpl
loope
sbb
lds
pop
into
jne
test
mov
xchg
jbe
xchg
lock
pusha
mov
sub
rcl
sbb
pop
jne
test
inc
mov
push
shrb
lods
sbb
stos
inc
cmp
sbb
cli
cmp
mov
sub
test
mov
jmp
dec
inc
notb
call
pop
mov
enter
push
mov
push
jge
add
jne
rol
sti
leave
inc
test
loopne
fs
adc
cmp
and
xchg
stos
mov
popf
cld
jecxz
or
cmpb
mov
or
dec
lret
bnd
xor
rol
push
fnstenv
lods
psubw
push
cmp
xchg
add
pop
mov
loopne
scas
or
push
aam
adc
mov
inc
add
repz
push
out
sbb
aaa
or
xor
test
and
hlt
imul
dec
xchg
hlt
loop
inc
mov
dec
mov
insl
sarl
xchg
mov
mov
sbb
xchg
push
in
ffreep
pop
pop
lret
or
cmpsb
rorl
mov
arpl
std
dec
aam
aam
add
dec
xor
nop
mov
and
loopne
sub
push
fimuls
xor
pusha
pop
imul
inc
inc
sub
ja
out
add
mov
mov
cmp
push
in
daa
cmp
mov
pop
xor
mov
adcb
icebp
movsl
adc
mov
add
iret
je
pop
or
cmp
inc
push
mov
push
mov
stos
popf
inc
ljmp
lock
push
jp
ds
sti
xor
xchg
imul
insb
sub
xorl
xor
pop
loopne
inc
pop
pusha
or
btr
shl
jmp
cmp
lret
lock
out
push
mov
out
int3
test
fcmovnbe
imul
divl
pop
xor
rolw
stos
pop
shll
sbb
fcoml
adc
rcrb
rcrl
add
out
test
js
cmp
adc
lods
sub
sub
inc
shll
push
jmp
sub
xchg
pushf
xchg
add
push
cwtl
cli
dec
push
sub
pop
pop
addr16
cmp
stos
xor
add
mov
mov
sub
test
out
cltd
sub
mov
mov
cmp
enter
movb
stos
ss
xor
push
mov
dec
pusha
xchg
movsb
xchg
sbb
idivb
push
insl
scas
dec
xor
push
push
sarl
setbe
arpl
dec
icebp
add
jnp
push
sub
mov
sub
ljmp
jecxz
testb
icebp
mov
inc
fadds
jno
add
mov
jmp
xor
add
adc
cmpsb
cmp
das
int
inc
pop
pop
sub
add
xor
sub
sub
je
jmp
pop
cld
mov
and
lods
or
jle
jbe
add
iret
les
jp
pop
mov
dec
cmpsl
popa
xchg
xor
sub
stos
and
aas
les
movsb
jle
xchg
pop
push
xchg
xchg
xor
das
cld
lods
push
pop
pop
sahf
lea
mov
call
inc
psllw
scas
sar
std
in
xor
and
mov
insl
inc
mov
mov
mov
hlt
jne
repnz
movsl
xchg
in
hlt
dec
test
sbb
in
imull
lock
std
mov
adc
mov
sbb
aas
ds
lods
sarb
test
dec
lock
mov
and
aaa
dec
dec
and
cmpsl
js
inc
inc
push
inc
cli
gs
dec
jmp
mov
push
fistpl
ds
fstps
mov
lahf
fisubl
jb
pop
sbb
add
sub
cmp
mov
push
jo
or
inc
daa
dec
push
cwtl
jae
mov
js
adc
ja
fisubrl
sub
es
push
je,pt
push
cmp
cld
mov
cld
or
out
sahf
mov
pop
sub
lahf
rolb
adc
daa
add
inc
push
cltd
popl
iret
dec
into
lock
cmp
mov
xor
cwtl
repnz
mov
cmp
pop
repz
outsl
iret
imul
mov
test
pop
pop
mov
clc
sub
aam
adc
push
std
fildll
mov
jle
dec
add
jno
push
dec
xchg
es
outsl
xchg
and
mov
and
jp
ljmp
enter
int
pop
pusha
mov
pop
mov
rolb
sti
cmp
loopne
cmp
int3
jae
pop
mov
lret
arpl
fldt
jle
dec
add
and
sub
cmp
test
into
adc
iret
mov
imulb
mov
mov
cmp
pop
mov
sarb
push
inc
test
mov
hlt
cmp
xor
mov
stc
jo
shl
mov
or
lret
je
xchg
xchg
cltd
in
in
shlb
arpl
addl
pop
or
push
out
pop
ja
in
in
pop
xorb
pop
sti
pop
pop
mov
dec
shl
dec
fcos
mov
cmp
mov
cli
push
dec
mov
mov
inc
je
xor
call
ret
addr16
mov
add
push
adc
fimull
fs
inc
mov
inc
xlat
pop
aaa
mov
mov
cmpsl
jp
xchg
mov
dec
mov
fwait
pop
mov
cltd
divb
dec
push
sbb
and
and
cmp
fidivl
dec
cmpsl
mov
repnz
enter
mov
sub
pop
je
or
push
shlb
daa
pushf
mov
jecxz
lock
mov
push
imul
add
mov
push
lret
fisttps
fldl
repz
mov
pop
cld
movl
ss
int
scas
bound
adc
sub
shll
aad
sub
mov
jge
lock
mov
pusha
fisubrs
jge
mov
jae
dec
fisubrs
xor
or
cmp
out
sarl
mov
stc
popa
data16
lods
cmc
add
inc
stc
adc
testl
fidivl
pop
jle
inc
sbb
call
fildll
adc
sti
aad
outsb
xchg
mov
adc
lret
test
enter
jns
cltd
push
pop
xor
std
xchg
xchg
lret
in
ds
ljmp
stos
xlat
jne
mov
gs
push
dec
scas
push
dec
push
lea
sahf
in
push
inc
mov
repnz
sti
cli
pop
lahf
add
cmp
shrb
lods
cmpsb
das
dec
addr16
sbbb
jmp
adc
popf
sub
fwait
dec
adc
push
sub
scas
sbb
int
ds
daa
cmpsb
push
inc
mov
push
fsubp
mov
sbb
cmpsl
jp
cmp
mov
nop
sub
xor
cmp
sub
xlat
or
mov
call
outsl
imul
and
fs
mov
imul
inc
cmp
fldt
sub
dec
int
fidivs
imul
jmp
aad
xor
loopne
dec
mov
lahf
std
aad
out
and
sub
aad
les
mov
push
push
jne
and
pop
jge
adc
pop
outsb
push
xchg
sub
and
dec
mov
mov
mov
adc
cltd
mov
popf
xchg
adc
push
out
pop
sub
sbb
sbb
addr16
cmp
lret
imul
sbb
cmc
pop
pop
into
cli
mov
xlat
mov
fldt
inc
sub
xchg
ljmp
test
adc
std
ss
rcrl
mov
mov
loopne
xlat
and
sbb
jnp
jnp
dec
cmc
dec
or
ret
repz
mov
hlt
push
mov
jmp
scas
cld
out
sbb
popf
mov
add
cli
loope
mov
mov
outsl
sbb
fstpt
sbb
icebp
sbb
cmc
jmp
mov
sbbb
mov
adc
pushl
test
rorb
and
cli
or
and
rcl
jae
jecxz
in
popf
shrb
jl
insb
cwtl
call
push
ss
test
inc
mov
jg
lods
xchg
pop
mov
ficomps
xor
les
movsl
and
out
test
pop
ret
mov
sti
idiv
and
andb
insb
jns,pn
pop
xor
mov
xchg
loop
and
dec
push
repnz
icebp
lods
out
imul
mov
mov
mov
push
xor
add
fwait
movsb
cli
fldcw
fidivrs
mov
xor
fsubp
punpcklwd
loopne
and
sbb
ficomps
push
test
sbb
jg
mov
mov
shr
aaa
shrl
and
sub
cs
lds
fs
bts
sbb
inc
sbbl
xchg
push
mov
out
or
jnp
xchg
test
add
cmpsl
pusha
pop
ret
inc
test
adc
repz
mov
js
push
lret
mov
dec
cmp
xor
or
jo
mov
lret
pop
jg
andl
aad
out
roll
mov
sbb
sub
repz
ds
inc
imul
jl
aaa
jae
adc
les
lock
inc
outsl
imul
pop
in
or
cmpsl
mov
fstpt
outsl
jl
sub
sbb
pop
push
call
ret
mov
mov
lret
out
daa
pop
sub
push
popf
cmp
scas
mov
aam
push
in
pop
sbb
xor
sub
cmpsl
xor
pop
inc
inc
cltd
mov
dec
into
test
adc
xlat
in
ds
imul
scas
add
or
data16
pop
inc
aad
jle
loope
inc
and
rcr
test
add
int3
mov
mov
clc
mov
cmp
push
mov
push
ficompl
sbb
push
scas
es
mov
data16
test
mov
repnz
cmpsl
jno
std
push
movsl
xorl
or
mov
mov
dec
push
add
testb
ljmp
int
cmc
aaa
fwait
cmc
fldcw
cmp
pop
idivb
mov
dec
sub
mov
push
push
imul
vphadddq
in
or
pop
mov
push
jle
ss
jo
jmp
adc
in
divb
xchg
mov
add
or
les
fildl
mov
sarb
dec
sbb
jp
inc
loopne
scas
lret
adc
adc
and
stc
movsl
and
cltd
ljmp
add
push
enter
inc
adc
fs
shrb
repz
dec
stos
jle
mov
xor
dec
push
cli
addl
cs
sbb
xchg
jno
les
imul
sub
jge
xchg
mov
xchg
push
sbb
pop
aam
and
xor
sbb
add
jb
int3
push
jo
mov
lret
bndldx
push
dec
mov
lds
jp
mov
push
loopne
pop
fmull
sbb
jle
or
cmp
mov
push
dec
inc
adc
cmp
mov
xor
and
es
add
pop
and
add
lds
sub
cmp
loop
xor
push
cwtl
add
pushf
push
pop
movsl
inc
popa
cmp
pop
out
push
out
mov
xchg
mov
loope
icebp
jns
jae
ss
inc
cmp
cmpb
xor
fsubrl
fmuls
imul
xchg
sbbl
lods
dec
cmp
mov
add
std
imul
pushf
insb
dec
and
out
jl
jae
dec
jg
mov
outsl
cmp
dec
xchg
add
xchg
popa
loop
addr16
jo
sbb
push
daa
nop
and
xchg
lods
xor
leave
mov
mov
inc
pop
mov
dec
aas
mov
cmp
fcomi
sbb
adc
adc
push
lcall
je
cmpsb
int
add
inc
mov
fisubrl
dec
pop
adc
cmpsb
idivl
pusha
pusha
inc
adc
es
cwtl
xor
cltd
cmpl
xor
cmpl
jl
in
mov
iret
or
ret
cltd
shr
inc
imul
pop
ss
cmp
fnstenv
jge
sbb
push
test
pop
adc
adc
insl
cwtl
in
lret
xlat
cmc
leave
mov
out
iret
mov
xor
push
repz
shll
xor
adc
push
shlb
cmp
cmp
call
xor
out
pop
dec
pop
mov
int3
or
push
stos
hlt
outsl
mov
adc
pextrw
leave
insl
sahf
mov
fcompl
pop
jmp
inc
bound
pop
repz
cmpsb
pop
out
sahf
cmpsb
in
pop
add
inc
jg
dec
clc
andb
iret
xchg
jns
add
jb
repnz
repz
imul
add
sbb
or
mov
pop
xchg
shlb
roll
cmp
int
sub
sub
push
call
mov
stc
daa
movsl
inc
ja
xchg
cmpsb
push
jne
jnp
sub
call
test
mov
fisubrs
stos
cmc
xchg
dec
leave
lock
inc
clc
inc
sub
fs
push
iret
lods
cmp
scas
fld
lea
call
pop
sbb
mov
inc
icebp
push
mov
out
sbb
dec
inc
mov
mov
mov
jbe
jg
fdiv
clc
and
les
adc
push
push
mov
dec
lods
cmp
sub
fldenv
loop
inc
pop
sub
mov
and
sti
ret
out
fs
in
xchg
pop
iret
inc
inc
mov
xchg
ret
cltd
inc
cltd
inc
cmp
pop
xchg
and
cmpsb
inc
sub
jl
je
cmp
add
xchg
and
push
clc
fcmove
xor
fmull
and
test
mov
pop
mov
das
xchg
push
cs
sub
jae
outsl
les
sahf
stc
mov
mov
ljmp
adc
out
sub
xor
nop
stos
stc
and
lret
xor
xor
add
daa
or
scas
repnz
cmc
inc
jb
aad
icebp
out
lea
jnp
cmp
jmp
push
bound
or
xchg
cli
cld
add
pop
pop
xor
push
into
jp
push
insl
fnstcw
jb
in
fisubl
push
inc
enter
mov
insl
shr
mov
add
stc
xchg
mov
in
ja
fs
sbb
push
xorl
xor
out
jl
out
std
sbb
loopne
jb
xchg
jnp
jbe
test
and
dec
divb
hlt
or
popa
dec
push
scas
das
jecxz
sbb
cmp
adc
int
sub
jo
adc
jp
out
add
fs
neg
mov
out
jae
fisubrl
or
dec
mov
addr16
aad
fisubrl
cli
mov
sbb
xlat
mov
insb
js
scas
adcb
jb
mov
push
add
mov
adc
or
mov
adc
orl
loopne
lcall
push
movsl
mov
nop
rorb
push
dec
adc
daa
or
add
sub
mov
or
cli
cmp
int
mov
das
frstor
push
ja
mov
aam
lret
loopne
jno
adc
movsb
mov
and
sub
mov
addr16
or
jb
into
mov
and
sbb
mov
stc
lcall
rcl
cmp
cmp
dec
jb
add
call
jecxz
scas
xor
aam
jmp
mov
imul
cmc
ret
lahf
xor
adc
dec
xor
xchg
popf
je
xchg
mov
test
rorb
data16
cli
nop
ljmp
xor
data16
jp
cmp
rol
cmp
pop
in
adcl
aad
aam
adc
inc
cld
add
popa
insl
fidivrl
scas
mov
pop
cmp
sbb
fdivl
cld
xor
xor
jecxz
pop
es
xchg
mov
cwtl
or
inc
into
movsl
hlt
lods
movsl
cwtl
mov
pusha
jl
mov
and
std
add
and
xor
std
lods
mov
aas
jmp
lret
pop
add
adc
out
dec
xor
add
inc
testb
lods
and
icebp
mov
mov
mov
ss
imul
mov
adc
xchg
mov
pusha
in
jge
mov
and
jg
xchg
push
xor
xchg
jl
cmc
lret
test
mov
pop
in
cwtl
jno
out
fdivrl
xchg
xor
sbb
jle
in
std
fwait
dec
lea
loope
sub
xchg
mov
inc
pop
or
dec
shl
mov
sbb
xlat
ja
icebp
shlb
dec
lods
mov
cmpl
mov
mov
cmpb
mov
adc
xlat
jecxz
add
loopne
idiv
or
fcoms
out
push
mov
and
sbb
fildl
in
dec
xor
fiaddl
and
daa
mov
sbb
sbb
shrb
xchg
pop
nop
dec
mov
pop
add
lahf
rorb
leave
jae
mov
xor
ljmp
aaa
fists
int3
fcompl
test
sti
and
sub
mov
and
xchg
inc
scas
out
cld
clc
cld
xchg
push
pop
mov
push
dec
cmp
sub
add
mov
rcrl
sahf
ljmp
out
pop
push
sub
andl
daa
xor
mov
jecxz
adc
ror
xchg
xchg
nop
rolb
sub
jg
pop
jb
fisttps
neg
add
pop
cs
pusha
mov
inc
jo
icebp
int3
mov
test
fldenv
mov
add
push
push
pop
jge
jbe
aam
scas
dec
xchg
mov
pop
hlt
inc
jno
adc
cmp
out
xor
or
sub
mov
ss
into
fcompl
dec
sub
lret
jo
testb
cld
stos
mov
andnps
jp
aam
mov
sub
xchg
inc
pop
incb
mov
or
mov
mov
clc
mov
mov
insb
adc
inc
xor
es
add
fwait
jg
mov
int3
mov
xchg
mov
sub
inc
dec
sahf
push
xor
pop
xor
out
fistps
inc
ja
pop
pop
cmpsl
sbb
dec
imul
testl
push
rol
nop
xlat
xor
jnp
jb
insl
mov
push
fucomi
cmpsb
outsl
add
mov
mov
push
arpl
fcmovnu
fs
or
lods
adc
mov
xor
jmp
repnz
dec
test
and
aad
mov
cmpsl
cld
test
mov
pop
mov
ficompl
test
xchg
add
add
or
lret
xor
sbb
movsl
fimuls
pop
sub
clc
mov
pop
dec
add
fisubs
mov
cs
arpl
cwtl
inc
xor
fwait
inc
cmpsb
push
fldcw
inc
mov
jnp
mov
jg
jmp
jno
repz
xor
push
fimuls
aam
lods
or
shrb
push
enter
aam
in
les
and
jmp
pop
or
xchg
aad
sbb
pop
inc
in
xlat
stos
adc
data16
in
push
adc
add
pop
and
daa
mov
dec
push
ss
inc
push
push
shlb
add
add
adc
lods
xor
fwait
test
jecxz
and
sub
lock
add
xor
or
loopne
jbe
lret
xchg
and
and
cld
fcmovbe
add
lret
gs
pushl
lahf
push
push
xor
xor
xchg
out
or
cwtl
pop
jg
arpl
push
mov
sub
sti
pop
cmp
dec
fdivl
int
inc
or
jmp
inc
call
testl
pop
adcl
cmp
xchg
adc
popl
gs
mov
jmp
sti
int
or
test
push
call
inc
mov
cmp
dec
push
hlt
adc
fptan
pop
mov
mov
mov
in
push
aaa
mov
dec
mov
rorb
add
xchg
inc
es
mov
jne
shrb
bound
dec
not
sbbl
cmp
dec
mov
lods
add
inc
cmc
je
fs
scas
iret
jb
popf
out
inc
int
loop
popf
sbb
ljmp
test
js
popa
push
jecxz
sti
push
cmp
pop
idivb
lds
test
out
shl
inc
xchg
fwait
cmpsl
inc
cmc
in
sar
lahf
imul
movsb
mov
pop
mov
xchg
nop
add
sbb
shl
jno
mov
or
sbb
in
into
pop
divl
hlt
sbb
sub
in
rol
dec
dec
or
aad
mov
test
fs
xchg
ds
mov
sbb
das
int3
and
jae
movsl
decl
pcmpeqw
test
or
sti
push
daa
xor
or
pop
daa
push
cmpsl
pusha
mov
or
stos
xlat
sbbl
dec
push
movsb
out
aad
test
rorl
out
lret
and
pop
ss
xchg
mov
inc
jae
jb
lds
rorl
out
pop
inc
aas
cmp
btr
rorl
lock
js
lea
imul
clc
inc
mov
and
mov
adc
fwait
aaa
jg
cwtl
int3
aas
pop
out
sbb
es
out
test
aam
sbb
lock
sub
jne
out
cmp
mov
popf
cmp
and
pop
jae
cwtl
shrb
div
test
cmc
ret
pop
mov
push
testl
aaa
mov
int
jl
cmc
ljmp
incl
push
jbe
shlb
fwait
pop
xor
je
out
xorl
lret
inc
xchg
movsl
mov
jecxz
loopne
xchg
xlat
cmpsl
mov
xchg
mov
lods
out
jbe
insb
dec
arpl
arpl
ret
sbb
xchg
adc
and
lods
dec
adc
subb
arpl
mov
mov
int
jmp
inc
xchg
test
pop
fidivrl
mov
push
pop
pop
xor
dec
dec
cmpl
idiv
pusha
lahf
scas
outsb
pusha
mov
cmp
jno
shl
jo
scas
xchg
cmc
pop
jae
xor
fs
pop
dec
inc
mov
jo
divb
mov
outsl
orb
lahf
mov
sti
cmc
jecxz
pushl
add
pushf
daa
push
pop
movsb
iret
mov
dec
dec
cmp
dec
mov
mov
xor
in
pusha
clc
aaa
mov
sti
push
enter
push
pop
sub
add
rcl
add
arpl
jae
gs
jo
inc
adc
and
outsl
cli
cmpl
fisubs
sbb
fwait
push
dec
cltd
push
push
push
jmp
dec
pop
push
lcall
inc
fsubrs
push
int
push
hlt
xor
scas
jmp
sub
cmpsl
pop
xlat
xor
inc
mov
pop
xchg
nop
pop
and
dec
lret
push
sub
mov
pop
movsl
sti
sbb
scas
sarb
cs
jbe
mov
scas
cmc
fdivrp
pop
mov
les
pop
insl
push
fsts
pop
pop
fcmovb
hlt
js
ret
mov
push
leave
out
mov
dec
cltd
int3
xlat
in
push
push
lea
ds
in
repz
nop
jge
cmpsb
mov
mov
fucomi
popa
xchg
insb
lret
mov
inc
inc
push
sbb
out
arpl
scas
je
std
hlt
adc
in
mov
es
jp
int
fdivrl
or
inc
add
add
sub
fwait
repnz
mov
xchg
cmp
add
pop
ljmp
jecxz
enter
loopne
arpl
imul
jns
aam
je
sub
shrl
les
data16
push
stc
and
pushf
push
add
cmp
pop
push
ss
cmp
cmpsb
inc
pop
dec
outsl
xchg
sub
cli
inc
sub
mov
xchg
lods
out
aaa
dec
mov
mov
movsb
popa
jbe
outsl
and
dec
repz
insb
xchg
cmp
mov
adc
pop
loopne
push
add
xchg
mov
or
and
loope
xchg
insl
fdivrl
sub
sbb
ret
popf
push
repnz
or
outsb
loope
sub
inc
shl
test
or
jg
jnp
sub
dec
inc
xchg
lcall
loopne
jnp
les
inc
push
inc
cli
dec
ljmp
sbb
inc
rcrl
add
or
aas
and
movsl
ja
cmpsb
fsubr
in
cmp
or
sarl
sub
push
inc
cmc
lods
mov
push
ret
outsb
aas
lahf
push
push
adc
lcall
push
cmp
sahf
rolb
inc
pop
dec
inc
daa
mov
jnp
hlt
xchg
gs
dec
dec
loope
mov
lds
pop
lods
sbb
fisubrs
pop
js
pop
inc
cmp
mov
mov
stos
add
cltd
jl
cld
repz
addr16
jmp
pop
dec
xchg
xchg
sub
movsb
outsb
imul
add
jg
pop
jbe
mov
out
pop
jne
fs
dec
aam
jp
sub
enter
les
cmp
fisttpl
ret
xor
ss
fsub
jae
or
lds
mov
add
sbb
cmp
lahf
jo
fstps
fwait
lods
in
lahf
out
and
in
xchg
aad
mov
fsts
xor
push
adc
dec
xchg
add
jle
xchg
aas
insl
cmp
mov
insb
test
or
icebp
mov
aas
add
pop
jmp
lds
mov
push
fmul
sub
mov
fists
mov
hlt
test
and
push
xchg
fidivrl
adc
lods
aad
repnz
jnp
cwtl
test
cwtl
std
xorl
adc
or
cmp
jo
or
ret
add
int3
mov
inc
jp
push
dec
mov
inc
lea
cmpb
sbb
scas
adc
cwtl
mov
aad
stos
in
mov
ds
pop
das
mov
jp
push
mov
inc
je
ror
and
test
hlt
bound
lds
in
lods
out
in
cmp
dec
pusha
sbb
call
jnp
mov
hlt
out
nop
sbbl
andl
sub
arpl
sbb
mov
mov
sub
sbb
bnd
xchg
mov
push
xor
out
lods
jnp
mov
aas
sbb
jb
mov
add
imul
int3
shll
movsb
int3
lea
mov
ret
cmp
shll
dec
jnp
iret
test
out
rorl
lcall
or
sets
cmp
pop
ret
popf
lahf
mov
stos
sbbb
cmpsb
dec
add
pop
pop
push
ret
xchg
mov
mov
sub
inc
adc
jno
in
jns
and
xor
frstor
push
and
push
jno
xchg
jno
stc
insb
dec
add
and
cmpsl
mov
xor
scas
jp
xchg
lret
shll
bound
cmp
rcrl
jg
cmc
int3
out
mov
in
dec
or
insb
jb
cli
icebp
fwait
push
addb
call
scas
sub
xor
movq
inc
icebp
push
jbe
and
lahf
push
inc
rorl
jmp
std
les
test
xchg
inc
shrl
pushf
mov
sahf
mov
pop
pop
out
les
into
out
pop
push
repz
fdivrl
add
fcompl
out
rcll
xor
inc
mov
fabs
push
js
pusha
xchg
dec
stos
lret
dec
jno
out
add
cmp
mov
push
xchg
jl
fdivp
mov
xchg
add
jg
ljmp
add
jae
call
or
xchg
ds
mov
xor
jb
adc
bnd
cmp
insb
inc
out
xchg
push
out
int3
adc
xchg
pop
inc
xor
test
pop
subl
fstpl
es
push
mov
pop
cld
loopne
pusha
jl
adc
mov
fisttps
call
rcrl
push
loop
fcmove
jbe
xchg
xchg
out
or
cmp
pop
inc
mov
test
or
sub
dec
lahf
mov
roll
insl
cmp
cs
cld
add
stc
cmpsl
push
aas
mov
data16
or
xchg
andb
xor
int3
xor
sarb
in
std
dec
cmp
dec
lahf
pop
push
mov
jg
imul
fimull
adc
xchg
lahf
sarl
mov
mov
sahf
adc
loop
shll
repz
daa
push
push
and
test
icebp
push
gs
xchg
and
xchg
pop
lret
sti
dec
loope
push
mov
adc
notb
cmp
sub
rcrb
pop
dec
adc
mov
xchg
mov
jne
push
mov
jns
dec
jae
fistl
add
fnstsw
ja
mov
adc
mov
or
dec
loope
xchg
and
orb
jae
sbb
scas
clc
pop
flds
jb
jmp
or
xor
adc
or
sbbb
loope
mov
mov
add
jbe
push
mov
push
sahf
and
das
imul
jbe
xchg
sub
add
and
ja
or
add
cmpsl
xchg
xor
subl
aam
and
imul
or
aas
and
push
sahf
ja
in
adc
fadd
in
sbb
cmp
rclb
mov
pop
cmp
sub
mov
movsb
add
outsb
notb
mov
or
jb
test
mov
dec
mov
mov
mov
xchg
addr16
fldcw
aaa
inc
imul
pop
push
outsl
mov
scas
lods
arpl
sbb
out
nop
inc
mov
add
mov
dec
movsl
fstps
push
or
imul
cmp
mov
sbb
je
adc
js
inc
pop
cs
pop
jle
and
test
in
jmp
insb
cmpsl
and
push
sbb
cld
or
inc
mov
fwait
mov
add
inc
outsb
xor
dec
rcrl
insl
sub
xchg
sub
jg
mov
rorl
cmp
mov
xchg
ss
jl
mov
ds
pop
dec
insb
popf
jo
stc
push
xchg
mov
popf
dec
imul
loope
mov
into
in
popf
inc
cld
cmp
data16
sub
xor
xor
dec
mov
mov
inc
lret
fbstp
xor
sub
rol
cmp
gs
mov
inc
mov
mov
clc
adc
and
ljmp
sub
push
stos
mov
push
jg
jnp
push
sub
push
dec
in
mulb
pop
inc
cmp
imull
adc
push
or
mov
popa
mov
js
jno
pushf
popa
xchg
in
cld
push
xlat
out
sbbb
dec
adc
sbb
cmp
cmpsb
adc
ss
add
iret
xchg
data16
int3
sbb
xchg
and
jl
sub
push
cmp
lods
sub
das
in
lods
xchg
xchg
sar
ja
push
mov
adc
sub
mov
ret
mov
jp
push
xor
sti
test
dec
into
sti
cmp
xor
jns
out
imul
xchg
lds
cmp
icebp
mov
adc
mov
test
inc
std
xchg
cs
push
adc
add
fcoms
adc
jnp
in
js
mov
mov
and
ret
neg
shll
sub
jl
sbb
pusha
push
jge
out
or
sbb
lret
and
ret
frstor
xor
add
movsb
sbb
pop
fwait
sub
dec
or
jmp
mov
push
add
sbb
mov
push
mov
push
or
mov
sub
push
xchg
in
xchg
jge
leave
xchg
mov
lret
add
das
stc
or
xor
mov
addr16
sbb
ljmp
mov
cmp
xlat
pushf
cli
xchg
sahf
jp
arpl
pop
fcomp
dec
sarl
cwtl
icebp
shrl
sub
scas
mov
push
lock
call
out
inc
or
lret
or
jp
or
ss
inc
pop
push
lock
ret
add
addr16
push
les
jge
fwait
dec
xchg
add
out
push
dec
lods
mov
int
add
or
jecxz
out
sbb
aad
int
call
lds
in
inc
les
push
inc
ja
imull
rclb
add
dec
xchg
hlt
jno
cmp
nop
enter
lods
repnz
iret
xchg
xchg
mov
pop
pop
mov
and
xchg
mov
mov
add
std
scas
xchg
inc
ja
xlat
push
mov
pop
ret
out
movsb
add
xchg
mov
sub
insb
and
divl
das
and
mov
jle
adc
insl
shll
outsb
data16
scas
cmp
inc
dec
stc
pop
fstpl
adc
pusha
dec
pop
add
mov
or
cmp
push
jbe
push
push
das
int
lods
and
fdivrs
xor
clc
nop
loopne
sbb
mov
imul
inc
imul
pop
push
popf
out
push
aas
add
outsl
sbb
in
cmp
les
or
adc
sbb
jns
andl
xchg
pop
xchg
lea
xchg
adc
divb
data16
cmp
jge
test
add
cwtl
sub
jg
cmp
sub
call
or
push
push
test
add
jmp
and
and
addr16
xchg
fnsave
sbb
and
ljmp
nop
test
jl
xor
inc
inc
icebp
cs
add
cmp
xchg
push
pop
nop
in
inc
js
mov
xor
ds
inc
jno
movl
xchg
imul
adc
repnz
jmp
xor
imul
shlb
xchg
stos
xchg
outsl
aam
jl
dec
xchg
mov
inc
lahf
dec
add
ret
icebp
or
outsb
fmuls
scas
repnz
stos
xor
daa
jne
in
aaa
popa
fisttps
xchg
outsb
add
stc
xlat
dec
cld
test
iret
out
aad
xchg
lret
xchg
xchg
xor
mov
pop
mov
shl
flds
out
ja
push
xor
std
js
leave
rcrl
push
shll
popa
pop
in
jo
roll
call
in
rcll
mov
cwtl
pop
mov
xchg
xchg
xchg
adc
rolb
cli
bound
pop
jbe
test
out
xor
test
jle
test
aam
push
xor
mov
or
test
cwtl
inc
sahf
xlat
stos
xor
hlt
sub
cmp
rep
pop
fnstcw
and
adc
frstor
daa
popf
xchg
mov
aam
into
lret
adc
jne
xor
aaa
test
js
ljmp
sub
push
pop
insb
inc
movsb
mov
mov
push
push
js
loope
sarb
push
pop
push
lock
sub
stos
test
cli
call
ret
push
jl
roll
mov
fidivs
pop
jne
jno
xchg
bound
pop
ds
or
cmp
or
xchg
shrb
imul
xchg
fisubrs
push
xchg
pop
imul
jae
xor
lcall
cmc
andl
mov
xchg
scas
cltd
xchg
mov
rol
cli
arpl
jle
cmc
or
sbb
outsb
inc
mov
cmp
insl
pusha
and
xor
add
test
iret
mov
movsl
mov
rorb
stos
mov
xor
movsl
popf
cmp
test
ljmp
cmp
push
push
js
jnp
aam
xchg
push
push
adcl
filds
sahf
sub
das
push
sbb
inc
vpmacssdd
test
lock
jmp
cmp
je
repnz
xor
mov
mov
xchg
mov
enter
pop
pop
fsts
xor
mov
ret
dec
push
lcall
repnz
mov
ljmp
push
les
js
push
test
push
sbbb
or
dec
xchg
mov
popa
lahf
sti
jae
cmp
rclb
es
jb
cmp
push
movsb
mov
incb
cmp
aad
fnsetpm(287
loope
rcrb
jl
push
nop
stos
dec
and
stos
dec
cmp
call
pop
shrb
mov
shrb
popf
pop
ja
xor
push
fwait
aaa
xor
jg
inc
pand
imul
sbb
and
mov
push
add
mov
pop
sub
mov
mov
out
jbe
sub
pop
test
push
push
jae
sub
mov
test
adc
je
insl
or
xchg
xlat
pop
into
cmc
iret
mov
xchg
cld
and
cld
sub
xchg
push
pop
pop
mov
fmull
inc
aaa
adc
in
jecxz
cmp
jne
or
mov
adc
lahf
rorl
loop
cmp
sbb
pop
bnd
out
add
and
mov
inc
pop
cmp
std
ret
mov
inc
iret
dec
and
in
adc
decb
cli
push
das
int3
in
xchg
jle
repz
scas
mulb
add
adc
xchg
ja
cmp
mov
xchg
cmpb
add
or
inc
jne
push
jbe
out
gs
jo
hlt
ficoms
shlb
shlb
add
cli
repz
sub
cmpsb
jbe
nop
cmp
test
mov
clc
push
xor
push
cli
jp
mov
and
aaa
pop
jle
cmc
jo
arpl
mov
add
testl
inc
mov
add
xor
stc
xor
in
insb
sub
sub
ret
jl
xchg
add
stos
push
add
or
push
add
push
out
nop
push
int3
add
and
add
cmp
nop
daa
cwtl
xor
roll
fstpl
xchg
dec
in
xchg
arpl
push
pop
jae
jl
cmp
sbb
hlt
jnp
dec
mov
out
jno
mov
cwtl
movsb
lock
int3
clc
sub
mov
push
inc
js
cltd
xor
repz
mov
add
popa
in
pop
push
cmp
xor
pop
mov
adc
jp
mov
aad
roll
lea
ja
ljmp
adc
arpl
stos
call
aad
sti
adc
xchg
popa
nop
jb
loope
cmp
adc
out
add
lahf
cltd
mov
icebp
scas
inc
mov
out
mov
loop
push
fcmovu
subl
mov
push
fwait
in
dec
int
nop
aas
es
fistl
das
mov
and
push
mov
pop
mov
jp
xor
sub
imul
jp
jp
push
and
js
bound
mov
arpl
mov
xchg
ja
into
int
imul
es
push
pop
ja
gs
in
lods
mov
ss
adc
ret
loop
jge
or
push
cmp
out
mov
sbb
xlat
loopne
pusha
add
lcall
fldl
xor
scas
pop
cmp
arpl
pushf
sahf
xlat
sbbb
cmp
mov
add
lret
jle
loopne
pop
push
ret
xlat
jb
lods
sti
ja
ja
cmp
out
push
rolb
mov
test
in
lods
les
adc
leave
jns
ss
jne
int
stc
or
movzwl
cmc
mov
sbb
cltd
outsl
mov
dec
mov
and
ja
sub
inc
add
movsl
clc
cwtl
sbbb
adc
push
sbbb
xor
cmp
repz
aaa
jp
and
ds
arpl
sbb
push
data16
inc
sbb
push
cmpsb
insl
enter
gs
ja
mov
roll
push
xchg
repnz
int3
inc
aaa
rcll
sar
leave
mov
mov
mov
mov
dec
or
pop
hlt
and
jnp
cmpsb
and
or
pop
push
in
fcoms
pop
repz
outsb
mov
imul
cmp
outsb
mov
add
nop
loope
arpl
imul
mov
daa
pop
inc
out
add
sub
pop
and
push
leave
sbb
sbb
pop
pop
pop
popf
in
mov
ljmp
sarb
insl
pop
cwtl
ret
sub
cmp
call
iret
lret
inc
cmc
push
adc
rolb
in
sbb
andl
xchg
into
pushf
addr16
inc
out
mov
inc
sub
adc
cmp
sub
or
fsubrl
push
or
lods
xor
mov
ficoms
jno
mov
adc
mov
mov
hlt
gs
ss
cmp
push
cmp
outsl
subb
mov
add
fistps
adc
daa
incb
mov
cli
add
or
mov
in
adcl
pop
pushf
stos
push
sbbb
mov
test
or
aam
subb
lods
xchg
mov
int3
outsl
aad
out
fcmovnu
pushf
repnz
out
hlt
ret
lret
mov
cmc
popf
cmpsb
xchg
mov
das
mov
loope
insl
mov
inc
or
push
in
mov
xlat
cli
sub
xchg
in
scas
pop
xor
data16
cmc
das
out
aad
inc
jo
incl
or
push
test
mov
sbb
jo
int
sub
cli
dec
shrl
sarb
loope
imul
in
daa
pop
adc
xchg
cltd
xor
fstpl
sahf
mov
stos
and
xchg
pop
push
test
movsb
sub
xor
cmpsb
test
inc
push
sub
imul
int3
dec
sahf
or
int
scas
xor
adc
pop
mov
xor
jl
cmc
mov
push
gs
loopne
lret
je
icebp
enter
int
cmpsb
jmp
xchg
loope
sub
xchg
lock
stc
mov
cli
dec
dec
fldt
or
push
sbb
in
or
pop
push
adc
jp
mov
es
xor
lods
call
aaa
lcall
push
fnstsw
or
fwait
jle
cmp
pop
fsubl
pusha
addr16
push
int
je
push
adc
push
sub
fdivr
ficoml
aad
pop
repz
inc
sub
pop
xchg
pop
and
jno
xchg
or
mov
aad
adc
push
repz
dec
push
fiaddl
inc
fistl
sub
and
sbb
into
xchg
dec
xchg
lock
imulb
push
lret
mov
loope
mov
aam
xor
jge
inc
pop
and
jbe
test
xchg
lret
out
repz
pop
cmpb
aas
add
jecxz
pop
fs
sbb
test
pop
xor
xchg
sbb
push
lcall
ficomps
shr
ror
iret
popa
fnstcw
xlat
add
xchg
cltd
scas
gs
lea
movsb
push
mov
push
adcl
loope
pop
scas
enter
push
xor
sbb
sbb
inc
fsubrl
push
clc
jb
iret
jns
ficoml
fisttpl
adc
jns
jb
mov
fbstp
xchg
test
add
lock
xor
adc
je
test
adc
subb
push
push
dec
lods
jge
imul
jae
cmp
pop
fwait
mov
mov
cwtl
or
test
sub
sub
add
push
stc
push
push
mov
movsb
in
jl
aam
loope
fdivrs
icebp
dec
or
pop
jo
inc
int3
rep
sbb
nop
adc
add
xchg
jle
pinsrw
mov
lret
inc
adc
pusha
fcomps
sbb
or
fildl
sub
rorb
ret
push
xor
mov
sbb
inc
lds
loopne
pusha
es
dec
fstpt
adc
xor
cli
out
jle
mov
rorb
ficoms
xor
mov
pop
cmpl
jb
movsb
jl
xchg
fiadds
stc
outsb
xor
cld
fwait
arpl
movsl
out
push
xor
pop
popf
xchg
arpl
insl
test
lret
negl
cmpl
mov
push
xchg
in
inc
mov
ffree
inc
in
ss
jl
aaa
push
cmp
test
xchg
lods
stos
pop
xchg
icebp
pop
pop
cwtl
enter
inc
xchg
popl
ja
out
imul
fsubs
xchg
xlat
xchg
std
push
add
sub
jne
movsb
sub
clc
lods
popa
xchg
push
xchg
mov
cmp
jbe
mov
imul
out
sti
jb
addr16
lahf
test
jmp
rclb
pop
add
sbb
sub
popf
std
clc
and
and
sti
push
out
call
jno
lahf
cmpsb
and
les
ds
test
hlt
inc
xchg
scas
lock
or
cmp
mov
xchg
out
lods
dec
or
rolb
adc
jae
cld
add
jle
mov
fcoml
sbb
xor
cmp
test
inc
pop
loop
test
sbb
ja
mov
test
imul
jmp
js
jo
fdivrs
jbe
popa
mov
cltd
pop
jle
push
inc
sub
scas
popa
cmpsb
pushf
xchg
arpl
arpl
cmpsl
mov
scas
or
jg
repz
loopne
pop
cmp
pop
inc
inc
pop
add
dec
rolb
push
rorb
mov
out
jns
adc
sbb
stc
aaa
mov
fsub
filds
in
xchg
aad
aam
das
into
mov
sarl
movsb
push
and
xchg
mov
stc
mov
enter
pop
fsubp
out
fucomip
hlt
pop
mov
dec
or
fcmovnu
aaa
mov
lcall
repnz
push
xchg
pop
pop
push
fisttpl
cli
adc
sub
leave
std
mov
xchg
sbb
mov
add
sub
jl
mov
aad
jl
pop
mov
push
xchg
add
fsubrp
call
and
lret
xor
adc
inc
inc
ds
mov
movnti
sarb
xchg
addb
shll
and
outsb
repz
out
or
js
nop
dec
je
outsl
lods
or
mov
clc
aad
sar
mov
sbb
outsb
pop
out
sbb
cmp
daa
sti
add
cmp
cmp
dec
pop
fiaddl
mov
test
es
xor
xor
test
xor
xlat
pop
data16
mov
add
rorb
jecxz
popa
xor
mov
sub
fmuls
or
ficomps
xchg
idivb
mov
or
pushf
je
dec
and
pop
mov
mov
pop
in
or
xor
out
and
lcall
mov
call
movsb
es
inc
popa
pop
jecxz
sbb
data16
pop
cwtl
add
dec
sub
pop
xor
mov
cmp
pop
in
lods
pop
or
test
clc
and
or
lock
ret
push
sbb
scas
cmp
adc
mov
jb
les
leave
or
mov
test
movsb
cmc
pushf
test
xchg
adc
popf
pushf
aas
ret
ja
sahf
fsubrs
add
or
xchg
or
mov
adc
dec
push
aam
inc
frstpm(287
lret
fcompl
add
push
mov
data16
dec
push
mov
lcall
scas
add
cmp
out
mov
cmp
mov
shl
mov
xchg
rclb
in
inc
scas
push
popf
jo
mov
push
sub
ficoms
mov
shrb
mov
loope
seta
and
cmp
in
dec
mov
jno
jle
test
ss
popf
push
pusha
jns
pop
pop
or
pop
cmp
xchg
adc
leave
pop
scas
mov
push
inc
adcb
outsl
xlat
out
sbbb
mov
aas
pusha
jb
loop
mov
push
sub
test
cli
jb
mov
repz
int
stos
mov
fildl
mov
sub
inc
and
nop
cld
adc
xlat
xchg
sahf
shll
jbe
fstpl
js
movsb
stos
decl
addr16
push
or
and
sub
addr16
into
stc
mov
xchg
pushl
lret
push
outsl
mov
pop
mov
call
outsl
add
cmp
int
pusha
out
enter
add
pop
fdivl
inc
jb
push
bound
js
rorl
rolb
aad
testl
out
sub
rcll
insl
mov
loopne
addb
orb
add
or
rcrl
cmp
ljmp
stos
add
pop
shlb
stos
imul
je
pop
out
add
push
jo
mov
call
test
lds
or
inc
loop
pop
inc
pop
pop
xor
push
adc
xor
inc
cli
mov
dec
add
popf
mov
loopne
mov
das
xor
sub
lcall
aad
cmp
and
fs
fs
pop
inc
fimull
js
push
aad
enter
and
cmp
mov
cli
push
mov
mov
mov
icebp
hlt
outsl
mov
cmp
add
mov
xchg
lcall
outsb
mov
mov
jae
and
xchg
int3
outsb
shr
adc
adc
aam
adc
dec
shll
cmp
jnp
push
cmpsb
mov
decb
stos
icebp
sahf
sub
mov
cmp
sub
lcall
push
and
and
je
xchg
dec
aad
fldenv
sbb
test
push
incl
rol
ljmp
dec
inc
loope
lock
mov
jne
or
in
adc
stc
mov
sub
jb
adc
xchg
jbe
scas
xor
pop
inc
mov
adc
fsub
pop
bndstx
xchg
xor
insl
push
mov
iret
xor
sub
jo
cmp
sub
sub
les
popf
mov
sbb
jecxz
or
cwtl
sub
lea
in
xlat
jns
popf
inc
in
roll
fidivs
addb
xor
mov
mov
or
clc
pop
arpl
jecxz
pusha
sub
fiaddl
daa
idivb
es
cmpsl
idivb
inc
std
add
xchg
fsubrl
cs
test
fildll
insl
pop
subb
cltd
es
lret
gs
push
aam
and
and
adc
cmp
ret
loope
and
xchg
push
inc
das
sbb
bound
ret
cmp
lcall
xchg
les
inc
jmp
jbe
adc
and
inc
shr
movsl
out
push
mov
mov
lahf
cmp
push
pusha
mov
xchg
cmp
add
inc
cmpsl
ficomps
stc
fsubrl
nop
mov
xchg
scas
pop
je
push
ss
jb
xchg
stos
mov
add
rcrl
in
call
adc
iret
mov
sti
pop
push
dec
xor
out
xchg
xor
inc
xor
mov
sbb
roll
push
xchg
pop
xlat
loopne
push
pop
mov
fbstp
and
test
and
mov
mov
dec
cmp
mov
or
cmpsl
loopne
aad
jb
jge
in
jmp
jmp
mov
xchg
jnp
aas
cmp
lds
pusha
sarl
dec
add
je
and
ret
in
out
push
mov
jb
add
out
imul
add
ljmp
mov
jge
sub
dec
push
push
sub
or
jb
testl
std
bound
sbb
mov
test
lds
inc
cmpl
mov
jae
jns
loope
dec
fs
cmp
xchg
out
idivl
mov
adc
cld
sti
fdivs
jo
mov
roll
test
hlt
lock
mov
fistpll
je
test
mov
and
aas
sub
mov
sti
sbb
pop
push
inc
cmp
xchg
push
out
shlb
pop
insl
insl
in
aas
loop
push
xor
pop
leave
and
jbe
sbb
sub
dec
or
bound
mov
jmp
out
ret
or
push
arpl
xor
xchg
push
xor
fnstenv
push
xchg
mov
pop
mov
push
insl
mov
cmp
insl
cmpsb
xor
mov
pop
pop
pop
outsb
rcrl
jns
xchg
aad
movsb
xor
icebp
iret
add
js
xor
cmp
jnp
pop
mov
inc
pushf
or
mov
test
mov
add
add
insl
xor
mov
xchg
or
lock
scas
out
sbb
sub
mov
pop
dec
test
or
fsubrs
xorb
repnz
ss
clc
cmp
xor
jo
or
shlb
pop
inc
and
ds
mov
test
dec
mov
jno
bound
cmc
adc
mov
or
popa
dec
xchg
and
push
push
add
loop
xchg
ficompl
out
jge
mov
test
adc
jnp
aad
pop
cmp
mov
lcall
sbb
push
ljmp
sbb
pop
loop
sub
add
jb
adc
cltd
das
dec
jp
pop
mov
push
jmp
je
xchg
add
dec
cmp
dec
fdivrl
mov
out
add
subw
int3
cmp
and
add
out
fisttps
adc
sub
fcoms
int
sahf
aaa
mov
lods
adc
out
push
pop
sub
xchg
rolb
rcrb
pop
enter
lahf
xchg
or
out
fimuls
popf
es
mov
pop
xor
mov
push
mov
enter
jl
inc
fstps
adc
stos
xor
and
cld
out
pop
int3
aad
lahf
jp
jecxz
or
or
xchg
push
xchg
andl
mov
inc
sahf
leave
or
add
fimull
xor
cwtl
xlat
pusha
and
movsb
cli
push
adc
jo
je
fwait
inc
in
xlat
sbb
fcoml
fmul
hlt
pop
pop
push
inc
and
loop
or
ss
xchg
or
sarb
rorl
sti
adc
and
push
out
xchg
fcom
in
mov
xor
push
xchg
mulb
dec
xchg
pop
sub
xchg
jb
mov
flds
mov
ljmp
pushf
es
test
aaa
cwtl
imul
dec
and
aad
or
dec
cmp
daa
imul
in
mov
xchg
push
mov
sbb
les
push
in
movsl
enter
pop
leave
loope
ljmp
push
sbb
add
pop
mov
lds
mov
push
negb
ds
or
lcall
into
arpl
outsb
arpl
jb
sub
mov
adc
jl
push
aas
sub
test
hlt
pop
xor
fcmovbe
enter
hlt
insb
xor
insl
push
sub
push
scas
xchg
pusha
sarb
aam
cmp
and
jecxz
mov
xor
or
lahf
cmpsb
fldenv
pushf
push
mov
fistl
pop
outsb
movsb
sbb
test
xchg
pop
out
and
cwtl
ret
popa
test
jle
loope
sbb
mov
add
adc
in
in
mov
sub
bound
pop
push
push
and
leave
xchg
outsb
out
mov
pop
cli
adcl
adc
adc
insl
add
sbb
call
out
adc
xor
dec
loope
insl
fsts
bts
xor
dec
pusha
pop
push
sub
cli
mull
sahf
inc
and
ds
cmp
jne
or
dec
xchg
pop
add
lahf
leave
mov
push
ja
cmpl
jle
in
mov
and
xor
mov
add
test
xchg
xlat
inc
mov
mov
sbb
mov
xchg
mov
or
sub
or
push
mov
rolb
dec
fwait
or
aaa
lods
xor
jmp
pop
jmp
jp
rcll
mov
adc
shll
fwait
outsb
xchg
lret
jl
in
cmp
sbb
enter
mov
lods
or
jmp
repnz
ss
push
hlt
out
pop
cld
xor
fs
mulb
imulb
lock
out
addr16
in
push
or
ss
mov
lods
cmp
lods
cs
adc
inc
jg
out
inc
cltd
mov
dec
sahf
sti
dec
jo
int3
adc
jmp
sub
popa
mov
popl
bound
in
and
jno
inc
and
push
leave
jae
push
sbb
rorb
xchg
or
xchg
pop
jl
shlb
adc
jmp
push
push
adc
dec
or
xchg
insl
dec
push
xor
lods
call
iret
mov
inc
and
subb
out
out
dec
fsubr
xchg
lahf
imul
ficomps
and
push
cmp
cs
pop
xor
mov
xor
imul
cltd
lret
in
ret
adc
add
mov
mov
mov
sbb
lret
test
je
pop
jo
ret
push
scas
lea
test
cltd
clc
cmovg
ja
sbb
adc
jl
pop
sub
mov
cmpb
jno
xchg
push
fnstenv
push
sub
xchg
sbb
ja
mov
inc
sub
clc
or
sub
xor
and
enter
xchg
sub
fsubs
xchg
imul
lahf
stos
movsl
and
out
push
jle
shlb
lds
and
outsl
sbb
dec
mov
adc
mov
popf
adc
je
fucom
rclb
fsub
sub
in
cld
lods
push
push
in
xchg
sub
fsubp
adc
das
sub
setnp
push
pop
adcb
mov
negb
popa
mov
sbb
rorb
mov
jae
incb
subb
inc
sti
dec
test
ds
movsb
pusha
sub
pop
std
dec
rcrl
xchg
aam
mov
sbb
mov
xchg
pop
sbb
mov
out
ret
or
jns
mov
jmp
mov
adc
dec
xchg
scas
fstp
je
push
in
jae
cmp
xchg
mov
test
shrb
mov
inc
add
hlt
mov
mov
xorl
jno
out
mov
cwtl
cmpsb
fs
test
les
fildll
dec
nop
add
stos
mov
ret
xor
lcall
dec
xchg
adc
pop
ss
lock
jnp
lds
xlat
insb
ficompl
cli
mov
enter
push
dec
imul
xorb
lcall
js
ret
and
adc
or
mov
sarb
js
test
insl
iret
rolb
add
jae
pushf
repz
push
cmpsb
sbb
outsb
lcall
sub
mov
fucomp
loope
lret
rcrl
enter
push
or
or
aam
pop
aaa
js
xchg
adc
aaa
xor
mov
lea
inc
jne
dec
les
mov
dec
mov
or
jle
mov
mov
pop
mov
dec
fs
mov
xchg
pop
xor
nop
xorl
mov
and
mov
in
aad
dec
js
jle
jnp
mov
lods
mov
fistl
popa
loop
xchg
jp
push
movl
xchg
sahf
mov
addr16
sahf
cmpsl
sahf
fwait
cwtl
push
dec
jb
repnz
cld
into
xor
jl
cmpsb
mov
and
jae
out
shrb
in
ror
xchg
lods
adc
xchg
pop
xchg
ds
cmpsl
add
in
pop
xor
xchg
cwtl
enter
dec
popf
shrl
ret
repz
hlt
pop
adc
and
xor
or
adc
xlat
xchg
es
pusha
lds
rcrl
movsl
xor
ljmp
xchg
fisubs
push
outsl
sub
lcall
inc
mov
pop
mov
nop
lock
fwait
scas
outsl
pusha
daa
int
fistl
out
push
dec
jle
hlt
mov
cmp
and
mov
andl
cmp
inc
adc
out
pop
mov
aam
lret
shll
icebp
outsb
sbb
push
adc
cmp
stos
jnp
lea
adc
aas
fidivrs
push
cli
xchg
ret
xchg
gs
mov
imul
fcom
daa
mov
jb
pop
ss
fmull
rcrl
lret
enter
ljmp
lcall
sub
and
shr
pop
inc
and
mov
mov
inc
arpl
jno
jae
scas
lds
clc
fwait
imul
enter
int3
cwtl
or
adc
or
movsl
adc
sub
stos
fs
sti
mov
push
mov
lret
nop
mov
sub
aaa
rcll
into
repnz
cmpsl
lods
jmp
jl
ret
push
shl
lock
mov
and
ret
xor
hlt
call
fdivrl
push
cli
mov
aad
ja
push
xor
mov
jne
mov
cwtl
add
mov
repnz
jg
leave
or
call
jle
dec
and
pop
lock
insl
xchg
arpl
insb
sarb
xchg
les
jp
mov
jmp
and
lret
sarl
xchg
cli
mov
cmp
pop
inc
jae
mulb
pusha
inc
mov
cmp
xchg
loopne
jns
mov
clc
adc
popa
sub
lahf
std
jle
insb
and
mov
jae
mov
or
dec
mov
mov
lret
xchg
or
hlt
xor
adc
push
or
sbb
jecxz
ja
popf
and
stos
lahf
negl
inc
lret
sub
enter
pop
mov
ljmp
popf
mov
pop
adcl
push
dec
jo
ret
add
rol
jl
mov
out
nop
iret
aaa
or
cmpsb
insl
pop
enter
test
scas
ret
fstl
shl
stos
aas
fsts
sti
jge
cmp
xor
imul
mov
mov
mov
adc
sbb
movsl
dec
aad
out
mov
dec
jecxz
mov
xor
cmp
mov
push
call
rclb
and
push
jne
pushl
testl
cmc
sub
stos
je
xorb
in
lahf
and
or
dec
cmp
loopne
jle
hlt
lcall
or
imul
movsl
scas
pop
pop
in
ja
rcl
lock
outsb
mov
xchg
push
adc
les
jge
adc
shl
mov
bound
fisubl
or
sbb
inc
inc
scas
xchg
fsubs
int
enter
imul
jb
inc
loop
repz
in
pushf
xchg
mov
or
mov
add
test
mov
sub
dec
ds
push
rcll
and
push
xchg
adc
psubusb
ljmp
jnp
sub
leave
imul
jno
xorb
int3
jbe
mov
insl
mov
cltd
in
mov
repnz
pop
push
int3
test
mov
scas
jle
jecxz
inc
cmp
mov
js
cwtl
cs
movd
int3
scas
adc
sub
and
or
xchg
and
xchg
push
sbb
sbb
subl
shlb
cmp
movsb
lods
lret
push
or
mov
icebp
push
loopne
push
inc
frstor
dec
or
les
stos
add
and
pop
enter
xor
adc
lds
sbb
mov
arpl
mov
fsubrs
imul
mov
mov
mov
xchg
repnz
sahf
rorl
jmp
scas
adc
mov
out
and
xlat
lret
dec
cmpsb
jbe
xor
scas
mov
cmpsl
pop
sbb
adc
sub
xchg
or
mov
cwtl
lahf
cmp
cmp
adc
or
push
movsl
jno
int3
test
adc
pop
dec
imul
xchg
fcomps
adc
je
push
and
mov
out
xor
mov
adc
int
push
in
and
mov
inc
jnp
sbbl
scas
repnz
pop
clc
sti
mov
scas
mov
push
leave
mov
xor
add
sbb
sbb
mov
push
fmull
cmp
out
add
jne
lret
lret
xor
mov
ljmp
out
out
pop
jae
adc
jo
mov
daa
in
subb
stos
sub
imul
aaa
mov
test
mov
ds
cmc
pop
pop
das
mov
xor
aas
xchg
imul
ror
add
sahf
psubq
sbb
stos
notb
xor
sub
mov
in
daa
shll
xor
repnz
data16
sbb
adc
mov
out
mov
cmp
gs
dec
mov
push
aas
stc
jns
pop
fs
or
xchg
cli
mov
inc
xchg
jmp
and
sbb
cld
jp
frstor
movsl
loop
fisubrs
insl
jmp
lahf
call
std
inc
mov
int
cltd
xchg
mov
add
jb
push
mov
arpl
rcl
scas
xchg
jae
sbb
mov
adc
imul
in
cmpsb
cmp
fadd
cs
cmpb
outsl
dec
xchg
jp
pop
jns
adc
repz
jb
daa
dec
mov
add
outsb
push
or
or
jns
popf
aad
mov
mov
mov
jge
mov
pop
jnp
imul
push
jg
das
jmp
arpl
cmc
add
fs
mov
notl
inc
dec
inc
or
call
clc
push
push
sahf
add
jge
lret
push
sub
pop
sti
cmpsb
inc
adc
scas
mov
inc
and
xor
ds
pushl
ljmp
scas
mov
or
inc
xor
iret
pop
push
mov
scas
loop
cmp
lds
and
lret
or
lods
mov
push
jae
push
dec
arpl
cltd
out
xorl
ljmp
icebp
jg
inc
jno
les
pop
insb
outsb
adc
push
stos
jne
pushf
mov
add
sarl
or
sar
push
cmpsl
test
mov
hlt
lcall
mov
je
out
lods
shrl
sbb
aad
xor
shll
arpl
cltd
mov
push
dec
and
rorl
sarl
jno
in
jmp
insl
das
jle
mov
jns,pt
int
and
nop
and
sub
addr16
je
mov
int3
out
jnp
data16
cltd
push
sub
hlt
lock
pop
dec
iret
push
sti
xor
cmp
mov
adc
xchg
enter
pusha
sahf
lock
pusha
rorb
fnstenv
mov
push
arpl
xlat
mull
sti
push
das
pop
test
push
jb
jl
jle
fwait
add
jle
repnz
dec
lahf
dec
mov
addb
dec
cmp
pop
rclb
rcl
dec
dec
es
stc
shlb
shlb
push
or
lods
pushf
pop
fidivs
call
push
adc
lea
xor
int3
loopne
mov
mov
or
dec
jle
mov
jl
mov
xor
pop
sub
add
rorb
scas
popf
sar
sarb
lcall
inc
lods
loop
enter
gs
xor
imul
scas
test
jmp
stos
loop
sub
push
loopne
sbb
les
sbb
pop
pop
pop
addr16
sbb
jl,pt
test
je
or
icebp
and
repnz
xchg
outsb
xchg
fdivs
or
adc
mov
or
std
leave
inc
mov
push
andb
loopne
sahf
fsubrs
daa
repz
xchg
mov
int3
mov
push
add
sub
shrb
inc
fimull
cwtl
pop
or
jb
jae
fmuls
jne
test
sbb
loop
into
xchg
stos
pop
sub
push
mov
lret
xor
out
push
push
jbe
repnz
ljmp
xchg
inc
or
out
mov
mov
pop
sbb
jmp
in
sub
inc
ds
in
test
in
imul
paddsb
into
xor
push
std
add
jl
seto
and
sub
pop
mov
rcrl
dec
icebp
sahf
fwait
sti
test
push
stos
adc
jno
mov
add
test
mov
cmp
data16
repz
pop
test
test
cs
xor
sarl
cmp
sti
cmc
cwtl
xchg
mov
int3
loop
adc
mov
jmp
es
dec
sbb
subl
jbe
pop
cmp
cli
ret
dec
inc
pop
data16
stos
and
outsl
jl
dec
pop
mov
popl
adc
xchg
repz
add
divb
test
jae
movsl
push
xchg
xor
mov
mov
mov
neg
inc
je
xlat
popf
jae
shll
lret
movsl
xchg
xchg
out
inc
pop
mov
inc
mov
lahf
imul
sbb
lea
std
push
jns
sub
sbb
nop
stos
inc
dec
fsubr
jp
filds
lea
inc
lods
adc
xorb
mov
sbb
faddl
loopne
inc
and
ja
cwtl
mov
mov
stos
xor
xchg
xchg
inc
ja
or
sbb
loop
sbb
push
inc
add
add
leave
iret
jp
jne
loop
popl
sub
outsl
push
inc
out
xchg
sbb
mov
xchg
lahf
add
xchg
cmp
or
fsubs
adc
es
sbb
popa
lods
cld
insl
adc
inc
xor
mov
dec
cmp
clc
je
xchg
xor
cmp
mov
dec
jle
aam
mov
sub
adc
add
sbb
mov
push
gs
test
mov
jbe
gs
sub
cmpsb
fwait
loopne
pop
xchg
cmp
mov
fdivl
lds
mov
cmp
cltd
mov
xchg
jmp
xor
jp
push
and
push
sub
adc
imul
daa
loope
xor
insl
ja
test
xor
in
leave
std
leave
sarb
pushf
bound
jmp
cltd
ljmp
mov
xchg
or
cmp
vcvttss2si
push
mov
and
leave
leave
dec
out
scas
sub
je
adc
jl
xor
xor
aad
or
push
or
mov
mov
mov
cmp
out
ret
mov
and
sub
das
scas
push
js
sub
addl
jnp
pop
sub
lods
sub
fcoml
in
popf
dec
and
jb
xchg
jle
arpl
sti
push
xor
std
lods
sub
loop
xchg
jbe
popa
imul
popa
sbb
or
sub
push
mov
pop
mov
xchg
dec
xor
mov
inc
roll
add
bound
and
xchg
push
testb
std
sbb
dec
sub
sub
leave
stos
repnz
fiaddl
push
add
sub
mov
lods
popf
or
es
pop
sbb
repz
xchg
pushf
jnp
repnz
stos
jne
sbb
xchg
sub
je
adc
lea
add
nop
pop
mov
ret
movsb
int
stos
mov
setp
mov
inc
negb
fs
stos
push
popf
xchg
test
and
xchg
mov
fimuls
and
cmp
jmp
data16
out
and
push
push
arpl
adc
int3
iret
jns
inc
flds
sarl
call
ss
jb
scas
jo
enter
outsb
data16
cmp
imul
cmp
and
es
push
in
outsl
mov
movsl
movsl
mov
pop
scas
cld
cwtl
in
clc
add
mov
jae
inc
jmp
or
enter
daa
popa
mov
sahf
xor
or
insb
outsb
xchg
les
icebp
jae
adc
cmp
dec
mov
push
shll
add
popa
or
mov
mov
fisubrl
push
xchg
jne
add
fstp
mov
out
push
mov
outsb
push
arpl
push
jmp
mov
pop
das
jg
mov
xor
adc
aas
lret
filds
xchg
filds
lods
sbb
sbb
lods
or
stos
xor
or
lds
movntq
loope
mov
adc
sub
jecxz
mov
inc
aam
std
mov
inc
and
jbe
in
addr16
xor
stos
or
mov
dec
in
das
xchg
cmp
and
cmpsb
in
xor
xchg
pop
push
arpl
pop
lret
shr
in
popl
mov
iret
jo
stc
jne
std
mov
and
push
sub
stos
or
jl
les
js
dec
loope
lea
xchg
push
lcall
sub
mov
jle
aad
cld
imul
cwtl
aaa
sarb
hlt
roll
mov
int
push
loop
inc
wbinvd
xchg
mov
sahf
test
xor
pusha
sbb
add
add
jmp
nop
cmp
fdivs
movsb
sub
movsl
mov
xchg
or
shl
mov
shlb
mov
push
jle
mov
addb
lds
xchg
bound
sbb
or
mov
je
fmull
je
mov
push
sbb
sub
and
push
adc
jno
aad
xchg
dec
dec
sbb
lds
lahf
fwait
add
mov
cltd
subl
sub
sub
imul
xchg
or
lock
xor
sti
pushf
fists
jmp
xor
pop
inc
inc
nop
mov
mov
imul
inc
jnp
mov
das
insl
jmp
lds
cli
cmp
jo
adc
mov
jl
gs
cmpsl
xor
jmp
fstpt
cmc
push
adc
sbb
mov
adc
pop
js
cmp
subl
ljmp
loopne
dec
cwtl
mov
sub
test
jns
xor
jns
dec
pushf
mov
aam
aas
inc
cmp
mov
pusha
cmp
popf
sarb
sbb
mov
dec
test
push
dec
mov
subb
fisttps
imul
mov
jb
je
adc
sub
pushf
and
push
out
xchg
and
orb
xchg
mov
pop
fwait
adc
lret
lods
cmp
jbe
xor
insl
data16
sarb
outsb
jnp
movsl
inc
shrl
add
sub
notb
fadds
test
dec
jno
inc
xchg
or
roll
in
jo
iret
adc
dec
in
sbb
or
sarl
mov
pusha
jmp
jnp
idivb
xor
mov
in
test
getsec
gs
bound
jae
push
mov
es
addl
pop
and
aad
pusha
je
dec
adc
rcll
jmp
xchg
enter
xchg
and
push
pop
and
dec
pop
jne
imul
sahf
jl
xor
in
lea
pop
mov
inc
mov
lret
fwait
int
lods
push
jmp
popa
xadd
gs
cmpl
sub
lcall
inc
stos
sub
insb
xchg
sub
aas
scas
mov
jne
test
insb
imul
mov
lock
or
shrb
ret
out
ljmp
add
loop
test
cmp
xor
or
cs
clc
and
add
ds
pop
fistpl
aas
pop
iret
sbb
cld
ja
pusha
xor
inc
icebp
insb
packuswb
dec
pop
fdivr
add
push
outsl
xchg
cmp
cwtl
aas
or
dec
and
ret
dec
unpcklps
lret
jmp
cmp
cmp
hlt
mov
xlat
lret
jl
push
test
sub
add
mov
xchg
mov
inc
jmp
inc
jge,pn
notl
inc
mov
cmp
jno
xchg
push
data16
stc
popa
stos
scas
add
jp
lds
cmp
roll
xlat
out
fs
cmovle
movsb
sbb
mov
icebp
xchg
jb
xlat
inc
or
cmp
mov
pop
and
push
xchg
jb
je
xchg
stos
sub
lods
daa
in
outsb
loop
pop
xchg
jp
fists
int3
mov
sbb
xor
cli
in
jnp
mov
xor
test
fistpl
pop
cmc
pop
rclb
and
xlat
fwait
aaa
in
ja
push
repnz
mov
sub
es
jge
xor
sbb
nop
test
dec
xor
mov
inc
push
leave
dec
movsb
stos
movsb
enter
or
push
fwait
cld
mov
fdivp
iret
xchg
iret
pushl
jb
adc
pop
dec
test
cmp
inc
mov
mov
mov
sub
add
es
inc
push
inc
out
xor
ss
aas
int
sbb
mov
pusha
out
ret
fucomip
sub
mov
or
outsb
jns
jne
les
push
cmp
sti
rcr
or
push
push
cltd
cmpsl
xchg
divb
inc
push
jno
xchg
cmpsl
int3
loop
bound
ret
ss
icebp
xor
sub
sbb
repnz
fldcw
lahf
aaa
xor
mov
inc
pop
pop
leave
sub
cltd
cmp
lods
aam
in
xor
mov
dec
adc
or
in
scas
das
adc
icebp
jle
test
or
xor
test
add
inc
mov
das
out
mov
out
out
pop
testb
sbb
cmpsl
push
mov
scas
outsb
jnp
addr16
and
xor
dec
push
xor
sub
xor
push
lret
cmp
adc
push
push
add
dec
mov
es
out
into
loope
aad
pop
arpl
insb
push
add
sub
std
insl
jecxz
inc
std
loop
pop
daa
mov
pop
ja
dec
cwtl
adc
sub
lret
push
pop
jno
int
cltd
adc
lret
enter
pop
jae
mov
adc
inc
mov
xlat
push
arpl
aam
shrb
pop
insl
mov
xrelease
push
or
cwtl
mov
xchg
pusha
jp
jecxz
cmp
dec
iret
cmpsl
pop
pop
dec
cmp
out
push
in
jmp
mov
aas
fsubs
xchg
push
lock
add
xorb
les
sub
ret
jp
loope
cltd
outsl
push
jno
pop
sbb
mov
and
dec
mov
test
adc
dec
loop
inc
mov
dec
decb
sub
test
mov
or
lods
and
add
lret
cltd
mov
loop
pop
push
pop
xchg
fsts
sub
push
outsl
arpl
push
add
out
adc
cwtl
sbb
sbb
push
repz
nop
int
mov
jbe
subb
pop
fisubl
mov
in
cmp
faddl
aaa
sbb
mov
push
shlb
int3
xor
dec
call
in
adc
dec
push
les
sarl
xchg
xor
lret
sbb
lret
sbb
add
pop
fwait
into
hlt
fdivl
add
insb
pop
loopne
cmp
jo
pop
mov
in
daa
inc
mov
push
aad
nop
dec
lds
test
jnp
out
mov
jmp
dec
cmpsl
in
sbb
sub
mov
mov
push
or
mov
sarl
repnz
push
jo
jns
pop
mov
insb
jnp
popa
rorb
push
adc
fcmovu
inc
dec
mov
xchg
mov
lods
cltd
pushf
jno
lds
sbbl
xchg
xchg
es
sbb
ja
js
mov
fsts
lret
or
mov
lret
stos
or
mov
dec
dec
or
pop
lahf
sbb
and
scas
dec
flds
lock
lret
cli
pop
and
xor
ljmp
je
sbb
adc
xor
pop
std
xchg
imul
push
cltd
loopne
jle
movsl
addl
repz
loope
adc
mov
js
fsubrl
popl
sbb
cmp
fs
dec
and
pop
sub
pop
dec
mov
stos
jbe
negl
sub
adc
repz
hlt
pop
inc
cltd
sub
xchg
loopne
cld
lock
pop
lock
push
imul
adc
scas
xor
sbb
add
add
xor
mov
dec
orl
pop
loope
jg
adc
aam
repnz
adc
inc
mov
or
jecxz
sub
mov
sub
cmp
sahf
dec
mov
mov
pop
inc
mov
pop
mov
pusha
pop
fstps
jo
xchg
sub
cs
mov
mov
dec
out
push
xorl
jp
lcall
sbb
imul
out
mov
add
ljmp
pop
test
push
lcall
pop
jge
pop
lods
xchg
popa
ds
test
ret
subb
imul
push
mov
arpl
cli
cmp
adc
sar
stos
and
inc
movsb
test
fs
and
mov
movsl
andl
in
jo
xor
jne
addr16
lahf
icebp
mov
les
notl
rclb
gs
jp
into
and
insl
mov
mov
divl
mov
or
adc
nop
enter
mov
je
sub
test
enter
addr16
mov
js
sub
jbe
cmp
sub
lea
and
push
outsl
cltd
inc
mov
mov
push
out
leave
mov
pop
aad
sti
lea
jg
mov
sub
js
mov
mov
add
ret
inc
imul
sub
repz
adc
push
pop
xchg
push
test
mov
xor
push
aas
pcmpgtw
pop
ret
xchg
cmpsl
sti
or
sbb
or
cltd
sbb
lret
ret
jg
movsb
dec
mov
jmp
sbb
cmpsl
lcall
cmp
mov
lock
addr16
arpl
imul
mov
ja
mov
js
lea
scas
aas
fisttpll
pushf
jb
ds
xchg
les
cmp
xchg
in
stc
adc
cltd
stos
pop
clc
mov
repnz
mov
stc
pop
stc
sbb
mov
mov
call
enter
popa
dec
ljmp
inc
fmul
jp
pusha
std
mov
sbb
inc
cld
fwait
mov
shr
xchg
in
or
in
loop
icebp
lods
outsb
int
loope
xor
mov
jns
rclb
fidivrl
lea
dec
sub
shl
scas
pop
pop
stc
dec
jp
mov
lahf
daa
out
jne
mov
leave
push
fisubl
sbb
sub
mov
jge
lea
jae
lds
hlt
inc
push
mov
cmp
sarb
lds
xchg
and
mull
jmp
loopne
pop
cwtl
mov
scas
stos
out
frstor
nop
daa
push
pop
lods
mov
pusha
fistpl
or
xchg
fnstcw
leave
cmp
lcall
cmp
fwait
sahf
call
sub
xor
inc
shrb
inc
and
push
mov
and
cmp
divl
and
rcrb
loope
lcall
fwait
test
insl
dec
pop
inc
stc
daa
jae
sbb
addb
adc
xchg
cs
mov
xchg
inc
xchg
mov
ss
fs
mov
cmp
aad
push
pop
mov
or
mov
xchg
jle
fwait
movsl
xor
pop
lret
add
cld
imul
ss
decl
shll
shll
leave
pop
popa
inc
sbb
push
insl
test
jmp
or
and
jne
jne
add
fmul
mov
push
and
xchg
push
and
loope
sub
push
mov
das
inc
mov
push
cltd
mov
popf
mov
jno
sbb
push
xlat
lcall
outsb
les
xorl
mov
jg
jge
add
loop
or
sbb
pop
and
inc
shlb
mov
out
adc
mov
subl
pusha
pop
test
test
push
jne
cld
insl
mov
addb
insb
cmpl
xchg
loope
cmc
mov
sbb
add
bnd
jae
xchg
clc
mov
popf
das
add
mov
cmp
icebp
xchg
cmp
sbb
outsb
aas
dec
gs
xchg
add
mov
xchg
stos
andb
hlt
aaa
outsl
sahf
inc
hlt
popa
pop
pushf
and
scas
in
inc
jle
aaa
jg
jge
mov
mov
ds
loopne
aas
in
pop
test
cmpsb
sbb
pusha
xor
in
sub
dec
jo
sbb
dec
inc
arpl
xchg
add
mov
push
icebp
pop
pop
scas
cmc
mov
cwtl
push
sub
dec
out
adc
icebp
ds
inc
jnp
shrb
xchg
xor
xor
push
or
push
test
dec
aas
out
and
imul
fcmovnbe
psubsw
pop
fcmovnu
fxch
xor
nop
push
add
push
pop
enter
lds
and
sbb
repz
cmp
rcrb
mov
cmp
push
pop
jecxz
adc
inc
xchg
fcmovne
ss
out
cmpb
into
and
xchg
add
ss
stc
jb
xchg
mov
int
mov
add
sbb
test
clc
cmc
ret
lds
pop
into
sbb
pop
or
jmp
xor
fcompl
dec
imul
mov
shll
and
sub
mov
and
pop
into
test
lret
mov
and
fwait
inc
imul
or
push
stos
jbe
cs
adc
fs
mov
inc
into
out
out
cmp
loopne
mov
mov
mov
es
xlat
lods
pop
shll
pop
push
mov
mov
sub
sub
cmc
xor
jnp
sarl
pop
mov
movswl
into
imulb
pop
shll
repz
xchg
fwait
push
jmp
imul
sbbl
mov
int3
adc
sub
cmp
pop
xor
cli
adc
sub
dec
and
mov
sub
mov
inc
mov
test
push
jge
mov
lret
sub
mov
loopne
shrl
mov
jg
int3
shlb
inc
cs
and
push
sbb
pop
cli
sbb
xchg
pop
lods
xchg
push
pop
mov
sbb
sarb
outsl
push
mov
xor
into
adc
imul
sub
jne
aas
mov
in
push
test
pop
pop
lods
adc
ss
push
push
cs
push
dec
shlb
and
jae
adc
ljmp
cmp
xor
pushf
inc
aaa
dec
or
or
pop
sbb
ret
push
fcmovnb
inc
and
mov
and
orl
test
test
je
das
dec
ds
loope
and
sub
push
jl
inc
gs
mov
arpl
xchg
cmp
imul
pop
jp
xchg
mov
dec
inc
xchg
lods
pop
out
les
mov
test
es
add
sbb
inc
cs
mov
in
lret
xchg
push
stos
lods
mov
call
adc
mov
cmpsl
xor
mov
add
pop
daa
repnz
dec
mov
adcl
les
dec
rclb
fmul
sbb
movsl
dec
cld
sub
gs
pushaw
repnz
call
enter
dec
jnp
fldl
dec
push
data16
scas
lods
inc
scas
std
divb
dec
add
fmuls
sbb
test
pop
nop
pop
inc
lahf
int
xchg
js
shlb
pop
pop
or
andb
imul
movsl
fimull
cltd
jbe
jbe
stc
mov
into
roll
dec
arpl
xchg
mov
ret
or
lock
push
sahf
or
fadds
inc
cs
dec
mov
inc
push
sahf
bound
lcall
jp
sbb
jbe
lea
cmp
xchg
mov
cmp
js
pusha
enter
xor
jno
fnstsw
pop
adc
push
sbb
aas
jmp
dec
cmp
xchg
stos
clc
or
js
in
sub
add
rcr
cmpsb
icebp
rcrl
jle
push
jecxz
jno
mov
mov
xchg
loop
out
jae
stos
insb
push
js
pop
and
push
pop
out
dec
inc
enter
sbb
dec
dec
jp
pushf
loope
mov
adc
ja
mov
loopne
data16
adc
add
and
stos
inc
sbb
add
rcl
pop
mov
test
lret
inc
movsl
xlat
push
and
lret
dec
xchg
bound
int
adc
mov
daa
pusha
clc
out
jae
cmp
mov
out
cmp
add
push
fists
test
lea
shrb
int3
xor
aaa
dec
pop
pop
aas
jl
imul
or
mov
outsl
sub
outsl
and
jmp
je
leave
loopne
and
scas
jbe
call
mov
cmp
pop
adc
fmul
dec
outsb
roll
fcoms
in
push
das
imul
xor
cwtl
dec
push
shrb
mov
aaa
orl
mov
lcall
dec
dec
mov
lret
rorl
jecxz
shrb
inc
hlt
or
mov
jmp
ret
xor
mov
ljmp
inc
jge
pop
js
inc
jl
sub
in
fwait
add
stos
mov
xor
in
out
inc
mov
dec
mov
inc
or
mov
xor
out
mov
dec
inc
xchg
xor
xchg
jp
fsubrp
pop
pop
mov
lret
add
dec
ljmp
shl
inc
hlt
and
stc
repnz
add
imul
jnp
ficompl
lea
in
push
xchg
rorl
add
in
ret
aas
out
push
pop
xor
nop
mov
rcr
lods
add
cmp
out
stos
push
outsl
lock
xor
or
pop
and
scas
cmc
cmp
xor
out
and
xor
and
inc
mov
mov
lods
and
ret
mov
call
inc
cltd
jmp
fsubs
inc
jno
fadd
jp
xchg
mov
ja
inc
sub
sub
jmp
cmp
xchg
fdivs
mov
scas
dec
xchg
andl
movb
cli
filds
xor
add
in
testl
push
lds
push
xor
jmp
fucomip
xchg
push
hlt
inc
aad
jle
repz
jno
mov
icebp
pop
push
cld
js
ret
add
cmp
in
jmp
loop
adc
sub
jae
mov
fistl
pop
cmc
push
out
loope
clc
orb
cmp
lods
inc
aam
insl
outsl
sbb
out
test
ss
push
outsb
push
xor
in
jecxz
fs
push
inc
inc
xor
push
sbb
inc
in
push
nop
xlat
push
in
ret
test
mov
dec
cmp
pop
rcrl
jb
inc
ret
arpl
clc
stos
xor
iret
repnz
sub
cmc
add
cli
aaa
movb
lret
rcr
clc
js
xor
mov
and
js
xor
mov
pop
mov
push
stc
mov
cld
mov
ret
push
inc
hlt
in
mov
andb
cs
fwait
movsb
or
mov
jb
lahf
xchg
xchg
mov
imul
jmp
icebp
arpl
sbb
in
pop
pop
jge
cs
jp
mov
arpl
ret
xchg
sub
icebp
test
push
cmp
fisttpll
lret
jg
push
jmp
test
jb
dec
xadd
jp
xor
adc
jae
daa
inc
test
jg
add
mov
dec
mov
int
or
xor
adc
push
loop
loope
adc
xor
pop
dec
jl
lea
popf
jne
subb
mov
adc
rcll
mov
lock
add
mov
stos
fisubrs
imul
jno
fisubrl
fsts
sbb
xor
pop
pushf
fs
dec
scas
loopne
lret
mov
jge
add
fdivr
pop
lods
sbb
das
jb
push
sub
mov
fstps
mov
mov
adc
inc
arpl
repnz
and
jb
mov
mov
cmp
adc
std
pop
mov
xchg
nop
sbb
xchg
push
mov
sbb
mov
and
pop
sti
jne
mov
cwtl
xchg
jnp
call
shlb
inc
jno
cwtl
mov
lods
cmpsb
aaa
roll
repnz
xchg
movsb
and
jb
imull
f2xm1
nop
push
lods
sub
pop
outsl
sub
and
jecxz,pn
jae
out
mov
std
pop
and
mov
mov
add
cs
mov
int3
pop
add
orl
sbb
push
adc
pusha
mov
movsl
popf
mov
mov
push
fcomip
xchg
into
dec
cwtl
push
or
repz
aam
sbb
mul
fs
into
or
test
std
push
mov
frstor
xor
mov
and
mov
jecxz
pushf
and
int
mov
les
in
cmp
xchg
dec
cmc
gs
inc
loop
jno
inc
add
mov
ljmp
aaa
test
sbb
mov
push
push
or
in
daa
shrb
aas
es
cmc
shlb
push
popa
mov
mov
push
inc
or
lods
cwtl
pop
adc
adc
inc
adc
xchg
inc
inc
sarb
mov
cmp
cmp
add
or
popa
ljmp
les
mov
xchg
cwtl
icebp
mov
shl
mov
ds
sahf
mov
aaa
sbb
sbb
cli
adc
stos
xchg
aaa
dec
ret
pop
and
pop
jae
adc
pop
fwait
sbb
inc
rcl
aad
mov
loope
fwait
clc
xchg
adc
adc
stos
jle
gs
lret
orb
jno
push
mov
fidivrl
sub
out
cmpsl
push
jbe
mov
fmuls
mov
fcomps
gs
push
movsl
cmp
je
mov
or
iret
in
mov
jo
mov
or
test
mov
sbb
sbb
or
xor
into
cmpsb
sarb
pusha
sub
adc
mov
jbe
repz
cmpl
pop
arpl
lahf
andb
dec
out
jbe
xchg
sub
divl
jmp
lock
imul
xchg
hlt
mov
insb
push
lock
mov
xchg
shlb
sbb
inc
pop
sbb
pop
add
push
jmp
data16
dec
stc
stc
jmp
add
jle
ds
and
rcrb
scas
leave
and
xchg
pop
mov
stc
popf
add
repz
imul
jb
or
cmp
test
or
sbb
xchg
test
lcall
pop
movsb
rorl
test
lcall
push
sub
lea
fs
daa
push
dec
push
xorl
fbstp
dec
negl
inc
pop
push
mov
cmp
sbb
inc
or
mov
xor
or
mov
inc
andb
jg
fistpl
pop
sub
pop
into
arpl
dec
xor
clc
cmpsb
bswap
lds
movsb
add
testl
jmp
inc
mov
push
movl
mov
mov
std
js
add
push
les
in
iret
xlat
rclb
sbb
mov
add
lcall
jae
ret
out
sub
push
push
lods
sbb
cmpsl
or
imul
dec
mov
mov
imul
out
shr
ucomiss
or
xchg
loopne
push
in
ficoms
mov
jecxz
sbb
cld
push
cmp
cld
cmp
inc
mov
cli
cmc
dec
sahf
pop
popf
cmp
mov
addr16
adc
cmp
setp
sbb
leave
xor
pop
jp
adc
subl
adc
add
daa
push
xlat
roll
push
mov
xchg
repnz
cmp
xchg
adc
fsubrl
test
loop
shlb
lods
mov
push
fwait
lock
and
ljmp
hlt
dec
xor
ljmp
insb
arpl
sbb
cmpsb
inc
jmp
jmp
int3
xchg
jg
or
jnp
movsl
aas
movsb
cld
xchg
inc
lret
pop
add
enter
icebp
into
shl
add
push
dec
mov
jns
loop
fsubr
pusha
inc
sub
pop
cmp
adc
data16
sbbl
movsl
aas
cmp
icebp
xor
mov
arpl
sub
xchg
sbb
xor
xor
adc
pusha
push
mov
mov
mov
ficoms
xor
icebp
out
add
add
in
inc
js
or
adc
aaa
shrd
dec
bound
and
fistl
push
push
pop
inc
cmp
push
lods
sbb
mov
andl
aaa
sbb
adc
adc
js
adc
push
inc
dec
ljmp
adc
jno
pop
inc
out
adc
repnz
add
mov
movsl
pop
mov
cld
lcall
fdiv
les
lret
xor
jnp
es
andl
adc
lods
aad
sbb
leave
and
mov
nop
pop
loop
aam
imull
out
out
cmpl
pop
ja
pusha
cmp
nop
xor
xor
jnp
jnp
pop
add
lret
sahf
movsb
popa
sbb
push
std
push
cs
jle
dec
mov
mov
pop
xor
dec
test
adc
sti
cli
call
mov
jb
nop
int
cmc
adc
xor
mov
jns
push
loop
jecxz
in
pop
sub
nop
mov
pop
repnz
imul
cmp
add
fs
lods
sbb
ret
add
pop
xorl
mov
add
stos
repnz
insb
cmp
mov
stc
dec
adc
ret
push
stc
ret
dec
movsl
inc
lret
call
push
sbb
ss
scas
clc
arpl
sbb
fsubrs
jmp
xchg
inc
pop
xor
jo
push
testl
stc
jl
pop
jns
xor
cs
xchg
imul
adc
loope
push
scas
add
push
ret
outsb
mov
leave
icebp
scas
jb
push
pop
mov
xor
js
xchg
or
dec
mov
pop
jl
mov
or
add
push
rol
hlt
or
jae
xchg
jg
sbb
push
je
jae
xchg
sbb
aas
push
mov
pop
xchg
jmp
jnp
clc
mov
mov
sbb
xchg
sysexit
ficoms
insb
or
aam
sub
clc
outsb
data16
sub
mov
rclb
xchg
mov
sbb
jp
sti
decl
jp
lahf
jo
mov
and
ljmp
gs
popf
test
jns
nop
int
loopne
sub
and
inc
push
dec
inc
ret
and
sub
in
push
adc
add
inc
push
add
pop
mov
sub
int
mov
push
pop
cmp
nop
fwait
xchg
in
adc
mov
cmpsb
mov
push
cmp
nop
xor
xor
out
dec
aaa
sahf
icebp
add
inc
imul
sub
or
ds
in
inc
cmp
inc
add
mov
mov
rcrb
sub
and
mov
or
jo
mov
fisubrs
insl
cmp
dec
mov
mov
xor
scas
add
xlat
mov
sbb
loope
inc
ja
and
pop
fsubs
ficoml
xchg
rcl
leave
xor
ljmp
push
popf
movsb
stc
push
cmp
adcl
clc
pop
enter
in
stc
ja
mov
xchg
and
sub
push
cltd
ja
pop
mov
ljmp
stos
mov
fimull
dec
out
cmp
lahf
xor
jbe
mov
shrb
shrb
sbb
pusha
xor
cmp
lcall
sbb
icebp
push
dec
mov
or
lea
mov
lret
jo
push
in
pop
mov
jo
mov
mov
mov
jl
mov
sub
or
test
in
test
test
jecxz
mov
jecxz
addr16
push
insb
add
cmp
call
stc
fsub
jo
pop
inc
mov
push
pushf
clc
rorb
popf
jae
inc
mov
sbb
mov
popa
iret
int
rorl
adc
out
xchg
stc
inc
lahf
sbb
push
sub
lcall
adc
pop
cli
or
and
shl
add
xor
mov
mov
enter
push
or
test
inc
jb
int
dec
das
pop
scas
dec
loope
outsl
adc
loope
xor
pop
cmp
or
aad
std
jp
xor
cmp
mov
imul
movsl
sbb
jp
mov
insb
adc
stos
mov
sub
lock
push
xchg
xchg
sbb
negl
out
mov
out
ljmp
mov
ficomps
sub
inc
mov
loope
test
hlt
push
iret
lcall
push
cs
mov
pop
jecxz
mov
sub
icebp
lods
fwait
jg
adc
adc
adc
popf
mov
jle
mov
xor
mov
hlt
sub
push
int
xor
jge
pop
es
and
sbb
add
jae
aam
and
movsb
inc
bound
ja
xchg
cs
xor
cmp
leave
cmpsb
cmp
into
cmp
mov
dec
pop
insb
insl
push
in
jecxz
cmpsl
leave
mov
xor
pushf
nop
xchg
xchg
clc
add
push
and
outsl
pop
scas
repz
push
aad
and
pop
push
shl
stc
lock
js
add
pop
sbb
mov
daa
jp
cmp
xchg
insl
das
sbb
mov
adc
jp
fisttpl
pop
sbb
xchg
xchg
xchg
movsw
adc
xchg
ss
pop
popa
pushf
cmp
gs
push
aad
jg
push
fdivrs
inc
push
adc
lea
daa
mov
dec
inc
push
repnz
outsl
sbb
jg
and
cltd
movsb
push
test
dec
and
lret
ret
xchg
pmaxsw
inc
jge
jmp
adc
mov
adc
loop
mov
push
mov
jne
add
and
cmp
mov
adc
jo
subb
pop
xor
push
add
mov
idivl
mov
mov
cmc
in
xchg
rcl
andl
sbb
xchg
sbb
and
jl
out
xchg
stc
fstpt
push
dec
xlat
push
sbb
in
jo
das
cmp
lds
inc
pushl
dec
int
and
test
inc
dec
or
cmp
arpl
mov
xchg
data16
mov
ss
fidivs
jb
fimuls
fcompl
sbb
add
shrb
xchg
adcl
xor
dec
xor
xor
ss
xor
xor
je
lea
jb
or
push
jle
shl
mov
fsubl
incl
sub
mov
xor
jo
dec
mov
pop
add
rol
adc
adc
jecxz
add
daa
pop
fistps
jae
jnp
cmp
pop
dec
mov
xor
stc
cmp
nop
sub
les
mov
fs
or
mov
cmp
shr
in
out
dec
popf
push
pop
xlat
clc
dec
in
and
stos
jmp
xor
jle
pop
enter
pop
pop
mov
sahf
js
faddl
sub
xor
adc
repz
sahf
pop
cwtl
or
push
pop
adc
push
repz
jb
xchg
jne
mov
dec
push
inc
xor
pop
loop
and
int3
shrl
push
add
cmp
cmp
push
mov
ficompl
nop
jns
and
sub
ss
mov
push
mov
pop
stc
lea
inc
stc
mov
cmpsb
dec
push
mov
mov
rorb
adc
mov
out
loope
outsb
fstpt
sub
in
aas
inc
and
cmp
cmp
insb
xchg
in
addl
inc
popf
add
cltd
ja
jns
cmpsl
je
mov
mov
adc
adc
mov
fildll
call
loope
add
mov
je
sbb
pop
and
ret
jmp
lcall
and
lret
movsb
repnz
insl
and
repnz
xchg
jno
loop
adc
push
xchg
or
jg
enter
fidivs
mov
xchg
cwtl
pop
mov
imul
push
jg
jg
adc
das
or
out
mov
cli
push
insl
mov
jbe,pn
jo
dec
cmpsb
in
aas
enter
adc
add
xchg
xor
or
sub
xor
int
jmp
aam
xlat
add
int
int3
or
fnstenv
inc
pop
les
mov
aad
cltd
test
jbe
inc
push
in
sub
sub
and
addr16
das
lea
ror
orl
pop
je
mov
mov
pop
or
fistps
pop
adc
popl
scas
jmp
push
add
mov
out
daa
pop
fmull
xchg
cld
xorb
pop
mov
sub
add
cltd
xor
pushf
test
fwait
push
das
das
jmp
sub
test
or
int
gs
push
jg
jne
mov
stc
push
mov
imul
jecxz
cmp
adc
arpl
cwtl
ds
aam
or
add
adc
loop
scas
cltd
sbb
loop
jno
push
jp
mov
or
aas
loope
out
outsb
or
ficoms
mov
xchg
mov
inc
push
and
es
dec
xchg
pop
in
imul
or
lahf
std
ret
fbld
mov
insb
movsl
and
xor
mov
mov
pop
pop
fdivrs
xchg
mov
mov
xchg
imul
jg
scas
int
xor
jl
sub
mov
notb
dec
and
in
pop
rcl
enter
xor
mov
adc
mov
sbb
push
test
aas
xor
jns
test
add
or
jle
out
pop
dec
and
mov
dec
jmp
push
repz
jmp
subl
jns
push
lods
shrl
xchg
mov
cmp
rcr
mov
hlt
es
cli
iret
sub
data16
xchg
pop
and
xchg
rcl
jns
cli
fsubs
in
push
fidivs
aad
or
push
lock
out
cmp
dec
sahf
incb
js
xchg
and
outsb
push
cmpsl
add
fisubrl
sub
xlat
arpl
in
outsl
popa
or
iret
dec
add
mov
xorb
xor
mov
jl
push
mov
data16
repz
mov
leave
adc
push
pop
enter
xorb
cmpsb
cmpl
mov
insl
iret
es
push
push
inc
sahf
lods
sar
iret
pop
inc
es
call
xor
iret
mov
or
xor
stos
js
imul
push
jge
mov
mov
add
es
dec
push
orb
jnp
cld
pop
push
push
addl
stos
cwtl
pop
lret
cwtl
loopne
les
mov
adc
das
xchg
imul
repnz
int
sbb
mov
pop
xchg
daa
loop
cmp
add
sub
push
xorl
push
sahf
cmp
imul
aas
movsl
dec
int3
jb
mov
shrb
loopne
jnp
xor
pop
outsb
iret
lods
out
daa
fmull
test
nop
out
or
sbb
add
out
sbb
mov
nop
sarb
or
add
sbb
mov
and
loope
lret
push
and
bswap
in
shrl
repz
adc
dec
test
test
pop
pop
jne
sbb
adc
jno
lret
mov
lcall
dec
sub
mov
pop
fcomps
sub
sub
cmc
cld
push
mov
add
inc
mov
xor
int3
iret
stc
mov
sti
enter
hlt
inc
add
jmp
mov
inc
inc
sarb
mov
insl
inc
fs
sub
cld
cmp
and
ret
and
out
mov
int
dec
pusha
push
loopne
frstor
jo
lcall
loop
add
scas
jmp
lods
mov
or
cmp
jmp
out
cmp
aad
iret
pop
int
test
xor
or
cmp
fnstsw
jge
shll
ret
leave
xor
int3
or
or
xor
sbb
pop
adc
jp
in
lock
sbb
jp
pop
aas
mov
adc
push
jnp
jg
shll
add
sbb
insl
sub
sbb
jp
mov
in
xchg
lahf
sbb
xor
insb
sbb
rcr
sub
lret
je
add
push
sti
pop
aad
cmp
xorl
popa
push
pushf
inc
sub
sbb
pop
pusha
mov
dec
mov
jne
or
and
leave
cmpsl
push
push
pop
movb
jnp
jg
jnp
mov
jo
add
push
bnd
adc
xor
pop
mov
push
adc
sub
jbe
jnp
xchg
jg
rorl
les
mov
mov
std
aad
mov
sahf
popa
popa
into
jnp
dec
inc
push
lcall
int3
dec
jl
outsb
repz
fstl
fwait
fs
shl
arpl
add
aad
out
imul
lahf
sub
mov
or
or
clc
test
sub
pop
inc
jmp
rorl
aam
cmpsb
into
lds
inc
in
sbb
xchg
lret
mov
push
fmull
ret
int3
repz
adc
add
jmp
enter
or
lea
aas
sbb
push
int
cltd
call
adc
xchg
jle
sarb
xor
mov
mov
jg
punpckhdq
mov
jp
xor
arpl
mov
out
push
jg
dec
movsl
and
addr16
or
pop
cmp
add
clc
iret
mov
sub
repz
dec
or
sarl
lahf
push
or
and
push
sbb
inc
cmp
dec
jge
add
dec
pop
mov
xchg
lds
mov
fs
mov
mov
xor
rcl
test
xor
jecxz
cmc
aaa
jmp
test
mov
filds
shll
lahf
dec
inc
popf
inc
test
jb
pop
lock
adc
jg
mov
jp
inc
add
int3
sub
scas
aas
lret
and
popa
mov
sbb
mov
pop
mov
dec
ret
jle
sub
push
adc
xchg
sbb
repz
sub
inc
sbb
xchg
daa
mov
fimuls
mov
and
jno
adc
push
mov
in
cli
cmp
jne
stos
push
fcompl
inc
and
sub
test
dec
adc
sbb
ja
mov
add
aas
negl
test
loop
mov
inc
pop
xchg
dec
and
adc
int
and
fistl
inc
jbe
insb
push
aaa
cmp
adc
call
cld
push
mov
outsl
movsl
outsb
push
addb
call
scas
fnsave
sub
sbb
and
repnz
in
mov
icebp
sti
add
mov
push
mov
cmp
dec
push
sub
pop
fs
or
xor
aad
pop
out
sub
cmp
mov
std
adc
lret
sahf
pop
push
push
pop
inc
and
add
subb
int
mov
inc
dec
in
jo
inc
outsb
jns
aas
inc
lods
subl
ja
cmc
cmp
push
jb
lea
rolb
cmpsl
jo
hlt
fmull
dec
clc
cmp
pop
xchg
addb
dec
xor
pop
cmp
shlb
ja
fwait
imul
loopne
cld
out
xchg
and
fcmove
ror
lods
mov
push
test
lods
mov
repz
ret
enter
andl
in
jno
jge
je
mov
add
or
mov
and
loop
push
out
movsl
rorb
adc
test
dec
xchg
sub
or
xor
cmovns
dec
pushf
sbb
jle
push
pop
shlb
xor
xchg
imul
mov
sub
stos
mov
lea
inc
jg
mov
nop
push
push
xchg
movb
cltd
arpl
dec
mov
repnz
out
jo
clc
dec
cmp
aam
rcll
push
sub
jbe
inc
push
or
ficomps
cld
lfs
shufps
sub
mov
cmp
into
add
repz
mov
xor
ja
rorb
inc
mov
add
gs
aad
arpl
lods
mov
pop
jb
or
nop
lock
push
push
js
mov
sbb
popa
fists
lds
outsb
xchg
dec
jo
jecxz
jp
push
dec
lcall
and
sbbb
xchg
dec
mov
sbb
cmp
mov
les
jbe
roll
loope
enter
jmp
or
dec
pop
fidivs
jo
xchg
sarb
out
cmp
lea
mov
mov
sub
or
std
push
fsts
adc
push
mov
or
shll
pop
adc
add
nop
sbb
ds
fldl
dec
push
sub
mov
aaa
cli
shlb
lods
lods
shl
jg
push
add
mov
js
push
mov
test
adcl
pop
sbb
mov
pop
sub
inc
mov
push
loop
enter
ret
sti
cli
add
rclb
repnz
lock
push
push
inc
aam
sub
pop
jp
mov
mov
call
popf
push
push
and
jle
add
jle
shrl
fidivrl
sbbb
push
pop
jns
scas
in
inc
cltd
dec
rcr
ficoms
jl
mov
repz
and
mov
or
jmp
mov
adc
xchg
mov
xchg
mov
out
loop
jg
cmp
cmpsb
push
mov
dec
mov
out
cld
add
test
push
scas
xchg
cmp
outsl
mov
lods
hlt
ja
xor
and
mov
ja
lds
inc
xor
test
push
pusha
inc
inc
adc
inc
bound
cs
xor
xor
xlat
and
lret
fwait
jb
cli
dec
push
sub
in
popf
in
and
push
push
je
inc
jecxz
jno
lcall
xchg
mov
pop
mov
xor
into
insb
dec
test
ret
lahf
xor
and
push
xchg
inc
mov
or
je
test
std
and
mov
call
xor
sbb
int3
loop
into
divl
and
pop
xlat
jae
negl
jns
or
js
mov
sbb
orl
xlat
es
imul
xor
jns
sarb
imul
mov
dec
xchg
sti
gs
sbb
testl
ret
mov
lret
mov
mov
cmp
int
jo
pop
pop
in
test
rcl
stc
inc
jo
inc
dec
inc
mov
xchg
and
repz
fldl
arpl
les
push
rclb
push
lods
fcmovnbe
movsl
lock
push
xchg
test
mov
mov
mov
cli
pop
ds
aaa
push
dec
inc
cmpsl
leave
es
das
subl
into
xchg
aam
mov
dec
push
popa
fimuls
mov
repz
jae
movsl
xchg
pop
and
and
dec
jbe
cmp
insl
mov
and
aaa
inc
cmp
cwtl
lret
mov
push
mov
mov
mov
arpl
or
stos
push
xor
inc
rorb
hlt
mov
pop
mov
sub
push
xor
lds
mov
cli
pushl
or
dec
fwait
jmp
mov
fisubrs
push
jb
aaa
dec
sub
or
lds
xor
xchg
out
lcall
push
push
shrl
insb
dec
je
adc
adc
js
repnz
xlat
jmp
cmp
jae
mov
jne
test
push
jmp
aad
arpl
mov
push
int
add
fcomps
pop
add
and
cmp
cmp
mov
scas
jecxz
or
adc
fisttpl
pop
add
lea
xchg
xlat
orl
mov
fwait
cwtl
sbb
sahf
push
mov
mov
xchg
sub
xor
inc
adc
aam
mov
out
mov
inc
loope
mov
repz
dec
call
mov
push
xlat
in
xor
icebp
js
sub
pop
sub
jne
jg
ja
pop
mov
xlat
sbb
pop
stc
sub
pop
sti
adc
fsts
push
pop
negb
and
outsb
dec
lds
leave
mov
stos
mov
cmpb
div
testl
dec
ret
ficoml
and
lock
int3
sti
popa
jno
orl
mov
mov
adc
xor
incb
xor
out
inc
jb
push
test
jns
xchg
jno
cmp
pop
pop
sti
leave
adc
clc
cltd
testb
cltd
push
out
fldcw
into
test
lret
xlat
adc
push
adc
test
mov
rcr
push
cmpsl
loop
les
pop
aam
mov
cmp
imul
int3
lcall
sbb
dec
cwtl
call
mov
sub
shrb
aas
lods
mov
xlat
roll
gs
cmpl
aas
jno
mov
call
inc
inc
pop
js
or
orb
push
and
fcomps
add
es
or
xor
add
aam
popf
xchg
and
hlt
data16
add
or
mov
into
jno
xchg
in
out
pop
divb
mov
movzwl
cmp
jae
mov
xchg
popf
repnz
and
ret
cmpsb
push
or
repnz
mov
jp,pt
addl
and
rorl
test
ret
or
cmpsl
cmc
mov
xchg
shl
mov
xchg
mov
dec
fsubrl
add
or
test
pusha
in
inc
mov
fisttps
lahf
and
push
jg
incl
data16
xchg
pop
repz
xor
lea
push
out
lcall
loop
inc
jle
dec
sahf
insl
pusha
mov
sub
mov
lret
jg
fistpll
xor
roll
push
sbb
mov
loope
pop
je
lods
xchg
and
fcomip
jns
sarl
lret
cmp
lea
fwait
jbe
push
jb
dec
mov
scas
sbb
adc
jbe
scas
sti
mov
mov
stos
mov
pushl
or
xchg
xor
in
push
or
xchg
stos
adc
xor
filds
add
push
cmp
xor
sub
sbb
jo
sub
cwtl
std
cs
dec
sub
test
mov
out
pop
adc
jecxz
ja
push
fdivrl
cs
add
xor
xlat
jmp
jp
mov
call
mov
fs
rcl
push
mov
inc
sbb
lret
lret
fwait
cmp
scas
bound
cli
or
lret
test
int
mov
and
or
jb
into
in
lods
sub
add
jno
outsl
out
js
jno
adc
test
je
and
xor
pop
push
rcrb
addr16
jns
scas
movsl
and
test
icebp
jae
shrl
mov
cmc
fadds
xchg
jg
cmp
pop
adc
add
jg
lods
cmp
cmc
sbb
add
push
dec
or
xorl
and
mov
adc
dec
pop
and
xor
jne
lods
sub
outsb
ss
in
ret
arpl
mov
cli
push
jecxz
mov
cs
jp
incl
push
in
xchg
das
ds
fildl
jl
std
adc
gs
push
jnp
sub
inc
ret
mov
subl
outsb
pop
xchg
aaa
jae
push
pop
pop
aad
adc
push
lods
jnp
int
in
mov
dec
dec
in
sbb
test
ret
pop
stos
bound
rcr
cmpl
js
neg
push
sub
testl
mov
and
xchg
push
imul
mov
or
xchg
inc
and
pop
es
adc
jp
fnstsw
scas
pop
loopne
imul
add
sbb
and
stos
test
stos
sub
push
enter
movsl
jno
adc
add
mov
pop
xor
lods
out
adc
sbb
pop
cmp
sub
ljmp
jae
ljmp
and
push
mov
aaa
xor
cli
shlb
add
in
ss
rolb
push
jns
mov
and
mov
mov
mov
shl
dec
fcomip
add
testl
clc
or
jmp
ret
mov
dec
repnz
shl
cmp
and
outsl
aam
jecxz
repnz
loopne
cld
jl
mov
repz
add
and
pop
jecxz
imul
jle
clc
mov
rorb
div
sbb
in
outsl
push
push
xchg
push
inc
inc
ret
mov
sub
loopne
test
div
aaa
out
inc
lock
inc
aas
inc
in
aaa
je
mov
into
push
call
inc
arpl
adc
std
pop
imul
fwait
push
sbb
or
ret
push
ja
or
xor
pusha
jnp
fisttpll
inc
in
cmp
sbb
mov
loop
pop
inc
movsb
xchg
jmp
mov
in
and
inc
pop
inc
decl
pushl
nop
arpl
pop
call
ljmp
fisttps
mov
ss
jg
scas
shll
jno
daa
pushl
jl
icebp
mov
jns
and
and
pop
fs
repz
popa
add
sbb
mov
inc
and
movsl
xchg
test
jge
xchg
sar
lret
rol
stos
push
out
push
sub
sbb
jle
or
sub
lret
sti
cmp
loopne
je
pop
daa
leave
sub
das
mov
cwtl
xor
stos
mov
or
fsubl
shl
lahf
movb
popa
sbb
push
or
jbe
jecxz
sbb
and
call
xchg
aaa
xor
stc
sbb
add
push
int3
pop
pop
clc
bnd
outsl
jb
scas
cmpsb
in
lcall
in
push
pop
fs
sbb
adc
inc
push
mov
rcrl
jg
ja
jne
sub
xchg
mov
cltd
dec
fisubs
imul
cmc
mov
popf
mov
lock
in
mov
ds
mov
ret
add
rcll
mov
nop
sbb
adc
mov
xchg
lock
out
add
jne
jge
inc
lret
movsl
jne
inc
sbb
mov
test
mov
sbb
and
xlat
adc
outsl
rcll
cmp
xor
test
popa
les
cltd
popl
lock
je
xchg
add
xchg
xor
fidivs
inc
jmp
jle
jbe
jge
mov
stc
outsb
data16
scas
jns
dec
adc
lret
pop
sub
aad
cs
pop
popf
popaw
sub
adc
insb
xchg
push
bound
pop
ds
xchg
outsb
add
aad
mov
in
inc
push
movb
push
lcall
lret
cmpsl
jmp
mov
mov
xor
pop
pushf
jns
std
lret
jb
into
cwtl
lds
mov
xchg
in
subl
xchg
add
call
cmpsl
jo
jo
jmp
or
push
xchg
fnstsw
cs
mov
in
lahf
ret
fidivs
int
ljmp
jg
push
shll
pop
cli
inc
push
mov
pop
adc
repnz
scas
fsubs
cmpsb
mov
daa
out
jl
sarl
pusha
add
aas
mov
stos
and
popa
cmp
mov
int3
lds
or
in
push
negb
dec
fnstcw
test
mov
imul
addr16
add
fsts
movsl
incb
ss
gs
jp
das
pop
push
cmp
sbb
sub
mul
mov
pop
in
andb
mov
jbe
mov
pop
jmp
in
mov
imul
inc
or
sub
aam
sub
sti
arpl
mov
jmp
mov
xchg
jne
sub
rcrb
shr
loopne
lea
enter
sbb
lods
dec
gs
je
pop
clc
sub
lcall
popa
push
xor
cmp
and
cmp
scas
fnstcw
cli
leave
xor
xor
adc
mov
or
mov
pop
push
add
sbb
push
xor
insl
push
xchg
in
cmp
pop
arpl
adc
push
movsb
rorl
mov
stos
or
xchg
arpl
daa
push
ss
xlat
repnz
jl
int3
ret
loope
mov
arpl
aam
ret
fcmovu
in
pop
cmp
ljmp
xlat
pop
pushf
or
pop
xlat
roll
mov
in
push
arpl
jl
mov
sub
mov
adc
push
jae
xor
stc
clc
subb
lods
mov
fidivrs
repnz
cmp
aad
jge
int3
mov
and
insl
xor
xchg
cld
movsb
stos
mov
cmp
cltd
pop
aaa
cltd
adc
dec
xchg
push
mov
mov
jmp
mov
das
fsubs
push
hlt
push
adc
cmp
dec
fsts
aad
jnp
daa
dec
or
test
test
jne
pop
in
push
aaa
sub
sbb
mov
fsubs
test
popf
aam
jns
scas
iret
fnstcw
inc
aas
and
incl
repz
mov
lret
or
push
jmp
lret
lret
jbe
sbb
fisubrs
outsl
or
or
mov
sub
cltd
push
and
sahf
or
pop
clc
jnp
in
xlat
xchg
push
inc
push
jmp
mov
popf
rcr
dec
pusha
jge
jl
add
xor
loope
test
mov
sbb
or
bound
mov
js
mov
pop
popa
or
dec
out
insl
fbld
jmp
data16
mov
incl
add
js
xor
std
hlt
jp
cmp
xchg
xor
mov
adc
xchg
fistpll
pop
test
inc
scas
mov
decb
sbb
bound
pop
cmc
in
sbb
mov
loop
xor
test
lods
mov
push
xchg
out
mov
into
out
lods
loop
out
sub
and
ret
sbb
popa
and
sub
pop
pop
sbb
xchg
std
cmc
out
inc
adc
inc
adc
mov
jp
js
mov
inc
loop
cli
test
add
xchg
aas
neg
cmp
push
rorb
or
xchg
loop
cld
mov
stos
mov
jle
int
int
mov
or
xchg
int3
dec
div
pop
cmp
mov
out
mov
mov
mov
mov
hlt
and
pop
cwtl
mov
cmp
roll
mov
imull
or
mov
adc
lret
sub
bound
loope
loope
dec
daa
pop
loope
pop
mov
insb
fstpl
pop
sbbl
addr16
into
adc
add
test
scas
or
mov
stos
xchg
sbb
mov
out
ja
negb
pop
ficoms
enter
stos
cltd
push
xchg
fs
push
sub
das
adc
push
ja
cltd
jg
or
loope
loope
aam
jns
stos
in
loopne
cmp
popa
into
sbb
xchg
js
loopne
lock
mov
xor
das
or
pop
outsb
mov
jbe
cmp
leave
jae
loope
cmpsb
std
push
sub
or
mov
push
push
testl
lret
sbb
xchg
pop
and
or
fadd
cmpsb
cmc
add
repz
leave
dec
std
orl
test
jmpw
mov
lcall
mov
pop
lret
popf
loopne
mov
jne
xor
mov
sti
xor
jae
les
mov
insl
into
shl
mov
jl
fmuls
inc
fdivl
adc
outsb
into
stos
add
andb
pcmpeqb
sub
mov
adc
mov
testl
clc
insl
icebp
and
cmp
cmp
pop
loop
xor
stos
push
lds
push
xlat
scas
sub
dec
and
subl
js
push
addr16
push
jbe
lea
stos
mov
lcall
bound
das
dec
clc
rcr
mov
out
bound
std
pushf
push
data16
sub
in
orb
fsubl
sub
adc
sub
mov
ret
notb
and
cmp
lcall
pop
push
movsb
lcall
ret
out
scas
add
jb
clc
insl
xor
out
xor
ja
pop
push
lret
lods
mov
les
arpl
mov
mov
jnp
push
push
out
rorb
cmp
xor
test
or
aad
sub
mov
jp
push
inc
inc
and
dec
clc
rol
lret
cld
mov
faddl
aaa
xor
mov
divb
shlb
pop
cmp
jmp
js
lea
in
push
pop
ret
push
aam
iret
lods
adc
pop
outsb
add
out
call
test
ret
ljmp
roll
pushf
sub
mov
push
dec
sarb
mov
stos
jmp
or
mov
mov
out
push
out
stos
in
cmp
cld
dec
mov
iret
xor
lcall
cmp
mov
test
fiadds
rcll
xchg
divl
pop
sub
jmp
clc
push
mov
aam
mov
cli
dec
sub
sub
scas
lret
orl
jne
pop
mov
push
shl
push
stos
mov
test
iret
mov
mov
sti
lods
adc
leave
or
jb
int3
fwait
hlt
adc
mov
jo
outsl
inc
in
ss
sbb
aam
and
lret
loopne
adc
scas
movsl
xchg
je
test
mov
xor
xor
je
filds
mov
push
pop
outsl
dec
lods
flds
sbb
in
sahf
les
mov
les
ljmp
repz
das
hlt
sub
cmp
jp
xor
mov
or
in
iret
arpl
scas
push
test
in
and
in
xorl
scas
lcall
sub
orl
add
sub
sub
or
xchg
fucomp
clc
jl
sub
add
lea
pop
sbb
adc
cmp
xchg
and
cmp
nop
vpunpckldq
jo
mov
mov
sbb
mov
cmpsl
pushf
xor
cmp
outsb
sub
mov
stc
dec
cmp
pop
imul
in
addr16
in
insb
pop
push
sbb
mov
and
xlat
jle
enter
push
and
xor
push
imul
cli
jnp
icebp
in
sbb
aaa
xor
and
xor
dec
xchg
cmovbe
lcall
push
std
mov
add
jmp
dec
adc
and
es
jmp
popf
fisubrl
xor
call
sbb
mov
mov
aam
pop
mov
cmc
lret
xor
call
add
rcll
lods
or
call
mov
adc
add
out
sbb
xchg
in
mov
sub
mov
fdivl
xchg
call
pop
aam
popf
sub
or
pop
rorb
int3
xor
mov
inc
pop
movsl
cli
aad
lock
loop
xchg
adc
out
imul
mov
mov
clc
cwtl
fildll
mov
lret
mov
pop
stc
sub
mov
cli
and
imul
in
pop
pop
sbb
mov
mov
xorb
inc
movsl
jmp
imul
add
push
rorl
scas
add
mov
push
jp
leave
xchg
out
xchg
sub
lss
sub
xchg
inc
inc
mov
jl
stos
iret
pusha
mov
pushf
repz
xor
int3
in
movsl
sub
in
jns
dec
xor
jno
ret
ds
movsb
dec
and
inc
xor
mov
and
cmp
jmp
push
into
and
loop
daa
cmp
xchg
mov
xchg
add
and
jns
outsl
xlat
lret
mov
mov
cli
std
adc
push
inc
cmpsb
ljmp
mov
lret
and
and
add
rclb
call
jl
and
imul
icebp
mov
test
in
or
ja
fs
sub
dec
add
xor
push
or
xlat
scas
stos
push
pushf
push
cltd
xor
or
or
mov
aam
cmpsb
gs
jae
cltd
sbb
fisubrs
jg
xor
xor
push
aad
jmp
je
or
xor
and
dec
notl
pop
and
in
cmpsb
cs
mov
xchg
repnz
movsl
pusha
and
push
jecxz
xchg
cmp
and
icebp
inc
outsl
in
lahf
and
fwait
imul
adcb
xlat
rolb
xchg
xor
repnz
jge
repnz
mov
lock
scas
in
outsl
ffree
push
jae
sbb
std
pop
jo
mov
cs
sub
ret
mov
inc
movsl
cmc
or
into
cmp
cmp
pop
jp
jb
mov
es
lret
xchg
das
mov
inc
xchg
pop
fisttpl
test
test
sub
mov
andl
xor
sbb
sahf
call
sbb
dec
ljmp
mov
imul
jne
or
inc
and
loop
mov
nop
sahf
loop
cmp
push
xorb
push
sbb
inc
cs
js
and
rcll
cmp
sub
pusha
xchg
xor
push
sahf
scas
mov
lock
aam
test
or
roll
scas
xchg
test
xchg
inc
lea
mov
aaa
scas
and
test
jnp
movd
addb
ret
cmp
test
add
in
lock
mov
pop
dec
sar
iret
sub
outsb
subl
mov
push
loopne
in
aad
cmp
mov
pop
nop
and
inc
call
push
mov
push
jnp
xchg
jo
jle
out
dec
sahf
push
dec
add
imul
jle
inc
out
les
xchg
into
repz
or
sub
imul
lock
rolb
cltd
inc
pop
jns
repnz
cmp
adc
inc
out
push
sub
dec
xchg
xor
aas
bound
push
cld
test
mov
cmp
inc
popa
adc
insl
mov
inc
aaa
mov
jns
sub
xchg
pop
push
mov
icebp
popf
xor
loop
mov
stos
mov
flds
clc
sbb
call
push
add
icebp
in
das
leave
cli
std
xchg
cmp
xchg
add
enter
arpl
add
pop
sub
out
cmp
outsb
repz
jg
fisttpl
and
push
mov
test
adcl
mov
cmpsl
jecxz
div
cld
xchg
test
test
cmpsb
sbb
pop
inc
pop
sub
rolb
add
add
roll
aaa
rol
test
jae
adc
xor
inc
lret
mov
mov
xchg
sti
or
call
into
jns
cmp
cmc
xchg
pop
mov
push
fmul
dec
and
sahf
mov
pusha
in
cld
and
sarl
fs
movsl
fsubrl
popf
inc
jg
inc
loopne
in
mov
inc
mov
sub
jmp
rcl
dec
aaa
mulb
push
insb
adc
push
cwtl
pop
pop
and
lods
nop
inc
loop
pop
push
pop
clc
aas
repz
shlb
std
sarl
mov
push
pop
dec
repnz
loopne
in
int3
adc
pop
xor
push
adc
inc
sbb
or
mov
xor
ljmp
dec
lods
in
stos
xor
imul
pop
mov
imul
jl
dec
int
or
mov
std
mov
ror
or
mov
jne
adc
icebp
cld
mov
test
imul
jl
add
sbb
jo
roll
ret
mov
outsb
in
inc
cli
lret
pop
outsb
mov
fwait
dec
mov
ret
fnstcw
imul
adc
or
leave
lret
mov
mov
iret
or
jbe
decl
inc
adc
pop
add
ss
idivl
xorb
movq
jmp
push
adc
loopne
dec
out
pop
ja
push
jle
cmpsb
pop
neg
arpl
cmpsb
add
lds
ds
leave
mov
adc
push
adc
and
pop
xchg
pop
cmpsb
inc
or
sbb
rcrl
in
test
mov
mov
inc
dec
pop
cmp
jge
cmpsl
xchg
cli
sub
std
insb
out
lcall
sbb
lret
xchg
fcomps
jg
dec
push
das
dec
jno
pop
pushf
and
dec
pop
push
or
int
adc
add
mov
imul
mov
and
fs
lods
test
fcmove
jns
std
fldenv
push
or
mov
test
insb
cld
clc
jns
fsubr
sub
popf
es
inc
inc
and
dec
lods
ja
push
fcomip
jl
inc
pop
lds
jge
ljmp
sarb
adc
cmpsl
int
pop
xchg
mov
or
insb
xor
sub
pusha
sbb
jecxz
xchg
cmpsb
jmp
inc
pop
jmp
hlt
hlt
mov
jnp
cmpsl
pushf
fcomp
out
xchg
popa
push
lahf
xchg
dec
subl
mov
or
lcall
jbe
lret
pop
lahf
inc
sub
pop
int
incl
pop
push
or
xor
or
repz
mov
mov
sub
sub
shrb
aam
mov
dec
mov
xor
fs
leave
sub
xor
xchg
js
faddl
in
adc
jb
jge
mov
lds
jbe
fdivrl
pop
pop
stos
push
mov
bound
out
shlb
mov
inc
stos
or
mov
sbb
subb
xlat
xchg
dec
andl
lods
fsubrl
clc
hlt
push
insb
dec
mov
dec
divb
std
cmp
pop
sbbl
aaa
movsb
xor
mov
push
mov
stos
or
adc
sub
xchg
imul
outsl
in
push
push
jg
loop
adc
in
ja
data16
loop
insl
mov
test
aam
dec
or
and
out
fwait
sbb
out
ficompl
push
push
inc
orl
cmp
xchg
cmc
int3
add
pop
mov
pop
mov
add
jo
stc
jp
jmp
pop
and
and
fisttpl
xor
aad
cmp
cld
xor
stos
adc
loop
xchg
add
cmp
or
jne
das
lea
insb
dec
daa
jecxz
sbb
sbb
fnsave
popf
enter
and
mov
jge
mov
mov
imul
cltd
shrb
jl
inc
mov
ret
daa
movsb
fdivrp
or
add
lds
sub
imul
loope
xor
inc
pusha
push
loope
jno
cld
fs
cmp
lret
movsb
loope
mov
cmp
adc
pop
nop
ljmp
stos
cs
imul
incb
mov
scas
es
cwtl
ljmp
ret
sub
test
push
xor
mov
jl
iret
fldenv
cmp
in
push
inc
movsl
stos
orb
cld
popf
inc
lock
out
push
lods
or
cmc
mov
je
loop
or
mov
leave
add
jne
add
xor
pop
push
lds
push
loop
dec
imul
xchg
dec
arpl
arpl
mov
or
jb
jp
or
push
xchg
mov
xchg
movsl
sahf
fbld
es
push
dec
aaa
bound
sub
fdivrs
and
pushf
push
add
fbstp
xchg
dec
fstp
sub
mov
mov
mov
push
mov
test
xor
addr16
push
xchg
sbb
push
jmp
repz
cmpsl
mov
jge
mov
fcomi
loop
aam
xchg
cs
dec
cli
das
mov
cmp
movsb
dec
lds
data16
cmp
outsb
call
aad
mov
dec
pop
shll
xorb
inc
sbb
into
popa
or
ret
cmp
imul
ljmp
loopne
sbb
xchg
jecxz
in
insl
cli
xchg
push
icebp
in
cmpsl
mov
imul
test
out
mov
dec
sub
xor
ds
jne
stos
clc
ret
test
cmp
mov
sarb
hlt
mov
jp
test
sbb
xor
mov
mov
xchg
inc
sub
push
jbe
pusha
int
aam
pushf
xor
loopne
notl
int
lock
sahf
sbbb
sbb
out
jle
fisttpl
push
inc
lret
movsl
push
scas
in
pop
adc
cs
push
pop
test
jp
push
ret
push
jp
mov
pop
jne
jmp
sbb
scas
imul
push
mov
or
adc
clc
mov
jle
adcl
cmp
mov
into
repnz
push
dec
jl
push
push
sub
push
xchg
lcall
xor
xchg
xchg
cmpxchg
movsl
jge
sbb
ds
mov
add
mov
enter
dec
jl
xchg
ret
in
mov
ja
cmp
cmp
push
add
mov
add
and
int
roll
roll
jae
divb
xor
jns
sbb
mov
xchg
mov
hlt
xchg
das
mov
push
les
lock
rorl
push
lret
inc
fildll
inc
scas
pop
mov
jge
jb
stc
popf
les
mov
in
mov
inc
fs
or
leave
pop
or
loope
mov
ss
inc
xor
stos
add
nop
fwait
imul
aaa
inc
stos
adc
ror
in
test
test
fimull
rcr
adc
stc
adc
mov
sahf
insb
adc
aam
add
ljmp
flds
std
sbb
sarl
test
cmp
dec
fisubrl
jmp
jb
arpl
cmp
lods
mov
mov
sub
push
loopne
imul
mov
fs
in
xchg
dec
negl
mov
jp
adc
int3
es
jp
rcrl
add
sbb
jmp
push
pushf
adc
cmp
xor
aam
and
inc
cld
shlb
add
mov
sbb
negl
and
dec
push
add
mov
or
mov
jl
shrl
adc
outsb
or
dec
fidivrl
or
popf
dec
ret
pop
sbb
push
dec
sub
inc
jnp
insb
push
loope
sub
push
push
lahf
mov
aas
imull
lock
hlt
sbb
mov
scas
and
pusha
jbe
leave
jle
in
and
sub
enter
mov
test
and
pop
outsl
mov
xchg
mov
jae
pusha
and
or
xchg
fldcw
aad
mov
push
sbb
jno
mov
mov
jl
ds
mov
pop
aad
jle
lea
fisttpl
rclb
or
pop
xchg
ret
frstor
and
cld
mov
jae
push
dec
fimull
nop
insb
arpl
xchg
shlb
sti
popf
push
xchg
jl
out
mov
inc
push
movsl
mov
pop
push
test
jp
movsl
xchg
mov
adc
or
dec
mov
js
dec
test
xor
pop
cwtl
rclb
mov
pop
out
insb
dec
xchg
adc
xor
in
push
leave
out
adc
daa
scas
mov
inc
cli
mov
movsb
fwait
mov
das
sub
out
mov
test
inc
sub
cmp
fmull
icebp
out
pop
inc
stos
test
dec
jne
xchg
add
jb
cmp
inc
xor
or
mov
popf
sahf
dec
cmp
mov
stos
ja
pop
dec
dec
push
aas
jge
and
aad
pop
shr
sbb
push
xchg
cld
pop
call
jecxz
dec
mov
lret
inc
jae
inc
push
jae
jecxz
and
aas
lods
dec
rorb
inc
jbe
ja
jle
push
push
es
sbb
test
shlb
test
sti
inc
mov
or
adc
stos
push
mov
xor
imul
imul
cmpsl
sub
sub
movsl
pop
outsl
xchg
inc
fmuls
mov
pop
xchg
xsha256
cmpsb
aad
loop
in
aad
inc
mov
inc
mov
mov
push
pop
mulb
sbb
mov
sbb
in
cltd
stos
sbb
mov
dec
daa
inc
stc
shlb
and
data16
cmp
sbb
pop
dec
call
xchg
mov
sarl
push
shrb
push
sbb
rorb
mov
fwait
lods
dec
cs
dec
shll
and
outsl
sub
clc
pusha
jo
mov
fdivr
jae
jo
adc
dec
sbb
ja
and
das
iret
mov
push
inc
pop
mov
mov
xchg
push
sub
or
lods
cltd
clc
fwait
mov
xor
outsl
adc
dec
fstpt
pop
mulb
sbb
pop
sbb
dec
scas
btr
jno
sub
cmp
aas
cmp
frstor
mov
sete
push
inc
movsb
mov
xor
dec
mov
sbb
adc
js
test
andl
mov
pop
jg
mov
adc
scas
cmpsb
sbb
pop
dec
call
mov
shr
es
sub
int3
mov
bound
mov
cmp
pop
mov
cmp
popf
xchg
mov
popa
lcall
jno
dec
scas
out
int3
dec
sbb
and
push
les
repnz
push
icebp
scas
fsubrs
dec
dec
sbb
xchg
mov
rorb
insb
out
adc
stos
adc
jmp
and
xchg
jle
dec
ds
pop
mov
jo
out
cmp
out
mov
xchg
xchg
loop
or
out
xchg
bound
mov
jp
add
xchg
leave
adc
adc
jnp
cltd
aad
in
or
sarl
cs
fldl
or
fcmovne
out
xchg
inc
imul
ret
sahf
stos
inc
pop
mov
fs
sub
out
mov
sbb
xor
out
cld
dec
scas
cli
or
inc
push
lds
adc
repz
xor
lea
cwtl
sub
cs
push
test
mov
pop
push
das
arpl
mov
dec
xchg
adc
mov
jbe
xor
jle
insl
jl
sbb
and
call
inc
or
cli
jp
mov
xchg
jnp
push
push
sub
xchg
jns
jns
filds
stos
out
add
loopne
sahf
xor
lret
jns
test
mov
pop
xchg
dec
xor
int3
data16
cmp
jb
movsl
sbb
mov
and
in
xchg
rcrl
insb
jecxz
sti
aas
inc
cmpb
divb
out
add
arpl
cmc
std
out
stos
push
jp
mov
and
iret
in
cmpsl
sarl
sahf
in
sbb
les
ret
mov
test
mov
and
repz
xchg
cmp
test
pushf
mov
shr
pop
cmc
add
leave
hlt
dec
insb
loope
push
xor
test
xlat
cmp
test
gs
test
imul
mov
movsb
loop
loop
cmp
xor
cmp
addr16
inc
sub
stos
mov
xor
subb
sub
jmp
popl
aaa
sbb
popf
jmp
mov
fmul
xor
xor
xlat
mov
cmp
xchg
das
leave
aaa
jmp
addl
shl
jmp
inc
ret
inc
or
sub
js
or
cmpsl
mov
ss
jae
js
out
adc
xor
inc
xchg
adcb
ja
mov
int
lahf
jb
pop
out
nop
pop
scas
stos
data16
xor
pop
fwait
inc
lea
xchg
mov
out
mov
aaa
mov
outsb
sub
mov
movsl
jmp
and
repnz
stos
clc
mov
stos
imul
cwtl
dec
dec
or
adc
add
cltd
fimuls
and
sbb
add
int
cwtl
in
and
outsb
iret
push
test
push
leave
int
sti
add
andl
into
repnz
mov
inc
imul
lods
andb
insb
pop
mov
cmp
inc
mov
jl
arpl
ret
adc
xor
jge
jnp
or
fucomi
add
mov
inc
sub
add
and
nop
xchg
insl
fnsave
pusha
stos
mov
jae
sbb
icebp
icebp
loopne,pn
in
lods
fisttps
jmp
pushf
cmp
inc
pop
test
ja
xor
mov
jge
enter
xor
scas
andb
cld
push
sbb
ret
mov
lret
hlt
xchg
lret
aam
push
lods
ljmp
jmp
shrl
fcoml
aam
int
and
into
or
jnp
fdivs
pop
gs
add
lret
data16
fdivrl
mov
push
xor
in
lods
xor
jg
adc
jle
push
pop
arpl
mov
xchg
test
pop
pusha
mov
repnz
sub
xor
sbbb
add
pusha
mov
out
les
add
lret
fnstenv
add
push
or
push
out
xchg
mov
adc
dec
cmp
rcr
pop
adc
pop
dec
es
int3
push
cmp
inc
pop
xchg
push
movsl
daa
mov
cmc
lahf
iret
iret
push
jg
adc
sarb
lcall
sbb
movsb
push
pop
sbb
and
rcll
add
sub
imull
cmp
iret
pop
mov
arpl
cld
mov
xlat
pop
insl
cwtl
aad
out
xchg
and
xchg
loop
jge
shrl
mov
or
push
sbb
sbb
cmpsl
fwait
stos
in
ffree
push
cmp
add
inc
addb
shlb
dec
sbb
imul
jmp
dec
bound
xchg
xor
push
lock
fldt
and
cmpsl
adc
dec
mov
or
mov
stc
jbe
adc
mov
shr
jecxz
jmp
ret
inc
cld
adc
out
insb
or
sub
jg
adc
or
stos
push
add
mov
sbb
sbb
inc
or
popf
sub
inc
jne
sahf
mov
push
jne
aad
push
sub
stos
orl
adc
aaa
mov
daa
icebp
repz
inc
sbb
imul
pmuludq
jnp
inc
push
mov
inc
adcb
sbb
inc
in
push
push
xorb
lods
repnz
pop
ret
adc
pop
out
loop
jae
mov
ficoms
cmp
subl
xor
sub
sbb
mov
mov
mov
data16
adc
mov
adc
inc
and
inc
test
mov
sbb
lret
adcb
push
fdivrs
mov
push
mov
pop
sub
leave
mov
lahf
jecxz
ss
fwait
pop
pop
mov
inc
cmp
ret
cmp
repz
loopne
pop
pop
cltd
pop
lds
arpl
in
outsl
adc
inc
push
arpl
rorb
ficoml
fsts
xchg
sub
xchg
and
cmp
jmp
xlat
cli
mov
popa
loop
lret
sarb
pop
mov
test
adcl
cmp
sbb
push
int3
stc
stos
rcrl
push
aaa
dec
adc
ja
dec
inc
sbb
and
cld
sbb
xor
push
out
sbb
andl
sub
sti
lods
or
shll
pusha
lods
jb
xchg
sti
dec
dec
dec
repnz
cmpsb
push
dec
addr16
inc
push
insb
xchg
pop
lods
mov
cltd
sbb
aam
mov
push
push
bound
lcall
lea
dec
xor
adc
inc
pop
jno
ret
je
and
test
cwtl
inc
js
xchg
sbb
jns
push
or
shll
or
das
and
xchg
jne
loope
lret
pop
dec
sub
sarb
inc
and
mov
mov
inc
mov
or
imul
jo
jb
call
sub
int
push
pop
test
outsl
push
ret
out
fwait
cmpsl
aas
sbb
and
inc
lcall
aas
jno
and
add
xchg
clc
mov
sbb
outsb
and
les
jge
inc
mov
cmp
add
ss
js
cmp
test
adc
data16
loop
pop
outsl
subl
jmp
cwtl
inc
scas
add
loopne
jg
inc
testb
subb
es
popa
add
inc
test
into
scas
push
push
cmpsl
pop
movsb
jno
les
repnz
pop
pop
movsb
scas
aam
push
add
mov
popa
bswap
pop
js
and
jge
sbb
dec
cld
es
and
pop
jle
push
push
fxch
inc
leave
vxorps
arpl
sbb
xor
cltd
daa
pop
aaa
daa
pop
cmpsb
stos
add
sti
xchg
inc
sub
clc
cmp
int3
or
dec
push
insl
fcmovu
push
rorl
call
and
pop
ljmp
push
xchg
cmp
cld
clc
adc
dec
stos
and
call
add
sbb
jge
dec
out
jg
icebp
out
sbb
push
arpl
mov
mov
xlat
sub
pushf
loop
inc
push
popf
sub
xchg
in
mov
xchg
jnp
adc
inc
jg
cld
into
mov
adc
ja
mov
cmp
mov
das
repz
shl
inc
in
or
and
repnz
cld
xchg
stc
xorb
shlb
inc
sbb
cs
sub
into
mov
sbb
jmp
mov
ds
test
add
subl
out
ss
inc
xor
and
inc
lret
aaa
and
leave
repz
pop
push
nop
adc
sub
iret
sbb
xchg
les
stos
mov
xlat
mov
mov
or
ret
dec
cvtps2pi
pushf
ja
or
enter
sub
mov
mov
pop
icebp
adc
sbb
jno
insb
inc
daa
int
push
cmp
pusha
sbb
addr16
lea
pop
and
or
jg
inc
lods
xchg
cmp
xchg
mov
fucomip
cmp
jge
fdivp
mov
lcall
inc
stos
cwtl
xor
imul
xchg
mov
addr16
ret
and
lock
test
pop
xchg
fcomps
aad
test
or
pop
adc
outsb
je
push
fwait
aad
xchg
out
pushf
out
push
andb
fsubr
jb
je
jo
loopne
lret
adc
push
lods
jl
inc
dec
sub
pop
rol
in
and
gs
clc
push
cmp
xchg
rolb
xchg
cmp
xor
cmp
sbb
scas
pop
jg
imul
jno
repnz
xor
or
jne
push
adc
negl
fdivs
ljmp
in
hlt
adc
jns
push
inc
bound
mov
sub
mov
inc
add
push
lcall
out
ss
ret
in
mov
inc
mov
daa
cmc
or
mov
dec
shlb
fstps
test
xor
push
xchg
jno
jbe
add
loop
pop
xor
mov
outsl
stc
inc
add
inc
sbb
daa
jno
test
mov
lret
inc
lods
pop
icebp
xlat
adc
and
das
je
andl
aaa
mov
lcall
sbb
jl
push
inc
call
push
sbb
xor
and
loope
aam
pop
jg
ljmp
repnz
add
daa
mov
enter
sub
and
cmp
mov
mov
pushf
loopne
fsub
inc
int3
jg
popa
lods
cmp
sub
lds
scas
xor
mov
out
cmp
std
dec
adc
jp
in
insb
ret
inc
jbe
sub
xor
lahf
js
push
mov
lret
in
fs
movb
mov
pop
adc
stos
fs
xchg
xor
pop
rorb
pop
fwait
lods
arpl
lahf
sbb
fcomip
out
or
sub
hlt
dec
mov
jg
mov
dec
lahf
icebp
xchg
cmp
xor
mov
jmp
add
adc
cltd
mov
pop
je
das
fidivrs
int3
fdivs
ret
test
cmpsb
lahf
xor
mov
es
push
sub
repnz
lcall
mov
subl
and
jb
adc
lods
cld
push
dec
ret
or
jb
mov
cs
add
sar
add
je
pop
dec
adc
insl
sub
mov
fucomp
nop
mov
aad
pop
cmp
mov
shl
jo
mov
imul
cmpsb
and
loopne
mov
jl
jge
call
or
mov
andb
pop
jne
pop
lcall
bound
push
xchg
out
shl
xorb
mul
pop
leave
insb
jp
push
adc
jle
sub
adc
adc
lock
mov
sub
cld
inc
add
jle
sub
fidivl
out
fisttps
icebp
xchg
sbbl
mov
push
nop
adc
repnz
ret
enter
jmp
lods
sub
cmp
mov
lds
in
push
xchg
cmpsb
push
sbb
dec
xlat
dec
lds
leave
call
stc
fucom
addr16
sti
inc
jg
popf
sar
add
inc
mov
pop
push
lret
jo
ret
es
cwtl
and
mov
test
jb
orps
jp
xchg
mov
lea
decl
jne
and
mov
mov
clc
inc
out
dec
and
mov
std
jl
pop
das
mov
cmp
cli
pop
lret
jne
jb
enter
scas
jns
jbe
or
popa
inc
mov
jo
adc
lods
lods
test
dec
imull
sub
jmp
popf
arpl
jb
xlat
enter
imul
jl
std
mov
nop
sbb
arpl
add
icebp
rorb
mov
ror
push
ret
les
sbb
cmovl
pop
dec
cmpsl
je
je
je
test
mov
mov
cmc
adc
sbb
mov
and
rcl
adc
and
aad
xor
rclb
fbld
fldenv
pop
in
pop
mov
xchg
push
mov
xchg
stos
sahf
sub
and
enter
adc
sub
popa
push
pop
sbb
or
int3
and
fisubrl
sbb
imul
pop
mov
cmp
cmp
pop
imul
sahf
adc
mov
add
leave
mov
lods
sbb
lahf
xor
in
mov
nop
xchg
dec
jg
lahf
dec
add
lret
jne
jnp
mov
xchg
icebp
lods
and
imul
sub
int3
out
call
sub
push
loope
mov
test
sbb
fwait
out
movsl
shl
inc
or
add
es
or
iret
mov
inc
out
jmp
mov
add
adc
sub
adc
xor
dec
xchg
int
repz
jmp
stc
aam
mov
popf
out
adc
add
dec
clc
and
jp
shlb
mov
sti
push
scas
aam
loop
dec
lods
adc
inc
pusha
enter
fs
adc
jmp
mov
mov
sahf
xor
sbb
mov
loopne
fs
daa
std
jo
scas
aas
xchg
rclb
mov
mov
test
push
mov
and
scas
movsb
sub
cs
jecxz
mov
in
repnz
sbb
int3
data16
jmp
mov
lcall
sub
cmpsl
mov
xor
pop
cmpsl
xor
insb
test
xor
out
ficompl
sub
popf
mov
fwait
into
pop
std
push
arpl
mov
push
sub
cmp
clc
push
adc
cltd
cld
popf
decb
xchg
xchg
js
and
into
push
push
adc
js
add
jns
std
xlat
les
cli
xor
ror
sub
cld
scas
subb
loopne
add
addb
mov
push
cmpsb
pop
cmp
sub
in
and
insb
jae
fistps
test
leave
lods
mov
test
dec
cmp
mov
dec
iret
sub
xchg
leave
push
pop
mov
inc
mov
sbb
pop
mov
imul
adc
bound
out
jae
idivl
sub
cmpsb
dec
and
bound
aas
into
in
stos
push
inc
xor
jns
sbb
aad
gs
adc
and
add
sti
out
dec
xor
jge
pop
sub
dec
sbb
fistps
jae
xor
ficomps
add
dec
jl
movsb
add
loop
insl
add
dec
test
or
test
cs
jl
cmc
mov
mov
jp
jecxz
or
push
pop
dec
divl
inc
aaa
push
dec
fwait
lret
pop
cmp
addr16
test
cltd
cmp
and
xchg
xor
leave
insl
mov
in
and
sub
jbe
test
imul
mov
mov
sub
dec
loop
push
stos
push
dec
lret
test
movsb
jmp
cmp
mov
sub
fisubs
dec
jecxz
mull
jns
jg
push
sti
pop
dec
mov
pop
jo
repz
cmpsb
repnz
addr16
sti
push
adc
cmpsb
cmp
mov
js
sbb
mov
mov
hlt
cmc
loope
cmpl
jecxz
aas
mov
int
adc
sti
clc
adc
cmp
push
push
sub
inc
mov
inc
sbb
pop
adc
sarb
inc
out
sbb
adc
sbb
subl
jnp
xchg
sub
lahf
in
sub
int
xor
inc
sbb
ljmp
scas
jb
fistpl
xchg
mov
or
dec
sub
mulb
int3
out
fstpt
cwtl
sbb
dec
repz
mov
cmp
mov
stos
ss
jb
call
mov
out
dec
sub
sbb
aaa
mov
stos
out
or
jbe
lret
xor
fwait
pop
mov
aaa
sbb
ja
testb
sbb
jnp
xor
je
sbb
add
adc
xchg
mov
out
xchg
push
sbb
cmp
sbb
pop
dec
push
inc
jnp
lcall
fiaddl
push
dec
icebp
or
nop
jns
jb
xchg
jg
into
daa
jmp
and
pop
mov
ror
pop
test
push
movsl
loop
imul
jmp
out
inc
dec
cmp
outsl
mov
mov
lds
mov
outsb
sub
mov
mov
mov
mov
sti
sbb
sbb
stc
je
jae
fcmove
gs
xor
test
push
xor
stos
jb
lcall
enter
mov
fbstp
hlt
aas
cmp
push
push
inc
add
sub
cmpsb
push
push
add
inc
and
int3
mov
in
bound
xlat
in
dec
jno
out
inc
inc
inc
hlt
scas
push
pop
test
push
cwtl
test
and
icebp
dec
cmp
xchg
stos
push
sub
pop
jne
xor
xchg
fs
cld
mov
fwait
sbb
mov
and
dec
orl
data16
inc
push
or
data16
xchg
test
pop
cmp
ret
ljmp
bound
sbbl
pop
cmp
xchg
stos
cwtl
mov
rcr
dec
jecxz
aad
popa
inc
xor
sub
jnp
fadds
lahf
fbld
push
cltd
dec
xor
pop
mov
jmp
mov
sbbl
jns
dec
add
push
stos
mov
mov
arpl
xchg
inc
jmp
inc
dec
icebp
movsb
sti
dec
sub
sbb
lods
mov
imul
mov
add
pusha
xor
scas
jae
pop
xchg
cmpsl
lods
nop
lret
push
mov
push
xlat
dec
stos
cmp
xchg
push
add
clc
mov
dec
sub
lret
mov
mov
outsb
jle
mov
jo
aam
aaa
pop
inc
int
enter
cmp
xor
mov
cld
fistpll
xor
je
xor
in
cltd
sbb
adc
push
adc
dec
ret
sbb
and
pop
iret
jge
mov
int3
inc
xchg
pop
sti
in
xchg
cmp
lret
jne
stc
and
xchg
and
jg
sub
test
sbb
arpl
pushf
cmp
jns
mov
mov
stc
add
daa
or
mov
mov
mov
inc
mov
lods
jp
adc
fcmovb
pusha
leave
xor
testb
lcall
lods
pop
ret
mov
mov
jb
iret
insb
jns
sub
lret
dec
pop
xor
and
test
dec
rcll
sbb
rol
cmp
pextrw
push
push
fs
mov
jmp
jge
bound
sahf
fwait
mov
loop
xor
sub
push
xor
int3
xlat
cmp
lods
push
popa
push
sub
divb
and
ljmp
mov
push
mov
out
int
cmp
inc
lods
repnz
fsubrl
push
rcll
arpl
jle
push
jae
mov
in
mov
pop
xchg
push
fidivs
adc
xchg
or
iret
xchg
xlat
jg
xor
adc
jo
adc
or
cld
jge
sub
dec
push
dec
inc
lret
inc
nop
or
bound
sbb
push
or
pop
sbbb
add
adc
and
imul
xchg
sbb
adc
inc
mov
lods
pop
out
cmp
or
ficoms
jbe
cs
or
into
daa
or
cmpsl
orb
out
fimuls
hlt
mov
lcall
dec
push
or
inc
push
mov
mov
nop
xor
bound
addb
outsl
jmp
or
jns
leave
sbb
inc
nop
call
mov
sub
adc
rorb
fucomp
adc
dec
test
and
rcr
mov
jge
jbe
xor
movsl
dec
rol
and
out
xchg
and
inc
iret
fsub
lock
jge
pop
aad
lahf
xchg
lods
sbb
cmp
dec
jns
inc
ljmp
mov
sub
mov
xor
cmpsl
sbb
or
scas
data16
jmp
addb
fimuls
mov
rorb
mov
into
insb
popa
push
iret
mov
lahf
stos
arpl
xchg
mov
push
loope
rcrl
lahf
xor
insl
cmp
pop
stos
bound
push
cmp
jbe
pop
dec
test
add
subb
mov
mov
jno
jl
mov
inc
xchg
inc
jle
sbb
add
jno
sbbb
inc
mov
ds
in
sbb
cld
aaa
aas
xchg
and
stos
cmpsl
mov
jne
les
mov
jo
sub
aad
dec
cs
fdivrs
add
jo
or
scas
jmp
add
xor
movsb
mov
fcompl
out
outsb
imul
jmp
hlt
ss
push
push
stos
ret
insl
ret
into
push
pop
loop
mov
pop
cwtl
jo
push
and
das
xchg
insb
xchg
js
cld
scas
push
mov
adc
repz
fists
cmc
dec
repz
stos
adc
ss
cmc
mov
pop
cs
mov
xor
dec
xchg
lods
stc
push
xor
imul
fidivs
stc
inc
xor
imul
adc
pop
je
pusha
and
nop
lea
pop
orb
adc
xchg
add
fidivs
gs
pop
xchg
pop
sub
xchg
pop
pop
mov
or
push
std
stos
cmp
mov
test
sbb
popa
jmp
cmpsl
dec
jns
andb
xor
sub
adc
lret
repnz
add
test
icebp
out
gs
push
mov
lds
in
xor
in
setl
ret
inc
jbe
repz
iret
hlt
cmp
push
jbe
add
in
clc
or
dec
inc
push
out
test
fwait
cmc
test
fnstcw
push
sbb
pop
nop
and
repnz
out
sbb
shr
lret
mov
subb
sub
mov
jmp
add
sarb
push
and
sub
jno
imul
repnz
test
dec
adcl
adc
test
xchg
xchg
fbld
scas
lret
inc
sub
mov
jbe
mov
neg
inc
pusha
pop
lahf
sbb
xor
iret
mov
adc
cmc
fistpll
cmc
fimull
cwtl
sub
add
add
fists
mov
inc
cs
out
dec
cmp
into
insb
jae
inc
sbb
test
hlt
cwtl
mov
dec
jmp
and
pop
mov
data16
cmp
mov
xchg
mov
xchg
dec
rcrb
adc
es
call
int3
movups
xchg
cli
push
outsb
cwtl
aam
mov
jns
or
clc
mov
push
outsl
lret
outsl
rolb
jge
into
shl
cmp
ret
je
into
ret
bound
stos
mov
js
xchg
push
push
xchg
xor
outsb
ret
mov
mov
gs
pop
fs
cmpsb
out
dec
in
sub
sbb
out
test
jne
add
lret
sti
cmp
push
insl
outsb
and
ret
xchg
fisubrl
sbb
movsl
movsb
lods
int
inc
push
enter
push
sbb
in
fs
add
or
loope
popf
lods
cli
loope
adc
lods
pop
cmpb
call
adc
lods
mov
add
push
mov
ds
roll
mov
fisttpll
jl
jnp
rcr
mov
sar
add
stos
add
lds
int
push
aas
jge
xor
andb
pop
mov
pop
pop
mov
pop
rorb
jno
das
sbb
push
dec
out
mov
mov
ds
cmc
pop
push
pop
inc
jmp
mov
adc
mov
lcall
mov
ja
leave
arpl
orl
lcall
popa
repz
sbb
addr16
lods
add
subb
adcb
jo
sbb
scas
inc
or
cwtl
or
mov
dec
inc
in
leave
jno
lods
in
push
ds
mov
es
sub
xor
hlt
fwait
ja
imul
jl
xchg
in
mov
repnz
cmp
sbb
mov
xchg
and
loop
jecxz
adcl
dec
dec
ret
push
jecxz
pop
sub
and
cmc
cmpsl
inc
out
jnp
pop
jns
inc
sbb
mov
mov
push
xchg
lret
mov
lahf
xlat
sub
mov
and
inc
mov
mov
dec
or
jge
imul
sbb
shlb
ja
shll
cltd
shrl
pusha
xchg
cwtl
and
pushf
test
pop
js
xor
add
cli
aas
or
mov
push
xchg
xor
popa
test
mov
in
repz
lret
lret
imul
mov
pop
fs
je
nop
dec
js
sub
inc
inc
push
fsubl
or
stos
pop
jnp
jg,pt
push
das
fnstsw
xchg
dec
cmp
icebp
insb
icebp
pushl
xchg
mov
sbb
test
loopne
dec
push
push
loop
out
sub
mov
out
push
popf
pop
fisubl
push
mov
jmp
dec
lcall
int3
xor
and
pop
dec
rol
fdiv
mov
sub
lret
cmp
jge
call
outsl
ret
int3
add
addl
lea
xchg
mov
leave
pop
lcall
mov
add
push
aas
fidivl
cmp
mov
cmp
negl
popa
scas
jecxz
dec
imul
iret
adc
or
push
into
fwait
cmpl
dec
mov
push
lret
rolb
les
aam
mov
rcl
pop
xchg
jbe
or
mov
mov
mov
mov
loope
loopne
jmp
add
jno
inc
mov
pushf
into
repnz
ljmp
dec
or
addl
mov
jp
cli
jecxz
adc
clc
push
roll
dec
sbb
repnz
sti
or
je
xor
pusha
insl
mov
dec
cmp
dec
pop
sub
call
push
sbb
aam
adc
insl
mov
push
sub
test
adc
hlt
jnp
cmp
pop
sub
dec
xchg
mov
lock
int
sub
mov
test
mov
out
xchg
sbb
cmc
test
scas
enter
or
mov
loopne
sbb
insl
and
pop
inc
pop
or
sub
test
jb
std
jl
sub
pop
insb
add
and
imul
adc
lods
dec
es
cltd
pop
mov
xchg
movl
adc
and
mov
push
mov
gs
pop
int3
fisubs
and
or
or
dec
mov
test
mov
repz
in
and
cli
xchg
jno
xchg
xchg
mov
pop
xor
mov
ficompl
and
lds
push
mov
cmp
scas
in
clc
sub
jb
mov
push
adcl
cmpsl
mov
xchg
lret
loope
adc
jbe
dec
fcompl
aad
pusha
jp
out
add
mov
mov
inc
inc
popf
pop
and
stos
inc
aaa
notl
xchg
fstp
cmp
mov
mov
scas
ds
ja
push
shll
xchg
nop
sub
insl
shll
ror
xchg
aam
sbb
sub
sbb
int
fdivrs
xchg
xchg
xlat
mov
repz
lahf
dec
loopne
stc
and
js
pop
aas
shlb
dec
mov
add
push
pop
lods
jae
jae
xchg
movsb
loop
out
test
movsl
push
jp
or
add
or
ror
iret
fistps
push
and
cltd
xor
int3
outsb
mov
xchg
jnp
xor
fimuls
fidivs
imul
cwtl
jno
mov
inc
push
fildll
stos
test
fwait
and
cmp
mov
xchg
mov
js
test
lret
aad
stc
inc
or
add
mov
addr16
and
adc
mov
push
mov
lea
movsb
pop
es
pop
adc
dec
mov
outsl
mov
sub
push
xchg
ret
push
repnz
mov
popf
cs
test
jmp
adc
leave
jno
xor
es
xor
sbb
inc
rcrl
rcrb
mov
les
call
je
add
adc
stc
popa
pushf
mov
rcr
out
sub
outsb
dec
aam
mov
outsl
int
xor
adc
nop
adc
shl
xchg
dec
aam
and
xchg
dec
dec
test
dec
es
enter
dec
cmp
inc
mov
mov
mov
and
inc
repnz
test
aad
int3
testb
mov
int
les
in
or
pop
sbb
xchg
popa
jecxz
jae
scas
adc
dec
xor
adc
add
jl
fwait
mov
lea
push
ja
cmp
mov
dec
inc
test
or
xor
sahf
jb
pop
sbb
and
lret
adc
orb
insl
mov
pusha
sbb
dec
scas
xchg
jg
sarb
shrl
sahf
mov
xchg
xlat
sub
dec
fdiv
inc
movsb
jnp
lret
fmull
and
nop
leave
es
sub
jmp
push
jo
cmp
loopne
add
xlat
mov
xchg
call
data16
mov
xchg
mov
jle
xor
in
and
add
jbe
xchg
add
lcall
cli
xor
cli
mov
cli
test
push
roll
xchg
leave
and
jge
lahf
arpl
xchg
fists
pop
xchg
xchg
jmp
xor
cmp
jb
sbb
rorl
push
push
xchg
or
dec
nop
jnp
xchg
stc
lahf
cld
push
xchg
jecxz
push
mov
pushf
fdivrl
fstpl
jbe
shr
xor
fld1
fstpl
aad
daa
dec
pop
pop
jae
arpl
sbb
les
cwtl
scas
or
mov
nop
cpuid
jp
std
sub
outsb
ds
pusha
xor
inc
push
cmpsl
call
xchg
scas
xchg
sbb
cmp
cld
mov
aam
inc
sub
xchg
mov
fnsave
stos
ja
test
pop
adc
js
clc
pop
insb
xor
sub
lret
lock
dec
push
inc
jmp
andb
adc
or
add
mov
fidivs
jmp
dec
mov
pop
fnsave
push
int
sarl
inc
arpl
aam
loopne
sbb
and
cmp
fiaddl
push
pushl
pop
fcompl
and
pop
out
jb
fstps
outsb
imul
pop
in
repz
mov
dec
mov
stos
repnz
xchg
jbe
daa
jae
sbb
dec
sub
xchg
mov
adc
sahf
mov
and
push
jmp
cmpsb
addr16
sbb
faddl
sbb
data16
mov
ds
ljmp
mov
cmc
jecxz
lret
outsl
cmpsb
dec
idiv
xor
sti
lret
xor
leave
fists
jae
stos
iret
shrb
xorl
decb
int
imul
jl
mov
add
ja
ja
scas
in
adc
iret
push
add
ficomps
and
aam
and
stos
pusha
push
xor
sub
mov
mov
lret
cmp
lock
data16
xor
fcmovu
xorl
push
fsubl
dec
ffree
sub
fistl
add
cmc
xor
imul
mov
sub
push
das
mov
gs
enter
inc
xchg
mov
xorb
dec
mov
xchg
ds
mov
les
dec
es
int3
push
xor
mov
inc
adc
and
fwait
inc
int
hlt
mov
fimuls
mov
popl
mov
rcll
jb
repz
rolb
xor
iret
add
xchg
sbb
fs
cmp
lods
or
xor
or
xorb
outsb
cmp
stc
add
inc
bound
fsts
cmp
jp
inc
testl
mov
mov
and
outsb
shrb
xchg
or
imul
mov
mov
in
sar
sbb
pop
das
shl
mov
cld
pop
sub
dec
ja
cmp
dec
xor
cwtl
mov
adc
cmp
pop
push
xchg
ja
cmc
in
xchg
pop
fsubl
and
je
sbb
shlb
xchg
pusha
mov
and
mov
das
fstpl
add
stos
aas
je
sub
dec
loop
lret
andb
repz
fnstcw
mov
outsl
pop
push
mov
push
cmc
fdivs
test
xchg
and
mov
stos
jecxz
mov
or
mov
sub
fdivrl
or
or
mov
lret
mov
mov
insl
lock
push
adc
dec
scas
jge
scas
out
add
in
push
add
and
cli
pop
mov
js
pop
push
pushl
fisubrs
lods
add
sbb
jo
dec
mov
or
cmc
gs
cmp
movsl
insl
mov
pop
mov
notl
dec
pop
mov
jno
mov
add
stc
psadbw
push
fs
sub
dec
cwtl
cmpsb
outsb
sub
push
aaa
outsb
jae
push
cmp
mov
shrl
leave
jp
cmp
mov
sahf
test
aad
or
test
push
xorl
sbb
insl
ds
test
cmpsl
adc
aas
addr16
jl
orb
es
sahf
sub
and
cmp
repnz
add
jecxz
sarb
inc
shll
mov
aaa
mov
inc
pop
jb
inc
jg
adc
mov
popf
hlt
shrl
lret
pop
inc
es
neg
jo
sub
mov
pop
int3
mov
pop
loopne
imul
pop
push
mov
push
cmp
or
xor
popf
cmp
movl
negb
mov
jg
ds
aas
or
pop
out
shll
xchg
stos
push
gs
into
push
cmp
movsl
test
cmp
movsl
xchg
adc
xchg
sub
sub
cli
fidivrs
andnps
mul
mov
jle
xor
in
sbb
shl
pusha
cmpsl
sub
add
test
xchg
inc
mov
push
rorl
add
sarl
inc
notb
cmc
subb
movsl
xlat
outsb
push
mov
pop
mov
sub
sahf
mov
test
cli
paddb
xor
loopne
cmp
sahf
fildll
cmp
jns
jnp
jl
jle
mov
daa
jae
shlb
outsl
jg
bound
mov
jne
add
out
dec
xchg
sbb
mov
int3
sbb
xchg
nop
pushf
lea
das
test
push
adc
add
inc
scas
cltd
sub
xor
cmp
repz
pmulhw
ret
mov
fwait
lods
pop
dec
rcrl
insl
ljmp
mov
gs
int
and
cmp
inc
fwait
or
or
and
dec
daa
dec
mov
ss
sbb
out
mov
mov
cli
fs
pop
jp
sarb
xlat
sbb
ror
inc
cmp
shlb
and
int3
loopne
adcl
push
sbb
mov
ljmp
push
cld
lea
cmp
je
xchg
insl
cmp
cltd
into
mov
insl
aaa
sbb
not
out
and
int3
pop
sti
stos
mov
mov
jb
dec
xor
cmc
dec
adc
or
cld
and
addr16
push
out
mov
js
xor
imul
pop
and
pop
mov
xchg
enter
gs
dec
mov
xlat
jge
mov
and
andb
add
and
mov
cli
arpl
or
fsubrl
mov
cmpsl
mov
mov
add
imul
dec
mov
shll
movaps
dec
negb
jmp
jno
mov
push
push
out
adc
out
loope
and
and
and
add
mov
xchg
lahf
je
mov
fadd
es
insb
mov
loopne
and
sub
adc
imull
dec
dec
xchg
adc
xchg
or
filds
call
dec
arpl
pop
icebp
out
jmp
add
xor
xor
sbb
fidivrl
inc
sub
lods
sub
mov
leave
nop
or
dec
push
mov
cs
pop
xchg
mov
js
imul
and
add
adc
cld
sub
sub
in
aaa
add
push
xchg
ret
lods
insl
adc
xchg
ret
rolb
notb
sbb
fadd
fistpl
out
adc
test
cmp
add
push
adc
mov
mov
inc
mov
xchg
int
push
ss
loope
outsw
mov
push
dec
mov
mov
out
scas
inc
jg
push
xor
xchg
xchg
outsb
mov
xchg
jecxz
push
jmp
and
add
test
xchg
inc
mov
xchg
adc
subb
rol
sti
mov
adc
movsb
cwtl
mov
je
inc
push
cmp
ljmp
ljmp
mov
dec
mov
mov
mov
pop
mov
repnz
jecxz
sahf
imul
lret
push
fistpl
lcall
mov
shr
cmp
mov
jl
out
and
inc
mov
and
push
cmp
mov
hlt
mov
sahf
fiadds
cli
fistpll
lock
stc
rclb
add
sbb
adc
mov
lea
mov
cmpsl
push
adc
insb
mov
xor
xor
ror
mov
std
nop
mov
cmp
xchg
imul
lret
mov
test
or
ljmp
cmp
scas
ret
mov
mov
xor
fs
jnp
adc
xchg
mov
push
out
stos
push
dec
xchg
xor
adc
repnz
push
insl
jp
adc
adc
adc
cld
popa
aas
call
sub
cmp
pop
stc
in
or
pop
les
mov
sbb
add
jns
dec
dec
out
or
mov
fcmovnb
push
xlat
outsl
sub
rorb
movsb
das
dec
sahf
dec
test
das
bound
stos
mov
test
mov
pop
mov
jecxz
outsl
ret
mov
rcrb
aad
not
inc
into
in
add
sub
movsb
subb
addr16
add
jp
jp
in
xchg
push
mov
pop
fdiv
stos
lcall
or
clc
fiaddl
rol
std
pop
jecxz
sub
pushf
fldl
pop
mov
add
movsl
rcll
jecxz
popl
sti
pop
insb
fs
outsb
repz
into
push
jo
cmp
mov
std
fdivs
push
xor
repnz
stc
fimull
dec
icebp
iret
dec
sbb
mov
mov
aam
test
orb
add
or
push
fistpl
xchg
mov
adc
dec
lds
xor
dec
iret
in
fisttps
insb
repz
lock
loop
jle
sub
aad
and
aam
sub
or
addr16
loop
fisttpl
outsl
outsb
adc
gs
jl
enter
hlt
in
cwtl
test
mov
sub
add
mov
int3
lret
mov
cs
ja
pusha
sahf
jb,pt
mov
cmpsb
enter
jns
mov
jle
outsl
inc
fadds
jae
jecxz
shrb
lock
test
ret
and
mov
lahf
push
mov
stos
pushf
cmp
loop
and
sbb
mov
mov
mov
xchg
loope
testl
pop
dec
enter
sub
call
xorl
je
outsl
adc
jge
pop
mov
mov
lds
mov
fmull
push
les
xchg
out
and
es
lods
cmpl
pop
mov
pusha
or
call
jns
mov
orl
cmp
roll
iret
stc
pop
cmp
push
lods
pop
xchg
sbb
loopne
xchg
xor
fists
adc
cmp
jae
js
test
pop
aas
xchg
insb
jb
mov
sahf
and
fcomp
js
sbb
bnd
cmp
iret
jge
enter
ds
outsl
add
lods
pop
aaa
mov
imul
sti
push
dec
shlb
jecxz
or
and
and
out
mov
jnp
into
mov
sbb
loopne
out
jnp
imul
push
mov
clc
sbb
adc
jbe
mov
test
insb
pop
cmp
rol
aaa
adc
cmp
xor
aad
jbe
cmp
notl
aas
inc
mov
rorl
dec
outsb
sub
cmp
stos
daa
sub
xchg
scas
jb
lret
in
imul
insl
pop
pop
ja
xor
jno
dec
adc
mov
dec
cmp
inc
jg
cli
cmp
mov
jmp
pop
sub
push
cwtl
cmpl
push
push
jge
rcl
daa
cmp
rorl
dec
insl
xor
cltd
popf
xchg
dec
xchg
xchg
fcomps
mov
push
gs
dec
lret
xchg
loope
lods
mov
sbb
sbb
daa
or
lock
xchg
jo
mov
jno
dec
sbb
cmp
aad
cmp
loopne
aaa
xchg
fldl
xlat
sbb
mov
in
and
jo
imul
add
sti
es
neg
addb
inc
cmpsb
xchg
fsubp
cmpsl
push
mov
pmulhuw
loopne
call
add
outsl
xchg
or
cltd
jne
lcall
lea
sbb
negl
mov
shll
adc
sahf
mov
gs
sarl
push
sbb
scas
inc
jmp
int3
dec
int
sahf
bnd
jecxz
out
stos
sbb
les
stos
mov
leave
in
fsubrs
pop
mov
sub
fisttpll
dec
xchg
xor
jne
pop
stos
aas
inc
jo
mov
cs
push
ljmp
lock
out
or
scas
mov
xchg
xchg
add
xor
ljmp
in
fists
push
mov
ret
adc
cli
int
mov
aam
mov
lea
cmpsl
mov
mull
movl
xchg
enter
fs
lret
test
cmp
out
inc
inc
mov
mov
mov
aaa
int
outsl
pop
push
sub
fnstsw
rcl
fildl
mov
jns
nop
aam
xor
stc
and
dec
add
mov
aam
out
mov
inc
mov
push
mov
sti
mov
and
ljmp
gs
repnz
test
push
mov
clc
dec
dec
aas
movb
fs
aad
movsl
std
mov
incb
dec
faddp
aaa
pop
adc
in
cmp
cli
push
cmc
and
mov
rorb
dec
mov
aas
psllw
hlt
pop
mov
mov
fistpll
daa
cmp
jmp
push
mov
iret
imul
aas
pop
loopne
dec
sbb
int
inc
daa
mov
test
movsb
into
xchg
push
inc
test
dec
jge
pop
inc
roll
dec
lret
inc
loope
pop
fucomip
in
lock
test
cmp
addr16
std
pushf
mov
pop
fwait
dec
push
mov
lcall
fdivrl
jnp
adc
test
pop
push
mov
mov
je
in
addr16
mov
jg
mov
insl
xor
xchg
jg
and
inc
in
mov
mov
push
mov
mov
lods
iret
aas
fsubr
in
pop
mov
loope
cmpsb
inc
stc
call
pop
ficoms
xor
xchg
aas
push
xorb
mov
lds
push
cmpb
or
and
xadd
addr16
jmp
jo
pop
sti
cltd
addb
js
or
and
mov
stc
sbb
or
add
nop
loop
sbb
lret
adc
adc
mov
out
pop
xchg
add
sbb
xorl
in
adc
jp
xor
lods
xchg
arpl
jne
push
lret
fldl
mov
push
pop
and
xchg
fbstp
xchg
mov
and
cmpsb
push
sub
pop
mov
sahf
ret
fildll
or
mov
pop
xchg
shlb
fwait
imulb
movsl
push
sahf
mov
adc
mov
mov
ret
hlt
pushf
outsb
inc
dec
sbb
pop
adcl
jae
sbb
es
sub
mov
out
pop
lea
test
mov
inc
cmc
sub
sub
stos
sbb
xchg
clc
out
aas
mov
hlt
clc
add
out
dec
push
orb
out
jg
jne
adc
fbstp
jne
or
jne
and
iret
lods
outsl
and
addr16
arpl
sbb
xchg
ror
ret
addb
push
mov
in
out
push
mov
or
push
lock
movsl
loope
sbb
push
mov
pop
shl
jne
xor
js
mov
shrl
popa
imul
pusha
clc
dec
in
sbb
xchg
xor
xor
push
add
nop
int3
mov
popa
lret
push
mov
add
mov
aad
out
sarb
adc
out
push
jp
pop
nop
xchg
popa
imul
in
mov
xchg
movsl
lret
fs
fs
sub
nop
movsb
sbb
fistl
jmp
out
sub
cs
ret
mov
test
cmp
dec
lahf
mov
lcall
aad
mov
jl
ljmp
cld
test
insl
in
xor
addr16
arpl
pop
mov
lock
push
push
rclb
xchg
adc
insw
sub
in
push
cmpsb
ja
dec
push
enter
cmp
lret
jge
cwtl
push
sbb
pop
cld
sub
ss
loop
cmp
pop
add
call
int3
jo
fildll
mov
hlt
rorb
das
cmp
sub
sub
xchg
sbb
jbe
imul
dec
in
scas
dec
stos
sti
in
int3
rol
testb
push
fists
call
loopne
fstps
xchg
cmpsb
subb
mov
jge
jne
les
pushf
jle
inc
inc
inc
push
dec
mov
or
mov
enter
addr16
cwtl
push
pop
xor
dec
dec
sub
mov
or
out
mov
outsb
inc
mov
jne
outsb
in
addl
jge
rcr
dec
mov
or
clc
and
xchg
pop
movsl
cmpsb
shll
sahf
cwtl
icebp
lret
daa
and
mov
pushf
adc
repz
aam
xchg
sub
mov
xor
cmp
fucomp
jmp
push
int
cs
test
movsb
rorb
mov
cmpsb
mov
data16
inc
push
mov
and
stos
cmpsl
adc
mov
out
lret
int3
and
scas
fcomps
cld
test
and
dec
cmp
pop
cmp
std
xchg
adc
fimuls
lahf
jmp
xor
bound
jl
push
or
pop
mov
jb
arpl
sti
add
cmp
test
mov
inc
out
dec
xlat
sbb
sarb
mov
addb
jo
push
xor
test
pop
lea
add
movsb
addl
jae
pop
cmp
jno
or
inc
jg
repnz
lods
xchg
push
rorl
adc
cmp
mov
lods
mov
mov
mov
idiv
int
call
mov
sti
loopne
clc
add
jle
and
les
addl
cs
inc
add
pop
aam
dec
pop
test
jnp
daa
fsubs
cmp
dec
in
retw
xor
movsbl
jno
mov
xor
sub
test
jp
push
repz
cmp
jne
fbstp
jo
je
or
dec
mov
adc
addr16
fisttps
ret
dec
test
fsts
push
inc
aaa
rclb
insb
fldcw
ja
ja
pop
mov
test
xor
jb
inc
sub
jae
adc
jp
dec
add
push
sbb
xor
or
inc
arpl
or
je
out
cltd
inc
pop
test
test
lock
out
daa
rcl
jle
sbb
ret
mov
xor
sbb
mov
xor
js
inc
icebp
lods
int
pop
jae
push
push
cmp
int
sub
in
stc
ljmp
sub
pop
push
dec
jmp
fiadds
and
inc
sbb
stos
xor
and
fmulp
pusha
mov
lods
mov
dec
fimuls
xchg
int3
xor
lcall
pop
hlt
jp
adc
sbb
dec
push
inc
sahf
out
sub
add
nop
lcall
jle
jbe
rcr
call
xchg
scas
imul
out
mov
xchg
je
sub
roll
inc
cld
test
sub
jl
add
rcrl
adc
js
fwait
xchg
lds
sbb
sahf
pop
add
inc
scas
clc
dec
xor
mov
icebp
mov
mov
not
loope
jge
addb
fnsave
jns
addr16
icebp
js
je
jmp
jge
shl
mov
push
fildll
decl
je
bound
cmp
mov
repz
jp
or
jb
ds
scas
scas
nop
add
dec
adc
mov
inc
xorl
mov
push
cmp
icebp
in
cwtl
ss
sub
mov
adc
inc
add
jecxz
popa
xchg
cmpsb
scas
fiaddl
lcall
es
cwtl
sbb
dec
outsl
sbb
ret
fstpl
fadds
jo
sub
or
sub
or
xchg
xor
sbb
inc
aad
and
pop
jne
push
test
shl
sub
scas
push
xchg
xor
mov
cmp
out
ret
fucomip
and
ss
adcl
les
and
popf
push
cwtl
mov
js
dec
push
cmp
mov
pushf
sub
std
pop
adc
stos
mov
and
lods
sbb
sar
out
add
fwait
lea
push
push
insb
mov
sbb
cld
dec
mov
or
xchg
mov
cmpsb
or
lock
fwait
cmp
pop
out
shrb
data16
andl
mov
sbb
fmuls
std
xchg
faddl
jnp
into
mov
or
push
inc
xor
iret
sub
push
xor
mov
jmp
mov
dec
mov
pop
movb
cmc
xor
in
sub
bound
stos
fucomip
mov
mov
shrl
sub
hlt
inc
das
cmpsl
and
repz
dec
outsl
stos
sub
je
imul
in
jno
xlat
fdiv
scas
xlat
negb
inc
insl
mov
loope
adc
sti
jl
dec
test
or
xbegin
je
imul
sti
dec
mov
mov
pop
sub
adc
arpl
jmp
xchg
pop
push
pop
popa
cmp
or
add
mov
icebp
dec
inc
mov
jp
ret
cmpsl
pushf
outsb
dec
leave
mulb
cmp
mov
test
fs
inc
mov
pop
lret
std
rolb
popa
cltd
rcrl
leave
mov
pop
xchg
arpl
cli
int3
push
pop
lret
inc
repz
or
lock
jg
and
mov
imul
icebp
mov
test
pop
xchg
mov
test
into
lret
test
je
shl
and
shlb
jb
aaa
dec
mov
mov
jbe
aad
loopne
push
sub
cli
iret
push
jecxz
or
push
dec
outsb
cld
lret
mov
push
mov
xchg
inc
cmpsl
in
jl
dec
mov
fwait
das
and
jge
push
adc
lea
or
stos
xchg
cmpsb
jg
dec
mov
jb
movsb
in
sub
lcall
sub
into
pop
divl
mov
dec
xchg
test
arpl
lods
ja
iret
into
or
jns
push
mov
and
pop
enter
call
fdiv
adc
test
cmp
addr16
jbe
cmp
cltd
mov
je
adc
out
dec
cli
add
and
and
dec
lcall
sti
cs
sahf
pop
iret
ljmp
adc
scas
cmc
shr
adc
fwait
popa
in
cmp
mov
push
sub
ficomps
popa
cmpsl
jl
popf
sub
pop
in
in
or
loop
scas
jge
xor
mov
fisubrs
dec
jle
repnz
add
mov
push
jge
and
cmpsl
xchg
jnp
jmp
cwtl
xchg
dec
jle
es
popa
in
mov
inc
aas
testl
push
gs
mov
xor
pop
xchg
pop
roll
sbb
and
pop
lret
push
sub
or
dec
jle
icebp
xor
ds
pop
add
cld
out
sub
cmp
ds
cli
jmp
cltd
pusha
jl
test
je
cmp
or
loopne
mov
shl
push
test
xor
sahf
ss
dec
shr
fisubs
xchg
dec
notl
fidivs
andb
adc
jbe
leave
add
leave
enter
mov
js
cmp
fs
fidivrs
fucomp
dec
call
filds
inc
test
adcl
cmc
lock
repnz
insl
push
sub
lcall
sub
movsl
xorb
out
jle
mov
xor
mov
int3
push
clc
sbb
in
addb
cmpsl
bound
pushl
pxor
out
lcall
scas
leave
repnz
mov
je
or
pusha
shlb
sbb
rorb
mov
leave
std
mov
push
jno
ds
das
mov
mov
out
clc
jmp
test
adc
cs
in
lahf
and
sub
inc
lret
jg
inc
mov
cmp
stc
jge
adc
aas
xor
sbb
ret
push
shlb
sbb
jle
int
aas
stos
sbb
addr16
mov
cmp
aaa
repz
dec
mov
push
mov
dec
push
fidivrl
ja
ficoml
lods
cmp
out
fwait
or
dec
pop
test
outsl
mov
loopne
mov
jp
cmpsb
jmp
jb
mov
or
insb
and
test
or
push
xchg
shrb
xchg
pop
je
sbb
sub
lods
pop
jo
jecxz
push
insl
mov
adc
orb
mov
cmp
cmp
jmp
popa
sbb
cmp
mov
iret
push
lock
lds
jb
mov
ret
xor
mov
sub
xchg
mov
sysexit
mov
jl
add
push
das
xchg
mov
psrlq
xchg
loop
fldl
sbb
pusha
mov
addl
out
aad
fldcw
out
mov
loope
stc
sbb
pop
mull
push
test
jp
pop
les
pop
pusha
add
in
pop
dec
stc
scas
sbb
adc
repnz
in
push
fisttpl
pop
add
mov
cld
push
and
iret
fadds
xlat
mov
push
in
or
mov
mov
sbb
sbb
mov
lock
xchg
mov
lock
mov
jp
sarb
test
mull
mov
sub
mov
and
fiadds
jmp
aad
repz
xor
in
pop
jne
jno
mov
or
andb
adc
xchg
inc
push
mov
stc
sti
in
adc
or
pop
mov
mov
pop
dec
shll
sub
cmpsl
pop
mov
xchg
inc
push
mov
xchg
or
xor
add
nop
sub
pop
scas
mov
enter
rolb
sbb
dec
mov
and
push
pop
jl
and
xchg
mov
push
push
xchg
push
fisubl
repnz
sub
pop
xchg
mov
aas
push
xor
in
jb
xchg
mov
mov
mov
shrl
in
jmp
xchg
test
add
jge
cmp
jp
mov
rcrb
test
jl
popa
cmp
pop
jp
pop
sahf
sub
jbe
stos
jns
jno
mov
mov
lods
data16
fldenv
rorb
lods
dec
dec
arpl
dec
xchg
in
pop
bound
lret
pop
xlat
lcall
fs
sbb
add
in
sub
jp
mov
lea
cwtl
imul
pop
push
mov
das
pop
push
addr16
xor
sbb
pop
out
pusha
push
or
cmp
sub
out
or
lret
repnz
sbb
mov
ret
inc
cli
scas
rolb
adc
es
push
cmp
movb
and
and
std
lret
in
add
or
in
lahf
jb
push
or
fsubs
into
mov
fistpl
sbb
or
sar
or
adc
fdivrs
mov
sub
xlat
and
les
mov
pop
mov
scas
std
sbb
and
loopne
sti
sub
push
movsl
cmp
mov
mov
pop
dec
ret
testb
cmp
cmp
dec
lds
jle
inc
mov
or
negb
minps
sbbb
or
jg
mov
jmp
inc
dec
jl
sbb
xor
xor
adcb
dec
sbb
fmull
mov
ja
push
push
mov
sti
mov
xor
call
movsb
push
mov
paddw
xlat
cmpsl
addr16
call
push
insb
arpl
inc
pop
and
xchg
arpl
popf
mov
icebp
push
loopne
jecxz
les
fstpl
data16
fwait
dec
sub
mov
xlat
xchg
fiaddl
lahf
add
stc
loopne
push
pop
dec
lods
out
arpl
jns
mov
jl
inc
fcomip
add
fisubs
lret
sbb
mov
dec
stos
xchg
lock
jmp
inc
mov
das
mov
cmp
cmpsl
loope
cmp
rcl
mov
clc
push
mov
cmpsb
inc
push
lret
cs
mov
xlat
xor
push
test
lcall
push
mov
outsl
leave
dec
repnz
pop
sahf
xchg
or
out
stc
sti
mov
pop
mov
mov
cmp
gs
cli
xlat
mov
dec
jl
lods
push
std
jecxz
imul
cmp
scas
sbb
push
cli
cld
jl
ja
roll
cmpsl
push
add
sub
jo
push
shll
xor
inc
ret
adc
stos
push
popa
push
and
cmp
rcrb
enter
push
xor
push
orl
push
cmp
push
mov
scas
stos
ret
mov
and
shrl
and
sbb
call
xchg
xchg
sbb
xor
aam
mov
sbb
dec
enter
bound
push
je
xchg
pushf
repnz
das
push
jb
mov
testl
cmp
les
and
add
scas
pop
lahf
jp
or
sub
push
and
aam
xorl
xchg
js
stc
test
sub
cld
and
add
int
mov
shrb
sbb
pop
xchg
jg
aad
add
mov
jl
lods
testb
subb
mov
out
imul
orl
ds
dec
xchg
or
jne
insb
pop
mov
bndstx
lods
mov
ss
push
mov
dec
mov
push
xchg
adc
push
mov
mov
test
mov
mov
cmp
sub
cli
add
jmp
xchg
repz
sti
fbld
daa
add
dec
scas
cmpsb
mov
daa
fdivs
dec
jb
pop
xlat
fdivrs
or
adc
adc
mov
push
ror
int
mov
push
mov
dec
scas
mov
inc
push
xor
pop
cmp
and
ljmp
push
or
mov
push
flds
repnz
nop
and
out
arpl
aam
cmpb
sub
push
into
add
add
lds
dec
and
jns
aaa
arpl
mov
nop
sahf
cmp
cmpsl
sub
les
cmp
adc
pop
xchg
mov
xchg
mov
outsb
sti
xchg
gs
fsubl
call
cmp
mov
into
xchg
pop
cmp
ficoml
enter
add
push
sti
in
fldcw
jbe
add
push
cmc
lock
hlt
fcomi
lahf
scas
jae
push
xor
xor
push
adc
in
mov
mov
out
stos
pop
mov
aad
mov
jb
xor
out
popf
pop
pop
dec
cwtl
aam
mov
not
dec
jnp
mov
push
mov
xor
mov
jo
mov
pop
pusha
test
jmp
mov
fmuls
pusha
mov
rcrb
int
iret
pop
xor
rcll
push
ret
mov
sbb
outsb
sbb
xchg
and
jbe
mov
loopne
clc
push
mov
enter
imul
cwtl
pushl
popa
outsb
sbb
ljmp
sti
maxps
out
inc
movsl
les
sub
lods
test
fmull
pusha
inc
jmp
or
push
mov
xchg
into
mov
lret
sbb
sub
push
stos
lahf
lret
outsl
or
pop
ss
pop
fnsave
push
fidivs
fildl
rcrb
aad
sbb
mov
pusha
adc
in
jle
lds
mov
xor
sahf
repnz
add
mov
and
andl
insb
push
dec
mov
dec
les
mov
pop
scas
push
dec
or
rcrb
push
xlat
fsubs
dec
add
pop
dec
add
test
jbe
fdivl
xorb
jns
hlt
das
mov
mov
lods
add
aaa
dec
sub
dec
cmp
lcall
jle
xchg
adc
pop
lods
inc
cmp
pop
and
jg
jae
movsb
dec
mov
or
loop
inc
dec
les
jp
push
enter
mov
or
shrb
in
sbb
out
or
dec
out
and
adc
xchg
cltd
cld
int3
fsub
cmpsl
repz
ret
cmp
lods
jl
push
push
mov
rorb
shrl
sub
int3
popa
cmp
mov
sbb
daa
in
fwait
lods
xor
pop
jp
mov
shll
imul
or
jge
int
imul
mov
or
jno
pusha
xchg
ret
or
stos
mov
and
and
xor
das
pop
pop
lods
daa
jl
sahf
iret
clc
jb
xchg
add
cwtl
sbb
push
mov
dec
andb
cltd
imul
icebp
dec
pop
lahf
lret
outsl
scas
jecxz
test
mov
jl
xor
xchg
out
jl
adc
sbb
dec
push
pop
sbbl
and
mov
mov
or
int3
ja
sbbb
sbb
dec
lahf
test
loope
xchg
mov
xchg
outsb
ret
jnp
stos
lods
xor
sub
pop
leave
add
adc
adc
cmp
add
sbb
sbb
mov
repnz
ljmp
jne
pop
and
sub
mov
mov
out
xor
inc
movsl
int3
jne
call
in
cmp
add
xchg
push
and
aas
es
xchg
adc
adcl
imul
orb
fidivl
scas
mov
movsb
flds
xlat
inc
cmp
sbb
das
ficomps
sbb
sbb
out
movsb
cmp
fcomi
sbb
mov
xchg
or
cmp
xorb
mov
daa
std
pop
pop
xor
int3
jbe
sub
sub
imul
std
es
pop
cmp
xchg
jo
add
mov
sub
adc
sub
jne
lods
mov
cmp
or
mov
jbe
cmp
fcomps
test
lcall
cltd
lock
adcl
mov
mov
mov
xor
xchg
mov
js
ja
sahf
fwait
add
inc
push
mov
cmpsl
or
pop
aaa
sub
je
mov
and
ret
test
dec
xor
jbe
xchg
je
shll
fnsave
lock
or
in
add
adc
push
push
cld
jecxz
sti
stos
rcl
xchg
mov
add
add
cmp
out
mov
aas
pop
nop
repnz
sub
jnp
xchg
mov
lret
jmp
mov
mov
je
je
jnp
mov
inc
and
push
jnp
test
les
or
das
push
into
mov
cmp
fwait
arpl
adc
push
sub
inc
popf
lods
call
mov
mov
inc
push
clc
ljmp
push
jle
push
shlb
out
fists
icebp
in
test
fimuls
clc
jae
add
je
mov
mov
dec
jno
out
xor
cmp
jno
out
mov
dec
mov
lret
adc
lods
or
sbb
das
ret
sbb
add
rcr
mov
mov
xor
call
add
mov
mov
xchg
pop
inc
insb
lds
into
xor
xchg
xchg
cld
imul
jmp
mov
movsb
pop
mov
adc
sbb
in
pfmin
xchg
out
mov
insb
mov
push
mov
adcb
ret
jmp
popf
cmp
cmp
inc
data16
adcb
stc
push
fcmovnbe
push
pop
test
outsb
shrl
jns
push
loop
shll
xchg
repz
mov
stc
out
adc
les
je
scas
or
scas
gs
sbb
ss
imul
mov
dec
sbb
inc
add
scas
cmp
fcoms
push
ds
adc
ret
jbe,pt
dec
mov
pusha
es
gs
lcall
rolb
or
mov
dec
ret
fbld
in
es
andb
inc
out
fucom
fidivs
xor
ret
adc
cld
xchg
pop
popa
sub
repnz
cwtl
mov
push
stc
mov
stos
dec
orl
mov
push
adc
rorl
jb
sbb
repnz
hlt
inc
and
mov
pop
push
xor
push
icebp
jl
ds
leave
fmul
xor
mov
in
cmc
data16
test
test
ffreep
out
je
es
sti
mov
xchg
ficoml
std
lahf
mov
add
movsl
data16
jg
lret
push
inc
scas
cld
call
adc
mov
pop
inc
cmp
test
jns
imul
push
or
xlat
xlat
adc
push
pop
lock
xchg
sub
sub
ret
lcall
add
jae
and
or
js
lcall
jp
enter
dec
icebp
mov
jl
inc
out
push
nop
or
jae
fbstp
lret
cmp
loop
fstpl
mov
loopne
pop
loop
test
cmpsb
rcrb
cli
popa
push
les
std
movsb
lret
xor
dec
iret
push
popf
xlat
pushf
cmpsl
xor
mov
pushf
push
mov
pop
lea
nop
push
insl
stos
pusha
push
add
or
sbb
pop
pop
lret
leave
or
out
orl
popf
sub
imul
sub
rcrb
push
push
test
cld
lahf
fistpl
inc
and
clc
or
arpl
iret
gs
gs
dec
xchg
lock
cmp
leave
inc
cmp
xchg
lret
xlat
dec
cltd
lret
and
xchg
lcall
aaa
test
cli
divb
lock
out
arpl
push
in
mov
mov
sub
daa
lods
sbb
dec
lods
cld
mov
les
jns
out
js
int3
mov
push
mov
or
test
nop
push
add
clc
pop
mov
stos
pop
xor
and
loope
cmpsl
movsl
and
mov
xchg
popa
cld
jmp
inc
xor
cmp
and
xor
jne
ja
dec
push
std
aas
cwtl
dec
test
sub
push
jo
cltd
jmp
int
push
fsubrs
lahf
mov
and
and
addr16
hlt
and
cld
cmp
xor
dec
fwait
inc
shll
add
fldz
stos
and
add
lret
dec
xchg
addr16
sub
stos
add
adc
and
dec
data16
xchg
pop
xchg
mov
push
stos
stc
repnz
gs
mov
mov
mov
xchg
dec
repnz
cs
lods
fdivr
mov
push
ljmp
push
xchg
pop
rol
scas
mov
jle
in
je
inc
cmp
sbb
mov
push
push
sti
insl
mov
or
hlt
push
orb
pop
push
mov
scas
hlt
imul
rorb
and
pop
push
and
outsb
inc
push
lcall
imul
int3
cmpsb
fwait
mov
push
sbb
repz
scas
push
mov
push
rcrl
aas
cld
sbb
sub
lods
inc
xor
adc
push
dec
adc
mov
leave
sbb
push
in
add
das
out
out
adc
jmp
shll
mov
push
xchg
inc
cmpl
outsb
push
sbb
sub
dec
scas
adc
clc
test
stos
test
sub
push
jne
jno
jne
clc
adc
xlat
outsl
movsb
add
subb
movsl
pop
inc
add
xor
test
outsl
or
sarb
orl
xchg
cmp
lds
call
xchg
test
loop
and
test
sub
jnp
ret
adc
into
sbb
fstps
pop
loopne
or
in
out
cli
mov
push
jb
mov
lahf
les
lods
lock
sub
ffree
ds
pop
inc
xor
outsl
jg
cmp
clc
cmpsb
lods
cs
into
cmp
xchg
bound
repnz
fildll
mov
adc
add
cli
and
test
mov
daa
xor
scas
ja
mov
inc
nop
ss
push
adc
loop
pop
call
sub
cmpsb
pop
mov
aam
inc
loope
mov
iret
imul
cmp
push
outsb
push
or
mov
cmp
test
arpl
adc
and
mov
pushw
push
ja
pop
mov
dec
xchg
pop
std
js
jb
fwait
add
jne
pop
pop
test
int3
jp
inc
or
fbld
cmpb
mov
nop
les
bound
push
mov
add
test
push
lds
fisttpl
stos
inc
loop
popa
jbe
cmp
ss
mov
mov
pop
es
mov
pop
add
test
and
mov
jge
adc
int3
sub
push
lods
cmp
stos
adc
scas
adc
push
pusha
ja
push
sbb
ret
xor
outsb
mov
adc
shrl
cmp
mov
mov
xlat
fists
jl
inc
mov
xchg
subl
mov
pop
xor
sbb
daa
mov
cmp
stos
outsb
loope
sub
outsl
mov
mov
mov
in
jbe
xlat
mov
or
xchg
mov
xlat
mov
fstpl
test
jecxz
adc
dec
ss
inc
inc
std
dec
or
dec
inc
xchg
ficomps
mov
adc
push
fisubl
pop
shlb
bound
xor
sbb
pop
mov
mov
or
mov
mul
cmp
cmp
ret
or
lahf
add
xchg
out
push
push
in
pop
test
dec
sbb
mov
fildl
pop
mov
inc
in
xchg
ror
add
mov
hlt
add
loopne
fwait
shl
adc
and
lds
jp
imul
mov
cmp
lahf
shl
insl
pop
lret
fprem
nop
pop
or
scas
sub
lret
lods
cli
out
sbb
and
rolb
out
in
pop
sbb
sahf
push
jae
pop
jmp
sub
push
lcall
sbb
in
lock
push
cmpsl
iret
cmp
push
sub
pop
pop
xor
icebp
sbb
in
mov
sbb
xchg
and
out
mov
lock
mov
aam
call
mov
inc
jno
out
cmpsb
jbe
adc
lock
mov
mov
cmp
add
popf
das
repnz
lea
mov
jo
imul
jae
jns
fmuls
jp
mov
jle
stos
sbb
cmpsb
shl
aad
int3
mov
or
ret
dec
pop
or
jb
inc
pop
mov
xchg
cmpb
aam
xabort
rsqrtps
push
mov
xchg
repz
stos
orl
pop
xlat
cmpsb
into
leave
or
leave
hlt
leave
adc
sub
aas
in
jl
jne
jne
xchg
xchg
sahf
pop
outsl
leave
add
cmpsb
cmpsl
loop
repnz
loope,pn
lret
dec
data16
stc
fs
fidivrl
rcrl
mov
mov
in
in
jb
rorl
jo
int3
sub
xorl
lods
in
mov
pop
pop
jp
inc
xor
jno
xchg
popf
mov
push
sarl
movsb
and
or
sub
sbb
dec
out
sbb
decl
cmc
stc
sbb
je
xchg
push
iret
xor
aam
pop
xor
jmp
gs
cmc
push
divl
push
add
mov
xchg
jns
in
mov
and
addr16
sub
in
push
outsb
pop
pop
rcll
andb
dec
ret
sub
test
popa
mov
pop
enter
mov
out
add
loope
test
out
psubw
mov
ret
cwtl
ss
cmp
nop
or
jmp
daa
xchg
ja
inc
mov
jne
or
sti
data16
aam
jns
adcl
sbb
scas
stos
mov
cwtl
push
lahf
icebp
ds
adcl
call
mov
out
pop
pop
jo
test
push
push
mov
aad
js
push
ds
mov
xchg
and
into
push
bound
cmp
fisubs
pop
jno
lret
mov
jnp
in
out
mov
call
into
cltd
imul
cmpsl
nop
cwtl
cmpsb
je
add
xor
rcrl
jge
sarb
clc
fnstcw
aad
sti
test
adc
xchg
rolb
lea
sbbl
rorl
cld
int3
call
dec
iret
data16
test
jne
mov
jl
xchg
mov
mov
dec
es
cmpsb
rol
mov
scas
mov
mov
aam
add
int3
mov
ss
rcl
xchg
sub
add
inc
ret
push
pop
cmp
cli
add
in
clc
sti
cmp
movsl
mov
and
scas
xchg
mov
sub
dec
jp
jl
adc
sub
sahf
imul
xchg
and
mov
xlat
dec
cltd
xor
and
sarb
cs
or
lea
or
aas
cmp
outsb
jno
cmp
je
ret
pop
lds
sub
das
inc
sub
mov
xor
and
push
lock
or
call
popa
loope
dec
dec
mov
xchg
test
imul
shl
xor
out
jle
das
aad
jae
popf
sub
mov
push
jecxz
fcoms
sbb
adc
sub
push
test
call
push
jmp
sti
push
jl
test
scas
mov
xor
fwait
test
cld
sbb
xchg
lahf
mov
xlat
sbb
sbb
xchg
aam
cmpb
cmp
mov
notb
jmp
inc
sahf
add
xchg
data16
jb
out
or
sub
xor
dec
icebp
mov
sbb
adc
fucom
xor
dec
dec
scas
cmc
ret
mul
or
lcall
or
dec
and
inc
xchg
xor
sub
daa
imul
jne
sbb
cmp
mov
outsl
shl
push
pop
mov
cmp
push
mov
lods
inc
inc
adc
jp
push
mov
test
fwait
jbe
jb
mov
fisubrs
jge
pop
int3
mov
inc
mov
mov
loopne
roll
and
dec
xchg
sarb
mov
scas
lds
icebp
mov
sub
fwait
nop
scas
sub
leave
ss
imul
pop
sbb
test
mov
loop
mov
jp
dec
data16
fsubrp
in
xchg
imul
pusha
icebp
inc
mov
mov
pop
shlb
jecxz
je
adc
aam
je
xor
lods
pop
clc
fcoml
clc
lcall
fwait
and
push
imul
gs
pop
xchg
cmp
scas
xor
adc
in
sbb
mov
insb
pop
and
std
cmp
push
neg
jmp
shll
mov
push
lods
les
jp
mov
or
sbb
inc
or
pop
mov
cmp
and
add
add
sbb
and
cltd
jnp
mov
adc
aaa
and
mov
jge
mov
iret
mov
js
clc
cmp
ret
pop
flds
cli
fbld
test
xor
negl
adc
subb
pop
adc
aad
test
dec
mov
lods
pop
mov
fwait
iret
and
adc
pop
mov
jge
adc
packuswb
enter
cmp
pop
call
pop
push
bound
jmp
cld
repnz
cmp
and
sbb
jp
aad
xchg
das
xchg
nop
stc
xchg
rcll
es
push
test
cmp
clc
fimull
xor
xor
inc
xchg
rcl
inc
add
lods
popf
mov
xchg
test
sbb
faddp
incl
pop
mov
xor
xchg
mov
mov
test
lahf
ds
leave
and
sar
cli
jl
mov
cmc
jmp
je
insb
mov
mov
fisubrl
pop
mov
jmp
jno
sub
out
xchg
test
push
out
int
sti
pop
mov
adc
cmc
jo
aam
mov
dec
sahf
mov
cmp
insl
daa
dec
hlt
cmp
dec
xorb
or
pushf
bswap
push
cmpsb
dec
in
outsb
and
outsb
push
out
add
add
mov
fadds
subb
mov
adc
xchg
sub
fcoml
pop
fisubrs
lods
sbb
mov
stos
mov
dec
test
flds
or
and
or
incb
inc
lds
ds
dec
lock
les
dec
in
or
push
pop
jmp
pop
mov
mov
test
pop
sub
loop
sub
mov
out
leave
sbb
jno
punpcklwd
mov
xchg
pop
sbb
mov
icebp
jae
xchg
gs
dec
aad
int3
mov
push
pop
push
pop
lds
jne
aam
add
daa
push
loop
sbb
repz
adc
mov
femms
push
lcall
xor
mov
aas
xor
sub
mov
mov
fmul
inc
jb
inc
mov
pushl
nop
stc
xor
mov
mov
shl
cmp
xor
in
subb
push
loope
loop
cmp
pop
inc
lret
call
mov
cltd
outsl
mov
movsl
xchg
aam
mov
adc
mov
pop
xchg
xchg
ret
jle
into
mov
pushl
add
adc
inc
lods
cmp
pushf
jns
cli
fstl
jmp
add
in
stos
adc
scas
dec
pop
bound
xchg
or
fsub
in
incb
push
out
jne
filds
call
lock
je
and
test
jmp
xchg
std
repnz
stos
dec
insb
inc
cmc
inc
sub
mov
enter
and
mov
arpl
sbbl
or
pushf
shr
gs
cmc
add
sub
lods
jmp
popa
push
mov
dec
xchg
and
arpl
dec
addr16
cltd
or
mov
xchg
cmp
adc
andl
pop
inc
nop
rol
cmp
rorl
leave
rdmsr
rorl
cmc
xchg
in
adc
shl
xchg
scas
dec
pop
fisubrl
scas
jge
inc
jmp
stos
and
jl
out
add
xor
lret
adc
inc
daa
pop
fcompl
xchg
add
lods
xor
adc
lret
out
std
lock
or
lds
insl
in
js
shll
xchg
cmc
inc
jmp
xor
inc
jbe
jns
cli
gs
jg
daa
cltd
ret
cmp
xchg
das
jp
pop
adc
push
xchg
push
mov
and
add
mov
push
push
sahf
mov
sbb
add
loopne
fnstcw
add
stos
inc
fmul
insb
push
pop
inc
dec
test
cli
sbb
dec
dec
pop
fwait
cmp
dec
iret
mov
sbb
cmc
jmp
inc
call
fiaddl
adc
shr
inc
fcmove
ret
and
in
sub
sbb
stc
shrl
inc
mov
test
repz
mov
out
mov
cmp
push
sbb
scas
xchg
icebp
push
movsl
sarb
lcall
adc
movsb
in
iret
adc
sub
lock
repnz
int
pop
aaa
insl
js
push
out
xor
jb
cmp
dec
inc
out
daa
jae
push
pop
leave
xchg
adc
cltd
push
rclb
outsb
nop
lret
out
jecxz
mov
pop
cli
cltd
imul
pop
jnp
loop
and
cs
sbb
add
jns
loop
loopne
ret
popa
xchg
or
sub
xchg
scas
sbb
cld
jnp
inc
sub
sub
cwtl
jo
std
je
in
in
fxch
xchg
jg
data16
jne
jl
cmp
pop
lds
xlat
rclb
jmp
test
xlat
mov
jbe
xchg
push
add
nop
ds
cmp
mov
das
stos
aad
or
xchg
addr16
jge
repz
lret
out
lea
aam
push
or
push
repnz
ret
lods
sbb
test
mov
into
mov
xchg
movsb
lret
outsb
inc
lea
mov
xchg
cmp
nop
icebp
jge
dec
popf
push
loopne
xchg
push
jg
aam
les
andb
mov
adc
mov
push
sub
push
insl
dec
std
sbb
or
mov
mov
or
mov
mov
mov
addb
pop
ret
dec
dec
xor
sarl
add
jb
adc
out
push
and
or
fldl
mov
cwtl
sub
mov
sub
adc
dec
pusha
xor
lret
nop
and
pop
mov
lock
mov
nop
out
stos
in
arpl
lahf
inc
jmp
fisttpl
sbb
cli
aas
cwtl
in
loopne
pop
shlb
sbb
fwait
mov
push
leave
pop
pop
mov
dec
adc
fs
cmp
fcompl
mov
mov
xchg
push
pop
call
imul
mov
les
inc
mov
aam
inc
jl
dec
fcompl
mov
mov
lock
mov
fimuls
or
mov
sti
ficompl
xchg
in
fs
aaa
sub
pusha
inc
mov
ljmp
sbb
xchg
xchg
push
mov
or
fimull
push
inc
loope
mov
jp
insl
and
sbb
mov
mov
sub
jne
mov
xchg
and
pop
jno
mov
pop
and
bound
xchg
mov
push
mov
cmp
imul
clc
std
sub
mov
scas
mov
cmp
cmpsl
outsl
negb
stc
out
lret
imul
adc
daa
popa
xchg
pop
pop
fwait
dec
aad
fsubr
repz
pop
jo
mov
and
adc
cwtl
xor
pop
jbe
mov
mov
mov
jge
adc
push
scas
icebp
xchg
les
repz
sub
ss
mov
adc
out
hlt
dec
xor
mov
std
push
xchg
out
repz
lea
mov
adc
mov
imul
shl
dec
xchg
dec
push
sahf
mov
fcomps
je
push
outsl
push
test
bound
pusha
mov
cmp
out
mov
inc
mov
ja
dec
enter
les
out
xlat
inc
stc
in
fisttps
dec
nop
push
sub
pop
stos
push
inc
lods
push
movnti
data16
pop
cmp
daa
std
sub
je
sub
lahf
push
fists
je
ljmp
jge
dec
cmp
cld
popa
popa
repnz
cmpsl
cwtl
push
pop
jle
mov
jl
fnstsw
inc
outsl
dec
mov
lret
cmpsl
mov
jne
imul
mov
std
sti
jno
cmp
add
jmp
ret
imul
les
ds
repnz
in
mov
ljmp
pushf
js
dec
push
add
into
dec
or
add
cmpsb
aas
mov
fisttps
lock
aaa
insl
sub
xchg
dec
call
pop
jp
push
pop
je
mov
in
notb
lods
testb
lcall
fdivr
fnstsw
or
ror
sbb
fimuls
mov
rcll
leave
mov
xchg
adc
pop
xor
or
scas
roll
in
add
cmp
out
xchg
inc
data16
lret
rcll
pop
fisttpll
lcall
arpl
push
adc
es
daa
fcmovnb
and
nop
iret
adc
aam
aas
mov
lods
xchg
enter
cmp
popf
xor
mov
lods
loope
xor
pop
cli
jae
insl
mov
pop
rcrb
loopne
push
dec
test
add
lret
lret
add
loop
inc
shll
mov
mov
sub
pusha
pop
mov
mov
dec
movsb
and
jecxz
sbb
or
ss
pop
add
mov
lret
test
or
fnsave
lea
je
sub
je
mov
mov
jp
cli
or
inc
mov
scas
es
pop
adc
adc
aam
lods
adc
fldt
outsb
push
mov
jb
in
or
dec
add
jae
mov
aas
mov
ss
in
cmp
sub
inc
and
lods
push
imul
pop
mov
fucomp
add
push
std
lods
les
inc
fwait
dec
mov
mov
pop
cmpsb
hlt
fnstenv
lret
out
add
jle
divl
and
or
jecxz
outsb
test
call
xor
mov
jmp
push
mov
in
out
ret
or
shlb
iret
add
cmpsb
fistpll
out
mov
adc
loop
cwtl
mov
int
test
rorl
dec
push
popf
in
es
nop
push
fisubrl
test
aam
ffree
dec
adc
mov
mov
jmp
jmp
test
inc
push
idivl
rorl
test
pop
rol
fdivrs
pop
xor
aaa
mov
add
cmp
fdivp
pop
pop
jns
ds
and
pushf
sub
add
adc
out
dec
pop
lock
test
mov
pop
call
dec
pop
mov
hlt
fstl
nop
aam
or
push
ret
sbb
test
cmp
clc
jle
push
mov
cld
jno
push
ja
pusha
inc
mov
in
iret
insl
push
shlb
test
mov
bound
mov
mov
xor
aam
lock
inc
xchg
add
fwait
shll
mov
lds
ficompl
jns
test
push
aam
in
pop
test
xlat
sar
test
push
lock
aaa
sub
nop
pop
mov
andb
imul
lods
jle
test
cmp
and
loop
cmp
pop
lods
jne
std
cmp
push
test
push
lret
adc
lcall
je
clc
mov
test
cmpb
popa
shrb
fiadds
sub
hlt
icebp
imul
std
dec
es
jmp
cmp
cmp
adc
and
adc
out
hlt
add
or
mov
mov
cmp
stc
int
adc
xchg
setnp
mov
jno
test
fs
push
xor
clc
mov
sbb
mov
out
dec
jno
mov
pop
ror
mov
mov
rolb
cmp
repz
mov
scas
lret
sbb
sub
mov
and
and
or
adc
mov
push
pop
es
lea
js
gs
dec
ja
mov
std
cli
lcall
mov
movsl
out
xchg
stos
into
ficoml
cmpsb
inc
fimuls
xchg
dec
rcll
fdivs
mov
add
push
and
adc
sar
stc
xchg
adc
icebp
adc
sti
test
scas
mov
jne
or
lret
std
fwait
stos
xor
jmp
sub
ret
pop
mov
aam
in
mov
inc
pop
mov
je
sahf
in
lods
mov
inc
out
decb
push
test
add
movsb
or
addb
adc
sarl
mov
pop
cmp
pop
stos
je
mov
sub
out
lods
xchg
mov
inc
movsb
sbb
ret
jmp
push
pop
nop
cld
dec
fcomps
test
aaa
or
pop
xor
pop
enter
xchg
jnp
and
sbb
dec
sub
aaa
mov
jne
mov
mov
cmp
mov
dec
cmc
lret
jp
xchg
mov
sbbb
push
jmp
fst
pop
mov
scas
ret
mov
mov
leave
sub
cs
enter
adc
xor
jg
sub
push
sub
gs
xchg
jb
adc
sub
xchg
inc
lock
lods
lea
jo
ret
inc
cmp
inc
mov
cmp
or
push
jmp
push
pop
cmc
cli
outsl
xor
popa
inc
pop
ja
cmovle
scas
lds
sbb
shl
pop
mov
mov
ret
mov
and
pop
sbb
add
loope
jg
into
aas
fnstcw
pop
pop
inc
adc
push
cmp
push
movsb
push
xchg
int
or
scas
sbb
aas
mov
pop
dec
jmp
sbb
fdivrs
mov
jbe
sbb
stc
mov
lahf
sahf
push
xchg
push
pop
dec
mov
cld
inc
aam
pusha
pop
mov
into
jne
cltd
mov
pop
pop
stc
scas
repz
je
xlat
enter
adc
repnz
jns
ret
inc
xor
mov
call
lret
data16
jbe
mov
add
stc
lea
cmc
jecxz
arpl
mov
insl
or
cli
sti
push
ud1
adc
lods
mov
enter
int
mov
scas
push
pop
lods
loopne
mov
dec
or
and
ds
mov
test
stos
ret
cmp
push
jno
cli
in
loope
mov
sti
push
out
cmp
dec
fs
out
outsb
stc
jbe
cmp
scas
inc
inc
jo
sbb
sbb
shll
and
loope
mov
gs
add
or
lret
fprem
es
idivb
sbb
bound
shlb
aas
sbb
or
push
lret
and
hlt
std
and
pop
repz
push
test
pop
testl
xchg
in
ljmp
sub
cmp
dec
push
jae
mov
jbe
sbb
xchg
je
sbb
js
js
add
mov
outsb
lea
cwtl
push
cld
arpl
pop
and
test
cs
addb
push
outsb
push
push
jns
dec
xor
inc
iret
rcll
pop
lret
xor
adc
cwtl
add
adc
inc
repnz
push
mov
mov
scas
pop
xlat
das
mov
inc
dec
outsb
pop
popf
movsl
outsl
outsb
scas
or
testl
inc
xchg
ja
movl
mov
jl
loope
mov
aad
insl
aaa
sbb
lcall
pop
lds
lret
loopne
pop
inc
and
imul
push
call
aaa
cwtl
xchg
mov
add
pop
out
loop
dec
inc
fidivrl
les
add
xchg
iret
xchg
std
jae
jb
push
xor
pop
inc
repnz
cwtl
mov
sahf
loop
lret
imul
cwtl
lods
sbb
or
cld
aad
xchg
and
addr16
cmp
stos
mov
adc
sbbl
fnsave
shlb
popf
cmpsl
rcrl
pop
cltd
fiaddl
mov
pop
push
icebp
dec
cli
pop
xor
icebp
addr16
xor
adc
mov
mov
data16
popa
loop
iret
mov
test
sbb
xor
pop
sub
and
pushf
mov
in
outsb
xchg
pop
sbb
into
enter
xchg
aaa
jecxz
loop
test
daa
fwait
lea
popf
sahf
ja
xchg
jb
pop
iret
mov
test
adc
adc
es
fwait
andl
dec
je
and
mov
adc
les
adcb
fdiv
cld
ret
aad
ret
adc
or
in
push
push
cmpsb
iret
sahf
mov
cmp
pop
fmul
push
jbe
mov
cmp
jb
mov
pop
mov
xchg
and
lahf
push
loope
push
int
push
sbb
push
or
xchg
mov
aad
xor
adc
repnz
xor
xlat
arpl
inc
sub
test
fdivrp
ss
add
int3
add
sub
subl
sub
adc
or
xchg
inc
scas
mov
pushf
add
sbb
adcl
fs
iret
subb
mov
xchg
lods
add
das
xchg
stos
fwait
out
pop
pop
gs
cltd
jne
nop
xchg
mov
nop
and
bound
mov
xchg
xor
add
mov
pop
inc
pop
cmp
js
ljmp
pop
and
xchg
dec
adc
mov
iret
int
ret
or
test
inc
mov
ret
ret
push
or
jmp
jnp
in
ljmp
daa
es
adc
xor
mov
pop
rcrl
in
rol
xor
sbbl
mov
push
fistps
clc
xor
cmp
jns
clc
aas
lds
xor
mov
sub
or
imul
pop
push
mov
movsl
cmp
cmp
dec
in
pop
sub
mov
xor
adcl
jmp
xchg
adcl
fdivs
clc
pop
mov
xchg
cmp
cmpl
and
xchg
sub
stos
jle
mov
add
mov
push
ret
inc
daa
sbb
lock
inc
push
lods
stos
cmp
fcomip
sbb
push
xor
add
outsl
mov
dec
and
lock
cwtl
xchg
cmpsb
dec
fmull
loope
data16
push
fsubr
sub
xor
repz
fsubl
mov
jno
rclb
test
cwtl
and
xchg
xchg
pushl
pop
rcpps
xor
dec
subb
leave
push
and
jp
or
inc
arpl
cmc
mov
push
adc
ss
int
and
mov
jmp
pop
in
sbb
pop
repz
outsb
xchg
pop
pop
test
xchg
cs
dec
mov
cmp
flds
aam
or
sbb
mov
ja
jb
ljmp
dec
sbb
xchg
xor
mov
out
mov
test
mov
adc
and
and
lahf
adc
push
and
sbb
xchg
inc
sub
fcoms
sub
fisttpl
jg
inc
pop
jg
mov
stos
add
inc
adc
test
dec
lcall
xorl
lret
mov
push
dec
jmp
hlt
sbb
and
pop
adc
mov
cmc
xchg
movsl
push
mov
pop
loop
sub
dec
test
push
in
out
xchg
and
inc
jmp
jle
lds
xor
in
subl
cwtl
test
jmp
ljmp
lret
dec
cltd
cmp
in
divb
cltd
mov
xchg
inc
push
ljmp
stos
mov
in
dec
sbb
sub
push
sbb
mov
xchg
fsubrp
repz
int
stos
add
dec
lock
sbb
xchg
xchg
jge
and
or
ljmp
xchg
push
mov
add
fildl
mov
js
jl
inc
scas
dec
mov
dec
jnp
xchg
jo
jns
aam
loop
xchg
sahf
pop
mov
mov
mov
faddl
ja
aas
stos
sahf
pop
cmc
xchg
test
mov
cmp
aad
fucomi
jge
mov
in
xchg
mov
or
inc
pop
xor
and
gs
xor
arpl
jl
outsl
xchg
into
xor
shrb
jg
or
or
sbb
xchg
das
pop
out
mov
cs
test
arpl
xchg
ljmp
push
loop
mov
sbb
rolb
inc
inc
push
shl
mov
out
push
loopne
pop
testl
in
mov
movsb
jp
push
cltd
cwtl
mov
cmp
scas
pop
sbb
pop
jae
or
sbb
mov
enter
jbe
mov
jl
jo
mov
and
mov
mov
popa
jae
dec
inc
out
dec
or
xchg
cs
jnp
std
xor
add
cmpsb
inc
fidivs
call
cmp
clc
test
insl
push
xchg
or
inc
popa
stc
cwtl
icebp
popf
mov
dec
dec
dec
or
imul
pop
sti
mov
adc
dec
xchg
je
and
push
mov
popa
dec
inc
imul
push
lahf
xchg
test
loopne
fildll
adc
ljmp
ja
shll
jne
scas
jo
in
inc
lock
mov
test
in
push
xor
cld
cmpsl
mov
mov
gs
or
mov
mov
adc
push
shll
push
add
jl
loope
xor
mov
mov
out
pop
fistpl
rolb
dec
mov
dec
push
scas
pop
mov
lahf
cmp
loope
aam
and
aad
mov
dec
and
shll
leave
sbb
pop
and
ds
movsb
pop
scas
inc
mov
clc
in
add
outsb
push
and
daa
test
nop
adc
add
push
inc
into
mov
daa
push
ficoms
inc
jge
in
sbb
mov
or
adc
inc
mov
aaa
gs
cld
mov
xchg
mov
cmp
xor
fcmovnbe
into
stc
mov
cmc
mov
jle
mov
lods
nop
repnz
lret
outsb
mov
mov
cs
cmp
rcll
push
dec
jl
insl
jg
ret
test
or
adc
imull
test
insl
jp
mov
or
xlat
rcrl
fildl
jle
nop
lods
divl
xchg
in
imul
inc
ljmp
daa
pop
and
cmc
scas
jb
inc
or
mov
je
ret
dec
test
lahf
adcb
lcall
test
lock
dec
xchg
adc
cmc
sbb
dec
stos
pop
daa
gs
scas
mov
in
jmp
test
sub
jg
cli
jl
nop
dec
sbb
mov
xlat
sbb
inc
xchg
dec
pop
dec
repnz
mov
hlt
mov
sbb
mov
cmp
pop
notb
sub
out
cmpsb
in
in
pop
test
pop
fidivs
sub
ljmp
lret
fnstcw
push
mov
lea
call
icebp
add
iret
out
cmp
cli
in
sbb
xchg
ror
mov
jno
mov
or
popl
lods
hlt
sub
sub
mov
enter
sub
and
push
xchg
xchg
xor
out
jl
sbb
sub
adc
adc
in
push
jmp
cltd
aam
mov
jb
mov
pop
jge
jne
xchg
xor
jbe
incl
incb
and
cmp
xchg
popf
xor
sbb
movsb
mov
fldcw
loop
cli
leave
mov
dec
mov
xchg
dec
out
fisubrs
cmc
mov
xchg
in
or
lret
fmull
jecxz
je
mov
xchg
push
sbb
ljmp
call
pop
jle
mov
cwtl
aaa
mov
cld
lret
xchg
pop
sub
test
pop
cmpsl
push
test
mov
dec
jnp
clc
mov
xchg
pop
or
dec
flds
and
xlat
jno
imul
rcl
out
faddp
fisubrs
xor
jmp
pop
rorb
mov
jae
pop
sub
add
cld
fucomp
inc
cs
xor
adc
out
insb
jbe
ret
test
dec
enter
lock
add
xchg
ljmp
mov
daa
in
std
shrl
xchg
pop
inc
jo
int3
loop
out
xchg
arpl
insb
mov
ret
push
sbb
push
out
jmp
aas
gs
xchg
xchg
mov
xorl
test
bound
xchg
cmp
adc
fnstenv
gs
mov
inc
push
scas
loope
jae
mov
arpl
xchg
cmp
pop
outsl
sahf
adc
adc
inc
push
es
daa
into
xchg
push
movsl
orl
xor
and
aaa
mov
das
mov
test
std
fcompl
cmpl
addr16
addr16
dec
fisubl
jae
jae
cmp
test
or
ret
pop
and
xor
jmp
daa
dec
cmc
dec
push
sub
pop
add
or
aam
cmpsl
push
repz
lods
popf
nop
imul
ss
fsubl
adc
loope
es
mov
mov
inc
daa
xor
mov
pop
icebp
lods
and
jmp
add
xorl
aaa
dec
mov
mov
insl
dec
jns
cs
cwtl
sbb
sub
mov
dec
cs
inc
sub
sbb
sbb
cmp
or
std
xchg
xor
hlt
in
fs
call
pusha
std
mov
or
inc
push
in
mov
aad
or
scas
cmp
and
xchg
in
pop
inc
mov
mov
lret
sarl
dec
stc
adc
lods
and
fisttpl
jnp
dec
xor
mov
test
push
pop
out
push
lods
mov
sbb
rcl
jns
inc
or
clc
jmp
xchg
xchg
mov
mov
xor
outsl
in
shlb
pop
bound
push
cli
push
pop
mov
pop
cld
hlt
repz
fdiv
daa
cmpsb
mov
dec
les
xor
and
js
cmc
cli
stos
sbb
mov
pop
inc
movsl
stos
and
leave
jl
movsb
inc
ret
pop
mov
out
mov
ljmp
lds
ljmp
jge
inc
mov
mov
aas
push
les
cld
icebp
sbbb
cmpsb
lret
jnp
aaa
sbb
add
lret
aam
pop
faddl
jge
lods
ljmp
jae
mov
and
ret
outsl
movb
pushf
out
out
cld
rorl
aad
pop
notl
jae
test
mov
pop
xchg
xor
or
mov
scas
sbb
ss
and
lock
rcrb
test
std
bound
ret
gs
call
test
scas
or
fld
icebp
dec
mov
push
lods
das
xor
add
cmp
pushf
enter
push
cmovo
stos
mov
lahf
and
lahf
popa
lahf
aas
mov
test
pop
sub
adc
xchg
jmp
jg
pop
mov
ja
rcll
imull
insl
pop
hlt
and
dec
inc
ret
mov
jecxz
adcl
leave
xchg
push
fs
jle
inc
les
iret
ret
pop
jno
fcoml
jg
ret
mov
fisttpl
sub
jnp
aad
dec
push
sti
add
pop
cs
out
pop
push
xor
add
cltd
jne
daa
adc
scas
es
divl
mulb
fstpl
sti
ret
ja
pop
inc
mov
stos
mov
jns
cmc
push
sub
test
cwtl
xchg
lret
push
out
lea
cmp
fidivrs
sarb
sub
imul
iret
jno
mov
aas
and
mov
fsubrl
cmp
mov
adc
scas
and
sbb
xlat
pop
lds
xchg
push
js
xchg
mov
outsb
ret
cmp
jnp
or
mov
in
notl
mov
int3
and
scas
cmp
rclb
xchg
je
or
xchg
add
xchg
adc
pop
dec
mov
ret
cmp
inc
pop
mov
inc
jne
mov
push
repnz
out
jo
sbb
dec
sub
dec
jmp
jle
mov
ljmp
std
movsb
jge
fs
addb
add
sbb
lods
mov
pop
js
mov
mov
add
movsb
xchg
xchg
fldenv
insl
jg
push
push
dec
loop
mov
pop
out
popf
jp
cwtl
sbb
inc
adc
lret
add
cltd
call
rolb
cmp
mov
add
jl
in
dec
outsb
xchg
pop
pop
fidivs
inc
push
add
push
push
and
sub
pop
inc
jo
mov
sub
add
xor
movsl
ret
mov
fwait
repz
adc
lods
pop
loopne
cmp
sub
mov
std
add
sbb
pop
sub
pop
frstor
mov
test
ret
add
bound
ljmp
and
jo
lret
push
or
ja
bnd
push
cli
push
mov
jg
or
arpl
pop
stc
jae
ret
inc
pop
sbb
push
pop
in
fsubl
pushf
nop
fdivp
or
bound
outsl
dec
and
out
dec
dec
add
jmp
popa
sbbl
setg
xor
push
jb
dec
xchg
daa
ret
cli
or
inc
popf
xor
inc
enter
jle
stos
lldt
sbb
enter
or
jb
push
jge
mov
gs
inc
inc
sub
mov
push
cmp
sti
and
movsl
test
pop
stos
mov
adc
push
test
push
sub
sarb
add
push
inc
and
out
out
filds
cmp
mov
cmp
sti
xchg
mov
pushf
pusha
jg
cs
frstor
lcall
jecxz
test
pop
js
add
mov
mov
mov
pop
mov
test
mov
adc
push
xor
cmp
stc
or
mov
cmc
adc
cmp
sbb
mov
jecxz
movsb
nop
movsb
jg
pop
push
cmp
scas
push
cmc
jb
xchg
test
sbb
inc
jns
pusha
sbbb
jl
cmpsb
dec
ja
pop
shl
test
xchg
ret
shr
mov
loop
aad
sub
xchg
push
insb
push
pop
fs
jl
or
lea
mov
add
or
sbb
jle
mov
add
sti
enter
pop
cmc
cmpsb
mov
adc
cmp
pop
push
cmp
sti
adc
repnz
xchg
test
test
xchg
jecxz
movsl
or
imull
std
cmp
adc
inc
jnp
sub
mov
fdivr
mov
or
lock
jecxz
xor
push
mov
fsubs
xchg
pop
fs
adc
test
xor
cmpsl
mov
ds
and
cli
sahf
jecxz
push
leave
xor
jno
or
jno
rclb
jmp
and
xchg
inc
xor
mov
repnz
jnp
js
lock
mov
dec
jae
out
xchg
or
aad
stc
aaa
dec
mov
in
jge
out
dec
xor
cwtl
repz
scas
xor
cltd
jo
icebp
push
aas
lahf
and
xor
daa
jns
xchg
mov
notl
out
aaa
pusha
aam
mov
mov
insb
sarb
xchg
daa
cmpsl
out
xchg
enter
aad
cld
and
insb
push
xchg
repz
dec
test
or
pop
hlt
xchg
sub
sbb
lods
cld
inc
jb
std
lock
push
push
xchg
fldcw
repz
add
ss
in
outsb
insb
cld
push
xchg
mov
push
adc
out
dec
sub
lods
sub
lret
inc
ja
test
or
jl
dec
fldenv
xchg
fcmovnu
xchg
aad
rcll
mov
inc
push
sub
xor
pop
mov
daa
push
add
xchg
dec
and
pop
cmp
sti
sbb
xchg
inc
fisubl
jbe
adcb
arpl
or
inc
sarb
in
push
cwtl
xchg
das
std
cwtl
sti
sbb
inc
int3
add
jmp
xchg
mov
and
in
cmp
adc
xchg
mov
dec
ret
iret
dec
dec
xchg
cmpsb
subb
pop
pop
out
mov
popf
daa
sarl
enter
popa
push
push
shrb
mov
xchg
roll
lods
jno
push
mov
xor
int
leave
dec
test
push
sub
dec
push
jo
movsb
cmp
sahf
xor
adc
add
outsl
mov
outsl
fmul
loope
rclb
jmp
push
mov
movsl
loop
and
push
int
dec
xchg
adc
and
lods
in
jb
xor
imul
push
cmc
jbe
adc
sbb
mov
cmp
rcrb
std
add
scas
mov
js
xchg
jg
cld
inc
jg
insl
enter
dec
mov
or
xor
cld
scas
adc
jo
fcoms
pop
out
sahf
push
cmpsb
dec
add
ljmp
ss
mov
fcomip
sub
cs
jp
cmpsl
clc
push
imul
fdivrl
pop
sub
leave
shrb
jo
pop
jnp
dec
dec
fmul
scas
repnz
mov
cmp
xchg
sub
pop
and
push
lcall
and
mov
inc
mov
sbb
notb
bswap
mov
cmp
pop
mov
jnp
jae
and
lahf
jb
cmpsl
mov
sub
push
rolb
push
fildll
mov
je
dec
adc
int3
pop
aaa
xor
jg
xor
xor
xlat
and
movsb
mov
jl
push
jg
inc
xchg
mov
add
xchg
xor
popa
cmpsb
xchg
ljmp
push
cs
inc
mov
xchg
dec
leave
loopne
push
and
cltd
loope
bound
sbb
addr16
jae
xor
dec
fistps
mov
mov
pop
pop
fisubrl
imul
aam
test
dec
xchg
adc
test
jno
dec
outsb
loope
mov
ret
cmp
shl
nop
dec
ljmp
imul
cmp
dec
adc
mov
xchg
loope
mov
lds
cmp
jne
out
rcr
add
mov
aas
sub
pusha
inc
icebp
and
movsl
push
aad
jg
jne
daa
pop
xor
mov
push
js
mov
popa
insl
pop
mov
dec
lahf
loope
push
out
cltd
pop
ljmp
jge
mov
pop
lods
and
or
test
or
fwait
push
adc
mov
push
mov
lds
loopne
ror
adc
sub
cmpsl
repz
mov
fwait
xchg
in
inc
xor
scas
sti
xor
pop
or
or
imul
jns
xor
les
ret
and
lret
push
or
bound
mov
in
pushf
faddl
mov
popa
adc
addr16
and
jge
in
mov
adc
fstpl
out
push
or
add
clc
pop
fmuls
out
fmull
int
idivl
mov
jmp
or
fcmovne
mov
push
scas
imul
pop
std
xchg
cmpsb
fildll
dec
stc
jo
add
jae
mov
imul
aad
fisubs
xlat
mov
fdivl
push
adc
fbstp
jle,pn
push
sub
std
push
and
xchg
popf
repnz
ffree
lret
inc
mov
int3
or
xchg
inc
xchg
shrl
jg
mov
mov
adc
insb
jle
jp
ljmp
xor
adcl
jecxz
leave
and
pop
mov
push
xchg
mov
cltd
jle
pusha
sahf
fdivs
or
hlt
enter
sbbl
sub
sbb
push
ja
or
or
mov
in
jecxz
adc
adc
dec
and
cmp
stos
lret
jne
dec
jne
call
sahf
inc
and
sahf
lea
fwait
inc
fdivs
fs
push
loop
out
bound
mov
mov
add
mov
jbe
outsb
mov
movsb
mov
mov
xor
xchg
mov
or
jns
sub
inc
test
sub
and
add
outsb
in
and
repnz
pop
daa
aaa
mov
push
rcrl
arpl
les
cmc
hlt
inc
mov
adc
mov
pop
lret
cmp
mov
inc
jp
out
clc
push
adc
js
pop
dec
push
pop
jmp
call
insl
loop
pop
dec
lcall
add
addl
and
sub
dec
loop
les
scas
ret
mov
mov
scas
sub
call
flds
lea
frstor
lds
popa
movzbl
lret
shrl
or
or
mov
leave
loop
fcoms
push
jae
fsubs
popa
outsl
sub
ljmp
mov
mov
pop
jg
sbb
into
cmp
jb
xchg
jmp
pop
push
pop
xor
addl
xor
and
imul
sarb
daa
xchg
leave
and
add
rcl
stos
inc
fxch
and
mov
sub
mov
shll
aam
das
in
cwtl
xchg
ds
call
js
stos
adc
sub
xor
fnstenv
jns
push
lea
ficomps
push
cmc
jg
pop
xchg
leave
adc
into
jb
cmovl
enter
movsl
out
pop
loope
fsubr
jl
push
sbb
or
and
xor
sub
push
test
add
jns
cmp
lods
loopne
stos
inc
rcl
movsb
mov
rolb
jmp
daa
fldenv
adc
enter
push
mov
mov
fmuls
xchg
mov
stos
xor
lret
and
out
int3
push
push
mov
xlat
shl
inc
mov
scas
ret
push
jg
jb
aad
and
cmp
repz
sahf
jnp
in
shll
cmp
addl
fwait
repz
xchg
aad
mov
sbb
and
mov
fldenv
xchg
xor
notl
aaa
rorb
xchg
mov
cmp
cmpsb
in
mov
push
pop
loopne
xchg
stos
shll
push
mov
inc
cmp
mov
push
xor
push
movsb
pop
pop
lods
inc
sbb
fstps
gs
ljmp
mov
and
test
pop
stc
or
ljmp
cmpsb
pop
jge
xchg
outsl
xor
daa
lea
push
and
ret
out
jg
repz
mov
mov
xchg
decl
jg
out
in
popf
jbe
clc
push
ret
pop
andl
mov
jae
and
pop
std
mov
mov
cltd
xchg
lods
xchg
sub
fadd
xlat
test
cpuid
mov
aad
jecxz
push
iret
mov
mov
iret
inc
insb
jge
push
andl
sahf
push
in
inc
mov
stos
test
xor
and
jmp
icebp
sti
imul
cwtl
jp
fwait
movsl
movsl
pop
push
insl
js
les
jae
fidivrl
jmp
inc
and
mov
dec
jo
fucomp
mov
imul
fldl2e
scas
in
out
outsb
add
jno
cmc
push
loopne
sub
push
mov
pop
ret
jno
jg
jne
cmp
pop
shlb
ja
ss
mov
add
loope
xchg
jle
ficoml
dec
mov
test
sbb
jo
les
cmp
sub
fwait
cmpl
negl
push
out
adc
sti
and
fidivrl
movsl
add
das
cmp
and
mov
jecxz
jmp
mov
scas
js
or
mov
push
test
xorb
or
jo
sub
push
xchg
test
xor
mov
push
dec
mov
jnp
aad
outsl
jle
cmc
sbb
sub
mov
cmpsl
hlt
and
out
sub
mov
pushf
and
dec
mov
cmp
xor
cltd
out
outsb
rorb
xor
push
mov
xchg
pop
test
mov
mov
inc
nop
xor
xor
jp
pop
pop
sarb
cltd
pop
int3
cs
sti
and
mov
push
sub
lret
cmp
bound
dec
pushf
aam
loope
lahf
inc
ficoml
jl
mov
cmp
bound
bnd
and
imul
or
fidivs
sub
outsb
push
sub
outsl
mov
jb
bound
lods
mov
adc
mov
pop
add
and
test
pop
jmp
lret
xchg
scas
das
mov
jnp
jb
push
lds
push
dec
pusha
aam
adc
cltd
in
adc
sbb
sahf
and
pushf
lret
cmpl
mov
mov
sub
cmp
leave
int3
ss
push
mov
mov
dec
lods
push
cmpsl
sbb
mov
icebp
popa
pop
and
inc
in
push
and
enter
bound
push
mov
rcrl
and
mov
enter
scas
ljmp
leave
js
fsubl
mov
xchg
repz
sbb
divps
push
fiadds
mov
cltd
mov
jmp
jbe
mov
jge
jns
pop
fwait
pushf
mov
cltd
xlat
pop
cmpsl
push
jge
in
negb
push
out
sub
pusha
dec
test
stos
dec
cltd
jge
frndint
lcall
ja
add
add
scas
int3
add
adc
jae
or
xchg
fwait
or
push
int3
test
jg
jae
mov
jbe
jmp
imul
andl
ficomps
dec
jo
xor
shlb
xlat
inc
mov
loop
jne
lcall
in
dec
aas
cwtl
xchg
sub
lock
lea
pop
xor
shl
add
push
pop
movsl
cwtl
add
cmp
push
scas
xor
aad
std
int
aas
mov
push
sbb
imul
push
stos
sbb
adc
int3
pop
mov
inc
lcall
mov
and
adc
mov
cmp
daa
mov
ret
fs
inc
xchg
loopne
stos
dec
mov
loope
xchg
stc
pushf
mov
ja
mov
pop
nop
push
and
test
xchg
std
fildll
dec
pop
in
sub
adc
leave
dec
mov
sbb
jne
fadds
cmpsl
daa
stos
mov
xchg
ss
xor
mov
dec
imul
push
and
push
pop
jmp
das
dec
repnz
dec
fisttps
mov
scas
lods
fstpl
xor
mov
lods
out
test
or
std
sbb
pop
xlat
jnp
leave
cmp
loope
xchg
cmpsb
popf
fiaddl
out
xchg
lods
cmpb
ds
add
ret
add
das
int
fdivs
inc
pop
jg
ja
ljmp
test
rorl
sub
cmp
and
xchg
std
and
mov
and
rorb
cmp
add
dec
test
adc
push
pop
out
mov
pusha
rclb
ljmp
push
xchg
daa
in
arpl
add
and
xor
add
stc
lods
pop
sbb
xor
pop
popa
pop
in
pusha
jns
rorl
xchg
xor
ds
or
add
aaa
sbb
or
aaa
push
data16
pop
cmp
mov
lock
mov
ljmp
cmpsl
movsb
mov
dec
lahf
arpl
sbb
ss
cld
out
dec
lahf
sbb
mov
into
lcall
lret
mov
and
in
ret
xor
dec
jne
ss
test
lahf
dec
shrl
shll
test
imul
out
or
jp
dec
jmp
cmp
xchg
xor
push
lret
pusha
xor
icebp
inc
test
lods
xchg
cmp
mov
out
inc
pop
aas
jne
out
xor
jp
leave
rcll
xor
js
sub
fildl
push
lods
and
enter
mov
sbb
pop
rclb
jns
adcb
xchg
cmp
sbb
mov
inc
push
or
jle
mov
std
or
in
bound
stos
adc
mov
adc
inc
and
cmc
test
xchg
pop
nop
lcall
int
addr16
rorl
mov
dec
pop
lret
sti
insb
push
jnp
mov
cmp
jnp
cmpsb
cmpb
jg
push
jecxz
jbe
sub
mov
add
xlat
mov
inc
pushf
shll
gs
xchg
xchg
jle
shr
pop
call
or
ret
rcll
shll
xchg
mov
mov
lcall
pop
scas
daa
in
sbb
push
push
das
jns
mov
jge
add
iret
pop
inc
mov
xor
sbb
out
push
mov
pop
and
into
mov
adc
dec
fs
jle
stos
xchg
mov
nop
cwtl
pop
dec
mov
pop
mov
pop
inc
push
adc
push
push
outsl
pop
inc
push
jb
add
lahf
sbb
ja
adc
es
out
dec
lods
xchg
sete
mov
js
xor
mov
imul
out
lock
cli
addl
xchg
mov
sub
sub
xor
cmp
pushf
adc
lret
adc
push
cld
mov
dec
mov
add
sbb
inc
mov
lahf
cli
or
fst
mov
mov
mov
xor
sub
jp
hlt
call
lahf
mov
xchg
movsb
push
sbb
push
ss
arpl
sub
push
xchg
and
xor
mov
test
aad
arpl
gs
dec
push
lods
pop
mov
adcl
int
popf
arpl
add
sub
test
mov
sub
mov
dec
and
xor
call
pop
mov
push
pop
movsl
in
mov
repz
sbb
dec
lahf
pop
xchg
iret
jmp
shll
dec
sub
dec
jne
insb
mov
lds
cmp
xor
flds
sbb
sub
push
add
sbb
mov
pop
adc
cmp
push
out
add
lret
in
mov
idiv
insl
outsl
mov
das
ret
xchg
sbbb
call
cmp
mov
in
sbb
lea
inc
cld
repz
and
or
mov
mov
rclb
mov
xor
lds
mov
movsb
pop
mov
xor
ja
pop
jp
mov
das
stos
lea
dec
dec
fnstsw
mov
adc
pop
xchg
sbb
ds
cmc
cs
add
out
and
orl
sub
into
pop
sub
mov
mul
lods
mov
push
pop
or
nop
aaa
sbb
xorl
adc
inc
jl
sar
push
je
in
and
ss
test
jge
push
jno
cmp
rorl
ss
xchg
push
gs
jne
mov
sbb
test
adcl
xchg
inc
in
ret
sbb
lods
cld
mov
and
std
subl
cmp
lahf
and
xchg
sub
push
arpl
sub
pop
scas
push
dec
inc
push
jno
cmpb
push
or
into
jmp
das
in
mov
cmpsl
and
test
sbb
mov
push
loopne
insl
inc
add
out
enter
jle
xor
lea
je
rorb
ljmp
daa
shlb
stos
xor
dec
inc
xorb
mov
xchg
stos
xlat
push
adcb
fwait
jge
mov
adc
cmc
mov
js
and
sbb
cmc
jle
mov
add
inc
int
sbb
movsl
push
sahf
and
pop
fbld
rolb
testl
mov
lea
or
mov
mov
repnz
xor
or
pop
xlat
flds
in
xchg
gs
or
shll
ss
stos
icebp
mov
out
sub
xor
add
std
jno
aad
xor
iret
xor
repz
or
fbstp
pushf
xor
jo
scas
stc
jecxz
mov
sub
pop
mov
es
pop
inc
sbb
icebp
pop
sub
stos
insl
sub
pop
sar
sti
and
fs
inc
mov
xchg
or
or
shlb
pop
fs
inc
and
hlt
int
and
call
iret
mov
adc
pop
decl
ds
roll
mov
outsl
pop
repnz
push
jno
rcll
jmp
mov
aam
jecxz
mov
jnp
aas
pushf
xor
test
arpl
xchg
jle
push
jl
inc
out
dec
jmp
inc
popa
add
addr16
xchg
pmuludq
movsb
mov
dec
push
in
push
adc
xchg
adc
adc
iret
test
out
dec
ljmp
cld
xlat
jmp
ljmp
es
add
data16
mov
xor
cmpsb
pop
xor
or
add
inc
jno
stos
pop
cmc
adc
cmpsb
cmpb
ret
divb
shlb
hlt
dec
jge
subb
or
outsl
mov
or
adc
shlb
dec
dec
xchg
cmp
ljmp
dec
in
movsb
sbb
jbe
in
je
ljmp
arpl
imulb
enter
cld
xor
and
mov
jns
fldcw
or
xor
push
sub
mov
inc
std
xor
addr16
inc
or
push
jecxz
sub
fstl
cmpsl
and
add
sbb
sahf
out
push
pop
sbb
lods
lret
repz
mov
mov
mov
sbb
ss
lods
arpl
adc
sub
xchg
pop
xor
shrl
in
mov
or
lods
add
lcall
sbb
icebp
pusha
ds
mov
test
and
pop
stos
pop
pushf
cli
test
dec
mov
pop
rcrb
sbb
jne
dec
daa
dec
mov
xchg
loop
mov
mov
roll
daa
jge
dec
addb
adc
imul
cld
in
ja
int3
dec
mov
dec
fdivs
jae
aad
mov
fwait
mov
xchg
cmp
jns
push
xchg
lods
in
inc
nop
pop
lcall
call
outsb
fistpl
xchg
jns
jae
xor
sbb
inc
sar
repnz
cmpsb
orb
dec
fimull
fwait
xor
and
test
sub
sub
pop
lcall
rclb
push
iret
rclb
ds
cli
mov
push
int
loop
cld
bound
and
andb
leave
jns
or
mov
repz
cmp
cli
jle
lods
sti
or
pushl
mov
and
lcall
clc
push
ss
fbld
cmp
and
dec
pop
push
sti
subb
insl
js
stos
js
inc
shl
or
or
adc
pop
sub
dec
and
push
fdiv
inc
mov
int
ds
shll
fcoms
mov
add
js
movsb
xor
dec
xor
push
mov
adc
pop
jbe
inc
rol
mov
push
cmc
sub
sub
xor
sub
cmp
inc
inc
insl
xchg
xor
xor
ficoml
push
dec
mov
xchg
loop
mov
xchg
pop
iret
clc
in
cmc
and
nop
or
lcall
push
mov
and
imul
push
push
sbb
add
add
lods
inc
mov
je
dec
arpl
outsl
divb
outsl
inc
imul
test
xor
and
pop
add
fidivl
add
pop
mov
arpl
dec
leave
lea
xor
push
sbb
push
push
push
sbb
adc
xchg
iret
jmp
call
jmp
in
mov
int3
ror
ror
iret
cmp
shr
jp
iret
mov
pushf
inc
ja
lods
sub
in
aaa
movsl
mov
jno
in
inc
adc
aaa
cwtl
mov
testb
fdivs
popa
jl
add
leave
arpl
pop
add
cmp
fisubs
sub
lret
cmp
pop
mov
loopne
mov
jle
and
xchg
mov
ja
dec
jnp
jns
mov
pushf
add
mov
pop
mov
dec
js
push
mov
jp
cmp
adc
sub
jmp
or
or
lcall
das
mov
mov
fldenv
pop
dec
dec
sbb
cmp
mov
mov
ficoml
dec
fdivs
push
mov
jo
inc
shlb
inc
or
mov
push
jl
adc
jmp
clc
mov
fiaddl
fimull
sbb
ja
call
repnz
movsb
cmpsl
mov
mov
jge
mov
mov
out
fnstcw
push
jnp
loop
adc
or
xchg
subb
std
test
xchg
xor
jb
imul
repnz
sarb
dec
mov
xor
and
pushf
lds
push
cmpb
and
and
sub
push
aaa
xchg
adc
or
pop
sarb
xchg
es
loopne
dec
inc
mov
sbb
push
push
mov
sub
push
scas
mov
jg
gs
pop
arpl
sbb
mov
stos
testl
into
push
lret
ja
add
iret
rcr
sbb
ret
adc
add
subb
scas
nop
iret
stc
out
daa
jne
sbb
push
adc
and
or
fisubl
ja
into
adc
push
lcall
leave
pusha
int
js
mov
out
pop
aas
mov
pop
jg
mov
push
xor
cli
pop
enter
push
jno
adc
mov
js
scas
adc
dec
push
and
mov
dec
mov
mov
push
add
lods
test
xlat
mov
pop
dec
dec
leave
cmp
add
fistps
dec
push
dec
and
pop
cmp
mov
stos
incb
jb
or
pop
stc
push
lcall
push
lock
jo
cmp
dec
pop
jg
mov
shl
test
cmpsl
rcll
push
and
aam
pusha
in
addr16
popf
fs
sbb
insl
or
repnz
jne
mov
inc
repnz
aam
pop
xor
cs
or
or
push
bound
push
nop
xchg
sbbl
xchg
pop
xchg
or
mov
push
fcoms
push
or
repz
cmp
inc
adc
lds
pand
test
pop
cmc
pop
mov
pushf
jp
aaa
and
xor
add
and
adc
pop
rolb
push
xchg
pop
xchg
loopne
sbb
cltd
adc
lea
shll
cmc
icebp
add
sub
aam
inc
xor
mov
out
roll
and
cli
adc
imul
mov
out
mov
stc
std
and
xlat
arpl
sub
aaa
scas
lcall
icebp
push
pop
sbb
inc
inc
stos
data16
mov
dec
mov
sbb
mov
dec
mov
jb
xchg
inc
and
test
loope
je
out
jbe
jecxz
push
rcrl
test
xlat
and
jo
int
lahf
rclb
adc
adc
scas
cld
pop
or
ljmp
add
js
into
inc
mov
jb
adc
inc
insb
inc
xchg
out
inc
mov
or
mov
ss
testl
aas
or
mov
cmc
insb
loop
out
dec
jg
mov
imul
push
and
call
andb
mov
and
mov
lret
mov
or
mov
gs
scas
add
lods
push
push
dec
scas
pop
daa
loope
push
xchg
and
mov
xor
xor
mov
mov
inc
ficoms
test
ljmp
jge
jno
mov
mov
mulb
sahf
sub
test
jno
xchg
inc
fstpl
les
sahf
add
jl
sub
cltd
mov
mov
les
in
push
leave
or
shlb
jno
mov
stos
in
sbb
xor
mov
push
adc
jbe
sbb
lock
test
mov
icebp
je
jno
jl
lods
adc
loop
mov
add
xor
jecxz
pop
inc
dec
cwtl
lods
jo
and
jne
cmp
daa
popf
mov
scas
ljmp
stos
sbb
or
popa
cmp
push
leave
shrb
lds
push
fstl
insb
jae
ret
pop
dec
push
push
inc
adc
mov
jnp
stos
insb
and
sub
mov
sub
in
jno
cmp
dec
test
ss
std
xlat
cs
fwait
jno
in
pop
cmc
pop
orl
xchg
pusha
aaa
jle
out
sbb
push
stc
pop
iret
imul
add
aam
mov
lods
daa
jbe
jp
popf
xchg
in
mov
stos
ljmp
lods
ds
mov
fsubs
adcb
fisubl
out
loopne
and
pop
subl
pusha
and
mul
mov
adc
sahf
aaa
pop
mov
xchg
sub
mov
adc
and
out
loopne
push
pushf
mov
stos
dec
jno
and
rorl
mov
push
ds
xchg
leave
outsl
out
sbb
les
imul
nop
dec
enter
add
addr16
xchg
mov
js
jmp
repnz
jnp
add
add
sti
push
int
and
sbb
xor
imul
out
rorl
cmc
xor
icebp
ret
lret
gs
pop
jae
fwait
in
outsb
jmp
outsl
sti
loop
fwait
sbb
cmc
add
inc
cmp
xchg
js
cmp
daa
int3
inc
push
fcoms
xchg
pop
adc
xchg
and
and
and
adc
dec
mov
xchg
xor
mov
xchg
outsl
scas
cwtl
es
fdivp
jb
lock
mov
pop
adc
test
sub
xor
push
orl
and
xchg
leave
xor
insl
iret
mov
push
pop
cmp
jbe
into
push
pop
flds
jmp
xlat
xor
imul
xor
arpl
cltd
sahf
ret
mov
fcomi
mov
insb
roll
cwtl
cmpsl
out
jl
push
in
cs
push
inc
and
mov
dec
mov
push
adc
add
sbb
add
stc
cli
add
fnstcw
push
mov
cmp
lcall
adc
jo
jae
push
or
mov
mov
lahf
push
jb
sti
je
cwtl
incl
dec
mov
sbb
add
jp
lock
jb
inc
jbe
xor
out
pop
fistl
dec
sahf
jp
xchg
movsl
popa
add
mov
stos
jne
pop
jl
xor
imul
cmp
inc
pop
cmc
push
pop
call
dec
sbb
in
clc
repz
repnz
inc
jl
dec
es
dec
jne
aam
sbb
out
mov
mov
adc
and
scas
jbe
gs
xor
dec
and
push
rcrl
mov
and
ror
outsb
mov
jne
pop
sahf
pop
mov
jle
mov
jnp
mov
sbb
iret
std
cmpsb
out
mov
rol
or
jmp
mov
into
testl
shlb
sbb
cmp
push
inc
jae
mov
jg
xor
add
orl
mov
pop
pop
icebp
fs
das
loop
lea
div
ss
sub
add
push
jmp
mov
mov
popf
fs
inc
int3
push
repz
leave
push
aaa
adc
fnstcw
mov
push
push
xchg
mov
mov
sarl
xor
cmp
mov
movsl
push
pop
nop
or
das
cli
mov
push
inc
andl
sarl
jae
xchg
pushl
mov
sbb
mov
test
or
add
pop
pop
and
mov
mov
jo
and
sub
cmp
xchg
jno
movsb
mov
leave
nop
in
adc
dec
xchg
mov
jb
mov
adc
pop
les
out
cmc
lret
xchg
mov
ret
xchg
mov
xchg
pop
int3
inc
adc
sbb
insl
and
sbb
mov
and
scas
je
lds
xchg
popa
sub
or
pop
and
adc
jne
insl
sbb
push
rcl
xor
xchg
push
int
jns
cs
fwait
scas
add
pusha
inc
imul
mov
jecxz
iret
cmc
mov
mov
push
sahf
and
test
scas
pop
iret
cmp
fs
sbb
sbb
mov
sbb
loopne
push
cmp
xor
je
mov
dec
call
sti
inc
test
ret
or
push
add
fbstp
adc
mov
paddq
push
mov
fidivs
mov
es
sub
daa
fstps
fst
in
mov
xchg
mov
fwait
out
add
sti
mov
lods
cmp
shlb
outsb
pop
sub
adc
push
repnz
push
xor
add
rcrb
cmc
dec
cmp
je
loopne
inc
mov
cld
loop
jl
fwait
mov
dec
inc
inc
fsubrl
jo
mov
jnp
mov
sahf
rcr
mov
sub
dec
cld
mov
aaa
fcmovnu
dec
es
sbb
je
jns
pop
inc
gs
sbb
xor
mov
mov
adc
test
adc
mov
mov
es
out
outsb
insb
dec
xchg
outsl
in
sbb
scas
and
sub
testb
inc
stos
mov
pop
rcr
dec
in
adc
fstpt
jb
push
sub
xchg
iret
fs
pop
sarl
dec
loop
add
rcrl
loope
sbb
test
outsb
mov
lret
push
ja
out
add
cld
push
pop
xchg
pop
add
adc
insl
xchg
add
cwtl
jmp
pop
sbb
sub
sbb
pop
dec
xchg
andl
add
adc
xchg
das
ja
cmp
or
fxch
outsl
gs
mov
push
and
push
stos
mov
jecxz
push
lahf
aam
push
mov
into
das
sbb
and
mov
cmp
out
inc
stos
inc
lret
jecxz
lret
or
mov
cmp
sub
shrb
or
in
adc
adc
fidivs
lret
gs
sub
add
sub
cmp
fwait
add
fldt
clc
dec
adc
jne
pop
int
push
lods
shrl
inc
insl
cmp
adc
shlb
sti
out
sub
ljmp
sarl
jnp
mov
xor
xor
lahf
fwait
adc
repnz
xor
jg
clc
add
aaa
push
jnp
lcall
inc
jbe
jbe
sahf
jae
push
mov
adc
mov
or
add
jo
out
popf
xor
jns
ds
lods
subl
xchg
xor
or
stos
cmp
aaa
sub
and
and
jae
mov
imul
icebp
fwait
or
xchg
arpl
stos
nop
or
dec
sahf
stos
jb
aad
jg
sub
imul
jle
sbb
pusha
cli
lock
xchg
pop
push
cltd
push
mov
pop
dec
cmp
in
pop
scas
mov
lahf
xchg
mov
xchg
stos
adc
rcr
outsl
ds
cli
loopne
and
popa
outsb
ljmp
dec
scas
shll
fistps
lret
inc
sar
dec
into
popf
or
es
int
int3
or
es
xor
pop
adc
scas
push
sub
aaa
jg
insl
pop
out
or
add
mov
inc
sub
push
popa
adc
lret
and
pop
pop
int3
mov
out
or
jno
dec
repnz
jg
bound
mov
cmp
aaa
jnp
pop
movsl
xor
inc
mov
and
out
outsl
movsl
popa
hlt
lods
ljmp
addr16
mov
lock
in
dec
dec
inc
jbe
ss
test
frstor
data16
notl
cmp
mov
out
jne
push
pop
in
fwait
cmp
dec
adc
addr16
insb
imul
stos
or
fildll
outsl
jp
push
jnp
in
ljmp
hlt
mov
aam
push
jb
cs
push
mov
xchg
and
pop
pop
bound
leave
out
adc
cmpsb
mov
sub
xorb
out
fwait
xor
lds
cmpsb
cmpb
jno
out
data16
jge
lds
iret
popf
push
mov
mov
jns
dec
sub
add
jnp
cld
and
cmp
mov
xor
mov
nop
js
pop
stos
push
or
testl
mov
ds
adc
ret
aas
movl
sub
adc
std
jle
pop
or
mov
adc
add
push
mov
adc
mov
test
xchg
inc
dec
in
mov
push
mov
lods
bound
adcl
aad
inc
rcrb
mov
xchg
lods
pop
loopne
incb
add
xchg
ror
les
xchg
mov
movsl
add
add
scas
mov
or
mov
add
push
in
push
leave
pop
sbb
arpl
mov
jp
add
mov
push
mov
rorb
push
sub
mov
lods
lcall
xchg
mov
cmp
sub
mov
andb
mov
mov
aam
mov
xchg
aam
dec
add
int3
jo
lds
mov
mov
xchg
or
cmp
push
inc
xchg
lcall
std
out
xor
fs
xlat
add
push
repz
push
inc
mov
push
ficompl
sub
dec
mov
lds
out
ljmp
int3
inc
in
es
fiadds
jno
mov
nop
inc
pop
pop
lcall
popf
push
lods
xchg
sub
lahf
inc
pop
pop
and
cmp
add
jmp
enter
mov
mov
jle
loopne
push
xor
cmc
mov
xor
pop
scas
js
mov
dec
imul
jne
add
aam
sbb
jmp
lahf
aad
mov
mov
jge
inc
das
jge
popf
cmpsb
add
jbe
mov
fstl
pushf
in
iret
jge
and
cmp
adc
jle,pn
inc
mov
js
adc
lahf
pop
dec
or
repz
xor
or
xor
push
das
out
ret
lods
enter
addr16
adc
loopne
and
inc
jne
cmp
adc
xchg
gs
in
sbb
mov
call
mov
mov
jg
xchg
pop
aaa
adc
xchg
sbb
leave
imull
jl
add
fisttpll
sbb
icebp
subl
lahf
fsts
lahf
repz
cmc
ret
aam
sbb
jae
jmp
mov
xchg
adc
int3
mov
cmp
lret
ret
mov
mov
inc
xchg
mov
and
sbb
push
pop
pushf
pop
scas
scas
cmp
testl
inc
xor
addr16
aad
add
inc
adc
inc
lock
call
movsb
lods
mov
repz
xlat
jle
scas
add
pop
pusha
push
or
adc
jle
xchg
inc
mov
cmp
xor
or
insb
pop
in
sub
pop
dec
cli
push
outsl
cwtl
push
cltd
jmp
mov
inc
arpl
jno
enter
dec
inc
mov
inc
in
and
stos
mov
ror
xchg
std
outsl
jo
call
enter
push
movsb
sbb
lret
jl
jmp
push
mov
mov
or
xor
loopne
mov
mov
sahf
int
jmp
addr16
aas
or
stc
xchg
out
insb
add
sub
sub
xchg
xor
cltd
push
imul
leave
pop
movsl
cmc
lret
imul
scas
rcrb
dec
outsb
pop
imulb
jle
mov
aaa
in
adc
sbb
add
pusha
sub
inc
mov
sub
and
stc
ds
dec
xor
js
mov
add
and
xchg
repnz
adc
sbb
stc
or
add
popf
mov
ficoml
mov
xchg
mov
bound
es
push
into
or
jns
xchg
adc
or
and
lret
or
push
adc
cld
inc
xchg
movsl
add
daa
jg
repnz
je
pop
jno
mov
lcall
pop
or
insb
push
sbb
mov
out
mov
popl
sbb
sahf
pop
add
mov
mov
mov
dec
test
imul
add
lcall
cltd
mov
cltd
out
ret
movsb
scas
mov
or
sub
or
lret
outsl
out
inc
insl
mov
push
mov
xchg
lret
aad
mov
xor
fdivs
push
call
xchg
je
adc
imul
std
lds
or
cmpsl
mov
sahf
pushaw
jb
repnz
js
outsl
push
add
adc
daa
mov
test
cmpl
pop
pop
jg
sub
lcall
push
jne
mov
cmp
int
sub
test
ljmp
add
inc
mov
lahf
lods
fwait
dec
dec
repz
ss
cmp
sbb
mov
sbb
push
imul
mov
xchg
jle
shl
mov
test
popl
sub
sbb
pop
adcl
mov
in
dec
sbb
daa
cld
pop
add
mov
ret
fs
mov
dec
sbb
mov
daa
jnp
stos
inc
inc
pop
push
sub
pop
ret
pop
gs
and
fs
sub
lret
outsb
cld
cmp
cli
jbe
jge
sub
mov
bound
scas
repnz
ficoms
cmp
add
mov
nop
ljmp
insb
inc
xlat
mov
inc
xor
call
or
aaa
dec
push
push
andb
fisttpl
mov
sahf
dec
notb
and
test
rcll
icebp
pop
cld
push
mov
and
cmpsb
arpl
movsb
loope
call
pusha
out
rcr
push
adc
inc
inc
cmp
inc
lods
pop
mov
pop
or
push
mov
sbb
push
fwait
js
testl
xor
jno
cmc
loope
add
xor
nop
xchg
pop
insb
xchg
fbstp
or
lea
shlb
mov
adc
clc
push
adc
loope
or
xchg
xchg
mov
fnstcw
dec
subb
lcall
test
pop
icebp
in
dec
popf
ficomps
mov
fdivs
lret
cmp
push
fcmove
add
decb
out
je
pusha
nop
mov
ss
xchg
fdivl
gs
jp
push
lock
ret
sti
jp
or
add
shrl
push
jp
fcom
mov
sbb
xchg
shl
xchg
push
clc
lea
dec
jne
js
pop
adc
pop
repz
push
adc
pop
incl
enter
ficoms
cmp
lock
jb,pn
test
mov
inc
in
inc
jnp
cs
roll
jb
mov
shll
push
decb
cmovb
inc
adc
xchg
fs
test
fst
sub
xchg
sub
cmp
lret
jb
lea
les
xor
xlat
sub
xor
aaa
pop
inc
jmp
lds
lret
pop
or
loope
pop
call
negl
mov
into
lods
fucomip
inc
cli
in
jge
adc
rolb
mov
repnz
loope
sbb
sbbl
push
xchg
es
add
frstor
mov
cwtl
jmp
into
icebp
je
pop
and
add
je
icebp
inc
imul
lcall
push
dec
sbb
roll
jo
sbb
shl
inc
dec
fadd
ss
into
sub
hlt
dec
inc
jg
push
jno
in
stos
xor
ljmp
inc
inc
repnz
dec
ret
pop
lds
mov
mov
loop
cmp
outsl
sub
dec
sbb
mov
ljmp
ds
jl
sbb
loop
ret
loop
scas
adc
mov
fbstp
test
rorl
add
lret
insb
xchg
clc
dec
push
mov
ja
into
inc
fidivrl
jns
pusha
push
inc
push
jbe
in
mov
loopne
sbb
stc
or
or
xchg
sbb
les
out
ljmp
pop
jg
das
push
add
cli
ss
stos
jbe
stos
jmp
scas
or
mov
cmpsl
adc
fwait
lahf
pop
inc
gs
push
test
mov
lds
jb
cmpsl
sbb
out
or
xlat
mov
fimull
jns
mov
enter
ret
daa
dec
stos
xchg
andb
bound
jb
es
in
iret
lret
enter
xchg
xor
bound
insl
push
inc
fnstenv
sahf
and
mov
lea
inc
test
add
js
data16
sahf
int3
movd
jg
lock
mov
lds
rep
fstpt
jae
rcrb
fcmovnb
inc
addr16
shl
sarl
mov
add
out
pop
shrl
add
fmuls
aad
xchg
and
movsb
pop
jnp
push
xchg
rcrb
fstl
mov
pushf
aad
or
imul
shlb
mov
insb
fdivrl
inc
or
mov
mov
mov
xchg
jecxz
clc
sub
adc
das
out
adc
nop
stc
aam
adc
sti
adc
add
pop
sub
insb
ficoml
lcall
xchg
bnd
sbb
inc
lcall
push
gs
sbb
xor
pop
pop
in
test
and
adc
notl
or
lcall
mov
push
cmc
mov
mov
mov
and
and
in
mov
popf
ret
mov
imul
dec
dec
dec
dec
sahf
negl
xadd
inc
loope
ret
add
cs
xchg
les
xor
push
ret
mov
dec
insb
push
lods
or
inc
rcrl
ds
lret
xor
jae
jne
stc
ss
clc
fldl
rorl
mov
or
shlb
scas
insl
jle
stc
test
mov
or
add
clc
leave
clc
in
mov
outsb
and
out
and
lret
mov
cmpsb
sub
cmp
mov
push
ror
cmp
xchg
loope
aas
cltd
int3
push
cmp
enter
pop
test
std
cli
insb
and
jbe
aam
scas
daa
cmp
mov
incl
das
ljmp
icebp
or
xlat
fcoml
xchg
mov
sub
in
jg
push
or
lds
fadds
lds
mov
sub
jbe
out
fcmovnu
push
xchg
mov
dec
std
mov
repnz
jecxz
dec
dec
out
inc
xchg
cmpsl
or
pop
gs
xchg
test
or
shll
dec
push
fldl
xor
cs
mov
lret
add
sub
lret
insb
testb
inc
sbb
pop
lock
push
ret
out
mov
adc
mov
jl
movsb
mov
xchg
ljmp
pop
popa
out
push
xor
cmpsl
push
push
lods
fidivs
mov
xchg
loopne
mov
cmp
popf
scas
jno
or
mov
std
js
sbb
cmp
jbe
out
cltd
pop
dec
pop
pop
sub
pop
in
mov
sub
hlt
mov
mov
mov
sub
ja
push
mov
jg
or
into
movsl
ljmp
xchg
add
cltd
jp
and
fwait
orl
xchg
and
mov
mov
cmpsb
repz
shll
push
lods
pop
pop
xor
movsb
dec
mov
mov
pop
xorl
sbb
js
jo
loop
mov
push
cmpsl
clc
push
adc
movsl
adcb
scas
or
add
add
sub
pop
mov
fidivrl
loope
add
mov
popa
add
adc
mov
icebp
movsl
jmp
outsb
lahf
sbb
and
pop
inc
fisttps
push
je
inc
add
repnz
fidivrl
mov
cmp
pop
div
xchg
cmpsl
test
xchg
cmp
negl
add
push
movsb
in
bound
xor
push
lcall
bnd
mov
inc
loopne
fiadds
and
inc
sahf
js
mov
push
clc
mov
push
add
mov
lods
sbb
or
jle
mov
rorl
mov
xchg
xlat
dec
pusha
xor
out
call
mov
mov
mov
inc
hlt
js
loope
fcompl
add
mov
in
subl
mov
xorb
pop
adc
mov
xchg
adc
adc
xchg
or
xchg
sbbb
call
pop
xor
mov
and
or
mov
mov
inc
mov
daa
cltd
xchg
arpl
push
in
js
addr16
add
aaa
dec
scas
xor
ffreep
and
lcall
das
dec
lods
stos
lea
mov
scas
jmp
mov
sti
lods
mov
mov
dec
icebp
xor
add
mov
pushf
pushf
push
sub
hlt
cmp
xchg
aas
cmp
arpl
xchg
jle
xchg
lock
bound
sub
sarl
sub
outsb
stc
leave
mov
sub
andl
imul
mov
inc
and
or
sub
pop
les
push
push
jne
int
add
xchg
sbb
cmp
aad
push
and
fldcw
cmp
and
inc
push
loopne
add
adc
jnp
daa
test
bound
pop
jge
pushf
mov
ss
push
mov
cli
push
xor
xchg
fwait
inc
mov
out
scas
lret
sbb
and
mov
aad
out
xchg
jl
jp
stos
js
nop
mov
push
out
mov
jl
mov
sbb
jns
and
or
iret
or
xorb
mov
outsl
xchg
lahf
fadd
lret
js
add
call
popa
ret
dec
aad
dec
push
in
inc
test
lret
jecxz
mov
push
fisttps
add
into
lods
or
xchg
mov
inc
lahf
popa
call
arpl
stos
inc
testl
inc
rcrl
sarl
int
notb
clc
loop
push
and
xor
sbb
sbbl
cmp
push
adc
shl
xchg
push
out
cmp
pop
pop
mov
arpl
ljmp
push
adc
jns
sbb
sub
adc
sbb
jae
add
dec
mov
pop
jge
aas
jnp
test
jl
cmpsb
je
loopne
adc
ljmp
fadd
test
and
pop
xlat
pop
loop
xor
cltd
pop
mov
cmp
cwtl
call
inc
movsb
cmc
jbe
and
sub
adc
fnstsw
popa
push
mov
ret
adcl
mov
push
pusha
fwait
mov
xchg
data16
or
icebp
ret
mov
add
aaa
sbb
xor
imul
fisttpll
lea
and
lahf
jmp
mov
les
fsts
jns
mov
iret
or
outsl
mov
bound
xor
and
bound
jne
cmp
lds
mov
dec
inc
mov
sbb
arpl
lds
mov
pop
test
or
or
or
xor
scas
fidivrl
out
jno
adc
mov
adc
mov
add
jnp
adc
pop
jg
aad
xor
lcall
clc
outsl
shrl
xchg
push
ljmp
popa
fistpl
mov
cmp
adc
pushf
lret
or
cltd
mov
les
sbb
loop
stc
mov
stos
loope
jnp
faddp
repnz
and
push
ret
fsubrl
mov
nop
mov
mov
mov
pop
dec
popf
dec
jle
pushf
dec
xor
or
data16
fisubrl
test
jle
dec
pop
aaa
sbb
xchg
pop
enter
js
popf
lods
daa
pop
add
mulb
ds
xor
in
fildl
lret
mov
loop
mov
pop
sbb
sub
jge
push
xor
jge
jns
lret
and
mov
lds
xchg
mov
scas
dec
gs
mov
loop
rorl
xchg
xor
or
adc
outsl
cld
loop
pop
inc
in
ljmp
sahf
or
push
cmp
movsl
jge
shr
orl
in
je
cld
rolb
aam
push
stc
add
shlb
sbb
out
ja,pn
and
sbb
std
fimull
fwait
mov
outsl
inc
lret
loop
xor
into
or
inc
or
inc
jne
cli
jp
das
sub
jmp
mov
or
cmp
or
xchg
sarb
mov
shlb
or
mov
cmc
in
lds
xchg
out
mov
cld
int3
add
addr16
dec
mov
cmp
dec
les
out
and
out
pop
push
ss
mov
push
jp
test
test
lods
cmc
push
xchg
dec
ja
jnp
clc
adc
cmp
mov
pop
gs
mov
sub
sbb
pop
pop
or
or
mov
rcl
mov
test
xchg
incl
test
add
testl
mov
dec
neg
pop
and
sub
ret
pop
xchg
fs
bound
lds
out
push
filds
js
shrl
test
ret
pop
les
push
in
out
stc
ljmp
xchg
push
sub
iret
xlat
jae
je
repnz
dec
mov
pop
pop
in
enter
dec
cs
add
adc
inc
dec
pop
lea
loop
inc
lret
arpl
sbb
mov
xchg
imul
mov
js
in
and
popf
add
xchg
xchg
aam
jbe
and
es
imul
fwait
fiaddl
mov
sub
or
jp
sbb
popa
add
push
cmp
ret
outsl
daa
cmp
out
add
es
nop
mov
jle
shlb
fidivrl
mov
aaa
rcl
inc
insb
out
dec
jg
mov
test
call
test
jl
shlb
push
das
lods
cmp
mov
data16
arpl
xchg
xor
or
sub
fsts
cmp
into
sti
int3
into
aas
xor
push
dec
popa
xchg
mov
popl
ret
gs
sub
adc
sbb
shl
iret
fnstcw
ss
or
enter
sbb
clc
bound
xchg
test
jle
lods
cli
sbb
pop
in
loopne
ja
frstor
repnz
mov
sub
push
sti
loopne
jns
cmp
cli
dec
enter
or
lret
dec
cmp
mov
addl
inc
cltd
pusha
adc
arpl
or
adc
shll
adc
je
push
shrb
mov
inc
popf
jo
pop
leave
xor
dec
lret
leave
pop
arpl
mov
stc
sub
and
mov
in
jmp
stc
mull
pop
loop
mov
mov
jbe
mov
and
imul
mov
aad
adc
mov
add
repnz
jmp
push
ja
cmp
lahf
mov
sti
adc
jb
pushf
sbb
popf
push
imul
sub
les
push
xchg
add
or
cwtl
aaa
push
sahf
dec
ja
mov
movsb
repnz
ss
jle
cli
pop
stos
sbb
ud1
sbb
jnp
mov
fmull
push
mov
dec
ljmp
loop
faddl
xchg
xlat
pop
negl
or
lods
idivb
aas
das
push
or
cmpsl
out
out
inc
jmp
icebp
xchg
cmc
lock
imul
or
test
shrb
out
movsl
fwait
int3
push
adc
inc
leave
add
adc
pushf
mov
xor
shrl
loope
fdivr
add
repz
mov
cwtl
sbb
mov
xor
rcrl
push
add
fdivr
and
push
aas
xchg
imull
repnz
or
je
stc
subb
dec
push
fisubs
push
jbe
pop
scas
push
mov
push
fsubrp
adc
es
cmp
and
mov
aam
jo
xchg
mov
addr16
popf
cmp
dec
xlat
cmp
pusha
outsb
outsb
sbb
sbb
leave
adc
adcl
es
int
xchg
dec
jg
cmp
jp
or
ljmp
pop
cltd
mov
ficoml
movsl
repnz
scas
cmp
clc
mov
jo
xchg
cmpb
scas
arpl
sbb
mov
adc
pop
xor
pop
cmp
jle
push
sahf
sbb
inc
dec
cmp
cmpsl
or
dec
xchg
dec
inc
popf
lahf
cmc
hlt
daa
xor
pushf
dec
or
std
shrb
add
add
jbe
cmp
mov
sub
insb
xor
iret
cld
cmp
sha256rnds2
xchg
loopne
mov
mov
jp
cmp
adc
ss
xor
mov
or
lret
pop
ret
paddw
sbb
jge
xchg
xchg
fdivs
mov
imul
lods
fisttpl
fidivl
loope
stc
jcxz
hlt
jmp
int3
mov
int
pop
jmp
jmp
sysexit
pop
inc
mov
lods
repnz
jle
ss
daa
jo
fsin
fisubs
lea
add
pop
cltd
test
xor
dec
loop
lds
mov
jne
sub
dec
mov
xchg
adc
xor
fildl
lahf
xor
imul
lret
jp
jae
repz
push
aam
jp
sub
mov
mov
mov
jle
xchg
inc
in
fdivrs
je
push
adc
pop
mov
movsb
lods
leave
cmp
mov
ret
popf
rol
loopne
in
shl
outsb
mov
push
push
test
fidivrl
rcrb
sub
pop
inc
rcrb
test
add
sbb
mov
mov
dec
cmp
push
adc
cmpsb
loop
sub
lods
pop
or
and
push
jo
rcl
imul
aaa
pop
ljmpw
push
adc
je
test
pop
js
adc
xchg
loop
mov
rclb
sub
cld
and
mov
rcrl
or
sub
iret
fs
cmp
push
jnp
and
mov
fdivrl
das
pop
cmp
mov
pop
cmpsb
loope
nop
pusha
popf
sar
mov
adc
jmp
push
fisubl
gs
push
mov
outsb
ss
loop
mov
pop
int3
mov
ja
cmp
inc
add
cmpsb
int3
lret
std
clc
and
clc
or
outsl
fistl
mov
mov
in
mov
mov
pop
subl
push
cld
outsl
ret
sub
jge
add
sbb
ret
ljmp
cmp
inc
ja
or
outsb
push
pop
xchg
push
sbb
cli
sub
cmp
xor
pop
int
lds
pop
xor
add
inc
pop
stos
inc
add
push
stc
repnz
jecxz
repnz
xchg
shrl
sub
sbb
pop
stos
add
adc
in
mov
sbb
lahf
imulb
sub
scas
lods
xor
adc
daa
stos
push
out
push
out
ficompl
rcll
fwait
add
mov
adc
push
sbb
xchg
sti
push
mov
xor
fdivrl
jp
data16
movsl
lahf
inc
js
adc
fldt
idivl
mov
and
cwtl
jns
in
push
data16
mov
jmp
mov
cmc
xlat
xchg
mov
lahf
pusha
push
ds
or
pop
popa
jo
loope
mov
xor
xchg
xor
insl
or
jecxz
lcall
int
gs
push
repz
cmpsb
ret
pextrw
rep
inc
test
popa
mov
pop
mov
inc
inc
fstl
and
add
out
inc
mov
pusha
mov
out
or
stc
cmc
imul
into
cwtl
in
mov
add
hlt
in
mov
aam
push
pop
aaa
cmpsl
sub
hlt
cltd
fmulp
jmp
enter
push
mov
bound
imul
pop
jge
ret
es
add
out
sub
je
das
xor
dec
bnd
add
movsl
aad
xorb
lret
sub
mov
mov
lea
das
gs
movsl
loope
in
sub
push
add
addb
int3
mov
adc
xchg
jae
popa
sbb
jle
sub
xchg
or
in
mov
imul
rorl
div
or
or
mov
fdivrs
ja
lret
mov
xchg
lret
sbb
scas
clc
xchg
leave
cli
cs
icebp
push
mov
fnstenv
loop
imul
imul
mov
test
aas
mov
push
xchg
int3
pop
movsl
aaa
fildll
punpckhbw
xchg
cmpsl
lods
push
in
pop
mov
nop
sahf
mov
pop
jl
or
imul
inc
lret
inc
in
adc
out
xor
xchg
cmp
sub
hlt
sti
jle
pop
pop
pop
mov
in
mov
repz
dec
sbb
aad
cli
out
loope
roll
sbb
pop
test
and
mov
inc
jae
cld
push
ret
ja
sub
ret
pop
and
push
rolb
arpl
and
outsl
push
add
stos
mov
sbb
mov
pop
mov
fs
test
pushf
outsl
fiaddl
xor
sahf
out
shrl
sbb
pop
out
cmp
loopne
pusha
sbb
test
adc
loopne
dec
arpl
out
mov
pop
jge
lods
push
adc
lahf
push
aam
mov
out
xchg
mov
jns
movl
push
testl
mov
in
mov
or
xor
ljmp
popaw
sti
in
movsb
cmp
cwtl
cmp
push
cmp
in
clc
xchg
out
in
sbb
stos
push
rorl
stos
sbb
aam
dec
outsb
push
rclb
push
mov
js
imul
add
scas
jnp
popa
repz
lods
es
jge
push
stc
vpsraw
je
movsl
movsb
cmp
cmp
xchg
sub
movsb
push
mov
sbb
jp
cmpsl
jae
push
lcall
orl
lcall
xor
sub
lahf
jnp
imul
adc
pop
call
out
fidivrl
sub
mov
nop
xchg
stc
loop
popa
int3
adc
arpl
js
js
dec
jge
lods
add
mov
sti
push
add
adcl
lahf
cli
mov
mov
dec
jb
sarl
pop
dec
pop
push
jp
pop
jecxz
cs
arpl
push
popf
sbb
cmpsb
fcomi
adc
xor
in
pop
mov
fistpl
or
fisubrs
dec
mov
and
inc
mov
mov
adc
push
or
sub
rcll
mov
add
incl
in
outsl
sbb
lret
and
call
xchg
fsubl
rcll
xchg
leave
sub
mov
loopne
cmp
or
or
inc
lahf
sub
std
gs
sahf
dec
lahf
mov
dec
xchg
std
es
push
push
add
cmp
push
repnz
out
fisubrl
stos
fcmove
ja
or
aam
inc
jecxz
jle
mov
cmpb
movsl
cltd
cwtl
mov
ss
sbb
lret
xor
lret
push
mov
xor
push
jp
fisttpl
or
fimull
sbb
push
mov
jp
test
adc
lock
rclb
enter
aaa
movsb
sbb
outsl
mov
pop
addr16
or
lock
pop
and
sti
popf
test
repnz
inc
fcompl
sbb
mov
and
movsb
mov
jmp
xchg
stos
jb
out
call
pusha
test
sbb
adc
pop
inc
jg
mov
icebp
cmp
inc
lret
mov
arpl
std
sub
cmpsl
mov
xor
mov
in
mov
jbe
into
das
lahf
imul
adc
adc
push
dec
pop
adc
mov
pop
outsl
gs
pop
add
jne
cmp
cmp
imul
loope
jbe
leave
xchg
int3
sbb
mov
cmpsb
push
shll
hlt
jle
cltd
or
pusha
xor
insl
dec
fs
push
or
lock
inc
mov
add
mov
jae
sub
lret
std
scas
test
in
sub
pop
fimuls
in
nop
inc
decl
pop
jmp
ret
mov
in
ret
push
sbb
rorl
ds
movsl
pop
adc
xor
xor
push
jl
pop
fcomps
xor
stos
test
pushf
mov
jle
into
fwait
lods
mov
outsb
mov
xchg
jle
movsl
xchg
shlb
fnstsw
add
jl
bound
add
insb
or
mov
mov
pushf
mov
rcr
lods
out
mov
or
jle
fisubrs
or
cld
jge
xor
jbe,pn
inc
iret
imul
jno
rorb
mov
pop
jmp
add
and
push
out
aad
loope
lcall
add
xlat
adc
ja
lods
jge
gs
dec
jle
push
or
icebp
ljmp
dec
sbbb
and
js
popa
sbb
popf
loope
loop
mov
in
out
add
inc
cmpsl
mov
popa
xchg
jne
mov
pusha
or
rol
fildll
xchg
adc
xchg
adc
ss
mov
and
daa
decb
push
ljmp
lret
in
testl
pusha
push
je
shrl
push
cld
and
jl
addl
sub
cmp
jne
push
in
and
repz
call
adc
or
jns
orl
xor
mov
aas
mov
iret
jnp
xchg
ss
mov
insl
mulb
mov
nop
or
lods
mov
mov
sahf
shrw
stc
mov
sub
call
cmp
fistl
ja
and
out
pop
adc
popf
sbb
and
sti
sub
jl
lods
inc
cmpl
daa
lea
inc
sbb
es
dec
push
push
cwtl
add
lea
movl
push
movhps
jg
sub
lods
mov
pop
jns
mov
sbb
andb
xchg
bound
out
dec
hlt
sub
popl
and
mov
xor
das
call
xchg
push
sub
popa
mov
movsl
ljmp
lock
pop
add
insb
jnp
or
fidivs
stos
aad
mov
jns
test
dec
adc
pop
mov
pop
dec
aas
pusha
mov
push
mov
mov
pushf
sbb
pop
jne
stos
adc
xchg
xchg
push
xchg
mov
add
dec
or
lds
cs
leave
ficompl
loop
mov
aam
int3
pop
cltd
shrb
test
mov
push
bound
or
push
adc
fcomi
pusha
xchg
xchg
xor
xlat
rcrb
pop
bnd
lcall
xor
cmp
pop
cli
inc
mov
shll
pushf
jnp
test
sbb
xor
or
inc
ret
out
repz
arpl
adc
clc
inc
cmc
das
or
sbb
xor
in
cmpsb
push
or
nop
cmpsl
xlat
stc
lahf
sarb
lods
xchg
adc
aaa
mov
or
les
mov
mov
sub
xchg
xchg
std
std
and
or
mov
fcompl
dec
mov
repnz
pop
enter
mov
cmp
jbe
sbb
cmp
pop
xchg
cmp
sub
outsb
pop
lock
sbb
inc
inc
push
pop
sub
test
dec
pop
cli
mov
aas
das
popa
xchg
inc
pop
adc
cmp
add
enter
sbb
mov
ficomps
sbbl
sbb
jns
add
ja
or
scas
in
in
mov
or
ret
push
pop
push
xchg
lret
mov
mov
xor
loopne
inc
xchg
arpl
leave
jne
loope
out
xchg
push
pop
xor
loope
sub
push
and
std
cs
xor
imul
loop
sbb
add
lds
push
and
adc
xor
scas
mov
rorb
jno
jp
insb
sbb
paddusw
iret
and
xchg
lods
jo
std
outsl
dec
ja
add
mov
pop
mov
push
cmp
ljmp
sbb
jge
xor
push
cmpsb
push
cli
rcrb
sahf
add
in
xor
jo
je
pop
push
inc
shrb
or
imul
xlat
pop
cwtl
lcall
inc
and
cmpsb
out
mov
in
gs
adc
fsubr
push
xor
faddl
jg
imul
out
sti
adc
sbbb
jp
out
xchg
aad
fcomip
push
dec
adc
and
arpl
sti
and
pop
mov
push
push
subl
hlt
mov
xor
in
js
aam
pop
insb
jle
push
jno
in
data16
mov
or
pushf
sub
xor
pop
mov
mov
mov
dec
dec
push
add
mov
mov
inc
mov
mov
sub
and
add
bound
mov
popf
loop
inc
mov
imul
mov
lods
fst
xchg
das
dec
pop
fimuls
and
imul
idiv
cmp
xchg
jecxz
loopne
dec
movsl
lds
push
add
xchg
pusha
popa
std
pop
nop
add
aad
gs
xchg
fidivl
sbb
pop
test
adc
xor
aam
setnp
orb
jp
jno
cmpsb
lea
scas
mov
or
sub
inc
cmp
movsl
testb
adc
jmp
add
mov
pop
push
in
mov
add
test
cmp
bound
pushf
insb
scas
pop
or
push
insl
iret
cmpsb
insb
add
into
in
js
repnz
sbbl
pop
sbb
in
sbb
jmp
fmulp
mov
and
test
jno
sbb
jecxz
lods
movsl
xchg
push
cmp
xor
sbb
imul
sub
fisubrs
fldenv
mull
pushf
out
movsl
fdivs
dec
fidivl
jo
cwtl
out
outsl
iret
sbb
fsubl
loopne
mov
sbb
or
add
cmp
outsb
jns
xlat
cmpl
inc
ss
adc
popf
xchg
add
fsubs
daa
enter
jg
jp
lock
test
sbb
sbb
mov
insl
push
movsb
xorb
aam
xchg
xchg
vpsllq
lods
popa
iret
inc
push
imul
cmpsb
mov
xor
movl
test
pop
jge
inc
mov
push
jle
neg
and
aaa
fldl
iret
inc
lds
arpl
inc
das
loop
sub
mov
adc
ficoms
add
aad
stos
sahf
xor
dec
fwait
scas
add
insl
jne
jbe
mov
push
push
cwtl
out
or
js
mov
xchg
pop
aad
imul
jns
lds
iret
cmp
mov
repz
sbbb
rcl
xchg
cmpsl
shr
mov
fcmovne
loope
rcr
mov
pop
xlat
test
rorb
push
mov
inc
pop
test
cmp
mov
outsl
lds
sbbb
rorl
dec
push
cmc
mov
rclb
sbb
jno
and
dec
mov
pop
inc
lcall
jne
test
jmp
lds
ja
lds
and
push
iret
dec
sahf
ja
sarl
inc
lods
pop
adc
lret
cmc
mov
loope
cmovb
adc
sub
out
outsl
cld
xlat
and
adc
notb
push
mov
in
jge
sti
cmpsl
in
cmp
lock
scas
ja
push
jnp
mov
push
sub
fwait
add
stos
adc
mov
mov
adc
clc
adc
loop
jp
scas
or
xor
and
push
jns
clc
mov
sahf
aaa
or
popf
or
pusha
js
and
aaa
jno
enter
xchg
and
dec
push
mov
push
call
inc
jmp
pop
orl
jnp
fsubr
imul
out
outsl
jmp
jbe
aas
mov
stos
cs
mov
inc
mov
add
sub
inc
das
and
movsb
or
mov
fcmovnbe
out
pop
push
pop
outsl
mov
cmp
mov
rolb
mov
or
out
frstor
add
push
adc
bound
fucomi
cmpsl
xlat
lcall
fcmovnu
fdivs
mov
inc
mull
xor
mov
push
push
mov
or
push
lret
xor
jns
div
or
sub
out
lods
mov
mov
iret
jmp
jbe
jns
outsl
cmc
xor
call
sbb
sub
mov
cmpsl
dec
and
rclb
sbb
mov
sub
adc
or
sub
dec
mov
jecxz
sbb
dec
dec
test
push
js
sbb
sub
jae
test
or
lret
in
mov
out
xchg
pop
jmp
leave
push
scas
leave
lods
sub
add
sbb
bound
call
fs
notb
imul
dec
xchg
lods
sub
pop
mov
imul
imul
pop
jl
xor
xchg
test
pop
shlb
xor
mov
insb
mov
jecxz
pusha
and
test
xor
popa
adc
xor
jmp
int
push
outsl
das
enter
jp
dec
push
jp
mov
test
lods
out
fwait
aaa
lahf
out
lret
out
cltd
jl
sub
xor
movsb
xchg
addr16
mov
rolb
jne
mov
out
sbb
jl
jp
lea
rclb
je
mov
int3
insl
pop
push
int3
mov
lods
cmp
in
imul
xchg
xchg
ficoms
and
notb
es
or
mov
or
ss
add
out
sub
es
ret
xor
inc
mov
mov
mov
cwtl
xor
andb
lock
pushl
call
or
stos
jp
inc
mov
jae
mov
in
call
div
icebp
adc
dec
cwtl
mov
lods
ret
pop
out
mov
add
mov
sti
inc
mov
or
je
outsb
mov
adc
outsb
outsb
ret
scas
lock
lcall
icebp
push
inc
push
cmp
inc
mov
sub
into
push
mov
push
xor
pop
sahf
sub
mov
loope
fs
sbb
pop
sbb
hlt
bound
or
sub
mov
sub
fildl
vmovntpd
xchg
ret
pop
sub
dec
jp
mov
add
cmpsl
test
test
fsubl
jp
int
loopne
sub
mov
jb
adc
jno
xorb
and
mov
rcrl
pop
inc
imul
adc
sub
mov
aaa
mov
out
inc
mov
sub
push
ds
pop
out
mov
push
ret
idivb
repnz
add
stc
mov
mov
rol
stc
fcoml
movsb
cmp
mov
mov
cmp
jp
movsb
pop
hlt
shrb
mov
mov
inc
push
add
xor
sbb
sub
fscale
outsl
mov
ficompl
and
dec
dec
cmc
sub
in
mov
es
or
ja
fidivl
roll
cs
add
dec
jg
pop
arpl
int
subl
cmp
or
in
out
dec
dec
sbb
xchg
aas
add
in
sub
lods
sti
scas
repz
rclb
leave
das
ret
nop
ja
and
mov
loope
adc
repz
sub
mov
faddl
xchg
leave
push
ret
dec
push
dec
push
xchg
mov
ret
jg
and
gs
out
jne
and
sub
pop
cmp
icebp
inc
mov
inc
xchg
arpl
cmp
mov
pop
push
push
popa
aas
cmp
or
movsl
and
add
dec
adc
inc
push
pop
shl
sub
jg
inc
inc
dec
sub
add
scas
push
sub
addl
mov
pop
aad
and
pop
jge
inc
and
movsb
cmp
push
shl
pop
jle
push
int3
outsb
xor
mov
in
loop
xchg
xchg
jl
dec
mov
pop
cltd
cwtl
adc
out
or
add
imul
std
mov
out
mov
xchg
push
lret
mov
inc
and
mov
icebp
fwait
pop
fwait
mov
fdivl
sub
cmc
leave
ret
insl
jbe
add
call
outsl
loopne
push
scas
in
pop
xchg
push
push
push
popa
or
cld
add
and
sub
ja
and
inc
dec
test
leavew
jge
cmp
dec
sbb
push
scas
das
sbb
jno
dec
mov
lret
orl
add
add
movlhps
jg
push
je
sbb
aaa
dec
xchg
addb
push
gs
shrl
lahf
mov
les
dec
mov
adcb
push
xor
jp
loop
in
push
jg
mov
push
add
int3
or
ljmp
cmpsl
mov
lock
fstp
outsb
rorb
repz
hlt
loop
mov
push
pop
cmpsb
rorl
movsb
adc
push
and
cltd
mov
add
xchg
pop
sub
stos
outsl
loopne
stos
xor
mov
mov
and
sub
sub
push
es
loop
add
push
xor
and
ljmp
sub
mov
xor
pop
inc
in
adc
hlt
mov
jae
test
mov
cmp
popf
xorb
fbld
mov
loopne
popa
fstps
push
add
xchg
pop
imul
outsb
movsb
and
scas
popf
sti
or
xchg
sbb
inc
jno
cmp
ss
inc
in
shlb
dec
test
nop
hlt
mov
mov
cmpsl
in
dec
pop
adc
xchg
xchg
flds
repnz
popf
shlb
ds
imul
shrb
rol
cmp
cmc
inc
pop
imul
test
adc
jg
xlat
and
popa
arpl
ljmp
cmovp
or
mov
xor
aam
mov
int
cmp
jnp
ss
test
iret
cmpsl
xlat
sub
mov
popf
aas
mov
pop
and
push
mul
pushf
dec
in
inc
xchg
mov
mov
push
add
dec
pop
jo
fnsave
inc
or
xchg
aaa
mov
dec
les
add
pusha
into
clc
int3
sub
sub
test
lret
push
sub
ds
pusha
mov
leave
xor
shlb
inc
mov
into
inc
out
jp
fwait
outsb
cmp
xchg
push
into
lods
subb
out
gs
inc
shll
enter
push
imul
lods
lods
movsb
push
mov
and
jns
add
xlat
inc
shl
aam
push
push
shrl
rcll
mov
or
rcrb
or
js
imul
rcll
inc
mov
fs
fstpl
fnsave
cmpl
mov
push
test
pop
pop
sarb
pushf
mov
int3
cs
cmp
jnp
mov
adc
stos
outsl
clc
lods
adcl
adcl
leave
xchg
das
sbb
inc
add
jle
ficomps
sub
cmc
and
pop
mov
jb
push
jge
fsts
add
adc
jo
faddl
lret
add
mov
and
ret
add
scas
adc
data16
push
pop
sahf
jle
and
inc
seto
jl
mov
or
xchg
imul
sbb
adc
pop
push
add
cltd
add
jge
outsl
sub
or
cmp
sub
mov
xor
sti
mov
clc
ljmp
jge
add
imul
in
rclb
movsl
jg
adc
xchg
xorl
outsb
sbb
insl
mov
mov
fsubp
int
xchg
aas
aas
dec
mov
repz
pop
std
cmc
ret
jbe
js
mulb
popa
sub
sbb
sbb
sahf
push
jo
push
xchg
rcrb
movsb
out
jae
sbb
push
rcl
and
push
xchg
cmpsl
add
loop
push
add
stos
pop
cld
lcall
iret
std
cmp
pop
push
mov
imul
arpl
mov
stos
andl
xor
sbb
rclb
in
rorb
sti
inc
das
out
or
push
lds
popa
lods
inc
adc
push
xchg
add
lea
out
or
xchg
adc
loopne
cmp
jg
inc
xchg
sbb
jo
or
jge
pushf
insl
movsb
loopne
iret
sbbl
addr16
outsl
push
xorb
xchg
insl
jo
clc
cmp
call
das
push
cs
xchg
repnz
test
mov
mov
and
xchg
dec
mov
pushf
mov
and
jecxz
mov
lcall
cltd
data16
dec
lcall
push
and
mov
sahf
loope
add
lcall
jle
mov
adc
push
sub
or
ds
push
dec
shrb
cli
or
test
movsb
es
dec
inc
sbb
sub
movsl
cmp
mov
sti
es
sti
cmp
lock
pushf
lods
imul
int3
cli
lahf
inc
daa
scas
adc
test
inc
sahf
das
sbb
repz
in
fldt
enter
mov
jno
mov
push
mov
inc
je
test
jp
sbb
daa
rclb
mov
dec
pop
call
adc
in
xchg
ja
mov
dec
pop
mov
bound
fnstenv
sahf
cwtl
jge
jae
adc
add
sub
imul
movsb
or
push
bound
fnstenv
and
pop
lahf
mov
into
adc
ljmp
and
push
sbb
push
pusha
jae
add
sub
ret
lahf
ds
cmpsl
jl
jmp
and
ror
sbb
fsubs
lock
push
int3
sbb
pop
inc
pop
xchg
fadds
inc
es
nop
xor
loope
mov
jne
push
inc
testb
hlt
pop
add
adc
les
das
jl
and
push
popa
sub
fmulp
repnz
dec
call
out
repz
mov
jns
mov
cmp
dec
sub
sti
hlt
cmpsl
call
sub
and
mov
imul
mov
xchg
insl
call
decb
mov
fwait
or
jmp
andb
mov
stos
sbb
xor
pop
nop
xor
mov
das
mov
imul
pop
addr16
mov
mov
xchg
cmp
enter
insl
jnp
cmpsl
movsl
cmp
outsb
stos
dec
divb
push
cwtl
adc
push
xlat
inc
fnstsw
xchg
in
stc
and
aas
xor
repz
and
notb
rclb
sbb
fcmovb
in
testb
xor
loope
movsl
or
xor
mov
mov
xlat
mov
inc
add
data16
mov
inc
mov
fmull
dec
mov
fwait
mov
test
loop
jb
jb
rcrl
mov
or
das
fsubl
mov
xchg
lock
and
cmp
lret
idiv
lcall
fmuls
adc
lods
filds
nop
aas
loopne
sbbl
nop
mov
fldt
scas
inc
imul
in
dec
xor
jmp
xchg
gs
hlt
jecxz
sub
jp
dec
cmc
shrb
loope
push
rcll
popa
push
add
mov
or
mov
mov
pushf
cld
je
cmp
jp
sub
sbb
pusha
mov
add
ffreep
fmull
add
popf
pushf
xchg
mov
jle
ds
xor
out
mov
daa
mov
or
inc
mov
inc
jmp
mov
pop
jnp
aam
cmp
xchg
cmp
sub
xchg
and
jp
mov
enter
mov
add
or
clc
sarb
adc
fstpt
bnd
mov
pop
idivl
mov
stc
adc
cs
mov
cli
jl
lea
xchg
add
and
lret
push
insb
call
push
add
pop
xlat
add
cmp
ss
jge
push
xchg
insl
sahf
stos
mov
outsl
xor
mov
dec
nop
lahf
push
daa
movsb
push
testl
out
mov
je
data16
fdivrs
into
push
cmpb
sahf
cld
clc
jno
jae
and
mov
ljmp
out
or
cld
dec
ss
in
ret
push
and
inc
mov
cmpsw
hlt
sbb
clc
pop
pop
sbb
pusha
roll
add
jecxz
imul
fsubl
lret
cmp
js
inc
leave
add
xor
popa
scas
inc
xchg
femms
imul
lret
adc
or
movsb
inc
mov
das
sbb
mov
jg
push
ret
or
ds
andl
inc
loop
test
insb
mov
int3
js
push
sub
sub
nop
sub
jae
inc
xchg
mov
mov
dec
icebp
out
push
mov
push
lret
push
out
lods
repz
or
lret
xchg
mov
je
cmpsl
and
and
xor
stc
cld
or
xchg
fwait
pop
dec
add
loopne
pop
mov
mov
rorl
fisubs
sti
adc
out
and
cmp
and
fsub
ss
push
in
mov
and
clc
xchg
mov
dec
push
pop
fisttps
mov
pop
push
mov
in
fucomp
das
decb
cmc
cmp
inc
jl
adc
pop
adc
xor
adc
or
inc
adc
cmpsl
push
mov
cmp
jge
xor
aam
mov
add
xchg
je
and
rcrb
aam
jmp
clc
js
push
or
call
pop
mov
xchg
jl
repz
in
cs
inc
sbb
pop
hlt
adc
lock
lods
fbld
insb
jecxz
jg
std
xor
imul
je
gs
or
mov
cs
insb
mov
pop
ja
adc
cmp
out
pushf
repnz
stc
jl
sbb
pop
and
and
ss
enter
mov
imul
xchg
in
pusha
mov
divl
push
jnp
lock
aaa
push
adc
adc
pop
shlb
push
loop
or
repz
lea
hlt
in
scas
bound
mov
sbb
adc
out
and
mov
stos
fnstenv
and
and
iret
jbe
mov
xor
mov
cmpsl
cmp
out
lret
xor
lcall
int
and
add
adc
ret
push
jp
xchg
shll
jg
lahf
cmc
icebp
adc
insl
sub
jno
push
sbb
mov
xchg
or
add
repnz
nop
jne
cmp
pop
mov
mov
hlt
nop
cltd
adcb
sbb
mov
or
mov
ljmp
jno
jmp
add
orb
fidivs
nop
imul
sahf
or
inc
stc
fisttps
push
inc
jp
xor
imulb
sub
outsl
sub
sahf
mov
xchg
mov
adc
mov
sub
es
addr16
adc
dec
rorb
mov
call
cmpsb
adcb
sarl
notb
sbb
in
je
stos
mulb
cmp
cmpb
popa
adc
or
mov
imul
pop
mov
je
pop
daa
mov
mov
or
jb
pop
mov
in
mov
mov
cmpsb
mov
adc
adc
xchg
mov
sti
sbbb
out
jp
mov
lds
lock
mull
les
add
xorb
mov
adc
repnz
lea
xchg
pusha
orb
xchg
push
sub
push
stc
push
mov
adc
cmpsb
sahf
lahf
push
inc
daa
pop
sub
jle
or
xchg
out
scas
cbtw
push
inc
push
das
lods
ss
mov
data16
cs
pop
imul
rcll
out
adc
stos
jb
ret
sbb
ja
les
mov
outsb
mov
es
pop
xchg
sub
cmpsl
pushf
push
jb
addr16
into
xchg
les
das
aam
shl
jno
dec
jo
xchg
fsub
cmpb
push
pop
scas
sub
mov
pop
xor
in
and
repnz
cmp
xor
add
rcll
test
pop
aas
mov
adcb
or
pop
xchg
mov
testl
cmpsl
dec
stos
jmp
push
cmpsl
repz
inc
addr16
pop
fisttpll
pusha
je
pop
mov
dec
fs
xchg
imul
inc
cwtl
icebp
fsts
mov
jae
in
movsb
mov
dec
rorb
fimull
not
adc
sub
and
push
scas
mov
adc
inc
ds
adc
jb
mov
ret
and
or
dec
add
cmpsl
and
sbb
xor
push
pushf
fldenv
xchg
push
mov
pop
stos
push
sub
xchg
pop
jmp
jae
sub
fwait
cli
push
add
mov
cwtl
int
loop
lock
icebp
pop
mov
ret
dec
add
pop
mov
pushf
fidivrs
stc
cmp
mov
jnp
in
cmp
jb
in
inc
add
add
ds
mov
fsubr
shll
lret
mov
push
xchg
lods
adc
pop
inc
or
shrl
add
dec
push
negl
add
inc
imul
out
xor
pop
xchg
out
imul
xchg
movups
xchg
aaa
jge
and
rorb
fmulp
repz
sbb
xchg
pusha
and
sbb
testl
mov
fstpt
xor
fsubs
outsl
cmp
cmp
adc
gs
xchg
dec
ret
out
movsl
imul
mov
mov
jnp
addr16
push
iret
jmp
outsb
mov
icebp
je
in
lret
decl
cmp
repz
jne
mov
pop
mov
jno
imul
push
mov
xchg
mov
inc
es
in
gs
test
aam
pushf
scas
addr16
and
popa
xchg
cmpsb
sahf
jnp
rcrl
sub
std
pop
push
mov
in
push
outsb
dec
out
mov
xchg
xchg
test
dec
jb
arpl
ljmp
rclb
xchg
xor
cmp
push
idivb
test
shl
ret
test
rorl
ret
insl
mov
sarb
cld
xor
push
dec
mov
repnz
cld
ljmp
jae
int
mov
bound
jge
xchg
fildll
lahf
mov
rcrl
or
mov
mov
or
aaa
mov
leave
lods
std
pusha
aam
cmp
pop
les
das
out
loop
inc
xlat
cwtl
mov
inc
je
mov
insb
and
mov
sbb
pop
mov
ss
sub
mov
inc
loopne
dec
bswap
or
mov
lods
or
jb
mov
addr16
iret
lret
cltd
push
sbb
out
imul
repnz
add
push
mov
pop
mov
into
inc
shr
push
adc
sub
std
push
sahf
fistl
loopne
cmpsb
pushf
push
mov
ljmp
cmp
arpl
cmpsl
repz
fsubp
in
dec
mov
loop
xchg
inc
shll
cs
call
inc
cmp
jecxz
jecxz
jnp
sub
add
mov
jmp
call
xchg
addr16
addr16
cmp
pop
add
mov
test
xchg
inc
cli
stos
repnz
push
hlt
pop
cmp
inc
mov
inc
je
fcoml
aad
cwtl
pusha
dec
aas
xor
or
add
add
xor
mov
cmp
add
cmc
and
cmp
dec
pusha
rorb
aad
shll
mov
sub
and
test
sti
iret
cmp
xchg
xchg
pushf
push
pusha
or
scas
daa
lcall
sub
or
out
xchg
arpl
pop
adc
test
inc
add
outsb
lods
pusha
orb
inc
pusha
xchg
sbb
push
mov
std
or
cmpsl
js
jp
inc
int
sub
insb
js
xor
cmp
lea
divb
leave
shl
sahf
flds
bound
sub
sbb
jbe
out
mov
arpl
and
scas
xchg
cmpsb
or
or
sbb
fwait
pop
pop
xor
ror
lds
and
mov
insb
mov
mov
and
jmp
flds
mov
iret
cmpb
lcall
lcall
pop
stos
mov
cmp
mov
and
sbb
enter
imul
jno
scas
popa
pop
jnp
repz
scas
stos
xor
repz
pop
cmc
dec
adc
sbb
cli
push
mov
ret
subb
jno
push
cmc
fisubs
insl
dec
jne
xor
movsl
femms
jno
mov
and
fdivrs
clc
add
leave
dec
xchg
fnstenv
push
pop
int
movsb
or
divb
sbb
dec
adc
sbb
into
sbb
lock
les
ret
insl
aas
call
std
gs
cmp
pop
xchg
js
jns
insl
andl
inc
jp
scas
orb
test
addr16
jmp
mov
mov
cmp
in
xchg
bound
jb
jnp
sbb
orb
mull
xchg
rcrl
cmp
pop
fists
cltd
sub
out
pop
or
movsb
inc
hlt
adc
pop
xchg
inc
lahf
lods
xchg
aad
test
cmp
fcoms
mov
das
xchg
pusha
insb
imul
xor
xchg
fisttpll
rcl
add
mov
pop
inc
adc
or
addb
mov
sti
jl
fwait
imul
sbb
mov
inc
into
lcall
dec
inc
and
xchg
nop
shl
fiaddl
leave
push
lret
les
pop
testb
fiaddl
scas
add
in
aaa
sar
jp
ljmp
push
fidivrs
cmp
add
mov
scas
cmp
push
or
imul
cmp
aaa
and
sahf
ficomps
iret
pop
jbe
ja
jne
sub
add
sub
cmpsl
sbb
xchg
mov
ljmp
jne
jle
mov
outsl
jne
and
pop
lret
sahf
sahf
or
ljmp
and
inc
mov
int3
fucomp
fcomps
add
xor
or
imul
cmp
and
int
mov
mov
call
jl
sar
pop
xlat
pop
loope
addr16
scas
repz
lret
rclb
jne
xor
cltd
push
add
adc
fsubr
out
imul
jecxz
out
test
push
dec
lods
pop
sar
bound
outsb
jmp
cltd
mov
mov
fimuls
add
cmp
mov
jg
mov
and
nop
dec
sub
clc
adc
fisubl
push
xor
insl
or
dec
dec
subb
mov
or
push
or
mov
inc
insl
popa
mov
inc
in
sub
sub
mov
jbe
lods
mov
cs
lds
sub
adc
outsb
out
pop
js
push
aas
repnz
mov
sbb
xchg
jae
and
add
loop
scas
insb
xchg
in
adc
mov
es
je
adc
ds
cmpsb
pusha
fs
fcoms
inc
lfs
mov
pop
popf
xchg
mov
flds
in
dec
jle
push
jge
jb
add
and
push
push
lcall
push
jl
inc
mov
sbb
push
sub
scas
push
lret
inc
sub
xor
cmpsl
push
in
fistpll
call
cmp
cli
lret
jae
mov
lods
mov
mov
push
call
inc
in
cmp
push
jmp
ljmp
leave
out
or
ja
mov
jns
mov
outsb
int
jle
fsubrs
adc
pusha
mov
push
mov
jnp
pop
addb
ja
jmp
sbb
data16
pop
shlb
in
loopne
loop
sub
nop
cwtl
dec
sahf
or
pop
pop
repnz
enter
or
mov
lret
gs
shll
pop
mov
mov
iret
ret
cmp
jp
jns
nop
push
mov
cmp
leave
movsb
fisttps
cmp
jp
aad
or
sbb
mov
or
out
jle
mov
in
dec
ja
push
imul
sub
iret
outsb
adc
std
das
push
outsb
mov
mov
jmp
nop
inc
pop
mov
inc
icebp
imull
or
push
fidivl
gs
lcall
fbld
fs
cli
jns
sarb
cmp
dec
push
jl
cmpsb
cltd
roll
inc
or
cmc
push
imul
inc
imul
cpuid
xchg
gs
popl
push
gs
mov
push
sub
imul
fwait
test
dec
push
cmp
hlt
iret
les
add
adcl
xsaveopt
int3
xor
mov
jnp
push
mov
lds
lahf
inc
add
scas
sbb
testb
loop
mov
mov
leave
lods
mov
sbb
inc
jnp
pop
xchg
pop
mov
and
cmpsl
scas
sbb
dec
inc
and
jbe
aas
sub
jmp
popf
icebp
cld
mov
nop
addb
lahf
rclb
mov
pop
pop
cmc
or
aaa
les
pop
movsb
cmp
or
mov
cli
fdivrs
xchg
js
insb
mov
and
and
ds
fists
push
xor
in
cwtl
mov
fld
lahf
ret
jb
popf
pop
nop
mov
pop
lods
xor
mov
incl
call
adc
push
nop
lahf
pop
mov
flds
cli
cltd
mov
jp
sub
rcll
test
adc
pushl
adc
jmp
popf
leave
add
pop
cs
and
add
test
sbb
lods
orl
or
addr16
sub
popf
lds
popf
test
out
movsl
mov
jae
hlt
data16
mov
ret
cmp
mov
aaa
and
lods
movsl
sbb
in
adc
jg
out
addr16
dec
sbb
mov
xor
mov
push
xor
dec
pop
jle
push
dec
loope
sub
pop
xor
sbb
repnz
mov
dec
sub
scas
mov
shrb
mov
cmp
mov
call
and
mov
jmp
enter
pusha
jge
outsb
cmp
sub
mov
inc
sub
mov
mov
push
xchg
adcb
jg
cmp
sub
pop
mov
lock
test
adc
push
sbb
aaa
dec
mov
mov
movsl
fsubl
sahf
lods
mov
cmp
add
jns
and
lds
pusha
pop
xchg
inc
xor
or
or
and
push
dec
dec
jnp
mov
jo
lock
rcll
lock
mov
mov
jbe
clc
dec
sar
fildl
outsb
sti
imul
or
in
imul
cmpsb
jle
xorl
and
dec
jb
das
mov
arpl
iret
xor
pop
enter
mov
adc
std
mov
jg
pop
dec
subb
pop
in
scas
imul
xor
add
jne
mov
push
test
push
lret
adc
daa
sti
mov
mov
lods
loope
sbb
xchg
jp
or
and
or
or
lock
lods
xor
ret
push
and
push
xchg
dec
adc
mov
out
or
pop
mov
mov
div
xor
inc
stc
mov
cmp
ja
cli
leave
scas
mov
fsubl
mov
push
sbb
ss
in
sar
or
pop
and
xchg
inc
mov
dec
cmc
pusha
outsb
pop
into
pop
or
or
cltd
loop
mov
inc
adc
xlat
mov
mov
std
bound
in
jle
jg
test
xor
and
adc
sub
in
adc
inc
lea
sbb
mov
sti
jne
popa
hlt
cld
mov
out
stc
bound
cli
movsl
jg
jns
arpl
xchg
in
daa
shl
mov
adc
add
enter
jne
jmp
lds
mov
roll
jae
jle
es
jno
adc
test
dec
dec
sbb
and
inc
cwtl
in
adc
pop
inc
test
xchg
inc
and
scas
adc
loopne
in
icebp
sbb
test
iret
lods
imulb
jp
aam
jecxz
inc
cmp
cmpsl
shrb
lock
sbb
xor
sbb
cmpsl
push
test
ficoml
mov
inc
or
pop
out
dec
stc
movsb
rep
add
mov
mov
aaa
cmc
sbb
dec
sahf
push
es
lock
push
xor
or
fdivl
sbb
push
lods
imul
adc
andl
out
cli
aad
add
ja
test
insb
xchg
rcrb
fcompl
cli
mov
insb
mov
cs
sbb
sub
enter
aad
icebp
adc
repnz
comiss
adc
xchg
adc
jae
out
cmp
dec
sbb
aaa
movsl
rep
add
notb
add
sbb
xchg
xor
jecxz
mov
dec
out
mov
cmpl
inc
repz
xchg
mov
popf
ljmp
roll
loopne
pop
push
imul
jle
repz
dec
outsl
stos
je
and
add
pop
arpl
pop
int
dec
lock
adc
call
adc
pusha
fsub
rcll
cli
jb
pop
ret
jg
mov
xor
xor
subl
mov
mov
aaa
scas
sub
or
and
enter
adcb
jns
mov
mov
push
mov
int3
fwait
push
ds
inc
into
jnp
stos
fs
lea
ret
jnp
les
mov
mov
dec
push
dec
pop
out
mov
adc
push
dec
insl
xor
insl
sub
scas
fldl
mov
adc
mov
and
stc
stc
imul
shlb
mov
imul
xor
js
dec
mov
sub
loope
outsl
fdivl
out
test
call
aam
nop
mov
or
mov
add
mov
mov
lret
frndint
and
cltd
movsb
sbb
pop
xchg
fsubrl
ljmp
xchg
test
xorl
in
in
icebp
dec
cmpsb
enter
xor
cmp
nop
pop
add
jmp
addb
jb
call
mov
lret
mov
lcall
jbe
add
enter
xchg
pop
rclb
jnp
fdivrl
sti
inc
jne
xchg
cli
fidivrs
push
fwait
out
xor
cltd
xchg
roll
mov
aaa
aad
les
test
pop
mov
jge
mov
fdiv
inc
cli
data16
ds
mov
seto
xor
data16
ficompl
rcrb
cmp
mov
adc
mov
inc
gs
int3
rcll
mov
jae
add
test
es
inc
je
mov
pop
xchg
in
daa
jl
mov
out
add
sbb
add
jnp
sub
mov
cmpsl
fcmovnbe
mov
xchg
mov
ja
sub
repnz
cwtl
mov
or
rcrl
xchg
xchg
pop
jl
in
xchg
fs
jno
ja
xor
cmp
xorb
test
popf
repnz
adc
pushf
sub
mov
and
adc
es
ret
clc
mov
inc
cmpsb
outsb
sub
mov
cmpsl
shl
pop
loopne
imul
aam
test
pop
mov
rorb
adc
xlat
shll
cmp
insl
cmp
outsb
sbb
test
insl
and
popf
mov
aam
pop
aam
sub
and
push
insl
xchg
movb
arpl
std
imul
fidivl
xchg
notb
xor
xor
pusha
loope
mov
cs
jne
lcall
iret
push
rcl
in
sbb
xchg
adc
and
icebp
dec
and
idiv
cmpsl
call
loop
cmpsl
sub
and
dec
push
adc
push
cwtl
sub
hlt
lds
shlb
lcall
push
or
rcrb
xor
cwtl
xor
outsb
push
ja
fs
hlt
sti
add
rcr
and
jne
mov
xor
movsl
jle
sahf
lret
fcmovnb
cwtl
inc
ret
push
int3
push
mov
popf
push
inc
call
pusha
dec
cmp
shl
mov
or
sbb
jp
arpl
xchg
aad
adc
mov
lods
mov
pop
push
ret
scas
dec
sbb
movsb
mov
mov
or
sbb
jo
out
leave
xchg
in
jnp
mov
adc
lods
test
iret
mov
xchg
test
cmp
dec
xchg
imul
aad
popl
stos
stc
or
dec
pop
ljmp
inc
jmp
cli
iret
shrb
xorl
sbb
push
out
cltd
pop
lret
xor
fwait
lahf
loope
mov
add
repnz
out
jge
and
das
xchg
daa
and
cwtl
sbb
shlb
and
fcmovnb
inc
sbb
lea
adc
jbe
cmp
push
mov
js
pop
aad
gs
ja
cld
addr16
movsb
inc
inc
ret
aas
scas
in
cmp
jecxz
in
sbb
in
in
fmuls
aad
mov
cltd
or
icebp
dec
and
add
loope
lods
mov
pop
ret
jae
in
rcll
das
imull
add
dec
sub
inc
mov
jbe
or
sbb
test
hlt
cli
testb
xchg
adc
ja
xchg
aam
push
xchg
jl
sahf
lock
cmp
ljmp
sbb
insb
pop
lcall
stos
lods
cmp
mov
cmp
mov
shlb
xor
sbb
inc
and
cmp
and
push
inc
push
out
ret
in
pop
das
daa
lret
outsb
mov
setnp
sarl
cmpsb
out
mov
inc
lret
frstor
jl
push
fsubs
pushf
out
jb
pop
xorb
scas
fs
adc
cltd
inc
mov
xchg
jbe
popa
adc
cld
loope
cmp
jnp
inc
adc
xlat
push
jbe
inc
je
add
mov
addr16
inc
out
in
xchg
movsl
cltd
cmp
incb
inc
scas
js
cli
push
fs
jge
dec
inc
push
adc
adc
shlb
rcll
icebp
into
dec
dec
addr16
push
push
mov
lods
fcoms
pop
add
push
out
cmpsl
daa
shr
cmp
mov
push
jecxz
sbb
sbb
jge
sbb
imul
mov
loope
push
lret
fldenv
push
test
cmpsb
sbb
subb
sbb
jle
mov
lret
cmp
adcl
adc
jmp
mov
mov
mov
nop
dec
adc
movsl
cmpsb
ret
adc
sbb
test
lcall
dec
stos
lods
add
xor
scas
iret
inc
sbb
mov
das
ficoml
sub
outsb
or
mov
push
jp
jp
insb
lcall
adcb
cwtl
iret
sub
push
cwtl
cltd
sbb
push
iret
mov
or
fisubl
in
sbbb
ret
adc
mov
mov
pop
iret
xchg
hlt
rclb
aad
rorl
mov
fidivrl
pushf
sahf
mov
sbb
into
sub
push
or
gs
call
cmp
pop
xchg
in
ret
pop
sbb
lea
mov
dec
add
out
mov
push
xor
mov
jle
jmp
xchg
mov
shlb
inc
into
xor
nop
mov
jmp
jne
aaa
inc
jae
inc
or
unpcklps
inc
jecxz
cmp
insl
stc
mov
iret
inc
adc
cmp
inc
ficompl
or
mov
cmpsb
ljmp
call
dec
gs
sub
rcll
std
xchg
lea
inc
aas
pop
inc
xchg
fistps
jmp
fwait
leave
mov
lret
xor
add
gs
lcall
cs
or
sahf
inc
xchg
lcall
pop
fcompl
faddl
push
add
pusha
in
cli
jg
adc
xchg
into
push
bound
push
jb,pt
lods
adc
shrb
xchg
dec
ljmp
lahf
pop
std
rorb
push
int
sub
rcr
daa
dec
ljmp
mov
scas
adc
push
inc
sti
inc
push
lds
and
push
mov
call
inc
add
push
out
push
dec
add
ss
bound
push
xchg
mov
add
fsubs
and
rcrl
insb
into
sub
jge
mov
dec
ffree
jns
insl
shlb
insl
std
mov
dec
mov
out
loope
sbb
sbb
pop
and
xchg
cs
jo
in
popf
dec
jp
in
mov
lods
in
add
jbe
imul
add
das
arpl
lret
sub
mov
shr
clc
mov
out
je
inc
push
and
and
pop
dec
nop
xor
iret
pop
jnp
xchg
mov
cmpsl
repnz
pop
lret
adc
test
xchg
jp
hlt
jg
pop
loopne
iret
mov
stos
das
jb
cmp
sbb
out
shll
add
push
mov
stos
neg
test
push
mov
sbb
mov
pop
sub
xlat
icebp
xor
xchg
push
cli
push
imul
popa
pop
popa
hlt
gs
imul
mov
xor
add
test
dec
adc
mov
xchg
std
sub
cmc
repnz
mov
pop
out
push
jb
jb
in
inc
xor
sub
dec
push
stc
pop
push
jo
mov
lahf
xor
out
cld
mov
imul
sub
loope
xor
jae
jp
ja
sahf
or
adc
or
push
outsb
jl
fimull
push
mov
jmp
outsl
sub
call
inc
lcall
imul
jno
xchg
push
aad
test
cli
std
sbb
dec
cmpsl
imul
add
push
lock
popa
dec
sar
aam
inc
je
bound
xor
mov
lds
or
mov
and
fistpll
push
insl
movsb
sti
xor
cmpl
jp
xchg
std
fisubrl
dec
shrl
inc
mov
in
mov
xor
inc
loop
xchg
int
iret
cmp
and
push
sbb
adc
lahf
inc
adc
sti
inc
movsl
cmp
fsubs
adc
jo
loop
mov
gs
mov
hlt
test
cmc
sbb
mov
cmc
movsb
cmpsl
pop
mov
xchg
fisubl
in
add
cmc
sub
mov
mov
xor
mov
sbb
mov
xchg
cmp
repnz
or
push
scas
lock
arpl
popf
into
cmp
cmp
je
cli
jle
dec
and
jae
xlat
int
mov
jle
push
rcll
sub
std
xor
mov
shlb
xchg
lret
jns
out
mov
in
std
int
stos
mov
aas
xchg
or
inc
sahf
jle
mov
xor
dec
ret
shrl
outsb
and
pop
xchg
hlt
loope
push
sarb
das
and
mov
ds
stc
subb
push
and
adc
cmpsb
std
cmp
add
notb
cmp
call
mov
mov
and
inc
inc
adc
pop
cmp
inc
cwtl
orl
dec
lcall
or
cmc
push
or
jns
test
arpl
mov
sbb
mov
clc
push
pop
jnp
clc
jp
jo
imul
mov
fdivr
fdiv
push
pop
sahf
into
test
mov
popa
push
mov
fcoms
or
jg
in
ljmp
scas
mov
mov
pmulhw
jbe
cmp
hlt
sub
mov
mov
int
icebp
jl
push
push
xchg
dec
xchg
call
sbb
test
repnz
pop
fdivs
incl
pop
imul
sbb
outsl
fstps
add
mov
ss
mov
ficoml
es
xor
jle
mov
sbb
or
dec
sbb
adc
icebp
pop
and
sbb
loop
shlb
aam
mov
xchg
and
xor
dec
jmp
sub
jb
daa
mov
pop
add
out
cmpsl
dec
arpl
out
daa
in
ret
fcoml
stos
shrl
mov
in
push
push
aaa
jbe
or
pop
shr
inc
push
cld
dec
dec
xchg
fdivl
xchg
mov
mov
dec
mov
pop
test
aam
and
cmp
jp
inc
roll
sbb
mov
jo
dec
femms
lods
push
scas
pop
push
inc
sub
xchg
xchg
dec
dec
ficoms
xor
das
add
popa
pop
or
fwait
lds
sub
aaa
xor
xchg
sbb
test
dec
jle
nop
call
xchg
pop
inc
xor
andl
ljmp
jge
add
in
stos
loope
pop
je
mov
mov
insb
jmp
pop
xchg
mov
add
add
xor
mov
add
mov
inc
mov
adc
mov
cmp
xor
pop
inc
xchg
adc
inc
cmpsl
push
add
pop
scas
mov
and
clc
jnp
aas
jle
push
xchg
mov
lret
out
aaa
mov
xor
aad
xor
xchg
cli
cltd
lods
mov
pop
pop
test
pop
lds
push
pusha
repnz
dec
test
popa
aas
in
scas
in
xchg
mov
js
push
or
adc
or
ret
iret
leave
jg
mov
sarb
rol
lds
cltd
fistpl
push
pop
add
test
stc
xlat
out
outsl
out
mov
cmpsl
cwtl
sub
dec
leave
add
fdivp
push
add
inc
nop
xchg
sub
sbb
mov
mov
movsl
push
or
ds
pop
mov
sbb
and
jbe
rcl
daa
push
popa
inc
pushf
cltd
mov
cmpsl
and
insb
mov
adc
in
inc
jnp
push
ja
bound
scas
inc
or
pop
je
cld
out
jg
adc
or
pop
add
sbb
repz
mov
iret
cs
gs
push
out
loopne
fimull
mov
xchg
cmpsl
aad
dec
add
int
mov
mov
xchg
mov
mov
imul
shll
mov
mov
xlat
fwait
dec
xor
fistl
xchg
popa
mov
mov
dec
stc
roll
sub
mov
inc
int3
push
lret
ret
pop
test
cltd
fdiv
insb
sti
pop
inc
mov
fcomps
mov
and
xor
cmovae
orb
pop
aas
push
addr16
pop
adc
daa
fbld
jle
sar
or
add
inc
out
or
lret
cld
mov
sahf
mov
sub
push
jl
dec
or
lock
fidivs
mov
pop
push
stos
jbe
push
cmp
and
mov
das
int3
push
and
sbb
cs
dec
inc
iret
movsl
nop
in
xchg
sbb
xchg
or
and
lea
lods
test
es
mov
sar
inc
cli
insl
outsl
stos
std
stc
ds
test
sub
int
xor
and
and
adc
lods
sub
cmp
and
test
jmp
clc
sbb
jns
mov
sbb
jb
cmp
push
imul
sub
sub
enter
call
loopnew
mov
outsl
inc
xchg
pop
in
sarl
test
sbb
aaa
mov
mov
add
sub
icebp
xor
fwait
adc
ror
xchg
js
xchg
das
xchg
push
pop
gs
jmp
mov
cltd
subb
cmp
loop
xchg
xor
call
sti
push
lea
cld
and
xlat
mov
push
sbbb
frstor
add
lret
insl
xchg
and
loopne
out
test
popa
aas
dec
adc
int3
mov
in
stc
addr16
rclb
sub
bnd
add
push
imul
dec
stc
inc
jbe
and
or
xchg
outsb
push
dec
mov
mov
inc
pop
jns
cs
fdivrl
cmp
call
neg
push
inc
jne
fs
lret
hlt
mov
jnp
insb
or
mov
test
inc
pop
push
mov
cs
jp
shr
test
rolb
jbe
push
lock
pop
add
popf
inc
inc
outsl
mov
pop
ss
mov
aad
fdivrl
movups
xchg
insl
outsl
sbb
lcall
les
sub
dec
adc
mov
pop
fcoms
es
sbb
cmc
idivl
icebp
stc
mov
push
mov
popa
mov
mov
xchg
gs
rol
imulb
or
jle
pop
jmp
mov
inc
or
stos
fisttps
icebp
andl
adc
test
test
and
sub
push
pop
sbb
cmp
cmc
push
jl
lods
rcrl
jnp
test
nop
inc
repz
cmp
scas
jecxz
pop
lret
xlat
test
cs
lods
add
popa
movsl
cmp
lahf
and
incl
mov
or
rcll
push
jne
lea
jb
add
jge
repnz
push
jbe
mov
bound
inc
ljmp
sbb
inc
xchg
iret
mov
fstpt
push
test
lahf
aas
std
pop
add
and
cs
data16
nop
or
call
jge
sub
cs
xor
jo
in
cmp
shl
jb
or
cld
stc
fcmovnbe
imul
out
add
add
pop
fisttps
test
dec
pop
sti
sub
inc
xchg
out
mov
imul
xchg
push
arpl
in
in
clc
xor
cltd
repz
push
fldcw
insb
and
mov
lret
dec
or
xchg
push
scas
lds
sbbl
insb
sub
xchg
mov
jle
in
popf
enter
xchg
add
fwait
sub
and
sbb
mov
pop
mov
cld
fldl
cld
lods
cmpsl
pop
mov
push
sbb
cmp
cmpsl
pop
dec
mov
fmuls
lods
mov
in
jg
out
dec
clc
dec
and
mov
loopne
test
push
dec
xlat
xor
mov
dec
dec
xor
jmp
int
dec
pop
lret
cmp
lea
push
xchg
testl
pop
jge
dec
outsl
sbb
es
cwtl
fimull
pushf
repz
js
hlt
dec
test
int
jbe
ret
scas
arpl
aas
sbb
fwait
andb
int3
in
mov
out
push
sub
mov
je
mov
mov
push
sub
adc
mov
int
adc
in
jb
jae
sbb
repnz
aaa
jns
sbb
mov
out
outsl
orb
sbb
adc
jno
push
and
inc
aaa
sub
jp
out
and
sub
add
xor
jg
mov
divl
mov
insl
xchg
mov
aas
lahf
test
aam
adc
popl
ficompl
add
jb
cmc
subl
xor
push
sub
pop
lock
sub
lret
repz
xchg
inc
mov
inc
jo
mov
push
pop
adc
jecxz
fcomi
adc
outsl
xchg
popf
std
sub
push
push
es
scas
rolb
or
pop
in
popf
sbb
into
pminub
mov
inc
sbb
mov
popa
cli
ds
sub
scas
pop
mov
mov
mov
pop
fnstenv
test
in
aaa
xor
shrl
ffreep
adc
outsl
cltd
pop
xlat
call
pop
dec
mov
adc
cmp
or
mov
push
mov
dec
imul
arpl
and
jge
clc
fcomip
pop
and
pushl
add
nop
mov
sarl
je
mov
sbb
jmp
cmp
ds
sbbb
in
ljmp
pmaxsw
fsubl
xchg
nop
pop
pop
sbb
loope
mov
jo
sub
cmpsb
stc
jp
or
cmp
add
loopne
arpl
imul
cltd
inc
sub
into
mov
das
mov
leave
jae
jp
stos
stos
lds
xor
cwtd
fnsave
in
sahf
xor
out
ret
subb
xchg
add
jle
or
pop
mov
sub
test
and
fistl
sarb
imul
repz
aaa
ret
cmpsl
loope
sar
outsb
ss
xor
add
pusha
mov
cmpl
adc
or
out
orb
nop
mov
in
pop
cs
push
pop
lcall
imul
scas
add
insl
adc
into
cld
data16
loope
dec
fadds
jl
adc
xor
loope
mov
lods
lock
imulb
std
cmp
insl
loopne
sbb
je
rep
xchg
push
sub
cmc
sub
jl
lahf
or
mov
pop
pushf
xchg
das
daa
pop
push
std
mov
lds
dec
or
popa
dec
lret
jb
clc
add
icebp
hlt
mov
jmp
mov
fs
jp
icebp
jb
jp
lds
je
and
clc
in
sub
data16
inc
das
addr16
dec
adcl
jecxz
xor
fwait
mov
xchg
sub
mov
mov
scas
adc
inc
test
sub
adc
movsl
sub
xchg
stc
cwtl
xchg
adc
push
insb
or
jmp
lret
lret
das
lea
stc
mov
int3
sbb
push
lds
orb
imul
insb
push
sar
jns
in
in
cmp
mov
orl
scas
imul
aad
sub
and
fnstsw
mov
and
jle
ss
inc
lock
add
cld
gs
scas
mov
adc
out
push
mov
xchg
fwait
push
lock
inc
adc
sbb
je
pop
ss
int
das
in
leave
les
pop
push
jae
and
repz
push
mov
mov
imul
cli
int
sar
mov
fisubl
out
mov
adc
mov
imul
out
incl
xor
data16
sbbl
das
loop
fldt
pop
cwtl
adc
stos
sti
pcmpgtd
adc
pop
cmpsl
cld
pop
dec
mov
ljmp
mov
daa
repnz
enter
cltd
cmp
dec
and
adc
aas
push
nop
inc
cltd
int
inc
mov
lahf
add
mov
jmp
push
push
and
xchg
pop
call
iret
inc
jbe
js
mov
pop
int
addr16
or
sub
test
mov
int3
push
inc
movsl
ret
inc
aas
add
flds
xchg
fimuls
stos
aam
jbe
or
jbe
gs
push
in
and
sbb
or
jmp
mov
icebp
adc
js
jb
cwtl
nop
add
test
dec
idivl
es
mov
and
sub
adc
rcll
mov
fistpll
dec
and
in
in
ds
scas
xchg
ficoml
or
cmp
pop
test
jp
add
mov
dec
xchg
push
mov
sbb
insl
popf
push
sbb
pop
jo
fxch
js
sti
out
das
int3
sub
mov
ss
mov
pop
adc
jp
add
lahf
addb
aad
cmp
xchg
mov
mov
adc
test
repz
or
or
out
push
mov
inc
inc
retw
pop
pop
mov
shl
push
push
add
mov
cmp
pop
lds
and
xchg
mov
inc
inc
aad
imul
jl
stos
jp
cmpsl
imul
cmpsl
xchg
sbb
or
xchg
dec
aas
enter
sbb
cmp
push
lret
sbb
sub
lret
mov
imul
jmp
sub
jmp
mov
out
jp
pop
xchg
cmpsl
and
xor
jno
or
out
rcrl
push
adc
push
mov
pop
fsubs
insl
and
movsl
mov
gs
mov
dec
push
dec
in
into
dec
inc
or
and
pop
add
xchg
jb
push
ret
andb
sub
in
das
push
add
daa
dec
inc
subl
je
fwait
xchg
leave
ficoms
or
das
cmpsl
inc
neg
push
mov
mov
push
aad
insb
jno
daa
out
pop
mov
cmpsb
or
inc
cli
sub
dec
ljmp
repnz
mov
mov
addr16
cs
jo
dec
out
push
lcall
outsl
into
paddd
and
mov
mov
les
jmp
sarb
inc
adc
sbb
push
or
ret
lcall
inc
sub
pop
arpl
dec
bound
hlt
test
insb
push
ds
jp
pop
rorb
mov
xchg
fdivl
mov
lods
je
sub
int
and
lods
decl
push
enter
rorl
push
push
fdivs
sahf
inc
fisubs
ffreep
mov
test
mov
cld
xchg
sarl
mov
add
sbb
arpl
mov
lds
dec
xor
and
das
fstps
fists
div
push
jnp
int3
or
and
xor
mov
in
mov
out
push
ss
and
sbb
out
stos
adc
pop
rcrl
pop
ljmp
add
ss
xchg
xlat
daa
popa
and
orl
mov
push
rsqrtps
cltd
or
xchg
push
sbb
imul
adc
sub
xor
push
inc
xchg
stos
sub
repnz
mov
mov
mov
hlt
push
mov
sbb
stc
xchg
repnz
sbb
or
and
add
or
pop
scas
mov
iret
shll
mov
inc
shlb
movl
mov
cli
and
repz
sbb
pop
dec
fwait
cmp
jnp
inc
lret
outsl
fwait
xchg
cltd
xor
inc
les
les
in
or
and
xlat
std
out
xchg
and
fsubs
int
adc
cmpsb
or
cmc
pusha
outsl
and
rol
mov
fmuls
mov
xchg
out
int
adc
pop
jle
or
ljmp
call
cmp
xor
faddl
xchg
mov
or
mov
dec
inc
lret
rcrb
data16
xchg
lods
bound
repz
imul
dec
scas
out
test
or
xor
test
mov
xchg
stos
xchg
xlat
or
jb
stc
sbb
add
and
xchg
adc
std
jb
movsl
jmp
mov
or
pop
cld
dec
xor
xor
test
dec
loop
mov
in
adc
in
dec
and
test
js
cld
and
mov
sbb
adc
mov
mov
in
movb
js
inc
pushf
popa
mov
mov
subb
ret
adc
shlb
adc
jnp
call
repz
scas
bnd
xor
mov
sbb
test
xchg
popf
dec
jmp
into
xchg
or
scas
jle
or
out
aam
jnp
jmp
inc
icebp
mov
aam
pop
bound
insl
and
adc
lahf
pop
cs
push
push
lock
mov
jb
push
lret
mov
dec
pop
rcl
inc
cmp
push
add
add
xlat
aad
xor
jmp
xor
xchg
mov
inc
adc
ret
jmp
sub
xchg
jmp
mov
jae
ret
loop
sub
add
repz
or
mov
repz
daa
and
or
jne
test
push
loope
pop
cmp
push
sbb
ret
and
outsb
xchg
clts
mov
cld
mov
push
je
and
sub
jmp
and
jnp
jg
sbb
inc
cli
repnz
xchg
push
xor
negb
out
cmpb
sbb
jmp
mov
inc
aaa
push
gs
ss
test
mov
scas
jg
sbb
icebp
mov
add
lea
pop
xchg
cmp
dec
rcr
cmpsl
out
sub
pop
iret
in
jmp
scas
pushf
popf
rcr
mov
xchg
test
test
enter
fwait
imulb
push
sbb
fisubs
jecxz
cmp
pop
sub
mov
fsubs
adc
xchg
dec
aas
sbb
dec
test
int
mov
cld
enter
iret
inc
push
hlt
push
mov
xor
popa
cld
pop
and
cmp
cmp
sub
xchg
adc
popl
or
and
jl
loop
mov
jb
sti
filds
repz
sub
sbb
pop
cmp
mov
loope
dec
lods
insl
stos
mov
pop
add
loop
scas
ss
in
sbb
push
icebp
les
ja
mov
inc
fbld
dec
inc
or
cmp
lret
xor
call
push
fisttpl
stos
inc
imul
xor
sub
ret
push
jmp
or
add
in
push
int
inc
lcall
cmp
shll
cmp
sbb
jo
ret
jg
fld
pop
pop
ljmp
sarl
xor
inc
add
imulb
xchg
mov
clc
fs
mov
add
dec
jo
xor
add
dec
pop
lods
ja
inc
repnz
or
cmpsb
pop
cmpsb
pushf
or
pop
pop
hlt
inc
lret
push
nop
aad
mov
sub
ljmp
jno
test
mov
pop
mov
stos
rcrb
aad
cmpsb
inc
adc
inc
jmp
mov
inc
adc
cmc
in
and
out
ljmp
int3
adc
or
lret
dec
mov
addr16
xchg
push
out
inc
xchg
sub
int3
cmp
loope
test
inc
jbe
jno
idiv
mov
sbb
jecxz
ljmp
or
inc
mov
aad
push
xchg
aaa
std
cmp
dec
test
jne
mov
cmp
call
sub
mov
mov
roll
daa
mov
xchg
int
adc
fdivrl
inc
stos
xchg
adc
or
int3
inc
push
int
rep
insl
icebp
fcmovu
jns
add
aad
into
jecxz
inc
inc
dec
mov
xchg
lods
sbb
stos
inc
cmpsl
push
les
xchg
push
out
and
daa
mov
mov
popf
sbb
popl
lea
cld
fsub
sbb
xchg
push
std
xchg
in
loope
or
ficoms
cltd
jle
inc
outsl
addr16
xchg
xorb
or
cmpl
dec
mov
aaa
adc
jmp
aas
daa
mov
and
inc
sub
and
mov
loop
ficoms
es
adc
mov
shr
add
out
int
xor
dec
sahf
push
mov
scas
popf
xchg
cmp
mov
pop
push
sbb
or
fs
mov
roll
in
xchg
push
mov
xor
cmpsl
jmp
call
in
cs
xchg
pop
jl
stc
push
mov
mov
mov
and
adc
iret
xchg
loope
inc
scas
push
das
sbb
xor
loop
add
mov
mov
fimuls
inc
or
sub
push
add
dec
jno
inc
out
cli
rcrb
ss
sbb
lcall
mov
jne
in
sub
adc
lahf
test
out
lds
pop
push
lret
push
inc
jno
aas
jns
push
jns
ds
insl
mov
scas
cmp
xor
scas
pop
and
push
xchg
cld
pushw
fldt
shr
rol
pop
lea
and
xor
sbb
cmp
lcall
lcall
pop
addr16
stc
jge
mov
cmp
stos
push
sbb
ret
lods
repz
mov
into
clc
add
mov
add
xor
push
test
or
mov
add
loopne
or
xchg
pop
test
rclb
xchg
xor
mov
movb
and
cld
test
in
lods
mov
push
push
rcll
push
and
cmpsb
adc
in
rcll
loop
adcl
add
jg
lcall
jno
add
add
or
sbb
pop
xor
and
cli
sbb
pop
lods
push
in
mov
mov
jge
mov
jmp
stos
in
push
jle
ror
push
or
push
add
outsl
cli
cmp
jl
or
dec
sub
push
mov
add
jge
push
jecxz
lret
stos
mov
movsl
js
aas
mov
sar
jl,pt
cmpsb
fdivr
mov
clc
gs
fwait
mov
and
clc
adc
push
data16
ds
movsb
repnz
inc
xor
sbb
xchg
and
movsb
lea
ljmp
fwait
sub
and
xchg
dec
ja
test
rcll
in
decl
jle
jge
insl
xchg
andl
push
call
je
enter
mov
fldenv
xchg
jmp
mov
push
pop
les
cmpsl
outsl
cli
push
sub
push
mov
test
cmc
inc
adc
push
push
and
jmp
dec
push
and
dec
or
ret
cmp
aaa
pop
mov
mov
sbb
cmp
fisttpl
jge
mov
sub
imul
out
lret
xchg
popf
into
insl
lret
dec
xchg
int3
mov
repz
adc
mov
call
mov
sub
and
pop
sbb
test
mov
repnz
rolb
ret
push
rol
xchg
rclb
je
imul
sub
mov
sub
test
push
out
pop
loopne
ret
into
rolb
pop
add
push
mov
dec
das
xor
mov
outsl
movsl
aas
pop
cmpsb
je
cli
mov
sbb
inc
mov
jmp
cmp
jecxz
push
mov
iret
and
and
or
ficompl
add
mov
mov
add
scas
btr
cld
sub
cmp
jp
inc
rol
ja
test
jge
subb
jg
outsb
and
inc
cltd
xchg
in
lds
call
sbb
push
rcll
jb
cmpb
inc
mov
xor
add
dec
pop
into
or
addr16
push
mov
or
imul
sbb
into
leave
pop
mov
add
xchg
cmp
stos
or
cmp
mov
pop
xchg
adc
mov
jmp
inc
xchg
adc
data16
out
jb
ljmp
add
jno
movsb
jns
inc
xchg
mov
sbb
inc
jbe
ficoml
or
fdivr
testb
hlt
dec
cmpsl
pop
pop
pusha
pop
xor
inc
outsl
push
sti
and
shrb
pop
sbb
daa
push
hlt
pop
leave
cmp
test
inc
jno
movsl
aas
enter
bound
add
scas
mov
iret
in
xchg
inc
sarl
rcll
orb
shlb
nop
inc
iret
test
les
jle
mov
cmp
outsb
adc
push
je
push
sbb
ficomps
lret
push
push
mov
rcrl
xchg
lcall
fists
xor
test
and
sti
les
mov
adc
inc
pop
test
rol
aad
jge
push
test
std
test
in
movsb
out
mov
int3
ja
sub
fstp
ret
call
rcr
pop
lcall
dec
icebp
push
dec
popa
cltd
dec
xchg
push
imul
filds
test
cmc
nopl
push
mov
das
fwait
lcall
mov
mov
arpl
inc
pushf
lret
in
repnz
rcll
stos
sub
ljmp
aaa
sahf
jle
or
mov
loope
sub
dec
inc
sarl
daa
lahf
into
sbb
out
or
loop
sbb
lcall
xor
orl
into
pop
mov
sub
outsb
lock
stos
inc
in
cmp
lea
push
push
inc
cmp
jno
sbb
lret
insl
lock
aaa
dec
cmpsl
jecxz
adc
add
addr16
push
sub
xlat
fwait
sahf
and
push
shrb
movl
out
cmp
shlb
pop
imull
es
fldcw
lea
add
into
mov
rcl
repz
mov
xor
rolb
and
pop
sbb
jne
out
lea
lret
adc
sbb
int3
xchg
pop
shr
dec
dec
jno
xchg
sub
jo
xor
test
mov
inc
fnstsw
testb
jae
pop
sbbl
sbb
stc
xchg
push
push
movsb
mov
loope
mov
sub
outsb
insb
push
lds
daa
les
aaa
push
cli
mov
icebp
jne
inc
sub
data16
jle
sbb
lods
clc
fs
lds
divl
inc
movsb
das
or
roll
fidivrl
sbbl
add
or
mov
adc
sti
and
hlt
ret
lds
push
push
jecxz
add
inc
out
add
out
in
int3
push
in
add
sbb
repnz
or
pop
ss
scas
mov
loopne
mov
add
sub
dec
push
sub
jg
cmc
pop
iret
or
in
in
lods
lret
psubsb
add
sub
out
lahf
pushf
cmp
inc
cmp
cmpsl
mov
sbb
mov
push
xor
aad
dec
and
roll
mov
shll
pop
or
dec
push
inc
shl
jecxz
inc
and
mov
xchg
dec
sbb
sub
gs
jg
pusha
mov
test
mov
fdivrs
lret
push
dec
mov
jbe
sbb
sbb
inc
mov
test
shlb
repz
daa
push
push
add
ljmp
imul
adc
pop
and
sub
movsl
xchg
repnz
insl
lods
xor
sbb
sub
lods
jl
sbb
mov
push
testl
cmpsl
outsb
dec
mov
and
arpl
adc
pop
push
xor
aad
lea
mov
cltd
mov
mov
arpl
ja
daa
insb
and
push
dec
push
call
imul
lret
push
cwtl
adc
jle
add
mov
inc
xor
xor
xor
jmp
pop
and
dec
arpl
shlb
mov
mulb
push
inc
lds
sbb
inc
call
daa
adc
pop
popf
and
push
inc
and
jno
dec
mov
jo
sbb
or
popa
ss
mov
mov
mov
xchg
es
movsb
aad
mov
sbb
or
insb
xchg
or
fdivp
jo
jnp
adc
rolb
sbb
in
push
push
js
out
lods
push
lods
data16
lcall
fwait
pop
or
add
push
cmp
pop
jmp
mov
sbb
mov
aad
cmp
lret
in
or
je
stos
dec
cli
dec
jl
mov
adc
pushf
mov
into
in
sub
push
cs
fs
xchg
cmp
js
loope
data16
fidivrl
mov
add
mov
fbld
ja
andl
mov
gs
repnz
test
enter
mov
sbb
xlat
mov
dec
adc
dec
sbb
pop
inc
stos
xchg
int3
out
add
mov
dec
ret
jae
dec
mull
int
das
push
pop
pushf
cld
into
xchg
outsl
xchg
hlt
mov
ja
inc
or
inc
imul
scas
dec
push
out
or
pop
leave
jmp
mov
pushf
jae
xorb
xor
push
add
lods
push
xchg
in
xchg
push
inc
lahf
out
gs
xor
iret
fdivl
add
adc
repz
and
xor
push
mov
or
jmp
loope
sub
std
ja
push
push
mov
pop
dec
jl
mov
xor
daa
jg
cwtl
xor
or
test
mov
sbb
ja
mov
mov
or
pusha
mov
and
es
cmp
out
xchg
stc
test
and
iret
aam
inc
add
fucom
jnp
lret
xor
dec
jmp
arpl
jg
cmp
aad
mov
xorl
out
or
fistl
jns
int3
sub
pop
xchg
cmp
ss
les
data16
add
dec
popf
or
mov
sub
mov
fildl
repz
orb
sub
addr16
dec
xchg
adc
jl
push
int3
inc
adc
lds
lods
fidivrl
insl
lods
imul
dec
out
dec
xor
fdiv
sbb
lcall
loopne
movsl
dec
fucomi
fstpl
in
sub
out
sub
jae
in
stos
sbb
sub
cmp
xor
sahf
xchg
jl
jnp
dec
xor
and
in
xor
call
mov
add
jg
insb
loop
ja
pop
and
pop
jmp
mov
lret
pop
arpl
mov
add
push
mov
montmul
cmpsb
add
xchg
ret
or
or
and
aad
mov
push
pop
fcoms
lods
inc
sub
lahf
sub
inc
xchg
pop
lret
sbb
jno
sbbl
jl
xor
jmp
push
mov
cmp
out
stos
hlt
outsl
jbe
xor
or
out
or
push
int
mov
outsl
sbb
fimuls
cltd
clc
pop
aaa
or
jg
pop
mov
leave
and
dec
add
ja
sub
loope
push
out
cmp
rorb
mov
add
or
push
push
and
test
push
enter
roll
rcrb
cltd
pop
push
pop
mov
jg
sub
int3
imul
dec
cmpl
adc
rcr
xor
jne
xchg
mov
cs
sbb
into
dec
mov
jmp
mov
pop
dec
lret
jo
movsl
lods
push
aad
cmp
xchg
mov
mov
adc
mov
adc
cmp
hlt
sub
adc
inc
aas
adc
loopne
jmp
mov
push
mov
push
xchg
ret
jg
xchg
xchg
or
aas
pop
popf
das
or
push
movsb
push
js
in
dec
sbb
lods
add
movsl
sbb
push
push
lcall
nop
pop
mov
jb
rcrb
rol
xchg
inc
mov
inc
faddl
jle
mov
hlt
movsl
cwtl
orb
push
dec
mov
jge
sub
aaa
pop
adc
mov
cmpsl
into
mov
icebp
fstps
push
fidivl
lret
dec
mov
or
mov
loop
insl
sarb
ret
sbb
sub
imul
adc
xchg
mov
popf
lock
arpl
push
aaa
icebp
rorb
xlat
mov
mov
int
aam
rolb
addr16
das
aas
or
sbb
int3
out
subl
into
mov
mov
data16
scas
enter
jne
sub
dec
jle
insl
cmp
pushf
xor
jbe
or
xor
sbb
lret
pop
adc
or
js
and
outsb
nop
pop
cmp
cmpb
shrl
adc
sbb
push
push
push
add
popf
stos
push
and
pusha
lret
popf
add
in
push
sbb
pop
les
inc
add
hlt
adc
loope
jmp
mov
ds
cmc
pop
sub
dec
scas
jp
jb
fisttpll
adc
in
or
and
or
inc
into
xchg
imul
mov
xchg
flds
aas
in
aad
and
call
push
cmp
and
add
repnz
lahf
pop
rcr
or
cmc
cmp
jae
cmpsl
in
bound
adcb
push
mov
loop
jo
ss
sub
xor
in
xor
pop
xchg
dec
je
sahf
sub
fdivp
mov
inc
add
loop
mov
push
shll
adcl
lds
jns
js
mov
insb
dec
dec
jns
xor
outsb
ret
pop
dec
fisubrl
dec
aas
mov
inc
pop
jnp
jge
or
fdivl
aas
shr
psllw
pop
jne
pusha
cwtl
lods
stc
xchg
in
subl
jp
out
lea
in
lahf
fsubr
int
lock
repz
or
push
mov
cltd
jne
int3
shl
pop
xchg
add
xchg
sbb
lock
xor
xchg
mov
call
sarb
aam
into
push
dec
push
add
xchg
into
xchg
jmp
ljmp
xchg
sub
fcmove
jae
add
jl
or
pushf
out
test
sarb
pop
loopne
shll
push
pop
mov
test
add
mov
sub
out
fidivrl
xchg
xor
in
orb
sar
lods
sub
rol
test
xchg
sub
mov
mov
inc
ficomps
lods
in
mov
popf
mov
cmp
mov
loope
out
subb
push
outsb
jo
xchg
cltd
add
aaa
xor
orb
push
aad
mov
mov
jp
mov
cs
and
mov
orb
movsl
mov
bound
lahf
mov
jl
das
mov
xchg
outsl
mov
out
loopne
cli
and
cmpsb
xchg
mov
das
shrb
xor
nop
jmp
ja
pop
mov
add
adc
sti
clc
pop
mov
adc
fnstcw
pop
mulb
ret
jle
push
pop
pop
nop
or
sbb
sub
popl
addb
cmp
mov
lahf
adc
mov
jne
cmpsb
adc
jl
jnp
cmpsl
add
inc
int
inc
adc
dec
push
fs
aaa
insl
xchg
mov
add
mov
movsb
xchg
arpl
push
popf
add
mov
jmp
or
sahf
repnz
mov
in
ja
dec
loop
mov
mov
ret
popa
divps
mov
fdivl
or
mov
ret
inc
roll
ja
test
pop
fsts
out
xchg
sub
mov
scas
shr
inc
adc
imul
jae
and
adc
loop
lret
cmp
mov
push
cmp
dec
dec
stos
push
loop
fdivrp
es
in
mov
pop
cwtl
decl
pop
lret
xchg
xrelease
or
loopne
dec
push
loop
adc
push
mov
ret
or
mov
cwtl
cmp
jne
sahf
cli
dec
cmc
and
subb
push
mov
hlt
sbb
ss
lret
dec
sub
mov
int
sub
cmp
jo
dec
sub
cltd
pop
arpl
insl
icebp
pop
in
jg
mov
mov
leave
shlb
cwtl
es
sbb
sub
mov
gs
loope
mov
push
xor
fldenv
mov
arpl
outsb
push
cmp
das
cmp
in
xor
xor
fwait
addr16
add
loop
mov
ljmp
mov
pop
outsl
xchg
dec
mov
jg
pop
and
incb
jmp
mov
dec
in
sbbb
loopne
jb
push
outsb
aam
sub
mov
mov
lock
int
mov
out
dec
dec
mov
fdivs
addl
dec
pop
jnp
nop
xchg
or
icebp
pop
into
repz
and
mov
or
jle
mov
daa
xor
in
sbb
or
imul
dec
ljmp
ljmp
mov
popa
test
ficoml
gs
xor
arpl
scas
mov
cmc
pusha
fimuls
fistps
adc
pop
or
ljmp
xchg
sub
fcoms
test
mov
jecxz
sbb
jmp
sub
mov
mov
cmpsl
or
mov
pop
rcrl
je
push
in
jmp
mov
jbe
lahf
call
cltd
mov
inc
fsts
inc
fisubrl
insb
outsl
dec
dec
popa
cwtl
mov
fst
data16
cmp
sub
xchg
and
inc
or
pop
test
and
sbb
aas
inc
pop
out
sbb
pop
add
dec
add
cmpsl
lds
pop
push
adc
dec
push
inc
pusha
or
dec
fisubrl
sub
das
or
stc
or
add
cli
inc
cmp
push
jns
pop
sbb
jbe
call
inc
pushf
clc
and
push
mov
push
sub
or
mov
cwtl
inc
or
mov
jae
mov
xor
inc
xchg
mov
lods
fisubrl
bound
insb
lcall
cmp
popf
adc
cmpsb
std
call
push
mov
mov
movsb
cmpsl
out
push
sbb
dec
xor
into
mov
add
sub
scas
sahf
sbb
lock
dec
dec
push
xchg
fisubs
sub
sbb
ret
rcll
cmp
les
ret
xchg
jo
sbb
xchg
sub
jg
jb
xchg
outsl
xlat
iret
add
or
push
pusha
xchg
sbb
insb
loop
pop
add
and
xchg
sti
stos
icebp
mov
xor
test
or
data16
fs
cmpsl
jno
repz
sub
lods
and
out
cli
ret
cmpsl
cltd
dec
je
xchg
int3
dec
rclb
repz
subl
pop
add
cmp
xchg
mov
pop
sbb
dec
icebp
pusha
enter
rcl
fs
stc
rep
pop
mov
ss
and
inc
gs
fwait
popa
in
xchg
dec
push
adc
adc
inc
ret
enter
sbb
push
call
cmpb
sar
mov
push
sub
cmp
outsl
or
test
je
adc
pop
mov
js
dec
push
stos
sbb
or
dec
cs
jmp
cmp
int
add
xor
cltd
roll
mov
xor
scas
and
sti
dec
jle
push
scas
jne
incl
cli
cli
addb
std
mov
cmp
dec
insl
sbb
movsl
into
jb
sub
sub
loopne
and
neg
sub
sbb
pop
lret
inc
cmp
pushf
lds
pop
leave
jno
sar
vminss
out
fimull
mov
mov
idiv
in
push
xchg
lahf
loope
mov
jb
scas
shl
cld
repnz
imul
pop
stos
pop
adc
sub
push
or
xchg
cltd
jne
sub
test
or
je
xchg
jns
daa
call
in
and
lods
xchg
cmp
outsl
sub
push
stos
sbb
jl
xchg
aaa
adc
test
pushf
rcrl
mov
cli
mov
rorb
lods
fstl
or
stos
adc
cmp
icebp
xchg
xchg
outsl
js
popf
cmpsb
sbb
shrb
divl
ror
mov
movsb
sub
shl
cmp
inc
lock
and
push
inc
mov
sub
rorl
fiaddl
ja
dec
loopne
and
incl
fsin
and
pop
sub
roll
add
push
out
test
enter
cltd
imul
sbb
jecxz
cwtl
mov
mov
das
cld
data16
mov
mov
adcb
mov
lcall
pushf
push
cmpsb
adc
cmp
dec
loope
dec
js
push
pop
and
xor
dec
jle
pop
and
mov
sbbb
rorl
inc
fwait
sbb
ret
xchg
mov
xor
inc
xchg
sbb
dec
out
push
dec
pop
push
xchg
or
cmp
sbb
movswl
mov
test
loop
out
frstor
mov
push
mov
imul
xchg
stos
adc
loopne
and
xchg
inc
je
mov
loope
sbb
and
mov
neg
mov
push
dec
ljmp
test
flds
add
xor
insb
add
push
cld
mov
ljmp
mov
add
xor
jecxz
out
xor
movsb
pop
jns
cwtl
lods
aaa
insl
inc
push
fidivs
stos
fs
fs
jbe
stos
sbb
movsb
mov
addr16
push
aad
int
sbb
mov
ret
imul
cli
mov
push
adc
xchg
test
mov
scas
mov
dec
push
mov
add
lahf
xchg
fwait
jle
int3
jl
push
mov
stc
add
xlat
sub
pop
outsl
dec
pushf
dec
inc
push
inc
xchg
dec
lock
cmp
inc
xlat
inc
stc
fs
fxch
pop
test
push
stc
mov
inc
leave
into
in
sub
inc
rol
rcr
mov
shrl
sbb
push
ret
lea
sub
xchg
test
cmpsb
jb
mov
stos
outsb
mov
shr
js
adcb
leave
mov
stos
loopne
mov
lods
mov
adc
rol
jbe
cwtl
subb
inc
jnp
push
dec
jge
out
pop
loopne
lods
ljmp
jne
pop
xchg
lods
jl
icebp
pop
jle
push
cmpsb
sbbl
dec
sahf
dec
clc
lock
mov
rorb
inc
subl
cs
arpl
in
loopne
jecxz
imul
cmp
inc
push
jbe
ja
sbb
aam
ds
xor
pop
sti
and
cmpsb
ret
sbb
stos
mov
sbb
and
inc
rclb
inc
dec
test
add
xchg
xor
dec
push
daa
setbe
out
jbe
dec
push
push
xor
and
aad
cwtl
add
stos
or
dec
ret
cmpl
xlat
push
inc
cmp
enter
sub
inc
pop
clc
jmp
jmp
xor
mov
or
pop
mov
cltd
out
stos
inc
pushf
xor
std
fwait
lret
add
cmpsb
push
or
fisubrl
sbb
rcrl
movsb
mov
cs
pushf
push
clc
jns
cmp
in
pushf
test
in
and
jo
out
outsb
dec
jae
sub
clc
push
scas
test
push
orb
rolb
notb
jo
mov
xor
lcall
pop
test
sbb
add
cwtl
loope
data16
lds
das
adc
xor
lea
aam
push
je
inc
ljmp
jno
loop
push
dec
mov
xchg
stos
sub
jns
mov
mov
mov
sahf
push
cmp
rcll
adc
push
out
cltd
adc
inc
daa
in
aam
cmp
popf
fs
fwait
dec
in
into
je
loope
decb
shr
push
adc
enter
iret
pop
pop
das
jbe
mov
mov
push
cld
into
rorb
test
repz
pop
inc
adc
stos
lea
jge
jp
xlat
mov
or
jae
rorl
sbb
cmpsb
or
in
mov
mov
rorl
imul
je
jmp
sub
mov
repnz
or
pop
mov
test
jl
xchg
mov
divl
mov
or
fucomp
push
cmpsl
cltd
sbb
or
lret
fidivl
xor
stos
adc
jl
mov
mov
dec
jle
adc
lods
jle
bound
push
test
jmp
pusha
vprotb
imul
enter
or
cli
sub
bound
stc
add
adc
in
jecxz
vpaddsb
lods
xchg
in
aaa
push
cmp
cmovnp
movsb
add
dec
push
xchg
push
jo
lret
push
dec
push
push
rolb
mov
jmp
ljmp
xor
fwait
jecxz
xor
xchg
mov
lcall
mov
mov
dec
lods
adc
imul
sahf
jno
mov
ja
stc
cltd
jb
mov
aas
sub
imul
sub
and
fwait
sbb
lea
and
les
jbe
cmp
jb
movsb
mov
ljmp
ss
xchg
xor
sub
bound
cmp
icebp
jg
and
xor
cs
stos
xchg
push
imul
and
movsb
sbb
jns
sub
bound
jae
loopne
push
fucomip
les
popf
inc
add
sbb
cld
add
xchg
ficomps
ja
shl
xchg
push
pop
icebp
and
fs
xor
out
ret
cmc
call
mov
incl
loopne
stos
mov
repnz
clc
mov
sub
das
push
jnp
loopne
sbb
mov
xchg
xor
and
fs
jg
and
mov
mov
push
cmp
js
lea
loop
add
mov
test
adc
push
push
jmp
jbe
movsl
pushf
pop
lods
ret
add
xor
repnz
and
fnsave
sbb
adc
push
inc
outsl
mov
inc
and
xchg
or
xchg
mov
imul
roll
jmp
and
fsubrl
dec
jg
out
add
in
and
xchg
sbb
push
mov
leave
lods
test
pop
cltd
daa
pop
in
enter
jmp
repz
lds
test
pop
rcrl
pop
daa
push
jecxz
pop
inc
ss
pop
movsb
out
mov
xchg
and
jo
cmp
es
pushf
leave
leave
mov
pop
xchg
out
jnp
add
sub
cwtl
lret
cmp
xchg
mov
test
aas
or
frstor
xor
pushf
sub
mov
shlb
imul
inc
divb
aad
push
xchg
imul
push
es
xchg
fbstp
out
mov
push
lret
cmp
cmp
mov
pusha
mov
mov
inc
adc
lahf
mov
mov
imul
mov
daa
les
sub
push
nop
adc
xor
adc
jp
mov
test
mov
lahf
add
in
gs
fcomps
aas
cmpsb
cmp
outsl
mov
jp
stc
sub
push
bound
push
jb
xchg
sbb
mov
dec
xchg
lods
js
xlat
ja
cmp
add
repz
jb
into
and
inc
xor
dec
bound
xor
out
mov
adc
iret
enter
sub
shlb
dec
sti
jp
adc
add
shr
dec
dec
mov
cmp
adc
pop
jae
movsb
cmpsb
sbb
cld
aaa
int3
pop
insl
fcomip
and
adc
fistpll
jecxz
jg
or
jp
mov
fs
xchg
scas
adc
rcll
mov
or
dec
adcl
pop
push
stos
out
push
push
cltd
lret
jmp
out
popf
arpl
add
out
mov
mov
rol
arpl
pop
popa
jnp
inc
push
sti
mov
ljmp
pop
inc
dec
dec
out
push
xchg
fstl
outsl
inc
xor
imulb
sarb
push
jle
fsubr
pop
mov
add
das
out
jnp
sub
sahf
je
adc
pop
pushf
das
dec
ret
xchg
push
pop
pop
pusha
das
call
in
push
push
out
cmpsb
ds
cmp
cmp
jae
enter
pop
mov
pmullw
xchg
test
cmp
xor
int3
mov
jo
cld
dec
ror
pop
gs
sbb
pop
or
loop
push
lds
push
xchg
leave
lods
and
jecxz
mov
cwtl
shrl
lret
jmp
cmp
pushf
in
pop
dec
xor
or
mov
pop
dec
hlt
add
push
arpl
sbb
clc
xchg
or
or
cmpsl
in
shlb
cmp
xchg
and
xchg
inc
out
test
xor
jae
in
xchg
mov
shlb
loopne
int
add
sub
xchg
movsl
int
rolb
mov
add
or
jecxz
inc
in
mov
mov
push
shr
subb
incb
cld
sar
mov
cltd
ret
clc
mov
les
popf
out
xor
cmp
test
add
sub
inc
outsl
loop
xor
mov
and
add
sub
jno
mov
push
and
je
cltd
pop
jbe
cmp
int3
sub
int
int3
mov
fidivrl
or
into
sub
ror
push
pusha
adc
popa
lods
ds
push
leave
xchg
lcallw
pop
in
aas
xchg
popa
xchg
aad
es
jle
pop
xor
imul
rcr
gs
enter
mov
mov
sub
scas
aaa
std
inc
fs
enter
loop
xor
push
dec
sub
xor
sbb
data16
jae
lea
aad
adc
inc
sbb
inc
or
mov
nop
fcoml
push
aaa
pop
inc
inc
sti
adc
ljmp
mov
mov
pop
std
xchg
loopne
xchg
sbb
cmp
out
dec
jmp
imul
ss
in
fwait
test
hlt
out
leave
lcall
cmc
in
xchg
ficompl
cmp
fs
pushf
scas
jne
les
cmp
jl
dec
fdivs
pushl
ja
mov
and
mov
xchg
pop
xchg
sub
loopne
imul
es
fwait
ret
adc
out
loope
enter
sub
mov
jge
mov
sbb
outsl
fcomps
sbb
sbb
add
dec
sub
xchg
testl
and
push
pop
popa
add
and
test
rol
push
push
xchg
mov
gs
stc
loopne
xlat
cmp
xchg
pop
in
dec
xor
push
xchg
das
sbb
add
dec
lahf
test
sub
out
jl
sbb
iret
xchg
fcoms
dec
inc
xor
sbb
je
ret
pushf
mov
jecxz
adc
pmulhw
fst
xor
inc
sbb
test
in
sbb
sbb
dec
sub
std
lock
xor
sub
out
mov
je
dec
cmpsb
fsubs
sub
mov
jp
outsb
and
mov
addr16
mov
jne
and
inc
and
xchg
scas
out
xchg
pop
push
sub
sub
add
sub
add
pop
outsb
mov
in
imul
popa
cld
sub
inc
and
sbb
mov
loope
jecxz
fs
arpl
mov
mov
fs
jo
xchg
cmpsb
lds
mov
fisttps
stc
mov
lods
lods
das
mov
sub
cmp
or
push
fcompp
sbb
mov
std
cmp
sub
push
jae
sbb
push
adc
sub
nop
dec
hlt
and
inc
ficompl
mov
neg
pop
xchg
mov
adc
and
es
mov
or
jecxz
xor
dec
sub
sbb
andl
in
loope
mov
imul
push
and
in
stc
inc
push
mov
xchg
push
xchg
sahf
and
xlat
mov
push
adc
in
pop
cltd
sub
cmpsb
test
mov
jl,pt
mov
data16
neg
pop
loop
xchg
insb
hlt
cmpsl
in
lahf
outsl
fs
out
mov
iret
mov
in
and
inc
push
sahf
cmp
fs
and
stos
inc
sbb
push
cmp
pop
xchg
sbb
cmc
cld
push
pop
xlat
cs
jge
hlt
cli
repz
test
push
scas
jp
insb
pop
fisttpl
aaa
je
sub
arpl
pusha
adc
dec
decl
dec
imul
sbb
lods
gs
pushf
testb
push
cmc
pusha
or
sub
push
dec
push
inc
jecxz
aaa
jle
xorb
popa
inc
repz
jb
ss
ror
jbe
push
lret
shrb
push
jo
stos
hlt
jo
in
mov
pushf
lock
sub
mov
filds
push
add
scas
movsl
js
sbb
inc
mov
push
lret
sbb
ss
out
enter
scas
pop
fstpt
pop
cwtl
pop
cmp
out
ss
inc
push
push
insl
insb
jne
lret
rcrb
or
daa
out
fld
xchg
pusha
inc
stos
sub
dec
frstor
mov
sub
pop
mov
pop
xchg
cmp
aad
xchg
stc
and
xchg
mov
xor
out
aaa
xchg
jg
scas
icebp
push
repz
aas
sbb
movl
leave
mov
repz
jns
jb
insb
out
inc
push
bswap
in
add
xchg
mov
jle
inc
aam
inc
imul
jp
adc
and
leave
call
out
cmp
lods
inc
cmpsb
jmp
inc
pop
jo
std
mov
push
dec
lahf
sbb
add
cmp
mov
adc
sbb
xorl
lds
jg
push
push
mov
int
mov
inc
scas
xchg
pop
lds
jns
cmp
mulb
jo
das
inc
xor
test
int3
push
das
fmull
es
push
cmp
xchg
out
test
insb
jmp
cmp
add
loope
mov
and
mov
jns
scas
test
cs
mov
push
out
insb
mov
xchg
push
imul
fs
jge
sbb
ret
in
lea
adc
adc
in
popl
jb
and
pop
sbb
dec
test
lret
adc
jo
aas
ljmp
shlb
lea
lods
js
cmp
add
pop
push
iret
jnp
aaa
lock
lret
mov
das
arpl
mov
jmp
ror
icebp
and
imul
jg
clc
dec
out
jns
mov
jbe
mov
outsb
shrb
pop
add
inc
fwait
mov
mov
xchg
adc
jno
add
jecxz
fldl2e
andb
ljmp
and
mov
lret
xor
inc
addb
jo
inc
and
jp,pt
mov
jmp
sub
stos
dec
out
sbb
outsl
ja
inc
push
ja
in
inc
pop
xor
push
cmp
stos
jne
adc
in
out
sub
lock
xor
aaa
movsl
lahf
lods
mov
jecxz
data16
mov
mov
add
test
test
shrb
aaa
push
pop
nop
cmp
mov
sub
push
idivl
mov
xchg
push
xor
mov
popf
les
mov
sub
pusha
push
add
lret
inc
ret
xlat
sti
popa
das
in
add
xchg
int
cmp
mov
add
add
lahf
dec
fnstcw
and
pop
incb
arpl
in
mov
jmp
arpl
jge
ficoml
imul
sbb
mov
insb
jb
ret
gs
push
fs
xchg
ret
rcrb
mov
scas
mov
popf
lcall
and
fwait
hlt
repnz
cmp
std
xor
xchg
scas
sarb
and
and
jno
or
stos
and
nop
mov
loopne
cmpsb
cwtl
stos
pop
aas
sub
jle
add
xor
mov
xchg
sub
outsl
outsb
subl
pop
aas
movsl
push
cwtl
xchg
xchg
add
mov
add
sahf
jmp
repnz
push
call
xchg
pop
mov
scas
imul
jne
jl
mov
sti
jnp
xor
lcall
jmp
bound
inc
insl
dec
mov
or
stos
push
dec
cmpsl
imul
pop
out
cmp
hlt
sub
int3
mov
jbe
push
enter
mov
sub
call
xor
push
jg
lds
push
shrb
add
or
jns
sarl
test
push
cmpsl
push
dec
push
and
shll
test
mov
mov
dec
or
cmp
in
adc
push
enter
jbe
xchg
lock
daa
or
repz
je
sub
xchg
insl
ja
dec
lods
sub
out
inc
imul
inc
inc
sysenter
xchg
pop
fmuls
jno
inc
or
pop
in
mov
es
sbb
add
shrb
or
cmp
pop
jbe
mov
push
jge
xor
addr16
sub
dec
cld
pop
and
mov
fdivl
shll
roll
mov
inc
jecxz
cltd
mov
lea
push
das
and
loope
leave
shl
cld
lahf
das
out
push
daa
mov
arpl
or
std
pop
fs
cmp
sub
cltd
add
lods
xlat
imul
mov
xor
dec
nop
jbe
mov
push
pop
inc
add
lds
movsb
push
mov
dec
and
xor
pop
dec
xchg
pop
mov
popa
int
arpl
sub
jb
mov
outsl
cld
cld
push
rcll
mov
mov
imul
mov
ret
mov
jno
enter
out
inc
dec
lcall
push
mov
imul
call
jb
jg
or
add
repnz
imull
xchg
adc
sbb
jmp
pop
dec
sub
imul
popf
sub
nop
push
xchg
sbb
insb
test
push
inc
xor
into
or
notb
xchg
fistpl
fwait
test
sub
divb
push
sub
dec
sub
clc
shll
pop
into
scas
mov
stos
ds
lret
insl
ja
xchg
or
sbb
enter
imul
mov
sbb
std
sbb
sub
push
rolb
popa
push
jns
add
lods
cmovns
sbb
dec
sub
into
sbb
arpl
das
std
aam
dec
mov
lock
push
pushf
incl
cli
repz
mov
shrb
hlt
inc
bound
or
cmp
jne
xchg
cld
lcall
sarl
mov
jae
fimull
fdivl
sahf
lret
scas
fisubl
jmp
jp
mov
rcrl
add
repz
repz
idivl
mov
repnz
dec
cwtl
or
jecxz
mov
test
data16
fwait
xor
and
divb
cmp
cmp
pop
xor
pop
lret
mov
dec
lods
dec
jnp
pusha
sbb
mov
sbb
ljmp
and
iret
loopne
ja
call
mov
movzwl
adc
inc
in
mov
and
pop
sub
test
mov
mov
bound
push
fmulp
push
shll
scas
lcall
xor
and
sbb
mov
mov
clc
sub
xchg
outsl
and
fmul
sbb
in
imul
mov
dec
inc
adc
xchg
popf
or
mov
cs
jae
in
fs
insb
cmp
or
jo
filds
mov
cwtl
sbb
mov
loope
testl
pusha
push
lods
mov
fldenv
clc
mov
add
mov
mov
pop
push
test
sbb
ljmp
pop
scas
inc
clc
lahf
jo
xchg
xor
popa
jns
mov
lret
dec
pop
xchg
scas
test
out
push
insb
loop
cmpsb
push
or
pop
push
fistl
fadd
add
fwait
not
inc
push
mov
sarb
movsl
aas
xchg
mov
xor
mov
jo
into
je
out
nop
add
into
mov
sbb
pushf
in
xor
adc
cmp
lods
lock
jo
shr
inc
xchg
mov
push
push
fwait
mov
push
loope
inc
subb
add
out
inc
add
into
dec
mov
dec
jge
pop
popa
insb
cwtl
pop
mov
push
push
dec
and
add
jbe
ss
cmc
gs
shl
xchg
mov
inc
xchg
xor
loop
pop
gs
frstor
and
fadd
test
jb
in
mov
les
pop
jo
repz
adc
sti
push
shrw
movsb
xchg
push
push
cld
sbb
push
xor
mov
rol
adcl
pushf
nop
test
je
sti
pop
ret
cmp
sub
movsb
mov
push
inc
jl
xor
call
test
testl
inc
pop
pop
pop
lahf
les
jg
or
or
in
ficomps
inc
mov
mov
testb
adc
stos
mov
stc
sbbl
mov
mov
cli
add
jp
jmp
lret
std
xchg
cmc
call
or
jp
push
dec
xchg
or
xor
ljmp
mov
movsb
les
dec
out
mov
or
inc
xor
pop
out
mov
aam
neg
pop
adc
or
bound
popa
and
push
in
sahf
push
adc
fbld
push
in
out
adc
out
and
xor
ficomps
lret
out
add
lods
pushf
and
xchg
add
push
xchg
arpl
cli
and
and
adc
or
sub
xor
add
cmc
clc
cmp
call
vpcmpeqw
pop
mov
xlat
mov
sub
imul
lret
mov
jns
mov
cld
inc
outsb
mov
loopne
sbb
xchg
sub
xor
push
sti
cmp
out
mov
mov
jo
sbbb
cmpsl
imul
ret
aas
jno
int
cmpsb
imul
add
dec
xchg
fstl
xorb
into
xor
jmp
mov
push
in
iret
cs
cmp
cli
jge
sarl
outsb
andb
stc
stc
cmp
dec
fimull
pop
sbb
mov
push
in
fstpl
pop
imul
xor
lcall
pop
xlat
outsl
add
mov
movsb
push
mov
hlt
jp
insl
xor
out
sbbl
out
inc
or
stos
jp
test
add
aam
xor
mov
nop
jp
stos
push
movsl
adc
es
imulb
stos
lahf
push
dec
dec
push
or
inc
lock
pop
xchg
xchg
sub
sti
add
cmpsl
movsb
cli
push
push
out
pop
xchg
mov
inc
lods
pop
pop
sbbl
sub
fisubs
nop
jne
ja
add
lret
ds
aad
sub
push
and
not
aad
insl
mov
mov
add
sub
call
push
and
shlb
sahf
jmp
mov
imul
lret
fs
mov
int3
cmp
push
insl
movsl
jp
pop
cli
notb
mov
mov
add
fsts
add
or
rcll
aad
xor
mov
int
or
divb
lods
ret
test
mov
xlat
dec
mov
les
dec
jl
mov
mov
cs
fcompl
jg
rcr
mov
jg
or
rcll
sbb
aas
and
leave
ja
sub
mov
jno
rorl
cli
mov
out
or
xor
out
inc
rcrb
pop
xorb
push
mov
inc
lods
cmp
insl
test
repnz
cmp
push
cwtl
jp
lahf
cmp
cmc
hlt
or
divl
or
xchg
imul
ds
pop
sub
push
fdivs
cs
sbb
dec
sbb
stos
lret
fldt
inc
lods
add
fldl
mov
out
xor
pop
inc
fisubs
insl
out
setb
adc
xor
xchg
mov
test
push
movsl
pop
xlat
or
sub
fwait
mov
aas
inc
mov
sbb
mov
pop
pop
xor
scas
xchg
loopne
rcr
or
mov
imul
sbb
add
jns
xlat
mov
push
cwtl
jmp
inc
mov
ja
in
and
jp
jo
loope
movsl
test
push
and
xchg
pushf
rorl
cltd
xchg
dec
shlb
inc
movb
mov
fsts
imul
sbb
inc
add
adc
dec
mov
push
stc
cmc
add
jge
out
pop
pop
push
pop
aas
jl
mov
pop
in
mov
je,pt
data16
xor
rol
aas
mov
xor
jae
pushf
popa
sbb
and
arpl
xor
rcrl
xchg
loopne
rorl
inc
sub
out
pop
repz
push
adc
fisttps
inc
sub
fsubrl
mov
mov
push
pop
cmp
mov
and
int
or
nop
daa
sub
jns
lahf
enter
jmp
outsb
push
gs
nop
into
xor
jmp
stos
adc
movsl
ja
in
cs
lods
add
sub
jbe
sub
adc
idiv
mov
cwtl
aam
mov
add
inc
out
sbb
jle
cmp
hlt
push
lods
cmp
sub
dec
shrb
and
dec
dec
call
pop
ja
push
dec
cmpsb
mov
popa
mov
or
adc
into
movl
push
lret
xchg
nop
jg
fs
leave
cmp
arpl
imul
jle
lcall
shrb
inc
sbb
stos
lret
fstps
pusha
cli
rcl
sbb
mov
in
rolb
inc
or
and
sbb
adc
test
cmp
aas
aas
sbb
xor
stos
aaa
ds
xor
in
das
scas
adc
shrl
inc
jne
sub
mov
add
loop
fstl
sub
fwait
test
lcall
xor
pushf
mov
mov
rclb
rolb
les
jle
mov
mov
notb
push
xor
mov
xchg
hlt
pop
mov
sar
cs
push
dec
cli
inc
test
and
push
push
fs
pop
gs
inc
orl
cld
gs
gs
mov
data16
mov
mov
cld
pop
or
dec
push
out
jp
mov
jp
push
pcmpgtd
adc
mov
rcll
cs
sbb
jle
sub
je
xchg
xchg
shlb
push
push
cs
and
mov
fmul
xorl
loope
shl
sbb
cmp
dec
daa
pop
scas
lret
push
aaa
outsb
lock
mov
push
pop
mov
mov
or
nop
js
push
or
inc
jecxz
xor
lret
mov
add
push
ret
cwtl
lock
das
movsl
pop
sbb
pusha
cmp
lods
dec
divl
jno
in
loopne
roll
mov
adc
add
adc
and
out
xor
mov
push
and
gs
jecxz
and
xor
adc
repnz
jo
push
push
xor
repz
mov
push
mov
or
sti
xchg
inc
and
sub
icebp
add
dec
push
xchg
fs
sbbl
or
sarb
mov
leave
scas
es
lret
jae
aad
shl
insl
loop
sahf
lds
addr16
pop
xlat
cmpsb
adc
lea
pop
or
inc
std
cmp
dec
mov
inc
ret
out
cmp
dec
lods
jo
mov
sub
sar
lahf
pop
inc
push
inc
mov
popa
xor
mov
enter
lods
sbb
insb
jmp
sub
adc
les
mov
xor
sbb
arpl
xchg
loop
mov
push
lcall
dec
cmpsl
dec
movsl
icebp
push
in
mov
sbb
add
lcall
push
mov
movsb
push
stos
cmp
jg
hlt
fnstenv
and
adc
in
int3
lret
ret
push
xor
add
rcrl
test
jne
jbe
adc
sub
lock
sub
out
jl
xor
mov
xchg
call
pop
mov
insb
jmp
cltd
shll
out
mov
call
mov
cmc
xchg
cmp
mov
adc
imul
xor
dec
xchg
push
fs
test
push
bound
filds
push
or
addl
test
test
and
cmc
repz
lds
sub
jae
inc
adc
mov
pop
fisttpl
add
jns
jmp
lea
pop
test
jp
xchg
addl
adc
sub
add
insl
mov
dec
mov
outsl
and
pop
js
sub
lods
sub
sbb
shl
arpl
mov
out
mov
xchg
repnz
sub
pop
push
out
jle
insb
stc
and
idiv
aas
cs
adc
aas
nop
arpl
inc
pop
sub
insl
scas
in
insb
in
adc
add
and
hlt
jns
mov
loope
adc
divl
int
pop
or
xchg
das
mov
and
jp
fs
popf
insb
es
xchg
stos
out
subl
or
jae
sbb
es
repnz
in
push
mov
cmp
push
inc
shlb
mov
mov
sub
cmpsb
mov
xorb
subb
jmp
test
ret
sub
mov
push
addr16
adcb
pop
cs
mov
clc
mov
mov
negl
mov
xchg
rcrl
add
sbb
jno
enter
data16
lock
shl
sbbb
push
icebp
or
iret
and
inc
mov
and
adc
rcrb
push
sbb
popa
inc
dec
and
fisttps
sbb
jnp
jmp
pop
jne
push
sbb
test
sbb
mov
xor
loope
pop
fildll
xchg
pushf
int
jmp
push
out
and
mov
push
dec
imul
jno
and
cmp
inc
ret
adc
insb
je
inc
aaa
popf
xor
sub
inc
fistpl
sbb
lds
sub
inc
sub
add
popf
jl
cwtl
jb
pop
insb
and
jne
xor
fbld
push
in
icebp
imul
and
je
dec
or
mov
push
out
negb
dec
adc
ror
mov
sbb
sub
jle
mov
aam
movl
ret
jne
jmp
push
or
stos
pop
inc
fstpt
insb
sahf
scas
mov
sub
loope
ret
inc
dec
test
jl
push
in
and
cmp
addr16
lds
movsb
push
orb
fs
inc
fwait
mov
xor
xor
sbb
jb
xchg
outsl
shll
inc
jne
mov
dec
and
cld
repz
pop
pop
adc
jbe
pop
stc
pop
pop
jno
lea
inc
lods
aad
mov
sbb
sub
out
mov
mov
jb
cmp
test
pop
rorl
mov
out
sub
scas
jmp
jbe
and
scas
fisttpll
mov
pop
xor
mov
rol
jae
push
push
xchg
mov
sbb
pop
fmuls
mov
mov
pop
adc
arpl
rorb
xchg
fidivs
sbbb
aaa
pop
push
and
or
pusha
jg
daa
cwtl
cwtl
mov
jb
andl
sbb
sbb
leave
cs
push
movsl
sbb
pop
in
mov
pop
mov
test
and
les
call
lock
pop
mov
push
dec
ds
test
rorl
push
adc
test
push
cmp
xchg
gs
daa
loopne
movsl
pop
push
fnstsw
mov
cs
in
xor
cmp
movsl
rorl
and
rorl
xchg
push
in
insl
mov
push
inc
cld
jnp
in
imul
add
mov
int3
sbb
addl
outsl
ss
loopne
sub
into
pusha
push
out
insb
fdivl
nop
enter
jbe
lcall
ja
ss
mov
test
xchg
sarl
mov
das
and
ret
jae
add
mov
lock
out
arpl
mov
and
decl
add
sbb
jno
clc
sbb
lods
pop
mov
outsl
aad
and
ds
sbb
fimuls
jp
movsb
and
pop
or
fwait
stc
xor
push
imul
cmc
mov
test
call
push
lea
mov
mov
adc
sub
enter
sbb
dec
stos
pop
ror
and
mov
imulb
add
xlat
shr
add
daa
hlt
cmpsl
subb
inc
call
pop
ret
dec
stos
ror
les
ja
mov
shl
sbb
dec
sub
cwtl
decl
iret
imul
mov
dec
mov
sbb
fadd
mov
ret
pop
mov
jecxz
inc
inc
rolb
mov
mov
push
push
idivl
sbb
xchg
inc
lret
sub
jp
out
jecxz
pop
dec
sahf
arpl
sbbb
mov
mov
pop
sub
xchg
xor
mov
popa
andl
jg
fcoms
lahf
leave
xchg
fcmove
cwtl
mov
cmc
or
imul
pop
lods
add
cmp
mov
outsl
mov
es
dec
add
dec
scas
add
dec
jno
pop
fucomip
inc
xchg
pop
mov
ds
or
and
ss
mov
ljmp
shl
sbb
jg
cmp
mov
push
cmp
inc
inc
mov
push
xlat
cmpsb
mov
xor
push
in
jmp
bound
dec
or
gs
xchg
pop
insb
mov
or
nop
sub
and
xor
mov
testb
imul
xchg
out
je
ljmp
iret
loop
push
xchg
push
dec
ja
jne
scas
and
and
loop
xor
call
xchg
mov
lret
movsl
mov
testl
outsb
sbb
adc
je
cltd
loop
mov
fildll
sub
dec
scas
push
aam
ret
mov
lahf
aaa
sub
push
sbb
xlat
unpckhps
cmp
dec
popf
in
lahf
xchg
sbb
mov
inc
jecxz
xchg
mov
add
push
and
flds
cmp
push
cwtl
mov
xchg
and
push
jecxz
gs
sub
movsb
in
jnp
lahf
jns
sbb
fstl
xor
loop
pop
jmp
mov
push
popa
xlat
jno
adc
dec
sbb
leave
add
or
cwtl
setbe
test
add
repz
orl
gs
or
into
out
mov
test
cmpsb
leave
out
sub
dec
mov
call
popa
xchg
adc
movsl
or
jne
add
and
cltd
mov
inc
inc
dec
xchg
jmp
mov
orb
testb
das
mov
push
mov
adc
fildl
dec
push
rorl
mov
test
cmpsl
sbb
sub
xchg
inc
js
ljmp
add
aaa
aas
xor
std
arpl
mov
dec
sbbb
push
pop
sahf
xor
repz
popl
mov
cmpsb
aaa
jbe
cmp
fldt
pop
in
das
aam
scas
iret
cmp
or
lods
rol
incl
ret
and
xlat
aas
jnp
and
pop
adc
aaa
jg
leave
stos
add
sahf
pop
adc
dec
cmp
das
filds
icebp
in
out
lcall
imul
pusha
arpl
mov
sbb
dec
jae
imul
ficoms
dec
mov
cmp
cli
inc
xchg
stos
fs
xchg
sbb
mov
rcrl
into
cld
mov
pop
stos
inc
xchg
popl
ret
pop
inc
jp
out
add
jmp
sub
loop
sbb
fsts
push
or
stos
imul
test
fdivp
shrl
cmp
push
movsb
adc
mov
ljmp
insb
add
dec
pusha
iret
aam
imul
fisubl
xchg
lods
sbb
ss
xchg
fdivr
jae
mov
inc
lcall
fs
ficompl
dec
mov
mov
cmp
insl
loope
sbb
dec
jge
mov
jecxz
push
les
lahf
pop
sub
jge
or
sub
ret
pop
outsl
data16
scas
jb
fiaddl
jp
mov
dec
outsb
or
js
jns
bound
inc
jns
inc
mov
cmpsl
arpl
out
lret
push
or
jbe
mov
xchg
pop
xor
jmp
imul
add
sbb
loopne
test
xchg
dec
jae
in
pushf
mov
imul
ffreep
mov
mov
leave
stos
aas
in
push
repnz
dec
xchg
sub
add
sub
or
mov
mov
loope
add
mov
mov
fisttpll
jl
push
cmp
adc
push
lret
push
xchg
out
cmp
mov
and
pop
pop
repnz
in
push
mov
mov
push
jle
cwtl
inc
aaa
popa
ja
dec
and
and
push
fidivrs
mov
lea
loop
pop
mov
mov
in
insl
lcall
sub
push
int
ror
cmc
mov
repz
xchg
and
stos
xchg
fwait
daa
jnp
lock
les
daa
jmp
add
sub
sbb
repz
out
shl
fwait
int
xor
lcall
aam
test
insb
jge
lret
test
push
stc
mov
pop
je
adc
xchg
orl
pop
pusha
sbb
not
rcrb
xchg
enter
decl
adc
xchg
push
shl
inc
fdivp
sbb
into
xchg
jmp
arpl
dec
sub
inc
test
dec
jne
or
dec
out
test
in
inc
sbb
xchg
or
ljmp
mov
icebp
xchg
pop
mov
mov
call
shll
test
dec
xor
addr16
push
fcoms
divb
mov
jo
mov
xchg
add
xchg
fwait
jle
sub
mov
jle
leave
mov
je
sub
les
jl
fucomp
lret
fcmovne
inc
inc
arpl
in
push
mov
sbb
sbb
inc
das
andl
lods
cwtl
add
fnsave
clc
mov
mov
xor
scas
jge
sub
add
rcrb
sbb
xrelease
out
mov
push
movl
loopne
mov
and
mov
pushf
xor
ljmp
mov
mov
mov
cwtl
sub
jb
xchg
inc
push
jge
mov
jo
js
stc
jo
inc
hlt
fistps
mov
inc
shl
pop
lcall
sub
cmp
mov
in
sbb
pop
mov
pop
stos
lea
out
xchg
jb
jecxz
mov
xor
shl
test
pop
mov
pop
mov
push
je
cltd
loop
fsubp
fisubrs
xchg
test
in
test
outsb
fs
and
std
lret
test
fwait
in
fidivrl
les
jl
jmp
rclb
cmp
cmp
pop
cmp
xor
test
orb
pop
lea
jae
ss
stos
dec
lret
fstl
mov
fs
pop
mov
xchg
cmp
loope
scas
rol
cmpl
sbb
es
push
adc
fpatan
fs
add
ds
mov
aad
xchg
dec
sub
push
sbb
ret
outsl
out
push
mov
dec
or
fcomps
idivb
dec
sub
mov
and
out
lea
mov
inc
pop
mov
mov
cwtl
ret
popf
bound
adc
lcall
enter
sbb
cmc
in
dec
hlt
push
shll
jecxz
sbb
cmpsl
sub
jp
sub
mov
cwtl
hlt
loopne
lea
jl
movsb
shll
jns
in
adc
aam
push
insl
or
ja
mov
mov
mov
cld
sbb
sbb
addr16
int
adc
inc
mov
or
test
mov
push
bound
mov
and
sbb
sub
jl
hlt
lods
xor
push
xchg
into
pop
xchg
xchg
cwtl
mov
push
addr16
fsts
mov
mov
push
cmc
movsb
out
mov
je
push
adc
stc
aaa
pop
adc
lds
push
outsb
mov
mov
and
dec
or
cmp
sub
jo
or
fucomip
mov
test
notl
imul
inc
popl
in
xchg
fstpl
inc
and
dec
sbb
and
dec
dec
imul
in
popa
stc
mov
mov
dec
and
push
pop
cmp
push
insb
pop
loopne
pop
enter
stc
in
add
out
xchg
pop
push
pop
cmp
loope
push
nop
imul
clc
sub
and
insb
pop
je
fisttpl
pop
sti
pop
push
lret
xor
jnp
iret
mov
addr16
loopne
popf
ret
sub
shlb
xor
inc
or
mov
add
jne
test
das
out
fmuls
mov
jl
push
xchg
icebp
cmp
mov
test
mov
xchg
lods
js
inc
cld
repnz
pop
xchg
movsb
xchg
push
lds
xchg
aaa
movsl
lods
push
mov
lcall
popf
stos
push
pop
stc
iret
cmp
adc
bound
sub
sti
add
push
test
data16
js
out
pushf
push
push
push
jge
je
les
aaa
mov
mov
js
out
cmp
aam
jecxz
fs
ja
mov
mov
adc
ds
stos
or
add
mov
or
ja
add
xchg
add
sbb
orb
sub
ss
adc
in
add
andl
mov
aad
sbb
cwtl
loop
repz
jp
or
jne
cmp
inc
pop
inc
lods
jne
mov
mov
sti
or
mov
mov
jp
cld
mov
xor
push
jecxz
mov
ret
sub
mov
arpl
cwtl
cs
sub
test
mov
aas
lret
and
ret
mov
sbb
sub
push
and
add
repz
cmpsl
out
arpl
stos
scas
push
ficompl
sbb
jmp
test
mov
or
loop
push
and
fnstcw
out
dec
iret
jns
adc
outsb
adc
add
fistpll
xor
and
icebp
orb
add
sahf
insb
les
xor
xchg
popa
push
rclb
popa
cmp
add
out
repnz
gs
inc
lock
icebp
insl
sub
fsubr
out
inc
fwait
outsb
inc
cmp
and
subl
push
jp
sbb
fldl
mov
outsb
mov
pop
pop
test
xchg
lret
xor
rcll
enter
adc
test
fwait
int
mov
leave
addr16
loope
mov
rorl
aam
pop
imul
in
xchg
movsl
jb
pop
mov
mov
aad
inc
jbe
lret
idivb
fdivrs
daa
gs
jmp
xchg
cmp
and
push
dec
cmp
shr
jbe
jg
sub
jne
ss
add
pop
inc
out
xchg
fsts
sbb
mov
adc
adc
ficompl
jns
outsb
cs
cmp
fmull
arpl
add
aad
scas
pop
pop
mov
add
sbb
and
sub
call
push
rolb
into
pushf
mov
gs
movsb
sub
lret
xchg
insl
ds
jo
jno
cmpb
or
mov
sub
test
or
fimull
dec
cld
ror
call
adc
mov
pushf
add
jns
pop
jo
sti
enter
jo
pop
xor
fldt
mov
mov
push
es
idivb
popa
test
mov
and
es
sub
lcall
insb
sbb
pop
in
stos
jle
imull
data16
movsbl
test
xor
add
outsb
les
sbb
mov
cmpsb
sbb
in
inc
adc
mov
cmp
xchg
fstps
ds
fimull
inc
cmp
push
leave
call
pop
aaa
in
push
movsb
dec
mov
insl
jle
repz
adc
xchg
es
adc
mov
mov
scas
ljmp
cmpb
into
inc
rorl
adcl
call
mov
dec
iret
loope
or
adcl
rclb
rclb
icebp
andb
jl
ret
mov
adc
ret
orl
fwait
or
inc
cs
xor
jns
add
insl
jmp
push
nop
int3
add
pop
sbb
push
inc
push
lods
sbb
or
sbb
xchg
inc
push
xorb
xchg
inc
adc
push
mov
adc
xchg
or
jl
inc
or
pop
xchg
mov
shll
xchg
mov
push
push
fmul
xchg
cmp
xor
jl
sahf
xor
scas
div
mov
jg
mov
xchg
outsb
push
mov
jbe
loop
stos
adc
int
aaa
cmp
pop
cmpsb
jnp
sbb
push
arpl
dec
leave
push
xchg
pop
add
cmp
subb
lea
mov
pop
add
push
cs
nop
inc
cld
dec
shl
jecxz
sbb
cmp
mov
push
add
outsb
in
lock
das
cmp
aam
dec
push
cmp
lock
std
lcall
movsb
sbb
aaa
and
inc
clc
lret
push
inc
mov
jno
xorl
mov
sbb
push
out
std
fxam
jmp
js
les
pop
xor
sbb
and
inc
test
lea
arpl
xchg
popa
jnp
adc
sti
pop
add
out
cli
and
and
scas
out
mov
imul
mov
sbb
dec
inc
into
cmp
cld
rolb
pop
and
mov
testb
neg
inc
icebp
adc
mov
pop
jnp
pop
iret
hlt
xor
leave
out
xchg
shrl
iret
jns
hlt
push
fists
movaps
gs
pushf
sub
inc
mov
jne
mov
sub
fyl2x
inc
outsb
xchg
xchg
testl
jmp
jne
mov
xor
das
imul
arpl
push
push
in
out
out
cmp
and
arpl
movsl
jmp
mov
xor
sub
cld
stc
inc
push
adc
pop
fldenv
cmp
sbb
iret
mov
mov
mov
pop
js
mov
or
xchg
mov
mov
arpl
push
call
add
cwtl
aaa
js
cmp
adc
mov
pushf
mov
adc
pop
insb
movsl
jns
mov
jno
movsb
lock
mov
mov
das
fcoml
out
add
aaa
roll
push
push
dec
xchg
mov
icebp
aas
sub
sahf
pop
in
mov
insl
push
bnd
pop
jp
pushf
jns
xchg
imul
xchg
adc
and
add
or
inc
es
scas
les
jnp
xlat
inc
outsl
fldcw
sub
les
or
pop
jo
dec
cmp
cwtl
mov
sti
pop
sub
dec
loope
call
xchg
pop
test
inc
in
negl
xchg
cltd
pop
daa
in
and
out
xor
rcl
push
fsubrs
ds
pop
lods
ja
push
or
fldenv
pop
inc
xorl
add
sarb
fwait
sbb
popf
xchg
cmp
add
loop
cmc
xchg
les
aas
fwait
pop
and
es
cwtl
jmp
adc
dec
or
xchg
fcoml
sti
fdivrp
jne
or
cmpsl
or
fldz
scas
xchg
adc
scas
xchg
add
cltd
push
mov
mov
xchg
inc
dec
mov
adc
out
mov
cmpsb
cmpsl
sbb
xchg
xchg
inc
jmp
clc
insl
xchg
jmp
ds
bound
pop
outsb
adc
mov
push
clc
add
cltd
or
leave
movsb
mov
out
pop
lret
push
test
dec
aaa
pop
lret
add
ret
rcl
and
outsb
clc
pop
cmp
rcrb
cmc
cmc
in
push
popa
sahf
nop
push
cltd
xchg
add
mov
adc
div
cs
sub
fcmovnb
enter
xchg
sbb
dec
out
mov
lea
inc
hlt
fs
fcmovnu
and
cltd
icebp
arpl
push
lock
in
lahf
mov
add
inc
mov
mov
enter
ror
int
cltd
je
dec
pop
hlt
xchg
sub
fucomi
lds
ljmp
in
ss
xor
imul
test
int
pop
sbb
shrl
push
lret
sahf
mov
adcb
xchg
shl
mov
push
movsl
pop
cwtl
aaa
nop
or
jbe
sub
mov
mov
loop
sbb
cmpsb
outsl
adc
jnp
pop
jge
das
add
js
test
fisttpl
daa
lds
jo
nop
std
mov
adc
dec
push
sub
gs
in
lock
fwait
cs
clc
repnz
int3
dec
jp
sub
pop
movsb
cmpsb
dec
jg
or
imul
or
bound
sbb
jg
clc
sub
shrl
xchg
jle
repz
xchg
or
ja
fidivs
or
mulb
add
push
jbe
out
scas
push
shlb
cmpl
test
jge
mov
cmp
mov
arpl
mov
sahf
xor
lods
sbb
jne
sti
mov
adc
mov
jecxz
sahf
pop
xchg
lods
lds
xchg
ja
ficoml
dec
pop
mov
and
fidivl
pop
push
testb
stos
sbb
xor
pusha
adc
pop
sbb
lcall
adc
imulb
dec
pop
mov
push
push
ret
mov
pop
jp
fsub
sbb
mov
add
dec
fistl
push
jp
or
repz
push
dec
fadd
xlat
mull
rorb
xor
or
xlat
repnz
lahf
mov
pop
inc
out
pop
jl
sub
scas
es
push
mov
jmp
dec
xorb
test
dec
sbb
ss
xlat
cmp
ret
mov
vcvtsd2ss
scas
repnz
in
cmc
push
rcl
cltd
scas
out
dec
sbb
push
mov
loop
lcall
repnz
xor
push
lea
xchg
cmpsb
js
mov
pop
mov
jl
pop
xchg
jns
loop
jecxz
push
movsl
inc
push
pop
xchg
movsb
mov
icebp
xor
icebp
or
aaa
out
js
fstps
cmp
lcall
ja
loopne
mov
sbb
fld
imul
push
jge
xor
lds
push
and
pop
add
stos
loopne
cld
ljmp
in
mov
adc
mov
cmp
lds
sub
mov
fisttps
fcoml
mov
push
movl
rorl
cld
xor
cmc
out
stos
sbb
bound
sub
inc
or
test
xchg
loopne
push
add
lea
inc
mov
pop
outsb
push
imul
mov
test
fwait
jb
sahf
add
data16
imul
imul
bound
xchg
inc
pop
ret
mov
mov
dec
jp
inc
aas
xor
cmpsl
cmp
popa
inc
dec
sbb
xchg
fisubl
push
clc
int
xchg
outsl
or
push
mov
ja
mov
mov
adc
mov
stc
es
jno
cmpsl
mov
push
sub
mov
adcl
and
adcb
adc
sahf
xor
jb
repz
jno,pn
dec
xchg
test
xchg
jle
pop
aad
leave
inc
lret
lcall
cmpsb
jbe
mov
ret
inc
push
jge
jge
cwtl
testl
mov
push
fldenv
les
cli
adc
push
and
je
add
daa
imul
cmc
push
mov
fstpt
aam
lahf
push
jo
rcrl
out
jg
fyl2xp1
inc
popf
ds
jo
lods
dec
push
fimull
out
ret
pushf
bound
xchg
mov
aas
and
popl
lret
mov
push
bound
in
inc
push
add
xor
inc
fwait
in
gs
cld
fwait
sub
in
lock
jle
cmp
push
int3
xor
and
rcll
cmpsb
xchg
movsl
mov
or
inc
mov
add
inc
jo
inc
fdivrs
iret
adc
inc
arpl
loop
mov
cmp
mov
popa
mov
mov
scas
lea
mov
loopne
pop
cli
sbb
push
or
addr16
adc
mov
repnz
mov
pop
sbb
inc
in
popa
mov
xor
adc
dec
push
cmc
insl
mov
jecxz
add
mov
or
fcmovu
add
jno
in
ret
cmpsb
mov
mov
xchg
aaa
inc
add
adc
mov
test
lcall
xchg
outsl
enter
into
ds
mov
and
xor
fdivl
pusha
scas
std
sub
add
ds
mov
std
int3
or
sbb
dec
pop
stos
andb
andb
test
out
faddl
repz
push
test
and
cld
out
ljmp
push
ds
repz
addr16
out
push
adc
xor
cmc
dec
repz
in
inc
mov
cmp
lods
xchg
xchg
inc
rolb
and
fnsave
icebp
xor
cmp
dec
dec
mov
ss
in
dec
lcall
xor
icebp
shrl
adc
jb
int
mov
les
in
imull
mov
xor
pop
insb
push
mov
fstpl
mov
cmpsb
mov
idivb
mov
mov
cmp
cmp
punpckhdq
mov
cmp
cltd
rol
cwtl
in
cmpsl
aad
shll
sahf
popa
test
mov
ds
rcr
adc
jo
sbb
data16
xor
fs
fmul
movsb
and
dec
aas
aam
mov
mov
cmpsl
lcall
aam
shl
inc
add
push
and
stos
lods
xchg
nop
dec
xor
stos
pop
pop
movsb
into
insl
jb
pop
dec
jbe
mov
pop
addr16
fisttpll
shl
cmp
xor
fdivrs
test
mov
imul
fnstcw
and
xor
fs
cmp
sub
jnp
mov
jmp
int
pop
cmpsl
push
inc
les
mov
inc
sub
es
popl
inc
and
gs
addb
dec
dec
test
outsb
pop
xchg
fs
stos
xchg
pop
or
jg
pop
mov
mov
sbb
cmovge
pop
bound
xchg
fs
aad
pop
rcr
mov
xlat
jae
rcll
call
inc
or
mov
cli
into
test
inc
and
ret
out
cmp
xchg
push
cmp
sahf
lcall
cmp
inc
add
repz
cmp
adc
mov
xchg
mov
cmp
inc
add
pop
pusha
xchg
pop
imul
xchg
out
int
mov
test
iret
lods
jecxz
mov
mov
cmc
pop
out
and
sub
xor
leave
cmpsl
mov
push
test
cmp
xchg
test
out
je
cmp
int
xor
push
mov
fsub
das
data16
push
cmp
cwtl
cmpsb
iret
mov
push
xor
or
xor
lods
lahf
outsb
jb
inc
add
sbb
sahf
inc
in
add
dec
sub
lret
lcall
insb
inc
jp
js
mov
cmp
fbstp
movsb
add
mov
mov
test
insl
jp
dec
mov
cltd
xorl
lea
inc
dec
jmp
es
xor
jle
mov
in
ss
notl
adc
stos
xor
mov
iret
adc
push
push
mov
push
mov
jmp
testl
add
sub
cmc
inc
fcoms
xchg
gs
hlt
xchg
call
out
and
mov
pusha
cmovae
or
inc
inc
mov
cmp
movsl
mov
movsb
mov
cli
pop
test
push
iret
push
push
sbb
enter
add
pop
dec
pop
in
cmove
pop
jnp
lahf
ljmp
aaa
dec
ja
lret
mov
cli
xchg
inc
ja
jne
cld
fs
subl
dec
out
lea
fistpll
and
xchg
ret
xchg
shrl
and
adc
aas
jb
sahf
jecxz
cmpsl
loopne
out
iret
jmp
jp
sub
repnz
stc
ret
negb
shrl
fsubs
decl
jp
cmp
pop
cmp
mov
mov
and
out
adc
jb
or
jmp
cmpsb
push
idivb
shlb
mov
add
cmp
sbbl
repz
popa
movsb
pop
ret
roll
dec
mov
sbb
mov
rclb
stos
push
loopne
push
sbb
adc
sub
lahf
in
push
scas
and
sbb
je
imul
xchg
cmpsl
sbb
mov
add
adc
jae
cld
imul
mov
fnstenv
and
fwait
shlw
mov
or
jg
movsb
xor
or
dec
adc
push
push
insl
ret
dec
xor
loope
pop
xchg
ret
mov
cmp
adc
jb
test
add
and
cmp
aas
mov
fdivp
add
jmp
mov
mov
out
mov
or
cs
xchg
das
jb
push
lods
pop
push
xchg
scas
fisubrs
dec
jmp
and
repnz
or
jp
out
in
fwait
push
insl
add
mov
push
outsb
push
mov
and
scas
cmp
fs
test
mov
dec
ja
push
shlb
mov
push
int
cmp
into
or
mov
mov
cmp
icebp
and
aaa
insl
dec
jno
xor
mov
add
adc
fnstcw
jnp
pop
aad
jo
inc
adcb
jb
call
mov
icebp
xor
in
test
ss
test
ja
fsts
imul
sub
jne
jl
sub
das
insb
clc
cmpsb
jg
sub
rolb
outsl
lret
ds
push
cli
pop
pop
push
pop
xchg
mov
xor
call
sahf
and
cmp
jp
cmpsl
sbb
jl
mov
pop
clc
cwtl
fimuls
or
in
lock
daa
aas
and
mov
xlat
mov
push
test
fwait
mov
test
push
int
mov
adc
leave
mov
sub
enter
fldcw
push
sub
fstl
adc
out
mov
mov
and
lds
cmp
lcall
int3
int
xchg
lcallw
repnz
xchg
jae,pn
cmc
mov
pop
fistpll
push
mov
insl
cmp
jecxz
push
jnp
adc
sub
pop
xchg
decl
pop
sbb
daa
mov
dec
and
out
jnp
jmp
inc
xchg
cld
mov
jb
addl
popa
out
aam
add
xchg
in
dec
inc
cmpsb
add
pop
sbb
les
addr16
mov
sub
sbb
lock
sbb
enter
mov
pop
xor
inc
add
sub
dec
jge
shll
xor
xor
push
and
pop
mov
mov
mov
shrd
mov
mul
dec
shlb
loopne
jmp
fidivl
in
jo
pop
and
inc
mov
xor
mov
mov
outsb
leave
push
cmp
hlt
rcl
outsb
or
andb
jnp
lock
sub
roll
insb
cmp
lds
nop
jge
dec
mov
xchg
lods
and
add
ficompl
push
aad
cmp
dec
and
adc
sub
fidivrl
push
lods
cmp
jecxz
jg
outsl
and
inc
xor
leave
lods
and
push
dec
imul
dec
in
addr16
out
imul
mov
mov
dec
jbe
aam
jno
xchg
pop
or
push
mov
jnp
fadd
nop
or
lcall
pusha
cmpsb
hlt
pushf
mov
sub
notl
mov
mov
in
inc
in
nop
daa
ja
mov
dec
inc
fsubrl
pushf
or
jno
je
in
sub
in
mov
les
push
testl
loopne
outsb
and
mov
jo
or
movb
popa
pop
push
in
jecxz
or
mov
test
ds
sbb
adc
subl
jbe
mov
cmpsl
arpl
inc
fwait
sub
psllw
sbb
sbb
xchg
mov
imul
jns
mov
fcomps
insb
movsb
mov
mov
cmp
mov
scas
sub
into
sbbb
lret
xchg
or
cltd
ja
fidivrl
clc
mov
aas
imul
mov
jno
test
mov
jecxz
addr16
nop
xor
ret
popf
testl
out
add
push
adc
lea
mov
jb
ror
push
test
push
dec
call
aam
adc
jge
das
xor
sub
int3
xchg
jno
xor
pop
push
xor
cmp
sub
aad
inc
and
push
ss
dec
out
mov
cs
mov
adc
test
movsb
fwait
dec
mov
subl
imul
int
pop
cltd
imul
movsl
movsl
jecxz
xor
repnz
xchg
sub
ss
push
ja
es
gs
or
sbb
inc
sbb
jne
addl
mov
rolb
mov
movsl
clc
push
inc
fs
out
pop
js
jmp
pop
dec
pop
mov
icebp
jns
cld
pop
inc
aad
cs
lahf
inc
sub
das
lahf
mov
cmc
inc
lcall
fcomps
inc
xchg
in
fbld
or
jp
xlat
outsl
xchg
mov
insl
sub
inc
mov
pop
mov
push
int3
dec
popa
sbb
popf
mov
mov
dec
push
mov
movsl
jge
mov
xchg
cmc
jmp
mov
mov
dec
xor
push
sub
cmp
pop
clc
fcompl
jg
ss
and
cmp
cltd
mov
and
ss
fisubs
cmpsb
xor
add
and
aad
dec
aaa
aas
lea
aaa
jle
cmc
mov
cli
mov
xchg
loop
lea
mul
mov
jbe
or
dec
xor
jp
sub
mov
jle
mov
popa
stos
test
mov
pushf
xchg
jns
or
mov
aam
rclb
mov
add
cld
mov
push
ja
mov
sub
leave
sbb
icebp
mov
rcr
cli
jb
ds
sti
stc
sbb
cli
push
jns
jne
adc
dec
inc
push
xor
cltd
insb
out
out
dec
mulb
fs
mov
xchg
hlt
jle
mov
movsl
sahf
pop
test
or
dec
mov
push
push
jle
rcll
jg
mov
mov
mov
ja
aaa
cltd
pushf
mov
aam
mov
mov
and
pop
cmpb
dec
dec
movsl
movsb
sbb
xchg
inc
dec
in
lcall
mov
ja
pop
popf
add
in
addr16
mov
je
popl
out
aas
das
or
cltd
mov
mov
mov
movsb
in
push
jns
sbb
xchg
sarb
mov
xor
ljmp
sarl
inc
cmp
shrb
sbb
mul
mov
xchg
inc
jno
cmp
andnps
lds
xorl
jecxz
mov
shl
adc
mov
or
inc
or
es
les
andl
imul
in
push
dec
pop
out
sub
in
or
or
and
leave
stos
mov
push
les
sub
sbb
xchg
insl
or
jecxz
das
xor
notl
and
push
jne
mov
lea
arpl
pop
mov
jns
xchg
shrb
push
add
clc
pop
daa
pop
cmp
push
or
xchg
cld
cs
mov
sbb
divl
xchg
sarb
sub
mov
cmp
sub
xchg
mov
pusha
test
add
xchg
cmp
test
pop
sub
dec
add
outsb
andl
mov
dec
sahf
lea
jnp
add
mov
fnstsw
add
lahf
or
mov
out
fnstenv
mov
jns
lahf
rcr
mov
stc
fsub
loop
mov
test
scas
sahf
ret
or
insb
test
ljmp
pusha
loopne
mov
stos
fs
inc
pushl
out
mov
and
fwait
or
lods
jb
outsb
lea
lods
push
sub
fimuls
jne
xorl
push
lods
fldcw
lds
mov
adc
inc
inc
inc
inc
mov
mov
aad
popa
neg
lcall
scas
mov
addr16
js
mov
aam
lds
into
dec
aas
mov
mov
icebp
sti
cld
add
adc
mov
cld
ja
addr16
insb
mov
pusha
and
pop
pushf
sarb
push
cmpsl
pop
pop
mov
jne
insl
jle
into
or
pop
mov
out
leave
xor
sti
cs
inc
into
hlt
out
add
mov
sbb
movsl
ljmp
repnz
and
mov
dec
fistpl
sbbl
mov
push
push
inc
push
lods
loope
sub
outsl
mov
sbb
outsb
cli
rclb
repz
sarb
mov
shrl
xor
fisttps
inc
dec
xchg
or
xor
pop
and
sub
mov
pop
push
vmovss
jp
push
mov
push
jecxz
add
jle
jle
enter
or
bound
xlat
inc
jns
sbbl
in
xchg
aaa
pop
inc
movswl
jo
test
xchg
inc
add
mov
fcompl
pop
sti
push
push
imul
adc
or
mov
movsb
lods
lods
ja
inc
loopne
dec
mov
jmp
cli
lahf
je
xchg
adc
dec
dec
sbb
pop
or
add
fstpl
insb
adc
ss
adc
jo
movsb
cmp
sub
scas
dec
sarl
loope
add
rorb
push
mov
fcomps
adc
out
ret
mov
pop
arpl
mov
add
clc
fwait
mov
imul
dec
pop
das
mov
and
sbb
or
jb
fisubl
mov
jbe
shlb
dec
cmp
push
jae
add
test
sub
push
xor
add
sarb
bound
ljmp
inc
daa
popf
xor
scas
jb
xchg
pop
js
insl
add
dec
cs
mov
xchg
ljmp
test
bound
sub
and
sahf
sub
ljmp
pop
inc
in
or
enter
dec
popa
pop
push
sub
out
dec
test
insl
mov
and
enter
cmc
out
ljmp
lds
dec
insb
dec
sbb
pop
inc
aad
cs
addr16
xchg
push
lods
daa
cmp
addr16
mov
movsb
push
cmp
imul
cmp
pushf
push
sbb
sbb
dec
xchg
xchg
push
cmp
or
mov
add
scas
lcall
jne
pop
popa
das
dec
jge
das
fwait
jecxz
mov
into
dec
sahf
and
mov
mov
xchg
mov
or
dec
xchg
jge
lock
and
mov
lahf
jns
in
fidivs
add
mov
push
aam
sub
int3
dec
pop
in
push
shl
lahf
mov
int3
adc
popa
mov
lods
mov
cwtl
push
push
mov
lods
dec
jge
out
push
push
aad
sbb
cwtl
and
xor
stos
push
jb
stos
out
dec
stc
insl
xchg
sbb
sbb
inc
lods
ror
fisttps
adc
jl
imull
jp
jbe
int
xchg
jl
addr16
push
mov
ss
sub
imul
or
mov
int3
fistps
xor
cwtl
cmp
or
mov
shll
icebp
ror
mov
jp
aas
mov
out
jae
dec
arpl
lcall
fsubs
scas
pop
fcmovnu
push
jno
arpl
mov
sbb
imul
fwait
cmc
ss
mov
push
cwtl
mov
leave
pop
sbb
ficoml
test
push
movsl
xchg
dec
div
sub
jecxz
and
decl
insl
adc
movsl
cs
dec
adc
mov
xor
shl
pop
pop
sub
ror
jb
add
push
push
dec
and
das
aaa
sbb
xor
and
xorl
enter
and
iret
add
xchg
fnstsw
sbb
in
pop
mov
xchg
data16
mov
cli
out
or
jne
dec
pop
sub
out
dec
push
pop
popf
xchg
mov
jne
cmpsl
jge
in
pop
xchg
cmp
ja
push
jb
cli
aam
mov
dec
repz
inc
je
fs
pop
iret
cmpb
push
test
cmpsb
pop
mov
mov
jecxz
pushf
mov
push
adc
cld
push
mov
gs
fistpll
cmp
xorl
jecxz
mov
fwait
sub
into
sar
js
dec
push
sbb
mov
outsl
and
cwtl
ja
cmpsb
imul
lcall
scas
lahf
ljmp
pop
adc
scas
xchg
fistps
xchg
or
insl
mov
or
add
nop
adc
test
loop
inc
and
jns
jne
mov
sahf
orb
pop
gs
arpl
cmp
mov
dec
mov
cmpb
pop
jg
in
add
jnp
andl
in
push
push
loop
mov
cs
iret
leave
sbb
pop
mov
sbb
lods
sarl
and
adc
push
cld
sub
add
insl
cld
cli
adc
mov
aam
xor
xchg
mov
adc
pop
pop
enter
int
jns
jge
mov
xchg
sub
or
loope
pop
and
fldt
movsl
sub
jbe
lock
sub
cmc
jb
cmp
xchg
loopne
ja
cmp
fstl
mov
icebp
popa
mov
int
pop
imull
mov
gs
shrb
iret
and
xor
xlat
xchg
outsl
sbbl
add
aam
ljmp
jle
in
aam
mov
enter
lret
popa
movsl
mov
lea
inc
popf
jp
mov
mov
mov
mov
into
int3
lea
pop
mov
xchg
sub
xchg
nop
lods
mov
jae
mov
xor
or
xchg
mov
cld
or
popa
movsl
adc
cmp
xlat
push
addl
dec
ds
or
jl
pop
ret
data16
outsb
xchg
clc
mov
clc
das
mov
mov
jle
imul
mov
add
ret
clc
or
mov
xor
nop
mov
or
mov
mov
mov
pop
outsb
lret
jb
stos
imul
sbb
neg
enter
and
ss
adc
lcall
cmp
loope
and
add
inc
fwait
and
dec
mov
mov
pop
mov
push
push
sub
jae
stc
jg
mov
sbb
cli
cmpsb
mov
arpl
mov
jl
in
jbe
gs
xor
fs
jns
jo
sbb
shll
adc
add
out
mov
mov
xchg
clc
xchg
adc
inc
inc
or
push
jmp
push
pop
arpl
pop
insl
cli
jge
jno
mov
cld
mov
ja
xlat
test
add
sub
pop
cmp
int
pop
sub
nop
test
add
fistps
push
ss
iret
repz
or
cmp
dec
das
cmp
sbb
fcoml
inc
adc
push
into
cwtl
adc
or
enter
xchg
mov
jg
rcr
adc
cmpsb
inc
mov
in
push
and
xchg
scas
sti
mov
mov
adc
lock
fiadds
daa
cmp
fdivp
cmp
adc
mov
hlt
sub
push
sbb
jno
fwait
or
in
std
in
push
fidivrl
in
mov
mov
cmp
std
rcrl
in
mov
es
gs
and
jbe
mov
cmpl
or
aam
dec
xchg
addr16
rclb
adc
stos
adc
mov
mov
les
lock
pushf
cwtl
test
push
outsb
mov
jp
aas
adc
pop
shrl
lret
mov
cwtl
fucomp
stc
out
jmp
mov
dec
inc
push
mov
clc
adc
aad
es
fmuls
or
popa
cwtl
lret
mov
xchg
ja
sbb
stc
jg
add
notb
mov
pop
xor
movb
cmp
daa
mov
popf
fbstp
sbb
adc
push
xor
ja
loop
ret
pop
adc
in
or
or
lret
mov
fwait
pop
mov
jmp
and
mov
mov
mov
lret
and
sbb
aas
cld
mov
sub
sub
cs
inc
mov
sets
pop
push
adc
inc
pop
insl
add
adc
xchg
push
icebp
sbb
bound
adc
add
pusha
dec
stos
pop
imul
sbb
xlat
or
mov
adc
sub
mov
daa
inc
mov
pop
popf
xchg
jno
and
push
pop
imul
jae
xchg
push
ja
sbb
lcall
test
add
cli
add
mov
mov
stos
jp
inc
gs
sub
popf
pop
movsl
sarl
sub
jmp
add
or
cmpsl
sbb
fsubl
clc
addr16
pop
xchg
shl
xchg
cmc
loop
inc
inc
cmp
and
out
or
test
jo
loopne
jecxz
and
sti
jbe
sub
jns
sub
sbb
sbb
mov
sub
mov
mov
roll
push
pushf
fsubs
jmp
mov
push
inc
fdivrs
cmc
cli
testl
push
cmp
cwtl
mov
mov
mov
cli
xor
sbb
fdivrp
jp
pushf
out
xchg
cmpsb
lcall
lret
inc
and
push
jno
sar
pop
inc
or
lcall
cmp
or
lcall
xchg
repz
xchg
lods
mov
imul
sbb
pop
add
mov
xor
push
mull
lods
fidivrs
jae
add
inc
rcrb
sub
mov
aas
lea
cmp
add
xchg
xchg
outsl
rolb
inc
jecxz
sbb
xchg
rcl
gs
cwtl
inc
xchg
negl
mov
mov
jp
add
dec
mov
gs
and
je
inc
jno
jns
sysexit
lea
popa
sub
out
adc
jmp
incl
orl
iret
fsubrp
or
hlt
inc
mov
stos
mov
iret
dec
dec
mov
fdivr
dec
inc
cmp
mov
fwait
jmp
xchg
push
test
stc
push
rcr
sub
fwait
enter
filds
jle
pop
jb
inc
jno
sbb
inc
sbbb
imul
mov
mov
and
cmpsl
and
mov
filds
push
sub
fisubs
in
in
mov
jns
rol
mov
mov
sbbb
mov
mov
mov
add
jl
out
sub
bound
inc
xor
int
imul
in
addb
sarb
mov
xchg
mov
push
test
xchg
dec
dec
add
add
rorb
sub
xchg
jae
push
pop
inc
and
mov
dec
lds
and
sub
pop
fsts
cmp
es
dec
pop
test
inc
mov
jns
and
inc
lret
mov
pusha
jl
inc
mov
dec
imul
repnz
and
dec
inc
inc
mov
sbb
sbb
stos
lret
cmp
jge
add
fwait
mov
dec
gs
cmp
js
movsb
loop
mov
roll
pop
int
es
sbb
cmp
mov
call
repz
pop
mov
cmc
in
dec
mov
dec
mov
insb
inc
cmpsb
and
mov
mov
pop
test
mov
dec
inc
jo
fst
ss
aas
xor
sbb
mov
mov
daa
fidivs
dec
sub
js
mov
aaa
jmp
ret
dec
repz
outsb
test
jmp
push
mov
mov
fcom
jmp
les
lret
xor
into
xlat
ja
mov
sub
jno
fbstp
or
dec
imul
loope
cmp
cmp
mov
sbb
subps
and
inc
loop
cmp
sbb
and
push
stos
fistpl
mov
xor
shll
mov
mov
jbe
pop
ds
dec
dec
xchg
loopne
je
inc
leave
lock
aas
inc
arpl
std
shll
dec
loope
mov
adc
in
inc
sbb
xchg
jle
lea
movsl
cmc
or
adc
and
test
xchg
mov
cmp
jecxz
xor
mov
sbb
or
int
jbe
pop
ret
push
dec
cmp
xchg
adc
call
jne
mov
dec
push
pop
dec
cmc
push
movsb
aas
xchg
xchg
add
cmpsl
mov
pusha
xchg
aam
fwait
cmp
xor
push
subb
incb
mov
pop
ja
jo
bound
pop
stos
xor
mov
and
aad
out
or
jne
out
ja
xchg
aad
movsb
hlt
xchg
cld
push
mov
insl
pop
sub
enter
stc
cmpsb
test
shlb
add
push
fdivr
aam
bound
call
dec
mov
mov
sub
shrl
sub
lock
filds
xor
xchg
push
lea
jb
pop
inc
in
call
cltd
lods
outsl
sbb
xor
in
iret
and
mov
test
mov
imul
in
jmp
jecxz
cltd
pushf
into
pop
adc
push
in
lret
in
call
hlt
mov
xchg
movsb
in
push
mov
jmp
icebp
out
loope
arpl
jno
jg
loope
movsb
mov
faddl
fucomp
scas
fwait
nop
mov
test
mov
cmp
sub
ja
push
dec
decb
add
hlt
jae
pusha
dec
stos
xlat
and
lds
jne
sbb
sub
movsb
ja
repnz
arpl
push
cmp
pop
cmpsb
stos
cmpsl
lea
or
xor
sbb
lock
xchg
and
dec
lcall
jno
mov
push
mov
mov
mov
nop
divl
test
testl
and
push
loop
ret
stc
mov
pop
shlb
out
addr16
repz
scas
or
pop
jp
leave
inc
mov
js
in
es
inc
stc
repnz
add
sub
andl
pop
mov
push
dec
test
add
mov
jnp
scas
flds
inc
mov
xchg
test
push
outsl
mov
fwait
push
mov
sbb
sbb
hlt
mov
xorb
cmp
adc
mov
add
lock
sub
cmpsl
leave
arpl
mov
and
nop
jg
mov
cli
nop
sbb
sbb
add
mov
cs
movsl
imul
xor
inc
movsb
mov
repnz
and
jns
aam
jno
nop
jae
in
dec
lock
adcl
cli
jle
aaa
xor
mov
arpl
insb
js
mov
leave
pusha
loop
mov
dec
sbb
fsubrp
xchg
fidivrl
or
jb
adc
pop
jge
nop
fs
cmp
lcall
jnp
cli
mov
cmp
ret
mov
jb
test
and
sub
or
push
ret
jb
mov
popf
mov
cmpsl
sbb
fildll
dec
mov
sub
lea
repnz
lcall
bound
jl
xor
pop
mov
add
insl
jecxz
mul
pop
stos
les
mov
loop
xor
or
cmp
fimuls
and
sub
repnz
dec
adc
jnp
shll
icebp
jbe
std
test
dec
imul
bound
xor
test
lret
je
cmp
icebp
xor
jnp
ss
repz
test
mov
jnp
xchg
int3
push
icebp
jge
lret
pop
in
popa
pop
int
or
lahf
adc
out
and
xchg
inc
stos
xor
ljmp
push
les
mov
popf
ja
insl
mov
cs
imul
xlat
inc
gs
adc
fistl
cmpsl
pop
mov
mov
sub
in
cld
xchg
dec
jp
lock
add
adc
inc
bound
xchg
sub
ror
cwtl
mov
sbb
hlt
add
cmp
sbbb
jno
add
add
dec
shlb
popa
pop
push
sub
call
cmp
ret
sahf
icebp
and
add
ja
out
into
test
sub
lahf
adc
lock
int3
pushf
push
mov
nop
cltd
cmp
es
rol
dec
sub
sbb
xchg
repnz
pop
lahf
roll
and
push
sti
sar
ss
dec
and
pop
repnz
fs
mov
push
inc
mov
xchg
xchg
jbe
dec
call
push
xchg
fisubrs
push
xchg
scas
xchg
iret
mov
popa
cmp
sarl
shl
test
pop
mov
ret
jle
push
inc
pop
sub
pop
add
inc
mov
sbb
xlat
popf
xchg
sar
int3
test
sub
dec
sub
or
jge
mov
js
adcl
repnz
movsl
rclb
fisttps
mov
xchg
xorb
inc
inc
jo
pop
invd
aaa
pop
sbb
pop
xor
jbe
fisubrl
xor
out
divl
test
xchg
jbe
and
jo
xor
popa
test
dec
mov
insb
shrb
adc
add
xchg
dec
stc
or
and
adcl
sbb
sub
out
jle
mov
add
sbb
or
mov
arpl
ja
testl
and
mov
ret
out
dec
fsubrl
mov
and
pop
repz
lcall
mov
xchg
xchg
mov
test
jmp
mov
imul
stos
dec
stos
movb
add
sub
add
mov
sarb
fstl
sbb
mov
ficomps
adc
rcrb
and
hlt
cmpsb
mov
jns
add
flds
xchg
out
nop
loope
fistl
ljmp
fidivl
push
sbb
pushf
fisubrl
lods
mov
mov
call
jge
ljmp
fadds
and
or
adc
push
insl
mov
lret
and
fnstsw
cmp
mov
dec
cmpsl
es
adc
repnz
hlt
iret
xlat
ja
sbb
in
shrb
xor
shrb
repnz
cmc
pop
mull
cli
mov
xor
sub
mov
push
cmpsl
test
jo
lret
xor
push
mov
push
dec
xchg
inc
sub
dec
sbb
and
stc
test
popa
movsb
mov
test
outsl
mov
imul
std
faddp
mov
cmpsl
int
mov
xor
andb
movsl
cmp
adc
dec
inc
add
movb
das
mov
in
inc
mov
and
mov
std
cs
gs
sub
mov
dec
dec
test
mov
sbb
push
or
rolb
lods
mov
pop
sub
cmpsl
push
adc
xchg
shlb
rcll
xor
andb
imul
or
enter
insb
int
jge
int3
or
dec
mov
jbe
xlat
mov
jo
fisubs
or
xchg
pop
or
mov
jns
rorb
lcall
iret
or
aaa
mulb
mov
push
xchg
stos
lods
stc
push
add
push
fwait
pop
sbb
sbb
add
jl
dec
or
mov
sub
xlat
push
in
and
lret
cmp
add
push
lret
stc
sub
movsb
add
imul
icebp
fnstenv
call
rorl
ret
jnp
xlat
sub
mov
xchg
mov
out
sbb
inc
decb
lods
xchg
call
lret
inc
push
xor
mov
frstor
jnp
ret
out
out
pusha
data16
mov
mov
push
out
xchg
ret
push
in
push
cmpb
inc
inc
pop
sub
sbb
inc
xchg
ds
xor
pop
cmp
cmp
jne
inc
enter
sbb
cmc
jp
push
imul
in
inc
jecxz
or
mov
push
jge
lahf
mov
mov
sbb
jno
in
bound
sbb
pushf
scas
adc
and
inc
add
xorb
hlt
lods
cmp
shl
stos
xchg
adc
inc
repnz
mov
clc
insl
add
push
push
push
push
jecxz
push
jl
das
loopne
lret
mov
or
push
push
scas
jne
lahf
push
nop
subb
in
scas
cwtl
pop
in
add
sub
lock
add
pop
cmp
call
gs
mov
adc
xchg
iret
int3
fld
sbb
in
jmp
mov
add
pop
idivb
pop
mov
leave
pop
xor
push
and
das
sbb
int3
js
inc
dec
and
xor
mov
icebp
pop
inc
pop
push
hlt
mov
out
xchg
pop
add
or
push
xor
mov
and
out
pop
mov
and
test
fldenv
sbb
roll
fcomp
sub
xor
jge
lret
adc
jbe
notl
test
cmc
push
xchg
roll
sub
addr16
add
jecxz
pop
jge
shll
push
push
sahf
shrb
adc
outsl
daa
cmp
dec
js
push
xchg
mov
adc
cmp
cmc
ds
pop
push
mov
mov
outsl
xchg
mov
lahf
lods
jl
push
test
dec
cli
inc
jp
adc
sub
sub
jg
fidivrs
icebp
cmp
movsl
adc
gs
cmp
ss
xchg
call
mov
jge
push
xchg
lahf
sub
rcll
cmp
jg
fcmovbe
arpl
je
sub
sbb
xchg
faddl
cmp
mov
dec
nop
sub
out
mov
movsb
shrb
fldt
mov
mov
push
adc
push
mov
jle
jb
mov
inc
lret
into
scas
sahf
insb
sub
ret
lock
in
bound
loope
cmp
inc
cltd
loopne
les
pop
je
fisttpl
aaa
lock
lock
jl
test
into
dec
insb
add
pop
es
add
fiaddl
push
pop
xor
push
ret
inc
jnp
cmp
lods
gs
pushf
push
or
dec
jecxz
jno
sbb
dec
add
aaa
and
cmp
xor
stos
stos
lock
test
or
push
rcrb
jg
ss
or
rcrb
test
out
fisubl
xor
fisttpll
add
cmpsb
push
call
das
pop
cmc
mov
cmpsb
cltd
xchg
cld
hlt
test
ljmp
add
fstpt
je
out
test
outsl
out
or
or
pushf
cmp
repnz
frstor
xorl
xchg
loop
push
xchg
movsl
jb
and
sub
or
scas
scas
sub
push
loop
or
adc
xor
adc
enter
sbb
fstpl
testb
sbb
sub
add
xchg
sbb
xor
inc
test
rolb
addr16
sbb
fwait
lret
std
jle
jb
xor
cmp
test
int3
pop
adc
js
movsb
dec
cld
ja
push
mov
ljmp
lods
adc
mov
and
push
mov
jmp
jg
lret
inc
mov
lock
mov
iret
into
mov
loopne
dec
adc
mov
push
xor
jmp
sub
fwait
dec
sub
loop
sub
inc
or
or
lret
jmp
enter
test
out
stos
out
xchg
fldl
leave
pusha
dec
subb
cmp
cmp
add
adc
mov
cmpsl
push
and
and
xor
push
in
dec
fidivrs
cmp
mov
cmp
mov
lret
xlat
push
inc
scas
pushf
fisttpl
lret
lcall
xchg
jecxz
lock
cmp
sahf
jne
out
jno
int
xchg
adc
adc
insb
fisubrs
xlat
dec
cmp
push
sub
pop
imul
pop
std
sbb
rorb
cmp
fwait
sbb
sub
imul
add
std
xor
or
cmp
aas
push
movsl
push
mov
je
or
in
mov
sub
add
sarl
dec
dec
xlat
mov
push
push
imul
inc
gs
sub
insl
pop
xchg
lcall
movsl
nop
nop
lret
add
sahf
lret
pop
xchg
in
sbb
daa
jecxz
stos
cmpsl
mov
test
enter
subl
andl
dec
jns
jne
fnsave
hlt
mov
add
push
pop
sahf
add
mov
cli
jge
mov
int
jmp
jge
jp
jb
shlb
xchg
cmpsl
inc
out
mov
cmp
cmp
cmp
sti
jb
adc
push
cli
push
push
cmp
inc
test
cmp
cmpsl
stc
cmp
in
cmp
testl
pusha
lods
push
stos
dec
xor
and
lret
and
push
call
add
divps
sbb
bound
and
add
fs
ja
sbb
sahf
and
lock
fiaddl
fwait
mov
push
stos
stc
push
popa
jae
mov
sub
repnz
out
int3
and
lahf
dec
pusha
dec
or
es
in
adc
xlat
sub
lret
mov
mov
rorl
jnp
pop
xchg
insb
test
and
adc
cmp
mov
mov
ret
or
iret
jp
js
push
ds
repnz
mov
test
pop
cmp
ret
xor
rcr
push
mov
insl
mov
repz
sbb
negb
cmovbe
mov
sub
in
ret
jp
jbe
leave
icebp
mov
and
cltd
xchg
xlat
and
popf
dec
mov
out
in
mov
add
gs
icebp
outsl
inc
lcall
bound
mov
adc
lock
mov
pop
shll
pushf
inc
shlb
ficoml
into
fimull
les
loop
and
push
popa
dec
xchg
adc
test
xor
push
adc
subl
nop
into
shll
dec
scas
mov
js
lods
push
sub
xchg
adc
cli
mov
jmp
add
in
xor
cwtl
xor
xor
repnz
xchg
mov
lret
rorl
pop
stos
inc
adc
sub
test
rol
mov
jne
push
leave
sahf
jne
or
in
dec
add
mov
sbb
repnz
xchg
sahf
xchg
loopne
in
inc
push
cmpsb
fmuls
push
sti
movsb
test
or
cld
mov
push
dec
out
aam
or
xor
rorl
movlps
xchg
pusha
inc
hlt
mov
fsubl
scas
cmp
vmwrite
push
sbb
and
outsb
cmp
cmp
ja
xorb
scas
fwait
inc
out
lret
push
das
dec
jb,pn
add
push
imul
clc
sub
addr16
repnz
jno
xchg
xchg
cld
and
cli
mov
lods
pop
sub
push
addr16
mov
js
sub
cmp
xor
pop
push
je
mov
ficompl
or
mov
or
lahf
enter
jmp
add
fwait
push
or
sbb
push
popf
pop
push
and
cwtl
sbb
and
std
xchg
arpl
jp
cmc
inc
gs
bound
leave
shrb
mov
push
outsl
xor
shr
xchg
jbe
nop
frstor
dec
cmp
pop
jecxz
jp
xor
mov
xchg
dec
in
fistl
in
push
xlat
lret
dec
add
push
xor
mov
insl
or
popf
adc
jp
mov
fs
cmp
dec
jmp
leave
jmp
stc
out
mov
push
stos
lret
ret
scas
cltd
sbb
sub
dec
fsts
dec
aaa
notb
add
gs
jle
sub
addr16
mov
or
sbb
pop
or
mov
xlat
sub
xchg
imul
lcall
cmpsl
xchg
ds
shlb
mov
adc
xor
lret
pushf
sarb
sbb
jae
xor
push
and
jae
sbb
stos
mov
inc
sub
ss
cld
mov
add
sub
pop
pop
sub
popf
cld
out
faddp
in
pop
mov
jo
mov
das
nop
ficompl
sbbl
sahf
inc
inc
jp
push
std
outsl
adcb
movsb
cmp
ss
mov
pushf
mov
insb
ja
mov
in
xor
or
push
cmp
dec
test
push
and
add
mov
das
adc
stos
inc
call
mov
popa
scas
sub
mov
inc
fwait
xchg
cmp
add
stos
daa
add
cmp
pop
icebp
jge
push
xlat
sub
adc
fimull
nop
xchg
imul
lret
and
bound
pop
hlt
dec
loope
sarb
loope
stos
fbstp
adc
mov
ja
jp
cmp
cmp
dec
jecxz
pop
rolb
mov
push
test
pushf
lods
in
cmp
sbb
cwtl
jne
jmp
mov
xor
mov
ja
loope
dec
or
and
cltd
daa
fcom
loop
fisubl
sar
out
add
or
push
dec
sbb
inc
rcpps
aaa
pop
cmp
sbb
adc
pop
pop
pop
hlt
or
lds
sub
jb
xchg
adc
in
mov
mov
fisttps
sbb
mov
ds
mov
sbb
xor
jl
xor
and
hlt
ja
lods
rolb
ds
cwtl
mov
aad
or
pop
xchg
movsb
rol
imul
mov
ret
mov
lahf
cwtl
inc
hlt
dec
dec
jge
push
push
scas
add
push
xor
shl
cltd
xor
cmpsb
jbe
fstl
push
inc
dec
push
je
inc
or
out
fmul
cwtl
mov
je
leave
dec
sbb
fwait
push
dec
call
mov
push
sbb
jmp
pop
mov
xchg
lock
mov
inc
dec
push
in
push
sbb
loop
jae
repnz
ret
mov
andb
or
dec
pop
push
dec
inc
imul
jns
hlt
mov
add
xchg
add
sahf
test
lock
aaa
fisubrl
nop
andl
jge
clc
inc
loope
sbb
jmp
les
shl
cmp
push
imul
cs
jae
arpl
popf
fidivl
or
dec
adc
lds
insb
mov
xor
sub
fimull
xor
int3
sbb
inc
dec
cwtl
jp
aad
pusha
and
mov
dec
lahf
and
sbb
lods
mov
icebp
call
dec
sub
add
or
or
scas
pop
fisubrl
daa
inc
jnp
repz
into
dec
pushf
aas
call
scas
mov
ss
in
out
mov
push
cmc
fwait
mov
pop
les
lahf
jle
jl
pop
cmpsl
in
std
xor
cmp
ljmp
ret
xchg
push
leave
lahf
add
nop
popa
sub
lret
outsl
jmp
sbb
jp
insb
jmp
enter
bound
and
arpl
pop
sarb
lret
or
or
movsl
cmp
aad
ds
xchg
int
fldt
jmp
lds
jmp
mov
adc
adc
xor
lds
push
xchg
repz
cmp
and
bound
cmp
dec
js
xor
xchg
insb
sti
pop
rcr
xor
push
cmp
mov
dec
pop
aas
cs
push
jo
mov
in
fsts
mov
pusha
insl
mov
add
mov
ljmp
mov
adc
xchg
mov
dec
ljmp
adcb
test
sbb
dec
jmp
and
mov
adc
push
push
mov
or
and
jo
and
mov
cmpsl
test
jp
add
or
sub
cmp
cltd
push
mov
xchg
popa
mov
aaa
jecxz
push
out
xchg
sub
mov
cli
fistl
sub
fisttpl
dec
lcall
out
mov
int
fsubr
inc
mov
lea
add
inc
pop
or
inc
std
inc
cli
xchg
jle
or
nop
push
lds
ja
fisttps
dec
sbb
push
mov
sahf
cmp
xor
xchg
and
out
inc
lahf
push
push
loop
mov
and
insb
in
mov
dec
sub
pop
aam
mov
adc
loope
pop
xchg
sbbl
out
push
jmp
cmc
pop
movsl
push
mov
mov
stc
test
stos
jg
xor
adc
addr16
add
fsubp
fiadds
cmp
mov
pop
imul
mov
mov
js
aas
cmp
sub
mov
into
loopne
in
stos
mov
mov
das
xor
sbb
mov
or
repnz
mov
loopne
gs
bound
lret
mov
stos
in
inc
push
mov
and
push
dec
adc
fcoms
pop
xchg
jmp
and
movsb
jl
add
mov
pop
mov
je
test
mov
and
pop
xlat
sbb
and
repnz
or
iret
stos
sub
pop
jg
cltd
mov
sub
leave
jmp
inc
leave
loopne
or
cmp
sbb
std
pusha
sub
popa
and
loop
jl
xchg
fsts
xchg
add
jnp
push
je
jne
mov
mov
jno
aam
sub
movsb
data16
aad
dec
loope
mov
or
xor
int
adc
jb
or
cmp
loopne
bts
outsl
cmpb
sub
rol
cmp
dec
das
pop
xor
call
xlat
xchg
divl
jmp
dec
test
sub
or
adcb
pop
xchg
xchg
lret
fs
loopne
scas
jns
dec
aad
xchg
pop
xchg
push
lret
or
mov
cmp
mov
mov
rcl
sarb
mov
bound
pop
mov
std
cmp
rep
jecxz
cltd
in
popa
cld
push
lds
in
lcall
pop
adc
pop
sarl
clc
add
adc
stc
dec
pop
aaa
mov
in
and
dec
iret
popa
pop
jb
stos
jb
jecxz
cmp
cmp
add
push
arpl
jp
add
lcall
pop
mov
out
loope
xor
jmp
arpl
cmpsb
xchg
jne
fcompl
xor
in
add
lock
dec
imul
sahf
outsl
or
xor
shr
lea
ljmp
mov
adc
dec
pop
shlb
adc
hlt
jecxz
repnz
xor
or
in
dec
pop
mov
popf
mov
or
fwait
push
movsl
in
stos
pop
mov
inc
loopne
mov
add
pop
jl
xor
mov
xor
push
test
scas
scas
enter
add
adc
push
adc
orb
pop
stos
adc
push
inc
faddp
xor
aas
xchg
cwtl
jmp
clc
ret
ficompl
jo
hlt
outsl
pushf
add
dec
pusha
into
jecxz
ret
ret
push
js
push
aas
inc
mov
movsl
pop
call
leave
rcrb
ret
popa
sbb
cmp
push
dec
in
add
mov
cld
sti
mov
mov
dec
cmp
insl
xchg
into
loop
mov
mov
daa
js
and
out
ret
dec
add
iret
mov
scas
fildll
or
mov
mov
imul
loope
lods
sbb
xchg
insb
clc
shr
jmp
in
jecxz
gs
cmp
lahf
fimuls
inc
ret
mov
insl
cmpsl
repz
xchg
fwait
mov
loopne
sub
push
pop
scas
lea
mov
outsb
adc
push
push
lcall
xor
sub
shll
bound
sub
jp
pop
mov
jbe
cld
pushw
ss
iret
sub
ja
push
push
int
dec
fstp
add
mov
mov
jno
das
sub
cli
pop
imul
jge
lret
subb
push
sub
xor
dec
stos
daa
xchg
arpl
jg
xchg
mov
fst
pop
mov
outsl
ljmp
cld
into
and
and
push
cmp
inc
repz
ja
sub
imul
cmp
adcl
rorl
fiadds
stos
shl
xor
xchg
nop
jmp
xchg
and
shll
in
adc
pop
ja
sub
or
xchg
xchg
roll
pop
xor
mov
jns
push
and
pop
mov
xor
adc
pop
stc
jne
xlat
test
iret
shl
div
negl
pop
jo
aam
je
rcl
cmpsl
lea
test
jecxz
xor
or
jg
std
jle
daa
fwait
mov
fwait
aad
jp
pop
cmc
cmp
dec
das
xor
jae
lahf
lock
mov
jg
or
xor
add
xchg
cmp
test
repz
les
test
lock
clc
nop
mov
insw
popa
cmc
inc
add
jmp
xor
ret
sub
mov
aam
cmpsb
shrb
sbb
sub
ret
hlt
scas
mov
add
push
or
lods
mov
pushf
or
mov
mov
popa
je
xor
add
mov
arpl
dec
sbb
stos
jecxz
sub
pop
mov
push
icebp
mov
jl
cmp
mov
in
nop
sbb
das
cmp
sub
xchg
fisttpl
cltd
push
sbb
testl
nop
in
insl
mov
mov
mov
mov
repz
sbb
pop
jl
push
loop
andb
scas
ret
adc
pop
mov
inc
clc
cmpsl
and
lods
xchg
and
inc
fwait
outsl
repz
fstpt
mov
mov
lds
mov
cmpsb
outsb
stos
sbb
sub
pushf
out
nop
sbbb
mov
xor
addr16
lea
lret
sbb
cmp
pop
mov
insl
cmp
xchg
in
and
push
add
and
movsl
cld
mov
mov
lret
lea
jb
push
int
xchg
daa
out
push
xchg
mov
cmp
adc
aad
sub
scas
sub
add
cmp
push
popa
pop
xchg
fs
add
jp
xchg
dec
lock
dec
enter
add
pusha
xor
pop
cmp
mulps
shl
sub
pop
xor
jp
mov
xchg
ja
jb
loope
bound
mov
inc
iret
mov
mov
jge
cmpsb
pop
cmpsl
dec
xor
ljmp
pop
in
inc
scas
inc
lcall
push
and
or
mov
xor
in
push
adc
jmp
and
out
cmp
jbe
mov
je
jb
or
cmp
xchg
sub
mov
sbb
mov
fsubl
jo
pop
test
sub
repnz
sbb
sub
push
dec
lahf
adc
lret
or
xor
xchg
dec
mov
std
movsl
add
dec
jmp
in
loopne
mov
inc
jmp
sarb
loope
pop
int
daa
fwait
inc
inc
and
fildl
cwtl
fsubl
lea
mov
out
shll
inc
js
mov
cmp
pop
je
or
push
add
fmuls
pop
mov
lds
filds
fisttpl
and
into
enter
hlt
mov
lea
fldt
lods
shll
ret
andl
mov
pop
icebp
push
inc
test
mov
xor
adc
push
inc
push
out
call
dec
arpl
xchg
inc
into
loopne
push
movsl
pusha
add
and
jg
stos
sbb
cwtl
add
faddl
mov
inc
push
jp
inc
mov
dec
cli
in
hlt
int3
push
jb
fcoml
ja
aas
test
sbb
mov
mov
cs
scas
mov
inc
iret
call
cmp
dec
cmp
dec
and
dec
mov
dec
ja
mov
outsl
sbb
push
enter
push
mov
and
stc
aas
cwtl
insb
lea
xchg
nop
pushl
dec
rcrb
fnstenv
cli
cmpsl
sahf
cmc
stos
xchg
add
adc
daa
xchg
mov
sub
push
add
xchg
inc
sbb
xchg
or
mov
clc
in
fidivrl
jo
sti
sbb
dec
and
enter
add
jle
push
das
int
and
mov
mov
cmp
adc
push
or
popf
pop
cwtl
out
jb
negb
cmc
pop
repnz
call
mov
leave
lea
icebp
jno
cs
mov
je
sub
mov
mov
rcr
cmp
cwtl
xchg
shrb
push
push
xchg
shrb
testb
fdivl
cmc
dec
aad
notb
bound
pop
or
adc
jge
ljmp
cmp
stos
popf
or
xchg
or
push
inc
in
leave
or
sub
adc
mov
pop
int3
nop
lret
lahf
sbb
xor
clc
add
jmp
and
adc
aad
push
pop
movups
and
enter
rcll
xor
movsl
lea
sub
and
xchg
repz
mov
mov
sahf
out
pop
push
mov
aaa
add
cltd
inc
std
xchg
pushf
scas
iret
orl
push
sub
cli
adc
cmp
fidivrl
cli
sub
xor
mov
std
and
pop
fwait
pop
and
dec
mov
adc
ljmp
sarl
adc
mov
mov
and
sbb
jecxz
jb
sub
scas
mov
xchg
packsswb
jo
daa
ret
or
or
cmp
popf
ret
repnz
test
cmpsb
shll
mov
push
mov
int3
movsl
fwait
popf
fwait
xor
jae
jnp
xor
mov
fisubs
jp
daa
jno
sbb
push
pop
je
sbb
movsb
sbb
mov
or
pop
or
push
mov
je
aad
cmp
lcall
sbb
jp
add
lds
lods
pop
fstp
adc
pop
movsl
xlat
mov
mov
in
sbb
mov
push
sub
int3
lods
pop
loopne
sub
adc
sti
sti
push
jge
lcall
or
sbb
adc
dec
lret
es
pop
jl
push
dec
inc
sub
loop
cld
jne
xor
cmp
test
scas
hlt
out
inc
dec
sbb
sub
inc
lea
pop
cs
loop
inc
js
jbe
pop
pop
xchg
pop
cmp
mov
or
dec
mov
popfw
addl
mov
jns
lods
ficoms
adc
test
mov
das
je
int3
dec
xchg
pop
scas
jae
daa
cmp
mov
jnp
mov
xor
xchg
das
sbb
jne
jle
and
cs
push
push
xlat
aam
lods
fnstcw
lahf
push
xor
dec
sub
sub
push
push
incl
push
xchg
lret
enter
pop
nop
hlt
mov
cld
xchg
xor
pop
movsb
ucomiss
xor
xor
mov
pop
roll
fadds
fisubrl
pop
js
push
inc
adc
ss
loop
insb
enter
xchg
adc
cmc
jbe
sbb
add
push
imul
loope
scas
sub
xchg
xlat
dec
mov
inc
loopne
jbe
test
repnz
xor
jp
sub
repz
insl
je
mov
ss
aam
push
bnd
iret
sti
jp
cmpsl
dec
jp
adc
sbb
adc
and
and
std
sbb
add
adc
push
xlat
and
pop
add
daa
pop
cmpsb
jp
loopne
mov
mov
mov
out
movsl
sbb
jmp
fdivrl
scas
dec
xchg
mov
sub
pop
xchg
mov
sbb
push
shll
pushf
jbe
jae
jle
mov
lahf
jno
push
hlt
mov
test
sbb
jp
adc
inc
stos
inc
jmp
test
lcall
aam
aam
scas
or
cli
mov
mov
pop
xchg
mov
mov
jae
dec
divl
sbbl
pusha
notl
push
stos
addr16
stos
adc
imul
and
iret
pop
outsb
test
mov
pop
xlat
xor
jae
sahf
jne
pop
push
cmp
pop
and
mov
jnp
ja
ret
adc
dec
in
dec
xorl
clc
add
sbb
jge
int
mov
mov
bound
mov
pop
xchg
xor
mov
daa
inc
jae
jae
lret
out
orb
lret
nop
sbb
add
dec
imul
pop
data16
leave
bound
in
pop
dec
mov
sub
iret
mov
roll
jnp
cli
xor
sbb
push
ret
and
pop
jns
sub
movsl
sbb
adc
insl
cmp
aam
mov
push
jp
repnz
addl
mov
push
push
dec
sti
pop
lods
jmp
rcrb
loope
ficompl
repnz
push
fwait
fs
sbb
dec
imul
push
movsl
push
mov
adc
xchg
xor
out
iret
and
fldl
mov
in
adc
fdivp
lret
jl
push
or
roll
jecxz
fwait
rcll
pop
fwait
icebp
in
es
dec
pushf
xchg
cld
xchg
sub
cli
pop
dec
orl
lock
fstpl
dec
movsl
std
push
mov
popa
scas
lds
jno
aas
sbb
lcall
xor
cwtl
cltd
lods
stos
sbb
daa
aas
jnp
cld
jno
arpl
inc
xor
repz
fwait
adc
test
dec
jb
cmp
lods
std
push
ljmp
filds
test
sti
inc
and
mov
jno
lcall
xor
sahf
jmp
out
loope
xchg
repnz
mov
sbb
loop
rolb
mov
xchg
popa
or
arpl
js
ss
cmpb
test
jae
inc
js
mov
pop
lock
xor
xor
movsb
decl
pop
or
jmp
pop
cmpsb
push
push
fwait
add
adc
xchg
xor
int
push
sar
mov
andb
shrl
xchg
frstor
inc
cmp
aad
xor
les
cmp
xor
adc
mov
inc
dec
xchg
sub
or
stos
sub
popf
inc
enter
ss
inc
sub
xorb
dec
in
sbb
out
push
xchg
or
ret
fs
fisttpl
xor
add
pop
cmc
and
adc
push
scas
subb
mov
clc
jns
jg
aam
xchg
fldcw
mov
and
jp
add
mov
push
pop
dec
mov
jns
aas
xchg
mov
push
repz
ret
jecxz
popa
scas
imul
push
inc
stos
lret
dec
mov
cwtl
cs
sbb
dec
cmp
lret
jno
jbe
stc
mov
fwait
das
mov
mov
sub
xchg
outsl
pop
pop
sar
clc
fucomp
dec
movsl
pop
adc
or
sti
dec
jbe
roll
xchg
das
cmp
mov
or
popf
lock
rcl
cmp
mov
scas
stos
insb
sub
int
arpl
loope
movsb
adc
pop
push
sbb
pushf
jecxz
sahf
add
loope
cld
jae
push
cmp
pop
scas
sbb
ds
dec
es
add
and
adc
or
cmpsb
test
sbb
test
pop
stc
add
shlb
mov
ss
add
mov
arpl
push
adc
mov
fwait
sub
xor
adc
xchg
and
call
jnp
dec
pop
push
xor
stc
push
lcall
out
clc
dec
shrb
mov
adc
push
or
mov
dec
push
mov
je
or
cmp
xlat
and
in
or
xor
inc
pop
movsb
mov
mov
scas
je
in
push
ja
ss
loop
push
push
mov
inc
add
outsl
aas
fisttpll
adc
enter
icebp
in
and
mov
out
lahf
mov
lret
or
sbb
pop
jne
xor
push
sbb
cwtl
cmp
loopne
ljmp
ror
and
popa
add
pop
int3
push
mov
sahf
lcall
shr
les
leave
push
push
mov
mov
push
mov
push
push
hlt
sbbb
out
or
sbb
push
add
mov
xor
mov
aad
in
out
es
xlat
adc
or
aam
in
fistl
por
fidivrl
xor
and
cmp
rcr
rorb
mov
lds
or
adc
push
insb
mov
pop
int
test
xor
or
call
ja
inc
orl
jp
or
int
push
fs
sub
mov
push
ja
insb
jge
imulb
xchg
lea
adc
xchg
xchg
add
xchg
adc
arpl
je
aad
push
adc
movsb
inc
sbb
jecxz
and
mov
jl
sti
fists
jns
add
ds
rorl
imul
sub
jl
mov
mov
pop
and
mov
mov
shl
lahf
in
flds
mov
add
add
mov
fdivl
xor
jg
jmp
inc
lds
cld
int3
pop
and
xchg
dec
test
push
sbb
mov
movsl
mov
adc
jmp
pop
out
fbstp
adc
enter
movsl
mov
pop
movsb
jo
loope
js
out
adc
fldl
daa
scas
iret
xchg
lea
dec
cmp
fiadds
sbb
push
sbb
aas
mov
mov
cmpsb
sub
test
adc
cmpsb
insb
xor
mov
adc
pop
xchg
jb
push
dec
add
sub
mov
fldlg2
outsl
push
notb
adc
shrl
cwtl
xchg
mov
imul
sbb
dec
fidivs
fadds
add
mov
in
sub
xor
pop
out
and
jmp
sub
pop
scas
lea
jmp
push
cmp
insl
jl
inc
pusha
and
cmp
jnp
mov
jae
xchg
aad
enter
and
jb
test
adc
mov
ljmp
add
xor
div
inc
lds
push
lret
fdivr
adc
cmp
je
sbb
push
mov
lret
pop
xchg
call
into
xchg
add
pop
lcall
dec
fnsave
xchg
sbb
jp
hlt
xchg
cltd
or
or
shl
pushf
xor
jge
and
mov
inc
or
pusha
push
mov
pop
push
stos
ret
sub
jg
and
outsl
aas
jg
xor
lods
push
and
repnz
push
add
into
rorl
daa
sbbb
mov
pop
or
scas
mov
aad
rcl
leave
dec
hlt
pop
sbb
or
aas
push
fiaddl
xchg
lea
orb
fwait
mov
pop
pushf
mov
push
mov
push
xchg
xchg
aaa
pusha
js
cld
pop
sbb
xor
mov
jb
xchg
inc
cmpsb
xchg
insb
push
repz
movsb
inc
das
mov
cmp
push
push
bound
pop
inc
sub
pop
jecxz
jo
repz
mov
jne
or
dec
ret
loopne
jnp
ret
xor
mov
mov
daa
mov
xor
ficoml
addl
in
ss
mov
cli
clc
add
addl
mov
jno
push
and
loopne
sahf
stos
pop
pop
inc
add
jo
add
pop
clc
mov
push
mov
fnstenv
cli
xor
xadd
pusha
fiadds
out
sub
into
inc
inc
jo
push
cmpsb
xlat
movsb
xor
mov
ljmp
sub
sbb
cmp
popa
lret
data16
pop
scas
cmpsb
std
jns
pop
mov
testl
mov
aas
lcall
add
dec
xchg
inc
mov
inc
ret
arpl
mov
sarl
sarb
inc
mov
add
and
out
lret
cmp
adc
xchg
mov
push
in
jmp
dec
or
outsl
dec
inc
aaa
nop/reserved
pop
mov
or
pause
movsl
jne
shll
push
fsubs
push
test
mov
jb
dec
negb
cs
mov
xchg
and
dec
jnp
icebp
jb
cmpsb
lret
push
cmpb
cmp
jl
jns
cmp
add
clc
dec
or
insb
je
mov
shl
mov
mov
notb
push
divb
mov
rorl
fdivrs
std
xor
lods
ja
stos
cmpl
adc
iret
aad
out
xor
pop
adc
jno
dec
out
andl
aad
das
shlb
mov
ss
mov
mov
dec
sub
fcoms
add
sub
popf
sub
push
iret
cmp
jno
bound
adc
pop
push
mov
mov
cwtl
or
fidivrs
adc
aas
sbb
pusha
sub
sub
jmp
fmull
and
push
sti
cmpsl
sbb
or
cmc
push
xor
lods
jecxz
lahf
nop
out
in
lds
mov
into
add
or
adc
and
jg
aam
repz
push
leave
cmpsb
test
sub
shlb
mov
stos
xchg
add
jle
or
mov
inc
push
xchg
mov
dec
pusha
ds
xchg
das
xchg
pop
loopne
repz
cmp
cld
pop
push
ret
fsts
ret
push
call
sub
xchg
imul
sti
or
int3
cmp
xor
push
push
test
sub
xchg
scas
sbb
pop
in
push
loopne
and
pop
outsl
outsl
roll
mov
mull
test
push
adc
or
xchg
jo
aas
mov
xor
xor
fs
fdivs
movsb
les
sbb
cmp
pusha
jg
mov
push
xchg
jno
gs
and
mov
inc
popa
cld
dec
xchg
ret
in
cmpsl
jmp
scas
mov
aas
sub
pop
sub
lahf
lods
mov
mov
cs
add
test
scas
or
jmp
jnp
pushf
pop
out
clc
dec
xchg
lcall
dec
xchg
call
js
bndldx
xchg
ret
lcall
repz
arpl
test
ds
std
lods
shr
cmpsb
mov
in
sti
addl
xor
inc
test
jecxz
xor
aad
clc
jmp
lret
mov
add
mov
dec
cmpsl
inc
jge
test
mov
inc
mov
pop
inc
mov
ja
sbb
aam
jns
mov
in
imul
mov
movhps
push
xchg
bound
pushf
into
lea
mov
sbb
enter
cltd
leave
push
xor
mov
jl
jecxz
jae
adc
jle
mov
push
add
jmp
and
sahf
xlat
push
inc
arpl
fstpl
inc
push
pop
dec
adc
sahf
leave
scas
addb
sub
dec
inc
loop
jb
cltd
test
jge
adc
es
shrl
jne
lods
add
cmp
test
lods
mov
out
ror
aam
int3
fwait
jp
cmc
xchg
jno
add
loope
push
sbb
dec
addr16
mov
jns,pn
sti
inc
andl
or
stc
subl
inc
lret
adc
xchg
dec
sub
loope
cmp
jns
cli
jne
mov
out
iret
sub
lcall
out
xchg
mov
test
mov
push
mov
mov
outsl
push
es
push
or
inc
in
sahf
jbe
fistl
in
outsb
fidivrl
sub
xor
call
leave
pop
pop
jnp
movsl
les
pop
fwait
dec
or
cmp
jns
sbb
or
xor
popf
xchg
lea
cmp
ficoml
add
ds
loopne
out
and
movsl
mov
pusha
mov
shlb
repz
cmpsl
cmpsb
mov
add
mov
sub
iret
dec
bound
enter
ret
mov
scas
jge
test
mov
add
in
loop
movsl
pop
xor
cmp
adc
jns
ljmp
scas
js
daa
push
adc
push
mov
inc
out
pop
jne
lock
pop
fdivrs
cmp
les
imul
faddp
adc
mov
loop
mov
cmp
dec
add
ret
aaa
pop
popf
fildl
out
pop
xchg
xchg
jbe
ljmp
inc
and
ret
pop
and
in
add
adc
mov
sbb
lret
jo
dec
adc
xor
mov
xor
shl
sti
std
ljmp
arpl
dec
jecxz
dec
data16
call
cmp
inc
mov
mov
fildll
pop
in
aad
lock
cli
addr16
push
mov
cli
sbb
dec
add
sbb
into
sub
fcomps
push
loop
cmp
andb
imul
push
test
push
sub
dec
gs
xor
adc
sub
imul
insl
cld
lds
aaa
scas
ss
or
cmpl
mov
int
xor
aaa
push
iret
imul
je
pop
mov
pop
in
pop
flds
pop
mov
out
daa
jecxz
notl
subl
and
cmc
dec
imul
stos
cmp
fistpl
pop
loopne
popa
xchg
je
subb
aaa
out
xchg
mov
adcl
shlb
xor
jmp
jecxz
cmp
loopne
sub
xor
xchg
ret
sub
push
sahf
pop
lock
pop
out
sarl
push
mov
in
nop
or
pop
and
mov
ss
sbb
filds
jo
cli
jl
jle
cwtl
xor
dec
push
pop
pop
stos
icebp
or
and
lock
out
es
imul
mov
loope
pushf
testb
sbb
xchg
pushl
inc
lds
repnz
sbbb
mov
bound
xor
imul
imul
push
pop
insb
push
xchg
stos
fimull
sub
shlb
nop
insb
cmp
jo
jne
popa
adc
pop
push
or
add
insl
mov
rcrb
or
mov
fucomip
sub
xor
xor
mov
sub
bound
xor
test
sbb
ljmp
and
cmp
mov
xchg
mov
xor
stos
mov
ret
cmpsb
pushf
in
push
stos
sub
ss
mov
mov
testb
subb
fsubr
sarb
enter
add
popf
cmp
iret
inc
movsb
inc
sbb
push
jmp
pop
mov
push
outsl
add
add
hlt
fidivs
ret
xor
cmp
pop
dec
cmp
mov
mov
or
ja
jl
fildll
xor
nop
dec
mov
daa
sub
jle
jbe
add
and
sbb
ret
pop
mov
roll
sbb
pushf
mov
xchg
test
xor
insl
xchg
lahf
ret
fs
xlat
mov
iret
dec
add
jmp
lret
sub
inc
push
pusha
andb
frstor
cld
push
and
xor
bound
mov
daa
test
mov
das
in
sub
fcoms
fnsave
cltd
inc
xchg
push
movsl
sahf
jo
int
in
xchg
out
jmp
fwait
jmp
gs
and
adc
bound
pop
stos
mov
mov
stos
xchg
movhps
xor
fstps
push
popa
ret
add
lcall
mov
jns
or
xor
roll
es
xor
test
outsl
int
xchg
popa
jo
xchg
jle
enter
arpl
mov
int
mov
popf
in
subl
pop
pop
leave
sbb
popa
sub
xor
mov
gs
lds
push
xchg
lock
push
push
movsb
insb
jo
lahf
pop
inc
pop
xor
test
mov
rcll
xchg
dec
push
cmp
push
outsb
insb
in
roll
ret
ret
addl
shl
fbstp
in
jns
movsl
inc
jb
andb
xor
leave
ret
les
insl
in
xchg
and
ljmp
mov
pop
out
arpl
and
and
push
add
mov
fs
or
cmp
das
aad
mov
mov
popa
out
fwait
outsl
int
in
js
inc
jne
sbb
push
push
aas
test
jne
add
in
push
addr16
mov
int
sub
push
mov
cmp
adcb
and
xor
and
out
inc
dec
xchg
push
movsl
lret
lods
xchg
sbb
jns
pop
jb
ss
fcmovnbe
lock
sub
mov
jle
push
les
add
daa
outsb
adc
jb
inc
jb
imul
test
mov
call
je
sti
mov
cmpl
repz
jmp
loopne
add
pop
cs
sbb
add
fnsave
nop
test
jno
test
cli
or
jle
mov
cmpb
ja
and
in
cld
mov
arpl
xor
pusha
push
add
sbb
pop
cmp
pusha
ja
and
push
dec
and
fisubs
or
lahf
gs
cld
mov
fsts
mov
mov
add
xor
fdivrp
scas
sahf
sub
mov
and
adc
sahf
out
cmpsl
lret
insl
fwait
dec
sbb
sbb
in
in
dec
out
adc
push
mov
sbb
push
out
fsts
dec
jne
ljmp
hlt
stos
xor
sbb
or
cmp
test
lock
and
movsl
mov
mov
cld
inc
stos
and
sbb
lock
popf
shrb
cs
mov
inc
es
adc
loope
adc
mov
scas
or
and
loop
pop
test
or
mov
ja
xchg
sub
adc
out
jle
sub
test
sub
icebp
dec
lret
dec
jl
mov
mov
mov
out
adc
out
pop
mov
mov
stc
mov
insb
inc
mov
vmovntps
aas
dec
inc
push
push
mov
push
xor
xor
jg
mov
sub
push
push
inc
subb
adc
xor
mov
adc
sub
sub
ror
dec
jns
jmp
movsb
int3
cmpb
addr16
jae
outsb
mov
je
out
fs
arpl
cmp
push
xchg
imul
sti
lock
inc
aas
push
xorl
cmpsb
mov
push
fdivs
xor
shll
mov
push
dec
data16
add
ret
xchg
cltd
jp
mov
cli
pop
jl
imul
cmpsb
data16
into
jg
sbb
cmp
mov
mov
loope
jmp
int3
or
insl
cmp
add
inc
test
jmp
rol
push
aas
jae
mov
xor
mov
and
lods
aam
mov
xor
popf
fsubrs
push
xchg
xchg
pop
xor
inc
push
outsl
pop
or
in
sub
push
mov
xor
testl
mov
imul
test
mov
ror
in
add
xchg
push
sub
xchg
sub
in
mov
dec
cld
pop
pop
push
lret
out
inc
xor
push
push
add
lea
inc
fwait
adc
or
or
jmp
int3
xchg
lahf
cmpsb
je
fsubl
pop
add
xor
jmp
das
in
adc
lret
sub
scas
loope
js
inc
add
inc
fcmovbe
add
mov
addb
push
inc
loopne
mov
inc
cmpl
adc
sub
and
push
pop
jae
lock
movsb
lret
xchg
adc
adc
sahf
shl
sub
dec
sbbb
push
mov
and
pushf
xchg
sti
gs
dec
outsb
leave
pop
sbb
mov
dec
js
fxrstor
cmovle
adc
mov
popa
stos
cmp
fidivs
cmpsl
sbb
fimull
jp
jp
int3
sbb
xorl
pusha
pop
mov
and
jnp
add
lret
call
mov
xchg
cmp
cltd
dec
push
ljmp
loop
sti
xlat
test
sub
push
inc
call
cmp
sbb
mov
add
cmp
and
or
ljmp
lret
sbb
lea
mov
mov
cld
xchg
pop
pop
jecxz
je
aam
mov
xor
push
jne
jbe
inc
mov
loop
lds
sub
push
popf
cmp
push
sub
mov
sbb
lods
add
inc
cli
or
sbb
sbb
loopw
mov
inc
push
and
test
cs
cmp
sub
popf
adcl
mov
loope
outsl
xor
xchg
push
movsb
aam
ljmp
dec
inc
or
or
outsl
jmp
lret
mov
insb
dec
loop
jp
adc
and
push
or
sbb
faddl
and
mov
or
sarl
call
sbb
jle
cmp
nop
cmp
js
lcall
scas
xor
lcall
sysret
jp
cmp
cmc
shlb
pop
jmp
push
stc
mov
and
aad
mull
mov
mov
sahf
or
idiv
mov
aas
xor
and
repnz
push
scas
bound
pop
sbb
mov
inc
testl
mov
cmp
push
ss
dec
mov
and
jb
scas
pop
pop
rcrb
pop
inc
lds
js
ret
fnstcw
add
pop
xchg
fwait
inc
int3
jnp
cmpsl
mov
loop
fwait
dec
jmp
push
jle
cmpsl
push
inc
repz
fcomps
pop
stos
sub
aas
mov
fimuls
pusha
and
xchg
and
push
cmpsb
in
dec
push
sti
bound
mov
push
push
jne
cld
test
sarl
dec
mov
bound
addl
std
fisubrl
dec
lea
aam
cmpsl
dec
mov
add
or
cli
dec
shll
mov
pop
or
dec
std
cmp
out
push
lods
sbb
sti
lea
mov
fwait
mov
jecxz
imul
aam
and
mov
push
das
aaa
pop
push
push
jle
rolb
enter
mov
pop
imul
stos
mov
cmc
int
out
lock
jne
xor
lahf
push
or
inc
cwtl
sbb
fwait
int
mov
mov
sbb
sub
xlat
lahf
mov
mov
pop
jp
mov
lcall
push
jl
push
push
bound
shlb
rolb
jb
jmp
or
push
and
sbb
push
sbb
repz
aam
stos
cltd
add
cmp
nop
sbb
sub
sub
shr
sbb
dec
shll
cwtl
dec
loope
sub
pop
int
add
sbb
adc
loop
and
adc
jp
orl
jg
mov
mov
test
add
mov
xchg
mov
xchg
bound
push
cmpsl
sbb
pop
pushf
sub
lret
mov
xchg
xchg
movsb
rcrl
mov
cmpsb
scas
inc
aam
ss
and
loopne
fsts
gs
jnp
outsb
adc
in
cs
js
sbb
pusha
pushf
push
cmp
bound
or
aas
into
adc
sub
xchg
xchg
iret
dec
clc
call
push
inc
out
cmp
mov
dec
mov
pop
mov
adc
ret
push
adcl
call
pop
push
decb
push
add
das
xchg
out
ficoml
push
enter
int3
or
push
test
push
in
fsubp
sbb
nop
inc
cmp
xor
mov
mov
xchg
cltd
mulps
addr16
add
or
popf
pop
pop
push
mov
mov
in
push
adc
mov
mov
out
fwait
gs
add
data16
jbe
xchg
jb
xor
in
inc
jb
ss
xchg
aad
lock
std
jg
push
mov
dec
push
cmp
int
push
insl
popa
mov
sbb
add
aaa
aas
pop
aaa
shr
test
stos
and
cmpsl
xchg
rorl
push
cmp
jge
into
mov
inc
jae
in
pop
je
or
pop
xor
push
jge
jl
rorl
outsl
fwait
je
pop
pop
jmp
jmp
jo
das
es
clc
or
aad
ret
push
jmp
xlat
arpl
mov
mov
mov
mov
jmp
sub
leave
iret
xor
loopne
test
sub
pop
mov
out
popa
inc
jne
sbb
dec
xlat
inc
mov
ss
xchg
xchg
or
arpl
into
pusha
scas
mov
xlat
push
push
mov
lahf
arpl
dec
mov
pop
sub
cmp
sub
mov
xor
cmp
mov
enter
push
lods
incb
and
xlat
adc
data16
sti
lods
sbb
adc
insl
lret
cmp
fisubl
sub
pusha
and
xlat
mov
or
fucomip
stc
jl
mov
or
push
push
add
mov
jp
mov
fdiv
into
mov
sub
insb
cmp
jno
movsb
jl
cmc
outsb
mov
cmp
shll
jo
je
push
clc
stos
jle
cmp
or
jmp
in
jp
das
xlat
lods
stos
sbb
adc
sbb
gs
std
add
js
clc
jns
pop
cwtl
stc
and
test
xchg
pop
push
jg
add
mov
es
jae
push
or
mov
addb
int
int
mov
lds
add
jg
adc
jmp
xor
incl
adc
stos
mov
inc
pop
cmpsb
rol
fstpt
xor
push
cmp
out
and
push
push
push
dec
rorl
jle
xor
push
jge
xchg
divb
inc
pop
dec
mov
js
mov
adc
or
push
inc
pop
jo
sbb
fidivrs
sub
cld
fstl
xor
stos
sub
cltd
or
adc
mov
out
xor
fstpl
or
test
push
imul
cmp
sub
pop
cmpl
leave
imul
mov
mov
and
mov
ror
cmp
fucomi
dec
and
rol
inc
into
aas
faddl
gs
enter
xlat
or
inc
mov
pop
lcall
mov
roll
xchg
in
mov
movsl
leave
jnp
stos
test
or
testl
xor
lods
cmp
mov
cmp
fcomps
dec
movq
jmp
jp
vandnps
add
mov
aam
call
dec
inc
mov
and
lods
imul
sub
mov
push
cwtl
or
dec
mov
inc
movsb
cmp
push
adc
adc
add
and
push
data16
sahf
or
mov
xchg
imul
in
ss
sbb
sbb
and
or
out
mov
hlt
lcall
aas
loopne
lahf
mov
cmpsl
ret
adc
fwait
cmpsl
outsb
dec
call
jl
dec
cs
mov
adc
pop
mov
sub
das
fisttpll
mov
or
or
lahf
adc
clc
ds
outsb
stos
mov
jno
repz
and
xchg
lret
pop
jae
lcall
jnp
pop
ja
cmp
sub
call
jp
dec
lret
push
fisttps
popf
jmp
out
sbb
lcall
push
mov
cmp
roll
andb
cmp
decb
and
in
fsubs
ds
shlb
add
push
es
and
push
test
cmp
lods
add
xorb
mov
in
outsb
mov
and
mov
imul
testb
out
jbe
mov
sub
add
addr16
push
test
adc
aas
stc
xlat
ljmp
shr
jbe
test
es
neg
and
in
jl
mov
mov
mov
gs
add
adc
dec
pop
lahf
inc
stos
outsl
mov
call
mov
jb
js
xchg
aas
rcr
in
mov
pusha
fs
push
mov
out
inc
shll
mov
cs
lahf
out
and
iret
test
pusha
xchg
es
nop
pop
mov
or
xchg
mov
push
test
xchg
ficoms
cld
sti
lods
add
xchg
or
push
xlat
pop
enter
aam
std
cltd
mov
mov
inc
cwtl
add
xor
mov
mov
xchg
jae
dec
pusha
adc
stos
or
cmp
in
jb
clc
sbb
push
push
pop
sub
scas
fists
or
sbbl
add
popf
mov
in
xor
ret
out
mov
inc
fnclex
leave
push
adc
mov
and
cli
shrb
in
xor
jl
out
mov
out
popfw
pop
mov
popa
adc
adc
imul
je
cmpsl
or
cmpsl
jne
push
sub
adc
gs
jmp
int3
mov
sbb
mov
inc
mov
imul
mov
lods
ds
mov
mov
mov
push
int
xchg
sub
lock
mov
adc
scas
sub
jge
cmpl
insb
mov
and
popa
and
push
aaa
popl
bound
loope
lcall
inc
dec
idiv
aas
sti
xor
shll
cmpsl
jno
pop
adc
shll
jnp
xchg
and
movsb
pushf
dec
lea
push
push
pop
and
divb
jg
fdivp
mov
sub
rorl
lahf
or
adc
cld
sub
fildl
xchg
or
stos
inc
and
xchg
xor
mov
or
push
data16
pop
mov
inc
and
movsl
xchg
bound
inc
gs
in
pop
ret
push
imul
mov
in
sub
pop
sub
les
xchg
sahf
nop
pop
inc
int3
ret
aas
pop
xchg
pushf
and
in
xchg
fdivrl
sub
add
hlt
pop
pop
mov
or
or
mov
xor
push
lods
mov
sbb
sbbb
imul
cmp
jae
loop
fists
test
jb
sbb
mov
fnstcw
leave
cltd
cmp
scas
into
inc
xor
mov
out
push
push
inc
aam
rolb
test
xchg
pop
push
and
and
or
mov
add
in
icebp
inc
aad
aad
or
pop
pop
aaa
shrb
cmp
and
int3
hlt
rorb
into
scas
addr16
mov
add
dec
pop
rcr
xchg
sub
pushf
or
aam
sub
mov
mov
ret
mov
cmp
fstps
push
or
cli
or
jp
fidivl
jo
xor
or
mov
jb
mov
pop
dec
lods
or
fistpl
xchg
fmull
dec
fistpl
xor
mov
mov
pop
das
fwait
adc
xor
cwtl
outsb
mov
and
push
add
cmpsb
sbbb
cwtl
and
mov
insb
ds
dec
or
mov
cmp
jnp
repz
mov
std
dec
repnz
push
aam
outsl
dec
add
adc
lret
sahf
test
in
mov
add
and
arpl
pop
cld
xlat
xor
adc
js
ret
mov
data16
enter
mov
lds
inc
xor
arpl
ds
push
xchg
fcoml
pop
in
push
movsb
test
fisttpl
jg
or
pushf
cmpsl
iret
fistl
movsl
jbe
dec
clc
in
mov
imul
scas
jne
pop
out
idivb
pop
fdivs
shrl
sbb
fdivr
push
movsb
mov
scas
fsubs
andb
aas
xchg
adc
data16
adc
add
jp
sbb
mov
adc
data16
mov
ja
xchg
ficoml
daa
xchg
pop
push
inc
fs
xlat
pop
push
jbe
sub
mov
sbb
mov
mov
pop
aad
dec
dec
xchg
inc
aas
and
push
xorl
mov
sahf
in
push
xchg
xor
mov
divl
mov
loopne
in
sarl
jl
pop
push
mov
mov
or
mov
outsb
mov
mov
dec
fisubs
mov
imul
scas
les
adc
push
xor
lret
xor
add
inc
das
mov
outsl
stos
in
stos
iret
mov
sub
cmp
sbb
jne
mov
ljmp
outsb
add
push
out
add
pop
jne
inc
imul
aas
lret
and
movsb
jg
addr16
add
push
inc
ljmp
in
sub
popa
inc
iret
int3
add
das
inc
lcall
and
lret
inc
inc
out
inc
gs
pop
sub
decl
mov
mov
mov
dec
adc
fistl
jmp
clc
jne
push
jl
jnp
inc
int3
pop
ret
dec
mov
je
inc
pop
das
mov
or
xchg
xchg
inc
es
xchg
sub
call
dec
insb
data16
jbe
mov
andl
mov
jp
es
inc
test
push
jge
push
fsubrs
into
pop
notb
loope
sbb
clc
or
cmpsb
pop
adc
lahf
pop
int
pop
pop
std
popa
fimuls
sar
and
fildl
dec
outsl
mov
stc
subb
pop
lods
mov
add
inc
inc
jnp
push
adc
mov
imul
jecxz
cmp
daa
mov
ret
sbb
sbb
lods
lock
adc
je
pop
sbb
lods
arpl
fcoml
jmp
mov
test
nop
inc
mov
sbb
xor
int3
xor
mov
xor
or
lret
test
cmp
sub
cwtl
jge
popf
dec
dec
push
push
daa
repz
dec
inc
pop
dec
cmp
xor
add
jae
andl
xlat
mov
out
cs
jecxz
stos
jne
mov
sub
out
mov
insl
and
enter
sub
jbe
les
insl
sub
imul
inc
and
add
mov
cltd
idivl
pop
nop
jo
mulb
test
cmp
or
cld
scas
push
mov
mov
in
es
cltd
push
fldl
out
dec
inc
sub
jnp
ds
je
aas
js
ret
in
loopne
jns
jg
imull
inc
lods
mov
ret
sub
pop
jno
xor
and
add
jp
mov
adc
movsb
std
repnz
test
and
es
xor
add
popf
sub
movsb
or
lret
stc
test
pop
mov
das
mov
movsb
pop
mov
mov
and
lahf
adc
mov
nop
cmpsb
push
pusha
fst
imul
xor
jmp
leave
jb
hlt
icebp
xor
pop
call
push
cmp
loop
fsts
leave
test
jbe
dec
pop
std
daa
cli
sar
jbe
mov
xchg
sbb
outsb
call
sti
shlb
push
fnsave
cs
mov
clc
adc
adc
sub
and
cwtl
bound
add
fistl
dec
sub
lahf
loopne
pop
test
loopne
inc
xchg
imul
mov
dec
pop
jle
jns
jmp
cmp
or
mov
jo
mov
ret
loop
or
inc
es
repz
jnp
mov
xchg
popf
dec
xchg
jb
lds
repnz
insl
in
cmpsb
data16
ja
push
add
mov
in
aam
inc
mov
mov
popf
pop
and
xlat
test
adc
popa
repnz
fsubs
mov
sbb
outsl
popa
repnz
iret
and
add
and
xchg
and
push
fiaddl
insb
inc
jge
ja
adc
mov
and
lea
xchg
js
sub
pushl
cmpsb
cmpsl
andb
in
adc
add
ret
add
clc
cld
int3
mov
rol
pop
gs
add
dec
repnz
aam
jns
leave
fisubrl
or
sbb
jl
lods
sub
push
mull
in
mov
out
insl
xchg
jno
pop
xchg
dec
iret
aaa
add
sub
mov
mov
and
idivl
cli
loope
dec
jl
faddl
cs
in
push
sahf
insl
mov
and
pusha
cmp
sbb
dec
sbb
popf
icebp
rolb
dec
push
push
xor
and
js
jns
addr16
pop
ficompl
add
ds
push
xchg
fucomi
mov
pushl
sbb
mov
pop
jg
dec
mov
hlt
data16
xchg
leave
or
xchg
pop
ljmp
lods
clc
aaa
test
mov
mov
mov
stos
push
push
xor
sbb
xor
test
mov
sbb
clc
imul
pop
stc
jbe
sub
pop
sub
in
cs
movsb
aad
sub
sub
aas
pop
in
mov
aaa
pusha
fisttpl
jno
jle
push
dec
stos
mov
adc
add
jb
push
push
enter
cmp
test
cmc
push
inc
outsl
in
rol
sbb
dec
xorb
xchg
pop
enter
or
cmpsb
xchg
xor
stos
sub
inc
push
mov
cld
cmp
test
insb
les
pop
aaa
daa
pop
add
pusha
pushf
jecxz
jecxz
sti
scas
adc
das
or
mov
or
jp
mov
jne
mov
sub
adc
loopne
jmp
dec
fidivs
pop
add
dec
mov
sbb
mov
mov
sub
cltd
xchg
jmp
mov
scas
imul
mov
scas
cmp
pushf
ljmp
js
push
xor
push
std
inc
fbld
jmp
inc
inc
in
cli
ja
jecxz
leave
jo
inc
inc
cwtl
cmp
ret
xor
fsubrp
ljmp
and
loop
push
dec
sub
pop
cs
in
jnp
sbb
je
xor
jg
fiaddl
inc
sub
adc
stos
xchg
jbe
sbb
into
sbb
add
lods
push
lretw
fdiv
xlat
sub
add
fstpt
pop
mov
fs
add
in
adc
aas
and
jnp
pop
pop
scas
pop
and
pop
add
rcrb
mov
je
inc
ret
fstps
xor
ret
push
in
jmp
imul
pop
outsl
mov
pop
scas
clc
stos
test
scas
cmp
add
push
jmp
adc
xor
pop
mov
js
push
or
inc
push
gs
ss
push
jnp
xchg
fnstenv
mov
test
adc
in
xchg
mov
cmp
fxtract
and
scas
lcall
pop
push
jp
and
roll
sbb
xor
sbb
xchg
mov
or
les
sub
iret
das
adc
mov
push
adc
cli
and
aaa
mov
add
sbb
popa
jno
fs
adc
cmp
jno
xlat
sti
push
fdiv
mov
push
ja
mov
mov
push
shll
insl
xchg
xchg
pop
movl
daa
sti
jns
push
jo
pop
aad
dec
cwtl
xor
push
and
or
lock
mov
mov
pop
and
out
ficoms
xor
inc
fdivrp
push
mov
in
xor
pop
out
loopne
mov
cmp
mov
enter
bound
loope
pop
dec
pop
int3
sub
scas
push
lea
cmpsb
add
test
xor
mov
enter
aaa
shlb
or
sbb
adc
mov
cmp
pusha
push
sub
pop
in
outsl
sbb
xchg
mov
push
mov
push
sti
sub
inc
push
push
and
lret
or
insb
jns
ficomps
aad
jle
mov
xchg
inc
sbb
imul
mov
mov
iret
jb
ss
cmpsb
fs
sbb
lds
adc
testl
push
outsb
mov
fsubrs
fdivrs
dec
jl
mov
mov
or
or
in
ret
xorb
rorb
adc
dec
bnd
imul
jle
add
fcoms
jb
ljmp
inc
daa
push
pop
insb
pop
cld
jo
jecxz
test
in
jo
pop
scas
cld
lea
pusha
or
inc
pop
xchg
push
mov
xchg
cmp
jmp
shlb
xor
pop
add
sahf
sti
clc
stos
add
xchg
or
jo
movl
lahf
lea
mov
or
loopne
lds
pop
jb
inc
sub
push
cmp
xor
pop
outsl
pop
sbb
pop
scas
pop
pop
mov
and
in
icebp
std
cmp
fdivrl
out
clc
adc
pop
andl
pop
das
insb
outsl
sbb
dec
stc
mov
add
or
aad
or
in
sbb
int
adc
in
push
jmp
push
pop
mov
fcmovnbe
or
jmp
lcall
xor
rorl
hlt
test
add
out
cmpsb
lock
insb
push
push
addps
xchg
or
stos
xchg
jno
mov
sahf
pop
xchg
test
mov
stc
sbb
dec
mov
rclb
jle
mov
and
adc
ret
xor
addr16
xchg
into
aaa
xlat
fnsave
stos
sbb
dec
adc
sar
repz
mov
push
outsl
call
or
and
dec
or
mov
cmp
cmp
xor
lods
pop
aad
inc
data16
dec
lea
pop
movsl
inc
outsl
dec
push
mov
fistl
data16
scas
jmp
push
sti
inc
daa
xor
in
gs
xchg
orb
stc
jae
dec
fiadds
mov
lcall
mov
imul
push
adc
testb
sbb
jno
add
cmpsl
aam
jecxz
das
xor
sbb
xchg
shll
repz
dec
pop
icebp
dec
fstps
sbbl
adc
mov
call
mov
out
sub
push
in
pushf
in
stos
xchg
inc
dec
je
hlt
mov
int3
adc
out
mov
jl
xlat
push
lods
sbb
xchg
and
jae
leave
outsb
push
xor
stc
cmpsl
mov
add
mov
cld
enter
bound
mov
adc
cmpl
arpl
mov
ljmpw
and
idivb
sub
mov
dec
mov
push
add
lock
std
sub
adc
fcmovu
push
fwait
add
push
nop
subb
movsb
xor
dec
clc
ficoml
sub
notb
rorb
jne
or
adc
inc
outsl
push
loop
mov
aas
sub
jb
cmpsl
aam
cli
cmp
jno
adc
sub
leave
xchg
add
and
jbe
push
cld
pop
xor
mov
ror
jge
mov
ljmp
popa
sub
dec
push
push
lock
cli
dec
lret
mul
inc
imul
in
bound
mov
mov
aad
mov
popa
fisttpll
xchg
test
cmpb
aas
and
sti
pop
pop
cmc
pop
mov
nop
xchg
fistpl
cmp
lds
and
pop
adc
inc
imul
inc
cld
xchg
gs
jecxz
cli
imul
push
mov
subb
inc
ret
jo
pcmpeqd
and
imul
xor
sbb
shll
stc
sub
adc
xchg
ret
movsb
sub
or
mov
pop
and
mov
repz
push
popf
lret
call
xchg
rolb
popa
xchg
std
clc
inc
addb
jbe
aad
fmuls
xor
test
xor
lock
icebp
adc
mov
mov
imul
sbb
push
in
ss
jae
decl
mov
test
mov
stos
je
cmp
push
push
jge
jno
shrb
mov
mov
xlat
loope
mov
in
mov
aam
roll
mov
repnz
pop
push
mov
jne
and
adc
outsl
add
aas
push
loop
xchg
into
call
fstpt
cmc
xorb
bound
sub
jmp
aaa
lock
addr16
jns
loopne
pusha
ret
lcall
dec
xor
les
add
pop
in
roll
adc
sbb
xchg
inc
add
jns
lods
jge
fs
es
aas
mov
test
out
test
imul
pop
add
add
dec
nop
pop
fbld
loop
xor
sbbl
jns
jge
aam
inc
mov
loop
lds
les
outsb
sub
push
cmp
dec
or
xchg
sub
jl
mov
lods
in
loopne
mov
sub
cmc
lret
out
stc
push
outsb
ja
idivl
pushf
lcall
dec
test
push
mov
dec
movsb
dec
icebp
lock
adc
sbb
in
mov
xor
mov
inc
mov
sub
call
ljmp
mov
push
mov
push
push
inc
mov
and
pop
movsb
mov
lods
mov
pop
mov
cltd
mov
push
pop
add
mov
pusha
insl
orl
mov
xchg
cltd
mov
mov
pop
fdivrl
add
pop
mov
cmp
jae
sub
shl
mov
lcall
fcompl
lods
fbld
ret
cmc
sbb
mov
cli
imul
addb
jbe
scas
and
inc
sub
iret
outsb
sub
or
fists
cmc
andb
xchg
shrb
jb
push
push
loopne
inc
dec
ret
mov
and
gs
stos
xor
div
push
push
jecxz
ds
in
lods
dec
mov
inc
js
xchg
shrb
cld
jge
movsb
or
sbb
cmp
jp
dec
add
ss
pop
test
daa
sub
leave
mov
pop
jns
cmpsb
mov
shrl
and
out
mov
push
add
add
aaa
std
xor
mov
popa
les
xchg
inc
insb
movsl
rorl
adc
dec
push
pusha
push
sub
iret
mull
or
inc
sub
loope
fwait
int3
pop
scas
cmp
adc
mov
es
xor
or
push
lock
arpl
xor
test
nop
cmp
enter
addr16
jmp
inc
and
aam
pop
inc
cmp
fsubl
lock
sub
addb
jmp
btr
nop
pop
lea
add
jecxz
mov
pushf
idivl
andb
or
test
jge
mov
out
or
push
pop
and
xchg
dec
mov
cmpsl
repz
jns
push
cmp
add
divb
stos
push
xchg
popl
cwtl
iret
push
inc
enter
je
cs
aam
fdivl
in
fsubr
inc
mov
inc
icebp
xor
mov
push
test
js
test
pop
fsubp
fstpl
std
cmp
adc
shll
push
enter
mov
push
pop
mov
bound
es
pop
scas
ret
push
gs
les
adc
sub
fwait
movsb
xchg
sub
loopne
nop
sub
js
fwait
mov
xchg
dec
mov
inc
jl
dec
mov
mov
cmpsb
pusha
cmp
push
iret
insb
sbb
sti
cmc
jae
inc
ds
shr
xchg
test
jbe
add
loopne
mov
lret
bound
pop
je
lret
cmpsl
sbb
cli
inc
insl
call
add
lcall
aaa
test
cmp
popf
inc
and
mov
int3
popf
popf
push
sub
ds
push
dec
add
pop
popl
cmp
pushf
ds
push
cmp
loop
nop
dec
xchg
and
test
mov
adc
sub
andb
andb
cmc
mov
jo
imul
leave
out
xchg
arpl
xchg
pop
ret
int3
cwtl
xchg
mov
int
scas
mov
inc
jno
aad
adc
mov
rep
cld
daa
adc
xchg
outsl
ja
jp
test
and
inc
mov
aaa
scas
imul
cltd
cs
xchg
test
xchg
inc
int
cwtl
sbb
jl
subl
push
add
xlat
fisttpll
xchg
shl
cwtl
adc
pop
mov
xchg
imul
mov
cmp
lcall
xor
or
inc
xor
cwtl
jb
inc
fimuls
stos
mov
ljmp
stos
popf
in
ljmp
pop
inc
nop
fdivs
xchg
jl
xchg
xchg
pop
ret
loope
movsl
dec
xchg
xchg
lahf
xchg
inc
jle
or
mov
pop
imul
pop
mov
jno
mov
lods
add
mov
mov
shrb
call
fcmovnbe
int
les
movsl
pop
stos
cmp
pushf
xchg
cmp
inc
fimuls
ret
adc
push
mov
xlat
cltd
pusha
in
mov
cmp
jecxz
sub
jbe
repnz
pop
cmp
mov
rolb
pushf
sub
loope
or
add
gs
adc
and
mov
test
cli
ds
dec
fcmove
lahf
ja
test
idiv
cmp
mov
js
mov
mov
inc
je
lods
pop
cmpsl
mov
dec
pop
pop
and
stos
dec
dec
hlt
inc
jecxz
loopne
adc
scas
jecxz
add
mov
test
arpl
out
dec
lret
push
dec
mov
ret
rcrb
jmp
cmp
int
cmp
inc
pop
enter
addr16
xor
out
mov
test
cmp
mov
and
sbb
clc
andb
popa
sbb
mov
or
or
inc
enter
xor
push
scas
nop
inc
fs
sub
jno
nop
aas
data16
mov
xchg
inc
in
call
dec
inc
pop
push
stos
sahf
vpsrlw
arpl
lret
dec
pop
jns
mov
dec
mov
lock
inc
out
repz
inc
jae
fs
and
repz
xor
xchg
out
xor
in
add
mov
test
adc
sub
stos
sub
movsb
in
and
movsb
mov
add
and
cmpsl
xor
xchg
jp
aad
in
push
and
and
push
fsubrl
dec
imul
not
sbb
sub
jle
dec
mov
inc
aaa
rolb
enter
or
out
adc
inc
push
test
jmp
mov
cld
adc
test
adc
out
lods
jecxz
push
cmp
and
lcall
push
pop
inc
xor
mov
xor
push
lcall
rcl
adc
lret
movb
test
inc
out
imul
call
aaa
cmpsl
mov
movsb
cltd
sar
scas
scas
jg
adc
rclb
shl
add
push
lock
pop
lds
sahf
push
mov
ja
cmp
test
push
or
or
sub
enter
repnz
in
cmpsb
push
lds
inc
mov
or
jno
pop
mov
loop
js
pop
popf
inc
cmp
xchg
cmp
dec
jp
and
pop
inc
dec
cmpsl
push
jne
push
outsb
imul
aam
adc
stos
xchg
sti
jp
nop
mov
test
fcoms
rorb
scas
scas
and
es
loope
push
inc
pop
std
pop
int
xor
xchg
gs
or
push
dec
dec
inc
push
pop
nop
xor
push
inc
pop
inc
push
or
repnz
cmp
jbe
movsb
xor
rep
test
aaa
hlt
adc
xor
mov
cwtl
mov
rcll
into
jl
ret
sbb
or
out
inc
xchg
mov
data16
loop
pop
add
mov
idivl
test
xchg
je
add
loopne
icebp
mov
les
shrl
jg
add
lahf
jp
inc
cmpsb
sti
add
or
xchg
xor
push
lret
mov
jge
mul
pop
jnp
hlt
mov
xchg
cli
dec
xlat
in
push
jmp
daa
mov
dec
push
push
bound
sub
xor
nop
pop
rcl
jae
mov
sar
in
imul
mov
cmpsb
lods
cmc
or
mov
js
in
adc
lcall
aaa
push
jbe
movsb
test
dec
and
addr16
fwait
negb
inc
dec
inc
and
xor
loope
mov
cmp
inc
fucomip
and
inc
lods
jg
xchg
push
sbb
das
test
mov
cltd
mov
dec
jmp
pusha
scas
add
push
inc
out
test
xor
repnz
and
jne
pop
cmp
stos
jns
cmp
adcb
xchg
jno
fimuls
fs
mov
jmp
cmp
mov
jae
jae
loope
sbb
mov
pop
dec
fimuls
jecxz
jne
pop
stc
pop
push
xchg
stos
jecxz
cld
out
ljmp
ret
add
daa
outsb
push
push
lret
jns
xchg
pop
jge
pop
fistps
stc
aaa
jl
stos
popf
repnz
dec
sbb
or
add
int
scas
enter
test
and
sub
mov
orb
das
ljmp
sub
dec
add
nop
pop
mov
mov
push
jg
sti
mov
mov
and
jnp
or
xchg
push
jbe
mov
cmc
or
nop
pop
xlat
cld
add
xchg
xor
jl
cs
cmp
or
aad
or
rep
xchg
cmp
pop
ret
push
in
jno
mov
cwtl
in
fcoml
das
sub
shrb
fwait
repnz
inc
dec
cmpsb
push
pop
pop
scas
pop
cmp
int
jmp
nop
cmp
xchg
push
inc
xor
test
fs
bound
jge
fwait
and
loopne
faddp
inc
fdivs
lea
cmp
stos
icebp
sbb
jg
mov
ljmp
pop
mov
adcl
xor
inc
sub
xchg
mov
sahf
enter
adc
jae
negl
stc
test
test
adc
push
sub
pop
cld
aaa
push
inc
sbb
mov
in
jb
into
in
bound
push
push
test
scas
call
repz
fs
movsb
push
std
in
sbb
add
fwait
dec
cmp
roll
jb
dec
pop
xlat
cmp
pop
xchg
and
dec
push
mov
xchg
mov
or
dec
xor
fistpll
pop
pop
xchg
xchg
dec
mov
dec
push
mov
call
mov
gs
inc
shr
sti
xor
mov
jg
mov
mov
jg
jno
sub
loopne
and
mov
ds
xor
sahf
push
mov
fdivl
testb
enter
xor
arpl
xchg
sub
fdiv
cwtl
push
dec
pop
push
sbb
dec
sub
jge
popl
mov
or
enter
lea
mov
pop
rorl
or
mov
sub
mov
dec
mov
or
jbe
dec
mov
in
fwait
jns
push
pop
aas
loope
mov
or
jne
push
jae
mov
sub
icebp
arpl
je
mov
cmp
mov
fistpl
sti
or
into
idivb
mov
mov
inc
inc
repz
inc
gs
jae
cwtl
or
es
jle
pop
daa
cld
mov
cmc
negb
dec
ret
mov
xor
xor
pop
adc
lret
pusha
les
imul
jg
inc
cmp
sub
gs
jge
hlt
outsl
push
push
cmp
lahf
or
leave
xor
cmp
popf
jle
sub
add
xchg
xor
or
loop
js
pop
pusha
mov
sub
aad
mov
mov
mov
fiaddl
loopne
sub
andl
mov
imul
push
pop
sub
aad
jne
xor
nop
int3
clc
mov
ficomps
inc
jle
xchg
ret
lods
test
mov
jg
cld
repz
lret
xlat
negb
rcrl
jne
out
bound
mov
imul
push
pop
add
jnp
loopne
stos
mov
shl
dec
cmp
mov
inc
xlat
test
sub
dec
iret
xchg
or
sbb
test
test
fs
icebp
xchg
mov
scas
jbe
sarl
and
lea
mov
xchg
mov
add
jmp
jg
lock
mov
inc
js
sbb
in
and
xchg
add
shl
out
ss
lcall
push
jecxz
push
sub
cs
or
cmp
add
out
daa
jmp
pop
dec
mov
in
jae
jle
insl
pop
enter
adc
lods
adc
add
xlat
imul
scas
fs
sbb
das
inc
addl
mov
cmp
add
pop
add
sbb
enter
into
cmp
cmp
movsl
and
movl
in
jg
pop
add
cwtl
dec
dec
loopne
jne
xor
jns
fwait
cmp
xchg
push
and
add
jno
jo
jle
out
test
jmp
ljmp
int
mov
sub
xor
lret
jmp
sub
sub
push
sbb
mov
sbb
fs
or
aas
mov
inc
rorb
mov
jl
xchg
xchg
cmp
jecxz
jb
lahf
inc
repnz
leave
mov
andl
ja
fnstsw
out
out
imul
dec
nop
sbb
lret
cmp
cmp
lods
popf
int
sub
lods
xchg
dec
lods
scas
xchg
cmp
rorl
loop
add
je
in
enter
clc
mov
jg
push
push
sub
pushf
pop
mov
jl
test
jb
dec
pop
aas
sub
and
push
sbb
xor
push
fstp
imulb
call
lods
pop
jne
add
movsl
push
jae
push
mov
mov
pop
jno
pop
mov
dec
mov
adc
mov
mov
fdivr
xchg
sahf
ljmp
pop
cmp
or
xor
adc
add
jo
fwait
aam
push
mov
imul
mov
dec
out
jmp
ja
add
mov
fcoms
fsub
addr16
add
jno
push
cmp
out
addr16
cmp
sbb
cmpsb
lret
sub
repnz
push
in
sbb
mov
and
jns
mov
out
mov
mov
sub
xchg
cmc
fisttpll
sub
cs
ja
push
cmc
test
jae
and
sbb
enter
or
cltd
mov
scas
jge
fprem
inc
adc
mov
ja
xchg
push
cli
outsb
or
and
sbb
out
adc
sti
cli
mov
leave
es
movsl
call
mov
popf
cmp
and
xchg
push
movsl
fisubl
mov
bound
out
sub
out
shl
inc
jbe
xchg
aam
rorl
es
inc
out
adc
dec
jmp
cmp
mov
adc
push
popa
cmc
ds
nop
and
mov
int3
lods
adc
scas
pop
inc
adc
jp
dec
fcomi
pop
sarb
jne
push
imul
scas
fsubr
adc
inc
jle
fwait
mov
push
adc
dec
enter
in
jns
adc
clc
into
leave
dec
stos
outsl
fisttpl
pop
xchg
subb
adc
pop
dec
mov
aad
xchg
push
out
int
dec
repnz
hlt
xlat
movsl
mov
shrl
cmpsb
mov
sbb
inc
fistps
lret
jne
ret
pop
stc
push
add
js
ret
mov
pop
cs
add
jae
pop
adc
popa
lcall
mov
dec
jl
ret
add
test
fisubrl
push
or
loop
add
sti
movsb
mov
ljmp
pop
lcall
push
fdivrs
jle
adc
xor
sub
lea
cltd
adc
lods
push
jmp
into
test
cli
mov
inc
sub
xor
and
mov
rcrl
mov
sub
cmc
pop
xchg
pop
pop
mov
flds
mov
aaa
sub
movsl
jmp
or
sbb
rclb
adc
test
jecxz
push
or
sbb
fstps
jecxz
xchg
fs
sahf
push
lcall
pop
mov
push
out
or
lock
mov
mov
or
sbb
roll
loopne
test
mov
mov
add
mov
push
add
ljmp
xchg
sbb
sbb
int3
add
xchg
xor
or
std
inc
orb
sbbb
addb
pop
and
pop
popa
aam
ja
jle
xchg
test
xor
and
dec
dec
fldt
lock
cmp
or
lret
lcall
inc
fs
and
inc
enter
daa
xchg
pop
mov
sbb
and
jl
or
push
lret
stc
and
mov
dec
loope
leave
lods
sbb
adc
xchg
inc
and
rcrl
dec
int3
in
hlt
out
sub
orl
mov
push
xchg
shl
sbbl
lret
das
fsubrl
xchg
lret
imul
jecxz
push
sar
mov
lods
cmc
aad
fdivp
adc
pop
cmp
rolb
adc
mov
push
sbb
arpl
jo
cli
dec
rorb
jl
rcr
pop
aam
aaa
dec
mov
inc
xchg
mov
jmp
pop
sub
cmp
add
or
pop
mov
cmp
dec
fcomp
xchg
popa
add
out
loopne
add
jnp
into
mov
push
jae
push
out
jae
lahf
or
pop
xor
testl
test
cli
hlt
fstpt
jl
lds
cmp
movsl
jmp
int
fisttps
sub
push
lds
and
xchg
sbb
add
outsb
sbb
xchg
xor
movsl
in
mov
xor
loopne
adcl
pop
outsb
xor
push
adc
ficoml
mov
pop
or
daa
adc
aad
push
pop
mov
adc
les
lcall
add
int
pushf
mov
sub
sub
inc
aaa
cmc
xor
fistpl
dec
push
push
ljmp
sbb
cwtl
fidivrl
or
cmp
ficoml
movsb
add
test
repnz
mov
pushl
adcl
push
cmpl
or
stos
scas
in
cmp
xor
cwtl
inc
cwtl
and
repnz
in
pop
iret
adc
push
pop
outsb
test
dec
subb
adc
cmp
add
popf
sbb
inc
jb
iret
lcall
call
inc
lret
call
lock
jle
mov
pop
in
ja
dec
mov
mov
xor
inc
imull
insl
push
push
jecxz
fbstp
mov
xor
in
enter
fbstp
repnz
pop
push
dec
lahf
out
cmp
sbb
cs
rcrb
enter
and
and
sub
insl
dec
add
jno
add
jno
push
fldcw
push
shll
sti
jmp
cmpsl
and
sub
mov
jo
sti
mov
and
mov
fwait
and
and
mov
push
mov
ljmp
sbb
fsubs
les
ja
rclb
rcll
and
mov
sub
mov
push
cmp
sbb
cmp
test
cmp
jbe
pushf
cs
and
loope
rolb
sbb
in
or
xor
adc
lret
inc
inc
fwait
sahf
loopne
push
sahf
adc
in
cmp
aaa
cs
cmpsb
sub
mov
jae
out
jne
mov
mov
lahf
pop
inc
test
xor
xor
lcall
dec
dec
add
mov
je
test
mov
icebp
xchg
sahf
inc
fwait
xor
mov
xchg
jecxz
jo
mov
mov
adc
mov
mov
lock
push
cmp
cwtl
std
nop
clc
insl
lcall
scas
inc
loope
xor
adc
sbb
and
aaa
add
push
gs
pop
mov
add
popa
fwait
aaa
aad
movsb
mov
or
and
pop
dec
test
inc
dec
flds
pop
not
cs
jle
cltd
popa
jge
add
iret
jbe
cmp
loop
lods
push
xor
mov
push
add
xor
notl
pusha
mov
fcom
lea
dec
adc
rorl
scas
jecxz
cmp
mov
jge
mov
push
rclb
imul
and
test
pop
or
jle
mov
xchg
bound
mov
nop
mov
push
adc
jbe
pop
sbb
push
test
cmp
mov
or
or
cmp
dec
cmpsb
mov
loop
je
sarb
lds
popa
gs
lahf
and
inc
push
push
xor
xor
mov
add
rolb
gs
stos
jge
push
dec
shlb
adc
mov
jnp
pop
int3
es
stos
les
cmc
cld
out
jns
mov
insb
adc
adc
aas
mov
lahf
add
dec
mov
loopne
aas
xchg
xchg
iret
or
sbb
iret
jbe
mov
jns
mov
daa
test
pop
ljmp
sarb
shrl
push
or
inc
stos
add
adc
xchg
cmp
stc
inc
mov
add
jae
gs
mov
mov
inc
add
mov
adc
xchg
ss
hlt
xor
mov
hlt
out
add
rorl
adc
out
pop
hlt
ss
les
sub
iret
and
or
mov
jmp
inc
lret
wbinvd
mov
loope
xchg
xchg
icebp
xchg
jno
repnz
pop
and
daa
mov
mov
mov
or
or
xor
fcoml
imul
inc
in
popa
jp
in
sub
jo
fisttpll
test
xlat
jecxz
mov
sbbb
rcl
sbbb
adc
mov
stc
or
mov
mov
hlt
leavew
sub
push
fs
lds
mov
stos
out
add
shll
mov
mov
add
push
pop
mov
add
adc
scas
jle
and
push
add
loope
push
fdivrl
hlt
mov
shll
in
adc
roll
in
jle
int3
xor
sub
inc
add
cmpsb
aaa
stos
mov
enter
push
fsubr
mov
test
mov
xchg
xor
sub
xchg
cmc
repz
xchg
sbb
xor
pop
xchg
scas
lds
pop
lea
call
xchg
xchg
mov
pop
xchg
in
cmp
mov
push
push
popf
scas
and
addb
xchg
test
jb
mov
pop
cli
adc
lcall
sti
aad
cmc
mov
lahf
shrl
xor
push
icebp
lds
and
sarb
icebp
mov
cmpsl
mov
jbe
pop
aas
jae
lods
ja
jg
loopne
mov
cmp
outsb
mov
int3
xor
pop
push
sarl
xchg
js
xor
and
push
xchg
idiv
push
pop
inc
push
lea
repz
mov
mov
mov
mov
fstps
outsl
pop
fisubrl
mov
or
loopne
cmpsb
mov
stos
and
movsl
adc
or
xchg
scas
ja
push
lods
sti
cmp
jns
jne
mul
pop
out
loop
aam
rep
aam
outsb
adc
out
xchg
jecxz
sbb
pusha
cmpb
leave
jne
fisubrs
add
dec
pop
pushf
jbe
dec
xchg
mov
mov
jge
adc
cs
pop
out
repnz
bound
icebp
dec
and
lods
add
icebp
jmp
jb
shrl
rcl
scas
pop
repnz
aad
loopne
inc
out
dec
roll
add
mov
cmp
xchg
fs
rclb
aad
dec
imul
mov
mov
jne
mov
shlb
jmp
cltd
enter
add
cli
mov
jmp
and
cmp
sbb
sub
sub
bound
in
push
inc
add
dec
test
jp
dec
and
mov
scas
lahf
clc
dec
sub
pop
fmuls
fs
and
fdivr
sbbb
cmp
or
outsl
push
pop
int3
mov
xor
data16
pop
pop
cmp
adc
sub
cli
out
sahf
xchg
fcomps
sbb
cmp
aad
jle
lods
iret
jecxz
es
or
les
gs
dec
cmp
push
lea
xchg
inc
inc
mull
into
xchg
fidivs
jmp
cwtl
mov
mov
push
fsubl
mov
fs
sub
sub
sub
cmpsb
fiadds
inc
enter
setae
sbb
jae
lret
sbb
cs
sbb
loopne
xchg
cmp
cs
hlt
pop
jnp
cwtl
mov
pop
mov
stos
out
pop
push
incb
mov
outsb
repnz
cwtl
push
stc
mov
cmpsl
mov
xchg
sub
pop
pop
fstp
push
jne
jns
inc
xorl
xor
mov
and
sbb
fldpi
leave
arpl
je
jae
js
les
stos
inc
dec
ja
adc
push
and
mov
movsl
sbb
je
cld
adcb
mov
pop
pop
jns
scas
sub
xchg
mov
add
cmp
fnstenv
sti
add
fwait
aad
inc
jg
jae
add
cmpsb
addr16
mov
jle
or
rep
jnp
addl
mov
fnstenv
imul
rcrl
test
arpl
inc
mov
xchg
push
cmpsb
out
std
xchg
jmp
stos
out
sub
fmull
outsb
ja
push
das
scas
pop
pop
js
sbb
leave
cmp
push
stos
lds
xchg
mov
outsl
shrl
and
arpl
mov
pop
fisubs
jno
icebp
loope
and
inc
sbb
stos
andl
loopne
sti
push
cld
jecxz
aas
fs
stos
popf
add
out
ds
mov
addr16
xor
sbb
nop
stc
push
cmp
sub
xchg
inc
adc
jae
outsl
out
and
mov
and
test
sub
in
adc
jg
sbbb
cmp
pop
fsubr
lcall
mov
or
push
mov
mov
nop
mov
and
adcb
jp
jb
test
mov
jecxz
sbb
insl
sbb
adc
sbb
pop
ds
sbb
cmp
gs
pop
lret
inc
sbb
pop
stos
mov
push
and
xor
cmpsb
mov
mov
popa
ljmp
mov
ja
sbb
insb
and
call
nop
call
cmpsl
test
and
mov
sub
sbb
leave
aaa
jns
add
and
cmp
mov
add
sbb
into
out
add
lock
and
jbe
xchg
jecxz
sbb
pop
cmp
call
inc
dec
cld
fwait
out
int3
dec
das
loop
cld
cmpsl
addr16
daa
pop
push
xchg
imul
xor
pop
mov
mov
scas
adc
scas
loop
shr
aas
hlt
pop
movsl
add
out
inc
arpl
stc
pop
ret
add
ss
mov
mov
addr16
fcoms
fld1
mov
lock
nop
frndint
lahf
je
icebp
pop
mov
scas
mov
or
fidivrs
jmp
rclb
lret
ljmp
jnp
test
add
or
push
lods
mov
push
xor
mov
adc
sbbl
aaa
lcall
xchg
xor
popa
mov
mov
mov
repz
iret
mov
scas
cld
xor
neg
sar
mov
pop
outsb
cli
mov
mov
shr
movsb
cmp
inc
pop
push
mov
roll
add
repnz
mov
cs
stos
mov
push
mov
lret
xor
jae
pop
ja
mov
cmc
hlt
and
push
pop
ret
push
shl
cmp
hlt
xor
push
inc
lcall
data16
rorl
repnz
mov
mov
jb
in
cmpsb
fnstenv
push
dec
nop
mov
mov
mov
scas
fdiv
jmp
cmpsl
loopne
sbb
pop
push
mov
cmp
rcrl
and
stc
jmp
jne
xchg
mov
stos
cmp
push
mov
jbe
cmp
repz
dec
sbb
mov
icebp
inc
cmp
out
loopne
push
dec
push
pusha
ljmp
clc
xlat
ds
or
or
sbb
and
push
jge
clc
enter
ljmp
orps
xor
aad
mov
ljmp
pop
mov
ret
jg
xorl
test
mov
outsb
jecxz
mov
or
sbb
xchg
lcall
inc
jne
inc
out
pop
pusha
push
lret
iret
pop
in
inc
jecxz
xchg
jo
xor
jnp
iret
outsl
imulb
outsl
or
or
arpl
inc
sbb
add
mov
lret
adc
enter
add
inc
fs
lock
or
xor
icebp
pushf
mov
mov
sub
filds
scas
test
stos
inc
bndstx
mov
xor
cmp
std
add
inc
or
mov
mov
loopne
rorl
lds
mov
rolb
mov
and
or
or
out
repnz
jle
pop
push
jecxz
scas
inc
lret
and
jbe
mov
out
sub
in
sbb
mov
aam
xor
inc
fldenv
sub
push
add
jnp
sbb
pop
inc
sub
lret
pop
movsl
jmp
xlat
or
inc
std
mov
mov
jbe
sti
dec
pushf
hlt
stos
push
mov
shr
outsl
push
loop
icebp
out
je
fldt
imul
sbb
xor
loope
xchg
pop
out
rol
test
and
dec
sbb
out
insl
jo
rolb
jecxz
sbb
jns
pop
sbb
into
pushl
jmp
mov
mov
cmpsb
fcoml
unpckhps
movsb
xchg
test
add
lock
loope
inc
mov
popa
lret
and
ficoms
gs
test
sub
mov
cmc
jecxz
inc
arpl
test
mov
dec
fidivrs
fcmovnbe
dec
lcall
dec
lods
addr16
fnstcw
sub
movsl
das
imul
fdivrs
dec
out
cmp
xchg
enter
sub
sti
scas
xchg
fstl
js
cmp
out
pop
jle
xor
in
mov
pop
popa
iret
out
jb
mov
pop
cmp
shll
mov
adc
jle
push
rorb
jg
sub
sbb
inc
aas
push
sbb
insl
ljmp
lahf
jns
outsl
jg
cmp
xchg
mov
dec
and
outsb
dec
sti
cmp
rclb
leave
enter
mov
int
mov
mov
cmc
sahf
inc
loope
fstps
mov
rcll
cmp
or
outsb
add
jo
add
mov
ficompl
cmpsb
inc
in
stos
sub
dec
push
and
mov
mov
cmp
mov
pop
pop
jbe
xchg
movsb
fidivrs
in
pop
shl
loopne
out
in
repz
cmc
cmp
or
je,pn
stos
imul
add
push
fnstenv
mov
ficoms
mov
int
inc
aam
mov
add
and
out
fistpll
cmpsl
add
iret
in
mov
call
cld
stos
je
lods
pop
movsb
pop
cmp
jg
out
out
xor
xchg
leave
inc
enter
lahf
or
jmp
out
sub
mov
push
shlb
nop
shrb
cmpxchg
sub
xchg
mov
movsb
sbb
scas
fcos
roll
sbb
loop
in
cmp
add
xchg
pusha
cmp
dec
xchg
jnp
push
sbb
xorl
push
push
repz
in
push
stc
pop
sahf
pop
push
leave
loopne
add
icebp
mov
sti
insb
in
adc
sub
ds
xor
pop
iret
push
inc
fisubs
inc
call
inc
insl
push
iret
push
mov
notb
mov
mov
dec
lds
stos
shll
mov
dec
lret
push
sbb
scas
cmp
jne
mov
cmp
scas
or
pusha
fisttpl
adc
in
lds
shl
lea
shrl
cmp
mov
adc
xchg
jno
xchg
outsl
inc
fsubl
fisubrs
and
and
fimull
pop
dec
xchg
mov
lock
cmp
cli
inc
and
push
addl
lcall
cmp
ss
gs
out
pop
insl
mov
push
adc
mov
jp
lret
std
out
cli
add
jne
lret
rol
xchg
push
sahf
mov
mov
xchg
out
dec
stos
push
sub
je
xchg
adc
mov
pop
js
sbb
adc
inc
aam
es
adc
cmp
inc
xlat
loope
cmp
xor
js
mov
adc
jge
aas
pop
addr16
push
rcl
dec
stos
sub
dec
jp
bound
shlb
and
mov
repnz
pop
push
dec
mov
jmp
xchg
pushf
xchg
mov
xor
insb
out
fisttps
jg
push
repnz
jne
rorl
or
push
sbb
roll
shrb
xchg
mov
add
ret
xor
mov
mov
scas
mov
mov
mov
jge
stc
ja
repz
aas
pop
sti
sub
cltd
fwait
cmp
xchg
pop
or
rcrb
dec
xchg
push
pop
loop
lret
and
cmpsl
cld
in
test
ljmp
insl
sub
mov
out
cmp
lods
push
add
mov
int3
icebp
aas
notl
nop
es
jae
fucomp
cwtl
repz
or
ds
in
jns
lret
lahf
pop
mov
cmpsl
mov
mov
icebp
adc
mov
movsl
idivl
or
mov
jne
roll
mov
or
pop
sub
in
fsubr
xadd
pop
bound
fs
test
dec
mov
cmp
jbe
popa
bound
mov
pushf
add
in
sbb
pop
xchg
movl
fwait
jae
leave
enter
jo
inc
sub
xor
jmp
jb
stos
mov
add
cmp
mov
push
fucom
pop
dec
mov
out
fistl
xchg
sub
or
inc
outsl
insb
jle
scas
sub
push
and
jle
stc
inc
inc
mov
cltd
add
jo
pop
add
popa
sbb
insl
adc
xor
xchg
test
iret
add
mov
dec
loopne
push
xchg
xor
push
rcrl
push
sbb
cwtl
mov
roll
add
bound
jl
push
add
pop
add
dec
sub
out
mov
xchg
push
mov
daa
mov
call
imul
add
inc
sarl
mov
test
add
out
das
cs
jbe
push
cmpsl
lret
dec
gs
lcall
mov
imulb
adc
cmp
add
scas
insl
lods
movsb
push
movsl
lds
mov
lcall
es
sub
in
cmp
popf
mov
inc
mov
div
sbb
cwtl
int
xorl
mov
pop
dec
daa
inc
mov
lock
cmp
jl
or
mov
jb
sub
mov
outsl
imul
jo
jecxz
sub
xchg
call
dec
insl
test
ss
cmpb
sub
mov
popf
adc
loope
lods
fcoml
mov
int3
enter
jns
cmp
data16
ds
ret
ljmp
xlat
mov
mov
call
loop
add
sti
sbb
int
test
adc
push
inc
imul
jle
subb
rcrl
loop
cltd
cli
jnp
and
fldenv
inc
sbb
mov
sub
mov
adc
out
xor
call
or
inc
outsb
mov
mov
movd
jbe
sbb
push
cmc
mov
cmp
jl
bound
push
dec
xor
hlt
pop
mov
jbe
rcr
ds
pop
add
aam
shlb
xlat
xor
push
outsb
push
sar
dec
sbb
fwait
aas
gs
cmp
inc
lcall
mov
adcl
lret
sbbb
sub
neg
les
in
jns
cld
les
stos
call
cmp
in
test
rcrb
cmp
aaa
inc
adc
rol
or
xchg
insb
std
divl
enter
popf
rclb
jae
cltd
cmp
xor
cld
xchg
mov
out
mov
jae
call
inc
xchg
xlat
jmp
sub
inc
loopne
add
xor
aas
test
xor
lds
in
adc
xchg
mov
pop
or
shl
dec
pop
dec
ss
sbb
mov
mov
aaa
sub
adc
xchg
pop
shr
pop
or
cmpsl
mov
lock
lcall
or
lock
loope
test
ret
and
out
jbe
jl
icebp
sub
and
scas
or
push
aam
inc
cmpsb
mov
mov
dec
out
nop
inc
mov
sbb
push
hlt
popf
lret
push
das
stos
gs
movb
mov
adc
test
lds
leave
gs
movsl
popf
test
and
jno
inc
and
pop
gs
sub
pop
cmp
dec
sub
in
sarb
mov
xchg
push
ret
fcoml
popf
jne
cwtl
inc
push
push
out
add
loope
sub
pop
and
adc
jg
pushf
mov
dec
mov
push
es
mov
cmc
rcrb
cli
leave
add
cs
insl
loope
adc
lods
cmp
std
adcb
mov
xor
sbb
mov
sub
ja
inc
in
ljmp
lods
sub
mov
call
or
dec
jno
rolb
aaa
in
mov
fldenv
lret
mov
dec
lods
mov
and
cmpsb
ret
mov
lods
jecxz
push
mov
cwtl
adc
xor
push
addr16
popf
inc
or
mov
sbb
push
jae
xchg
daa
lcall
shlb
in
xor
fisttpl
sbb
cld
xchg
subps
xchg
xchg
aad
loope
push
mov
cli
mov
push
xchg
imul
push
dec
lea
hlt
movsl
pop
in
lods
pop
jg
sub
mov
add
lcall
xchg
xor
mov
filds
sbb
lcall
fsubs
mov
mov
cltd
jne
push
popa
fidivrl
frstor
jge
cmc
aas
gs
jbe
fcmove
cmp
push
test
pushf
in
icebp
inc
outsl
fiadds
and
xchg
arpl
sub
pushf
call
or
xchg
xchg
jmp
or
ljmp
ficoml
fadd
or
movsl
jns
pop
das
push
push
adc
mov
in
into
arpl
pop
gs
lds
dec
mov
push
daa
into
add
loope
int3
fwait
and
jge
leave
idiv
sub
push
in
icebp
int
pop
das
push
pusha
pop
adc
pop
test
rcrb
jmp
xchg
jge
scas
mov
cwtl
or
and
test
shrl
mov
pop
xchg
and
daa
cmp
mov
insb
andl
cmp
and
mov
sub
jb
out
mov
mov
out
adc
arpl
loopne
sbb
std
mov
sub
pop
push
sbb
or
jle
lret
sarl
mov
pop
cmc
lahf
pop
gs
xor
adc
jp
testb
dec
ss
loopne
xchg
cmp
cmp
xor
test
sub
cltd
inc
in
cli
mov
repnz
outsl
sbb
push
xchg
cmc
inc
inc
xorl
stos
adcb
loope
filds
test
fwait
jle
jae
int
sbb
aaa
and
xchg
xchg
mov
adc
out
scas
inc
dec
push
pop
push
loop
loope
dec
mov
ljmp
add
dec
lcall
ja
jg
xor
imul
testb
inc
movsb
fnstsw
out
test
fwait
xchg
inc
push
test
loope
test
jnp
outsb
lcall
xchg
sbb
push
cmp
mov
sbb
xchg
fists
les
shl
jmp
fisttpl
xlat
and
inc
xchg
daa
pop
cmp
arpl
lea
bswap
sarl
js
cmp
xchg
xchg
movsb
inc
pusha
xor
push
adc
mov
mov
out
push
lock
aad
add
iret
xchg
pop
mov
jmp
test
or
sub
testb
xchg
or
mov
mov
aas
push
iret
xchg
out
enter
xor
add
andl
ret
scas
or
fdiv
jl
sbb
insb
popl
out
mov
ds
sbb
xor
lcall
cmp
das
or
cmp
inc
stc
cs
insl
adc
ljmp
test
stos
cmpsl
arpl
mov
lods
xor
cltd
enter
ret
sahf
dec
insb
push
xor
call
shlb
cmpsl
inc
out
daa
jl
lahf
inc
mov
sbb
sub
inc
xchg
hlt
rorl
adc
cmp
push
loop
jb
xchg
xlat
inc
jmp
or
outsl
xchg
popf
sbb
push
xchg
jp
jl
jnp
mov
xor
mov
xor
pop
fdivr
test
or
sub
stos
sub
aaa
in
or
cmc
pop
lock
daa
pop
push
inc
jp
not
out
scas
call
aaa
fsubrs
sub
sub
or
loopne
rol
cmpsl
hlt
aaa
lcall
inc
or
loopne
in
ss
je
mov
mov
mov
mov
add
bound
lret
clc
jnp
jg
cmpsb
mov
fnsave
into
pushf
fcompl
lods
out
or
aam
dec
aaa
mov
add
mov
and
insl
mov
and
movsb
jp
lea
lods
or
cmpsl
jle
xor
xor
inc
xchg
divl
js
dec
inc
leave
repnz
addr16
fimull
and
movsb
adc
and
cmpsl
inc
sub
fdivr
push
stc
enter
jbe
push
and
lcall
inc
xlat
cltd
nop
aaa
cld
jbe
rcr
or
std
repnz
cs
icebp
push
jb
cmp
add
mov
cvttps2pi
mov
jae
mov
mov
stos
out
notb
mov
stc
add
or
xchg
popa
lds
fdivrl
xchg
leave
push
push
test
jp
push
ror
out
ss
out
inc
stos
out
dec
aad
mov
mov
sub
jne
js
fisubl
int
pop
and
xchg
js
xchg
insl
xlat
testl
ret
mov
mov
movsb
pop
dec
popa
mov
xchg
movsb
push
push
fs
jno
push
ljmp
sbb
enter
lods
dec
inc
shrb
inc
lcall
mov
repnz
clc
call
sbb
gs
lahf
jnp
fwait
cltd
js
push
add
mov
xchg
push
add
insb
xor
std
pop
test
adc
addr16
test
sti
mov
push
xchg
lock
push
mov
or
test
pop
add
mov
leave
and
mov
xor
ret
scas
mov
arpl
test
push
and
inc
ds
jns
test
jecxz
or
mov
cmp
test
adc
add
mov
lock
popl
cmc
inc
into
jo
repnz
pop
dec
ret
pop
notb
sbb
ds
jmp
cwtl
mov
mov
mov
push
mov
sti
lods
adc
mov
sbb
shll
hlt
pushl
sbb
jmp
add
popa
push
push
sbb
push
scas
pop
pusha
loop
cmc
add
xor
scas
add
mov
loope
adc
cmp
sbb
mov
cli
in
mov
scas
push
leave
loopne
xor
and
and
test
adc
inc
xchg
loope
out
add
insl
mov
pop
add
lahf
push
repz
sbb
aas
mov
arpl
cwtl
arpl
aas
sub
adc
movsl
mov
xor
mov
shlb
dec
or
popf
or
cmp
sub
and
loop
ret
lds
mov
cmp
xorl
daa
xlat
lods
out
js
out
mov
fistpll
pop
fs
xchg
imul
mov
jmp
packsswb
sbb
and
iret
ss
inc
cmp
jne
cld
mov
xor
shrl
xor
jge
fidivl
mov
bnd
add
adc
in
jae
mov
cmp
outsl
pop
lcall
lahf
and
cmpsb
inc
jns
shll
pop
inc
cmp
push
xor
mov
xlat
lds
add
add
mov
xor
out
js
cmp
test
cli
cltd
imul
xchg
jb
inc
lock
ficoml
icebp
mov
pop
push
inc
in
int
dec
pop
xchg
mov
inc
mov
ret
push
scas
pop
imul
repnz
xor
xlat
stc
repz
cmp
push
popa
ret
cli
orl
mov
test
movsb
stos
push
sbb
pop
jb
mov
lret
mov
sti
jae
pop
fwait
cmp
or
cld
inc
aas
in
shrb
xchg
xchg
les
pop
xchg
jmp
and
inc
hlt
bound
add
adc
je
xchg
cs
lret
mov
outsb
pop
int
enter
pop
shr
shll
je
and
xchg
cmpl
or
xor
push
cltd
int
fmuls
out
daa
pop
ficompl
sub
mov
xchg
je
mov
add
test
lods
addb
cmp
sbbb
fsubr
hlt
lret
frstor
add
inc
adc
pop
fucom
std
push
inc
xor
inc
jp
sarl
and
dec
sub
pop
sub
mov
or
push
ret
sar
xchg
pop
adc
lods
hlt
mov
and
jg
insb
xchg
clc
inc
sarl
cmpsb
cwtl
and
lahf
imul
dec
sarl
inc
popa
adc
inc
and
cmp
ret
and
jg
sub
pop
mov
pop
jmp
addr16
jg
cmp
jne
mov
loopne
cmpsb
mov
pop
daa
insl
mov
push
pop
adc
cmp
test
and
aas
inc
cmp
std
add
xchg
and
ja
xor
push
or
aam
in
add
pop
xchg
ss
sahf
add
push
test
int3
out
push
enter
lret
aaa
sbb
push
cwtl
sbb
xchg
push
scas
popf
pop
imul
push
outsl
cmp
js
sbb
in
jmp
insb
out
rcr
mov
lret
pop
insl
icebp
cld
out
sbb
push
std
and
in
push
jmp
add
int3
clc
pop
popf
cmp
sbb
ss
xchg
sbb
push
repz
push
adc
sbb
adc
push
popf
cmpsl
mov
lods
fimull
in
outsl
psllq
jae
stc
cmp
cmpsb
jge
movsl
loop
xor
imul
mov
sbb
aaa
cmp
cltd
pop
lds
jp
jg
into
sbb
popf
mov
loop
jecxz
cmp
mov
mov
in
iret
push
xor
fnstcw
fwait
sbb
dec
pop
sub
push
int3
ret
pop
add
cld
adcb
jmp
and
maxps
mov
xor
scas
jmp
fisubrl
aam
pop
mov
stc
cmp
addr16
mov
pop
inc
jge
pop
lcall
stos
mov
imul
mov
sbb
xor
dec
push
mov
inc
fildll
push
mov
sbb
scas
leave
cwtl
add
cmp
arpl
xor
push
inc
mov
mov
ret
mov
vpcmpgtw
inc
leave
mov
mov
ffree
push
or
mov
sti
add
mov
fmull
sub
test
ds
dec
and
call
fs
icebp
loope
mov
xor
arpl
js
data16
ja
mov
movsb
bound
xor
andb
popf
push
cli
adcb
push
jae
sub
jbe
inc
pop
scas
mov
push
int3
div
xchg
je
xchg
je
pop
loop
cmp
movsb
lods
xchg
das
dec
mov
out
pop
out
es
jle
popf
sbb
sar
xor
and
xchg
or
fs
test
arpl
ljmp
scas
fildll
fisttpl
daa
inc
push
dec
xor
fnstcw
lcall
mov
out
xadd
and
je
xchg
mov
mov
std
mov
jb
inc
push
inc
aaa
in
vsubsd
adc
mov
pop
or
into
out
cli
sub
lds
lds
enter
push
xchg
cmp
lea
gs
inc
in
mov
pushw
ja
xchg
rorl
push
mov
jecxz
call
or
std
lock
aaa
daa
lret
popa
push
roll
mov
jae
lock
fisubrs
mov
leave
sub
xchg
and
push
ss
jnp
add
push
mov
xor
push
test
data16
cwtl
inc
int3
lods
loope
fisubl
jae
mov
add
jo
sbb
lret
hlt
lcall
jmp
cmc
into
cmp
in
mov
flds
and
jecxz
cwtl
es
xor
sbb
and
dec
cwtl
mov
or
in
mov
xlat
repnz
pusha
dec
cli
xchg
push
mov
dec
xor
aaa
js
and
pop
sti
push
out
pusha
sbb
mov
rcrb
dec
dec
cmp
pop
out
mov
mov
popa
jl
jno
adc
test
int
inc
dec
mov
mov
fadd
or
sbb
js
aaa
arpl
std
cld
ds
outsl
das
or
fs
or
outsb
mov
dec
add
and
jp
call
inc
adc
or
xlat
mov
icebp
flds
test
lahf
cmp
sub
aas
loop
in
and
mov
cmpsl
dec
cmp
mov
mov
xor
or
out
cwtl
cmp
data16
hlt
cmp
add
mov
jmp
push
movsb
into
push
movsb
inc
pop
cmp
icebp
repnz
ret
ja
ljmp
movsb
push
imul
jecxz
test
mov
lods
aad
push
push
jo
cld
rolb
mov
mov
es
out
pop
data16
xchg
sub
in
and
bound
mov
mov
imul
jecxz
mov
push
or
cmp
dec
add
jbe
cltd
sahf
dec
lods
xor
or
mov
add
insl
inc
push
repz
mov
rcrb
jmp
push
adc
and
push
add
rcll
mov
aas
jle
cmp
pop
mov
clc
pop
out
cmpsb
mov
aaa
les
cmp
iret
xchg
repnz
int3
ret
pushf
jl
test
jge
mov
sbb
fidivrl
fidivs
adcl
cmp
cltd
mov
jecxz
pushf
push
add
jne
mov
out
js
sub
jno
shl
mov
movsb
cmc
push
mov
lock
mov
xchg
adc
mov
das
jno
stos
test
bound
pop
push
inc
cltd
test
xor
pop
pop
add
fdiv
mov
fdivrl
std
mov
push
or
dec
les
and
stos
mov
not
xor
mov
lock
mulb
iret
fsubs
sub
pop
push
std
lret
dec
pop
pop
into
pop
int
pop
popf
jp
pushf
cwtl
sti
pop
jne
sub
jle
sahf
inc
jl
push
sbb
imul
adc
into
or
or
mov
sub
rol
jo
xchg
mov
pop
stc
push
testl
jne
out
imul
jnp
sbb
mov
sub
inc
add
les
enter
fildl
imul
pop
or
mov
inc
nop
cld
jbe
sbb
mov
div
push
int3
loop
ret
xchg
cmc
pop
inc
xor
push
pop
mov
pop
add
popa
lock
xor
sub
mov
daa
cltd
mov
adc
add
shll
ljmp
out
aam
push
jo
push
inc
in
subb
movsb
jmp
rcrb
mov
das
addr16
push
xchg
sub
pop
adc
sub
pop
call
jge
cli
mov
rcrb
insb
loopne
cmp
mov
xor
lahf
ja
orb
sub
and
fs
mov
sub
ljmp
xchg
xor
cmc
clc
rep
enter
adc
dec
mov
jbe
dec
mov
jecxz
loop
xchg
stc
add
dec
shrb
mov
mov
iret
shlw
daa
adc
repnz
and
pop
add
mov
cmp
out
mov
add
inc
sbb
jp
in
mov
mov
adc
es
and
xchg
leave
mov
inc
cwtl
sub
ds
scas
sub
or
mov
movsb
sub
mov
sbbb
jmp
push
push
fisubrl
mov
push
jae
xor
out
cmp
push
pusha
fnstcw
mov
lock
xchg
sarl
shrl
fbld
xchg
mov
sbb
jge
jno
sub
xor
cmp
popf
fistpll
int
mov
testb
cmp
xchg
mull
mov
jl
sbb
lahf
or
in
dec
test
push
fisubl
pop
pop
js
cmp
xchg
adc
or
scas
int
or
and
in
insb
in
push
push
inc
inc
nop
fbld
dec
jae
adc
out
sub
xchg
pop
dec
loope
push
fisubs
and
roll
sub
scas
and
mov
mov
jle
mov
sti
xchg
cmovae
stc
stos
inc
xor
ret
aaa
jmp
xor
test
adc
xor
shll
into
pusha
iret
pop
sbb
test
jmp
or
push
repz
ljmp
jl
and
adc
loopne
and
mov
aas
sub
jnp
mov
cmp
mov
popa
cmc
shlb
push
mov
xor
mov
pushw
fiadds
adc
call
aad
pop
mov
cmp
jne
mull
push
pop
leave
clc
int
cmpsl
enter
inc
hlt
jno
inc
fcmovnu
enter
subl
cld
or
mov
xchg
mov
and
inc
mov
add
outsb
fadds
push
fnsave
dec
xor
repnz
movsl
xor
call
ret
pop
pop
gs
lods
outsb
hlt
daa
mov
fwait
clc
fdivr
inc
ljmp
jbe
fadd
sbb
lock
data16
jns
jecxz
movsb
cld
ja
stos
jge
lods
inc
fbld
and
test
jnp
push
sub
mov
cmpsl
push
data16
or
jo
push
leave
ret
pop
mov
aaa
and
xchg
insl
sub
pop
test
jmp
into
into
cmp
sbb
pop
outsb
enter
adc
adc
in
push
aam
push
ja
push
adc
cmpsb
loop
movsl
fdivr
mov
ss
push
dec
bound
push
xchg
jecxz
cmc
out
ljmp
les
jbe
scas
inc
fcmovbe
add
pop
das
test
cmp
mov
int3
adc
ja
js
pushf
into
cli
loope
les
jp
or
pushf
in
and
outsl
adc
dec
addr16
pop
sub
adc
mov
push
sbb
pop
sbb
lea
fwait
mov
jbe
mov
cmp
fisubs
insb
sub
mov
dec
push
test
mov
lock
mov
jne
mov
test
xorb
aaa
xchg
lds
sbb
inc
mov
inc
test
cwtl
jnp
outsb
pop
and
mov
out
outsb
inc
cmc
sbb
inc
cmpsb
pop
sti
daa
lods
jnp
aad
sti
shll
enter
imul
mov
pop
repz
mov
sbb
ror
adc
sub
lgs
and
cmp
push
mov
lahf
pop
xor
ja
sbb
sti
lods
cmp
in
inc
sbb
and
fldcw
and
stos
jge
stc
loopne
pop
sub
mov
push
add
in
mov
and
jg
insb
jno
fwait
outsb
adc
test
pop
add
mull
cld
loop
insb
loopne
fstps
outsl
pop
mov
imul
push
adc
sbb
ds
sub
dec
loope
xchg
cmp
fdivl
aaa
pop
es
in
dec
xor
cmpsl
aas
xor
sbb
fisubl
nop
pop
scas
adc
sub
pop
jae
rcrl
or
mov
outsb
imul
movsb
pop
popf
xchg
xor
outsb
out
xchg
adc
lret
call
repnz
adc
jge
sar
xchg
sub
add
mov
lcall
adc
jg
xor
push
sbb
inc
stc
scas
cmc
das
push
ret
or
call
dec
aad
xlat
sub
shll
scas
into
push
add
inc
sbb
out
test
or
stc
ja
addb
fcmovnb
movsb
sar
jp
out
jmp
mov
adc
cmp
clc
arpl
popa
out
jecxz
sub
ret
mov
xor
push
xor
mov
leave
inc
sti
sbb
sbb
dec
sahf
sub
sub
mov
das
stc
fmuls
pop
fistpll
dec
lods
mov
iret
inc
in
inc
aam
mov
aad
sbb
jp
in
rcrl
mov
or
ljmp
lret
dec
fstl
dec
push
out
rcrl
cltd
xchg
jbe
aad
lock
arpl
adc
stos
lahf
mov
and
xlat
adc
inc
xchg
int3
mov
or
mov
and
xor
movsl
rcll
int3
lock
mov
ja
fisubs
adc
dec
and
or
dec
das
sub
jl
lahf
jo
bound
jmp
int
xchg
ja
cmpsb
outsl
push
mov
add
pop
inc
mov
lock
xlat
test
sbb
push
dec
setge
mov
push
jg
imulb
dec
ret
jle
xor
lods
out
pop
pop
dec
fs
sub
hlt
add
xor
movsl
push
mov
xor
fldenv
add
mov
pop
lahf
outsb
push
mov
mov
lods
std
loop
fs
ja
arpl
cltd
add
mov
ret
jbe
shl
push
xlat
cmpsb
lcall
aas
stos
enter
data16
xor
les
jl
std
pop
and
xor
mov
inc
jno
ret
sbb
sbb
cs
ret
push
jns
cwtl
or
aaa
and
xchg
imul
dec
sahf
sub
repnz
test
call
icebp
push
scas
push
mov
xchg
call
push
xchg
push
push
imull
and
xor
inc
mov
je
fs
fldcw
push
notl
fdivs
flds
sub
adc
xchg
ss
mov
mov
daa
adc
pop
xor
insb
loopne
cmp
pop
aam
mov
fidivs
inc
es
nop
sti
andl
loope
xor
mov
jl
mov
outsb
insb
xor
dec
jno
pop
aam
ret
pop
push
inc
add
jns
push
adc
xor
and
insl
repnz
sahf
arpl
jno
and
cmp
mov
lret
cmp
cmp
push
mov
out
dec
dec
ret
mov
nop
repz
lds
jno
mov
jp
fadd
aad
xor
mov
data16
jnp
push
aam
sti
lcall
jns
enter
or
into
inc
ss
clc
cltd
xor
mov
and
push
sub
xchg
pop
lret
pop
cmc
jne
pusha
and
inc
movsl
ljmp
stos
mov
and
cld
nop
xor
dec
push
sbb
iret
fcoms
arpl
ja
jg
scas
dec
mov
lret
inc
push
inc
testb
and
ljmp
jne
pop
scas
cmpsb
scas
movsb
mulb
inc
push
jno
sahf
fistps
cs
into
mov
sahf
and
scas
insl
mov
mov
imul
cmpsl
testb
pop
jns
xor
xchg
rcrb
les
push
shll
mov
mov
dec
mov
stc
rclb
push
call
fcomip
popa
push
pop
dec
inc
fs
pusha
mov
adc
jbe
icebp
push
out
in
xor
aaa
xchg
cs
clc
mov
mov
mov
pop
adc
aad
outsb
in
adc
and
shlb
mov
add
or
fs
test
sbb
in
jecxz
fldcw
jg
or
mov
imul
imul
add
inc
mov
aaa
adc
push
mov
into
fisttpll
add
lods
adc
stc
and
enter
pop
mov
fldenv
jo
icebp
push
cmpb
pop
fistpl
xchg
jmp
adc
add
and
test
lds
pop
xchg
lea
xor
push
and
or
loopne
lahf
jne
jb
sbb
test
sbb
dec
mov
push
pop
jp
pushf
hlt
add
jp
data16
insl
or
mov
mov
popf
inc
fldenv
outsl
inc
gs
mov
mov
or
sub
data16
test
mov
js
xchg
mov
cmp
add
nop
push
ret
jnp
push
push
push
xor
jbe
shll
xchg
hlt
lret
and
mov
ret
mov
insl
sahf
aad
sub
mov
aaa
push
data16
imul
out
shll
decb
addr16
cmc
scas
mov
push
push
inc
sbb
sub
rsm
mov
or
or
pop
inc
ds
mov
cwtl
or
jnp
mov
adc
fwait
dec
ljmp
int3
fsubl
pop
sub
sbb
in
xchg
xchg
cmp
sbb
cli
mov
pop
int
sbb
mov
xor
sub
jecxz
shrb
and
and
xchg
iret
daa
mov
dec
jnp
adcb
les
jno
or
call
xchg
push
inc
out
ljmp
cwtl
in
iret
jno
mov
inc
daa
cmp
dec
pop
pop
mov
sbb
sub
pop
adc
dec
test
jl
push
dec
data16
pop
sbb
pop
test
and
or
outsl
fcmovnb
jns
mov
or
inc
pusha
rclb
push
sti
adc
stos
jp
push
pop
call
dec
int3
cmpsl
shr
mov
enter
mov
in
xor
mov
shl
push
add
jge
out
jns
int3
iret
arpl
mov
jno
fisubrs
push
outsb
test
xchg
lea
push
fisttpll
or
dec
adc
mov
loop
outsl
clc
mov
mov
fsubl
cs
inc
popf
push
arpl
shll
and
pop
rcrl
aam
adc
loop
jnp
dec
aam
sub
mov
call
jmp
enter
mov
orb
adc
fisubs
mov
cmp
orb
mov
cs
sarb
push
icebp
insl
outsb
lock
xchg
ret
mov
shll
in
aas
loop
ret
clc
fwait
lods
and
test
dec
jmp
addl
dec
cwtl
loopne,pt
jne
call
rclb
inc
sbbl
nop
inc
mov
push
aaa
js
or
mov
test
mov
dec
sub
push
fdivrl
sti
arpl
je
add
pop
pop
and
aam
xchg
inc
sahf
xor
inc
jnp
inc
mov
xlat
mov
cmp
faddl
pushf
arpl
inc
orl
clc
cmpsl
inc
aaa
pop
mov
testb
sub
lahf
xchg
movsb
cmpsb
xor
cmp
add
out
stos
lods
mov
pop
inc
push
push
sbb
and
lret
xchg
cmp
scas
jge
jae
inc
or
lock
push
pop
sub
mov
ret
sub
mov
fwait
push
mov
inc
and
jg
mov
je
mov
cmp
lods
jmp
push
cmc
movsb
out
xor
xchg
sub
ja
and
sti
adc
push
xor
jmp
mov
cli
sbb
mov
repz
lahf
ss
insl
dec
jg
and
jae
push
sbb
andb
popf
aam
xchg
sbb
mov
pop
sahf
or
and
mov
aas
pop
enter
fsubrl
pop
jno
orb
xchg
mov
cmp
pop
dec
les
jno
shl
sub
pop
ljmp
gs
mov
and
pop
or
test
or
sahf
add
adcl
inc
pop
cmovno
das
adc
xor
jne
adc
dec
mov
in
push
adc
inc
mov
inc
lods
jns
sbb
repnz
sbb
mov
shll
test
outsl
mov
lcall
cmpsl
movsb
arpl
xchg
dec
jne
lcall
push
push
in
movsl
fcompl
loop
jp
gs
xor
cs
repnz
lods
cmp
mov
push
fstpt
jecxz
leave
out
subl
cli
sub
out
push
and
ds
sbb
and
sbb
cmpsl
hlt
fidivrs
test
add
or
xor
lock
dec
in
ret
and
mov
insl
cltd
adc
push
movsb
std
insb
add
mov
ljmp
testb
out
cltd
jne
push
and
add
push
sbb
shrb
add
jbe
loope
sbb
in
in
mov
repnz
push
sar
sti
test
jnp
lock
stos
sub
add
xor
dec
xchg
cmpsl
aaa
mov
inc
lcall
xchg
jbe
out
mov
daa
aad
and
fstl
xor
in
jmp
fs
cmp
sub
push
dec
push
ret
cmp
sbb
pop
pop
ret
je
imul
scas
outsb
dec
bound
sbb
arpl
mov
mov
lock
cmp
inc
bnd
pushf
fnstsw
jno
xchg
adc
push
test
int3
sub
stc
repnz
mov
je
push
inc
dec
mov
loopne
jmp
mov
stos
ds
bound
in
adc
pop
xchg
lods
stos
mov
pusha
mov
inc
test
jge
in
int3
clc
call
cmp
dec
lods
lcall
shl
ffreep
sbb
push
or
mov
jo
dec
notb
popf
mov
rcr
mov
xlat
xor
movl
icebp
xchg
lock
cmpsl
jle
shlb
or
lock
out
imul
adc
jg
mov
aad
imul
faddl
fs
ret
push
xchg
cmc
mov
sub
add
pmullw
xchg
adc
mov
ficoms
lods
adc
fstps
mov
dec
fdivs
in
push
daa
push
loop
mov
lods
sub
fists
leave
pmaddwd
mov
adc
ja
leave
stos
mov
push
movsb
pop
or
stos
out
dec
inc
inc
shll
loope
fdivp
or
int3
pop
inc
into
imul
adc
adc
imul
mov
je
pop
mov
outsl
push
or
cmp
icebp
adc
cmp
and
ds
mov
pop
push
push
loopne
fistps
mov
leave
add
and
pop
cmp
inc
out
cmpsl
push
xor
push
cltd
mov
inc
dec
push
pop
sbb
inc
xlat
fs
jno
jb
testl
fnstenv
shrl
test
mov
ret
or
aas
inc
rol
jbe
cmp
pop
outsb
fnsave
popa
mov
mov
leave
cwtl
ja
scas
scas
sub
daa
xchg
push
movsl
rcrb
add
test
pop
std
jl
jle
lea
push
dec
les
mov
push
xorl
add
xor
repz
adc
insb
sbb
cld
jnp
loop
cmp
insb
or
jae
jnp
xchg
outsl
dec
push
lods
cli
inc
sbb
fmull
mov
out
ljmp
outsl
roll
ljmp
push
pop
ret
xchg
add
orl
fistpll
mov
pop
popf
retw
xchg
popf
pop
mov
movsl
add
std
lret
adc
cmp
or
mov
lfs
js
lods
and
ficomps
push
inc
leave
push
test
dec
ja
pushf
fimull
mov
push
sbb
leave
xchg
aas
mov
push
cmp
mov
xor
and
pusha
aam
jle
and
imul
mov
clc
pushf
call
scas
fisttpl
cmpsl
pop
add
xor
out
popa
lret
add
inc
cwtl
js
roll
repz
mov
xor
xor
pop
inc
push
out
pop
aad
xor
mov
jp
test
adcb
mov
mov
mov
push
or
mov
adc
push
mov
lahf
or
adc
cmpb
ret
adc
jne
push
mov
std
aam
bnd
dec
mov
icebp
cmpsb
dec
mov
pop
dec
pushf
push
cltd
xchg
insl
push
or
xor
pop
cmp
pop
mov
mov
mov
jge
and
push
lds
mov
cmpsb
mov
scas
ret
mov
insl
sbb
mov
cltd
pop
mov
mov
and
frstor
and
into
hlt
hlt
insl
mov
xchg
push
fstpt
mov
mov
nop
jmp
movsb
mov
aad
ds
mov
ret
cmpsl
jle
cmpsl
adc
xor
mov
fisubs
pop
fs
nop
test
popl
rorb
iret
ds
insl
xor
pop
iret
push
xorl
pxor
fs
mov
cmpsb
lret
out
es
imul
dec
push
fisubrl
imul
ljmp
cli
pop
sbb
dec
jle
cmp
or
sbb
bound
testl
pop
jecxz
xchg
jg
push
sti
jo
daa
pop
mov
das
jnp
mov
sbb
ficoml
aad
push
daa
jg
and
inc
stos
mov
mov
lahf
sub
stc
pop
lret
cwtl
push
in
mov
xorl
cmpsl
hlt
inc
ret
push
insb
jae
adc
jg
xchg
inc
rorb
fs
inc
mov
dec
in
out
jge
sub
frstpm(287
inc
jge
push
xor
sub
pop
aaa
cmp
inc
shll
jnp
in
xor
dec
jb
aad
loopne
fcmovne
push
daa
push
stc
mov
and
and
or
test
sbb
push
mov
jge
orb
jo
mov
aam
int
mov
inc
fsubrl
fucomi
inc
mov
stos
and
xor
or
popa
imul
add
add
idiv
xchg
jnp
mov
shrb
pop
movsl
mov
xor
das
fldcw
xor
movb
xlat
sbb
incb
dec
arpl
clc
lods
push
and
in
pop
mov
rclb
inc
sub
push
mov
jae
in
hlt
push
flds
in
adc
push
leave
pop
adc
inc
sub
ficompl
mov
gs
push
push
push
dec
jl
jge
or
adcb
jle
pop
loop
adc
insb
cmovp
pop
cld
fsubs
sbb
stos
fdivs
addb
jmp
popa
xchg
push
js
aam
xchg
cmpb
dec
fistpl
cmc
push
jl
pop
pop
insb
sbb
mov
loope
push
ret
mov
loopne
icebp
dec
cwtl
aad
gs
adc
jb
jge
xor
in
icebp
mov
inc
aas
push
cmpsb
fdivrs
in
fs
cmpb
lea
test
push
xor
or
rclb
call
sub
jo
leave
aaa
fadd
push
jmp
adc
clc
ds
cmpsb
repz
iret
ret
stc
cmp
sbb
cmp
xor
dec
pop
popf
or
out
cmp
stos
clc
cltd
gs
das
mov
mov
fs
sbb
addr16
nop
xchg
xor
iret
mov
xchg
push
mov
cmp
ret
fnsave
cmp
hlt
inc
xchg
xchg
cmc
add
pop
pushf
aam
mov
rcrl
adc
fcmove
popf
dec
gs
sub
out
xchg
lahf
loop
int
xchg
push
dec
dec
xchg
pop
sub
rcrb
xchg
test
popf
adc
mov
add
orb
lds
es
stc
movsb
andl
out
add
jo
jnp
in
push
xchg
stc
icebp
mull
iret
shlb
dec
lods
dec
jg
dec
lock
jae
repz
dec
int
enter
add
bound
rclb
jg
jge
lods
xchg
xchg
fbld
mov
cli
das
popa
mov
push
push
shlb
add
mov
mov
pop
inc
loope
mov
push
sub
push
and
fcom
add
fsts
xchg
add
ret
stc
and
ljmp
sub
push
loop
outsb
jge
das
inc
std
and
jl
cltd
pop
and
push
mov
mov
std
or
or
pop
ss
aaa
mov
or
cld
push
incb
roll
sub
fnstenv
fistps
pop
push
lcall
cmc
ss
stc
jae
inc
mov
or
icebp
jae
cmpsb
adc
xor
loope
dec
dec
gs
sbb
sahf
imul
mov
ds
data16
movsl
bound
mov
jl
outsl
sbb
jle
mov
xchg
cmp
mov
mov
repz
aad
cmpsb
inc
std
outsl
push
jg
sub
out
xor
leave
push
jg
in
cli
out
push
pop
cltd
mov
and
negb
cmp
jl
dec
cld
pop
ljmp
inc
pop
mov
dec
pop
outsl
stc
lds
je
or
bound
jne
std
and
mov
mov
cwtl
add
mov
pop
fucomip
ds
push
jmp
imul
mov
sarl
or
mov
mov
inc
out
movsl
js
sbb
jne
push
and
movsl
inc
jle
or
stos
cmp
in
or
je
movups
in
hlt
push
mov
adc
inc
clc
jmp
or
test
add
pushf
test
fidivrs
rolb
ret
jb
xor
pop
addr16
loop
lcall
mov
or
dec
fiadds
or
lock
pop
mov
pop
stc
xor
or
lods
adc
inc
arpl
mov
cld
xorl
mov
xchg
jb
sub
insl
sti
ret
icebp
pop
andb
jp
pop
mov
enter
es
fisubrl
cli
jg
fisttps
jle
sbb
sub
sub
and
pop
sub
cmp
add
out
sub
cmp
daa
inc
mov
mov
sub
add
cmp
lcall
jl
mov
xchg
lcall
mov
lret
cmp
inc
roll
dec
test
das
mov
jg
pushf
jp
insl
rclb
inc
testl
leave
jle
notl
mov
out
aam
movl
outsl
push
sbb
in
int3
adc
mov
mov
std
lods
js
jno,pn
sub
push
sub
add
xchg
xlat
cs
test
jns
pop
sbb
sahf
idivl
push
sub
xchg
aas
xchg
ret
sar
rorb
mov
push
jb
inc
mov
out
lea
cmpsb
cmp
inc
or
movb
movsb
iret
fidivl
xchg
mov
fdivl
in
outsl
jmp
inc
adc
loopne
xor
dec
mov
cmpsb
imul
lock
push
cli
add
mov
add
mov
and
inc
es
call
inc
pusha
xchg
mov
xor
std
pop
cmp
pop
add
cs
test
cmp
call
mov
je
push
xor
iret
add
stos
or
call
sbb
lret
pop
ljmp
mov
pop
or
clc
pop
outsb
adc
xchg
es
pop
in
imul
pop
in
addl
or
add
mov
xor
pop
jge
xchg
subl
aaa
and
popa
dec
xor
sub
xor
mov
pusha
stos
pop
dec
leave
xor
jl
insl
insb
or
mov
push
or
mov
cmp
fbld
into
fs
add
subb
add
fstpt
mov
icebp
in
pop
aaa
xchg
shll
movsb
and
jmp
add
sbb
pushl
sbb
cmpsl
dec
loopne
inc
scas
sbb
mov
arpl
out
lret
push
out
les
popa
lods
loope
add
and
cmpsb
dec
mov
lret
mov
inc
mov
and
mov
mov
add
jecxz
mov
xchg
adc
lods
mov
cmp
cmp
lcall
shll
out
dec
js
sub
int3
in
pop
pop
loop
pop
loopne
hlt
xchg
and
addr16
inc
aam
pop
push
cmc
lock
mov
ja
adc
fimull
dec
inc
sbb
lods
mov
insb
inc
xchg
jbe
cmc
out
cmp
stc
push
mov
into
and
jo
stos
js
inc
xchg
arpl
mov
sbb
add
mov
shrl
loopne
xor
push
pop
test
repz
mov
dec
push
pusha
leave
sbb
add
cli
jns
icebp
pushf
jge
inc
sbb
dec
lcall
add
push
insb
push
int3
xchg
cmp
sarl
jb
daa
add
inc
arpl
mov
mov
mov
add
ret
outsb
stos
bound
mov
test
adc
xor
xchg
das
loop
adc
xor
adc
pop
in
adc
iret
test
inc
or
or
push
in
pusha
rcr
mov
sbb
jae
loopne
jo
cmp
and
pop
lods
jp
mov
shll
sbb
pop
mov
jl
scas
pop
cmp
adc
push
daa
pop
movsl
cmp
and
lods
shrl
xchg
outsb
push
leave
les
mov
int3
mov
out
fisubrl
test
lcall
subl
mov
cmp
mov
lret
dec
jmp
pop
xlat
jne
jle
fcmovne
repnz
test
adc
out
pop
popf
sahf
ficoms
xor
pushf
pop
lret
sbb
divl
rclb
out
mov
dec
ret
push
ss
dec
ficomps
outsl
pusha
aas
or
and
lea
push
cmp
decl
add
mov
cmp
clc
dec
rcrl
lock
sbb
jmp
xchg
adc
leave
push
aas
inc
mov
out
fstl
jnp
daa
mov
imul
cmpsb
push
lds
movsl
cmp
clc
cs
pop
jmp
nop
inc
and
dec
xchg
xchg
mov
movsb
inc
lods
mov
loope
add
push
push
dec
mov
and
xor
enter
or
fsubp
jno
in
mov
sub
push
mov
sbb
push
dec
xor
fsubl
mov
add
xlat
cld
shlb
cwtl
jnp
stos
fsubrl
mov
shl
inc
push
mov
or
or
shld
sub
xchg
xchg
push
daa
xor
arpl
subb
and
imul
jg
es
push
es
cld
int
xchg
fcmovne
pop
jmp
cmp
subb
mov
cwtl
les
call
fcomps
mov
in
mov
pop
stos
fdivr
cmp
add
mov
jno
mov
dec
pop
popa
mov
cmp
push
dec
jl
stos
arpl
aam
mov
lods
loop
roll
aaa
addr16
andl
ds
repnz
std
stos
rolb
xchg
fmul
fidivs
mov
shrb
popa
fbld
cmpsl
add
adc
cmp
fwait
mov
stos
push
cld
add
xchg
adc
push
xor
pusha
int3
mov
cmp
arpl
mov
bound
hlt
jp
insb
arpl
mov
test
mov
fldenv
repz
arpl
jo
mov
or
imul
xor
pop
hlt
mov
pop
int
aad
ja
mov
pop
fidivrl
xchg
cmp
pop
subb
jns
enter
xor
xor
adc
mov
push
pop
out
sbb
jno
adc
mov
xchg
push
scas
mov
mov
push
les
mov
sbb
loop
inc
adc
lcall
lcall
fdivs
ljmp
add
add
mov
hlt
cmp
adc
pop
js
mov
xor
popf
pushf
rcr
ret
mov
jno
nop
push
adc
in
out
cmp
inc
les
jne
cld
fs
adc
cmp
xor
sub
pop
stos
ret
jne
cmpsl
leave
jle
and
pop
push
dec
test
xor
cmpl
mov
das
into
shl
sub
das
push
mov
xchg
cmp
mov
lds
lcall
scas
jp
add
sub
out
mov
jne
push
call
stos
mov
fldcw
sub
lock
fistpll
sbb
add
sbb
cmc
add
pop
mov
cmpsl
and
out
hlt
and
out
and
mov
cwtl
fidivrl
inc
cmpl
movsb
mov
cltd
roll
ret
add
add
mov
pop
push
fiaddl
in
and
shll
add
aad
call
lahf
std
and
scas
dec
fs
rcrl
dec
push
jno
imul
das
ffree
sbb
mov
jns
enter
sub
fcmovnbe
dec
push
jno
iret
ret
gs
mov
mov
cmpsb
cmp
out
inc
test
cmpsl
out
scas
mov
iret
sub
add
ljmp
icebp
sub
pop
mov
pop
xchg
insl
mov
dec
icebp
jg
popf
add
out
inc
iret
stos
dec
mov
lcall
lahf
movsl
sbb
dec
push
push
pop
cmp
push
fbstp
or
sub
sbb
out
jg
mov
fwait
adc
jmp
jb
addl
repnz
mov
add
popa
mov
pop
ds
mov
shlb
jb
sarb
lds
fcmovnb
movsl
cwtl
sti
or
fstl
jle
out
enter
xorl
pop
sub
inc
ret
sar
repz
xor
lahf
add
loope
sbb
add
in
mov
pop
hlt
cmp
lods
cltd
frstor
cmp
pop
jmp
pop
xchg
mov
adc
pusha
cs
jb
adcb
jp
cmp
scas
mov
mov
pop
inc
xor
test
rorb
jecxz
push
shll
mov
xchg
mov
push
jmp
lret
xchg
dec
xchg
mov
cmp
dec
and
cmp
jl
lret
cmp
mov
pop
cmp
dec
stos
popa
or
mov
outsb
dec
xchg
fadds
out
shll
pop
add
mov
and
xor
call
sbb
gs
pop
cmpb
dec
xchg
dec
data16
pushf
dec
test
jnp
lock
pop
insb
push
dec
inc
addr16
std
shrl
dec
mov
adcl
mov
movsb
dec
pushl
push
add
stc
lds
and
or
or
cmp
into
scas
lock
fldl
stos
lods
xchg
add
insb
movsl
ss
or
mov
sbb
mov
rorb
mov
mov
pusha
cmp
xor
jns
loope
xchg
push
jnp
inc
aad
repz
movsl
jle
and
xor
sub
mov
jo
les
cmp
dec
mov
call
lock
mov
dec
popf
mov
dec
xchg
popf
pop
sub
dec
xorl
xor
out
out
jnp
mov
cmp
mov
test
push
std
push
mov
xchg
add
sbb
mov
dec
testb
loop
adcb
cmp
insb
insb
jne
addr16
xchg
push
daa
loopne
insb
sti
xor
test
push
stc
ret
jecxz
cltd
nop
imul
jecxz
add
or
mov
sub
stos
jno
rorb
adc
cmc
inc
xor
inc
pop
fisttpl
sahf
jbe
fldt
mov
int3
mov
scas
add
pop
inc
mov
movsb
jae
jno
stos
insl
dec
or
iret
fdivrs
div
xchg
push
out
movsb
jecxz
xor
into
mov
sub
clc
inc
xchg
outsl
cltd
fiadds
jge
mov
mov
icebp
mov
add
call
ficoms
inc
xchg
or
and
and
xor
mov
dec
or
inc
cltd
ret
out
mov
stc
jecxz
notb
xor
lea
mov
lods
push
aas
dec
or
sub
lahf
jge
pcmpgtd
mov
jnp
test
stos
jne
aam
mov
scas
shrb
xlat
jg
push
sbb
movsbl
call
cmpsb
xlat
mov
and
cmp
subl
pop
test
push
movsl
jge
shr
test
ljmp
rorl
lcall
test
bound
pop
cwtl
ljmp
cld
push
outsb
fmulp
leave
ljmp
push
scas
jo
mov
leave
xor
sbb
int
filds
scas
or
scas
mov
test
pop
aaa
out
lret
mov
mov
xchg
xlat
int
sbb
int3
in
dec
pushf
lret
addr16
addr16
nop
add
dec
repz
sbb
fs
ja
cmpsl
in
jmp
jge
clc
loopne
ja
push
xchg
ds
sbb
mov
je
sbb
mov
and
and
add
cmp
mov
call
dec
cltd
and
inc
mov
xchg
mov
dec
cs
or
call
scas
stc
cmp
cmp
and
pop
mov
push
lods
clc
cmp
mov
fs
mov
pop
push
dec
jle
inc
sub
adc
fs
clc
pop
andl
mov
lcall
icebp
cwtl
xor
cmp
cmp
cmp
ds
insb
pushf
xor
mov
call
shll
cwtl
cli
adc
cmp
aaa
push
sub
cmp
mov
div
fs
fwait
cmpsb
aad
push
fdivrs
inc
push
aaa
push
jp
call
mov
xchg
scas
mov
xor
inc
inc
lret
dec
xchg
fldenv
dec
add
out
test
in
cld
dec
mull
lahf
in
enter
lock
cmp
pop
and
mov
mov
mov
mov
mov
repz
outsl
mov
sub
cltd
adc
and
rolb
loope
or
mov
inc
dec
enter
sti
and
jmp
in
outsb
or
pop
out
add
fists
in
mov
push
repz
add
iret
push
cmc
push
lods
je
sbb
dec
ja
cs
pop
mov
ficoml
stc
mov
dec
loopne
mov
pop
stos
mov
arpl
int
jne
cmp
jne
js
sbb
push
cmpb
test
es
iret
ja
cwtl
aad
out
push
xchg
push
and
sbb
out
hlt
cmpb
and
shl
mov
popa
rcll
cmpsb
adc
cld
add
stos
jb
mov
mov
cmp
and
pop
dec
testl
out
out
and
fxch
push
mov
movsb
xor
loop
jecxz
je
lret
mov
mov
xor
pop
add
loopne
cmp
mov
rcrb
lods
insl
and
andb
jmp
jb
cli
cmpsl
inc
add
mov
and
push
and
fdivr
lea
fwait
in
add
pop
cmp
test
pop
jle
dec
ja
mov
addr16
xchg
fstpt
cmc
or
cmp
mov
xor
aaa
push
dec
dec
dec
movsb
sub
or
mov
cmp
fcomip
mov
out
and
jg
mov
insl
rorb
pop
and
jns
push
xor
sbb
inc
imul
pop
push
xchg
push
and
lahf
fidivrs
out
cmp
jb
fiadds
addb
idiv
negb
fnstsw
add
adc
popf
jne
adc
dec
inc
jmp
cmp
pop
xchg
test
inc
dec
sub
mov
mov
pushf
mov
mov
ss
adc
sub
stc
push
into
cwtl
push
iret
mov
testb
jnp
cmp
es
push
push
mov
push
imul
mov
xchg
add
cmpb
inc
add
mov
cmpsl
xor
fmuls
xor
push
xor
or
mov
pop
pop
sub
leave
iret
xchg
cli
or
enter
stc
mov
inc
lds
cmpsb
xor
fcmovbe
cmp
mov
cwtl
add
jb
lret
jo
mov
enter
gs
gs
lret
add
in
es
cmp
into
dec
mov
mov
mov
sbb
out
sub
jnp
dec
push
xlat
cmp
or
lds
in
shrb
mov
out
lea
lret
repz
cmc
cmp
loope
jle
arpl
push
sti
cmp
out
pop
jae
mov
push
fxch
jp
jne
clc
test
pop
jecxz
pop
xchg
fcomip
cmpsl
or
jne
data16
stos
movsl
insl
sahf
cmp
repnz
mov
stmxcsr
lahf
fsubrs
ret
bound
fwait
and
add
sub
mov
dec
and
arpl
test
into
adc
outsb
pop
push
daa
inc
aas
or
lods
add
movsb
insb
lock
in
mov
jmp
ficomps
jg
daa
xor
sbb
aaa
inc
or
in
jb
push
add
mov
sub
jno
das
and
jecxz
aaa
sahf
mov
scas
sbb
pop
push
push
xor
sti
pusha
xor
and
mov
push
dec
dec
jl
lahf
push
push
cmp
mov
and
enter
inc
lret
add
sub
aad
inc
cltd
push
push
arpl
add
inc
movsl
mov
and
gs
push
sbb
jae
mov
jge
jns
adcl
xchg
lcall
xorb
cwtl
push
jmp
in
xchg
das
mov
faddl
jo
ljmp
mov
or
int3
out
inc
cmp
fnsave
test
jecxz
bnd
add
repnz
jb
push
push
lahf
mov
cmp
in
ret
fnstenv
inc
mov
mov
add
scas
ret
es
lods
sub
jp
and
test
loopne
jg
repnz
lods
xchg
xlat
jo
xchg
in
or
pushf
jo
pop
cmp
add
xchg
jecxz
insb
test
push
and
cld
addl
dec
int3
in
mov
push
cmp
insb
add
xchg
mov
lods
movsb
js
adcb
push
mov
imul
cmc
mov
mov
mov
ret
jns
gs
push
stc
or
pop
jecxz
fimuls
jo
dec
mov
adc
or
xchg
xchg
xchg
xchg
jae
pop
ljmp
movsb
inc
inc
mov
hlt
lock
into
push
or
arpl
fidivs
inc
add
push
xor
or
jp
dec
sbb
aaa
aad
push
xchg
test
fxch
lret
lock
cmpsl
jnp
fistpll
push
pop
mov
fbld
pop
jns
jmp
cmpsb
idivl
push
mov
in
add
icebp
mov
mov
mov
cmp
mov
call
inc
aaa
cmpsl
shl
iret
xor
test
push
pop
mov
les
loop
jle
hlt
mov
outsl
mov
mov
lods
add
jb
adc
in
fsubr
out
lods
and
jno
mov
in
lret
leave
mov
imul
in
gs
sub
cmpsb
mov
lret
fwait
mov
push
imul
imul
je
add
fimuls
bound
mov
mov
cli
or
enter
and
cmp
scas
fdivrl
mov
mov
lret
xor
outsl
jge
jmp
inc
xchg
add
es
enter
mov
lock
data16
mov
je
out
mov
aas
jge
xchg
and
cmp
mov
ja
dec
addr16
je
lcall
ljmp
mov
mov
sbb
movsb
mov
aaa
shlb
and
xlat
cltd
jno
outsl
add
xor
adc
add
xchg
iret
addb
sbb
insb
or
nop
mov
loop
add
jg
dec
cwtl
pop
inc
sbb
rclb
xor
enter
aaa
adc
mov
stos
xor
repz
in
fdivrs
xchg
imul
push
je
mov
push
jmp
pop
insb
pop
lcall
outsb
push
xchg
add
stos
jne
dec
push
add
mov
add
xlat
cmpsb
xchg
cmp
and
and
and
jmp
mov
mov
mov
ret
fisttpll
mov
and
push
mov
stos
adc
cmp
mov
pop
sub
pop
and
mov
push
cmp
outsl
jae
adc
pop
jo
sbb
cmpsb
mov
or
orl
xor
call
mov
xchg
mov
jge
out
jnp
push
mov
mov
jns
movsb
mov
sbbb
scas
testl
lock
lock
jo
sub
pop
jns
dec
add
adc
push
jge
mov
jge
and
dec
dec
dec
sbb
jnp
mov
sti
adc
sub
sahf
push
cld
sub
mov
push
or
loope
negl
pop
push
mov
and
mov
loopne
loope
insl
sbb
xor
mov
sub
aas
test
sub
clc
cmp
mov
dec
push
cld
mov
aam
sbb
dec
or
push
mov
mov
inc
mov
inc
cs
push
xchg
adc
mov
sbb
daa
jle
addb
cmc
cli
sub
sub
outsl
push
mov
cwtl
cmc
lret
es
icebp
and
les
jo
outsl
setl
jmp
xchg
add
movsb
frstor
and
adc
leave
loopne
scas
inc
push
xchg
aas
sbb
inc
sbb
push
test
aad
ret
xlat
xor
cmpsl
imul
in
mov
push
imull
arpl
pop
xchg
dec
pop
std
fldcw
dec
mov
add
ljmp
nop
inc
je
nop
pushf
cmpsb
loop
fwait
and
adc
push
mov
mov
out
xor
aam
iret
xchg
adc
std
mov
shrl
bound
clc
and
scas
filds
loop
out
cmp
adc
sbb
lcall
pop
loope
add
aas
addr16
sbb
jbe
or
add
mov
sub
sub
add
int3
adc
rcr
jge
call
lahf
dec
and
push
adc
cmpsl
fdivrl
sub
jg
or
push
jae
rcr
lahf
stos
adc
add
stos
dec
sbb
and
fs
gs
push
xchg
or
xchg
mov
sbb
mov
jg
enter
cmp
pop
ret
cwtl
loopne
imul
xor
push
cwtl
out
sub
add
cmpsb
push
sbb
fs
dec
pop
mov
out
cmp
inc
add
shr
setge
push
cs
xchg
dec
stos
hlt
testb
lret
push
jecxz
jge
pop
pop
cmpsl
insl
cltd
loope
pop
xchg
xor
pop
in
mov
mov
dec
inc
scas
or
cmpsl
or
jle
loop
cmc
outsl
cli
scas
sub
fwait
mov
or
cmp
fisubs
daa
sub
rcll
jp
mov
ss
sub
stc
loop
sub
sbb
addl
jno
pop
push
dec
inc
or
push
cmp
xor
fstps
aaa
sbb
pop
aam
and
out
dec
ficomps
xchg
leave
shl
xchg
mov
mov
mov
cld
sub
bound
inc
or
pop
out
mov
cmp
call
push
pop
jg
mov
int
adc
test
adc
cmp
orl
mov
in
push
stc
mov
and
movsb
dec
movsb
mov
cmp
jle
cmp
sahf
nop
loop
xchg
lds
push
enter
adc
sbb
je
push
insb
push
jo
out
inc
aas
subb
push
adc
sbb
or
mov
int3
jno
int
imull
cmpsb
xor
lahf
aaa
mov
pusha
mov
push
ja
dec
xchg
push
jo
stos
inc
adc
mov
xchg
jno
cmpsl
loop
sbb
in
dec
dec
dec
xchg
and
xchg
ret
jmp
fldl
stos
fsts
repz
mov
cld
push
sbb
xor
pop
addr16
or
pop
gs
add
sti
loope
mov
jmp
inc
fwait
stos
jle
daa
xor
sub
cmp
fdivr
in
aas
mov
jmp
mov
js
sub
or
jg
movsl
add
mov
mov
xor
call
lods
enter
data16
and
or
sub
push
movsl
lret
cmpsb
pop
mov
call
leave
ds
xchg
mov
xchg
mov
sub
hlt
ror
pop
adc
adc
adc
lods
mov
into
outsl
loopne
xor
sbb
push
rcl
sub
or
pop
aad
das
out
bound
ja
adc
jb
adc
push
fcoms
jo
inc
lods
add
inc
push
lock
call
sbb
ljmp
test
cmp
outsb
stos
sub
imul
test
icebp
dec
nop
ja
outsb
push
jnp
mov
lods
jo
lea
sbbl
outsb
popa
imul
sub
leave
das
dec
lods
stos
repnz
pop
jge
sub
addr16
xchg
mov
xor
je
scas
jge
test
icebp
push
out
pop
jns
add
int
scas
aad
cmc
and
pusha
test
xchg
jae
cmc
es
fsubrs
xor
loop
jne
sbb
push
push
xlat
inc
sahf
push
push
pop
mul
mov
pop
push
emms
sarl
out
insb
shl
sbb
addr16
or
jb
adc
jge
test
sbb
jns
js
adc
leave
rorl
rol
fwait
adc
fsubp
scas
sub
pushf
cmp
insb
repz
mov
jo
mov
dec
lret
pushf
daa
mov
sti
mov
pop
arpl
inc
push
shll
nop
jnp
lock
pop
inc
daa
outsl
mov
outsl
bound
lds
fistl
icebp
push
inc
mov
pop
imul
loopne
cmp
out
xor
or
or
sub
pop
scas
push
cmpsl
daa
mov
xor
jne
pop
dec
stos
dec
jle
xlat
jge
dec
outsb
mov
sbb
call
mov
push
lock
cmp
adc
xlat
adc
cltd
lock
jmp
out
fbstp
mov
xchg
pop
and
ficoml
pusha
jecxz
lcall
jg
js
popa
sarb
cmpsl
mov
adc
adc
xchg
xchg
out
shlb
xor
push
sti
mov
xor
mov
stc
inc
cmpsb
fnstcw
sub
jae
nopl
xlat
aam
outsb
sbb
clc
or
mov
jl
pushf
mov
push
sahf
xor
push
mov
xor
fsqrt
es
inc
dec
fnsave
mov
fdivrs
loope
lcall
adc
adc
sarl
and
ret
xchg
nop
call
inc
inc
cmp
loop
mov
pop
jge
loope
imul
sub
xor
cld
cmpsb
inc
mov
jnp
adc
ja
push
cmc
mov
roll
ficoml
add
in
popf
push
cwtl
repnz
mov
jne
test
pop
testl
outsb
loopne
mov
aas
ss
fisttpll
mov
loop
stos
into
into
push
jp
mov
lock
repnz
scas
lods
daa
jo
mov
dec
data16
adc
jnp
sbb
adc
jns
xor
adc
fadd
test
xchg
and
cmp
jp
adc
lods
aad
ljmp
or
dec
cmp
xchg
stos
nop
int
cltd
pop
rcl
pop
cmpsl
mov
cli
mov
xor
mov
cmp
jne
or
lods
sub
jnp
stos
adc
xor
mov
cld
cmpl
pop
mov
and
addr16
ror
jbe
in
or
lods
xchg
pusha
in
inc
sub
repz
xor
cs
out
pop
ja
adc
fists
std
jbe
mov
or
push
leave
dec
push
test
dec
cmp
fsubl
stc
jmp
mov
sub
pushw
lea
sbb
dec
pop
neg
xchg
sub
aas
sub
leave
mov
push
jg
pop
cmp
sub
add
xchg
cmp
mov
fdivs
inc
addl
jecxz
call
pop
bound
xchg
jp
sub
mov
jno
out
pop
adc
sbbl
push
out
mov
cmp
call
fbld
loop
sbb
xchg
stc
add
push
or
std
xor
in
das
jle
hlt
lock
sbb
in
cmp
test
lock
fs
or
popa
inc
mov
xchg
out
sub
dec
ljmp
push
dec
inc
into
sbb
adc
xchg
iret
pop
sti
clc
or
outsl
addr16
add
int3
mov
jmp
iret
jnp
out
into
jno
into
mov
fcmovnu
adc
fldt
jl
pop
xor
hlt
mulb
mov
insl
jne
or
fucomip
xor
scas
pop
pop
stos
bswap
jg
xor
movsl
cmp
or
mov
xlat
and
mov
xor
pop
cmp
mov
scas
inc
sahf
scas
ljmp
ja
xchg
pop
in
jbe
xor
test
aam
iret
jmp
jb
cmp
xor
shll
iret
out
push
faddl
adcl
gs
jmp
or
mov
fcompl
imul
orl
sbb
mov
mov
mov
inc
imulb
lret
cli
jmp
aam
sbb
sub
sub
arpl
mov
movsb
push
pop
jl
arpl
stos
xor
xlat
dec
addl
cld
js
jmp
jns
push
mov
repnz
in
xlat
xchg
xchg
sahf
dec
push
aaa
mov
ret
mov
inc
ss
jns
scas
push
outsl
clc
negl
dec
lds
jno
leave
loopne
or
xor
and
inc
filds
mov
push
je
jnp
pop
jecxz
dec
jbe
sahf
fdiv
cmp
adc
push
add
rcr
push
mov
adc
cmp
xor
xchg
mov
cmp
push
in
scas
xor
adc
jge
ja
add
xor
mov
call
or
aad
lret
scas
mov
sub
pop
inc
push
inc
hlt
bound
das
je
xchg
in
out
ret
push
insl
movsl
popa
and
push
jg
daa
arpl
adc
sti
sbb
add
inc
clc
mov
movsb
adc
pop
jb
lea
inc
xor
in
pushf
shl
xor
push
adc
int
insb
inc
lea
jb
mov
data16
ret
sbb
repz
sub
jl
cmp
outsb
les
inc
iret
insb
repnz
fiaddl
mov
sbb
mov
xchg
jne
lock
xchg
mov
add
jge
rcrb
int3
in
and
sub
cmpsb
xor
leave
pop
cmpsl
adc
jno
cmp
mov
scas
test
inc
fstps
jecxz
adc
fs
mov
push
std
add
cmpsb
cs
std
lock
aas
dec
push
jmp
mov
xchg
das
push
adc
cmp
lea
dec
daa
mov
xor
xor
dec
sarb
pop
dec
add
xor
leave
sbb
call
cmp
imul
divl
dec
sub
mov
loop
mov
pop
int
jle
mov
leave
adc
add
cmp
adc
aas
aad
loop
xchg
dec
pop
jae
mull
adc
add
dec
insb
cmp
pusha
xchg
jecxz
pop
add
loopne
dec
call
pushf
js
dec
dec
mov
xchg
loope
adc
xorb
in
fwait
js,pn
mov
fdivrl
lods
xor
je
aam
mov
jg
pop
addl
xor
mov
mov
test
in
push
out
or
pop
imul
push
mov
in
fwait
sbb
jle
aam
or
jp
lock
pop
movsl
pushf
mov
inc
sbb
jne
mov
push
and
aad
gs
lahf
std
sub
bound
subb
xor
mov
sti
jb
insl
push
push
cwtl
int3
nop
or
or
jns
ljmp
aas
jmp
pop
pushf
je
pop
das
mov
and
fwait
lods
jo
test
or
sbb
cmp
add
pop
mov
push
push
and
push
jbe
adc
sbb
cmp
push
out
mov
enter
mov
icebp
dec
leave
inc
push
xchg
cmpsb
sub
jg
pop
fs
in
mov
cli
push
fs
int
les
std
inc
frndint
mov
sub
les
mov
std
fcompl
mov
ror
xor
leave
xchg
lret
sti
cmp
mov
jnp
aad
dec
inc
cmp
in
sbb
mov
push
in
pop
repz
ljmp
inc
mov
stos
adc
xor
mov
pop
pop
fstpl
lret
xchg
leave
sub
jns
test
mov
enter
adc
xchg
sub
mov
je
leave
mov
dec
push
cmp
lea
and
xchg
xchg
xchg
mov
sub
dec
mov
push
mov
mov
dec
in
andb
cmp
inc
push
sbb
js
xor
mov
jl
fcoml
mov
movsl
push
mov
subl
mov
and
ret
push
data16
ja
in
dec
lods
sub
imul
adc
dec
jge
or
daa
aad
pop
mov
xor
add
push
enter
mul
fcoml
add
rolb
inc
xchg
push
aas
movsb
xor
jge
mov
lret
adc
and
sbb
popa
mov
xchg
loope
pushf
push
mov
imulb
lret
stc
mov
xchg
gs
leave
int3
outsl
int
sahf
popf
and
insb
sub
push
int
mov
sub
push
out
lret
add
push
cmp
push
sbb
jae
xor
sub
sub
mov
js
inc
iret
xorb
mov
sbbl
push
movsl
cs
pop
dec
mov
push
fdivs
scas
adc
mov
jnp
fadds
mov
or
sbb
and
out
dec
or
push
pop
pop
sti
mov
dec
mov
mov
push
pusha
pop
jg
jns
pusha
addb
pop
sbb
sbb
daa
test
add
adc
ret
hlt
push
dec
sbb
mov
js
in
dec
ds
aam
xchg
adc
xor
or
stc
imul
jecxz
xor
jp
enter
mov
dec
cs
popf
call
fs
jo
push
lea
mov
ret
stos
out
aad
and
xchg
mov
or
pop
sahf
lock
mov
adc
subb
and
pop
aaa
lcall
sbb
dec
jns
mov
jno
jne
out
mov
enter
xor
mov
icebp
mov
or
pop
mov
dec
mov
popa
add
dec
xor
xor
mov
xchg
mov
xchg
aas
or
pop
cmp
in
and
enter
mov
clc
out
dec
cli
cmp
aam
push
xor
adc
lret
xchg
aaa
dec
or
mov
data16
mov
fdivl
rclb
push
jle
not
incl
mov
int
fcoms
cld
xchg
adc
xchg
in
movl
loope
pop
cmpsb
inc
jbe
aam
das
push
jp
jbe
lea
movsb
push
stc
into
nop
pop
scas
in
cmc
push
nop
xlat
push
cwtl
ss
jae
int3
mov
das
lods
jnp
push
mov
mov
dec
sbb
push
mov
lcall
xchg
sbb
aad
inc
jecxz
add
stos
lds
dec
loopne
cmc
lret
or
popa
mov
out
pop
jg
les
jo
popa
adc
add
jb
std
rcll
adc
adc
mov
push
loope
shrl
cwtl
ja
rcrl
dec
or
dec
clc
dec
sub
sub
je
shrb
xchg
imul
shrl
ja
sarl
add
scas
adc
ds
jp
pop
and
out
fsts
cwtl
mov
es
mov
dec
sub
repnz
xor
cmpsb
mov
or
mov
hlt
in
inc
xor
push
sub
push
cli
and
arpl
and
cld
jg
dec
sbbl
sbb
push
sbb
jp
fcoml
cmp
mov
inc
jbe
rcl
aaa
in
dec
cmp
jno
push
adc
push
repz
adc
gs
fisubl
out
mov
pop
xchg
daa
pushf
pop
pop
iret
pop
arpl
xchg
or
cmp
adc
push
lahf
mov
pushf
call
mov
imul
pop
jns
fbstp
xor
xor
add
sub
add
popa
into
ficomps
pop
mov
popf
leave
jb
mov
cmp
push
mov
lods
pushl
adc
push
lds
addr16
in
adc
fildll
movsb
outsl
xor
jp
sbb
sti
add
call
shrl
mov
movl
cmp
push
dec
adc
mov
cltd
into
adc
mov
bound
or
adcl
test
test
je
and
lods
and
mov
mov
xchg
pop
fisubl
pop
rcr
sub
cmp
in
push
aas
into
out
mov
loope
cmpsl
bnd
jecxz
mov
dec
adcb
push
push
mov
push
jg
outsb
push
lahf
testl
rcrb
mov
sub
sahf
movsl
andb
mov
sub
push
insl
not
mov
push
xor
test
mov
mov
push
or
rcll
idivl
and
in
sub
xchg
vmovaps
in
nop
sbb
pop
stc
fstpl
pop
popf
pop
dec
data16
xchg
dec
xchg
enter
and
pop
pop
stos
sub
sahf
xlat
and
cld
push
mov
fs
fidivl
int3
lret
push
mov
pop
test
test
js
push
shlb
push
sbb
nop
lds
add
push
jecxz
rcrl
jge
mov
cs
pop
or
sti
inc
std
xor
insl
xchg
repnz
inc
push
push
jo,pn
mov
fwait
push
lret
push
mov
jns
sbbb
pop
push
lods
dec
push
pop
mov
shll
push
push
lock
ljmp
adc
sahf
adc
dec
int
push
pusha
outsl
jle
in
mov
fs
out
pop
jnp
jg
fmul
outsb
push
scas
ljmp
inc
and
sbb
mov
popf
rcrl
add
adc
jno
shld
pop
push
xor
stos
icebp
sahf
lcall
pop
push
adc
jno
adc
clc
adc
mov
inc
xorl
fsts
lea
mov
insb
fstl
fcmovu
cltd
mov
push
jge
jnp
enter
xor
cmp
movsl
les
adc
xchg
adc
jge
and
in
out
dec
cmc
cwtl
enter
addr16
xchg
pop
outsb
and
lds
mov
leave
xor
adc
jae
add
mov
dec
movsb
or
jmp
cmp
loop
sbb
pop
push
lods
jnp
push
fcmovnu
sbb
jae
test
shrl
movsb
mov
pop
xor
mov
dec
jl
cmpl
jae
mov
mov
push
mov
popf
pop
jl
scas
in
dec
ljmp
add
insb
inc
bound
and
test
sub
orl
jecxz
ss
les
jg
loopne
xor
mov
jb
test
shlb
sar
adc
push
pop
test
dec
xchg
mov
add
mov
xor
pop
jmp
call
stc
mov
mov
or
mov
push
jge
in
push
aaa
mov
aad
movsb
pop
and
xchg
pop
pop
xchg
aaa
pop
ds
cwtl
dec
mov
inc
adc
mov
jmp
out
pop
in
pop
xchg
stc
mov
fsubl
lea
sub
gs
repz
pop
push
or
adc
sub
aas
dec
jmp
sbb
int3
sub
pop
jecxz
jne
les
mov
sbb
std
out
aas
push
mov
pop
mov
fcoms
pop
dec
iret
call
imul
lcall
arpl
push
and
mov
fcmovne
bound
es
das
pop
jo
cli
and
fstpl
scas
adc
clc
icebp
jle
imul
cwtl
test
fwait
adc
mov
add
lret
mov
mov
mov
jl
or
push
inc
mov
cmp
xchg
xchg
aaa
movsb
sbb
sub
adc
mov
dec
fwait
rol
add
shr
mov
test
addr16
mov
inc
jnp
xchg
test
cmpsb
mov
jns
lods
push
bnd
lret
jb
jae
cmc
pop
pop
adc
jl
fnsave
xchg
cwtl
pop
push
clc
jp
inc
cmp
and
xlat
lea
popa
mov
jb
mov
mov
mov
or
and
push
or
xchg
fldl
es
cld
lods
ljmp
sbb
dec
xchg
pop
in
in
imul
sbb
xchg
fmull
mov
sub
rcrb
shlb
jne
fwait
pop
add
push
inc
fmull
call
mov
dec
in
push
pushf
push
jl
pop
test
into
testb
aam
cmp
in
pop
jne
mov
push
je
cmpsb
pushl
inc
xlat
add
scas
mov
iret
mov
out
sub
rclb
mov
jmp
test
mov
mov
or
push
xchg
mov
pushf
jnp
inc
pushf
jb
mov
lods
sub
jecxz
out
push
jp
dec
push
sub
push
jb
add
test
jo
adc
popa
push
pop
sbb
cmp
mov
fs
imul
insb
xor
lea
dec
and
divb
xlat
jno
xchg
xor
ret
push
xchg
mov
xchg
push
cs
mov
div
xchg
aad
sahf
clc
xlat
rclb
aaa
std
je
pushf
xor
int
cmp
or
daa
dec
or
mov
mov
ljmp
jbe
jae
sub
stc
fadd
pushf
dec
jno
sub
xchg
sub
repz
push
shlb
lret
add
test
sbb
outsb
mov
orb
mov
es
pop
mov
xor
fildl
sub
jbe
faddl
or
loop
das
leave
lock
push
insb
test
cmp
inc
nopl
sbb
sbb
loope
pop
daa
mov
pop
push
jns
xor
mov
pop
sub
cmpsb
cmp
scas
xor
rolb
hlt
leave
xchg
sti
jl
psrlq
in
mov
cmp
add
pop
aam
and
loopne
cmpb
pop
cmpb
jo
in
movsl
mov
fsubrs
repnz
les
push
lods
daa
call
dec
mov
bound
fidivrl
pop
and
xchg
sub
clc
add
jle
add
or
or
div
adc
lcall
mov
lea
and
dec
jns
enter
movsl
dec
sbb
jnp
jl
xchg
dec
jle
sbb
push
jge
cmp
dec
mov
xchg
data16
jb,pt
sbb
ss
cmpsl
jmp
xorl
cmp
push
int3
mov
add
ja
mov
je
mov
fisubs
aad
jno
cmp
xor
mov
mov
sbb
mov
jnp
mov
inc
outsb
mov
or
shl
mov
inc
scas
add
shl
cli
jg
sub
std
cltd
push
jge
aaa
add
test
les
int
pop
test
cmp
pop
mov
or
mov
outsb
xor
outsb
fcmovu
push
int3
pop
push
ds
shl
cwtl
shll
leave
pop
mov
sbb
and
xor
pop
mov
inc
inc
mov
ss
adc
std
repnz
jbe
dec
repz
xchg
sbb
cmp
mov
repnz
scas
sbb
addl
adcb
rolb
adc
xchg
addr16
cmp
and
out
inc
mul
mov
out
add
cli
inc
fadd
xchg
mov
mov
popl
ud1
jmp
or
jne
sahf
ljmp
mov
imull
xor
movsb
ds
test
add
aaa
mov
dec
xchg
insb
sbb
cmpsb
xchg
push
xor
aam
fdivrl
jbe
jl
add
shll
push
mov
iret
xchg
clc
mov
fdivrs
cmp
stos
jnp
lcall
test
push
scas
ss
ds
dec
repnz
xchg
pop
xor
cmove
jnp
xchg
aaa
adcl
mov
scas
jb
fisubl
adc
stos
push
or
adc
test
cmp
loope
mov
in
stos
dec
mov
movsb
jg
ficoml
jne
cmp
and
dec
mov
adc
repnz
outsb
push
cmpsb
in
fisubs
push
xchg
enter
pop
sub
call
sub
mov
mov
jmp
dec
cmp
ror
sbbl
pop
xor
fwait
cmp
sub
loop
dec
xor
push
sbb
je
jp
inc
cmpsb
out
cld
out
inc
loop
mov
jo
xchg
or
stc
jnp
repnz
mov
int
and
mov
inc
imul
je
jp
pop
jb
stc
inc
inc
sub
cmp
mov
and
nop
or
sbb
fiaddl
call
push
add
hlt
shlb
aam
repz
lahf
xchg
stc
mov
xor
add
mov
fwait
and
std
xchg
jge
inc
scas
sub
fnsave
jmp
sbbl
inc
fcomps
bound
adc
daa
loope
pop
pop
data16
pop
mov
cs
and
mov
pop
mov
push
loope
jmp
push
push
inc
aas
stc
jmp
fidivrs
or
scas
test
mov
xchg
fsubs
test
lret
in
int
inc
shll
adc
pushf
cmp
mov
push
mov
dec
repz
arpl
das
xor
lret
dec
xchg
int
cli
in
mov
mov
arpl
xchg
std
lret
je
or
sahf
clc
int3
sahf
or
xchg
les
and
xor
xlat
cmpsl
cmp
sub
push
xor
inc
dec
cmp
xchg
or
inc
repnz
hlt
inc
out
jmp
arpl
hlt
sarl
enter
mov
aam
inc
cmpsl
pusha
cmp
jecxz
jo
jns
stos
pop
mov
cltd
jb
sbb
sub
bound
sbb
imul
cli
jl
stos
rorl
adc
add
lcall
add
pop
adc
aas
and
cmp
orl
sarb
iret
insb
inc
push
sub
int3
xlat
lcall
int3
cmp
jne
insb
and
jl
ss
inc
push
roll
dec
mov
lea
sbb
mov
scas
mov
push
jno
negl
loop
fwait
adc
or
mov
mov
and
dec
lcall
adc
adc
pop
out
or
or
dec
xchg
inc
or
lock
pusha
ja
scas
and
mov
cmp
inc
fbld
sbb
cld
out
dec
adc
je
add
insb
adc
adc
jnp
sub
mov
rorl
pop
fstps
bound
cwtl
cmp
cmc
fwait
cld
aam
loop
xor
daa
sbb
lret
xor
repz
enter
mov
int
mov
adc
adc
mov
in
movsb
lods
or
stos
dec
scas
jl
cltd
xor
fs
sub
jp
mov
shlb
jge
mov
mov
inc
push
push
cmp
pop
jl
xor
push
insb
push
add
mov
push
fstpt
cli
insl
stos
insl
popf
ret
out
out
out
loop
cmpsb
adc
adc
das
sti
xor
shlb
cmp
aas
xor
jmp
insl
adc
sbb
movsl
je
dec
fcoms
mov
push
int
push
fwait
cmp
mov
aam
stos
pusha
mov
and
pop
mov
push
adc
lock
xorl
fcom
inc
mov
inc
and
fsubl
adc
adc
aas
out
lret
cltd
and
add
jo
xor
xor
daa
subl
out
push
push
les
mov
mov
inc
push
cmp
sub
add
pop
and
inc
jmp
es
mov
dec
aad
mov
fsub
aam
das
lret
mov
rol
ja,pt
jns
lods
jae
dec
nop
icebp
mov
js
or
or
add
mov
xor
scas
out
cmp
push
xor
xchg
jns
repnz
or
cmp
jbe
in
jo
push
sti
outsl
adc
add
and
fildl
cmp
xor
idivl
ret
add
out
cmp
fwait
pop
lea
xchg
mov
and
loop
mov
cmp
jmp
pop
mov
lret
xchg
fildl
cmp
pop
rorb
cmp
push
push
adc
jbe
dec
adc
ljmp
sarb
jbe
in
mov
cmp
jl
lret
jae
cmp
push
lea
imull
push
iret
pop
push
das
pop
rolb
push
mov
insb
cmp
push
push
lret
and
cwtl
jmp
pop
jg
repnz
cwtl
fwait
xchg
jae
fwait
mov
mov
mov
clc
mov
sbb
pop
pop
jg
fnstcw
aad
das
into
ret
loope
fldt
xchg
ds
mov
pushf
sbb
lret
and
std
sti
jg
mov
and
mov
push
mov
xchg
xchg
rcrb
mov
xchg
stc
nop
sub
mov
sti
arpl
mov
sbb
mov
test
gs
movl
cmpsb
or
cmp
test
andb
mov
dec
enter
les
sahf
and
movsl
movsb
popf
jp
fidivs
mov
dec
cmp
pop
adc
mov
push
mov
jl
fnstcw
cmp
mov
pop
je
pop
cltd
push
push
adc
pop
and
arpl
stos
in
aad
outsl
mulb
xchg
xchg
movsb
es
test
pop
mov
ss
mov
mov
shlb
movsl
xchg
xchg
xchg
popa
jae
outsb
dec
sub
andb
xorl
inc
repnz
pop
mov
xor
xchg
call
outsl
lods
filds
cld
pop
xchg
mov
add
mov
jnp
cmpsl
inc
xor
pop
ficoml
mov
mov
jo
repz
push
fs
fmuls
jns
sbb
lock
push
lods
frstor
push
fiaddl
xor
in
sbb
sub
mov
push
cmp
aas
cmpsl
iret
fnsave
out
mov
jns
repz
adc
jo
lods
adc
test
sub
stc
mov
in
and
cmp
xor
push
or
sub
dec
sbb
pushf
jae
add
test
lret
sti
addr16
jmp
pusha
clc
lret
gs
xor
and
add
sbb
in
inc
push
mov
pop
push
add
cli
loopne
adc
xor
fisubrs
clc
sbb
xor
jmp
pop
sub
enter
iret
dec
pop
outsl
inc
xor
inc
mov
sbb
outsb
lds
std
loopne
jns
outsb
stos
loopne
in
les
imul
cmp
add
icebp
lock
mov
push
mov
repnz
mov
lret
movsb
cli
cmp
ljmp
mov
mov
xchg
push
ds
lods
mov
fidivrl
and
repnz
mov
pop
call
popa
andl
sub
out
sbb
ja
ds
scas
mov
frstor
xor
cmp
pop
pushf
outsb
cmp
inc
leave
mov
sub
xchg
std
xchg
jle
xchg
mov
add
cmp
insl
mov
aad
sarl
lds
dec
sub
inc
test
clc
push
push
jg
pop
aas
notb
mov
or
push
arpl
in
jne
jb
or
popa
imul
adc
cmp
cmc
push
mov
je
fldl
jmp
iret
dec
or
pop
jecxz
movsl
adc
lret
jns
aad
mov
out
push
lahf
sub
shlb
ret
outsl
std
xchg
cmp
std
es
imul
cmp
fldl
addr16
push
ret
mov
fmulp
les
sbb
inc
inc
sbb
popa
or
repz
inc
ds
push
jae
in
jle
xor
sbb
clc
push
out
xor
adc
push
cltd
xlat
jb
and
or
cmp
push
aam
mov
scas
gs
fadd
ljmp
and
out
daa
lret
int3
and
dec
add
dec
push
or
aad
push
addr16
mov
stc
lret
mov
push
insl
cs
push
jns
adc
pop
dec
sub
push
test
sahf
adc
pop
loopne
jmp
negb
and
sub
mov
fldenv
xor
stos
insb
dec
data16
setl
bound
add
push
and
lea
or
dec
sub
jmp
sti
sahf
outsb
xor
loop
fiaddl
arpl
mov
in
jnp
in
adc
out
push
mov
pop
cmpb
xchg
xor
fwait
mov
jp
mov
and
aaa
and
xor
rcrb
xchg
movsb
jg
sub
aad
js
push
sbb
dec
or
push
sahf
xchg
or
iret
cmp
fcoml
sub
cmp
adc
xchg
xor
out
sub
adc
ret
fstl
mov
jmp
ds
call
inc
mov
je
push
inc
mov
mov
jo
dec
jno
push
push
outsb
cmp
icebp
jp
test
pop
sti
outsb
xchg
insl
and
decl
adc
into
cmpsl
clc
dec
ds
mov
pop
lret
or
xchg
cmp
add
outsb
scas
xchg
fidivl
out
ljmp
mov
sbb
test
test
inc
sbb
mov
mov
mov
shll
in
ljmp
jne
or
mov
cli
jae
mov
xchg
dec
xchg
repz
popf
and
mov
xchg
push
xor
jnp
xchg
pop
mov
and
push
or
das
or
js
push
mov
pop
or
out
jg
and
sub
push
lock
mov
and
cmpsl
adc
mov
dec
movsb
imul
inc
jo
mov
outsb
les
adc
adc
movsl
inc
push
jecxz
bound
sahf
loopne
pop
dec
ljmp
lret
xor
cs
mov
pop
in
sbb
add
pop
loope
lahf
adc
shr
jecxz
dec
sbb
pop
fs
and
lret
fisubrs
stc
mov
popa
outsb
xchg
mov
leave
clc
inc
inc
mov
inc
sti
mov
pop
out
fmull
adc
lret
adc
jo
negl
imul
cltd
inc
add
mov
jmp
sbb
pop
dec
add
leave
mov
outsl
sub
gs
pop
jmp
mov
rolb
sub
sub
sbb
xor
jns
mulb
jl
add
outsl
xchg
sahf
scas
jns
lea
inc
outsb
icebp
inc
push
fisttps
orl
aad
icebp
scas
call
jne
cmp
xchg
and
das
bound
xchg
push
mov
movsl
and
xor
mov
std
cmp
lods
out
in
sub
mov
lret
mov
xchg
sub
jne
out
ret
pop
push
add
inc
cld
cltd
xlat
test
sub
push
adc
out
dec
push
mov
mov
add
aam
insb
or
loopne
mov
scas
fdivs
add
ds
cmc
in
sbb
inc
cmp
movsb
or
addl
outsb
repnz
jge
or
test
push
push
push
adc
ret
mov
push
pusha
jb
push
xchg
sbb
push
loope
iret
sub
shl
pushf
scas
popf
or
fstl
adc
xchg
repnz
jnp
fidivrs
idivl
push
leave
cmc
xchg
cmp
jns
ret
xor
jmp
mul
scas
or
imul
pmuludq
ja
scas
push
dec
jo
fsts
cmp
ret
and
pop
cmpsl
add
sub
pop
and
jge
adc
jp
pop
or
shr
push
dec
xchg
iret
in
outsb
pop
imul
pusha
bound
cmpsl
ja
imul
ret
dec
cld
iret
or
repnz
cmp
rorl
jge
lret
sub
jmp
lahf
cmc
js
nop
push
jle
loopne
mov
or
mov
enter
outsb
mov
sub
dec
add
in
stos
push
or
fnsave
ret
lcall
and
ja
inc
cltd
bound
test
out
lods
fidivl
pop
fmul
aad
jge
xchg
adc
or
out
lods
leave
test
mov
xchg
adc
mov
mov
push
popf
lods
adc
rclb
adc
sbb
fucomp
sub
fimull
inc
dec
lods
ret
popa
mov
xchg
sub
mov
adc
dec
insl
sbb
sub
test
cmp
dec
std
add
aaa
inc
inc
dec
loopne
iret
pop
shl
and
xchg
test
adc
mov
dec
pop
popa
and
aad
hlt
div
rorb
adc
xchg
inc
leave
ss
out
loope
cmpsl
mov
mov
dec
mov
andb
int
and
movsb
insb
jo
xchg
and
cmp
hlt
inc
mov
pop
xchg
or
aaa
pop
push
fnstcw
mov
jne
fs
fwait
adc
cmp
mov
mov
js
adc
cmp
scas
cli
mov
jbe
xchg
gs
pop
test
mov
arpl
dec
test
das
fs
outsl
sub
mov
sub
push
jbe
pop
pop
std
jne
inc
sahf
hlt
or
jmp
jae
cmc
push
std
and
adc
inc
mov
lcall
sahf
popf
push
mov
popa
movsl
repz
jl
mov
sub
loope
ljmp
push
in
dec
push
xchg
enter
lcall
mov
inc
call
mov
in
mov
mov
inc
cmp
jle
xorl
add
mov
adc
andl
mov
pushf
mul
pop
lcall
add
mov
popf
stos
sub
fiadds
pushw
test
fdiv
sti
clc
or
mov
aas
xor
cmp
cmp
aas
or
mov
test
fnsave
mov
mov
es
jne
and
mov
adc
inc
dec
xorl
push
stos
js
movsl
pop
test
sub
push
cmpsb
cltd
fcmovb
imul
push
andb
imul
call
das
scas
lods
xor
in
mov
hlt
xchg
sub
addr16
jmp
stos
cmp
int3
mov
lock
jmp
push
es
in
adc
cltd
aaa
mov
int
aaa
mov
ljmp
inc
inc
xor
jecxz
mov
xchg
or
movsl
sbb
pop
mov
inc
rorl
push
mov
push
fnstcw
orl
mov
mov
adc
movsl
push
addr16
rolb
movl
mov
fnstsw
repnz
repz
out
divb
mov
lds
out
hlt
sbb
xor
subb
mov
imul
xlat
insb
cmpsl
and
cld
push
mov
mov
int3
enter
scas
insb
sbb
add
or
inc
jmp
stos
pop
loope
stos
jns
jb
nop
enter
mov
xor
dec
flds
ret
cmp
ret
outsl
test
sbb
and
pop
jnp
dec
mov
es
lcall
in
lret
or
mov
jae
lcall
xchg
test
adc
and
cli
lods
mov
test
scas
push
xchg
lcall
int
cltd
shlb
movd
das
stos
push
inc
cmp
jle
clc
mov
into
mov
or
je
cwtd
shlb
fsubrl
orb
mov
and
filds
add
int3
jne
daa
pop
xchg
jp
scas
or
sub
cwtl
in
xchg
sub
cmp
fwait
dec
mov
mov
push
mov
mov
push
cmp
jp
mov
pop
idivl
xor
shr
in
mov
sbb
aaa
pop
aad
jno
into
mov
pop
xchg
pop
roll
mov
push
cld
sbb
and
cmpsb
movsl
jmp
rcrb
ret
xor
cmp
ljmp
mov
mov
in
cmp
sbb
fsubrp
pop
adc
inc
stos
inc
ss
adc
cmp
mov
ret
fildll
dec
cld
xchg
inc
inc
lcall
int3
add
mov
mov
pop
je
xor
rorb
and
sub
loop
jl
adc
jge
out
repz
clc
test
xchg
iret
cli
or
popa
test
and
rorl
arpl
or
in
cmp
xor
sub
call
loope
lods
aad
fwait
lcall
push
lock
push
pop
push
lock
xor
push
cld
xchg
divl
movsb
scas
dec
push
dec
loop
sbb
in
adc
dec
xor
es
out
or
adc
jb
rorl
push
adc
cmpsl
sub
push
xlat
mov
jae
jno
insb
leave
js
test
lods
test
sub
lret
stc
inc
dec
jno
adc
xor
mov
sarb
jb
add
test
mov
sub
add
add
add
loopne
and
pop
addl
push
imulb
cli
sbb
sub
inc
cmp
lea
cwtl
xor
xchg
pop
cmc
dec
cmp
outsb
int3
inc
or
mov
inc
insl
lret
fisttps
mov
hlt
inc
movsl
imul
mov
aas
inc
xchg
scas
fs
pushf
lcall
jae
xor
adc
mov
cmpsl
rorl
movsb
mov
cli
and
xchg
jmp
hlt
negb
xchg
sbb
jge
ficomps
scas
js
fimull
cmp
in
pop
mov
das
pop
out
mov
xchg
loop
stc
in
dec
cmc
lods
in
pop
cltd
icebp
pop
jmp
shll
cli
or
ret
sbb
ficoms
mov
sar
fs
pop
sbb
add
ret
adc
imul
xor
xchg
pop
push
loopne
jnp
mov
or
sbb
lcall
and
test
mov
mov
adc
and
cmpsb
mov
add
push
mov
movsb
inc
jge
mov
sahf
jecxz
xchg
out
jp
mov
hlt
mov
loopne
clc
ljmp
ja
leave
add
xchg
andb
int3
sub
add
cmp
cwtl
fisubs
push
frstor
adc
loope
pop
adc
pop
ds
imul
mov
xchg
repnz
mov
sarb
push
lahf
or
mov
into
mov
pushf
andb
adc
mov
fdivrl
imul
push
jg
mov
outsb
sbb
jl
mov
push
arpl
jb
cmpsb
sahf
pop
enter
lret
fisttps
mov
shlb
test
scas
inc
sbb
decb
sbb
push
add
popf
dec
or
lret
mov
out
leave
imulb
sti
out
mov
lock
movsl
cmp
iret
add
jnp
or
xchg
cmpb
fsubrl
push
inc
xor
addr16
ljmp
sahf
fistpll
add
cltd
movsl
cld
roll
test
mov
dec
out
cmp
inc
adc
mov
adc
mov
jecxz
adc
loope
sub
mov
inc
adc
sbb
cmp
add
and
out
pop
dec
imul
sub
lahf
and
imul
inc
shlb
cmpsb
pop
int3
xchg
inc
outsb
leave
cld
mov
popl
or
mov
add
aaa
pushf
xchg
loope
add
insl
inc
cld
mov
rorb
fnstenv
xchg
add
sbb
mov
sub
xor
lret
stos
dec
xchg
lock
cmpsl
testl
pop
scas
adc
out
add
adc
mov
ret
jae
js
dec
lods
clc
jae
xchg
add
xor
inc
fsubrs
test
lods
lds
loopne
adc
push
loop
aad
movsb
push
addb
pop
movsb
adc
out
jne
dec
mov
mov
popa
movsl
sub
int
or
push
cmc
dec
bound
mov
loope
fimull
pop
iret
fists
mov
ret
dec
and
inc
repnz
in
ss
jns
or
jmp
add
filds
repnz
stos
push
faddl
xchg
push
mov
cli
inc
ljmp
and
xchg
cld
cmpsb
cmc
mov
sbb
das
out
je
popa
mov
rcrl
xchg
mov
xchg
adc
fidivl
dec
imul
mov
mov
inc
imul
je
dec
push
add
cltd
dec
adc
xchg
pop
fmull
fisttps
sahf
cli
dec
leave
mov
insb
cmc
iret
and
mov
dec
xchg
call
pop
pop
and
iret
rep
into
enter
cwtl
push
xor
data16
mov
push
iret
jp
popa
test
shlb
aam
pop
xchg
dec
sub
mov
out
aam
rcrl
loopne
out
dec
xor
pop
or
inc
mov
outsl
sbb
mov
cmp
data16
outsl
shlb
fdiv
dec
out
pmaddwd
mov
pop
or
pop
and
jmp
lret
push
out
jns
fists
leave
cmc
loope
scas
dec
into
push
ret
call
jle
jbe
sbb
sbb
in
jmp
sbb
xchg
int
add
js
out
pop
inc
xchg
arpl
sbb
xor
orl
jmp
arpl
fldl
ficoml
fidivrs
push
daa
mov
lcall
push
imul
int
aaa
and
push
xchg
loope
in
jne
and
stc
dec
dec
aas
divb
stos
aas
ljmp
mov
mul
enter
sbb
popl
mov
inc
aad
shl
sub
mov
push
jmp
int3
sub
in
iret
sub
aad
adc
sbb
iret
dec
jns
dec
dec
sub
sbb
dec
jp
xchg
shll
or
push
jge
jne
aaa
lret
int3
inc
mov
mov
xchg
out
cld
lcall
dec
push
repnz
mulb
dec
fcmovbe
cmp
mov
pusha
push
jb
inc
out
popf
inc
scas
inc
sub
cmpsb
xor
xchg
out
rcll
fwait
sbb
cmc
je
sub
bound
hlt
ret
pop
sub
movsb
shrl
in
out
mov
mov
clc
adc
jb
outsl
aam
dec
daa
jne
cltd
sbb
xchg
and
mov
sti
dec
jl
test
xchg
dec
cmpsl
xor
inc
rcrb
jmp
gs
ljmp
mov
movsb
aas
nop
inc
dec
mov
xorl
imul
mov
adc
mov
ds
pop
inc
mov
scas
adc
adc
iret
je
xor
push
mov
pop
les
mov
popf
sub
lock
xor
adc
lock
mov
test
inc
and
sbb
mov
popl
pop
jns
fcomip
aaa
xchg
out
mov
lret
test
adcb
repnz
icebp
inc
push
push
ret
pop
jmp
fisttpl
mov
jmp
stos
and
inc
ffree
fldlg2
sub
cli
aam
adc
movsb
insl
cmp
test
cmp
and
cli
xor
fmull
xchg
jnp
xlat
sbb
bndldx
dec
fmuls
mov
fwait
movsl
lahf
aaa
adc
dec
and
jbe
mov
push
imul
movsb
pusha
sbb
or
pop
mov
fxch
outsl
cmp
mov
cmpsb
jno
imul
dec
push
loopne
adc
push
in
push
jno,pn
and
cmp
lcall
pop
outsb
call
adc
push
jb
loope
lock
adc
push
js
sub
add
dec
sbb
inc
pop
mov
cmpsb
psrld
xor
and
in
loope
lods
popl
pop
lods
hlt
nop
in
call
out
adc
pop
int3
add
sbb
sub
call
imul
aaa
mov
sub
int
cmc
push
mov
lret
clc
lahf
pop
in
jge
or
jmp
scas
push
test
adc
loope
push
out
mov
sbb
jns
mov
or
mov
add
or
push
das
fists
inc
js
sbb
inc
jge
and
xchg
and
movsl
adcb
imul
hlt
or
mov
lret
dec
pop
aad
xchg
xchg
out
xchg
outsb
or
inc
dec
mov
nop
inc
adc
jmp
mov
mov
inc
dec
fsubs
add
adcb
jg
xchg
stc
pop
faddl
and
cmp
fidivs
jno
mov
mov
std
lods
add
ror
out
mov
je
addl
jnp
pop
adc
stc
adc
push
shrb
aad
xor
mov
sbb
mov
adc
lods
stos
insl
cmp
bound
icebp
xlat
movsl
loopne
lret
lods
add
jmp
add
scas
pop
fs
push
gs
lret
adc
ret
adc
pop
clc
push
inc
jmp
pop
push
push
xchg
dec
push
in
insb
or
push
push
cmp
cs
sbb
inc
arpl
inc
pop
bound
add
fdivrl
push
sub
mov
fs
xchg
lahf
xor
jbe
inc
add
call
adc
int3
shlb
in
mov
ret
fs
daa
rclb
lcall
outsl
inc
leave
xchg
pop
sub
pushl
mov
mov
push
jb
add
cltd
add
je
rclb
push
xchg
lret
add
mov
lock
jg
outsb
dec
inc
cmp
leave
pop
icebp
fisubs
dec
add
cwtl
mov
jnp
cmpsb
into
pusha
imul
mov
outsb
xchg
cltd
shll
xor
stos
loop
dec
xchg
imul
lock
jb
sti
int
sub
je
xchg
das
movsl
fwait
jno
dec
xchg
push
outsl
cmp
cmp
pop
repz
fsubs
adc
in
mov
fisttpll
adc
cmp
xchg
sub
inc
inc
add
outsl
push
jns
lods
xor
push
stc
sub
pop
cmp
cs
data16
push
sub
bound
das
test
out
sbb
popf
outsl
inc
nop
sub
xchg
xor
xchg
add
bound
mov
pop
add
push
fcmovu
lea
mov
add
scas
insl
cmp
std
in
add
out
xor
jecxz
push
in
mov
lods
pop
fldt
sub
mov
cmc
sti
push
inc
push
add
orl
int
ds
insb
push
jmp
cli
sti
cwtl
in
popf
jmp
mov
inc
loope
and
dec
repz
in
sub
fsts
lds
jl
inc
dec
mov
leave
sbb
out
int3
mov
push
add
add
pop
push
fistps
xlat
fcmovu
fimull
push
mov
divb
cwtl
es
mov
gs
popa
push
xchg
push
or
fwait
mov
push
inc
add
mov
leave
vcmpps
sub
or
jle
stos
xor
repnz
sub
mov
cmpsl
dec
mov
in
jp
sub
xchg
je
js
rcrl
jle
mov
insb
push
loope
sbb
mov
or
das
jp
adc
leave
pop
xchg
lods
and
jb
int
js
les
hlt
in
mull
jbe
scas
sarl
and
ret
sub
xor
add
cwtl
push
call
sub
int3
repnz
pop
rcr
xor
cltd
cli
push
mov
rorl
in
xchg
popf
xlat
cmpsb
lock
inc
pop
mov
and
push
cmp
and
outsl
insl
cwtl
loop
das
lcall
stc
sub
ljmp
adc
out
sub
inc
push
or
inc
adc
xchg
pop
mov
inc
mov
xor
insl
mov
movsb
into
sti
xor
mov
add
inc
fstpt
lods
mov
fwait
add
scas
test
daa
test
inc
mov
push
mov
inc
mov
lret
stc
int
and
stos
cld
stos
pop
add
push
cmp
jle
push
cmp
lret
sbb
xchg
shl
fsubl
or
jle
in
mov
pop
arpl
dec
int3
xor
inc
jmp
int
sub
mov
mov
pop
nop
pop
jge
sarl
in
inc
loopne
cmp
mov
imul
push
add
pop
or
cmp
xor
pop
xchg
mov
loopne
fidivrs
inc
scas
and
inc
jno
into
jnp
mov
xchg
xchg
pop
pop
jne
sbb
xchg
sub
mov
xchg
fstps
repz
xchg
jmp
cmp
test
mov
cwtl
ss
push
mov
in
adcb
adc
js
orb
fldcw
add
mov
lret
fcmovnbe
test
cmc
dec
imul
adc
sti
mov
xchg
ret
mov
mov
push
add
adc
movsl
inc
pusha
lcall
out
mov
cmc
fwait
push
mov
jl
test
in
loope
pop
xorl
mov
outsb
push
push
pop
stos
pop
inc
nop
xchg
test
cwtl
xor
filds
jb
mov
out
fsubs
push
add
lcall
into
leave
lcall
jo
insb
push
movsl
fsincos
fwait
mov
js
push
add
rclb
sub
lcall
dec
xor
jae
lds
test
xor
cltd
jg
pop
pop
xor
mov
xor
inc
and
xchg
shrb
test
mov
lods
xlat
mov
xlat
mov
cmp
popa
xchg
or
clc
test
push
ss
xorb
pusha
xchg
in
push
lret
lahf
and
stos
movmskps
int3
dec
jp
adc
jecxz
ja
js
mov
sub
daa
in
subb
jmp
cltd
xchg
mov
out
mov
jns
out
sub
xchg
sbb
pop
sbbb
xlat
nop
push
xchg
adcb
sub
jecxz,pn
shll
aad
sbbb
lret
ret
testl
test
nop
xchg
sbb
aad
add
clc
scas
addb
sbb
xchg
jmp
inc
sub
jmp
sbb
xchg
sbb
sub
in
pop
inc
cmc
push
fisttpll
pop
movsb
push
dec
mov
jno
orl
aad
in
andb
pushf
fstps
and
leave
dec
out
leave
ljmp
insl
cmp
add
gs
aam
ja
dec
mov
push
mov
mov
jnp
or
cmp
sbb
push
sbbb
out
insl
xor
pop
sbb
and
fwait
rorl
push
test
sbb
xor
pop
enter
xlat
pop
mov
out
pop
sbb
xchg
fwait
inc
or
push
out
or
push
mov
ljmp
or
data16
rcrl
xchg
out
adc
dec
movsb
out
imul
cmpsb
fsubrl
nop
dec
ret
rcl
push
mov
pop
push
filds
jecxz
push
test
mov
or
mov
mov
subl
mov
pop
shlb
adc
jb
incb
mov
imul
in
mov
sbb
pop
fimuls
xchg
in
sub
push
lods
sbb
les
mov
subb
adc
inc
mov
stos
jno
insl
int3
dec
dec
loop
call
mov
xchg
mov
insb
ret
out
flds
adc
mov
in
test
cmp
andl
sbb
cli
or
pop
rorb
fiadds
dec
xchg
adc
cmpsb
fmul
lahf
repz
xchg
hlt
std
rcl
dec
mov
push
jecxz
jnp
add
mov
sbb
lcall
jne
mov
mov
cmp
inc
sbb
cmpsl
testb
jbe
pop
ret
dec
push
cmovle
mov
jns
mov
push
shlb
sti
push
loop
sub
sub
pusha
push
popa
mov
lea
sub
xchg
jns
jnp
push
mov
inc
xor
adc
hlt
push
les
imul
pop
xchg
jo
mov
shlb
iret
cmpb
out
out
add
loope
arpl
or
mov
int3
cmpsl
jb
pop
push
or
ja
ret
in
sub
jae
push
dec
mov
in
push
call
or
arpl
jmp
adc
push
xlat
or
cmp
cmpsb
push
or
lret
sub
pop
cmp
and
aam
inc
dec
or
pop
push
mov
nop
jno
lock
jmp
dec
les
jecxz
ja
push
imul
xor
sarb
ss
sbb
fimull
mov
cltd
int3
mov
sahf
cmp
cmpb
sub
ds
fcoms
mov
xor
fwait
pop
inc
test
cld
out
or
clc
cmpb
mov
mov
idivb
inc
mov
sub
shlb
and
push
push
dec
dec
lods
xor
in
xor
jmp
cmp
repnz
push
jb
mov
jp
rolb
push
push
movsl
push
lds
icebp
rcl
push
sarb
ficoml
insb
adc
mov
nop
lea
ljmp
inc
stos
cmp
popa
xor
loope
rolb
jae
inc
mov
popa
fnstcw
dec
sbb
adc
inc
add
adc
adc
adc
cwtl
loope
or
test
addr16
xor
jb
push
es
ror
ljmp
pop
add
inc
loopne
jle
dec
and
lods
pop
jb
cs
cmp
imul
sbb
or
es
adc
imul
mov
ljmp
mov
daa
sbb
push
out
push
pop
xor
mov
adc
das
sub
negl
adc
xchg
push
sub
and
cmp
lret
lods
decl
sar
mov
push
insb
repnz
mov
insl
loop
cwtl
and
insl
push
add
push
jne
lcall
sti
sbb
cmp
cmp
push
sub
push
mov
mov
pusha
xor
dec
out
jl
pusha
xor
or
jbe
cmpsb
or
aam
in
sti
sbb
jnp
fs
addl
jnp
dec
add
call
icebp
aas
idivl
test
sbb
mov
test
sarb
stos
mov
mov
ss
jecxz
xor
imul
fwait
movb
aas
xor
jne
addr16
sbb
in
or
in
adc
test
inc
mov
cmpsl
mov
cltd
pusha
lret
stc
xor
dec
sbb
jmp
arpl
pop
dec
inc
mov
stos
ret
nop
fisttpll
cwtl
mov
mov
pop
imul
mov
xchg
pxor
pop
sub
mov
mov
xchg
arpl
push
test
pop
ret
push
cltd
aad
loop
imul
scas
push
jp
repnz
repnz
and
das
push
pop
insb
and
mov
clc
fimuls
or
jbe
fwait
xor
sbb
push
sahf
aaa
lock
popa
and
fstp
arpl
mov
mov
cmpb
sbbl
pop
push
test
gs
xor
sub
and
adc
mov
sbb
xchg
jbe
in
dec
outsl
jns
mov
mov
dec
mov
push
jge
iret
xchg
mov
ljmp
pop
ljmp
dec
inc
jmp
ret
push
mov
add
or
mov
lahf
cld
and
fnstsw
inc
mov
lds
repz
shll
jo
and
mov
mov
cmp
fcomps
ds
adc
out
cmp
mov
or
jno
jb
mov
xchg
sbb
sub
pop
xchg
lcall
jb
sub
add
xor
or
jno
and
and
std
add
not
mov
test
repz
jbe
loopne
andb
adc
dec
sub
out
dec
fidivrs
sbb
mov
dec
ss
loop
pusha
or
mov
or
enter
test
scas
ds
adc
pop
inc
data16
iret
jg
xchg
dec
ficomps
sahf
adc
enter
les
daa
int
and
fsub
aad
je
xor
xor
lock
dec
test
test
mov
aam
xchg
in
je
lret
jno
dec
add
jp
movsl
les
cmpsl
ds
mov
mov
lcall
jge
cwtl
gs
fcomi
test
inc
clc
inc
mov
lret
xor
aad
add
push
ficoml
out
inc
inc
and
dec
xor
jbe
rcrb
int3
sbbb
sub
pushf
cs
xor
jmp
popl
pop
lods
ret
push
ret
ficoms
sbb
xchg
mul
pop
pop
adc
pop
adc
icebp
jns
aas
insl
loope
jb
mov
int
push
cwtl
sti
add
sub
cltd
adc
jecxz
or
sub
mov
aas
and
lret
and
ret
mov
mov
fcompl
xchg
fisttps
pushf
add
adc
add
das
outsb
cmp
andl
in
mov
lahf
ret
mov
ja
mov
mov
das
jg
inc
and
lock
out
ja
jnp
scas
test
jae
data16
scas
cld
arpl
push
mov
lret
je
in
jp
shlb
movsl
or
loopne
mov
xchg
pop
out
sub
jl
test
mov
lods
call
xor
mov
cmp
dec
sub
ret
jo
loop
add
inc
icebp
test
test
stos
mov
fnstenv
decb
xlat
pop
sub
int
sbb
mov
pop
mov
dec
cli
push
jb
lods
jp
cmp
ja
cmp
inc
push
pop
lods
or
popf
out
popa
loope
ja
dec
imul
insb
sbb
mov
fcomps
leave
out
lds
inc
jne
les
call
push
idiv
scas
popf
stos
mov
push
roll
test
pop
in
mov
into
dec
mov
push
jo
mov
aad
sbb
push
dec
movsb
es
in
mov
outsb
sbb
lcall
xlat
pop
repz
lret
je
ss
pop
xchg
and
loopne
jmp
sub
mov
dec
insl
sti
rcll
xor
inc
adc
sub
loope
cli
push
adc
xor
call
ja
mov
test
inc
xchg
fs
lds
ficomps
xor
popf
dec
call
fwait
push
xchg
pop
ds
cmp
pushf
prefetch
mov
xchg
xchg
sbb
into
mov
dec
out
imul
icebp
jg
js
movsl
cmp
ljmp
dec
jbe
clc
and
dec
iret
mov
push
sbb
lds
sti
push
pusha
or
mov
mov
in
mov
xchg
mov
xchg
testl
pop
xchg
int
mov
aad
pop
in
movsb
jp
and
lea
inc
or
adc
dec
mov
sub
in
pop
sbb
lcall
mov
inc
mov
push
pop
xchg
mov
push
ret
repz
dec
xorb
pop
lret
fs
jecxz
inc
pop
sub
popf
mov
out
test
mov
jbe
andl
adc
cltd
int3
clc
pop
rcll
iret
push
stc
mov
xor
popf
pop
es
xor
add
repz
ss
sub
push
iret
mov
sbb
shrl
jae
movsb
mov
jecxz
shll
mov
mov
test
dec
xchg
jp
pop
clc
aaa
or
testb
add
jno
jle
movsl
scas
int3
ffree
out
lahf
test
out
add
xor
shr
pop
jb
adc
mov
rcrl
shlb
push
jmp
mov
mov
push
xor
dec
sub
xchg
push
inc
or
mov
or
push
push
push
sub
lock
lahf
imul
push
push
mov
sub
pop
cwtl
push
dec
fwait
mov
out
pop
inc
xor
sub
sbb
imul
dec
mov
shll
pusha
adc
les
iret
arpl
out
adc
push
inc
in
or
jg
pop
daa
lds
imul
mov
or
cltd
ret
add
cmp
push
jno
sti
cmpsl
pop
jnp
stc
jnp
xlat
leave
pushf
shlb
push
xor
add
fs
jl
ret
pop
ret
cld
pop
pop
sbb
mov
add
inc
jno
mov
sbb
or
push
mov
dec
pop
frstor
loopne
push
push
mov
jle
jecxz
mov
pop
jle
push
into
xchg
test
xor
out
ficompl
test
sub
xchg
cmpl
mov
cmp
cwtl
gs
xchg
sar
mov
stc
and
xor
push
cwtl
adc
lahf
pop
or
sbb
cmp
in
dec
adc
je
test
mov
xchg
mov
cmp
lea
test
pop
xchg
xchg
add
cwtl
out
xchg
cmp
xchg
addr16
jmp
sbb
in
icebp
fdiv
lods
add
lahf
xchg
jns
ds
dec
repnz
xrelease
out
jge
xchg
xchg
pop
ja
fidivrl
lock
push
repz
cs
in
lcall
xchg
and
inc
inc
jl
push
pop
dec
je
mov
cmp
push
pop
mov
or
in
shll
mov
jnp
mov
fdivrs
rolb
bound
enter
test
pop
test
push
fistpll
jg
lods
xchg
cmp
dec
cmp
fwait
mov
xorl
add
addr16
roll
fcmovnbe
mov
inc
movsl
mov
inc
fs
or
sbb
fisttpl
sub
ret
loop
adc
push
addr16
test
xchg
push
push
test
rcll
pop
dec
mov
in
or
inc
push
jno
mov
adc
or
push
push
stos
aas
loopne
lret
jle
loopne
addr16
lods
xor
cwtl
pop
pop
enter
daa
cmp
inc
jg
ret
xor
jg
xor
dec
dec
in
das
jnp
rcll
test
sub
xchg
loop
flds
es
test
sbb
push
das
int3
dec
test
sbb
addr16
aaa
dec
pop
sbb
gs
dec
repz
into
inc
sahf
pop
cld
jmp
add
jecxz
adc
xchg
ja
jns
pop
fiaddl
mov
cwtl
dec
lods
add
insl
fdivrs
into
xchg
push
xor
lret
or
add
and
adc
sbb
cmp
mov
bound
jmp
nop
movsb
xor
testl
fisttps
not
sub
into
adc
dec
iret
insb
mov
sub
fdivs
das
and
repz
movsb
nop
cmpl
imul
lahf
pop
sub
push
xor
sbb
dec
inc
sub
pop
fldenv
lods
stos
sub
pop
iret
xchg
pop
jp
cli
push
xchg
xor
cmp
mov
cs
jl
jecxz
sub
lahf
and
pop
jle
xor
push
leave
dec
enter
add
out
int3
push
pop
lods
imul
and
pop
data16
mov
or
into
jbe
cmpl
and
mov
in
mov
or
add
xchg
inc
sub
repnz
mov
mov
add
jecxz
aad
cmpsl
xchg
ja
adc
xchg
pusha
fadds
cmp
jmp
mov
jo
xor
mov
mov
sbb
repnz
xor
hlt
clc
sub
cli
andb
push
mov
inc
jae
jecxz
dec
movsb
xchg
std
xchg
jb
test
jl,pn
in
cmp
test
pop
fimull
in
xchg
adc
and
jg
inc
and
pop
cmp
sahf
xchg
xlat
outsb
pusha
es
mov
int
xor
jo
xlat
jne
data16
xchg
cmpsb
jecxz
fadds
xor
insl
lods
pop
ffreep
jno
divl
adc
mov
loop
adc
cmp
push
pop
jp
pop
mov
in
jp
mov
mov
or
loop
mov
or
push
pop
mov
pop
ss
hlt
sbb
stos
sub
push
push
in
dec
dec
out
addb
push
mov
cmp
mov
jge
mov
mov
lret
jg
add
or
rcrb
mov
sbb
mov
scas
mov
pop
push
nop
in
imull
mov
ja
and
rcr
insb
cmp
cwtl
negl
xchg
mov
mov
insb
das
repz
mov
daa
stos
test
aas
xor
xchg
inc
jge
adc
lock
mov
out
mov
jne
mov
imul
sub
sub
nop
aaa
lahf
cmpsb
ret
decl
mov
push
mov
push
dec
test
inc
xchg
fiadds
dec
lret
pusha
pop
repnz
movsb
gs
rol
aad
pop
xor
add
int3
call
push
jae
enter
in
sub
scas
sahf
lods
lahf
lea
out
mov
push
and
jmp
cmp
lods
pop
sbb
iret
xchg
or
inc
and
jbe
rcll
push
mov
jns
aad
test
das
or
lods
fs
xchg
mov
mull
jnp
xor
pop
xor
mov
popf
adc
xchg
mov
shlb
out
arpl
mov
das
popa
mov
adc
push
cmp
fcmovnu
mov
jmp
inc
in
jecxz
xchg
stos
lds
pop
fadd
push
rclb
or
mov
icebp
xchg
xchg
movsb
in
dec
jg
mov
jp
or
cmc
outsb
jne
mov
mov
test
xor
pusha
cmp
mov
and
movsl
jo
imul
scas
scas
adc
sbb
xchg
cmp
mov
push
push
push
push
rclb
sub
ja
sbb
test
lock
out
sbb
fs
pop
sahf
jbe
jle
daa
jecxz
jge
mov
iret
jle
jecxz
cmpsl
jge
sbb
xorb
cmp
les
inc
xor
push
sub
and
fadds
jno
enter
hlt
in
in
push
xchg
xchg
pop
xchg
fmull
dec
imul
clc
lds
push
shl
data16
scas
sbb
test
dec
jae
and
inc
xor
pop
add
in
cmpsb
pop
or
mov
jo
aaa
xchg
and
adc
mov
pop
enter
inc
pop
inc
mov
jp
in
pop
movsb
aas
in
andb
mov
pop
push
aam
mov
insl
icebp
xlat
nop
mov
mov
jg
sub
daa
cmpsb
aaa
mov
in
sub
cmp
ljmp
aaa
addr16
enter
mov
sbbb
jnp
cld
xor
std
xchg
sbb
mov
jp
add
mov
adc
push
xor
sub
or
xchg
js
rorb
mov
inc
je
adc
rolb
push
mov
out
leave
out
shlb
mov
push
jns
insl
mov
mov
stc
cmp
popf
movlps
mov
sub
mov
gs
jno
mov
sti
das
iret
push
sub
push
pop
test
adc
aam
push
adc
iret
lea
and
adcl
cmp
or
jne,pn
cmpsb
inc
int
mov
push
add
sbb
push
xchg
shrl
mov
xchg
fistpl
mov
out
lea
push
out
mov
and
mov
lods
jmp
mov
push
sub
jp
xchg
pusha
inc
adc
lcall
dec
movlhps
mov
or
out
fidivl
pop
pushf
xchg
lock
jl
mov
jne
inc
outsl
ret
sub
mov
loop
lock
and
pop
jnp
js
push
push
mov
insb
pop
daa
rcr
sahf
mov
xor
mov
add
mov
adc
cmp
lea
cltd
into
xchg
iret
in
adc
ljmp
sub
cmpsl
call
xchg
popa
loope
addr16
dec
aaa
mov
mov
test
aas
ljmp
push
sarl
pop
lea
lds
dec
xchg
adc
sub
sbb
xorl
test
or
shlb
mov
mov
and
mov
mov
fimull
insl
fcompl
pop
jno
ret
addr16
jle
xchg
mov
inc
jge
jo
jl
push
inc
repz
add
mov
inc
clc
cld
jle
popfw
inc
es
inc
push
mov
mov
rcrl
push
scas
mov
std
sbb
fsubl
xor
mov
loope
test
leave
dec
divl
sub
sub
icebp
adc
mov
pop
xor
sub
mov
ret
mov
add
std
lcall
call
imul
fs
inc
mov
in
mov
xchg
adc
pop
icebp
loope
inc
outsb
inc
call
pop
and
int3
add
aas
jge
int3
fsubr
and
repnz
inc
jb
out
pop
xor
test
pop
push
add
insl
sbb
or
cli
sahf
or
dec
pushf
mov
lret
xor
ret
ja
iret
clc
dec
xor
data16
pop
xor
int3
pop
shlb
repnz
inc
pop
push
pop
cmp
cmp
test
leave
inc
mov
fcmovnb
rcr
push
mov
pusha
in
loop
push
push
fwait
je
addr16
cmc
inc
lods
test
jne
add
cmpsb
or
mov
cmpsl
add
in
push
iret
bound
stos
mov
mov
scas
outsb
in
cmpsl
int
rolb
inc
jmp
sti
or
sbb
inc
fdivrs
icebp
push
cld
dec
or
dec
mov
sbb
push
clc
pop
inc
sub
dec
mov
gs
sti
adc
xor
pusha
xchg
nop
decb
or
arpl
mov
fdivrl
ja
adc
jecxz
push
jne
adc
push
les
inc
inc
push
fimull
js
mov
ljmp
xor
inc
aad
mov
adc
or
ds
lret
mov
inc
pop
pop
mov
lds
inc
fisubl
mov
ljmp
pop
out
movsb
loop
lods
add
inc
add
and
lret
mov
inc
xor
adc
mov
test
sbb
dec
test
stos
sub
dec
jns
orl
pop
test
enter
and
outsb
mov
dec
lret
and
sti
jmp
pop
pop
dec
fadds
dec
loop
or
outsb
cli
xchg
sbb
lock
test
fwait
cwtl
cmp
int3
cmp
push
mov
repz
loopne
jae
pusha
mov
jb
sahf
xor
mov
decb
shlb
arpl
add
xchg
loope
test
mov
push
lods
outsb
add
flds
fsub
mov
xchg
decl
xor
mov
push
jle
push
mov
aas
dec
push
outsl
dec
pushf
das
pop
jl
in
insb
sbb
imul
jno
aas
out
movsl
xor
mov
ds
pop
push
sbb
xchg
cltd
add
add
enter
mov
insl
or
insl
xchg
stc
imul
lret
stos
mov
ljmp
xlat
jg
or
loop
xchg
test
pop
jecxz
stos
enter
pop
loopne
movsl
repnz
fcoml
ds
fcomi
repz
jb
movsl
clc
mov
shlb
jg
bound
mov
into
xor
adc
mov
insb
dec
adc
in
jge
rclb
pop
pop
add
mov
std
jno
nop
mov
fcmovb
jmp
daa
cmpsl
clc
stc
das
push
push
dec
je
fisttpl
das
lcall
mov
mov
stos
fs
movsb
ja
jne
and
dec
push
push
push
inc
lret
dec
in
xlat
stc
dec
push
mov
cmp
mov
inc
mov
out
das
stc
xlat
repz
xor
adc
sub
aam
addr16
js
mov
pop
pop
cmp
and
std
push
mov
in
out
mov
sub
add
mov
ret
pushf
mov
shlb
out
test
addr16
sti
mov
lods
push
aaa
sub
or
mov
xchg
test
adc
mov
outsb
icebp
scas
movsl
and
test
push
or
add
push
mov
out
sbb
inc
clc
mov
xorl
aas
and
push
or
add
jae
or
mov
jns
push
lcall
daa
imul
dec
cmp
mov
clc
fdivl
clc
add
push
enter
sub
sahf
cmp
bound
jbe
push
jg
aas
adc
cmp
scas
jmp
pop
xchg
pop
rcrl
jnp
or
fimull
mov
xchg
aas
mov
cli
cs
push
fs
sub
dec
in
sub
rol
sub
mov
xor
in
ret
add
test
adc
xlat
adcl
pushf
pop
mov
xor
jecxz
dec
dec
jbe
adc
mov
dec
loope
or
movsb
scas
cmp
sahf
and
mov
xor
and
mov
je
cmc
xchg
hlt
or
or
fists
inc
pop
incl
sbb
push
int3
inc
fbstp
cwtl
cld
out
repnz
out
or
adc
ss
mov
mov
lcall
adc
inc
mov
inc
or
lret
aad
enter
push
lock
jne
call
movsl
add
rolb
cs
mov
sti
push
push
sti
pop
mov
gs
dec
push
test
int
pop
icebp
mov
or
out
xchg
lods
dec
or
add
push
push
ljmp
mov
fbstp
cli
xchg
fs
mov
ds
xor
clc
and
andl
ja
pushw
repz
mov
inc
push
es
cmp
lock
xor
test
pop
arpl
xchg
ljmp
push
push
fidivrs
leave
xor
inc
dec
pushl
fmuls
loop
mov
sub
in
out
pushf
xlat
mov
jl
ficoml
std
fisubrl
pop
orl
lret
push
lahf
sub
in
subb
ds
aas
decl
js
push
ja
push
ret
jmp
ret
lcall
mov
push
outsl
jno
fsubrs
test
data16
cmp
movsb
adcl
jnp
int3
pop
sbb
mov
int
inc
inc
in
fwait
into
or
add
movsl
add
inc
xor
sahf
mov
jmp
add
mov
push
pop
mov
sahf
in
mov
aad
mov
mov
mov
xchg
fnstsw
and
sub
loope
jmp
or
mov
dec
sub
outsb
or
lcall
cmp
push
lods
mov
aas
jg
movb
sub
es
jb
insb
pop
sbb
pop
jne
dec
arpl
aas
insl
ds
fdivrl
push
pop
xor
cmpsb
add
aaa
clc
sbb
jne
shll
in
out
pusha
pop
pop
enter
add
data16
cmp
mov
push
adc
call
mov
jnp
push
stc
push
inc
leave
push
or
xor
mov
sarb
js
pop
ds
xchg
fmul
scas
addr16
xor
mov
pop
mov
lea
ficomps
mov
jg
sbb
push
inc
jbe
iret
jecxz
cmp
sub
ds
fcomps
in
mov
push
pushf
mov
xchg
xchg
call
stc
add
in
pushf
mov
jl
ss
addr16
jae
repz
mov
cmp
xor
inc
outsb
repz
rorl
and
in
fisubs
pop
fsubrl
sub
cmpb
cmpsl
shrb
lock
mov
cmp
dec
add
pop
adc
dec
pop
pop
andl
cmp
cmp
jle
je
js
lcallw
ret
int
lods
xchg
popa
inc
and
fmul
int
test
jns
jle
rcrl
cmp
mov
fistps
xchg
or
aas
ljmp
mov
pop
push
pop
xor
mov
push
sbb
mov
outsb
push
pop
inc
dec
mov
push
add
lret
push
cwtl
subl
vcvtps2pd
aaa
shrl
shrb
fcmovbe
xor
jmp
add
cmp
pop
xchg
dec
out
sub
inc
stos
xor
add
jl
imul
fcmovnbe
mov
ret
fisttps
mov
xor
push
jnp
and
mov
push
sub
xchg
push
pop
and
stos
test
stos
insl
sub
xchg
push
mov
add
xchg
cmpsb
das
or
mov
xchg
xchg
test
idivb
cmp
out
dec
call
fs
arpl
and
mov
inc
es
mov
mov
test
scas
mov
out
movsl
push
cli
rcll
dec
xchg
pop
cmp
js
xlat
fisttpll
es
cld
enter
iret
shl
stos
nop
dec
orb
xchg
xchg
xchg
call
jb
push
gs
enter
push
ss
inc
sub
sbb
dec
gs
sbb
lahf
jns
mov
jge
xchg
jge
add
xor
xor
loopne
adc
dec
sub
jmp
out
adc
jae
mov
lock
mov
mov
test
call
mov
and
out
sub
ds
stos
inc
stc
dec
push
dec
mov
ljmp
jp
cli
test
popa
cmc
jne
insb
adc
add
mov
or
test
cwtl
hlt
inc
inc
dec
push
fsubs
jbe
je
push
push
shl
outsb
mov
ljmp
push
movsb
cmp
fiaddl
lods
std
sahf
adc
cld
mov
mov
pop
fidivl
adc
sub
out
arpl
inc
adcl
das
lock
and
in
insb
inc
loop
test
imul
add
mov
or
or
sub
pop
dec
fs
aaa
out
pop
inc
movsb
ret
out
adc
pop
mov
adcb
dec
or
clc
jnp
ret
fdivs
fbld
gs
rol
mov
repnz
ret
dec
mov
dec
pop
inc
mov
pop
cmpsb
inc
sbb
in
mov
stos
hlt
rorb
add
je
test
inc
dec
adc
mov
mov
pusha
into
testl
lret
jb
fwait
rolb
mov
data16
mov
iret
in
std
xor
stc
jne,pn
push
loope
imul
jle
arpl
mov
test
xor
pop
inc
into
out
jb
or
int
jl
cmp
mov
mov
mov
outsl
cli
ficoms
loope
movsb
mov
jo
in
jle
insl
arpl
in
and
xchg
xchg
test
cmc
cli
addr16
cmp
lods
imul
imul
dec
sub
adc
in
mov
bound
int3
cs
adc
mov
inc
ret
push
jge
adc
mov
idivl
push
stos
sbb
fdivr
lods
leave
add
data16
sar
mov
push
cld
xchg
insb
dec
cmp
sbb
ret
adc
xchg
sti
dec
je
sbb
lock
int3
fwait
ds
add
pop
push
dec
mov
bound
mov
inc
shll
loop
sub
dec
xlat
lods
jge
shrb
gs
jbe
out
fistpl
cltd
mov
out
sbbw
or
nop
cmc
xor
jmp
push
sub
mov
xor
stos
insl
sahf
outsb
cld
addb
cld
iret
arpl
sub
loopne
into
sbb
popf
or
jbe
or
xchg
jne
pusha
imul
pop
jle
mov
lcall
sbb
push
push
sbb
push
push
dec
jno
ss
dec
inc
aad
clc
push
sti
das
push
dec
in
mov
ret
jmp
jl
daa
out
and
arpl
mov
jecxz
cmp
or
loopne
push
push
push
add
push
jg
popa
push
dec
enter
scas
inc
xor
add
icebp
std
imul
clc
jmp
lret
push
rcrl
pop
aas
push
ret
pop
sahf
movsl
push
lods
adc
lahf
mov
push
pop
hlt
push
push
or
pop
in
imul
stc
jecxz
mov
sbb
sub
dec
in
shll
sub
pop
push
scas
imul
outsl
sar
pusha
lret
mov
rclb
stos
or
pop
clc
ja
test
out
adc
test
or
std
adc
sarb
int
and
cmpsl
loope
mov
adc
adc
lcall
adc
adc
aad
out
dec
ljmp
imul
in
sub
fsts
inc
jbe
sbb
pop
xchg
popf
ds
into
repnz
test
loopne
repz
imul
xchg
dec
mov
sub
push
jmp
shll
pusha
jle
int
adc
nop
dec
in
sbbl
push
jo
lock
sbb
adc
sub
cmc
inc
or
and
sub
ficomps
leave
jb
rorl
outsb
ror
scas
jb
movsb
in
and
lcall
and
leave
lods
add
leave
cltd
loopne
aam
mov
inc
cmp
stos
cmp
dec
push
pop
xchg
sub
arpl
add
imul
jno
pop
push
fsubl
mov
iret
imul
push
dec
shld
inc
fdivrl
adcb
dec
mov
dec
mov
cmp
dec
out
lea
test
subl
bound
dec
fidivrl
push
jnp
and
cmp
pop
scas
and
aaa
sbb
cmpsl
addb
pop
lcall
nop
dec
sti
popa
sub
push
cmp
scas
or
pop
outsl
cmp
xlat
mov
sbb
mov
rcl
or
jmp
sbb
pop
cmovae
pop
push
add
in
cmpl
pop
aam
dec
je
add
pop
inc
jno
xchg
push
cmp
shrl
push
push
sub
fwait
xorb
sub
add
mov
push
pop
cwtl
jmp
pop
sub
call
pop
jle
into
mov
out
and
inc
inc
xor
xor
xchg
sti
cmp
scas
scas
dec
dec
inc
iret
roll
xchg
stos
xor
shll
dec
icebp
ss
int3
jo
out
pop
lcall
push
cmc
xchg
dec
lock
cmp
fistl
repz
xor
adc
out
loop
loope
pop
pop
push
out
cmp
sarb
push
mov
jne
jo
pop
push
outsl
arpl
mov
das
push
lret
cld
movsb
outsb
addr16
push
dec
std
add
and
dec
push
xchg
out
jl
out
test
popf
pop
das
jns
repnz
mov
fcomp
loope
jecxz
sbb
push
popf
loopne
out
add
int3
lahf
out
add
mov
into
xor
icebp
mov
dec
out
pop
cli
mov
sti
popa
pusha
ret
in
jns
and
mov
mov
push
jns
ret
jle
jg
push
sbb
sbb
and
jmp
cmpsb
mov
in
xorl
mov
pop
push
ds
in
mov
xchg
iret
inc
out
clc
adc
jbe
pop
loope
ja
leave
cmp
push
inc
iret
in
les
jb
push
stos
leave
mov
lret
ljmp
vphaddwq
dec
push
sub
jne
sahf
pop
add
xor
push
jne
sub
push
adc
add
xchg
fnstsw
in
xorb
xchg
cmp
xchg
imul
lea
or
loope
ret
loop
pop
push
mov
out
insb
jl
ret
jbe
xchg
sub
mov
inc
add
sbbl
jge
hlt
mov
ljmp
xchg
cmp
fwait
dec
je
add
aad
fs
sbb
push
xor
jecxz
psubw
lret
push
cmpsl
cmp
pop
sbb
mov
push
add
popf
sub
sub
bound
dec
mov
dec
or
mov
repz
fidivs
jl
ss
add
scas
inc
jl
ror
shrb
out
mov
jle
mov
sbb
mov
std
cltd
adc
fstpl
fldcw
cwtl
lock
xchg
aad
imul
cmp
xchg
jne
sub
or
ja
outsb
testl
adc
sbb
pop
push
mov
sub
fisubs
add
nop
leave
sbb
cmp
ds
adc
stc
lret
sbb
js
test
xchg
mov
aam
push
xor
icebp
push
in
in
pushf
jp
add
enter
lock
jo
xor
repz
mov
ret
sub
aas
aas
mov
xchg
bound
outsl
adc
jecxz
out
movsb
sbb
mov
add
das
xlat
sub
push
pop
out
inc
lcall
ss
pushl
adc
mov
nop
hlt
fistpll
lahf
jno
popf
mov
outsl
jge
mov
daa
out
test
inc
xor
out
fldcw
mov
jmp
pop
lds
mov
lock
jne
out
int
adc
out
std
stc
xor
mov
push
mov
testl
in
sbb
movsb
push
inc
add
pushw
in
inc
imul
cmp
ja
jnp
test
xchg
sarl
insl
push
lock
test
bound
shll
negb
mov
cmp
inc
pop
in
adc
aam
pop
jne
or
push
mov
adc
inc
popf
pop
push
inc
mov
sbb
push
add
add
loop
stc
scas
loop
push
out
xchg
inc
fdivrs
push
pop
xor
push
sub
ds
fs
dec
cli
adc
xchg
jg
adc
cs
std
mov
sbb
mov
pop
mov
lods
pushl
js
inc
jno
loope
lods
inc
iret
es
jnp
clc
mov
mov
mov
popl
mov
lahf
imul
ret
mov
stos
xchg
je
ret
mov
andb
mov
inc
jns
hlt
or
xchg
and
rcll
xchg
xchg
insl
xor
out
loopne
inc
in
inc
adc
cs
rclb
daa
or
cmc
adc
into
mov
and
push
pop
jmp
xchg
fdivrs
js
pop
mov
sbb
cmp
out
dec
cmpsb
sbb
mov
lods
lret
addl
xchg
lret
xor
in
mov
shl
insb
mov
push
push
je
mov
mov
leave
adc
jl
lcall
adc
sbb
je
les
xor
fisubs
mov
cmpsl
cltd
dec
xor
lock
xor
dec
xchg
mov
push
xor
out
mov
mov
xor
mov
daa
rcrb
or
cmp
mov
pusha
ss
dec
adc
arpl
mov
fildl
pop
arpl
and
out
cld
rorb
fdiv
cmpsl
add
pop
jae
aas
push
push
pop
jl
push
aaa
shrb
ret
dec
or
testb
jge
inc
cmp
cmp
subl
cmp
mov
in
sbb
or
outsb
cmp
addr16
or
jns
lds
fadd
fsubr
lcall
movsl
mov
cltd
movsb
gs
fisttpl
ljmp
cmp
xor
xor
or
mov
and
xor
mov
push
mov
loope
cmp
andl
pop
push
xlat
jg
push
fldcw
inc
push
js,pn
inc
mov
inc
repz
test
and
and
lods
xchg
mulb
add
lret
or
daa
std
jg
out
dec
jl
pop
and
mov
outsb
xor
push
inc
ret
loopne
jl
jno
jl
mov
loopne
js
cmp
pushf
mov
cmp
inc
int3
jge
mov
or
cmp
cmp
in
dec
popa
sbb
inc
push
sub
inc
push
jg
sbb
jecxz
movb
lock
std
inc
xchg
js
and
mov
dec
mov
mov
mov
sub
rclb
out
das
pop
in
aam
jae,pn
jle
inc
popa
imulb
adc
gs
sbb
xor
es
mov
call
inc
test
cld
pop
popa
int3
fldt
pop
lahf
loope
fucom
push
dec
iret
xor
enter
ljmp
push
sub
pop
fbld
js
xchg
or
setg
jp
push
or
mov
insl
int3
inc
aam
add
and
xchg
jg
pusha
iret
and
sub
sub
sbb
testb
loope
xlat
roll
test
sub
stc
push
jge
cmp
lea
fnsave
pop
inc
or
les
dec
mov
lods
pop
add
inc
sbb
jne
stos
imul
xchg
push
xchg
xchg
push
icebp
sbb
pop
xor
lcall
iret
push
stos
and
or
pusha
insl
inc
popa
int3
and
jl
xor
or
sbb
sub
and
jl
xor
inc
popa
jg
adc
mov
mov
sbb
shll
jp
scas
bound
popa
call
cwtl
or
das
jge
fs
cmp
jge
add
mov
lock
and
cld
in
push
mov
je
xchg
jmp
cmp
jo
or
int3
inc
enter
inc
xor
pop
fcmovu
scas
ret
stos
jp
cli
mov
xor
aas
popf
pop
sbb
mov
scas
sbb
push
mov
dec
andb
loopne
xor
cmc
popf
shll
jb
adc
arpl
punpckhdq
mov
pop
or
sbb
push
sbb
cmp
insb
xor
inc
dec
xor
push
cmp
pop
push
inc
push
int
xchg
sbb
jmp
xlat
sbb
int
jbe
pop
test
mov
cld
lea
roll
push
iret
or
sbb
movl
pop
rcl
cmp
testl
shl
mov
push
test
xchg
ljmp
dec
lock
ds
iret
subb
mov
sti
jns,pn
mov
push
sbb
adc
dec
push
filds
in
push
xor
pop
push
sbb
jp
and
int3
subb
clc
adc
outsb
movsb
stos
sarl
lock
test
fsubs
dec
inc
xchg
jle
cli
movsl
loop
pop
xchg
pop
loop
inc
int
movsb
sbbb
ss
cmp
adc
ljmp
jns
dec
sub
cmpsl
xor
and
lods
inc
inc
jmp
movsl
fwait
outsl
aad
or
pop
subb
xor
fsubrl
jae
fnsave
xchg
movsl
in
pusha
pusha
arpl
js
cmp
pop
dec
notb
fisubrl
jbe
and
fcoml
nop
sti
movsb
cmc
in
mov
mov
adc
sbb
and
inc
fnstcw
lret
outsl
mov
cmpsl
movsb
cmp
mov
sbb
cwtl
outsl
int3
push
icebp
adc
jmp
in
ds
mov
mov
aam
into
xor
int
sub
mov
and
pop
mov
push
cmpb
lock
outsl
jmp
arpl
fiaddl
cltd
mov
test
cltd
mov
push
cmpsb
jae
dec
popf
jnp
sbb
imul
ja
sub
cmp
mov
shrl
cli
mov
cmp
add
push
test
test
xchg
sub
ret
xchg
cld
jb
xchg
jecxz
jl
mov
pop
and
cmp
sub
fdiv
pop
inc
lahf
dec
xchg
cmp
int3
xchg
in
cltd
mull
push
icebp
icebp
and
mov
dec
ficompl
dec
fidivl
cmpsl
adc
shrb
xchg
les
dec
jns
stc
cltd
in
roll
pushf
mov
adc
ja
cltd
pop
push
movsl
jge
sub
in
lods
push
xor
bound
jae
nop
dec
fcomip
pop
mov
jge
sub
or
mov
popa
xchg
jae
mov
cwtl
cmp
pop
mov
pop
stos
aaa
arpl
add
addr16
in
fbld
paddb
shlb
int
rolb
clc
cmpsl
jno
sub
cmp
jns
sub
sbb
std
clc
add
lods
jb
lea
pop
mov
out
mov
ret
mov
jb
jne
push
mov
in
loopne
jbe
sbb
adcl
inc
sbb
test
add
sub
mov
xchg
popa
pop
sahf
jo
outsb
push
mov
mov
pop
lahf
orl
push
xor
add
sub
imul
dec
cmc
lahf
push
rcll
repz
mov
loop
test
adc
les
insb
pop
cmp
pop
in
stos
enter
hlt
mov
inc
sbb
cltd
movsl
pop
jecxz
leave
aad
das
adc
xchg
loop
inc
jae
inc
sub
negb
add
dec
testl
sbb
push
mov
mov
inc
outsl
adc
cmp
push
cmp
ret
lods
sub
push
fldenv
add
iret
jne
lock
andb
lcall
dec
jb
test
rcrb
mov
loop
cmp
int3
out
jmp
clc
push
adc
cmp
mov
fstpl
lds
popa
cmp
sbb
nop
outsw
sub
int3
stos
adc
xchg
inc
stos
sti
push
lods
sbb
or
add
pop
cmpb
sub
out
sub
loope
int3
and
dec
stos
hlt
sbbl
sbb
fldt
or
adc
loop
ficompl
xlat
sub
xchg
pop
mov
sahf
adc
aad
fwait
adc
iret
fs
fmul
sub
cmp
lcall
push
mov
xor
stos
jmp
adc
sahf
mov
add
or
ss
roll
popf
inc
fimuls
sbb
mov
push
mov
cmp
adc
xchg
xchg
das
push
sbb
packsswb
lods
mov
cmp
in
adc
pop
sub
nop
aam
xchg
xchg
test
push
ja
or
repz
sub
jne
lds
data16
pop
xchg
cmpl
loop
xor
jg
push
cwtl
push
into
mov
fldcw
jg
sub
imul
inc
jae
fwait
ljmp
cmc
push
daa
push
test
test
into
outsl
add
in
and
aas
jmp
mov
rcrl
jbe
sahf
loopne
cmp
clc
fwait
div
mov
and
mov
lret
out
popf
push
push
popa
push
jecxz
add
pop
push
lods
out
cld
pusha
sbb
cmp
sahf
mov
jo
idivb
dec
imulb
and
das
pop
bnd
int3
gs
ret
cmp
hlt
cs
icebp
xchg
lds
testl
dec
adc
test
sbb
int
pop
dec
mov
lods
jmp
in
inc
sti
push
cmp
mov
into
pop
fmul
xor
aam
xor
pop
out
add
arpl
movsb
cmc
add
jae
push
bound
jnp
pusha
jb
mov
std
int
add
mov
lret
cmp
adc
cmp
test
jo
pop
pop
stos
mov
lahf
mov
cltd
push
cld
lcall
xchg
jl
pop
iret
and
pop
push
mov
adc
inc
stc
inc
enter
add
jo
sbb
push
rorl
fsts
clc
mov
sbb
repz
mov
pop
mov
out
jbe
aaa
ja
jge
adc
push
ret
xchg
dec
stc
dec
aam
xchg
fnsave
leave
ss
addl
push
in
inc
cmp
popf
mov
push
adc
cmp
pop
aam
fmuls
jnp
outsb
jl
or
stos
in
push
jns
imul
addb
sarb
mov
push
sti
cli
add
jecxz
jnp
inc
repnz
jecxz
xchg
ljmp
out
cs
add
xchg
sbb
lds
sbb
adc
push
rcrb
fwait
sbb
std
lea
mov
mov
ror
cmp
mov
add
push
div
mov
xor
lds
mov
and
or
push
mov
mov
rcl
out
xor
pop
aaa
lret
adc
iret
std
rolb
movsb
dec
data16
mov
lods
ficomps
xor
pop
repnz
jns
out
lea
clc
sbb
fnstenv
movsb
xor
sub
xchg
movsb
xchg
pusha
xchg
daa
aas
sbb
and
into
mov
les
adc
pop
add
add
aaa
std
mov
fldl
clc
jmp
and
and
movsb
pusha
test
lret
imul
lahf
push
stos
adc
ds
insb
pop
test
mov
insl
cli
insl
adc
out
jno
aad
mov
data16
adc
push
push
and
rorb
push
mov
jb
add
notb
movb
shrl
sahf
in
sbb
dec
inc
sbb
js,pt
push
popf
lcall
cs
jmp
stos
sarl
and
mov
mov
enter
pop
lcall
std
cmp
aas
push
je
dec
das
jnp
cld
std
jmp
jne
jmp
jb
xchg
xchg
nop
jo
mov
push
add
loope
out
inc
arpl
or
cmp
int3
stos
sbb
pushf
std
pop
inc
loop
in
mov
dec
idivl
sub
mov
icebp
jb,pn
fiaddl
xlat
dec
aaa
cmp
loopne
lea
mov
cs
repnz
xchg
repz
fdivl
xor
ds
lock
mov
stos
cmpsb
fs
push
or
pop
negb
cmc
es
pop
xor
adc
push
rcrl
loop
mov
dec
push
cwtl
jno
inc
loopne
test
add
xchg
dec
aam
push
sub
movb
loope
mov
hlt
sbb
test
pop
loope
mov
test
xchg
pop
out
jp
add
mov
push
rorb
pop
mov
ret
jmp
or
iret
inc
inc
sub
icebp
icebp
pop
jle
out
orl
jo
push
repz
insl
repnz
adc
adc
xchg
push
andl
jg
pop
int3
imul
fists
int3
jg
shl
inc
jbe
lcall
add
jns
icebp
out
or
cli
inc
sbb
dec
adc
cmpsb
jae
mov
fs
data16
movl
lahf
add
addr16
je
lahf
or
lock
adc
out
lds
adc
push
xor
inc
pop
leave
and
testl
mov
std
test
push
add
push
jnp
sbb
sub
out
and
mov
clc
cmc
stos
xor
sahf
pop
mov
mov
call
mov
pop
inc
in
cmpsb
test
jb
js
or
mov
leave
pop
enter
mov
mov
lock
into
and
sub
mov
imul
ffree
pop
add
shlb
or
shll
fwait
ljmp
pushl
cmp
pop
xorb
notl
iret
dec
mov
shlb
imul
xor
push
fdivrl
jb
and
pop
add
fsub
pop
pop
scas
cmp
add
jbe
push
out
lds
es
popa
std
shll
cli
cmp
loopne
adcl
pop
fwait
sub
jno
xchg
lcall
lret
xchg
test
push
jg
inc
jmp
in
out
and
xor
lahf
xchg
pop
scas
push
stos
adc
stos
int
test
mov
xchg
imul
mov
movsl
and
clc
sti
lea
adc
adc
pop
mov
outsl
sbb
jae
int
mov
adc
xchg
add
xchg
movsl
idivl
sub
test
in
in
mov
pushf
sub
pushf
in
call
and
or
aam
je
out
lods
xor
mov
shlb
and
aas
mov
mulb
orb
rclb
int
dec
sbb
sub
in
or
jge
lods
pop
out
sub
push
mov
add
fisubrs
mov
mov
mov
mov
in
ficomps
inc
repz
icebp
mov
stc
popa
out
les
mov
cmp
arpl
sub
icebp
testb
pop
stos
fdivl
sti
out
mov
jo
lahf
pop
jb
and
jno
fiadds
pop
add
dec
xchg
add
loopne
jb
fimull
dec
dec
dec
push
and
sbb
movb
clc
xchg
dec
xchg
jno
jb
orl
sub
scas
scas
cltd
pop
pop
vmread
mov
cli
and
adc
pop
sbb
bound
mov
aam
mov
popa
aas
stc
out
mov
movsl
mov
addr16
jae
iret
add
ret
ds
fstl
mov
xor
sbbb
outsb
cmp
xchg
adc
push
sbb
or
aad
pop
mov
test
mov
add
cmpsb
push
aad
add
sahf
mov
shlb
sbb
mov
sub
jmp
in
clc
popf
dec
lods
dec
push
movl
pop
sbb
dec
or
pop
loop
fistps
lret
cmp
cmc
out
sbb
data16
outsl
cmp
push
loopne
jecxz
and
aas
imul
sub
sub
sbb
rcll
mov
adc
int
gs
daa
mov
xchg
add
repz
push
jns
or
jp
jno
clc
cmp
nop
jmp
inc
out
xchg
inc
out
in
int3
in
rcrb
in
xchg
out
mov
or
stos
fildll
outsb
fcomp
xchg
and
xor
out
outsl
sbb
lods
jbe
jb
movb
fidivrs
jge
jns
sub
jg
movsb
mov
xor
mov
mov
int
sbb
push
adc
cmpsl
xchg
dec
shrl
loop
dec
les
jbe
jno
sbb
out
fmulp
or
lahf
add
fcoms
daa
sbb
pop
ljmp
test
dec
xor
or
popa
mov
lea
insl
mov
xchg
adcl
bound
fisubrs
shll
cmp
xor
ds
sahf
divps
cwtl
clc
loope
leave
mov
fnstcw
std
mov
ret
sbb
orl
jp
jge
cmpsl
loope
jle
jecxz
call
movl
push
and
pop
push
fsubl
jb
pand
jne
dec
movsb
mov
sub
je
inc
filds
int3
stos
sti
fcoms
lcall
fisubrs
ret
mov
mov
cmp
insb
pop
pop
xchg
int
stos
loope
hlt
or
pushf
icebp
popa
dec
addr16
lock
push
adc
int3
inc
iret
lcall
scas
fstpt
add
mov
fcompl
popf
aaa
ret
das
inc
mov
cmp
fsubl
sbb
shll
scas
and
mov
xchg
fiadds
out
xchg
mov
clc
cwtl
leave
mov
int
cmovnp
shrb
jg
sbb
mov
in
lret
sbb
mov
adc
mov
sbb
push
mov
jmp
mov
pop
test
movsl
lods
pop
lods
push
xchg
inc
and
xor
adc
and
xchg
mov
jl
mov
imul
sahf
repnz
adc
push
lock
mov
push
push
mov
arpl
push
adc
or
mov
sar
jnp
and
inc
ss
cli
xor
mov
pop
and
repz
cmp
fs
notl
bound
jb
and
ss
mov
repz
mov
outsl
jne
mov
mov
imulb
sub
inc
xchg
pop
andps
add
jecxz
repz
push
adc
imul
adc
sbb
fcomps
mov
mov
outsb
fnstcw
dec
adc
dec
xor
popf
int
call
stc
in
xor
sahf
and
dec
rorb
sbb
clc
xchg
cmpsl
ficoms
mov
sbb
mov
bound
sbb
mov
cwtl
push
ficoml
movsb
or
insl
mov
leave
inc
int3
sub
mov
and
sub
mov
lock
in
xchg
repnz
push
sub
test
jecxz
pop
notb
mov
andb
dec
mov
mov
or
in
mov
sub
test
inc
mov
ja
lods
sbb
cmp
insb
daa
sarl
add
clc
ss
xchg
shlb
lahf
in
outsl
daa
ja
shr
dec
ret
leave
push
dec
fwait
insl
and
jno
mov
pop
pop
shl
xlat
jne
rcrb
cli
mov
push
cmp
loopne
jl
lcall
mov
shlb
cld
repz
fs
hlt
ffree
or
sbb
mov
test
add
jge
cmpsl
push
push
cmp
mov
pop
inc
sub
inc
stc
mov
adc
shr
push
std
fisttpl
out
inc
outsl
movsl
imull
aam
mov
popf
adc
xchg
inc
test
mov
scas
ja
add
lret
mov
stc
sahf
std
notb
dec
pusha
inc
movsb
xor
cmpsb
mov
adc
or
dec
mov
pop
pop
scas
lea
sarb
cld
pusha
inc
imul
dec
dec
jnp
push
subb
std
out
cmp
xchg
loop
xchg
adc
dec
insl
pop
stc
push
dec
mov
push
in
adc
push
dec
hlt
es
dec
pop
adc
or
mov
dec
rclb
leave
and
mov
cmp
adc
sbb
dec
pop
mov
imul
cmp
mov
ja
jle
js
pop
add
pusha
cmp
mov
xchg
fwait
popa
push
movsb
ja
scas
cwtl
std
push
jno
loopne
add
fiadds
mov
int
cmc
mov
outsb
lods
jae
sbb
pop
fcoml
jecxz
pop
test
xchg
xor
jmp
and
xor
mov
xchg
addb
das
mov
mov
and
and
dec
std
mov
push
iret
lds
fimull
mulb
dec
jecxz
dec
jno
insl
aaa
stos
sub
inc
jns
les
fisttpll
jle
sbb
divl
movsb
mov
push
xchg
jg
stos
pop
and
xor
enter
mov
aam
push
push
xchg
jge
adc
fwait
xchg
xlat
mov
cltd
dec
xchg
and
xor
ss
clc
pop
test
mov
or
in
mov
jp
mov
out
popa
xchg
aam
xchg
xchg
lret
adc
imul
aad
out
mov
mov
out
addr16
cld
movsl
lahf
pop
jae
mov
push
push
xchg
fwait
popa
imul
cmp
mov
cltd
mov
add
add
test
xor
mov
or
mov
mov
adc
fldcw
mov
testb
xchg
cmpsl
insl
and
cmp
jmp
loopne
cmpsb
mov
dec
or
xlat
aam
pushf
out
out
pop
jecxz
dec
popf
daa
rcrl
jae
mov
in
sahf
inc
mov
xchg
dec
orl
je
stc
adc
outsb
cld
mov
pop
repz
or
ja
xchg
mov
imul
cmp
mov
iret
pushf
cltd
xchg
aad
repnz
mov
sub
or
imul
adc
enter
enter
and
push
inc
fistpll
inc
shrl
jb
scas
xchg
repnz
pop
xchg
mov
cmp
push
and
negl
aaa
js
leave
shrb
dec
push
xchg
sbb
loop
orl
test
cmpb
push
mov
mov
push
or
or
flds
mov
sub
lods
inc
popa
ret
add
jle
cmp
xchg
movsb
mov
clc
loope
sub
daa
mov
mov
outsl
or
dec
fwait
adc
xor
fnsave
mov
sub
in
les
push
mov
test
movsb
xor
mov
xchg
je
inc
jae
pop
jb
pop
ds
mov
clc
mov
inc
xchg
movsl
imul
sar
ja
lret
andb
mov
sbb
push
aam
loope
xchg
out
push
dec
sub
push
jns
and
xchg
pop
pop
xor
mov
in
lds
xchg
repz
adc
pop
xor
mov
scas
les
xor
jnp
jmp
sarb
jg
xor
cmp
sub
cmc
mov
aaa
sbb
cld
js
mov
push
loop
xor
movsl
cmpsl
xor
divb
fcoms
movsb
loope
loopne
xor
pusha
hlt
ret
mov
cmc
xchg
cmp
out
xor
sahf
addr16
aas
sub
and
jp
xchg
push
push
xchg
cltd
test
xchg
inc
sbb
imul
dec
push
push
in
movsl
mov
adc
jl
mov
loope
cmp
mov
xor
pop
stos
pop
jp
and
cmc
shlb
adc
mov
xor
fs
testl
daa
inc
xor
mov
movsl
xorb
lret
inc
xor
cmp
mov
push
addr16
sub
fstps
test
push
dec
gs
jb
push
sar
xor
mov
pusha
rclb
xchg
gs
insb
add
int3
push
rclb
inc
jmp
shl
cs
push
mov
or
pop
mov
rcl
cmp
xchg
mov
cli
pop
cltd
jo
jns
sbb
in
mov
adc
or
bound
mov
mov
hlt
add
into
je
int3
shll
icebp
mov
iret
stos
shl
ds
pop
lret
pop
adc
mov
cmp
inc
inc
sub
cwtl
sub
nop
adc
lret
jl
or
out
pop
xchg
xchg
adc
sub
adc
negl
loope
sub
ret
sbb
fimuls
icebp
cmp
push
fcmovnb
jns
inc
loop
cltd
push
mov
mov
mov
push
cmpsl
sub
jo
fldt
daa
add
test
repnz
inc
cwtl
push
dec
rcl
add
mov
js
pushf
push
cmp
xchg
adc
mov
test
aad
int3
xchg
mov
jae
inc
cmp
push
ds
inc
test
adc
mov
sbb
or
popf
and
lods
movsb
pusha
xchg
sub
js
sbb
pop
call
mov
orl
fadds
xchg
orb
insl
mov
cmp
or
jmp
push
adc
sub
push
fmuls
roll
add
push
xchg
dec
in
lret
std
inc
addr16
cld
adc
scas
movups
jp
inc
cmp
add
push
push
mov
iret
fs
xchg
sbb
pop
xchg
int3
cmpl
sbb
push
mov
xlat
int
mov
mov
jo
pusha
mov
add
pop
sub
mov
mov
repnz
xchg
es
imul
scas
aam
jl
mov
fadds
xchg
adc
movsl
pop
lods
enter
inc
mov
sub
and
pop
cmp
xchg
sbb
cmp
mov
pop
mov
mov
xchg
data16
cmp
push
xchg
sub
cmp
scas
imul
cmp
adc
and
mov
mov
imul
and
push
ret
mov
xchg
fildl
push
in
jnp
filds
hlt
in
xlat
sti
xchg
mov
push
sub
adcb
scas
cmpsb
push
sbb
xorb
mov
cmp
sub
push
jne
shlb
adc
cmp
cli
push
data16
xor
rclb
test
mov
mov
mov
mov
dec
jb
or
xchg
divl
cltd
cmp
or
in
cwtl
notb
dec
movsb
sbb
in
rcl
add
call
dec
cmp
lcall
adc
mov
test
hlt
lcall
xchg
nop
shrb
insl
or
pop
sub
sbb
mov
adcb
mov
popa
inc
imul
or
mov
leave
dec
test
lock
sbb
and
push
clc
out
fldl
sub
or
sbbl
mov
fidivl
push
mov
pop
dec
les
jp
imul
lret
in
jbe
fmuls
shrb
push
adc
fstpl
cli
mov
xchg
add
movsl
adc
cmp
adcb
lock
frstor
push
xor
cmp
ss
lahf
cmc
cmpsb
or
and
inc
mov
jmp
or
add
ljmp
cmp
add
jno
cmp
loope
jg
mov
outsl
out
fdivs
sbb
test
sub
into
dec
sbb
xchg
sub
pop
out
shlb
sub
xor
pop
sbb
sbb
pop
dec
pop
dec
sarb
push
fcoms
add
or
jle
add
sbb
mov
push
movsl
sbb
or
dec
addr16
std
adc
aas
adc
push
mov
stos
push
sbb
cld
stos
or
pop
dec
fdiv
jmp
into
mov
or
mov
add
leave
add
add
inc
les
mull
adc
or
cmp
cwtl
add
push
dec
gs
jecxz
sub
dec
inc
xchg
mov
outsb
insl
adcb
out
pushf
or
aas
or
mov
and
push
sbb
rorl
and
push
add
cmp
xor
hlt
pop
mov
in
inc
hlt
pop
mov
mov
imul
notl
incb
adc
fwait
data16
icebp
cmpsl
testl
ret
ret
mov
stos
nop
lret
push
scas
cmc
sub
jmp
cwtl
mov
fs
orl
or
push
popa
add
std
inc
cmp
xor
dec
arpl
addr16
sbb
fisubs
dec
aam
out
andps
arpl
cmpsl
push
movsb
mov
pop
iret
loope
dec
inc
or
dec
imul
and
dec
pop
out
xchg
push
lods
xchg
xor
shlb
push
daa
call
mov
loop
mov
add
xchg
pushf
push
sahf
pop
push
mov
scas
sub
gs
mov
sbb
dec
lret
mov
mov
scas
je
jge
neg
jmp
pop
lahf
pop
jbe
fadds
lea
mov
adc
push
xchg
mov
cmp
mov
push
jg
rorl
sti
push
cld
pop
adc
push
xchg
add
scas
and
cmpsb
gs
jg
clc
test
dec
jo
add
clc
mov
daa
ja
mov
mov
mov
xchg
xorb
sbb
lea
cmpsl
ss
cmc
push
mov
bound
xor
ret
sti
adc
addb
iret
dec
inc
xor
cmp
lods
in
aas
mov
xchg
test
sub
lods
int
mov
icebp
lods
das
ds
dec
shlb
rorb
mov
cmp
movsl
adc
cmpsb
mov
data16
cmp
mov
test
jnp
dec
sub
push
push
jbe
jb
fadds
cmp
push
jo
xor
pusha
mov
dec
or
push
sub
paddsw
dec
pop
out
lea
mov
ss
cld
movsl
mov
jno
js
std
mov
in
lods
mov
sbb
imul
rcrb
les
adc
fwait
mov
xor
lcall
inc
inc
push
ret
push
pop
cmp
aas
enter
sub
out
xor
inc
cmp
mov
xor
arpl
inc
in
fnstcw
adc
pop
rorl
hlt
mov
xchg
imul
add
int
pop
scas
inc
xor
push
mov
cs
xchg
sbb
pop
lret
incb
movb
outsl
out
sbb
sub
jnp
aam
mov
scas
clc
pop
mov
mov
sub
jns
out
mov
mov
pop
jl
movsb
lods
ss
mov
loop,pn
rcr
test
push
hlt
xor
in
and
call
jge
cmp
xchg
jbe
and
push
push
sahf
xchg
nop
sub
sbb
jbe
mov
and
je
int
dec
inc
iret
in
xor
push
jb
aam
daa
push
scas
lds
xor
in
imul
out
cmc
rcll
repnz
es
data16
sbb
jmp
in
cltd
in
xor
pushf
rorl
out
aam
cmp
adc
xor
xor
inc
dec
and
inc
jmp
popf
inc
out
xor
ja
mov
aam
lods
stos
push
aaa
fstpt
repz
cmpsl
push
into
in
sbb
dec
jecxz
jmp
popa
or
mul
cli
xlat
xor
or
aad
in
add
inc
shl
repnz
mov
cld
xlat
int3
lahf
sub
jecxz
sbb
mov
or
pop
push
out
mov
lahf
and
jge
dec
adc
test
mov
adc
add
or
push
shrl
adc
jl
jae
insl
adc
jo
bound
out
loope
dec
and
mov
xlat
dec
iret
push
dec
mov
mov
mov
ja
dec
es
pop
arpl
lret
jmp
pop
not
dec
pusha
xchg
cmp
lds
cmp
xchg
and
hlt
in
pop
loopne
xchg
sub
adc
mull
or
rcll
and
jno
and
inc
and
aad
push
mov
xchg
cld
pusha
sbb
mov
xchg
inc
lods
push
mov
into
sbb
mov
aas
xchg
in
or
xchg
rcl
cmpsl
push
lcall
loopne
sub
xchg
shl
sbbb
jge
ljmp
push
pop
int
xchg
sahf
sub
and
int3
mov
cmp
lds
xor
aaa
push
cwtl
call
lods
push
std
testb
pop
mov
test
daa
outsl
and
mov
mov
cmp
mov
bound
mov
adc
test
mov
xchg
sub
ja
xchg
mov
dec
fs
sahf
in
dec
push
dec
arpl
pop
call
cs
mov
mov
andb
cmpsb
loop
mov
in
lock
push
test
xchg
fdivl
lock
cwtl
xchg
sub
fidivl
mov
or
outsb
and
mov
pop
fisttps
sub
jns
sbb
test
leave
and
push
test
sbb
sahf
adc
je
fldl
jae
pop
or
lcall
outsb
lods
inc
rorb
out
nop
cmpsb
or
mov
movsb
cmp
inc
lods
int
dec
popa
ds
fs
or
xchg
and
sbb
push
sbb
sbb
push
int
inc
and
adc
sbb
jmp
clc
stc
add
pop
dec
push
iret
orl
mov
incb
subb
out
add
iret
add
cmp
cmp
xchg
jbe
popf
loop
loope
hlt
xchg
xchg
jmp
mov
sub
subb
pop
sub
jnp
mov
jl
test
sbb
js
sbb
or
push
fsubrs
loopne
pop
mov
iret
push
sub
jge
or
cmp
push
lahf
cmp
es
pop
mull
sub
dec
leave
xor
out
out
and
repnz
push
dec
pusha
call
sub
push
adc
push
arpl
hlt
pop
or
sub
fidivl
mov
xchg
mov
rcrb
or
cmc
mov
or
jnp
pand
hlt
js
sbb
js
mov
sbb
adc
pop
and
lcall
lret
imul
int
or
nop
and
xchg
inc
movsb
loop
lock
inc
inc
in
xchg
in
dec
testb
or
cs
dec
dec
xor
dec
xchg
rcll
dec
inc
mov
cli
push
xchg
pushf
es
lret
and
lret
cltd
insb
inc
and
xor
fldenv
imul
jmp
jo
and
orl
dec
xchg
out
cltd
mov
jge
jle
sub
in
movsb
jno
adc
js
mov
ja
int3
xchg
scas
sti
loop
outsl
into
aaa
dec
lds
cltd
dec
cmc
insl
xchg
gs
dec
pop
xchg
dec
int
dec
test
xchg
sbb
mov
mov
cltd
xorb
cmp
sub
inc
cmc
cwtl
xor
adc
push
stc
xchg
aaa
mov
xorb
jle
mov
cmpsb
in
pusha
inc
add
cmp
inc
push
sub
aaa
dec
pop
mov
stc
xor
test
and
in
pop
push
adcl
aaa
stos
lods
sbbl
fsub
pop
test
sbbb
and
add
nop
xchg
pusha
sbb
or
pop
adc
xchg
cmpsb
loope
not
inc
ds
inc
roll
xor
in
popa
bound
aas
sbb
push
shr
popa
adc
sbb
popf
sub
aam
loop
cmc
mov
xchg
pop
adc
sub
insb
sahf
cli
movsl
sbb
cmp
out
cmc
outsl
dec
and
jns
lods
rcll
pop
xchg
jbe
int3
loopne
push
mov
js
cld
loope
loope
jb
mov
rolb
mov
adc
mov
mov
lcall
sub
loope
js
ds
push
inc
push
cmp
or
pusha
cmp
push
sti
dec
and
cmp
lea
inc
mov
and
mov
fisubs
or
mov
mov
xchg
mov
mov
mov
inc
jp
pushf
leave
test
push
and
divb
test
shr
std
cmovbe
fistpll
xor
lock
add
cli
dec
push
dec
inc
jp
rorl
pushf
out
or
test
inc
mov
cmp
sub
inc
inc
xlat
push
dec
jnp
in
mov
pop
push
jecxz
mov
fldcw
cmp
jmp
fcompl
cld
call
stc
and
inc
add
stc
lods
jecxz
push
andb
in
pop
in
rep
cmp
ss
inc
jns
test
pop
popa
lahf
push
addl
pop
xor
inc
imul
push
mov
arpl
cmp
ror
out
hlt
sub
cmc
sbb
ficoml
popf
fwait
inc
repz
add
popf
fdivrp
movsb
xchg
push
adc
jp
push
in
push
mov
mov
rclb
lds
sub
jb
cmpsb
test
adc
mov
mov
rep
push
inc
sub
in
lods
aad
andl
or
aaa
je
in
or
rcll
jno
xor
fidivl
or
data16
mov
insl
sar
pop
aam
stc
lea
jbe
mov
mov
xchg
bound
sbb
mov
test
cld
mov
aaa
subb
or
lock
mov
cmp
out
mov
or
xlat
push
js
aad
adc
dec
push
je,pn
in
push
je
jno
pop
jns
sub
hlt
ret
mov
xorl
mov
dec
data16
lods
dec
lea
cmp
cli
jnp
sbb
flds
aam
fimull
in
add
call
jae
aaa
pusha
or
test
sbb
sub
and
movsb
sbb
pop
xchg
xor
jle
cs
notb
jbe
iret
int
loope
jge
push
add
movsl
test
das
dec
loopne
push
loopne
adc
out
iret
or
dec
int3
sar
inc
js
shll
dec
dec
xchg
divb
ss
js
inc
inc
jp
push
and
bound
aas
arpl
push
in
fistpll
or
cmp
shlb
jns
jo
shlb
negl
test
mov
roll
dec
xchg
movsl
ds
push
pop
les
dec
repz
jae
arpl
xor
cmp
mov
call
lods
mov
mov
mov
sbb
mov
test
mov
push
ljmp
dec
dec
cmp
jbe
ficoms
pop
push
sbb
sti
and
xchg
int
cmp
and
repz
mov
lods
inc
stos
leave
loopne
push
std
sub
sub
xor
enter
scas
push
bound
push
in
cmp
push
aam
call
arpl
cmp
push
mov
xchg
shlb
add
iret
lock
xchg
stos
stos
cs
add
adc
xlat
fsubr
fstl
mov
stos
cmp
adc
mov
sbb
mov
in
pop
mov
add
cwtl
loope
push
xchg
or
xchg
cmp
stc
sti
ljmp
add
mov
push
xor
pop
mov
and
xor
pop
or
fldcw
movsl
test
in
stc
dec
movsl
std
flds
jne
xchg
sbb
arpl
inc
dec
adc
dec
mov
xchg
adc
loop
rcl
push
std
xor
xchg
inc
mov
aaa
push
mov
lcall
xchg
jo
push
xchg
fimuls
loop
jle
mov
fisubs
cmp
sbb
and
inc
or
push
lcall
xchg
inc
cs
nop
movl
scas
dec
bound
or
cmp
aas
imul
movsb
ret
and
arpl
aas
lea
lahf
jb
pop
xchg
inc
out
cmp
push
push
mov
sbb
adc
movsl
je
int
call
repnz
insb
lret
loop
int
fwait
aaa
sti
pop
adc
cmpsl
xchg
scas
add
push
dec
jne
push
imul
pop
fdivr
lahf
lahf
mov
lds
in
lds
shlb
les
dec
cmp
pop
push
insb
pusha
mov
jmp
test
cmc
iret
dec
ja
fs
dec
push
and
cmp
xchg
xchg
ficomps
lret
xchg
mov
push
pushf
test
leave
xchg
stos
test
jb
sbb
fcoml
mov
add
sub
or
or
imul
jo
test
jb
pop
adc
mov
and
mov
inc
ret
lds
pop
imul
mov
lods
repz
mov
or
add
cmpl
dec
adc
loopne
mov
cmpsl
hlt
out
xor
xchg
test
fmuls
jns
les
xor
lret
sub
mov
imul
mov
aaa
push
mov
sbb
mov
mov
dec
test
andb
cs
xchg
lods
push
xlat
test
addr16
outsb
push
xor
cli
xchg
mov
add
push
sti
xchg
jge
sahf
dec
jb
sub
rcll
mov
jo
cmp
sub
pusha
push
stos
mov
mov
or
ret
scas
lods
lea
mov
arpl
enter
adc
and
pop
mov
cmp
stos
cmpsl
scas
jp
lods
push
pop
fmul
and
and
shll
repz
cmpsl
daa
outsb
jecxz
mov
rep
adc
inc
mov
add
out
xchg
mov
data16
and
stos
jge
push
sub
hlt
cmp
mov
adc
stos
dec
hlt
testb
or
sbb
mov
or
jno
pop
dec
out
and
lds
adc
gs
sbb
cmc
cs
push
mov
fdivrl
mov
mov
gs
fisubrs
jae
xor
push
sahf
rclb
pop
popf
inc
ds
mov
fsub
out
jo
nop
addr16
jge
cmp
test
pop
mov
pop
sbb
dec
cmpb
sbb
test
mov
or
dec
mov
xchg
sahf
sbb
xor
jae
ret
and
pop
ss
push
rcll
dec
dec
cmp
or
inc
mov
loop
or
inc
das
jmp
pusha
or
popa
ja
sbb
cli
lods
pop
xor
jl
push
scas
jmp
es
out
mov
sub
mov
add
call
add
lret
sbb
rorb
mov
iret
xlat
out
xchg
js
adc
mov
in
dec
std
dec
in
cwtl
inc
pop
sub
mov
dec
jle
mov
imul
add
and
cli
mov
in
adc
or
bound
or
jge
sbb
lods
mov
ret
jp
mov
lock
lock
out
arpl
imulb
test
ss
movsb
pusha
push
filds
cmp
sub
mov
mov
pop
xchg
cmp
outsl
adc
push
lods
faddl
popf
or
adc
inc
ss
mov
jae
mov
pop
pop
pushf
mov
ret
test
ss
fsts
and
sbb
jno
in
pop
cmp
in
and
push
mov
ljmp
add
jae
les
jle
out
pop
pop
ret
popa
insl
mov
ljmp
lahf
popa
cli
xchg
ss
adc
mov
fimull
dec
cmp
clc
jp
pop
mov
mov
sbb
clc
in
fisttpl
adc
push
outsl
or
test
popf
push
in
adc
subb
push
sbb
xor
fs
ret
xor
dec
cmp
inc
iret
popf
add
mov
lock
xchg
and
scas
cmc
cld
mov
sub
sbb
scas
sub
leave
sbb
addr16
sbb
xor
and
faddl
nop
rdpmc
aas
das
sahf
inc
inc
test
cmp
xlat
cld
jge
xor
insl
cmp
inc
in
sti
pop
xchg
sub
sti
and
and
sbb
dec
inc
test
pop
dec
xor
movsb
fisttpl
pop
xlat
dec
sbb
fistpl
dec
mov
cmp
daa
xchg
mov
xchg
add
test
sub
popf
insl
mov
xchg
pop
mov
push
gs
fldcw
loop
pop
push
cld
sbb
leave
ljmp
jnp
dec
push
int3
pop
lahf
push
int
ljmp
xlat
mov
in
push
jg
daa
leave
cmpsl
bound
push
or
add
lcall
push
jge
and
adc
adc
aaa
mov
push
mov
xlat
int3
nop
in
jno
sbb
push
scas
push
adc
fs
sub
mov
dec
lret
iret
xchg
inc
mov
mov
test
add
pop
aas
ficomps
add
pushf
ss
xchg
lret
shll
adcb
bound
pop
xchg
adc
and
and
and
or
in
and
push
int3
pop
test
lcall
jb
pop
popa
jo
pop
std
mov
push
pop
or
lret
mov
add
shlb
and
repnz
mov
inc
add
jge
pop
inc
xor
loopne
mov
cltd
cli
mov
cltd
clc
iret
xchg
aaa
sub
ret
lds
and
sbb
jb
insb
iret
jecxz
stc
into
dec
adc
mov
les
sub
jl
movsl
xchg
aaa
int3
fdivrs
inc
fstpt
or
push
cmp
push
mov
jnp
sbb
pop
push
or
test
mov
sti
dec
jg
cmpsl
cmpps
cmpl
or
add
test
and
dec
or
push
mov
and
mov
and
xchg
push
dec
daa
clc
das
call
or
cld
mov
mov
xchg
jl
push
mov
fisubrl
mov
cmp
in
cltd
mov
adc
test
pusha
inc
push
testl
outsl
daa
pop
dec
xchg
icebp
mov
cmp
pusha
dec
pop
or
je
sub
shrb
loopne
repz
lret
dec
adc
push
call
inc
sub
out
cld
mov
xlat
jno
outsl
lahf
in
mov
pop
xorb
test
divb
sbbl
mov
pop
mov
stc
nop
aad
scas
in
inc
and
loop
dec
test
xchg
mov
out
or
jb
xor
in
xchg
lds
ret
enter
outsb
insb
dec
out
je
roll
or
cmp
adc
or
cmp
push
or
stos
and
pop
imul
lods
dec
mov
test
mov
addl
mov
lret
mov
jbe
dec
pop
cmp
xor
out
pop
xchg
jno
insl
in
ja
mov
xor
scas
into
adc
xlat
pop
jns
pop
and
adc
sahf
loope
and
push
sub
pop
add
rcll
popa
outsb
add
mov
insb
dec
mov
aam
jb
outsl
inc
xchg
mov
sub
std
idivl
fistps
inc
dec
dec
add
and
jns
stos
pop
xor
faddl
sbb
cmpsl
test
loope
cmc
popa
push
cmpsl
imul
cmpsl
dec
jbe
stos
dec
add
pop
dec
nop
xchg
pop
outsb
or
cmp
xchg
ffreep
xlat
add
or
ret
insl
stos
es
ret
xchg
dec
jle
cmp
jne
mov
insl
lock
nop
dec
int3
mov
mov
or
repnz
push
enter
xlat
das
push
movsl
push
lahf
int3
ja
mov
cmpsl
sub
push
cmp
ljmp
fistps
fisttpl
xchg
mov
cmp
sub
sub
jle
mov
pop
insl
pop
mov
mov
add
das
and
fistpl
mov
add
mov
jmp
and
sub
mov
mov
add
mov
mov
mov
jns
xlat
cmp
push
mov
push
pop
imul
and
icebp
rol
aaa
jmp
xchg
mov
fisttpll
xchg
xchg
cs
adc
adc
in
stos
aaa
mov
lret
cmp
mov
fdiv
fcmovne
sahf
mov
dec
es
mov
mov
push
aad
xchg
add
sar
lds
inc
int
pop
out
xchg
inc
xlat
aam
scas
stc
dec
bound
sarl
nop
cmc
and
cmpsl
leave
ds
outsl
adc
sub
cmp
insb
or
xchg
pop
js
mov
rorl
das
fwait
test
push
inc
popf
int3
ja
and
popf
adc
je
jecxz
repz
shll
xlat
lret
lea
jns
stos
xchg
shrl
loope
bound
jno
pop
test
xchg
dec
jle
icebp
adc
movsb
adcl
pop
push
int
neg
jp
mov
xchg
xlat
push
fwait
dec
int3
movsl
dec
mov
jle
mov
and
add
mov
scas
cmp
pop
in
dec
pop
mov
stos
adc
add
xorl
lock
roll
lret
pop
cmp
loop
stos
repnz
inc
sbb
dec
sbb
sbbb
jae
push
xor
push
call
iret
xchg
inc
test
loop
xchg
dec
inc
je
xor
rcrl
adc
xchg
xchg
xchg
inc
cmp
jb
imull
out
push
push
add
das
outsl
jns
xchg
mov
pop
inc
or
pop
mov
jge
or
enter
mov
add
pushf
and
inc
and
stos
sub
jge
mov
imul
mov
nop
out
add
pcmpeqd
push
xor
jmp
mov
sub
jns
adc
or
test
fisubrl
test
sub
clc
pusha
mov
subl
adc
sub
sub
adc
nop
faddl
lcall
lds
popa
lea
das
aaa
dec
jno
cwtl
pop
popf
cmp
stos
dec
xor
roll
jae
lods
xlat
fnstcw
cmp
ja
outsb
sub
sub
fidivrl
clc
dec
sahf
dec
pop
stos
jns
inc
or
js
push
fsts
movsl
adc
das
inc
inc
push
fldcw
insl
xchg
or
push
sbb
mov
ret
outsb
enter
cmc
mov
test
pop
sub
and
in
sbb
repnz
add
out
mov
ret
jg
jmp
sub
ljmp
je
std
xor
rcrw
push
and
pop
inc
adc
fmull
xlat
xchg
imull
sub
mov
sbb
lods
jb
and
fstl
dec
xor
or
push
pop
sub
cmpsb
xchg
fwait
addr16
mov
ret
fs
mov
jl
movsl
jg
mov
fs
xor
test
outsl
mov
cmp
lea
dec
das
xor
mov
and
and
push
and
xor
out
jo
sub
pop
jo
sub
loopne
lea
pop
mov
cmp
out
les
adc
les
movsb
ss
xor
add
and
ja
adc
scas
repnz
cltd
test
mov
mov
ds
push
pop
cmp
out
jge
push
mov
push
lds
push
pop
outsb
loop
cmp
sbb
or
ret
bound
enter
jp
xor
repnz
in
push
jno
mov
out
pop
push
nop
cltd
movsl
cmpsl
pusha
insl
xchg
cmc
sub
aas
jmp
push
ds
mov
pop
pop
jg
inc
insl
inc
mov
mov
or
arpl
int
push
xor
push
add
aam
xor
push
or
push
dec
sub
mov
ljmp
in
add
push
clc
sti
lahf
adc
es
loopne
jae
dec
mov
sub
jno
jecxz
adc
pop
pop
lods
sbbb
mov
dec
cs
out
movsb
inc
mov
sbb
cmpsl
mov
add
addb
imul
xor
aas
lret
jl
popf
pop
hlt
jg
or
vmaxpd
lea
push
cwtl
mov
jne
inc
xor
adc
mov
mov
sub
aaa
cltd
loop
out
lret
rorl
add
pop
sbbb
sub
dec
fs
push
and
das
push
aas
ja
popf
lcall
jle
cmp
mov
jl
sub
test
iret
scas
mov
pop
sbb
inc
add
dec
je
push
popa
and
mov
dec
xor
ja
cmovbe
jecxz
push
xchg
shlb
xor
lret
xor
mov
data16
mov
inc
and
mov
and
and
xchg
cwtl
lcall
std
jb
dec
jl
mov
adc
xchg
add
and
xchg
cmp
xchg
stos
mov
rclb
cmpsb
xchg
xlat
pop
and
inc
jo
and
lods
xchg
inc
icebp
rcll
imull
dec
pop
add
pushl
std
mov
adc
hlt
mov
mov
mov
mov
imul
data16
stc
xchg
cmpsl
jg
cwtl
out
cmp
xchg
loope
iret
jne
sbb
sub
push
out
add
adc
call
jp
jae
cmpsb
inc
jne
sbb
cmp
lea
push
dec
outsl
in
dec
out
pop
fisubs
pop
ja
repz
adc
insl
outsl
and
rclb
sbb
cmp
and
jge
pop
pop
jmp
cmc
sbb
or
filds
mov
lds
fsubrs
cmpsb
jmp
sub
or
stos
mov
dec
jg
cmp
xchg
je
imul
mov
and
push
popa
roll
aaa
inc
pop
push
pop
fmul
in
xor
fnstcw
xor
xchg
mov
in
dec
cmp
cmp
out
dec
hlt
pop
mov
stos
add
xchg
mov
xor
mov
xchg
rcll
and
mov
sahf
data16
pop
sbb
pop
lods
std
adc
aaa
out
frstor
xor
scas
stos
cld
into
pushf
insb
ror
mov
mov
pop
out
jge
add
mov
pop
sub
scas
scas
loopne
mov
ds
imul
lahf
push
jl
mov
cltd
jl
orb
jno
dec
ror
dec
lods
shll
mov
int3
test
mov
pop
outsl
xor
mov
dec
mov
fxch
je
mov
mov
xor
jb
sbb
dec
mov
fs
mov
pop
sbb
mov
je
jmp
cmp
sub
dec
cmp
mov
sbb
sbb
daa
les
cld
cmc
mov
xchg
and
pushf
xchg
push
xor
repnz
dec
test
fsubp
pushw
clc
ss
roll
jne
mov
inc
outsb
and
xchg
fst
shrb
mov
push
xchg
js
pushf
enter
cwtl
pop
sub
jne
cwtl
das
pop
or
jnp
pusha
xchg
jo
arpl
fnsave
fwait
add
xlat
test
icebp
dec
push
dec
repnz
add
mov
out
in
adc
es
push
lahf
xor
std
mov
and
xchg
pushf
leave
mov
push
xchg
adc
rorl
pcmpgtd
dec
sbb
ds
pop
cmpsl
out
lea
inc
aaa
mov
xchg
fisttpll
pop
jecxz
dec
int3
xchg
stos
popf
lods
inc
push
addr16
pop
enter
push
inc
sti
icebp
ja
ret
daa
dec
shl
cmpsb
cld
mov
push
add
pop
mov
pusha
adc
cld
sbb
stos
xchg
loopne
pop
out
push
sahf
sbb
testb
cmc
xor
test
arpl
orb
cmpsb
popf
push
pusha
adc
lret
xchg
les
cmpsb
xchg
roll
cwtl
push
push
xchg
cltd
push
sub
mov
mov
outsb
das
mov
inc
sub
sbb
mov
inc
jmp
scas
jo
and
xchg
iret
movsb
push
push
jbe
movsl
cld
clc
push
leave
sbb
xor
and
jo
pop
insl
arpl
lea
pop
mov
xchg
pop
and
and
ja,pn
or
rol
inc
jle
ret
test
shll
pop
fwait
dec
inc
popa
mov
int
sbb
mov
outsl
addb
push
repz
movsl
jg
dec
insb
and
sbb
inc
insl
testb
sbb
inc
out
inc
fcomps
sbb
pop
sbb
sbb
push
test
cs
icebp
andl
sub
loop
inc
repz
add
notl
shll
pop
or
xor
sub
add
test
insl
inc
adc
mov
stos
cwtl
mov
fcoml
inc
inc
iret
fnstenv
dec
push
push
jle
outsb
clc
icebp
mov
sub
cmp
pop
sti
push
out
jo
cmp
dec
imul
in
push
sub
movsl
mov
mov
iret
mov
xor
imul
loope
sbb
mov
dec
cmpl
aas
inc
sarb
xchg
fbld
mov
arpl
or
push
mov
fstpt
mov
sub
cld
pop
dec
aaa
pop
sbb
cmp
out
mov
push
mov
xor
xor
rorl
in
adc
insl
sub
lret
jl
shlb
lods
loopne
push
mov
fsubs
sub
imul
test
sub
add
push
xchg
inc
clc
fs
test
stos
int3
jo
pop
popf
std
xchg
pushf
inc
fnsave
pop
mov
mov
sub
inc
add
in
roll
mov
adc
add
scas
movsl
xchg
push
clc
negb
sub
dec
aad
ss
adcl
and
push
sub
loop
je
daa
cld
rorl
dec
inc
stc
stos
repnz
xor
sub
out
xor
sbb
and
dec
into
and
xchg
mov
idivb
add
or
cmovg
leave
adc
or
mov
pop
and
mov
pop
mov
mov
mov
push
out
fdivs
jns
cli
xchg
and
shlb
xor
and
stc
add
out
and
or
mov
dec
ljmp
lods
cmp
inc
inc
and
or
out
test
test
and
mov
orl
jns
jecxz
mov
leave
xor
xor
mov
adc
mov
xlat
add
test
xchg
out
mov
loope
mov
pusha
sbb
push
imul
idivl
push
test
pop
dec
jge
sbb
ss
int3
sti
pop
or
inc
aam
lds
leave
lahf
dec
mov
xchg
loop
flds
push
dec
add
add
sub
fucomi
ret
mov
cmpsb
and
push
lea
sub
sub
cmp
pop
mov
adc
out
inc
dec
mov
fdivr
std
lods
out
xchg
ds
push
ret
ljmp
test
sub
cmp
sub
xchg
pop
dec
cmpsl
imul
add
dec
fstpl
sub
dec
fsubp
mov
fs
xorb
mov
lea
mov
cs
int
pop
jle
mov
jmp
cmp
or
sub
sub
je
push
jbe
pop
neg
pop
mov
sbb
rolb
out
in
xchg
mov
jns
orl
dec
mov
test
ss
lock
adc
sbb
push
xchg
xchg
lods
fists
das
divl
xchg
arpl
jbe
out
push
xor
cmp
jge
mov
mov
sti
lods
insl
push
in
outsl
in
mov
mov
jmp
pop
inc
sub
stos
jmp
subb
push
dec
xchg
mov
mov
cmp
idiv
pop
movsb
xor
push
pop
imul
cmp
mov
xchg
loope
cmp
add
lock
or
pop
clc
mov
loopne
sbb
mov
inc
mov
fwait
decb
jae
mov
dec
fists
jl
cli
cli
lock
jmp
in
ret
lea
xor
sbb
pop
dec
xor
push
or
cmpsb
jo
inc
shlb
xchg
cmpsb
jmp
and
outsb
add
inc
rorb
movsl
mov
pusha
mov
sti
mov
test
add
inc
sub
jne
cwtl
xchg
pop
xor
icebp
add
pop
test
push
cmp
mov
cmp
nop
cmpsl
repnz
daa
jo
push
mov
stc
cmc
mov
inc
sbb
push
xor
daa
vcmpss
jmp
cltd
and
leave
jl
shll
sbb
mov
test
pusha
xor
xorb
dec
insb
aas
xchg
pop
and
jecxz
jmp
inc
ss
sti
jmp
inc
sub
mov
xlat
sub
push
pop
insb
pop
imul
mov
dec
nop
push
jns
aas
xor
push
push
pop
push
pop
inc
test
jecxz
sub
add
aad
mov
adc
cmp
and
push
sahf
adc
add
pop
xor
mov
lahf
jecxz
push
jge
jmp
jg
mov
jo
std
mov
xor
flds
push
jne
mov
inc
xor
push
les
adc
rcrl
mull
mov
outsb
in
out
push
in
xor
fs
in
jecxz
out
jbe
mov
add
pop
mov
lea
xchg
push
shlw
adc
addr16
dec
scas
fcomi
cwtl
shrl
xor
mov
pop
fldenv
lods
lret
mov
shrb
ja
mov
lahf
inc
lds
push
or
adc
pop
push
aad
sbb
jmp
pushf
xor
jnp
pop
dec
mov
insl
cwtl
daa
test
mov
xchg
jae
cmp
imul
repnz
xchg
xchg
mov
hlt
iret
dec
shll
push
or
je
insl
mov
xor
lret
sub
lea
sub
mov
not
dec
add
test
insb
ds
add
mov
push
xchg
lahf
leave
ljmp
out
in
ljmp
xchg
lock
mov
mov
xchg
cmp
mov
or
test
bound
cld
lock
and
xchg
iret
cmp
xchg
jb
mov
mov
or
cmp
mov
outsb
in
xchg
aad
and
pop
rorb
or
enter
sub
mov
call
xchg
pop
daa
lods
ja
cld
push
or
jmp
ficoms
dec
mov
test
test
mov
mov
jmp
and
popa
sti
sbb
mov
in
js
aaa
and
clc
int
je
fisubl
sub
fisubs
lcall
ja
ret
fs
lods
and
adc
andl
cld
mov
das
cld
inc
dec
mov
hlt
fdiv
dec
sub
sub
jae
pop
cwtl
jb
imul
push
popa
bound
jnp
mov
sbb
mov
xchg
fs
ret
cmp
adc
in
jns
sub
in
fimull
loop
fldt
insl
fists
cmc
mov
icebp
jno
pusha
mov
pop
add
and
int3
xchg
cwtl
imul
inc
sbb
jb
sub
outsl
adc
cmp
add
jbe
push
mov
dec
cltd
dec
out
leave
cmp
jnp
into
jl
adc
je
loopne
jo
jns
outsl
ret
int
dec
jo
fcomp
inc
imul
add
ficoml
cmp
fsubrp
pop
pop
out
cmpl
in
outsb
push
scas
fdivrl
push
mov
and
cld
xchg
jl
sub
pop
sub
mov
mov
mov
rsm
or
loop
ja
dec
ficoms
mov
lcall
scas
bound
std
cmp
adc
rol
clc
hlt
pop
mov
add
ret
call
popa
xchg
fstl
inc
push
call
lcall
add
test
xlat
dec
xchg
sbb
adc
test
adc
jg
mov
pop
mov
pcmpgtw
int
cltd
int3
fs
in
jmp
xchg
and
inc
pop
das
push
movsl
fiaddl
mov
push
inc
push
add
sub
mov
jnp
pop
lock
jbe
data16
fdivrs
fistl
aaa
add
imul
cs
in
lcall
mov
push
lea
movsl
cmp
out
lds
movsl
sub
mov
xchg
lahf
int
lods
mov
frstor
xor
push
sub
jg
xor
ljmp
lds
dec
cmpsl
pop
rcll
mov
cmp
in
pop
imul
cld
inc
jmp
mulb
ficompl
jne
mov
outsl
or
jg
in
mov
mov
cmp
in
clc
mov
push
jecxz
sbb
inc
mov
or
lcall
pop
add
xlat
cmpl
ficomps
pop
sahf
push
and
out
or
mov
add
pop
sbb
or
mov
fwait
push
fmull
in
pushf
sub
xor
test
adc
pop
fildl
ret
sub
cmp
test
mov
in
hlt
add
bound
lods
test
dec
rorl
and
mov
jne
ret
mov
mov
mov
pop
cmpsb
jo
xorl
lret
xor
mov
add
fwait
insb
rclb
add
pop
sub
pop
shl
scas
mov
js
and
push
xchg
jle
lods
mov
jge
lea
sbb
push
push
mov
pushf
mov
pop
mov
or
fidivl
xchg
sbb
sub
jns
sub
jns
out
clc
into
sub
frstor
icebp
ds
aam
pushf
jl
and
sbb
push
insb
jmp
dec
xor
mov
jbe
jmp
xchg
push
cmp
nop
fsubp
popf
push
mov
xchg
fcomp
test
mov
mov
shrb
iret
ret
cmpsb
and
stc
jg
xor
push
lods
mov
push
mov
pop
jns
push
fimull
ret
adc
andl
cmpsb
js
int
xor
sbb
repnz
inc
shlb
cwtl
sbb
mov
xchg
ds
loope
mov
les
call
insl
mov
jnp
imul
insb
insb
push
lods
and
jne
stos
xor
push
jns
addr16
mov
mov
stos
push
pushf
sti
fisubrl
mov
lds
mov
cmp
out
mov
das
lock
pop
popf
add
aad
xchg
subb
add
push
jmp
add
pop
sub
insb
jg
dec
inc
jl
sub
pusha
sbb
jns
pushf
pop
jbe
dec
lret
pop
lcall
int
or
es
mov
cli
pop
int
dec
dec
add
add
dec
pop
cmp
jecxz
mov
add
jle
cltd
or
xor
sub
xchg
xorb
jg
gs
sub
sahf
mov
ds
sub
fnstsw
mov
out
mov
push
sub
les
push
aaa
push
jp
enter
cmp
xor
call
xor
loopne
vmread
inc
jns
sub
sbb
xor
inc
cli
push
dec
add
cmp
pop
sahf
xchg
adc
adc
mov
ret
jb
sub
xor
add
add
sub
jmp
cmp
xor
xor
jl
and
repnz
inc
rcl
inc
addr16
or
sbb
mov
sbb
xchg
sbb
xor
jle
push
sar
inc
mov
add
cmp
mov
popf
or
jge
xchg
inc
dec
adc
push
mov
mov
lret
adc
push
xchg
dec
push
in
cld
inc
xor
clc
shll
jbe
push
cmpsb
imul
subl
dec
mov
fnstcw
and
dec
xor
xor
dec
xchg
das
pushf
sbb
pop
lcall
pop
cwtl
mov
push
cld
out
imul
imul
outsb
imul
sub
lea
stos
mov
rcrb
jg
xchg
js
inc
mov
daa
mov
xor
lds
inc
test
sub
inc
hlt
jg
pop
pop
jo
enter
adc
addr16
jns
cmp
jmp
int3
mov
fbld
add
dec
sub
sbb
and
pop
pop
sbb
fs
pop
pushf
xor
pop
sbb
cmp
inc
mov
jnp
cmp
pop
test
decl
mov
add
hlt
cmp
pop
inc
push
mov
ret
lock
shrd
jl
enter
jnp
add
pop
pop
lods
xor
xor
push
pop
inc
cmp
push
sbb
mov
jb
inc
mov
push
out
lea
mov
mov
jnp
inc
ror
icebp
jge
jae
cmp
pop
jg
xchg
test
mov
iret
call
pop
cmp
dec
je
cs
dec
out
repnz
dec
cli
lcall
inc
lods
in
rcrb
testl
fcomi
int3
popfw
inc
stos
inc
dec
sub
jbe
pop
rep
sub
cmp
sti
shrl
in
xlat
mov
adc
lahf
xchg
mov
movsl
sub
mov
jno
sarb
xchg
out
cmpsl
mov
movsl
in
hlt
add
pop
add
in
sub
repnz
stos
les
adc
out
rclb
push
sbb
mov
adc
enter
sub
xor
imul
add
xor
nop
imul
or
ret
or
sbb
jecxz
sarl
pop
sbb
mov
push
mov
xor
aam
xchg
mov
orl
push
ret
xchg
lahf
cltd
or
ret
aas
sub
popa
jg
lret
idiv
ss
roll
jp
inc
or
iret
std
adcb
insb
or
bound
aad
outsb
pop
movsl
stc
sub
mov
mull
and
movsl
inc
dec
ja
fstl
sub
or
push
push
roll
dec
inc
ja
sub
mov
loopne
pop
adc
into
xchg
cltd
cld
xor
cmc
cmpsb
push
mov
in
aam
push
add
fs
add
in
mov
jno
sbb
inc
jle
pop
fistpl
mov
inc
inc
dec
push
test
xlat
pop
mov
popa
sbb
ret
xchg
sub
pop
mov
in
xchg
cld
sub
fstl
or
ljmp
xor
movsb
andl
je
cwtl
mov
shrl
pop
adc
xor
rol
imul
mov
hlt
push
push
aaa
ss
flds
in
sbb
addr16
xchg
dec
mov
insb
rclb
sub
fsubl
ss
loope
rorl
sub
scas
test
or
mov
inc
inc
outsl
pop
and
lods
pop
popa
clc
jnp
arpl
cli
out
dec
add
lcall
mov
mov
mov
stos
and
inc
cmpsl
sbb
call
mov
add
loop
fdivs
xor
xor
and
lds
xchg
pushf
jbe
int3
xor
fwait
rclb
adc
pop
test
inc
or
cmc
and
push
xor
cmpsl
bound
insb
scas
push
add
rcrb
jnp
aas
mov
xor
pop
out
hlt
dec
add
mov
dec
leave
xor
lret
pop
mov
fistl
jg
mov
push
arpl
push
test
lret
fwait
repnz
add
jl
dec
jmp
sub
in
mov
subb
push
adc
call
sub
test
xor
and
les
pop
jnp
cmp
daa
in
or
xchg
xchg
and
jle
adc
inc
xor
cmp
cld
lods
popf
pop
add
inc
pop
lea
lea
mov
jns
imul
pop
rorl
mov
out
je
lahf
cmp
imul
lds
bound
push
in
int3
dec
in
inc
mov
and
dec
clc
stos
scas
inc
sbb
outsb
data16
cltd
pop
or
call
shrb
adcl
ret
ljmp
fcompl
pop
aaa
testl
sbb
push
stos
adc
jle
adc
rorl
cs
fdivl
or
fcoms
dec
fidivrs
clc
inc
jle
cmpsb
mov
cmp
cmp
add
mov
xchg
jp
lds
mov
mov
xchg
ret
sub
fwait
popa
popa
call
or
dec
mov
jae
mov
push
loop
cwtl
lds
push
aas
dec
push
rcl
rolb
in
cmp
outsl
push
jl
cli
stos
cmp
in
pop
mov
je
and
or
mov
pop
arpl
inc
insb
mov
daa
xor
or
leave
push
fisttpll
cltd
mov
sbb
xchg
fsubrl
mov
lret
xlat
ja
jle
push
fdivrl
sub
daa
repz
mov
jbe
mov
cmp
pop
jo
adc
std
sub
mov
push
fimuls
jne
leave
pop
sbb
adc
and
fs
sti
hlt
fdivr
arpl
inc
jl
add
cmp
ret
fsubl
aaa
inc
or
mov
loopne
cmp
mov
scas
arpl
loopne
cmp
test
jp
movsb
test
lcall
dec
dec
ds
not
in
fs
cmpsb
push
push
frstor
pop
rcl
insb
jno
cmpsb
mov
addr16
fadd
es
mov
mov
ds
sub
mov
icebp
testl
and
cmp
jl
xlat
cs
pop
aam
inc
popf
outsl
mov
test
pop
cwtl
xlat
sbb
popf
insl
sbbl
lret
xchg
xorl
repz
cmpsl
or
mov
mov
pop
insb
test
adc
mov
or
mov
mov
push
test
int
je
lods
stos
rclb
lret
leave
mov
xchg
push
fcompl
mov
sahf
sbb
das
loop
ret
add
fnstcw
dec
test
mov
jb
jle
stc
dec
test
sbb
lahf
cmp
mov
lret
push
cmp
cld
jmp
movl
push
xchg
lcall
mov
sbb
jo
or
inc
sbb
lods
ret
cmpsb
loop
pop
pushf
xchg
mov
insb
push
push
xor
sub
je
pop
loopne
or
lock
movsb
inc
aas
push
in
sub
shlb
xchg
int3
inc
imul
cmc
hlt
in
and
ret
mov
lret
xchg
sbb
in
mov
test
scas
mov
push
lcall
clc
mov
add
dec
call
and
clc
add
dec
jecxz
test
or
mov
lahf
daa
adc
jb
aad
mov
andl
pop
jns
mov
dec
subb
or
lds
pop
loopne
jbe
sbb
hlt
ja
push
ret
loopne
mov
sub
testb
adc
jae
push
fists
sub
arpl
dec
push
dec
add
jmp
aad
inc
aas
xor
xchg
sbb
mov
cwtl
jbe
movsl
dec
mov
and
xor
jle
jo
gs
movsl
negb
lret
ret
mov
aad
sbb
pusha
into
lret
cmpsb
sub
dec
lods
fwait
sbb
lret
in
dec
push
jno
jle
xchg
sub
mov
pop
pop
jl
ficoms
xchg
mov
call
xchg
jb
cmpsb
out
test
lods
lods
insl
mov
rclb
cmp
mov
fsubrl
inc
dec
lods
or
xchg
ljmp
dec
dec
mov
jl
aam
imulb
add
jne
idivb
mov
leave
xchg
cmc
lods
cmpsb
mov
imul
js
and
jmp
mov
lds
dec
repnz
icebp
sbb
sbbb
dec
inc
jae
jnp
movsb
adc
sub
fs
mov
xor
inc
jmp
in
xchg
pop
cmp
leave
movsl
ds
xlat
cld
and
jle
inc
dec
cmpl
adc
pop
and
mov
sbb
pop
mov
scas
iret
arpl
dec
cmpsl
add
out
movsb
insb
sub
testb
xchg
sub
js
addb
cmp
out
dec
mov
movb
push
sub
in
jp
xchg
ret
popa
movsb
ret
mov
mov
sbb
ja
imul
pop
call
mov
outsl
pop
mov
and
and
ret
aam
mov
xor
daa
mov
lret
add
sub
xlat
sbb
arpl
xor
inc
push
xor
jp
stos
jl
or
xor
test
add
jo
iret
mov
lret
ja
push
in
dec
sub
cmp
dec
pop
rcrb
aaa
xchg
jnp
fcomip
fdivrp
mov
adc
sbb
es
int
sub
in
adc
mov
dec
jno
int3
pop
xlat
call
cmp
jno
hlt
xchg
mov
xchg
jno
scas
mov
outsb
sub
mov
lcall
pop
insb
out
add
mov
mov
arpl
inc
cwtl
out
mov
inc
add
push
sbb
cmp
sub
icebp
xchg
push
jnp
rorb
cmp
arpl
ret
mov
pop
iret
lahf
sub
sete
rol
pop
and
push
lret
adc
inc
fst
ror
fmull
sbb
sbbl
mov
xchg
cmpsl
pushf
dec
cmc
test
xchg
inc
fistpl
enter
aam
lods
js
mov
mov
sbb
dec
inc
ret
ret
inc
and
mov
pop
out
sub
js
ljmp
jg
mov
xchg
es
out
outsb
mov
jecxz
push
jne
mov
jg
add
jb
fisttpl
dec
lock
jno
adc
shll
lret
xor
outsb
out
lahf
cli
or
adc
std
inc
js
stos
mov
and
add
mov
hlt
pushf
popa
xchg
mov
adc
fidivrl
mov
jo
imul
mov
and
push
mov
dec
jg
and
stos
aam
jnp
test
adc
in
jmp
or
repnz
ret
push
jbe
test
inc
loopne
push
es
xchg
out
fcompl
jne
or
test
popa
cmp
inc
sti
mov
aad
inc
out
cmpsl
outsb
stos
pop
pop
rorb
xchg
out
aam
daa
sbb
loopne
lret
in
stos
les
ret
in
push
pop
sub
mov
shrl
xor
jb
ret
movsl
xchg
loopne
rclb
inc
enter
outsl
std
ficoml
test
xlat
test
adc
mov
bswap
adc
xor
aas
mov
mov
adc
mov
mov
mov
dec
addb
ja
or
push
in
cmp
test
xchg
or
inc
movsl
sbb
movsb
pop
sub
mov
and
adc
nop
mov
dec
ret
ja
jp
sbb
cld
cmp
mov
stos
inc
pop
clc
icebp
adc
jge
fs
sbb
aas
gs
jle
add
mov
mov
out
fwait
or
xor
or
sbb
mov
into
mov
pop
inc
fsubrs
pop
dec
mov
push
lcall
rcl
andl
push
je
xchg
mov
xchg
dec
pop
jg
pop
push
ret
mov
ljmp
mov
xor
inc
or
pushf
push
push
mov
mov
insb
imul
lcall
add
jnp
mov
inc
into
mov
inc
mov
out
psubq
jg
cltd
pop
lea
call
lahf
subb
dec
jbe
fs
inc
mov
push
pop
mov
and
sub
xor
lret
cld
js
xor
aas
in
call
iret
std
out
mov
adc
adc
jae
jae
insb
rcrb
divl
inc
ds
pop
ficoms
jmp
lret
mov
xchg
or
and
adc
rcr
pop
push
rcr
ss
mov
fimuls
lods
lea
aas
fisubs
jecxz
sbb
test
sub
fdivl
xchg
shl
or
push
sbb
xor
jae
dec
xchg
lock
mov
stos
in
fistpl
sbb
and
ret
iret
fildl
jns
in
fldenv
sbb
clc
pop
lods
mov
sbb
incb
mov
push
jno
or
xchg
push
sbb
push
and
sbb
lret
add
rcll
insb
xchg
test
in
lret
stos
hlt
fs
fidivrs
sbb
cmpb
adc
dec
loopne
sub
test
jb
push
adc
push
movsb
xchg
aaa
leave
pop
lods
mov
sub
lret
mov
outsb
fwait
mov
cmpsb
test
cmc
stos
add
mov
cmpsb
test
inc
ficoms
push
cmp
xor
outsb
inc
mov
xchg
rcrb
ljmp
add
icebp
cmp
xor
fcoml
xchg
push
add
jns
ja
sbb
icebp
loope
xchg
push
out
shlb
jp
imul
sbb
imul
sub
aas
outsb
pop
lods
into
mov
cs
fnstsw
dec
xchg
lods
cli
jae,pt
cmovb
sbb
inc
scas
out
movsb
or
and
movsl
subb
adc
mov
jns
dec
push
addr16
adc
dec
jne
push
ficoms
sbbl
mov
in
mov
pop
ss
lret
subl
cmp
cli
aas
mov
aaa
pop
xchg
sbb
inc
lret
aaa
ret
cmpsb
cmpsl
daa
ret
test
shrl
jecxz
pusha
or
mov
push
shr
loopne
cmpsb
mov
xchg
popa
mov
jge
push
add
sbb
xchg
mov
jecxz
lahf
dec
mov
xor
sahf
mov
ljmp
sub
inc
cli
addr16
push
xor
xor
adc
pop
lods
push
push
jl
test
insb
cmp
clc
sbb
and
fisubs
aad
lea
or
lea
jge
xchg
adc
lcall
mov
jp
inc
xor
push
test
adc
mov
jae
jbe
xchg
fwait
sbb
jle
mov
rcll
cli
loope
sub
inc
inc
xorl
lds
xor
mov
jo
loop
dec
loop
lahf
popa
call
scas
popa
lds
scas
xor
xchg
iret
pop
and
popa
imul
shlb
lret
out
icebp
jecxz
movsb
sbb
dec
lcall
cmp
pop
lea
mov
stc
std
pop
mov
test
int3
mov
hlt
or
and
push
movsb
in
add
adc
aad
pop
jmp
xchg
insl
call
movsl
sarl
aaa
push
mov
mov
les
mov
loop
add
mov
mov
and
adc
sub
aas
mov
nop
pop
mov
std
lret
push
push
push
sti
push
addr16
mov
arpl
mov
mov
lea
sub
sbb
sub
pop
mov
xchg
xchg
scas
xlat
sub
cmpsl
notl
scas
sahf
fstps
dec
jb
and
gs
mov
dec
xor
call
ljmp
into
push
sub
ret
jae
cmpb
xor
outsb
fcoml
jecxz
mov
sub
cmpsl
xchg
call
fstpl
int
xchg
clc
repnz
pop
xor
mov
sbb
les
sbb
add
fs
aam
mov
fcmovne
outsb
jle
sbb
mov
adc
xor
and
mov
adc
fsts
flds
out
pop
xchg
aad
int3
movsl
cli
lret
neg
jl
inc
xchg
pop
mov
and
sub
jns
xchg
out
xchg
test
cmp
mov
pushf
mov
mov
xchg
sbb
sub
cli
and
addr16
and
jae
pop
psrad
cmp
inc
and
in
push
fwait
lods
jns
in
fildl
mov
movsl
scas
les
push
into
imul
inc
mov
mov
imull
jno
inc
push
mov
adc
add
xchg
mov
mov
cmp
bound
dec
sbb
xchg
es
jne
loopne
and
mov
sub
ror
out
jmp
mov
pop
pusha
repnz
dec
jno
xor
mov
adc
insb
outsl
mov
mov
sbb
inc
or
mov
ljmp
fcmovu
das
add
das
sub
inc
dec
mov
mov
rcll
push
cmp
cmp
ja
int3
rolb
pop
mov
mov
outsb
jle
add
push
dec
jge
aaa
pop
inc
mov
loopne
push
into
shlb
lret
push
rorb
sub
outsb
xchg
xchg
in
inc
cmc
xor
scas
imul
jne
adc
lds
lods
jne
xchg
fildll
test
repnz
cltd
sub
imul
andl
lahf
xor
ljmp
cwtl
mov
aaa
xchg
std
mul
sbb
add
movsl
flds
add
push
ljmp
shrl
in
push
cmc
push
mov
xchg
cmp
inc
in
inc
cwtl
add
or
push
outsl
jecxz
and
hlt
outsl
int3
and
fmuls
pop
sarl
push
dec
xor
sahf
std
push
addl
nop
lock
gs
lret
scas
rcrl
dec
mov
ja
enter
dec
test
cmp
js
and
push
add
adc
ss
sbb
inc
dec
and
fs
bound
inc
shl
out
pop
mov
not
jo
or
jne
dec
inc
shl
ds
and
adc
enter
lahf
and
xchg
or
xor
cld
and
pop
int
xor
pop
cld
mov
inc
imul
mov
pop
lret
xchg
andl
into
sub
pop
sbb
adc
enter
insl
add
mov
xchg
fidivl
mov
inc
andb
sub
out
aaa
pushf
jno
cs
xchg
in
inc
push
adc
pop
or
cmp
mov
jl
mov
cmp
mov
push
jp
jbe
ljmp
lret
jo
pusha
movsb
mov
xchg
lods
pop
pop
mov
mov
cli
xchg
sub
inc
mov
adc
mov
dec
dec
loope
pop
scas
inc
push
add
sub
mov
outsb
std
pop
or
push
push
sub
int3
dec
outsb
repnz
pop
lods
cmp
sbb
fnstenv
loop
push
test
push
stos
mov
sahf
sub
imul
dec
sub
inc
mov
push
lret
adc
in
shlb
fists
lahf
outsl
jae
push
add
xor
stos
push
sahf
push
or
cmp
xchg
fsubrs
sbb
lock
sub
xchg
dec
lret
or
cli
mov
mov
sbb
out
jp
and
xchg
fistps
push
aas
cmp
inc
jo
cmp
inc
outsb
dec
outsl
pop
mov
adc
lods
insl
dec
mov
mov
dec
gs
mov
push
and
jo
push
pop
mov
and
mov
xchg
scas
std
lods
shr
inc
out
push
lods
jno
jecxz
mov
insb
push
rclb
clc
inc
int
iret
int3
xchg
out
dec
mov
cmpsb
add
cmp
neg
cmc
cmc
cmpb
in
jecxz
ret
mov
mov
adc
movsb
push
cli
xor
add
out
fisubrl
xor
in
mov
cmp
cmp
mov
sub
dec
mov
xor
ja
inc
mov
pop
sarl
push
mov
nop
in
xor
jle
lret
pop
rorb
inc
pushf
xor
stc
rcll
mov
cmp
sahf
test
jge
popf
cld
out
hlt
sbb
inc
fdivrp
jmp
xchg
adc
push
lahf
mov
data16
cmp
in
mov
or
test
fincstp
lea
or
dec
std
test
or
cmp
fcmovu
cmpsb
inc
jge
or
lea
sbb
mov
iret
mov
push
mov
mov
out
push
scas
and
loop
stc
push
add
push
mov
out
cmp
fimuls
call
and
movsl
cmpsl
lahf
enter
jnp
xor
jnp
dec
outsl
inc
cs
and
mov
popf
and
rorl
int
lcall
aad
movsl
dec
sub
mov
pop
pusha
sbb
addr16
add
les
out
into
loopne
xchg
mull
push
inc
mov
ret
jg
sti
and
imul
xor
xchg
cmovl
mov
insb
cmpsl
shl
cmp
enter
dec
out
aaa
sahf
int3
lock
push
bound
sbb
aas
aaa
insl
cmpsw
lods
ja
pop
stos
les
in
fimull
xor
xchg
push
daa
cmpsb
int3
push
in
dec
lock
pop
inc
mov
cmp
jmpw
adc
mov
and
std
jnp
lods
stos
mov
mov
mov
cmp
adc
mov
push
or
ljmp
mov
imulb
cmc
js
mov
insb
fidivs
jne
pop
push
lds
sub
rclb
loop
xchg
cltd
aaa
jmp
fidivrl
fldl
sub
xor
or
adc
pop
push
push
cmp
pop
mov
mov
movsl
daa
pop
push
ja
sbb
hlt
or
lea
stc
ljmp
gs
mov
rcrb
and
jb
lock
rcrb
faddp
bound
push
push
loope
mov
insb
test
pop
jae
loope
shrb
jle
push
mov
pop
and
adc
and
push
fs
movsb
mov
sub
jnp
jns
mov
mov
cmp
cmc
mov
mov
pop
int
insl
sbb
mov
adcl
cwtl
push
loope
jno
shll
mov
sbb
sbb
push
push
cmc
sbb
mov
jl,pt
clc
outsl
in
jecxz
push
push
pop
popl
outsb
cmp
inc
clc
pop
cmp
jecxz
pop
shll
mul
inc
mov
stos
xchg
out
xchg
mov
hlt
call
and
jg
js
or
mov
int3
jecxz
push
ret
jp
imul
jmp
xchg
ss
fwait
pop
pop
push
mov
movb
xchg
jecxz
dec
xchg
dec
aam
adc
add
int
inc
dec
scas
out
inc
pop
rcr
lret
insb
or
stos
jg
inc
jb
adc
popf
in
or
ljmp
imulb
and
pop
adcl
xor
popf
movsl
rorb
pop
std
jle
insb
mov
add
mov
leave
mov
ljmp
out
aam
call
mov
lret
push
xchg
jns
dec
pop
push
cs
or
das
jne
lds
jo
or
mov
popf
jecxz
fnstenv
hlt
stos
iret
leave
mov
push
cmp
push
dec
xchg
mov
bound
and
jbe
mov
push
mov
and
push
cmp
inc
mov
xchg
outsb
push
outsb
fildl
dec
sub
or
mov
movsb
arpl
cmpsb
imul
lret
mov
stos
adc
sbb
je
sarl
push
or
and
mov
jnp
imul
mov
mov
div
jbe
out
ret
and
push
scas
fimuls
movsb
or
loop
les
shl
push
inc
insl
stos
xchg
push
xor
out
pop
inc
jg
into
cmp
pop
iret
pop
mov
jns
mov
ror
sarb
pop
data16
enter
sahf
stos
xor
arpl
adc
push
lret
in
mov
insb
mov
jge
daa
sti
sbb
ja
in
imul
cmp
and
js
in
push
xchg
push
lret
dec
stc
cmp
filds
stos
push
pop
lcall
imul
ror
std
lea
iret
pop
push
xor
hlt
jnp
out
scas
and
mov
mov
xor
jns
test
sbb
pop
cmc
int3
adc
mov
stc
stc
add
sbb
cld
jns
jge
ret
jb
push
xchg
hlt
lcall
sbb
jp
lahf
jnp
fs
hlt
scas
cmpsb
dec
cmp
jg
outsb
sbb
or
push
pusha
dec
or
inc
sub
sub
xchg
outsb
in
mov
xchg
imul
add
cmc
jbe
aaa
call
std
cmp
leave
cmp
subl
test
adc
xchg
sbbl
xor
sub
sub
or
jns
addr16
xchg
push
mov
xor
dec
push
add
scas
idivb
or
ljmp
mov
mov
mov
inc
lods
jb
gs
push
cmpsb
cld
push
xchg
bound
call
jle
cmp
mov
orl
lcall
xchg
ja
mov
mov
sahf
clc
or
and
xor
or
scas
dec
pop
push
mov
lret
jge
cmp
add
pop
mov
imul
pop
loope
cmp
pusha
fxch
fs
or
xlat
xorb
sub
and
add
sub
add
popf
fstl
mov
fcmovbe
xchg
arpl
sub
jne
rcrl
scas
inc
movsb
cmp
movsb
clc
movsb
xchg
sbb
loop
stos
popf
mov
jmp
fucompp
xchg
sbb
lret
xor
cmovle
divb
jle
jno
jne
add
inc
mov
sub
fs
std
sarl
test
cmpsb
scas
sub
jge
das
rclb
add
vmovhps
mov
fdivl
adc
push
adc
jns
cwtl
pop
push
jle
std
stos
xchg
repnz
fs
and
je
jnp
pop
std
cld
lds
popa
adc
add
xchg
xchg
out
dec
mov
or
dec
shll
mov
gs
into
jl
std
in
fbld
ret
lock
mov
xchg
lock
dec
dec
jmp
mov
pop
push
rclb
fcomi
out
jb
push
cmp
jg
loopne
push
xchg
cld
pop
dec
jbe
inc
xchg
mov
add
nop
dec
je
movsl
xorb
scas
dec
mov
push
testl
jecxz
fldl
mov
cmp
mov
pop
and
fimuls
xchg
les
mov
xchg
dec
mov
scas
mov
inc
sarb
adc
aad
repnz
into
or
leave
jne
mov
into
dec
in
jbe
mov
xor
out
pop
push
popa
fwait
pop
lret
dec
mov
imul
pop
call
and
add
dec
dec
repz
insb
cwtl
jbe
test
sbbb
add
add
push
adc
pop
cmp
aas
add
add
enter
scas
es
mov
pop
in
dec
icebp
mov
outsl
sub
pop
pop
or
cmpsl
in
mov
imul
jne
sub
incl
dec
dec
dec
mov
and
movsl
and
sbb
fucomip
jbe
rcll
jg
push
mov
addr16
push
or
mov
fsubrl
inc
jbe
fstp
call
cwtl
repnz
sbb
push
daa
xor
cld
pop
jmp
notb
mov
mov
pop
or
cs
jb
gs
shlb
jl
rcrl
out
inc
orb
xorb
sbb
inc
push
xchg
sub
aaa
xor
or
negb
push
icebp
out
cs
aas
in
insb
cmp
mov
outsb
xchg
rcrl
cltd
es
subl
mulb
mov
push
cmp
dec
lods
lret
push
mov
jo
scas
adc
inc
sbb
xor
xchg
push
fcmovb
lods
int
xor
hlt
or
pop
mov
or
sbb
jne
adc
push
out
daa
sbb
push
ds
and
mov
dec
mov
mov
dec
es
movsb
xchg
pop
pop
jnp
cmp
mov
mov
mov
ja
iret
jp
and
hlt
cmp
xchg
xor
aad
popa
inc
pop
sbb
lods
addr16
mov
add
out
or
inc
mov
push
lcall
cmp
mov
xor
pop
into
loope
xor
movntq
push
test
pop
das
jno
mov
lahf
push
imul
jb
inc
iret
cld
cmp
test
sbb
ss
aam
inc
and
mov
test
sub
xchg
and
mov
ljmp
dec
mov
fwait
and
sbb
xchg
jne
mov
mov
add
pusha
aad
adc
push
xor
pop
movsl
mov
js
xchg
decl
sbb
push
stc
pop
dec
sbb
xchg
popa
imul
fwait
xchg
pusha
inc
cli
popf
adc
sbb
loop
lret
stc
lcall
test
movsb
adc
clc
loop
inc
mov
cmp
push
jle
es
inc
fisubl
and
pop
orb
jle
mov
sarl
out
and
flds
insl
daa
arpl
mov
gs
pusha
jp
mov
mov
inc
cmp
xchg
sbb
mov
xor
jbe
jbe
rolb
std
fsts
and
fidivs
mov
push
fldenv
inc
dec
aad
scas
mov
adc
mov
push
shlb
add
xchg
repz
sbb
int
lods
popa
fnstcw
negb
shlb
hlt
ds
fldt
int
mov
in
mov
jecxz
lods
lock
adc
jge
push
mov
lret
push
pop
pop
mov
rorb
pop
xlat
aad
xadd
add
imul
mov
shll
xchg
xor
xorl
dec
mov
paddq
xchg
lahf
out
popa
jg
pushf
test
int
call
dec
lea
fldt
sub
sub
dec
sbb
dec
add
jmp
xchg
fmulp
je
arpl
add
sbb
lret
mov
mov
mov
adc
cmpsl
cwtl
push
movsl
sbbb
cmp
enter
fimuls
dec
adc
jp
push
std
popf
jl
mov
loopne
xor
lret
add
lcall
jl
aaa
and
mov
or
fsts
push
mov
push
es
gs
js
pop
mov
pop
xchg
int
adc
mov
repz
or
or
mov
mov
rorb
enter
xor
adc
push
jo
pop
sbb
mov
cmp
filds
imul
xor
fs
jmp
dec
fistps
lods
push
ds
js
movsb
cmp
adc
in
sub
test
mov
scas
aam
cmp
mov
mov
xorb
lods
int
or
in
or
jno
test
fwait
dec
and
or
cld
jns
push
daa
stos
scas
repnz
orl
outsb
lods
test
and
test
or
jp
ret
movsb
cmpb
inc
adc
sbb
ljmp
test
sbb
mov
jo
daa
inc
test
push
imul
fists
xor
pop
pop
es
lret
out
imul
sbb
sub
mov
int
xor
mov
or
adc
cwtl
add
jnp
cmp
jne
adcl
adc
subl
cmp
repnz
xchg
xchg
adc
xor
push
cmp
cli
mov
jns
clc
jl
add
movsl
inc
imul
fldl
mov
cwtl
jmp
jle
mov
xlat
mov
out
sbb
inc
inc
inc
pop
add
jno
daa
gs
jb
pop
cmp
cmp
adc
mov
jno
mov
xchg
pusha
pop
sahf
shr
adc
cmp
xchg
push
int
inc
fcoms
ja
fbld
dec
jne
xchg
outsl
icebp
clc
jl
cmp
repz
icebp
xor
jne
sbbb
scas
add
lahf
pushf
push
adc
rolb
cs
addb
fsubs
add
push
in
and
dec
movsl
out
push
punpckhwd
cld
repz
push
sbb
adc
add
cmpsb
mov
roll
sahf
sbb
push
sbb
inc
cmpsl
dec
stos
and
xor
lcall
sti
ds
jle
and
loop
das
jp
and
ljmp
call
sub
lret
sti
scas
xor
xchg
test
movsl
sahf
push
xchg
or
pusha
sbb
pop
popf
cmp
nop
ljmp
push
inc
mov
movl
cld
mov
shl
pop
iret
lock
adc
data16
jmp
lock
js
movb
jno
leave
inc
ljmp
mov
dec
push
aaa
inc
cmp
xor
push
jecxz
xchg
pop
arpl
and
xor
cmp
rorb
add
inc
dec
inc
cmp
inc
lods
lcall
push
push
aad
xor
mov
mov
push
rcrb
outsb
addr16
pop
outsb
mov
pop
mov
sar
and
dec
or
or
test
pop
in
jmp
dec
repnz
jno
xchg
mov
cmp
fcoml
jo
jl
adcl
orb
repz
leave
and
dec
mov
arpl
test
ret
out
sub
xchg
mov
cld
leave
adc
push
xchg
sub
pop
xchg
stc
jecxz
sbb
stc
enter
mov
js
aaa
popf
pop
stc
loopne
jg
dec
and
aas
loop
dec
cs
sbb
push
std
lock
jmp
mov
imul
pop
mov
rclb
or
ret
shll
out
dec
mov
test
sbb
sub
cmpsl
pop
lock
mov
and
out
cmp
je
inc
sbb
jb
adc
cli
jno
sahf
add
stos
int3
xchg
xchg
inc
mov
pop
and
mov
sbb
push
xorb
push
mov
je
rcll
xor
push
jmp
lea
pavgb
jmp
jo
jp
adc
jmp
sbb
mov
aas
sub
stc
sbb
outsl
les
xchg
shl
adc
orl
push
jnp
es
push
int3
das
push
cmp
mov
pop
hlt
or
mov
mov
mov
popa
cmc
cmp
add
xchg
scas
aad
ds
addl
or
xor
insl
mov
daa
pop
fistpll
cmp
movb
ja
jle
es
out
pop
pop
mov
mov
iret
mov
mov
call
xchg
lret
test
cmpsw
xlat
lret
mov
add
icebp
mov
imul
movq
add
bound
filds
xchg
mov
insb
imul
mov
jg
jns
orl
and
jbe
mov
mov
arpl
scas
js
mov
dec
push
sbb
lea
stos
push
xchg
adc
adc
cmpsb
out
sbb
and
mov
lcall
dec
dec
in
dec
and
mov
inc
add
sub
addb
aad
in
sbbb
xchg
jmp
es
adc
mov
mov
cmpsb
repz
xchg
xchg
dec
mov
mov
xchg
add
rcl
add
roll
pop
lret
adc
imul
mov
in
enter
adc
push
adc
lahf
subb
mov
inc
jae
and
mov
daa
pop
js
addl
or
mov
clc
inc
loopne
adc
mov
mov
push
test
cmp
pop
jbe
clc
or
stos
cmpb
andb
pop
cld
mov
jle
push
cltd
adcb
ljmp
leave
sbb
mov
pop
cmpl
xorb
or
out
dec
out
add
out
mov
sbb
xchg
mov
movsb
repnz
cld
adc
cmp
jp
inc
lahf
cmp
jbe
subl
jmp
loop
adc
rolb
scas
pop
loopne
jl
pop
sti
mov
adc
imul
outsb
push
rcll
push
pop
push
rol
stos
data16
jb
out
stc
ja
test
cmp
daa
and
cmp
xchg
mov
adc
mov
adc
fdivrs
das
mov
add
mov
dec
in
repnz
and
popa
je
dec
daa
xchg
inc
cmpsb
cmp
mov
aad
enter
iret
sbb
sbb
call
pushf
std
loopne
sti
aas
pop
sub
adc
fsubrl
cmp
mov
and
xchg
je
pop
pop
xchg
fwait
pop
out
mov
in
call
pop
xor
mov
nop
notl
sub
sub
and
and
add
mov
das
and
push
inc
mov
hlt
inc
lret
fs
mov
pop
incb
pop
sahf
xor
xchg
fcom
rolb
or
int3
and
dec
lcall
lret
cmp
addb
cmp
xlat
sahf
add
aaa
pop
xchg
js
push
inc
lret
aas
into
add
leave
pop
lret
dec
cwtl
cmp
sahf
jnp
add
jge
in
ret
bound
pop
mov
dec
inc
or
and
push
xchg
arpl
popa
jno
xchg
int
inc
pop
mov
push
mov
outsl
fisttpl
pop
dec
test
ficoms
in
test
inc
ret
xor
pop
call
outsl
stos
fisttpl
mov
xorl
es
mov
leave
sti
roll
mov
notl
cwtl
or
es
mov
not
mov
and
mov
inc
pop
arpl
jns
out
jnp
popl
prefetcht0
in
sub
push
cmp
fstl
adc
mov
enter
jg
repnz
out
leave
adcb
sub
push
aam
xor
in
shrb
loop
fstl
push
mov
es
scas
mov
push
push
lods
je
push
add
add
out
sbb
adc
pop
pop
push
test
xchg
or
xor
scas
cmp
push
sbb
pop
adc
mov
stos
push
add
pop
lods
dec
shl
xchg
gs
jge
inc
xorl
inc
scas
js
mov
mov
popf
push
cmp
mov
pop
sub
fsubl
pop
pop
sbb
inc
outsb
imul
ds
push
outsl
dec
lret
stc
sbb
and
insb
pop
ljmp
jg
sbb
cmp
popa
lahf
mov
cmpsb
mov
je
imul
xchg
xor
arpl
mov
sub
test
les
dec
mov
push
sub
add
fistpll
nop
orb
xchg
sti
bound
push
fwait
ja
cmpsl
mov
mov
std
push
in
cli
push
insb
dec
cmpsb
sub
sbb
dec
aaa
negl
fwait
dec
mov
cli
and
dec
xor
fisubs
pop
out
pushl
inc
dec
fisttps
outsb
out
or
xor
loop
push
fisttpll
and
ficoms
pop
push
stc
sbb
mov
clc
xchg
push
hlt
pop
cmp
pusha
std
cmp
ret
push
sbb
adc
pop
cmp
test
and
dec
sub
cmp
mov
sub
adc
popa
or
jg
pusha
daa
scas
lret
cmpsw
movsl
inc
jle
pop
repz
cltd
adc
or
out
jb
jbe
mov
mull
or
inc
push
mov
aam
imul
xchg
movsb
lahf
pushf
fmull
push
mov
mov
mov
loop
ficompl
sbb
add
in
jne
pop
lcall
out
and
test
insb
jecxz
ret
mov
xor
xchg
mov
xchg
lods
sbb
sbb
jb
mov
and
push
sub
negb
ret
jae
xor
push
add
pop
mov
add
pop
xchg
cs
roll
xlat
test
and
push
mov
test
shl
lods
mov
cli
cmpsl
leave
cltd
in
cmp
faddl
add
push
push
aas
pop
stos
in
sub
push
loop
xchg
insl
sbb
sti
push
mov
sti
jmp
or
pop
shlb
inc
pop
or
and
stos
fisubrs
flds
std
aam
filds
scas
inc
ret
fwait
mov
push
or
popf
roll
xchg
arpl
sub
mov
push
bound
jnp
out
lock
fldenv
adc
sub
xor
in
xor
repnz
andb
jmp
mov
mov
dec
shlb
add
push
popa
rorl
xlat
mov
jnp
shlb
scas
fsubl
xlat
sub
ss
pop
xchg
lods
mov
les
loope
daa
adc
js
xor
dec
mov
xchg
push
jo
inc
loop
in
jne
sub
inc
push
out
jle
jge
ss
aaa
mov
pop
fidivs
aaa
dec
pop
gs
icebp
ret
repz
jnp
mov
cmp
sbb
sub
pop
movsb
fstpt
sub
and
test
hlt
adc
mov
sub
and
mov
gs
mov
jnp
jg
xchg
scas
fndisi(8087
sub
dec
jg
mov
jmp
and
sub
sahf
int
xchg
daa
notb
cwtl
xchg
pop
push
mov
mov
sbb
cmp
dec
and
jno
cltd
scas
sahf
scas
je
cmp
sarb
stos
mov
cwtl
ljmp
pushf
insb
mov
add
push
faddp
xchg
jo
sbb
addb
repnz
fwait
xor
adc
sub
out
push
xor
faddl
push
sub
aas
aas
insl
push
fwait
jo
adc
add
xor
jmp
cmpsl
xchg
lods
arpl
sbb
or
stc
rol
xor
fsubl
adc
inc
mov
aaa
or
ficoms
popa
jmp
pop
pop
dec
fisubs
mov
nop
xor
xchg
sbb
or
inc
adc
sbbb
jp
pop
js
and
aam
imul
data16
xchg
and
ljmp
cld
in
xchg
sub
lds
and
cmp
xor
aaa
sbb
lret
std
mov
movl
divl
inc
push
arpl
jnp
sub
testb
mov
and
inc
and
cmpsl
adc
mov
movsb
cmc
insb
dec
jnp
and
ljmp
xchg
sub
xor
jne
fidivrs
imul
push
xor
outsl
test
jmp
popf
pop
xlat
mov
jge
add
movsb
aas
mov
mov
ja
push
xchg
pop
scas
push
mov
int3
inc
jae
mov
scas
sub
es
imul
lret
mov
add
cltd
sub
std
cld
or
pop
rclb
inc
in
pop
cmpsb
lods
inc
dec
test
xlat
mov
subl
and
jmp
fdivr
pop
xlat
and
addr16
aas
pop
data16
push
sbb
lock
cmp
lods
ljmp
out
mov
sahf
inc
insb
mov
push
leave
fsubp
xchg
test
hlt
jne
stos
and
pop
repnz
mov
add
add
mov
mov
insl
cmp
inc
push
cmp
rcll
hlt
mov
pop
mov
ret
orl
in
mov
fidivrs
sti
mov
nop
xor
pop
mov
cmp
adc
jmp
prefetch
adc
inc
pushf
fnsave
loop
mov
cmpsl
jnp
sub
loopne
mov
inc
mov
jl
xchg
jle
sbb
xlat
nop
push
jle
adc
pop
gs
inc
and
jge
fs
and
xchg
inc
cmc
ret
fcompl
sbb
cmp
rclb
adc
dec
loope
lea
or
push
sub
ret
xor
pusha
mov
xchg
mov
je
clc
aad
mov
ret
sub
cmp
xchg
add
xorb
cwtl
mov
or
lret
out
push
int3
jecxz
pushf
stc
repnz
or
pop
pop
outsl
adc
ret
mov
jns
popf
push
rcrl
fisubl
sub
xchg
movsl
add
fs
std
or
shlb
and
jnp
xor
out
sahf
daa
mov
cmp
lret
pop
xchg
sub
dec
rcrl
jp
fwait
sbb
dec
in
in
and
mov
or
mov
mov
movsl
dec
mov
cmp
fnstcw
dec
dec
loop
and
cli
inc
fnsave
stos
js
adcl
std
dec
push
push
loopne
xchg
mov
xor
mov
push
icebp
int
cs
or
popf
fs
sub
push
fisubs
jle
and
mov
push
outsl
sub
sbbb
loopne
dec
inc
adc
in
pop
pop
outsb
lcall
cmpsl
mov
and
rcl
xor
std
xchg
jbe
ja
dec
dec
mov
lret
xchg
mov
adc
push
lods
sub
pop
in
scas
sub
out
pusha
iret
xchg
pop
jb
stos
rorb
aaa
testl
test
sub
jns
xchg
adc
jp
mov
mov
rorb
imul
dec
cwtl
ficomps
test
int3
jo
pop
ss
and
inc
hlt
and
cwtl
test
adcb
mov
dec
or
loope
es
loop
mov
fdivs
sub
jmp
dec
daa
mov
pop
icebp
imul
xor
lea
sti
cmc
stc
pop
mov
or
sbb
dec
mov
stc
push
inc
out
fmuls
dec
int3
mov
jbe
cwtl
scas
mov
dec
push
js
xchg
mov
imul
or
xchg
sbb
and
adc
hlt
ds
int3
mov
js
in
cmp
jmp
xchg
sub
or
dec
lds
adc
test
imulb
lea
inc
sahf
lods
or
sbb
jno
mov
lcall
movsb
and
lcall
hlt
andl
ljmp
push
popf
dec
out
ja
jmp
lods
lcall
iret
or
jnp
test
dec
je
std
ret
push
into
sub
lods
or
out
out
adc
insl
inc
popa
gs
cmc
xchg
inc
enter
lock
aas
subb
mov
scas
add
ret
lods
lea
xlat
cs
ja
ret
mov
jne
std
das
xchg
test
dec
aaa
test
cmpsb
dec
or
fisubrl
or
fisttps
popa
mov
push
push
sbb
push
mov
shll
pop
jp
frstor
sahf
dec
imul
xchg
jl
out
out
xchg
hlt
loope
ds
jne
pop
and
repz
cli
lock
sub
and
mov
push
aas
jns
mov
mov
movsl
dec
leave
cltd
or
xor
cli
stos
inc
dec
int
sub
insb
add
cmp
push
push
push
and
stos
inc
mov
mov
mov
das
mov
mov
pop
cmp
cld
push
test
into
adc
dec
es
adc
das
or
not
lahf
lods
cltd
lret
jae
scas
mov
outsl
push
fcompl
ret
jnp
scas
add
jmp
push
fs
inc
mov
adc
pushf
mov
cmpsb
je
push
jle
popf
mov
clc
add
ja
pusha
cmc
lods
mov
mov
jge
sbb
adc
lds
cmp
xor
lock
orb
adc
xchg
in
or
cmp
pop
insb
mov
and
sub
xchg
rorb
jns
enter
dec
icebp
cltd
insb
idivb
int
adc
mov
mov
pop
or
adc
cmp
dec
adc
mov
mov
jae
push
cmp
std
cld
cmp
test
pop
push
mov
loopne
sub
inc
call
adc
shlb
repz
xor
rcll
sub
in
fisttpl
call
add
inc
jmp
jle
push
in
cmpsb
inc
dec
adc
rolb
outsl
lock
mov
lahf
enter
sbb
inc
dec
jg
dec
mov
dec
adc
mov
sub
pop
xor
jo
je
movsb
inc
out
icebp
lea
push
pop
jb
dec
cmpsb
add
js
mov
add
subl
pop
jl
mov
mov
shr
add
inc
cmp
loop
loopne
lea
movsl
jae
dec
cmp
fldl
subl
ss
in
movsl
int3
cmp
arpl
xorb
push
xchg
movsb
fnsave
xlat
mov
and
rolb
outsb
hlt
jmp
and
xor
xchg
mov
cwtl
cwtl
out
and
aas
push
pop
adc
call
shll
test
jae
fcomi
push
cmp
popf
pop
mulb
pop
jmp
lock
in
mov
jp
mov
lret
addr16
lds
pop
in
lea
xor
loop
and
xchg
test
and
push
dec
pushf
xor
cmp
mov
neg
mov
sbb
rcl
adc
les
cwtl
icebp
push
js
pop
test
or
ficoms
imul
mov
sar
push
pop
mov
arpl
xchg
fildll
jp
jle
sbb
mov
mov
aas
aam
lods
mov
ljmp
push
add
aaa
fsts
jae,pt
dec
loop
popf
mov
cmp
push
outsl
add
outsb
test
aas
pop
add
repz
test
out
pop
push
dec
notl
xchg
inc
aad
or
mov
popf
add
xchg
ret
sbb
jae
inc
or
xchg
jnp
jmp
pop
sahf
ret
mov
pop
aas
fildl
notb
lret
lock
jmp
int3
mov
add
scas
aam
sti
cmp
cmp
negb
jmp
in
ss
jge
sub
jbe
jmp
lcall
test
fwait
stos
xor
sbb
hlt
add
adc
xor
pop
cbtw
lock
lock
mov
lcall
stos
mov
mov
adc
test
sbb
int
pop
ds
xchg
fstl
mov
lods
ljmp
mov
fmul
xlat
std
leave
sbb
fisttpll
mov
push
idivl
sbb
int3
int3
mov
mov
mov
cmp
adc
outsl
and
jp
jae
mov
or
js
rcl
rorb
sbb
cmpsb
adc
push
dec
pushf
fsubl
rorl
repz
roll
adc
jno
jmp
and
loop
mov
sub
mov
aaa
nop
push
jbe
leave
pop
adc
insl
jecxz
movsl
test
xchg
lods
jmp
add
hlt
push
and
inc
push
push
mov
popa
mov
or
pop
jns
add
out
inc
jmp
daa
cmp
nop
stos
shrl
dec
orb
push
mov
dec
shr
jno
iret
lock
arpl
jo
fwait
mov
jne
ficoml
jae
jne
mov
push
adc
push
or
cmp
mov
xor
test
maskmovq
idivl
sbb
and
test
fs
mov
xor
enter
in
add
and
inc
imul
add
xor
iret
push
or
adc
cmp
addl
push
or
mov
dec
into
xchg
jl
stos
int
fs
push
and
mov
ss
outsl
pop
insl
ret
out
test
xchg
xchg
add
dec
mov
mov
inc
or
jo
in
les
mov
aam
fstpt
les
sbb
aad
inc
sbb
in
jp
es
sub
mov
sbb
rcr
jbe
fs
mov
testl
in
test
cmpsl
pop
outsb
mov
clc
and
loope
xor
add
pop
sub
xchg
sub
loop
scas
mov
cli
stos
lods
mov
jae
xor
aaa
dec
sub
xor
clc
xor
jp
in
in
pushf
ss
or
insl
xchg
enter
enter
pusha
lret
xor
xor
add
xchg
xchg
sbb
lret
ja
xchg
jp
add
jecxz
jle
in
clc
adc
mov
cs
jle
push
loopne
push
orb
popf
cltd
lret
xor
repnz
or
xor
outsl
or
scas
push
gs
xchg
jle
cmp
sbb
sbb
je
cs
sarb
push
cli
push
pop
aas
mov
int3
rcrl
sbb
mov
or
sbb
jle
jmp
movsl
aaa
rorb
in
pop
dec
sbb
aam
ss
mov
mov
les
jno
mov
leave
and
xchg
shll
or
mov
clc
pushf
les
stc
mov
test
cli
sub
mov
jnp
push
repnz
icebp
cs
jb
cmp
fistpl
jb
lea
scas
or
lret
loope
push
mov
sub
pop
cmp
dec
inc
push
lock
push
push
and
xor
adc
or
jecxz
int3
movsl
out
jle
add
dec
add
xor
ljmp
xor
insl
icebp
add
ss
push
mov
scas
cmp
pop
aas
jbe
dec
cmp
or
sbb
xor
sbb
jne
adc
rclb
push
mov
imul
inc
repnz
cwtl
add
cmp
movsl
repnz
arpl
sub
int
rorl
jg
mov
xor
pop
mov
pop
sbb
and
push
imul
pop
sub
mov
into
in
pop
add
jae
push
loop
add
xlat
int
mov
imul
pushf
push
adc
xchg
aas
push
add
int3
mov
je
std
test
sub
and
out
aad
jbe
sbb
push
sub
add
sbb
jbe
orb
mov
fisttps
sbbb
dec
xor
gs
push
stos
mov
pusha
sahf
sbb
add
mov
cmpsl
xor
cmp
rorb
mov
out
arpl
xor
int3
inc
xor
sub
ja
xor
mov
lods
les
mov
rcr
popa
out
pop
repz
mov
jecxz
jmp
adc
pop
clc
mov
enter
lret
pop
jl
mov
jl
test
cwtl
sahf
adc
pop
inc
fdivp
add
aad
arpl
mov
and
add
mov
mov
add
inc
stos
stos
ljmp
adc
sbb
add
push
sti
idivl
lds
cltd
dec
into
sbb
incb
imulb
lods
adc
push
daa
sub
inc
or
imulb
test
ja
lcall
insb
jb
mov
and
push
xchg
sub
ljmp
call
outsb
out
fiaddl
jnp
mov
jg
add
jl
lods
ja
or
mov
adc
xchg
xchg
out
jae
stos
pop
xchg
sbb
rcrl
xchg
adc
inc
pop
loopne
sahf
std
fwait
cmpsl
sub
mov
sti
rcl
pop
jnp
int3
jmp
push
insb
test
and
cli
loopne
shl
stc
aad
test
push
push
cmp
ljmp
jnp
pop
pop
out
les
cmp
pop
inc
push
jo
pop
push
sub
cmp
sbb
jns
pop
add
scas
mov
in
pop
jbe
or
sub
push
sbb
inc
cs
cld
dec
xchg
pushf
push
push
xchg
in
inc
and
pop
cmp
subl
shl
jle
scas
sub
aam
or
seta
dec
fldenv
cmp
mov
mov
ret
fldl
fcomps
adc
aad
push
fwait
pop
sti
out
sahf
inc
lods
loop
enter
inc
add
pop
popf
mov
or
mov
pop
jo
mov
pop
xchg
xchg
mov
testb
dec
adc
sub
std
fsubrs
mov
inc
xchg
adc
fs
cmp
or
cmpsl
lods
out
dec
dec
jbe
test
jb
sqrtps
mov
jbe
push
xchg
mov
cmp
shrb
in
fsubrp
pop
fiadds
pop
jno
push
daa
out
pop
ljmp
pop
inc
dec
negl
sub
int3
xlat
in
inc
mov
js
loope
cmp
inc
insb
cwtl
into
lock
dec
fcoml
stos
pop
lds
sahf
or
add
push
jmp
xlat
add
popf
cs
and
lock
sub
lea
sub
jnp
rorb
stc
mov
jb
fxch
aaa
mov
cli
mov
test
aam
xchg
scas
mov
push
sbb
data16
jmp
pop
sbb
adc
add
js
mov
cmpsb
xor
cmc
add
adc
cli
shl
rcr
sbb
cs
inc
sbb
shlb
js
add
std
das
stos
xchg
fadd
sbb
in
insl
lds
nop
jb
loop
test
faddl
nop
sahf
in
cmp
es
jmp
dec
fistps
jmp
xchg
mov
mov
insb
js
cmp
inc
inc
jl
dec
ljmp
adcb
jns
ljmp
shlb
cmc
xor
int
mov
enter
je
sbbb
pop
sarb
popa
fsubrp
pusha
mov
add
jl
sub
test
in
arpl
mov
mov
jo
roll
adc
mov
out
cld
lahf
adc
dec
or
cmc
push
add
and
mov
push
ficoml
adc
xchg
cmc
add
adc
addr16
out
loope
enter
ficompl
pushf
fsubrl
daa
push
lcall
pop
cmp
pusha
jnp
shll
and
rorl
xchg
push
or
outsl
pop
in
stos
jg
add
aad
push
into
out
adc
cmp
xchg
sbb
jno
push
es
push
incl
sbb
xor
das
maxps
imul
mov
push
jne
or
aam
mov
test
push
out
mov
stos
xchg
push
dec
jo
mov
mov
jmp
mov
std
mov
mulb
jle
or
iret
outsb
fwait
inc
pop
enter
test
jne
call
pusha
push
lods
xchg
push
sub
mov
adc
mov
dec
scas
mov
out
idivl
test
or
xchg
pushf
scas
punpckhdq
test
test
adc
mov
clc
aad
lock
inc
add
insb
pop
jb
sub
dec
fildl
sub
mov
push
pop
dec
test
cmpl
mov
xlat
and
stos
pop
push
or
pop
in
push
cmp
jge
gs
fwait
pop
xchg
stc
rcrl
cmp
mov
in
in
pop
enter
mov
dec
fiadds
das
out
sbb
popf
cmp
mov
in
add
popf
xchg
xchg
es
jmp
shlb
stos
pop
mov
fs
mov
movsb
fdivl
add
je
mov
inc
cmpsl
aaa
and
imul
daa
shll
lret
mov
mov
sub
adc
jns
inc
xor
popf
in
xor
out
stos
lret
push
xchg
pop
pop
inc
and
dec
xchg
lods
incl
adc
push
and
dec
xchg
out
xchg
or
push
sub
mov
sbb
pop
pop
mov
lods
outsb
sbb
dec
jmp
mov
sbb
je
ljmp
cmpsl
adc
and
or
jns
sub
idivb
andl
cmp
or
aam
daa
push
xorl
or
aaa
lret
mov
int
repz
lods
es
int3
mov
sbb
xchg
test
mov
add
push
push
adc
push
sbb
mov
xchg
arpl
jle
loopne
orb
mov
movsb
shl
and
xchg
cs
dec
mov
push
push
popf
les
mov
and
cltd
stc
fwait
dec
andl
push
cmc
jno
sti
push
sbb
mov
and
xor
ja
dec
sub
rcr
lds
lret
mov
jb
ljmp
xchg
dec
shrb
sub
fiaddl
dec
rcll
jne
adc
jl
add
adc
mov
sub
lahf
sarl
jnp
stos
movb
jno
sti
lods
insb
xchg
mov
cmp
fisttps
setl
xor
sub
in
into
xor
mov
pop
cmp
lcall
ds
add
push
cltd
lods
pop
ret
pop
fdivs
icebp
sub
mov
je
mov
lret
pop
repz
lret
jmp
dec
pusha
enter
push
xchg
in
jnp
xchg
ljmp
aad
push
jae
mov
sbb
push
sub
iret
dec
push
sbb
daa
push
in
or
out
aam
loopne
xlat
sbb
or
insl
pushl
shlb
test
mov
std
ja
loopne
scas
je
pop
dec
mov
inc
gs
jnp
pop
insb
inc
movsb
lods
pop
inc
jp
fdivr
fwait
gs
pop
insl
iret
clc
rolb
sbb
insb
loopne
into
nop
mov
jecxz
int3
xor
int3
push
sbb
jnp
lods
aas
fistl
pop
xchg
ljmp
push
lret
xor
cmp
push
insl
in
add
pop
sti
inc
push
add
sub
mov
xor
add
loopne
fs
jno
cld
xchg
inc
in
andl
mov
test
push
in
pmulhuw
js
mov
shr
leave
in
sub
outsl
mov
add
sahf
sub
inc
scas
jecxz
testl
xchg
test
inc
stos
pop
test
out
sub
xor
scas
fwait
and
arpl
cltd
loope
lcall
mov
adc
sti
rolb
inc
out
adc
sub
or
jae
out
lods
ret
cld
adc
shll
xchg
cmc
add
das
ror
dec
push
in
into
xor
push
into
hlt
hlt
jo
push
ja
test
mov
inc
mov
adc
inc
sub
pop
outsb
pusha
dec
cmp
xchg
jg
sbbb
jmp
sub
cmpsb
sub
xchg
lods
xchg
sub
adc
scas
cmpsl
push
xor
cld
mov
xorl
mov
dec
mov
or
stos
fiadds
mov
bound
shr
rolb
or
repz
jns
gs
or
xor
in
loope
shll
xor
xchg
jle
mov
rol
rolb
add
mov
mov
xchg
icebp
imul
and
in
jb
xchg
bound
push
push
in
jne
mov
in
mov
stos
mov
xor
int3
push
pop
shr
daa
arpl
mov
push
push
or
adc
and
push
jmp
mov
sbb
sti
pop
sub
int
cmp
aad
arpl
adc
add
ds
pop
push
imull
pop
add
xchg
ljmp
cld
xchg
push
pop
inc
push
adc
fimull
stc
fiaddl
ror
fimuls
pop
xchg
adc
cmpb
lret
js
test
fildl
scas
insl
movsb
sbb
stc
mov
mov
xlat
je
xchg
inc
jl
pop
cmp
cmp
jle
mov
pushf
push
mov
jl
insb
and
aam
lds
mov
pop
ret
inc
ljmp
mov
roll
repnz
dec
inc
lock
in
shlb
mov
movsb
xor
adc
rorb
mov
xor
rol
pop
jecxz
or
scas
scas
stc
pop
ss
mov
xchg
mov
out
dec
daa
push
fwait
sub
dec
mov
out
dec
jno
call
mov
jg
xor
xchg
ret
in
mov
mov
pop
aas
loope
cmc
or
mov
or
push
lds
loopne
ror
lret
sbb
repnz
cmp
add
jg
adc
or
sbb
stc
inc
pop
sub
or
das
pop
imul
arpl
test
fisttpll
pop
mov
in
mov
scas
xor
je
in
repnz
xchg
mov
push
outsl
cwtl
repz
daa
sbb
dec
ss
in
adc
and
aam
add
pushf
mov
mov
dec
test
jmp
sub
add
fistps
dec
pop
sbb
and
and
pusha
fbstp
js
xor
cmp
pop
ljmp
mov
push
jae
jne
std
xor
dec
push
jg
fidivrl
in
or
push
adc
mov
lock
shll
ja
lock
mov
mov
sbb
inc
scas
jb
inc
in
clc
ss
rorl
push
add
ja
pop
or
sbb
out
and
dec
or
cmp
lahf
pop
xchg
push
clc
pushf
sahf
fidivl
out
pushf
aad
iret
loop
mov
sbb
inc
bound
hlt
out
pop
or
push
and
bound
dec
dec
pop
jno
jg
fadd
arpl
jb
repnz
pop
mov
insl
xor
loope
xor
aam
xchg
loopne
inc
call
and
rcrl
pop
sub
iret
adc
clc
inc
add
add
mov
cld
and
sbb
andps
push
loop
push
inc
cld
sbb
stc
cltd
adc
dec
xchg
pop
rol
jne
jno
adc
cmp
mov
xor
in
or
mov
lea
mov
or
pop
outsb
aad
notb
popf
inc
in
bound
shll
adcl
inc
mov
pop
test
sub
mov
sarb
push
inc
test
and
movsl
lcall
mov
mov
cmp
repnz
test
or
dec
not
insl
inc
add
outsb
sub
add
fsubp
pop
ficompl
mov
push
mov
shrb
jnp
shll
decb
sub
lcall
std
jmp
scas
cmc
lcall
xchg
sbb
leave
enter
or
fists
movsl
rclb
bound
jmp
mov
jl
cmp
sub
in
icebp
int3
lods
push
sahf
call
xor
cmp
mov
cmp
les
push
lret
adc
hlt
dec
xor
and
jp
cmp
or
mov
jae
cltd
shr
into
inc
jp
xchg
push
dec
push
lds
repz
test
dec
outsb
dec
dec
jno
xchg
xor
add
clc
hlt
cmp
scas
xor
insb
mov
enter
fwait
sbb
stc
push
shlb
cltd
loop
pusha
xchg
cli
push
call
ss
mov
loope
cmpsl
adc
xor
aam
imul
fidivrs
ds
cmp
lahf
mov
test
dec
xchg
rcrb
cmp
lea
mov
xchg
xchg
loop
mov
sbbl
ljmp
adc
pop
mov
inc
mov
aam
inc
push
loopne
cmpsb
jns
pop
and
push
test
sbb
push
xchg
xor
add
sbb
dec
mov
lret
ffree
pop
cltd
mov
lea
dec
out
mov
movaps
mov
sbb
rolb
jb
in
sub
shlb
subb
aad
gs
push
in
jp
cmp
cltd
les
adc
dec
ss
loope
xchg
dec
lds
fstpl
push
cmc
add
jge
test
fcoms
clc
sub
out
sub
jne,pt
add
push
mov
jno
and
xlat
inc
out
cmp
in
cs
xchg
jp
add
xchg
jp
cli
test
cs
xchg
sbb
hlt
pop
aam
xor
xlat
cmp
or
cmp
or
cmpsl
lret
mov
scas
or
push
push
shll
sbb
in
push
cltd
out
rep
dec
push
adc
cmp
jle
enter
sub
xchg
in
out
dec
xor
adc
jl
lds
mov
mov
scas
cwtl
sar
out
xchg
xlat
or
mov
pop
jle
dec
das
pop
mov
in
cmp
push
jae
pusha
jl
ss
dec
test
or
sbb
insb
lcall
adc
cmpsb
fistps
xor
sub
in
shr
add
movsb
mov
pop
pop
ljmp
xor
sbb
fisubl
cli
sbb
cmpsl
cmp
sarl
test
cli
mov
xor
ss
mov
stos
jle
sbb
pusha
in
out
pop
push
in
call
lods
and
pop
add
pop
adc
sbb
sahf
test
pop
shrl
or
ljmp
mov
repnz
jp
and
test
dec
pop
sub
sbb
and
xor
cmp
mov
dec
ds
jb
push
and
or
loopne
jae
sbb
lret
cld
inc
push
cmp
push
ljmp
add
dec
aad
cmp
and
sub
in
cmp
adc
mov
adc
push
hlt
lea
or
xor
xor
inc
cmp
in
or
cmp
out
mov
shll
jo
mov
subl
scas
popa
jno
lret
push
jp
sbb
inc
popa
jae
mov
andl
cmp
xchg
lahf
pop
cmp
mov
cld
jbe
popf
sub
adc
popl
ret
add
test
xchg
daa
or
cmp
cmp
dec
jae
pushf
repz
mov
jb
test
xchg
mov
leave
cld
ljmp
inc
fcmovu
int3
adc
push
jb
lock
pop
cmp
lahf
pop
in
fsubrs
popa
jb
or
inc
sbb
pop
pop
fistps
shr
cmp
jg
out
aad
pop
cmp
dec
pusha
aam
push
clc
mov
mov
jge
xor
xor
xchg
pop
repnz
mov
xor
pop
dec
fldl
inc
lahf
push
shlb
pop
test
jo
in
xchg
cmp
test
shll
cmp
jle
add
mov
lods
or
fildl
mov
fsubr
and
mov
jbe
dec
cmpsl
aas
adc
jmp
addl
dec
xor
test
or
subl
pop
or
pop
movsb
negl
sbb
aam
arpl
bound
out
cmp
cmpsb
inc
inc
push
adc
arpl
les
cld
sarl
cmpsb
fcmovb
adc
inc
hlt
inc
xchg
jl
stc
scas
pushf
and
or
out
jo
loop
outsb
lcall
rol
push
cmp
mov
dec
hlt
inc
shrb
leave
imul
loope
xlat
inc
fisubrl
outsb
or
in
hlt
sahf
mov
add
and
aas
adc
jmp
popa
xor
dec
shll
rclb
push
and
adc
push
incb
mov
mov
leave
mov
push
sub
ret
dec
fs
das
cmp
idiv
xchg
insl
in
adc
jo
inc
xchg
icebp
mov
gs
lock
jge
push
dec
addb
mov
sbb
jmp
jge
xchg
std
out
lcall
cmovno
ss
mov
push
or
lock
inc
dec
xorl
cmp
arpl
daa
cmp
mov
cmpsb
sub
or
jecxz
pop
daa
lret
add
add
jmp
scas
adc
mov
pusha
adcl
xchg
and
cmpsl
hlt
xchg
mov
push
dec
mov
pushf
pop
inc
pop
jl
inc
aaa
xor
adc
mov
jbe
jge
fdivrs
xchg
scas
inc
cli
rorl
in
xor
adc
arpl
mov
repz
lahf
adc
mov
icebp
fwait
and
daa
stos
test
je
rorl
shlb
mov
test
and
add
or
push
inc
inc
in
dec
bound
mov
aas
les
sub
das
pop
fidivs
mov
pusha
loopne
into
mov
push
clc
cmp
ret
lods
adc
or
in
cmpsl
pushf
jecxz
iret
push
add
popf
enter
or
adc
aam
sbb
xor
dec
sub
mov
arpl
int3
insb
or
sub
sub
cli
stos
arpl
mov
int
xorl
mov
push
stc
ljmp
cmp
in
cmp
xor
jns
aas
rclb
loop
jecxz
cmp
push
xlat
cmp
mov
ret
adc
sahf
ljmp
pusha
jmp
es
adc
aaa
loopne
inc
xchg
pop
sub
xchg
inc
jmp
jge,pt
sub
cmp
mov
sbb
mov
jb
push
mov
sbb
xchg
jge
loope
ss
outsb
xor
xor
je
and
or
aad
insl
cmpsb
addb
shlb
xchg
cltd
push
push
fwait
cld
clc
and
mov
enter
push
ss
inc
daa
inc
call
add
xchg
or
mov
cltd
pop
mov
lret
or
aaa
xor
add
addb
mov
out
in
dec
push
and
mov
add
call
pop
jae
cmpsb
daa
iret
call
hlt
insl
lods
pop
ret
ljmp
orl
fidivrs
mov
mov
xchg
mov
movsb
add
adc
gs
xchg
mov
call
es
mov
push
lods
loopne
xchg
mov
adc
add
add
add
adc
adc
rorb
mov
add
and
mov
pop
jae
inc
gs
jno
cmp
lcall
stc
inc
sbb
push
jne
icebp
xchg
in
xor
pushf
jecxz
shl
shrb
stos
xor
adc
push
cmp
testb
mov
jno
xor
lds
sbb
adc
jge
and
test
imul
mov
test
cmp
addr16
sti
xchg
sahf
sbb
xchg
fwait
sub
cmp
sbb
sbb
lock
leave
sbbb
lret
sub
dec
leave
icebp
cmp
lret
cwtl
aad
adc
loope
pop
and
mov
std
nop
or
mov
push
jne
scas
cmp
cmp
repz
sbb
cwtl
jl
push
jp
adc
ss
loope
mov
push
loope
je
mov
add
push
outsb
idivb
stc
int3
xchg
dec
les
jle
das
loopne
sbb
sbb
cmp
mov
push
dec
out
sub
stos
jnp
add
out
addr16
mov
into
fistl
loope
rolb
faddp
fs
mov
addl
cld
dec
roll
xor
mov
stos
lret
fsubrs
scas
push
lret
aam
cltd
mov
cmp
icebp
shll
popf
sub
cmpsl
mov
cli
scas
rcr
jmp
fldenv
repz
arpl
mov
mov
mov
fisttpl
stos
cmp
test
lds
jns
inc
jecxz
jno
mov
pandn
cmp
sub
jle
stc
adc
insl
xchg
mov
mov
jecxz
stos
mull
pusha
and
rcll
aaa
sub
push
cli
lcall
cmp
cwtl
inc
fmull
lcall
sub
mov
xchg
push
adc
or
pop
jo
add
in
pop
ret
inc
mov
add
xor
cmp
cmp
pop
mov
fwait
roll
add
xchg
or
imul
inc
rcl
aaa
loop
pusha
out
or
xchg
mov
pushf
fstps
add
xlat
pusha
ret
stos
in
mov
addl
ret
or
out
mov
sbb
iret
lret
or
dec
or
fidivrs
and
lock
out
sbb
push
data16
mov
and
sub
sub
mov
inc
shl
dec
hlt
cmp
pop
cmp
aaa
mov
repz
or
push
push
cltd
inc
rcll
pop
and
faddl
add
fnsave
fisttps
jo
shl
or
pop
dec
gs
sbb
pop
jbe
pop
pop
or
popa
pop
push
cmpsb
jp
push
in
lods
dec
adc
fidivs
jno
mov
mov
mov
and
outsb
pop
movsb
ja
insl
call
loopne
mov
test
inc
rcrl
xor
jo
cmp
fisttpll
xchg
pop
xor
lds
clc
mov
ljmp
bound
adc
and
das
cmp
pop
aam
aaa
cmp
sarl
xor
jno
pusha
dec
push
insb
adc
stc
shl
jmp
cmpl
xchg
mov
dec
je
jecxz
loopne
lcall
aas
rolb
push
in
xchg
mov
pop
xorb
mov
adc
xchg
or
lea
cltd
popf
sbb
fst
pop
jnp
dec
sbb
xor
addr16
xchg
les
push
pop
jle
mulb
and
jae
test
pusha
int
adc
in
xchg
adc
adc
lret
shl
xchg
push
aaa
cltd
sbb
sarb
inc
dec
movsb
add
mov
mov
xchg
gs
pop
pop
fbld
stos
data16
in
fnstenv
add
cltd
mov
jns
push
inc
and
cmpsb
mov
mov
into
cmp
and
mov
sub
xorb
push
xor
dec
cmp
sub
andb
push
imul
aad
leave
mov
cwtl
fsubp
sub
enter
andl
and
daa
repz
stos
lock
jg
and
cwtl
mov
imul
adc
sbb
lahf
mov
hlt
cmc
loop
xchg
jbe
mov
jl
popa
test
xor
xchg
adc
pop
pop
mov
adc
cwtl
inc
repnz
scas
loopne
mov
push
adc
rolb
test
les
scas
arpl
call
std
int
jl
xchg
jp
rcr
sarb
cs
xor
jle
and
mov
xor
lcall
add
fildll
pop
sbb
mul
jno
jo
xor
push
push
and
ss
ljmp
stos
mov
jno
stos
mov
fsubl
fmuls
jg
cs
es
lods
sub
orl
test
sti
fldcw
aas
testb
arpl
fisttpl
sub
test
das
andl
in
mov
push
adcb
popa
jns
fmulp
test
pop
fnstenv
ret
cwtl
movsl
inc
inc
das
stos
lret
sub
pop
fisubl
mov
add
mov
sti
inc
dec
push
dec
int3
ret
or
cld
push
jne
adc
mov
mov
adc
es
and
and
add
lret
lock
rcrl
loope
mov
shll
orl
ret
and
mov
pop
jecxz
xchg
or
shll
adc
xor
sbb
mov
iret
sbb
mov
mov
jnp
loop
sbb
jl
adc
insb
hlt
test
or
shr
add
dec
xor
jo
inc
inc
cli
push
imul
pop
mov
arpl
cmpsl
inc
pop
aas
je
pop
xor
fwait
stos
adc
test
mov
sahf
mov
lock
std
push
mov
mov
add
shld
mov
lret
cmp
pop
lods
jp
add
popa
sub
jmp
out
jle
mov
mov
fistl
pop
notb
xchg
cmp
fwait
push
pop
cmp
sti
or
inc
andb
mov
push
scas
imul
and
inc
fstl
mov
mov
lret
dec
mov
pushf
scas
add
xchg
ja
pop
sahf
call
dec
inc
cmp
and
pop
stos
mull
fiaddl
dec
mov
test
jno
mov
test
lret
std
and
je
aaa
fdivrl
out
ja
jp
mov
int
mov
jmp
je
or
filds
movl
cmp
pop
mov
inc
mov
ffree
mov
shrb
sub
mov
ljmp
test
mov
cltd
jnp
jp
add
dec
aaa
add
loop
int3
out
pop
mov
in
in
mov
mov
push
dec
in
les
ss
cmpsb
jo
mov
nop
mov
push
stc
inc
icebp
mov
dec
fs
inc
mov
lock
ljmp
jle
add
dec
in
push
in
in
inc
jmp
pop
shrb
imul
cmp
scas
or
clc
mov
jne
pop
pop
jnp
mov
cmpsb
jnp
mov
push
jge
fldenv
jg
fildll
and
adc
mov
pop
aad
hlt
mov
sbb
lea
sub
cltd
inc
test
fmull
rorb
mov
cmp
mov
cmp
imul
jp
jmp
shrl
jmp
mov
outsl
xchg
sarl
inc
add
mov
push
xor
xlat
add
jecxz
cmc
jb
lcall
test
vmovapd
cmovo
inc
xor
dec
pop
stos
ss
rcl
push
cmp
cwtl
or
dec
cmp
jecxz
fwait
bound
cmp
divps
push
inc
lret
shrl
mov
scas
mov
cwtl
jg
popa
sub
popa
cmp
push
jns
filds
imul
mov
pushf
icebp
push
fists
mov
ret
or
fdivl
popf
js
inc
imul
cmpsl
xorl
mov
push
call
xchg
insb
out
cmp
ljmp
push
cmpl
call
outsb
xor
adc
rclb
leavew
nop
sbbl
xchg
mov
jmp
pop
sahf
ljmp
iret
xchg
insl
push
mov
push
pop
inc
mov
mov
call
out
xor
mov
mov
jne
imul
mov
orl
xchg
outsl
xorl
sti
enter
push
or
cmp
mov
mulb
pop
jo
je
lods
xchg
icebp
adc
popa
push
mov
cld
push
lret
mov
and
cli
dec
dec
call
cmp
xlat
mov
sub
lahf
dec
jl
mov
jge
xor
jmp
push
cmpsl
inc
cwtl
cld
je,pn
arpl
emms
cmp
pop
lock
xchg
adc
dec
inc
enter
cli
int
add
ret
sti
dec
mov
pop
imull
sahf
dec
sub
jne
sar
mov
xor
aaa
fisttps
pusha
inc
in
cmp
fidivl
cmp
icebp
push
push
jbe
pop
bound
imul
pusha
scas
lea
ljmp
or
inc
cmc
js
fstpt
aaa
jmp
jno
fwait
std
or
call
stos
fs
in
sub
mov
add
gs
hlt
mov
jg
aas
or
cmp
inc
or
xor
mov
xchg
stc
cmc
or
mov
insb
icebp
push
imul
xor
test
pop
push
aam
hlt
loop
rorb
xchg
add
sbb
mov
and
ljmp
pop
addr16
and
dec
and
mov
xor
cmpb
push
pusha
dec
sti
cmp
mov
jne
lock
test
add
scas
cmp
sbb
sub
mov
int3
or
ret
inc
cmp
repz
or
dec
ljmpw
sarl
xchg
or
popf
xchg
imul
jno
fdivrl
lret
cwtl
das
loop
aam
sbb
inc
sahf
adc
dec
or
popf
popf
hlt
mov
pop
pop
imul
fidivl
in
cmp
rcrl
push
lock
aaa
ja
dec
lahf
jle
cmp
xchg
cmpsb
lock
ret
shrb
pop
and
fstpl
jl
and
inc
shl
je
xchg
cmp
cmp
add
clc
mov
rcll
jmp
shrb
or
sub
or
push
das
sub
add
das
in
adc
fwait
push
lods
ret
sahf
cli
lret
shlb
mov
and
ss
push
mov
cmp
xlat
jmp
push
orl
push
es
adcb
dec
dec
jae
adc
call
add
sbb
mov
out
mov
je
scas
jno
jns
out
jp
dec
and
push
jno
mov
test
imul
ja
imul
into
sub
inc
dec
xor
out
jne
aaa
mov
inc
jle
je
arpl
mov
cmc
dec
repz
cmp
pushf
push
orl
orb
mov
std
mov
jnp
dec
cmp
add
mov
mov
mov
add
inc
adc
mov
dec
mov
outsl
pop
rorb
xor
bnd
ss
mov
mov
addr16
std
mov
sarl
je
daa
sub
les
jl
and
mov
addr16
les
lahf
into
fisubrl
xchg
mov
jg
mov
icebp
push
js
test
add
mov
sbb
jb
jge
inc
sub
clc
out
dec
aam
lods
or
lahf
xor
in
sub
cld
mov
jmp
push
and
pop
bound
and
xchg
stc
or
sarb
mov
ds
mov
add
aas
out
jbe
mov
test
pusha
jge
jge
jns
ficoms
push
int3
out
imul
xor
jbe
test
jp
xchg
je
pop
or
adc
mov
sbb
mov
ja
xchg
nop
negl
call
add
sbb
movhlps
out
sub
adc
out
lods
sub
and
cmp
pop
add
mov
out
xchg
jecxz
adc
dec
and
aaa
test
jnp
ss
outsb
and
imul
mov
in
cmp
xor
pop
mov
pop
dec
nop
nop
mov
mov
inc
lret
sbb
sbb
pop
xchg
jg
push
sbb
sbbb
pushf
xor
dec
push
sub
mov
pop
daa
addl
sub
dec
fcoml
rorl
push
add
push
cmp
mov
arpl
test
adcl
scas
dec
add
and
out
cmp
scas
xchg
out
xor
push
xor
rcl
mov
xchg
pop
insb
jle
addb
and
push
xchg
mov
xchg
movsl
imul
jecxz
ret
iret
insb
je
jne
jge
out
and
scas
inc
mov
cmp
aaa
inc
xchg
or
mov
insb
lea
in
dec
insb
cltd
mov
in
aam
cld
outsb
rcrb
in
mov
test
mov
cmpsl
sbb
cmpsl
scas
rorb
pop
mov
sbb
mov
jbe
xchg
lods
xchg
push
fisubl
jmp
test
sub
mov
xor
push
fcompl
jecxz
cmp
dec
repnz
icebp
repnz
outsl
push
bound
test
clc
inc
stos
add
push
inc
fsubp
dec
push
cmpsl
dec
sbb
push
push
pop
adc
xchg
repz
mov
mull
jl
into
in
ret
movsl
xor
jp
frstor
push
pop
sub
dec
es
dec
mov
inc
lret
push
inc
push
mov
push
and
xor
ficompl
dec
sbb
xor
mov
sbb
pop
mov
ljmp
xchg
lahf
cli
sahf
pop
mov
mov
dec
and
sbb
lcall
jmp
int
mov
fnsave
sub
mov
seto
xor
mov
jmp
lcall
cmc
lods
fists
push
movsl
pushf
mov
sbbl
push
jecxz
out
sub
lret
cwtl
stc
mov
pop
cmp
adc
insl
loopne
xchg
add
sbb
mov
pop
nop
jnp
push
jnp
sbb
adc
jne
out
enter
gs
cmp
add
es
mov
fcmovbe
stos
je
sbb
js
add
or
outsl
xor
or
pop
mov
scas
add
add
sbb
ljmp
mov
dec
jo
xchg
mov
cmpsl
adc
adc
inc
adc
jne
les
rol
pop
pop
or
and
das
loope
test
loopne
cmp
pop
add
jo
insl
pop
mov
hlt
int3
dec
inc
sbb
mov
lcall
and
sbb
jp
fdivrl
scas
sub
jmp
dec
in
xor
xchg
out
mov
inc
ds
dec
lock
push
mov
mov
xlat
lock
push
lahf
push
outsb
inc
cld
test
sbb
add
or
jmp
aam
test
and
mov
mov
scas
lods
push
ljmpw
pop
mov
std
in
insb
cmp
adc
jle
pushf
jmp
jne
lds
xchg
cmpsb
adc
int3
xor
xlat
adc
enter
jg
push
mov
and
push
inc
push
adc
push
aaa
and
popf
ret
lods
stos
clc
in
add
gs
or
les
pop
xchg
mov
jmp
sbbb
int3
adc
stos
lock
mov
test
and
sub
or
and
push
or
jg
inc
pop
hlt
sbb
mov
mov
ret
data16
idivb
ljmp
xor
dec
sub
in
push
pushf
imul
pop
xor
jae
jp
imul
aad
xor
adc
fisttpl
repnz
sub
pop
faddl
pop
mov
icebp
orb
dec
fbstp
stc
stos
mov
or
idivb
std
lods
arpl
sbb
push
add
dec
stos
and
dec
jle
adc
push
mov
mov
fsubl
cmpsl
inc
cmp
es
xchg
repz
mov
addr16
push
enter
mov
std
dec
adc
mov
cltd
out
mov
pop
mov
push
add
in
movsb
out
or
xor
sub
inc
jbe
and
cmp
fcmovne
inc
and
dec
insl
cmp
sbb
mov
xchg
sbb
clc
adc
outsb
stos
insl
jno
lahf
jnp
nop
fwait
jp
mov
sub
hlt
out
or
cwtl
aad
dec
bound
add
or
in
stos
pushf
inc
les
les
in
sub
pop
cmp
mov
xor
outsl
js
mov
ret
cmp
insl
sbb
lcall
fisubl
jo
sahf
push
mov
sub
sbbb
xor
pushf
insl
xchg
mov
or
sub
ret
cltd
xlat
cmc
test
pop
out
lret
mov
cld
outsl
add
jns
int3
sbbl
adc
fmuls
bound
or
filds
pop
mov
sub
fs
mov
push
sarl
pusha
ret
mov
fsubrs
pop
mov
adc
shll
scas
lret
jp
int
add
cmp
mov
sub
xchg
in
orl
into
dec
sbb
push
popa
push
jno
cmpsb
leave
dec
cmpsl
fwait
movsl
cmp
or
adc
inc
notl
xor
popa
test
adcl
dec
push
imul
repz
frndint
cld
jo
xor
jge
cld
jecxz,pn
cmp
xchg
jecxz
jns
inc
popf
push
mov
and
or
rorl
daa
call
and
dec
jnp
pop
sahf
xchg
mov
nop
daa
ljmp
push
fisttpl
cmpsl
out
xchg
push
pusha
sub
adcl
xchg
stc
xchg
mov
lret
faddl
push
jbe
fildll
mull
out
inc
xor
or
and
mov
sbb
ljmp
aaa
outsb
cmp
push
stos
xchg
test
ror
in
int
jb
enter
xchg
loopne
inc
and
mov
orb
xchg
adc
or
pop
daa
xor
jno
adc
adc
mov
imul
movsl
clc
aaa
pop
and
mov
adc
cld
jge
hlt
add
stc
test
ds
sub
push
scas
out
mov
or
xchg
cli
add
insl
not
cmpsb
xchg
aad
push
mov
out
and
mov
mov
lret
and
mov
add
push
aas
aas
ljmp
mov
ds
mov
sub
cmp
mov
test
push
pop
js
cmpsb
xchg
or
mov
aas
mov
test
push
jno,pt
xor
jo
pop
mov
and
pop
fcoml
add
out
jg
xorb
dec
sbb
movsb
popf
push
ljmp
int
or
test
pop
sbb
movsl
call
push
daa
aam
lret
mov
sbb
xchg
xchg
cmp
jbe
mov
add
clc
inc
ds
inc
rcrl
sahf
test
or
int
ret
pop
lret
ljmp
pusha
xor
add
xor
aam
bound
pusha
repnz
push
cli
nop
fldpi
scas
xor
cmp
test
pop
es
stos
test
mov
xor
pop
cld
sbb
adcb
repnz
add
mov
dec
mov
mov
cmp
sbb
add
in
mov
pop
aas
sbbl
scas
hlt
inc
les
leave
push
pop
jl
enter
in
scas
and
mov
ds
negb
inc
xlat
mov
dec
jns
int3
inc
repnz
pop
jge
aam
push
data16
or
ljmp
xor
cmp
cmp
fisttps
subb
fsubrs
std
adc
cmpsl
add
ds
push
jo
ds
pop
and
pop
jmp
jl
jle
mov
jns
push
mov
or
fsts
mov
loopne
dec
lea
mov
addr16
add
add
sahf
inc
das
push
shlb
xchg
lea
xor
push
push
pop
aas
xchg
es
adc
repnz
sub
sub
ds
out
stos
adc
adc
mov
jae
in
test
push
fldenv
jp
push
lea
mov
sbb
ds
cmpsl
je
add
push
loop
lret
call
mov
add
pop
push
inc
add
fisubrl
scas
xor
icebp
inc
and
xchg
mov
outsb
and
mov
sahf
stos
dec
dec
fsubrs
xchg
mov
inc
cmp
add
dec
mov
or
adcl
pop
add
hlt
scas
add
loopne
std
stc
shl
or
pop
xchg
shlb
cmp
push
stc
pop
pop
mov
dec
or
out
push
push
mov
xchg
xchg
mov
out
and
and
dec
or
pop
nop
dec
xchg
popa
jl
jl
mov
outsl
and
push
shll
lods
divl
mov
jno
inc
adc
std
or
sbb
mov
push
and
inc
and
enter
cwtl
lods
or
xchg
dec
mov
inc
data16
int3
mov
dec
adc
je,pn
and
scas
icebp
mov
pop
scas
je
dec
mov
sub
dec
loop
dec
cmp
stos
arpl
inc
push
mov
jl
icebp
rcrb
in
sar
stc
jo
mov
lods
fcmovne
call
test
jb
xor
xor
or
xchg
mov
or
cmp
pop
in
cmp
adc
xchg
aam
call
and
and
mulb
sarb
or
add
ss
inc
jbe
arpl
cmpsl
das
jb
aad
xor
test
push
jmp
fdivr
push
xchg
pop
outsb
repz
jg
mov
loope
jne
sub
mov
popa
mov
rcrl
lock
ja
rcr
pop
or
std
push
call
fiaddl
push
sub
jmp
js
add
or
mov
stos
movsb
and
jg
ds
aaa
pop
pop
sbb
jle
into
dec
sub
lahf
ret
push
stc
out
popf
inc
dec
ds
dec
inc
ret
xor
mov
shlb
adc
sub
pop
jecxz
dec
cmpsl
push
icebp
jmp
daa
jns
roll
jno
fsubl
dec
cs
add
xchg
sbb
hlt
inc
lods
jno
ret
jbe
je
rorl
lea
das
insb
lock
leave
shrl
fcmovu
add
fdivrl
in
cmp
lret
add
or
xor
bound
stos
sbb
mov
xor
test
pop
outsl
sbb
adc
sbb
insb
stc
mov
test
mov
dec
sti
ja
dec
insb
mov
xor
nop
sbb
inc
push
rcrb
xchg
push
cmp
push
in
pushf
std
lods
loopne
fwait
xor
loopne
es
les
and
adc
pop
xchg
or
rcrl
pusha
inc
push
jnp
and
xor
cmp
sbbl
lods
or
out
xchg
xor
adc
or
sub
jno
in
xchg
sbb
outsl
movsl
cmc
je
pop
jno
fwait
xor
push
lret
mov
xchg
add
out
inc
xchg
fs
mov
lea
cmp
mov
pop
test
enter
lods
sub
fiadds
in
sbb
or
or
cmp
hlt
add
ficoml
je
lret
mov
xchg
push
int
push
or
cli
nop
enter
test
movsl
sbb
decb
shrl
stos
frstor
jne
cmc
nop
add
je
mov
cmpsb
and
rol
lret
mov
cmp
pop
add
xor
or
arpl
loopne
mov
fiadds
gs
add
nop
cli
xor
setl
fmull
pop
jmp
fcoms
nop
in
loopne
loopne
xor
lds
mov
adc
adc
pop
sahf
lods
inc
movsb
or
shlb
mov
xchg
mov
mov
cmp
ret
xchg
notb
imul
mov
iret
cmp
mov
mov
inc
shl
loop
mov
addl
xor
xlat
sub
or
ss
mov
leave
xchg
push
push
dec
enter
jle
shr
outsb
repnz
fnstcw
add
mov
fisubl
jl
mov
cs
outsl
xchg
cld
jp
push
nop
jb
xor
jge
mov
push
das
mov
mov
xchg
mov
or
lods
cli
in
jae
cmp
ficoms
cmpsl
mov
mov
mov
lods
lds
mov
mulb
orl
sbb
jp
ret
int
sub
out
scas
xchg
inc
cli
mov
cmp
xor
lods
mov
sub
pop
pop
addb
xchg
cwtl
repz
mov
adc
inc
cs
idivl
pop
arpl
bound
mov
mov
lret
jbe
or
cld
stos
bound
cld
push
mov
fwait
lret
jae
pop
pop
aad
enter
sub
adc
int3
into
add
ja
pop
mov
xchg
and
inc
fmull
lahf
fildl
shlb
pop
push
cmpsl
pop
pop
nop
inc
call
pop
or
std
iret
inc
xchg
cwtl
sbb
outsl
pushf
push
dec
ud0
test
push
mov
sbb
push
jb
sarb
stc
pop
and
adc
lcall
push
or
push
mov
cwtl
dec
or
push
cld
loop
mov
in
imul
push
popf
cld
shlb
mulb
test
sbb
xchg
andl
xor
fadd
lds
pop
imul
mov
popa
dec
mov
inc
ja
cmp
adc
fdivrs
call
xchg
pop
stos
sbb
xchg
or
pop
xchg
out
jg
shll
mov
cli
pop
push
test
mov
call
adc
xchg
xor
popf
push
mov
sbb
adc
hlt
or
or
sbb
add
mov
and
push
adc
inc
sti
ss
lock
in
xchg
jo
adc
mov
mov
cmp
jbe
lods
jge
sub
adc
jmp
adc
movsb
stos
hlt
test
adc
or
aam
sbb
mov
lret
mov
fmull
pop
and
xor
repz
inc
adc
sbb
lds
enter
xchg
pop
jle
pop
push
out
mov
je
sub
xor
xor
inc
add
clc
xchg
mov
shufps
fcmovu
test
cmp
dec
fadds
dec
mov
jno
scas
mov
clc
cmp
xor
ljmp
and
inc
fwait
stc
stc
jl
test
sub
lahf
xor
xchg
hlt
pop
push
in
add
sub
test
mov
cmp
push
or
jae
push
push
mov
sub
data16
pop
lahf
inc
test
in
scas
mov
push
sub
lret
outsl
push
adc
sarl
pop
mov
lret
mov
imul
not
mov
inc
int3
mov
in
and
jnp
xor
adc
mov
lods
loop
xor
mov
cmp
push
in
inc
popa
lock
inc
ljmp
ret
mov
xchg
sti
push
sbb
in
mov
call
sarl
or
adcl
inc
jge
adc
aas
xor
and
lock
xor
inc
mov
test
cs
xchg
dec
xchg
jle
adc
push
sbb
pop
sub
popa
loope
insl
ss
addr16
bound
cmp
and
jno
repnz
fstps
dec
test
sbb
jle
idivb
imul
lcall
and
popa
cmp
jge
and
lds
aaa
adc
cmp
imull
jns
inc
cmp
fld
push
mov
xchg
jle
scas
dec
mov
in
adc
xlat
ds
xor
dec
repz
jnp
inc
jge
or
fstpl
rclb
bnd
or
or
mov
in
adc
pop
sbb
lods
inc
cmc
pop
icebp
es
xor
xor
out
jg
sub
mov
pop
sbb
lcall
and
mov
cmp
ret
pop
pop
xor
adc
jns
ds
pop
repz
movsl
push
mov
push
or
add
les
scas
inc
addr16
repz
rorb
gs
adc
push
loopne
fs
ljmp
or
add
inc
sbb
out
cmp
lods
addr16
push
push
orb
jmp
out
orl
and
or
repnz
shrl
jle
popf
xchg
cmp
push
inc
jecxz
or
mov
xchg
hlt
hlt
mov
shll
sbb
mov
nop
xchg
mov
lods
addb
inc
xchg
sbb
shrl
jmp
sbb
sbb
dec
or
cmp
add
das
stos
xor
das
rorb
or
lret
jne
xlat
call
ja
lcall
fsubrl
push
or
mov
mov
das
scas
sahf
cmp
sbb
aam
jg
rcl
stos
imul
mov
pusha
lret
dec
or
incl
rorl
popa
cmp
dec
or
movsl
jne
ret
sarb
inc
cld
push
test
pop
rcll
stc
sub
repz
sarl
jo
jnp
adc
mov
mov
mov
adc
add
xor
mov
mov
cwtl
push
dec
jae
mov
push
cmp
sub
jge
dec
jp
inc
and
xor
les
xor
push
lahf
mov
pop
and
mov
out
fwait
mov
outsb
or
inc
movsl
push
lea
or
ja
idivl
ss
jp
pushf
pop
das
repnz
scas
in
dec
cld
lods
cld
mov
aaa
push
rolb
idivb
mov
push
adc
loopne
lret
leave
jg
push
ffreep
adc
sbb
dec
in
test
test
or
cmp
push
jns
lret
rclb
pop
mov
and
sbb
ffree
or
insb
aam
mov
pop
xor
fidivrl
rcrb
adc
xchg
cmp
loop
lret
xor
xlat
push
addb
mov
loopne
test
mov
push
clc
push
pushf
lahf
ljmp
cmp
jo
dec
mov
adc
jnp
add
pop
mov
scas
imul
in
cmp
lock
lcall
jns
add
mov
mov
loop
enter
jmp
mov
movsb
popf
xchg
arpl
push
push
movsb
leave
lods
xchg
cmp
inc
dec
push
or
faddp
add
mov
aad
rcll
out
and
lret
mov
js
loop
xor
sbb
test
rolb
inc
xchg
gs
cmp
movsl
and
mov
push
sbb
repnz
jo
mov
movsb
cmpsl
sub
jno
inc
icebp
popf
dec
cmp
xchg
add
fstl
push
aas
fmull
and
sti
bound
call
cltd
dec
mov
leave
subl
ja
test
je
fimuls
mov
outsl
fadds
mov
mov
imul
loop
mov
scas
mov
xchg
pop
inc
push
add
popf
jnp
push
mov
aam
xchg
fcomps
mov
jl
ljmp
or
xchg
sti
xchg
data16
mov
and
pop
sub
jge
loopne
or
mov
or
lret
push
std
pop
iret
jnp
lea
sbb
push
mov
enter
fwait
mov
and
add
pusha
f2xm1
mov
dec
adc
cld
out
popa
pop
cmp
sahf
retw
lods
in
mov
fildll
add
inc
xlat
lret
insb
sti
dec
adcb
dec
add
xor
imul
movsb
fldl
bound
mov
nop
pop
add
pop
ljmp
xchg
mov
dec
mov
dec
insl
test
enter
in
sub
mov
int
stos
roll
pop
xchg
sbb
xchg
mov
sbb
mov
and
in
pop
push
pop
cmpsl
and
inc
shlb
or
lret
inc
test
push
cld
lcall
insl
fistpl
dec
scas
rcrb
xor
into
mov
mov
fcomps
sti
rcr
xlat
test
inc
aaa
mov
int
rcl
mov
pop
fisubrs
inc
ja
js
mov
imul
inc
fcmovu
add
sub
push
incb
xchg
mov
mov
test
movsb
loope
cmp
enter
loope
sbb
jb
mov
nop
cmp
or
inc
fsubl
pop
sub
ret
sbb
push
mov
out
xchg
adc
inc
bnd
pop
mov
fldl
xchg
xor
pop
xor
adc
dec
mov
or
es
xor
daa
and
imul
adc
jmp
lods
jns
jecxz
mov
mov
pushf
mov
xchg
mov
and
or
sbbl
push
sub
dec
sti
loope
push
subl
out
add
adc
jl
stos
lret
in
repnz
stos
xchg
or
push
pop
and
fildl
xchg
ss
adc
push
cmpsl
pop
add
ss
xor
push
xlat
and
nop
push
std
out
lret
cltd
jle
shrd
addb
mov
mov
jb
subb
test
lods
orb
jle
adc
xor
jl
fdivrl
push
or
push
or
xchg
or
movsl
test
pop
adc
and
sbb
xor
xchg
fxch
jp
fs
lret
dec
pop
push
subl
loopne
ja
pop
icebp
cmp
inc
cmpsl
das
jnp
jle
xor
rorl
dec
inc
jae
push
sbb
in
ret
movsl
jmp
aas
clc
cwtl
push
int
aad
in
mov
stc
aaa
push
stos
insb
fcmovnu
out
xchg
imul
mov
lahf
jne
test
mov
push
add
into
add
daa
jmp
or
sbb
jae
cmpsb
push
jo
inc
pop
mov
mov
fiaddl
or
hlt
xchg
xor
faddp
inc
cmp
cmp
jg
mov
dec
outsl
repnz
jb
aas
fildl
push
movsl
js
cmpsl
std
aam
push
xor
mov
pop
test
icebp
inc
js
aad
ja
or
mov
pop
jb
jae
enter
call
pusha
add
imul
popf
or
xor
pusha
gs
xor
dec
sbb
int
inc
pop
push
mov
add
inc
mov
xchg
js
sub
cmpsb
sub
and
jno
xchg
stos
dec
jne
fs
bound
lods
lods
das
sbbl
lahf
or
in
fwait
xor
jnp
das
sahf
gs
mov
rorb
inc
cmp
add
cwtl
cmp
xor
mov
push
sbb
adc
cltd
sbb
sub
sti
rcr
rdpmc
adc
pop
xorb
lret
xchg
gs
jne
fs
dec
stc
xor
out
lahf
mov
jl
pop
inc
fsubrl
cwtl
cs
pop
push
lcall
pop
lret
mov
dec
jecxz
mov
lea
cmp
mov
pop
faddl
ret
dec
push
add
in
divps
adc
nop
push
jo
pusha
mov
das
add
scas
dec
lock
fdivrs
int3
inc
mov
rorl
out
pusha
addb
add
cmp
mov
push
cmc
inc
xchg
sub
sbb
xchg
out
int
sub
shrl
cltd
loop
dec
mov
leave
add
fnstenv
test
mov
out
pop
jnp
mov
pop
enter
in
mov
fs
xor
cmp
stc
jo
pop
pop
mov
data16
mov
mov
sub
or
loope
or
push
into
dec
mov
mull
mov
pop
add
or
push
adc
push
mov
je
mov
add
andb
mov
das
add
xchg
add
fwait
into
and
pop
pop
or
adc
std
add
fisubl
jne
inc
xlat
pop
daa
pop
xchg
jge
pop
cmpl
in
fists
nop
xchg
jb
std
push
cld
cmpsb
xchg
add
arpl
mov
negl
and
pop
jns
leave
push
inc
add
in
pop
jbe
adc
call
pop
jb
xchg
sub
call
inc
and
xchg
fldl
call
sbb
jl
push
mov
or
stc
pop
into
or
cmc
lods
lock
addr16
sub
popa
add
std
cld
arpl
and
rcrl
jecxz
add
pop
sub
mov
add
fistl
pop
call
cmp
mov
sub
lods
hlt
dec
jg,pt
sbb
mov
popa
ss
js
and
jge
mov
mov
mov
sub
adc
testl
and
cmp
push
cmp
mov
in
dec
inc
mov
sarb
cmp
test
push
mov
adcl
jo
aas
into
or
mov
loop
rorb
shll
dec
cmp
popa
inc
mov
mov
mov
inc
add
shlb
loop
sub
add
mov
lds
jae
adc
cwtl
ja
out
rolb
xor
adc
cli
outsl
lods
pop
xchg
cwtl
adc
iret
popf
mov
loope
xchg
jmp
cmp
pop
cmp
sti
fucom
jmp
dec
push
mov
mov
xchg
movsl
sub
pop
inc
jae
movsb
cmp
les
sub
push
inc
mov
int3
pop
pop
aas
push
loopne
xor
insb
cmpsb
aad
push
xchg
jle
pop
cs
lods
lods
inc
adc
cmp
into
pop
xor
out
cmp
sbb
neg
insl
lods
push
outsb
adc
xchg
jecxz
loope
fs
cld
jmp
leave
cs
into
mov
and
pop
test
daa
xchg
fiadds
push
or
jl
dec
and
outsb
lahf
cs
adc
push
scas
sbb
add
adc
jecxz
outsb
vsqrtss
mulb
push
test
pop
xor
popf
xchg
jmp
and
fcomps
ds
es
ljmp
xor
jb
mov
mov
mov
xchg
push
in
add
ss
mov
out
push
cmp
rcrl
pop
jmp
push
repz
adc
add
mov
cld
lds
out
jo
dec
add
mov
lods
xor
push
aaa
adc
daa
xor
xor
inc
push
sub
mov
sub
fimull
cmp
sub
adc
inc
and
cmp
das
mov
fmul
mov
dec
scas
sbb
sub
imul
and
jl
cli
push
std
dec
scas
jnp
imul
inc
subl
popf
jbe
movsb
out
pop
mov
mov
jecxz
xchg
add
jno
stos
movsb
into
cmp
lahf
out
sti
cmpsb
test
hlt
jnp
lock
inc
nop
cltd
pop
push
dec
sbb
jns
lock
cmp
fmull
mov
movsb
pop
mov
adc
add
mov
xchg
ja
push
cmp
mov
fdivrs
cli
mov
test
or
sar
lock
in
jb
inc
dec
out
or
dec
addb
mov
mov
pop
dec
test
cmpl
sarb
add
cmp
lods
lods
jno
and
add
pop
dec
jp
lret
fidivrl
jb
outsl
mov
sub
jecxz,pn
add
or
xor
movsl
xor
jl
or
xchg
adc
xor
test
push
call
out
lock
dec
push
mov
xchg
and
enter
test
mov
jg
xor
decb
in
sub
jge
mov
test
xchg
or
mov
jecxz
movsb
aas
mov
js
fcmovnbe
jo
mov
or
push
push
mov
test
aas
fwait
pop
adc
inc
mov
mov
std
je
insb
lds
pusha
mov
pusha
popa
or
or
add
push
mov
cmp
pop
pop
xchg
das
pop
repz
add
pushf
fisubs
pop
imul
xor
dec
push
inc
iret
jnp
push
xor
and
sub
cmp
stc
fs
bound
popf
imul
fwait
sbb
je
or
outsb
daa
mov
nop
add
sub
ret
hlt
jo
dec
jnp
cmpsb
jae
fisubs
ljmp
xchg
int3
mov
cmp
imull
imul
sub
add
push
push
dec
faddl
leave
stos
pop
sbb
daa
mov
xor
mov
in
xchg
push
ja
mov
sub
outsb
es
dec
cli
les
sub
mov
rcl
mov
cli
rcrl
xor
push
repnz
hlt
jecxz
mov
mov
push
out
or
in
dec
in
inc
ss
aam
mov
ja
push
pop
or
das
dec
xor
pop
push
pop
dec
cmp
xorb
and
push
popl
out
adc
es
aas
fs
stos
mov
lea
repnz
inc
mov
mov
test
ret
leave
mov
and
movsl
dec
repnz
and
dec
ljmp
mov
clc
rolb
mov
cwtl
scas
push
and
push
sahf
ja
cld
push
mov
sarl
cmp
into
mov
cmpb
and
xor
adc
sub
test
pop
mov
insb
test
les
ljmp
cmc
mov
jle
push
ret
sub
sbb
shlb
or
mov
jle
or
jecxz
pop
mov
xchg
adc
imul
and
mov
push
adc
dec
mov
lea
cltd
sub
jmp
jnp
out
dec
mov
dec
aad
lea
ljmp
jne
mov
shll
in
dec
lock
push
xor
sti
or
imul
cmp
adc
aaa
add
test
sub
push
jmp
dec
and
aad
sub
test
adc
push
and
movl
cld
sbb
pop
sub
or
enter
mov
adc
xlat
lds
lods
test
repz
rcll
and
das
xchg
cld
inc
sub
sbb
test
imul
ss
lahf
dec
in
jle
sub
adcb
sub
push
shr
adc
stos
jp
cmp
das
fstps
cltd
movsb
dec
stos
outsl
xor
jo
sti
sti
mov
arpl
jecxz
lahf
lock
cmp
xchg
repnz
nop
inc
or
sbb
bound
jg
clc
shl
adc
push
dec
fs
sub
push
std
test
cmp
fistps
inc
adc
jl
sti
and
jmp
lret
orl
clc
out
inc
lods
jle
inc
or
cmp
or
mov
mov
popf
hlt
mov
out
pop
in
jne
mov
pop
fcmovnbe
jl
decl
insb
add
mov
lret
bound
lock
call
adc
subl
int3
pop
jecxz
pop
sbb
insl
and
jg
jecxz
xchg
scas
push
xchg
out
push
sar
dec
and
jmp
jp
mov
movsl
add
jo
lds
vmovlps
fwait
dec
adc
inc
xchg
xchg
push
jmp
jecxz
orb
mov
rcrl
or
repz
movsl
mov
shll
mov
arpl
mov
sub
sub
enter
sub
lcall
repz
jmp
ds
rcl
push
and
mov
mov
inc
and
pop
ljmp
stos
push
jns
cmpsb
mov
aas
or
xor
sarb
mov
jbe
jns
in
xchg
hlt
mov
sub
jge
push
cmp
or
pop
jns
testb
cmp
pop
call
pop
push
out
pusha
add
orb
adc
mov
aas
call
pop
cmp
mov
or
data16
cmpl
mov
daa
pandn
mov
pushf
stos
xchg
or
insl
push
fisttps
shl
addb
sbb
sbb
push
ja
jge
hlt
inc
sub
loopne
int3
inc
dec
aas
lock
lock
adc
repz
std
inc
lret
sahf
jp
and
sub
add
lcall
and
push
fsubrl
sbb
mov
sub
rolb
or
fiadds
es
lahf
inc
jnp
push
mov
into
cmp
xor
xchg
lcall
rorl
jno
ficomps
in
addl
ret
fcompl
xchg
bswap
mov
es
xchg
arpl
cli
pop
mov
test
sub
imul
cmp
inc
xor
imulb
add
push
push
pop
cmp
and
mov
stos
mov
and
or
mov
sbb
jmp
mov
sbb
cmp
lret
sub
push
xor
push
idiv
je
push
enter
push
push
jns
mov
add
adc
dec
addb
pop
sbb
lods
mov
or
add
and
mov
push
das
std
mov
dec
mov
fwait
cmpsl
cltd
adc
lret
mov
sbbl
in
lods
jmp
aaa
test
sub
inc
fimuls
fsubs
lock
jl
xchg
cmp
jne
ljmp
fildll
into
and
mov
test
sbb
out
sahf
push
add
sub
scas
cmc
pop
std
dec
xor
jbe
fcomps
xchg
push
and
out
lea
repz
stos
mov
shrl
popa
adc
aad
cmp
les
xchg
or
lock
dec
sarl
loope
add
and
jno
insl
cwtl
daa
sub
cmpsl
scas
hlt
enter
loope
mov
out
repnz
in
data16
push
outsb
je
or
inc
push
sti
cmp
xor
adcb
je
cmp
std
mov
repnz
fwait
adc
lock
std
add
orb
cld
push
xlat
enter
fcomps
inc
into
inc
arpl
mov
or
or
bound
int3
sub
dec
insb
xor
xchg
xor
out
test
fldcw
mov
dec
pop
sbb
leave
loopne
imul
movsl
cwtl
ja
push
roll
and
jle
and
stc
adc
pushf
lods
pop
lcall
subl
jb
mov
cmpl
xchg
out
loop
inc
out
xor
fisubrl
mov
aas
enter
int3
test
push
xlat
inc
cmp
imul
mov
mov
jecxz
inc
adc
mov
sbb
xor
gs
mov
or
ja
mov
inc
das
and
adc
pop
and
mov
mov
mov
mov
test
mov
mov
jl
jo
push
js
leave
imul
stos
in
repnz
arpl
es
inc
sbb
sahf
dec
add
nop
dec
shll
cmpsl
fdivp
test
aad
xor
pop
xchg
outsb
pop
and
fdivrl
stos
inc
ss
dec
sub
pop
push
jle
frstor
mov
adc
or
loop
xchg
sbb
lret
les
lret
mov
ret
dec
inc
std
stos
adc
mov
xchg
imul
xor
inc
dec
inc
jge
or
in
xlat
lret
pop
mov
push
mov
stc
imul
adc
adc
dec
cltd
fisubs
rcrb
stos
ss
stc
popf
mov
nop
mov
inc
sbb
sbb
xchg
daa
inc
fisttpl
sub
or
xor
add
lods
imul
cli
ja
in
mov
leave
mov
cmpsl
lcall
xchg
cmpsl
sbb
lahf
mov
dec
dec
int3
cmp
outsl
mov
cmp
fisttpl
push
pop
dec
das
test
dec
out
push
fstl
ror
out
mov
fadd
pop
cli
pop
cmp
jmp
cmc
fistpl
and
xor
dec
pop
bound
and
pusha
std
push
dec
lahf
std
and
dec
daa
mov
push
push
jns
mov
jl
jno
fcoml
pushf
aam
repz
or
xchg
stos
sahf
mov
inc
and
outsl
in
dec
push
push
sbb
mov
mov
mov
or
xchg
call
pushf
pop
dec
je
shrb
sbb
sbb
mov
jl
popf
testl
xchg
push
push
stos
jb
add
lret
pop
cmpsl
in
fisttpl
mov
pop
stc
fstl
movzbl
cmp
sti
or
ficoml
loope
repnz
xor
sbb
enter
jo
loop
cmp
push
stc
and
fucomi
repnz
fs
xor
push
in
or
negb
lcall
pop
inc
negb
in
neg
jns
sbb
sub
xchg
aaa
aad
sub
cmp
test
mov
jmp
dec
push
dec
roll
shl
jl
sti
cs
repnz
testl
popf
xchg
xchg
or
jp
push
lods
into
xor
xchg
or
mov
pop
fisubs
mov
in
les
cmp
inc
jae
xchg
xchg
into
das
stos
push
idivl
mov
ss
xor
test
push
flds
dec
or
jecxz
push
cmc
cld
outsb
int3
push
daa
jb
mov
mov
inc
mov
fwait
jbe
sti
cmp
jp
pop
mov
or
lds
xchg
and
das
iret
jns
push
sbb
roll
fdivp
mov
add
mov
push
dec
xor
jno
ficompl
rep
movsb
stos
xchg
insb
pop
adc
and
sti
cmp
aad
icebp
ret
loope
xor
or
clc
pop
mov
inc
jmp
cmp
out
popa
mov
les
mov
and
loope
push
lods
fildll
jb
inc
je
push
cmp
ror
adc
in
jg
fdivrp
mov
xchg
xchg
inc
or
imul
movsl
arpl
and
sub
and
scas
push
fdivr
inc
adc
adc
or
pop
or
xor
fwait
mov
pop
inc
jg
adc
add
jl
in
mov
movsl
xchg
leave
loopne
nop
rolb
xorb
sub
inc
jg
pop
lods
lret
and
fiaddl
pop
xor
scas
test
sbb
lock
or
aam
std
int3
int
repz
movsl
mov
jecxz
xor
mov
loope
test
mov
dec
pop
cmpsl
sub
aad
jae
xor
stos
mov
dec
addr16
sub
ja
pop
add
dec
aas
ss
adc
push
stc
ficompl
in
loope
cmp
dec
js
adc
adc
push
push
lock
and
test
out
popf
jge
mov
add
mov
xor
and
and
shll
imul
rorb
decl
inc
add
sti
stos
loopne
mov
hlt
inc
int
cld
xor
gs
or
bound
iret
nop
test
mov
pushf
and
adc
push
sub
xor
sbb
sub
shll
call
into
bound
popa
outsl
aas
dec
and
sub
dec
sbb
mov
push
inc
xchg
mov
xlat
and
sbb
sub
inc
js
pusha
jecxz
adc
mov
xlat
bnd
and
bound
dec
sbb
mov
pop
pop
and
inc
jge
adc
mov
adc
pop
hlt
mov
sbb
lea
jno
adc
or
fidivl
xchg
cmp
andb
gs
call
or
dec
dec
out
push
ljmp
in
stos
push
adc
lods
cmp
test
daa
in
sub
sahf
mov
mov
js
cld
jle
or
cmpsl
mov
mov
cmp
rcll
mov
int
popa
fcomps
mov
mov
addr16
jb
nop
push
and
lret
loope
mov
dec
inc
out
jno
add
sbb
push
sub
test
mov
xchg
cmp
mov
xor
imul
xchg
test
and
mov
mov
bswap
popa
lods
dec
mov
and
jp
shll
mov
cwtl
fcmove
fnstsw
popa
out
sbb
sbb
cmpsl
enter
sti
xchg
or
xchg
mov
jae
ret
ja
sbb
xor
cmp
test
or
mov
pop
lock
and
hlt
cmp
arpl
or
scas
or
push
rol
mov
jo
scas
jae
push
divb
lock
mov
adc
xchg
in
mov
push
mov
cltd
inc
je
clc
dec
andb
mov
mov
fsub
lds
jl
xchg
icebp
pop
xchg
sarl
or
or
rcrl
fs
aad
xor
lds
add
jo
daa
dec
and
movsb
dec
lods
test
or
pop
xchg
loope
mov
lods
dec
aad
in
inc
adc
pop
bound
outsl
fistl
xchg
out
adc
xchg
shlb
pop
add
fisttpl
pop
cwtl
es
adc
mov
adc
jae
and
jb
testb
out
and
loope
inc
and
or
mov
leave
testb
jp
add
int
mov
movsb
sarl
sub
clc
mov
shl
mov
lock
pop
nop
jb
loopne,pn
in
jle
push
pop
cltd
hlt
ss
push
dec
rcr
push
mov
lret
mov
jbe
mov
cmpsl
jecxz
popa
dec
jb
dec
push
xchg
shrb
push
out
fst
test
xchg
stos
icebp
xchg
test
test
mov
adc
sbb
mov
xchg
popf
pop
in
pop
shrl
lret
jge
enter
fstl
rclb
mov
lock
xchg
jnp
lret
cltd
dec
mov
push
loopne
in
loop
movsl
negl
jl
add
jne
shll
jp
pop
cmc
pop
sar
or
mov
lahf
dec
loope
scas
mov
push
mov
jg
adc
adc
sbb
sbb
xor
push
cwtl
insb
fbld
bound
mov
mov
hlt
call
in
or
mov
push
mov
cmpsl
call
adc
out
clc
push
adc
out
jnp
fwait
add
clc
cmovge
and
jmp
les
mov
adc
dec
ljmp
nop
inc
in
cmp
push
stos
mov
push
cmp
imul
cmpsb
loopne
test
outsb
je
jmp
fadds
in
sahf
cmp
lea
pop
sub
movsb
mov
mov
adc
dec
mov
popl
mov
incb
in
adc
je
aad
fstpt
aas
dec
inc
mov
sub
or
pop
jno
cmpsb
inc
movzbl
lock
adc
adc
xchg
in
add
adc
mov
in
sti
jge
adc
enter
inc
out
push
aas
movsl
push
sub
mov
and
sti
fisttpl
loopne
dec
fsubr
mov
sub
inc
rorb
mov
push
scas
test
ja
inc
dec
sbbb
mov
cwtl
fildl
cli
add
cmp
jmp
adc
and
fbstp
pop
sar
jp
and
push
mov
xchg
shr
lods
xchg
jmp
mov
mov
int
mov
and
lods
lret
out
xchg
aad
pop
fcmovnbe
or
test
arpl
push
cli
ja
mov
cltd
jge
adc
jecxz
rcrb
sahf
push
cld
enter
mov
inc
inc
inc
sub
fldt
loopne
imul
popl
mov
das
push
mov
ret
movsb
or
pop
add
std
int3
hlt
sbb
in
imul
icebp
ja
idivl
sub
dec
je
aad
pop
int3
xlat
xchg
sub
dec
mov
inc
and
xor
int
adc
xor
shrl
int
mov
cmp
cmp
sbb
out
insb
and
nop
movsl
mov
mov
or
pop
pop
inc
fldenv
daa
jns
scas
sahf
add
xor
in
and
and
push
insl
push
and
mov
add
pop
aad
pop
out
in
cltd
pop
jns
push
and
call
cmp
aas
xor
pushf
xor
xchg
outsw
test
shr
insl
mov
stc
and
in
in
test
roll
mov
mov
push
notl
add
shrl
mov
mov
jns
xchg
mov
mov
sbb
pop
stos
xor
stos
in
sbb
bound
es
mov
cmc
gs
dec
jb
js
mov
and
insl
push
repnz
mov
push
jmp
push
xchg
repz
lock
mov
and
scas
inc
mov
push
add
push
je
mov
out
out
add
and
cli
xor
lds
lods
push
jne
lods
jb
jns
popf
sahf
jae
daa
fcomp
int3
dec
jle
cmp
and
pop
bnd
xchg
stc
sub
jge
in
xchg
mov
insb
leave
movsb
ret
fimuls
outsl
fwait
js
push
jbe
mov
inc
shl
or
xchg
or
cmp
les
xor
dec
lret
daa
out
inc
mov
jae
adc
mov
adc
xor
daa
sahf
cwtl
mov
push
sbb
out
fdivs
cmp
in
rorb
test
popa
inc
aas
imul
faddl
rcll
leave
cltd
xor
cmp
sbb
bound
mov
cmc
and
daa
sbb
push
jno
sahf
sub
mov
xor
dec
push
test
cmpsl
xchg
adc
mov
outsb
stos
pop
sub
mov
pop
mov
inc
pop
cmpsl
adc
into
int
ret
lods
push
mov
mov
icebp
test
pop
push
push
inc
adc
pop
mov
maxss
scas
int3
cld
popa
inc
shrl
and
mov
xchg
xchg
rolb
mov
roll
loope
iret
lea
ret
hlt
xor
xchg
loope
xchg
sbb
pop
leave
cmc
xor
xchg
pop
adc
test
test
jne
inc
shr
aam
insl
les
pushf
cltd
mov
push
dec
add
rol
inc
outsb
lea
test
int
sub
xchg
movl
sbb
sarl
mov
fwait
shr
jp
sbb
sbb
aas
fbstp
xchg
and
testb
mov
inc
pop
xor
ret
inc
je
mov
popf
aaa
lea
xchg
les
idivl
jge
in
rcrl
push
rep
pop
movsl
add
fsubrs
repz
mov
push
hlt
cmp
sti
lds
sbb
xchg
add
sub
mov
lock
cwtl
repnz
sbb
and
mov
repnz
jns
add
dec
cmp
nop
push
push
sbb
mov
popf
sti
dec
ret
jmp
mov
rclb
rolb
fdivl
sub
push
dec
mov
popa
push
push
dec
jle
pop
into
push
jns
inc
in
pop
sarb
fs
call
dec
outsb
or
daa
sbb
stos
jg
mov
mov
sub
xchg
mov
inc
push
cmc
jno
jbe
hlt
jmp
mov
lahf
insb
xlat
ret
or
mov
iret
sbb
rorl
cli
mov
mov
pusha
das
mov
in
in
mov
sbb
call
mov
pop
hlt
jb
loope
mov
mov
cmp
mov
dec
adc
xchg
shlb
push
inc
ljmp
adc
fsubrs
clc
enter
inc
shlb
and
daa
dec
or
inc
pop
xor
mov
test
sub
inc
mov
push
push
cmp
std
mov
std
scas
mov
xor
mov
xchg
mov
repnz
or
mov
shlb
dec
jg
pop
sbb
aaa
hlt
cmpb
mov
sti
inc
imul
jb
aaa
sbb
fistpl
mov
fwait
cwtl
out
out
popf
cmp
ss
or
loope
fbstp
dec
out
jmp
or
or
jmp
lret
xor
std
shll
mov
mov
inc
jnp
scas
push
ror
pop
and
or
add
jns
xchg
shll
incb
jne
je
xchg
dec
cmpb
subb
ss
ja
mov
sub
fcoms
dec
loopne
enter
incl
int3
inc
shld
int3
inc
fcmovnu
or
cltd
mov
add
clc
in
sahf
pop
mov
repnz
pop
adc
cmp
cmp
mov
movsb
aad
in
sbb
pop
push
jbe
jo
sbb
in
push
xchg
sub
inc
jns
mov
loope
fbstp
dec
data16
dec
xchg
mov
mov
cmp
dec
out
pop
mov
lcall
pushl
xor
stos
sti
push
adc
push
test
les
sub
es
gs
push
dec
pop
pop
pop
push
mov
xor
mov
mov
jl
test
daa
and
xor
xor
add
test
sbb
inc
dec
xor
fldcw
push
pop
aas
call
or
sarl
dec
mov
enter
xor
or
jo
lock
jl
or
cmp
outsl
mov
or
pop
cmpsb
mov
jo
stos
ds
pop
lea
aam
inc
push
add
and
adc
lahf
loop
sub
addr16
fsubrs
mov
cmp
add
mov
add
insb
push
out
fimull
mov
jae
jmp
dec
ss
mov
mov
arpl
cltd
ret
sub
xlat
ds
ds
jecxz
sbb
iret
aaa
fsubrs
aaa
push
dec
mov
push
cld
sbb
rcrl
cmp
jp
rorb
mov
and
sub
lcallw
in
xchg
jo
les
xchg
sub
ss
sub
fists
into
ljmp
jmp
pop
push
das
into
adc
xchg
pop
lcall
add
cwtl
mov
push
out
daa
xchg
iret
out
xchg
clc
add
sub
movsl
fdivr
sbb
mov
decl
divl
and
enter
insl
push
subl
sbb
dec
xlat
mov
popa
fstl
or
fld1
add
push
in
fwait
por
pushf
cmp
out
dec
out
sbb
mov
sbb
sub
shll
shr
in
out
std
incb
dec
add
ss
mov
ljmp
adc
xchg
out
test
leave
xor
lds
scas
sub
mov
imul
xchg
sbb
jne
sub
insl
jae
shlb
aam
in
cmpsl
outsb
push
es
aad
lcall
sub
mov
insb
xor
sub
sti
rorl
mov
lea
cltd
pop
repz
ret
iret
jnp
cmp
in
inc
or
pop
cmp
enter
rcll
in
mov
add
xchg
mov
mov
mov
mov
inc
sbb
cmp
adc
or
and
loopne
xchg
mov
cmp
cmpsb
push
jae
outsl
cmpsl
jne
jecxz
cmp
sar
mov
clc
fxch
and
jg
aas
ds
mov
lods
push
ja
dec
sbb
shrb
and
pop
dec
dec
xchg
push
stos
ficompl
push
mov
mov
lcall
fisttps
dec
adc
xor
sbb
das
in
insb
push
imul
xorl
xor
mov
adc
cvtps2pi
popa
inc
cmp
and
push
js
rorl
repz
mov
cwtl
lock
stc
mov
ss
push
stc
imull
cmp
fisttpl
jecxz
pop
push
add
push
pop
mov
mov
stos
ret
xchg
faddp
scas
cmpsl
mov
cld
js
insb
rcl
ret
mov
scas
mov
movsb
sub
rep
ljmp
sub
xor
aaa
sub
mov
dec
xor
push
adc
mov
gs
das
cli
mov
mov
dec
out
push
push
fisubrl
jp
sub
jle
int
out
mov
or
cmp
pusha
sbb
jl
mov
stos
daa
test
adc
cmp
cmp
mov
cmpsb
orl
mov
sbb
call
stos
outsb
hlt
out
decl
test
mov
ret
jge
ljmp
mov
jmp
mov
cmpsl
mov
push
inc
sahf
dec
pop
cld
rcr
cli
roll
mov
sbbl
dec
mov
dec
pop
hlt
subl
cmc
sbb
outsb
nop
pop
iret
inc
push
xlat
orl
xchg
mov
mov
push
cmp
mov
mov
loope
mov
out
dec
pop
loopne
rorb
sbb
jnp
lock
daa
fstp
sbb
imul
push
testb
loopne
out
jae
fs
mov
test
sahf
leave
or
push
mov
xchg
add
xorb
xchg
scas
sbb
sarl
sbb
mov
bound
into
lahf
and
sub
inc
mov
orb
inc
lret
xor
cmp
je
dec
or
cltd
orl
test
xchg
pop
and
add
clc
add
jmp
sbb
or
mov
addr16
xchg
jo
pop
inc
mov
and
ss
mov
mov
add
sbb
imul
insb
cmc
push
rolb
inc
js
jmp
jge
ja
sti
pop
cmp
xchg
int3
push
iret
jne
scas
imul
int3
fcmovne
inc
insl
fs
aaa
stc
jge
mov
lcall
mov
sbbl
movl
lcall
jo
call
bound
adc
outsb
gs
cmp
mov
cmc
xchg
lahf
inc
icebp
xchg
cmp
ljmp
push
sub
adc
xor
xchg
or
and
sarl
xchg
imul
jecxz
cmp
or
out
mov
pop
aaa
cltd
sub
ds
nop
lods
cmpsl
mov
sbb
sbb
int
inc
cmc
aas
sub
cmpsb
repnz
aad
mov
pop
adc
enter
scas
test
aas
sbb
push
clc
mov
mov
dec
cmp
or
mov
rcrl
mov
subb
shl
push
hlt
pop
mov
into
sbb
cmp
insl
mov
xchg
orb
shlb
ljmp
push
dec
xorl
jns
in
add
je
push
jb
fmuls
pop
add
and
adc
add
incb
push
gs
jns
fcmovne
push
add
adc
movl
xor
mov
xor
mov
enter
jns
xor
pusha
cmp
and
pmovmskb
lods
mov
dec
pop
mov
out
clc
pushf
xchg
or
out
icebp
ss
jne
cli
push
pop
and
dec
and
outsb
pushf
xchg
outsb
push
mov
in
enter
lock
icebp
pushf
jns
in
xor
jbe
icebp
jo
insb
testb
in
lret
inc
and
jg
in
in
jle
leave
pop
loope
and
mov
mov
fld
insl
stos
stc
jne
aaa
pop
movsl
xchg
js
push
fnstcw
outsl
sti
mov
dec
ret
push
add
hlt
ljmp
mov
loope
lret
xchg
xchg
dec
gs
loopne
add
shlb
jae
inc
add
adc
aaa
sub
js
sbb
addr16
push
cli
or
add
sub
jecxz
stc
xchg
fstps
mov
mov
in
es
fs
adc
ljmp
imul
fs
fcoml
mov
xor
js
sub
add
mov
int3
push
cwtl
push
aaa
aam
fistpl
adc
add
loope
test
ret
xchg
xchg
je
push
xor
ljmp
insl
jge
sbb
dec
es
push
out
or
mov
pop
stos
lahf
xor
inc
clc
sbb
mov
inc
cmc
in
mull
mov
aam
cmp
sub
sbb
dec
aad
add
or
xchg
addr16
mov
in
inc
push
call
ja
push
pop
mov
cmp
outsb
lock
imul
and
sbb
jmp
mov
pop
dec
mov
mov
xchg
movsb
mov
pop
cwtl
pop
xchg
scas
add
jne
jl
mov
lahf
jle
mov
inc
dec
movsl
jns
mov
inc
add
adcb
call
std
cmpsl
jmp
incl
jg
add
enter
je
ljmp
clc
or
rcr
add
ds
or
fcmovb
rorl
movsl
xchg
pop
xchg
jmp
push
notb
jb
cmp
sub
enter
fs
clc
cmpsb
cmpsb
loopne
cmc
fdivs
xchg
movb
test
idiv
push
jl
push
sarl
push
into
cmpsl
cwtl
jmp
adc
mov
adc
mov
push
jge
pop
cwtl
movsb
xor
push
add
xor
pop
cmp
adc
std
sub
pop
pop
ljmp
adc
jmp
cmp
lods
sahf
push
mov
fsubs
fldpi
add
loop
mov
cs
jmp
xchg
sbb
fadds
mov
sti
test
pusha
sub
imul
lcall
les
es
jecxz
sub
jne
mov
ror
mov
test
shlb
gs
mov
aam
xor
gs
pop
imull
and
xchg
adc
aas
mov
imulb
mov
xchg
ret
dec
pushl
mov
movsb
andb
sbb
negb
push
in
sub
pandn
xor
cmp
push
rolb
or
scas
mov
out
les
mov
xor
push
ds
dec
out
in
pop
dec
or
cs
cltd
push
dec
xchg
testl
lods
stc
scas
lcall
and
daa
aas
stos
arpl
push
mov
push
sti
inc
stos
call
lods
mov
fdivl
pop
add
cmp
scas
jns
arpl
bnd
movsl
push
rclb
ret
lock
xchg
out
orl
push
ljmp
pop
lock
out
mov
repz
inc
scas
dec
ds
push
or
xor
out
sub
test
lcall
call
shll
lds
jo
imul
push
jnp
sti
mov
xchg
fists
push
jb
loope
fnstsw
ds
aad
and
mov
test
in
into
iret
insl
and
xchg
stos
mov
les
pusha
scas
xor
in
clc
push
std
push
lods
inc
leave
out
add
rcrl
sahf
test
ljmp
sub
or
fstp
mov
out
pop
js
dec
mov
inc
icebp
adc
mov
lods
andb
mov
or
xlat
movsl
xor
lret
stos
pop
xchg
add
inc
push
mov
movsl
mov
mov
js
nop
jg
push
mov
pop
add
mov
aas
std
push
lods
sub
add
mov
sbb
mov
and
sub
outsl
cwtl
push
sahf
jbe
stos
sub
xchg
fwait
xlat
mov
daa
js
out
or
out
xor
aas
lret
mov
out
les
movsb
mov
lea
and
aas
cmc
adc
fnsave
dec
inc
add
inc
bound
repnz
xor
std
ds
jb
lea
inc
lock
ret
iret
cmp
mov
push
or
pop
mov
aas
ja
cmp
cmp
cmp
dec
test
xchg
jo
ds
lods
xchg
or
jp
inc
push
sbb
lds
es
ret
aas
shlb
push
or
push
push
mov
jg
xchg
cmc
rcrb
out
loope
sub
andl
jns
or
xchg
lcall
jb
mov
sti
cmc
lds
inc
dec
push
mov
jge
mov
mov
jecxz
dec
ljmp
xor
add
loop
cmp
notl
mov
adc
mov
negb
jge
mov
sti
jge
adc
jnp
ds
jmp
bound
mov
push
fsin
mov
loope
sahf
stos
loop
movsb
fsts
adc
sbb
jb
pop
xchg
cmp
enter
imul
data16
xor
jmp
lret
pop
and
out
xor
pusha
cltd
push
pop
mov
xchg
outsb
sbb
in
lea
sub
scas
out
xlat
out
sub
mov
cmpsb
cs
repnz
into
xchg
or
and
fisubl
enter
dec
xchg
aad
pop
sub
jne
pop
add
jg
dec
popa
jge
push
pushf
sub
push
mov
cmp
cmp
popf
sub
sbb
cld
xchg
lret
sub
jb
sbb
sbb
ss
xor
mov
sbb
adc
lock
scas
pop
frstor
mov
and
outsb
adc
xor
mov
or
mov
out
sub
xor
adc
dec
addl
push
aam
ds
jmp
xchg
loope
or
into
dec
adc
bound
mov
mov
sub
test
shl
add
and
pop
es
data16
arpl
jnp
out
lahf
test
leave
sub
jle
test
xchg
mov
dec
xor
popa
jmp
xor
cmc
call
les
roll
lods
or
cmp
xchg
lret
push
rolb
imul
imul
inc
cmp
mov
pop
sbb
out
xor
outsl
mov
xor
hlt
inc
mov
xor
mov
sbb
ss
push
sbb
fldcw
jp
stos
ljmp
adc
cmp
inc
imul
cmp
cmpsl
in
cmpsb
jl
mov
repz
popa
mov
and
push
mov
or
inc
cmp
sahf
add
mov
out
inc
mov
std
int3
sbb
lock
adc
add
shll
and
pop
imul
movsl
mov
push
mov
cmc
shlb
cs
cltd
cltd
ds
cmp
add
pop
sub
data16
test
xchg
jno
xor
pop
pushf
testl
sub
jecxz
cmp
cmp
ss
or
xor
sbb
dec
mov
lahf
gs
mov
hlt
sti
and
and
xchg
sub
and
jecxz
cmp
ljmp
xchg
pop
xorl
and
scas
ljmp
cmpsl
cmpsl
mov
cli
cmpsb
stos
jge
mov
mov
in
dec
rorl
int
jmp
jl
cmpsl
ljmp
mov
repz
dec
push
js
loop
std
sub
xchg
and
test
and
pop
addb
pop
movb
inc
inc
mov
jmp
pop
aam
rorl
int3
or
nop
add
insl
ds
in
cwtl
enter
jns
fisttpll
dec
call
and
pushf
cmc
dec
mov
je
xchg
sub
xor
xor
inc
andl
xchg
xor
inc
in
add
adc
decl
mov
push
jmp
daa
push
pop
jbe
xor
rclb
sahf
inc
dec
adc
std
sbb
pop
loop
and
xchg
jb
mov
cmp
push
inc
sarb
jb
xchg
and
ds
mov
lock
fmulp
dec
dec
push
xlat
fwait
repnz
hlt
xchg
in
int3
aam
add
mov
or
int3
int3
xor
xor
mov
jmp
sbb
cmpsl
pop
inc
rolb
inc
sbb
or
cmp
cltd
mov
fildll
fstl
addl
jns
inc
push
adc
mov
xor
or
sub
xchg
sub
aad
mov
ljmp
movsb
xchg
jecxz
sbb
scas
popa
popa
shrl
test
dec
inc
add
xor
jp
enter
jnp
fwait
xchg
in
push
jmp
test
stos
sbb
push
sub
push
pop
push
ds
fldl
inc
std
daa
jnp
in
mov
and
xchg
push
mov
call
arpl
icebp
or
fbld
ljmp
and
and
out
fiaddl
pop
jno
jo
and
bound
int3
inc
aam
and
mov
mov
hlt
xor
pop
xchg
push
lods
ret
add
mov
shlb
fsubp
push
add
pop
in
add
cmp
es
push
mov
mull
inc
daa
inc
inc
push
stc
jne
push
mov
mov
xor
adc
add
aad
pop
or
movsl
or
mov
push
mov
jae
pop
jae
aaa
mov
stos
jbe
add
mulb
outsl
mov
pushf
xchg
loop,pt
mov
inc
sub
mov
shr
pop
inc
mov
push
lods
lods
loopne
mov
pusha
mov
lret
fisubl
imulb
pop
ror
adc
mov
adc
fwait
cmpsl
insl
dec
mov
std
out
repz
mov
mov
fxch
inc
and
and
dec
insl
int3
add
xor
stos
sub
jge
sub
and
out
out
mov
shl
lods
in
dec
ja
pop
sub
outsb
fdivp
push
movsb
pop
mov
pop
adc
out
jbe
fcmovnu
in
insl
pop
sbb
and
add
and
cmp
mov
or
pop
mov
imul
adc
into
push
popa
sbb
popf
lea
sbb
gs
cli
inc
cmpsb
cld
push
aaa
mov
mov
mov
cmc
cld
cmp
repnz
xchg
and
cld
xchg
lods
dec
lea
mov
cmp
stc
fsubrl
adc
outsb
int
lahf
fsubr
insb
jae
jmp
xchg
sbb
adc
pop
adc
xchg
mov
sbb
dec
popl
aam
stc
push
push
jb
hlt
scas
je
fcoms
aaa
add
dec
pop
cmp
and
xchg
fstl
rcll
jmp
mov
push
mov
js
dec
mov
lcall
sub
mov
dec
ffree
and
lfs
lcall
arpl
lock
pop
fwait
out
cld
jl
fistps
or
dec
xchg
inc
stos
loope
mov
jnp
lret
push
int3
push
cmp
push
aaa
adc
xchg
frstor
lret
mov
mov
and
sbb
pushf
xor
mov
out
xchg
adcb
dec
inc
je
fwait
cs
mov
xor
ds
mov
std
in
jge
or
icebp
hlt
mov
das
xchg
jp
inc
adc
leave
aaa
ja
adc
xchg
les
pop
mov
and
movl
cmpsb
sbb
sub
clc
xor
mov
loopne
jmp
adc
pop
jbe
cmpsb
push
or
loopne
subb
stc
inc
push
xchg
js
push
cmp
sub
aad
mulb
imul
stc
fldcw
inc
adc
jmp
xchg
sub
andl
mov
ret
xor
jmp
sub
jnp
stos
dec
imul
pushf
push
mov
mov
xor
push
nop
sub
out
sub
test
xor
sub
iret
push
std
mov
cmp
mov
jle
push
in
xor
rcrb
out
and
insb
inc
or
sbb
cli
cmp
das
test
inc
lea
shll
jnp
jbe
or
xchg
pop
mov
arpl
je
int
fistpl
ret
scas
dec
lods
jmp
fwait
add
and
jae
push
and
push
add
jp
enter
pop
adc
xor
pop
xchg
pop
subl
inc
xchg
or
pop
ss
mov
push
fisttpll
into
in
scas
sahf
aas
push
scas
sahf
ret
adc
mov
adc
jmp
adc
in
imul
or
sbb
sti
bound
xchg
mov
push
mov
shrl
push
jnp
mov
push
stos
adc
daa
cmp
jmp
std
jbe
out
pop
mov
outsl
or
sti
call
sbb
aam
xchg
rep
cs
mov
sbb
pop
cmp
adc
xchg
stc
and
jb
mov
jo
sbb
xchg
inc
dec
movsl
mov
cmp
xchg
test
fadds
in
or
pop
cs
movb
or
jge
sbb
mov
addr16
cmp
scas
jno
mov
cmc
test
js
mov
and
fcomp
xchg
dec
adc
fidivrl
imulb
ss
icebp
inc
xchg
add
mov
add
or
mov
mov
xchg
es
je
cwtl
xchg
mov
mov
and
inc
push
cmp
cmc
ja
jge
add
js
jmp
out
mov
lea
leave
push
or
push
jne
or
pop
xchg
test
test
xchg
xchg
inc
roll
leave
mov
jno,pt
or
push
mov
cltd
mov
dec
or
cli
cmp
pop
movsb
in
movsb
pop
add
inc
pop
pushf
or
xor
lret
adc
inc
fwait
scas
mov
in
adc
pop
popa
iret
fimull
adc
fcoml
jo
enter
fwait
dec
xchg
adc
inc
out
dec
push
lret
inc
lock
push
nop
pop
lret
sbb
dec
pop
lret
andb
sarb
jg
sti
adc
add
or
mov
push
dec
pusha
pop
fnsave
pop
pop
pop
aaa
out
aas
std
jns
add
push
jnp
cmp
adc
mov
filds
dec
dec
jg
sbb
std
sbb
out
mov
mov
test
adc
mov
mov
cmp
push
jle
aad
lcall
xchg
add
call
stos
mov
xlat
mov
cmp
in
loopne
mov
push
sbb
cs
repz
pop
mov
scas
xchg
loope
cmp
pop
cld
in
outsl
dec
roll
mov
push
loopne
fwait
xor
sub
mov
add
ret
repz
jno
mov
xchg
add
sub
sub
iret
inc
push
mov
call
dec
adc
xchg
enter
test
push
inc
pop
xchg
xor
pop
jg
fst
out
mov
jbe
cmp
cmpl
xabort
jmp
xchg
sbb
sub
or
cmp
sbb
pop
stos
push
fildll
add
sti
shrb
ja
test
call
sti
sbb
push
pop
in
pop
cmp
mov
xor
je
cmp
stos
jae
cld
sbb
inc
pushf
cmp
sbb
sub
mov
pop
jnp
aam
jae
pop
not
adc
jo
jg
adc
mov
pop
mov
sub
jecxz
ss
outsb
dec
int
mov
pop
jae
mov
cmp
bound
sub
test
adc
outsb
add
sbb
dec
ret
and
lret
mov
popf
lods
test
mov
outsb
stc
ljmp
frstor
pop
popf
jg
push
dec
imull
jge
js
stos
pop
jmp
scas
sbb
repnz
popa
je
ret
mov
lea
icebp
fcomps
arpl
add
cmc
mov
stos
inc
add
mov
dec
fcomip
mov
into
clc
mov
lea
jecxz
or
stos
loopne
adc
push
outsb
cmp
inc
or
ja
ficoms
das
test
push
testb
pusha
jae
loop
lcall
mov
testl
and
outsl
mov
fcoms
sahf
jmp
test
jmp
jmp
pop
add
mov
mov
cmp
enter
subl
lods
loop
divl
and
loope
test
jle
or
mov
decb
sti
jno
sub
cmp
bound
or
push
xor
sub
mov
or
loop
xor
mov
fmuls
xor
mov
xor
adc
ss
ljmp
add
pop
mov
addr16
fists
adc
pop
or
add
divl
adc
sahf
test
lret
stc
stos
cmpsb
pop
inc
add
mov
xlat
dec
mov
xor
lahf
cmp
aad
loop
fwait
xchg
dec
test
adc
test
es
and
lea
test
xor
jae
in
mov
or
mov
push
fdivrl
mov
inc
movsb
insl
ds
mov
lds
iret
mov
lcall
add
daa
pop
push
jcxz
inc
mov
fsubs
cmp
push
push
inc
ss
pop
aad
adc
add
lea
jl
cmpsl
lcall
cmp
mov
lret
mov
pop
pop
xchg
in
mov
movsl
pop
pop
push
cs
push
shrb
imul
xchg
popa
fdiv
cmp
or
lock
dec
orl
push
sbb
add
scas
rol
jle
icebp
add
add
sbb
add
shl
pop
mov
int
aas
jge
sahf
sub
fisubrs
pop
xor
sub
ss
out
push
sahf
xchg
push
mov
ljmp
mov
dec
and
push
cmpsl
xchg
cmp
hlt
iret
stos
mov
enter
lret
insb
jmp
pop
cmp
push
mov
jb
jns
dec
lods
repz
pop
stos
jp
add
xchg
fcomps
test
shrl
add
insb
into
imul
fmull
cwtl
xlat
loop
sbb
adc
insl
cmp
daa
adc
stos
or
mov
dec
xlat
add
push
ret
push
add
mov
popf
push
xor
nop
insb
fsubl
das
and
out
mov
xchg
cmp
cld
int
adc
sub
mov
arpl
cmp
mov
js
ret
add
flds
jge
fistpl
lock
pop
xchg
or
divb
sbb
push
loopne
xchg
inc
and
ja
or
jo
mov
jl
sbb
push
push
dec
leave
pop
stc
out
insb
call
popa
inc
sbb
ss
xchg
push
push
inc
dec
pop
dec
aam
cmp
mov
jle
scas
add
jg
mov
sti
add
or
or
cmp
dec
inc
pop
push
lcall
dec
push
inc
mov
xchg
lods
and
mov
pop
xor
push
loop
hlt
dec
lods
in
or
pop
cmp
daa
inc
pushf
push
iret
xor
sbb
xlat
sbb
xchg
mov
imul
pop
push
cld
popf
jmp
jne
out
lock
mov
fcmovnb
nop
gs
xor
nop
or
loop
sbb
or
push
idiv
mov
shrl
sub
adc
and
push
aad
mov
dec
sbb
popf
jl
leave
lahf
adc
sarb
add
xor
xor
inc
mov
cltd
adcb
enter
ret
dec
mov
mov
mov
jne
sar
mov
pop
sbb
pop
ret
cs
outsl
pop
ror
in
sahf
xchg
stc
pop
int3
push
cmp
jae
pop
push
iret
test
sahf
xchg
add
cmp
xor
and
ljmp
jo
mov
and
lods
xchg
shl
into
cmp
inc
pop
int
and
xor
adc
or
ja
jmp
cmc
mov
pop
lds
arpl
sub
dec
or
fnstenv
cmp
pushl
ret
pop
scas
sbb
dec
pushf
push
out
push
popf
pop
mov
and
icebp
mov
mov
cld
inc
adc
jecxz
mov
sbb
xor
and
mov
mov
sub
mov
sub
sub
or
cmp
jns
cltd
addr16
jmp
cli
cmp
in
fcmovne
cmp
add
adc
addr16
mov
in
push
or
ret
xor
mov
jg
idiv
xchg
aad
xor
lret
pusha
aad
add
sarl
mov
loop
fwait
push
arpl
jno
imul
mov
pop
callw
es
rcr
xchg
mov
sahf
loope
adc
inc
daa
in
enter
inc
cli
movsb
fmuls
mov
sbb
loop
and
jae
int3
test
or
mov
clc
add
sahf
mov
divb
fwait
xchg
scas
popa
cli
sub
and
jo
in
xor
jle
and
enter
movsb
mov
xchg
or
lock
bound
aad
iret
stos
pop
into
out
in
sbb
xchg
xchg
ficoms
dec
jb
mov
pop
xchg
xor
ret
cmc
in
mov
xlat
dec
mov
push
scas
sub
es
jns
push
cmp
jns
je
add
add
enter
dec
ret
sub
dec
repnz
lcall
jmp
ss
imul
jnp
inc
xor
rorb
push
pop
icebp
cmp
mov
add
fildl
test
pop
dec
jge
inc
jle
jno
push
xchg
sbb
scas
nop
fdivs
xchg
scas
rclb
es
push
jecxz
dec
and
mov
dec
cmp
sbb
mov
lahf
std
or
xchg
test
jl
aaa
mov
test
push
add
insl
push
sub
rorl
cld
cmp
xchg
xor
sahf
or
jbe
push
jnp
cld
cmc
xchg
js
add
inc
or
mov
in
or
sbb
or
lods
mov
fstl
push
cli
mov
pop
fs
ds
or
icebp
cmp
in
andl
test
mov
lahf
dec
add
xor
mov
sbb
lcall
imul
into
insb
popa
cli
pushf
jg
dec
xchg
fisubrl
push
ds
stos
icebp
shll
mov
in
pop
test
mov
cmp
loop
xlat
int3
lret
dec
xor
lcall
sbb
mov
ret
fildl
mov
aas
dec
adc
mov
dec
add
pop
out
mov
fdivs
mov
nop
sbb
xchg
sbb
xor
das
mov
std
arpl
push
fs
shr
movsb
or
jnp
sbb
adc
jge
nop
lret
adc
cld
gs
movsb
and
xor
cmp
pop
outsl
xchg
and
or
sbb
int
lret
movsb
test
rorl
daa
stos
cmovle
add
cmp
push
fldenv
lds
jae
pop
leave
orb
arpl
lahf
jmp
dec
inc
adc
adc
enter
in
ret
jecxz
lods
sub
dec
loope
test
push
ficoms
lcall
shl
xor
stos
pushl
cmpsb
nop
adc
jmp
loope
cmp
cmp
hlt
ret
fwait
aam
xchg
push
add
pop
xchg
int
jle
adc
fisttps
addb
addr16
push
inc
lea
outsb
xchg
and
orb
push
or
fstps
cmp
arpl
or
fiadds
scas
test
stos
pop
test
ret
cmpsb
addb
xchg
pop
fistpll
clc
rcll
and
mov
cmp
and
dec
or
or
sbb
mov
adc
xchg
jl
lea
mov
nop
or
push
sbb
ret
jnp
lock
mov
daa
lods
aaa
gs
inc
leave
push
sub
and
in
icebp
or
loope
imul
pop
mov
test
mov
ret
mov
sti
fldcw
sti
and
lcall
add
cmp
mov
sbb
lcall
daa
jle
iret
cld
test
pop
jne
test
jmp
in
xchg
shrl
in
mov
stos
mov
inc
out
sub
adc
rol
cwtl
scas
fsubrs
jle
lods
or
in
aad
xchg
adc
gs
outsl
es
mov
jno
jl
cmpsl
push
je
mov
cmc
or
mov
sarb
xlat
stos
std
ret
dec
rol
gs
in
adc
flds
xor
movsb
adc
fistpll
in
fcoms
dec
inc
cs
outsl
testl
inc
mov
std
imulb
sbb
cmc
jmp
rolb
cwtl
std
pop
mulw
and
or
outsb
fs
adc
scas
test
jmp
xchg
test
sti
test
jp
mov
push
pop
lret
fsubs
jle
ss
cld
clc
or
cltd
insb
loope
mov
mov
ret
mov
pop
jge
imul
pop
xor
std
and
mov
je
addr16
xchg
or
xlat
or
xor
add
and
add
or
inc
cltd
add
cmp
mov
sbb
dec
jp
ss
pop
adc
mov
js
mov
pop
mov
dec
fsts
sbb
dec
jecxz
pop
shll
jnp
outsl
sbb
pop
mov
out
jns
lds
cs
call
lret
in
cmp
mov
inc
int
dec
fisubrs
jecxz
aaa
data16
enter
lock
sub
fists
jae
push
ret
fmul
mulb
push
ret
pop
out
movsb
mov
jb
cmp
das
fidivs
cmp
or
test
ja
icebp
pop
rcrb
xor
pop
rorl
jmp
mov
pop
into
lods
inc
das
clc
loopne
jnp
dec
js
sbb
pop
mov
push
pop
and
js
sti
arpl
fidivs
jb
jecxz
loopne
clc
mov
adc
pop
pop
loope
jo
sbb
aam
mov
mov
mov
inc
mov
mov
mov
cmp
lea
imul
add
in
adc
mov
cmc
xchg
pop
dec
sar
inc
cmp
iret
adc
push
inc
fcompl
arpl
dec
out
or
outsb
loopne
test
idiv
add
aad
cmpsb
or
repnz
aas
test
rcrb
loope
push
out
stos
mov
xchg
test
add
loop
adc
push
xor
xchg
out
mull
aam
lahf
fstpl
int
iret
pop
adc
and
cmpsb
jae
test
es
push
inc
lret
stos
inc
pushf
imul
int
push
add
pop
push
repnz
jmp
xchg
test
push
push
cmpsb
pop
in
int
push
cmp
mov
int3
add
pop
dec
pusha
icebp
fmuls
js
xchg
shlb
cmpsb
in
cmp
cmp
stos
shll
mov
call
and
xor
inc
imul
push
mov
cmp
pop
mov
adc
adc
pop
in
jl
push
dec
jne
lcall
mov
repz
imul
push
shlb
push
xchg
test
or
stos
xchg
jo
lret
lahf
xchg
xchg
repnz
in
fcomps
dec
iret
sahf
or
aad
scas
gs
sti
sub
jmp
fildll
adc
out
push
adc
xchg
pop
dec
cmp
cmpsl
xchg
xchg
xchg
ja
cmc
xor
out
pop
add
cmc
fmul
or
mov
mov
and
cmp
jecxz
insb
xchg
loopne
clc
pop
nop
inc
add
dec
test
pop
jle
loop
dec
and
icebp
cmc
lock
insl
mov
imul
hlt
xchg
ss
mov
mov
hlt
ret
fiadds
jge
adc
rclb
inc
mov
hlt
fsubrs
mov
pop
enter
mov
mov
leave
pop
icebp
hlt
sbb
pop
xchg
stos
pop
mov
in
dec
xchg
jl
jne
sti
loopne
mov
fsubs
sbb
xchg
outsl
jg
into
scas
xchg
aam
pop
filds
or
cld
xorb
inc
or
push
xlat
inc
addl
cmpsl
ret
xchg
cs
xchg
or
je
mov
fs
push
pop
mov
jecxz
sub
dec
dec
cmp
inc
das
aaa
mov
and
pushf
int
mull
jmp
gs
arpl
adc
insb
sbb
subb
inc
movl
adcb
ja
imul
xor
jge
mov
std
shlb
test
sub
xor
or
xor
xor
adc
test
mov
pop
xchg
lret
stc
lds
adc
icebp
scas
cld
cmc
dec
ss
das
aam
and
jg
xchg
fmul
dec
mov
out
sub
dec
aaa
scas
mov
scas
xor
sbb
imul
je
or
aad
adcl
rorl
insl
inc
mov
mov
movsl
adc
aad
cli
mov
aaa
xchg
lds
out
pop
daa
scas
sahf
pop
pop
into
scas
das
xchg
loope
mov
bnd
push
inc
xor
push
imul
pop
lret
pop
das
arpl
add
repz
adc
xor
mov
fnstenv
std
cmpsb
adc
outsl
sbb
cmp
shrb
cs
and
or
mov
add
mov
sbb
pop
sub
test
fcmovnb
or
inc
ja
pop
mov
movsl
xorl
add
cmp
pop
mov
pop
push
lahf
sbb
nop
pop
or
pop
sbb
and
pop
ljmp
pop
mov
mov
xchg
cld
xchg
sbb
pushf
stc
out
ret
jo
or
cmp
int
cs
mov
mov
jl,pt
lock
test
sub
popa
jmp
lahf
fucomi
cmp
fcompl
das
dec
ret
push
aaa
dec
push
pop
cmp
lods
adc
sbb
out
inc
es
add
lods
lock
jle
rorb
push
or
sbb
mov
or
cmp
xchg
cmpsl
inc
movsb
or
pushf
sub
jno
push
push
aaa
test
in
inc
pop
jg
xor
lret
push
mov
mov
sarl
js
fdivr
daa
das
cmc
cmp
test
xchg
jns
adc
loope
aam
mov
mov
jl
inc
pop
ret
mov
xchg
xlat
sbb
inc
mov
mov
xlat
lahf
fwait
dec
fcmovb
push
pushf
jge
iret
repnz
inc
sbb
adc
inc
dec
ss
test
rorl
mov
jp
jl
mov
setl
or
out
push
std
jg
pop
adc
fadd
mov
int
call
adc
in
mov
push
daa
test
pop
xchg
dec
test
dec
js
daa
lret
cli
cmp
jl
pop
inc
mov
shll
mov
out
push
or
imul
or
aas
mov
imulb
dec
jle
add
in
add
mov
mov
out
jl
push
lds
scas
sbbl
iret
stos
in
and
mov
dec
nop
mov
test
js
jb
dec
nop
loope
mov
xorl
and
cwtl
xor
push
jo
mov
test
push
pop
jo
int
add
dec
push
xchg
pushf
xor
cwtl
adc
push
hlt
int3
cmp
sbb
push
call
jmp
gs
xchg
mov
aam
mov
jle
mov
add
fidivrl
or
cmp
testb
jecxz
sbb
pop
fldt
add
jmp
mov
out
jbe
int
sub
rcr
xchg
push
fsub
mov
jmp
sar
sbb
jmp
add
mov
test
adc
inc
inc
jge
adc
push
xchg
ljmp
inc
and
dec
push
imul
out
les
fwait
movsl
mov
xchg
inc
in
aas
dec
mov
pop
add
fnstsw
stos
inc
shrl
or
ja
mov
jnp
stc
xchg
stos
jmp
clc
rorb
inc
dec
scas
xchg
mov
sbb
ret
or
bnd
aam
cli
cmpsb
add
jb
jne
push
pusha
sahf
add
sarb
clc
dec
dec
jno
fisubrs
aaa
cmp
cs
shll
lret
pushf
imul
jns
xchg
test
jbe
sbb
dec
out
dec
div
xchg
xchg
mov
mov
out
nop
or
xlat
xchg
jge,pn
sub
mov
mov
out
out
lock
sub
out
lahf
dec
enter
jbe
xor
daa
pop
xor
addr16
push
arpl
add
testl
mov
je
sub
add
clc
mov
leave
adc
jl
push
je
lahf
mov
and
repz
stos
scas
les
negl
icebp
sti
mov
cmp
lods
xor
adc
mov
xchg
dec
aaa
xor
push
rep
jo
sub
sub
rcrb
lahf
xchg
insb
push
or
dec
outsl
xlat
push
gs
inc
xchg
cs
sahf
movsb
arpl
sar
pop
pop
call
mov
fistps
cmp
mov
pop
and
jg
inc
add
xor
pop
leave
xchg
dec
mov
lds
movsl
testl
xchg
sti
dec
arpl
fucomi
xchg
cmp
scas
inc
dec
pop
mov
lret
mov
xor
adc
fnstsw
xor
ret
dec
daa
xor
dec
adc
es
sub
inc
imul
das
popa
icebp
into
test
xchg
lret
les
addr16
and
mov
mov
divl
fstpt
mov
ljmp
int3
push
push
pushf
je
mov
dec
push
jl
add
in
push
mov
and
fwait
cmp
cmpsb
loop
aaa
lret
pop
clc
loope
xlat
mov
jle
movsb
dec
dec
sti
lret
dec
pop
loop
sub
inc
mov
mov
or
mov
sbb
jne
inc
or
add
jg
ds
insb
cmp
dec
sub
mov
add
pop
mov
loop
inc
bound
aam
test
into
cmpsb
imul
adc
testb
sub
gs
insl
aas
xchg
stos
cmp
mov
xchg
mov
mov
call
and
sbb
test
aad
sbb
jno
andl
mov
daa
sbb
stos
jp
dec
cmp
mov
pop
ret
xchg
divb
inc
out
lret
or
pop
jne
cmc
mov
rorb
jns
xchg
sbbl
add
loopne
jbe
jb
bound
lock
mov
daa
mov
std
adc
addr16
inc
jbe
aad
repnz
data16
daa
inc
loop
fcomip
sarl
loop
mov
jbe
xor
mov
repz
shll
fistps
sub
inc
inc
adc
jo
dec
mov
xor
loop
jg
mov
lret
jg
add
mov
cld
dec
mov
movsl
stos
ljmp
lea
fs
adc
push
xchg
pop
push
inc
xor
sbb
stos
jae
int
sub
lret
mov
fmuls
js
idiv
xor
lret
js
mov
mov
xchg
pushf
adc
pop
insl
push
imul
push
pop
jge
push
insl
hlt
imul
stc
fwait
imul
inc
xlat
lods
sub
neg
xchg
es
push
xlat
imul
shll
mov
ljmp
or
adc
xchg
jbe
imul
sbb
pop
loopne
inc
pop
dec
fwait
cwtl
imul
jp
scas
push
loop
jbe
mov
dec
loopne
in
je
dec
gs
and
lcall
fwait
je
cmp
jo
ret
sti
add
insb
daa
clc
jb
stos
mov
fsubr
stc
xor
loop
adc
jbe
ljmp
mov
out
xchg
cmp
sbb
mov
add
cwtl
mov
pusha
mov
nop
in
pop
fwait
sub
or
pop
jno
stc
orb
emms
test
xor
lods
hlt
sub
mov
out
int
lahf
sbb
vminps
sbb
jge
enter
testb
hlt
sahf
cld
xor
stos
push
pop
pusha
mov
idivb
pop
test
cld
and
xor
shrb
pop
ljmp
xor
inc
mov
enter
test
movsb
inc
pop
js
xor
ficomps
xchg
gs
sbb
push
ret
cmpsl
jns
cmp
ret
add
xor
inc
xchg
mov
xchg
cmp
cmc
pop
btrl
mov
push
xchg
pop
adc
or
and
mov
or
loopne
mov
mov
mov
jg
jge
cmp
test
adc
je
mov
test
sub
imul
push
loopne
dec
push
ret
push
sahf
dec
lret
mov
xor
lods
xchg
iret
push
sbb
popl
std
fwait
jb
loop
xchg
pop
pop
fisttpl
popf
push
ud0
aam
inc
sub
mov
push
mov
enter
test
push
clc
iret
sbb
repz
sbb
arpl
xchg
rcrb
in
mov
sbb
mov
ret
leave
push
xor
push
mov
jbe
aad
fs
mov
cwtl
xchg
outsl
add
fldl
pop
ljmp
inc
mov
xor
pop
rcrl
jmp
sub
inc
test
orb
mov
sub
shlb
out
rclb
and
pop
insl
mov
aas
xor
andb
icebp
hlt
sub
insb
mov
dec
jbe
rclb
push
mov
mov
mov
pop
jmp
mov
xor
aam
cli
xchg
or
ljmp
cmpsb
sub
fldenv
push
push
mov
sbb
and
xor
mov
mov
xchg
add
mov
inc
push
jo
jle
popa
jecxz
push
jmp
cwtl
repz
cmp
sub
aam
lods
xchg
test
loopne
push
fiaddl
xchg
stos
xchg
es
clc
imul
repz
dec
scas
jl
shll
sub
insb
fidivrs
fisttpll
or
inc
fwait
or
xchg
insl
mov
sub
divl
xchg
popa
out
pop
rcrb
sbb
sbb
js
mov
or
xor
and
iret
pop
dec
iret
lods
nop
cmc
sarb
adc
add
jb
scas
std
mov
mov
ss
jnp
xlat
loope
std
xchg
mov
je
ret
insl
mov
ljmp
jecxz
test
lret
cmp
pop
hlt
mov
mov
xchg
push
pop
out
aas
or
push
ret
orl
data16
pushf
mov
xchg
lret
xchg
or
cs
push
mov
cs
mov
push
mov
mov
sbb
xchg
dec
push
pop
das
or
or
jo
push
jl
push
or
movsl
stos
or
fs
jnp
mov
enter
xor
push
shll
or
and
jb
add
lcall
adc
cmp
sti
pop
sbb
and
dec
jle
jno
daa
push
cwtl
jmp
xchg
adcl
in
divb
setae
loope
fcoml
jmp
outsl
xchg
scas
xchg
ja
ret
sbb
cltd
cmp
or
nop
inc
std
sub
sub
ljmp
imul
xchg
xchg
aad
sbb
jne
pusha
inc
sub
fistps
jmp
loop
mov
fcomps
out
jg
pop
mov
cmp
xor
cmp
aad
icebp
cltd
sub
je
add
adc
in
dec
orb
in
loopne
idivb
dec
test
xchg
clc
xor
fsubrp
shrl
ljmp
xchg
subl
add
push
lret
xchg
xlat
mov
jmp
adc
fucomp
and
push
divb
lods
add
cmp
adc
push
fsubr
jp
cmpsl
jns
lahf
jge
arpl
mov
lcall
inc
xor
sbbl
add
sbb
stos
popa
or
mov
jns
xchg
shrl
ljmp
pop
rorb
popf
movsb
dec
mov
jecxz
ret
and
out
or
js
stos
mov
cs
inc
mov
repnz
mov
scas
add
xchg
mov
push
mov
add
cltd
mov
scas
addb
sbb
stc
jb
or
in
cmpsl
push
test
fisubrl
jbe
mov
aam
leave
mov
cli
cmp
pop
sbb
shlb
shl
or
in
movsl
xor
mov
push
icebp
dec
pop
push
dec
xor
push
lds
mov
dec
or
jmp
mov
outsb
hlt
dec
push
je
mov
add
xchg
scas
mov
sbb
data16
les
xlat
xorl
imul
push
push
add
mov
and
pop
les
loop
and
pushf
sub
and
movsb
nop
movsl
push
js
add
xchg
fidivl
jecxz
mov
in
mov
and
and
and
pop
add
xchg
mov
jo
cltd
popf
idivl
jl
in
pop
fisubrs
xchg
insl
sbb
dec
adc
loope
stos
popf
pop
and
ljmp
cmpsl
jle
data16
ret
add
xchg
adc
shl
rcr
test
les
ss
cmp
cmp
sub
andb
mov
cwtl
rcr
add
mov
and
ss
iret
sarb
cltd
mov
cmp
stos
cwtl
mov
rcll
out
mov
cmp
push
pop
imul
test
int3
addr16
addl
fldenv
xchg
push
lret
pop
loopne
mov
mov
or
shr
aam
nop
xor
test
cmp
das
dec
and
push
inc
xor
call
cmc
dec
xchg
dec
out
mov
ret
js
in
repz
enter
sbb
push
mov
and
xor
inc
imul
push
test
jg
lea
dec
fcompl
pop
fisubrl
mov
push
pop
mov
int3
enter
inc
mov
stos
mov
imul
lock
fsubrp
push
idiv
cmp
nop
push
push
jnp
mov
push
in
jge
mov
fimull
sub
cmp
imulb
mov
mov
pop
pop
in
dec
dec
inc
imul
sbb
dec
pop
pop
ds
iret
adc
mov
inc
nop
inc
mov
inc
movzwl
inc
jle
xchg
cmp
fwait
cmp
pop
lea
je
mov
das
lods
shlb
testl
inc
cld
movsb
mov
rclb
fs
leave
sbb
clc
sbb
jo
nop
jmp
mov
mov
mov
cmc
jge
mov
in
and
scas
aas
lods
and
push
cmc
jl
push
mov
hlt
out
je
negl
in
adc
xor
mov
pop
xchg
test
fsubrl
dec
sbb
sub
movsb
jno
and
mov
sbbb
daa
sti
xchg
lea
rolb
mov
mov
outsl
stos
fdivl
ret
clc
or
jae
outsl
icebp
mov
ss
sub
lret
push
xor
movl
bound
or
push
popf
je
push
pop
push
outsb
insb
push
mov
or
sahf
add
daa
pop
mov
adc
add
fs
sti
out
mov
xchg
dec
xor
add
gs
out
dec
or
jp
movsl
gs
lods
orb
jno
mov
lahf
push
inc
mov
dec
jbe
sub
or
movsb
test
mov
pusha
sbb
loopne
ret
hlt
das
insb
lret
add
mov
lds
lods
inc
outsl
mov
xchg
dec
jae
lcall
adc
sbb
out
lock
insb
xchg
push
inc
adc
pusha
movsb
stos
rol
or
mov
cli
imul
sbb
pop
stos
dec
enter
cs
idivb
fidivs
inc
jbe
xchg
mov
mov
dec
call
out
add
pop
aad
decb
fchs
repnz
addl
data16
scas
call
sbb
dec
test
xchg
jl
inc
sub
xchg
call
insl
jb
fdivrs
jg
mov
mov
in
leave
jbe
xchg
push
sarl
roll
insl
add
fnstsw
repz
xor
idivl
mov
idivl
and
inc
mov
shll
ds
repnz
ret
pop
or
cwtl
inc
dec
popf
jo
and
sub
mov
pop
mov
xor
push
lock
dec
outsb
mov
push
cmp
cld
dec
fldcw
les
push
cmp
inc
idivb
hlt
xchg
imul
sbb
jecxz
cmpsl
push
add
pushf
cmp
int
mov
inc
pop
lock
test
cs
sub
jne
popf
test
xchg
jae
cmp
les
mov
xor
out
add
mov
xchg
mov
mov
test
icebp
imul
mov
popf
xor
scas
mov
cmp
xor
cmp
or
sub
pop
unpcklps
aad
cwtl
bsf
jbe
dec
insb
sbb
test
shll
enter
jecxz
cltd
test
lret
sub
pop
enter
test
in
ljmp
xor
mov
loop
notb
subb
bound
aas
sbb
push
mov
dec
push
cwtl
fwait
sbb
aam
rcrb
inc
mov
das
sub
xchg
in
add
xchg
adc
xor
gs
fcompl
dec
lret
sub
sbb
dec
inc
cmp
into
inc
cmpb
hlt
xlat
shr
movsl
ljmp
sbb
mov
sbb
cmp
jp
daa
leave
add
add
mov
into
sbb
ret
mov
lock
adc
ljmp
mov
rcll
outsb
mov
fwait
mov
jmp
pushf
xlat
pop
xchg
shrb
fstpl
adc
imul
or
negl
mov
add
inc
dec
jno
dec
lcall
ret
repnz
lods
mov
ljmp
outsb
mov
cmc
xchg
sahf
push
negb
xor
imul
adc
pop
imul
adc
cmp
mov
call
mov
adc
mov
sbb
cwtl
in
cli
lret
mov
cwtl
inc
fmulp
mov
clc
ja
xchg
shl
inc
ljmp
pop
cmp
movsl
or
pop
sbb
and
cmp
jnp
addr16
outsb
sub
cltd
out
mov
add
dec
lods
cmc
shl
mov
imul
dec
stc
push
fs
jae
jb,pt
pusha
mov
loopne
or
xchg
fistps
in
lds
xlat
sub
mov
movsb
adc
cmp
cmc
jb
stos
jae
dec
adcb
inc
add
dec
push
sbb
shrb
jne
push
loopne
in
ds
clc
adc
push
adcb
aad
pop
mov
xchg
out
sub
lahf
ss
mov
push
das
fs
loope
mov
ret
mov
xor
push
sub
push
jo
jae
mov
cltd
push
leave
div
sbb
lock
outsl
sbb
test
sub
int
xchg
sub
push
add
scas
and
lahf
xor
loop
and
add
out
or
add
ficoms
stos
into
ror
add
mov
mov
test
add
mov
arpl
pop
into
cmpl
lock
mov
mov
mov
hlt
dec
inc
xchg
fstpl
add
into
and
sub
add
cs
cmp
xchg
mov
loope
mov
mov
mov
stos
push
xor
sbb
dec
inc
xchg
adc
and
dec
jmp
mov
mov
cmc
repz
int3
test
mov
aas
aad
mov
mov
pop
frstor
lcall
imul
mov
stos
xor
or
jns
fldl
xchg
jmp
push
mov
jne
loope
aaa
push
cmp
xor
icebp
in
mov
push
push
mov
sbb
out
xchg
sbb
push
icebp
lret
or
stos
fwait
movsl
jp
imul
stc
inc
test
mov
push
gs
out
out
sub
sub
cmp
push
pushf
addr16
xchg
in
xchg
xchg
jno
lds
pusha
in
mov
add
push
xchg
push
and
stc
in
push
pop
shrl
pop
hlt
cli
pushl
xor
push
lcall
mov
adc
pushf
pop
lods
adc
mov
notl
imul
xchg
cwtl
lods
pop
sbb
pushf
xor
fdiv
xchg
cmpsl
sbb
and
pop
or
mov
std
inc
pop
in
pushf
sub
adc
push
push
fisubs
ds
notb
mov
enter
outsb
cltd
mov
or
out
xchg
inc
jns
stos
icebp
dec
lret
adc
mov
add
div
mov
gs
xchg
repz
mov
es
push
cli
sbb
repz
inc
or
dec
mov
add
jg
jmp
and
cmp
flds
mov
movsb
scas
pop
negl
pushf
mov
adc
lcall
jo
or
xchg
movsb
jnp
fnstenv
xor
insl
ljmp
jecxz
jns
push
popa
data16
and
lahf
mov
jne
mov
out
push
outsb
add
int3
rclb
gs
push
mov
jno
push
push
outsl
cltd
in
sbb
xor
xor
sarl
mov
xchg
jp
adc
movl
fbld
paddsw
mov
loopne
adcl
sub
lcall
into
idivb
mov
aaa
roll
xchg
mov
mov
mov
in
adc
mov
jo
in
andl
pop
xorb
in
dec
jg
aaa
fidivrl
jmp
cltd
adc
pop
inc
push
inc
outsb
jo
pop
test
lea
inc
mov
sti
pop
inc
fdivl
aaa
sbb
ss
jecxz
aam
ret
adc
sbb
daa
or
test
ljmp
sbb
cmp
es
fadds
fadds
xchg
dec
insb
xchg
dec
pop
mov
mov
lahf
clc
and
ljmp
hlt
arpl
push
push
lds
adc
push
div
aaa
mov
fucomp
xchg
idivb
push
out
xor
cmpb
push
xor
jg
mov
adc
inc
stos
in
xchg
bound
fcoml
ret
sar
xor
pop
and
cmpb
inc
pop
js
mov
push
mov
adc
fldt
sti
mov
outsb
cmpb
or
xor
add
adc
sbb
roll
rcr
aam
cmp
and
arpl
popf
xchg
and
int
push
shrb
jae
mov
xchg
xor
dec
add
or
and
popf
lcall
test
int3
in
mov
xchg
imul
xor
stc
cmp
xchg
int
and
scas
adc
jg
jecxz
mov
dec
ds
add
and
jno
adc
pop
push
data16
cli
dec
pop
das
sbb
and
sub
incl
ss
mov
or
mov
das
mov
sbb
inc
movsb
add
arpl
inc
in
jg
sub
jg
loopne
push
or
cwtl
jecxz
movsl
cli
and
call
xor
or
push
mov
xor
cs
into
cmp
xor
stos
rcrl
lods
adc
shlb
in
in
mov
ja
rol
enter
sbb
aam
clc
jg
sbb
sbb
push
dec
fcomi
mov
jbe
push
es
test
inc
data16
js
pop
adc
add
pop
mov
sbb
ljmp
sub
push
xor
and
or
test
inc
dec
lea
inc
mov
xlat
dec
daa
aam
mov
jbe
mov
mov
push
pop
lahf
mov
jge
xlat
pop
xor
adc
xor
mov
addr16
pop
jmp
xor
xchg
sbb
out
push
mov
mov
dec
test
xchg
call
push
or
mov
xchg
push
dec
push
je
pop
pop
mov
push
or
adc
add
mov
aas
cli
aad
mov
xor
into
sub
adc
cmp
lahf
dec
cmovnp
sahf
push
sbb
shll
nop
sbb
mov
adc
repz
imull
aaa
pop
hlt
fimull
push
xchg
out
xor
pop
out
lea
dec
rolb
lret
aaa
test
mov
ret
mov
mov
mov
je
js
lcall
add
std
rolb
adc
js
pop
lds
inc
mov
outsb
mov
cmpsb
imul
mov
xorps
insb
test
das
arpl
imul
mov
inc
pop
pop
add
xchg
cmp
daa
sub
xchg
jle
push
cmpsl
dec
mov
adc
lahf
push
jne
or
fcoms
mov
out
push
repnz
add
test
push
ret
out
mov
lret
in
sbb
jecxz
add
mov
gs
jmp
add
scas
stos
add
outsb
or
and
mov
in
cwtl
ficoms
or
sbb
cmp
lahf
es
xchg
adc
jge
adc
imul
mov
adc
outsl
daa
loopne
in
call
lds
xchg
mov
mov
mov
and
or
shll
and
je
arpl
nop
pcmpgtd
cmp
aam
lcall
bound
aam
repnz
inc
xor
mov
and
sbb
sbb
push
adc
cmp
adc
test
pop
cltd
pusha
andb
sti
dec
aas
adc
xchg
inc
std
pop
adc
add
and
pop
mov
add
xor
ja
pop
mov
jecxz
push
pop
andl
enter
xor
add
daa
and
je
mov
dec
push
das
push
cmp
or
xchg
scas
sbb
xchg
adc
popa
and
iret
lret
icebp
bound
jne
and
inc
jl
stos
js
aas
inc
mov
mov
or
andl
pop
sahf
andl
rolb
addr16
or
inc
iret
repnz
popl
pop
add
stos
jl
inc
cmc
divl
cs
lahf
icebp
inc
ret
cmp
mov
pop
jbe
cmp
shll
ret
div
jge
sahf
out
jns
ret
lea
scas
iret
stos
sbb
mov
inc
iret
inc
mov
into
push
jecxz
and
adc
xor
and
or
sbb
aas
ret
pushl
sub
inc
in
add
mov
push
pop
jns
icebp
or
inc
pusha
nop
fimuls
xchg
call
mov
scas
js
jle
xchg
in
and
push
push
insl
jns
pop
test
cld
js
cmp
ret
into
ja
inc
sbb
xchg
addr16
jne
mov
inc
icebp
movsb
add
addb
mov
cmp
push
dec
data16
into
mov
in
scas
jge
sahf
push
pop
movsb
sub
sub
scas
xchg
cmpsl
push
pusha
pop
jle
lods
and
push
jbe
pop
mov
cmp
popa
jo
mov
fldl2t
mov
popa
lret
ret
outsl
mov
insl
test
lods
cmp
js
push
xchg
xchg
mov
lret
mov
clc
push
dec
addr16
add
sbb
jl
add
in
sub
or
pop
fprem1
xchg
adc
xchg
mov
push
jns
scas
push
aam
or
push
xchg
leave
lcall
and
add
out
sarb
shlb
leave
push
outsb
pushf
cld
mov
pusha
shl
incb
es
bound
scas
pop
pusha
push
dec
es
test
xchg
sar
push
icebp
xchg
cmp
or
pop
pop
fistps
fucomi
sub
mov
stos
sbb
xor
mov
test
jbe
xlat
shlb
filds
mov
subl
pusha
cmc
fidivl
and
mov
cmpsl
jle
sbb
or
mov
sbb
cld
add
fbld
push
sbb
jecxz
out
lret
divb
sub
add
mov
or
adc
mov
pop
pop
addr16
scas
inc
mov
lock
iret
push
fsubl
in
out
cmp
or
negb
mov
adc
mov
or
pushf
dec
and
loopne
jb
xor
xlat
xchg
and
decl
lahf
or
mov
and
shrl
int3
xor
mov
ficomps
into
jmp
push
mov
xchg
mov
jmp
inc
or
xor
int
jb
lods
xor
add
xchg
aam
sbb
hlt
lret
cmc
mov
rdmsr
lahf
std
bound
sub
shll
xorl
inc
mov
out
xchg
dec
xor
push
or
inc
ljmp
loope
push
inc
push
jmp
cmpsl
and
xor
and
push
mov
insl
fstpt
and
dec
xchg
ljmp
pop
cmp
nop
mov
sbb
aam
icebp
pop
cltd
jns
cli
pop
mov
xchg
outsl
jb
push
sbb
inc
pop
xchg
gs
inc
call
ret
lea
jle
dec
lea
and
call
stos
cmp
add
and
adc
std
repnz
out
rcll
in
add
xchg
lcall
shrb
dec
sbb
push
pop
lret
pushf
ss
call
mov
fwait
adc
push
jb
rorb
popa
sahf
sbb
scas
push
cwtl
adc
xchg
xchg
inc
ja
imul
dec
repz
jge
lods
test
mov
cwtl
push
push
pop
push
add
push
scas
and
mov
add
mov
cli
int
pusha
xchg
lahf
in
xchg
dec
mov
cli
vmovss
mov
inc
lock
int
mov
test
mov
fisubrl
sub
push
mov
inc
sbb
mov
ds
push
pop
mov
push
xlat
incb
push
leave
lock
cli
push
mov
ret
mov
fyl2x
pxor
and
mov
xor
xor
mov
add
in
mov
aaa
fiadds
fstl
adc
adc
jle
xchg
negl
dec
sbb
roll
out
es
jp
xchg
ret
pop
data16
sti
xchg
mov
push
enter
ret
xchg
notl
or
scas
lret
and
push
xchg
and
adc
mov
mov
pop
mov
out
push
outsb
sub
in
or
jo
sub
inc
mov
xor
in
xchg
hlt
jecxz
gs
popa
sbbb
sbb
lret
cmpsb
mov
mov
cld
nop
neg
in
inc
lods
icebp
lahf
mov
icebp
daa
nop
test
mov
icebp
mov
push
xor
mov
push
and
daa
shll
in
mov
sub
mov
arpl
add
shrl
jp
les
xorl
scas
ss
mov
pop
in
or
jbe
mov
aam
loope
mov
push
pusha
fsubs
or
insb
lret
mov
int
mov
rolb
dec
mov
into
dec
fstps
popf
xor
test
out
inc
clc
mov
pop
sub
loope
test
pop
fwait
jbe
insl
xorb
add
aaa
jmp
adc
inc
arpl
insl
xchg
push
fprem
mov
jne
or
mov
xchg
lea
cmp
cltd
sbbl
repz
sbb
cmp
pop
and
jno
fbstp
imul
mov
jne
dec
fdivr
mov
dec
lods
push
fsubrl
fdivs
lods
add
pop
or
in
pop
jp
pusha
ficompl
push
inc
int3
enter
adc
jb
rcrl
rorb
or
push
scas
mov
adc
hlt
rorl
mov
or
jp
int
jae
inc
imull
and
push
pusha
imul
or
scas
mov
xchg
jmp
xchg
push
or
cmp
and
cmc
inc
jbe
popl
xchg
push
push
lods
push
mov
xchg
jmp
push
mov
pxor
dec
mov
mov
in
pop
or
fidivrs
imul
dec
in
fcmovnbe
mov
mov
dec
and
cli
or
push
sahf
lds
mov
shl
inc
orb
mov
pop
stos
loopne
inc
fucomip
stos
lret
pop
jae
dec
mov
cmpsl
cwtl
cmp
rsm
outsb
int
rclb
lock
xchg
int
movsl
movsl
bound
aam
insb
dec
push
mov
add
lea
les
add
sub
pop
testl
xchg
divb
bound
idivl
adc
xchg
sahf
es
cmp
es
lret
add
jp
addr16
ljmp
or
sahf
mov
add
dec
cld
icebp
in
jns
mov
into
jb
gs
ds
pop
jnp
mov
cmp
sbb
xchg
add
push
in
jno
push
lcall
pop
fcompl
lea
popw
xchg
shlb
sub
sbbb
hlt
mov
in
mov
ror
daa
mov
jmp
pop
adc
repz
or
lods
vmread
cmp
fiadds
imul
aad
cs
cmp
cli
and
pop
cli
xchg
out
out
cwtl
int
out
cwtl
pxor
or
lcall
ja
jge
out
adc
add
jns
mov
jl
insb
imul
sub
or
out
mov
rcr
imul
sahf
cmp
call
sbb
adc
into
lds
data16
outsb
test
popa
xor
xlat
cmp
xor
xabort
mov
cmpsb
mov
mov
jbe
pop
shl
aam
dec
adc
lds
out
inc
leave
push
sub
dec
mov
dec
mov
jo
adcb
repz
sub
in
mov
dec
mov
in
out
cmp
in
es
nop
xchg
sbbl
fcos
arpl
and
cli
lds
jno
sub
sub
jecxz
or
fsubs
sbb
push
ja
pusha
repz
out
ds
fisubl
in
jb
cmp
or
imul
sbb
xor
popa
addr16
sub
int3
daa
out
repz
cmpsl
and
or
jmp
cmpl
or
imul
and
mov
inc
pop
dec
cmc
dec
mov
aam
rolb
fsubrs
and
and
xchg
leave
lock
out
je
jmp
outsl
mov
adc
subl
push
push
clc
push
push
scas
cmp
pushf
shll
jno
push
test
into
jecxz
dec
xor
pop
inc
mov
mov
js
jbe
in
sub
push
pusha
mulb
xchg
pop
test
jbe
mov
lcall
or
cmp
mov
outsl
shrb
repnz
xchg
mov
mov
jbe
push
xchg
sub
or
xor
or
fisttps
pminub
sti
cli
mov
popa
and
sub
mov
enter
pop
test
adc
sbb
outsb
push
das
sbb
in
dec
adcb
test
jbe
sbb
pop
popa
push
pop
mov
and
decl
out
push
push
pop
int
dec
in
push
xchg
mov
insl
in
jge
xor
sbb
in
mov
stos
pop
adc
icebp
pop
and
fwait
push
and
xchg
dec
jl
or
stos
push
jp
jle
cmp
std
stos
jo,pt
add
jb
mov
in
sbb
ljmp
dec
addr16
dec
jmp
sub
inc
shlb
cmp
aad
inc
or
jecxz
aaa
fmull
loop
and
test
jno
nop
int
mov
push
lahf
add
sub
mov
jo
jbe
div
mov
and
lea
outsl
dec
int
sbb
and
xchg
xor
dec
aaa
pop
mov
pop
les
in
xchg
popf
aam
mov
mov
stos
xor
pushf
fldl
mov
xor
jnp
rolb
movsl
add
loopne
mov
inc
loopne
sub
add
push
xor
xlat
push
jb
or
das
jl
xchg
cmp
dec
xchg
out
fsubr
imull
jbe
xor
outsl
rcrb
cmp
mov
or
pushf
mov
iret
loop
je
cmpsl
ds
fwait
push
or
mov
push
mov
or
cli
cmpsb
adc
jns
enter
outsb
adc
adc
cltd
or
push
mov
pop
sahf
and
iret
push
cwtl
pop
loop
test
push
jle
daa
xor
es
and
push
and
das
adc
pop
shlb
orl
lock
aad
dec
xor
inc
jmp
jmp
mov
iret
inc
imul
repnz
cmp
cmpsl
gs
pop
outsl
lea
mov
in
mov
aam
xorb
std
pop
mov
daa
in
xor
iret
xchg
dec
push
in
in
cwtl
mov
dec
aad
or
push
fmulp
push
jo
je
mov
mov
out
xor
enter
pop
aad
stc
repnz
dec
xchg
jmp
pop
rorb
push
roll
sub
inc
sbb
arpl
mov
test
lret
nop
add
in
push
xor
enter
enter
push
test
ljmp
mov
or
jg
jge
xor
and
sbb
jb,pt
daa
imul
call
sub
ret
mov
es
inc
add
shrb
scas
cmp
mov
hlt
xchg
bound
mov
mov
mov
cmp
xor
jecxz
xchg
fcomps
es
aas
sub
call
repz
popf
out
xchg
mov
mov
push
sbb
xchg
sbb
and
cmpsl
or
loop
ds
lods
add
lods
jp
mov
fwait
incb
movsb
jg
push
leave
push
xor
sub
fs
cmp
xchg
or
mov
in
and
pop
ljmp
inc
dec
jne
mov
in
div
shlb
fimull
cmp
sahf
sbb
pop
fnstsw
sbbl
xor
into
test
dec
test
nop
mov
icebp
sbb
ja
outsl
aad
xchg
imul
cmp
and
int3
push
push
jbe
xchg
cmp
add
mov
test
cli
pop
xchg
push
push
jbe
dec
mov
sbb
cli
or
ds
negb
adc
dec
movsb
pop
arpl
sbb
in
gs
jge
cltd
outsb
mov
icebp
bswap
movsb
out
sbb
mov
dec
push
jp
dec
das
jns
dec
push
lcall
add
in
sub
jle
adc
shlb
inc
dec
push
mov
enter
xorb
aam
inc
shrb
sbb
pop
push
shrb
jne
mov
into
fxch
jl
mov
fcmovnu
sbb
jne
ds
jo
cld
or
pushf
ret
icebp
push
sbb
stos
gs
fisttpll
jbe
and
out
cmp
xor
into
mov
rcrb
lret
int3
in
or
stc
lret
mov
nop
in
cli
lret
cltd
idivl
loop
fistps
sbb
aaa
jae
push
mov
dec
mov
fdiv
das
sub
test
outsl
sbb
inc
jae
lock
jge
inc
lock
xchg
addr16
xchg
jno
je
leave
dec
jno
in
dec
movsl
xchg
or
out
xchg
mov
pop
mov
adc
rorb
je
mov
lds
add
mov
rclb
je
out
mov
cmp
cmp
iret
sbb
ss
mov
mov
dec
xor
mov
clc
lret
or
xlat
cmp
int3
mov
movsb
pop
xor
mov
push
cmpsl
rcl
inc
adc
push
pushf
pop
ljmp
cmp
jmp
xchg
call
adc
pop
aaa
into
xchg
adc
pop
or
insb
out
mov
decl
out
inc
test
xorl
mov
push
sarl
int
into
jo
fs
xor
jnp
xchg
mov
lahf
call
in
adc
xchg
shrl
inc
rcll
add
push
in
mov
mov
inc
cmc
pop
pusha
push
fsts
icebp
adc
xchg
scas
pop
jge,pn
aaa
dec
ret
pop
ljmp
mov
xor
pop
mov
xor
fdivl
xor
jl
lea
mov
pusha
mov
imul
push
fs
cmc
adc
negl
cwtl
mov
shrl
xchg
insl
test
rcr
fs
clc
cmp
mov
lods
pop
cmp
jg
push
out
lahf
ja
lret
in
mov
sbb
cwtl
jns
lret
cld
inc
leave
mov
sbb
cltd
or
pop
xchg
sub
repnz
movsl
rcll
xor
mov
push
pop
jne
enter
int3
adc
call
mov
mov
mov
scas
shrb
mov
cs
outsb
stc
lea
xchg
adc
shll
lods
jge
or
addb
movsb
xchg
add
or
or
ret
xchg
add
std
inc
dec
mov
loopne
or
and
adc
push
add
pop
test
mov
cmpsl
adc
push
je
push
in
stc
shlb
mov
sbb
in
cmp
jle
mov
add
mov
and
push
xchg
jecxz
or
push
sub
mulb
xor
iret
adc
pop
dec
loope,pn
pop
xor
enter
push
inc
add
jo
sarb
fists
lods
imul
daa
clc
mov
jg
or
or
xorb
les
mov
add
iret
push
rcl
or
mov
mov
sub
lret
pop
int
add
repnz
cmp
inc
int
sub
adc
pop
cwtl
mov
dec
aas
pop
jmp
mov
test
xchg
mov
dec
dec
xor
daa
sbb
mov
cli
aas
pushf
pop
cmp
mov
and
mov
movsb
addl
test
rolb
cmpsb
int
orl
mov
sub
or
ja
insb
imul
jb
add
sub
inc
mov
mov
fnstcw
aaa
int3
int
fadds
lods
lahf
or
icebp
mov
sti
and
jg
mov
xchg
mov
adc
movw
movsb
pop
and
xchg
repnz
pop
add
and
pop
aam
mov
ds
adc
mov
add
xchg
pusha
cltd
push
pop
popa
sub
lret
or
clc
in
aas
imul
and
aad
dec
xor
xor
lcall
sbb
ja
jg
dec
sahf
sub
jg
pop
hlt
rorb
jp
stc
add
and
mov
int
mov
jl
adc
decb
movsl
push
xchg
mov
jge
das
in
test
fcomps
loope
inc
nop
insb
std
fdivr
fcompl
hlt
dec
push
push
in
sarl
adc
fisttps
nop
jmp
pop
dec
jp
or
testb
sub
push
test
fistps
test
pop
lds
jnp
stos
mov
jbe
pop
adc
mov
mov
daa
ljmp
add
dec
jb
and
xor
jge
mov
inc
mov
mov
sub
imul
jno
fisttpl
sbb
inc
jo
js
mov
dec
jl
popa
xchg
movsb
test
mov
adc
adc
sub
stc
pop
ds
into
cmp
adc
test
sbb
jmp
push
rcll
aas
adc
xor
pop
repz
popa
push
add
sbb
aas
cmp
and
jl
ljmp
cmp
xchg
mov
aad
cli
pop
mov
jg
mov
movsl
inc
fsub
pop
call
pusha
cmp
test
push
bound
fnstenv
inc
cmp
in
pop
inc
xor
adc
jecxz
insl
cmp
push
or
cmpsl
test
xlat
push
xor
dec
sti
or
or
dec
sub
adc
push
ljmp
es
imul
mov
loop
ss
pop
movsl
rol
dec
aam
ror
cmp
pop
stos
lret
test
ficomps
mov
fs
mov
dec
jmp
push
shrb
mov
cmpsb
pop
cmpsb
scas
or
aas
aaa
mov
rorb
xor
add
jb
iret
inc
int
and
xchg
mov
stc
dec
sbb
xor
inc
sub
mov
in
xor
push
repnz
cltd
cmc
adcl
or
stos
into
imul
dec
and
and
fwait
mov
scas
sbb
nop
call
push
inc
or
pop
jno
push
sub
repz
lcall
jnp
loopne
xchg
dec
jl
lret
and
xchg
sbb
fdivrl
push
pop
xor
adc
es
insl
dec
push
aad
xchg
push
mov
push
jno
pop
cmp
pop
jp
cld
and
mov
and
movsl
lods
ljmp
aad
sti
mov
sti
lea
hlt
das
cmpsb
aas
mov
cmpsb
andb
in
mov
loope
fimuls
invd
aaa
out
and
mov
mov
push
adc
cmp
pop
lock
sub
arpl
stos
or
iret
jbe
das
iret
in
pop
add
pop
xchg
mov
loope
jb
pop
out
push
testb
outsb
icebp
mov
andb
pusha
std
jge
test
aaa
dec
xor
int3
ror
or
sub
jl
xchg
push
xor
mov
test
jbe
add
mov
push
mov
xchg
jmp
dec
jg
shll
ja
fbld
xchg
movsl
sub
pop
rorl
xlat
xchg
cwtl
pop
lret
inc
out
mov
jbe
out
fimuls
dec
mov
inc
popf
sbb
cmp
sahf
in
popa
sub
test
pop
repz
hlt
pop
xor
fwait
pop
lds
addr16
jnp
jmp
fadds
fiaddl
sbb
repz
and
add
or
outsb
mov
sbb
repnz
adc
pusha
push
jnp
stc
add
lock
mov
addb
ds
and
imul
pop
inc
stc
sbb
dec
mov
add
and
scas
mov
rorb
cld
sbb
add
add
cmp
outsl
push
or
int3
xchg
sub
repz
clc
notl
es
pop
out
cmp
or
insl
mov
mov
jnp
sub
popa
dec
scas
lods
adc
out
stos
mov
inc
cmp
xor
les
daa
loop
mov
fs
xor
jl
mov
divl
pop
inc
dec
lock
cmp
mov
psubusb
sbb
jl
pop
sbb
bsf
lea
fcomip
cmc
xor
mov
outsb
aam
js
push
mov
inc
loope
sbbb
imul
sarl
cltd
fsubs
xor
dec
ja
adc
sti
cmp
xor
pop
mov
insb
jnp
lds
rcrl
stos
ficompl
aas
xor
sub
cmpsb
mov
out
and
push
add
lods
rclb
dec
jecxz
push
cli
cmpsb
or
movsb
xor
or
aad
movsb
sub
xor
xchg
sub
fwait
adc
aad
sub
fldenv
inc
push
sub
shll
sbb
loope
inc
xor
dec
cmp
mov
xchg
lea
sub
iret
movl
fnstsw
jle
aam
ret
push
push
mov
out
popa
and
out
das
jbe
popf
or
inc
movsl
lds
arpl
test
ret
lahf
fidivs
out
pop
mov
lock
movsl
jecxz
sub
pusha
inc
or
adc
cmp
sub
std
rcr
filds
push
nop
mov
inc
rcll
fdiv
pop
sbb
loope
ss
outsb
les
sbb
test
adc
imul
dec
xor
xlat
andb
and
jl
sbb
xchg
add
fadds
or
dec
daa
aas
xor
push
push
cmp
jp
xor
dec
enter
and
cpuid
fldcw
in
sbb
adc
add
inc
addb
push
nop
pop
test
lahf
addr16
jae
inc
push
adc
fsubrl
cmpsl
or
mov
xor
popa
mov
enter
mov
cmpsl
nop
sbb
xor
add
xchg
mov
repnz
in
in
mov
packuswb
mov
adc
imul
xchg
mov
jb
jnp
fcmovbe
cmpsb
sti
cmpsl
mov
cmp
cmp
fistl
sbb
and
out
add
dec
or
mov
nop
push
jnp
sub
push
adc
fildl
iret
loopne
lds
inc
loope
add
jb
lea
mull
add
rcrl
out
popa
nopl
dec
loope
dec
mov
push
leave
sahf
and
xor
rcrl
into
roll
adc
add
popf
cmp
xlat
inc
je
pop
std
xorl
mov
addb
pop
loope
push
inc
or
sub
cmpsl
and
stc
imul
push
mov
pop
push
push
add
xchg
push
sub
pop
push
pop
mov
xchg
xor
cmp
dec
or
sbb
scas
js
and
cmpsb
adc
in
in
pop
outsb
dec
fbld
fs
sbb
std
add
jecxz
mov
and
in
pop
mov
test
jp
jns
mov
pop
jle
hlt
arpl
out
mov
in
rcrb
push
xchg
add
out
mov
pop
out
scas
dec
sbb
mov
lcall
sbb
lds
or
pop
leave
cmpsb
mov
andb
scas
icebp
sbb
mov
jnp
jns
xchg
ffreep
movsl
enter
lods
cs
or
les
les
mov
mov
xchg
inc
mov
lea
mov
dec
adc
shlb
dec
xchg
cmpsl
fnstcw
jmp
cwtl
dec
ret
mov
enter
pushf
fdivp
dec
fsubrl
negb
mov
sti
ret
push
call
es
lock
and
dec
and
mov
dec
mov
fisubl
fcom
in
loopne
lahf
cmpsl
cltd
jecxz
fldenv
sbb
adc
adc
cld
insb
shll
lret
shll
cltd
mov
aam
lea
shll
sub
stos
push
xor
in
pop
andb
lret
cmp
sub
loope
loop
push
push
imul
mov
cmpsb
popl
js
inc
cmp
push
int
cmp
jnp
repz
out
jns
add
popf
inc
jl
inc
cmpsb
cmp
or
orl
test
adc
xorl
and
pop
inc
add
aam
insb
mov
push
and
jo
flds
fs
inc
push
pop
and
push
inc
mov
jp
or
jno
bound
sti
lcall
jae
mov
inc
push
test
or
and
pusha
std
pusha
sbb
mov
mov
out
push
fwait
jmp
xchg
xchg
dec
fstpl
xor
xor
xor
and
add
loope
inc
clc
xor
lret
pop
repz
sbb
js
pop
mov
add
sqrtpd
xlat
adc
or
xchg
loope
dec
es
and
jl
push
ja
stos
jmp
mov
sub
push
xor
sub
inc
stos
lret
imul
dec
fsubl
dec
mov
lods
repnz
push
dec
push
imul
or
pop
inc
and
push
mov
icebp
inc
inc
aaa
mov
xchg
mov
inc
jle
jbe
and
push
cltd
xor
insl
xchg
fbld
roll
mov
scas
mov
call
stc
cmp
xchg
lret
and
mov
js
aam
xor
cltd
data16
dec
imul
popa
jmp
cmp
push
push
daa
push
mov
es
pop
add
in
ret
and
sbb
mov
xor
fistl
aaa
xlat
cmp
js
lret
fcom
repnz
lret
and
mov
xchg
sarl
mov
ficoml
mov
emms
adc
adc
adc
add
xchg
push
add
out
dec
push
mov
sete
mov
mov
jae
repz
push
push
jne
adc
aam
mov
push
lret
gs
adc
lods
loopne
lret
adc
cmp
out
add
arpl
stos
out
cmpsb
scas
xchg
mov
mov
jecxz
popa
test
leave
cmp
mov
mov
sbb
mov
xchg
mov
mov
pusha
dec
sub
dec
xor
xor
xabort
mulb
adc
sbbl
xchg
fadd
icebp
cmp
test
or
mov
sbb
and
mov
lret
push
loopne
add
xchg
sahf
sub
ret
std
aaa
addr16
xchg
mov
mov
pop
cmp
mov
nop
fcomps
jp
mov
ss
push
mov
cli
imul
pop
call
cli
inc
cmp
scas
xchg
add
jnp
daa
imul
xchg
and
cmp
iret
sub
inc
out
iret
movb
insb
add
sbbb
orl
fistps
adc
xchg
sub
imul
mov
leave
test
movsb
xor
or
sbb
lahf
sub
jg
je
ret
xchg
or
pop
cli
dec
stc
outsl
stc
movb
notb
lahf
iret
fs
mov
push
scas
cli
inc
rcrb
daa
or
imul
ljmp
ja
sub
in
and
push
sbb
xor
add
cld
inc
mov
xor
cs
add
lea
and
ret
bnd
lret
cmp
popa
mov
nop
lahf
and
xor
lods
repnz
js
dec
xchg
je
push
scas
aam
cs
push
mov
jg
push
and
pusha
sub
xchg
sbb
jecxz
sbb
jae
fstpt
and
mov
jecxz
int3
cltd
inc
pop
push
sar
push
cmpsb
clc
sub
adc
cmpsb
pop
in
add
jg
jbe
les
xor
xor
push
pop
adc
adc
cmpl
fwait
insl
jecxz
jle
fs
in
inc
push
or
cli
mov
andl
movsb
dec
jecxz
adc
mov
lret
lods
jne
aas
clc
mov
push
sbb
data16
adc
arpl
fwait
mov
or
jb
jae
sbb
mov
adc
sbb
sbb
mov
aas
jno
push
test
imul
popf
add
sub
pop
enter
jl
ret
enter
daa
push
fwait
or
stos
jbe
fistps
sub
test
fisttps
adc
les
test
xor
into
fisttpl
add
out
xor
adc
sahf
es
jne
testb
push
shrb
sbb
scas
dec
decb
cwtl
cmp
int3
inc
vmwrite
pop
fdivrl
fdivl
mov
dec
and
push
mov
inc
les
or
scas
cs
mov
xor
add
xor
jne
orl
aad
pop
push
mov
and
dec
pop
cmpsb
bound
es
sbb
jns
lds
out
jl
scas
push
or
pop
inc
test
in
xor
pop
adc
pop
rorb
sbb
mov
fsubrl
pop
sub
adc
pop
xor
outsl
clc
xor
js
mov
push
cmp
inc
mov
push
mov
cmp
aad
aas
and
xchg
adc
sub
fidivrs
les
out
test
adc
cmc
cld
fmull
jp
data16
or
inc
xchg
mov
stc
daa
xor
loope
mov
addr16
jecxz
in
call
popf
in
arpl
xchg
sbb
outsl
mov
sub
push
dec
push
mov
mov
inc
mov
jae
rolb
sbb
insb
aam
scas
or
dec
or
adcl
mov
push
inc
jg
xor
mov
jg
inc
arpl
fists
and
insl
xchg
outsb
cmpsl
shrl
bound
jns
rcrl
xchg
cmp
xchg
enter
mov
call
mov
cmp
or
mov
or
fstpt
push
cmp
xchg
push
test
fstl
or
xor
aam
jo
hlt
and
mov
add
or
and
fisttps
jne
jecxz
ljmp
popa
xchg
push
in
add
push
insb
test
pop
sbb
adc
movsb
xchg
mov
or
mov
xor
add
cld
mov
pop
call
bound
arpl
sub
adc
mov
into
shl
out
dec
ljmp
push
ljmp
fadds
int3
and
mov
fdiv
outsb
popf
mov
ss
fistl
mov
sub
mov
xchg
xor
xor
pop
jae
lods
inc
imul
mov
xchg
dec
and
lahf
aaa
lcall
add
mov
in
fidivrs
in
stos
in
mov
pusha
dec
push
jb
xor
mov
cmp
jbe
jae
xor
mov
ror
push
dec
fcomps
or
out
mov
ret
mov
or
test
sahf
cmp
dec
adc
aaa
or
sub
jg
cmp
adc
lret
push
sarb
dec
lods
pop
mov
mov
sub
fldenv
mov
mov
push
mov
pop
dec
or
fisttps
xchg
cmpsl
roll
inc
jno
jbe
mov
pop
mov
hlt
adc
cmp
cs
xchg
adc
gs
sub
aam
and
mov
sub
popa
pusha
inc
sub
nop
and
lock
loopne
pop
xchg
cwtl
pop
frndint
imul
jmp
pop
add
push
sub
lods
stc
inc
dec
cli
fscale
cld
adc
cltd
add
fbld
xchg
lock
fwait
int3
push
mov
pop
lds
fisttpl
fadds
sub
jnp
or
sahf
stc
setl
cmpsb
dec
ficompl
in
cmp
pop
sub
mov
leave
stos
cltd
arpl
jecxz
je
pop
mov
outsl
mov
shll
or
rorb
mov
add
jne
xor
jmp
sti
lods
sub
push
sbb
cwtl
sub
cwtl
fisttpl
jno
jl
or
inc
or
and
adc
cmp
mov
add
mov
sbb
xor
ror
mov
out
mov
and
inc
pop
aam
xor
sub
jmp
hlt
push
jge
pop
adc
dec
movsl
mov
jne,pt
adc
lret
movsl
add
jno
jecxz,pn
pop
in
xor
mov
ds
mov
mov
repz
mov
loopne
lahf
cmp
and
xor
xchg
dec
cmpsb
mov
sub
lret
lds
jno
and
ja
jno
scas
in
out
mov
sub
ret
xchg
add
jmp
cmpsl
mov
adc
dec
stos
add
mov
xchg
jge
cmc
sub
mov
and
push
paddq
mov
inc
or
ficoml
movsl
jge
std
push
dec
adc
dec
cmp
out
mov
lds
sub
pushf
int3
insl
mov
lahf
mov
in
or
in
loop
mov
xchg
push
les
mov
fadds
ja
push
cltd
arpl
movsl
sub
in
sbb
adc
scas
ds
lret
enter
xchg
ret
lea
cmpsb
daa
cli
or
lcall
push
cmp
jno
fdivr
rcrb
repz
cld
fs
sub
adc
inc
mov
ss
cmp
cmp
xchg
or
int
pop
sbbl
popa
es
sbb
sub
jne
xor
ljmp
sub
mov
jp
pop
ret
xchg
push
dec
pushf
dec
lock
fcmove
daa
dec
aas
daa
ret
pop
push
pop
stos
insl
adc
repz
stc
or
and
cli
jp
call
fnsave
jns
mov
sub
sub
imul
cltd
mov
int3
push
pop
mov
es
xchg
jmp
popa
push
mov
push
inc
mov
inc
dec
jl
popa
mov
mov
jbe
push
sbb
cmp
lock
and
xchg
dec
fistpll
or
cmp
inc
sbb
pop
in
cli
fdivs
lcall
dec
fidivrl
xchg
mov
in
mov
repz
rcr
ds
jecxz
mov
shrl
je
xor
fdivl
insl
aas
iret
sub
adcl
inc
out
mov
mov
mov
or
outsb
es
std
xchg
sbbl
cmc
pop
cmp
aad
push
cli
lds
stc
jns
fwait
enter
fnstsw
jns
jp
sbb
pop
jnp
cmp
test
push
hlt
mov
lods
pop
add
popa
je
push
mov
lahf
fimuls
mov
jmp
pop
and
push
arpl
lret
xchg
cmp
ja,pn
xchg
mov
jp
sub
cmp
pop
out
mov
push
nop
xchg
pushl
cmp
rorl
cmp
add
add
in
dec
stc
loop
sub
out
pop
inc
push
out
jne
jbe
pop
aad
ficoml
add
inc
lods
and
sub
filds
js
cmpsl
mov
insl
or
fs
jle
jne
fwait
or
push
mov
jg
int3
movl
and
lea
test
inc
mov
push
lea
mov
out
ret
xor
roll
int3
outsl
lahf
aas
jo
jo
push
loope
cmp
adc
inc
dec
sub
divb
popa
add
jno
mov
ljmp
mov
jl
pop
or
loopne
xchg
xchg
lret
loop
ljmp
adc
pop
or
adc
adc
inc
push
adc
pop
jl
mov
outsl
fwait
push
push
pop
scas
jb
cwtl
mov
cmp
pop
add
jg
cmp
out
cmp
loope
stc
and
sub
mov
fcoms
push
jge
sti
sub
stos
cltd
daa
or
adc
out
shll
gs
mov
jp
loope
dec
jnp
stos
imul
push
sub
and
mov
int
adcb
xchg
sbb
pop
cmp
mov
pop
movsl
aas
and
xchg
movsb
orb
into
sbbb
pop
lahf
faddp
dec
cs
pop
add
push
mov
test
rol
aaa
dec
stos
repnz
sbb
mov
lcall
rclb
add
aas
mov
adc
mov
ds
jnp
lock
cmove
xchg
rol
jb
shll
adc
push
imul
test
sbb
dec
mov
ja
cmpsl
ret
testl
test
inc
in
or
dec
fdivrl
stc
dec
test
push
in
lcall
mov
inc
iret
out
cli
jae
or
cmpsl
addr16
dec
mov
xchg
dec
xor
mov
inc
sbb
ret
pop
out
gs
test
dec
call
mov
mov
add
test
scas
pop
loope
aad
xchg
and
jb
pop
add
movsb
lahf
stc
xor
mov
jbe
mov
mov
sti
stos
ss
lret
lods
mov
mov
sti
xor
mov
mov
xchg
pop
jb
add
in
test
lret
inc
cmp
xchg
dec
cwtl
xor
test
out
jns
adc
mov
testb
or
cmc
in
mov
cs
shll
adc
dec
in
bound
test
jmp
jne
adc
popa
mov
ds
push
cmc
pop
mov
mov
mov
xchg
stos
hlt
adc
or
dec
outsl
mov
outsb
mov
xchg
cmp
push
push
test
mov
int
in
adc
arpl
ja
add
push
leave
out
aad
sub
in
mov
dec
cld
dec
imulb
out
imul
adc
push
js
pusha
mov
je
or
loope
xchg
je
mov
pop
pop
int3
jo
or
in
pop
mov
int
call
into
in
test
not
sbb
push
lahf
dec
movlps
or
jbe
inc
test
testb
adc
sahf
mov
mov
sbb
or
mov
lods
insb
in
sbb
arpl
mov
movsb
icebp
adc
dec
mov
je
mov
dec
fs
leave
push
aam
sbb
pop
out
hlt
pop
inc
sub
mov
adc
xor
xchg
push
fxch
fdivr
fwait
mov
outsb
std
add
pop
dec
subl
lret
fs
rolb
cmpsb
cmc
pop
cld
aam
in
imul
pop
scas
dec
jo
push
xchg
ret
loopne
xchg
mov
in
xchg
add
ss
movsb
xor
jns
sbb
mov
jbe
std
mov
inc
cmp
adc
in
xchg
dec
add
imul
push
sub
cmp
in
jns
loopne
mov
insb
loope
je
xor
hlt
add
add
xor
xor
ja
loop
xchg
cli
aaa
jne
decb
pop
dec
mov
inc
or
cmp
dec
push
arpl
daa
fs
add
xor
lahf
cmpsb
jns
in
mov
rorl
cmpsl
jae
push
sbb
test
cmp
inc
mov
imul
pop
in
fistl
adc
shll
push
addr16
in
mov
movsb
lret
data16
sub
mov
add
pop
arpl
fimull
jbe
jge
xor
inc
xchg
dec
js
iret
adc
push
cld
lock
arpl
xlat
xchg
xchg
arpl
add
sbb
lcall
xchg
push
pop
subb
addb
mov
nop
sub
bound
int
cld
aam
icebp
mov
pop
cli
mov
pop
sub
ja
adc
mov
test
xlat
push
mov
push
shlb
jns
xor
cmp
jo
dec
shr
adc
mov
les
add
outsl
mov
popa
inc
mov
cmp
mov
insl
ficompl
cld
mov
loopne
daa
jno
adc
enter
cld
cwtl
jl
gs
scas
enter
sti
inc
or
mov
dec
lods
cmp
lret
sbb
cmp
push
mov
and
in
rorl
push
popf
mov
mov
cmc
cmp
mov
xchg
mov
jnp
cmp
pop
jnp
sbb
inc
jns
mov
pop
cltd
or
inc
pusha
stos
jg
cmp
xchg
rcrl
mov
sub
sub
fwait
cli
push
lret
cld
cld
sarl
jmp
xchg
jp
movsb
aaa
xchg
stos
inc
inc
movsl
cmp
fbld
enter
cmp
jae
ja
lods
rorb
call
lret
daa
mov
pop
ss
lods
or
push
add
sarb
incb
mov
mov
push
loop
mov
pop
cmp
inc
or
adc
ljmp
adc
cld
int3
pusha
out
cltd
dec
jle
or
xor
pushf
outsb
incl
lea
xchg
mov
inc
xorb
inc
cmp
dec
lret
cli
sbb
jmp
lahf
jns
cmp
fnstcw
stos
and
xor
mov
fstp
sub
outsb
ljmp
inc
and
dec
adc
cmp
add
repz
rolb
cli
lea
and
mov
and
xchg
fucomi
in
insb
clc
mov
fstpl
mov
popa
mov
jb
aad
insl
int3
xchg
push
inc
fsubrs
add
into
adc
repz
test
push
loopne
bnd
fs
fsubrs
push
subb
addb
inc
arpl
pop
sub
lods
xchg
es
les
jbe
shr
orb
daa
xchg
lods
cli
sbb
sub
int
cmp
xor
add
js
sub
mov
inc
ficoml
test
sti
cltd
dec
mov
in
jmp
sub
xchg
je
daa
sub
sbb
push
push
xor
ficomps
std
xor
jo
lahf
rcll
nop
lods
mov
sbb
data16
jl
add
sub
sbb
adc
ds
mov
fadds
dec
dec
jmp
test
jns
mov
push
sbb
stc
movsl
fistl
mov
loop
xchg
in
mov
jle
outsl
je
adc
cmpsl
and
clc
mov
ret
push
fidivrs
daa
sbb
pop
leave
inc
sbb
xchg
mov
mov
sarl
push
negl
lods
cmp
call
in
inc
adc
dec
inc
clc
insl
mov
sub
cmp
dec
sub
loop
pop
cmpsb
dec
sbb
sub
xor
mov
push
loope
cmp
sub
and
nop
clc
xchg
mov
stc
and
or
sbb
cli
jmp
push
data16
scas
cmp
mov
mov
push
or
sbb
mov
adc
add
imul
push
aad
pop
dec
fstpl
test
lods
pop
imul
mov
ret
sbb
dec
xor
mov
out
cli
cmp
test
inc
push
dec
cmp
and
divl
mov
std
jmp
fcomp
push
xor
ret
xchg
mov
ficomps
ret
scas
pop
cmp
inc
cmpb
cmpsb
adc
inc
test
lock
outsb
push
lret
jmp
es
xchg
fstpl
subl
mov
push
mov
adc
sub
xor
in
jl
pop
dec
dec
loop
mov
dec
out
lret
xor
in
jnp
mov
push
inc
fisubrs
popf
imulb
outsb
outsl
andl
push
jns
dec
out
pushf
xor
into
sti
ss
mov
cli
mov
addr16
aaa
sbb
lret
fdivr
ret
pop
xchg
iret
addl
cmp
data16
dec
mov
bound
fs
and
cwtl
lret
or
bnd
mov
cmpsb
jle,pt
xchg
jp
insb
mov
addr16
pop
push
insl
outsl
cli
jmp
bnd
bound
xchg
mov
stos
xchg
and
dec
sub
fdivp
xlat
and
stos
insl
push
sar
sbb
ss
shl
jae
pop
mov
clc
loopne
push
rcrb
cmpsb
mov
mov
push
fldenv
pop
adc
jle
fwait
in
shrl
push
cmc
ret
jnp
ja
push
pop
sbb
jg
and
fstl
cmp
aad
mov
scas
xchg
fwait
fwait
or
int
loopne
cmpsb
addr16
xor
das
jl
mov
add
hlt
pop
or
pusha
sbb
push
clc
ja
dec
test
lret
xchg
dec
mov
outsl
outsb
scas
daa
ret
in
and
cmp
lcall
pop
leave
imull
pop
enter
mov
ja
les
bound
lds
sub
xor
jmp
push
pop
sub
bound
in
mov
mov
les
jo
aam
and
mov
xchg
data16
movsb
mov
pop
daa
adc
jns
insl
rcrb
pusha
enter
out
cmc
jb
jge
pop
out
cli
pop
mov
cli
leave
jle
xor
insl
iret
inc
test
int
idivb
jbe
dec
fnstcw
xlat
push
pop
jo
adc
jecxz
xchg
xchg
lahf
ss
fnstenv
jp
pop
addr16
pushf
stos
fadds
movsb
jg
xchg
addr16
idivl
int3
sub
and
sub
loop
divl
leave
and
arpl
mov
xchg
dec
cmp
popf
aam
test
pop
sti
test
sub
out
stos
cmpsb
mov
cmp
jno
inc
aad
jnp
sbb
xchg
in
stc
pop
insb
jmp
hlt
pop
pop
sbb
imul
in
and
mov
std
hlt
scas
movsb
push
lcall
or
in
push
inc
cmpl
test
jecxz
jecxz
dec
mov
and
sub
shrb
jg
clc
or
adc
mov
jp
imul
out
jns
fld
sbb
les
addr16
and
xchg
rol
adc
std
fwait
mov
loop
xor
mov
ret
xchg
jo
test
sub
cmc
mov
hlt
sbb
fs
mov
inc
je
sub
fsts
stos
mov
pop
test
fldenv
jmp
arpl
lea
add
add
stos
push
mov
xor
popf
mov
or
inc
cmp
out
xchg
xchg
and
mov
mov
mov
jp
in
repz
jge
xlat
ret
je
cmp
dec
out
jp
dec
and
mov
or
push
xor
imul
pop
dec
xor
pop
sahf
es
fwait
cmp
outsl
push
xlat
fs
add
out
jmp
loope
shlb
sbb
sub
es
and
pushf
jmp
int
jmp
adc
push
popa
mov
mov
ret
outsb
pop
xchg
xor
ret
xchg
aas
adc
xor
xchg
lods
xchg
in
ucomiss
pop
in
and
pop
movsb
xor
inc
add
mov
leave
push
cmpsb
enter
into
inc
popf
in
push
sub
lahf
lock
mov
call
imul
mov
and
push
pop
js
adc
ss
mov
and
sbbl
inc
cmc
jbe
xchg
notb
pop
jl
fcomip
push
es
xchg
call
or
iret
jle
leave
movsl
mov
jp
mov
cltd
sar
add
push
inc
fs
cwtl
or
ss
aad
push
es
loope
push
ja
pop
clc
jns
cmp
inc
mov
fidivrs
rcrl
inc
aas
mov
add
sbb
ret
gs
and
aam
shlb
icebp
dec
movsb
cmp
movsl
fmuls
fwait
mov
or
ror
sub
pop
pusha
test
sub
add
push
movsb
in
mov
add
pop
push
mov
cmp
xchg
or
test
imul
sbb
mov
lcall
xchg
inc
xchg
js
xchg
jbe
dec
leave
sahf
dec
cmp
lds
jl
iret
jmp
rol
mov
inc
mov
xlat
mov
jbe
cltd
add
in
in
je
mov
out
lcall
xchg
mov
int
int3
leave
imul
push
mov
inc
xchg
add
jg
fstpt
xchg
aad
fiaddl
sub
sub
jle
in
mov
jo
adc
xor
xor
push
cltd
aad
stos
data16
arpl
xchg
jge
aas
mov
cmp
pushf
jbe
pop
bound
aas
add
add
fcompl
mul
jae
ss
cmp
add
addl
dec
imul
jge
outsl
xor
add
push
add
mov
out
and
pop
cmp
push
lahf
push
lods
fwait
cmp
inc
gs
push
hlt
sub
jle
outsl
pop
mov
push
test
test
imul
jmp
add
sbb
xchg
inc
pop
and
jnp
jbe
jns
jnp
dec
outsl
mov
insl
xchg
jmp
loop
out
xor
add
test
mov
jne
pop
aaa
push
arpl
mov
ds
loopne
inc
imul
sub
xchg
mov
aaa
jns
mov
jge
pop
popa
jle
lahf
outsb
pusha
push
push
scas
mov
adc
push
jae
push
js
mov
cld
lea
nop
ja
mov
mov
adc
add
outsl
pusha
inc
fnstcw
sbb
mov
lret
sbb
jecxz
pop
adc
sub
cld
mov
fistps
and
or
test
lahf
shl
inc
mov
daa
adc
cmp
push
xor
shll
incl
in
loop
flds
inc
in
pushf
xorl
loopne
addr16
rcrl
test
ds
out
xor
neg
movsl
mov
and
popf
lcall
sub
stos
mov
cmpsb
test
sub
test
js
notb
hlt
mov
push
data16
popf
or
sub
scas
sbb
xor
icebp
push
add
mov
jo
jnp
push
fwait
xchg
adc
lock
pushf
push
inc
jmp
xor
movsb
or
test
pop
movb
jg
movsb
dec
popa
dec
les
in
js
hlt
xchg
xchg
adc
mov
outsl
sbb
xchg
fstpl
popf
xlat
jb
cmc
std
fneni(8087
outsl
test
push
test
imul
fbstp
fidivrs
dec
fstl
repnz
int3
psadbw
rcl
sub
xchg
xor
and
pop
add
cld
and
mov
popa
push
pop
inc
sbb
scas
mov
cwtl
xorl
iret
shlb
lret
xchg
lret
scas
repnz
shlb
ret
push
and
out
out
sbb
jo
and
icebp
adc
xor
fldl
test
into
out
scas
mull
push
lods
scas
lea
jo
int3
adcb
inc
xchg
sbb
mov
aad
mov
mov
dec
xor
fwait
or
pop
mov
dec
xor
ret
sub
fstp
rcrb
xor
enter
jge
fs
mov
fdivl
jno
scas
fiadds
addb
add
shr
pop
in
loope
or
fdivr
jnp
sbb
add
outsl
jge
xchg
sbb
pop
push
aad
mov
js
int3
cmpsb
ljmp
leave
mov
daa
pop
dec
fstpl
jbe
dec
sub
xor
jnp
loopne
or
sub
mov
push
lods
fstpt
pop
shl
ds
or
scas
int
and
fdivl
jl
mov
loop
iret
push
pop
adc
pop
dec
push
movsb
shl
dec
cltd
mov
lock
sub
and
outsb
inc
sbb
out
inc
out
xor
and
shrb
test
cmp
dec
loopne
aaa
and
sti
je
fucom
in
mov
mov
push
or
fadd
or
inc
add
nop
lds
pop
push
lea
lcall
incl
out
inc
jmp
pop
adc
pop
inc
xchg
sbb
jo
fs
stos
roll
sbb
inc
cmpps
mov
sbb
dec
das
jo
push
outsl
das
push
push
jg
outsl
arpl
in
scas
add
cwtl
inc
outsl
pushf
jo
movsb
aas
xchg
cmp
jbe
mov
out
mov
pop
sbb
adc
movsl
int3
xchg
pop
push
sub
xor
repnz
les
cwtl
test
mov
ds
dec
pop
inc
das
imul
mov
mov
dec
js
sub
rclb
pop
sbb
add
xchg
dec
test
ret
shrb
les
out
sbb
cmp
jmp
pop
push
addr16
mov
inc
xor
fmuls
les
dec
mov
xchg
xor
orl
add
push
pop
mov
loope
inc
adc
test
in
sbb
push
into
xor
sub
insl
inc
cmp
sti
mov
adc
out
lcall
sarl
add
std
out
push
sbb
ficoml
pop
mov
lods
fucom
and
out
outsb
or
pop
scas
in
icebp
xor
jb
movb
jo
sbb
sub
test
nop
xor
stos
ss
lock
inc
std
xor
pop
sahf
xchg
icebp
aam
inc
ret
sub
mov
sbb
testb
lock
adc
ret
push
inc
in
mov
lret
xor
ror
push
xor
mov
rcll
iret
aam
mov
push
jle
and
adc
test
movsb
test
fimull
jl
push
pop
sbb
xor
mov
lahf
mov
push
test
sbb
inc
jg
pop
inc
xchg
xchg
pop
sub
std
outsl
mov
inc
movsl
cld
jp
aad
mov
mov
or
xchg
jecxz
inc
cmp
lds
in
push
add
cmc
in
icebp
xchg
pop
lds
or
cs
push
rclb
int3
push
sbbb
and
bound
inc
loope
xchg
xor
imul
push
fnstcw
inc
jo
pop
cld
imul
adc
adc
call
out
pop
in
pop
andb
pop
sub
sti
pop
jo
jb
dec
mov
and
mov
cmp
mov
mov
test
add
jl
jl
mov
hlt
cmp
sarb
adc
fists
pop
inc
ss
sbb
xchg
fbstp
and
les
sub
dec
cmpsl
mov
ret
repz
cmp
jae,pn
sbb
inc
mov
adc
pop
xchg
xchg
lret
test
js
mov
test
mov
sub
push
push
ljmp
inc
cmp
mov
int
lcall
lret
and
cmp
or
cwtl
lea
push
testb
xor
sub
movsl
imull
outsl
int3
xor
xor
pop
adc
mov
daa
mov
insb
mov
sbb
sub
jae
nop
inc
push
xor
stos
stos
or
daa
je
fmull
add
subl
insl
pop
lret
lock
mov
jecxz
sub
insl
mov
mov
in
insb
orl
xchg
push
cmp
dec
je
out
mov
rclb
mov
xchg
push
outsl
cltd
jl
fs
mov
call
stos
mov
aaa
push
loope
pop
sbb
adc
push
fidivrl
push
push
js
xchg
int
rolb
jle
jnp
xchg
ret
test
jl
push
imul
int3
in
popa
inc
adc
pushf
aas
aad
add
sub
ss
mov
fisttpll
add
push
jmp
and
lds
dec
cmpl
fwait
loope
pop
sbb
pop
in
enter
arpl
add
nop
pop
jae
call
lock
xorl
aam
mov
lea
popa
xchg
mov
add
xchg
lods
jl
push
cmp
xor
cmp
xor
mov
mov
ds
dec
sub
arpl
lock
je
loope
lods
test
out
sti
ficoms
jo
lds
cltd
nop
jle
lret
xchg
out
adc
mov
pushf
jle
xor
mov
insb
ficoml
jns
dec
dec
roll
js
incl
mov
pop
cmpsl
mov
or
js
adc
imul
cmp
enter
or
imul
jg
dec
outsb
scas
sbb
test
lea
mov
ds
shr
cmp
addr16
aaa
mov
mov
paddsw
xor
xor
add
ficomps
clc
sahf
pop
out
push
xor
mov
pop
jl
leave
push
add
rclb
push
in
xchg
pmulhw
icebp
arpl
lret
loope
inc
mov
mov
sub
mov
rol
mov
cmpsb
pop
movsb
fldl
pop
mov
repnz
xlat
jb
add
dec
inc
pop
nop
jae
fs
popf
loope
pop
add
sub
mov
shl
in
fsubr
mov
adc
push
cli
inc
pop
filds
in
lods
cwtl
pop
imul
fcomps
outsl
lret
and
ss
fucom
scas
in
das
sbb
mov
cs
pop
jae
inc
lds
sahf
jb
fdivrl
add
bound
and
hlt
or
push
movsb
cmc
mov
call
clc
leave
out
mov
or
aam
in
fists
repz
jg
movsb
insl
lea
pop
xchg
adc
and
sub
les
pop
dec
jb
gs
fsubrs
out
fcoml
cmp
in
nop
mov
mov
mov
out
push
jmp
dec
jb
push
iret
lret
cmp
mov
aad
pop
clc
sub
test
lcall
pop
push
pusha
aaa
sub
shrl
sub
in
in
xchg
in
mov
test
jg
mov
pop
pop
xor
pop
fnsave
dec
lods
imul
cld
jg
mov
xlat
inc
jl
faddp
cmp
mov
sub
jge
in
into
test
nop
cltd
leave
mov
xchg
incl
push
roll
ja
test
xchg
adc
mov
mov
cs
js
sub
cmp
add
clc
std
xchg
jmp
add
jle
mov
add
mov
cs
bound
adc
scas
pop
mov
enter
sti
out
ss
stos
fcompl
movsb
fnstenv
lods
aas
xchg
imul
and
add
in
std
push
dec
popl
jne
iret
inc
das
push
lret
mov
or
pusha
pop
pop
outsl
movsb
leave
sti
dec
xlat
sub
shrb
test
sbb
jle
pop
cli
cmp
inc
add
out
movsb
sbb
or
push
mov
xchg
mov
mov
js
outsb
xchg
or
and
jae
test
sbb
stos
mov
fsubrs
xor
stos
mov
mov
shll
rorb
scas
mov
jmp
xor
in
xor
dec
lret
pop
leave
sahf
lds
and
test
loopne
gs
push
pop
ret
push
pop
in
or
aas
out
aam
movb
aam
xchg
leave
mov
dec
test
mov
and
and
aam
add
cmpl
lea
jnp
xchg
call
jge
test
out
mov
jp
in
add
cltd
adc
and
dec
imul
sbb
jne
pop
dec
stos
hlt
pop
outsl
nop
xchg
testb
sti
mov
mov
mov
outsl
imul
sub
cwtl
int
or
mov
inc
xor
sub
fidivrs
or
andl
xor
mov
mov
cmpsb
subb
add
sub
jl
gs
sti
mov
dec
fcmovne
sub
and
lahf
shrb
mov
xor
and
pop
xor
and
je
or
dec
and
inc
sbb
in
sub
fistpll
mull
xor
lcall
cmp
scas
ljmp
mov
addr16
notl
or
jg
mov
sar
loopne
jno
push
je
ror
mov
push
loope
mov
push
repnz
xchg
loop
adc
push
addr16
pop
sbb
stos
ja
or
lea
adc
xor
sbb
dec
ret
daa
hlt
ficompl
test
popa
cmp
push
stos
mov
je
out
add
es
cmc
cmp
testl
sub
pop
jne
ret
sbb
inc
test
push
mov
cmp
sbb
sub
mov
adc
cmp
cmpsl
rorb
mov
in
mov
sub
in
cmp
jp
pop
mov
popf
dec
test
subl
dec
xchg
test
mov
xchg
in
pushf
xchg
push
jbe
out
outsl
lods
xor
cmpsb
out
pop
loope
mov
pop
cmpsl
jge
mov
aam
mov
ja
jg
scas
mov
inc
test
xchg
scas
jg
outsb
jno
andb
mov
push
and
inc
in
mov
lea
xchg
lea
fiaddl
js
insb
jle
aam
shll
frstor
push
and
out
inc
mov
les
arpl
mov
in
jo
int
pusha
xchg
sarl
ss
inc
fs
mov
outsb
repnz
push
mov
int
mov
jl
test
add
mov
jae
pop
out
cmp
loop
loop
jbe
mov
xchg
jl
lcall
mov
inc
daa
out
aaa
leave
ljmp
mov
shr
inc
stos
or
ret
cmp
push
mov
push
daa
arpl
repz
jb
xchg
inc
lea
adc
in
jp
cmpsl
out
divl
data16
fmull
mov
in
xor
push
mov
jmp
inc
sub
ds
jmp
pop
and
lods
pusha
inc
or
sar
pushf
lcall
inc
fimuls
jl
ljmp
adc
jb
rcll
mov
cmpsl
push
insl
xchg
push
sti
or
sbb
aaa
dec
push
lock
fstl
add
addb
and
jae
or
or
sbb
add
outsb
jne
mov
sub
add
testl
loope
dec
pop
repz
add
jle
pop
sbb
dec
xor
lock
and
jne
cmp
mov
iret
pop
adc
adc
sbb
or
inc
data16
jae
mov
aam
aaa
inc
lods
jmp
bound
lock
cmpsl
adc
cmpsl
fisubrs
and
pop
cmc
sbb
negl
fwait
jbe
mov
pop
lock
xor
in
sub
enter
insb
rorl
lds
dec
jo
mov
xor
les
cmp
mov
pop
leave
adc
outsl
push
cmp
cmp
mov
jae
push
mov
outsl
pop
mov
ret
sarb
jp
and
inc
xchg
fistl
dec
ret
bound
xor
lds
aaa
add
js
es
and
xchg
into
pop
xor
or
mov
icebp
jmp
lods
mov
daa
mov
xlat
testl
jmp
scas
aad
rol
ss
cmp
aaa
xchg
inc
mov
adc
mov
fsub
or
xchg
mov
sbb
pop
push
in
cmc
xchg
add
mov
lds
mov
sbb
push
repz
int3
sub
mov
sbb
xlat
lcall
sbb
test
repz
mov
jl
sub
sub
cltd
int3
push
insb
dec
int3
pop
jno
dec
xor
test
xchg
loope,pt
lcall
loop
hlt
push
frstor
test
call
out
imul
popf
add
dec
push
outsb
pop
mov
inc
xor
icebp
pushl
or
pushf
test
mov
in
dec
and
jne
push
inc
je
and
bound
fisubrs
push
mov
cmp
and
imul
cvtps2pd
or
pcmpeqd
jmp
or
insl
mov
stc
jp
pop
adc
out
lcall
xor
cs
inc
adc
dec
ficoml
push
jle
test
pop
in
inc
dec
jg
aaa
cmp
fcmove
or
pop
test
out
cmpsb
adc
mov
push
repnz
pop
cmp
sbb
loopne
mov
lods
out
lcall
mov
inc
jns
popw
scas
mov
scas
stos
mov
xchg
pop
lods
push
fsubr
jno
add
xor
xor
call
push
jae
xorb
pusha
sbb
es
imul
pop
ss
or
or
lods
xchg
sbb
ret
mov
pop
out
enter
dec
repnz
ja
data16
cmpl
inc
xchg
lret
mov
icebp
outsb
data16
jmp
dec
push
sbb
push
mov
sub
push
mov
loope
cli
add
mov
xlat
jp
jno
push
sbb
fisttpll
inc
cmc
push
jecxz
add
xor
lahf
mov
mov
pop
aas
mov
ret
xchg
push
adc
push
mov
dec
xchg
jg
ret
ljmp
jl
cmp
movsl
repnz
testl
pop
sbb
movb
lret
jbe
mov
xchg
jno
cmp
pusha
int3
lahf
mov
mov
jmp
dec
lcall
in
rorl
enter
cmc
mov
inc
add
mov
in
sbb
fstps
hlt
das
jne
out
pop
inc
rcrl
pop
insl
std
add
push
stc
xchg
push
xchg
mov
int
imul
push
call
clc
lds
inc
xor
data16
call
dec
lds
mov
cltd
add
leave
movsb
lret
test
push
test
out
ret
cli
dec
or
push
cwtl
in
cld
testl
sbb
jnp
dec
insl
rclb
inc
xchg
and
push
adc
mov
rcr
icebp
lock
cmp
dec
incl
imul
fwait
testb
test
xor
inc
enter
adc
add
movsl
fs
inc
sub
sarl
hlt
inc
sub
add
movsl
cltd
adc
std
call
aas
push
out
adc
adc
cmp
and
adc
cs
test
daa
xchg
cmpsb
cmp
jg
and
inc
cmovs
adc
lock
mov
pop
out
fwait
pop
pop
sbb
adcb
decl
or
cld
or
rorb
push
mov
out
sbb
pop
int3
rolb
push
mov
adc
cmp
or
push
sarb
cld
or
repnz
daa
aam
pop
lahf
movsb
les
add
mov
pop
mov
test
movsb
mov
mov
jg
mov
subb
stc
cmp
mov
mov
daa
push
and
mov
push
xchg
push
sub
add
sbb
add
cli
adc
jmp
cmp
cmp
inc
ret
or
or
mov
dec
es
clc
subl
mov
inc
sub
popf
popf
mov
push
or
mov
fistps
jge
add
andl
ret
mov
or
xchg
dec
aaa
jo
xor
dec
jmp
addr16
sbb
enter
cmpsl
jb
cmp
cld
aam
outsb
xor
xor
test
das
mov
adc
pop
dec
in
pop
or
add
inc
out
pop
mov
push
mov
mov
das
fisttpll
aas
mov
adc
testb
repz
stc
stos
jns
dec
xor
sarb
jno
mov
xchg
imul
popf
sahf
in
or
inc
dec
cmp
mov
push
out
or
jecxz
xchg
decb
xchg
or
hlt
xchg
xchg
cmp
cmp
pusha
push
lods
bound
and
dec
ds
lods
mov
sbb
stos
das
scas
sbb
sub
data16
inc
testb
lret
in
add
adc
std
sub
add
add
mov
and
ss
addr16
dec
mov
xorb
loope
or
shrl
dec
push
jo
lret
pop
inc
mov
pop
xchg
adc
stc
aaa
push
ljmp
cmp
rcll
out
mov
push
sti
dec
sahf
js
add
or
pop
sub
clc
xchg
pop
mov
in
mov
xchg
lds
jno
push
ja,pn
dec
cmpsl
cmpsl
mov
and
repnz
bound
daa
push
mov
add
loope
cwtl
adc
in
cmp
mov
adc
jno
xor
std
aam
mov
mov
insl
cmp
jns
lods
dec
fildl
sti
mov
ret
mov
xchg
mov
cmp
dec
les
shrb
and
push
sbb
xchg
cld
push
pusha
movsb
mov
scas
sbb
and
cs
sub
or
data16
movsl
add
dec
push
mov
fildll
ss
movsl
mov
and
inc
lea
jle
incb
loope
leave
stc
imul
cmp
popa
into
stc
jge
fwait
ss
in
movsb
cltd
jge
cmp
sub
jo
dec
out
mov
dec
mov
int3
push
add
sti
test
mov
iret
adc
aam
xchg
das
mov
push
mov
mov
daa
jmp
outsl
jo
add
xchg
enter
inc
iret
insb
movsl
add
mov
je
push
popa
aam
mov
or
in
or
dec
sub
xor
popa
pcmpgtw
inc
adc
pop
bound
in
aam
ret
addr16
bnd
cmp
popl
pop
iret
add
sub
pushf
adc
fisubl
fbstp
and
jl
hlt
rolb
daa
mov
inc
lods
push
js
mov
scas
dec
or
sbb
inc
daa
sti
mov
mov
xchg
ds
sbb
cmc
sbbl
pushf
push
or
lea
fst
imul
add
xor
fisubl
int3
and
mov
or
cmc
cmp
cmp
jo
pop
pop
inc
insb
aas
dec
outsl
pop
ljmp
pop
pop
movsl
hlt
iret
test
stc
push
sub
cmp
clc
and
pop
or
clc
lods
jns
mov
cwtl
adc
pushf
adc
jmp
imul
std
pop
ret
negb
mov
adc
stos
rolb
dec
data16
and
das
pop
mov
je
mov
mov
out
cmc
out
jl
test
shlb
clc
lcall
or
add
push
mov
int
nop
scas
nop
lret
jne
iret
mov
scas
lock
dec
mov
subl
lret
stos
andl
repnz
in
shlb
daa
loope
movsb
mov
inc
stos
push
out
hlt
dec
es
stos
cmp
push
in
push
push
push
decw
mov
add
mov
fdivs
mov
lahf
out
cmp
outsb
push
shll
mov
xor
sbb
mov
pop
pusha
sub
out
sbb
sub
xchg
mov
pusha
bound
fmull
std
fsubrs
repnz
stos
cltd
xchg
into
cmpsl
or
lcall
and
push
test
cmp
sub
pop
mov
inc
sub
lahf
aam
dec
rclb
movsb
sbb
aad
cmp
iret
les
les
inc
sahf
push
lods
jnp
es
mov
mov
stc
jecxz
add
push
hlt
mov
add
aad
sbb
lds
sbb
cwtl
shl
cmp
addr16
in
fwait
rcll
pop
shlb
aaa
subl
push
nop
xchg
pushf
sub
xchg
popa
mov
js
and
aam
sub
inc
xchg
mov
mov
sbb
mov
dec
lods
push
inc
aas
mov
sub
loope
or
xor
dec
ret
sbb
lods
mov
mov
add
call
xchg
mov
mov
pop
ljmp
lds
pop
aas
xor
in
lock
xchg
mov
lcall
filds
test
jnp
insl
jg
dec
jnp
or
jmp
fwait
cld
mov
lea
arpl
ret
jnp
cmp
jae
repz
add
mov
lods
stos
mov
pop
inc
dec
xor
movsl
cmpl
and
jae
clc
dec
mov
dec
idivb
je
ss
pop
and
mov
repz
enter
in
dec
lds
call
sub
ds
push
add
ljmp
xchg
xlat
ljmp
imul
fsub
sub
addr16
mov
jnp
mov
mov
jp
xchg
fcomps
sub
mov
push
cmp
aad
into
cmp
mov
jb
stc
add
fmull
add
js
push
cmp
in
xchg
lahf
push
pop
pop
and
inc
pop
cmpsb
and
pop
jns
push
jge
dec
add
sbb
sub
mov
fdivs
ret
jecxz
es
adc
aad
pushf
push
mov
adc
popf
jecxz
add
insl
push
fsub
mov
mov
scas
or
call
cli
push
sub
sub
das
movb
sbb
xor
inc
mov
out
ret
sti
jb
or
dec
test
mov
sbb
js
fcomps
inc
leave
pop
adc
xchg
arpl
inc
das
in
cmc
push
jp
jb
mov
lahf
sub
xchg
cmc
mov
sbb
cmp
sub
xlat
push
mov
js
sbb
inc
mov
mov
daa
mov
cmp
jae
and
cmpsb
mov
sbb
dec
arpl
inc
dec
loopne
shrd
adc
jnp
dec
sub
ficompl
push
rcrb
adc
stos
and
leave
popf
add
dec
jp
divl
jmp
fs
jnp
mov
fdivrl
mov
clc
inc
popa
daa
sahf
xor
push
lahf
sub
pop
mov
aad
xchg
lcall
mov
loopne
push
dec
adc
imul
sbb
les
ret
sub
mov
cmp
adcl
insl
icebp
jno
adc
je
pop
add
cmpb
add
mov
pop
and
cwtl
dec
xor
push
mov
jns
lods
jl
int
lcall
ss
xorb
add
cli
shrb
repnz
inc
popa
lea
sub
neg
out
jl
and
outsl
ret
or
jne
mov
dec
jl
add
jnp
out
and
cmpsl
pop
push
rcrb
into
in
inc
stos
test
int3
clc
cmpb
pop
inc
push
stc
fimull
and
popa
lret
adc
jnp
add
outsl
add
aad
leave
pop
fwait
js
andb
add
fstpt
cmp
inc
mov
sti
adc
adc
adc
scas
cmp
int3
dec
iret
neg
dec
mov
mov
lea
cld
aas
jae
pandn
je
xchg
and
scas
cmovs
ja
pushf
or
lret
sub
jb
jecxz
push
mov
jo
inc
sbb
test
push
and
add
dec
lcall
in
rcl
js
jg
inc
loope
lds
push
insl
add
sbb
pop
adc
xchg
inc
mov
push
sti
lds
mov
adc
inc
jl
mov
scas
pushf
stos
mov
ljmp
mov
push
call
lds
cmp
jae
and
jne
adc
inc
mov
add
jne
pop
or
mov
cltd
int
and
mov
pop
loop
mov
mov
pop
push
pop
cmp
incl
inc
and
sub
mov
ret
cmpsl
push
test
lret
call
xchg
push
in
push
imul
mov
and
push
lret
ljmp
data16
addr16
lock
aaa
xchg
lcall
xlat
xchg
jns
mov
xor
dec
cmp
leave
jp
inc
push
movd
xchg
loope
hlt
out
cmp
cmpsb
in
ds
imulb
fistpl
xlat
mov
xchg
ss
ds
xchg
rorl
mov
push
popa
push
adc
pop
popa
and
and
mov
cmpsl
ljmp
mov
xor
ss
insl
into
jg
xchg
pop
mov
sbb
pop
mov
cmpxchg
lret
mov
inc
incl
xchg
icebp
addr16
sbb
fimull
lds
shll
into
jle
cmp
jo
cmp
ret
jmp
mov
cmp
loop
lock
je
imul
shlb
gs
ret
mov
aad
jp
add
xor
sbb
mov
enter
in
mov
lock
pusha
xchg
mov
xchg
sarb
les
cld
scas
mov
dec
xchg
mov
movaps
and
jne
cld
icebp
imul
insb
data16
xor
xchg
push
fnstenv
pop
int3
sub
inc
push
test
xchg
sbb
das
xchg
xchg
adc
or
cs
in
rclb
faddp
mov
fs
in
adc
add
imul
in
xchg
outsl
or
mov
sbb
add
push
rclb
incb
jmp
add
scas
movsl
loopne
sub
and
pop
je
jbe
adc
mov
jle
arpl
dec
sub
or
vpperm
pop
dec
push
push
or
mov
push
repnz
inc
out
jmp
add
inc
xor
push
int3
fnstsw
inc
dec
je
mov
lock
fnstenv
cli
test
and
jecxz
sbb
rclb
stos
mov
mov
mov
fcmovb
pop
rcr
mov
popa
pop
xor
adc
mov
add
ret
ss
out
mov
xchg
mov
out
fists
mov
imul
ljmp
cmp
mov
ja
sbb
aaa
aam
loope
mov
out
arpl
lods
psubusw
iret
popf
test
fs
dec
notl
and
mov
js
rorl
mov
movsl
dec
ret
lret
addr16
je
lds
jmp
dec
insl
hlt
add
iret
pop
outsl
jno
pop
dec
dec
in
push
pusha
sbb
dec
rorb
aas
movsl
js
hlt
in
lods
add
push
inc
push
bound
mov
leave
insl
shrl
inc
mov
lock
jne
inc
mov
push
pop
repz
call
std
shll
pop
inc
stc
rolb
jp
outsl
mov
addl
clc
call
insb
clc
int
popf
and
test
jmp
ja
add
add
lret
call
xchg
in
and
ficoml
sahf
cmp
sbb
arpl
dec
add
mov
add
sbb
in
xlat
sbb
fadds
cmp
pop
daa
lahf
aad
inc
fstpt
imul
mov
jae
pop
sub
mov
add
stos
and
adc
cmp
adc
xchg
insb
push
adc
mov
add
cmc
imul
loop
test
sbb
lods
enter
out
xchg
out
in
sbb
sub
xchg
sbb
pushf
jl
scas
mov
push
out
xor
and
pop
jge
mov
fsubs
clc
pop
fmul
ljmp
pop
insb
and
cmpl
in
aaa
xor
daa
leave
popl
dec
out
push
jnp
push
out
add
addr16
call
sub
cmp
jge
aad
jno
clc
adc
dec
or
imul
sub
jne
pusha
pop
ja
jo
es
outsb
out
sbb
vhaddpd
sahf
clc
adc
insb
sarb
rcrl
or
ss
fmuls
jne
stc
inc
inc
je
xchg
add
je
xor
aam
or
subl
adc
les
sub
mov
pop
test
push
jmp
and
sahf
je
pop
xchg
in
test
pusha
cmc
cmp
pop
ds
iret
movsl
pop
sbbl
in
cmpsl
call
les
dec
inc
push
or
repz
hlt
aad
xchg
mov
jp
xchg
xchg
lods
mov
jmp
repnz
mov
pop
aam
test
rcrb
adc
sbb
sbb
xchg
xorl
pop
cmpsl
int3
push
xchg
icebp
sub
mov
loop
sbb
es
lcall
mov
arpl
adc
mov
jno
sbbl
sub
cmp
sub
into
jle
pop
rcll
sub
and
insl
sbb
popf
dec
cs
pop
leave
adc
pop
inc
jmp
mulb
push
out
add
xchg
imul
movsb
cltd
dec
sarb
fstpl
pop
cwtl
mov
cmp
mov
pop
jp
or
rorl
inc
mov
lods
jp
aaa
je
xchg
mov
push
add
mov
xlat
in
inc
stos
sub
iret
inc
push
xor
or
cltd
adc
mov
mov
popf
stos
out
adc
xlat
or
jnp
rcll
xchg
adc
cltd
andb
or
jge
jae
mov
dec
test
ror
rclb
imul
jae
mov
adc
nop
js
inc
xorl
shrl
cmp
popa
cmpsl
add
out
insb
fsubrl
cmp
fadds
gs
cmpsl
dec
lcall
lods
jl
adc
mov
sbb
sarl
mov
inc
pop
jmp
inc
mov
pusha
dec
xchg
adc
mov
into
inc
hlt
mov
jle
and
fmuls
lods
sbb
stos
test
jnp
cmc
popa
xchg
loopne
clc
popf
inc
mov
inc
cli
xlat
xchg
or
dec
jb
pop
out
mov
xorl
xor
dec
lock
subl
jp
pop
jp
and
pop
insb
lret
dec
adcb
sub
mov
adc
imul
and
stos
jo
scas
push
and
inc
frstor
je
xchg
or
cmc
mov
push
xchg
test
push
mov
fwait
popa
push
adc
mov
adc
pop
mov
push
movsl
cmpl
dec
pop
pop
clc
insb
idivl
mov
or
stos
test
mov
setge
arpl
sbb
lret
cmpsb
and
or
aad
aad
xor
mov
lock
ss
in
push
or
mul
jl
jne
xchg
and
cmc
insl
jne
mov
add
pushf
out
movsb
add
pop
jmp
adc
data16
mov
jnp
imul
lds
call
lahf
mov
mov
repz
xor
ss
or
sahf
pop
in
inc
push
mov
rclb
or
pop
push
dec
pushf
scas
sbb
cmpsb
push
enter
sbb
fsubrl
cmp
les
mov
dec
pop
push
aam
sbb
mov
arpl
push
xchg
push
cmp
cmpsb
mull
lock
and
dec
xor
outsb
push
mov
aas
shll
and
hlt
and
nop
lcall
test
push
adc
int3
std
dec
and
bound
mov
cmp
adc
sbb
dec
add
jae
add
imul
shrl
add
mov
sbb
ss
adc
out
cmp
mov
and
int
lds
mov
es
rorb
cmpl
and
out
dec
adc
xchg
cmp
mov
out
mov
adc
push
int
outsb
adc
pop
aad
jne
xchg
mov
cltd
push
mov
outsl
lahf
adc
xor
sub
add
fldenv
pushf
push
pop
sahf
xor
enter
inc
lds
lret
mov
and
jl
shll
cmpsb
and
mov
cld
lods
jns
pop
imul
push
pop
insb
std
xchg
fs
mov
inc
filds
sbb
cs
outsb
sti
in
lock
cmp
adc
jbe
out
outsb
mov
mov
mov
pop
sub
out
in
fldenv
jo
mov
mov
jp
xor
add
test
pop
dec
sbb
xlat
sub
in
xchg
in
inc
cmp
pop
sub
outsl
sub
mov
xor
fsubr
dec
fldcw
in
test
sbb
cli
mov
and
jno
push
addr16
adc
dec
and
lods
ljmp
mov
push
in
loop
inc
or
repnz
repz
sbb
js
or
mov
sbb
xor
pop
pop
fstps
dec
jmp
mov
popf
push
movsb
es
xchg
orl
mov
add
fwait
enter
icebp
mov
cmp
cmp
ficoml
pop
movsb
jns
or
dec
cmp
ret
pusha
movsb
lret
dec
addr16
inc
adc
sbb
dec
push
dec
cmp
adc
push
lods
jae
mov
xor
inc
adc
out
mov
lahf
fs
popa
jg
fcoms
clc
jle
push
inc
imul
pop
dec
pop
or
fldl
mov
xchg
stos
mov
cmpsb
ficoml
mov
test
pop
fdiv
arpl
and
std
aaa
fs
es
pop
add
rcrl
imul
or
fs
dec
cwtl
xor
sbb
lret
imul
push
loope
mov
mov
mov
movsl
hlt
xor
or
xchg
jmp
outsb
sti
dec
lods
icebp
and
loop
rcr
idiv
lahf
sbb
sarb
and
jo
test
repz
push
sbb
mov
dec
xchg
fcomps
inc
jne
dec
pop
pop
fldl2e
cld
loope
sbb
pusha
mov
mov
push
sub
adc
pop
pop
jp
cmp
test
ljmp
movsb
and
adc
pop
rcrb
sbb
out
adc
jne
mov
push
pop
insb
repz
addr16
dec
jg
orl
arpl
cld
in
push
insl
shll
mov
ss
lods
mov
stos
mov
pop
dec
mov
or
push
into
pushw
mov
pop
daa
dec
repz
jg
loopne
mov
pop
xor
dec
push
lds
add
push
ret
xor
and
mov
push
scas
or
sahf
stos
lods
dec
mov
or
popf
outsb
fs
push
insb
jg
mov
nop
pop
and
incl
mov
imul
mov
or
nop
imul
frstor
xchg
or
sub
and
inc
gs
cmp
push
dec
test
xchg
sbb
inc
mov
pushf
fidivs
adc
push
shlb
inc
dec
enter
imull
xchg
nop
push
shrb
pop
mov
jne
loope
ljmp
nop
mov
js
insl
mov
inc
inc
test
inc
aam
push
stc
jle
out
out
push
mov
pop
mov
insl
dec
xlat
xlat
inc
lret
mov
push
rcr
insl
ficomps
jno
arpl
cmc
mov
cltd
xchg
pop
cmp
stos
jns
mov
pop
outsb
pop
ret
push
fnstsw
xor
pushf
cld
sub
xor
pop
gs
sub
test
dec
sbb
sub
hlt
inc
int3
dec
sbb
leave
scas
lds
arpl
imul
scas
pop
test
xchg
pop
arpl
and
xlat
push
or
andl
mov
orb
ret
jle
pop
cmpsl
pop
pop
push
xchg
test
adc
push
cmc
inc
sarb
inc
aaa
push
jg
mov
mov
scas
add
sub
cli
push
scas
lcall
std
cld
adc
dec
clc
icebp
cltd
dec
fsub
jo
loope
insl
fstl
insb
and
xchg
sub
mov
push
inc
mov
fcompl
or
stos
mov
in
icebp
mov
sbb
xchg
in
and
aam
and
mov
fs
mov
mov
mov
mulb
mov
sbb
or
das
icebp
inc
add
int3
std
ror
add
and
add
pop
addr16
xor
adc
mov
outsb
fmuls
imul
cmpsl
ds
ficompl
adc
test
sub
add
cwtl
outsb
les
test
jne
stos
pop
stc
sub
cmp
adc
mov
pop
popa
cltd
or
mov
mov
jns
jg
iret
sbb
jb
mov
outsl
jge
scas
out
add
inc
dec
faddl
je
ja
add
jae
dec
jae
add
out
hlt
inc
mov
xlat
mov
jp
mov
fnstenv
fxch
call
fisubs
cmp
scas
cmpsb
pop
psrlq
add
jl
sub
xchg
push
and
imulb
mov
xchg
push
fcoml
jge
push
adc
je
sbb
or
mov
adc
jl
test
sub
mov
jns
lahf
and
or
nop
in
push
mov
imul
ljmp
mov
mov
adc
bound
idivb
int3
push
cmpsl
mov
push
int
sbb
cmp
jns
inc
pop
inc
test
xor
xchg
or
pop
jb
dec
nop
test
and
ret
fdivl
pop
lods
lds
into
add
jmp
outsb
pop
repnz
xor
xor
lret
fisubrl
push
push
inc
add
sbb
fnsave
fadds
lds
mov
mov
xchg
xchg
adc
jae
iret
repz
push
es
jge
fcmovu
data16
add
xor
mov
cmpsl
and
cmc
xchg
and
cmp
mov
pop
fucomi
rolb
mov
sub
jae
sbb
fwait
insb
xor
or
cmp
mov
sti
faddp
cltd
in
xor
inc
lods
jmp
cmp
jecxz
xchg
adc
sarb
cltd
insb
xchg
cmpsl
mov
or
mov
adc
jnp
mov
push
lret
fnsave
jp
inc
or
out
jge
jb
jmp
mov
cmp
out
jbe
xlat
jne
aaa
jecxz
or
ja
push
ja
outsb
je
xor
xchg
pop
lods
inc
pop
aad
jmp
cli
xchg
or
cmp
pop
neg
xchg
repnz
ja
mov
xlat
push
mov
imul
shl
cmp
dec
pop
mov
rclb
popf
addr16
mov
lods
add
pop
stos
jno
ljmp
cmp
inc
les
mov
lret
and
popa
add
push
sbb
mov
shll
sbb
fwait
fwait
mov
xor
inc
push
xlat
jl
call
or
cmc
sub
movsl
cmp
les
xchg
sbb
aaa
mov
push
xchg
in
cmp
pop
imul
cli
and
dec
jb
ret
jl
dec
xchg
xlat
fstpl
xchg
mov
aad
mov
data16
aad
push
sub
in
mov
jbe
jmp
fs
stc
ss
xchg
push
mov
jb
pusha
ficoms
mov
aad
scas
out
rcrb
mov
dec
fdivp
sub
rcl
push
je
lret
mov
aas
sbb
inc
push
push
mov
dec
lea
imul
dec
lahf
xorl
testl
mov
inc
movsl
shlb
dec
push
push
inc
rcr
out
adc
das
sti
cmp
mov
xor
stc
test
cmp
in
inc
gs
sbb
hlt
xchg
dec
pop
xor
jb
mov
xlat
out
in
push
mov
jecxz
scas
imul
cmpsb
pop
inc
loope
mov
out
repnz
mov
and
or
clc
aas
cltd
cs
dec
xor
mov
insl
mov
mov
scas
incl
sbb
xlat
jecxz
mov
cltd
les
sti
adc
mov
or
testl
add
out
sub
notb
sbb
pushf
inc
mov
iret
inc
add
cld
pushf
data16
shlb
stos
mov
test
push
push
out
add
cmp
cltd
sub
mov
stc
mov
scas
and
sahf
mov
aam
test
out
fidivs
jnp
out
ror
mov
outsl
push
dec
pop
ret
mov
jmp
sbb
jns
test
inc
push
jae
sub
inc
pusha
pop
jnp
xchg
ljmp
cwtl
shr
fldl
adc
jno
ljmp
dec
popa
dec
jg
mov
rorl
out
push
mov
je
enter
pop
cmp
inc
xor
adcb
idivb
lahf
leave
xor
repnz
insl
push
mov
adc
mov
sbb
pop
out
jp
out
in
mov
and
push
jp
xor
or
xorl
pop
xchg
push
add
jle
mov
js
xchg
fstps
dec
bnd
repz
sahf
pop
cld
push
dec
sbb
cmp
xor
lret
mov
xchg
das
hlt
lcall
xchg
push
xor
fldl
aam
sub
xchg
xor
or
out
adc
insl
outsl
repnz
and
xchg
dec
adc
or
dec
jmp
push
mov
fildl
pop
pop
imul
pop
cs
out
je
call
xchg
scas
sbb
push
dec
add
jnp
bound
aad
xor
outsl
jg
enter
cmpsb
mov
push
stc
jb
dec
sub
addb
sbb
shlw
test
mov
pop
dec
push
cltd
jp
jbe
sub
mov
mov
and
jg
add
xchg
loop
mov
pop
lods
sub
add
pop
repnz
jae
mov
dec
xchg
sbb
mov
cld
data16
push
inc
shll
filds
xchg
sahf
stos
rolb
xchg
xchg
ja
pop
lahf
xchg
mov
loopne
cli
pop
xor
std
icebp
std
push
int3
jno
fbld
cmpsl
jmp
sbb
roll
xchg
ss
sub
ja
shlb
leave
or
jno
stos
adc
js
scas
and
add
mov
or
shl
jl
pop
sbb
inc
xchg
fwait
js
call
sbb
xchg
cmpsb
popf
das
xor
pop
ja
stos
sub
test
adc
shrl
pushf
xorl
hlt
imulb
ds
mov
jecxz
or
mov
cmp
or
fbld
dec
sbb
adc
push
fs
xchg
jg
mov
jno
mov
xor
outsl
push
fsts
inc
pop
push
and
pop
js
cs
scas
and
cli
pop
jge
sbb
push
cmp
pop
and
xor
repz
inc
sbb
insl
xor
mov
clc
sbb
aas
notb
cmp
adc
loopnew
inc
dec
jo
mov
imul
mov
mov
icebp
inc
test
sub
int3
arpl
push
adc
ret
xchg
ret
lret
test
pop
scas
or
sbb
shll
fcompl
lock
cmp
and
scas
add
sbb
xchg
mov
adc
mov
out
pop
or
dec
les
push
jmp
pop
mov
sbb
xlat
iret
sbb
std
xchg
ss
add
out
testb
mov
gs
and
mov
xchg
repnz
adc
mov
pop
sbb
xor
pop
shrl
dec
ss
and
dec
das
ror
je
scas
pop
mov
addr16
xchg
jns
push
popf
add
rcll
ja
mulb
add
movsl
popa
push
sbb
sub
es
jp
popa
xor
jno
mov
jmp
mov
loop
pop
xchg
movsl
addr16
or
cmp
add
fdivr
or
fwait
add
notl
mov
test
or
jle
mov
push
rcr
mov
fwait
gs
xorl
cmp
hlt
orb
int3
xlat
iret
adc
cmp
lahf
fwait
cmpsl
dec
inc
cmp
sti
loope
pop
test
mov
icebp
fisubs
xchg
sbb
iret
aas
and
inc
or
idiv
cli
adc
ds
push
and
push
fsubrs
xchg
and
cwtl
xchg
das
ret
mov
cmp
jp
inc
jge
push
leave
stc
jg
test
mov
cmp
dec
out
movsb
dec
pop
mov
push
mull
bnd
loopne
sub
in
dec
aad
in
rcrl
adc
gs
cmpsl
jae
scas
lea
sbb
xchg
push
rol
inc
outsb
xor
outsb
add
lods
sbb
pop
add
mov
scas
xor
lods
or
pop
mov
mov
in
fcmovnu
in
inc
sbb
call
inc
jle
inc
into
mov
xchg
dec
dec
push
xlat
pop
lods
daa
fldz
cmpb
repnz
mov
int
or
push
in
jge
insb
adc
fildll
arpl
popa
xor
movsl
mov
out
movsl
add
xchg
imul
mov
inc
pop
and
xchg
jg
out
push
mov
sub
adc
in
jbe
xchg
sbb
xchg
scas
mov
jecxz
out
mul
loopne
xlat
sbb
lods
std
fists
icebp
lods
out
mov
mov
and
sti
stc
int3
mov
add
call
adc
repz
mov
rcll
stos
ret
addr16
lret
cmpsl
pop
push
adc
dec
jle
cltd
aad
loopne
jg
mov
call
insb
mov
roll
add
push
nop
test
dec
pusha
pcmpeqd
add
std
add
mov
test
test
mov
dec
mov
mov
mov
push
xchg
lea
push
cltd
sub
popf
pop
cs
mov
outsb
sub
xchg
jecxz
test
xchg
fwait
jge
lock
sub
xchg
sub
loope
aas
pop
lahf
mov
xor
mov
sub
pusha
dec
orb
inc
push
jnp
or
xor
outsb
push
cmpsb
push
mov
loope
icebp
popa
mov
dec
mov
dec
inc
stc
out
dec
jp
subb
inc
clc
pushf
pop
dec
add
dec
or
and
dec
inc
aam
aas
mov
les
sub
nop
add
push
jge
sub
adc
cmp
je
js
rorb
jmp
punpckhdq
loope
sub
sub
insl
fs
inc
flds
adc
sub
sub
jne
push
cmp
sbb
psubd
fwait
in
in
push
lods
push
aas
test
push
cld
sub
cmp
pushf
push
ljmp
cmpsb
and
cwtl
push
dec
dec
push
ret
mov
add
fldt
cs
movsb
push
push
inc
xchg
or
push
jno
mov
and
or
push
ret
sahf
in
in
in
xchg
in
mov
in
mov
xchg
inc
push
xor
cmpl
and
lods
sub
adc
out
dec
ret
or
xor
dec
lock
jmp
sbb
and
sbb
add
lret
adcb
scas
xchg
div
lahf
in
pop
out
lds
jb
adc
popa
add
aas
mov
sub
movsl
cltd
cltd
or
add
mov
int3
inc
and
mov
insl
dec
cmp
pop
daa
pusha
testb
shrl
push
mov
or
jae
rcll
data16
xchg
dec
jg
adc
mov
dec
hlt
in
mov
loopne
mov
in
lods
icebp
adc
xor
insl
mov
lock
std
mov
dec
je
clc
sbb
stc
inc
filds
adc
dec
xor
aad
sahf
in
xchg
cld
rclb
fs
out
pop
sti
push
loopne
stos
sub
pop
lds
test
loope
cmp
jge
outsl
dec
jae
add
xchg
ja
mov
jp
add
mov
and
lock
cmpsb
add
or
mov
cmc
jl
jno
scas
inc
test
call
or
mov
push
mov
insw
lds
js
rcr
cmp
lds
test
mov
add
ljmp
jecxz
pop
add
adc
sbb
xor
aam
insb
pop
jo
mov
pop
jge,pt
and
int
cmc
sti
and
lea
addr16
mov
sti
mov
adc
jae
ljmp
and
aam
ljmp
scas
pop
je
pop
loopne
push
xor
fbld
pop
leave
rclb
jmp
sbb
cmp
push
xchg
xor
mov
sub
dec
cmp
add
leave
imul
mov
cbtw
add
cs
dec
inc
addr16
jmp
cld
cltd
mov
leave
inc
mov
cmc
mov
mov
inc
mov
pop
icebp
std
loop
xor
rcl
sbbl
insl
push
xlat
adc
popa
loop
repz
push
pop
dec
dec
pmuludq
nop
mov
xor
repz
push
xchg
mov
in
push
cmp
test
and
imull
mov
jb
push
lock
mov
ret
mov
mov
out
orb
inc
adcb
mov
xchg
insb
jp
cmp
xchg
movsb
add
lea
inc
jg
push
dec
aaa
jmp
aas
sqrtps
pop
sbb
mov
arpl
rcrl
cli
adc
push
mov
jge
mov
call
xchg
mov
xchg
add
mov
hlt
lds
insl
xchg
in
push
and
sub
imul
cli
xlat
push
decb
xchg
repz
hlt
into
xor
mov
dec
inc
cmp
and
xchg
aaa
add
and
cs
xchg
pop
movsl
mov
in
stc
inc
std
stos
sbb
mov
nop
add
mov
mov
js
sbb
shll
dec
add
or
push
sbb
leave
mov
sbb
xor
xor
adc
aaa
cli
fstl
in
inc
and
repnz
popf
pop
inc
cmc
xorb
push
cmpsl
push
into
add
sbb
gs
mov
cwtl
push
push
scas
add
mov
sub
rorl
enter
or
test
xor
add
cmpb
cmc
rep
in
movsb
addr16
cmpsl
jne
leave
push
jp
imulb
dec
xor
mov
std
sbb
jg
mov
sub
les
leave
jo
sub
adc
xor
cmp
ljmp
sbb
dec
in
and
aam
sbb
loop
add
jge
cmc
roll
insb
pushf
push
insl
mov
sub
adc
jle
mov
xchg
push
clts
jne
pop
adc
cmpsb
dec
dec
fstpt
dec
pop
cwtl
mov
jge
and
jg
cmp
test
xchg
ja
or
dec
insb
lcall
and
rclb
jp
pusha
jl
call
cmp
cwtl
pop
lea
fwait
add
test
addb
xchg
scas
xchg
and
push
movsb
mov
add
mov
and
test
std
bound
xchg
and
xor
testl
inc
mov
imul
fimuls
or
push
push
icebp
loopne
mov
push
dec
clc
and
and
push
dec
mov
int
sbb
mov
lret
fldenv
mov
push
push
lea
scas
aaa
std
mov
pop
cmpsl
or
outsl
inc
mov
mov
adc
adcl
add
jbe
jg
shl
xor
out
mov
data16
in
inc
mov
out
mov
xor
pop
dec
xchg
neg
dec
inc
jmp
lods
inc
clc
xor
popf
pushf
inc
mov
movsb
ficomps
dec
sbb
sbb
pusha
iret
adc
outsl
out
and
mov
adc
sub
inc
iret
imul
sub
adc
inc
xchg
sahf
mov
fs
addr16
data16
dec
push
lods
mov
mov
aad
push
out
mov
cmp
push
adc
out
cmc
adc
fcomps
sub
jno
dec
or
lds
pop
aad
pop
pusha
pop
sub
inc
nop
dec
mov
int3
jmp
std
ret
dec
mov
dec
jge
fmuls
andb
lds
inc
cli
jne
sub
xchg
sbb
mov
rcr
sub
sbb
add
cmp
xchg
arpl
ss
stos
push
lret
mov
popf
movsb
jnp
jmp
adc
jl
rcrb
rep
pop
jp
scas
dec
test
cmp
cmpsb
out
rolb
inc
cmpsl
jge
notl
or
xor
xor
scas
jo
fcompl
jnp
mov
sub
jns
and
jge
dec
rclb
testl
js
jno
xchg
sub
rcrb
stc
jge
mov
xor
fadd
sub
mov
xchg
ret
xlat
into
shl
and
add
aam
jno
mov
mov
push
nop
cltd
jne
add
cmpsl
or
das
stc
cmp
lods
loop
inc
das
nop
jmp
cmp
test
lock
xchg
fisttpl
lcall
das
jmp
aas
enter
xchg
cmp
imulb
adc
sub
out
or
std
or
es
lea
mov
lods
jns
jecxz
fmuls
sbb
lods
stc
cmp
stc
add
iret
notb
push
or
cmpsl
test
pop
insl
stos
and
xor
cli
mov
or
addl
addr16
jle
jle
jecxz
test
nop
mov
sub
sbb
lods
inc
adc
in
js
xlat
xchg
popa
inc
push
or
and
std
jo
icebp
stos
fadd
std
pop
jmp
sub
out
ja
jbe
mov
adc
fdivr
push
ljmp
xchg
add
jle
inc
fcmovnu
xchg
fld
shlb
mov
fstpl
cmp
nop
jecxz
mov
bound
aad
iret
sub
lds
iret
xacquire
int
into
mov
sbb
or
addl
inc
dec
sahf
adc
loopne
dec
cld
or
std
test
inc
xchg
mov
pop
scas
xlat
mov
xchg
jae
dec
jno
das
push
add
mov
cmp
aas
jmp
fistpll
loope
push
jecxz
sbb
add
loop
jl
outsl
xchg
lea
push
push
insb
and
lds
and
popf
inc
sahf
push
ret
jl
adc
cs
and
daa
cwtl
inc
mov
imul
imul
add
mov
or
pop
xorb
clc
push
lods
and
xlat
jae
mov
jg,pt
bound
je
sub
push
fistpll
icebp
fcomp
jmp
sbb
inc
es
fsubs
mov
imul
ficoms
mov
cwtl
test
mov
es
push
loope
lds
push
inc
mov
nop
or
ficoml
pop
mov
pop
and
mov
dec
adc
dec
mov
xor
gs
mov
inc
cmpsb
xchg
push
data16
xchg
stos
lds
cwtl
push
add
ret
aam
into
int3
push
pop
mov
je
out
xchg
xchg
lret
vpsubd
mov
insl
out
fwait
lahf
add
out
sbb
pop
stc
add
push
fnsave
pop
xchg
jg
add
mov
mov
xor
cmovge
or
scas
add
push
pusha
mov
pushf
and
jb
aad
inc
stc
je
sbb
sub
jae
gs
push
sbb
pop
pop
xor
adc
push
adc
daa
pop
imul
out
in
mov
jno
push
mov
xchg
sti
mov
outsb
lock
xchg
cwtl
inc
test
dec
mov
mov
out
mov
xlat
sub
test
and
push
mov
mov
lahf
add
sbb
outsb
popa
stc
xchg
mov
mov
sub
ret
test
pop
mov
test
lahf
mov
rol
jbe
jnp
xchg
int
sub
mul
fwait
sbb
fisubrl
andl
popa
bnd
xchg
mov
leave
fstl
jl
int3
loopne
or
fcmovb
fwait
lcall
imul
sbbb
jmp
xchg
mov
jmp
lcall
lds
jnp
cmp
outsb
repnz
aam
mov
mov
in
loope
push
sbb
sub
ja
push
jo
cwtl
mov
out
aaa
sub
pop
and
mov
lock
scas
jbe
aas
movsl
fstp
mov
hlt
cmp
jp
mov
mov
pop
inc
sub
add
roll
jmp
jo
mov
clc
int
jp
scas
ret
imul
iret
cmp
mov
jae
out
pop
stos
loope
xor
push
bound
ljmp
xchg
dec
pop
pop
xchg
xlat
arpl
bound
dec
fistps
into
jg
jle
cmp
mov
inc
mov
dec
push
in
pop
inc
xchg
xorb
out
test
adc
fucomi
dec
test
ds
cmpsl
mov
popf
into
mov
sub
sub
push
jmp
popa
mov
pop
mov
xchg
ficoms
in
das
jle
pop
icebp
push
outsb
cmp
adc
icebp
outsb
les
adcb
or
loopne
std
shll
out
and
jmp
jnp
xchg
push
sbb
loopne
lds
fisttpll
sub
std
imul
mov
imul
cmc
mov
into
xchg
xor
adc
push
push
or
inc
subb
imul
push
mov
loope
jne
leave
loop
xchg
or
fmuls
arpl
loop
rorl
sub
add
ret
hlt
lcall
jne
pop
lret
std
xlat
test
and
xchg
in
sarb
xchg
adc
out
movsb
adc
lock
mov
add
out
adc
cmp
xchg
add
mov
or
adc
xor
shr
or
in
mov
adc
push
xor
pop
mov
ret
pop
push
mov
lahf
adc
imul
xchg
jb
ret
cmc
sub
test
int3
cmp
or
mov
stc
fiaddl
mov
inc
and
lods
mov
orb
mov
fs
mov
xchg
xchg
push
jno
les
sarl
arpl
jl
xchg
mov
inc
subb
fimull
add
mov
push
ficompl
mov
test
cmpsl
pcmpgtw
movsl
enter
jmp
inc
mov
mov
cmp
mov
sahf
jae
bound
cmpsb
ja
add
push
stc
mov
push
xor
shll
ret
loopne
out
in
jae
fs
pop
add
jns
loop
xor
aad
in
jno
mov
add
jnp
or
inc
add
pop
and
push
or
es
cld
clc
loop
aas
andb
xor
lock
push
cwtl
push
addr16
or
fldln2
jmp
push
mov
mov
sbb
incl
scas
mov
fwait
loopne
dec
subb
insl
add
adc
push
loopne
sbb
cld
mov
sub
mov
popl
push
mov
or
cltd
mov
pushf
cmp
ret
and
ja
rcrl
stos
mov
cmp
insl
cmp
add
iret
sbb
xchg
jmp
addl
int
call
add
into
adc
stos
loope
popa
sub
xchg
jl
pop
scas
aam
jl
lds
add
sub
cmpsb
or
mov
pusha
mov
or
push
sub
or
mov
jp
jl
jg
xchg
wrmsr
xor
loope
and
fwait
and
push
push
fistpl
mov
sub
mov
xchg
dec
pushf
and
lods
aad
sar
and
cmpsl
cs
jecxz
stos
dec
jmp
shrb
fs
adc
mov
bound
mov
and
and
push
inc
jb
xor
cwtl
aaa
cmp
push
hlt
lcall
ret
inc
cwtl
je
popf
aam
testl
faddl
jnp
out
sub
js
leave
mov
stc
sub
mov
push
into
push
neg
and
mov
inc
rorb
add
adc
inc
call
cld
dec
and
int3
and
xlat
pushf
int
pop
mov
std
jb
and
sub
push
sbb
jnp
test
fs
sbb
lds
je
daa
ret
inc
xor
pop
out
inc
mov
mov
push
xchg
std
inc
pushf
pop
lods
add
aaa
imul
mov
jae
addr16
leave
inc
movsl
mov
jo
rcll
adc
pop
ss
push
jl
arpl
std
push
sbbb
lret
aaa
loope
inc
mov
iret
pop
adc
pop
push
xor
cmc
scas
xor
pop
pop
dec
ss
lcall
inc
test
mov
inc
mov
cli
in
stos
fxch
enter
dec
mov
sub
jo
fisttpll
xor
jmp
enter
xchg
or
or
inc
mov
jp
and
jle
out
aas
add
cmp
jp
mov
rclb
cwtl
pop
mov
mov
xchg
push
test
sbb
mov
fdivrl
mov
push
add
push
mov
xchg
cwtl
popa
inc
pusha
sbb
mov
adc
jae
out
add
lcall
stos
xchg
add
pop
imul
push
inc
mov
stos
shrb
stc
mov
pop
aas
lahf
and
jecxz
pusha
leave
out
push
sahf
push
nop
loop
lods
lret
jne
cmpsl
jge
jge
ss
and
imul
imul
loopne
or
inc
mov
push
xchg
mov
push
adc
push
xchg
cli
out
push
scas
or
fbstp
sbb
rolb
stos
mov
or
fcoml
out
push
xor
sub
rcrb
es
jno
test
adc
cmpl
jge
xchg
pop
jecxz
ss
mov
shll
outsl
mov
hlt
enter
enter
test
adc
movsl
gs
ror
mov
cmc
pop
xlat
cmp
pop
dec
dec
jnp
mov
push
stc
aad
gs
call
add
jnp
clc
out
dec
insb
mov
xchg
lods
mov
in
out
sub
in
adc
push
sbb
jmp
insl
mov
loope
push
inc
std
movsb
mov
int
icebp
loop
push
cmp
arpl
shrb
loopne
sbb
in
mov
adc
mov
shr
pop
aad
subl
xchg
pop
mov
mov
or
adc
int3
or
jb
jae
jmp
push
cld
clc
movq
dec
cwtl
das
cltd
cli
push
into
inc
test
pop
xlat
bound
cmp
sahf
and
int3
adc
sarl
inc
inc
adc
push
pop
inc
int3
dec
mov
repz
cmp
ficompl
fucomi
dec
mov
and
repz
push
mov
sbb
arpl
sub
push
push
and
add
add
mov
pushf
lahf
aaa
enter
sbb
mov
xor
repz
sub
inc
jns
bound
imul
mov
push
dec
lcall
adc
mov
jg
xchg
or
data16
pop
dec
dec
js
loop
jmp
or
or
mov
xchg
push
insl
std
dec
fdivr
xchg
or
enter
mov
and
and
and
into
in
push
sbb
in
xchg
xchg
jbe
pop
cli
fwait
and
stc
mov
mov
dec
popa
dec
sub
cmp
jnp
cwtl
out
inc
add
daa
mov
sahf
es
adc
push
inc
mov
xchg
mov
jae
xchg
pushf
jmp
mov
test
mov
sbb
pop
stc
xor
dec
pop
xor
jle
push
and
rcrb
dec
shlb
test
adc
push
sbb
fdivrl
sahf
aam
xchg
aad
call
dec
mov
xor
and
and
je
call
cmp
sbb
fs
fldenv
inc
clc
inc
scas
adc
mov
pop
mov
xchg
jnp
mov
test
mov
fs
push
loop
xchg
pop
les
clc
xlat
push
add
out
insb
adc
out
cmp
mov
rol
xorl
pop
cli
int3
or
push
cmp
rol
dec
jmp
jp
test
scas
ja
cli
sub
lret
dec
mov
loop
clc
outsb
daa
jo
cmp
call
push
pop
js
rcrl
mov
lods
mov
pop
xchg
nop
mov
cmp
sub
xor
push
jl
adc
inc
adcb
pushf
inc
push
stc
mov
call
fimuls
dec
sbb
mov
rolb
push
lods
xchg
sbb
jle
mov
jle
pop
enter
add
pop
mov
pop
mov
mov
mov
insl
popa
enter
aad
jecxz
push
mov
jno
imul
xorb
cmp
hlt
pop
sbb
mov
push
xchg
and
jnp
dec
dec
loop
lret
jb
popa
pushf
mov
add
dec
out
iret
ljmp
jb
jbe
mov
cmc
cmp
inc
mov
jmp
push
icebp
inc
fstpl
std
cs
adc
orl
mov
outsb
push
pop
mov
push
lahf
cmp
out
movsb
cli
fimuls
inc
add
cmp
arpl
sub
in
jmp
cltd
shl
lahf
jnp
push
mov
fwait
push
mov
fwait
outsb
mov
xchg
hlt
sbb
pop
xor
inc
mov
cmpsl
daa
xor
pop
cwtl
mov
shl
and
xlat
scas
or
stos
inc
das
jle
mov
jnp
mov
sub
mov
jmp
jo
pusha
lcall
add
shll
aad
insb
lret
cmp
mov
arpl
scas
xchg
mov
insl
inc
mov
test
test
mov
call
arpl
cmp
in
repz
mov
out
insb
fidivs
in
fsubs
jo
fs
daa
scas
inc
mov
add
push
and
adc
mov
jl
push
popa
fisttpl
loop
lahf
push
aam
pop
fmul
mov
fnstenv
fbstp
mov
aad
inc
test
cmc
stc
leave
mov
adc
xchg
les
xchg
sbb
mov
sarb
call
xor
dec
shr
jns
in
sbb
cltd
out
test
aam
inc
inc
xor
fcompl
sahf
adc
out
xchg
jle
cmpsl
dec
or
fidivrl
sbb
icebp
fimull
inc
mov
or
dec
lea
popa
dec
ficompl
mov
jp
lret
xchg
and
testl
popa
push
jg
mov
fsqrt
fs
int3
pop
ja
ret
fsub
sarl
ret
mov
mov
fs
push
repnz
aaa
divl
fs
stc
scas
pop
pusha
sub
sub
mov
ret
ret
jnp
addl
fiaddl
or
and
dec
ds
out
aam
cli
mov
sub
jp
and
ss
ret
cli
fwait
cmc
xor
mov
lds
lret
rcl
cmp
mov
sub
mov
xorb
or
jle
testb
dec
pop
sarb
xor
jmp
int3
mov
fiadds
push
fstp
in
or
xchg
in
insl
cmp
ret
xor
inc
xchg
subl
fildll
inc
mov
lock
std
sub
cs
and
sub
or
xor
mov
mov
sub
repz
inc
jno
pop
fisttps
cmp
adc
test
adc
shll
lcall
pop
cltd
xchg
cld
sub
scas
aam
imul
add
push
addr16
fsubs
or
adc
dec
mov
xchg
dec
daa
data16
xor
in
enter
jmp
and
xchg
push
mov
popa
xchg
into
mov
imul
cld
dec
test
enter
repnz
bswap
inc
sub
fwait
or
rcr
mov
inc
into
jnp
add
outsb
aad
jae
xor
loopne
push
das
push
mov
pusha
adc
ret
icebp
mov
jno
popa
pop
in
test
daa
cmp
rcll
mov
pop
push
aas
mov
xchg
fwait
xor
jae
fisubrs
inc
test
cmovb
arpl
xchg
xchg
jp
jns
pushf
aam
in
out
mov
idivl
fnstenv
sbb
and
cs
xchg
xchg
outsb
push
cmpsb
sbb
mov
dec
sarl
xchg
insb
faddp
xor
arpl
fwait
loopne
shlb
fstpt
notl
in
dec
test
jl
mov
add
dec
mov
and
into
incb
roll
aam
sahf
cltd
sub
mov
scas
or
jmp
mov
dec
xchg
sub
jne
mov
neg
insb
sbb
mov
cs
sub
xchg
sbb
pop
dec
arpl
out
in
and
jmp
cltd
into
push
out
clc
mov
jge
rorl
mov
mov
push
jne,pt
movsl
xor
sbb
mov
stc
les
mov
shl
push
mov
sbb
popa
and
in
ds
nop
je
pop
or
in
addr16
fdivrl
int
mov
pop
push
inc
frstor
in
lods
pop
loope
jge
jne
enter
cli
cmc
mov
xchg
fsubs
test
mov
inc
sub
pushf
jmp
mov
push
or
int
mov
push
and
in
outsb
movsb
inc
add
pusha
iret
mov
mov
adc
and
and
pop
cmp
ljmp
sub
dec
aas
sub
gs
mov
pop
mov
pusha
outsb
mov
sub
cmpsl
lds
idivb
loop
std
into
loope
cmpsl
add
insb
test
out
xor
lea
sub
jl
inc
cltd
rep
add
inc
test
push
std
and
add
test
push
mov
adc
dec
ret
out
sbb
xchg
out
sbb
loopne
jmp
cli
stos
mov
add
mov
clc
mov
inc
mov
mov
aad
shlb
in
dec
popa
insl
pushf
and
cmp
sbb
mov
test
shl
popa
mov
mov
xchg
adc
ljmp
cmp
iret
dec
cmp
icebp
mov
out
aad
pop
mov
pop
add
mov
jge
or
mov
icebp
sub
sahf
mov
mov
adc
pop
pop
cvtps2pi
daa
ljmp
incl
popa
stos
les
cmp
mov
aam
and
pushf
daa
mov
mov
cli
aas
push
mov
sbb
test
fmulp
sub
mov
dec
jge
repnz
dec
xchg
jmp
jmp
or
and
or
and
out
jl
ljmp
aaa
push
dec
je
aam
in
icebp
push
mov
shrb
and
incb
out
fstpt
out
xor
fldt
adc
cmp
lods
rolb
sbb
roll
mov
cmpsl
rorb
add
filds
push
cld
mov
mov
or
mov
add
clc
xchg
xlat
fists
fs
pop
xchg
sbb
push
mov
test
add
push
dec
xchg
mov
or
imul
sub
mov
adc
jle
stos
and
rclb
push
fsubrs
xor
cmp
dec
xlat
dec
test
adc
lea
ljmp
ja
lods
cmpsl
push
mov
cs
mov
repz
xchg
in
aas
adc
out
lret
fs
xor
mov
mov
rcrl
fcoms
xor
cwtl
stc
cmp
push
dec
imul
adc
hlt
add
jle
cmp
into
sbb
mov
push
push
jle
sub
adc
lds
rcr
sub
add
in
test
cmp
adc
push
mov
in
jge
adc
lcall
repnz
dec
shl
rclb
sbb
mov
mov
xor
mov
and
mov
pushf
mov
push
push
outsb
lock
and
shl
pusha
ds
inc
stos
mov
pop
cmpsl
cmp
in
mov
dec
subl
push
sbb
mov
cmp
push
mov
xor
xor
adc
mov
dec
mov
xchg
jno
jmp
add
das
cltd
mov
mov
push
aaa
adc
cwtl
es
inc
inc
fwait
mov
repz
lock
ss
cmp
fs
xchg
push
and
loop
fs
xchg
in
inc
inc
loopne
add
mov
mov
int
xchg
loop
fidivl
arpl
cmc
into
sbb
cmc
gs
cmp
pop
hlt
nop
jns
inc
das
repnz
pushf
cwtl
sbb
clc
push
inc
pop
sti
jb
das
fiaddl
jno
jns
std
xor
test
xchg
out
nop
lea
push
xchg
cltd
insl
gs
lods
retw
nop
jnp
lahf
fidivrs
xchg
mov
out
fdivrs
add
mov
dec
cld
cmp
sub
outsl
scas
cmp
pop
push
stos
mov
mov
dec
cli
jnp
xor
fmull
mov
add
push
push
out
add
inc
insl
sbb
out
jb,pt
icebp
movsb
ja
sub
popa
call
ret
jae
fwait
cmp
mov
test
mov
jne
or
push
rolb
pop
inc
sbb
add
mov
mov
into
mov
int
xchg
inc
int
inc
pop
popf
or
call
leave
divb
cmpsl
jmp
movsl
inc
test
mov
in
dec
pop
fimuls
ss
mov
or
push
in
sbb
divl
adc
in
or
adc
push
aad
xchg
or
lea
orb
xlat
cwtl
lods
mov
add
dec
cli
daa
sub
push
push
cmpsb
xor
jmp
sbb
jbe
mov
sbb
out
xor
xchg
adc
orl
mov
out
addr16
dec
pop
movsb
xor
add
cli
sub
mov
sahf
lret
dec
fdivr
xchg
cmp
lahf
aam
mov
mov
fisubs
data16
adc
adc
int
mov
mov
push
pop
test
mov
cld
in
adc
dec
cmc
jge
je
inc
xcrypt-ecb
cmpsl
lret
mov
les
cmp
xor
mov
ss
jecxz
movsl
scas
mov
sub
aas
adc
test
mov
dec
ficoml
imul
sbb
into
pop
push
lahf
jl
cmp
cmp
xchg
lock
jbe
and
mov
movb
cli
mov
fmul
loopne
mov
cmp
xor
push
insb
outsl
jae
or
mov
cmp
sub
es
sub
daa
add
rep
inc
pop
xor
cli
mov
es
rcrb
jg
es
cmpsl
jmp
jno
mov
inc
adc
pop
sbb
mov
and
inc
ret
dec
aad
push
pop
sbb
cli
cmc
cs
je
fcomps
adc
jp
shlb
pop
andb
mov
out
notb
cmp
out
sub
test
pop
dec
loop
mov
mov
push
imul
cmp
mov
jge
push
xchg
sub
aas
jo
iret
pop
call
push
pusha
insb
imul
sub
nop
lock
mov
pushf
ljmp
dec
jbe
cs
mov
cs
test
out
and
and
inc
popf
dec
mov
clc
push
and
jne
stos
insb
pop
push
sub
lcall
inc
fisttpl
fld
mov
pop
pop
sub
in
std
cs
push
out
icebp
adc
jmp
lret
and
cld
ds
and
and
in
mov
cmpsb
add
jp
in
mov
subb
pop
hlt
or
scas
outsb
jo
pop
ss
and
arpl
out
aas
sub
adc
mov
dec
das
mov
xor
data16
xlat
lods
rclb
push
sbb
fdivs
addl
mov
inc
jmp
int3
mov
jle
call
out
pusha
fs
jb
stos
add
and
stos
mov
daa
push
arpl
lret
and
mov
data16
fsts
addr16
lock
xor
insl
ficomps
dec
pusha
fst
mov
lret
adc
pusha
loope
add
xchg
xchg
sub
mov
loope
dec
mov
cmc
sbb
insl
adc
pop
cmc
fsubrl
ljmp
pop
xor
jb
jle
sub
test
cmpsb
or
inc
mov
inc
pop
into
sbb
mov
test
mov
stc
loopne
adc
popf
jg
cmc
iret
int
xchg
rcll
or
loop
or
lods
int3
imul
push
stc
cli
cmpsl
xor
mov
inc
inc
ss
icebp
sub
jbe
xor
fidivrl
add
pop
add
bswap
mov
aad
mov
xor
mov
je
aaa
lock
push
orl
loopne
push
test
hlt
test
loop
adc
das
inc
ss
leave
push
xor
fwait
aaa
data16
je
pop
scas
mov
sub
pushl
pop
add
sar
subb
int
cmp
stos
int
jns
adc
enter
push
mov
movsl
or
fsts
fldenv
jae
sti
pop
leave
je
inc
push
pop
in
push
mov
lock
cmp
es
push
jle
mov
outsb
mov
or
cld
hlt
cld
mov
test
loope
inc
add
mov
addr16
ret
syscall
or
icebp
movsl
loopne
std
in
xor
and
mov
mov
lea
sbb
add
push
imul
cld
mov
js
jl
sbbl
mov
test
rorl
push
aam
lods
sub
jg
jo
in
shrb
adc
enter
insb
les
mov
rorl
adc
incl
add
mov
push
out
push
movsl
jae
pop
push
test
bound
sbb
popf
mov
sbb
sti
lea
fildll
inc
sbb
add
fdivs
or
dec
fsubs
xlat
or
imul
mov
leave
ret
mov
mov
stos
jp
cmp
push
or
aad
xchg
cmp
inc
mov
in
pushf
imul
mov
popa
dec
jns
cmpsl
sub
inc
mov
notb
cld
call
jp
xchg
sub
add
inc
xchg
and
push
insb
jecxz
push
push
loope
inc
mov
repz
jmp
sbb
xchg
rolb
cmp
mov
lds
ljmp
pusha
nop
shrb
pop
add
add
xor
mov
testl
push
pushf
into
push
loop
push
sbb
cmp
push
sbb
test
int3
inc
jne
fiadds
divb
outsl
mull
jns
dec
mov
jl
popa
sub
movsl
in
cmp
movsl
xchg
xchg
xor
std
xor
in
mov
add
cmp
scas
repz
mov
mov
pop
es
fsubr
mov
ret
mov
pop
mov
mov
hlt
divl
out
imul
movsb
out
out
mov
fs
popa
movsl
lods
and
into
lret
out
push
sub
lcall
adc
int
repnz
sbb
js
xchg
jns
sbbb
out
push
push
sub
in
popf
loopne
sahf
add
pop
fdivr
lock
mov
shrl
sbb
divl
push
cwtl
xor
in
dec
dec
movsb
test
shll
loop
iret
push
cwtl
or
sub
imul
adc
and
mov
xor
xchg
adc
mov
lock
inc
mov
add
and
add
pop
jle
xchg
push
push
sti
imul
jge
sub
ja
sub
mov
nop
rorb
and
pop
push
imul
lret
push
das
mov
or
xor
inc
add
aam
fwait
jnp
insb
in
daa
pop
xorl
inc
aaa
xchg
pop
adc
mov
cli
inc
int
add
or
scas
addr16
mov
mov
arpl
in
orl
jl
mov
xchg
cmp
add
andl
mov
inc
jp
stos
inc
pop
mul
xchg
adc
int
cmp
sbb
lds
cmp
lds
pushw
test
sub
sub
mov
mov
sub
insb
outsb
cmp
pop
int
ljmp
mov
dec
dec
cmp
imul
sub
mov
cld
xchg
jge
lahf
add
lea
popa
sub
sub
sub
enter
sbbl
push
neg
test
into
aas
push
in
dec
ja
jno
xor
sarb
cli
cmp
les
xchg
jb
pop
into
les
fdiv
lcall
cmpl
scas
rclb
jbe
insl
and
and
and
cmpsl
push
leave
adc
je
cmp
rdmsr
roll
mov
in
add
mov
aam
sahf
in
stos
data16
xchg
repz
lret
push
lea
outsl
cmpsl
call
les
es
push
jg
negb
insl
iret
xor
ljmp
mov
rcrb
sub
mov
mov
fstpl
jmp
je
cmp
icebp
cmpsl
insl
jbe
jp
shlb
adc
pushf
pop
div
inc
xchg
add
out
aas
cmp
push
out
scas
iret
or
dec
fs
mov
movsb
dec
mov
out
testl
rcr
aas
mov
int
bnd
ret
cmp
cwtl
cmpsb
ret
adc
add
fists
or
sti
dec
sub
xchg
sub
cmc
mov
movl
in
jp
cmpsl
push
push
or
xor
shl
mov
bound
movsl
adc
ja
jp
jge
sti
jno
sbb
and
mov
testb
shrl
paddq
arpl
dec
in
aas
xchg
out
mov
pusha
test
xlat
aam
or
adc
ret
cld
xchg
dec
push
je
lret
jge
and
xor
mov
pop
std
jo
mov
push
ret
data16
cld
mov
cmc
inc
jmp
mov
inc
xchg
jae
sbb
stc
cmpsb
aam
xorb
arpl
sub
fidivrl
ljmp
mov
xorl
into
push
hlt
repz
cltd
stc
test
mov
push
cmpl
mov
mov
sub
push
fnstenv
push
cmpsl
and
inc
aad
sub
mov
bnd
test
mov
lods
rorb
fiadds
imul
lret
jp
iret
aaa
fcmovnu
jb
adc
into
sti
out
cmp
sbb
mov
cli
and
xchg
loope
push
xor
sahf
jmp
jns
fisttpll
add
mov
imul
xchg
rorb
cltd
idiv
push
mov
push
and
dec
lea
test
jge
clc
bound
or
sbb
adc
cmp
in
xor
int
scas
xchg
nop
pushf
jl
shrl
pushf
sahf
sub
xchg
scas
mov
ja
js
mov
jmp
push
sbb
adc
in
xchg
cmp
scas
mov
push
mov
cmp
lret
jns
xor
add
daa
cmp
jno
shr
push
xchg
loop
pop
cmc
scas
push
data16
ret
scas
lahf
shrl
xchg
push
xor
dec
jae
jnp
cmc
bswap
aas
cmp
push
mov
mov
push
insl
and
sub
loopne
jl
lds
scas
in
ljmp
std
iret
mov
fstps
cwtl
sub
loope
ss
push
lahf
pop
pop
shrl
dec
push
push
mov
pop
inc
aam
cmp
out
shlb
adcb
ss
repnz
sub
les
jp
call
xor
decb
test
and
push
rcll
roll
sti
xchg
int
push
cltd
pop
mov
or
inc
add
in
dec
push
or
mov
scas
cwtl
cld
lret
adc
mov
xchg
add
popf
push
rcll
jbe
loope
lret
xor
test
lret
push
nop
shrb
xor
adc
pusha
mov
inc
push
sub
movsb
imul
call
leave
sub
jp
js
in
cmc
rorl
pusha
xor
xor
pop
bound
repnz
push
jno
jecxz
imul
sar
mov
xchg
inc
cmpsl
cmp
pop
nop
push
pop
test
xchg
xchg
push
mov
mov
pop
out
lds
sti
das
dec
push
popa
rolb
fnsave
adc
mov
out
je
adc
cmpl
data16
fistpll
adc
sub
cmp
into
mov
loopne
mov
test
push
fadds
gs
ljmp
ljmp
decb
movsb
inc
addr16
sahf
sub
iret
jge
pop
cli
icebp
or
call
jg
aam
jns
out
leave
jb
out
rclb
xchg
loope
arpl
leave
mov
data16
dec
and
les
out
sbb
pop
adc
scas
cwtl
jg
sbb
and
xor
inc
testl
xor
lds
movsb
push
stc
xchg
arpl
punpckhdq
lcall
fidivl
rolb
jg
loope
addl
cmp
mov
mov
dec
shll
popf
sbb
xor
sub
lret
adcb
or
jmp
sbb
mov
xor
icebp
enter
imul
adc
pop
ror
bound
push
xchg
cld
inc
dec
jns
jg
and
out
sbb
fst
data16
fcoms
stos
lret
pop
sbb
xchg
pusha
loopne
xor
add
add
push
lret
lahf
xor
jne
cld
lret
push
jne
fcmovbe
dec
fscale
bound
data16
bound
xor
mov
ds
stos
sub
dec
aad
enter
fisttps
pushaw
cmpsb
pusha
push
cltd
or
aaa
test
popa
fldln2
jge
or
pop
adc
inc
add
aaa
dec
add
pop
push
pop
pop
daa
fdivrs
xchg
test
aam
adc
jno
cmp
dec
ja
push
mov
ret
es
xor
push
lods
inc
in
fcmovnb
mov
adc
inc
out
loopne
jns
ret
repz
fildl
setg
jnp
pop
orl
jno
push
aaa
push
push
mov
mov
adc
call
mov
or
fldcw
sub
icebp
adc
push
add
aas
adc
les
dec
mov
jl
dec
jmp
sarb
mov
stos
adc
test
out
aad
loopne
movb
rorl
in
inc
jl
cli
dec
lods
imul
in
outsb
and
clc
repz
add
pop
push
add
sub
negb
lods
mov
shl
xchg
mov
leave
mov
inc
bound
int
or
out
dec
jp
push
push
mov
test
je
ja
and
jns
pop
lcall
push
mov
gs
clc
jge
and
lret
pop
mov
insl
fcomip
push
fisubrs
mov
das
and
vpsraw
push
loope
in
mov
mov
iret
stos
mov
push
loope
mov
sub
cmp
or
popf
inc
add
out
pop
fwait
adc
and
jg
jno
adc
out
dec
xor
aam
pop
push
clc
jb
lcall
std
sbb
es
testb
stc
popfw
sarl
push
mov
mov
rcrl
shlb
out
cmp
lret
adc
mov
inc
shr
test
mov
fists
or
movsb
mov
pop
std
loopne
lock
mov
xor
mov
iret
repnz
sbb
xor
add
mov
ret
cmp
pop
dec
inc
fmuls
push
scas
or
out
mov
test
mov
mov
pop
int3
pop
jmp
shlw
in
out
bound
fimull
push
jb
sub
mov
sub
sbbb
mov
cmpb
xchg
arpl
xchg
cmpsb
in
cwtl
jge
neg
enter
testl
fs
mov
outsb
popa
and
and
pop
clc
rclb
push
fwait
or
sub
fldcw
and
gs
jge
mov
movsl
pop
sbb
dec
popf
sub
and
inc
xchg
daa
addr16
cmp
jne
sbb
adc
mov
call
out
add
dec
pushf
xchg
dec
jg
insl
push
xchg
das
fisttps
mov
in
mov
mov
sub
flds
push
imull
jecxz
andl
jp
pop
and
ds
gs
sbb
shll
dec
add
nop
push
inc
aaa
popl
mov
lods
inc
outsl
sbb
cwtl
jbe
jmp
nop
dec
ret
xor
cli
or
mov
clc
clc
test
cwtl
subb
call
inc
xlat
lods
and
inc
jecxz
push
int
inc
xor
stc
loope
push
in
test
das
xor
pushf
jns
pop
xor
cmpsl
xchg
out
popa
cmp
hlt
ja
rcll
mov
adc
test
inc
lcall
loop
js
mov
cmp
and
xlat
cmp
jmp
or
pop
idivb
sub
shlb
ljmp
icebp
pop
push
lods
repnz
adc
sub
lods
xchg
sub
scas
je
cmpsl
cmpsb
and
jmp
mov
push
mov
inc
fsubrp
inc
mov
pop
outsb
imul
fs
icebp
jnp
jne
cmp
shrl
and
sbb
inc
fwait
sub
inc
sbb
lds
inc
es
cmpsl
gs
inc
inc
inc
and
cmp
xchg
nop
pushf
jmp
aam
stos
dec
mov
enter
in
jg
xor
xor
xor
sarl
cmpsb
popf
ja
rcrl
imul
sbb
push
aas
sbb
int
xlat
pop
sti
lret
cmp
gs
xchg
lock
call
xor
repz
jno
stos
shlb
int
mov
xchg
and
jp
pushf
lods
xchg
inc
leave
xchg
jae
sbb
test
mov
and
adc
jae
loop
fs
fwait
movsl
dec
iret
aas
and
jg
aaa
mov
daa
popf
lret
xchg
or
xor
scas
imul
jo
into
pop
insl
add
jns
xchg
mov
repz
int
in
xchg
imul
adc
mov
jg
pop
flds
cld
and
mov
xlat
sbb
movsl
xchg
mov
cwtl
cltd
xchg
and
fsub
push
aad
sarl
xchg
cmc
hlt
xor
negl
in
sbb
iret
sbb
adc
sbb
sbb
cltd
ret
xchg
daa
jp
out
stc
mov
jae
test
xor
movsl
push
cs
cmp
aas
rcrl
xlat
ficoms
mov
or
push
mov
push
push
sti
cld
mov
rcrb
jg
movsb
ja
imul
inc
test
aad
jle
mov
ret
call
push
add
sbbb
xchg
and
push
out
ds
mov
dec
sti
and
inc
mov
xchg
andb
mov
test
dec
xor
insl
ja
push
pop
in
stos
pop
flds
or
push
pop
mov
adc
mov
mov
les
repz
jl
pop
mov
in
mov
sbb
add
cmp
out
mov
adc
mov
mov
mov
mov
xor
loop
aad
shll
jnp
ja
push
pop
or
lea
repnz
repz
xor
repnz
jle
outsl
cmp
cmp
lods
leave
xchg
dec
mov
fs
mov
nop
adc
out
js
dec
pop
xor
imul
mov
mov
inc
jns
sahf
pop
jae
adc
jns
pop
cmp
int3
je
clc
insb
in
pushf
or
mov
push
es
xchg
lock
inc
call
faddl
daa
lret
clc
outsl
pusha
add
gs
insl
vpaddq
in
insl
sbb
and
je
xchg
outsb
dec
push
sbb
mov
outsl
mov
xchg
add
mov
or
arpl
inc
fcmovnbe
add
push
push
loopne
or
ja
mov
cmpsl
push
push
sub
arpl
out
imul
movsl
push
xor
pmaxsw
rcll
pop
xchg
test
outsb
stc
arpl
sub
dec
pop
mov
dec
dec
rclb
mov
loope
jmp
xlat
sub
mov
fcmovbe
into
fisubrl
mov
inc
loope
dec
mov
and
add
fwait
loope
loopne
inc
dec
sbb
mov
fisubs
jmp
jno
in
mov
cmp
jg
pop
jle
stc
cmp
inc
inc
xchg
sbbl
arpl
jb
out
cmc
rorl
ljmp
jle
cmp
mov
mov
mov
push
xchg
imul
inc
inc
cwtl
xlat
pop
sbb
mov
ret
inc
nop
push
mov
cmp
ja
sub
push
inc
sub
sahf
std
cmp
aam
sahf
and
imul
pop
dec
lret
data16
cld
ret
cs
lock
arpl
lods
cmc
iret
fcoms
sti
sub
inc
cmp
loope
and
daa
pop
adc
das
sbb
push
sub
xchg
stc
data16
ret
xchg
mov
leave
test
mov
pop
xor
or
testb
lcall
movsl
cmp
xchg
in
xor
cmp
jb
mov
inc
xchg
icebp
les
into
pusha
rcrb
loopne
push
gs
imul
call
xlat
jo
jne,pt
xor
je
xchg
jno
inc
inc
pop
mov
lds
sub
imulb
mov
loop
insl
add
addr16
add
push
fisubs
test
dec
pop
out
ret
out
push
pop
gs
jo
into
stc
or
and
arpl
jno
xchg
shlb
dec
mov
call
pop
push
jns
out
cwtl
stc
in
out
mov
and
ret
out
mull
cltd
repz
test
js
pop
mov
xchg
pop
gs
adc
sbbb
lock
sbb
int
cwtl
ljmp
mov
into
jle
out
jg
imul
js
mov
dec
into
pop
test
jecxz
or
mov
inc
push
xchg
cli
cmp
push
popa
sarl
fsubp
aam
repnz
in
adc
add
xchg
in
in
das
sub
adc
lds
pop
jno
jnp
repnz
push
xor
mov
and
inc
int3
std
cltd
scas
out
dec
push
add
sbb
push
inc
push
orl
and
call
push
ret
cmpl
add
jecxz
sahf
mov
xor
adc
jp
ss
insl
dec
into
fmul
sbb
pop
pop
mov
addr16
popf
dec
mov
fstpt
sbb
mov
push
outsl
jnp
stos
nop
addl
shll
or
popa
cltd
popf
rcl
scas
repz
xlat
pop
mov
roll
test
jle
sbb
xor
lods
adc
popf
fstpt
push
cmp
arpl
movsb
sbb
xor
mov
call
stc
mov
dec
add
cmp
dec
arpl
xor
scas
xor
arpl
mov
push
mov
inc
sub
mov
int
mov
repnz
bound
lods
lret
sbb
pop
insb
add
push
popa
jae
push
sub
push
lds
in
push
and
inc
mov
and
pop
fnstcw
lahf
sbb
inc
pcmpeqb
and
cltd
sbb
xchg
inc
std
data16
xor
test
cmpsb
das
aas
fmul
pop
push
idivb
mov
push
push
sbb
daa
sub
pop
xchg
std
test
sahf
scas
adc
and
test
pop
fldcw
push
or
pop
outsl
mov
jo
repz
cmc
mov
mov
push
gs
pop
inc
js
push
aaa
sub
lock
mov
dec
mov
hlt
shl
sbb
les
addb
mov
pop
adc
pop
or
mov
mov
push
sub
xchg
xchg
adc
das
xor
mov
add
cmp
ds
and
lahf
add
loope
scas
cli
in
outsl
xchg
pop
push
inc
movsl
jle
dec
roll
or
pop
lea
scas
outsl
sbbl
scas
push
mov
mov
int3
test
mov
push
call
es
iret
sub
gs
mov
cmp
call
sub
enter
mov
mov
pusha
adc
mov
push
mov
test
int
mov
sbb
cmpsl
xor
cmp
lcall
or
jp
mov
mov
pop
lods
stc
popf
xor
xor
gs
stos
mov
xchg
andl
mov
mov
inc
sbb
out
dec
push
subb
fldcw
xor
sub
cwtl
rcrb
cwtl
popa
mov
int3
les
jg
imul
push
cmp
cmp
mov
add
jmp
shlb
stos
nop
cmpsl
icebp
and
stos
xchg
orl
or
pop
push
movsl
cmp
and
jo
iret
ror
sbb
out
mov
mov
test
mov
lock
dec
xchg
pusha
push
dec
dec
enter
adc
ss
cmpsb
inc
inc
mov
push
xchg
push
aam
pop
icebp
pop
adc
cmp
jo
sub
bound
loopne
ret
gs
jns
mov
test
sub
jecxz
sbb
xchg
and
not
std
cwtl
loopne
in
cwtl
add
idivl
jge
xor
jns
xor
push
mov
out
fwait
mov
push
dec
test
or
cmp
pop
mov
inc
lea
push
jmp
daa
sbb
out
xchg
in
das
mov
lcall
imul
sbb
pop
andb
imul
jae
ds
sbbl
inc
shrl
mov
enter
push
pop
push
mov
gs
inc
cli
or
pusha
stos
stc
add
imul
pop
add
sbb
nop
aaa
mov
jecxz
mov
xchg
movsb
xchg
in
or
xchg
leave
cmpsl
add
lahf
xchg
gs
int
loopne
or
pusha
pop
adc
jl
jae
mov
add
insl
ret
mov
fistps
fmulp
inc
gs
xchg
out
repz
mov
push
rolb
cld
dec
aad
add
in
mov
push
out
ljmp
mov
push
lret
cmc
ret
pop
push
inc
adc
mov
sahf
cmpsb
cmp
out
cld
jns
cmp
enter
pop
sbb
int3
sbb
cmp
xchg
and
lcall
out
pop
dec
insb
lcall
ret
push
cmp
sbb
scas
lds
cltd
xchg
ds
scas
xchg
out
out
out
sub
fldenv
mov
inc
clc
pop
sahf
sub
or
stos
addr16
popf
dec
dec
mov
negl
addl
lcall
mov
cwtl
daa
jge
inc
rol
mov
pop
subl
test
psllq
es
mov
mov
jle
in
sbb
clc
xor
mov
mov
movsl
fsubr
out
sub
in
imul
jnp
pop
push
mov
xchg
jp
mov
cmp
mov
or
pop
cmp
sub
cltd
lcall
mov
push
repz
mov
pushf
jecxz
js
mov
mov
pop
js
sub
aam
sbb
cmc
xor
orb
cmp
cltd
xchg
push
add
mov
lahf
mov
shl
mov
sbb
jmp
aaa
jl
int
shll
jbe
subb
and
mov
cmp
std
pop
fcmovbe
lret
stos
xor
jmp
test
jns
add
sbb
dec
fs
jg
fs
mov
fcomps
push
stos
xlat
jle
inc
es
sahf
cmp
pop
mov
out
les
inc
push
jne
xor
addl
jecxz
xlat
and
popf
sub
out
shrb
pop
inc
ficomps
inc
adc
add
mov
mov
jl
mov
dec
pop
xor
xor
jb
call
and
jbe
cld
xchg
sbb
data16
push
pop
popa
stc
loopne
fnstenv
arpl
xor
rorl
push
sub
out
jecxz
call
daa
mov
data16
fs
outsl
cs
cmp
std
out
mov
add
fwait
mov
outsl
scas
jle
test
cmpb
test
pop
outsb
mov
push
fstpl
fs
test
repnz
aaa
mov
pop
push
jecxz
cmp
push
ds
xor
dec
mov
stos
inc
cmp
rcll
mov
push
mov
cltd
inc
xor
dec
dec
mov
jb
cli
incl
sbb
pushf
or
sub
ret
mov
movsb
dec
add
ljmp
scas
shrb
shl
shlb
cld
push
cmp
sub
push
ret
dec
jge
test
adc
cwtl
cmp
mov
shlb
rorb
mov
sub
into
insl
cltd
inc
cwtl
mov
mov
pop
mov
addr16
ja
aam
pop
std
orl
inc
js
arpl
push
dec
enter
popf
and
push
sub
sub
call
or
orl
loop
xor
and
mov
dec
inc
les
into
inc
lock
xchg
push
call
cmp
jae
pop
push
loopne
arpl
pop
mov
inc
out
cmp
sub
or
and
pop
clc
push
push
stos
testl
xor
lea
push
xchg
sahf
fmull
add
out
mov
adc
adc
xor
ss
push
stos
push
adc
lds
add
in
jl
cmpl
int3
das
je,pn
aam
xchg
lods
mov
mov
movsb
mov
mov
dec
cmp
xor
dec
jp
pop
cwtl
std
add
xor
mov
andnps
repz
pop
push
and
fnstcw
pop
mov
lcall
mov
pop
pop
test
in
mov
pop
sahf
and
enter
pop
adcb
lcall
xor
fwait
testl
or
xorl
push
int
mov
in
jns
mov
cwtl
cmp
mov
arpl
push
push
imul
mulb
cmc
ret
jb
shll
cwtl
rcr
xor
cmp
addr16
adc
mov
in
jb
lret
adc
or
xchg
cs
xchg
xorb
testb
pop
popl
ret
loope
repnz
sub
ss
adc
xchg
mov
mov
stc
sahf
sub
push
add
sti
mov
pop
stos
xor
lods
sti
call
xchg
loop
ljmp
nop
sbb
jbe
xchg
push
jg
fisubl
pop
pop
sub
cmp
fdivr
xor
bound
int3
mov
mov
out
sarl
cltd
lock
rclb
sub
lods
stos
pop
lea
rolb
stc
mov
fsubp
inc
aaa
dec
adc
test
sub
das
inc
ret
jmp
mov
jle
shll
mov
int
sub
ja
or
cli
or
mov
imul
fwait
out
add
mov
add
mov
sbbb
or
pop
sub
fucom
in
add
test
ja
inc
cmc
dec
pop
mov
dec
fistps
jb
sub
mov
scas
jae
xor
jae
push
or
call
push
or
pop
push
out
cwtl
cmp
test
imulb
ja
adc
inc
cs
or
and
fsubrl
xorl
fmul
lret
stos
movsb
int
cli
cmp
jno
mov
xchg
lea
mov
xor
aaa
inc
xor
pushf
icebp
and
mov
lods
arpl
lahf
xchg
notb
hlt
mov
test
pop
mov
sbb
xor
push
add
scas
inc
mov
jb
pop
dec
or
and
lret
and
xchg
jl
cmp
fimull
push
loop
les
push
mov
clc
fimuls
shlb
bound
repz
ss
push
cmp
aas
imul
inc
out
loopne
mov
stc
sbb
cs
ds
mov
pushf
fcoms
arpl
lods
add
fstpl
mov
subb
aam
call
js
mov
xor
push
pop
insl
and
jg
mov
jp
lea
lock
stos
hlt
sub
inc
stos
test
js
jge
or
sub
add
sar
movsb
mov
jmp
imul
in
xchg
jne
filds
jmp
push
test
push
mov
inc
mov
pop
stos
je
fwait
inc
jmp
push
cmp
dec
test
pusha
outsb
data16
addr16
xchg
inc
cltd
xchg
nop
inc
je
xchg
sbb
or
ja
pop
rcl
jl
mov
test
mov
in
xor
pop
xlat
cmpsb
xor
fucomp
or
inc
adc
js
ljmp
dec
fmuls
mov
xchg
dec
cmpsb
inc
mov
int3
pop
dec
add
inc
mov
pop
or
cli
cmp
pop
insb
rorl
dec
cwtl
fiaddl
mov
stc
and
fadd
inc
loope
jmp
jle
dec
jns
inc
or
cld
dec
daa
movsb
pop
add
cld
cli
loopne
jmp
mov
cltd
add
cs
add
lea
jbe
sbbl
mov
aaa
loopne
popf
sub
sahf
adc
into
sbb
lds
sbb
mov
dec
mov
cmpsb
es
xchg
mov
es
mov
bound
scas
jno
cmp
mov
in
inc
mov
ror
inc
jl
and
push
int
mov
cmp
lea
std
in
and
and
xor
movsb
lods
mov
loopne
not
mov
dec
cmp
outsb
in
decb
push
mov
int
xor
pop
movsb
push
pop
push
dec
mov
sub
jno
ror
hlt
add
mov
push
aad
xor
stc
cmpsl
insl
and
dec
jmp
js
mov
adc
jg
mov
jno
test
jnp
cltd
mov
jnp
dec
sbb
lret
jle
data16
mov
dec
dec
jmp
sub
inc
loop
pushw
imul
sbb
shrd
out
pusha
fnsave
and
lds
push
lret
icebp
mov
and
mov
mov
add
mov
push
jl
xlat
aaa
std
addr16
test
jmp
aad
aam
sbb
cltd
hlt
jae
push
xchg
sub
sti
sub
stos
jp
fstpl
les
sub
sub
cmp
decb
inc
push
stc
push
jnp
pop
lret
out
xchg
dec
dec
std
inc
mov
sbb
std
movsl
or
enter
inc
xchg
pop
retw
push
dec
lcall
mov
lahf
cmp
ret
pusha
lds
jo
sub
leave
cmc
enter
sahf
loope
lret
enter
mov
push
xor
xchg
lahf
vrcpps
add
jno
dec
popf
inc
sbbb
or
enter
xor
push
jns
aaa
stos
lcall
mov
in
xchg
rolb
into
dec
cmp
loopne
fwait
or
xchg
or
data16
and
xor
lcall
xchg
cmp
inc
dec
pop
ret
lcall
mov
mov
or
xor
cmp
jmp
test
xchg
adc
push
xor
dec
pop
push
icebp
add
xchg
dec
adc
mov
stc
mov
loop
fisttps
push
cmp
xor
lret
lret
push
cmc
xor
mov
adc
jg
movsl
imul
mov
and
mov
lods
mov
adc
out
ret
jmp
push
mov
xor
push
std
mov
jb
popa
fadd
inc
popf
sbb
fprem
roll
dec
outsl
scas
gs
pop
push
inc
iret
mov
test
ja
mov
popl
mov
jb
or
xor
mov
stc
sahf
jmp
jno
jno
and
aam
push
mov
adc
jns
sub
adc
flds
mov
dec
pop
icebp
jno
mov
mov
mov
repnz
jns
out
idivl
aaa
inc
jb
and
jno
dec
mov
outsb
pop
or
es
into
xchg
adc
mov
iret
push
sti
rolb
fsubrl
nop
jae
sub
lret
addr16
in
jg
aaa
jle
pushf
pop
ljmp
xor
push
jecxz
clc
pop
fdiv
movl
jecxz
js
pushf
gs
or
sbb
xor
sbb
stc
mov
inc
sbb
je
and
xor
addr16
or
nop
adcl
scas
sub
dec
lcall
mov
lcall
jno
sub
rorb
mov
popa
mov
arpl
stos
push
iret
jge
add
or
jl
pop
inc
add
mov
das
iret
stc
in
fistl
mov
adc
loope
mov
inc
jmp
jb
cmp
lods
cmp
inc
push
dec
mov
imul
xchg
daa
adc
fisttps
es
jne
xchg
mov
push
fcmovnu
fnstcw
jp
mov
mov
inc
mov
pop
cmp
dec
sahf
add
int
scas
int3
cmp
nop
inc
pop
xchg
mov
repnz
jne
mov
adc
iret
das
mov
lods
js
mov
pop
mov
or
div
push
mov
dec
outsl
scas
sarl
jl
arpl
rol
push
fldl
sbb
add
movsb
dec
mov
out
sub
sahf
sbb
push
stc
mov
std
iret
sbb
insb
int3
mov
ds
add
push
adc
clc
sbb
cmpl
mov
cltd
adc
loop
dec
xlat
mov
shll
or
stc
inc
call
push
or
cmc
insl
jp
xchg
adc
xchg
push
mov
adc
inc
out
shlb
shrb
or
lret
cmp
cmp
sahf
jg
xchg
mov
push
mov
shr
js
les
out
push
lahf
inc
xchg
pop
popf
bnd
mov
and
sub
nop
push
shrl
fildl
pop
lock
pop
andl
sub
push
or
add
adc
arpl
adc
inc
mov
or
setge
int3
adc
mov
scas
sarb
sbb
dec
orl
push
or
call
fcomps
in
fwait
adc
xchg
dec
movsl
jp
addl
aad
cmp
push
push
nop
mov
cmp
or
pop
inc
std
clc
xchg
rdmsr
dec
outsb
jns
les
arpl
bound
scas
pop
mov
xchg
dec
cmp
jmp
xchg
jne
jp
jecxz
cmp
aaa
jae
in
fnsave
adcl
pop
push
out
xor
pop
mov
mov
fs
and
rcrb
in
fistpl
adc
in
and
stos
add
jp
in
int
scas
push
jno
scas
incl
leave
sbb
das
push
jb
fidivs
aad
les
aam
idiv
inc
pop
cld
fdivr
orl
xchg
dec
pop
js
cltd
bound
sbb
jmp
sbb
push
dec
mov
push
inc
pop
or
or
pop
lods
mov
pop
in
dec
xorb
rep
movsl
out
stos
jmp
test
in
in
pop
jne
fidivrl
push
sbb
push
stos
sbb
shlb
mov
incl
das
loopne
dec
jp
negl
inc
sub
je
cmc
mov
stc
xchg
test
scas
cld
in
xchg
testl
mov
mov
mov
out
sbb
lock
inc
in
sbb
xor
insl
pop
jb
jbe
and
lock
xchg
adc
pop
inc
cmovnp
cmp
and
repnz
pop
scas
mov
pop
xchg
popa
movsl
je
push
in
pop
adc
test
call
mov
pushf
neg
and
mov
out
sbb
jge
cltd
arpl
inc
ds
int3
scas
adc
inc
pop
dec
mov
add
repz
mov
int
cmp
add
dec
into
cld
push
sbb
gs
loope
jnp
lea
push
mov
mov
adc
pushl
sahf
out
rcl
push
adc
js
andl
jae
xchg
push
call
in
mov
xchg
and
jns
push
cmp
es
movsl
fisubrl
fcomps
mov
inc
aas
out
jbe
loope
mov
xor
repz
fdivrs
cmc
dec
testl
or
repz
sbbl
jl
inc
sub
inc
jnp
and
sbb
adc
pop
push
std
push
adc
inc
xchg
xor
cmpsb
mov
sbb
jge
and
cmp
loope
inc
jne
clc
cmpsb
or
push
scas
scas
sbb
sti
push
aad
imul
sbb
out
pmaxsw
cmp
and
cmp
or
push
movsb
cmp
in
lds
or
das
xor
out
cltd
pop
jns
lahf
lods
cwtl
stos
mov
jecxz
es
stc
or
sbb
fimull
fucomp
lcall
ljmp
insl
fdivs
mov
mov
andb
sub
pop
fwait
push
insb
das
sub
sbb
js
dec
dec
jno
jp
jl
dec
scas
mov
rorl
inc
sbb
sbb
jge
push
movsb
pop
push
mov
pop
cltd
inc
mov
and
jge
mov
and
sub
jns
cmpsl
orb
adc
ja
pop
mov
and
sub
in
jns
scas
flds
adc
pop
pop
add
shl
pop
in
movsb
add
xorl
push
sub
into
inc
cmp
int3
test
mov
cs
scas
cmp
clc
imulb
inc
aaa
sarb
jecxz
and
fcomps
loope
vandnps
pop
fdivrs
jno
test
es
lods
repz
pop
cltd
add
push
mov
in
sbb
das
stos
movsl
mov
mov
mov
fcmovnu
push
sbbl
aad
into
adc
xor
mov
es
mov
cmp
imulb
shlw
aad
mov
dec
sti
stc
mov
and
mov
xor
mov
xchg
ficoms
ja
enter
insl
mov
mov
daa
jne
adc
xchg
push
rclb
dec
mov
fs
cmp
cs
inc
leave
sub
stos
xchg
lds
sub
jnp
rol
fimuls
adc
ljmp
loop
sar
sub
pushf
add
popa
xor
sub
out
push
fldcw
int3
notb
or
jg
and
mov
push
out
xchg
add
hlt
dec
jmp
adc
lahf
or
xchg
ljmp
adc
popf
inc
mov
aam
jmp
in
push
and
xor
mov
pop
xchg
je
pop
cwtl
fnsave
mov
lds
sbb
sti
in
mov
mov
pop
xor
xorl
or
cmpsb
rcl
jle
cs
jle
cmpsb
add
jno
and
in
sti
test
adc
cmpsb
ds
pop
add
fs
std
sti
inc
xchg
xchg
jle
arpl
adcb
pop
cli
and
jge
test
cmp
js
sbb
daa
out
push
push
mov
mov
outsb
mov
add
loope
imul
cmp
int3
bound
pop
adc
daa
xchg
sbb
aaa
jge
jp
orb
pop
arpl
into
stc
in
cmp
arpl
cltd
mov
mov
inc
add
mov
pusha
imul
xchg
pop
push
xchg
lcall
leave
mov
cld
mov
jle
sti
ss
or
and
mov
mov
inc
push
rcrw
sub
cmp
or
mov
dec
in
mov
addl
pop
fimull
addb
dec
jnp
or
dec
nop
mov
hlt
cmp
pusha
cmp
adc
ljmp
mov
int
shll
sti
sub
movsl
mov
cmpsb
iret
push
xor
xchg
sbbl
loope
aam
inc
jmp
mov
sub
dec
popa
pushf
icebp
cmp
lea
addr16
sbb
fcos
stc
psubusb
test
sahf
pop
xor
push
rclb
out
stos
push
fmul
adc
mov
fistps
jae
popf
or
pop
bound
xchg
cmp
cmp
mov
imul
xor
fisttps
mov
adc
lcall
mov
lods
mov
pop
fnstsw
insb
cmp
mov
xor
or
in
stc
orl
inc
adc
cmp
lret
inc
sub
dec
pop
and
leave
std
fsubl
andb
add
sbb
into
adc
jmp
sbb
push
test
and
mov
xor
popf
subb
shl
subb
xchg
mov
arpl
out
sahf
iret
cmp
test
ret
dec
mov
dec
add
int3
sbb
and
cs
and
push
fstpt
fwait
aad
test
jb
lret
sub
loopne
ljmp
pusha
movsl
imul
mov
stc
add
nop
mull
mov
inc
arpl
xor
sarb
cmp
mov
or
pop
testl
lea
lods
rcrl
cmp
xchg
movsl
fisubs
pop
cmpsl
xchg
mov
mov
aam
int
idivl
cmp
sbb
xchg
xor
out
pop
xchg
jae
icebp
and
mov
cltd
in
or
adc
sbb
aas
add
jbe
jnp
xchg
loop
bound
inc
mov
add
ret
call
inc
out
test
sti
shll
xorb
or
add
dec
sub
rclb
imul
stos
sbb
jbe
push
dec
dec
pop
addl
pusha
inc
xlat
or
push
retw
jnp
jne
mov
or
nop
pop
out
into
mov
sbb
and
xchg
fistpl
jp
adc
or
movsl
repz
adc
xchg
dec
mov
mov
push
int
and
bound
lds
mov
in
jns
and
pop
inc
xchg
pop
xchg
cld
clc
stos
in
sub
fs
addr16
into
int3
mov
ds
or
jbe
sub
nop
mov
sub
mov
les
or
inc
xlat
dec
jno
push
xor
add
cmp
sub
push
sub
nop
inc
cmpsl
or
cwtl
pop
into
stos
mov
push
ja
fcoml
bound
pop
xchg
sti
in
jp
push
inc
xchg
mov
sbb
sub
movl
xor
or
jae
push
hlt
repnz
mov
add
inc
cwtl
popf
in
imul
ja
popf
inc
pop
sbb
jle
std
push
jmp
stos
lods
fistpl
or
aas
lods
sub
inc
adc
stos
mov
leave
fnstcw
pop
imull
inc
xchg
sbb
pop
jmp
js
push
outsl
dec
add
inc
inc
mov
dec
push
mov
mov
inc
jae
jmp
fmull
pop
mov
mov
jno
lea
and
and
les
inc
roll
stos
xor
es
xor
fisubrl
sub
cmpsb
xor
jecxz
pushf
into
decl
dec
repnz
cmp
shl
cmp
push
mov
adc
fs
lods
outsb
sbbl
and
sub
imul
push
xchg
int3
aas
inc
aam
out
mov
aam
jge
jnp
xor
push
rol
push
mov
cmp
ret
cmp
pop
adc
cmp
push
fs
jo
andb
int
pop
lock
adc
xchg
insl
jge
jno
fbstp
out
pop
ret
std
mov
xchg
mov
mov
cmp
sub
je
cli
xlat
xchg
es
inc
cmp
outsl
rol
cmpsl
mov
mov
popa
xor
jge
xor
aam
lds
sbb
out
push
inc
mov
sub
xor
out
lock
cli
cmp
xor
fistps
mov
sub
jae
dec
js
jl
rol
lahf
sub
rorl
mov
adc
mov
sarb
pop
add
cmp
add
pop
je
add
rcl
bswap
cmp
xchg
ljmp
lret
mov
mov
pop
xor
add
or
addr16
negl
xor
xchg
int3
adc
push
xor
mov
pusha
addb
dec
inc
loop
rcr
in
ficompl
push
push
lret
cs
mov
xlat
sbb
sti
jb
jmp
dec
and
adcl
lock
xor
cmp
push
sub
loope
repnz
aas
je
sbb
jge
mov
and
mov
frstor
xchg
aad
push
dec
leave
fcmovnb
xchg
add
aas
inc
outsb
lea
rcrl
pop
push
addr16
cmpsl
xor
dec
fcmovnb
ja
add
popl
movsb
jbe
cmp
outsb
push
and
cli
scas
cmp
aad
or
int3
aaa
outsb
dec
das
pop
push
aaa
sub
add
aas
pushf
stc
adc
pop
fwait
jne
fistpl
inc
scas
or
push
aas
jb
out
and
push
fwait
repz
push
fnstenv
iret
push
cli
mov
scas
cmpsb
lods
push
rcrl
scas
sub
push
push
sbb
movsl
cmpl
mov
cld
sub
roll
lds
stc
xor
cltd
mov
jge
cmp
ret
pushf
jmp
xchg
aas
mov
mov
sar
shl
jns
aaa
xchg
andl
push
nop
out
push
mov
mov
inc
mov
in
cwtl
enter
adc
mov
or
inc
rorb
sahf
xchg
iret
aam
xor
jbe
or
mov
aam
mov
mov
shll
mov
std
mov
insb
pop
lock
int3
cmpsl
subb
jmp
xor
js
xor
leave
movsb
test
mov
xor
cs
iret
bound
cmp
lcall
push
and
pop
mov
cmpsb
ret
cltd
ss
rorl
add
fwait
jl
mov
mov
and
inc
ljmp
in
movsl
jl
insl
xor
or
sbbl
notb
fisttpll
std
mov
pop
cmp
fcmovne
adc
xor
jbe
mov
cmp
pushf
dec
call
in
aas
stos
cmp
enter
std
cmc
fsts
push
dec
push
push
jecxz
insl
jp
ret
xchg
inc
xchg
es
in
and
push
repnz
mov
rcl
dec
add
cmp
outsb
out
pop
fcompl
mov
test
adc
lods
sti
inc
sahf
aaa
mov
cmp
sub
push
cmc
lea
lret
imull
call
sub
adc
dec
sub
loopne
dec
push
int3
mov
ret
or
aas
xchg
mov
adc
jmp
addr16
dec
push
dec
rolb
push
rcl
push
adc
mov
idiv
cmc
mov
inc
gs
dec
lret
lods
ret
mov
xlat
popf
pusha
iret
lock
aaa
ret
dec
sarl
pop
in
sub
mov
or
adc
jnp
adc
mov
lods
pop
sub
data16
lahf
mov
negb
adc
sbb
cmpsb
movsb
ficoms
inc
daa
add
sbb
aam
ds
ficoml
mov
cmpsl
push
ss
sti
inc
inc
sub
xchg
pop
xor
arpl
or
adc
xlat
lret
xchg
mov
mov
mov
mov
popa
mov
dec
aam
fsubr
mov
lds
ds
add
fs
jb
pop
popf
aam
subl
pop
out
cld
mov
pushf
mov
andl
pop
outsb
add
movsb
sti
into
fwait
xchg
cmp
popa
cmpsl
adc
inc
inc
adcb
sub
adc
ret
mov
lret
in
leave
mov
sub
add
lcall
adc
push
jl
cmc
sbb
subl
cs
jno
daa
dec
shlb
add
cmpsl
and
cmp
mov
sub
int
int3
pop
jl
fidivs
sub
sub
sarb
repz
scas
jns
sbb
jnp
and
sbb
add
fsubrl
in
nop
flds
addb
inc
mov
mov
pop
xor
mov
fdivrp
jns
loop
mov
outsl
push
push
test
jge
lahf
adc
sub
xchg
jl
mov
xor
inc
pop
sbb
and
dec
sbb
xchg
jge
or
or
call
inc
xlat
cmpsb
add
xchg
out
xor
xchg
jae
inc
inc
cltd
orb
std
jne
dec
add
popf
and
jl
mov
push
and
xchg
iret
mov
clc
rorb
jbe
xchg
movsl
cmp
rorb
ds
cwtl
and
mov
sub
push
mov
das
pusha
repz
sbb
dec
gs
or
scas
fs
movsl
mov
inc
pop
arpl
sub
leave
sub
int3
mov
les
inc
xchg
jge
leave
adc
sub
out
ffreep
insb
or
dec
push
into
clc
pop
ds
xlat
fimull
fiadds
dec
jnp
in
xor
xor
sbb
dec
into
idivl
daa
sti
das
xor
int
xor
bound
cmp
nop
subps
lock
adc
sbb
xor
sbb
daa
cli
sub
shlb
stos
mov
testl
dec
add
cwtl
mov
adc
bnd
ret
or
cli
shlb
orl
fidivrl
jg
movsb
xchg
xchg
or
ljmp
enter
outsl
xor
imul
mov
pop
mov
mov
std
hlt
mov
or
mov
sbb
xor
mov
mov
add
xchg
mov
jge
jmp
sub
fs
das
mov
sbb
cltd
mov
aaa
adc
rol
xorb
mov
xor
mov
push
iret
mov
js
test
shr
or
popa
bound
sbb
cmc
test
push
push
sub
iret
dec
adcl
xor
insb
xlat
fisttps
dec
adc
mov
ds
into
cltd
sbb
jns
out
cmpsl
sub
fsts
adc
sub
mov
xor
fwait
jge
ja
rorl
push
sar
enter
pop
mov
mov
call
xor
pop
inc
xchg
es
sub
inc
icebp
or
dec
jo
scas
in
cli
add
in
aad
jns
stc
add
dec
inc
or
inc
in
xchg
pop
push
cmpb
push
int
ret
adc
dec
sahf
jo
push
movsl
sahf
inc
sub
out
loopne
fmull
fucomi
and
xchg
jecxz
repnz
rclb
repnz
pop
cmp
imul
fcmovu
or
iret
pop
pop
push
mov
loope
mov
or
sbb
sar
push
or
pushf
bound
mov
aas
sbb
sub
xor
sub
negb
dec
xor
test
mov
jns
movsl
aas
adcb
rol
xchg
push
jp
les
sti
jmp
pushf
mov
jne
add
test
dec
stos
jne
mov
mov
stc
stos
loopne
cltd
mov
push
add
pop
inc
cwtl
unpcklps
lahf
sar
dec
fldcw
fidivrl
loope
inc
stos
gs
mov
aam
nop
int
add
loop
mov
stos
xorb
jo
fsts
ds
xor
adc
movsl
dec
loop
mov
mov
imul
xor
cmpsb
mov
mov
outsl
les
xor
shrb
aaa
mov
jmp
lock
leave
fs
mov
mov
sub
sub
imul
test
inc
scas
stc
dec
jl
lea
enter
jb
dec
arpl
add
aaa
sbb
pop
ret
fisttps
xor
inc
das
lretw
cs
lret
stos
mov
adc
les
pop
out
xadd
push
push
adc
pop
jo
or
cmp
xor
stc
movsb
xchg
jnp
xlat
lds
hlt
mov
adc
loop
int
dec
test
lds
aaa
fidivs
in
shll
bound
dec
xchg
push
test
jg
push
mov
lock
pop
test
sbb
inc
jnp
add
je
popa
pop
xchg
test
fistpll
outsl
frstor
es
cld
and
test
or
movsb
or
je
mov
inc
mov
push
cli
popa
jl
ss
jns
fdivs
icebp
sbb
repz
xchg
ja
out
sbb
sub
xor
jmp
add
ljmp
mov
push
call
push
fidivrs
and
lods
das
xchg
jge
ljmp
repz
pop
arpl
aas
hlt
movsl
in
jb
sub
cld
orl
xchg
scas
sub
xchg
cmp
lret
inc
sub
pushf
xchg
and
aas
and
int3
imul
scas
push
cltd
in
and
or
push
sarl
and
ret
xchg
push
and
popa
sahf
dec
adc
icebp
mov
loope
or
inc
cmp
sbb
inc
sub
pusha
sub
lock
rcll
jle
xor
repnz
or
test
xchg
fsubl
pop
and
xor
sarb
iret
adcl
mov
mov
cmp
jo
hlt
mov
ficoms
jns
int3
ds
push
subb
out
dec
loope
cmp
sbb
call
push
lock
test
push
mov
out
aam
loop
mov
cltd
call
mov
repz
lcall
xchg
sti
adc
loop
in
lea
cltd
push
push
fs
sbb
lods
stos
xchg
mov
ja
negb
aaa
iret
jb
xsaves
sbb
out
push
ret
dec
sub
xchg
add
inc
or
ds
push
cli
xchg
lea
mov
xor
lock
stc
or
je
push
mov
jo
push
sar
dec
adc
mov
icebp
xchg
and
mov
insl
fs
jmp
fadd
loop
jmp
push
push
dec
shlb
mov
or
iretw
xor
in
add
ret
lahf
push
jns
rorb
sbb
xor
mov
out
sub
shrl
add
fsubs
sbb
std
or
aad
aad
push
xchg
jmp
add
push
gs
and
insb
xor
or
xor
fadds
test
fbld
lahf
arpl
dec
mov
shll
jmp
dec
sbb
jg
stos
push
inc
rclb
xor
loope
mov
sbb
rolb
pop
mov
popa
notb
fmuls
sahf
cmp
xchg
or
fcompl
xchg
mov
and
inc
bound
mov
add
movsb
dec
aas
xor
push
sbb
add
into
shrl
or
and
std
push
movsl
mov
es
mov
mov
sahf
stos
pop
aam
adc
mov
lahf
mov
add
xchg
mov
jnp
enter
cmp
add
dec
aas
add
repz
repz
jge
fwait
xlat
popf
sub
rcl
push
xchg
adc
fs
lds
insl
pop
loop
jp
sbb
jmp
fnsave
loop
stos
clc
lea
push
fcoms
xchg
sub
mov
icebp
loopne
pop
xor
or
or
leave
movsb
fiadds
pop
and
sbb
mov
sbb
cltd
loope
pusha
adc
cwtl
cmpl
inc
push
ss
or
cwtl
dec
sbb
inc
in
pop
jns
fwait
mov
and
fstps
pop
pop
ss
or
cmp
inc
or
test
mov
mov
cli
pop
xchg
jb
inc
ficoms
add
pop
scas
aad
xor
inc
mov
dec
rorl
loope
dec
xchg
jne
sete
jp
lcall
in
in
sub
lahf
inc
xor
xor
test
ss
incl
push
cltd
mov
pop
cmp
jle
rcr
add
xchg
sub
enter
mov
push
rcrb
mov
cmp
subb
mov
test
jle
les
icebp
into
push
hlt
xchg
xchg
js
stos
movb
dec
dec
loop
cmp
cmpsb
push
mov
add
xchg
sub
mov
adc
stc
add
lock
pop
push
lds
mov
imul
dec
xchg
sub
popf
inc
popf
out
mov
sub
pop
andl
push
inc
mov
pop
lods
stos
push
call
xchg
xor
push
test
out
push
xor
pop
icebp
or
push
or
addr16
and
lret
nop
int3
out
pop
pop
scas
mov
jns
cmp
iret
xor
xor
jp
bound
ss
xor
popf
and
push
mov
jne
pushf
fldl
loop
push
out
imul
enter
mov
int
dec
fucomip
xlat
mov
push
insl
imul
js
lods
push
add
xchg
repnz
cs
ror
mov
add
jno
xchg
push
lret
xor
sub
fstps
inc
mov
aam
jge
or
push
cmp
push
xor
cltd
orl
nop
push
mov
adc
mov
mov
jb
notl
test
movsb
dec
imul
add
testl
lcall
push
add
ficoml
dec
imul
repz
lods
pushf
xchg
push
push
movsb
mov
jge
mov
movsb
test
fildll
scas
daa
and
sbb
or
xor
sets
add
dec
xor
fdivrl
std
jmp
jbe
out
sub
or
fsts
aaa
cmp
scas
dec
stc
mov
and
stos
out
mov
sbb
ror
jno
pop
jl
movsb
jl
mov
imul
adc
mov
jge
test
lods
adc
push
xchg
sbb
scas
scas
dec
popa
mov
jno
push
fcomp
sbb
jns
mov
xchg
bound
rcr
dec
cwtl
not
pop
xchg
mov
daa
mov
and
dec
jo
inc
ret
jl,pt
je
inc
bound
and
dec
sub
dec
mov
add
and
push
test
loop
xchg
pop
iret
fchs
test
cwtl
add
es
imul
sbb
in
dec
stc
add
pop
or
aaa
fmul
or
cmp
xchg
repnz
cmpsb
dec
pop
push
mov
shll
repz
fistpl
sahf
lods
mov
fistl
gs
shl
leave
sbb
xchg
jno
push
dec
out
stos
les
add
lock
push
jecxz
or
pop
cmpl
adc
cmp
rcl
lahf
mov
adc
fs
jge
add
cli
in
sub
inc
sbb
es
jg
stc
sbb
icebp
mov
mov
fiaddl
mov
imul
cmp
push
push
sbb
hlt
lock
sbb
sbb
les
pusha
in
jno
dec
jbe
jae
mov
stc
cmp
mov
aam
out
xorb
fidivl
xacquire
mov
mov
adc
fimuls
mov
std
dec
jmp
push
loopne
pop
stos
add
cmc
mov
jp
cmp
mov
insb
and
xchg
jb
push
fmuls
lcall
adc
arpl
jmp
pop
test
xor
push
pop
repnz
stos
jecxz
nop
mov
ds
fdiv
pusha
vxorps
es
sbb
push
aas
xchg
hlt
cmpsb
fwait
ret
int3
popa
loope
mov
pop
push
lods
mov
cmp
mov
xchg
stos
push
cmp
jno
fistpl
loope
fcos
push
movsl
push
dec
cmp
mov
lock
and
shll
popa
cmc
js
lods
lds
nop
ljmp
ja
pop
stos
add
adc
leave
mov
in
sub
lret
cld
xchg
xchg
loopne
add
test
insl
mov
mov
std
mov
mov
loopne
push
insb
push
adc
loopne
int
scas
mov
ja,pt
outsl
dec
repz
pop
sub
rcr
sub
js
lock
push
out
arpl
icebp
popa
stc
jg
push
int3
mov
mov
fsubrs
gs
push
push
inc
mov
cmp
xchg
adc
fsubrs
shrl
test
scas
add
cmpsb
push
cmp
out
inc
orl
inc
pusha
ja
xchg
and
stc
sbb
mov
push
jb
adc
enter
in
std
cltd
push
mov
or
out
scas
add
jge
dec
push
xor
push
les
loope
adc
dec
lahf
mov
js
sub
sub
dec
cli
or
shr
push
movsb
or
pop
repnz
xchg
cmpsl
mov
xchg
mov
dec
pop
cmc
dec
cwtl
aas
je
loopne
sbb
mov
mov
lahf
jge
in
push
cld
cmp
mov
lret
or
ficomps
jmp
lret
stos
mov
sbb
ret
add
cs
fsubrs
push
jo
loop
ja
push
daa
scas
pop
int
pusha
xor
jbe
scas
push
jecxz
cld
sbb
jge
push
sbb
fcomps
cmp
lret
out
into
push
fsubrs
pop
fs
xlat
int
hlt
push
aaa
xor
mov
scas
mov
push
rorb
negl
dec
or
insb
movsl
loop
cwtl
sahf
and
jnp
mov
insb
int3
mov
mov
push
sub
xchg
mov
or
movsl
outsb
mov
adcl
stc
fidivrs
lods
stos
scas
inc
cmp
dec
loop
cmp
mov
lahf
ficoml
sbbb
jp
cmpb
insb
or
inc
arpl
push
test
fisttpll
sub
push
jno
test
xchg
adc
ret
and
add
mov
and
mov
xchg
inc
jnp
aad
fnstenv
and
sbbb
push
aad
mov
sbb
jnp
cmp
add
fstpt
iret
popf
cmp
fnstenv
cld
out
lods
cwtl
jns
ret
mov
movsl
stos
xchg
stos
mov
cmp
addl
lock
sbb
test
mov
and
rorb
dec
int3
sub
out
cltd
test
dec
imul
inc
pop
jecxz
mov
push
xor
test
lret
pop
call
adc
jmp
sbb
fdivrs
out
addr16
inc
fistps
add
daa
mov
mov
loopne
sub
sti
xchg
inc
mov
push
hlt
popa
add
sahf
xor
fwait
aas
sub
scas
mov
dec
dec
cmp
xchg
test
clc
push
adc
inc
shr
and
cli
xchg
cmp
pop
and
pusha
sub
ja
jecxz
inc
push
or
jno
inc
pop
out
cli
jecxz
fnstenv
xor
insb
xor
jge
imul
inc
xlat
jp
mov
imul
dec
push
ljmp
pop
push
inc
imul
push
ja
xor
mov
fincstp
dec
cmp
fistps
scas
inc
jecxz
jo
push
mov
xor
and
sub
enter
inc
xchg
pop
mov
inc
jnp
shl
ja
mov
insl
xchg
negb
das
inc
sbb
fnsave
mov
add
xchg
fdivr
shll
test
data16
arpl
mov
xor
pop
gs
dec
mov
xchg
cli
imulb
jae
xchg
jbe
fcomip
test
jp
inc
jae
jbe
mov
mov
test
rcll
pop
ss
movsl
fnstenv
cs
dec
shl
push
rolb
clc
gs
xchg
fimuls
mov
rcll
pop
testb
ljmp
shrb
test
mov
test
lods
adc
fs
rcll
and
movsb
lcall
cmp
jg
insl
mov
cmp
sub
pop
xlat
dec
mov
jmp
xor
pop
xchg
frstor
mov
daa
adc
adc
inc
xlat
mov
fsts
and
mov
adc
push
incb
movsb
push
repz
jmp
lods
cli
std
add
rcll
or
sti
cs
or
cmp
lret
div
pop
iret
pop
adc
lock
jmp
cmc
push
sahf
and
stos
cs
mov
loop
cmc
mov
pushf
and
insl
movsb
sub
dec
add
sub
movb
fcoml
pop
mov
ds
mov
inc
in
xchg
lret
bound
mov
or
jl
mov
xchg
gs
cwtl
mov
shll
sbb
rcl
pop
jge
and
pop
scas
jae
fdivrs
adc
hlt
es
lahf
clc
dec
adc
dec
imul
pop
int
int
push
jge
add
pop
movsl
bound
test
mov
xchg
jns
addr16
inc
cli
movsbl
push
or
lcall
inc
cltd
dec
addb
pusha
in
and
and
push
mov
out
pop
hlt
add
jno
ret
mov
pop
mov
cmp
repnz
mov
adc
adc
push
shlb
sbb
out
lods
xchg
and
push
cmp
mov
ret
cld
mov
add
subl
pushf
inc
cmp
pop
stos
pop
dec
test
lret
mul
data16
mov
mov
jge
pop
adc
push
loop
std
push
loop
fldcw
inc
sarb
xchg
into
ret
jle
in
sub
mov
sbb
lcall
out
lods
lret
or
xor
ja
mov
jbe
xor
andl
into
in
pop
dec
mov
sub
mov
lea
pop
push
xorl
lcall
lret
test
or
fbstp
subb
pop
mov
sub
aas
pop
mov
outsb
jae
ret
cwtl
sarb
or
and
mov
inc
fdivrs
loopne
and
nop
push
jge
xor
and
rcl
divb
fs
sahf
stos
and
idiv
out
inc
inc
inc
and
mov
cmp
stc
jo
xchg
and
jae
mov
cmp
cmpsb
pop
push
outsl
ret
sub
mov
ret
or
sub
push
in
das
mov
push
mov
sub
aam
cmp
call
lea
out
add
pop
orl
dec
jno
mov
sub
jmp
xchg
test
xchg
repnz
pop
call
clc
mov
add
loope
stos
sahf
pop
inc
lret
dec
loopne
fldenv
mov
stos
lds
ds
ja
mov
push
addr16
cmp
orb
jns
xor
call
ljmp
cmp
or
cmpsl
int3
mov
push
pop
mov
and
sti
push
cmp
rcr
gs
insl
sub
mov
lods
enter
cmp
sub
mov
adc
mov
fmuls
out
adc
mov
mov
pop
shrb
xchg
xchg
cmp
pop
jns
dec
mov
scas
test
adc
cld
cld
ret
flds
xlat
pusha
hlt
cmpl
clc
mov
jae
cwtl
rcl
mov
mov
inc
mov
lods
outsb
imul
cld
andl
mov
push
cmp
in
and
or
xchg
rorb
pop
loop
push
and
push
push
enter
aas
mov
xchg
mov
into
in
das
xchg
cmp
pop
ljmp
sbb
loope,pt
dec
minps
movsl
mov
xchg
or
bound
addr16
stc
imull
cmp
dec
inc
lret
xor
dec
inc
mov
jb
dec
adc
sti
xchg
popa
push
xchg
add
push
xchg
addb
push
in
adc
sahf
frstor
mov
das
xor
push
lcall
dec
stc
xor
inc
pushf
pop
mov
idivb
sub
xchg
loopne
aaa
jle
daa
insl
sub
add
scas
scas
test
sbb
stos
daa
sbb
cli
movsl
cmp
push
int3
jno
cmpsb
cmp
xchg
iret
jno
mov
dec
out
sbb
leave
adc
or
stc
mov
mov
xlat
jae
out
movsb
mov
sub
dec
xchg
mov
sbb
movsb
sub
or
pop
pop
xchg
xchg
jp
jne
push
rcr
loopne
scas
cmc
add
pop
push
mov
arpl
sub
jo
mov
sbb
cmp
mov
es
add
mov
push
xchg
icebp
insb
mov
bound
lods
out
jp
jns
test
test
push
ss
aas
xor
and
jl
setno
sbb
jb
push
out
sub
inc
int
dec
pop
xorl
pop
pusha
shrb
repz
and
cmc
push
nop
mov
movsb
loope
lret
push
mov
adcb
adc
and
xchg
data16
xor
das
jmp
pusha
jb
out
arpl
lret
cmpsl
loope
aad
pop
xchg
dec
xchg
adc
mov
pop
test
mov
shlb
fldl
mov
xor
dec
orb
and
jne
push
and
repnz
int
in
push
movsl
lahf
cltd
push
pop
lcall
popw
test
insl
ja
test
inc
dec
sub
and
pop
ja
sbb
sbb
jne
push
pop
out
fldt
dec
subl
pop
test
mov
addr16
dec
pop
lods
pop
int3
or
push
pop
ja
fists
mov
pop
mov
adc
in
out
shll
mov
push
daa
inc
rcl
sbb
fldcw
xor
div
imul
scas
mov
ljmp
gs
fmuls
push
bound
sahf
imul
pop
es
fimull
or
xor
repz
mov
add
cmp
add
in
insb
fmull
or
mov
andb
aam
fs
cmp
xchg
jae
sub
les
and
out
and
xchg
mov
sbb
mov
mov
xor
lahf
mov
sub
arpl
jns
lock
into
pushf
mov
aaa
jns
push
repnz
aaa
or
add
sub
lock
xchg
rcrl
pushf
test
push
push
es
xchg
repz
xchg
test
mov
out
and
dec
outsb
mov
mov
popf
lret
test
clc
jmp
dec
insb
loopne
arpl
push
daa
jns
test
xchg
dec
mov
xlat
jmp
adc
pop
xchg
rcrl
pop
clc
ret
inc
aam
xor
daa
dec
popa
jnp
fcomps
pop
out
xchg
dec
lahf
out
sbb
fnstsw
pop
inc
cmp
push
push
sub
sub
pop
fs
call
push
pop
push
incl
sbb
mov
and
out
jns
mov
sbb
push
repnz
lret
or
inc
lock
xchg
fsub
int
daa
sub
scas
push
cmp
and
aaa
test
leave
sbb
in
inc
imul
into
pop
adc
dec
repnz
cld
pop
xorl
ds
pop
lods
mov
sarb
push
repz
cs
outsb
mov
loop
jae
int
xchg
push
int3
scas
jmp
sub
test
call
in
ficompl
rcll
out
jecxz
dec
in
dec
popf
out
pushf
movsb
cmp
scas
std
mov
loop
in
pop
adc
arpl
nop
lahf
push
jmp
daa
xchg
push
out
dec
push
icebp
flds
xor
push
out
cmp
int3
xchg
mov
cwtl
pop
add
fcmovnu
fidivrs
push
mov
fcomps
fs
jb
shlb
outsb
xchg
enter
xchg
and
xorb
mov
adc
mov
mov
stc
jecxz
inc
or
out
test
add
out
cmp
or
inc
insl
mov
rcll
pop
add
lds
jb
push
adc
cmc
cmc
fmull
jno
mov
mov
sub
iret
push
adc
pop
pop
pusha
or
cwtl
inc
fs
xchg
cmc
push
xor
push
jg
nop
add
lods
mov
popf
pop
stc
ss
and
shl
hlt
pop
ss
pop
mov
mov
test
loope
jbe
inc
dec
imul
xor
imul
push
mov
cmp
fstp
push
hlt
das
jnp
dec
mov
jge
dec
and
dec
mov
mov
add
mov
iret
jle
popf
imul
mov
mov
sti
imul
pop
jnp,pn
xor
sbb
push
loopne
in
ret
lret
xor
in
sub
aam
adc
jecxz
add
imul
sub
mov
adc
cmp
or
or
fs
jecxz
cltd
mov
xor
mov
in
xchg
push
fisubs
out
or
mov
arpl
sub
xchg
rorl
sbbl
xchg
aad
loop
jns
mov
mov
jns
fdivl
lret
mov
insl
loope
rorb
lea
test
mov
push
push
scas
and
notb
mov
cmp
and
pop
push
popa
mov
push
jmp
jne
jge
movsl
js
sub
push
dec
testb
sub
loope
jg
imul
xor
pushf
or
lock
imul
cli
push
inc
shll
cmp
xor
mov
sub
fistl
hlt
popa
pop
and
xor
pop
je
or
popa
jle
fldcw
ficoms
outsb
rcrb
inc
mov
cmp
pushf
xor
jae
into
lret
loopne
mov
jne
lds
mov
shlb
sti
ds
out
ljmp
sub
rorb
hlt
in
lea
dec
jg
in
pop
mov
sbb
cwtl
test
and
insb
or
daa
jo
push
and
mov
and
adc
jg
jnp
sub
dec
adc
ss
sub
jae
xor
jo
xor
or
dec
mov
mov
push
addb
and
daa
or
jp
mov
out
add
xor
into
sbb
xor
insb
aaa
adc
inc
enter
xchg
and
subl
in
int
movsb
adc
divl
jle
fbstp
iret
rorl
popa
out
call
es
mov
andl
sahf
repnz
xchg
rol
xchg
push
je
or
cwtl
call
loopne
shl
inc
xor
in
and
jp
cmc
filds
jg
mov
outsb
test
sar
add
pop
xor
mov
out
fwait
sub
dec
fisttps
and
movsb
lods
pusha
aam
jb
fsubrs
subl
insb
cmc
mov
fcompl
cwtl
inc
jne
fists
cmp
jecxz
cmc
adc
sub
push
mov
jnp
jecxz
push
movsb
jg
mov
ret
imul
or
inc
sbb
mov
rol
outsl
imul
add
cmp
cs
jmp
test
lcall
std
add
dec
mov
ret
ret
and
aas
jecxz
in
rorb
xchg
mov
add
add
imul
add
sar
dec
cmp
pop
pushf
mov
mov
movl
stos
sub
cwtl
push
hlt
stos
cmpsb
dec
into
jl
sbb
sub
push
jmp
jbe
lea
xor
cmp
dec
jo
lret
dec
xchg
psrlq
ds
or
shlb
nop
lret
arpl
fxch
stos
sbb
and
push
mov
xor
pop
fisttps
out
pop
sub
popf
jl
cmp
arpl
or
jae
iret
sbb
jmp
cmp
int3
lods
dec
jecxz
xor
sbb
std
fwait
loop
dec
ds
or
push
sti
dec
out
push
jle
imul
cmpsb
fdivrl
xor
rolb
jp
loopne
and
popf
test
lock
and
fsubl
inc
inc
xor
mov
lea
cmp
xchg
ljmp
jne,pt
push
jge
mov
mov
shrl
adc
roll
mov
or
push
xor
lods
lcall
ljmp
into
arpl
mov
jbe
fdivrl
pop
rcll
mov
pop
xchg
bnd
outsb
cs
lret
mov
dec
jns
pop
inc
or
xchg
push
sbb
test
inc
cvtps2pi
mov
mov
std
mov
xor
mov
add
icebp
orl
mov
jge
mov
jne
jnp
dec
pop
in
aad
and
lods
pop
jo
push
sbb
pop
stc
stos
cli
stos
in
loop
xchg
add
fsubr
leave
int3
mov
add
shr
add
sbb
testb
mov
push
loopnew
cmp
mov
test
stos
xor
push
xchg
stos
push
subb
adc
fdivl
push
loopne
xchg
jne
imul
ds
inc
jg
xchg
sahf
adc
stc
sub
mov
sub
cmpsb
sbb
mov
push
xor
push
dec
pushf
xor
test
ret
jo
fs
imul
xchg
cmp
cmpsb
les
pop
and
ja
sarl
cmp
sti
and
sahf
mov
mov
push
test
iret
fsts
jecxz
stos
lret
cmp
jns
inc
jmp
sub
into
cmpsl
pop
push
ss
inc
mov
jp
aad
into
jecxz
sahf
sbb
dec
mov
mov
rorb
pop
bound
pusha
iret
mov
jp
sbb
pop
mov
mov
and
sbb
nop
call
out
cmp
js
add
mov
test
mov
cmp
loopne
cmp
add
data16
iret
lcall
mov
pop
sbb
and
pop
ficoms
push
dec
cmc
mov
cmp
popa
cmp
inc
loope
or
adc
popa
out
cmp
lods
lret
iret
jp
insb
add
inc
push
js
ret
idiv
sti
ds
mov
rclb
fstpl
push
repnz
cmp
jo
dec
into
out
sub
and
in
std
push
stos
rcl
pop
or
shlb
mov
jns
stos
adc
push
and
mov
in
jns
in
test
lret
int3
and
repnz
cmpl
xchg
stos
push
lmsw
cmp
sbb
cmpsl
mov
ds
inc
data16
or
in
mov
or
pop
sub
or
mov
loop
jge
int3
inc
sub
rcrb
inc
jl
sahf
pop
xor
xlat
loopne
or
ficompl
aad
lock
repz
xchg
fsub
inc
or
cmpsb
fs
out
int
mov
test
xor
jecxz
mov
testl
pop
shrb
jno
hlt
adc
dec
ss
aad
nop
lock
fs
and
mov
imul
in
test
mov
sbb
in
cmp
jge
push
or
xchg
aad
or
les
repnz
mov
in
xchg
icebp
into
mov
rcll
ljmp
sar
dec
xorb
xchg
test
add
add
push
adc
jno
xchg
pushf
arpl
movsb
call
loop
cs
mov
ret
aam
out
shl
std
xorl
add
cmp
not
xor
clc
imul
insb
jl
outsl
and
rclb
add
icebp
ljmp
inc
arpl
sbb
mov
lock
xchg
jg
in
mov
sub
pusha
cli
shrl
repnz
and
xor
mov
inc
imul
pop
scas
sbb
sbbl
cmp
test
mov
fwait
pop
mov
mov
fildl
pop
push
xchg
xchg
mov
mov
outsl
out
jno
data16
repz
jo
test
mov
loopne
notb
loopne
and
sub
leave
shll
lods
mov
lods
jns
je
add
inc
add
and
xchg
pop
cmp
sub
test
jns
dec
xchg
loope
mov
lret
xchg
loopne
mov
mov
push
jno
clc
sbb
sub
fucomp
dec
sbb
lcall
push
cmp
adcb
jmp
movntps
std
adc
lods
mov
das
or
or
dec
js
int
clc
enter
or
leave
pop
cld
icebp
add
pop
insb
in
stc
sub
mov
and
mov
sub
xchg
push
rcrl
cmp
xor
lods
jg
and
jns
fs
dec
adc
lods
add
mov
outsl
lcall
sbb
and
ret
cmp
js
xor
ret
sbb
add
fidivs
sub
dec
or
leave
mov
fistpl
mov
scas
pop
out
mov
out
push
das
mov
imul
popa
inc
mov
dec
pop
data16
pop
or
ljmp
movsl
cmp
inc
mov
rorb
ret
jae
out
jo
dec
pop
sbb
ret
lcall
fnstenv
add
cwtl
xchg
jbe
xchg
test
sbb
lea
push
push
cltd
mov
aaa
jp
inc
idivl
frstor
pusha
stc
jle
xchg
pop
aam
pop
int
xchg
push
lock
cwtl
cwtl
leave
dec
das
or
addr16
sbb
mov
popa
jns
aam
add
cld
cmp
imul
xchg
mov
xor
lret
jns
jecxz
ja
mov
dec
dec
xchg
sbb
into
lcall
je
cmp
lret
out
pop
sub
in
out
cmc
stos
sub
and
push
or
in
sti
dec
mov
in
xchg
scas
int
jo
sub
std
rcr
adc
rcrl
mov
mov
daa
jne
mov
pop
push
lock
add
enter
pop
xor
and
jb
bound
test
or
xchg
jp
cs
dec
test
lods
cmpsl
fiadds
sub
fists
and
fstl
sahf
hlt
cmp
jge
je
mov
add
loop
sbb
in
add
repnz
cli
sbb
js
int3
mov
mov
mov
sub
mov
adc
ficompl
mov
adc
popa
cmpsb
cmpb
iret
or
push
push
sbb
mov
mov
lahf
leave
pop
adc
cltd
mov
jge
xor
fldenv
xchg
pusha
div
popl
call
lods
mov
decb
pop
add
inc
cwtl
cld
test
sub
popa
fsubrs
jmp
and
sahf
mov
hlt
and
pop
and
test
loopne
pop
xlat
fnstcw
cmp
or
cmp
mov
adc
or
roll
xchg
sub
adc
stos
adc
xor
adc
cmpsb
fidivs
xchg
fiaddl
iret
add
movsl
bound
test
movsl
fsubrl
addb
pusha
add
add
or
xchg
int
enter
lret
in
imul
sbb
lods
ljmp
cmc
daa
test
mov
outsl
imul
nop
sbb
sti
das
dec
ret
jl
and
xor
in
pop
jl
in
in
xchg
mov
pop
jl
mov
std
xor
into
mov
xlat
ss
pop
pop
sub
cmpsl
adc
lea
sbb
xor
mov
gs
fxch
adcb
or
je
and
fs
popf
and
lds
loop
mov
and
dec
out
cmp
std
mov
push
mov
pop
pop
and
xor
and
jo
pop
iret
inc
inc
ret
xor
enter
inc
push
lds
mov
icebp
jge
jno
decb
fdivp
mov
xchg
mov
mov
mov
aad
je
sub
test
das
jbe
iret
inc
daa
loope
xor
dec
pop
in
icebp
inc
out
aas
pop
cmp
fcomps
sub
pop
or
jecxz
stc
cmp
dec
jl
mov
inc
test
add
mov
adc
popa
sub
push
and
sahf
adc
shl
scas
loopne
mov
call
xchg
les
fisubs
lock
cld
and
inc
lock
jne
xchg
dec
pop
push
test
push
jne
lret
inc
jne
sarl
xchg
repnz
adc
xor
xor
stc
shlb
popa
cmp
pop
andb
mov
fs
testb
mov
jp
sahf
les
dec
xchg
dec
mov
cmp
movsb
jl
cmp
inc
or
xorl
andl
sbb
dec
push
int3
clc
or
lea
xchg
jmp
mov
negl
sub
xchg
mov
daa
xorb
jb
sub
xchg
lods
aaa
sbb
cmpsb
mov
int
fcomps
aas
pop
icebp
jmp
daa
jg
or
adc
pusha
and
mov
inc
arpl
sbb
mov
adc
and
mov
ds
fisubrs
xorl
adc
lcall
fwait
inc
inc
iret
int
fbstp
sub
xchg
std
je
or
stos
mov
inc
cmpsl
fsubrs
mov
cmp
pop
mov
jmp
aam
mov
xchg
mov
pop
cmp
lods
sub
movsb
ret
std
pushf
and
mov
sbb
test
fdiv
adc
fcmovu
test
push
lret
mov
sbb
movsb
stos
inc
les
test
fs
test
or
and
dec
sbb
add
push
push
in
jp
mov
popa
lret
outsb
dec
and
icebp
inc
mov
outsb
mov
ds
idivl
sti
scas
gs
sub
jl
jbe
ds
fwait
daa
test
rolb
dec
nop
ret
aam
cltd
sbb
arpl
or
fbstp
scas
jne
js
mov
push
std
aaa
jecxz
call
arpl
inc
fdivr
movsb
iret
fisubrl
adc
in
pop
stos
mov
dec
adc
push
inc
lcall
imul
cmp
dec
rorb
dec
mov
and
cmp
or
adc
les
sbb
aam
and
pop
xchg
mov
shlb
cmp
lret
scas
add
mov
inc
cld
ja
sbb
mov
cmp
jg
incb
and
sub
mov
mov
push
push
jo
sbb
jecxz
outsl
cltd
mov
jl
out
dec
cmp
cltd
xor
inc
scas
andb
mov
mov
pop
push
xlat
push
mov
imul
mov
insl
pushf
dec
adc
mov
sbb
aaa
daa
adc
mov
pop
mov
in
repnz
mov
dec
out
pop
aam
int3
adc
icebp
adc
mov
flds
dec
jg
pop
dec
fisttps
or
sbb
in
movsb
or
inc
popl
cld
xor
ret
or
sbb
push
stc
dec
leave
xor
inc
shll
andb
movntq
out
outsl
push
clc
add
sub
mov
inc
and
mov
call
rclb
ljmp
out
fistpl
inc
xorb
loop
shrl
fstp
xor
cmpsb
test
xor
xchg
jge
xor
mov
ret
pushf
cwtl
cmc
js
ffree
mov
xor
adc
sub
pop
lret
pop
cmpsl
lahf
adcb
inc
int
cmp
jbe
inc
cmpsl
mov
fiadds
pusha
rorl
mov
mov
je
arpl
jg
dec
sbb
mov
push
adc
cmpsb
rcll
sti
xchg
notb
stos
mov
cwtl
xchg
js
inc
in
int
mov
bound
daa
add
or
inc
xchg
out
mov
sub
ja
inc
jns
adc
aam
std
lea
test
xchg
push
inc
pop
out
mov
or
clc
sub
and
hlt
rcrl
mov
decl
in
bound
and
xchg
ficomps
sbb
jo
mov
lret
mov
outsb
mov
test
andl
cmpb
ret
sahf
mov
xchg
mov
outsl
iret
xor
and
enter
in
xor
push
pop
stc
xorb
add
ljmp
stos
xor
loope
sub
loope
loopne
outsb
clc
mov
cwtl
lods
pop
xor
or
mov
xchg
jnp
in
pushl
pop
pop
sbb
dec
imul
and
test
add
aad
sti
notb
mov
cmp
scas
lcall
push
fistps
mov
fistl
out
push
sbb
jb
loopne
movsl
ret
and
inc
xor
into
lret
int3
loope
sbb
repz
movsl
arpl
cli
xchg
xor
int3
adc
mov
xchg
aam
lret
stos
sarb
mov
je
cmpsl
imul
mov
out
xchg
mov
loop
xchg
shlb
or
xor
xchg
or
dec
pushf
fildl
adc
lahf
push
xor
lret
cmp
xchg
lahf
popf
repnz
push
pop
out
adc
xorb
jno
fisubrs
mov
dec
mov
in
push
in
movsl
insb
lock
dec
and
xor
and
lea
pop
mov
mov
inc
inc
cwtl
sbb
inc
add
and
lcall
nop
roll
stos
les
xlat
adc
rcrl
ffree
stos
mov
andb
cld
movlps
sbbb
jns
push
push
pop
jne
pop
mov
in
and
fildl
pop
push
lret
xchg
aas
enter
lahf
aad
popf
mov
fs
lea
sub
mov
sub
mov
push
imul
cmp
in
sbb
mov
pop
mov
mov
lods
test
pop
push
add
cmp
decl
xor
stos
orl
sbb
pop
mov
push
arpl
and
mov
insl
xchg
mov
dec
pop
aaa
xchg
out
rcrl
cmpsl
xor
addr16
xor
xor
cmpb
xchg
dec
popf
roll
inc
bsf
mov
xlat
bound
xchg
and
or
mov
jb
dec
leave
cli
insb
mov
sbb
aad
xchg
mov
xchg
add
mov
pusha
or
lcall
or
mov
out
enter
test
push
std
aaa
mov
cmp
mov
test
push
fdivl
dec
mov
push
adc
sahf
xchg
test
xor
fdivrs
insl
or
dec
xchg
push
shlb
stc
ret
aam
lahf
je
xchg
jbe
jae
enter
adcl
push
ss
int
mov
and
or
mov
jmp
add
sti
add
sub
mov
data16
test
jmp
out
sbb
adc
xchg
add
push
mov
into
arpl
and
and
das
jge
dec
out
mov
adc
je
or
jmp
in
aam
xchg
dec
mov
lcall
sbb
sub
adc
and
adc
add
xor
cmp
daa
out
lods
xchg
sahf
add
mov
jns
mov
add
shrl
jo
mov
add
dec
sub
bound
in
sahf
add
daa
push
fsubl
test
nop
inc
cli
jo
cmp
test
pop
rcll
mov
xchg
lret
mov
gs
loop
pop
push
sarl
add
mov
sub
call
xchg
mov
nop
push
xchg
mov
loope
sub
faddp
pop
shll
sbb
out
mov
xchg
cmp
cmp
or
out
add
dec
lahf
and
test
add
loop
mov
jmp
adc
ret
mov
cmp
pop
pop
popa
xchg
and
stos
dec
jmp
sarb
iret
addb
push
jge
or
repz
sub
in
rcl
sti
cmpsl
cld
test
cmpsb
pop
pushf
add
aaa
andb
sbb
mov
shr
cmpsl
es
popf
cmp
das
push
xchg
icebp
mov
add
lods
or
stos
lret
dec
mov
mov
test
pushf
adc
xor
mov
fcompl
rorb
pop
push
imul
push
stos
in
mov
outsb
pop
sub
push
jns
and
rol
mov
icebp
cld
popf
jmp
imul
stos
mov
inc
iret
sub
cltd
dec
mov
dec
ljmp
insb
outsb
jecxz
sbb
icebp
push
add
adcl
lahf
xlat
mov
pop
aad
enter
test
shrl
lods
cmc
pop
inc
sub
jmp
add
mov
inc
out
and
ror
sysexit
ds
mov
into
pop
xor
adc
jecxz
add
pop
shll
fdivrl
data16
arpl
das
xor
mov
xor
adc
cwtl
dec
push
cwtl
inc
xlat
fisttpl
mov
or
xor
mov
jb
push
mov
mov
add
stc
mov
ja
test
aad
aas
xor
push
repnz
jo
inc
cmp
movl
iret
sub
adc
jmp
xor
mov
outsb
rol
sub
xor
rcll
inc
insb
ret
add
stos
jmp
xor
sbb
jns
test
roll
in
cmp
mov
andl
mov
push
pop
addps
pop
xor
lock
negl
and
das
ret
dec
in
mov
out
and
add
mov
mov
ret
pop
or
inc
jo
push
jecxz
push
test
dec
xchg
dec
or
xchg
daa
iret
push
test
cmp
movsb
lods
stc
stc
jp,pn
cmp
xchg
cld
es
mov
pop
movsl
cmpsl
adcl
dec
cmp
sti
imul
fwait
push
mov
fldt
repz
inc
xlat
xchg
mov
pop
decb
clc
xchg
mov
out
dec
or
repnz
pushf
popa
ja
mov
pop
push
pop
push
cmpsb
mov
and
adc
pop
lea
cltd
test
ljmp
adc
ret
xor
adc
jmp
pop
ljmp
cmp
sbb
fsubrs
loope
enter
rol
aam
jg
dec
inc
mov
push
mov
fmul
lea
mov
sbb
shrb
mov
aam
popf
sbb
lods
sbb
aas
mov
push
outsb
inc
das
jp
and
mov
icebp
add
adc
cwtl
pusha
adc
vpminsw
adc
cmp
lret
pop
clc
rorl
arpl
jns
sub
jp
pop
cli
jmp
out
les
lea
andb
or
test
test
subb
inc
cmp
pop
add
punpckhdq
mov
sbb
and
jbe
bound
pop
mov
daa
sbb
dec
push
push
scas
mov
shll
inc
popa
sub
dec
inc
fs
inc
sub
push
xchg
xor
and
inc
sub
cmp
push
ljmp
pop
lcall
lcall
rclb
xor
imul
cld
xchg
mov
imul
jbe
popf
jle
or
movsb
rcrl
inc
or
leave
jb
inc
sbb
cwtl
sub
push
aaa
and
and
jne
add
mov
sub
push
push
dec
ja
out
movsb
pop
cld
addr16
xchg
pop
dec
ds
cmpsb
sbbl
fisubrs
mov
dec
sub
sbb
jnp
inc
jp
icebp
hlt
lock
inc
in
repnz
test
je
lock
mov
rcll
xchg
cmp
out
xchg
mov
fsub
repnz
inc
jmp
dec
jne
test
push
jnp
jno
add
sub
mov
jmp
xchg
xchg
aad
sub
fwait
xor
jecxz
in
pop
xor
mov
lods
pushf
dec
fnstsw
dec
pop
jns
and
movsl
adc
mov
mov
xchg
dec
ss
repnz
push
mov
ret
push
loope
sbb
divb
push
push
loope
call
jmp
loopne
movsb
je
stos
mov
loope
fadd
aaa
in
out
pusha
jb
mov
mov
xchg
pop
data16
sbb
lahf
rclb
cli
xchg
xchg
mov
adc
subl
xchg
clc
repnz
fwait
sar
xor
daa
push
jecxz
ret
int
mov
dec
cmp
mov
cmp
mov
cltd
sbb
xor
xor
ficomps
call
jo
add
mov
test
cmpsb
ret
dec
jae
bnd
sub
mov
push
inc
jbe
pusha
and
pop
adc
mov
sbb
lret
pop
mov
add
push
sub
mov
sub
sub
sub
stos
mov
push
push
lods
sub
push
lock
aas
mov
sub
icebp
jb
stos
xor
mov
scas
cmc
stos
mov
pop
dec
sub
pop
aas
out
pop
shll
or
add
add
leave
jmp
fdivl
movsb
mov
fnstsw
or
push
hlt
ds
ret
cmp
fcoms
data16
push
test
mov
mov
fiaddl
aad
pusha
daa
out
cmc
mov
je
push
cltd
add
pop
sbb
lods
xor
mov
jb
pop
xchg
test
sub
and
xchg
out
cwtl
jecxz
sbb
dec
ret
mov
mov
cmc
dec
and
or
lret
dec
xchg
or
mov
fildl
aas
mov
ret
cmp
popa
js
mov
ss
xchg
mov
ss
pop
sbb
cltd
xor
mov
pushf
fistl
dec
push
lds
push
jmp
test
insb
div
outsb
adc
jge
in
das
lahf
inc
mov
xor
test
loopne
cwtl
push
pop
fwait
jl
cwtl
mov
mov
sub
push
jb
mov
jno
pop
xlat
mov
push
fmul
add
pop
pop
pushf
sub
sub
mov
mov
in
daa
xorl
dec
ja
subb
and
mov
clc
out
and
insl
negb
cltd
xor
js
lods
xchg
sbb
jmp
and
clc
loopne
outsl
add
int
cld
push
je
cli
cwtl
adcb
dec
jle
push
loopne
xchg
inc
fiaddl
std
xor
mov
sbb
mov
or
mov
sbb
loopne
int
aam
or
enter
popl
frstor
jmp
cs
stc
and
outsb
mov
push
orb
xchg
pop
imul
push
lret
dec
testb
adc
add
lret
mull
pop
lret
mov
int3
add
lret
out
inc
repz
stc
xchg
xchg
into
mov
in
imul
inc
and
xchg
or
or
jne
add
push
fnstsw
fcompl
xlat
add
mov
movsb
mov
repnz
mov
repz
push
movsl
ja
inc
adc
fisubrl
int
sub
icebp
es
test
mov
xor
mov
in
push
cmpsb
and
push
sbb
rcrb
cmc
out
mov
push
dec
sub
icebp
jns
or
aam
in
sarl
pop
imul
mov
lret
add
fstps
imul
lock
adc
icebp
jp
test
fs
scas
stc
mov
les
je
movsb
daa
cld
lea
pop
cmp
rolb
arpl
pop
test
cmp
movsb
lcall
push
lea
ss
imul
out
xor
pop
loope
sbb
mov
inc
daa
mov
add
adc
repz
mov
push
ret
adc
call
mov
into
sub
or
mov
jecxz
xchg
dec
add
mov
mov
sub
into
jge
addr16
adc
pop
mov
jecxz
shll
es
shrb
mov
pop
mov
arpl
int3
dec
push
mov
add
jmp
jb
push
jge
cmpsb
push
ja
jo
cmp
mov
pusha
and
iret
adc
cmp
jle
mov
mov
sub
sbbl
mov
out
cmc
stos
mov
or
push
icebp
in
scas
jle
jmp
xchg
dec
cmp
loop
pusha
mov
scas
sub
cld
cwtl
mov
cwtl
cs
cmp
lea
aam
lret
cmc
push
cmpsb
pushf
cmpsl
sbb
or
bound
push
cld
jae
js
pop
sub
mov
inc
jnp
ret
lock
fsubr
mov
or
mov
ficompl
push
rol
jae
jo
inc
ljmp
sbb
jo
sbb
xchg
sub
popa
inc
sbb
add
addl
add
dec
addr16
and
lret
shll
or
icebp
lret
addb
and
jl
mov
cmp
into
cmpsb
insb
push
inc
jge
mov
popa
adc
push
fisttpl
jecxz
test
sbb
add
jg
lods
push
leave
rcrl
popa
sub
imul
lds
imul
dec
pop
rcl
dec
dec
out
testl
mov
stc
scas
scas
repnz
in
sub
push
xchg
mov
lret
push
inc
jge
das
scas
lret
imul
lahf
ja
sub
push
xchg
or
std
and
mov
imul
sub
or
mov
sbb
mov
inc
pop
std
inc
popf
lods
cmc
dec
or
sar
push
aaa
xor
or
test
or
jecxz
add
cmpsb
push
lret
push
test
xchg
addr16
xchg
push
mov
pusha
pop
fsubs
mov
inc
dec
jnp
enter
jb
push
sub
std
gs
ss
push
dec
cmp
mov
addr16
inc
scas
loopne
adc
lods
lret
cmp
jecxz
sarl
push
cmpb
xor
lods
or
push
xor
pop
xchg
sbb
inc
sbb
fsubl
daa
rcll
mov
mov
outsl
cs
mov
ljmp
push
dec
stos
leave
cmp
loopne
mov
ja
cmp
out
lds
or
repz
fs
push
fucomp
sub
jo
imulb
sub
sti
add
jecxz
mov
jne
add
mov
icebp
cmp
inc
fsub
sub
sbb
pop
lock
lea
inc
sub
and
aas
idivb
inc
xchg
inc
bound
out
test
adc
sub
jnp
in
xchg
test
mov
mov
jmp
sbb
mov
pop
push
dec
rolb
pushf
daa
or
shll
cmp
fwait
cmpsb
test
test
sbb
and
cmpsl
add
or
or
aaa
imul
lods
subl
xchg
push
fwait
scas
mov
mov
fildl
out
fs
insl
inc
push
stc
xor
push
xor
sub
jae
push
mov
jecxz
lds
insb
repnz
mov
sub
das
xchg
and
cmp
hlt
divb
jmp
in
pop
enter
int
mov
out
scas
and
ljmp
inc
cmpsl
adc
sbb
popa
adc
nop
out
fsubr
sbb
shl
xchg
repz
int3
aad
jmp
scas
mov
pusha
jnp
mov
adc
insb
lock
das
sub
xchg
divb
out
inc
out
in
icebp
xchg
or
jecxz
adc
cltd
dec
mov
pop
sbb
mov
inc
dec
hlt
dec
sti
or
leave
add
dec
mov
test
pop
inc
imul
or
popf
and
sbb
mov
addr16
fld
cmc
ss
out
inc
cs
ret
mov
mov
pop
pusha
aam
test
pop
fs
jbe
inc
xchg
lcall
cmp
popa
out
fnstenv
xlat
push
xchg
dec
xchg
jmp
inc
inc
stos
loopne
movsb
push
cmp
or
mov
int3
push
inc
xchg
mov
or
insb
or
sbb
and
xchg
xchg
aam
sbb
into
pop
sarl
mov
inc
mov
jno
out
adc
or
lods
jno
sbb
movsb
sub
mov
dec
into
mov
cmc
or
push
imul
sbb
cli
stc
adcl
dec
aad
ds
les
dec
shl
cmp
lea
sbb
lds
sbbb
sarb
xchg
ja
stc
mov
xchg
jl
cmc
add
leave
cmp
outsb
and
xchg
scas
jnp,pn
cmc
pop
test
inc
stos
lcall
xchg
out
inc
lods
fidivs
ret
cltd
inc
fsts
in
jecxz
sub
int3
scas
jae
adc
call
sbb
fsubs
inc
push
gs
repz
or
in
lock
pop
negl
push
pop
xchg
aas
sbb
cwtl
mov
or
mov
sbb
pushf
pop
jecxz
into
out
xchg
xor
sub
jae
fdivrl
jmp
aaa
adc
idivl
push
jo
pop
fistpll
or
enter
popa
mov
pop
mov
or
xlat
stos
ror
push
enter
mov
xor
movsb
or
or
pop
or
outsb
xlat
inc
lock
imul
push
loope
or
lcall
shrb
pusha
incl
and
and
mov
les
adc
xor
pop
iret
mull
mov
pop
xor
mov
jg
cmp
xor
sbb
insb
mov
fstl
in
or
fiadds
sub
andb
mov
cmp
mov
xor
jp
mov
lahf
mov
push
xor
dec
andb
xor
fnstsw
movsl
mov
cmp
bnd
adcl
mov
sbb
mov
fsts
sub
push
pop
pushf
or
insb
out
test
mov
insb
lods
test
pop
pop
push
aaa
ret
ljmp
sbb
cmpsl
push
cmp
bound
sti
pop
fidivl
jnp
add
mov
cld
out
push
jmp
xor
inc
repz
mov
push
js
lahf
cmp
shl
and
pop
rcll
fdivrl
inc
cmpsb
std
pop
xor
xor
inc
mov
and
xor
mov
int3
sbb
ja
out
loop
aam
and
push
cld
call
and
sar
adc
das
or
or
jp
js
mov
add
flds
imul
lret
call
js
js
pop
mov
mov
mov
in
cmp
jns
addr16
outsb
cld
cmpsb
push
test
outsb
rclb
ljmp
lods
aam
scas
xlat
add
shlb
fcoml
dec
dec
fiaddl
aad
jge
push
aaa
or
xchg
rcrl
cmp
xor
pop
scas
pop
ret
mov
fwait
mov
arpl
std
dec
out
mov
ret
repnz
and
stos
and
push
inc
rorl
sub
cmp
daa
rcll
pop
lcall
push
dec
out
inc
mov
adc
xchg
popf
push
jg
rorb
inc
fsubrl
push
pop
stos
std
cmp
xchg
mov
outsb
inc
or
arpl
daa
xor
fildll
testl
jle
dec
mov
ljmp
inc
pop
sbb
outsb
lret
cmp
push
leave
cmp
divl
fmull
adc
pop
divl
cmpsl
repnz
lock
sub
mov
jns
xor
push
sub
xor
mov
ljmp
push
sarb
test
lds
in
out
clc
add
sub
je
sbb
outsb
aam
lods
xchg
lahf
insl
loopne
cmp
push
push
xchg
cmpb
push
adc
add
pop
ja
loope
sub
push
daa
adc
subl
popa
sub
push
sahf
mov
es
bound
jl
jge
ljmp
dec
fs
xor
in
aaa
je
inc
xor
shrl
out
mov
pop
out
push
pop
paddusb
jp
mov
repnz
adc
cmp
push
mov
fimull
mov
jo
into
mov
test
push
add
ljmp
mov
push
sarb
xchg
fucomi
lock
mov
xor
lcall
cmc
fisubl
dec
bound
sub
pop
xor
je
adcb
push
test
cmp
sub
mov
pop
movsb
scas
mov
out
or
imul
push
xchg
sti
jnp
add
jae
add
and
pop
mov
jmp
xor
inc
add
pushf
mov
in
xorb
mov
pop
pop
scas
pop
or
and
sbb
push
sbb
outsb
and
xchg
push
dec
pop
and
sahf
out
push
pop
fisubrl
and
jg
push
jns
incl
push
pop
int3
mov
and
aad
notl
icebp
jbe
dec
mov
pop
jge
adc
mov
mov
mov
icebp
cwtl
ja
fnstenv
incb
adc
mov
xchg
ret
test
jb
inc
jbe
jle
push
or
out
push
rolb
xor
pop
adc
nop
cmp
mov
shlb
or
sub
pop
jb
and
mov
test
les
mov
sub
inc
sbb
testl
push
movsl
jnp
xchg
lds
mov
in
std
ds
sbb
mov
or
orb
in
fildl
sub
sub
push
or
fisttps
test
gs
gs
test
loop
dec
leave
sbb
sahf
mov
push
arpl
cmp
into
dec
push
mov
sbb
pusha
jae
ljmp
lahf
sahf
rorl
pop
test
jle
push
mov
rorl
or
in
xchg
pop
dec
xor
js
inc
imul
lcall
in
int3
mov
cmpb
pusha
xorl
inc
adc
loopne
xor
loop
mov
or
subb
push
fstl
dec
ss
ss
xor
and
inc
xor
mov
sbbb
lcall
lods
test
push
pop
lock
mov
scas
push
int3
imul
popf
dec
mov
repz
xchg
das
jno
push
stos
out
fstps
adc
sub
mov
mov
add
jp
mov
scas
mov
dec
and
adcl
inc
test
sbb
or
scas
inc
icebp
in
sbb
or
cld
ja
in
pop
sub
sbb
push
jg
scas
add
jo
popf
mov
adc
pop
sbb
pushf
mov
xor
scas
xor
repz
adc
imul
imul
rcrl
xchg
cmpsb
ss
test
jmp
cmc
cmp
popa
popa
out
dec
cmp
mov
cmp
les
and
jne
loope
movsl
scas
pushf
roll
add
aaa
sbb
mov
adc
add
cmp
dec
cmp
or
pushf
pop
sti
xor
aas
out
mov
mov
pop
aam
scas
aas
std
sti
or
and
xchg
hlt
mov
jle
test
daa
hlt
inc
aad
jecxz
dec
dec
mov
in
mov
cld
xchg
sbb
mov
rorl
lods
and
inc
fbstp
imul
andl
stos
pop
mov
or
push
xchg
cltd
mov
mov
clc
jb
cmpsl
pop
leave
mov
out
pop
adc
sbb
aas
mov
outsl
loope
stos
push
rcrb
sbb
push
pop
in
call
mov
and
fisubs
imul
and
popf
repz
sbb
lods
cmc
cmp
leave
test
mov
sub
dec
add
insl
daa
in
int
mov
mov
stc
sbb
flds
jp
pushf
cmp
pop
mov
cwtl
push
cmp
cmp
push
xlat
or
sbb
shl
push
push
xor
jge
ljmp
pop
pop
push
mov
iret
orb
test
ss
pop
mov
je
mov
sub
sub
push
in
stos
mov
dec
jl
jge
adcb
jno
dec
sbb
shlb
ljmp
sahf
xor
adc
lds
imul
sahf
sbb
and
aad
push
cmc
inc
and
popa
test
add
pop
pop
imul
rcr
dec
lcall
push
sahf
mov
sbb
push
mov
mov
pusha
cli
js
xor
adc
das
jno
sbb
pop
jo
cmp
adc
jbe
pushf
leave
test
imul
dec
loopne
outsl
into
cmpsl
out
addr16
fldl
rcrb
cwtl
iret
xchg
or
fwait
jae
stos
pop
popf
das
xor
mov
mov
pop
ja
and
mov
loopne
mov
je
sub
pop
pop
mov
pushf
ret
and
push
lea
inc
and
or
xor
sahf
cmpsl
xor
jle
dec
xchg
imul
add
repnz
xchg
jnp
cmp
cmpsb
cld
lods
aad
sbb
rorl
sbb
cmove
mov
jnp
sbb
cmovne
inc
xchg
push
into
jmp
adc
sub
xor
psllw
insb
cmc
xor
fsts
rorl
or
mov
sub
dec
outsl
in
inc
jecxz
or
adc
adc
std
mov
sbb
cmc
in
out
pop
out
scas
xchg
mov
test
cmp
adc
xlat
adc
clc
xorb
inc
ret
nop
lock
gs
mov
dec
xchg
pop
xchg
mov
add
push
sub
outsb
outsb
xor
andl
mov
add
insl
lock
repz
jge
pop
and
pop
int3
or
sbb
out
test
frstor
scas
imul
orb
in
inc
jg
xor
pop
cmp
cmp
jbe
pop
or
mov
inc
aad
and
pushf
sarb
xor
push
adc
inc
daa
out
ljmp
aad
rorb
movsb
push
addl
and
enter
xor
xor
orb
sbb
lcall
adc
dec
insb
inc
daa
adc
push
pusha
bound
pop
pusha
xchg
add
inc
pop
pop
mov
mov
adc
aam
pop
xchg
jecxz
es
cwtl
or
mov
lods
arpl
xchg
xchg
sbb
add
shrb
sub
pop
sub
imul
xor
pop
jl
xlat
adc
pop
jb,pt
loope
leave
cld
mov
jne
sahf
movsl
movsb
stos
imul
pop
sub
shrl
mov
or
mov
mov
mov
sub
cltd
mov
enter
mov
mov
and
inc
dec
cltd
fidivs
push
push
loopne
dec
mov
mov
fwait
fwait
xchg
jae
int
push
push
addr16
sarb
push
inc
cmp
shrl
pop
decb
pop
pusha
add
push
add
call
popf
xor
push
pop
xchg
outsl
hlt
lret
cmpsl
cmp
mov
pushf
inc
andb
loop
xchg
outsb
js
lds
loop
xchg
xchg
sub
mov
jl
sahf
je
mov
lahf
lret
push
daa
dec
mov
inc
jnp
scas
or
subb
inc
aaa
pop
fnstenv
xchg
push
cli
or
add
adc
sub
xchg
and
fcmovne
dec
gs
movb
xchg
stc
jne
mov
pop
jno
pop
out
pop
test
cli
push
dec
xor
push
push
stos
mov
inc
sarl
fwait
sbb
icebp
inc
cwtl
xchg
movsl
dec
add
lahf
gs
fsubrp
cwtl
out
jp
adc
sbb
and
push
shll
mov
jle
daa
push
mov
in
loope
rcll
xchg
fists
fldl
xor
stc
xchg
add
arpl
arpl
mov
loop
dec
mov
lcall
adc
ret
fisttps
jge
sbb
jne
in
je
mov
in
and
fstpl
scas
sub
icebp
ret
insl
pop
scas
mov
mov
cmp
int
add
inc
cmp
sbb
fistps
ret
and
nop
lahf
loop
adc
cld
sahf
lds
add
mov
mov
dec
mov
arpl
mov
adc
adc
ss
cld
cmpb
lock
xor
sbb
cmpxchg
shlb
push
hlt
dec
jmp
inc
or
sbb
and
das
push
or
xlat
icebp
add
or
cmc
lret
xlat
pmaxsw
lods
xchg
lods
rorl
shll
xchg
xor
call
shr
pop
dec
add
pop
and
jmp
push
jbe
mov
push
cmp
aas
cmpsl
or
out
push
sub
les
lods
or
inc
loopne
lods
jne
dec
mov
sbb
xor
insb
fisttpll
in
in
mov
cmp
adc
call
out
inc
sub
push
inc
popf
mov
icebp
and
cmp
ljmp
add
push
push
cld
jle
xchg
pop
in
sub
sbb
negl
xorb
dec
jmp
mov
out
pushf
pop
repz
pop
and
inc
nop
mov
xlat
stos
cli
inc
addl
cli
xchg
fbstp
inc
push
repz
stos
repz
xor
je
push
fmulp
mov
add
sbb
push
adc
rcll
bound
call
inc
sbb
daa
mov
mov
fldl
mov
jge
les
or
jno
adc
mov
xchg
cltd
sub
icebp
cmc
cmp
cltd
adc
push
jns
adc
sbb
cmp
inc
push
xchg
sbb
dec
mov
push
rcrl
sti
ficoml
lods
inc
push
jmp
iret
test
push
insb
mov
sub
lret
out
pop
stc
or
sti
clc
lret
shll
fs
add
fsub
adc
loop
xlat
mov
adc
dec
and
push
mov
push
loop
lock
rcll
scas
popa
and
dec
dec
inc
jle
jne
mov
jae
sbb
mov
lret
dec
dec
out
push
jbe
shrd
cld
add
or
push
xchg
add
loope
adc
mov
cs
xor
popa
pop
dec
fmull
jecxz
mov
mov
addl
or
flds
mov
popa
fbld
into
sahf
imul
add
cmp
loop
cmpsl
dec
jnp
push
dec
pop
cwtl
imul
xor
mov
icebp
jne
mov
lds
aad
enter
gs
xchg
idivl
fildl
cld
scas
cld
test
cli
jns
dec
lds
mov
xchg
sbb
jb
adc
dec
shrb
or
mov
insl
out
mov
stos
sbb
cmp
adc
outsl
sub
mov
mov
fildl
xchg
mov
push
stos
clc
or
rorb
cwtl
sahf
and
inc
movsb
js
sbb
lods
inc
mov
scas
js
mov
lret
push
cmpb
push
pop
xchg
dec
adc
cmp
test
fnsave
sahf
pusha
daa
push
mov
sahf
mov
dec
iret
cmp
dec
mov
mov
out
fcmovnbe
dec
xor
insl
or
fstps
in
cmp
mov
std
gs
sub
xchg
cmpsl
fsubl
fistps
adc
rcll
sub
arpl
or
loopne
rcll
cmp
sub
xchg
pop
outsl
push
loope
push
in
cmp
pop
scas
scas
mov
sti
add
sti
sbb
je
scas
xor
int
scas
push
punpckldq
fimuls
mov
es
xor
jge
outsb
push
mov
mov
dec
pop
clc
insb
in
pop
pop
xlat
hlt
mov
ljmp
in
je
adc
into
push
js
pop
xchg
repnz
cmpsb
dec
pop
pop
es
mov
cli
dec
or
js
int3
rcrb
mov
jecxz
and
insb
dec
iret
into
pop
mov
pop
movsl
rcrb
iret
inc
pop
rcr
sidtl
cmp
xor
mov
and
pop
dec
mov
ret
lock
fnstenv
notb
push
ds
sub
inc
mov
push
push
or
inc
jmp
rcr
mov
cs
cmp
mov
sub
xchg
fmul
adc
add
nop
out
jb
inc
dec
cld
inc
outsl
pop
stos
packsswb
outsl
adc
cmp
ret
xor
xchg
fadd
inc
sbb
out
adcb
insb
xor
aas
xor
xchg
mov
sub
aam
popa
mov
rclb
out
repz
mov
pusha
fimuls
sub
test
mov
adc
jo
xor
outsl
scas
lods
adc
movsl
ror
lret
and
xor
add
pop
mov
sbb
add
pop
cmp
dec
and
shll
dec
cmc
lods
fmulp
loopne
mov
test
fwait
jae
ss
inc
es
cmpsl
push
imul
sahf
mov
loope
jae
movsb
std
jns
ljmp
jbe
mov
test
dec
pop
shll
cmpsl
xor
test
repnz
push
inc
inc
jbe
mov
ja
cmpsl
ss
pop
xchg
sti
adc
lods
mov
out
int
or
and
inc
xchg
insb
jns
aas
jb
inc
add
inc
call
adc
scas
scas
test
sbb
loopne
mov
sub
stos
sbb
lcall
adc
inc
lods
push
cmp
loop
lds
lret
inc
movsl
mov
ss
adc
gs
pusha
xor
bound
dec
test
ret
sbb
insb
mov
fcompl
shrb
mov
push
and
sub
not
mov
sahf
cli
mov
and
sbb
adc
or
dec
jae
and
jl
sarl
sub
pop
mov
mov
jo
je
or
push
into
and
mov
xor
test
popa
loop
pop
dec
in
cli
in
push
dec
ja
stc
imul
and
hlt
mov
adc
inc
sbb
rclb
aad
jecxz
and
inc
aas
mov
repz
nop
mov
lret
outsb
aad
loope
xchg
cmp
dec
fisubrl
cmp
rolb
cmp
sbb
std
movsl
ljmp
addr16
lret
std
popa
js
dec
int3
nop
addr16
out
mov
mov
movsl
sub
xor
mov
insl
or
iret
aaa
push
add
and
add
pop
sub
ljmp
outsb
or
inc
jnp
call
jne
je
adc
jmp
cmc
mov
xchg
loop
adc
lret
mov
jno
shrb
enter
mov
lock
ds
dec
daa
and
std
sbb
mov
jmp
pop
insb
push
jns
jp
lock
mov
xor
pop
sub
out
bound
call
scas
js
sbb
or
or
cmp
hlt
push
icebp
ret
inc
sub
daa
sub
pop
addr16
adc
in
call
push
insl
xor
stos
scas
das
jmp
das
and
add
pop
jo
ja
popa
outsl
insl
aas
mov
and
gs
js
sub
lods
mov
fs
insl
rcl
shrl
mov
ficoml
lock
les
cmp
incl
cmp
sbb
xchg
adc
dec
dec
cs
jbe
jne
lods
cmp
insl
sbb
jecxz
or
or
jnp
mov
push
xorl
push
push
rcrb
sbb
xor
aam
xor
aaa
add
leave
or
pop
xor
pop
shl
outsb
xchg
addr16
stos
ljmp
mov
call
out
push
popa
ja
aaa
test
das
add
lret
mov
iret
add
jle
out
shll
loopne
test
xchg
xchg
fistpll
out
cmp
pop
xor
mov
sbb
into
cli
das
es
jge
test
xor
add
frstor
mov
imul
dec
popf
into
jo
mov
mov
cmp
insl
push
adc
lret
jge
adc
or
aam
loop
mov
pop
leave
and
lcall
mov
push
pop
lret
fdivs
push
fistpll
in
out
mov
jmp
cs
sub
sub
xor
in
pop
mov
pop
into
mov
push
mov
xchg
jmp
lods
or
jecxz
jmp
pop
jmp
fisubrl
inc
in
ret
pop
lret
rcll
push
add
pop
inc
mov
out
pop
or
xchg
jns
ret
hlt
lds
jge
xchg
shrl
or
cs
or
mov
jl
rcr
dec
bound
mov
mov
ret
pop
sub
xchg
ljmp
mull
push
iret
push
push
xor
push
xor
push
sub
enter
ljmp
push
add
lcall
xor
sahf
iret
sti
addb
and
pop
jb
xchg
push
pop
jp
mov
jmp
cmp
fnstsw
inc
mov
cltd
mov
adc
pop
mov
inc
lods
or
and
cmpsl
imul
out
cmp
in
into
push
mov
js
xchg
fistpl
xlat
push
pop
adc
stos
lret
push
je
addr16
pop
or
mov
shll
cli
jno
jno
pop
mov
jae
xchg
pop
in
loop
pop
in
frstor
lea
fldl
sarl
fcomip
mov
sbbb
faddp
push
pop
ljmp
add
jno
sbb
xchg
mov
aad
sub
test
into
fisubs
push
xchg
fldt
cmp
icebp
movsb
cld
lea
in
sti
clc
fisttpll
test
insb
pop
cmp
lahf
lret
pop
stc
pop
mov
inc
pop
mov
adc
scas
in
cmc
jo
xchg
iret
aaa
cld
outsb
xchg
cltd
int
scas
mov
jne
scas
dec
xor
popf
cmp
call
mov
pop
loope
jecxz
gs
mov
mov
mov
scas
push
mov
shrb
jo
ret
rolb
inc
dec
adc
and
adc
jbe
mov
inc
gs
imul
mov
ds
sub
aaa
pop
lcall
push
cmpsl
dec
cmpsl
sbb
push
adc
aam
push
pop
daa
ljmp
movsb
and
inc
jo
push
pushf
push
es
int
cli
and
je
gs
jnp
add
push
cmp
into
sahf
cmp
popf
rcll
int
inc
push
addb
incb
pushf
lds
inc
shlb
mov
pop
jb
sbb
xor
cmp
adc
push
popa
call
and
jmp
sti
scas
sahf
inc
adc
loopne
sahf
xlat
jp
inc
xchg
mov
pop
aad
stc
lock
out
xlat
mov
ljmp
mov
push
pop
cmp
movsl
push
mov
scas
ret
sarb
push
fists
out
cmpsb
push
pop
adc
iret
xor
pusha
movsb
jb
movsl
mov
inc
movsl
rcr
fbld
lcall
ficoms
lods
sub
adc
add
cmp
lret
mov
dec
xchg
xchg
popa
loope
shlb
ja
mov
cmp
xorl
xchg
or
ljmp
push
pop
and
sbb
adc
jb
pop
lcall
sbb
int
pop
jle
jmp
add
ss
add
in
lret
lea
jl
test
je
cwtl
lcall
std
jmp
out
in
mov
pop
pop
jp
jmp
sub
inc
imul
xchg
jl
cmpsb
cmp
push
andb
dec
and
push
sbb
loopne
mov
cmp
jecxz
rcll
cltd
jb
xchg
lods
scas
push
adcb
fdivp
idiv
lea
sub
test
and
mov
ss
movb
scas
jl
sbbl
mov
or
stos
jmp
sbb
pop
mov
push
int
incb
jo,pn
mov
test
push
ss
push
out
cmp
fs
ret
pop
push
cmpsl
sbb
or
inc
jp
xor
fwait
xchg
iret
xchg
xor
or
stos
xchg
xor
sbb
cld
dec
and
pop
push
jno
ret
mov
push
xchg
cli
add
mov
or
inc
mov
stos
mov
xchg
hlt
or
leave
push
xchg
rcrb
not
lahf
daa
nop
cmp
ss
inc
insl
inc
mov
xchg
mov
cmp
lahf
fs
imul
fisttpl
mov
or
jne
out
fs
mov
or
jb
loope
inc
pop
sbb
sbb
lods
gs
push
xchg
lock
mov
xchg
mov
pop
aas
cltd
push
outsb
jecxz
adc
inc
adc
inc
mov
pop
mov
movsb
push
pop
or
xchg
jnp
sbb
add
mov
pop
mov
cmpsl
jge
mov
int
lret
xchg
jae
or
insl
xor
aam
and
lods
loop
xor
dec
mov
lea
rolb
in
lcall
leave
lods
lahf
je
xlat
dec
mov
dec
mov
mov
lods
mov
xchg
pop
leave
int
sub
adc
push
popf
pop
xchg
fisubrl
movsb
cmp
lcall
jnp
nop
lcall
loop
xchg
cmp
adc
popa
and
mov
jbe
adc
les
dec
iret
push
add
push
loopne
addb
inc
push
push
jp
cmp
rcrl
mov
fldt
and
inc
cli
or
xor
je
sbb
adc
outsl
inc
outsb
push
stc
pop
add
add
mov
enter
or
jno
xlat
lret
daa
rcrw
cmpsl
or
mov
xchg
pop
sub
outsl
lret
cmp
aad
repz
ret
push
pop
xor
arpl
push
out
add
inc
push
gs
xchg
or
xchg
push
add
pop
daa
or
mov
sub
cwtl
or
adc
mov
cmp
mov
adc
add
out
in
mov
push
loopne
out
ret
repz
or
shrl
imul
sahf
cmpsb
mov
jge
push
scas
mov
mov
xchg
bound
cmpsl
add
jecxz
jnp
xor
inc
insb
sbb
xchg
lea
lods
adc
cmp
fs
push
orl
inc
inc
insl
pop
mov
xchg
cmc
in
pop
mov
lods
js
inc
xchg
cmp
aad
dec
and
jl
sub
out
dec
jl
mov
jb
and
dec
imul
mov
out
inc
bound
mov
ds
cmp
sbb
push
mov
es
inc
pop
fcompl
and
cmpsb
adc
lret
cli
loop
inc
loop
sahf
aas
loop
fs
jmp
push
xchg
pop
mov
lds
push
push
daa
xchg
outsb
dec
insb
lcall
lahf
or
inc
mov
add
mul
aam
mov
pop
push
cmp
leave
fwait
sub
mov
xor
mov
aaa
int
xchg
adc
cs
dec
nop
dec
xchg
mov
cmpsl
xchg
cld
mov
jne
adc
flds
dec
pop
cmp
aad
xor
or
in
into
data16
test
orl
cld
adc
mov
rorl
sbb
scas
nop
adc
and
loopne
ret
fbld
pop
pop
or
xchg
hlt
push
in
xor
into
cmp
ftst
stos
push
int3
mov
ljmp
cmp
ds
add
inc
loop
add
cld
scas
nop
pop
gs
push
cmpsl
xor
dec
les
add
out
fs
and
int3
push
push
mov
sbb
data16
xchg
ret
lret
iret
dec
dec
std
sbb
adc
and
mov
jecxz
cmpsb
insl
rclb
jae
or
out
push
mov
add
je
aaa
dec
hlt
popa
pusha
lret
push
cmpsb
out
popf
mov
lahf
nop
ja
adc
mov
xor
out
fdivrs
pop
sti
mov
push
js
sub
jle
mov
adc
cmp
addr16
sbb
shll
test
dec
adc
and
js
int
push
enter
fstps
pushf
jmp
cmpsb
and
stc
push
mov
pop
je
dec
or
xor
inc
add
pop
hlt
repnz
push
jecxz
mov
cmp
or
test
inc
or
fstps
mov
cmp
mov
ljmp
lea
mov
jmp
lods
adc
or
imul
lahf
inc
in
jae
dec
sub
lahf
mov
jno
jge
xchg
mov
xchg
adc
push
pop
jl
notb
fcoml
scas
mov
shr
jne
push
inc
xchg
xlat
cltd
xor
lret
insb
out
jp
out
jmp
mov
out
mov
fld
mov
mov
outsb
fstpl
push
loop
callw
mov
mov
jno
add
pop
in
in
loope
pop
mov
jmp
mov
and
repz
push
out
aad
fidivrl
push
add
sbb
dec
adc
int3
mov
jno
push
ja
jge
test
ret
mov
jne
xchg
xchg
mov
jbe
outsb
inc
hlt
test
inc
jmp
bound
ss
add
mov
jnp
in
insb
or
movsb
roll
sub
inc
in
cwtl
xchg
mov
mov
add
arpl
sbb
fwait
inc
adc
cltd
pop
sub
stc
fs
jae
lds
mov
popa
leave
cld
repnz
fldl
or
inc
push
jmp
in
fwait
and
stc
fwait
pop
lods
push
and
daa
imul
pop
fstl
pop
mov
xchg
push
jns
cltd
jnp
jo
pop
les
cmpsb
sti
pop
xchg
into
adc
nop
stos
inc
lahf
xor
in
cmpl
xor
inc
cmp
push
ja
lret
xchg
pop
ret
mov
roll
xor
sub
cmp
cwtl
movb
mov
dec
jo
cmp
pop
xchg
loope
jg
test
test
scas
jmp
rcl
test
xchg
stos
loopne
push
out
push
cmp
pop
aad
xchg
pop
cs
in
dec
int
cmp
jo
xor
xlat
cli
and
mov
out
daa
add
xchg
and
jbe
cmp
sarb
cmp
mov
add
adc
push
push
cmp
ljmp
test
jae
jle
mulb
mov
pop
sbb
jg
mov
xlat
jo
sti
daa
dec
pop
fmull
gs
fistps
out
fsts
pushl
and
movb
sbb
cmpsb
stos
jl
cmpsb
xchg
loop
out
add
fcmovb
es
or
shll
fists
jns
jecxz
pop
xchg
sub
push
hlt
dec
cltd
jne
stos
or
fsubs
rorb
cld
xchg
cmp
gs
cli
pop
fstps
mov
shl
add
imul
add
sub
fbstp
dec
mov
and
adc
cmp
fimuls
inc
or
data16
mov
jnp
push
cmpsb
loopne
adc
jno
inc
loop
push
arpl
sbb
stos
fs
in
add
jp
jbe
and
pop
xchg
out
push
test
dec
stos
loopne
lock
or
cld
sbbb
push
push
mov
mov
push
jb
loopne
cmpsl
das
pop
test
repnz
sbb
into
pop
leave
xchg
cld
push
mov
loope
adc
call
jbe
lods
push
mov
scas
sahf
cmp
movsl
lret
pop
xor
outsb
adc
xchg
cmp
fs
aad
lods
or
dec
clc
jge
adc
or
dec
shll
mov
inc
les
addr16
and
rorb
and
sbb
sub
and
clc
sub
imul
pop
js
bound
pop
push
sbb
aaa
cmp
dec
sub
aad
mov
iret
dec
fisubs
pop
and
cmpsb
lret
cmp
sub
les
pop
jecxz
cmp
mov
mov
xchg
stos
push
ljmp
ja
push
cmp
add
pop
add
pop
sbb
xlat
pop
sbb
test
out
push
cmpl
fdivrp
dec
in
cmp
pop
lea
lahf
sahf
icebp
ja
xchg
lcall
fwait
pusha
pop
sbb
lcall
cmc
sahf
rcrl
pop
add
fscale
inc
test
ljmp
cmp
mov
icebp
cmp
xor
mov
xchg
sbb
cmpsl
push
add
arpl
orb
adc
clc
mov
enter
test
lret
sub
arpl
out
and
cwtl
xchg
shll
inc
mov
cld
xor
mov
data16
dec
cs
aaa
out
cs
cmove
inc
daa
jne
popf
stos
lret
mov
xor
and
mov
mov
jl
mov
js
cmp
xchg
int
dec
pop
and
pop
jno
pop
lret
mov
es
stos
push
mov
push
repnz
movsl
mov
lfs
adc
cld
xchg
std
lods
xlat
outsl
jl
jo
sub
aam
sbb
fwait
add
hlt
shlb
gs
adcb
aaa
movsl
add
mov
std
lret
xchg
fdivr
sub
in
xchg
push
inc
call
out
inc
notl
jmp
or
mov
xor
repnz
or
incb
push
loop
xor
push
pop
jle
out
and
imul
insl
bound
mov
outsl
inc
xchg
xchg
jge
mov
mov
lods
aam
insl
mov
mov
outsl
test
mov
mov
jns
and
ret
lds
cmp
in
sub
sub
mov
cmp
pop
rol
and
fs
pop
cmpsl
mov
pop
sti
cmp
sbb
sarb
enter
std
xchg
sbb
cmp
mov
jae
pusha
inc
xor
push
pop
jle
add
cmp
cltd
inc
into
or
mov
sub
jmp
pop
mov
push
fwait
movsb
mov
hlt
and
push
lods
mov
call
adc
dec
popa
imul
cmp
cwtl
inc
scas
and
sbb
sbb
mov
in
adc
push
jmp
sahf
jmp
pop
and
int
xor
stos
inc
in
int
pop
inc
in
mov
jne
cmp
and
sub
out
sahf
mov
inc
cmp
cmpb
les
mov
push
pop
jo
and
popf
adc
xor
rorl
insb
sbb
cmp
xor
loop
jmp
xchg
sbb
push
cmp
gs
pop
cmpsb
xor
ret
mov
bound
test
mov
push
pop
sub
lods
sti
lret
rcll
andb
add
das
leave
mov
push
mulb
movl
popf
or
mov
arpl
cmp
push
pop
lds
idivl
aam
mov
shlb
scas
mov
daa
or
stc
hlt
mov
out
lds
dec
enter
arpl
sub
aad
sbb
push
pop
cli
xor
popf
pushf
insb
push
and
cmc
dec
mov
mov
xchg
sub
insb
cli
inc
xor
sub
mov
adc
fistpll
jnp
jnp
pushf
mov
roll
jnp
es
and
test
mov
es
xor
sub
push
xor
mov
lods
add
outsl
mov
jmp
or
mov
dec
insb
cmp
inc
and
pop
nop
lret
push
adc
and
or
out
je
inc
addr16
fwait
jecxz
stc
dec
cltd
mov
std
bound
ret
sahf
or
adc
cmp
mov
mov
mov
mov
or
mov
add
in
aam
cwtl
addr16
mov
pop
ja
inc
fwait
cmp
idivb
movb
mulb
imul
pop
rorb
outsb
sub
add
sbb
add
orb
sar
pop
push
sub
pop
les
mov
fadds
fildl
or
out
enter
jnp
inc
iret
lds
mov
gs
jmp
es
xchg
lea
jnp
or
xchg
bound
inc
add
loopne
cmp
clc
xchg
dec
and
mov
jno
and
into
jns
or
cmp
rclb
gs
add
shl
cmp
loop
dec
scas
push
loope
add
outsl
xor
or
sbb
ret
lret
pop
in
xchg
mov
inc
les
test
scas
in
inc
inc
xchg
jg
xchg
dec
or
lcall
call
or
cmp
ret
ja
idiv
pop
jg
icebp
sbb
stos
mov
ret
xchg
push
mov
mov
sbb
js
sub
stos
adc
sub
ret
popa
jmp
lret
dec
and
dec
sbb
add
loop
push
jmp
ja
arpl
lds
out
adc
roll
pop
inc
int
test
rorb
add
push
shl
fsubs
outsb
cwtl
aam
bound
mov
pop
inc
cmp
xchg
jo
push
shlb
clc
sahf
js
sarl
ss
mov
cld
fcom
in
mov
sbb
adc
mov
fmul
rclb
xor
stos
enter
push
daa
inc
cmp
xor
lods
rorl
hlt
sbb
mov
lahf
lcall
les
xchg
push
dec
fs
test
sub
and
test
fadds
sbb
or
out
mov
stc
and
push
fists
mov
mov
iret
inc
and
repnz
aas
adc
mov
xor
test
adc
sub
inc
loopne
mov
in
js
cmp
cmp
lret
inc
pop
out
jo
stos
pop
jge
jmp
ret
dec
lock
test
mov
mov
cmc
mov
cmpsb
xchg
mov
dec
inc
clc
out
add
pop
xchg
leave
jns
imul
test
jbe
ret
xchg
scas
mov
mov
inc
mov
push
stos
and
ss
rcr
ljmp
mov
and
and
lea
enter
sbb
cmpl
dec
jl
or
mov
sbb
xchg
jo
sarl
mov
mov
ret
sbb
adc
inc
fdivr
jae
xor
xchg
loope
pop
scas
adc
imul
sub
xlat
popa
stc
js
lcall
in
pusha
jmp
jg
mull
outsl
add
push
inc
aad
pop
rolb
ljmp
add
test
fsubrs
ljmp
in
dec
shl
into
xchg
lcall
outsl
pop
sbb
dec
cmp
add
pop
add
xchg
push
push
sahf
ret
inc
ja
mov
fistps
daa
fildll
dec
clc
xchg
pop
mov
xor
out
cmc
or
mov
xor
fmul
cmc
or
ljmp
dec
add
scas
pop
mov
ja
dec
out
pop
icebp
pushf
cmp
ret
movnti
xor
and
sub
hlt
mov
cmp
pop
xor
cmp
mov
stc
xor
adc
sbb
pop
sbb
nop
adc
jo
cmp
xchg
scas
xchg
lds
xchg
or
hlt
cmp
add
outsl
xor
mov
fidivs
cmc
jmp
fwait
pop
add
xchg
sub
push
lods
sahf
cmc
movsb
cmpsb
pop
enter
jae
sub
cmpsl
fcomp
icebp
sub
lret
xchg
fwait
testl
loope
lret
orb
and
jnp
insb
inc
gs
scas
and
xchg
rorl
je
or
movsb
dec
mov
lret
mov
push
add
mov
pop
sub
ja
sbb
push
adc
mov
cmp
shl
mov
movsl
adc
mov
add
push
xor
dec
fs
hlt
or
jnp
inc
mov
ljmp
rcll
in
shlb
jnp
lock
ret
inc
lds
imul
or
aaa
clc
mov
jecxz
pop
sub
inc
lods
cmp
or
repz
pop
cmpsl
sub
xlat
cli
and
stc
cli
daa
jne
ja
and
add
das
rcl
icebp
cwtl
dec
adc
ret
jp
add
push
cmp
les
push
hlt
sti
or
stc
add
ror
inc
imul
push
frstpm(287
ds
mov
loopne
das
and
mov
adc
jb
adc
dec
movsl
and
xchg
cmpsl
rcr
imul
push
cmp
lods
add
add
xor
std
es
xor
loope
mov
stos
aas
fistpl
fists
sub
sub
and
cmc
out
mov
cmp
sub
dec
ja
cwtl
sti
adc
sbb
mov
pop
and
adc
pop
popa
add
cltd
int
aas
and
lahf
lock
inc
lods
jecxz
mov
cmp
adc
xor
clc
mov
lods
xlat
mov
cmp
neg
xor
test
and
push
push
repz
iret
xchg
lea
push
ds
sahf
jl
pop
jmp
pushf
push
das
lods
inc
jle
push
pop
xchg
add
pop
repz
sub
and
mov
nop
mov
hlt
test
addr16
sub
les
cmc
add
mov
inc
test
lret
arpl
cld
lret
fs
data16
push
push
stos
clc
aaa
call
mov
push
xchg
rolb
shrb
out
mov
xor
inc
cmp
scas
fmull
mov
jl
in
xlat
add
push
out
xchg
aam
in
or
arpl
cmpsb
xchg
rcl
gs
out
jo
out
jle
in
inc
adc
popf
mov
cmp
dec
mov
arpl
negb
jg
mov
push
or
or
push
sub
mov
in
nop
and
mov
out
push
jnp
popf
push
cmp
fnstcw
ret
pop
test
ret
pop
push
dec
sbb
dec
sahf
out
addl
scas
adc
pop
out
add
xor
test
scas
cmpsb
test
xchg
and
mov
cwtl
xor
and
shlb
iret
jl
imul
mov
push
outsb
dec
cmp
stos
push
roll
sbb
xor
lea
addl
cmpsl
pushf
gs
subb
lods
mov
test
inc
jae
mov
movsl
mov
xchg
add
xchg
or
and
mov
das
nop
filds
icebp
mov
push
lods
or
jnp
mov
testl
push
in
pop
or
insb
ret
movsl
icebp
lods
lret
jne
loope
and
test
cmp
das
and
popa
cwtl
and
mov
into
add
pop
or
pop
xchg
hlt
add
xor
inc
mov
pop
sub
ret
pusha
out
mov
mov
cld
inc
jp
lcall
mov
data16
xchg
cmc
cmc
lahf
cmp
inc
pushf
mov
xchg
or
jae
dec
js
xor
or
mov
daa
test
in
loopne
fstl
mov
out
loop
jne
xchg
push
lock
dec
pop
mov
std
out
jns
cld
mov
sbb
aad
cs
mov
xlat
sub
mov
and
pop
and
or
or
xchg
cmp
cmc
lret
cmpsb
pop
pop
cmp
shr
std
sub
addr16
in
or
shrl
xor
pop
mov
enter
std
jno
mov
cli
xchg
xor
adc
jmp
mov
divl
push
jo
scas
jp
inc
cld
ret
imul
mov
jns
cld
jmp
push
adc
leave
mov
aad
sub
test
add
pop
or
cmp
cmp
mov
in
push
movl
or
or
scas
xchg
scas
aas
or
inc
aad
push
shlb
gs
lret
shrl
mov
in
xchg
test
and
cmp
inc
imul
out
push
jbe
sub
test
mov
ret
push
adc
sbb
mov
repz
sub
stc
cmpsl
lcall
int
pop
or
mov
les
xchg
inc
adc
sub
xor
or
ficoms
sbb
imul
repz
or
roll
sbb
addr16
mov
outsl
xor
mov
and
shl
jp
adc
negb
xor
push
pop
test
out
mov
inc
leave
push
fwait
xchg
orl
xchg
push
in
cmp
pusha
pop
and
daa
add
and
push
dec
mul
adcb
pop
pop
fdivrp
sbbl
mov
fwait
dec
mov
xor
pop
nop
mov
inc
sub
imul
mov
repnz
adc
jp
mov
andl
pusha
aam
pop
push
inc
jo
cmp
push
xor
jle
addb
pop
jae
dec
dec
int3
inc
sbb
and
mov
adc
mov
or
ds
fs
cwtl
scas
xlat
adc
call
test
pop
sub
mov
push
pop
mov
xorb
sub
shrd
sbb
lock
aad
loope
cltd
das
daa
jl
adc
push
cmp
ljmp
cs
xchg
lock
shrl
stos
and
and
shl
or
ss
out
pushf
mov
jg
mov
xchg
sbb
loop
and
test
sbb
imul
push
pop
add
or
outsb
jo
clc
jbe
outsl
cmp
testl
and
movsl
push
rol
adc
xor
aaa
pop
inc
movsl
lahf
lds
pushf
pushf
lret
jmp
ja
push
ja
jle
outsl
das
hlt
test
xchg
vpshld
inc
mov
aaa
and
xchg
push
out
add
xchg
ret
xchg
dec
fwait
js
insb
and
inc
xor
push
fnstsw
repz
jae
test
jmp
and
add
notl
popf
push
mov
mov
imul
scas
adc
jne
cld
jecxz
cwtd
jne
cmp
add
sbbl
test
jae
sub
inc
insl
jnp
xchg
inc
ja
push
ljmp
xchg
or
nop
dec
add
jmp
and
jbe
pop
inc
sbb
mov
ffreep
iret
addl
pushf
jne
mov
sahf
bound
xlat
loopne
pop
lock
mov
cmp
fdivr
xchg
mov
je
pop
cmp
cli
or
popf
shr
aas
sbb
cmpb
test
or
jno
pop
adc
and
decb
cmc
mov
mov
or
xlat
movsb
push
inc
inc
in
ja
fs
push
mov
cmp
jmp
jmp
push
imul
iret
push
jns
cmp
inc
or
dec
popf
clc
loopne
cmp
arpl
loope
ds
cmp
pop
xchg
in
aam
and
dec
in
push
cmpl
pop
xchg
jo
or
popa
shrl
adc
notb
int3
rolb
mov
out
daa
mov
stos
rcrb
push
dec
dec
pop
dec
inc
sahf
push
out
jbe
aad
fcomps
icebp
in
mov
xchg
out
mov
mov
jmp
out
mov
sbb
pusha
pop
mov
iret
int3
add
cmp
scas
mov
adc
mov
cmp
jle,pt
lahf
lahf
lcall
or
fists
or
cmpsl
lods
jae
xchg
pop
pop
push
cld
jnp
push
or
clc
les
ds
pop
xchg
adc
jbe
push
lret
aas
roll
push
lret
ds
fbstp
movsl
mov
mov
imul
outsb
adc
cwtl
jae
in
pop
into
lret
inc
cmpsl
test
xchg
pop
cmpsb
ret
inc
push
push
sub
add
arpl
in
scas
add
rclb
inc
sbb
push
in
rclb
lods
mov
std
mov
lds
daa
inc
orl
pop
mov
pop
movsb
hlt
imul
sar
es
pop
sub
dec
cmpsb
loopne
mov
sbb
pop
or
adc
cmp
jns
ror
and
xor
pop
dec
xchg
mov
nop
push
fdivrs
inc
xchg
outsb
sbb
cmp
movsb
or
pop
je
mov
mov
pop
test
nop
xor
jmp
addr16
mov
push
and
aad
mov
out
test
pushf
add
lea
inc
ljmp
fnstsw
stos
enter
adc
jb
outsl
mull
xor
pushf
cmp
arpl
aad
xor
or
lods
add
dec
inc
inc
std
push
fwait
push
ss
pop
lock
mov
in
dec
pop
call
insl
pusha
cmpsb
cmp
hlt
sbb
jns
sarb
loopne
push
xlat
add
dec
push
movsb
jge
jecxz
arpl
stos
je
mov
push
cwtl
repz
stos
xchg
pop
sti
int
and
push
push
in
pop
roll
or
inc
pop
push
cs
sub
mov
xchg
dec
mov
pop
adc
sub
fs
in
xlat
pop
add
xchg
xchg
jmp
jl
fcoml
cwtl
pop
jnp
shlb
adc
inc
adc
es
stos
mov
es
je
xor
in
mov
dec
cmp
inc
in
pop
mov
mov
and
inc
fsts
and
mov
mov
in
sbb
sbb
inc
dec
push
dec
pop
jo
jae
pop
or
insb
daa
or
xorb
adc
push
cwtl
out
cmp
or
mov
jecxz
divb
jg
pusha
lds
mov
lock
and
ja
mov
mov
shll
out
jecxz
loope
mov
jo
movsb
push
jne
inc
test
pop
jecxz
mov
ss
or
out
jmp
xchg
jo
dec
insb
lods
scas
xchg
jp
xchg
into
or
dec
sub
test
adc
mov
lds
repz
mov
call
mov
or
int3
dec
jne
mov
push
xor
xchg
pop
movl
aam
mov
sahf
movsl
mov
xchg
sbbl
dec
testl
aaa
xor
shrb
lods
adc
mov
mov
jae
addl
rol
enter
pop
inc
leave
fwait
jns
add
clc
adc
xorl
fadd
fnstsw
fimull
or
mov
mov
adc
sub
xchg
out
and
cmpsb
and
xchg
adc
adc
or
iret
mov
mov
pop
and
push
xchg
add
shrl
lea
cmp
adc
and
dec
mov
loopne
sub
sbb
add
and
jge
leave
mov
mov
push
mov
iret
xchg
xor
fistl
sbb
and
fwait
push
int
mov
inc
into
adc
faddp
mull
gs
adc
std
insb
es
or
mov
jo
pop
movsb
push
push
cmp
rolb
addr16
add
arpl
jg
inc
ret
iret
loopne
testl
xchg
cwtl
jmp
and
mov
sub
ss
fcompl
pop
xchg
rcl
xchg
adc
add
pop
mov
clc
mov
and
push
sahf
shrb
xchg
rcll
iret
jmp
mov
pop
mov
stos
and
flds
icebp
outsl
push
lods
pop
sbb
out
sbb
das
scas
stc
jg
add
popa
out
push
pop
mov
push
js
imull
out
hlt
pop
mov
stc
hlt
sbb
pop
repz
lret
xchg
or
push
sub
je
xchg
lret
push
paddsw
arpl
loopne
cmpsb
xchg
adc
sub
xor
cmp
andb
jp
shll
cmc
dec
inc
outsb
ds
jmp
sub
imulb
xor
pusha
fisubs
je
jno
test
loope
jmp
dec
sbb
fiadds
scas
mov
test
inc
ret
stc
test
popf
call
or
gs
inc
xor
push
sbbl
mov
sub
orl
mov
lock
jecxz
push
or
in
addr16
iret
push
sub
out
fists
outsl
mov
loop
sbb
mov
jl
out
arpl
push
test
je
dec
jle
addr16
add
sub
aam
dec
cmpsb
sbb
sbb
inc
push
mov
mov
hlt
sub
frstor
aaa
mov
lahf
lret
push
mov
icebp
call
mov
jae
nop
in
inc
pop
and
xchg
ljmp
test
adc
mov
adc
mov
adc
mov
lea
pcmpgtw
inc
pop
sti
fisubrl
call
test
jmp
js
mov
xchg
mov
popa
or
ret
ja
cmp
pop
mov
sbb
jo
dec
sub
fisubl
sahf
outsb
or
dec
stc
push
or
fwait
inc
push
jno
pop
iret
lret
push
aas
iret
dec
adc
jmp
xor
movsb
stc
mov
pop
pop
dec
cs
push
xchg
in
mov
push
std
loop
repnz
adc
lret
inc
stos
mov
pusha
cmpsb
in
xchg
xor
imull
cmp
aaa
xchg
mov
fldt
fistpll
inc
and
xchg
fsubrl
xchg
push
cmp
fsubr
sbb
cmpsb
faddl
scas
mov
adc
fistps
mov
sub
pop
in
int
loopne
sub
or
mov
inc
repz
push
or
movsb
inc
push
xor
lret
mov
mov
test
jns
mov
xor
cmpsb
push
mov
outsl
ficompl
mov
pop
adc
push
out
mov
cmp
in
mov
fdivrl
pop
add
mov
std
dec
pop
ret
inc
xchg
push
pop
inc
mov
cmp
lods
clc
sub
mov
and
stos
adc
or
mov
repnz
jb
gs
cmp
push
inc
popa
or
xchg
push
mov
icebp
push
gs
push
pop
arpl
cmp
and
or
jge
inc
jno
jb
push
push
or
mov
add
cmpsl
adc
xor
fistl
mov
pop
fwait
or
int
in
orb
bnd
and
or
xchg
sbb
loop
jmp
gs
shrl
stc
or
hlt
enter
pushf
mov
push
add
je
mov
and
add
adc
stos
xchg
gs
jecxz
subb
dec
cltd
push
lods
mov
stc
or
mov
dec
pop
clc
fwait
mov
sbb
mov
push
insb
movsb
repz
insb
es
lods
and
xlat
pop
xlat
sbbl
loopne
mov
arpl
push
push
jg
in
mov
jle
lcall
rcrl
cmp
outsl
andb
in
andl
adc
mov
mov
adc
or
cld
xor
adc
add
xor
repz
cmc
cld
movsb
stos
push
repz
loopne
fs
jo
add
data16
adc
sub
inc
sti
jo
or
arpl
push
pusha
fbld
dec
or
lsl
mov
sub
dec
push
dec
add
mov
loope
in
add
sbb
jmp
mov
mov
call
and
push
dec
cmpsw
aad
or
insl
mov
or
fidivs
pop
jnp
out
lods
cmpsl
ds
cmp
mov
jae
shr
mov
adc
or
pop
repnz
or
push
stc
jnp
xorb
fidivl
cld
addr16
mov
sub
xorb
push
mov
xchg
fxch
das
iret
adcl
hlt
lret
lock
mov
pop
jo
into
cli
mov
lret
and
sub
es
rol
inc
pop
imul
loope
mov
movsl
enter
mov
xlat
cs
aad
jo
xor
adc
sbb
push
jl
mov
mov
jle
adc
push
pop
fnstsw
movsl
or
xchg
xor
and
in
cmp
icebp
push
add
rclb
push
jge
mov
insl
mov
fldenv
pop
add
out
lock
arpl
cmp
add
mov
jbe
movsb
push
inc
in
cmpsb
or
addr16
sub
mov
jo
int3
fwait
inc
sub
dec
dec
fnstsw
nop
dec
or
dec
jmp
xchg
into
pop
and
jne
shr
inc
push
mov
dec
lahf
inc
dec
jg
int
jmp
and
inc
nop
mov
std
mov
jle
adc
or
adc
sub
and
scas
or
push
out
mov
jo
mov
add
inc
in
movsl
xor
jge
flds
jb
int3
adc
lods
imul
push
jecxz
sbb
xchg
pop
movsl
testl
lcall
sbb
jo
xchg
xchg
cld
insl
jmp
mov
jmp
add
pop
or
fs
shlb
sti
sarl
insl
jae
dec
mov
mov
push
mov
xorl
mov
mov
inc
and
insl
fcmovbe
pop
imul
dec
ljmp
outsb
gs
adc
or
stc
sbb
push
mov
inc
testl
pop
lret
insl
cmp
adc
mov
arpl
mov
aad
fcom
push
sub
lea
push
nop
lods
lock
ror
in
clc
ds
mov
addr16
xchg
fstps
fistpl
mov
push
inc
enter
push
jle
dec
lods
or
mov
inc
push
or
jle
xchg
pop
sub
sub
out
arpl
std
ret
push
nop
mov
xchg
jmp
xchg
adc
lret
ljmp
ljmp
dec
jae
sub
pusha
jle
scas
lds
xor
pop
mov
fldenv
add
icebp
cmpb
or
push
mov
xor
movsb
jecxz
call
dec
fisubrl
imul
pushf
daa
cmp
jne
push
aad
xchg
push
sub
movsl
adc
cmpsl
int3
in
push
loopne
push
jmp
ret
nop
test
addr16
push
inc
test
jge
fmuls
jae
jno
xlat
sub
imul
add
push
adc
int3
mov
jl
bswap
ret
fcmovbe
mov
cmc
dec
pop
push
mov
push
fbld
dec
sub
popl
ret
mov
icebp
out
xchg
insb
mov
fimull
fs
pop
xchg
adc
movsl
addr16
out
test
push
and
adc
push
jb
outsb
insb
mov
cmpsl
jno
mov
cwtl
sbb
dec
xchg
push
xor
mov
xor
imull
call
js
mov
dec
jo
pop
pop
lock
or
or
jge
jl
jg
aaa
std
inc
jo
icebp
out
sub
test
cltd
idivl
cmp
lret
dec
aaa
mov
sub
sub
jns
jg
imul
sub
rcrb
hlt
addl
mov
or
lret
fbld
scas
into
or
sahf
stc
adc
lds
cmp
xor
sahf
rolb
data16
push
jno
popf
popa
cld
push
sbb
and
mov
leave
stc
push
fwait
cmp
jmp
clc
mov
sub
cmp
mov
push
pop
test
cmp
pusha
push
push
xlat
sub
cmp
push
ficompl
mov
xlat
inc
and
add
fcoml
sub
js
outsb
cmp
clc
jb
add
imul
push
test
lods
pop
xchg
out
jae
cld
mov
scas
sub
and
lock
dec
mov
std
inc
icebp
push
scas
mov
movsb
lds
nop
out
inc
and
std
jo
dec
cmp
inc
cltd
subl
or
sub
sbb
pop
in
sbb
mov
inc
mov
mov
mov
jle
push
mov
lahf
gs
push
mov
xlat
fwait
cmc
fldt
jmp
lahf
stc
popf
je
jmp
xchg
pop
inc
cmp
push
push
pop
mov
inc
pop
stos
push
ret
cmp
in
pop
adc
adc
push
cmp
inc
add
cmc
scas
mov
xlat
add
movsb
xchg
add
pusha
xchg
scas
ss
out
xor
stc
sbb
add
mov
inc
hlt
bound
push
addr16
pop
pop
mov
lods
add
adc
xchg
jmp
out
xchg
data16
hlt
pop
xor
enter
outsb
cltd
nop
jecxz
adc
fstps
cmc
hlt
iret
push
add
dec
mov
das
mov
mov
lcall
pop
out
call
jo
mov
aad
cmp
popl
insl
and
lds
mov
cltd
mov
lahf
mov
iret
popa
mov
sub
push
pusha
mull
xor
mov
lret
rorb
mov
and
pusha
dec
adc
or
out
pop
adc
mov
and
cmp
cmp
jle
lahf
sahf
cmp
push
lods
jle
mov
dec
ret
sarb
incb
inc
push
xchg
insb
in
xchg
sub
push
loop
adc
iret
movsb
pop
push
or
dec
mov
mov
inc
push
push
cmp
mov
loop
inc
leave
cmp
adc
sub
iret
xchg
sbb
adc
sbb
xor
jmp
and
mov
dec
sub
jmp
jl
pushf
inc
test
pop
fmull
lcall
shlb
push
push
and
data16
push
iret
sub
int3
in
cmp
bound
es
jne
sbb
adc
pop
pop
pop
jnp
dec
in
cmpsl
stc
cmpsb
stc
sub
fsubs
enter
lcall
xorb
fdivl
notb
stc
dec
jbe
mov
stc
pop
test
mov
out
push
les
sahf
xor
mov
sbbb
test
inc
fiaddl
in
xor
sub
push
mov
add
lret
inc
psubw
dec
sbb
and
push
and
push
add
push
inc
adc
pop
ss
sar
or
data16
sub
cmpsb
movsl
and
inc
xor
es
lahf
imull
das
pop
cmp
jnp
sub
push
test
xchg
dec
loope
sub
loop
inc
js
insb
jae
out
into
mov
jmp
sti
xlat
repnz
addl
push
cltd
fcom
mov
cmc
into
mul
in
adc
push
jns
push
dec
out
lret
mov
int3
cmp
cmp
inc
scas
jne
add
mov
lret
pusha
das
mov
xor
dec
and
cmp
inc
dec
dec
jmp
and
mov
push
sbb
add
data16
xchg
mov
pabsd
mov
cmp
jb
xchg
cmpsl
jmp
mov
xor
popa
push
out
pop
or
mov
test
mov
push
mov
mov
out
jp
icebp
or
call
xor
in
or
ds
test
push
sub
divb
in
push
pop
scas
sarl
rcl
lods
push
outsb
test
xchg
mov
insb
mov
add
sti
xor
mov
push
pushf
js
in
mov
inc
hlt
jmp
and
mov
nop
mov
and
mov
dec
test
mov
dec
sub
sub
lea
add
dec
je
ret
adc
aaa
pop
cmp
repnz
movsl
pop
or
xchg
ret
pop
lds
scas
xchg
shrl
mulb
inc
mov
fiaddl
filds
push
adc
inc
mov
pop
shlb
lahf
jne
je
nop
lock
push
ret
insl
data16
and
or
nop
xchg
mov
sbb
int3
cmp
xor
jo
pop
shrb
fst
jmp
cs
lret
jmp
inc
out
cwtl
lods
frstor
inc
insl
xor
ja
jmp
adc
dec
and
icebp
cmp
pop
xor
mov
ja
scas
testl
movb
xor
cltd
mov
pusha
loope
pop
sbb
adc
stc
mov
fisttps
mov
mov
jne
aad
jo
pop
scas
ret
test
push
pop
pop
push
cmpsl
inc
pop
dec
clc
es
sar
xor
mov
lcall
addb
xlat
pop
jb
data16
sub
and
into
aas
gs
leave
xchg
push
push
int
push
dec
jecxz
push
mov
in
or
imul
and
leave
push
sub
clc
jl
mov
fdivs
push
add
sbb
cwtl
push
push
scas
pop
aaa
cmp
in
add
and
loope
pop
dec
test
dec
and
mov
mov
fdivrl
xchg
repz
pushf
add
pop
shll
aas
dec
pop
cmpsb
mov
dec
aaa
loopne
fisubl
insb
push
sub
mov
sub
daa
dec
mov
ret
std
add
mov
pop
out
push
filds
pop
inc
int
inc
mov
je
lods
lret
enter
push
cs
pop
imul
push
jp
in
push
adc
es
adc
sub
lock
cmp
inc
mov
dec
jp
sarb
out
ljmp
cmp
sbb
pop
inc
and
push
mov
shlb
stos
pop
jl
sbb
inc
lret
in
inc
push
ss
enter
pusha
lea
hlt
lods
mov
sbb
sbb
and
cmp
aas
dec
pushaw
xor
mov
xchg
cmpsl
inc
mov
test
test
gs
add
mov
pop
jmp
mov
popl
mov
dec
cmp
sbb
lods
cmp
inc
add
test
sbb
push
dec
insb
xchg
jno
cmpb
insl
or
out
enter
hlt
test
sub
pusha
scas
or
out
cmpsb
bound
in
mov
adc
mov
daa
push
inc
outsb
sub
sub
sbb
or
movsb
dec
mov
pop
mov
or
sar
jmp
pop
into
xchg
cwtl
insb
push
sub
mov
add
daa
cmp
xchg
pop
cmp
xorl
in
cmp
xchg
mov
sahf
jp
std
mov
jp
cwtl
inc
jle
cmp
cmpb
push
jmp
and
dec
lret
dec
mov
sub
mov
dec
dec
cmp
out
pop
sub
std
and
cmovns
int
add
insl
and
je
lahf
and
jae
pop
jmp
push
gs
inc
sub
pop
cmc
je
jb
aad
lock
mov
inc
jae
or
sbb
adc
jno
cmc
rcll
cmp
mov
aas
xchg
mov
cmp
or
add
movsb
lods
xchg
adc
lahf
aam
mov
jp
inc
mov
mov
xor
insl
pusha
movsb
add
push
or
neg
inc
aaa
or
add
xchg
jb
fdivrl
rep
add
sub
leave
xchg
inc
or
jnp
fs
add
and
repnz
cmp
mov
sbb
adc
xor
pop
pop
in
mov
pop
sahf
xor
stc
pop
cmc
push
sub
loope
dec
sub
jno
sub
pop
cmpsl
aas
jbe
dec
xchg
pop
leave
loope
inc
test
pushf
jbe
call
test
and
add
or
mov
fwait
adc
iret
enter
sahf
imull
lret
mov
shlb
mov
or
jno
test
xor
fcmovnb
imul
mov
hlt
repz
loop
cli
pop
pop
or
pushf
xor
fdivl
fwait
and
push
xor
stos
mul
pop
outsl
scas
xlat
enter
adc
cld
push
repnz
lock
cmp
movsb
je
mov
in
fisubl
in
or
and
out
fisubrs
xchg
dec
cmpsb
std
add
fcmovne
jmp
inc
repz
sub
pop
add
sahf
popa
scas
adc
scas
adc
leave
sub
lock
mov
lcall
jecxz
xchg
lock
into
add
or
add
daa
adc
inc
imul
sub
sbb
add
xor
fucom
and
xor
inc
push
in
mov
jbe
lcall
pop
sbb
gs
cmp
add
sahf
mov
mov
cmp
cmp
or
lea
add
das
pusha
out
in
pop
mov
notl
jno
test
sbb
push
in
push
cld
jl
leave
imul
jns
mov
pop
pop
jns
add
loope
repnz
inc
lea
jae
sbb
sbb
jns
sub
adc
cmp
cmp
mov
pop
mov
das
pushf
scas
fistpl
jne
xlat
cmc
xor
fmuls
mov
dec
mov
inc
and
jmp
jl
mov
stos
sub
and
jp
fwait
mov
aam
data16
popf
hlt
adc
test
dec
rorb
adc
dec
outsb
pop
or
inc
mov
stc
in
add
xchg
lret
lret
push
inc
xor
mov
shrl
jns
jge
inc
sahf
mov
inc
gs
mov
mov
adc
inc
std
jp
icebp
adc
int
jge
push
in
push
pop
jbe
test
test
cld
push
or
mov
notl
add
hlt
fs
faddl
lock
jge
hlt
arpl
inc
jg
out
cmpsl
dec
imul
mov
bound
xchg
mov
into
or
sti
int3
dec
movsl
fisttps
inc
bound
int3
movb
out
ss
les
lea
sbb
jp
or
add
mov
inc
xchg
push
std
jne
xchg
jae
test
clc
std
mov
add
mov
or
lds
pop
xor
adcl
xchg
mov
mov
lret
gs
out
push
xchg
mov
pop
pop
xor
mov
mov
andl
psraw
pop
pop
push
mov
or
in
fdivrl
dec
pop
lods
mov
shrb
sbb
pop
sub
jg
shrl
jl
sti
push
xlat
adc
lock
insb
inc
jbe
push
push
push
ret
in
mov
icebp
dec
pslld
fmull
sbb
clc
aad
sub
cs
cmp
mov
add
pushf
or
and
jecxz
pop
push
aas
outsl
daa
mov
fsubrs
stos
xchg
sahf
mul
popa
nop
jmp
in
jle
in
add
fwait
or
les
pop
pop
mov
jnp
push
cmp
cli
movsb
xchg
pop
cmp
es
ss
ljmp
push
pop
cs
enter
shll
mov
sbb
fdivrl
sbb
gs
sbb
testb
das
aas
pop
push
push
jp
adc
daa
imul
int
xor
adc
dec
lea
mov
int
sarb
fs
shl
arpl
mov
int
jmp
mov
pop
sub
mov
pop
nop
pop
cld
push
dec
pop
stos
insb
pop
dec
aas
xor
push
test
xchg
stos
cmpsb
fiaddl
cmc
shll
dec
push
mov
xlat
sbb
xor
push
and
mov
mov
fs
fnstenv
ljmp
les
xor
int3
xor
xor
push
push
jg
fwait
popa
jg
int
lods
outsl
inc
or
or
mov
out
xor
les
push
lret
cmpsb
mov
adc
cmpl
jmp
es
jmp
loopne
push
or
loopne
cmpsb
jnp
stc
xor
outsb
push
hlt
jnp
dec
pop
and
adc
movsb
cmpsl
sub
out
or
mov
mov
pop
push
loopne
push
mov
xchg
fimull
addr16
cmp
mov
mov
cmc
dec
sbb
fistpl
adc
imul
ss
bsr
mov
pop
out
lds
orb
outsl
mov
and
sti
sbb
cmp
jo
push
stos
cmc
fsubrs
roll
sbb
je
test
pop
pop
dec
clc
xchg
sub
add
cs
fcmovne
repz
add
fst
shrb
push
jp
xchg
mov
sbb
xor
lcallw
hlt
sarl
pop
sub
sub
test
sbb
fistpl
test
fmull
std
jle
loopne
pushf
inc
jbe
mov
fidivs
mov
sbb
pop
mov
movsl
adc
or
cmc
jp
adc
lds
add
inc
sub
mov
jp
div
push
movsb
cmp
adc
jle
scas
enter
cmp
ret
orb
mov
mov
sbb
mov
int3
adc
lret
pop
outsl
cli
lds
pop
in
jne
mulb
xor
rcll
clc
bound
pop
adc
in
jb
lea
lds
push
sbb
xlat
sbb
clc
cltd
std
pop
aas
jns
fmuls
fs
dec
dec
cmpsb
pop
cld
mov
shr
cld
push
lret
inc
add
rcll
inc
mov
xchg
lahf
adc
or
sub
outsl
aad
pop
push
sub
sbb
lods
or
dec
mov
mov
mov
gs
jg
fsts
pop
data16
adc
imul
pop
jo
cmpsl
scas
push
loope
out
ror
adc
sahf
mov
lods
mov
dec
aas
jnp
pop
sbb
movsl
test
gs
adc
cmp
push
mov
movntps
xor
xchg
sub
jmp
xchg
jo
adc
jno
ljmp
pop
lods
test
cwtl
mov
xor
insb
aas
lret
and
push
clc
push
hlt
xcrypt-cfb
cmpsl
div
stc
push
int3
mov
in
or
in
or
imul
fdivr
or
movsl
add
and
add
xchg
cwtl
xchg
adc
mov
rorl
fdiv
int
mov
sub
pcmpgtd
pop
popa
xchg
mov
into
sub
lahf
test
mov
xchg
icebp
icebp
arpl
ja
test
icebp
dec
push
scas
inc
fnstsw
lea
cmc
cltd
jge
dec
loopne
mov
mov
mov
bound
in
cmpsb
popf
ljmp
mov
xchg
rcr
add
outsl
in
push
lock
and
in
sbb
push
sbb
xor
jecxz
je
iret
js
out
mov
xlat
inc
sahf
enter
cmpl
ja
lea
mov
lods
shlb
rorl
mov
rclb
or
insl
mov
jp
scas
clc
test
cmp
cltd
mov
or
lock
iret
pop
mov
scas
jae
sbb
xor
jno
cmp
clc
adc
shl
add
stc
push
mov
shrl
iret
stc
cmp
ret
jg
ucomiss
xchg
popa
aad
push
pop
imul
sbb
mov
pop
push
xchg
mov
sahf
cmp
xor
sub
shr
fwait
jecxz
dec
popf
jb
fisubs
fnclex
data16
ret
in
lret
mov
push
inc
mov
daa
scas
pop
jo
pushw
clc
inc
or
xor
loopne
imul
and
sysexit
iret
lea
shr
into
add
jge
or
mov
mov
cmc
jmp
cwtl
pop
pop
mov
jb
cmp
or
inc
or
stc
mov
and
repz
aas
pop
pop
repz
cs
dec
xchg
sbb
xchg
sarb
xor
push
sbb
adc
pop
rorb
adc
jbe
call
ljmp
mov
mov
sbb
add
addb
inc
adc
pop
ret
sub
xor
xchg
insl
cwtl
push
mov
scas
fs
or
sub
mov
jae
loopne
cltd
xchg
test
insb
pop
je
cltd
fs
jne
mov
add
adc
rorl
ret
out
jmp
mov
test
rcll
push
es
scas
loop
int
add
cmpsl
push
inc
push
es
jmp
call
sbb
add
cmp
push
or
fnsave
sub
inc
adc
out
sarb
or
xchg
or
in
jnp
out
or
mov
sbb
adc
lea
adc
cmp
aaa
push
dec
xchg
xor
movlps
push
or
aas
dec
loopne
xchg
mov
pop
mov
sbb
xchg
sub
sbb
lcall
pop
push
sbbb
imul
fs
test
lret
jno
cmp
in
xchg
ja
shr
les
dec
test
or
sbb
pop
mov
jle
loopne
push
inc
pop
das
cmc
mov
imul
imul
pop
and
or
imul
shlb
bound
sub
pop
sub
subb
jbe
outsl
and
loop
jecxz
adc
xor
je
pushf
mov
inc
jl
or
fs
and
jle
mov
test
sti
jb
das
flds
adc
sbb
pop
in
inc
outsb
pushf
cli
mov
ljmp
and
pop
sub
adc
aad
andl
lcall
test
clc
push
cmc
add
pushf
pop
pusha
lea
popf
inc
ja
enter
sbb
lret
test
cmpsl
dec
sub
cs
pop
push
fisubl
ljmp
push
fnstcw
or
repz
adc
push
inc
push
imul
jmp
mov
pop
pop
outsl
xor
subb
test
mov
sti
mov
mov
jecxz
jg
test
sbb
add
pop
dec
rolb
stos
cld
push
ds
xor
mov
fnstenv
inc
repnz
loopne
sub
mov
xchg
incl
addb
mov
out
push
movsl
or
mov
adc
add
mov
mov
cmp
ret
lods
mov
dec
push
rolb
push
call
cmp
stos
scas
or
push
insl
inc
lds
clc
mov
sub
and
adc
ret
sbb
xchg
or
fwait
adc
push
push
les
repz
loopne
aaa
ljmp
inc
cmp
mov
push
mov
neg
aam
aad
pushf
inc
push
add
adc
add
sub
in
in
xchg
je
adc
or
shl
clc
jo
jno
inc
adc
jae
mov
bound
mov
inc
and
jge
xchg
outsl
addr16
push
sarb
out
jns
fmull
les
dec
das
andnps
jbe
jg
or
arpl
jb
mov
repnz
lods
jge
add
xchg
sub
out
pop
jnp
jmp
mov
pusha
mov
mov
and
mov
adc
inc
mov
dec
outsb
jo
jge
out
or
mov
movsl
stos
pop
mov
dec
in
jne
jg
mov
andb
pop
xchg
jecxz
nop
inc
inc
out
cmp
lret
or
mov
and
lahf
in
inc
scas
xchg
outsb
nop
shlb
xchg
mov
pop
movsl
jno
mov
mov
stos
mov
sarb
or
stos
bound
mov
add
xchg
loope
ss
ljmp
mov
in
mov
cwtl
push
int3
inc
jne
lods
unpcklps
adc
bound
lds
mov
inc
jne
adc
inc
push
adc
bound
sbb
je
outsb
mov
pop
xchg
iret
in
xchg
sarl
fidivrl
sbb
mov
shrb
xor
dec
into
add
fwait
adc
es
fbstp
jmp
cmp
fwait
add
nop
cli
xor
pusha
jae
adc
sub
push
xor
subb
sub
and
sub
mov
sub
jge
cmpsb
dec
shl
outsl
rolb
jno
xor
fwait
je
add
pop
rolb
sbb
inc
repz
lea
pop
jo
loop
popa
push
sarb
jp
andb
mov
jnp
mov
shlb
sub
sahf
notl
inc
pop
sahf
mov
icebp
push
adc
mov
mov
roll
mov
in
data16
adc
sub
pop
mov
or
out
imul
adc
lea
movsl
repnz
mov
inc
mov
jne
inc
out
aad
movsl
sbb
and
idivb
sbb
loope
decl
movsb
xchg
mov
bound
negb
pop
mov
sub
xchg
je
in
stos
mov
add
inc
cs
fstpl
cmp
mov
mov
cmc
cmp
sbbb
pusha
sbb
mov
popf
sti
sbb
mov
fs
rolb
lods
in
jp
mov
lods
xor
lahf
fldenv
fs
adc
push
mov
roll
pusha
shr
rorl
mov
cltd
mov
xchg
pop
aad
or
sahf
lods
gs
cmpsb
bound
xchg
jmp
nop
repz
fadd
dec
sbb
adc
sarl
mov
je
mov
arpl
out
gs
repz
xchg
leave
jns
shrl
lcall
sub
imulb
sbb
ficomps
mov
int3
pop
sub
or
cmpsb
hlt
inc
cs
lret
roll
and
pop
push
fiaddl
mov
xor
clc
fsubrl
fcomps
push
das
inc
mov
xchg
les
mov
jecxz
push
add
jns
mov
or
fiadds
push
mov
popf
in
and
ret
add
push
mov
lods
dec
or
sbbl
lock
mov
dec
stc
add
xchg
mov
mov
cmp
inc
out
mov
fs
or
loop
dec
xlat
and
bswap
or
mov
cmpsb
jl
je
pop
push
bnd
mov
mov
sbb
sahf
stos
sbb
cmp
jo
mov
in
jg
xor
add
std
imul
iret
inc
imul
add
sub
mov
aas
sarb
insb
mov
fists
sub
fs
leave
je
pop
in
mov
cwtl
push
gs
loope
jg
idiv
pop
dec
inc
xor
loop,pn
sub
sbb
pop
xor
sbb
xor
arpl
imul
clc
fnstcw
mov
fcmovnb
fucomi
mov
lods
int3
push
test
pmaddwd
dec
ficompl
nop
in
push
pop
lahf
mov
gs
inc
or
xchg
mov
jae
jge
fnstsw
adc
or
dec
cmp
xor
dec
xor
jb
fistpll
cmc
jne
outsl
sbb
jg
loopne
cmc
std
insl
daa
lock
loop
sbb
push
popa
pop
lea
jo
aas
sbb
and
out
push
xor
dec
and
shll
sbb
adc
std
pop
cmp
dec
xor
xor
lea
ficoml
and
out
adc
sarb
dec
pminub
xchg
pop
cmp
movsb
leave
jecxz
adc
dec
ljmp
repz
cmc
xorl
sub
js
mov
adc
push
mov
je
fisubrs
dec
pop
add
fsub
cmp
pop
clc
xchg
inc
cli
scas
inc
and
push
sbb
adc
xchg
out
arpl
insl
jbe
xchg
ljmp
repz
mov
push
pop
mov
loope
pop
lods
dec
test
cmpsl
into
and
jnp
cli
insl
mov
mov
push
add
jl
cwtl
xor
imul
insl
adc
enter
hlt
dec
fldt
adc
mov
dec
loop
out
jno
add
cli
cmp
and
adc
shll
xchg
dec
out
xchg
clc
notb
dec
push
xor
gs
std
xchg
stos
jge
pop
adc
rcr
mov
adcl
xor
or
shl
lods
pusha
fsubs
cmp
ss
scas
shlb
out
cmp
test
lret
int
sbb
mov
pop
xchg
repz
mov
cmp
xchg
stos
jge
and
mov
nop
mov
jl
clc
push
adc
testb
lahf
mov
jbe
test
mov
movsb
mov
popa
inc
scas
jecxz
popf
out
jbe
push
es
sub
sbb
nop
call
rclb
pop
pop
mov
mov
stc
pop
or
fmuls
imul
ret
std
cmc
rcrl
filds
and
pushf
xor
inc
push
and
popf
mov
mov
rcl
dec
cmp
shrb
cmp
push
out
pop
adc
xchg
cmp
in
fimuls
sub
jno
daa
mov
cmpl
sahf
and
mov
mov
popa
mov
or
sahf
cmc
mov
es
or
xor
inc
rcrb
mov
push
nop
adc
sub
pop
jnp
mov
jbe
sub
fs
nop
js
push
mov
ss
bound
fldcw
sub
inc
shr
xchg
xlat
mov
sbb
incb
jb
mov
xchg
cmp
insb
cmp
xor
sbb
test
test
cmp
sub
xchg
in
and
jns
sbb
fidivl
jge
ja,pt
inc
clc
mov
int
lods
cmpsl
clc
mov
sti
sbb
fdivrs
leave
fwait
repz
or
dec
scas
mov
scas
notl
inc
xor
ret
idivb
xor
inc
add
cmc
dec
xchg
rclb
cmp
fnstenv
xchg
bnd
clc
inc
aad
push
sub
out
cmp
into
cmpsl
rcl
sbb
repnz
aad
xchg
lea
out
xchg
cmp
add
push
fiadds
and
out
mov
pop
adc
roll
mov
cwtl
fsubrs
orb
adc
mov
or
mov
xchg
add
in
fldcw
aad
sub
jl
or
gs
fnsave
aaa
mov
addb
push
cmp
sti
mov
jmp
sbb
pop
movsl
push
xchg
testb
push
push
fdivs
pop
xchg
sti
sbb
inc
dec
jne
sbb
sbb
add
lods
mov
test
sbbl
movsl
and
jnp
addr16
push
out
nop
mov
xor
daa
repnz
jb
jnp
xor
les
pushl
lret
clc
or
xchg
sar
jge
lds
adc
inc
push
xchg
mov
mov
popf
out
adc
push
lcall
sbb
sarb
dec
nop
sub
lock
stos
adc
mov
dec
cmp
mov
pop
into
stos
jo
jecxz
mov
das
imul
test
or
mov
sbb
dec
cmp
jl
sbb
dec
aam
or
dec
dec
xchg
das
inc
or
dec
jns
sbb
or
in
stos
ficoml
pop
push
repnz
daa
adcl
iret
lds
sub
pop
enter
push
hlt
add
xchg
bound
movb
mov
jmp
xor
dec
shrb
push
jge
push
inc
mov
xchg
mov
mov
rol
lahf
mov
scas
fdivp
inc
repz
mov
mov
in
cmp
jae
shr
stos
push
incl
xchg
or
roll
sbb
and
inc
notl
sbb
ja,pt
cmp
out
mov
xor
mov
sub
and
addb
inc
mov
dec
add
incb
lret
movsl
mov
mov
jno
mov
mov
rorb
mov
mov
pop
dec
shrl
popa
scas
ds
fldl
movsl
mov
ds
pop
lret
popf
xor
sbb
sbb
ret
pop
fwait
nop
out
gs
stos
push
xchg
and
sarl
jmp
fnstsw
mov
insl
pushf
xchg
push
es
cli
xor
or
scas
mov
test
clc
out
add
cmp
pop
ljmp
xchg
inc
dec
add
lods
xchg
adc
jp
mov
cmp
psraw
mov
in
loopne
js
movsl
loopne
out
out
add
sbb
pushf
mov
jmp
xor
subb
iret
sub
les
stc
cmp
mov
ret
pop
hlt
and
inc
gs
jmp
out
jo
mov
dec
mov
out
cwtl
xchg
stc
loope
and
icebp
push
mov
test
push
jae
pop
sub
shrl
push
cmp
pop
movsl
cs
ret
scas
and
pushf
aas
adc
outsl
and
out
push
and
lret
adc
ljmp
lds
cmp
lahf
fs
call
and
sub
jl
sbb
outsl
sbb
push
add
cmp
adc
mov
mov
fstpl
fcomps
dec
insb
sbb
leave
adc
notl
dec
aad
pop
mov
out
out
movsb
xor
aad
mov
repnz
lea
mov
sbb
test
mov
subl
sahf
aad
sub
je
mov
push
roll
cwtl
arpl
dec
cmpsb
shll
testl
nop
xorb
loopne
mov
or
aad
cmpsl
pop
jge
outsl
mov
sbb
je
sbb
ud2
les
scas
push
or
fisubrs
jp
push
xor
and
xchg
pop
pop
cwtl
cmp
mov
shlb
push
xchg
pop
inc
jne
pop
arpl
out
xor
xor
cli
sahf
push
outsl
sbb
dec
push
inc
sarl
dec
sub
xchg
shufps
pop
or
xchg
xchg
or
jns
dec
prefetch
cmp
sbb
out
mov
or
inc
fisubrl
inc
push
scas
fbstp
and
arpl
aam
mov
lcall
cmpb
cmp
cltd
sbb
push
xor
mov
sbb
icebp
mov
es
cmp
xor
in
les
cmp
or
out
xchg
rolb
arpl
movb
mov
ja
mov
lods
and
cmp
lock
and
cmp
das
add
mov
icebp
loop
insb
cltd
mov
es
shll
pop
inc
cmp
xchg
shrb
repz
push
nop
movsb
mov
mov
subl
xor
pop
pusha
test
pusha
aad
test
and
scas
pop
out
jae
mov
inc
inc
push
out
outsb
mov
push
adc
pop
push
std
popa
icebp
sbb
lods
shrb
cmc
jb
aaa
inc
jbe
pushf
inc
pop
pop
adc
add
cmp
rolb
nop
call
cli
push
pop
call
lea
je
into
mov
rorl
test
push
xchg
scas
sbb
xchg
frstor
jns
adc
sbb
movsb
jp
cmpsl
dec
aam
out
cvtps2pd
mov
xor
or
sbb
add
das
push
and
fsubs
xlat
mov
insl
jnp
fimull
xchg
nop
or
out
pop
xor
cltd
sbb
jmp
fucomip
imul
mov
pop
pushf
add
icebp
add
add
imul
orb
das
pop
jae
xchg
sub
sti
push
or
mov
cltd
loopne
cmp
in
in
jno
shlb
dec
jb
mov
and
pop
sub
jl
and
mov
mov
iret
mov
fisttps
cli
pop
jp
repz
pop
inc
xor
jae
and
sbb
cmpsl
bound
shlb
push
xchg
xchg
stos
jp
xor
pop
inc
rcll
movsb
inc
push
xchg
lahf
push
andb
outsb
popf
in
sub
iret
ss
stc
scas
fnsave
stos
cld
and
inc
gs
ljmp
cltd
or
or
push
mov
mov
nop
test
std
into
adc
rorl
stc
dec
push
scas
or
scas
sti
ss
xchg
inc
xchg
std
mov
fdivs
roll
xor
sub
jmp
xchg
iret
cli
mov
and
leave
or
add
adc
jle
pop
jmp
pop
pop
or
and
mov
fmul
jbe
js
pop
aam
imul
movsb
ret
push
dec
jnp
or
adc
loope
jae
es
rorl
push
cld
nop
push
into
je
sbb
outsb
cmp
outsb
lods
sbb
in
cmpsl
jbe
mov
mov
pushf
pushf
push
add
sbb
negb
pop
mov
mov
andb
mov
pop
in
jle
inc
adc
popa
push
adcb
sub
fistpl
and
ret
add
int3
push
clc
fsubl
dec
aas
cmp
loope
push
rorl
jne
cmp
add
inc
aas
dec
aas
sbb
int
scas
in
mov
xor
pop
faddl
gs
add
jo
es
adc
roll
js
sub
jle
addr16
ror
and
dec
sbb
mov
adc
aad
push
repnz
hlt
inc
and
mov
inc
xlat
mov
jmp
enter
jb
gs
les
and
mov
stc
testl
sbb
mov
lcall
fnsave
call
push
jge
clc
pop
aad
xor
cwtl
dec
mov
loopne
cmp
roll
xor
ds
lds
lret
dec
popa
push
out
loop
frstor
jp
fdivs
and
adc
add
lcall
or
movsb
pop
push
gs
sbb
xchg
sub
mov
xor
add
dec
xor
int
out
addr16
movsb
dec
scas
push
pop
decb
fwait
push
outsl
fiaddl
cmp
mov
sub
mov
cld
adc
repz
pushf
movsl
xchg
mov
mov
inc
stos
cmp
dec
dec
ficomps
xchg
lods
cmpsb
lds
clc
fs
cmp
cmpl
cmc
add
push
pushf
movsl
inc
sub
or
sbb
sub
jo
mov
jle
or
ret
lds
lds
lahf
sti
out
fisubl
in
outsl
outsl
inc
sbb
int
or
xor
jp
lock
imul
addl
and
push
std
and
push
sbb
xchg
cmp
push
mov
push
jp
cmpsb
jns
push
xor
add
cmp
sar
int
test
insl
mov
push
mov
fstpl
cmc
and
dec
pop
fwait
lock
mov
sub
push
jo
jbe
imul
mov
movsb
scas
add
icebp
into
les
js
repnz
xchg
imul
and
and
cli
mov
in
aad
jnp
add
sbb
subl
push
test
lcall
lods
adc
fidivs
scas
lcall
sbb
stc
fildll
add
xchg
cmp
sbb
mov
mov
lahf
in
movsl
sub
imul
push
sahf
je
mov
mov
adc
push
push
and
pop
jb
pop
sub
sub
jp
shlb
pop
or
mov
ja
mov
mov
or
shlb
test
and
pop
pop
pop
xchg
jp
add
loope
fwait
and
cld
jno
cwtl
les
dec
mov
sbb
stc
or
in
test
jne
and
daa
dec
mov
xchg
arpl
sbb
in
add
xchg
int3
enter
adc
stc
jnp
shrl
add
xor
scas
adc
pop
jl
xor
jecxz
mov
jb
clc
inc
inc
mov
lds
lcall
pop
xchg
test
or
fisttps
mov
or
push
push
pop
lahf
dec
repnz
jo
xchg
dec
dec
loop
js
sub
sbb
pushf
scas
mov
fcompl
mov
enter
dec
push
cmp
rorl
push
add
mov
inc
mov
sbb
in
iret
pop
adc
les
fcmovbe
icebp
jb
dec
xor
or
test
fistpl
outsl
leave
add
lods
pop
addr16
loopne
data16
adcb
add
in
mov
mov
mov
scas
xor
filds
pushf
fistps
stc
lods
mov
aad
aad
std
push
scas
mov
add
or
mov
lea
mov
cli
mov
push
punpckhbw
xchg
imul
sub
cmpsl
sti
in
cmp
repnz
adcl
aas
in
cmc
dec
xor
mov
mov
stos
jg
adc
dec
mov
lret
es
jecxz
push
push
mov
pusha
mov
outsl
add
lret
mov
movsb
sbb
inc
xor
lcall
in
in
mov
mov
mov
lock
xchg
jl
or
sbbl
xor
cltd
cmpsl
push
inc
loopne
in
push
cs
mov
xchg
repnz
adc
call
jle
cmpsl
cli
loop
ja
sub
daa
push
push
xor
sti
lcall
lcall
mov
xlat
mov
dec
fstl
or
stc
xchg
or
int3
aaa
pop
sbb
cmp
cmpsb
mov
rorl
pop
push
mov
jg
pop
imul
push
stos
pop
stos
in
js
iret
push
xchg
dec
mov
push
jnp
inc
stos
push
xor
push
cmp
out
mov
notb
imulb
mov
fwait
mov
mov
insl
xchg
fistl
cmp
ja
cmpsl
mov
loop
inc
dec
ja
pop
insl
mov
and
pop
cli
pop
xchg
stos
fwait
and
pop
dec
loop
inc
mov
dec
ficoms
push
popa
cld
add
inc
outsl
in
pop
pop
popa
jle
repz
mov
xor
or
repz
mov
aad
scas
push
jns
inc
ja
or
fimuls
aas
test
pop
jmp
fldenv
adc
out
aaa
sbb
les
fadds
xchg
add
pop
push
mov
adc
sbbb
lds
loopne
orb
das
sbb
addb
xlat
hlt
shll
aam
out
enter
gs
sub
ja
loope
sti
xchg
sbb
mov
mov
fld
test
cs
jg
fmull
mov
mov
sbb
psubusb
inc
cmp
mov
mov
push
lods
mov
popf
dec
xor
shlb
adc
push
ljmp
lods
cmpsl
sub
testb
jp
pop
fsub
adc
in
sbb
cmc
xor
jbe
mov
cmpsb
sub
in
and
sbb
xchg
xchg
mov
rcr
or
jae
mov
lock
push
and
iret
in
into
add
mov
out
repz
pop
sti
jp
inc
adc
inc
outsb
add
in
xchg
cmp
dec
mov
push
cmpsl
mov
addr16
cltd
xorb
outsl
out
addr16
lea
outsb
mov
ja
push
hlt
std
fildll
test
cmp
cld
mov
insl
xchg
mov
hlt
xor
enter
or
les
xchg
and
hlt
lret
ljmp
add
sub
push
and
shrl
shrl
cmp
pop
adc
xor
dec
push
out
inc
shlb
shrb
test
imul
jge
insb
inc
fwait
dec
sub
xor
ret
cmpps
mov
orl
test
fiaddl
sub
xchg
shll
add
add
mov
cwtl
movsb
mov
add
fstp
int
adc
loope
movsb
repnz
cmp
outsb
xlat
push
or
negb
cmp
int
xchg
lea
shll
notb
roll
mov
je
inc
sarl
inc
pop
out
popa
mov
xor
mov
clc
push
or
out
add
stos
xlat
imul
loop
sub
sti
sub
or
shlb
cmp
pop
or
lods
movsl
cmp
loop
mov
xchg
dec
push
ss
lret
fucom
movsl
push
cli
mov
jne
xchg
mov
mov
mov
and
rclb
mov
ficoml
xchg
cwtl
mov
sub
mov
pusha
or
stos
adc
jns
test
xor
inc
jge
outsl
cmp
mov
cli
leave
mov
sarb
cwtl
jb
out
jns
mov
pop
div
lret
sub
fidivrs
ret
jne
mov
pop
daa
ljmp
bound
xlat
xchg
icebp
out
into
lea
cmp
repnz
ja
loop
add
pop
or
fcoms
pop
stos
icebp
sbb
repz
rcll
jae
jecxz
and
subl
mov
adc
out
lods
mov
addr16
fsubrp
mov
mov
xchg
or
sub
cmp
mov
shrl
loope
pop
repnz
nop
mov
gs
xor
sub
fstp
test
mov
mov
and
mov
pop
lods
sbb
cld
push
mov
inc
pop
push
add
cmc
cwtl
fwait
mov
mov
jl
lods
cmpsb
sub
mov
mov
enter
cmc
and
cmpsb
and
decb
jge
mov
leave
imul
insl
push
or
push
add
arpl
mov
sti
adc
or
js
aas
rcl
sub
les
pop
aas
add
adc
and
hlt
pushf
mov
out
iret
jle
test
popa
dec
or
bound
and
lcall
adc
or
sbb
rolb
xchg
scas
mov
pop
xchg
xchg
scas
jle
add
nop
test
push
rorl
adc
dec
dec
push
push
js
mov
mov
or
mov
ss
pop
and
in
shlb
and
pop
inc
loopne
fstps
and
or
cmp
add
mov
fmull
pop
push
loope
pop
pop
mov
out
pop
mov
adc
adc
adc
cmc
sbb
jnp
mov
outsl
rorl
push
and
daa
in
jb
es
aam
adc
popa
dec
adc
sti
push
jne
mov
inc
test
pushf
sbb
and
clc
nop
xchg
jmp
into
ret
mov
out
mov
inc
adc
xchg
lret
nop
inc
adc
and
push
add
sub
jmp
jae
sub
mov
ret
and
aam
in
aaa
mov
pop
les
aam
mov
outsb
jnp
int
popf
fs
pop
jmp
mov
mov
sbb
cwtl
jbe
jle
ret
jnp
repnz
cmp
in
movsl
lret
fwait
cli
mov
lds
push
rorb
fsubl
mov
test
clc
imul
dec
pop
andb
pop
in
inc
inc
out
imul
add
repnz
xlat
rcl
dec
pop
imul
pop
int3
das
aad
mov
lahf
popf
int
les
jns
or
inc
and
test
and
test
dec
mov
dec
outsl
fldlg2
fwait
cmp
adc
sbb
sbb
inc
cmc
push
icebp
aaa
sbb
mov
int3
mov
lret
into
adc
out
pop
or
ret
fbld
scas
add
shlb
mov
dec
js
lea
and
ret
popf
pop
push
or
or
mov
movsb
in
sbb
dec
mov
sti
in
stos
mov
lods
fmull
pop
xadd
dec
js
repz
sbb
enter
test
andps
sbb
dec
fnstsw
out
sbb
mov
inc
push
pop
sarl
and
fidivl
push
scas
mov
cli
mov
ljmp
add
lods
aad
mov
dec
add
inc
add
orb
jmp
pop
ds
aaa
fs
mov
test
repnz
push
daa
dec
repz
stc
insb
stc
dec
and
loopne
inc
mov
fdivrs
cmc
mov
and
clc
enter
dec
jae
icebp
call
in
fmul
xor
setne
push
mov
out
stos
cmp
jnp
sub
shlb
jne
pop
ja
lcall
sbb
adc
jae
int3
inc
mov
lea
push
pop
sub
mov
das
xor
subl
sbb
lcall
pop
adc
jecxz
sbb
dec
shl
add
push
dec
icebp
fnstsw
jecxz
xor
mov
mov
jb
out
adc
sbb
mov
cmp
xchg
jo
sub
mov
push
mov
xor
inc
mov
pop
jno
mov
jb
jecxz
mov
xchg
pop
test
andl
aam
push
lock
aad
cmp
adc
rolb
or
ljmp
pop
add
lods
sbb
jae
dec
cmp
dec
outsb
xchg
mov
mov
mov
es
inc
xchg
xchg
sar
lcall
mov
movsl
jnp
mov
push
hlt
pop
pop
push
or
mov
out
push
push
jae
add
dec
or
dec
jae
lahf
mov
loope
das
inc
sub
jbe
pop
fs
in
jo
outsb
and
lcall
ljmp
xchg
dec
insb
ljmp
or
lret
and
popa
ss
pop
loop
mov
mov
clc
adc
mov
cmpsb
and
xor
je
cs
movsb
adc
sbb
xor
xlat
mov
push
lret
add
cmc
push
imul
mulb
jp
rcr
jno
jo
sti
test
rolb
je
dec
sbb
sub
sub
pop
hlt
scas
popa
sub
dec
fdivs
inc
fldl
das
and
push
ds
loopne
jae
and
inc
mov
dec
mov
cld
jo
sti
mov
and
mov
cmp
jne
les
incb
nop
adc
jo
ds
push
cmp
xchg
or
repnz
movsl
push
imul
push
test
pop
out
sub
mov
and
cmp
shlb
pop
push
jbe
dec
repz
icebp
inc
fcmovbe
lret
shr
or
mov
adc
cmpsb
inc
inc
jne
xchg
dec
movsl
adc
dec
push
or
and
inc
outsl
dec
adc
bound
inc
fwait
xchg
mov
jo
cld
push
pop
or
sahf
mov
punpckhwd
jo
dec
add
aas
sbb
fisttpll
cmp
call
call
mov
jae
mov
ds
push
stos
mov
inc
pop
lcall
mov
in
xor
movsb
jns
jae
mov
or
add
inc
pop
xchg
lret
dec
inc
mov
or
adcl
enter
push
mov
push
cli
loopne
clc
jmp
ss
fstpt
or
pushf
mov
sbb
mov
jns
popa
jmp
sub
das
pusha
hlt
push
gs
shr
icebp
adc
pushf
mov
mov
pop
nop
push
cmpsb
sti
jl
mov
mov
in
out
mov
cmc
in
pushl
jae
xor
das
xchg
jmp
rorl
sbb
xchg
movsl
test
pop
add
mov
inc
rorl
call
xchg
popf
out
jns
in
shrb
mov
hlt
pushf
mov
ljmp
mov
rclb
addr16
dec
and
ret
jb
inc
mov
sub
gs
and
jnp
cmp
lret
push
or
add
add
pop
jnp
pop
addb
xchg
int
jns
aas
add
jecxz
fwait
jne
cltd
mov
dec
test
mov
xchg
pop
xchg
cmp
int3
pop
stc
aad
xor
pusha
xor
lds
mov
lcall
mov
pushf
or
xchg
sub
or
mov
inc
cmpsb
inc
jg
lock
icebp
outsl
fadds
jbe
lock
aas
and
and
imul
lret
test
ret
outsb
xor
fldcw
fisttpl
mov
mov
or
xor
orl
pop
and
in
fwait
data16
adc
aam
test
cli
xlat
andb
int
jg
je
aaa
mov
fbstp
aam
dec
or
ret
add
lret
inc
pop
dec
dec
mov
sub
mov
scas
and
cli
mov
and
ss
mov
pop
std
movb
and
sahf
lret
mov
mov
add
gs
xchg
add
or
xchg
or
mov
bound
cld
sahf
cmpl
mov
dec
xchg
push
xchg
mov
in
sbbb
mov
xor
ja
test
test
into
or
data16
pop
ror
mov
cld
push
cmp
or
push
adc
mov
icebp
repz
rorb
cmp
xor
sub
pushf
adc
cmp
data16
inc
pop
inc
negb
or
cmp
and
and
call
mov
sti
sbb
je
fwait
mov
lret
cmp
push
daa
int
push
dec
lret
inc
test
adc
inc
gs
test
mov
in
and
xor
sub
scas
mov
sbb
mov
pop
dec
xor
insl
shrl
cmpsl
fs
popf
test
push
and
cs
ja
inc
pop
mov
mov
mov
or
or
and
divb
cmp
mov
adc
mov
test
dec
enter
mov
movsl
xchg
fwait
inc
pop
popf
add
mov
mov
out
fildll
or
cmp
clc
test
push
sbb
pop
imul
add
jl
into
cs
shlb
mov
mov
sbb
pusha
imulb
push
jae
mov
mov
inc
mov
cltd
xor
cmp
dec
icebp
repz
rcrb
fstps
daa
xlat
jle
lds
or
shll
push
les
inc
testl
shl
and
jae
cmp
mov
scas
mov
lret
sbb
mov
les
cmpsl
fcomps
or
imul
repnz
notl
leave
enter
repz
cmp
dec
push
test
ja
in
push
insl
pushf
dec
jecxz
pop
in
lahf
addr16
jbe
jmp
jmp
fnstsw
push
cmp
notl
outsb
dec
mov
out
sbb
decb
xchg
pop
sbb
mov
sbb
mov
das
repnz
data16
and
jp
mov
jg
sbb
mov
mov
lret
gs
inc
js
lds
loope
mov
lods
testl
std
ficoms
outsl
lods
ljmp
cmp
dec
outsb
subl
movsb
imul
fldlg2
mov
dec
jae
jb
cltd
sbb
pop
cs
cli
xchg
sub
bound
ljmp
test
pushf
popa
mov
test
cmpsb
mov
aaa
adc
push
mov
and
repnz
std
ljmp
push
es
push
arpl
fadds
mov
sub
push
mov
lock
negl
out
mov
fcompl
popa
add
and
mov
lret
mov
push
js
or
pop
fisubrl
sbb
ja
mov
repz
rol
clc
push
out
out
mov
outsb
mov
test
xchg
push
imul
roll
pop
ret
push
xor
xor
pop
test
mov
pop
movsb
inc
clc
mov
xor
mov
out
test
out
std
gs
loope
dec
or
or
adc
pop
inc
xor
mov
mov
xchg
inc
in
mov
movsb
inc
bound
in
and
and
inc
fsubrl
in
inc
fcomip
imul
stos
sub
lods
inc
xor
ficoml
das
sahf
loopne
mov
inc
sub
dec
out
shlb
movsb
fstpl
push
in
mov
jle
sub
bound
stc
loopne
stos
add
lods
mov
popf
ficoms
int3
lcall
mov
cs
clc
lahf
xor
rclb
stc
sti
push
cs
fisttps
scas
xor
sarl
stc
pop
add
fs
cwtl
addr16
xor
add
inc
arpl
movsl
push
sbb
pop
mov
out
roll
daa
ret
mov
push
aad
aad
push
sbb
fcmove
ret
sbb
jp
cli
sarb
imul
rcr
ficomps
je
in
pushf
add
es
pop
mov
repnz
popf
sub
xor
mov
jb
je
xchg
xor
imulb
insl
in
pop
pop
push
xor
pop
push
pop
mov
outsl
adc
lock
and
movsb
sub
jns
adc
insb
xor
mov
add
push
pop
adc
inc
mov
mulb
lods
or
sbb
int3
xchg
shlb
test
mov
mov
lahf
lods
movsl
fucomp
xor
pop
pop
idivb
mov
mov
mov
out
and
into
pop
adc
insl
nop
push
insb
scas
ljmp
add
xchg
lret
pop
aad
mov
scas
mov
xchg
add
sti
fsubrp
ja
pop
fadds
inc
jg
jg
fs
sub
negb
adc
popf
or
mov
pop
in
push
aaa
idivl
in
push
mov
dec
and
mov
dec
stos
sbb
ret
cmp
subl
sbb
es
cmc
mov
xor
add
out
cmp
data16
xlat
add
cmp
in
cmp
int3
popl
xor
outsb
adc
les
mov
or
jge,pt
mov
in
inc
jno
push
lret
mov
fistl
cmp
mov
or
adc
sub
jecxz
inc
lods
mov
fsubl
cwtl
pop
test
cmp
testb
xlat
push
cli
in
add
xchg
lret
push
mov
or
mov
xchg
hlt
popa
addb
test
xchg
std
mov
stos
mov
fiaddl
xor
fdivs
pushf
xchg
xor
push
pop
mov
data16
or
fidivs
scas
dec
subl
fadd
loopne
xor
in
fcoml
and
lock
jb
aas
js
test
xchg
cld
fdivrl
aam
fisubs
lods
mov
pop
jb
cli
aam
push
cmp
jno
sub
nop
add
dec
xlat
push
sbb
and
push
fsubs
xchg
clc
fs
sahf
and
xchg
mov
les
into
gs
fucom
mov
sti
icebp
mov
pop
movsb
inc
pop
movsb
icebp
inc
sbb
mov
int3
repz
call
pop
dec
out
inc
mov
pop
dec
movsl
stc
and
repz
testb
xor
mov
sbb
pop
das
in
adc
int3
aam
and
jne
xor
sub
jb
xchg
lds
ja
push
rcl
in
sti
or
xchg
in
pop
mov
mov
fsub
hlt
push
stc
imulb
pop
mov
mov
out
push
jnp
ja
ja
mov
test
or
insb
inc
sub
mov
scas
outsl
outsl
jae
push
lahf
mov
cmc
mov
mov
push
and
jl
test
rcll
nop
icebp
push
sub
pop
add
cmc
lret
jns
lcall
sti
dec
jo
jae
xor
push
je
cld
into
repnz
adc
lret
testl
dec
mov
inc
or
jno
rcr
sub
adc
ja
xor
repnz
push
enter
sub
mov
into
fldt
les
jmp
inc
sti
in
icebp
shll
sub
lret
lea
mov
pop
dec
inc
addr16
xchg
and
push
rorb
arpl
sub
sub
stc
rcll
call
subb
aas
aaa
xor
adc
fstps
cmpsl
test
hlt
enter
push
test
and
inc
jl
out
fs
iret
push
add
adc
xchg
and
mov
mov
sub
pop
scas
pop
or
das
push
push
sbb
nop
dec
in
movsl
fsubrs
stos
xchg
cmp
repz
cmp
jg
sub
out
idiv
cmp
ljmp
mov
pop
pop
loope
xchg
xchg
into
in
mov
or
mov
inc
xchg
jge
push
stos
xchg
mov
add
shll
pop
fs
fstpl
mov
dec
repz
jbe
mov
mov
xchg
imul
push
pop
rep
add
xchg
pushf
in
shrb
test
or
test
shl
add
adc
mov
rcrb
add
sarb
mov
test
mov
and
xor
jle
je
shlb
adc
cmp
or
fisubrl
enter
jbe
lret
pop
popf
ljmp
lock
in
dec
stos
jmp
push
push
jmp
cld
cld
mov
flds
add
pop
cmp
jo
popa
aad
shrb
jae
hlt
add
ret
jb
inc
or
cld
ss
jmp
inc
test
loope
ljmp
je
aas
push
ds
dec
addr16
mov
fidivrs
stos
pop
outsb
xor
xchg
mov
out
cmc
adc
xor
mov
jno
repnz
movsb
iret
cmpb
xchg
inc
insb
stos
cmpsl
jg
sti
xor
ss
rcrb
and
cmpsl
sbbb
sub
adc
daa
subb
xchg
jns
mulb
filds
das
jns
pop
loopne
mov
push
int
in
lods
fdivs
push
jecxz
sbb
mov
fsubl
or
pop
out
imul
pushf
ficompl
dec
jg
lods
or
mov
xchg
jb
cmp
pushf
jo
mov
popl
jae
xchg
mov
sahf
lods
and
mov
push
lret
or
cltd
clc
push
add
popf
mov
out
xchg
xor
xorl
or
dec
push
mov
movsl
int3
lods
cli
fdivrp
sbb
cmpsl
inc
mov
movl
aam
out
lods
pushl
cltd
mov
mov
addps
jbe
loop
mov
fs
and
das
in
ficomps
lods
jmp
aaa
mov
leave
push
gs
xchg
sahf
pop
xchg
adc
mov
or
ret
mov
push
mov
out
mov
into
cmp
icebp
out
xlat
movsl
imul
inc
push
push
jmp
cmp
xlat
movl
push
inc
dec
or
out
sti
call
scas
xor
neg
dec
fs
inc
mov
std
jge
sbb
daa
add
inc
outsl
mov
aam
xorb
jno
jnp
out
mov
jmp
out
and
sbb
mov
mov
jne
cmp
mov
lock
cmpsb
jmp
jecxz
bound
fsubp
dec
out
cli
inc
ljmp
mov
cmp
negl
add
sub
fxtract
sbb
sub
mov
dec
mov
mov
sub
hlt
xor
add
inc
xchg
and
orb
or
adc
int3
inc
or
mov
test
mov
or
sub
adc
xor
cld
orl
sbb
in
xchg
popa
lcall
xchg
xorb
fidivrs
stos
add
cmp
fs
xor
inc
movsb
or
sub
mov
loopne
scas
loop
mov
sub
outsl
in
inc
das
inc
or
mov
cwtl
pop
pop
mov
out
cmp
mov
pop
mov
leave
in
or
add
inc
lods
imul
andl
jbe
in
inc
sahf
mov
xor
push
addr16
mov
jno
scas
or
in
sub
mov
inc
mov
sub
das
hlt
mulb
ja
vpmacsww
es
lret
inc
sub
mov
dec
mov
int3
jnp
jbe
jmp
cmp
mov
and
jl
adc
xor
adc
sub
xor
es
push
push
fs
adc
pop
sahf
cmp
enter
movsl
or
push
xor
and
add
cmpl
mov
lahf
pop
mov
jle
xor
dec
inc
xor
mov
out
cmpsb
jnp
rorb
ret
add
dec
out
jle
cmp
sub
subb
cltd
or
dec
xor
push
add
es
jbe
inc
pop
loope
pusha
lods
jne
icebp
and
jecxz
sbb
sbb
popa
mov
in
fldt
xchg
mov
jmp
jmp
sbb
out
xchg
cmpl
cmp
sti
cltd
test
clc
or
adc
fimuls
cmp
popa
jl
or
inc
in
push
dec
push
xchg
cmpsb
popa
push
adc
xor
jo
mov
add
sub
add
or
jbe
movsl
fsubs
aas
ret
out
stos
sub
xlat
pop
mov
ret
mov
adc
sub
cmp
data16
fcoms
cmp
xor
fwait
shlb
into
fwait
int3
add
add
pop
comiss
lea
clc
fistl
inc
enter
lcall
shrb
push
daa
push
sahf
fisttpl
push
pandn
sbb
inc
call
int
data16
mov
lea
jmp
test
subb
int3
into
or
mov
push
dec
mov
add
scas
subb
pushf
push
loope
xchg
jbe
pop
sbb
jmp
mov
cmp
xchg
and
shrl
push
das
out
cwtl
call
shlb
mov
and
call
adc
hlt
push
call
pop
rclb
add
in
xchg
push
cmp
ret
in
fnstsw
in
adc
push
mov
pop
jl
movsl
sub
js
fdivrs
pop
push
mov
cmp
xor
pop
shlb
xorb
int
psrld
int
inc
repnz
or
mov
je
cmp
gs
cmp
movsb
cmp
lret
pop
aas
pop
jecxz
jbe
dec
or
pop
xor
sbb
out
pop
sub
jnp
and
std
mov
mov
incl
xchg
add
push
cmp
aas
lcall
mov
push
xchg
stc
xor
and
and
mov
xchg
aas
add
cmc
add
xorb
adc
clc
icebp
mov
add
pop
ds
gs
jmp
or
hlt
push
cwtl
push
and
inc
fistl
ljmp
xor
push
lea
push
pop
push
gs
sbb
cmpsb
cmp
dec
cld
sub
cmp
test
mov
or
sub
mov
pop
push
cmpsl
xlat
test
xlat
cmpsl
mov
cmp
adc
fidivrs
cmp
mov
aam
push
inc
fs
ret
cli
sbb
dec
shrb
inc
insl
jae
incl
shrb
xchg
dec
enter
push
arpl
pop
ds
push
ss
pop
mov
sub
add
pop
jg
insl
roll
les
dec
mov
call
out
mov
cmp
pop
aaa
adc
lea
jmp
inc
sbb
mov
lea
xor
push
sbb
sbb
mov
cmp
lcall
movsl
push
mov
fs
sbb
jno
int3
push
repz
into
lods
jge
je,pt
push
mov
pop
lret
adc
and
test
iret
pop
or
xlat
call
xor
fs
mov
push
xor
lret
mov
jns
movsl
inc
dec
sub
in
stos
jae
mov
mov
mov
mov
popf
paddw
sbb
inc
mov
insb
jg
icebp
jp
popl
sete
scas
jmp
sbb
adc
bound
fbld
popa
adc
xchg
out
jno
sbb
aam
ret
cmpsl
push
imul
push
movsl
mov
test
js
aad
dec
jg
ss
cmp
lock
inc
ljmp
mov
sbb
cmc
subb
hlt
out
es
mov
sahf
inc
cmp
out
mov
inc
sub
cltd
loopne
jo
testl
lock
out
jns
ja
jle
sarl
fidivs
icebp
sbb
cmp
and
adc
mov
jo
roll
cltd
pop
lock
xchg
dec
cmp
xchg
cld
pop
fdivs
ret
sub
in
stos
push
scas
push
mov
cmc
lahf
cld
mov
adc
shlb
test
lcall
cmpsl
pop
fldt
cmp
clc
xchg
popf
lods
add
sahf
setae
pop
add
ja
lods
xorb
xor
mov
mov
jmp
fadds
popa
dec
xchg
lods
cmc
sahf
rcrb
stc
push
pop
sub
jle
pop
dec
popa
mov
rclb
add
pop
rorl
pop
adc
add
lock
and
mov
or
mov
inc
rolb
outsl
out
pop
loope
or
into
test
cli
aaa
jle
sti
ja
push
sarl
jb
xor
test
sbb
mov
mov
jmp
and
sub
and
imul
add
ret
xchg
mov
add
frndint
outsb
pop
repz
xor
mov
es
adc
xchg
cli
adc
jmp
xchg
inc
fwait
inc
mov
jl
roll
sbb
aaa
cmp
and
cmpsb
jo
pop
mov
and
pop
mov
imul
xchg
scas
dec
xchg
rcr
mov
faddl
jne
lcall
dec
mov
and
mov
and
in
mov
gs
mov
push
and
repz
jmp
cld
xchg
movsb
mov
shrl
adc
dec
xor
stos
or
push
ja
mov
cltd
mov
or
push
in
push
xor
bound
mov
icebp
and
stc
push
repnz
inc
mov
dec
imul
or
adc
insl
push
mov
xchg
push
jno
xchg
mov
inc
cltd
pop
into
fwait
repz
test
dec
fsts
out
ret
je
jge
jno
xor
add
rorb
dec
test
mov
sub
mov
popa
clc
mov
rorl
mov
repnz
je
fists
sbb
fidivrl
cld
sbb
or
xor
xchg
adc
adc
sbb
out
mov
lret
xchg
push
and
out
jne
es
imul
dec
out
or
push
mov
mov
fcoml
in
roll
push
sbb
outsl
fisttpl
fs
pop
inc
xchg
jle
mov
jmp
in
sti
mov
cmp
dec
inc
call
or
in
jl
fmull
repz
jg
enter
inc
mov
mov
je
pop
pop
sub
jg
aas
mov
ror
daa
addl
hlt
cmp
or
fiadds
mov
jbe
or
mov
mov
dec
push
inc
call
addl
xor
loope
xor
loop
insb
xchg
pushf
and
outsb
movb
les
push
inc
mov
add
loop
cli
sub
rorl
inc
popf
pop
jecxz
fcomi
mov
inc
lods
push
pop
sub
js
test
or
add
sbb
sub
xor
inc
test
imul
fiaddl
and
push
fs
push
aam
xchg
push
pop
ret
test
ds
xchg
pop
jnp
adc
sbb
or
aam
push
jl
adc
rcrl
sbb
enter
out
ficoml
and
out
mov
outsl
mov
cmpsb
pop
pop
push
inc
aad
adc
fdivs
push
sub
or
lods
cwtl
xchg
lods
cwtl
push
lock
fdivl
mov
ret
int3
inc
cmp
cmpsl
xchg
inc
and
aas
inc
xchg
inc
movsl
lds
aaa
push
ja
dec
pop
fisubrl
jnp
push
pop
mov
les
pop
mov
xor
sub
ljmp
gs
dec
hlt
in
cmc
sarl
clc
dec
cmp
mov
rcll
dec
dec
sub
sbb
mov
mov
neg
adc
inc
iret
je
jne
lcall
mov
stc
js
dec
inc
aaa
sbb
inc
pop
mov
mov
andl
outsb
cltd
adc
push
lds
nop
aad
shrb
fwait
mov
or
push
mov
dec
or
cmp
dec
mov
mov
insb
push
ror
fiaddl
daa
mov
adc
aas
inc
out
push
and
push
push
cmp
test
or
es
ret
popa
out
fwait
jge
adc
fcomp
mov
hlt
add
dec
jae
sbb
jne
and
rol
jbe
xlat
cmp
outsl
inc
dec
push
lods
sti
push
mov
or
fstpt
mov
je
jae,pt
jo
test
testl
sti
pop
inc
mov
push
or
push
push
and
shll
sub
pop
xlat
aam
mov
jns
sbb
or
shr
mov
ret
cmpsb
lret
jp
pop
inc
push
shlb
loop
in
xor
mov
or
ds
out
xchg
mov
jo
outsb
dec
into
lods
jo,pn
jno
mov
or
push
cmp
sub
adc
ds
stos
cmp
and
rcrl
shll
sbb
sbb
lret
and
xchg
sbb
inc
dec
mov
xchg
mov
or
imul
mov
rclb
or
sbb
es
jg
adc
xlat
dec
repnz
dec
mov
inc
mov
add
xchg
js
ficoml
orb
xor
enter
xchg
test
jmp
pop
bound
mov
push
aad
andl
sbb
fsubrl
inc
idiv
push
cmp
pop
lds
pop
sub
mov
movsl
mov
and
push
inc
gs
in
scas
or
mov
call
sti
into
loope
push
push
pusha
daa
sbb
mov
popa
push
scas
dec
jns
mov
inc
mov
mov
sbb
dec
xor
adc
fs
sbb
lods
inc
pushf
cmp
out
add
nop
mov
enter
rcrl
outsl
sub
imul
sub
cmp
insl
mov
inc
mov
stc
addl
sub
cmp
mov
add
jae
push
arpl
pop
insb
mov
jmp
les
pop
and
sbb
subl
mov
inc
movsl
cmp
sbb
aaa
inc
add
and
sbb
mov
and
les
jg
inc
adc
ret
nop
loope
andl
hlt
adc
mov
mov
mov
fmull
std
dec
push
pop
stos
sbb
out
int3
icebp
lock
jge
fwait
enter
test
clc
mov
enter
or
mov
clc
arpl
aam
popf
pushf
insb
orb
fldln2
inc
adc
dec
mov
mov
popf
aam
jg
daa
pop
and
ja
sbb
cltd
int
repz
jp
mov
pop
sub
sub
add
and
ret
adcb
imul
fwait
mov
mov
mov
out
shl
cmp
pop
rclb
push
and
or
cmp
roll
dec
inc
adc
js
xchg
loop
int3
mov
loope
push
stos
and
stos
mov
pop
mov
xchg
or
es
cwtl
add
add
repz
dec
cmp
dec
out
add
add
fcmove
cmp
adc
daa
sbb
cmp
mov
sub
xor
and
out
fcmovnbe
sub
sub
out
div
dec
nop
loopne
in
xor
aam
les
push
push
rclb
adcl
test
shll
cs
aas
mov
cmpl
push
cmp
push
push
mov
mov
sarb
xor
inc
outsl
cltd
mov
fldcw
gs
mov
mov
out
daa
sti
jne
cmp
and
xor
iret
testl
sbb
fdiv
ja
fwait
pop
add
cs
imul
inc
in
out
xor
mov
aaa
fs
inc
mov
in
in
pop
dec
jecxz
bound
jg
in
imul
xchg
mov
adc
xchg
pop
int
insb
xchg
sbb
xchg
mov
in
sbb
ljmp
js
jl
lods
xchg
mov
sbb
and
in
cmp
fcoml
js
in
xchg
sbb
mov
adc
push
pop
or
outsl
pop
sub
jne
in
xchg
rolb
insb
orb
addr16
jge
cmp
adc
cmp
cwtl
xchg
out
mov
xor
adcl
jo
cmp
mov
lock
inc
pop
aaa
mov
inc
imul
push
mov
push
push
cmp
dec
mov
jle
dec
dec
cli
push
lock
and
mov
cmp
cmpsb
loopne
and
or
adc
pusha
hlt
jp
add
pop
or
aaa
jl
xor
popa
loopne
fsubrs
jg
scas
jo
ljmp
lcall
cltd
and
pop
je
test
and
adc
test
fsubrs
cmp
aad
gs
andl
lahf
repnz
inc
cltd
leave
push
lods
fbstp
popfw
ljmp
cwtl
test
loop
mov
dec
dec
scas
and
pop
or
jne
scas
xor
cmp
inc
int
sbb
test
das
mov
lret
cmpsl
mov
sti
add
and
cmp
sti
lock
scas
test
cmp
dec
dec
out
sbb
sbb
add
pop
add
jb
test
add
adc
in
or
popf
pop
mov
mov
lcall
sbb
or
into
cwtl
hlt
fcoml
fisubs
adc
lcall
imulb
call
xchg
imul
and
dec
mov
push
mov
cmp
loopne
sub
mov
lods
cltd
lret
push
fdiv
fstps
inc
lds
push
divb
push
xor
imul
in
insb
mov
push
xchg
sub
mov
jecxz
or
movsb
sub
add
mov
push
mov
sbb
mov
adc
jns
ds
jns
and
jbe
fisubrs
pop
imul
mov
cmc
scas
in
mov
xchg
pop
adc
incl
or
aad
fcomi
dec
fildl
jge
fnstcw
dec
push
in
adc
push
cmc
insl
movsl
or
dec
mov
out
dec
aas
xlat
cmp
ds
inc
movsb
dec
sarb
xchg
loopne
push
movsb
out
hlt
adc
dec
push
jnp
scas
ljmp
jne,pt
xchg
mov
lret
sbb
jmp
push
mov
cmpsb
pop
lahf
vpmacsdd
std
and
popa
sub
mov
pushf
aad
out
cmp
inc
xchg
lds
push
lds
mov
loope
movsl
fdivr
push
mov
pop
sbb
mov
arpl
vcmplt_oqps
popa
sbb
jp
jne
cmp
stc
addr16
sbb
mov
jno
cwtl
dec
adc
je
mov
pop
jo
mov
add
dec
mov
lcall
and
shll
sbb
inc
fsubrp
jns
int3
add
jecxz
push
clts
sbb
or
sahf
mov
mov
pop
and
mov
out
dec
ljmp
xor
mov
lea
xchg
xor
xchg
enter
fstps
jge
push
xchg
cmp
daa
ljmp
cmp
sub
fisubrl
mov
sub
mov
imul
sub
js
xor
cmp
dec
jnp
sbb
xor
jecxz
jl
add
das
pop
repnz
das
mov
ja
icebp
aam
sub
or
test
fimull
pusha
in
stos
scas
xchg
mov
cmp
xchg
shrb
mov
pop
aas
leave
dec
mov
xchg
adc
add
mov
out
dec
imul
pop
shlb
jbe
aam
dec
inc
xor
mov
mov
dec
xlat
xchg
mov
inc
inc
lea
dec
std
mov
aas
fsts
imul
sbb
int
dec
gs
repz
xchg
jg
push
sbb
fildl
mov
mov
lods
pop
inc
pop
cltd
xor
insl
push
add
and
mov
adc
jae
stos
lods
push
push
jg
and
cwtl
inc
xchg
aas
pusha
out
jge
push
inc
or
or
jae
or
xchg
inc
aam
pop
mov
mov
movsb
dec
andl
pop
jne
lcall
jmp
pop
dec
sbb
sbb
mov
xor
and
jge
xlat
push
jmp
mov
pop
lods
out
jp
cmp
sub
jle
mov
dec
adc
daa
jle
jbe
sbb
inc
mov
jl
jbe
and
mov
adc
pop
ds
mov
std
rol
mov
lahf
mov
push
pop
and
lahf
xchg
mov
dec
in
and
and
mov
cmp
movl
mov
mov
aam
jle
and
fimuls
in
mov
inc
pop
movsl
popf
mov
mov
je
out
mov
add
xchg
or
dec
xchg
and
dec
sbb
fildll
or
adc
adc
icebp
mov
nop
jb
cmc
pop
mov
jle
push
push
or
movsb
lods
push
xchg
lock
cmp
push
mov
push
jb
gs
mov
fisubrs
and
push
lods
add
jno
jecxz
push
pop
lahf
mov
and
negl
xor
scas
sbb
xchg
cmpsb
sub
and
sub
stos
sahf
ret
or
push
jmp
push
xor
popf
xlat
jns
xor
sbb
outsb
sub
mov
inc
mov
add
inc
mov
cli
cwtl
call
clc
and
sub
out
js
mov
das
jae
cmp
adc
mov
fadds
test
out
and
add
pushf
ss
xchg
or
mov
mov
jmp
or
add
adc
in
filds
loope
shrb
popf
xor
mov
ss
push
dec
lret
lock
xor
lock
mov
cmp
sub
scas
dec
sbb
cmp
add
adc
jl
pop
sbb
xor
lcall
mov
xchg
mov
cmpsl
decb
mov
daa
cli
xchg
mov
sti
inc
cmp
icebp
jl
xchg
imul
jae
mulb
fstpt
pusha
dec
icebp
jnp
not
mov
orl
shrb
xor
pop
cmpl
lea
pusha
ret
inc
fwait
in
pminsw
or
push
arpl
mov
pop
in
daa
aam
jo
xor
adc
push
xlat
and
int
push
xchg
mov
popf
mov
das
repz
mov
inc
popa
outsb
xchg
movsb
mov
push
mov
repz
sub
mov
push
mov
jbe
sahf
mov
pop
xchg
cmp
ror
lret
ljmp
arpl
out
add
mov
pop
aad
or
fwait
leave
outsl
push
sbb
mov
cli
adc
xor
mov
pop
pop
mov
std
nop
fcoml
neg
mov
test
inc
les
daa
mov
sbb
std
add
mov
repnz
sub
movsl
mov
cmp
xchg
jns
pop
sbb
pop
mov
jo
fldcw
lret
pop
sbb
sti
xchg
or
push
scas
cmp
in
ror
outsb
push
mov
and
jp
cltd
repz
add
lods
ja
mov
and
add
int3
dec
in
xchg
xchg
scas
dec
popf
xorl
push
nop
test
mov
push
mov
dec
addb
pop
in
in
imul
out
repnz
or
cltd
das
jb
sbb
xchg
xchg
in
repnz
lea
mov
push
jnp
lret
daa
fistps
insl
sarb
and
pop
cmp
ds
sbb
jo
test
ja
hlt
into
or
inc
leave
ljmp
cmp
call
xlat
cmp
shll
cmp
pop
ret
stos
cli
sbb
sbb
mov
incl
cli
in
xchg
shll
pop
clc
rcr
ret
mov
adc
sbb
mov
add
dec
inc
mov
mov
inc
fldt
mov
leave
push
mov
rorb
aas
and
mov
mov
in
adc
or
pop
repnz
sbb
jo
outsb
pop
pusha
xor
jg
cwtl
mov
push
push
cmp
lea
in
bound
fidivs
dec
iret
mov
mov
fs
repz
loope
jne
pop
js
lods
lret
cltd
pop
mov
push
in
pop
sti
rorl
out
and
xchg
cmpsb
pop
mov
repnz
adc
cli
adc
xchg
cmc
fildl
aaa
and
movsb
jle
dec
pop
cmp
stc
mov
mov
xchg
ja
pop
xor
cltd
inc
push
mov
jne
inc
mov
popa
push
insl
xchg
fwait
in
js
insl
sub
js
adc
pushf
xchg
cld
fcmove
push
sbb
dec
dec
pop
add
pop
movsl
sub
lcall
pop
dec
mov
jnp
push
std
or
inc
mov
leave
adc
dec
movsb
test
or
and
fwait
mov
xorl
pushl
out
sahf
int
mov
sbb
inc
and
mov
and
cmpsb
testl
mov
inc
mov
jo
ret
cltd
mov
outsl
sti
xor
fildll
xchg
or
xlat
pushf
or
dec
out
xchg
cmp
or
dec
xchg
fistpll
loope
fdivrl
inc
add
and
out
lret
or
scas
int3
stos
lock
int3
sub
xchg
xchg
and
push
mov
mov
aad
and
adc
pmaxub
jno
scas
dec
and
sbb
sbb
addr16
or
and
repnz
and
arpl
les
movsl
lock
cs
pushf
rcrl
xchg
jl
stc
ds
rol
out
cmpsl
xchg
mov
pop
jns
cmp
mov
jbe
fs
call
push
sbb
insl
inc
push
adc
imul
or
adc
fsts
xchg
jge
out
stc
lret
sti
push
scas
scas
lods
inc
dec
test
mov
pop
mov
call
or
lret
sub
xchg
xor
inc
ret
aaa
lahf
mov
fimuls
mov
xor
xchg
and
loope
mov
out
push
mov
or
les
stos
bound
sub
jae
mov
cltd
shr
or
gs
dec
add
lock
lret
loope
lret
adc
sar
icebp
aas
lods
xchg
sbbl
hlt
adc
xchg
push
mov
dec
push
xbegin
push
repnz
adc
repnz
jo
ja
movsl
xlat
les
cmp
adc
std
repz
stc
sahf
jo
lods
adc
inc
xchg
icebp
ljmp
jmp
lcall
adc
cltd
insb
xor
je
test
pop
add
into
xor
xchg
cmp
sti
fsubl
jno
imul
es
scas
clc
stos
xor
testb
mov
cmp
cmc
pop
mov
pop
cmp
fdiv
movsb
mov
cmp
add
mov
cwtl
mov
mov
mov
push
xor
ret
xchg
push
dec
test
inc
js
and
icebp
fldenv
jg
cld
dec
mov
nop
cli
js
out
mov
lods
add
ja
pop
cmp
jne
mov
and
dec
push
mov
je
pop
xor
mov
iret
pop
mov
fsubrl
sbb
sbb
loop
ficoms
jnp
int
push
mov
sbb
mov
or
js
stos
xor
and
mov
sub
loopne
mov
mov
mov
mov
pop
daa
push
add
mov
in
jp
mov
jl
mov
dec
loopne
pop
scas
in
ja
popf
insl
or
test
mov
in
lcall
lds
cltd
push
scas
mov
mov
jge
std
mov
bound
xor
stos
jle
dec
mov
stos
and
outsl
imul
dec
ret
fmuls
jg
mov
loop
mov
pop
data16
and
dec
or
movsb
inc
insl
out
gs
divb
out
mov
pop
sbb
aad
std
test
test
dec
out
lret
scas
fdivrs
ljmp
or
jns
movsl
mov
fstpl
int3
push
pop
shrb
mov
imull
test
enter
ficoml
outsl
inc
mov
insb
mov
sbb
and
mov
rcr
stos
or
out
out
shll
cmp
pop
hlt
cwtl
mov
jg
cmp
fwait
or
xchg
mov
sub
jno
or
enter
push
xor
mov
xchg
ds
cltd
iret
push
cld
jl
sub
push
xchg
das
push
rorl
repz
ret
xor
mov
ss
cmp
sbb
lret
mov
mov
mov
not
orb
inc
push
dec
and
daa
push
aaa
movsb
sbb
loop
add
int
push
repnz
clc
shll
dec
test
scas
dec
cmp
sbb
rorl
add
or
push
bound
loop
mov
pop
pop
insb
mov
xor
lahf
xor
mov
lahf
jno
test
or
pop
sbb
mov
dec
pop
test
scas
sbb
dec
ss
lock
andb
popf
push
popw
inc
jmp
lea
clc
inc
sub
adc
xchg
xchg
inc
sbb
fildll
push
std
jl
lret
xor
mov
stos
xchg
test
adc
in
mov
sbb
lods
and
cld
or
in
sub
in
inc
negl
jmp
stc
mov
loop
push
mov
in
jne
cltd
insb
daa
aas
xor
xor
test
jg
adc
data16
cmpsl
fcmovu
daa
hlt
rolb
cli
inc
xrelease
call
hlt
daa
pop
sti
adc
xchg
bound
mov
push
iret
int3
ret
push
mov
and
xor
lods
mov
std
aad
sahf
sarb
sub
sbb
jb
inc
xorb
cmp
lahf
mov
adc
adc
xchg
mov
aam
insl
add
aas
pop
xor
dec
mov
inc
std
addl
dec
ss
jae
cmp
pop
hlt
mov
and
clc
rclb
clc
daa
or
cmp
jo
and
dec
ja
mov
pop
ret
imul
iret
hlt
xchg
es
ret
mov
and
mov
negl
xor
aad
jmp
jbe
xchg
adc
fisubrs
sub
sbb
jae
dec
push
clc
pop
push
add
jne
popa
arpl
cli
cmp
mov
insl
inc
sbb
ss
sar
filds
fdivs
inc
mov
outsb
xor
cmp
pop
shlb
dec
jle
dec
popf
ds
xchg
xor
cmpsb
dec
push
dec
lret
jnp
sahf
outsl
in
shl
outsb
in
test
notb
jle
insb
lods
popa
mov
mov
fmul
test
add
ds
xor
mov
lock
mov
mov
mov
scas
inc
mov
test
movsb
fadds
ret
mov
pop
movl
jle
xor
mov
inc
mov
and
and
cmpb
imul
jle
or
aam
adc
or
fstpt
dec
loop
cmc
jecxz
push
mov
jae
push
xchg
push
mov
call
xchg
mov
adc
jl
jecxz
mov
ss
adc
jp
sub
dec
lcall
out
xchg
sbb
or
dec
mov
pop
push
pop
test
std
mov
or
adc
popf
jmp
movl
mov
jmp
jbe
jno
and
push
xchg
mov
inc
xchg
and
xchg
mov
adc
cmp
mov
mov
push
xor
inc
das
lods
xor
fs
incl
sbb
push
lret
movsb
andb
lods
clc
adc
cmp
inc
jbe,pn
inc
sahf
mov
pusha
popf
icebp
and
insl
pop
cmp
stos
ret
mov
xchg
fldl
push
xchg
push
mov
xchg
add
shll
pop
bound
test
hlt
test
push
adc
lds
aam
pop
pop
aam
cld
enter
sbb
pop
inc
inc
mov
push
call
cli
dec
mov
push
push
mov
pop
pusha
mov
movsl
mov
adc
fs
xchg
adc
and
sub
jg
jecxz
mov
jl
shll
mov
test
pop
adc
pop
clc
nop
dec
mov
nop
adc
xchg
and
lret
in
push
mov
fidivl
or
jne
jb
add
into
mov
cwtl
mov
into
xchg
or
lret
int
add
xor
push
leave
inc
mov
mov
add
mov
testb
cltd
add
add
fdivrs
decb
cli
and
xchg
lods
pusha
mov
stos
lods
sbb
test
or
xchg
std
lret
aad
xor
std
mov
mov
pushf
sbb
popf
adc
popa
int
pop
stos
adc
jp
mov
out
cmc
ret
jl
sbb
dec
lret
sub
inc
sbb
leave
jecxz
cs
sub
leave
dec
xor
lock
mov
orb
mov
inc
inc
dec
jb
or
sbb
push
aad
xchg
jne
stos
in
push
jo
sub
fmuls
add
repnz
cmp
mov
je
inc
lds
jp
test
or
push
mov
adc
sub
adcb
xorl
aas
add
pusha
std
ja
lock
out
sbb
imul
pop
add
int3
imul
mov
movsl
add
mov
mov
mov
mov
xchg
les
sbb
xchg
int3
dec
fildll
xchg
testb
loope
and
pop
cs
clc
pop
js
xchg
in
push
movsl
and
and
push
loope
icebp
les
daa
xor
jnp
cltd
push
sbb
dec
pop
decl
mov
jmp
out
sahf
dec
pop
sbb
xchg
ror
fwait
daa
fcmovu
and
dec
push
test
test
call
cmc
mov
mov
cli
mov
mov
ja
push
je
dec
mov
push
cld
nop
cli
or
push
xor
int
test
fcom
push
outsl
sbb
pop
xor
jl
movsl
ret
rcrl
mov
clc
push
xor
lcall
xor
fcmovnu
jge
iret
push
xchg
pushf
int
adc
pusha
enter
andl
adc
mov
jbe
xchg
in
loopne
xchg
ss
test
xchg
xor
and
mov
xchg
in
xor
lods
lret
insl
or
xchg
cmp
std
jecxz
icebp
xorl
aam
std
notl
sub
xchg
les
jns
aaa
faddl
into
cmp
cmc
stos
outsl
push
sti
subl
cmpsb
xor
out
daa
das
daa
sub
and
pop
fildl
adc
out
jge
ljmp
mov
inc
push
mov
dec
dec
mov
pop
xor
lret
and
cld
mov
push
inc
push
mov
mov
jns
sbb
test
aas
dec
aam
popa
push
in
mov
mov
or
out
lcall
ljmp
mov
xor
pop
scas
bound
stos
push
cmp
cmp
add
sbb
push
mov
ret
in
repnz
cwtl
pop
negb
cltd
mov
inc
sbb
xor
add
lcall
aaa
in
and
and
xor
jmp
shlb
xor
call
scas
test
jecxz
mov
or
ret
dec
out
hlt
pop
fcompl
and
push
push
lods
jmp
adc
sbb
cmp
xchg
insl
fsubr
add
fstpt
adc
mov
dec
jb
sub
dec
scas
cmp
lret
xor
pusha
shl
mov
jne
iret
inc
add
arpl
insl
jbe
sbb
mov
inc
mov
mov
cmpsb
imul
jns
pop
scas
dec
dec
mov
jle
push
cmc
push
cmp
lcall
mov
xchg
xor
jnp
xchg
jp
sbb
test
inc
daa
lods
fistps
orl
inc
add
nop
and
push
imul
popf
pusha
movsb
scas
jne
and
cmp
and
inc
int3
out
dec
cmpsb
ja
xlat
xor
aas
enter
mov
sbb
inc
mov
lret
cld
push
add
cmpsl
push
aam
pop
adc
das
add
pop
test
push
insb
divps
gs
adc
mov
js
push
movsb
push
mov
push
leave
jmp
xchg
out
xchg
mov
and
rol
cmp
pop
inc
pop
add
sbb
lcall
hlt
call
cmp
fwait
or
pop
in
imul
subb
data16
dec
jbe
leave
add
jo
iret
xor
aam
mov
orb
pop
stc
fcom
xchg
or
and
pop
mov
and
jbe
jmp
push
pop
aam
mov
add
jmp
fistpll
push
lock
mov
out
lods
cwtl
dec
lds
mov
adc
movsl
int
dec
fidivrl
out
xchg
in
int
mov
inc
lret
adc
mov
sarl
cmp
mov
cs
decb
mov
adc
sti
stc
mov
cmp
lds
imul
dec
fs
sahf
adc
push
and
or
repnz
inc
in
jge
imul
scas
fildll
stc
adc
icebp
stos
sub
mov
push
mov
push
add
ds
and
mov
push
fmuls
cmp
jg
fimull
js
jne
jl
loopne
mov
mov
sub
sbb
addr16
mov
sub
std
xchg
stos
pop
mov
ss
ret
mov
cmp
mov
mov
add
inc
ss
jecxz
sub
lods
test
push
or
arpl
push
jg
xor
js
push
mov
pop
ss
push
into
sub
add
mov
sahf
gs
mov
loopne
rcrl
xlat
pop
mov
insb
fstpt
in
inc
jns
add
adc
pop
lds
pop
dec
std
mov
and
jns
mov
hlt
call
cmp
inc
mov
repz
jp
inc
in
ljmp
or
fcmovne
lret
adc
inc
jns
mov
dec
pusha
and
lods
mov
lds
outsb
in
sub
mov
add
pop
leave
xchg
xchg
imul
cmp
jmp
mov
pusha
inc
cmp
fisttpl
pop
inc
push
sbbl
out
lret
outsl
inc
cmc
push
and
fwait
data16
cmc
adc
daa
and
pop
sub
mov
lods
mov
jmp
movsl
scas
pop
insl
shlb
test
out
xor
es
sahf
test
xchg
imul
fwait
std
fisubs
xor
mov
dec
xor
loop
push
push
adc
pop
xchg
mov
sbb
mov
mov
movsb
lods
mov
pop
mov
xchg
inc
inc
fwait
scas
fsts
cmp
in
push
movsb
push
pop
dec
outsb
mov
imul
movsb
scas
push
jp
adc
dec
lds
xchg
imul
bound
fisttpll
push
jbe
call
jns
sub
bts
pop
loopne
push
and
mov
push
out
in
aad
inc
mov
mov
and
push
xor
inc
fcompl
enter
push
repnz
mov
ljmp
outsb
insl
jno
cwtl
rorb
xor
movsl
dec
sub
sbb
pusha
sub
mov
push
enter
test
das
push
pop
xchg
pop
mov
jae
add
adc
in
mov
nop
stos
iret
xchg
sbb
push
notb
outsb
jne
xor
xor
jl
shll
jg
cld
push
push
dec
adc
mov
jbe
pop
sub
hlt
sub
jp
pop
cmp
mul
xchg
xlat
mov
or
adcb
xchg
rorl
jae
fsubl
mov
xorb
pop
cld
dec
andb
sbb
cmp
jae
add
push
pop
lea
in
push
testb
scas
fiadds
mov
mov
adc
shll
dec
cld
mov
add
or
sub
insb
adc
clc
inc
mov
sub
cwtl
and
scas
cmp
jo
sub
ljmp
stos
push
lahf
movsl
cmp
jle
out
push
pusha
and
repz
mov
sub
mov
xchg
adc
insb
xchg
sbb
mov
sbb
pusha
outsb
push
pop
std
bound
arpl
and
cmpsb
mov
int3
in
jg
arpl
sti
aam
or
and
or
cmp
out
imul
fmuls
test
dec
or
andl
loopne
pusha
in
mov
cmpsl
or
fwait
loope
in
inc
aaa
mov
sbb
sub
outsl
cli
push
mov
pop
nop
mov
mov
and
ret
lds
imul
xor
fwait
sti
arpl
pop
pushl
scas
iret
jnp
stos
push
xor
sub
scas
orb
fidivl
je
mov
sbb
fiaddl
push
daa
iret
enter
pop
push
sbbl
loopne
push
callw
add
pop
push
mov
fmull
imul
adc
push
fbstp
sbb
and
add
xchg
mov
out
inc
lret
jne
cmp
dec
repz
push
outsb
inc
sbb
fsubr
adc
cmpsl
push
dec
jnp
xchg
sub
xchg
mov
mulb
movsb
push
hlt
ret
ret
push
xorb
fstpl
das
fnsave
jno
jg
add
iret
and
cmp
adc
mov
pop
xchg
xchg
enter
ja
rcll
mov
scas
repnz
fdivrl
aaa
jl
mov
xor
ror
cmp
in
push
into
dec
loop
adc
and
mov
cwtl
and
mov
mov
scas
pop
or
xor
xorb
add
mov
lds
movsl
and
cli
pop
jge
inc
pop
xor
mov
push
push
orb
stos
xor
xor
mov
jno
clc
xchg
stos
insb
jmp
enter
mov
mov
fdivrp
sub
jo
rolb
add
xor
mov
pushf
out
push
jb
sbb
mov
out
bound
scas
adc
jns
push
in
rclb
push
sbb
sbb
inc
std
xchg
sbbb
insb
mov
adc
pop
and
lods
xchg
mov
pusha
pusha
xlat
jecxz
call
inc
nop
xor
roll
fcomps
hlt
or
loope
rcll
add
add
divl
mov
jmp
in
addb
mov
dec
pop
push
movsl
scas
inc
push
incb
jg
mov
inc
fs
out
leave
shlb
fldl
jl
gs
mov
jne
in
add
push
repnz
cltd
or
push
imul
xor
inc
sbb
das
xchg
std
arpl
dec
out
cmp
lds
test
jo
in
test
repz
cs
xor
outsb
aaa
ret
adcb
xor
hlt
out
pop
sti
cmp
fdivrs
push
pop
in
mov
subb
sub
inc
sbb
scas
rcll
mov
mov
mov
imul
ficomps
sbb
out
vmovlps
inc
arpl
inc
and
cmp
xor
sbb
adc
adc
fst
icebp
in
xchg
xor
dec
sub
mov
dec
lock
dec
inc
xchg
stos
mov
xor
repnz
xor
popa
sbb
sub
dec
jl
xchg
jl
jo
in
xchg
pop
lahf
dec
cmp
mov
clc
int
test
push
cmp
dec
imul
cmp
mov
mov
mov
mov
dec
pop
ficoml
movsl
xor
or
pop
cmp
or
repnz
out
lods
jle
fstpl
adc
shr
in
cmpsb
adc
push
leave
stos
or
jmp
mov
ljmp
jne
xor
inc
adc
push
filds
jmp
je
pop
pop
fistps
pop
stc
xor
add
pop
dec
scas
mov
add
mov
mov
xchg
sbb
and
cmp
dec
fdivrs
jl
sbb
and
push
jbe
sti
addl
ljmp
and
imul
std
xor
mov
lret
fcmovb
scas
js
ss
xchg
js
xchg
idiv
and
dec
xorl
fmul
in
loopne
adc
mov
dec
inc
daa
fcomip
cli
aas
nop
clc
sub
add
popf
mov
dec
loopne
inc
imul
movsb
pop
int3
incl
adc
dec
push
aam
cld
add
mov
fwait
arpl
out
pop
pop
enter
popa
pop
xchg
icebp
lahf
pop
movsl
sbb
jg
outsb
and
inc
xchg
ja
into
add
iret
dec
outsb
jne
addr16
lahf
jecxz
pushf
sub
dec
xor
push
fwait
cmpsb
mov
xchg
push
mov
push
fdivl
and
pusha
or
imul
fmuls
dec
jg
icebp
ljmp
cmp
inc
in
push
sub
lods
push
dec
xor
stc
cld
jge
xchg
fwait
push
mov
fimuls
push
sub
jae
lods
enter
iret
mov
jl
in
addb
pushf
imul
push
inc
xor
push
int3
paddd
out
int
sub
popa
mov
in
inc
das
int3
add
fwait
jnp
enter
xor
jne
in
jne
repnz
dec
push
cmp
jno
repnz
add
xor
arpl
push
mov
mov
jl
sub
mov
les
adc
jo
xorl
shrl
and
mov
pop
in
jg
icebp
jae
aam
add
call
xor
xor
movsb
inc
sbb
cmc
outsl
push
jl
out
pop
gs
and
xor
lret
adcl
pusha
cmpsb
fcomip
insl
rclb
cmp
mov
push
das
sbb
adc
jg
lcall
bnd
jno
adc
fbstp
aaa
sbb
dec
scas
test
pop
leave
xchg
dec
nop
pop
cbtw
daa
cmp
aas
adc
ret
ljmp
push
and
and
mov
inc
push
int
imul
mov
mov
rcrl
pop
ljmp
stos
lret
out
shll
sarb
test
jno
scas
mov
popa
lods
pop
mov
idiv
and
cs
addb
js
pop
add
add
xchg
stos
or
adc
xlat
and
and
decl
adc
sbbl
inc
mov
inc
mov
jnp
and
lret
int3
lret
jns
rcll
iret
sar
insl
mov
or
and
repz
inc
mov
mov
pop
dec
outsl
mov
addr16
jbe
push
dec
inc
pop
mov
nop
pop
mov
fisttps
sbb
jns
push
orb
js
sbb
fisttpl
mov
pop
insl
and
sbb
sbb
cwtl
jp
push
in
pop
clc
shlb
shrl
inc
mov
ret
dec
xchg
jmp
sub
cli
mov
fs
data16
icebp
mov
push
xchg
mov
in
jnp
inc
into
in
add
lods
outsl
mov
push
ljmp
outsl
push
add
dec
mov
ficoml
lahf
das
lea
nop
xchg
and
push
or
xchg
daa
out
mov
data16
pop
pop
mov
xchg
shll
enter
or
bound
and
xchg
dec
xor
mov
in
stc
cli
pushf
cld
fcmovb
orb
outsl
mov
dec
pop
mov
rcl
iret
or
inc
fisubrs
sub
mov
mov
fdivrs
cmpsb
jg
xchg
cmp
cmpsl
stos
call
or
jo
sbb
int3
push
inc
cmp
shll
xor
pop
loop
and
push
test
mov
or
cmp
adc
cmp
lahf
mov
aad
jnp
sahf
and
scas
arpl
cmp
inc
mov
lea
stos
scas
pusha
test
outsl
sahf
mov
repnz
and
into
dec
in
sbb
in
push
mov
out
dec
loopne
sbb
clc
dec
in
inc
push
subb
popa
push
cmp
movsb
lahf
or
cmc
je
inc
pop
mov
mov
sarl
cmpsl
adc
hlt
pop
in
xchg
dec
mov
xchg
jne
pop
mov
stos
dec
dec
js
fdivr
add
mov
inc
jmp
jle
pop
lods
lcall
sbb
stos
imul
add
ds
and
adc
stos
jle
xchg
sbb
and
pop
dec
pop
inc
dec
mov
clc
in
rorb
popf
mov
ljmp
das
sub
lcall
xchg
mov
inc
shlb
pop
mov
adc
xchg
mov
pushw
xorb
mov
pop
sub
pusha
insb
in
lret
out
fidivs
lods
xchg
push
pop
outsl
jp
fsubs
repnz
adc
or
add
sub
or
cs
jb
cltd
jle
mov
cmp
mov
or
js
mov
mov
iret
lods
bound
push
test
jmp
lock
lcall
fistps
fldcw
mov
jge
lds
call
xlat
mov
or
aaa
jns
or
sub
inc
inc
ror
fisubs
jne
push
mov
mov
pop
adc
xchg
xor
adc
insb
or
fcomp
pop
push
jno
rorl
outsl
stos
jmp
pushf
cld
popf
int3
fcompl
inc
std
push
pop
inc
sbb
mov
mov
sbb
and
shll
aas
mov
je
fidivs
cmp
rcrb
xor
sub
movsl
mov
jl
jl
dec
xchg
or
cmpsb
ja
mov
jnp
sbb
jmp
lret
xor
rorb
or
xchg
adc
orb
sub
icebp
mov
je
mov
mov
adc
das
cmp
inc
pop
mov
and
mov
stos
in
xor
sub
in
aaa
mov
lea
mov
or
pop
test
sbb
adc
cmpsl
sub
jae
leave
fstp
push
pop
out
add
addr16
add
lret
mov
lahf
ret
test
mov
stos
dec
lahf
repz
je
insl
test
sbb
pop
mov
xchg
dec
push
aad
jmp
icebp
dec
dec
xor
incb
lea
fimull
les
lea
out
pop
push
cmpsl
xchg
lock
ret
imul
add
xor
and
pop
pop
mov
test
daa
inc
jmp
mov
jl
dec
jae
dec
mov
add
loop
push
cwtl
and
pop
arpl
push
sub
fwait
andb
and
sub
mov
fsubs
js
hlt
xchg
fdiv
xor
or
jns
into
bound
sub
xchg
push
jae
sbb
aam
jnp
vcmpgt_oqpd
stos
push
or
pop
jg
adc
jae
push
cltd
lock
arpl
pusha
test
lds
loopne
xchg
insb
movsb
jl
add
sahf
rolb
and
dec
cltd
imul
insb
jne
leave
cmpl
inc
dec
dec
inc
scas
mov
push
or
cmp
xchg
jno
imul
sbb
mov
and
mov
in
fisubrs
cs
cltd
sbb
jns
outsl
fcmovnbe
ret
inc
imul
flds
or
aaa
fs
mov
xor
push
push
ret
cmp
imul
shll
enter
sub
jp
adc
xlat
fmull
or
lahf
dec
fidivs
into
addr16
loopne
add
cwtl
insl
loope
sub
mov
je
dec
jecxz
mov
sub
aam
lock
mov
jp
pop
xchg
stos
dec
pop
or
xor
mov
xchg
les
xor
lahf
push
daa
nop
pushf
jnp
sbb
sub
push
xchg
cli
pusha
and
cmpsl
leavew
ljmp
fildl
out
cwtl
mov
pop
cltd
push
pop
loopne
popa
fidivl
mov
jle
insl
inc
add
or
add
push
pop
rorl
ja
divb
out
cwtl
dec
nop
test
push
mov
lds
pop
xchg
test
jg
sahf
mov
ja
mov
push
jle
add
ret
lahf
call
mov
addb
stc
mov
inc
mov
loopne
inc
insl
fwait
enter
cmp
imul
sbb
sub
mov
cmp
fwait
push
nop
pusha
xchg
xchg
movsb
lahf
jne
pop
inc
mov
mov
sahf
fadds
and
rolb
mov
mov
out
xchg
or
push
adc
fiadds
push
in
push
outsl
add
out
jg
jne
shll
mov
sbb
or
mov
add
cmc
lret
fsubrl
and
shll
das
or
inc
jae
lods
jecxz
iret
ret
notb
ljmp
push
pop
subb
div
ljmp
push
imul
xchg
aad
and
repnz
scas
jl
movl
dec
cmpsl
mov
shlb
jmp
negb
lea
add
mov
pushf
adc
xor
jnp
mov
jmp
iret
daa
clc
adc
popf
dec
mov
mov
loop
mov
jne
outsb
dec
xor
inc
xchg
das
test
ds
mov
lds
jnp
ja
inc
sub
pop
lea
jb
push
adc
adc
ret
scas
aas
dec
ljmp
mov
je
fistps
sbb
gs
pushf
sub
sti
inc
cmp
out
fsubs
jae
int3
out
sbb
push
xor
in
push
jge
push
push
mov
testl
push
es
push
sub
jbe
fmuls
fs
inc
push
and
nop
sub
add
push
dec
call
insb
cmp
fwait
incb
lahf
cs
push
push
xor
std
jle
stc
shll
shll
imul
inc
insl
cmp
cmp
daa
out
out
fsts
ljmp
xorl
mov
std
lar
fmuls
cmp
inc
add
xor
push
mov
insb
nop
aad
inc
sbb
or
lahf
call
daa
adc
or
adc
lcall
xchg
inc
popa
stc
icebp
pop
xchg
and
push
adc
dec
push
adc
and
in
or
sarb
nop
inc
add
adc
gs
in
out
inc
pop
insl
push
sub
out
push
dec
dec
mov
cmpsl
in
push
shll
inc
sub
popf
mov
lcall
cli
repnz
jo
xchg
inc
mov
push
lds
jb
fwait
sub
mov
mov
and
cmp
jg
mov
scas
xchg
or
xchg
in
jnp
rcl
out
jp
nop
mov
test
jns
out
out
and
cmp
mov
xchg
mov
bound
cli
loopne
test
jle
in
shrl
ret
daa
in
xchg
test
jge
push
xor
dec
cmp
in
cmpsl
dec
and
lahf
xor
xor
jne
dec
add
mov
rclb
inc
cmp
dec
outsb
dec
xchg
mov
push
push
shr
pop
ss
insl
sub
jge
jmp
push
pop
hlt
push
xchg
pop
std
sub
pop
pop
pop
add
stos
lods
sub
lret
cld
std
popl
or
mov
jle
int
lea
mov
add
sbb
stos
or
bound
jge
lea
and
pop
adc
and
xorb
pop
popa
adc
mov
xor
jp
adc
aaa
lahf
mov
pop
ficompl
pusha
movsl
out
push
sbb
sbb
dec
pop
stos
js
out
sub
cld
pop
imul
lahf
xchg
mov
add
xor
dec
xor
mov
sbbl
pusha
xchg
jecxz
sub
mov
jnp
std
in
popa
jb
loope
rolb
mov
xlat
faddp
fsubs
fs
pop
mov
ret
push
test
mov
push
lods
xor
cmpsb
xchg
ret
xchg
or
insb
lret
jbe
pop
aas
loopne
insb
cs
nop
ja
pop
jo
loope
xchg
ret
gs
pop
push
dec
scas
lret
loop
test
adc
in
aaa
dec
mov
js
ja
fcompl
jle
std
or
xorl
and
adc
je
fists
sbbl
inc
jno
sub
push
push
stos
fbld
std
push
ror
fldenv
pop
jns
dec
and
inc
mov
cmp
flds
in
push
push
inc
or
or
dec
in
test
jo
fidivs
push
mov
jbe
in
aaa
dec
insl
mov
sar
mov
clc
inc
ret
repz
cmp
inc
iret
inc
cli
lcall
aad
ss
push
pusha
out
mov
loope
and
mov
ljmp
jae
je
out
rcl
je
cmp
lret
sbb
cmp
cmp
mov
nop
pusha
xor
pop
inc
lcall
std
pushl
jmp
repz
int
arpl
fsubr
ret
xor
data16
add
or
xor
or
fisttpll
rorl
and
adc
daa
pop
cwtl
insl
sub
add
adc
mov
in
movsl
cmp
popf
ljmp
sub
dec
ja
bound
rorl
outsb
adc
aas
inc
shll
inc
test
dec
pop
add
loop
or
and
mov
test
sub
ja
sub
sbb
xlat
pushf
adc
imul
mov
sbb
ss
xchg
and
fs
push
movsl
adc
pop
test
lcall
mov
dec
subb
lds
add
or
shll
mov
push
ljmp
mov
negl
fbld
jge
int3
mov
cmc
hlt
popa
cs
pop
mov
or
dec
jl
and
push
sbb
nop
xor
fs
fcoml
movsl
aam
cmp
enter
inc
addr16
in
ljmp
mov
aam
add
fcoml
jbe
enter
jl
mov
cmp
cmp
repnz
cwtl
test
lock
dec
xor
mov
lret
enter
sub
cmp
cld
mov
sbb
adc
adc
movsb
lods
xor
test
jb
aam
daa
push
adc
pop
pop
jp
enter
int3
js
insb
mov
adc
mov
dec
loop
ss
lahf
jg
aad
out
dec
call
add
and
imul
inc
jl
and
push
stos
call
sub
stos
xor
xor
enter
test
lret
jb
hlt
dec
and
xor
mov
pop
js
rol
clc
ret
mov
fs
lahf
mov
jo
mov
bound
pop
icebp
lds
imul
gs
movsb
or
lcall
dec
adc
sub
sub
cld
cld
sbbl
xor
loopne
jbe
loopne
dec
fisubl
iret
push
popf
mov
mov
inc
cmp
stos
inc
iret
and
addl
or
add
jnp
divl
sbb
cmpsb
cmp
pop
pop
ss
test
dec
movsb
or
mov
and
mov
shll
movsb
sbb
cmp
lods
add
add
fwait
cs
imul
add
jb
inc
negb
hlt
fmull
addr16
xor
nop
aas
mov
pop
inc
test
sub
ret
jle
ret
mov
push
xorl
ds
pushl
out
out
sub
out
jno
test
lds
incl
gs
into
insl
loop
out
push
arpl
pop
fdiv
popa
dec
fucomip
cmp
inc
mov
cmp
call
pop
sbb
push
flds
ret
pushf
pop
push
pushf
and
ror
and
jnp
cmpsb
xlat
out
popf
out
jae
shlb
push
sub
rorl
adc
ss
popf
cwtl
cld
mov
jecxz
les
push
gs
sbb
insl
scas
scas
hlt
adc
in
ja
push
cld
xchg
jle
fdivs
shrb
jmp
mov
dec
aaa
out
addr16
inc
icebp
and
sub
repz
int3
xchg
or
mov
mov
ds
xor
loop
xor
pop
push
and
xchg
mov
popf
pop
cmp
jno
cli
insb
adc
and
lock
scas
lret
xor
ss
adc
cli
xchg
inc
and
es
jecxz
testb
xchg
jge
movsb
mov
pop
cmp
xor
scas
cs
sbb
xchg
lock
lods
xchg
mov
movsb
ja
imul
mov
out
adc
ret
pushf
test
xlat
lea
fcmovnbe
add
jg
jmp
mov
hlt
mov
aam
pop
mov
cmp
mov
pop
xor
fs
out
xchg
jns
or
adc
scas
stos
jecxz
sar
loop
daa
daa
push
repnz
inc
sbb
xchg
in
insb
bound
inc
shrb
das
stos
adc
pop
or
pop
jo
and
das
cwtl
je
mov
popf
test
in
push
dec
mov
data16
movsb
xchg
hlt
cmp
stc
cwtl
popf
and
or
xor
and
fdivp
xor
aas
mov
push
in
mov
ret
call
mov
xor
pop
adc
push
cmp
pop
mov
push
or
dec
add
negl
sub
out
mov
dec
add
sub
sarl
fcom
push
adc
add
daa
in
mov
clc
xchg
lret
in
and
and
enter
or
ret
pop
iret
mov
jno
sbb
arpl
bound
int
lahf
sub
cmp
loopne
mov
data16
arpl
orb
xor
xor
sbb
arpl
sarb
mov
rcrl
stos
xor
and
bound
fcom
rclb
in
xor
insb
insb
adcb
in
push
and
stc
or
mov
or
xor
call
ds
add
hlt
sbbl
sbb
dec
add
pop
test
or
pop
in
push
fnsave
mov
mov
xchg
and
push
xchg
push
sub
sbb
shlb
and
out
lds
scas
and
jmp
cwtl
fidivrs
sahf
les
push
sub
xor
adc
in
in
push
sbb
in
enter
mov
fs
mov
push
xchg
cmp
add
mov
jmp
inc
popa
stos
xchg
adc
shlb
cltd
mov
andb
jmp
sbb
repnz
cmp
enter
jne
mov
jmp
stc
into
mov
jl
and
ds
mov
or
scas
adc
and
into
mov
in
fildll
dec
rcr
jbe
sub
in
adc
ret
pusha
mov
imul
outsl
mov
mov
pop
xlat
inc
cmp
scas
and
cltd
jl
mov
push
cwtl
adc
in
call
lcall
shl
sbb
sbb
cwtl
jne
cli
sub
iret
cmpsl
arpl
push
push
jmp
inc
loope
and
mov
repz
fisubs
jecxz
mov
adc
cmpsl
icebp
movsl
outsb
or
stc
jp
xor
cs
stos
cli
leave
mov
sbb
ljmp
out
pushf
movsb
xchg
mov
mov
testb
data16
dec
xchg
mov
outsl
mov
leave
pop
xchg
lret
inc
mov
cmpsb
mov
cmp
add
and
cwtl
jae
inc
mov
sbb
mov
or
jne
mov
xorl
out
dec
xchg
shlb
dec
mov
faddl
pop
daa
inc
jae
xlat
ds
sarl
pop
lret
dec
and
iret
mov
shrb
lret
int3
aas
jno
popa
inc
cmpsl
sti
inc
roll
push
cmp
lds
sbb
cmc
fisttpll
add
push
xchg
lock
lret
orb
arpl
mov
stc
dec
repz
add
push
add
idivb
mov
jmp
pushf
push
or
push
repnz
or
xor
sub
jle
cmpsl
stos
sub
and
xor
adc
out
in
fisubrs
imul
fs
xchg
jl
mov
mov
mov
aad
dec
ret
movsl
inc
xchg
xor
mov
loope
notl
push
or
int3
fisttps
adc
mov
add
cs
sbb
inc
sti
sti
arpl
push
test
mov
push
sbb
mov
ds
sub
enter
hlt
hlt
or
lock
sarl
sar
sahf
mov
leave
or
pop
xchg
mov
dec
lock
sub
inc
cmp
loop
mov
pop
les
push
xor
scas
push
sub
sbb
das
or
cmc
dec
mov
add
fadds
push
in
or
pop
aas
fisttpl
dec
pop
push
ret
loopne
les
dec
mov
je
es
fwait
push
cwtl
push
xchg
jae
arpl
sbb
out
pusha
sbb
and
sbb
inc
and
sbb
sub
mov
dec
push
mov
mov
push
sbb
push
jl
jae
xchg
push
mov
ds
xor
adcb
mov
fdivrl
scas
dec
jge
test
jg
adc
and
aaa
ret
pusha
sub
fiaddl
mov
imul
loopne
shll
aad
push
inc
iret
dec
imul
mov
mov
mov
push
sbb
movsb
cmp
jp
sbb
jmp
imul
test
jbe
adc
mov
mov
mov
call
out
and
inc
push
add
jne
adcb
mov
fimull
dec
add
sub
jb
pop
movsl
mov
leave
std
pushf
mov
mov
andl
in
stos
popa
mov
xchg
fcoms
es
xchg
fmuls
data16
mov
xchg
movsb
je
jnp
mov
sbb
std
mov
insl
ret
cmp
cld
xorb
insb
jmp
push
notb
pushf
sub
fdiv
jb
mov
xor
xor
fs
aas
nop
rcll
ret
imul
jle,pt
push
push
inc
daa
shrb
aad
dec
lret
mov
xchg
repz
jg
stos
cmpsl
aam
stc
ss
nop
xor
push
pop
scas
mov
jns
lods
addr16
shlb
shl
jb
jns
ljmp
movsl
and
popa
arpl
pop
dec
cs
push
aas
std
mov
pusha
scas
mov
test
orl
push
mov
mov
fisttps
push
shrl
cmpb
and
ds
mov
ffreep
dec
js
popa
stos
aas
and
push
fiaddl
iret
call
in
ljmp
cmp
arpl
pop
lock
xor
jmp
xor
andl
insb
xchg
aad
pop
shrb
xlat
or
movsb
fsubrl
imul
mov
ds
inc
push
or
loope
mov
push
lret
jae
in
mov
xchg
filds
xchg
xchg
or
icebp
mov
pop
adc
xchg
jne
sar
nop
and
mov
sahf
or
inc
je
adc
das
fimull
jns
dec
into
pop
iret
outsl
cmc
imul
cltd
sbb
and
mov
jb
ljmp
fwait
adc
or
out
cmp
testb
push
pop
stos
insl
jno
or
xchg
sub
hlt
fwait
sbb
rorl
rcrb
add
xchg
mov
pop
adc
lods
mov
xchg
fsts
lods
sbb
stos
fcoms
repnz
fistl
rclb
cmpsb
rorb
add
cli
loope
dec
in
aaa
insb
mov
cmp
hlt
repnz
cld
jecxz
arpl
std
lret
in
push
pop
cmpsl
inc
xchg
inc
int
push
mov
cli
dec
aad
imul
enter
inc
es
jl
inc
mov
insb
loopne
pop
repnz
jae
sub
loope
push
lcall
or
imul
or
xchg
adc
into
push
mov
call
aad
mov
hlt
out
jecxz
ja
jmp
test
cmp
ficoms
std
cltd
jecxz
jns
popa
nop
mov
sti
mov
xchg
push
sarb
iret
int3
add
cmp
mov
mov
xchg
sub
out
xchg
lret
inc
lcall
pop
testb
out
ljmp
cltd
cltd
arpl
popf
sbb
in
aaa
inc
test
sub
push
movd
pop
ss
and
mov
xor
adc
jg
movb
sub
repnz
jmp
lea
inc
fidivs
fcmovnu
mov
sub
mov
jp
mov
pushf
mov
add
dec
mov
mov
nop
insb
dec
and
pushf
jb
outsb
mov
xor
xchg
pop
cmc
mov
aam
mov
dec
addr16
add
pusha
jmp
testb
sub
sti
es
cmp
push
cmp
sbbb
js
ja
and
sti
pop
fisubs
sub
in
ret
or
les
movsl
cmpsl
inc
jns
and
pushf
lods
xor
and
and
dec
mov
aad
add
mov
jg
shl
sbb
mov
and
push
aam
mov
int
jnp
push
xlat
shll
fisubrl
cmpsl
movsb
out
push
fdivrl
jo
test
or
cs
mov
insb
or
xor
and
les
jmp
jl
and
movb
push
aas
and
or
lods
das
sub
lods
mov
jle
daa
pop
sbb
scas
in
iret
popa
bound
test
nop
pop
inc
js
mov
stc
das
pop
add
popf
adc
imull
fdivrs
rorb
dec
test
jg
mov
aam
data16
les
xor
ds
lock
add
ds
mov
pop
mov
push
lds
sub
cmp
pop
mov
lea
imul
pop
test
mov
testl
xchg
test
sub
mov
into
std
adc
jge
xchg
inc
testb
mov
out
xor
ret
sbb
inc
and
je
push
mov
stos
sub
in
mov
mov
std
lea
adcl
dec
test
mov
add
pop
fcoms
aas
or
pop
into
orl
in
and
iret
mov
sbb
xchg
ficompl
sub
adc
cmpsb
pop
mov
mov
iret
pop
sbb
xchg
push
jo
out
and
and
push
push
iret
fildl
jp
xchg
pop
and
cld
adc
sub
mov
aaa
cwtl
dec
aad
jne
lcall
jne
lcall
test
pop
fstpl
mov
push
daa
fistpll
packssdw
push
scas
fistl
lods
and
or
repz
and
sbb
loopne
inc
pushw
bound
out
popa
push
jo
pop
push
xchg
push
jbe
cmp
mull
mov
gs
adc
jae
mov
inc
in
jge
pop
aad
xlat
out
sub
mov
mov
mov
jne
cmp
pop
mov
inc
mov
mov
xorl
pusha
add
testl
jno
pushf
insl
lds
icebp
fs
mov
cmp
adcl
in
lret
mov
push
je
je
mov
in
shl
cmpsb
push
jle
xor
cmp
and
or
sbb
pop
mov
and
adc
jp
jge
lahf
mov
testw
mov
inc
pop
pop
repnz
out
popf
clc
sbbb
adcl
mov
sub
fcoms
sbb
dec
and
addb
add
loopne
fidivs
pop
test
dec
pop
lcall
jne
mov
lock
cmp
outsl
stos
fmuls
ret
push
dec
xlat
shl
push
pop
leave
add
ret
lds
adc
stc
sti
nop
mov
outsl
ret
push
inc
fs
jge
push
xor
call
into
inc
mov
sti
add
testl
mov
xchg
sar
push
jecxz
and
lods
cltd
std
lret
inc
push
xor
fwait
int
or
ficoms
test
inc
jmp
dec
pop
lret
lock
sbb
jg
adc
negb
xor
sub
ficoms
aad
sbb
mov
ja
push
jge
lret
sub
aaa
das
ds
and
rolb
sbbb
cmp
cmp
cmpsb
arpl
push
test
in
dec
mov
mov
sub
clc
cmp
nop
cmp
mov
enter
mov
hlt
push
jb
dec
mov
sahf
xchg
fsubrp
out
xchg
pop
jnp
mov
fdivs
sub
fmulp
data16
in
daa
cmp
and
jns
gs
imul
mov
mov
arpl
xchg
loop
loope
mov
lea
out
in
or
cmp
das
adc
mov
test
nop
popf
mov
and
inc
sub
pop
cld
pop
fsubrs
lret
mov
or
call
xchg
nop
cltd
enter
jo
and
stos
addr16
cmp
rcr
fcompl
movsl
pop
and
flds
aam
sub
jmp
jle
pusha
insl
enter
mov
mov
lret
outsb
mov
adc
inc
cmp
push
xor
mov
jmp
mov
add
pop
sub
pop
ror
stos
adc
vsubps
xor
dec
jge
sbb
push
mov
sbb
jb,pn
sbb
test
mov
imul
and
mov
les
mov
add
xchg
xor
or
or
mov
movsl
and
or
aas
pop
imul
inc
imulb
imul
xor
pop
push
lea
jnp
or
sti
inc
je
mov
pop
lret
mov
add
pop
push
push
push
ljmp
mov
shlb
loopne
test
aam
pop
sahf
mov
mov
cs
pop
xor
stos
bound
pusha
ljmp
fadds
call
jl
jb
jns
and
mov
or
sub
popa
cltd
repnz
jae
pop
and
rorl
aam
mov
xchg
sahf
xor
dec
pusha
and
je
int
hlt
cmp
push
adc
push
inc
incl
mov
fstpl
xor
push
jp
push
dec
xchg
sub
in
and
mov
fsubs
jns
or
or
std
sbb
xadd
sub
jae
popf
out
cltd
rcrl
cmp
xor
pop
or
dec
filds
mov
jno
cmp
mov
insb
push
pop
lret
ss
push
fidivrl
arpl
or
add
xor
dec
popl
add
cmp
fsubrs
push
inc
lret
sarl
popf
mov
imul
pop
fsubr
stos
sub
aam
in
icebp
sub
pop
mov
cmp
fcoml
cltd
xlat
sub
push
cmpb
add
sbb
adc
mov
dec
repnz
inc
adc
or
jle
ss
fucomp
mov
fs
inc
scas
daa
xchg
arpl
outsl
pop
mov
mov
mov
lods
out
and
cwtl
shlb
repz
aad
dec
in
mov
fdivr
xor
clc
imul
add
sbb
repnz
jg
inc
icebp
inc
mov
add
test
lret
jo
imul
int3
push
fsubr
push
push
je
inc
int3
cmc
dec
daa
or
call
push
popa
dec
insb
mov
push
loope
inc
jo
inc
xor
insl
dec
insb
sbb
movsb
and
pop
pusha
dec
add
cmp
repz
xchg
aas
test
out
xchg
sub
mov
sub
sahf
bound
repnz
sarl
fsts
fs
out
sbb
incl
sti
insb
jecxz
dec
ret
add
inc
and
cmp
fimuls
mov
lods
xor
mov
pop
xlat
mov
mov
adc
adc
mov
jecxz
iret
mov
or
fcomps
movsl
iret
stos
arpl
repz
or
jno
ljmpw
mov
nop
xchg
mov
adc
and
in
sub
aam
sub
addl
push
mov
scas
push
jno
mov
dec
leave
or
scas
incb
xor
xor
cmp
cmpb
lcall
mov
dec
sub
imul
push
cvttps2pi
loope
add
cmp
in
lea
pop
push
mov
ret
dec
and
xor
sub
xor
repz
pop
cmpsb
aad
ret
lods
xchg
dec
lock
outsb
mov
push
jg
int
mov
hlt
xchg
jmp
lods
sbb
imul
arpl
mov
movsb
and
pop
test
push
or
fidivrl
jp
mov
sub
jmp
sbb
cwtl
outsl
adc
xor
stos
loopne
stos
add
pop
push
sub
iret
rorl
jp
pop
push
add
mov
sbb
xchg
mov
in
adc
cmp
arpl
out
xor
dec
int
call
cwtl
sbb
jbe
mov
xor
int
xchg
rcrb
pop
and
xor
jl
sub
hlt
cmp
nop
int3
imulb
shl
lret
cltd
in
in
mov
sub
mov
add
loopne
push
inc
cmp
push
mov
push
scas
adc
pop
pop
daa
scas
inc
push
jmp
ret
hlt
hlt
mov
pop
mov
daa
add
pop
pop
movsl
insb
pop
pop
out
inc
mov
fstpl
dec
into
pop
mov
xor
adc
lret
jb
imulb
lods
aaa
mov
add
pop
pop
and
fstl
sbb
pop
and
shll
xor
js
mov
stc
ljmp
jg
lock
mov
iret
push
jecxz
faddl
or
xchg
or
pusha
popa
cmp
leave
inc
mov
or
cmp
sar
pop
xchg
mov
and
lret
loopne
sub
in
fwait
push
movl
jnp
push
cwtl
int
lcall
cmpsb
sbb
lcall
jae
jecxz
dec
test
mov
imul
pusha
std
xchg
fwait
das
inc
test
out
xchg
mov
ficompl
mov
pop
jmp
shrb
jb
xchg
ss
movsl
inc
lods
sbb
je
sbb
bound
enter
inc
push
out
jg
rcl
sahf
sub
fisubrl
leave
inc
fisubrs
lret
rolb
sub
hlt
mov
shlb
test
mov
into
inc
mov
sbb
psubsb
and
inc
test
std
mov
cmp
add
sarb
aam
ret
ret
rcrb
stos
int
sbb
xor
mov
in
call
inc
movsb
fisubrl
popa
ljmp
or
lcall
pop
add
push
jmp
jg
cltd
popa
lea
in
pop
das
sub
push
lahf
imul
cli
into
sbb
cmp
es
mov
cs
jmp
push
xor
pop
xlat
fidivrs
pop
xor
sbb
sbb
xorb
mov
scas
jno
xor
fs
stc
inc
andl
dec
jle
imul
je
mov
pop
sahf
sahf
push
add
test
mov
pop
int3
adc
sbb
adc
push
mov
and
outsb
mov
or
loopne
mov
dec
popa
sub
push
sti
into
cmp
pop
pushf
cs
cmpsl
pusha
and
or
pop
add
das
nop
nop
aam
inc
push
inc
adc
sarb
arpl
fstpl
loope
into
and
sub
add
xchg
xchg
and
jno
cmp
outsl
sar
xchg
bound
hlt
xlat
push
into
ss
cmpsl
pop
cmp
cmp
dec
sarb
insl
mov
jle
imul
ret
sbb
jb
sbb
xchg
repnz
xor
dec
mov
mov
orl
shrl
cli
jnp
movsl
jge
fs
push
int
mov
jnp
adc
decl
ret
outsl
xor
jp
imul
add
pop
mov
adcl
into
push
jo
dec
jo
filds
mov
mov
mov
and
jno
loope
push
push
imul
xor
cs
je
adc
cmp
ss
cmp
xor
adc
jns
iret
sbb
divb
push
jns
mov
loopne
call
xor
cmp
adc
mov
cwtl
pop
sbb
pop
sbb
in
shlb
or
and
xchg
add
cld
loopne
sbb
ret
sarl
pop
mov
outsb
cmp
stos
dec
add
loope
adc
add
or
dec
arpl
out
mov
jecxz
pop
roll
pop
sarb
cwtl
loopne
inc
jae
push
movsb
out
test
push
jns
mov
cmpb
mov
and
mov
jecxz
nop
add
dec
push
imul
or
pop
ds
call
and
cli
leave
dec
push
dec
mov
orb
jmp
ds
out
add
pop
ja
pop
mov
xchg
adc
imul
enter
fwait
inc
shll
mov
ljmp
sbb
repnz
outsb
insb
arpl
loop
lds
cmpsb
add
fcomip
insb
push
xchg
dec
sbb
push
sub
adc
and
xchg
jmp
xor
push
and
push
in
mov
dec
lret
dec
dec
inc
add
ret
sahf
je
and
mov
pop
jmp
js
push
jmp
xor
int
or
nop
sti
or
mov
push
int
fists
and
call
pop
mov
sub
or
jne
test
and
pop
arpl
mov
mov
fidivrs
jae
add
sub
out
imul
fwait
mov
loop
mov
jecxz
insl
ret
mov
push
cwtl
xchg
mov
test
ja
int3
xchg
imul
aad
sbb
clts
out
lahf
adc
in
pop
mov
jo
mov
fldt
outsb
ss
lds
cmp
lds
std
xchg
fst
cld
lds
js
mov
and
lret
mov
xor
sub
imul
stc
icebp
jg
enter
xchg
jg
sub
scas
out
sub
popf
icebp
dec
adc
or
mov
dec
dec
add
xlat
and
cs
xchg
sub
mov
xlat
rep
mov
xlat
xchg
int
insl
insb
hlt
loope
scas
xchg
fwait
jp
jns
add
ret
scas
cmp
into
repz
jle
dec
lret
inc
or
and
sti
or
stos
cmpsl
add
repz
enter
aad
in
es
cmpsb
pop
xlat
dec
lret
sub
mov
mov
adc
cs
push
cld
inc
lds
dec
xor
insb
repz
sub
jp
fistps
test
xorl
and
mov
cmp
mov
ja
aas
mov
and
shr
pushf
icebp
gs
cmp
xor
cltd
daa
out
sbb
jno
daa
rcrl
lahf
xchg
dec
push
lods
notl
lods
xor
adc
sbb
icebp
cmp
rorl
jg
or
mov
mov
sbb
mov
push
fisubrs
mov
lods
or
sbb
in
sub
mov
pop
rolb
nop
mov
fdivs
xchg
add
inc
sbb
xor
mov
test
leave
outsl
cmpsl
outsb
mov
push
adcl
mov
icebp
jbe
sbb
push
stos
lret
mov
fstpt
jns
cmp
loop
scas
repz
pop
lahf
pop
mov
inc
push
scas
pop
cwtl
xor
mov
outsb
sbbl
insl
and
and
jae
adc
int3
push
cltd
scas
push
sub
hlt
add
fcmovbe
or
std
inc
gs
fists
xchg
cmp
push
ds
in
or
ret
sbb
mov
inc
jo
arpl
xor
mov
jmp
mov
xchg
in
ja
lods
mov
das
mov
xchg
push
xchg
pop
jp
jnp
dec
repnz
xchg
cmp
cld
dec
cwtl
in
mov
mov
xor
das
cmp
jns
or
out
add
out
iret
sar
repz
dec
ret
mov
sarb
cmpsb
push
dec
mov
outsb
or
js
xchg
cmp
out
shrb
cs
push
loop
cmp
in
out
lds
mov
call
pop
adc
cs
dec
cld
lods
mov
in
cs
imull
dec
push
mov
loop
push
xor
xor
fs
mov
insl
xchg
xchg
inc
or
cmp
loope
in
push
hlt
ss
xchg
call
push
push
jge
in
bound
mov
fwait
stos
js
sbb
jno
scas
inc
cwtl
adcb
scas
lock
adc
int
or
jne
jg
mov
stos
call
lea
xchg
xor
arpl
xchg
fsubs
scas
jns
inc
pushf
inc
and
mov
mov
pop
add
imul
lock
mov
adc
pop
cli
pop
pop
es
into
scas
add
push
lods
xchg
dec
shlb
fcoms
das
push
test
mov
jge
pop
iret
dec
sub
mov
idivl
and
ss
outsl
das
lods
ret
shr
scas
sub
ficoml
inc
fildll
jmp
and
outsl
or
roll
mov
push
or
test
into
mov
loopne
push
aad
adc
cld
sub
pop
dec
or
mov
mov
sti
int3
lock
pushw
jnp
sub
push
aaa
and
pop
mov
pop
push
lods
mov
or
dec
adc
dec
sbb
push
mov
sbb
insl
mov
jb
xor
je
stc
adc
notb
adc
push
jle
mov
sbb
and
xchg
pop
dec
ds
rcl
dec
cmp
movntps
add
sbb
shll
cmp
ffree
sahf
sbb
pushl
dec
pop
or
leave
insb
fcomi
xchg
rcrb
jns
cmpsb
iret
lret
pop
repnz
xor
into
sar
inc
scas
and
pop
stos
xchg
sub
rolb
in
cltd
lcall
cmc
dec
xor
sbb
loopne
lahf
nop
push
jb
inc
into
jae
fiaddl
inc
iret
sbb
push
in
xchg
xorl
test
dec
mov
sub
fstps
adc
sti
add
push
cmpsb
lds
scas
push
jo
lret
aas
rclb
scas
adc
popf
call
sub
mov
pop
daa
adc
popf
pop
jbe
sbb
jns
xchg
daa
xlat
sub
and
std
and
mov
xchg
or
and
popa
test
push
fistps
mov
imul
push
dec
sti
std
mov
cmpsl
mov
sti
fldl
mov
mov
xor
insb
in
inc
sbb
int
shll
in
mov
or
loop
jno
int
push
aam
push
xor
or
or
cmp
fsts
scas
inc
inc
out
lcall
push
imul
aaa
xchg
cmp
cli
mov
push
push
and
daa
andb
nop
xchg
xchg
or
and
cvtps2pd
in
in
stos
jg
andl
test
les
gs
mov
mov
pop
outsb
or
roll
add
xor
fistpl
mov
pusha
adc
std
rcr
push
cmp
bound
leave
icebp
adc
cmpsb
mov
xor
or
push
dec
sbb
ret
jbe
out
les
jnp
pop
sarl
leave
mov
xchg
dec
fisubs
sbb
inc
add
loope
xchg
in
jecxz
enter
jmp
scas
jp
in
rcrl
xor
mov
shlb
cltd
shlb
fidivl
in
adc
cmpsb
fwait
inc
push
dec
push
inc
popa
xchg
pop
ljmp
rclb
push
sbb
lock
sub
mov
std
loope
push
aaa
sub
xor
pusha
into
in
push
xor
dec
mov
fnsave
fs
leave
pop
outsb
clc
fstpt
mov
scas
test
fldenv
mov
or
jne
jbe
add
nop
or
arpl
pushl
fisubrs
int
or
dec
test
sbb
jge
jp
cmpsl
lret
pop
ret
sbb
add
dec
das
inc
pop
cmp
sub
push
add
adc
fisttpll
push
adc
xor
xor
cli
and
pop
gs
mov
mov
jmp
push
js
ja
ljmp
xlat
mov
xorb
imul
lods
gs
dec
push
pop
and
and
mov
inc
dec
adc
push
pop
xor
and
and
repnz
and
push
adc
les
inc
imul
hlt
loop
lret
pop
lret
stc
orb
mov
push
cld
movsl
ret
scas
jns
push
xchg
test
inc
negl
lret
xor
icebp
xchg
sub
sbb
or
mov
sbb
adc
sbb
mov
fdivrl
fisubl
pop
and
pop
cmpsb
ja
fbstp
push
cld
fldt
mov
sub
push
or
lea
pop
cmpsb
dec
clc
jge
inc
inc
ret
dec
lds
push
fs
xor
fwait
pusha
xchg
je
icebp
xor
fsubr
xor
xchg
lahf
pop
xchg
movb
jb
xchg
cmp
in
xchg
rcrb
call
pop
dec
push
ds
iret
in
outsl
or
dec
andb
pusha
adc
xlat
lret
out
inc
mov
les
repnz
push
cli
outsb
or
and
out
lea
pusha
out
lods
push
sbb
adc
mov
lret
lock
insb
mov
jb
pop
incb
jl
add
sub
ds
xchg
jmp
shll
scas
arpl
out
ret
mov
sbb
aam
cmp
and
sti
cmc
cmpsb
mov
sub
and
mov
imul
testb
dec
xlat
sahf
xor
mov
clc
mov
add
lock
jle
cli
mov
add
sbb
aas
sbb
and
cli
and
mov
psraw
push
imul
and
jl
ljmp
rolb
mov
mov
push
dec
mov
push
loop
ds
and
adc
outsb
inc
lods
fnstcw
lret
jmp
jmp
mov
add
xor
or
mov
xlat
xor
in
push
adc
ds
lret
fs
inc
cmp
movsb
pop
rdpmc
imulb
push
dec
stc
sbb
icebp
jle
sub
pop
scas
push
pop
in
cmpsl
xlat
fisttps
push
xchg
call
adc
movsl
jo
aad
and
fnstsw
repnz
mov
push
xlat
mov
xlat
lret
test
inc
sbb
nop
shl
jmp
pop
sub
mov
fnstcw
or
pop
inc
xorb
mov
stc
sbb
mov
mov
mov
pop
lret
push
mov
xor
sub
xorb
pop
cmp
cmp
hlt
or
jne
cmc
pusha
popl
and
inc
nop
imul
pop
test
dec
cmp
fwait
jge
jmp
xchg
outsl
cmp
adc
cwtl
fnstsw
xor
push
lahf
pusha
jg
mov
cmp
aad
leave
sti
jle
mov
iret
js
push
and
pop
iret
mov
xorb
add
into
popl
lods
loope
jge
bound
mov
sub
inc
push
mov
jmp
cwtl
bnd
test
jno
dec
mov
cltd
push
movsb
adc
or
and
jmp
dec
lods
push
adc
mov
sarl
aas
fsts
pop
in
aas
icebp
in
add
imul
mov
shll
xchg
dec
out
movsl
add
jb
sbb
jns
sub
and
pop
sbb
cld
stos
mov
mov
ss
gs
sub
rcrl
cmp
xchg
out
push
loope
push
subl
ja
mov
jecxz
aam
pop
loope
fsubs
adc
mov
mov
stc
inc
popa
shr
les
mov
lods
sub
mov
inc
cmp
lea
enter
rep
stc
je
aas
jne
adc
inc
pop
mov
ljmp
repz
and
xchg
ljmp
cwtl
lock
loop
pop
andl
dec
das
sbb
fs
loop
mov
fstp
sbb
lret
gs
roll
push
push
stc
inc
push
sahf
ja
jle
imul
xchg
mov
add
sub
subl
push
ljmp
shrl
mov
or
push
xor
or
pop
add
mov
cmp
inc
das
mov
nop
enter
dec
fldcw
mov
sahf
lock
xchg
inc
gs
mov
dec
pop
xor
jmp
inc
out
jmp
incl
mov
xlat
mov
sbb
xor
jo
enter
and
sub
stc
fadds
movsb
shll
xchg
ljmp
adc
adc
mov
mov
xor
dec
push
arpl
sbb
sub
into
inc
adc
mov
lahf
add
push
imul
pop
negl
push
sbb
lret
filds
add
add
sub
roll
cmp
dec
and
xor
or
test
out
stos
loope
or
or
mov
mov
and
in
mov
pop
jne
jmp
daa
sub
cmp
inc
addb
sub
dec
aaa
and
int3
xor
lcall
int3
push
icebp
aam
lock
lea
jg
mov
leave
add
push
jne
cld
aad
cli
dec
xor
adc
xchg
cmc
fdivrs
aas
mov
popf
inc
or
sub
sbb
inc
in
jecxz
lods
cli
inc
out
out
je
ss
loopne
scas
cmpsb
stc
add
add
dec
add
pushf
and
negb
xor
aaa
bound
push
mov
cmpsl
xchg
or
xorb
ljmp
adcl
mov
repnz
cmpsb
ljmp
jb
lret
scas
jb
rorl
cmp
inc
jecxz
dec
pusha
in
jmp
loopne
cltd
add
xor
ja
mov
imul
fildll
inc
jmp
and
xor
cmp
fcomp
jnp
repnz
push
mov
psubb
xchg
jge
out
sbb
lcall
repz
sub
sbb
lods
xchg
clc
out
lods
pop
popf
mulb
cld
js
xor
test
sbb
fwait
mov
mov
repnz
jmp
or
jmp
sbbb
jg
adc
xchg
sub
fimuls
ja
mov
mov
ret
push
mov
mov
in
out
lock
add
lods
inc
push
rcrl
pop
iret
jmp
les
outsl
or
xor
push
cmc
dec
xlat
nop
stos
inc
mov
enter
mov
pop
bound
dec
adc
push
add
xchg
lret
push
shll
xchg
or
lock
fisttpll
cs
xchg
scas
aam
jns
scas
paddusb
dec
jne
pusha
cmc
and
or
cmp
jns
and
daa
out
cltd
call
lcall
lds
jnp
mov
sar
push
push
pop
fsubrs
into
sarb
sub
aad
js
pushf
xchg
jb
sub
push
int3
xor
hlt
ror
int3
jge
pop
in
mov
shl
lock
pop
lods
xor
mov
dec
das
fwait
mov
push
sahf
outsl
bound
in
lret
aaa
int
rcll
push
mov
jmp
or
inc
adc
stc
sar
mul
out
jnp
mov
pop
dec
mov
movsl
int3
andb
and
pop
lret
cltd
pop
add
mov
test
lret
ret
repnz
imul
and
lcall
mov
ret
cmp
ret
das
aad
cltd
xchg
inc
adc
mov
mov
fxch
bswap
mov
fiadds
cmp
push
mov
or
xchg
xor
adc
leave
pop
in
adc
out
and
lcall
and
mov
mov
dec
push
mov
sub
test
push
sbb
sub
ret
cltd
or
lock
xchg
hlt
in
or
push
lea
jbe
jg
add
lods
mov
push
addl
iret
test
scas
out
adc
add
dec
arpl
adc
cwtl
pop
cmp
int
imul
decb
insl
out
mov
cli
jb
mov
jge
or
mov
pop
and
repz
in
mov
andb
jne
sub
inc
push
hlt
notb
popa
stos
jbe
outsl
cmp
mov
mov
mov
minps
xor
push
dec
push
push
mov
fbld
dec
lods
adc
dec
push
stos
cmp
adc
adc
test
loope
jle
xor
push
lods
cmp
dec
and
xor
insl
dec
rcl
shll
lahf
and
sbb
dec
adc
setae
lea
lea
pop
out
inc
sub
push
lret
or
ret
add
or
mov
sar
cmpsl
loopne
jle
daa
das
movsb
jg
cmp
mov
lds
test
daa
mov
mov
fisubrl
jle
or
cs
sub
pop
fs
fcompp
dec
xor
sub
int3
loope
adc
test
test
mov
insb
xlat
dec
sti
std
mov
mov
sbb
jmp
incb
out
movq
inc
leave
inc
ds
mov
nop
fstpl
out
mov
hlt
inc
aas
imul
mov
inc
ret
add
add
sti
mov
cmp
jg
imul
movsl
push
leave
cmp
mov
loope
outsb
gs
fnstcw
inc
addl
test
xchg
fbld
mov
pop
fucomip
ja
push
fucomp
nop
bound
or
mov
sbb
dec
imul
pop
data16
xor
xchg
sub
mov
int
push
mov
ret
cmp
sbb
adc
data16
dec
mov
insb
scas
xchg
mov
mov
sbb
push
es
call
mov
mov
mov
outsb
xor
mov
sub
out
stos
jnp
cmc
and
xchg
call
psubd
enter
fwait
aad
aad
xor
push
mov
cmp
fsts
and
ret
ficompl
or
xrelease
xchg
xacquire
stc
pop
andl
pop
jecxz
out
inc
jno
lret
leave
int
inc
push
jmp
push
push
stos
mov
repnz
push
leave
in
mov
fildl
dec
jle
jb
adcl
lds
mov
je
pop
mov
addr16
cmp
fs
loope
popf
mov
nop
or
or
cld
lock
jg
jns
ds
xchg
and
push
push
mov
lret
jbe
faddl
lret
pushf
stos
fdivrp
mov
pop
mov
subb
test
stc
call
loop
inc
mov
enter
pop
insl
negb
ds
dec
pop
imul
inc
aaa
lea
inc
sar
jecxz
stos
loop
outsb
cmp
mov
sub
aaa
movsb
pop
lock
gs
jg
jo
outsb
cmc
aas
iret
inc
jle
imul
xchg
sbb
pop
je
cltd
out
sbb
cli
sub
mov
out
iret
out
leave
scas
arpl
int
in
fcoms
inc
test
mov
es
rcrb
aaa
pop
or
xchg
das
loopne
mov
cltd
jnp
ret
lods
ds
in
cmp
arpl
sub
rcrl
idivb
sbb
mov
insl
ret
rorl
inc
andb
dec
rcl
call
inc
cmp
jb
or
xchg
sub
sbb
cmp
fidivrl
test
xor
mov
sub
das
jb
dec
dec
and
jp
out
mov
cmp
ja
push
mov
jb
sti
fldcw
and
push
stc
sbb
lds
push
lea
sbb
mov
inc
push
imul
hlt
out
nop
mov
cmp
xor
repnz
lcall
fiaddl
jl
xchg
pop
sbb
xor
mov
adc
pop
jg
subb
mov
pop
movsb
lret
xlat
lcall
and
adc
inc
aam
xor
les
jnp
push
jbe
inc
arpl
xchg
dec
sbb
pusha
cmc
jae
or
lahf
loop
movsl
jo,pn
shr
cs
inc
out
xor
gs
push
in
mov
outsl
sar
fldenv
mov
imul
shl
std
fisubrl
push
rclb
fldt
aam
shll
dec
and
inc
sub
push
adc
lock
fwait
mov
imul
mov
pop
call
jb
jecxz
jo
jno
jno
dec
fsubrs
sahf
push
popa
cld
aad
pop
cmp
xchg
mov
mov
inc
pop
xlat
dec
rorb
lret
call
adc
in
or
cmp
push
xor
or
sub
test
notl
and
xchg
lds
mov
and
push
cmpsb
jg
shr
inc
mov
aas
pusha
push
jnp
shll
cld
iret
cld
movsb
mov
dec
jae
add
inc
in
jbe
mov
shll
test
xor
push
sbb
mov
gs
decl
sub
pop
xor
push
jns
ficoms
out
or
mov
in
sub
jne
lret
sarl
inc
hlt
sahf
inc
fucomp
clc
adc
inc
lds
call
fistps
xchg
xchg
inc
pop
int3
rcrb
xchg
popa
dec
sbb
mov
jno
mov
mov
imul
add
fwait
stc
lea
push
arpl
cmp
test
mov
psubsw
ret
inc
lock
lret
dec
cltd
dec
adcb
fnstenv
popf
loopne
mov
mov
cli
std
jecxz
push
mov
adc
inc
fisttpl
or
xchg
add
mov
fldenv
icebp
gs
or
nop
insl
repz
jo
enter
jle
mov
jae
jb
pop
add
cmpsb
mov
jo
rcrb
aad
jge
loop
filds
mov
loop
cmpsl
sbb
scas
stos
dec
xchg
mov
dec
stos
cmp
mov
movsl
dec
push
repnz
sbb
es
mov
pop
mov
mov
xchg
js
shrl
rolb
jg
aaa
stc
das
int3
sti
jp
add
adc
or
adc
jbe
rcll
sbb
shlb
xchg
xchg
fcmove
sbb
jns
push
sbb
inc
cmp
fildl
push
mov
rcrl
mov
popf
dec
or
ss
fstps
inc
insb
stc
fcmovne
insl
adc
cmp
mov
je
out
mov
push
test
ret
and
jbe
int
inc
lret
out
add
js
dec
rcrl
dec
out
in
call
mov
inc
and
and
xor
test
fwait
mov
mov
sub
push
je
adc
js
cmp
lret
cmc
push
mov
adc
out
xor
lds
movb
or
fsubl
mov
xor
sar
push
outsb
outsl
ret
cmp
mov
pop
jbe
xchg
push
in
andl
lods
xorb
or
scas
or
and
addl
sbb
add
lds
xor
xchg
imull
inc
sub
in
das
push
daa
jns
sub
repnz
mov
sahf
sub
adc
cs
pop
dec
loopne
ss
or
arpl
mov
mov
cmpsl
out
xchg
ja
jae
push
push
mov
sbb
xchg
dec
js
sarb
subl
inc
push
sub
popf
popa
jecxz
aas
push
mov
xlat
jge
xabort
jb
sbb
scas
pop
fadd
enter
mov
test
lock
mov
sbb
push
out
scas
xchg
in
push
cmc
jecxz
add
add
imul
out
sub
xchg
mov
rorl
data16
jmp
lea
push
mov
mov
movl
lret
jnp
push
adc
add
push
shll
xchg
fcompl
xchg
ljmp
cmp
cs
cmpsl
inc
and
sub
push
xchg
add
jbe
pushf
xchg
mov
cmpsb
cld
insb
iret
lock
mov
pop
xorl
out
jb
inc
pop
dec
stc
clc
aad
aam
jb
mov
lock
out
dec
jg
les
imul
mov
dec
addr16
lcall
xchg
lret
push
push
aaa
cmp
xchg
pop
insl
daa
lock
sbb
stos
push
lea
adc
and
adc
lods
sub
add
lea
inc
aad
xor
push
lock
ds
mov
lock
addr16
push
cli
cmp
pop
mov
xchg
mov
xchg
xchg
ret
and
sub
push
cs
inc
into
addr16
xor
jnp
xchg
daa
in
out
pop
mov
cs
call
mov
hlt
xor
fistpll
fucom
jnp
adc
fisttpll
push
sahf
mov
subb
jmp
in
inc
sbb
jnp
dec
jno
rorb
add
lods
sbb
sbb
fld
jb
ret
mov
xchg
cmp
shr
out
cmpsl
popa
icebp
dec
fldcw
xchg
push
imul
mov
adc
leave
dec
insl
into
out
in
fwait
mov
cmp
xchg
xor
cmp
insl
push
mov
xchg
stos
imul
and
and
repnz
and
sub
ficoml
add
jl
jecxz
loopne
mov
pop
or
xchg
gs
outsl
adc
inc
fisubl
addr16
pop
and
and
mov
push
js
mov
mov
or
or
in
rorl
or
push
mov
sbb
sub
out
and
adc
mov
push
sub
int3
loope
hlt
mov
jp
add
cmp
push
push
xchg
int3
adc
xchg
mov
and
js
xor
pop
cwtl
xcrypt-cfb
cmpsl
jecxz
fidivs
pop
aas
xchg
dec
dec
and
arpl
mov
cmpsb
cli
adc
inc
jae
xor
std
jmp
rcr
pop
mov
cmpsb
and
mov
popl
jns
xlat
mov
xlat
push
bound
es
insb
std
jb
or
jno
in
cmc
sahf
adc
push
mov
dec
ja
mov
pop
shll
sbb
jle
mov
cli
les
dec
jno
pop
jno
and
hlt
in
ds
ja
out
dec
es
mov
mov
fld
dec
or
ja
jecxz
rcr
scas
pusha
push
cmp
add
push
sub
loopne
bound
sub
jl
push
rsqrtps
loop
dec
clc
iret
popf
cmp
test
pop
add
xor
jns
or
xor
cmc
xor
dec
es
jle
adc
sub
pop
sub
cli
loop
mov
jne
in
xchg
push
mov
test
mov
iret
adc
cmp
mov
hlt
dec
outsl
push
push
popa
ja
xchg
push
adc
push
aas
xor
xchg
cmc
cmpsb
push
mov
cmp
rcr
adc
mov
dec
fld
xor
enter
xor
out
dec
or
dec
mov
adc
xlat
sub
sarl
rorb
in
lods
and
scas
mov
push
adc
das
nop
dec
data16
dec
test
cmp
out
add
and
xor
in
pop
mov
addr16
lods
bound
and
sub
mov
push
mov
pop
insb
mov
lret
das
inc
cmp
or
adc
push
rorb
movsl
mov
roll
fs
dec
lock
sbb
dec
push
shlb
jecxz
add
mov
sbb
mov
dec
out
jae
dec
jl
sub
and
sbb
decb
stos
jb
inc
cmp
adc
sub
add
sbb
or
aad
sahf
cmpsl
jle
mov
sub
sbb
adc
insl
stc
shlb
insb
pop
clflush
pusha
mov
xor
adc
enter
sarb
cli
dec
out
jne
addr16
std
ficoms
andl
imul
adc
pushl
pop
mov
push
das
xchg
cmp
mov
xchg
out
add
push
jle
mov
ret
mov
movsl
pop
mov
out
sub
or
pop
mov
pop
jb
push
mov
and
mov
ds
int3
add
inc
mov
lea
out
repz
inc
dec
aad
and
fwait
mov
xor
int
cmp
movsb
jge
cmp
pop
pop
stos
or
push
adc
pop
push
mov
cmp
cmp
sti
xchg
mov
into
pusha
outsb
fwait
xchg
movsl
mov
push
mov
pop
xchg
pop
push
and
pop
mov
clc
incb
dec
and
lcall
cmc
mov
push
fdiv
xchg
xor
sub
add
test
dec
dec
xlat
enter
sahf
add
xor
dec
push
mov
mov
mov
xchg
scas
pop
daa
cwtl
inc
cmp
cmc
gs
or
inc
cmp
sub
push
mov
shrl
or
jle
jno
xchg
jg
pop
outsb
add
add
lea
and
cvtpi2ps
push
pop
lock
adc
sarb
scas
hlt
mov
repnz
mov
pop
test
mov
or
inc
stos
dec
cmp
or
into
push
pop
loop
dec
fldcw
inc
bound
dec
pop
lcall
and
movsl
fs
stos
xor
stos
rorl
roll
mov
mov
push
cmp
imul
mov
fwait
cltd
iret
ss
imul
addr16
pop
cmp
pop
ret
test
xor
stc
ret
and
aam
cwtl
mov
or
das
inc
out
adc
pop
shlb
lret
mov
or
jno
fidivrs
into
cmpsl
adc
mov
sub
sub
addr16
shufps
inc
sbb
add
cmp
jbe
jb
pop
stos
dec
mov
mov
cmp
jmp
lret
or
or
clc
fisubrl
sbb
pop
cmp
cld
dec
pushf
shrl
sub
lcall
xor
sub
mov
ret
mov
cmp
cmpsl
loopne
jg
mov
inc
bound
jmp
add
movsl
std
sub
mov
sub
imul
sub
scas
cmp
lds
xchg
pop
or
imul
xor
xchg
and
div
les
dec
mov
pop
lea
ret
mov
scas
sbb
shll
fidivs
jbe
cmp
mov
fsubs
mov
ret
cld
arpl
fsubrp
adc
gs
out
dec
insb
adc
mov
bound
add
aad
cltd
into
sub
jno
xor
cltd
xchg
inc
inc
ja
imul
push
cmp
cmpl
mov
dec
xchg
daa
hlt
sub
aas
sbb
fisttps
int3
adc
lods
dec
or
loopne
lret
dec
imul
xchg
lea
pop
adc
adc
fmulp
xchg
cmp
sbb
jb
jbe
mov
xchg
lock
or
inc
fwait
int
jae
loop
cltd
mov
and
mov
push
mov
dec
push
adc
cwtl
into
ret
rcll
jl
pop
inc
fcoms
cmp
scas
push
mov
mov
push
inc
fs
roll
push
out
fidivrl
mov
inc
ljmp
xor
insb
dec
jo
movsl
sub
jns
popa
add
dec
andl
decl
push
enter
sub
arpl
cs
out
insb
lcall
xor
adc
inc
mov
imul
push
mov
mov
jle
jno
mov
pop
mov
cwtl
ficoms
out
mov
scas
hlt
push
filds
rclb
xchg
scas
call
ljmp
mov
inc
in
jle
in
inc
lea
dec
ret
rorl
mov
jne
scas
pop
lret
es
sub
jae
test
jns
sub
cmc
adc
sbbb
xor
nop
pusha
add
xor
lods
cmpl
fs
mov
cmp
sbb
insb
jge
mov
ja
lods
xchg
mov
popa
pop
mov
cmpsb
movsb
mov
dec
inc
mull
cmp
sub
push
rclb
incb
or
xchg
adc
add
mov
lahf
cmpps
or
pop
cli
mov
stc
mov
jae
dec
rorb
mov
mov
jne
int
into
xchg
ljmp
lods
mov
scas
add
pop
out
test
mov
cwtl
pop
movsl
push
or
cmp
dec
lods
pop
xchg
mov
sub
mov
push
in
pop
test
mov
mov
leave
addr16
dec
loopne
data16
cmpsl
sbb
lahf
sarb
or
add
ret
adc
sbb
icebp
test
jmp
jp
scas
inc
xor
push
push
xor
cmpsb
sahf
into
adc
sarl
xchg
push
xchg
adc
inc
pop
add
scas
in
xchg
divl
roll
icebp
inc
stos
ret
insl
int
movsb
repnz
pusha
dec
loope
lretw
cs
andb
lret
xchg
push
mov
cmpsl
pop
pop
outsl
add
insl
scas
cmc
in
cmpb
pop
out
fsts
jecxz
or
push
outsb
repz
lret
push
movsb
pop
and
pop
ja
sbb
out
pushf
aam
sbb
daa
and
cmp
push
fs
aam
cmp
and
add
cmc
mov
add
repnz
push
mov
nop
mov
mov
add
fcmovbe
cltd
pop
lock
mov
mov
outsb
loopne
xchg
ret
ret
xor
mov
fsubr
gs
xchg
repnz
repz
fwait
je
shrb
adc
jbe
shr
scas
pop
and
movsb
cmp
stos
xor
pushf
enter
push
test
mov
stos
clc
sub
shrb
add
push
xchg
stc
sub
inc
ss
es
lods
and
imul
xor
fisubrl
pop
fucomi
xlat
mov
dec
mov
lds
mov
sub
xor
cmp
lret
xor
daa
or
pop
push
add
mov
dec
aas
adc
mov
sti
mov
push
repnz
push
xchg
rorl
jmp
xchg
jae
pop
mov
rcrl
mov
xchg
push
neg
pop
dec
push
push
pop
data16
mov
cmp
inc
adc
outsb
push
push
add
lods
jp
pop
push
or
mov
adc
dec
or
pop
std
jmp
daa
andb
mov
or
or
xchg
xchg
inc
jns
inc
mov
jg
cmc
mov
js
sub
xchg
add
mov
push
mov
fnclex
or
cmp
jmp
outsb
outsb
lods
aaa
sbb
or
xor
sbbl
jo
sbb
out
jmp
pusha
stc
movl
insb
in
sahf
dec
mov
mov
mov
jno
aad
lret
jmp
aas
bound
sahf
inc
push
mov
xor
and
sbbl
adc
pop
dec
pushf
gs
mov
sub
je
sub
imul
sub
lock
or
mov
xchg
sbb
rcrb
mov
dec
sbb
dec
lock
imulb
jg
jl
xchg
dec
addb
movsl
lret
mov
xchg
out
orl
sbb
adc
xor
ret
fimull
in
int
lret
movsl
xchg
leave
or
mov
mov
jae
push
mov
lret
aaa
js
xor
push
fcoms
inc
cmpsb
or
test
dec
dec
cltd
xor
adc
repz
mov
jae
push
add
pusha
sub
mov
inc
icebp
push
int
fsubrs
add
mov
js
cwtl
add
dec
cmpsl
test
mov
dec
xor
mov
fadd
xor
xor
aas
cli
adc
xchg
jne
bound
cmp
pop
addb
jno
jns,pt
hlt
gs
lcall
jbe
sbb
or
pop
pop
out
data16
cmp
xchg
and
popa
ficoms
fwait
mov
xchg
cld
fstpl
push
sar
pop
mov
hlt
sub
mov
and
mov
jecxz
rcl
pop
and
jno
jmp
xchg
outsl
dec
lock
arpl
lds
mov
jle
popa
loopne
pop
adc
jge
push
xchg
mov
or
icebp
pop
inc
jl
stos
jmp
pop
fildll
cmp
push
adc
jno
fdivl
arpl
pop
sbb
sub
pop
daa
mov
lods
dec
mov
arpl
mov
dec
nop
add
xor
sbb
pop
and
dec
movsl
dec
lea
std
sbb
in
not
push
dec
xchg
jne
mov
cmp
clc
in
es
jmp
mov
jecxz
or
dec
cmp
mov
add
pop
data16
mov
arpl
adc
addr16
mov
xlat
aaa
jl
push
cs
adc
push
inc
pop
inc
add
aam
mov
lahf
roll
scas
or
subl
add
ret
popf
cmp
roll
idivb
jns
test
out
mov
cmp
pop
mov
testl
cmp
cmpsb
jne
pop
pop
pop
addb
adc
adc
pop
xchg
jae
mov
inc
stos
imul
push
pop
xchg
push
cmovne
cld
mov
or
adc
ret
loope
movsl
inc
std
xchg
cmp
inc
and
add
cmpsb
loop
ljmp
in
clc
pop
je
ja
clc
fcmove
cmpsb
cld
in
shl
nop
xchg
jle
lods
mov
push
push
push
cwtl
dec
test
int
test
cmp
cli
daa
inc
fs
jmp
xchg
jo
pop
rorb
out
fdivrp
js
cmp
dec
cmp
sub
mov
shl
add
popa
imulb
ljmp
push
sub
jl
jns
int
out
sti
ret
idivl
sbbb
push
lahf
inc
mov
call
movsl
aaa
mov
jle
jp
xor
enter
cmp
add
sbb
dec
popa
jbe
push
or
mov
push
add
xor
mov
add
jecxz
enter
mov
daa
push
mov
jbe
inc
mov
and
gs
scas
movsl
dec
xchg
jnp
or
fcmovnu
arpl
pushf
and
in
scas
or
and
and
jp
sbb
rolb
icebp
lods
icebp
inc
sub
fists
inc
jb
mov
aam
imul
testl
adc
imul
xchg
cmp
into
push
fisttpll
dec
das
mov
insl
sarl
stc
or
movq
cli
add
cmp
push
pop
iret
jnp
jp
or
sbb
ror
addr16
lods
sbb
das
xchg
xor
adc
mov
lcall
mov
std
pop
mov
xchg
lcall
adc
sahf
or
pop
fcom
adc
pop
push
loope
js
out
andl
jecxz
xchg
inc
or
dec
orl
and
pop
xor
add
lcall
in
mov
sbb
mov
rol
cltd
xor
pop
negb
pop
shlb
js
pop
jge
mov
aam
jno
gs
mov
pop
aas
sub
popa
daa
sub
test
jle
mov
cli
pushf
pop
mov
and
je
lds
gs
pop
stc
push
jno
pop
fiaddl
stos
test
ret
jp
mov
pusha
pop
mov
adc
mov
lods
mov
cs
mov
jb
cld
push
cwtl
scas
push
jns
push
cs
lods
jno
pop
mov
and
stc
mov
jg
in
iret
adc
mov
jbe
mov
xor
jo
dec
out
leave
dec
movsb
add
paddsb
loope
jo
les
pop
adc
add
mov
fldcw
insl
ret
pop
inc
iret
jae
push
adc
pop
ret
in
imul
mov
pop
mov
js
iret
mov
cmpsl
out
bound
cmp
sbb
or
adc
daa
inc
int
push
insb
outsb
mov
dec
xor
fcoms
sar
rcl
pop
dec
ret
mov
mov
icebp
pop
pop
bound
xor
aad
out
cmpl
add
jecxz
fst
rorb
hlt
lret
into
push
loop
mov
mov
out
iret
scas
jl
add
push
xor
imul
jbe
out
jecxz
xchg
sbb
lahf
cs
sti
jbe
lods
stos
fiaddl
test
push
scas
cmp
je
mov
shrb
dec
xchg
pop
xchg
shrl
cmc
push
cmp
fisttpll
aaa
sbb
cltd
cmpsl
andb
test
mov
lods
mov
icebp
out
pop
sarw
ret
inc
ficoms
cmp
add
cmp
sbb
add
dec
mov
jmp
mov
dec
out
adc
adc
out
sar
testb
pop
inc
movsb
xchg
push
mov
inc
lods
aaa
dec
jo
xchg
adc
xchg
sub
lods
jp
add
out
push
pop
mov
mov
in
dec
daa
xor
mov
xchg
sub
daa
dec
in
out
jb
dec
push
push
pop
mov
rorl
and
outsl
pushf
and
pusha
shr
sbb
out
xchg
push
out
nop
insl
imul
xor
jmp
in
lcall
cmp
in
sti
pushf
mov
jle
iret
xlat
cmp
jns
sbb
test
inc
sbb
dec
push
xchg
imul
jns
ja
insb
push
xlat
adc
add
mov
and
sub
fndisi(8087
inc
sbb
mov
dec
mov
push
inc
stos
jbe
fucomp
jne
inc
js,pn
imul
mov
cmp
mov
mov
push
jecxz
push
xchg
cmp
cmp
das
mov
loopne
xlat
movsb
loopne
icebp
js
adc
outsl
dec
push
cmp
push
je
inc
pop
and
lret
nopl
dec
fisubrl
add
push
mov
xchg
add
ss
push
cmpsb
sbbb
or
add
loopne
push
lea
ja
push
xchg
out
test
pop
lods
scas
sub
int
lods
fs
cli
repz
out
dec
inc
pop
push
push
pop
movsl
dec
rorl
cmc
addr16
jle
aaa
xor
inc
call
mov
test
push
outsb
int
into
push
fdivrs
ret
mov
jae
pop
pusha
or
fcoml
cmp
popa
insb
xchg
lods
push
sarl
shlb
mov
pop
pop
add
sbb
xchg
push
jns
or
jl
jae
leave
add
mov
jmp
pop
outsl
hlt
fimuls
pop
test
mov
push
nop
inc
in
ljmp
in
lret
les
and
mov
pop
lds
jmp
sub
mov
add
icebp
lods
dec
cmpsb
and
cmp
js
and
xchg
ds
xchg
shrl
mov
cmpsb
sub
lret
repz
in
mov
cmp
adc
lods
pop
dec
jnp
cld
dec
jp
mov
inc
popf
lret
jbe
jmp
out
push
mov
pop
mov
loopne
ljmp
loope
and
jno
sub
arpl
pop
movsb
out
enter
pop
xchg
ret
inc
leave
call
sti
popf
pop
xchg
cld
out
aam
aaa
std
stos
and
in
sub
mov
pushf
call
mov
mov
or
fistpll
lods
lret
mov
sar
push
subb
in
adc
test
in
je
push
loop
mov
sbb
sub
cs
aas
incb
jae
and
cmpl
shlb
jmp
decb
call
pcmpeqw
fwait
out
scas
ljmp
enter
ret
decb
pop
dec
or
lods
xchg
push
mov
cmpb
sbb
aas
jae
call
push
jns
inc
gs
hlt
xchg
std
push
and
imul
pop
test
or
enter
mov
inc
int3
rcll
cwtl
add
rcrl
xchg
cli
popa
mov
cs
ret
subb
pop
out
add
cld
push
aam
jns
lods
add
lret
inc
ret
and
xchg
stos
sbb
repz
lods
hlt
daa
xorl
xor
or
cmp
clc
stos
repnz
das
push
dec
bnd
jp
jnp
or
int
jb
in
rclb
and
lock
lods
and
fcmovb
push
cmpb
aaa
sbb
sub
ror
scas
inc
adc
ja
rcl
mov
rorb
mov
add
icebp
cmp
scas
pop
cmp
nop
pop
ja
or
ds
or
mov
aaa
jle
not
pop
or
or
dec
loope
sub
jl
or
adc
mov
or
mov
inc
push
mov
lahf
push
lret
test
loope
out
aaa
lret
mov
mov
sub
movb
ljmp
jbe
xchg
inc
or
dec
pop
lea
jne
lret
mov
mov
aaa
addb
pop
xchg
push
scas
faddl
mov
sbb
pop
fsubrs
sbb
add
lods
fwait
inc
negb
fmull
repnz
inc
xor
xchg
iret
cmpsl
jmp
xor
mov
fdiv
pushf
leave
inc
jecxz
pushf
xchg
jp
fisubrs
pop
mull
pop
inc
jge
jbe
stos
je
nop
dec
call
xchg
or
push
inc
daa
imul
xchg
or
xchg
add
mov
out
repnz
shlb
decb
add
jb
es
inc
push
bound
mov
fwait
hlt
sub
ja
or
xchg
dec
cmpsl
repz
push
aaa
sbb
stos
out
or
xor
aaa
sbb
pop
xor
mov
xchg
mov
cmpsb
insb
and
mov
dec
mov
mov
out
les
dec
sbb
dec
out
repz
popf
scas
xchg
xor
and
addb
mov
inc
fidivrl
cmp
mov
pop
adc
xlat
insb
dec
mov
xchg
movsb
imull
xor
jno
add
xchg
sbbb
mov
bound
notl
adcb
push
outsl
push
imul
cli
cmp
mov
jg
sbb
outsl
les
clc
enter
mov
mov
push
popa
testl
push
into
jns
and
inc
xlat
or
sub
inc
pusha
pop
xchg
fs
cmpsb
rcrl
lock
jb
popf
repz
pop
repnz
mov
mov
xor
fstpt
movb
adc
push
shl
or
push
call
pop
mov
push
daa
sbb
call
pop
test
add
pop
mov
xchg
popf
cmpsl
test
cmp
arpl
fsts
lret
pop
xchg
add
mov
mov
stos
ds
rorb
cld
jp
xchg
or
push
and
push
insl
pusha
inc
roll
mov
mov
insb
cmp
lcall
xor
insb
mov
or
faddl
aaa
jg
jo
jno
jp
adc
jnp
cmp
xchg
div
push
test
xchg
int
jns
sti
insl
cli
xchg
mov
inc
cs
ficompl
lret
test
jge
and
and
popa
ret
imul
sub
xchg
inc
leave
sbb
int3
lods
and
sub
push
mov
scas
mov
sub
in
popl
adc
mov
clc
cmpsb
rcll
xor
jns
mov
xor
popf
roll
in
xlat
mov
push
fbld
mov
aas
or
or
ficoms
and
adc
mov
cwtl
xor
cwtl
or
push
outsb
idivl
das
sbb
and
xchg
enter
loopne
pop
loope
test
sub
add
fwait
inc
pop
loop
roll
pop
movsb
add
scas
inc
dec
iret
fbstp
pushf
popa
jbe
imul
pusha
push
and
nop
outsb
push
lods
sahf
popa
mov
sub
icebp
lea
xor
pop
add
inc
cs
int
ret
add
pusha
dec
mov
arpl
fwait
adc
pop
and
mov
aas
ljmp
cmp
inc
scas
cmp
js
inc
pop
mov
mov
movsb
inc
imul
and
stos
pop
faddl
or
ja
jp
push
cmp
aad
mov
inc
out
fistpl
fwait
cli
fnstenv
out
fs
and
inc
xor
mov
sbb
push
pusha
sub
and
mov
je
sub
call
pop
fidivrl
in
sbb
and
xor
cmp
fnstsw
es
inc
pop
scas
sbbb
out
lods
jmp
xchg
imulb
movb
dec
cmpsb
incb
mov
in
scas
stos
or
mov
cld
cltd
imul
out
in
test
mov
jp
addr16
out
stos
jno
testl
mov
rcrb
call
or
mov
rorb
mov
pop
sahf
pop
scas
std
fs
and
jge
mov
faddl
push
call
or
cltd
test
mov
lock
lahf
pushf
cmc
fdivrl
xlat
fisubs
pop
jbe
jge
jb
pusha
dec
xor
sbb
push
aas
das
fcmovnbe
mov
out
imul
shl
loope
jne
add
int3
repnz
mov
jl
jmp
push
push
rclb
sub
pop
push
sub
pop
mov
cmp
adc
daa
imul
stos
dec
aas
push
pop
jbe
push
stos
rcrl
cmpsl
push
mov
push
or
jne
stos
loope
adc
mov
jo
dec
nop
jbe
xlat
fs
mov
sbb
orl
adc
fmuls
adc
stos
insb
cmpl
cmpsb
cmpsl
hlt
andl
outsb
fcoms
push
add
push
mov
repnz
iret
or
mulb
cmp
and
cmp
sbb
cmp
push
mov
xchg
or
test
cmp
xchg
dec
xor
cmp
addb
das
add
pusha
xchg
xlat
imul
pop
cmpsl
dec
cld
jb
push
repnz
mov
rol
cmc
adc
or
push
and
sub
push
popf
pop
movsl
mull
ljmp
dec
lret
push
ja
call
or
dec
call
std
subb
or
aam
jb
pop
movsl
push
dec
jns
lods
jb
xchg
mov
por
inc
stos
jns
les
sarl
cmp
mov
and
jne
das
inc
dec
nop
aam
insl
mov
xchg
lods
xor
clc
adc
popf
fwait
mov
cmp
mov
pop
push
fsubrl
jg
into
xchg
xchg
push
add
inc
inc
xchg
sbb
push
pop
mov
sti
hlt
icebp
sub
push
jno
dec
ja
dec
cmp
lea
inc
in
or
mov
sahf
sub
mov
cmp
dec
add
push
push
inc
cmp
add
sbb
cmp
sub
xchg
daa
mov
inc
scas
cmp
mov
inc
jno
call
xchg
cs
lcall
or
xor
adc
icebp
mov
jmp
clc
adc
pushl
cmp
xchg
inc
xor
add
movsb
and
test
push
rorb
pop
loope
insb
ljmp
lods
pop
xlat
enter
pop
insb
das
out
ljmp
mov
dec
push
xlat
pop
pushf
cltd
xchg
cmp
imul
xchg
inc
roll
shlb
not
mov
mov
xchg
cmpsb
test
adc
test
mov
addl
mov
mov
cmp
sti
xlat
push
add
xchg
mov
outsl
jne
testb
inc
out
out
in
aad
jge
xchg
fpatan
fbld
out
mov
scas
gs
mov
fsubrl
xlat
dec
mov
mov
rclb
jp
in
in
incb
adc
mov
mov
movntq
mov
lahf
cld
sbb
sahf
mov
mov
pop
inc
xchg
or
cmpl
mov
leave
aas
loope
sbb
cld
xor
xchg
pop
stos
shl
and
add
push
xor
mov
mov
inc
outsb
cmp
cmp
add
sbb
fwait
stos
and
lea
mov
int
inc
out
inc
mov
stos
add
xchg
sub
movsb
jl
lret
call
imull
xchg
sbb
popa
nop
ljmp
or
insl
xchg
ret
jnp
bound
push
add
ror
and
lds
dec
lods
adc
dec
std
and
sbb
jp
or
xchg
aaa
push
fstpl
xchg
dec
in
inc
pusha
hlt
mov
cmp
push
insl
repz
cmp
div
inc
pushf
xorl
add
je,pn
add
popa
cs
rorl
cmp
pushf
pop
jp
mov
sbb
jmp
repnz
xlat
subb
std
clc
cmp
jns
sti
pop
jbe
cmp
push
cmp
icebp
mov
lcall
jmp
popa
adc
out
les
jg
sarb
xchg
cmc
jmp
inc
mov
pop
loope
mov
leave
xchg
mov
lods
lcall
jge
pop
mov
fisubrs
sbb
jo
push
or
call
test
mov
dec
pop
int3
pop
call
outsl
pop
dec
clc
ja
icebp
xchg
insb
push
loop
adc
dec
shl
sub
aaa
out
pop
mov
mov
adc
add
cmp
sub
pusha
push
cmp
repz
and
cld
lahf
loopne
cmp
or
sub
leave
push
call
push
sbb
test
sbb
ret
call
jp
aaa
mov
push
jns
mov
lods
in
bound
xor
addl
cs
mov
jl
cli
cmp
add
cwtl
mov
mov
sub
test
inc
push
movsb
test
dec
pop
and
mov
xchg
push
jp
push
or
add
das
or
imulb
mov
push
push
and
cmp
cmp
scas
std
shlb
lea
loope
bound
add
sub
mov
mov
mov
rcrb
fnstsw
repnz
jp
inc
aaa
mov
mov
sbb
xor
ja
cld
push
inc
or
or
push
shlb
outsl
lock
daa
jne
rcpps
lahf
dec
idivl
aad
pop
loopne
xchg
lock
addr16
cmpsl
rolb
hlt
cmp
out
sub
addl
jg
mov
insb
jb
add
jle
mov
cmp
inc
push
jg
pushf
andl
inc
insb
mov
lods
lds
mov
jmp
add
jmp
adcl
insb
repnz
jp
rolb
jecxz
pushf
and
dec
in
fistpll
in
mov
and
ja
push
xchg
ret
aaa
xor
mov
das
jp
jle
add
and
and
fsubrs
jb
cmp
in
fcomps
mov
inc
into
aaa
sub
cmp
loopne
xor
push
or
cld
es
sub
add
mov
push
pop
add
mov
dec
mov
add
movsb
nop
clc
sti
addr16
dec
into
add
jnp
inc
sbb
aas
mov
roll
test
dec
pop
punpckhbw
cmp
mov
push
pop
or
xor
loop
outsb
frndint
scas
add
jp
inc
std
aas
es
cwtl
out
jae
je
pop
ret
jmp
xchg
cmp
xchg
ljmp
outsb
add
leave
jo
push
inc
rcr
fs
les
sbb
sub
mov
pusha
lcall
rcll
cltd
pop
xchg
xor
pop
mov
sarb
insl
dec
cmc
jno
lods
test
and
mov
mov
pusha
xchg
movsl
or
aaa
inc
mov
rol
pop
out
jnp
mov
pop
mov
sub
add
insb
mov
inc
enter
movsb
push
cmc
or
bnd
mov
std
mov
stos
mov
aaa
arpl
daa
adc
or
popw
push
inc
fcomip
in
jne
xor
and
push
shll
ss
mov
lea
xchg
jae
fstl
cli
imul
out
pop
xor
adc
scas
addr16
insl
outsl
aaa
cli
xchg
cli
dec
jo
adc
mov
push
xchg
js
hlt
lcall
cmp
jmp
cmp
mov
test
aam
mov
enter
and
sbb
test
push
out
mov
sbb
xlat
testl
lcall
mov
add
add
shll
pop
clc
pop
js
outsb
scas
lock
mov
in
xorl
es
std
cmp
jo
les
dec
in
pop
push
cmpsb
xchg
pop
out
mov
insl
and
inc
mov
mov
jl
fucom
ret
mov
xchg
mov
mov
mov
fst
mov
push
dec
fsubrl
in
popf
sbb
es
loope
loop
lock
subl
xor
dec
stos
jp
add
jl
repnz
mov
cmp
pop
dec
pushl
inc
jbe
xchg
xchg
xchg
sahf
mov
mov
cltd
push
push
in
andb
pop
mov
orb
pop
xchg
into
xchg
jmp
fdivr
fisubrs
negl
lock
mov
lea
dec
push
cmp
xchg
hlt
in
fiadds
mov
jecxz
test
in
inc
cld
les
xor
sbb
push
popf
push
repnz
movsb
cmp
add
mov
test
push
adc
cltd
or
std
push
scas
fstl
fcos
jno
cli
or
push
push
dec
and
jno
es
jae
adc
pop
test
and
in
and
stc
fwait
jl
fadds
mov
inc
enter
cmc
out
or
shll
xchg
pop
push
mov
outsb
cmp
sbb
sub
lret
lret
into
or
mov
clc
xchg
cmpsl
scas
xchg
aad
aam
or
inc
pop
sub
add
gs
and
roll
dec
stos
pop
jae
mov
add
sti
push
add
inc
ljmp
leave
lahf
xor
ror
aaa
cmp
pusha
xor
push
add
movsl
std
and
jg
pop
add
lds
frstor
sbb
sub
inc
movsb
adc
mov
mov
loopne
pop
push
repnz
inc
add
bound
outsl
dec
xor
pop
sbb
push
pop
cmp
adc
push
dec
cmpsl
sahf
fisubl
xchg
fnstcw
cmp
sbb
xlat
imull
mov
pop
xchg
aam
pop
out
sbb
push
dec
cmp
or
sub
pop
xchg
test
call
push
xchg
cltd
mov
xchg
inc
mov
shrl
rorl
shll
orb
or
adc
xlat
jno
rol
loope
mov
aam
adc
inc
jb
in
pop
subb
lods
push
cmc
cmpsl
jb
inc
int
add
pop
adc
xor
push
jnp
dec
lods
sub
nop
jo
je
mov
mov
lea
sar
in
je
test
sbb
mov
xchg
rcll
test
push
xor
sbbl
cmp
or
mov
lret
mov
xchg
mov
cld
mov
add
jb
adc
add
cmp
das
push
sbb
mov
xchg
adc
ret
push
daa
mov
or
test
aaa
adc
imul
shlb
push
mov
jge
mov
ljmp
gs
push
xor
fistpl
pop
mov
imul
push
gs
fsts
lea
push
aam
stc
pusha
popf
scas
out
dec
stos
gs
xchg
cmp
or
and
pop
jae
test
movsb
je
add
addr16
rcr
popa
mov
sbb
inc
std
test
push
cld
inc
lods
adc
and
xchg
scas
mov
or
outsl
or
negb
fisttpl
and
inc
mov
mov
pop
lods
sbb
push
mov
pop
pop
aad
aas
add
dec
sbb
mov
movsb
aam
jle
nop
lret
jb
mov
jle
jne
fcoml
mov
dec
shll
dec
xchg
adc
into
bound
dec
push
cmp
sub
in
mov
lea
cwtl
pushf
jbe
pop
push
in
jle
sti
cmpsb
insl
clc
aaa
clc
andb
mov
iret
adc
cld
jmp
xchg
outsb
mov
ljmp
mov
lahf
xchg
lea
or
rcl
lret
jns
and
adc
xchg
inc
xchg
faddl
push
push
and
fstps
add
fistpl
imul
push
jnp
jmp
sahf
into
push
push
test
jle
insl
mov
sbb
push
cmpsb
mov
push
add
push
aas
cltd
xchg
mov
push
aas
cmp
sahf
movl
test
hlt
psubq
push
pop
dec
dec
adc
cmp
and
vmwrite
pop
insb
out
xor
mov
jbe
mov
xchg
lea
rcr
sbbb
jp
cmp
pop
orb
cmp
xor
sub
xor
cmpb
cmp
xchg
mov
xor
sub
xchg
data16
jle
bound
js
gs
shl
bnd
push
pop
ljmp
out
and
cmp
jbe
inc
inc
pop
and
sbb
es
test
cmpsb
insl
nop
sti
cmp
xchg
sbb
cli
adc
je
inc
and
mov
push
jb
lds
pop
and
adc
cmpsb
jne
scas
pusha
notb
in
mov
and
cmc
lods
push
in
add
jne
hlt
inc
lret
mov
xor
scas
or
lahf
and
xchg
rorb
idivl
pop
ret
push
push
fistps
push
mov
dec
xchg
inc
xor
incb
jp
lret
mov
mov
movsb
sbb
out
cwtl
into
mov
test
gs
jae
out
jecxz
inc
pop
cmp
push
dec
mov
cmp
into
jecxz
pop
fmull
jmp
mov
jge
inc
mov
and
out
sbb
lea
insl
and
fildl
cmc
cld
bound
mov
pop
jecxz
mov
or
cmp
and
icebp
fcoms
pusha
sbb
mov
pusha
adc
or
push
inc
pop
xchg
and
mov
add
outsl
js
out
repnz
mov
lock
push
and
sbb
push
imul
enter
out
sub
pop
in
inc
int3
xchg
js
notb
fsubrl
xchg
pop
mov
push
movsb
mov
mov
mov
sub
cmc
add
fmul
add
pop
test
and
sbb
aad
movsb
in
mov
ret
jmp
fcoms
cld
xlat
xchg
sub
mov
daa
imul
push
je
fs
ljmp
xchg
cmp
cltd
cmp
xchg
xchg
sbb
push
movsb
inc
lcall
and
int
cmc
push
mov
stos
cwtl
pop
jg
sbb
cwtl
mov
fldt
scas
push
dec
leave
xor
jo
and
cmp
mov
and
inc
and
lods
dec
shr
testl
mov
xchg
fwait
ljmp
mov
mov
lods
mov
iret
gs
mov
cmc
cltd
ljmp
or
es
lahf
sub
mov
ja
sub
sub
mov
inc
xor
fsubr
sbb
xor
or
lcall
and
inc
pop
les
sub
pop
leave
xchg
dec
push
out
je
fildl
pop
fmull
add
cmp
cmpsl
mov
cli
in
repnz
push
lods
out
hlt
and
rcll
movsb
cmp
push
jne
stos
sub
adc
pop
test
cvtps2pd
mov
mov
adc
popa
lcall
and
sub
fstpt
daa
sub
sub
cmc
and
aaa
or
jo
mov
mov
dec
lret
push
mov
into
adc
sbb
sub
dec
inc
pop
loop
jmp
or
or
lret
mov
dec
push
adc
and
xor
mov
leave
xlat
push
pop
hlt
mov
xchg
call
xchg
clc
out
aaa
push
push
negb
adcb
jbe
mov
or
dec
loopne
loopne
push
jge
scas
icebp
sub
popf
fiadds
adc
ljmp
pop
sub
pop
inc
lock
test
lods
xchg
stc
cpuid
xchg
addr16
or
pop
mov
popf
stos
pop
sahf
adc
in
dec
popf
cmp
lahf
sbb
movl
push
jp
sbb
sbb
lret
push
adc
fmuls
decl
aam
movsl
mov
out
rdtsc
mov
dec
jbe
das
out
in
movsb
arpl
or
jno
pushf
cmp
push
aam
int
bndldx
loop
sarb
mov
icebp
pop
xchg
push
mov
stc
les
xor
xchg
push
pop
inc
add
lahf
sbb
sar
out
insl
out
xchg
test
xchg
popa
sbb
mov
movsb
lahf
jo
mov
mov
adc
xor
inc
scas
inc
jge
fstpl
cmp
xchg
mov
je
es
loope
mov
loopne
sbb
mull
cmp
sbb
dec
xor
fistpl
insl
mov
dec
mov
sub
daa
in
stos
cltd
add
adc
inc
lods
and
mov
xchg
popf
cltd
pushf
push
jecxz
dec
jns
push
mul
cmpsl
shlb
lods
mov
inc
mov
scas
sbbb
xor
adc
pop
pop
inc
adc
jle
call
jnp
mov
inc
mov
jp
lcall
repz
imul
jnp
xchg
cmp
sbb
inc
adc
adc
jns
lods
push
pop
addr16
sub
adc
lret
stc
xor
sbb
test
test
outsb
or
or
and
into
js
pop
pop
pop
mov
dec
dec
repz
cmp
dec
push
pop
and
jns
mov
daa
js
loopne
pushf
xchg
lods
jmp
and
nop
iret
push
fwait
jo
call
cwtl
xchg
pushf
jp
xor
aas
pop
jecxz
fisttpl
xlat
cmc
inc
push
cmp
dec
sub
jp
neg
fwait
rcrl
or
movsl
ret
int3
loop
negb
cmpsl
test
scas
aad
gs
fstps
push
fistl
pop
cmp
popa
arpl
dec
push
jns
fs
push
push
aad
add
inc
clc
arpl
pushf
xchg
or
sbb
cmc
outsb
ds
xor
out
test
lea
push
push
adc
cli
stos
xor
cld
jmp
fstpt
jl
repz
mov
inc
sbb
jns
loopne
adc
jmp
lahf
ss
jle
ljmp
sub
ret
fisubs
nop
pop
pop
shrb
mov
and
push
cmpb
sub
xchg
sti
imul
mov
adc
test
cld
jge
out
push
or
in
fs
das
adc
sbb
adc
mov
inc
int
test
cmp
add
aaa
jae
loop
call
sub
inc
stos
mov
sub
inc
adc
cmp
mov
jnp
pop
push
pop
or
fimuls
sti
xor
in
lahf
sbb
jle
fnstcw
mov
cs
out
loopne
clc
or
jo
dec
dec
mov
cwtl
dec
and
and
xchg
lock
dec
lock
inc
xchg
mov
test
jno
pusha
das
pop
lret
add
lahf
adc
ret
cmp
xor
aad
ror
nop
mov
or
or
inc
jg
jge
mov
cwtl
fnstsw
cwtl
mov
cmp
loopne
fimull
mov
mov
mov
pop
or
push
sbb
adc
xchg
cmp
xchg
ss
enter
gs
incl
stc
mul
movups
add
adc
jge
adc
fisubl
pop
std
ds
inc
mov
lods
adc
ljmp
sbb
or
push
insl
jle
imul
push
fs
fldcw
or
in
pop
ror
fistl
and
out
lcall
push
scas
add
and
jge
cwtl
sbb
out
in
ret
adc
cmpsb
dec
mov
pavgb
inc
fsubs
in
jp
mov
pop
cli
in
das
dec
sub
cwtl
fdivrl
xorl
cmpsl
ret
mov
outsb
js
xchg
xor
mov
mov
test
dec
and
stos
imul
adc
fdivr
push
xchg
pop
sub
stos
sbb
bound
mov
sbb
jge
mov
fldt
dec
adc
adc
subl
sub
xor
mov
pop
call
mov
adc
and
fnsave
jg
inc
push
push
sub
xchg
cmp
fimull
lret
hlt
les
in
dec
call
push
adc
xchg
in
in
cmp
sbb
cmp
in
insl
xchg
es
cmp
or
lods
xor
sti
ljmp
push
add
push
push
mov
out
cli
rclb
inc
dec
mov
sub
ss
ja
push
xor
enter
ja
pop
pop
jle
and
or
jbe
daa
std
pop
mov
aaa
jne
shl
cmpsl
xchg
xchg
pop
jge
pop
iret
pusha
fidivs
push
cli
push
and
popf
push
inc
xchg
cmc
loopne
cmp
cmp
xchg
jae
sbb
test
mov
push
in
sbbb
scas
out
jae
lahf
push
inc
and
xchg
jo
jno
adc
outsl
inc
bound
xchg
test
fsubs
pop
inc
push
shrb
pushf
push
mov
repz
bound
nop
or
inc
sbb
inc
sti
stos
push
jmp
and
pusha
jge
push
mov
inc
and
dec
shll
repnz
sub
mov
cltd
sti
inc
jbe
jns
xor
pop
loopne
mov
or
mov
mov
aam
mov
movsb
mov
and
pop
inc
cmp
out
popa
les
loope
jg
pop
push
mov
push
pop
push
inc
insb
movsb
lcall
xorl
add
fwait
or
ljmp
aam
scas
dec
fwait
test
gs
pop
and
jg
sbb
sbb
adc
lods
inc
out
add
push
cmp
xor
inc
mov
xchg
mov
imul
xchg
ss
xchg
out
aam
dec
dec
jg
cwtl
out
mov
sub
mov
jmp
mov
and
cmp
fsub
sub
push
xor
jl
mov
in
fdivl
xchg
and
and
jnp
push
jmp
fcmove
jp
xchg
jns
adc
jle
adc
xchg
xlat
add
inc
xchg
aas
cmp
or
fists
std
dec
xor
mov
sbb
inc
cmpb
dec
ja
data16
mov
scas
iret
xor
add
aad
test
xchg
adc
mov
movsl
cs
xchg
xchg
mov
out
xor
cmp
mov
rclb
pop
lods
test
mov
dec
mov
dec
addl
mov
icebp
push
pop
test
mov
fisubrl
out
out
ret
mov
fimull
mov
adc
iret
sub
int
call
mov
loop
out
sbbl
dec
inc
rclb
fwait
icebp
mov
pop
outsb
addl
sbb
mov
mov
sti
dec
sub
dec
and
pop
cwtl
add
add
sbb
inc
inc
out
xor
lock
push
dec
sbb
insl
mov
jo
mov
shl
dec
jae
jecxz
add
add
dec
and
mov
hlt
movsb
pop
enter
mov
push
adc
inc
clc
pop
xor
sub
mov
mov
movsl
sbb
sbb
inc
inc
testb
ja
mov
sbb
in
pop
or
inc
mov
addl
cmp
sahf
cmp
test
mov
adc
fsub
cld
inc
mov
sub
xchg
leave
ret
mov
inc
xlat
loopne
or
inc
jg
and
jp
push
imul
iret
rcr
xchg
add
push
jmp
or
jmp
inc
mov
push
stos
js
scas
xor
stos
enter
subl
push
pop
lcall
or
adc
add
data16
and
ret
push
data16
inc
or
aad
aas
jge
js
jg
push
test
lock
xor
subl
cmp
sbb
adc
mov
dec
sarl
sbb
mov
and
aas
adc
add
cmp
mov
push
xchg
aas
pop
popf
in
push
cmc
or
add
jno
iret
ja
mov
inc
or
fstpl
sbb
lock
xchg
shrl
dec
dec
mov
cli
sub
int3
shlb
push
or
mov
xchg
inc
fstps
pop
daa
loope
aaa
cli
push
daa
add
in
je
sbb
pushf
in
movsb
data16
pushf
or
fsts
pop
push
push
pop
dec
lods
adc
pop
add
adc
push
xchg
in
xchg
or
jl
aas
test
jo
mov
pop
dec
push
cmp
push
iret
sbb
fimull
test
xchg
add
push
stos
and
sub
out
gs
push
lahf
or
sub
nop
addl
in
imul
push
push
sbb
push
pop
scas
cwtl
ret
xchg
idiv
cmpsb
sub
clc
sbb
mov
jno
xchg
adc
sbb
aad
fdivp
into
jbe
pusha
pusha
lods
outsb
insb
cwtl
mov
inc
xchg
insb
in
mull
mov
out
stc
shrl
xor
cmp
push
sub
and
jnp
push
mov
xchg
cwtl
add
add
enter
jb
fstpl
shlb
pop
sbb
and
mov
mov
adc
xchg
imul
push
mov
std
fstpt
xchg
scas
mov
add
lcall
sbb
jne
inc
aam
mov
ficompl
sbb
mov
das
jno
xor
xor
jae
roll
in
and
xor
mov
push
mov
xor
xorl
mov
and
cmc
pop
scas
jne
inc
das
fucomp
cld
ja
sbb
xlat
mov
call
movsl
test
jbe
mov
cwtl
mov
stos
pop
xchg
sub
xchg
test
movsl
mov
mov
das
push
push
sbb
mov
bound
inc
mov
js
hlt
test
lock
add
jno
mov
mov
push
pushf
stos
aaa
sub
leave
pop
mov
test
repnz
jnp
cmp
mov
aaa
aad
mov
pop
out
cld
fimull
fcomip
jnp
cltd
xchg
push
xchg
es
dec
pop
out
fildl
out
test
mov
mov
idivl
fcoms
pop
or
inc
sbb
mov
ds
adcl
jp
lret
jle
call
mov
sub
call
in
gs
pusha
loope
cmpsb
and
int
adc
test
mov
and
andl
xchg
or
xor
outsl
imul
scas
jbe
mov
mov
sbb
shl
add
mov
fildl
shr
orb
push
or
shl
xlat
stos
mov
xor
pushf
xchg
pop
fidivs
push
insl
subb
adc
mov
xchg
adc
fdivrl
movsb
jo
insl
cltd
jae
test
mov
xchg
leave
push
pop
xchg
inc
in
and
dec
push
inc
outsb
int3
sbb
imul
pop
sub
cld
ret
addl
add
xchg
pusha
or
sbb
jecxz
out
lret
xchg
rorl
or
cmp
xor
insl
sbb
imul
adc
sbb
xchg
into
fwait
mov
dec
stos
clc
add
iret
outsb
sub
lds
mov
scas
and
adcb
add
shr
das
lds
pushf
jne
cltd
or
std
aas
lret
sti
push
cmp
aaa
cmp
insb
bound
cmpsb
loopne
mov
pop
shl
test
mov
xchg
mov
mov
adc
pop
jae
mov
sub
loope
pop
adc
rolb
lret
xchg
push
fisubs
dec
inc
adc
and
stos
ja
test
je
dec
push
push
adc
mov
test
sbb
jno
or
addr16
inc
sbb
lock
pop
sbb
cli
push
mov
jo
fucomp
inc
in
not
imulb
test
out
pusha
in
inc
mov
imul
iret
dec
data16
arpl
adc
xchg
cwtl
loop
test
push
mov
insl
sbb
mov
mov
mov
aas
test
dec
jle
repz
xchg
and
outsl
les
out
int3
pop
mov
dec
addr16
cld
and
push
pop
mov
shll
cltd
leave
xchg
add
adc
mov
dec
popf
enter
call
inc
xchg
sub
and
testb
pop
int3
nop
sbb
lods
push
rcl
fnstenv
rcl
mov
xor
push
adc
push
int3
and
sbb
mov
lahf
aas
in
push
data16
fcmovnbe
add
mov
push
push
mov
pushl
loopne
sub
push
pop
dec
rcl
stos
jne
xchg
in
push
leave
jae
inc
mov
test
and
mov
cmp
or
jl
adc
xchg
or
scas
xchg
out
sub
imul
shlb
mov
inc
xchg
mov
dec
push
inc
jns
shll
pop
out
cli
shll
mov
add
or
jmp
adc
mov
cmc
mov
push
cwtl
clc
addr16
lds
mov
rolb
sbb
popa
jne
add
fists
mov
cwtl
inc
loope
lret
xor
mov
das
xor
ret
fidivl
xchg
cld
jb
lahf
jecxz
dec
inc
adc
mov
inc
jne
out
xchg
cmp
test
pop
add
fstpl
and
mov
sahf
or
rcl
stos
cld
out
ljmp
popa
fwait
rorb
scas
adc
shrl
mov
or
push
loopne
cld
mov
add
jo
inc
mov
xchg
lahf
popf
sub
pop
lock
rorb
xor
cli
leave
cmp
cld
sub
addr16
dec
xchg
addr16
ret
adc
fisttpll
xor
pushl
xchg
loopne
mov
es
add
pop
jecxz
mov
adc
roll
mov
lahf
adc
addr16
cltd
add
imul
xor
out
xchg
xor
cltd
leave
cmpsl
mov
lret
xchg
sub
std
adc
out
lods
push
and
pop
shrb
shll
mov
add
push
adcl
and
jge
popf
mov
jg
cld
or
sbb
mov
adc
lret
insl
jp
in
push
cwtl
andl
xor
pop
inc
sbb
leave
add
lods
popf
js
xor
push
inc
mov
mov
mov
push
repz
mov
pop
mov
jp
dec
into
mov
push
sbb
stc
lahf
push
movsb
movsl
push
fsubrs
xlat
lret
shll
mov
shl
mov
icebp
sahf
pop
inc
repz
movsl
push
iret
ja
das
orb
pop
stos
stc
xlat
popa
lods
dec
leave
test
jle
into
mov
pop
sbb
pop
imul
mov
ja
sahf
and
xor
add
enter
loop
cmp
push
icebp
sub
test
or
fbld
int
cmp
ret
or
adc
xchg
push
or
aas
mov
pop
adc
std
int3
xchg
lret
cld
pop
ljmp
cmpl
shrb
test
rorb
sbb
lds
inc
pop
xor
inc
mov
lret
adc
popf
xor
out
out
out
scas
mov
je
add
insl
push
add
mov
xor
xor
out
jnp
mov
into
mov
cmp
scas
push
add
sbb
and
pop
sbb
mov
andl
push
and
and
cld
xor
cmpxchg
fwait
lret
pop
orb
or
mov
stos
mov
mov
adc
jg
sbb
ja
loop
cmp
push
insl
mov
cmp
idivb
cmpsb
xchg
mov
ret
xor
pop
outsb
jo
pop
jns
add
xor
and
imul
cmc
loopne
into
mov
lret
fidivs
push
or
aad
pop
les
es
inc
scas
dec
mov
xchg
in
sub
aas
sti
dec
clc
arpl
test
push
notl
jl
testl
mov
sub
xchg
aas
mov
addr16
enter
inc
add
mov
mov
sub
imul
in
cmpb
sahf
test
pop
push
sub
jmp
sub
mov
decb
les
jb
aas
shrl
jmp
iret
add
and
fwait
push
rol
mov
xchg
jg
dec
mov
imul
ss
jmp
insl
andl
into
inc
ljmp
outsl
jae
push
rcl
insb
dec
pop
pop
dec
inc
lea
jno
das
jmp
or
push
test
ret
aaa
push
sub
lret
jae
mov
into
lcall
mov
sbb
cmc
xchg
xor
cmp
insl
lcall
cmp
stos
add
mov
pop
in
movsl
shrl
mov
sub
push
dec
lea
adc
scas
mov
fsub
sysenter
xor
pusha
mov
or
pop
add
aaa
or
mov
pop
jb
push
rcll
mov
lds
pusha
jmp
stc
push
data16
clc
sub
adc
sar
add
jle
mov
sub
push
cltd
inc
xchg
shl
pushf
cmp
sub
jo
or
cmp
mov
cltd
xchg
fstpt
iret
inc
mov
popa
mov
shr
ret
outsl
xor
sub
mov
and
or
repnz
xorl
push
fs
rorb
or
mov
xor
jle
in
repz
fiadds
sbb
bound
adc
incl
xchg
mov
jp
mov
lock
fists
sub
sub
xchg
mov
push
mov
mov
cld
ljmp
mov
pop
es
lds
sub
ljmp
pop
cmp
jbe
lds
push
subb
aaa
aaa
fs
pop
push
popf
mov
and
aaa
mov
leave
ss
imul
pop
xchg
add
pop
adc
and
mov
pop
mov
scas
jns
repz
inc
rcr
jo
ret
pop
in
cmc
out
sbb
inc
and
and
jno
or
mov
sub
popf
enter
aas
mov
adc
and
push
insb
jo
dec
dec
pop
fisttpl
jae
mov
movsl
into
jo
jnp
push
ret
nop
cmp
je
jno
xchg
in
pop
inc
dec
lods
call
mov
pop
dec
nop
bnd
mov
aad
sub
inc
sub
data16
sarl
xor
jle
push
subl
and
lret
repnz
or
lock
adc
add
sub
mov
or
loop
loope
mov
jmp
pop
movsb
cmpsl
aaa
pop
sarl
sti
mov
and
call
cltd
lret
cmp
adc
lret
inc
cli
push
repz
andl
cmpsb
cmp
int3
xchg
ss
lea
add
mov
rcll
mov
cmp
jle
fstpt
jle
pop
stc
dec
cwtl
and
lods
rcll
sarb
xor
pop
movsl
jp
dec
and
retw
dec
mov
xorb
rcrl
lock
cld
add
mov
dec
add
ss
jmp
mov
lods
int3
push
inc
sbb
ret
jnp
cs
cltd
mov
mov
jae
or
xchg
icebp
sbb
pop
scas
out
data16
jle
testb
fisubs
xchg
fdivrl
and
xchg
mov
test
dec
mov
ss
jp
aaa
sbb
lret
xor
sub
scas
in
and
roll
push
popf
cmp
sbb
in
ret
fdivr
in
jne
fidivrs
es
cmpsb
repnz
xlat
repnz
fbld
pop
xchg
add
leave
popf
loop
ret
mov
lea
xor
and
es
pop
popa
adc
jmp
jbe
mov
xor
hlt
fidivrs
xor
mov
push
cmp
sbb
jmp
fs
sarb
aam
xchg
test
add
aad
iret
xchg
adc
aaa
enter
push
or
pop
xor
mov
pop
ret
in
add
pusha
pop
add
movsl
rcl
xchg
xor
cmp
cmpsl
inc
inc
mov
pop
jp
inc
dec
adc
sub
dec
popf
push
inc
mov
adc
cmp
push
ljmp
or
add
inc
pop
cmpsl
mov
dec
mov
dec
loope
pop
or
sbb
aad
shl
adc
clc
popf
and
and
lods
sbb
out
clc
push
xor
jae
xchg
in
in
mov
jecxz
into
dec
dec
pop
sbb
bound
scas
mov
test
xor
jbe
popf
repz
in
and
int
xor
adc
cmp
pop
mov
sbb
push
push
and
pusha
sub
xchg
fidivs
mov
out
frstor
mov
xchg
dec
inc
sahf
cs
pop
je
pop
fimuls
lods
out
arpl
lahf
orb
fpatan
sub
push
bswap
call
lret
mov
popf
jne
mov
decb
push
cmp
mov
pop
xchg
shll
mov
cmc
pop
mov
inc
cwtl
add
and
sbb
adc
and
lods
and
or
xchg
xorb
test
mov
cmpl
testl
push
dec
xchg
fstps
mov
pop
imul
sahf
stos
and
or
scas
loope
fisubl
fsubrl
add
inc
pop
ret
sub
into
lret
xor
mov
lock
sarl
mov
lock
in
mov
mov
or
leave
std
addr16
xchg
pop
cmp
jmp
outsl
arpl
sub
sbb
loopne
mov
stos
mov
int3
vmovlps
aas
test
and
mov
xchg
call
push
add
outsl
and
insb
dec
fcomps
jl
sbb
xchg
pop
hlt
pop
daa
pop
ljmp
aad
xchg
aad
jno
add
loop
ljmp
push
and
imul
sbb
mov
pop
pop
mov
rclb
xchg
ja
adc
sbb
in
test
cmpsl
enter
movsl
and
mov
sbb
pop
xlat
inc
je
mov
cmc
sti
push
adc
les
jnp
mov
jae
mov
mov
rcrb
jle
fnstenv
xlat
insl
add
xor
rclw
sbb
or
cmp
bound
jecxz
mov
gs
mov
loopne
xchg
pop
adc
pop
scas
xchg
sub
push
shrl
push
test
push
sahf
test
fildl
and
fldcw
mov
pushf
repz
add
out
into
fs
sti
dec
add
repnz
mov
loop
cwtl
jmp
mov
jle
hlt
add
int
ss
fs
imul
add
xor
cmp
inc
ret
ljmp
pop
sbb
and
aaa
and
mov
icebp
sbb
sub
sub
mov
in
mov
pusha
cmp
mov
inc
int3
cltd
inc
mov
push
xchg
and
adc
mov
mov
add
mov
xor
mov
sub
cmp
fdiv
xchg
insl
cmp
jle
fistps
into
add
stos
pop
stc
outsb
adc
out
xor
add
pop
test
scas
lret
xchg
and
mov
data16
andl
or
loopne
mov
dec
jb
push
stos
jmp
cmp
idivb
pop
pop
xor
or
cmp
arpl
push
pop
sub
push
rorl
add
mov
xchg
jns
push
xorl
xchg
aam
das
mov
mov
and
xchg
fdiv
jnp
or
mov
mov
pmulhuw
mov
cmp
movsb
push
inc
sbb
or
fildll
dec
sbb
push
cmc
or
fldt
adc
testl
rcrl
enter
dec
xchg
jl
or
inc
pop
adc
es
pop
and
mov
call
cmp
das
scas
or
aad
sub
outsl
pop
sub
ds
xchg
mov
fbstp
cwtl
test
push
or
lds
mov
or
out
loop
aaa
cwtl
inc
cmc
fwait
hlt
add
rorb
addb
imul
movl
jne
and
out
fsubl
or
mov
or
mov
gs
mov
loopne
aaa
sub
add
mov
cmpsl
push
xchg
push
int3
aas
mov
sub
push
inc
sbb
or
xor
sbb
jg
mov
shl
sbb
out
mov
xor
repnz
lock
dec
sub
in
insl
fisttps
data16
js
in
gs
jp
and
mov
push
jmp
lahf
jae
testb
test
ljmp
in
mov
add
push
sahf
jp
stc
sar
mov
lock
inc
xor
mov
fisttpll
pop
loope
lret
add
lock
adc
xor
push
movsl
cmc
out
pop
push
cwtl
pop
or
aam
sbb
lret
cli
int
dec
and
cmc
adc
in
pop
mov
inc
jo
into
fstpl
or
mov
add
sbb
repz
cltd
adc
and
dec
imul
mov
mov
push
mov
divb
jb
pushf
lock
aas
insl
std
loop
cmp
mov
mov
stos
pop
push
and
inc
or
stos
mov
jge
push
or
rorb
xchg
movsb
sahf
inc
xchg
add
in
xor
clc
push
daa
imul
or
dec
mov
lcall
xchg
inc
jl
in
sbb
cmp
adc
lcall
mov
sub
int3
cmp
xor
movb
cld
aad
and
lock
mov
cmp
out
or
aad
pop
pushl
ret
or
xchg
sar
sub
nop
clc
stos
lds
xor
mov
add
mov
cs
cwtl
add
popf
sbbb
adc
popa
mov
jp
push
jbe
ror
movsb
leave
or
das
jne
add
jmp
mov
test
lods
jle
adc
pop
roll
sbb
jns
inc
adc
push
cmp
out
jo
clc
lods
cmp
xlat
or
movsb
xchg
movsl
subb
aaa
inc
xchg
adc
mov
push
out
sbb
insl
add
ss
push
dec
jns
popa
in
adc
es
js
in
pop
mov
cltd
in
loopne
inc
or
inc
jg
inc
pop
icebp
into
adcb
mov
ret
lcall
sub
dec
cld
aas
outsb
sub
call
out
aam
pop
add
and
mov
fnstsw
inc
mov
fs
cmpsb
xor
divl
add
rcrl
push
dec
jg
dec
mov
das
inc
leave
jns
es
into
mov
add
repz
inc
push
gs
pop
mov
scas
int3
ds
mov
fdivrl
stos
test
out
cwtl
test
imul
pusha
pop
cmp
add
dec
loopne
cs
xchg
mov
push
nop
mov
in
int3
xor
adc
aad
jne
test
dec
addr16
lods
xchg
insb
pop
cli
je
out
dec
in
push
lret
fwait
cmp
pop
xchg
cli
mov
stc
pop
cmp
cmp
out
push
push
or
sbb
adc
inc
sti
xchg
js
fstpl
sub
and
sbb
pop
cs
push
rcrl
sbb
lock
stos
adc
push
bnd
mov
shll
lea
cld
or
sub
enter
sbbb
jo
les
or
in
cwtl
pause
add
fcmovnbe
test
test
sub
loope
out
or
mov
test
add
ds
scas
mov
sbb
mov
in
jae
movsb
mov
pop
inc
or
mov
inc
xlat
adc
pop
mov
add
mov
xor
icebp
mov
outsb
mov
fsubrl
jo
mov
push
nopl
push
leave
inc
pop
pop
push
fisubs
std
and
add
pop
gs
jae
leave
stc
mov
pop
addr16
daa
add
xchg
ja
andb
mov
ret
xor
std
iret
xchg
lds
sbb
fdivs
frstor
loopne
dec
dec
cltd
mov
xchg
sub
inc
paddusb
inc
pop
das
cli
sbb
or
sahf
or
test
xor
inc
mov
add
icebp
fbstp
cmpsb
fs
adc
cltd
aaa
pop
inc
dec
cmpsl
aas
mov
mov
addr16
fldenv
jecxz
push
xlat
loopne
lahf
jle
mov
push
inc
mov
jae
sahf
das
stos
je
popa
mov
int3
adc
lret
pop
test
sub
sub
mov
aam
addr16
out
sbb
psubd
testb
filds
repnz
fdivs
into
xor
rcll
sti
imul
stos
ror
out
sarb
push
cmp
idivl
xlat
pushf
xor
sbbb
loop
dec
fidivs
inc
pop
out
mov
incl
xchg
in
lcall
and
adc
xor
add
sbb
adc
jge
mov
test
xchg
enter
popf
call
mov
pop
mov
inc
mov
and
push
and
sbb
hlt
repnz
add
clc
test
lods
hlt
mov
mov
xchg
xlat
mov
adc
mov
sub
sbb
lock
insl
cld
fs
stos
inc
dec
mov
scas
cmp
aam
pop
jbe
jae
call
cmpb
sarb
pop
and
jns
pushf
push
aas
cmpsl
insb
mov
jg
jmp
hlt
arpl
add
and
outsb
mov
push
mov
lock
dec
jb
pop
jno
stos
jecxz
add
xlat
imul
pop
xor
xor
in
cmp
stc
pop
sub
test
and
pop
add
int3
mov
fwait
in
enter
cmpsb
out
jbe
dec
mov
pop
fldl
lds
dec
cmp
and
gs
cmp
out
sub
jecxz
sub
xor
dec
jle
push
je
mov
xchg
aas
shrl
cmp
stos
or
into
movsb
add
mov
cltd
cmpsl
mov
adc
popf
loop
fadds
sbb
pop
mov
push
into
out
out
hlt
push
inc
mov
and
sbb
lcall
fisttpl
subb
adc
fisubrs
add
imull
stos
fxrstor
lret
adc
jb
in
adc
je
xor
adc
je
dec
loopne
or
jecxz
mov
jno
mov
and
cmp
mov
inc
mov
shll
fisubs
add
mov
dec
and
call
dec
mov
insb
ja
add
out
lock
inc
imul
or
pop
arpl
stos
adc
pop
adc
negl
rclb
pop
xor
sbb
pop
int3
inc
adc
xchg
rcrb
jno
lret
adc
dec
lds
pusha
mov
or
fdiv
fwait
adcb
sbbb
sbb
out
repz
or
or
xor
jmp
mov
mov
jmp
mov
xchg
sti
sarb
or
sub
lds
aas
mov
adc
in
push
or
dec
loop
sbb
out
rolb
dec
loope
roll
pop
cmp
and
into
test
mov
add
mov
addr16
fwait
sub
outsb
adc
cwtl
dec
or
inc
cmp
stos
flds
loope
test
neg
out
xor
xchg
je
stc
xchg
popf
xchg
rcrb
pop
ss
mov
inc
shrl
or
fsts
out
sarl
js
mov
fisttpl
or
push
sub
lahf
sahf
xchg
les
pushf
xchg
jns
pop
scas
notb
mov
mov
fwait
inc
add
imul
lret
sbb
fldl
and
loop
sti
xchg
mov
sub
insb
out
jp
adc
lds
cmp
in
push
dec
decb
bound
sbb
mov
push
mov
rcll
cltd
imul
mov
out
and
pushf
xchg
push
iret
and
or
aaa
cmp
mov
add
xor
loopne
add
xor
lods
mov
mov
scas
les
or
insl
leave
mov
xchg
cld
xor
sbb
dec
orb
int3
cli
insl
outsb
ss
pop
inc
in
cmpb
xchg
xchg
cwtl
jno
aad
cs
lds
sub
aas
rolb
cli
mov
shll
and
and
std
push
lret
pusha
or
ret
adc
mov
ficoml
int3
and
inc
mov
std
sbb
sub
inc
xor
mov
aad
outsb
or
shrd
ret
outsl
lods
into
mov
test
xchg
cmc
xor
mov
lret
jae
and
push
push
sub
scas
movsl
pop
mov
pop
imul
ja
pop
and
jae
pop
xor
cmp
lock
mov
and
jmp
adcb
pop
push
insl
repnz
lock
cs
loopne
mov
jl
mov
jge
fisubs
mov
jecxz
xchg
push
cmp
lock
shll
rclb
jl
call
sub
lahf
sub
leave
jne
sbb
cmp
jmp
fsubrl
sbb
das
jle
andb
enter
testb
in
pop
adc
push
aam
popf
xlat
push
dec
cmp
pushf
jbe
insl
cld
sar
aas
cmp
arpl
sbb
loop
push
lea
mov
test
xchg
popf
out
enter
mov
inc
aaa
les
cld
mov
add
test
ds
jb
cmp
int
test
arpl
mov
add
push
popf
xchg
in
aaa
xchg
mov
addr16
jmp
and
pop
repnz
pop
dec
push
pand
in
and
call
ja
int
movsb
and
decb
xchg
outsb
clc
cli
dec
scas
pusha
bnd
negl
test
int3
in
dec
loope
jnp
sti
mov
mov
or
sbb
jle
daa
and
xchg
add
test
loopne
call
fistpl
or
sub
jg
mov
sbb
cmpsl
push
sti
jecxz
cmp
icebp
stos
jb
xchg
pop
faddl
dec
xorb
and
inc
out
ljmp
fdivrs
fsqrt
or
pop
cltd
lock
jmp
mov
fldl2t
xchg
and
pop
lret
cs
adc
aaa
popa
int3
sbb
sub
sarl
out
inc
adc
fwait
ret
pop
dec
ret
into
jp
push
mov
popa
lock
cmp
push
push
jmp
push
js
out
xor
call
cmp
scas
lret
xcrypt-cbc
cmpsl
pop
insb
test
add
notl
call
push
aas
push
pop
daa
jp
dec
andps
and
dec
xchg
mov
push
mov
or
jmp
lods
cmp
xor
rorl
cltd
cmc
sahf
stc
out
sub
jbe
shll
jp
inc
imul
cli
cmp
pop
scas
adc
sbb
rorl
insb
rcl
je
enter
add
inc
adc
pop
push
sub
inc
inc
cltd
xchg
mov
jo
scas
cli
jle
push
add
push
or
andl
inc
xchg
orb
xchg
push
pop
repz
stos
int3
pop
into
lcall
adc
sbb
push
mov
mov
jmp
or
xchg
jge
mov
ds
mov
inc
std
cmpsl
and
push
inc
insb
sub
mov
push
aad
jns
cs
sub
into
stos
or
add
imul
loop
cmp
scas
and
add
mov
and
inc
pushf
cmpl
cmpsl
cmpsl
ret
imul
out
inc
mov
xchg
pop
icebp
fisubs
js
sub
ret
mov
pushf
orl
adc
sbb
dec
dec
iret
sar
fisttpll
pusha
shrl
cmpsl
push
test
orl
pop
in
jge
ja
add
addb
xchg
loopne
dec
cmp
jmp
js
add
ret
test
or
mov
pop
cmp
jb
notb
push
inc
dec
or
imull
push
cmp
les
lahf
nop
xchg
xchg
mov
add
sbb
sub
icebp
imul
movsl
push
pushf
push
in
and
mov
shl
cmpsl
xchg
mov
orl
adc
jbe
push
mov
push
mov
scas
xchg
and
pop
cltd
mov
mov
pop
mov
jns
or
jmp
shll
ret
sbb
pop
sbbb
mov
cmp
outsl
jo
pop
jo
add
or
subl
dec
pop
push
push
mov
stc
xchg
loope
pop
sbbl
gs
test
pop
cli
ret
pusha
pop
aad
inc
adc
inc
lods
lods
sub
sahf
dec
ret
mov
pop
mov
inc
sbb
fwait
test
add
mov
or
mov
out
pop
pushf
sbb
ret
cmpsl
mov
mov
mov
idivb
js
mov
mov
ret
shrl
jbe
shrb
or
push
vrsqrtps
scas
sbb
xchg
add
pop
jb
test
push
jl
in
aas
in
or
jnp
addl
imul
stc
xor
cwtl
outsb
sub
dec
inc
push
mov
push
push
cmpsl
jae
dec
mov
push
mov
imul
les
not
ja
cmp
mov
aad
es
pushl
hlt
lock
jbe
xchg
push
xchg
xlat
push
and
sarl
sbb
jge
and
and
mov
push
bnd
fsubs
jae
std
inc
pop
push
adc
test
cli
in
add
push
jle
xchg
cmc
jbe
aad
out
dec
mov
addr16
adc
bound
sbb
pop
jmp
push
adc
xchg
es
mov
pop
aaa
shll
pop
imul
inc
pop
push
dec
lds
mov
faddl
shlb
mov
decb
lock
jae
jg
popf
test
dec
cmp
push
add
icebp
lods
push
lods
in
xchg
aas
out
pop
in
xor
cmp
jp
arpl
jecxz
push
cmc
adc
jl
int
int3
push
adc
xchg
push
fmuls
mov
stos
adc
add
cmp
push
inc
enter
jecxz
and
adc
movsb
popf
mov
out
or
imul
popa
sub
sub
cltd
or
xchg
subl
sar
ljmp
push
sbb
cmp
andb
ja
test
mov
fdivr
je
jle
aas
push
out
pop
add
shlb
inc
jmp
inc
lahf
sub
or
pcmpeqw
jmp
cmp
push
dec
xchg
pop
insb
and
dec
mov
loope
and
test
pop
iret
cli
xchg
mov
sub
jbe
cwtl
lret
aaa
ljmp
es
jae
push
fbstp
jge
cs
in
icebp
pop
sub
inc
mov
insl
test
xor
imul
cmpsl
ret
mov
in
mov
ds
push
push
outsl
jge
sub
scas
stos
jae
add
jo
sahf
dec
fcoms
popa
pop
arpl
push
fildl
rorb
dec
cwtl
fldl
xor
add
xor
and
sbbb
adc
fnstcw
jecxz
pushf
and
ss
sti
sbb
dec
ljmp
hlt
icebp
mov
inc
mov
sahf
popa
push
mov
fldcw
stos
lret
out
lds
mov
add
add
divb
mov
mov
stos
fisubs
mov
lds
in
and
int3
add
in
pop
pop
shrb
mov
fbld
test
out
stc
shrb
cmp
push
mov
sahf
mov
mov
push
or
out
xchg
clc
sub
xlat
xorb
push
sbb
int
imul
pop
and
pushf
shlb
xor
adc
loop
stc
sbb
out
lods
cmpl
fidivrl
dec
inc
fiadds
xchg
sub
scas
jmp
addr16
jne
jne
shlb
push
mov
aas
add
mov
and
pop
scas
xchg
push
lods
fsts
in
xor
faddl
and
cmp
jge
ret
and
lret
into
enter
pop
out
orl
cmp
push
or
lods
imull
dec
pusha
push
jecxz
mov
fists
xchg
or
fbstp
and
mov
ret
out
into
mov
push
fsubl
xor
jecxz
rcr
inc
int
arpl
sbb
inc
cwtl
push
fmull
push
lock
sub
in
lcall
stos
push
ljmp
pusha
pop
sbbb
push
sbb
xor
cmp
int3
xor
mov
push
loopne
sbb
cltd
inc
xchg
jle
cmpsb
xchg
pop
popf
loop
push
cmp
cli
aam
aam
das
in
sub
mov
sub
mov
je
pop
fs
jb
xor
shrb
sbb
pop
xor
cltd
jge
jmp
jmp
inc
out
sub
inc
push
sti
jge
into
xor
cmc
adc
push
sub
mov
or
loope
stos
rcll
pop
out
frstpm(287
xchg
and
arpl
std
aaa
or
ficompl
inc
clc
dec
xchg
out
insb
jo
mov
mov
jb
leave
cmp
shlb
xor
mov
or
mov
sbb
mov
push
pop
cs
fidivrs
aad
fsubrl
mov
mov
mov
hlt
lds
hlt
and
or
gs
jns
xchg
xor
sub
or
inc
cmp
int
lds
inc
push
inc
je
in
lea
notb
push
imul
push
add
lcall
test
mov
push
inc
scas
sub
cmpsb
addr16
mov
jb
or
lods
es
pop
push
sbbl
cmp
mov
jecxz
jl
inc
xchg
repz
je
fsts
mov
pop
movsb
aad
sbb
and
add
inc
jbe
lcall
mov
lcall
or
dec
dec
lret
sub
push
cmpsb
push
test
jo
push
inc
xor
insb
gs
lods
and
es
jns
or
loop
dec
decl
or
outsb
adc
hlt
pop
mov
leave
sbb
in
sbb
imul
stos
adc
mov
or
clc
fwait
xor
mov
negb
cmp
leave
es
adc
lods
cmp
dec
inc
cmp
lret
sub
mov
cli
mov
jo
fs
clc
lock
iret
cmpl
jae
aaa
aad
add
jo
adc
aaa
jns
sbb
jmp
clc
cmc
add
mov
int3
bound
mov
jg
aaa
out
lcall
push
inc
test
push
leave
sbb
inc
stos
rclb
lods
scas
or
push
cmp
or
pop
loope
cmp
mov
int3
xchg
pop
jmp
dec
xor
pop
shll
or
gs
inc
mov
xor
cmp
push
push
ret
jg
outsb
sub
dec
fisubrl
repnz
testl
dec
add
mov
dec
or
mov
inc
push
add
xchg
popa
mov
xor
dec
jbe
jns
sub
aam
ret
fisttpl
dec
in
ss
push
or
clc
jmp
push
mov
sbb
in
fxch
in
sbb
xchg
and
test
fiaddl
das
pusha
dec
cld
add
dec
and
adc
jb
int
xor
mov
enter
imul
jl
mov
push
push
sbb
subl
daa
aaa
xchg
int
cmovnp
fisubs
xor
pop
insb
loopne
in
mov
loop,pt
mov
into
push
andl
mov
scas
cmpb
in
cmpsb
imul
mov
scas
jae
mov
mov
aas
pop
inc
dec
sbb
add
cmpsl
sub
pop
outsl
jle
dec
cmp
xor
in
nop
lock
xor
in
loope
pop
adc
leave
pop
xchg
sbb
pop
adc
sahf
orl
mov
jno
fcmovbe
cli
lea
aas
cmp
adc
pop
xchg
hlt
fstps
mov
and
xchg
mov
pop
xchg
dec
mov
aam
jne
pop
sahf
leave
inc
cmp
inc
mov
insb
ja
and
mov
add
cmpsl
or
loope
je
mov
xor
push
lret
mov
in
subb
pop
dec
icebp
je
sti
fs
xor
es
sub
mov
inc
hlt
out
rclb
hlt
sbb
push
int3
jp
cli
cmpsl
gs
sub
pop
cmp
xchg
xor
dec
pop
out
pop
pop
xchg
sbb
lods
stc
inc
ret
outsb
lcall
and
xor
add
icebp
arpl
xorb
or
out
dec
mov
not
xor
sar
jne
fistpll
mov
aaa
add
push
pop
adc
mov
xchg
cltd
push
lahf
out
xor
xor
shrl
cli
in
rol
mov
add
lock
sbb
scas
mov
popf
adc
cmp
jo
xchg
pop
mov
jmp
rorb
insl
dec
and
xor
lock
fisttps
scas
xor
lock
xor
lea
sbb
xchg
shrb
sub
adc
cmp
mov
shl
xor
in
pop
divl
fisubrs
jnp
stc
lahf
in
lock
cli
push
xor
cmp
add
and
notl
lahf
pushf
xchg
mov
mov
pop
xchg
ret
add
mov
outsb
xor
mov
cs
popa
jns
jmp
out
cli
push
mov
rorb
shrl
xchg
cmp
nop
scas
stos
movsl
xor
or
fwait
sbb
or
pop
fst
push
push
inc
mov
ljmp
aad
push
or
mov
sarl
cmp
ljmp
outsl
subb
mov
std
add
or
mov
push
adc
test
shrb
fstl
pushf
dec
shl
inc
mov
or
outsb
cltd
dec
inc
xchg
xchg
test
pop
fsts
les
call
pop
pop
inc
xchg
mov
das
loop
sub
xor
clc
int
cmp
bnd
push
lock
pop
mov
je
xor
in
and
outsl
fsubl
push
add
add
sbb
insl
loop
pop
mov
adc
mov
repnz
cmpsb
inc
push
test
sti
mov
cmp
aas
mov
xor
cmpl
mov
mov
xor
push
cli
out
test
in
aad
imul
xchg
int3
xor
int
push
fisttps
arpl
imul
push
sbb
aas
out
daa
jp
pop
push
scas
rclb
sti
push
cmp
movsb
jae
bound
mov
pop
xchg
add
cli
nop
mull
inc
mov
push
xor
cmpsb
lods
arpl
mov
adc
xchg
out
out
and
and
out
push
test
cmpsl
xchg
mov
cmpb
xchg
jle
test
jne
dec
aaa
shl
int3
push
mov
in
jnp
and
xchg
into
mov
xchg
in
cmp
cmp
xchg
mov
scas
or
sub
pushf
or
dec
sub
fucomip
adc
test
shll
xchg
aas
push
lret
cmp
int3
push
ret
mov
jp
jp
aam
push
xlat
stos
mov
lcall
je
push
inc
jg
out
ds
test
inc
call
or
and
xorb
sbb
and
jecxz
in
sub
jp
bound
mov
sbb
xor
and
sbb
in
rol
push
push
sub
movsb
mov
dec
imul
cmp
leave
pop
jecxz
dec
test
add
sub
filds
sbb
jmp
push
mov
orl
push
jle
mov
imul
xchg
or
mov
and
sub
fnsave
ja
imul
hlt
ja
sahf
jae
out
test
mov
mov
ds
fbstp
add
mov
push
add
icebp
cld
dec
ret
aas
ds
mov
test
mov
into
outsl
add
insb
lahf
sti
aam
jb
and
mov
mov
xlat
and
sbb
mov
push
in
in
xchg
in
es
mull
mov
mov
jmp
out
dec
adc
cmp
mov
or
and
pop
lea
sub
or
adc
adc
mov
movsl
push
mov
xchg
movd
dec
insl
lret
shrb
loop
cmp
hlt
loop
xor
fisubrl
push
cmpl
sub
aad
add
mov
stos
add
fxch
ret
movsb
mov
jne
or
nop
and
hlt
test
insb
sub
leave
bnd
mov
cmp
enter
jns
outsl
or
in
loop
sbb
or
lods
stos
mov
addr16
mov
add
add
cmp
xchg
int
in
jnp
outsb
mov
adcb
pushf
in
or
cvtdq2ps
negl
fnstsw
rcll
jl
mov
inc
fcoms
fldcw
jae
stos
cli
cld
jle
fs
inc
pop
push
scas
aas
or
jg
ds
push
cld
jae
dec
cmpsb
mov
out
and
jp
sub
jns
ss
stos
add
jbe
jecxz
dec
push
push
sbb
pop
inc
xorb
sub
out
nop
dec
test
scas
pop
loopne
inc
xchg
scas
fistpl
ja
in
push
adc
jl
push
leave
xchg
jle
sbb
and
addr16
clc
ds
push
sbbb
addr16
and
js
xchg
mov
jg
dec
test
shlb
lret
push
stos
mov
pop
test
dec
negb
cld
les
ret
nop
pop
shrb
push
dec
or
test
dec
push
shl
call
cmp
cmc
int3
loope
jge
call
cs
jg
loopne
scas
mov
dec
test
adc
fistpl
bnd
add
pop
push
add
dec
int3
icebp
aad
push
jae
sarb
xchg
jmp
scas
cmc
lahf
test
dec
fisubrs
shrl
pop
push
pop
ljmp
cwtl
enter
pop
out
rcrb
inc
cmpsb
cmp
or
cmpxchg8b
int3
mov
jp,pn
into
out
mov
add
rorb
pop
push
inc
and
cli
pop
pop
mov
imul
mov
mov
sub
arpl
clc
fwait
scas
ss
jbe
lods
mov
jae
push
and
cmc
cmp
popa
test
js
mul
jp
push
gs
aaa
jns
ss
loopne
sahf
aam
ljmp
mov
pop
adc
sub
and
and
mov
dec
dec
adc
add
xor
xchg
cmpsl
aas
pop
cltd
xchg
cmp
arpl
lret
popl
imul
daa
int3
sbb
xchg
pop
mov
fsubl
jge
mov
fs
jge
dec
dec
mov
mov
cld
fcmove
jae
or
enter
insb
mov
lods
mov
xor
jge
sbb
call
cltd
fcmovnu
loope
inc
out
ja
or
and
jae
adc
mov
sbb
cmc
inc
xor
loop
cmp
ret
frstor
mov
xchg
in
lcall
jo
mov
and
jmp
xchg
fisubl
or
rcl
stos
or
adc
loopne
std
and
and
sub
pop
clc
or
jo
xchg
ss
mov
push
jmp
jecxz
mov
mov
cltd
movsl
mov
not
jl
jno
sahf
notl
insl
lods
fwait
cltd
pop
in
add
add
call
bound
sbb
insb
jns
cmp
inc
cmp
and
ret
inc
mov
call
cwtl
xchg
pop
jno
cld
into
lock
lcall
mov
xor
mov
cmpsb
and
sub
sbb
pop
iret
shlb
jg
sub
fisubrl
js
or
push
push
fcomp
stos
or
popa
popa
sub
mov
out
jecxz
loope
sub
mov
add
or
xchg
push
pop
popf
loop
out
pop
and
pusha
inc
pop
aas
jge
pop
xchg
inc
pop
cltd
adc
mov
out
daa
call
dec
mov
sub
mov
icebp
dec
cmp
sub
test
adc
ljmp
scas
mull
cld
cld
push
push
xlat
mulb
push
adc
rolb
xor
adc
xor
add
aas
scas
jne
pop
mov
in
adc
sbb
xor
mov
fistpll
sbb
mov
mov
adc
negl
loope
lods
jge
or
inc
mov
pop
push
cltd
and
repz
clc
clc
iret
inc
mov
xchg
aaa
mov
aaa
jmp
jg
les
jns
push
mov
push
test
jb
fdivl
sbb
add
mov
pusha
xchg
mov
add
xchg
repz
push
xchg
adc
movsl
iret
jno
icebp
push
rol
pop
ffreep
add
dec
ss
mov
pop
mov
xchg
shlb
cli
jo
test
shll
sbb
cmpsl
pop
imul
jp
ja
jp
out
sub
xchg
mov
push
lea
je
inc
and
lahf
sbb
lret
ficoms
push
mov
test
out
hlt
ret
push
dec
scas
add
add
cwtl
cwtl
sub
iret
inc
movsl
mov
add
cmpsb
and
and
outsb
xchg
roll
div
ss
jbe
mov
push
jge
jo
addr16
pop
pop
and
push
and
jg
lea
dec
cmc
dec
add
or
xchg
adc
loope
dec
mov
filds
stos
mov
out
and
push
stos
mov
and
add
mov
lods
dec
loopne
push
inc
jno
in
das
rcl
xor
int3
jecxz
jb
bound
push
in
pusha
dec
or
dec
xchg
add
mov
clc
cmp
scas
xchg
hlt
inc
jae
mov
push
shlb
xchg
imul
inc
sub
jle
test
push
rcl
iret
xchg
cwtl
push
gs
cmp
das
cmpsb
inc
imul
lret
idivl
shl
aad
lcall
sbbb
sbb
or
or
sbb
inc
imul
mov
std
xchg
aas
icebp
push
sub
daa
adc
or
cmp
stc
ret
adc
jbe
mov
or
sbb
cmp
cmpsl
outsl
insb
add
mov
push
jns
imul
call
inc
jmp
pop
dec
shlb
cltd
pusha
bnd
add
push
sti
clc
sub
dec
inc
inc
test
sarl
dec
mov
add
push
push
ja
sarl
push
dec
lods
add
int3
push
test
xchg
in
inc
sahf
scas
and
lock
lret
sub
and
aam
loopne
ds
cmp
scas
adc
jno
call
dec
dec
int3
pop
imul
gs
rcrl
dec
mov
sti
push
shlb
xlat
outsl
dec
mov
fistps
popf
cli
scas
addb
call
ljmp
fsubs
test
es
fcoml
sbb
xor
jb
stos
mov
jb
out
xchg
mov
lcall
loopne
stos
cld
cmp
xchg
in
dec
hlt
aas
push
or
dec
call
push
mov
push
dec
and
lret
cmp
ret
push
mov
push
fiaddl
add
xchg
cmp
mov
fisubrs
nop
jno
cmp
aaa
pop
ret
imul
orb
out
addr16
jle
or
push
mov
rcrl
jbe
cwtl
adc
js
mov
cmpsl
outsb
pop
inc
icebp
jae
adc
es
mov
mov
dec
jle
movsb
out
mov
pop
lea
test
adc
mov
imul
mov
xlat
add
inc
jle
mov
popf
test
mov
rorb
inc
jae,pn
and
dec
lahf
cmp
gs
out
mov
jg
ljmp
jae
mov
cld
mov
push
movsb
fiadds
sub
ljmp
jns
ja
pusha
shlb
rcrb
mov
fisubl
inc
sub
push
daa
pop
or
xor
sti
jg
jnp
pusha
push
cld
adc
push
ss
jne
jno
nop
and
hlt
sahf
dec
mov
jmp
mov
cmp
aaa
sbb
push
dec
push
pop
push
adc
shr
insl
ret
hlt
jecxz
push
sub
xchg
scas
insl
cmp
clc
sub
mov
and
jns
jle
jg
int3
adc
dec
loopne
dec
sub
bound
icebp
jae
jmp
push
imul
push
movsl
in
subl
les
push
or
dec
aam
orl
cwtl
fisttps
jb
lock
xchg
add
fisubrs
cmp
loope
movsb
lods
jle
insl
das
xchg
ljmp
sub
mov
mov
call
pop
sahf
jbe
roll
pop
dec
aas
outsl
fisubrs
insb
mov
cmpsl
iret
or
dec
mov
lret
mov
adc
enter
cmpsb
push
popf
pushf
add
ret
insl
xlat
mov
arpl
xor
inc
pop
ss
adc
mov
clc
mov
jnp
scas
inc
fisubl
mov
lock
stc
sbb
mov
int
push
mov
mov
xchg
jle
jns
xchg
jae
sti
push
pushf
inc
nop
mov
cmc
stos
adc
fcmovnu
popa
popa
sub
push
les
jbe
xchg
in
dec
js
dec
nop
push
ss
cwtl
fbld
stc
push
adc
imul
xor
dec
xchg
cmc
or
and
add
jp
mov
dec
inc
adc
push
stos
ja
fildll
xor
or
inc
push
scas
jl
test
push
and
mov
lret
pop
subb
dec
inc
call
or
repnz
je
mov
inc
andb
stc
xorl
adc
push
lea
enter
cwtl
leave
leave
insl
rol
arpl
mov
ficomps
daa
roll
fdivrs
sbb
sbb
xchg
test
and
inc
inc
int3
jge
iret
jno
das
mov
jge
scas
adc
scas
inc
test
cltd
cmc
inc
xor
mov
mov
shlb
ja
adc
xor
inc
mov
sub
sbb
lahf
orb
dec
mov
pop
sub
and
in
test
dec
out
repnz
fisubs
add
pop
inc
es
adc
rol
lds
or
loope
les
push
inc
add
jg
outsl
jge
xor
adc
dec
mov
mov
aad
icebp
pop
mov
inc
inc
loopne
ds
lahf
ficoms
notl
insl
stos
mov
mov
and
jo
jnp
pop
sbb
je
mov
push
jmp
mov
ss
push
pop
xor
sbb
lea
xchg
inc
aas
gs
cld
stos
inc
jg
sub
cmpsb
sub
ja
cld
clc
lahf
mov
lds
cmpsl
out
push
pushf
mov
cmp
add
lret
and
pop
and
mov
negb
xchg
jg
test
js
call
nop
mov
pop
insl
cmp
adc
mov
notb
cld
cmc
mov
loope
inc
xlat
fstpl
pop
ja
mov
stc
aaa
xlat
pop
scas
pop
jne
rclb
inc
inc
mov
dec
je
and
adc
movsb
ss
aaa
and
mov
add
or
insl
dec
push
sbb
daa
dec
push
js
pop
push
ret
inc
mov
mov
inc
test
fmuls
sub
lret
sbb
ret
jns
push
or
mov
f2xm1
mov
xor
aam
pop
stc
mov
fistpl
jno
stos
add
cltd
lret
inc
or
fdivl
stc
inc
sahf
out
ret
inc
outsb
jmp
mov
sti
fnsave
lcall
in
push
jne
inc
jbe
jmp
cmp
ja
mov
loope
inc
movsb
iret
mov
xchg
adc
insl
mulb
pop
xchg
adc
ficoml
or
add
cltd
pop
mov
pop
notb
aad
pop
inc
popl
filds
jmp
shlb
push
in
mov
add
dec
xchg
and
imul
mov
xchg
mov
stos
fmulp
shll
repz
cwtl
xchg
movsb
pop
adc
dec
ja
jle
loop
dec
aas
jmp
jns
aad
sub
xor
in
jmp
xchg
inc
out
xchg
push
lret
sub
aaa
leave
inc
js
out
push
movsl
mov
leave
sub
imul
cmpl
push
into
popf
cmp
and
scas
pop
or
aaa
push
cmp
cmp
inc
lds
pop
pop
pop
stos
jp
insl
ja
mov
ret
mov
adc
xor
js
bound
push
das
aas
push
je
dec
jno
sub
xchg
imul
push
insl
mov
arpl
dec
clc
adc
jae
dec
stc
mov
dec
cmp
leave
jbe
inc
call
push
lods
push
xchg
lcall
imul
add
jo
movl
mov
fidivl
sahf
lds
push
cmc
sti
pushf
pop
xor
mov
pop
jns
lret
mov
jle
or
iret
iret
aaa
cmpl
dec
mov
lret
xchg
fildll
cmpsb
sbb
stos
loopne
sub
push
bound
out
jle
cmpsl
mov
cmp
nop
mov
mov
push
pop
jle
in
xor
push
std
mov
push
dec
loope
sbb
nop
pop
xchg
loop
loop
xchg
js
or
icebp
sbb
mov
stc
aad
adc
fcmovnb
cs
mov
fmul
fidivrs
arpl
mov
rcrl
push
js
stos
mov
pavgw
inc
shr
pop
mov
arpl
in
push
outsl
lret
pop
shl
mov
push
loop
add
data16
shlb
lret
fsubrs
mov
repz
and
jge
fimuls
fsubrs
lds
xor
xlat
pushf
adc
je
mov
or
jle
mov
dec
aad
cmpsl
aas
xchg
push
inc
mov
cltd
push
mov
es
mov
aas
gs
scas
dec
pusha
pop
cmp
enter
jo
stos
repz
push
jmp
sarb
push
push
mov
xchg
mov
inc
xorl
ljmp
xchg
or
sub
sub
int3
sub
clc
divl
dec
inc
fs
adc
cmp
push
ret
sbb
outsl
cmp
sub
ss
ja
outsb
mov
push
imul
shlb
mov
cmpsl
and
add
sbb
pop
out
xchg
sub
les
loop
ja
cmp
mov
ja
jo
xchg
sub
scas
test
js
into
dec
xor
lods
hlt
lock
cmpsl
push
cmpsl
xor
fwait
cli
leave
ret
lcall
int3
xor
pop
inc
cmp
add
ss
in
pushf
sbb
and
add
cmp
mov
add
gs
pop
test
xor
imul
repz
call
dec
push
pop
fcmovu
mov
adc
pushw
push
jge
cmp
lods
adc
pop
stos
aas
xchg
fcoml
inc
aaa
ljmp
test
lds
movsl
bound
xchg
inc
inc
data16
mov
mov
sbb
sbb
lcall
loope
adc
or
xchg
xor
fadds
incb
fwait
fwait
popa
mov
mov
jge
mov
or
shll
in
push
in
cmp
out
stos
adc
cmp
outsb
enter
popa
ret
popf
out
sub
sub
icebp
pop
cmpsb
push
mov
loopw
std
push
hlt
lea
or
rolb
hlt
test
jo
shrl
mov
and
pmuludq
pop
push
scas
icebp
sub
nop
call
mov
push
je
js
push
mov
rorb
aaa
inc
outsb
push
mov
sub
aaa
sbb
mov
outsb
js
ss
xchg
xchg
lea
cmp
adc
mov
ret
sbb
dec
adc
mov
xchg
stc
add
outsb
mov
jle
imul
out
push
int
nop
push
pop
inc
add
sub
insl
jmp
jnp
and
push
pop
cmp
stc
nop
xor
fwait
dec
ljmp
or
push
jg
and
les
mov
int3
stos
push
jl
test
cmp
fsubrl
cmpsl
xchg
popa
hlt
jo
jns
mov
in
xchg
add
cmpsl
rorl
xchg
sbb
rorb
stos
and
sbb
xchg
push
sbb
movsb
js
rorb
ret
movsl
andl
shl
sub
popf
cmc
and
adc
ret
xchg
test
stos
xchg
iret
nop
lahf
cmpsb
jne
adc
inc
es
xor
fcomps
shrb
or
mov
in
movl
xor
jnp
incb
xor
enter
stc
enter
and
shrb
in
roll
orl
out
add
dec
loop
repz
pop
push
inc
fistps
push
rorb
ja
mov
mov
lds
out
rcl
out
out
add
je
dec
cmc
repz
ljmp
adc
enter
push
mov
sbb
dec
inc
sbb
cmp
in
fsub
adc
cs
in
push
lret
cltd
addr16
test
mov
mov
bound
aam
or
mov
sub
sarl
adcl
cmp
pop
push
sbb
cmc
popa
pop
outsb
sbb
clc
bnd
mov
jl
inc
pusha
mov
dec
and
push
jae
push
mov
pop
mov
xchg
xchg
cmp
mov
inc
xlat
add
cmp
and
arpl
lods
js
inc
pminsw
mov
cmp
daa
hlt
fmuls
cmp
xor
lret
xor
pop
outsl
std
imul
cmp
and
dec
pop
mov
sub
es
push
or
int3
or
clc
divl
fstps
add
sub
xor
pushf
push
xchg
lods
notb
sbb
xchg
hlt
data16
loope
pandn
outsl
das
jecxz
xor
mov
pop
jle
mov
push
cmpb
sub
sahf
jg
pop
in
mov
cmpsb
push
jbe
or
stos
push
xchg
in
icebp
pop
addr16
mov
sub
push
dec
mov
mov
out
xchg
push
lods
mov
sbb
jb
ret
push
cmp
xor
mov
aaa
pop
pop
lods
dec
dec
xor
aad
sub
cmpsl
push
mov
xor
xchg
push
rcl
mov
add
push
pop
jp
xor
pop
sub
add
repz
adcb
cmpb
inc
sub
inc
jecxz
and
loopne
movsl
jae
jl
inc
ficomps
xchg
jl
leave
cmp
xor
stc
dec
gs
loop
jmp
mov
mov
mov
cli
and
fisubl
rcrl
cmp
in
adc
jg
jl
roll
adc
xchg
push
mov
jbe
in
scas
add
stos
scas
andb
mov
popf
xchg
mov
testl
adc
jp
push
or
mov
mov
mov
outsl
xchg
mov
or
jb
pop
or
inc
xchg
shl
or
dec
int
or
cmc
mov
or
cmp
inc
sbb
loope
xor
mov
pop
bnd
outsb
xchg
fwait
and
push
mov
ds
lea
inc
or
jbe
push
dec
aam
pop
mov
jl
jecxz
imul
mov
sub
push
movsl
dec
pop
and
popf
sahf
xchg
rol
fimull
mov
adc
xor
cmpsb
mov
incl
cmc
fidivrs
and
out
fistps
pop
mov
jg
add
mov
pop
adc
lea
test
f2xm1
movsl
mov
dec
sub
mov
loopne
jle
sbb
jbe
cmpsl
testb
arpl
decl
inc
adc
call
push
mov
xchg
cmp
pop
jnp
inc
mov
je
cmp
mov
inc
stos
mov
push
sti
fdivs
test
and
lds
fisubrs
xchg
pop
fldl
ds
hlt
dec
lea
or
fwait
vpminuw
push
inc
and
dec
xchg
mov
inc
sbb
mov
push
jmp
inc
sbb
add
or
dec
leave
clc
add
mov
cmp
in
add
mov
cmp
or
push
loop
aam
nop
outsl
jle
popl
movsl
xchg
sub
mov
and
or
mov
inc
data16
pop
add
rcl
pop
or
lods
iret
push
test
add
push
push
icebp
mov
sarl
lds
movsl
pop
or
mov
add
dec
jmp
pop
scas
dec
mov
jne
lret
gs
pop
and
rcrb
pushf
adc
jae
mov
fdivrl
mov
subps
xchg
mov
jae
insl
mov
inc
add
cmp
xchg
sub
pusha
or
fildll
pop
fistps
fists
sbb
sub
adc
and
inc
sbbl
sbb
pop
mov
dec
leave
push
adc
or
dec
mov
add
leave
nop
in
int3
addr16
fsubs
ljmp
jb
jmp
movsl
or
xlat
pop
or
push
jb
push
adc
jmp
jmp
fisubrl
repnz
sti
stos
les
rol
sbb
and
cmp
pop
inc
shll
movsl
sub
ss
loope
and
inc
cmp
dec
int3
jo
mov
sbb
add
popf
call
mov
js
fnsave
push
dec
rorl
fdivs
fwait
jno,pt
shll
lret
repz
sub
cld
adc
into
jbe
add
sbb
cli
es
dec
cwtl
and
cltd
int3
aam
adc
and
mov
lds
sarl
insl
sbb
push
ja
push
shlb
sbb
std
pop
mov
fmul
jne
and
mov
popa
inc
cmp
push
xor
mov
mov
jno
xlat
data16
cmpsb
mov
scas
push
hlt
pusha
xadd
repz
out
lods
or
jg
mov
inc
gs
or
lods
push
push
sbb
cwtl
mov
push
xchg
test
mov
into
jl
repz
je
sahf
repnz
cmp
and
int3
fsubs
pop
in
xor
add
sbb
lret
clc
fdivl
rolb
paddsb
dec
mov
out
subl
ja
ljmp
fstl
out
mov
xchg
jge,pn
arpl
aas
dec
push
pop
and
popf
test
outsl
mov
addr16
pop
add
mov
push
jnp
mov
dec
add
addr16
adc
push
or
mov
es
stc
push
in
xor
es
xlat
icebp
outsl
xchg
dec
mov
inc
mov
jp
add
cmp
push
add
dec
sbb
sbb
inc
sub
add
mov
lret
inc
cmp
mov
lcall
loope
mov
pop
pop
adc
or
sub
test
int3
pusha
adc
dec
mov
out
xor
popa
test
into
jmp
dec
push
aas
out
mov
mov
push
minps
mov
mov
adc
mov
mov
scas
clc
push
out
fdiv
addr16
enter
push
sbb
insl
lds
in
and
in
mov
jnp
rclb
sbb
dec
data16
sbb
sbb
jmp
jg
orb
aas
mov
sub
sbb
mov
mov
cs
dec
lock
nop
pop
roll
and
sti
mov
popl
data16
bnd
addb
sub
mov
or
adcb
inc
inc
daa
adc
jp
pop
mov
ja
stos
insb
pop
cs
mov
movsb
sbb
movups
test
rcrl
mov
xchg
popf
mov
fildll
in
and
jno
jl
lcall
hlt
or
dec
es
aas
out
faddl
sbb
jmp
inc
pop
mov
xlat
subb
ja
push
loopne
adc
adc
sub
push
xlat
jb
mov
aaa
jnp
sbb
inc
xor
pop
outsl
cmp
push
xor
mov
out
ret
insb
fwait
in
add
popf
xchg
sarb
inc
mov
and
enter
sbb
mov
jbe
loope
xor
daa
mov
jmp
stos
sub
pop
add
or
outsl
and
xor
push
inc
or
xchg
mov
xchg
ret
mov
leave
cmc
and
mov
xchg
into
xor
and
mov
mov
jl
dec
sbb
loop
mov
jle
pop
xchg
adc
inc
fcmovu
mov
mov
add
jne
lods
inc
into
dec
lods
in
or
scas
ret
xchg
insb
sub
lock
xchg
cmp
push
or
test
dec
jg
lret
xchg
les
push
xorl
cmp
inc
mov
gs
fsubrs
jo
fnstsw
fisttpll
cmp
jg
loop
sbb
imul
fisttps
icebp
xor
inc
popa
sbb
or
cmp
adc
xchg
push
loopne
cmc
mov
add
inc
mov
repz
lcall
insb
pusha
sub
dec
out
jne
sbb
mov
inc
jp
dec
mov
mov
test
ss
aam
stc
cmp
push
cmp
xchg
rorb
les
lock
mov
or
sub
aas
rorl
int
and
sbb
push
into
or
cwtl
mov
inc
cwtl
lahf
mov
test
mov
mov
ljmp
fists
loopne
enter
cmpsl
jae
add
pushf
mov
sahf
lods
and
ss
xor
and
movsb
mov
cmp
dec
xlat
sub
pop
mov
arpl
xlat
mov
lock
repz
lahf
dec
out
or
nop
add
lds
xchg
dec
lret
and
jmpw
or
jo
mov
xor
cmp
in
inc
sub
test
shl
xor
adc
scas
shrb
inc
nop
scas
xchg
inc
xor
cltd
ja
rcll
xchg
lret
fs
and
lods
add
orb
paddsb
call
das
in
mov
adcl
loope
mov
push
sbb
int
hlt
mov
pop
adc
enter
cmc
and
add
out
jge
sbb
fmulp
test
and
mov
or
daa
jb
fiaddl
or
shlb
fmuls
jle
jns
and
fsubrl
cmp
aad
sahf
aaa
mov
mov
jo
icebp
nop
cld
in
lods
dec
daa
pushf
adc
inc
sbb
mov
lcall
xchg
repnz
pop
les
pop
add
inc
popa
mov
add
mov
mov
scas
ds
lea
test
or
jmp
push
mov
cmpsl
mov
and
add
xor
dec
repnz
das
int
cmp
cmc
cli
pmaxub
sti
aam
sti
mov
stos
mov
loopne
sbb
adc
jmp
mov
pop
daa
pcmpeqb
inc
sti
mov
and
lds
test
mov
jno
adc
in
dec
test
into
dec
into
dec
mov
faddl
bound
in
inc
lret
aas
or
rcr
push
cltd
xchg
repnz
gs
fs
adc
adc
dec
fdivrs
pop
pop
cmp
or
fucomp
dec
jne
jle
push
pop
adc
in
lahf
fdivrl
les
push
mov
into
mov
shl
enter
ret
std
sub
inc
jecxz
add
jo
leavew
out
push
cmc
je
mov
lea
mov
mov
cmpl
mov
jns
add
addr16
scas
sbb
push
push
mov
ror
repnz
sub
in
loop
dec
orl
sub
push
xchg
dec
and
es
shrb
cmp
bound
cmpsl
push
xlat
sbb
adcl
jg
push
ss
pop
sahf
in
ljmp
js
leave
add
ja
mov
iret
dec
ss
imulb
mov
mov
jge
jns
push
mov
mov
lock
mov
sti
repz
test
cmp
or
sarb
out
rorb
jmp
lret
pop
rolb
sarl
or
inc
inc
test
orb
inc
mov
mov
mov
dec
sbb
call
push
xchg
shlb
in
pop
jb
sbbl
cs
mov
or
xchg
adcl
fbstp
lds
push
and
mov
jle
data16
fs
jb
pop
clc
mov
loop
dec
jnp
push
lret
xchg
insl
int
inc
sub
les
in
stos
int3
or
lods
add
cmp
fidivrl
xchg
jo
dec
xchg
aam
and
shrb
dec
cmpb
lcall
sbb
lahf
bnd
mov
push
or
jge
aam
gs
aad
lods
mov
jmp
inc
xor
jp
push
pop
das
add
push
fsub
sahf
xchg
push
sbbl
mov
sbb
mov
xchg
and
sub
inc
iret
aad
jns
in
test
clc
movsb
mov
cmp
nop
repz
in
sbb
add
popa
sbb
sbb
push
popa
ret
ret
or
sbb
pop
pop
popf
xchg
sbb
inc
push
test
repnz
clc
mov
lods
fstl
insl
popf
sar
lods
daa
shrb
pop
cmp
inc
ja
lods
cltd
fnstenv
jmp
into
push
insb
xchg
roll
fs
mov
bound
jb
in
dec
ja
and
inc
lret
cmp
fwait
imul
insl
xchg
jbe
fsubl
icebp
inc
push
dec
jne
cmp
jbe
sbb
in
flds
adc
jmp
xchg
into
dec
imul
xchg
mov
cld
aaa
mov
xchg
pop
daa
xchg
dec
mov
add
mov
xor
insl
xchg
jno
jnp
and
jp
and
ljmp
rolb
lock
popa
adc
das
jno
push
xchg
sbb
jb
shrb
nop
cmp
xchg
mov
adc
sub
pop
cmp
sbb
fimuls
sti
test
and
dec
imul
adc
ss
ja
sar
dec
not
std
mov
orb
add
and
stos
pop
xchg
xor
popa
lcall
or
push
mov
and
push
sub
in
xor
sub
shll
repz
ss
push
sbb
and
cmpsb
popf
orl
mov
cs
movntps
lds
mov
mov
ret
mov
inc
pusha
leave
test
mov
mov
sub
insl
insb
cmp
stos
cmpsl
inc
pop
pop
jmp
adc
imul
sbb
imul
cli
and
loopne
jno
addr16
sub
jnp
push
js
imul
pop
inc
mov
popf
cmp
idivl
mov
cwtl
lcall
cmp
push
shrb
imul
das
sbb
xor
pshufw
iret
sub
push
push
sub
or
in
mov
imul
into
in
ror
imul
add
lahf
sbb
dec
outsl
inc
imul
sbb
jecxz
mov
dec
fldenv
into
inc
cmp
cli
mov
pop
fwait
cmp
mov
aam
pop
ljmp
pop
frstor
or
mov
aas
ficompl
mov
dec
push
inc
stos
inc
and
stos
dec
faddl
jg
stos
aam
das
cmc
enter
jmp
jo
xor
into
push
fwait
add
push
mov
cmpsb
or
test
cld
xchg
add
xchg
mov
ror
pushf
pop
insl
cmp
xlat
and
inc
cli
xor
mov
dec
cmp
sarl
cmp
popa
popf
jns
inc
test
std
push
mov
jmp
stos
das
loope
idivl
pushf
jl
mov
or
inc
jae
jbe
jnp
push
fs
push
sub
cmp
sbb
inc
push
inc
pop
hlt
add
jnp
push
ja
jnp
mov
push
inc
xchg
inc
mov
repz
mov
popa
data16
mov
fsubrs
test
mov
xor
xor
adc
rorl
dec
or
jge
xor
mov
dec
pop
xchg
jae
adc
xor
xor
pop
add
mov
push
aad
sbb
scas
cmc
dec
sarb
imulb
sub
das
pop
push
iret
pushf
cmp
inc
cmp
mov
cmp
adc
pop
imul
pop
mov
in
fs
aad
cmpsl
mov
mov
mov
dec
out
sbb
or
jl
mov
repz
pop
jns
stos
sti
loop
icebp
in
adc
fcoms
sbb
into
icebp
mov
sbb
cmc
push
jne
mov
roll
in
push
hlt
out
add
mov
push
push
sarb
add
xchg
hlt
pusha
xor
leave
push
xlat
adcb
sub
scas
xchg
out
and
outsb
mov
repnz
mov
sti
test
xchg
cmp
lret
jmp
adc
push
shl
mov
in
ljmp
jl
jp
scas
jnp
cmpsl
mov
mov
jns
add
outsl
jo
shl
stos
scas
adc
xchg
push
pop
sbb
cmp
lods
mov
and
dec
inc
push
fcmovb
sbb
xlat
and
xchg
nop
sarl
cmp
fsubs
lahf
test
frstor
bound
icebp
test
pushf
call
xchg
arpl
adc
sbb
xchg
inc
enter
mulps
test
ljmp
std
dec
or
loope
daa
cli
in
jmp
data16
sub
push
or
test
mov
push
push
nop
dec
mov
xchg
and
sar
adc
cltd
ret
push
push
adc
fsubr
add
ja
or
test
dec
je
xor
push
mov
and
jae
lret
test
mov
test
repnz
mov
imul
in
bound
out
scas
lahf
adc
addr16
mov
xor
pop
shll
aam
jp
lods
fsubrl
or
hlt
pop
fsub
mov
sub
sub
cli
xor
lahf
adc
mov
out
test
pop
add
mov
imul
je
pop
xchg
scas
adc
pop
jo
adc
jle
add
sub
sti
mov
loop
fwait
sub
in
fadds
cmc
jl
dec
xor
scas
lock
sub
out
test
in
push
in
xchg
sub
and
andnps
stos
jae
cmpl
icebp
sbb
xor
fidivs
cmpsb
cmp
aas
orl
aam
in
mov
lds
jge
rcrl
push
rcrl
inc
pop
stos
pop
xor
jno
jg
push
scas
mov
pop
sbb
das
addr16
inc
xchg
dec
lret
xchg
je
pop
push
xor
adc
outsb
push
jnp
mov
xor
dec
cmpl
ficoms
and
dec
push
lods
xchg
out
jnp
lock
dec
cmpsl
loop
sbb
stos
inc
cmpsl
sbb
test
enter
inc
loope
enter
mov
push
inc
sub
out
in
fcmovne
xchg
stos
sti
pop
jge
les
pop
or
call
ljmp
ja
out
cmc
pminsw
pusha
add
jl
adc
lea
dec
mov
xchg
mov
pusha
mov
or
popl
adc
pop
repz
cmp
pusha
cmp
xor
movsb
add
popf
pop
xor
cmpsb
jne
push
inc
aad
add
ror
out
ljmp
mov
lods
cmp
mov
pop
insb
cmc
addb
xor
aam
test
adc
dec
mov
inc
cmp
cltd
adc
out
jmp
mov
xor
lret
arpl
sub
imul
out
or
in
pop
in
adc
pushf
rolb
push
lock
sub
bound
imulb
insl
jl
add
repz
inc
mov
sahf
cmp
push
adc
and
sub
push
xchg
mov
divb
test
xor
aam
xchg
cmp
int3
dec
sbb
xchg
repnz
loopne
push
cmc
loope
ss
sbb
jle
jg
mov
xchg
sbb
ljmp
popa
push
or
add
sbb
inc
mov
test
es
or
add
or
bnd
icebp
cmp
mov
icebp
out
es
sbb
lds
pop
enter
push
xchg
jo
pop
popa
mov
lcall
xchg
mov
mov
and
pusha
jecxz
jmp
adc
sbb
pop
sub
pusha
mov
in
int
aaa
loope
shl
fldl
push
cs
xchg
push
lods
sub
jnp
or
daa
ficompl
cmpsb
rclb
mov
div
or
into
sub
mov
lret
leave
xor
lea
xor
mov
test
inc
cmp
cmpsl
push
mov
into
mov
xchg
inc
cwtl
push
clc
movl
ret
into
jle
daa
xlat
stos
push
jmp
sbbb
mov
inc
jbe
cltd
repnz
cmc
sbb
adc
adc
loopne
mov
imul
subl
in
add
inc
popf
xor
mov
push
cmc
push
dec
lret
jp
insb
rorb
repz
pop
jns
fs
add
clc
or
leave
mov
lret
cmp
push
inc
push
cmpsl
lods
mov
dec
fdivp
dec
adc
xor
push
jp
mov
xlat
xchg
ja
test
cwtl
mov
mov
mov
jle
out
sub
lcall
mov
push
xchg
inc
dec
cli
inc
call
out
shrl
mov
inc
div
sub
lret
lea
in
data16
jle
xchg
lds
fwait
out
add
clc
add
push
jl
fcomps
add
mov
pop
sbb
sbb
sbb
xchg
jbe
mov
push
mov
mov
adc
insl
jge
lea
and
push
jg
je
imull
pop
pusha
sar
cmc
xchg
xchg
push
fdivrs
fsubrl
jl
scas
les
movsl
ljmp
stc
arpl
push
jmp
push
jmp
ret
popf
pop
sahf
add
lds
mov
and
mov
mov
jl
cmp
pop
sbb
imul
sub
addr16
bound
pop
loopne
jno
loopne
sbb
into
scas
dec
mov
mov
mov
repnz
aaa
subb
aas
jno
out
dec
into
push
inc
aas
lock
out
inc
fs
and
nop
add
in
cmp
lods
stc
and
pop
orb
shld
lcall
rorb
insb
arpl
mov
out
jo
ds
data16
aas
fldenv
dec
pop
into
add
adc
cmp
inc
push
xchg
faddp
mov
imul
jae
jae
fbstp
cmp
sbb
ljmp
movb
movsl
shrl
notl
add
ret
mov
rorb
imul
jmp
inc
sub
out
push
jnp
ret
loop
lcall
lea
test
jno
out
mov
pusha
movsl
aas
mov
int3
bound
xchg
in
hlt
sub
es
xchg
xor
sub
dec
mov
sbb
push
cmp
push
pop
enter
mov
rcl
lods
lret
sbb
mov
lcall
ficoms
mov
stos
dec
or
mov
outsl
mulb
xorl
jle
sub
movsl
cwtl
and
xlat
mov
popf
fnsave
inc
scas
lahf
cmp
fwait
xchg
jp
dec
and
iret
cmp
mov
std
cwtl
dec
inc
sub
aam
push
fidivrl
jmp
pop
loop
xor
imul
ret
ss
and
dec
ret
cmpsb
jge
dec
daa
mov
jg
dec
mov
mov
imul
lret
bound
pop
popf
adc
fdecstp
jns
cmp
lods
push
push
loop
cwtl
aas
repnz
shrb
inc
dec
leave
addr16
sbb
cmp
jmp
xchg
mov
shr
loop
push
cld
into
jecxz
mov
mov
popa
push
lea
push
es
push
in
and
movsl
cmpsb
push
loopw
sbb
out
pop
push
sub
orb
imul
rcr
in
add
jmp
add
shl
mov
imul
lret
or
ja
fimuls
int
cld
pop
adc
outsb
clc
inc
je
js
mov
mov
js
and
push
sub
jp
pushf
ret
push
test
mov
mov
and
scas
orl
adc
pushl
xor
jae
dec
xor
xchg
cld
cmpsb
sbb
arpl
xor
jmp
repnz
cmp
pop
push
jbe
pusha
fstpt
add
inc
nop
xchg
int3
mov
xor
dec
es
ljmp
ja
jmp
pusha
lret
rcrb
outsb
notl
call
aam
cmpsl
mov
sbb
orl
imul
lahf
mulb
lcall
pop
sub
add
pop
ss
or
fisttpll
mov
xor
fsubs
in
popa
and
pop
cmp
sub
fucom
fdivr
inc
mov
cmp
inc
das
cli
ds
cmp
cwtl
mov
mov
js
test
xchg
ljmp
dec
repz
aas
inc
std
mov
lret
test
lret
or
and
xchg
sahf
push
cmp
es
pop
pop
sarb
dec
repnz
aas
xchg
lods
push
pop
dec
cmpsl
dec
insl
dec
mov
scas
or
aam
add
aas
inc
outsb
pusha
adc
lock
fwait
sbb
stc
int
cmove
jbe
rcrl
lret
push
cmp
mov
xor
xorb
xchg
inc
fsubrp
sbb
test
ss
xor
pop
jl
rclb
jno
inc
aam
daa
ss
push
cltd
fwait
mov
inc
stos
mov
sbb
aad
jmp
mov
add
adc
mov
orb
mov
scas
and
mov
add
inc
lock
adc
mov
cwtl
hlt
add
lds
lea
xchg
gs
sbb
dec
aas
sarb
lret
push
js
inc
stc
outsb
leave
bound
stos
add
ret
cmc
mov
lods
adc
fidivl
inc
outsb
cmpsb
into
sub
adc
dec
sbbl
insl
add
insl
in
stc
adc
sub
int3
sbb
ja
mov
pop
pop
fnstcw
out
inc
out
pop
jg
xchg
push
test
leave
cmc
xchg
pop
bound
nop
stos
rolb
sub
mov
sarb
or
addr16
jb
inc
or
pop
incl
pop
hlt
stos
mov
push
cmc
fs
inc
outsb
add
insb
sbb
adc
scas
adc
int3
push
mov
xchg
mov
addr16
xchg
push
dec
mov
out
dec
sbb
mov
jo
fcomps
sbb
inc
push
or
pop
mov
push
inc
push
adcl
sbb
xlat
cltd
jle
in
movsb
in
push
cmp
push
ljmp
ret
fs
fnstenv
or
xor
xchg
jle
jnp
cs
pop
sub
mov
inc
rolb
js
adc
mov
cli
sub
push
mov
cmp
test
mov
mov
push
sbb
mov
sub
insb
add
dec
aad
inc
popa
lcall
lahf
fld
pxor
std
mov
lock
jne
jno
xchg
insb
out
xor
icebp
jmp
inc
mov
adcl
jp
call
push
xchg
rcl
jmp
cmp
fildl
push
push
xor
sub
push
pop
add
fidivrs
popl
xchg
mov
and
sbb
add
enter
inc
push
sub
push
insl
bound
daa
xor
add
xchg
in
sahf
subb
rcrb
push
xor
xor
jp
loopne
dec
in
or
sbbb
cwtl
icebp
push
stc
cld
sbb
out
adc
sub
inc
popa
out
cltd
add
bsr
into
imul
dec
adc
pop
loope
pop
push
cmpsb
xlat
movsb
sbb
dec
xchg
add
xchg
add
popa
into
adc
xor
icebp
jl
mov
jbe
ret
or
push
int
adcb
lock
lret
xor
sub
pop
add
sub
jg
push
fwait
lea
leave
mov
xchg
inc
movsb
mov
ror
mov
fdivs
ja
jge
jl
lods
mov
push
fsubl
inc
dec
mov
pop
dec
in
dec
movsb
and
dec
and
shr
fs
rcr
push
ficoml
dec
xchg
mov
sub
mov
rep
outsb
push
arpl
imul
mov
pop
jae
leave
push
sub
orb
data16
pop
pop
push
fistps
mov
inc
sbb
jns
mov
inc
push
xchg
and
mov
ds
xchg
ret
pmaxsw
mov
fists
jmp
jns
mov
not
fwait
and
mov
cmp
push
rolb
gs
mov
rol
ficoms
adc
inc
lret
jle
sahf
cwtl
negl
scas
push
dec
imul
cmpb
cmc
push
out
lcall
pop
and
sub
mov
cmpsb
mov
xchg
lds
mov
lahf
andb
call
push
dec
jbe
ljmp
xchg
jo
jae
xor
sub
repnz
repz
ret
insb
sbb
cmpsl
lahf
fimuls
stos
mov
mov
add
ds
mov
mov
sub
jp
call
inc
push
sub
fidivrs
lcall
lcall
mov
in
data16
and
mov
je
lcall
mov
stc
sub
jne
cltd
add
cmovo
mov
add
and
add
dec
jge
dec
or
lahf
mul
clc
gs
lods
outsl
enter
mov
loopne
fwait
inc
mov
mov
popa
inc
jne
mov
push
mov
jge
dec
repz
out
add
inc
add
lea
enter
inc
out
cmc
data16
xor
jg
adc
mov
inc
inc
out
call
adc
jne
neg
cmp
xchg
mov
lret
adc
fwait
je
xchg
pop
int
leave
or
mov
cli
jge
sub
inc
sbb
xchg
orb
les
sub
insb
mov
or
and
ljmp
data16
out
push
sbb
inc
lods
repnz
xor
jbe
sbb
xor
sbb
dec
cli
jbe
mov
repnz
or
int
sub
fists
mov
movsl
mov
mov
sub
xchg
pop
repz
or
clc
pop
jg
inc
mov
mov
sbb
mov
fdivrs
shll
push
loop
mov
sbb
sbb
pushf
stos
popa
lods
cmp
mov
ficoml
add
js
sbbb
sbb
sub
leave
in
lods
sti
aam
inc
dec
xor
add
jb
aaa
xorl
iret
sub
add
inc
pop
jbe
inc
lret
insl
ss
ret
loop
int3
mov
sbb
push
cltd
outsb
call
icebp
mov
dec
cmp
push
mov
mov
sub
or
dec
adc
push
pop
jl
aam
mov
pop
cmp
mov
sub
xor
aam
xor
leave
cli
jnp
and
out
inc
push
dec
or
pop
imul
mov
adc
mov
xor
daa
fldcw
pop
cmp
cmp
popa
inc
lret
scas
pop
jmp
xor
sahf
pop
mov
jge
mov
js
ljmp
insl
mov
stos
dec
insb
ret
xchg
mov
fdivrl
xchg
xchg
sarb
adc
pop
filds
adc
int
or
dec
test
shlb
mov
fwait
ret
enter
pop
cmp
pop
cwtl
lods
pusha
ret
cmp
cltd
mov
rcr
int3
es
pushf
cmc
xlat
bnd
mov
push
or
aad
inc
mov
sub
clc
xchg
sbb
mov
mov
lcall
shll
sahf
pushf
scas
jge
cs
inc
movsl
int3
dec
mov
or
ret
pop
sarl
mov
inc
ss
pop
xchg
enter
mov
jge
dec
dec
xor
push
jle
ficoml
push
jo
lcall
and
repz
mov
loop
dec
into
mov
ja
into
lods
jnp
push
into
xor
dec
mov
mov
adc
mov
jbe
push
ljmp
push
push
xchg
shlb
das
shlb
push
imul
cmpl
test
inc
mov
dec
xor
addr16
adc
cmp
out
push
jle
ret
sub
mov
out
add
xor
ja
out
push
inc
std
enter
or
inc
lock
cmp
add
mov
mov
mov
dec
outsb
int3
pop
out
mov
rcll
aad
sub
cvtps2pi
fsts
pop
push
paddd
mov
rcrw
mov
fs
cmp
add
inc
fwait
subw
repz
sbb
xor
dec
adc
mov
adc
adc
xlat
mov
btsl
repnz
cmpsl
mov
fdivrs
cli
cld
inc
xchg
adc
jne
mov
push
gs
push
lret
jns
push
loop
jne
loop
in
adc
pop
loope
mov
cli
sbb
sarl
loopne
cld
jb
fidivrl
and
adc
mov
loop
aam
imul
mov
sbb
lods
lea
cwtl
inc
rcrb
int3
mov
lahf
dec
lret
cmc
flds
pop
xor
popa
fmulp
sub
xchg
fcomp
jne
jle
ret
and
pop
xchg
aam
push
js
cmp
insb
sub
cmp
leave
push
cmp
movsl
sub
movsb
cs
popf
dec
movsl
lea
inc
mov
adcb
int3
and
push
shll
popf
push
dec
xchg
xor
sbb
pushf
mov
sbb
jmp
pushf
mov
jl,pn
shrb
sti
push
jbe
inc
mov
cmp
in
mov
std
js
jp
mov
idivl
shll
lcall
stc
jo
mov
fmuls
sbb
pop
lods
pop
push
and
insw
sub
xchg
and
and
stos
arpl
aam
mov
dec
cmp
insb
jo
mov
inc
aas
pop
arpl
rclb
test
mov
ljmp
sub
xlat
xor
movsl
ret
sub
inc
outsb
or
sub
and
sub
mov
fs
js
arpl
lahf
jns
cmp
xchg
jmp
loop
inc
mov
add
mov
fildl
rep
bound
ret
out
mov
inc
pop
movsl
lea
insl
imul
adc
push
loop
seto
outsb
cmp
subl
dec
mov
out
adc
mov
dec
mov
inc
and
or
sub
sahf
mov
add
xor
out
mov
or
ret
idivl
and
movsb
int
and
andl
xor
les
in
adc
push
pop
gs
push
inc
jl
jo
mov
lahf
sbb
or
ds
push
jg
mov
adc
xchg
add
sub
jb
mov
orb
cmpsb
add
jle
test
out
pop
dec
jl
cmp
sbb
loopne
jae
jbe
setae
scas
inc
cld
lahf
lret
inc
dec
xor
xor
nop
outsb
mov
bound
inc
lcall
leavew
mov
int3
mov
scas
lret
xor
sbb
and
fmull
test
ds
aam
mov
insb
jp
push
sti
mov
mov
dec
mov
popf
fwait
test
cmc
pop
xchg
hlt
lea
ss
or
insl
loope
cmp
and
mov
push
in
nop
inc
sub
stc
add
jns
mov
add
sub
pusha
out
sub
in
xchg
out
xor
inc
hlt
lods
add
sub
ja
in
cmp
or
repnz
push
pop
repz
movsl
jbe
imul
xor
pop
mov
push
adc
sbb
xor
push
jle
xor
or
std
xor
mov
push
int
sbbb
xorb
cli
lret
lea
jp
pop
movsb
fldt
call
jmp
adc
mov
jle
daa
adc
mov
mov
scas
adc
lahf
pop
push
jno
enter
xor
cmp
sti
and
aaa
popa
jns
jnp
imulb
pop
adc
jne
push
sbb
lea
roll
sbb
clc
ljmp
push
andl
pop
pop
lret
dec
or
movsb
jmp
jbe
sti
arpl
loope
sub
imul
xchg
scas
mov
xor
or
add
outsl
into
jecxz
xchg
push
adc
xchg
dec
scas
scas
xchg
test
cmp
sbb
mov
mov
addl
and
jno
in
ficoml
push
push
cmp
jae
insb
lcall
pop
mov
sub
xchg
xlat
nop
lcall
mov
adc
push
xor
andl
test
lods
jp
sbb
inc
stos
add
or
popf
not
cld
xorl
cmp
sub
cmpsb
mov
sub
lea
fisttpll
repnz
mov
lea
notl
test
lahf
sar
mov
jns
das
mov
mov
sbb
js
fwait
gs
or
test
xchg
lds
jl
cmp
cli
sbb
pusha
or
lock
xor
inc
les
dec
mov
mov
sbb
pop
xor
fbstp
fs
sbb
adc
mov
jae
jo
push
add
add
aad
mov
inc
sbb
fisubl
cmp
jl
int3
sbb
fwait
adc
adc
lcall
or
sub
sub
push
mov
push
fstps
and
clc
cmpl
addb
pop
xchg
xor
test
jp
ret
xchg
cmp
movsb
cmpl
fistps
jnp
push
push
cmc
inc
int
cmp
cltd
test
xchg
sbb
in
sbb
cmp
sbb
ret
jg
cmpsl
bound
xor
push
mov
adc
rcrb
pop
psubq
scas
lock
xchg
jne
jns
in
insl
pusha
andb
or
mov
movsl
mov
imul
cmpsl
mov
adc
adc
or
repnz
push
insb
dec
jg
or
xor
ds
into
je
sub
mov
mov
outsl
or
mov
stos
xorb
je
mov
rcrb
cwtl
cmp
cmp
dec
cmpsl
inc
jo
lock
xchg
int
dec
mov
mov
mov
out
outsl
xchg
jecxz
mov
add
lcall
lahf
xchg
aam
repz
gs
ret
xor
sub
aad
ret
div
inc
incb
aad
repnz
out
mov
outsl
xor
push
ljmp
mov
lcall
cltd
fisubrl
bswap
jg
xchg
mov
ficomps
cltd
push
aad
inc
leave
dec
cli
inc
adc
out
loopne
pop
pushf
ds
lods
xchg
pusha
xchg
or
je
mov
pop
and
rolb
inc
mov
mov
add
ja
enter
aad
adc
inc
in
sub
mov
jns
lods
cmp
in
fcmovb
sub
adc
push
cwtl
cmp
jnp
cmc
push
inc
mov
imul
or
fisttps
into
testl
sbb
fdivr
loop
sti
dec
adc
fnsave
pop
iret
xchg
addl
sub
pop
mov
mov
loop
dec
pop
mulb
popf
mov
mov
xchg
jge
out
cltd
pop
pop
mov
mov
punpckhwd
add
sub
outsl
nop
push
fstps
mov
repnz
and
xchg
sub
mov
jp
lahf
cmpsb
insb
adc
cmp
repnz
adc
movsl
pop
imul
mov
sub
lahf
sub
in
add
cmovb
test
push
cmpsl
jns
push
inc
xchg
xchg
es
lcall
adc
test
jae
mov
cltd
mov
inc
das
pushf
dec
fdiv
scas
xchg
lcall
in
in
scas
pop
xchg
sub
cs
roll
pop
hlt
sub
jno
fwait
push
xchg
negb
jb
xchg
mov
negl
shlb
sbb
imul
cmp
push
and
stos
xor
les
jns
jb
fsubl
push
cmp
push
push
lock
add
mov
and
fcomps
rcrl
xchg
stos
nop
mov
imul
mov
gs
rcrb
jmp
stos
or
jnp
mov
icebp
push
mov
pop
or
add
les
rorl
xor
jo
iret
fcoms
cmp
cmpsb
lds
loop
or
rcl
fwait
enter
lods
cs
shrb
sub
sbb
add
mov
pop
jbe
push
aad
mov
push
cmp
and
push
dec
add
or
pop
mov
pop
pop
mov
into
std
pop
push
xchg
push
pop
ret
pop
fisubrs
sub
fdivrp
cmpsl
add
cmp
inc
into
in
scas
pop
nop
lret
clc
repnz
dec
adc
lahf
subl
xchg
inc
cmp
testb
mov
mov
adc
pop
andl
test
xchg
out
add
push
add
xor
movsl
or
mov
inc
xchg
outsl
popa
bound
and
or
in
push
xchg
xor
test
add
inc
jo
mov
subb
dec
lcall
push
lock
sbb
lds
leave
push
int3
add
add
jp
jnp
mov
loope
mov
cld
loope
mov
inc
and
ss
mov
dec
mov
or
jnp
lret
dec
xorl
in
mov
fistpl
jg
adc
adcl
mov
outsb
leave
rolb
mov
repnz
pop
cwtl
repz
mov
and
jbe
sbb
add
xor
jge
cmp
daa
mov
inc
cltd
cs
fidivl
leave
cmp
test
cmc
mov
jae
test
and
aas
jnp
pushf
jae
xchg
popf
push
inc
pop
mov
cli
mov
fwait
es
scas
mov
pusha
icebp
mov
sbb
xchg
push
cmpsb
scas
fcmovnu
mov
sub
in
sub
xchg
mov
or
jle
inc
cmp
testb
enter
hlt
rorl
jmp
and
pop
aad
or
leave
aas
jmp
cmc
or
icebp
push
mov
data16
push
fsubrl
cmp
mov
mov
inc
hlt
std
mov
cld
mov
lahf
out
decb
cltd
in
js
push
outsl
inc
mov
add
fiadds
jmp
sbb
cmpsl
sub
repz
mov
faddl
call
mov
cmp
addb
push
insl
xchg
adc
hlt
lret
hlt
ret
sbb
jle
xor
adcl
mov
faddl
sahf
in
loopne
sbb
mov
pop
movsb
mov
aam
add
mov
loopne
arpl
icebp
in
add
adc
test
aas
in
dec
rcrb
aam
lds
call
cmp
sub
data16
sbb
lods
sub
pop
ds
std
mov
push
or
mov
ds
lods
jne
push
jnp
hlt
mov
sub
cmpsb
mov
fisubrl
or
pop
clc
int
fs
fmulp
push
push
stos
stos
mov
push
cmpsb
inc
mov
dec
sub
pop
gs
test
xor
mov
call
push
lds
push
nop
out
cmp
pusha
lods
les
les
or
filds
cmp
loop
mov
adc
inc
sub
out
pop
fsubl
mov
ds
mov
or
mov
jle
int
add
pop
rorl
and
flds
ficoml
aas
mov
mov
cmp
out
push
dec
ds
leave
xchg
mulb
sub
inc
cmp
fists
fwait
and
stos
jno
fnstcw
pusha
xor
add
aam
sub
mov
in
push
test
mov
pushf
mov
cwtl
jno
insb
out
inc
out
or
adc
inc
popa
icebp
cmpsl
jne
or
iret
stos
pavgw
cmovae
add
scas
fs
ja
movsw
ret
dec
shl
xor
sub
ror
xchg
mov
int3
loop
bound
add
hlt
iret
cld
mov
and
fadds
js
jge
pop
adc
add
out
sbb
mov
loopne
mov
shr
xchg
jl
ret
push
cmpsl
dec
leave
clc
movsb
in
out
pop
xchg
loopne
in
inc
push
mov
subb
inc
testl
hlt
pop
sub
dec
in
ja
xchg
cld
lahf
pushf
pop
push
fs
mov
pop
insl
sbb
ds
jp
arpl
repz
das
sub
or
xchg
push
insb
push
ja
or
adcb
add
cmp
pop
inc
jno
fdivrl
enter
mov
push
hlt
stos
sbb
or
cmp
insl
add
popf
adc
and
sbb
xor
mov
cmp
cwtl
pop
xchg
mov
cmp
add
dec
sub
das
fisubl
xchg
jmp
inc
xor
mov
out
pop
lods
sub
sub
push
bound
fimull
jae
ja
pop
or
and
add
mov
sub
hlt
sub
cli
push
sbb
push
sbb
and
xchg
cmpsb
mov
movsb
jl
ja
pop
and
test
jmp
jnp
repz
add
push
lock
cmp
sbb
xchg
mov
fwait
dec
repnz
jg
dec
mov
testl
das
mov
popa
mov
arpl
and
insl
leave
add
mov
xchg
pop
fiaddl
xlat
cmpsl
div
dec
fstpl
hlt
inc
popa
leave
mov
stc
mov
sbb
or
popf
pop
cld
loop
cli
fdivrl
jl
lock
jbe
fwait
movsb
pop
mov
mov
jl
addl
dec
shlb
xor
xor
rorb
push
popf
dec
cmp
sbb
xor
es
fcomps
fldcw
in
xor
mov
stc
in
out
stos
call
mov
inc
dec
jo
or
aam
repnz
xchg
or
mov
int3
pop
cmpsl
jle
and
fcompl
or
and
jl
lea
js
pop
mov
xlat
fcom
xchg
js
push
ss
subl
sbb
js
popa
int
dec
out
or
push
jno
xchg
enter
adc
xchg
in
pop
dec
jns
data16
inc
or
push
push
es
test
inc
mov
ret
fwait
xchg
std
das
cmp
cmp
loope
imul
jae
and
mov
imul
lds
or
xchg
xor
dec
push
adc
test
mov
ljmp
lea
pop
in
negl
std
jle
cltd
mov
xchg
add
add
movsb
je
mov
cmp
ret
insl
in
fninit
call
add
xchg
adc
lret
pop
mov
cmp
push
test
inc
xor
fcomps
sbb
cmp
sub
mov
xor
imul
roll
fld
popa
scas
leave
jbe
fistpll
icebp
push
rclb
mov
and
pop
mov
shrb
jb
lea
rolb
cmpsb
pusha
mov
test
fldenv
into
shlb
bts
je
jl
mov
rcll
rclb
dec
stc
adc
mov
or
push
in
add
adc
and
cmp
jne
outsb
in
lret
sub
jae
cmpsb
pushf
cltd
fcompl
ljmp
add
sub
or
test
stos
loop
add
cmp
lods
and
imul
ret
imul
outsb
cmpsl
add
pop
aam
inc
mov
std
sbb
fistps
bound
jnp
sub
ss
push
nop
pop
mov
dec
insb
inc
ficompl
stc
xor
xor
out
pop
push
jb
adc
dec
or
mov
pop
sbbb
cmp
xor
scas
push
xchg
lea
inc
sbb
insl
in
cld
push
sub
xchg
and
outsb
cltd
push
int3
adcb
pushf
xchg
imul
icebp
outsl
stc
xor
inc
loope
xlat
sbbl
fcoml
adc
fnsave
cmp
dec
into
xchg
pop
jle
mov
inc
or
add
arpl
pop
xchg
fstps
adc
cmp
and
inc
mov
out
xchg
ljmp
dec
adc
aaa
or
push
sti
popa
outsb
pop
out
push
fwait
fwait
insl
sarb
xor
lock
test
dec
sub
test
fcompl
mov
or
xor
test
mov
adcl
push
ja
out
inc
mov
xor
mov
jb
pop
imul
fistpll
push
hlt
cs
andnps
push
loop
add
add
in
mov
ljmp
mov
lods
pop
push
adc
mov
dec
add
add
inc
rorb
pusha
dec
xorb
push
lods
repz
pop
shll
pop
mov
out
adc
push
insb
mov
sub
sub
inc
sbbb
add
add
arpl
inc
subl
xor
data16
test
lods
rcr
jge
push
mov
je
popa
dec
leave
stc
mov
in
fildll
and
sbb
insl
lods
sahf
lods
nop
jecxz
rclb
imul
or
sub
repz
dec
pop
mov
inc
psrlq
dec
inc
movsl
adc
popl
push
push
jp
add
test
je
sbb
sbb
int3
cmp
inc
mov
test
jge
je
test
sbb
jbe
cld
mov
mov
mov
or
out
andl
gs
imul
pusha
jmp
lds
into
sbb
and
ljmp
and
cmp
xchg
imul
sbb
cltd
std
mov
outsl
add
in
dec
lahf
mov
xchg
add
pop
sti
stos
mov
add
push
ja
fiadds
and
xor
rcll
inc
sbbb
and
out
inc
das
hlt
and
stos
shl
jb
orb
mov
insb
pop
sbb
andb
ds
ror
xchg
outsl
or
mov
lcall
ror
stos
movsl
or
fyl2xp1
pop
mov
fsts
nop
addr16
jne
rolb
lock
and
ds
fwait
sub
repnz
sbb
js
out
mov
push
add
xor
push
daa
in
xlat
outsb
js
stc
push
jle
daa
js
es
das
xchg
lahf
push
sbb
aam
ljmp
loop
in
push
pop
mov
mov
push
out
icebp
push
rcrb
cwtl
sbb
adc
mov
pop
mov
mov
int
inc
pop
mov
movsb
or
add
iret
cltd
test
inc
sbbl
lea
shlb
mov
daa
inc
mull
xor
xchg
adc
jge
test
and
jb
sbb
mov
dec
cld
into
arpl
aad
lret
push
xchg
cwtl
xchg
inc
fmuls
cli
cmp
sbb
sbb
push
mov
mov
rcrl
lea
sbb
sahf
outsb
lds
add
leave
popa
jmp
movsl
mov
inc
jb
sbb
jo
sbb
outsl
jmp
inc
fidivrs
or
jnp
shll
add
iret
jecxz
scas
push
mov
xchg
lods
xchg
lret
add
mov
pop
dec
ja
xchg
mov
jns
add
and
cltd
or
aas
lods
cmp
mov
test
pop
pop
movsl
mov
jle
loope
stos
push
xlat
inc
jp
daa
jp
in
lds
xor
or
dec
push
inc
inc
scas
imul
jo
das
into
inc
cwtl
xchg
xor
inc
add
cwtl
adc
and
xor
daa
sarl
cs
inc
call
push
sbb
mov
je
data16
jb
mov
aas
jecxz
jp
cmp
add
inc
imul
stc
fcmovbe
shrl
mov
in
xor
shlb
jo
in
sbbb
sub
dec
push
shlb
adc
mov
popl
ret
xor
test
inc
push
sbb
out
out
stc
arpl
pop
sbb
inc
iret
ds
mov
rorb
xchg
pop
iret
pop
dec
inc
mov
cmc
in
pop
push
push
jp
add
jnp
xchg
xchg
pop
rcr
dec
mov
jp
andl
sti
sbb
ds
aas
jbe
aam
mov
call
mov
stc
lahf
adc
add
icebp
dec
lea
imul
int3
xchg
xor
fidivs
cmc
cld
push
nop
mov
and
xchg
cld
lods
lahf
cli
dec
aas
pusha
mov
mov
pop
sub
inc
jae
jnp
ficompl
aad
sbb
jl
push
stc
orl
mov
push
adc
insl
andl
pusha
mov
or
in
mov
dec
lcall
lock
sti
ficoml
pop
pop
mov
mov
pop
jg
xor
jb
mov
and
mov
push
jmp
xchg
or
push
lds
sarl
scas
cmp
dec
inc
icebp
pusha
test
loope
or
mov
jns
mov
out
daa
fs
test
dec
pop
add
pusha
lock
sarb
mov
pop
test
aam
sub
loop
ss
lcall
cmp
xlat
ffreep
fstpt
mov
mov
jne
pop
adc
loope
sbb
pop
pushf
or
ja
movsb
add
push
fadds
outsb
clc
adc
test
jb
or
sbbl
imul
test
out
lcall
xchg
scas
xchg
pop
outsl
insl
mov
inc
inc
xor
mov
outsb
or
pop
cltd
jns
xchg
sbb
sub
mov
jns
in
xchg
pop
scas
aad
adc
mov
sbb
mov
fwait
cld
mov
scas
imul
push
jge
repnz
push
rolb
shr
lret
fisubs
test
lods
test
push
leave
jns
test
lret
inc
in
sarl
jb
data16
push
sub
lret
ret
sub
das
cld
and
leavew
pop
out
jno
jmp
cmc
jmp
fmul
mov
ds
inc
dec
mov
inc
jno
or
and
ja
fstp
insb
fdivrs
xchg
out
mov
orl
fimuls
je
jp
and
inc
adc
lods
jbe
daa
jp
jle
or
dec
xor
loope
ja
and
scas
push
xor
xor
iret
imul
dec
lret
or
scas
add
ret
add
jne
inc
mov
add
into
pop
xchg
push
sub
fisttpl
stos
scas
andb
xchg
les
sub
out
mov
mov
test
mov
imulb
xchg
hlt
aad
icebp
mov
push
fistpll
push
push
out
inc
fwait
sahf
sub
pop
mov
mov
adc
pop
mov
mov
cs
bound
cwtl
adc
out
or
jmp
mov
iret
ret
pop
mov
inc
or
sbb
rclb
add
or
pop
sub
clc
pop
jecxz
mov
mov
xchg
add
cmp
test
js
mov
add
or
arpl
clc
cld
cld
jle
add
pop
xor
jo
xchg
shl
in
shrl
mov
sbb
push
bound
scas
mov
loopne
imul
das
sub
lds
cs
enter
push
and
dec
ficoms
pop
aaa
push
pop
js
outsb
cli
les
adc
movb
outsb
jno
and
mov
out
repnz
xchg
cmp
inc
xor
jl
pop
mov
jle
cwtl
nop
sub
jmp
and
xchg
sti
jmp
int
sbb
lods
addr16
jmp
sbb
data16
sub
adc
pusha
movsb
out
notb
in
loopne
aam
imul
inc
mov
mov
pop
add
clc
lcall
xchg
push
add
mov
test
rcl
or
dec
mov
lods
mov
aad
clc
cmp
or
jecxz
aas
xor
mov
std
cli
push
add
je
test
lcall
ljmp
inc
or
sub
xchg
pop
adc
test
sub
push
dec
les
cwtl
lahf
mov
addr16
add
loopne
or
mov
js
lock
ret
cmp
sti
cmp
jp
fdivs
mov
fidivs
scas
popf
and
jle
bound
bound
imul
jge
outsl
in
movl
gs
mov
jl
cmpsb
js
sarl
lcall
cmovne
cmpsl
mov
mov
inc
mov
popa
cmpsb
je
xchg
int
mov
pop
mov
mov
cmp
outsb
xchg
xchg
mov
and
mov
xchg
push
push
push
sbb
cwtl
pop
out
add
jecxz
cmp
sub
pop
out
fwait
outsl
mov
and
sbb
gs
and
pop
pushf
mov
xor
cld
pop
add
sarb
movsb
fsubp
cs
push
sub
fwait
loopne
into
sbb
shll
push
mov
aaa
inc
push
cmp
leave
divl
daa
testb
nop
mov
mov
mov
les
imull
out
push
push
loopne
xor
push
fistpl
ret
fwait
rorl
dec
push
cmp
and
pop
adc
adc
mov
in
maskmovq
idivl
pop
jmp
popa
cwtl
mov
or
cmp
arpl
clc
mov
sbb
fcoms
dec
push
adc
int
jecxz
lods
inc
shl
or
sub
or
cltd
repz
xchg
mov
push
lock
mov
mov
inc
push
das
xlat
inc
mov
in
cmc
mov
jno
popf
mov
je
dec
bound
mov
adc
xchg
or
sahf
das
cmp
clc
imul
or
test
in
jge
cwtl
cltd
or
add
popf
movsl
mov
mov
incl
cmp
mov
add
push
scas
xchg
dec
movsb
stc
dec
sbb
imul
hlt
movsb
jo
in
mov
in
push
divb
xchg
call
push
cmp
xchg
es
mov
dec
ret
mov
scas
andb
xchg
dec
sub
out
mov
adc
xor
in
jmp
and
sub
adc
sti
xlat
lods
sbb
mov
loop
xchg
call
fildl
dec
outsl
lea
and
les
hlt
cmp
es
sbb
frstor
sbb
bound
imul
dec
and
mov
mov
stos
nop
pop
lock
insl
xchg
mov
push
addr16
xchg
jo
icebp
push
into
jp
push
subl
fists
push
rorb
sbb
add
mov
mov
push
add
cli
testb
hlt
outsb
into
call
cmp
fs
pop
jg
cs
icebp
mov
push
inc
ja
or
repz
test
out
pop
or
cmp
fdivl
mov
inc
fildl
sub
push
cltd
mov
aaa
dec
ret
in
jl
and
cmp
mov
sahf
and
adc
cmpsb
push
lock
and
addr16
aaa
pop
stos
xor
and
jp
pushf
aas
add
or
or
repz
jl
add
sub
out
loopne
xchg
pushf
call
fs
jg
sub
iret
leave
mov
scas
or
push
push
lret
sub
jae
pop
sub
push
mov
lahf
shlb
add
cli
mov
loope
leave
popa
sub
push
out
xchg
push
mov
mov
sbb
sahf
notl
jnp
in
xchg
ja
fdivr
push
inc
cmpl
inc
inc
insl
sub
xchg
add
addr16
push
xor
push
adc
mov
test
arpl
dec
add
nop
sub
test
mov
inc
mov
in
daa
cmpsb
xchg
push
aas
sbb
sarl
push
hlt
jnp
add
sub
stos
in
subb
pop
hlt
mov
mov
jne
push
inc
adc
cmp
xlat
cmp
jne
push
ficoms
cltd
ret
mov
sub
xor
inc
movsb
fidivrl
jb
scas
sub
sbb
insb
in
xchg
shlb
enter
cmpl
xchg
mull
sub
mov
mov
fcoms
fistpl
shlb
jns
shl
movsl
into
in
imul
ljmp
in
and
sub
test
js
in
rolb
push
cmp
inc
cmpsl
sub
ret
in
sbb
jno
ret
adc
pushf
cld
cs
jmp
adc
fs
xor
adc
jl
jb
sbb
fst
repz
cmpb
pop
xchg
dec
cli
inc
xchg
xlat
mov
movups
movsb
jge
cmp
mov
jns
dec
stos
in
scas
xor
xchg
push
add
sub
out
fidivrl
add
fbstp
pop
inc
cmp
sbb
orb
jne
lock
addr16
mov
lods
mov
ljmp
mov
jo
ds
sbbb
mov
aaa
push
cwtl
in
push
ds
nop
xchg
pop
mov
movsl
daa
fcoms
push
xchg
add
sbb
push
sbb
and
jmp
test
pop
pop
gs
addl
jno
movsb
mov
mov
repz
mov
push
xchg
xor
lahf
mov
pop
dec
icebp
ret
stos
push
or
xchg
and
rol
adc
pop
xlat
into
xchg
inc
aad
icebp
mov
mov
dec
jmp
mov
jge
les
mov
mov
add
inc
loop
mov
xchg
ror
xchg
jbe
mov
fistpl
push
popa
pushf
sub
std
and
mov
push
mov
pop
pop
scas
pop
mov
ja
push
idiv
cmp
in
into
sub
lods
clc
sahf
mov
aaa
add
inc
mov
sti
sbb
gs
mov
push
cmp
nop
mov
repnz
mov
enter
push
cmp
jae
and
les
fwait
adc
test
jg
movsb
ret
imul
push
cmp
dec
ret
adc
pushf
mov
aas
roll
sbb
pushf
xchg
pushf
mov
or
out
in
add
pop
insb
inc
cmp
push
dec
jae
push
add
pop
xchg
mov
cmc
xor
jle
cmp
adc
mov
rcll
fisubrl
fwait
ss
dec
andl
mov
push
int
out
or
inc
sub
shr
push
dec
jb
mov
push
mov
sahf
bound
stc
clc
adc
in
xor
sbbl
inc
movsl
xor
xor
mov
adc
fldenv
push
popa
xchg
mov
imul
xchg
fwait
stos
pop
xchg
cli
xor
mov
inc
movsb
test
sahf
push
inc
mov
xlat
test
out
pop
push
mov
mov
mov
jne
dec
inc
or
dec
cltd
add
bound
dec
sub
dec
jns
jae
negb
movsb
scas
insb
mov
adc
les
dec
insl
sbbl
sub
sbb
add
call
xchg
mov
pop
fnstcw
mov
dec
stc
js
inc
andl
insb
int
lret
popa
test
adc
push
xchg
lock
hlt
call
fisubs
pop
in
ja
mov
inc
in
cmpsl
lcall
mov
or
fsts
out
mov
sbb
ljmp
in
rcl
xchg
mov
adc
push
sar
jg
pop
pushf
pop
pop
mov
adc
or
scas
stos
scas
cmp
push
jle
jle
and
int
mov
sti
enter
mov
or
out
mov
jb
jb
lock
scas
fidivs
fwait
xchg
push
pop
jno
sub
adc
pushf
lea
cld
xlat
lret
nop
fwait
xchg
mov
push
adc
adc
and
cmp
inc
xchg
adc
mov
push
push
movsb
xchg
jne
pop
popl
in
aaa
xchg
ret
div
pop
cld
xlat
sar
push
mov
jp
xchg
push
pop
sub
add
mov
leave
shrb
inc
cltd
enter
daa
ret
jae
mov
shlb
cwtl
push
roll
test
sub
cmc
mov
jmp
ljmp
jbe
mov
sub
sub
stc
les
pop
mov
mov
cwtl
addr16
dec
ret
and
mov
enter
inc
and
cmp
jge
xchg
stos
xor
in
cmpsl
lods
or
jb
sub
cmpsl
lret
jno
movsb
mov
int
push
shlb
maskmovq
cli
outsb
pop
sub
mov
roll
cs
mov
lahf
gs
out
fdivl
out
inc
mov
xchg
push
adc
rclb
xchg
inc
xor
inc
inc
fdivrs
ja
or
xchg
out
cli
filds
or
test
xor
push
loop
xchg
lret
push
repz
and
inc
mov
das
out
cwtl
sbb
jle
mov
in
pop
test
push
out
test
inc
daa
add
mov
push
ljmp
ja
sti
push
test
sbb
adc
jne
es
les
jg
fisttps
js
pop
xor
out
xchg
cmp
out
into
iret
inc
aaa
aaa
dec
xor
push
sbb
sub
xor
leave
cltd
add
jmp
scas
or
btc
aaa
outsb
fstps
cmp
sti
dec
push
push
cmp
paddusb
dec
cmc
cmp
jecxz
in
in
cmpl
frstor
jae
ja
pop
add
jge
sahf
cwtl
inc
aaa
adc
push
push
jecxz
daa
cmc
or
mov
or
notb
shrd
jmp
pop
scas
xchg
lcall
enter
daa
in
es
cmp
addb
inc
and
and
xor
loope
inc
mov
lahf
stc
fs
jae
out
or
cmp
leave
sub
loop
cs
std
sub
rcrb
push
das
js
call
pop
lret
test
and
cmp
sbb
xchg
data16
sub
mov
mov
arpl
nop
jmp
popf
mov
cmp
jmp
pusha
rcrl
mov
xor
nop
jne
jne
mov
imul
pop
adc
and
jle
clc
mov
mov
mov
cs
rcrl
and
ja
mulb
xchg
arpl
dec
dec
jecxz
sbb
and
jle
scas
bnd
mov
xchg
das
dec
or
inc
sbb
pop
cmp
inc
jle
cli
push
out
inc
xchg
in
inc
call
loopne
movsl
add
push
loopne
xchg
ljmp
mov
fildl
push
repnz
pop
test
decb
push
sbb
call
cmp
mulb
sub
daa
mov
fdivs
xchg
fdiv
mov
mov
and
pop
leave
add
dec
cli
arpl
dec
xchg
xchg
lret
xor
daa
nop
xor
ja
xchg
inc
xchg
mov
sub
push
dec
in
cmp
mov
jnp
cld
data16
jo
dec
cmp
cmp
test
mov
xor
add
mov
pop
mov
push
test
scas
int
push
mov
mov
cmc
sbb
push
mov
mov
movsl
sti
push
mov
mov
es
push
ret
int3
add
fdivrs
icebp
scas
push
sub
sti
jbe
push
push
inc
aad
pusha
xchg
lahf
push
data16
out
adc
mov
cmp
jo
imul
sub
loope
xor
int
xlat
xor
cmpb
or
in
inc
rclb
shll
sarl
xchg
imul
jecxz
stc
stos
dec
nop
adc
push
stc
into
sbb
je
mov
jb
sbbl
xor
pop
fcmovnu
pop
xchg
scas
loope
mov
movsl
xor
loopne
sbb
sbb
push
mov
jmp
xchg
scas
add
xchg
gs
inc
or
jae
cmpsb
sbb
cmp
sarl
inc
lret
int3
jg
mov
scas
jbe
push
jle
clc
popf
jnp
mov
ja
add
mov
cmpb
jle
cmp
pop
xor
out
dec
leave
js
hlt
mov
xor
push
shlb
fwait
xlat
gs
in
stos
ljmp
sub
fs
pop
aad
xchg
cmp
arpl
xchg
dec
sub
inc
or
fsubrp
and
add
or
testb
jae
mov
inc
fildl
jns
imul
lods
andb
jg
pusha
stos
fdivrs
fildll
cmpb
cmp
andl
lock
repz
sub
or
fiadds
push
ds
cmp
mov
popa
fcompl
add
insb
pop
fisttpll
mov
into
mov
fistps
repz
insb
pusha
mov
mov
push
test
rol
adc
aad
pop
xchg
ss
pushf
fistl
mov
negl
pop
into
dec
add
xchg
sarl
sub
xchg
lea
pusha
pop
enter
pop
arpl
mov
and
pop
lods
dec
jnp
xchg
in
push
aam
pop
insb
push
cmpsb
xor
js
aam
push
sub
or
xlat
adc
loope
insl
inc
fbld
cltd
mov
les
or
or
rol
lcall
xchg
sti
mov
ja
popf
mov
mov
add
mov
mov
cmp
push
jo
xchg
outsb
nop
mov
lret
out
pushf
jbe
mov
inc
test
js
mov
lods
dec
sub
cwtl
mov
and
outsl
push
jmp
or
in
in
jp
cli
add
and
xor
je
mov
das
sbb
adc
call
lods
dec
cmp
cmp
fwait
ja
jne
mov
mov
adc
mov
ja
fcomp
scas
mov
subb
test
int
inc
mov
adc
popa
into
lahf
out
mov
icebp
sbb
dec
pop
leave
shll
push
xchg
dec
mov
xor
mov
mov
loope
bound
out
repnz
leave
jne
add
out
cld
mov
shlb
in
mov
movsl
adc
in
gs
call
sahf
adc
data16
cmp
push
bts
inc
arpl
lock
inc
jp
push
pop
out
inc
out
aam
push
jmp
sub
pop
mov
inc
dec
adc
lea
cmp
and
jl
jne
dec
popa
gs
out
lock
in
push
call
rolb
mov
les
sub
aaa
mov
and
shll
mov
leave
adc
push
data16
leave
sti
xchg
add
dec
int
push
call
scas
xchg
mov
push
jae
lahf
and
loope
pop
jp
mov
bound
mov
das
insl
aam
push
pop
cltd
push
or
cmp
jb
mov
ds
out
xchg
subb
popf
push
std
cwtl
lret
jge
jbe
scas
in
addl
push
mov
repz
adc
inc
inc
dec
clc
or
xchg
cmpsb
rorb
fidivrs
jnp
pop
out
psrlq
idivb
out
in
cltd
mov
mull
rclb
jo
cld
cmp
inc
stos
sbb
repz
rol
sbb
lock
movsb
jp
lret
sub
mov
ret
and
notb
testl
lret
fisubrs
sub
dec
xchg
xor
inc
lret
push
push
sub
int3
sub
push
and
nop
into
jo
add
adc
push
popa
push
inc
ja
adc
inc
push
neg
pop
pushf
cmp
mov
es
mov
clc
rcrl
sub
xchg
outsl
xchg
aas
adc
mov
fisubs
pop
ret
fwait
add
inc
aaa
and
and
daa
cmp
in
cmpsb
mov
mov
and
cwtl
sbb
or
sti
rclb
or
pop
dec
add
xor
mov
pop
mov
fdivs
jb
xchg
outsl
mov
xchg
push
lock
sub
lock
sbb
in
leave
cmp
mov
sbb
arpl
push
xchg
fisubs
inc
cmp
xor
test
dec
lahf
mulb
pop
mov
arpl
stos
sub
out
dec
fcmovbe
xchg
ja
inc
ret
mov
dec
cli
leave
pop
xchg
fisttps
mov
inc
movsb
out
mov
and
dec
imul
fildl
push
negb
outsl
int
stos
push
ss
inc
fstl
ja
mov
mov
out
imul
adc
andl
sahf
pop
outsb
in
pop
aas
jb
jmp
push
sbb
cmc
stos
imull
loop
pop
jns
adc
mov
cmp
pushf
loop
lock
and
pusha
cmp
jnp
jns
xchg
into
mov
negb
sub
mov
xor
lret
mov
mov
mov
imul
add
imul
xchg
dec
dec
xchg
pop
sbb
adc
mov
mov
ljmp
lret
icebp
pushf
push
and
pop
testl
push
xor
push
cmpsb
pop
mov
test
pop
leave
jge
or
sbb
jb
in
mov
xor
jbe
mov
mov
jb
sarl
arpl
aas
push
mov
sahf
mov
lds
fidivrs
cmp
mov
xor
enter
xchg
jge
xchg
out
jbe
sbb
xor
xchg
sbb
push
jle
adc
xchg
and
inc
cmp
cs
loopne
sbb
dec
inc
les
inc
sbb
mov
push
xchg
pop
mov
imul
dec
out
push
mov
imull
cld
jb
jp
repz
jecxz
notl
sbb
adc
sub
mov
inc
ret
and
lret
sbb
mov
into
mov
dec
imul
mov
cld
ficoms
ficoml
push
subb
fimull
push
pop
xor
dec
imul
das
adc
sti
mov
fisttpl
and
push
cmp
jnp
rcll
mov
sbb
push
sbb
push
scas
push
jecxz
pusha
jl
insl
lock
adc
mov
adc
out
push
outsl
mov
xor
push
mov
aaa
pushf
mov
push
fmuls
push
scas
xor
pushf
imul
sbb
mov
sbb
dec
in
stc
xlat
mov
dec
test
push
sub
pop
popa
sar
dec
ret
inc
mov
sbb
add
aaa
rolb
mov
clc
mov
mov
mov
cld
sub
and
jns
daa
imul
push
incb
lock
out
sub
sub
add
lret
js
in
outsl
jb
xchg
push
mov
out
cmp
mov
je
sbb
je
dec
pop
bound
addr16
cmpsb
or
fsub
jae
xabort
or
int
mov
mov
lock
pop
xorb
cs
shlb
rcrb
cmpsb
pop
pop
repz
nop
mov
mov
sub
sub
mov
xor
out
jecxz
inc
dec
out
loopne
xchg
out
lea
xchg
mov
adc
int3
cmc
pop
sbb
hlt
pusha
mov
ret
mov
lret
inc
mov
stc
lods
push
insb
adc
mov
pop
jno
push
and
sbb
push
fildl
or
sbb
lds
lock
or
sbb
mov
cmp
xchg
punpckhwd
mov
pop
ds
mov
inc
pop
loope
insl
jne
jmp
ret
jmp
mov
cs
cmpsl
jbe
fs
lds
int
fidivs
rcrl
push
std
xlat
imul
sti
dec
lret
xchg
aam
inc
sub
push
imul
es
sub
cmpl
mov
dec
add
sbb
sti
jb
mov
mov
jge
push
sub
scas
jne
out
and
inc
sbb
jmp
data16
bound
adc
inc
mov
popf
sbb
add
or
inc
sub
outsl
out
fsts
inc
scas
arpl
dec
enter
int3
mov
xchg
sbb
mov
inc
xchg
sub
push
jno
or
jmp
leave
mov
pop
aas
fdivs
fcoml
fldl
aam
mov
mov
data16
sub
into
mov
nop
fcoms
cmc
popa
lea
aaa
rcr
fisubs
shll
mov
imul
ret
daa
and
jl
pop
sbb
sti
imul
pop
add
cwtl
or
rcll
bound
or
cld
push
lods
inc
cmp
pop
das
in
sub
mov
cmp
xchg
jo
sbb
loopne
mov
xor
inc
loope
jo
mov
and
pushf
mov
pop
pop
fisubrs
jmp
and
adc
call
xchg
mov
in
out
into
adc
cmpsl
pushf
pop
push
hlt
frstor
sub
or
push
lds
sbb
rol
neg
adc
nop
mov
and
data16
push
fldln2
orb
xchg
ret
loop
pop
cmp
int
cmp
ret
sbb
jp
cld
xchg
add
movsb
in
xchg
dec
enter
xor
clc
loop
add
add
dec
xlat
roll
adc
pop
or
cli
test
push
sbb
repz
rcrl
sbb
movsb
lods
sbb
std
int
and
mov
inc
fs
mov
icebp
push
enter
mov
sbb
jg
mov
lcall
mov
daa
scas
push
div
insb
push
or
sbb
inc
repz
jns
out
in
jo
mov
sub
jne
std
mov
bound
lret
mov
push
sub
ret
add
lret
inc
xor
mov
jecxz
xchg
mov
inc
adc
aad
out
pop
insb
jecxz
cmpsl
mov
pop
dec
xor
ss
lcall
jge
shll
insb
jns
mov
shlb
pop
adc
jl
cld
in
insb
push
jl
mov
and
int
es
or
xchg
cli
adc
jae
push
and
add
sub
leave
out
rcll
xchg
outsb
inc
push
push
je
adc
and
lods
pop
lock
push
sbb
leave
adc
in
fildll
pop
and
out
es
idivl
lcall
jge
lret
into
sub
xorb
ficompl
inc
pop
shlb
movsl
pop
outsb
movsb
sub
sbb
loope
push
lret
mov
mov
mov
test
std
dec
adc
sbbl
or
mov
and
ljmp
push
xchg
fists
insl
mov
jmp
add
mov
cmc
sarl
rcrl
enter
jo
movsl
sub
lods
and
push
sbb
test
ds
or
jg
and
mov
push
xor
mov
out
fildll
lds
sbb
cmp
cmp
fcmovbe
lcall
fs
rorl
jl
mov
lock
repnz
jbe
aam
cmpsb
or
sbb
fisttpll
cmp
mov
xchg
inc
mov
mov
adc
fimuls
inc
stos
push
mov
cmp
push
js
inc
cmp
test
xchg
add
in
lods
mov
jnp
adc
aas
xchg
nop
mov
mov
adc
jo
and
mov
iret
push
dec
pop
insb
cmp
sub
insl
and
imul
jne
xorl
insl
repz
pop
arpl
push
call
popf
ficoml
lcall
jge
movsl
in
mov
fimull
notl
sbb
jae
mov
shrl
mov
mov
insl
jp
outsb
add
inc
adc
movsl
jo
lock
shrl
inc
jle
mov
mov
cld
jmp
jl
or
sahf
mov
or
push
cwtl
movsl
adc
jge
xchg
mov
fsubl
jno
adc
fwait
jl
mov
fisubs
mov
sub
jp
int
dec
fists
dec
inc
das
inc
repnz
mov
sbb
ljmp
imul
enter
arpl
xchg
leave
push
lret
pop
jo
push
lds
xor
lods
fistpll
mov
jl
mov
mov
andl
jl
mov
cmpsl
repnz
mov
repnz
push
push
stos
xchg
jecxz
add
mov
fwait
js
imul
push
mov
push
enter
ret
mov
jle
loope
add
les
cmp
add
jecxz
mov
das
ret
nop
sbb
xor
pusha
dec
sbb
mov
sbb
gs
sbb
aad
cmpsl
outsb
xorl
pop
and
and
pop
dec
call
scas
pop
or
push
xor
jno
add
push
add
pop
sub
xchg
fbld
or
xchg
adc
inc
push
jns
mov
mov
push
daa
mov
push
cmp
jg
lahf
sub
xor
rorb
xchg
in
pop
and
mov
adc
mov
mov
cwtl
sbb
pop
imul
xchg
sbb
mov
cltd
push
cmp
fisubs
stos
mov
subb
ss
mov
std
push
jg
in
fs
aaa
lret
aad
imul
mul
sbb
mov
xor
add
adc
call
jae
push
fisubrl
pop
jmp
mov
cmp
adc
sub
inc
aam
ret
fbld
insl
mov
stos
jno
pusha
xor
pop
xchg
push
or
movsl
xlat
sti
test
inc
aad
les
imul
dec
jne
jns
arpl
fdivrl
ss
jo
es
test
jno
dec
lods
daa
and
addr16
ss
mov
sub
jmp
mov
fsubr
es
aam
lods
scas
fsubrp
movsb
out
sub
outsb
divl
push
or
jp
push
ja
daa
jno
repz
stos
or
cmpl
out
dec
lods
pop
leave
leave
jle
mov
jns
mov
mov
sub
push
or
push
xchg
or
and
jo
out
js
xchg
lds
stc
inc
or
subb
mov
insl
data16
sbb
cmp
in
dec
mov
push
push
ds
xor
stos
xor
mov
mov
rcrl
inc
adc
or
jp
inc
mov
pop
xchg
movsl
xchg
fmul
cwtl
stos
mov
mov
mov
jbe
mov
cmp
push
jmp
adc
fistpll
fidivs
fcmovnu
add
mov
sub
hlt
mov
mov
aam
in
mov
mov
sahf
cmp
stc
rorl
and
pop
push
or
scas
lahf
xlat
push
xor
dec
or
inc
sahf
pop
nop
jb
icebp
test
leave
ss
pusha
out
hlt
xor
pop
test
push
xchg
lds
push
and
pop
lret
mov
mov
or
xchg
jo
push
xchg
push
push
or
fadds
push
cs
inc
sub
sahf
vmread
sar
lahf
out
xchg
xor
loope
adc
mov
rorb
repz
ret
popa
aaa
pop
pop
imul
add
jge
or
adcl
xor
sub
mov
fdivrs
outsb
mov
call
sbb
decb
adc
aad
and
addl
push
fcmovnu
push
stos
fisttpll
pop
sub
lahf
and
cmp
xchg
insl
repz
std
inc
leave
in
fs
out
mov
int
or
in
aam
sarb
sbb
loop
ret
stos
add
pop
aad
dec
add
pop
sahf
inc
std
decb
push
stos
sub
lods
push
lds
sbb
pop
cmc
cmp
cs
out
pusha
fs
leave
jbe
jmp
add
or
icebp
mov
inc
call
cmp
lods
pop
xor
cltd
fisttpl
jbe
lock
dec
xlat
cwtl
loope
fs
ljmp
mov
loope
cltd
xorb
insb
push
dec
mov
lock
xor
out
and
mov
pop
orl
rorb
and
mov
sbbb
mov
inc
pop
adc
das
xchg
xchg
jmp
dec
pop
test
lahf
rcl
push
sbb
negb
or
insb
mov
pop
jbe
mov
push
xchg
jge
or
jmp
pop
jp
fs
sbb
into
loop
adc
in
stos
inc
pop
gs
cld
daa
icebp
mov
mov
shlb
inc
dec
jp
ds
adc
ljmp
test
cld
aas
mov
roll
push
sar
mov
or
add
ds
dec
ss
jo
cmp
lret
inc
pusha
rorl
jnp
xchg
xor
test
aas
jmp
dec
mov
frstor
sub
jecxz
mov
cs
orl
mov
push
adc
rdmsr
loop
stc
in
mov
pop
dec
sbb
sub
cmp
jle
pop
or
daa
push
jp
imul
xchg
outsl
lret
inc
dec
movsb
aas
sti
inc
jae
xor
lret
and
into
cmp
push
mov
mov
push
or
mov
imul
jge
xchg
push
in
add
push
les
stos
xlat
push
mov
jg
and
xlat
imul
test
sub
add
rcll
cmp
js
adc
in
aaa
mov
fwait
xor
ficomps
insb
xchg
stos
ljmp
push
dec
push
xor
mov
int3
pop
dec
mov
mov
data16
ss
dec
dec
add
sub
mov
sub
popf
rcrb
negl
push
pushf
in
cmpsb
enter
iret
or
xchg
leave
dec
cmpsb
jnp
in
ret
sahf
not
dec
jl
arpl
mov
lret
in
cmp
lods
mov
cld
fs
data16
setne
iret
lcall
sub
or
xchg
subb
mov
push
pushf
mov
adc
fsubl
inc
popf
mov
mov
cs
lds
mov
mov
adcb
mov
sti
stc
add
mov
dec
test
add
cmp
adc
inc
or
mov
imul
sbb
cmp
stos
xor
xor
je
gs
push
cli
push
sbb
xor
leave
rcl
mov
fstps
mov
dec
mov
push
jecxz
mov
cmp
bound
lds
or
and
out
sbb
jmp
aam
adc
cmp
push
mov
xchg
test
loope
jle
lahf
and
xor
xor
xchg
push
fldcw
pop
adc
outsb
cmc
inc
push
mov
fstpt
xchg
pop
jle
out
push
jg
pop
and
out
jg
push
in
testb
pusha
inc
stos
push
popf
mov
dec
cmp
pop
mov
sbb
sub
and
ret
mov
leave
sub
lds
jecxz
jns
jecxz
jg
cli
push
cmp
inc
and
push
testb
cmp
sbb
adc
repnz
scas
or
cli
xlat
shll
mov
fisttpl
lahf
xor
lds
and
scas
pop
ret
mov
ja,pn
xor
xchg
ret
lret
or
push
add
lods
icebp
lret
movsl
in
sahf
out
ffreep
ljmp
dec
stc
inc
dec
or
insb
in
aaa
in
mov
xor
addb
ds
add
out
push
shr
test
mov
mov
aaa
pop
into
subb
sbb
orl
aas
mov
and
loopne
into
add
jbe
testb
xchg
std
xchg
xchg
and
data16
inc
iret
jb
jge
and
and
test
push
dec
jno
add
mov
sarl
mov
out
push
negb
das
sbb
adc
hlt
push
push
stos
lret
adc
out
jecxz
push
call
cwtl
push
adc
cli
and
add
sbb
jae
add
xchg
add
jo
mov
arpl
xor
adc
shll
es
and
adcb
ss
subl
inc
pop
adc
sbb
imul
add
loopne
cli
cmpsb
es
repnz
mov
stos
and
jle
sbb
mov
insl
xor
leave
xor
pop
pop
sarl
sbb
cs
push
sti
outsl
enter
pop
mov
sub
int
std
xchg
mov
jns
lods
mov
data16
pop
loop
filds
jge
aas
mov
and
xor
pop
push
gs
dec
and
add
xor
adc
xor
pushf
inc
lea
or
inc
push
mov
mov
and
jno
and
imul
jb
loopne
jge
mov
dec
test
dec
xchg
lods
movsb
int
mov
add
push
ja
pop
int
push
icebp
rorb
mov
cmp
add
test
bound
push
xor
sarb
and
xchg
loopne
test
mov
dec
xor
outsl
inc
cmp
mov
cmpsl
sbb
cmp
mov
imul
pop
sub
xchg
andps
rcrl
repz
push
inc
fs
jp
out
push
mov
mov
pop
mov
imulb
mov
fsubl
or
aaa
add
sarl
dec
hlt
shll
mov
js
cmp
pop
jmp
push
jecxz
sbb
add
or
xchg
mov
cmp
aaa
nop
lock
cmp
sbb
mov
movsl
mov
arpl
fsubs
push
clc
cmp
shl
lahf
cmp
arpl
pop
cli
pusha
xchg
add
push
adc
xchg
ret
les
sahf
shr
mov
int
add
xchg
pop
pop
bound
leave
test
lock
sahf
loopne
push
xor
lds
and
lods
pop
test
inc
scas
xchg
mov
imull
cld
imul
arpl
aad
subb
pop
or
add
movb
lahf
mov
push
adc
push
arpl
mov
into
or
lods
flds
jmp
add
adc
lea
popf
cmpsl
std
ss
mov
pop
or
rcl
or
test
cmpl
fcomip
jmp
ljmp
and
mov
xchg
ds
sbb
ss
cli
xor
sbb
cltd
inc
in
test
sti
movsb
lcall
mov
mov
add
fcoms
mov
sub
neg
sti
sub
lret
ds
gs
jnp
push
bound
sarb
imul
cwtl
repz
enter
jg
fcompl
push
and
sbb
orb
cmpsl
pop
sti
int
xor
dec
out
jmp
test
repz
test
iret
mov
adc
shlb
jge
test
ret
push
rolb
fxtract
push
pop
fwait
push
adc
hlt
in
cmp
cld
pop
aam
mov
and
cmp
dec
cld
in
add
xchg
aad
shlb
jmp
push
fstpl
xchg
ja
cmpsl
std
lcall
cmpsb
jle
fwait
xor
push
fstl
inc
fnsave
mov
sbb
sub
fldt
loopne
ret
inc
loopne
jb
inc
sub
imul
ret
mov
je
push
sub
mov
cld
lret
sbbl
insb
loope
and
xchg
scas
cmp
pop
xor
mov
push
sti
lcall
rcrl
cltd
out
push
fnstenv
cltd
adc
sahf
icebp
pushf
pop
adc
or
fsubl
daa
cmp
xor
and
outsl
pop
outsl
rorl
xchg
cmp
insb
ja
add
dec
sbb
adc
mov
inc
lock
jmp
mov
dec
sub
push
out
ret
fld
and
ja
aaa
ffree
fidivs
ds
cmpb
sahf
das
jecxz
fucomi
ss
fwait
dec
sti
and
sbb
jo
mov
test
dec
pop
jns
or
cmp
shrl
and
push
push
push
scas
jge
dec
test
je
pop
sub
insb
mov
cmc
push
sahf
iret
mov
sahf
jp
or
pop
filds
dec
pop
adc
push
enter
lcall
adc
xchg
out
pushw
popf
lock
add
inc
loop,pt
dec
iret
jns
daa
mov
mov
out
xchg
mov
dec
lds
shlb
dec
adc
lds
ret
adc
shl
out
scas
inc
pop
pusha
pop
dec
mov
cmp
shll
test
sbb
add
sub
or
add
movsb
mov
std
loope
push
movsb
adcl
fnstsw
mov
add
aad
pop
aam
int
mov
push
mov
insb
je
inc
lahf
mov
jp
and
in
push
and
sub
ja
mov
xchg
inc
sub
mov
test
push
and
mov
sarl
test
push
pop
cs
jb
sub
push
sbb
pusha
sub
or
adc
pop
hlt
or
pop
mov
mov
jmp
sub
xchg
jmp
xchg
add
push
mov
std
push
mov
nop
mov
in
not
lods
jl
in
add
test
cmp
icebp
sub
push
fidivrl
ret
inc
or
loop
push
daa
pop
leave
xchg
sub
dec
orl
dec
or
or
movsb
pop
rol
sub
mov
push
bound
mov
outsl
out
test
add
inc
sti
movsb
hlt
sarl
mov
dec
mov
pop
pop
orl
mov
inc
push
jecxz
mov
shrb
repz
stos
ss
or
lcall
push
dec
and
in
jbe
adc
sbb
icebp
xlat
xchg
pop
inc
rcrb
aad
add
pop
ret
cmp
mov
orb
add
cltd
outsb
imul
aam
cli
movsl
mov
dec
ja
mov
inc
jne
adc
inc
mov
bound
inc
ret
jnp
movsb
lds
inc
mov
xor
inc
add
sub
jnp
enter
shlb
test
into
insl
out
mov
fnstenv
jnp
inc
and
pop
in
mov
jecxz
push
rcrb
push
scas
arpl
pop
aam
xlat
push
icebp
pop
fisubrs
add
bound
stc
adc
and
lock
test
sbb
jmp
inc
hlt
insl
popa
idiv
cmp
mov
lret
sbb
inc
push
sub
shrb
xchg
pop
scas
bound
lret
jnp
sbb
mov
and
and
outsl
pop
popf
adc
fldcw
inc
xchg
mov
icebp
bound
mov
aam
jbe
ss
test
or
push
jmp
mov
sbb
negb
ror
xor
mov
push
mov
dec
xor
push
add
mov
push
and
ja
in
ja
push
inc
fst
out
and
push
add
push
nop
mov
cld
jmp
mov
cmp
mov
jg
aaa
xor
jmp
fs
cmp
mov
int3
push
test
dec
lds
sbb
sbb
xchg
lahf
mov
and
test
lahf
and
pushf
out
xor
jmp
outsb
xchg
fidivl
jne
popa
dec
add
js
test
adcl
test
adc
push
adc
sarb
cwtl
sub
lea
into
dec
addr16
mov
xchg
push
jb
lret
test
add
jp
aaa
fcompl
mov
pop
mov
rol
push
ss
shll
dec
sti
or
loope
ficompl
mov
fldt
js
pop
sbb
push
cmp
fistpll
jns
ror
mov
leave
test
insl
idivb
daa
enter
mov
movsl
mov
dec
dec
xchg
inc
popf
push
cmpsl
cmp
sub
xor
in
push
clc
aas
loop
fwait
fwait
lods
inc
dec
fucomip
push
popfw
inc
or
fs
cmp
lods
sbb
cltd
and
xchg
or
and
mov
pop
cmp
test
mov
aas
pop
int3
shlb
pop
dec
sbb
daa
dec
or
movsl
hlt
add
jg
out
sahf
inc
stos
push
cmp
fldcw
loope
ret
mov
cli
xchg
adc
sahf
push
decl
addb
ljmp
cmc
cld
sbb
movsb
pop
scas
mov
ljmp
mov
jns
ficoms
int3
lods
pop
shlb
xor
xor
mov
mov
dec
xlat
loope
or
sub
mov
enter
mov
add
mov
loopne
pop
out
sub
ficompl
sbbb
pop
insb
jmp
idivl
in
adc
inc
jl
clc
roll
ds
shr
lcall
call
push
aaa
sahf
or
mov
ds
pop
sbb
sub
fdivrs
pop
xchg
je
jae
jbe
push
repnz
adc
in
xorl
scas
mov
mov
jmp
hlt
lock
stc
mov
cmpb
popf
mov
push
icebp
pushf
out
mov
push
std
or
rcll
addb
movsl
or
xchg
cmp
lret
insl
fmuls
stc
and
sub
leave
dec
fsubp
dec
inc
pop
cmpsb
inc
rorl
shll
cli
lds
pop
int3
ret
dec
xor
into
insl
jmp
js
pop
pushf
jo
mov
aam
pop
ds
jle
pop
in
mov
int3
stc
js
lret
mov
adc
adc
lret
in
lods
aad
outsb
es
sbb
or
and
dec
dec
inc
fsubl
sbb
imul
pop
std
rcl
cmp
subl
loope
cmp
dec
lret
ret
push
lret
xchg
arpl
insb
cmp
shl
cli
push
push
lea
push
das
add
js
es
jb
push
mov
cli
call
dec
jbe
cli
sub
iret
push
cmp
pusha
in
roll
lcall
xchg
add
pop
push
mov
dec
dec
mov
test
pusha
dec
rcrl
iret
lret
or
testb
inc
orl
add
pushf
je
xlat
xor
sub
outsb
int
xchg
fwait
loop
rorb
dec
mov
out
inc
adc
sbb
jae
mov
add
xchg
stc
pop
adc
aam
subb
cwtl
mov
lods
testb
adcb
das
cmp
dec
mov
popa
daa
addr16
movsl
icebp
mov
or
sub
mov
stos
mov
mov
cmp
fisubl
add
out
jecxz
push
xchg
fstpt
cmp
jb
dec
dec
mov
out
lcall
pop
mov
mov
daa
mov
insb
popf
xchg
jge
sbb
test
ffree
dec
or
stos
lea
or
and
xchg
les
outsb
jecxz
jp
mov
cmp
mov
sub
and
pushf
dec
xlat
sub
cmp
mov
jo
rol
std
sahf
sub
js
inc
imul
inc
pop
sub
or
popf
stc
popf
shlb
add
int3
push
cmp
xchg
cmpsb
adc
add
movsl
xchg
aaa
xlat
cmc
push
or
push
jmp
xor
pop
mov
sub
mov
pop
daa
sub
xchg
stc
mov
or
dec
adc
inc
or
shrb
ljmp
or
sbb
or
imul
repnz
cmp
popa
or
xor
or
shrb
xchg
leave
test
mov
cmc
dec
scas
int
sbb
xor
inc
xchg
cmp
mov
ss
mov
cmp
in
cli
push
cmpsb
dec
mov
out
sub
mov
cmpsb
or
daa
scas
jg
jmp
push
mov
mov
dec
inc
into
add
fcmovbe
stc
xchg
mov
mov
out
or
mov
arpl
sbb
je
and
movsb
mov
lds
pop
pop
mov
in
js
aad
xor
rorl
or
xchg
hlt
rorl
and
shlb
movsb
push
outsl
push
andb
aas
and
notb
pop
faddl
mov
test
jmp
addr16
roll
xor
in
jmp
add
mov
sbb
jl
mov
rcrb
loope
push
or
pop
loopne
ds
repz
adc
xchg
jg
pop
das
inc
mov
xchg
jb
negl
sbb
xorw
addl
cmp
adcb
sti
sbb
movsb
movsb
lods
sbb
push
fcomp
cmp
cs
in
or
push
inc
xchg
popa
mov
adc
xchg
fbld
std
fs
or
cmp
andl
mov
cmpsl
dec
and
adc
rclb
cmp
pop
mov
xor
jae
add
test
test
cld
jbe
adc
mov
add
sbb
sbb
sahf
into
mov
mov
and
mov
dec
scas
aaa
ja
and
mov
adc
lret
outsl
jp
dec
cmpsb
mov
sub
xchg
mov
fs
daa
enter
into
push
xorb
iret
pop
jmp
dec
dec
adc
iret
add
test
mov
test
int3
rolb
add
mov
ljmp
cmpsb
mov
xchg
fnstcw
lea
xor
push
push
jbe
daa
stc
mov
decl
insb
and
lock
inc
and
jns
dec
sbbl
pop
pop
lret
in
inc
ljmp
add
mov
aas
add
xor
inc
aaa
cmp
push
lods
lods
sub
cmc
jle
out
inc
imul
push
lcall
cmp
or
pop
xor
out
adc
push
push
sbb
cs
xor
mov
jp
adc
mov
jne
xor
push
xor
ret
dec
or
mov
mov
shl
pop
jmp
push
test
sbb
insb
cmc
out
imul
lahf
or
cmp
jp
adc
imul
jg
in
stc
and
lds
scas
lds
jbe
xchg
jb
xor
loop
adc
cmpsb
sub
push
loop
xlat
cmp
or
lods
jl
fs
mov
jbe
mov
or
std
loop
sbb
pop
mov
jg
cmp
mov
mov
enter
inc
sbb
imul
push
add
inc
mov
dec
push
cmp
loopne
and
flds
std
inc
xor
inc
mov
mov
movsb
sub
fidivrs
sub
outsb
sahf
or
push
movsb
and
push
loop
scas
mov
or
das
outsl
pop
test
icebp
call
and
adc
and
cmc
rcll
cmpsb
daa
and
test
fistpl
cs
ficompl
or
mov
add
fisubrl
xor
lods
out
pop
in
or
xchg
repz
fcoms
inc
aam
mov
pop
imul
jnp
test
pop
add
inc
jg
lock
je
repz
add
sbb
fisttpll
stos
xor
mov
rclb
mov
jo
pusha
cmpsb
pop
hlt
jb
inc
jge
jge
or
xchg
fsubrl
xchg
lret
xor
les
mov
xchg
adc
movsb
aad
cmpsl
nop
enter
xor
adc
incl
in
push
dec
jae
and
pop
xor
add
jnp
add
adc
or
inc
cwtl
sub
jecxz
sub
push
test
or
enter
popfw
mov
in
lcall
jae
push
push
lods
or
mov
mov
cwtl
cmp
add
mov
cli
cltd
stc
mov
inc
jbe
loope
mov
out
jns
rcl
lods
adc
and
push
cwtl
loopne
cmp
lret
scas
fmul
xor
shlb
testb
dec
pop
mov
adc
and
and
mov
cmp
xor
jge
pop
lahf
jecxz
jmp
push
pop
mov
bound
adc
adc
sbb
mov
int3
mov
jmp
push
xchg
pop
xorb
les
call
xchg
pop
incb
pop
pop
into
cmp
mov
push
cmp
out
test
inc
xchg
sub
xor
push
icebp
jecxz
mov
out
push
pop
dec
ja
adc
hlt
scas
push
movsl
sub
pop
mov
fildl
sbb
fptan
xor
inc
mov
jo
xorb
add
and
adc
xchg
dec
and
inc
jae
pop
test
and
push
mov
js
adc
lcall
push
or
push
adc
cltd
sub
mov
xor
js
adc
and
mov
inc
cmp
mov
mov
jne
imul
lods
pop
pop
pop
notb
inc
add
movsb
fidivl
and
imul
nop
lahf
out
bound
loop
push
mov
js
add
dec
cmp
outsb
jmp
ss
mov
sub
loopne
xor
pop
sbb
enter
ds
add
jmp
outsl
push
insl
aam
leave
in
push
and
adc
ds
mov
push
dec
adc
jbe
enter
and
daa
xor
aad
rorl
mov
out
mov
ror
cmpsb
xchg
shll
loope
aas
aaa
push
adc
ljmp
sub
es
mov
mov
int
pop
gs
jmp
sub
or
pop
lock
clc
stc
inc
cmp
fwait
imulb
jecxz
mov
loopne
pushf
cmp
test
int
sahf
mov
inc
mov
inc
in
xorl
sub
inc
jmp
movsl
jns
xor
jbe
jb
insl
sbb
adc
lods
mov
and
cmp
mov
lret
loopne
xchg
sub
roll
mov
xchg
push
sub
hlt
xchg
sub
fidivl
mov
xor
data16
imul
mov
out
cld
pop
fwait
cmp
addr16
jbe
jmp
sti
add
int
test
or
cmpsl
sub
xchg
inc
int
mov
fidivrl
mov
or
in
outsl
sarb
outsl
jmp
nop
orb
xchg
sbb
je
fiadds
xor
mov
imul
ret
fisubs
inc
sub
mov
and
mov
mov
arpl
mov
jbe
inc
xorl
cmc
dec
shr
jno
test
adc
bound
pop
jmp
arpl
repz
insb
shrl
sarb
test
xor
sub
sub
mov
push
addr16
push
mov
sbb
add
ljmp
fs
ss
mov
mov
clc
inc
loop
push
sbb
fwait
clc
xchg
mov
ja
pusha
xor
lahf
cld
insl
and
inc
mov
adc
inc
push
dec
lahf
ror
mov
xchg
mov
je
mov
and
jle
stc
dec
adc
int
or
xchg
or
arpl
and
xchg
add
pushf
mov
sarb
mov
sbb
pop
push
pop
mov
mov
int
inc
or
xchg
js
das
xchg
xchg
pop
jge
xchg
and
rcrb
dec
fmuls
inc
shl
rorl
popf
and
xchg
inc
cmp
inc
and
mulps
xchg
scas
add
jmp
xorb
and
jmp
cmp
movsl
push
insb
movsb
hlt
roll
sub
mov
and
inc
in
mov
fidivrl
mov
push
mov
imul
stos
adc
cmc
pusha
scas
pop
push
sbb
mov
dec
rcll
lret
mov
loop
mov
inc
jns
int3
in
push
jp
mov
xchg
je
pusha
ret
push
aaa
imul
push
sbb
mov
inc
outsl
push
addr16
insb
and
jbe
aas
clc
pusha
mov
out
rcrb
dec
in
cmp
popf
loop
jle
shll
cmc
sahf
cli
inc
mov
adc
mov
arpl
shrb
clc
cs
mov
sub
int3
jmp
enter
imul
mov
xchg
jns
sub
testl
pusha
pop
shrb
mov
ret
or
ja
inc
lods
jmp
je
pop
dec
xchg
xor
je
jg
mov
int
cmpsb
mov
pop
mov
mov
jno
jmp
lods
xchg
lcall
fstps
xor
dec
adc
shll
sbb
fsubp
bound
cmpsb
call
xchg
movsb
fstps
push
adc
sub
inc
mov
leave
jns
jge
cmp
mov
arpl
cmpsb
sbb
arpl
cltd
sbbl
xchg
scas
int3
pop
fcompl
dec
pushf
out
jmp
popa
shlb
and
test
daa
mov
addr16
jecxz
call
test
pop
dec
stc
xor
cld
mov
jp
call
push
mov
or
cli
jge
mov
xor
jle
sub
lods
rolb
lahf
adc
xor
sub
in
mov
push
loopne
cmp
mov
sbb
push
jae
dec
std
mov
or
test
jb
and
sti
jecxz
jno
mov
out
jmp
stos
jg
jne
mov
test
xor
rcll
call
inc
or
mov
and
sub
pop
jnp
sub
jg
fstpt
stos
popa
std
and
or
pmaddwd
popf
cld
in
fcomip
out
jg
mov
jno
mov
adc
sahf
mov
pop
jl
nop
mov
mov
fucomi
xor
fsubrs
jge
and
add
in
gs
mov
jae
mov
insl
jne
mov
sub
add
testb
scas
test
ret
hlt
aas
outsl
pop
mov
lods
imulb
subl
sub
inc
sbb
push
test
psadbw
jne
push
fmuls
mov
push
out
popf
cmp
or
sub
push
dec
movsl
sbb
add
fiaddl
nop
test
mov
add
xor
loop
jecxz
pop
movsl
movsb
clc
aam
je,pn
movsl
cmpb
ret
gs
xchg
xchg
jae
add
jp
icebp
mov
dec
les
imul
shlb
or
arpl
mov
mov
cmp
movsl
lret
cmp
lods
dec
inc
sub
dec
fistps
lret
out
sub
cmp
adc
ss
sub
lods
aas
xchg
scas
cmp
imul
fwait
lret
popa
mov
in
inc
or
daa
sbb
push
imul
je
cmc
and
push
dec
and
xchg
jmp
imul
cwtl
add
sub
aam
mov
subl
bound
jnp
aad
aam
push
in
xchg
jae
adc
xchg
bound
mov
je
cmp
fistps
mov
rcrb
jp
inc
ja
xchg
cmp
add
lret
adc
fisubrl
push
adc
push
pop
or
adc
and
in
popa
test
shll
ljmp
push
cmp
xchg
aas
scas
mov
loop
or
xorb
int3
dec
jo
push
rclb
repz
sub
jge
rcr
ret
inc
ret
js
xchg
mov
xchg
stos
push
mov
pop
pop
std
jbe
sbb
push
stc
test
out
mov
jo
movsl
mov
cmp
sub
push
add
mov
sbb
add
push
pop
fdiv
mov
push
cmpsl
imul
mov
mov
pop
push
popa
xor
mov
xchg
inc
or
mov
in
test
loopne
mov
pop
xor
inc
xchg
fs
xchg
outsb
dec
pop
aaa
fs
xchg
ret
pop
in
jae
adc
dec
push
xchg
fucom
test
movswl
mov
lcall
ret
cs
insb
repnz
popf
adc
sbb
nop
stos
rolw
sbb
outsb
out
xchg
push
xchg
pop
aas
test
scas
enter
repz
sbb
sarb
fidivrs
mov
jle
xchg
xlat
stos
adcb
sub
push
fldcw
dec
sbb
push
dec
js
les
dec
xchg
dec
jle
popa
adc
xor
sbb
lret
scas
xor
inc
dec
pop
sub
stc
arpl
popa
xorl
cmpsl
in
aad
je
test
ret
mov
dec
sub
rorl
into
dec
jns
xchg
cmp
sub
adc
lods
iret
insl
jmp
cmp
ss
adc
xor
sbb
test
stc
imul
inc
jbe
pop
jnp
imul
push
cld
insl
lods
and
or
jg
incl
jo
pop
movsl
push
out
push
cmp
and
push
jge
sbb
loopne
cmp
dec
jg
pusha
lds
fnstenv
adc
inc
aam
xor
pop
in
shl
lret
mov
cs
or
fdivs
hlt
mov
pop
mov
icebp
inc
dec
pushf
repnz
stc
cmc
xchg
xor
sbb
test
and
and
jo
mov
iret
rcrl
gs
idivb
cmp
mov
addb
pushf
jnp
pop
adc
add
mov
js
xlat
push
dec
mov
add
jnp
lret
shld
dec
xor
xlat
cmc
push
jle
pop
fs
idivl
adc
xor
shlb
into
lock
data16
adc
lods
and
pop
push
xchg
shrl
mov
sub
xchg
test
push
leave
add
loopne
rorb
out
sbb
xchg
sbb
lock
and
loopne
sbb
sub
sub
jecxz
jp
mov
js
xchg
outsb
test
jmp
push
mov
cmovo
insl
or
mov
sub
dec
pop
mov
popa
sub
pop
sbb
mov
mov
and
rcll
pop
dec
into
and
adc
cmp
les
dec
mov
addr16
sub
sahf
and
xchg
call
mov
pop
fimuls
subl
outsb
ret
fnstsw
cmpsl
push
mov
adc
push
push
gs
pop
js
cmp
loopne
test
sbb
shld
stos
daa
ljmp
nop
lea
in
out
push
mov
sub
leave
push
add
xorb
fsin
lcall
subl
mov
add
sbb
and
in
iret
or
and
pushl
inc
mov
idivb
test
push
ds
lahf
sbb
outsl
adc
outsl
push
jne
and
leave
mov
and
popa
mov
mov
or
pop
cltd
imul
or
inc
ret
sti
xchg
xor
pop
lods
les
scas
jg
dec
cmp
lahf
div
add
fstps
inc
repnz
fistps
cs
pusha
sub
xchg
bound
test
aas
cli
mov
push
xchg
push
aad
or
mov
gs
jl
mov
insl
adc
push
int3
jns
xorl
sub
push
loope
shlb
jecxz
inc
insb
cltd
xchg
sbb
lea
das
lret
mov
add
jp
int3
inc
jbe
stos
mov
mov
gs
pop
sahf
push
pop
decb
xor
xor
sub
fildl
int
bound
aaa
sbb
je
inc
sahf
lods
stc
lret
cwtl
mov
divl
popa
aam
xor
cmp
cmp
shll
xlat
out
nop
or
cli
out
loopne
movsb
jne
inc
xorb
cmpsl
push
sti
jae
cmc
or
stc
push
push
mov
inc
cmp
mov
fsts
pop
int
sbb
aas
mov
lcall
fisubrl
repz
inc
movsb
pop
jnp
push
xor
dec
ja
out
jecxz
stos
adc
xchg
cwtl
mov
sbb
xor
in
es
cmpsl
and
inc
inc
push
pop
jmp
call
fwait
pop
sub
jb
vmread
jbe
pop
mov
fisubs
out
push
fldenv
popw
rolb
push
mov
cmpsb
push
loope
xchg
sbb
fsubrs
xor
ret
repz
sbb
enter
mov
hlt
sub
subl
sbb
test
mov
mov
lcall
add
and
mov
xchg
int
sub
stos
pop
push
movsb
mov
push
int
jno
mov
xchg
mov
sar
jb
sub
pop
cld
sbb
cwtl
daa
and
movsl
lcall
jmp
call
push
xor
shrl
mov
adcl
sub
shl
add
xor
lods
push
mov
ljmp
xchg
lods
xchg
or
mov
push
movsb
cltd
pop
fmul
sbb
fldt
xchg
xlat
js
or
out
mov
rcrb
pop
cwtl
arpl
outsb
sbb
and
or
pushf
sbb
sahf
aad
dec
sbb
dec
push
sbb
push
sbb
xchg
decl
repnz
dec
inc
outsb
sbb
xchg
sbb
mov
or
cmpsl
repz
int
fnstsw
fwait
sub
divl
dec
mov
xor
aas
jns
sbb
subb
std
aas
push
add
repnz
cmp
enter
fnstcw
adc
dec
lret
cmpl
mov
add
sarb
xor
out
stos
push
mov
pop
lahf
mov
cvtps2pd
cmc
fnsave
in
es
dec
cmp
cmp
sbb
cmp
arpl
insl
repz
cmp
cmp
push
lahf
jp
jmp
inc
adc
jo
test
sbb
sub
push
popa
adc
data16
lods
cmpsl
mov
xchg
sarb
cwtl
sahf
cwtl
rorl
pop
sbb
icebp
jo
cmc
hlt
xchg
je
lret
ljmp
pop
sub
sahf
mov
or
int
pusha
das
out
popf
stos
out
mov
es
into
sbb
les
jmp
outsl
jnp
xchg
repz
pop
cmp
push
xlat
and
jecxz
jb
xor
sbb
testb
cltd
push
test
stos
jbe
ljmp
xor
xchg
imul
dec
jno
es
pop
sub
jnp
mov
int
fisubs
imul
cmp
cs
cwtl
or
arpl
push
cwtl
idiv
sbb
add
nop
cmp
loop
mov
lret
xchg
mov
mov
push
add
sbb
fldl
add
outsb
push
xchg
and
push
cli
or
out
xor
ljmp
repnz
popf
jle
sub
push
loopne
dec
sbb
xor
sub
sar
mov
rolb
lods
enter
insl
inc
jecxz
or
mov
jae
ja
or
dec
clc
push
inc
icebp
and
dec
ljmp
dec
mov
ret
inc
push
lods
out
sbb
sbb
nop
cli
and
xlat
jne
sbb
hlt
mov
fwait
cmp
xchg
mov
out
xor
or
test
in
add
sarb
out
fldl
pop
and
scas
jb
pop
std
sub
movsl
aam
shl
pop
adc
es
incb
shll
mov
test
gs
call
mov
mov
mov
dec
cmc
pusha
mov
dec
fwait
movsl
das
pusha
or
sbb
mov
out
pushf
sub
pop
mov
xchg
pop
lahf
sub
repz
outsb
lods
pop
or
push
push
aas
fs
ja
add
stos
cmp
lcall
out
push
addr16
insb
out
test
repnz
jle
and
xchg
and
inc
icebp
lea
scas
xchg
pop
adc
mov
xor
cld
pop
pop
cmp
aam
push
cmpsl
ljmp
cmpsl
pop
mov
pop
jge
loopne
mov
lods
jge
pop
xchg
std
sub
pop
and
stos
out
mov
test
aad
adc
push
xlat
push
fs
or
ret
lock
je
and
lods
inc
roll
test
mov
and
in
in
mov
incb
ljmp
cmp
pop
gs
dec
pop
mov
and
stos
cltd
sar
mov
rcr
sbb
jg
push
xchg
int3
lcall
movb
mov
mov
or
cmovae
sti
mov
lds
xor
call
push
jbe
scas
or
add
scas
sbb
nop
cmp
pop
and
data16
es
gs
imul
or
stos
mov
add
cmp
dec
mov
cmp
xchg
xor
mov
mov
push
enter
pop
inc
jle
push
stos
xlat
dec
xlat
ss
data16
hlt
xchg
xchg
repz
mov
xchg
sub
loop
rorb
jne
sub
or
test
mov
clc
repnz
or
xlat
roll
pop
aas
aas
rclb
jg
mov
mov
in
in
in
xchg
setg
iret
out
in
inc
testl
lock
cs
mov
mov
sti
xor
fmull
adc
in
mov
push
inc
push
xchg
sub
xor
mov
jle
fsubr
mov
and
dec
xor
outsb
jl
mov
test
clc
xor
push
mov
mov
mov
pop
pushf
cltd
mov
outsb
push
mov
repnz
out
mov
fwait
stos
addl
shrl
pushf
xchg
or
or
xchg
push
push
mov
xchg
mov
imul
lods
mov
popa
cmp
mov
mov
pop
add
test
push
rorb
and
mov
push
aas
in
sub
psrld
xor
xor
pop
lds
hlt
or
sbb
movsl
sub
mov
push
mov
mov
popa
pop
mov
inc
mov
jne
xchg
sbb
enter
int
and
ds
inc
sub
jb
jp
dec
int
test
xchg
sub
ja
or
je
jae
pop
rcrb
or
xchg
mov
shl
les
lods
xchg
mov
fdivrs
dec
adcl
fwait
lcall
cmpsl
sub
or
and
push
adc
pop
aaa
call
adc
neg
adc
outsb
mov
sbb
xchg
jge
mov
cmc
je
loop
jg
arpl
int3
dec
push
enter
sub
in
aaa
adc
push
cld
rorl
inc
pop
adc
pop
xchg
push
rolb
ja
daa
add
pop
mov
pop
push
cs
jmp
sub
arpl
adc
imull
cmp
or
mov
xchg
pop
mov
inc
test
sbb
mov
test
bound
mov
insl
xor
dec
or
xor
jnp
call
out
add
es
xlat
lds
ret
les
jns
or
dec
push
jnp
in
cmp
sbb
sbb
mov
push
inc
or
scas
xor
xor
bound
mov
push
xchg
fsts
inc
ljmp
dec
out
mov
orl
mov
jne
dec
xor
lds
enter
enter
std
jo
fiaddl
cld
pop
jg
je
mov
movsb
lcall
sub
dec
lock
ljmp
loop
push
add
xorl
mov
shrb
mov
inc
test
adc
mov
pop
int3
mov
ror
sbb
out
or
idivb
sbb
out
mov
pmuludq
add
jl
jo
xor
das
adc
pop
mov
sbb
dec
or
push
cmp
dec
sti
add
sub
cmp
aad
ss
outsb
push
cmp
cmp
jno
test
fdivl
gs
jnp
sub
shll
add
inc
adc
cmp
dec
xchg
fists
mov
out
push
gs
jae
inc
cmp
jecxz
popa
cs
dec
pop
push
mov
test
outsl
mov
popf
fisttpll
insb
loope
jl
popf
enter
leave
jnp
test
aaa
add
xchg
ds
and
cmp
in
outsl
mov
int3
and
or
cmp
inc
or
pop
inc
inc
adc
mov
mov
or
repnz
pop
mov
pop
mov
or
rclb
shl
sub
out
cmp
jno
jp
push
mov
daa
push
push
or
test
or
js
mov
out
and
aad
mov
jge
fwait
sahf
or
dec
xor
lock
int3
cmp
push
push
adc
pop
aaa
xchg
add
mov
out
sbb
lahf
in
aad
jb
lret
movsb
cmp
pop
in
push
inc
inc
int3
mov
adc
and
sub
fnstsw
or
sub
gs
pusha
cmp
adc
mov
into
sahf
inc
xor
rcrl
mov
jl,pn
or
sub
jne
rorl
jg
ss
aam
sub
cwtl
lcall
inc
mov
xchg
pop
mov
jg
insb
test
jg
lret
inc
jne
push
dec
loop
push
imul
nop
inc
loop
sbb
mov
mov
inc
adc
xchg
test
in
mov
ja
push
les
js
xchg
mov
mov
fmull
pushf
jb
sub
popf
inc
mov
pop
lods
rol
sbb
dec
adc
inc
std
aas
mov
std
mov
pop
in
pop
hlt
dec
mov
mov
lret
rorb
fisttps
test
adc
cmpsb
or
adc
repnz
shll
les
arpl
xor
sub
aaa
test
lret
xchg
mov
shlb
jmp
adc
xchg
mov
push
pusha
insl
push
ret
daa
outsl
xor
inc
xchg
lcall
mov
les
gs
xchg
pop
inc
leave
ss
ss
dec
push
out
sub
scas
aaa
xor
in
and
dec
mov
loopne
jp
xchg
jecxz
push
xchg
sbb
adc
jecxz
data16
xor
mov
cmp
in
and
bswap
inc
push
add
xchg
xor
adc
adc
movl
dec
mov
lahf
not
xchg
flds
jle
clc
adc
mov
daa
add
shl
rorl
push
scas
mov
cmpsl
outsb
mov
jg
push
ds
enter
das
lea
pop
xchg
xchg
sbb
popa
out
or
int
sub
xor
cmc
xor
repz
add
fabs
scas
sbb
rcrl
inc
aam
loopne
xor
adc
cmp
jne
jmp
pop
in
repnz
add
mov
jns
and
test
repnz
add
in
out
add
xchg
mov
push
imul
xor
push
and
and
scas
push
ds
mov
popa
test
pop
out
sbb
repz
enter
pop
pop
lock
aad
fldl
lret
inc
dec
jge
mov
mov
jae
pushf
mov
mov
icebp
cwtl
fistpll
mov
mov
popa
mov
les
jl
out
lods
lcall
jb
fsubr
fcompl
call
sub
test
sbb
or
pop
mov
in
imul
repnz
or
divb
imul
inc
xor
lea
pop
jae
cmp
out
sub
data16
rorb
repz
jl
push
xchg
push
sbb
jge
lret
pop
incl
int3
sbb
ret
mov
push
push
je
xor
push
gs
sub
inc
gs
sbb
mov
out
insl
add
or
sbb
mov
ret
sub
xor
enter
loope
notl
enter
jmp
cmp
popa
addr16
nop
add
add
rcr
pop
mov
mov
popa
andb
jl
push
xor
xchg
mov
add
mov
jns
xchg
mov
pop
cmpxchg
andb
mov
pop
push
mov
in
jp
lods
fstl
lock
sarb
sub
mov
imul
nop
or
mov
jns
push
inc
mov
dec
shl
mov
cs
cmpsb
sbb
and
sbb
mov
popa
test
mov
sbb
mov
cmp
xchg
pop
imul
jnp
arpl
test
and
mov
fidivs
mov
icebp
in
xor
call
cmp
pop
cli
fisttpll
imul
jne
out
ret
ret
scas
pop
sbb
sub
je
xchg
jbe
pop
xlat
mov
leave
loop
outsb
cmpsl
pop
push
shlb
adc
lock
dec
mov
daa
clc
mov
jnp
jo
int
cmpsb
into
and
in
enter
icebp
inc
jg
pop
jp
or
mov
and
adc
xor
push
int3
add
push
outsb
xchg
dec
mov
mov
and
repz
push
adc
iret
jo
mov
fldt
cmpl
push
aas
mov
call
cmpsb
aam
xchg
lods
xchg
mov
mov
push
aas
cmp
test
mov
sahf
inc
mov
aam
aad
cmpsb
mov
jnp
and
jno
fsubr
pop
loope
jae
xor
in
mov
iret
xchg
push
sti
mov
movsl
ljmp
or
bound
out
rolb
lea
cmp
dec
push
and
aas
cld
push
mov
cltd
fstpl
xchg
mov
jp
push
mov
flds
inc
rol
mov
add
leave
cmp
pop
int3
mov
je
jns
sub
sbb
out
mov
push
fsubp
je
push
sub
ret
jo
iretw
and
and
movsb
das
add
mov
inc
add
inc
stc
sub
adc
inc
mov
push
dec
mov
fsubrp
pushf
pop
push
std
pop
push
cmp
movsl
xchg
dec
test
jmp
push
sbb
dec
scas
mov
lret
inc
subb
or
testl
inc
jmp
xlat
inc
out
jae
xor
adc
xor
fsubs
lahf
mov
dec
jg
and
push
les
mov
dec
cs
imulb
sub
fcom
mov
mov
jmp
jge
xchg
mov
xchg
inc
je
sub
lret
lret
bound
jmp
int3
add
test
ret
rclb
inc
lods
mov
or
pusha
dec
xchg
xor
aad
jbe
cmp
test
push
xor
xor
fistl
iret
dec
xchg
xor
adc
xchg
inc
jae
in
mov
cmc
inc
ret
std
es
scas
arpl
jmp
into
insl
int
mov
xchg
dec
mov
insb
bound
jmp
inc
gs
fidivs
aas
xchg
xchg
ss
add
fwait
pop
adc
dec
jg
data16
mov
inc
movsb
pop
sbb
test
and
push
imul
xchg
jge
push
lds
inc
mov
scas
mov
outsb
enter
lods
mov
pop
mov
xchg
cltd
mov
in
inc
cmp
aad
push
sbb
sbb
ret
js
jmp
out
jmp
into
mov
cltd
push
cmp
leave
dec
lret
je
dec
insb
fcom
dec
sahf
lock
int3
shlb
sub
out
test
xchg
xchg
cli
mov
push
sbb
sahf
add
dec
mov
pop
lahf
sti
inc
mov
es
mov
dec
pop
pop
in
or
add
cwtl
lods
mov
imul
sbb
ret
cld
xchg
fmul
inc
mov
xor
jb
mov
jmp
dec
xchg
or
inc
add
mov
mov
bound
cli
fisttpll
hlt
iret
lcall
pusha
stos
sahf
push
xchg
push
out
dec
int
imul
lds
mov
icebp
jno,pt
add
mov
jp
sbb
jno
loopne
repnz
jbe
adc
pop
dec
mov
rorb
add
lods
mov
and
mov
xchg
mov
dec
das
sbb
sub
xchg
sbb
add
jecxz
sti
push
mov
insb
xchg
mov
mov
sbb
pop
pusha
nop
out
mov
je
mov
pop
xor
mov
jne
out
inc
flds
out
mov
aam
inc
hlt
inc
aam
ljmp
inc
push
fcomip
fcmovnu
scas
fs
add
jg
mov
cwtl
jo
xchg
adc
adc
inc
std
loop
push
popa
shll
cwtl
psraw
xchg
adc
lcall
jg
sahf
pop
popf
arpl
push
cwtl
lret
shlb
in
cmc
shll
pop
cltd
rcrl
push
lret
mov
cmp
push
adc
and
movsb
sub
and
in
pop
xchg
sub
les
dec
xchg
fstpl
lahf
jg
xchg
jle
das
popf
sbb
lods
mov
lret
xchg
jno
dec
jae
inc
or
fisttpll
cmpsb
ror
scas
sbb
pop
xchg
mov
out
fildll
xchg
push
icebp
sub
testb
in
mov
fimuls
xor
leave
test
outsb
repnz
cld
out
push
mov
incb
push
xchg
pop
inc
jge
cmpsb
cmpsl
sbb
add
jbe
shl
test
add
xor
addr16
push
or
dec
push
mov
shll
add
movsl
mov
aaa
lock
dec
inc
xchg
lahf
pop
pop
mov
pop
lea
add
test
sbb
xor
fistl
dec
divb
dec
add
test
fwait
push
insl
test
cmp
stos
roll
adc
inc
in
mov
inc
sub
shll
loopne
ss
repnz
fbstp
popa
lret
iret
push
cmp
jp
add
fdivrl
ltr
mov
push
std
xorb
lcall
xchg
dec
dec
ds
pop
lret
sbb
xchg
aad
ljmp
jle
mov
xor
mov
pop
out
aaa
xchg
fstl
sahf
jae
lcall
in
cmp
mov
mov
fsubr
iret
xchg
int3
int3
stc
addr16
das
fxch
lods
addl
imul
push
daa
adc
mov
jne
mov
push
and
ljmp
or
xchg
xchg
push
push
inc
mov
insb
jmp
pop
mov
sbb
adc
and
or
ljmp
push
shl
push
push
lahf
in
cmp
mov
call
cmp
idiv
fldt
in
repnz
and
imul
fisubrl
rclb
ja
faddl
inc
cmpsb
orb
les
adc
rorb
data16
insl
sbb
sbb
rolb
lea
add
sub
lret
jno
filds
lods
sbb
lret
sbb
jmp
add
lret
jae
sub
jno
jle
xor
cmpsl
repz
push
ljmp
push
inc
dec
xchg
ret
mov
cmp
int3
ficomps
into
push
jnp
icebp
rcl
mov
adc
out
jmp
dec
pop
mov
fiaddl
negb
xchg
xchg
std
cli
push
xor
cld
cmp
ret
ret
push
push
add
jae
mov
imul
imul
movsl
or
insb
sbb
add
mov
sbb
pop
data16
lcall
cmc
pop
out
inc
and
inc
leave
jnp
data16
out
jbe
movsb
clc
adc
repz
daa
mov
inc
out
add
sub
inc
inc
jmp
andb
leave
pop
std
inc
insl
push
cmc
add
pop
dec
mov
jne
push
iret
jb
stos
xchg
out
mov
movsb
xor
fs
cmp
jns
adc
jo
xor
mov
jbe
shlb
adc
pushf
jno
stos
push
sub
aam
into
inc
mov
insl
pop
rcrb
cltd
testl
mov
movsb
test
nop
fidivrs
xchg
mov
fsubs
add
les
jmp
repz
jae
pop
xor
daa
ja
test
xchg
cmp
lock
sbb
mov
push
loop
sub
insb
sub
xchg
push
and
cmpsb
push
dec
cmp
jnp
add
and
iret
das
push
sub
stc
je
pushf
cmp
mov
inc
out
cmp
push
iret
cld
test
xchg
sahf
scas
out
inc
ret
jne
lret
sbbl
pop
call
lds
fsts
sahf
shr
or
loopne
jb
jb
cltd
fs
xor
aas
pop
hlt
lock
push
daa
jns
jnp
imul
sub
push
out
jbe
dec
cmp
lock
imul
mov
pop
xor
iret
push
lds
or
into
and
arpl
pusha
dec
shrl
pop
lcall
loopne
pop
dec
stc
push
jge
or
sbb
xchg
popa
rorb
int
xchg
cltd
scas
daa
inc
pop
xor
mov
xor
xchg
adc
ja
xchg
push
fcoml
movsb
imul
and
bound
xchg
in
cwtl
adc
repnz
adc
pop
outsb
and
mov
xchg
cmpsl
mov
das
popf
in
stos
jb
cmpsl
xlat
mov
fldcw
push
pusha
mov
nop
jge
repnz
push
inc
pop
inc
movsb
cld
add
xchg
xor
call
shlb
adc
sub
cmp
pusha
adc
cmp
test
mov
xchg
jno
lahf
data16
mov
inc
xor
in
mov
cs
inc
push
cmp
mov
push
outsl
ja
fbstp
or
and
mov
gs
sbb
sub
and
fmuls
mov
sbb
jbe,pt
das
push
fcompl
jno
xor
jne
cmpl
pop
imul
data16
jge
add
repz
bound
in
jae
insb
dec
aas
pop
dec
xchg
adc
pop
loopne
aaa
fiadds
pop
and
fbld
or
adc
push
cmp
dec
push
jo
enter
call
addr16
xlat
shll
xor
enter
fs
adc
outsb
mov
daa
leave
enter
nop
icebp
cmp
insb
negb
adc
fld
xlat
dec
clc
hlt
sub
xchg
sbb
je
jb
lods
mov
aad
bswap
fidivrs
sub
inc
sahf
xchg
pop
and
mov
sub
mov
jecxz
and
mov
sbb
xchg
pop
mov
add
pop
movsl
adc
pop
lcall
xchg
in
mov
movsl
xchg
push
in
aam
xchg
push
hlt
test
xor
std
jbe
push
mov
and
mov
sarl
pushf
lods
loope
out
adc
cmc
push
sbb
mov
cmpsl
push
pop
mov
jae
popf
shl
dec
lahf
test
in
ss
filds
sbb
cmp
pop
jp
or
ja
scas
mov
mov
jg
sbb
pusha
dec
xorl
lret
add
insl
fs
mov
jmp
xor
inc
lea
lods
js
rorb
in
xor
dec
mov
ds
sbb
xor
outsb
add
iret
mov
test
je
rolb
and
push
add
or
push
jns
adc
jp
mov
cmpsb
imul
xor
mov
roll
dec
sbb
jl
push
mov
std
and
sub
adc
cld
mov
mov
jmp
flds
jae
outsl
loopne
lods
push
int3
cmc
and
inc
stos
out
and
jnp
sarb
xchg
and
cmp
jo
lods
jno
in
adc
ret
mov
or
mov
xor
inc
or
mov
adc
sbb
les
incb
rorb
dec
mov
cmp
mov
or
sahf
xchg
adc
xchg
decb
sbb
stc
out
mov
sbb
pop
xchg
cmp
cmp
cmp
clc
cmc
xchg
sbb
adc
sub
mov
repz
lahf
jae
adc
jno
inc
and
inc
mov
inc
out
add
int
cld
pop
lcall
dec
rorb
aad
and
push
add
xchg
jae
or
mov
pop
adc
pop
pop
jl
mov
stc
sub
iret
mov
shl
lds
test
and
add
scas
mov
iret
mov
sbb
mov
add
push
ret
cmp
data16
insb
jbe
aas
shrb
or
ljmp
sar
iret
mov
inc
sti
aas
adc
mov
ret
jns
test
mov
popf
mov
cmp
jmp
mov
unpcklps
and
push
in
push
add
mov
imul
out
xchg
xchg
fisttpl
inc
fsubrl
testl
cmpsl
push
sub
scas
add
data16
sub
xchg
adc
in
push
push
sbb
cmp
out
mov
out
dec
shr
xchg
mov
ret
js
outsb
aas
and
rcll
mov
cmp
aaa
cmp
and
push
sub
lcall
rclb
jecxz
pushf
lahf
pushf
push
mov
push
inc
int
stos
and
iret
push
repz
stos
sarl
pop
push
mov
xor
push
pushf
push
and
push
out
jae
pop
jg
lret
mov
lcall
mov
ds
and
sub
cmp
es
fidivrl
into
xor
jg
mov
lods
outsl
ret
jp
xchg
push
xor
or
inc
inc
call
xchg
fisttpll
cli
out
push
cmp
pop
imull
enter
jmp
or
outsb
jo
mov
pop
pusha
ret
mov
test
pop
lds
xchg
push
inc
lea
or
mov
or
bound
loope
sub
cmpsb
add
dec
xchg
pop
cmp
in
pushf
ss
scas
add
test
ret
call
insl
in
push
aad
push
cs
mov
cmp
stos
xchg
ss
sahf
mov
dec
sbb
ljmp
adc
es
aad
cltd
fldt
iret
jae
inc
sub
imul
xchg
aad
pop
pop
mov
cmp
fldl
cmp
sbb
dec
pop
dec
jge
in
pop
sar
cmp
leave
and
inc
stc
dec
sub
adc
insb
lock
test
dec
imul
out
xor
jns
scas
mov
test
aad
or
lds
sahf
repz
int
xchg
lea
icebp
inc
adc
cmp
sbb
cmp
push
jno
fsubrs
js
icebp
xor
or
test
imul
add
dec
aaa
leave
sub
jbe
inc
test
pop
xchg
mov
sarl
fmull
lret
mov
addr16
ficoms
xlat
sti
loopne
jecxz
mov
lcall
ss
mov
call
jbe
addb
mov
pop
cmc
jns
rcl
jne
fidivs
sub
ds
jns
sbb
cmp
cmpsl
mov
sbb
pminsw
mov
rolb
stos
cltd
pop
inc
xchg
mov
mov
daa
aad
mov
dec
inc
xchg
add
lock
push
xor
jmp
adc
mov
sub
xchg
pop
nop
jne
push
fiaddl
mov
xchg
jle
jne
pop
clc
cmc
xchg
mov
sub
jnp
shl
add
stos
jne
movl
stc
int
test
dec
push
data16
mov
mov
shl
mov
mov
inc
cmp
negl
rcll
movsb
add
ja
andb
nop
aaa
dec
enter
mov
jp
sarb
mov
dec
pop
sub
cmc
adc
xorb
pop
fsubrs
aam
ss
mov
lret
pusha
and
lcall
out
add
cltd
or
cld
fwait
loopne
sti
scas
add
fmull
mov
pop
mov
push
enter
push
jp
cld
arpl
cmp
rorl
mov
push
or
lret
out
repz
lods
push
mov
fsts
push
xchg
dec
xlat
aam
in
js
sbb
das
ss
in
pop
mov
js
cld
dec
andl
cld
push
hlt
and
sub
loop
cmp
sub
jae
xchg
frstor
mov
pop
imul
jb
loopne
xchg
mov
sbb
or
mov
cmpsl
sbb
dec
xor
aas
xchg
xchg
rclb
pop
inc
mul
xlat
repz
push
sahf
aaa
aas
mov
pop
cmp
and
push
pushf
cmp
cmpsb
adc
add
sbb
filds
daa
test
sbb
mov
mov
into
and
and
sub
lret
mov
ret
data16
push
cmp
test
cmpsb
adc
inc
push
popf
or
mov
sub
adc
fstl
push
repz
xchg
mov
in
cltd
cld
out
mov
adc
push
shrl
out
gs
imul
aas
and
ficoms
push
std
loopne
jbe
push
mov
cmp
xor
sbb
shrb
jno
mov
je
imul
mov
in
fnstenv
xchg
adc
gs
push
ja
jo
lds
sub
push
push
outsl
cmp
and
mov
cli
les
loope
add
and
iret
jnp
push
lcall
xchg
xchg
pop
mov
jo
aas
sbbb
out
push
mov
sbb
xchg
aas
mov
imul
jl
shlb
js
sbb
inc
inc
sbb
pop
andl
ret
or
fstpt
pop
aam
call
out
mov
nop
repnz
push
adc
push
scas
inc
jno
push
jnp
stos
xchg
and
int3
or
jg
lahf
mov
sbb
ljmp
push
adc
mov
fwait
mov
jecxz
incl
ja
mov
mov
nop
sti
mov
xchg
jl
mov
cmp
sbb
cmp
negl
mov
sub
lfs
addl
movsl
loope,pn
loope
mov
sub
aam
and
std
or
push
sbb
mov
test
mov
pusha
sbb
mov
xchg
fdecstp
cld
sub
dec
adc
dec
std
loope
xchg
shll
sbb
and
pop
fstpl
fstps
mov
fdivl
or
sbb
pop
inc
xor
sbb
cmp
jl
adc
out
out
push
xor
or
push
fstl
lahf
lret
bound
repnz
jmp
stos
andb
test
stos
test
shr
js
nop
scas
mov
mov
push
push
in
test
movsl
lods
aam
cltd
popa
cli
pop
out
lea
mov
push
dec
add
fdivp
lock
sub
inc
ret
fisttps
sti
pop
sahf
int3
in
repz
cmp
dec
roll
insl
repnz
mov
das
lock
cltd
cli
jno
syscall
imulb
fiadds
push
sub
cld
xchg
push
add
mov
dec
jmp
jne
sbb
mov
dec
pop
int3
add
imul
test
push
or
sbb
inc
test
test
mov
inc
add
mov
in
div
fcoml
sahf
pop
push
jmp
pop
cmpsb
xchg
xchg
into
adc
adc
cmp
or
gs
fcompl
ret
jle
jge
add
lods
js
loope
sar
dec
dec
dec
test
scas
mov
stos
add
pop
adc
xchg
dec
rorb
sti
cltd
gs
sub
dec
jge
inc
mov
mul
lcall
cmp
adc
out
cmp
mov
xchg
lds
sbb
pop
or
mov
repnz
adc
aam
scas
push
jl
ret
xor
insb
call
aam
lds
jae
sub
insb
mov
jmp
loopne
test
cmp
jge
testl
push
inc
push
in
mov
cmpl
ror
jae
popf
scas
xchg
cmp
iret
push
nop
mov
jno
jmp
adcb
imul
arpl
push
call
mov
popa
mov
arpl
sti
mov
jge
mov
js
cmp
scas
sbb
adc
push
mov
xchg
dec
pop
out
cmpsb
cwtl
jge
xchg
lods
in
xor
add
or
and
fwait
lds
fisttpl
nop
mov
mov
lock
sar
inc
mov
nop
ror
sbb
repz
adc
inc
addr16
cmc
jb
lcall
jnp
or
mov
mov
pop
movsb
push
jge
fwait
push
cmp
inc
mov
push
add
inc
add
dec
sahf
and
push
cmp
popa
mov
and
les
in
hlt
xchg
mov
push
adc
ror
inc
in
mov
push
or
std
sbb
test
xchg
sahf
shlb
loope
out
je
push
add
bound
icebp
mov
sbb
inc
loopne
out
push
mov
jle
push
sarb
or
cmp
loop
push
sahf
enter
push
mov
mov
push
scas
sbbl
push
addr16
cmpsl
imul
leave
aad
in
pop
cs
pop
xchg
call
loopne
dec
aaa
cmpsl
cmp
jbe
mov
lock
lds
cltd
mov
mov
xchg
lret
push
push
jb
outsl
or
cld
xor
pop
mov
xor
inc
push
dec
push
std
dec
loop
inc
push
out
push
mov
dec
clc
test
push
xchg
test
sbb
cmpsl
mov
mov
jmp
add
or
xor
cli
pusha
scas
dec
lret
lea
imul
mov
push
sti
xlat
stos
cmp
xchg
and
notl
int
cmp
sub
jle
sbbl
push
pop
mov
push
mov
lahf
push
push
cmp
js
cmp
loop
mov
mov
loope
lock
cmp
pop
rorl
sub
jbe
inc
cmc
or
test
cmp
mov
xor
sbb
mov
arpl
loop
cmp
jbe
arpl
loope
dec
mov
mov
cmpsl
jg
je
pop
imul
jg
popa
es
cmp
imul
sbb
dec
mov
data16
adc
jo
and
faddl
movsl
jp
iret
lahf
loopne
and
jmp
test
push
xchg
sbb
dec
cmp
je
ss
fdivl
cmp
jae
into
sub
repz
lcall
cmp
jns
lds
adc
add
jae
and
les
add
sub
mov
movsl
into
aam
out
adc
pop
dec
inc
out
or
pushf
lods
mov
ficompl
sub
test
mov
adc
int3
pushf
sub
inc
pop
js
xchg
xor
inc
jecxz
sbb
push
xor
pop
lea
sub
inc
lret
cli
and
push
insb
jmp
lret
xor
in
aaa
jo
add
faddl
pop
xchg
test
mov
jbe
jno
pop
loope
mov
and
notl
adc
mov
jg
sti
dec
addb
insb
push
or
loope
cs
es
adcl
shr
mov
lods
loopne
add
mov
ss
fnstenv
aaa
push
les
mov
cmp
movsl
lods
dec
mov
inc
or
jb
lea
or
dec
lcall
xor
out
lods
and
mov
sahf
pop
adc
sub
rcl
outsl
push
cmpsb
mov
or
test
fidivrs
scas
or
xchg
out
sti
xlat
pop
icebp
add
pop
adc
movsl
jns
test
xchg
scas
call
inc
shll
repnz
cmp
stc
lods
push
pop
cld
fwait
jp
xchg
sti
clc
adc
and
int3
mov
shlb
xchg
addr16
xchg
inc
popa
loop
int3
outsb
cs
adc
cmp
frstpm(287
fldt
and
push
sub
fildll
jle
cmp
divb
mov
stos
scas
loope
push
mov
jo
cmp
sbb
lret
ret
test
lock
jle
push
leave
jle
dec
jnp
test
push
xchg
lahf
aad
int3
sub
sbb
lret
out
push
pop
jo
addr16
fsubrp
xchg
push
mov
jno
inc
icebp
addb
sbb
into
jge
std
negb
fstl
in
bound
or
mov
mov
imul
sbb
pop
push
and
scas
adc
or
popw
xor
clc
mov
and
jb
jns
pusha
out
and
fdiv
mov
test
adc
add
push
jb
cwtl
pop
movsl
push
call
scas
mov
jmp
xchg
into
scas
je
pusha
shl
cwtl
mov
fs
mov
sbb
adc
out
jl
cld
out
pop
fcomps
jne
mov
fldl
je
adc
sbb
dec
push
push
pop
mov
mov
mov
push
fmull
arpl
adc
in
inc
adc
cmpsl
xor
pop
jmp
fildll
test
mov
push
lahf
dec
inc
sbb
repnz
fwait
or
or
icebp
orb
push
cltd
xor
cmp
mov
lcall
andl
pop
call
loopne
outsb
or
mov
leave
xor
adcb
mul
xchg
jp
sub
lods
xchg
jno
lahf
adc
scas
jnp
ds
cmp
and
fs
jp
dec
add
xor
repz
out
sub
add
inc
cmpsl
test
dec
je
mov
aam
sbb
out
mov
xchg
loopne
inc
mov
mov
mov
inc
pop
jle
int
and
xor
sub
mov
psubq
movsb
je
imull
insb
xchg
cwtl
add
inc
pushf
or
xor
lods
inc
xor
fdivl
dec
and
inc
dec
jno
rolb
das
dec
cwtl
bnd
iret
xchg
mov
ds
mov
mov
mov
into
xchg
mov
mov
fidivl
add
test
jne
fsubr
cli
sbb
pop
push
or
xor
sub
ja
xchg
mov
and
scas
aad
shll
lret
hlt
movsb
add
xor
shll
mov
xor
lds
xchg
icebp
push
lods
in
adc
cmpsb
ja
inc
mov
movsb
les
cltd
bound
push
leave
into
mov
add
scas
pop
mov
or
inc
sti
mov
xchg
cmp
xchg
cmpsl
aam
or
cmp
mov
inc
popa
adc
and
jl
nop
int3
push
push
dec
push
daa
pop
push
ds
arpl
aas
loope
sub
loope
xchg
lret
out
shr
sbb
xchg
xchg
call
fdivs
pop
insb
dec
pop
adc
fisttps
jl
dec
cmpsb
cmpsl
and
jns
or
cmc
cmp
sbb
sbb
dec
or
mov
inc
jp
sbb
cmpsb
sti
cltd
jmp
cmp
mov
push
popa
cmp
inc
subl
push
es
push
dec
les
xor
or
add
mov
insl
arpl
popa
fdivs
data16
fwait
and
and
xor
xchg
pop
sub
jnp
out
movsl
mov
push
cmp
adc
jno
jmp
mov
sub
int
xchg
in
add
pop
arpl
dec
in
mov
adc
pop
xchg
scas
jnp
mov
dec
xchg
or
mov
add
pop
addb
pop
lock
xor
add
jb
insb
add
int3
push
fldt
roll
pop
cs
arpl
adc
jo
adc
xchg
push
lods
jmp
test
scas
and
outsl
icebp
mov
insb
bound
push
mov
and
imul
repz
xchg
cmp
jp
pop
repnz
push
loopne
es
in
loop
or
fistl
scas
clc
sbb
out
not
shlb
rolb
add
mov
imul
xlat
add
xchg
loope
mov
push
addl
in
mov
notl
les
aas
int3
outsb
xchg
lret
leave
sub
stc
pop
in
mov
fmulp
leave
pop
or
jle
movsl
fs
dec
aas
lods
cld
cmp
cmp
inc
mov
mov
mov
cwtl
add
enter
jmp
in
ror
push
cmpsl
inc
xor
outsl
mov
icebp
mov
jbe
mov
jnp
faddl
leave
jno
shlb
mov
pop
mov
les
rorl
xchg
arpl
xlat
pop
xchg
in
push
xchg
sub
popf
adc
cmpsl
lahf
cmp
test
stos
imul
xor
xchg
xchg
lods
inc
lret
fimull
dec
sub
mov
loope
xchg
mov
ss
data16
aam
clc
mov
xlat
arpl
arpl
push
js
sbb
ret
cmp
xchg
lods
clc
cmpsb
cwtl
or
xor
shll
jmp
and
mov
push
stos
pop
sub
roll
push
mov
insb
mov
out
jbe
roll
ds
bound
mov
or
arpl
fidivl
in
jb
sub
cmp
jne
sysenter
mov
subps
aaa
mov
out
in
pop
pop
and
popl
push
cmp
shrl
pop
mov
lock
inc
js
mulb
sub
sbb
cli
gs
pmaxub
imul
cwtl
cmpsl
test
fldcw
movsl
mov
fnstcw
inc
int
sarl
sbb
out
add
psubw
mov
fsubp
mov
in
xchg
push
in
xor
out
mov
push
rclb
cltd
xchg
pop
mov
fimull
ret
cmp
ret
sarb
fistl
pop
sbb
sbb
fmull
dec
mov
sbb
push
scas
inc
idivb
sub
mov
mov
in
repnz
adc
pop
test
je
xorb
and
push
dec
pop
pop
jecxz
jp
int3
and
mov
mov
sub
aaa
lret
mov
popf
sbb
or
fisubrl
fstl
xchg
fucomp
jl
dec
fs
fimull
mov
and
out
or
adc
rclb
pop
xor
test
in
push
lret
jg
xchg
es
cmp
daa
out
dec
cs
popf
imul
repnz
rorl
je
jnp
movsb
lahf
sbb
inc
test
out
imul
mov
xor
in
sub
cmp
rcrl
push
push
jae
stos
insl
ja
lret
mov
xor
push
imul
out
mov
ficompl
pop
and
jmp
pop
iret
push
loop
or
and
mov
test
shlb
xor
pop
cltd
lods
pop
rorl
addl
fsts
lea
dec
aad
dec
pop
loop
cmpsl
test
inc
and
mov
add
mov
jbe
std
aam
sbb
f2xm1
mov
cli
ret
push
jno
or
dec
out
sbb
jmp
ja
push
xchg
dec
and
je
mov
aad
xchg
popf
lret
shll
pusha
sub
fisttps
lcall
jae
xor
hlt
pushf
je
sbb
mov
ret
sub
out
inc
jns
xchg
xchg
xchg
sub
add
or
mov
sbb
inc
scas
mov
ljmp
mov
jmp
aas
das
pop
cmp
std
jno
jmp
frstor
dec
mov
test
js
dec
lahf
mov
call
enter
imul
mov
icebp
dec
pusha
pop
test
in
rcrl
decb
sbb
mov
add
idiv
pop
adc
adc
xchg
inc
inc
or
pop
jae
fstpl
sarb
sub
xchg
orl
push
mov
push
nop
dec
int3
adc
push
push
pushf
and
jo
in
jl
jmp
jle
or
dec
movsl
std
inc
cmp
mov
andb
and
int3
push
mov
mov
cs
sbb
push
out
in
push
sub
lock
push
xor
aad
sbb
sub
pop
or
jmp
xor
loop
push
push
mov
test
mov
in
mov
jecxz
xor
shrl
xchg
jne
mov
ljmp
mov
jmp
ret
stos
pop
mov
sahf
js
mov
lahf
xor
mov
js
es
fimull
mov
dec
mov
jnp
push
and
add
daa
les
xor
insl
shlb
mov
xorb
out
inc
push
push
add
mov
cmp
sbb
stos
lahf
jmp
in
stos
cmp
ftst
pop
dec
add
fisttpl
cmp
mov
pop
cwtl
loope
push
mov
xor
shr
pushf
into
xor
pop
out
sar
andb
sub
or
fmulp
rorb
mov
xchg
pop
mov
mov
fsts
push
ret
xor
maskmovq
mov
cmp
xchg
ret
insl
shl
adc
xor
inc
adc
dec
decb
js
inc
out
scas
std
push
jge
adc
js
arpl
and
cmp
xor
xor
xor
dec
std
aam
imul
out
adc
mov
outsb
jmp
test
ds
test
rcl
pop
push
push
or
or
sti
mov
les
pop
insb
inc
cmp
and
add
data16
inc
inc
lcall
in
or
into
in
inc
je
xchg
int3
call
repz
js
addr16
inc
mov
cmpsl
and
push
iret
aad
nop
fimull
and
movl
in
push
mov
jno
in
mov
adc
fmuls
fwait
jno
dec
push
stc
or
addr16
cmpsl
outsl
add
fsubs
pop
mov
fucom
clc
aad
xchg
pop
xchg
inc
push
add
aam
xchg
inc
leave
bound
or
add
sub
je
sub
xchg
std
lods
adc
inc
ljmp
mov
or
out
cmpsl
movb
ret
cmp
adc
sbb
and
xchg
bound
out
mov
push
mov
pop
pop
dec
add
aad
test
sub
or
sbb
mov
pop
mov
xlat
jmp
iret
test
out
jo
ret
push
jge
jne
mov
ja
and
adc
inc
inc
push
dec
notb
test
je
aaa
cwtl
imul
stc
mov
pop
jns
add
leave
out
clc
sub
adc
std
or
das
ret
pop
out
shll
lret
ds
mov
clc
insl
ljmp
add
jmp
jno
subb
cwtl
dec
stos
fwait
jne
aam
xor
shll
sbb
jge
ljmp
cmpb
mov
pop
cmp
aad
inc
mov
dec
ds
add
sub
mov
pop
mov
sbb
rol
mov
mov
or
aam
jecxz
mov
fcompl
mov
test
fisubrs
mov
clc
out
pop
push
xchg
pop
mov
lret
repnz
jecxz
fs
mov
addr16
mov
xchg
jnp
adc
and
insl
inc
stc
mul
cmp
in
mov
ret
push
xchg
cld
popf
shrb
pop
or
add
xor
xchg
mov
pop
xor
inc
mov
icebp
gs
push
test
adc
shlb
rcl
adc
adc
ja
mov
shll
inc
push
into
mov
dec
js
insb
mov
andb
shrb
fldl
es
fdivs
into
add
jge
inc
mov
xchg
mov
mov
cmpsb
es
fnsave
outsb
nop
repz
or
xchg
in
jmp
cmc
mov
cwtl
fiaddl
mov
out
sub
mov
mov
outsb
imul
hlt
lods
imul
xchg
sub
lods
ds
aad
add
and
add
daa
rcr
jbe
pop
xor
lea
dec
fidivrs
lret
je
adc
loopne
jmp
aam
xor
das
sbb
repz
bound
sbb
mov
sbbb
dec
lods
jmp
xorl
jno
fidivs
data16
push
pop
pop
cmp
cwtl
jae
aad
jge
inc
ret
js
movsl
aad
sub
lock
fs
into
pushf
jns
ret
dec
pop
into
dec
mov
sbb
jno
lret
out
iret
subl
mov
and
ret
std
addl
fsubs
aad
xchg
enter
in
xchg
ljmp
je
ret
outsl
movhlps
movsl
and
mov
repz
dec
scas
cmpsb
addr16
xor
inc
stos
pop
cmp
cmc
sub
push
dec
pusha
lret
inc
or
or
scas
popf
jo
push
mov
xchg
addl
sub
pop
pop
lahf
mov
xor
xchg
xor
and
pushf
pop
addr16
pop
jne
pop
lock
shlb
lret
cs
stos
mov
dec
cli
das
mov
pop
fldt
mov
mov
mov
or
jb
frstor
cld
movsb
in
or
repz
or
adc
jbe
in
mov
sbb
insb
nop
mov
into
out
xor
xchg
sub
adc
repz
xchg
xor
inc
lea
mov
xchg
cmp
or
insb
dec
push
rorb
inc
repz
mov
and
push
cli
leave
dec
js
mov
faddl
repz
mov
arpl
mov
mov
sbb
pop
sub
pop
js
iret
sti
xor
mov
push
fmuls
call
pop
jae
popa
dec
mov
xchg
adc
mov
xchg
lahf
insb
adc
add
sub
cmpb
les
sub
aas
push
ret
popa
iret
iret
mov
call
mov
jno
rorb
mov
mov
mov
adc
cmp
jno
push
cmpsl
cld
xchg
rorl
pop
mov
hlt
testb
call
stos
xor
fstpl
mov
cmpsl
lcall
jbe
xor
and
push
push
add
push
dec
push
mov
or
adc
pop
xchg
stos
xchg
push
inc
imul
xor
andl
inc
repnz
cmp
pop
cld
inc
or
mov
push
mov
shlb
mov
jae
sub
mov
xor
adc
push
xchg
sbb
mov
fdivp
fstpl
aam
dec
clc
sar
stos
and
scas
pushf
inc
out
iret
cld
leave
mov
ffreep
maskmovq
mull
rcrl
lods
sub
inc
test
loop
ficomps
mov
xchg
sti
xor
pop
mov
add
cmpsl
push
adc
inc
mov
movsl
ret
and
mov
das
scas
sub
outsl
fstps
negl
xchg
add
or
adc
roll
loope
cld
das
jno
and
dec
pop
fnstcw
sub
mov
inc
aad
mov
cmp
xor
sahf
popa
loop
and
dec
lret
inc
push
push
cmp
pop
xchg
inc
dec
stos
popf
insl
xchg
jne
maxps
or
sub
stc
sbb
into
mov
fadds
jnp
mov
mov
jnp
das
das
cmp
aaa
jg
xchg
push
or
sub
loope
mov
jle
rolb
loop
mov
and
push
push
rorl
mov
xchg
and
addl
hlt
inc
dec
pop
cmp
xchg
or
jl
pop
jp
mulb
mov
lods
fsubrl
int
or
jno
xor
js
xor
dec
mov
test
lds
inc
jb
test
ljmp
out
aas
jns
test
insl
or
popa
push
stc
in
roll
xchg
shlb
int
out
insl
mov
fisubrl
push
rcl
repnz
pop
cmp
nop
fnstsw
or
mov
or
mov
or
xchg
dec
mov
add
fwait
push
std
cmp
mov
out
int3
xchg
mov
addr16
cmpsb
testl
lods
aam
sbb
cmp
xchg
jge
and
add
inc
imul
fdivrp
sti
fs
sahf
push
cmp
test
mov
jne
and
sbb
aam
sbb
loopne
test
popf
add
rcrb
cmpsb
in
out
push
push
insb
mov
dec
cmp
clc
imul
mov
cmp
xchg
push
dec
inc
cmp
imul
or
call
mov
test
stos
xor
and
popa
popf
jae
dec
sbb
dec
dec
pop
jmp
jle
jb
mov
dec
add
insb
inc
jno
in
mov
ret
out
fisubrl
and
fisttpl
xchg
int3
jo
push
lods
mov
imul
ljmp
jb
xor
rorl
or
xor
cs
das
repz
cmpsb
loope
stc
jge
icebp
xor
daa
mov
add
dec
notl
mov
mov
mov
shlb
loopne
cmpsb
mov
in
fldl
insb
iret
out
mov
push
and
dec
pop
stos
push
mov
fwait
and
nop
hlt
sub
roll
popa
icebp
in
out
xchg
inc
notl
dec
andb
xchg
jnp
into
sbb
fsubl
nop
or
xchg
movsl
inc
cld
pop
xchg
movb
es
bound
jno
loope
add
sub
push
out
test
xlat
add
aam
lahf
adc
sbb
lahf
cmpsl
xorb
jmp
lds
lcall
insb
pop
fcmovnb
dec
push
bound
int3
pop
sbb
shlb
xchg
sub
jge
fistpl
xor
psubd
adc
mov
sub
das
dec
sbb
ficomps
ljmp
aam
cli
scas
enter
sub
iret
inc
sub
xorl
mov
push
xor
push
data16
insl
outsb
inc
mov
jg
int
inc
pop
fcmovnbe
and
ret
sub
enter
cmp
incb
jo
leave
dec
pusha
sub
jge
mov
fildl
out
cmc
iret
lahf
insl
push
cmp
fcoml
sbb
mov
daa
inc
jp
mov
sub
sbb
stc
cmp
popa
fwait
rorl
jge,pn
jno
insb
xor
enter
xor
mov
ljmp
pop
adc
mov
xchg
jns
inc
addb
in
dec
fs
in
jge
dec
sub
mov
push
pop
hlt
sub
in
pushf
pop
pop
out
pop
xor
xor
mov
stc
dec
jns
nop
mov
popa
jg
les
scas
inc
adc
stos
add
in
ficoml
pushf
jne
inc
mov
int
enter
push
aas
pusha
int
bound
cltd
fsubl
aam
test
aam
lahf
lret
xchg
popf
popf
add
flds
fldenv
insb
inc
mov
test
push
imul
test
je
push
aad
jnp
icebp
pusha
fdecstp
gs
pop
push
mov
mov
loop
push
cltd
scas
add
push
and
into
les
add
test
enter
stos
mov
and
notl
popf
xchg
push
or
mov
ficoms
and
mov
sub
in
mulb
les
lds
add
mov
dec
push
int
pop
pushf
aam
aam
cmp
jbe
mov
inc
daa
adc
jae
sbb
sbb
sub
cmp
adc
xchg
movsl
xor
lock
dec
leave
aas
mov
arpl
pop
inc
push
jg
jge
loopne
inc
scas
imul
mov
js
mov
cmpsl
lret
scas
or
mov
cli
shll
add
mov
jp
jnp
subl
dec
push
cld
rcl
xchg
js
inc
mov
test
out
or
jns
dec
jmp
add
jne
cmp
cmp
xchg
sub
and
insb
addr16
mov
ucomiss
xchg
mov
dec
and
mov
xlat
aad
xchg
imul
shlb
xchg
repz
mov
mov
lock
fs
cmp
mov
fildl
xorl
cmc
out
mov
jbe
mov
pop
mov
insb
je
daa
xchg
dec
jg
dec
and
stc
in
push
idivl
jno
push
aam
dec
mov
sbb
ds
mov
out
mov
hlt
cltd
push
xor
sbb
pop
pop
clc
adc
mov
scas
rclb
lret
lea
inc
outsb
out
xchg
stos
ret
jp
adc
adc
test
mov
xchg
sub
mov
mov
mov
push
jg
mov
adc
push
aaa
push
ljmp
or
inc
or
add
clc
lret
jmp
enter
xchg
push
push
aam
jle
iret
cmp
xchg
mov
sbb
std
ret
dec
xor
push
inc
and
push
mov
push
cmp
ljmp
sub
fs
push
dec
mov
ljmp
dec
cmpl
andl
pop
jmp
inc
es
mov
bsr
dec
repz
inc
jbe
outsb
fs
jp
cmpsl
push
dec
adc
xchg
jecxz
lahf
sbb
idivb
std
push
adc
sbb
fmuls
add
outsl
ljmp
dec
sarb
inc
lahf
add
rcl
daa
sub
dec
sub
mov
iret
pop
cltd
int
xchg
ljmp
and
dec
fisubs
add
shll
or
call
testb
pop
xor
dec
std
pushf
mov
pop
cmc
and
cli
scas
and
fisubl
rol
cld
mov
jl
and
movsb
sub
sub
mov
add
pusha
icebp
add
fwait
push
or
xlat
cltd
sub
fnstenv
sub
xor
pop
mov
pop
xchg
push
aas
dec
mov
fiaddl
xor
xor
lods
in
dec
in
rcll
mov
out
and
xchg
add
cli
rcll
je
aaa
lahf
mov
pop
mov
in
ret
push
push
pop
xor
loope
dec
xchg
nop
cltd
sub
loopne
or
jb
sbb
xlat
scas
mov
adc
in
jmp
jne
faddl
lcall
lods
hlt
hlt
sahf
dec
test
sarb
sti
lock
rclb
and
jne
mov
outsb
xlat
cmp
in
pop
cmp
push
int3
cwtl
add
xchg
sub
mov
cli
cmp
mov
cwtl
iret
push
or
movsl
push
aas
dec
pushf
pop
mov
xchg
imul
outsl
mov
pop
mov
mov
pop
dec
and
test
pusha
or
fisttpl
ds
scas
jg
ffreep
aas
mov
lret
xchg
testb
xor
xor
cltd
decl
sbb
push
shll
sti
into
xor
mov
ss
leave
aam
shl
cli
bound
arpl
sbb
roll
sub
mov
fcmovu
inc
insl
fisubl
adc
jne
movsb
add
loopne
clc
ss
xlat
lcall
mov
int3
fidivl
mov
pusha
ret
js
or
jl
push
lock
loop
jl
xor
adc
dec
xchg
mov
mov
sbbb
jge
int
iret
and
add
pop
das
hlt
adc
adc
aaa
mov
cltd
xor
loope
mov
adc
sbb
dec
pop
hlt
outsl
xchg
mov
out
sbb
fwait
xchg
add
sbb
push
cli
inc
pop
mov
sub
shl
inc
pop
adc
add
ret
mov
in
divb
lods
pop
arpl
sbb
and
lods
lea
push
mov
cmpsb
pusha
fldt
cmp
ret
sbb
sarl
inc
jb
mov
and
enter
test
jmp
xchg
inc
inc
xchg
leave
stos
data16
and
imul
mov
push
into
in
xchg
xor
add
es
in
adc
aas
xchg
add
mov
sbb
je
repnz
pop
mov
inc
daa
daa
cmp
outsb
pusha
cmc
pusha
vpaddsb
sbb
ret
fwait
adc
sahf
sahf
mov
jle
int
push
lret
test
xor
and
inc
lds
repnz
xchg
sbb
hlt
rep
loope
dec
dec
mov
adc
xor
testb
je,pn
push
inc
imul
ds
jnp
subl
xchg
jle
or
outsl
loop
jo
movsl
dec
xor
lahf
cmp
or
loope
lods
mov
lock
int3
jge
stc
sub
stos
jecxz
std
xlat
in
popl
icebp
ja
or
mov
or
pand
jns
mov
jne
int
jo,pt
push
inc
pop
cmp
add
lds
idivb
xchg
lret
icebp
andb
inc
out
lahf
cmp
push
inc
cs
push
jnp
mov
lea
cmp
xor
ja
adc
push
push
test
mov
cmpsl
or
push
sarb
dec
imul
ret
jmp
mov
adc
xor
push
and
shlb
cmc
aaa
out
dec
xor
aas
jbe
mov
cmc
pop
xchg
inc
je
pop
xchg
orl
sbb
cmc
mov
sub
mov
push
or
sbb
mov
test
movsl
xchg
aaa
push
mov
or
xor
mov
pop
push
or
stc
lcall
pop
inc
push
out
cmpl
call
in
ja
fs
pop
ret
dec
cs
mov
icebp
sbb
sahf
out
sub
mov
insl
pop
lret
pushf
mov
sub
adc
sub
je
jg
pop
push
test
dec
testl
test
xor
icebp
inc
sub
xchg
outsb
sbb
and
outsb
sbb
dec
sub
push
mov
rcrl
movsl
push
push
js
vshufps
insl
orl
loopne
or
insb
dec
jno
repz
dec
fs
push
sub
push
mov
fimuls
je
div
inc
aam
mov
mov
mov
test
fld
push
cmp
jecxz
sbb
xchg
cmp
lods
in
es
sahf
mov
inc
mov
popf
ljmp
std
mov
cmp
push
dec
aas
xchg
int3
test
dec
jne
xchg
sub
icebp
xchg
xchg
cli
adc
insl
jae
cmpsl
mov
fcoms
cmp
ret
jo
sub
cmp
aas
xchg
jb
pop
idiv
push
sub
test
cld
mov
mov
sbb
adc
sbb
lret
in
push
stc
dec
cmp
scas
std
daa
mov
stc
cmp
mulb
cmp
out
lret
jp
leave
pusha
stos
ds
adc
addr16
inc
in
jg
xor
push
add
lock
mov
out
cmp
sub
lods
arpl
jne
lahf
xor
mov
jge
cld
in
je
pop
out
dec
fdivrl
repnz
adc
mov
push
inc
mov
inc
pushf
or
jecxz
cmpl
xlat
ret
pop
dec
cmc
push
out
pop
push
inc
and
push
mov
pop
xor
sub
mov
lds
xlat
scas
pop
dec
shr
xchg
pop
mov
pop
out
fiadds
jmp
push
call
cmp
xchg
xor
pop
lret
cmpl
cmpsb
mov
pusha
sti
mov
pop
rorb
pusha
sbb
mov
jo
fwait
scas
hlt
pop
dec
sub
hlt
lcall
fcom
mov
mov
gs
dec
push
daa
xor
or
cmpsb
loop
pop
sbb
jl
adc
mov
sbb
sub
push
addr16
aaa
xchg
stos
or
push
adcl
in
lahf
adc
aas
mov
repnz
hlt
dec
fdivp
pop
cmp
pop
iret
fcomps
dec
sahf
inc
loope
xchg
push
arpl
aad
imul
push
popf
jns
nop
repnz
push
push
inc
sub
jmp
push
pop
addr16
or
ret
movsl
xchg
add
movb
ja
mov
stos
mov
xchg
orl
or
jns
sbb
sub
push
pop
pushf
enter
jno
sarb
loopne
ds
push
fisttpl
mov
insl
shl
or
push
push
stos
aad
int3
jp
inc
loope
add
jae
mov
jo
test
pop
fstps
mov
imul
fstpt
xchg
sbbl
shll
test
dec
push
sub
dec
out
lea
sub
repz
repz
cmc
cwtl
mov
push
daa
adc
push
rorb
pop
add
sbb
icebp
popa
push
adc
loope,pt
sbb
mov
jecxz
pop
insl
pop
jle
test
inc
cmp
in
cmpsb
sub
lods
ljmp
sub
test
test
dec
nop
cltd
dec
jg
pop
jb
push
jo
mov
mov
mov
cmpsb
ret
sub
test
in
loop
push
mov
sub
mov
mov
out
sbbl
xor
mov
pop
cltd
insl
daa
movsb
xchg
sbb
xor
clc
push
mov
cmc
push
shrl
cmc
push
xchg
jbe
imul
mov
call
lcall
rcl
adc
mov
orl
pop
and
sti
cmp
mov
inc
aam
addr16
cmp
cmp
call
dec
and
dec
es
mov
subb
jecxz
insl
hlt
xchg
shr
dec
mov
xor
mov
into
test
pop
adc
cmp
decl
add
pop
pop
jl
jmp
xor
inc
fwait
sbb
stos
or
ja
sbb
add
popa
repnz
filds
cwtl
in
or
inc
jecxz
scas
rol
es
pop
out
xchg
clc
and
arpl
shlb
add
push
mov
mov
out
pop
dec
push
and
adc
fmul
mov
pop
inc
cs
rolb
in
inc
cmp
add
clc
dec
imul
pop
add
outsl
jmp
into
repnz
adc
nop
in
cmp
sbb
inc
inc
in
in
mov
mov
icebp
mov
adc
mov
insl
push
dec
mov
or
sub
lret
pop
loopne
aam
ja
sti
aad
std
shrb
sbb
mov
pusha
pusha
cmc
scas
dec
jge
sbb
add
mov
sahf
dec
xchg
cmc
clc
fwait
push
cs
mov
fdiv
jmp
in
push
xchg
push
pop
fildl
add
test
push
mov
push
rorb
and
sub
cmpsl
add
mov
pop
test
or
dec
ret
icebp
mov
ret
push
dec
mov
push
add
hlt
jns
in
jno
inc
movsl
shrb
stc
popa
add
push
xchg
push
xor
in
mov
pop
imul
sbb
cmp
mov
cmp
mov
std
add
or
outsb
cmpsl
in
idiv
into
xchg
lahf
les
and
cmovs
xchg
push
test
out
and
sub
fcomps
fdivl
loope
or
xchg
les
lea
inc
cmp
ljmp
dec
lcall
out
in
sub
mov
mov
jp
pop
xor
test
pushf
out
or
dec
aaa
or
lea
pop
insb
lret
pop
mov
in
loopne
fcoml
int3
fs
iret
mov
out
and
dec
andl
lock
addr16
ret
cmp
in
cmpl
divl
cmp
inc
test
mov
add
xchg
mov
sub
mov
arpl
sbb
mov
imul
adc
xor
lods
sarb
mov
push
cmp
pop
out
pop
adc
clc
ljmp
lcall
jge
scas
pusha
inc
ss
enter
and
mov
sbb
sbb
add
or
jecxz
xchg
mov
int3
lock
lret
out
mov
repnz
stc
push
outsl
adc
jecxz
or
lock
fidivrs
rol
cmp
iret
addr16
xchg
cmpsb
mov
rcrb
mov
fstpt
pop
push
jno
mov
and
adc
adc
fcompl
pop
les
jl
jle
adcl
xor
xlat
leave
stos
jae
push
gs
sub
ja
xor
mov
leave
cmp
sbb
in
adc
jns
loopne
sbb
xlat
xchg
mov
test
icebp
jmp
jae
mov
lea
out
daa
xchg
test
and
popf
mov
cmp
or
movsl
or
test
popa
mov
lret
mov
fbld
xlat
inc
lret
fs
pop
inc
loop
add
add
inc
xchg
dec
out
dec
mov
fdivrl
and
pop
adc
movsb
jb
cmp
enter
out
and
stos
and
adc
loope
repnz
cltd
mov
dec
je
sub
jecxz
adc
inc
lock
addb
inc
push
fsubp
mov
jmp
shlb
push
cmp
pop
scas
push
rcrb
cmp
xor
xlat
mov
xor
dec
sbb
movsb
inc
loopne
std
stos
test
dec
jae
jecxz
mov
aad
adc
adc
leave
mov
into
ret
out
jle
jb
jmp
pop
int3
and
iret
imul
andl
lods
out
pop
repz
call
xchg
js
push
adc
test
aad
mov
xor
inc
mov
sbb
fidivl
push
inc
mov
sbb
cwtl
aaa
call
lds
sub
mov
and
jbe
pop
mov
mov
and
jne
sbb
adcl
mov
mov
rolb
stc
cmp
push
sbb
pop
stos
mov
jle
sub
xorl
out
mov
pop
shlb
push
add
enter
outsl
imull
insl
stos
loope
bound
add
punpckhbw
mov
adc
cwtl
and
int3
stos
cmp
sub
int
dec
movsb
gs
stos
repz
mov
xchg
movsb
ss
mov
loop
popa
add
xor
sarb
enter
jne
xchg
inc
ja
stos
in
adc
xchg
add
jb
xor
push
mov
and
fstpt
mov
loope
mov
sub
sbb
ja
adc
push
imul
mov
ss
addr16
int
scas
popf
add
cmp
lahf
jg
lret
pop
into
push
cmp
arpl
mov
or
jp
add
jle
add
pop
inc
xchg
lahf
insl
xor
and
aas
pop
cmc
mov
aam
fldl
xorb
sbb
cltd
jl
imull
imul
enter
loope
lds
jge
mov
leave
int3
jnp
cwtl
jle
pop
stos
mov
out
mov
inc
lods
dec
and
mov
clc
int3
test
push
loopne
or
and
cmp
faddp
shlb
inc
jle
sbb
fdivl
in
nop
fnstsw
push
push
clc
or
or
cmp
fwait
xor
mov
aam
mov
jl
push
adcl
pop
and
subb
pop
ret
out
lcall
xor
sub
and
sahf
dec
negb
or
cwtl
test
mov
mov
inc
push
jae
pop
xchg
cmpsl
test
dec
jl
pop
cld
lret
cs
pop
lds
add
cmp
jns
pop
js
in
push
stos
mov
nop
xor
xchg
lahf
aaa
dec
out
adcb
pop
cmp
sub
ljmp
test
lahf
xchg
dec
lds
testl
pop
jge
shrl
and
sbb
fsubrp
xor
js
mov
stos
cmp
xor
movb
fbld
push
mov
mov
sub
mov
cs
pop
and
mov
cli
ds
mov
enter
dec
mov
cmp
jne
mov
cmpsl
xchg
adc
inc
push
test
int3
pushf
push
pop
icebp
cwtl
cwtl
xchg
sub
movsl
stos
mov
dec
jne
fimull
in
nop
jge
cmc
nop
xor
xchg
loopne
std
pushl
sub
fsubs
push
xchg
lahf
and
push
dec
enter
out
out
sbb
fidivl
or
dec
push
mov
xor
negl
fstpl
sbb
pop
pop
xor
push
xchg
or
push
xor
lds
push
push
xchg
fucomp
push
mov
jb
repz
in
fbld
and
lods
jne
jbe
xor
iret
les
pop
leave
sbb
mov
or
stc
lea
mov
fcomps
loope,pt
or
inc
js
push
push
fiaddl
mov
xchg
fidivrs
cld
fcoms
add
and
mov
mov
sub
cli
clc
inc
mov
ja
scas
xor
lock
adc
rorb
sub
add
orl
or
and
add
hlt
dec
icebp
pop
inc
ret
jle
inc
movsb
dec
testl
jl
and
call
iret
xchg
loopne
dec
nop
add
cmpsl
cmpsl
sti
nop
adc
lock
sub
pop
int3
push
mov
leave
inc
lahf
fldl
mov
push
dec
aaa
lods
test
mov
dec
or
add
push
or
out
lret
and
bound
ljmp
and
sub
lods
lea
and
mov
adc
inc
sub
sbb
jno
add
inc
sub
adc
int
xchg
sub
loope
cld
mov
ljmp
push
cmp
inc
shll
mov
out
jmp
fcomps
loop
stc
mov
daa
popa
idivb
push
rorl
sbb
push
aad
lea
mov
pop
stos
mov
mov
out
push
imul
adc
mov
pop
cmp
test
pop
lret
push
mov
adc
mov
xor
and
imul
mov
std
popf
xchg
pop
xor
push
mov
mov
jne
lret
test
into
enter
dec
iret
cwtl
inc
in
clc
clc
mov
call
mov
andl
mov
fisubrs
or
jl
lret
dec
insb
repz
adc
xor
lcall
icebp
push
pop
inc
add
shlb
xchg
mov
sub
xchg
std
loope
mov
insb
dec
pop
add
ja
push
mov
scas
adc
imul
dec
scas
in
mov
or
bound
dec
repnz
mov
scas
push
xchg
cmc
inc
lahf
addr16
sti
ljmp
jae
scas
sub
pop
adc
jmp
mov
adc
nop
xlat
push
js
push
sbb
je
ret
jo
out
mov
cli
das
push
cmc
xchg
dec
dec
jmp
jecxz
mov
push
inc
ss
in
jl
dec
mov
jne
arpl
subb
jns
fwait
data16
mov
addr16
js
mov
pop
jmp
sbb
xchg
sbb
shlb
inc
clc
inc
mov
and
jge
leave
pop
sub
popf
lcall
incb
test
jbe
fidivrl
push
mov
cmpsb
pop
lahf
leave
movsl
arpl
dec
aam
dec
aam
aaa
enter
mov
jge
mov
in
cmpsb
lock
ds
out
mov
sbb
incb
dec
jg
add
sub
cmpb
hlt
aam
push
adcl
sbb
pop
lock
pusha
mov
and
mov
stos
nop
jne
sahf
insl
insb
adc
mov
daa
pop
pop
sub
int3
mov
mov
cmp
arpl
in
imulb
push
jnp
mov
ja
mov
sti
mov
add
sbb
mov
sbb
push
gs
sahf
jp
or
cltd
xchg
aaa
jl
jmp
xchg
xlat
test
sub
push
mov
xor
ja
rorl
in
jp
aas
jl
fiaddl
idivl
mov
ds
gs
xor
cli
xor
loope
mov
or
pop
mov
sbb
pop
or
inc
jne
xor
rcr
cltd
sbb
aas
push
negl
mov
jmp
ret
or
adc
pop
jbe
mov
and
nop
stos
shlb
hlt
push
mov
dec
das
ljmp
inc
pop
adcl
jecxz
daa
icebp
shrb
ljmp
mov
sbb
push
rolb
imul
add
inc
rcrl
cwtl
fld
hlt
or
daa
mov
jae
jno
in
adc
stc
test
icebp
jl
stc
inc
cmp
push
jecxz
test
sub
ja
mov
xchg
pop
lock
xchg
outsb
add
push
mov
iret
or
bound
lods
pop
cmp
ljmp
fwait
lock
sub
cmp
lds
push
dec
jmp
push
cwtl
in
mov
and
mov
xor
sbb
popf
push
loop
inc
sbb
lds
movsl
dec
movsl
adc
js
xor
fmuls
xchg
dec
dec
les
mov
test
mov
jmp
in
pushf
loopne
das
leave
outsl
push
sbb
js
je
test
mov
inc
mov
pop
mov
fidivs
xchg
out
add
jle
sub
push
rclb
push
leave
in
mov
jne
dec
adc
fmuls
scas
es
add
cmp
testb
pop
in
ljmp
mov
xor
lcall
fsubs
mov
test
jg
imul
mov
cmp
push
shlb
and
sub
in
pop
mov
mov
mov
movsl
adc
jp
dec
mov
add
mov
mov
jnp
lahf
clc
xor
outsl
vmread
mov
clc
push
fwait
jg
jmp
add
lret
sbb
mov
es
jp
mov
sarl
fldt
mov
std
je
rolb
ja
push
frstor
add
or
adc
in
inc
cmp
xchg
dec
sahf
cmp
jg
xchg
push
add
pop
cmp
jl
out
imul
xchg
push
imul
cmpsb
subb
into
or
inc
adc
test
xor
jge
mov
xor
mov
repz
dec
lds
lods
jecxz
jbe
push
fiaddl
fwait
jns
repz
ja
adc
fcomip
sub
adc
adc
hlt
jge
incb
movsb
cmpl
xchg
cmpsb
enter
pushf
mov
pop
stos
push
movsb
cmp
inc
dec
sbbb
sub
shrl
dec
sub
mov
rcl
xchg
fcomi
pop
xchg
insl
fwait
xor
stos
inc
pushfw
dec
daa
rcr
hlt
pop
scas
icebp
push
scas
jns
stos
cmc
rcll
xchg
fmull
dec
loop
cmp
gs
cli
test
mov
jp
sub
pop
clc
std
lcall
ds
push
cmp
pop
shll
dec
add
add
mov
or
pushf
or
inc
mov
dec
cmpsb
pop
sti
out
out
and
es
cmc
xor
mov
cli
das
xor
insl
insb
adc
fucomi
je
outsb
push
jle
xchg
and
lds
cmp
in
ret
aad
in
in
pop
fdivrs
shl
sub
pop
notb
arpl
les
pop
rorl
dec
loope
dec
cmp
inc
ss
imul
smsw
pop
mov
sti
jmp
nop
shl
movsb
scas
cmpsb
sub
out
mov
test
mov
dec
mov
or
adc
sbb
or
dec
shrl
jno,pn
jae
ljmp
out
and
pop
lods
xor
pop
push
mov
outsl
pop
ss
mov
push
push
divb
pop
adc
dec
jp
movsb
das
cmp
pop
das
cmpsb
jno
inc
sahf
jo
call
or
mov
push
fisubl
repnz
mov
pop
or
test
das
lock
ret
xchg
push
int
sbb
xchg
cmp
ret
xor
adc
push
mov
push
addr16
lds
xor
pop
or
xchg
mov
cmp
test
and
push
stc
insl
cmp
ljmp
sub
sub
fildl
data16
cmp
loope
or
inc
out
adc
push
mov
pop
and
adc
jne
mov
mov
mov
loopne
imul
push
dec
sbb
xor
divb
mov
adc
jle
pushl
xlat
sar
sbb
or
in
adc
sbb
xchg
xchg
adc
dec
inc
sti
or
je
cmp
ret
sub
fiaddl
and
imul
pand
shll
iret
inc
ss
testb
call
mov
cli
test
push
out
pop
jle
aam
sub
in
cmp
pushf
popf
xchg
cmp
pop
xchg
stos
xor
scas
loopne
stos
xchg
cmp
cmpl
repz
mov
pop
add
mov
adc
in
rorb
cmp
xchg
cmc
outsb
pop
ja
pop
in
xor
lret
pop
jns
xor
and
aam
mov
dec
push
mov
sbb
cmp
xor
test
bound
ficoms
jbe
push
pop
mov
movsl
xchg
cmp
mov
mov
hlt
jbe
fwait
cmc
rorb
and
inc
mov
ja
cmpsl
daa
in
pushf
ljmp
mov
insl
shll
loopne
dec
icebp
mov
imul
imul
sbb
test
popf
icebp
mov
xchg
adc
loope
mov
out
dec
loopne
cmpsl
in
sub
in
rcll
ret
sbb
and
cs
fadds
call
outsb
ss
xchg
jne
pusha
out
lahf
add
xor
push
in
ret
gs
add
dec
and
dec
sub
fimull
inc
push
lods
pushf
sbb
nop
or
icebp
fcomp
in
xchg
cmp
out
jns
bound
hlt
add
mov
mov
xor
push
dec
and
mov
fucomi
pusha
xor
in
xlat
mov
add
popf
in
push
pop
push
je
orb
outsb
mov
stos
stc
cmp
pop
adc
inc
cwtl
scas
sub
sti
lahf
std
fsubs
andb
cmp
xchg
mov
in
or
js
rcrl
out
cwtl
sub
gs
and
daa
jle
xchg
ror
aad
not
push
out
inc
mov
cld
and
sbb
in
mov
push
fists
push
out
arpl
mov
cs
mov
lea
mov
aad
imul
testb
adc
scas
lea
sub
imulb
jnp
add
repz
daa
add
fwait
popfw
sub
xchg
jp
fwait
jge
push
jge
test
and
mov
insl
inc
stc
ficoms
xor
int3
outsb
cmp
arpl
test
sbb
dec
dec
int
int3
pop
mov
cs
ror
dec
mov
xchg
dec
hlt
into
cmpsb
shrl
mov
xor
add
and
cli
mov
sub
test
mov
movsl
pop
icebp
cmc
push
add
pop
outsb
popl
push
adc
push
jno
fistps
stc
mov
emms
sbb
cmpsb
imul
into
mov
ds
adc
ljmp
pop
aaa
dec
test
sbb
stos
mov
repz
xchg
add
mov
push
xor
push
jp
lock
insl
inc
icebp
pushf
adc
ja
sub
inc
xor
adc
pop
test
and
es
notl
adc
movsb
mov
xlat
test
mov
fnstenv
scas
loop
cli
fs
xor
and
in
pop
xchg
push
loopne
cmp
mov
mov
inc
xor
adc
imul
push
fwait
call
jae
outsl
inc
adc
jnp
adc
in
test
lods
and
mov
mov
in
inc
ljmp
mov
loop
lds
sbbl
out
xor
mov
fsubrs
enter
pop
sbb
subl
shlb
mov
push
jg
and
nopl
inc
adc
ja
mov
push
xchg
lea
jg
push
mov
adc
aas
mov
sti
add
repz
xor
push
fstp
jl
push
pop
mov
mov
ss
lods
and
fdivrs
in
call
add
ror
daa
test
bound
divl
imul
insb
hlt
mov
mulb
cmpsb
lret
xchg
mov
pop
js
jmp
xchg
scas
jmp
xchg
sub
add
mov
in
dec
push
shrl
dec
xchg
aad
int3
aaa
sbb
or
out
xchg
sbb
or
cmp
xor
xchg
mov
mov
push
and
sub
cmp
hlt
xor
pop
cs
ret
sbb
je
push
imul
daa
and
and
pop
loope
in
and
out
cvtdq2ps
scas
sbb
add
pop
sub
lea
js
dec
adc
mov
mov
push
xchg
xchg
out
dec
daa
test
into
push
sub
sti
mov
les
mov
cmpsl
pusha
in
inc
mov
pop
fstps
mov
ffree
pop
jnp
insl
or
movsb
or
adc
fildl
mov
fucomi
and
sub
or
add
jbe
cmp
cli
gs
sti
xchg
pushf
js
inc
xor
push
dec
lds
out
sbb
jecxz
mov
test
stos
cmp
lret
insb
pushf
xlat
lret
push
dec
inc
push
mov
cmp
lods
lcall
cli
inc
mov
gs
lahf
sub
fdivrs
int
push
scas
into
xor
push
shl
mov
loop
mov
call
cltd
nop
xlat
daa
inc
push
adc
lea
test
sbb
out
aad
lret
jbe
fstpt
jge
call
mov
cltd
lds
test
outsb
xchg
cmp
fmull
jo
pop
and
cld
mov
je
cmp
jp
xor
jp
ret
into
mov
mov
fistps
xchg
inc
mov
lods
pusha
sbb
fsubr
pop
sub
inc
lock
jmp
mov
mov
push
push
fst
push
add
cmpsb
and
lcall
outsl
dec
pop
push
add
mov
mov
cmp
lret
iret
roll
stos
adc
js
jecxz
add
testl
jb
xchg
or
add
and
inc
cmpsb
pop
dec
jne
push
in
mov
jmp
xlat
and
pop
mov
cwtl
andl
lock
cmpsb
mov
int3
stos
shl
cmp
xchg
xor
jmp
or
xchg
and
bound
add
cmpsb
iret
test
add
jle
dec
mov
push
enter
iret
xor
push
jo
rolb
jmp
jbe
dec
mov
ja
ds
jmp
mov
or
cli
or
push
or
mov
cmpsb
subb
fcmovbe
xchg
push
mov
dec
fldcw
imul
repz
and
or
inc
sbb
sub
cmpsb
sbb
cltd
sti
aas
mov
movsb
mov
enter
push
mov
push
mov
pop
add
pusha
sub
xchg
push
imul
add
xchg
inc
rcrl
js
add
mov
add
ret
inc
movsl
insb
push
call
sti
test
ds
roll
lds
jle
lds
dec
imul
jne
shrb
js
push
aaa
adc
mov
pop
lret
movsl
push
addr16
add
dec
push
cmpsb
cld
add
sub
and
das
leave
imul
pop
stos
movsl
jns
lahf
sarl
cli
daa
fwait
cmpsl
data16
jl
popf
cmp
js
lret
outsl
repnz
fstl
push
mov
jmp
adc
cmpsl
xchg
and
lret
dec
push
mov
js
push
and
and
insl
sbb
ret
sahf
shrl
hlt
push
adc
adc
mov
ds
pop
jno
rcrl
jmp
jno
sub
jno
int
leave
loopne
mov
mov
pop
mov
cmpb
mov
fstl
mov
sahf
push
mov
cmp
loope
adc
cmp
add
xor
out
jb
pop
int3
outsb
pop
fiadds
cmp
inc
jge
sub
push
or
sub
insl
insl
mov
xchg
and
je
les
jge
out
out
fwait
in
jo
adc
mov
cmp
push
cmp
push
cmpsl
adc
pop
push
imul
insl
xchg
cltd
je
and
mov
mov
sub
jne
sbb
movl
push
and
inc
inc
add
rcll
jge
and
and
sbb
add
cltd
fwait
lahf
daa
pop
int3
sbb
rorb
xchg
arpl
into
cwtl
movsl
push
call
add
and
rclb
jno
xor
popf
andl
push
inc
jne
in
cli
or
push
adc
dec
sbb
xchg
jo
mov
fwait
mov
scas
js
lea
pop
jnp
shlb
mov
jge
int
or
add
mov
lret
pushf
push
fptan
loope
mov
out
dec
pushf
insl
enter
pop
mov
shlb
insl
jp
test
shrb
loopne
clc
push
dec
push
inc
xchg
ljmp
xchg
or
inc
mov
fwait
insl
dec
adc
and
pop
cmp
pop
pop
inc
xor
dec
jge
neg
jno
lods
mov
sahf
add
or
fisubl
dec
ret
rcr
movl
out
aad
loope
add
add
scas
sbb
test
sbb
jg
pop
and
mov
jbe
test
jg
add
ror
inc
bound
inc
or
xor
sahf
mov
inc
les
outsb
mov
mov
pop
xor
ljmp
cltd
rcll
adcb
mov
bound
dec
stc
jne
dec
imul
repz
aam
sub
jo
lcall
xchg
popf
addl
sahf
mov
push
cltd
negb
cmp
pop
stos
test
jnp
push
inc
push
xor
test
mov
les
scas
test
jle
bound
and
divl
mov
movsb
shrb
lret
xor
lods
mov
lods
aad
ss
pop
stos
inc
push
stos
dec
adc
neg
aas
mov
mov
nop
inc
mov
mov
and
sub
mov
push
sub
pop
ja
pusha
mov
jbe
pop
sbb
xchg
inc
int
addb
pop
in
into
test
not
mov
mov
cli
mov
lds
jnp
dec
push
dec
mov
jno
mov
cmpl
pop
test
pop
call
cwtl
pop
ds
divb
adc
jnp
in
es
mov
and
push
imul
sti
jno
jo
sub
mov
cwtl
pop
inc
pop
icebp
or
sbb
ror
mov
popa
scas
cltd
in
lods
adc
lret
idiv
jecxz
xor
lahf
push
divb
push
test
cmpsl
dec
add
clc
ret
and
xchg
jl
jp
lods
popa
call
test
fisubrl
mov
mov
stos
in
movsb
ret
sbb
sub
iret
xchg
and
push
fistps
adc
rcrl
ds
rorl
jmp
cltd
je
xchg
jne
mov
popa
loop
xor
mov
pop
mov
mov
fdiv
fs
pusha
mov
push
lahf
dec
xlat
jp
leave
stc
icebp
and
js
xor
sbb
add
aaa
into
jno
push
pop
out
jle
mov
rcll
lret
xor
cs
inc
cmp
cwtl
push
test
addr16
out
mov
push
fmull
fs
shlb
nop
adc
push
push
aam
and
sub
sahf
xlat
mov
adc
loopne
hlt
mov
and
xchg
mov
xlat
cmp
mov
mov
ret
add
popa
xchg
out
cltd
xor
add
lock
sti
rcrl
repz
iret
nop
sbb
dec
adc
push
sbb
addl
inc
arpl
jmp
xchg
dec
iret
int3
mov
mov
nop
mov
mov
cs
fstpl
push
push
hlt
popf
or
sub
jg
and
and
outsb
mov
xchg
test
mov
and
mov
mov
hlt
jae
inc
sub
push
popa
sbbb
dec
call
repnz
ljmp
mov
xrelease
xchg
add
add
mov
mov
lret
lahf
stc
pop
sub
cmp
xor
stos
inc
pusha
lahf
decl
out
xchg
mov
les
cli
fcoml
das
push
add
ret
insl
cltd
shl
out
insb
into
int3
add
fdivrs
or
cld
pop
mov
out
mov
push
jge
inc
fwait
mov
scas
adc
addr16
repz
in
mov
xchg
notb
mull
sbb
jno
aam
push
fnstsw
test
fwait
inc
das
xchg
inc
inc
or
loope
les
dec
sub
mov
cmp
testb
dec
fwait
sbbb
mov
arpl
or
push
outsb
std
xlat
les
cmc
jo
lret
shrb
cmpsl
scas
out
mov
pushf
loop
push
mov
repz
cmp
jp
push
mov
fmulp
inc
pop
enter
sbb
mov
rclb
fiaddl
lods
mov
nop
enter
cmp
inc
std
stc
and
or
adc
xchg
mov
ficoml
test
jo
cmp
xchg
sbb
scas
adc
jmp
ds
lahf
jg
fwait
sbbl
push
cmc
mov
pop
adc
jp
fnop
xchg
pop
push
push
and
sub
inc
mov
data16
xorl
and
cwtl
in
push
mov
out
or
mov
sbb
jp
cs
lea
ret
adc
mov
je
inc
xor
insb
jg
add
add
stc
movsl
stos
mov
loope
in
push
stos
inc
push
inc
shr
mov
icebp
cwtl
push
mov
icebp
lahf
fidivrs
cmc
sub
pop
dec
cmp
mov
jge
sbb
or
lods
fs
mul
popf
enter
adc
push
insb
mov
xchg
test
ret
loop
mov
popa
aad
jmp
jle
and
scas
fstp
or
mov
aam
lcall
jmp
mov
test
xor
lds
mov
loop
shl
push
mov
in
imul
xchg
adc
inc
inc
xchg
ljmp
or
mov
call
push
leave
je
clc
xchg
leave
jp
sahf
sbb
popf
jmp
into
pop
mov
jp
jmp
xor
jmp
notb
sub
icebp
mov
into
mov
outsb
push
jbe
mov
jl
add
cmpsb
xor
dec
xchg
cmc
sbbb
dec
es
xchg
insb
inc
jne
ds
rorb
xor
add
ds
push
imul
push
mov
arpl
inc
adc
idiv
movsb
dec
jecxz
cmp
scas
imul
loop
and
adc
sbb
sub
or
cmpsb
in
lret
cld
inc
pop
cmp
insl
jno
sbb
cmpsb
shrl
pop
fnstsw
mov
cs
repnz
lods
adc
push
repnz
and
fnstenv
bound
aaa
imul
xor
pop
in
into
xchg
mov
add
hlt
mov
jno
addr16
mov
sub
mov
add
adc
repnz
daa
cmp
or
jl
xor
push
cmc
in
out
shlb
aad
jmp
arpl
test
adc
pop
mov
xor
jp
jecxz
xchg
cmp
filds
mov
out
call
loop
adcb
xor
and
out
sub
adc
jg
and
cmp
xchg
push
movsb
orb
sub
mov
cmp
sahf
aad
xchg
push
or
jnp
inc
adc
mov
test
adc
call
mov
rcrl
and
push
cmp
push
fdivs
pop
rcll
mov
int
sub
jb
mov
mov
mov
je
inc
mov
loop
ror
cmp
incb
ficoms
inc
aad
mov
pop
jnp
sbb
filds
add
out
add
cmpsb
call
mov
out
das
adc
xchg
sub
mov
inc
test
mov
adc
sbb
push
xor
sbb
add
cmp
repz
sbb
lret
mov
inc
pop
inc
inc
and
lds
insl
addb
or
fbstp
xorb
cmp
xor
fs
xor
ss
sub
sti
mov
nop
sbb
pop
push
jns
loop
movsl
jg
jl
dec
xor
pop
push
mov
mov
sbb
add
sbbb
sbb
xor
xchg
popf
push
cli
aaa
and
lods
test
adc
sbb
or
push
mov
fs
cmp
leave
in
addb
sahf
lds
lock
std
ret
push
aas
rol
pop
sub
vmaxpd
push
loop
dec
and
jmp
cmp
xchg
int
cmp
adcl
xchg
sbb
lret
add
xor
rclb
pop
imulb
stc
inc
cmpsb
int3
fisttpl
mov
push
add
push
sbb
addr16
mov
jo
xlat
aam
mov
xchg
pop
pop
fidivrs
sarb
shlb
adc
mov
dec
add
je
jno
jmp
mov
mov
out
sub
decb
imul
mov
pushf
enter
int3
push
pop
or
imul
push
push
pop
push
push
pop
aas
push
pop
lods
push
pop
inc
nop
mov
mov
fnstenv
adc
push
pop
aas
inc
push
push
or
mov
adc
lock
mov
int
mov
mov
sbb
jae
clc
inc
pop
repnz
adc
jo
jg
mov
inc
loop
lahf
adc
push
lock
xor
cltd
pushf
sahf
rol
sub
je
mov
adc
fstl
into
aam
and
mov
lcall
jae
aaa
adcb
pop
mov
dec
int
push
cmp
ja
les
and
bound
jg
stc
roll
mov
scas
repnz
fsubs
push
jmp
inc
xor
repnz
jl
push
subl
xchg
idivb
out
and
push
ds
push
and
sbb
inc
jecxz
cmpsl
cld
mov
sub
adc
mov
push
mov
adc
fnstcw
inc
cli
mov
faddl
dec
xchg
add
scas
cmc
adc
mov
dec
jb
ds
push
negl
decb
mov
aam
int3
movsl
icebp
mov
pop
jl
cmp
inc
call
addr16
inc
bound
sahf
stos
lock
aas
lret
xor
mov
inc
jno
dec
lock
mov
sub
and
repz
lret
xchg
fimuls
les
jb
mov
xadd
push
leave
cmpsl
jmp
pop
xchg
sub
into
fs
push
in
jno
adc
jno
out
jmp
lds
sti
scas
xchg
into
xchg
stc
cmp
mov
inc
dec
lods
cmp
pop
sub
pop
test
push
jge
adc
rorl
dec
mov
jmp
xchg
cltd
and
adc
hlt
fldenv
fsubl
and
inc
das
dec
arpl
insb
add
dec
jno
xchg
jnp
or
mov
das
adc
fnstcw
cmpsl
push
mov
or
dec
lea
shll
fstp
push
adc
mov
js
xchg
xor
test
mov
lods
add
ja
mov
push
out
mov
xchg
adc
jno
fstpl
mov
pop
inc
adc
fs
jo
jp
xchg
inc
outsb
adc
in
movsl
pop
repnz
mov
mov
daa
jp
and
push
stc
cmp
adc
rcrl
mov
jbe
aaa
lcall
cld
mov
push
imul
cmpsb
insb
or
cmovbe
insl
xor
ret
in
cmpsl
ja
test
movl
cmp
aam
cs
rcl
leave
pop
mov
xor
cs
mov
inc
testb
mov
ss
mov
dec
inc
lahf
push
xchg
jne
lret
mov
lcall
push
lcall
mov
pop
sub
inc
lahf
inc
test
decl
jmp
cmp
jo
xchg
in
out
stos
ficoml
hlt
lods
mov
jp
cwtl
fwait
sub
mov
daa
es
jg
add
mov
je
jecxz
push
cmp
hlt
into
cmc
popf
adc
pop
jmp
test
add
in
jno
jl
cmp
inc
pop
mov
and
outsl
lods
sbb
negl
enter
mov
sub
push
jmp
xorb
inc
aas
fstpl
lret
sub
shl
scas
cwtl
pop
mov
dec
sbb
ret
sahf
push
stos
test
lcall
xchg
mov
loop
cld
and
inc
jge
hlt
jno
pop
sti
fidivrs
push
push
ret
bound
and
push
iret
movhps
adc
dec
stos
gs
fbld
mov
out
mov
int
cmp
inc
mov
push
cmp
or
mov
stos
xchg
outsl
sub
insb
cmc
sbb
dec
mov
inc
loope
jns
loopne
in
sub
iret
lcall
je
outsl
dec
push
inc
int
jl
rcrb
cmpsl
loop
cmp
call
imul
jbe
fwait
xor
mov
jle
push
pop
mov
call
xchg
outsb
mov
mov
std
mov
das
cmp
loopne
pop
repz
sahf
movsl
inc
push
xchg
pop
insb
sarb
lcall
sbb
push
les
cwtl
jns
adc
mov
stos
lock
xchg
cmpb
push
movsl
mov
xchg
mov
js
mov
enter
cmp
mov
sub
and
sti
push
and
push
sub
sub
pop
cmp
pop
xchg
arpl
adc
push
imul
lods
push
push
jge
pop
lods
movsb
adc
insb
xor
mov
ljmp
addl
cmpsl
xchg
pop
out
stc
repz
inc
int3
sbb
shl
mov
inc
cmp
fisttpl
push
outsl
sbb
pandn
shll
jl
lcall
pusha
push
jb
pusha
cmp
jb
fs
jno
mov
pushl
das
or
jae
imul
add
pop
pop
and
push
adc
fscale
lret
out
das
stc
ds
xchg
sbb
mov
pop
xchg
push
sbb
mov
test
cmp
xchg
xchg
scas
fcompl
fbld
das
and
arpl
mov
lods
test
jl
mov
jmp
mov
cmp
ficomps
in
push
xchg
std
and
mov
add
popa
rolb
or
add
dec
nop
jg
clc
push
paddusb
adc
mov
sarl
mov
adc
xlat
ret
gs
xor
wrmsr
mov
in
in
pop
outsl
add
lea
mov
es
mov
xchg
adc
cwtl
test
lods
ja
enter
dec
add
movsl
xchg
dec
mov
sbb
andb
push
mov
paddsb
sub
jae
xchg
mov
aam
iret
or
xchg
xchg
mov
mov
sarl
or
pushf
fidivl
shufps
mov
ss
xlat
repz
dec
jne
lret
inc
nop
push
loopne
xchg
push
adc
pop
das
xlat
fstpt
dec
push
test
dec
jb
loope
movsb
jmp
imul
adc
pop
inc
sub
shr
cld
or
ret
push
cmpsb
lods
cli
mov
mov
xchg
fidivrs
or
fxch
jb
cld
imull
sarl
test
xor
adc
pop
ja
popf
rcr
mov
mov
fdivl
scas
lret
jbe
lods
lret
insl
jno
add
sbb
inc
jmp
or
pop
cwtl
inc
insl
cmp
repnz
mov
jge
cmp
or
out
xchg
push
add
and
push
pop
arpl
inc
cmpsb
into
or
mov
jns
test
cmp
xor
je
sbb
shlb
lods
cmp
push
jnp
cld
adc
add
sbb
lods
add
out
ja
inc
aad
stos
loope
sbb
das
sbb
fisttpll
mov
sarl
clc
cld
sub
and
push
jae
loope
pusha
sub
sub
aas
lret
btc
fisubrs
sbb
jbe
xchg
repz
push
jge
mov
lahf
jo
lds
add
mov
cmp
dec
cmc
fs
cmp
stos
lahf
cmp
cmpl
movsb
mov
test
mov
xor
out
adc
add
daa
sub
int
xor
jl
inc
xchg
mov
mov
jmp
std
xchg
aas
or
pop
je
and
mov
out
push
jo
fidivs
rcrb
fcompl
inc
mov
jge
loop
fsubs
mov
cmp
add
sbb
adc
out
jmp
xor
testb
mov
cmp
fisttps
sub
arpl
andl
test
sub
adc
cmp
xor
int3
out
push
or
sub
mov
lea
pop
mov
int
pusha
cmc
jb
and
xor
bound
daa
cmp
pop
push
rol
xchg
popa
fimull
sbb
out
lock
xchg
out
pop
mov
pop
mov
jecxz
ljmp
pop
xor
dec
jo
push
out
push
jle
insb
sbb
testb
lods
or
icebp
lcall
sub
mov
mov
aad
outsb
pop
cmp
xchg
adc
push
push
or
pop
push
insb
scas
movsl
mov
xchg
xor
cltd
cld
hlt
inc
loopne
scas
sbb
cmpl
push
ficoml
push
adc
popa
stos
pop
cs
xor
jne
mov
aas
lcall
mov
popf
lret
xchg
mov
pushf
jnp
aaa
mov
pop
cmp
clc
sbb
push
mov
jno
pop
adc
out
in
inc
mov
inc
fucom
lahf
int
aam
std
xor
inc
pop
inc
sub
leave
imul
insl
repz
lahf
bound
in
jg
call
adc
inc
jno
adc
or
mov
and
aad
lret
jecxz
xor
int
subl
inc
outsl
adc
insl
imul
lods
sti
pushf
push
xchg
xor
cmc
xchg
mov
sub
xchg
cs
mov
or
out
inc
sbb
jg
xchg
cmpsl
popf
out
push
cmpsl
insb
jo
aaa
fisubrl
and
divb
arpl
fcmovnu
jbe
xor
and
in
pop
push
in
aaa
dec
pop
xchg
and
jmp
movsl
sbb
mov
push
outsl
nop
mov
mov
out
stos
fiadds
sub
mov
sahf
sub
rorb
xor
cmp
push
hlt
cmp
cld
std
pop
call
mov
cmp
mov
out
xchg
mov
mov
or
pop
pushf
jnp
iret
call
out
dec
sahf
xor
test
jle
hlt
cmc
dec
fwait
out
testl
roll
xor
shlb
fdivs
xor
sub
mov
cltd
dec
sub
leave
addr16
adc
flds
mov
fimuls
mov
adc
nop
pop
add
dec
pop
std
lock
mov
test
arpl
and
mov
enter
dec
enter
outsb
pop
mov
mov
xor
cmp
das
movsb
rclb
mov
push
sub
sub
sub
test
sti
mov
insb
shl
call
inc
jl
cs
aas
test
fildll
aam
int
leave
daa
dec
xor
cwtl
mov
pop
daa
cmp
sub
sub
push
and
dec
xchg
call
or
ljmp
jae
mov
dec
inc
or
cs
push
push
or
dec
xor
jp
and
xor
pop
lret
ja
dec
popa
lret
test
push
fcmovu
test
add
pop
dec
sub
and
mov
cmp
pop
xchg
ret
cmpb
pop
push
scas
xchg
inc
leave
sub
xlat
or
xchg
aaa
int
fmuls
jno
jae
cltd
push
in
push
pop
rol
dec
xor
add
pop
data16
add
int3
je
mov
inc
fwait
cld
add
pushf
mov
cmp
repz
ret
cli
jb
cmc
addr16
jecxz
call
and
mov
pop
dec
xchg
mov
xchg
pop
mov
cmpsb
push
pop
add
mov
lret
add
aas
sbb
pop
ja
cmpxchg
cmp
or
ljmp
in
das
xor
jmp
sub
mov
and
call
aad
pop
and
and
into
inc
push
lret
cli
dec
push
adc
inc
ret
mov
push
push
push
add
push
cmpsl
inc
scas
add
mov
jg
jnp
sbb
xor
mov
orb
mov
fs
rcll
fldlg2
push
mov
les
xor
repnz
sub
stos
das
pop
iret
cmp
lock
ljmp
pop
sbb
sbb
push
out
fwait
sub
in
cmp
dec
lods
and
fcom
in
dec
and
or
cmp
cmp
stos
int
or
mov
cwtl
loopne
lods
call
ret
loope
arpl
or
addb
cmc
add
test
rcl
adc
daa
add
push
push
dec
out
and
mov
lret
adc
cld
adc
popa
jns
fwait
scas
mov
adcl
das
clc
movsl
scas
push
push
add
lret
inc
mov
cmp
ja
cld
xchg
push
mov
mov
mov
into
ret
inc
adc
push
repnz
in
les
cmp
push
popa
data16
insb
pop
mov
xor
jl
pop
sbb
lods
add
ret
add
fwait
jecxz
addr16
xor
nop
je
test
stos
loopne
adc
out
cmpsb
and
mov
scas
mov
lods
outsb
and
aam
mov
adc
add
repnz
call
ljmp
xor
cmpsb
jne
sbb
call
fisubl
mov
fnsave
cmp
ljmp
sti
mov
pop
aas
fnsave
xor
or
push
jmp
fcmovu
cmpsl
pushf
outsb
pop
lcall
enter
cmp
je
mov
sub
into
xlat
cmp
outsl
lods
lods
insb
pop
lock
adc
mov
in
stc
adc
mov
xchg
roll
int
bound
sbb
mov
cltd
icebp
imul
lods
sub
pop
inc
adc
xor
enter
fst
dec
jne
sub
nop
lods
add
fistl
leave
inc
and
ficoml
jns
fidivl
mov
inc
mov
xchg
insl
sbb
jmp
bnd
dec
cmovne
aad
cmc
jg
mov
adc
xchg
xor
ljmp
fiadds
pop
jne
mov
std
push
repz
enter
pusha
cwtl
sti
pusha
in
aam
sbbl
pop
outsl
jge
inc
sar
push
fs
mov
mov
xchg
push
mov
aad
push
daa
xchg
add
addb
inc
sub
lods
and
dec
lret
add
sbb
mov
mov
test
xlat
pop
sbb
dec
inc
je
subl
lock
or
xor
mov
movsb
scas
ret
rcll
mov
sti
mov
and
rcll
xchg
adc
dec
lret
adc
mov
ljmp
push
aas
scas
sub
pop
jb
xorb
scas
xor
mov
das
hlt
repz
cli
push
sub
enter
adc
gs
jno
pusha
mov
imul
repz
mov
xchg
push
xchg
dec
es
xchg
outsb
or
cmp
adc
repz
mov
pop
std
fimull
push
cmpsb
cs
xchg
or
inc
js
mov
pop
mov
arpl
dec
int3
push
push
push
stc
mov
pop
shrl
pop
ljmp
sbb
repnz
gs
cmp
pop
loopne
mov
mov
into
adc
mov
shlb
lock
xchg
popf
jne
jb
lods
lds
mov
and
mov
int
nop
daa
in
scas
mov
cwtl
in
mov
pop
or
iret
test
lahf
cmp
pop
add
dec
in
sbbl
lea
orb
adc
mov
fucomp
cli
or
adc
insl
ss
lahf
dec
cli
insb
sub
dec
ret
sahf
aam
mov
sbb
adc
into
bound
ljmp
cmp
pop
arpl
nop
das
sarb
push
mov
leave
fmull
fnstcw
fstpl
addr16
xchg
dec
mov
pop
out
and
jb
jns
mov
sub
mov
in
xchg
movsb
std
gs
pop
xchg
test
jge
js
mov
xchg
and
lds
loope
shl
inc
fcoms
rorl
into
test
sub
arpl
cmp
jg,pt
lods
out
dec
mov
inc
rcrb
mov
adc
popf
sti
nop
test
sbb
or
sbb
mov
inc
lret
jo
cmc
mov
mov
in
xchg
xchg
test
inc
arpl
mov
test
imull
int3
sub
mov
fs
push
jns
or
aam
jp
je
lahf
std
lock
xor
repnz
outsl
mov
imul
cmp
push
aas
dec
mov
jl
xor
jmp
cmpsl
loopne
bound
jecxz
andb
outsl
jne
xchg
lahf
test
sti
inc
pop
pop
mov
iret
rcll
inc
dec
daa
pop
push
outsl
sbb
repnz
and
push
popa
icebp
cmp
xlat
pop
adc
scas
sahf
mov
jns
out
mov
inc
test
pusha
sti
mov
stos
sbb
lods
scas
cmp
repz
sbb
sahf
ds
cmpsl
and
jbe
push
mov
jp
sub
mov
or
jns
ja
ds
xchg
mov
jns
mov
jecxz
pop
xchg
or
jae
inc
movsb
cmpsb
mov
jae
jg
ret
ret
jp
sub
jb
and
cmpsb
xchg
mov
call
shrl
sub
xor
mov
lcall
enter
ja
xchg
nop
andb
push
mov
lcall
lods
loopne
dec
inc
pop
out
fld
pop
or
or
xor
sahf
ret
cmp
pusha
pop
adc
loop
sar
and
adc
inc
push
lods
mov
lea
or
loopne
mov
sbb
mov
rcll
cmp
inc
dec
gs
scas
int
mov
mov
ss
rcrl
repz
cmpsb
cmp
aam
test
std
mov
fwait
jnp
popf
mov
add
pop
dec
sub
xchg
push
and
or
test
mov
pop
mov
cmp
cld
cmpsb
dec
mov
in
call
popa
add
shl
clc
jns
or
cmpl
sbb
test
fsubrl
cmc
adc
mov
ljmp
jmp
mov
int
xor
sbbl
jns
aam
loop
lods
fists
dec
arpl
in
sbb
push
jmp
and
es
xchg
cmp
sub
dec
shll
add
mov
xor
sti
cmp
das
aam
aad
mov
hlt
int3
xor
pusha
gs
mov
cltd
insb
and
push
ja
jl
xchg
test
mov
divl
pop
sti
clc
push
and
or
pusha
lcall
ficoml
dec
pop
pop
lcall
call
test
pop
das
add
mov
mov
or
aam
inc
test
test
sbb
jno
xchg
stos
std
push
fldl
mov
inc
pop
jp
in
sub
dec
jg
imul
adc
mov
pop
enter
test
ficomps
and
mov
rcrl
sub
ljmp
movsb
outsl
xchg
dec
and
fisubrl
scas
in
add
popa
mov
stos
and
inc
jo
pop
mov
in
mov
push
mov
add
xchg
hlt
ret
test
fiaddl
cwtl
cmpsb
pop
jle
lcall
xchg
in
xchg
shrb
dec
ja
add
mov
inc
ret
cmp
in
imul
outsl
int
xor
add
in
sub
outsb
or
pop
mov
outsb
aas
lods
daa
sub
scas
jmp
aaa
ds
or
out
mov
and
test
pop
les
adc
fbld
jle
call
testl
int3
cwtl
sbb
cmp
and
push
xor
lcall
or
test
mov
test
subl
iret
sahf
shlb
cmpb
imul
call
xor
outsb
mov
mov
adc
test
or
push
repz
in
gs
mov
test
lea
pop
iret
out
lods
dec
ds
or
mov
lret
cmp
lock
add
adc
pause
hlt
aas
test
jnp
std
pop
mov
push
ret
jg
fstpl
nop
dec
dec
adc
aad
or
mov
ror
jg
test
mov
or
outsl
icebp
sub
pop
mov
subb
insb
stos
mov
ret
cltd
sti
mov
xchg
adc
imul
hlt
mov
mov
imul
mov
dec
jae
movd
jg
aad
adc
in
dec
mov
std
push
xchg
xor
lcall
lock
mov
leave
cmp
aaa
xchg
dec
cmc
negl
or
ja
mov
xchg
jbe
jo
in
int3
shlb
sbb
push
mov
fisubs
mov
pop
xlat
das
dec
in
daa
push
popl
jle
out
rorb
push
roll
sub
jns
jecxz
cmp
iret
mov
add
mov
icebp
jnp
mov
dec
pop
and
call
addr16
dec
in
xchg
jo
xchg
ret
lret
push
mov
cmp
pop
sbb
enter
notl
sbb
sti
xchg
cmp
mov
push
and
stos
and
int3
adc
addr16
pop
or
fbld
and
jb
shrb
repz
gs
mov
divb
mov
insl
stos
sahf
fstps
sub
jne
ret
scas
cmp
push
jg
std
fwait
mov
push
sbb
mov
adc
jae
cmp
jmp
fucomip
lahf
xor
rcll
movsb
aad
loop
xor
popa
das
mov
inc
xchg
fnstsw
lds
dec
out
mov
adc
sbb
or
incl
js
outsl
xorl
jno
dec
popa
mov
loope
add
lcall
adc
andl
mov
shrb
sbb
inc
and
int3
xchg
mov
shll
sub
aas
movsl
jmp
aad
mov
xchg
addr16
stc
adc
stos
xor
or
mov
push
mov
cmc
shr
adc
push
jo
or
push
cmp
popa
lods
or
dec
fsubrl
push
in
int
fists
mov
adc
subl
add
fwait
lods
mov
cmp
mov
sub
addr16
xchg
mov
jno
movsl
jecxz
rcr
sub
scas
in
push
push
sub
addr16
mov
jne
ret
jmp
ficompl
stos
aas
outsl
pop
shll
inc
aas
sbb
fwait
lock
clc
jb
pusha
pusha
call
pusha
mov
mov
jne
adc
test
loopne
mov
push
cs
aaa
mov
or
jmp
popa
fcoms
dec
xchg
push
sub
mov
pop
jb
dec
xchg
xor
dec
push
mov
jne
cmpsb
add
mov
inc
lods
or
xor
push
sub
mov
les
sarb
fxch
fwait
mov
loop
cwtl
mov
mov
and
out
dec
enter
add
push
push
mov
pusha
push
push
xlat
jnp
sbb
shl
fcoms
hlt
sub
mov
adcb
xchg
adc
xor
popa
faddl
push
mov
lret
mov
jno
ret
fsubl
xchg
and
lret
mov
insb
xchg
popa
scas
test
dec
add
or
mov
jmp
fidivl
push
sahf
adc
add
repz
aad
adc
fisubs
bound
xchg
pushf
jle
stos
inc
sbb
dec
sub
dec
shll
xor
addr16
movsb
gs
jmp
popf
xor
cwtl
mov
jl
loop
pop
jl
xchg
in
insb
fmuls
or
in
jbe
std
lods
arpl
cmp
and
stos
gs
sahf
notl
scas
cmp
icebp
je
pop
dec
jecxz
sbb
cmpsl
outsb
lock
sbb
add
mov
shr
mov
adc
adc
fwait
jecxz
adc
nop
leave
sub
repz
loopne
add
pop
int
fmuls
sbb
xor
xchg
je
pop
mov
adc
bound
inc
xchg
into
inc
xor
pushf
mov
idiv
dec
mov
jmp
inc
push
jmp
mov
lcall
orl
dec
stos
adc
jl
cwtl
or
dec
js
stc
mov
int3
shll
jg
rcr
lea
out
xchg
cmp
pop
iret
mov
and
sub
pop
jl
addr16
mov
push
mov
lock
pop
push
xchg
outsb
das
and
jb
into
daa
mov
inc
pushf
out
mov
int3
insl
mov
mov
cmpsl
shll
loop
shrd
mov
stos
incb
push
add
dec
mov
in
int3
cmp
jp
ret
jmp
clc
rorl
ja
loope
jno
jmp
xchg
inc
ficomps
insb
insb
movsl
js
inc
ret
mov
jp
mov
push
push
cltd
push
mov
sbb
mov
xchg
and
iret
loop
popf
jbe
xchg
cltd
out
jne
sbb
ss
std
push
popf
pop
and
cmc
xor
call
dec
pop
sub
orb
xchg
add
ret
leave
xor
fists
mov
push
adc
in
cwtl
nop
inc
shll
xchg
mov
std
sbb
jg
xchg
mov
add
xadd
xor
mov
jp
mov
test
mov
adcb
fbstp
and
outsb
lock
add
mov
or
out
sbb
imul
stc
xchg
push
mov
call
pusha
xchg
je
stos
aas
xchg
dec
push
bound
add
or
mov
and
pop
repnz
lahf
arpl
mov
inc
sti
inc
fists
adc
daa
adcl
hlt
out
xchg
add
pop
dec
lods
fldenv
push
pop
mov
pop
jbe
push
dec
push
idivl
push
mov
fs
xchg
sbb
xchg
dec
pop
dec
lea
fldt
ss
cmpl
add
mov
jns
notb
adcl
mov
jmp
inc
inc
jl
mov
call
cmp
insl
inc
mov
mov
popa
pop
aam
nop
dec
dec
stc
inc
cmp
aaa
jno
dec
std
repz
jmp
into
cmp
iret
test
pop
push
or
pop
pop
mov
test
dec
in
pop
mov
mov
push
or
xor
les
cld
cmp
jb
mov
sbb
test
push
jmp
js
push
xor
cmp
lds
loopne
outsb
adc
xchg
dec
out
clc
mov
mov
sub
pop
outsb
test
adc
in
inc
sahf
out
imul
mov
shlb
cli
sbb
imul
mov
and
sbb
push
ret
pop
dec
adc
mov
enter
dec
jbe
dec
push
or
pushf
adc
fs
inc
mov
je
int3
popf
mov
adc
xchg
iret
sub
xorl
jbe
fcompl
and
pop
inc
rorl
jl
cmp
dec
int
cli
sbb
das
gs
adcb
sarb
and
push
sub
sbb
imul
addr16
fwait
scas
adc
ret
loopne
cmp
jne
rolb
adc
pop
sub
movsl
add
imul
mov
or
imul
cs
js
and
inc
add
jo
sti
push
repnz
mov
add
or
fucomi
or
xor
and
push
adc
push
mov
pop
or
or
cmp
js
sahf
hlt
and
cltd
cmpsl
iret
adc
pause
jg
cmpsb
xor
mov
pop
imul
popa
sbb
loop
xor
inc
sbb
inc
fcmovbe
push
push
push
mov
cmpsl
vprotw
test
xorb
not
and
scas
jp
pop
pop
inc
mov
aad
mov
out
std
push
xor
iret
sub
cmp
push
fdivs
mov
ljmp
fisubrs
das
push
add
sub
dec
in
rcl
sbb
or
and
call
popa
pop
pusha
nop
arpl
shl
aad
jo
roll
out
loop
jge
aaa
push
test
mov
adc
xor
add
jne
or
cmp
sub
jne
test
pop
ret
inc
jg
les
outsb
jbe
mov
mov
mov
lret
pop
in
out
push
insb
test
scas
xchg
rcrb
js
lods
mov
in
and
add
sbb
cmp
arpl
lcall
out
mov
xchg
adcl
ror
fcmovu
sbb
cmp
loopne
pusha
adc
sbbb
ja
xchg
mov
xor
adc
repz
or
imul
outsb
push
xor
div
nop
xor
out
in
xchg
or
repz
pop
mov
in
cltd
jno
cmpsb
js
sub
aam
loop
jno
enter
jl
xor
xchg
dec
mov
cld
fldl
les
jbe
insl
jno
cmp
enter
pop
aam
and
jge
jge
jg
test
xchg
and
dec
rcll
push
or
or
aad
jl
xor
mov
add
sub
push
xchg
or
dec
push
enter
movsl
and
pusha
jmp
cli
leave
mov
lods
cmp
push
rclb
ja
and
mov
cmp
xchg
jl
insl
inc
std
and
pop
fistpll
add
sbb
push
sbb
xchg
popa
xor
mov
adc
clc
fmuls
jae
mov
jge
dec
test
cmp
leave
shrl
es
dec
lds
fs
jmp
jae
or
pop
cmc
popa
loope
mov
and
dec
in
jb
push
cld
fidivrs
jp
sbb
jno
xor
pop
jecxz
cs
push
stos
aas
iret
xchg
cltd
xchg
adc
mov
adc
pop
jno
inc
and
outsl
mov
hlt
cmp
jle
jbe
rorb
arpl
cmp
mov
leave
fimuls
cmc
jb
repnz
loopne
movsl
loop
aam
mov
outsb
mov
jno
xchg
xchg
aam
or
nop
call
imul
repz
push
push
repnz
adc
sahf
push
dec
xchg
fwait
jae
pop
sar
pop
jno
cmp
push
mov
and
fwait
in
in
test
outsb
fs
mov
decb
mov
cmp
and
push
xlat
push
das
cmp
jp
adc
mov
jne
inc
adc
clc
pop
jno
pushf
out
pop
pop
sub
std
pop
testb
jecxz
jle
dec
pop
push
in
aam
orps
jmp
push
ret
imulb
aad
sub
push
sar
outsl
sbb
aas
test
or
repnz
daa
in
addr16
adc
jo
push
sbb
xchg
cmp
icebp
loop
lahf
push
xor
xor
cmpsb
jg
push
jo
push
lahf
sub
cmpsb
dec
aad
arpl
sti
jno
push
mov
shl
xor
mov
insl
jbe
imul
adc
pusha
adc
adc
add
fld
in
mov
dec
outsl
xor
pop
pusha
mov
rorl
pusha
jmp
add
jbe
adc
pop
clc
test
xor
jl
xchg
add
push
jge
enter
fidivrl
arpl
xor
cmpl
jmp
das
xor
inc
ficompl
ret
incb
cmpsb
inc
scas
scas
pop
in
jb
cltd
imul
push
jecxz
jg
addr16
in
ret
pop
roll
push
push
mov
adc
mov
mov
inc
pop
sbb
inc
sbbb
popf
dec
dec
or
mov
push
xor
xor
outsl
int3
popf
xor
popa
subb
aas
pop
jo
fsubrs
inc
sarb
adc
std
push
or
mov
mov
mov
adc
mov
outsb
and
push
and
mov
adc
push
repz
sti
fmull
aas
mov
stos
test
mov
cmpsl
or
cmp
stos
bswap
aaa
add
fwait
scas
out
imul
cmp
mov
push
pop
push
xchg
or
fwait
dec
add
data16
jns
rcr
pushf
mov
nop
xchg
fcmovnbe
scas
xchg
dec
scas
inc
cs
or
testb
in
cs
add
adc
pop
sub
call
data16
inc
xchg
dec
dec
sub
cmpsl
fs
cmpl
daa
pop
push
push
mov
mov
mov
std
sub
inc
aaa
add
scas
clc
xchg
adc
out
ljmp
jmp
nop
push
push
or
cmp
jne,pn
popa
stc
stos
test
or
fisubrl
nop
enter
ljmp
xchg
lock
mov
stc
mov
mov
add
fistps
clc
pop
add
cmp
mov
cli
pusha
mov
mov
insl
lods
cwtl
push
xor
adcb
or
adc
mov
jmp
loop
inc
cmp
jbe
and
insl
dec
imul
fwait
pop
adc
pop
cmpsb
aas
loopne
adc
mov
sub
loopne
je
cmp
stos
cmpsb
fs
mov
icebp
pop
cmp
gs
mov
cmpsl
xlat
xor
inc
pop
sub
movsl
div
or
loopne
pusha
cmp
sbbb
repz
and
inc
pop
jle
adc
mov
or
add
les
ljmp
add
inc
add
push
xchg
jnp
pop
aam
dec
sub
daa
adcb
notb
pop
xor
arpl
xchg
das
add
bound
adc
jmp
dec
int
jmp
or
fcmovnb
loope
dec
jbe
daa
shr
repz
mov
xchg
ret
test
aam
les
xor
filds
mov
xchg
ret
add
imul
mov
jno
mov
hlt
pushf
lock
andl
mov
mov
mov
cwtl
std
int
dec
repnz
xchg
fisubrs
loopne
jno
jne
and
mov
aam
mov
insl
dec
ljmp
mov
jo
repz
sub
sub
ja
ljmp
arpl
cmp
dec
sub
imul
cmp
rcl
popf
xor
sub
mov
scas
stos
jnp
divl
das
lea
nop
and
adc
pop
lock
pop
sub
out
push
loope
rclb
aas
ja
leave
jge
or
pop
xchg
mov
cmp
xor
enter
mov
add
scas
fstpt
jb
xchg
xchg
pop
mov
push
xchg
add
popa
or
mov
into
in
pop
sub
std
add
es
int
leave
xchg
xor
or
bound
dec
aam
cmp
stc
xor
bound
dec
inc
push
out
les
jp
scas
push
fldcw
mov
aas
jno
dec
cwtl
subb
sub
cmp
adcb
scas
cli
popf
iret
push
fistl
adc
xor
fcoms
push
mov
aam
or
sub
testl
test
push
xor
nop
dec
mov
xchg
cwtl
ljmp
jae
jg
xor
mov
movsl
jo
fisubs
lret
insb
pop
ret
int
cmpsl
xchg
pop
das
popa
fbld
sahf
insb
dec
rol
mov
add
fisubl
rorb
push
aaa
mov
mov
fsubr
cwtl
push
inc
les
repz
mov
jno
lods
pushf
je
movsb
dec
cmpsb
rolb
ljmp
sar
or
lods
xchg
lret
hlt
pop
pushf
mov
imul
xor
fdivl
scas
fucomip
shl
push
lcall
jecxz
inc
shl
mov
dec
out
movsb
out
fwait
cwtl
das
push
cmp
loop
fstpt
dec
inc
sub
pushf
movsl
add
pavgb
das
out
mov
into
jno
lock
mov
fldenv
imul
sbb
dec
push
mov
push
sub
inc
rcrl
add
sub
in
in
cltd
mov
cltd
pop
add
sbb
arpl
in
in
out
lods
mov
jecxz
imul
int
orl
lret
xchg
std
gs
ljmp
out
push
xorb
into
lcall
gs
insb
into
xor
out
dec
push
push
pop
cmp
jnp
pop
jle
cmp
pop
lcall
xor
mov
bound
test
js
mov
dec
sbb
and
pop
fs
push
push
inc
aam
and
adc
push
xor
cmp
inc
and
or
dec
adc
stos
out
leave
dec
ds
dec
push
pop
arpl
out
ja
jne
xor
mov
orl
cs
push
xchg
fisttps
hlt
fs
jp
mov
repnz
add
sub
aad
xor
loope
daa
mov
int
push
dec
add
jge
ret
adcb
xchg
fwait
push
into
dec
pop
sbb
loope
outsb
leave
pop
cmc
cwtl
out
mov
push
push
jg
sbb
jmp
mov
pop
push
inc
mov
xchg
mov
icebp
xor
mov
popf
pusha
or
push
fsts
jle
in
adc
cwtl
or
lret
adcl
int3
add
jo
addr16
std
push
sarl
xchg
aad
xor
pop
sub
fisubrs
xchg
xchg
fisttps
inc
int3
int
test
out
out
stos
pop
dec
cmp
shlb
jl
fidivs
pushf
sahf
jmp
fninit
jbe
ret
mov
jle
shrl
lcall
aam
roll
lret
mov
into
adc
or
mov
inc
testb
ror
dec
sbb
ja
sub
dec
inc
iret
pop
mov
jns
inc
sti
icebp
test
fwait
rcll
jo
imulb
xchg
aam
jae
mov
mov
test
in
push
imul
cld
rorb
loope
jns
pop
hlt
mov
clc
dec
cmc
sahf
cltd
adc
mov
popa
jae
mov
adc
fisubs
push
std
insl
adc
sub
lcall
not
rcll
add
hlt
and
and
adc
fcoms
loopne
ja
mov
sbb
lods
jnp
jmp
push
enter
xor
mov
test
inc
jae
nop
icebp
cmp
imul
push
inc
or
push
mov
in
sub
mov
inc
mov
lahf
add
stos
hlt
pop
pop
xor
xor
mov
jl
cld
add
out
xchg
adc
dec
pop
jb
mov
cmp
mov
inc
inc
js
mov
mov
ret
in
adc
arpl
push
pop
into
cmp
in
sbbl
in
add
addl
and
add
mov
movsl
scas
fdivrs
xchg
rorb
pusha
int
jns
bound
out
out
push
mov
ds
inc
inc
lahf
stc
add
xor
inc
call
mov
cwtl
sbb
xchg
xchg
cs
jns
shlb
cmc
repz
add
mov
popa
and
xchg
jl
cmp
imul
mov
fcoms
in
xchg
jae
test
xchg
dec
mov
hlt
loop
in
nopl
outsl
je
sti
int3
insb
cmpsl
in
addr16
sub
ret
fucomi
xchg
xor
dec
push
fs
loopne
xchg
mov
stc
xchg
loope
stos
int
dec
pop
mov
aaa
jg
xchg
es
pushf
ds
lret
dec
xor
dec
out
pop
test
aas
xchg
push
popf
out
lret
cmpl
inc
jne
xor
xchg
fdivl
in
in
adc
dec
and
dec
or
fistl
adc
cmpsl
enter
aam
push
rcrl
sub
cld
sahf
loopne
fnstenv
pop
push
lods
mov
insl
fucom
in
and
sbb
sub
xchg
daa
xchg
movsb
scas
dec
add
lock
jmp
movsl
test
jl
int
jbe
sbb
movsl
or
in
xchg
int
sub
jp
dec
stc
sbb
sbb
sti
out
dec
fistpll
in
pop
lea
cli
aad
xchg
addr16
xchg
inc
iret
ja
mov
cmp
repz
jae
stos
dec
pop
insb
xchg
and
add
cli
out
pop
mov
mov
or
es
out
xor
mov
push
mov
fstps
scas
sti
mov
cmpsl
xlat
rcll
xlat
icebp
mov
cmp
repnz
adc
jle
or
dec
insl
push
push
xor
xor
mov
add
xchg
xor
pop
repnz
and
lods
push
mov
fisubl
int3
jb
inc
jbe
cmc
adc
push
lahf
jmp
aam
sub
mov
add
test
out
aad
lods
dec
fiadds
inc
jecxz
push
push
out
sub
sahf
push
add
orl
lds
mov
fcoml
mov
outsb
xor
fidivs
sbb
jmp
xor
sbb
out
mov
push
dec
fs
jbe
pop
pop
add
xchg
mov
dec
rolb
dec
adc
xor
xlat
daa
movsl
lahf
mov
pushf
cmp
sub
into
cmp
mov
and
push
cli
arpl
inc
or
scas
popf
cmp
aad
negl
ret
test
add
jp
cmp
sub
cmp
ds
lret
pop
jg
sarb
xor
cltd
cmp
dec
push
clc
dec
push
ret
mov
dec
orl
jbe
pop
mov
or
popa
sahf
push
add
add
out
data16
scas
shll
aam
add
xlat
add
inc
push
js
stos
movsb
xchg
test
divl
popa
ja
adc
mov
je
in
inc
jge
and
loop
sarl
dec
push
mov
or
sbb
add
hlt
jg
adc
push
insl
lods
mov
aas
add
cmpsl
and
add
lock
movb
adc
push
in
sahf
into
loope
ljmp
adc
outsb
std
push
pop
sbbl
xor
xchg
xchg
inc
push
or
jo
loope
push
cs
xlat
insb
adc
cmp
jmp
out
cmp
addb
das
stos
add
mull
insb
leave
push
fs
jo
cmp
gs
jp
dec
inc
adc
int3
imul
pop
pop
cmp
add
in
mov
arpl
test
bound
xor
fdivl
out
movsl
cltd
dec
aad
inc
mov
sbb
out
cli
ret
and
ljmp
adc
icebp
jb
or
dec
scas
cli
lds
xor
enter
and
mov
sbbl
rclb
pop
push
mov
jecxz
fwait
dec
jno
xchg
aaa
add
xor
adc
scas
push
mov
add
sub
call
mov
lods
sub
push
mov
inc
mov
aad
push
aad
and
mov
cli
mov
in
in
adc
sbb
mov
shrb
xchg
jg
out
xchg
pop
inc
add
out
push
push
orl
xor
adc
xchg
or
fnsave
fiadds
or
std
jb
push
jl
fs
push
out
xor
mov
xchg
lods
out
sbb
jb
stc
mov
ja
xchg
jmp
mov
icebp
sbb
cmp
das
mov
xchg
push
ds
jae
pop
mov
popf
lods
jecxz
sbb
cmp
adc
mov
test
arpl
add
dec
lea
test
ret
cmp
jbe
loopne
sbb
in
adc
stos
ljmp
fistpl
in
pop
lods
addr16
pop
ds
mov
std
mov
mov
xlat
fs
sbb
or
dec
lods
insl
xchg
out
jle
fs
mov
mov
rorb
adc
pop
xor
test
imul
out
fisttpll
outsb
jnp
sbb
iret
movsb
sub
popf
jno
pop
insl
aam
fwait
cmp
push
lock
adc
hlt
sub
ja
divb
sbbb
pop
cmp
and
das
dec
cmpsl
ret
add
hlt
jecxz
das
jae
fwait
mov
fmuls
push
enter
sbb
in
icebp
jecxz
jno
mov
gs
scas
xlat
pop
cltd
cltd
and
add
add
test
out
lds
int3
shlb
or
xor
test
push
mov
dec
mov
mov
mov
jnp
pop
cmp
call
cld
bound
data16
jnp
jp
scas
add
lock
push
inc
adc
cmp
jnp
sbb
mov
lock
jo
daa
clc
aas
jmp
rolb
mov
jmp
test
pop
sbb
mov
jmp
adc
in
mov
in
xlat
mov
cmp
call
push
test
pop
push
sub
lret
int3
movl
leave
mov
movsb
xor
loop
orb
mov
shl
jg
push
scas
xor
inc
clc
pop
imul
push
adc
push
ljmp
sbb
xor
inc
pop
rolb
inc
jne
pop
pop
lret
sub
lock
inc
loope
dec
stc
mov
mov
push
pop
sub
roll
dec
cmp
aas
sbb
out
mov
enter
inc
or
adc
dec
mov
pop
xor
jecxz
fimull
pusha
jns
sbb
mov
dec
push
repnz
pusha
fdiv
xor
sub
lods
mov
mov
movsl
xchg
push
outsb
mov
in
sahf
cmp
lcall
add
outsb
inc
jno
jne
movl
mov
dec
push
cmp
fsubs
push
das
mov
add
mov
lock
jg
je
lods
sarl
mov
outsb
shll
pop
xchg
xchg
push
sbb
aam
mov
or
ret
ror
scas
out
jb
sbb
pop
push
cmp
movsb
arpl
add
inc
jmp
jecxz
enter
jmp
push
pop
cmpsb
mov
mov
mov
sub
stos
push
sub
or
decl
ret
push
mov
cs
into
mov
in
cwtl
cwtl
mov
mov
inc
sti
push
or
fsubl
or
ffree
pop
mov
or
mov
xor
cmpsb
test
xorl
push
popa
cld
inc
ffree
addr16
in
out
and
push
mov
xor
iret
mov
xchg
cmpsl
mov
repz
adc
add
jbe
mov
rclb
ss
cmpsl
jae
xchg
push
mov
push
sub
mov
out
jmp
or
inc
inc
fnstcw
lcall
push
xchg
js
push
lea
roll
pop
scas
xchg
push
aas
or
daa
imul
fsts
leave
adc
fucom
loopne
loop
into
bound
lods
add
dec
mov
daa
push
pop
push
sub
aad
aam
call
pop
adc
dec
in
sub
das
je
pushf
dec
mov
push
sbb
pop
frstor
xor
mov
sti
aas
enter
int3
xor
subb
jo
jmp
push
cmp
cmpb
ret
xor
or
push
testb
nop
lea
sub
les
nop
add
test
or
jno
dec
adc
push
loopne
jp
lret
push
xor
loope
decb
add
imul
xor
cltd
cltd
mov
stos
subl
mov
pushf
pop
es
imul
mov
lahf
out
jb
xchg
pop
sub
fisubl
daa
ret
imul
outsl
fbld
pop
push
addr16
clc
fwait
sbb
test
out
adc
pop
push
xor
cltd
xchg
push
adc
out
or
shlb
sub
cmp
hlt
mov
jle
dec
push
addr16
neg
pop
adc
push
xor
call
fbstp
subl
xchg
mov
jge
outsb
pop
mov
lock
dec
mov
and
fs
cmpsb
mov
or
add
inc
data16
test
mov
aaa
mov
jmp
or
mov
stos
jne
andl
xor
xchg
xchg
test
mov
pop
xor
repz
push
sub
push
adc
jne
addb
push
call
cmp
adc
test
push
test
and
andb
mov
loop
sub
out
push
movsl
push
xchg
int3
jae
mov
cmp
fiaddl
and
xchg
inc
sub
sbb
fstps
nop
outsl
xchg
dec
push
push
aas
dec
xchg
mov
fprem
cltd
inc
outsl
push
adc
or
stos
iret
stos
jbe
fmuls
cmp
jecxz
pop
pop
dec
mov
or
hlt
ja
lcall
and
ljmp
push
addr16
mov
inc
mov
xor
cmp
adcl
pop
and
add
cmpsl
iret
shrl
jno
movsl
daa
sub
inc
in
xchg
popa
gs
mov
sbb
or
xchg
or
stc
xchg
push
aaa
dec
outsl
push
frstor
jns
jl
adc
jmp
or
mov
in
dec
xchg
clc
js
mov
pop
adc
dec
jmp
outsb
fdivr
xchg
lahf
adc
rcl
sbb
shrb
mov
and
popf
xor
fs
mov
stc
incl
mov
out
out
cmp
out
push
jnp
popa
mov
loope
mov
and
or
nop
xchg
dec
mov
ss
and
and
dec
pop
xor
mov
mov
mulb
mov
mov
xchg
inc
cmp
sti
adc
loopne
fisubrl
lods
shrl
xchg
leave
enter
lods
icebp
fsubrl
nop
jmp
pusha
inc
ss
rcll
in
dec
mov
and
add
pop
xchg
icebp
fildl
sbb
dec
ds
inc
fidivrl
mov
mov
int3
test
xor
dec
orb
popa
in
subps
icebp
shrl
rclb
push
daa
push
lcall
push
push
pop
pop
adc
js
sub
sahf
mov
addb
lret
xchg
ljmp
insl
push
std
push
sbb
repnz
dec
loop
subb
negl
pop
sbb
mov
sbb
mov
mov
ret
sbb
jge
not
and
push
es
lock
jmp
xor
pop
push
fdivrs
loope
pop
or
or
mov
push
jae
inc
xchg
and
push
mov
or
fucomp
push
leave
lahf
fwait
test
movsl
adcb
mov
out
sbb
inc
lds
dec
mov
mov
dec
inc
popf
adc
icebp
stos
stc
dec
dec
pop
loop
push
repnz
imull
add
mov
push
dec
out
sub
lock
dec
xchg
inc
mulb
test
adc
push
adc
dec
inc
adc
loopne
adc
or
xchg
dec
inc
cmp
orl
aas
and
les
stos
inc
adc
mov
stos
stos
fcmovb
sarb
test
int3
pop
push
rolb
add
jle
sbb
mov
insl
popa
pop
jl
mov
lea
cli
xor
mov
lea
pop
pusha
add
orl
fisubrl
neg
xor
aad
popf
ja
cmp
mov
ljmp
dec
jb
sub
enter
push
sarl
ds
push
mov
es
fs
fistpl
gs
dec
xor
fldcw
arpl
imul
mov
jl
mov
out
pop
andb
mov
fsubrs
xchg
adc
pop
sub
enter
xchg
divb
sti
push
inc
xchg
or
jo
and
push
fldenv
sbb
xor
xor
leave
sbb
imul
sub
or
test
mov
xchg
cmp
cld
mov
or
sarb
xchg
cmpsb
add
dec
xchg
ds
inc
pushf
fsubrs
dec
xchg
add
push
cmp
addr16
mov
loop
movsb
push
push
push
inc
insl
adc
pushf
out
inc
xlat
mov
stc
adc
in
insl
push
das
jns
movsb
incb
rcll
test
sbb
sub
jns
dec
pushf
test
inc
add
shll
stc
cmp
adc
mov
cmc
int
out
call
or
cli
xor
ret
mov
out
cwtl
gs
sub
in
mov
add
adc
mov
push
stos
jle
enter
pop
fs
mov
cwtl
pushf
pop
ds
clc
dec
xchg
and
mov
dec
cmpsl
mov
shl
add
jmp
adc
icebp
push
sbb
xchg
sbb
out
mov
mul
adc
cmpsl
or
adc
cmc
setnp
aam
xor
push
xchg
fsubrs
mov
pop
adc
mov
mov
leave
dec
lea
sbb
add
ficompl
pop
add
loope
repnz
or
scas
mov
sahf
push
rolb
outsl
out
out
gs
fisubrl
xchg
lahf
jnp,pt
mov
insb
rorl
out
rcr
push
add
jle
je
shr
and
mov
and
insl
push
pop
sbb
or
fcmovnb
dec
cmp
or
add
push
sbb
arpl
pop
int
vminpd
jp
cld
mov
and
stc
sbb
or
outsb
jge
sar
mov
cmp
into
xor
mov
and
inc
mov
cmp
arpl
jne
jns
mov
pop
adc
sbbl
sub
xor
mov
divb
jecxz
pop
inc
cld
adc
dec
imul
lock
lret
mov
xchg
leave
insl
sbb
and
mov
addl
xor
lret
jmp
push
jb
les
out
sub
into
sbb
add
mov
fwait
les
shl
pop
fadds
pop
ss
nop
push
or
push
inc
push
faddl
subb
add
loop
cmp
js
adc
mov
xchg
pop
inc
roll
in
cld
xchg
std
jbe
inc
out
or
dec
mov
dec
std
jmp
xchg
adc
mov
test
jo
pop
mov
mov
ret
cmp
mov
jne
out
les
addr16
movsb
insb
aam
arpl
push
inc
lds
dec
scas
dec
push
sbb
push
call
adcb
jne
jl
cltd
out
lds
xchg
dec
mov
imul
cmc
or
jne
mov
lret
hlt
pop
jae
cmpsb
daa
pop
in
call
je
mov
xor
inc
loope
sbb
std
jmp
in
and
test
adc
xor
pushl
cmp
pop
adc
in
add
add
lcall
sbb
xchg
in
jge
popa
notb
cmp
popf
ds
cld
jne
out
cmp
lahf
movsl
int
sub
add
adc
push
cmpsl
pop
dec
lahf
sub
jbe
rorb
les
pop
mov
jno
pop
cmpsb
test
sbb
loope
mov
add
repnz
mov
mov
dec
mov
inc
sub
decb
and
das
cmpsb
push
mov
adc
insb
out
or
mov
cmp
jo
adc
aas
sbb
sub
lock
daa
add
sahf
jle
std
adc
in
xchg
rolb
sbb
mov
mov
jo
xchg
iret
mov
cmpsb
pop
pop
and
sbb
lret
fcomps
push
inc
add
push
cmpsb
or
push
cmp
adc
xor
pop
pop
insl
cmc
jp
sbb
in
cmpsb
or
dec
push
jnp
mov
mov
add
add
jmp
dec
xor
cli
dec
xlat
int
mov
fildll
push
lea
inc
mov
lret
jno
mov
fsub
jo
or
jmp
xor
pop
push
stos
jbe
repz
ss
icebp
das
xor
ja
cmp
outsb
in
out
lods
mov
incb
and
cmp
xchg
inc
and
movsl
and
jmp
mov
sarl
movsl
jb
cmp
movsb
mov
add
or
dec
mov
inc
cmpsb
mov
pusha
sub
sub
lock
btl
mov
mov
aam
inc
addb
pop
push
sbb
jge
in
les
js
pop
and
jne
jno
mov
call
into
dec
pop
outsb
sub
mov
xchg
stos
les
mov
fs
je
cmp
push
pop
outsb
loop
xchg
mov
mov
mov
imull
pop
push
addl
sbb
mov
cmp
aas
fstl
cmp
mov
add
fs
and
pop
sbbl
mov
or
into
and
inc
addr16
mov
iret
pop
arpl
in
orl
fbld
inc
test
or
hlt
adc
jne
cmp
or
outsb
out
orb
lds
test
dec
inc
std
sbb
sbb
jmp
int3
addr16
out
xlat
out
repz
js
filds
out
xor
stos
cmp
adc
shll
sbb
xchg
pop
daa
add
sbb
mov
movsb
imul
loope
fisubrs
insl
mov
inc
in
push
inc
ret
lods
cmp
sub
sbb
inc
movsb
mov
push
add
daa
sbb
cmp
or
into
and
xchg
xchg
fnsave
sbb
aaa
cmpsb
in
or
and
dec
out
push
roll
repz
pop
cli
mov
loopne
out
xchg
pop
int3
sub
jl
cmpsl
movsl
lcall
clc
bnd
xor
in
shrl
add
in
mov
daa
mov
xchg
lods
inc
or
pop
test
sub
sub
shll
and
push
add
and
rorl
ds
cmp
repnz
int3
mov
lods
test
pop
push
cmpsl
seta
sbb
ret
mov
decl
in
push
fsubr
sbb
hlt
mov
mov
mov
loop
mov
push
sbb
mov
add
cmpsb
repnz
inc
sahf
jecxz
call
inc
and
jp
fistpll
adc
in
adc
mov
ljmp
dec
add
xor
jb
jb
mov
std
inc
clc
mov
sub
data16
js
dec
xor
lea
add
xchg
sub
rcrb
jb
scas
dec
sub
mov
lea
loope
cmp
jg
xor
mov
lea
add
xchg
mov
xor
adc
call
mov
cs
ret
dec
xchg
lahf
jae
lahf
xchg
inc
or
add
add
notb
les
sahf
jo
or
shlb
imul
mov
int3
add
jno
inc
mov
mov
dec
mov
dec
jmp
jb
hlt
imul
cmp
repnz
les
push
sahf
test
pop
adc
lds
out
leave
cmpsl
and
std
in
fldcw
es
fisttpll
sub
shl
jno
dec
jbe
sub
or
cmp
or
jg
sbb
adc
mov
jmp
pusha
les
fsubl
nop
test
pop
xor
movb
cmp
enter
jg
and
fdiv
ror
imul
mov
pop
aad
inc
cmpsb
push
in
push
les
add
data16
push
or
lahf
dec
and
inc
aas
and
addl
jnp
orb
out
insl
mov
xor
fsub
or
out
lahf
jbe
scas
outsl
xlat
fistps
aaa
ds
cli
ljmp
or
xor
jge
sbb
add
xor
xor
push
fs
test
insl
mov
in
mov
jne
insb
xchg
cmpsl
movsl
repz
cmp
dec
mov
pop
inc
xchg
rcrl
inc
jne
fisttps
stos
inc
stos
call
pop
lahf
cmp
sub
xchg
je
fbstp
xchg
xchg
iret
lods
mov
insl
push
jb
dec
xchg
jp
sar
outsb
mov
or
cwtl
iret
inc
cltd
jo
mov
nop
sbbl
cmc
pusha
mov
scas
pop
xchg
jbe
movsl
sbb
cmp
dec
push
jge
sub
ljmp
jnp
mov
mov
sub
lret
and
cmp
shl
or
xchg
outsb
ret
lods
popf
dec
mov
lret
jecxz
jnp
pop
push
mov
mov
adc
mov
jne
xchg
mov
scas
cs
adc
xchg
fucomi
data16
jo
fistpl
inc
add
push
int
cli
aad
push
jecxz
imul
xchg
ss
dec
dec
gs
adc
xchg
mov
mov
inc
aad
adc
fs
mov
mov
out
add
ret
and
dec
add
push
add
scas
sub
jmp
adcl
negl
or
int3
adc
sub
add
mov
and
roll
jno
int
arpl
sarl
xor
dec
mov
xor
adc
pop
sbb
mov
jp
jo
inc
xchg
dec
in
and
add
jp
insb
bound
nop
lds
push
sti
jno
lcall
xchg
stc
imul
dec
push
jp
test
incl
add
mov
sar
jns
pop
repz
daa
cmp
push
add
add
addr16
insl
sbb
mov
dec
dec
mov
test
imul
add
mov
repz
jnp
es
jne
cmp
cmpl
clc
dec
pop
rcr
mov
pop
xlat
andl
sbb
pop
sub
lret
mov
loope
hlt
daa
sahf
pop
cld
fildl
sbb
clc
loope
mov
fistps
adc
mov
sub
jne
xchg
xlat
mov
jle
sbb
pop
insb
pop
jno
and
add
inc
sarl
daa
adc
sbb
mov
xchg
and
nop
sbb
mov
and
or
es
lret
inc
lret
jg
xchg
jmp
ret
sbbb
mov
sbb
nop
andl
les
cmpl
nop
dec
or
out
push
adc
pop
push
adc
mov
mov
data16
push
mov
add
adc
and
xor
leave
and
sarl
in
fadds
fldt
leave
adc
xchg
or
in
push
std
dec
adc
testl
sub
xor
fs
inc
data16
jno
cmc
icebp
push
sub
arpl
cmpsb
stos
hlt
ret
push
mov
dec
aas
jge
jo
sti
mov
icebp
mov
push
rol
in
leave
mov
push
cmp
adc
loopne
cmpsb
mov
pop
in
out
clc
scas
flds
and
lahf
sbb
cs
mov
cmc
fbstp
mov
out
test
and
xchg
mov
jg
and
mov
jle
js
and
xchg
sub
add
ja
nop
jnp
in
ja
mov
xchg
inc
int
dec
filds
out
mov
ja
out
stos
fldenv
xor
cwtl
shll
push
mov
mov
add
loopne
mov
sahf
push
dec
mov
adc
in
lods
pop
push
fisubl
cmpsb
jo
orl
dec
mov
sub
fwait
mov
test
imul
sahf
data16
stos
sub
cwtl
vhaddpd
movsb
lcall
or
data16
rolb
imul
out
or
decl
movsb
mov
mov
xor
imul
sbb
daa
daa
loopne
mov
iret
fimull
push
and
je
popf
and
mov
daa
mov
pop
add
or
xlat
pmulhuw
push
in
xchg
cld
pop
mov
mov
mov
ja
ficompl
or
out
xchg
push
cli
xchg
loopne
xor
test
sub
cwtl
rcrb
loop
cld
mov
gs
dec
mov
dec
jp
or
lock
cmp
jbe
xchg
cmp
imul
cmp
pop
jb
cmpsb
push
in
mov
rcll
fnstsw
scas
cmpsb
and
ja
mov
js
loope
jle
mov
or
cmp
rclb
bound
clc
hlt
push
cld
mov
jne
mov
xchg
call
pop
mov
xchg
les
cld
pop
daa
sahf
test
push
pop
mov
adc
cltd
in
insl
and
popa
push
mov
fstps
jae
inc
inc
or
or
push
out
addr16
out
cmp
in
popf
loop
or
or
cmpsb
roll
mov
dec
mov
andl
inc
fisubrl
mov
in
adc
fidivrs
mov
bound
int3
cmp
push
scas
stos
sti
sbb
jecxz
inc
mov
mov
lds
stos
mov
mov
sahf
pop
sbb
sbb
mov
xor
sub
cmpsb
xlat
cwtl
add
lods
mov
xor
aaa
jb
incb
mov
mov
or
and
jae
clc
nop
ljmp
leave
jecxz
sti
inc
inc
mov
into
inc
sbb
jle
push
inc
iret
push
or
ret
sbb
mov
pop
loope
repnz
cmpl
and
loope
xchg
stc
jae
enter
xorl
out
cli
rcr
idivb
inc
sub
hlt
test
out
adc
cmp
adc
test
icebp
dec
shrb
hlt
packsswb
enter
adc
es
dec
test
js
fstl
adc
push
and
jae,pn
xchg
shrl
test
repnz
mov
xchg
mov
mov
jecxz
in
xchg
or
mov
adc
popa
outsl
add
fldenv
mov
cmpsl
sahf
clc
xchg
inc
daa
push
icebp
jne
roll
add
pop
das
sbb
mov
mov
pop
dec
pop
scas
adc
cs
ss
into
push
sbb
in
cmpl
mov
std
push
cmp
inc
or
jne
push
shlb
pop
loopne
aaa
dec
and
dec
int
xchg
cmc
inc
and
loop
xlat
mov
lods
movsb
and
adc
shrl
jne
and
outsb
push
aam
ljmp
out
jns
adc
aas
xor
xchg
jl
lds
cli
inc
lcall
clc
cs
inc
filds
daa
stc
xchg
mov
jno
jmp
xchg
sub
js
shlb
jnp
xor
jl
xor
jl
bound
mov
outsl
lahf
lret
mov
push
xor
dec
ja
jp
shll
pusha
clc
dec
imul
lret
outsb
mov
out
cmc
gs
icebp
inc
push
add
xchg
pop
ss
xor
cmpsl
xor
sbb
in
dec
in
aas
adc
mov
or
hlt
bound
sub
outsb
test
into
aas
shrb
cmc
dec
adc
sub
cmc
bound
xor
outsb
jge
inc
pop
les
ja
inc
test
push
or
fwait
and
int
js
cs
add
lock
cld
cmpsl
pop
pusha
out
fistps
divb
mov
dec
ss
add
iret
cli
mov
fldl
enter
fistpll
inc
pop
adc
jo
pop
jge
leave
sbb
outsl
mov
jg
xchg
pmulhuw
push
mov
clc
mov
out
cmpl
rorl
mov
xchg
mov
jl
dec
dec
xor
xchg
adc
fwait
dec
xor
xor
loope
jl
jno
mov
mull
sub
out
or
fsubr
das
fs
add
stc
cmpsl
jno
mov
sbb
mov
jbe
stos
loope
std
jno
inc
add
cld
iret
inc
adcl
cmp
add
fs
xchg
daa
out
icebp
nop
jp
mov
dec
insb
dec
jg
aam
mov
fidivl
push
jb
lret
loop
lock
ret
lds
stos
rcll
and
or
pfrcpit1
add
mov
xchg
cmp
repnz
ret
pop
hlt
xlat
fidivrs
shl
pushf
shll
sti
faddp
out
pop
in
jb
or
mov
inc
ficomps
std
fistpll
and
push
pusha
bound
subl
mov
xchg
test
pop
dec
pop
cwtl
cmpsb
lahf
push
push
mov
xchg
cwtl
in
and
sub
imul
out
mov
fiaddl
push
test
mov
push
into
gs
inc
and
adc
sbb
jae
out
or
popa
dec
add
xchg
push
cli
movsb
add
cmp
jmp
aam
xor
push
adc
inc
aam
rclb
test
insb
cmp
pop
xchg
sbb
mov
adc
rcr
mov
pop
stc
jmp
push
push
jle
shl
adcl
outsl
xchg
test
mov
dec
mov
idiv
mov
test
mov
adc
add
cmp
mov
jg
jecxz
lret
xor
sub
mov
xchg
or
mov
out
icebp
and
shlb
fs
sub
adc
mov
pop
add
adc
insl
jp
mov
in
jbe
jge
xchg
shrl
mov
pop
adc
in
push
xor
sbb
jle
rcrl
pop
xor
mov
sub
arpl
idivl
mov
pop
mov
mov
daa
xchg
not
jae
insb
or
jge
jl
test
arpl
dec
cld
fidivrl
daa
pusha
test
add
mov
cmp
or
fs
xlat
clc
enter
fs
and
cmpb
call
insb
lret
mov
cwtl
jnp
adcl
mov
lret
push
shrb
ljmp
fneni(8087
std
push
rorl
in
pop
push
xor
dec
insb
mov
xor
cmpsb
fimuls
popf
popf
test
mov
mov
xchg
pop
inc
lcall
lret
nop
sbb
mov
sti
outsb
loop
dec
fnstenv
sahf
lock
sbb
push
ja
int3
test
xor
mov
in
cltd
repnz
mov
pop
aam
xchg
dec
imull
in
sbb
xchg
sub
xchg
push
pusha
push
mov
mov
jp
mov
mov
outsl
xchg
pop
lods
stos
fs
movsl
or
stos
mov
jp
mov
adc
daa
push
pop
push
or
int3
pop
adc
cmp
lahf
icebp
lds
inc
mov
ss
push
adc
sub
cli
cmp
sbb
adc
push
int
pop
mov
ja
outsl
popf
ficoms
aad
cmp
mov
mov
loopne
mov
ljmp
shl
cwtl
mov
and
pop
mov
mov
es
push
sbb
iret
push
adcl
and
cmpb
push
insb
je
lock
push
mov
inc
mov
ficomps
adc
or
subb
mov
mov
mov
lods
mov
test
jae
rolb
iret
xchg
inc
push
movsl
popf
inc
lods
negl
sub
sbb
int
add
inc
push
jbe
leave
adc
addl
inc
out
or
shlb
adc
lea
mov
mov
add
nop
ljmp
bound
sbbb
add
loope
or
mov
lret
sbb
dec
leave
loopne
push
lcall
dec
push
imul
mov
clc
push
addr16
inc
popf
cmpsb
mov
sub
je
jae
xor
clc
sbb
add
ja
stos
scas
shrl
nop
fidivrs
jae
pushf
pop
fstpt
xchg
imul
sub
test
and
push
loop
inc
cmp
and
clc
sub
shrl
adc
pop
sbb
cmp
and
push
pop
adc
cmp
lock
cmpsl
xor
jne
lcall
das
les
popa
and
aad
fs
pusha
and
pop
cmpsb
dec
jp
jmp
or
xchg
repnz
jnp
adcb
pushf
add
sbb
repz
cli
gs
mov
adc
add
ffreep
insl
fdivl
mov
jge
aas
mov
inc
shrl
sub
mov
cwtl
add
in
mov
jns
push
sub
ds
addr16
xlat
out
jno
jle
ret
imul
dec
sahf
cmp
add
ja
clc
fisttpll
push
and
mov
mov
fs
cmp
loop
push
repnz
fcomip
xor
clc
outsl
cwtl
es
lret
xchg
in
mov
das
sahf
or
aaa
add
jge
fstpt
test
sub
fisttpl
fwait
jno
cli
jle
push
jne
aaa
pop
sub
inc
imull
and
aaa
or
sbb
jne
mov
pop
outsb
ror
cmp
mov
sub
adcb
jge
and
xorl
pushf
inc
mov
pop
popf
cmc
out
xor
fcoml
lahf
das
inc
and
xchg
nop
cmp
aas
insb
adcl
idivw
and
cmc
lds
and
fsubs
test
mov
enter
add
pop
sbb
out
bound
mov
pop
and
add
add
mov
insb
xor
and
mov
adc
mov
xorb
out
or
mov
lret
xchg
jnp
cli
lods
cltd
xchg
jecxz
cs
aas
ss
jle
inc
cmp
fimuls
test
adc
xchg
jecxz
dec
dec
out
cmp
int
std
lock
lcall
push
and
lret
mov
in
insl
pusha
push
fsubrs
add
xor
inc
and
dec
pusha
mov
adcl
xchg
fsts
data16
add
jne
mull
xchg
inc
stos
jmp
mov
test
xor
push
int3
movsl
ficoml
sarb
fsub
in
xchg
pusha
out
xchg
or
lods
add
sub
inc
push
fwait
cltd
cmp
pop
outsb
mov
sbb
add
xor
lea
incl
insb
bnd
pop
lea
andb
and
cmpsl
gs
xor
lahf
push
lahf
fsubp
mov
popf
mov
push
sbb
popa
and
or
sub
pop
ja
out
out
jmp
fistps
pusha
xor
inc
cmp
inc
hlt
rcll
adc
mov
repz
add
fidivl
xor
inc
xchg
ljmp
fmul
cmc
repz
xlat
mov
mov
subb
mov
mov
inc
mov
mov
add
inc
or
cmp
add
add
test
mov
inc
test
sub
and
fcoms
jnp
jb
leave
std
push
aad
jp
mov
jne
mov
and
imul
movsb
sub
mov
fprem
mov
stos
adc
mov
xchg
cmpb
xchg
mov
pop
push
loope
in
add
aad
stos
xor
push
out
pop
scas
ret
sub
sub
scas
mov
sti
mov
in
push
jmp
pop
repz
ret
and
cld
cwtl
inc
addr16
popl
das
decb
insl
cmpsb
loope
out
sbbb
lret
dec
in
popf
cltd
rep
mov
xor
xor
ds
pop
stos
aam
shlb
mov
pop
test
jnp
sub
out
inc
leave
pop
xor
inc
test
lahf
mov
jnp
mov
sarb
jbe
push
sub
ret
popa
ret
cmp
cli
sub
inc
dec
and
jp
xor
popa
iret
push
xchg
outsb
jmp
pop
js
mov
jnp
add
jg
dec
xlat
mov
push
data16
hlt
mov
sbb
xchg
out
jno
mov
jge
cmp
cmp
leave
scas
inc
adc
fcmovnbe
adc
cwtl
cmp
stos
pop
and
pop
lahf
dec
xchg
movsl
xchg
iret
ret
push
bound
jae
inc
insb
sub
rcrl
cmc
jg
mov
sbb
cmp
ror
add
pop
addb
cmp
mov
pop
cmp
lea
sub
cmp
mov
xor
jb
in
pop
aas
rorl
cmp
push
in
jae
xchg
cmp
sti
aam
cld
aaa
jl
push
sub
repnz
mov
mov
lret
arpl
lods
mov
mov
cwtl
push
nop
addr16
popa
ljmp
cmp
imul
in
aam
addb
inc
icebp
std
scas
cmp
sub
mov
mov
out
ret
xor
in
sbb
test
mov
rorl
sbb
and
adc
daa
cmp
xchg
outsb
fists
cmp
push
xchg
mov
inc
pop
and
mov
xor
sbb
ja
stos
test
xchg
mov
test
int
clc
sbb
inc
mov
sbb
mov
dec
in
cmpsl
adc
lea
push
cwtl
lret
lahf
or
add
enter
icebp
mov
inc
imul
cmp
jno
flds
sbb
sarl
lret
in
dec
insb
test
lods
pop
add
and
les
sub
mov
sbb
pop
subl
mov
xchg
push
out
pop
and
or
mov
mov
dec
inc
popa
pop
flds
push
push
lea
push
mov
xchg
cwtl
fdivs
push
push
icebp
scas
pop
push
loop
pop
pusha
pop
je
jle
sti
cmp
ficoml
leave
inc
lcall
inc
sbb
leave
adc
test
push
popf
and
xor
jl
xchg
cmp
sbb
jecxz
xor
jne
adc
mov
int
and
out
mov
mov
sti
xor
adc
inc
xlat
dec
push
xor
jne
js
fsubl
movsl
cmp
out
mov
js
pop
dec
dec
inc
add
mull
sub
jo
adc
or
outsl
jp
jle
ficomps
add
push
or
xchg
mov
xor
dec
mov
sbb
gs
imul
mov
push
dec
and
add
cmp
mov
fwait
insb
mov
and
and
dec
ret
inc
adc
xor
pop
cmpsb
fs
and
adc
aas
rcll
xor
mov
jp
insb
dec
sbb
subb
cmp
mov
inc
jge
lods
popf
lahf
out
clc
aad
loop
or
dec
sbb
mov
cwtl
pop
clc
in
fnstsw
dec
mov
and
ror
xchg
mov
jg
inc
mul
jmp
add
movsb
cmp
testb
sti
adc
mov
int3
shrb
cmpsb
sub
stc
es
fcmovnb
dec
es
mov
mov
mov
or
pmulhuw
shlb
cli
push
pop
addr16
je
add
add
pop
cmp
std
dec
sub
ret
cmp
lret
inc
inc
das
cmovp
pushf
adc
dec
std
pusha
pushl
shrl
mov
mov
jne
inc
ss
jo
mov
adc
lock
lahf
out
mov
push
jp
mov
cld
ficoms
jo
fistps
xchg
icebp
stc
aaa
rorl
xchg
and
xchg
call
scas
jns
cwtl
test
inc
out
insl
das
xor
add
add
mov
fisttpll
inc
add
dec
das
jecxz
push
pop
inc
push
cmc
jge
aaa
iret
ret
sbb
add
mov
jp
fstpt
pop
loopne
mov
pop
mov
pusha
push
jecxz
hlt
sbb
pop
adc
push
popf
push
jb,pt
add
imulb
outsb
call
jl
test
push
or
xor
pop
ret
pop
dec
shrb
xchg
in
push
and
subl
mov
das
sbb
sti
cwtl
lods
jp
repnz
jmp
dec
or
fs
movsb
dec
jg
enter
jnp
push
xor
sub
push
and
dec
adc
pop
xor
push
jecxz
xchg
dec
dec
inc
insb
lds
sub
inc
testb
addr16
or
inc
jno
mov
aaa
cmpsb
pop
ljmp
push
push
mov
xor
add
mov
jg
rcr
outsl
out
add
jl
sbb
sub
or
out
pop
dec
andl
clc
xchg
cmp
cwtl
add
mov
jbe
mov
test
jp
mov
mov
push
lgs
inc
lods
pop
jae
outsb
mov
inc
sub
das
int3
loope
add
mov
and
and
lahf
jecxz
insl
pop
mov
pushf
mov
daa
push
adc
test
clc
inc
inc
gs
jns
mov
cmc
sbb
aad
jg
cli
push
and
jge
sub
add
push
in
add
int
pop
outsl
sbb
test
test
sbb
dec
mov
xor
daa
jmp
mov
sbb
in
or
cmp
mov
dec
aam
subl
ret
insl
jne
cmp
pop
and
shll
adc
push
or
insb
ljmp
dec
lea
call
arpl
mov
lods
pop
mov
test
test
arpl
testb
fwait
test
aas
test
mov
int
or
sbb
mov
add
adc
xor
sahf
adc
add
lret
in
mov
mov
sbb
inc
jl
dec
xor
mov
bound
mov
sub
dec
lcall
dec
imul
pop
sub
pop
dec
sbb
movb
push
or
rolb
jno
test
pop
and
mov
jmp
outsb
lret
arpl
push
cld
mov
xchg
mov
int3
jno
jb
mov
sti
jns
lret
fisubrl
push
push
sub
in
shrl
loop
xchg
jae
mov
lcall
fisubl
nop
mov
loopne
rorl
ljmp
cmp
pop
into
jge
ret
mov
in
jecxz
inc
rcl
cmp
loopne
lds
in
pop
cmc
or
xor
into
test
out
xchg
fdivr
pop
loopne
cmp
sbb
jne
shr
cltd
mov
clc
insb
push
push
pop
pop
lahf
arpl
and
insb
pushf
lahf
repnz
cmp
ficomps
sbb
dec
psubusb
xchg
js
fwait
add
pop
inc
adc
jne,pn
or
out
xchg
je
pop
lea
jae
test
mov
shl
add
inc
enter
mov
out
and
pop
out
cld
mov
vminps
dec
nop
clc
and
rcll
testb
dec
and
fstpl
fwait
addl
or
xlat
jmp
xchg
je
scas
lcall
nop
dec
lods
xlat
mov
scas
pop
imul
in
mov
adcl
rolb
test
sbb
add
inc
ljmp
mov
xor
out
xor
dec
inc
int3
and
inc
mov
xchg
mov
or
stos
inc
or
mov
jbe
and
jecxz
pop
fstl
jp
into
mov
in
in
repnz
cmp
xor
mov
test
pop
sbb
dec
dec
test
imul
fs
data16
xor
mov
jno
repnz
dec
bound
adc
sbb
lock
cld
nop
fcompl
mov
out
xor
inc
ja
ret
mov
aad
pop
push
mov
add
sub
pop
mov
rcrb
add
mov
mov
dec
js
cmp
sti
sbb
movsl
mov
lcall
xchg
nop
aas
xlat
dec
adc
dec
lock
push
inc
sub
adc
and
and
insb
mov
test
jbe
hlt
sti
mov
and
test
in
pop
cld
lds
outsl
rol
push
push
jmp
mov
outsl
outsl
mov
adc
enter
or
mov
test
jo
mov
pop
jne
inc
rorb
cs
pop
push
fldenv
test
int3
mov
mov
inc
cmpsl
adc
shll
imul
push
fsubl
cmp
jg
cwtl
and
mov
mov
jnp
xchg
les
clc
cwtl
xchg
or
cmp
adc
xlat
and
add
xchg
xchg
mov
adc
pop
cltd
movsb
pop
enter
or
js
xor
pop
xchg
lods
sbb
sub
push
sbb
leave
call
xchg
and
stc
lret
loope
push
in
xorl
les
jae
mov
popa
jge
dec
jecxz
out
push
xchg
imulb
ficompl
jae
jnp
adc
sbb
add
loope
xchg
or
js
sbbb
stos
adcb
cld
setne
les
jle
imul
in
sti
mov
add
or
add
lods
in
cltd
nop
inc
add
out
outsb
inc
and
loopne
xchg
mov
ds
xchg
das
loope
cmp
enter
sti
stc
dec
lahf
aam
cltd
mov
ds
popf
xchg
aas
and
sbb
adc
rorb
add
sbb
push
mov
add
sti
sbb
sti
mov
into
cli
mov
leave
fstps
push
jno
loop
xlat
sahf
lret
mov
loop
adc
sahf
in
push
xchg
aas
xor
sets
sti
testb
insl
inc
aaa
jg
jge
psubusb
sub
or
loop
lock
stos
jo
fidivrl
sbb
add
lock
jge
sub
xor
jo
push
inc
arpl
cmp
inc
push
push
sbb
xchg
mov
mov
sarb
sbb
test
jl
push
insb
cli
or
inc
icebp
repz
push
or
lret
mov
xor
in
jne
inc
pop
pop
mov
pop
sahf
push
xchg
mov
lcall
mov
movsl
idivb
cmp
ret
mov
xchg
mov
test
addl
dec
je
push
sbb
push
xor
imulb
ljmp
fidivrl
loope
push
adcl
or
push
push
inc
lea
cmp
sub
mov
cmpsb
sub
ret
repz
ffree
aad
ret
add
aas
mov
or
pop
push
sub
in
jbe
les
add
mov
int3
mov
push
cmp
sub
icebp
inc
xor
push
fmuls
lods
mov
aad
and
decl
xor
mov
notb
xor
jecxz
test
pushf
add
imul
dec
jp
mov
push
inc
mov
test
lret
sub
or
jge
ds
mov
call
shrl
outsl
movsb
movsb
sub
sbb
fmul
lods
aaa
and
pop
fistpll
cmpsl
jbe
adc
adc
rcll
sub
xchg
iret
movsb
stos
pop
or
into
popa
sub
cltd
stos
sbb
pop
sub
lahf
icebp
jle
roll
and
daa
pushf
cltd
daa
xor
ret
loope
xchg
mov
push
sbb
insl
jb
xchg
stos
jge
push
popa
add
dec
bound
add
xchg
push
shrb
jae
dec
jae
repz
shr
loope
adc
dec
jno
mov
jle
xchg
dec
cmp
adc
call
xor
pop
inc
jns
mov
adc
shll
in
and
aas
jbe,pn
pop
mov
jp
cmpsb
add
pop
cmp
cmp
daa
flds
ret
ja
inc
push
mov
push
inc
mov
mov
pushw
fwait
xchg
sti
movsb
bound
sbb
jne
in
xchg
add
add
out
or
sbb
inc
jae
movsl
or
push
loop
cmp
xor
dec
mov
cwtl
pusha
in
insb
or
and
aas
jl
fs
nop
andb
ja
pop
scas
enter
xchg
dec
cmp
pop
mov
ss
cmp
push
test
hlt
mov
dec
xchg
les
or
lcall
cli
mov
lods
cld
xchg
ss
cmp
jnp
or
push
in
nop
push
lea
xchg
mov
fwait
stc
jmp
push
mov
dec
inc
fisubrl
pushf
je
dec
or
stc
jno
ret
jmp
cmp
insb
sbb
or
inc
and
sbb
xor
dec
pushf
lods
iret
mov
aas
loop
sub
rcrl
sbb
sbb
icebp
arpl
sbb
xchg
inc
cwtl
adc
lds
pop
xor
and
push
pop
mov
je
popf
mov
or
cltd
lret
mov
pop
sbb
cwtl
inc
cwtl
sbb
fs
adc
jmp
mov
jmp
ss
push
ret
int3
mov
xor
xor
test
setl
dec
aam
fcmovnb
xchg
mov
adc
xor
test
ret
lods
xor
mov
scas
mov
dec
or
mov
mov
jno
pop
addb
flds
and
std
ja
das
add
cmc
add
sub
push
shlb
jl
enter
mov
les
xchg
sarl
adc
loope
popa
or
push
xor
cs
lahf
fdivrs
xor
mov
cmpsb
je
lahf
jb
mov
stos
xlat
jecxz
loopne
jne
shr
fdivs
inc
and
or
jmp
fwait
int3
add
aam
jp
adc
add
xchg
insl
ret
xchg
test
mov
sbb
cmp
jno
jle
ss
mov
lods
sub
jns
mov
and
sarl
in
or
cwtl
fildll
lods
sub
sub
inc
xchg
stos
icebp
iret
movsb
cmp
add
jno
leave
xor
pusha
lds
data16
ss
cmp
dec
outsb
pusha
pop
sub
and
inc
dec
stos
fbld
push
mov
mov
shl
test
xor
in
mov
sub
lcall
sarb
mov
sub
movsl
adc
testl
movsb
adc
push
pop
cmp
cmp
dec
call
pushf
call
mov
inc
fwait
adc
push
mov
dec
mov
lcall
xchg
dec
in
std
jmp
je
sub
inc
dec
shl
mov
js
cwtl
fildll
out
popa
or
dec
pop
sub
out
pop
push
lcall
xchg
ret
loope
or
mov
pop
gs
mov
mov
mov
xchg
lods
inc
hlt
push
cmp
xchg
jb
dec
into
adc
sub
pop
fiadds
dec
loop
iret
push
ret
sub
mov
out
mov
ss
xchg
movsl
adc
or
cs
sbb
aam
pop
in
fsubs
outsl
add
or
sub
daa
aad
popa
push
subb
sbb
aaa
jno
stos
das
cmp
pop
sbb
and
mov
inc
imulb
cmpsb
outsl
sbb
lcall
and
sbb
out
and
mov
lods
xlat
bound
dec
jmp
mov
mov
in
fidivl
sub
mov
push
sbb
and
push
daa
cwtl
push
pop
fs
mov
adcb
xchg
shr
pop
pushf
sbb
cmp
pushf
js
sub
mov
les
add
sbbb
push
nop
out
add
outsb
popa
adc
cmpsl
or
fldl2e
sub
sub
insl
fwait
rcrb
adc
cmovno
mov
and
xlat
mov
inc
push
repz
dec
xchg
in
mov
lods
iret
dec
fmuls
inc
jnp
push
xor
xchg
pop
adc
pop
stos
push
ljmp
pop
cmovs
and
jmp
fwait
andb
jb
cs
sbbl
leave
push
mov
aaa
fiaddl
mov
xchg
sbb
push
shlb
mov
add
ja
fidivrl
dec
fsts
cmp
and
enter
data16
iret
or
mov
arpl
jmp
fnstcw
mov
xchg
xlat
out
mov
xor
push
cmp
or
test
inc
jnp
sbb
pop
pop
xor
push
mov
mov
idivl
outsl
dec
stos
data16
jge
iret
js
lods
andb
loopne
std
addb
sbb
dec
pusha
xor
hlt
pop
and
test
mov
mov
mov
mov
dec
add
xor
mov
cmp
cmpl
aaa
sub
jb
int
inc
insb
lret
push
mov
dec
jge
fildll
icebp
mov
push
ja
test
repz
loopne
jmp
lret
jno
pop
repz
xchg
clc
daa
push
in
pusha
sbb
lahf
es
inc
xchg
mov
pop
push
mov
sbb
xchg
jecxz
adc
fdivl
addr16
jge
test
mov
fmuls
nop
push
cmp
pop
mov
fcoml
nop
sbb
push
daa
sub
lret
adc
movsl
inc
test
mov
js
filds
jne
xchg
mov
out
or
adc
call
sbb
sub
xchg
repz
jg
xor
aas
stos
mov
and
pusha
push
jb
mov
sbb
jnp
cmpsl
cmpb
faddl
cmp
jl
add
adc
sub
jns
call
and
jae
repz
ds
imul
insb
in
je
cmp
xlat
xor
inc
shrb
mov
and
cli
sub
xor
shll
inc
inc
cltd
inc
mov
mov
movsb
cmc
or
icebp
test
xor
arpl
add
sbb
xor
push
inc
mov
jg
xchg
mov
inc
orl
mov
sarl
sub
add
ret
cmc
imul
fiaddl
xor
bound
in
adc
aam
cltd
imul
or
ds
jmp
lret
out
or
jo
pop
popf
xchg
cmp
add
imul
pop
test
cli
shrb
aaa
inc
or
push
mov
mov
jmp
imul
mov
xor
mov
negl
sub
popf
loope
jns
dec
loope
jecxz
repnz
in
in
mov
mov
sahf
test
xchg
xchg
pop
inc
and
inc
aaa
mov
out
ficompl
daa
push
mov
fs
test
adc
imul
mov
icebp
mov
xchg
or
jge
lahf
call
jo
test
cltd
mov
cs
mov
inc
xor
mov
call
lea
cli
and
jne
mov
dec
mov
pop
into
sub
xchg
aam
cmp
ljmp
inc
dec
add
or
leave
cld
shll
mov
cmp
pushw
dec
ds
xor
jp
pop
pop
add
mov
out
jecxz
sub
sub
lods
repnz
inc
dec
sbb
cmp
inc
lret
xchg
je
pop
jbe
mov
shrl
or
aas
fxch
movsb
add
std
mov
iret
jl
mov
mov
movsl
pop
pop
or
rolb
mov
jo
mov
and
orb
jb
sarl
fcoml
and
scas
outsb
mov
inc
lret
ficompl
inc
pop
int3
test
pop
or
cmpsl
les
xchg
mov
pop
ret
lock
xor
or
push
fwait
movsb
push
sbb
push
imul
jle
or
and
stos
cmp
mov
cmpsl
pop
mov
sar
test
sbb
in
inc
mov
or
jecxz
dec
push
xor
mov
adc
lahf
jge
jo
xor
or
test
sarb
dec
aas
daa
jnp
xchg
cmp
xchg
enter
loop
jmp
pop
add
pop
imul
xor
or
lret
add
or
repnz
xor
cmp
pop
jb
lahf
mov
mov
andnps
and
push
cmp
jg
fnsave
mov
mov
test
dec
push
rcrl
push
and
das
pop
jmp
jno
std
xchg
add
lods
jae
nop
cwtl
fldl
pusha
ret
repnz
pop
push
mov
xchg
pop
fwait
jge
push
fisubs
jp
dec
insl
push
mov
aad
or
popf
add
jb
or
jbe,pn
sub
jne
outsl
or
xchg
gs
adc
imul
xchg
mov
out
fistpll
or
lods
movl
cmp
sbb
xchg
lods
xor
repz
out
scas
repnz
fldl2t
mov
sub
fidivs
lahf
push
and
or
push
pop
cli
xlat
dec
out
and
ja
or
add
pusha
inc
dec
loope
enter
sbb
pop
jle
mov
pusha
push
out
lods
inc
xor
leave
arpl
jns
int3
ja
sbb
stc
mov
dec
into
dec
push
cmp
or
in
xchg
into
sbb
pusha
shll
gs
hlt
cmp
imul
movsl
test
aam
cmp
aam
das
mov
cld
jnp
sbb
xchg
push
add
inc
pop
cltd
fsubrs
mov
push
pop
sti
data16
mov
pop
xor
dec
nop
movsb
orb
mov
mov
mov
mov
dec
insl
and
xchg
inc
jmp
dec
sub
roll
jns
push
lahf
add
dec
cmp
aaa
imul
mov
add
das
popa
mov
rol
and
testb
test
lds
jns
mov
ror
sub
je
push
notb
cmp
adc
lods
sti
iret
hlt
mov
sub
mov
sbbl
mov
mov
fwait
rclb
adc
fwait
mov
ret
addr16
mov
jmp
or
inc
mov
cs
mov
push
pusha
lcall
sahf
jl
dec
xlat
sbb
outsb
rcrl
sub
ja
jbe
mov
and
cmc
test
jecxz
pop
mov
and
xchg
sub
inc
adc
outsb
rclb
jp
push
pushl
fidivrs
and
test
sub
mov
out
push
pop
inc
or
scas
imul
xlat
xchg
cld
testl
aas
mov
xor
adc
setp
jne
movsl
sbb
lods
xchg
lds
mov
jle
jb
lcall
leave
mov
jp
mov
arpl
or
into
xor
sub
lcall
pop
ljmp
ret
cmpsl
inc
aam
pop
std
movsb
fs
xchg
and
cwtl
arpl
fadds
mov
xchg
cmp
or
adc
arpl
mov
orl
dec
out
cmp
cs
mov
dec
popa
jne
pop
xchg
inc
sub
lret
sahf
dec
adcb
xchg
mov
dec
sub
into
sbb
push
cmp
repnz
jle
pop
push
stos
xchg
es
lea
sub
mov
sbb
imul
sbbb
stos
inc
xchg
sub
jle,pn
js
fstl
mov
mov
cli
sub
scas
adc
inc
outsb
sbb
inc
jns
into
push
pop
inc
sti
cli
add
repz
es
jo
or
fdivs
lret
and
mov
imul
mov
cmp
xlat
push
xor
jo
jne
out
cmovae
push
cmp
add
negb
mov
lock
lret
test
enter
imul
sub
js
dec
aas
es
aas
jbe
imul
mov
in
ja
shld
sarb
ljmp
iret
sub
rcrb
mov
inc
mov
loop
mov
lahf
stos
incb
nop
push
add
in
jg
xchg
sbb
mov
mov
jnp
push
or
xchg
mov
sarl
xchg
loopne
jle
bound
dec
or
sub
push
cmp
sbb
cmpsl
and
push
rol
mov
sti
add
mov
repnz
dec
mov
jo
xlat
sbbb
inc
add
dec
sbb
sub
xor
enter
add
aam
test
xchg
roll
lds
fnstenv
jle
lahf
jmp
imul
cltd
jge
inc
lods
leave
es
popa
inc
cmc
adc
test
ds
imul
imulb
arpl
pop
adc
cmp
xchg
mov
cs
cmp
mov
je
or
jbe
std
xchg
mov
bound
stc
fildll
out
mov
ja
inc
jmp
hlt
mov
xor
sti
xor
adc
test
cwtl
cmp
jae
int
dec
ret
adc
out
sahf
push
inc
cltd
inc
adc
test
jl
fbstp
icebp
mov
xchg
adc
stos
sbb
mov
leave
fs
cwtl
test
ja
adc
mov
jns
xchg
in
fs
mov
jg
inc
inc
xchg
pop
inc
xchg
jl
cmp
cmpsl
jne
cmova
inc
mov
inc
and
sub
loope
add
mov
test
xchg
pop
pop
mov
in
call
ret
pop
sahf
sar
inc
movsl
ret
rcl
hlt
push
push
and
mov
dec
ja
pop
cmp
loopne
scas
pop
sub
inc
in
push
cmpsl
add
add
dec
jl
mov
push
test
sbb
or
fwait
mov
mov
lods
sahf
in
adc
mov
mov
push
mov
hlt
inc
sbb
rcrl
jno
add
push
pop
shrl
cmpsl
dec
xchg
in
push
std
leave
inc
ret
sar
inc
adc
xchg
out
movsb
repnz
pcmpgtd
push
sbb
mov
adc
push
popl
mov
fstps
xor
push
and
cmp
shrl
sub
jg
out
jg
sbb
mov
je
dec
dec
push
inc
movsb
mov
dec
add
sub
notb
lcall
and
mov
sbb
call
cs
or
mov
cmp
pusha
inc
or
adc
add
mov
sti
or
pop
add
in
xchg
cmp
pop
cmp
sbb
or
test
in
jae
push
pop
sub
xchg
sarl
dec
inc
fsubl
lock
pop
or
xchg
push
sub
mov
insb
jnp
sar
adc
mov
nop
aam
shll
mov
lret
and
add
mov
jns
cld
loopne
and
nop
xchg
add
jmp
pop
ret
nop
pushf
lods
or
mov
adc
pusha
ja
mov
or
xchg
sahf
das
sub
push
jbe
lea
ficoml
or
pop
fmul
pop
mov
shl
in
aad
add
pop
or
xchg
mov
inc
outsl
dec
repz
pop
push
inc
pxor
sub
dec
add
arpl
nop
negb
jecxz
jbe
mov
inc
aas
xor
mov
lock
sub
rclb
nop
and
out
mov
int
leave
pop
jb
adc
cs
lahf
inc
jmp
adc
scas
adc
or
pop
in
sub
test
xorl
leave
mov
mov
scas
pop
filds
repnz
dec
inc
inc
push
aad
mov
and
ja
repnz
mov
and
into
xchg
lods
jecxz
push
fiadds
adc
lahf
icebp
add
and
push
test
adc
movsl
adc
add
lds
popa
into
sahf
jmp
dec
xchg
xlat
pop
sub
xor
dec
mov
jp
arpl
out
add
call
jno
mov
add
sbb
lods
push
mov
and
outsl
add
ret
push
push
enter
add
in
in
loope
jo
movsb
mov
int3
shr
ds
decl
repnz
sbb
pop
incb
inc
sahf
xor
jne
or
cmp
and
xor
xchg
in
inc
sub
pop
test
mov
dec
pop
cmp
sub
cmpsb
mov
sub
ret
les
fadds
pop
sbb
mov
cmp
xchg
stos
je
xchg
into
repnz
fiadds
lods
leave
push
or
enter
mov
dec
in
jns
mov
push
push
jmp
movsb
pop
xchg
adc
aas
cmp
mov
loope
mov
inc
sub
sbb
ror
enter
cmp
jae
push
pop
sub
inc
or
imul
add
sahf
inc
repnz
push
call
jnp
pop
inc
inc
clc
jp
stc
lods
stos
xchg
in
inc
push
inc
insb
loope
and
or
dec
fs
ja
xchg
pop
mov
rcrb
cltd
push
cmp
sbb
int
mov
into
loopne
shufps
lock
fstpt
xor
mov
xlat
adc
je
out
lret
pop
and
mov
sbb
push
sbb
insb
outsb
mov
jb
leave
pushf
jecxz
pop
jnp
lds
popa
xor
xchg
aad
pop
js
sub
xor
pop
fs
dec
pusha
sbb
add
insl
cmp
jle
sti
push
das
sbb
xlat
dec
sbb
mov
xchg
xchg
hlt
xor
cltd
dec
ret
xchg
sub
xchg
xchg
mov
call
inc
adc
mov
sbb
sahf
movsb
mov
inc
test
roll
mov
rcrb
insb
cmp
loopne
inc
xchg
test
sti
xlat
loopne
sbb
dec
out
out
xor
sub
cmp
dec
shl
push
xchg
xlat
dec
inc
sahf
rcrb
ja
xor
stos
jbe
mov
movsb
cmp
dec
pop
pop
nop
hlt
inc
dec
incb
inc
push
cld
xor
inc
sub
pop
rorl
lcall
push
leave
outsb
push
push
push
outsb
jns
inc
push
inc
lretw
test
xchg
sahf
dec
imul
fbld
sbb
inc
cmc
call
push
into
pusha
and
or
xchg
or
cmp
mov
dec
and
stos
or
out
ret
dec
mov
or
sbb
jmp
sub
sti
cli
insl
cltd
or
mov
sar
sahf
jp
add
xor
mov
cmp
mov
mov
or
lea
cmp
das
ja
mov
imul
aaa
push
xchg
xor
adc
aaa
fcoms
stc
ret
mov
repz
inc
jmp
xlat
rcll
mov
or
cmp
mov
jo
push
inc
call
cld
gs
pop
xchg
or
cmpsl
in
xor
xor
or
mov
mov
in
lds
cmc
adc
sub
inc
pop
or
adc
mov
inc
sahf
xor
aas
mov
in
jmp
jae
jecxz
ret
and
loop
je
mov
rcr
push
and
ss
adc
xlat
stos
xchg
inc
test
pop
fcoms
lods
jb
cmpsb
js
fisttpl
adc
out
xlat
adc
mov
jecxz
in
sub
or
pop
xor
nop
jp
mov
arpl
jb
dec
addr16
add
movq
adc
aad
loop
mov
aam
clc
icebp
movsl
mov
xchg
imul
push
mov
lods
jge
cli
cltd
add
stos
adc
mov
lds
jge
orb
sub
cmp
aad
std
cmp
push
into
inc
dec
popa
repnz
icebp
cltd
push
mov
pop
push
push
jg
sub
adc
pop
sub
and
mov
fwait
hlt
pop
stc
cmpsb
das
xor
xor
sbb
in
dec
test
sahf
lock
mov
adc
cli
xchg
es
sbb
or
pop
test
ds
into
stos
es
arpl
std
addr16
jle
sbb
push
sbb
jnp
sbb
std
shr
icebp
adc
mov
insb
and
ret
dec
leave
mov
loope
icebp
nop
outsl
mov
pop
addr16
sub
imul
ret
jmp
mov
and
in
mov
push
pop
add
jl
cmp
bnd
imul
jl
cld
imull
xchg
pop
ret
pop
push
aas
movsl
sub
daa
sbb
rol
fidivl
xchg
sbb
nop
pop
loop
jg
xchg
mov
jb
cli
push
pop
lahf
xor
stos
add
cmpsl
imul
mov
shrb
in
jmp
and
add
dec
sahf
insb
push
mov
pop
mov
pop
outsb
push
leave
mov
sbb
dec
xchg
jb
jecxz
pop
pushf
jo
sub
addl
adc
out
stos
int
mov
jle
pusha
std
repz
aaa
inc
xor
ds
out
mov
mov
les
cwtl
sub
and
cmp
insb
mov
in
cwtl
fisubl
ljmp
nop
popf
lock
popf
inc
cmp
fadd
lcall
jo
insb
xchg
call
cmp
cmp
jbe
xor
inc
sub
mov
adc
mov
sbb
push
dec
adc
mov
std
sub
xchg
add
iret
sarl
ret
jnp
dec
js
out
inc
repz
fnstcw
test
adc
sbb
or
or
xchg
popf
in
adc
addr16
testb
jns
lods
and
idivl
adc
inc
push
sarl
in
cmc
mov
mov
dec
negl
stos
call
scas
ljmp
data16
xchg
add
inc
cmpsl
push
movsb
call
add
push
mull
cltd
xchg
sbb
pop
mov
xchg
sbb
aaa
xor
add
pop
aam
popa
dec
data16
xor
shlb
sub
dec
jae
hlt
rclb
daa
ss
int
loope
sbb
test
sbb
mov
jg
dec
outsb
mov
xchg
or
push
icebp
ds
dec
pop
js
insb
sbb
leave
stos
dec
ja
jno
and
dec
push
jle
int3
mov
ret
adc
sub
dec
int3
repz
roll
push
jle
pushf
mov
out
push
or
rclb
sti
pop
jae
cmp
xor
dec
insb
jns
jne
xchg
mov
nop
fcomp
xchg
cmp
lcall
adc
lahf
pop
les
adc
outsl
cltd
cs
popa
jmp
aas
aam
cmp
dec
adc
addr16
pop
pushf
jecxz
movsb
mov
mov
push
das
jbe
cmp
iret
aas
repz
cmp
sub
adcb
xor
aad
fdivrl
inc
mov
jmp
les
repnz
fwait
pop
dec
repnz
mov
inc
das
sbb
std
pop
fsubs
dec
and
pop
dec
sub
push
test
scas
cmc
stos
or
push
fcompl
pop
adc
insb
dec
pushf
loopne
leave
xorb
insb
arpl
xchg
jge
fildll
xchg
jecxz
lcall
xchg
pop
fs
mov
xor
imul
test
mov
push
std
imul
pop
sbb
mov
outsl
sbb
gs
push
mov
push
rol
movsb
in
nop
cmp
mov
adc
shll
push
iret
sbb
inc
jo
pop
std
imul
xchg
shr
push
push
mov
cs
inc
xor
mov
and
add
scas
or
push
cmp
dec
mov
mov
mov
dec
or
and
add
imul
iret
sbb
fnstenv
outsb
gs
es
fiaddl
sbb
push
mov
jmp
movsb
add
aam
pushf
jl
adc
data16
ret
fildl
hlt
out
push
setp
cmpb
mov
sub
ja
xchg
pop
jns
test
mov
mov
inc
addr16
sbb
or
and
xor
stos
lcall
sub
dec
mov
sbb
or
enter
adc
add
push
cmp
ror
cmpsb
cmp
leave
push
xor
bound
mov
pop
sub
int3
ja
std
sub
sbb
hlt
or
call
inc
xor
or
cmp
mov
stos
sbb
popa
mov
add
out
in
mov
adc
push
dec
sti
mov
outsl
jno
outsb
and
fmuls
lcall
lods
cmp
add
ret
sub
popf
das
cmp
xor
mov
arpl
or
mov
ret
sarl
repz
add
mov
idivl
aaa
fcompl
arpl
into
cltd
hlt
clc
pop
stos
cmpsb
jb
shll
mov
inc
xchg
jo
aad
mov
jb
aaa
pop
dec
xor
ljmp
add
jae
adc
add
cmc
ljmp
mov
mov
imul
std
xor
push
sbb
sub
cmpsl
mov
inc
loope
nop
mov
xchg
cmp
mov
aaa
rcl
push
mov
sbb
mov
shll
sbb
mov
fldcw
pop
lret
pop
loopne
out
lahf
mov
push
dec
add
lods
aaa
cs
xchg
and
jmp
add
daa
ret
fistps
or
in
dec
aaa
push
cmp
push
movsb
fistps
dec
jns
adc
sbbb
aas
popf
jae
cmp
int
shl
imulb
cwtl
xchg
fwait
inc
stc
mov
dec
or
jg
mov
fidivs
or
out
adc
add
add
dec
movsl
lds
popf
add
jg
ljmp
xor
popa
xchg
pusha
out
lahf
adc
dec
dec
cmpl
push
mov
push
in
pusha
adc
pushf
loopne
ss
daa
int
rol
fld
mov
xlat
pop
fisttps
fwait
addr16
mov
push
jmp
adc
or
popa
and
into
adc
adc
add
negb
xor
sbb
mov
sbb
adc
fmul
imul
lret
and
loopne
pop
jge
pop
and
mov
nop
rcr
and
push
and
daa
in
pusha
xor
xor
xor
mov
or
jns
roll
mov
lock
inc
fdiv
xor
push
xchg
cmp
dec
and
and
negb
push
loop
and
andl
mov
repz
mov
fidivrl
pop
jg
out
cmp
jae
loopne
je
jb
mov
pop
bound
stos
nop
adc
and
arpl
inc
mov
fcoms
inc
pop
mov
shlb
orl
or
or
pop
fmull
cmpsl
rolb
fisttpl
mov
stos
fisubs
aam
cmpsl
push
cld
gs
stc
test
adc
ljmp
adc
into
arpl
add
mov
jmpw
out
push
sub
sbb
enter
or
aad
stc
push
xchg
in
pop
bnd
loopne
jecxz
mov
cmp
push
sbb
test
xchg
mov
push
xchg
hlt
insb
mov
out
cmpsb
mov
adc
adc
and
adc
lods
daa
test
mov
fsubrp
add
pop
lods
push
addb
in
sub
dec
sti
fsubrs
sbb
rorl
mov
pop
and
movsl
push
jle
adc
jns
mov
cmp
sub
xchg
jno
sbb
je
and
cmp
fprem
mov
mov
lods
loop
je
cwtl
loope
jg
inc
lahf
fsub
nop
jmp
adc
jp
mov
outsb
jae
xor
and
mov
mov
and
jne
outsl
push
out
push
jg
or
enter
mov
stos
das
pop
fidivs
test
inc
sbb
hlt
clc
outsl
repz
lock
push
sub
in
out
pusha
aam
cli
stc
rcrb
pop
mov
lods
sbb
inc
pop
into
aam
mov
aaa
bound
sbb
lahf
stos
repz
mov
add
shrb
lcall
pop
or
sub
mov
test
xor
add
sti
jnp
push
hlt
mov
cmc
cltd
js
push
test
loope
int3
sub
inc
aam
adc
in
stos
aam
pop
out
add
inc
mov
enter
adc
call
jo
xchg
jge
cmpsl
fwait
insl
test
xchg
jl
testb
push
mov
or
mov
pop
or
or
xlat
push
jns
xor
mov
push
fdivr
xor
jp
pushf
dec
sub
fnstcw
mov
enter
jns
jne
arpl
sbb
dec
int
pop
pop
add
movsb
sub
and
je
into
fs
mov
fsubrs
mov
into
inc
data16
ja
aam
sub
dec
lods
pop
fsubrl
jae
mov
push
inc
cmp
mov
xor
push
pop
sti
jle
nop
sub
xchg
filds
div
leave
jg
lret
mov
test
out
or
mov
jnp
arpl
lds
jp
jo
gs
cltd
adc
mov
in
movsl
cmpb
lea
out
mov
pop
xlat
bound
adc
jecxz
ret
shrl
mov
inc
xchg
jae
mov
int
outsb
mov
enter
or
lds
lret
mov
sub
loop
std
lods
cltd
inc
out
jnp
and
repnz
sub
dec
mov
std
iret
pop
xchg
mov
fnsave
xchg
nop
scas
dec
pop
xor
mov
push
sbb
dec
mov
cmp
cltd
sahf
ja
mov
out
jl
decl
aaa
cltd
pop
xor
xchg
cmp
out
leave
or
clc
push
loopne
out
packsswb
inc
mov
out
clc
fwait
jp
testl
lods
jp
inc
adc
popa
sarb
cmpsb
stos
mov
mov
fldt
mov
adc
xlat
sbb
leave
and
repz
insb
push
mov
or
mov
sbb
lods
dec
test
cmpsb
and
iret
iret
jne
cli
aad
or
add
sarb
loope
sub
out
leave
fmuls
pop
test
add
je
icebp
cmc
loope
push
sbb
cmc
addr16
in
cmp
fisubrl
ret
dec
into
xor
xlat
push
dec
lret
fwait
jbe
push
dec
inc
shl
push
push
das
rcrb
into
aam
mov
iret
mov
js
stc
stc
rcll
push
and
scas
adc
movsb
cwtl
sbb
addr16
push
jo
loopne
rcrl
sub
inc
mov
jge
cmp
lret
out
imul
lock
shll
mov
test
in
lret
sbb
lahf
dec
jo
ds
push
mov
aad
icebp
push
xor
xor
stos
and
push
jae
data16
sti
pop
xchg
hlt
outsl
es
imul
outsl
add
cwtl
nop
enter
adc
cmp
lret
fidivrl
mov
pop
jle
fcoml
inc
cmp
xlat
pusha
mov
or
ret
pop
push
jns
fwait
inc
lods
push
fwait
std
fsubrs
test
data16
sub
in
sbb
dec
mov
pusha
mov
sub
cmpsl
jmp
sbb
ds
jg
pop
pop
aaa
in
push
xchg
loopne
and
stos
roll
fmull
xchg
adc
hlt
shl
jns
adc
rcll
sbb
iret
and
jno
mov
pop
push
jns
mov
add
sti
cwtl
jmp
loop
dec
sbb
rcll
push
shll
add
cmp
dec
cli
and
add
add
pop
fs
mov
jns
pop
jle
mov
lahf
insb
test
outsl
insl
pop
daa
sub
mov
scas
les
xchg
in
imul
or
rol
in
mov
pop
push
insl
pop
lahf
ss
mov
mov
in
mov
inc
mov
cmp
push
mov
mov
mov
sbb
cmpsb
cmp
test
mov
and
data16
push
xor
pop
hlt
inc
adc
ret
jno
mov
fistl
pop
xchg
mov
mov
aas
sub
push
inc
scas
rorb
js
shlb
adc
mov
ret
popa
iret
dec
pop
in
cmpsb
mov
xlat
adc
gs
or
daa
sbb
mov
ret
enter
shrb
cwtl
jle
insb
jg
jo
stos
mov
pop
push
ret
and
adc
sahf
mov
inc
cmp
leave
stos
push
test
sub
inc
lahf
sbb
std
imul
es
cmpb
mov
dec
pop
cs
lods
push
dec
and
push
test
call
ja
or
xchg
pop
aas
xor
jp
inc
popa
cli
pop
jmp
in
xor
adc
aad
mov
dec
lret
jge
ljmp
xchg
mov
aam
pop
imull
fiaddl
push
or
lret
sub
sub
fadds
enter
mov
lods
lods
jnp
inc
lcall
popa
pop
out
cmp
jae
aad
cmp
sbb
mov
in
cltd
xor
subl
lock
cwtl
jp
lods
mov
mov
scas
dec
orl
mov
inc
cmp
adc
test
ljmp
pushf
pop
push
sbb
sbb
es
add
mov
lret
inc
iret
xchg
sbb
jmp
sbb
ret
mov
pop
ret
inc
push
add
pop
decl
andb
cs
jge
sub
mov
les
xor
sub
push
mov
addr16
call
lock
loopne
pop
adc
xor
fstpt
sti
sub
insb
pop
xchg
push
fs
movlps
vpunpckhbw
mov
jl
lds
add
xchg
push
fmuls
lahf
xor
idiv
dec
push
push
stc
gs
and
ret
jecxz
movsl
data16
xor
inc
shlb
mov
dec
push
mov
mov
or
orl
mov
dec
dec
mov
stos
je
xchg
sbb
xor
icebp
mov
cwtl
jmp
pop
scas
jecxz
and
xlat
xor
push
inc
loopne
xchg
xor
cmp
jbe
pop
mov
jnp
ds
mov
jae
int3
cmp
add
push
mov
lahf
fcompl
test
arpl
mov
lock
lods
inc
in
daa
mov
add
jecxz
inc
and
sub
and
mov
dec
icebp
cmp
xchg
ljmp
outsl
jnp
push
fmulp
test
dec
cmpsl
fwait
repz
bound
lods
push
jmp
dec
test
js
ljmp
sahf
dec
inc
scas
fistpll
ret
mov
repz
dec
sbb
push
les
ja
jns
and
mov
inc
cmp
pop
dec
cwtl
fldenv
test
popl
cld
addl
imul
shlb
jp
ffree
aaa
vcvtps2dq
ret
mov
pop
sub
pop
mov
or
jp
adc
stc
lods
push
mov
inc
or
fimull
xor
inc
jne
sub
shlb
arpl
jae
push
mov
sbb
orb
fs
or
ret
jns
jb
dec
lods
icebp
dec
adc
mov
sub
inc
inc
loop
xchg
mov
lahf
push
popl
mov
sbb
sbb
leave
xchg
shrb
ljmp
leave
cltd
repz
movsl
jmp
xor
stos
inc
xor
sub
mov
jb
inc
mov
jl
mov
lcall
in
loop
out
addr16
mov
movsb
jnp
adc
js
mov
movsl
subl
enter
or
pop
cmc
fdivs
dec
out
outsb
loopne
mov
stos
addb
mov
aas
inc
dec
in
sbb
jecxz
xor
fisubs
add
push
rcr
push
clc
xor
push
gs
push
jg
cmpsb
mov
bound
aam
int3
jge
cmp
sbb
scas
pop
pop
lods
or
scas
xchg
mov
mov
daa
jmp
and
stos
or
fs
pop
cld
in
js
rcl
jno
sub
ret
sbb
movsl
mov
fsincos
mov
push
filds
lods
adc
fsub
mov
xchg
in
push
lret
shrl
sar
pop
xor
mov
lcall
and
sbb
shll
mov
or
stos
mov
ds
addr16
je
lds
ret
mov
push
lock
bswap
sbb
and
arpl
sub
pop
sbb
mov
jno
js
or
mov
push
ret
jo
and
movsb
xor
cmp
xor
add
stc
lcall
inc
mov
mov
movsl
and
mov
mov
push
pushl
outsb
popa
test
decl
mov
pop
imul
aas
scas
popf
les
lcall
jge
mov
jne
fildll
clc
movsl
in
jp
cltd
rolb
add
inc
in
call
imul
pushf
push
cmp
mov
mov
mov
pop
lock
test
jno
xchg
bnd
mov
sbb
mov
xlat
pop
push
jg
cmp
subb
lods
sub
sbb
scas
push
loope
leave
and
dec
insb
idivb
or
mov
loop
inc
int3
sub
call
sbb
insb
xchg
pop
ja
out
jb
or
add
pop
sti
xor
lahf
stc
jmp
scas
push
xor
fstl
ret
pop
inc
negl
jmp
ljmp
or
xchg
repnz
pop
lret
xor
and
mov
ficomps
hlt
and
dec
je
xor
aas
jb
imul
iret
cli
fiadds
icebp
mov
repnz
std
bound
sub
or
and
or
lahf
cmp
enter
mov
ret
xor
and
fwait
add
daa
xor
into
sbb
das
in
sbb
sarl
push
cmpsb
pop
cwtl
adc
ret
mov
and
lock
xchg
add
sbb
adc
xchg
shl
pusha
outsl
nopl
mov
int
sub
cmp
ljmp
lods
aaa
mov
lahf
outsl
icebp
push
jno
sub
bound
mov
or
pop
loope
pop
shlb
inc
or
pop
mov
xchg
mov
test
cld
push
test
sbb
aas
scas
push
les
fwait
pop
dec
push
ret
shlb
stos
lcall
mov
mov
or
int3
jae
push
push
and
mov
das
int3
push
adc
pop
out
pop
mov
xchg
sbb
inc
call
repz
out
xor
mov
adc
icebp
arpl
mov
lea
mov
cmp
mov
outsb
bound
repnz
stc
in
mov
mov
push
add
cmc
mov
xor
mov
icebp
fs
jecxz
call
test
jo
gs
bound
jecxz
arpl
out
sub
adc
push
ljmp
cld
mov
jge
push
dec
inc
inc
lahf
aas
aad
jbe
or
ret
inc
pop
ret
jp
repz
mov
stos
jecxz
out
iret
dec
jbe
out
and
fisubrs
and
mov
cmp
int
ret
push
gs
jns
mov
das
jl
push
xor
imul
add
dec
push
fstpt
and
repz
cmp
cmp
imul
push
mov
cmpsb
test
out
dec
push
jnp
adc
aad
int
pop
outsl
clc
roll
scas
cmc
sub
cs
rcl
or
pop
int
and
and
stos
std
enter
mov
sub
lods
mov
xor
jp
out
lret
adc
cltd
data16
xchg
subb
out
sub
mov
cli
es
mov
jnp
adc
sub
dec
pop
enter
ja
cmp
cmpsb
or
sahf
jno
or
cmp
bound
xchg
je
mov
lahf
cwtl
movsl
push
adcl
pushf
mov
dec
jno
jnp
hlt
add
ret
push
je
iret
data16
lcall
das
jb
mov
cmpsl
xchg
test
mov
sbb
push
sub
in
je
dec
dec
cwtl
ds
adc
idivl
pop
xor
mov
repnz
sub
push
add
mov
sub
dec
inc
cltd
pusha
push
les
add
enter
jnp
adc
xor
aaa
or
sbb
data16
and
cmpsb
cwtl
sub
dec
insb
pop
ja
jne
icebp
add
adcb
cli
loop
jecxz
int
nop
int
sub
cmp
mov
inc
sar
mov
stc
adc
arpl
or
and
insl
lret
inc
push
aas
enter
push
repnz
repnz
aam
pop
or
mov
les
xchg
ja
xchg
mov
xchg
add
cmp
jg
inc
mov
int
int3
or
test
aam
dec
stos
pop
add
fdivl
jae
mov
cmpl
inc
or
dec
inc
shr
mov
pop
lret
xchg
push
cmpsb
or
mov
ljmp
fistpll
setl
or
adc
pop
call
std
mov
push
lock
shrl
imul
loopne
push
mov
xor
push
or
add
repz
push
sarl
cmp
cs
mov
lods
fldcw
aaa
mov
mov
fs
jmp
pop
push
and
fisttps
sbbb
push
shrb
call
rcll
lahf
push
imulb
add
rorb
mov
negl
inc
jae
in
push
rcl
mov
xchg
cltd
cmp
shlb
push
jp
inc
sub
daa
fwait
bound
lret
push
insl
jne
mov
lahf
insl
mov
aas
adc
or
lock
inc
fisubrl
push
rorb
cld
or
add
and
mov
xor
sub
outsl
pop
mov
pushf
pop
jle
loop
js
push
sub
cmpb
popf
or
cltd
ss
fistpl
mov
xchg
or
lods
dec
xchg
or
arpl
push
mov
add
mov
pop
lock
jge
insl
ficoml
mov
stc
pop
xchg
data16
add
ds
outsl
jmp
mov
lcall
or
push
cmp
mov
fsub
shlb
int
add
and
sbb
pop
lcall
loopne
mov
cltd
push
repz
pop
das
test
into
stc
fstpt
test
inc
mov
sbb
sbb
stos
gs
fidivrs
lret
out
sbb
outsl
loopne
xchg
push
mov
fs
ss
fcmovnb
push
inc
and
nop
ja
roll
test
scas
out
fwait
aaa
cmp
stc
pop
and
push
jno
mov
inc
sbb
push
mov
scas
xor
cmc
arpl
mov
adc
mov
mov
mov
jb
cmpsb
scas
ffreep
stos
xchg
lea
push
fistpl
sbb
icebp
gs
and
imul
popa
test
jecxz
addr16
pop
adc
mov
cli
ljmp
pop
and
sbb
inc
push
jne
rcll
jb
xor
mov
divl
lock
mov
lock
adc
inc
in
enter
fdivrs
sbb
sub
insl
sub
adc
and
loope
or
fstp
pop
lret
data16
sbb
dec
out
add
in
leave
pop
js
cmp
in
push
movsl
jb
imul
xlat
in
dec
mov
lock
out
jae
push
fnstenv
sbb
out
mov
dec
lahf
jmp
leave
js
js
jl,pn
mov
xchg
mov
popf
xchg
push
stc
xor
dec
arpl
repz
mov
dec
xchg
pop
ret
cmpl
inc
out
icebp
hlt
jmp
cld
add
rorl
inc
outsb
hlt
dec
rcl
pop
int
add
push
push
sbb
pop
mov
dec
pop
push
ds
fadd
cmp
iret
arpl
push
test
cmp
xchg
lret
ret
xchg
movsb
add
dec
mov
lret
out
movsb
imulb
or
rcrl
inc
xor
inc
xorl
cld
pop
push
les
pop
dec
adc
xor
call
xchg
xchg
inc
jbe
outsb
outsl
mov
or
enter
sbb
push
jmp
insb
inc
add
rcl
movsl
imul
dec
fmuls
cwtl
not
stos
inc
adc
outsb
dec
jg
mov
xchg
arpl
sub
scas
outsl
mov
lods
cmp
jle
aam
rorl
jg
bound
pop
push
pusha
aam
rcrl
adc
sub
js
inc
fidivl
lock
pop
xor
and
pop
inc
addl
adc
inc
repz
add
int
mov
sbb
call
xchg
mov
push
in
ss
cmpsl
xor
sbb
sbb
fists
sub
ret
sub
mov
mov
repnz
cmp
mov
mov
cmpl
in
cli
fninit
jne
in
mov
das
mov
mov
dec
ljmp
mov
cmp
std
pop
jecxz
insb
adc
xchg
decl
mov
fisttpll
andb
cmp
shlb
pop
mov
jp
pushl
adc
xor
stos
jge
insl
mov
or
mov
std
sbb
das
jmp
out
ficomps
or
xchg
icebp
mov
inc
js
aam
out
xlat
lea
int3
loope
xor
dec
jno
jge
lock
int3
sbb
scas
aad
push
in
dec
dec
arpl
push
add
jg
rolb
lahf
test
daa
add
xchg
xchg
movl
mov
hlt
sarl
in
leave
out
addr16
mov
clc
xchg
pop
inc
jne
mov
xchg
iret
jb
add
pop
mov
js
stc
rorb
mov
shrl
sbb
pop
ss
jg
andl
scas
pop
or
out
test
cmp
jbe
lock
mov
fsubrs
int
enter
sub
inc
push
mov
test
shll
dec
aad
repz
pushl
int3
bnd
fs
jbe
mov
ljmp
outsb
adc
rcrb
and
jp
bound
std
xor
stc
popa
fs
clc
mov
enter
inc
dec
push
fistl
mov
in
ljmp
add
pop
push
adc
add
outsl
rep
test
imul
aad
sbb
mov
cmp
jge
add
add
dec
int
pop
mov
repz
incl
cmc
dec
cmp
cld
mov
sub
adc
test
in
test
ror
xchg
mov
loopne
pop
jmp
clc
fstl
and
ret
sub
fistpl
cmp
xor
popa
xchg
cmc
inc
shll
jle
xor
iret
addr16
pop
and
cmp
cmpsb
cmp
sarb
cmc
mov
into
ret
or
xor
adc
ficoml
jbe
addr16
idivb
push
add
jnp
push
lcall
push
fs
add
lcall
cli
ja
daa
pop
adc
iret
shrl
ds
cs
push
aas
fimuls
test
jno
add
push
stos
mov
loopne
ja
xchg
jb
or
sbb
dec
jecxz
dec
jnp
pop
stc
dec
and
test
leave
xchg
fdivrl
pop
rorb
cmpsb
incl
sti
xor
inc
ret
push
xor
push
push
sub
and
and
nop
imul
mov
lcall
cmpsl
arpl
xchg
adc
lock
cmp
rcrl
aas
or
adc
inc
jbe
pop
dec
jbe
sbb
scas
mov
push
add
mov
sbb
das
mov
or
adc
pushf
push
fisubrl
push
xchg
push
pusha
dec
sbb
fiadds
gs
jp
jp
jg
xchg
pop
xchg
or
inc
push
pushf
push
lahf
sbb
ss
cmp
push
adc
cmpsl
fsubr
aas
xchg
and
mov
cmp
mov
cmpsb
test
fs
movsb
mov
out
jle
pop
mov
in
loop
xchg
outsb
addr16
and
xchg
push
std
out
sub
add
iret
sub
into
add
das
adc
mov
test
mov
sub
data16
lds
xor
int
int
sub
scas
ja
imul
jo
jl
jp
out
jns
inc
mov
pop
dec
lds
add
pop
sbb
add
fsub
sbb
jo
arpl
outsb
test
imulb
addr16
cltd
push
mov
xor
cwtl
add
adc
cmc
fcomps
sub
loopne
in
add
xor
add
dec
fiadds
and
cmp
inc
das
or
mov
pop
or
outsb
add
pop
out
test
sub
adc
rclb
mov
xchg
inc
pop
jl
xchg
xchg
stos
sbb
cmp
shll
cmc
pop
push
push
ja
or
push
dec
mov
fsub
sbb
dec
sti
aad
or
sbb
adc
cmp
cmp
int3
pop
leave
jb
lret
pop
pop
mov
loope
pop
dec
and
or
fs
inc
sub
outsb
in
cmp
sbb
sub
or
pop
out
pop
mov
push
cmp
mov
jmp
fcom
out
int
outsb
stos
mul
xchg
enter
jns
sahf
jnp
mov
daa
add
or
jne
movsl
call
xchg
mov
ja
push
fwait
mov
sbb
mov
dec
cmp
cs
cld
mov
and
jl
pop
pop
pushf
pusha
lea
leave
mov
int3
lods
push
mov
lods
xor
jg
mov
xchg
test
cmp
xchg
ror
jo
frstor
mov
stos
push
shrl
mov
push
decl
jo
jo
cmp
or
ret
in
inc
stos
shlb
cltd
xchg
bound
jo
into
mov
mov
lds
mov
sbb
dec
lock
jno
cmp
push
sub
loopne
pusha
jp
loope
sarl
js
jne
into
mov
mov
adc
jo
fs
pop
jns
jge
andl
jl
sti
xchg
jecxz
idivl
mov
out
pusha
cmp
pop
cmp
aaa
mull
andl
push
lea
test
movsb
loopne
inc
mov
jecxz
jmp
test
bts
inc
inc
pop
fnstenv
xor
int
andl
aad
leave
hlt
inc
pop
fdivs
rcrl
mov
push
subb
xor
push
stos
mov
fistpll
sub
es
cltd
push
das
add
sbb
sahf
xchg
ret
int
push
cwtl
imul
mov
mov
or
cmp
push
dec
in
xchg
icebp
pop
jmp
and
adc
xchg
orb
popf
cmp
shrl
or
jecxz
outsb
cmp
fwait
push
dec
sbb
jae
inc
fwait
lods
les
nop
out
repnz
mov
imul
sbb
dec
shlb
mov
pop
cmp
aam
jp
xlat
mov
mov
enter
xchg
mov
mov
lods
insb
aas
lahf
aaa
inc
xchg
out
fbld
data16
jb
adc
int3
mov
jecxz
pop
imul
add
stos
in
inc
sti
jg
jne
or
andl
sbb
cmp
sarl
pop
xor
test
adc
aad
xchg
cmpsl
rcll
xchg
mov
push
dec
adc
data16
xchg
pushf
sti
mov
and
insl
pop
in
sbb
pop
lds
int
in
call
in
add
pop
adcb
sbb
lret
test
lods
dec
sub
xchg
inc
pusha
mov
xchg
sbb
inc
jecxz
pop
xchg
cli
cld
xchg
xor
test
mov
mov
sbb
fldenv
out
call
lods
mov
or
rorl
mov
pop
dec
mov
or
cmp
test
stos
mov
fdivrl
insb
sbb
es
scas
stos
outsb
jbe
pop
cmp
and
or
fisubl
sbb
xor
pop
loopne
sub
jb
and
jge
rcrl
idivb
jbe
clc
bound
sti
in
lret
mov
out
pop
sbb
fcompl
dec
cli
mull
lea
push
mov
shl
inc
sub
insb
je
add
xorl
jmp
gs
inc
sbb
dec
addb
add
movsl
or
mov
pop
pusha
mov
xchg
popf
pop
scas
in
imul
int3
push
dec
iret
xor
je
std
outsb
cvtps2pi
cld
jnp
arpl
shl
mov
imulb
or
rclb
sub
mov
adc
xlat
aam
sbb
hlt
or
stc
pop
or
test
pop
adc
popf
ja
cmp
ficoms
pop
scas
mov
push
xchg
in
and
and
and
pop
into
scas
xor
xchg
inc
imul
test
imul
loopne
and
shlb
pusha
and
pop
jno
cltd
sub
pop
dec
push
jnp
lods
lahf
loope
and
fistps
and
movsb
shlb
pop
sahf
inc
inc
dec
jno
jecxz
stos
jnp
push
sub
xor
rcrl
jb
xor
leave
rcll
and
ret
push
fists
xchg
xorb
roll
insl
imul
xchg
push
lock
or
sub
scas
mov
and
push
sub
fcmovb
aaa
mov
xchg
adc
cli
popf
pop
les
test
inc
loopne
sti
cmp
cmpsb
mov
xor
imul
stos
dec
push
daa
fdivs
std
sub
mov
cld
out
leave
adc
xchg
mov
rclb
pusha
inc
out
jae
mov
in
movsb
nop
jae
sub
sub
mov
ja
mov
lods
sti
pop
jno
jo
push
sbb
adc
lock
xchg
mov
icebp
ret
pop
stos
xchg
push
shrb
fistpl
daa
inc
pop
jns
outsb
clc
in
das
jle
mov
mov
cli
pop
jle
cltd
push
dec
add
sub
pop
dec
lock
test
inc
test
mov
sub
mov
aas
jb
test
cld
cmp
mov
mov
lcall
xchg
repnz
push
jmp
jge
jge
shrb
jo
int
iret
imul
mov
cmpsl
ja
mulb
lods
dec
xchg
sbb
dec
xchg
sbb
test
mov
or
ss
negl
pop
mov
jb
push
fwait
jb
add
sub
in
int
js
out
shll
sub
or
jecxz
mov
add
jp
notl
sbb
int3
ret
les
test
xor
addl
loope
lods
lods
ss
outsb
out
mov
bound
mov
xchg
or
in
stos
mov
or
repz
lds
fnstsw
popa
lret
in
lods
divb
mov
ret
mov
mov
or
push
or
sbb
cltd
nop
hlt
movsl
lea
out
insb
jecxz
and
lds
imul
in
add
stos
jp
fdivp
xor
mov
sub
out
lret
aad
xchg
or
push
loopne
sub
std
adc
insl
xlat
mov
test
mov
out
ja
nop
adc
es
lods
ret
xor
jg
repz
frndint
icebp
aaa
mov
stos
cli
icebp
fwait
or
sti
into
mov
stos
mov
outsl
icebp
les
sub
xchg
mov
inc
in
cmp
mov
or
dec
paddb
in
loop
pop
fistpl
pop
inc
loopne
pop
jg
jmp
push
leave
aad
or
sbb
push
shrl
fdivl
fcompl
add
cwtl
mov
fs
sub
arpl
iret
loopne
mov
jmp
mov
ret
add
cmpsb
xchg
mul
mov
sub
sti
jns
test
jle
data16
ja
enter
pop
leave
xlat
out
inc
ret
aaa
fdivrl
adc
insb
rolb
hlt
add
neg
mov
adc
or
sarw
mov
jbe
push
add
mov
or
dec
fs
sub
icebp
jle
fistpll
sbb
fs
sbb
xchg
push
mull
aas
push
cvtpi2ps
sbb
push
sbb
jge
les
sbb
loopne
mov
repnz
js
scas
adc
sbb
fdivrl
add
divl
insl
and
outsl
in
sarl
push
inc
inc
sarb
or
mov
cmp
xor
sbb
out
sub
data16
loop
sbb
pusha
push
sub
adc
push
mov
rclb
or
loope
lahf
adc
mov
xor
addr16
or
cmp
push
dec
inc
int
pop
rcl
mov
fnstsw
dec
adc
pop
mov
outsl
or
fs
out
into
fs
das
outsb
cltd
es
add
cld
stos
cwtl
arpl
lds
jbe
nop
movl
leave
push
testb
push
mov
push
sbb
xchg
mov
imul
adc
cltd
lods
fbstp
leave
inc
pop
in
shlb
repz
sbb
movsl
imul
test
cmpb
mov
sub
bnd
jl
mov
outsb
jmp
mov
or
xor
lahf
mov
fmuls
test
fnsave
lcall
mov
cmp
pop
or
jo
jb
aad
jl
sub
add
outsb
xchg
pop
push
jns
cs
iret
ja
xchg
sahf
inc
shlb
test
sbb
cs
out
mov
sbb
adc
lods
pop
mov
pop
add
test
pop
lcall
push
rcll
cli
cmp
js
push
test
mov
jge
stc
rcrl
mov
pusha
jae
dec
inc
mov
mov
lods
in
and
leave
mov
loop
std
mov
jg
jp
add
outsl
std
inc
push
inc
mov
jne
pop
cltd
sub
loope
fstps
adc
sbb
xorl
js
scas
dec
popa
pop
xchg
out
lret
imul
fiadds
sub
xchg
out
adc
clc
jno
jmp
mov
and
xor
fsincos
cltd
nop
xchg
aam
add
scas
adc
leave
cmc
push
sub
jae
into
test
outsl
dec
mov
rcl
xchg
push
loope
xor
add
pop
xchg
pop
inc
pushf
lods
fldcw
mov
mov
aad
shrb
cmpsl
sbb
mov
insb
xor
ror
xor
cmp
js
repnz
ja
out
mov
popf
xor
lahf
cwtl
in
cmp
fsubrp
jmp
rorb
inc
outsb
fimull
add
cmc
mov
fstpl
das
into
cmp
loopne
scas
inc
lret
jbe
pop
mov
std
int
popf
mov
cmp
mov
aad
aam
push
cmp
lahf
out
push
xor
pop
lret
je
push
test
aam
mov
and
aaa
rcrl
enter
stc
mov
cli
daa
iret
subl
xchg
xor
and
rolb
cs
ret
add
mov
or
arpl
lea
aad
and
insb
mov
jle
jns
fsubrl
mov
negb
out
gs
movsl
or
ret
movsb
cmp
pushf
jg
nop
xchg
mov
dec
int3
mov
cwtl
bound
inc
sub
data16
out
pop
movsl
sbbb
les
shll
or
test
sub
pmulhw
dec
xchg
or
es
pop
mov
cmp
sub
stc
test
xchg
inc
icebp
lods
daa
fimull
adc
sbb
je
push
xor
cmp
outsb
stos
jl
or
loope
mov
sub
and
test
and
sub
imul
popf
repnz
ret
mov
jb
pop
mov
mov
in
xor
pop
movsl
push
mov
fisttpll
jmp
add
jp
loope
add
push
shll
inc
sub
lock
fiadds
outsl
jmp
pop
ljmp
dec
xchg
jge
fmull
mov
outsl
pop
int
or
int3
lock
sti
pop
adc
inc
sarl
mov
mov
sbb
fwait
adc
mov
mov
lds
jmpw
aaa
jb
bound
cmc
pop
je
cltd
add
and
and
pop
aaa
out
xchg
pop
jle
insl
iret
fs
sub
aam
cwtl
icebp
cmpsb
xor
in
cmp
cmp
xchg
inc
mov
in
lods
pop
outsl
jne,pn
test
pop
dec
xor
scas
inc
arpl
jg
dec
cmp
adc
or
push
ret
adcb
mov
adcl
inc
js
push
or
mov
loope
sbb
subb
fwait
xchg
shrb
sub
aad
or
movsl
inc
ror
pop
ljmp
pop
pop
push
jb
sub
scas
jge
leave
repnz
or
adcl
cmpsl
and
ficomps
pop
or
mov
iret
sub
mov
mov
mov
add
into
popl
inc
es
sub
lcall
xchg
lahf
rorb
sar
call
jle
jb
add
pop
push
pop
lret
test
insl
mov
in
add
fisttpl
cmp
pop
nop
lods
pop
or
fst
mov
imul
ret
dec
jno
test
repz
jnp
sbb
sub
js
hlt
pop
inc
ficoms
xchg
sub
test
outsl
dec
jmp
sub
jg
dec
jne
cmpsb
pop
nop
pop
inc
outsl
fcompl
ret
adc
stos
outsb
mov
into
add
aaa
stos
xor
sbb
jbe
faddl
adc
cmp
les
pop
das
mov
jns
sub
mov
mov
shlb
negl
mov
cmp
fistpl
add
addr16
rcr
outsb
out
std
sti
jno
xchg
xchg
jmp
mov
iret
out
jb
jb
movsl
aad
adc
push
mov
js
cmp
clc
dec
inc
loopne
out
fildl
mov
jle
lea
xor
test
js
insb
inc
dec
addl
add
add
sarb
add
dec
sbb
cmp
sbb
sub
push
jo
inc
and
or
shrl
icebp
xor
xor
push
sti
iret
push
lea
xchg
mov
or
cld
inc
pop
sbb
nop
mov
cs
repnz
mov
cmp
mov
int
or
dec
jb
jecxz
dec
and
pop
outsl
fnstcw
testl
sub
pop
xchg
push
pop
test
mov
add
pop
sub
daa
scas
jl
pop
pop
sbb
jo
scas
xchg
arpl
sub
jo
bound
jae
or
sbb
xor
push
outsl
mov
js
push
jo
or
repz
stos
push
mov
shll
dec
mov
add
imul
mov
rol
dec
out
stc
mov
xchg
xchg
in
imul
in
cmp
dec
mov
inc
bound
out
icebp
fs
inc
loop
out
adc
arpl
jno
inc
jnp
cmpsl
push
pop
and
rol
xchg
sbb
mov
ret
jle
outsb
jo
fidivrl
daa
nop
lcall
sbb
cltd
fcomps
xchg
xchg
jl
sub
adc
pop
pop
xor
inc
mov
roll
aaa
and
lods
fstps
rcr
mov
mov
test
add
push
pop
jno
shlb
movsb
fdivl
decl
out
xchg
lahf
scas
int
enter
dec
inc
popa
inc
lcall
mov
adc
push
mov
ret
inc
outsb
movsb
out
out
cmp
sarb
mov
sub
dec
aaa
ret
inc
call
sub
rorb
sbb
roll
outsb
add
shrl
ljmp
call
mov
push
sub
adc
mov
outsl
sub
xor
ret
xlat
ficomps
repnz
cmp
inc
mov
or
inc
out
pop
aas
dec
adcb
fmul
loop
sub
push
pop
test
fs
les
icebp
sub
int
or
inc
cmpsl
stos
stc
pop
jnp
mov
dec
pop
mov
mov
jne
cmp
scas
xor
cmp
out
mov
jg
bound
add
lahf
push
mov
push
pop
and
pop
add
scas
mov
cltd
add
cltd
adc
fiadds
les
cmp
sti
mov
inc
std
mov
addr16
jo
sbbb
jmp
pop
add
push
sbb
pop
int
or
std
jp
cmc
cmc
ret
scas
push
and
daa
test
in
mov
hlt
outsb
shrb
popa
fcompl
shrb
mov
inc
push
xchg
dec
lcall
jno
nop
mov
in
sbb
pushf
jbe
mov
adc
in
rcl
push
imul
inc
pop
data16
pop
int
mov
pop
clc
cmp
bnd
jl
sbb
outsb
inc
xor
scas
orb
cmp
mov
dec
sbb
ja
mov
js
dec
scas
and
pop
scas
mov
ror
xchg
int3
ds
std
loope
incb
add
and
xchg
fisubrs
movsb
jp
test
aas
imull
inc
hlt
fldcw
lmsw
in
push
cmc
add
hlt
test
mov
xchg
add
or
lock
push
pop
fmuls
cld
and
add
cmpb
js
push
adc
mov
leave
cmc
sub
mov
scas
packssdw
data16
mov
push
pop
ss
mov
pop
jecxz
xchg
xchg
push
out
push
insb
pop
sub
bound
add
sub
mov
push
sub
add
jae
imul
dec
fs
ror
inc
lods
aad
fisttpll
sub
cmp
xchg
inc
mov
ret
icebp
pop
insb
xor
jp
addr16
stos
dec
pop
mov
loopne
xchg
xor
pop
and
cmc
fildll
mov
add
cmp
sbb
icebp
adc
push
lahf
jmp
mov
dec
mov
lret
xchg
test
push
lret
jg
pop
mov
adc
sbb
xchg
fistpl
mov
mov
adc
pop
dec
add
pop
push
stc
pop
pusha
adc
sahf
testb
jns
adc
pop
or
sahf
out
jb
bound
jecxz
pop
mov
cs
mov
call
stc
inc
jno
clc
mov
call
mov
mov
rorb
imul
insb
loope
ljmp
adc
xchg
outsl
add
sbb
scas
jl
cmp
repnz
test
sbb
push
mov
pusha
pop
mov
pop
adc
imul
loop
push
stc
stos
mov
sbb
insl
daa
xor
dec
and
jno
dec
xchg
jp
fistps
xor
rolb
xchg
mov
xabort
jo
dec
mul
mov
dec
cmp
jnp
or
movsl
push
inc
add
lods
call
or
fstpt
mov
dec
push
movsb
pushf
pop
fdivs
adc
mov
add
movsl
push
fildll
cmp
sub
popa
loopne
jg
lods
andl
xor
sbb
adc
shrw
xchg
stos
ljmp
pop
sbb
or
fs
les
in
je
test
pop
push
iret
cmpsb
std
movsb
scas
outsl
ljmp
xor
jno
call
jno
push
mov
inc
push
popa
or
out
inc
les
aam
mov
push
mov
jnp
push
repz
loop
in
pop
aad
xchg
lahf
enter
jne
bound
dec
lahf
sbb
cmp
js
xchg
or
sahf
in
dec
xor
mov
int
dec
xor
adc
mov
mov
fcmovne
add
pop
mov
fnsave
cli
loopne
jmp
hlt
push
sahf
stos
movsl
xchg
pop
adc
mov
inc
mov
fwait
in
pushf
scas
leave
mov
adc
mov
xchg
fmull
push
insb
adc
ljmp
es
dec
ljmp
stc
lods
jbe
push
das
push
dec
xchg
fs
std
test
push
das
xor
sub
fidivl
je
xchg
insl
mov
in
fs
adc
sub
jmp
mov
outsb
push
xchg
sti
ja
jl
xrelease
mov
pusha
cli
jge
inc
shl
add
lds
xchg
outsb
rorb
ret
add
sub
out
icebp
shlb
pushf
arpl
gs
jno
mov
sub
xchg
xor
loop
loop
cld
div
das
mov
sahf
adc
push
mov
shll
hlt
fldt
push
clc
out
fsubrl
mov
dec
je
push
pop
sub
stc
repnz
idivl
fnstsw
sar
movsl
jb
ficomps
mov
push
lahf
jbe
stos
jge
stos
ja
sub
pop
pop
std
sbb
dec
mov
cltd
push
adc
fistps
pop
into
push
icebp
dec
push
inc
ljmp
out
push
inc
mov
mov
add
or
dec
xchg
push
sub
imul
mov
jb
pop
xlat
sti
xchg
loop
fmulp
cmp
xor
pop
imul
ja
clc
popa
xchg
stos
sti
push
stos
add
clc
sbb
divb
insl
ret
inc
test
rolb
icebp
hlt
xchg
dec
and
js
pusha
and
out
out
xor
jg
adc
push
jnp
pushf
out
mov
cmc
mov
cmp
shrb
cs
or
into
push
out
addb
cltd
scas
mov
jbe
mov
sub
ss
inc
out
lds
pop
sbb
lcall
lret
rcl
mov
xor
or
mov
sub
lahf
and
xchg
fcompl
adc
mov
jbe
or
and
add
cwtl
mov
pop
lret
cmp
pop
out
and
pop
jecxz
mov
adc
mov
sub
aas
jo
push
pop
loop
sbb
push
cld
bound
xchg
sub
push
int3
mov
add
fwait
jae
ret
lahf
mov
lea
stc
add
mov
dec
ret
cmp
pushf
pop
add
sti
sub
dec
dec
mov
inc
pop
nop
and
adc
repnz
and
sub
cmp
inc
push
ds
das
rorb
or
out
add
mov
cmpsb
jp
inc
jmp
mov
outsl
cltd
inc
jge
push
sub
cmc
lcall
loope
sbb
cmp
mov
shl
jno
sub
popf
lret
fld
lea
and
clc
clc
mov
jmp
add
nop
cmpsb
mov
fs
fcoms
inc
sbb
sbb
je
xchg
in
or
mov
orb
xchg
xor
cs
cmpsl
je
popa
aas
call
leave
cmpsb
push
add
mov
repz
aam
jbe
mov
int3
push
repz
pmaxsw
mov
dec
fcmovnb
mov
xor
rcrb
into
or
or
or
xchg
icebp
test
and
lahf
cbtw
sub
out
loopne
rorl
xor
sahf
cmp
leave
pop
push
sub
add
pop
mov
arpl
jb
jae
in
repz
add
out
cli
jl
enter
cmc
icebp
das
ret
mov
out
push
shrl
and
inc
xor
imul
fwait
insl
stos
imul
ficoms
jecxz
outsb
and
movsl
mov
mov
enter
repnz
aam
mov
mov
adc
xlat
cli
lds
adc
mov
lock
sub
xchg
out
int
xor
movb
dec
mov
mov
adc
pop
xadd
xchg
aaa
jmp
shlb
sbb
or
pop
push
sub
push
daa
shll
iret
dec
sub
lcall
bound
ret
cli
push
push
test
test
stos
test
mov
int
adc
in
add
fwait
and
enter
jnp
ljmp
imul
fwait
daa
dec
dec
outsl
mov
push
adc
negb
cmc
xchg
rorb
ds
bound
push
pop
inc
rorb
lds
jb
cmp
test
cmp
xor
cwtl
or
mul
inc
test
in
stos
shrb
inc
in
in
ds
scas
inc
aas
cmp
dec
sbb
in
xchg
add
fbld
adc
dec
sub
ljmp
fistpl
sbbl
mov
or
shr
xor
in
mov
test
and
and
add
popf
addr16
jno
xor
adc
sbbb
icebp
sub
sti
dec
mov
push
std
ja
xchg
insl
mov
dec
cmp
repz
jge
pop
push
mov
adc
push
mov
cmpsb
aas
leave
aaa
inc
push
icebp
cmp
orl
pushf
loop
sub
adc
loope
fs
mov
cmpb
out
cmp
je
xlat
cmp
xor
dec
cld
stc
add
and
dec
dec
mov
ljmp
aam
xchg
lds
xchg
or
dec
js
or
add
dec
mov
cmpsl
push
and
add
xor
mov
add
rcrl
push
xor
jle
orb
or
push
bound
cli
jo
in
push
shll
jns
mov
sub
or
cmp
or
test
push
loop
dec
pusha
repnz
fsubp
fcmovbe
in
mov
addl
push
sbb
xchg
pushf
mov
mov
jbe
popf
ret
xor
mov
jno
repnz
ja
test
shrb
sbb
and
add
mov
test
push
sub
or
ds
mov
dec
xchg
mov
shrb
aas
in
mov
pop
cmp
push
leave
jno
xor
aam
into
addr16
and
add
shrl
xchg
mov
push
negl
jne
pop
lret
pop
sbb
jle
in
add
mov
leave
pushf
jl
cli
and
cli
ja
xor
adc
xchg
adc
pop
sbb
dec
ffree
mov
rorl
pusha
xchg
mov
and
gs
iret
mov
xchg
fldenv
or
jp
or
sbb
pushw
dec
cmp
icebp
mov
sub
mov
inc
pop
rolb
bound
jge
addb
cli
inc
mov
in
cmp
pop
jns
int3
rolb
imul
fcomps
in
addr16
xor
mov
push
pop
push
sub
addr16
pop
jbe
mov
cmpsb
adc
or
loope
addl
flds
mov
cmp
add
std
jg
and
dec
mov
xor
push
mov
xor
enter
mov
push
cmc
push
xor
roll
xor
cmp
jp
pop
aaa
xchg
jae
xchg
lock
xchg
pusha
dec
or
adc
ss
mov
fcomps
pop
in
and
andb
mov
out
stc
test
adc
cmpsb
test
pop
iret
ret
lret
jge
sbb
sahf
push
cwtl
inc
mov
push
ret
mov
sub
sub
xlat
mov
dec
xchg
or
cmc
mov
and
bnd
mov
pop
out
or
popa
dec
fldl
movsl
js
pusha
idivl
and
sti
cwtl
cltd
cmc
mov
sbb
and
pop
leave
shl
lds
stos
mov
ljmp
sbb
dec
cld
insb
mov
les
xor
xchg
out
call
scas
and
adc
test
jmp
lcall
adcl
sbb
push
sub
mov
dec
jnp
pop
cmp
data16
jge
lea
mov
int3
jne
bound
andb
rorb
push
cmp
sub
inc
mov
imul
pop
mov
mov
mov
stc
jp
lcall
into
add
cmp
jo
dec
ss
mov
pop
aad
mov
outsl
andl
call
push
mov
sbb
js
das
jns
aad
pop
pop
adcb
out
ret
test
fldl
push
sbbb
xor
add
jbe
or
cmc
add
fsubrp
pusha
jle
mov
xchg
lods
outsb
mov
mov
sub
insb
mov
fadds
add
ret
push
and
in
mov
js
fcomp
sbb
adc
jp
sbb
lret
dec
movsl
jns
lock
out
jmp
popf
call
ljmp
pushf
inc
in
lcall
es
test
sbb
lock
jno
hlt
pusha
scas
jg
inc
fidivl
xchg
fisubl
sbb
sub
dec
sbb
jle
or
dec
inc
dec
rol
xchg
jno
push
out
jae
add
mov
nop
pop
sub
jae
daa
jb
mov
mov
rcl
sbb
std
xor
movsb
and
mov
dec
xchg
mov
xchg
gs
pusha
je
add
xchg
nop
inc
fwait
fs
ljmp
push
inc
das
ficoms
jae
push
inc
xlat
jne
aas
movsl
ret
mov
mov
jae
aaa
or
test
lds
pop
loopne
mov
sbb
xorb
mov
or
sub
mov
call
mov
mov
or
test
cmpsl
jno
insl
flds
adc
adc
clc
mov
xor
dec
push
add
data16
jp
mov
mov
js
daa
stos
ds
repnz
or
popa
inc
leave
mov
lret
and
dec
adc
xchg
mov
icebp
cltd
pop
cmp
sbb
xchg
jge
xchg
fsubr
mov
insl
ds
stos
sbb
pop
pushf
sarl
jns
adc
movsl
popa
notl
ffree
dec
icebp
enter
push
scas
push
out
mov
les
adc
lods
inc
pop
pop
stc
mov
repnz
fistl
cmp
dec
sub
xor
negl
sahf
popa
add
fsts
iret
sub
jae
jecxz
aas
std
pop
xor
xchg
sub
or
mov
lahf
cmp
repnz
and
fcomip
subl
mov
stos
fstps
push
xor
iret
sbb
mov
jbe
jge
mov
lds
mov
movsl
rclb
push
aad
std
add
xchg
jge
loope
or
dec
test
pop
imul
repz
lret
mov
push
ss
mov
lret
inc
cmp
stos
mov
add
idivb
insb
in
out
test
aas
lcall
stos
fstpl
fildll
sub
js
add
sub
aaa
pop
mov
shll
or
loope
pop
aaa
cmc
cmpsl
enter
pop
mov
adc
imul
aad
cmp
or
rol
or
dec
test
dec
bound
xchg
xchg
outsl
sbb
dec
push
in
sub
pop
in
sti
xchg
adc
jne
xchg
mov
mov
mov
cld
movsb
pop
jb
xchg
jo
mov
addr16
or
mov
inc
fidivrl
add
mov
fbstp
repnz
cmpsb
out
xchg
cmp
cmp
and
mov
insl
inc
jno
imul
lcall
cli
mov
jg
cmp
jo
sub
daa
pop
loope
movb
ret
mov
mov
pop
ss
inc
xchg
add
pop
adc
inc
fcmovne
cmp
push
xchg
repnz
mov
mov
sub
xchg
enter
icebp
jp
pop
call
pop
and
sti
insl
and
dec
cmp
andl
int3
repz
aas
and
scas
fcomp
bound
push
iret
adc
dec
sub
insb
lret
fidivl
repnz
mov
push
cmpsl
pop
sahf
pop
loope
jl
xchg
hlt
je
daa
hlt
jecxz
int
fxch
repz
push
pop
movsb
cmpb
test
lock
popa
decb
test
stos
xor
lds
sbb
and
jg
sbbl
ss
or
jp
ljmp
fs
dec
lahf
jbe
mov
aam
int3
mov
cmp
push
cwtl
mov
mov
and
dec
jmp
enter
std
xchg
mov
xchg
mov
enter
sti
cmp
push
push
sbb
leave
push
mov
jbe
mov
push
push
dec
jnp
in
mov
lahf
call
push
inc
pop
js
addr16
mov
push
inc
leave
add
mov
adc
sbb
mov
pushf
addb
push
pop
gs
cmp
jb
mov
or
in
inc
ljmp
stos
adc
mov
adc
xchg
fiaddl
mov
faddl
fsubrl
sub
popa
call
dec
lret
aaa
mov
push
push
or
in
push
pop
and
jle
sub
icebp
dec
adcl
cmp
push
ror
ret
jno
sub
insl
inc
pop
add
test
or
aas
sub
dec
xlat
movsl
es
test
aad
mov
cmp
popa
fnstenv
jge
sbb
push
cmp
lock
pop
push
mov
pop
inc
adc
xchg
outsb
stc
xchg
push
nop
popf
in
cmpsb
or
pop
test
and
mov
loop
add
jle
rorb
cltd
sbb
mov
pop
loope
rol
outsb
lret
enter
push
pop
adc
dec
and
cmp
ss
test
mov
cld
int
popa
mov
jno
mov
addl
inc
int
jmp
js
xchg
std
xor
sub
fcompl
lcall
fwait
adc
jg
push
jmp
call
aaa
inc
xor
divb
pop
dec
iret
adc
xor
cld
xorl
sub
jg
fiaddl
fbstp
jbe
or
les
out
pop
inc
mov
test
ljmp
std
or
cltd
push
pop
push
jg
pop
adc
mov
dec
cmp
xchg
xorl
stos
cmp
inc
repnz
jecxz
popa
jg
push
mov
dec
lods
xchg
jo
xchg
outsb
aad
and
xor
push
or
out
cmp
push
cmp
pop
ja
call
data16
xchg
add
push
orb
mov
adc
lods
cmp
stc
iret
fwait
jb
xor
xor
inc
mov
pop
roll
test
lock
int
xlat
popa
xchg
adc
mov
mov
repnz
out
test
lds
push
lret
lods
cltd
data16
add
push
outsl
mov
mull
lods
xchg
test
rolb
cmc
jne
fnop
or
out
cmpsb
pop
repz
pushf
xchg
mov
int
std
js
add
inc
inc
inc
adc
and
out
sahf
or
cmpsb
test
fnstenv
jno
jle,pn
push
imul
rol
clc
pop
test
mov
out
pushf
mov
lahf
fcmovnbe
lret
push
sub
mov
jo
rclb
inc
mov
xor
lahf
push
cmc
add
je
pop
mov
adc
lods
mov
outsb
xchg
rolb
jl
xor
inc
sbb
mov
mov
mov
js
pushf
lds
les
mov
add
inc
pop
enter
push
fs
ja
cwtl
aas
lret
xchg
push
das
cmp
popa
push
int3
jne
mov
cmc
adc
loop
mov
sti
outsb
sub
pop
jle
pop
jle
or
xor
xor
xor
jae
mov
adcb
or
pop
cmp
aad
int
and
pop
adc
aas
jecxz
decb
ret
rorb
into
jb
outsl
loop
imul
or
jge
cmp
jno
dec
aam
test
mov
xchg
cmp
les
sub
xor
or
inc
bound
inc
mov
jae
xchg
push
rolb
pop
mov
pusha
push
aam
push
les
cltd
js
add
mov
mov
xchg
sbb
scas
clc
xchg
std
xchg
aad
out
icebp
or
xor
cltd
jne
cmp
cld
push
xchg
mov
pop
sub
movsl
loop
insl
xor
and
cmp
adc
repnz
and
sub
movsb
adc
imul
xlat
es
and
pusha
imul
test
je
xor
mov
mov
inc
cmp
rorl
popf
push
testl
sub
xor
jno
movsl
pop
sahf
ret
lods
mov
mov
outsb
clc
mov
xchg
dec
pop
and
cltd
or
fsubs
adc
inc
fisubl
cmpsb
aas
add
xlat
lret
test
xor
sti
jl
mov
in
or
ss
lock
dec
ret
je
or
out
test
filds
in
cmpsl
inc
fcoms
xchg
mov
or
sahf
mov
push
push
push
rclb
push
pop
mov
xor
imul
and
daa
mov
es
sbb
data16
dec
shl
lods
mov
cld
je
jbe
or
dec
sub
fcmove
sub
dec
adc
nop
cld
sub
mov
sub
sbb
dec
mov
pop
ja
sarb
popf
test
xor
cmp
and
xlat
stos
push
sub
mov
push
and
add
xor
inc
bound
xchg
stc
cmp
arpl
popf
sahf
pop
adc
shlb
out
je
arpl
cmpsb
push
aam
das
jge
inc
jbe
and
xchg
aaa
in
and
push
lea
incl
mov
jmp
insl
pop
movsl
inc
add
mov
add
mov
mov
mov
xchg
rcrb
lcall
jbe
inc
out
sub
std
add
inc
push
das
cmp
cmp
ja
into
mov
aas
daa
sub
icebp
data16
subb
and
mov
sub
in
stc
fidivl
scas
or
lahf
xor
cltd
mov
sub
lahf
xor
iret
add
jae
mov
movsb
imul
lock
dec
and
push
or
dec
add
aam
xchg
cmc
outsl
mov
movsb
cmp
fldt
mov
mov
cmp
enter
pop
jp
into
in
cwtl
test
popf
mov
je
mov
dec
in
loopne
inc
scas
insb
pop
jle
cmpsb
ss
test
fcomps
jae
ja
imul
mov
lcall
mov
gs
lock
cmp
sbb
push
cmp
dec
imul
mov
int3
lea
ja
cmp
faddl
js
ret
and
pop
cli
xor
imul
iret
iret
cmp
ffree
ja
scas
dec
sbb
push
fildll
jns
shr
imul
popa
inc
sbbb
pop
loope
ret
fwait
xlat
pop
loopne
iret
xchg
or
or
jne
fnstenv
bound
xor
mov
arpl
out
sub
les
mov
lods
xchg
xorl
mov
mov
pop
popf
scas
sub
jg
xchg
mov
cmp
mov
pushf
insl
push
xor
cmp
cmpsb
stos
cli
pop
rclb
enter
and
jmp
scas
adc
adc
xchg
sbb
aas
sbb
push
and
js
xchg
push
add
divb
sub
addr16
sbb
add
xchg
dec
pop
push
dec
push
insw
push
mov
add
orl
mov
std
dec
xor
ds
inc
in
jne
add
mov
jbe
and
jno
xor
inc
out
adc
jne
adc
mov
inc
mov
jne
add
in
ret
adc
and
mov
push
icebp
ret
pop
out
jne
dec
es
movsl
ret
fwait
push
lcall
mov
mov
ljmp
test
dec
push
fwait
fs
and
push
sbb
inc
cmc
mov
cmc
xorl
push
jecxz
imul
xchg
roll
add
cmp
jmp
push
popa
cmpsb
xor
mov
inc
xchg
mov
bound
add
jmp
pop
jle
aas
mov
ss
mov
pop
lods
sti
aam
movsl
mov
push
mov
and
ja
mov
ds
aad
mov
mov
cs
push
add
xor
xchg
fbld
xor
iret
js
mov
cli
cltd
sbb
sar
sti
pop
or
rorl
mov
xchg
inc
test
mov
loop
movsb
mov
in
sub
cmp
fimull
mov
dec
icebp
cmp
clc
negb
jmp
mov
push
mov
sub
cltd
aaa
or
inc
or
mov
cmpsb
jg
inc
inc
gs
inc
push
pop
jmp
in
pop
lods
pushf
push
mov
out
std
push
xchg
sub
lods
shlb
dec
and
dec
shr
mov
xchg
xchg
cld
mov
jge
lea
mov
dec
and
lods
dec
mov
jmp
repnz
movsl
outsb
xor
lea
add
arpl
push
scas
and
mov
push
add
jmp
cmpsl
stos
and
mov
push
or
or
push
and
in
jns
call
pop
cmp
xor
xor
in
sbb
daa
cmp
in
out
scas
cmp
xchg
cli
cmp
or
ljmp
and
pop
jg
in
mov
pusha
aam
or
mov
sbb
dec
xacquire
cmp
sub
mov
pop
sbb
mov
pop
mov
jp
jg
loopne
mov
xchg
mov
inc
fildll
rorl
movsl
ds
inc
or
ret
jl
mov
dec
push
call
lock
push
mov
mov
inc
add
ficompl
fnsave
test
loope
das
push
jl
adc
dec
lea
sahf
mov
mulb
jns
xlat
or
add
jecxz
xchg
aam
or
push
dec
fwait
dec
jne
bound
iret
lds
sub
lcall
inc
scas
stos
popa
fisubl
xchg
or
jno
cwtl
mov
inc
ret
push
add
push
pop
jns
sub
inc
inc
test
lahf
js
lock
js
mov
pop
sub
dec
pop
pushf
outsb
xchg
cltd
out
lcall
nop
sbb
loopne
test
and
mov
and
lds
call
fistl
shl
aas
in
sti
leave
shr
cltd
inc
dec
push
jo
or
add
push
ljmp
sbb
xor
push
jle
iret
mov
cmp
int
xchg
pop
add
outsb
adc
testb
js
add
fcoms
test
imul
adcb
cmpsl
and
mov
pop
push
arpl
xor
hlt
pop
inc
xchg
sbb
jbe
scas
loope
in
ret
test
lahf
fwait
je
xchg
xor
std
inc
test
pop
add
scas
lds
mov
roll
sbb
rcll
adc
inc
aad
rclb
mov
and
push
fstl
sbb
and
rclb
mov
pop
outsl
jbe
hlt
mov
movsl
pop
mov
sbbb
stos
add
add
testl
sbb
dec
xchg
adc
jne
movsb
push
fwait
outsl
test
or
dec
mov
and
mov
dec
inc
inc
movsb
pop
jne
pop
push
mov
icebp
mov
pusha
test
arpl
jecxz
jle
and
mov
sbbb
xor
stos
mov
inc
jmp
movsl
js
lods
jns
sti
pop
lret
push
mov
jnp
inc
or
pusha
and
mov
mov
mov
sub
cmp
in
repnz
and
xorb
add
xchg
dec
cmp
jae
repz
and
ljmp
test
data16
stc
test
add
enter
dec
fwait
push
repnz
divl
push
clc
mov
mov
dec
dec
push
jo
in
mov
call
ret
mov
ja
inc
add
out
into
movsb
jp
lods
movsl
lcall
jge
pushf
adc
mov
ds
divb
test
daa
f2xm1
test
rclb
push
cmp
aad
cld
mov
std
mov
movsl
lahf
shrl
sbb
mov
pop
ljmp
mov
mov
xor
mov
sub
inc
or
push
int3
xchg
icebp
pusha
lcall
cmp
pop
daa
lods
cmp
cmp
mov
shl
sbb
mov
notl
inc
nop
loopne
inc
dec
jbe
xchg
out
int3
fldcw
cld
dec
push
pop
lods
cli
add
add
pop
xor
mov
mov
dec
and
dec
aaa
mov
mov
mov
mov
ljmp
jnp
mov
dec
inc
xchg
xchg
clc
nop
mov
arpl
scas
sub
clc
enter
jb
stc
xchg
imul
fidivl
add
jmp
stos
dec
nop
xor
mov
popa
lods
das
stc
jbe
hlt
loop
jns
pop
mull
data16
push
xchg
mov
mov
xchg
mov
jnp
adc
sub
ljmp
mov
sbb
ljmp
call
xchg
ret
outsb
xor
pushf
hlt
mov
cmp
call
repz
loop
dec
in
jae
aad
loope
sub
fsts
movsl
xor
sbb
cmp
push
ror
add
data16
cmc
push
adc
mov
jp
push
xlat
push
mov
and
cmp
pop
dec
fimuls
add
das
pop
scas
pop
push
jne
clc
pop
xor
jbe
testb
sti
scas
mov
lea
add
inc
decb
rcll
mov
stos
pop
jne
out
pop
lretw
outsb
and
jae
int
sti
gs
iret
lret
xor
or
ds
inc
add
das
mov
jnp
cmpsl
xchg
repnz
stc
xor
xor
cs
lock
ja
pop
leave
and
cmp
sub
leave
rorb
aad
inc
mov
in
pushf
cli
pop
push
lea
pushf
mov
adc
out
dec
ja
lea
sahf
and
popa
dec
in
lock
bound
lcall
or
int3
sbb
pop
rcr
push
mov
mov
jge
push
enter
mov
test
sahf
icebp
repz
push
mov
sahf
das
out
adc
fsubs
push
imul
fstpt
out
pop
icebp
mov
cmp
and
xor
or
stos
xchg
rclb
or
out
test
mov
push
popf
xor
cmp
push
cmc
push
aaa
cli
inc
and
and
adcb
clc
adc
sbb
fisttpl
sub
add
push
push
and
call
adc
stc
lret
xchg
xchg
cmp
pop
aad
and
mov
mov
mov
adc
dec
mov
popf
icebp
imul
xor
mov
cli
std
push
sbb
stos
fisttpl
mov
dec
aam
xchg
cs
or
pusha
fsts
stc
inc
loope
sub
pusha
xchg
jne
jmp
xchg
rorb
fdiv
mov
pop
pushf
pop
jl
pusha
push
sbbb
xchg
nop
jns
xchg
push
add
dec
xor
xchg
pop
push
sub
aam
push
xor
cwtl
outsl
sbb
dec
popa
icebp
cwtl
sbb
inc
pop
inc
les
scas
jns
or
inc
inc
adc
add
cmc
popf
movsl
fmul
inc
sahf
jns
stc
filds
add
rorb
movsl
sti
inc
xor
scas
imul
jno
icebp
xor
adc
push
inc
imul
mov
sbb
and
mov
not
imul
sbb
inc
xchg
cmp
sub
movsb
rcr
pop
jge
loop
mov
jmp
sub
jno
movsb
push
cld
inc
pop
loope
outsb
pusha
inc
push
repz
rcrl
sbb
or
insl
dec
adc
icebp
jecxz
test
sahf
inc
aam
cmp
data16
sbb
insl
dec
leave
push
cs
pop
fcmovu
pop
mov
mov
jp
pop
xor
out
push
es
or
and
jmp
jl
xchg
lock
popf
sbb
insl
pop
mov
add
dec
jmp
and
shrb
adc
ret
or
popf
mov
arpl
lods
stos
mov
inc
sbb
dec
cmpsl
sar
enter
dec
adc
stos
mov
sub
pop
fcmovne
push
stos
push
movb
lcall
enter
sub
fimull
jo
add
pop
daa
add
sahf
inc
ja
push
fs
addr16
xor
mov
loop
sbb
in
mov
lahf
and
push
shrl
int3
jo
aad
test
sub
cmp
push
xor
lods
pop
inc
sbb
mov
xchg
mov
sahf
loopne
test
cmpsl
mov
mov
adc
inc
popf
pop
lret
test
dec
cmp
test
push
mov
mov
enter
mov
mov
hlt
inc
mov
mov
pop
ret
inc
pop
insl
sbb
inc
inc
scas
cmp
shll
sarb
ficomps
inc
mov
js
mov
sub
jmp
sti
or
inc
insl
adc
rcrb
jno
out
jo
add
loope
aam
sub
lock
cmc
add
lods
jb
mov
popf
sbb
mov
dec
imul
dec
arpl
stc
push
dec
ja
cmp
mov
lea
je
pop
in
cmc
jb
xor
jne
rol
mov
and
outsl
cmovnp
push
imul
iret
jp
xor
sbb
lcall
jne
imul
xchg
sub
cmpsl
cmp
inc
xor
enter
mov
pop
push
push
adc
cmp
xor
test
imul
aaa
sub
lea
push
ret
push
jp
pop
jmp
push
out
cld
cmovb
push
jne
stos
call
fsts
mov
imul
mov
dec
mov
mov
mov
lahf
addb
hlt
cmp
dec
out
xchg
imul
loop
stc
mov
or
cltd
jmp
or
mov
das
or
fiadds
and
pop
xor
mov
outsl
fldenv
xor
inc
addb
sub
addb
jo
mov
xchg
lcall
mov
xor
fidivrl
insl
out
xchg
push
mov
cmp
les
or
push
xchg
test
push
and
sahf
or
insb
xchg
adc
sti
mov
gs
mov
or
lds
cld
movsb
repnz
out
mov
jle
push
stc
sub
leave
xor
push
es
mov
and
mov
stos
or
mul
xlat
mov
fsts
mov
pop
sbb
repnz
adc
mov
or
cmp
lahf
cs
shl
pop
adc
jge
lods
xor
fildl
jmp
lcall
cmpsl
mov
dec
test
xor
pop
pop
add
ljmp
mov
inc
fidivl
cltd
inc
jo
xchg
stc
cmp
sbb
mov
test
mov
in
gs
inc
push
inc
imul
push
aas
add
jge
or
mov
inc
mov
sub
or
mov
ficoml
add
mov
xchg
inc
flds
cmc
dec
movsb
push
and
mov
in
jp
shrb
push
jg
push
out
cmpb
mov
mov
mov
xchg
mov
and
adc
aad
jne
ljmp
sbb
xchg
sahf
xchg
out
pop
sub
js
ror
add
dec
xchg
aad
mulb
notb
ret
push
xor
std
outsb
dec
or
dec
mov
insl
cmpl
shll
cvtps2pd
in
outsl
sub
dec
pushf
cmpsb
push
mov
mov
icebp
xor
arpl
mov
cmp
test
mov
jmp
cwtl
orb
lret
std
fisubrl
jecxz
fs
pop
repnz
aam
push
and
pusha
in
das
ds
repnz
push
xor
je
pop
mov
mov
imul
mov
and
test
das
aad
divl
arpl
or
popa
cli
addl
inc
inc
xor
pop
cmp
mov
cmp
push
mov
mov
cmp
ljmp
stc
fldcw
or
xchg
aad
cmc
ss
xchg
out
call
addr16
xchg
mov
adcb
nop
sub
pop
adc
in
add
xorl
into
jno
scas
adc
shlb
add
imull
mov
cmp
fwait
lcall
mov
mov
femms
push
out
push
fnsave
lock
mov
sub
jmp
int
lcall
bound
iret
sbb
inc
dec
aam
lock
daa
into
in
jno
mov
scas
ficomps
push
and
jge
pop
hlt
in
daa
cmp
subb
out
push
nop
pushf
lcall
xchg
xchg
cmovne
jbe
adc
or
imul
inc
jnp
mov
testl
add
movsb
dec
xchg
add
bound
xor
jp
push
push
movsb
xor
cld
mov
mov
jne
rolb
lcall
cwtl
pop
pop
aam
add
gs
roll
xchg
fmull
imul
push
xchg
dec
lahf
push
push
mov
sbb
aas
fidivrs
pop
or
sbb
mov
push
loope
sti
je
mov
jmp
jl
and
xor
movsl
test
and
sbb
or
push
mov
fbstp
xchg
xor
mov
jl
pop
jbe
or
mov
and
lcall
subb
adc
lock
xchg
adc
incl
rol
pop
sbb
movsb
in
shr
mov
std
push
and
mov
loopne
stos
mull
movsl
pop
pop
mov
mov
mov
ret
out
sub
sub
or
jmp
mov
xlat
push
xor
lods
add
sbb
mov
movsb
int3
mov
roll
ret
popa
sub
cltd
pusha
jnp
xor
mov
jbe
adc
popf
mov
push
int3
sbb
cs
cltd
lods
pop
sbb
ljmp
test
mov
mov
push
shlb
mov
pop
push
and
adc
pop
ja
mov
loope
jae
xlat
das
fsubl
mov
push
das
ss
out
or
sub
and
jg
and
repnz
dec
and
push
jg
mov
adc
ss
out
in
movsl
add
out
xor
mov
aad
push
mov
jecxz
dec
push
ss
stos
mov
test
inc
jb
loopne
mov
incl
nop
xchg
daa
mov
cmp
pusha
xchg
jbe
outsb
es
cmp
dec
daa
or
stos
jno
stc
push
cmp
jno
mov
test
add
mov
daa
repnz
pusha
test
jo
repz
ds
stos
dec
outsb
repnz
push
fimull
adc
popa
jne
shll
fadds
push
cmp
lock
mov
or
mov
dec
mov
loop
adc
jne
pop
push
imul
pop
dec
das
xchg
pop
pushf
jge
popa
outsl
mov
jmp
and
mov
and
mov
mov
loope
test
jae
inc
xchg
adc
adc
and
dec
and
scas
dec
mov
out
addr16
dec
mov
sub
mov
imul
stos
jmp
mov
out
mov
sbb
ljmp
cld
add
sub
sub
jne
test
sbb
jmp
pushf
lods
push
mov
popa
push
inc
fisubs
outsl
stos
cltd
lds
add
ret
imul
stos
push
xchg
shl
out
and
fidivrl
jle
xchg
repnz
mov
inc
xor
daa
outsb
fldcw
mov
cmp
xor
fldcw
push
push
ja
stos
mov
pop
inc
into
jecxz
test
cmp
cmp
jne
mov
push
pop
mov
in
repnz
xor
mov
fs
sbb
sub
jp
sahf
fwait
aam
pop
pushf
cmp
xchg
mov
cs
jae
test
pop
mulb
mov
jmp
jecxz
pushf
inc
lods
insb
enter
lahf
push
repz
fidivl
out
dec
stos
jbe
cmc
jbe
outsl
add
xor
loope
addl
je
inc
cmp
mov
cmp
faddl
mov
lods
loope
fwait
sub
xor
push
sub
pop
test
adc
jne
repz
hlt
push
xchg
dec
add
out
jbe
sbb
or
cli
and
int3
mov
push
jmp
cmp
xchg
jecxz
push
outsb
add
mov
in
movsl
lods
jo
call
jnp
mov
outsl
push
fs
xlat
in
jbe
test
cwtl
sub
loope
test
and
clc
ljmp
fistpl
jg
sbb
and
scas
add
loop
jae
test
shll
or
xor
dec
mov
xor
repnz
mov
jmp
aaa
xchg
test
out
xchg
rorb
ljmp
clc
inc
cmp
lock
xor
arpl
inc
push
loopne
fcompl
cltd
scas
xor
push
add
lahf
jl
jae
push
jno
inc
imull
pop
xchg
sti
mov
call
mov
shl
test
mov
and
push
push
stc
test
mov
xchg
dec
test
out
mov
jae
test
subb
cmp
inc
loopne
jl
cwtl
add
xor
stc
bound
cmpsl
mov
daa
mov
sbb
icebp
ret
mov
add
dec
or
loopne
jmp
cmp
sbb
out
fnstsw
adc
mov
push
and
in
pop
push
xor
inc
sub
cli
jns
ds
mov
rcrl
dec
xchg
mov
shll
movsl
aam
clc
mov
xlat
mov
ss
xor
out
ja
test
or
xchg
xor
adc
jne
mov
sbb
fwait
repnz
inc
mov
cmpsl
arpl
stc
xlat
arpl
mov
jmp
lods
adcb
jge
lods
cmpsl
add
outsb
sbb
xchg
jno
loope
nop
ds
pusha
addb
ljmp
imul
ret
rcl
sub
in
push
push
dec
outsl
mov
cmp
outsl
mov
stc
mov
push
xchg
gs
sbb
test
inc
adc
xchg
cld
mov
addr16
packssdw
cmpsl
sbb
out
xchg
out
and
leave
es
mov
ret
mov
mov
jle
xor
out
rcrb
pushf
adc
daa
in
push
scas
cli
enter
cld
nop
push
push
mov
ja
popa
fisubrs
push
rcll
cmpsb
mov
stos
pop
ljmp
sbb
cmp
push
cmp
and
mov
mov
test
imul
mov
xchg
insl
push
xchg
inc
lret
inc
mov
dec
add
aas
fmul
and
or
rcr
or
aad
test
or
and
imul
dec
mov
les
or
js
aas
mov
cmp
push
push
inc
fcoml
xchg
jbe
xor
in
mov
cmp
movb
insb
aas
jecxz
aam
push
shrl
push
test
aad
sarl
and
ljmp
iret
adc
in
sar
sub
scas
mov
imul
pop
repz
mov
sbb
push
sub
add
jo
pop
mov
jmp
mov
mov
xchg
pop
mov
test
push
repnz
mov
xor
call
ss
cmpb
adc
push
jnp
pop
or
inc
mov
out
cmp
dec
imul
loopne
pushf
pop
sub
or
xorl
or
push
mov
xchg
jp
adc
jne
lret
leave
cmpsb
cmp
sbb
je
ret
jp
lods
je
or
sarl
jnp
inc
xchg
mov
fcmovbe
add
mov
and
mov
loopne
cltd
pop
xor
cmp
imul
fildl
int3
ljmp
insl
lahf
inc
xchg
jo
xchg
mov
jno
cmp
mov
mov
scas
cmc
pop
repnz
dec
int3
jae
xchg
dec
dec
pop
add
hlt
das
lahf
adc
mov
and
and
movsb
fmulp
cmp
popa
xor
out
leave
mov
push
xchg
mov
lahf
mov
sub
inc
arpl
pop
xlat
mov
or
push
mov
inc
xor
shll
sbb
jmp
loope
les
push
imul
gs
ret
sub
out
cmc
mov
ljmp
xchg
nopl
xor
iret
sbb
mov
and
jecxz
fistl
jnp
and
clc
loope
and
js
sbb
lcall
push
movsb
in
test
ljmp
xor
mov
in
push
xchg
movsb
jns
push
cmp
cli
adc
movsl
mov
push
push
imul
imul
pop
adc
shll
dec
hlt
mov
popf
mov
pop
dec
jne
ss
out
lods
hlt
loopne
imulb
hlt
sbb
imul
arpl
and
mov
push
cmp
push
mov
into
in
arpl
xor
decl
cmp
fistpl
dec
pop
cmp
pop
test
inc
mov
imul
repnz
stos
or
pop
bound
inc
push
xor
ret
subl
or
jmp
sub
push
adc
sub
jbe
fnstsw
mov
cmp
lcall
push
xor
lods
stos
dec
repz
pop
sub
add
testb
into
jbe
cmpsb
insl
and
lcall
xchg
mov
test
dec
nop
and
cmp
mov
mov
mov
add
data16
dec
out
push
lcall
pop
sar
adc
int
int
adcb
je
js
lds
popf
test
pop
js
mov
push
or
lods
xor
jne
rorl
mov
repz
mov
pop
in
aaa
dec
sarb
ret
pop
orl
loop
pop
inc
out
ret
int
imul
imul
cmp
icebp
and
pop
iret
stos
inc
movsl
dec
das
scas
cmp
or
cmp
imul
bound
sti
jg
popa
inc
mov
sbb
std
jns
ja
rcl
pop
adc
pop
fcmove
mov
scas
cmp
mov
pop
add
dec
decl
mov
int
jo
inc
mov
or
subl
in
inc
in
or
jg
in
loope
pop
jg
repnz
cwtl
test
push
pop
test
xlat
adc
js
pushf
mov
mov
jno
add
and
inc
mov
push
xchg
jle
in
jnp
pop
call
jae
jmp
cmp
pop
adc
sar
and
daa
jno
xchg
xor
xor
test
cmp
or
ret
ja
push
or
jg
pusha
hlt
lcall
out
push
cmpsl
push
vpmuludq
xchg
xchg
inc
dec
pop
leave
adc
ret
dec
xchg
push
and
test
push
repnz
adc
cmp
mov
mov
out
fsubs
loope
out
mov
pop
call
push
xchg
bswap
lcall
mov
jg,pn
or
sub
xchg
push
les
call
js
cmp
or
or
out
sahf
mov
pushf
mov
pop
sarl
push
pop
out
jno
jl
sbbl
out
xchg
shr
push
inc
nop
sub
in
add
inc
jb
lcall
shll
outsl
jge
test
mov
out
push
cld
mov
fwait
stc
andb
adcl
lret
int
mov
iret
lea
sbb
insl
into
mulb
iret
and
sub
xor
scas
mov
add
inc
xchg
ror
lret
jmp
repz
inc
mov
jle
pop
arpl
lret
icebp
mov
inc
jne
xchg
jecxz
xchg
leave
or
pushf
loop
adc
inc
bound
sbb
ljmp
push
fnstcw
inc
adc
xchg
push
aas
imul
jae
sub
shll
nop
fs
push
leave
mov
jne
xlat
pop
mov
orl
sub
inc
cltd
push
mov
mov
and
pop
movsb
push
jo
or
adc
mov
ljmp
jbe
pop
and
fldt
test
adc
rcrb
sbb
or
divl
subl
aaa
fisttps
dec
outsl
cltd
push
loope
mov
adc
shl
pop
mov
stos
sub
orb
xor
jno
push
js
push
inc
mov
fmulp
mov
sbb
sbb
jl
outsl
outsl
sub
ffreep
dec
ja
lods
test
push
or
push
int
aaa
mov
mov
outsl
adc
lock
mov
jge
lret
je
ljmp
cmp
mov
mov
lods
adc
addr16
mov
adc
xchg
in
loop
inc
jno
mov
dec
pusha
lcall
mov
mov
out
adc
mov
test
pop
mov
push
lcall
int
stos
xchg
push
inc
aas
mov
pop
pop
mov
mov
roll
push
mov
pop
dec
in
add
nop
imul
iret
pop
mov
adc
cmpsl
and
dec
xchg
mov
loope
mov
adc
or
sub
inc
or
insb
scas
adc
stos
rolb
decl
das
iret
xor
pop
xchg
or
xor
cmp
mov
sbb
icebp
ja
sbb
and
push
fisttpll
push
sahf
xor
repnz
daa
push
inc
cmp
out
cmpsb
or
jmp
stos
dec
jl
std
out
fisttpll
dec
ljmp
push
push
imulb
ficompl
dec
and
lret
jae
mov
adc
shrb
shl
outsl
int3
bound
pop
ljmp
cmc
mov
mov
notl
scas
xor
pop
or
inc
idivl
xchg
mov
lock
and
mov
out
and
inc
push
scas
jmp
sbb
jl
add
push
xor
pusha
add
inc
fdivrl
jmp
out
imul
es
xchg
sbb
fsubrl
dec
and
test
xchg
mov
sbb
mov
lods
fdivs
outsb
jo
bound
cmpsl
push
push
imul
mov
mov
fcomps
popf
pop
push
test
outsl
lods
adc
jp
cld
mov
rcl
aas
xchg
mov
inc
xchg
sbb
adc
mov
sub
cmp
shll
jo
cmp
or
dec
dec
stos
adc
enter
mov
push
hlt
jge
push
adcl
xchg
cmp
cmp
adc
movsw
loop
js
cmc
and
xchg
sbb
cmp
jge
mov
adc
xor
mov
jnp
push
inc
sbb
jl
lahf
sbb
cltd
imul
pop
outsl
les
cmp
pop
aas
dec
and
mov
cltd
mov
adc
les
or
push
sub
sub
adc
test
insl
jg
repz
stos
sbb
pop
cmpb
cmp
pop
sub
fldenv
mov
sub
lds
in
cmc
inc
add
test
ja
sub
test
ss
in
lds
pop
and
inc
xorl
inc
das
adc
inc
out
xchg
ret
pop
jbe
cltd
scas
xchg
mov
mov
xor
arpl
push
das
aam
or
loope
xor
cmpl
xor
xchg
lret
add
inc
pop
sbbb
add
testl
lods
pop
sarb
sarl
std
es
ss
ljmp
ds
test
pop
sub
push
or
inc
popf
and
ja
jno
cltd
jp
inc
loopne
mov
aam
sahf
push
lcall
mov
pusha
pop
in
rclb
xchg
rcll
fcom
test
mov
mov
dec
jbe
push
dec
pop
sub
test
and
stos
xchg
pusha
push
adc
fdivrl
xor
pop
inc
and
sbb
inc
or
outsb
inc
jo
les
cmp
cmc
mov
fiaddl
repnz
mov
sub
mov
cmpsb
and
sub
sub
sub
adc
pushf
cmpb
loopne
in
es
insl
sub
inc
mov
aaa
mov
loop
dec
push
adc
subl
and
negl
mov
in
or
xlat
sbb
sub
popa
add
pop
outsl
jmp
popf
sahf
stos
flds
inc
or
nop
mov
xchg
imul
mov
stos
xor
das
mov
ljmp
push
test
je
enter
xchg
jo
mov
xchg
movsl
inc
insb
push
sbb
insl
outsb
inc
dec
jle
mov
lods
addr16
xor
pushf
sbb
or
cwtl
xor
or
cmpsl
mov
out
bound
mov
imul
push
addr16
mov
icebp
adc
not
inc
jo
cmp
push
sub
sbb
inc
xlat
stos
jmp
fstps
lods
orb
and
inc
daa
push
daa
jmp
sub
sbb
cli
imul
loop
inc
lea
or
adc
stos
cwtl
xchg
jp
pop
cmp
std
daa
adc
mov
daa
das
mov
in
testb
xor
and
push
jmp
push
scas
or
push
inc
pop
push
inc
shl
xor
scas
rcl
mov
push
jnp
or
cwtl
fs
add
pusha
movaps
aam
popa
mov
xlat
daa
sub
pop
sbb
mov
rorl
dec
adc
sti
sbb
shll
adc
mov
cmp
sub
rcl
pusha
xchg
jmp
xchg
test
dec
ja
mov
inc
mov
std
push
shld
sahf
pop
aam
sahf
jmp
ret
fimull
push
pop
push
arpl
pop
pop
sahf
in
inc
lock
sarl
sahf
nop
xchg
ret
adcb
outsl
fld
es
lret
sbb
inc
lret
adc
mov
pop
xor
dec
imul
mov
vunpcklpd
jp
faddl
sbb
pop
ds
jns
insl
add
hlt
ret
or
in
or
or
inc
mov
add
daa
test
and
and
divb
clc
mov
ret
leave
cmp
lcall
test
or
pushf
mov
mov
dec
xor
das
nop
insb
xchg
lock
test
out
xchg
in
rorl
arpl
cmp
xor
jno
ds
fdivl
and
ret
enter
xchg
and
enter
push
stos
cmpsl
leave
inc
add
jg
xchg
inc
or
ja
push
imull
es
or
mov
dec
into
ficoms
xor
fs
adc
dec
rolb
lret
adc
sub
mov
jl
in
sub
clc
inc
les
sbb
xorl
cmc
sub
adc
loop
xchg
sub
jmp
gs
dec
in
adcb
mov
loop
movsl
jb
or
leave
es
and
iret
aad
pop
mov
mov
in
ret
pushf
mov
mov
je
roll
push
adc
xchg
mov
and
pop
sub
add
sub
adc
jbe
repnz
adc
jl
leave
sbb
or
cmp
int
sub
aad
lds
dec
cs
or
mov
push
sub
lret
mov
xor
test
xchg
dec
sub
jns
das
mov
lret
enter
or
fcoms
pop
mov
fisttpll
pushf
push
enter
push
adc
in
pop
xchg
sub
daa
std
test
jge
ja
pop
jns
push
xchg
call
iret
jle
add
inc
push
aaa
pop
cmp
lcall
pop
push
cld
dec
ja
out
sahf
mov
xor
cmp
cmpl
pop
rcll
sub
mov
sti
cmp
adc
push
adc
aaa
add
mov
adc
imul
jb
inc
inc
mov
sub
mov
sbbl
fbstp
loopne
xchg
lock
xchg
jns
xor
fldcw
sub
adc
jg
or
cmc
std
sarl
cmp
mov
sbb
pop
loopne
push
stos
adc
jno
mov
dec
js
add
fidivs
out
inc
lret
shr
cmp
dec
sub
inc
xchg
lret
push
push
lds
inc
in
enter
repz
inc
push
xor
mov
testb
inc
cmpsb
lea
loop
jmp
cmp
outsb
adcl
pusha
ss
cmpsb
pushl
es
data16
fwait
xchg
sar
test
dec
clc
stc
push
loopne
loope
or
andb
or
push
repz
push
mov
fidivrl
repnz
jmp
pop
add
add
xchg
clc
sti
mov
xorl
pop
fcmovnbe
sub
push
sub
or
pop
inc
ljmp
push
jecxz
daa
jg
int
xlat
jne
sbb
jmp
xchg
jnp
ret
pusha
xor
mov
push
jge
or
and
and
pop
xchg
add
inc
ror
jmp
mov
ss
sbb
movsb
cmp
fisubrl
xchg
jbe
mov
mov
pop
movsl
pop
call
cld
xor
or
or
sarb
mov
add
and
jne
inc
jge
mov
repz
add
mov
cmp
adc
push
adc
sub
in
mov
pop
fsubl
add
mov
dec
outsb
push
outsl
or
jbe
xchg
push
sti
inc
fldenv
mov
lods
mov
jl
js
mov
and
enter
test
xor
scas
rcl
push
jmp
andb
jo
xorb
mov
mov
bound
out
adc
mov
in
cmp
loopne
sub
cmc
lcall
dec
rclb
and
test
shlb
push
scas
ret
add
test
mov
fsubrl
add
inc
cwtl
ficoms
jne
push
sbb
and
xor
dec
cpuid
mov
inc
or
hlt
cmp
pop
movb
bnd
push
cmp
cmpl
lods
jecxz
mov
ss
mov
sub
xor
stos
sbb
xor
sbb
sub
inc
inc
inc
gs
out
hlt
out
mov
test
in
mov
imul
jb
mov
mov
inc
and
mul
test
dec
dec
mov
add
fldenv
cmp
in
mov
dec
and
add
mov
je
gs
mov
pop
cmc
imul
addr16
add
jo
mov
ficoms
push
cmp
lret
push
push
cmp
orl
clc
push
xchg
pop
pop
test
mov
lods
jb
js
das
popf
jns
mov
cmpsb
clc
cmpb
aam
ljmp
mov
mov
dec
xchg
push
xchg
test
lcall
xchg
mov
mov
add
movsb
ret
outsb
mov
mov
or
aas
jno
inc
mov
push
iret
jl
scas
jb
movsl
lock
mov
mov
dec
xchg
mov
push
sub
popa
rol
into
cmp
and
xchg
jno
xchg
cs
std
sahf
jmp
jmp
into
jmp
push
movsl
test
push
stc
jg
fs
mov
adc
addl
push
lret
cmpsb
inc
and
or
sbb
dec
fcmovnb
xchg
mov
mov
loopne
adc
cs
cmp
cmp
out
xchg
les
jb
mov
pop
adc
push
jg
jle
into
mov
add
or
or
flds
fstps
dec
or
sbb
inc
or
clc
push
iret
cwtl
or
dec
ljmp
inc
out
cltd
in
mov
push
dec
mov
inc
je,pt
lds
xor
les
pop
xchg
popa
mov
nop
mov
xchg
fwait
push
xchg
pop
mov
sbb
mov
xor
inc
inc
clc
mov
bound
add
out
mov
jns
sub
cld
movsl
rclb
sbb
pop
lret
adc
je
dec
nop
sti
out
ss
stos
shlb
gs
dec
jns
or
cmc
mov
std
test
push
daa
sub
xorb
jmp
mov
push
jae
or
or
and
arpl
out
mov
sti
jo
or
outsl
mov
jmp
into
cmpsl
icebp
fildll
jp
out
sbb
pushl
insb
repz
pop
fbld
xchg
leave
jns
rcrl
mov
in
dec
mov
inc
hlt
inc
leave
dec
adc
pop
das
das
negl
adc
mov
cmovns
inc
lcall
cwtl
jmp
push
xchg
imul
pop
in
inc
ljmp
arpl
mov
mov
inc
push
in
js
and
iret
cltd
je
lret
push
shl
cmpsb
hlt
std
arpl
push
andl
jb
daa
dec
xchg
push
cmc
pop
and
push
xor
pop
push
loope
mov
fs
mov
cmpsb
fwait
mov
fbld
es
cmc
enter
subl
pop
push
add
fiadds
enter
fndisi(8087
movsb
and
inc
inc
scas
mov
cltd
push
mov
ja
roll
and
psrld
fsts
inc
movsl
or
lock
inc
adc
mov
mov
dec
or
test
popa
pop
pop
mov
bound
dec
ret
pop
pop
and
gs
mov
ja
leave
cmp
es
jl
xchg
loopne
push
incb
icebp
lock
sbb
fbstp
std
std
js
inc
lods
outsl
push
dec
in
mov
sbb
shlb
push
insb
jp
pop
outsb
or
call
test
mov
test
sarl
adc
popa
cmpsl
cmpsb
and
ret
and
push
hlt
test
xor
mov
scas
adc
or
leave
pop
jns
sub
sti
push
mov
push
or
add
mov
adc
popf
call
xor
iret
sti
mov
gs
sub
insb
mov
lock
cmp
sbb
cmp
arpl
and
mov
scas
cld
sbb
add
cmp
popa
jg
mov
cmp
out
ss
sbb
iret
scas
push
or
jno
dec
jnp
xchg
mov
dec
push
mov
lods
pop
in
jge
jg
aam
ret
nop
test
mov
inc
xor
adc
scas
daa
adc
lods
jo
popa
icebp
test
js
cltd
and
mov
fisubrs
ja
adc
aam
lock
subl
orl
pop
jo
lahf
or
shl
gs
cmc
stc
icebp
mov
pop
jmp
fs
dec
lret
sub
aad
in
dec
es
jnp
punpcklwd
cmp
pop
sub
add
sbb
push
stc
mov
push
fsub
pusha
push
mov
sub
fnstcw
sub
inc
xlat
int
xchg
popa
fbstp
lret
push
std
push
repz
pop
xor
pop
xor
fcmovnb
lock
incb
arpl
cld
ss
sub
dec
testl
lds
call
lock
push
test
sti
jne
shll
xchg
dec
pop
dec
inc
sbb
rcrl
cmpsl
leave
xchg
sub
test
int
xchg
push
xor
jnp
lret
int
ror
jo
lods
xchg
les
push
mov
push
inc
subl
pusha
ja
mov
add
stos
out
sti
jp
dec
xchg
or
imul
pop
repnz
xchg
rolb
insb
mov
jmp
js
mov
mov
rolb
test
xchg
inc
js
adc
gs
or
xchg
dec
xor
and
sti
pop
lods
inc
sub
fsubs
mov
or
jmp
cmp
lahf
xchg
cltd
loope
iretw
nop
mov
xor
ss
daa
out
pop
test
shll
movl
mov
rorb
mov
shl
push
mov
jo
mov
or
cld
mov
xlat
mov
push
sub
shrl
inc
imul
xor
sar
loopne
mov
or
xchg
test
xchg
cmp
test
or
inc
jl
daa
mov
mov
fcompl
push
push
icebp
imul
icebp
xchg
in
out
nop
lea
or
sub
jae
mov
cmp
inc
das
repz
enter
fisttps
cltd
mov
add
push
cmp
data16
arpl
sbb
fdiv
xchg
das
or
orb
adc
xchg
les
movsb
cmp
and
mov
arpl
insl
xchg
lahf
ljmp
dec
and
jno
jge
pop
push
jbe
add
dec
adc
adc
popa
sbb
inc
out
das
pop
out
xchg
addr16
nop
push
jne
test
lret
mov
sbbl
jno
push
push
mov
shr
popf
pop
jp
jnp
je
int
pop
js
aad
and
stos
adc
filds
push
mov
jmp
lcall
rolb
jecxz
adc
out
popa
or
inc
sbb
lret
std
sub
lods
or
andl
mull
sbb
js
or
pop
mov
jnp
cmc
and
nop
add
push
out
fisubrl
lods
mov
adcb
mov
test
test
cltd
mov
or
out
xor
gs
xchg
leave
sarl
sbb
test
inc
mov
inc
push
dec
insl
xor
mov
std
and
cmp
adc
rcr
or
push
mov
xchg
inc
adc
sbb
adc
faddp
and
xor
pop
sbb
dec
cmp
cmp
pop
push
sti
movl
fisubrl
movsb
sub
in
imul
in
out
outsb
imul
fiadds
fwait
or
scas
popf
test
xor
enter
decl
imul
xor
pop
inc
sub
mov
add
pop
call
bound
add
lock
add
ds
lcall
inc
popf
jmp
lods
dec
mov
mov
out
sub
jo
pop
add
sbb
jbe
mov
mov
xchg
imul
mov
into
dec
mov
adc
xor
div
fsubrl
add
imul
add
inc
fwait
test
mov
or
dec
scas
inc
lret
andl
pop
out
nop
push
ret
stc
dec
inc
and
or
xchg
hlt
mov
addr16
ret
hlt
int
xlat
mov
mov
in
out
mov
mov
jmp
cmp
call
and
lock
inc
mov
pop
and
das
sbb
stos
insb
es
jne
xor
sti
cmp
popf
pop
adcl
aas
mov
fmuls
xor
aas
xchg
mov
repz
push
js
pop
push
sbbl
out
add
add
mov
xchg
dec
dec
pushf
and
xchg
xchg
sub
stc
out
and
or
pop
outsb
mov
test
in
push
aam
lahf
cmp
adc
stos
push
pop
pop
cmc
faddp
and
mov
sti
adc
jmp
add
rol
scas
add
out
scas
cmp
push
lock
sbb
out
enter
outsl
xor
mov
mov
xlat
lret
mov
out
adc
push
test
dec
ss
xchg
cwtl
dec
fadds
iret
clc
ret
cmp
pusha
cmp
std
out
in
mov
and
and
mov
scas
stos
nop
mov
imul
std
or
mov
mov
rcr
je
stos
jne
adc
lods
pop
cs
ja
mov
mov
stc
subb
stos
pusha
popa
and
je
xchg
mov
xchg
out
ja
aaa
sbb
aam
cmp
and
mov
lds
stos
das
push
mov
popa
cli
dec
jne
push
sbb
out
int
dec
sti
push
add
arpl
sub
mov
iret
xor
lret
pop
sub
aad
stos
pop
and
cmp
jbe
mov
dec
jne
pop
fs
cmp
push
mov
and
mov
mov
pop
fimuls
sarl
iret
dec
mov
inc
adc
je
call
lahf
inc
sub
push
rcrl
push
imul
lods
mov
sub
ja
dec
lret
and
repnz
push
push
in
cmp
pushw
dec
and
pop
jp
xchg
mov
sub
shr
pop
aas
mov
push
xchg
sbb
cwtl
push
popa
cld
pop
xor
and
cmpsb
fwait
scas
inc
xchg
rcr
adc
push
fwait
ret
aad
ds
mov
aaa
jp
add
xchg
jmp
sub
stc
cld
gs
in
adc
lock
or
aam
pop
mov
call
jnp
inc
and
add
cmp
mov
lock
push
jl
sbbb
sub
push
rcll
aam
stos
cmp
lret
mov
mov
lock
or
es
bound
out
inc
and
test
adcb
inc
adc
xor
scas
xchg
fistps
outsl
btc
loope
bnd
cmpsl
jge
sub
xlat
cmp
loop
dec
popa
fcompl
lods
dec
test
pop
add
ljmp
mov
mov
cwtl
sbb
dec
in
mov
test
sbbb
mov
in
inc
or
jmp
adc
jp
jge
sbb
or
stos
jb
add
add
jo
popf
adc
test
int
mov
aam
mov
push
dec
addb
or
pop
xor
cli
mov
add
pop
adc
iret
sarl
lods
sbb
iret
xor
outsl
adc
mov
add
jle
sbb
pop
out
fs
push
adcb
in
aaa
dec
add
pop
shll
pop
lods
and
scas
popa
cwtl
jae
dec
xchg
mov
push
jne
fwait
xor
neg
mov
mov
ja
pushf
dec
mov
ret
insl
sbb
mov
leave
pop
sbb
out
inc
ljmp
pop
xchg
pop
and
insl
jno
cmp
or
shr
dec
lret
les
or
repz
test
mov
sbb
xchg
test
test
call
jbe
loop
inc
insl
inc
ret
ret
cli
enter
imul
mov
mov
and
out
in
aaa
sub
dec
stos
and
outsb
out
mov
xor
mov
push
cmp
and
mov
cmp
loop
outsl
dec
xchg
iret
cli
shlb
mov
dec
test
pop
jge
sub
shl
sti
mov
mov
mov
mull
mov
and
push
xchg
or
fdivl
movsb
fisubrl
xor
fwait
xor
mov
addr16
stos
add
inc
dec
rcll
cmp
sahf
sbb
imul
push
out
push
jno
mov
xchg
int3
or
pop
push
or
imul
cmpsl
mov
shlb
cmp
pop
pop
sbb
mov
stos
enter
xchg
bound
test
cmp
pop
inc
sbb
pop
sbb
hlt
aaa
mov
mov
push
xchg
push
std
inc
jnp
inc
roll
xchg
push
push
bound
xor
adc
shrb
jmp
notb
dec
addl
pop
and
mov
test
jo
jge
jno
popa
adc
pop
push
jge
clc
shll
cmc
xor
pop
cmp
ljmp
push
add
ljmp
jmp
adc
cli
aad
mov
shl
push
lahf
pop
sti
imul
data16
ljmp
sub
push
dec
lea
fdivrl
shrl
lds
pop
mov
imul
sarl
test
inc
add
loop
cli
xchg
add
popa
aad
shlb
lret
in
mov
xchg
jmp
mov
stc
and
leave
sahf
packsswb
mov
shll
pop
popl
adc
fwait
mov
mov
aaa
dec
mov
jnp
or
dec
mov
xchg
fisubs
das
cwtl
sarb
mov
dec
imul
pop
movsb
cmp
cmp
push
xchg
mov
mov
xor
mov
pop
mov
dec
outsl
insl
adc
xchg
inc
mov
lea
repz
inc
jne
aas
or
jge
aas
dec
fs
push
mov
push
dec
bound
lea
incl
decb
pop
xchg
aam
imul
push
cmp
fldt
dec
ljmp
xlat
inc
add
sub
test
mov
add
pop
jae
test
mov
fldenv
loope,pt
mov
movsb
mov
lods
mov
mov
mov
ret
mov
andb
jl
jg
pop
mov
pop
bound
gs
mov
aaa
push
lea
cmp
or
add
rorb
mov
inc
mov
adc
mov
mov
out
jo
and
fstps
shlb
ja
fcom
push
mov
add
test
jbe
dec
movsl
ds
mov
pop
orl
out
scas
testl
pop
mov
xchg
fstl
test
out
jns
or
popa
mov
cmp
pop
loop
sub
push
pop
sub
cmpsl
in
cmp
insl
fsubs
insb
jg
adc
push
cmp
inc
cs
mov
aas
frstor
mov
sbb
das
mov
cmc
ljmp
pop
cmpsb
xchg
dec
mov
daa
repnz
in
iret
sub
xorl
and
mov
pop
orb
push
cmp
pop
dec
add
mov
jmp
ret
xorl
ficoms
loope
sarb
push
out
inc
cld
cltd
sti
dec
mov
jne
and
cmpsb
pusha
jb
or
insl
sbb
xchg
xchg
sbb
add
mov
push
int3
mov
mov
dec
sub
call
sub
add
adc
ss
mov
jecxz
xchg
into
leave
sbb
sub
jp
lock
lods
inc
js
jo
add
mov
mov
xchg
scas
cmp
or
and
and
xchg
out
lret
les
dec
mov
sbb
mov
fcmovbe
or
xor
loop
aam
aas
pop
xor
rolb
rorl
sub
iret
and
test
inc
int
dec
and
fwait
or
je
test
ds
xchg
jp
sar
jmp
xorl
mov
out
mov
into
dec
cmp
push
xchg
lcall
jmp
insb
dec
jne
dec
sub
rorl
arpl
cmpsb
jmpw
rorl
hlt
test
or
xchg
add
pop
das
int3
dec
pop
jge
ja
sti
movl
mov
stos
mov
adc
jl
sub
sub
dec
enter
add
iret
clc
call
ja
mov
pop
fs
sbb
xlat
and
sub
cmp
mov
wbinvd
aaa
mov
outsb
lea
sbb
int
repnz
out
push
dec
imulb
mov
call
xchg
inc
cld
js
mov
aam
mov
adc
jno
adc
lock
les
pop
xchg
arpl
push
and
push
and
or
ret
sahf
or
cld
ror
mov
cwtl
bound
fimuls
sbb
jae
pop
sbb
in
adc
sbb
loope
addl
push
pop
jo
mov
cmp
xchg
shl
rep
sub
insl
and
out
scas
dec
mov
xchg
pushf
push
adc
add
mov
pusha
test
sub
sub
push
addl
cmp
jge
popa
stos
frstor
pop
shr
adc
xor
adc
add
jns
mov
ret
push
minps
mov
xor
gs
jge
out
pop
add
arpl
add
jecxz
aas
mov
mov
clc
add
push
mov
mov
out
repz
sbb
fsubl
shll
jb
mov
ja
jl
jno
cmpsl
push
push
scas
mov
cmpsb
mov
inc
stc
dec
sub
adc
and
test
out
loopne
add
pop
mov
in
mov
sti
lock
fdivl
xor
cmp
push
push
pop
xlat
push
out
sbb
fdivs
pop
pop
testb
hlt
xor
rclb
jmp
inc
jns
shll
cmp
aad
lret
add
and
into
ds
xor
cwtl
inc
pop
mov
xchg
andl
mov
fstl
ss
cmp
dec
andb
loope
or
push
xchg
jmp
mov
jns
sti
daa
das
insb
adc
inc
fcompl
dec
popf
fwait
rcrb
aaa
fiaddl
das
popa
es
popa
adcl
inc
int3
es
dec
lock
push
jmp
adc
adc
aaa
insb
mov
aad
xchg
fsubrl
cmpsl
sti
or
fwait
movsl
shrl
and
mov
pop
imul
mov
popa
mov
cmp
arpl
mov
hlt
jmp
cwtl
jge
mov
and
addr16
mov
mov
lods
mov
mov
hlt
clc
aaa
lcall
or
or
stc
movsb
lea
cmp
xlat
int3
cmp
cwtl
icebp
push
aad
pop
jp
push
lcall
ja
xor
fdivrs
dec
push
js
xchg
mov
cltd
pushf
sub
stc
mov
inc
mov
adc
mov
jnp
jb
sarb
sub
mov
clc
jecxz
sub
ja
mov
adc
mov
sahf
or
inc
dec
mov
orb
or
mov
mov
jno
mov
push
sbb
add
xlat
les
jge
dec
ss
arpl
push
in
mov
int3
aam
mov
icebp
js
and
mov
push
dec
dec
test
push
or
push
pop
pop
xor
adc
fildl
mov
mov
xor
cmp
lods
sbb
inc
mov
fwait
jbe
lcall
adc
scas
cld
fwait
xchg
std
leave
fwait
enter
in
movsb
xchg
inc
lret
cmp
ja
lock
xlat
sub
shlb
pop
mov
cmpsl
jb
cmpsb
pop
push
or
add
sbb
mov
loopne
mov
popf
lahf
mov
sub
jns
in
repnz
addr16
imul
and
add
mov
shrl
add
cmp
das
dec
shlb
aad
pop
push
adc
inc
leave
sub
cmc
adc
fstpt
jo
mov
mov
cmpsb
mov
pop
insl
stos
iret
dec
mov
out
insl
xor
and
dec
cmc
pop
scas
inc
hlt
ja
cltd
in
or
cmp
add
jns
jmp
test
rcrl
sbb
mov
iret
out
in
jne
jl
loope
rclb
push
push
scas
xchg
or
sub
jmp
xchg
into
outsb
lahf
cmp
mov
jae
outsl
out
std
test
je
lret
or
jge
sub
pop
fdivs
daa
cld
loopne
dec
fnstcw
jae
loopne
and
daa
movsb
lods
jmp
insl
aaa
dec
push
sti
push
loopne
push
xchg
push
movsb
add
stos
xor
sbbb
mov
lret
push
xor
mov
mov
xchg
pushf
add
push
mov
sub
lds
pop
test
push
nop
in
mov
mov
dec
pusha
push
push
dec
rolb
xor
sub
insl
inc
pusha
jns
fildl
mov
orl
adc
fs
sbb
sub
mov
jne
cmpsb
scas
clc
jae
ss
or
xor
sub
into
pop
or
lock
sbb
xlat
in
rcll
sub
cmpsb
pop
jns
xor
pop
xlat
sbb
test
jno
or
add
xor
cld
sub
pop
add
aaa
cltd
out
jns
lods
push
push
out
cmp
cld
fsts
test
or
mov
pop
leave
hlt
xchg
xchg
adc
xchg
jae
jmp
jnp
cmp
mov
sbb
add
lret
ss
or
pop
mov
pop
scas
sarl
pusha
test
out
leave
mov
jecxz
fdivrs
jns
popf
sbb
push
jmp
and
scas
adc
andb
mov
or
rcr
lds
xor
cltd
rclb
aad
jle
mov
test
xor
xchg
and
mov
mov
movsl
loop
mov
repz
pop
iret
scas
push
and
jl
and
xchg
test
jae
jle
xchg
xor
mov
cmc
jne
or
sbb
outsl
daa
or
sub
fcomp
sbb
mov
test
adc
ds
dec
stos
in
xchg
sbb
mov
sahf
adc
jae
push
and
mov
cmc
or
sti
aad
addb
stos
out
flds
loop
outsl
ret
mov
je
mov
inc
adc
mov
cmpsb
cmpsb
jecxz
xchg
hlt
aam
xchg
sub
lods
hlt
adc
push
cli
ret
popa
inc
jle
lret
push
mov
xor
dec
jno
jg
sub
push
aas
inc
push
insl
adc
subb
jge
mov
jp
add
push
leave
fstpl
xchg
mov
lds
cmp
jb
adc
jle
mov
insl
les
rorb
sahf
dec
stc
lods
repnz
into
push
lock
xor
dec
das
or
fcomps
cli
aad
outsb
pop
shll
adc
mov
push
fistl
adc
out
push
sub
lods
jno
mov
inc
aaa
or
orb
push
and
andl
loopne
das
sub
mov
inc
xlat
popf
xor
das
xchg
jmp
mov
dec
lahf
sti
dec
scas
add
push
inc
imul
repz
xlat
sbb
mov
ds
test
lock
mov
fildll
pop
mov
inc
out
lods
and
scas
push
mov
adc
pop
or
xor
pop
add
cmp
stos
testl
inc
lcall
aas
cmp
stc
xor
aaa
mov
xchg
iret
idivl
ljmp
or
cld
adc
in
clc
sti
push
cmp
inc
inc
dec
mov
mov
lods
negb
xchg
dec
adc
inc
pop
xchg
mov
out
mov
push
sbb
ss
fwait
push
out
push
inc
nop
or
movsb
mov
sarl
adc
scas
xchg
nop
lods
adc
xchg
fisubrl
orb
imul
xor
repnz
rcr
add
and
in
and
cmp
aaa
les
shrb
pop
cmpsl
inc
aam
add
cmp
cltd
sub
mov
bound
dec
sbb
lea
push
nop
sbb
test
popf
lods
lret
cmp
jmp
dec
adc
lds
adc
adc
les
int3
in
jnp
mov
pushf
pop
aaa
push
jl
in
mov
and
sbb
pop
pop
and
cmp
and
out
add
inc
sbb
jge
sub
pop
outsl
lods
movsl
mov
mov
push
into
inc
dec
jae
jns
push
mov
and
push
cmp
push
fs
mov
clc
dec
jae
int3
or
lock
lods
cmp
mov
es
push
mov
in
push
inc
cmp
jnp
aas
dec
dec
insl
loopne
xchg
clc
fwait
inc
mov
pop
in
lret
scas
pusha
mov
sub
in
mov
xlat
not
stc
adc
push
adc
shr
lea
sar
pop
out
add
aam
outsl
and
lock
cmp
fcmovnu
mov
push
sub
fstl
xor
push
lods
xor
mov
sarl
sbb
ficoms
pusha
xorb
inc
mov
sbb
inc
cmpsb
mov
jmp
in
mov
andl
xor
jae
xorb
shrb
scas
pop
lcall
gs
scas
inc
mov
xchg
jae
bound
jbe
sahf
push
mov
jg
mov
bound
push
fmuls
sub
popa
cmc
sbb
push
pusha
xchg
fdivrl
imul
push
test
pop
in
lahf
lret
sbb
inc
dec
cmp
mov
cwtl
xchg
sbb
mov
mov
pop
lods
sti
loope
xor
jnp
inc
imul
jmp
lods
mov
dec
outsb
jl
rdpmc
pop
xor
sub
cmp
and
hlt
out
gs
adc
cmp
stos
xchg
sub
outsl
jp
mov
fwait
cmp
ljmp
fimull
out
xchg
fadd
aaa
sub
lret
xchg
mov
addr16
push
cmpsb
pushf
inc
cld
xlat
or
in
cmp
mov
mov
pop
fldt
sbb
xor
mov
mov
aaa
sub
pop
rorb
in
dec
sub
xchg
fnstsw
lds
mov
dec
add
test
dec
outsl
push
mov
rcrb
out
cmp
mov
mov
sub
mov
test
roll
lahf
xchg
mov
je
sub
cs
inc
cmovns
sahf
loopne
cmp
sbb
jg
mov
sub
movsl
pop
sbb
ficoml
sbb
pop
mov
mov
xchg
cmpsl
adc
out
push
jp
cmpsb
sub
test
add
daa
push
gs
and
and
jns
mov
test
dec
jne
cli
xchg
sbb
aad
les
or
ret
push
mov
push
jle
pop
cmp
dec
dec
mov
lret
roll
out
mov
lret
inc
add
sti
subl
mov
sahf
cmp
popf
lock
mov
outsb
xchg
xor
adc
ss
sub
pop
std
imul
adcl
dec
ficoms
add
mov
sub
lods
lcall
lcall
subl
test
cwtl
sti
jp
jmp
xchg
jg
cwtl
test
mov
sub
xchg
sbb
inc
test
cmc
or
mov
cmp
xchg
xor
inc
js
testl
and
mov
inc
pusha
int3
lahf
arpl
xchg
out
mov
insl
je
sbb
jmp
fdivrl
cmpsl
es
stc
imul
int3
xor
stos
cs
lods
push
mov
push
cmp
lret
pop
pop
fildl
call
mov
mov
lods
imul
lret
jg
and
sub
ret
sub
and
adc
js
or
ret
sti
pop
xchg
rcrl
sbb
push
aam
push
pop
in
jl
push
sub
sub
das
inc
addr16
dec
mov
sbb
call
mov
sub
cmpsl
push
out
imull
pop
push
jo
pop
cmp
cli
leave
les
negb
fbstp
outsl
xor
jmp
mov
fstps
mov
add
jbe
lahf
xchg
push
pop
mov
lcall
rorb
imul
adc
lret
push
out
repz
int
cmp
mov
xorl
cld
pop
lods
jecxz
stos
test
fdivr
mov
fldt
sub
fwait
dec
cmp
mov
aam
sarl
pop
xor
or
ja
mov
push
nop
mov
fs
or
subb
call
cwtl
mov
or
aaa
repz
rcr
scas
jae
jecxz
les
push
push
adc
fisttps
test
pop
insb
bound
and
inc
nop
sbb
xchg
dec
shl
int
dec
mov
movsb
jns
adcb
int3
inc
iret
jno
or
pop
or
inc
dec
jecxz
leave
xor
rol
testl
fldt
mov
adc
mov
lods
fistps
loope
pusha
adc
jmp
aas
adc
ficoms
cltd
jae
adc
cmp
daa
jmp
dec
imul
add
inc
insl
mov
and
xchg
mov
lahf
add
jmp
jle
xor
cli
mov
fistps
sbb
aad
shrb
mov
aaa
sbb
push
icebp
push
pop
mov
jno
pop
push
ret
inc
hlt
insl
rclb
popf
ljmp
push
int3
daa
jnp
push
stc
lret
cli
xchg
aas
xchg
mov
lret
adc
outsl
add
scas
enter
xor
sbb
pop
scas
fwait
imul
or
mov
push
sub
aam
dec
cmp
sub
rorb
pop
idivb
ret
dec
js
sub
movb
xor
pusha
push
es
pop
ljmp
into
insl
jae
shlb
mov
leave
mov
mov
mov
cmp
int3
and
mov
jno
jmp
or
scas
adc
mov
mov
test
and
nop
shrl
inc
jns
mov
xor
mov
lret
aam
cld
into
in
pop
mov
and
push
mov
inc
mov
push
pusha
and
fadds
cmp
sti
adc
cmp
bound
shr
cwtl
jae
std
in
fsub
or
addb
das
dec
out
outsb
xchg
mov
mov
fwait
adc
push
in
arpl
add
mov
scas
xor
dec
test
jmp
lret
outsb
lea
pop
add
or
shl
xor
fs
inc
leave
rcr
xchg
pop
cmp
push
out
mov
orl
in
xorb
add
add
cmpsl
fsts
ffree
push
in
sbb
addl
pop
add
mov
imul
adc
shrl
jne
mov
mov
mov
subb
pusha
cs
sbb
jmp
mov
jae
imul
adc
jb
adc
or
aaa
pop
cmpsb
cltd
mov
cmp
adc
sbb
inc
inc
sbb
scas
cmp
lea
pop
fxch
rcll
dec
mov
dec
out
jne
daa
sbb
lea
or
or
mov
es
nop
sti
aam
jge
and
xchg
aad
pop
cli
in
mov
ss
inc
mov
fsubrs
loop
pop
push
mov
aas
lods
cltd
or
lcall
dec
stos
out
xchg
push
inc
mov
pop
mov
mov
and
xor
xor
pop
sbb
insb
mov
xor
sahf
xchg
aaa
repnz
add
sbb
call
sub
fcomip
jb
xchg
xchg
xor
mov
pop
lret
jg
xlat
icebp
push
lahf
out
add
lret
cwtl
xor
fsubrl
inc
mov
dec
cmp
adc
andb
outsb
mov
jnp
lret
sbb
insb
pushf
mov
adcl
mov
das
dec
scas
add
jmp
fistpll
daa
adc
add
in
ret
shlb
daa
popf
mov
sub
sub
jg
stos
add
aaa
pop
mov
mov
xlat
lret
sbb
je
in
xor
loope
fmull
aad
imul
dec
sub
sub
dec
push
xchg
and
mov
inc
fwait
pop
dec
push
lods
mov
lret
lds
xor
cmp
xor
lods
fcomps
stos
stos
aad
scas
lock
js
mov
pop
adc
jp
std
fcomip
std
push
sub
jno
push
cmp
mov
cmp
add
push
or
jmp
pushf
cli
insl
add
mov
ss
aas
cs
jle
push
cli
cmp
leave
jmp
bound
push
jmp
outsl
test
out
into
sbbb
mov
add
rolb
pop
into
or
in
rcr
sbb
pop
into
push
daa
add
jae
addr16
dec
and
and
sub
sbb
pop
insl
repz
mov
or
dec
cmc
inc
mov
cmp
push
add
notb
jmp
outsl
adcl
lea
inc
je
inc
mov
dec
ja
cmp
or
cmpb
js
dec
fcoml
mov
dec
lahf
daa
push
sahf
mov
adc
cmp
in
add
mov
les
dec
addb
sbb
neg
pop
imul
adc
dec
mov
pop
xor
mov
fisttpl
adc
dec
mov
repz
in
push
pop
sbbl
xor
jno
arpl
xor
xor
pop
cld
mov
loope
push
sarb
fisubs
add
aad
mul
arpl
out
cmpl
pop
popf
add
xor
sub
pop
add
ss
leave
adc
mov
hlt
nop
lret
mov
insb
or
ljmp
ret
into
fstl
pop
dec
xchg
cmc
sub
cmc
pop
hlt
jp
out
out
mov
cmp
mov
jne
jbe
stos
sti
and
sbb
dec
lcall
mull
cli
aad
sbb
pop
add
cmp
outsb
fldl
push
icebp
std
jmp
mov
scas
scas
in
js
pop
dec
pop
sarb
sahf
mov
xchg
cltd
test
ret
lahf
arpl
push
push
sub
pop
adc
mov
test
out
or
lret
fsubs
test
stos
stos
sahf
mov
dec
mov
aam
jb
mov
ja
lret
mov
push
cmp
rcll
fcmovnbe
lret
je
mov
mov
cwtl
push
ljmp
mov
in
push
lock
jbe
mov
es
add
add
mov
lret
cmp
xor
popa
jge
out
mov
ret
push
les
pop
pushf
dec
sbbl
push
cmp
pop
sbb
sbb
roll
dec
loop
sbb
push
and
and
cmp
inc
jecxz
rolb
inc
mov
cmpsb
xor
lods
sub
pop
jmp
adc
xor
add
sub
pusha
movsb
xchg
dec
test
cld
test
in
or
adc
xor
pop
movsb
testl
cmp
sub
dec
xor
push
xor
jmp
lahf
and
mov
mov
fmull
sub
je
mov
outsl
test
pop
lds
test
mov
push
mov
lea
dec
and
mov
in
pushf
mov
in
push
sbb
imul
fildl
out
movsb
daa
mov
fst
test
mov
adc
imul
push
jo
jge
mov
testb
adc
ss
or
mov
movsb
arpl
outsb
arpl
xor
xor
xor
jmp
sub
jle
push
mov
lods
xchg
sti
rolb
xchg
js
mov
and
push
inc
inc
mov
fildll
jae
into
decb
push
mov
pop
getsec
dec
iret
outsb
mov
xor
and
jp
ret
int3
sub
sarb
cwtl
movsl
and
cmp
into
arpl
xor
les
shlb
ljmp
cwtl
mov
push
jmp
and
inc
sbb
dec
add
fldenv
daa
xlat
fdivl
popl
push
mov
repz
gs
pop
test
loopne
popa
xchg
and
stc
or
xlat
cmp
popf
ret
pushf
enter
xchg
lret
div
jp
mov
out
xor
push
mov
stos
mov
xchg
in
push
icebp
pop
ss
mov
xor
mov
into
ds
negb
dec
data16
dec
adc
cltd
add
testb
aad
gs
mov
je
inc
fwait
jg
popf
push
mov
dec
cmp
xchg
insb
stos
xchg
xorl
stc
jae
enter
inc
sbb
hlt
adc
loope
inc
fsubrl
push
adc
push
xchg
rorl
test
std
sub
jae
and
lahf
jnp
test
repz
sahf
fs
inc
sbb
movsb
push
pop
lcall
loopne
push
rcl
movsl
ljmp
mov
mov
fldt
pop
mov
test
mov
stos
jle
bound
subb
mov
test
adc
add
ja
mov
mov
jge
fcmovne
mov
jmp
cmp
scas
enter
xchg
insb
mov
repz
mov
mov
rorl
adc
adc
pop
neg
int
lock
fcmovbe
hlt
ret
sub
sub
pop
and
push
and
insl
mov
or
sub
pushf
lock
mov
testl
cld
or
ss
cwtl
mov
jb
test
push
jecxz
pop
mov
sbb
xchg
lds
or
jge
arpl
andl
mov
lods
outsb
aas
adc
bound
pop
repz
adc
push
cltd
mov
push
divb
dec
aam
icebp
and
cmp
jmp
jnp
xor
int3
sub
aam
or
popa
cmpsb
jecxz
pop
add
testl
pushf
pop
leave
cld
xor
int
sarb
jmp
add
or
add
xchg
cwtl
mov
dec
insl
pusha
or
negl
iret
sbb
xchg
data16
xchg
cld
out
pop
outsl
sub
neg
xor
stos
cmp
rclb
aaa
push
aaa
lret
pop
adc
cmp
ficoms
stc
fistl
aaa
out
mov
cmp
fyl2xp1
cmp
xchg
repnz
sar
loope
pop
jecxz
out
cltd
aam
dec
cld
lods
fdivr
mov
lcall
sbb
mov
pop
arpl
jnp
mov
push
mov
stos
jno
test
cmp
ja
mov
insl
push
ja
sbb
cmp
lods
adc
mov
pusha
pop
pop
icebp
jno
sbb
inc
dec
jbe
xorl
in
rorb
rcrl
and
cli
sbb
mov
inc
or
xchg
daa
adcb
adc
sti
lods
or
inc
sbb
bound
test
jmp
xchg
cltd
icebp
adc
movsb
inc
mov
stc
sbb
or
inc
inc
shll
jg
fcomps
xchg
pop
mov
aaa
mov
or
xchg
hlt
and
pushl
sub
mov
mov
xor
xchg
push
lods
fisttpl
jno
dec
or
mov
adc
jo
xor
sub
jbe
je
arpl
inc
lock
fnstcw
jmp
inc
dec
jp
int
mov
out
in
stos
ljmp
andb
addr16
mov
data16
mov
inc
nop
sub
inc
cmp
mov
dec
cmp
and
or
pushf
push
add
sti
xchg
sub
cli
or
or
fwait
je
cltd
lds
cltd
shll
lret
cmp
stos
dec
and
jns
iret
push
out
ret
dec
xor
xor
mov
xor
mov
cmpsb
popa
xchg
out
lret
fildll
mov
cmc
lds
dec
call
or
lret
popf
jb
pop
inc
popf
adc
aas
lods
pop
fs
sub
lock
xchg
out
pusha
js
sbb
jnp
cmovg
mov
xchg
xor
outsb
arpl
stc
pop
or
adc
rcrw
mov
mov
addr16
xchg
stc
repnz
and
fldl
fadd
xchg
xor
mov
pop
jb
jo
js
imul
ss
cld
sub
int
fs
stos
orl
enter
cs
hlt
add
out
jns
lcall
imul
fimuls
jmp
push
or
cs
js
or
dec
ss
aas
test
cltd
cwtl
adc
sub
mov
sbbl
addr16
push
fisubrs
sub
lret
push
imul
mov
add
test
movsb
cmpsb
jmp
sbb
add
js
and
call
mov
adc
cmp
mov
addr16
clc
pop
insl
lahf
ret
xchg
ret
xor
xchg
popa
test
push
and
test
insb
sub
stos
add
ja
cmpsb
sub
xor
fwait
cmpsb
adc
adc
lret
out
movsb
repnz
cmpsb
lock
xchg
repnz
dec
jl
pop
adc
xchg
xchg
sub
clc
mov
mov
inc
rcl
or
ljmp
mov
jb
mov
mov
das
out
int3
lret
iret
mov
jecxz
push
pop
jmp
push
mov
lods
xorl
adc
xchg
lds
xchg
xchg
cmpb
inc
jbe
xor
roll
inc
fldt
or
jl
dec
test
stos
lea
movsb
xchg
jo
testl
dec
sbb
je
add
jno
repnz
xor
adc
arpl
jno
cmpl
inc
jl
jns
or
ret
push
and
dec
lods
in
sarl
mov
cwtl
popf
mov
xor
mov
hlt
pop
fsub
pop
push
rcr
imul
test
into
fmuls
xchg
sahf
sub
fstpt
mov
sbb
icebp
dec
pop
push
icebp
fdivp
mov
push
cmp
pop
sbb
rclb
loopne
mov
insb
aaa
mov
aaa
dec
mov
pushf
addr16
in
negl
out
pop
addb
std
mov
mov
repz
jbe
dec
cmp
dec
inc
sbb
ja
pop
xchg
out
movsb
adc
in
xlat
jmp
js
jg
repz
lods
std
mov
mov
js
xor
mov
aaa
lods
gs
test
xchg
or
mov
in
dec
push
and
and
jns
gs
mov
add
shlb
xchg
sbb
pushl
sub
sub
xorl
xchg
mov
iret
jp
inc
adc
xchg
aad
xor
mov
sub
call
fldenv
xchg
xor
mov
test
stos
push
pop
mov
jecxz
ss
mov
xchg
daa
lock
push
popa
push
mov
push
aaa
cmp
mov
daa
jmp
and
aaa
jmp
ljmp
xchg
mov
jo
cli
outsl
mov
or
hlt
pusha
in
mov
nop
hlt
insb
test
mov
mov
movsb
pop
je
add
in
cmpsb
cmpsb
adc
scas
push
xchg
cwtl
or
std
sahf
adc
xlat
push
xor
or
je
xor
cmp
and
pop
push
mov
dec
fisubrs
mov
in
out
push
cmp
xor
jmp
mov
xor
and
stos
rorb
fsubr
imul
mov
push
fstpt
into
test
add
lret
lret
inc
and
addb
cmpb
aad
hlt
dec
les
push
xor
in
lods
pop
push
push
arpl
mov
jae
pop
icebp
sub
inc
into
lea
test
or
push
mov
adc
fwait
divb
xchg
inc
add
lret
ja
xchg
lcall
int3
inc
cmp
sbb
out
or
mov
adc
out
nop
mov
sbb
or
dec
daa
pop
jmp
or
or
xchg
fwait
dec
push
xchg
fdivl
enter
jno
xor
xchg
sub
xchg
leave
sbb
scas
push
inc
frstor
inc
rcrl
xor
div
ljmp
test
outsl
test
ja
enter
pop
jbe
dec
xchg
aas
divps
sub
stc
inc
pushf
loope
orl
mov
clc
pop
loopne
insb
sarb
sti
adc
cmp
mov
psraw
xchg
fs
lea
dec
fisttps
adc
fs
movsl
out
push
pop
and
es
mov
ss
int3
sub
out
loopne
test
dec
dec
sub
nop
and
pop
inc
lcall
adc
into
pusha
je
loope
mov
jnp
bound
sub
daa
jae
loop
mov
stc
repz
jne
les
sbb
dec
mov
and
inc
fadd
rsm
xor
mov
adc
mov
jns
in
dec
data16
rolb
pop
and
inc
cmp
mov
movl
sbb
jb
pushf
hlt
adc
add
mov
sub
and
push
addr16
jb
ja
xchg
mov
and
lods
arpl
sbb
sub
add
jns
ds
enter
insb
fwait
arpl
out
inc
pop
push
xchg
pushf
pop
and
dec
sub
cmp
cltd
mov
xor
clc
iret
push
sbb
pop
mov
fnsave
adc
or
jb
int3
jp
and
xor
test
out
lods
js
cmp
int3
inc
pop
sarb
xchg
jecxz
stos
sbb
popa
stos
sub
sbb
jne
jg
push
cmp
mov
cs
enter
js
pushf
and
and
sbb
lret
jno
pop
into
ljmp
xchg
fcmovnu
mov
cmp
push
mov
push
fnstsw
movl
lret
movsl
jo
faddl
lds
cmp
leave
and
cmpsl
mov
fdivl
mov
imul
aaa
test
and
mov
lret
lcall
aam
xchg
imul
mov
add
adc
push
or
je
inc
sahf
xlat
enter
mov
mov
scas
ror
inc
rorl
dec
or
dec
sub
cwtl
scas
aas
inc
jecxz
sti
movsl
mov
sub
arpl
out
jae
dec
mov
test
sbb
push
adc
or
lcall
sub
xchg
cwtl
lret
aam
enter
in
sub
clc
sub
pop
scas
dec
inc
gs
cmp
addb
dec
cmp
sbb
pop
dec
sbb
in
jmp
jge
es
inc
xor
repnz
or
loop
mov
es
jmp
push
xchg
adc
push
popf
out
out
pop
aaa
xchg
mov
cld
into
enter
lds
jo
pop
cs
lock
fwait
imul
cmp
adc
inc
and
ret
lahf
cmc
xchg
orb
daa
mov
mov
popa
jge
push
sbb
jmp
aad
data16
test
pop
jae
jl
dec
out
jno
sub
jae
ljmp
fwait
xor
mov
dec
and
jp
sub
push
dec
pop
test
inc
mov
jecxz
das
testl
sbb
js
inc
mov
mov
mov
pop
and
fptan
inc
xor
sbb
je
mov
sahf
arpl
enter
ficoms
jae
fstl
test
rcll
mov
push
mov
mov
popa
jo
cmpsl
jecxz
adc
data16
lahf
insl
outsl
sbb
mov
scas
out
daa
enter
test
dec
xlat
in
sub
imul
mov
shrb
and
jmp
mov
sub
pop
sub
test
pusha
fistpl
jnp
lods
je
jo
push
jp
enter
push
add
or
xchg
stc
popa
dec
jbe
sbb
mov
mov
mov
push
in
cmp
mov
mov
arpl
ret
adc
xchg
clc
mov
lcall
inc
jecxz
mov
cmp
pop
lds
cltd
stc
scas
test
dec
je
add
xor
cmpsb
fbld
pop
inc
adc
push
bound
je
aaa
add
lret
add
imull
sbb
mov
jp
int3
shrl
push
sbb
add
adc
andb
aaa
mov
aaa
shll
mov
lcall
and
popf
ljmp
in
fiaddl
inc
daa
lds
push
mov
or
and
dec
xchg
add
in
mov
mov
push
sbb
test
jmp
test
cmp
aas
popf
stc
jno
insb
fwait
movsb
movsl
cmp
add
add
push
mov
inc
lock
pop
dec
mov
ficomps
jmp
nop
and
jp
imul
pop
jb
out
adc
mov
xchg
test
enter
mov
lods
sub
push
shlb
sbb
and
clc
xor
insl
pop
add
mov
cld
loop
gs
jae
dec
pop
mov
mov
xchg
mov
lahf
sbb
pop
dec
xchg
repnz
push
add
sub
pop
pop
xchg
xchg
push
lcall
test
sub
mov
add
jo
sub
and
mov
enter
cmp
xchg
dec
ss
inc
rorb
int
aam
outsb
loope
mov
cmp
fmuls
int3
arpl
mov
dec
mov
jg
les
xor
sub
ljmp
jne
jnp
dec
adc
in
dec
push
jg
dec
test
lahf
push
inc
scas
and
orb
stc
shrl
stc
bound
addr16
xchg
adc
pop
xor
outsb
jl
sarb
sub
and
aas
ret
jl
adc
bound
sub
lahf
and
ds
add
stc
bound
jmp
lock
mul
sub
pop
mov
insb
mov
std
jbe
outsb
pusha
fnstcw
cmp
arpl
jge
enter
jmp
int
shll
es
add
mov
mov
call
push
imul
or
int
aad
int
add
int
ljmp
repnz
push
push
dec
or
in
sbb
and
jle
pop
and
rcrl
adc
jge
frstor
cli
jae
sbb
mov
mov
add
stos
insl
rolb
fbstp
cmp
cmp
mov
cld
cmp
aam
movsb
cwtl
ret
and
shlb
cmp
mov
jno
inc
nop
dec
outsl
cld
in
hlt
jle
pop
frstor
and
xor
mov
aas
mov
cld
addr16
push
lahf
stc
xor
outsb
add
insb
pop
mov
jne
lcall
insb
andb
cmp
xor
sbb
jae
jne
mov
dec
xor
test
ss
fdivrs
sub
lret
repnz
add
push
cmc
aam
enter
fsubr
daa
rcrb
loopne
inc
addr16
adc
inc
out
sub
enter
xadd
push
pop
mov
loopne
mov
idivb
call
icebp
lcall
ret
add
inc
dec
pop
xchg
jecxz
jp
mov
jp
inc
cltd
mov
aas
jecxz
push
xchg
adc
addb
cmp
cld
mov
mov
int3
out
int
mov
sub
dec
add
int
cmp
fwait
movl
int3
pop
dec
popf
pop
adc
mov
or
inc
sbb
cli
jmp
out
lret
bound
out
sub
insb
test
mov
push
scas
faddl
movsl
fiadds
fidivl
pushf
cmc
pop
xchg
mov
dec
daa
and
aas
inc
pop
or
add
push
sbb
pop
out
jle
inc
fldcw
mov
enter
fiaddl
roll
push
or
sar
es
addr16
sub
jno
fdivs
cmpsl
and
lods
loopne
sbb
cld
jb
cltd
ja
outsl
js
aas
xor
sbb
push
mov
and
and
xor
or
movsl
sbb
add
and
div
test
inc
sahf
ja
iret
inc
mov
cmp
int
xchg
lods
cmpsb
out
cmp
dec
cmp
popa
pop
imul
dec
testl
lods
bound
loop
xor
push
mov
lds
pop
pop
xchg
out
pop
je
outsl
pop
cmpsl
push
testl
push
jg
daa
or
pop
push
int
cmp
fsubrl
inc
fisttpl
jb
mov
aas
pop
cmp
adcl
mov
lods
lods
imul
pushf
das
jb
inc
mov
cmp
sub
sbbb
and
add
cmp
add
mov
stos
repnz
loop
and
fs
pusha
fdivl
arpl
cmc
loope
ja
outsb
cmp
sbb
mov
test
mov
shrb
cmp
sub
cld
and
inc
jbe
pusha
adc
aad
mov
call
push
xor
inc
jle
jmp
lahf
cltd
clc
mov
repnz
mov
repnz
sarb
add
test
mov
ret
loop
dec
push
pop
push
sbb
bnd
ficomps
push
das
int
inc
jl
loopne
jns
pop
ljmp
jb
fsub
inc
pop
cmp
and
fisubrl
das
sbb
sub
jae
cmp
cmp
iret
mov
invd
aam
idivb
rcr
mov
inc
ljmp
adc
and
xlat
imul
lret
mov
sbb
mov
test
xor
inc
xor
jae
pop
xchg
cmp
sbbl
mov
jecxz
push
adc
movsb
fstpl
outsl
pop
or
lock
data16
mov
in
cmp
fstl
loopne
test
mov
ja
adc
xchg
pop
mov
insb
addr16
sahf
xor
enter
adc
sub
pop
pusha
xchg
mov
test
popa
int
out
push
xchg
fucomi
loope
pop
jmp
mov
or
nop
add
xchg
lret
xorl
jno
push
mov
mov
out
and
lea
out
orl
push
das
mov
fwait
add
or
inc
push
push
enter
sti
push
xor
xchg
pop
mov
mov
fwait
push
push
in
cli
jnp
adc
leave
addr16
xor
insb
lcall
fcmovb
push
aas
or
pop
ret
mov
pop
adcb
push
dec
dec
movsl
movsl
fiaddl
hlt
in
out
imul
es
dec
add
fstps
data16
mov
jns
xchg
lret
es
iret
clc
lret
cmc
sub
leave
inc
mov
mov
mov
pushf
sub
rolb
push
adc
scas
cmpsl
sti
rcrl
add
push
sbb
jge
jg
pusha
dec
mov
jge
mov
xchg
and
shll
add
xorl
clc
dec
outsl
push
and
dec
and
push
shl
outsl
fisubrl
int
ds
outsl
fldcw
pop
popf
adc
pop
jle
push
adc
loope
jp
mov
mov
lock
push
in
jle
add
das
add
mov
xchg
stos
and
push
gs
push
fistpll
adc
nop
jno
test
pop
popf
fstl
outsb
pop
daa
enter
jge
jmp
out
mov
rcll
jno
insb
xchg
popa
xchg
inc
push
andb
imul
add
pusha
push
pop
add
mov
mov
cmp
lcall
lahf
inc
jne
mov
imul
fincstp
adc
mov
push
adc
jne
push
lods
sub
repz
xor
inc
push
fistpl
sbb
sbb
jl
inc
imul
dec
xor
add
out
xchg
cmp
arpl
imul
adcl
loope
adc
pop
jae
push
sub
in
adc
test
mov
inc
loop
push
arpl
test
pop
mov
lret
inc
mov
push
inc
xchg
dec
in
add
cwtl
mov
adc
inc
sub
test
sub
sahf
addr16
sub
arpl
cli
nop
adc
addr16
adc
lods
gs
cmp
int
lcall
cli
les
mov
outsb
jp
mov
xor
mov
outsb
add
sahf
jne
sub
sahf
clc
inc
push
fcompp
or
push
mov
incb
int3
scas
dec
and
pop
or
cmp
cli
jg
jmp
xorl
scas
jp
push
movsb
pop
jb
cmpsl
pop
loop
adc
inc
test
or
or
pop
rolb
inc
test
sub
enterw
shlb
or
dec
or
sbb
and
mov
call
lahf
cmpsl
jecxz
xchg
insl
mov
addr16
int3
call
inc
pop
mov
mov
adc
fwait
xchg
mov
and
inc
jmp
add
and
mov
cmpsb
fidivs
mov
addr16
repnz
call
adc
dec
leave
popf
stos
addr16
jge
setge
aaa
call
stos
push
jbe
std
movsl
mov
sbb
hlt
sti
ljmp
aaa
hlt
icebp
mov
mov
imul
sub
sub
outsb
dec
scas
cld
adc
or
lret
adc
cmpsb
xchg
dec
leave
sub
or
lahf
popa
pop
nop
mov
ljmp
insb
int
mov
bound
dec
sti
testb
mov
jp
jle
or
stc
pcmpgtb
jno
dec
xchg
sbb
sbb
lahf
mov
jbe
push
or
cmp
fldenv
jecxz
in
and
adc
nop
xchg
iret
jbe
cmp
popa
inc
push
cmc
inc
aam
and
push
mov
mov
loope
sahf
and
sbb
mov
stos
sub
mov
mov
or
jno
add
or
aas
adc
out
test
jl
inc
bound
mov
xchg
arpl
mov
add
test
pop
pop
clc
enter
cmp
mov
out
jecxz
push
imul
sahf
roll
pop
jg
ljmp
andb
fwait
mov
or
sbb
cld
movsb
sbb
mov
jl
xor
or
sbb
popf
xchg
ds
pop
and
mov
cmc
stos
cmp
vmovhps
mov
push
mov
mov
in
rcll
mov
xchg
or
and
dec
sbb
sahf
add
add
mov
lret
mov
pop
loop
dec
loop
lods
fnsave
daa
les
mov
pop
out
in
mov
loop
leave
es
stc
push
push
jae
out
adc
ds
sbb
xor
inc
xor
mov
pop
inc
xchg
push
loope
adc
mov
sub
shr
cmpsl
and
dec
ret
mov
mov
mov
aas
sub
dec
dec
shl
mov
add
test
and
cs
jg
lds
inc
push
sub
mov
repz
sbb
sbb
cld
dec
cmp
js
sub
push
xor
aas
gs
fs
mov
mov
xor
stos
pop
insl
pushf
cmp
insl
sub
push
mov
add
xchg
jg
xor
jle
mov
add
mov
aaa
xchg
in
cwtl
sbb
shrl
repz
into
addl
or
xchg
cli
jp
pop
mov
clc
push
es
scas
and
int3
push
and
ja
out
rorb
stos
pop
decl
sbb
cwtl
ja
lea
pop
mov
lock
out
mov
cmp
stos
bound
and
cld
cmpsl
sahf
inc
loopne
mov
and
cmp
fsubs
sbb
lea
dec
lds
dec
outsl
push
mov
xchg
test
and
cmpsl
mov
sub
dec
icebp
add
mov
jl
jp
xchg
sub
ljmp
fsts
sub
insl
and
sbb
aam
in
ss
cmc
out
jns
cmp
sub
push
cmp
dec
ret
xlat
ret
test
ds
cmp
mov
push
mov
stc
test
or
mov
and
xchg
sbb
push
sub
add
int3
or
sahf
push
ja
sti
or
sar
in
or
jnp
fcomp
stc
xor
and
aas
adc
rcll
add
push
xor
mov
push
mov
loop
pusha
nop
dec
fcomp
stos
andb
mov
mov
repz
filds
clc
xor
js
xor
fs
inc
add
jge
jnp
lcall
lea
das
adc
xor
push
inc
int
mov
xchg
insl
sub
sub
cmc
bound
push
xchg
outsl
call
jbe
xor
jg
mov
loope
jle
adc
dec
jmp
adc
stc
mov
daa
mov
rorl
jns
sub
push
sbb
add
fwait
mov
sti
pop
ret
lcall
add
sar
rol
je
stos
cmp
cmova
je
and
cmp
add
mov
xchg
lods
addr16
mov
rcl
sbb
mov
push
clc
xchg
or
or
xlat
xlat
xchg
pushf
sar
jb
jle
popf
aaa
in
push
and
adc
adc
nop
pop
sbb
cmpsb
js
sub
add
fisubs
out
and
in
dec
lahf
mov
je
jle
push
adc
in
push
xchg
cmp
and
and
gs
ja
dec
movsl
xor
aad
mov
cmpsl
mov
sbb
jae
pop
inc
popf
mov
out
shll
negl
inc
jnp
sbb
xchg
mov
mov
xor
xchg
mov
roll
testl
rcrb
push
dec
mov
outsb
in
lds
jbe
int3
fwait
rclb
xchg
cmp
call
ss
pop
cmp
inc
ljmp
pop
loopne
jge
cmp
sub
mov
mov
imul
es
cwtl
cmpl
subl
mov
lock
cmpb
int3
mov
sbbb
inc
dec
and
shll
in
push
sub
cmp
daa
jg
adc
mov
ret
loope
or
stos
xchg
cmpsb
mov
mov
mov
fmulp
dec
push
fcomp
or
mov
xchg
sahf
add
or
push
sti
enter
ljmp
sbb
out
add
jmp
cld
in
idivl
and
popa
in
test
inc
out
out
hlt
leave
mov
jne
cld
or
iret
xlat
lahf
ret
sub
sarb
inc
imul
mov
adc
mov
jb
ljmp
fsubrl
fmuls
addb
and
loop
jnp
leave
subb
jg
inc
xchg
cmp
lahf
mov
insl
mov
lds
inc
jnp
adc
mov
lcall
mov
ja
iret
dec
cmp
sub
xchg
or
mov
sti
add
adc
loopne
sbb
gs
inc
push
dec
jae
jmp
xchg
push
jp
adc
arpl
out
sbb
out
cwtl
out
add
data16
inc
sub
mov
aas
or
int3
popf
fstpt
clc
rorl
roll
xchg
pop
pop
scas
aad
adc
lcall
sarl
mov
pop
shl
outsb
imul
andb
xor
iret
jne
sbb
fstps
mov
sbb
mov
test
mov
movsb
adc
inc
inc
repz
push
addr16
shlb
sbb
push
inc
popa
add
lret
shlb
js
cmp
das
push
inc
jmp
inc
roll
xchg
js
push
xchg
arpl
xchg
jge
bound
push
jl
push
and
adc
pop
dec
mov
sarb
sahf
paddb
pop
xchg
xchg
ss
lahf
xor
lods
leave
pop
mov
and
jmp
ja
push
push
cmpsb
ud2
jp
push
in
push
cltd
adcb
std
js
in
mov
push
cmp
pop
mov
cli
push
in
cwtl
cmp
lret
inc
adc
xchg
xchg
and
test
xchg
add
stos
adc
mov
inc
pop
mov
mov
sub
jl
and
enter
pusha
icebp
add
jle
push
xor
insb
dec
imul
and
out
in
mov
into
or
leave
or
or
dec
sbb
mov
ret
test
leave
in
add
adc
adc
jne
popa
pop
fiaddl
cmp
int3
rolb
aam
add
ss
enter
jb
daa
sbb
lods
inc
gs
cli
int3
js
aaa
adc
movsb
das
cwtl
xchg
adc
inc
push
cmpsl
mov
inc
sub
ror
jae
and
hlt
addb
xchg
imul
mov
xchg
pop
pop
in
into
pop
pusha
stc
and
jmp
or
mov
lds
cmc
lahf
dec
clc
imull
frstor
cld
mov
and
daa
movsl
sbb
push
inc
inc
sbb
fistl
in
lahf
dec
jl
adc
movmskps
pop
fsubrl
gs
jae
xchg
pushf
or
cmp
xlat
fmulp
sbb
in
lret
xchg
cmp
push
inc
mov
mov
xor
pop
adc
outsl
fsts
movsl
jnp
xor
push
cwtl
fisttpl
roll
jmp
inc
int3
push
sbb
jp
mov
bound
mov
in
js
mov
iret
cmc
xchg
jo
xchg
loop
push
inc
push
jg
sarl
pop
aam
pop
jl
je
mov
ret
and
loope
scas
imul
out
fs
data16
mov
shll
data16
dec
mov
mov
repnz
xorl
xchg
adc
fwait
mov
cmpsb
mov
movsl
xlat
imul
push
jg
insl
add
iret
push
inc
repnz
ja
cmpsl
call
test
sahf
mov
lock
repnz
leave
call
dec
lahf
or
jmp
xor
inc
fildll
pushw
mov
xor
and
aam
mov
xor
xor
dec
ret
push
jecxz
lcall
dec
adc
pop
mov
jecxz
out
rclb
mov
mov
shlb
scas
fsts
test
sub
mov
jmp
sti
mov
or
lods
rclb
fimuls
mov
cmc
adc
ret
lods
and
addr16
mov
pop
jnp
mov
pop
lret
cltd
cld
dec
xor
lds
sub
sbb
inc
sbb
mov
call
mov
mov
sbb
add
leave
xor
les
data16
jmp
xchg
scas
push
ss
mov
sub
xchg
rcr
mov
and
lods
sahf
xchg
arpl
rorl
lea
jno
shll
pop
dec
sbb
mov
lret
fcmovu
inc
loopne
xchg
int
mov
cltd
je
jo
or
mov
mov
cmp
scas
aad
gs
js
xchg
xchg
xor
xlat
xor
push
push
mov
sub
and
out
mov
adc
lret
das
pop
out
mov
imul
adc
and
pop
xchg
mov
pop
push
mov
sbb
jb,pn
mov
push
sbb
nop
and
fwait
push
inc
sbb
inc
add
pop
sbb
mov
int
mov
xor
xor
xor
mov
adc
push
scas
or
data16
adc
lret
or
mov
xchg
divl
cmp
stc
fildl
idivl
addr16
data16
and
loope
mov
lcall
mov
pop
jb
push
lret
xor
iret
stos
push
inc
cmp
and
inc
inc
mov
das
shll
enter
icebp
clc
mov
js
mov
pop
movsl
jp
xor
fdivrl
into
js
in
dec
test
push
mov
aaa
push
lcall
lods
sbb
or
mov
mov
outsl
nop
and
fisttpll
ljmp
mov
pop
rol
aaa
aad
inc
arpl
inc
mov
xchg
pop
and
xchg
das
xor
pop
pop
mov
cwtl
add
sarb
push
sbb
push
sarl
xchg
outsl
data16
fiaddl
xchg
pop
aad
adc
sbb
mov
bound
sbb
in
shrl
mov
cmp
movb
movsb
sahf
cmp
sub
int
stc
xchg
lcall
sbb
mov
ret
and
iret
pop
dec
call
xor
mov
mov
mov
pop
pusha
cmpsl
mov
pop
dec
lds
negb
lahf
jg
lea
cld
or
lods
pop
sbb
cmp
dec
and
fadds
in
out
mov
cmp
push
movsb
sbb
mov
pushf
inc
in
push
sub
or
stc
push
out
xorb
or
adc
xchg
push
push
loope
sbb
pop
in
repnz
out
adcb
dec
jge
xor
enter
into
gs
push
popa
cmp
adc
dec
jbe
inc
mov
lock
fisubs
pop
arpl
aas
or
popa
mov
nop
jmp
in
adc
clc
ja
push
addr16
push
in
cmp
dec
jno
popf
pusha
jns
or
shll
lds
xlat
adc
push
add
imul
push
jnp
lds
sbb
mov
mov
outsb
dec
ficoml
jns
mov
mov
inc
in
push
mov
iret
jns
sbb
scas
or
cmc
adc
cmp
mov
or
inc
fisttpl
mov
fisttps
subb
mov
xor
imul
push
lods
std
insb
repnz
add
ds
outsb
inc
xchg
sub
sbb
pop
mov
sbb
out
into
mov
orps
sar
sti
call
jmp
and
push
inc
rcll
movsb
jns
push
das
xchg
jp
cs
psllw
jns
fisubrl
in
sub
mov
jo
mov
fstpt
fildll
xchg
rorl
stc
dec
les
adc
scas
or
mov
call
repnz
inc
jge
stos
rcll
ret
rcrl
es
test
push
jecxz
mov
xor
movsb
adc
jbe
es
gs
movsb
xor
mov
jg
outsl
push
lret
in
test
xchg
pop
mov
xor
push
stos
push
pop
sub
adcl
jns
in
les
jg
cmp
mov
cmp
inc
and
lea
stos
xchg
je
xchg
inc
insl
and
adc
std
fdivr
test
push
popa
fdivrl
xor
pop
sbb
aad
mov
xor
mov
sub
sub
xor
xchg
xchg
jl
repz
jnp
stc
pop
jge
test
fs
fists
pop
rcll
lret
ret
bound
xor
mov
mov
cwtl
cmp
ret
push
or
shlb
orl
out
pop
in
xchg
jbe
mov
roll
sub
or
push
adc
xlat
xor
test
icebp
stc
sbb
in
lods
inc
sti
call
fmull
in
sub
cmp
out
mov
lods
add
out
inc
sbb
mov
fs
cmp
stc
push
insb
pop
lret
ret
rclb
mov
loopne
in
or
xchg
mov
pop
into
outsl
js
dec
xchg
ds
cmp
push
dec
add
cs
sub
je
dec
pop
bound
adc
movl
xor
and
mov
or
inc
pop
mov
lcall
sub
arpl
jmp
push
mov
dec
stos
jl
push
cld
pop
mov
das
js
and
push
nop
in
lock
mov
cltd
cmp
scas
and
insb
sub
insb
pop
cltd
jle
xchg
cwtl
stos
sub
sub
push
xchg
das
pop
push
icebp
nop
mov
mov
aam
push
loopne
stos
xor
jmp
dec
pop
fs
add
jecxz
inc
or
ljmp
inc
add
arpl
xchg
xor
shlb
sub
fsub
popa
mov
fsubl
xor
pop
bnd
aad
gs
pop
stc
in
fstl
addl
mov
mov
fs
inc
jnp
clc
fisubrl
dec
sub
add
sub
je
lret
adc
iret
movsb
xor
or
lea
lods
out
sub
cmp
popa
jle
adc
fwait
jmp
sbb
cs
cli
cmpsl
and
into
or
jmp
mov
rcpps
xchg
push
jecxz
push
jns
mov
or
cli
jecxz
jmp
jne
mov
push
das
push
jle
and
add
mov
in
sub
mov
and
dec
mov
gs
fildll
inc
xchg
push
or
push
mov
cmp
clc
jbe
ss
outsl
push
jb
fidivrs
stos
jl
lret
add
jmp
and
mov
and
mov
sub
sub
cwtl
mov
andb
jne
ret
pop
dec
jno
or
push
mov
lret
and
push
jle
fwait
test
lock
mov
pop
mov
ljmp
mov
mov
lahf
xchg
jg
push
out
mov
fadds
icebp
mov
sahf
aas
out
imul
shrl
fwait
aad
pusha
stc
or
xor
cmc
arpl
mov
jb
inc
xchg
cmp
adc
mov
push
aaa
mov
push
inc
imul
add
add
add
pavgb
les
jno
inc
test
push
lock
stos
stos
lds
lods
insl
lret
insb
and
stos
inc
sbb
hlt
call
jns
adc
scas
iret
cmp
fsubs
sub
mov
ja
movsb
lock
inc
xor
lds
xchg
inc
xorl
jp
adcb
outsl
adc
and
xchg
mov
mov
xchg
addr16
xchg
pop
xchg
mov
jl
add
mov
lods
fwait
aas
push
sbb
imul
repz
into
mov
out
mov
mov
push
pop
mov
adc
popf
cltd
pop
cmp
sbb
nop
adc
loopne
add
aam
cmp
hlt
cmp
lods
roll
adc
subb
dec
notb
xlat
push
rcrl
je
scas
stos
call
xchg
lahf
push
cli
mov
mov
lret
dec
mov
push
jge
out
mov
hlt
imul
out
push
sbb
or
adc
outsb
lret
jmp
sbb
iret
dec
add
cmp
add
jo
arpl
iret
pop
jo
or
sahf
lret
sarb
fdivrs
push
cli
enter
inc
sub
test
mov
cmpsb
sub
ja
jge
xchg
movsb
inc
fs
mov
out
pushl
lahf
mov
cmp
push
fcmove
add
sarb
lock
xchg
sbb
push
faddp
lds
ficompl
mov
std
inc
repz
adc
adc
es
lea
xor
cmp
stc
mov
sub
jo
mov
mov
mov
add
or
adc
adc
loop
inc
ja
add
and
mov
jg
adc
lods
inc
dec
out
shll
ljmp
fidivl
in
sbb
in
dec
jp
dec
mov
xchg
shlb
add
sbb
bound
addr16
or
es
pop
popf
sarl
and
ret
mov
push
aas
cmp
mov
xorb
cltd
std
mov
xchg
adc
adc
sarb
shrb
bnd
mov
lods
add
fs
lds
cmpsl
clc
outsl
in
sbb
imul
add
outsl
clc
pop
dec
enter
xlat
and
pushf
xor
jnp
sub
pop
mov
jnp
sub
xchg
ja
and
jg
dec
xchg
cs
pushf
lcall
and
repnz
cmp
fcmovu
push
xchg
mov
lret
push
incb
jne
push
jns
ds
clc
or
data16
cmp
out
clc
xchg
aad
or
lods
inc
cli
outsl
js
cmp
cli
adc
sarl
shlb
mov
push
call
aaa
dec
fcomps
fnsave
icebp
mov
sub
mov
pushf
cmpsl
cltd
es
mov
mov
jmp
pop
xor
adc
add
xchg
lahf
xor
inc
mov
test
shll
mov
ss
inc
push
pop
stos
pop
popf
push
int3
cmp
fimull
sub
adc
movsl
sub
push
sbb
mov
mov
mov
xchg
inc
clc
lcall
scas
mov
ret
js
xlat
scas
lret
jmp
xor
add
imull
mov
adc
dec
popf
and
push
inc
mov
push
cmc
jno
add
add
mov
dec
sti
jmp
sub
mov
aam
xchg
and
jge
test
xchg
je
movsb
or
insb
jne
mov
jp
dec
xchg
lea
xchg
xor
test
dec
jne
and
data16
shl
jne
xor
jge
xchg
add
jae
mov
xchg
pop
int3
xchg
mov
add
push
int
mov
stc
mov
ljmp
jne
or
rcl
sbb
data16
push
sarl
out
leave
fdivs
into
inc
sbb
movl
repnz
and
mov
mov
mov
popa
in
pop
ljmp
and
inc
pop
add
dec
add
push
xchg
mov
pop
lds
loope
fs
addb
pop
cmp
inc
ret
inc
adc
add
pop
enter
iret
out
fidivs
popa
add
icebp
mov
dec
or
stos
sub
imul
xchg
lea
outsl
repnz
rcrb
or
in
sbbl
sahf
lret
jp
dec
xchg
test
sub
mov
repnz
je
ret
xorl
pop
dec
mov
xchg
stc
mov
loope
loop
cmp
xchg
cmp
dec
jo
sub
mov
insb
outsl
int3
mov
mov
fs
mov
les
adc
fiaddl
jnp
cmpl
mov
pop
pop
mov
daa
ja
insl
leave
push
sub
out
jno
cwtl
pop
rorl
lds
lcall
imul
lock
mov
fldenv
push
imul
push
insb
jae,pt
pop
inc
mov
mov
das
cltd
and
xchg
pop
in
aaa
movsb
xor
ljmp
inc
js
je
xchg
xor
adc
mov
pop
lcall
sub
jo
imul
frndint
jl
sub
fsubrs
aas
icebp
adc
iret
fs
iret
cmp
leave
shl
sub
lahf
jbe
xor
sub
jns
push
adc
xchg
mov
and
mov
sarb
xchg
mov
mov
and
leave
std
sub
or
mov
jg
clc
sbb
push
inc
adc
clc
cmp
xor
insl
jmp
adc
outsl
cmp
push
fcoms
in
inc
pop
aad
outsb
popa
mov
mov
movsl
outsb
add
inc
inc
or
inc
push
and
mov
sub
push
push
es
xchg
push
les
and
outsb
pop
jnp
push
sub
loopne
add
in
lahf
adc
movb
lods
enter
ljmp
test
xchg
add
and
mov
mov
mov
fisttpll
cld
dec
dec
outsb
push
inc
bound
enter
aaa
cmc
mov
push
repnz
and
stc
lret
lods
sahf
xor
movsb
ret
lock
sahf
cmpsl
mov
adc
popa
ret
popf
mov
clc
sti
cmc
in
js
pop
cmp
int3
daa
scas
out
hlt
jmp
icebp
rorb
ud1
fcmovnbe
enter
in
cld
subb
fdiv
cmp
pushl
push
cmpsb
lret
dec
xchg
ficoml
sub
testb
out
adc
out
jmp
fsubrl
loop
add
cmp
enter
sahf
inc
nop
xchg
loopne
inc
sub
mov
inc
inc
jl
and
es
or
mov
xchg
repz
lret
out
fs
in
or
mov
es
xchg
pop
gs
call
ret
je
ds
jne
ljmp
mov
sub
push
in
mov
filds
xchg
or
clc
hlt
lock
pop
cs
ja
or
or
dec
push
mov
and
jae
scas
pop
and
hlt
adc
mov
neg
repnz
testl
inc
roll
inc
jae
mov
es
push
mov
addb
cmpsb
loope
jge
jbe
div
pop
cmc
popf
test
adc
inc
pop
mov
daa
pop
lds
sarl
nop
add
js
mov
adc
xchg
lea
pop
lret
add
dec
push
test
push
aas
jg
into
int
sub
aam
jbe
sbb
pop
pop
or
mov
xchg
scas
cs
stos
jmp
inc
popf
and
mov
and
test
data16
lea
mov
pop
es
cmpsb
imul
test
mov
testb
sbb
aad
cwtl
mov
adc
xchg
pop
roll
cmp
lods
lcall
mov
iret
add
push
int3
sarl
sbb
aad
lea
call
in
and
push
xchg
mov
dec
lret
ljmp
clc
arpl
cmp
mov
sbb
mov
dec
inc
xor
repnz
popf
mov
fstl
add
imul
out
enterw
cld
fstl
jg
mov
mov
mov
cmpsl
jg
jbe
dec
mov
cmp
scas
push
je
ret
sbb
clc
dec
stc
jo
push
test
rorl
fiaddl
mov
mov
adc
lret
shll
js
jl
and
dec
add
in
ror
bound
lret
adc
inc
nop
rcr
pop
cmpsl
imul
aad
les
repnz
mov
in
sbb
mov
aam
cmpsb
jbe
xchg
and
push
out
xor
ret
mov
mov
adcl
insl
data16
pop
rcll
sbb
aaa
mov
mov
std
jmp
in
addr16
dec
test
xchg
mov
rorl
popa
addr16
into
fstpl
push
sbbb
push
rol
addr16
ljmp
xor
xor
faddl
test
and
out
push
xchg
scas
fucomip
pop
outsb
dec
aam
in
movsl
xor
cmp
jp
mov
loop
dec
ljmp
or
sub
inc
mov
pop
and
push
ffree
sbb
mov
repnz
mov
push
out
pop
jl
gs
sbb
std
mov
incb
xor
aad
daa
jb
sahf
je
popl
das
pop
loopne
fisttps
pop
lahf
pop
daa
sahf
data16
aas
xchg
test
fcoml
jg
xchg
rcrl
inc
jo
stos
xchg
sarl
ret
push
add
xchg
rclb
notb
arpl
push
gs
inc
loope
je
jg
jg
leave
jne
test
rorb
jno
data16
icebp
sbb
mov
pop
sub
push
jno
cwtl
jle
push
mov
xchg
mov
pop
jne
sub
mov
repnz
incb
stos
cmpsb
cmp
pop
mov
adc
mov
hlt
das
or
ja
jne
jmp
sti
pop
xlat
mov
inc
not
jg
call
fdivrs
cwtl
sub
and
add
jnp
ljmp
mov
xchg
dec
bound
sbb
jge
imul
mov
out
dec
and
add
repnz
dec
mov
imul
dec
int3
in
and
push
or
push
imulb
jl
pop
adc
cmp
test
xchg
dec
cmp
aad
rol
dec
movb
cmp
push
popa
mov
and
sbb
loope
fs
dec
fwait
mov
popw
test
sub
sub
fstpl
lret
stos
outsb
pop
daa
subl
lock
out
cmp
mov
push
jns
rcr
or
pop
cmpsl
sahf
insb
sub
sub
push
sbb
fcoms
clc
fiadds
fists
leave
pop
xor
pop
sbb
cmp
rcrl
insl
xchg
sahf
xchg
fstl
fistpl
cmpsb
hlt
arpl
push
fwait
jge
add
in
adc
rorl
mov
xchg
dec
jno
xchg
or
dec
lahf
fisttpl
inc
dec
or
dec
test
loop
dec
arpl
std
and
fldcw
aaa
xchg
outsl
ljmp
leave
cmp
insl
mov
addr16
inc
das
rolb
or
add
mov
or
add
mov
fnsave
rorl
loopne
push
jb
cwtl
dec
clc
imul
jne
fstpt
ret
lock
inc
push
stc
pop
lods
cld
inc
sub
cmp
and
cmp
adc
mov
pop
mov
sbb
xorl
mov
lgs
addr16
fisttps
mov
test
or
cmpsb
mov
xchg
int
or
xchg
xlat
mov
sbb
movsb
cli
sub
scas
lcall
jmp
cmp
cmc
mov
add
dec
pop
bswap
testl
adcl
sti
mov
sbb
in
jbe
push
mov
mov
cli
movsb
sbb
repnz
cs
jp
fistpl
mov
add
fwait
or
lds
clc
hlt
in
movsb
and
add
sbb
dec
pop
or
and
cli
push
fnstenv
cmc
mov
push
in
movsb
or
push
hlt
cmp
loop
fbld
fildl
jae
mov
cli
out
cmp
call
add
xchg
xlat
nop
jae
mov
jp
pop
inc
mov
sbb
addl
out
pusha
cli
nop
mov
lea
mov
faddl
pop
mov
mov
ds
pop
repz
sub
cmpsb
adc
add
sbb
inc
push
pop
push
mov
fwait
test
ss
data16
xor
adc
lret
adc
push
jno
fbstp
push
xchg
lret
adc
jge
shrl
push
sbb
pop
jne
enter
lahf
mov
or
dec
mov
movsb
cmp
sbb
push
cmc
bound
inc
inc
mov
in
mov
and
xchg
cmp
out
sti
gs
mov
mov
shll
les
adc
xor
ljmp
mov
sub
std
add
jno
repz
and
push
and
hlt
sub
arpl
pop
xor
mov
inc
ljmp
jmp
loop
fwait
push
and
scas
stc
ja
aad
subb
push
mov
sub
add
inc
fstp
inc
pop
into
push
imul
in
pop
lds
sub
or
push
cwtl
mov
fimuls
pushf
loopne
into
jo
in
lret
jp
int
pop
jbe
loop
dec
sbb
mov
das
data16
fistpl
dec
sub
fxch
mov
cmp
sbb
xchg
mov
mov
into
stos
mov
inc
jne
mov
test
popa
pop
mull
mov
mov
pop
stos
pop
popa
inc
icebp
inc
lcall
mov
add
mov
push
add
inc
inc
jmp
bnd
pushf
sbb
push
mov
sub
push
lods
aaa
sub
cmp
hlt
cld
push
loope
mov
repz
cmp
shll
mov
jnp
fisttps
inc
cmp
mov
arpl
call
out
mov
out
sub
lret
pop
sbb
test
dec
shrl
pop
test
sub
adc
bound
cwtl
cld
push
xor
mov
ja
icebp
ds
outsl
sbb
mov
xchg
cmc
repnz
out
dec
adc
aas
leave
clc
js
idivb
rclb
imul
push
sub
mov
outsl
imul
jno
jl
aaa
fistpll
cmpsb
call
clc
sub
add
push
sbb
lds
sahf
fcmovb
data16
xchg
xchg
dec
test
cmp
jnp
cmpsl
and
loope
inc
pop
bound
jecxz
in
lods
jae
nop
ja
mov
adc
out
sub
fstp
enter
std
jnp
dec
fidivrl
imul
std
xchg
xchg
and
stc
fistpll
aas
push
push
mov
push
rcrl
mov
es
or
aad
jne
pop
test
test
pop
test
clc
sub
dec
fldenv
cmpb
adc
inc
pop
jb
inc
push
insl
mov
ret
in
repz
sbb
lcall
ret
push
dec
das
pop
sub
pop
outsb
or
rol
rcrl
jno
dec
pushf
stos
repz
stos
mov
or
pop
popf
daa
es
lock
in
dec
jbe
or
jg
push
pop
out
insb
inc
ret
xor
mov
sbb
scas
lds
dec
lds
inc
push
in
jge
dec
jno
add
sbb
mov
sbb
test
and
pop
mov
jns
and
imul
push
add
mov
jno
mov
mov
or
jmp
jecxz
test
nop
std
mov
xor
or
popf
punpckhdq
lea
stos
pop
jae
xchg
push
stos
cmp
mov
ret
and
movsb
int
xchg
push
pop
pop
jge
or
js
xorl
hlt
into
mov
cli
dec
movsb
mov
int
xchg
mov
fdivrs
mov
sahf
sbb
js
loopne
jmp
in
or
test
imul
cs
popf
sbb
and
jmp
add
add
push
clc
pop
int3
inc
ret
pop
roll
mov
xchg
mov
pop
ljmp
int3
push
pop
jne
cmp
xchg
pop
sbb
ret
xlat
ret
mov
xor
adc
sbb
push
xor
push
adcl
xchg
jl
xchg
add
mov
xchg
pusha
ljmp
xor
cld
addb
rcll
jmp
ret
test
xor
test
lret
pop
sbb
mov
pextrw
xchg
pop
gs
mov
lods
adc
test
pop
mov
sbb
pop
pop
je
addr16
mov
mov
stc
push
jnp
mov
sahf
outsl
stos
je
aas
fsubr
sub
rolb
mov
cltd
sbb
repz
dec
and
addr16
outsl
roll
int
or
out
lock
mov
jbe
mov
xchg
lods
xchg
loope
mov
lea
xlat
outsl
mov
push
pop
push
mov
mov
mov
or
repz
dec
sbb
xchg
jecxz
and
rol
push
mov
rolb
cmpsl
in
mov
cltd
mov
push
dec
gs
sbb
jmp
jp
cltd
iret
test
in
es
xlat
add
mov
fsubrs
push
sub
dec
sarb
xor
lds
cmp
mov
fidivs
jge
mulb
das
jge
je
cmpsl
or
mov
leave
push
lods
mulb
shrb
inc
mov
xlat
xchg
out
jecxz
lds
cltd
pop
add
ret
ret
repz
adc
adc
mov
sbb
or
mov
jl
xchg
scas
mov
and
rcr
pop
mov
push
jmp
pop
and
pop
mov
and
mov
orb
shll
pop
loopne
push
ds
lea
repz
cmp
enter
xor
xor
mov
bound
add
ljmp
jle
inc
sbb
jecxz
cmp
fistpl
push
pop
mov
xor
push
jge
mov
arpl
push
fcoms
daa
pop
push
adc
lret
insb
xchg
popa
cmc
inc
fistpl
mov
pop
mov
and
dec
mov
and
jg
pop
lods
cwtl
imul
lds
fbstp
cmp
push
adc
sahf
lods
aaa
stc
sahf
jne
xlat
sub
inc
inc
mov
out
out
or
outsl
icebp
call
sub
and
lret
add
decb
push
fildll
addr16
pop
xor
sahf
lea
lock
and
insl
enter
mov
jno
mov
sbb
jo
inc
scas
mov
push
cmp
lock
pop
arpl
or
les
sti
jne
outsl
inc
lcall
ss
lret
pop
popf
mov
fs
cmp
test
stos
inc
inc
jnp
xchg
xchg
cmc
inc
popf
jno
or
scas
lret
and
adc
pushf
test
add
inc
scas
daa
mov
sbb
inc
ss
das
rcrb
sbb
mov
cmp
aaa
mov
lea
les
add
dec
mov
mov
xchg
xchg
sahf
sbb
scas
xor
cmp
jb
lds
pop
mov
out
roll
cld
jae
out
movsb
sub
pop
les
adc
ret
mov
dec
pop
in
cmp
je
xor
pop
inc
mov
les
mov
add
mov
push
mov
pop
dec
mov
fcomip
dec
test
cs
shll
xchg
ficomps
pop
dec
sbb
pop
inc
jecxz
sti
adc
pop
xor
mov
xor
in
adc
lods
stos
or
idivb
mov
add
jbe
sub
sbb
jecxz
pop
mov
mov
push
iret
lock
movsl
repz
sbb
mov
sub
jecxz
inc
lcall
idivb
xchg
inc
add
inc
push
popa
mov
or
loopne
in
ljmp
in
cmp
push
mov
xor
adc
push
jno
mov
add
add
sbb
in
lret
stc
fcompl
cld
mov
mov
mov
sar
push
mov
fistpll
inc
ret
sbb
jae
and
or
xor
sti
lahf
pusha
ss
faddl
cmp
pop
rol
sub
add
pop
push
cld
idiv
dec
xchg
mov
mov
fisubs
jo
cmp
nop
xchg
push
orl
std
out
cs
je
les
inc
pop
mov
mov
lods
mov
aam
push
aam
dec
insl
add
cmp
inc
in
mov
loop
push
mov
pop
sbb
test
ljmp
mov
or
lahf
es
sysenter
and
push
pop
mov
sub
clc
jge
aaa
cmc
ret
and
fwait
mov
std
shl
andl
mov
test
icebp
mov
mov
test
push
mov
pop
fdivl
pop
aad
stos
rcrb
out
je,pt
mov
aas
dec
add
mov
sbb
adc
push
fisubrl
repz
push
mov
leave
popa
jns
mov
and
mov
cwtl
in
imul
andl
xchg
sbb
or
xchg
jae
jb
inc
or
jl
pusha
icebp
add
aas
sbb
inc
push
sub
ja
jo
pop
sahf
push
outsl
push
pop
lret
mov
xor
mov
and
xchg
aam
xor
cld
sub
out
xchg
lcall
mov
loope
or
movsl
cmpsl
xchg
fdivrl
fwait
adc
xor
xlat
mov
sbb
xchg
push
mov
push
pop
jae
fsubr
pushl
xchg
mov
pop
popf
push
pop
lret
push
xor
arpl
inc
jns
addr16
xchg
jg
push
in
arpl
dec
sti
pop
jp
shlb
mov
test
fisubs
imul
and
sbb
push
stos
xor
jns
icebp
xor
xor
cmp
mov
jp
lods
daa
cmp
pop
jle
outsl
push
xchg
lock
test
pop
xor
scas
movsl
adc
test
and
push
mov
test
mov
cmc
jae
cmp
pushf
cmp
fwait
or
adc
outsl
jb
xor
xlat
xchg
lret
in
add
and
sub
xchg
cwtl
ret
mov
popa
and
es
cmpsb
cs
or
ret
fstps
icebp
cld
in
mov
mov
and
mov
rcr
sarb
sub
inc
xor
movsl
pop
das
adc
cwtl
mov
sti
pop
gs
fnstsw
outsl
xlat
jb
sarb
adc
popl
xchg
pop
xlat
ret
aad
cwtl
daa
es
sbbl
cmpsl
dec
nop
out
jb
mov
cmpsl
push
cmp
mov
xor
insl
inc
mov
push
lds
fs
rcrl
or
mov
sub
mov
cmpsb
pop
jnp
bound
int3
jmp
scas
adc
adc
sbb
pop
test
dec
icebp
add
jl
mov
js
jecxz
push
ret
inc
hlt
xchg
icebp
orl
mov
imul
int3
pop
in
sbb
jl
in
jp
or
mov
pop
mov
push
adcb
add
testl
cld
pusha
sub
cld
iret
rorb
cmp
pop
xchg
stos
xor
sarl
das
sbb
cmp
sarb
mov
jns
cmp
pop
mov
jmp
pop
ficompl
fistps
int
and
adc
clc
inc
ficoml
rcll
andl
stos
imul
push
int3
xor
lea
xor
data16
fdivrl
push
push
mov
xchg
movsb
xchg
and
rcrl
xor
mov
mov
test
pop
inc
push
mov
ficoms
subl
scas
mov
dec
and
mov
sti
pop
pop
movsb
es
cmp
cmc
insl
mov
add
push
or
lcall
xchg
into
mov
imul
fimull
loope
out
or
scas
nop
jbe
push
jne
xchg
test
mov
lcall
add
xchg
stos
dec
fdivp
add
dec
add
adc
xchg
ds
in
nop
add
mov
dec
pusha
arpl
adc
xor
mov
out
adc
insl
xchg
fiaddl
imul
jl
int3
in
jnp
loopne
stos
inc
cltd
push
adc
xchg
xor
jmp
cli
out
fwait
lea
sub
push
aam
rcll
insb
mov
andb
subl
jmp
in
jge
repz
jmp
push
test
insb
test
rclb
inc
xor
popa
ss
into
into
xor
jmp
std
push
mov
bound
fsubrl
shrb
dec
pop
aad
jae
add
pcmpgtw
hlt
addl
jnp
test
pop
mov
jae
inc
cltd
mov
lods
cmp
xchg
fldt
cmp
lock
fstpl
in
enter
dec
scas
push
je
sbb
jp
push
pop
pop
mov
outsl
loope
pop
pop
xor
shrl
adcl
push
jl
icebp
movsl
test
cmpsb
insb
flds
movsl
xor
scas
push
fildll
sbb
mov
add
call
int3
mov
out
xchg
pop
xchg
cmp
aas
sti
jo
imul
leave
rcrb
lds
mov
jl
xor
cmp
xor
aam
pop
iret
sub
cld
sbb
sub
xchg
loope
jo
xchg
pop
hlt
ljmp
and
xor
cli
or
cmpsb
flds
pusha
push
sbbb
iret
pop
sub
sbb
repz
mov
enter
aam
fwait
out
insb
movsl
lret
pop
in
loop
xchg
sahf
mov
cmp
lret
or
sbb
es
out
jecxz
mov
push
lahf
jp
scas
jae
sbb
mov
push
mov
push
std
dec
push
sbb
arpl
fld
leave
cmc
sahf
ss
std
jnp
in
stos
add
jg
aam
aad
sub
cmpsl
mov
cmp
mov
dec
jecxz
xor
jnp
sub
cwtl
cmp
ljmp
rolb
adc
cmp
push
das
cwtl
pop
scas
push
sub
lock
arpl
stc
xchg
xchg
pop
insb
std
adc
test
sbb
daa
cmp
add
push
cmp
pusha
xor
aaa
xchg
mov
push
cmp
sti
call
push
dec
mov
fcoms
enter
jb
inc
xchg
jge
adc
xor
xchg
repz
jl
mov
pop
popf
inc
cmp
mov
xchg
hlt
movsb
xor
popa
jmp
and
iret
jl
inc
sbbb
test
sub
aas
sahf
fmull
rcr
aas
out
iret
je
je
dec
pop
ss
push
xchg
aas
mov
and
in
mov
push
orl
inc
scas
orb
in
jb
gs
ljmp
cli
sub
movsl
scas
and
cmp
pop
negl
mov
pop
xor
mov
xor
aad
repz
mov
mov
push
ret
fstps
xor
jnp
inc
ret
adc
pop
mov
pop
std
jns
add
push
inc
clc
push
loop
jl
and
arpl
or
ret
cvtpi2ps
mov
dec
xchg
out
pop
loopne
sub
sarb
push
cwtl
dec
push
xor
fs
jae
pop
pop
cmp
add
pop
call
lahf
sub
arpl
sbb
cmp
mov
cmpsb
repnz
aas
mov
int3
push
push
lret
cmp
jne
jmp
sub
xlat
sub
mov
jmp
adc
xor
jmp
mov
mov
mov
xchg
daa
insb
jnp
lds
cld
pop
imul
mov
lods
and
and
rcll
loop
push
mov
jo
push
jae
fmull
push
fistpl
xchg
call
mov
ret
insl
cmp
aas
add
and
hlt
stc
mov
xor
sbb
cmp
pop
and
mov
out
cmp
add
jno
mov
push
cs
inc
xor
sbb
movsl
popf
popa
out
sahf
dec
cli
pusha
or
mov
lcall
je
dec
jb
in
pop
mov
push
push
sub
inc
inc
jbe
sbb
frstor
dec
pop
and
and
scas
xor
cmc
js
sbb
test
leave
mov
or
js
adc
orl
mov
push
ficompl
cmp
jmp
shl
sub
movlps
pop
cmp
test
imul
outsb
mov
mov
xlat
mov
int
sub
push
cmp
cwtl
ja
int
call
adc
lret
xchg
sbb
sbb
dec
mov
and
idivb
loope
dec
dec
ljmp
sbb
cwtl
push
clc
jb
enter
fwait
in
test
jne
cmc
xor
sub
pop
mov
pop
lret
rclb
cwtl
cmpsl
jne
mov
and
cwtl
sub
mov
test
dec
mov
lcall
scas
inc
inc
add
outsb
ds
fwait
xor
fimull
sar
jb
in
mov
jmp
int3
adc
sub
sbb
out
les
sbb
hlt
mov
push
orb
add
sub
xchg
sbb
lahf
clc
push
jmp
test
inc
sbb
push
jmp
and
cmp
pop
xor
adc
cmc
push
scas
and
mov
xchg
bound
or
xorl
lahf
ja
fs
dec
push
or
jbe
inc
mov
adcb
je
and
adc
fisttpll
pop
aam
cmc
inc
movsb
mov
push
repz
mov
jae
dec
jge
addr16
xchg
les
lcall
int
dec
add
cmpb
idivb
into
bound
leave
mov
fdivrl
mov
jge
mov
out
cmp
mov
pop
mov
mov
int3
cmpsb
push
cmpsb
jge
popf
je
mov
lret
fnsave
and
xor
push
aaa
mov
push
div
into
xchg
adc
jge
sbb
jmp
or
lods
repz
adc
lahf
scas
shll
in
lcall
mov
int
cwtl
push
jmp
test
clc
mov
mov
frstor
fcoml
xor
mov
inc
call
inc
xchg
movsb
scas
cmp
mov
pop
arpl
cmp
or
xor
js
dec
xchg
fucomip
sub
push
adc
dec
jl
cmpsl
iret
mov
fnop
in
cmp
inc
adcl
mul
push
out
adc
je
lcall
out
cmpsl
mov
test
out
push
or
leave
repz
pop
pop
mov
fwait
mov
xchg
mov
adcb
ret
repz
mov
cmpl
sahf
lahf
subb
add
inc
pop
jg
add
addb
xchg
add
jmp
mov
adc
outsl
fwait
testb
gs
nop
fnstcw
and
rorl
or
ja
jnp
scas
call
cmpsl
dec
add
lods
mov
rcr
fs
bswap
insl
inc
loopne
jo
inc
lods
or
pop
jmp
xchg
pop
sbb
cltd
or
leave
inc
adc
fwait
lock
or
sbb
lds
mov
jae
fmuls
out
cld
sub
pop
xor
and
dec
adcl
mov
lds
inc
add
cmpsb
fistpll
mov
nop
jecxz
pop
pop
mov
out
xchg
loopne
add
mov
or
jae
xor
subl
pop
jns
xchg
xchg
icebp
mov
stc
mov
mov
jo
aam
loope
pop
and
shl
fwait
sbb
and
adc
push
add
aam
fnstcw
ljmp
jb
enter
aam
in
aaa
inc
jne
inc
cmpsb
push
xor
scas
jae
gs
cmp
int
imul
mov
pushf
add
iret
jl
cs
dec
repz
adc
mov
pushf
daa
adc
leave
andb
adc
out
andl
sbb
mov
mov
mov
imul
jmp
push
in
fsubp
pop
in
ljmp
push
mov
add
push
or
imull
aam
repz
sub
or
dec
pusha
pop
jo
cmpsb
mov
jmp
and
sub
mov
sub
mov
cmp
das
shl
fwait
imul
dec
push
mov
arpl
syscall
aas
xor
ja
out
mov
je
sbb
sub
jno
adc
jo
jmp
mov
cmp
mov
add
imul
arpl
addb
repz
xchg
xchg
jl
mov
xor
inc
lahf
adc
or
pop
outsb
jecxz
in
out
xchg
pop
lret
test
mov
adc
movsb
xor
or
cmp
cmp
cmp
push
sub
scas
ret
test
and
outsl
hlt
inc
jge
dec
dec
lods
lods
add
xlat
rol
inc
mov
test
mov
filds
mov
lahf
mov
movsl
insb
imul
push
in
push
es
test
xchg
clc
push
imulb
dec
call
test
jnp
aad
cli
popa
into
cmp
pop
mov
mov
cwtl
lret
outsb
jg
fidivs
lods
cltd
lods
jo
add
ret
cmpsb
xlat
add
mull
dec
clc
out
dec
out
or
fiaddl
testl
cmp
mov
mov
movaps
hlt
fistps
movl
test
ficoml
sub
cmc
xor
fwait
std
xor
fiadds
mov
addr16
sub
add
fldt
xchg
cwtl
pop
mov
jns
clc
lds
out
stc
add
add
aam
jle
icebp
mov
adc
lock
out
xor
push
pop
push
test
mov
mov
push
lods
and
lret
test
gs
inc
xchg
xlat
movsb
mov
xor
xchg
ret
cmpl
mov
inc
addr16
into
rol
mov
add
mov
mov
push
sti
push
negb
js
sbb
xlat
xchg
imul
inc
xor
add
pop
jns
jo
loop
inc
adcl
cmpsb
cmp
cmp
cmp
and
mov
inc
ljmp
inc
jg
shrl
push
jbe
push
lcall
sarl
xor
jnp
fistl
jne
inc
inc
roll
add
daa
fisubs
adc
fistps
or
scas
dec
inc
sti
jno
xchg
push
xchg
daa
jb
push
sub
dec
push
jae
sahf
jne
adc
dec
and
push
in
test
gs
lcall
cld
or
pushf
or
sbb
mov
movsl
pop
push
out
mov
jge
fsubs
enter
fadds
test
ret
jb
and
push
adc
addr16
push
xlat
dec
cmc
into
mov
sbb
or
shrl
jbe
dec
shll
mov
cld
fsubl
or
xor
mov
pop
lea
push
mov
mov
nop
add
mov
ljmp
push
inc
mov
xchg
push
and
and
lods
jb
push
pop
daa
outsl
pop
add
jae
int3
mov
dec
mov
fldt
adc
xorps
in
sub
jge
xchg
adc
das
jno
mov
xor
stc
stos
in
jo
enter
shll
shrb
push
fcoms
stos
out
adc
add
je
stc
inc
adc
sub
sub
sub
arpl
push
mov
test
xor
pushf
popf
mov
aad
fistpll
imul
scas
out
cmovs
dec
into
dec
mov
xchg
jge
pop
insb
adc
mov
pop
cld
fnstsw
pop
ss
pop
and
or
add
stos
mov
mov
xor
iret
out
inc
repnz
leave
and
xlat
mov
cli
ljmp
pushf
test
or
dec
sbb
mov
inc
mov
clc
ds
test
daa
cmp
cmpsb
and
jecxz
clc
jbe
ja
push
aam
jb
xchg
leave
cmp
xor
push
cmp
lds
negl
shrl
mov
mov
aad
jg
xchg
or
fisttpll
leave
mov
mov
rorl
aad
mov
xchg
lcall
cmp
loop
or
fwait
scas
or
push
inc
add
loopne
sbb
testl
ds
push
test
aas
ret
cmpsl
mov
pusha
xchg
je
adc
sbb
adcb
sbbb
fnsave
or
repnz
xchg
fisttpll
pop
or
in
xor
sahf
push
xor
int3
lods
pop
dec
and
lret
rcll
ja
or
inc
jb
mov
pop
pop
mov
and
or
les
testb
push
add
jp
push
dec
adc
in
mov
cmpsb
mov
push
outsb
dec
dec
pop
sbb
pusha
push
loop
cli
in
data16
inc
lahf
stc
xor
jge
cwtl
pushf
sub
xorl
aas
fwait
arpl
add
call
ficoml
jb
lea
cmp
imul
int3
jp
inc
mov
jmp
pop
aad
cmp
push
jae
test
xor
cmpsl
andb
or
js
pop
sti
jb
pop
outsl
sahf
push
pop
jp
rol
cltd
sbbl
mov
push
in
inc
test
sub
or
mov
incl
call
repnz
icebp
push
inc
leave
lea
inc
jno
push
or
cmp
mov
and
jno
std
out
lret
test
mov
into
idivl
int3
js
inc
mov
add
xchg
xchg
jns
fidivrs
xorb
dec
push
bound
movsl
mov
mov
xor
inc
into
mov
cli
adc
cmpsl
and
iret
idiv
nop
std
xor
sub
outsl
mov
xor
ficomps
dec
add
mov
out
pusha
enter
iret
fs
stos
lcall
mov
divb
aad
es
inc
ret
lcall
lods
jge
jno
adc
jns
jae
sub
pop
mov
sti
repnz
imul
inc
or
push
fists
mov
cmpsb
ljmp
fxsave
mov
in
push
cmp
jle
and
pop
imul
mov
inc
mov
mov
and
xorb
in
ficoms
jg
jmp
or
push
pushw
mov
xor
or
sbb
lds
jae
enter
les
shlb
cmp
sbb
mov
ret
daa
mov
xchg
push
add
lret
pop
hlt
mov
pop
sub
imul
jle
out
dec
cli
mov
lea
pop
js
aas
sub
xor
std
ja
adc
mov
inc
js
idivb
or
pusha
test
les
pop
outsb
sbb
xchg
ss
push
orb
sbb
xor
ljmp
mov
cmpsl
sbb
pusha
mov
add
cli
jne
test
push
insl
inc
lret
sub
mov
dec
dec
pusha
cmp
dec
lds
enter
mov
dec
mov
pop
ds
lds
dec
push
lea
in
jo
mov
ficoml
lods
aas
pop
int
add
lods
shlb
cli
pop
dec
xor
mov
mov
out
ljmp
pop
lods
rol
fstp
les
dec
xchg
push
lret
xor
mov
or
scas
inc
ljmp
cmp
fldt
or
lahf
and
mov
cmp
inc
or
push
in
roll
mov
lods
jecxz
sub
adc
ljmp
and
and
divb
push
pop
lcall
js
pop
jnp
cld
sub
pop
adc
loopne
fistl
inc
lea
sbb
dec
mov
mov
jns
push
xor
and
xchg
mov
and
cltd
or
cwtl
pop
loop
fyl2xp1
jge
sbb
and
lea
aam
xchg
es
fwait
cli
stos
gs
mov
dec
or
aam
fstp
mov
xlat
movsb
mov
js
and
mov
lods
les
insl
sbb
cltd
mov
cmp
shll
daa
ret
sahf
sbb
cwtl
dec
ficoms
cs
aas
dec
or
pop
lahf
pop
outsb
adc
fcomip
insb
nop
push
hlt
push
mov
repz
xchg
js
mov
xor
add
ret
mov
call
out
sub
pushf
pop
adc
mov
jecxz
insl
jno
jb
lock
pushf
movsl
xchg
cwtl
rol
adc
and
sahf
imul
cmp
ret
loope
not
mov
adc
cmp
sub
sbb
cltd
xor
daa
cmp
fistl
push
aaa
jmp
lods
mov
cmc
cld
setne
negb
daa
inc
mov
dec
adcl
cmp
mov
pop
mov
jno
mov
adc
mov
mov
pop
inc
mov
aas
adc
push
cmp
adc
pushf
popf
insl
cwtl
or
inc
jmp
mov
sti
xor
movsl
xchg
push
iret
cmp
jge
mov
mov
loop
mov
jb
sbb
sub
dec
popa
sub
clc
cmc
mov
in
leave
adc
and
loope
loope
mov
ja
movsb
daa
das
fmuls
int3
and
jecxz
lods
and
mov
test
icebp
cmc
imul
into
or
add
xlat
or
out
outsb
in
xchg
inc
push
ljmp
out
cmp
test
jae
test
sub
fs
dec
cmp
ja
xor
test
es
shll
dec
jno
xchg
ret
movsb
add
or
push
shrl
xchg
mov
mov
fbstp
xor
xchg
sub
add
psubw
stos
insl
mov
adc
out
test
sbb
ljmp
add
lret
mov
jno
hlt
sub
cmp
scas
push
and
scas
push
and
int
jmp
mov
aas
jmp
fnstsw
stos
pusha
sbb
into
inc
fisttpll
push
xor
add
push
mov
xchg
push
nop
negb
mov
lods
ljmp
dec
push
mov
mov
mov
into
mov
inc
rcll
aas
cmc
mov
in
push
mov
and
or
sub
push
shlb
stos
jns
mov
cmp
xchg
jl
loope
pop
loopne
dec
das
dec
nop
inc
test
int
in
sub
dec
pop
loope
imul
sbb
sbb
jg
xlat
aam
inc
fildll
mov
mov
push
test
or
or
mov
movsb
int
aas
sbb
or
xchg
push
cmpsl
mov
jno
test
sub
mov
fcoms
sub
push
xor
jb
lods
push
lods
sub
fxrstor
push
pop
adc
mov
pop
adc
xchg
fnstsw
fs
push
lods
movsb
inc
jl
orl
inc
pop
aam
xor
dec
xchg
push
jmp
mov
jp
loop
dec
cmp
hlt
loope
jb
mov
les
lods
loop
push
or
aad
pop
pop
hlt
jbe
add
jp
lea
ss
add
data16
dec
sti
mov
inc
in
fsubrl
mov
fs
lret
dec
dec
mov
gs
or
jbe
adc
roll
pop
notb
adc
adc
repz
lahf
arpl
mov
xchg
pop
xchg
dec
cmp
lret
stos
jo
sahf
jg
stc
fwait
pop
mov
lahf
nop
mov
mov
or
rcll
push
ljmp
popf
mov
daa
fldl
dec
jnp
fmul
and
outsb
insb
ljmp
dec
lods
add
rcl
out
jmp
push
lret
shrb
sub
or
out
ja
mov
add
push
mov
push
xor
popf
pop
xor
aas
cwtl
pop
je
sub
insb
stos
sarl
add
sub
push
jns
xchg
adc
popf
mov
in
mov
stos
ds
and
and
frstors
bound
fisubrl
adc
enter
sub
ja
daa
inc
je
jecxz
jae
rorl
sub
in
or
mov
adc
test
mov
pop
divb
movsl
xchg
xchg
and
pop
sub
mov
mov
sti
dec
mov
cmp
jmp
addr16
jne
pop
call
jo
mov
inc
scas
cltd
mov
push
push
dec
bound
mov
scas
popa
xchg
clc
pop
mov
fcmovbe
jns
stc
iret
and
mov
pop
dec
data16
mov
lret
dec
push
into
push
or
dec
sbb
jle
xchg
sub
add
in
jmp
jno
adc
pop
mov
mov
dec
gs
fsts
rol
cmp
pop
mov
push
mov
inc
pop
pop
pop
lds
in
jp
xchg
cmp
gs
pusha
sub
popf
cmpsl
movsb
pop
mov
cmp
loopne
ss
aas
push
jae
fidivl
jmp
decw
cmpsl
mov
popa
or
aam
push
jae
push
test
dec
push
push
imul
mov
xchg
and
outsl
inc
add
push
imul
cmp
test
stos
cwtl
loopne
imul
std
sbb
test
sbb
jle
xlat
cmpsl
and
mov
in
push
mov
sbb
mov
dec
lcall
xchg
pusha
jnp
jae
mov
inc
ja
sbb
inc
or
mov
inc
ret
push
test
push
imul
xchg
cmp
dec
add
jno
rcr
mov
or
outsl
mov
or
pusha
or
int
cs
push
xchg
and
push
andb
inc
pop
mov
arpl
sarl
divl
aaa
aad
lock
sbb
divl
nop
jmp
sbb
mov
stc
rep
sti
cs
shrl
and
adc
insl
lods
xchg
mov
rol
jae
sbb
mov
mov
lret
aam
sbb
cmp
into
adc
movsl
fldl
push
cld
in
sub
stos
pop
dec
jg
jns
ret
xor
test
outsb
imul
aam
inc
push
add
out
sti
xchg
bound
push
jp
outsl
fdiv
mov
mov
inc
out
mov
cli
test
xchg
add
mov
xor
or
xchg
push
lret
lcall
inc
xor
clc
xor
mov
out
lock
loopne
mov
jle
jp
push
pop
xor
popa
dec
xor
faddl
xor
pop
jecxz
or
xchg
sbb
push
cmpsl
pop
mov
sub
leave
sbb
mov
dec
ret
jo
out
gs
into
mov
inc
leave
rcrb
xor
or
xor
xchg
jo
and
mov
pusha
add
movsl
fcompl
mov
dec
mov
fadd
sub
push
cmpsb
lret
rcr
pop
mov
mov
filds
lret
or
in
lods
pop
jbe
jmp
jno
mov
inc
push
stos
pushf
mov
pop
jae
xchg
or
push
xor
cli
fildll
or
pop
imul
jno
cmp
pusha
xor
insl
imul
xor
fs
incb
out
jns
scas
icebp
out
sbb
inc
sahf
ret
insb
imul
mov
cltd
sub
mov
ljmp
push
xchg
lahf
in
inc
mov
mov
ud0
pop
jnp
push
rcl
mov
notb
xchg
int
xlat
mov
sbb
gs
fdiv
cmp
sub
test
shll
lods
cmp
mov
sub
bound
fcom
popa
pusha
mov
orl
ds
out
sub
cmc
stos
int3
lods
dec
mov
adc
insl
sbb
adc
dec
sub
dec
insl
test
sbb
push
mov
jl
dec
dec
scas
notl
repz
cmp
rcrb
js
dec
cltd
inc
fistps
sbb
mov
jge
ljmp
das
and
xchg
sarl
push
sahf
dec
inc
xor
cwtl
adc
popf
mov
fsubs
cmp
xor
sub
or
les
icebp
jecxz
mov
or
mov
fdivrs
incb
xchg
rolb
shll
mov
sarb
cmp
push
es
mov
icebp
ror
adc
mov
test
stos
cmc
sarl
jns
adcb
pop
test
sahf
adc
push
test
sbb
and
dec
jb
mov
sub
shll
fidivs
mov
pop
out
les
xor
cwtl
rorl
sub
outsl
sbb
jg
mov
cmpl
daa
jmp
fildll
jae
aas
jo
push
andl
sbb
adc
xor
out
or
bnd
push
out
cmp
push
scas
leave
popa
dec
out
hlt
sbb
addl
ja
sahf
pop
jmp
mov
imul
pop
and
ret
out
aaa
iret
scas
ljmp
sub
in
js
in
push
or
adc
mov
inc
fsubs
pop
cwtl
nop
jne
or
fistl
iret
je
sub
imul
dec
and
pop
adc
mov
cli
jb
mov
test
jnp
mov
popf
add
loope
xchg
outsl
cmpsb
out
pop
js
or
xchg
inc
mov
inc
cmc
jbe
stc
ja
out
test
clc
mov
popf
shl
shr
and
pushf
push
std
outsb
mov
dec
and
jne
mov
subb
cmpsb
xchg
jp
pop
mov
loope
das
xchg
insb
push
icebp
mov
add
js
cmp
pop
out
jb
in
jbe
lahf
adc
inc
pop
sub
in
xor
aad
fsub
mov
insl
lret
aam
pop
cmp
enter
sub
loope
ljmp
mov
fcos
das
push
rol
lods
push
xchg
ret
inc
shr
std
test
cli
fwait
dec
mov
dec
xchg
lea
jge
inc
rcrl
mov
push
mov
lcall
lret
push
test
sub
rolb
shl
inc
and
int
or
mov
cmc
pop
das
sub
and
jb
jmp
mov
dec
hlt
cmp
mov
xchg
scas
mov
pusha
icebp
arpl
sub
aam
inc
outsl
gs
outsl
push
sbb
fcmovb
or
jl
enter
hlt
pop
faddl
cld
subl
pop
shrl
adc
test
or
mov
mov
cmpsl
nop
xchg
shlb
leave
xchg
fcoms
fdivrl
mov
das
aas
and
lret
repnz
mov
sbb
in
push
das
mov
mov
dec
cmp
js
out
lea
xchg
jg
sub
sti
out
adc
mov
fbstp
out
das
movb
movsb
jecxz
fsubrl
jmp
xchg
ds
out
inc
mov
add
push
sbb
cmpsb
test
lods
mov
add
push
push
ds
fildl
push
mov
jl
incl
push
sub
in
jbe
cmp
clc
xlat
pop
push
lret
xor
imul
inc
je
pushf
xchg
mov
xor
add
jae
fisttpl
jl
xchg
icebp
and
dec
mov
mov
or
mov
inc
mov
sbbb
sub
jecxz
fisttpl
cmpsb
push
ja
add
sti
mov
ljmp
push
inc
dec
jbe
adc
clc
loopne
cmp
push
or
dec
shlb
movsl
dec
and
jo
cmc
in
icebp
rcrl
and
adc
mov
gs
cmp
mov
call
int
cmp
cwtl
mov
cmp
ja
mov
dec
in
rclb
popf
xchg
dec
sbb
loope
xchg
mov
clc
cmpsb
daa
xor
xor
outsl
xchg
or
sub
in
scas
push
mov
fstpt
out
xlat
add
mov
sti
fcomps
rcrb
aaa
push
in
jbe
mov
add
iret
mov
and
mov
aas
bound
popl
push
sub
scas
mov
mov
in
pop
ds
mov
pop
push
jmp
xchg
imul
pusha
gs
nop
shlb
scas
dec
in
stos
int3
sub
insl
js
pop
int
fdiv
xchg
push
je
inc
fnstsw
mov
ss
pop
fs
outsl
pop
mov
sub
nop
push
xor
lds
imul
test
pop
cltd
mov
sub
call
sahf
mov
push
mov
sbb
mov
push
mov
enter
mov
aam
inc
rcrl
cmp
xor
repnz
aad
xor
and
outsb
jmp
xor
mov
stos
testb
jae
sub
sub
mov
daa
jo
gs
or
and
add
enter
in
and
outsl
dec
adc
mov
pusha
jo
mov
in
test
push
mov
xchg
fistps
repz
out
subb
jnp
gs
adc
jno
lahf
jbe
pop
in
pop
push
xchg
inc
int3
cmp
xchg
jne,pt
rcll
add
and
mov
call
imulb
mov
push
addl
lret
inc
lahf
hlt
das
lods
add
ss
or
and
cmp
je
cmc
leave
ret
iret
inc
sub
stc
imul
xor
mov
mov
dec
jns
fwait
test
cmpsb
cmp
test
jg
pop
out
js
in
dec
stc
push
ss
repz
cmp
cmp
or
push
fimuls
es
jl
int3
movsl
adc
dec
ficomps
cmp
mov
pop
jno
xchg
fs
sbb
enter
pop
repnz
mov
dec
call
xor
add
dec
push
pop
jge
stos
xchg
lcall
orl
sub
fidivrs
or
stos
inc
pop
mov
adc
dec
sbbl
pop
or
lret
in
adc
dec
aas
sub
out
int3
mov
cmpl
xchg
sub
push
int3
xlat
call
ret
cmp
es
leave
xor
xor
roll
push
pusha
sub
ja
lret
xchg
mov
js
sub
mov
push
imul
push
xor
repz
fcomip
scas
pop
popa
pop
add
rcr
scas
sub
movsb
enter
call
subb
sub
pop
xor
push
sti
fwait
loope
xlat
xor
mov
cmp
fcomi
in
orb
dec
xchg
cmp
and
aam
adc
add
daa
adc
add
sub
lea
xchg
lock
dec
adcl
iret
dec
mov
add
aas
je
lods
test
out
sub
dec
mov
jo
sbb
push
pop
lret
orb
and
jl
mov
xchg
cmp
pop
and
lret
and
cld
add
jae
add
xor
xor
andb
cmpsb
test
ja
out
enter
add
dec
mov
lds
popa
std
shlb
push
imul
push
ret
inc
es
push
sub
mov
rcrb
pop
faddl
add
data16
cmpb
inc
aas
test
mul
lcall
dec
mov
inc
insb
addl
pop
adc
outsl
loopne
arpl
jne
pusha
mov
mov
mov
mov
sub
mov
mov
and
sbb
out
fidivrs
mov
sbb
xchg
test
mov
addr16
cmp
cmc
jno
cmp
aad
jnp
loopne
or
sub
mov
ror
cli
into
repnz
hlt
pop
pushl
rcrb
pop
inc
jecxz
add
jnp
mov
lcall
clc
ss
mov
or
xchg
stos
push
fnstsw
xchg
aas
jle
mov
mov
outsb
dec
push
in
lds
mov
jns
dec
fwait
push
cmc
sub
mov
push
pusha
mov
inc
daa
in
pop
inc
adc
mov
clc
les
ror
jb
xor
jne
sbb
adc
pop
incl
cli
or
or
fisubrs
out
fldcw
cmp
pop
ss
and
frstor
inc
pusha
cmp
scas
pop
add
lods
outsl
iret
pop
loope
sti
inc
mov
pop
out
or
or
push
fs
lock
int
push
pop
push
adc
push
and
daa
cli
mov
dec
jmp
xlat
jmp
jae
test
xchg
out
mov
arpl
xor
pop
lock
mov
dec
cli
sub
sbb
call
add
mov
clc
xor
xor
std
lods
or
sub
sahf
add
addr16
in
cmp
sbb
nop
into
into
icebp
punpckldq
fisttps
sbb
jmp
rolb
and
xchg
sbb
jmp
xor
test
jle
cmp
jmp
cmpsl
xor
scas
adc
mov
and
lods
shlb
push
xlat
mov
lret
cmc
shr
mov
adc
out
fisttps
mov
sahf
dec
gs
je
int3
fldenv
push
call
imul
mov
xor
adc
repz
inc
arpl
test
inc
cmp
mov
shlb
stc
testb
inc
xchg
and
lret
jnp
xchg
jl
adc
cltd
mov
loope
cltd
add
mov
fadd
das
xchg
insl
xchg
out
xor
xor
into
xchg
cmp
enter
out
movsb
sar
push
or
cld
pop
sbb
adc
hlt
inc
push
mov
jp
mov
loop
inc
fldenv
or
jno
push
call
and
mov
mov
adc
sbb
ss
xor
mov
movsb
rcr
xorl
pop
add
fnstenv
andl
push
cmp
pop
xchg
repnz
dec
loope
test
mov
negb
jae
insb
lahf
pop
cli
pop
mov
es
fnstcw
rorl
inc
xchg
repnz
clc
adc
xorb
test
ret
dec
ja
rcl
out
ret
and
hlt
pop
adc
lret
fadd
push
mov
mov
sbb
and
rorb
and
jb
sbb
rclb
ror
jecxz
lahf
pop
lock
stc
push
mov
gs
rorb
loop
movsl
xlat
cmp
inc
mov
sub
add
cmpb
clc
jecxz
js
repnz
mov
fldenv
ret
aam
add
push
lods
mov
fimuls
fsubrl
push
adc
cmp
cmp
adcl
push
cmpsb
jns
mov
popf
jmp
shrb
stc
xchg
dec
sub
das
jecxz
lock
add
icebp
lcall
fwait
pushf
adc
fwait
lea
and
das
popf
cmp
push
mov
xchg
addr16
jnp
and
dec
int3
add
add
out
adc
inc
pop
add
xor
insb
mov
outsl
cmp
je
iret
ja
push
icebp
es
in
xchg
xchg
mov
cmp
xor
push
cli
pusha
paddq
mov
ljmp
es
enter
push
test
adc
cs
xchg
xchg
test
loopne
shr
daa
and
xor
lcall
mov
pop
adc
jmp
inc
cmp
mov
aam
sbb
push
aaa
sahf
or
lret
sarl
xchg
adc
dec
cld
shlb
fildll
mov
pop
imul
subl
inc
push
cmpsl
sub
mov
lcall
adc
fsts
fsts
cmp
clc
lds
add
dec
jo
sti
xchg
out
jle
nop
and
jecxz
adc
je
push
leave
sbb
pop
push
scas
jmp
sbb
lret
addl
pop
ds
jmp
inc
and
xchg
div
push
ror
or
cmp
ljmp
push
jecxz
test
jg
lret
cld
pop
or
push
mov
cmp
psrld
cmpsl
clc
dec
je
adc
mov
xor
test
movsl
push
or
xor
sbb
int
push
mov
jne
push
movsl
pushf
enter
jne
push
sarl
xlat
in
loop
test
mov
push
nop
jmp
push
inc
inc
lods
ljmp
mov
ret
adc
jge
loopne
imul
jmp
push
movsl
xorb
jae
test
fnsave
scas
add
repnz
mov
push
or
rorb
mov
popa
inc
in
mov
push
xor
rcrl
fadds
imul
mov
and
sbb
les
mov
cli
and
fdivrl
xorl
jg
mov
bound
cmp
jno
sub
enter
sbb
idiv
movsl
xchg
sbb
imul
call
in
gs
sbb
insl
inc
roll
outsb
mov
cmp
pop
addb
jne
xchg
lcall
or
pusha
mov
mov
out
emms
or
fidivrl
push
mov
cvtps2pd
ljmp
pop
xchg
lods
jbe,pn
dec
call
xchg
roll
lcall
add
jno
inc
dec
mov
ljmp
fnstsw
mov
mov
lds
stos
ss
sbb
fcomp
shlb
mov
orl
scas
xchg
out
inc
push
fwait
insl
sub
pop
pop
notb
add
adc
jne
xchg
sbb
mov
xor
mov
movsl
cmp
mov
adc
push
iret
jge
aas
in
les
push
jle
mov
inc
out
subb
sbb
add
mov
and
repnz
adc
std
mov
sahf
adc
xchg
push
rcl
in
js
in
inc
fistpll
push
add
and
sub
mov
jp
enter
sub
loop
cmc
psadbw
inc
xor
xchg
push
sub
lcall
dec
mov
dec
daa
out
pop
push
clc
sbb
shrl
arpl
enter
int
das
mov
cmpsw
aad
pop
or
add
sbb
mov
push
jg
fcoml
stc
es
ret
shr
or
test
mov
pop
iret
inc
lods
inc
sbb
sub
jge
test
in
adc
jle
fisubrl
sub
out
jnp
add
xor
xlat
iret
mov
sub
lea
mov
xlat
mov
pop
dec
mov
sub
pop
sub
rcl
dec
lds
outsl
jbe
mov
mov
and
add
pop
and
dec
gs
or
add
fcmovnu
inc
xor
pop
ljmp
dec
mov
push
lret
pop
pop
xchg
xchg
imul
jmp
mov
cltd
aad
je
sahf
fdivs
mov
cmp
mov
adc
pop
sub
cmc
mov
dec
fcoms
imul
lcall
push
add
addl
insl
adc
pop
jmp
mov
aas
popf
or
shrl
fsubs
scas
pop
jo
imul
mov
mov
lock
add
sbb
adc
add
or
aam
ds
ljmp
mov
mov
mov
sahf
adc
jno
push
sbb
scas
cmpsb
insb
pop
cmp
stos
cli
bts
rolb
inc
dec
icebp
ud0
cmp
fidivl
aad
add
sbb
out
out
jnp
lods
jg
or
push
adc
loop
mov
sub
addl
mov
sbb
scas
xchg
ror
hlt
loop
dec
repnz
pop
aas
mov
or
movb
jge
jo
gs
sbb
mov
pop
test
sbb
dec
js
xchg
cmpsl
sub
push
imul
ds
adc
sub
es
mov
jmp
dec
jmp
adcb
jae
jecxz
arpl
pop
pop
popa
xchg
push
cmpsl
xor
push
sub
or
std
sub
stc
in
sub
lods
pop
jmp
out
enter
adc
mov
stc
ljmp
sub
push
xchg
and
xchg
xor
inc
out
pop
cwtl
insb
jmp
jmp
leave
xor
jb
lcall
cmp
fmuls
divl
gs
and
das
imul
push
adc
sahf
inc
and
imul
cmp
mov
cmc
inc
jb
inc
and
cmp
lods
mov
ret
fdiv
xchg
cmpsl
out
inc
inc
xchg
repnz
xor
leave
xchg
mov
inc
mov
xor
lcall
outsb
and
lds
and
test
ds
arpl
iret
cltd
loop
leave
dec
xor
and
add
das
or
js
lcall
adc
das
scas
pop
mov
xchg
mov
out
push
imull
pushf
or
mov
fsubrs
mov
orb
movsb
sub
jge
daa
out
out
pop
or
outsl
pop
in
lcall
add
inc
bswap
mov
scas
push
test
insl
and
jb
arpl
xor
lods
es
push
fsub
repz
imul
aas
in
nop
rcll
cmp
push
mov
repz
insl
in
sbb
push
jnp
in
lea
sub
ds
pop
mov
repnz
mov
push
rorl
xchg
fstps
lret
ret
mov
pop
jbe
ds
in
jae
les
jmp
lret
add
push
xor
cmpsb
loope
jb
sub
sbb
scas
jle
jae
sahf
dec
leave
pusha
xchg
adc
lock
mov
dec
mov
push
cwtl
insb
leave
mov
lsl
xor
xor
loop
aad
iret
cwtl
add
aas
stc
les
iret
cmpsb
and
sub
jnp
mov
call
imul
and
cmp
mov
cmp
ret
xchg
nop
fs
inc
ficompl
inc
pop
jmp
in
in
out
sub
ja
add
push
in
cs
jge
cmpsl
dec
fmull
pop
push
cmc
sbb
xchg
cmpsb
repz
and
jmp
sub
ja
adc
cmp
lahf
es
mov
imull
xor
jbe,pn
roll
and
xlat
imul
scas
push
xor
push
test
dec
cmp
inc
adc
fucomi
mov
mov
mov
ja
mov
hlt
fistpll
adc
mov
imul
adcl
inc
mov
cwtl
ss
and
mov
fcomi
addr16
sub
xor
jge
adc
sub
cmp
out
loopne
popa
out
jp
bound
repz
sbb
mov
inc
and
loopne
lods
xlat
pop
pop
pop
mov
jns
inc
pop
mov
add
loope
or
mov
cmp
mov
mov
jp
mov
cmpsl
scas
outsl
neg
push
add
mov
fsubrl
jge
std
cmp
mov
xacquire
icebp
pop
and
std
test
sahf
inc
mov
and
loop
out
jb
ljmp
sti
adc
pop
hlt
add
jae
jb
mov
cmc
mov
adc
aam
cmp
cmp
push
popa
into
mov
cmc
aad
sbb
pop
ljmp
stos
sub
jge
lds
sbbl
jg
xor
divps
shl
push
leave
les
xchg
out
loopne
mov
int
push
sti
icebp
hlt
jbe,pt
hlt
mov
jmp
cmp
fcmovbe
imul
loopne
lods
push
pop
addps
pop
push
fiaddl
rcl
rol
sahf
fnsave
xor
outsl
or
mov
aaa
data16
insl
sub
jecxz
movsb
in
stc
cmc
sbb
sbb
jmp
pop
cltd
pop
xchg
dec
push
popl
stos
xor
inc
mov
sarb
mov
aam
stc
scas
outsl
xchg
lcall
enter
sub
aam
ljmp
push
pop
addl
sbb
mov
and
jecxz
jl
dec
cmpsb
fs
hlt
and
test
es
push
stc
movaps
mov
push
jnp
push
fildl
icebp
or
std
es
inc
mov
mov
dec
bt
cltd
xor
sub
pop
test
sub
or
cltd
gs
xlat
adc
sbb
xchg
push
addr16
test
sub
insb
popa
loopne
daa
add
mov
andl
xor
inc
dec
inc
aaa
add
cmpsl
xor
les
push
mov
xchg
add
xor
xchg
lea
data16
ja
int3
pop
push
pusha
inc
or
int3
ss
jae
fld
xchg
mov
cmc
add
adc
sbb
or
test
xor
mov
fadd
dec
ds
jmp
mov
cmovnp
jge
push
int
lods
jmp
imul
adc
adcb
bound
or
in
mov
dec
out
cmp
andl
dec
stc
inc
push
dec
sbb
sbb
or
xchg
adc
cwtl
add
sbb
jne
lock
jge
cmpsl
insb
fbstp
dec
fidivrl
fwait
bound
mov
cmp
or
loop
insl
pop
notb
lret
jb
loop
pusha
outsb
mov
jnp
fwait
std
lock
cli
in
sub
adc
pusha
gs
jne
test
push
dec
fwait
ljmp
push
push
inc
shrb
xchg
cmp
jl
popf
mov
xchg
cmc
jae
pop
in
pop
fsubr
imul
leave
dec
repnz
mov
push
lahf
jbe
rol
movsb
stos
cli
shld
push
and
mov
pusha
dec
data16
das
jns
xchg
sarl
push
stos
ja
push
outsb
in
ret
mov
ficomps
jae
xchg
jae
dec
outsb
insl
arpl
push
push
ds
fnsave
mov
push
popa
lds
in
xor
mov
mov
add
inc
je
push
iret
decb
stc
xor
and
iret
loopne
mov
repnz
notb
xchg
cwtl
and
cmp
test
inc
sbb
jg
sbb
lcall
iret
mov
stos
jmp
js
mov
movsl
aaa
in
out
lods
adc
jmp
rcl
push
pop
insb
inc
gs
inc
scas
add
repz
sbb
jb
bound
mov
mov
add
divb
push
orb
and
push
inc
imul
xlat
das
movsb
aaa
pop
icebp
nop
adc
cltd
xor
push
enter
cmp
pop
jmp
pushf
lds
mov
popa
out
sub
and
pop
cld
dec
lahf
inc
cmp
xchg
jne
mov
inc
in
jl
xchg
push
xchg
and
rorl
push
cmp
adc
cmp
jno
and
das
fdiv
mov
xlat
cli
adc
mov
sub
xchg
mov
mov
fsubrs
xor
and
mov
cmpsl
and
lret
test
fistpl
sub
fwait
xor
xchg
cmp
loop
jne
mov
aad
jo
das
jg,pn
je
dec
das
jecxz
outsb
inc
fmul
leave
stos
add
jecxz
mov
clc
out
arpl
xchg
push
mov
cmpsb
mov
add
lcall
ret
add
test
fimull
aaa
out
jo
sbb
mov
jg
sarb
inc
in
cmp
ljmp
adc
into
add
lret
mov
mov
sbb
int
insl
mov
add
pop
mov
sbb
incl
adc
popf
insl
cs
cmc
or
fchs
cli
int
sbb
sub
dec
cltd
mov
jo
in
int
cmp
loope
sbb
das
inc
mov
jge
movl
shll
sbb
pop
push
iret
mov
loopne
call
es
jl
call
mov
add
nop
push
pop
ds
xor
int
xchg
ret
rolb
sub
mov
pop
fnstsw
and
mov
adc
fstl
jmp
rcrl
adc
les
mov
xor
and
push
inc
and
iret
mov
outsl
jmp
outsl
out
sbb
std
out
leave
ret
mov
dec
ret
pop
mov
fsts
daa
clc
data16
cltd
cmpsb
lods
sub
jp
sbb
push
sub
fisttpl
pop
bound
imull
enter
jl
mov
in
xchg
push
in
and
sbb
mov
push
in
ljmp
sbb
mov
add
add
ljmp
cmp
sub
cld
jmp
cmp
sbb
addr16
xlat
loopne
lods
xchg
loope
sbb
inc
jmp
and
sti
imul
inc
inc
push
dec
subl
sti
int3
enter
out
adc
je
or
ss
fwait
adc
cwtl
repnz
push
icebp
out
movsb
aas
mov
dec
aas
add
jns
in
push
jns
mov
jle
inc
popf
popf
jno
and
xchg
add
in
sub
repnz
mov
xor
sub
arpl
scas
mov
ljmp
cmc
adc
pusha
dec
addr16
cs
push
cltd
addr16
xchg
inc
fwait
aaa
mov
inc
or
mov
push
in
aam
cmp
dec
mov
cmp
jb
xchg
mov
jo
mov
push
aad
xor
aad
cmpsb
sub
sarb
scas
inc
mov
inc
mov
data16
sbb
lock
inc
addr16
cmp
aad
cmpsb
or
fimull
adc
test
addl
push
ja
ljmp
bound
mov
pop
push
sub
fs
jbe
sbb
and
dec
fs
push
data16
mov
sub
sub
das
aas
test
data16
lea
ss
sti
jmp
aas
test
jmp
in
mov
cmp
jb
jb
xchg
inc
test
call
and
push
pop
or
or
pop
addr16
jl
rorb
mov
mov
inc
dec
in
es
push
pop
aas
stos
pop
mov
repz
xor
inc
enter
adc
int
cwtl
add
std
lds
jbe
xor
push
imul
mov
cmpsl
push
mov
add
adc
pop
pop
jle
jl
fwait
xchg
cmp
add
nop
cmpl
test
dec
sub
aas
jl
inc
xchg
hlt
imul
mov
mov
dec
push
jns
or
repz
sbb
adc
in
inc
movsl
cmc
push
js
ja
mov
fbld
add
jmp
or
sahf
sbb
cmc
cmp
fists
dec
mov
cmp
test
es
sub
mov
add
lahf
fdivl
cltd
mov
dec
dec
mov
jo
mov
notb
out
outsb
aas
lods
cltd
and
push
mov
sub
enter
add
xchg
incl
movsl
daa
sahf
dec
pop
cmpsl
cmpsl
or
inc
lods
repz
je
sbb
imul
jne
loopne
clc
bswap
adc
orl
shlb
or
lret
jge
sbb
iret
xchg
lret
test
push
aas
std
inc
cmp
in
popf
xlat
and
fs
in
js
cltd
sub
and
jl
and
shll
jne
dec
fsts
pop
xlat
in
popa
adc
mov
add
lds
ljmp
inc
or
mov
mov
sbb
mov
jae
sbb
cmpsb
loop
je
fdivrl
cmp
clc
fwait
bound
test
std
jecxz
sahf
adc
jp
mov
adc
pop
daa
ljmp
insb
sarl
das
pop
or
imul
mov
addl
xor
into
stos
iret
into
aaa
add
mov
add
mov
inc
outsl
jl
lds
and
jmp
mov
push
jmp
mov
ja
outsb
push
aaa
push
xor
sub
jge
mov
test
inc
into
mov
iret
inc
pop
xor
adc
bound
out
sbb
sub
cs
pop
sti
js
jb
imul
xchg
mov
pop
mov
rorl
sbb
lcall
jno
mov
ds
mov
out
xchg
sbb
dec
cmp
movsl
or
or
jmp
sub
fists
into
mov
in
dec
inc
jmp
mov
popf
cmc
lock
in
stos
loop
ljmp
jl
push
push
lahf
xor
mov
jp
mov
inc
sbb
testb
mov
aas
dec
inc
jg
out
inc
scas
xor
push
dec
js
cmpsl
movsb
movsl
pop
mov
dec
sub
mov
and
mov
outsl
mov
add
jmp
mov
fisttpl
cmp
xor
pusha
mov
movsb
xchg
mov
clc
mov
mov
insl
inc
hlt
or
sarl
inc
and
adc
dec
mov
rorb
mov
lods
movsb
ret
xchg
or
push
les
pop
pop
gs
dec
or
inc
out
sub
loop
ljmp
int3
mov
xor
popf
out
add
lods
test
mov
push
stos
fs
sub
inc
mov
out
inc
push
push
mov
stc
ret
mov
mov
dec
lea
shlb
rorl
fsubrs
add
mov
add
loope
xchg
mov
test
jle
jno
xor
lret
in
fs
mov
mov
fsubrs
pushl
rorl
inc
out
shlb
shll
imul
or
les
xchg
or
or
ja
das
mov
mov
cmp
pop
jecxz
or
dec
cwtl
add
cmovle
fidivs
imull
aas
fldcw
aam
sbbl
addr16
shlb
testb
or
xor
repnz
lods
xor
mov
nop
pop
cmpsl
cmp
jmp
inc
pop
xchg
test
fisubrl
sahf
in
jae
sbb
lret
in
cltd
icebp
loop
cmpsb
or
mov
icebp
andl
add
fs
mov
insl
xor
pop
add
adc
repz
sbb
push
and
lcall
lods
or
mov
mov
cld
test
std
jmp
inc
cmc
mov
loopne
xchg
loop
xor
test
push
in
sbb
jge
dec
lods
imulb
and
push
jne
test
cmp
pop
add
outsl
loopne
mov
sti
cmp
xor
int3
pop
mulb
in
shrl
rorl
mov
push
inc
test
jo
sub
sbb
inc
mov
adc
ss
call
mov
movsl
sahf
ss
jae
repz
xor
cmc
jecxz,pn
dec
ja
fbld
notb
mov
gs
mov
inc
cltd
inc
push
or
lahf
push
in
fwait
jb
xor
js
pushf
lahf
push
repz
xchg
jns
and
mov
xor
or
out
push
out
sbb
pop
push
jns
pop
mov
hlt
aad
pop
mov
imul
mov
xchg
cmpsb
cwtl
mov
xchg
inc
inc
cmpsb
lret
mov
pop
int
xchg
inc
lret
lahf
test
adc
decl
xor
pop
xchg
daa
xlat
xor
hlt
or
sbb
imul
stos
aad
inc
xchg
fucomp
shlb
mov
cs
js
fnsave
adc
inc
add
push
ds
clc
mov
sub
push
sti
sbbl
andl
push
cmpsb
std
mov
repz
mov
daa
fsubl
push
cmc
push
dec
fnstcw
xchg
jo
les
xor
push
mov
add
push
mull
scas
out
popa
aam
push
addr16
jg
push
jle
mov
sub
jno
cmp
push
test
mov
inc
rclb
sti
outsb
fsub
inc
loope
pop
cli
xchg
hlt
cmp
xor
cmp
dec
bound
sub
ds
mov
or
loop
mov
ljmp
and
leave
or
jl
pop
dec
cmp
mov
dec
lret
rcr
das
insb
inc
mov
mov
das
dec
loopne
jno
insb
nop
nop
pushf
outsl
push
and
inc
sbb
imul
shl
lds
jnp
stos
add
xlat
xchg
int3
adc
push
mov
test
ss
jmp
xchg
int
xchg
jne
addr16
in
es
cltd
cmc
pushf
xor
pop
aam
test
mov
jae
xchg
cmpsl
fisubs
sbb
xchg
addb
jns
jg
movb
inc
shrl
adc
mov
popa
mov
add
popa
shlb
andl
lds
mov
gs
pushf
dec
sub
insl
mov
ror
std
push
mov
daa
das
cmp
or
nop
ja
and
mov
lds
xchg
cmp
stos
mov
xchg
outsb
divl
dec
sub
mov
clc
iret
mov
sarl
stos
mov
dec
roll
data16
out
push
pop
rcrl
lods
sbb
dec
mov
adc
fstps
lret
cs
cwtl
or
iret
jb
stc
and
lret
jnp
mov
add
jmp
in
push
dec
or
insb
mov
mov
mov
cltd
andl
mov
inc
or
test
sbb
jge
ja
ret
push
divb
jecxz
sub
mov
mov
mov
and
pop
orb
or
cltd
test
mov
sbb
movsb
bound
cmpsb
cltd
inc
mov
outsb
and
popf
inc
jecxz
std
out
pop
leave
xchg
subl
xor
adc
lods
jo
sbb
enter
jp
pop
xchg
adcl
push
inc
cmp
or
and
dec
sub
mov
xchg
sar
jp
add
mov
or
or
sti
sub
cmp
fdivl
sbb
pop
mov
mov
scas
xor
xchg
mov
inc
fisubs
sub
shrl
inc
push
loope
jnp
jb
ficompl
adc
ret
movsb
cmp
inc
sbb
imul
das
test
xlat
mov
mov
jns
imul
xor
fcomps
push
adc
jno
bound
outsb
ljmp
mov
sub
push
jecxz
mov
pop
nop
and
fdivl
out
fcoms
inc
popa
sub
dec
daa
in
sbb
loopne
jg,pn
lcall
push
mov
adc
cmp
dec
adc
mov
xchg
dec
inc
pop
mov
in
push
push
je
and
sbb
mov
punpcklwd
into
fmul
subw
sub
xchg
sbb
stos
mov
inc
pop
cmpsb
call
sbb
sbb
imul
cmp
loopne
push
ss
or
in
out
add
cmp
cmp
cmp
or
popf
out
iret
aad
cmp
dec
arpl
push
cmpsl
pop
and
sti
inc
mov
fs
inc
sbb
fucom
aam
fidivrs
hlt
jg
xchg
fwait
or
out
jno
das
js
imul
add
pusha
sbb
mov
add
mov
lods
sub
into
dec
cmp
inc
dec
adc
inc
jns
cmp
sbb
sbb
dec
dec
jbe
jb
cmpsl
les
xor
mov
ss
clc
aad
adc
loope
add
je
push
xorb
jmp
mov
xlat
test
dec
ds
or
aam
mov
mov
mov
xchg
lds
test
insl
push
clc
inc
sbbb
mov
sub
popa
mov
dec
add
and
pop
stc
daa
sbb
push
cmpsl
xchg
orb
test
scas
mov
and
push
daa
in
orl
loop
outsl
flds
dec
and
inc
leave
mov
dec
int
ss
cld
into
xchg
push
ficoml
fs
push
in
push
adc
jge
cmp
lcall
in
xor
and
int
shl
iret
mov
mov
dec
hlt
push
or
mov
xor
cmp
imul
test
adc
or
hlt
clc
and
cmp
es
jmp
shll
mov
fwait
jae
cmpsb
lret
pusha
mov
xchg
aam
lock
popa
xchg
ret
mov
push
loop
xor
inc
pusha
add
lcall
dec
and
test
sub
mov
filds
rclb
xchg
cli
mov
stos
mov
cmpsl
inc
fisubrs
es
hlt
imul
jo
fwait
aas
jp
mov
enter
jb
nop
and
not
int
je
call
xor
bound
icebp
adc
add
sub
ficoms
movsb
out
dec
rolb
fsts
lds
arpl
js
cltd
shll
sbb
dec
scas
mov
pop
pop
in
mov
push
jno
adc
test
dec
and
pusha
sub
push
xchg
movsb
add
mov
daa
xchg
jp
jne
and
mov
jmp
mov
lret
jbe
aad
addr16
add
imul
and
call
add
jbe
pop
mov
dec
sbb
inc
sahf
ds
pop
pop
mov
scas
or
outsb
push
daa
xchg
in
and
sbb
sub
jbe
jecxz
mov
andb
or
popa
mov
fimull
mov
andb
push
fistpl
repnz
ds
and
mov
mov
stos
cmpsl
mov
push
inc
push
add
jecxz
jmp
push
adc
mov
outsl
push
adc
pop
rcrb
inc
popa
ljmp
lahf
outsb
cltd
mov
push
mov
jl
arpl
shrl
jp
stos
add
pop
mov
nop
and
xor
inc
xor
sub
mov
js
dec
lret
add
dec
mov
je
xor
mov
xor
or
xlat
adc
test
pop
rcrb
mov
cli
cmp
jae
jl
loope
ja
pop
fistps
movsb
int3
or
leave
cmp
incl
pop
es
push
out
not
mov
add
mov
sub
stc
cmpb
mov
ret
filds
jl
cmpsb
jecxz
mov
fsubrp
cmovbe
push
into
or
loopne
roll
xor
or
cmp
sub
in
sbb
add
js
adc
imul
push
stos
inc
movsl
jo
xchg
and
add
jp
lods
lret
cli
dec
sbb
sub
out
aam
outsl
push
push
add
xlat
inc
and
filds
scas
in
sar
and
and
std
jnp
mov
repnz
fidivs
in
jl
cmpsb
jbe
in
outsb
cmp
out
sti
push
and
dec
cmp
cmpsb
pop
pushf
dec
leave
iret
adc
call
pop
or
sub
mov
clc
cltd
mov
imul
lret
push
stos
dec
pop
mov
push
fucomi
ret
fadds
lret
test
push
jne
ja
adc
icebp
mov
push
fcoml
mov
adc
dec
mov
outsb
xor
repnz
or
mov
pop
dec
sub
mov
pushf
das
cwtl
ret
push
jnp
scas
mov
lods
js
add
icebp
lcall
xor
fnsave
xchg
push
in
inc
mov
loope
pusha
addb
cmp
mov
mov
sub
ret
push
add
leave
mulb
mov
cmp
int
xlat
mov
lods
in
test
lds
xchg
mov
mov
xchg
scas
xchg
arpl
sti
pop
push
mov
mov
jle
je
lcall
data16
fbstp
inc
and
jno
adcb
call
lea
lock
xchg
stc
fsubrl
push
push
sti
test
push
mov
fs
ret
sahf
adc
adc
bndldx
mov
mov
sbb
aam
shrl
loop
mov
dec
push
mov
xchg
lret
popa
push
cmpsl
adc
or
jno
ljmp
shll
jle
lods
xor
and
sub
outsl
jle
sub
test
loopne
mov
or
ja
imul
mov
into
mov
loopne
jge
lahf
ss
jbe
mov
cltd
movsl
mov
mov
data16
xor
clc
sti
hlt
pop
test
xchg
pop
fisttpll
sub
inc
mov
pop
inc
or
scas
jns
and
in
xchg
cwtl
jge
int3
repnz
xorl
push
jg
cmpl
movsb
dec
scas
sbb
cmp
out
dec
jo
mov
shrb
loope
mov
xchg
xchg
mov
lret
jge
xor
ljmp
fidivrl
mov
mov
or
jne
jbe
pop
mov
loope
mov
dec
jle
fwait
es
push
add
dec
cmp
ret
aad
fistpll
lds
nop
mov
test
mov
idivb
shlb
add
add
pop
jnp
in
xor
test
pop
pop
jne
sub
xchg
and
sub
rorb
in
dec
rclb
leave
shll
push
pushf
scas
call
jp
popa
sub
adc
add
ret
mov
fmull
cmp
cltd
movsb
or
aaa
rolb
mov
syscall
xchg
sub
outsl
sbb
mov
xlat
mov
gs
arpl
cmpsl
push
mov
push
xor
in
repnz
mov
or
fisubrs
dec
push
sub
das
inc
in
inc
cmpsl
loope
ljmp
in
ret
jp
outsl
jae
iret
test
fsub
mov
jmp
xchg
js
jne
xor
inc
mov
ja
fcmovnu
sub
mov
popf
fmull
test
adc
sbb
dec
cmpsl
das
cmp
or
test
jmp
inc
jo
into
jns
imul
sub
mov
lcall
cmp
inc
xor
lahf
mov
mov
xor
leave
cwtl
sbb
lds
sbb
adc
push
or
jecxz
cmp
lret
jb
jg
pop
int
sbb
andl
or
adc
dec
and
hlt
insb
inc
mov
mov
sub
nop
pop
fildll
mov
fildl
es
lods
btr
fdivr
insl
out
xchg
cmc
push
mov
test
xor
adc
aas
mov
cld
pop
popf
stos
int3
lock
add
out
and
gs
sahf
cmp
jge,pt
push
or
dec
mov
jno
push
popa
in
lods
lods
in
cmpsl
inc
jo
mov
rcl
xor
xor
pusha
and
out
push
fwait
loopne
dec
cwtl
pop
mov
daa
and
or
pusha
orl
mov
adc
test
adcl
add
push
scas
mov
les
pop
data16
or
ret
outsl
inc
xchg
cld
adc
adc
pop
jg
push
mov
xor
loopne
imul
mov
out
xchg
push
pop
loope
mov
repz
movsl
repnz
jo
sbb
je
insl
and
push
pop
dec
pop
out
fs
or
xor
inc
arpl
aaa
repz
popf
rcr
pushf
ret
ds
das
or
xchg
mov
int
adcb
fwait
xchg
out
mov
and
or
adc
je
dec
scas
inc
sbb
adc
push
lret
mov
nop
outsl
pop
nop
test
mov
sbb
add
aas
and
repz
dec
cwtl
push
adc
xor
insl
add
popf
pop
das
fimull
jg
pop
test
xchg
and
les
dec
ljmp
pop
jo
das
xchg
mov
stos
fdivr
int
push
fiaddl
into
pushf
mov
out
mov
movsl
stos
jp
pop
xchg
in
imul
adc
lret
hlt
out
aaa
dec
fwait
dec
push
sbb
in
in
push
imul
movsl
sub
loop
ljmp
pop
arpl
jbe
adc
mov
jae
leave
ficoml
pop
cmp
sbb
mov
cmp
shl
mov
mov
into
inc
cmc
bound
aad
out
mov
and
adc
push
loopne
in
mov
in
bound
or
addr16
sbb
add
push
and
imul
or
aaa
data16
pop
wrmsr
jo
mov
pop
stos
iret
loopne
int3
push
divb
int
lock
add
movsl
xchg
jns
jns
loope
cld
push
xchg
mov
mov
test
loopne
xor
push
cwtl
cs
pop
test
daa
lcall
pop
xchg
subb
scas
imul
decb
push
or
jbe
sub
cmp
fadds
hlt
push
xor
outsb
jg
leave
int3
add
inc
stos
xor
mov
test
jb
mov
xchg
and
sbb
stc
cwtl
mov
aas
jge
mov
xlat
sbb
rorl
jno
cmp
cwtl
xchg
shll
loop
xchg
stc
adc
cmp
scas
std
je
iret
out
movsb
in
bound
sbb
hlt
pushf
sbb
push
cmpsb
scas
xchg
mov
cmp
int
pop
dec
stos
inc
mov
stos
cli
in
cmp
xchg
stc
int3
data16
adc
mov
mov
add
enter
jbe
mov
sbb
jno
call
ss
data16
sub
lret
iret
push
adc
xchg
or
adc
cmp
inc
bound
mov
xchg
cmpsb
add
add
inc
push
pop
jp
insb
mov
push
insl
popa
inc
popf
cmc
dec
cli
dec
and
push
jp
xchg
arpl
jo
psrlw
loop
cs
and
and
pop
pushf
stc
inc
fs
repz
mov
inc
insl
je
lods
aaa
adc
dec
fwait
or
inc
call
mov
ret
dec
sub
icebp
loop
mov
enter
in
or
or
rcrb
mov
mov
jno
lret
ljmp
in
xor
pushf
pop
cmpsl
fsubrp
cmp
add
movsb
mov
outsb
dec
lds
sbb
xor
mov
and
inc
cmc
add
dec
sarl
fstps
mov
xchg
lret
adc
cmpsl
lcall
aam
aas
add
mull
cmp
das
jne
imul
pop
dec
js
cwtl
jns
aad
jmp
sub
inc
add
movsb
adc
add
pop
sbb
out
dec
xchg
push
mov
push
out
push
test
cwtl
inc
insl
ljmp
test
fsubs
inc
sarb
lods
rcl
insb
sub
in
lods
jg
lock
inc
loop
jmp
mov
imul
ret
dec
xor
stos
xchg
push
fucomp
mov
ret
pop
mov
jmp
addl
cmp
push
xchg
jl
sarb
repnz
test
and
cld
pop
shrd
pop
stc
xchg
mov
add
lret
jmp
xchg
and
xchg
sub
xor
ret
aad
sub
and
and
lret
lret
leave
aas
iret
and
mov
jle
out
aam
in
insl
inc
test
fimull
daa
sub
jge
insl
jl
lds
sbb
cmp
insb
pusha
dec
push
outsl
dec
jb
add
ljmp
pop
cmp
push
fs
cmpsb
ljmp
addb
add
inc
and
xor
cmpsl
dec
pop
mov
aad
insb
mov
mov
jo
mov
int3
insl
push
pushf
dec
jnp
ret
js
sahf
fisubl
push
cld
mov
pop
mov
lds
cmpsb
inc
test
xor
rcrb
sbb
pop
jmp
mov
xor
mov
sub
or
sbb
bound
test
lock
xchg
sbb
mov
imul
add
js
mov
jns
sub
popf
icebp
stos
mov
jae
fnstcw
mov
lods
fbld
leave
adc
sbb
mov
sbb
sub
push
adc
scas
aad
inc
inc
sub
xor
lods
mov
pop
push
lret
jbe
sbb
add
sahf
cmpsl
repnz
and
es
cmp
cmpsl
pop
ficoms
cmp
test
and
and
aaa
mov
aaa
loope
xchg
fiadds
adc
inc
cmpsl
stc
ljmp
jae
xchg
jb
fs
xor
fbstp
lret
mov
cmp
sbb
jns
fists
fildll
xor
inc
in
pop
xor
fdivs
pop
jae
pop
inc
jbe
das
test
xchg
lock
ret
add
subps
dec
inc
jp
sbb
lea
dec
insl
aam
ss
push
inc
mov
mov
sbb
loope
pop
push
call
jp
arpl
lock
mov
lock
push
cmp
test
lret
adc
cltd
in
lea
insl
jl
adc
pop
mov
sarl
inc
gs
mov
fistpl
pop
test
add
in
dec
inc
and
or
cmp
je
mov
sub
into
stc
xor
xchg
or
sbb
incl
dec
shrl
lods
or
and
inc
imul
sbb
and
xlat
les
fstpt
cmp
xchg
ljmp
push
es
cmc
mov
scas
pop
and
mov
mov
jmp
rcrb
test
out
mov
xor
cmp
adcl
ret
pop
roll
lods
je
in
inc
push
push
loop
imul
loopne
fidivrl
in
cltd
inc
aas
sbb
inc
xor
int3
or
ficomps
cmp
scas
inc
inc
test
fildll
mov
pop
push
inc
shll
cmp
and
xor
scas
iret
adcl
rcrb
inc
mov
insb
mov
inc
loop
push
cmp
fisubrs
xchg
mov
cmpsl
xchg
lahf
outsb
and
shrb
cwtl
jns
les
inc
sbb
mov
std
stc
aad
stos
pushl
cltd
hlt
std
push
sub
sti
movsb
aaa
inc
shlb
adc
push
out
mov
pop
scas
ret
mov
cwtl
adc
mov
pop
inc
jecxz
pop
call
mov
or
pop
mov
in
jo
cmpsb
popa
icebp
stc
mov
stos
xlat
dec
sarb
adc
enter
out
cmc
and
cmc
dec
xlat
dec
dec
in
cmpsb
or
into
inc
jl
jb
mov
sub
sbb
inc
mov
jmp
es
mov
mov
xchg
fwait
out
add
out
xchg
shrl
stos
mov
cmp
enter
addr16
js
add
repz
les
aaa
or
mov
sbb
aad
cmc
push
in
shll
jbe
push
lret
bound
daa
sub
push
loopne
jns
jno
test
add
mov
jl
mov
gs
xchg
js
adc
sbb
xor
xchg
xchg
movsl
popa
ss
ret
sub
fldenv
cli
into
pop
inc
fsubs
or
imul
scas
je
cmpsl
xchg
rcll
xor
outsl
xor
decb
pop
dec
fcoml
lods
and
ret
and
cmp
dec
dec
leave
or
incl
fmuls
push
jne
mov
pop
jno
inc
outsb
sub
enter
jmp
test
ljmp
iret
adc
nop
mov
sub
or
out
adc
jle
sub
cmpsb
dec
dec
in
mov
sub
stos
jb
fbstp
and
jae
or
cmp
insl
xchg
jl
in
cltd
fsts
dec
sbb
pushl
jne
movsl
push
pop
outsl
faddl
arpl
xor
cmp
dec
cmp
jge
into
mov
pop
iret
adc
outsl
sbb
or
xchg
push
mov
mov
movsb
loopne
arpl
dec
dec
pop
add
mov
sbb
in
dec
pusha
std
popf
lock
fdivs
dec
shrb
sub
pop
inc
mov
add
fs
out
mov
mov
sbb
inc
or
cmp
inc
lods
push
in
mov
dec
add
xchg
xchg
jbe
in
mov
and
jg
lods
rol
test
dec
push
fdivrl
in
mov
dec
fiadds
mov
cld
test
push
or
subps
inc
mov
push
push
outsl
push
int3
stos
into
popa
push
inc
mov
stos
jnp
sbb
or
cmp
rolb
sub
jl
aaa
sub
inc
aam
in
jecxz
jge
shlb
xor
imul
push
mov
gs
add
push
sub
ds
mov
add
dec
and
fiadds
repz
dec
mov
scas
cmp
insl
ret
pop
or
fisttpl
cmp
pop
shlb
xor
xchg
js
aam
jmp
push
push
ret
sbb
and
dec
push
and
jp
mov
mov
fdiv
loop
sub
jnp
mov
jnp
cwtl
mov
mov
push
in
xor
dec
jecxz
add
out
ljmp
xchg
roll
outsl
iret
lret
mov
jbe
test
jnp
jno
jb
pop
loop
cmp
dec
out
loope
ret
pusha
dec
das
iret
and
push
hlt
cmpsl
cmpsl
lock
pop
inc
dec
and
pushf
les
fmull
dec
xchg
push
fiadds
xchg
insl
jbe
imul
pop
fbld
arpl
stos
jg
sbb
xchg
sbb
leave
add
stos
orb
js
mov
inc
cmc
jne
push
out
push
xor
or
push
add
add
js
out
mov
dec
jnp
sbbb
jl
push
les
inc
push
dec
mov
out
cli
mov
pop
mov
push
push
int3
mov
xchg
test
or
pop
pop
orl
out
cmpsb
xchg
in
gs
cmp
lea
testl
or
inc
sbb
cmc
cmp
cld
push
imul
jno
mov
inc
daa
mov
jno
sbb
adc
xor
dec
outsl
mov
shrl
pusha
or
xchg
lea
cmp
xorl
xchg
add
add
xchg
push
push
pop
filds
push
les
loop
loope
xchg
mov
xchg
lret
lret
pop
cwtl
pusha
pop
mov
sub
out
xlat
js
into
jg
inc
jae
cmp
sbb
jp
pop
xchg
mov
dec
daa
pop
movsb
cmp
inc
lods
push
fmuls
mov
xlat
jns
popl
mov
ret
pop
clc
xchg
mov
mov
test
mov
test
xor
push
xchg
jbe
fdivrl
adc
into
cmp
add
out
or
xlat
sub
xor
xorl
add
and
xchg
adc
daa
in
inc
mov
sti
stc
cld
xchg
adc
int
jns
fsubrp
mulb
xchg
fcoml
pop
test
addr16
adc
in
aas
adc
bound
aad
ds
fdivrp
nopl
xchg
fs
or
fisubrl
or
jns
mov
or
mov
je
jne
jg
push
rcl
fstpt
ret
ss
or
scas
and
jg
push
cld
insl
ss
push
nop
mov
mov
cmp
push
and
xchg
jg
out
fnsave
push
loopne
ss
pusha
insl
js
dec
into
cmp
mov
xor
push
ljmp
mov
dec
mov
xchg
jbe
loopne
aaa
data16
lea
outsl
in
pop
movsl
sarl
lods
movsl
xchg
mov
push
mov
adc
inc
mov
rorl
orb
daa
in
out
lods
push
add
mov
cmp
mov
mov
lods
repz
xlat
and
sti
inc
push
adc
ss
ljmp
xchg
call
xchg
leave
imul
aaa
out
cmp
int3
mov
pop
movsl
or
add
jg
mov
dec
scas
xchg
out
dec
xchg
xchg
sub
stos
mov
and
hlt
adc
or
out
aam
fldcw
pusha
lock
xor
out
fsubrs
insl
cmp
inc
or
aad
sbb
mov
in
and
inc
in
pop
imul
ror
mov
or
test
add
adc
pop
movsl
xor
add
pop
in
or
inc
es
int3
xchg
mov
icebp
push
jecxz
jg
enter
cwtl
rol
pushf
and
mov
data16
xchg
dec
stos
add
addl
pushf
in
dec
push
xor
or
cmp
mov
jo
sub
mov
insl
in
cmpsb
push
fidivs
mov
ficoms
sbb
call
jb
mov
cmc
mov
clc
leave
push
jne
std
fnstcw
mov
in
outsl
pusha
jmp
int3
rcll
and
jo
jmp
fcmovbe
out
je
rcrl
xor
das
jecxz
ljmp
aas
and
or
cmp
test
sub
es
cmpl
shrl
or
cwtl
or
hlt
or
shlb
mov
sarl
mov
mov
je
in
mov
aaa
test
mov
xor
test
loope
cld
out
stos
into
and
pop
pushf
popf
subl
test
xor
mov
loopne
mov
lret
inc
dec
xor
push
mov
fs
jle
pop
push
add
mov
and
fxch
xor
mov
jae
loop
lea
ds
insb
jbe
fcmovb
xchg
lret
fistpl
mov
adc
and
xor
js
ljmp
rclb
or
sahf
pop
push
ret
sahf
in
and
cwtl
test
neg
out
shrl
loop
jmp
or
stc
pop
push
cmp
lret
and
sbb
test
cmp
push
push
std
dec
mov
stc
sbb
pop
out
lahf
lds
std
adc
mov
or
push
movsl
cmp
dec
pop
adc
mov
sbb
and
push
xchg
add
shll
insl
push
sub
test
into
aam
into
out
push
arpl
adc
xor
imul
stos
adcl
out
bound
orl
pop
jns
cli
outsl
mov
xchg
inc
fiadds
xchg
dec
xchg
popf
cmp
mov
and
push
das
sbb
fs
pushw
loope
mov
sub
dec
lret
faddl
rol
sub
sbb
lret
cmp
adc
sbb
in
lcall
andb
fdivl
cmp
mov
mov
popa
stc
into
cmp
gs
xchg
pushl
cmpb
pop
cmp
enter
mov
adcb
xchg
xor
shlb
neg
push
mov
je
iret
mov
int
in
lret
lcall
mov
jg
loope
inc
mov
push
push
insb
jb
dec
icebp
inc
nop
lock
xchg
negb
mov
cmp
lcall
inc
xchg
cmpsl
mov
mov
clc
xchg
xchg
test
cld
mov
mov
loop
out
cmp
push
sti
sub
in
adc
xchg
cli
es
flds
mov
test
jg
sub
cmp
js
icebp
lock
add
mov
lret
in
movsb
cmc
or
xchg
je
fidivrl
pop
fistl
push
sub
repz
or
adc
ja
out
orl
enter
cltd
popf
mull
fdiv
test
in
push
dec
rolb
aam
in
mov
pop
dec
fwait
shlb
test
mov
insb
popa
enter
bswap
sbb
loopne
fldenv
cli
push
mov
mov
push
push
imulb
fs
daa
stos
adc
shl
pop
out
iret
out
xlat
cmp
xor
or
push
xchg
iret
jle
or
lea
les
in
aaa
andl
cltd
imul
mov
xchg
nop
out
adc
push
jle
jbe
rolb
jg
sub
pop
mov
cltd
or
xchg
inc
imul
movsl
mov
adc
adc
and
out
dec
out
stos
out
out
into
dec
ljmp
adc
movaps
std
ss
pusha
bound
pop
jb
hlt
mov
and
fdiv
popa
pop
sahf
inc
inc
lock
sbb
and
mov
test
sbb
inc
push
xchg
cmc
sub
lock
outsl
inc
mov
in
adc
jl
pop
es
mov
pop
mov
pop
cmp
test
pop
mov
push
add
adc
sub
lods
js
pop
movl
xor
imul
push
or
scas
mov
enter
sti
sbb
aas
int
lods
outsl
fildl
and
jmp
negl
mov
test
ja
dec
in
mov
lahf
mov
shl
ret
push
xor
or
mov
lds
hlt
and
insb
iret
dec
cmpsb
or
and
push
je
jmp
std
ret
pop
dec
lahf
mov
outsb
lea
scas
sub
loope
jmp
add
sbb
add
xor
mov
roll
shrl
sar
popf
stc
outsl
jmp
fmul
sub
push
xor
push
aam
mov
popa
jnp
loopne
addb
fwait
sbb
lahf
push
mov
adc
cmp
fistps
mov
and
loop
xor
and
xchg
adc
cltd
sbb
inc
dec
and
pop
in
sub
lock
pop
std
shrl
cmp
movsl
into
push
xchg
cmp
in
jo
sbb
inc
movsl
xchg
and
imul
push
idivb
xchg
and
push
jmp
cmpsb
push
fdivrl
cmp
xor
and
enter
jb
outsl
nop
das
in
inc
popf
cmp
fisubrs
pop
add
jl
stc
into
pop
inc
mov
and
jns
bound
pusha
xor
cmp
bt
mov
mov
data16
xor
and
out
mov
fs
mov
shl
xchg
mov
repnz
inc
pop
add
inc
pop
inc
lods
xlat
mov
push
or
test
call
push
sub
addr16
insl
dec
lahf
mov
lret
push
jle
ljmp
dec
mov
cwtl
jmp
icebp
ljmp
cmpb
shrb
pop
mov
fwait
cmp
and
adc
cmp
idivb
lret
push
xchg
aas
je
popf
xor
adc
jns
pop
adc
das
mov
je
pushf
cmc
push
push
xchg
dec
jbe
loope
inc
insl
sub
and
stc
sti
pop
es
add
jo
fbld
fists
cmp
lds
insl
jb
mov
sahf
jne
aas
in
cmp
inc
fistpl
xchg
pop
adc
repnz
push
push
test
and
iret
cmp
mov
fwait
mov
sub
or
xorb
lods
ljmp
in
jl
in
adc
or
inc
or
mov
sbb
inc
sbb
or
insb
xor
stc
cmpb
push
dec
bound
idiv
cmp
mov
pop
xlat
mov
jl
popa
cmp
stc
out
dec
or
fwait
gs
lret
enter
pop
rcll
cli
std
lds
test
in
pop
in
inc
adc
fdivl
jle
rorb
xchg
or
lret
pop
out
jbe
les
sbb
mov
mov
js
xor
push
lods
adc
outsl
jmp
cmpl
cld
scas
cmp
and
fdivs
dec
mov
or
adcb
int3
imul
data16
push
leave
jbe
in
sti
sbb
cmp
daa
mov
nop
ja
pop
insb
inc
stos
sbb
pop
lcall
ljmp
lcall
mull
inc
adc
xor
inc
add
out
dec
test
arpl
jecxz
mov
mov
sub
cltd
out
xchg
test
dec
ljmp
enter
fwait
loop
clc
and
loop
jle
jnp
jg
sub
dec
in
pop
cmp
and
mov
shlb
push
test
mov
data16
mov
outsl
lcall
jbe
insl
or
pop
inc
pop
cmp
mov
icebp
pushf
jl
in
sbb
push
nop
out
out
int
test
test
mov
jae
push
sub
adc
dec
and
pop
setne
rcrb
fistps
cmpsb
sub
jecxz
lcall
xchg
les
test
mov
stos
mov
fcomps
repz
decb
sub
pop
imul
je
and
in
lcall
bound
push
idivl
movsl
cs
cmp
sub
xchg
sti
sbb
pop
roll
adc
xlat
sbb
sub
dec
arpl
mov
addr16
adc
test
mov
je
push
push
xchg
int3
pop
cmp
fcoml
mov
ffreep
push
ljmp
repnz
div
lds
fistpl
and
cmp
sbb
dec
mov
mov
outsb
stos
into
mov
stc
cmc
xlat
in
pop
jl
jbe
repz
mov
mov
xor
lahf
es
jne
int3
mov
pop
adc
dec
cmp
xchg
cs
movl
cli
mov
xchg
iret
adc
es
cwtl
and
repz
inc
inc
push
push
es
ja
jae
dec
mov
gs
inc
popw
jo
lcall
outsb
stos
add
mov
iret
xor
addr16
std
mov
js
loopne
lds
fs
fsts
shld
cmc
and
iret
ljmp
and
lods
dec
cmp
pop
mov
jo
mov
js
mov
into
icebp
xchg
push
shlb
pop
out
outsb
sub
pop
xlat
xchg
push
jnp
adc
aad
sbb
sub
out
cmpsl
mov
mov
mov
mov
fiadds
xor
jp
in
add
aaa
xchg
js
fucomip
mov
jno
lret
sub
sbb
adc
adc
mov
cmp
testb
sub
pop
mov
enter
or
inc
mov
inc
cmp
mov
sbb
sub
rol
rclb
rorb
outsl
push
scas
lods
imul
dec
jmp
out
xchg
jge
scas
push
test
popf
mov
cwtl
lahf
movsl
jns
push
push
pop
lcall
pop
mov
test
adc
inc
and
mov
inc
push
outsb
and
aaa
test
aas
push
cmp
jmp
mov
sti
in
test
jg
addr16
push
sbb
lret
inc
loope
add
das
mov
shlb
out
cmp
ja
dec
nop
insl
test
pop
cs
dec
mov
mov
jne
mov
push
pop
pop
ficoms
nop
mov
loope
cmp
push
jg
sub
imull
cmp
cmc
pop
js
or
into
fisttps
mov
mov
adcl
pop
testl
imul
repz
dec
mov
gs
sbb
hlt
xchg
fwait
jne
lods
cmp
sbb
popf
movsb
adc
rorl
push
aad
pop
pop
push
mov
dec
sub
pop
cmpsb
mov
sahf
pushf
scas
leave
pop
pcmpeqd
cmp
jmp
int
jnp
outsb
frstor
push
leave
aas
leave
pop
fs
scas
mov
shll
mov
push
add
or
aas
push
adc
es
and
xchg
adc
and
pop
dec
in
out
fwait
popf
adcl
mov
fs
xchg
push
mov
les
lds
push
sbb
mov
fsts
adc
inc
inc
in
pop
sub
push
loope
bnd
call
xor
test
insb
sub
nop
mov
iret
data16
jl
lret
lods
lock
sbb
jns
pop
push
pushf
dec
cwtl
imulb
xchg
jg
xchg
repnz
aad
push
movsl
mov
dec
popf
cmp
shrb
jmp
daa
xor
rolb
dec
inc
jbe
adc
test
mov
mov
inc
adc
push
test
inc
lods
scas
into
mov
cld
push
sub
xchg
xor
lds
add
mov
iret
shlb
cmp
xor
mov
sahf
scas
mov
pop
cmp
push
sbb
shr
sub
mov
adc
rcl
adc
fldl
fimull
push
jl
mov
xor
popa
inc
fs
xchg
or
xchg
xor
jmp
or
pop
jnp
mov
mov
mov
roll
add
pop
jge
or
in
push
imul
in
adc
lcall
dec
int
pop
loop
sbb
push
and
outsl
cltd
xchg
adc
sbb
adc
dec
jns
xchg
adc
pop
rcll
jl
xchg
xchg
mov
fbld
clc
jmp
xor
jns
icebp
ficoml
xor
xchg
adc
movsl
mov
sbb
push
call
mov
inc
pop
lods
adc
in
add
test
aam
cltd
stos
mov
addr16
push
cs
bswap
cmp
or
mov
repz
fsubr
repnz
mov
iret
mov
fcmovu
cmpsb
test
mov
sbb
dec
aaa
fldcw
arpl
into
sbb
jp
aaa
and
subb
je
xor
sbb
pusha
int3
leave
sarl
es
fnsave
jmp
fwait
ret
movsb
lds
inc
gs
xchg
cmc
int3
addr16
pop
test
fisttpl
sub
xchg
adc
jg
mov
push
dec
cld
pop
popf
pop
outsb
inc
inc
popa
cmpb
push
sbb
inc
scas
lods
addr16
in
cld
cmp
pop
sub
iret
out
or
and
jbe
jnp
mov
or
xchg
xchg
push
fiadds
ds
fcos
xchg
or
loop
and
in
mov
xor
imul
outsl
adc
mov
xor
stos
or
add
push
sbb
stc
cmp
add
inc
cmpsl
mov
inc
ds
push
push
mov
and
xchg
sti
cmc
adc
test
xchg
cs
mov
fbld
int
pusha
psubw
ret
out
loop
cltd
xchg
dec
or
inc
sub
sbb
xlat
jnp
cltd
pop
pusha
nop
add
pop
lods
clc
xchg
push
push
xchg
pusha
mov
mov
hlt
or
pop
pop
mov
lret
xchg
into
cmp
mov
add
roll
mov
hlt
in
jne
inc
or
inc
movsl
subl
call
jg
fisttpl
jge
mov
les
popa
fmul
fadd
icebp
aam
sub
ret
inc
fbstp
daa
pop
inc
insb
cmp
jnp
fildl
ja
aad
mov
sbb
cld
sub
cmp
fcomip
push
xchg
xchg
in
jns
adc
adc
push
pop
pop
xor
fldt
mov
cmc
inc
cs
fnstcw
xor
dec
push
push
inc
and
xor
jecxz
out
scas
icebp
das
mov
mov
dec
cltd
and
mov
mov
loopne
loope
or
dec
and
mov
jne
rcl
fs
sub
xlat
mov
in
icebp
or
mov
dec
push
bnd
mov
xchg
mov
ss
rclb
push
or
sbb
outsl
lea
mov
push
in
std
rolb
sub
inc
sbb
sbb
out
enter
or
inc
sbb
add
mov
sub
cltd
push
lods
fdivrl
fld
xchg
jmp
xchg
or
test
fisttpl
into
sbb
arpl
or
popa
cmp
mov
mov
xchg
in
mov
sti
fnstenv
clc
pusha
outsl
inc
mov
das
mov
cli
jb
test
inc
dec
fdiv
imul
pop
or
inc
mov
push
daa
xor
ljmp
dec
cmp
fadds
addl
sbb
xor
xchg
add
or
lahf
repz
mov
dec
std
lea
js
cwtl
out
int
test
or
xchg
inc
mov
int3
imul
fwait
adc
shlb
rcr
xchg
sub
jl
add
shlb
mov
adc
imul
mov
sahf
movsl
bound
repnz
mov
stos
add
cmp
into
repnz
pop
pop
mov
fisubrl
jo
jmp
mov
xchg
push
or
sbb
sub
adc
dec
mov
and
cltd
push
dec
test
cld
fldt
and
sub
mov
xchg
fistps
mov
loopne
cld
stos
out
mov
icebp
jg
xchg
iret
mov
cmp
sahf
push
pop
mov
and
inc
int
addb
xchg
data16
addr16
mov
sbb
lods
sbb
and
loop
ret
fstpt
in
loope
test
mov
gs
xchg
mov
dec
mov
sub
out
add
ret
jns
mov
jmp
into
es
cmc
aaa
loope
sbb
cwtl
xor
push
lret
out
lods
fwait
movsl
fwait
pop
lds
inc
or
push
xor
call
lcall
arpl
das
xchg
test
aam
push
add
inc
mov
ret
inc
fisubrs
push
push
or
mov
lret
nop
popa
sbb
test
jl
mov
dec
pusha
std
inc
xchg
mov
lret
xor
pop
fmul
test
sbb
add
imul
leave
mov
push
xchg
test
pop
into
notb
adcb
xchg
lret
jmp
int3
nop
ja
jo
cmp
push
pop
mov
es
and
dec
mov
pop
sbb
aaa
std
dec
jnp
pop
pusha
leave
cmp
pop
inc
jb
mov
dec
jnp
sbb
cmp
fstl
xchg
frstor
loope
loop
pushw
iret
ss
mov
lret
jmp
jns
sbb
andl
lock
clc
jmp
mov
xchg
push
xor
out
rcl
clc
jno
or
js
in
ja
js
lret
push
pop
lock
xchg
sub
xchg
insb
mov
xchg
mov
jg
mov
daa
rclb
fsts
jp
test
outsl
mov
and
stc
in
into
mov
push
fcomi
cmpsl
pop
inc
xchg
mov
push
cs
dec
ljmp
testl
unpcklps
pusha
rolb
lock
fstl
pop
mov
in
xchg
xchg
sbb
inc
push
dec
cltd
push
cmpsb
jmp
pop
mov
ja
mov
push
add
jmp
push
scas
sub
loopne
loope
in
gs
scas
sbb
iret
inc
cld
scas
inc
jne
add
xorl
push
outsl
push
xor
repnz
mov
loop
data16
lds
lcall
pop
jp
testl
fs
mov
jp
cmove
pop
xor
xor
fisubrl
jns
dec
or
dec
out
repnz
inc
sub
jge
pop
cmp
pusha
push
push
dec
fs
xchg
lahf
and
pop
jl
jbe
ds
push
and
sub
imul
test
test
inc
xchg
shll
daa
mov
jmp
cmp
jne
push
lods
jecxz
mov
mov
sbb
mov
sahf
adc
mov
out
stc
fdivrs
repz
jns
aaa
cltd
mov
mov
cmp
or
pop
mov
aas
sbb
dec
outsb
test
ljmp
mov
xchg
enter
sbb
cmp
jne
roll
add
test
out
cmp
imul
xchg
outsb
rcrb
orb
or
lahf
pusha
popa
aas
outsb
mov
daa
cmp
mov
pop
and
sti
out
mov
ss
cwtl
in
loop
sbb
add
jmp
sahf
into
dec
mov
fadd
adc
mov
push
sub
ds
inc
rorl
inc
inc
addl
mov
or
iret
imul
cli
scas
add
xchg
mov
les
sbb
dec
ret
sbb
mov
xchg
inc
cmpl
pushf
mov
xchg
je
imul
fistpl
fcomp
orl
arpl
mov
cmpsl
in
add
test
adc
pop
xlat
and
dec
aaa
ja
pop
add
xor
pop
sti
pop
inc
and
mov
cmp
add
lret
mov
rcl
and
enter
dec
add
dec
adc
add
add
xchg
mov
or
and
movsl
cs
adc
fwait
nop
fidivrl
cmp
push
sub
dec
inc
mov
xor
adc
negl
pop
inc
mov
dec
jmp
popa
and
mov
mov
adc
lret
push
pop
mov
fisttpl
sti
and
movsl
stc
or
adc
push
pop
lcall
inc
shrl
inc
xchg
dec
aam
xchg
cmc
mov
in
icebp
fiadds
pushf
jge
fwait
xchg
outsl
pop
stc
and
mov
inc
push
sub
jns
popa
imul
dec
dec
xorb
subl
movsb
stc
popf
dec
addr16
xchg
cltd
push
lcall
xchg
mov
out
imul
jb
dec
jne
movsl
fs
mov
lret
fs
push
or
push
es
pusha
jbe
and
int3
adc
aaa
xchg
push
fadds
jl
mov
movsl
lret
ficoml
push
pop
jno
pop
cmpl
mov
xor
packsswb
ljmp
pop
fs
shl
icebp
test
sarb
insl
sub
movsb
jo
xchg
stc
sub
push
idivb
in
out
aas
int
shll
std
lcall
aad
mov
std
dec
fistl
and
aaa
push
cld
imul
xchg
and
int
mov
sbb
adc
push
pop
and
stos
cmp
jp
or
cmp
fs
sbb
std
pop
sbb
loopne
sbb
repz
das
sti
sub
ss
aam
cmc
mov
addr16
dec
mov
icebp
pop
js
sarl
cmp
pop
add
test
dec
js
mov
cmp
xchg
xchg
aam
iret
int3
push
mov
leave
in
fldl
mov
push
cltd
rorb
and
lea
dec
push
dec
test
enter
jmp
dec
call
sub
or
cld
xor
jmp
sbb
mov
adc
fldpi
inc
xorl
mov
lahf
xor
cld
jb
xor
cmpsl
xlat
or
and
cmp
xor
stc
or
dec
push
popa
in
inc
cli
or
mov
fincstp
pop
inc
fsubrl
and
mov
out
xchg
rcrb
stc
or
fisubrl
mov
dec
mov
jp
ds
fs
jg
rcrb
les
movsb
or
lcall
push
jnp
mov
imul
loopne
ficoms
clc
dec
mov
addr16
jp
int
mov
sub
mov
add
pop
ja
test
or
test
out
in
add
lahf
mov
int
movsb
push
es
arpl
aam
pushf
mov
out
int
mov
adc
ds
stc
jle
ficompl
and
jle
sub
and
lret
pop
mov
xchg
ss
xchg
shrb
rolb
ficompl
sub
push
dec
fildll
push
and
imul
mov
in
push
dec
jns
lds
jnp
xorl
ljmp
pop
push
dec
mov
call
pop
and
adc
loope
lods
jg
test
xchg
into
jmp
cmp
xchg
jne
stos
into
add
ficoml
or
rcl
pop
mov
movsl
mov
cmpsl
xor
call
aad
movsl
mov
aaa
call
jns
jno
xor
mov
dec
aas
mov
inc
push
mov
es
je
imul
xchg
and
or
push
and
fs
or
adcb
mov
jns
fisttpll
neg
push
add
repz
bound
mov
jne
mov
or
ficompl
sub
fs
popa
jg
xchg
scas
add
test
push
adc
or
dec
adc
or
adc
inc
aaa
loope
fcmovbe
xor
popf
mov
sub
pop
mov
adc
movsb
and
inc
jl
jno
mov
xchg
loop
insl
jle
add
scas
jae
insb
sahf
inc
push
aam
xlat
loope
cltd
and
fs
shll
jle
push
adc
fbld
or
xchg
mov
je
push
and
mov
jnp
inc
in
ljmp
ret
dec
sti
mov
iret
mov
subb
add
mov
andl
int3
push
push
push
test
test
cmp
dec
xchg
dec
data16
xor
cmpl
sbb
out
fs
xor
mov
cmp
lods
int
jp
push
fiadds
mov
mov
repnz
daa
sub
jecxz
leave
scas
push
dec
sub
scas
or
test
add
divl
dec
cld
cmp
adc
cltd
jl
pushf
pop
push
loopne
movsl
hlt
scas
xor
popa
push
xchg
int
popa
jge
sbb
scas
gs
stc
cld
ljmp
sub
jecxz
addr16
push
mov
out
push
leave
lahf
pop
add
adc
mov
push
push
mov
aaa
xchg
movsb
jnp
cmpsl
or
test
aaa
lods
push
in
mov
push
mov
out
andl
pushf
popf
pop
mov
mov
xchg
lahf
enter
inc
xor
mov
cld
ljmp
push
cmp
mov
lods
test
cmpsl
and
sub
cld
mov
test
aaa
mov
xchg
cli
add
and
cs
lret
out
xor
pop
and
and
sub
int3
xor
hlt
cmp
flds
adc
lock
adc
and
mov
mov
pusha
push
call
dec
ret
lods
add
sub
sub
out
addb
push
call
mov
lock
js
rolb
push
daa
popa
push
addr16
or
push
fwait
mov
and
mov
sub
mov
inc
mov
call
dec
mov
pop
push
lods
popa
xchg
lahf
mov
inc
rcrl
inc
sbb
imul
mov
out
stos
loop
mov
fdivl
sbb
mov
pop
adc
xor
ret
mov
xchg
inc
cmp
insl
popf
xchg
pop
inc
mov
out
push
out
cmp
inc
movsl
test
fcomip
add
negb
cmc
mov
mov
jo
outsl
pop
pusha
fbstp
in
rcrl
std
in
loopne
test
repnz
loop
adc
loop
push
mov
out
pop
xor
sbb
add
lock
cmpsb
daa
mov
test
adc
push
jg
imul
ds
dec
jno
loopne
lret
mov
nop
das
sub
add
xchg
xchg
hlt
lahf
insl
push
sbb
mov
xchg
sbb
dec
call
jae
inc
dec
popa
sbb
lret
add
out
mov
jb
pop
jecxz
sub
or
fistps
xor
cmpl
leave
xor
imul
in
mov
cltd
arpl
nop
xchg
mov
sbb
insl
mov
jnp
pop
or
sbb
add
hlt
arpl
mov
js
and
push
fwait
xor
sub
push
aaa
sbb
lret
gs
xorps
icebp
mov
lds
cmp
rcll
lock
stos
mov
inc
daa
inc
inc
popf
into
jns
mov
xorb
hlt
fldt
cmp
je
les
sub
repnz
rcr
sbb
cmp
je
aas
xor
int3
add
cmp
cwtl
add
mov
and
xchg
push
dec
test
sbb
mov
loope
jb
lret
push
jns
cmp
mov
sbbl
jle
mulb
and
cmp
fcoml
ret
fxch
rorb
and
fsubs
jno
pop
lods
hlt
lret
in
movb
dec
lret
pop
inc
pop
lods
pop
mov
xchg
std
add
sbb
pop
and
and
and
pop
pop
dec
cmp
push
int3
push
inc
leave
sbb
out
cmp
cmpsl
lahf
out
xchg
or
addr16
in
adc
push
xchg
nop
cmpsb
pop
mov
or
ljmp
sbbl
je
fisubs
lret
cwtl
xor
pop
mov
or
pop
stc
push
and
push
cmpsb
lods
imul
jae
xlat
je
dec
mov
xor
add
fildll
xchg
jbe
popf
jb
rcrl
or
xchg
std
dec
pop
std
jmp
lret
push
mov
or
add
mov
movsl
fsubl
mov
cmpsl
lock
pusha
mov
cmp
cmp
push
rol
pop
lock
leave
sub
dec
add
rorb
push
into
jp
cwtl
ja
sarb
jl
cwtl
mov
pop
jmp
call
mov
int3
cmpsl
pushf
sbb
shll
addr16
add
dec
fiaddl
push
sub
movsb
sahf
push
jge
inc
xchg
cmpsl
push
xchg
xor
dec
mov
cmp
jge
stos
dec
test
jbe
out
fsubrs
leave
jecxz
rcrb
ret
xchg
insb
xor
pop
xchg
out
lods
in
mov
sbb
addb
test
in
add
and
into
sbb
inc
loope
jbe
cmp
dec
loopne
call
arpl
in
and
xchg
cmp
stc
push
mov
xor
shlb
aas
mov
addr16
pop
xor
adc
mov
aaa
sub
push
test
add
les
fnstcw
sahf
repnz
add
push
sbb
in
adc
call
sahf
inc
loopne
and
pusha
call
cli
dec
into
pop
shrb
fstps
or
add
popf
icebp
enter
dec
cmp
cmpl
enter
and
pop
stc
cmp
mov
pop
push
and
jl
andb
pop
pop
scas
jmp
xor
and
mov
or
push
pop
fistpll
push
fidivrs
xchg
gs
in
je
pop
sbb
pushf
sbb
fs
jbe
xchg
enter
push
jbe
jecxz
in
and
inc
cli
fiadds
mov
iret
aam
or
data16
subb
mov
sub
jns
loopne
aaa
iret
jns
ret
sti
test
enter
fidivrs
divb
xor
jbe
scas
pop
pop
mov
inc
push
mov
aad
lcall
and
ss
das
sbb
popa
ljmp
xchg
sub
add
cmpsl
ret
popf
ss
mov
xorl
popa
mov
pop
popa
mov
sub
mov
push
mov
daa
mov
pop
idivl
mov
test
into
cwtl
sarb
mov
mov
aam
repz
add
or
loope
mov
sahf
outsb
mov
test
jns
in
jae
add
push
imul
popa
pop
mov
popa
sbb
into
and
mov
and
or
sti
frstor
addb
cmp
jmp
inc
pop
pop
mov
dec
pop
lcall
and
addr16
bound
xor
mov
sbb
inc
add
cmp
dec
imul
notl
and
mov
xchg
sahf
fucomip
cmp
adc
sbb
jno
addl
hlt
jmp
clc
ret
loope
sbb
pushl
sub
mov
fcmovne
mov
adc
gs
test
enter
mov
leave
inc
push
xorb
adc
or
xchg
out
es
icebp
ret
pop
rcll
aam
repnz
mov
pusha
push
push
jge
cmp
aam
and
cmp
data16
jle
mov
pop
aam
add
push
mov
cmpsb
mov
int
mov
inc
adc
xchg
fs
movsl
bnd
pop
dec
cwtl
fimuls
dec
lcall
xlat
cs
inc
shlb
cmp
stos
and
sub
popa
or
dec
inc
inc
movsl
test
sahf
xor
sbb
cmp
test
cmp
je
xchg
ss
sbb
mull
fidivs
loope
or
and
inc
ja
xchg
inc
divb
pop
repz
repz
sbb
cld
cli
imul
sahf
inc
lds
mov
xor
xor
xchg
jns
out
cs
jecxz
add
cmpsl
jb
add
mov
xor
out
out
in
mull
rcrl
bound
add
sub
lods
sahf
sbbb
jno
outsl
aam
xchg
mov
shlb
sub
cmp
pop
jmp
clc
out
sub
sbbb
xor
xchg
fwait
lret
mov
mov
gs
insb
add
push
xor
movsl
push
xorl
sahf
fwait
pop
mov
or
xor
outsl
popf
mov
outsb
fstps
dec
das
bswap
and
mov
mov
lret
sar
inc
sahf
in
rcrb
in
sahf
cmp
cmc
rcll
repz
mov
test
and
sbb
dec
jecxz
out
add
inc
enter
jecxz
daa
and
outsl
mov
jno
sar
inc
popl
mov
jg
inc
jae
pop
rclb
stc
or
sub
rorb
sub
test
add
stos
push
pop
jnp
aad
scas
push
mov
inc
cmp
xor
ds
cs
ljmp
mov
cmpsb
sub
ss
sbb
imul
mov
add
or
mov
ss
inc
fs
and
jmp
xor
adc
mov
test
dec
jge
inc
mov
ljmp
lock
lret
sbb
in
rclb
sbb
xchg
mov
mov
or
and
sahf
cmp
push
and
xchg
or
jbe
inc
pop
mov
daa
inc
in
xchg
mulb
hlt
jge
cmp
outsl
pop
push
pop
cmp
xlat
std
mov
shrl
les
cmpsl
es
ds
lcall
adcl
pop
ret
pop
das
pop
movsl
loopne
mov
adc
test
pop
xlat
push
repz
xchg
mov
jns
decl
mov
inc
dec
lods
pop
mov
mov
push
and
fcomps
shll
push
or
xor
shrb
mov
lods
leave
xor
js
into
decb
mov
scas
push
or
inc
arpl
add
sub
pushl
adcb
fsubl
test
mov
bound
mov
dec
or
xor
les
push
jle
rclb
pop
or
dec
cmp
or
cmp
cmp
js
xor
mov
push
pop
fsubrs
add
mov
test
js
nop
xor
ret
div
pop
pushf
insb
int3
or
mov
cli
aaa
repz
imul
cmp
mov
js
int
incl
das
ret
jb
addr16
mov
xchg
adc
dec
imul
pop
lds
icebp
dec
stos
jl
cmp
inc
or
jae
out
mov
jne
stc
jns
or
mov
pop
cld
mov
push
stos
bound
sub
loopne
sub
xchg
xchg
lret
pop
jno
mov
push
and
insb
sub
jmp
js
shll
mov
stc
fldl
int3
leave
pop
xor
scas
in
mov
in
mov
pop
sbb
fdivs
and
inc
out
jbe
popa
jle
gs
adc
xchg
pushf
inc
adc
ret
je
lret
push
adc
xchg
loop
xor
pop
insl
insl
mov
mov
push
push
xor
jae
cltd
pushl
dec
imul
jbe
addr16
test
pop
inc
insb
and
hlt
push
xchg
nop
js
test
jns
aad
repnz
in
sub
int
inc
mov
sub
dec
ret
sarb
jno
jge
xchg
mov
popa
mov
pop
aad
push
movsl
andl
ss
pop
dec
mov
stc
insl
popa
push
push
mov
mov
lret
roll
fistpl
fistpl
jno
pop
cli
jnp
call
xchg
mov
cmp
ds
bound
push
adc
jns
test
cltd
arpl
leave
pop
pop
push
sub
ja
push
mov
les
inc
sub
and
fsub
pop
xchg
loop
xor
pcmpeqd
subl
sar
sbb
filds
dec
add
sbb
inc
pushf
xor
or
ficompl
xchg
add
add
inc
mov
scas
mov
bound
mov
daa
loop
mov
and
cmp
push
or
pop
ret
inc
cmovg
out
mov
adc
adcl
mov
pop
mov
push
jmp
in
aam
aaa
fistpl
mov
cltd
pop
jb
pop
sbb
sbb
add
push
inc
xchg
inc
push
shrb
arpl
dec
and
jecxz
pop
fcomp
aas
dec
jl
xchg
daa
pop
sahf
push
cmp
ret
test
int
and
es
xchg
imul
stc
jge
mov
push
cmp
adc
add
ret
iret
cmp
sahf
lret
mov
mov
add
pop
push
rorb
out
imull
and
ret
faddp
out
xchg
loop
cmpsl
pusha
sbb
imul
int3
rorb
test
insl
sub
ret
dec
xchg
hlt
jle
test
mov
and
dec
movsb
xor
out
jae
jl
inc
insl
push
cwtl
sbb
pop
and
ds
std
inc
jbe
inc
pusha
data16
cltd
and
aam
or
xchg
jae
pop
fldl
cmp
nop
fildll
mov
das
shrl
or
in
xor
or
cmp
addb
pop
push
pop
adc
rcrb
ja
fs
pop
xor
popf
xor
cmp
adc
lcall
es
inc
cmp
lds
das
sbb
lret
fadds
sbb
cmc
xchg
dec
mov
or
fimull
mov
jnp
arpl
popa
int3
aas
push
xor
test
lcall
icebp
int3
or
ds
fs
sbb
mov
ds
xlat
aam
mov
dec
fsubrl
mov
cmp
pop
fistpll
orl
add
cmp
shlb
mov
add
adc
jb
add
ret
xchg
mov
lret
sarl
outsl
and
ret
pop
mov
enter
insb
add
sti
push
popa
outsb
mov
or
insb
call
aam
jbe
pushf
or
ret
inc
out
cmpsl
mov
popa
js
sbb
rol
adc
test
jnp
push
fwait
lea
test
out
xor
jns,pn
scas
insb
inc
mov
lds
lret
out
inc
jl
jne
test
int3
inc
outsl
or
xorb
add
cmc
xchg
sar
pop
sar
outsl
mov
in
inc
mov
adc
shll
ret
rorl
xor
mov
adc
mov
ljmp
std
jne
les
lods
fstpt
xor
or
sti
lret
sbb
repnz
fwait
iret
push
inc
stos
call
cmpsl
cmp
test
sar
loop
mov
pusha
nop
mov
call
mov
mov
adc
imul
jae
mov
mov
adc
and
dec
setno
lods
push
fdiv
pop
pop
inc
into
xor
cs
jge
adc
and
dec
dec
pop
xor
sti
dec
or
sbb
inc
cmpsl
adc
inc
or
mov
mov
push
cmpsb
sar
pop
cltd
mov
sub
pop
repz
stc
add
sbb
xchg
mov
add
dec
jmp
add
sub
add
xchg
in
xchg
test
dec
lea
int3
jne
inc
out
aas
sub
dec
scas
dec
mov
movsb
adc
gs
push
mov
mov
dec
jo
jmp
icebp
sbb
imul
and
xchg
icebp
pop
fsub
xor
lcall
sub
mov
into
lea
test
inc
shlb
inc
ds
or
dec
jp
and
cltd
pop
mov
pusha
add
sub
push
jmp
and
push
sub
imul
cmc
push
mov
rcrb
hlt
mov
imul
pop
sub
push
data16
jb
cmpl
cld
lods
xor
addr16
cmp
out
inc
les
nop
iret
inc
adc
adc
loop
xor
stos
in
lret
mov
xorl
xchg
pop
or
je
adc
imul
and
mulb
mov
test
loopne,pn
sub
out
xor
xchg
xor
inc
or
mov
leave
mov
popf
lock
mov
neg
push
das
pusha
adc
cmp
sub
sub
mov
scas
fidivs
xchg
lret
xor
lahf
sbb
rcl
dec
mov
dec
mov
arpl
push
rcll
mov
pushf
int
sti
pop
stos
push
stos
cmp
mov
sub
hlt
adc
andl
sbb
int3
pop
lahf
xor
pop
and
inc
pop
andb
sbb
leave
out
inc
les
jo
xchg
repz
mov
mov
push
hlt
push
push
fists
and
sub
lds
gs
les
daa
loop
fdivl
enter
xor
imul
je
or
pop
jg
xor
mov
add
sahf
and
jp
push
rcr
cmp
call
and
or
mov
int3
cld
push
push
scas
adc
fbstp
mov
outsl
sub
pop
faddl
push
push
lods
ljmp
cmpsb
mov
rcrb
daa
outsl
xchg
push
jle
es
in
icebp
mov
add
xor
in
fwait
push
in
adcb
xchg
shl
mov
nop
push
mov
add
lods
or
js
sbb
repnz
sub
cmp
push
mov
out
dec
mov
call
jl
dec
push
bound
mov
les
shl
repnz
dec
fmull
jle
gs
add
adc
stos
xchg
repz
imul
and
mov
inc
add
enter
imul
cli
mov
pop
sti
cmc
das
stc
xlat
adc
cmp
xchg
in
cmp
or
cmp
jne
aam
jns
push
adc
stos
pop
cmp
sub
push
data16
xor
ss
mov
xor
ljmp
xchg
adc
mov
dec
push
push
inc
jmp
push
ss
mov
cmp
std
mov
lret
jns
loop
inc
jecxz
mov
out
clc
cmc
sbb
jo
or
inc
mov
xchg
lahf
push
movsb
cmp
mov
hlt
imul
loope
dec
ja
cmp
sub
xchg
rclb
jl,pt
add
dec
call
jb
push
ret
pop
mov
inc
push
movsb
pop
push
ja
pop
fcompl
xchg
xchg
loopw
cltd
imul
andb
push
xchg
pop
fcmovu
daa
cmp
inc
mov
jmp
and
ljmp
cmp
mov
push
mov
xchg
cmp
jns
aad
ret
rcrb
sub
push
inc
dec
pop
aam
lahf
lcall
mov
cmp
dec
lahf
arpl
xor
push
addr16
mov
or
loope
push
stos
fsubs
ljmp
adc
insl
cmp
into
sahf
filds
push
adc
sbb
jae
mov
mov
int3
les
mov
inc
xor
clc
add
lea
iret
in
add
scas
stos
cmpsl
cmp
adc
xor
pop
add
popl
pusha
jp
data16
push
enter
sub
xchg
mov
mov
scas
add
and
cs
out
pushf
fisubrs
inc
out
bnd
dec
sahf
xchg
push
jl
insl
mov
and
fiaddl
test
rolb
scas
inc
int3
ds
inc
in
mov
dec
call
popa
sub
es
mov
pop
mov
pop
sbb
shl
mov
jecxz
les
push
add
sbb
xchg
lcall
orl
or
cmp
subl
or
lcall
sbb
stc
push
leave
cmp
jae
mov
pusha
lods
cmpl
ds
cli
lea
and
xchg
ret
iret
outsl
xchg
dec
in
or
fists
fimull
sub
push
pop
and
sub
lock
add
ret
insb
jbe
fdivrl
jo
mov
mov
ror
addr16
fisubrs
xchg
fwait
lcall
pop
pop
fstpl
into
rcl
inc
add
shrb
jnp
sbb
lcall
jae
mov
push
not
enter
cs
stc
jle
enter
add
mov
sub
lds
xor
adc
or
mov
sub
push
add
ret
call
les
push
or
mov
into
dec
sbb
stos
xchg
mov
nop
push
mov
inc
les
xor
movsl
lds
add
pop
and
lret
loope
push
pop
or
jno
cmp
pop
mov
sub
push
xchg
fs
outsl
movsb
jb
dec
pop
jo
sbb
sub
pop
pop
sbb
sub
iret
cmc
mov
int3
pushl
pop
in
cli
and
addr16
cmp
add
fldenv
lods
add
or
shr
ja
lock
loopne
xchg
and
pop
mov
clc
out
and
lcall
loope
mov
inc
sub
adc
test
jbe
mov
test
or
and
out
jmp
mov
mov
fidivl
loopne
jnp
mov
outsb
xlat
scas
jl
jns
scas
sub
adc
mov
and
pop
jge
cmp
mov
lcall
inc
loope
scas
test
fstpt
lods
addr16
adc
rolb
inc
cs
and
lea
int
stos
negl
aam
jle
ret
and
lahf
outsl
outsl
ljmp
aad
pop
daa
pop
int
stos
shrb
rcll
lret
pop
xchg
lea
nop
adc
enter
mov
sbb
pop
popa
sbb
std
jp
fdivrl
cltd
mov
xor
push
sbb
or
mov
mov
movsl
ja
xchg
add
push
mov
pop
push
cld
pop
lea
push
inc
mov
push
and
sbb
imul
sti
dec
mov
pop
sbb
loope
clc
sub
pop
xchg
shll
xchg
xor
and
push
dec
imul
je
push
ret
loopne
fcomps
nop
popf
int3
loop
inc
adc
gs
sbb
or
and
mov
inc
inc
xor
xchg
arpl
vcmpps
or
dec
lret
jle
jl
jnp
jge
lret
cmc
dec
hlt
sub
cmp
mov
test
rol
adc
and
cmp
je
sbb
repz
sub
shll
mov
mov
shll
lods
push
jne
cmc
pop
lret
push
lahf
stos
shrb
cmp
xchg
pushf
out
add
hlt
dec
test
adc
mov
sub
mov
xchg
dec
mov
push
rclb
fimull
outsl
ja
imul
scas
jns
xchg
cmp
mov
mov
repnz
loopne
test
add
jae
loopne
sub
ds
mov
stos
inc
loopne
push
sbb
popa
aad
cli
rcrl
mov
icebp
movsb
sbb
cwtl
sub
cs
cmp
sub
rcrb
add
dec
sbb
adc
in
sub
pushf
insl
sub
outsl
lds
ljmp
fldl
test
gs
sub
pop
sub
dec
sbb
adc
std
push
and
fists
pop
repnz
ret
push
inc
or
test
xchg
pop
inc
xor
iret
mov
out
xchg
adc
xchg
lds
fisttpll
mov
ret
fldenv
ljmp
mov
lock
push
jb
out
scas
movsb
add
jle
pop
xchg
loop
scas
sub
pop
pop
scas
jo
lahf
out
addr16
sub
loop
push
dec
ja
cmp
stc
mov
lret
mov
inc
cs
jle
pop
ret
push
out
xchg
push
fs
movsb
loopne
push
mov
lods
push
fucomp
sbb
mov
iret
mov
mov
inc
subl
int
dec
dec
lea
mov
nop
jns
stos
add
mov
xchg
arpl
out
cmpsl
ja
stos
jmp
adc
sub
jae
mov
add
sbb
pop
out
mov
insl
xlat
mov
sub
push
les
xchg
xchg
cmp
xor
jns
sbb
mov
push
jb
aad
add
movsl
loop
sahf
dec
sbb
ja
or
push
sub
xchg
xchg
mov
sbb
mov
test
dec
mov
clc
xor
push
cld
int
sbb
jl
mov
into
out
pop
out
cmc
push
push
pop
mov
shlb
ret
scas
adc
sub
aas
sbb
orl
aas
xchg
mov
loopne
add
divb
aam
xor
adc
or
jnp
mov
xor
cwtl
cmp
sbb
dec
bound
mov
nop
and
jge
and
insl
mov
sub
loope
jb
cmpb
fwait
add
mov
jg
pop
xchg
xchg
into
cmc
test
dec
jge
mov
ret
dec
in
xchg
lock
push
xchg
loope
xchg
inc
into
test
fcmovne
lahf
pop
fs
lahf
movq
lahf
dec
enter
testb
pop
subl
add
sbb
push
in
out
mov
ja
daa
data16
xchg
daa
daa
fsubrs
sub
cmpsl
push
cltd
jl
je
or
push
sub
mov
shl
mov
mov
xchg
call
gs
int
movsl
gs
xchg
jg
mov
mov
fistl
fistps
popa
aas
cmp
out
lcall
mov
adc
sahf
jge
inc
ficomps
xchg
icebp
lods
inc
daa
sbb
sahf
xchg
inc
rorl
mov
mov
xlat
mov
int
jg
push
dec
sub
test
inc
fimull
in
into
pop
imulb
dec
xchg
adc
loopne
insl
inc
cmp
add
sbb
je
testl
jmp
and
jl
leave
jecxz
in
sub
loopne
aad
mov
loopne
pop
mov
inc
dec
xchg
push
push
mov
pop
pop
inc
push
mov
sub
mov
test
pop
xor
pop
in
fistl
out
leave
lock
ja
icebp
push
ret
repnz
int
stos
cmpsb
test
mov
sbb
inc
negl
fnop
inc
stos
and
pop
xchg
lea
jecxz
sub
mov
mov
aam
push
sub
adcl
jmp
in
repz
jmp
fwait
outsb
test
jb,pt
pop
das
jmp
popa
xchg
sbb
mov
mov
mov
inc
sbb
adc
out
mov
int
mov
movsl
data16
loopne
dec
insb
mov
push
sbb
cmpsl
push
cs
fisubs
adc
jno
sbb
xchg
add
xchg
lods
movsl
test
mov
jg
les
xor
inc
mov
push
call
std
in
in
icebp
mov
js
scas
add
jne
or
imulb
cltd
movsb
add
mov
gs
cs
push
push
mov
ret
lahf
je
pop
jns
push
decb
addr16
pop
sti
inc
mov
mov
shrb
dec
pop
movsb
cmp
xchg
out
adc
jg
dec
iret
pop
std
mov
dec
mov
xchg
or
iret
dec
or
orl
dec
xchg
mov
ds
add
addr16
pusha
mov
out
sbb
les
inc
jb
mov
cs
jmp
pop
push
xchg
aam
jmp
fsub
inc
outsb
dec
or
pop
sbb
ret
fisubl
into
nop
sub
and
loop
insb
sbb
mov
call
mov
test
sub
mov
push
and
xor
das
cmpsb
mov
sarb
fs
es
iret
jl
xchg
mov
popa
lea
adc
push
sub
ja
jle
fldcw
ja
sub
inc
sbb
icebp
push
movsb
inc
fisttpll
sbb
es
inc
dec
aaa
jmp
push
or
outsb
pop
mov
cmc
enter
add
jb
mov
mov
pop
jg
stc
inc
mov
jle
jp
pop
dec
push
cli
sub
dec
and
and
sub
push
call
pop
movsl
jge
lods
and
push
es
cld
ss
fistps
inc
xchg
stc
call
jno
xor
push
push
test
addl
jmp
and
lahf
xchg
sub
out
cmp
ficoml
jo
mov
ss
lods
lcall
or
fs
mov
xchg
pop
xor
jge
cld
dec
stos
adc
sarl
pusha
aas
jmp
test
icebp
and
pop
cmc
sahf
mov
mov
mov
xchg
and
pop
jle
add
daa
pop
adc
jecxz
idiv
adc
and
pop
rcrl
or
jno
jmp
pop
ret
jmp
jnp
pop
xchg
incl
fsubs
and
fldz
cmp
cmp
out
mov
push
mov
je
js
mov
or
push
cmc
pop
fiaddl
inc
lret
dec
stos
outsb
dec
cmpb
ds
andl
mov
pushf
fldt
dec
pushf
movsb
cld
addr16
scas
cmp
mov
mov
inc
xchg
pusha
andb
jae
addr16
int3
cs
in
pop
fldln2
mov
mov
xchg
loopne
jecxz
cld
pushf
sub
pop
xchg
andl
cmp
dec
xor
ret
cmp
stos
lock
or
dec
pop
pop
xor
push
int3
fxch
ss
movsb
cltd
das
jle
pop
sub
cmp
pop
mov
shl
je
neg
in
pop
xchg
loopne
cltd
into
mov
add
xchg
jb
push
sbb
inc
cmp
iret
stos
in
in
mov
out
clc
out
cltd
sbb
mov
divb
test
push
outsb
rcr
mov
or
mov
rorb
das
int
test
dec
out
ret
xor
mov
inc
push
in
mulb
xorl
xchg
pop
mov
daa
adc
int3
xor
rolb
jne
inc
mov
pop
icebp
movsl
push
mov
gs
add
sbb
inc
out
and
imulb
insl
stos
or
lcall
aam
xorb
das
mov
dec
push
iret
scas
data16
mov
dec
leave
call
repnz
mov
cltd
lds
push
xlat
sub
pop
ret
loope
mov
movsb
nop
pop
test
add
or
int
xchg
jo
dec
and
inc
or
adc
jp
pop
jg
aas
cmp
icebp
scas
and
inc
test
mov
mov
scas
cmp
dec
push
in
inc
pop
sbb
sub
out
dec
iret
add
outsb
andl
mov
shrl
and
mov
and
add
inc
cmpsl
sbb
xchg
jns
and
xchg
cmp
xor
cmp
adc
jne
pop
inc
xchg
xor
test
roll
inc
adc
jmp
pop
mov
lret
jl
lret
fdivrs
je
fcmovnbe
iret
popf
cltd
xchg
xor
adc
pop
mov
mov
mov
push
and
test
imul
mov
ljmp
jno
daa
jae
jecxz
mov
arpl
hlt
shrl
sbb
jmp
xor
bswap
ds
push
sbb
pop
pop
xchg
aas
dec
test
inc
mov
and
pop
addr16
gs
std
push
sahf
inc
jae
cmp
repz
push
adc
and
shrl
jbe
push
or
ds
sub
ljmp
xchg
jbe
mov
psubq
fs
cmc
lret
rcrb
shlb
pop
cmc
inc
not
sbb
jg
adc
daa
jge
fucom
add
outsb
xchg
ret
push
push
dec
inc
push
push
imul
in
stos
stos
or
push
sub
jae
insb
testb
sbb
rolb
cmpsb
inc
sbb
xchg
lods
aas
mov
cmovl
sub
adc
cmp
out
inc
lds
test
mov
or
das
ret
leave
dec
mov
aam
movsb
mov
sbb
push
ja
add
push
push
xlat
push
add
ljmp
cmp
pop
roll
push
test
and
dec
out
xchg
shr
push
jmp
sahf
dec
inc
sbb
xor
adcb
inc
lcall
scas
int3
mov
push
mov
mov
out
aam
adc
out
inc
repz
repnz
mov
test
ficomps
xor
fsubl
adc
fdivs
sub
cwtl
daa
jge
cld
sahf
jmp
xor
jg
push
pop
xchg
pop
loopne
out
inc
je
or
loop
xchg
inc
data16
gs
cld
xor
mov
enter
adc
lock
shrb
dec
shl
dec
insl
dec
or
push
data16
pop
push
insl
adc
scas
mov
and
mov
sub
or
sub
sub
and
daa
push
lods
mov
test
pop
fnstenv
imul
cld
stos
mov
pusha
pop
mov
mov
pop
pushf
mov
dec
and
dec
cmc
aam
adc
lods
xorb
xor
sbb
add
mov
leave
std
xchg
adc
out
fisubrs
fwait
int3
fmull
add
adc
stc
dec
aam
repnz
add
xchg
cmc
rcl
jmp
ljmp
mov
addr16
adc
sbbl
jno
gs
scas
das
xchg
sbb
fimull
xchg
sbb
sub
cmp
movzbl
fcoms
sarb
mov
in
shr
xlat
adc
dec
cwtl
mov
jbe
int
iret
movsb
mov
mov
aaa
movsb
jae
incb
call
mov
aad
jne
jp
xor
sbb
sub
cmpsl
push
clc
imulb
xor
inc
inc
pop
pop
movsl
loope
scas
mov
sbb
les
sbbb
testl
pop
ficoml
std
leave
dec
and
xor
cmp
pop
mov
ficomps
mov
mov
das
push
xor
iret
xor
iret
loopne
cmp
or
mov
scas
cld
sub
push
lods
push
mov
xchg
cmp
xlat
std
stos
ret
cmp
ret
out
cmp
repnz
ret
dec
xchg
daa
aad
arpl
pop
push
loop
fimuls
loopne
les
imul
repnz
pusha
out
imul
xor
aaa
dec
cmpsl
hlt
mov
roll
mov
pop
inc
in
es
das
mov
pop
add
leave
mov
fistl
push
das
mov
in
and
xor
jg
addr16
jge
pushf
aad
lock
or
pop
imul
jl
inc
mov
jmp
bound
and
and
push
ss
outsb
fwait
or
cmp
pop
cmp
mov
mov
xchg
push
pop
sbb
mov
ucomiss
ljmp
loop
in
test
mov
push
es
pusha
xor
mov
gs
add
jl
jbe
xor
les
scas
fiaddl
xchg
sub
and
mov
mov
cmpsb
int3
cmc
dec
int3
test
mov
sarl
outsb
push
loop
mov
aam
pop
push
mov
test
stos
stos
repnz
lret
fimull
pop
cli
push
or
or
rorl
fcoms
data16
jb
icebp
mov
xor
and
test
fs
enter
dec
or
pop
lret
loope
jno
adc
or
inc
add
je
xor
insb
das
movsl
push
mov
lret
leave
mov
sar
mov
cmp
pop
stc
rorb
sub
or
ds
add
ds
push
fisttpl
xlat
hlt
sub
push
or
mov
mov
movsl
adc
or
jns,pt
and
jno
mov
in
mov
arpl
and
cmpsb
out
ljmp
ret
outsl
mov
push
mov
jge
pusha
test
cli
lcall
push
hlt
dec
adc
sbb
subb
jno
cmp
roll
inc
fldenv
loope
mov
cmc
sub
jbe
jge
jmp
xchg
cs
into
push
int
in
out
in
lods
leave
mov
lret
push
ret
xchg
mov
mov
js
pop
out
mov
clc
clc
pop
sbb
mov
dec
stc
cmp
mov
xor
and
mov
and
cltd
pop
jo
xlat
aas
xor
out
adc
cmp
or
and
popa
adc
xlat
or
push
push
adc
xchg
sub
addl
movsl
push
mov
and
cltd
aaa
imul
bound
imull
imul
call
xor
sbb
outsb
push
cli
xor
clc
ja
clc
xchg
lea
adcl
repnz
mov
sahf
dec
repz
jle
sti
and
stos
mov
movsl
mov
jge
mov
shl
sub
add
lock
js
pop
ljmp
push
inc
jno
jmp
ds
xor
pop
cmovo
les
cwtl
ljmp
shlb
popf
pop
scas
add
adc
addr16
cld
ds
hlt
stos
jae
shl
mov
clc
leave
mov
test
mov
stos
test
dec
lods
or
test
fidivrl
dec
sahf
mov
imul
rcr
sti
pop
int
add
das
js
mov
aaa
dec
xor
rolb
or
sbb
jle
cmp
jnp
cmp
in
push
arpl
outsl
xor
push
mov
or
jle
pop
rolb
inc
js
or
insb
dec
sbb
dec
or
jo
inc
mov
mov
jb
outsb
ljmp
mov
and
xlat
jae
jmp
lods
test
pusha
gs
xor
mov
sub
and
icebp
mov
jp
sbb
shrb
ds
mov
cs
test
and
cltd
stos
shrl
ja
push
sub
or
cs
movsb
mov
push
push
data16
aam
mov
outsl
xchg
insl
rclb
mov
ret
dec
pop
adc
mov
push
mov
enter
add
cmc
cs
loop
aaa
sbb
add
pop
call
hlt
adc
rcr
adc
enter
xor
mov
in
pop
hlt
xchg
scas
std
lods
or
fstp
jmp
mov
pop
and
cs
sbb
test
sbb
mov
stos
cs
test
mov
push
rorb
rcrl
data16
sbb
test
adc
imul
lea
pusha
out
cwtl
xchg
aas
jae
xchg
ret
adc
sub
rcr
mov
fldcw
mov
inc
test
push
enter
out
or
pop
daa
jmp
inc
jge
xchg
add
and
pop
lret
in
fisttps
sbb
add
xorb
das
adc
sbb
int3
pop
lret
or
js
add
add
inc
daa
cmpsl
mov
nop
mov
mov
sub
in
jns
cmpsb
mov
push
jno
sub
cs
push
jne
les
loope
lea
fidivrs
scas
leave
dec
sbb
arpl
fwait
pop
add
fsub
mov
xchg
xor
jb
add
push
fstpt
ljmp
out
cli
xor
mov
incb
adc
aam
lds
sbb
jbe
in
add
xlat
pop
xchg
cmpsb
xor
aad
pusha
iret
in
inc
repz
imul
out
gs
fildl
ret
call
and
mov
push
xchg
out
inc
pop
into
lds
lret
xchg
scas
jl
pop
mov
and
mov
out
aad
pusha
dec
fnstsw
out
xor
ficomps
popf
xor
add
insl
imul
cli
stos
mov
test
cmp
lahf
fidivrl
or
test
mov
das
je
and
xchg
lea
xor
cld
adc
or
sbb
mov
aaa
ljmp
test
or
dec
int
decl
mov
pop
je
cmp
hlt
sub
and
inc
popf
aad
jp
cltd
sub
subl
cmp
jge
jmp
mov
mov
pop
fwait
sub
lock
xchg
mov
push
div
in
mov
push
dec
test
adc
inc
daa
rolb
mov
scas
pop
scas
addr16
pop
in
mov
add
push
mov
fnstcw
fsubl
dec
jb
popa
and
xor
hlt
rcrl
mov
enter
nop
cmp
gs
popf
notb
aam
mov
out
sti
cmpsl
movsb
inc
mov
fdivr
sbb
pop
add
dec
rcrl
mov
xchg
ds
or
xor
test
push
loop
push
adc
adc
cwtl
add
mov
inc
push
outsb
xchg
ljmp
sub
stos
rclb
add
repz
popf
cld
popf
pop
divl
insb
xchg
shlb
loopne
cmp
scas
fldenv
xor
les
sbb
inc
ret
and
imul
cmc
addb
and
adcl
jmp
lret
sub
dec
clc
sbb
xbegin
pusha
in
sub
sub
cli
mov
into
daa
mov
nop
cs
mov
imul
aas
cld
test
lea
std
lret
inc
aas
insb
jmp
jae
xchg
dec
daa
sub
test
lods
pop
cmp
pop
mov
or
aam
or
mov
mov
jg
mov
gs
adc
fsubs
pop
xor
lahf
in
ret
addr16
aad
cmp
push
or
xchg
xchg
mov
dec
dec
push
sub
inc
sub
dec
jb
jno
jp
and
and
push
das
aad
jl
pop
cmc
push
add
add
or
push
les
inc
shl
cwtl
cmp
cmpsb
scas
mov
mov
dec
xor
pop
icebp
repnz
jl
and
jnp
imul
mov
mov
scas
pop
xlat
mov
inc
call
xlat
call
jecxz
cmpl
jne
cmp
mov
aaa
lock
addl
jae
dec
cmp
push
xor
cmpsl
int3
pushf
add
dec
push
fldenv
mov
jmp
lds
jb
inc
push
fstl
pop
push
cmp
mov
dec
push
jl
test
and
cltd
aad
cmc
jnp
jo
les
cmp
in
test
imul
mov
xor
xchg
lret
pop
fprem1
pusha
mov
aas
pop
shlb
inc
or
fsubrl
or
cmp
or
and
fsubs
push
cli
mov
jmp
addr16
outsl
cmp
aam
popf
pop
popa
cmp
inc
inc
hlt
xchg
sub
in
scas
mov
jp
mov
pop
std
mov
jb
jle
inc
mov
xor
mov
push
call
and
mov
push
pushw
popf
outsl
jge
cwtl
add
inc
inc
shll
dec
dec
inc
mov
imul
sub
sub
mov
cmc
jg
mov
mov
jge
and
pushf
xchg
pushf
jecxz
out
mov
jmp
mov
sbb
push
rorb
cli
ljmp
push
jecxz
xchg
mov
cmp
int
pop
lods
loopne
and
hlt
movsb
lea
repz
insl
pop
int3
mov
sarl
stc
xchg
sub
xchg
ss
mov
sub
pop
sub
shl
fsub
adc
fcompl
in
lahf
xor
jl
push
xor
jmp
aas
mov
ljmp
mov
rcrb
jb
sbb
push
fsubrl
pop
scas
dec
jb
lods
pusha
fimuls
push
test
repz
jbe
pop
icebp
in
or
insl
adc
mov
dec
sarl
lock
mov
jg
mov
xchg
cli
mov
and
ljmp
adc
sbb
cmp
pop
and
add
ret
pop
adc
bound
xchg
out
sahf
adc
xor
pop
and
lods
xor
and
rorb
xchg
inc
mov
inc
mov
inc
pop
fs
xchg
shll
pop
rcll
imul
movsb
and
xor
popa
sahf
pop
xchg
ljmp
jmp
popa
jp
push
scas
repnz
in
add
and
and
test
nop
xchg
mov
push
sarl
divb
xchg
aam
sarb
stos
mov
mov
dec
addr16
push
negl
pop
mov
push
cmpsl
mov
add
jno
adc
pushf
jle
into
mov
ja
or
les
jg
add
outsl
sbb
stc
add
lret
inc
add
loopne
ret
insb
pop
cwtl
mov
ljmp
ss
inc
push
inc
sub
pop
mov
inc
aad
sbb
aad
pusha
fldenv
fnsave
sub
push
ds
adc
cmpsb
inc
cmpsl
rorb
sti
or
sbb
ljmp
push
mov
daa
pop
dec
repz
fbld
jb
ficomps
addr16
out
std
outsb
shlb
outsb
faddl
cli
decl
cmpsb
gs
and
xchg
xor
imul
xchg
daa
pop
and
daa
lret
jp
and
push
add
add
arpl
arpl
int
bound
sub
inc
and
or
inc
sub
lods
push
mov
and
frstor
cwtl
movsl
xlat
mov
and
xchg
lcall
out
int
dec
jl
pop
mov
into
call
sbb
out
push
adc
aam
add
aaa
ret
mov
inc
aas
add
cmc
out
jg
jp
dec
jne
ret
xchg
jbe
mov
scas
js
cmc
sbb
imul
insb
lret
in
mov
call
push
xlat
jg
jp
xchg
xlat
fs
or
and
adc
push
push
sub
leave
orb
or
and
fcompl
lret
ret
lock
outsb
test
sar
jae
push
popa
in
push
mov
push
ss
cli
daa
or
clc
lds
stc
aam
push
iret
push
xchg
stc
cmp
outsb
mov
sarl
movzbl
movsb
or
mov
popf
mov
adc
inc
shlb
std
adc
xor
pusha
das
cmp
cmp
jno
push
addl
pop
ret
xor
add
jge
fsubl
pushf
lret
bswap
es
int3
xchg
insb
adc
xlat
push
sti
sbb
inc
mov
stc
cli
jl
adc
mov
lock
cli
ja
and
mov
cmp
cmp
xor
jmp
push
lods
lret
mov
adcl
ss
movsb
xchg
ja
pop
ss
loope
sahf
xchg
sub
scas
cmp
mov
jb
mov
jb
icebp
cmovne
jb
mov
mov
rcr
sarl
ljmp
jne
nop
lods
fsin
inc
and
adc
lods
mov
int
pop
dec
jno
stos
repz
stos
cmpsl
in
and
test
ljmp
sbb
lods
add
inc
mov
jg
xor
fstpt
cmp
pop
rcrb
cmp
outsl
cltd
imull
gs
std
fdivp
and
sub
or
push
xor
push
xor
pop
add
dec
mov
cs
push
or
mov
dec
pop
mov
stc
les
push
jnp
xor
xor
push
jecxz
stos
lret
mov
add
jmp
push
imul
addr16
cmp
stos
mov
and
in
mov
adc
dec
lods
mov
push
sbb
add
es
mov
and
out
in
sbb
cld
data16
loopne
loope
jo
jnp
sbb
popf
xchg
ret
bswap
push
xchg
fmull
test
and
pop
pop
mov
or
movsl
mov
mov
lahf
sbb
test
popf
dec
jns
loope
jo
mov
mov
cmp
xor
mov
movb
call
mov
rclb
dec
xchg
clc
or
icebp
divb
in
xchg
sbb
adc
fdivl
mov
decl
xor
popa
mov
dec
loop
add
inc
dec
sti
push
lcall
hlt
pop
clc
rorb
fs
add
in
sti
dec
js
xchg
xlat
aad
sbb
mov
pop
xor
mov
xchg
pop
movsb
sbb
push
pushf
loopne
pop
es
rcr
or
xor
pop
in
call
add
hlt
dec
pop
sub
mov
aad
cmp
lock
fs
add
xchg
jmp
orl
mov
repz
mov
push
mov
or
mov
add
dec
mov
add
lds
add
xchg
xor
or
int
lds
xchg
test
inc
xchg
xchg
and
add
icebp
addb
push
ljmp
jle
dec
push
lods
sbb
jb
in
imul
mov
jbe
mov
sbb
fisttpl
pop
pop
mov
ret
notb
jl
or
lret
js
imul
test
push
push
push
cmp
xor
pop
test
xchg
sub
sub
rdpmc
dec
sub
xor
jg
jp
call
pop
add
shrl
repnz
push
pusha
mov
out
ljmp
out
lret
sub
lret
hlt
pop
sahf
pop
jg
fcompl
sbb
shlb
cmp
mov
in
fs
xlat
dec
jg
push
cmp
dec
xchg
not
movsl
lahf
and
mov
xor
out
movsl
jmp
repz
dec
sbb
stos
aam
mov
shr
lock
push
loop
rorb
cmc
inc
pop
enter
sub
dec
rclb
sbb
pop
mov
sbb
outsl
sub
mov
loope
popa
push
add
mov
sbb
ss
pop
es
sbb
sub
fildll
adc
jbe
daa
imul
insl
cltd
es
jno
mov
cwtl
dec
sub
pop
cmc
add
push
push
inc
push
repnz
mov
inc
xchg
es
lds
pop
cmc
jb
or
inc
insb
scas
jne
pop
fsts
cmp
jns
cmp
in
jnp
dec
xchg
stos
dec
mov
jmp
mov
dec
aaa
pop
xchg
cs
ljmp
ja
pop
pop
and
outsb
clc
mov
jb
sub
lahf
push
sbb
movsl
pop
xlat
mov
jp
pop
inc
push
out
bound
test
xor
arpl
add
sub
pop
xchg
out
test
adc
sub
mov
ds
insb
sbb
adc
dec
test
jne
mov
repz
mov
mov
jb
sbb
test
loopne
dec
mov
fstpt
dec
xor
cmc
inc
inc
test
add
inc
jo
addl
push
movsl
mov
add
dec
rcrl
push
adc
in
mov
mov
js
outsb
jge
mov
mov
lret
cmc
hlt
rolb
push
mov
jnp
fwait
cmpsl
adcb
sbb
inc
or
and
sub
dec
pop
mov
ds
js
out
pop
push
push
cmp
cld
push
hlt
int
cmpsl
fdivl
imul
xchg
lea
leave
inc
cmpb
int
cmpsl
jp
and
sahf
adc
xchg
fwait
mov
in
test
int
stos
inc
mov
jmp
pop
mov
in
mov
icebp
mov
push
cmpsb
jnp
inc
das
adc
fistl
or
add
mov
add
and
inc
push
xchg
pop
lods
aad
daa
inc
ror
jge
jg
mov
jge
into
xor
and
jae
jnp
add
sar
adc
xor
movsl
mov
jnp
mov
stos
imul
faddl
sub
lcall
adc
int3
and
or
inc
cwtl
xchg
xchg
mov
pop
inc
jmp
int3
into
mov
mov
xchg
lock
divl
jmp
fcomip
hlt
push
ret
inc
aad
pop
sub
and
pop
jns
pop
xlat
cmp
inc
mov
lods
icebp
test
sbb
ja
cmp
add
lahf
movsl
mov
in
adc
es
leave
ret
lods
inc
iret
mov
roll
jns
stos
addl
rclb
into
lret
cmp
adc
hlt
jg
icebp
adc
adc
push
jp
sub
jmp
or
push
mov
sub
sti
subb
js
push
js
test
cltd
push
xchg
adc
lret
sbb
mov
mov
fwait
mov
int
daa
push
adc
fcmovnu
pop
add
mov
jno
test
inc
jbe
xchg
add
lcall
jnp
mov
int
xchg
aad
dec
incl
mov
cmp
add
jmp
pop
mov
fwait
das
pop
jno
iret
scas
dec
repz
add
fcoms
lahf
movsb
jnp
sbb
mov
cmpsb
fsubs
movsl
push
mov
pop
into
inc
push
xchg
subl
imul
pop
pop
push
sub
arpl
mov
xorb
fdivrs
rclb
mov
fidivl
loopne
jge
pop
or
clc
fidivl
jl
sbb
xchg
add
inc
int3
push
fcmovnb
lret
jne
sbb
cmp
dec
mov
or
cltd
mov
rclb
scas
adc
and
sarl
push
adc
int
jae
movsl
or
xchg
cltd
jle
and
out
mov
cmp
and
xchg
sub
lahf
stos
fcompl
or
lods
and
shrb
clc
aaa
cmpsb
loop
mov
mov
xor
jp
nop
or
inc
scas
add
or
dec
ret
mov
dec
dec
jecxz
mov
push
mov
movsb
cwtl
sahf
sahf
outsl
inc
imul
out
push
imul
fcom
nop
xchg
pop
push
addr16
popf
push
jbe
fimull
mov
mov
adc
mov
mov
adc
add
js
ret
sub
sahf
dec
sub
jno
aas
cmc
ljmp
sbb
sub
xor
in
rolb
push
pop
aaa
cmp
xchg
pop
sub
enter
or
pop
loope
test
loopne
and
mov
in
inc
dec
test
pop
negb
cmp
xor
xchg
js
cmp
cli
rorb
push
jge
sti
xorl
js
out
mov
call
leave
aam
fiadds
sbb
lcall
stos
iret
jno
jbe
fisttpll
pop
mov
dec
rcrl
movsl
mov
jo
dec
xor
repz
lahf
adc
popf
pop
xchg
jmp
fwait
adc
push
xor
daa
add
xchg
sub
rcrb
sti
insb
jl
jp
cmp
cmc
leave
jne
mov
arpl
out
ret
outsb
fldt
addr16
ljmp
add
mov
jns
fdivrs
stos
inc
adc
dec
jl
enter
hlt
sbb
mov
sub
sub
push
insb
jnp
mov
loope
push
mov
sub
mov
push
cwtl
mov
jl
xor
addr16
les
bswap
push
in
xor
fstp
sub
fildl
add
shr
mov
push
add
adc
cs
pop
sbb
mov
cmpsl
add
and
out
xor
cltd
jbe
ljmp
adc
lret
lret
xor
xchg
pop
sti
jmp
outsl
lea
test
into
pop
xchg
cmpsl
imul
hlt
push
add
mov
and
pop
mov
xchg
std
filds
aam
mov
dec
je
cmp
insl
loop
push
aad
pop
pop
test
or
push
sub
xlat
inc
xchg
push
in
dec
stos
inc
outsb
add
frstor
sbb
andl
lahf
sub
add
inc
orb
mov
in
cs
inc
daa
pop
movsl
outsb
lcall
adc
xlat
mov
aas
int3
jb
jmp
sbb
js
mov
lods
aad
cmp
sub
out
sub
jnp
sub
jl
mov
xchg
hlt
shl
push
leave
adc
mov
pop
inc
sub
and
xchg
pop
xchg
dec
out
ss
imul
add
xchg
clc
icebp
outsb
mov
pop
mov
ljmp
in
xlat
xchg
scas
dec
test
in
scas
jcxz
pushf
out
and
loope
pop
pop
loop
mov
xchg
jp
xor
and
das
push
lock
mov
mov
sub
xchg
dec
push
push
push
jb
xchg
sarb
movsb
push
pop
xchg
pop
out
and
push
pop
stos
scas
mov
cmp
gs
dec
sub
scas
push
inc
add
sub
push
inc
test
jmp
sub
cmp
xchg
lods
xor
mov
sbb
scas
dec
xchg
pop
lahf
xor
xor
imul
mov
std
mov
dec
aam
pop
inc
adc
es
lahf
push
das
rcl
and
test
imul
xchg
cmp
inc
sbb
mov
int3
insl
sub
xchg
push
push
cmc
lret
jge
push
das
xor
ror
rorb
out
jnp
sarl
movsb
hlt
sub
fisubl
addl
adc
add
push
data16
aad
cwtl
lea
xchg
fmul
stos
pxor
mov
push
dec
fstps
jns
and
stos
lods
pop
dec
frstor
das
adc
sbb
cmp
andb
dec
jmp
daa
lret
ja
pop
scas
pop
xorb
push
mov
shll
sub
mov
and
mov
push
push
xor
insb
xlat
imul
ljmp
mov
push
pop
nop
inc
adc
std
jmp
cmpsl
jmp
or
mov
jbe
incl
xchg
xor
loopne
lahf
mov
jle
mov
xchg
mov
fcompl
sub
outsb
jno
in
fcompl
mulb
sbbl
jmp
mov
push
xlat
sbb
mov
inc
sub
cmp
jle
push
ss
mov
mov
shl
pop
lds
inc
test
add
or
lods
fildl
cmp
xor
mov
mov
ss
or
adc
js
pushf
int3
pop
outsl
mov
outsb
in
lods
push
cmpl
push
scas
or
out
int3
cmp
jno
or
repz
mov
stos
xchg
pop
sub
cmp
pop
push
xlat
mov
pop
push
cld
sub
sbb
and
into
cltd
jae
jbe
pop
push
cltd
sbb
pop
imul
sbb
scas
lret
scas
in
pop
bnd
lea
mov
inc
push
iret
stos
jle
mov
mov
nop
movsb
test
jg
lret
in
inc
mov
out
jae
mov
xor
pusha
mov
jns
and
pop
dec
dec
add
sub
in
lods
cs
mov
sbb
sub
mov
add
xchg
sbb
jno
out
jmp
push
pop
out
in
repnz
inc
mov
sbb
test
fiaddl
mov
or
rcl
stc
xlat
scas
jp
fcompl
mov
daa
mov
outsl
bnd
push
mov
repnz
ja
popf
outsb
sub
push
push
jmp
push
stos
subb
ret
and
mov
pop
mov
inc
push
pusha
rolb
fldl
in
aad
shlb
fptan
notb
icebp
in
in
adcb
ja
mov
fiadds
adc
inc
push
arpl
fidivs
in
fimuls
cs
cli
andb
gs
sbb
cmpsl
adc
pop
mov
sahf
pop
mov
pop
test
dec
loopne
nop
lock
nop
test
lcall
fcmovbe
pop
adc
pop
mov
mov
xorl
fxch
mov
mov
cmp
test
push
fwait
in
popa
dec
adc
mov
les
push
jo
mov
xchg
pushf
movsb
jo
in
jnp
rclb
loop
add
scas
imul
test
jns
or
test
lcall
fsubrl
or
mov
adc
in
pop
xchg
sti
sub
mov
xor
ficompl
negl
mov
xchg
dec
sbb
repnz
out
out
fdivp
mov
mov
xor
cwtl
lea
jp
std
push
add
ds
push
push
lahf
push
adc
shlb
es
jne
dec
xor
fwait
cmp
std
ss
orl
or
inc
xor
pop
test
mov
pop
ds
inc
jb
fnsave
repnz
mov
insl
mov
sub
repz
popf
testl
jae
outsb
jo
sub
inc
mov
fldcw
sti
jp
dec
sbb
sub
and
add
or
je
int
jbe
add
add
xchg
mov
xchg
dec
xchg
ret
jnp
ja
fiaddl
lcall
xchg
inc
mov
fwait
push
sbb
cmp
mov
fisubrl
cmp
loop
adc
fldcw
push
fstps
mov
cltd
push
mov
xor
and
sub
movsl
or
lods
sbbb
insl
sbb
aad
lahf
pusha
or
jnp
mov
testb
xor
inc
xchg
imul
push
imul
stos
popf
pop
and
add
clc
fcmovu
xchg
mov
jecxz
push
stc
ficompl
loop
xchg
inc
mov
cmp
je
inc
outsl
dec
out
es
xchg
lret
outsl
lods
xchg
push
stc
das
out
fildl
or
iret
mov
aas
mov
adc
mov
movsb
subl
sbbb
xchg
repz
push
cmp
ds
cmpb
movsl
jo
js
push
cmpsb
pop
cmpsl
js
in
loopne
mov
out
xchg
and
jg
sbb
and
xchg
jbe
mov
mov
cmpsb
das
imul
and
ret
sub
xor
jge
xchg
enter
pop
lret
pop
mov
sub
cmpb
leave
fmull
sti
call
or
jge
mov
add
test
inc
add
notrack
rcr
push
cmp
add
push
cli
sub
pop
mov
sbb
cmp
push
push
stos
pop
or
cmc
pop
lret
ja
lea
and
popf
jg
stos
out
fisubs
sub
dec
std
fildll
lcall
iret
stos
cmc
mov
add
lcall
arpl
hlt
or
pmaxsw
je
mov
stos
insl
sbbb
ss
popa
push
stc
mov
jae
dec
add
je
xor
lods
inc
stos
mov
xchg
adc
jo
jmp
mov
adc
add
mov
jle
push
imul
test
lahf
dec
enter
inc
popa
jl
call
fisubrs
cmc
das
pop
icebp
std
scas
pop
leave
pop
pop
popf
and
pop
xchg
loopne
scas
es
mov
ficoms
mov
sti
sar
rcl
pop
aaa
stc
popf
fidivs
mov
push
and
data16
push
scas
outsb
push
outsl
mov
div
push
mov
scas
dec
outsb
js
ja
cs
imul
dec
push
dec
push
stos
mov
add
ljmp
loopne
repnz
mov
or
les
push
xchg
xchg
daa
pop
inc
add
cmp
add
xadd
movb
jno
les
push
push
and
pusha
into
lret
pop
enter
ret
fwait
adc
mov
cmc
push
mov
adc
or
stos
mov
mov
in
add
add
das
mov
sub
jbe
mov
sahf
stos
imul
out
cmpxchg
or
xchg
sbb
filds
xor
inc
jl
pop
sub
xchg
je
je
jg
stos
mov
inc
dec
jo
xor
and
cwtl
in
inc
mov
adc
mov
cmp
arpl
add
and
stos
leave
inc
insl
jne
mov
loopne
push
lods
xchg
cmp
adc
in
xor
out
ficompl
adc
sarb
sub
int
nop
push
rclb
push
js
sbb
mov
xchg
adc
and
mov
call
cmp
int
xchg
adc
fwait
mov
push
mov
cld
pop
push
mov
adc
cmpsl
nop
icebp
int
jne
mov
test
jae
test
cs
or
xchg
cmpsb
dec
add
ss
xor
outsb
leave
icebp
out
xchg
adc
mov
lods
lahf
cmp
sub
pushf
aaa
cmpl
loope
sbb
repnz
pushf
sbb
icebp
test
inc
lret
lcall
pusha
cs
or
into
xor
mull
sbb
mov
inc
push
adc
sbb
daa
pop
mov
sub
andl
leave
mov
sbbb
movsl
sar
cmp
xchg
enter
cmpsl
jne
out
push
jecxz
pusha
mov
mov
xchg
enter
orl
incl
jmp
xchg
dec
lret
out
xchg
adc
or
sub
ret
and
pusha
lea
push
ror
pop
popf
scas
fistpl
jne
mov
out
xchg
and
ljmp
fisttpll
nop
mov
mov
mov
push
mov
mov
adc
xlat
inc
cmp
inc
inc
cmp
mov
mov
andl
cli
mov
dec
push
add
movsb
addr16
dec
sbb
cmp
ret
fwait
scas
rorb
shrb
mov
js
add
inc
sub
iret
in
imul
in
lahf
fwait
insl
fdivs
sahf
mov
cmpsb
xor
sbb
sbb
out
sti
fsubrp
mov
sub
pop
pop
mov
shr
mov
add
inc
dec
inc
aad
leave
adc
or
aas
addb
adc
les
aaa
dec
lock
lret
xor
rcll
pusha
cld
cmpsl
dec
inc
adc
cmp
fcoml
pop
call
ja
sbb
ljmp
adc
lahf
fists
ret
hlt
jae
xchg
add
cmp
cmpsl
int
jb
add
fimuls
outsl
out
sbb
mov
jbe
pop
and
stos
xlat
jns
and
fmuls
push
shrl
mov
push
or
enter
sub
enter
and
pop
sub
lock
cmp
push
out
fdivl
jns
pop
push
mov
sbb
sbb
out
cs
sbb
xchg
fists
xchg
stc
inc
stc
movsl
push
call
cmp
xor
pop
jmp
jne
xor
xchg
dec
pushf
push
xchg
cltd
imul
pop
pushf
jo
dec
fidivrs
stos
ds
jl
sbb
ret
fadds
or
sub
jg
jle
in
out
push
mov
loope
das
mov
repnz
sbb
mov
cwtl
iret
in
pop
icebp
fwait
iret
scas
outsb
das
pop
ret
add
scas
lret
pop
scas
jae
push
xchg
or
mov
or
test
cli
mov
aas
pop
in
jle
rcrb
out
into
xchg
mov
pop
mov
and
les
pop
fwait
out
adc
jae
push
lahf
mov
testb
movsl
jmp
xor
push
pop
cltd
adc
xor
loope
movsl
lea
sub
push
jg
xor
add
sub
inc
rorl
addb
dec
ds
jae
and
sub
jmp
cli
test
enter
pusha
ret
scas
dec
and
outsl
sbb
fimuls
mov
and
jns
daa
cli
xlat
call
sub
fs
or
jo
movsl
inc
test
or
ret
mov
cmpsl
cmp
pop
shr
iret
sbb
in
push
push
mov
hlt
je
sub
inc
imul
jae,pt
pop
dec
imul
int
adc
mov
cmp
test
pushl
outsl
adc
test
xchg
sbb
sub
fstpl
mov
and
xor
cltd
inc
mov
dec
inc
mov
pop
jle
imull
mov
repnz
lods
mov
xlat
out
xchg
jne
and
xchg
and
movsb
in
outsb
aad
cwtl
dec
enter
aas
pop
aaa
aam
popa
sbb
jp
sub
aaa
out
xor
popf
mov
or
shl
arpl
jg
jnp
pop
sub
cltd
push
scas
imulb
ds
popf
cmp
mov
mov
cli
adc
mov
jg
frndint
stos
cmp
pop
jmp
lods
in
cltd
xchg
dec
leave
inc
cwtl
mov
ds
pop
insb
lea
fs
jne
xchg
out
scas
stos
mov
and
push
std
or
out
adc
int
test
stos
imul
ss
cli
mov
xchg
mov
shlb
mov
jo
adc
cmc
das
jo
inc
hlt
dec
pushf
repz
sub
lcall
mov
outsb
shl
pop
sbb
pop
bnd
jno
hlt
ret
scas
fucomp
push
cmpsl
in
mov
les
frstor
and
jne
jmp
sbb
lods
call
xchg
mov
mov
ficoml
lahf
push
sahf
dec
add
adc
jp
xchg
pop
imul
in
ucomiss
mov
cmp
repnz
sbb
mov
mov
mov
sbb
rcrl
imul
mov
sbb
cmp
pusha
jle
cs
pushf
sbb
or
lods
loope
pop
mov
mov
je
pop
inc
fsts
int3
aad
xor
push
call
and
pop
dec
ljmp
pop
cs
sbb
pop
mov
ret
or
push
sbb
sub
xchg
pop
sub
dec
stos
jno
jbe
out
mov
adc
fwait
lcall
dec
jmp
cltd
inc
jl
cltd
fsubrl
mov
sbb
jge
jne
cmp
icebp
jo
jno
scas
pop
add
and
xor
add
inc
aas
mov
mov
fcoms
dec
int
aam
xor
insb
cmp
loopne
pop
mov
sub
scas
xchg
cmp
cld
shll
fs
xchg
sub
sbb
and
xlat
mov
push
jbe
adc
mov
xor
int3
shll
pop
push
addr16
inc
cmp
test
jo
push
xchg
out
xchg
push
in
xchg
push
test
xchg
cmpsb
mov
orl
mov
int3
or
movsb
stc
xchg
sarb
daa
ljmp
mov
test
out
mov
xor
outsb
push
cltd
rcrb
ja
out
pop
sbb
sub
mov
mov
push
lcall
adcl
jecxz
xchg
shll
inc
mov
lahf
pop
xor
cmpsl
inc
pop
mov
cltd
out
iret
ss
in
mov
adc
jmp
stc
mov
sbb
fmulp
xor
nop
mov
in
mov
dec
fwait
jnp
cmp
mov
mov
dec
fmul
jne
std
pop
iret
scas
or
or
dec
test
xbegin
loope
mov
add
dec
dec
xchg
push
mov
loop
cmp
rcr
lock
ss
xchg
xor
pop
adc
ror
aas
lods
in
jmp
jmp
and
rcrb
cltd
pop
out
fildll
xor
inc
mov
mov
insb
nop
ret
xchg
ret
sbb
jns
dec
es
jp
fnsave
inc
jl
xor
div
lea
fdivrs
pop
pop
mov
aas
xor
add
data16
std
sar
stos
sbb
mov
iret
mov
mov
scas
shrl
xchg
iret
xor
pop
dec
push
call
subl
nop
dec
gs
mov
daa
xchg
stos
pop
in
push
jb
cmp
jp
push
mov
hlt
inc
mov
mov
cmp
daa
xor
cmc
cli
jle
mov
popf
or
nop
gs
insb
ret
outsb
mov
les
movsl
aad
aas
scas
jg
stos
lret
adc
adc
or
xchg
sbb
das
data16
jno
lcall
adc
jnp
jbe
je
pop
arpl
xorl
shll
in
pop
and
stos
test
outsl
and
xchg
test
loope
ret
das
xorl
and
shr
sti
arpl
enter
in
imul
scas
pop
incl
xchg
push
xchg
sub
test
cwtl
mov
push
add
inc
and
into
lds
push
mov
inc
push
xchg
dec
stos
pop
xchg
inc
sub
and
inc
fists
imul
scas
loope
fsubrp
jns
lret
dec
cmp
add
xor
pop
jmp
push
iret
daa
push
lcall
push
mov
inc
adc
jne
fdivrs
sbb
cltd
mov
ret
or
enter
push
mov
inc
or
pop
aad
in
add
sub
addb
cmp
fidivl
add
orb
repnz
es
cmp
adc
xor
subl
add
pop
pop
adc
aad
test
jae
lret
ror
je
xchg
xchg
dec
adc
jp
adc
inc
je
cmp
notl
mul
adcb
xor
je
inc
gs
int3
mov
dec
and
mov
add
fadds
lds
sbb
xchg
xor
cld
sub
repz
in
cmp
popf
and
fisubrs
arpl
lea
js
ret
xchg
divl
or
scas
out
test
adc
gs
fwait
out
daa
xor
shll
nop
cmp
pop
sbb
fbld
loopne
cld
stos
fs
jge
int3
cmp
int
loop
std
ss
fst
mov
bound
sar
mov
mov
mov
jnp
out
lods
mov
push
xchg
inc
scas
jg
dec
and
adc
and
pop
xchg
cmp
jp
cmp
jp
aam
test
jecxz
shlb
xlat
jle
sub
sbb
xchg
mov
int
imul
rorl
pop
sub
push
xor
mov
dec
dec
fdivs
js
loopne
lret
sub
inc
push
xor
iret
decb
loop
mull
inc
or
mov
mov
fistl
push
sbb
sahf
mov
sbb
jge
add
imul
dec
dec
push
dec
push
cld
clc
add
jg
icebp
cltd
lret
pop
mov
xchg
add
cltd
divl
adc
mov
inc
or
rcrb
xchg
lcall
sbb
ss
push
leave
out
push
cmc
jg
sarb
cmp
mov
jp
mov
mov
fbstp
loopne
add
sub
ret
enter
int
outsl
shrl
cmc
imul
insl
inc
scas
xchg
fnstsw
fldl
sub
sub
jp
xor
adc
sbb
loope
mov
mov
xlat
rorb
dec
push
mov
mov
adc
iret
mov
lret
adc
jp
and
ja
pop
add
adc
jecxz
mov
rcl
out
arpl
mov
iret
in
loopne
in
loopne
pop
popa
rorl
pop
mov
lods
cmpb
xor
mov
sbb
inc
dec
sub
daa
out
mov
lret
pop
repz
push
sahf
lock
or
sbb
sbb
call
out
dec
jae
add
cmp
cmp
cli
push
aaa
jg
inc
sub
andl
rcll
or
fidivl
xor
sbb
movsb
cmpsb
push
lret
mov
lods
fsubr
stc
push
pop
jecxz
jno
fs
insb
push
xor
sbb
mov
sub
add
pusha
or
lret
cmp
lods
pop
imul
mov
jo
sbb
cmpsb
mov
pop
int
inc
and
les
and
pop
pop
xlat
inc
jle
mov
movsb
leave
insl
cmp
subb
push
lret
dec
xor
fiaddl
repnz
xor
mov
mov
cli
aam
aaa
jae
or
add
mov
std
sarl
pop
add
lahf
mov
push
in
mov
mov
mov
cmp
addl
mov
out
sahf
mov
cmpb
push
dec
or
adc
aaa
into
cmc
lea
fwait
sbb
xor
pop
mov
or
idivb
or
lea
in
pop
push
jns
mov
fs
lret
stc
xlat
jns
xchg
insl
or
add
shrb
in
cmp
int3
int3
pop
mov
add
xchg
push
inc
bound
scas
jno
push
pop
ljmp
sub
mov
xor
in
loope
fs
loopne
sub
ret
jp
dec
push
adc
mov
cmp
sbb
pop
push
out
dec
mov
add
scas
and
outsl
inc
aam
iret
cmp
or
test
shrl
cli
adc
fs
stos
fildl
daa
imul
rclb
rcll
das
xor
fisubs
dec
std
ds
cltd
out
jo
pop
outsl
inc
sbb
aaa
sub
test
cs
mov
outsl
adc
fnstenv
xor
mov
xchg
fadds
mov
pop
push
push
rcrl
push
jns
sahf
sahf
mov
xchg
dec
sub
in
pop
fwait
ds
jecxz
mov
adc
ret
in
addr16
pusha
pop
xor
out
push
cltd
test
popf
cmc
fisttps
lret
jp
stc
fsubrl
aaa
sub
pop
xchg
or
bound
jmp
popf
jp
inc
xor
stos
popf
and
inc
outsb
popf
adc
test
xchg
enter
xor
xlat
add
in
stc
jle
out
jno
mov
daa
lods
mov
aaa
jb
jle
insb
pusha
xor
mov
stc
dec
push
push
imul
cmc
repz
loop
add
es
cmpsb
sub
pop
jg
xchg
mov
aas
push
loopne
lods
lea
in
jp
sub
sbb
sub
jg
into
push
fldt
call
lcall
xlat
insb
jp
xor
into
cmpsl
xor
mov
iret
lods
xchg
movsl
pushf
xchg
decl
sbb
push
cmc
arpl
and
inc
push
push
or
int
es
cmpsb
xor
adcl
jg
push
out
dec
mov
loopne
mov
faddl
fabs
xchg
mov
jg
stos
data16
out
fsts
aam
insb
bound
push
jns
and
jb
pop
andps
push
push
push
or
sbb
movsl
test
dec
int3
andb
push
addb
icebp
dec
sub
out
fwait
xchg
inc
fimuls
adc
sub
shll
int
cmp
push
adcb
dec
inc
out
scas
js
xor
mov
ljmp
pop
adc
adc
dec
dec
in
lret
nop
inc
inc
addr16
push
lods
inc
subb
inc
filds
mov
jge
aam
xchg
hlt
mov
jmp
mov
add
mov
hlt
cmp
cmpsl
loop
repnz
lcall
push
mov
cmpsb
fstps
nop
xchg
lock
cmp
mov
aad
sbb
dec
fnstenv
jnp
jns
cmpsb
sub
cmpsl
xor
mov
xchg
ret
mov
sbb
fldcw
jno
in
lods
cmpsl
inc
pusha
fucomp
and
jnp
in
jne
shlb
pop
ljmp
xor
adc
sbb
mov
data16
addl
add
fadds
inc
or
rcll
sub
jge
xchg
ret
add
aam
pop
iret
movsb
xlat
xchg
and
ret
mov
aad
dec
cs
int3
mov
sahf
sbb
ds
cmp
sub
dec
out
cmpsb
cmpsb
test
loop
pop
jl
pop
fcompl
mov
stos
sub
sub
scas
sbb
xchg
xchg
pusha
push
subb
push
and
fdiv
lock
shlb
aaa
outsl
push
bound
test
push
inc
mov
xchg
and
inc
and
mov
imul
clc
ljmp
lret
pop
jnp
cmpsl
mov
lock
aad
inc
mov
lret
sbb
aam
xor
std
jl
jnp
mov
fidivl
and
in
iret
lods
inc
bound
lret
shll
insl
mulb
xor
push
testl
aaa
and
jo
mov
mov
daa
mov
aas
jmp
nop
repz
xchg
pop
shll
lcall
xor
xchg
inc
hlt
stos
or
mov
adc
inc
or
jno
inc
sub
sbb
ljmp
or
or
add
hlt
imul
mov
adc
shll
cmpsb
push
and
sub
xchg
push
or
cmp
icebp
push
test
xchg
xor
add
mov
test
aad
in
test
aas
cmp
adcb
and
movsb
cmc
test
fnstenv
mov
sbbb
je
mov
out
lcall
pop
mov
sub
mov
and
push
xor
movsb
rcl
inc
add
and
stc
jg
jmp
inc
movsl
and
mov
inc
test
mov
sahf
inc
cwtl
sbb
int3
shlb
pop
fistps
push
movsb
add
xor
jg
ficoms
push
jge
leave
adc
sbb
ds
jns
jle
pop
adc
or
xor
cltd
push
mov
dec
push
cmp
jl
dec
icebp
mov
cmp
inc
dec
dec
or
imul
push
fbld
adc
sbb
inc
sub
sub
inc
in
lret
jae
adc
gs
xchg
inc
cmp
cmpl
fldt
push
mov
repnz
arpl
dec
push
push
ss
xchg
cmp
inc
inc
mov
sbb
mov
xchg
sahf
daa
je
jg
andb
in
pop
mov
out
imul
cmp
jne
aas
adc
fwait
out
stos
ljmp
nop
aam
fisubrs
adc
mov
orl
sub
or
sbb
loop
pop
sarb
lock
xchg
mov
call
sbb
jmp
or
movsb
mov
ja
mov
mov
dec
repnz
push
mov
jae
pop
sbb
arpl
int
and
add
insb
ret
sbb
andb
dec
mov
lods
inc
shlb
inc
jge
dec
adc
xchg
daa
dec
and
daa
fsts
out
jmp
hlt
pop
add
pop
or
in
lods
and
push
mov
int
movsl
mov
ror
jecxz
sbb
xchg
and
jmp
xchg
in
sub
and
sub
sarl
xorl
dec
cmp
mov
and
les
mov
insb
je
pop
jge
adc
cltd
jbe
imul
lahf
shrl
jne
dec
stc
stos
cmp
sbb
jle
inc
fnsave
push
add
imul
or
repnz
xchg
bound
loope
popf
add
and
fisttpl
mov
push
jno
notl
sub
add
jp
sub
dec
loop
xchg
ficoms
loopne
shlb
pop
cs
cmc
xchg
jb
pop
test
sub
add
inc
sub
adc
jg
test
pop
cmc
cmp
jbe
and
fsub
aas
outsb
mov
movsl
scas
jnp
or
xchg
in
mov
std
pop
sub
and
mov
hlt
push
mov
nop
add
nop
lods
out
cmp
fists
inc
rorb
dec
mov
mov
sbb
inc
icebp
sub
add
mov
cld
add
xor
test
stos
fldenv
in
push
jle
xchg
mov
aad
je
std
push
jp
aam
xor
inc
xchg
popa
sub
jne
pop
in
xor
test
test
mov
inc
cmp
dec
dec
ret
ret
shr
icebp
sub
xorb
dec
int3
cmp
mov
sbb
dec
in
stc
out
cmp
jg
xor
pop
lret
sub
sub
insl
ret
lcall
int
in
loopne
mov
repz
pushf
pop
fwait
mov
xchg
add
stos
stos
sub
push
stos
lcall
mov
lds
loope
or
test
in
fwait
ret
fsubrp
sub
adc
jmp
enterw
aad
or
jbe
sbb
cmpxchg
mov
es
addl
mov
jbe
aaa
or
rcrb
xor
dec
stos
adc
sub
pop
loopne
inc
pop
inc
leave
shll
dec
cmp
adc
mov
push
rol
dec
lret
mov
in
xchg
mov
xor
lds
xlat
sub
mov
push
dec
test
push
imul
jl
and
jge
mov
cmpsl
mov
imul
lods
ficoml
stos
inc
push
or
or
jbe
addr16
sub
push
mov
std
ret
lods
push
jecxz
pushf
das
add
pusha
and
lcall
xchg
push
jae
or
test
out
mov
jl
out
xchg
gs
push
stc
adc
xchg
cli
jns
jp
and
subl
push
insl
push
mov
cmp
addr16
lods
fpatan
in
ds
mov
fnstsw
push
xchg
push
adc
adc
push
mov
xor
mov
jecxz
outsl
xchg
add
inc
xchg
mov
cmp
add
outsl
loop
pop
push
pop
mov
add
sbb
or
stos
cwtl
aam
jno
cltd
xchg
aaa
pushf
mov
mov
and
xchg
ljmp
iret
sti
sar
mov
js
cmp
jbe
sbb
dec
test
inc
stos
pop
mov
cmp
mov
mov
aad
mov
out
push
jb
out
and
sbb
and
jl
in
jecxz
sti
jno
dec
repnz
scas
adc
daa
or
rcll
jne
stos
mov
push
loopne
cmp
cmp
push
mov
mov
push
push
frstor
rcl
leave
test
ret
pop
cmp
adc
repz
jae
stos
cmpsl
and
cwtl
fsub
xchg
xchg
jmp
std
cmpsl
xchg
mov
jae
mov
sbb
sub
movsb
jl
ss
addr16
xor
inc
push
loope
cmp
mov
xor
push
lods
push
xor
in
cld
xor
testb
push
ljmp
jp
mov
cmp
push
outsl
mov
sub
sub
fstpt
xchg
mov
leave
sbbl
pop
ds
aam
inc
jg
mov
loopne
repz
addb
jge
scas
vcmppd
mov
cmp
sub
test
xchg
addr16
or
lahf
cli
popf
jge
sbb
push
movsb
int
xor
xor
push
add
clc
add
add
mov
popw
sahf
sub
jmp
xchg
sub
mov
scas
inc
lret
push
adc
pop
aas
sbb
lods
cmp
add
arpl
xchg
pop
add
cltd
aaa
xchg
or
jb
nop
push
cmpsl
ljmp
popa
ljmp
inc
sbb
test
sar
mov
xchg
and
mov
adc
fldl
insl
ds
cmp
mov
std
aam
ucomiss
movsb
lret
dec
push
xor
xor
sbb
sub
adc
nop
sub
and
ja
jmp
popa
ljmp
js
js
into
sbb
sub
jbe
push
inc
aas
psubusw
in
push
jb
jmp
sbb
daa
xchg
imul
nop
das
ss
pop
xchg
je,pn
jl
movb
mov
stos
mov
fisubl
jo
jl
adc
jno
clc
mov
aas
pushf
daa
out
dec
cmp
pushf
div
addb
mov
outsl
lods
pop
xchg
mov
mov
adc
jmp
shrb
ret
push
lcall
xchg
in
mov
xor
add
pop
decb
cmove
mov
add
add
xor
inc
pop
sbb
adc
dec
pop
jne
and
mov
test
dec
lahf
jmp
outsl
pusha
push
pop
jl
lret
add
push
push
insb
dec
mov
hlt
cmp
inc
repnz
dec
xchg
rcll
inc
push
push
and
cmp
leave
call
shll
push
jo
aas
xor
xor
cmpl
aad
mov
mov
dec
ds
xor
mov
addb
lea
xchg
out
xor
cs
xchg
add
dec
ds
jo
stos
lods
int3
leave
and
xor
pop
cmpsb
ljmp
add
mov
mov
xchg
je
pusha
or
and
ljmp
in
mov
adc
sbb
push
sub
test
call
xchg
push
add
test
cs
pop
mov
outsb
xor
pop
jo
mov
icebp
pop
lcall
cmp
add
dec
stos
cmpsb
js
mov
icebp
sbb
in
mov
cld
test
jnp
jle
inc
pushf
pop
xchg
push
push
xor
mov
sti
addl
mov
out
xor
js
mov
cmc
and
add
sbb
in
nop
push
adc
lods
movsl
adc
sub
fidivrs
adc
dec
jno
cmp
cmp
cwtl
cmpsb
lret
or
leave
mov
adc
cmp
pop
cld
push
push
cmp
add
xchg
clc
cmp
sub
pop
jl
push
or
scas
fldcw
test
xchg
adc
icebp
into
das
into
icebp
testb
sbb
lods
xchg
pop
xor
and
inc
cmp
imul
mov
aam
mov
push
cmpsl
dec
nop
mov
xchg
mov
inc
out
lcall
jb
aaa
out
js
push
push
test
push
enter
pop
add
add
pop
pop
int
cmp
out
stos
mov
jno
imul
sbb
xor
mov
xchg
jecxz
out
fnstcw
sti
out
sub
jb
add
push
push
mov
cmc
call
cmc
jnp
nop
dec
add
adc
mov
jb
imul
jne
pop
jmp
jg
cmc
pusha
orb
mov
and
addr16
scas
fsubs
lahf
jge
repnz
mov
stos
int
aam
addl
popa
dec
adc
enter
jne
jo
jp
jecxz
mov
push
movsl
dec
mov
imul
insb
adc
loopne
add
divps
js
push
lods
cmp
test
shll
or
and
movsl
in
leave
mov
fwait
mov
xchg
push
mov
in
imul
inc
push
sbb
or
cs
dec
mov
jl
fisttps
in
mov
and
clc
jns
insl
sarl
rolb
movsb
fucomi
mov
mov
shl
cmc
xchg
jne
test
jl
jmp
add
lods
xor
repnz
pop
and
and
push
add
movsb
xor
lods
imul
movsb
outsb
js
repz
xorl
push
shll
mov
mov
xchg
roll
data16
mov
jle
cmp
inc
inc
xorb
add
out
inc
icebp
shl
lret
out
sbb
push
sbb
xchg
sahf
xchg
rorb
dec
fstl
push
mov
ds
push
out
sbb
sbb
adc
aas
or
xchg
or
dec
mov
jg
cmpsb
aaa
sbb
loope
fisubl
in
insl
orl
add
dec
cld
sbb
es
fs
das
pop
ljmp
sub
add
pop
dec
pop
lret
push
pop
aaa
shlb
in
or
mov
sbb
sbb
adc
push
daa
roll
out
dec
xchg
jmp
cwtl
repz
iret
les
pop
subl
jge
xchg
repz
push
sarl
aad
push
sbb
pop
shlb
sti
ja
cmp
pop
pop
jno
dec
cmp
add
add
xor
lret
movl
pushf
lea
cli
ljmp
and
cmovne
and
lock
dec
test
nop
loopne
test
ret
jg
out
lret
hlt
test
sub
dec
fisubrl
xchg
mov
fdivr
dec
jecxz
push
pop
lret
inc
fsts
dec
insl
repz
cltd
and
aad
sub
xor
pushf
sti
mov
jge
cli
jmp
int
int3
dec
add
mov
lret
mov
lods
inc
bound
repnz
mov
push
cwtl
mov
xor
sahf
push
pusha
lcall
fiadds
inc
les
arpl
jp
cmp
rcl
gs
ja
in
adc
roll
in
sbb
pop
dec
jp
push
push
shll
cli
cmpsl
lret
cmp
dec
push
inc
test
pop
lods
es
mov
adc
inc
cmc
pop
cltd
mov
stc
rcll
adc
pusha
push
shlb
rorb
xor
es
push
mov
test
mov
ljmp
das
or
rolb
sbb
jmp
in
vrsqrtss
lods
mov
push
cmc
and
lret
sbb
xor
sub
pop
test
dec
or
das
mov
daa
shlb
adc
lea
sub
jbe
bswap
xchg
xor
mull
pusha
jle
shll
push
push
int3
add
pop
sub
into
push
and
repz
add
jno
cmp
jnp
dec
stc
sbb
pop
jae
loop
stos
inc
xchg
incl
xor
clc
sahf
leave
push
ljmp
popf
jg
xor
jae
inc
jmp
xchg
xor
pop
mov
js
pop
cld
mov
xchg
jbe
dec
dec
cltd
ja
fildl
dec
cli
stc
sbb
jg
mov
push
xchg
xlat
sub
dec
mov
xchg
mov
pushf
stc
rcrb
dec
mov
inc
das
mov
cltd
sbb
mov
out
fsubs
popf
rorl
pop
repnz
jnp
mov
test
mov
push
push
cli
daa
mov
lods
xor
xchg
je
xchg
mov
xorl
add
push
cmp
mov
or
jl
popa
mov
iret
mov
scas
pop
add
lcall
adc
xchg
movsl
mov
outsb
sbb
pop
push
out
std
inc
xor
cmpsl
ret
push
aad
es
dec
clc
ret
pusha
addr16
stos
lcall
mov
jae
xchg
mov
dec
movsl
les
jg
out
xchg
iret
test
scas
icebp
std
inc
fistpl
or
pusha
lret
lods
lds
aad
fnstsw
movsl
pop
mov
mov
xchg
scas
mov
test
xor
jge
subl
cmp
popl
ds
fidivrs
jno
fsubl
inc
fnstcw
cli
xchg
and
lea
mov
je
dec
mull
sub
aam
jge
push
mov
out
and
lfs
ret
sub
mov
mov
jbe
lcall
mov
and
and
aaa
pop
mov
fsubl
inc
fstpl
ds
cs
jbe
xchg
adc
lea
fidivrl
orl
icebp
cmp
jns
daa
and
sti
ja
cmc
sub
gs
sub
aas
mov
mov
or
fwait
add
fcoms
add
mov
add
inc
or
insb
cmc
xchg
hlt
data16
rcrb
in
cmp
push
mov
or
aas
jmp
dec
inc
mov
pop
and
data16
xchg
in
cmp
repnz
addr16
sbb
push
daa
pop
mov
and
pop
cmp
cmp
enter
and
sbb
popf
xchg
mov
push
outsb
incl
jge
filds
mov
cmp
xchg
sub
and
and
popf
out
jmp
fwait
cmpsb
stos
and
cmpsb
mov
or
push
pop
adc
fcmovnu
add
sbb
popf
push
mov
mov
mov
ds
stos
push
mov
loop
pop
movsl
cmp
ja
lods
mov
jno
xorl
sub
push
inc
sbb
nop
nop
scas
jns
xor
scas
int
stos
fdivl
out
addr16
adc
fistl
jle
xchg
jno
ret
dec
ljmp
daa
mov
dec
lods
das
xchg
mov
mov
popa
mov
push
test
push
fucom
push
ficoms
mov
insl
imul
pop
mov
stos
jne
mov
pop
sbb
sbb
mov
sbb
dec
xchg
mov
repnz
ret
sub
dec
xchg
inc
xchg
aaa
inc
cmp
outsl
outsl
lahf
xor
xor
aaa
lods
jne
jle
cld
mov
adc
dec
mov
popf
jmp
repnz
xchg
adc
push
punpckhwd
shlb
xchg
or
xchg
aad
icebp
mov
cld
push
and
jge
mov
daa
rorb
xchg
das
cmp
or
xchg
mov
filds
jg
pop
lea
mov
cmovae
sbb
std
sbb
sub
cmp
movsl
iret
pop
cmpsb
test
sbb
std
xchg
aaa
pop
push
pop
fsts
mov
ret
jmp
inc
lahf
dec
add
pop
leave
leave
sbb
in
cmp
fsts
inc
out
ret
xchg
push
in
jl
xchg
loop
rorb
dec
iret
les
push
xchg
mov
xchg
adc
ret
xor
mov
lret
outsb
incb
dec
rcrb
dec
movsb
mov
lahf
jno
repnz
ss
mov
movb
nop
ret
xchg
or
pop
push
or
adc
sbbl
into
and
cmpsl
fs
and
jne
cmpsw
test
push
repz
aam
inc
out
sbb
lahf
fnsave
shrl
dec
xor
lcall
adc
pop
fsubrs
stc
adc
mov
adc
jge
cmpsb
cld
js
mov
das
xchg
mov
into
jg
imul
mov
mov
mov
pop
sti
sub
repz
push
cmp
mov
xor
out
clc
pop
mov
cmp
or
inc
lock
push
repnz
adcb
pop
je
jb
hlt
inc
fcomps
pusha
cmpsl
jae
icebp
cs
dec
lcall
test
stos
scas
vcmpsd
pop
jnp
stos
jl
and
outsl
js
sbb
out
jge
aas
aam
mov
mov
inc
dec
lcall
dec
cmpsl
shrb
lret
inc
push
cmp
std
inc
mov
movsb
daa
sub
int
xor
shll
call
cmp
into
and
push
jmp
and
and
fwait
ret
fmull
fcoms
int3
sub
dec
push
sbb
xchg
push
mov
cltd
or
inc
or
movsl
in
fimuls
sti
popa
push
fidivrl
mov
xor
push
mov
jmp
and
mov
aad
add
mov
inc
jb
mov
sbb
test
lret
lret
mov
jg
arpl
sbb
cmp
hlt
pushf
inc
test
out
jge
xor
repz
loopne
or
jle
jno
cmp
aaa
mov
ds
inc
scas
sub
mov
inc
test
add
ljmp
out
mov
dec
cmp
jno
pusha
popa
mov
je
gs
sbb
push
adc
je
xor
notl
sarb
xchg
adcb
pop
xor
jecxz
out
adc
pop
mov
inc
lock
push
and
jecxz
sti
mov
mov
lret
in
sub
pop
adc
pop
push
xor
xchg
out
cwtl
mov
lret
inc
mov
test
fisubrs
repz
rorb
iret
sbb
sub
pop
andb
mov
and
push
sub
mov
pop
enter
test
mov
pop
test
icebp
mov
xor
jns
jecxz
inc
pop
or
aam
in
pop
es
inc
popf
cmpl
imul
jp
mov
cld
hlt
lds
jmp
mov
adc
sahf
out
push
arpl
jp
call
xor
push
lret
xlat
sub
jno
pushf
inc
pop
pop
fsubs
lcall
cwtl
xchg
pop
cmp
aam
dec
out
and
xlat
lock
scas
jle
xchg
cltd
jnp
data16
ret
or
sbb
adc
int3
adc
mov
inc
sub
int
pop
mov
mov
test
lock
mov
or
jmp
add
inc
into
int
xor
dec
orl
test
dec
xchg
push
dec
mov
pop
or
mov
fldt
inc
call
cmp
push
inc
mov
shl
mov
call
xor
movsb
gs
cmp
mov
mov
push
cmpb
add
out
in
fstl
repnz
loope
cld
aam
mov
inc
jb
sub
pop
inc
mov
ja
mov
dec
sbb
push
test
add
cmpb
pop
mov
aaa
add
into
movsb
lock
inc
or
mov
test
inc
sbbb
rcll
scas
inc
div
call
or
std
add
scas
mov
xorb
pushw
cs
shrb
xlat
call
sahf
mov
insb
and
out
bound
sbb
lcall
orl
lock
repnz
lcall
call
testb
shrb
and
pop
cmp
dec
mov
es
out
mov
xor
stos
push
aam
jle
insl
imul
cmp
loope
mov
fsubs
ja
push
and
insb
or
cltd
mov
lcall
push
or
inc
add
imul
cld
insl
push
sbbl
xor
lcall
pushf
addr16
jae
dec
jne
push
adc
ja
push
and
dec
push
rclb
cs
cli
popf
dec
cmpsl
xchg
shlb
lea
cmp
inc
jp
stos
test
push
or
xor
inc
mov
sub
fildl
roll
sub
mov
es
jae
dec
popf
sub
incl
jae
add
cmc
outsb
fninit
mov
out
cmp
in
mov
and
mov
mov
mov
and
jl
pop
push
nop
call
insb
decw
pushw
aas
jg
and
iret
mov
jl
leave
adc
inc
imul
pop
and
fmull
scas
cs
push
add
adc
dec
add
jno
cmp
das
mov
and
xor
movsb
sub
idivb
jmp
sub
or
mov
add
outsb
jmp
sub
bound
or
std
fisubrs
sbb
cld
in
and
mov
xlat
cmp
xchg
outsl
jmp
cmp
adc
dec
cmp
idivl
add
mov
or
mov
xor
aaa
or
out
and
bndldx
lds
mulb
dec
popf
xchg
mov
xchg
pop
add
push
hlt
push
call
test
or
xor
mov
std
mov
ficompl
lret
cmpsb
cmp
movsl
xchg
dec
push
mov
dec
dec
std
cltd
mov
pop
rorb
outsl
int3
cwtl
jge
push
mov
fistpll
aam
add
jge
push
or
xor
scas
mov
test
or
arpl
lahf
push
mov
outsb
lea
xchg
jecxz
fs
jno
ss
aaa
bswap
mov
and
scas
fcoms
in
bound
in
xor
stos
inc
sub
sub
prefetchw
rclb
adc
jae
pop
test
out
rcr
out
mov
adc
int
or
mov
jmp
fcmovu
mov
nop
jmp
pop
mov
adc
movsl
inc
jno
push
rorb
leave
rol
movsb
jmp
or
subl
inc
mov
cmp
mov
jne
cmp
push
jne
push
add
test
mov
xor
cli
adc
xor
aad
sbb
fdivs
pminub
not
pusha
subl
xor
mov
lea
add
leave
or
mov
pop
add
aam
mov
adc
jl
movsb
ljmp
inc
mov
inc
xchg
xchg
cmp
call
insb
cmp
rcrl
das
sbb
test
lock
movsb
insl
inc
stc
jbe
xor
push
iret
in
mov
subb
adc
mov
xor
push
mov
adc
imul
adc
fwait
push
fcmovbe
fpatan
out
sti
int
mov
movsb
add
out
push
add
outsl
adc
cwtl
fcmovnb
pop
push
aaa
fildl
pop
hlt
mov
sarl
pushf
jge
add
inc
or
jle
add
divb
rep
add
ss
lret
clc
test
addb
repz
jns
mov
dec
ja
rorb
lret
push
inc
ss
out
xchg
into
dec
pusha
lea
cmp
pop
outsb
xor
mov
jbe
lcall
dec
xchg
cmp
repz
test
or
inc
dec
jae
xchg
testl
xchg
scas
in
sbb
push
push
xor
sub
stos
ljmp
sarl
ret
lds
cmp
lods
out
inc
adc
jb
adc
fistpl
xchg
add
cmp
ljmp
leave
pop
mov
out
push
xchg
mov
xorl
and
icebp
sti
pusha
in
lret
mov
sahf
and
mov
sub
xchg
lock
test
jmp
negb
ret
and
cmc
adc
add
jne
fistpl
fadds
sbb
into
inc
xchg
mov
mov
cld
jmp
dec
leave
int3
in
mov
mov
rcr
push
out
mov
jae
push
adc
mov
jne
enter
push
fisttpll
xor
mov
cltd
lock
das
xchg
lods
jns
mov
sbb
inc
jl
add
fwait
pop
xor
cs
cmp
dec
fstpt
notb
adc
test
icebp
lahf
rcll
ljmp
push
xlat
sbb
mov
icebp
xor
mov
pop
sbb
push
in
pop
mov
adc
mov
data16
jbe
aad
push
arpl
outsb
out
and
cmpsl
add
aaa
push
jge
dec
sub
insl
loopne
popl
pushf
out
inc
in
xchg
mov
das
adc
cmpsl
hlt
sub
js
dec
jnp
insb
mov
dec
out
sub
jbe
mov
xor
mov
inc
and
das
sar
outsb
clc
mov
out
cmp
flds
lods
mov
mov
sub
xchg
cmp
xchg
imul
and
pop
push
aas
out
xor
jge
hlt
out
push
mov
cmp
mov
add
and
jmp
dec
out
outsl
enter
dec
enter
lcall
adc
insl
xchg
xor
popa
popa
mov
jo
jle
loop
aaa
cwtl
jmp
mov
test
jecxz
jle
inc
pushf
sub
les
xor
je
popf
adc
bnd
add
sub
hlt
mov
pusha
enter
cmp
mov
outsl
popf
mov
fs
cli
sarb
xchg
or
pop
xchg
or
imul
jl
mov
repnz
mov
cld
lret
inc
call
mov
outsb
frstor
mov
fsubl
add
push
sahf
add
cs
and
and
push
adc
sub
gs
in
aam
mov
insb
mov
aas
gs
mov
adc
adc
cs
inc
xchg
sub
aaa
inc
addr16
leave
outsb
leave
cmp
in
lods
loop
fildl
test
jecxz
fwait
cmc
jge
mov
add
cmp
pop
cld
dec
stos
sbb
cmp
js
or
ret
gs
mov
xchg
fs
inc
loop
fdiv
cmp
shlb
outsl
sub
cmp
push
mov
fcmovbe
xchg
out
subl
jge
mov
repz
adc
inc
push
cmp
fisubl
mov
int
js
movsb
out
fisubrl
lock
ss
jo
mov
int3
fs
out
inc
push
fisttps
lcall
pop
popa
or
movl
mov
mov
fimuls
mov
addr16
mov
int
dec
ret
mov
icebp
popf
cmp
aaa
fcom
cmp
mov
std
and
mov
lock
test
jle
movsl
sbb
jl
scas
mov
pushf
cmpsl
outsl
mov
push
inc
xor
and
dec
inc
test
pop
rcrb
scas
mov
and
xorb
xor
test
lcall
cmpsb
sbb
xchg
mov
sbb
dec
ljmp
leave
scas
in
mov
inc
subb
dec
xor
jge
insb
mov
push
add
xor
xor
lret
mov
or
and
dec
lcall
roll
cltd
push
push
mov
inc
jae
add
push
jle
mov
in
scas
test
mov
jns
pushf
shl
mov
inc
xor
int3
and
rolb
stos
sbb
cmp
std
in
or
inc
mov
ret
sub
or
popf
addr16
cwtl
mov
pop
inc
and
dec
cli
inc
leave
imul
sub
jmp
aad
mov
mov
lock
loope
mov
test
jmp
xchg
sub
dec
out
outsb
mov
push
repnz
icebp
push
into
andl
addr16
inc
and
sub
mov
mov
mov
ja
dec
xchg
fldenv
sahf
cmp
jo
clc
fildll
mov
push
xchg
or
jmp
cmp
jo
mov
lcall
adc
xchg
lret
cwtl
repz
ljmp
dec
cmp
ret
popa
jne
and
cwtl
js
jl
dec
sbb
mov
out
mov
pop
mov
in
xchg
jnp
adc
or
jae
arpl
int3
ljmp
es
aam
outsb
repz
rclb
add
popa
push
call
out
jb
or
xchg
hlt
nop
dec
dec
xchg
add
test
fldenv
popf
xchg
and
js
or
mov
sbb
out
lods
jge
inc
add
repz
pop
xchg
jle
xor
mov
in
sbb
std
hlt
loope
fstps
jecxz
sti
out
shll
ja
xchg
mov
adc
jmp
sub
mov
mov
jp
mov
pop
or
xchg
or
icebp
in
sbb
xchg
pop
add
in
dec
mov
hlt
mov
lock
adc
ret
addr16
adc
or
lods
mov
popf
xor
cmp
jne
int
cli
movsb
adc
aad
fsubl
sub
xlat
pusha
pop
and
mov
neg
fcmovne
out
push
or
out
cwtl
lock
jnp
shr
je
idivb
in
mov
cld
mov
dec
andb
or
sbb
lock
cmp
cltd
pop
pcmpgtw
pop
xor
pop
cmpsl
pop
repnz
cmp
lcall
sub
or
mov
push
in
shll
pop
cld
xlat
clc
xor
mov
stc
push
sarl
mov
mov
cmpl
xchg
or
es
insb
ret
inc
xlat
orl
cmpsl
stos
jmp
and
inc
das
jecxz
xor
mov
xor
imul
mov
inc
push
in
lea
mov
sbb
cmp
pop
bound
pop
dec
dec
dec
jo
xchg
adc
adc
gs
ficoms
imul
sub
test
pop
sti
jl
scas
jle
mov
fldt
loope
in
inc
dec
out
jp
dec
loop
fnstsw
xor
inc
pop
clc
fcmovnu
fiadds
fdivr
mov
mov
push
test
repz
sbb
fdivrs
scas
ljmp
cmp
mov
fimull
mov
enter
jecxz
mov
test
in
xchg
outsb
push
sub
dec
push
stc
push
out
cwtl
aaa
cmp
lds
pop
lods
jmp
pop
mov
out
mov
xchg
adc
movsb
xor
mov
negl
push
inc
nop
je
pusha
loope
fdivrs
mov
mov
ja
imul
xor
rorl
and
mov
loopne
mov
cs
adcl
pop
std
mov
sahf
add
call
scas
mov
shlb
sahf
fidivl
loope
cmp
sub
mov
lret
cmp
stos
data16
mov
fs
sbb
dec
loope
sbb
lods
int
jns
pop
sub
mov
out
jns
xchg
push
std
call
mov
mov
addr16
cmp
outsb
pop
sub
inc
xchg
pop
sub
out
sahf
or
fidivrs
sub
fnstsw
mov
inc
cwtl
xchg
jmp
incb
loope
test
orl
mov
adc
pop
ljmp
pop
mov
fisttpl
adc
pop
push
lods
jle
sub
pop
push
pop
test
sahf
in
jae
iret
stos
scas
mov
inc
adc
stos
push
shl
push
or
sahf
popa
dec
or
sub
pushf
push
xor
inc
xchg
push
inc
mov
mov
popa
repz
fistl
aaa
popf
cmp
int3
and
inc
xchg
shrl
dec
bound
sbb
into
cwtl
push
pop
mov
jno
mov
ljmp
xor
or
mov
imul
sub
movsl
aaa
mov
mov
lahf
int
jb
in
popa
mov
adc
cli
lcall
mov
addr16
dec
clc
shl
cld
scas
sarb
xchg
in
xchg
popa
fnstenv
aam
or
fcmove
dec
jp
jecxz
push
xchg
mov
lds
push
popa
imul
adc
sbb
push
xchg
pop
and
mov
lods
clc
rcll
mov
jg
xor
mov
stos
je
mov
pop
sub
push
into
cmovae
fwait
popf
sub
xchg
or
xchg
and
es
add
dec
mov
inc
addr16
scas
push
or
loope
js
rol
ljmp
xchg
test
enter
xchg
sahf
movsl
ds
sbb
popa
sub
sub
mov
push
cmp
or
popa
lcall
adc
les
enter
dec
xor
jmp
lock
jo
imul
sbb
inc
ret
inc
mov
vpminsw
push
push
pushf
jp
ljmp
lds
pop
fs
pop
lret
outsl
std
daa
mov
jns
jne
mov
adc
xchg
hlt
or
cmpsl
fs
cli
repz
mov
in
sbb
jae
fbstp
stos
xchg
fisttpll
sub
mov
xchg
mov
and
jmp
mov
and
mov
or
in
das
adc
pop
sub
push
nop
push
sbb
fadds
sbbb
fucomip
into
push
in
mov
pushf
jns
data16
mov
cmp
insb
lock
or
and
bound
adc
popa
je
outsl
lcall
add
es
push
push
mov
inc
in
push
xchg
mov
popa
test
cld
push
mov
hlt
out
movsb
loop
loope
popf
mov
out
or
fdivr
mov
out
mov
xchg
movsl
jb
sub
data16
pop
les
daa
xor
pop
jnp
call
mov
mov
hlt
aam
pop
mov
jl
inc
enter
cmp
mov
mov
sbb
pop
pop
mov
lock
lea
test
sti
in
jmp
xor
dec
dec
stos
and
rcrl
aad
mov
xlat
mov
cmp
fwait
lds
sti
adc
lock
cmc
xchg
sarb
nop
add
dec
into
adc
cmp
imul
pop
sub
xchg
lods
das
shll
sub
sub
push
ret
jo
icebp
push
jnp
fcoml
push
js
mov
xchg
xor
out
jno
pusha
outsl
stc
popa
xchg
xlat
insl
inc
xchg
rcrb
mov
insb
xor
push
pop
call
fists
roll
lret
bound
aaa
insb
cmp
mov
push
inc
pop
outsl
pusha
pop
xor
jne
shufps
jmp
inc
push
mov
insl
sub
test
jg
int
popl
in
adc
in
decl
push
jne
mov
xlat
jb
xor
imul
cmpsl
mov
and
mov
aam
inc
push
fcompl
cmpsb
and
lahf
leave
bound
sub
loope
xor
jge
ja
mov
jae
inc
mov
sbb
call
scas
sub
js
cmp
mov
adc
push
sub
adc
cli
pop
push
popa
inc
cwtl
and
movsb
loopne
dec
pop
xchg
pushf
and
inc
imul
ret
mov
add
nop
sbb
pop
sub
pop
cld
and
pop
mov
mov
adc
or
sbb
mov
mov
lahf
cmp
out
push
fdivs
cmp
mov
lret
adc
sarl
sbb
ss
push
in
dec
gs
dec
ret
icebp
mov
xchg
sub
push
sbb
pop
and
imul
cmc
popf
cmp
cmp
mov
mov
xor
rcrb
or
popa
pop
push
ja
popf
lea
fcmovne
aaa
imul
mov
shl
movmskps
add
ds
out
mov
fstpt
cli
mov
sbb
daa
add
loope
sbb
and
and
repz
add
mov
cmpsl
cmp
popf
dec
hlt
mov
mov
mov
inc
out
shrb
fdivr
cmp
or
loopne
mov
mov
mull
leave
imul
xlat
jno
push
loopne
repz
ret
jb
xchg
adc
cs
mov
sub
adc
shll
sub
iret
aas
sub
lea
int
xor
inc
dec
mov
xchg
add
jnp
xor
je
jb
mov
data16
fcoms
into
xor
push
adc
sub
hlt
xor
cmc
lcall
pop
xor
out
into
adc
mov
xchg
repnz
cmpsl
sub
xchg
add
sub
nop
cmp
mov
jge
ja
jp
add
and
test
pop
jb
mov
push
test
sub
jle
jmp
incl
inc
lods
pop
pop
jle
jne
jl
pop
sub
insl
mov
sub
add
cmpsl
sub
daa
outsb
test
mov
fsubrs
push
adcb
fwait
xchg
add
pop
pusha
shrl
cld
js
test
jp
roll
aaa
enter
jno
jmp
pop
jo
lcall
ror
sti
bound
add
jg
lock
out
mov
dec
stos
pop
dec
and
add
dec
test
fadd
repnz
mov
lods
daa
mov
sub
cmp
stc
pop
jecxz
popf
in
xchg
mov
dec
mov
mov
dec
push
xchg
les
stos
sbb
fcmovne
bound
xor
addb
mov
dec
cli
pop
das
pop
inc
pop
jo
dec
jp
mov
sbb
dec
icebp
out
and
clc
adc
sub
inc
cmpsb
sbb
dec
push
xchg
add
addr16
ret
mov
sub
sbb
or
movsl
jge
fcoml
add
pushf
ficoms
pushf
repz
push
aaa
and
push
aad
not
xlat
push
aaa
mov
jge
add
mov
and
daa
sub
and
ret
aam
lahf
sub
mov
inc
add
mov
add
push
adc
test
shll
jb
add
cld
in
mov
test
pop
cs
movsl
stos
inc
mov
in
or
inc
fs
sub
ja
cltd
stos
adc
xorb
xor
xor
adc
jo
das
fdivs
jo
out
sbb
mov
dec
jmp
push
pop
cmp
mov
jg
out
jae
gs
push
jle
pop
jmp
add
dec
clc
arpl
pop
test
or
test
aam
push
lahf
rorb
jg
xor
xchg
or
shl
push
and
mov
xchg
push
dec
jg
loop
cmc
out
cmp
sub
or
bound
cmp
out
pop
rorb
inc
out
push
push
loop
sub
cmp
pop
pushf
scas
and
push
mov
out
mov
or
enter
icebp
and
adcb
xlat
cs
fcomps
pop
jp
or
jbe
sub
sahf
pop
adc
mov
fucomp
in
scas
xor
sub
jge
ja
out
xorps
stos
mov
rorb
cli
out
xchg
outsb
mov
into
pop
or
fndisi(8087
fildl
mov
in
inc
or
inc
add
in
jg
gs
cmp
sub
lcall
jle
xor
cmp
in
mov
adc
in
jbe
fnstenv
lods
data16
sub
jne
mov
xchg
je
xor
add
notl
xor
cmp
jmp
test
xor
stos
xor
xchg
add
xor
mov
aas
dec
push
sbb
cmp
movl
mov
adc
pop
jo
add
insl
mov
cltd
or
mov
mov
cmp
push
in
mov
scas
pop
or
or
ret
lret
mov
lods
lcall
negl
pusha
sbb
ljmp
loop
and
cmp
ret
mov
pop
or
xor
lahf
out
adc
xchg
jecxz
pop
or
imul
shrl
int3
mov
and
insl
pop
pop
push
cmpsb
pop
mov
push
push
sub
sub
in
inc
cmp
rol
jbe
mov
cmpxchg
ss
popa
cwtl
mov
ss
enter
stc
inc
rcrb
fwait
add
mov
sub
test
sub
cmc
jnp
test
push
or
inc
jmp
pop
inc
fdivrs
xor
testl
imul
push
jnp
cmp
xchg
mov
mov
lret
mov
fcomps
dec
leave
and
adc
stc
loopne
clc
sub
adc
in
gs
adc
ljmp
sarl
mov
mov
ja
aas
mov
jns
sbb
mov
rol
loope
dec
dec
aas
add
sti
fimull
xchg
test
test
or
xchg
cld
xor
mov
xchg
fldl
scas
inc
adc
xchg
jge
in
lret
adc
aaa
xor
lret
pop
cmc
lds
push
jnp
push
mov
lret
mov
sub
andl
sub
xchg
cld
xchg
insl
sbb
xor
add
mov
adc
test
pop
jae
cmp
mov
mov
fdiv
ds
inc
test
addr16
shrl
xchg
mov
nop
mov
pop
dec
sarb
mov
or
xlat
mov
test
fistps
dec
xchg
fstpt
dec
pop
pushf
stc
mov
rolb
mov
cmc
leave
mov
adc
and
sbb
jns
fnstenv
scas
mov
aas
xchg
lods
and
nop
push
ljmp
iret
scas
jp
test
shlb
jns
dec
dec
mov
negl
or
mov
test
test
push
outsl
jl
icebp
outsb
mov
out
adc
fists
or
sbb
aad
xchg
icebp
in
xchg
xchg
or
insb
sbb
dec
mov
ret
loope
pop
or
xchg
add
cmp
negb
cld
jp
aas
and
lods
push
call
iret
fnstenv
push
add
jmp
enter
push
and
sbb
lcall
icebp
jnp
orl
xchg
xlat
sub
in
jp
cmp
scas
sub
ss
nop
xor
lock
pop
push
aaa
and
jnp
xlat
sub
pop
cs
dec
lahf
sbb
xorb
call
jo,pn
sti
cmp
pop
inc
dec
in
cmp
add
cmp
ja
lahf
inc
ds
leave
cmpsb
jmp
je
lods
xlat
jns
push
mov
cmpsl
inc
les
and
lret
fisubl
jb
sahf
jo
sbb
adc
dec
jb
shlb
xchg
lock
mov
mov
xor
movsb
jecxz
jne
cld
mov
push
pop
sahf
cwtl
lods
fadd
inc
outsl
and
hlt
loope
lea
repz
add
lods
mov
push
add
jns
inc
inc
imul
pop
jo
mov
les
cwtl
pop
movsl
add
outsl
lahf
pop
xchg
roll
rorb
dec
mov
dec
adc
pop
jl
int3
add
aam
xchg
loope
scas
imul
jmp
in
test
test
into
repnz
in
mov
jbe
inc
sarb
xlat
icebp
loope
cli
pusha
jnp,pt
das
mov
sub
shlb
hlt
xchg
or
loop
pusha
mov
fstl
inc
push
mov
daa
sub
lea
data16
clc
ret
jecxz
push
or
cwtl
jno
jecxz
xor
or
jle
fcoms
dec
adc
addr16
sbb
mov
scas
aam
lar
mov
dec
adc
push
mov
adc
mov
imul
pop
out
or
mov
inc
scas
inc
ret
mov
stos
mov
mov
pop
mov
dec
popa
cld
push
dec
xchg
js
cmove
pop
pop
test
ja
push
and
and
idivl
jns
inc
mov
in
push
jb
mov
xchg
faddl
lods
ss
mov
leave
xchg
clc
popf
clc
push
sub
stc
mov
xor
movsl
jne
or
call
mov
fldenv
mov
push
jns
loopne
push
test
sub
or
jecxz
pop
ror
fs
push
jge
fs
fstpt
aaa
pop
push
pop
mov
mov
jl
imul
sbb
ds
jb
bound
adc
mov
cmc
jno
mov
push
xchg
jp
lcall
adc
scas
sbb
fldcw
adc
jb
mov
push
daa
pop
iret
lret
js
lcall
icebp
pop
aas
mov
subl
fldcw
scas
pop
cmp
insl
ds
fists
and
popa
sbb
jnp
xor
adc
mov
popa
add
popf
int3
je
cmp
loop
mov
das
or
mov
test
xor
cmp
adc
mov
pop
or
aas
jnp
fnstenv
lds
push
push
jne
das
mov
mov
fnstcw
cmpb
mov
sub
push
fucom
shrl
push
rolb
fisubrl
or
mov
cmp
arpl
jnp
dec
and
pop
sti
popf
or
fcmovu
jns
mov
or
jg
jno
test
sbb
or
lret
adcl
inc
sbb
push
mov
fimull
mov
fildll
dec
sub
adc
int3
aaa
adc
mov
aam
jecxz
lcall
cltd
dec
ds
in
or
inc
dec
jnp
fisubs
sarb
dec
test
mov
jg
test
adc
lods
jg
jns
jecxz
inc
repnz
xchg
jecxz,pn
orl
addl
lods
ror
stos
lahf
xor
out
pop
add
dec
pop
adc
pop
and
sbb
mov
mov
insl
leave
cmp
insb
ds
out
loopne
mov
in
push
or
pop
leave
dec
fadd
xor
jecxz
mov
jg
push
xor
sub
jbe
imul
jno
fadd
pop
and
mov
shlb
jae
mov
pop
cmp
cmpsb
daa
inc
fs
out
js
mov
imul
pusha
add
aaa
scas
loopne
je
inc
mov
test
add
repnz
pop
cmc
sub
xor
add
aas
fs
lods
cmpsb
sub
iret
sbb
int
push
add
clc
call
cmp
loopne
mov
pusha
mov
lock
mov
pop
xchg
sub
jmp
push
pop
xor
adc
imul
and
addb
cmp
pop
mov
xchg
mov
push
adc
dec
mov
out
xlat
push
sbb
cmp
std
adc
mov
test
cli
push
add
sub
mov
push
rorl
mov
sub
jecxz
fadds
push
pop
lret
iret
mov
adc
call
int3
ljmp
cmpsl
mov
sbb
dec
xor
and
test
pop
shlb
sub
dec
addr16
jge
mov
lret
jnp
inc
jmp
mov
ja
push
movsb
jmp
and
repz
ja
mov
in
out
inc
lcall
jl
or
sbb
xor
rcrl
orl
fwait
loop
push
incl
cmpl
lock
inc
pushf
int3
call
fadds
and
cmc
xor
mov
cmp
sbb
shll
dec
ud1
xchg
imul
mov
add
jbe
push
loope
inc
cmp
int3
lods
sti
or
aam
xor
cwtl
call
cs
hlt
xchg
add
jnp
xor
imul
or
add
fcomps
adc
add
leave
movsl
imul
jne
or
cmp
mulb
jg
xchg
mov
push
xchg
add
adc
fisubl
mov
push
test
jp
aam
testl
mov
fstl
inc
inc
mov
xor
and
aam
ret
jle
mov
int
xchg
ficompl
in
leave
push
add
das
aam
cmp
dec
sti
pop
aas
mov
lods
lret
call
pop
cmpsb
mov
fildll
nop
adc
xor
or
jecxz
ss
jge
frstor
inc
jg
popf
fcom
dec
add
test
dec
sub
sub
out
fildl
andb
ss
loop
jl
adc
add
cli
fidivl
movsl
jmp
mov
fistpl
inc
xchg
idiv
add
sbb
jbe
nop
dec
cmp
xor
scas
imul
inc
and
adc
clc
cmpsb
jno
inc
adc
lret
or
and
mov
xchg
cli
push
inc
sub
xlat
lahf
inc
cmp
inc
sbb
subl
dec
cltd
dec
clc
loopne
dec
loopne
cmp
pop
cmp
push
not
mov
inc
shlb
dec
rorb
xchg
loop
adc
mov
jbe
imul
mov
out
dec
sbb
pop
cmc
das
cwtl
adc
sub
addr16
jg
dec
xchg
pop
jb
jl
call
and
mov
xchg
cwtl
xchg
xchg
sub
mov
pop
movsb
inc
lahf
hlt
ss
push
lcall
inc
loope
cmc
cmpsl
add
jo
in
rclb
xchg
push
stc
enter
lret
test
repnz
iret
push
enter
and
mov
push
mov
pop
xlat
jg
out
aad
xchg
or
shlb
icebp
cmp
cli
sbb
mov
bound
pop
cmp
std
leave
test
xlat
lret
sub
int
pop
pop
cmc
add
push
pop
pop
mov
scas
cli
scas
ss
popf
cs
cmpsl
ror
js
sbb
dec
fists
cld
push
dec
rorl
sub
sbb
popa
movsb
lret
test
add
mov
mov
sbb
fiadds
mov
test
push
adc
test
loope
xchg
insb
sbb
inc
mov
inc
in
rcl
in
xchg
and
cmp
and
pop
cli
pop
insb
lret
popf
pop
jmp
dec
outsl
js
push
and
push
popa
pop
xor
stos
cmp
imul
dec
enter
and
cmpsl
push
insb
or
jnp
xorb
inc
inc
shll
xchg
dec
push
dec
sub
adc
sbb
add
mov
bnd
sbb
mov
push
das
stc
hlt
sbb
xchg
mov
and
push
dec
mov
stos
mov
hlt
dec
jle
mov
xchg
sbb
jo
pop
mov
ljmp
adc
mov
sbb
scas
pop
das
popa
jbe
and
insb
cwtl
or
dec
imul
daa
out
idivl
repz
jo
add
push
insl
or
dec
les
andb
jge
outsl
jge
testb
jo
je
negb
ret
int
and
push
xor
cmp
sar
out
out
aaa
in
inc
rcll
call
ja
cli
jae
sbb
mov
cmp
and
jne
rcr
jno
loop
adc
in
sbb
daa
mov
jo
das
scas
scas
pushf
test
push
jae
sar
mov
loopne
fmul
xor
ljmp
jmp
pop
test
mov
mov
mov
push
subl
push
push
out
sbb
out
negb
mov
mov
sbb
outsb
pop
sbb
bound
test
test
pop
les
add
testl
xchg
cld
cmp
nop
loop
sbb
scas
int3
and
movsl
dec
xchg
adc
rclb
fimull
push
lods
mov
ret
pushf
popa
nop
jl
pop
ds
ret
cwtl
or
mov
push
pop
pop
push
out
dec
insl
mov
mov
cmp
in
lds
imul
icebp
adc
cmpsb
mov
insb
cmpb
xor
inc
mov
mov
push
lret
in
ja
lret
lea
xchg
fdivrl
xchg
jo
idivl
pop
inc
pop
pop
and
flds
xchg
jl
test
add
fnstcw
fisubrl
negb
rcl
movsl
daa
xchg
in
inc
inc
xchg
lock
insb
test
jns
xchg
in
mov
aaa
rolb
popa
mov
nop
in
movsb
mov
sbb
sarb
dec
jo
sub
das
fidivrl
nop
xchg
mov
jb
push
mov
cmp
xchg
mov
lods
inc
inc
push
or
andl
js
stos
int3
in
mov
pop
inc
hlt
pop
insl
fstps
sbb
inc
outsl
out
dec
mov
dec
push
nop
fadd
divl
add
pop
mov
add
aam
cmp
sbb
add
add
mov
lods
mov
mov
inc
jo
testl
or
push
sbbb
mulb
cmpsl
scas
fistl
push
push
nop
lods
xchg
inc
cmp
push
inc
or
mov
nop
mov
lods
stos
mov
bound
repz
aam
inc
int3
shrl
iret
jns
add
adc
or
stc
jg
mov
ds
mov
int
dec
aas
aas
push
lods
push
rcrb
pop
mov
ljmp
jo
xchg
mov
shlb
inc
pop
fidivs
push
pop
mov
shll
mov
add
ret
sub
leave
fldt
push
xor
xor
inc
push
pop
pop
enter
cmp
jp
xor
mov
cmp
test
fs
data16
or
mov
out
out
pusha
sbb
mov
and
push
loope
mov
cmp
pop
shlb
sub
push
dec
clc
push
fadd
mov
xchg
int3
xchg
out
sub
sbb
push
int
adc
out
pop
cmp
mov
into
mov
ljmp
inc
sahf
jns
sti
mov
inc
or
adc
push
pop
inc
pop
pop
xor
adc
or
mov
adc
lds
jo
mov
ljmp
fnstsw
push
adc
pop
divb
dec
mov
or
add
popf
bnd
mov
xchg
or
mov
fdivl
or
movsl
jns
sbb
mov
xchg
mov
ret
jno
pop
pushf
mov
sahf
andl
or
push
xchg
call
int
incl
daa
aam
cmp
xchg
xor
sbb
inc
lock
insl
xor
andb
xchg
icebp
jns
outsl
xchg
and
cmp
lea
arpl
shlb
jo
insl
pop
xlat
and
mov
mov
sbb
jge
scas
mov
mov
mov
out
add
cld
fdivr
xor
stos
lret
and
mov
mov
mulb
mov
mov
pop
insl
imul
cmp
dec
and
shll
js
sub
insl
shl
cmp
xor
pop
fisubs
xchg
mov
inc
ret
jecxz
jbe
cmp
incl
aam
in
mov
xor
pop
dec
mov
or
fsts
jl
sbb
lret
sbb
xchg
cmpsb
xor
sbb
lods
into
sbb
mov
movsb
cmp
lahf
adc
mov
fdivs
mov
push
sbb
enter
sbb
idiv
dec
popf
sbb
cmp
stos
fisttps
outsl
inc
test
movsl
lock
xchg
ljmp
sub
jno
adc
jns
pop
xor
test
iret
add
test
insl
inc
lahf
mov
sbb
xor
and
ljmp
push
xor
xchg
and
xor
jecxz
js
mov
fsubl
test
fcmovnbe
lret
pop
daa
xchg
sbb
push
fstl
ret
nop
test
and
inc
xchg
pop
out
mov
sbb
lahf
rcrl
mov
jnp
mov
fs
xor
sub
lcall
mov
xor
push
adc
sbb
sub
sbb
mov
ja
cmp
push
xlat
pop
push
popf
ret
pop
cmpsb
daa
xor
fiaddl
sub
xlat
sub
mov
xlat
sbb
push
arpl
mov
mov
fstps
aam
add
adc
jns
cwtl
hlt
test
and
pop
sub
sbb
push
es
mov
popa
popa
shrb
inc
nop
mov
jns
jge
int3
stos
xor
nop
imul
jecxz
mov
scas
xchg
jbe,pn
xchg
lahf
repz
test
das
and
int
mov
dec
mov
stos
lea
mov
outsb
fmuls
rcrl
test
push
push
loopne
push
add
add
shl
sub
cmp
sti
dec
xor
lods
mov
in
jo
in
mov
or
push
push
aam
cmp
push
repz
test
rorl
push
sti
nop
andb
or
inc
es
push
or
dec
icebp
mov
inc
pop
jp
cmp
cmp
or
loopne
ljmp
cmp
stos
ljmp
jno
lods
or
je
in
test
lea
fldl
inc
bound
nop
mov
movsl
call
and
jo
lahf
fdivrs
cmp
jp
insb
mov
mov
je
mov
sub
pop
mov
jb
lock
jno
fsts
filds
popa
cs
cmc
pop
jge
jmp
adc
scas
inc
ja
js
movsb
dec
or
pop
dec
imul
outsb
hlt
mov
mov
mov
and
mov
push
xor
fs
pusha
or
add
mov
jb
lahf
imul
fbld
hlt
or
repz
and
es
in
jmp
test
movsl
sbb
mov
dec
ret
inc
pop
fimull
and
pusha
xor
adc
or
shl
mov
cli
into
out
sub
out
xchg
cmp
or
bnd
in
cmp
pop
push
hlt
cmp
xor
xchg
mov
push
sbb
cmp
ficompl
xor
mov
jg
repz
roll
fsts
jne
sarb
stos
fistps
push
fnstenv
cs
enter
cmp
inc
fstps
lods
test
mov
and
mov
mov
fisttps
sar
add
lods
jecxz
les
test
inc
aad
and
movsb
jp
aas
jge
imul
and
iret
jb
add
inc
out
mov
add
mov
shrl
in
aaa
lcall
adc
cmpb
pushf
mov
jo
aaa
nop
std
ficoml
cwtl
ja
out
jg
pop
jnp
inc
sbb
mov
icebp
adc
faddl
xor
jge
mov
jne
jb
in
stc
mov
cmp
jle
hlt
jno
cld
push
sub
push
vpaddusw
jne
sub
cli
mov
cmc
dec
sbb
nop
lahf
push
mov
enter
add
rcll
jge
stos
int3
add
daa
and
scas
test
ret
icebp
and
inc
leave
movsl
shlb
popf
mov
xchg
add
stos
popa
xchg
and
cwtl
mov
addr16
mov
mov
jb
in
mov
fdivrp
inc
mov
out
int
into
add
mov
push
sbb
add
stos
jle
add
sbb
repnz
iret
loope
mov
add
outsl
mov
data16
test
ljmp
out
fwait
cmpsb
fisubrs
test
setns
push
outsl
push
inc
or
push
or
jp
test
cmp
ss
repz
inc
dec
push
imul
gs
in
push
pop
add
push
push
cmpsb
stos
or
test
inc
stos
in
mov
mov
pop
lahf
es
sbb
cmp
negb
push
jne
add
cmp
mov
jo
idivb
add
por
enter
xchg
les
enter
adc
sbb
cmp
jmp
adc
cmp
sbb
cs
mov
ret
xor
popf
xchg
frstor
or
fistpl
pop
fst
cwtl
lret
push
jecxz
pop
mov
loop
xor
and
mov
and
lahf
rclb
popl
leave
insl
addr16
pusha
lds
mov
jl
popa
push
test
push
push
adc
jle
mov
xchg
sub
imul
cltd
stos
div
adc
adc
rolb
jp
mov
pop
inc
sbb
iret
mov
and
pop
out
mov
adc
aam
in
out
and
xchg
sahf
dec
dec
and
mov
loope
scas
inc
push
lods
jbe
insl
cmp
cld
jg
rolb
mov
mov
fists
or
mov
inc
xor
cmp
xchg
fsubr
cwtl
fiaddl
movsl
mov
xchg
pushw
mov
aaa
cmp
inc
mov
aas
shld
dec
ja
mov
jmp
fsubrl
mov
or
fwait
mov
je
ret
sti
out
xchg
outsb
lret
out
shl
int
in
inc
xor
in
or
cmp
mov
sbb
in
xor
push
jns
fimull
jbe
jae
loop
push
jg
jo
mov
push
test
daa
test
outsl
pop
je
jp
or
test
pushf
and
fsubr
jno
jmp
mov
inc
jne
sarb
leave
pop
test
cli
jle
pop
mov
cld
lret
addr16
loopne
push
fdivrs
mov
cmp
xchg
fdiv
lock
inc
xor
aad
mov
adc
inc
ljmp
jnp
fstl
inc
mov
hlt
xor
mov
imul
testb
dec
ljmp
sub
sub
iret
lock
adc
mov
and
sbb
rcr
adc
cmc
push
pop
bound
and
test
push
shl
mov
pushf
cld
les
vshufpd
rcrl
dec
push
jo
mov
rcrb
addr16
jae
std
sti
sbb
pusha
or
fldenv
popf
mov
andb
push
push
mov
pop
inc
xchg
and
cmpb
cltd
sti
enter
cmp
ret
icebp
push
test
xor
jp
repz
loopne
dec
stos
adc
and
cmpsl
popa
jae
repnz
cmpsb
lock
loope
adc
hlt
ret
lret
in
clc
fbld
mov
inc
cmp
orb
bound
cltd
mov
push
test
and
jmp
pop
jmp
cld
and
or
sub
ljmp
inc
push
jecxz
push
and
mov
repnz
test
stc
or
xor
and
popf
daa
jge
dec
add
dec
jno
std
data16
imul
cmp
inc
push
out
mov
nop
pop
sahf
rolb
in
loopne
mov
test
in
mov
call
in
adc
test
sub
movsb
loopne
and
sub
es
pop
in
ljmp
pop
xchg
lds
xor
or
push
xlat
jg
mov
pop
push
pop
and
sbb
shrl
fbstp
sbb
imul
mov
test
xchg
push
add
push
sbb
nop
cs
out
sub
inc
outsl
adc
push
pusha
inc
xchg
jg
mov
pop
push
push
inc
dec
dec
mov
cmp
xor
dec
pushf
xchg
dec
push
inc
loop
data16
push
call
dec
fisubrs
or
std
sahf
jmp
mov
loopne
outsl
mov
pop
xor
sub
sbb
inc
aaa
movb
dec
and
jns
cmp
arpl
jp
imul
mov
push
cmp
aam
mov
jae
mov
fdiv
xchg
pop
pop
fimuls
movsb
shrl
dec
mov
inc
jecxz
jb
mov
xor
mov
insb
sbb
shll
sti
jnp
test
push
pop
loope
ret
sbb
and
js
popa
xor
lcall
out
sub
sub
clc
ss
ret
inc
and
icebp
add
jnp
cwtl
ja
cs
mov
repz
sub
push
jg
xchg
stos
pop
rorb
shll
fidivrl
sarl
sub
push
add
or
lds
xor
jmp
and
idiv
lods
ret
xchg
inc
jno
pop
pop
inc
jg
into
sbb
adc
test
ja
xchg
mov
loope,pn
dec
rol
adc
cmp
mov
int3
sbbb
pop
pop
out
into
mov
cltd
mov
and
push
mov
ja
and
stc
or
mov
mov
out
dec
jne
mov
sub
fdivrl
dec
sahf
ljmp
nop
sbb
stc
dec
or
mov
jne
mov
mov
xchg
mov
sub
aam
xchg
addr16
out
scas
outsb
lea
add
sbb
mov
dec
clc
insl
inc
cwtl
dec
push
push
scas
inc
addb
ja
mov
pop
insl
pop
dec
push
sahf
jecxz
int
mov
arpl
into
push
das
rolb
pushf
mov
push
outsl
loope
sbb
push
sub
mov
mov
adc
scas
mov
rol
call
test
jne
insb
cmp
popa
xchg
testb
ror
pop
and
sbb
ljmp
xlat
fistpl
lea
sub
cmpsl
push
cmp
jb
aam
xchg
out
mov
or
sbb
xor
sub
stos
loopne
and
dec
pop
mov
negl
xchg
push
and
jmp
es
out
and
push
or
shll
xlat
clc
inc
push
mov
push
movsb
mov
inc
loope
mov
fstps
dec
inc
mov
jg
shll
mov
jle
jb
inc
shl
cmpl
lret
and
xor
jns
jmp
lcall
imul
cmpsl
cmp
mov
add
pop
int3
mov
pushl
and
adc
lret
mov
sbbb
stos
dec
sub
adc
lret
adc
popa
es
int
push
push
and
nop
mov
and
aam
dec
dec
mov
sbb
cmp
pop
adc
jbe
outsl
jge
jo
mov
pop
cld
mov
or
adc
push
mov
dec
imul
fadds
mov
stc
push
xor
sbb
jge
push
jg
adc
sub
xchg
adcb
mov
mov
in
into
filds
loop
mov
mov
or
inc
inc
daa
nop
in
inc
ja
push
xor
adc
pushf
jecxz
sbb
mov
arpl
pop
loopne
loop
int3
and
jne
cmp
pop
or
fstps
jae
cwtl
faddl
fidivrl
mov
push
xor
jns
jmp
shlb
lods
scas
repz
fldenv
sahf
sar
push
adc
jno
xor
in
mov
sub
jb
cmp
xor
sti
out
adc
out
loope
cwtl
je
mov
aas
jge
mov
mov
shll
test
jmp
and
push
lods
nop
pusha
add
sub
mov
jmp
pop
rcrl
sub
jae
scas
and
js
push
dec
mov
imulb
lahf
mov
dec
mov
sbb
adc
mov
pop
movsl
sbb
cld
jbe
xchg
mov
add
push
cld
push
pop
push
pop
add
les
pop
push
mov
call
mov
movsb
mov
mov
push
push
cmpsb
bound
addr16
aaa
xlat
int
inc
adc
inc
mov
je
js
out
xor
add
add
les
add
jg
icebp
mov
mov
mov
das
dec
bound
adc
mov
jle
enter
inc
xchg
repz
pop
ficompl
fidivrs
pop
ja
push
mov
stc
iret
pop
pop
jge
mov
int
cmc
jp
repnz
call
mov
sahf
fbstp
popa
lods
dec
std
lea
lret
inc
fmuls
sti
jnp
jae
inc
out
dec
xchg
jne
xor
and
xor
and
pop
jl
xchg
sbb
dec
cmp
pusha
popa
clc
pop
fistpl
push
arpl
ret
push
pop
rorl
mov
les
cmpsl
jle
add
jbe
mov
xor
sbb
dec
cld
jnp
cmp
cwtl
cli
or
jne
test
cmp
cmp
pop
fbld
into
sub
in
adc
mov
sub
and
xchg
jbe
les
bound
imull
adc
inc
jb
idivl
hlt
adc
shlb
sbb
push
cmp
scas
pop
out
pop
pop
nop
dec
insl
pop
fs
xchg
pop
jp
or
loop
push
sbbb
push
pop
cmp
lock
cmpb
inc
adc
mov
fidivrs
push
jnp
and
ficoml
sbb
fsts
cmc
mov
or
fldenv
leave
gs
hlt
pop
or
into
mov
test
lods
rclb
cmp
add
test
inc
mov
mov
and
out
push
popa
loope
mov
xchg
jle
rcl
mov
shrl
stos
mov
in
ror
jb
push
in
rcrb
daa
push
mov
shl
pop
xor
push
arpl
sbb
mov
add
mov
insl
fwait
ja
mov
insl
jnp
imul
ret
cmp
subb
gs
das
or
adc
cmp
and
addb
loop
loopne
outsb
dec
das
in
cli
dec
xlat
xchg
icebp
ja
sbb
lods
push
push
in
xor
pop
and
add
adc
ja
cmp
out
jbe
mov
out
pop
xor
xor
stc
adc
mov
cld
adc
je
hlt
sbb
cmpsb
xchg
adcl
sti
fidivs
jbe
add
push
repnz
es
ret
adc
mov
loope
addr16
aad
xor
pushf
push
leave
mov
pop
jnp
lret
or
jmp
mov
add
icebp
pop
inc
cmp
nop
ds
insb
pop
out
xor
dec
mov
fists
push
shlb
push
jge
test
arpl
cmp
sbb
aam
xor
daa
fs
mull
push
mov
lcall
out
dec
jbe
arpl
inc
into
nop
jle
aaa
test
mov
daa
ss
xor
outsb
pop
xchg
mov
cmpsb
jne
test
push
cli
icebp
jp
xchg
mov
jmp
pop
dec
icebp
daa
fldenv
push
out
xchg
test
in
pop
jno
movsl
xchg
stc
sbb
pop
jo
nop
ja
iret
lahf
jne
pop
lahf
inc
cmpsb
inc
jno
jecxz
dec
push
or
add
mov
stc
inc
mov
or
xchg
fs
jp
mov
xchg
adc
stos
mov
test
adc
push
push
das
adc
jl
xchg
in
jae
add
movsl
dec
repnz
imul
push
icebp
es
ljmp
push
xchg
leave
pop
pushf
and
and
fcmovbe
mov
mov
push
push
push
data16
lods
jns
jp
enter
in
push
and
xchg
lock
jnp
mov
inc
cmp
dec
dec
pushf
push
pusha
mov
loop
lcall
lods
ficoms
ljmp
jne
push
jb
xor
and
dec
xor
pop
call
cwtl
shrl
bound
inc
into
or
xor
xchg
test
pop
nop
je
xor
sub
mov
adc
int3
icebp
daa
sbb
dec
mov
dec
sub
fidivs
mov
sub
std
or
sbb
inc
hlt
push
or
test
loopne
dec
jne
cld
aas
int3
add
scas
int
scas
pop
stos
or
inc
jbe
fsubs
pop
jmp
mov
mov
fimull
popf
cwtl
cmc
xchg
ljmp
adc
mov
add
imul
add
mov
cmp
imul
popa
pop
inc
xchg
test
pop
out
stos
cmpsb
cmp
jl
incb
mov
pcmpeqd
test
icebp
push
cli
mov
push
lea
mov
stos
aam
sbb
orl
xor
inc
repz
push
dec
mov
add
ret
pop
mov
scas
mov
pusha
sbb
outsb
sti
jecxz
mov
shlb
loopne
cltd
or
push
add
rorl
sbb
or
jecxz
andl
loopne
jae
jge
pop
arpl
and
lods
inc
arpl
mov
add
stos
jle
sub
sbb
push
stos
push
aas
mov
shll
adc
lods
ljmp
loopne
jecxz
inc
adc
ljmp
mov
frstor
sub
pop
ljmp
push
mov
dec
int3
out
idivl
bound
stos
cmpsl
or
xor
push
add
push
rcrb
adc
jp
mov
dec
scas
in
call
adc
xor
insb
pop
data16
cld
inc
in
sbb
dec
and
xchg
xchg
mov
mov
cmpb
lret
push
xor
roll
jnp
inc
cwtl
mov
rol
inc
or
addb
fs
imul
andb
mov
test
hlt
gs
repnz
int3
mov
int
lret
ljmp
iret
mov
fiaddl
jne
adc
pop
aam
aam
xchg
cmpsb
arpl
pushl
repz
xchg
xchg
cmpsb
addl
hlt
and
enter
sub
sub
cld
out
into
icebp
inc
loope
inc
push
fsubs
addr16
out
testl
out
push
test
xchg
pop
je
pop
mov
dec
inc
cmp
enter
xor
dec
imul
mov
popf
mov
pop
dec
xchg
dec
jmp
add
inc
xchg
pop
test
push
pop
notl
testb
or
sahf
lret
pop
adc
cld
and
mulb
sbb
adc
jge
lock
or
mov
push
in
pop
pop
sub
pop
lcall
cmp
jae
dec
popf
pop
mov
add
cmpsl
sub
add
iret
fidivrl
pop
ret
gs
cmpl
sub
fmul
xchg
ja
dec
adc
jecxz
push
cmp
cmpsb
mov
les
das
mov
ret
inc
jl
dec
and
push
insl
icebp
in
push
dec
cmpsl
stc
pop
cmp
xor
sub
xor
sbb
insb
insb
inc
test
push
pop
cltd
jp
xchg
rol
push
mov
adc
mov
fnstcw
mov
lret
int
dec
out
call
mov
xchg
mov
dec
xorb
stos
mov
ret
push
pop
lds
movsl
mov
mov
mov
ds
dec
cltd
or
cmp
test
and
fiadds
mov
ret
jg
and
cmc
mov
mov
test
shl
loopne
sub
testl
orl
mov
lock
fwait
jl
and
loop
push
mov
jmp
xchg
jecxz
jo
mov
bound
cmp
aad
push
hlt
fidivrs
jmp
mov
and
mov
out
inc
adc
sub
xor
mov
xlat
test
jnp
push
mov
pop
cmp
outsl
and
das
cli
jl
fisubl
and
lock
inc
fisubl
imul
jge
adc
push
xlat
loopne
mov
xchg
mull
scas
pop
imul
push
stc
ja
cmp
out
sbb
test
push
cs
ja
pop
aad
xchg
in
cltd
adc
dec
pop
dec
pusha
mov
cmpsb
xchg
jecxz
imull
mov
cmp
add
stos
jmp
inc
sub
xorb
push
leave
jecxz
stos
mov
add
cmp
push
push
lcall
ja
or
inc
jb
inc
rcr
inc
mov
shl
fmull
lret
lcall
enter
inc
mov
jecxz
insb
lcall
lcall
sbbb
cmpsl
dec
enter
test
xor
push
mov
mov
xchg
mov
adc
mov
scas
shlb
sar
negb
jae
pop
scas
inc
insb
psllw
or
sub
mov
fldcw
add
add
mov
mull
out
push
lods
jecxz
mov
sub
lret
jns
mov
jb
or
and
mov
sbb
mov
jb
add
mov
add
pusha
xchg
scas
nop
scas
mov
mov
jg
adc
xor
in
mov
or
cld
xor
pop
aaa
sbbb
cmp
dec
mov
call
out
ret
xor
cmp
lcall
std
ret
movsl
and
mov
lods
xacquire
aam
pop
dec
push
and
std
movsb
inc
mov
add
in
ret
loope
mov
push
cmp
cmp
sbb
cmpsb
lods
add
xchg
std
xchg
jne
and
imul
push
xchg
push
pusha
mov
iret
movsb
jbe
pop
cmp
data16
les
rcl
dec
mov
cmp
pop
inc
push
les
or
pop
fsubrl
mov
cs
mov
sbb
xchg
fisubrl
xchg
int3
inc
das
aaa
xorb
repz
jns
mov
cmpsb
clc
sub
addr16
push
jg
jl
xorl
repnz
push
shrb
sub
cmp
xor
xchg
mov
test
inc
decl
pop
lret
insl
lods
cmp
jno
lea
mov
mov
rolb
cmp
pop
xchg
int
xor
loopne
pop
or
mov
fs
stos
xchg
xchg
sub
push
pop
cmc
movsl
jnp
pusha
or
sbb
mov
pop
mov
and
jp
mov
and
adc
test
sti
add
fbstp
fdivl
pop
mov
adc
fisttpll
pop
adc
cltd
inc
mov
cs
push
cmpsb
cmp
pop
lea
jns
cmc
pop
mov
dec
insb
jle
pop
mov
sahf
pop
mov
fidivrs
daa
outsl
jns
bound
jge
outsl
mov
xchg
sbb
xchg
inc
push
cmp
nop
shll
dec
aad
scas
sub
jle
sarb
or
test
sbb
stos
mov
in
insb
xor
int3
repnz
pop
aaa
push
enter
adc
xchg
test
add
js
xlat
push
push
outsb
sbb
out
inc
in
mov
sub
cs
cli
cmp
cltd
test
adc
or
lea
jge
movsb
std
jmp
mov
cmp
dec
lock
xor
mov
ret
jmp
sub
mov
add
pop
jl
cmp
dec
loop
mov
fnsave
or
or
push
divb
sbb
int
sub
jo
inc
inc
push
mov
in
jg
lea
arpl
in
adc
add
xchg
cmpsb
xlat
mov
push
repnz
call
or
jecxz
call
clc
pop
stos
popf
jl
pop
divl
pushf
rcll
cmp
add
imulb
sbb
outsb
in
loope
inc
js
in
mov
pop
mov
es
jg
add
lcall
adc
shrl
and
negl
and
pop
push
dec
gs
aas
push
int
mov
fcomps
fstpl
popw
xchg
adc
jae
sbb
rcrl
inc
pop
jg
icebp
leave
adc
addb
adc
daa
shlb
repz
ljmp
xor
outsb
xchg
sub
add
hlt
fcomps
lea
jp
je
mov
mov
filds
dec
aam
test
sub
and
pop
xor
ret
cmove
mov
mulb
push
push
sbb
mov
lds
mov
in
and
push
pop
aad
out
cli
mov
jle
sub
test
mov
adc
not
lahf
mov
jae
add
fs
test
cmpsb
nop
stos
lods
int
mov
adc
jge
mov
cmp
loopne
or
and
hlt
int3
int3
sbb
xchg
fimuls
sub
mov
jns
xor
outsl
js
mov
xor
and
shlb
and
daa
add
xor
adc
or
repz
subl
pop
in
ljmp
insb
fwait
rcrb
pop
aad
insl
sub
xchg
lea
movsb
das
ljmp
ret
add
push
sub
cmp
pop
sub
cmp
mov
lahf
stos
fwait
imul
out
adc
std
mov
jns
xchg
outsb
insb
loop
mov
lds
xchg
imul
push
sti
mov
fs
sub
mov
add
mov
ja
lret
push
adc
ret
lea
ja
push
dec
sub
push
js
shlb
pushf
cmp
rcrl
ret
adc
cmpsb
mov
jo
test
push
clc
ret
sbb
pop
in
sbb
jle
pop
sub
das
push
cmc
stos
ja
pop
dec
bound
fldenv
jl
pop
fsubrs
sbb
mov
lret
in
sahf
add
and
subb
orb
rcl
mov
ss
imul
lock
loop
dec
jle
mov
and
push
test
adc
imull
adc
cmp
mov
sub
sub
cmp
sub
mov
test
in
push
fcmovu
enter
popa
mov
popa
repnz
sub
xor
sub
dec
std
push
pop
int
lods
or
xor
jecxz
cmp
cltd
pop
lret
loop
mov
arpl
dec
rcll
mov
jb
popf
fisttpl
hlt
sahf
fadds
inc
call
jb
hlt
fadd
stc
inc
xor
in
std
icebp
imul
sahf
sbb
inc
push
jge
lock
cmpsb
sbb
stos
js
ret
sbb
mov
jle
js
jecxz
xchg
lret
push
fistpll
push
inc
enter
in
mov
sub
xchg
pop
cltd
mov
jbe
rorb
aas
push
mov
adc
mov
sub
nop
adc
adc
xchg
xchg
xchg
cmpsb
inc
xchg
in
xlat
add
sub
dec
insl
or
inc
mov
cmp
cmpsl
mov
rcrl
sub
jp
and
loope
mov
inc
fsubp
add
mov
int3
aas
xor
inc
mov
loop
adc
movsb
movsl
xlat
insl
push
aam
shrb
dec
or
ror
push
mov
out
mov
add
push
cwtl
rcr
mov
cmp
inc
mov
test
sbb
enter
mov
les
push
outsl
or
push
adc
lods
sub
sub
mov
jo
test
jmp
sub
addr16
jge
cs
sub
loope
jp
inc
in
mov
je
call
cmpsb
ret
xchg
inc
pop
lret
mov
pop
test
lahf
mov
movsb
shlb
negl
mov
xchg
push
jle
dec
push
lret
inc
mov
jge
lea
dec
mov
jns
andb
das
out
cmp
lock
adc
sbb
leave
dec
inc
mov
std
aad
adc
outsl
and
ret
push
out
ret
loop
orl
adc
mov
sub
imul
test
movsl
add
imul
xchg
dec
inc
cmp
dec
stos
mov
js
push
in
rcrb
loope
push
shl
dec
xchg
xor
test
mov
daa
push
aam
push
addr16
ja
lret
shrb
add
shrl
push
add
jo
and
push
ja
out
mov
mov
ret
mov
cwtl
pop
sub
ret
movsl
mov
and
xor
es
mov
mov
mov
std
ror
in
xchg
into
xlat
jl
ret
jecxz
xchg
and
inc
int
push
sbb
cmp
test
in
push
add
test
aaa
int
out
xchg
insb
cwtl
aad
mov
jnp
mov
push
scas
enter
dec
movb
sbb
or
scas
ljmp
outsb
inc
and
xchg
lods
dec
jg
enter
nop
mov
jl
aad
in
aam
sbb
jl
dec
xor
pop
aad
outsl
dec
les
mov
jecxz
dec
push
or
mov
inc
jmp
pushf
into
jnp
jbe
aaa
call
imul
cmp
jns
or
fbld
iretw
push
xor
mov
cwtl
nop
dec
mov
icebp
lea
int3
push
jns
xorl
mov
xor
xchg
mov
sub
fwait
nop
lret
lahf
push
sbb
arpl
mov
out
out
adc
sub
ja
loop
mov
xor
sbb
inc
mov
stos
mov
lods
push
jl
jle
sbb
lahf
aas
mov
fcomp
push
ljmp
jecxz
mov
hlt
dec
fwait
inc
adc
ds
lret
jns
imulb
aas
ja
adc
dec
pop
or
jno
out
in
pop
dec
movsl
insb
mov
sub
fdivs
dec
int3
xchg
sub
add
das
sti
clc
sub
dec
cmp
or
adc
stc
mov
fdiv
adc
cltd
inc
js
cmp
mov
mov
mov
aas
fs
idivl
out
pusha
xor
imul
shl
xchg
dec
mov
sbb
sub
stos
sub
outsl
sahf
add
ds
rcll
lea
mov
out
mov
xchg
insl
or
dec
shl
iret
inc
xor
sub
repz
and
pop
test
push
pop
insb
mov
repnz
mov
imulb
popf
insb
rorb
dec
xchg
repnz
xorl
cld
cmc
aad
mov
jae
rol
jno
mov
mov
cs
test
and
pop
sbb
mov
imul
lret
lret
adc
repz
jle
flds
pop
sbb
push
or
outsl
repz
fwait
je
inc
scas
das
pop
bnd
daa
add
push
loope
and
out
pop
xchg
cli
add
sbb
mov
sti
mov
fnstenv
sahf
and
test
jp
mov
inc
pop
inc
mov
test
add
add
cmp
mov
inc
addr16
aas
lret
out
into
cli
mov
jno
xor
fidivrl
adc
and
or
jb
jl
xchg
xchg
jp
iret
cmp
adc
lahf
xor
sub
in
dec
cmp
push
test
jg
call
add
and
pushf
call
popa
push
dec
lahf
and
addb
cli
je
add
add
imul
jmp
push
cld
dec
pop
sti
mov
mov
add
adc
stc
xor
dec
xchg
ret
mulb
out
xor
lret
and
shlb
and
xchg
xor
cmp
in
sbb
jae
gs
and
inc
pop
jle
ret
push
ret
or
js
aaa
mov
mov
xchg
outsb
xchg
rclb
icebp
lods
push
lahf
inc
dec
clc
repnz
jbe
std
mov
or
cs
cltd
ret
loopne
insb
flds
mov
sub
mov
dec
movzwl
xor
stc
cli
jno
test
xor
pop
dec
leave
sub
pop
rorl
clc
xor
sbb
in
adc
fisubrl
mov
cld
enter
sbb
movsb
add
and
xchg
hlt
ja
in
dec
dec
sub
movsb
pop
mov
push
pop
mov
daa
and
adc
add
cltd
ja
mov
lret
jbe
and
sub
or
fdivrp
pusha
and
mull
push
add
xor
add
adc
mov
je
mov
pop
xchg
int
cmpsl
sub
dec
xor
ja
jp
hlt
insl
mov
popa
ss
ret
aad
jo
mov
push
nop
int3
push
not
xchg
inc
insb
jne
dec
ret
dec
sub
push
sub
dec
cmp
adc
in
adc
push
mov
pop
sub
mov
mov
inc
sub
in
ds
test
adc
cmpsl
dec
leave
iret
lahf
push
mov
call
add
popf
repz
daa
outsl
cs
dec
addl
data16
add
bound
jae
pop
lahf
add
das
js
sub
aas
jbe
shl
int3
jl
xchg
xor
mov
xchg
icebp
xchg
test
test
mov
jmp
mov
or
fwait
dec
pop
push
jnp
sub
push
cmpsb
adcl
xor
aam
cli
cmp
out
mov
lds
nop
mov
sub
mov
roll
xor
dec
adc
xchg
xchg
fisttps
sbb
push
iret
bound
jmp
or
ror
mov
mov
xchg
and
pop
push
int
mul
test
and
jl
xchg
ror
in
mov
or
rorl
int
jle
cmc
add
mov
sub
or
cmp
fldenv
mov
sub
sbb
xor
sar
push
lahf
bound
rcrb
shl
mov
and
es
fsubr
push
aas
lock
cmp
sbb
in
stos
arpl
mov
ret
sbb
add
cmc
push
outsl
jnp
jmp
stos
iret
xchg
jge
dec
outsl
sbb
hlt
js
imul
push
push
sbb
jno
fnstsw
int
mov
ljmp
and
xor
xor
pusha
sub
incb
mov
shll
inc
dec
mov
mov
cwtl
jbe
sub
pop
xor
lcall
cmp
push
xor
push
mov
mov
jno
mov
xor
fwait
jmpw
inc
push
mov
popf
pop
in
dec
mov
hlt
jnp
pop
shr
push
push
push
out
cwtl
jo
sbbl
stos
cmp
imul
pop
mov
popf
jecxz
les
push
je
mov
mov
icebp
rolb
mov
or
jae
pop
orl
rolw
lea
push
call
jnp
in
pop
or
test
and
lock
out
data16
fisttpl
movsb
push
xchg
sub
push
iret
leave
cmp
outsl
xchg
pop
cwtl
out
cmp
rcll
and
dec
lods
inc
mulb
or
xchg
std
lds
outsl
fwait
mov
lahf
push
push
mov
mov
into
mov
push
add
test
popf
lcall
ss
push
int
clc
push
adc
popa
inc
lds
xchg
mov
addr16
in
sub
mov
out
xchg
cmpsl
out
std
dec
dec
push
aaa
icebp
jmp
dec
fidivrl
rcr
or
jo
dec
push
in
call
mov
mov
dec
dec
sub
incb
mov
pop
dec
out
out
mov
sbb
mov
fsub
clc
xchg
cmp
ret
aaa
imul
push
dec
nop
into
mov
cmpl
rorb
into
xchg
adc
fists
mov
xchg
push
sbb
dec
ret
scas
push
push
adc
rolb
inc
cmp
cs
icebp
jl
aam
mov
jmp
scas
push
test
jg
cmp
ds
fsubp
mov
ja
cmp
and
ss
jns
mov
fnstsw
incl
cmp
xchg
or
xor
pushl
inc
dec
push
cmp
inc
jg
decb
lahf
mov
lods
mov
sub
clc
test
cs
das
xchg
dec
jno
inc
sbb
andb
pop
stos
pop
aam
push
cmp
mov
dec
popa
repz
push
loope
iret
jle
lods
and
jecxz
and
inc
repnz
div
ds
push
repnz
nop
aam
ficoml
xchg
jo
out
js
bound
jmp
daa
ret
inc
aaa
insb
pop
andb
adc
shll
ja
adc
jnp
cmc
cwtl
inc
sbb
das
mov
pop
mov
lods
mov
lret
add
shll
jnp
sub
mov
lret
sti
insb
loopne
jae
adc
cmp
mov
xchg
test
mov
jb
xchg
or
mov
add
js
jmp
push
lock
faddl
shrb
and
stos
orl
popa
sarl
ror
inc
into
push
ja
pop
movsl
add
lret
call
pop
or
arpl
imul
call
mov
or
cltd
dec
sbb
jbe
or
mov
and
push
adc
rclb
mov
dec
jnp
mov
cmpsl
push
jno
jo
dec
inc
ffreep
fs
mov
xor
sahf
mov
push
fsubrs
and
bndldx
dec
sub
repz
aas
push
xor
fisttpl
xor
fldt
dec
add
daa
lock
test
jae
pop
movsb
es
loope
jmp
jns
in
subl
sti
push
mov
mov
ss
jno
mov
out
fildl
xchg
arpl
fcomip
mov
mov
orl
push
bound
lds
loop
outsl
push
pop
ljmp
scas
push
dec
add
aas
daa
pusha
dec
jns
xchg
xlat
cmp
jae
mov
jl,pt
aam
sbb
or
scas
insb
test
xor
push
fs
test
add
jle,pt
xor
mov
pop
mov
test
jne
or
loopne
xor
mov
fcomip
imul
insb
lahf
lret
ret
cmpsl
fwait
lods
mov
mov
int3
cld
push
shr
push
mov
push
sbb
loope
int3
push
shl
loop
shll
in
ljmp
inc
out
sbb
loope
jo
push
cmc
jge
fwait
loope
pop
add
fstpl
out
lret
add
cwtl
ja
push
mov
push
xchg
cmp
leave
jno
insl
mov
jg
jae
or
xor
addl
adc
or
rorb
in
or
push
push
mov
xor
test
or
adc
fs
cld
push
jb
in
sahf
sub
in
aad
jp
jle
lock
fwait
cmp
inc
leave
stc
shrl
stos
push
adc
cmp
lret
dec
pop
pop
scas
xchg
sub
and
fidivl
xor
arpl
cld
jo
pop
in
test
ja
mov
das
scas
push
pop
repnz
and
repz
add
in
aad
dec
test
inc
ja
test
repnz
jp
jle
jnp
stos
icebp
sbb
mov
jnp
push
stc
pushf
js
sahf
inc
mov
pop
mov
pop
clc
test
pop
xor
in
loopne
int
inc
leave
inc
push
xchg
and
in
pushf
scas
xchg
xlat
sub
mov
in
outsl
mov
bound
into
mov
ja
call
add
or
sahf
hlt
aas
ja
fsubr
add
dec
in
je
add
aad
jno
jnp
pop
int3
rolb
add
insb
or
pop
pop
mov
addr16
xchg
and
push
inc
mov
mov
clc
test
ret
rorl
stc
xchg
pop
jg
add
scas
iret
insb
xor
xchg
dec
sbb
jge
sbb
into
mov
mov
inc
lods
mov
loope
xchg
rolb
pop
mov
cmp
or
xor
or
inc
shrl
push
push
call
loope
and
pushf
movsl
mov
xchg
inc
out
std
xchg
mov
xor
in
ds
push
pop
lods
incl
jle
cmp
mov
insb
jnp
mov
daa
xchg
xchg
mov
imul
in
out
jp
clc
bound
or
cmp
lods
loopne
jae
adc
scas
popa
scas
outsb
jle
ja
lahf
or
mov
inc
cmp
xchg
adc
push
dec
xor
cmp
push
adc
gs
and
cmp
xlat
icebp
sbb
and
dec
cmpl
loop
mov
xor
sarl
cwtl
out
stos
add
lret
xchg
hlt
ds
adc
pop
mov
shlb
push
jbe
dec
je
fistps
sti
add
test
mov
adc
mov
mov
mov
dec
mov
aad
out
in
sub
or
out
inc
aas
loopne
or
mov
mov
push
int3
xchg
add
adc
xchg
scas
push
mov
xchg
movsb
jbe
cmp
cmc
mov
mov
aas
pop
jmp
pop
and
jge
not
cmp
imul
mov
outsb
xlat
fsave
xor
lahf
bound
fisubrs
xor
fildl
lods
hlt
adc
xchg
mov
jp
push
int3
addl
mov
mov
sbbb
xchg
andb
pop
mov
les
pop
sub
jae
lds
jae
inc
add
ds
push
lock
ret
or
bound
insb
xorb
sbb
xchg
mov
out
mov
sub
ret
mov
call
xchg
movsb
jp
cmp
imul
mov
ret
mov
dec
addr16
shrb
aad
add
dec
xlat
mov
pop
push
cmp
loope
jp
jo
cwtl
adc
sar
leave
sti
xor
jo
dec
scas
insb
mov
adc
loop
mov
hlt
in
int3
arpl
jnp
lahf
je
jmp
mov
push
jmp
cmp
cmp
jae
jl
mov
out
popa
fstps
mov
mov
push
push
dec
jbe
push
sbb
adc
icebp
or
pop
xchg
jge
xor
popa
mov
adc
faddl
iret
or
adc
sbb
sub
mov
pop
push
jp
cmp
push
cli
mov
mov
mov
out
mov
add
in
sarl
stos
pop
xlat
in
inc
push
iret
sti
pop
cmc
fcoml
pop
adc
shlb
xor
outsl
cmp
ss
xchg
add
dec
xorl
hlt
sbb
add
popa
mov
clc
outsl
mov
jno
andl
into
push
ja
fs
dec
rcr
push
dec
movsb
test
sub
movsl
pop
mov
cmp
div
iret
add
cli
and
sbbb
ficoms
dec
je
aas
outsb
mov
xor
jnp
fidivs
xchg
jecxz
jne
fstl
mov
push
xchg
call
xchg
or
aas
mov
lods
add
ljmp
jmp
vpxor
and
and
out
leave
ret
cmp
sbb
gs
out
sub
sbb
je
adc
adc
iret
sbb
lret
push
sub
jmp
pusha
roll
jns
and
cmp
decl
push
sbb
je
adc
pop
jno
push
push
mov
inc
andb
cs
loopne
push
adc
xchg
mov
dec
in
in
cmpb
idivl
dec
pop
mov
bound
xor
nop
or
or
inc
dec
shrb
sbb
mov
inc
mov
sahf
mov
xor
jae
shrd
cli
aas
mov
out
sbb
inc
xchg
outsb
add
and
adc
pop
mov
cmp
push
mov
lods
push
mov
loop
pop
jns
rcrl
pop
xlat
pop
sahf
jae
insb
jecxz
jb
fisttpl
out
pop
pandn
mov
pop
test
cltd
inc
rcll
mov
or
sahf
sbb
mov
addr16
jl
dec
jne
jl
decl
test
and
dec
loopne
les
push
and
mov
out
rorl
sub
sub
pop
or
movsl
insb
inc
cmpsl
inc
jbe
mov
jge
into
insl
sahf
sub
mov
mov
shrb
mov
testb
fdivl
add
dec
popf
jb
inc
sub
insb
add
xchg
in
pop
outsl
jo
sbb
xchg
int3
xorl
loopw
inc
pop
mov
adc
nop
cmp
inc
mov
out
mov
icebp
push
fdiv
jle
cmc
outsb
pop
cltd
jl
dec
rcll
mov
pop
push
les
mov
xchg
test
mov
pop
cltd
aaa
push
inc
cli
test
test
mov
mov
inc
inc
sbb
add
add
pop
iret
test
sub
andl
es
in
addr16
xor
loope
xchg
jns
sub
xchg
scas
aas
mov
js
rcl
adc
fiaddl
sbb
popa
jbe
cmp
stc
aas
pop
and
mov
cli
cwtl
cli
jge
insl
loopne
mov
cmp
aaa
mov
in
xor
xchg
xor
mov
out
jecxz
dec
test
in
fsincos
daa
int
push
add
push
xchg
xchg
lret
loop
hlt
rcrb
mov
fcoms
nop
jmp
es
xor
pop
cmp
or
sbb
jle
pop
fcoml
lods
inc
add
inc
or
lods
mov
cmp
andb
cmp
mov
daa
mov
loopne
sub
dec
push
repz
enter
subb
mov
push
push
mov
add
sbb
mov
cs
mov
dec
ljmp
adc
cwtl
add
cs
sbb
sub
incb
aad
adc
into
dec
xchg
add
addb
add
mov
out
mov
outsl
fstpl
cmp
mov
cmp
leave
cmpsl
or
jae
mov
shlb
fisubl
sbb
ret
xor
mov
icebp
ret
xchg
inc
stc
loopne
aad
cmp
ljmp
xchg
dec
out
inc
adc
xor
lods
inc
mov
mov
sub
jl
lock
das
xacquire
mov
xor
push
insb
pop
mov
ljmp
std
mov
jge
out
imul
negl
cmc
insl
cmp
push
jge
inc
imul
jl
aaa
and
mov
xchg
lcall
ret
push
ret
std
or
push
xor
push
cmc
cli
cltd
jecxz
and
iret
cmp
xor
rcll
cld
in
out
jae
cmp
shlb
fwait
popl
xchg
gs
xchg
ss
clc
push
int3
aad
xchg
sbb
mov
dec
jnp
mov
test
stos
movsl
xchg
xor
arpl
cmp
xchg
adc
scas
aaa
lret
add
cs
data16
jg
out
test
lcall
inc
jmp
sub
testl
ret
adc
jae
inc
or
hlt
sarl
movb
or
cmp
les
pop
adc
arpl
aam
std
pop
sub
sbb
call
call
fbstp
xchg
aaa
push
dec
setae
movsl
outsb
jb
stos
cmp
pop
sbb
ss
or
mov
js
xor
xor
pop
inc
pop
xchg
push
mov
movsl
jle
xchg
or
jne
stos
sub
jmp
cli
clc
push
sahf
cmp
sub
mov
test
jo
inc
and
jecxz
xchg
sbb
jo
mov
mov
enter
push
adc
mov
push
ficomps
push
aad
hlt
sbb
filds
pop
pop
popf
push
pop
adc
push
or
push
jg
jbe
sbb
dec
data16
sbb
push
mov
test
clc
out
inc
cli
add
sub
or
adcl
inc
and
sub
pop
insb
outsb
mov
popf
pop
movsl
xor
mov
stc
inc
mov
jbe
loopne
repnz
or
push
das
jno
mov
or
lea
rcrb
mov
in
push
pop
cs
sbb
mov
xor
aaa
pop
int3
pusha
pop
inc
in
mov
cld
aaa
cmpsb
mov
adc
aaa
push
fiadds
inc
mov
adc
xor
push
push
insb
push
icebp
faddl
les
push
and
sub
enter
jge
push
adc
jl
mov
lock
mov
inc
in
push
fnstcw
jp
lcall
xchg
inc
outsb
adc
je
mov
repnz
xorl
inc
and
in
lret
popf
ss
pop
pop
mov
inc
jb
jo
repz
ret
outsb
hlt
dec
and
cmp
cs
mov
add
loopne
test
repnz
mov
add
push
jno
leave
lahf
lret
es
out
aas
mov
cmp
push
dec
cmp
lods
arpl
cs
fcmovbe
loop
add
pusha
mov
mov
imul
dec
xchg
imul
movsl
mov
fsubs
mov
add
or
push
aaa
dec
loop
and
push
std
mov
sub
loopne
sahf
int3
mov
mov
sub
or
mov
push
push
aad
hlt
sbb
mov
in
fiaddl
scas
aas
jnp
ja
insb
cld
adcb
insb
das
es
daa
ret
dec
xor
addl
push
xchg
dec
jp
mov
out
nop
repnz
xchg
popa
inc
or
call
addb
cmpsb
xor
and
push
push
out
fildl
jl
mov
in
add
pushf
dec
xor
and
pop
lret
gs
fdivs
and
sbb
ljmp
sub
imul
cld
in
in
add
push
dec
mov
repz
push
cs
sbb
mov
in
and
lds
jno
mov
mov
jp
lea
repz
jp
stos
fldt
mov
cltd
pusha
xorb
popa
repz
mov
sbb
bound
adc
lret
xor
pop
jne
enter
in
int
add
inc
xchg
xor
sbb
xor
sbb
in
xchg
or
nop
stos
push
dec
in
mov
aaa
dec
shl
fsubr
jmp
imul
xchg
sbb
je
in
ja
and
and
cmpsl
and
and
add
jp
lret
mov
fidivrs
cld
mov
aam
jns
dec
adcl
paddw
push
add
aas
mov
fsubrs
xor
shrb
inc
scas
cmpsb
dec
div
and
pop
xchg
mov
mov
fcompl
add
add
les
lahf
sbb
shrb
xor
jno
mov
hlt
inc
cld
out
pop
fs
test
mov
mov
movsb
cs
cmp
je
push
xor
xor
inc
dec
sub
sbb
scas
stc
fdivp
shll
rorb
in
or
sbb
call
mov
in
repnz
ja
mov
jmp
mov
stos
ficomps
xchg
pop
das
jg
movb
leave
lret
mov
sbb
lods
dec
xor
cs
inc
xor
push
ret
cmp
adc
and
cwtl
negb
mov
mov
add
dec
sti
data16
sbb
arpl
xchg
mov
fsts
jl
in
hlt
xchg
adc
cli
rcr
cmp
xchg
sub
int3
inc
aad
in
pop
cmp
jb
mov
pusha
mov
cmp
in
sub
addr16
push
repz
mov
mov
mov
xchg
loop
pop
sbb
ret
fsubrp
adc
jbe
xchg
xabort
std
jge
enter
in
test
push
or
mov
adc
mov
add
out
outsl
in
mov
jbe
sub
sahf
lret
sbb
jp
adc
push
divb
ret
inc
xchg
mov
mov
and
stos
jbe
pushf
xor
mov
xor
add
fwait
sarl
mov
mov
out
add
and
fwait
inc
addl
test
ja
ret
sarl
in
lock
mov
punpckhwd
jmp
dec
aas
sti
mov
sub
dec
jl
insb
xchg
stos
les
jo
adc
cmc
cmp
arpl
ficompl
and
pusha
stos
jl
inc
jle
and
push
xor
cltd
inc
mov
and
mov
ja
loop
loop
cmp
daa
stos
negl
out
push
insl
xor
pop
adc
popl
dec
add
cmp
ds
mov
push
insl
push
js
push
mov
sti
sahf
dec
cmp
cs
push
daa
adc
test
in
push
cmp
dec
mov
pop
in
xor
xor
dec
add
or
push
jge
cld
cmp
sub
sub
push
data16
cmc
sub
lods
or
bound
pop
cmp
cmpsl
jnp
das
fxch
cmp
ljmp
jnp
xchg
xchg
ret
jns
lret
nop
pop
out
cld
out
xor
cmp
xchg
ficoml
imul
imul
es
fdivs
ds
push
subb
out
stos
jmp
loopne
xor
push
adc
loop
int
dec
jl
into
pop
cltd
jnp
notl
rolb
pop
cltd
push
lret
pop
insb
mov
orl
push
mov
push
test
mov
jmp
out
push
sbb
add
push
inc
dec
int3
dec
mov
mov
cs
call
sbb
in
mov
dec
fcom
xlat
dec
sbb
adc
sarb
mov
mov
test
dec
push
inc
insw
ret
cmp
or
mov
lods
lret
add
fisubrs
ret
pop
lret
dec
or
push
mov
lret
mov
loopne
cltd
outsb
aaa
outsl
in
pop
add
out
sub
jo
aam
pop
adc
mov
movsb
xor
xchg
or
adc
pusha
lahf
push
inc
mov
jl
shrl
jno
adc
out
mov
das
mov
add
mov
push
xchg
shrb
cmpsb
mov
xor
adc
pop
cmpsb
dec
mov
jl
sub
xchg
cmp
andb
xchg
or
int3
add
push
incl
sub
dec
sbb
pop
push
lcall
or
push
daa
add
ja
imul
arpl
mov
sbb
cmp
mov
imul
mov
mov
fidivrs
shlb
sbb
jnp
fcompl
shll
mov
inc
nop
ret
mov
jge
pop
into
lret
xor
int3
jns
adc
and
pop
sub
push
popa
dec
mov
push
in
mov
mov
fldcw
loop
xor
popf
jecxz
sub
cmc
shl
sbb
cli
scas
push
add
xchg
inc
inc
mov
lds
cli
jg
adc
jg
add
and
push
xor
mov
cld
dec
cmp
fwait
or
in
cmpsb
add
inc
inc
les
fwait
dec
inc
in
adc
adc
mov
inc
loopne
xor
js
inc
dec
clc
pop
pop
out
sbb
fwait
pop
xchg
xchg
pop
push
call
ljmp
cmp
mov
stc
jl
retw
sbb
adc
popa
sub
xor
imul
lcall
loope
jo
add
imulb
scas
adc
insb
jecxz
xor
adc
int
cmova
leave
jg
pop
ror
cltd
dec
adc
sahf
inc
sub
push
mov
mov
xor
sbb
rclb
ljmp
cwtl
and
jnp
jle
hlt
stos
jl
out
cmpsl
add
fdivrs
pop
sub
bound
clc
jae
inc
in
jne
cmpsl
push
jge
push
outsl
out
push
mov
outsb
repz
push
je
dec
and
sub
movsl
aam
cs
mov
xor
icebp
fdivr
pop
add
icebp
inc
aas
xor
and
mov
repz
xor
sar
and
call
lods
mov
test
adcl
jns
inc
jno
push
data16
adcl
push
addl
mov
xchg
pop
lcall
sbb
test
or
sub
jmp
test
jg
std
push
sub
dec
ficomps
popl
repz
push
xchg
lret
or
imul
nop
push
adc
insb
call
xor
pop
in
arpl
inc
jns
iret
adc
call
lea
and
mov
pop
push
push
pop
int3
xchg
mov
loope
cmp
pusha
je
sbb
repz
dec
out
add
shl
mov
lock
mov
dec
cmp
addb
in
sub
jne
push
ljmp
and
dec
loopne
rdtsc
jnp
je
test
jns
fmull
sub
es
test
add
push
sub
test
ficompl
xchg
push
fdivl
inc
mov
cmp
cli
aam
xchg
sbb
dec
sub
mov
push
pusha
cmp
rcr
jmp
clc
jo
mov
aad
inc
xor
daa
outsl
pop
aas
dec
dec
pop
ss
xchg
pop
insl
stos
dec
popl
lahf
mov
loop
cld
xchg
sbb
sbb
nop
jo
jbe
pop
jnp
insl
cli
mov
xlat
mov
push
sub
cli
push
repnz
scas
mov
cmp
pop
pusha
aaa
sbb
mov
inc
mov
ror
sbb
mov
push
scas
mov
not
cld
xchg
mov
imul
mov
test
sbb
jnp
out
mov
call
daa
sbb
nop
inc
cli
or
insb
mul
push
insb
leave
fmull
clc
out
mov
imul
push
mov
push
rol
subb
pop
fstl
mov
pop
inc
jae
or
mov
xchg
or
test
imulb
bound
sub
fwait
mov
fidivl
loope
inc
xchg
jo
out
cmp
xlat
repz
xor
jle
push
mov
or
cmp
jo
xlat
sub
sbb
out
jo
out
cmp
push
mov
add
push
mov
ret
bound
stc
and
push
inc
nop
sub
mov
je
mov
into
jmp
dec
push
stc
adc
inc
test
inc
xor
xor
hlt
jae
mov
rcll
xchg
punpckhbw
test
fistps
mov
xchg
sahf
xchg
and
pop
mov
insl
inc
adcl
adc
mull
sub
adc
cld
arpl
lahf
popa
stos
push
in
adc
shrl
test
jnp
aaa
xchg
inc
xor
ficoml
inc
scas
fucomip
rclb
cmpsl
shl
jo
adc
xor
mov
ror
out
je
push
popf
add
scas
dec
shlb
lods
jge
sub
push
loop
decb
out
mov
mov
stos
mov
loop
jb
mov
gs
ror
pop
push
mov
sti
sbb
add
pop
ret
fisttpl
sahf
ljmp
mov
sub
enter
stos
rcr
hlt
push
cmp
dec
and
jmp
popf
stos
xchg
je
mov
push
push
cli
mov
push
out
in
in
push
loop
dec
call
jp
and
mov
mov
fucom
dec
inc
inc
test
sub
jnp
or
sbb
cltd
stc
or
fcomps
xchg
shl
sti
or
xchg
cmp
mov
push
push
mov
sbb
cmp
sub
stc
ja
mov
das
sbb
imul
js
iret
jb
cwtl
daa
and
lret
shrl
mov
mov
adc
fisttpl
lock
push
inc
adc
sub
in
sbb
movsb
jle
ret
out
mov
pop
sub
xor
add
pushf
js
mov
mov
in
addr16
push
push
aaa
loop
push
cld
mov
xor
push
scas
push
sub
dec
and
pop
sahf
push
pop
imul
add
adc
cwtl
add
loopne
sbb
cmp
jne
jge
mov
sbb
push
add
xor
testl
push
and
les
cmc
and
lcall
js
cmp
mov
xor
icebp
int3
push
loop
loopne
scas
ss
cwtl
sarl
sahf
sti
cmp
or
rcrl
lea
inc
push
dec
push
call
subb
repnz
out
sub
out
adc
and
clc
pop
sbb
mov
or
incb
cmp
jb
cmp
lea
cmp
mov
iret
pop
push
add
mov
mov
movsl
popa
add
push
dec
and
mov
ss
gs
lret
dec
outsl
sub
add
xchg
mov
xchg
es
cmp
lock
clc
ret
je
mov
sub
mov
push
cltd
aam
jb
outsl
mov
cmpsl
mov
outsl
adcb
js
loopne
idiv
aaa
pop
push
add
repnz
ret
push
inc
lds
iret
aam
test
lea
sub
inc
or
jg
insl
je
pop
hlt
loop
mov
sahf
cmp
xor
cmp
push
sbb
adc
rorb
aas
movsl
scas
sub
jp
adc
movsb
insl
and
cli
jo
arpl
jne
dec
jae
sahf
ret
or
push
fdivrp
mov
sbb
into
jle
mov
add
or
mov
add
in
outsl
push
push
adc
jp
aaa
lock
mov
jg
pop
add
aas
and
pushf
stos
lea
sbb
jge
xor
push
and
dec
ss
adc
dec
sub
and
jae
test
lcall
jecxz
rcr
out
mov
movsl
pusha
fdivp
shll
jbe
jnp
cmc
fimull
test
lds
bound
push
jge
push
int
pop
jb
pop
dec
insb
and
loop
adc
aad
push
push
daa
into
movsb
mov
lret
int3
mov
mov
fcmovnb
mov
mov
pusha
dec
popa
pop
xchg
sbb
out
test
inc
loopne
cmp
xor
daa
jae
ret
test
jge
xchg
iret
jo
or
or
rorl
mov
jno
lea
mov
sbb
es
aaa
mov
push
lea
push
push
outsl
add
cmp
ret
xchg
pusha
in
inc
dec
js
shlb
inc
sub
push
sbb
shll
outsl
or
daa
adc
out
xchg
cmp
jmp
or
lret
leave
sub
aas
xchg
sbbb
orb
sar
push
mov
scas
lret
mov
jmp
xor
loopne
mov
lods
jbe
in
pop
or
sub
adc
pop
lods
xchg
xchg
inc
insb
imul
push
push
mov
shl
adc
cmp
cli
push
add
ret
test
or
mov
cwtl
jae
pop
inc
call
lahf
ljmp
fstpl
mov
sub
ret
mov
or
add
xor
mov
add
push
test
aas
sbb
call
xorl
ss
mov
je
xor
test
roll
dec
xchg
imul
mov
jbe
mov
xor
mov
jg
pop
lcall
outsl
xor
and
movsl
inc
testb
enter
mov
aaa
repnz
inc
in
aas
fnsave
cmp
dec
dec
fcomi
int
adc
iret
sbb
aaa
cltd
or
xchg
lds
cmp
add
dec
in
pop
cmpsb
pushf
out
xor
inc
clc
data16
clc
mov
adc
repnz
sub
inc
cmp
and
stc
pop
cmc
je
bound
pop
cli
sub
in
xor
xchg
sbb
inc
mov
add
lds
int3
lods
rclb
stos
inc
pop
enter
fldenv
mov
je
mov
adc
sarl
enter
push
push
mov
sub
ja
aam
and
loope,pt
mov
mov
pop
or
hlt
cmp
mov
xchg
xor
test
dec
and
xchg
rorb
inc
cs
xor
mov
add
cli
pop
mov
fwait
popf
mov
push
or
or
xchg
fiaddl
and
push
and
out
cmp
push
sbb
mov
popa
mov
xchg
dec
sbb
cld
push
xor
jnp
das
xchg
filds
dec
ret
inc
mov
sub
mov
or
mov
sbb
sbb
fstl
inc
in
lahf
xor
sbb
xor
cmp
jb
adc
bound
or
mov
insb
in
mov
inc
loope
arpl
xorl
pop
push
xor
mov
rorb
mov
or
adc
pop
xchg
hlt
mov
shrb
aaa
mov
mov
insb
push
test
push
inc
je
xchg
sub
or
mov
ror
adc
push
cltd
mov
cld
inc
cmp
sub
fsts
int
test
int
or
pusha
data16
mov
ss
jg
mov
adc
add
loope
repz
outsb
push
pop
push
cld
pop
jns
cld
sbb
call
enter
imul
sub
outsl
or
mov
fistl
mov
pop
jb
sub
cmc
pop
push
xor
mov
inc
sbb
daa
lret
insl
lahf
inc
rorb
xchg
bound
dec
hlt
adc
ficoms
fnsave
imul
dec
cmpsb
std
jb
and
add
mov
push
lret
cmpsb
mov
jmp
and
mov
inc
outsb
fwait
cmp
shrb
test
aad
cmpsb
xor
push
xchg
js
fwait
leave
jne
lret
sbb
scas
test
mov
sub
or
in
fwait
sbb
orb
jnp
add
xor
push
loopne
int3
outsb
pop
inc
hlt
xlat
push
cli
out
and
cmp
sbb
adc
inc
or
lds
push
sti
cmp
fwait
mov
cmp
lods
xchg
imulb
lods
jp
ret
xchg
xlat
in
in
jl
sub
scas
sbb
out
mov
rorl
fldl
sbb
imul
cmp
lock
xchg
xchg
fmuls
xchg
mov
lock
pusha
add
and
dec
cwtl
jp
dec
inc
clc
xor
roll
loopne
clc
dec
ds
or
data16
mov
dec
xchg
icebp
or
push
jnp
cli
mov
imul
enter
insb
lcall
aad
xor
add
or
add
fisubs
out
jmp
or
aas
inc
add
mov
mov
lock
mov
mov
mov
xchg
pop
insl
cs
fadd
movsb
les
leave
add
aam
sbb
fs
sar
add
cs
ja
pop
mov
lea
mov
pop
mov
jecxz,pt
call
loope
pop
cwtl
adc
mov
fwait
pop
pop
cs
mov
mov
mov
je
mov
outsl
cs
leave
cmpsl
hlt
cld
loope
mov
hlt
pop
cld
xchg
pushf
adcb
pop
jno
mov
outsb
or
fldcw
cmp
and
fdivr
and
notb
sbb
pop
cmc
loope
aam
cmp
in
mov
fs
pop
pop
mov
mov
clc
and
fidivrl
mov
fdivrl
push
call
les
pop
or
push
cmp
inc
lds
fwait
je
mov
dec
in
add
sbb
outsl
outsl
inc
and
bswap
push
bound
scas
jle
or
fisubrs
sahf
adc
mov
push
stc
cmc
pop
xchg
mov
xchg
sbb
jno
mov
insb
or
inc
pop
popf
sbb
push
jle
mov
fcoms
sub
shr
pusha
cli
jo
lcall
mov
xchg
fst
pop
mov
jo
cmpsl
ljmp
loope
adc
aas
sub
je
xchg
std
ds
cmp
push
ja
mov
fidivl
mov
fistl
and
das
add
por
dec
rclb
scas
pop
xlat
or
hlt
jae
icebp
xchg
or
sbb
fsubl
movsb
popa
shl
imul
xchg
pop
cmpsl
push
or
aam
fcmovnu
lea
mov
adc
div
enter
scas
cwtl
int3
fists
cwtl
push
outsl
push
xchg
adc
fdiv
sub
int3
movsb
jle
push
xor
cmc
jg
add
xchg
mov
add
mov
cli
xchg
xor
add
mov
ret
mov
or
xchg
ja
mov
loopne
les
pop
call
lret
sub
in
jne
icebp
aas
repz
rcr
xchg
xchg
or
dec
inc
add
cmp
lock
pusha
in
inc
mov
outsl
test
xchg
cmp
outsb
adc
outsb
cwtl
mov
clc
pop
sub
mov
ret
mov
dec
dec
push
repnz
subps
pop
add
mov
bound
push
mov
pop
in
jo
sbb
add
jmp
lahf
and
imul
fsubrl
add
dec
loope
jnp
inc
stos
dec
sub
out
adc
ljmp
xor
mov
mov
mov
sbb
daa
jle
lods
lods
push
fimull
inc
add
cmpsl
fcomi
pop
popf
push
ljmp
scas
jbe
aam
movsb
jg
xchg
out
cmpsl
sub
sbb
xor
dec
xlat
cmp
mov
test
jno
neg
cld
jo
sbb
and
cltd
mov
out
fdiv
mov
scas
lret
add
jns
mov
decl
and
aaa
inc
pop
sub
jno
ja
outsl
lcall
fstpl
mov
xchg
loopne
lret
cmp
sbb
push
ret
xor
iret
faddl
mov
lock
cmpsl
or
cld
js
or
shrb
jg
sbb
jmp
sbb
loop
cmpb
sbbb
fcompp
out
cmpl
pop
push
jecxz
stc
push
sub
mov
jmp
mov
ja
mov
fstl
inc
and
jle
adc
in
jnp
cmp
fcoms
mov
mov
lods
jno
ficoml
rolb
add
cwtl
push
std
int3
mov
sub
stos
and
in
and
or
stc
xor
add
scas
icebp
call
test
inc
into
cmpsb
pop
mov
sti
outsl
lods
xchg
add
lret
mov
dec
arpl
in
iret
xorl
popa
add
adc
sbb
or
or
sub
add
sbb
cmpsl
ljmp
insl
mov
in
cld
fisubs
add
lds
adc
outsb
stc
push
es
push
aaa
cmpsb
fs
adc
cmc
imull
push
sbb
test
mov
cmpl
ret
or
xor
aaa
ret
mov
cmp
push
jbe
fwait
push
sbb
dec
int3
scas
fnstcw
mov
jbe
xor
xor
into
fldcw
cmpsl
out
add
stos
rolb
mov
ljmp
xchg
sbb
xchg
push
mov
lods
or
shrb
or
js
sub
sbb
out
test
or
outsb
out
sbb
lret
out
in
loop
mov
sahf
pop
push
xchg
jle
mov
outsb
dec
outsb
jae
dec
cmp
mov
jp
lret
jo
lret
mov
mov
imul
outsb
lods
inc
and
cmp
pushf
add
call
pushfw
push
mov
xchg
jle
sbb
jo
add
jecxz
sub
and
and
jge
jecxz
add
in
mov
mov
aas
scas
sbb
mov
or
mov
adc
and
jmp
pop
mov
lret
gs
sbb
jl
push
inc
mov
out
sahf
jnp
xchg
xchg
mov
jne
mov
cltd
or
xchg
mul
or
push
inc
inc
pop
jl
sub
hlt
add
add
cmp
push
mov
lods
jo
sti
add
lock
mov
push
andl
aad
inc
mov
ficoms
fisubrl
aas
test
pop
lds
aad
jne
lea
mov
cmp
mov
dec
ljmp
mov
add
imul
icebp
mov
rcl
jnp
xchg
inc
push
or
sti
jb
or
xchg
test
leave
xlat
aaa
add
pop
jns
jae
sti
push
jl
fsub
mov
and
fiaddl
push
push
and
out
stc
aaa
shll
push
add
pop
sbb
fdiv
push
mov
pushf
mov
fldcw
leave
aas
jne
scas
push
xlat
sbb
in
ret
push
xchg
das
popf
int
push
dec
cmc
dec
mov
inc
push
pusha
loopne
mov
popa
jle
es
xor
pushf
cmpb
cmp
mov
insb
push
jge
xor
xlat
out
out
and
je
popf
and
lahf
dec
mov
cmpsb
mov
pop
xor
cmp
push
cld
or
shlb
adc
cltd
dec
es
sub
mov
mov
add
ficoml
gs
and
pushf
imul
gs
mov
and
popl
jb
inc
std
shlb
pusha
jnp
mov
inc
gs
xchg
clc
xchg
xchg
mov
jns,pn
cs
xchg
iret
lock
iret
in
cmp
and
sti
mov
mov
lret
sub
mov
mov
mov
out
fcomi
sbb
sub
mov
mov
aam
mov
test
dec
mov
jg
mov
dec
rorb
cmpsl
std
cs
xor
in
out
rorb
jne
pop
and
push
dec
arpl
mov
cmc
mov
mov
inc
sbb
xchg
movsl
mov
adc
pop
pop
out
or
xor
add
cmp
enter
out
scas
xchg
ja
add
int3
and
mov
cmp
sbb
ds
jp
insb
sub
mov
je
aas
sbb
int3
popf
cwtl
cmpsl
jae
dec
adc
mov
lods
dec
mov
push
fisubs
cmp
stos
sbb
jmp
dec
mov
xchg
jbe
pcmpgtw
push
mov
xor
mov
mov
xchg
imul
sbb
mov
in
decl
xchg
inc
in
cmp
arpl
cmp
and
in
push
mov
xor
filds
jle
pop
filds
nop
jle
cs
xor
mov
aad
test
divl
push
jp
out
jmp
jbe
movsb
or
dec
iret
scas
or
movsb
or
fbld
insl
sub
xor
insl
gs
cltd
insb
adc
or
inc
sbb
jo
or
sub
in
xchg
xchg
mov
jne
out
gs
add
xorl
mov
jl
jecxz
icebp
mov
xchg
fcoml
rcr
fiaddl
addr16
fwait
notb
dec
loopne
fsub
rclb
clc
and
push
xor
jb
push
insb
fdivrp
outsb
mov
dec
adc
aaa
popa
and
mov
int3
ds
xlat
mov
aas
push
xchg
sahf
imull
lds
enter
mov
lret
cmp
dec
push
jp
fs
xchg
xchg
in
inc
sub
dec
daa
fs
sbbl
stos
ss
daa
jnp
outsl
dec
data16
loopne
lcall
mov
inc
ljmp
fstl
ror
or
mov
sub
and
ds
pop
fimull
pop
add
int
add
or
call
movsl
das
pop
je
mov
pushf
out
and
push
subl
into
xorl
stos
jb
mov
mov
stos
addb
or
rol
add
adc
push
jmp
pop
or
adc
lcall
cmp
out
cs
jne
sbbl
and
jle
push
movsl
testb
sbb
cld
bnd
jp
mov
pusha
lea
arpl
push
ljmp
push
insb
or
in
pop
push
leave
add
pop
xchg
lds
fstpl
add
mov
jle
vmovntps
insb
jmp
adc
mov
adc
repnz
ja
xchg
test
test
or
in
mov
sub
imul
add
mov
inc
mov
or
push
add
pop
popa
cmpsb
imul
scas
mov
ss
push
jmp
pushf
rorb
or
xlat
jae
ljmp
clc
lret
test
outsb
out
addb
fisttpl
push
dec
roll
pop
xchg
mov
data16
fistpll
cmc
fwait
xchg
loope
mov
ljmp
mov
div
xor
stos
sahf
ja
fs
lcall
xor
dec
aad
and
pop
push
mov
inc
loop
cmp
test
pop
popa
cmp
xor
xor
test
pop
inc
inc
cmpsl
jl
push
lock
jo
xchg
fdivr
loopne
out
jmp
push
jns
faddp
repz
in
repnz
cmp
lret
jne
mov
mov
adc
push
and
repz
dec
inc
pop
ficomps
pop
xor
jb
xchg
mov
xchg
out
ret
outsb
sbb
pop
int3
pop
ficomps
pop
push
xchg
push
sub
push
add
loopne
jecxz
add
fcoms
xor
or
jp
flds
fistpll
fwait
sub
dec
lahf
loopne
mov
mov
push
fdiv
mov
stc
mov
inc
rcrl
gs
dec
outsl
sub
add
pop
and
push
push
push
out
sub
repnz
test
jge
bound
add
cmc
jne
loopne
add
shll
push
xchg
cmpsb
push
xor
and
mov
dec
lods
dec
jo
xchg
or
test
stos
jae
adc
cmpxchg
bound
repnz
lret
xchg
pop
sbb
xor
insb
lods
test
xchg
push
loop
dec
cmpsb
push
mov
rcrl
out
xor
sti
lock
loop
push
xchg
or
or
cli
mov
inc
and
arpl
cmpsb
iret
pushl
sarb
icebp
and
or
mov
sub
mov
ret
cmp
and
xor
or
call
cld
push
out
lods
nop
in
inc
ss
test
ret
out
outsb
push
pop
push
lea
cmp
iret
jmp
stc
dec
inc
jnp
mov
loop
adc
cmp
or
stc
push
cmp
mov
shr
xchg
jecxz
scas
hlt
int
or
mov
jmp
cmp
sbb
lret
or
xchg
jmp
lcall
mov
loope
aas
incb
mov
lea
loop
rcl
dec
lret
fcompl
push
xor
adc
adc
in
mov
movsb
push
int
lcall
in
into
loopne
je
pop
decb
push
ss
dec
xchg
cmpsb
out
xchg
xchg
mov
xchg
fisubs
push
movsl
jg
mov
push
mov
or
movsl
inc
lcall
roll
lcall
mov
push
push
pop
jmp
lea
jp
idivl
movb
jnp
xchg
in
or
push
je
sub
call
sbb
fadds
jge
ljmp
mov
push
jecxz
push
jle
jle
or
add
ret
leave
fldl
mov
adc
cmp
gs
sarb
popa
dec
xchg
imulb
or
sbb
or
sub
enter
insb
xchg
in
lock
jge
jno
out
xchg
movsb
inc
jecxz
aaa
cmp
and
shl
jo
lret
iret
out
inc
popa
cltd
movsl
xchg
push
stos
add
ficompl
lcall
int3
lds
jnp
cld
aas
mov
arpl
out
lret
inc
mov
sbb
push
lds
dec
jge,pt
mov
dec
addr16
sub
test
scas
jnp
push
add
jne
add
out
dec
jl
repnz
pop
push
bound
sbb
sbb
rorl
inc
xchg
or
mov
lahf
jmp
pop
cmc
inc
cld
sub
inc
mov
rcll
ljmp
fldenv
adcb
sahf
lcall
push
dec
and
pop
xchg
push
lods
loopne
cli
jae
roll
sahf
sub
sbb
sub
int
mov
jne
mov
gs
push
push
lods
jns
mov
lods
shr
rorb
loope
loop
js
or
ja
roll
ret
jg
rcr
sbb
fcomps
fstl
push
scas
xchg
orb
std
repnz
pusha
shrb
mov
mov
cli
inc
pushf
lcall
mov
or
adc
sub
popa
loope
sbb
les
jns
adc
into
test
xlat
inc
push
test
sbb
stc
cmp
xor
inc
pmaddwd
inc
loopne
add
call
faddl
push
lods
cmp
into
jge
sar
into
push
test
in
loop
ret
inc
gs
sub
dec
insl
xchg
fldl
jg
leave
mov
popa
pop
mov
add
dec
iret
loopne
test
jbe
sbb
gs
mov
cmp
orl
fnstsw
push
or
pop
fimull
jbe
adc
sub
cmp
jge
js
adc
mov
inc
shlb
out
lods
pop
fwait
outsl
jns
sub
xchg
cwtl
imul
xorb
mov
imul
mov
xlat
lea
adc
in
jae
push
mov
inc
add
cmp
fbld
nopl
push
jnp
jecxz
pop
and
bsr
scas
jp
push
add
mov
outsl
adc
rcl
pop
and
add
bound
pop
pusha
xor
sbb
daa
jg
popf
xchg
out
pushf
shlb
xchg
jle
add
scas
xchg
bound
sub
mov
movsl
mov
aam
mov
jecxz
in
test
jle
sbb
sarb
inc
push
and
add
inc
movsb
jnp
cmp
jl
lods
xchg
inc
dec
xchg
lds
into
bound
dec
mov
adc
incb
jl
lcall
scas
jmp
mov
lea
fildl
adcl
push
mov
cwtl
rorb
or
sbb
ja
lret
mov
and
pusha
cmp
aad
pop
adc
lods
inc
fidivl
movsb
lret
loop
dec
add
cli
sbb
in
pop
repnz
rcrb
into
rorb
push
jg
xor
xchg
adc
inc
jge
out
movsl
loopne
jp
scas
sub
jp
sub
jmp
movsb
or
cmp
xchg
dec
daa
imull
je
int
jnp
inc
popf
cmp
lea
or
aam
push
jg
dec
arpl
stc
cmp
cltd
pushf
out
mov
jae
cmp
lock
imul
jb
and
or
divl
mov
xchg
and
mov
pop
mov
cmc
inc
mov
mov
mov
in
xor
scas
repnz
cli
mov
push
lret
add
out
pop
sub
cmp
ljmp
in
repnz
mov
imul
push
sub
jo
lret
mov
add
adc
test
xchg
fwait
xor
imul
or
cmp
js
sti
inc
mov
test
mov
pop
ljmp
mov
jecxz
dec
xchg
fcmovnb
outsb
push
fidivl
push
push
cmpsl
mov
pop
test
je
pop
lret
subb
out
pop
enter
mov
mov
sub
adc
in
mov
ss
mov
aaa
lcall
fdivrs
dec
mov
pop
inc
movsb
icebp
adc
lahf
shrl
pushf
fcomip
jg
movsl
adc
push
pop
adc
dec
loopne
pushf
jge
loope
insl
dec
or
lods
xchg
lcall
sub
push
mov
dec
adc
into
adc
je
inc
sbb
rolb
fisubrs
scas
stos
in
adc
push
xor
push
insl
xlat
jns
xchg
ret
rcll
gs
pop
xor
inc
fildl
ja
sbb
test
push
or
jecxz
out
fstpt
mov
cmp
aam
movsl
mov
fstl
loope
popa
or
push
loope
lret
popf
fistpll
lds
sahf
or
hlt
sub
push
rep
mov
jle
cmpsb
dec
jae
les
pop
fstps
dec
mov
xlat
fidivrl
fadd
mov
outsb
testl
stos
pop
adc
mov
pop
leave
fstpt
mov
testb
inc
mov
outsl
std
mov
mov
mov
add
js
adc
mov
xchg
add
es
movsl
or
jb
js
dec
fdivrp
xorl
pop
jmp
pop
push
out
xchg
gs
and
inc
stc
add
pop
nop
bound
pop
inc
sbb
jle
inc
mov
adc
inc
std
js
aam
pop
adcb
int3
mov
mov
ja
cmpl
jl
or
popf
pop
push
jo
lods
dec
and
sub
pop
sahf
negb
sub
popf
xlat
call
jne
je
aad
movsl
sub
cmp
dec
lock
push
add
xchg
aad
push
lock
shr
fcompl
into
mov
mov
ds
dec
loopne
push
xor
shll
sti
fdiv
inc
jo
fiadds
test
dec
inc
lds
insb
xor
pop
mov
aad
mov
mov
push
test
fmul
dec
hlt
rclb
lock
mov
adc
lods
dec
iret
xchg
add
push
scas
and
test
add
lds
xor
outsb
repnz
pop
push
sbb
lock
or
sbb
dec
lcall
shr
cmpsb
call
call
aaa
rcrb
jno
mov
push
std
shll
fwait
lock
rorl
mov
or
loop
lods
sbb
leave
addr16
sbb
rorl
adc
cmc
std
iret
mov
lea
push
push
push
fsubs
daa
in
cmp
add
fldcw
push
cmpl
jne
pop
iret
call
push
sub
mov
stos
dec
jns
jge
ja
int
pop
imul
mov
iret
xchg
notb
push
ja
negl
adc
xchg
test
inc
scas
cld
and
jg
pop
out
lret
add
sbb
pop
pop
popa
fwait
shlb
mov
xor
imul
stos
inc
je
sub
jae
jnp
dec
inc
fidivl
dec
xor
mov
or
pusha
xor
std
lcall
add
cmp
or
mov
loop
stos
dec
lret
adc
pushf
xor
pop
adc
decl
cli
stos
add
insb
into
lea
scas
jae
xchg
int
lods
xchg
push
test
outsl
enter
mov
fdivrs
lcall
push
shrb
sub
fldt
and
sbb
je
push
andl
mov
sbb
stos
js
shr
sub
xor
stos
pop
fsubl
mov
xor
sub
rcrl
icebp
int3
icebp
xchg
pop
jp
push
cmpsb
daa
jl
xchg
movb
pop
movsl
push
xchg
iret
inc
push
sub
and
adc
pop
jecxz
popa
add
fwait
mov
mov
or
and
loop
push
imul
repz
rcrl
dec
icebp
imul
jecxz
sbb
xchg
lret
dec
adc
sbb
adc
bsr
xchg
mov
les
in
jmp
out
lcall
jae
pop
shlb
push
imul
aam
and
inc
cmp
stos
cs
xor
mov
cmp
incb
xchg
jno
pop
jmp
stc
xor
jb
dec
in
mov
inc
cmpsl
repnz
mov
mov
in
clc
jb
cmp
dec
mov
and
imul
lret
fsts
or
inc
js
cmp
sbb
gs
mov
jl
mov
decl
arpl
repnz
push
movsb
enter
in
or
dec
xor
xor
push
xchg
ja
int3
jmp
or
pop
inc
cltd
in
std
xchg
mov
xchg
sbb
aaa
shl
pop
out
jns
fwait
pop
sbb
inc
insb
fisttpl
testb
and
lods
add
or
sub
mov
jg
xchg
jae
dec
sbb
out
pop
out
mov
sbb
ja
lods
mov
fs
dec
inc
pop
das
repnz
xor
push
mov
hlt
push
xchg
xorb
jle
mov
jno
jnp
or
stos
dec
lcall
repnz
sbb
scas
jbe
sub
sub
imull
mov
mov
inc
fwait
iret
sub
inc
movsb
push
cmp
pop
cltd
push
mov
push
ret
arpl
push
add
jmp
inc
pop
inc
mov
std
andl
dec
jge
cwtl
sub
in
pop
cmp
aas
pop
loope
and
push
mov
aas
jbe
inc
xchg
imul
loope
test
mov
fnstsw
repz
cwtl
pop
stc
xchg
jge
int
loop
movsl
fiaddl
incb
add
sub
jns
push
push
das
incb
dec
sub
mov
push
dec
or
xchg
jg
rorl
out
rolb
lret
jne
pop
jno
xor
push
xchg
jmp
sbbl
jno
push
cli
lea
loopne
nop
pop
and
mov
fmuls
fwait
mov
dec
push
icebp
and
sbb
push
mov
lock
add
sbb
imul
bound
or
insl
pop
shl
popa
repnz
sub
or
sub
jbe
pop
pushf
insb
or
jge
sbb
sub
pop
outsl
mov
xorl
xchg
fimuls
jae
ja
push
xorb
int
xchg
add
sbbb
pop
popf
js
pop
clc
cmp
pop
repz
and
outsl
cmp
mov
xchg
aad
imul
xchg
pop
shll
pop
mov
adc
mov
cmp
stc
call
and
jg
enter
sbb
dec
repnz
push
cwtl
add
cmp
setge
lock
pop
mov
sub
adc
repz
bound
arpl
notl
inc
inc
jmp
pushf
add
xchg
mov
lock
inc
pop
lods
orb
movsb
mov
in
or
pop
dec
iret
jae
test
rolb
inc
mov
insb
sbb
addr16
test
dec
inc
roll
sbb
insb
aaa
adc
or
jbe
xor
xchg
cwtl
and
into
push
test
inc
xlat
pop
ljmp
shrb
jo
scas
pop
fdivl
add
movsl
int
in
xor
dec
fstps
flds
mov
lea
and
int3
mov
cmp
and
sbb
fldl
sub
and
mov
and
xchg
push
fnstenv
inc
dec
sub
xchg
aad
adc
andl
addr16
stc
pop
or
add
push
mov
lahf
jae
push
cmpsb
enter
loopne
andb
add
fs
insb
and
jecxz
pushf
push
xor
pop
pop
imulb
enter
call
push
aas
cmp
pop
sub
aad
push
shl
fprem
mov
ss
scas
xor
push
jmp
mov
push
push
cmpsb
ds
decb
daa
sbb
dec
sub
jbe
dec
in
pop
je
fildll
and
je
push
aas
into
inc
mov
pusha
lock
in
jbe
push
push
lds
ljmp
stc
cmpl
scas
jle
imul
push
mov
dec
aaa
jbe
lcall
call
ja
dec
mov
sbb
dec
sti
and
inc
pop
out
loopne
xchg
cwtl
cli
test
clc
lock
and
sti
jb
dec
lods
add
lods
inc
and
aas
fsubs
imul
iret
or
xor
pop
sub
xor
test
push
jmp
je
and
and
cwtl
adc
fsubrl
xchg
popa
cltd
add
inc
pop
push
jle
xor
inc
stos
dec
xchg
shrl
jne
xchg
ficompl
add
push
pushl
hlt
test
ret
into
lock
shrl
test
popf
pop
mov
pop
add
fnstenv
dec
jmp
or
aad
sub
xchg
fdivrl
adc
cwtl
out
test
loop
jb
push
and
jbe
mov
repz
shll
out
pusha
and
cltd
sub
pop
xor
push
call
test
cmp
push
cld
jo
ljmp
sub
fs
mov
mov
in
inc
rorl
push
mov
js
mov
les
push
push
lret
bound
pop
ljmp
add
xor
push
or
pop
cwtl
andl
cmp
loopne
add
and
dec
lock
pop
repnz
sub
jno
or
adc
mov
out
arpl
loopne
mov
pushf
cmpsl
dec
lods
xchg
dec
nop
int
cmp
enter
xor
sub
jo
loope
gs
test
lahf
adc
fcomps
push
inc
sbb
test
out
in
or
push
mov
sti
scas
icebp
or
xchg
xchg
out
in
clc
aaa
bound
cmp
and
or
sub
loop
or
mov
cmp
mov
out
aad
lods
mov
jp
jno
sub
jns
rorb
daa
pop
inc
out
aas
and
push
adc
or
cltd
mov
sbb
inc
adc
mov
cmpsl
push
sbb
sub
test
fs
ljmp
xor
int
mov
repz
outsb
bound
xor
inc
cmp
push
ret
cltd
mov
dec
mov
ljmp
repz
fwait
push
and
pop
ss
mov
fdivl
push
mov
insl
stos
fnsave
or
inc
add
ss
insb
fwait
and
mov
and
cmpsl
xchg
mov
hlt
enter
sub
sub
push
lock
jecxz
in
leave
xlat
inc
push
mov
push
jne
sqrtps
cwtl
stos
lock
fiadds
xlat
stc
push
push
sub
xchg
push
cmp
sbb
and
ja
std
test
clc
call
xlat
stos
mov
aas
or
xor
mov
scas
jbe
add
cltd
test
adc
inc
mov
mov
loopne
sarb
add
sub
fwait
add
mov
mov
sub
add
sub
jno
mov
adc
push
push
push
dec
fisubrs
adc
mov
and
repnz
pusha
xchg
stos
addr16
jle
lea
sub
mov
adc
push
lret
mov
lcall
decb
imul
or
inc
mov
sbb
dec
mov
js
xor
sub
xor
xlat
and
dec
daa
cld
xor
adc
jae
es
push
mov
fs
test
jmp
push
mov
scas
add
mov
xchg
lods
xchg
sub
int3
outsb
data16
and
mov
loope
lods
mov
xor
jge
and
lret
mov
gs
pop
aaa
daa
rclb
pop
lahf
mov
shll
stc
sub
mov
sbb
cmp
sbb
mov
mov
cld
inc
cmp
popf
cmc
sahf
jecxz
xchg
and
cmp
sub
popa
pushf
add
not
sub
movsb
ja
lret
jge
sbb
sahf
or
out
add
sbb
nop
push
inc
andl
pop
mov
sti
ja
pop
add
in
insl
inc
lods
adcl
sbb
xchg
outsb
pop
lock
cmpsl
xchg
xchg
out
sahf
and
push
mov
or
push
shll
dec
popa
repnz
lds
je
scas
xlat
inc
cld
pop
rcrl
dec
rcl
or
psllw
jecxz
cwtl
int
fcomp
cmp
push
push
cmp
add
sbb
mov
mov
mov
test
std
test
or
dec
xchg
adc
sub
fstpl
jae
aas
inc
dec
imul
out
aas
filds
sub
fdivs
leave
inc
adc
aaa
imul
andb
insb
xchg
test
cltd
xlat
test
sahf
daa
enter
xor
roll
mov
jge
stos
iret
add
popf
repz
mov
and
scas
mov
and
lret
shll
into
jno
aaa
jb
int
lcall
fisttps
and
sahf
mov
cmpsl
dec
sbb
int
xor
mov
sub
and
jge
lock
sub
cmp
stc
ss
pop
xor
xor
jp
xchg
mov
out
jp
fisttps
sbb
in
cmpsl
imul
and
pop
jb
pusha
xlat
cmpsb
pop
cmp
adc
mov
pop
iret
sbb
sub
push
mov
mov
mov
ret
add
test
sbbl
insl
scas
out
lds
inc
sub
pop
pop
adc
icebp
mov
inc
adc
xchg
jp
mov
jo
imul
xor
jle
stos
jo
test
mov
jmp
push
repz
leave
leave
or
adc
cmp
enter
dec
push
lock
lcall
enter
xor
or
cmp
mov
and
mov
cli
stos
mov
cmpsl
scas
or
movsb
pushf
cmp
aam
dec
std
sbb
cmpsl
pop
jns
ljmp
insb
xor
scas
push
push
sarl
leave
outsb
pop
add
xchg
xchg
xchg
into
jge
aad
xchg
test
sbb
jl
push
add
adc
lods
and
cmp
lcall
xchg
hlt
cltd
addr16
cmpsb
sub
inc
in
push
pop
out
shll
fwait
inc
mov
std
sub
mov
jo
test
mov
iret
repz
enter
xor
sub
xchg
popa
mov
scas
push
mov
pop
inc
mov
test
jno
dec
add
mov
inc
and
jle
dec
xchg
mov
iret
shrb
gs
jno
sbb
test
and
andb
push
jns
xchg
cmp
mov
pushf
repz
push
pop
dec
dec
dec
lds
lock
popl
mov
jae
or
gs
call
sub
jo
stc
ljmp
sub
bnd
sbb
inc
mov
sahf
data16
mov
stc
dec
or
subb
shll
mov
mov
or
lret
xchg
mov
loope
mov
push
jno
aam
and
xor
ret
fidivs
inc
mov
in
pop
shrb
testl
nop
or
lds
dec
push
rcll
idiv
clc
addr16
cli
test
imul
lret
add
popf
ret
lods
in
sti
divb
jg
mov
mov
loopne
mov
cld
lret
pushf
std
test
push
cwtl
insl
mov
out
mov
jmp
pop
into
daa
hlt
das
dec
xchg
out
jns
add
loop
jne
add
mov
jb
rcll
gs
sub
jl
jg
sub
ret
imul
arpl
sahf
sbb
dec
outsb
push
sbb
inc
insl
mov
push
and
je
cmpsl
mov
add
out
push
push
adc
stc
and
divl
sub
enter
lods
fsts
incl
stc
add
jne
xor
ljmp
fs
test
rorl
scas
dec
xor
rcll
shlb
test
arpl
ficomps
aad
sub
add
add
xor
adc
out
fsubs
cmp
push
or
add
or
xor
push
testb
es
repnz
ss
xor
js
lds
mov
push
xor
push
sahf
pop
shrl
lods
stos
or
addb
and
arpl
mov
pop
ret
cmp
cwtl
add
rcll
outsl
xchg
les
aaa
adc
and
arpl
xchg
xchg
inc
mov
icebp
repnz
dec
adc
cs
scas
rolb
outsl
xor
sub
cmc
fnstsw
lret
pop
andb
test
lea
push
insb
pusha
or
pop
push
jmp
xchg
adc
aaa
mov
or
or
insl
add
in
ja
sub
fadds
jno
xlat
and
movsl
sbb
imull
js
push
xchg
out
mov
rcl
jbe
dec
adc
mov
and
dec
jp
in
rcll
aad
adcl
push
lock
sbb
int
test
inc
lds
fs
stc
xor
cmc
sbb
dec
sub
cmp
out
dec
jmp
mov
cmc
dec
jno
call
out
dec
pop
inc
inc
sub
mov
shrb
lods
lcall
cli
fistl
xorl
mov
mov
xchg
mov
xor
orb
lea
into
xlat
adc
movsb
test
outsl
push
fucomp
pop
mov
xor
or
push
add
mov
push
dec
sbb
mov
mov
fs
push
pop
jne
inc
add
clc
popa
cmpsb
cmp
jmp
cmp
rorl
rol
pusha
push
add
cmp
scas
scas
into
or
iret
mov
xchg
adc
lahf
jp
scas
push
adc
sbb
sbb
mov
nop
jne
jbe
xchg
mov
rcrb
xchg
cmp
in
fistpll
enter
xor
sbb
ss
cmc
js
mov
adc
mov
iret
movsb
mov
dec
sbb
out
daa
pop
rclb
push
iret
pop
ret
push
push
bound
dec
fs
test
enter
inc
rorb
mov
sub
stc
cwtl
add
enter
movsb
push
cmp
or
mov
cmc
in
out
xor
xchg
mov
adc
xchg
pop
arpl
pop
cmp
sub
dec
inc
xchg
lret
cli
fs
mov
xor
int3
daa
in
jmp
ret
lods
add
dec
ficompl
pop
addl
lods
in
push
fnstcw
repz
pop
sub
mov
sbb
imul
lods
movsb
mov
icebp
cmpsl
ret
cmp
mov
jns
test
xchg
dec
pop
push
xchg
int
gs
js
pop
push
push
mov
testb
cmp
pop
adc
in
adcl
xchg
xorb
mov
ja
or
popf
out
je
lods
test
call
mov
daa
out
jge
or
sub
ret
pop
mov
mov
lret
xchg
movsb
out
rclb
ficompl
mov
inc
dec
xchg
xchg
sub
push
sahf
shlb
aaa
dec
xlat
mov
mov
xchg
imul
xor
jl
imul
js
or
adc
jl
jne
dec
push
and
push
sub
mov
jl
xchg
xor
sbb
sbb
lds
jo
in
dec
jnp
ret
arpl
das
dec
scas
or
push
hlt
ficoml
dec
xor
mov
ret
cltd
fistpll
sbb
push
in
addr16
and
rorb
test
fisubs
fldt
popf
cmp
mull
add
xor
bound
faddl
adc
sub
pop
mov
or
inc
and
push
shrb
push
iret
mov
icebp
mov
push
repz
ret
daa
adc
lahf
test
inc
xchg
notb
mov
jnp
mov
cs
pop
je
repnz
adc
push
jmp
jmp
stos
xor
push
out
insb
jle
push
sbb
in
jb
sbb
push
into
mov
sbb
enter
lret
les
sub
sub
adc
mov
push
in
outsl
into
pop
aas
out
ja
cmp
pop
sbb
mov
lahf
int
and
loopne
push
out
ret
adc
out
xchg
inc
push
jne
popa
fisttpll
jnp
add
mov
jbe
or
adc
jl
cmp
aad
cwtl
sbb
adc
adc
xchg
out
sarl
or
mov
stc
mov
dec
dec
mov
fmull
adc
je
mull
jecxz
pop
mov
rcr
test
jle
mov
cmp
sbb
js
scas
xchg
jmp
lods
and
pop
push
shrb
std
push
inc
dec
fsubl
fsubrl
pop
inc
mov
icebp
ret
ds
mov
mov
push
jp
mov
or
pop
out
pushf
push
movsl
pop
jg
mov
fwait
mov
mov
cmpb
hlt
dec
and
lods
movb
insl
dec
sbb
popa
ss
ficoml
pop
mov
xor
cs
popf
xor
dec
test
xchg
xlat
jg
ljmp
push
and
data16
mov
addb
cli
fisttpll
sbb
mov
int
insl
pop
rorb
imul
imul
cmc
mov
mov
xor
stos
push
dec
mov
cmc
xchg
shl
and
cs
aas
jno
sub
push
fcomip
pop
subl
jmp
into
or
loope
xchg
loope
testb
loope
xchg
pusha
iret
or
and
xor
add
adc
jmp
mov
inc
mov
adc
mov
inc
push
divb
daa
mov
into
cmp
mov
insl
pop
out
xchg
mov
cmpb
arpl
imul
jo
hlt
xchg
and
and
dec
stos
test
push
enter
pop
mov
jnp
mov
shrb
dec
je
leave
xor
sbb
roll
sub
stos
jne
push
movsb
push
iret
out
cmc
inc
divl
data16
xchg
ljmp
push
add
repnz
mov
cmc
ret
xlat
ficomps
repnz
arpl
add
push
push
jge
push
stos
outsl
jo
sahf
bound
ret
jp
idivb
in
jle
cmp
call
lock
cli
cs
jnp
add
testb
sub
stc
ds
popa
test
test
push
negb
inc
sahf
cmpb
xor
faddp
test
fwait
pop
dec
jmp
cmc
xchg
loop
pop
inc
jo
ret
push
das
inc
jg
add
pushf
ret
jns
sahf
cli
shl
inc
or
lock
add
pop
stos
leave
pop
cmc
mov
outsb
mov
jmp
ds
or
gs
push
dec
pop
cmpsb
shrb
bound
inc
cmc
push
mov
sub
push
clc
sarl
movsb
std
subb
add
int3
inc
out
xor
mov
fs
scas
int
inc
imul
retw
add
xor
mov
icebp
jne
shrd
pop
add
lods
adc
in
lcall
xchg
jnp
cs
jecxz
stc
xor
add
rdseed
fwait
adc
mov
jnp
xchg
lods
and
aaa
fmull
xchg
sahf
dec
xchg
hlt
jo
push
pop
lods
loope
aas
push
data16
mov
in
divb
ret
cli
das
mov
cltd
ret
repnz
lret
jb
insb
lret
inc
popf
pop
xchg
jmp
dec
lods
mov
sub
int
pop
dec
adc
in
cmp
sbb
sarb
dec
adcb
andb
loope
mov
and
lods
inc
cmp
fwait
pop
ror
outsb
ret
add
stos
or
rcl
mov
jnp
xlat
shr
dec
arpl
adc
loop
mov
pushf
dec
std
and
adcb
js
stos
xor
jge
push
jmp
xchg
dec
or
daa
out
pushf
testb
cs
iret
dec
add
xchg
hlt
ret
cmp
les
or
idivl
cmpsb
and
or
aaa
sti
lods
dec
or
pop
imul
fwait
or
mov
in
dec
push
push
xchg
inc
mov
push
xorl
lret
push
in
sbb
or
int3
loope
jecxz
jg
push
pop
shll
negl
mov
pop
push
dec
lcall
xchg
push
popa
loop
sbb
data16
mov
push
aad
jmp
cmc
or
sbb
ljmp
add
inc
xor
sub
dec
lret
jb
fstpt
pop
mov
mov
mov
fcomps
movsb
mov
dec
dec
adcl
inc
es
pusha
mov
dec
cmp
xchg
fldcw
mov
in
dec
xor
dec
mov
scas
cmpsl
addb
mov
adc
cmp
imul
insb
mov
push
iret
mov
adc
or
inc
cld
add
xor
sub
icebp
xchg
into
sub
fists
sbb
mov
sbb
mov
jne
mov
mov
mov
add
pop
ret
cmp
mov
int3
das
xchg
jge
fldenv
cld
cmpsb
test
and
fcomp
lock
jae
add
adc
push
les
jl
ss
decl
xchg
and
fs
orl
xor
dec
nop
dec
iret
jecxz
shrl
inc
fisubs
into
push
movsb
pop
adc
jp
mov
data16
fildll
sbb
or
add
xchg
lret
inc
imul
lret
or
in
call
xor
mov
fs
mov
lods
insb
repnz
data16
jl
ds
adc
iret
lahf
cltd
lods
mov
cmp
je
movsl
or
pop
shlb
fiaddl
cmpl
int3
jno
sarl
cli
clc
orl
inc
fs
jne
cs
lock
adc
cmp
das
sub
jl
aam
mov
ljmp
test
test
and
inc
es
sbb
jo
sub
and
or
mov
pushf
test
dec
bound
adc
lcall
imul
push
jbe
cmpsl
stos
push
std
or
stc
inc
jle
pop
xchg
insl
mov
aaa
stos
scas
jae
ret
fs
popa
hlt
lea
scas
cmp
adc
ds
ljmp
sti
aad
scas
jae
mov
sub
mov
addr16
or
jmp
mov
mov
lods
in
pop
pop
dec
add
outsb
outsb
in
test
push
clc
and
je
stos
mov
mov
jno
ljmp
sub
popf
cmc
shl
and
xor
jno
jecxz
inc
stos
subl
out
push
jne
dec
fimull
outsl
dec
jns
fmul
pop
adc
icebp
inc
testb
adc
adc
xchg
call
sub
xor
mov
xchg
hlt
jle
mov
adc
shlb
jle
out
push
popa
xchg
push
stos
pop
xchg
mov
adc
add
addr16
aad
imul
xchg
ret
ja
pop
sbb
add
mov
xor
call
js
cmpsl
sbb
jge
xor
mov
pop
inc
adc
mov
je
aas
les
loopne
pop
out
notb
fwait
int
push
test
adc
fildll
inc
dec
jo
pop
movsl
xchg
inc
sub
repnz
xchg
mov
dec
pop
js
lea
push
inc
xchg
hlt
pusha
push
adc
jg
dec
jo
cmpsl
and
pop
imul
mov
add
jl
pop
lea
scas
notb
mov
int
jecxz
jge
into
dec
add
mov
in
pushf
fisttps
adc
push
divb
jmp
or
mov
iret
push
xor
cmpsl
sub
out
xchg
adc
xor
movb
daa
add
mov
cmpsb
adc
mov
mov
cmp
mov
mov
add
sti
add
pop
jno
pmulhuw
lods
push
out
jnp
int
inc
xor
in
fdiv
js
insl
mov
push
stos
sub
mov
xorl
jge
or
call
pop
add
jb
daa
mov
mov
test
lds
dec
or
xor
scas
arpl
jns
cmpsb
xchg
inc
lahf
out
std
and
scas
pop
mov
je
mov
push
jb
push
dec
in
movsl
orb
sub
sub
xor
mov
cmp
shlb
mov
inc
out
pop
adc
sti
fwait
xchg
sub
push
test
dec
nop
in
dec
ljmp
popf
mov
jbe
popa
xchg
inc
jg
sbb
ret
xchg
les
jns
iret
sub
mov
or
cmp
jmp
pop
or
or
std
shl
jge
fiaddl
lods
daa
data16
mov
mov
xchg
lods
or
sbb
add
cmp
pop
jne
push
subb
cmp
pushl
pop
dec
cmc
xor
mov
std
fs
sub
jne
jecxz
xchg
push
dec
popa
enter
or
fsubrs
push
cld
sbb
add
dec
daa
lock
jno
pop
xchg
std
push
pushf
adc
jo
mov
cs
out
sub
and
mov
out
xchg
lret
dec
mov
mov
xlat
mov
mov
adc
mov
mov
sti
mov
jns
dec
ljmp
cmc
sub
iret
and
xchg
enter
or
xchg
in
mov
mov
shl
sbb
inc
mov
mov
xlat
mov
addb
mov
sub
push
adc
cltd
scas
add
mov
xor
jo
sub
pop
xchg
out
mov
in
scas
pop
popa
mov
lret
stos
ss
xchg
xor
ds
ss
lock
push
xchg
mov
popl
sub
dec
out
hlt
fwait
int
cmp
fists
jae
fidivs
inc
adc
ss
mov
xchg
add
mov
inc
mov
sbb
aad
inc
mov
and
mov
loopne
jecxz
rorl
sbb
mov
xchg
lock
sub
imul
add
add
pop
les
loope
daa
mov
jb
cmp
int
push
dec
repz
add
sti
xor
subl
or
rolb
loop
mov
mov
sbb
mov
aad
mov
pop
cltd
in
lret
push
xor
int
cmp
arpl
jg
scas
jo
ljmp
rcrb
mov
cld
divl
and
mov
or
fcmovu
jp
pop
out
mov
pop
adc
rolb
jns
xor
ret
lret
es
test
xchg
jecxz
mov
clc
xchg
call
cmc
loopne
add
mov
leave
roll
inc
or
xchg
fdivs
ss
push
dec
push
push
xchg
out
xchg
cmpsb
out
shlb
popa
push
scas
mov
in
les
and
sub
fnstsw
aam
cmp
lods
mov
mov
sbb
adc
cs
inc
mov
test
andl
xor
dec
xchg
rclb
enter
sahf
push
xor
xchg
add
aas
jne
out
fsubr
outsb
push
push
les
adc
in
pop
out
insl
iret
incb
fmull
ljmp
aad
and
mov
sahf
lock
aad
adc
lahf
jecxz
nop
pop
pusha
lahf
jnp
add
push
out
or
mov
lea
out
inc
xchg
nop
push
cmp
sar
add
jge
or
lahf
movsb
in
and
mov
ret
xorb
and
inc
push
or
fwait
dec
aam
out
sbb
fcomps
shrb
push
adc
push
call
ljmp
test
loope
ficomps
dec
in
pop
rcll
into
or
in
add
dec
imul
bnd
mov
bound
cmp
fidivs
loop
sbbl
lcall
inc
push
es
push
cld
sub
pop
jbe
insb
aaa
in
mov
out
dec
push
inc
clc
fildl
negb
and
mov
cwtl
mov
into
inc
ret
sbb
push
jp
in
dec
fwait
les
and
cmp
xor
and
inc
or
push
adc
faddp
pop
lods
rorb
dec
push
mov
outsb
lods
dec
jb
xchg
mov
fldlg2
dec
jns
and
jp
pusha
cmc
and
fisttpll
sahf
pop
fdivp
fwait
out
add
cs
leave
jl
push
sbb
jge
inc
loope
imul
icebp
cs
xchg
sbb
pop
sub
mov
pop
loope
cmpsb
test
push
shlb
aaa
in
push
shrl
mov
or
bnd
mov
push
lods
inc
mov
adc
mov
inc
sub
mov
lock
and
in
js
test
les
cwtl
rcrb
mov
mov
lcall
gs
in
add
pop
aas
addb
xchg
popa
sbb
movsb
push
mov
pop
mov
sub
bound
adc
in
stos
dec
dec
jno
pusha
cmpsb
push
inc
inc
dec
xchg
aas
stos
and
in
jle
fmull
es
xchg
ret
cmp
inc
dec
enter
cmp
test
imul
cmc
fnstcw
mov
fmull
rclb
stos
sub
cmp
mov
fwait
movsb
sub
xchg
jg
pusha
push
cmpb
mov
cmp
scas
out
pop
andb
neg
jo
mov
sahf
sahf
pop
or
imul
dec
iret
hlt
out
jmpw
push
push
inc
sahf
adc
outsb
int
and
adc
imul
push
adc
sub
enter
mov
adc
adc
and
pop
push
imul
out
xor
pushf
sbb
iret
push
xchg
cli
add
mov
in
ret
ja
shll
and
scas
sub
sbb
out
int
jle
push
loope
in
repnz
cmpsl
into
stos
addr16
adc
jl
jmp
sti
lret
aaa
xor
jne
in
mov
inc
dec
daa
inc
fsubs
and
sahf
sub
call
xchg
lahf
pop
adc
dec
aaa
in
mov
inc
test
mull
xchg
pop
mov
push
sub
mov
add
mov
out
jecxz
mov
push
fdiv
mov
data16
push
mov
pusha
add
sub
aad
push
dec
shll
and
out
xlat
jl
pop
add
ret
jne
fcmovne
lahf
sbb
fidivl
fimuls
push
icebp
cs
sub
push
test
xchg
scas
push
loopne
repnz
dec
les
add
out
push
fisubl
add
std
test
inc
jnp
push
xchg
mov
gs
out
jns
stos
mov
or
jns
outsb
test
nop
fistpll
mov
pop
xchg
mov
pop
dec
imul
clts
push
or
or
dec
jmp
pop
push
xchg
les
push
jle
lretw
push
sahf
fsts
flds
fiaddl
mov
popa
sbb
fwait
aad
mov
xchg
dec
xchg
adc
lods
mov
mov
ror
jne
les
repz
test
iret
jg
mov
sub
pop
mov
adc
mov
pop
movsb
aaa
sarl
mov
sub
inc
mov
cmpsb
in
inc
push
dec
ror
inc
fisubrl
pop
sub
pop
jp
jae
sub
rorb
sbb
adc
or
dec
mov
pop
mov
jnp
les
push
icebp
lret
xor
jmp
xlat
jecxz
jno
jns
push
ja
enter
cmp
or
outsl
pop
xor
jae
inc
aam
or
inc
aaa
outsb
mov
icebp
lahf
cmp
add
add
mov
andl
mov
stos
leave
xchg
mov
jge
idiv
fiadds
mov
pop
arpl
nop
xchg
jnp
or
ljmp
insb
jecxz
leave
mov
add
lds
add
xor
jnp
cli
imul
pop
push
popa
repnz
jno
lret
dec
mov
ds
orb
mov
mov
jnp
push
js
mov
sbb
dec
loopne
xor
sbb
repnz
adc
fdivr
fucom
daa
mov
sbb
pop
outsb
jo
ss
jge
call
sub
or
dec
add
cs
stos
mov
cmpsb
divb
cltd
mov
jl
mov
xchg
and
jno
xor
imul
enter
adc
aam
divb
les
mov
fldt
enter
add
dec
dec
sbb
jge
into
push
and
xlat
xor
or
ja
arpl
addr16
lret
cmp
mov
cli
push
test
pop
mov
mov
sub
mov
fwait
icebp
xor
jle
je
mov
gs
movsl
and
repz
fisttps
jecxz
mov
aad
decl
sub
pushl
gs
dec
xor
cmpsl
fmulp
pop
mov
aas
dec
cmpsl
push
sub
sbb
fmull
mov
bound
loope
jne
cmpsb
and
mov
jnp
and
jnp
sarl
lea
loopne
adc
stc
sub
sbb
mov
sbb
lods
xchg
xor
pusha
dec
push
xchg
loop
sub
mov
jp
gs
nop
adc
xchg
jns
sti
add
xchg
stc
and
stos
fnstsw
mov
lods
leave
cmp
filds
cmpsl
push
mov
lahf
lcall
mov
out
stos
jno
test
iret
mov
loope
outsb
mov
and
xor
lods
dec
sub
push
ficoml
adc
dec
xor
and
dec
sarl
subb
stos
movsl
jle
dec
adc
mov
ret
out
pop
shll
int3
mov
mov
xor
push
or
ss
dec
mov
adc
mov
movb
fadd
sub
negb
leave
pop
pop
jae
xchg
xchg
ds
inc
lea
xor
cs
or
bnd
lods
pop
jge
mov
in
push
cmpsl
int
sbb
push
dec
js
jno
xor
dec
cltd
daa
fcmovb
orl
lcall
jmp
sub
dec
fcmovnu
ret
jg
cs
add
repnz
sbb
in
decb
nop
js
insb
xor
inc
lds
ret
sarb
jmp
mov
pushf
insb
test
call
mov
out
jne
das
icebp
fs
int3
xor
lret
lods
pop
in
mov
rclb
pushf
cmpsb
jo
xchg
arpl
fistpl
jb
mov
or
mov
daa
cmc
iret
lretw
mov
mov
fldt
xchg
cld
dec
add
dec
push
stc
push
aaa
mov
cmp
inc
or
lds
dec
mov
cli
fiaddl
gs
imul
pop
movsl
add
icebp
out
ret
dec
test
cmpl
adc
in
sbb
cmp
scas
push
or
xor
add
sbbb
sub
xor
addr16
xlat
pop
or
lret
jle
or
and
mov
xchg
in
cmc
add
mov
mov
xor
loope
sbb
and
xlat
mov
jns
push
adcl
movsb
or
add
and
inc
add
mov
aas
push
or
fdivs
mov
sub
cmp
add
pop
dec
popa
icebp
lea
cmp
push
int
dec
mov
mov
xor
stos
popa
imul
roll
fs
insb
out
or
and
fwait
mov
adc
les
and
call
jno
test
insl
jl
std
push
lcall
iret
mov
push
cmp
insb
xor
mov
in
push
cmp
insb
xor
mov
push
mov
cmpsb
or
or
movsb
inc
je
fistpl
lods
out
ljmp
cmpb
notb
jno
jmp
gs
leave
stos
aad
test
out
fs
jns
inc
or
aas
jp
jge
push
loop
into
pop
inc
fwait
mov
cmpsl
in
sub
out
pop
stos
sbb
pop
jns
daa
and
out
addr16
out
and
jns
cmp
mov
addr16
mov
nop
aam
out
subb
mov
nop
imul
int3
cwtl
mov
roll
cmp
push
fbld
sbb
lret
loope
push
inc
fnstsw
test
xchg
pushf
inc
fiadds
cmp
out
int
jae
xor
iret
in
imul
push
pop
xor
call
inc
push
jp
and
xor
add
xor
push
fcoms
mov
dec
hlt
add
add
xor
decl
add
je
jle
fs
inc
mov
push
test
adc
mov
pusha
negb
jb
fcmovnb
outsb
sahf
xor
shl
add
test
cmpsb
pop
je
sbb
shl
imul
repnz
and
test
dec
sar
jb
mov
andb
inc
xchg
lahf
mov
les
and
xchg
mov
mov
cwtl
mov
adc
xchg
mov
loope
jnp
outsb
mov
sbb
jmp
int3
mov
arpl
sti
rcrl
data16
xchg
xor
test
lds
shrl
jmp
sub
pop
push
cli
ljmp
fstpl
mov
cld
pushl
shlb
xlat
or
dec
out
ds
lds
and
stc
jns
fisubrl
mov
xchg
ds
aaa
push
mov
fwait
pop
push
inc
repz
sti
shll
sub
cmp
dec
lret
push
mov
repnz
inc
xchg
add
mov
inc
pusha
pand
mov
jb
hlt
mov
data16
lret
jp
mov
frstor
inc
add
ljmp
faddl
insb
cs
mov
xchg
pcmpeqw
push
in
int
cld
orl
adcl
cmp
sub
mov
out
xor
dec
mov
pop
pusha
xlat
cmp
fsubr
sub
add
es
scas
stc
pop
lret
push
movsl
mov
sub
or
xor
jns
pop
int3
in
push
jge
mov
lahf
xor
sub
lods
dec
je
test
cmc
jmp
mov
in
jo
daa
out
in
imul
pop
and
iret
cmc
mov
sbb
xchg
push
out
jecxz
je
stos
sbb
and
mov
lds
ja
outsl
loope
test
push
in
push
daa
cmp
adcl
shr
mov
sbb
clc
orb
mov
scas
sti
cmpsl
xchg
cmp
adc
xchg
pop
sub
or
mov
ljmp
imul
and
inc
inc
mov
loopne
cmp
enter
xor
or
imul
je
fdivs
jne
mov
daa
cmp
dec
mov
fdivrp
lea
dec
sub
dec
test
pushf
or
push
add
mov
mov
or
inc
dec
ljmp
mov
jle
subl
or
inc
add
loope
frstor
add
dec
repz
mov
inc
test
lods
mov
cmp
scas
out
mov
pushf
mov
or
mov
or
cli
cmp
dec
sbb
out
adc
bound
pop
lods
mov
scas
imul
push
movsb
mov
sbb
sub
mov
js
mov
jbe
in
inc
push
cmp
mov
int
mov
lea
stos
pusha
call
pop
xchg
dec
fprem1
adc
jecxz
pop
add
push
add
sahf
push
popf
sub
pop
rcrb
les
push
push
shrl
mov
out
add
lret
xlat
adc
cmpsl
dec
call
sub
outsb
and
xchg
pop
test
pop
fnstenv
push
out
cwtl
aam
inc
pop
hlt
push
add
dec
mov
pop
repz
outsl
jge
sub
les
into
int3
dec
push
pop
iret
mov
out
dec
xchg
xchg
fs
or
lret
jg
sub
sbb
insb
sahf
es
pop
inc
sbb
pop
mov
and
jnp
dec
imul
jecxz
dec
ret
cmp
cmpsb
add
rclb
or
sar
pushf
cmpsb
jae
fmuls
arpl
jge
xchg
mov
adcb
lret
daa
js
cmp
add
std
pop
push
test
rclb
idiv
into
aaa
push
in
adc
hlt
sub
mov
push
cltd
inc
dec
adc
call
xchg
imull
jle
cld
mov
or
push
push
and
sbb
into
push
out
shll
dec
sbb
mov
loop
out
cmp
insl
pop
mov
inc
sbb
out
lods
push
mov
enter
push
jne
scas
mov
aad
stos
xor
dec
mov
xor
fimuls
fnstsw
jnp
add
test
movsl
mov
cli
xchg
mov
push
xchg
fistpl
push
out
xchg
push
loopne
hlt
add
fsubrs
cmp
inc
and
dec
mov
ss
pop
popa
inc
test
or
mov
and
mov
adc
xor
stc
outsb
icebp
jne
mov
in
rcrb
mov
pop
adc
sti
loope
xchg
bound
dec
sub
push
popa
out
mov
adc
mov
mov
xchg
cs
ljmp
cmp
loop
aam
in
pop
insb
mov
insl
adc
aam
repz
hlt
fcomps
test
dec
rolb
mov
mov
insb
and
and
inc
xchg
add
call
dec
aad
xlat
ja
mov
push
xchg
mov
mov
xor
mov
cwtl
inc
lock
and
cwtl
cmp
adc
cltd
xor
push
shl
sti
or
loope
mov
daa
and
das
out
loop
adc
sbb
cs
cs
sub
fistl
pop
leave
jl
das
lcall
lret
lods
insb
data16
xlat
mov
mov
pop
fwait
out
or
js
dec
nop
loope
daa
push
imul
pop
out
out
vmwrite
scas
mov
sbb
mov
mov
and
mov
pushf
outsb
pop
mov
pop
les
or
cld
add
jo
arpl
flds
or
pusha
sub
popa
jno
ss
lret
jnp
cmp
ds
es
jno
ret
sbb
mov
or
int3
stc
rcll
mov
outsb
fcompl
int
daa
je
jbe
inc
std
imulb
fists
push
mov
cwtl
imul
sub
loopne
push
dec
pop
out
or
mov
int
push
inc
movl
out
dec
arpl
loopne
inc
push
movsb
fisttpll
xor
xchg
mov
loopne
sub
dec
xchg
pop
push
add
insb
into
sbb
xchg
scas
mov
xchg
inc
test
sbb
movsb
maskmovq
mull
mov
mov
icebp
xor
jg
lods
inc
xor
sub
xchg
or
adcb
jmp
mov
cmp
movsb
jnp
mov
divb
cltd
push
pop
movsb
rclb
and
jmp
icebp
loopne
xchg
fldt
outsb
cmpsb
inc
imul
adc
clc
icebp
cltd
les
int
adc
stc
mov
inc
andb
movsb
and
add
outsl
sub
lods
sub
xchg
or
ss
mov
lret
sub
psubsw
nop
mov
pop
cmp
cmp
imul
jns
loop
std
nop
fidivrl
mov
add
cwtl
inc
xchg
inc
or
imul
add
aad
jmp
inc
cmp
xchg
xor
push
cltd
pop
xor
cld
call
xor
loop
gs
dec
xchg
call
cmp
push
hlt
aaa
sub
inc
flds
mov
insb
clc
mov
or
pop
fs
or
dec
in
dec
dec
je
mov
push
dec
pop
pop
dec
sahf
mov
sbb
subb
sub
jne
inc
mov
das
das
jne
pusha
sahf
cmpsl
addr16
sbb
rcrb
xchg
arpl
push
mov
lsl
mov
push
data16
push
imul
pop
mov
push
lds
js
mov
fstpl
addb
call
pop
lods
xlat
es
mov
out
cmp
mov
lock
or
pop
inc
dec
sbb
jnp
jo
cmp
mov
xorl
rclb
cmc
rorl
shrl
xor
xchg
or
call
jg
lock
add
rcr
shrb
pushf
insb
xchg
fidivrs
aas
in
aas
aad
pop
clc
aas
popa
pop
push
inc
insb
xor
cli
dec
xor
jbe
scas
xor
inc
sub
jecxz
movsl
in
movsb
pop
push
popf
pushf
mov
icebp
test
sahf
sub
inc
popa
pop
sbbb
push
add
icebp
lods
push
aad
cmp
addr16
jge
or
xchg
dec
mov
in
push
es
cmp
lea
jo
mov
popa
std
dec
ljmp
lret
pop
insb
insl
xchg
outsb
lock
push
dec
sahf
test
mov
dec
js
cmp
add
mov
sub
xchg
inc
test
ss
sbb
add
cld
cmp
addr16
repz
add
and
xor
or
mov
inc
repz
lds
cmp
mov
xchg
add
or
dec
inc
pop
dec
adcl
pop
push
or
jo
into
das
ds
inc
mov
incl
insb
insb
jge
fidivrl
lock
pop
scas
ljmp
das
sahf
cmc
mov
add
jle
fbld
mov
add
unpckhps
xlat
add
in
inc
cmp
sub
fistps
insb
popa
jno
sub
ja
push
or
repnz
fnstcw
inc
sbb
dec
and
push
repz
pop
push
imul
pop
inc
lret
mov
scas
mov
add
loope
jno,pn
inc
mov
jb
lock
lock
dec
insb
add
jmp
xor
arpl
sbb
call
or
mov
xor
sbb
push
imull
xchg
jne
mov
sbb
mov
sahf
jb
test
mov
aaa
pop
lahf
dec
leave
dec
stc
icebp
jbe
mov
inc
push
push
sbb
mov
jecxz
enter
sub
sti
push
cmpsl
mov
sbb
lods
and
iret
mov
jg
cmc
push
mov
pop
jbe
scas
xor
and
mov
roll
stc
repnz
mov
movl
or
cmc
lea
les
test
stc
hlt
adcl
pop
in
adc
inc
xchg
arpl
aas
aad
inc
in
insb
out
push
inc
inc
push
popa
sub
scas
add
aaa
jno
add
cli
mov
jecxz
cmp
ss
pushl
push
sub
jmp
mov
sbb
dec
mov
sti
addl
sub
movsl
add
icebp
push
xor
inc
std
pushf
fbstp
repnz
jmp
inc
inc
loop
adc
fsubl
pop
push
mov
mov
mov
lock
dec
clc
push
test
mov
push
faddl
push
lods
dec
and
and
test
xchg
cmpsb
test
sub
leave
xor
inc
fstpl
or
adcl
adc
jb
dec
add
stos
pop
addr16
or
flds
fcoms
les
push
jg
imul
ljmp
ljmp
outsl
adc
outsl
sub
in
pop
sbb
leave
roll
ss
lret
push
insb
out
aam
loop
mov
std
push
pop
enter
mov
add
push
jno
lds
jmp
into
mov
movaps
inc
out
push
pop
and
cs
jb,pn
dec
dec
mov
fbld
jg
ficomps
jnp
jne
or
test
ljmp
stc
jp
mov
mov
lods
or
pop
xchg
and
test
xchg
and
inc
mov
rorl
pushl
loop
jle
sub
lahf
or
mov
scas
push
out
push
pop
idivb
dec
xor
outsb
sbb
ds
out
adcb
int
sarl
ficomps
enter
pop
addr16
push
lock
jl
ret
subl
nopl
push
mov
sahf
loop
add
dec
ror
repnz
push
shlb
and
mov
das
stos
mov
dec
out
push
dec
out
push
adc
mov
jo
subb
mov
or
inc
mov
cmp
sbb
nop
fidivrl
pushf
push
out
aad
pop
cmpsl
outsl
or
cmp
push
jmp
out
mov
mov
add
cmp
inc
sub
jmp
adc
or
pusha
lret
filds
mov
and
ds
lods
pop
xchg
aad
movsl
out
lock
cmp
fwait
roll
lods
dec
or
xor
lea
das
out
int
adc
dec
repnz
pusha
push
pop
and
or
shrl
sahf
xorl
cltd
stc
hlt
xor
es
sbb
mov
adc
fmuls
cmp
movsb
and
fistpll
mov
sub
movd
cltd
mov
ljmp
aad
cli
jmp
sti
imul
adc
jne
sub
test
fsubl
rorl
and
cmp
in
mov
scas
scas
shll
pop
adc
jns
adc
repz
mov
dec
call
movsl
inc
ret
adc
xchg
pop
aaa
pop
mov
cmc
xchg
sub
ss
dec
in
cld
and
mov
dec
cld
aam
popa
mov
and
adc
mov
xchg
stos
bnd
push
imul
into
lcall
testl
paddsw
cmp
jle
in
push
sti
mov
loopne
clc
je
popf
and
addl
sub
imul
push
jecxz
out
xor
icebp
sub
sub
in
jae
xchg
cmpsl
shl
mov
andb
mov
push
add
cs
fnstcw
addl
inc
scas
je
mov
popf
inc
adc
ret
and
push
in
cwtl
in
scas
pop
jle
mov
scas
test
ja
mov
inc
or
jno
mov
cltd
daa
mov
insl
push
loop
pop
jp
cmp
das
xchg
pop
xchg
mov
adcl
sub
xor
das
jg
push
aam
je
stc
popf
adcl
pop
orb
add
adc
or
loopne
pop
fimull
mov
mov
lods
gs
loopne
push
inc
mov
xlat
sti
xchg
je
sbb
xchg
push
pop
test
rorb
push
push
push
test
adc
daa
addl
or
inc
fisubrl
scas
outsb
cmp
gs
arpl
pop
inc
mov
popf
cltd
leave
mov
cmp
shll
enter
pop
cmpsl
mov
leave
repz
inc
or
outsb
or
stc
mov
cli
cmp
adc
lea
jmp
jne
dec
adc
add
push
pushf
sbbl
cmp
aaa
mov
call
shlb
mov
movsl
pushf
xchg
sub
push
pop
xchg
rclb
or
push
roll
ljmp
in
dec
jbe
xor
cli
xlat
xor
mov
jle
stos
fbld
jno
push
or
out
sbb
jl
mov
idivb
test
jp
in
pandn
jno
ret
mov
xchg
mov
sbbb
pop
popa
mov
cld
and
pop
xor
scas
aam
insl
and
sub
dec
add
mov
xchg
or
jnp,pn
add
xchg
pusha
cmpsb
pop
jl
mov
sahf
leave
aad
xor
pop
mov
mov
in
test
push
orb
push
adc
es
adc
fidivrs
sti
push
push
xchg
sbb
add
and
add
ss
xlat
sbb
or
jae
pop
xchg
and
xor
fadds
or
rclb
imulb
xor
and
loope
mov
jg
push
mov
fdivl
jne
pop
mov
cmp
sbb
movsb
repz
addr16
icebp
jbe
loop
stos
dec
or
cmp
and
lds
pop
mov
std
add
aaa
mov
pop
and
cmpsl
addr16
pop
push
xchg
cmp
fs
mov
xor
loopne
cli
fwait
sub
lret
popf
cs
popf
lcall
dec
add
fisubs
push
or
sbbb
add
dec
sahf
ficompl
jb
or
mov
fcomp
sti
test
fs
mov
mov
int
mov
and
iret
lods
ja
push
popa
fwait
xor
jecxz
mov
outsl
pop
pop
pop
test
inc
mov
or
and
push
insb
pop
cwtl
popa
push
ss
jecxz
sbb
bound
dec
mov
and
popl
outsl
cmpsl
leave
js
outsl
or
imul
inc
mov
mov
or
dec
inc
add
mov
imul
loope
test
mov
jb
and
ljmp
jb
mov
inc
inc
adc
mull
mov
adc
jb
rcr
shll
and
xor
lods
adc
mov
std
sub
xor
rcr
bound
dec
test
movsl
or
test
jecxz
xchg
ret
mov
aam
jmp
add
cmpsb
test
or
test
aam
in
jp
inc
push
inc
lcall
rcrl
cld
cmc
es
inc
int3
jle
inc
fnstcw
xchg
sbb
loop
and
lods
pop
jge
add
pop
push
js
movsb
nop
shlb
repnz
outsl
and
jecxz
loop
cmp
cmp
je
add
adc
aam
xlat
mov
out
sub
sub
into
push
fwait
cmp
adc
jno
mov
sbb
xchg
lock
adc
mov
fs
xor
adc
data16
lods
mov
test
mov
in
mov
sub
and
into
hlt
fwait
sbb
aaa
out
mov
or
xchg
mov
adc
xchg
pop
inc
jg
or
js
jmp
lds
scas
sub
das
xchg
jb
ficoms
xor
adc
adc
rolb
js
rcrb
jnp
fs
ja
stos
pop
jo
mov
push
mov
jne
into
jne,pn
daa
insl
add
xlat
scas
int3
xorb
mov
or
push
push
sti
mov
mov
mov
push
xchg
xchg
jg
xchg
jmp
ljmp
jno
movsb
sub
xchg
popl
and
cmp
loopne
mov
shrb
or
mov
je
add
insb
ja
push
pop
out
xchg
xchg
rol
jp
adc
andb
fidivrl
test
lods
aaa
cwtl
je
insb
into
out
clc
lds
subb
push
add
pusha
push
int3
jg
faddl
in
mov
lcall
and
lret
mov
divl
cmp
adc
sbb
push
jbe
shrl
add
pop
in
jl
pop
pushf
adc
arpl
loop
shl
lahf
dec
xchg
pop
sub
rcll
fcmovnu
inc
xchg
dec
cmp
inc
pop
movsb
pop
movsb
jae,pn
es
das
adc
sbb
stos
pop
push
sbb
xchg
out
hlt
pushf
or
movsl
aad
dec
cmp
cli
ret
pop
hlt
popl
mov
leave
xchg
mov
imul
jae
add
lcall
jecxz
shl
out
and
dec
push
shlb
jns
hlt
push
add
pop
mov
push
lods
inc
test
dec
rcrl
mov
xor
inc
popa
sbb
lret
pop
adc
bound
loopne
loop
mov
daa
pop
jg
leave
popf
jo
jp
js
mov
xlat
jle
stc
adc
push
mov
mov
sti
xrelease
movsl
aam
or
mov
push
dec
cmp
in
pop
subl
or
out
xchg
cli
sahf
sub
test
xchg
stos
push
clc
mov
jmp
clc
or
fdivrs
xchg
lcall
les
sbb
insl
hlt
in
jmp
pop
insl
push
xchg
push
cwtl
mov
xlat
fwait
test
jge
movsl
pop
pop
push
xchg
in
test
xor
push
aaa
or
mov
mov
insl
rorb
aad
mov
iret
js
and
push
adc
or
sub
mov
in
sbb
in
push
icebp
out
mov
arpl
ret
xlat
ds
aaa
cli
add
or
cmc
pushf
xchg
ret
mov
push
out
inc
push
clc
jo
call
cwtl
cmpsb
sub
adc
sbb
out
cmp
arpl
jns
fidivs
jecxz
push
sub
repz
imul
dec
ss
testl
pop
add
mov
shl
add
mov
loope
sbb
int
movsb
shrl
js
nop
sub
push
lds
fidivs
inc
popa
sti
add
mov
add
adc
insb
xchg
faddl
xchg
xchg
dec
movsbl
hlt
roll
mov
lock
adc
add
int3
sbb
add
mov
fildll
cld
call
xor
xchg
dec
std
push
fisubs
add
shl
dec
cmp
mov
outsb
push
cld
sub
ret
cmp
xor
mov
and
call
push
add
jg
pop
pop
fildll
push
adc
and
xor
jnp
adc
aad
fucomp
xorl
mov
adc
addr16
int3
inc
add
stos
xor
add
movsl
nop
sub
jb
pushf
pop
sarl
lock
adc
mov
lock
stos
mov
add
push
call
and
mov
xor
xchg
pop
push
lcall
mov
mov
in
insl
jle
jle
cltd
mov
adc
es
fwait
push
sub
xchg
lock
lahf
or
push
sbb
icebp
xor
mov
jl
push
xlat
xor
add
ret
cld
outsb
mov
and
mov
aad
fsubl
push
and
mov
loopne
inc
sahf
aam
jmp
adc
shl
call
lods
mov
inc
lahf
cltd
loop
jns
fmull
pop
jmp
mov
sbb
cld
jb
jle
ja
cmp
xchg
xchg
fisttpll
fwait
inc
nop
sbb
adc
and
repnz
loope
fdivs
sbb
mov
push
gs
and
out
sbb
mov
fwait
mov
mov
test
ss
and
test
or
inc
jmp
jp
pop
add
dec
pop
jl
mov
xor
and
insb
push
or
dec
xchg
fsubrl
mov
stos
out
xchg
cmp
test
imul
mov
jg
lods
nop
pop
cmc
jp
fwait
jl
cmp
aad
xchg
sti
hlt
nop
clc
mov
stc
into
inc
pushf
frndint
push
out
cltd
jns
jmp
test
pop
adc
sbb
scas
lahf
fildll
movsl
cwtl
aad
jo
push
xlat
out
into
adc
cmp
jno
pop
inc
aas
fisttps
lods
cmp
mov
jb
add
fmulp
notb
and
inc
or
sti
cli
and
sbb
mov
sti
sub
xor
pop
scas
loope
cs
inc
ljmp
sbb
sbb
jb
cmp
push
push
mov
test
sbb
mov
repnz
sub
lea
call
into
sbb
push
xchg
pop
js
adc
aas
dec
mov
lcall
in
mov
rclb
pop
fs
xchg
lea
jb
in
out
ja
cmpsb
sub
jge
loop
lock
xor
xchg
jb
inc
mov
mov
cmpb
fidivrs
push
int
pop
dec
fisubrs
xchg
lock
aam
pop
xor
push
xor
sub
testb
pop
jo
and
outsb
sahf
adc
je
adc
movsl
sub
push
lret
or
inc
cmp
ss
inc
bound
push
sbb
jl
push
mov
pop
ficoms
inc
lods
mov
pop
push
adc
dec
jl
icebp
or
xchg
mov
push
sbb
mov
jnp
lret
jne
push
and
ss
dec
adc
cmp
hlt
gs
push
dec
out
test
jge
dec
flds
mov
pop
movsb
xchg
or
out
daa
shl
sbb
inc
jns
dec
mov
push
shrb
in
adc
or
mov
dec
xor
int3
xor
lock
and
xorb
mov
subb
stos
es
insb
movsb
jecxz
fnstcw
xchg
aas
mov
mov
mov
mov
adc
sub
loopne
mov
push
pushf
pop
xor
cmp
fidivrs
xchg
pop
push
or
mov
cltd
dec
lret
aas
and
out
aad
rcrb
adc
dec
popf
lahf
adc
mov
add
in
sbb
inc
cmp
mov
into
push
movsb
dec
cs
imul
sub
and
icebp
insl
into
loopne
loopne
cmp
out
stos
inc
push
add
or
cld
xchg
call
loopne
out
call
mov
sub
or
push
add
sub
push
xchg
mov
imul
jbe
cld
or
jnp
and
loope
mov
cld
pop
dec
movsl
dec
adc
mov
mov
and
mov
push
mov
mov
addr16
cmp
pop
add
mov
pop
sbb
cltd
loop
cmp
xchg
outsl
pop
mul
outsl
mov
jmp
add
inc
hlt
roll
pop
aas
nop
mov
cltd
int
in
ret
test
push
xor
add
clc
fistpll
mov
inc
outsl
inc
adc
pop
or
and
mov
pop
mov
jbe
xlat
scas
in
stc
dec
mov
subl
xor
xor
cld
mov
xchg
xor
addr16
loopne
push
lcall
test
xor
push
pushf
pop
xchg
and
repnz
testl
sbb
inc
js
sti
fisubl
movsb
out
dec
sbb
imul
dec
rcrl
xchg
push
xor
dec
mov
mov
dec
fwait
dec
or
bound
sub
pop
jp
test
daa
jnp
cli
aaa
lds
jnp,pn
xor
shl
mov
pop
repz
sub
mov
or
ret
cwtl
mov
dec
sbb
cmp
cmp
inc
out
jg
xor
and
jnp
pop
xor
clc
outsb
rolb
mov
leave
sbb
loope
outsb
xchg
mov
push
inc
pushf
jno
jmp
cmp
xor
cs
mov
cmc
data16
std
inc
mov
dec
push
xor
repz
sub
sbb
bound
int3
inc
pop
or
cmc
mov
das
int
sbb
sti
add
and
xchg
adc
lods
adc
mov
xchg
pop
pop
jg
pushf
lods
iret
or
rclb
push
scas
sbb
xor
hlt
outsl
jbe
ljmp
mov
cmp
shlb
pop
lods
pop
out
mov
or
jg
stos
jnp
inc
pop
lods
clc
mov
jnp
mov
inc
sbb
xchg
push
push
cmpsb
loop
mov
xchg
jne
outsl
or
loope
jns
jl
bound
dec
ljmp
mov
shlb
jge
xor
sahf
cmp
ljmp
loope
jge
mov
imul
pop
int
mov
stos
mov
xchg
sub
xor
xor
daa
xor
xlat
lret
sub
sahf
fldl
aam
sub
push
dec
loope
fistps
sbb
aam
jmp
in
pop
inc
iret
push
shrb
subl
and
lock
test
or
test
into
push
cs
pop
inc
mov
insb
lret
aad
cs
test
push
add
sub
shlb
dec
ret
add
mov
dec
xor
stos
adc
xchg
les
mov
sub
add
out
into
sub
rdpmc
mov
mov
add
in
cmp
mov
pop
mov
call
push
pop
lahf
js
mov
inc
outsb
loope
pop
mov
or
cltd
mov
adc
adc
outsb
xchg
xchg
jne
enter
pop
jle
mov
sub
cs
sub
adc
fwait
mov
rorl
rcr
mov
push
jae
push
nop
in
dec
push
sbb
mov
dec
pushf
cmp
mov
loop
je
test
push
shll
push
mov
xchg
pusha
repz
xor
xchg
pop
cmp
pop
jle
and
or
div
fisttpll
neg
mov
sahf
imul
jle
aas
pop
jmp
cmpl
pop
movsb
push
dec
adc
hlt
jecxz
mov
fwait
jl
stc
bound
sub
dec
sbb
push
loope
mov
popa
add
leave
xor
je
sbb
cwtl
movsb
mov
push
inc
cli
outsb
addr16
mov
mov
lahf
pop
mov
es
and
daa
push
clc
adcb
jp
xchg
fmull
pop
cli
testl
pusha
sbb
cmpsl
lcall
pop
movb
addr16
mov
or
sbb
in
xlat
shl
cmp
and
loop
stos
xchg
mov
int
ds
jno
mov
int
shll
add
push
fsubrp
xlat
stos
pop
cld
jg
int3
leave
push
loop
out
cltd
add
cmp
cmc
in
lcall
pop
mov
pushf
push
loopne
cltd
imul
adc
jecxz
repnz
xchg
mov
int
xchg
xor
out
pop
xchg
add
jle
dec
inc
cmp
out
push
pop
cld
push
adc
decl
dec
or
mov
outsb
xchg
cmp
mov
pop
push
push
mov
into
mov
jmp
and
sub
call
in
adc
std
idivl
inc
das
add
out
cmp
fmul
cwtl
cmp
cwtl
je
pop
scas
jae
andl
mov
jne
xlat
pop
sbb
in
aaa
lahf
and
std
stc
jb
add
lahf
test
stos
mov
das
cmp
dec
test
fwait
dec
mov
xchg
jnp
or
and
popf
fwait
adc
dec
in
mov
add
mov
in
call
xlat
add
aam
cmp
inc
mov
and
in
inc
js
lods
push
aad
adc
es
ja
int3
lcall
addr16
pavgb
pushf
push
fistpl
leave
scas
mov
dec
and
in
pop
xchg
xor
outsl
lret
add
sahf
pop
inc
ljmp
jg
int
push
mov
add
lods
and
leave
cld
push
pop
movb
movsl
minps
daa
sbb
nop
mov
cmp
aam
sbb
aad
js
push
shrb
dec
fbld
in
adc
xchg
icebp
sar
imul
int3
push
dec
outsb
enter
mov
ja
xchg
outsl
mov
jae
sbb
out
test
movsb
movb
mov
add
dec
js
dec
jg
scas
cmp
jnp
mov
cmpsl
mov
cmp
sarl
inc
mov
mov
insl
addl
jmp
dec
ficompl
enter
in
lahf
int
sbb
fidivrs
jae
popf
mov
loope
test
stos
dec
and
faddl
insb
js
rcrl
scas
ss
jmp
cmp
ss
mov
stos
iret
addr16
mov
inc
movlhps
xor
cltd
add
pop
and
cmp
outsl
or
movsl
add
lods
loop
call
movsl
push
cmp
and
nop
out
mov
mov
push
insb
imul
rcrb
dec
mov
aas
addr16
mov
sti
les
add
insb
adc
sub
out
xchg
sbb
in
sub
inc
or
cmpsb
jbe
fwait
pop
outsl
shll
and
loop
jp
bound
ljmp
xor
xchg
aad
mov
xchg
cwtl
cli
arpl
xchg
loopne
xor
jp
adc
mov
cmp
in
adc
mov
lahf
jge
pushf
dec
shrl
or
nop
mulb
int3
mov
push
mov
popf
xchg
xor
rorl
mov
dec
dec
add
push
mov
aam
movsl
xor
popa
jne
inc
or
imul
push
jae
jns
ja
test
pop
int3
inc
rcll
mov
fs
ds
cmp
inc
pop
out
jecxz
scas
mov
lcall
jne
cmp
dec
js
pop
dec
clc
sbb
pop
sub
stc
pop
negl
xchg
ljmp
mov
sbb
or
xchg
filds
pop
pusha
das
in
nop
jbe
pop
dec
outsb
pop
mov
repz
aas
fldcw
scas
bound
dec
inc
mov
in
cld
int
or
or
mov
scas
mov
cwtl
lret
mov
jo
or
call
pusha
mov
dec
pop
pop
dec
mov
fbstp
or
sub
add
dec
scas
sbb
and
cmpsl
pop
ret
or
jmp
xorl
jl
std
adc
icebp
dec
sbb
inc
mov
notb
mov
js
pusha
jne
dec
pop
xchg
aaa
ror
add
rclb
jnp
xor
adc
or
scas
fidivl
nop
jnp
pusha
inc
mov
add
pop
push
ljmp
adc
pop
jge
xchg
lret
and
and
sahf
push
lods
cmpl
loopne
icebp
jp
sbb
cmp
mov
adc
mov
sub
inc
jmp
sbb
lret
xchg
fwait
jae
xor
fwait
cld
in
push
inc
addr16
push
mov
and
adc
mov
mov
sub
xor
mov
sarb
data16
addr16
cmp
and
scas
and
out
mov
pop
xchg
mov
xchg
xlat
inc
inc
scas
jae
pusha
lds
das
gs
fsubl
dec
inc
or
mov
jmp
scas
sub
mov
movsb
ja
jno
decb
inc
sbb
push
test
dec
add
fisubrs
and
fcoml
aaa
data16
xor
call
loopne
push
aaa
mov
pop
lock
lods
or
scas
add
xchg
pminsw
cmp
ss
rorb
cld
sti
adc
or
jb
or
pusha
inc
dec
jge
cld
add
les
xchg
cld
push
inc
sbb
hlt
repz
cmp
loop
xchg
adc
adc
test
or
push
push
int
sub
xchg
xchg
ret
mov
lcall
scas
cltd
out
xchg
lds
lret
adc
xor
xchg
mov
fsubl
xchg
pop
je
add
rolb
jle
rclb
loopne
and
pop
or
jl
sub
dec
fdivrl
or
dec
jmp
ret
es
dec
xor
gs
nop
jmp
mov
dec
inc
or
dec
jp
xor
cmc
push
mov
lods
cmpsl
adc
sbb
push
iret
mov
scas
fistps
and
test
and
cmpsl
jae
and
push
xchg
push
inc
jbe
pop
push
xchg
xor
hlt
cli
jge
lcall
iret
lcall
repnz
xor
lods
cmpb
je
jb
xorl
and
rsqrtps
adc
inc
or
cltd
test
mov
inc
adc
xchg
inc
sbb
outsl
in
lods
out
jge
jae
cs
repz
movsl
or
fdiv
movsb
test
push
or
xchg
pop
adc
xchg
pop
and
cmp
jle
xor
push
test
xchg
sub
icebp
mov
lds
mov
mov
mov
adcl
int
dec
ljmp
sbb
fiaddl
addr16
push
mov
aad
xor
hlt
inc
lock
adc
dec
xlat
dec
in
xchg
fs
xor
ja
stos
add
adc
jg
jle
or
xor
sbb
push
mov
in
mov
pop
jge
jg
sbbl
adc
mov
test
xchg
dec
xor
lfs
shr
xchg
popa
push
cmp
cmpsl
mov
insb
sbb
mov
jno
push
xchg
sbb
inc
popfw
int3
enter
xlat
jecxz
xchg
xchg
add
cmp
roll
ljmp
popf
sbb
lret
pop
sub
addb
in
out
mov
rorb
push
adc
sub
jecxz
cmp
out
and
dec
jge
sbb
sbb
add
in
ds
push
fcomi
ja
push
lret
leave
and
push
xor
pop
in
enter
stc
data16
enter
lcall
imul
xor
out
roll
ret
pushf
sub
es
and
jbe
mov
dec
add
data16
dec
rolb
int
jl
stc
mov
lret
and
add
inc
pushl
adc
xchg
mov
dec
xchg
xor
mov
stc
xor
sbb
out
xchg
flds
inc
sbb
xor
in
adc
xchg
pushf
push
loope
mov
std
pop
inc
dec
sbbb
imul
dec
sti
in
jecxz
rcrb
movsb
jle,pn
push
dec
xor
pushf
cmp
mov
xor
dec
insb
push
test
push
dec
and
sahf
lods
cmp
sahf
aaa
fisttpll
and
mov
cmpb
arpl
orl
data16
out
aam
out
int
out
mov
mov
ljmp
lds
inc
pop
and
or
mov
lods
jb
lds
popa
pop
mov
cmp
sub
push
mov
add
push
lea
or
pop
add
clc
movsl
or
mov
mov
bound
call
mov
pop
test
aad
in
pop
xor
mov
jns
jmp
adc
test
or
flds
jno
xchg
fstl
push
adc
or
mov
mov
mov
mov
gs
mov
shlb
sar
mov
cltd
dec
mov
imul
inc
and
mov
jae
xlat
pop
push
mov
xor
inc
or
jp
mov
mov
sub
mov
sbb
insl
in
cmc
sub
nop
push
pop
iret
push
jae
add
and
mov
movb
imul
shll
mov
push
inc
push
nop
mov
movsl
test
dec
iret
ret
fdivrl
add
mov
jbe
xchg
out
rclb
test
rolb
in
inc
cmp
lfs
cmp
stos
into
leave
sub
lods
lea
xchg
pop
cmp
stos
ss
lds
fsubs
sub
sbb
pop
and
in
fisttpl
push
adc
aam
push
xorl
xor
jo
sbb
pop
pop
mov
adc
sub
lds
pusha
jecxz
mov
adc
scas
cld
mov
icebp
mov
adc
lahf
fistpll
mov
mov
ja
cld
xor
cmp
fs
jecxz
jp
outsb
xor
ret
test
aaa
cmp
cmp
push
jne
or
insb
dec
arpl
je
aas
cmp
mov
dec
mov
movsl
mov
repnz
and
negl
push
xor
bt
pop
xchg
sub
cltd
adc
sbb
and
xor
lock
icebp
cmp
rorb
out
sbb
push
push
shlb
mov
popa
fwait
cld
mov
mov
dec
test
in
out
repz
je
mov
dec
ja
enter
pop
rcrl
sub
pop
cmpsb
int
or
ret
sub
add
shrb
mull
aas
add
xor
add
daa
dec
sub
cwtl
push
mov
adc
dec
xor
sbbl
popa
pop
data16
movsl
mov
jns
xchg
jnp
call
push
push
or
xor
mov
out
pushl
fcomp
pop
sbb
add
push
dec
sbb
xchg
mov
cmpsb
test
inc
push
rorb
addl
loopne
mov
rcrb
fnstsw
popa
pop
or
pop
inc
mov
mov
out
xchg
cs
test
inc
or
negl
sbb
and
aad
and
rorb
dec
mulps
aaa
popa
xchg
adc
pusha
jne
and
out
bnd
mov
out
push
hlt
sub
sbb
sub
xchg
jg
iret
cmp
rclb
sarb
sbb
inc
push
xchg
xor
sarb
inc
std
test
out
dec
adc
lods
shll
adc
pop
adc
pop
inc
and
pop
outsl
scas
push
vshufps
mov
inc
xchg
xchg
pop
jno
negl
and
ja
sub
and
mov
sbb
lahf
scas
mov
mov
adc
sbb
aas
inc
lahf
arpl
or
pop
cmp
je
xor
mov
xchg
jmp
lea
aas
sbb
mov
lcall
js
jae
adc
clc
sub
xor
xchg
aam
and
sub
jns
cld
lret
mov
inc
ds
cwtl
fidivrl
pop
cmpsb
jbe
xchg
outsb
mov
or
sbb
movhps
add
movsb
std
jns
hlt
stos
lret
mov
out
push
inc
add
push
push
jmp
loope
int
mov
xor
adc
or
push
aam
adc
jp,pt
jbe
int
xchg
outsb
inc
add
cli
xlat
data16
fbstp
inc
pop
mov
shrl
sahf
xchg
bound
cmp
sub
xor
mov
jb
in
movsl
nop
mov
jl
inc
and
pop
or
vmaxpd
mov
je
out
imul
stos
sub
xor
dec
add
dec
mov
mov
mov
fwait
shlb
fdivl
loopne
jo
add
add
inc
inc
data16
sti
outsb
sbb
push
call
pop
sbb
les
and
xchg
push
lahf
cmp
into
sqrtps
bound
loope
xchg
pop
lods
cmp
jbe
xchg
sbb
dec
dec
cld
add
js
imul
loopne
dec
insb
shll
hlt
subb
push
fcmovnb
test
push
push
cld
inc
mov
enter
and
dec
mov
repz
or
dec
fcoml
enter
fistps
cmp
cld
cld
hlt
das
mov
icebp
xlat
adc
cmp
sub
cltd
push
outsb
pop
rorb
xor
lcall
js
outsl
push
sub
cltd
jge
mov
sti
insb
into
cmpsb
dec
insl
pop
insl
mov
adc
adc
cmp
sarl
sub
stos
push
loope
mov
testb
inc
xor
and
imull
cltd
lahf
fwait
inc
xchg
sub
and
mov
imul
xor
jecxz
sub
aas
add
mov
loop
jb
sub
mov
jb
test
enter
xor
and
in
or
xchg
adc
aaa
out
or
pop
cmc
or
movsb
lock
lods
sbb
push
popa
outsl
xor
and
and
lds
popf
xlat
ret
lahf
out
cmpsb
pop
popa
sub
or
mov
enter
daa
stos
lods
and
fwait
xchg
mov
pop
pop
fwait
dec
sbb
mov
mov
loopne
pop
int3
stos
out
fistl
mov
dec
xchg
in
stc
jmp
jecxz
cs
insl
sub
and
fadds
ja
sbb
cwtl
cld
pop
pop
nop
ss
cltd
stos
test
inc
or
xor
into
shl
mov
outsl
and
mov
push
hlt
sbb
out
xchg
push
jne
nop
pop
xchg
ljmp
cmp
push
sub
dec
adc
jns
or
mov
jmp
lret
cltd
xchg
mov
adc
insb
mov
xchg
fs
xchg
rorb
sub
jbe
js
pop
xchg
cmp
and
jg
cmpsl
enter
cmpsb
xchg
and
xor
mov
inc
call
add
xor
jmp
ror
push
lock
clc
mov
mov
mov
sub
mov
xchg
lahf
aam
sahf
not
mov
es
jbe
pop
repz
add
imulb
idivl
dec
imul
rdtsc
test
lret
pop
xchg
mov
test
push
test
mov
cmp
sbb
add
push
or
mov
sbb
sbb
adc
int
jmp
pop
movsl
imul
cmp
lcall
das
jbe
rcr
inc
popf
jne
cmp
and
xchg
call
punpckhwd
mov
in
add
rcrb
mov
xor
nop
xor
push
jb
push
lahf
inc
repnz
jb
push
dec
fimull
es
jmp
icebp
dec
xchg
pop
loopne
xlat
test
push
inc
cmpsb
imul
jae
xor
popa
jnp
jo
pop
dec
cmc
add
leave
bound
lret
mov
or
or
loopne
mov
xor
bound
xor
pop
ficompl
fisubrl
mov
mov
adcl
test
sub
iret
jno
gs
pop
jae
cltd
push
shrb
pop
xchg
nop
rcl
xchg
int
inc
mov
mov
jbe
xor
cld
push
aam
add
test
outsl
repz
lahf
test
mov
and
insb
and
or
cwtl
xchg
sbb
jo
lahf
scas
pop
sbbb
popa
lds
fsubs
lret
hlt
sahf
out
inc
movq
pop
jo
rcrb
divb
stos
xchg
adc
push
cmp
mov
cwtl
or
outsl
xorl
xchg
fisttpll
bound
mov
cmp
mov
cmc
dec
loop
cmp
loopne
lock
das
and
test
rclb
sub
out
movsb
lret
xchg
jge
adc
pop
loop
pop
cmpsl
push
movsl
pop
rorl
lods
je
mov
cli
adc
lods
or
mov
pop
hlt
push
mov
push
test
cwtl
mov
fldcw
insl
pushf
pop
lcall
jmp
add
sbb
dec
pop
jg
push
jbe
add
inc
mov
imul
mov
js
data16
daa
add
into
push
addr16
jecxz
dec
stc
push
xor
push
pop
out
mov
mov
jmp
stos
in
dec
and
dec
xor
ss
pop
push
xor
and
iret
enter
sbb
in
mov
nop
scas
push
shlb
rol
dec
mov
hlt
int3
rorl
push
jbe
xchg
xchg
dec
cltd
call
or
inc
insl
pop
dec
xchg
lea
dec
or
fcmovbe
sub
adc
push
dec
fildll
xor
cmp
inc
out
xor
push
aad
fadd
frstor
pop
xchg
in
xchg
lds
push
mov
es
xchg
lahf
push
xchg
incl
pop
fnsave
negb
in
aam
es
mov
ret
push
xchg
mov
lds
jne
inc
in
movl
repnz
lret
add
mov
lea
add
cmp
jb
out
cmp
xchg
out
outsl
das
call
or
jecxz
add
xchg
daa
cmc
fcom
inc
pop
sbb
mov
into
shll
adc
push
stos
rcr
xchg
pop
mov
xchg
dec
lea
mov
sbb
inc
mov
mov
and
adc
mov
lcall
mov
mov
sar
push
std
mov
sub
mov
mov
mov
sub
mov
push
call
cltd
and
leave
push
mov
mov
jge
imul
in
mov
or
mov
inc
mov
ljmp
ljmp
add
or
lahf
in
adc
sti
ja
stos
shrb
and
js
and
out
pop
mov
mov
in
mov
imul
ds
and
rcll
xchg
aam
cmp
jl
xor
push
clc
mov
fucomi
lock
lea
into
fdivr
jne
or
stos
jge
or
cld
into
ror
aaa
shll
dec
fs
je
push
bound
cmp
mov
and
arpl
fcomip
jge
and
sbb
out
mov
cmp
mov
jo
in
xor
mov
mov
mov
popf
mov
jmp
and
jns
push
outsl
mov
lret
es
pop
mov
sahf
int3
sbb
dec
or
rcll
test
lret
adc
jns
addr16
xor
sub
subb
jbe
mov
xchg
fcoms
pop
and
imul
xchg
es
dec
and
mov
jecxz
adc
mov
cmc
jbe
pop
andl
ret
cmpsl
sbb
ja
jbe
orb
and
aas
xlat
cltd
pushf
rcrb
mov
mov
jecxz
dec
mov
inc
sbb
jb
add
pop
out
stos
cs
sub
jp
das
in
sbb
xchg
cs
int
inc
insb
aaa
sub
cmp
add
mov
mov
ss
jmp
dec
enter
add
daa
mov
lock
sbb
pop
cmc
xchg
push
mov
sti
ja
mov
mov
ret
xchg
test
out
sub
pushf
rcr
dec
jae
adc
xchg
out
dec
stc
cli
and
stc
xchg
bound
bound
adc
shll
mov
inc
add
sarb
rorb
in
arpl
adc
pop
xchg
ficomps
cmp
xchg
and
pop
iret
pop
mov
outsl
inc
add
pop
dec
and
dec
out
jle
dec
and
push
jmp
ret
sbb
outsl
aas
inc
cld
loopne
fldcw
in
ds
shll
dec
mov
push
mov
adc
aam
and
ss
decb
jmp
dec
sbb
lcall
inc
out
adc
pop
testl
outsb
addr16
mov
mov
dec
lcall
and
iret
mov
jbe
add
jnp
or
insb
loopne
jmp
and
ficoml
pop
pop
repnz
mov
or
shrb
mov
call
iret
fwait
inc
ret
pop
mov
int
cmp
sbb
push
test
fucomip
xor
push
inc
lret
push
pusha
sbb
push
mov
or
addr16
lcall
fidivrs
push
jae
inc
or
xchg
mov
inc
inc
cld
repnz
jecxz
leave
xor
xor
inc
into
mov
stos
popf
gs
push
push
movl
loop
cmpsl
mov
mov
inc
mov
popf
or
in
push
aaa
clc
and
imul
clc
mov
push
fildll
daa
pop
lds
out
stc
pop
or
cmpsb
dec
push
out
shl
adc
adc
loopne
aaa
repnz
cli
cmc
lods
insb
pop
jne
lods
adc
stc
notb
sub
clc
xchg
dec
les
mov
jb
adc
push
mov
addr16
lret
and
popf
cltd
incl
pusha
sbb
rcll
div
push
cmpsl
mov
cld
mov
arpl
call
cmp
je
int
push
cmp
notl
add
inc
and
aad
icebp
and
sub
or
xor
inc
cmpsb
or
and
insb
sbb
fwait
repnz
fists
add
cwtl
subl
jl
gs
mov
cmp
out
ljmp
inc
les
jl
mov
sbb
in
aad
cli
lcall
lea
int
jns
test
imull
pop
out
pop
cs
jmp
and
and
cmpsb
cmp
add
in
rcll
fcomps
ss
push
xchg
int
call
pop
push
push
in
fstps
mov
data16
xor
jnp
xor
mov
mov
jbe
push
in
cmpsb
adc
scas
xlat
or
push
jns
je
loopne
jp
jp
lods
jmp
sbb
mov
sbb
ja
dec
add
mov
call
fiaddl
dec
jns
mov
add
ljmp
add
ret
inc
sahf
js
lods
fsubr
inc
add
ja
xlat
pop
fisubrl
cli
movsb
mov
dec
movsb
enter
scas
mov
mov
push
sbb
scas
iret
jns
lret
shlb
pop
dec
out
andl
xor
stos
or
pop
pop
iret
mov
jnp
xchg
test
stc
or
inc
inc
jbe
and
sub
lahf
push
subl
cmp
scas
ret
xor
cltd
sbb
mov
adc
jecxz
cs
sbbb
daa
mov
scas
inc
or
bound
clc
testl
lret
jge
mov
fs
mov
pop
repnz
mov
xchg
sbb
inc
sbb
jg
clc
cmp
shll
mov
out
imul
icebp
xchg
cmc
jae
inc
fwait
pop
xor
xorl
or
jmp
out
or
add
popf
mov
test
mov
fwait
lods
icebp
pop
pop
jmp
dec
mov
stos
stos
and
repz
add
pop
xchg
stos
clc
vhsubps
aas
pushf
mov
imul
mov
cmp
andl
fdivrl
andl
std
imul
test
sub
push
or
mov
pop
addr16
push
ljmp
pop
testl
xchg
mov
cmpsb
dec
rcll
test
mov
adc
imul
mov
jb
or
jne
pop
xchg
mov
iret
inc
or
mov
fldl
pop
mov
movsl
pusha
into
mov
and
data16
pop
and
cltd
jb
and
andb
sbb
lods
sub
sbb
das
sub
or
call
insb
inc
scas
push
cli
sbb
sarl
sub
pop
xlat
add
and
lret
das
xchg
loopne
sarb
mov
cmpsl
and
push
and
test
popa
out
mov
xchg
pushf
lods
adc
lcall
xchg
add
push
dec
pushf
shrl
pop
and
jae
jnp
mov
std
adc
jnp
xor
shlb
fdiv
dec
clc
jae
sub
arpl
sti
popa
ja
ret
cmp
in
int
cmp
push
xchg
push
and
loopne
and
clc
xchg
jle
stos
fisttpll
ret
in
ds
xchg
adc
mov
xchg
into
xchg
pop
fwait
iret
insl
dec
mov
movsl
aaa
add
sbb
push
iret
fimull
push
add
aas
xor
sub
rcrl
or
mov
aas
lahf
lahf
push
clc
outsb
lods
pop
repz
fcomp
pop
imul
jl
lea
pusha
push
mull
cmp
imul
int
das
cmp
jg
fmull
je
push
jecxz
mov
int
mov
in
cmp
in
shrb
loopne
inc
xor
es
push
add
dec
sub
add
aas
add
push
imul
fwait
xchg
stos
or
out
jecxz
and
jnp
mov
pop
cwtl
pop
xor
cmp
mov
adc
mov
xor
movsb
aas
pop
pop
repnz
mov
and
inc
adc
sub
rcrl
sbb
stc
adc
cmpsb
jno
pop
jmp
js
sti
rolb
rcrl
pop
pop
pop
ret
int
std
scas
lds
call
push
movsb
sbb
daa
adc
ds
inc
pop
out
jge
insl
fnstsw
xchg
test
test
sbb
adc
mov
mov
incb
and
aas
sti
in
mov
xchg
popa
lods
jmp
push
dec
dec
jno
mov
ja
dec
and
mov
inc
dec
add
mov
movsb
push
loop
fyl2xp1
push
in
iret
adc
xchg
sbb
cli
and
test
dec
mov
inc
push
xchg
xchg
arpl
cmp
fadds
jl
push
jge
inc
cltd
or
fnstcw
jb
add
mov
jmp
mov
ljmp
adc
sub
sbb
or
xlat
push
mov
js
gs
sub
jne
ja
xchg
push
sbb
push
jge
xchg
aam
int3
lahf
ret
cmp
lea
aaa
mov
xchg
bound
stos
hlt
lods
addr16
or
aaa
lea
jl
mov
repz
jbe
or
mov
dec
sti
cmpl
mov
negb
jmp
outsb
pop
fwait
mov
adc
dec
xchg
leave
xchg
xchg
cs
pushf
in
pop
mov
mov
into
pop
loop
lods
cmp
rolb
fcomps
fsubrl
sahf
xchg
dec
adc
pop
movsl
or
xor
pop
testl
mov
test
jmp
sbb
or
adc
ja
and
dec
jl
jle
scas
jae
dec
pusha
cmp
mov
and
out
sub
mov
or
lods
arpl
repz
dec
ja
adc
test
push
add
outsl
jp
ds
push
sub
movsb
add
scas
dec
mov
pop
jns
cmp
popf
bound
inc
add
inc
outsl
pop
inc
sbb
scas
je
jecxz
push
add
and
cltd
daa
lea
ret
bound
jle
xchg
pop
out
sbb
mov
test
inc
pop
xor
push
aam
mov
loop
cmp
movsl
adc
dec
xor
shlb
fwait
outsb
adc
adc
and
dec
mov
outsl
mov
loopne
pop
jo
mov
nop
inc
mov
xor
jl
sahf
int3
or
ds
cmp
fucomi
lret
pop
aad
mov
imul
cmpsb
scas
neg
repnz
cmp
in
xor
xorl
push
rcl
jb
pop
jnp
jg
mov
mov
xor
imul
xchg
pop
inc
jne
repz
jnp
lahf
or
psubq
push
dec
daa
in
cld
dec
insb
xchg
xor
xor
ret
dec
sahf
xor
mov
lods
test
mov
sub
mov
lcall
or
cmpsb
mov
jle
mov
data16
xchg
cmp
inc
cmpsb
push
sbb
push
mov
jbe
stos
xlat
cmp
or
testb
cmpl
mov
movsl
fdivs
pop
xor
sarb
inc
leave
sbb
mov
ret
dec
lods
int3
push
jg
xchg
jae
test
mov
fdivs
add
push
movsl
pop
lret
aas
das
ja
push
xorl
shlb
fnstsw
or
dec
cltd
es
in
sbb
xchg
loope
lock
jle
es
cltd
ja
aad
fmuls
push
outsl
cmp
data16
loop
adc
movsl
rcll
pop
pusha
ljmp
pop
idivb
dec
movsb
loope
xor
pop
add
ja
mov
push
arpl
sahf
lcall
or
dec
mov
add
insl
mov
push
sub
scas
fs
rcrl
sarb
testb
xchg
add
insb
inc
pop
ret
pop
mov
inc
mov
pop
popf
out
or
inc
in
mov
mov
insl
popa
dec
enter
jno
sbbl
jae
xor
fisubs
in
ffreep
je
in
xor
xor
cmpsb
jb
sub
jecxz
ds
jge
cmp
movsb
mov
int3
cmp
loopne
mov
je
sub
sar
mov
dec
cwtl
aas
sbb
push
aad
push
loop
sbb
push
fcom
xchg
mov
xor
push
daa
int3
mov
inc
int3
or
adc
sarl
xor
imul
pop
vmovhpd
cmp
mov
pop
ja
and
push
jnp
inc
lahf
jbe
popa
repz
push
aaa
add
cmpsb
lods
mov
fstpl
jae
shlb
adc
jg
addb
and
adcl
adc
or
andb
rcll
je
hlt
cmp
pop
dec
imul
mov
jmp
ja
sub
sbb
std
popf
sbbb
add
repnz
push
or
js
hlt
repz
pop
or
outsb
cmp
cmp
loopne
jge
dec
or
cmp
js
inc
mov
sahf
xchg
cmp
ja
inc
cmp
ljmp
sub
dec
ljmp
mov
jp
test
mov
and
dec
push
and
or
mov
fisttpll
movsb
mov
jns
addr16
inc
int
pop
mov
inc
jnp
imul
or
dec
and
mov
jge
mov
push
dec
cmpsb
mov
cs
hlt
ror
lods
jp
sub
push
inc
shll
arpl
out
mov
jno
inc
rcr
mov
sar
stos
pop
mov
xor
mov
rcr
mov
aaa
jb
pusha
insb
push
mov
xchg
in
mov
sbb
hlt
cmp
jmp
es
pop
cmp
out
sbb
rcll
cmpl
not
inc
mov
xchg
dec
lret
mov
cmp
mov
sti
int
xchg
cmpsl
data16
xor
xor
jne
fidivs
pop
mov
mov
push
lret
aas
inc
xor
sti
shrb
jmp
in
cmp
mov
jecxz
lods
cmp
push
sub
das
shlb
enter
sahf
int3
dec
stos
or
ss
imul
dec
in
es
cmp
cmp
outsl
mov
clc
xor
lock
mov
fnstcw
mov
stc
cli
les
sub
xor
mov
mov
fs
pop
dec
sub
sub
inc
sub
cmp
bound
jae
mov
fst
xor
js
into
xor
cld
iret
jns
add
mov
dec
pop
mov
jo
push
push
cmp
dec
movsb
jl
js
push
add
fildl
sbb
ja
cmc
mov
sbb
and
cmp
pminub
jo
xor
push
mov
xchg
pop
adc
sti
out
pop
into
inc
roll
aam
xor
jo
and
movsl
es
mov
sbb
dec
test
sbb
inc
adc
fs
jmp
xor
or
cld
xchg
bnd
aas
inc
mov
out
fsubs
int
inc
mov
outsb
dec
mov
dec
dec
iret
cwtl
pop
iret
add
mov
mov
inc
lods
mov
push
std
mov
push
out
sub
xor
jbe
jae
out
jne
cwtl
je
int3
jns
stc
adc
movsb
ret
mov
jne
clc
mov
mov
adc
lret
clc
push
fnsave
or
fdivs
aaa
push
or
loopne
mov
jmp
and
stos
jmp
push
or
inc
out
icebp
cmp
cs
and
nop
jmp
mov
xchg
xor
jno
pop
into
lods
popa
loop
jne
mov
sub
ljmp
test
push
push
mov
lock
sbb
mov
push
push
dec
pop
cmc
cltd
scas
push
popa
pusha
pop
cmp
mov
xchg
fldenv
rcl
push
mov
jecxz
mov
aam
sub
dec
sub
aaa
mov
jbe
mov
aam
or
movsl
nop
or
sub
cmpsl
lods
dec
adc
jg
fiadds
cld
stos
xchg
pop
push
dec
rol
mov
mov
pop
push
les
add
repz
imul
lahf
gs
gs
jle
xor
mov
xlat
pop
adc
repnz
adc
push
lret
mov
mov
pop
push
enter
and
or
sti
test
js
out
test
inc
aad
sbb
aam
in
fistl
fadd
lahf
dec
outsb
test
imul
scas
pusha
push
cltd
insb
cltd
mov
aaa
adc
fists
adc
ret
lea
mov
in
push
xchg
and
loope
cmpsb
fwait
shlb
out
lret
mov
inc
push
xchg
pop
js
rorb
stos
hlt
or
jb
cmp
pusha
addr16
adc
inc
scas
cmpsb
mov
mov
loopew
or
xlat
icebp
jp
mov
hlt
add
adc
movsl
pop
sub
push
mov
mov
pop
or
hlt
repz
out
and
sahf
jecxz
xchg
and
jle
xor
and
jo
xchg
dec
outsl
or
je
pushf
lahf
pop
push
in
mov
mov
cmc
int3
mov
lds
jo
mov
shlb
je
movsb
idivl
xor
in
popa
jnp
stc
test
sahf
xlat
ljmp
iret
mov
mov
fsubs
mov
fsubrl
inc
mov
mov
cmp
dec
mov
loope
mov
mov
cli
xchg
popa
mov
mov
or
ret
int3
mov
cmp
mov
jmp
sbb
adc
int
dec
mov
into
jnp
les
int3
enter
mov
hlt
sbb
mov
mov
jbe
and
dec
popf
mov
sbb
out
adc
loope
js
add
sub
and
pop
sbbb
lret
cwtl
fsub
mov
dec
or
mov
das
push
lock
sahf
cmpb
loop
sub
int
push
sub
jp
dec
jle
pop
or
cmpsb
inc
cmpsb
sub
movsb
lods
stos
test
aaa
out
subl
cmp
dec
fwait
xchg
insl
das
cmpsl
mov
xchg
add
jo
inc
jmp
loopne
test
out
shrd
pushf
in
xchg
mov
inc
repnz
pop
mov
mov
addl
cmpsb
ret
filds
jne
push
sbb
aas
lods
int3
xchg
pop
movsb
add
mov
rcrl
or
dec
ja
xor
mov
inc
repz
mov
sbb
push
mov
mov
push
xor
mov
daa
cmp
lcall
jb
aam
sbb
mov
mov
pop
sub
inc
mov
in
test
xor
adc
cvtpi2ps
add
fistpll
fstps
dec
loop
push
outsb
lret
outsb
subb
mov
rol
je
or
into
faddl
push
mov
in
jecxz
into
push
out
repnz
ret
or
cmp
jo
test
mov
dec
dec
pop
fadds
mov
aad
pop
cmc
pusha
dec
or
jp
push
clc
mov
mov
movsl
lahf
stos
adc
sub
hlt
repz
xchg
push
xor
mov
xchg
pop
mov
fldcw
popa
or
xor
loope
imul
sub
pop
pop
cld
test
pop
jp
dec
icebp
pop
imul
in
jp
adc
sbb
mov
add
and
in
popf
cmpsb
push
hlt
icebp
jle
xchg
xor
nop
dec
adc
repnz
mov
jae
insb
jmp
cmp
shrb
push
add
mov
cltd
mov
jl
push
sub
test
jns
frstor
insb
adc
movsl
push
mov
pop
adc
dec
add
ss
sub
ret
insl
idivl
outsl
add
push
les
aam
mov
in
mov
pop
and
and
mov
insl
push
andb
or
dec
adc
and
mov
jmp
test
adc
push
xchg
sahf
mov
test
outsl
shrl
xorb
adc
mov
gs
call
cli
adc
hlt
mov
pop
int3
sahf
jmp
push
mov
jnp
pop
inc
jbe
or
push
push
mov
push
sbb
cmp
add
fs
pop
push
xor
gs
jecxz
in
scas
mov
cmp
inc
dec
jae
pmulhw
cmp
mov
lahf
sbb
xor
dec
inc
push
xchg
in
and
gs
ss
push
outsb
xlat
add
push
jbe
fiadds
push
sub
pop
sbb
lcall
call
in
pushf
and
push
out
and
test
shl
jp
xchg
incl
lods
or
mov
mov
loopne
mov
ljmp
push
mov
pop
sub
mov
and
or
xor
enter
dec
mov
inc
cmpsl
mov
mov
int
fmuls
or
daa
mul
je
mov
dec
icebp
fisttpll
lcall
push
sub
mov
imul
je
aad
std
rol
arpl
sbb
xor
addr16
stc
orl
jb
mov
out
sub
mov
jmp
sbb
test
lret
xor
test
xchg
ds
push
inc
adc
iret
cwtl
fisubrs
js
jb
mov
into
adc
jns
xchg
and
push
jmp
dec
not
rorb
jns
mov
push
jnp
jne
mov
insl
out
fnstcw
dec
repnz
leave
in
jno
popa
in
cltd
sahf
xor
loope
pushf
pop
cmp
add
mov
cmpsl
push
mov
mov
lcall
popa
frstor
mov
lcall
in
shll
repnz
int
das
mov
test
mov
imul
out
pop
push
xchg
xchg
es
inc
jne
mov
fwait
push
mov
xor
mov
lds
es
lock
jns
sub
or
dec
enter
imul
cld
sbb
xor
dec
adc
lcall
sbb
popa
xor
lods
daa
mov
mov
mov
mov
sarb
pop
out
jns
test
ss
pop
lret
fstl
shrb
test
in
jne
xor
add
mov
xchg
jl
jb
xlat
cld
test
sbb
pop
adc
mov
xor
or
lahf
xchg
sbb
into
aam
and
ja
lahf
dec
adcb
dec
enter
dec
roll
dec
call
inc
sub
sbb
sub
inc
xchg
or
cmpsl
lock
aam
aam
or
sub
repz
mov
jg
cmp
sarl
fs
ss
lock
xlat
out
or
mov
jge
and
shl
push
mov
orl
das
sbb
jbe
inc
mov
pop
cs
negb
cmp
sub
sub
adc
or
icebp
pop
sbb
mov
inc
cmpsb
cld
loop
sbb
fwait
lods
stos
int3
shrl
repnz
sub
jns
sub
and
pusha
xor
movsb
ds
ds
mov
cs
out
cmpsl
insb
insl
xor
and
push
test
out
xor
cmpb
cmpsl
icebp
rorl
lret
mov
xchg
xor
xchg
pop
je
inc
in
pop
int
push
xchg
xchg
add
lea
mov
sub
ss
mov
xchg
pop
mov
sbb
sub
es
sub
jp
outsl
or
stos
mov
stos
out
jle
daa
shll
mov
js
mov
aaa
ret
or
mov
xchg
mov
mov
fiadds
sbb
push
or
sub
nop
out
fiadds
push
iret
jnp
test
or
sub
fimuls
ret
lret
mov
out
sahf
shll
or
dec
dec
cmp
cwtl
loop
mov
mov
or
or
dec
xor
inc
mov
mov
and
and
fs
jbe
jle
sbb
das
xchg
mov
xchg
push
push
js
push
fdivrs
pop
scas
mov
mov
push
and
data16
roll
pop
jno
mov
mov
shll
mov
xchg
fistpll
aad
insb
in
or
loopne
call
dec
adc
cli
xchg
jb
jne
aad
lea
es
int3
decl
and
pop
outsb
push
loopew
ror
adc
push
jbe
test
das
cmpsb
sbb
notl
fsubl
sbb
fcoms
data16
xchg
nop
sub
fists
mov
out
cwtl
or
xor
mov
inc
jl
sub
inc
test
test
push
sub
scas
xor
pop
int
pop
int
rcrb
and
cmp
dec
cmpsl
add
dec
pop
test
xchg
out
jecxz,pn
cltd
push
fbld
js
call
push
fldcw
mov
movsl
cwtl
fwait
cmpl
ljmp
ja
and
shlb
icebp
int
xor
cld
enter
fimuls
int
jno
xor
lock
and
mov
roll
mov
es
jns
int
push
aad
insl
stos
movsl
mov
mov
notb
jne
dec
outsl
sub
push
adc
pop
pop
int3
xor
aad
cmpsb
or
push
ret
int
clc
mov
stos
iret
adc
adc
sbb
daa
orb
ds
push
and
and
int3
jb
inc
cmpsb
mov
xsavec
mov
ds
adc
movsl
rolb
les
mov
shlb
rcr
pop
xchg
outsl
hlt
dec
shll
adc
push
mov
repz
push
outsb
xchg
mov
jp
fdivr
cli
pusha
push
xlat
scas
movsb
arpl
scas
adc
mov
hlt
loopne
xor
mov
aas
adc
repnz
jno
xchg
testl
movsb
fsubs
in
sti
movsb
mov
test
push
js
scas
imul
pusha
add
lods
inc
pop
adc
push
jp
sub
adc
xor
mov
sbb
push
sbb
cwtl
xchg
push
cmp
jo
stos
sti
rcr
sti
lea
repnz
shlb
test
jmp
jns
in
xchg
adc
push
iret
push
outsb
cmpsl
sbb
mov
pop
mov
pop
das
mov
mov
or
dec
sub
push
jg
push
inc
push
xchg
push
or
cltd
dec
add
daa
cltd
add
negl
cmp
lcall
es
enter
lret
out
dec
pop
inc
imul
shlb
sub
pop
pop
addr16
nop
adc
mov
inc
or
cmp
sbb
icebp
cmp
outsl
pop
mov
push
ror
sbb
ja
adc
nop
cli
scas
lret
inc
hlt
add
xor
nop
insl
leave
rorl
push
xor
add
dec
jge
mov
int
adc
outsl
imull
lods
push
rcrb
jnp
ftst
sbb
lret
sahf
stc
outsb
in
inc
jne
dec
and
std
xor
pop
mov
mov
pop
push
xchg
pop
mov
ret
add
cmp
push
xor
or
cs
cmpsl
mov
cmp
sbb
mov
daa
mov
cmp
xor
jg,pt
cmp
or
jns
iret
scas
jno
jne
dec
cwtl
sbb
xor
push
arpl
lock
adc
push
jnp
fists
xor
lds
or
inc
pop
jle
mov
flds
xor
dec
leave
orl
sub
sub
jp
cltd
imul
and
mov
fs
lcall
es
push
insl
std
stos
test
dec
in
cmpsl
mov
push
or
inc
imul
add
mov
sbb
pop
mov
es
ret
iret
hlt
jne
sub
lock
add
cmpsl
in
jnp
adc
mov
arpl
pop
and
push
lret
int
adc
mov
pop
fmull
outsb
fmull
rorl
cmpsb
arpl
sub
add
sbb
xlat
mov
in
mov
lea
inc
xchg
push
sbbl
sti
push
xor
mov
mov
inc
daa
pop
add
or
dec
cmp
inc
cmp
inc
scas
mov
icebp
jle
ja
pop
push
test
pusha
add
lcall
adc
cmpl
or
je
add
ja
sti
push
sub
push
bound
repz
iret
pop
mov
mov
and
and
fwait
add
mov
xlat
push
outsb
jae
out
adc
dec
cli
adc
mov
in
sbb
stos
cltd
lret
scas
out
enter
cmp
pop
mov
dec
dec
cmpsl
in
inc
push
pop
and
mov
sti
add
mov
js
xor
sbb
mov
sub
mov
push
cmpsl
inc
insb
gs
lret
cmp
cmp
jnp
add
mov
insb
push
andl
mov
cwtl
sub
jecxz
sbbl
pop
pop
pop
loop
add
jecxz
pop
repz
sti
and
pop
les
mov
xchg
jns
ret
scas
mov
mov
and
inc
clc
add
sub
add
cwtl
adc
pop
jecxz
mov
sub
test
daa
addb
mov
push
mov
dec
push
fstpt
test
insl
out
cmp
jne
sahf
cs
mov
loop
ret
insl
add
jo
out
outsl
ja
mov
mov
out
cmp
inc
dec
in
outsl
pop
sti
jno
cmpsb
adc
fprem1
pop
add
in
lock
sbb
push
pusha
movsl
push
ret
icebp
xlat
push
jmp
pop
cld
push
std
dec
sub
enter
and
mov
or
push
jo
enter
rcrl
hlt
cmpsb
fs
xor
xchg
leave
mov
pop
int
repz
inc
xor
sub
movsb
mov
xor
aam
dec
inc
cmpsl
mov
xlat
outsl
sub
fnstcw
insb
mov
inc
shrb
cmp
ret
call
lock
pop
xchg
mov
xor
mul
push
in
loopne
push
repnz
adc
je
dec
xchg
in
cmp
sbb
dec
fisubrs
push
xor
les
lret
into
test
scas
add
jne
out
sub
das
mov
lods
add
pop
pop
outsl
es
cmp
clc
leave
int
cmp
jmp
ds
dec
xchg
fisttpll
xchg
lods
in
fmuls
loop
sbb
cmp
cmp
dec
ljmp
jmp
mov
rcr
jmp
movsb
outsl
aas
pop
mov
outsb
jle
imul
jmp
push
popf
idivl
xchg
push
jp
loop
sub
int
clc
and
cwtl
xor
int3
ljmp
leave
dec
push
stc
lods
out
mov
aaa
out
mov
jns
or
repz
mov
daa
lea
adc
inc
or
xchg
aam
fildll
mov
in
cmp
pop
dec
mov
push
dec
cmc
movsl
and
and
xor
scas
dec
rorl
adc
fistps
nop
sbb
jl
aad
popf
mov
mov
fcmovnbe
inc
out
sub
in
loopne
scas
sbb
rcrb
adc
sti
inc
and
xchg
cld
jmp
or
in
xor
stos
pop
and
mov
cs
push
icebp
in
pop
cmc
sub
push
sarb
movsl
scas
jg
enter
cmpsb
pop
push
je
into
lcall
addr16
mov
cmp
xor
mov
in
adc
lret
aaa
and
dec
dec
mov
push
loopne
jecxz
mov
jbe
or
fsub
rcl
mov
scas
or
or
mov
sub
stc
mov
xor
aaa
and
jo
adc
sub
fs
out
pop
testb
fists
enter
xor
jbe
pop
call
and
cld
adc
push
lret
mov
sub
mov
test
mov
lds
leave
or
cmpsl
test
shl
pop
push
and
jmp
sbb
or
mov
jecxz
jns
or
dec
cmp
xchg
inc
cmpsl
ret
cmp
je
push
adc
mov
arpl
lret
cmpb
les
mov
and
xor
sub
or
loopnew
test
inc
add
jne
mov
out
in
xor
sub
and
mov
sub
dec
repnz
mov
xor
loop
push
andb
fs
pop
jp
jecxz
leave
stos
out
sub
jle
aaa
call
sbb
mov
roll
mov
test
nop
mov
das
sub
sarl
sbb
inc
jmp
rolb
mov
loopne
rclb
push
call
dec
and
pop
push
in
test
ja
pop
lods
jp
sbb
leave
xor
das
movsb
mov
lcall
test
mov
out
jge
jnp
xchg
insb
into
push
dec
xorb
ret
aad
cmp
clc
nop
hlt
jbe
out
aad
and
inc
mov
into
xchg
jnp
in
mov
mov
rorb
shl
inc
ss
stos
scas
ret
ret
cs
decb
test
add
sub
pop
inc
xchg
inc
xchg
ficomps
int3
mov
lods
pop
push
std
les
ljmp
add
popa
sbb
add
or
mov
pop
imul
mov
aaa
push
and
and
enter
cld
adc
int
imul
xor
les
pop
mov
mov
xchg
push
and
adc
add
pop
mov
sbbl
hlt
pop
mov
mov
cmp
sbb
mov
ds
daa
bound
inc
fisttpl
scas
sti
mov
out
inc
fadds
sbbb
cmp
pop
jns
rolb
cmp
ss
sahf
add
in
push
jge
scas
pop
repnz
pop
in
call
push
cli
data16
mov
test
rolb
test
jbe
and
lea
add
mov
out
and
add
xchg
xchg
lret
mov
orb
push
jl
push
rorb
add
fcmove
into
stos
imul
in
cmp
adc
iret
push
mov
aad
sub
jns,pt
lods
mov
xor
push
jg
test
fptan
jnp
mov
fucomp
mov
and
daa
dec
cmp
insl
notl
rcrb
jg
je
inc
test
subb
shlb
adc
sub
push
aaa
stc
test
clc
cmp
mov
cmp
push
mov
cmp
incb
lock
dec
call
lcall
negb
and
mov
jle
sub
popf
gs
in
into
or
aam
out
aas
test
fmuls
cltd
js
out
sub
arpl
cmpsb
mov
dec
mov
jns
es
lods
mov
repnz
or
adc
rolb
js
jl
test
test
inc
jo
pop
les
repz
repnz
ja
movsb
mov
pop
in
xor
fisttpl
and
shll
add
lods
pop
xchg
das
mov
inc
insb
lock
pop
rcr
dec
sahf
pop
or
xor
adc
hlt
sub
fdivr
jmp
push
mov
mov
jae
or
pop
or
sub
cmp
xchg
mov
rcll
fsubrs
xchg
xor
pop
insw
hlt
cmp
mov
jb
andb
int3
in
mov
dec
inc
mov
sbb
js
xor
push
out
sahf
mov
cmpsb
sbb
out
sub
test
or
dec
and
ror
push
dec
push
repnz
mov
repnz
xchg
mov
xchg
cmp
fnsave
fiaddl
mov
cmp
sbb
movsl
lret
mov
push
out
jmp
nop
xlat
xor
mov
inc
enter
pop
jecxz
mov
loopne
test
inc
sbb
fimuls
pop
mov
aam
inc
out
pushf
or
jo
xlat
lahf
dec
or
out
ffreep
jae
lret
cmc
mov
inc
push
xchg
mov
jecxz
std
aas
popf
xor
xor
enter
adc
shll
mov
fimuls
pusha
mov
mov
jb
out
jl
lods
push
jno
adc
mov
mov
xorl
mov
mul
lea
imul
cmpsb
sahf
cmp
pop
js
push
inc
mov
xor
sub
cmp
daa
xchg
stos
gs
mov
das
xor
xor
jle
ret
push
push
imul
inc
in
icebp
sbbl
push
jecxz
xchg
and
shl
sub
xor
and
pop
mulb
adc
sbb
push
inc
insb
inc
stos
push
aas
cmp
iret
pop
sbb
push
stos
dec
add
sub
pop
push
mov
sbb
aad
call
out
insl
mov
popa
xchg
cmp
imul
stos
xor
stos
add
or
icebp
int
add
hlt
fimull
mov
jge
mov
xor
adc
cmpl
mov
sub
aam
int3
es
or
js
lea
xchg
dec
popa
testl
or
adc
adc
cmpxchg
add
or
push
popa
les
pop
pushf
sti
cltd
xchg
mov
cli
mov
test
pop
mov
fsub
mov
sub
xor
pop
fsubrl
or
iret
loopne
in
mov
push
adc
or
outsb
lahf
jae
rclb
xor
push
sbb
mov
pop
stos
fstps
cmc
ficomps
inc
into
fiaddl
fistps
insb
movsl
popf
iret
push
mov
and
dec
mov
out
adc
subb
ret
push
aas
mov
cltd
xor
push
les
test
fs
mov
inc
sbb
popa
imul
pop
repnz
mov
ss
fdivrl
sbb
pop
sbb
sub
int
ds
jnp
out
pop
sub
aam
adc
lret
int3
cmpsl
xor
add
fcompl
mull
cmp
push
stc
inc
sahf
sysexit
cmp
jmp
cli
cmp
aas
cmp
sahf
mull
scas
hlt
mov
ret
cmpsl
shr
push
xchg
nop
in
ret
mov
lahf
jmp
jp
push
add
fistl
cmp
insb
mov
cmp
mov
and
xorb
mov
mov
decb
xor
and
inc
fildl
jo
sub
jo
lea
inc
pop
call
cmp
sbb
mov
adc
pop
mov
xor
adc
stos
movsl
mov
mov
bound
rcll
rorl
arpl
cmc
cmc
std
add
jl
fisttpl
xlat
mov
mov
repz
ja
es
fsubl
add
orl
and
lcall
call
ja
pusha
sbb
sub
out
int
mov
lahf
xchg
pop
mov
clc
adc
jo
push
into
lea
or
adc
cmovne
enter
inc
cmpl
out
out
mov
in
in
sahf
les
lahf
dec
scas
sahf
push
gs
mov
mov
add
insb
jne
jecxz
xchg
mov
and
cli
jmp
leave
inc
pop
cltd
fs
adc
pushf
pop
xchg
repz
cs
rorl
lock
push
repnz
adcl
popf
xor
repz
inc
out
sbb
das
push
xchg
sub
dec
jo
nop
insb
jno
imull
push
push
add
pop
jno
pop
adc
dec
push
aad
test
lret
cmpsb
xchg
inc
mov
xchg
popa
cmp
xchg
pop
xchg
or
sbb
mov
xchg
arpl
jne
adc
andl
cmp
push
test
and
cli
out
fwait
pop
cld
xchg
ss
cmp
mov
data16
jne
mov
nop
pop
jne
imull
mov
aad
roll
dec
jmp
add
movsb
xchg
adc
and
stos
push
jge
lds
leave
stc
aas
jb
sub
jmp
addl
scas
or
add
xchg
rolb
mov
mov
mov
cmp
pop
sbb
scas
jb
movsl
movb
les
and
jg
pusha
inc
rclb
sub
mov
es
gs
inc
fisttpll
cmp
sti
pusha
orl
cmp
and
les
sbb
movsl
pop
fcmovu
iret
adc
xchg
jae
repz
iret
enter
hlt
lcall
fwait
sbb
sub
mov
inc
push
mov
das
or
jmp
sbb
fnstcw
ret
add
test
dec
stc
leave
xchg
test
and
xchg
cltd
lret
xor
mov
xchg
mov
xchg
and
dec
or
fnstsw
gs
sbb
inc
andl
inc
cmp
out
mov
repz
sub
and
xchg
push
mov
stos
repnz
stos
repnz
push
mov
inc
sahf
inc
sub
enter
pop
lahf
fsincos
mov
mov
bnd
in
pusha
ja
mov
in
ret
or
rolb
xchg
mov
sbb
lret
sbb
inc
subl
fninit
pop
sbb
int
mov
jbe
mov
mov
sub
xchg
bound
or
sbb
sbb
dec
sub
inc
ret
mov
das
idivl
jmp
mov
mov
leave
scas
addl
inc
add
insb
mov
fisubs
repnz
mov
mov
mov
test
aas
sub
test
negl
push
loop
jmp
cli
and
sbb
cmp
fisubrl
mov
mov
fsubl
mov
and
dec
cmp
dec
rcll
pop
pushf
ds
rcl
add
js
js
mov
mov
sbb
and
dec
mov
mov
xchg
pop
jl
icebp
dec
push
cmc
stos
mov
push
xchg
xor
xchg
fwait
sahf
inc
jmp
sub
mov
std
lock
leave
xor
int
jae
push
sub
jne
pushf
cmpsl
adc
inc
lcall
in
fwait
dec
adc
out
bound
or
jb
push
ljmp
mov
push
mov
cld
adc
aaa
bound
xlat
inc
mov
or
scas
test
pop
fcmovnbe
sahf
sahf
repz
sub
das
mov
scas
loope
stos
sarl
mov
gs
repz
dec
leave
imul
mov
xchg
sar
dec
cli
or
test
inc
call
hlt
fistl
push
loop
hlt
in
or
hlt
xchg
mov
iret
sub
outsb
jg
jns
cmp
xchg
movsb
cmp
xchg
push
pop
je
pop
fstpt
jne
xchg
mov
inc
jecxz
mov
dec
and
mov
arpl
add
lcall
scas
xor
cmpsb
or
clc
pop
cmp
cmc
cwtl
andl
int
sbb
mov
shlb
test
inc
sbb
inc
jno
xchg
test
loop
sub
mov
push
insl
pushf
fistpl
pmaddwd
sti
mov
cmp
or
xchg
lock
xchg
jl
loope
aaa
shl
mov
fmuls
push
mov
sbb
imul
data16
dec
jmp
sub
push
sbb
dec
or
sbb
lcall
jns
das
push
jae
mov
add
adc
inc
loop
mov
les
inc
and
xor
lods
pop
outsl
les
cmp
cmp
aad
mov
jp
shrb
stos
jnp
js
xor
xor
das
push
sbb
jl
adc
int
sarl
std
jne
out
cwtl
js
outsl
shll
icebp
test
inc
fdivrl
negl
lahf
in
imul
pop
repnz
cmp
xor
ds
mov
data16
fcomi
movl
pop
sarb
loop
cmp
enter
inc
fwait
jge
adc
sbbl
je
xchg
out
sbb
call
jge
jmp
stos
rcr
mov
xchg
xor
pop
add
outsl
sbb
add
add
jg
push
and
sub
or
gs
xchg
into
pop
ret
loop
dec
xchg
cmp
fsubrs
and
inc
fsts
jnp
iret
cmpsb
xchg
bound
shl
in
popa
addr16
popf
fwait
dec
popf
sub
cs
jb
xchg
or
daa
cmpsb
inc
dec
add
push
inc
stc
jae
push
add
xchg
pop
add
jo
cmp
xchg
insb
push
test
jns
push
push
mov
aad
mov
aas
stos
cmp
test
push
repz
loope
out
dec
jmp
leave
sub
adc
mov
rol
add
push
mov
sub
in
clc
ficompl
mov
push
ja
outsb
push
fcmovnu
xchg
fwait
out
xchg
adc
loopne
mov
fdivrp
push
pushf
lahf
aaa
loope
push
mov
xchg
push
adc
add
xor
lds
and
fs
mov
dec
data16
inc
mov
mov
scas
gs
push
xchg
std
or
addr16
push
inc
imul
mov
lahf
inc
setns
rcrl
lods
inc
jnp
dec
dec
popa
inc
add
inc
fsubrp
sbb
push
pop
sub
in
repnz
jp
jns
jno
xchg
mov
loopne
sbb
pop
ss
dec
enter
jmp
lods
push
xchg
dec
xlat
std
stos
mov
test
jl
mov
dec
fisttpll
or
xchg
ret
dec
add
push
mov
out
xor
call
iret
int3
stc
int
xchg
jae
daa
mov
mov
jae
xchg
push
movb
cwtl
pop
iret
jb
pop
aam
and
out
divl
inc
js
or
xor
mov
out
sub
dec
lock
call
cmp
fwait
dec
cmc
sbb
rcll
fcmovnb
imul
lods
jbe
add
xor
pop
pop
inc
stos
pop
jg
xchg
inc
dec
lret
jl
sarb
xor
push
test
sbb
loopne
insb
outsb
cwtl
dec
repnz
mov
std
mov
sarl
mov
mov
fisttpl
inc
fisttpl
add
or
dec
add
in
leave
xlat
lods
or
inc
pop
and
xchg
ss
int
clc
hlt
ficoml
xchg
mov
cmp
lcall
lahf
rolb
fimuls
cmpsl
in
push
jp
sub
repz
pop
std
pop
sbb
add
dec
sbb
lret
daa
out
mov
inc
aad
pop
movsl
lret
fidivs
iret
jle
xor
test
sbb
out
sahf
inc
and
inc
pop
fdivrl
rcrl
imul
pop
pop
sbb
movq
loop
mov
xor
ffree
test
mov
push
leave
test
pop
xor
sbb
sub
xchg
inc
push
lds
mov
mov
cli
clc
pop
fs
out
and
lods
movsl
xchg
adc
inc
jle
sub
sbb
gs
mov
xchg
sub
pushf
in
stc
lahf
loop
push
rclb
mov
mov
addb
movsl
jb
out
sbb
sarl
dec
push
xor
push
jmp
loop
adc
and
dec
push
outsl
cmp
loop
es
int3
fdivl
cmp
fists
pop
cmp
pushl
jg
movlps
jo
push
push
insl
cmp
pop
xor
cwtl
adc
push
stos
stc
repnz
pushf
mov
mov
imul
mov
cmpsl
xor
stc
pusha
icebp
cltd
ret
pop
xor
xchg
insb
fdivrl
adc
aas
lcall
lods
xor
mov
cmpsl
xchg
mov
cld
mov
aad
nop
xor
inc
fdivs
jb
jns
jns
ret
fwait
xor
jb
mov
lahf
int3
mov
out
inc
dec
mov
jl
ja
or
and
mov
ds
je
xor
lea
dec
inc
and
loope
ret
les
pop
mov
and
repz
out
inc
mov
push
cmp
movsb
sub
bnd
popa
les
mov
sub
mov
lret
repz
in
dec
lahf
cltd
inc
inc
repnz
add
mov
add
aam
dec
stc
mov
inc
pop
les
pop
sahf
test
out
stc
or
lcall
rorl
mov
sub
push
sub
fwait
test
xor
dec
jge
roll
lods
inc
repz
push
or
inc
mov
lds
dec
leave
mov
in
imul
xchg
push
mov
out
sti
xchg
xchg
faddl
ljmp
dec
scas
push
mov
in
pop
add
test
inc
adc
push
popf
xchg
sub
xlat
pushf
in
mov
rsqrtps
xor
mov
or
inc
ljmp
xor
mov
ljmp
es
pop
imul
lcall
fisttps
mov
cmp
insb
mov
call
lret
cmpsb
mov
jl
cmc
inc
and
jae
sbb
and
inc
lret
call
fld
fs
loope
adc
inc
arpl
sbb
push
bound
adc
ljmp
push
insl
imul
dec
xchg
cmpsb
xor
popf
dec
outsb
jae
inc
fimull
push
ljmp
fsubrs
testb
dec
jns
movsb
shll
bound
daa
pop
mov
push
push
inc
push
in
enter
ljmp
loope
loop
bound
int3
mov
or
repz
dec
out
push
in
jle
pop
jb
divl
leave
mov
xor
lahf
add
cmp
inc
mov
scas
push
jb
enter
sbb
mov
sub
add
pusha
pop
push
push
js
xchg
out
cmpsl
cmp
mov
shr
add
stos
aaa
and
push
mov
in
jns
repnz
les
sbb
sub
pushf
pop
into
lods
and
dec
xor
aas
or
cmp
dec
imul
xchg
dec
adc
or
stos
lods
nop
nop
out
addr16
fwait
xchg
call
and
and
cmpsl
or
loope
lock
xchg
arpl
xchg
jl
dec
add
cmp
or
int
ja
cmp
mov
andb
cwtl
jo
faddl
push
push
aad
cmp
sbb
imul
orl
test
scas
lea
push
sti
iret
pop
test
daa
in
fwait
stos
pop
pop
aaa
jb
push
jmp
std
inc
int3
outsl
pop
outsl
das
scas
mov
push
adc
xchg
sti
jbe
das
jo
push
pop
push
add
jb
xchg
cli
xchg
mov
setg
fisttpl
lret
into
push
test
cmp
lds
cmpl
dec
fdivrs
dec
push
inc
and
mov
pop
scas
xchg
xorl
mov
test
push
insl
mov
add
xlat
sub
mov
test
insl
mov
or
in
jnp
insl
cmp
aam
xchg
mov
out
mov
leave
rclb
xchg
mov
and
add
test
imul
push
outsl
lahf
mov
pop
or
inc
or
add
sbb
adc
lret
mov
scas
dec
shrl
subl
adc
inc
mov
lea
mov
add
mov
mov
adc
pop
loop
mov
inc
jmp
outsb
pop
sbb
ret
das
dec
dec
iret
adc
dec
ds
fsubrs
mov
nop
adc
shlb
dec
mov
xor
std
movl
bound
or
dec
jns
scas
or
jnp
jg
repnz
aam
add
sub
je
add
mov
cmpsl
or
insl
push
jno
sbb
pushf
or
inc
or
stc
psubw
pop
and
stc
xchg
adc
addr16
movsl
aas
xchg
dec
inc
cmp
xlat
ds
and
fwait
xor
or
in
loopne
pop
shrb
dec
and
mov
xor
ss
and
mov
mov
cwtl
lret
push
icebp
das
out
ret
jno
xchg
push
xchg
dec
mov
sbb
cmp
mov
fisttps
dec
xlat
fisubs
js
mov
xchg
sbb
lahf
std
repnz
mov
mov
mov
out
js
call
in
inc
cmp
in
adc
pop
and
mov
jb
push
mov
pop
lcall
mov
and
imul
mov
test
cmpsb
lock
movsb
adc
in
sbb
sbb
xchg
das
pop
jae
pop
push
mov
lret
inc
pop
loopne
aas
fimull
inc
jp
imul
or
negl
mov
jnp
xor
stos
pop
popf
cmc
shrl
aad
push
mov
push
xchg
aas
jno
dec
rolb
les
fldcw
icebp
ljmp
cli
mov
daa
cmp
mov
int
imul
jl
orb
dec
xchg
in
sbb
mov
push
andl
xchg
lods
jle
fsts
lret
insb
adc
pop
insb
test
in
mov
add
mov
sbb
leave
fwait
push
sub
jnp
inc
add
cmc
jmp
sub
fmulp
adc
out
pop
out
jne
or
xor
adc
hlt
dec
lock
push
dec
dec
mov
les
cmp
dec
push
lahf
jg
repz
mov
popa
les
mov
cld
dec
pop
push
notl
jp
shrb
out
movsb
movb
shlb
xor
hlt
flds
adc
xchg
mov
xchg
cmpsl
pop
jne
push
mull
outsb
movsb
out
mov
inc
add
inc
mov
mov
xchg
pop
nop
fidivrs
push
in
ffreep
jbe
dec
movb
jle
sub
out
cmp
push
pop
std
jg
stos
push
mov
aad
or
das
pusha
enter
sub
sub
and
cmp
mov
mov
xor
jns
mov
cli
xor
outsl
sub
sahf
adc
addl
jbe
std
mov
ss
mov
cmc
mov
adc
and
lods
xor
dec
arpl
dec
adc
mov
icebp
adc
or
push
test
out
popl
push
mov
rorl
mov
mov
sbb
pushf
pop
scas
rolb
fisubs
pop
pop
and
and
sbb
leave
adc
arpl
into
adc
mov
xorb
je
into
shrb
mov
xchg
mov
pop
push
dec
dec
and
lock
inc
cmp
pop
icebp
lock
jg
sahf
das
sub
jo
and
xor
inc
jmp
loopne
sti
mov
into
mov
lods
adcb
jns
test
sub
rcrl
hlt
stc
cmc
inc
ret
mov
dec
in
mov
adc
stc
movsl
mov
jnp
sub
icebp
outsb
fists
enter
repz
jp
jb
bound
sbb
scas
popa
imul
subl
leave
and
lods
cwtl
in
add
mov
xchg
sahf
lret
fsubl
fstl
clc
mov
push
rolb
ret
stos
lds
jb
xor
mov
xor
shll
and
add
ret
cwtl
push
fst
dec
sub
push
int
jmp
xlat
cmp
fs
shlb
xchg
inc
lods
enter
pop
jbe
jmp
mov
inc
cltd
cmp
mov
icebp
ret
aaa
sahf
dec
mov
and
scas
dec
adc
xchg
sarb
enter
bound
hlt
jno
dec
lods
rol
inc
test
jp
jae
jae
cld
testl
xor
inc
xlat
mov
hlt
mov
xor
cmp
xchg
jo
push
inc
sbb
es
nop
dec
sahf
shll
cli
loop
test
rcl
and
mov
enter
xchg
lds
mov
mov
lods
xchg
adc
xor
clc
xor
or
in
xor
pop
shrb
xor
pop
es
cmc
fwait
mov
cmpsb
jecxz
lods
jns
and
inc
sbb
shll
push
int3
cltd
mov
xor
movsl
cld
ss
ss
pusha
lods
add
jge
cli
sub
fsub
cmp
mov
cmp
int
fcomip
inc
add
xlat
push
arpl
push
flds
add
loope
mov
jmp
lods
sbb
push
hlt
sbb
sahf
out
outsl
mov
iret
and
sahf
cwtl
aas
aaa
push
icebp
scas
repnz
jecxz
dec
jle
xor
adc
scas
jecxz
fildl
fsubl
mov
in
rolb
inc
lods
jb
inc
stos
mov
scas
or
call
xor
jge
pop
push
insb
jle
sub
into
aam
ss
aas
jo
adc
stos
fildll
push
imul
daa
jbe
mov
in
pop
push
jno
je
mov
xchg
push
fists
icebp
addr16
repnz
pop
adc
in
imul
pop
mov
cwtl
outsl
mov
into
aam
fs
popf
xor
jecxz
ret
inc
xor
adc
fld
jbe
in
stos
xor
adc
or
cmp
push
std
mov
mov
gs
mov
or
mov
xchg
pop
pop
icebp
pop
sub
or
jns
aad
fnsave
mov
mov
gs
and
imul
fimull
push
lods
mov
push
insl
daa
push
xchg
jo
pop
sarb
lret
mov
icebp
test
push
rorl
stc
fdivs
into
int3
or
dec
stos
frstor
push
fs
and
aas
outsl
fdivrp
sbb
and
mov
cltd
test
add
jne
xlat
lock
sbb
mov
mov
add
inc
daa
pop
pop
adc
pop
fists
xchg
cmp
cmpb
mov
or
out
into
bound
fimull
btr
jno
xor
or
aam
fiaddl
dec
dec
loope
cli
and
sti
aam
adc
or
and
xor
outsl
test
dec
inc
xchg
adc
loopne
add
das
fcmovnb
jnp
add
mov
xchg
test
stos
xor
mov
push
test
test
int
out
pop
xor
insb
stos
jge
andb
inc
cmpsb
testb
xor
rcl
pop
xor
and
jne
push
clc
fmuls
mov
xchg
mov
out
popa
sub
arpl
add
jae
or
fildll
xlat
sub
lahf
loope
adc
pop
in
popf
jmp
add
sbb
add
mov
in
es
sarl
lret
adcb
insl
daa
mov
mov
std
mov
cmp
mov
pop
loop
pop
ss
or
test
dec
jmp
jno
inc
lods
repz
inc
andl
f2xm1
or
xchg
add
pushf
sbbl
jae
je
xchg
jecxz
stos
cltd
add
aaa
out
push
xchg
sub
pop
push
popf
daa
out
imul
scas
and
sub
repnz
ret
xor
ljmp
out
lret
and
jg
inc
cld
cmp
pop
insl
xchg
adc
mov
mov
mov
les
dec
adc
out
sbb
mov
shlb
xlat
mov
push
sub
daa
lods
ja
jb
ja
jbe
push
insl
mov
cmp
cmp
xchg
add
inc
xlat
or
mov
or
jp
nop
jecxz
xchg
xor
aaa
or
mov
fisubl
repz
or
adc
imul
inc
mov
xchg
pop
pop
cwtl
pop
sbb
aad
cmp
or
add
int3
nop
fwait
mov
xor
push
push
mov
push
in
inc
cmpsb
fstpl
push
bswap
fwait
sub
and
ret
mov
mov
jo
xchg
xchg
mov
push
xor
popa
or
inc
pop
push
int3
dec
mov
push
aad
sub
in
mov
cmpsb
outsb
lods
and
mov
add
scas
test
ljmp
addr16
jno
in
lret
pop
rcll
and
pop
add
mov
test
mov
jne
mov
and
xor
or
cmp
and
roll
adc
sub
fucomp
cmp
loop
int
mov
mov
enter
pop
jmp
lock
mov
int
adc
pusha
dec
leave
popf
jne
xchg
fistl
mov
xchg
sbb
in
dec
push
adc
icebp
mov
or
loope
add
or
xlat
mov
sub
shr
or
jl
test
lock
jo
cwtl
in
push
xchg
test
sub
repz
cmpb
lret
dec
or
push
cld
inc
pushf
xor
and
int3
mov
xor
ret
lcall
scas
dec
fst
xchg
mov
or
xlat
push
lcall
mov
sbb
aam
pop
jg
popa
stos
ror
subl
leave
hlt
add
in
arpl
jns
mov
push
lods
stos
dec
sub
gs
mov
inc
call
cmp
pop
lods
cmp
stos
sbb
das
aaa
xor
mov
jp
fisubrs
push
outsb
popa
cld
lds
cltd
daa
and
arpl
in
jecxz
sbb
sub
add
xchg
xchg
outsb
cmp
pusha
pop
mov
sub
jecxz
cmp
inc
es
lods
in
test
in
push
mov
pop
dec
mov
fcmovu
mov
dec
movsb
xchg
imull
sti
sub
inc
mov
jbe
divb
scas
cli
cmpsb
fimuls
pop
dec
icebp
jmp
ds
sbb
cmpb
and
xchg
and
mov
jb
cmpsl
add
vcvtps2dq
push
outsl
xlat
jecxz
push
scas
stos
imul
or
ja
sbb
test
xchg
cltd
push
push
ret
mov
cli
aam
movsl
dec
xchg
xchg
xor
aas
subb
push
mov
mov
das
ret
xor
in
cwtl
mov
push
popa
ds
mov
pop
mov
xor
je
loope
cmp
push
dec
pushf
push
sbb
in
inc
push
fistpll
dec
rcl
add
pushf
stc
pop
adc
pop
arpl
or
imul
dec
mov
cmp
dec
mov
cmp
movsl
xchg
mov
roll
int
mov
idivb
jb
inc
jae
lods
orps
mov
bound
in
js
jg
jmp
bnd
pop
lret
xchg
sub
mov
in
or
mov
lahf
push
pop
mov
sbb
es
pop
data16
lret
and
scas
cmp
push
mov
movsl
daa
es
xor
ret
cld
xor
stc
popa
fisttps
ficompl
adc
mov
and
pop
xchg
into
ljmp
inc
or
push
pop
jbe
pop
testl
adc
pop
lds
inc
jns
jmp
dec
push
sub
ss
cwtl
test
in
cmp
jmp
dec
int3
mov
lods
insl
sbb
cmp
pop
push
insb
push
pop
lcall
fsub
add
js
int3
cmp
xchg
cmpsb
cmp
pop
inc
enter
or
call
xor
dec
sub
pop
stos
je
sar
mov
clc
shll
mov
push
xlat
mov
test
inc
call
inc
bound
ljmp
and
jbe
sbb
xchg
push
out
sub
pop
or
ret
and
andb
ja
dec
scas
jmp
cmp
test
xor
mov
mov
icebp
push
rorb
aas
mov
dec
orb
icebp
data16
add
mov
add
and
sub
and
xchg
xchg
xlat
ficompl
xchg
call
sbb
aam
jp
cmpsb
add
fdivs
sbb
dec
mov
xor
mov
cmpsl
xchg
sub
inc
mov
jl
int3
lock
adc
mov
fistpl
lcall
xor
pop
sti
insl
stos
mov
stc
jmp
lcall
out
mov
adc
jp
es
pop
inc
adc
sahf
mov
jg
popa
dec
icebp
jge
fsubrs
sbb
movsb
xor
and
stc
adc
adc
pop
test
scas
dec
repnz
push
lock
sbb
mov
fdivrs
or
push
jp
cld
jle
shrl
or
lcall
inc
cmpsb
mov
out
popf
push
out
sarb
jno
xlat
fists
aam
pop
into
shlb
pop
ret
cmpsb
push
std
sub
jg
out
sub
out
jmp
push
mov
push
out
es
jb
push
and
lcall
cld
repnz
jmp
or
and
decl
cmp
and
pop
divl
pop
fcom
and
mov
fs
mov
lock
cmp
sub
inc
cmp
xchg
sub
iret
mov
in
mov
sub
test
std
jge
and
stos
mov
pop
sbb
push
mov
cld
loopne
lcall
inc
cmp
pop
fidivl
sub
jmp
sub
jmp
loopne
cwtl
mov
mov
inc
xor
test
clc
or
les
daa
cmp
sahf
mov
push
mov
adc
push
mov
cltd
sahf
adc
loop
push
lods
pushf
imul
pop
push
test
jmp
daa
pop
sub
pop
sbb
rcl
mov
and
imul
stos
xchg
pusha
adc
mov
faddp
clc
icebp
dec
pop
scas
jne
xchg
adc
fdivrs
out
adcl
test
mov
sbbl
ljmp
mov
imul
add
clc
xor
dec
pop
jg
repz
outsl
imul
in
stos
iret
add
fdivs
sbb
enter
jp
sub
fwait
pop
repz
lahf
inc
or
into
and
rolb
adc
imul
xchg
xchg
cltd
mov
cmp
stos
adc
out
leave
popf
mov
sub
les
cwtl
divb
xchg
cmc
jo
mov
xor
pop
repnz
into
ljmp
xor
lods
scas
mov
lock
mov
xorb
into
sub
or
cmp
or
mov
xchg
ja
inc
mov
cld
rolb
stc
inc
int
rcl
jnp
xchg
jbe
lds
sub
lea
lea
pop
mov
push
mov
xchg
or
sub
and
insl
push
adc
cmp
inc
or
xchg
in
scas
sub
sti
hlt
adc
rcrb
jecxz
pop
push
cmp
xchg
jmp
mov
cmp
insb
xorl
sub
imul
leave
push
jne
add
scas
adc
mov
arpl
data16
jnp
xchg
sti
int3
push
icebp
mov
or
incl
and
andb
inc
jbe
fildl
push
push
or
cmp
lret
mov
gs
bound
pop
add
sub
jmp
ja
aad
enter
dec
and
dec
fstps
testb
arpl
lret
cmp
inc
popf
in
inc
es
lret
bound
pusha
test
dec
cs
cmp
ds
dec
sbb
push
and
sti
jo
ret
push
test
xchg
push
sbb
pop
insb
ljmp
pop
sbb
std
mov
imull
rcrb
or
fnstcw
test
mov
xor
jmp
addr16
mov
orb
pop
gs
inc
mull
or
lret
andl
fnstenv
sub
fidivs
mov
je
pop
dec
mov
leave
sbb
jne
cmp
gs
mulb
leave
mov
cmp
cmp
cmpsb
ss
mov
add
rorb
push
dec
in
out
adc
push
xchg
out
sahf
aas
andb
pusha
mov
aam
sub
rorb
popf
loop
cmp
xor
int
inc
into
lock
xchg
jne
mov
gs
repnz
incl
mov
rol
mov
insb
stc
and
out
outsl
fstpl
out
and
lods
cmp
cmp
outsb
pop
test
and
ljmp
cmp
imulb
fmul
xchg
lods
fs
daa
sub
inc
out
andl
out
insl
inc
mov
lods
fisttpl
push
insb
icebp
mov
out
jle
push
jb
add
sti
add
pop
leave
and
shll
pop
push
push
insb
xchg
sbb
xchg
mov
jge
push
inc
jno
cmpsb
jmp
push
lcall
mov
call
add
fists
mov
sbb
in
stos
fmuls
or
out
jnp,pn
cmp
jb
lret
lret
jg
pop
inc
ljmp
dec
cli
push
jmp
push
ds
stos
mov
push
xor
xlat
ja
dec
daa
lcall
lds
adc
das
dec
push
add
out
test
into
push
int3
gs
jecxz
sub
sub
mov
rolb
je
ret
in
iret
push
stos
pop
pop
mov
std
shlb
pop
mov
movsb
sbb
ret
out
xchg
push
pop
out
xor
rol
js
fs
into
pop
pop
mov
inc
repnz
pusha
dec
fucom
lahf
mov
fadd
aaa
aad
repz
dec
jmp
push
cld
mov
loop
mov
cmp
fwait
inc
rcr
mov
in
lods
ret
xlat
fisubrs
loope
stc
popf
or
cwtl
fidivs
adc
push
push
mov
mov
icebp
cmp
stc
js
lret
jg
jnp
jo
mov
xchg
repz
into
pop
sub
addr16
ret
sub
movsb
adc
pusha
call
dec
jg
lods
outsl
jp
lock
xchg
scas
inc
stos
add
jg
hlt
mov
push
popf
pop
cld
stos
jl
call
pop
aad
clc
xchg
or
mov
and
xchg
jecxz
mov
dec
pop
sub
sbb
xor
and
repz
lahf
jmp
add
jmp
mov
pop
dec
lret
mov
test
ds
xlat
push
inc
cmp
xchg
pop
and
mov
sbb
push
sbb
insb
mov
adc
cli
adc
mov
jo
push
cmp
sub
popa
aaa
jmp
add
lret
lock
sbb
xorl
decb
jbe
mov
xor
imul
dec
fbld
movsb
adc
pop
dec
in
or
cmp
inc
fmul
mov
in
int3
popf
int
rorb
daa
mov
mov
ja
dec
push
leave
lcall
mov
addr16
ret
and
add
jae
movsb
in
mov
push
xor
je
les
push
and
xorl
mov
jno
mov
xchg
sbb
stos
ja
dec
and
jb
push
adc
xor
cmpsb
call
icebp
pop
std
inc
xchg
gs
jecxz
mov
notl
xor
mov
pop
fimuls
and
pop
adc
cmp
mov
je
addr16
jmp
scas
dec
inc
lahf
cmp
bound
adc
lcall
mov
test
int
test
jns
jmp
stos
mov
jmp
cmp
cmp
mov
adc
sahf
ds
inc
dec
push
pop
inc
pop
fists
jp
aam
add
mov
cwtl
mov
mov
aaa
fnstcw
loop
mov
hlt
and
push
pushf
xchg
jecxz
xchg
cld
cmp
jl
inc
mov
adc
cmp
sbb
mov
sub
in
stc
push
scas
shrb
fwait
sub
mov
je
xchg
xor
cmp
pusha
iret
out
aas
add
push
jmp
fcmovne
sbb
lcall
shrl
sub
push
stos
cli
sub
sbb
popf
stos
fildll
add
incb
imul
xor
cmp
lret
call
enter
inc
pop
mov
mov
out
xchg
jae
sbb
loope
mov
divb
dec
mov
cmp
xchg
push
xor
xchg
inc
xor
test
mov
adc
push
repz
rorl
adc
sbb
push
jnp
clc
inc
out
mov
roll
and
test
dec
addr16
xor
ret
ret
loopne
and
ja
in
xlat
xchg
push
sbb
shll
in
addl
scas
sbb
mov
fadds
xchg
sahf
fisttps
cs
adc
mov
int
adc
mov
jmp
pop
cmc
xor
push
adc
lret
adc
inc
or
fst
mov
inc
js
or
mov
xor
insl
iret
push
jg
jne
xchg
jmp
shll
and
maxps
xchg
lea
loopne
jno
xor
adc
movsl
mov
or
out
cmc
addr16
xor
push
cmp
cwtl
mov
movsb
fwait
jae
aad
out
sub
cmpb
push
add
iret
adc
adc
sarb
cltd
or
out
jns
mov
mov
push
and
idivb
mov
enter
repz
iret
push
mov
sub
das
inc
je
mov
movsb
jnp
and
mov
sti
mov
sbb
aad
ficoms
leave
adc
loope
cli
inc
je
adc
sahf
sbb
xchg
cli
pusha
fdivs
mov
arpl
addr16
and
sub
inc
mov
xor
or
push
adc
mov
and
mov
aas
in
out
xor
mov
and
push
pop
daa
jp
or
dec
ds
xchg
cltd
lahf
jno
pop
fimull
in
inc
test
and
insb
ljmp
pop
popa
mov
popa
iret
cmpsl
push
int
fists
imul
jg
test
int3
xchg
sub
sub
imulb
pop
lock
ret
add
cwtl
ljmp
add
insb
movl
pusha
cltd
fisubrl
mov
add
mov
pop
xchg
mov
sub
adc
mov
pop
imul
mov
and
or
cmp
xchg
out
imull
inc
fistl
testb
shl
ret
call
mov
pop
sbb
movsb
xchg
movsl
inc
loope
lret
imul
dec
stc
jno
mov
and
sbbl
xchg
in
and
pop
mov
int
aam
sahf
aad
sbb
and
out
and
jo
shrl
mov
xchg
add
cmpsb
mov
xor
push
sub
xchg
shlb
pop
mov
lcall
mov
dec
xchg
mov
cmp
rolb
xor
and
movsl
int
and
rcrl
jae
mov
jmp
add
arpl
out
or
shll
outsl
iret
pop
cmp
cmp
hlt
sbb
dec
ja
movsb
xor
mov
addr16
sahf
mov
adc
pop
pop
xchg
test
popa
pusha
repz
leave
jecxz
xchg
in
jne
leave
fsubp
cwtl
xor
dec
xchg
aam
bound
mov
jg
dec
sub
cmpsb
stos
mov
divb
int
jb
sub
push
jp
cwtl
dec
mov
cs
leave
push
push
je
bound
fisubrs
into
adc
es
and
call
loope
cmp
daa
aaa
add
aad
or
mov
adc
pop
cmp
aas
xchg
add
aad
sub
and
js
jl
inc
push
daa
cmpl
dec
dec
sar
cmp
xchg
push
mov
cmp
dec
or
pop
movsb
movsl
sahf
push
xor
jo
call
cld
or
out
sbb
cmp
pop
lret
xchg
adc
shlb
mov
in
test
inc
pop
js
xor
mov
cld
adc
push
enter
insb
out
jmp
movsb
cmp
jle
outsb
nop
scas
adc
ljmp
shll
jno
sarl
outsl
push
stos
pop
in
cwtl
adc
jbe
ds
inc
jp
loopne
iret
sarb
cld
es
jmp
dec
jb
test
faddl
inc
xchg
push
inc
fcmovne
repnz
jl
or
test
jae
mov
mov
push
pop
test
loope
pop
loopne
mov
pop
aas
jp
int
and
and
out
stos
insl
fldt
shrb
test
bound
pop
testb
sbb
add
into
cs
mov
xchg
enter
or
jp
push
mov
xchg
xor
dec
sub
push
aas
mov
cmp
rcl
mov
mov
out
insl
mov
jb
xchg
xor
mov
cmp
movsb
lea
dec
sub
mov
adc
or
push
jno
into
mov
lahf
ljmp
sub
inc
dec
dec
inc
fs
scas
mov
subl
xchg
out
sti
jbe
testl
or
cmpsw
xchg
ror
jge
or
cmc
cwtl
orl
movsb
xor
lea
cmpsl
push
add
cltd
xor
cmpsl
sbb
mov
gs
mov
test
call
inc
shlb
push
int3
pop
dec
jge
xchg
inc
fs
pop
cwtl
enter
hlt
jg
dec
or
imul
clc
xor
in
mov
dec
jo
lcall
cmpsb
cs
adc
pushf
jne
or
mov
sub
push
inc
xor
add
push
cmp
inc
sub
stos
pop
lahf
and
jno
imul
mov
inc
mov
jmp
xchg
and
inc
lahf
jns
call
push
fdivrp
fs
jl
push
enter
jmp
xchg
push
xchg
repz
inc
inc
xor
sbb
mov
out
pusha
inc
mov
and
test
js
and
cmp
loop
cmp
orl
mov
in
lcall
stc
insl
add
add
push
jle
jp
push
into
fadd
xor
cmc
sub
sti
pusha
and
icebp
gs
push
lods
inc
aas
aas
and
fsub
mov
sbb
nop
loopne
jl
lods
inc
mov
data16
mov
jb
pop
jge
stos
jecxz
test
push
loope
mov
in
sbb
stos
arpl
add
xchg
jge
jo
les
adc
sub
cli
aad
pop
adc
orb
lret
mov
ja
and
test
cmpsl
xchg
and
in
pop
jecxz
lret
in
adc
daa
add
mov
std
psrld
pusha
xchg
push
push
push
jmp
mov
scas
leave
bsf
inc
sub
inc
ffreep
fcmovbe
jnp
mov
adc
test
dec
jecxz
add
and
std
inc
and
dec
or
out
add
fidivrs
inc
xor
mov
fs
icebp
ret
sub
adc
lds
mov
mov
jnp
pop
inc
sub
mov
lds
inc
or
mov
mov
jne
fldl
hlt
in
stc
mov
cli
or
or
or
aam
push
pusha
loop
inc
inc
jge
mov
and
push
or
sbb
test
fsubrl
std
mov
inc
aad
flds
int
jp
pop
mov
mov
cmpsl
jl
mov
push
cld
shll
pusha
add
enter
lcall
lods
flds
xchg
sub
jecxz
subb
mov
sti
ds
andb
dec
imulb
call
fs
xor
sahf
leave
sarb
mov
jne
scas
and
stos
push
ds
xor
adc
jmp
pushf
xor
popf
pop
and
add
push
nop
jbe
inc
inc
pop
imul
pusha
dec
xlat
sub
sbb
pop
jne
and
sahf
jno
xor
aad
ds
fcoml
shlb
mov
fnstenv
inc
stos
mov
imul
pusha
xchg
aam
mov
cltd
and
inc
mov
dec
repz
popa
mov
leave
cmp
subl
shlb
cmp
lock
lds
arpl
in
cwtl
and
sbb
or
out
es
xor
movups
icebp
xchg
mov
sbbb
jae
pop
mov
gs
inc
dec
movsb
int
cmp
aad
pop
mov
mov
pop
punpckhdq
int3
stc
sbb
xor
mov
int3
mov
jae
mov
add
arpl
movsl
jmp
shrb
daa
and
xor
sub
jnp
loope
or
repz
jle
jmp
loopne
subb
push
or
aas
pop
cmp
int3
insl
jge
or
cmp
mov
push
jg
mov
daa
aam
inc
out
out
push
pusha
in
pop
insl
insl
cmp
fwait
jnp
sbbl
xchg
pop
inc
pop
repz
insb
push
stc
xchg
nop
aad
jbe
sub
data16
cmp
jl
xor
aaa
fstl
dec
mov
fisttpll
jmp
mov
rorl
fistpl
pop
sti
push
cmp
cmp
pop
cmp
cltd
cmpsl
ffreep
movsl
cmp
sbb
xchg
inc
jle
int3
mov
aaa
adc
adc
add
xor
ja
aad
and
stc
test
sub
iret
rclb
hlt
leave
xor
inc
mov
loopne
ror
mov
movsb
aas
sarb
into
iret
icebp
add
and
mov
cmp
xchg
out
cld
mov
adc
xchg
lahf
xor
cmp
in
ja
addr16
jne
clc
clc
jg
fcmovb
xchg
xchg
leave
std
cmp
push
push
mov
push
and
imul
sub
in
iret
mov
sub
fdivl
roll
out
js
arpl
inc
or
xchg
xchg
stc
insb
xor
sarl
sbb
cmc
and
push
xor
jmp
xchg
clc
push
xor
sarb
or
xchg
mov
pop
out
add
pop
ja
xchg
mov
or
in
mov
fwait
jmp
xor
mov
lcall
and
sub
pop
push
in
lcall
dec
push
mov
fbstp
icebp
inc
lcall
bound
jb
mov
or
dec
aas
inc
je
in
xor
stos
sti
repnz
push
sbb
add
in
dec
leave
sub
push
js
jle
aas
cld
push
dec
sbb
sub
mov
jmp
repz
insl
cmp
rorb
jo
fs
lret
mov
test
mov
push
mov
push
push
loopne
xchg
sbb
push
push
sbb
cld
adc
mov
popf
or
push
addl
ss
ret
ret
icebp
dec
cmp
out
call
inc
icebp
cmp
inc
mov
gs
mov
jb
or
repnz
jae
xor
loop
lock
in
jge
insl
jecxz
aaa
inc
mov
jae
inc
bound
fisubs
sbb
push
outsb
enter
cli
ret
div
and
mov
cli
xor
push
jmp
test
and
xor
cmp
fistpl
xchg
leave
bts
stos
iret
daa
pop
or
rol
lahf
lods
xchg
test
dec
pop
leave
loop
shrb
mov
stos
mov
out
and
adc
dec
iret
ficoms
push
mov
inc
cmp
mov
pop
sub
ja
inc
xor
in
cmpsb
inc
je
in
dec
pop
dec
and
jbe
add
ljmp
jb
cwtl
lods
jl
sbb
cmpsb
test
outsb
pop
je
incb
pop
cmp
sub
xchg
adc
mov
test
push
pop
lods
sbb
push
or
mov
push
cli
xchg
lcall
inc
push
outsl
int3
les
xor
cmpsl
repz
mov
data16
xor
pusha
aas
mov
outsl
push
in
jns
push
ja
mov
pop
ss
lds
sbb
mov
or
mulb
xchg
pushf
sarb
cmp
adc
dec
stos
adc
mov
and
ljmp
add
add
icebp
dec
rolb
dec
pop
mov
test
dec
enter
xlat
mov
mov
cmpsb
push
or
or
cmpl
rclb
dec
cbtw
push
mov
call
inc
jl
jae
adc
push
sar
push
sbb
sbb
xor
mov
icebp
jge
adc
test
xlat
pop
mov
xchg
rol
je
jno
xchg
jbe
stos
mov
clc
lahf
ror
push
lret
jae
adc
js
or
mov
inc
mov
ja
pop
inc
daa
insb
std
out
xorb
xor
std
arpl
dec
insb
push
std
loop
jl
fldt
ds
pushf
pop
cmp
aam
xchg
sub
dec
cmp
pop
sahf
cmpsl
stos
scas
dec
mov
test
xor
pop
push
xor
iret
and
rorl
iret
sub
push
push
adc
jns
nop
or
aaa
test
or
leave
jns
and
call
pop
scas
rcrb
push
es
stc
push
mov
inc
bound
sbb
lea
aas
test
ror
call
test
shrb
xchg
mov
pop
jge
cmpb
xor
xlat
lods
dec
pop
loopne
mov
mov
jecxz
xor
pop
xor
cwtl
repnz
xchg
xchg
mov
mov
cmp
fisttpl
pop
xor
sbb
xor
out
and
mov
mov
jg
lcall
out
push
addr16
hlt
popf
xchg
or
cs
fsubl
or
sbb
pushf
rcrl
push
mov
push
mov
rcll
xorb
ret
les
int3
ljmp
add
fs
inc
dec
arpl
xorb
popf
xchg
sti
mov
dec
push
mov
pop
loope
fcoms
enter
stc
and
adc
insb
fnstsw
outsl
mov
dec
addr16
and
int
jge
movsl
out
popa
add
dec
test
mov
jl
test
or
adc
lcall
cmp
pop
xlat
adc
jp
mov
imul
and
pop
sub
outsb
or
push
arpl
xchg
mov
jb
movsb
pop
adcb
push
mov
xor
add
stc
inc
loope
nop
inc
inc
cmp
jl
jp
cmp
sbb
sbb
sub
test
or
push
out
cmpsl
add
roll
jno
mov
fbstp
jno
mov
orb
jbe
or
out
out
popl
xor
jmp
xorl
add
sbb
in
sbb
loope
add
insb
or
xchg
push
in
jb
cmp
sub
sbb
repnz
cmp
adc
push
jno
hlt
fdivs
xorl
and
int
popa
and
add
dec
sub
cli
mov
xor
outsb
jae
push
mov
jl
js
sbb
push
add
pop
add
push
loopne
out
iret
loopne
adc
mov
xchg
mov
stc
imul
sub
xchg
mov
jbe
pop
xor
dec
adc
pop
das
movsb
adc
pop
sub
into
nop
pushl
jb
dec
push
mov
pop
mov
mov
loop
outsb
lods
pushf
bound
pop
int
sbb
stc
lods
ljmp
loope
lods
jge
ja
cmp
xlat
add
addl
shr
roll
dec
cs
addr16
sbb
sub
out
dec
mov
lock
xchg
and
xchg
pusha
push
and
mov
aaa
mov
sbbb
fsubs
js
shlb
les
jns
cmp
or
aas
insb
mov
xchg
pop
ljmp
sub
js
ja
clc
add
andl
mov
push
popa
jle
inc
inc
insl
jl
data16
push
cmp
shr
add
or
pusha
pop
aaa
sub
mov
sub
jbe
mov
dec
xchg
inc
rolb
icebp
std
shrb
inc
pop
xchg
pop
or
or
out
in
xor
or
out
dec
cmpl
add
leave
std
xchg
js
sub
sbb
dec
rcll
pop
cwtl
mov
lcall
outsl
sbb
or
adc
ja
je
jge
cmc
sub
inc
pop
in
cmpsb
movl
push
push
sub
icebp
push
repz
jge
rolb
push
js
out
fstps
pop
mov
sub
rcr
mulb
shll
inc
es
xchg
sbb
push
in
mov
mov
andb
mov
sbb
ret
repnz
mov
mov
pop
inc
sbb
aas
mov
je
fimuls
sahf
adc
inc
lds
jle
lcall
xor
mov
jl
fcoml
lcall
pop
lahf
leave
test
div
fsin
xor
xchg
aaa
inc
pop
or
adcb
mov
inc
xchg
jae
andb
into
shll
lret
xor
adc
pop
cmp
cltd
inc
hlt
jle
or
dec
xlat
out
xchg
dec
push
mov
pop
add
push
mov
push
xchg
cmpsl
inc
fisttps
pop
js
xlat
add
sub
mov
ret
pop
enter
cmpb
lods
fcmovu
xchg
push
ja
xchg
adc
cmpsb
push
or
and
fadds
jmp
dec
fadds
je
addb
jno
dec
mov
test
jmp
cltd
and
xor
stc
stos
and
sbb
aad
cmp
lahf
sub
mov
dec
stos
cmc
arpl
repnz
pop
jmp
and
cs
push
push
imul
stc
xchg
adc
ljmp
pop
loopne
sbb
cwtl
out
out
cmp
pop
icebp
sub
stos
ret
pop
dec
cmp
dec
rcrl
out
push
mov
mov
movb
ss
adc
mov
push
xchg
ja
scas
push
jp
lret
xchg
and
popa
xchg
les
mov
or
sub
arpl
jb
outsl
fmuls
adc
lcall
mov
imul
in
inc
sbb
pop
cmpsb
mov
fists
and
fldl
mov
fsubl
popf
cld
adc
cld
test
clc
fadd
outsl
out
or
stc
xorl
in
cmp
shl
arpl
repz
data16
mov
in
adc
repz
or
mov
sub
fidivl
sbb
inc
enterw
ret
xchg
bound
adc
scas
cwtl
mov
scas
jnp
mov
enter
cmpsl
pop
adc
pop
mov
pop
out
dec
add
add
jbe
lods
rcr
mov
pop
mov
pop
aaa
mov
dec
test
popa
inc
xchg
inc
test
fcomps
push
sti
stos
xorb
or
daa
addr16
add
sbb
mov
and
inc
popf
or
dec
add
add
adc
pop
sbb
mov
jle
pop
dec
pop
call
sub
sub
pop
pop
mov
fsubl
jecxz
aad
aam
out
iret
push
arpl
daa
sbb
sahf
cltd
push
data16
jb
in
push
and
jnp
or
fs
aas
xchg
cmp
imul
scas
out
adc
mov
pop
sub
mov
iret
cmp
xchg
mov
inc
add
push
jno
jne
sbb
jmp
ja
int3
inc
addr16
nop
jne
push
mov
mov
add
pop
stos
jns
rclb
dec
mov
outsl
push
icebp
xchg
cmp
fimull
movsb
mov
les
sbb
inc
mov
fistpll
and
dec
shl
rorb
cmp
out
xor
call
loop
fiaddl
inc
add
cmp
mul
xchg
add
in
sti
in
sbb
sbb
movsl
or
ljmp
adc
mov
push
in
push
sub
pop
jp
jns
arpl
cli
bound
mov
clc
push
push
add
aam
out
ljmp
inc
sub
or
in
rcrb
in
mov
iret
orb
imul
mov
test
into
clc
test
sub
sbb
cmp
lods
cld
sahf
mov
push
xchg
les
es
int3
sub
in
pop
bound
jnp
pop
dec
imul
xsavec
shll
mov
push
int
popf
icebp
xchg
lea
push
pusha
out
es
orb
repnz
xchg
imul
fldt
add
fstpl
pop
lods
and
mul
cmpsl
jae
push
icebp
leave
inc
sub
dec
xchg
faddp
add
mov
xchg
jecxz
and
int3
jns
and
inc
jo
icebp
mull
mov
fwait
in
dec
adc
loop
bound
popf
xor
fcoml
pop
pop
fcoml
ljmp
daa
cli
sub
xor
ss
mov
ja
mov
insb
jne
in
pop
push
fsubrl
ss
or
dec
cli
and
mov
insb
movsl
mov
pop
sbb
push
mov
scas
push
dec
fdivrl
pop
repnz
bound
fsubr
popa
sbb
ficoml
cmp
call
loopne
cmp
fcmovnb
mov
je
inc
jge
pop
jae
lds
test
jnp
aas
fwait
popa
mov
mov
js
pop
jecxz
cs
inc
inc
add
sub
fdivs
pushf
push
cmpl
std
dec
cmp
push
insb
add
andl
cmp
pop
icebp
clc
xchg
inc
mov
and
imul
test
add
movsl
clc
lods
sbb
jo
adc
icebp
lret
inc
jo
outsl
es
adc
test
aaa
sarb
addl
cmpsl
ljmp
pushf
pop
add
data16
cmpsl
filds
mov
mov
lret
pop
cmp
enter
lret
adc
sub
and
enter
jnp
fldt
cmc
xor
xchg
cs
mov
out
push
notl
mov
pop
pop
sub
test
mov
sbb
and
sbb
jae
push
shll
jecxz
lock
inc
les
and
push
fcmovnb
fistpl
sub
std
jecxz
rolb
mov
sbb
cmp
arpl
pop
mov
addb
lcall
cltd
test
sbb
std
push
xor
clc
xchg
pop
sbb
inc
or
cmp
xchg
mov
pop
or
sbb
lock
push
inc
fdivr
jge
push
pop
and
mov
xor
popa
jbe
jmp
out
xor
aas
jno
xor
mov
mov
sbb
jae
jge
and
mov
pusha
and
sub
pop
sbb
ret
lods
adc
lret
push
rcl
into
mov
cld
mov
jno
ds
jl
outsb
add
rcll
mov
cmp
sti
cmp
mov
pop
jb
xchg
test
jl
pop
sub
jnp
push
ljmp
popf
jg
das
sbb
out
or
mov
dec
push
jl
jb
addr16
xchg
fistpl
xor
pop
push
dec
iret
jmp
push
mov
daa
mov
stc
xor
fnsave
xchg
nop
mov
test
ret
mov
mov
lea
out
addr16
and
arpl
sbb
cmp
dec
lahf
mov
xchg
mov
jmp
xchg
inc
add
clc
adc
inc
push
dec
adc
rolb
inc
cmp
adc
mov
dec
les
dec
pop
and
pop
cmp
jmp
xor
scas
mov
or
cmp
cld
pop
adcl
sub
mov
adc
les
je
xlat
mov
fisubrl
add
xor
xchg
test
dec
out
push
out
xchg
iret
xchg
lret
cli
test
loop
xchg
pop
or
cmp
out
xchg
fs
push
negb
fisubl
ret
sub
fisttpll
test
xchg
jae
or
pop
cmp
sahf
mov
repnz
stos
mov
ss
push
adc
and
outsb
mov
int
mov
aas
je
sub
mov
ss
rorl
pop
stos
dec
push
xor
lods
cmp
loop
ret
test
add
jns
cmpsb
pushf
xor
std
in
repz
or
add
scas
xor
bound
stos
add
fisttps
fcmovbe
pop
and
add
or
or
rcrl
xor
push
out
push
push
lret
mov
enter
je
int
imul
movsb
cwtl
push
cmc
popa
dec
sub
cmpsb
cmp
insl
jae
sub
dec
mov
bound
insl
pop
leave
clc
mov
mov
or
ds
push
jb
cmp
js
sbb
sbb
std
iret
sbb
xchg
repnz
insb
fstl
mov
jns
inc
mov
mov
jp
pop
rorl
inc
arpl
das
les
push
mov
int
cmp
adcb
in
ficoml
in
cwtl
xor
add
loop
sbb
mov
pop
pushf
add
cli
cli
inc
cmp
or
inc
inc
ret
mov
adc
mull
shlb
int3
mov
sbb
sub
ljmp
jbe
push
ret
pop
rcrl
repz
orb
xchg
inc
enter
mov
mov
stc
ljmp
js
jbe
mov
enter
aad
mov
fists
aad
cmp
xlat
sub
andb
out
aad
mov
adc
lcall
jl
xlat
fldl
mov
out
cmp
aas
movsl
into
in
jl
push
loop
int
lahf
mov
lcall
sub
ret
jns
sahf
loope
dec
sahf
mov
cmc
movl
jecxz
out
or
popf
pandn
dec
add
cmp
push
pop
jns
adc
xchg
push
and
jno
sub
adc
mov
push
repz
lock
lret
cmp
adc
jl
dec
cwtl
orl
or
xor
fsubs
dec
inc
and
das
and
int
dec
les
mov
sbb
pop
mov
cld
pop
mov
and
or
and
pop
mov
ds
xchg
sbb
lret
or
leave
or
sti
add
add
adc
pop
inc
mov
fisttpll
daa
mov
mov
jb
cwtl
xor
pop
sbb
mov
lods
ljmp
cmp
std
mov
mov
cmp
int
and
lods
fldcw
lock
mov
imul
mov
xchg
pop
sub
rcll
test
xor
jo
je
pusha
xchg
cmpl
pop
xchg
repnz
lcall
aad
daa
dec
inc
and
push
mov
mov
cli
sbb
xorb
ljmp
dec
ja
popa
mov
xor
inc
inc
lcall
xor
ss
loope
je
scas
sbb
jg
notb
or
ljmp
pop
xchg
dec
sbb
push
xor
arpl
inc
adc
lcall
daa
jge
jnp
mov
mov
test
jecxz
xor
cmp
dec
cld
lret
push
mov
out
shll
stos
or
into
nop
or
xchg
cltd
int
sbb
test
dec
adc
iret
add
lock
or
mov
call
aad
cmpsl
push
pop
pushf
in
in
cmp
jae
daa
xchg
cld
dec
mov
sbb
mov
xchg
ljmp
call
or
push
cltd
arpl
sub
jp
icebp
filds
subb
jle
sbb
lods
bound
ret
sub
ss
icebp
push
daa
xchg
test
jg
int
imul
jge
or
popf
or
jbe
cmp
dec
mov
mov
lret
fwait
or
andl
xchg
xchg
lret
xchg
movsb
testb
or
cmc
enter
sbb
mov
push
sub
and
inc
cmp
fs
test
sub
mov
xchg
cs
cmp
push
fists
inc
push
fcmovnbe
inc
popa
dec
sahf
adc
mov
or
pop
push
mov
push
and
sar
push
lds
sub
mov
mov
test
cltd
sahf
test
pop
pop
and
push
call
fnstenv
pop
aad
dec
xlat
test
mov
mov
push
enter
es
push
jno
fisttpl
scas
je
jnp
leave
push
in
dec
pop
sub
insb
ds
xor
pusha
pop
mov
bound
les
into
jae
mov
xabort
mov
fucomp
mov
ret
fs
cmp
andl
jmp
pop
ljmp
test
repnz
push
hlt
leave
add
cmp
inc
ficomps
adc
out
fistps
pop
add
mov
fs
mov
std
cmp
and
and
jp
imul
fwait
jbe
outsb
sbb
xchg
pop
push
add
icebp
sub
js
xor
push
jnp
sub
sbb
les
mov
pop
mov
cs
cmpsb
out
mov
fnstenv
inc
fs
test
and
das
sub
adc
std
jo
adc
fwait
mov
and
popf
loop
push
into
or
mov
test
cmc
std
icebp
jmp
add
jp
cmp
out
in
pop
mov
push
negb
out
lret
test
mov
fwait
pushf
icebp
jne
push
mov
ja
movsl
sbb
cld
pop
push
and
enter
icebp
ret
lock
adc
cs
xor
inc
je
mov
pop
scas
xchg
lods
fildll
mov
fnsave
sbbl
movsl
ror
cwtl
lret
fsubp
push
mov
mov
mov
jmp
jecxz
mov
ss
outsl
jmp
repz
fists
dec
push
clc
ror
cmp
pop
sahf
jge
mov
jo
xor
out
dec
xchg
jb
cmpxchg
sub
or
inc
cld
mov
aad
mov
inc
cld
nop
testb
sub
xchg
adc
jp
push
pop
ja
pop
flds
repz
push
ret
inc
repz
inc
fistpl
sub
xor
or
xlat
jle
jne
fiaddl
leave
fisttps
test
mov
inc
inc
lds
adc
pcmpgtw
lret
mov
or
roll
dec
jge
adc
jg
pop
add
jae
jmp
pop
addr16
lock
adc
in
xchg
js
mov
xchg
xchg
mov
xchg
aam
or
je
mov
nop
lods
inc
arpl
les
mov
movsb
xor
mov
pop
sarl
and
jo
xchg
outsb
push
cs
inc
inc
mov
fisttpl
ret
mov
dec
xchg
adcl
xchg
add
and
fbld
fwait
ljmp
test
and
mov
stc
cltd
aaa
and
or
mov
push
and
sub
mov
and
dec
inc
in
push
mov
mov
dec
adcl
fiadds
dec
or
adc
mov
sub
icebp
imul
jle,pt
dec
adc
sub
push
xchg
mov
jle
sub
aaa
stos
lcall
into
dec
jmp
pop
pop
mov
out
js
jle
fs
sub
push
lea
test
jl
mov
mov
xor
or
insb
pop
xchg
rol
sar
es
sub
add
ss
aam
or
xchg
or
enter
dec
pop
inc
das
add
es
mov
addb
ret
pop
insl
xchg
lahf
pop
pop
push
fs
test
repz
cli
mov
fwait
dec
jl
xchg
aad
pop
popa
call
jg
mov
cmp
sti
push
fstl
aas
sarb
bnd
and
repnz
cmp
out
push
push
shlb
or
pop
add
jmp
add
rcrl
sub
add
js
adc
mov
mov
repz
out
sahf
popa
pop
sbb
xchg
cli
imul
je
mov
pusha
pop
cli
mov
mov
add
push
iret
fsubrp
nop
ret
sub
in
sbb
bound
jb
testb
dec
mov
cmp
add
add
push
mov
sahf
push
sahf
int
mov
fmulp
sbb
jae
jmp
xchg
bound
jnp
xchg
pusha
add
or
daa
and
push
leave
int
clc
pop
mov
clc
not
bound
cmp
loope
and
sbb
stc
dec
cmp
outsb
lahf
add
adc
je
sti
test
xchg
ret
lods
cmpsl
sub
jns
cmp
mov
xor
test
sbb
jns
lods
adc
bound
cmp
aam
std
and
mov
cmpsb
arpl
repz
xlat
imul
insl
faddl
sub
popf
mov
adc
mov
andl
jno
pop
shrb
js
and
jae
or
jge
das
pop
xor
in
inc
xor
repz
sbb
xchg
cmc
out
out
das
sub
add
in
popa
rclb
xor
push
push
push
jg
fstpt
adc
or
popf
mov
pop
mov
xchg
sbb
cmp
jle
cmc
pop
pusha
outsb
out
mov
pusha
shl
icebp
in
xlat
add
scas
dec
mulb
movsl
xor
pop
adc
jg
or
add
cltd
push
push
cmp
and
jns
fdivl
mov
jns
xchg
pop
pusha
pop
push
shl
incb
insb
pop
decl
mov
xchg
test
aas
repz
imul
adc
and
ss
xchg
lret
arpl
lcall
push
cmp
fndisi(8087
and
dec
loope
xchg
jno
roll
fcomps
fs
xchg
daa
fimuls
rolb
jmp
outsb
mov
stc
push
out
or
cmp
inc
pop
mov
sbb
gs
ficoms
xchg
adc
insl
mov
jp
cmp
xchg
arpl
push
inc
push
xchg
test
in
or
flds
add
jmp
ds
sub
fmuls
pushf
out
dec
dec
cmp
orl
out
mov
inc
cmc
rclb
sbb
sub
or
cltd
pop
jmp
inc
ds
xor
out
jle
insl
nop
das
arpl
stos
jns
push
cli
jle
bound
push
sub
aam
in
dec
out
sarb
mov
mov
testl
pop
punpcklbw
lock
mov
je
and
lret
mov
aaa
je
xchg
fs
outsb
add
fcomp
fstl
insl
jb
hlt
subl
aaa
dec
or
fwait
pop
mov
aam
ret
add
lock
adc
fdivr
scas
int3
add
inc
xchg
mov
inc
lret
and
pop
xchg
lcall
push
cmp
das
das
dec
pushf
pop
pop
jbe
push
filds
mov
cmp
movsl
in
je
int3
int3
mov
pop
test
push
incb
or
mov
stos
outsb
test
or
xor
mov
mov
jle
popa
inc
jb
push
sbb
xchg
push
jl
pop
mov
cmp
cmp
inc
nop
popf
sbb
test
aam
jb
mov
test
fidivs
jno
pop
stos
sbb
ss
and
jns
fucom
aas
je
sti
out
and
xchg
sub
stos
std
add
movsl
mov
or
mov
fdivrl
cmpsl
push
orl
popa
loope
shl
fwait
dec
data16
scas
es
xor
imul
lret
xchg
pop
ds
cmp
mov
movb
inc
adc
inc
adc
les
inc
jnp
das
add
cmp
fidivl
arpl
pusha
popf
mov
add
adc
icebp
cmp
mov
adc
aad
popa
or
cs
rorb
negl
xchg
ret
push
adc
fmul
push
pop
mov
fidivrl
icebp
inc
stos
fstl
mov
sbb
inc
sub
les
dec
imul
pop
aad
bound
jae
fnstcw
vmwrite
cmc
fwait
mov
mov
jbe
mov
stos
jmp
dec
jae
inc
inc
sub
xchg
subl
mov
add
xor
or
mov
push
fiadds
add
fnsave
xchg
mov
daa
mov
pop
mov
stos
adc
lods
cmpsb
inc
decl
out
xchg
xchg
jge
lahf
and
xchg
sti
shll
pop
adc
in
mov
add
jmp
and
aaa
lds
pusha
test
pop
cmp
xlat
xor
hlt
je
int3
xchg
pop
test
in
loop
xor
jbe
dec
test
fcoml
shl
inc
fisubrl
mov
pop
inc
mov
adc
repz
leave
xlat
mov
mov
int3
sub
sbb
lds
sbb
cmpsl
dec
js,pt
mov
test
pop
jmp
pop
and
jge
jmp
insb
insl
sbb
fidivrs
pop
cmpsb
mov
movsl
pop
les
adc
in
test
sti
mov
push
ljmp
lcall
cmpl
inc
mov
es
mov
jno
ffreep
mov
mov
fsts
push
cmp
les
testl
dec
or
subb
imull
ret
cwtl
or
iret
push
inc
inc
sbb
inc
dec
into
mov
or
pop
xchg
xchg
jmp
jb
dec
xor
push
clc
movsl
jae
or
popa
lods
sbb
mov
sbbl
int3
mov
sarl
cltd
shlb
cmpsl
push
push
imul
xor
jbe
or
push
enter
sub
pop
cmpsb
or
adc
int
scas
sub
push
sbb
lcall
popf
imulb
dec
xor
imul
or
nop
add
mov
push
or
addb
das
sub
sbb
sub
xor
daa
lret
and
adcl
shrl
mov
scas
fwait
push
fwait
mov
push
sub
mov
in
mov
inc
jmp
int
mov
and
fisubrl
les
insl
xchg
inc
in
fsubr
sub
xor
and
cmp
frstor
outsl
ret
jbe
cs
xor
ja
scas
daa
sub
outsl
mov
hlt
nop
fdivrs
mov
xchg
mov
sbb
push
and
jne
and
jbe
jmp
or
out
scas
cmp
adc
push
lcall
and
xchg
sbb
popf
ljmp
std
sub
jl
fstl
dec
mov
bnd
pop
cwtl
jg
cli
incb
sbb
mov
mov
fmuls
cli
adc
mov
aad
stos
adc
imul
mov
loope
or
jmp
mov
leave
adc
lea
mov
test
pop
mov
popa
outsl
pop
seta
pop
cltd
outsl
aad
addl
js
popf
subb
std
or
add
sbb
out
sub
or
in
stos
xchg
mov
insb
push
je
gs
mov
add
leave
and
imull
xor
pop
jmp
dec
in
pushf
insl
rorl
push
stos
cltd
decl
clc
clc
iret
lahf
std
mov
push
pop
push
ftst
cltd
int3
xor
cwtl
aaa
xlat
pop
notl
mov
lret
xchg
xchg
inc
pop
and
stos
enter
adc
es
stos
outsb
and
fs
movl
xchg
cmc
lods
push
sti
clc
xor
xchg
lahf
fisubs
das
dec
ss
jecxz
adc
gs
into
leave
jae
add
fiadds
cmp
cs
adcb
aad
or
mov
cld
inc
mov
add
ds
push
jg
sbb
imul
sub
dec
mov
xchg
ljmp
fdivl
push
mov
ret
jo
mov
movsl
mov
sbbb
sbb
loopne
stos
sbb
out
add
sbb
adc
ficoms
ds
orl
add
sub
cmp
ss
xchg
dec
push
push
adc
sarb
xor
in
cmpsl
filds
add
xchg
call
sub
and
test
mov
xor
sbb
std
ljmp
outsb
pop
adc
std
jl
dec
or
mov
lods
push
pop
fldt
gs
adc
in
jmp
mov
test
les
lds
sub
movsl
lea
insb
push
outsl
push
inc
jns
testl
jb
adc
mov
loopne
mov
cmp
loope
jnp
test
pusha
mov
stos
jno
addr16
inc
mov
jl
mov
xchg
aam
fwait
xchg
fisubrs
and
push
out
arpl
fstl
dec
roll
cli
ja
je
cmp
mov
out
cwtl
cmpsl
scas
loope
faddl
addr16
fmull
mov
mov
ret
mov
ret
sub
xchg
dec
dec
sub
mov
cmpb
fstps
push
aas
arpl
sbb
xchg
push
jno
add
inc
inc
jbe
xor
jns
push
jecxz
xchg
fdivl
lret
or
outsb
ficoms
dec
popa
out
fcmovb
xor
icebp
sub
movl
fiaddl
movsl
pop
stc
aam
iret
jno
in
sub
push
xchg
stos
mov
jns
fldl2t
js
lret
xchg
cmp
adc
mov
mov
xor
iret
jecxz
mov
inc
push
mov
lea
push
xor
call
test
out
jmp
push
je
cmp
cs
insl
mov
add
cmpsb
push
sarl
inc
ja
in
ds
inc
dec
add
sub
push
mov
aam
sbb
addb
pop
pusha
add
push
sub
mov
sbb
dec
sbb
sub
imul
ja
fcmovnbe
adc
bound
clc
sub
mov
ret
call
pushf
dec
bound
aad
ljmp
sbb
push
insl
push
adc
xlat
fcmovbe
and
push
outsb
add
cmpsl
insb
lcall
and
lods
mov
int3
inc
pop
and
jno
les
lcall
mov
lahf
mov
xor
push
in
leave
jle,pt
mov
ss
pop
jns
jmp
std
jnp
pop
pop
clc
jo
mov
xchg
dec
push
pop
cmp
sbb
movsl
or
add
cmpsl
adc
ljmp
sub
cmp
jge
int
push
mov
fbstp
or
and
xchg
inc
jns
push
mov
mov
xchg
fbld
sub
xlat
in
mov
fidivrs
aaa
rclb
mov
mov
and
movsl
xchg
add
push
xchg
push
into
push
lcall
ficompl
aaa
addl
and
iret
scas
jo
lcall
andb
fwait
call
int3
add
lret
in
jp
or
dec
stos
add
imul
add
imul
sti
jmp
xchg
ja
push
jmp
clc
or
push
cmc
xchg
push
fs
out
call
outsl
adc
rorl
or
fwait
mov
clc
xchg
data16
jne
or
clc
mov
push
popf
or
sti
shll
je
dec
mov
inc
mov
ret
add
jae
jne
mov
mov
sbb
nop
repnz
add
shl
test
mov
xchg
outsl
inc
push
jle
cltd
push
cmpsl
pop
inc
sub
ja
cmp
xor
loop
sbb
fistps
mov
movsb
xor
mov
push
ret
mov
loope
fs
cmpsl
imul
cmp
ret
push
ds
dec
ret
cmp
xor
and
xchg
ficomps
mov
push
fidivl
lock
mov
enter
loope
xchg
rcrb
jns
pop
stos
cmp
orps
in
lret
mov
push
jbe
inc
fcoms
push
out
hlt
sbb
dec
inc
adc
mov
jl
loop
sbb
insl
pop
adc
jbe
pop
lock
pusha
ffree
push
jp
fistl
inc
and
popf
enter
sahf
xor
aaa
std
mov
mov
push
cwtl
xor
out
mov
sub
mov
adc
xchg
in
into
push
cmp
fcomp
and
fbstp
sbb
subl
stos
dec
aam
and
rolb
or
aad
std
imul
push
jne
mov
and
mov
stos
jmp
fiaddl
bsr
cmpb
mov
lea
or
jl
push
or
jle
in
addr16
iret
scas
adc
mov
inc
mov
cmp
mov
cmc
and
call
jg
shlb
pushf
mov
jae
out
ljmp
mov
iret
mov
inc
jns
ljmp
xor
stos
lea
enter
fwait
jg
mov
cld
ljmp
icebp
add
iret
je
cltd
xchg
int3
push
cltd
cmp
loopne
cmp
and
fcoms
cmp
jbe
fidivs
or
dec
push
xchg
dec
adc
mov
mov
int
sub
test
in
aaa
push
push
or
dec
mov
gs
fidivs
adc
inc
pop
je
adc
push
repnz
scas
decb
xlat
shr
jmp
subl
cmp
mov
fwait
jmp
cmp
xchg
pop
lods
fst
outsl
adc
js
jno
notl
int
icebp
dec
aam
pop
dec
jns
cmpsb
xchg
pushf
mov
fildll
mov
mov
aad
cmp
and
mov
in
nop
fldcw
aad
out
scas
loope
mov
inc
pop
je
loop
xor
mov
loop
push
out
xchg
add
sbb
fdivrs
out
aad
xor
aas
mov
js
cs
decl
ja
jnp
pop
imul
pop
xchg
dec
cmp
mov
mov
cmp
jb
jae
insb
adc
mov
stos
pop
adc
das
or
pop
and
jbe
add
sub
shlb
jl
xchg
jae
cmp
and
pop
lret
pop
ja
sbb
pop
adc
mov
sub
inc
mov
inc
xchg
lret
sbb
mov
insl
insl
sahf
scas
pop
xchg
or
enter
adc
sar
mov
negb
mov
pop
dec
dec
in
fwait
test
sub
loope
lret
clc
push
push
or
icebp
lret
scas
mov
pop
sbb
adc
push
pop
pop
pop
push
pushf
popa
std
popa
shrb
call
inc
shll
inc
icebp
jnp
pusha
dec
mov
jmp
dec
mov
ss
shrb
cwtl
lcall
in
mov
sub
iret
xor
jl
mov
mov
inc
xorb
test
mov
lds
adc
jp
imul
inc
dec
mov
in
lret
ret
mov
lret
outsb
loope
in
enter
sub
mov
lock
sbb
cmp
dec
push
xchg
pop
xchg
and
add
push
mov
adc
add
mov
mov
into
add
mov
pop
loop
ret
out
xor
pop
daa
or
push
xchg
jae
dec
in
xchg
mov
and
lods
ja
loope
sbb
or
adc
or
pop
les
in
xor
push
movsl
ja
mov
dec
out
jns
stos
or
outsl
inc
cltd
rcrb
sbb
xchg
dec
xchg
mulb
push
adc
jno
mov
jmp
push
xorl
push
es
jo
test
mov
cmpsl
pushf
leave
sti
addl
adc
cwtl
js
jno
cmc
jmp
dec
sbbb
mov
fadd
aad
int3
mov
jl
ljmp
inc
call
mov
sub
push
pop
les
xor
push
shll
mov
dec
in
shll
rcll
and
dec
mov
mov
mov
insb
xor
outsl
xor
mov
adc
and
adc
das
scas
imul
add
mov
js
sbb
enter
mov
lcall
test
in
dec
mov
rorb
dec
clc
jbe
cwtl
shlb
cs
dec
jns
fs
lea
inc
pop
and
and
xor
outsb
mov
inc
inc
mov
cli
jbe
movsb
jbe
dec
xor
cmpsl
xor
sbb
int
xchg
push
mov
xchg
sti
add
pop
xchg
mov
dec
pop
arpl
int3
idivb
mov
add
mov
sub
aas
sub
cmp
mov
or
clc
fsubl
fcomp
push
mov
aas
lret
sbb
insl
rcll
inc
loop
rclb
xor
movsb
dec
add
popa
jl
fildll
orl
sarl
push
pop
in
sbbb
sub
xor
jo
mov
xorb
mov
fisttps
icebp
rorb
mov
leave
pop
and
aad
imul
or
dec
add
fisubs
dec
inc
xor
scas
adc
dec
inc
paddusb
lods
xchg
shll
pop
pop
pusha
push
decl
fdivrp
jno
int
xor
in
stos
xchg
mov
pop
push
roll
sti
fs
fsts
repnz
push
inc
sub
dec
ljmp
in
xor
push
xchg
cld
fstl
xchg
sbb
mov
sbb
js
hlt
mov
mov
push
or
mov
and
cmp
cltd
icebp
jne
mov
dec
xor
scas
dec
cmp
in
fwait
int
push
std
in
movsl
fnstcw
xchg
push
pop
repnz
shll
fs
mull
xor
mov
ja
fdivs
loopne
dec
aas
in
jecxz
inc
push
add
mov
xchg
inc
jle
ja
in
test
out
jecxz
sub
inc
sub
xchg
imul
les
sub
push
jne
pop
inc
jbe
call
test
and
xor
add
mov
push
sti
jae
out
out
jle
jb
jns
outsl
xchg
or
nop
xchg
adc
xchg
lds
xchg
mov
loop
in
cltd
jo
xchg
push
push
dec
add
push
mov
cltd
ljmp
dec
mov
enter
sahf
sbb
les
shrl
lock
mov
pop
xchg
aad
incl
lds
insl
mov
sbbl
sub
inc
mov
in
sub
outsb
adc
fcompl
outsl
aaa
movsb
pop
outsl
sub
and
jne
push
out
mov
cld
hlt
cmp
out
in
aas
pop
and
mov
shld
adc
int3
lret
hlt
or
xor
xchg
mov
out
mov
xor
enter
movsb
loop
jmp
leave
and
sub
imul
push
adc
enter
fidivs
jmp
inc
add
jo
inc
aas
pop
mov
iret
mov
daa
xchg
lcall
lahf
lock
leave
incb
and
sbb
xor
lcall
xor
fs
adcl
and
enter
pop
fsubrs
inc
dec
repz
jno
push
cmp
test
add
and
mov
je
dec
jne
out
das
fildl
sahf
jmp
push
pop
and
push
pop
inc
and
fimuls
call
xor
dec
ret
cwtl
push
inc
cwtl
lcall
xchg
or
ficomps
and
push
and
in
loop
mov
call
das
lret
in
fiadds
mov
mov
cmpsl
stc
test
push
jg
movsl
xchg
push
fs
push
and
inc
xchg
cmc
jle
idivl
lret
lret
xchg
jl
arpl
mov
push
add
sar
nop
push
sti
jmp
dec
ret
dec
mov
mov
xchg
lahf
stc
jecxz
and
into
gs
adc
cld
aam
lret
sbb
push
aam
xor
add
xor
addl
mov
mov
std
aaa
mov
fwait
jbe
imul
xor
pop
dec
enter
push
in
xor
repz
mov
ljmp
sti
movsb
les
stos
fwait
ja
das
enter
lret
cmpsb
cmpsl
bound
repz
loop
clc
rol
fs
sbb
pop
push
decb
xor
out
cwtl
or
pop
jmp
mov
fwait
repnz
es
lcall
mov
push
movsl
mov
in
add
ret
into
shrb
sbb
xchg
xor
incl
sub
pop
loope
jmp
pushf
jne
xor
lock
repnz
jns
call
fdivr
les
sbb
mov
mov
and
pop
and
push
lret
or
cmp
adc
int
les
push
cli
shlb
adc
cmpsb
fcomps
pop
inc
fbld
fwait
movsb
mov
add
xchg
mov
enter
push
add
xchg
out
pop
dec
mov
pop
mov
pop
mov
mov
and
imul
lahf
repnz
in
in
mov
or
or
cltd
add
arpl
add
sub
adc
jnp
cmp
adc
push
fwait
mov
aam
jl
and
scas
divb
xor
dec
aad
push
outsl
jae
xchg
scas
pop
adc
adc
cltd
into
push
mov
stc
sub
faddl
and
lds
push
popa
test
shrb
inc
fists
popf
pushf
stos
mov
mov
adc
in
adc
jg
adc
std
adc
mov
pop
das
lcall
cmp
jae
adc
add
out
mov
pop
ror
mov
imul
xor
inc
out
add
pop
ljmp
dec
loope
or
sbb
shlb
iret
iret
js
add
add
push
shll
cmp
stc
int3
out
xor
mov
mov
or
sub
insl
lea
push
mov
sub
repz
loop
popf
push
lahf
mov
push
xchg
or
ljmp
call
rclb
jae
mov
inc
xlat
mov
sub
gs
jnp
cltd
mov
aad
mov
imulb
int3
cmp
cld
xor
pop
xchg
jnp
pop
sbb
lds
test
in
lods
in
xchg
push
mov
and
addr16
inc
stos
je
cmp
bound
xor
dec
fs
test
cmpsl
or
bound
mov
mov
adc
pop
mov
xor
add
cmp
pop
sub
mov
inc
clc
cmp
jne
frstor
sbb
add
scas
cmp
and
out
sub
mov
int3
leave
adc
inc
sbbl
pop
inc
pop
mov
in
inc
lods
or
enter
add
sub
dec
pop
push
push
shll
mov
push
mov
adc
daa
push
inc
sbbl
cmp
jmp
fiadds
mov
xchg
adc
push
cmp
or
mov
das
xchg
negb
mov
cwtl
fwait
push
push
outsl
das
ljmp
je
xor
ja
fs
dec
cmpsb
and
cmpsb
pushf
mov
rcll
arpl
pop
sbbb
push
rcll
cmpsb
aas
scas
sub
mov
dec
scas
and
and
ja
sahf
xor
lea
test
sub
testb
test
dec
pop
sub
sub
in
daa
mov
mov
lret
test
cwtl
shll
mov
ret
jg
call
lods
pxor
ficompl
sub
jl
xor
xchg
add
xor
sub
cmp
insl
or
popa
push
jae
addr16
fmull
pusha
or
adc
fdivrp
js
popf
cltd
hlt
imul
mov
ljmp
mov
fistpll
push
adc
sub
inc
xchg
dec
jl
xor
adc
xor
push
jno
mov
sbb
dec
push
stos
ss
push
lds
add
sub
cwtl
pop
add
inc
pop
ljmp
out
inc
xlat
or
push
xchg
cmc
push
push
shlb
pop
xor
mov
add
in
je
leave
lods
and
jmp
dec
fwait
adc
push
popf
loope
jnp
mov
das
imul
and
enter
mov
test
lods
ret
cmc
lock
filds
xchg
imul
dec
test
in
or
jno
jne
sbb
cmp
jmp
add
push
cmp
clc
inc
in
ficomps
sahf
in
dec
popa
stos
xor
in
lds
mov
xchg
mov
std
movsl
push
jns
in
fadd
sbb
movsl
out
sbb
arpl
inc
cltd
add
ss
jle
sub
arpl
sti
insb
push
mov
adc
gs
enter
jns
cld
movb
cmp
stc
or
add
lret
repnz
mov
mov
dec
dec
cmp
sbb
test
pop
jae
mov
jecxz
jo
add
mov
or
into
jnp
lock
or
mov
and
jg
add
dec
or
ljmp
imul
sub
xchg
mov
mov
or
scas
aad
xor
adc
push
lods
cs
mov
add
mov
pop
or
sub
mov
insl
and
xchg
insb
xchg
push
jnp
ficoms
xlat
xchg
adc
adc
jge
cmp
aam
pushf
stos
jbe
mov
imul
lock
add
xor
xor
in
popf
lcall
or
je
popf
sbb
and
lret
mov
cmpsb
adcl
mov
mov
incl
mov
jmp
mov
mov
out
shrl
pop
fdivrs
push
dec
xor
xor
mov
call
xlat
and
cs
mov
cld
pop
rcrb
and
mov
jno
mov
dec
dec
bound
lret
sub
jecxz
mov
sahf
dec
pusha
aaa
int
sbb
xlat
mov
out
in
std
ret
cmpb
mov
inc
or
js
mov
and
fsubrs
repnz
stc
shll
pop
insb
sbbl
movb
scas
icebp
push
inc
pop
in
xor
into
out
mov
rcrb
das
mov
or
fdivrl
jge
aam
aad
and
mov
hlt
fidivrl
push
xchg
das
jne
aam
fcmovnu
xor
sub
sbb
pop
push
iret
sbb
inc
jge
out
inc
mov
jbe
or
sbb
cmp
cwtl
jge
mov
ja
xchg
dec
cmpsl
loop
dec
in
sub
gs
and
in
mov
int
scas
xchg
cwtl
cmpsl
push
gs
std
movsb
aad
sub
xchg
mov
xchg
int
movsl
std
dec
popl
das
mov
cmpsb
decl
js
lea
insl
stos
dec
test
push
shrb
inc
fs
xchg
mov
nop
call
mov
jns
fwait
sbb
push
mov
xor
or
jge
pop
vpunpckhbw
mov
fnsave
add
xor
negl
outsl
lahf
or
sbb
data16
stos
jge
mov
cmp
pop
adc
pop
mov
or
ljmp
and
arpl
push
aas
push
push
sub
xchg
sbb
xor
mov
int
lahf
inc
sti
fcoms
sub
test
cmpsl
cmpsl
rorl
jbe
aad
sbb
test
mov
jne
pusha
std
cld
xchg
in
mov
pop
push
pop
and
daa
jne
or
pop
mov
nop
push
xor
bound
mov
xchg
adc
enter
movsb
inc
xor
rcll
fnstsw
xchg
inc
cmp
cltd
in
fsubl
jno
push
dec
lcall
mov
inc
je
mov
xchg
mov
jge
xorb
jl
fildll
clc
pushf
popa
sbb
lods
inc
jbe
mov
cltd
rorb
add
mov
push
test
mov
popf
dec
or
push
sbb
xor
in
adc
cmp
or
je
mov
cmp
sub
lock
sub
cmp
inc
ret
cmp
jnp
idivb
stc
scas
insb
jns
pop
int
gs
push
pop
jg
add
mov
cwtl
loope
pop
or
mov
cli
push
add
bnd
add
mov
dec
es
mov
jg
inc
push
xor
add
loope
xchg
jge
dec
mov
movsl
and
ret
aad
sub
mov
stc
out
push
pop
insl
bound
inc
or
jbe
and
push
bound
call
mov
and
je
cltd
inc
icebp
push
cwtl
mov
add
pop
and
push
or
jp
aam
dec
lret
insl
fisubrl
inc
mov
pop
js
ds
ja
or
sub
inc
fwait
das
out
mov
mov
sbb
or
sti
xchg
cli
or
pop
sarl
mov
sub
jns
mov
mov
js
mov
add
dec
aam
movsb
iret
insb
jecxz
scas
jbe
mov
in
push
enter
jo
imul
or
lea
adc
out
out
pop
ficoms
imul
in
nop
ljmp
movaps
repnz
dec
dec
xchg
lret
mov
ja
pop
out
jmp
fimull
aas
nop
mov
outsl
dec
xor
test
leave
mov
add
jnp
xor
xchg
pop
repnz
jg
xchg
ds
jb
xor
rcrl
mov
inc
jbe
rcl
mov
xchg
fs
or
add
or
sub
mov
push
inc
and
dec
rcrb
mov
adc
loop
xchg
pop
jle
je
ret
push
pop
fxch
mov
test
add
bound
jne
aam
decb
jno
xchg
mov
ret
sub
adc
movsb
es
iret
ret
inc
addr16
ja
ret
or
push
and
or
or
je
dec
mov
inc
jne
mov
arpl
std
daa
mov
fwait
or
xorl
xchg
and
cwtl
int3
sub
popf
test
imul
aaa
cmp
hlt
in
mov
sub
xor
dec
iret
stos
sbb
sarl
andb
lea
mov
test
add
sub
mov
mov
adc
mov
lods
sub
dec
inc
jmp
out
cmp
mov
pop
cmpsb
xchg
test
faddl
sub
push
ljmp
test
xchg
cld
clc
jns
mov
mov
mov
inc
shl
cmp
mov
pushf
push
sub
and
dec
mov
pop
ja
les
jecxz
inc
cmpsb
outsl
lret
mov
mov
xchg
adc
xchg
jle
and
mov
scas
mov
ret
sub
inc
subb
lahf
cltd
test
adc
iret
jg
lret
push
sub
shl
std
mov
fucomip
out
lock
test
add
ja
loop
nop
add
aad
js
inc
out
call
in
push
popf
pop
enter
hlt
sbb
shr
and
popl
lret
jmp
sub
pop
lcall
xor
dec
inc
push
inc
adc
jge
js
pusha
scas
adc
mov
jb
inc
inc
ljmp
aas
mov
xor
cwtl
out
loop
and
mov
xchg
and
push
xchg
xchg
mov
fprem
fdivrl
jns
js
fsub
mov
mov
mov
xlat
sbb
lahf
fisubs
pop
loopne
out
fmul
lock
jnp
cmp
shr
dec
aaa
xor
xchg
dec
sub
cmp
inc
mov
enter
rcll
xor
xchg
sbb
ja
out
shll
sbb
fdivl
data16
hlt
mov
fmull
daa
ja
jge
loop
leave
fwait
cmp
or
xor
enter
jge
imul
or
outsl
in
cmp
mov
aaa
into
sbb
popw
xchg
enter
in
shlb
pop
lcall
fimull
das
jbe
cmpsb
dec
rclb
or
enter
roll
out
cmpb
mov
dec
jg
xor
xor
arpl
and
je
inc
lahf
cmp
clc
ljmp
and
popa
pop
lahf
xchg
cmpsb
pop
jo
imul
and
mov
call
mov
push
push
gs
adc
sub
xor
push
scas
loop
xchg
sub
call
inc
call
popa
pop
adc
pop
pop
jle
iret
stos
fimuls
nop
fisubs
jne
inc
sbb
push
call
out
fisubrl
shrl
mov
sbb
pop
ljmp
daa
dec
push
jl
and
adc
pushf
ret
xor
push
mov
xor
jno
loopne
test
mov
cltd
andb
mov
scas
and
sahf
popa
aas
test
mov
mov
push
fcomps
stos
mov
out
lods
pop
lods
mov
xchg
jno
xor
mov
aaa
adc
std
lea
jns
subb
jl
lahf
repz
rol
mov
mov
or
xlat
sub
sub
dec
push
add
enter
and
es
shlb
jns
bound
int3
faddl
dec
cs
loop
test
fnstcw
pop
push
daa
lahf
int3
in
inc
fdivs
cmp
and
jo
xchg
ja
call
or
cbtw
fsubs
arpl
jae
sub
dec
add
inc
cmp
daa
push
leave
or
adc
lock
pop
fucomi
pop
fbstp
in
subb
mov
into
xor
shll
imul
adc
cmp
push
pop
movsl
incl
dec
and
shlb
aas
add
movsb
pop
adc
add
scas
clc
mov
out
stos
sbb
jo
imul
inc
cmp
jecxz
addr16
ja
add
xchg
dec
lds
sbb
mov
mov
ret
daa
adc
sbb
data16
insl
mov
ljmp
mov
fisubrs
mov
loop
rcrb
fs
outsb
scas
jge
push
gs
sbb
mov
mov
fidivrs
jge
in
sarl
mov
jmp
gs
leave
orb
fimuls
jle
inc
jg
dec
movsl
cmpsl
aas
aad
push
pop
addb
mov
stos
insl
inc
outsb
les
inc
rolb
inc
std
cmpsl
fldt
test
fisubrs
test
arpl
jo
mov
lahf
jle
gs
push
jbe
mov
lods
fnstsw
movsb
je
sbb
std
mov
sub
push
xchg
sub
in
sbb
cs
xchg
pop
repz
dec
cs
dec
xchg
test
push
xor
inc
jecxz
aaa
lret
js
mov
mov
call
icebp
subl
dec
inc
sbb
shrl
jo
shlb
sbb
pop
ret
into
scas
mov
insl
fbstp
xor
or
jge
inc
jp
vhsubpd
inc
lea
nop
ret
add
push
push
push
add
pop
sbb
and
mov
lods
sub
hlt
sbb
mov
sbb
sbb
xor
cs
repz
stc
jnp
stc
pop
jmp
cld
clc
loope
add
push
jmp
cmc
inc
je
inc
rcl
rcrl
pop
inc
stos
xchg
cmpsb
push
rolb
mov
inc
pop
pop
jle
insb
or
adc
mov
enter
bound
arpl
dec
dec
imul
or
xchg
mov
or
jle
cmp
push
jge
fisubs
add
jns
loop
cltd
rcl
into
sub
pushf
cmpsl
iret
push
sahf
cs
stos
iret
cmp
mov
fldt
sub
dec
xchg
add
ret
dec
inc
and
subb
mov
out
and
xor
cwtl
pop
cmp
mov
jno
jns
jo
xchg
dec
lret
xor
mov
mov
stos
out
inc
sub
imull
push
cld
pop
inc
adc
lds
adc
cmpsl
movsb
or
jl
mov
imul
adc
in
jb
lret
in
cwtl
xor
and
xchg
xchg
mov
mov
ds
imulb
jnp
xchg
and
add
mov
rolb
loop
adcl
scas
adc
inc
fs
adcb
and
xchg
push
fisttps
adc
addr16
push
pop
fiadds
mov
add
notl
jecxz
dec
or
pop
mov
inc
dec
cmpsl
push
push
pop
insb
aaa
or
dec
push
xor
mov
pushl
mull
cmp
pop
lock
jns
rolb
inc
lret
adc
push
imul
subl
jne
mov
ljmp
test
pusha
pop
mov
inc
or
pop
jge
aas
out
inc
jmp
and
je
scas
stos
push
movsl
push
xchg
rorl
scas
lods
pop
sbb
aas
les
enter
jb
xchg
movsb
aam
cmp
xor
mov
ror
pop
mov
add
xor
lds
cld
add
lcall
imul
xchg
fwait
gs
insb
jbe
jle
cs
add
and
push
xchg
jl
pop
dec
mov
push
xor
fcom
mov
loope
fwait
aad
jp
push
dec
push
jmp
adc
stos
sbb
xor
cmp
std
jmp
dec
sbb
push
jmp
test
rcll
lods
icebp
push
lcall
pop
scas
ljmp
pushf
outsl
mov
loopne
imul
scas
jg
ffreep
pop
xlat
mov
mov
xchg
xchg
pop
adc
iret
enter
pop
push
add
pop
push
inc
mov
es
jge
sbb
out
in
xor
flds
and
mov
inc
jle
pop
xor
or
neg
outsl
repz
ds
cs
jns
in
mov
fcmovnu
jle
shrb
outsl
in
adc
jl
stos
mov
inc
imul
dec
and
xorb
fwait
dec
cmc
and
adc
test
add
xor
mov
addr16
dec
push
inc
stc
inc
test
jnp
xor
jmp
enter
push
mov
arpl
pop
fwait
addb
pop
push
jns
jmp
push
xchg
shrb
mov
xorb
js
test
cmc
lcall
xlat
push
fsubr
outsl
jns
mov
fistpll
aas
dec
fistpl
mov
iret
xor
leave
xchg
sahf
push
push
jecxz
xchg
cmpsl
test
insb
push
jg
jp
mov
and
push
ret
push
nop
cld
mov
lea
shlb
popa
push
fcoml
pop
cmc
fsubrl
push
lock
jg
mov
das
sbb
pop
mov
lock
lods
sahf
mov
adc
push
shrl
les
rcll
orb
sbb
pop
mov
pushf
shlb
fwait
dec
mov
xchg
inc
mov
loope
jmp
xor
out
std
das
fs
sbb
xor
mov
sbb
lahf
out
jo
fwait
loop
or
sub
adc
test
popf
dec
xor
nop
inc
xor
ljmp
outsl
stc
sbb
add
cli
dec
das
iret
out
leave
sub
mov
rcrl
outsb
pop
xchg
shrl
pop
inc
cld
dec
mov
lods
lcall
cmpsl
pop
jge,pt
sub
jns
cmp
jmp
and
dec
push
or
lahf
dec
pop
cmp
add
loop
mov
and
push
dec
mull
nop
bound
adc
pop
nopl
mulb
sti
lret
fbld
fstps
std
jmp
pop
sbb
dec
push
pop
adc
dec
xchg
pop
out
xchg
inc
ret
xor
lock
mov
jnp
pop
jl
test
je
fcmovnu
jno
lods
cli
aas
leave
cltd
lret
dec
xchg
mov
pop
adc
sbb
push
jl
nop
or
adc
pop
sbb
mov
xchg
push
jnp
sub
loopne
push
aad
jmp
enter
push
xchg
cmp
daa
mov
stc
xchg
adc
jp
mov
lods
repnz
and
push
sbb
sbb
xor
push
jbe
ja
sub
adc
sahf
mov
test
add
cs
mov
add
jl
scas
clc
xchg
xor
in
mov
insl
jno
fwait
ja
imul
mov
mov
and
movsb
push
dec
loop
outsl
or
notb
nop
pop
addr16
mov
imul
mov
orb
pop
mov
mov
push
push
push
pop
xor
pop
ljmp
movsb
jo
cmpl
imul
xchg
scas
jne
or
mov
repz
or
jb
sub
ss
push
lea
sahf
cltd
lds
jp
sbb
nop
sbb
int
mov
jp
cltd
pop
les
xchg
out
leave
popa
fisttps
xor
cmp
sub
sti
jns
inc
aas
jnp
mov
outsl
xor
sti
mov
xor
xchg
loop
dec
adc
adc
mov
xor
rorb
sbbl
test
push
adc
sbb
xchg
mov
adc
in
sub
leave
insb
rclb
sti
pop
sub
inc
dec
mov
xchg
sti
xchg
sbb
fwait
or
sbb
or
lods
push
or
and
int
leave
in
repnz
cwtl
ss
and
inc
push
push
mov
pop
xor
mov
sbb
dec
daa
shr
movsb
add
mov
mov
sarb
xchg
mov
out
add
nop
dec
bsr
xchg
adc
and
inc
cs
jbe
mov
sub
repz
fstl
lret
push
pop
cltd
adc
stos
in
test
pop
pinsrw
mov
dec
jne
xlat
hlt
or
ljmp
stos
add
adc
pop
mov
mov
inc
test
shl
xchg
js
movsl
push
sub
dec
mov
xchg
cmp
mov
adc
subb
mov
or
pop
jnp
adc
sub
mov
je
mov
pushf
pop
inc
and
test
mov
xchg
imul
jnp
sbb
xchg
jbe
lret
jge
xor
sbb
ja
push
dec
push
and
or
mov
rolb
inc
push
jo
les
cmp
iret
push
and
loopne
fwait
lret
sbb
mov
repz
sbb
pop
push
sub
inc
aas
cltd
xor
stos
adc
xchg
fiaddl
fwait
cmpsl
and
adc
mov
ljmp
sbbl
dec
divl
and
iret
sbb
stos
stc
fcompl
jge
push
test
push
aaa
mov
sub
sub
and
shll
mov
jnp
and
es
aam
jne
mov
popa
add
icebp
inc
cmpsb
dec
leave
fwait
cs
ficoms
lods
mov
xchg
sti
mov
xchg
cmp
adc
sbb
mov
mov
mov
mov
inc
sub
or
aam
mov
cmp
ss
ss
js
lahf
xor
sub
pushf
mov
jnp
aad
cmp
mov
xor
mov
lea
clc
dec
xor
mov
loope
xor
add
cmp
sbb
push
stos
sub
mov
flds
pop
adc
int
fucomp
push
fdivs
xlat
pushf
xor
fmull
rcll
push
mov
xor
in
push
cltd
daa
data16
sub
in
fs
dec
popf
repnz
outsl
xor
jge
std
add
mov
cmp
adc
hlt
cmp
leave
lea
push
mov
lock
xor
sti
push
cltd
scas
cmp
add
cmp
outsb
sub
add
sbb
jb
push
movsl
jbe
leave
mov
push
movsb
mov
ss
mov
xchg
and
jo
xchg
movsb
jmp
scas
mov
mov
ss
mov
pop
loope
mov
sti
lcall
and
js
insl
ret
cs
loope
shlb
add
push
pop
sub
push
vpunpckhdq
mov
lcall
cld
imul
or
jno
out
ljmp
hlt
sbb
imul
push
int3
fimull
or
enter
in
sti
cmp
mov
push
jns
jae
sarb
shrb
mov
ret
push
lret
les
cld
push
loope
stos
hlt
adc
pushf
sub
pop
dec
pushf
inc
or
mov
rcll
push
in
sbb
pushf
and
inc
rcr
popf
outsb
lahf
mov
jp
xor
mov
outsl
or
in
mov
enter
lods
repz
insl
xor
add
mov
stc
jg
ja
mov
mov
das
leave
iret
sahf
push
sbb
mov
and
mov
adc
or
mov
xlat
imul
mov
popf
cli
cmpsb
xchg
gs
pop
adc
int
mov
es
bound
repnz
addl
xor
cmpl
imul
test
outsl
sub
out
mov
mov
sub
pop
inc
push
lods
push
cmp
mov
sbb
insl
inc
inc
repnz
mov
push
addb
xor
sub
subl
enter
shrb
sub
popa
icebp
lcall
arpl
pop
cs
aad
or
lret
ja
jbe
cmpb
inc
out
daa
js
xor
xor
jb
mov
rorb
xchg
lods
testl
enter
je
xchg
subl
cmp
adc
add
adc
mov
push
cmpsb
cmpb
inc
jecxz
xor
jb
pusha
shll
jns
ret
cmp
sub
xchg
add
mov
test
xchg
loope
sbb
sbb
or
imul
push
mov
movb
loopne
inc
or
jae
movsl
mov
mov
stos
push
xchg
jb
or
das
cltd
aas
cmp
cmp
add
inc
push
fwait
mov
stos
adc
int3
xlat
sub
test
fisttpl
inc
test
and
push
faddl
repz
jp
loopne
sub
in
insb
icebp
das
iret
test
mov
inc
push
push
hlt
jl
aam
in
inc
ffreep
in
leave
fs
add
cmpsb
adc
aam
scas
xchg
jno
push
dec
jg
lcall
out
mov
ljmp
ss
fwait
push
mov
dec
sti
inc
mov
cmp
ret
cwtl
pop
pop
xlat
pop
push
mov
xchg
cmp
and
inc
push
lcall
lcall
iret
stos
test
repnz
mov
mulb
lcall
push
or
movsb
popf
sti
dec
xchg
add
mov
mov
add
push
xchg
subb
dec
imul
push
mov
shll
xchg
jge
push
mov
jnp
mov
xchg
loop
jge
pop
in
xchg
inc
sub
xchg
inc
das
mov
xchg
sti
outsl
or
push
or
aam
ss
rclb
dec
orl
aaa
sub
add
pop
xchg
mov
pavgw
mov
jp
hlt
inc
repz
test
inc
insb
enter
cmp
test
sbb
int
xor
dec
cmc
daa
mov
adc
mov
xor
sarl
aad
push
inc
xchg
movsl
stos
les
mov
xchg
jl
pushl
and
repz
notb
addr16
xchg
adc
push
arpl
hlt
xor
icebp
ljmp
xor
cmpsb
adcb
jg
cld
sub
xor
scas
arpl
ret
pop
popa
pop
aaa
cmpb
lahf
sub
gs
dec
inc
inc
lret
test
test
dec
sahf
subb
jge
adc
ljmp
xor
test
jb
lret
insl
jp
mov
nop
shr
xor
dec
je
xor
mov
mov
xchg
or
lret
mov
lcall
pop
popfw
lret
mov
movsl
idivb
xor
adc
push
adc
xchg
ds
add
out
insb
movb
add
fs
jae
add
add
ja
cmp
shl
xor
sarl
sub
mov
mov
fildll
pop
mov
inc
cwtl
iret
loopne
lret
jp
and
repz
inc
xor
mov
shll
roll
pusha
orl
xchg
pop
and
fucomip
xchg
popa
mov
lods
dec
arpl
xlat
fistpll
cmp
mov
int
inc
pop
stos
xchg
jb
ret
dec
mov
movsb
stc
icebp
xchg
cwtl
mov
mov
cli
js
jae
cmp
mov
pusha
pop
adc
stc
daa
xlat
inc
push
add
dec
sub
fbstp
call
mov
dec
addl
cmp
imulb
idivb
faddl
mov
jb
xchg
and
ja
shr
test
lds
sub
fwait
add
mov
out
test
add
mov
sub
cwtl
ret
jo
mov
cmpsl
xor
jnp
imul
pop
and
lahf
lahf
mov
loopne
das
pop
xor
mov
xchg
pushf
das
jbe
or
into
cmp
push
cmc
cmpsb
ret
adc
retw
sbb
pusha
xor
add
aaa
mov
adc
mov
pushf
stos
ficoml
adc
std
sahf
jns,pn
leave
aad
push
dec
std
fsubl
rorb
cmc
test
xchg
les
out
dec
je
mov
xor
add
es
in
cmp
ja
int
lret
dec
lea
push
int3
cmp
push
jnp
popf
pusha
jg
add
push
cmpsb
mov
or
es
lock
xor
andl
cmp
popa
push
in
clc
imul
icebp
movb
lret
adc
mov
jns
push
or
jae
mov
sub
mov
mov
or
cmp
mov
jns
test
lea
jl
xchg
xchg
fmull
lea
fs
jb
dec
inc
ljmp
xchg
pop
fdivl
xlat
in
pushf
hlt
add
call
jno
popa
mov
inc
ret
test
addr16
lcall
cltd
jae
aad
xor
jp
iret
xchg
orb
or
adc
popf
mov
add
adc
xchg
int3
push
outsl
or
jbe
leave
movsb
sub
jo
popf
mov
push
pop
mov
or
mov
jp
aam
inc
adc
and
pop
shrb
sub
push
bound
mov
insl
push
jno
stos
lahf
mov
je
fbld
jo
in
inc
outsb
pop
das
sub
inc
data16
test
mov
rcrb
cmp
test
jmp
inc
push
add
cwtl
jae
jge
leave
cmp
test
mov
hlt
lods
ss
xchg
in
stc
jmp
jmp
lea
shrb
cmp
mov
clc
cltd
jne
pop
adc
mov
cltd
mov
gs
push
movb
andl
rorb
mov
add
push
xor
mov
dec
lods
data16
lods
jle
dec
dec
pop
mov
stos
and
add
mov
aad
cmp
stos
js
lds
sub
lds
pop
inc
mov
mov
out
and
rorb
adcl
std
mov
add
fiaddl
outsb
cmpsb
aam
mov
xchg
movsl
pop
mov
nop
test
ret
test
repnz
dec
lahf
addr16
call
pop
inc
and
sahf
pop
je
test
jbe
out
out
and
push
xor
insb
aam
cs
test
aad
xchg
inc
cwtl
pusha
mov
cmc
data16
push
or
dec
outsl
sahf
repnz
mov
cmp
xchg
and
int
pop
lods
hlt
and
sub
xchg
add
dec
stos
mov
inc
stos
movsb
jo
cmp
mov
sub
fidivrs
cmc
insb
sub
pop
addl
push
inc
adc
cmp
das
cli
pop
sub
ret
cmpsb
mov
sbb
cli
fwait
cmp
cmovs
push
arpl
scas
mov
push
jp
cmp
imul
inc
cmp
or
les
add
ficomps
inc
jbe
leave
mov
cmc
div
xchg
jmp
repz
dec
cmp
xor
test
es
mov
aas
cltd
aas
or
dec
movsb
inc
sbb
fnstenv
pop
outsb
lcall
dec
xchg
fs
xchg
inc
fmul
loop
pop
arpl
inc
xchg
pop
lods
cltd
cmpl
sub
mov
add
cwtl
ret
cmp
mov
imul
clc
and
push
jge
jbe
ds
lods
ffreep
sub
sub
in
lds
mov
adcb
jle
cmp
or
mov
rorl
xlat
cltd
mov
add
pop
push
and
outsl
or
push
xchg
add
hlt
iret
jl
push
sub
and
outsb
add
mov
add
pop
cmp
cld
mov
inc
ja
mov
mov
out
ret
movsl
test
fsubl
or
lret
fs
movb
movb
js
dec
mov
test
xchg
mov
jmp
lahf
sub
sub
lods
or
call
mov
xor
lcall
add
jl
outsb
mov
lds
jb
jg
push
outsb
xchg
int3
or
enter
icebp
fdivrl
adc
out
scas
sahf
cmp
xor
dec
gs
pop
jecxz
or
insb
push
jg
dec
jno
insb
aaa
or
inc
xchg
mov
repz
jge
pop
je
mov
mov
mov
arpl
xor
dec
cmp
shrb
sub
mov
adc
aas
sbb
fwait
xor
leave
mov
rclb
pop
jne
js
mov
fcomps
je
mov
lds
dec
fcompl
add
les
loope
enter
mov
sti
fiadds
sub
pusha
ljmp
scas
push
and
dec
pop
in
mov
inc
sahf
ds
bound
mov
fucomp
mov
mov
mov
mov
sub
pushf
lock
push
xchg
aas
push
test
out
rcrl
jne
movsl
jmp
fisttpll
jp
stos
jo
add
push
fisttpl
cmc
cmp
or
out
sub
js
out
xchg
mov
ret
xlat
decb
mov
xor
addr16
in
cmp
adc
hlt
or
xchg
jo
mov
cmp
cmp
xchg
fdivrl
mov
dec
mov
add
push
cmp
fistl
ret
add
cmp
addb
lret
outsb
cmpb
out
stc
roll
imul
xor
ret
and
jge
cld
fucomp
popl
or
push
push
decl
jge
ds
add
xlat
lods
insl
add
cmp
and
jl
xor
jbe
scas
adc
inc
sahf
push
mov
mov
stc
test
hlt
xchg
cmp
xchg
jle
int
push
add
mov
testb
into
mull
and
mov
out
sub
pop
push
xchg
pop
daa
add
int3
scas
pop
jno
mov
cmp
push
aam
jb
sahf
jmp
pop
aaa
out
mov
cli
xchg
or
push
imul
dec
inc
rcr
out
add
pop
clc
adc
mov
ja
dec
imul
xchg
dec
dec
xchg
xchg
cmc
xchg
xchg
add
sbb
mov
fidivs
adc
pop
ficomps
daa
ret
lea
push
inc
dec
mov
dec
jae
movsb
or
push
push
xor
jno
das
xchg
jnp
cmpsl
shlb
mov
mov
int
or
orb
pop
lahf
mov
out
mov
xchg
cmpsl
iret
std
test
jecxz
cmp
xor
mov
popa
ja
ficomps
jae
scas
xchg
les
push
mov
mov
mov
inc
jnp
xor
cmp
xor
movsb
je
sub
shll
out
or
enter
leave
xor
ljmp
xchg
xor
cld
fwait
stos
jno
mov
in
cmp
rolb
sbb
imul
scas
xchg
lds
push
xchg
out
sbb
inc
mov
sbb
mov
outsl
fsubrs
aad
cld
dec
push
call
popa
fs
sub
fistpl
inc
lahf
mov
jns
movsl
aas
lods
xchg
test
divl
mov
xchg
aad
lcall
ds
inc
test
in
or
imul
outsb
push
sbb
gs
mov
jge
fucom
xorl
add
inc
jo
ficoms
jne
jb
popf
cmpsl
dec
push
cwtl
add
ret
std
inc
sbb
rcpps
or
add
jbe
into
stc
adc
or
int3
sub
push
jmp
push
push
xor
push
loope
sbb
fdivrl
cmpsl
and
inc
stos
scas
int
dec
mov
cld
sbb
hlt
push
loope
adc
xchg
test
sbb
lcall
xor
xchg
insb
dec
mov
jae
cli
push
push
xchg
xor
icebp
add
divl
push
pushl
ljmp
mov
std
adc
pop
sub
out
das
mov
xchg
and
je
movsl
push
adc
add
ret
xor
mov
push
sbbb
repnz
shl
shl
pushf
fwait
cltd
push
add
cs
cmp
pop
pop
mov
dec
jns
pop
or
cvtps2pd
push
dec
movsl
pop
inc
sub
sbb
clc
mov
aas
xchg
je
sub
subb
jne
rorl
sub
in
adcb
js
push
adc
and
mov
or
xchg
rorl
xor
mov
jmp
mov
arpl
cmp
sti
aas
pop
sub
and
les
cltd
out
xor
jge
xlat
test
xchg
iret
outsl
push
mov
sub
jb
iret
adc
cltd
test
movsl
rclb
or
in
aas
cmp
xchg
mov
lret
and
lds
dec
mov
test
out
subl
insl
adc
mov
add
testl
movsb
and
jnp
into
and
dec
test
nop
mov
jo
rol
mov
xchg
fidivrl
xor
ret
icebp
pop
sahf
cltd
js
adc
mov
pop
and
js
push
shll
xchg
shlb
jns
outsb
and
and
push
loope
jno
out
jbe
cmp
pop
lret
shrl
add
xchg
mov
idivb
sti
adc
adc
pop
mov
xchg
mov
push
mov
add
mov
add
es
jge
jge
sbb
stc
fcomp
jo
mov
mov
hlt
jne
mov
cmp
pop
pop
jb
cli
ljmp
ja
aad
jecxz
js
push
stos
or
jl
fstpl
mov
xchg
les
pshufhw
subl
dec
lods
mov
cmp
jnp
dec
or
add
pop
cmp
adc
js
jne
inc
clc
sbb
mov
es
cli
jns
xchg
cmp
stos
cmp
push
into
rcl
lds
dec
or
xor
adc
loop
scas
add
ds
cltd
nop
ret
ret
dec
in
gs
pop
popf
fcoms
dec
xchg
add
dec
cmpsb
pop
dec
idivl
dec
into
xlat
inc
adc
int
jl
cwtl
fmulp
mov
icebp
repnz
push
test
lods
out
ficomps
fs
jmp
push
test
jno
test
and
jno
jmp
inc
add
in
fs
into
cmp
xlat
daa
in
jmp
inc
add
xor
or
in
inc
push
dec
dec
outsb
push
jle
inc
jge
push
inc
shrl
popl
orl
rcr
and
rcrb
and
sbb
fistps
pop
cmp
addr16
mov
lods
mov
clc
add
or
inc
cmp
lahf
aam
lret
lea
int
pop
mov
divl
pop
pop
push
mov
jmp
cmp
mov
ror
mov
inc
push
das
and
or
pop
cmpsl
jbe
cmpsl
cs
xchg
in
outsb
rolb
jne
iret
imul
lock
push
push
sbb
xorl
sub
mov
sbb
and
mov
jg
scas
sub
sub
bound
lret
mov
add
mov
pusha
outsl
lahf
adc
inc
push
or
je
add
jg
fimull
repnz
outsl
add
jne
out
out
insb
xor
push
xor
xor
andl
cmp
clc
ret
mov
xchg
fstl
cmpsl
outsb
arpl
jl
xchg
adc
in
mov
lods
mov
xor
adc
mov
hlt
fidivrs
jnp
call
mov
push
std
jge
ljmp
testb
ds
or
or
sbb
sbb
lods
pop
int
iret
cmpsb
or
icebp
push
nop
or
pop
insb
in
mov
loopne
arpl
inc
dec
push
fisttpll
lods
mov
test
orl
lds
negb
mov
xor
push
fs
fidivs
add
aas
je
mov
xchg
push
jo
ret
pop
ljmp
or
push
lods
fbstp
adc
and
add
jne
or
int3
out
dec
ror
pop
mov
and
js
out
pop
addl
cmovnp
repz
sar
int3
sahf
inc
daa
mov
sbbb
inc
sbbl
xchg
sub
inc
jbe
mov
mov
sub
ljmp
fnstenv
lods
icebp
repz
pop
test
fistl
adc
mov
and
pushf
lret
arpl
cmpsb
arpl
xchg
stc
add
cmp
outsl
or
sub
cmp
stos
mov
shl
out
jmp
sbb
push
fnsave
insb
adc
inc
or
pusha
or
sbb
pop
pop
clc
movl
and
xchg
or
loop
das
pop
or
xchg
pop
rcll
or
dec
aas
pop
stc
lods
adc
testl
mov
mov
mov
es
outsl
gs
cmpsl
and
inc
testl
xlat
sbb
pop
xor
ret
test
jno
orb
js
and
rolb
nop
inc
test
sbb
pusha
inc
add
adc
push
enter
fcmovnb
scas
fcoml
lock
pop
jne
sbb
out
mov
and
popa
mov
jmp
mov
mov
xor
divl
int
sbbb
push
loopne
xor
div
xchg
pop
sbb
sbb
int3
inc
in
leave
outsl
gs
push
push
lret
jl
add
fbld
int
mov
sub
cmp
mov
mov
cmpsb
popf
xor
data16
xor
loopne
out
fcmovnbe
inc
jne
dec
jo
push
mov
inc
adc
add
shlb
add
les
inc
mov
dec
inc
xor
add
rcrb
imul
mov
xchg
repnz
fnsetpm(287
mov
dec
mov
ror
je
sbb
lret
mov
lret
xchg
pop
inc
pop
out
jae
jmp
shl
or
ret
js
xor
pop
out
test
dec
lahf
add
mov
ret
dec
rolb
inc
js
jle
inc
pop
rorb
push
lock
cmp
adc
adc
push
push
out
hlt
ds
xchg
stc
inc
out
mov
add
push
jo
xchg
filds
sbb
or
data16
lea
mov
jno
mov
pop
test
jb
inc
pusha
mov
pop
jns
xor
mov
out
push
test
fs
dec
fimuls
ret
fnsave
push
imul
add
test
mov
add
into
lret
mov
sbb
pop
std
into
fmull
rcrl
test
incb
inc
add
loope
lods
std
daa
pop
shl
adc
push
mov
inc
fildll
pop
gs
test
icebp
adc
push
add
in
cmp
test
cmpsb
xlat
inc
pop
out
pop
popa
das
stc
clc
push
pop
lret
stc
dec
fcoms
push
std
cltd
jb
inc
push
sub
out
mov
xchg
mov
movsb
rclb
jne
xchg
jo
jg
lret
jge
push
mov
sbb
into
insl
mul
push
xchg
pop
sbb
test
push
decb
pushf
idivb
scas
lahf
add
fsubrs
inc
push
shr
mov
xchg
xor
ss
mov
and
push
enter
mov
fxch
mov
in
inc
pop
sbb
divb
dec
ficoms
bnd
pop
pop
xor
or
inc
pop
iret
negb
and
pop
cwtl
test
sahf
jg
das
cwtl
into
inc
test
inc
xor
jbe
adc
icebp
cmpsl
pop
mov
sbb
in
mov
mov
mov
add
lret
insl
loopne
dec
push
rcrl
rclb
mov
nop
fmuls
mov
mov
and
mov
ficoms
fcompl
sbb
sbb
mov
mov
xor
and
out
inc
xchg
stos
xchg
dec
jecxz
xchg
dec
inc
in
jl
push
push
loopne
cwtl
xor
in
inc
daa
addl
push
cmpsb
adc
movsb
pop
and
mov
jge
xchg
xlat
sub
inc
xchg
shrl
lds
mov
fwait
mov
jno
sbb
cwtl
sbb
dec
xor
cmp
je
enter
cmp
jb
test
loope
loop
mov
inc
add
fcompl
pusha
jne
int
ljmp
jle
jge
jbe
ret
pushf
push
jb
xlat
mov
bound
fnstcw
sbb
xchg
gs
cmp
pop
out
sub
xor
std
push
pop
xchg
jl
add
and
jg
lods
xchg
les
push
or
outsl
es
seta
xchg
in
lcall
cltd
test
lret
test
dec
mov
outsl
pop
stos
loopne
mov
mov
dec
fldcw
xchg
adc
nop
rclb
fdivp
cmc
popf
pusha
lea
stos
push
jl
addr16
mov
jne
faddp
std
inc
repz
test
dec
or
lcall
xorl
mov
cmp
mov
gs
insl
fmull
aas
scas
rcrl
ret
push
addl
test
mov
js
loope
push
cmp
imul
xor
int
inc
insl
mov
mov
int3
sub
lret
sbb
subl
mov
or
icebp
adc
fmulp
jae
stc
gs
sbb
repz
popl
out
pop
xchg
dec
aaa
or
and
jmp
sbb
dec
loop
scas
sub
add
xchg
fcompl
dec
ficoms
xor
das
js
stos
out
cltd
repz
push
push
mov
push
in
pop
mov
ficompl
icebp
test
push
xchg
push
xchg
mov
or
lret
dec
inc
cmp
repnz
jge
jnp
jno
adc
cwtl
mov
dec
lea
dec
push
daa
stc
pop
sub
loope
cli
add
xchg
divl
in
sub
dec
iret
mov
call
popa
inc
or
cmp
aam
sarb
mov
pusha
sub
cmp
cmp
insl
dec
bound
cmp
mov
fnstenv
outsl
inc
aaa
mov
pop
aaa
sbb
mov
in
daa
aas
sahf
pop
lcall
lods
xchg
aas
in
je
push
rorb
ret
dec
scas
push
addb
loopne
sbb
lahf
mov
sbb
insl
lret
les
out
xchg
dec
repz
aam
dec
cld
repz
push
xor
sbb
dec
jge
dec
lcall
sti
mov
inc
jl
and
pushf
ret
sub
mov
mull
out
sub
ja
push
mov
test
mov
add
out
xor
mov
lahf
filds
mov
lret
mov
mov
mov
aaa
das
js
fadds
rolb
push
scas
xchg
jmp
jb
adc
mov
leave
mulb
xchg
add
or
sbb
fs
fs
loopne
or
fsin
xchg
in
mov
pop
xor
push
mov
ds
add
test
cwtl
push
fnstsw
lret
ja
ja
sub
mov
jnp
inc
cmp
sti
je
xchg
imul
data16
js
push
or
xor
pop
ds
pop
in
cmp
or
xchg
dec
imul
mov
cmpsb
gs
stc
adcl
cwtl
das
bound
lret
bound
and
out
push
rcrl
mov
rorl
es
dec
and
xor
or
push
push
out
fmull
xlat
insb
push
push
das
sub
jl
or
jne
notl
pop
adc
jl
outsb
add
js
pop
int3
push
add
cmpsl
enter
test
mov
mov
mov
add
dec
shl
les
les
loopne
rol
in
inc
out
arpl
xor
sbb
adc
sarl
imul
jmp
mov
sbb
je
push
ljmp
push
bound
pusha
imul
mov
sbb
add
sar
pop
jb
push
adc
cmc
pop
sbb
cmp
sbb
xchg
imul
or
jecxz
and
stos
test
outsb
cld
fmull
dec
xor
mov
dec
and
mov
cmp
mov
jmp
cmpl
xor
stos
adc
andl
nop
out
sub
sub
jbe
bound
movsb
imul
scas
dec
jnp
fs
push
inc
mov
jg
pop
xor
sbb
test
rcll
inc
cmp
daa
sbb
fists
test
xchg
lahf
sbb
xor
add
cmp
lcall
std
jle
icebp
fucomi
mov
pop
xchg
push
fldcw
mov
mov
push
sbb
inc
adc
cmp
sbb
xor
jecxz
sub
mov
cmp
int3
inc
sbb
test
add
jnp
pabsw
mov
cmc
xchg
cmp
nop
push
xchg
xchg
call
cs
jns
xor
ret
sti
mov
icebp
jbe
jae
lcall
and
inc
cmc
in
cmpsb
cmp
test
cmpsl
or
inc
xchg
adc
jnp
insl
xchg
int3
add
fidivrs
rsqrtps
icebp
lods
dec
xor
dec
das
negl
movsl
xchg
or
jle
cli
add
mov
mov
stos
lea
rolb
lock
insl
mov
push
xor
push
cmp
adc
iret
xchg
aaa
leave
enter
pop
mov
test
xor
mov
sarl
or
xor
pop
push
inc
rcr
cmc
push
push
xlat
scas
icebp
or
shlb
mov
and
jp
lahf
scas
dec
es
scas
insl
addr16
jno
leave
push
pop
add
and
lcall
lahf
shll
sub
imul
sbbl
shlb
test
ljmp
pop
mov
add
inc
or
iret
jns
stos
int
ja
out
or
fisubs
mov
shr
and
js
xchg
iret
xchg
sbb
incb
dec
ffreep
pusha
fnstenv
adc
lods
push
jno
push
xchg
xchg
push
shll
cmpb
out
jne
int3
dec
shl
int
mov
pop
mov
xor
xchg
fstl
lcall
pop
jne
dec
mov
jnp
lcall
jns
fucom
pop
xchg
ret
insb
mov
fwait
xor
enter
leave
pop
sbb
scas
xor
shrb
aam
cmp
lods
out
adc
nop
add
cmp
movsb
scas
adc
mov
push
loope
or
fnstcw
idivl
xor
cmp
push
mov
sbb
dec
push
and
movsl
adc
sub
xlat
lock
jmp
xchg
xchg
pop
pop
pop
mov
jb
dec
jo
add
clc
mov
outsb
std
dec
mov
adc
or
xor
or
push
mov
enter
adcl
dec
and
divb
movsl
pop
leave
cmp
mov
aas
je
mov
or
out
mov
std
fmuls
arpl
in
subb
xor
lahf
mov
sbb
gs
sbb
xchg
sbb
cmp
bound
cltd
xchg
inc
jno
cltd
pop
int3
xchg
iret
inc
mov
mov
shll
lods
mov
or
mov
cmp
movsl
ret
cmp
add
cmpsb
push
cmp
lret
jb
fs
xor
out
fwait
xor
cmc
shll
mov
rcrl
push
mov
jle
xor
pop
mov
rcr
pop
sbb
ret
lds
pop
daa
popa
adc
sbb
adc
fnstsw
jp
jge
sbb
ljmp
cmc
jae
aas
fldl
pop
jge
outsl
inc
lret
aas
addr16
clc
sub
lcall
int
push
ss
loope
in
mov
pop
insb
and
jmp
xchg
cmp
and
lods
inc
push
sbb
pop
nop
mov
ds
fucomip
rolb
popf
mov
out
jbe
jae
adc
negl
jne
jg
mov
pop
je
jns
repnz
lods
sub
pop
pop
data16
test
cmp
cmp
gs
pusha
pop
adcl
mov
xchg
je
cli
repz
sahf
out
ljmp
or
push
in
sarb
jge
push
out
hlt
scas
cli
and
popa
pop
cmpsl
movsl
sbb
adc
jge
shr
rclb
icebp
sti
adc
outsl
rcll
adcl
pop
or
xchg
out
mov
loopne
scas
leave
adc
add
mov
hlt
push
xbegin
mov
rorl
rorl
in
int3
gs
stc
inc
cmp
std
lret
movsl
lds
mov
push
jnp
outsb
lods
inc
scas
repnz
mov
fcmovbe
icebp
jns
enter
mov
lods
adc
hlt
sub
push
int3
inc
ds
or
sar
fwait
sub
fildl
lahf
mov
lods
loopne
sarb
jl
nop
inc
pop
testl
xchg
or
cwtl
mov
movsl
mov
mov
or
test
jb
decl
pop
imul
test
and
sub
stos
je
or
aaa
cmc
xchg
xorb
lock
sub
push
sahf
push
roll
lea
pop
xlat
or
add
push
cmp
cmp
shlb
lods
adc
xlat
cmp
push
push
mov
sub
rolb
or
fnstenv
andb
dec
aaa
dec
ja
and
int
paddw
sub
xchg
frstor
rcl
sbb
cmp
jae
xlat
imul
je
mov
sbb
in
inc
sti
pushf
mov
insb
dec
xchg
adc
or
out
mov
fwait
push
pop
loope
imul
push
dec
hlt
push
inc
lods
sbb
xchg
clc
cmp
fisttpll
leave
mov
in
pop
mov
jno
cmp
xchg
xor
adc
pop
mov
bnd
rcrl
in
cld
inc
mov
data16
push
call
cltd
adc
rcrb
mov
repnz
cli
dec
xchg
out
and
mov
mov
cli
add
mov
rolb
or
xchg
hlt
out
xchg
xchg
inc
pushf
ret
cmpsb
pop
sub
pop
sar
mov
pop
add
xlat
loop
dec
or
aaa
call
into
push
or
inc
push
jo
ficompl
cld
or
movsb
mov
and
cmp
push
adc
int
jbe
in
test
push
inc
push
les
jge
jmp
cli
dec
fldenv
pop
mov
mov
xlat
iret
cmpsl
enter
sub
popa
daa
push
mov
into
sub
roll
xchg
js
inc
adc
mov
adc
mov
lret
jge
mov
pop
or
add
and
cmp
adc
popa
fbld
test
or
cmc
aas
movsb
dec
or
stos
mov
dec
sbb
mov
and
sub
nop
mov
pop
sub
mov
jnp
lea
cwtl
mov
and
fs
jmp
mov
adc
mov
lock
pop
lods
jge
scas
ljmp
cmpsl
dec
push
mov
cld
sbb
adc
imull
or
cmp
mov
or
or
push
jns
addr16
clc
jo
fwait
out
int3
lods
in
inc
lods
adc
pop
daa
mov
push
jl
push
jg
ret
iret
das
outsl
cmpb
aas
rcrl
add
adc
push
jmp
mov
mov
fdivrs
fldl
add
cmpb
pop
bound
pop
cmp
dec
mov
dec
fld
fcmovbe
jmp
or
fldl
jbe
mov
mov
test
adcb
mov
les
adc
lds
in
lcall
pop
jle
into
repnz
nop
pop
mov
iret
jmp
es
aad
jecxz
cmp
nop
out
imul
dec
or
mov
lret
cmp
sub
sbb
pop
mov
les
sbb
out
lret
xchg
add
mov
dec
in
cmp
mov
add
sbb
jmp
push
mov
cmp
push
mov
ds
pop
lcall
adc
cli
mov
cmc
lcall
jmp
into
pop
mov
cmp
pop
add
loop
lock
loope
aad
push
mov
stc
bound
jg
push
icebp
add
inc
mov
cltd
outsl
std
and
jno
dec
sbb
xchg
cltd
or
subb
cmp
je
pop
clc
push
ret
call
and
or
sar
data16
aas
ret
fidivrs
mov
lock
and
dec
pusha
test
or
lock
fmuls
divb
push
xor
mov
push
in
jge
call
sub
mov
ljmp
jbe
stos
pop
out
test
jb
pusha
jmp
mov
xorl
mov
es
rorb
push
jbe
loop
or
mov
xor
sub
and
popf
and
pop
js
push
push
mov
jmp
test
push
jge
clc
sbb
mov
mov
dec
add
cmp
jbe
push
xchg
mov
mov
mov
sub
out
in
mov
inc
adc
sub
ret
ljmp
aaa
xlat
cmp
pushf
xor
lods
fstpl
sub
bound
dec
lds
gs
es
cmpsb
mov
mov
enter
xor
or
clc
setb
dec
mov
jbe
fisubs
mov
hlt
leave
sbb
and
movsb
stos
sub
scas
jge
mov
ret
inc
ss
push
sbb
aam
push
xor
and
pop
add
push
lret
mov
aas
les
and
jns
pusha
push
mov
incb
in
nop
and
jbe
enter
xchg
push
insb
in
mov
sub
xchg
xchg
lcall
add
mov
cmc
mov
repnz
leave
mov
mov
mov
or
fldenv
mov
inc
inc
cmpsl
insl
hlt
fcomps
inc
stos
jne
int
pop
data16
imul
js
out
lahf
data16
sub
push
fdivp
insl
adc
or
mov
test
adc
jmp
mov
cli
or
mov
stos
xchg
mov
mov
aam
xchg
inc
xchg
jg
scas
cmp
push
mov
pop
loope
js
es
mov
lods
mov
fs
dec
or
fisubl
push
int
mov
mov
mov
jle
test
arpl
xor
aaa
pop
arpl
sbb
xor
bound
pop
xchg
push
in
imul
scas
sub
inc
int3
aas
push
imul
cmpsb
cltd
lods
dec
out
imul
and
cmp
fmuls
popf
in
scas
pop
dec
xchg
flds
outsl
imul
mov
sub
sub
push
push
addr16
sub
xchg
cs
mov
filds
dec
fs
ficoml
sbb
pop
movsb
gs
xor
movsb
fs
sahf
mov
ljmp
mov
xchg
push
aas
inc
jmp
popa
jo
int3
movsl
mov
out
mov
lahf
outsl
icebp
je
dec
mov
cli
jbe
sbb
sbb
jno
out
iret
cld
jmp
cmpsb
pop
loopne
movaps
mov
add
cmp
add
dec
sub
cmpsl
push
or
out
jle
leave
imulb
mov
inc
jno
push
es
sbb
cmp
or
fmul
outsl
mov
fsubrp
mov
jmp
call
fnstsw
aam
jne
dec
icebp
xchg
das
in
jb
or
mov
aas
pop
mov
adc
arpl
adc
and
push
push
push
leave
and
loope
pop
pushf
push
jo
add
aaa
pop
dec
lahf
stos
stos
in
es
cwtl
mov
and
xchg
nop
loop
enter
push
mov
pop
adc
push
pushl
cmp
lea
pop
push
aaa
imulb
dec
fldl
dec
sbb
mov
xor
sti
aas
mov
dec
js
inc
sbb
in
push
xor
cmc
int3
cmp
mov
rorl
xchg
movsb
int
lock
push
jo
pop
add
movsl
pop
andl
dec
jnp
pop
mov
nopl
bound
test
mov
ret
fsubl
stc
ds
inc
mov
cmpsl
daa
dec
mov
test
push
cmpsb
mov
out
inc
jno
pusha
das
hlt
xor
out
pop
jo
fstpt
jns
orb
or
negl
das
fnstenv
cli
sbb
xchg
inc
cmp
add
pop
push
jg
pusha
xor
and
mov
pop
sub
sub
shlb
jnp
push
ljmp
loopne
pop
mov
mov
pusha
mov
ja
sbb
pop
xor
nop
bound
sti
jbe
je
cmp
cmp
push
jae
lcall
xor
nop
lds
ret
mov
xchg
fwait
push
ljmp
lods
and
xor
adc
aas
fstl
pusha
stos
lahf
out
pushl
xor
daa
arpl
adc
cmp
decl
cmp
mov
ret
dec
call
xor
cmp
mov
mov
mov
and
mov
pushf
pop
mov
jecxz
push
sbb
cmp
mov
and
daa
mov
aas
mov
inc
jb
inc
xor
mov
push
cmp
inc
xlat
int
add
cmp
inc
movsl
sahf
sbb
adc
push
mov
popa
xchg
xlat
lret
cmp
xchg
push
xor
mov
push
outsl
ret
sbb
lcall
cltd
not
pusha
jne
xchg
bnd
push
cmp
dec
dec
jbe
popa
add
mov
pop
ret
mov
cmc
stos
popf
mov
in
cmp
repz
and
cltd
fidivs
jnp
inc
clc
or
push
xchg
out
pop
xchg
fstl
aas
inc
popa
cmp
cld
icebp
lds
or
mov
stos
ffreep
in
cli
cmpb
out
and
pop
lcall
aaa
call
adc
sbb
mov
jbe
pop
sbb
push
xchg
mov
add
pop
out
mov
out
or
mov
dec
cmp
mov
sub
ds
xor
or
testl
packssdw
loopne
cwtl
sahf
add
push
push
in
sahf
out
pop
movsb
pop
test
push
neg
inc
xor
test
pusha
scas
mov
pusha
cmp
jg
outsl
cmp
out
jnp
hlt
lret
lods
pop
pop
aas
push
fsubs
mov
push
test
les
add
in
jne
sbb
inc
mov
pushf
push
stos
cmp
push
jbe
dec
in
in
push
and
push
sub
mov
xchg
mov
jae
in
sub
aas
mov
push
mov
mov
imul
lret
je
and
inc
cmp
maxps
jns
fmuls
adc
daa
stos
jno
push
push
mov
pop
and
out
and
fisttpll
call
xchg
mov
push
sbb
int
mov
push
mov
push
aas
pushf
jbe
jmp
lahf
ds
nop
push
imul
cmpsb
stos
adc
adc
rcl
pop
movsb
in
jg
scas
fstcw
scas
aad
mov
or
adc
inc
push
fcomip
ret
dec
in
inc
cmp
xchg
mov
push
lahf
cmp
add
dec
nop
testb
scas
add
cli
je
lcall
test
adc
fcmove
int3
dec
xchg
dec
lret
out
aas
aam
enter
or
mov
out
mov
cmp
mov
xor
in
out
add
mov
mov
mov
dec
xor
mov
cmp
fldt
jne
mov
inc
push
add
int3
jp
in
dec
pop
mov
jnp
aaa
addr16
rcll
mov
mov
aam
cmp
cmp
mov
xor
roll
mov
or
cwtl
cmp
lahf
pop
ret
mov
rcl
mov
dec
and
out
scas
in
stc
stc
les
cmpb
mov
push
andl
cli
xchg
jmp
inc
sub
insl
lret
jno
xchg
idiv
cmc
push
and
sub
jmp
stos
xor
nop
mov
sbb
cmp
js
push
add
cwtl
add
mov
fdivl
dec
and
lret
jg
out
add
jae
inc
aad
enter
inc
jp
cmp
cmp
mov
faddl
arpl
scas
aas
dec
dec
repnz
stos
mov
pop
pop
scas
or
ret
cmp
push
addr16
push
aam
cmpsb
cli
add
jno
aam
xchg
mov
cld
sub
mov
in
fisubs
mov
dec
movsl
jge
xor
pop
arpl
pop
mov
in
fwait
pop
insb
movsb
xchg
stos
jne
push
xor
push
lret
mov
mov
cmpsl
aad
ret
nop
push
sbb
mov
mov
sbb
insl
fistl
in
push
xor
pop
lds
inc
stos
ja
aad
sub
dec
leave
jle
sbb
jae
inc
and
adc
ljmp
push
mov
or
xor
mov
cmpsl
js
notb
cmp
xor
fbstp
rcr
cmpsl
js
pop
outsb
add
mov
popa
jmp
ficoms
in
shl
push
leave
repz
aaa
sar
xchg
sbb
rorb
jl
imul
push
cs
aas
or
enter
sbb
sbbb
mov
xchg
dec
dec
adc
xor
cmp
jne
iret
rclb
pextrw
inc
sub
xchg
mov
push
xor
dec
pushf
jp
test
xor
or
cli
mov
xchg
scas
movsb
adc
pop
dec
add
push
add
sbb
out
insl
pop
adc
push
jmp
movsl
out
fbstp
lahf
dec
pop
movsb
outsb
xchg
xchg
pop
mov
std
jne
adc
dec
sub
pop
call
in
adc
loopne
mov
in
push
pop
adc
sti
add
pusha
mov
fisubl
cltd
pushf
sbb
inc
sub
jmp
jmp
mov
mov
xchg
cltd
jmp
lret
imul
clc
shll
jnp
das
jmp
jl
jne
sub
insl
add
test
je
test
stc
js
ds
lret
repz
outsb
ds
filds
xchg
cs
mov
in
jle,pt
jmp
xchg
out
push
inc
add
mov
jae
xlat
inc
icebp
pop
sub
sub
cld
test
cmp
xchg
stos
ret
out
xor
cmc
cltd
mov
leave
fldt
clc
out
mov
out
lods
add
push
adc
and
add
fstl
push
das
xchg
jmp
addr16
sub
mov
repnz
dec
mov
push
out
jge
mov
cmc
lret
popl
xchg
movsb
test
sbb
ds
stc
cmp
jb
arpl
and
mov
loope
sub
loopne
test
cmc
lcall
mov
divl
bound
scas
mov
dec
sub
jle
scas
in
pop
sahf
mov
and
jg
jle
cld
push
int
sbb
mov
ljmp
or
ret
xor
sub
or
lods
jns
xchg
ret
pop
lcall
push
lahf
lds
mov
pop
mov
in
roll
andl
sub
jnp
shl
pop
xor
mov
call
mov
dec
or
push
mov
xchg
inc
std
xchg
mov
or
lret
push
loope
add
aaa
clc
ret
test
cld
mov
or
aaa
xchg
add
xchg
mov
mov
add
xchg
push
incb
push
rcl
cmp
sub
or
adc
or
fcom
jne
mov
mov
xlat
pop
das
cmpsl
mov
or
leave
push
ljmp
add
subl
in
fistps
adc
mov
jno
loopne
filds
out
sbb
cwtl
xor
cmovge
dec
out
sub
dec
inc
in
es
lcall
inc
jecxz
add
dec
push
sbb
pop
dec
pushl
movsl
es
mov
xor
daa
shrb
imul
in
lods
or
test
dec
je
loopne
pop
arpl
jle
xor
out
adc
adc
lret
xchg
and
pop
js
mov
jle
pop
jecxz
xor
push
je
js
jmp
int3
cmc
mov
or
mov
and
xchg
dec
adc
mov
jmp
add
ja
jmp
dec
or
flds
negb
inc
and
jns
fcmovb
cmovge
sar
inc
push
mov
ss
addr16
jg
aad
jp
inc
ljmp
pop
in
jecxz,pn
ret
rcll
add
fsubrl
fs
cltd
lahf
mov
aaa
dec
sbb
decl
adc
jp
leave
lret
push
js
popf
mov
inc
lods
aad
adc
jb
addr16
test
push
sti
mov
fcmovu
sbb
push
xchg
jo
cmp
jnp
insl
and
jno
mov
test
adc
clc
jp
aad
mov
inc
sahf
sahf
cmpsl
mov
dec
xchg
and
adc
out
inc
data16
out
int3
xlat
pop
add
xor
dec
mov
cli
pop
pop
enter
mov
mov
mov
xchg
push
xlat
cmp
hlt
adc
jp
push
and
fcomps
lods
xchg
push
push
mov
ror
fsubrl
jge
loopne
jo
jge
xchg
adc
xlat
scas
fstpl
or
pop
push
in
mov
leave
jnp
mov
inc
and
das
mov
push
sahf
shrl
cmc
js
call
scas
sbb
xchg
inc
ja
push
mov
ret
push
popa
jge
mov
mov
into
enter
xchg
lcall
arpl
adc
repz
dec
or
lock
cwtl
adc
enter
scas
jne
dec
cmp
add
mov
jbe
daa
and
jbe
ds
push
dec
test
mov
iret
sub
scas
movl
jg
fsubl
in
les
outsb
jne
frstor
jp
popf
jge
jmp
sbb
loop
mov
rolb
popf
and
jl
ret
adc
cwtl
movsb
inc
jmp
add
das
stos
mov
fwait
decl
sbb
sbb
push
and
fadds
mov
xchg
sub
je
pop
xor
sbb
xchg
stos
stc
sti
clc
adc
push
cltd
fiadds
mov
adc
nop
xchg
inc
jmp
scas
xchg
jl
cld
jne
in
mov
mov
mov
shrl
adc
daa
xchg
jae
jne
fcomps
gs
js
mov
inc
jmp
loop
test
jo
sbb
test
xor
stos
scas
xchg
pop
sbb
cmpsl
sti
sbb
nop
aad
out
xchg
pop
dec
mov
sbb
pop
pusha
into
arpl
fwait
mov
inc
arpl
dec
sub
or
or
mov
mov
xlat
data16
outsl
adc
hlt
repz
or
push
push
xor
fidivl
sub
das
add
bound
dec
cmp
leave
ret
lahf
fldl
inc
jmp
mov
jbe
pop
and
cmpsl
and
mov
mov
xor
pop
add
ljmp
negl
ret
std
mov
dec
cmp
ljmp
fs
jae
xchg
push
sbb
inc
jp
adc
pop
or
mov
fwait
and
add
scas
std
je
xchg
lcall
dec
jbe
pop
jge
add
or
pop
flds
dec
into
mov
xor
push
pop
leave
test
aad
es
dec
mov
outsl
push
fs
inc
pushl
dec
ljmp
inc
xor
cmp
add
mov
imul
shrb
push
pop
jg
lret
push
jmp
movl
call
mov
xor
out
inc
movsb
pop
cmp
mov
gs
lock
jg
push
jmp
sub
jecxz
aaa
sbb
jbe
rcrl
mov
jbe
mov
insl
hlt
pop
sahf
or
out
push
stos
xor
pop
sbb
mov
in
idivl
sarb
inc
mov
std
sub
sub
cli
jg
mov
inc
insl
pop
jmp
xor
test
stos
xchg
cmp
pop
add
sbb
shll
lea
pop
lretw
data16
jo
mov
jge
lods
or
sub
inc
mov
inc
fiaddl
andl
inc
mov
dec
mov
add
popf
sbb
or
xchg
int
add
push
das
lds
push
push
jns
es
pusha
imul
cmpl
pop
mov
imul
add
inc
aaa
xor
inc
rolb
sbb
push
add
xchg
fwait
enter
dec
daa
jmp
jns
and
hlt
pop
push
cltd
loopne
stos
xchg
out
inc
jbe
test
lock
and
push
in
lret
sahf
ja
pop
into
fsub
cs
or
dec
mov
clc
xchg
mov
in
setg
dec
in
lock
push
sub
cmp
dec
sub
divb
loope
iret
nop
cs
push
push
jg
and
fcompl
cmp
addr16
int3
push
cmp
mov
jge
test
in
jbe
cwtl
sbb
ljmp
add
imul
shlb
push
outsb
sub
push
ret
adc
out
mov
bnd
jbe
popa
fsts
sbb
out
mov
mov
dec
out
andb
pop
cltd
dec
jecxz
ret
cli
xchg
pop
mov
arpl
xchg
add
addb
inc
lock
lret
sub
les
and
dec
bound
movsl
lods
xchg
stos
cmp
test
cs
dec
test
adc
fstps
push
fnstenv
mov
lret
rorl
mov
adc
sti
pushf
test
and
xchg
sahf
dec
lcall
loop
jge
push
or
sub
imul
gs
push
addr16
fs
test
pop
dec
ja
insb
lahf
xchg
push
pop
pop
fwait
in
jnp
and
pop
les
add
test
pop
xor
xchg
xor
adc
lods
fcoml
data16
or
ficompl
lret
adc
pop
ds
push
in
dec
lahf
xor
push
mov
or
sbb
mov
inc
xchg
mov
out
xor
and
xor
add
insb
inc
mov
lcall
loopne
shl
adc
sbb
mov
fldcw
cmc
or
fbld
sub
pop
pop
and
popa
xchg
cmp
mov
mov
pusha
or
push
jecxz
sahf
lcall
and
dec
push
xchg
pop
pop
xor
inc
pop
out
in
jg
popf
pop
push
pop
pusha
std
dec
icebp
jl
xor
pop
dec
push
loopne
cmp
mov
xor
jnp
xor
lret
addr16
test
sbb
mov
mov
ljmp
icebp
cmpsb
sbb
inc
mov
jns
push
loop
stos
push
inc
int3
test
mov
cs
loop
scas
mov
ss
adc
dec
xchg
out
mov
fsubrl
rolb
sahf
ret
data16
out
rorb
add
aad
loope
outsl
ja
sub
xorl
lods
xchg
imul
mov
js
popf
pop
fwait
xchg
adc
push
daa
pop
ret
dec
cmpsb
mov
push
cli
push
mov
mov
inc
mov
xor
adc
hlt
fnstsw
jecxz
fstpt
std
lret
add
mov
shrl
or
cmp
and
je
mov
leave
cmp
fmuls
cli
mov
or
bound
jge
fldl
adc
inc
inc
xchg
adc
lret
or
sbb
js
into
mov
mov
mov
xchg
mov
ss
sub
aad
notb
jo
test
sub
clc
xchg
cmp
inc
mov
call
aam
rcrb
cmp
notl
test
or
fisttps
jmp
sbb
pop
lcall
fdivl
and
cmc
dec
cmp
mov
adc
lods
sbb
sub
push
mulb
jp
adc
add
ds
mov
les
scas
lret
in
add
mov
sahf
inc
aam
dec
fistpl
out
fs
sti
jmp
shrb
xor
loope
sarb
jmp
cli
or
pop
xor
sub
jb
xor
push
dec
rorb
arpl
enter
loopne
mov
pusha
sub
push
imul
ror
mov
fnsave
movsb
gs
cmp
loope
sti
pop
aam
push
aaa
test
push
subb
push
scas
adc
lods
sarl
jle
ds
lods
or
cmp
stos
mov
stos
pop
insl
xor
adc
add
jg
fisubl
nopl
mov
into
adc
out
sbb
imul
inc
cmp
in
out
call
shll
jge
sti
test
jbe
pop
jp
or
mov
lds
push
int3
shrb
mov
rorl
mov
leave
inc
inc
xor
sub
ror
shll
int3
mov
cmpsb
leave
fnstenv
fs
mov
push
inc
xchg
pop
into
ret
cmp
fbstp
imul
xchg
shr
mov
add
repnz
loope
pop
xchg
cmp
pop
sbb
jae
shlb
lock
inc
test
out
mov
pop
push
push
jb
rsm
sbb
mov
mov
mov
sub
sbb
inc
adcl
loop
sbb
stos
cmp
sbb
jo
push
sub
rorl
mov
push
jno
xchg
or
in
jge
cmpsb
inc
stc
jns
push
decl
jo
sbb
mov
into
jle
xchg
insl
test
test
dec
jno
sub
aaa
pop
jbe
sbb
push
clc
imul
in
das
mov
divl
fistpl
xor
pop
sub
xor
inc
das
or
andb
aaa
sbb
into
jae
popf
cltd
push
adc
mov
in
repz
pop
dec
sbb
addb
mov
mov
and
popf
and
inc
dec
push
push
fsubl
jne
enter
xchg
jmp
outsl
dec
xor
or
push
dec
out
js
into
ret
lcall
jno
sub
in
je
ja
dec
mov
std
mov
jo
inc
mov
dec
inc
fcoml
push
add
push
test
dec
adc
xchg
cmpsl
xor
vpackuswb
movsb
test
scas
cs
pop
sbb
cmpsl
xchg
imul
inc
cld
lret
clc
dec
mov
lods
mov
mov
xor
jge
test
cmp
pop
insl
adc
cltd
push
inc
je
mov
xor
jp
xchg
inc
enter
pop
cmc
push
mov
pop
jns
push
cmp
jb
aam
lcall
shr
cmpb
push
aas
and
inc
cmpl
dec
scas
lret
sub
dec
and
inc
fsts
ljmp
movsb
cltd
lods
push
loope
xchg
sbb
iret
fisubs
bound
icebp
jno
cmpsl
lea
or
jg
pushf
dec
jo
add
push
add
call
test
fs
mov
inc
push
aam
insl
inc
mov
cmc
dec
insb
les
fwait
imul
jne
cs
add
out
sahf
mov
stc
add
stos
iret
xor
int
test
cmc
xor
cmp
rcrb
lods
shr
lock
pop
jmp
movsb
mov
sti
or
es
std
push
mov
rorb
and
ret
ja
add
sub
fidivrl
popa
xchg
movsl
adc
pop
push
jp
enter
fs
lret
pop
outsl
inc
lahf
lret
orb
push
xor
push
fwait
push
cmp
push
clc
stc
sub
daa
or
xchg
lds
push
add
fnstenv
in
dec
bound
test
xor
call
xor
jns
into
pusha
or
stos
adc
aam
outsl
mov
icebp
mov
aaa
sub
imul
insb
or
call
inc
mov
pusha
add
dec
popf
pop
iret
xor
jle
pushf
fldenv
leave
imulb
mov
cmpb
shl
stos
mov
aam
pop
rorl
in
es
es
stos
cmp
es
push
clc
add
inc
xor
nop
mov
sub
insb
adc
ljmp
sbb
jb
jne
icebp
or
pusha
adc
repz
lcall
pusha
int3
inc
mov
dec
inc
jb
push
andb
push
push
iret
sahf
and
xlat
xor
iret
adc
mov
cmpb
fcmovu
fidivrs
out
jne
rcll
imul
cs
xchg
and
mulb
dec
sub
in
leave
out
jmp
lea
pop
popa
filds
jo
sbb
scas
aaa
fistpl
mov
sbb
xchg
in
xor
ss
shlb
sbb
push
lahf
in
gs
inc
jnp
call
pop
mov
rcrb
ss
mov
sbb
push
daa
dec
inc
inc
stos
add
xor
dec
push
xor
ljmp
xchg
imul
jmp
js
into
xchg
ret
es
test
mov
adc
cmp
popa
cmp
inc
out
adc
jne
mov
cli
dec
mov
arpl
cmp
call
stc
xor
enter
mov
dec
pushf
cmc
dec
xchg
leave
das
in
mov
js
xor
sbb
outsl
stos
clc
es
aaa
lds
arpl
jp
hlt
xor
lcall
rcr
fsubp
repnz
mov
add
push
xchg
pop
daa
aam
jmp
jbe
js
stos
in
and
testb
and
dec
ss
push
outsl
hlt
dec
imul
mov
xor
out
sbb
leave
in
stos
ficomps
add
test
shlb
outsl
nop
lahf
sbb
or
adc
xchg
mov
dec
xor
mov
lods
das
sub
cmp
xchg
inc
std
mov
ficoms
xchg
ljmp
sub
loop
es
push
pushf
jmp
xor
jle
imul
enter
push
js
mov
je
es
xorb
jmp
enter
leave
incb
fists
dec
adc
out
pop
arpl
sub
xchg
in
in
or
cmpsb
sub
pushl
stos
mov
mov
mov
cmp
dec
in
loope
hlt
jl
xor
pop
sahf
jbe
cmp
fs
out
inc
inc
into
or
in
fwait
sub
mov
es
pop
sub
push
add
xor
pop
cmc
lods
mov
push
in
or
fsubl
mov
push
fildl
adcb
or
lcall
scas
xchg
push
and
mov
mov
and
inc
mov
inc
iret
and
sub
xchg
test
lahf
pop
push
mov
mov
and
and
sub
pusha
pop
add
lcall
mov
mov
ret
cmpsl
xchg
lods
add
int
es
out
shll
mov
outsl
cltd
mov
test
and
lods
cmp
shr
mov
imul
mulb
push
roll
add
inc
or
dec
adc
sbb
mov
movsb
xchg
out
or
and
xlat
ror
ds
nop
lds
ret
mov
stos
add
std
sbb
ret
sarl
fisubs
mov
pop
mov
dec
and
pusha
dec
add
je
jbe
lock
pop
jno
sub
inc
aas
fimull
andl
fildl
adc
xchg
xchg
int
add
das
adc
mov
cmp
daa
inc
gs
xchg
in
adc
xchg
mov
add
mov
pop
aad
cli
call
or
mov
jb
aas
xchg
or
aam
xchg
ljmp
and
pop
add
arpl
nop
xor
out
xor
fwait
aaa
push
loopne
jo
lahf
and
into
push
lock
sbb
test
pop
mov
push
repz
fcmovu
cli
ss
and
xchg
rcrl
cmpb
xor
loope
lock
push
dec
xchg
aam
push
ffree
aaa
rcll
xor
aad
ret
sub
push
stos
mov
mov
or
sti
mov
jp
fadds
mov
jo
out
push
push
loopne
aam
lret
or
lea
cmpsl
pop
mov
push
pop
sub
push
mov
jne
add
cmpsb
cmp
dec
mov
and
jno
insl
cld
mov
or
mov
ficoms
push
das
jo
das
jae
mov
push
rclb
mov
xchg
xlat
mov
mov
lock
aaa
jg
xor
xchg
adc
xor
mov
iret
cmpsb
mov
mov
icebp
leave
sub
inc
test
js
jl
add
or
shrl
out
push
cmovbe
push
mov
outsl
pop
cli
jg
mov
mov
adc
rclb
or
xor
sub
adc
js
jg
cmp
std
dec
sub
mov
sysexit
xor
inc
gs
mov
inc
in
stos
in
add
sbb
cld
divl
push
icebp
data16
inc
lea
cs
rcrl
repz
push
sub
sahf
out
popa
js
js
in
mov
or
lcall
ret
into
insb
dec
push
bound
je
rolb
inc
inc
daa
popf
leave
mov
inc
inc
mov
aad
mull
cmp
movsb
dec
xlat
out
pushf
xor
insl
aaa
add
xchg
addr16
fs
pop
vpunpcklbw
cltd
and
inc
in
mov
mov
dec
inc
aam
sbb
fildl
test
sub
mulb
mov
xchg
scas
inc
cmp
xchg
xor
movsb
addr16
movsb
hlt
dec
mov
adc
sub
adc
int
popa
mov
mov
sub
insb
movsb
cmp
mov
add
jo
and
nop
dec
sti
inc
xchg
aas
cmpsb
inc
and
mov
out
mov
das
scas
push
cwtl
mov
sub
or
mov
shll
popf
and
jb
popf
cmpsb
fidivrl
ret
test
push
shlb
or
cwtl
sarl
mov
add
dec
pop
pop
or
fldl
mov
mov
lret
shlb
xchg
mov
jl
sbb
in
test
adc
fdiv
xadd
mov
jecxz
jmp
xchg
cmp
and
mov
int
cmpsb
jg
cmp
repnz
push
dec
into
ja
push
imul
sarb
jmp
xor
mov
mov
bound
inc
dec
mov
shll
xchg
xor
aam
jecxz
addr16
cmpsb
sbb
lds
addr16
xchg
rolb
test
mov
fsubl
in
xor
hlt
icebp
dec
or
sbb
dec
pop
and
inc
test
fiadds
movsb
xlat
lret
stos
sti
aad
mov
mov
pop
or
inc
mov
decl
xor
add
xor
int
imul
xchg
xchg
sub
xor
movl
jg
idivb
add
ret
mov
inc
dec
stc
popl
test
lahf
sbb
test
and
mov
pop
mov
sti
stc
and
jg
push
or
dec
aad
in
popf
mov
mov
cmpsl
inc
add
in
mov
mov
and
xchg
out
leave
jecxz
in
enter
or
fistl
int3
pop
sti
iret
aam
loope
lea
or
lret
adc
mov
ja
lahf
movsl
mov
aam
sar
jle
int
aad
out
sub
or
pop
int3
mov
adc
lods
xor
jo
clc
dec
or
repnz
enter
fstps
pushf
cmp
sahf
add
or
or
pop
push
lock
incl
fwait
xchg
mov
xor
cmp
cld
cli
lret
mov
add
shlb
sbb
and
mov
fmull
pop
jns
and
jbe
subl
cmc
xchg
out
jge
sub
jo,pt
cmp
jge
xor
sub
out
pop
adc
and
xlat
push
xchg
clc
icebp
mov
lahf
sub
mov
test
add
faddl
sub
mov
mov
mov
mov
pushf
aas
xchg
push
cmp
subl
xchg
jno
ds
adc
xor
dec
pop
adc
movsw
ror
or
sub
fldt
pop
mov
xor
ja
sbb
imul
imul
push
lret
ds
inc
dec
insb
testb
imul
pop
and
out
imul
xor
cmp
pop
mov
xor
imul
sbb
loope
loope
divb
mov
in
push
sbb
xchg
mov
ljmp
dec
mov
adc
cwtl
pop
pop
test
push
shll
stos
loope
push
cli
dec
fistpl
cmc
and
es
and
jo
mov
mov
cmpsl
inc
popa
xchg
pushf
ss
in
sbb
in
jecxz
xchg
jmp
gs
sub
in
std
push
push
dec
mov
sbb
cli
xor
xor
cmp
jo
mov
xchg
sbb
dec
les
sub
movsb
mov
jbe
pop
jno
xchg
dec
mov
mov
or
xchg
call
int3
adc
in
adc
lret
pop
mov
jl
stos
mov
fsubl
fs
jecxz
jo
push
dec
mov
mov
push
push
iret
ret
cmp
aam
mov
dec
mov
cmp
jmp
cmc
cmp
pop
je
pop
aas
imul
push
nop
movsb
addr16
xchg
and
xchg
xchg
subb
cmpb
xchg
clc
or
pop
je
imul
outsl
sarl
mov
push
hlt
sarb
mov
shrb
in
insb
fwait
out
leave
lcall
dec
add
shll
adc
add
mov
xor
data16
and
xchg
mov
push
rcr
xchg
sahf
pop
insl
xor
iret
popf
das
fists
jb
rcll
push
jno
mov
push
pop
jbe
xchg
pop
fdivp
xchg
adc
and
pop
nop
lahf
cltd
mov
push
cmp
lret
lcall
add
sarb
add
push
out
push
movsl
push
jb
aam
jb
cmp
mov
pop
mov
shll
aas
or
mov
jne
shl
shll
xchg
test
insb
jne
push
scas
out
jnp
jnp
mov
jbe
cli
sbb
dec
outsl
jae
mov
aaa
insl
and
shrb
xchg
outsb
sti
popa
mov
mov
mov
sub
inc
inc
jge
mov
ja
cs
inc
mov
movsl
pusha
lcall
mov
in
cmc
lock
in
test
decl
dec
push
mov
and
mov
xchg
add
xchg
inc
push
outsl
pop
mov
das
clc
sahf
pop
mov
pop
push
mov
dec
sbb
pop
scas
das
in
imul
adc
mov
mov
addr16
imul
pop
divl
xorl
mov
or
and
sahf
sti
ret
and
enter
xor
repnz
sbb
mov
pop
cmpsl
scas
cmpsb
push
mov
lret
dec
lret
cmp
jp
outsl
call
inc
jo
jbe
xor
icebp
or
adc
fildl
push
inc
int3
pushf
bound
pop
xor
in
push
int3
scas
mov
jle
out
jno
dec
lahf
loope
mov
fists
mov
push
add
lret
push
push
psubusw
sti
mov
clc
cmpsl
test
into
ds
lahf
arpl
dec
repnz
xor
mov
fdivrs
sub
pop
clc
sub
mov
or
or
inc
mov
cmpsl
xor
in
or
cld
cld
ljmp
xor
inc
xchg
dec
imul
mov
push
inc
sbb
adc
loope
fsubrl
sbb
add
scas
xor
xor
popa
cmp
mov
xchg
push
les
lods
mov
sbb
jb
fcmovnbe
movsb
xchg
adc
and
inc
test
aam
adc
loopne
and
xchg
jae
adc
and
outsl
and
xchg
aas
or
and
les
mov
cmc
mov
js
repnz
das
ret
ret
xor
and
faddp
push
jno
sbb
xor
outsb
dec
in
sub
ljmp
jp
sbb
jo
cwtl
hlt
hlt
mov
loopne
into
ret
shll
cmpsl
add
or
fstps
add
cmpsb
or
cwtl
push
sub
sbb
mov
shll
inc
xchg
xchg
js
adc
jo
out
jo
enter
and
mov
mov
pop
xchg
pop
icebp
and
xchg
sub
je
pushf
xchg
repnz
aaa
dec
aas
lcall
insl
push
fldt
push
sbb
push
dec
fs
cld
pop
adc
fstps
jmp
iret
xor
xchg
js
les
mov
enter
movsl
cmp
sbb
negb
xor
sbb
pop
lds
xor
testl
mov
xchg
adc
adc
inc
pop
divb
push
or
push
movsb
or
mov
inc
jno
in
out
sub
dec
mov
aad
pop
pop
adc
lds
je
into
loope
movsb
movsb
ret
jno
ja
xchg
or
in
cs
pop
and
mov
ret
loopne
aaa
call
imulb
sub
in
iret
push
fmul
jp
outsb
stos
loop
in
inc
jg
add
ret
les
dec
cmp
adc
pushl
or
sar
rcr
dec
mov
aad
jle
std
jecxz
cmp
into
push
sahf
and
pop
push
mov
outsl
into
pop
inc
xchg
shrl
ds
or
push
mov
ret
mov
lock
jl
xchg
push
sub
fstl
outsl
and
fisttpll
and
clc
pop
add
jns
adc
movsl
enter
inc
sub
xor
sub
pop
sub
push
pop
push
les
nop
or
leave
ss
mov
cmp
dec
hlt
cld
push
mov
rcll
shrb
mov
mov
mov
mov
aam
jns
fcmove
jnp
scas
ficompl
orb
inc
or
in
pop
mov
pop
nop
xchg
stc
push
ja
lret
cmp
push
lret
fnstcw
sub
pop
pusha
dec
and
and
in
cmpsl
faddl
mov
xor
leave
adc
into
dec
icebp
scas
pusha
shrb
stos
dec
adc
rclb
mov
xchg
mov
ja
bsf
imul
pop
sub
aas
sti
sub
sahf
sub
lcall
adc
dec
into
outsl
fs
cmp
addl
push
mov
in
jne
idivl
or
jge
loopne
inc
cmpsl
fisttpll
outsl
push
mov
push
clc
cmpb
stos
aas
test
jmp
cld
pushf
push
dec
rcll
stc
int3
inc
sbb
pop
ja
jnp
cmp
mov
push
rcl
jo
js
nop
into
jno
inc
cmp
xchg
les
xchg
xchg
pop
add
mov
lcall
sub
cmp
loope
cmpsb
test
mov
subb
push
xchg
adc
mov
mov
loope
dec
adc
jle
push
cmpl
mov
cld
push
jbe
ret
call
sub
es
std
pop
xor
test
dec
jae
mov
filds
sbb
jp
and
cmp
fstl
subl
enter
mov
sub
sub
cmpsl
mov
icebp
mov
loopne
fldl
pop
dec
int3
gs
mov
ljmp
das
and
mov
xlat
add
lods
fcomps
mov
lahf
adcl
cmp
fucom
cld
pushl
or
sbb
clc
test
sub
outsl
shlb
mov
int
mov
mov
adc
fldcw
add
rol
add
adc
into
pop
dec
andps
mov
jle
mov
pop
sbb
enter
lcall
out
push
jl
cmc
les
inc
mov
les
fnstcw
lret
sub
pop
sarb
dec
fs
push
fdivrs
repz
jae
xchg
aas
ss
ja
jle
nop
sbb
cld
scas
loope
repnz
lds
mov
in
mov
cmp
jb
xchg
add
or
call
mov
add
adc
fbld
rcrl
cmp
jnp
cltd
clc
or
stc
and
xchg
movsb
aaa
and
add
shll
add
imul
test
pop
cld
mov
mov
cld
mov
lock
mov
js
popa
sarb
idiv
push
roll
mov
and
jns
pop
fadd
add
imul
cmc
test
jo
das
mov
cld
xchg
push
push
icebp
cmpsb
gs
les
sbb
inc
or
push
mov
adc
xlat
cmp
insb
cli
adc
and
out
neg
mov
mov
mov
pop
cmp
mov
mov
pop
pop
sbb
mov
and
jnp
dec
xor
nop
sbb
inc
mov
sub
aad
push
ret
sub
clc
jbe
push
lods
mov
testb
ffreep
adc
loopne
pop
adc
rcrb
js
pop
dec
push
xor
xchg
pop
sahf
sbb
push
jle
and
roll
pusha
or
mov
mov
ds
and
mov
imul
jns
sbb
jo
xor
inc
pop
aad
pop
mov
dec
or
sbb
pop
cmpl
xor
sarl
fs
arpl
cld
add
inc
movsl
push
ds
inc
adc
mov
das
ret
xlat
cmp
aas
and
test
push
call
and
hlt
inc
cld
cmpsl
jl
orl
cmp
and
mov
lret
popf
xchg
mov
fnstsw
inc
scas
daa
sbbb
adc
adc
and
hlt
bound
mov
cmc
xchg
andb
mov
fsts
inc
sbb
mov
scas
jmp
loope
fdivrl
sbb
xor
xchg
sbb
add
hlt
and
inc
into
sbb
shrb
xor
add
mov
xor
jg
mov
push
popa
je
jp
cmp
inc
enter
outsb
jecxz
scas
ret
xchg
mov
cwtl
aas
mulb
pushf
out
sub
lea
lock
sub
sbb
push
inc
dec
clc
sub
jae
mov
and
jno
jg
mov
push
imul
pop
inc
push
inc
mov
sbb
mov
inc
jmp
shr
subl
leave
enter
or
inc
pop
and
aaa
adc
js
mov
lock
sub
test
pop
lock
arpl
negb
push
push
mov
add
xor
loope
loop
push
pop
pusha
std
jp
push
ret
xor
js
dec
mov
pop
push
loop
sbb
out
inc
cli
out
popf
rcl
inc
cmp
cmp
push
in
mov
ficoms
daa
push
loope
xchg
push
rcll
dec
cmpl
cmp
pop
xchg
dec
ds
add
xchg
jbe
test
call
int
outsl
inc
out
in
out
push
mov
sbbb
push
sbb
out
sbb
hlt
popf
mov
push
inc
adc
and
push
xchg
cmp
mov
in
mov
and
jle
std
mov
call
adcb
xchg
push
mov
cmp
add
jg
int3
daa
sbb
mov
jne
out
push
jbe
jecxz
rcrl
xchg
aaa
loope
jne
adc
dec
outsl
sub
adc
sub
ret
ret
fwait
cs
mov
mov
repnz
clc
out
push
cmpl
adc
repnz
test
stc
mov
or
xchg
mov
inc
aas
dec
mov
xchg
add
adc
xchg
std
adc
push
arpl
mov
ja
xor
sti
add
fstpl
push
hlt
sub
jg
xchg
mov
pop
jmp
sbb
test
cmpsl
fwait
mov
push
cmpsb
das
sbb
and
sub
mov
jbe
add
hlt
push
fnstsw
xchg
pusha
js
mull
mov
xor
mov
lret
popf
xorl
lea
and
rsqrtps
dec
mov
dec
je
jb
fs
xor
and
ss
pop
jecxz
incl
adc
pop
jge
mov
inc
mov
mov
push
jle
ret
jo
inc
daa
adc
mov
scas
dec
pusha
jmp
fistl
inc
dec
in
push
or
daa
int3
sub
push
mov
test
or
ficoml
adcb
inc
jno
ffreep
jo
decl
dec
add
cmp
add
imul
push
sahf
mov
xor
std
xchg
movsl
pushf
xlat
pop
push
hlt
sbbb
mov
stos
mov
xlat
fistl
lods
mov
sahf
inc
in
std
xchg
pop
rorl
out
push
push
mov
xchg
jg
data16
enter
jmp
shrl
jb
or
cmpb
insl
div
xlat
stos
cmc
jle
test
outsl
insl
mov
jmp
out
jnp
sbb
insl
dec
inc
ljmp
into
mov
xchg
inc
ja
imul
aas
sbb
rcl
cmp
sbb
jo
call
imul
mov
add
dec
sub
loop
lcall
int3
jno
test
push
popa
mov
cmp
or
imul
mov
ret
fistpll
cmp
cmpsb
xchg
adc
xchg
fsubr
std
dec
mov
test
nop
loope
pop
jg
and
xchg
push
push
mov
dec
das
les
jae
mov
rcrl
and
int
in
daa
xor
dec
rclb
pop
outsb
in
and
push
bound
insl
or
in
xchg
mov
mov
cltd
call
jns
mov
xchg
pop
xchg
mov
inc
xchg
rorb
loope
enter
jns
std
sbb
lock
xchg
jg
ss
js
or
and
leave
fwait
pop
xor
or
xlat
cmpsl
out
cltd
outsl
xchg
lds
and
sbb
mov
scas
sub
mov
xor
jbe
mov
pop
or
inc
jne
dec
loopne
or
imul
inc
sbb
xor
push
fcompl
jnp
pop
pusha
bound
cs
mov
cmpsl
ds
fcomps
push
push
out
mov
add
mov
popf
lds
test
sbb
mov
mov
push
rcrl
movsb
mov
xlat
int
shll
loop
outsb
pop
adcl
pop
sbb
nop
pop
xchg
loopne
mov
xchg
dec
jmp
cmp
mov
sbb
clc
cld
and
fs
int3
push
pushf
jae
and
xchg
aas
dec
loop
sbb
mov
pop
add
cmp
movsl
sbb
movsl
loope
shlb
mov
dec
push
pop
das
jle
pop
mov
sbb
xchg
adc
sbb
repnz
mov
dec
cmp
cmp
fadds
scas
and
ficompl
lret
sub
inc
push
mov
pop
xchg
xlat
aaa
aaa
out
scas
in
pop
adc
lods
cltd
mov
sahf
stc
cmpsl
ret
xor
inc
pop
and
scas
out
icebp
mov
add
cmp
mov
sbb
adc
pop
arpl
adc
repnz
xchg
pop
xor
mov
mov
lahf
inc
sbb
icebp
add
stos
lods
jb
jge
jl
sti
jne
sub
jns
sbb
hlt
jp
jge
sbb
push
xor
data16
xlat
arpl
movsb
pop
dec
mov
sub
mov
mov
outsb
in
ds
pushf
push
xor
adc
out
arpl
or
mov
mov
push
insb
mov
in
mov
adc
data16
add
in
pop
imul
into
pushw
sub
ret
sub
lds
push
test
movb
and
insl
test
sahf
sub
insl
sbb
aaa
ds
xchg
lcall
aaa
pop
int
idiv
xchg
cmc
mov
stos
or
fnstenv
mov
jns
mov
push
dec
call
cmp
and
stc
inc
out
outsb
add
cltd
in
sbb
pop
push
dec
subl
cmpsb
cmp
loop
repnz
sbb
dec
push
insb
test
sahf
inc
inc
jnp
fimuls
leave
cli
add
jne
das
lret
mov
push
cltd
or
lods
lds
ss
mov
stos
in
in
or
mov
cmp
adc
je
or
aas
dec
mov
push
adc
out
sub
inc
outsb
nop
insb
xchg
stos
fsubs
fldenv
out
scas
jb
mov
and
jns
or
push
outsl
mov
or
mov
push
into
jecxz
push
push
xchg
cmp
pop
push
test
inc
jle
add
jle
dec
cltd
rorl
or
adc
cwtl
pop
repnz
insl
lds
pop
sub
gs
popa
or
incl
push
mov
leave
aam
push
sahf
pop
lret
mov
jp
mov
mov
rorl
aad
xor
mov
jae
push
jge
insl
mov
sub
jns
lcall
loope
test
push
push
push
insb
add
pop
insb
test
and
sub
mov
bound
push
mov
in
jo
shrl
sub
dec
loopew
scas
sub
xor
ficompl
or
rclb
cld
movsl
adc
dec
sbb
sti
das
fs
push
fucomi
fxch
sub
jne
and
add
lret
sar
pop
jp
pop
mov
and
es
lcall
and
pop
test
ds
push
mov
pop
xchg
out
sbb
cmp
cmpsb
imul
or
sahf
xchg
or
iret
inc
inc
jge
inc
and
movsl
fwait
sbb
out
hlt
in
out
cltd
enter
inc
test
and
sub
decb
outsb
clc
nop
rcrl
outsb
test
dec
xchg
cltd
mov
pop
xchg
pop
mov
test
mov
pop
int
out
push
sbbb
xchg
mov
inc
jo
cmp
or
out
popf
sub
jo
sub
repz
into
adc
sub
mov
in
sbb
adc
flds
faddl
imul
stos
gs
fisubrs
xchg
cmp
jbe
shrl
and
xchg
inc
cmc
in
or
jb
and
popa
sbb
shll
push
cmpsl
leave
clc
jecxz
movsl
mov
dec
in
fstl
rcrb
mov
dec
mov
ret
cmpsl
xchg
sub
mov
mov
sahf
insb
mov
cmp
mov
push
add
ret
fstps
cli
das
mov
pop
cmp
lahf
xor
inc
mov
mov
cmc
clc
cwtl
push
ret
and
sub
dec
loopne
jns
xchg
jne
mov
pusha
stos
popf
sub
inc
test
sub
or
mov
pushf
mov
leave
mov
and
sub
jp
fdivs
roll
inc
fs
mov
lods
cmp
stos
mov
ss
das
inc
enter
cmpb
bound
push
decl
int3
imul
sub
mov
xchg
aad
mov
cmpsl
imul
decb
insb
out
push
pop
loop
lcall
mov
movsb
cwtl
clc
lds
cmpb
xchg
gs
xchg
in
gs
cmp
scas
daa
add
pop
add
lea
popf
or
jnp
cmpsl
sub
imul
int
std
dec
xor
mov
sub
xchg
cwtl
sti
sbb
xchg
push
push
in
mov
xchg
imul
out
repnz
pushf
push
sub
iret
data16
testl
int3
mov
ja
xchg
lods
pushf
pop
jne
mov
leave
pop
push
insb
xchg
push
fs
inc
lds
inc
or
or
out
sbb
add
pop
mov
arpl
addb
adc
dec
test
mov
xchg
loope
sahf
subb
in
pop
mov
orl
ror
je
stos
ds
push
sub
lock
rcrl
push
mov
mov
jecxz
jecxz
lahf
ljmp
fdiv
cli
push
mov
sbbl
mov
mov
dec
add
mov
push
push
push
cmp
clc
lcall
mov
mov
fildl
aaa
clc
xor
add
push
pop
or
in
stos
ljmp
push
sbb
jne
les
fld1
imul
push
cmp
cs
sub
test
xlat
inc
jle
mul
mov
mov
insb
cmp
lods
mov
das
and
push
sub
add
lea
adc
jo
imul
scas
clc
cmp
bound
mov
js
mov
pop
scas
sti
inc
sti
js
mov
xchg
shlb
addl
stos
xchg
sbb
loope
pushf
adc
sbb
sbb
jl
ljmp
jle
dec
push
mov
cli
dec
pop
cwtl
jns
popf
rcl
leave
dec
push
sbb
jp
sahf
or
sahf
test
dec
add
xor
sbb
adc
shrl
sbb
mov
dec
mov
lea
pop
xor
ret
pop
lret
sub
sub
test
repz
fwait
imul
scas
add
push
mov
sub
mov
cld
mov
popa
in
push
lret
xor
pop
inc
shll
sub
xchg
sbb
int
clc
or
push
jb
xor
out
mov
inc
jle
dec
adc
fisubrl
movsb
sbb
mov
cmp
dec
cmpsb
xorl
add
cmp
add
adc
clc
inc
imul
or
mov
adc
ljmp
addl
jo
pop
icebp
push
xor
xchg
popa
aas
arpl
fistpl
negb
mov
sbbb
push
cmp
sub
pushl
push
repnz
or
call
cli
sub
dec
jg
inc
cmpsb
aas
idiv
aad
lods
imul
mov
aaa
lahf
sahf
pop
fcmovne
out
mov
xor
pop
push
xor
mov
addr16
adc
sbb
or
or
pop
jbe
dec
xlat
pushf
or
fidivrl
jg
xor
int
sub
sub
push
rorl
lods
ret
mov
out
push
pop
mov
sti
xchg
mov
jo
aam
pop
sub
loopne
xchg
lcall
lea
xchg
jns
lret
xchg
cltd
ret
pop
pop
gs
int
addr16
dec
jp
ljmp
jnp
pop
dec
fisttpll
adc
jecxz
cli
push
out
push
outsb
dec
mov
mov
popa
das
sti
pop
dec
push
sti
loopne
dec
push
push
fs
cmp
testl
cmc
jbe
shrl
out
sbb
es
int3
shll
imul
popf
mov
jp
cmp
xchg
adc
loope
push
enter
fisubl
jmp
mov
mov
inc
es
add
stos
outsl
jecxz
lea
lret
adc
push
int3
cmp
jnp
ljmp
cmc
jecxz
push
shrl
in
mov
sbb
pop
lret
aam
out
mov
fadds
out
jnp
jp
ja
nop
andl
je,pn
inc
mov
movsl
sarb
imul
scas
sbb
and
pop
push
sub
fidivrl
cmpl
stc
mov
lea
mov
add
pop
aaa
int3
push
fdiv
int3
inc
int3
pop
cmc
notb
and
or
addr16
xchg
sahf
dec
pop
add
lods
xchg
xchg
pop
std
sahf
in
lock
pop
push
test
lcall
or
pop
cs
dec
mov
rorb
lahf
ret
testl
jnp
loopne
xor
xchg
jae
roll
cmp
push
gs
aas
or
std
pop
inc
cmove
adc
pop
insb
sbb
push
or
stos
or
push
fdivs
lea
mov
push
mov
and
sbb
test
repnz
xlat
xor
insl
xor
sbb
das
mov
sub
loop
leave
lea
rcrb
ficoms
test
ss
test
fxch
fistps
mov
push
xor
adc
je
lods
mov
adc
mov
pop
pop
fstpt
jl
jno
mov
addl
jo
and
data16
int3
subb
mov
aas
loop
mov
pop
scas
mov
stc
push
in
sha1msg2
or
rorb
loop
xlat
icebp
push
test
fmulp
aaa
stos
ret
mov
adc
push
in
or
and
cmp
mov
cli
jno
and
das
fwait
mov
negb
mov
sub
int3
mov
fdivp
jg
pop
xlat
cwtl
mov
and
fmulp
mov
dec
lea
jle
int
lret
push
adc
pop
subl
dec
dec
pop
out
cmp
inc
dec
sub
jns
or
mov
push
cwtl
test
insl
sbbl
ficompl
cmpsl
cs
popf
imul
aam
nop
jns
nop
cmp
cli
addr16
pushw
hlt
ret
push
xchg
inc
divl
or
dec
dec
cmc
pop
xor
lret
mov
add
push
jb
mov
cmp
ljmp
std
jb
inc
cmpl
lea
inc
xchg
hlt
mov
dec
fnstsw
jnp
insl
lds
stos
or
mov
sub
dec
or
xor
or
mov
ss
inc
scas
cwtl
mulb
loope
jle
mov
jecxz
cmpsl
sub
pop
inc
push
ret
sbb
stc
hlt
pop
push
mov
adc
sarl
cld
int3
insb
xchg
in
les
outsl
fnstsw
cli
xor
add
push
mov
fisttps
jmp
insb
fwait
fwait
sarb
enter
mov
fdiv
scas
cltd
hlt
xor
daa
mov
pop
and
inc
mov
mov
iret
mov
mov
into
cmpl
fbstp
pop
mov
and
loopne
lods
arpl
shll
push
mov
jmp
jle
dec
inc
cmp
subl
jge
rcll
pop
in
dec
cmc
scas
cmp
add
xchg
xor
xor
das
adc
nop
lret
sbb
inc
adc
sbb
mov
mov
pusha
or
push
and
xor
lret
mov
dec
es
cmp
mov
daa
cltd
mov
or
insb
dec
pop
int
and
fbstp
lret
int3
dec
cltd
fnsave
jge
pop
hlt
cmpsl
out
and
out
stos
adc
outsb
insl
jge
push
mov
xchg
xchg
stos
mov
inc
pushl
aas
xlat
mov
mov
cmp
push
addr16
pop
sub
mov
jge
cmc
pop
shlb
lea
xchg
pop
and
mov
adc
or
nop
mov
sub
add
fstpl
add
fs
jg
xor
pop
dec
push
call
iret
insb
popf
jnp
rcr
fcomip
in
mov
mov
adc
mov
int3
mov
inc
arpl
xchg
icebp
loop
inc
jb
insb
gs
bound
xchg
and
push
cmp
jbe
out
js
push
fwait
xchg
jmp
xor
add
aam
mov
call
push
xchg
xchg
adc
xchg
push
shlb
pop
stos
les
ja
pusha
and
add
pop
cltd
inc
mov
aas
add
sbb
mov
je
jp
pop
mov
xlat
jmp
mov
inc
cs
mov
outsb
mov
push
add
gs
xor
xchg
lahf
pop
rcll
adcb
aam
movsb
cmp
jle
stc
mov
dec
les
cmp
stc
test
insl
fildl
repz
pop
push
mov
sub
shrb
sub
icebp
cmp
aaa
jnp
mov
jne
jns
dec
insb
pop
icebp
mov
adc
pusha
js
jae
xchg
shlb
scas
stc
fimuls
mov
pop
sahf
mov
jno
mov
push
data16
jmp
in
jge
cwtl
inc
mov
loope
pop
push
rolb
outsw
xchg
push
sbb
jns
in
js
mov
fsubrs
scas
push
inc
mov
mov
xchg
cltd
std
sbb
jmp
ljmp
jge
and
sub
adc
sub
roll
pop
movsl
andl
sbb
lds
insb
es
inc
enter
out
daa
stos
rep
push
dec
outsb
out
cmp
pop
adc
and
mov
fsubs
ja
dec
idivl
sahf
pop
xor
sarl
or
out
mov
mov
mov
inc
adc
lods
xor
addl
mov
inc
mov
inc
sbb
adc
inc
pop
lea
mov
fdivr
pop
pop
and
cwtl
jecxz
lods
dec
pop
icebp
fwait
fwait
xchg
cwtl
mov
les
dec
aam
add
jmp
cmp
xor
das
xor
mov
out
sahf
mov
imul
or
out
cmp
call
daa
stos
mov
mov
mov
inc
mov
aam
mov
pop
push
in
or
pop
mov
xchg
jns
mov
jp
les
mov
sub
sub
push
ljmp
sub
sbb
nop
inc
lock
dec
mov
inc
push
push
ret
adc
mov
enter
mov
movsb
hlt
sub
mov
movsl
push
adc
dec
add
imul
fldl
sbb
inc
aad
adc
sub
lret
pop
xchg
push
sarl
push
inc
xchg
outsl
mov
sub
fcomps
sbb
leave
xchg
inc
xchg
pushf
push
fimull
push
mov
decb
inc
push
mov
loop
xlat
leave
stos
and
and
mov
scas
lods
lock
pop
push
mov
fs
popf
cmp
mulb
in
cltd
loopne
add
repz
sbb
ret
jl
pop
lds
inc
dec
inc
sbb
sub
fisttpl
xor
jb
out
ror
sub
inc
push
pop
pop
push
mov
dec
mov
mov
lret
aam
xor
pop
test
push
daa
call
jo
pop
dec
pop
push
lahf
ret
dec
imul
leave
xchg
out
stc
divb
adc
mov
clc
adc
pop
dec
inc
xchg
or
ss
lret
aam
std
xor
rcrb
and
xchg
call
rolb
jg
inc
lret
push
cmpsl
xchg
mov
sub
sub
cmpsl
je
aad
sahf
add
out
ss
or
adc
adc
dec
inc
and
lea
add
xchg
dec
and
add
push
test
pop
xchg
fldt
mov
xor
in
cs
out
fimull
mov
and
imul
push
jb
mov
and
insl
ret
lret
mov
inc
adc
xchg
imul
out
imul
test
inc
cli
cmp
adc
sbb
movl
icebp
push
lahf
xor
jnp
scas
sbb
ret
jne
adc
cmpsl
pop
jne
push
sub
xchg
sub
in
dec
loope
test
pop
mov
pop
hlt
addr16
jo
push
lds
pop
pop
adc
mov
add
mov
notl
push
pusha
fisttps
xor
ja
js
jmp
or
or
add
int
pop
jbe
sub
inc
sbb
xchg
loope
cmpsb
mov
push
rol
pop
pop
popl
bts
mov
push
out
dec
jge
push
fcoms
out
das
paddsw
stos
mov
or
leave
push
mov
mov
sahf
add
mov
jmp
and
pushf
lret
cmp
cld
enter
fcmovne
cmp
push
sub
adc
mov
stos
call
mov
enter
in
inc
jo
cmc
icebp
lret
add
test
push
pop
xchg
mov
mov
pcmpeqw
setae
leave
cmp
outsb
pusha
xor
pusha
lahf
adc
in
mov
cmp
aas
mov
fldt
rcrb
xchg
xchg
mov
jmp
mov
adc
mov
adc
jp
rcrl
inc
sub
xor
push
les
add
cmc
clc
pop
ja
call
add
out
lret
rolb
shlb
lods
mov
cmpsl
dec
icebp
aad
cwtl
sub
cmp
push
jl
shl
sub
shlb
aaa
jo
mov
mov
imul
popa
inc
ror
jp
fcmove
mov
mov
sti
sub
clc
sub
sbb
fdivs
ss
scas
sbb
int3
jg
mov
int3
dec
xchg
jb
aad
jge
fs
xchg
jo
and
imul
sub
aaa
mov
icebp
popa
cli
fcomip
adc
cmp
fs
jne
ret
mov
sub
xchg
call
sbb
adcb
cmpsl
out
or
xchg
push
arpl
cmp
jp
andb
pushl
mov
or
jbe
sbb
test
fsubrs
in
mov
dec
fs
lcall
cli
and
push
pusha
sti
xchg
cmp
cmp
xchg
sbb
movsl
push
lea
inc
mov
add
fwait
aam
mov
es
ljmp
xor
cmpsb
add
dec
sbb
cmp
add
int
daa
cmpl
in
ss
sbb
xchg
lahf
mov
in
and
sub
xchg
push
push
xchg
stos
out
or
out
mov
movsb
add
mov
ror
mov
inc
and
imul
adc
mov
xor
cs
pop
outsb
pushf
push
jge
xchg
clc
mov
imul
mov
loop
ret
push
or
adc
xor
mov
mov
fmul
add
add
add
movsl
imul
loope
enter
add
in
mov
xchg
std
mov
or
rcrl
nop
es
xlat
mov
sbb
mov
ljmp
lds
hlt
sbb
out
or
std
add
mov
sub
inc
sarl
mov
jns
dec
mov
xchg
faddl
mov
sti
mov
loope
cmp
loop
cmpsb
sbb
repnz
mov
pusha
insl
out
es
sbb
push
adc
scas
js
rorl
lods
mov
pushf
push
shrb
dec
and
sub
fbld
mov
xorb
xor
scas
xlat
shlb
scas
xor
dec
or
push
adc
cmp
test
pop
inc
pop
mov
out
push
cld
test
fs
test
clc
dec
push
aad
icebp
inc
les
dec
pop
mov
mov
std
fwait
cld
push
test
in
xor
cmp
lds
fildl
add
ficompl
arpl
push
add
dec
mov
dec
or
mov
cmp
mov
orb
sbb
mov
iret
mov
mov
lds
push
pop
jb
mov
sbb
xchg
out
jecxz
and
mov
mov
sbb
jno
lret
add
sti
and
daa
mov
adc
jb
cmp
lock
fs
mov
or
sbb
xchg
dec
mov
fwait
test
xor
push
mov
mov
fsubrl
rcrb
ss
popa
aad
test
mov
mov
mov
imul
sbb
popf
mov
adc
es
cwtl
xchg
jmp
ret
mov
std
cmp
xor
mov
lret
scas
addr16
aas
push
mov
or
sbb
frstor
shll
rorl
jle
arpl
call
xor
out
dec
xor
adc
in
test
addr16
dec
daa
movsb
push
mov
lea
imul
rcrl
cmp
jl
clc
push
cld
aad
lea
pop
jl
movsb
mov
int
mov
xor
inc
sbb
popa
vorps
jmp
ret
imul
sar
jge
shrl
mov
and
ds
fstl
lea
mov
ljmp
in
jo
nop
out
dec
push
je
and
lods
mov
fucom
cli
notb
cwtl
add
je
sub
sti
test
or
inc
mov
movsl
cmp
inc
int
and
mov
in
sub
jb
subl
jo
clc
pop
mov
jge
jl
dec
bnd
sbb
mov
jmp
ror
push
lock
sub
mov
std
mov
int
test
arpl
loope
push
jae
xchg
sub
shlb
fxtract
mov
out
femms
test
jp
inc
cmp
xor
sbb
lret
sub
pop
xchg
inc
and
push
in
ja
or
sub
xchg
clc
xlat
in
sub
ljmp
mov
cmp
mov
push
fstps
jo
sahf
cli
bound
fdivrl
test
pop
sti
sbb
pop
dec
adc
xorl
leave
mov
push
into
sub
je
pop
jp
jbe
popa
inc
mov
cmp
in
mov
push
xlat
xchg
std
inc
mov
pop
sbb
jbe
je
mov
push
cwtl
adc
into
dec
pushf
test
lock
hlt
xchg
pushf
xchg
pop
fbld
add
cmp
fisubrl
cwtl
sub
lahf
ljmp
push
cmp
sbb
add
push
movsb
pop
popf
sbb
pop
xchg
jnp
jo
cmp
pop
test
adc
fisubrs
popf
sbbl
loopne
sarb
hlt
mov
movsl
pop
push
adc
dec
sub
mov
leave
scas
sahf
movsb
sbb
cmc
clc
push
sub
sbb
dec
shll
pop
in
sarb
movsb
jnp
jmp
loop
cmp
lock
outsl
jnp
mov
mov
push
sub
fwait
cmpsb
fadd
int
or
or
add
pop
adc
jle
mov
pop
aam
add
je
adcl
cmc
jae
xor
ficoms
dec
mov
neg
data16
mov
lods
shrb
lea
imul
push
ja
lret
daa
outsb
pop
jl
ljmp
leave
cmp
pop
sub
addl
mov
int3
hlt
loop
jno
and
jmp
inc
pop
mov
sahf
cli
jecxz
inc
mov
xlat
push
or
sahf
sbb
fiadds
mov
fnstsw
cs
xor
lods
in
test
add
xlat
xor
sub
in
fildl
test
movsb
mov
mov
inc
xchg
xorl
cmc
out
cltd
pop
sbb
movsb
fs
xchg
sbb
cmc
call
out
fsubrs
cmp
sahf
es
in
fnstsw
or
mov
inc
cmpsb
ljmp
es
inc
xchg
and
repz
ficompl
bound
xor
pop
addr16
rcll
xchg
dec
rol
outsb
sub
sbb
rclb
hlt
imul
movl
jb
cld
jnp
fistpl
aaa
add
adc
jl
enter
mov
mov
jns
mov
cmp
popf
sub
inc
incl
dec
test
movsl
push
ds
loope
or
push
in
pop
cmp
out
and
jecxz
push
inc
adc
leave
xchg
add
mov
ficoml
incl
cli
pop
xor
lcall
fsubrl
jne
leave
or
pop
push
mov
pop
pop
xor
insb
sub
and
rclb
sub
notl
inc
out
adc
repnz
in
mov
aad
les
cwtl
add
shrl
lods
sarb
movsb
out
sub
sub
and
leave
push
xchg
fisttps
sbb
dec
fistl
aaa
pushf
xchg
push
fwait
idivb
mov
int
or
addr16
scas
or
jl
xchg
nop
inc
arpl
mov
data16
sbb
nop
mov
adc
std
or
cmc
test
rolb
loope
movsl
dec
inc
in
loopne
add
mov
dec
aas
lret
adc
imull
cmp
cli
imul
fisttpl
shl
pop
int
gs
inc
pop
pop
ss
imul
sbb
enter
jmp
ret
push
xchg
test
xchg
std
shll
or
push
daa
mov
clc
push
les
cmpsb
insb
into
popf
rorb
dec
movsl
out
sub
mov
out
scas
divb
pop
test
or
xchg
notl
cmp
mov
fisubrl
leave
push
xor
gs
add
shlb
mov
push
mov
insl
out
dec
cmp
sbb
cmp
sbb
hlt
sbb
mov
add
adc
ret
std
sub
jno
cmp
pushf
mov
shll
fsubl
push
jnp
inc
cs
sub
mov
mov
loop
int
shlb
call
adc
xchg
imul
pop
push
faddl
sub
pop
push
ss
adc
or
pop
es
adc
cmc
and
rcll
js
jge
xchg
dec
or
dec
sub
les
in
ficomps
sub
int
and
out
sbb
hlt
into
mov
inc
or
iret
clc
mov
inc
or
in
cltd
mov
rol
aam
ficomps
dec
and
push
sub
sarb
lret
hlt
fisubrl
inc
xor
add
insl
shrl
filds
out
cmp
mull
in
mov
jbe
movsb
mov
pop
xchg
loope
adc
cmp
stos
and
push
inc
pop
aaa
add
adc
sbb
jmp
movsl
inc
movsb
jmp
ret
test
push
pop
mov
fwait
data16
je
mov
xchg
jmp
lds
mov
cmp
stos
daa
rorb
cmpsl
cs
and
pop
or
jno
loop
xor
and
lds
test
ret
pop
stos
adc
sahf
and
in
mov
fimuls
cmp
dec
stc
xlat
bound
lret
movsl
cmp
mov
pop
out
or
int3
mov
jmp
hlt
into
scas
and
cli
into
out
mov
xchg
iret
loopne
shl
sbb
pop
test
inc
stos
aas
mov
or
popa
rep
inc
cli
xchg
jl
adc
xor
insb
adc
in
add
repnz
xchg
popf
or
mov
pop
push
add
mov
lods
ret
pop
lock
mov
adc
pop
fstpt
fdivp
add
lock
jae
sete
loop
inc
jb
rcrb
ffree
mov
cs
xlat
aam
lahf
outsb
or
adc
cmp
push
pop
xor
adc
int
ja
js
sbb
pop
fwait
sbb
push
push
adcb
pcmpeqd
jecxz
adc
lods
ljmp
push
out
push
bound
pop
arpl
test
movsl
mov
cmp
add
and
cmpsb
out
dec
push
pcmpeqb
xchg
mov
mov
inc
pop
stos
push
mov
cmp
out
add
xchg
inc
push
xor
clc
jmp
xchg
fisubl
jle
negb
or
mov
xor
leave
mov
push
movsl
sub
cmp
xchg
fwait
cli
mov
ret
sbb
das
inc
mov
mov
adc
mov
sbb
clc
sar
jp
pop
imul
fcomi
das
sbb
and
mov
pop
push
jb
inc
lds
sbb
xchg
adc
js
orb
stc
mov
mov
adc
notl
cli
repz
dec
add
outsb
mov
and
xor
xchg
imull
cwtl
xlat
dec
sub
aad
outsl
sbb
enter
add
repz
lock
fadd
mov
jl
pushf
push
in
std
mov
jae
icebp
leavew
idivl
aad
popf
cmp
fildll
repz
sub
faddp
pushf
mov
testl
jno
xor
fildl
mov
sub
sarl
pop
sbb
mov
je
cmp
jbe
les
hlt
int3
dec
or
and
rclb
pop
mov
mov
insb
test
mov
jnp
sahf
in
jmp
jae
stos
jecxz
pop
insl
mov
in
rclb
fidivrl
or
or
bound
jae
insl
xchg
dec
insl
out
push
adc
or
clc
cmp
or
adc
and
gs
push
ficompl
incl
jbe
xchg
mov
test
notb
jle
icebp
mov
sahf
movsl
mov
jno
and
clc
mov
lods
dec
popa
jb
mov
nop
cld
hlt
push
and
subb
jle
sbb
ficoms
mov
mov
movsl
aaa
pop
adc
pop
pop
aaa
push
add
mov
and
lret
dec
dec
repz
ficompl
aaa
aas
aaa
sbb
jge
movsb
lds
js
les
dec
stc
dec
icebp
pushf
adc
jmp
fnstcw
mov
loopne
pop
mov
stc
inc
dec
sub
mov
sbb
cmp
aad
cli
pop
shlb
test
add
and
cmpsl
xchg
push
add
stos
push
dec
ret
or
pop
mov
fnstcw
pop
jne
lret
push
fmull
pop
scas
inc
adc
test
leave
aad
lahf
adcl
sub
sbb
lfs
lret
dec
into
sbb
imul
jp
pop
mov
jecxz
adcb
add
lock
add
lock
xchg
dec
bound
pop
mov
icebp
push
jbe
jne
mov
stos
cli
jmp
sbb
jg
pop
data16
pop
adc
pop
push
ret
jle
dec
adc
pop
lret
push
push
lods
cmp
and
cmc
cmpsb
sbb
cs
aam
sahf
push
orl
popa
loope
adc
cmp
dec
add
pop
xchg
sarl
pop
sub
sahf
mov
andl
mov
cmp
scas
clc
in
loope
add
pop
mov
repnz
cmp
pusha
mov
enter
cs
in
popl
cli
mov
inc
jae
push
sbb
pop
cmpb
movsl
std
xchg
add
mov
sbb
fstl
ds
jmp
lcall
or
mov
pop
out
add
lea
lea
inc
lahf
xchg
and
xchg
int
dec
std
xor
adc
loopne
nop
jmp
and
jbe
mov
sbb
xor
cs
call
or
push
shlb
add
call
xchg
xchg
subl
out
out
out
xchg
cmp
inc
mov
inc
push
xor
cli
adc
and
cltd
sbb
jb
xchg
call
dec
test
mov
cmpsl
lahf
jle
or
cmp
and
pop
push
mov
mov
lods
add
add
add
mov
gs
xchg
or
inc
mov
test
lock
add
pop
scas
dec
aaa
dec
push
addr16
bswap
bound
subl
mov
rcrb
pop
sti
pop
ret
ret
clc
cwtl
aam
cmpsl
shrb
inc
mov
add
adc
push
imul
push
mov
cmp
adc
lretw
enter
mov
add
and
roll
jmp
pop
js
cmp
mov
jns
mov
aad
das
xor
sbb
inc
jne
jmp
ret
and
dec
or
pop
mov
jb
push
pop
cmp
mov
mov
int
hlt
xchg
adc
inc
mov
adc
and
in
repnz
shlb
fcmovu
push
lea
xchg
test
mov
xor
add
xchg
pop
das
hlt
xchg
movsl
ljmp
cmp
insb
dec
mov
push
inc
pop
fiadds
mov
jb
sub
rolb
rorl
dec
dec
je
mov
stos
push
add
jmp
or
sub
mov
pop
mov
hlt
test
pushf
lock
fstpl
fwait
dec
push
sbb
adc
mov
mov
or
sbb
nop
xchg
popf
scas
in
mov
xchg
test
push
imul
adc
mov
es
rorl
and
inc
sbbl
push
add
mov
ret
loopne
repz
into
xchg
popf
out
movsb
jp
cmpb
std
rorb
push
lock
rolb
iret
lods
pop
xor
lock
loope
xorl
mov
adc
data16
sub
dec
jmp
in
stos
jbe
nop
std
sbb
xchg
xlat
pop
add
shlb
mov
pop
incb
pop
mov
lcall
bound
bound
imull
mov
mov
pop
insb
mov
rcrl
xchg
inc
ljmp
hlt
or
scas
imul
lahf
cmc
iret
push
sahf
sub
in
pushf
bound
or
dec
xchg
sahf
in
cs
push
and
mov
jle
popa
pushf
push
call
or
jnp
in
and
lcall
repz
cwtl
inc
insl
repz
mov
test
rol
jno
mov
fsubrs
or
push
test
lock
ss
pop
imul
mov
sub
cmpsb
add
mull
ret
ss
mov
sbb
jb
sub
mov
push
sbb
push
mov
daa
add
jbe
lea
add
into
jno
mov
pop
mov
fnstenv
fsubrs
aam
fistpl
hlt
push
xlat
les
xchg
xor
into
mov
in
in
pop
sti
mov
mov
in
popa
mov
jge
out
pop
imul
scas
cmp
xchg
xchg
and
jl
mov
leave
sub
or
xor
mov
dec
lods
xor
dec
fs
jge
pop
mov
mov
jnp
loope
leave
mov
lea
mov
sbb
out
fcoms
rolb
ljmp
jecxz
push
outsl
jno
notb
mov
pop
adc
mov
xchg
mov
push
sbb
addb
andl
add
jne
mov
in
dec
inc
add
orl
sti
mov
jbe
push
mov
add
popf
mov
pop
mov
out
lahf
mov
push
jne
hlt
and
push
sbb
adc
cld
movsl
jmp
fs
cmc
push
or
arpl
mov
inc
sbb
cmp
inc
cmp
xor
push
sub
in
mov
popa
mov
daa
test
fs
pop
ja
je
lea
addb
rclb
adc
sbb
adc
jae
in
sub
fmull
popf
push
adc
push
pop
test
div
div
aam
push
leave
adc
ss
mov
notl
test
cltd
int3
pop
mov
fsubr
sbb
mov
inc
pop
hlt
mov
cmp
cmpsb
sub
dec
std
mov
repnz
jnp
jno
loope
mov
fstpt
movsl
push
movsb
fsts
jle
sbb
call
scas
test
jp
mov
mov
push
das
into
leave
sti
jmp
enter
jnp
xchg
add
sbb
mov
adc
push
fcomps
and
xchg
mov
or
fwait
sub
xchg
out
andl
scas
and
daa
lods
jg
or
pop
fildl
fcmovnu
and
cwtl
inc
je
test
jne
aam
pop
loopne
inc
scas
cmp
lret
mov
fucom
lret
in
mov
ja
and
nop
mov
in
mov
cmp
std
pop
xchg
iret
dec
stos
add
jb
sti
aam
mov
xor
add
xor
lods
bswap
rclb
insb
sbb
xchg
pusha
fwait
dec
into
jge
ret
jo
outsb
sbb
icebp
jb
mov
mov
cmp
or
mov
dec
mov
xorb
push
pusha
pusha
es
les
out
sub
lahf
shll
dec
xchg
jae
in
imul
loope,pt
notl
pusha
testb
es
cmc
ja
sti
iret
jb
push
aas
dec
jns
inc
repnz
cmp
sbb
mov
push
cwtl
or
lcall
jle
stos
dec
cltd
ret
mov
lcall
rcrb
cmp
pop
and
xchg
mov
std
mov
pop
icebp
mov
mov
int3
cmpsl
or
rcrl
mov
rclb
lret
adc
dec
lret
shll
adc
pop
loopne
xor
inc
push
outsb
stos
mov
push
out
and
xor
push
insl
add
push
jnp
push
outsl
lock
dec
stos
shrb
xor
rclb
xchg
loope
pop
pusha
into
or
imul
dec
fnsave
enter
adc
add
mov
pop
mov
jp
pop
xor
inc
in
fistps
loopne
xchg
jge
push
jp
or
mov
push
stos
dec
neg
dec
adc
out
data16
sbb
sub
or
int
add
dec
jnp
in
test
jl
lahf
mov
subb
insl
adc
addr16
push
cmp
clc
popa
sbb
mov
mov
cli
in
jmp
jge
dec
aas
cwtl
xor
push
xchg
jnp
jle
out
inc
dec
dec
push
sub
xor
hlt
popa
ret
and
and
sbbl
jg
push
fmuls
and
push
lea
or
inc
sub
pop
movsl
push
xor
aaa
add
imul
or
leave
dec
inc
out
cmp
fimull
into
push
cmp
pop
xchg
xor
jnp
mov
jp
fsubl
mov
cs
inc
dec
popa
mov
fdivl
mov
in
std
repnz
dec
adc
pop
or
ret
mov
rcll
out
inc
mov
mov
pop
cwtl
jecxz
call
test
cmp
push
fwait
nop
xlat
pop
jg
loope
loopne
ret
pop
int3
incb
or
jl
test
dec
xor
negl
das
mov
dec
mov
mov
in
adc
and
mov
out
sub
ds
jecxz
or
or
pusha
or
js,pt
insl
jb
cld
add
imul
push
xchg
mov
sbb
fst
xorb
test
cmpsb
jbe
mov
aam
rcr
inc
sub
adc
push
or
pop
jge
dec
push
or
fsubr
xchg
inc
cld
je
adc
mov
imulb
sub
shl
xchg
jo
addr16
iret
jg
jge
lds
scas
mov
fdivrs
jmp
dec
mov
and
sbb
xchg
scas
xchg
clc
pop
xchg
mov
bound
int
cmp
dec
frstor
adc
xchg
out
cmp
repnz
leave
mov
xlat
lahf
mov
sub
jnp
in
pusha
movb
scas
sbb
imul
sbb
roll
add
xchg
adc
jne
loop
ljmp
adc
push
setno
pop
mov
mov
shlb
fisubl
xor
lret
pushf
xor
inc
sub
std
pop
ret
int3
pop
fisubrl
movsb
jle
stc
in
test
mov
push
cli
pop
dec
fcomps
dec
fwait
xor
sbb
adc
pop
ljmp
popa
lods
pop
push
pop
pop
test
push
pushf
inc
in
mov
mov
dec
mov
jnp
pushf
mov
imul
cmp
call
and
adc
in
jno
ret
xor
ret
and
daa
cmpsl
xor
xor
ds
bound
jno
mov
mov
test
or
or
jbe
and
add
lret
and
sub
pop
jl
test
gs
shlb
and
push
orl
test
inc
dec
mov
iret
mov
shr
mov
push
shll
iret
shll
add
andl
sub
enter
int3
push
daa
fsub
test
ja
xor
into
cmpsb
bound
je
iret
pop
and
imulb
sbb
and
cmp
iret
clc
mov
inc
mov
pop
dec
sarb
cltd
lods
repnz
mov
push
insb
adc
cwtl
andb
dec
xchg
sub
sub
mov
js
addr16
in
iret
lods
test
and
adc
push
mov
js
xchg
mov
enter
cmp
and
jmp
and
pop
repz
cmpsb
into
movsl
popf
pop
fldl
push
shrb
cmp
xchg
call
fsubp
ss
pop
mov
in
inc
xchg
adc
cltd
add
push
inc
movsb
pushf
inc
data16
pop
std
or
iret
mov
call
mov
int
add
and
mov
addr16
push
cmp
or
movsl
mov
les
cltd
icebp
out
filds
lcall
pop
pop
dec
mov
movsl
loopne
dec
xchg
call
out
sti
cmp
mov
cwtl
cwtl
cmp
fwait
ret
xor
push
push
add
pop
sbb
jle
sahf
adc
sar
add
inc
push
std
jo
sarb
cld
cmc
push
jb
mov
fistpl
xor
aas
pop
into
loop
hlt
repz
movsb
or
sub
and
xlat
addr16
mov
jge
stos
or
fidivrs
mov
imul
mov
mov
imul
sub
jnp
add
sbb
push
mov
push
sub
fsts
mov
cwtl
adc
mov
stos
or
pop
clc
xorl
adc
inc
cmpsl
dec
rclb
stos
popf
xchg
das
subl
pop
sahf
mov
pop
sbb
mov
loop
out
rorl
stc
push
enter
test
imul
jno
sub
mov
pushf
daa
xchg
ja
dec
popf
jecxz
push
test
bound
mov
xchg
pop
inc
ljmp
enter
dec
mov
hlt
push
fmull
inc
test
bound
icebp
push
dec
bound
aam
jnp
sub
adc
mov
addr16
jbe
cld
mov
mov
fndisi(8087
fucom
add
jecxz
mov
add
outsb
ffree
ficoms
rcrl
xchg
cld
push
push
sub
jmp
mov
push
jnp
arpl
sbb
xor
xor
insl
movsb
lods
shufps
mov
cmp
push
push
sub
inc
cmp
dec
hlt
dec
fsubrs
jmp
sahf
aam
jno
inc
adc
xchg
je
sti
mov
je
loop
push
stos
push
xchg
iret
shrb
mov
test
loopne
mov
inc
mov
aas
out
xchg
sbb
iret
pusha
mov
or
push
dec
cld
and
xchg
scas
dec
cmp
movsl
mov
test
dec
sub
and
fdivl
ror
aam
hlt
call
fwait
in
mov
sub
and
sbb
inc
sarb
pop
rol
insl
mov
push
fisttpl
mov
pop
mov
aad
mov
fisubs
adc
fmuls
addb
fst
pop
mov
push
xor
dec
das
movsb
pop
dec
pop
sub
or
sub
je
cmp
ja
mov
test
repz
mov
cld
addr16
dec
pop
add
movl
jge
negb
into
push
sub
inc
cmc
fdivrl
bound
sbb
cmpsl
cs
lret
mov
fldt
sub
repz
xchg
ljmp
xlat
subl
add
daa
pop
pop
pop
in
lret
in
adc
pushf
xchg
adc
jp
pop
call
jno
sub
cwtd
adc
pusha
ficompl
xchg
insl
mov
xor
xchg
xchg
out
sub
cmp
call
cs
stos
mov
mov
push
shl
xor
lods
aas
xor
jno
ds
mov
fisubs
xchg
adc
cmpsb
push
lahf
arpl
lock
lds
cmp
dec
push
in
jg
js
clc
mov
push
jp
les
imul
xor
dec
push
xchg
es
lret
bound
icebp
loopew
jbe
push
push
and
jg
popa
int3
int3
mov
daa
dec
test
iret
in
push
int
jb
pop
xor
add
or
aas
pushf
cmp
xor
dec
fsub
lods
movsb
adcl
les
add
xor
adc
mov
es
cmp
loop
cmp
sbb
xchg
add
cmp
sub
mov
popa
cmpsb
and
arpl
pusha
adc
xchg
cmp
dec
cltd
inc
dec
inc
cmpsl
sub
jmp
lods
js
bnd
pop
imul
mov
lahf
outsl
add
mov
or
jnp
insb
fs
cli
dec
xchg
sub
test
not
jmp
push
or
sub
lods
ss
das
inc
mov
flds
dec
xor
lea
xor
ja
repz
in
fcomps
in
arpl
lods
cmp
out
xchg
sbb
nop
rcrb
jle
mov
or
popf
icebp
xchg
pop
or
cmp
rcl
mov
cs
sbb
testb
sti
mov
pop
mov
into
fistl
fwait
jl
inc
add
dec
ljmp
xlat
cs
nop
fs
dec
insb
inc
hlt
repz
cli
or
mov
fucomp
js
mov
jmp
cmc
test
xchg
mul
fimull
insl
cs
out
cmp
or
sbb
test
cmpsb
les
push
test
imul
cmp
ds
cmp
xchg
imul
add
cmp
mov
cmp
xor
je
loopne
fldt
jno
loopne
aad
mov
mov
dec
pop
xchg
mov
sub
mov
aad
dec
mov
out
test
cld
adc
insb
mov
leave
movsb
dec
fsubrl
add
test
dec
lret
leave
scas
push
imul
or
jge
mov
sbb
sar
bound
outsl
pop
push
mov
dec
jge
into
sbb
and
xor
mov
or
add
mov
loopne
jecxz
and
out
rcrl
inc
lds
loope
fsts
dec
jo
xchg
sub
mov
fwait
xchg
jno
fisubrl
loop
push
or
cmp
add
inc
imul
sahf
fidivrs
jbe
push
shlb
in
stos
push
or
jge
fisttpl
and
sti
jns
pop
ljmp
shr
and
in
jg
pop
in
aad
imul
ljmp
aaa
push
mov
sbb
cmpsl
sub
ret
and
pop
jl
test
inc
aas
pop
jne
or
repz
sbb
jg
ret
ds
jae
lret
popa
mov
lret
movsb
inc
out
add
jmp
xchg
push
mov
scas
fld
ja
dec
push
test
xchg
enter
ss
rcr
sti
push
jle
out
das
sub
xchg
xor
or
push
push
dec
cmpsl
jnp
rcrl
sarb
add
add
decb
mov
and
mov
inc
sbb
mov
mov
jp
jmp
js
mov
and
mov
push
in
sub
or
adcb
sahf
lds
cmp
push
xchg
mov
inc
mov
insl
pushf
push
mov
inc
in
xchg
push
sbb
xor
or
insb
jl
aas
or
mov
mov
dec
jecxz
fimuls
jo
and
pop
sbb
mov
add
sub
sbb
cmp
and
pop
sti
mov
pusha
mov
cmpsl
js
insl
pop
loopne
xchg
pop
enter
jns
insb
cmp
inc
xchg
mov
iret
jmp
je
rcll
cmp
adc
incb
leave
fstl
add
sti
pop
sub
inc
repnz
jno
mov
loope
cmp
xor
pop
mov
arpl
imul
push
lcall
mov
out
adc
add
xchg
xchg
pop
cmp
mov
xchg
pop
adc
xor
ret
cld
and
sbbb
jnp
stos
pop
ret
lods
xchg
lret
jp
mov
and
rolb
push
pushf
stc
push
insb
rorb
lret
cld
incb
cld
movsb
call
mov
out
sub
ror
fldenv
pop
scas
popf
push
les
lret
jg
mov
push
add
mov
lret
dec
mov
aad
cmp
in
dec
imul
or
dec
outsb
pop
andl
insb
mov
jl
sbb
inc
push
cs
dec
lahf
fs
ja
jmp
adc
decb
adc
inc
icebp
popa
sahf
fbld
lods
pop
popl
cmc
adc
cmp
adc
sbb
adc
xor
adc
mov
aad
popf
lock
or
test
adc
push
fsts
cmp
jae
mov
mov
rorl
js
inc
jecxz
xchg
cmp
loopne
dec
xchg
loop
mov
xchg
lcall
jl
and
mov
push
add
mov
push
adc
sub
sti
push
ja
cli
jge
fcomp
mov
mov
cmp
lds
sub
mov
mov
int
ret
scas
sbb
mov
inc
or
mov
cmp
xchg
sub
and
negl
daa
add
push
cmp
mov
cltd
mov
imull
mov
lods
and
pop
cmpb
dec
movaps
and
add
cltd
xchg
push
popa
inc
xchg
or
pop
les
enter
call
add
lock
or
icebp
into
loope
push
xor
into
sub
sbb
cmp
roll
push
out
loope
aaa
mov
jp
cs
jnp
push
or
popf
mov
jnp
inc
arpl
push
or
fnstcw
mov
cwtl
sbb
shlb
pop
add
mov
jg
push
add
in
dec
mov
data16
test
lds
jno
adcl
outsl
jge
xlat
xor
in
dec
jo
mov
inc
sbb
mov
jmp
es
fisubs
mov
in
cld
iret
in
scas
mov
in
inc
adc
lcall
inc
xorl
adc
andl
sub
mov
push
jle
clc
loopne
xchg
or
jl
jecxz
pop
cmp
gs
mov
cli
cmp
xchg
bound
mov
shlb
and
jle
xor
or
jae
fldenv
les
lock
dec
in
push
std
je
xchg
sbb
test
or
pop
out
in
sbb
enter
cmp
jae
cmp
cmp
pop
mov
or
sub
sub
addb
cli
pop
out
push
mov
movsl
inc
imul
mov
and
sbb
or
xchg
repz
mov
loopne
fwait
daa
jne
mov
fsubs
insl
push
scas
mov
jp
and
js
xchg
cwtl
mov
add
pop
inc
pop
in
jnp
sbb
sub
add
push
xchg
adc
shll
pop
pop
idivb
out
sarb
inc
dec
mov
sub
ja
ret
gs
push
xor
shl
adc
aaa
sub
movsb
aad
aam
negl
aaa
std
or
das
xchg
sub
es
or
sbb
sarb
loopne
dec
adcb
adc
add
mov
mov
or
mov
mov
mov
add
jmp
mov
inc
adc
sbb
out
adc
mov
sahf
cltd
pushf
in
xchg
jecxz
decb
jns
ficomps
adc
jge
pop
mov
fbld
in
jno
mov
cmpsl
sbb
push
mov
pop
fidivs
push
imul
outsl
and
out
mov
mov
mov
int
test
mov
jl
jl
jbe
mov
int
out
jp
pop
push
push
fstl
inc
fbstp
call
pushf
in
add
fwait
out
pop
enter
or
add
mov
insl
dec
lods
into
popf
push
das
ds
or
rcl
mov
fcomip
push
clc
mov
insl
inc
sub
shll
dec
scas
rorb
add
fnstsw
sbb
mov
stos
or
jae
sbb
dec
sahf
mov
lret
fadd
mov
pushw
sbb
add
fwait
inc
push
testb
das
sub
mov
push
pop
push
clc
dec
xchg
jmp
add
xchg
dec
test
test
popf
push
xor
jg
jle
xchg
movsl
mov
cli
mov
shl
daa
daa
adc
push
jbe
cwtl
xor
enter
adc
daa
out
inc
iret
pop
sbb
popf
pop
xlat
dec
jns
dec
les
insl
jo
jno
js
mov
cmpsb
ja
adcb
lret
divl
fcompl
mov
jno
js
jno
mov
lock
divl
push
mov
mov
icebp
inc
sahf
lret
dec
xchg
fs
out
dec
outsl
sbb
mov
movq
jno
mov
inc
push
div
imul
dec
shrl
inc
jmp
es
sbb
push
pop
cld
mov
push
loop
in
sub
test
sbb
jecxz
movsb
and
fidivrl
sbb
stos
leave
and
ds
mov
ret
xchg
shr
mov
jno
xchg
cli
jg
xchg
insb
aam
inc
mov
aam
rcr
orb
iret
cmp
out
pop
orb
or
stos
call
push
clc
add
aaa
mov
movsl
insb
aad
push
sub
lcall
xchg
adc
adc
xor
jo
pop
rolb
add
lods
aad
sbb
pop
rol
cltd
mov
dec
mov
cmc
rcrl
dec
rolb
lcall
in
shlb
cmpl
dec
cmp
shll
sti
ljmp
imul
out
cmpsl
loop
mov
push
orl
in
rorl
mov
out
in
dec
inc
repnz
mov
int
jmp
inc
je
mov
push
jae
jmp
sub
scas
adc
add
mov
xchg
je
jo
cld
xlat
inc
mov
and
test
jecxz
push
push
mov
inc
dec
lods
jl
push
inc
and
lret
test
xchg
xchg
jno
outsl
outsl
sti
sub
ficoms
inc
xor
push
loopne
push
in
push
cmp
pop
inc
push
cmpsl
insl
rcll
psraw
push
gs
add
arpl
repz
pushl
mov
xchg
xchg
ret
xor
push
repz
int3
nop
xchg
rorb
mov
adc
push
push
loope
xor
adc
rclb
jns
clc
data16
stos
fstl
stc
cmp
mov
dec
test
sub
lods
mov
mov
sub
jmp
xor
ja
mov
push
js
or
sbb
sbb
js
push
ljmp
dec
jle
loope
sub
jo
pop
cltd
push
lds
repnz
jmp
mov
cli
dec
das
loop
test
push
aas
xchg
sahf
mov
iret
cmpb
rorb
jno
or
xchg
test
inc
test
add
pop
jl
mov
xor
push
leave
cmp
cmpsl
pop
jmp
xor
test
cltd
xchg
daa
and
shll
dec
jle
xor
into
movsl
mov
imul
or
test
in
rcrb
imul
hlt
shlb
cltd
pop
repz
es
dec
xchg
stos
mov
mov
shll
scas
mov
repz
cmp
in
sbb
ljmp
mov
negb
add
dec
ret
mov
inc
mov
pop
cmp
std
fsubrs
pop
xchg
xchg
test
lea
sub
imul
mov
inc
inc
divl
lods
pop
xchg
roll
mov
lock
push
mov
daa
ljmp
pusha
adc
mov
dec
rclb
loopne
mov
add
cmc
inc
arpl
leave
inc
and
xor
jo
mov
xor
gs
cli
les
sub
js
jo
pop
mov
mov
popf
or
mov
fimull
jp
jp
pop
mov
adc
loopne
xor
das
inc
lcall
shrl
sbb
add
popa
mov
jb
aas
add
xchg
aas
and
push
adc
cmpsb
and
mov
mov
fimull
sub
dec
iret
jnp
sbb
outsb
and
pop
adc
jle
sahf
mov
jge
mov
in
and
adc
pop
pop
stc
ret
push
into
cwtl
pop
notb
adc
stos
int
inc
imul
enter
loop
popa
mov
pop
loope
push
mov
mov
fistl
push
xor
sub
enter
cmc
shlb
pop
das
sub
and
arpl
loopne
and
cmp
lds
sbb
and
ret
or
pop
cmpb
aaa
pushf
imul
mov
xor
shrl
divb
sbb
or
mov
xchg
into
push
dec
mov
or
scas
inc
xchg
fimull
pusha
cmp
test
sti
adc
cmp
int3
shlb
outsb
sub
mov
adc
cmp
pop
pop
lds
and
xlat
sbb
aaa
inc
jge
or
and
jno
orb
xchg
ret
fcoms
insb
or
aam
testb
loopne
mov
stos
scas
fimull
movsl
mov
les
aam
add
int3
int
clc
je
and
leave
pushf
pop
test
push
cmc
mov
mov
xor
xchg
aas
cld
mov
jge
or
jbe
add
dec
dec
push
or
mov
inc
sbb
mov
scas
jno
mov
popf
and
sbb
xorb
adc
jp
inc
push
clc
jge
push
xlat
cmp
adc
mov
xor
mov
cmp
lods
pop
notl
outsl
push
sbb
ret
xchg
loop
clc
push
jb
mov
insl
in
fldl
scas
data16
adc
test
in
out
out
sti
sub
sbb
arpl
inc
pop
inc
test
add
adc
mov
aad
mov
das
addr16
aad
or
jl
mov
loop
sbb
or
cltd
add
aad
outsb
pop
fimuls
lret
xchg
xchg
lahf
mov
add
xchg
repz
mov
pop
lea
and
dec
jge
fsubrs
std
xchg
dec
pop
xchg
fnstcw
jl
out
pop
add
dec
cwtl
mov
inc
adc
cmpsb
sbb
pusha
pop
in
fwait
xchg
leave
out
scas
mov
pop
cltd
jg
inc
sbb
adc
or
xchg
xor
scas
jns
jae
push
mov
inc
xor
pop
push
cltd
pop
fadds
mul
in
mov
lea
aad
xchg
xchg
xor
dec
jg
mov
out
mov
jnp
sub
fcmovnb
mov
clc
in
push
xchg
data16
pusha
push
std
sarl
cmp
add
mov
pop
cmpsl
inc
add
or
sbb
loopne
push
stos
jp
ret
pop
dec
sub
dec
popf
adc
lods
push
jge
notl
pusha
stc
inc
lea
and
push
sar
mov
fisubs
loope
xchg
hlt
jnp
mov
outsl
iret
inc
out
loop
iret
and
lret
push
lods
repnz
addr16
incl
xchg
dec
test
xor
add
rcrb
or
addb
jnp
add
mov
lret
fbstp
ds
ss
enter
jae
inc
clc
ljmp
pop
xchg
fists
push
leave
push
and
add
stos
push
cmp
adcl
leave
mov
xchg
dec
out
push
push
push
fsub
add
xchg
cmc
jno
jl
sub
cli
lock
test
stos
int
loope
xlat
jecxz
bndldx
cmp
and
dec
ds
into
ret
shlb
pop
xorb
or
jne
adc
cwtd
add
arpl
stos
clc
outsb
cmpsb
cmpsb
or
lahf
nop
lds
push
ret
sahf
jmp
xchg
scas
push
push
jecxz
push
mov
and
subb
cmc
xchg
fstl
in
mov
sbb
ds
sbbb
sbb
or
and
xchg
js
ret
jge
xor
jmp
add
inc
inc
jb
int
sub
adc
loopne
sti
push
andl
pop
shlb
ja
test
test
add
arpl
adc
inc
adc
pop
fsubrs
repz
cmc
inc
inc
inc
aad
push
idivl
jbe
adcl
pop
addr16
pop
xchg
es
xor
xor
mov
lods
jae
xlat
test
jl
mov
leave
jae
add
test
push
sbb
loopne
xor
stos
lds
scas
mov
and
clc
xorl
add
sub
add
sub
loope
cmp
cmpsb
mov
outsb
outsb
sub
sbb
shlb
lret
push
push
out
cmp
loopne
add
cmpsb
les
jp
es
inc
test
sbb
clc
aas
pop
hlt
fnsave
and
bound
dec
push
sub
sub
data16
stos
js
cmp
xchg
mov
xchg
sti
mov
xchg
addb
movsl
mov
lods
pop
call
sysexit
mov
sarl
adc
iret
frstor
fcoml
dec
jl
ret
sbb
pop
dec
fdivl
xor
mul
jmp
pop
lahf
mov
and
dec
and
mov
insb
pop
pusha
lods
cld
cmp
ja
pop
cli
jne
imul
iret
xchg
or
popf
mov
cmc
repz
pop
std
test
orl
sub
push
scas
lret
cli
stc
jle
subl
push
add
adc
insl
push
out
pushl
addr16
clc
in
sub
mov
xor
xor
sbb
enter
clc
jge
dec
fcmovbe
and
adc
lcall
inc
adc
fsts
fstl
fidivs
pop
jno
cmp
shlb
lcall
inc
daa
andb
orl
xchg
lods
nop
jle
mov
stc
ds
pop
mov
sbb
fsubs
nop
into
cs
and
mov
popa
xchg
bound
push
mov
pop
cld
lahf
or
dec
sub
stc
cwtl
jo
pushf
push
push
dec
xorl
sub
push
mov
fisubl
sbb
popf
and
inc
hlt
add
jecxz
add
jns
push
sahf
xor
into
stos
pop
sbb
sarb
int
dec
ss
inc
mov
jnp
xor
mov
outsb
xor
add
mov
and
ja
sub
pusha
push
mov
or
add
call
dec
jge
sbb
fiaddl
int
and
loop
sahf
adcl
cld
push
push
add
js
mov
adc
cmpsb
dec
lahf
loop
sbb
sti
fs
mov
push
xor
cmpsb
arpl
push
notl
add
lret
jp
xchg
imul
lahf
cmp
mov
enter
lcall
imul
lcall
and
lods
repz
xlat
icebp
test
fisttps
ds
sbb
lods
addr16
add
jecxz
aas
sub
loopne
lock
test
mov
ljmp
cmpsl
mov
add
shll
and
inc
leave
add
fimuls
cli
loope
sbb
dec
xor
or
insl
jmp
out
pop
js
popf
fiaddl
inc
cmc
loop
sub
lods
clc
into
mov
arpl
lods
xor
pop
mov
pushf
sub
and
cltd
mov
adc
roll
sbb
and
xchg
add
xchg
repnz
inc
int3
jb
pop
ds
pop
scas
pop
sub
adc
xchg
pop
cmp
in
sub
mov
out
cmp
int3
cmpsl
mov
shrl
cld
cmp
jmp
dec
test
sub
pop
outsl
xchg
scas
setae
sarb
arpl
idivb
fldcw
aas
pop
pop
mov
in
and
fwait
mov
push
int3
mov
cmpsl
mov
rolb
stos
les
mov
pusha
sbb
cmp
test
mov
cs
jp
bound
mov
stc
pop
pop
adc
add
pop
sub
sbb
gs
xor
dec
pop
mov
sbb
add
mov
xor
or
cld
inc
mov
dec
in
addl
notb
int
mov
push
push
xor
push
sbb
add
xchg
cmpsb
inc
sbb
pop
jbe
mov
rcrl
push
cwtl
dec
fbld
xlat
loope
mov
sbb
adc
fisubl
mov
inc
imulb
ja
int3
add
aaa
mov
xor
jg
addr16
mov
pand
mov
std
push
shl
insl
arpl
jo
cs
lahf
mov
lahf
xchg
lods
adc
sbb
mov
mov
mov
lret
pop
pop
sbb
in
out
push
outsb
or
lcall
pop
cmp
jp
or
and
or
adc
es
lock
cmp
rclb
xchg
lods
std
hlt
icebp
cmp
adc
scas
mov
es
jmp
cmp
mov
sbb
imul
push
aas
mov
adc
pusha
xchg
sbb
repz
sub
test
mov
je
push
aaa
dec
mov
xchg
mov
neg
pop
movsb
or
mov
js
popa
dec
xchg
xor
pop
adc
fucomp
xor
ja
ret
cmp
xchg
mov
push
inc
xchg
aam
and
lret
clc
popa
mov
ljmp
cs
mov
je
pop
lcall
cmpsb
add
cmp
outsb
or
or
ficomps
arpl
ret
insl
mov
std
xchg
movsb
mov
into
mov
inc
ret
ljmp
push
pop
cmp
pusha
les
inc
je
das
pop
repnz
xor
pop
mov
cmp
test
inc
cmp
cld
sub
mov
mov
sbb
add
push
sub
jmp
mov
inc
aad
shll
rcrl
pop
fsubrp
inc
jns
xor
jne
flds
inc
mov
jle
adc
jae
jns
imul
inc
jno
cmpsl
fs
mov
test
ret
xor
dec
je
outsb
sbb
inc
or
pop
fwait
push
cwtl
lret
xlat
sbb
jg
roll
mov
inc
sub
mov
cld
nopl
int3
lcall
dec
mov
or
aas
xor
int3
xor
cmpl
pop
insl
mov
mov
adc
test
insb
ljmp
dec
xchg
nop
add
add
pop
xchg
xchg
adc
cmpsb
xchg
add
loop
shrl
shr
push
scas
js
aaa
xchg
enter
sub
mov
rorb
adc
call
roll
addr16
in
iret
ds
pop
jb
into
add
data16
push
or
lea
push
leave
out
and
sahf
sub
mov
ficoml
xorb
mov
xchg
fs
inc
jg
fnstcw
inc
notl
add
mov
les
out
mov
dec
js
arpl
cwtl
sbb
fcmovnu
mov
jb
cmove
dec
pushf
pop
cmp
inc
and
das
push
lea
push
cmp
je
push
xchg
push
aam
decl
shl
pop
mov
adc
repnz
sbb
sub
push
or
mov
call
dec
aas
xchg
lock
xchg
or
add
xchg
dec
sahf
sbb
out
fstl
in
mov
shrl
or
xor
pop
loopne
dec
mov
out
sub
adc
push
loope
xchg
xlat
repnz
xor
rcr
sub
rcrl
cltd
push
sub
rep
cmp
push
and
jl
xchg
and
push
jns
stos
and
jmp
cmp
mov
inc
rcll
mov
adc
imul
adc
jo
shlb
jno
adc
ud2
fwait
ss
sub
mov
test
cs
lahf
pop
adc
ror
int
leave
push
movsl
ret
push
lret
xor
sahf
inc
loopne
dec
ja
test
mov
mov
jns
xchg
cld
push
ja
rcll
aas
inc
test
leave
rorb
cs
add
mov
and
mov
xorb
cmp
pop
lds
cmpsb
dec
push
push
test
mov
cmp
push
pop
jnp
notb
in
cmp
mov
pusha
imul
mov
les
pop
fwait
mov
jg
mov
xor
mov
sbb
xchg
pop
jecxz
mov
int
lret
or
or
inc
mov
push
xchg
and
movsb
popa
adc
stos
loope
jmp
xchg
shrb
imul
fstl
pop
xchg
adc
lcall
xlat
repnz
cmp
stos
mov
mov
stos
rcll
lcall
scas
int3
cmp
mov
andb
enter
loope
jae
adc
ljmp
inc
in
data16
add
in
or
adc
stos
jae
gs
mov
out
jb
xchg
or
data16
pop
add
fisttpll
lret
cld
push
mov
subl
push
jle
jo
jbe
pushf
xchg
inc
popf
push
sub
pusha
call
cmp
pop
fucomp
inc
push
ret
fists
lock
mov
mov
out
xor
add
lret
andb
mov
popf
xor
mov
subb
mov
dec
lahf
adc
negb
lret
jae
test
mov
pusha
pusha
mov
inc
call
sbb
inc
fistpl
push
mov
cld
mov
adc
ror
sub
fdivl
sti
shlb
push
mov
out
lahf
inc
push
lea
ljmp
dec
cmp
invd
push
mov
imul
mov
testb
neg
adc
mov
mov
fstpt
xchg
insb
int3
dec
sub
push
xor
cmpsl
inc
out
outsb
cmovge
sti
mov
adc
pop
xlat
or
popf
mov
mov
mov
mov
lds
mov
mov
adc
pop
rcl
lods
pop
in
cwtl
popa
cwtl
xchg
mov
stos
pop
sub
cmpsb
jg
push
xor
sub
cmp
adc
sub
sbb
pop
dec
adc
jns
cmp
mov
xorb
ja
icebp
cmc
inc
daa
pop
pop
popa
hlt
push
repz
aad
mov
xor
and
cmp
imul
push
mov
push
imul
xchg
fbstp
iret
mov
mov
fs
xchg
sti
icebp
add
bound
cmpsl
mov
andl
and
cmpsb
iret
add
adc
pop
aaa
lret
lock
pushf
cmp
mov
mov
imul
jbe
xchg
jnp
test
scas
shl
dec
xor
jl
or
cmpsb
dec
xor
or
out
fbld
pop
mov
mov
call
xchg
add
outsl
jmp
leave
shll
dec
lea
or
xchg
sahf
es
jl
sub
push
inc
dec
adc
mov
or
xor
add
cmc
pop
shlb
call
xchg
test
or
movsb
insb
push
sub
adc
xor
lahf
adc
fwait
mov
xor
fadds
sarl
aaa
lret
mov
pop
mov
or
cmpsl
mov
ja
mov
dec
icebp
fldenv
inc
into
push
test
stc
lock
adc
xor
hlt
jne
sbb
addr16
pop
std
scas
aam
out
test
adcb
loope
xchg
call
mov
mov
int3
inc
pushf
mov
jge
mov
pop
jmp
dec
cmc
popa
daa
shll
mov
jb
jae
jg
jbe
xor
aam
outsl
add
out
pop
mov
push
jae
xor
int
shl
aaa
inc
xchg
shl
clc
mov
push
fwait
cmp
pop
test
bnd
cmp
js
bound
xor
popa
into
dec
out
ror
pop
mov
sub
pop
inc
incb
mov
bndstx
lods
cli
jne
in
push
mov
ds
aam
flds
and
imul
sub
pop
jns
sahf
lock
sub
push
pop
mov
sbbb
mov
adc
mov
loopne
xchg
sbb
add
loopne
jl
mov
sbb
pushf
and
imul
cmp
add
stos
mov
add
call
jl
pop
fnsave
adcl
jnp
cmp
js
adcl
mov
fbld
push
out
dec
xor
int3
cmp
ds
arpl
mov
push
insl
fcomip
inc
call
in
cmpsb
jle
aaa
lahf
add
mov
stos
and
xchg
push
adc
daa
scas
push
repz
inc
lods
aas
and
fidivs
out
movsl
and
mov
sub
movsb
dec
jne
insl
cmp
inc
push
in
std
movl
xor
repnz
sub
fs
pop
mov
sub
dec
adc
cmp
lds
sub
sub
pop
icebp
mov
test
gs
lods
div
loope
std
into
gs
cwtl
xchg
sub
fimuls
and
add
mov
sub
and
fdivrl
gs
and
mov
test
stc
addr16
int
arpl
cmp
dec
test
outsl
lret
mov
jecxz
push
lea
push
ds
dec
enter
repnz
loopne
xchg
xchg
sub
jns
push
inc
loopne
fwait
pop
push
mov
mov
pop
daa
iret
and
daa
dec
imul
sub
mov
call
jb
mov
int
xchg
ret
xchg
icebp
ja
idivb
stos
in
ds
loop
jecxz
mov
out
pop
inc
mov
fs
mov
jle
push
jl
daa
movsb
loop
sbb
dec
int
in
xchg
inc
aaa
fildll
push
sub
rol
out
outsb
das
sahf
mov
cmp
test
cmp
in
ja
push
xchg
out
in
sbb
dec
out
push
jnp
mov
xor
or
test
ss
test
inc
sub
lcall
in
shll
test
adc
les
adc
in
call
sub
fidivrl
in
pop
inc
adc
aaa
add
andl
jl
xchg
inc
into
sub
or
jae
add
hlt
fs
push
bound
and
call
add
dec
stos
push
mov
fldl
mov
lcall
inc
stos
cs
outsl
pop
add
pushf
xor
mov
xchg
rcl
sub
test
in
in
pushf
push
push
negl
jmp
out
scas
imul
mov
xorb
loopne
push
mov
sub
outsl
loope
out
test
stos
push
pop
adc
stos
ret
mov
out
jle
fcmovnu
divl
cmp
add
jl
mov
adc
cmp
mov
dec
cmp
jns
inc
addr16
sub
and
fidivl
imul
stos
xchg
push
xchg
jne
pop
push
repz
push
inc
outsb
dec
cmpsb
cld
flds
loopne
sbb
xchg
or
bound
pop
repz
aad
pop
add
es
jo
push
loopne
dec
test
xchg
rolb
jne
lret
cld
xor
jle
outsl
inc
rcrb
popf
imul
fs
sub
dec
add
cmp
sahf
packuswb
nop
sbb
cmp
pop
sarl
mov
mov
pop
pop
adc
stos
mov
mov
jb
inc
pop
dec
rclb
sbb
fistpl
sbbl
andb
dec
sahf
mov
mov
pop
xchg
cvtpi2ps
mov
imul
xor
mov
scas
jl
sub
ljmp
push
push
dec
shrl
jecxz
sub
adc
iret
aad
add
fs
dec
fidivs
pop
jbe
dec
scas
push
ret
shlb
into
mov
xchg
pop
enter
ss
cli
jne
movsb
xchg
in
jmp
and
sub
push
out
ja
loop
pop
mov
pop
inc
or
adc
mov
ljmp
pusha
cmp
adc
daa
popf
xor
push
out
ficoml
jbe
pusha
jbe
fistl
push
mov
out
mov
lods
inc
stos
dec
pop
ja
out
das
in
adc
lcall
xchg
or
xchg
daa
fwait
inc
mov
pop
rep
ret
push
sub
mov
cmpsl
sub
xor
loop
or
pop
outsb
adc
xchg
push
jbe
insb
xchg
into
les
push
jns
push
aaa
xorl
movb
adc
xor
cwtl
fldenv
outsl
xchg
xchg
cmp
jnp
add
cmp
or
fidivrl
mov
mov
pop
or
sbb
jnp
push
jnp
ja
or
jns
test
lahf
push
xchg
pop
mov
aam
adc
aam
mov
sbb
or
inc
es
cwtl
ja
jp
scas
outsb
xor
push
pop
aam
in
push
inc
adcb
push
sbb
inc
pop
dec
jbe
in
dec
dec
mov
pop
inc
dec
jp
xor
call
dec
jl
xor
pusha
sar
sbb
cmp
rdpmc
iret
addl
push
or
outsb
fwait
lods
cmp
aam
fdivs
ret
sub
fildll
into
mov
cld
sub
outsl
call
lret
out
cmp
iret
jo
jl
mov
inc
ss
outsl
or
sub
cli
pusha
lret
addl
jo
daa
int3
jae
inc
shl
xchg
push
loop
pop
jno
repnz
xchg
sub
stos
shll
and
pushf
xor
fsubs
fcompl
add
mov
stos
inc
cmp
xlat
inc
fdivrs
fdivrs
test
cmpsl
inc
out
lret
dec
loopne
fcmove
cmpsb
int3
mov
pop
cmp
sub
lds
cs
mov
mov
xchg
ds
lods
jl
adc
jge
mov
push
popf
sti
sub
push
nop
mov
and
xor
in
ds
jbe
ret
mov
aaa
pop
sub
shll
popf
insb
pusha
pop
jo
mov
lock
xchg
mov
dec
dec
in
xor
sub
mov
imul
movsl
push
subb
hlt
stos
fcoms
lock
jle
pop
jbe
loop
rcrl
insl
mov
aaa
xor
loopne
aas
lea
and
xor
int3
push
in
pop
and
cmpsl
hlt
xchg
cmp
fldenv
push
xchg
jo
mov
add
cwtl
lret
jb
cmp
cmp
xchg
mov
jbe
add
push
lods
mov
push
outsl
jmp
inc
popl
aad
rorl
scas
aaa
cmpsb
mov
cli
jmp
mov
stos
xchg
lods
inc
cmp
cmpsl
sbb
xchg
data16
sarb
jmp
pop
nop
push
je
push
mov
add
hlt
std
xchg
dec
xor
sbb
cld
sbb
xor
or
push
xchg
lret
cmp
data16
cmpb
ljmp
js
xchg
movsl
std
out
lea
subb
movsl
mov
pusha
adc
dec
sbb
out
pop
jecxz
mov
sti
stos
repz
shll
mov
aad
aaa
stos
mov
pop
sub
xchg
jns
xor
loope
mov
out
sub
cmpb
in
sub
rolb
fdivrs
dec
pop
hlt
pusha
in
mov
lret
adc
repnz
cmc
je
stos
xor
mov
int3
ret
jge
aam
cwtl
cmpl
pop
stos
inc
popf
orb
js
clc
and
mov
xchg
mov
dec
rcrb
xor
jge
pop
outsb
adc
popf
scas
mov
fs
jbe
outsl
mov
push
and
and
and
cmpsb
call
pop
push
es
jns
add
push
subb
cmp
add
int
or
inc
lock
sub
sbb
mov
mov
mov
inc
fst
dec
jnp
xchg
jb
ret
and
and
je
sarl
add
mov
mov
out
rcl
fcomi
je
mov
sub
jnp
add
into
lock
push
nop
mov
mov
cmp
insl
inc
jmp
fmulp
or
pusha
repz
fdivrs
rorl
pop
pop
inc
or
loop
or
or
xor
notb
pushw
lods
and
mov
dec
repnz
icebp
insb
adc
fistpl
jnp
cmc
push
shl
jne
xchg
push
mov
or
ds
in
dec
pop
scas
pop
imul
ljmp
iret
fldt
inc
push
xor
test
das
jnp
jns
test
xchg
sub
fistpll
mov
sti
adc
leave
sarl
jp
popf
dec
popl
sub
mov
xchg
mov
jg
int
sub
hlt
inc
push
or
add
pop
xchg
fsubp
cmp
out
jb
aam
push
subb
jne
sbb
out
shll
and
call
xchg
stos
xor
adc
rcrl
and
fstpt
jne
sbb
outsb
mov
in
loopne
dec
lret
out
pop
arpl
inc
jb
mov
inc
sbb
fcmovbe
stos
pop
inc
clc
mov
ret
fcomps
cmp
ret
pop
cmp
xor
iret
add
xor
mov
jns
dec
bound
mov
inc
les
mov
lods
fcomp
ret
popf
cmp
sbb
ljmp
pop
insl
addb
adc
fld
add
mov
mov
loope
jb
popf
mov
jl
jb
xor
xor
ror
pop
pop
push
jns
fwait
sbb
pop
rorl
repz
xor
sub
fnstsw
cld
hlt
and
and
lea
adc
addl
inc
cmpsb
jns
sbb
lahf
hlt
push
lret
push
add
mov
cmp
mov
or
mov
xor
pop
mov
loop
fucomp
jae
mov
les
push
and
gs
jg
or
xor
inc
push
jmp
dec
shll
mov
or
xor
push
call
push
xor
gs
jnp
xchg
push
lods
in
jl,pt
call
and
aad
hlt
sti
xchg
icebp
movsb
jnp
aam
adc
xor
loope
mov
fucomip
push
mov
or
mov
cld
xchg
hlt
cli
cmp
xor
sub
push
dec
pushf
jle
out
test
xchg
push
cltd
insl
or
sub
push
int
ja
cmp
pushl
or
push
fbld
push
data16
fstl
cmpsb
data16
test
xor
in
mov
mov
ret
rorb
mov
das
and
movsl
jmp
cltd
mov
push
fistpl
mov
fsubrs
jl
or
xor
test
jbe
mov
cmc
dec
int3
pop
sub
std
enter
dec
push
adc
jbe
sub
pushf
dec
cmp
add
in
test
repz
in
out
add
push
xchg
das
pusha
mov
jmp
xorb
out
xchg
add
bound
jo
inc
adc
ficoml
or
dec
sbb
sub
lock
imul
or
cmp
rcl
mov
sbb
cmp
and
orl
je
xchg
int3
test
iret
es
dec
pop
sahf
push
sbb
nop
ret
push
inc
mov
sbb
in
cmp
imul
popa
mov
jmp
xchg
cmp
sub
push
sub
cmp
jae
clc
pop
cmp
xlat
sub
ret
xchg
push
scas
and
xchg
mov
jge
mov
lahf
mov
or
popf
scas
repz
int3
jmp
mov
or
stos
popf
pop
mov
mov
out
decl
or
lods
out
mov
mov
jge
sub
or
daa
push
cld
arpl
jge
mov
int3
push
aad
xchg
pop
iret
jg
mov
inc
and
fdivs
jno
mov
and
xor
xor
loopne
rcrl
scas
outsb
sbb
cmp
idivl
xlat
cmc
je
inc
sub
loopne
jb
cmp
push
dec
sub
je
mov
std
lret
mov
js
sahf
and
imul
mov
adcb
fwait
cmpsl
mov
sti
pop
push
mov
xor
sub
addr16
in
xor
repz
push
cwtl
xchg
idivb
ja
jno
cltd
sbb
das
or
loop
cltd
repz
out
sahf
call
lret
repnz
adc
pusha
mov
call
dec
push
push
mov
jle
sarl
push
mov
jg
push
das
sbbb
jne
outsb
insb
jecxz
dec
cwtl
xor
or
stos
call
lods
adcl
mov
jmp
subb
add
jnp
jae
ja
jns
mov
dec
or
mov
roll
iret
mov
mov
push
movb
insb
pushf
int
or
xlat
xorl
pushf
mov
pushf
stos
dec
int3
mov
clc
and
or
push
lret
outsl
cld
mov
inc
loopne
loop
mov
imulb
sbb
dec
pusha
addr16
jne
mov
shlb
mov
mov
lret
fimull
fwait
mov
imul
bound
push
addl
sub
aam
push
jbe
rol
or
shl
jl
lahf
js
insb
mov
and
jae
cmp
mov
aam
jbe,pn
rcrl
iret
mov
mov
lods
daa
pop
xchg
out
mov
lock
mov
pop
xchg
into
inc
pop
xchg
sbb
pop
adc
inc
dec
mov
int
push
sub
mov
jo
add
pop
in
jmp
test
xor
sahf
data16
sub
cmp
mov
cmp
rcll
push
imul
jae
dec
jae
insb
stc
jmp
add
clc
mov
mov
loopne
mov
push
pop
sbb
or
in
idiv
jge
rorl
inc
shr
lea
push
jecxz
add
cmpsb
pushf
cld
push
dec
scas
add
out
cmpsb
aaa
daa
lret
mov
stos
les
mov
ds
inc
popf
adc
cmpsl
pop
mov
aaa
xchg
arpl
or
mov
incl
mov
push
and
cmc
shlb
and
inc
popa
push
sbb
fxch
lea
lret
repz
inc
ds
movsb
cmpsb
stos
divb
call
mov
inc
scas
xchg
mov
ret
insb
xor
fisttpl
pushf
jbe
jp
pop
insb
mov
add
fiaddl
jg
cmpsb
in
div
addl
sbbl
push
fnstsw
ds
pop
inc
pop
int3
mov
call
scas
insb
cwtl
or
cmp
inc
loop
jmp
outsl
sbb
mov
pop
xchg
push
mul
out
in
sbb
push
cmp
loopne
lret
in
shll
fcmovne
rcl
pop
pop
sbb
ret
ffree
xor
push
stos
jbe
jbe
adc
mov
xchg
loop
mov
scas
and
in
lods
dec
in
les
lock
icebp
dec
das
mov
movsl
mov
dec
stos
popa
sbb
jae
mov
out
xor
enter
bound
and
sarl
inc
outsb
push
ret
rcl
imul
pop
mov
je
add
push
and
dec
sbb
int3
xchg
jb
cmp
aas
into
sbb
out
pop
mov
or
and
pop
aaa
lods
icebp
mov
mov
jle
mov
push
ret
push
mov
pop
xor
xor
push
or
sbb
xor
sbb
sbb
icebp
cmp
cmp
xchg
jp
and
test
mov
xchg
icebp
xor
sbb
pop
mov
daa
jb
pop
into
sbb
scas
arpl
test
mov
lods
sbb
inc
push
jb
add
mov
pop
andl
les
lret
int
jns
push
push
clc
and
or
repnz
imul
xchg
fimull
or
lock
aad
ss
mov
and
sbb
notb
test
sub
jns
push
data16
pop
jae
cmp
pop
pop
mov
mov
jns
out
mov
out
mov
rsqrtps
sbb
test
cmp
into
and
pusha
mov
lret
lock
popa
and
popa
leave
xchg
sbbb
loop
lret
push
pop
hlt
mov
adc
jnp
inc
push
ja
gs
orb
fldcw
mov
and
and
pop
test
sbb
fldl
idiv
mov
sbb
loopne
cmp
icebp
ret
stc
mov
enter
in
mov
das
adc
les
sub
rcrl
mov
mov
sahf
vfmsub213ss
insl
mov
xchg
sbb
out
cld
xor
test
ret
mov
aam
addr16
jo
notb
lret
jg
sub
pop
push
push
pop
ss
inc
add
add
movsb
xor
push
adc
xor
and
mov
mov
mov
push
push
push
push
add
add
xor
cmp
push
jns
xor
nop
daa
scas
mov
mov
sub
ds
paddsb
sub
movb
sub
or
lods
call
pop
cltd
or
dec
pop
mov
sub
jo
imul
lcall
sub
movsb
xchg
stc
jb
cmp
lret
add
or
lret
mov
fdivrs
loope
jmp
sbb
rcrl
lret
xchg
cld
int
push
mov
lret
cmp
hlt
cmp
test
jg
xor
in
add
sub
xchg
cld
into
jmp
cmc
jmp
daa
out
xchg
arpl
mov
jl
sti
push
xchg
push
mov
sbb
lret
cmp
adc
jle
std
rorl
push
or
js
fwait
sub
xor
jl
push
loope
test
cld
lods
aas
mov
into
cld
arpl
xchg
es
mov
mov
mov
mov
js
rcr
xchg
sbb
mov
in
push
out
leave
popa
sbbb
lea
ja
sub
mov
dec
mov
movsl
sub
jmp
push
lahf
xchg
mov
insl
in
cmp
cmp
aad
xchg
pushl
in
outsl
dec
adc
das
pushf
mov
add
mov
fs
jno
lcall
dec
mov
loopne
push
xchg
or
mov
push
pop
inc
fwait
mov
sbb
inc
vpmaddubsw
dec
xor
fwait
and
stc
sub
wrmsr
lds
sub
aam
pop
adcb
push
outsl
sbb
rdtsc
pop
sbb
stc
lahf
stc
jae
push
add
mov
sub
shrb
mov
insb
out
orl
mov
cmpsl
cmp
sub
jnp
lods
mov
mov
aas
lods
test
int3
mov
loop
jbe
dec
clc
test
cmc
std
iret
sbb
xchg
cld
adc
mov
and
dec
cmp
jae
clc
pop
js
and
mov
int
mov
ret
dec
jl
cmpsl
or
shrb
repz
testb
pop
cld
push
push
add
in
mov
dec
or
clc
mov
neg
sbb
js
test
xor
dec
daa
dec
adc
arpl
pop
adc
jbe
adcl
jg
xchg
inc
cmp
cli
into
adc
mov
jg
nop
adc
shrb
adc
cltd
orb
test
mov
aaa
outsl
mov
out
jmp
sbb
stos
adc
int3
int
sbb
popl
pop
xorl
pop
pop
mov
jg
mov
adc
je
in
lret
movsb
sub
xor
frstpm(287
ja
inc
adc
in
or
push
add
fcoml
idivb
cmp
xchg
jb
cmp
add
mov
int
cmc
and
pop
xchg
pop
cmp
pushf
bnd
pop
jmp
push
jl
hlt
or
ja
stos
adc
pop
nop
aas
adcl
dec
xor
repnz
xor
movsl
mov
fidivs
sarb
fidivs
mov
or
in
mov
aaa
pusha
js
dec
mov
into
pushf
int3
pop
mov
pop
aas
sub
jmp
fcomps
dec
gs
mov
jle
pop
test
fnstcw
push
mov
dec
test
mov
mov
icebp
adc
hlt
fidivl
popa
or
adcb
fnstsw
xor
testb
inc
scas
dec
das
imul
cs
mov
xlat
sbb
pop
mov
idivl
dec
lods
lahf
push
in
mov
pushf
hlt
andl
pop
dec
rcrb
popf
or
int3
push
push
iret
cmp
fsubrl
pop
or
jle
int
fists
mulb
ljmp
add
in
das
push
in
xchg
rcl
jno
ds
lret
in
nop
inc
push
int3
imul
jae
cmp
mov
insb
jno
loop
dec
movsl
push
jo
jl
xchg
cltd
cmpsb
movsb
push
in
cwtl
mov
repnz
mov
inc
cmpsb
movsl
jb
mov
xchg
scas
push
jmp
or
sbb
inc
lcall
push
dec
inc
pop
testl
inc
xchg
es
xor
clc
jle
aam
cltd
add
fsubl
push
rorb
popa
inc
fldenv
sub
leave
jno
pop
push
std
gs
inc
addb
je
in
or
add
imul
jg
outsl
xchg
sbb
cwtl
mov
jge
and
cmp
push
stos
inc
push
ljmp
dec
xor
mov
pop
or
mov
xor
push
lcall
pushf
lret
ret
lret
xchg
dec
fwait
ret
in
fnstenv
add
jb
or
push
rep
hlt
sbb
into
sti
int
shl
push
lods
inc
mov
lods
and
push
iret
jmp
rolb
or
mov
fsubrl
fwait
in
sbb
jne
sar
clc
fmuls
pop
jecxz
add
push
cmp
push
imul
das
push
iret
std
addr16
sub
test
mov
imul
xchg
gs
sub
pop
mov
js
andb
mov
fdivrl
dec
test
icebp
push
dec
xorl
or
ds
sti
and
jmp
hlt
and
jmp
pushf
mov
stc
push
je
out
clc
ja
mov
push
inc
scas
and
add
fbld
fimull
stos
push
stc
mov
and
fbstp
adcb
int
int
movsl
mov
mov
cmc
jae
xchg
push
sbb
mov
insb
ljmp
sub
inc
test
ret
lea
pop
fistl
sbb
and
outsl
mov
xchg
push
push
jne
fidivrs
fldt
fidivrl
jmp
loopne
dec
pop
mov
sbb
out
push
cmp
call
push
cmp
inc
add
int
push
jns
push
xor
push
jo
jg,pn
enter
push
in
hlt
icebp
fldt
mov
jns
mov
xor
lods
mov
daa
nop/reserved
mov
cld
shrl
imul
lcall
inc
cmp
leave
and
push
ret
mov
mov
xor
xchg
scas
mov
fs
andb
icebp
pushf
inc
popa
ficoms
xor
or
je
fidivrs
xchg
push
add
push
xchg
sub
cmp
xchg
rcr
jg
xor
mov
add
add
jl
shrl
fisttpl
clc
dec
orl
or
test
jbe
insl
xchg
push
mov
xchg
mov
out
jno
mov
testl
popf
bound
xchg
add
xchg
fidivl
adc
cmpsb
ret
xchg
inc
loope
aaa
nop
pop
shll
mov
in
mov
arpl
int
jl
test
scas
popf
es
pop
ds
loope
leave
gs
test
add
add
adc
mov
and
add
add
sub
sbb
lret
sbb
add
mov
pusha
and
dec
ds
xchg
push
add
or
mov
test
mov
cmp
xchg
push
jmp
dec
or
xor
or
test
mull
sbbb
addr16
push
dec
fbstp
stc
gs
into
into
call
sti
aaa
pop
orb
jl
in
jl
xchg
mov
xchg
std
sahf
les
out
sbb
mov
roll
lahf
cltd
gs
push
call
imul
mov
jns
int
mov
lock
mov
cmp
push
inc
push
sub
insb
mov
aas
rol
jle
lods
xchg
adc
mov
lcall
dec
and
mov
popa
jae
shl
sub
xor
test
rorl
mov
insl
push
das
test
mov
push
popf
xor
repz
sbb
enter
ds
push
out
push
and
cs
mov
je
mov
lcall
push
popf
les
out
outsb
mov
push
sub
insl
andb
sbb
jnp
pop
fiadds
cs
jbe
std
xor
sti
cmp
mov
and
dec
loope
es
addr16
sub
push
add
push
xor
inc
mov
int
pop
jg
popa
fdivrs
imul
fldenv
jge
shrl
fbstp
cltd
jge
xor
jmp
push
aaa
dec
mov
push
push
cmp
test
xchg
or
bound
flds
jbe
sub
lods
xchg
lret
sub
shlb
jns
aam
hlt
cli
jmp
mov
xchg
out
hlt
mov
adc
or
jno
jl
push
shl
jbe
insl
pusha
cmc
lret
ja
jg
inc
lds
dec
mov
sahf
filds
fs
insl
add
adc
adc
mov
mov
into
dec
add
jp
pusha
mov
pop
cltd
dec
mov
push
std
repnz
mov
frndint
push
mov
call
mov
ror
dec
popa
rolb
je
outsb
sub
or
adc
inc
aaa
mov
ret
jecxz
sub
add
fidivrs
dec
mov
fiadds
lret
out
je
imul
jp
xchg
sbb
fiaddl
fadd
adc
test
mov
ret
pop
imul
loope
inc
popa
punpcklwd
loope
pop
test
add
push
dec
int3
mov
push
movsb
lds
bound
cmp
add
pushf
lret
scas
add
fucomip
push
loopne
dec
push
pusha
push
mov
xor
sbbl
sbb
and
mov
arpl
int3
push
and
push
pusha
ss
sub
rorb
cmpsb
mov
or
fnstsw
gs
push
sub
lds
cmpb
add
cmp
mov
arpl
call
jge
jo
pop
aam
cmpsl
test
and
int
cmp
or
lahf
js
nop
push
sahf
cli
inc
subb
jae
push
push
push
rcrl
mov
dec
insb
dec
mov
mov
daa
pop
xchg
jns
fsubr
jnp
ljmp
dec
test
inc
rcrl
es
push
sbb
or
scas
xlat
idivl
mov
hlt
jmp
mov
and
loopne
js
xchg
movsb
xor
ret
pop
adc
es
dec
jnp
and
jnp
sub
daa
sbb
and
push
roll
insb
test
mov
mov
or
cmc
repnz
mov
pop
cmpsl
push
xchg
test
jno
inc
add
js
sbb
stc
std
inc
dec
out
in
jne
mov
imul
pop
and
out
lods
gs
cmpsl
mov
xor
ja
mov
arpl
int3
jle
aad
ja
mov
cmp
mov
iret
ret
cmc
outsl
nop
mov
sub
rcll
mov
jp
out
sbb
pop
sbb
push
ljmp
mov
fwait
or
outsb
aas
mov
outsl
push
not
mov
and
pop
iret
adc
push
jmp
leave
xchg
or
mov
mov
inc
insb
mov
lods
test
out
shlb
cs
ljmp
shll
out
or
mov
jl
std
fiadds
mov
aas
inc
pop
cltd
test
rcr
or
mov
push
jecxz
mov
jo
sti
xor
add
and
and
cmpsb
dec
ljmp
xchg
pop
in
leave
ret
xchg
mov
sahf
cs
cmp
inc
dec
pushf
rolb
imul
jge
repnz
out
shl
cli
adc
mov
dec
mov
dec
sub
cmp
xchg
push
pop
stos
dec
fsubrl
out
sub
and
jbe
xchg
fwait
std
push
nop
sub
loop
sbbb
in
xlat
ret
movsl
xchg
cmp
notl
jmp
push
inc
cmpl
insl
push
and
imul
adc
ret
mov
sti
inc
lahf
add
and
xor
divl
rcll
add
jmp
popa
lret
xor
bound
mov
cli
stos
das
inc
stc
cmc
out
inc
mov
arpl
int
cmp
xor
mov
adc
out
dec
push
mov
dec
ret
ss
fbstp
daa
pop
sub
dec
push
orl
ss
adc
or
sarb
stos
mov
imul
sbb
jg
dec
mov
mov
repnz
int3
and
xchg
or
dec
cld
cmp
and
pusha
pop
sti
or
popa
insl
cld
add
xorb
mov
movsb
push
mov
leave
scas
call
or
mov
xchg
pop
out
lds
lret
cli
mov
jmp
pop
insb
rcl
and
push
add
mov
rcl
testb
ret
nop
dec
inc
or
scas
gs
sbb
mov
int
push
mov
lods
cmpsl
aaa
or
and
add
in
push
shr
pop
mov
jno
and
and
push
adc
ds
xchg
and
pop
rorb
sti
sti
inc
mov
es
inc
arpl
cmpsb
test
xchg
xor
xor
fwait
pop
push
mov
sub
leave
fnstcw
lods
xchg
inc
jg
sti
push
jp
stos
mov
jb
inc
sbb
out
ljmp
aam
adc
add
in
addl
imul
xchg
add
das
dec
imul
mov
mov
push
fidivl
pop
jl
and
scas
test
pop
icebp
insb
f2xm1
nopl
mov
sub
jecxz
push
mov
aam
pusha
aas
add
xor
addb
jmp
mov
out
fucompp
cli
dec
sbb
lea
xor
std
lods
xchg
push
outsb
cmp
out
fnstsw
push
pop
lcall
sbb
and
ret
sub
sub
push
js
lea
jnp
adc
push
xorl
adc
insb
mov
gs
shlb
in
sub
sbb
adc
or
mov
lret
mov
add
dec
testl
repnz
xlat
in
mov
pop
rcll
mov
mov
test
js
pop
xor
arpl
add
push
xlat
mov
sub
or
lods
push
ss
fwait
xchg
and
dec
imul
mov
lods
ret
mov
lret
mov
jmp
sbb
mov
cld
sbb
cmovnp
push
and
sbb
pop
mov
mov
push
sub
or
cmp
out
push
clc
add
js
mov
aas
and
jle
mov
pushf
repnz
mov
outsb
xor
dec
imul
push
sti
push
in
or
hlt
sub
out
mov
pop
aam
adc
xchg
andb
push
lods
lds
insl
mov
mov
sbbb
adc
roll
jmp
popa
lock
xchg
mov
scas
rcl
xor
cltd
xchg
cmp
lods
pop
mov
std
jp
dec
andl
lods
jne
mov
stos
and
mov
add
data16
sbb
mov
out
mov
aam
lds
xchg
fcompl
mov
movsb
jne
pop
int3
addr16
cmp
inc
in
push
mov
push
mov
enter
jle
shrl
ret
outsb
xchg
sub
bound
xor
fwait
mov
push
xor
inc
dec
sbb
mov
loop
mov
and
out
aad
scas
repnz
stc
sbb
push
mov
insl
push
iret
out
es
or
ficomps
rcrb
cwtl
fmuls
mov
jge
adc
jp,pn
lcall
push
pop
les
cmp
out
scas
jge
ja
sti
push
movsb
push
cmp
mov
cld
mov
inc
push
loop
push
or
out
or
movsl
push
sbb
or
jno
jge
mov
mov
mov
pushf
dec
filds
push
dec
orl
loopne
aaa
lret
cmpsb
enter
push
pop
pop
push
adc
xchg
xchg
das
sub
leave
shlb
xorl
sti
push
xchg
repnz
lcall
push
push
mov
xchg
or
cmp
mov
and
dec
jno
jno
pushl
mov
pop
and
mov
mov
sbb
jmp
or
add
test
bound
test
or
jge
mov
mov
lods
or
data16
xor
jne
icebp
add
or
xor
cmp
dec
sti
stos
jmp
lret
sub
fistpll
cltd
inc
dec
mov
and
outsb
add
push
or
add
jo
push
mov
mov
sbb
jp
add
and
inc
sahf
out
outsl
fidivs
or
cli
xorb
loopne
push
ljmp
nop
mov
xlat
std
in
sub
out
lahf
fwait
or
cli
mov
xchg
outsb
push
sub
pushf
sub
push
mov
dec
pop
enter
stc
lods
xchg
test
fsts
jb
fwait
xor
in
jae
subb
push
nop
cmp
ss
inc
push
adc
adc
push
adc
pop
sbb
movsb
in
mov
jno
xor
or
dec
icebp
in
clc
sahf
int
arpl
sub
fwait
sti
inc
insb
pop
in
push
ljmp
ret
repnz
test
inc
stos
dec
lret
aas
dec
shlb
sbb
test
inc
push
fisubrs
or
cs
and
xor
lea
cli
cli
and
mov
or
mov
ljmp
int3
jmp
lcall
call
mov
fisttps
sbb
add
movsb
adc
mov
mov
sub
fbld
outsb
lcall
cmpsl
mov
lods
rorl
cmp
mov
mov
sub
pop
loop
adc
cwtl
add
dec
ljmp
fisubrl
adcl
jo
in
dec
test
sub
aaa
cmpsb
mov
hlt
notl
cmp
shl
enter
jnp
push
jmp
adc
pop
push
mov
in
mov
pop
mov
mov
arpl
inc
outsl
sub
sub
mov
sub
jg
pop
xchg
sub
adc
sub
and
and
add
int
jge
inc
lods
fidivl
sbb
sbbb
add
jmp
dec
ljmp
nop
fsub
jns
insb
mov
test
lret
pushf
adc
xor
push
inc
sbb
loope
mov
dec
jae
in
mov
or
fwait
and
fstps
xchg
lock
mov
filds
lods
mov
jae
and
jg
and
fsubrl
test
add
inc
push
int3
mov
push
repz
or
add
cwtl
dec
pushf
daa
mov
jno
adc
cmc
lahf
aas
sub
xchg
inc
test
aad
sub
xor
lods
lods
xor
test
sahf
dec
scas
mov
add
jmp
repnz
inc
add
inc
pop
pop
dec
or
xor
jo
cmp
in
shr
into
adc
push
jmp
ja
mov
push
mov
stos
rorb
ss
hlt
and
sbb
push
mov
stc
or
lret
out
mov
push
enter
enter
mov
add
stc
and
add
rorl
les
xor
inc
loop
sbb
xchg
aad
fidivrs
aam
push
xor
or
mov
aaa
ja
mov
rorl
cmp
fsubrs
and
out
hlt
cld
rclb
cmp
pop
inc
cs
pop
lcall
lods
push
inc
adc
das
and
sbb
sbb
pop
sbb
jnp
adc
lock
push
push
push
fdivs
dec
les
or
dec
fst
mov
sbb
sub
mov
stos
out
cmp
xlat
fistps
stos
in
out
js
mov
lock
mov
shr
aaa
mov
popf
jo
jno
fistl
call
ret
cwtl
lods
decl
or
xlat
mov
repz
outsb
xchg
es
ja
mov
jg
or
push
pop
or
dec
xchg
cmpsl
cmp
inc
stos
add
push
shll
lea
jno
in
mov
sub
push
xor
push
jl
sbb
mov
mov
xchg
push
scas
mov
ja
dec
sbbb
lahf
aad
in
adc
fisttpll
inc
pop
inc
and
dec
insl
sbb
mov
ss
lds
cmc
leavew
xor
pop
imul
addr16
xchg
das
or
sti
cwtl
test
in
rcl
adcl
dec
in
fcoml
adc
insl
je
cmpsb
imul
mov
xor
xchg
push
mov
mov
test
loope
push
and
cmp
sub
sbb
std
mov
bound
inc
sbbl
cmp
scas
pop
adc
ja
aad
mov
add
idivl
lods
data16
mov
mov
adc
data16
dec
jns
in
jl
fisttps
xchg
loop
je
jo
xor
jp
xchg
outsb
pop
and
movsl
stos
pop
dec
jb
rolb
push
dec
and
xchg
push
mov
mov
addr16
xchg
mov
sub
movsl
mov
jo
imull
sbb
lahf
mulb
adc
mov
mov
orb
mov
je
push
bound
inc
inc
ja
mov
cmpl
into
gs
sti
dec
adc
mov
dec
cmpb
lahf
cmpsb
pushf
lea
mov
sbb
mov
jp
out
and
mov
ljmp
aaa
add
push
ja
int3
pusha
pop
xlat
testb
jo
adc
test
adc
push
loopne
lret
mov
mov
xor
sahf
repnz
js
sahf
mov
push
inc
fldenv
mov
fucomi
sbb
btr
mov
jno
dec
mov
arpl
or
xchg
sbb
jge
mov
fldl
repz
sub
mov
test
loope
pop
incb
das
je
mov
xchg
push
add
cld
ficompl
dec
or
inc
in
adc
lret
xorb
adc
push
js
push
pop
cmpsl
pop
xlat
movsb
aas
shrl
sub
jg
rorl
xchg
sbb
iret
mov
pop
adc
xchg
dec
fnstsw
add
dec
testb
xor
inc
or
add
iret
pop
xchg
push
mov
dec
aaa
push
fwait
scas
inc
daa
inc
clc
lret
jne
or
pop
xchg
adc
inc
dec
fisubrs
in
mov
xchg
mov
test
fimull
mov
sub
add
add
push
jae
xor
push
mov
pop
je
negb
fcoml
or
mov
fwait
push
test
mov
aas
orl
sti
xor
pop
mov
icebp
outsl
dec
std
add
xchg
fs
and
xor
push
sbb
out
rorb
leave
decb
pop
mov
gs
jmp
push
and
mov
and
test
jge
mov
inc
add
test
inc
scas
push
sbb
cmc
jmp
lds
imul
out
jnp
push
scas
jmp
xor
add
jbe
inc
mov
scas
lds
lret
fnstenv
stos
mov
jecxz
mov
sub
dec
mov
adc
sub
cmpsl
test
mov
fcomp
aas
ja
aas
dec
xchg
sarl
loopne
xor
xchg
jmp
cli
test
sbb
lds
sbb
mov
mov
dec
xchg
push
out
add
call
loope
idivl
mov
gs
cwtl
bound
pop
fisttpll
fildl
stos
out
push
mov
adc
inc
mov
adc
movsl
mov
sbb
movsl
rclb
sbb
mov
call
jae
inc
jne
dec
xchg
enter
enter
in
mov
jp
lds
jb
sbbb
xchg
cmp
call
lods
or
clc
pop
loopne
jne
pop
fsubrl
adc
les
loopne
mov
pushl
jns
nop
rol
push
mov
inc
add
xchg
test
dec
mov
dec
lods
push
pop
nop
xor
andb
divl
jns
mov
movb
sbb
xchg
ret
cwtl
repnz
roll
add
imul
sti
jmp
xchg
in
cmc
ja
clc
in
aas
and
std
jbe
sub
into
xchg
std
ljmp
push
push
decl
pop
testb
adc
mov
hlt
dec
xorb
sbb
add
mov
mov
imul
outsl
inc
mov
aad
int3
adc
jne
stc
xchg
jo
adc
sbb
cmp
pop
or
and
pop
fildl
notl
ret
adc
jb
leave
dec
orb
mov
addr16
outsb
data16
stos
sbb
cmp
xchg
adc
repnz
xchg
add
mov
dec
push
out
ret
cmc
repz
adc
jl
mov
psraw
lods
mov
jmp
push
notl
jle
testb
mov
les
push
or
dec
push
sbb
mov
scas
ja
sahf
cmpb
fyl2x
and
aaa
outsb
stos
repnz
sbb
mov
xor
cmp
out
subb
sti
push
lahf
and
lods
icebp
push
sub
imulb
add
bound
gs
add
rol
mov
add
mov
icebp
and
mov
push
add
imul
shll
outsb
lret
xchg
out
jno
xor
stc
xchg
insb
adc
loope
sbb
jne
sbb
inc
add
pop
pop
xor
push
scas
xor
xchg
xor
inc
fwait
insb
cltd
out
mov
in
xchg
std
mov
loop
ljmp
sub
nop
pop
jle
xchg
sarb
lcall
push
cltd
dec
push
arpl
fnstcw
pop
mov
pusha
sub
mov
mov
xchg
adc
inc
dec
mov
mov
out
aam
mov
sbb
lcall
mov
hlt
xor
out
and
imul
jecxz
sbb
cmp
outsl
fmuls
stos
insb
pusha
dec
pop
idivb
pmuludq
fdivs
dec
test
add
test
push
or
out
outsl
push
sub
sbb
shrl
xchg
dec
mov
jno
add
inc
test
stos
scas
jp
add
add
fs
test
mov
test
push
pop
lds
pushf
push
mov
lahf
stos
jnp
sbb
aam
sbb
push
jbe
popa
and
outsb
xchg
popf
and
pop
test
add
adc
inc
adc
mov
ja
test
test
fisttpl
or
jbe
fiadds
mov
imul
sbb
cmp
mov
out
leave
xor
cmc
inc
jne
mov
pop
dec
dec
xchg
pop
inc
push
fs
jnp
dec
add
je
loop
mov
jmp
movsl
aam
testl
jnp
sti
jle
push
sbb
dec
int
jle
mov
test
arpl
inc
mov
out
cmp
add
repnz
mov
mov
jl
push
adc
insl
mov
mov
xchg
nop
or
or
sbb
ja
mov
jmp
mov
loop
xor
cmp
dec
fs
js
jbe
and
pop
loop
out
jnp
sbb
fimuls
push
dec
and
movsb
jmp
jno
gs
frstor
aaa
loope
mov
addr16
sub
or
inc
shll
mov
xchg
and
mov
push
sbb
jb
and
shlb
cmp
pop
mov
insb
xchg
sub
add
jns
or
mov
cld
mov
je
scas
je
lcall
pop
sub
mov
add
jns
or
enter
jg
xchg
shll
je,pn
adc
cwtl
inc
inc
inc
and
sbb
xor
adc
leave
arpl
cltd
or
adc
idivb
in
push
repnz
scas
outsb
push
fucom
lods
cmp
pop
mov
pop
xor
jl
notl
into
cmp
pop
push
push
aam
ret
and
pop
pop
cmp
adc
sub
fistpl
enter
and
int3
mov
mov
sbb
mov
ljmp
test
add
jae
pop
or
xchg
jbe
call
daa
js
pop
stos
insl
orb
dec
cmpb
and
loope
add
and
pop
imull
sarl
jmp
push
fwait
mov
mov
mov
sub
cld
in
adc
dec
sti
dec
jne
mov
mov
aaa
push
sub
cmp
ror
in
xor
cwtl
add
pop
adc
lods
cmp
insl
xor
ret
sbb
pop
aas
and
jle
pop
and
inc
xchg
fstpl
adc
cmp
lahf
out
pushf
loopne
cli
bound
dec
mov
xor
addl
sbb
xchg
fldcw
ja
inc
sub
mov
in
inc
mov
arpl
dec
pop
or
mov
repz
pop
out
ljmp
lahf
sahf
outsb
sub
sub
dec
rorb
dec
in
push
iret
or
aas
push
in
pop
outsl
sarb
xor
dec
in
mov
ffreep
fidivrs
push
pop
inc
lock
lret
mov
mov
inc
sub
dec
lods
push
test
fcoml
push
xchg
fstpt
push
mov
jb
lock
xor
cmp
loop
sub
or
cmpsb
sbb
jmp
imul
sahf
push
push
lds
or
adc
fs
dec
pop
dec
in
xchg
repnz
shrl
jle
push
xor
jbe
or
adc
inc
xlat
and
add
out
and
mov
in
hlt
or
and
inc
rcll
mov
xchg
aad
mov
fidivs
fwait
iret
call
shrl
or
mov
adc
dec
rcrb
jmp
lret
push
xchg
mov
out
mov
push
dec
rcl
imul
scas
adc
mov
add
xchg
dec
popf
outsl
test
jp
cli
sub
xchg
or
sub
or
aas
inc
outsb
lock
sahf
xchg
shll
movsl
mov
pop
popf
cmpl
xchg
pushf
fisubrs
repnz
ljmp
xchg
imul
fldenv
push
cmp
int
scas
inc
je
lret
inc
lss
aam
mov
mov
xchg
lcall
popa
inc
push
loope
xchg
xor
ja
cwtl
pop
daa
or
mov
push
pushf
imul
inc
push
test
adc
cmpsl
and
divb
incb
rorl
and
cmpsl
dec
jge
sar
scas
gs
and
xchg
dec
pop
test
dec
sub
pop
scas
retw
sarl
push
mov
jle
xchg
addl
xor
addr16
jg
mov
xor
or
imul
xlat
fbld
pop
lahf
xchg
nop
aas
aas
mov
cwtl
out
xor
das
push
xchg
test
dec
insl
xchg
ror
int3
int
dec
dec
jmp
adc
jl
sbb
outsl
lea
adc
push
outsb
lds
push
jle
sarl
rcrl
leave
jns
mov
jge
xchg
and
lods
mov
push
jno
mov
jl
xchg
cltd
mov
or
or
es
push
int
mov
inc
imul
mov
cmp
fildll
mov
push
insl
dec
mov
sub
sub
pop
xor
mov
xor
fidivrl
xchg
sti
mov
insl
dec
outsb
or
xor
sbb
add
mov
push
and
xor
dec
rcr
add
repz
or
ret
stc
sbb
push
sar
pop
ljmp
push
shrl
and
inc
pop
mov
mov
xchg
inc
in
iret
or
shl
adc
jp
leave
or
sbb
shl
addr16
fstpl
dec
repnz
lods
mov
and
subl
xchg
test
jle
enter
jp
negl
and
inc
mov
cwtl
jbe
test
nop
push
sub
and
ljmp
jns
add
les
decl
inc
and
int
out
or
dec
sbb
into
popf
push
xor
jge
adc
je
dec
js
mov
addb
lods
push
push
rcrb
data16
lods
sarl
cmp
loopne
sbb
mov
das
loop
cmp
pop
into
in
cmp
lret
or
fstl
cld
sbb
insl
push
dec
dec
into
mov
lods
jbe,pt
mov
jne
stos
sub
mov
in
shl
sub
dec
leave
mov
add
jne
push
sbb
mov
push
dec
addr16
call
das
dec
cwtl
sub
lret
xor
and
cmpsb
mov
test
mov
outsl
sub
jbe
int3
lahf
imull
inc
xchg
dec
insl
sbb
push
sub
inc
adc
ds
call
testl
mov
arpl
hlt
mov
int3
gs
data16
push
js
mov
push
scas
mov
jl
dec
mov
xchg
push
jns
mov
or
sbb
xor
aam
es
test
lds
and
mov
lock
in
js
std
rcl
xor
fs
mov
sbb
sbb
mov
lcall
sbb
cltd
fucomi
or
addr16
mov
inc
xchg
sbb
pop
sub
xchg
mov
mov
and
and
fildll
or
mov
pop
ljmp
ret
jno
push
enter
loopne
adc
test
fsub
gs
pushf
adc
sub
and
mov
ret
mov
outsl
xchg
dec
mov
test
movsl
loope
jns
ds
cwtl
std
xor
add
jb
jp
jo
sbb
xchg
ljmp
daa
sbb
jmp
add
dec
repnz
xor
sub
les
pop
ja
dec
cli
popl
add
xor
push
pop
mov
mov
dec
pop
fsubl
lods
shll
jle
bound
dec
jo
subb
pop
dec
in
outsb
sbb
mov
test
dec
jns
xor
movsl
mov
jne
shll
scas
cmc
lret
add
scas
mov
std
cld
adc
mov
fmull
cmc
call
imul
push
or
or
popf
pop
in
lods
lret
sub
mov
lahf
and
xor
js
and
lock
push
mov
and
dec
loope
pop
jmp
and
and
mov
cwtl
adc
inc
ss
pop
add
inc
lret
or
sbb
mov
les
iret
mov
nop
fwait
test
and
inc
stos
cmp
fsubl
ljmp
adc
xor
mov
mov
leave
ss
mov
fwait
mov
in
inc
push
test
cmp
add
push
mov
sbb
arpl
pop
jecxz
fs
enter
jae
add
cmc
pop
pop
subl
mov
sbb
insb
mov
jnp
fsubr
mov
ss
test
mov
pop
push
cmp
mov
push
fwait
ds
xchg
insl
cmp
pop
imul
into
mov
test
stos
push
in
incb
repnz
mov
xchg
lods
aad
data16
out
add
call
cmp
inc
xlat
enter
or
cli
dec
inc
loopne
and
xchg
out
mov
aam
xchg
cmp
xchg
js
pop
cmpsl
ret
test
pop
lods
sbb
out
repz
pop
test
mov
pop
adc
xor
loope
cli
xlat
ret
inc
jecxz
iret
pop
jge
shlb
mov
pop
mov
inc
lods
adc
mov
or
cmp
movsb
mov
mov
rolb
cmpsb
addr16
ret
cltd
jbe
daa
adc
fimull
push
push
push
fwait
xor
pop
outsb
inc
dec
and
cld
add
daa
inc
test
rolb
je
jge
sar
std
scas
imul
or
or
pop
adc
or
rcrb
lds
dec
push
dec
push
ret
pushf
repnz
je
and
ss
out
jle
mov
movl
ret
pushf
cmpsb
aas
pop
test
adc
mov
and
jbe
dec
or
and
adc
jnp
inc
adc
lea
push
nop
push
daa
mov
out
fstpl
aam
adc
cmp
shlb
cmp
int
invd
dec
sub
and
add
add
cmp
sbb
and
lods
xor
cli
rcrl
imul
ja
mov
arpl
xchg
inc
pop
pop
loope
imul
shlb
and
icebp
adc
xor
in
sub
dec
xchg
xor
mov
roll
scas
roll
jae
xor
sub
repz
push
jle
xchg
xor
addr16
push
mov
pop
jg
sub
jae
dec
and
inc
insl
mov
jp
mov
cmp
mov
fld
xor
push
and
aas
and
pushf
or
sub
pop
jg
pop
lcall
nop
lods
roll
pop
icebp
add
or
adc
mov
push
ljmp
mov
lret
mov
cmc
lahf
jl,pn
dec
jns
adc
pushf
movsl
jg
push
rclb
and
subl
in
mov
sti
jbe
mov
inc
jge
sbb
push
xor
data16
sbb
aaa
jg
or
stos
push
out
push
fcmovnbe
ret
in
cltd
sbb
jl
aaa
nop
and
cmp
push
add
adc
mov
push
xorb
jecxz
mov
das
int3
dec
push
xchg
mov
test
insb
sarb
gs
push
in
stos
test
cmp
inc
add
mov
fisttpl
cmp
mov
daa
xchg
repnz
rol
iret
or
notb
pusha
jb
push
rcll
and
sbb
cli
sub
adc
stc
test
and
rclb
mov
push
sarb
call
jecxz
jo
sub
fstl
pop
mov
or
inc
sub
lret
mov
sub
push
ljmp
mov
das
fisubl
jecxz
mov
lods
les
and
jne
sub
push
adc
and
add
add
cmp
pop
inc
cs
fs
stos
push
daa
test
push
and
movsb
movsb
xchg
in
adc
popf
lcall
mov
sbb
repz
sub
enter
movaps
ret
xor
or
imul
xchg
hlt
cmp
push
push
mov
imul
dec
out
mov
push
aas
jp
mov
adc
push
push
lret
sub
out
dec
pusha
push
mov
mov
hlt
adc
sbb
aam
mov
dec
cltd
push
dec
fsubrl
push
push
cmp
inc
jbe
dec
out
std
xchg
lea
call
mov
leave
popa
jns
sub
js
dec
xor
pop
outsl
and
sub
jbe
lret
fbld
xchg
sbb
mov
sbb
cmp
xchg
imul
xchg
sbb
push
inc
add
lcall
or
mov
push
shll
orl
dec
adc
fists
unpcklps
xor
mov
in
mov
nop
jo
push
fdiv
or
mov
and
outsb
mov
and
or
jge
adc
js
pop
and
mov
outsb
add
shrl
jecxz
xchg
sub
pop
or
pushf
test
fidivrs
shrl
mov
mov
sti
mov
jnp
sti
xor
cmp
pop
and
repz
outsl
cmpb
fwait
push
cmpsl
sbb
cmp
clc
sub
cs
jb
lock
push
outsl
push
sub
jmp
xchg
sub
pop
scas
inc
pop
insb
insb
inc
cmc
sub
and
dec
jle
mov
repz
cs
push
pop
jg
push
js
xchg
push
sub
jno
xchg
rcll
popf
test
dec
xchg
dec
add
pop
shl
xchg
sbbb
dec
cmpb
mov
inc
mov
imul
cmpsl
out
mov
mov
push
xchg
data16
jp
jno
inc
pop
jnp
decb
std
or
shl
jne
pop
xor
pop
mov
mov
sub
mov
data16
add
xor
outsb
jge
jl
or
test
lods
fwait
movsl
or
and
xor
sub
jo
pop
imul
mov
inc
ja
aad
xor
sbb
aas
loope
out
fwait
lahf
lea
sbb
das
outsb
cwtl
pop
inc
cs
mov
mov
bswap
addb
push
push
out
push
loopne
notb
jp
dec
mull
mov
pop
cli
sbb
outsb
jb
dec
jmp
inc
in
inc
out
and
int
and
outsb
xchg
mov
push
sub
lret
sbb
jmp
gs
imul
push
mov
cmp
xchg
iret
mov
in
cwtl
loope
push
cmp
jl
push
adc
loop
mov
inc
mov
andl
adc
sub
xchg
lea
aaa
sub
leave
sahf
dec
inc
mov
int3
pushf
inc
shll
rclb
ss
or
xchg
pop
inc
sbb
and
cs
jbe
scas
les
xlat
roll
addb
jl
imul
or
mov
pop
dec
sbb
stc
jae
cld
adc
fstps
inc
scas
or
push
shll
xchg
rcrb
xor
push
lea
mov
ret
notb
daa
xchg
or
jp
scas
daa
das
add
insb
testl
scas
icebp
adc
testb
sub
lcall
int
shlb
call
pavgw
ret
ret
add
dec
movsl
inc
xchg
shl
test
ds
xor
pusha
out
jl
pushf
dec
fwait
pop
mov
mov
and
or
push
add
jle
iret
fsubrs
add
pop
fisttpl
cwtl
out
inc
lcall
push
mov
xchg
lods
repnz
addr16
je
inc
addb
into
sub
sbb
les
shlb
das
adc
adc
or
mov
and
jae
fisttpll
hlt
jmp
movsl
or
scas
dec
adc
jo
adc
pop
les
mov
jbe
cmovo
les
loop
xorl
jbe
in
cmp
push
in
leave
inc
mov
jp
xchg
mov
pop
mov
cmp
fcomi
cmp
mov
lock
jg
push
clc
lods
mov
xchg
push
inc
dec
or
dec
mov
add
enter
sbb
inc
sbb
frstor
cmpsl
mov
dec
inc
inc
pop
adc
icebp
fdivr
add
int
mov
aas
mov
inc
ret
in
xor
stos
inc
leave
jmp
dec
cmp
xchg
xchg
mov
iret
adc
shl
movsl
jmp
pusha
and
push
hlt
in
jle
movsl
sahf
xchg
std
dec
xchg
sbb
call
xor
dec
scas
inc
int
shrb
push
mov
mov
scas
lahf
cmovbe
out
push
add
leave
sbb
cwtl
add
xchg
ja
mov
push
lret
cld
clc
dec
iret
insb
xrelease
xorw
out
loop
out
leave
mov
jno
rolb
cmp
scas
mov
push
xor
out
xchg
out
ja
fwait
lods
ja
xchg
out
and
sub
mov
orb
mov
fnstsw
mov
leave
adc
and
pop
cmp
repnz
mov
dec
mov
cmp
hlt
add
in
xchg
ret
sbb
cmp
add
xor
gs
or
scas
adcb
jb
xor
aas
add
shl
mov
cmp
cmp
and
jp
xlat
or
aad
and
mov
adc
xchg
out
pop
jns
addr16
adc
dec
aad
lahf
loop
pop
mov
push
sub
mov
pop
out
mov
in
push
xor
cld
cmp
mov
jp
fstps
fadds
sub
cmp
sub
lods
mov
pop
test
jl
xor
mov
aam
sbb
imul
js
cli
scas
js
and
pop
pop
frstor
cmp
jnp
in
add
xchg
adc
pop
es
dec
mov
and
jle
scas
vunpckhps
jno
loopne
cmp
or
push
push
cli
jo
adc
push
insb
sbb
mov
ret
adcl
mov
add
sub
mov
adc
and
add
pop
sbb
int3
lahf
sbb
push
test
testb
addr16
cmpsl
stos
push
in
int
push
inc
xlat
inc
roll
adc
loope
jecxz
dec
jne
jno
lcall
xlat
push
pushf
ja
loop
test
mov
sub
inc
jnp
xchg
addr16
pop
or
pushf
mov
sub
aas
inc
add
jnp
int
push
das
out
ret
or
cltd
xchg
push
sub
leave
cmp
rcrb
sub
xchg
and
sti
jnp
lods
xchg
movsl
addl
jo
jl
orb
sbb
mov
jmp
repnz
bound
push
movsb
cld
push
sbb
in
mov
inc
pushf
adcb
ret
sub
xor
repz
cmp
inc
dec
or
inc
loop
adc
sarb
gs
lods
pop
pop
add
cli
mov
insb
outsb
xchg
repz
aaa
daa
xor
iret
std
lock
mov
jb
mov
pop
scas
aaa
sub
or
pop
fs
arpl
mov
push
mov
fcom
aas
loopne
jge
dec
call
inc
int
pop
ret
sbb
push
outsb
pop
stos
flds
out
aaa
xchg
jmp
push
jbe
adc
mov
and
pop
in
in
setp
sub
mov
je
jg
cmp
inc
sub
or
mov
lods
fwait
pop
sbb
xchg
mov
fstl
mov
sbb
mov
fs
cmp
test
add
daa
cmpsb
test
adc
arpl
aaa
int3
cmp
jle
cmp
push
pop
xlat
icebp
fwait
jmp
cltd
jmp
jns
xorb
mov
lret
xchg
mov
rorb
mov
mov
jl
mov
mov
andb
rcrb
mov
pop
cmpsl
out
fsubr
and
stc
adc
cld
pop
pushf
jp
outsb
stos
mov
pop
xchg
xorl
enter
fldl
mov
neg
aam
push
les
push
push
iret
bound
mov
orl
sbb
jg
push
cltd
jnp
fsub
cmp
push
mov
pop
ljmp
in
mov
pushf
int
inc
int3
fs
int3
je
cmc
xchg
and
fsub
mov
outsl
sub
mov
fbld
xor
push
push
fldenv
lods
fists
mov
add
xor
push
cmpl
movsb
mov
fs
out
divl
inc
and
adc
lods
xchg
ret
lods
das
repnz
inc
cmp
or
mov
adc
mov
stc
push
ja
mov
push
pop
push
sub
jns
sar
inc
mov
xor
fiadds
jp
adc
je
in
inc
loope
icebp
inc
outsb
mov
outsb
pop
mov
cmp
cltd
xorb
pop
mov
hlt
daa
dec
mov
nop
xor
aam
xor
adc
insl
xchg
cli
fnstenv
mov
sahf
fadds
addr16
pop
gs
and
lock
fistpll
std
call
jne
aas
cmp
cmp
popa
jne
fs
loopne
fildl
xlat
mov
nop
push
insb
test
mov
and
js
push
push
jle
adc
xor
sub
fucomi
add
call
enter
sbb
std
push
fsubl
pushl
lea
jb
mov
mov
mov
ret
leave
loope
mov
daa
fiaddl
fbstp
ja
push
idivl
ljmp
xorl
pop
inc
fstpl
es
lds
mov
test
mov
pop
int
addr16
imul
ljmp
inc
fcmovu
sub
mov
and
sbb
icebp
sub
gs
sbb
js
fsubrs
scas
add
out
aaa
cld
popf
xchg
leave
lret
mov
popf
xor
test
call
in
xchg
cmp
jge
loop
test
xchg
js
add
fadds
push
jo
sbb
arpl
push
ja
pop
or
clc
addb
dec
sti
dec
aad
dec
bound
push
push
or
lea
imul
mov
mov
pop
or
mov
rcrb
pop
jnp
testl
aas
inc
adc
repnz
inc
test
adc
test
fisttpl
mov
jl
xchg
sub
dec
filds
add
arpl
xchg
aas
mov
mov
mov
xor
add
mov
dec
enter
fsubrs
inc
sbb
mov
mov
inc
push
daa
xor
adc
xor
enter
or
mov
idivl
mov
or
jge
mov
int3
cmp
rcl
jg
and
cwtl
aaa
sarb
aaa
dec
dec
ret
stos
mov
sarb
lds
mov
push
cmp
push
incl
aam
sahf
mov
lods
jg
mov
cmc
cs
loop
or
fldt
mov
das
aaa
pushf
and
and
outsl
push
or
fwait
leave
out
ss
pushf
fldt
mov
sbb
loopne
hlt
mov
cmp
jnp
stos
push
test
jecxz
add
mov
in
inc
cmp
jle
mov
orb
ja
stc
dec
push
adc
xor
in
lock
or
addr16
jnp
pop
sub
mov
jbe
inc
adc
mov
outsl
aam
add
neg
jp
add
int
cmp
lret
adc
test
cmc
mov
add
inc
jb
dec
xor
mov
in
dec
sbb
test
mov
mov
cwtl
das
popf
fucomp
inc
iret
inc
fdivr
pop
xchg
repz
shld
inc
xchg
cmp
add
mov
inc
cmp
pop
jmp
mov
mov
mov
adc
sub
loopne
push
aam
popa
cmc
dec
push
sbb
dec
sbb
lods
push
adc
pushf
mov
jecxz
sti
cltd
ret
insl
jnp
cmp
sti
fsubrs
call
xor
ss
int3
mov
call
or
sub
test
subb
push
cltd
push
jle
mov
sahf
mov
sub
testb
mul
test
cmp
cmp
mov
cmpsl
fldcw
pop
sbb
dec
or
fwait
pop
orb
cmp
jmp
ret
xor
or
test
insl
fsub
je
fiaddl
push
fwait
or
adc
push
mov
xor
xchg
jmp
shl
jp
int3
sbb
push
adc
xchg
addb
inc
sub
xor
xor
sar
ss
mov
jle
cwtl
aad
fisubrs
jecxz
outsb
and
icebp
mov
and
push
sarl
jle
cmp
decb
cmpsb
insl
adc
dec
xor
sub
mov
xchg
dec
repz
xchg
cmc
pop
imul
mov
cmpsb
pop
imul
mov
dec
push
sub
push
shll
lock
pop
mov
dec
loope
shrl
mov
sbb
iret
mov
in
movsl
fs
jno
shrb
stos
rolb
ret
and
add
push
scas
test
dec
les
jb
stos
adc
fisubrl
and
adc
lcall
pop
push
xchg
and
mov
xchg
scas
jg
scas
inc
adc
mov
mov
out
add
lods
inc
sbb
out
cld
bound
in
mov
test
cmc
sbb
ret
inc
and
dec
cld
ret
inc
sbb
or
sub
mov
scas
jl
shll
and
cmp
and
add
mov
mov
in
push
xchg
imul
push
call
das
aas
clc
and
jle
cltd
bnd
mov
aas
scas
cltd
xchg
test
mov
test
sub
dec
jo
dec
or
mov
js
add
fisubrs
int
hlt
ret
mov
or
adc
adc
jae
sbb
outsl
jae
int
cwtl
scas
aad
pop
sar
lret
js
dec
xor
fistpl
push
jle
repz
jno
pusha
pusha
stos
ret
jbe
imul
sub
fistps
mov
pop
sbb
out
ficompl
icebp
mov
ja
xchg
clc
mov
push
push
xchg
push
or
mov
daa
lcall
inc
aad
in
mov
aad
sub
lods
dec
dec
js
push
pushl
scas
add
inc
lcall
insl
xchg
add
add
ljmp
fbld
imul
inc
into
mov
ja
cltd
add
gs
jl
imul
xor
inc
sbb
cmc
adc
jecxz
mov
je
sub
mov
fists
fisttpl
add
and
mov
dec
movsl
xchg
or
xchg
xchg
cli
push
cmp
cmp
bound
nop
jecxz
imul
call
cmpsl
or
ret
or
sub
xlat
call
cmp
sub
aas
repnz
adc
sbb
fisubrs
hlt
adc
ret
scas
in
pop
idivb
int3
jge
lods
xor
mov
cmc
test
inc
test
push
xchg
fldl
movsl
push
pop
dec
push
jl
fdivs
dec
adc
push
loop
cld
and
cmpsb
inc
jl
sub
sahf
or
iret
daa
imul
sub
sbb
rcrl
adc
push
mov
and
xchg
ret
gs
mov
js
ret
push
rolb
gs
cmp
mov
push
inc
movsl
push
mov
xor
xchg
mov
sbb
in
test
punpckhwd
lret
push
cmp
mov
ja
sahf
pop
sub
in
inc
sub
sub
in
or
sub
stos
pop
mov
into
std
enter
cmp
xchg
call
popa
sub
lea
push
in
cs
xchg
stos
call
hlt
popf
std
scas
pop
movsl
popf
xchg
rcrl
or
pop
add
push
sub
imul
xor
xlat
loopne
lock
fwait
push
xchg
jmp
mov
orl
or
jecxz
in
daa
cmp
or
testl
fldcw
decl
stc
pop
push
mov
mov
inc
notl
jnp
cmpsl
cs
push
fistpl
xchg
push
push
into
pop
sarb
repz
insb
mov
lcall
imul
mov
aas
push
pop
lds
in
shll
movsb
cli
inc
jo
xor
das
xor
sub
jo
push
adc
or
mov
cmc
jnp
cli
div
not
sub
stos
mov
call
insb
out
imull
inc
and
xchg
and
in
mov
sbb
xlat
push
in
ret
pop
xor
icebp
xor
pop
pop
jns
aas
lcall
outsb
mov
push
or
xlat
iret
scas
sbb
adc
movl
aam
xchg
pop
lret
jg
out
mov
pop
jle
imull
cmp
dec
dec
imul
mov
mov
push
cwtl
push
or
push
mov
mov
dec
ret
push
push
sbb
inc
pop
and
pop
cmc
and
adc
mov
xchg
and
jp
int3
or
push
jmp
aas
mov
dec
test
lods
jne
and
adc
add
sub
xchg
ss
push
hlt
mov
sub
jge
cmp
fsubrl
cs
enter
add
roll
adc
pop
push
jp
fs
fbstp
mov
ja
inc
mov
lock
mov
and
fldenv
insb
or
and
cmp
popf
ljmp
or
xor
aas
fcoml
bound
pusha
icebp
ds
mov
imul
push
dec
int
stos
cs
push
in
call
adc
imul
jmp
lea
call
data16
cmpsb
or
insb
add
mov
pop
pop
dec
out
insb
xchg
andl
fmuls
pop
push
and
lds
push
add
loop
xchg
mov
loopne
jbe
cmpsb
mov
pop
xor
mov
jg
lret
push
lds
xchg
fwait
push
out
and
adc
inc
dec
cltd
js
dec
mov
lea
push
pop
fisubl
cmp
clc
ret
jae
and
jle
mov
mov
jnp
loope
popa
mov
dec
cwtl
into
sbb
inc
jl
inc
nop
cmp
lahf
push
xor
test
xor
dec
lcall
fwait
lcall
dec
mov
and
notl
add
mov
dec
pop
xor
xor
sub
aaa
push
shr
push
jl
cmp
xchg
adc
inc
xchg
jl
add
clc
movl
stc
jl
push
jns
test
push
sahf
adc
jne
jno
imul
clc
adc
loope
dec
pop
add
lods
xchg
pop
sti
scas
mov
cltd
inc
inc
sbb
int3
sub
push
leave
jge
fs
inc
lret
jns
iret
es
pop
dec
lret
arpl
xor
mov
dec
or
divl
dec
push
xchg
xor
test
fidivrs
push
sti
jo
adc
addl
cmp
fsubs
sub
sahf
push
xor
lock
add
sbb
xchg
sbb
nop
fisubl
ds
mov
mov
sbbl
push
sub
jb
aad
ret
mov
cmp
clc
push
mov
pop
lods
out
pop
push
insl
shll
mov
sarl
sub
dec
ljmp
rclb
sbb
jbe
adc
sbb
pop
enter
xor
sbb
inc
sub
in
xchg
and
inc
fwait
out
mov
dec
call
dec
aad
faddl
je
mov
cmpl
ret
iret
mov
dec
mov
jmp
stos
adc
rorl
cmpsl
lods
xor
ret
jne
lods
movl
or
jle
pop
and
mov
ss
mov
cmp
lock
mov
aad
xor
or
mov
jne
daa
cmp
stc
and
pusha
aad
jmp
xor
or
jns
mov
sub
jmp
or
pop
xlat
mov
leave
jne
add
cmpsb
int3
sbb
xchg
xchg
sti
adc
push
leave
in
mov
gs
mov
push
mov
bound
dec
sarb
cmp
sbb
cmp
lea
mov
mov
cs
aas
std
sbb
add
sbb
out
hlt
sub
dec
mov
outsl
test
shr
cmp
divb
popa
or
in
push
ret
sbb
ret
out
fcoms
xor
mov
sbb
stos
aad
mov
fwait
int
sbb
shl
ja
sbb
repz
cld
and
xor
cmpsl
inc
mov
jne
xchg
add
cs
mov
call
fsubp
stos
ds
rcrl
xor
aas
lahf
mov
data16
mov
inc
lret
or
mov
ficoml
push
mov
pop
mov
imul
sbb
shlb
clc
mov
lods
push
imul
mov
inc
stos
int3
lock
fsubs
hlt
decl
aaa
pop
insl
mov
scas
hlt
lods
xor
adcl
sub
cmc
outsl
nop
je
mov
mov
std
adc
ret
dec
imul
repnz
and
sbb
inc
mov
inc
dec
scas
gs
dec
push
pushf
inc
loopne
mov
in
xchg
inc
xchg
or
idivl
outsl
mov
jae
inc
dec
mov
xor
arpl
imul
push
and
cmp
sub
push
or
push
and
lock
push
sub
setne
clc
xchg
pop
jne
movsb
aam
push
iret
aam
xor
lret
sub
ret
lods
or
xchg
push
fs
and
adc
cmp
xor
stos
xchg
inc
mov
enter
and
pop
test
jp
in
out
xlat
add
nop
pop
sub
mov
fldcw
dec
cmp
pushf
loopne
iret
incl
imul
enter
jg
xlat
dec
xor
test
fyl2x
push
lret
push
stos
sahf
mov
inc
je
push
pop
mov
mul
dec
inc
xchg
out
incl
mov
arpl
or
mov
fisubs
pop
roll
ljmp
pop
rolb
loop
jo
mov
popf
sbb
pop
pusha
sbb
fbstp
xor
inc
test
ficoms
test
and
mov
and
mov
adc
aam
cmpsl
or
sbb
fstps
jge
mov
aaa
test
out
scas
mov
repz
mov
movsl
push
cld
loopne
scas
clc
mov
inc
cs
inc
fucomp
push
mov
dec
push
pusha
lret
cli
outsl
push
mov
or
mov
push
and
push
in
pop
jl
es
fistl
cmp
les
ja
outsl
xchg
insl
push
gs
sti
dec
fldpi
dec
jge
jl
jle
shll
jae
shll
mov
insb
push
and
mov
sub
enter
bound
lods
mov
inc
pop
jo
sti
sbb
cmp
adc
jge
dec
gs
cwtl
dec
and
ljmp
sbb
cld
stc
icebp
inc
faddl
inc
mov
movsb
in
xor
pusha
push
add
pushf
jne
sbb
ja
sub
sbb
inc
pop
sub
lock
xor
xor
mov
add
add
ljmp
test
aas
xlat
lcall
mov
aad
add
cmp
pop
fidivrs
test
aaa
sub
popf
ret
and
mov
push
mov
push
push
fisttpl
cmp
pop
test
or
into
mov
sub
pop
adc
aaa
out
loop
pop
dec
xchg
sarb
nop
imul
in
mov
rcll
adc
in
dec
rcl
jmp
std
fcmovnbe
cmp
cli
and
mov
fs
dec
stos
mov
push
jno
popf
test
push
stos
sub
xchg
sub
dec
mov
aad
push
pusha
mov
sub
cli
sub
and
jae
addr16
pop
insl
lds
cmp
test
mov
cli
ffree
stos
das
cwtl
pop
aam
cli
mov
pushf
pop
xor
orl
add
lret
xor
jge
mov
lahf
pushf
mov
in
cld
sbb
leave
into
mov
movsl
dec
adc
rclb
in
jl
dec
orl
stos
inc
orl
jo
test
jl
imul
mov
mov
cwtl
lea
cli
mov
lret
aad
mov
lahf
outsl
rorl
inc
clc
or
rcrl
cmp
xor
cmp
test
cmp
sub
add
aas
lock
in
mov
or
add
pop
mov
bound
sbb
lret
jmp
divl
push
aas
pop
je
jae
icebp
lock
loope
inc
adc
or
sub
in
xchg
daa
cmp
movsl
xchg
into
insl
jbe
aas
mov
dec
xchg
jle
ss
mov
scas
test
fs
mov
mov
xor
lcall
clc
sbb
xorb
jg
mov
loopne
lahf
lods
sbb
in
rorl
pop
lret
cs
movsb
xchg
xchg
xor
iret
push
add
leave
lea
scas
xor
fistl
and
adc
jns
adc
jg
xchg
ror
xchg
adc
mov
lret
insb
clc
push
adc
out
fcmovbe
inc
mov
add
or
pop
inc
push
cmp
leave
lret
push
pushf
js
xchg
mov
out
mov
mov
fimuls
pop
popa
push
cltd
int
mov
dec
jmp
aas
xchg
insl
repnz
into
adc
jmp
pop
inc
dec
arpl
and
rorl
test
and
outsl
inc
insl
scas
lods
and
mov
push
push
sbb
adc
jae
push
es
mov
pop
jl
mov
loope
leave
shll
and
jae
sbb
call
inc
mov
aam
or
rcr
inc
daa
sbb
jp
imulb
pop
sar
test
pop
insb
cmp
xlat
mov
push
xchg
mov
das
addr16
imul
mov
add
popf
popa
jb
bound
cmp
loopne
in
adc
rolb
ficompl
scas
sbb
add
inc
cmp
sbb
jne
insl
into
or
cld
mov
adcl
mov
xchg
or
sbbl
mov
ret
les
das
xchg
cmp
mov
pop
push
movsb
jo
mov
out
sbb
jbe
xor
sub
dec
mov
push
daa
mov
cs
stc
or
mov
int3
lret
push
leave
mov
imul
ja
jge
enter
test
ficomps
loop
mov
test
inc
mov
inc
mov
add
std
shlb
mov
repz
pop
in
inc
loopne
negb
andl
dec
sbbb
int3
test
gs
mov
hlt
outsb
or
fs
jge
int
inc
inc
dec
sti
lock
jecxz
sarb
mov
es
stos
mov
lret
std
sub
cmp
lcall
cmpsb
jge
movsl
out
push
fists
mov
add
adc
adc
out
aas
test
imul
sub
pop
lahf
pop
push
loop
pop
rol
push
cli
mov
jg
mov
into
cmp
insl
mov
nop
jne
cld
pop
mov
xor
pop
cmp
jns
pop
call
cli
add
or
fldcw
dec
push
push
shrl
dec
jge
xchg
testl
mov
sbb
rcrl
mov
popf
adc
pop
test
sbb
xchg
dec
sbb
in
push
mov
jb
hlt
mov
testl
sbb
in
mov
mov
addr16
cmp
movsb
das
shl
sub
or
aam
fimull
pop
fwait
push
add
aad
mov
inc
pop
push
and
push
cmp
sub
clc
insl
jno
in
loopne
sub
push
dec
sub
cmp
shlb
cmp
lcall
mov
pop
scas
std
lods
pop
pop
out
push
mov
xchg
into
movsl
mov
jbe
push
push
ss
and
fsubl
and
leave
test
arpl
addl
cmpsb
aam
rcrl
mov
mov
imul
adc
out
adc
popa
stc
sub
jae
jno,pn
adc
xchg
add
xchg
xor
outsl
sbb
mov
mov
jl
loop
aas
pushf
push
int
or
dec
adc
cmp
in
movsl
popa
sub
jle
aam
cli
fs
mov
jo
divb
stc
jp
fs
fdivr
insb
outsl
push
cmp
mov
mov
xchg
adc
out
jae
outsb
mov
xor
xor
push
rclb
or
cmp
testl
in
fdivl
push
lods
xchg
andl
lea
xor
aaa
subb
shrl
mov
mov
add
aaa
shrb
fwait
stc
mov
xor
xor
lods
xchg
and
daa
aas
and
push
in
jecxz
repnz
pmaxub
rcrl
lret
push
pop
adc
pop
xchg
dec
es
popf
fisubrs
int3
outsb
ljmp
dec
inc
lret
in
emms
push
mov
or
mov
ret
dec
js
lret
or
pop
call
pop
or
mov
xor
nop
cmpsl
mov
adc
jmp
cmp
shl
icebp
or
mov
jo
hlt
out
cmp
push
sbb
cli
lock
outsl
lcall
jnp
pop
or
mov
push
movsb
push
push
jmp
sbb
jg
dec
js
mov
scas
pusha
mov
or
fs
fstps
push
add
adc
jnp
sub
push
inc
mov
mov
pop
imull
push
jmp
adc
inc
hlt
xor
push
pusha
inc
mov
push
add
and
sbb
das
or
xchg
adc
std
sub
push
push
cmp
mov
cmp
lret
cmp
shll
mov
xchg
outsl
mov
int3
enter
jae
cmp
andl
dec
and
dec
mov
testb
ja
cmpsl
dec
sub
movsl
or
xor
cmp
mov
sub
bt
push
adc
fadd
daa
arpl
fisubrs
mov
or
pop
and
xor
or
sbb
adc
lea
xor
inc
cs
or
test
push
and
jne
or
mov
mov
leave
mov
mov
into
sub
jne
out
leave
mov
daa
inc
xchg
sub
in
repnz
ja
or
fnsave
dec
jge
jbe,pn
mov
mov
movsb
mov
and
addl
fsubr
loopne
pop
aad
inc
ds
mov
jmp
int3
push
cmp
in
sbb
adc
inc
dec
sbb
push
push
or
aaa
add
lcall
add
xor
add
ljmp
std
call
in
mov
xchg
pop
xor
adc
icebp
insl
and
jle
push
mov
cmpsl
sub
sahf
rcrb
incb
ret
xor
mov
in
mov
cmpsl
add
negl
int
es
test
lret
mov
xor
iret
movsl
int
popf
fs
scas
imul
fadds
nop
xchg
sti
in
adc
sbb
mov
ret
dec
mov
rolb
xor
popf
movsb
jg
jmp
lahf
imul
jmp
push
or
xor
mov
or
dec
loopne
sub
pop
xchg
xor
stc
dec
push
out
loope
addr16
inc
cmc
xor
outsb
leave
mov
inc
xchg
or
pop
xor
popa
iret
dec
pusha
xchg
std
dec
pop
xchg
das
cli
inc
gs
lahf
or
inc
push
je
add
push
test
stos
imul
push
loope
bound
cmc
out
xor
out
mov
out
mov
bound
xchg
jbe
adc
test
cmp
shll
icebp
dec
fnstsw
cmp
inc
movsb
cmc
jnp
dec
int
pop
mov
sahf
adc
cs
lret
and
daa
fistpll
loope
clc
sbb
dec
call
je
sbb
push
dec
cmp
out
push
dec
inc
clc
cmp
ret
sarl
sbb
daa
cmpb
pop
nop
dec
cmpsb
inc
testb
add
imul
cmp
outsl
test
and
push
pusha
sub
bound
xor
hlt
idivb
adc
out
loop
push
test
xlat
push
adc
lds
sub
fdivr
test
js
clc
pop
rcrb
mov
fnstcw
pop
mov
dec
mov
jns
mov
leave
push
pop
xor
out
pushl
and
aad
fsubl
dec
aam
mov
inc
ja
test
xor
sub
dec
enter
and
dec
xor
jbe
dec
fdivs
popf
test
jp
sub
pushf
iret
sub
ret
xchg
fsubrs
sbb
dec
in
push
ret
xlat
or
out
cmpsb
push
jno
mov
imul
jo
mov
and
or
push
jg
idivl
cmp
repnz
xor
cmp
je
ret
add
aam
fs
repnz
cmp
xchg
shrb
and
in
add
andl
dec
ret
mov
in
or
pop
mov
mov
dec
fbld
fcompl
int
sbb
in
insb
inc
mov
or
sbb
inc
pop
or
pop
mov
outsb
xor
vmovlpd
adc
jle
out
or
fcmovnb
ss
mov
lahf
sub
or
arpl
push
sub
jo
int
pop
mov
jbe
sub
mov
mov
xchg
stos
pop
jbe
mov
cltd
mov
int
inc
push
call
push
add
cmp
dec
es
loop
test
pushf
xor
ja
dec
pop
div
addr16
xor
jno
into
das
xor
fbstp
push
outsb
mov
aas
es
rcr
mov
jecxz
outsb
fcoms
jo
stos
daa
in
or
in
fdivrl
rcrl
jb
mov
enter
mov
and
jge
mov
inc
add
push
push
mov
lahf
add
xor
das
cmpsb
rcrl
lcall
rolb
inc
jp
lret
jmp
add
xor
xchg
add
call
mov
jmp
dec
ldmxcsr
dec
add
cs
xor
ljmp
and
mov
sbb
stc
xor
test
pop
jmp
clc
mov
push
cltd
ret
sub
mov
xorb
adc
push
repz
mov
mov
jne
loope
xor
cmp
pop
pop
mov
mov
popa
push
or
jl
pop
jecxz
dec
cltd
mov
jns
mov
sti
fdivl
mov
fimuls
pop
or
lret
loop
aaa
loope
loope
inc
xor
pop
fcomip
loope
sahf
mov
icebp
fimull
roll
push
aas
dec
inc
orb
popa
in
sbb
mov
jl
push
daa
stos
cld
fsubr
popf
add
ds
je
xchg
xlat
in
mov
test
cmp
outsb
mov
push
pop
scas
dec
les
or
shlb
inc
sub
repz
out
in
pop
inc
jae
in
sahf
cmp
jg
pusha
std
repz
test
dec
xchg
sbb
add
push
ss
jb
imul
adc
push
mov
mov
lock
int
xor
shll
leave
rorb
ds
ss
aam
mov
imul
test
addr16
pop
mov
inc
das
int
cmc
ret
xchg
testl
or
and
imull
jge
std
imul
cmp
aam
outsb
dec
sbb
add
cmp
jp
pushf
daa
xor
and
lsl
fistpll
hlt
mov
sbb
cmp
pop
out
dec
pushl
test
xor
xor
sub
inc
mov
sti
ficoms
jle
or
cmp
add
shl
lahf
in
adc
iret
movsl
test
push
mov
lods
push
out
adc
inc
lea
cmp
sbb
jns
pop
sbb
movsb
mov
mov
and
and
mov
add
shlb
call
aas
aad
pop
mov
and
xchg
push
sub
dec
sahf
stos
add
imulb
jecxz
xchg
add
or
xchg
adc
or
and
aad
pop
pop
mov
iret
fwait
cltd
scas
popa
sub
daa
xor
sub
push
dec
mov
sub
rclb
popa
mov
xor
decb
mov
push
inc
repz
push
mov
loopne
jo
pop
xor
inc
xor
rcr
sub
push
bswap
jns
dec
adc
cmpsb
insl
fldl
adc
push
sbb
call
jnp
in
cmp
cmp
jecxz
sub
jmp
adc
add
push
push
shl
dec
rol
mov
fistpll
xchg
xor
push
push
dec
jb
mov
mov
sahf
scas
jne
jge
insl
sbbl
scas
aam
xchg
adc
adc
in
mov
xchg
sahf
add
insb
call
ret
add
lcall
and
dec
jne
xor
ss
iret
xchg
lahf
mov
shrl
push
push
add
inc
stc
cltd
mov
fstpl
jae
clc
sarb
jb,pn
scas
cmp
fsubrl
or
mov
mov
xchg
sub
cmp
jb
insl
mov
push
sub
push
aam
push
xor
in
cmpl
inc
sub
fisubl
or
pushf
lret
pop
fldenv
aad
mov
pop
mov
lock
es
push
sub
sbb
adc
inc
testb
test
add
data16
cmp
xchg
imul
sub
add
popf
cld
sub
and
dec
push
out
cmp
imul
xchg
inc
mov
outsb
into
xchg
sarb
sub
loopne
xor
out
fiaddl
js
movsl
lods
testb
cwtl
imull
leave
xchg
xchg
mov
std
xchg
dec
dec
push
push
in
xchg
mov
jmp
and
stos
add
sbb
arpl
mov
jbe
push
jge
shrb
insb
or
cmp
cld
mov
popl
push
xchg
push
jae
outsl
fwait
sti
testl
jp
mov
test
mov
imulb
int3
outsb
in
ja
or
loope
movsb
rcl
cwtl
je
xchg
call
sub
pop
movsl
mov
int
loopne
movsb
jmp
and
cmpl
cs
filds
and
cmpsb
bound
std
xor
and
hlt
pop
dec
test
or
push
subb
pop
hlt
lret
or
ret
loopne
out
stos
lahf
das
in
adc
mov
adc
jo
pop
and
mov
pop
pushl
cld
bound
xor
aam
xor
pcmpeqw
adc
mov
inc
xor
scas
and
jle
fstps
xchg
pop
inc
fisttpll
add
xlat
adc
arpl
insl
dec
push
jp
mov
aas
adc
out
lock
out
daa
fistps
cli
mov
stc
arpl
lds
mov
xchg
push
adc
mov
ss
jns
out
push
jle
jns
outsb
adc
cmp
daa
lds
mov
mov
scas
xlat
and
add
sahf
lcall
adc
in
adc
cmpl
push
jl
stc
in
and
adc
xchg
xchg
pop
inc
add
mov
xor
test
lret
and
dec
nop
repz
popf
cmpsl
and
inc
cmc
js
dec
nop
jg
adcb
pop
adcl
scas
adc
loope
pop
jnp
mull
es
lret
and
insb
fisttpll
inc
stos
xor
out
mov
push
pop
out
cltd
dec
aas
aas
sti
idivb
jb
adc
in
rcrl
mov
mov
mov
cmp
and
mov
cmp
cli
push
fstl
dec
fwait
bound
mov
sbbb
mov
loopne
clc
or
negb
scas
daa
pop
jmp
scas
xor
mov
mov
es
cmp
xchg
cmc
pop
ds
inc
rolb
int3
lods
inc
add
fs
shrb
or
cmp
fimull
hlt
jb
xchg
scas
xor
les
dec
jnp
push
movsb
pop
adc
repnz
xchg
pusha
xchg
nop
inc
push
mov
loopne
nop
xchg
cltd
mov
cmpsl
inc
and
jae
mov
xchg
sbb
rorl
xchg
cmp
loope
dec
jmp
sub
into
cmpsb
shl
inc
or
jno
dec
sbb
dec
push
test
int
loop
inc
mov
cmp
inc
lea
dec
stc
inc
jmp
lods
dec
sbb
mov
rcrl
lret
test
cld
test
cli
movl
inc
lcall
sbb
fsubrs
outsb
inc
adc
loope
inc
cmp
dec
test
sub
clc
xchg
es
movsl
ret
xchg
lea
push
adc
psrlw
insb
lret
mov
and
lret
adc
and
out
sub
dec
dec
andl
dec
fisubrl
adc
mov
jnp
push
mov
cmp
mov
jns
outsl
leave
jg
jmp
out
mov
in
fsubs
cmc
mov
cld
push
test
sahf
adc
inc
jl
cmp
je
xchg
cmp
cli
add
hlt
movsl
push
push
push
sub
mov
xor
imulb
sbb
xchg
popf
sub
push
jg
cmpsl
shl
xor
js
sbb
jge
jae
jb
int
loopne
push
bound
lret
ljmp
repz
fsts
mov
and
pushf
adc
pushf
insl
rcll
mov
scas
shl
imul
popa
add
cmp
leave
sub
add
dec
fwait
bound
cmp
ljmp
dec
sbb
mov
adc
call
and
or
fdiv
daa
jns
call
sub
push
inc
into
dec
sbb
pusha
cs
sbb
out
sahf
mov
xchg
pushf
sub
iret
cmpsb
cld
sub
lods
push
add
imul
jae
xor
negl
xor
and
mov
dec
scas
inc
pusha
aad
ds
jge
enter
lret
mov
in
xchg
jne
jecxz
fs
movsb
pop
adc
ds
xlat
je
jno
mov
lea
xchg
pop
xlat
dec
incl
jl
push
sar
xor
sub
pop
or
outsb
push
mov
iret
rorl
xlat
orl
lods
pushf
xorl
popf
clc
xchg
xchg
das
out
bound
aaa
pop
xor
jne
mov
ja
daa
mov
push
fsub
out
mov
add
out
loop
int3
icebp
loop
push
jnp
inc
mov
sbb
and
les
out
test
frstor
jl
stos
push
cmp
jp
data16
in
aaa
sbb
add
mov
sahf
movsb
cld
mov
xchg
xchg
aam
subb
test
jno
push
or
js
jne
insb
in
mov
push
or
adc
mov
add
les
lahf
or
out
clc
aam
gs
adc
and
inc
out
mov
ds
xor
add
arpl
add
jo
aaa
xchg
dec
sahf
sub
and
xor
xchg
push
adc
mov
and
jp
mov
xchg
xchg
call
xchg
aaa
fcoms
push
jle
std
movd
push
inc
loopne
mov
mov
icebp
mov
into
negl
pop
inc
add
dec
std
mov
arpl
mov
fidivs
ljmp
cmc
int3
mov
and
push
int3
xlat
mov
pop
pop
popa
lret
mov
add
out
test
iret
or
mov
mov
mov
add
test
lods
dec
andb
ret
iret
sahf
adc
push
sbb
fists
push
pop
mov
popf
int3
push
mov
jmp
jl
in
pop
mov
pop
fsubs
jb
cmp
adc
sub
or
sub
out
xor
sbb
call
loopne
cmp
je
lods
out
fsub
add
jecxz
sub
and
rep
fnstenv
dec
inc
xchg
xchg
lahf
fs
cwtl
fdivl
inc
lds
fcom
js
jmp
cmp
dec
es
push
cs
inc
pop
je
push
cmp
bound
icebp
and
sbb
push
lcall
sti
lret
call
mov
mov
lds
or
inc
cs
sub
cmp
xchg
jo
test
hlt
ljmp
xlat
sbb
xchg
mov
adc
mov
mov
sbb
lods
jge
pusha
icebp
scas
das
scas
stos
jb
push
cmp
out
mov
daa
in
inc
push
insl
stos
das
mov
fdivrs
ja
rcrb
outsl
jp
mov
ss
push
dec
bound
ret
popa
sti
xchg
add
inc
ret
lods
xlat
xchg
cmp
sub
push
mov
xchg
subl
arpl
hlt
jp
sub
mov
xor
fisubl
jle
cmp
bound
inc
mov
add
dec
mov
pop
rcll
and
jae
jo
rolb
sbbl
add
mov
sub
xor
xchg
dec
jmp
xor
inc
mov
inc
adc
inc
mov
cmpsl
or
pcmpgtw
loop
sahf
inc
test
leave
sub
lret
xor
mov
mov
or
mov
mov
das
adc
fisttps
dec
pop
push
lahf
xchg
loope
pop
stos
xor
pop
repnz
xor
adc
add
rorb
add
stos
xchg
dec
movsb
or
push
jo
and
sarl
inc
push
ret
dec
jp
jae
and
fstpt
adc
clc
ret
stos
xchg
fidivl
leave
jb
mov
movsl
xorb
mov
add
and
daa
jnp
sti
push
outsb
xchg
mov
test
gs
movsl
inc
and
or
shl
je
mov
scas
jb
mov
xor
mov
inc
lret
push
pop
test
sarb
dec
sub
mov
mov
stos
dec
cmc
jecxz
add
sub
xchg
pop
dec
call
pusha
push
pop
std
cmp
xor
imul
mov
mov
lcall
filds
shl
mov
aaa
rolb
xchg
and
scas
cwtl
out
adc
push
inc
sti
lret
in
mov
inc
popa
adc
popf
sub
sbb
add
and
push
jae
dec
cmc
xchg
jmp
rol
add
lods
jne
xor
sub
dec
sbb
mov
mov
mov
jp
repz
dec
push
repnz
adc
mov
pop
jmp
lahf
jae
mov
add
and
mov
out
insb
popf
sub
xor
loopne
cmp
fsubl
cmc
add
cli
int
fcoml
inc
mov
cmc
push
and
add
shr
sub
loopne
int
and
sub
mov
loop
shl
mov
xchg
std
mov
ficoms
or
jns
cmp
xchg
out
lahf
js
jo
aad
cmp
insb
mov
cmp
xor
or
pop
popa
nop
in
inc
jno
inc
cmpsb
sbb
popf
enter
fucomp
jp
mov
mov
jb
adc
xchg
jecxz
adc
or
adc
out
sub
push
scas
push
iret
push
xor
lea
adc
and
xchg
mov
ret
adc
dec
inc
test
cwtl
xor
aad
ljmp
cmp
jbe
push
les
add
mov
mov
dec
popa
lods
int3
mov
stc
jno
add
pop
and
or
or
icebp
mov
ss
inc
push
out
icebp
cmp
jne
mov
cwtl
or
das
xchg
mov
sbb
adc
push
sti
into
add
aaa
push
mov
push
sub
adc
jae
sbb
adc
ss
jno
dec
or
int
adcb
test
idivb
adc
mov
mov
jl
negl
inc
icebp
xchg
pop
push
mov
inc
sbb
xlat
stc
jb
mov
fldcw
xchg
roll
imul
inc
pop
mov
adc
pop
mov
ja
test
das
and
jmp
test
push
inc
add
inc
ficompl
popf
inc
aam
xchg
int3
push
jb
fstpt
xor
inc
fwait
cmp
insl
and
sahf
jb
add
add
sbb
xchg
mov
mov
inc
iret
cmp
addr16
dec
push
xchg
adcb
std
mov
dec
bnd
nop
mov
outsl
mov
xorb
dec
dec
jmp
cld
in
inc
in
test
sbb
stc
pop
je
dec
and
rcrl
xchg
fdiv
into
jmp
mov
cmpsl
int
dec
gs
mov
enter
jle
outsl
add
rolb
jae
xor
ja
mov
pushf
xchg
mov
mov
xor
faddl
mov
jae
pop
arpl
add
sub
mov
pop
subb
aas
cld
or
stos
roll
scas
int
push
jg
ja
jnp
add
lar
out
loop
stos
mov
lods
jp
xor
push
and
sub
push
andb
je
jp
dec
add
daa
pop
insl
dec
iret
inc
movsl
mov
lock
push
pushf
rorl
mov
add
std
in
sbb
cli
push
inc
fs
test
cmpsb
test
ret
lods
mov
test
mov
mov
daa
mov
lcall
out
ret
mov
mov
aas
xor
pop
jl
mov
pop
repnz
add
xor
mov
in
pop
dec
cmp
mov
xchg
ret
enter
xchg
rorl
lods
xchg
mov
mov
mov
jmp
incb
cld
pop
call
jb
pop
inc
and
mov
enter
inc
insl
stc
jge
jge
rcrb
jmp
and
std
cld
out
xor
lret
adc
xchg
xchg
inc
push
dec
pop
std
pop
ds
dec
test
insl
mov
inc
rorb
ret
push
sbb
sbb
dec
ret
dec
lods
out
add
add
in
out
sub
sbb
dec
inc
popf
mov
push
outsl
shlb
mov
push
xor
dec
arpl
lahf
push
or
or
push
jge
pop
std
out
pop
add
ljmp
bound
scas
lods
mov
jno
rcrl
fndisi(8087
push
gs
fnstsw
stc
mov
movsb
cli
mov
in
jae
lods
out
nop
movsb
xchg
push
fwait
stos
bound
lods
mov
sub
lods
daa
sbb
adc
cmp
inc
pop
xlat
adc
addr16
pushf
adc
ret
xsaveopt
jg
xchg
inc
pop
adc
dec
mov
and
ss
xor
int
mov
mov
sub
add
pop
sub
cld
jge
add
pavgw
hlt
gs
fcmovbe
rcll
sub
in
dec
or
mov
cmp
in
arpl
and
mov
mov
lahf
dec
pop
out
rclb
push
pushf
xchg
pop
pop
out
in
lds
cld
lret
call
xor
test
aaa
sub
jp
clc
pop
push
mov
je
pushf
mov
test
dec
sbb
loopne
dec
or
mov
add
and
fcmovnbe
sub
pop
cmp
mov
pop
in
test
lods
cmp
mov
mov
push
pop
and
into
inc
arpl
icebp
cmp
inc
mov
cmp
shlb
imul
arpl
mov
sub
jbe
popl
mov
andb
sbb
or
fs
fildll
out
and
mov
xchg
dec
or
xor
stos
push
pusha
sub
loop
xlat
xchg
dec
ja
push
mov
jge
notl
ret
jp
xchg
or
sub
shll
stc
loop
inc
jne
pop
cmp
jmp
insb
mov
data16
mov
xchg
out
sbb
lods
dec
insb
sti
adc
sbb
shll
sub
sbb
inc
inc
cmp
sub
rcl
mov
mov
mov
push
fwait
jbe
ret
test
jo
xor
and
mov
fs
loop
lds
nop
add
lret
or
push
or
shlb
sbb
scas
cmp
mov
xchg
and
in
fmuls
cld
cltd
add
mov
mov
jle
je
push
mov
dec
pusha
stc
push
xchg
mov
jne
pushf
adc
das
mov
mov
cltd
mov
cltd
mov
dec
lods
fwait
add
scas
sub
adc
test
lds
jecxz
lret
inc
loopne
and
jb
pop
es
mov
roll
mov
test
mov
jae
es
fbstp
outsl
mov
mov
sti
lods
push
cmpb
out
mov
jl
add
loop
stos
jle
or
out
cmc
inc
dec
mov
jno
jae
clc
in
and
jnp
or
nop
jae
mov
pop
add
jne
mov
mov
jbe
push
push
pop
cwtl
mov
fstps
dec
and
sbb
adc
shll
jg
divl
ds
xchg
stc
cld
aad
inc
pop
addr16
or
inc
pop
inc
je
mov
sub
cmp
sbb
in
out
bound
inc
or
adc
sbb
pop
push
pop
leave
mov
fwait
mov
jnp
jecxz
and
mov
iret
arpl
push
outsl
aaa
pusha
pop
jecxz
mov
pop
mov
mov
rol
cs
aam
jmp
popf
loopne
and
sub
rorb
or
push
sti
lahf
mov
xchg
fwait
mov
fnstsw
push
hlt
and
pop
add
repz
inc
sbb
dec
out
cli
adc
sub
or
push
xchg
mov
push
sbb
jae
sbb
mov
mov
rcrl
adc
xor
leave
sbb
mov
cmpsl
sbb
mov
mov
sbb
xchg
stos
xchg
dec
adc
ds
jge
mov
jns
push
das
in
daa
nop
cmp
fldenv
mov
xor
out
xor
or
dec
and
adc
repnz
and
cmp
mov
mov
nop
shll
stc
push
stos
pop
enter
xchg
out
adc
inc
pop
xchg
inc
pop
jge
je
inc
cmpb
imul
test
call
sub
loop
dec
adc
sub
jo
into
or
call
fsubrl
dec
in
mov
push
insb
insl
cmp
push
popa
mov
sub
push
lods
jmp
out
add
jns
jb
dec
popa
sbb
fbstp
in
scas
or
test
inc
dec
lds
lds
mov
lcall
xchg
mov
xchg
xorb
jae
lcall
push
daa
inc
lcall
lret
jno
adc
or
imul
es
or
xchg
ss
pop
mov
scas
mov
push
aaa
cmpsl
mov
ffree
mov
mov
int
or
add
sbb
dec
sbb
out
lret
das
sbb
mov
xchg
cmc
addr16
lahf
jne
adc
and
push
sbb
xchg
push
push
fcmovnu
xchg
rorl
cld
cmc
bound
push
inc
sar
or
pop
repnz
inc
mov
movsb
pop
fsubrs
repz
call
push
push
inc
push
mov
jmp
shr
mov
loop
in
sbb
mov
mov
lret
mov
cmp
add
pop
add
subb
sarl
xor
dec
daa
adc
pop
cmpsl
dec
xchg
mov
sub
out
and
repz
ret
ds
mov
out
fsubs
xchg
ret
cmpsl
andl
mov
cltd
push
orb
pop
pop
jg
inc
xchg
fwait
pop
dec
mov
sub
lret
mov
lcall
icebp
xchg
adc
mov
and
mulb
cltd
jno
lahf
xor
jnp
mov
or
dec
icebp
movsb
xchg
xor
sub
lock
inc
mov
and
inc
test
scas
dec
mov
fwait
mov
cmp
jecxz
and
jb
sbb
pop
mov
adc
inc
push
das
mov
movb
or
sbb
push
aad
test
sub
xchg
mov
add
mov
jbe
and
lods
andl
sbb
sbb
loopne
mov
enter
lahf
mov
push
pop
pop
cmp
mov
stos
jae
pop
push
pop
dec
mov
pop
enter
iret
int
decl
dec
push
cld
add
xchg
jmp
push
dec
push
ret
lahf
enter
insb
mov
test
push
add
pop
aas
jl
jmp
adc
aas
push
mov
push
cmp
enter
push
and
jno
fstpl
lret
xor
jbe
lea
pop
adc
mov
xchg
cmp
adc
push
xchg
icebp
sub
sbb
dec
pusha
ss
cli
loopne
sahf
outsl
pop
and
pop
cmc
repz
mov
mov
lock
adc
sub
jge
decl
and
push
xchg
jecxz
mov
mov
lahf
subl
leave
mov
aas
mov
mov
add
test
mov
xchg
push
ret
push
loopne
lret
mov
sbb
decb
mov
and
sub
and
mov
icebp
xlat
ret
cltd
push
orb
outsb
push
adc
or
test
jbe
testl
push
add
or
xor
push
add
jecxz
add
arpl
out
mov
mov
lds
or
in
shll
inc
fcoml
cwtl
aam
loope
fdivrl
fcmovnu
pop
push
mov
inc
jbe
into
cmp
xor
mov
push
mov
mov
inc
fidivrl
xchg
mov
repz
pop
add
jb
jnp
xor
push
lock
pop
mov
cwtl
int
je
shrl
mov
sbb
cmp
xor
je
orl
testl
sbb
push
and
call
aas
js
push
pop
xor
or
mov
pop
inc
sahf
push
repz
xor
pop
adc
aad
mov
insl
js
dec
ja
js
add
lahf
lds
xchg
jno
dec
push
test
mov
out
mov
sbb
out
ret
xchg
mov
cltd
xchg
daa
mov
stos
pop
shlb
and
popl
es
pop
add
mov
dec
push
mov
insl
daa
lret
inc
cmp
insl
jmp
out
mov
mov
es
sbb
dec
mov
dec
loope
sub
fld
inc
or
jb
adc
in
in
stos
movsl
push
pop
and
in
loopne
das
cmp
pop
mov
gs
xchg
inc
js
pop
pop
pop
cmpsl
cmp
adc
push
sbb
imul
jecxz
outsb
push
add
fidivrs
stc
ret
orl
cmp
ret
stos
das
and
arpl
test
inc
jecxz
and
push
mov
int
adc
mov
xchg
fistps
sbb
leave
mov
or
repz
dec
sub
std
outsl
xor
mov
sbb
dec
pop
pushf
sub
mov
rcrb
dec
out
in
sti
movsb
dec
fbld
mov
sahf
int
stos
mov
cmp
lea
pop
xchg
aam
iret
inc
stc
adc
xchg
inc
mov
pushf
and
sub
subl
mov
or
push
das
loopne
negb
jmp
out
ds
mov
add
call
dec
add
rorb
xor
dec
bts
fisubl
fnstcw
jnp
add
jb
in
les
jp
sub
out
test
scas
popf
add
js
imul
xchg
js
push
add
gs
mov
adc
movsl
bound
rol
in
cmp
cmp
cld
push
gs
inc
xchg
iret
inc
sub
sub
mov
inc
pop
add
ret
xor
imulb
add
sbb
sbb
rcl
fisttps
mov
sti
lock
andb
nop
bound
xlat
fsubrl
add
insb
ja
adc
enter
out
pop
jns
add
sahf
call
jno
jb
push
jmp
jge
pop
xchg
scas
mov
cltd
stc
lods
test
or
jecxz
push
imul
or
xchg
push
mov
push
icebp
sbb
push
fs
das
loopne
int3
cwtl
fsubrp
dec
or
clc
xchg
cli
cmp
xchg
pop
clc
add
pop
cs
fcompl
cmp
scas
mov
pushf
das
test
lods
dec
test
sbb
aam
mov
inc
ljmp
lea
pop
aas
xchg
fmulp
sbb
sub
push
pusha
jne
or
pusha
xchg
sub
cs
jns
cmp
lret
inc
aam
dec
mov
mov
push
aaa
xor
jmp
test
sbb
mov
js
mov
divl
pop
pop
outsl
push
iret
xor
cmp
lahf
xchg
xor
ja
rcrb
xchg
sub
aad
call
or
mov
shr
inc
lds
cmpsl
loop
sbb
pop
mov
push
leave
aas
ds
test
aam
mov
mov
movsb
out
imul
sbb
mov
outsb
lret
and
orb
int3
cmp
insl
test
enter
test
out
ret
js
xor
jbe
jecxz
cmpsb
push
lcall
cmp
rcrb
add
std
dec
pop
mov
xchg
shrl
push
xchg
mov
stos
imul
lret
jmp
xchg
fld
int3
lret
mov
roll
iret
push
loopne
push
xchg
mov
jae
inc
imul
push
leave
push
cmpb
ss
inc
addl
lret
idivb
int
fisttps
pusha
push
call
sbb
movl
daa
into
int3
and
shrb
cmpsl
add
popa
mov
cmp
bound
testl
push
dec
sub
popf
add
outsb
jne
push
in
cmpsb
dec
sbb
ficoms
shll
inc
xlat
shr
nop
xchg
dec
inc
test
hlt
jnp
jne
stos
in
cmpsl
fwait
mov
xor
gs
adc
ljmp
lcall
in
mov
and
push
mov
jecxz
mov
push
add
outsb
jnp
cwtl
xlat
push
leave
push
test
stc
mov
cmp
jecxz
enter
mov
sbb
push
xchg
popa
addr16
data16
push
mov
dec
jno
mov
cmp
stc
leave
insb
push
inc
jb
xchg
and
push
out
test
inc
sub
fisubrs
repz
mov
adc
sbbb
pop
lds
aad
shlb
das
movsl
mov
outsb
gs
loop
xlat
xchg
sub
xchg
sub
scas
adc
into
sti
mov
jge
xorl
push
mov
loop
xor
sub
data16
loopne
jp
call
sarl
cmp
lods
enter
popf
push
cltd
dec
sarl
aam
jo
mov
inc
data16
sbb
lcall
enter
sbb
jbe
mov
or
sub
sbb
pop
fadds
clc
push
push
and
leave
mov
adc
imul
mov
cltd
or
stos
cmp
jo
sub
scas
repz
pop
and
xchg
les
out
push
mov
daa
addr16
sub
movsl
adc
sub
pop
lock
fmull
addr16
dec
call
rcll
mov
jmp
das
or
rorb
psadbw
pop
mov
jne
cmp
inc
sti
sbb
dec
in
bnd
in
dec
add
adc
mov
ds
testb
in
mov
test
insb
push
push
fimuls
push
cli
pushf
sbb
divl
jmp
in
mov
cltd
mov
adc
jb
and
inc
mov
enter
jp
sub
std
pop
or
lret
lods
lahf
popf
icebp
andb
sub
inc
xchg
lods
xchg
xchg
jae
mov
addr16
xchg
cmpsl
cmpsl
cmp
clc
lods
cmpsl
fldenv
push
push
cmp
mov
pop
imulb
xor
cmc
scas
in
lret
xor
arpl
fistpll
int
test
pop
xchg
push
xor
and
daa
ss
add
mov
mov
ret
or
xchg
out
fisubrs
into
fldl
data16
xlat
nop
cmp
sub
inc
into
cmp
das
cli
pop
inc
and
pop
dec
iret
add
push
or
push
push
mov
pop
and
pop
pop
int3
pop
dec
rcrb
mov
enter
mov
mov
loope
mulb
movsb
cli
add
cmp
mov
or
daa
xor
in
xchg
cmp
imul
loopne
cmp
scas
aas
mov
mov
jge
push
push
fmull
insb
repnz
jnp
sbb
mov
loop
fsubs
pop
int3
jmp
icebp
pop
push
jns
push
mov
cmp
sbb
cmpsl
xor
xor
sbb
arpl
cmc
sub
hlt
imul
pop
sub
repz
adc
fildll
mov
jb
dec
mov
or
sbb
jb
or
iret
cmp
insl
imul
nop
sub
mov
add
sub
rcl
sub
movsl
xchg
inc
cmp
mov
adc
push
cmp
jl
and
in
fdivrl
mov
out
out
shll
lods
shrl
int3
inc
inc
jns
icebp
jmp
inc
adc
pop
mov
jmp
xor
stos
and
push
scas
sbb
fs
ss
sub
jge
add
imul
dec
pop
jnp
add
out
rcrl
shl
rcr
jnp
js
call
xor
xchg
rcll
in
dec
data16
stos
lods
lods
pandn
cs
stos
or
or
add
mov
imul
les
jno
jne
loopne
pop
lcall
cs
clc
mov
test
dec
xchg
inc
repnz
or
cs
mov
pusha
clc
cli
sahf
and
push
out
push
sub
out
mov
adc
imul
inc
imul
out
cmp
cmpsb
adc
sbb
jae
ljmp
pop
jne
insb
jnp
addb
adc
cmpsb
stc
pop
lahf
push
lock
xlat
dec
jbe
add
lds
pop
inc
mov
pop
test
jbe
stc
inc
enter
out
out
dec
xor
cmp
adc
cmp
mov
mov
cmp
adc
scas
sub
imul
or
in
sub
mov
popf
ret
push
jb
negb
push
sub
xchg
push
aaa
fcmovne
dec
dec
cmp
dec
xchg
sarl
pusha
dec
ret
mov
movsb
push
aam
rolb
ror
in
out
cwtl
xchg
and
aaa
gs
lods
lds
loopne
jge
in
in
sti
push
sub
cmc
mov
or
jns
dec
push
jecxz
sbb
jo
repnz
stos
push
dec
imul
mov
cmc
push
xor
nop
loope
xchg
xchg
mov
lret
and
ffreep
dec
sbb
shll
lea
xchg
popf
frndint
scas
add
adc
push
gs
mov
lods
and
push
sub
inc
repz
dec
mov
adc
add
repz
pop
add
lret
lea
insb
fsubrl
push
ja
push
fwait
adc
sub
push
shrb
cmp
pop
outsb
sbb
das
pop
mov
xchg
leave
out
xchg
iret
stc
out
or
fwait
popf
cmp
inc
jns
jmp
pop
test
out
xchg
cli
js
jb
sbb
adc
mull
inc
fucomp
mov
out
adc
mov
fisubrl
or
cmp
arpl
enter
out
mov
adc
cli
arpl
sbb
lea
and
cmp
sub
and
xor
fwait
add
xchg
sub
and
aad
xchg
pushl
lret
jle
mov
andb
pop
movsb
movsl
dec
xor
test
mov
dec
adc
and
xchg
dec
mov
movsb
negl
jmp
push
subb
and
xor
jae
dec
dec
out
dec
cmpsl
ret
bound
insl
icebp
push
mov
roll
movsl
sbb
jg
testl
jbe
les
jmp
or
jmp
negl
movsl
mov
ds
icebp
ja
mov
xor
in
fildll
inc
pop
adc
xchg
push
inc
clc
pusha
mov
shlb
cmp
pop
outsb
stc
inc
ret
out
jle
inc
orl
repnz
icebp
pop
loopne
sbb
sub
adc
jg
mov
test
inc
mov
mov
pop
add
std
mov
add
test
movsb
mov
sub
jge
inc
out
push
adc
dec
in
mov
add
pop
or
sub
jmp
repz
cmp
mov
subb
mull
es
xor
sti
int
mov
xchg
xor
xchg
sub
stos
movsb
hlt
insb
test
leave
pusha
pop
repnz
lahf
jmp
cs
shll
ret
in
mov
push
inc
pop
stc
es
loope
jno
loopne
pusha
ret
push
lods
js
jae
repz
dec
and
test
sub
js
int3
imul
mov
xchg
and
gs
imul
dec
rcrb
dec
dec
in
insl
xchg
cmpsb
test
or
hlt
jmp
cmpsb
jecxz
sbb
pop
push
cmp
jmp
into
push
sbb
out
pusha
je
add
ret
mov
sbb
xor
pop
pop
lret
cmp
push
jo
iret
leave
sti
imul
jl
test
cmpsb
xor
outsb
cmpsl
jo
imul
mov
stos
or
int
pop
xor
into
imul
xchg
cmp
add
mov
sub
jp
jmp
and
sbb
sub
pop
jae
and
out
sbb
and
lret
xchg
lods
mov
dec
in
jo
ret
ja
sarl
sbb
fsubrp
xor
int3
jnp
adc
or
push
stos
mov
xchg
or
or
dec
pushf
nop
dec
lds
sti
jae
sub
push
jo
add
pop
and
lahf
pop
xchg
imul
dec
push
push
push
add
mov
in
loope
push
mov
inc
push
jecxz
mov
es
fdivr
sbb
rclb
add
pop
lcall
pop
xor
scas
dec
push
push
inc
jae
add
dec
arpl
push
xchg
out
out
or
daa
shlb
jmp
cmc
div
push
daa
mov
dec
sub
add
je
loopne
push
mov
inc
jne
test
jne
and
add
xchg
lea
insl
fistpl
add
xlat
fstl
mov
mov
cld
cmp
cmp
dec
jne
in
scas
mov
adc
jno
lret
scas
lret
jmp
adc
fsubs
and
mov
add
lds
mov
pop
addb
pop
lds
in
into
into
nop
or
test
cmp
imul
xchg
inc
sub
aam
jnp
dec
or
push
dec
jl
mov
add
mov
sbb
loopne
iret
cs
mov
out
ficompl
fisubrl
stos
jl
push
xchg
and
jle
iret
xchg
pop
dec
insl
jns
js
insb
fidivrs
or
ljmp
pop
push
rcll
jg
sub
orl
aaa
mov
ljmp
lea
iret
and
out
mov
lcall
les
cmp
sub
inc
jle
stos
mov
xor
stos
scas
popa
insb
mov
and
sbb
lahf
jbe
and
dec
out
mov
mov
out
cmovle
ficoml
mov
rorl
sbb
orb
dec
cli
insl
and
scas
pop
ret
decl
mov
imul
jmp
je
lods
std
jb
push
dec
pop
dec
pop
lods
dec
xor
nop
inc
mov
mov
push
imulb
jle
push
fcom
xchg
fdivl
test
or
jmp
in
adc
add
popa
fisttpl
shlb
or
or
loop
mov
in
jno
inc
fldenv
mov
inc
mov
loop,pt
out
and
leave
and
ja
cmp
test
fisttpl
cltd
jo
sbb
push
cmp
lret
push
pop
adc
mov
or
lods
pop
pop
inc
mov
std
inc
xchg
jg
pusha
mov
sub
dec
pop
mov
das
in
or
aas
sbb
inc
sarb
lock
sub
xchg
test
mov
jp
in
fldt
cli
dec
xchg
push
sub
pop
jnp
inc
das
popf
cmp
sbb
cmc
nop
xor
mov
push
clc
data16
jo
sahf
xchg
jbe
shrb
lods
cmc
in
in
cli
fwait
jb
pop
fmul
sub
aas
pop
sbb
jmp
lcall
ds
xchg
jecxz
xchg
jg
add
into
jge
sbb
mov
into
mov
sbb
popa
loop
stos
sbb
mov
inc
cmp
mov
fdivr
cwtl
push
xor
loope
push
int
sbb
leave
push
inc
mov
je
test
mov
iret
sbb
inc
sub
adc
push
pop
jge
xchg
enter
jae
cmp
or
add
cltd
imul
sbb
pop
push
inc
pop
scas
sbb
jp
aad
outsb
hlt
sbb
or
lods
pushf
outsb
xchg
mov
clc
inc
stc
dec
cmpsl
add
ja
adc
int
add
dec
pusha
repnz
xor
insb
mov
shl
adcb
sub
pop
dec
gs
xchg
sbb
and
mov
jno
xor
mov
fcmovbe
dec
mov
dec
into
push
pushf
cli
mov
jno
fistps
enter
scas
xor
mov
inc
aad
lahf
stc
or
mov
or
es
dec
add
and
rorb
add
mov
mov
cmp
bound
roll
push
dec
sbb
ret
out
pop
sub
dec
lcall
mov
mov
add
addr16
mov
data16
push
daa
cmp
push
xchg
fldl
push
cmp
in
push
std
and
xchg
in
sub
add
sub
mov
adc
pop
mov
daa
test
xchg
aas
lods
in
pusha
popf
out
or
mov
pop
dec
ljmp
inc
mov
shrl
push
popf
jp
jg
sbb
pushf
add
dec
cwtl
fsts
pop
xlat
movsl
mov
add
mov
mov
fistps
repz
pushf
mov
repz
pop
in
adc
testl
push
cld
daa
fs
push
cmp
push
test
dec
imul
pop
lret
cmpl
xor
mov
jg
dec
loopne
add
ss
jge
movq
lret
in
fsubs
loopne
in
cmp
jbe
add
sbb
ret
hlt
mov
pop
pop
sahf
cld
push
dec
ds
mov
cwtl
adcl
shll
and
xor
icebp
mov
aas
lahf
popa
jge
pop
insb
push
cmc
mov
fcoms
jno
movb
jne
divl
sbb
adc
test
orl
mov
das
jb
mov
into
int3
rolb
inc
ret
add
xchg
scas
adc
xlat
push
test
pop
add
sahf
sti
cli
cltd
dec
cwtl
push
int3
pop
gs
rclb
jae
loopne
les
call
push
push
xchg
shlb
iret
scas
mov
loope
push
jne
rcrb
movsb
mov
adc
jp
loope
out
xor
mov
jmp
or
shrb
jno
sbb
push
rclb
addr16
sub
inc
sbb
orb
lcall
cmp
mov
xchg
lea
imul
gs
std
add
mov
or
in
call
xor
push
sbbl
cmp
fdivrl
pop
cmp
lret
pushf
sar
sub
and
sub
inc
test
lock
mov
add
push
das
sbb
inc
lret
sbb
jmp
lret
or
popa
add
sbb
push
cltd
out
jo
repnz
push
leave
inc
js
push
rcll
xchg
cmp
cwtl
hlt
insb
adc
mov
push
inc
roll
dec
addr16
mov
mov
into
add
jle
jbe
sbb
mov
enter
movsl
ljmp
adc
lock
sub
jae
test
std
repz
scas
scas
shrb
sbb
addb
repnz
jl
add
test
push
cmp
adc
pop
mov
push
cs
repz
test
add
mov
mov
adc
dec
stos
loope
and
in
and
data16
nopl
pop
and
in
push
cmp
sbb
push
scas
mov
nop
xor
repz
mov
pop
int
sub
xor
mov
xchg
jae
sqrtps
inc
dec
imul
push
add
stos
xchg
dec
or
push
cltd
sub
std
movsl
push
bound
pop
rorl
mov
ret
xchg
negb
mov
jecxz
cmpsl
push
xorl
sarb
into
lcall
sub
fadds
sbb
dec
mov
js
add
dec
jae
pop
mov
mov
addr16
push
adc
pop
mov
cs
add
and
daa
aas
lcall
scas
mov
sub
mov
scas
movsl
sbb
or
mov
inc
imul
ss
mov
xor
push
int
cltd
adc
push
pushf
loop
int3
out
sub
dec
xor
xor
adc
push
jmp
push
sbb
daa
imul
fcomps
cltd
jnp
rolb
pop
sti
or
adc
ret
out
movsb
cs
mov
mov
iret
xchg
or
dec
mov
test
hlt
push
fs
adc
mov
dec
shll
xlat
inc
sub
or
cmp
ret
je
and
pop
ljmp
fwait
push
sbb
adc
push
in
sti
movsl
and
or
int
sbb
dec
cmpsl
mov
xchg
lods
jl
je
loope
out
clc
enter
scas
push
adc
outsb
aad
jae
or
sub
jl
fisttps
xchg
mov
insl
js
das
movsl
inc
and
daa
mov
imul
cltd
dec
cmp
adc
lods
mov
sbb
movb
in
sbb
or
into
scas
cmp
sub
movsb
loope
popa
mov
add
and
mov
push
and
addr16
sbb
mov
roll
xor
xchg
call
sbbl
mov
jo
push
scas
popf
cmpsb
xor
mov
out
sub
in
xchg
and
pop
ret
mov
cltd
adc
and
lds
adc
bound
push
mov
push
aaa
push
mov
in
sbb
cmp
in
mov
push
ja
sbbl
mov
mov
sub
sub
inc
pusha
adc
and
loop
mov
lahf
das
aad
ja
stos
push
ljmp
pop
xchg
jo
xor
pop
mov
je
push
add
scas
adc
iret
or
movsb
cmp
xor
dec
scas
das
hlt
xlat
jp
outsl
inc
mov
mov
std
and
mov
pop
jnp
imul
in
es
jg
in
sahf
test
pop
stos
push
fnstsw
jmp
roll
data16
xchg
xchg
pop
push
xchg
mov
rcll
mov
sti
repnz
push
sbb
popf
insb
cld
mov
xchg
inc
xchg
mov
push
dec
and
test
cwtl
cmp
push
dec
shrb
mov
jnp
jae
and
push
jp
cmp
shlb
mov
je
pop
jp
or
jmp
sub
pusha
das
or
cld
test
fbld
dec
in
mov
xorl
cmp
inc
mov
mov
arpl
ficoms
ljmp
jo
push
sbb
adc
push
cmp
jmp
and
and
push
adc
xchg
jecxz
or
xor
les
hlt
ljmp
lahf
call
fcoml
sti
pusha
mov
leave
cwtl
or
shlb
add
out
add
mov
push
inc
mov
aam
mov
adc
inc
push
popfw
imull
push
lret
mov
outsl
sbb
sub
lock
add
dec
sbb
out
inc
mov
inc
dec
inc
lea
inc
cmp
jo
rorl
add
and
lods
jbe
rorl
mov
ficompl
pop
aam
data16
out
jnp
adc
mov
clc
shrl
jp
mov
inc
mov
cmpl
sub
xor
or
sbb
bound
leave
xor
mov
inc
jg
jmp
nop
xlat
or
gs
and
ss
sbb
hlt
lea
xlat
jmp
mov
add
mov
mov
mov
mov
out
sarb
cmp
inc
mov
lcall
sub
inc
adc
adcb
mov
mov
sti
test
cmc
mov
pop
pop
inc
clc
xchg
and
sub
test
push
cmp
clc
lret
int3
icebp
loopne
dec
push
lds
or
outsl
xor
inc
int
scas
inc
mov
ds
sbb
xorl
mov
mov
les
xchg
jge
add
aam
lods
into
test
mov
ljmp
mov
cmp
xor
push
arpl
fimull
push
clc
leave
xchg
push
cmp
call
push
push
in
inc
cmc
bound
adc
mov
cmp
je
add
inc
inc
pop
iret
aas
out
sbb
js
aaa
imul
jmp
in
roll
mov
lods
inc
mull
xchg
pop
jne
inc
js
mov
fwait
inc
into
sub
ja
xchg
rcl
sub
mov
dec
movsb
and
fisttpll
xor
insl
out
test
inc
cs
lods
mov
push
das
mov
stos
rorl
notl
repz
cmp
or
xor
add
mov
lds
mov
pop
sub
mov
pop
and
inc
fstpt
aaa
mov
pmullw
mov
xchg
inc
loope,pn
lock
les
or
mov
xchg
inc
dec
into
mov
rorl
push
pop
mov
lods
lods
aad
loope
or
cmp
lahf
ret
shll
mov
mov
dec
mov
outsl
mov
stos
mov
les
pusha
xchg
sbb
or
dec
xchg
cmp
int
scas
jae
sbb
xchg
sahf
push
lods
pusha
adc
push
fsts
jg
insl
cmp
lea
mov
dec
neg
mov
sbb
fadd
in
push
adc
and
dec
stos
or
sub
cs
fwait
int
xor
and
out
or
pop
push
mov
sti
in
mov
push
pop
mov
push
call
mov
into
incb
or
xchg
hlt
sbb
or
xchg
ret
pop
mov
subb
repnz
push
inc
in
loop
dec
and
dec
adcl
or
sub
lret
jae
jl
hlt
pop
add
pop
enter
test
out
fisubs
jecxz
sub
enter
pop
pop
gs
pop
push
inc
out
cmp
xor
in
xor
test
adc
mov
insb
jge
or
das
mov
call
jae
cltd
xchg
xor
stos
stc
mov
pop
mov
and
xor
dec
jns
stos
stos
outsl
out
aam
pop
int3
call
inc
mov
movsb
inc
xlat
cmp
push
bound
daa
ret
jbe
clc
jp
inc
mov
jg
mov
cmpsb
cmp
aam
fistl
rep
imul
mov
out
or
jnp
in
mov
xchg
les
push
lds
lret
mov
mov
decl
add
cmpsl
in
mov
fcoms
sbbl
call
push
loopne
loopne
jg
xchg
pop
fstpt
mov
mov
div
pop
and
insl
mov
push
fs
popa
call
xchg
pop
aam
repz
pop
sbbb
fs
sbb
icebp
mov
xchg
out
lds
scas
test
popf
lock
repnz
repnz
out
daa
push
sub
mov
insb
inc
mov
mov
leave
adc
aas
ds
ljmp
mov
and
and
mov
std
mov
xchg
sahf
dec
popf
xchg
lret
int
lret
bound
fldl
inc
or
popf
shrb
pop
ljmp
jno
outsl
leave
pop
mov
and
sub
add
int
rcrb
and
and
mov
mov
cs
es
dec
outsl
mov
leave
xchg
jb
push
aad
clc
sbb
clc
mov
lock
hlt
mov
fmull
repnz
test
es
fnstcw
ret
push
shr
push
xchg
pop
cwtl
mov
jecxz
or
sbb
test
mov
gs
das
mov
movsl
ja
sub
in
addr16
fistl
jg
cmpsb
mov
jb
xchg
add
cmp
pop
adc
sarb
mov
sbbb
mov
push
rcr
cmp
xchg
adc
mov
std
and
and
outsl
aas
jbe
xor
pop
negb
outsl
cmc
pop
cwtl
pop
push
mov
and
fisubrl
sbb
mov
sub
add
cmpsb
push
push
sub
push
popa
pop
out
es
sbb
mov
push
lds
out
jb
mov
mov
pop
ds
nop
adc
movsb
fldt
xchg
imul
adc
mov
cmp
scas
sbb
push
fwait
cld
push
push
pop
into
mov
lret
je
jb
mov
fnstcw
and
mov
pop
outsb
jp
rcll
push
sub
hlt
orb
lcall
cmpsb
out
sub
mov
pop
or
inc
push
push
stos
mov
mov
lret
ljmp
jle
xchg
pop
inc
in
push
es
call
sbb
cs
int3
jae
icebp
push
push
pop
test
push
push
xchg
jp
test
repz
xor
inc
rcrl
pop
cmp
jne,pn
pop
push
lahf
lea
pop
push
outsb
cmc
mov
lods
sbb
jnp
daa
test
xchg
add
inc
lea
data16
mov
mov
imul
sete
dec
iret
add
inc
push
ss
lret
mov
loope
jmp
inc
pop
mov
or
xor
jecxz
in
mov
in
dec
jnp
adc
and
or
cmpsl
enter
push
adc
nop
nop
shrl
mov
push
es
sub
das
mov
xor
popa
push
cld
xchg
call
cmp
push
inc
xchg
adc
pop
mov
ds
fcoms
jb
or
jbe
mov
mov
repnz
call
cmp
std
adc
xor
clc
loop
js
ret
or
js
xchg
adc
mov
push
pushf
pop
mov
xchg
sub
xchg
cmp
icebp
std
xchg
dec
ret
fdivs
sub
test
outsl
mov
jmp
xor
dec
mov
xlat
out
xchg
pop
xor
mov
sbb
inc
cmp
jg
lods
xchg
scas
fists
pop
pop
ljmp
loop
mov
rcrl
pusha
sub
mov
jb
fnstsw
imul
fstl
loopne
std
or
xor
adc
jo
shll
add
js
movsl
and
and
xchg
aaa
in
mov
adcb
lds
int
jle
inc
je
fs
enter
ret
inc
and
xor
aas
jbe
test
bound
jmp
mov
scas
inc
adc
pop
into
or
lret
mov
les
in
ret
push
rcrl
xchg
iret
mov
sti
adc
pushf
pop
add
mov
inc
mov
lahf
js
in
sub
lods
aas
pop
movsb
ror
popf
stos
xor
lock
add
pop
mov
lretw
ss
vpunpckhqdq
pop
call
jbe
adc
or
add
out
scas
mov
in
mov
pop
add
or
sub
adc
pop
scas
incl
ret
adc
push
jp
fcomp
adc
jnp
jb
add
ja
in
mov
jp
into
mov
cld
mov
pop
sbb
pop
test
push
daa
jecxz
mov
hlt
inc
out
hlt
sub
adc
push
shlb
or
jae
fldenv
test
cli
fs
push
and
jp
and
mov
test
dec
in
pop
test
lret
inc
jp
lret
loop
out
insl
pop
dec
popl
dec
mov
xor
adc
mov
inc
lahf
jle
fldl
or
fucomp
out
adc
stos
jb
es
in
pop
loopne
push
mov
sar
das
jnp
sbb
icebp
data16
cltd
or
push
jp
out
insb
push
fbstp
add
leave
ds
enter
into
faddp
pop
xor
sub
adc
stos
mov
mov
rolb
xchg
jne
roll
rorb
cmp
ficoms
add
fcoml
pop
dec
ja
popw
add
cli
sub
call
or
add
data16
into
cmpsb
sbb
push
popa
je
pop
paddsw
cmpsl
repz
scas
daa
shl
cld
dec
cli
sbb
sbb
lods
and
cmpsl
dec
add
sarb
je
mov
imul
cltd
es
std
sbb
jns
push
push
sub
cmp
add
stc
pop
add
ja
clc
lret
xchg
cli
fsubs
ret
jmp
int
push
popa
into
sub
add
pop
jnp
div
in
test
pop
iret
jns
mov
dec
shll
sub
test
loope
adc
pop
sub
and
and
addb
aad
sub
repz
leave
jns
int3
lods
or
std
ss
cmp
jp
push
repnz
mov
fadds
and
std
pop
pop
orb
xchg
mov
dec
hlt
mov
mov
lahf
std
pop
xchg
or
andl
repz
sahf
jl
mov
cs
adc
ret
pop
mov
sub
fildl
sbb
in
testb
scas
das
gs
sbb
sahf
into
shll
dec
mov
mov
mov
dec
sbb
dec
lret
mov
adc
pop
in
ds
sub
adcl
cmp
loop
sbb
in
aam
mov
pop
bound
cli
enter
dec
cld
cwtl
mov
int
cmpsl
repz
fldcw
js
std
add
jle
fdivl
xor
mov
xor
int3
sub
pusha
icebp
std
int3
scas
sbb
mov
jnp
scas
mov
push
pop
jns
pop
mov
cli
or
add
xchg
sbb
insb
mov
push
adc
or
mov
in
cmp
mov
xlat
and
inc
hlt
pop
jmp
jb
cmp
js
mov
sub
test
sub
push
movsl
cwtl
sub
lret
push
stc
js
mov
push
daa
cmp
inc
or
ret
inc
push
xchg
jl
inc
aas
inc
push
push
sti
lea
cmp
and
inc
dec
loop
pop
mov
sbb
sbb
pop
sbb
sub
mov
and
mov
imul
es
mov
int
popf
push
outsb
cmp
in
add
mov
push
dec
lahf
loope
and
and
sub
test
jle
or
pushf
fsubrl
lock
mov
sub
and
shrl
xchg
imull
popf
out
rcl
sub
fs
mov
jge
mov
arpl
mov
inc
push
in
xchg
add
pushf
pop
pandn
ds
jnp
mov
mov
jno
mov
sbb
pushf
add
mov
cs
dec
sub
mov
jne
rcrl
adc
pop
sbb
rcrb
data16
or
xchg
aaa
ss
push
or
sub
dec
cmp
jbe
stos
aas
rcrb
and
mov
push
or
inc
mov
in
stos
jl
fmuls
and
into
mov
xlat
insb
aam
icebp
mov
movsb
je
int3
movl
sarb
dec
clc
mov
js
push
sub
lock
imul
xchg
mov
add
jg
insl
les
jno
loop
pop
movsb
pop
pop
addr16
inc
jbe
pop
repnz
or
mov
cmp
outsb
test
shrb
or
pusha
js
pop
inc
test
jb
mov
pop
popa
push
jbe
sbb
jg
inc
push
cmc
test
xlat
sub
adc
mov
rorb
pushf
dec
dec
push
call
or
sbb
int
or
call
int
mov
enter
and
or
pop
in
sti
dec
jae
fs
add
push
inc
pop
pop
mov
pop
in
jle
iret
jbe
ljmp
shlb
sbb
lahf
clc
cmp
pushl
sti
mov
adc
jg
pop
sub
dec
inc
js
mov
sub
mov
push
dec
test
loope
lods
loop
pop
inc
jae
jnp
mov
stos
inc
cs
sub
xor
xchg
mov
fcoml
jno
mov
or
push
leave
fistl
dec
sar
icebp
sbb
inc
xchg
pop
xlat
roll
xchg
add
xchg
mov
hlt
dec
aad
movsl
push
sbb
ret
rorb
xor
inc
addr16
je
mov
cmpsl
test
mov
lock
clc
mull
xor
or
mov
in
das
sbb
push
adc
adc
mov
push
add
mov
sub
mov
jns
push
jmp
nop
or
cli
jo
dec
xchg
mov
mov
sbb
fcomps
pop
cmpsb
aaa
adc
rcr
pop
or
fcmovnbe
sbb
or
sbb
push
jbe
xlat
ficoms
jno
push
pop
adc
pusha
adc
loop
std
in
int3
sarb
aas
fmuls
test
lret
and
loopne
and
jge
sub
ss
adc
addr16
mov
int
es
jle
in
ds
dec
or
mov
jb
hlt
or
repnz
add
cwtl
fnstsw
sbb
xor
cltd
pusha
sbb
mov
push
imul
push
shrl
mov
dec
flds
fwait
adc
jb
popw
mov
out
xor
aad
popa
xchg
and
ss
mov
dec
or
xorl
sbb
lret
call
aas
xor
mov
jne
lret
jg
cltd
jecxz
sbb
ja
iret
mov
push
pop
sub
leave
outsl
push
aam
ret
mov
xor
outsl
jle
dec
call
aam
in
sbb
cmp
mov
mov
or
sbb
push
loop
lcall
cmp
mov
call
add
cmp
and
call
in
dec
mov
dec
mov
inc
popf
ja
mov
repz
fmull
mov
sub
sti
add
imul
xor
dec
sub
rclb
stos
xor
ja
mov
outsl
filds
iret
jg
sahf
bound
jb
push
cmp
js
in
push
icebp
shll
sub
test
sti
in
xchg
push
cwtl
scas
int3
and
push
pop
and
mov
cmp
js
adc
xor
lock
xor
js
imulb
lahf
adc
fs
mov
out
cmpsl
shrl
adc
lcall
scas
xchg
jl
xchg
imul
leave
fistps
sub
decb
jecxz
xor
adc
pop
jno
push
mov
jb
sti
shll
sbb
ja
test
insb
jne
lahf
mov
add
mov
mov
push
push
xlat
mov
int
rolb
lret
pop
cs
pop
mov
ja
jne
xlat
mov
and
mov
xchg
or
and
repnz
rclb
xchg
icebp
or
push
dec
jecxz
aaa
imul
dec
mov
shlb
add
sub
mov
nop
pop
or
sbb
push
ss
pop
mov
mov
jb
and
jmp
fildll
lods
fmul
dec
js
push
test
pop
je
mov
xchg
mov
fwait
jnp
aad
jo
cmp
jg
pusha
dec
jnp
mov
mov
adc
inc
fbstp
cs
repnz
out
test
xchg
and
sbb
call
out
insl
mov
adc
adc
push
pusha
jge
and
mov
dec
lds
outsl
push
subl
mov
inc
push
sti
mov
test
movsl
mov
pop
sub
cmp
xor
lds
int3
cmp
dec
lret
es
das
loopne
jmp
sbb
outsb
sbb
icebp
ja
cmp
test
dec
pop
push
add
test
ret
xor
pop
imul
pop
push
pop
pusha
sub
dec
inc
push
pop
es
pop
test
ret
mov
repz
push
and
mov
movsb
sbb
cmpsb
inc
ficoms
sub
ja
sub
pop
xchg
ss
fidivl
inc
add
movsl
push
loopew
xchg
dec
sub
in
pop
xor
jb
idivb
ss
mov
lock
inc
pop
mov
or
ljmp
pop
je
leave
sub
mov
popa
or
xor
and
in
mov
mov
arpl
popa
mov
pop
sbb
stos
mov
call
jecxz
dec
movsbl
push
movsl
push
cmpsb
mov
cmp
jp
cmp
loopne
mov
nop
cmp
or
push
dec
mov
sub
sbb
mov
jo
xchg
inc
mov
lcall
mov
mov
mov
xchg
test
mov
or
cmpsl
mov
test
mov
out
aam
push
adc
dec
pop
jmp
roll
sub
push
push
inc
cltd
inc
push
adc
bound
rorb
sar
test
add
or
in
out
std
call
pop
dec
lret
pop
in
jge
cli
xor
es
inc
mov
fnstsw
inc
in
aam
aas
and
out
lods
pop
sbb
rcl
pop
or
jmp
sahf
scas
jb
sarb
insl
mov
cmp
and
or
fistpl
ja
fwait
mov
inc
inc
cltd
data16
cld
fs
sbb
cmp
pop
adcb
jp
scas
fcoms
lods
adc
pop
cmpsb
xchg
or
xchg
out
jecxz
or
mov
aad
shl
xlat
lods
cmp
dec
cli
ss
push
hlt
iret
jl
fisttpll
inc
lods
out
xor
addr16
add
and
loopne
pop
ja
cmpsb
ljmp
xor
popa
or
xor
cltd
lahf
iret
mov
sbb
push
add
loopne
jg
rcrb
rclb
and
pop
aas
push
mov
or
xor
cmpsb
push
or
scas
rcrb
jecxz
lahf
mov
lock
pop
push
lahf
xor
repz
sbb
rcrl
jp
nop
xchg
inc
ret
dec
pop
insl
pop
xchg
sahf
notl
pop
adcb
test
mov
bound
daa
or
vandnps
mov
lret
inc
test
xchg
push
xlat
fidivl
pop
loop
xorl
mov
pop
fmul
inc
pop
dec
jg
cmp
arpl
test
cmp
in
pop
jne
lds
icebp
cmc
fidivl
std
imul
jp
sbbl
enter
sbb
loop
or
test
dec
pop
stos
mov
push
call
loop
or
dec
jp
repnz
outsl
je
sub
push
popa
fcoms
fdivrl
je
scas
loopne
fidivs
pop
mov
xchg
aas
mov
ret
sbb
cmpsl
push
xor
addl
mov
adcl
imul
mov
cmp
in
mov
pop
inc
jns
or
cmp
enter
shrl
jle
insl
or
mov
jl
sbb
push
push
clc
or
adc
rorl
sbb
call
mov
and
fs
push
mov
lret
jg
mov
mov
pop
outsl
rcl
lret
jno
sbb
loopne
and
lahf
cmp
lret
lods
sub
test
push
cmp
push
pop
aas
fnsave
mov
add
mov
xor
movd
scas
repz
mov
and
pop
inc
xor
mov
ja
inc
sarl
es
popa
pushf
sub
xchg
mov
pop
enter
jbe
push
scas
mov
cltd
pushf
inc
rorl
out
add
ret
jb
dec
dec
add
lcall
arpl
fldt
mov
cld
sbb
mov
jo
pop
cmp
dec
les
test
and
pop
or
fidivl
out
push
dec
scas
insb
push
mov
loop
and
and
in
pop
sub
jle
push
insb
iret
dec
fsubrs
mov
jbe
hlt
pop
add
or
xchg
push
cmc
sbb
scas
ret
push
mov
enter
mov
push
cltd
add
adc
data16
inc
aam
xchg
jno
push
xor
jnp
bound
insb
fwait
sbb
add
mov
cmp
add
jnp
xor
fisttpll
cwtl
insb
mov
cltd
mov
cmpb
ret
add
mov
fcompl
pop
or
mov
mov
mov
dec
sbb
loop
add
add
mov
popf
push
sub
cmpl
shl
inc
je
jmp
mov
call
xor
in
sahf
push
fdivl
xor
mov
jo
aaa
lds
loope
dec
push
mov
inc
imull
xchg
mov
mov
stos
das
cmp
push
jns
lahf
jb
push
js
push
test
push
cltd
mov
andl
data16
fidivrs
iret
and
push
jno
mov
stos
push
pop
xchg
stos
push
outsl
jge
mov
jno
sbb
or
call
jle
push
and
aas
xchg
jbe
pop
les
sub
mov
push
cmpl
das
adc
pop
sbb
dec
pop
mov
cmp
fstps
sub
inc
cmpsl
pop
call
dec
push
push
sbb
add
call
iret
out
dec
pusha
inc
cmp
test
add
or
ss
pop
mov
mov
push
adc
inc
repnz
mov
aam
cwtl
push
out
lods
pushf
mov
ret
jnp
adc
addl
lods
mov
xchg
cmp
shlb
dec
xor
xchg
call
imul
mov
insl
loopne
jge
xorl
push
sbb
je
shll
test
shl
arpl
aad
cmc
movsb
iret
cmpsl
out
lahf
jecxz
mov
shlb
push
dec
pop
sbbb
lret
xor
jp
test
jbe
mov
xchg
push
sub
lcall
xor
outsl
sbb
movsb
shrb
in
mov
and
xchg
hlt
pop
mov
and
nop
imul
jg
jno
dec
push
stos
lea
dec
sbb
xchg
adc
pop
repz
sbb
ja
rorb
lret
in
fcoml
in
push
xorb
jle
and
xchg
jmp
rclb
add
fistl
dec
stos
mov
inc
and
cmp
xchg
sub
or
cmp
fdivl
call
mov
dec
dec
mov
mov
dec
mov
add
pop
dec
iret
xchg
in
addr16
push
fidivrl
lahf
aaa
movsb
call
loop
xchg
add
mov
shlb
mov
lret
jb
jmp
in
jg
jle
inc
jge
lods
mov
stos
fs
xchg
test
sbb
cmp
cmpl
jae
movsb
mov
insb
pop
pop
jb
cmpsb
lcall
out
out
lods
daa
mov
cmp
ja
dec
sbb
imul
cwtl
daa
mov
pop
das
sahf
cli
ljmp
in
popf
cld
cmp
adc
pop
mov
and
and
or
out
stc
xchg
call
mov
fs
loope
lods
out
out
lcall
and
or
sti
cmpsb
lret
jl
imul
dec
iret
pop
adc
mov
jle
jo
pusha
fwait
push
cwtl
std
loope
pop
xchg
fildl
ljmp
filds
popf
xchg
dec
inc
sub
mov
dec
out
into
sarl
rol
cs
sub
icebp
push
mov
xor
cwtl
xchg
shl
hlt
arpl
cmp
mov
bound
fsave
cld
jle
push
sti
rcrb
insb
fsubl
or
or
stos
out
sbb
push
mov
icebp
test
push
aas
and
fnstenv
inc
push
andb
sub
mov
pop
hlt
cmpsl
popa
je
pushf
lcall
push
repz
popf
mov
mov
ret
shlb
enter
movsl
ficoml
out
pop
ficompl
test
std
scas
jmp
pop
cltd
sbb
jae
daa
or
mov
push
fdivr
sarb
mov
and
enter
stos
push
jmp
push
fwait
mov
or
hlt
or
add
or
sbb
pop
add
lods
ret
mov
jecxz
sub
and
pop
xchg
aad
dec
adc
les
insb
popa
mov
adcb
out
pop
js
mov
jecxz
mov
or
sbb
fmull
dec
xlat
fildl
push
cmp
rolb
xor
xor
lods
inc
rcr
mov
fcmovnbe
aaa
outsl
cmp
fcoml
xchg
mov
mov
push
mov
mov
sbb
mul
rcl
cmpsl
not
mov
add
insl
xchg
jae
inc
jnp
addb
loop
inc
shr
pop
adc
lcall
mov
push
mov
notb
pop
pushf
cmp
test
dec
jle
cli
mov
xchg
xchg
and
and
xchg
std
movsb
les
xor
sub
lds
mov
jns
mov
push
les
inc
or
sbb
cmpsb
jle
jb
jns
adc
and
sub
mov
std
in
lret
gs
fisubrl
cmp
or
jg
sti
cmp
xor
mov
xor
ljmp
testl
and
lds
jge
mov
std
stos
xchg
shl
jb
aad
mov
adc
jmp
movb
mov
add
add
in
jp
popa
out
int
addl
scas
popf
cmp
push
mov
mov
hlt
fmul
fidivrs
ret
mov
pusha
add
and
sub
push
xchg
daa
cwtl
pop
push
fidivs
xchg
rcll
push
pop
push
shll
add
dec
sub
push
in
adc
xchg
pop
add
xor
jg
out
out
mov
sub
popf
call
xchg
inc
loopne
repz
lret
dec
popf
sbb
loop
mov
lods
ficoms
push
scas
sbb
notl
cmp
sbb
ret
xchg
repnz
add
nop
cwtl
pop
lea
flds
pop
test
pop
mov
pusha
mov
push
jp
mov
cmp
jnp
call
mov
and
dec
pop
mov
lea
and
cmc
loope
ja
dec
jns
insl
xchg
or
lea
push
fnsetpm(287
int
or
test
pop
stc
pop
movsl
imul
fcompl
xor
in
ja
xchg
cmpsb
pusha
dec
out
leave
fcomp
push
cmp
or
lea
push
addr16
bound
sbb
inc
mov
je
mov
jp
jno
lods
sub
mov
aam
jae
xchg
xchg
inc
add
sbb
push
adc
jle
andb
adc
xchg
icebp
lds
imul
xor
fcmovnu
jge
hlt
fwait
cmpsl
data16
jmp
lahf
push
mov
mov
mov
pop
addr16
adc
xor
je
or
shlb
mov
inc
shrb
imul
out
xor
sar
dec
rol
jg
or
push
push
aaa
ss
inc
or
and
mov
push
sbb
pop
mov
rcrb
cmp
and
adc
pop
mov
das
sbb
notb
stos
insb
push
jmp
jae
jmp
outsl
xchg
lods
insl
sub
pop
or
subl
cmpsl
pop
dec
or
xchg
idivl
mov
fsts
inc
jg
sti
outsl
into
xchg
sub
aam
stos
inc
insl
jnp
xchg
xor
and
dec
mov
imul
cmp
loope
push
enter
imul
mov
xchg
in
test
in
sub
sbb
stos
out
jnp
push
mov
mov
jg
adcb
push
popa
imul
dec
cmp
inc
xor
daa
push
mov
mov
cmp
push
sbb
adc
xchg
mov
xchg
jmp
adc
xchg
push
fmuls
pop
cld
insl
or
fwait
xor
mov
out
or
jle
fwait
dec
aas
cmp
mov
push
gs
xchg
dec
adc
push
stos
xlat
add
outsl
jbe
xchg
scas
aad
pop
xchg
pop
mov
mov
es
cmpsl
popa
in
scas
jecxz
std
enter
push
jmp
xchg
mov
sbb
mov
sbb
jo
pop
xchg
adc
ja
push
std
sub
jmp
stc
sbb
cwtl
pushf
push
sbb
fdivl
and
xor
pop
adc
mov
lea
test
imul
addb
inc
sbb
jne
pop
pusha
or
addb
adc
popa
cmp
jle
shl
xor
inc
aas
shr
add
inc
xchg
jg
js
mov
and
rorl
sbb
pop
pop
inc
dec
jno
dec
mov
push
sti
fldenv
push
xor
sub
lret
sahf
pop
dec
lahf
dec
enter
outsl
stos
jp
test
nop
add
mov
dec
test
pop
xor
xchg
rclb
out
pushf
sbb
adc
enter
insb
outsb
xchg
mov
mov
cmpsb
adc
add
ds
mov
fnsave
push
lret
or
sarb
or
dec
scas
in
sub
sahf
ljmp
jl
fmuls
dec
scas
cmpsl
pop
clc
xchg
sbb
xor
lcall
call
outsb
pop
test
xchg
ja
fwait
jae
jmp
stos
or
sbb
and
cmp
pushf
push
cli
xor
popa
sub
mov
ljmp
inc
pop
push
xchg
pop
push
outsb
push
rol
cmp
jb
mov
pop
orl
ret
or
xchg
cmpsl
test
rclb
leave
inc
dec
mov
mov
loopne
pop
movsb
sub
loopne
data16
mov
mov
cmp
fs
mov
andl
ljmp
in
in
je
hlt
adc
adc
mov
xor
push
xor
lods
xchg
lds
sub
push
les
sub
sub
cs
int3
enter
orl
jo
adc
inc
outsb
cld
imul
mov
xor
loope
iret
sub
sub
fiaddl
js
xchg
push
je
inc
dec
orb
insb
repnz
mov
sysret
dec
sbb
mov
hlt
ljmp
out
sub
jne
or
adc
outsb
cmc
mov
mov
sahf
subb
incl
mov
insl
lcall
cld
shr
scas
std
pop
xor
xchg
cmp
xchg
clc
or
adc
add
pushf
or
imul
lds
repnz
xor
imul
ja
add
mov
xlat
push
dec
scas
xor
push
aaa
sub
mov
fiaddl
cmp
comiss
pop
adc
stos
cmp
add
adc
xor
test
es
loopne
cmp
test
mov
in
inc
shl
cltd
test
lret
gs
sub
inc
das
ret
les
xlat
fst
xchg
cltd
loop
adc
mov
mov
inc
push
les
xor
repnz
scas
fdivs
shrb
xor
test
xchg
call
mov
test
popf
pop
cbtw
xchg
arpl
add
fwait
xchg
mov
jecxz
mov
pop
and
test
cmc
mov
add
jge
inc
cmp
ret
cmp
sbb
fucom
mov
xorl
ljmp
sub
push
sub
cmc
out
xlat
leave
enter
scas
or
call
das
mov
jecxz
jnp
icebp
dec
in
int3
and
mov
mov
fidivrs
xor
and
inc
rcll
fcmovbe
inc
mov
int3
invd
jp
sahf
test
aas
xchg
adc
and
jg
push
aad
call
jmp
xchg
push
add
mov
ret
loop
insl
jo
push
insl
test
xor
sub
sbb
xor
push
push
das
fadds
xchg
xchg
ds
les
dec
popa
imul
dec
popf
cmp
lret
inc
test
mov
lds
ret
dec
lcall
xchg
ret
mov
xchg
lret
xlat
or
mov
inc
mov
sub
repz
xchg
sub
mov
mov
adc
jecxz
out
mov
jns
inc
std
in
insb
movsl
in
mov
mov
sub
cli
ret
dec
std
mov
mov
stc
push
popa
int3
dec
sub
or
xor
fs
call
clc
dec
scas
repnz
pop
cmp
cmp
filds
test
pop
jns
loope
test
testb
js
pop
jge
push
cwtl
in
jae
add
sbb
out
mov
pop
xor
xchg
sahf
shl
dec
xor
lods
push
pop
test
mov
and
mov
xor
int3
stos
cld
push
outsb
pop
int3
in
dec
xor
inc
push
lret
push
and
stc
dec
out
lock
call
sub
mov
iret
pop
jp
mov
inc
mov
or
adc
aam
hlt
sahf
xchg
in
push
adcb
inc
enter
aad
and
pop
enter
aaa
cmp
or
test
jecxz
xchg
pop
loopne
fsubrl
loop
stos
icebp
repnz
mov
adc
aas
adc
loope
leave
jne
or
repz
jle
fistpll
push
dec
xchg
jl
dec
fwait
mov
cmp
int
rcrl
gs
xchg
push
loopne
clc
dec
adc
fldenv
test
xchg
dec
mov
xchg
sub
mov
add
mov
xchg
xor
fcompl
idivl
dec
add
xchg
xor
out
aam
jno
cs
dec
jge
pop
mov
adcl
sub
pushf
std
mov
sahf
fwait
in
addr16
jne
repz
in
xor
inc
jmp
test
xor
icebp
imul
lods
mov
je
das
jae
jnp
movsb
insb
bound
xor
cmp
mov
dec
mov
js
xor
add
add
inc
jmp
out
fadds
sbb
int3
jno
add
sub
pop
inc
test
sti
inc
xchg
rcrl
stos
stos
sbb
std
cmc
xchg
push
mov
xor
and
sbb
mov
mov
sub
push
add
jge
pop
pop
sbb
push
or
xor
loopne
imul
sbb
push
and
adc
push
sbb
push
popf
mov
cmp
mov
mov
mov
add
hlt
lahf
ds
pop
inc
adc
cmpb
daa
pop
cs
ds
ss
cmc
jg
cmpsl
int
leave
mov
inc
daa
or
adc
push
test
dec
jae
mov
sub
xchg
inc
stos
mov
xchg
adc
mov
lret
inc
mov
xor
in
pop
hlt
andl
mov
ret
or
mov
push
sbb
mov
jno
sbb
repnz
ds
stos
and
loop
out
fwait
and
out
sbb
push
fs
push
mull
ret
rcrb
or
xor
fmull
push
fstpt
notl
in
adc
cmp
push
pop
nop
test
in
std
sbb
pop
fdivs
xchg
adc
cmp
jmp
test
dec
stos
pop
leave
jo
iret
push
lret
push
jmp
or
pop
imul
mov
push
xor
adc
pop
stos
jno
xchg
cli
pop
mov
aaa
pop
fbstp
jle
cld
push
hlt
std
les
mov
mov
cmp
jge
rolb
adc
push
ss
int
movsl
inc
out
xorb
insl
sub
ret
mov
and
cmpsl
pushf
pop
xor
test
aam
mov
clc
popf
xchg
adc
or
test
lret
stc
int
adc
nop
add
pop
adc
mov
sar
sbb
pop
test
ljmp
jno
loop
mov
xchg
or
sub
inc
sbb
popa
aaa
push
in
lret
jecxz
xchg
push
leave
stos
sbb
or
pop
jbe
pop
lahf
lcall
pop
push
mov
cmp
clc
jb
lds
push
scas
mov
and
mov
sub
pop
outsb
scas
add
pop
cmc
bound
or
lahf
sti
imul
shr
xchg
movsl
scas
pop
inc
jo
sub
jmp
lods
cmpsb
fiaddl
mov
push
pop
loop
scas
push
mov
stos
push
push
push
mov
jnp
and
or
xchg
in
cmp
push
mov
ret
lods
pop
stos
popf
xor
sub
cmp
pop
pop
icebp
iret
add
imul
roll
sub
cmp
cwtl
imul
mov
or
xor
adc
xchg
mov
pop
mov
in
cmp
subl
inc
stos
or
sbb
popl
jge
jae
pop
add
ja
imul
jbe
imul
mov
insb
fimull
leave
xor
mov
jle
ljmp
ja
xchg
aam
fldcw
xor
ja
outsl
out
xchg
out
loopne
push
jle
dec
divb
sub
push
pop
adc
test
push
and
pop
jecxz
xorb
or
fadds
inc
dec
jle
out
mov
popa
test
jp
sub
jno
inc
imul
lds
or
adc
inc
jb
imul
scas
push
sub
test
lahf
sbb
arpl
pop
fldt
shll
jno
adc
jmp
xor
sbb
insl
push
sbb
scas
sub
or
sub
xor
add
pop
mov
icebp
mov
xchg
ja
pop
add
adc
cmp
nop
xchg
ficompl
jne
aaa
mov
push
scas
pop
aad
sbb
mov
xchg
icebp
icebp
xchg
inc
insl
lahf
mov
mov
in
and
push
push
pop
imul
mov
movsb
out
cmp
popl
mov
and
cld
test
lahf
mov
out
cmpsb
cmc
mov
jne
popf
and
lcall
js
mov
mov
rcll
cmp
pusha
mov
js,pt
jnp
out
loope
jns
jle
mov
jp
roll
pop
or
pop
sahf
xor
sbb
dec
cs
cwtl
inc
fcoml
or
cs
flds
push
sbb
jae
movsl
clc
jge
xchg
sub
aas
xchg
mov
push
mov
fsubl
fstpt
mov
stos
cs
add
pop
clc
aaa
or
and
mov
imul
xlat
outsb
sub
filds
mov
inc
sbb
mov
push
sbb
jmp
mov
sbb
aas
fs
std
in
jl
mov
adc
int3
jnp
pop
aad
jae
fdiv
push
xorl
decl
pusha
insl
int
jmp
push
std
dec
lds
sahf
dec
xor
cmp
sti
dec
xor
mov
flds
xlat
mov
clc
inc
cmp
lods
push
jnp
fldenv
inc
sbb
mov
dec
fwait
loope
push
and
int
test
outsl
dec
push
jnp
fldl
sbb
push
loopne
pusha
dec
test
outsb
lea
cmp
aad
or
and
add
fisubl
fdivs
cmpsb
fld1
leave
cmp
adc
and
mov
jns
lcall
lcall
inc
sub
addb
sti
fdivr
loop
push
mov
aam
and
jns
pop
call
inc
add
mov
movsb
test
fs
lret
dec
incl
imul
js
lret
mov
lcall
ror
fdivrl
aad
outsb
mov
cmp
xor
aas
imul
sub
cmp
mov
or
add
rcr
icebp
push
fisubs
mov
out
cli
imul
mov
sub
mov
add
xchg
std
xchg
and
inc
mov
ss
test
pushf
adc
mov
out
xchg
sbb
ret
mov
inc
sarl
jle
popf
popl
enter
jp
sbb
incl
arpl
adc
mov
cmpsb
pop
jl
test
imul
jecxz
aas
pop
xchg
xor
mov
repnz
mov
add
adc
push
lods
pop
fistps
adc
fcoms
fsubrs
jnp
in
insl
or
push
jge
push
mov
push
dec
cmp
push
popf
xor
xchg
leave
lahf
nop
in
roll
orb
xchg
inc
xchg
scas
into
jbe
sub
lods
mov
js
sahf
xchg
or
add
jns
mov
jg
add
leave
pop
fistpl
dec
xor
out
adc
call
xchg
sbb
lock
ss
pop
popf
js
push
jb
rep
lret
fisttpl
inc
out
addr16
mov
cmpl
and
repz
es
adc
call
mov
cmp
pop
outsl
stc
push
jnp
scas
push
push
jno
inc
or
xchg
and
addr16
stc
outsb
jne
insl
pop
adc
mov
adc
mov
test
icebp
es
dec
add
test
lret
pushf
add
xor
mov
push
pop
mov
mov
xchg
dec
lock
xor
mov
test
mov
jecxz
ja
mov
test
pop
lods
ret
jmp
and
aaa
repnz
jecxz
popa
add
mov
lret
rolb
mov
int
fcmovu
inc
into
and
dec
add
xchg
mov
pop
mov
sbb
sarb
lea
push
push
or
call
xchg
shlb
in
mov
mov
fwait
mov
mov
ja
stos
and
xchg
imul
insb
mov
lret
push
push
push
xchg
xchg
mov
loope
mov
popl
subl
lret
jae
mov
xor
aas
push
push
dec
aam
cmpsb
and
imul
sarb
xchg
fistpl
xchg
dec
adc
lea
cmp
int
inc
scas
sub
mov
add
or
pop
mov
je
call
leave
pop
jmp
adc
inc
dec
mov
mov
movsb
adc
outsl
push
mov
push
jne
xor
negb
enter
cmc
ds
loop
pop
jle
mov
sub
fildll
xchg
int
push
push
xchg
lea
jmp
mov
data16
pop
inc
fimull
js
adc
pop
idivb
inc
out
mov
mov
adc
insb
arpl
push
dec
std
es
stc
das
add
mov
mov
pop
inc
test
addr16
out
test
adc
push
ja
insb
cmpsl
mov
ja
pop
orb
std
cltd
sbb
fidivrs
ja
jle
jno
imul
or
popa
add
inc
xor
je
lds
add
das
and
stc
push
jge
pop
sub
or
xchg
inc
aaa
ljmp
pop
mov
jno
negb
inc
cs
fbld
enter
ss
test
insb
loope
js
mov
sub
xchg
cmc
inc
test
movsb
jg
fisttps
std
ror
sbb
inc
mov
push
clc
in
push
cmp
add
inc
dec
jle
xchg
lock
insb
jo
fcmovnu
push
dec
scas
imul
into
push
jg
jnp
test
clc
out
and
and
pop
in
out
pop
mov
test
push
adc
xor
xchg
inc
out
aaa
in
inc
sub
inc
data16
arpl
and
out
xchg
mov
ja
ds
loopne
cmpsl
dec
push
cmp
lret
add
push
ja
jmp
loopne
in
clc
dec
es
sub
aam
ljmp
hlt
dec
jg
stc
ljmp
dec
cmp
cmp
or
or
sbb
adc
push
mov
loop
dec
sbb
dec
pop
fwait
inc
mov
inc
push
mov
push
js
xlat
rcrb
ss
es
pop
test
cmp
sbb
inc
cmp
out
dec
insb
jae
daa
and
out
aaa
stos
imul
popa
adc
mov
test
cld
test
movl
add
nop
mov
rorb
aam
out
call
test
and
repnz
das
sbb
dec
out
das
or
mov
into
or
inc
neg
aas
sbb
pop
ret
mov
push
cmp
ljmp
cmp
inc
sbb
ret
sbb
fcomp
cwtl
cmpsb
insb
ret
imul
movsb
mov
aas
add
sti
lea
sarb
es
stos
mov
unpckhps
push
sahf
or
dec
daa
cmp
cs
bnd
insl
mov
shll
movsb
inc
jne
mov
ss
imul
sbb
add
push
out
add
add
pop
arpl
mov
aaa
out
mov
inc
mul
scas
aad
in
mov
scas
cmp
vpaddsb
xlat
lea
xor
xchg
or
or
or
inc
rolb
mov
das
inc
xlat
aam
int3
mov
ss
test
cli
gs
push
ret
mov
or
inc
or
je
and
adc
rol
push
lret
and
jbe
push
movsl
mov
jge
cmp
aas
xchg
sub
dec
mov
out
lea
push
addr16
test
mov
sub
jg
stc
pop
xchg
and
sbb
cmp
xor
clc
push
sub
mov
or
push
call
xor
ror
add
pop
adc
outsb
outsl
sbb
inc
clc
mov
lret
aad
jp
mov
xor
xchg
xor
fcomps
pop
or
outsl
repz
push
push
mov
es
clc
repnz
jne
fcoml
div
out
pop
dec
imul
lcall
push
lods
cmc
mov
aaa
mov
int3
movsb
inc
inc
mov
ret
push
in
sub
or
mov
sti
pushf
insl
sub
add
loopne
loop
sbb
xchg
jl
push
cltd
xchg
or
cmp
lcall
movsb
das
mov
movsl
shlb
sbb
movsl
push
aad
xchg
rclb
push
jmp
inc
and
jb
pop
cwtl
cmpsb
or
sub
inc
ljmp
into
sub
dec
jp
mov
shlb
andb
xchg
stc
jns
mov
inc
xchg
decb
clc
pop
aaa
icebp
adc
rol
or
xor
je
jmp
add
mov
test
or
test
arpl
adcb
inc
ficomps
jle
rol
data16
gs
jl
xor
and
int
pop
sbb
lret
sbb
xchg
jmp
out
or
push
sarl
jg
cmpsb
mov
gs
pushf
daa
imul
nop
popf
xchg
fdivr
push
mov
sub
dec
imul
mov
cltd
push
dec
jae
test
test
jl
imul
pop
bound
dec
inc
lods
mov
xchg
out
pop
sbb
leave
les
cmpl
dec
lods
xchg
push
add
sub
sbb
call
jg
mov
ret
jb
mov
add
xchg
push
lock
adcb
push
mov
dec
aas
movsl
push
or
orb
lds
pop
out
out
mov
xchg
add
dec
fisttpl
mov
imul
inc
pop
rcrb
mov
fucom
das
jae
or
jecxz
subb
adc
sbb
mov
daa
cmp
inc
sub
lcall
sbb
sbb
stos
mov
dec
sti
ds
lock
add
rol
leave
or
adc
sbb
add
roll
int
xchg
mov
test
popa
mov
std
aam
call
or
mov
nop
cmp
jge
mov
fcmovnbe
dec
sub
lods
test
movsb
cld
insb
pop
iret
out
mov
inc
mov
mov
inc
dec
inc
mov
inc
jge
stc
push
add
mov
lret
mov
pop
and
ret
sbb
adcl
out
sub
fldenv
jns
pop
lret
test
mov
andl
stos
dec
dec
pop
cmc
jge
xchg
cmpsb
jecxz
xchg
cmp
mov
cmp
ret
idivb
mov
push
call
dec
sub
cmp
mov
lret
sahf
jae
std
ds
mov
mov
push
aas
xchg
loope
xor
inc
subl
dec
push
add
aas
dec
mov
jecxz
pop
loopne
push
mov
fldenv
sbb
adc
in
sti
jnp
add
push
push
or
in
fdivrs
mov
loop
mov
lcall
pusha
or
out
sbb
and
xchg
insb
pop
mov
sahf
add
call
movsb
hlt
shlb
cmp
inc
cmp
jb
ljmp
loop
js
stc
mov
sbb
aad
jno
imul
fsubrs
mov
dec
out
mov
jp
cli
das
inc
insb
cltd
rcl
inc
js
aas
ja
push
sub
fnsave
xlat
push
jge
adcl
test
insb
loop
cli
xchg
push
dec
push
pop
lds
and
add
lock
jmp
in
fidivrs
add
dec
outsl
cmp
cmp
or
sub
push
movsb
lock
lahf
add
xor
es
stc
add
iret
test
jns
out
jge
pusha
jl
in
jae
xor
jmp
xchg
popf
xlat
in
and
inc
adc
jns
jmp
inc
xchg
scas
in
rclb
movsl
mov
stos
cli
cwtl
jne
lret
xchg
push
mov
xchg
sbb
and
pop
push
mov
iret
scas
mov
arpl
dec
sub
mov
sbb
rorl
mov
scas
movsl
pop
push
sbb
add
scas
jno
into
imul
pop
cwtl
jge
in
add
leave
or
addb
sub
ss
and
fnstsw
scas
ret
daa
cs
fnstcw
lock
cs
cld
mov
inc
or
sub
fisttps
cmp
xor
mov
pushaw
xor
mov
and
xchg
iret
repz
inc
lcall
ds
pop
outsb
out
lods
xchg
popa
fimull
or
cmpsl
mov
or
sbb
mov
xchg
and
push
lahf
pop
xor
inc
sub
mov
call
pop
insl
cmp
ds
xchg
fwait
sub
cmpsb
add
xor
and
in
ret
sbb
inc
fistps
stos
jnp
sub
and
lods
cmp
dec
mov
push
lret
out
clc
aas
testl
mov
in
xor
mov
cwtl
outsl
into
dec
cmc
sbb
and
mov
jno
mov
push
xor
cmpsb
and
jecxz
es
xor
pop
mov
rolb
mov
mov
mov
movsb
jo
mov
lahf
aad
fs
dec
jle
pushf
stc
int3
and
fwait
in
clc
movsl
lock
xchg
add
jo
xor
xor
dec
mov
push
mov
or
sti
cmp
push
inc
sub
mov
lahf
aam
shlb
insb
mov
and
je
and
jne
test
mov
cmp
sahf
js
cmp
in
aad
or
xchg
jp
dec
lahf
sub
in
js
adc
imul
rcll
jle
xor
xchg
cli
mov
sbb
sub
gs
inc
add
inc
xchg
bound
test
cmc
or
and
dec
jecxz
in
lcall
or
push
push
aam
rcrb
push
push
or
in
sbbl
out
stos
mov
adc
sbb
iret
insb
pop
pop
jb
fcompl
mov
ja
and
xchg
pop
xchg
in
shlb
ds
or
cmp
cs
and
scas
stos
sbb
mov
xchg
xor
insl
arpl
push
jle
dec
mov
pop
or
cmp
pop
sar
outsb
lods
out
sbbl
xor
push
out
fcomi
pop
mov
outsb
dec
shr
mov
or
inc
movsl
sub
insb
add
mov
add
adc
sub
xorl
js
jns
arpl
mov
fsubp
push
push
pop
leave
pop
icebp
cmpsl
mov
push
ja
cmp
ljmp
mov
movsl
or
cmp
xchg
sub
cmpsb
imul
sahf
ret
aas
sub
mov
test
out
push
pop
fisttps
and
inc
imul
movsl
inc
xor
mov
lods
ljmp
mov
insl
outsl
gs
mull
dec
push
mov
pop
lods
and
cltd
cs
ljmp
pop
pop
test
mov
push
bnd
gs
shrb
mov
nop
inc
push
push
push
sbb
negl
dec
dec
shlb
mov
mov
outsb
xchg
xor
push
xor
insl
and
or
sub
jge
mov
fdivr
outsl
jnp
pop
sub
mov
xor
scas
andb
jns
mov
cmp
scas
sbb
gs
mov
inc
cltd
lods
jmp
mov
nop
shlb
fmul
cli
xchg
adc
lods
sbb
jnp
inc
adc
in
clc
mov
xchg
jae
and
jge
shll
sbb
fdivrs
outsl
int3
pop
mov
repnz
jl
icebp
repnz
push
add
shll
sarb
cmp
mov
push
sub
outsl
movsl
cmp
sbb
push
test
and
xor
dec
mov
sbb
mov
addr16
inc
imul
leave
dec
sarl
insb
adc
and
add
xchg
mov
xlat
and
add
icebp
popa
jnp
push
scas
test
or
pop
test
or
in
inc
dec
in
mov
pusha
push
mov
outsl
dec
jl
jae
pop
dec
shlb
mov
xorb
xlat
adc
fdivl
push
fs
ret
mov
int
pop
mov
push
sub
mov
aas
scas
rcrl
dec
inc
arpl
sub
mov
fstps
jns
add
adc
arpl
sbb
push
adc
clc
adc
sahf
sbb
std
fwait
or
int
mov
lret
or
lea
mov
mov
fdivl
mov
lahf
mov
ss
jp
mov
xchg
out
xor
lcall
push
je
adc
fistl
push
iret
jb
test
aaa
in
sahf
push
mov
cltd
imul
addr16
xor
je
iret
xchg
or
jnp
out
call
sahf
jns
add
push
adc
imul
and
mov
ret
pushf
bound
adc
jbe
into
mov
cs
jge
adc
out
in
testl
decb
fcoms
imul
sbb
push
loope
addb
mov
or
xchg
ret
data16
repnz
mov
loope
cli
in
add
arpl
mov
lahf
cwtl
mov
js
fisubrl
pop
test
inc
in
ss
fstp
cmpsb
pusha
adc
sub
js
mov
sbb
xor
xorl
xchg
adc
sub
mov
fwait
add
cmp
pusha
sub
jae
inc
sbb
xchg
je
ret
xchg
pop
lds
clc
sbb
cmc
into
push
cs
movsl
or
jae
loop
mov
add
cmp
pop
shl
add
pop
pop
pop
jle
and
call
aaa
rcrl
inc
xchg
hlt
rcrl
stos
inc
lea
inc
and
or
lahf
adc
and
cmp
or
mov
xchg
add
outsb
dec
rcrb
fldl
mov
xor
fdiv
push
pop
jmp
lret
pop
into
or
loope
pop
pcmpeqw
xchg
and
lea
pop
sub
jge
ds
mov
push
cmp
imul
adc
gs
fisttpll
mov
out
sub
adc
lods
test
enter
inc
adc
jp
scas
arpl
jecxz
loopne
and
mov
in
pop
adc
and
imul
jbe
bound
adc
jle
xor
push
xchg
cmp
mov
cltd
into
es
ret
mov
mov
lret
xor
lods
and
push
mov
mov
jo
jne
ds
mov
roll
idivl
adc
sub
sub
ja
push
push
icebp
inc
in
aam
std
add
sub
mov
orl
test
ja
jge
adc
push
xchg
not
pop
out
sub
sti
adc
xlat
cmp
cmp
mov
cmc
les
xor
and
adc
cli
jns
push
icebp
sbb
popf
iret
ja
lret
out
mov
fwait
rcll
jp
leave
pop
daa
inc
jo
in
mov
aam
pop
push
xchg
aam
jno
mov
mov
out
addr16
sub
fstpt
and
xor
icebp
lea
push
ja
pop
jle
test
mov
mov
clc
pushf
xchg
add
or
out
jb
or
fdivrs
aad
movsl
lret
cmp
notb
mov
in
pop
dec
jo
pop
xlat
sub
bound
ds
notb
sbb
mov
or
mov
ret
sub
push
push
dec
sbb
fsts
jbe
xchg
ffreep
add
adc
cmp
outsl
das
mov
ret
repz
lods
vmovntps
or
sub
xchg
lcall
out
ss
das
fs
enter
pusha
scas
inc
sbb
inc
mov
push
and
rorb
push
jae
ss
adc
pop
dec
lcall
xchg
and
rclb
ds
dec
xchg
sbb
jo
pop
mov
inc
fadd
sub
jo
repnz
pop
shlb
push
cld
fcmovne
mov
imul
cmp
and
mov
xor
mov
push
pop
pop
rcrb
jbe
cbtw
dec
jge
sbb
xor
daa
bound
jno
mov
xchg
fistpll
shrb
je
jp
lea
cld
notl
adc
cmp
repz
popf
jns
jmp
xchg
emms
mov
in
rcrb
testl
pop
push
int
mov
mov
daa
loop
inc
fs
lods
sbb
mov
loopne
push
movsl
iret
and
pop
insl
xlat
push
jg
sbb
mov
bnd
xchg
pop
stos
fdivl
dec
fcoml
fcoms
dec
loop
imul
or
add
negl
inc
jl
jo
inc
leave
adc
pop
in
movsl
out
fimull
inc
js
or
cmp
cmc
ficoms
cs
sti
cmp
sub
mov
sub
cmp
push
ss
inc
mov
rclb
pop
xor
aad
jns
comiss
jle
addl
add
or
push
add
dec
inc
inc
mov
cld
movlps
daa
and
repz
int
stos
mov
push
leave
les
mov
cld
cs
xchg
call
mov
sub
adc
int
inc
pushf
sub
fisttpl
les
cs
nop
xchg
pop
gs
movsb
adc
jae
and
stc
mov
fisubl
bound
adc
xchg
scas
cltd
and
dec
hlt
pop
clc
sbb
jmp
les
sub
clc
xchg
inc
inc
lcall
mov
mov
lret
mov
mov
xor
ss
scas
xor
dec
repz
lcall
imul
cld
jo
push
xchg
mov
adc
sub
enter
jg
es
insl
adc
jge
popf
sub
lea
ljmp
orl
lds
int
mov
lret
jp
int
mov
pusha
icebp
jns
adc
lods
sbb
mov
xchg
lds
je
or
cmpsl
sar
jl
movsb
fsubrl
addb
subb
jno
push
or
rcrl
adc
mov
jp
movsl
lea
sbb
lock
lahf
or
sbbl
shrb
arpl
lret
xor
sub
mov
cmpsb
jb
test
rclb
popa
cmpsl
push
pushf
icebp
ljmp
push
daa
cmp
addb
test
inc
adc
lahf
clc
and
push
data16
pop
repz
and
mov
sub
fisttpl
daa
out
jno
rclb
filds
inc
in
xchg
and
jmp
lock
pop
dec
xchg
xchg
imul
outsb
jne
cmp
sarl
jns
adc
lea
lcall
add
mov
in
cmpsl
and
sbb
xor
mov
sbb
jecxz
test
dec
xlat
stos
stos
inc
leave
mov
adc
cwtl
add
sub
in
shll
and
adc
les
pop
cwtl
cmpsl
insb
jae
add
cmp
mov
fsubrs
adc
add
fs
dec
lock
cmp
outsb
fwait
mov
jg
or
jno
mov
adc
cmpsl
sbb
aad
pop
orb
lret
ja
loope
jo
lods
test
adc
and
addr16
shl
fidivl
sub
sbb
cmp
xor
repnz
mov
pop
cmp
cmc
mov
outsl
add
jmp
lcall
imul
fnsave
mov
jnp
gs
pop
daa
test
dec
sbbl
dec
je
inc
cmp
xor
cmp
sub
mov
cmp
in
adc
push
shll
ja
out
jmp
rclb
jb
pushf
ss
mov
add
mov
jp
push
fstpl
add
push
push
xchg
sahf
adc
inc
jo
out
cmp
pusha
sub
xor
mov
leave
jns
pop
rclb
fwait
sbb
pop
loope
mov
stos
adc
xlat
push
popa
outsb
clc
mov
adc
xchg
cmp
mov
xchg
call
sbb
and
mov
mov
lods
xchg
xor
jp
loopne
sbb
cwtl
sar
lea
mov
cmp
or
out
push
btc
mov
inc
sbb
movsl
push
repz
pop
xor
ljmp
aaa
andl
in
stos
or
pushl
stos
loope
cmpsl
imul
cltd
mov
test
inc
andl
dec
pop
orb
pusha
adc
mov
imul
js
loop
popa
loope
repnz
stos
mov
pop
jg
fs
leave
push
jnp
and
enter
cmp
cmpsb
dec
ret
lea
mov
ljmp
nop
mov
xchg
call
or
jae
aas
sub
in
jle
inc
mov
and
adcl
stc
cmc
inc
xchg
add
leave
std
and
inc
mov
cmp
out
decb
sbb
jg
push
popf
fwait
mov
mov
push
jge
mov
inc
adc
icebp
rcrb
jmp
stos
icebp
jg
es
data16
test
repz
inc
lods
cmc
aaa
pusha
pop
loopne
std
or
arpl
xor
inc
mov
sub
cmp
jecxz
in
fmulp
ret
arpl
inc
sbb
enter
jle
inc
push
sub
fdivr
cmp
add
add
mov
sub
sub
add
ret
fs
je
pushf
icebp
xlat
rcll
aad
jno
mov
ss
add
jb
nop
clc
arpl
xor
pop
jle
out
aam
xor
pop
int3
inc
cltd
xchg
jns
cmc
sub
push
xor
or
cmp
dec
pusha
push
push
jne
push
repnz
pop
or
insb
jp
lods
cmc
xor
shlb
cltd
pop
mov
ds
or
mov
xchg
add
lcall
lods
fcmovnb
mov
xchg
out
pop
mov
add
ljmp
and
xchg
jl
jno
insb
jmp
jmp
mov
jno
adc
pop
outsb
mov
sbb
movsb
mov
xchg
push
cld
or
pop
xorb
test
rcr
dec
inc
iret
mov
fcom
call
sub
and
ror
add
pop
out
test
xor
ss
stos
hlt
or
stc
ficompl
xor
rorb
pusha
add
sub
jle
pop
xor
cmp
sub
in
mov
adc
xor
jge
add
push
or
cmp
std
sub
icebp
nop
jno
sub
adcb
mov
mov
add
cmpsb
pop
aam
dec
stos
jno
adc
sub
nop
jge
add
outsl
ja
roll
dec
push
push
jg
fsubrl
call
add
jne
add
dec
add
fmuls
lahf
addl
mov
push
out
cld
and
test
ret
ficoms
and
pop
cs
or
mov
cwtl
sahf
or
jge
and
jg
lods
ret
aas
mov
insl
pusha
dec
xorb
mov
test
hlt
or
jo
mov
push
into
jnp
cmp
xchg
fsubrl
aas
loope
cwtl
dec
xchg
push
rorb
std
pop
rolb
dec
xchg
int3
lret
inc
mov
xchg
and
jns
mov
aad
inc
fimuls
test
pop
imul
in
jbe
punpckhbw
sbb
andb
out
rcll
pop
adc
ljmp
fs
jnp
mov
jno,pn
sbb
dec
insb
ja
pop
jns
cmpsb
dec
daa
daa
mov
jns
xor
cmp
xchg
ljmp
lahf
pop
xor
es
jg
test
imul
inc
rorb
push
mov
dec
les
movsl
pop
push
lods
lds
mov
int
and
stos
imul
mov
fucomi
loop
inc
pop
into
inc
push
push
add
inc
jmp
dec
shrl
or
mov
dec
xor
int
sub
pop
enter
movsl
sarl
adc
pop
pop
lds
xor
ret
aaa
es
mov
lret
sbb
sbb
adcl
out
mov
dec
mov
jle
enter
enter
xor
and
or
out
rcrl
jecxz
test
dec
jg
mov
sbb
xor
in
cmpsl
je
xor
je
popf
and
push
rorb
lods
fistpl
pusha
lret
cmpsl
sbb
or
inc
push
addr16
mov
adc
push
sub
jae
ljmp
xchg
sarb
mov
decb
pop
frstor
insb
vfnmadd132pd
mov
pop
popf
in
dec
cmp
jl
and
orb
shlb
mov
jle
sbb
inc
test
repz
scas
pop
loope
adc
mov
fadds
jns
inc
push
mov
mov
mov
aad
cs
push
sbb
dec
add
push
cmpsb
or
lcall
ret
sti
lahf
rcrl
or
xor
test
out
xor
or
sahf
cli
xor
dec
lcall
mov
outsb
cmp
cmp
shll
jbe
xor
cltd
repnz
testb
add
or
inc
arpl
mov
jl
aas
xor
mov
inc
xor
xchg
int3
in
shlb
or
addb
in
sbb
or
mov
aaa
xchg
aad
repz
xchg
test
add
jecxz
inc
sarl
jmp
jp
mov
incb
lret
add
cmp
imul
lods
pushf
mov
fcomp
inc
out
ror
pop
xlat
add
movsl
divb
push
fbstp
jno
fstpt
pop
xchg
cmp
and
sbb
push
outsl
cli
out
jp
mov
inc
mov
out
mov
insb
mov
add
rorl
or
inc
pop
lock
mov
stos
ror
jne
sub
scas
scas
js
inc
jae
shl
jae
pop
ljmp
mov
jecxz
pop
loope
xor
nop
fdivs
pop
mov
lds
mov
push
imul
sarl
xor
mov
push
movsb
ret
mov
dec
mov
mov
out
push
push
loope
push
cld
fs
packuswb
aam
cmp
xlat
pop
hlt
repz
jle
aas
fmuls
nop
push
push
pop
pop
mov
sahf
jae
mov
sub
ljmp
adc
pushf
pop
popf
pusha
mov
mov
xchg
pop
and
pop
into
jns
int3
adc
movsb
sub
xchg
stos
mov
cmp
sbb
or
xor
jmp
movsl
je
cwtl
jp
push
or
xchg
adc
sbb
cmpsl
mov
lret
dec
fwait
and
jmp
lock
inc
pop
stos
sbb
es
inc
aam
movsb
cli
std
test
cmp
popf
mov
mov
adc
stos
clts
fwait
and
dec
fwait
push
mov
aad
add
lret
pop
insb
fdivrp
mov
cltd
xor
addr16
mov
sub
dec
jmp
bswap
xor
dec
je
pop
scas
xchg
and
stos
out
adc
xchg
dec
sbb
inc
mov
xchg
cmpb
cmp
fisubrs
sub
lods
pop
push
sub
pop
and
fistpll
cmpsb
mov
lret
lods
repnz
lret
sub
mov
leave
mov
adc
inc
push
std
inc
push
icebp
stc
xor
addr16
push
nop
aam
and
or
out
mov
adc
add
lods
dec
sub
outsb
aam
lds
scas
subl
sarl
dec
pop
and
inc
mov
or
insl
aad
add
adc
push
nop
lea
cmpsl
out
xchg
jbe
pop
scas
mov
add
cmc
push
jo
roll
push
cmp
cmp
xchg
imul
push
popf
mov
mov
or
ret
in
fidivl
inc
in
cli
mov
or
jge
addb
out
outsb
mov
adc
push
clc
stos
push
mov
ret
bound
mov
fists
ficompl
fiaddl
mov
fists
out
int
xchg
adc
cmp
xor
cmp
je
mov
lret
jnp
pushf
nop
into
mov
rolb
in
repnz
pop
dec
aam
jb
dec
and
cli
int3
sub
lret
test
mov
jns
add
pop
and
jg
aas
xchg
out
ljmp
push
incl
push
dec
jns
cmp
xchg
or
sub
push
fldcw
imul
xchg
pop
popa
pop
jbe
sbb
lock
into
xchg
mov
in
pop
mov
push
dec
sarb
jne
xchg
cmpb
xor
push
aas
push
outsl
or
lea
repz
xchg
aas
imul
popa
jns
lret
xchg
cmc
jnp
pusha
add
les
sbb
mov
in
sub
xchg
sti
mov
inc
stc
push
sbb
add
sahf
rcr
shlb
inc
inc
xchg
mov
test
in
dec
xor
xor
pop
add
inc
scas
rolb
cmp
or
stc
leave
ret
lcall
jns
es
jmp
insl
in
and
cmp
inc
cmpsl
inc
and
lods
mov
dec
cmpsl
add
mov
sbb
inc
mov
ret
jb
mov
push
and
sbb
fld
lcall
xchg
cld
dec
pop
push
out
adc
cltd
sub
cmp
loope
icebp
rorl
loopne
iret
adc
faddl
sahf
mov
cs
xchg
fists
mov
push
ss
ja
mov
stos
adcl
sbb
jno
dec
in
dec
rcrb
or
jns
loope
xchg
ja
cli
aaa
push
jg
push
mov
out
cld
jne
nop
in
and
outsb
and
mov
xor
cld
lea
dec
scas
sub
pusha
mov
fiadds
mov
jns
jge
loop
dec
shr
sbbb
inc
jl
lods
adc
pop
fwait
dec
lea
cltd
es
inc
loop
cmp
xchg
jecxz
fdivrs
sbb
mov
cs
out
mov
pushl
xor
gs
dec
sub
out
add
mov
xchg
jecxz
nop
arpl
add
xor
sub
sti
mov
cmc
in
cld
in
sahf
jmp
jmp
dec
xchg
mov
loope
or
jo
bound
je
das
lret
aam
data16
rol
mov
out
mov
fisttps
mov
les
cwtl
pop
jle
insl
jg
push
mov
sub
jge
fwait
mov
jmp
popa
xor
movsl
sbb
jge
outsb
cmpsb
jle
dec
cmp
sbb
jmp
in
jb
sub
frstor
in
movsl
in
mov
bound
sub
lods
imul
jbe
pop
lods
or
adc
sub
cmp
pop
or
adc
andl
cmc
shrl
pop
push
loope
jae
fstpt
loop
jg
sbb
nop
mov
xor
adc
mov
out
psubw
inc
data16
adc
and
cmp
mov
mov
cltd
jmp
lret
push
lods
and
jecxz
xchg
xor
es
cs
sbb
scas
clc
jmp
rorb
decb
stos
int
add
ss
les
fs
sbb
addr16
out
pop
out
lods
call
in
push
icebp
xchg
xchg
mov
mov
or
test
jl
outsb
and
cs
push
jmp
imul
incb
push
inc
fucom
pushf
mov
outsl
aaa
pop
cmpb
insb
mov
cmovne
mov
add
sbb
sbb
push
lea
call
mov
add
jne
jnp
fst
bound
cmpsb
dec
xchg
pop
mov
fistpl
push
scas
scas
cmpb
loopne
mov
ret
cmp
fnstcw
pushf
scas
es
push
scas
gs
fwait
mov
in
xchg
cld
divps
in
sub
subl
lods
xchg
xor
pop
orb
loopne
sarb
mov
ret
lods
mov
push
and
jle
lods
jmp
pusha
cwtl
arpl
jmp
and
sub
mov
add
movsl
lret
mov
push
jo
leave
in
shlb
push
aas
pop
nop
and
test
xor
fnstenv
mov
insb
gs
mull
cmp
cmp
mov
and
and
out
jp
in
sub
fdivl
or
cmp
pop
jbe
lods
pushf
and
test
mov
push
mov
out
aas
enter
aad
inc
inc
stos
adcl
test
cmp
lret
mov
out
lea
std
dec
mov
push
dec
mov
cmp
movsl
jns
clc
xor
popa
addr16
lret
push
lcall
xchg
add
fwait
mov
hlt
mov
mov
xchg
lds
ret
push
popf
mov
nop
lea
popa
mov
out
pop
cwtl
cmc
iret
ret
int
lcall
dec
add
and
scas
xchg
loope
je
add
jb
or
stos
fs
jno
cmp
jmp
add
sub
pop
jl
lds
xor
xor
jmp
adc
mov
test
pop
mov
sub
mov
lahf
leave
xchg
iret
cmp
push
aad
ffree
in
loopne
dec
cli
or
out
sub
adc
cld
sbb
mov
push
fs
jmp
inc
filds
adc
fbstp
test
aad
mov
mov
int
and
mov
test
adc
enter
sub
flds
scas
in
mov
jp
and
dec
orb
enter
loopne
mov
fs
inc
aas
xor
nop
mov
data16
adc
insb
lahf
jmp
sti
mov
int
add
inc
imul
fucomip
add
inc
mov
in
jnp
jne
loopne
cmpsb
orl
loopne
out
adc
inc
addr16
dec
inc
jbe
imul
or
push
pop
add
push
mov
ss
lods
xchg
jg
pop
push
dec
mov
int
mov
sbb
dec
jnp
fists
and
sbb
adc
sub
jmp
stc
in
outsb
jno
fiadds
mov
push
dec
xor
push
mov
mov
aaa
xadd
sbb
add
adc
or
xchg
cwtl
mov
and
ret
mov
stc
xchg
paddsw
mov
out
inc
test
push
mov
leave
push
das
clc
lds
or
test
popa
cmp
xchg
cwtl
mov
sti
mov
xchg
insb
or
add
jb
imul
pop
xor
adc
gs
inc
nop
fistl
shll
push
or
jnp
js
jl
lahf
aas
bound
jno
or
pop
std
cmp
or
mov
jae
mov
adc
lea
sbb
jnp
adc
push
incl
cmp
mov
push
jnp
dec
fists
mov
jne
sub
and
int
or
mov
mov
outsl
mov
jg
nop
lods
je
int3
ret
jb
jecxz
popf
aas
mov
jo
lds
fmul
daa
xchg
push
dec
dec
sub
dec
cmc
insb
out
xchg
les
push
lods
adc
popf
xchg
rcl
jb
sub
push
cs
mov
pop
cld
mov
or
xchg
stc
arpl
jo
cmp
inc
mov
loop
data16
add
add
arpl
lret
and
mov
xor
loopne
xchg
hlt
pop
mov
popa
mov
xchg
mov
cmp
ror
pop
cmp
jo
pop
ret
outsb
dec
js
lcall
pop
jp
or
repnz
pop
cld
in
push
push
andb
aam
stc
xor
daa
movsl
jns
imul
xchg
js
mov
mov
inc
js
push
and
pop
js
je
dec
shlb
or
sub
cmp
and
and
in
mov
push
adc
mov
sbb
sbb
std
push
fs
jecxz
or
or
divb
cmpl
lods
icebp
test
xor
sbb
call
stc
or
inc
and
cltd
mov
aam
data16
jns
cmp
loop
fwait
mov
mov
sub
scas
sub
or
adc
cmp
add
sahf
cmpsb
mov
fs
sub
push
sbb
imul
xchg
sub
pop
mov
out
testb
sbb
add
aas
loopne
dec
xchg
aam
je
mov
pop
repz
jmp
cmp
into
push
dec
add
xor
mov
movsl
leave
dec
mov
jns
aam
jecxz
shl
pop
orb
notb
mov
cld
mov
imul
mov
loope
dec
repnz
cmpsb
push
xchg
test
out
jp
push
paddusw
insb
push
into
jp
mov
ror
scas
movsb
mull
and
jne
xchg
xchg
adc
addl
mov
repnz
lock
lret
sub
mov
push
das
loop
adc
daa
mulb
shll
cmpsl
pop
push
fldcw
inc
repz
fucom
sub
in
movl
rorl
add
push
loope
dec
xlat
rolb
inc
fs
cmp
inc
push
das
in
sti
inc
cmc
cmpsb
mov
lahf
cmp
mov
ret
xor
sub
icebp
imul
sub
lods
repnz
push
mov
pop
xchg
sub
stos
fstl
add
ror
xchg
inc
movsl
mov
xor
into
call
std
mov
pop
and
push
push
out
xor
lods
xor
sub
mov
or
sbb
movsl
fwait
cmp
push
ja
cmp
in
lcall
loope
push
loope
jo
cmpsb
dec
push
jo
cmc
stos
imul
aas
bound
lds
jne
sub
mov
jae
dec
outsb
ljmp
xor
sub
cwtl
lret
add
out
and
inc
lods
or
cmp
cmp
adcl
test
mov
lcall
lret
repz
inc
jecxz
aaa
rclb
sbb
imul
aas
frstor
xchg
repnz
orb
push
and
and
movsb
xor
imul
mov
mov
jbe,pn
cmp
pop
clc
mov
pop
in
outsl
flds
jge
aam
mov
xor
pop
cmp
add
out
sbb
mov
daa
xchg
ret
in
outsl
and
push
mov
in
lahf
xor
sbb
daa
cs
outsl
push
repz
bound
mov
lret
add
ss
loopne
inc
jmp
clc
mov
inc
add
sbb
rcll
fistl
mov
add
cli
fsubs
out
mov
andl
jmp
sbb
xor
jle
leave
subl
jecxz
mov
mull
mov
mov
repnz
cmp
in
movsl
inc
ds
repz
notb
ret
fisttpll
into
push
adc
sub
lahf
pop
lds
shr
xchg
lahf
mov
in
daa
adc
sub
icebp
cmp
dec
iret
sbbb
out
shll
push
jno
inc
js
mov
adc
xchg
xchg
lea
loop
add
add
xchg
mov
aad
std
jecxz
shr
or
pop
cmc
xchg
loop
pusha
int3
xor
sub
cmp
push
loopne
mov
sub
sbb
add
mov
fisttpll
inc
cmp
rol
mov
jmp
jbe
daa
cs
leave
push
push
sub
outsb
faddl
insl
sbb
adc
out
scas
leave
les
mov
mov
movb
shr
shl
outsb
cmp
lock
dec
sub
mov
dec
pop
jge
push
mov
pop
mov
outsl
xor
mov
enter
pusha
inc
mov
mov
push
test
cmp
jnp
cmpsb
sub
xchg
jnp
xor
mov
mov
enter
loope
pop
push
or
add
push
cwtl
faddl
push
mov
movsl
jb
repnz
push
icebp
or
pop
aaa
push
cmp
mov
add
cmp
xchg
movl
jns
popa
roll
push
push
lods
dec
loope
jns
mov
adc
fbld
push
xchg
push
pop
test
dec
jecxz
xchg
das
jne
xchg
mov
outsb
push
ds
mov
cwtl
jl
femms
lcall
scas
cmp
mov
loopne
sub
pusha
int3
and
adc
rol
push
fsubrl
pop
in
inc
push
aad
fcom
jmp
dec
mov
add
push
mov
pop
cmp
pop
inc
lds
mov
or
ja
mov
mov
gs
lret
dec
roll
mov
mov
inc
xor
outsl
test
pushf
and
lods
push
add
adc
push
mov
dec
lahf
push
mov
add
arpl
in
pop
rcr
mov
mov
test
stos
cmpsl
cmp
insb
pop
faddl
imul
inc
punpckldq
or
std
cmp
mov
lret
mov
push
adc
or
cmp
add
xor
pop
popf
jle
mov
add
mov
xor
aaa
xor
pop
cmp
icebp
pop
pop
add
xor
cmp
addr16
cltd
xchg
out
cli
cltd
je
add
push
mov
xchg
adc
int
fistpl
sub
sbb
sbb
pop
bound
fsubs
adc
aas
jle
push
pop
sbb
mov
or
sub
ja
mov
mov
mov
or
xlat
sub
sbb
sub
fs
ss
pop
mov
mov
data16
in
push
cmp
das
mov
add
push
sbb
ljmp
or
scas
push
fwait
mov
mov
es
sub
xchg
fists
movsl
fs
push
sub
rol
jns
les
sahf
jmp
jno
sbb
int3
mov
sub
mov
scas
ss
xchg
daa
aam
mov
shrl
push
push
jno
sarl
outsb
add
aaa
std
daa
mov
add
sub
data16
clc
inc
or
icebp
je
sub
sarb
inc
iret
mov
incb
pop
or
lods
pop
ret
push
ljmp
adc
jmp
fcmovb
push
shlb
sarb
push
fcomps
in
xor
mov
mov
jp
or
inc
jp
mov
pop
pop
inc
push
je
std
inc
fildl
push
adc
push
nop
inc
int
out
dec
rolb
pop
mov
int
rcl
mov
lret
and
add
stos
jmp
movsl
pushf
movsb
or
ja
dec
mov
mov
rcll
scas
int3
and
lret
ja
popf
jnp
repz
mov
mov
xor
mov
repnz
pop
add
rcl
adc
adc
cwtl
mov
addr16
mov
mov
jle
xor
push
jb
xor
arpl
cmp
mov
sub
and
movd
pop
mov
push
int
xor
mov
fstpt
iret
loopne
and
mov
mov
es
rorb
mov
xchg
cmpsl
push
pushf
fs
adc
pop
jg
dec
inc
jp
outsl
outsb
jne
adc
mov
sbb
sbbl
out
push
and
cmp
ret
lret
loope
mov
and
popa
push
adc
bound
cld
adc
in
adc
jmp
sbbl
mov
xchg
xor
lret
push
faddp
aas
data16
jmp
and
in
mov
test
nop
bnd
test
add
insl
stos
xchg
scas
push
add
nop
out
les
jge
push
dec
insl
mov
cmp
jl
shrb
pushf
into
and
in
repz
popf
mov
mov
imul
dec
mov
xlat
movsb
and
sub
fdiv
mov
sub
dec
dec
insb
aam
icebp
sbb
pop
xor
cwtl
mov
andl
dec
sbb
shr
insl
stos
mov
inc
imulb
adc
inc
out
nop
mov
mov
adcl
mov
push
adc
adc
jmp
in
lds
jle
add
mov
bound
mov
fstl
mov
or
or
add
inc
insb
inc
js
xor
pushf
xchg
pop
outsb
cmc
into
jb
adc
jb
sbb
int3
mov
jmp
rclb
mov
fistpll
xor
add
add
les
cmp
call
cli
jb
xchg
and
or
mov
rcll
sti
lret
mov
cwtl
lret
jmp
xchg
xor
and
xchg
mov
jb
in
lods
fbstp
cmp
insl
mov
in
jno
mov
push
iret
out
loope
cwtl
jne
sub
insl
mov
inc
fsub
inc
xchg
cltd
adc
adc
ror
aam
lods
push
push
mov
xor
xchg
xchg
add
aad
data16
loop
orb
call
mov
mov
mov
sub
out
outsl
repnz
pop
jae
push
daa
popa
sbb
je
lcall
jb
push
lret
arpl
scas
mov
mov
jae
jb
sbb
xor
out
test
fldl
popa
cmp
mov
push
xorl
push
dec
aas
not
nop
cmp
or
adc
cmc
dec
stos
fcom
in
inc
jle
dec
mov
ret
int
int
test
xor
fcoml
inc
xchg
xorb
pusha
outsl
sbb
cli
stos
loope
jbe
jl
cmpsl
lds
mov
pop
dec
enter
add
jno
ss
in
rcl
pop
call
inc
dec
push
mov
adc
sub
or
test
test
xchg
dec
jns
xchg
sbb
push
notb
call
repnz
pop
mov
out
sub
xchg
js
adc
sub
mov
aaa
cmp
adc
and
mov
xchg
push
mov
jmp
lret
push
fdivs
ss
das
mov
dec
mov
and
pop
dec
mov
jbe
jmp
aad
int3
mov
inc
std
jnp
in
push
je
test
sar
mov
cmp
movsb
mov
mov
mov
xor
lret
fcmovnb
pop
outsl
cmpsl
cmc
popa
jecxz
cld
cmpsb
sub
cmp
dec
mov
in
mov
jl
cltd
jnp
popf
sub
add
int
cld
bound
cmp
je
insb
hlt
int
loop
inc
in
cmpsl
cli
adc
add
gs
test
js
cs
inc
lock
add
pop
enter
inc
shll
add
push
fsubl
pushf
imul
dec
xchg
xchg
ret
sbb
xor
adc
pop
push
shrb
imul
pop
repnz
mov
pop
inc
mov
inc
or
ficomps
jp
push
mov
sti
data16
cmp
les
jge
cwtl
pop
jno
cmp
negl
je
dec
enter
pop
adc
rolb
cmp
jp
nop
aaa
pop
xor
xchg
adc
cmp
out
lods
cmc
sbb
dec
or
jge
xor
testl
mov
mov
mov
jl
jo
sahf
mov
inc
cmc
add
pop
es
mov
xadd
push
popa
fbld
mov
mov
pop
loop
cmp
je
mov
lods
inc
sbb
xor
pop
or
stc
cmpsb
das
cmp
inc
js
pop
inc
xor
das
rorl
sub
pusha
cmc
nop
aam
xor
cmp
fwait
jecxz
data16
fs
inc
jns
add
mov
xor
xchg
adc
pop
icebp
mov
int
movsb
and
and
scas
movsb
ficoms
pop
loopne
dec
xchg
add
xor
stc
xor
adcl
jo
xor
inc
add
push
and
ja
mov
popa
popf
orb
adc
std
dec
into
fnsave
js
dec
inc
fimull
test
fstps
cmp
js
add
adc
cmpsb
mov
incl
rcll
gs
lock
inc
xchg
sbb
pop
fistpll
std
flds
xor
jo
push
pop
cli
sub
cmp
pop
pop
mov
sub
pop
je
call
ficompl
xchg
shr
inc
ds
and
popf
xchg
js
cmp
adc
add
mov
cmc
xor
iret
pop
mov
mov
xor
test
cmp
adc
xor
dec
imul
inc
sbb
inc
xchg
adc
in
mov
push
call
ret
imul
xchg
xchg
mov
adc
ljmp
fucomi
add
inc
cmp
ret
pop
sti
mov
addr16
fs
mov
fnstsw
pop
insl
mov
xor
and
xor
sub
or
in
popf
mov
or
inc
adc
repnz
mov
mov
sbb
lea
xor
inc
inc
mov
ret
andl
aad
xchg
xor
scas
loop
cli
loope
sbb
mov
pop
mov
out
or
subb
mov
or
push
movsb
outsl
int
outsb
movsl
sub
dec
lahf
ret
dec
xorb
mov
cmp
nop
mov
jecxz
add
into
cmp
push
xor
cmc
jb
or
loope
and
clc
add
sub
lods
clc
mov
inc
jle
ret
sbb
or
lcall
fdiv
dec
xchg
mov
jmp
sub
pop
adc
rcrb
scas
pop
hlt
pushf
cli
push
fisubl
aad
xchg
xchg
sti
inc
add
cmpsb
push
out
pop
adc
pop
scas
xor
arpl
mov
out
or
cmc
inc
data16
jge
dec
add
push
addl
idivb
and
fsub
mov
dec
mov
inc
jb,pt
daa
push
sbb
cs
cwtl
inc
and
adc
fstl
and
icebp
sbb
insb
mov
sarl
or
dec
sbb
imul
inc
cmp
inc
outsl
in
dec
in
out
add
or
imul
sub
lret
in
test
cmp
inc
sbb
pop
pop
idivb
fadds
cmp
scas
sbb
mov
aad
std
push
int3
nop
sahf
lods
adc
jno
das
or
pop
imul
subb
in
mov
and
sbb
xchg
cmpsb
cmpsl
iret
sub
aaa
rclb
pop
mov
in
loopne
jmp
repz
daa
xor
mov
fistps
divb
mov
dec
push
in
sub
xchg
fcompl
shrl
cmp
mov
pop
mov
outsl
push
nop
push
cli
mov
repnz
sub
xor
in
adc
rcrl
xchg
sub
add
lahf
jb
xor
das
stos
gs
repnz
push
dec
mov
jmp
xchg
cwtl
cwtl
pusha
add
cmc
es
xor
mov
mov
mov
and
pop
mov
jno
sub
daa
scas
mov
iret
out
adc
sbb
mov
mov
mov
sbb
mov
mov
adc
stc
and
mov
call
push
cmp
xchg
bound
rcrb
aad
repnz
fiadds
jne
mov
repz
push
stos
mov
jb
or
pop
cmp
pop
ja
pop
mov
lods
fsts
lds
sub
xchg
and
jge
int3
xchg
cs
lock
mov
das
sub
fwait
pop
mov
xor
jecxz
das
js
shrb
fidivrl
test
loope
aaa
js
mov
fwait
xchg
push
loopne
addr16
pop
cwtl
notb
clc
and
cmpsb
and
sbb
adc
xchg
shrl
add
lret
fwait
scas
xchg
or
xchg
sbb
loopne
mov
jns
ds
inc
push
cmpsb
nop
sbb
testl
and
xor
adc
adc
adc
xor
jno
push
sarl
inc
inc
loop
inc
scas
ret
jne
xchg
imul
call
ret
lods
cmc
movsl
jne
xchg
lretw
scas
sub
das
mov
inc
add
and
lahf
mov
pop
add
lds
mov
lret
mov
pandn
fsubl
and
xchg
std
inc
outsl
sbb
cmc
cmc
xorl
pop
or
sub
aaa
cmpb
push
jb
fwait
mov
inc
dec
xchg
filds
cmp
cmp
dec
cmc
out
jl
xchg
and
dec
pop
lret
xor
jno
test
lock
hlt
and
dec
pop
or
jmp
int3
jbe
popf
xor
loope
mov
call
addr16
stc
or
xor
xchg
rolb
out
push
cmp
xchg
add
outsb
movsb
adc
lds
sub
jp
popa
or
mov
sbb
orb
inc
xchg
ja
cli
lea
imul
stos
add
dec
jbe
or
aaa
cmp
jo
ficoml
add
dec
dec
fadd
bound
out
cmp
fildll
fnstsw
jmp
fnstenv
and
aad
dec
xchg
and
int
fidivl
aaa
mov
aam
insb
sbb
xchg
cmp
jb
idivl
and
mov
push
cmp
int3
sbb
iret
push
loop
mov
nop
es
dec
inc
jmp
cmp
fists
adc
xor
mov
fmuls
int
cwtl
mov
out
inc
std
enter
sub
jp
mov
imulb
and
and
jo
adc
leave
mov
or
je
dec
cmp
inc
mov
enter
decb
xor
add
cmp
jno
fs
bound
cmp
cli
into
jle
sbb
jmp
aaa
xor
mov
call
mov
sbb
imul
add
rcr
imul
adc
adc
push
into
adc
cwtl
and
int
lods
mov
in
mov
ja
nop
cmp
pusha
scas
mov
jae
sarl
push
dec
stc
int
pop
sub
xchg
push
pop
jae
lock
xchg
stos
dec
in
repz
out
pop
mov
fldl
jne
cltd
out
fisttpl
cmp
sti
popa
or
add
sub
sti
dec
fidivrs
pop
sbb
daa
sub
ds
lea
leave
lods
adc
int3
aaa
sbb
cmpsl
cmpsb
jge
mov
pop
mov
xchg
into
push
inc
lahf
dec
out
cmpsb
icebp
mov
cmp
mov
aam
inc
or
xchg
mov
imul
loope
rcrl
pusha
mov
xlat
test
cmp
dec
or
fbstp
clc
jo
push
fimull
outsb
xlat
and
sub
enter
mov
outsb
dec
xchg
pop
ds
sub
movsb
xor
sbb
xlat
pusha
adc
or
lahf
cmp
push
in
insl
push
xchg
pusha
les
xchg
int3
push
movsl
inc
mov
jae
in
or
shl
cmp
popa
arpl
cld
int3
push
scas
aad
lret
stos
stos
out
test
pop
lret
in
in
add
jo
aaa
push
inc
mov
adc
mov
pop
xchg
stc
push
dec
sahf
pushl
xchg
cltd
ds
cmp
je
push
decl
jp
xlat
movsl
iret
fmull
mov
std
push
setb
xchg
sbb
fldl2t
test
lods
je
dec
push
inc
andl
adc
or
jno
call
sahf
adc
push
mov
mov
lret
popa
and
or
xchg
pop
mov
ss
ljmp
int
test
mov
adc
sbbl
aaa
out
arpl
cmp
insl
cwtl
clc
leave
or
xchg
xchg
jmp
inc
adc
add
xor
mov
mov
dec
jne
rclb
cmp
loopne
and
lret
pop
loopne
cmp
outsl
ljmp
dec
or
lret
pop
inc
nop
test
lods
jmp
adc
outsl
sbb
insl
dec
pop
movsb
data16
lahf
push
mov
xchg
rcrb
daa
mov
cmp
inc
int
call
push
ds
cmp
jmp
int3
push
cmp
sbb
in
pop
dec
xchg
lods
mov
xor
pop
xlat
sbb
fsubrp
xor
jmp
mov
mov
adc
loopne
mov
in
movsl
mov
lds
push
jecxz
xor
xchg
sbb
xchg
test
jecxz
jecxz
sarb
mov
test
in
cmp
loop
mov
and
mov
outsb
jae
into
insl
add
mov
mull
or
mov
fdecstp
repnz
mov
push
je
dec
sahf
std
push
outsb
ds
daa
mov
xor
cwtl
loope
lds
sub
mov
lahf
jge
loopne
inc
std
jno
jae
xor
cmp
popa
cltd
push
outsl
popf
jb
sub
sbb
adc
ljmp
pop
cmc
mov
mulb
test
fs
mov
nop
fidivs
imul
icebp
jnp
pop
adc
out
mov
push
dec
ds
lcall
ret
inc
cli
mov
mov
xor
cmp
mov
shll
insb
pop
pusha
js
mov
cmpsb
adc
or
fcoml
loop
dec
mov
movsb
daa
int3
mov
mov
repnz
aad
enter
pop
and
les
imul
std
jmp
push
jno
mov
mov
pop
xchg
movsl
sub
daa
repnz
insl
dec
push
jecxz
sbbl
les
inc
movl
inc
in
cmpsl
push
out
test
inc
and
in
aad
adcb
int
and
xor
lahf
jl
lcall
lcall
gs
out
fidivrs
push
push
jl
xor
lods
inc
xor
test
mov
mov
add
sbb
or
cmp
int3
inc
mov
loop
jg
subl
and
enter
mov
xchg
stos
xor
jnp
xchg
ss
daa
mov
inc
push
mov
pop
lds
frstor
pop
hlt
movsl
cmp
mov
mov
in
test
mov
adc
and
pop
inc
xor
jmp
or
sub
mov
adc
and
ret
mov
movb
lods
andb
mov
push
xchg
push
dec
lcall
insl
lret
jae
pusha
ret
aad
inc
ficompl
cmp
sahf
jg
icebp
sbb
inc
out
pusha
out
jmp
ljmp
xchg
xorl
mov
enter
jge
jno
sub
jge
repz
cmpsb
adc
xchg
outsb
mov
cmp
push
stos
and
xchg
sbb
insb
jbe
rolb
ljmp
xchg
push
sub
pusha
repz
ss
ret
test
scas
ficompl
outsl
movntq
out
fisubrl
lret
loopne
cmpsb
xor
mov
lods
sbb
jbe
or
flds
aam
sub
push
dec
clc
mov
lahf
icebp
push
fstp
jnp
sub
jl
mov
mov
stc
mov
lret
push
sbb
sbb
hlt
add
mov
imulb
mov
icebp
mov
sbb
push
sahf
mov
dec
add
jo
sub
lds
dec
sbb
mov
sbb
sti
inc
repz
mov
pop
cltd
iret
stos
movsb
das
fdivr
enter
mov
aam
enter
cmp
jne
adc
push
test
xchg
scas
mov
enter
ja
rorl
scas
mov
xchg
jo
mov
hlt
das
jmp
xchg
push
into
and
adc
jns
cs
ret
mov
xorb
movsb
ds
fdiv
lcall
jg
sbb
rcl
mov
add
sahf
aad
mov
int
rcl
andb
loope
roll
hlt
mov
test
aam
inc
sahf
into
add
std
mov
push
push
mov
orl
mov
fwait
sub
cmp
or
aaa
or
cmp
popf
sar
dec
test
ja
jae
jae
mov
dec
cmpsl
fdivl
in
mov
push
sbb
mov
jo
jge
mov
popf
dec
dec
mov
idivl
inc
nop
aaa
pop
add
mov
lcall
aaa
rclb
mov
in
rolb
mov
xlat
mov
mov
xchg
xchg
mov
mov
call
dec
jne
ja
cmp
je
sbb
mov
or
js
add
int3
jp
mov
mov
inc
stc
sub
dec
cltd
arpl
sbb
jecxz
loope
lret
roll
bnd
xor
in
test
dec
leave
dec
xchg
xlat
aaa
mov
jnp
xchg
and
aam
jecxz
mov
aas
sub
push
and
dec
pop
mov
daa
push
repnz
mov
push
sub
test
inc
sbb
cltd
ljmp
add
add
adc
addr16
push
jno
jmp
sub
pop
dec
loope
pop
inc
dec
pop
xor
sbb
into
sti
push
out
add
xchg
adc
sub
lcall
imul
push
ficoml
jo
sahf
pop
lret
push
int
fcoml
jo
xchg
into
lock
icebp
add
fcoms
adc
fmuls
add
fistpll
adc
xchg
cmp
mov
ret
push
in
les
dec
mov
jns
push
das
xchg
push
sub
stos
mov
mov
setnp
cmpsb
push
out
cmp
decb
lcall
cmp
mov
cltd
iret
lock
mov
cmp
cld
xorl
xchg
shll
ret
into
das
mov
sub
loop
pop
or
mov
adc
rclb
lret
add
inc
push
sbb
fnstsw
popa
into
xchg
and
aaa
adc
les
cmc
xlat
repnz
lods
push
pop
sub
popa
or
pop
mov
dec
jle
jmp
pop
fisubrl
imul
cmp
into
xor
sbb
pushf
in
fcompl
adc
icebp
inc
jmp
jne
mov
add
les
mov
xchg
xchg
out
pop
push
and
shrl
dec
dec
dec
xor
adc
fimuls
popf
movsl
push
out
mov
addr16
mov
ljmp
inc
fistpll
neg
popf
into
mov
pusha
jb
mov
mov
push
gs
pop
insl
daa
xchg
ret
pop
imul
rolb
xchg
mov
cmp
in
jl
daa
popf
or
scas
push
lea
mov
sarb
mov
outsb
xchg
test
and
add
data16
pop
int3
insl
sub
sbb
cmpsl
int
or
xchg
aas
data16
cmpsb
cld
shl
rcrl
ss
xchg
faddl
push
pop
and
push
mov
rolb
jecxz
out
test
pop
incb
pop
xchg
jg
mov
lret
call
fld
icebp
ds
pop
aas
pop
int
pop
shrl
cmp
xchg
lahf
pop
and
xor
data16
lahf
out
rcrl
sbb
outsl
inc
dec
icebp
inc
cld
jecxz
cwtl
les
mov
test
pop
cmp
cmp
addl
xchg
mov
ss
loop
xor
cmpsl
in
xor
and
inc
adc
pop
mov
loop
cwtl
cli
fidivrs
int
pop
add
pop
xor
sbb
jae
shlb
pop
fdivr
push
xor
sub
jmp
xor
ljmp
iret
jb
iret
int
jmp
rorl
leave
xchg
movq
mov
data16
fnstenv
out
dec
mov
lret
xchg
xchg
out
xor
and
or
std
icebp
int3
cmp
idivl
aas
pop
pop
mov
cld
mov
insb
out
xchg
fists
lcall
aam
jne
stc
mov
inc
movsb
jl
dec
insb
lret
xchg
je
push
jl
nopl
sbb
mov
orb
dec
or
push
in
arpl
mov
imul
sarl
jns
pop
sub
sbb
fisttpl
mov
xlat
pop
inc
push
fwait
test
roll
jg
in
add
and
inc
shrl
mov
adc
movsb
xor
test
xor
insl
test
mov
adc
test
dec
xchg
lods
cmp
push
mov
dec
and
aas
outsl
jmp
mov
cmp
inc
scas
jb
jnp
inc
rcrb
ljmp
push
inc
xchg
xor
inc
inc
or
mov
push
roll
sahf
test
fidivs
jb
aad
loop
sub
outsl
jae
push
stc
cmp
imul
fs
sbb
add
adc
push
jl
mov
inc
dec
scas
xchg
stos
jo
repz
pop
popa
lea
lods
pusha
xchg
cltd
and
pop
les
stc
mov
sub
out
jbe
out
mov
dec
aad
jle
or
xchg
insl
push
mov
cmpb
mov
das
xchg
xchg
fs
sahf
adc
and
ficomps
jnp
outsb
lret
adc
in
lcall
popf
popa
cli
push
iret
dec
inc
sbb
lods
jge
add
int3
push
xlat
js
mov
ss
mov
rep
nop
xchg
sbb
je
and
push
jo
mov
push
shrb
dec
repnz
mov
das
mov
mov
dec
test
outsl
test
fs
fldl
push
arpl
fisttpl
and
cmpsl
push
fisttpll
and
sub
sub
lock
enter
fs
ss
sbb
mov
mov
or
sub
cmp
dec
xchg
insl
sti
xorb
cmp
mov
push
paddd
xchg
les
popf
bound
jecxz
push
out
mov
dec
and
in
push
jo
inc
stc
out
dec
sub
push
cmp
sub
adc
jle
fsubl
push
jns
cmp
test
pop
push
jb
adc
xor
cltd
cmp
inc
aam
sahf
dec
pop
out
add
xor
inc
loop
pop
or
jmp
aam
adc
xchg
dec
fcmovnb
or
je
adc
push
or
inc
jae
std
shlb
les
or
cli
mull
arpl
push
loopne
rorl
cs
add
in
lock
fldt
add
loop
rolb
sahf
js
or
add
jmp
or
push
mov
inc
jmp
mov
xchg
icebp
nop
mov
cmpsb
pushf
inc
push
ficompl
mov
xor
sub
xchg
mov
jno
orl
outsb
and
call
pushf
cmpsl
push
mov
cmp
popf
out
icebp
adc
icebp
inc
fisttpll
push
scas
mov
xorb
mov
int
sbb
add
hlt
lahf
imul
lods
jmp
or
inc
or
cmpsb
aas
inc
jge
scas
xchg
xchg
jge
pop
das
xchg
xchg
sbb
jmp
mov
mov
or
fstpl
ljmp
pop
cmpsl
push
pop
cmp
cmc
gs
mov
sbb
push
loope
xchg
and
iret
jmp
and
xor
xor
loope
movsl
das
xchg
mov
jnp
sub
or
mul
sarb
jae
adc
repnz
int3
and
pusha
out
pop
sahf
cmp
sub
xchg
sub
mov
call
mov
mov
cmc
add
xor
and
mov
nop
sbb
and
sbbl
mov
dec
xor
sbb
fisttps
sub
pop
inc
ss
rcr
sbb
sbb
dec
outsb
iret
lds
adc
popa
xor
idivb
jno
inc
cmc
sub
xor
std
nop
sbb
jne
and
imul
mov
rclb
mov
push
add
xchg
mov
imul
sbb
ret
and
dec
xchg
add
mov
jmp
pop
xor
push
test
ret
jle
jge
sbb
sbb
inc
stos
dec
add
mov
insb
ret
add
mov
subb
jge
ss
je
mov
ror
cmp
pop
stos
movsb
adc
leave
andl
xlat
push
fs
jae
xor
out
insb
rolb
cmp
pop
lea
stc
mov
or
xor
int
push
out
loopne
dec
fcmovu
mov
repz
adc
cltd
sbb
and
sbb
pusha
add
mov
or
insb
mov
cmp
loop
repnz
push
mov
cli
sub
add
notb
adc
jge
cwtl
cltd
fwait
aaa
test
pusha
jb
daa
mov
insl
hlt
dec
jno
mov
sbbl
repnz
jp
mov
pop
cmp
fbstp
add
pop
push
pop
lahf
jo
add
mov
mov
icebp
jecxz
lods
mov
and
das
and
push
andl
imul
lret
push
mov
push
in
xor
int
cld
mov
mov
push
movsl
scas
mov
push
mov
sbb
lcall
inc
push
dec
pop
pop
test
out
mov
pop
dec
sub
sub
inc
add
push
jp
add
mov
xor
cld
jnp
push
cmpsb
jge
or
nop
mov
out
dec
scas
push
aam
pop
loopne
pushf
lahf
lahf
mov
fmuls
sbb
jmp
data16
dec
xchg
out
jecxz
mov
inc
lods
jecxz
add
push
sbb
inc
or
es
rcrb
jno
mov
push
fnstenv
sub
sub
aas
loop
fldl
cs
or
mov
cmp
lods
jp
out
popf
daa
les
int
fnstcw
notl
aas
out
inc
outsb
mov
shlb
pushf
sbb
mov
jns
sbb
pop
lahf
dec
pop
movsl
jge
xchg
jp
inc
and
jl
daa
add
ja
je
or
sub
push
mov
mov
arpl
scas
stc
mov
pop
jmp
in
cmpsb
outsl
sub
fwait
and
jns
cwtl
test
popa
insb
push
orb
sahf
xchg
out
xchg
cmp
pop
sub
outsb
mov
lcall
loopne
jmp
inc
jg
sbb
sar
sbb
cmc
pop
add
test
xchg
leave
xor
inc
cmp
gs
jmp
std
das
lock
xchg
cmp
push
jb
xor
pushf
movsl
aaa
in
into
clc
pop
adc
sbb
pop
cltd
cmp
aaa
lahf
lcall
pop
pop
jae
lahf
rorb
in
lods
mov
pop
scas
jmp
push
xchg
jmp
out
outsl
mov
jmp
or
mov
fs
add
inc
push
pop
push
sub
add
dec
jle
push
pop
lret
xorb
fs
xchg
aam
js
push
pop
lcall
mov
dec
into
cwtl
adcb
cld
push
push
pop
mov
outsb
dec
sub
out
mov
icebp
jmp
fidivrs
movsb
dec
int3
jo
addr16
js
jmp
mov
cld
push
adc
das
bound
cmc
int3
mov
outsb
cmp
insl
mov
jns
movl
popa
adc
roll
lret
push
push
loope
scas
mov
andl
inc
and
nop
jae
mov
fwait
pop
xor
dec
shll
mov
out
push
dec
push
int
into
je
mov
adc
clc
adc
mov
and
call
jne
outsb
out
add
adc
adc
adc
push
aaa
out
push
ss
push
mov
sbb
stc
fistl
lods
ss
sbb
test
out
test
outsl
push
xchg
sti
jo
cmp
fcmovb
sahf
jl
sbb
xchg
jle
cwtl
push
and
sub
fcomp
xor
pop
inc
sub
cmp
push
mov
les
or
mov
sbb
rcrl
ret
inc
fimuls
jg
sbb
mov
aam
scas
jbe
adcl
pop
jae
daa
insl
add
xor
orl
loop
cltd
mov
jns
mov
xorb
addl
dec
push
aas
rcr
dec
add
jge
into
loopne
lret
popf
push
push
lret
pop
and
movsl
fidivl
push
negb
out
pop
jb
inc
mov
inc
in
hlt
mov
lahf
pop
popa
inc
cmpsl
mov
out
imul
jo
scas
sti
mov
pop
jne
mov
rcr
and
and
into
int
lret
out
mov
sbb
cltd
jo
shrl
dec
aad
scas
addr16
jo
cwtl
push
scas
dec
or
and
fmulp
in
cmc
add
arpl
repnz
in
sbb
pop
sub
out
scas
cwtl
pop
adc
jns
lock
inc
aad
out
lahf
rorl
xlat
jns
insb
cmpsb
add
xchg
adc
cs
shll
xor
lea
mov
icebp
sbb
mov
xchg
xlat
je
stos
out
dec
push
lock
icebp
mov
orl
mov
pop
pop
sub
mov
push
cmp
mov
dec
sbbl
push
fmuls
sub
shl
inc
int
lahf
inc
mov
fldcw
fistps
mov
add
inc
or
into
sbb
cmp
cmpsl
ja
xchg
jmp
jae
add
addr16
fs
lcall
push
mov
sti
mov
xchg
out
cmp
sub
xor
addb
xor
js
addl
movsl
dec
cmc
in
pinsrw
mov
movsb
in
adc
sub
test
les
daa
jmp
mov
sbb
mov
out
les
pop
rolb
hlt
xchg
push
andl
push
dec
xchg
idivb
dec
jge
out
out
mov
cmp
negb
and
xchg
lcall
mov
mov
repz
add
lods
mov
cmpsb
xchg
in
jne
cs
inc
adc
stos
xor
or
into
pop
lock
cmpb
mov
movsl
sub
int3
movsb
cmp
cmc
adc
dec
inc
scas
sbb
fimull
arpl
icebp
fldl
dec
insl
sahf
xor
jae
jp
add
and
loopew
push
negl
sbb
sbb
sub
repz
out
data16
jecxz
sbb
out
mov
inc
rol
nop
adc
xor
ljmp
sbb
jp
idivb
cmp
out
pushf
dec
cmp
inc
mov
cmp
stc
push
cmp
fwait
dec
out
daa
mov
lea
daa
cmc
mov
mov
adc
xchg
daa
pop
and
callw
push
jl
int
cmp
mov
push
neg
popf
stos
bound
lahf
rcll
movsb
lahf
xchg
pop
shlb
ds
sbb
mov
sbb
mov
fisttpl
inc
push
test
inc
pop
lar
popf
imul
andb
and
and
push
mov
subb
notb
add
aas
sub
into
adc
movsb
notl
inc
xor
inc
addl
jns
aad
jb
aaa
fimuls
add
lods
xor
cwtl
pop
js
lods
loop
outsb
es
dec
mov
rorb
or
mov
sahf
sbb
xchg
add
mov
sub
xchg
or
loope
sti
ds
pop
pop
dec
in
or
dec
ret
nop
nop
rcrb
cld
add
mov
shrd
jmp
mov
and
rclb
popf
dec
fnstcw
mov
iret
dec
jle
cmp
inc
fisubrs
popa
roll
rcll
mov
or
pminsw
push
out
xor
or
dec
pushf
adc
inc
rorb
lret
jmp
cmp
popf
jae
push
ljmp
dec
scas
push
lods
mov
cmc
iret
jl
push
dec
adc
js
adc
arpl
pop
mov
rol
repnz
ss
cwtl
pop
loop
sub
and
push
mov
mov
adc
cmp
xchg
push
stos
mov
dec
add
jle
enter
dec
cmp
in
cld
adc
iret
mov
leave
inc
jnp
sti
das
movsl
sbb
mov
std
sbb
iret
das
ss
xor
or
jb
dec
leave
pop
fildl
or
xchg
test
cmp
dec
std
mov
mov
sbb
pop
ljmp
add
or
cmp
xchg
sbb
xchg
sbb
outsb
xor
pop
sub
daa
test
nop
jb
gs
pop
and
pop
lods
addr16
psubb
in
lds
and
mov
out
pop
mov
popf
jmp
in
in
xchg
ds
push
jp
xor
adc
adc
mov
mov
mov
cmpsb
xor
cltd
jp
das
mov
sar
shlb
inc
pushf
adc
leave
lret
or
cli
sbb
rol
mov
mov
xchg
jp
aad
add
into
dec
aaa
push
nop
pop
cmpsl
pop
xchg
ss
xchg
inc
mov
out
dec
mov
rclb
add
mov
push
or
gs
loope
out
jg
and
or
and
xchg
rorl
mov
mov
sub
jge
mov
push
sub
sbb
bound
shrb
xlat
sub
fisubrs
sbb
cld
pop
dec
sarl
je
insl
stos
shll
push
push
sbb
lea
scas
lods
test
pop
pop
pop
stc
inc
pusha
mov
mov
xorl
pushf
push
outsl
lea
or
inc
dec
ret
sbb
mov
cmpsb
dec
out
dec
inc
dec
mov
xor
rcrl
xorl
or
fwait
les
mov
cmp
scas
adcl
sti
pop
pop
sbb
adc
mov
psubusw
popa
mov
out
dec
xchg
ret
mov
pop
push
stos
adc
push
andb
jb
jbe
mov
mull
add
jo
fisttpl
cmp
lret
lcall
dec
nop
push
stos
test
adcl
cli
js
sub
hlt
lret
inc
and
mov
push
xor
push
mov
fldl
jp
add
sbb
out
imul
xchg
jns
daa
or
jo
aam
lea
adc
sub
popf
ret
mov
andb
pushf
xor
fbstp
jmp
jmp
xchg
dec
mov
stc
inc
cmpsb
or
mov
fdivrs
cmc
adc
push
xchg
dec
mov
sbb
nop
mov
inc
jne
gs
jb
pop
push
jg
xchg
add
cltd
cmc
aas
mov
jno,pn
adc
dec
inc
je
iret
cltd
imul
or
out
imul
sahf
std
jbe
scas
or
adc
clc
loope
rcrl
jno
mov
and
inc
imul
flds
outsl
arpl
icebp
das
cmp
stos
add
and
scas
repz
popf
dec
mov
mov
int
and
inc
sub
leave
js
mov
bound
setb
js
int3
push
mov
ror
jle
mov
fwait
jne
shrl
es
loop
addl
mov
loop
cli
inc
push
push
mov
lret
pop
jb
cmpsb
pop
push
fldt
mov
dec
cmpsb
add
fidivl
shlb
arpl
cld
inc
sub
xchg
fwait
jnp
push
xchg
or
add
clc
or
pusha
adc
fwait
add
icebp
mov
lcall
mov
sti
push
or
mov
out
and
stc
sbb
int
inc
sbb
or
pcmpeqw
out
out
cmpsb
es
xchg
pop
pusha
inc
cmp
pop
out
out
out
push
adc
test
jge
idivb
inc
or
mov
testb
jno
or
cmpsl
pushw
rcrl
cmp
movzwl
pop
push
adc
sbb
pop
mov
cmpb
push
pop
push
mov
dec
or
sahf
sub
outsb
xor
mov
mov
cmp
nop
fs
pop
movsb
sbb
or
inc
jle
xchg
push
je
mov
mov
pop
xor
out
cmp
sub
sarl
movsl
aam
mov
jp
xor
or
mov
ljmp
pop
inc
pop
inc
rcrb
pop
xor
aam
hlt
adc
push
int3
and
mov
mov
popf
or
sbb
jge
dec
dec
lahf
in
push
xchg
jb
or
fsubrs
insb
pop
ficoml
scas
fwait
xchg
inc
xor
jns
xor
ror
cmpsb
xor
fisubs
xchg
popf
add
fidivl
mov
jae
addr16
pop
add
mov
adc
sbb
or
xchg
jns
mov
inc
jle
scas
cmpsl
aaa
pop
xchg
sahf
pop
push
addl
mov
dec
xor
into
cmp
por
lcall
pop
jecxz
dec
push
jle
and
inc
and
test
out
rcr
sub
out
aam
mov
test
lret
mov
cmpsb
rolb
inc
jmp
shl
das
push
lret
push
xor
cmpsl
int3
sbb
cmp
add
xchg
jg
and
mov
xchg
adc
iret
nop
out
nop
xor
rcr
sti
mov
cwtl
test
out
pop
in
sbb
in
aas
cmpsl
rorl
ret
cwtl
das
jecxz
stos
int
imul
hlt
jp
loope
lds
daa
xchg
divl
cmpsb
mov
push
xchg
fnsave
xchg
test
ja
popa
inc
sub
in
adc
std
lods
stos
xor
add
dec
fs
or
shlb
in
movsl
mov
xor
nop
in
and
data16
push
stos
pop
nop
out
mov
add
and
push
pop
aad
clc
daa
pop
xor
cltd
popl
arpl
inc
popa
xchg
dec
fdiv
test
nop
jae
sub
js
mov
push
jg
jo
enter
stos
stc
mov
shrl
sbb
cmp
mov
cs
rorb
test
mull
add
test
sbb
mov
mov
jb
sbb
pop
jecxz
dec
mov
fptan
scas
scas
repz
ficompl
push
mov
imul
sbb
test
inc
jle
loop
ljmp
mov
inc
lret
cmp
addr16
lret
mov
pop
ret
call
adc
ret
ljmp
imul
out
mov
and
mov
imul
out
inc
mov
shll
mov
or
lea
mov
push
shl
mov
jmp
cmp
lods
filds
lods
jg
dec
jle
pop
push
int3
loope
adc
popf
mov
dec
arpl
loop
or
sbb
or
or
dec
mov
imul
lcall
sbb
in
jns
xchg
or
add
push
fisttpll
lods
or
lahf
cmp
sub
fisubs
inc
in
sub
outsl
iret
mov
pop
dec
out
add
pop
add
or
xchg
cmp
pop
lret
pop
xor
je
pop
push
ret
outsb
push
pop
pop
jae
scas
iret
ja
jg
repnz
mov
mov
lcall
inc
jno
xor
jp
xor
xor
sbb
bound
fs
mov
dec
add
in
gs
movsb
fsub
dec
dec
movsl
pop
push
push
popa
hlt
out
cltd
pusha
push
pushf
adc
mov
cltd
sub
imul
push
aam
push
push
xor
push
inc
mov
adc
fstpt
test
loop
sbb
mov
mov
fmuls
std
aas
jecxz
test
clc
push
cwtl
shll
ja
push
jmp
test
test
push
cwtl
cld
test
xchg
add
push
outsl
pop
es
lcall
jnp
push
sbb
repnz
xchg
fwait
test
call
mov
dec
enter
imulb
mov
and
into
mov
scas
xchg
clc
xchg
popa
dec
jmp
scas
adc
imul
fiadds
jnp
push
ljmp
fs
call
cmp
push
inc
add
add
cltd
xchg
scas
fcmovb
mov
inc
jmp
mov
jg
mov
mov
rcr
jae
xor
icebp
sbbl
adc
mov
fiaddl
jecxz
test
jp
jno
cmp
mov
mov
mov
mov
mov
pop
addl
scas
push
mov
test
or
adc
push
push
mov
popa
insb
or
cmp
pop
xchg
loop
pop
adc
sbb
mov
std
sahf
les
cmp
lcall
add
clc
addb
frstor
dec
adc
adc
out
arpl
push
adc
mov
fdivl
push
adc
and
iret
mov
daa
jbe
cmp
adc
into
adc
stos
fistpll
stos
push
xchg
ljmp
aam
sbb
test
int3
iret
std
loope
cwtl
mov
mov
dec
inc
aas
roll
xor
push
mov
sub
cmp
pop
jp
jnp
popf
lret
data16
iret
rcl
out
add
sar
mov
adc
mov
lahf
scas
aad
and
sbb
inc
inc
out
lock
pop
aaa
add
ss
outsb
mov
mov
punpcklwd
push
ljmp
in
push
add
xchg
push
lds
push
jmp
in
movsl
notb
cmp
mov
outsl
ja
enter
js
loopne
sbbb
enter
mov
stos
mov
out
push
pop
stos
pop
inc
mov
push
xor
dec
dec
xor
mov
pop
lds
push
lods
inc
push
int
fdivrl
cmp
mov
adc
jecxz
shlb
sub
sub
cltd
sub
lea
ja
lret
pushf
and
decl
sahf
aam
movsl
ss
cmpsb
xchg
popa
cmp
adc
inc
rcll
dec
ljmp
imul
sbb
pop
dec
pop
fcmovb
sbb
mov
mov
insl
and
and
xor
sub
lock
out
sub
faddl
mov
mov
into
and
call
jmp
mov
test
loop
lahf
scas
cmp
cwtl
lods
and
sbb
push
std
xor
xchg
test
jmp
push
mov
and
mov
pop
out
rcrl
mov
stc
popa
cmpsb
fs
pop
enter
inc
ss
add
ror
push
insl
xchg
movsl
pop
push
jmp
scas
sar
in
call
lods
dec
enter
or
sub
jle
das
sub
pop
jmp
sub
js,pt
loopne
test
pop
divl
ss
mov
mov
mov
xchg
xchg
insl
mov
inc
push
out
test
pop
jge
sbb
and
daa
sub
lock
mov
fsubrs
stos
sbb
jbe
pop
es
xchg
jbe
jnp
sahf
mov
sub
pop
pushf
mov
push
sub
stos
scas
enter
dec
enter
jno
xor
or
in
dec
xor
or
push
and
rcrl
adc
sahf
xlat
and
sub
and
pop
xchg
push
stos
adc
and
adc
add
icebp
jge
cld
sti
fwait
js
shl
ljmp
dec
lea
mov
fdivrl
pusha
adc
cs
addr16
push
subb
push
push
cli
mov
inc
xor
fcompl
mov
das
push
in
cwtl
fs
jge
push
cmpsb
notl
mov
addr16
mov
insl
xchg
lret
jbe
pushf
shll
sahf
cmp
fstl
dec
daa
stos
inc
jno
pop
dec
or
das
xor
iret
lret
cmp
cmp
pop
cmpsb
mov
jg
ret
sbb
lock
mov
cmp
mul
pop
adc
or
lahf
dec
imul
sbbb
mov
lods
lcall
lock
aam
cmpxchg
or
pusha
stos
and
inc
sbb
jne
arpl
add
cmp
mov
pop
mov
cld
mov
cmpb
lds
cmp
pop
mov
sub
mov
xor
scas
add
movsl
inc
sbb
or
adc
or
push
mov
rcll
cmp
leave
and
xchg
aaa
or
nop
xchg
cmp
sub
xchg
adc
and
or
sbb
mov
pop
pop
test
xor
add
inc
mov
mov
std
outsl
pop
insb
mov
cmc
jo
rcr
into
imul
fiaddl
inc
fs
dec
cmp
inc
mov
test
les
adc
and
les
fisttpll
sub
jnp
ror
sbb
iret
add
repz
sub
fdivl
popa
cmp
inc
jmp
xchg
or
out
hlt
inc
insl
psubsw
mov
xor
adc
pop
in
push
xor
lahf
xchg
mov
lahf
jae
sbb
cmp
stos
setne
pop
test
lods
stos
and
mov
shrb
scas
decl
arpl
js
cmp
inc
xor
clc
jae
arpl
out
ja
stos
int
mov
xchg
lahf
push
outsb
repz
xor
stos
je
sub
insl
jg
add
mov
cld
sub
cmp
or
out
js
inc
and
pop
push
shlb
lret
push
mov
or
mov
repnz
das
adc
mov
bound
rcrb
sbb
ret
xor
push
leave
fcmove
dec
aad
int
std
xchg
add
sub
add
jb
mov
bound
dec
sti
jae
add
cld
jb
fs
decl
gs
je
or
scas
mov
test
lea
loope
cmp
ficomps
jl
shrl
inc
sbb
inc
cmpb
xor
mov
mov
and
lret
cmc
push
mov
into
std
xor
pop
loop
pop
inc
mov
sbb
and
repnz
jo
and
dec
stos
test
push
jbe
adc
lahf
dec
dec
hlt
or
xchg
js
incb
mov
sbb
push
dec
inc
jle
push
push
sahf
lods
clc
imul
test
jno
jb
in
dec
bound
movsb
pushf
sti
adc
mov
pop
rcrl
cmp
sahf
cmp
mov
in
outsb
push
std
shlb
mov
pop
mov
out
adc
sbbl
rclb
xchg
rcll
testb
mov
jmp
jecxz
in
je
mov
out
adc
and
mov
jmp
xchg
pop
cmp
or
mov
int
sti
nop
dec
ja
pop
lds
pop
addb
pop
jecxz
out
fistpll
in
dec
jb
mov
loop
out
xlat
fstps
imul
arpl
test
iret
push
fsubs
dec
xor
test
fstps
lret
cwtl
inc
xchg
xlat
test
aad
cld
repnz
mov
test
jmp
cmp
dec
dec
cs
add
fists
imul
push
imul
inc
dec
mov
mov
shrb
aad
adc
dec
cmp
or
cmp
insb
or
dec
dec
or
jb
adc
out
fsin
sbb
sbb
or
icebp
jmp
adc
dec
cmp
sub
xlat
pop
cmp
mov
aaa
js
sbb
pop
and
cltd
sbb
aaa
or
cmp
pop
xor
mov
shlb
and
ljmp
int3
mov
or
sub
xchg
jp
or
or
or
jp
aad
and
inc
je
dec
movsb
imul
sub
and
addr16
leave
out
arpl
add
mov
push
adc
nop
shrl
sub
idivb
mov
fs
nop
dec
loopne
jp
pushf
jns
jge
cmp
adc
mov
dec
push
leave
in
sbb
lods
push
pop
adc
data16
out
fs
sbb
icebp
adc
or
mov
popa
sub
jmp
xor
aad
int
jmp
sbb
in
pushl
mov
sub
xorl
adc
js
jmp
mov
xor
xlat
inc
das
shlb
xor
gs
loope
ss
movsb
pop
lea
loopne
hlt
and
fs
mov
in
in
mov
mov
das
xor
cmc
cwtl
xor
andl
mov
inc
dec
sub
xchg
lret
call
dec
ss
fcmove
or
lahf
shlb
xchg
aad
inc
sbb
jmp
lods
xchg
mov
jno
add
xchg
movl
lcall
sbb
gs
or
sbb
stc
test
in
push
pop
int3
inc
cld
fcomi
scas
and
mov
mov
enter
mov
les
jo
bound
mov
pop
ljmp
jno
rcl
clc
push
mov
jae
or
mov
push
mov
adc
std
pop
or
repnz
xor
movsl
pop
push
pop
cwtl
push
test
pop
notb
dec
dec
stos
popa
mov
pop
pop
xchg
jns
leave
or
ret
lret
push
and
inc
jae
xchg
mov
movsb
xor
fstps
mov
cltd
push
push
daa
es
inc
in
aam
fs
sub
ds
arpl
je
xchg
jmp
inc
xchg
inc
lock
lret
imul
dec
cmpsl
dec
jmp
push
inc
out
fimuls
out
in
cmp
push
andb
adc
test
orb
and
cmp
pop
mov
into
dec
rcl
or
dec
ljmp
adc
outsb
sub
mov
add
and
and
cmp
xor
and
inc
mov
and
and
cs
andl
lret
fwait
mov
cmp
pop
pop
push
adc
jbe
and
leave
mov
pop
pop
mov
dec
mov
in
sti
xchg
daa
dec
mov
pop
mov
jb
mov
ss
adc
xlat
xor
pop
or
pop
int3
xchg
into
int3
clc
test
leave
hlt
xchg
das
stc
imul
icebp
xchg
out
into
or
jno
test
pushl
xorl
cwtl
cmp
jo
test
cmp
ljmp
popf
xchg
jmp
inc
dec
push
lahf
out
mov
mov
clc
jmp
mov
aad
movsb
pop
mov
pop
out
jnp
lret
adc
sub
push
cmp
mov
mov
xchg
inc
pop
jno
push
outsb
imul
or
sbb
inc
jmp
lahf
stc
call
cmp
hlt
fisubs
or
pop
in
sub
mov
xchg
push
das
das
sbb
mov
mov
imul
fstps
xlat
or
and
jle
mov
cmp
push
mov
jns
lahf
inc
xor
ret
int3
inc
dec
xchg
or
imul
fcmovnb
insl
les
clc
mov
mov
or
inc
add
xor
ss
and
test
mov
jg
insl
cmp
aam
repz
add
dec
pusha
push
mov
mov
dec
out
xchg
scas
daa
mov
add
mov
orl
mov
mov
sbb
mov
lret
mov
or
inc
mov
mov
cs
scas
int3
cld
mov
pop
and
xor
clc
pop
imul
mov
xchg
out
mov
mov
or
push
adc
or
int
fldt
sbbl
rcl
jle
adc
test
rcrl
mov
cltd
fldcw
pushf
lods
push
mov
push
and
mov
nop
and
add
sbb
rorb
mov
cmp
or
cmc
jno
mov
lock
cld
jno
or
aas
cmovl
loope
movsl
mov
decl
lea
lods
ret
loopne
pop
movsl
jne
push
imul
push
push
and
les
pop
fwait
mov
jle
mov
popa
add
roll
mov
mov
mov
pop
test
ljmp
or
and
sub
ja
and
fiadds
pop
stos
pusha
movsb
pop
jl
mov
int
sub
and
lret
pop
stc
push
rcl
cmp
xor
inc
aad
add
or
mov
cs
lea
or
lods
loope
out
mov
rcrl
jns
nop
incl
pop
jb
sub
inc
xor
es
jg
call
repnz
jp
pop
bound
pop
stos
movsl
mov
pop
shll
popa
cmp
cmpsb
xchg
or
orb
out
imulb
data16
mov
loop
pushf
repz
ja
sub
in
xchg
rolb
mov
xchg
and
loopne
push
mov
into
in
mov
xchg
test
aaa
outsl
dec
jns
popa
aaa
push
adc
cmc
xor
lds
scas
in
fstl
and
pop
sub
mov
mov
adc
rol
sbb
sbb
pushf
in
dec
mov
push
shlb
aaa
mov
push
inc
xchg
adc
xchg
and
and
xchg
icebp
push
stos
leave
aad
leave
sbb
jbe
adc
in
or
pop
xchg
mov
dec
cli
push
add
lods
aaa
cs
icebp
adc
mov
or
and
mov
mov
test
pop
xchg
cli
out
fs
add
and
stc
jecxz
add
xlat
sbb
cmp
mov
sbb
fdivs
daa
mov
cmp
push
ljmp
push
data16
or
fs
mov
pop
add
push
inc
add
xlat
mov
cmc
popa
mov
xchg
testb
inc
aam
mov
notl
jbe
sbb
or
mov
pop
pop
insl
or
sti
jae
insl
imul
and
cmp
stos
incl
pop
repz
mov
sub
clc
add
pushf
cmp
aad
cmp
lea
and
mov
test
into
out
sbb
lods
and
rorb
mov
fdivp
shl
and
push
repz
mov
in
adc
fidivrs
dec
xchg
inc
push
aaa
hlt
lret
jo
std
movsl
movsb
ss
inc
pop
xchg
adc
jl
sbb
out
push
sub
and
and
fisubl
mov
xor
lock
repz
ja
outsl
es
push
jbe
or
aas
pop
fwait
push
lahf
shlb
icebp
imul
add
jo
sti
in
bnd
call
shll
jge
xor
test
ret
pusha
mov
xor
std
shrl
aas
fistps
in
rcr
rorl
inc
jbe
dec
decl
mov
dec
mov
leave
mov
xchg
loop
pop
shrb
out
jmp
leave
repz
cli
lods
ds
scas
mov
out
add
push
mov
notl
sbb
ja
inc
fs
fstpl
stos
negl
out
cmpsb
cs
ret
dec
xchg
xor
push
or
scas
cltd
gs
aam
cwtl
ret
sub
stos
mov
add
cwtl
test
sti
loope
and
scas
movsl
out
or
std
maxps
lcall
lret
lods
clc
pop
adc
mov
sbb
cli
mov
and
js
fistpll
dec
rcr
data16
jg
notb
inc
aas
mov
data16
repz
sub
mov
pop
or
das
jns
inc
lock
stos
mov
sub
xchg
jb
xchg
shrb
mov
pop
cld
movl
fs
ret
jecxz
js
cwtl
lods
aad
fistpl
jle
js
jl
mov
testl
pusha
les
js
bound
or
test
adc
sbb
jnp
int
inc
xor
lret
ss
cmc
cmp
xorl
test
ja
cmpl
sbb
movsl
mov
mov
loop
ret
adc
lcall
sub
adc
ret
in
cli
xlat
inc
or
xchg
or
test
fdivl
ja
jl
mov
pop
lret
js
dec
push
sarl
outsb
jmp
adc
jecxz
rcll
inc
data16
jp
movsb
push
out
je
nop
dec
addr16
or
loop
icebp
test
nop
in
sub
jge
mov
jp
mov
jle
in
aaa
add
aaa
shl
cltd
jbe
inc
jle
add
sbb
sub
insl
adc
xchg
sub
ret
int3
outsb
cltd
gs
sbb
loope
pop
sbb
cmp
push
test
mov
cmovno
sbb
pop
or
xor
mov
js
push
call
scas
jb
out
push
cld
lea
mov
lret
mov
test
ds
inc
outsb
arpl
dec
add
or
and
mov
push
popa
inc
xor
mov
nop
jp
cmp
fwait
in
pop
lcall
lret
je
std
movsb
xlat
adc
jo
inc
jne
mov
cmp
xchg
mov
lcall
int
and
aaa
push
xor
cs
add
adc
outsl
xchg
xor
outsb
insb
pop
sarl
jp
inc
pop
cld
pushf
aam
push
pop
push
xlat
cwtl
add
dec
jl
push
out
jo
sar
mov
icebp
test
pop
mov
fxam
or
movsl
mov
jns
push
xor
insl
sbb
mov
popa
pop
jno
or
rcll
sub
cmp
push
pop
pop
dec
in
int
outsb
and
aas
push
loope
push
push
jl
jg
cmp
jp
mov
push
pop
out
ja
cmp
or
and
lods
test
sub
push
flds
jge
sbb
jp
xchg
arpl
lret
inc
push
in
cld
mov
cmpsb
sbb
xchg
dec
adc
sbb
adc
loope
cmp
test
imul
mov
mov
push
push
insb
mov
mov
fs
lods
mov
ss
xchg
in
daa
lds
pop
in
jge
js
outsl
xor
add
fstps
xor
movsl
stc
mov
add
mov
cli
jo
das
movsl
imul
push
in
xchg
jmp
jecxz
pop
push
movsl
or
loopne
and
outsl
mov
inc
les
mov
jmp
add
sbb
mov
mov
cmp
dec
popf
push
jmp
add
xchg
xor
jbe
xorb
popf
pop
push
adc
adc
and
sti
jl
inc
imul
xchg
mov
cli
enter
shlb
sahf
pop
add
jno
cmp
push
or
mov
adc
pop
add
dec
call
mov
pop
dec
insl
mov
mov
adc
mov
aam
push
inc
cmp
punpcklwd
pop
sbb
mov
push
or
jmp
add
mov
add
xlat
pop
cmpsl
push
pop
or
enter
mov
mov
push
pop
aam
leave
inc
iret
adc
bound
shrl
pop
sbb
fwait
push
xchg
push
fwait
jl
xor
hlt
pusha
sub
sbb
mov
pusha
mov
jbe
or
iret
jbe
aad
sbb
jno
cli
adc
sarl
sbb
inc
xchg
inc
and
data16
les
ss
push
dec
and
out
ret
xor
js
xor
pop
icebp
pop
jae
cmp
xchg
cltd
add
subb
jno
xor
movsb
pop
jg
in
mov
jbe
pusha
jmp
cwtl
test
mov
imul
cmp
inc
rcr
enter
xchg
cmc
sbb
push
shlb
pop
cmp
or
and
arpl
inc
cmp
aas
mov
icebp
and
repnz
idivl
push
adc
stos
push
pop
mov
mov
outsl
xchg
in
pushf
mov
push
mov
push
sbb
enter
daa
test
jg
orl
pop
lods
adc
mov
lea
push
and
lea
adcl
stos
popa
jg
enter
mov
fsub
in
sub
dec
cmp
std
push
mov
xor
push
lahf
enter
jg
push
mov
dec
jge
cli
out
int
sub
sub
adc
mov
xor
test
inc
fisttpl
jecxz
jno
mov
enter
testl
xor
test
mov
in
mov
cmp
icebp
cmp
xor
js
jge
pop
or
mov
mov
mov
lahf
xor
dec
mov
jb
frstor
or
mov
xchg
mov
mov
pop
pop
xor
dec
add
aam
xchg
pop
jne
and
fisttps
mov
cmp
xchg
jae
xchg
out
es
arpl
xor
xor
dec
test
stc
push
cltd
adc
lcall
mov
test
jle
pop
lods
push
out
bound
sub
dec
jmp
in
xor
adc
add
cmpsb
sbb
sub
popa
jp
push
mov
mov
bound
add
jl
mov
sbb
adc
sar
pusha
jbe
xor
ja
add
imul
mov
ss
lods
and
cltd
mov
jecxz
pop
xor
fldenv
lahf
in
xor
dec
scas
lods
push
cli
inc
ret
insb
out
mov
adc
xchg
imul
inc
jecxz
dec
es
lret
pop
jbe
and
jo
hlt
and
sti
mov
and
and
mov
mov
or
les
lcall
jae
push
jno
sub
pop
js
xlat
bound
xor
add
loope
add
ror
loope
dec
add
jns
lods
push
mov
inc
mov
loopne
sbb
mov
mov
dec
dec
mov
testb
fwait
push
das
arpl
cmp
ds
xor
xor
lock
pop
enter
je
mov
ds
iret
mov
push
ds
fisubs
mov
pop
push
xor
repnz
ja
jmp
mov
mov
mov
stc
cmc
sub
stos
xchg
scas
mov
sub
jle
cld
or
lret
fstl
push
push
fbld
sbb
sbb
bound
xchg
nop
shrl
repnz
mov
daa
xlat
pop
cmpsl
loope
adc
add
mov
sub
scas
mov
jno
sub
mov
pop
jo
jbe
dec
push
cwtl
les
mov
icebp
je
lcall
jb
cmp
dec
inc
loop
in
stos
jbe
xor
push
out
and
xor
or
xchg
mov
mov
sub
cmp
out
ficomps
dec
fidivrs
fld
and
xchg
jnp
rorb
stos
adc
mov
in
lods
in
push
ljmp
jmp
cmp
inc
gs
popa
pop
push
or
xchg
xchg
mov
js
sub
dec
xchg
outsb
pop
loopne
shrb
decl
jnp
xchg
clc
xchg
es
outsb
fimuls
out
sbb
xchg
dec
test
push
and
scas
inc
sub
mov
out
xor
mov
sub
popa
mov
dec
xchg
test
push
in
cmpsb
ja
adc
xchg
sbb
ss
int3
cmpsb
sub
outsb
aam
jo
inc
sbb
cwtl
out
in
cmp
pop
and
jae
das
fldl
push
shrl
push
or
dec
lea
and
lock
jle
mov
inc
jp
test
lcall
into
inc
fcmove
jecxz
push
pop
dec
sbb
into
pusha
daa
test
mov
loopne
cmp
xor
fldcw
sti
js
insb
mov
aaa
or
inc
sub
fbld
inc
inc
and
cli
xor
and
jbe
jl
jno
repnz
xor
clc
xlat
je
rorl
xor
adc
pop
push
out
repnz
out
mov
dec
add
adc
aad
insb
out
test
mov
bswap
outsb
pop
std
out
or
jb
sbb
pushf
jp
movb
lcall
arpl
mov
jmp
ret
and
lret
sti
rorl
sarl
push
test
mov
clc
mov
ret
fdivr
das
and
hlt
mov
xchg
add
mov
add
out
loop
xchg
daa
fcmovne
add
in
aad
jb
sbb
pop
push
stos
or
push
nop
push
movsb
lods
pop
sbb
ret
mov
imul
add
xor
xor
jmp
imul
xor
shlb
shlb
outsl
pop
pop
leave
das
insl
stos
sub
addr16
decl
aaa
jl
xor
fisttpll
push
jno
xchg
or
inc
scas
xchg
mov
jg
int
sub
pop
js
mov
pusha
cmp
push
les
stos
pop
lods
jp
loopne
adc
mov
nop
lds
and
push
xchg
mov
arpl
pop
ffreep
in
xlat
push
fsubr
clc
inc
mov
leave
xchg
cs
or
push
lods
inc
sub
push
or
pop
jb
mov
lods
stos
or
faddp
add
inc
cmpb
mov
push
mov
pop
dec
push
pop
out
gs
adc
out
xorl
xor
test
int
stc
push
adc
mov
flds
xor
sub
xchg
sub
movsl
mov
or
cmp
shl
push
mov
dec
aam
sbb
in
jno
ss
cmp
testb
test
cmpsb
sub
sti
gs
sub
cld
pusha
repz
jmp
add
imul
clc
cmp
in
sbb
daa
cmpsb
add
adc
mov
insb
arpl
xor
and
xchg
jmp
ss
pop
xor
fidivl
repnz
imul
jo
fmull
or
xlat
mov
push
mov
mov
xchg
sbb
add
fucom
sarl
mov
cmpsb
xlat
jae
cmpb
xor
xchg
mov
iret
rcl
cmpsl
fstl
test
push
adc
clc
scas
movsl
aad
sub
movsl
arpl
jp
cltd
push
cmc
jle
fwait
inc
ds
jp
xor
add
jo
mov
lahf
xor
add
lcall
pop
outsb
int3
inc
push
adc
dec
stos
mov
adc
cwtl
insl
lea
fnstsw
pushf
pushf
adc
adc
cmpl
loope
dec
lods
jmpw
mov
mov
cmc
jp
sbb
aas
pusha
and
movsl
lea
rcrb
xchg
in
and
push
cld
shlb
dec
in
leave
ds
out
out
insl
xchg
lret
imul
add
cmp
into
adc
es
mov
push
into
ja
pop
mov
shlb
add
push
or
lds
and
add
repnz
roll
cmp
outsl
aaa
jno
out
mov
push
or
cmp
add
pop
lock
fsubrl
adc
xor
stos
cmp
and
aam
mov
sbb
pop
mov
xchg
adc
adc
std
cmp
bound
xchg
popf
jnp
jne
repnz
mov
cli
jmp
lahf
mov
cmp
leave
ss
fs
sub
pusha
add
std
sbb
jecxz
mov
xor
ret
neg
lds
dec
xor
dec
or
dec
pushf
push
fdivs
mov
xchg
test
push
leave
pop
pop
sub
dec
xchg
sub
mov
cli
lcall
leave
cmc
out
call
and
adc
cmp
sub
lahf
pop
stos
es
sub
inc
les
mov
ljmp
mov
lds
inc
push
or
mov
lcall
or
mov
lret
je
xor
mov
je
xchg
daa
sbb
add
add
jno
xchg
andb
mov
repnz
arpl
push
in
movsl
xchg
fwait
jge
stos
dec
fwait
and
je
sahf
nop
cmpsl
xchg
lcall
cmp
pop
data16
out
inc
or
cmpsb
gs
jge
jg
mov
push
aaa
mov
aam
mov
lods
mov
pop
push
insb
fmull
fldt
gs
test
mov
sti
addr16
or
add
sbb
enter
adc
push
outsl
mov
arpl
mov
dec
movsb
loope
sbb
lcall
pop
push
in
imul
dec
imul
pop
xorl
inc
sub
push
inc
xor
lods
xor
mov
sbb
lods
push
xor
pop
xchg
inc
pop
clc
pop
cli
sar
inc
dec
jmp
ja
sub
jb
mov
out
daa
outsb
add
shrl
out
out
xchg
or
jo
push
mov
leave
aaa
pop
and
xor
arpl
mov
xchg
sub
lret
cmp
ficompl
mov
into
test
aam
mov
mov
dec
bound
mov
sbb
sbb
cmp
scas
pop
xchg
inc
cmpsb
icebp
jo
lret
sarb
xchg
cwtl
mov
mov
xchg
mov
popf
loop
and
and
cmp
dec
add
fld
repz
sub
lret
inc
pop
fcoms
xchg
xor
sahf
sub
jnp
xchg
les
dec
sbb
push
mov
stc
push
ja
ss
pop
fstpt
pushf
jg
jbe
scas
mov
xchg
add
push
jmp
jae
in
hlt
push
dec
stc
stos
aaa
inc
into
lea
add
xchg
imul
clc
xor
pmaxsw
mov
and
or
adc
cld
push
rolb
out
lahf
cmp
mov
pop
adc
and
cmpsb
mov
popa
xor
or
and
cmp
cmp
cmc
pop
test
inc
mov
xor
inc
lret
loopne
loop
mov
pop
in
cwtl
mov
xlat
cltd
mov
divl
lds
pusha
scas
mov
imul
xor
pop
mov
pop
pusha
xchg
mov
dec
test
push
add
fiaddl
outsl
aad
shll
push
fldl
enter
js
jns
cmc
inc
cmp
mov
int
outsb
out
fists
lcall
mov
pop
lods
pop
pop
es
sbb
mov
mov
scas
or
add
gs
leave
fcmovbe
add
pusha
pop
cs
mov
xor
or
push
jns
inc
mov
xor
mov
ss
sbb
cmc
add
icebp
xchg
push
xchg
fnstsw
sbb
sub
mov
mov
push
and
fnstcw
popl
idivb
je
lcall
repz
mov
shlb
add
jns
jae
mov
into
jmp
push
jo
fcmovnbe
push
es
xor
popf
scas
popf
ret
pusha
inc
add
pusha
adc
push
jle
push
adc
adc
sbb
sbb
aam
mov
adc
pop
ficoms
cmp
scas
mov
mov
sub
and
in
int
mov
faddl
cmpb
dec
mov
icebp
add
jp
inc
mov
xchg
pop
jae
or
flds
cs
sbb
mov
sbb
addr16
mov
loopne
mov
sub
sub
sbb
int
dec
fcoms
fldl
in
arpl
push
xchg
inc
mov
xchg
push
inc
sbb
out
mov
inc
jno
sbb
and
sahf
lds
shufps
adc
push
jae
xor
and
push
in
dec
adc
sub
mov
arpl
add
pop
ret
or
inc
je
jmp
fsubr
enter
pusha
xor
mov
scas
in
mov
mov
not
sahf
xchg
mov
outsb
mov
out
imul
cltd
push
jno
sbb
cmpsb
iret
xor
push
mov
lret
xor
lcall
xchg
lcall
inc
push
and
xchg
test
xor
push
or
jmp
je
cltd
jnp
outsl
int
int
aam
loope
dec
loope
pop
jecxz
das
jp
lcall
arpl
cli
xchg
add
movsl
in
les
leave
cmp
les
imul
cli
repz
shl
ret
xor
pusha
loopne
sbb
jle
in
notb
addr16
mov
xchg
xchg
icebp
imul
aas
aas
fcmovb
lea
lods
fidivs
xor
mov
mov
mov
inc
or
push
negb
mov
out
outsl
jo
adc
subl
cwtl
push
outsl
jmp
or
push
cmp
adc
sbb
addr16
lea
mov
xchg
pop
mov
and
ficomps
test
ret
ficoml
out
rcrl
and
push
pop
loop
add
dec
sub
into
xchg
fstpt
sbb
pop
xor
mov
and
jo
je
pop
sub
mov
pop
dec
cmp
gs
pop
lods
xchg
xor
inc
cmpsl
ljmp
mov
xchg
push
stos
test
inc
push
shrb
xchg
pop
inc
mov
stos
insl
pop
xchg
inc
mov
xor
adc
pushf
insb
mov
imul
test
pop
lds
popa
cli
ret
inc
fwait
push
pop
test
jge
mov
fldcw
pusha
adc
and
cltd
mov
mov
add
fimuls
scas
repnz
aas
daa
js
push
push
stos
loope
mov
data16
das
push
mov
scas
jae
test
enter
lea
aam
sub
rcrb
arpl
adc
data16
jno
add
or
add
or
ret
inc
jbe
clc
subl
fwait
loopne
imul
mov
js
ljmp
push
into
stos
jno
insb
xlat
xchg
mov
lret
iret
arpl
clc
cmpsl
mov
cmp
cld
adcb
push
mov
or
aad
int3
cmp
cmp
nop
fistps
leave
mov
sub
fs
inc
dec
scas
mov
push
jno
jmp
pop
push
ja
and
jge
sbb
pop
lret
cmp
mov
or
and
fbstp
addr16
fmulp
shll
mov
lahf
adc
daa
enter
mov
dec
pop
nop
nop
cmp
mov
testl
cs
jmp
mov
sahf
fmull
jbe
xchg
ret
andb
add
scas
mov
pop
jmp
mov
scas
ja
gs
ljmp
insb
mov
add
push
out
lahf
and
aam
fisubrl
dec
push
arpl
inc
les
cmc
dec
ret
xor
sub
mov
mov
xchg
ds
sbb
and
inc
arpl
cmp
add
fistps
jo
inc
cmp
es
mov
cmp
aaa
scas
test
lods
lahf
inc
mov
or
mov
push
or
inc
cld
iret
cwtl
dec
iret
aad
xchg
mov
mov
out
sub
int3
sub
out
cld
mov
jns
sub
pop
call
inc
dec
lcall
add
les
adc
inc
add
or
imul
fxch
push
arpl
mov
popf
nop
and
jle
clc
hlt
stos
pop
dec
mov
or
mov
lcall
jg
arpl
cmpsl
rorb
std
mov
in
xorb
pop
xor
dec
aad
cmp
in
fildl
loop
inc
aam
es
rorl
aaa
mov
pop
mov
lea
xchg
les
adc
rcl
pop
in
mov
sbb
mov
push
pop
jle
adc
mov
fidivrs
loop
imul
loop
xor
push
enter
adc
dec
mov
out
sbbl
pusha
mov
sahf
xorb
imul
and
and
or
mov
xlat
daa
movsl
jno
xor
pusha
ja
dec
sub
jne
jl
jmp
inc
sbb
mov
sbb
jne
cmpb
mov
and
jmp
mov
cmp
xor
mov
jge
and
mov
and
outsl
sbb
roll
xor
adc
adc
xchg
inc
mov
stc
rcr
les
mov
sbb
stc
sub
adc
inc
inc
mov
shll
and
imul
loop
jne
stos
incl
add
pop
jl
mov
lds
cwtl
mov
dec
addr16
fimuls
js
xor
mov
adc
imul
sbb
nop
inc
sti
cmp
mov
cmp
mov
sti
push
clc
mov
mov
aam
pop
test
test
adc
mov
adc
fwait
imul
xchg
jns
out
and
mov
mov
nop
adc
sbb
or
rcrb
ret
out
jecxz
inc
insl
xor
repnz
xor
fsubrs
cmp
insb
or
test
add
xchg
call
xlat
inc
lcall
sbb
xchg
popa
cmp
fnstsw
xor
mov
scas
adc
popf
push
inc
andb
dec
push
cmpsb
insb
sbb
aas
outsb
or
rol
cmp
xor
inc
sbb
std
xchg
xchg
cli
test
inc
ret
test
sar
pop
inc
push
enter
call
xlat
jle
fldl
push
mov
jne
xchg
xchg
push
ljmp
mov
adc
pop
dec
mov
jp
pop
sub
pop
pop
outsl
jmp
dec
cmp
push
dec
xlat
mov
and
sub
rcrb
pop
outsb
xchg
and
sub
adc
dec
gs
cmp
xlat
ss
or
adc
fld
sub
pop
mov
mov
adc
jg
pusha
push
sbb
adc
cmpsb
leave
adc
xchg
inc
fwait
imul
dec
cmpsb
inc
sahf
pop
cmp
xchg
pop
repnz
push
fdivp
jl
xor
addr16
xor
cltd
jno
adc
out
pop
in
repnz
pop
mov
or
test
adc
loope
decl
mov
call
xor
cmp
repz
subb
into
jge
add
in
adc
mov
subl
mov
inc
arpl
mov
sub
js
pop
mov
push
pusha
mov
cs
sub
sbb
data16
jo
frstor
das
dec
mov
xor
cmp
ja
jnp
lahf
push
cmpsl
lods
rclb
in
mov
and
shrl
mov
and
stos
xor
pop
or
xchg
mov
fs
iret
shrb
in
jns
cmp
mov
fdivl
lods
sub
loope
push
sub
push
push
mov
in
leave
xor
jne
xor
frstor
lret
dec
mov
mov
xchg
xchg
call
mov
stc
das
mov
push
push
stos
aas
dec
mov
add
out
stos
fs
cmp
out
mov
dec
std
sbb
roll
insl
shrl
out
js
mov
insb
les
lods
jle
shlb
sbb
push
add
out
test
mov
je
sbb
hlt
jns
adc
sub
in
mov
imul
mov
adc
push
inc
cli
cmp
cmovns
mov
mov
js
mov
dec
outsl
out
decb
faddp
mov
jno
sbb
ret
dec
and
push
push
jne
xor
mov
dec
mov
push
movsl
out
pop
bound
mov
cli
repz
test
push
dec
push
stos
stos
sub
inc
jns
mov
xchg
inc
popa
movl
mov
jno
xlat
jp
pop
dec
adcl
ss
sbb
and
test
mov
test
jmp
inc
lods
js
push
vunpcklps
cld
jbe
mov
jo
sbb
imul
jle
inc
cmp
pusha
jp
aaa
mov
xor
fptan
push
sti
dec
mull
push
aad
lret
lahf
mov
aaa
mov
cmc
jbe
inc
pop
fdivs
and
fstpt
jle
cltd
pop
push
mov
jns
push
pop
out
inc
xstore-rng
cmpsl
les
fstpl
scas
pop
pop
jle
lods
sahf
popf
aas
adc
xor
lret
std
adc
bound
sbb
rep
cs
daa
mov
sbb
inc
fmull
xor
sbb
xchg
cltd
mov
stc
addb
inc
inc
inc
xor
inc
leave
repnz
aad
testb
das
mov
mov
xchg
cmp
insl
out
cvtps2pd
mov
cmp
aam
shrb
adc
jne
add
shlb
add
sbbl
dec
cltd
inc
cmp
or
adc
movb
mov
lods
inc
xchg
jae
sti
inc
push
push
and
outsl
adc
mov
mov
pop
jnp
mov
ret
ljmp
insl
outsl
sbb
stc
les
ret
jo
lret
sub
jae
add
ds
and
add
mov
sti
filds
sub
push
loope
and
lods
cmp
mov
adc
mov
mov
adc
je
jnp
mov
cltd
frstor
add
push
cmp
fisubrl
pusha
jns
ljmp
les
jo
test
jg
iret
ds
mov
or
loop,pn
iret
orb
lea
int3
popa
cltd
pop
xor
sub
adc
inc
mov
inc
adc
test
clc
xor
psubusw
divb
movsl
push
or
je
movsl
push
lds
xchg
lcall
popf
fidivrl
addr16
xchg
sbb
jecxz
mov
outsb
sbbb
mov
or
mov
cmp
mov
andl
and
xchg
pop
divb
and
sbb
xchg
or
fsubs
in
loop
fnstsw
lea
pop
cwtl
int
mov
and
insl
shlb
test
inc
aas
insb
xor
push
xchg
inc
inc
data16
out
bound
or
rcr
mov
sbb
xchg
sbb
inc
je
jp
xor
add
subl
dec
mov
loope
push
cmp
mov
shl
daa
outsb
mov
add
inc
xchg
repnz
jne
push
sub
fwait
mov
scas
pop
cmpl
enter
xchg
xor
jb
fs
aam
xor
mov
jne
outsb
arpl
sub
les
mov
out
ljmp
fistl
lahf
aaa
sub
divb
inc
lds
cltd
addr16
arpl
mov
add
lret
rorl
sahf
dec
mov
dec
inc
add
aad
push
frndint
je
sbb
sbb
arpl
std
cmp
clc
ja
cltd
sub
cmovs
ds
cmp
in
push
lds
mov
pop
jg
mov
mov
jecxz
push
mov
push
cli
inc
dec
lock
sub
test
cmpsb
das
pop
jl
or
xlat
stc
cmp
icebp
out
lret
pop
hlt
sub
adcl
mov
lret
sbb
mov
jp
jbe
outsl
pop
nop
or
icebp
or
ja
in
dec
jl
cwtl
pop
xor
add
divb
subb
jge
push
mov
jb
test
inc
loopne
lret
xchg
ret
mov
jle
insb
test
shr
jle
outsb
mov
mov
fdivr
sbb
push
inc
mov
push
or
cmp
jge
sbb
push
push
scas
daa
and
sbb
xchg
adc
push
jmp
test
mov
push
lds
sbb
push
mov
xchg
inc
ds
sbb
sub
cmpsl
xchg
iret
xchg
add
in
repnz
hlt
out
je
xchg
enter
push
shll
mov
cmc
mov
les
pushf
sub
mov
add
scas
dec
push
xchg
and
add
ss
dec
xchg
jno
stos
or
ret
or
lret
jmp
adc
jg
and
and
dec
xor
out
pusha
add
popf
xchg
fcompl
adcb
nopl
push
enter
xchg
test
push
divl
pusha
aam
test
or
sub
fdivr
pop
subl
fstpl
lds
add
in
clc
repz
inc
fsts
add
cmp
shlb
mov
pop
jp
pop
loop
mov
bound
stc
sbb
lock
ret
stc
pusha
repz
rorl
or
push
mov
les
es
not
mov
insb
ljmp
and
in
das
repnz
mov
mov
out
sbb
test
adc
lcall
xor
sub
les
inc
sub
sbb
dec
add
das
mov
jno
xor
les
or
xchg
inc
xor
xor
dec
push
faddl
in
inc
lahf
lods
jl
dec
shrl
je
pop
add
std
jl
sub
repnz
data16
and
push
mov
hlt
daa
arpl
and
mov
or
push
ljmp
mov
fisttps
testb
dec
lds
mov
dec
jbe
and
pop
scas
jno
xchg
xor
dec
mov
outsb
sub
cmpsb
and
inc
std
aam
cmp
in
aaa
push
daa
or
cmp
shrb
mov
not
pop
xchg
fistps
adc
xor
int3
stos
fidivs
enter
imulb
cli
jb
insl
push
iret
inc
jp
outsb
cltd
sbb
in
add
push
xchg
stos
mov
dec
in
not
mov
dec
or
jecxz
sbb
xchg
mov
xchg
imull
gs
pop
pusha
outsb
jns
cmpsb
pop
rorl
or
mov
loope
mov
in
bound
rcll
iret
lea
cmpl
pop
shrb
stos
jo
jno
jecxz
sub
dec
stc
xor
stos
js
mov
push
lds
and
mov
xchg
push
into
mov
sbb
inc
pop
pusha
cs
pop
and
inc
lcall
mov
ds
sbb
popa
je
adc
and
rorl
jp
aas
sub
out
mov
cmp
dec
movsl
or
je
repnz
mov
inc
dec
repnz
inc
bound
add
bound
movsb
pop
in
pop
xchg
xorl
xchg
jle
xchg
jne
adc
shll
mov
pop
xchg
or
cmpsb
jae
fadds
ljmp
aaa
fiadds
jno
jns
lea
ficoml
xchg
add
jnp
xchg
mov
mov
jmp
add
push
mov
mov
mov
lds
sub
stos
xchg
aad
sub
loope
ljmp
lret
lretw
fnstcw
xlat
frstor
fwait
int3
mov
jle
sbb
sub
pop
mov
jo
lods
cmp
adc
sysenter
inc
lods
sti
and
xor
cmpsb
cltd
mov
and
xchg
loopne
xchg
mov
pop
out
adc
push
cmc
lahf
inc
clc
jmp
xchg
xor
lcall
cmc
pop
jbe
mov
mov
mov
push
jle,pt
incb
xor
ret
bound
sub
mov
mov
leave
xchg
daa
mov
cmp
test
xchg
dec
mov
push
sbb
jg
fcmovbe
fnstcw
inc
rorl
test
outsl
sub
frstor
xlat
pcmpeqd
out
out
fsubs
sub
mov
clc
imul
push
lret
xorl
sti
mov
or
cmpb
adc
pushf
jp
ss
xchg
jecxz
je
lods
xlat
les
ret
jge
nop
xchg
xchg
jmp
jne
cmp
frstor
add
gs
cmp
shl
imul
fmuls
mov
es
mov
jmp
movsl
ret
mov
inc
mov
je
arpl
and
dec
stos
shrb
dec
lret
movsl
aam
lahf
pcmpeqd
iret
mov
mov
sbb
sbb
repnz
jns
push
push
iret
jo
xlat
psllw
aam
insb
cs
xchg
mov
aam
mov
outsb
mov
or
lea
iret
fs
xchg
inc
and
cmp
arpl
mov
jae
xchg
xor
adc
repz
push
mov
inc
stos
aam
popf
pop
sbb
adc
imul
cmpsb
dec
xchg
pop
xor
mov
ret
push
in
sub
ret
mov
ss
insb
jb
fadd
lods
sub
lods
daa
ja
push
iret
outsl
pop
pop
cltd
out
hlt
aaa
fabs
out
or
push
andb
dec
dec
das
inc
add
jl
test
cltd
sub
out
addl
mov
sub
inc
fstpt
sub
enter
pop
cmp
movsl
mov
xchg
xor
push
and
sub
insb
adc
jecxz
mov
sbb
mov
aam
add
sub
push
dec
out
fnstsw
pushf
push
cmp
ljmp
sub
xchg
aas
pop
pop
fsub
dec
dec
mov
mov
aas
xchg
push
adc
je
and
inc
and
lods
jmp
cmp
sbb
dec
sub
int
scas
shlb
mov
in
adc
jno
add
in
cmpb
stos
adcb
xor
ljmp
call
test
scas
push
xchg
into
orl
stos
jnp
aad
push
sbb
add
xchg
push
fstpl
mov
mov
scas
idivb
adc
xor
mov
push
xchg
push
repnz
leave
pop
xor
ret
mov
cmp
push
mov
std
dec
out
outsl
stc
lods
xor
sub
leave
ficomps
mov
jb
mov
xchg
iret
out
data16
xor
movb
imul
les
cltd
or
cmpsb
or
out
mov
dec
pop
or
jp
js
insb
in
jae
in
mov
xor
movsb
push
adc
ss
pop
test
ud2
adc
mov
in
sbb
inc
rorb
pop
or
in
xlat
pop
out
jecxz
pop
nop
ret
mov
xor
in
dec
scas
and
clc
or
push
ja
dec
sahf
pop
loope
cmpsb
mov
lahf
mov
mov
xchg
lods
mov
jl
mov
jp
and
and
outsb
dec
or
loope
cs
clc
aad
popa
push
cmp
adc
fidivrl
sbb
inc
inc
lcall
push
es
lahf
push
je
push
pop
xor
ja
xor
test
adc
repnz
imul
fwait
arpl
sti
popf
scas
ret
outsl
mov
daa
test
notl
mov
mov
leave
push
hlt
sbb
idiv
push
add
sahf
xor
clc
mov
ljmp
mov
loope
mov
jnp
pushf
out
cmpsl
inc
mov
mov
mov
test
test
call
cmp
out
mov
xchg
inc
in
icebp
push
mov
sbb
pop
jge
fistl
mov
lea
rcpps
jnp
cmp
pop
add
cmpsb
dec
jle
and
gs
mov
dec
add
xchg
or
or
mov
insb
test
mov
ret
imul
xor
insb
and
or
rcll
inc
add
push
int
mov
shlb
jbe
mov
fmulp
call
inc
pop
ja
dec
xor
or
imul
fmull
mov
push
mov
inc
or
mov
add
inc
cmpsb
adc
cwtl
and
fdivr
pop
out
and
adc
stc
out
push
scas
fadds
scas
dec
sbb
out
push
mov
rcrl
add
add
fcomp
add
lea
out
jo
mov
adc
imul
add
adc
add
jge
mov
push
sub
dec
sub
imul
push
mov
sub
imul
idivb
pop
popf
adc
cmpsb
jle
and
inc
jnp
repz
mov
std
sbb
cmp
jnp
sub
ret
inc
test
xor
sbb
pushf
movsl
mov
loop
je
imul
insl
in
or
divl
add
shll
stos
stc
and
xchg
dec
sbb
inc
in
addr16
loope
outsl
push
pop
xor
sbb
loopne
stos
mov
adc
ret
mov
push
pop
xor
jl
pop
lahf
fnstsw
jmp
sub
pop
cmp
lea
inc
cli
flds
adc
add
pusha
adc
cmp
sbb
rcl
sub
jecxz
loope
add
push
push
in
das
cli
jle
out
add
out
jge
xchg
jno
loopne
fs
pop
adc
dec
adc
in
outsl
in
test
lock
add
gs
push
mov
into
int
mov
or
push
outsb
mov
add
cmp
fdivrl
jnp
outsb
lods
dec
out
add
pop
xchg
ja
or
sub
dec
sub
addb
lret
push
push
mov
js
cmp
lock
sti
xchg
sar
pop
insl
dec
shl
loop
mov
jge
daa
int3
test
push
sbb
call
popa
nop
or
pusha
jae
or
negb
ret
pop
pop
fnstsw
xor
dec
roll
lret
mov
lret
das
test
add
mov
xchg
neg
xor
push
rcrb
scas
jnp
push
mov
mov
or
or
xchg
sbb
sti
mov
add
cld
add
fistpll
jecxz
inc
adc
in
enter
and
adc
inc
or
les
cld
imul
xor
inc
pop
add
test
in
and
fwait
dec
in
ljmp
int3
gs
lods
shlb
repz
inc
adc
jge
xchg
lods
push
mov
inc
andb
push
mov
loope
sbb
sbb
adc
or
and
hlt
outsb
sti
ljmp
lahf
aaa
mov
cwtl
out
mov
les
push
sub
jl
cmpl
movsb
jge
lds
sub
stc
loop
jb
mov
cmc
into
xchg
or
cmp
inc
ss
add
push
and
cwtl
ss
outsl
jb
xchg
pop
aaa
fisubl
pop
xor
fwait
adc
mov
mov
pop
insl
sub
xor
nop
shlb
mov
out
add
mov
mov
pusha
into
cld
pushf
push
decb
arpl
dec
mov
xchg
inc
xchg
inc
cmpl
movsl
mov
mov
push
lret
add
loope
mov
xchg
push
jns
rclb
cltd
adc
cmp
sub
lea
mov
adc
add
xchg
mov
mov
push
cld
mov
pushf
jnp
pop
and
sbbb
mov
in
in
in
mov
aas
sbb
push
push
push
mov
mov
jns
lods
xor
mov
gs
fsubrl
nop
repnz
jbe
xchg
rclb
pop
test
xchg
repz
mov
into
push
adc
adc
dec
ret
pop
fdivl
leave
adc
leave
in
stos
pop
ficompl
lcall
push
add
outsl
or
cmpb
insl
pushf
and
arpl
jb
mov
xchg
jg
xchg
imul
aas
fmul
stos
fistps
adc
cmp
pop
iret
pop
insl
test
mov
jae
and
sbb
lods
inc
imul
aad
xchg
add
xchg
in
cli
cltd
popf
pop
or
outsl
mulb
mov
mov
add
xchg
aam
mov
popa
push
mov
js
shlb
gs
or
jle
out
test
shrb
mov
mov
fwait
stc
pushf
mov
adc
pop
cmp
sub
push
in
xchg
nop
mov
add
mov
jl
int3
jmp
in
adc
add
loop
push
mov
not
adc
lret
jge
int
inc
add
mov
pop
leave
jo
jp
je
ja
cli
loop
adc
push
cld
into
mov
fisttps
sbb
cmc
call
and
dec
test
scas
loopne
rolb
jbe
cmp
call
ret
push
mov
nop
jae
jne
cmp
js
lods
mov
jg,pn
shll
inc
in
les
jle
roll
jb
fdivl
xor
add
sbb
add
mov
push
adc
popa
sbb
sub
stos
mov
and
arpl
jns
push
inc
movsl
pop
sbb
adc
push
jle
lock
filds
jo
out
mov
stos
dec
dec
mov
nop
movsl
gs
sti
in
fldl
sub
adc
ljmp
into
sbb
jb
sti
dec
cwtl
test
andb
xor
bound
cmpsl
outsb
out
lret
cmp
inc
mov
sub
jl
mov
jle
mov
adc
into
pop
pop
test
imul
movsl
push
push
test
sbb
fcomip
data16
add
mov
imul
lret
fisubrl
imul
push
dec
mov
pop
and
jmp
add
inc
jns
push
add
popf
insw
jp
aam
push
push
and
sahf
pop
in
nop
push
pop
mov
mov
pop
das
js
adc
dec
dec
cs
mov
inc
sahf
inc
loopne
mov
and
mov
lods
int
mov
jl
xchg
ret
test
and
test
loop
and
mov
fmull
pop
clc
or
jno
pusha
ret
pop
jle
outsl
mov
pushf
test
movsb
mov
push
push
das
and
out
mov
sub
sub
or
roll
pop
inc
and
or
mov
mov
pusha
insl
jb
sbb
and
cmc
fidivrs
push
rcl
pop
sahf
scas
cmc
fsubl
icebp
mov
loope
shlb
fwait
cmc
addr16
aam
ret
mov
leave
das
fidivrl
fldenv
shll
enter
push
cmp
lret
leave
movsb
shr
mov
push
cld
jmp
jle
out
sbb
sbb
clc
mov
xor
mov
pop
sbb
xchg
js
leave
fsubrl
hlt
cmp
je
pushf
sub
dec
cmc
xchg
aad
mov
jmp
addr16
xor
test
inc
cmp
inc
int3
orb
mov
pop
shll
dec
xor
notb
mov
ret
and
add
sbb
loop
adc
dec
test
xor
inc
and
mov
or
or
test
inc
or
xor
ss
jmp
subl
xor
mov
mov
sbb
mov
repz
test
or
add
mov
imul
mov
imul
mov
push
inc
movsl
lret
cld
pop
out
jle
out
inc
loopne
lret
movsb
mov
mov
int3
pop
mov
add
jp
fdivs
pop
popl
sti
fmull
fwait
pop
stos
sub
sub
aam
dec
adc
lds
sub
faddl
cltd
dec
outsl
or
and
idivl
cli
cli
lret
imull
shlb
jbe
push
rcrl
shll
in
pop
inc
in
mov
push
lahf
movl
sbb
adc
push
add
call
out
dec
mov
sub
and
push
mov
cmp
aad
sbb
adc
add
xchg
add
jbe
movsb
test
aaa
inc
mov
cli
pop
lret
and
cmpsl
mov
dec
cmp
mov
jne,pt
push
das
test
xlat
fwait
and
sbb
call
jnp
imull
jbe
leave
xchg
negb
lods
out
xchg
in
scas
push
dec
jle
push
pop
xchg
enter
xor
xchg
sbb
mov
movsb
push
adc
mov
jns
adc
push
cmpb
fidivrs
push
pusha
ficoml
fwait
hlt
xor
push
lret
je
aad
addr16
pop
lret
sbb
iret
mov
mov
ret
and
lock
pop
or
clc
or
lahf
xchg
push
sbb
or
cs
std
jb
leave
aas
int
pusha
dec
inc
sbb
lea
lret
pushf
lods
pop
pushf
inc
adc
cmp
cmc
rcl
mov
or
xor
mov
jl
xchg
xchg
sti
mov
test
mov
loopne
clc
fs
push
sarb
push
mov
sti
cmp
std
adc
and
jbe
cli
mov
stc
sbb
ret
pop
lods
imul
inc
adc
inc
dec
stos
rcr
add
cmp
loope
jle
popa
lds
bound
mov
xchg
and
cmc
pusha
adc
adc
xor
xor
and
inc
or
decl
ret
cmp
add
stos
mov
ss
cmpsl
sahf
add
aam
xor
outsl
sub
fildl
xchg
inc
and
mov
in
xchg
loopne
shrb
push
adc
add
mov
leave
jne
xor
enter
filds
xchg
lret
pop
dec
into
stos
xorb
sub
push
mov
add
xchg
inc
lods
cmpsb
sub
sub
push
jmp
mov
movsb
lods
and
in
push
sbb
int3
fnstsw
xor
stos
inc
mulb
lods
lcall
fs
adc
sub
lcall
or
cld
ljmp
sbb
mov
scas
cld
in
sbb
dec
aaa
and
data16
push
dec
loopne
imul
lret
or
cwtl
repz
fcmovu
push
lds
imul
shrl
dec
pop
inc
test
and
aaa
inc
repnz
movsb
sub
pop
int3
inc
fldt
lret
add
mov
pushf
repz
es
xchg
xor
hlt
mov
rorl
mov
pop
fidivs
repnz
sub
dec
das
jle
lret
or
rorb
in
sbb
lods
adc
fwait
jno
cmp
or
stos
fcoms
inc
push
dec
divl
cmc
jecxz
xchg
jb
jmp
pop
mov
insb
rol
ds
stos
jge
imul
push
xorl
je
ret
lret
int3
dec
jno,pn
rcrl
repz
outsl
loopne
lahf
shl
add
jne
or
js
adc
dec
adc
fcoml
sbb
xchg
xchg
xor
dec
adc
or
movsb
sub
mov
lea
adc
les
cli
mov
xor
pop
mov
sti
jno
cmp
lahf
shll
loopne
sbb
or
add
outsb
sbbl
fldenv
jbe
push
lret
mov
fistpl
cmovs
add
inc
push
mov
test
in
sub
dec
or
cwtl
adc
inc
or
dec
aaa
dec
fsubs
leave
jb
mov
js
mov
fstps
ljmp
hlt
cmpsb
sub
push
adc
sub
daa
pop
push
outsb
sti
and
push
inc
imulb
inc
test
xchg
lret
sub
lret
cltd
in
pop
outsb
cmp
call
int3
pushf
mov
sbb
cltd
jb
mov
rclb
scas
jecxz
push
or
xor
das
dec
push
cwtl
dec
lret
add
xchg
xchg
or
or
pusha
clc
add
and
sbb
pop
lahf
push
mov
popa
call
mov
mov
movsb
subl
ljmp
mov
aas
push
add
addr16
xor
pop
insl
and
mov
loope
sub
clc
jne
mov
mov
repnz
repnz
sub
or
mov
pop
inc
push
push
jbe
cmp
push
int
xchg
mov
or
nop
inc
add
scas
into
inc
lret
je
mov
fcompl
lret
or
loopne
fsubrl
call
stc
dec
push
pop
pop
mov
sbb
pusha
mov
cmc
jo
and
inc
test
imul
sub
sub
insb
aaa
icebp
addb
pop
lock
sub
xor
push
mov
repz
hlt
adc
stos
in
adc
jg
cmpsb
or
fs
icebp
loopne
add
pop
cli
push
rcl
fisubrl
fstl
mov
insb
or
inc
add
fwait
stos
scas
push
add
movsl
jle
mov
add
or
xchg
and
pop
and
add
push
inc
dec
mov
jmp
add
xchg
aas
jg
and
lds
cmpsl
dec
mov
inc
repz
lret
xchg
mov
outsb
int
xor
cmp
loop
pop
mov
mov
xor
adc
mov
outsb
cmpsb
jne,pt
arpl
cltd
ljmp
cmp
push
cmc
mov
adc
sbb
push
dec
scas
in
mov
fidivl
jns
int3
fcmovu
mov
andl
mov
stc
ss
xchg
jl
popf
mov
scas
xchg
jae
icebp
and
ret
lahf
les
mov
sbb
imull
fldenv
xor
in
int3
das
mov
sub
stos
push
fidivl
loop
mov
movb
mov
fldenv
fimull
pop
testl
popf
mov
xchg
mov
std
xchg
inc
scas
clc
cmp
ljmp
in
into
xorb
div
adc
leave
mov
xorl
dec
cmp
pop
inc
ja
test
outsl
ss
enter
xchg
sbb
cmpsb
inc
or
jmp
mov
les
or
push
rorb
mov
xor
cmpsl
fs
cmc
dec
xor
push
icebp
outsb
mov
jmp
jg
roll
aam
imul
shl
mov
fistpll
xchg
in
arpl
out
dec
inc
lret
push
inc
mov
outsl
sub
outsl
fnsave
inc
pop
sbb
mov
out
sub
divb
jne
fcoml
jbe
xchg
adc
mov
jp
xchg
pop
lahf
sbb
jmp
aam
or
cmpsb
fucomi
and
mov
mov
ds
mov
jg
pop
dec
dec
push
mov
jp
inc
sbb
repz
fdivrs
mov
fisubrl
mov
cmpsb
push
data16
shl
inc
and
pop
ret
sub
clc
xchg
mov
ja
xchg
add
ret
dec
and
push
movsb
jle
aad
or
repz
add
mov
jmp
add
in
xorl
push
push
dec
pop
int
mov
frstor
cltd
int
push
push
push
mov
jb
std
scas
and
pop
loope
add
xchg
adc
cs
out
aaa
stos
out
mov
sar
xchg
inc
sbb
mov
push
mov
insl
lods
adc
sbb
mov
js
jge
fs
sub
stc
adc
into
mov
adc
add
cmp
mov
je
lea
push
mov
negb
movsb
sti
inc
movsb
rclb
push
mov
dec
test
xchg
jle
jp
mov
mov
bound
mov
aam
pop
je
fisttpll
sub
add
xor
jle
mov
test
cs
jmp
scas
lock
into
xchg
cmp
stos
or
cmp
and
dec
ret
sahf
int
mov
bnd
aad
aaa
je
inc
and
and
out
bound
test
dec
dec
call
ret
lcall
repnz
mov
xor
mov
je
test
lock
jb
orl
xchg
aam
addr16
je
mov
lods
and
in
jo
mov
out
mov
je
pop
pop
test
in
adc
push
cmp
loop
cmpsb
cmc
roll
rcrl
insl
mov
in
pop
inc
icebp
push
jbe
movsl
lds
test
xor
or
popa
div
testl
icebp
inc
rcrl
cld
test
dec
jne
pop
jecxz
hlt
test
jno
dec
jmp
mov
rcr
ret
sete
cmp
or
cmp
inc
add
cmp
or
mov
mov
xor
xlat
mov
ret
add
ret
stc
addb
imul
xchg
sub
sti
cwtl
mov
fldcw
pushf
psrld
sub
mov
push
mov
or
ret
es
xchg
outsb
je
jp
xchg
js
out
xchg
jnp
sbb
lods
mov
xchg
xchg
xor
punpckhbw
jno
std
movups
rcrl
cmc
movb
push
arpl
push
int
add
fidivrs
fs
imul
stos
lret
cli
repnz
push
emms
cmpsl
insl
bound
jbe
lret
pop
mov
jno
cmp
sub
test
sbb
sti
in
roll
out
cwtl
leave
sahf
push
outsl
mov
test
xchg
inc
test
cmp
addr16
cltd
xchg
pop
cli
in
popf
mov
aas
shlb
inc
xchg
out
push
mov
add
ficomps
push
jecxz
lret
jle
sbb
sbb
fs
sub
daa
loop
idivl
je
or
popa
imul
or
push
loopne
push
sbb
filds
or
mov
sbb
imul
adcb
pop
jl
call
ret
repz
sbb
xor
shr
mov
nop
lods
enter
lea
fadds
push
pushf
jb
jge
jns
in
adc
push
decb
enter
mov
mov
sarl
xchg
mov
out
pop
xor
or
insb
add
imul
jne
inc
jmp
in
das
testl
and
in
mov
ljmp
push
push
fnstenv
and
add
mov
mov
xor
sbb
sub
sub
popa
sahf
or
outsb
pusha
out
mov
jns
out
ja
pop
pushf
bound
cs
mov
mov
mov
imul
imul
cld
ds
jnp
jnp
in
out
cmp
push
push
and
adc
jp
sbb
repz
jnp
fildl
lret
rol
sahf
into
and
or
decb
pop
xchg
mov
out
mov
pop
add
cmpsl
scas
fidivl
inc
add
jbe
mov
orb
aas
mov
sub
pop
shl
sar
push
push
xorb
inc
sahf
cltd
rclb
movsb
adcb
mov
add
push
loope
sbb
mov
popl
push
and
out
inc
sub
mov
adc
cmp
cmp
stc
pop
arpl
or
mov
or
mov
adc
mov
call
std
ljmp
scas
test
push
adc
cmpsb
dec
clc
and
jno
inc
sub
stos
push
nop
jno
lcall
push
imul
loopne
out
movsb
negl
scas
xor
ficomps
shll
jl
nop
add
jp
sub
cmp
lret
lret
test
add
jno
loop
inc
push
lods
add
jno
pop
pop
add
rcll
xchg
test
cmp
orl
jno
fnstenv
add
cld
xchg
out
inc
es
repz
fbstp
push
push
cmpsl
xlat
adc
lock
insb
ficoms
pop
push
sti
or
imul
cwtd
pusha
mov
jae
loop
adc
arpl
nop
arpl
or
shlb
mov
aad
insl
adc
cld
rcr
inc
js
lds
es
mov
les
loop
add
insb
lock
mov
js
push
sbb
rorb
mov
mov
loope
in
in
out
roll
and
ret
and
ljmp
daa
mov
lods
pop
cmp
mov
roll
mov
and
cmp
bound
sub
push
cmc
in
adc
lea
sbb
into
cmc
jge
push
pop
push
or
push
clc
cwtl
dec
xchg
sbb
and
dec
hlt
mov
mov
sbb
outsl
adc
sbb
mov
sahf
les
adc
sbb
aaa
xchg
jg
ja
out
ljmp
insl
jnp
movl
sub
mov
inc
jge
cwtl
mov
or
pop
in
adc
es
stc
fwait
or
mov
pop
mov
jl
xor
pop
sub
add
fwait
dec
push
and
pop
cmp
inc
in
addl
mov
ds
adc
adc
adc
addb
pop
pusha
inc
jo
push
jmp
test
mov
mov
mov
dec
je,pn
test
xor
and
addr16
mov
loop
hlt
or
xchg
stos
and
fcoms
and
sbb
pushf
fstp
and
sahf
aam
rorl
xor
push
dec
js
lcall
jp
pop
xor
mov
sub
push
aad
stc
cmp
addl
mov
cmp
aad
ret
push
or
jmp
jge
insl
xor
mov
or
and
xchg
mov
sub
fidivl
movsb
xor
gs
cli
push
add
subl
in
or
push
jo
filds
rcrl
cmp
or
cltd
push
dec
test
roll
das
dec
jecxz
cmp
push
mulb
decl
imul
lods
incl
stos
xchg
or
adc
xor
mov
or
fnsave
cmp
pushf
inc
fwait
xor
xchg
lds
pop
xor
out
ror
stc
outsl
aas
popa
lds
leave
cmc
les
ljmp
pop
call
sarl
jp
push
adc
push
or
add
jns
cli
sbb
push
repnz
jae
divl
mov
test
stos
dec
dec
fisubs
sti
roll
cmp
mov
movsl
adc
loop
sbb
cmp
stc
cmp
or
add
into
xchg
lds
sub
push
mov
mov
pop
jp
xchg
mov
inc
ret
sbb
xchg
xchg
or
sub
xchg
imul
shl
sti
loop
out
xor
stos
rcr
push
mov
dec
sbb
imul
xor
fiaddl
ljmp
inc
jae
jae
sbb
or
xlat
cmp
pop
rclb
cltd
movsl
pop
and
nop
push
inc
outsb
sti
adc
stos
lcall
in
movsl
sbb
and
sti
insb
movsb
inc
push
pop
lahf
in
daa
jno
pop
loopne
inc
clc
xchg
cmpsl
inc
pop
mov
inc
xchg
out
iret
imul
mov
test
cltd
movq
mov
lods
adc
outsl
cmp
pop
mov
pop
pop
mov
gs
mov
mov
shl
dec
pop
inc
mov
pop
push
inc
mov
pop
call
imulb
insl
ret
sub
mov
cmpsl
out
inc
ret
rclb
push
ret
cmpsb
and
sub
jo
jb
sarb
std
loopne
inc
xor
jge
dec
mov
sbb
leave
or
fdivrl
ja
inc
mull
pusha
xchg
push
stos
icebp
sub
int3
mov
add
and
fisubrl
jp
mov
cmc
dec
pop
aad
xchg
rcr
loopne
or
push
imul
lret
pop
and
lods
ljmp
xchg
repz
mov
ss
lock
pop
sbb
ret
push
push
subl
pop
mov
mov
push
arpl
push
out
lcall
mov
movsl
sbb
mov
mov
shlb
lods
or
imul
xor
cwtl
loop
sub
loope
jg
bnd
ljmp
push
out
push
hlt
stos
xor
js
je
mov
lods
cmp
outsl
bound
pop
mov
mov
jg
ds
xchg
add
test
mov
jle
mov
popf
adc
jl
push
push
sbb
or
fcoms
lahf
shll
in
cltd
pop
clc
push
ret
jb
cmp
mov
push
jno
jecxz
fisubl
ret
jo
daa
add
dec
sbb
cmp
mov
aam
sbb
sub
cmp
iret
jp
jb
fsts
fmuls
shlb
std
cmpsl
sub
xchg
add
scas
mull
pushf
outsb
outsl
dec
jbe
adc
lock
and
mov
sbb
sahf
adc
pop
mov
dec
aaa
mov
inc
push
add
imulb
sarb
sub
dec
xchg
into
cmp
xchg
call
jle
mov
leave
imul
add
and
cmp
xor
sbb
icebp
fmulp
ja
inc
test
int
inc
jmp
sbb
sub
and
rorb
xchg
adc
sub
mov
mov
sub
nop
mov
and
cmp
aaa
into
xor
das
adc
xchg
scas
test
dec
xor
sarb
out
xor
shlb
fmull
sub
mov
jle
push
ds
add
jno
lret
pop
icebp
sub
stc
jne
inc
cltd
jmp
scas
daa
roll
pushf
leave
inc
sbb
punpcklbw
pop
push
in
repnz
inc
dec
scas
pop
mov
aam
mov
jmp
sti
movq
mov
jns
mov
mov
pop
lahf
adc
inc
shr
outsb
lret
or
test
notb
pop
mov
fldl
sub
test
cli
nop
in
add
incb
mov
loopne
push
repnz
ret
pop
sbb
daa
xchg
lcall
jmp
test
xor
push
ret
mov
cmp
mov
and
jecxz
movsb
and
imul
popa
mov
mov
dec
pop
jmp
xor
mov
xchg
test
das
fsts
mov
hlt
mov
or
nop
es
ss
lock
add
add
loope
xchg
push
cmpsb
inc
rcrb
lret
jge
gs
xchg
mov
lahf
outsl
pop
inc
movsb
scas
scas
loope
std
push
push
xchg
push
and
pusha
pop
dec
or
mov
jecxz
cvtps2pi
sbbl
mov
lds
push
add
cs
add
rcr
xor
repnz
mov
pop
cmpb
cmpsb
xchg
lret
outsb
bound
sub
scas
or
mov
dec
scas
jns
sub
sbb
cltd
stc
and
push
jo
mov
lods
adc
push
mov
roll
dec
ret
xor
stos
adc
in
xor
adc
cmp
aaa
shrl
adc
and
pop
dec
out
or
and
push
adc
stos
ret
sbb
jo
sub
xor
or
xchg
mov
xchg
mov
fdivl
loopne
push
fdivrp
jnp
adc
jbe
sahf
mov
leave
sbb
rcl
and
dec
scas
sub
pop
fstpt
sub
cmp
inc
mov
cwtl
and
lods
das
negb
pop
ss
pop
sub
lods
xchg
jg
xchg
and
cmpl
frstpm(287
ja
mov
push
push
jmp
ss
sti
sub
or
jne
arpl
inc
enter
lahf
sbb
out
in
xchg
inc
lahf
out
mov
pop
daa
mov
push
roll
loopne
in
pop
xchg
xchg
test
out
dec
aaa
adc
int
addr16
scas
dec
cmc
ret
aas
mov
add
lahf
rcr
jb
dec
push
bound
adc
cmc
mov
mov
fiaddl
push
lods
push
xlat
inc
push
inc
sbb
cmp
dec
nop
mov
cmp
add
push
inc
adc
xchg
and
pop
pop
bound
mov
shl
adc
bound
jo
dec
xor
cmp
ljmp
lcall
nop
out
cwtl
movsb
push
xchg
cmp
shll
inc
xor
adc
pusha
shrb
lods
loope
mov
loop
dec
or
lcall
std
jnp
dec
fsubrs
pop
and
cmp
mov
sahf
pusha
ret
fidivl
lock
cmp
scas
out
leave
push
stos
daa
popf
cmp
cmp
popa
int3
notl
mov
lret
lahf
xor
cmp
pop
mov
jb
fwait
jp,pt
inc
movsb
mov
cmp
mov
ja
or
mov
lods
call
in
insl
pop
sub
jge
in
sbb
pop
push
xlat
bound
push
xchg
xor
add
ss
inc
cli
mov
sub
jp
fildll
adc
sar
add
xchg
push
in
stos
pop
sti
outsb
int3
jno
mov
pop
sub
cmp
jle
nop
xor
mov
mov
jmp
nop
mov
fisubs
mov
inc
xor
ja
ror
pop
xchg
and
pop
insb
cmp
add
daa
decb
adc
mov
jne
lcall
lods
stc
xor
rcrb
mov
inc
int3
mov
bound
inc
or
sahf
es
xor
xor
xchg
int
mov
int3
dec
xchg
mov
pop
cltd
mov
popf
int3
inc
ret
mov
call
pop
jae
sub
and
sub
cmc
inc
push
jecxz
mov
ljmp
xchg
push
in
jo
inc
cmp
xor
call
jb
xor
mov
stc
jae
les
leave
adc
cmp
ror
pop
mov
jb
sti
in
ljmp
int
ret
add
and
xor
roll
or
sub
in
xchg
inc
out
jo
adc
sub
sub
ret
aas
xchg
pop
mov
or
xor
pop
lret
or
inc
and
sub
adc
aas
enter
fistpll
fwait
sti
arpl
adcb
pop
mov
xchg
sub
leave
jp
fstl
mov
sahf
sarl
push
aas
sub
sbb
cltd
mov
jne
or
or
imul
bound
jns
mov
push
inc
sbb
mov
rclb
pop
rorl
scas
in
call
lea
dec
push
pusha
mov
cmp
sbb
cs
shl
mov
fwait
xor
popa
test
loope
jecxz
cltd
stos
jbe
sahf
std
or
fsubrl
adc
and
addr16
mov
push
sahf
and
rcrl
adc
xchg
or
cli
dec
clc
into
test
aaa
cmp
lea
add
xor
sets
mov
add
push
stos
es
push
loop
je
and
sbb
xchg
movsl
dec
stos
cmp
incb
and
dec
enter
int3
mov
jecxz
shr
xchg
loop
mov
cmpsb
mov
mov
pop
pushf
scas
inc
faddl
xchg
shl
jg
inc
sub
and
cmpsb
stos
aas
cli
mov
mov
xor
jne
add
test
test
inc
movsl
inc
push
pop
nop
insl
popf
insb
cmp
mov
ja
mov
nop
mov
sbb
sbb
lods
xchg
xor
into
dec
clc
mov
insb
sbb
es
mov
and
clc
xchg
in
xor
push
repz
stos
or
dec
lret
lods
lods
pop
lods
xchg
mov
pop
js
mov
push
leave
mov
insb
into
xor
subb
jle
lods
sbbl
mov
pop
or
outsb
movsl
enter
insl
jl
in
mov
mov
jbe
dec
dec
pop
fsubl
push
mov
pop
xchg
imul
add
xchg
xchg
push
pushf
popa
and
push
xor
dec
xchg
cltd
cmovne
cmc
out
add
jecxz
and
xor
fs
xchg
jp
insl
jle
stos
test
push
stos
add
fisttps
loopne
mov
ficomps
lahf
test
and
mov
add
sbb
lods
ret
aaa
in
dec
and
xor
inc
and
pop
sub
int3
ss
iret
fisubl
xor
mov
jl
inc
inc
cwtl
inc
mov
add
ljmp
mov
loop
pop
into
clc
xor
hlt
bound
mov
cmp
arpl
mov
and
mov
cs
ljmp
test
es
sub
cmp
rclb
loope
movsb
jl
xor
dec
imul
mov
dec
call
ljmp
mov
pop
ja
mov
jmp
or
roll
dec
popf
xor
or
loopne
adc
insb
mov
mov
test
enter
xchg
clc
xor
loop
add
xchg
sbb
bound
and
jl
mov
or
cltd
sub
push
lahf
popf
lahf
in
adc
leave
dec
adc
sub
ret
fwait
push
fdivrl
pop
ljmp
sbb
or
int
adc
inc
stos
jns
inc
sbb
dec
out
cmp
mov
sub
movsl
in
in
mov
jmp
subb
xchg
js
jge
out
js
or
insb
call
ja
adc
cwtl
fadds
rorb
dec
dec
inc
imul
pop
dec
xor
ss
sbb
rcr
shrb
xchg
lret
dec
push
and
in
stos
xlat
pop
sub
imul
mov
jo
sub
mov
sub
xlat
xor
jl
mov
les
pop
fdiv
jg
xchg
jae
lods
inc
imul
adc
and
ljmp
sbb
ss
sbb
sbbl
mov
xorb
dec
jmp
enter
jl
xchg
mov
ret
cmp
test
xor
or
mov
jae
mov
sbb
lahf
inc
outsl
xor
fildll
mov
adc
mov
pop
insl
insl
test
js
inc
inc
mov
int
cmp
cli
dec
sete
or
stc
pop
jns
cmp
in
repnz
call
xor
add
inc
jns
mov
jmp
cwtl
mov
roll
or
aam
das
mov
iret
xchg
sub
or
push
sbb
or
enter
push
dec
push
or
push
dec
xchg
sbb
sbb
xchg
push
dec
cmpb
insl
xchg
lock
fs
es
jnp
inc
stos
loopne
mov
inc
insl
mov
pop
cli
mov
push
xchg
loop
repz
sub
add
inc
push
fwait
add
sbb
xor
add
adc
mov
mov
add
and
popa
jg
lods
mov
lock
sub
or
sbb
xor
jae
bswap
imul
and
push
dec
xor
rolb
loop
xchg
jbe
lcall
jle
push
nop
mov
std
mov
xchg
or
inc
sbb
xor
rcll
out
into
and
into
inc
mov
mov
xor
fs
xchg
jge
ret
sub
xchg
call
pop
daa
mov
xlat
je
aaa
cltd
roll
push
movsb
lea
incl
es
mov
dec
leave
sub
mov
shlb
adc
pop
gs
mov
sub
cltd
scas
fwait
int
loope
mov
pushf
pushw
dec
mov
mov
xchg
cmp
cmp
cmpsb
inc
daa
mov
push
and
daa
mov
add
dec
sbb
ret
xor
inc
sub
fs
push
ret
mov
je
pop
push
ja
lods
mov
pop
mov
mov
sbb
add
mov
push
push
leave
jnp
sub
or
push
inc
mov
hlt
xlat
cmp
insl
jae
push
inc
test
push
dec
cmpl
adc
inc
insb
lahf
stos
pushf
push
and
rolb
inc
push
out
push
movsl
outsb
daa
pop
mov
mov
adc
out
sti
push
bound
out
inc
into
int3
fsin
data16
jns
mov
test
das
xor
cmp
in
xchg
les
icebp
mov
pop
push
test
pop
pop
stc
mov
push
sahf
and
loope
mov
fs
popf
fstpt
into
sbb
lds
mov
out
in
shrl
sub
lret
dec
lret
movhps
sub
gs
inc
test
xchg
sub
pop
out
loopne
jno
adc
jl
fisttps
ficoml
or
ljmp
sub
pop
adc
cmp
mov
mov
hlt
push
mov
repnz
push
sub
inc
rcrl
mov
add
imul
sti
mov
pop
mov
aas
lret
lods
push
inc
cmpsl
mov
cmp
ret
mov
cmc
movsl
jmp
jmp
inc
scas
and
xor
sub
ret
popa
pop
jg
testb
mov
mov
fdivp
mov
jge
lretw
nop
sarb
ja
or
xchg
mov
xor
xchg
jge
sub
clc
add
outsl
dec
xor
daa
sub
and
jg
cmp
mov
jb
fdivs
das
loopne
or
aam
adc
xchg
out
xlat
jae
subb
fcompl
mov
lret
lds
push
cmpsl
cmp
mov
imull
clc
movsl
into
sub
and
data16
and
outsl
mov
inc
fbld
mov
mov
jge
test
lcall
lods
movsb
pop
mov
fidivl
add
in
incb
sub
test
enter
ret
xchg
add
cmpsb
inc
xchg
mov
lcall
cmp
mov
rclb
hlt
dec
mov
add
repnz
ja
push
xor
mov
cmp
sbb
mov
shll
sub
and
bound
sbbb
cmc
xchg
dec
jbe
ds
ljmp
outsb
add
pop
aas
xor
leave
sbb
outsl
dec
push
mov
mov
adc
call
arpl
xor
sbb
xor
xchg
movsb
int3
ljmp
pop
test
inc
xchg
gs
cmp
cmp
xor
mov
cmc
out
and
gs
mov
iret
icebp
dec
dec
cmp
xor
inc
or
loopne
aam
repz
cmp
ret
int3
js
xor
add
inc
pushf
repz
push
jno
mov
aas
add
daa
into
lock
ficompl
mov
push
cmp
jb
add
mov
pop
add
push
add
cmc
out
lods
fs
push
fdivl
pop
data16
mov
mov
sbb
sti
jne
xchg
and
popa
test
adc
out
fistps
mov
test
fnstsw
and
jge
mov
xchg
pop
xor
mov
push
pop
cmp
inc
das
push
ret
cmp
mov
callw
xchg
lret
adc
push
xchg
aam
pop
mov
pushf
pop
mov
jbe
stc
mov
fnstsw
add
pop
fs
mov
sbb
mov
aam
sarl
loopne
xor
rcr
and
repnz
les
enter
xchg
jge
mov
pop
xchg
out
push
clc
mov
rclb
sub
mov
add
xchg
mov
cmpsb
mov
iret
or
mov
das
out
cmp
mov
mov
mov
ss
stc
xchg
push
dec
rclb
mov
fwait
jae
xchg
sub
sahf
testb
fistpll
popf
dec
mov
insl
sbb
imul
test
out
mov
lahf
ja
mov
or
and
mov
inc
call
add
add
sub
sub
cmp
hlt
jae
in
dec
stc
mov
fidivrs
rcrl
sbb
and
pop
add
pushf
xchg
or
sub
sub
xor
pop
push
xor
mov
push
sub
dec
or
loope
mov
pusha
sub
mov
repnz
arpl
fwait
inc
pop
inc
push
ret
out
dec
cmp
pop
mov
pop
fcoms
pop
push
rclb
insb
lock
lds
dec
out
add
cmpsl
sbb
shl
lahf
push
jle
addr16
ljmp
test
aad
sub
lods
mov
insl
sbbb
push
mov
lods
jne
cmp
lret
sub
repnz
dec
mov
or
cmpsl
pop
fisubl
xlat
ds
sbb
test
fadds
add
mov
mov
inc
sbb
xchg
jge
fisttps
mov
lods
imul
xchg
mov
sbb
mov
xchg
adc
faddl
sbb
loopne
add
jbe
or
mov
insb
or
cmp
xor
adc
xor
insb
movsl
scas
mov
push
inc
fcmovu
inc
imull
jge
rorb
stc
hlt
fiadds
movsl
out
push
push
idivl
mov
pushf
inc
shr
pop
mov
cmc
mov
adc
cld
icebp
pop
sbb
cmp
mov
jecxz
or
ds
sahf
or
enter
cld
iret
shl
das
js
push
jnp
insl
bound
jge
jns
lods
push
mov
clc
std
scas
jne
repnz
cmp
adc
cmp
out
fmul
in
mov
jae
pop
pop
repz
add
jl
fld
push
add
mov
lret
xchg
lret
outsb
xchg
push
xor
mov
ror
jae
mov
mov
mov
repz
sbb
inc
jne
inc
repz
xor
fcoml
insb
vpcmov
movsl
pop
dec
fsub
push
push
lahf
lods
or
test
push
test
mov
shlb
andl
les
add
pop
jbe
daa
shll
sahf
cwtl
xor
mov
shrb
aad
xor
push
out
scas
shr
outsl
push
mov
shr
jg
int3
cmp
and
sbb
in
loopne
mov
xchg
pop
test
test
into
jo
and
cmp
or
call
cmpsb
enter
lds
das
or
cmp
iret
test
std
xor
cmpsb
sahf
in
rcl
mov
lods
lds
jae
movsb
sbb
mov
out
xor
dec
lea
push
push
xchg
dec
lds
sub
sub
push
mov
jbe
cwtl
cmp
not
adc
mov
jg
shl
push
push
inc
push
arpl
lret
mov
repz
sub
inc
jle
leave
xchg
jae
and
mov
nop
pop
mov
fs
pop
shrb
mov
pop
ret
mov
and
cmpsl
lock
iret
mov
fists
stos
imull
mov
xchg
cmp
mov
xor
fiadds
lcall
push
lock
out
push
ss
push
cmp
pop
scas
sti
and
mov
cmp
in
cld
mov
jbe
shl
pop
pop
mov
mov
popf
lahf
jecxz
mov
into
hlt
xorl
outsl
jo
mov
out
mov
in
shrl
pop
xchg
cmp
push
testl
loope
cmp
cmp
int3
xchg
fnstenv
lea
mov
leave
sbb
mov
fcompl
add
and
jae
xor
add
testl
sbb
mov
in
adc
arpl
int
sahf
scas
xchg
enter
daa
mov
lret
mov
mov
xchg
or
sub
movsl
add
out
inc
fdivl
jecxz
sub
cmp
sbb
xchg
aas
loopne
in
bound
push
jg
iret
and
xchg
leave
ret
push
cmp
in
lret
hlt
push
push
or
inc
sarb
adc
cmc
jbe
cmc
popl
negb
mov
sub
and
hlt
push
fs
sub
or
xor
clc
inc
or
aaa
cmp
jb
divl
and
leave
test
mov
insb
fstpt
mov
cmp
sbb
scas
aam
jmp
mov
cmp
insb
jmp
lds
jnp
push
pop
fptan
xchg
and
out
pop
lret
pop
or
negb
mov
cmp
inc
cmp
sub
lret
push
xor
cld
insb
pop
sbb
iret
jmp
pop
mov
ret
xchg
js
jno
sub
ja
mov
sahf
subl
loope
jge
cld
jg
mov
push
sbbl
aam
loope
jecxz
aas
jmp
jo
mov
fisttpl
xor
clc
gs
iret
mov
mov
jnp
cltd
negl
das
mov
pop
pop
lahf
sub
mov
ret
out
std
repz
cmpsb
push
sbb
push
addl
cmp
and
ljmp
mov
and
adc
ret
pop
int3
xchg
inc
mov
stc
cld
rclb
fwait
mov
gs
pop
xchg
and
fwait
dec
push
push
dec
icebp
and
pushf
movsb
les
mov
xor
cld
add
pop
jnp
dec
scas
imul
into
mov
cmp
mov
inc
inc
and
fdivrs
xchg
push
xchg
mov
sub
adc
mov
movsl
addr16
fisubs
jb
into
or
hlt
xchg
pop
addr16
out
fisubrl
xchg
sub
jmp
fldl
test
test
or
lahf
aad
rorl
bound
jge
imul
data16
or
mov
test
or
mov
orl
dec
cmp
popa
adc
mov
iret
inc
jge
dec
push
adc
or
inc
test
sub
and
mov
xor
daa
jl
pop
cmp
pop
and
int3
in
mov
int
add
pusha
rol
test
out
jl
shrb
imull
or
lcall
pop
roll
jne
bound
jp
fdivs
outsb
xor
js
pop
inc
in
imul
push
cmp
cmpsb
popf
push
xchg
int3
xacquire
jp
out
sub
mov
push
xor
ss
xchg
xchg
test
inc
rol
insl
mov
sbb
in
mov
data16
mov
popa
adc
testb
test
inc
mov
xchg
sub
xor
xchg
aam
lock
xor
hlt
push
jg
sub
inc
cli
cmp
outsl
sbb
inc
sbb
pop
adc
push
xlat
test
fisubl
inc
sti
in
mov
pop
jp
jne
cltd
adc
jg
sub
push
cmp
shlb
cwtl
sbb
and
int
loop
loop
out
pushf
call
incb
xlat
imul
repnz
ret
push
sbb
dec
mov
mov
jge
adc
cwtl
sbbl
cli
dec
scas
adc
push
pop
repnz
icebp
mov
lds
sbb
fs
lock
cmpsb
int
jae
popa
fs
cmpsb
jbe
imul
rcrl
in
js
adc
movsb
mov
jae
xor
js
mov
popf
push
and
pop
lahf
int3
xor
cmp
insb
int
push
repz
xchg
mov
outsl
mov
pop
mov
or
dec
or
sub
inc
cmpsb
imul
dec
dec
xorb
push
xlat
sub
ljmp
or
jne
ret
loope
mov
es
mov
mov
lret
imul
mov
jg
push
and
notl
dec
xor
cmc
leave
pop
lock
les
mov
jae
pushf
mov
push
test
outsb
dec
xor
dec
push
adc
and
inc
push
roll
arpl
mov
popa
or
call
inc
xor
fadd
pop
mov
jae
scas
cmp
into
sub
mov
sub
mov
loopne
or
out
addb
or
ds
push
stos
pusha
push
pushf
add
clc
icebp
mov
sub
stc
or
insl
cli
mov
fidivrl
sbb
movsb
insl
fsts
pop
pop
sub
mov
loopne
out
gs
cmp
rolb
mov
mov
int
and
mov
cmc
nop
mov
push
pushw
or
roll
stc
sub
add
cmp
stos
leave
sti
mov
das
dec
in
insb
call
pop
scas
cmc
mov
cld
mov
fwait
popf
in
jne
mov
rolb
pushf
rcl
cs
xorl
inc
call
cmp
push
nop
pop
cmp
insb
jo
icebp
ffree
xchg
andb
add
gs
fcompl
rorl
and
xor
jle
mov
out
sbb
das
push
mov
push
icebp
sub
sbb
cltd
mov
xchg
cwtl
push
add
sti
imul
mov
pusha
sbb
add
add
jle
into
xchg
imulb
push
leave
xchg
pop
out
cld
mov
sti
jmp
sub
xor
jno
add
push
fdivrl
mov
pop
rclb
out
dec
sub
inc
shl
icebp
ds
jo
out
rcrb
int
out
fadds
jmp
jmp
dec
pop
scas
dec
xchg
xchg
or
jp
fs
push
cld
jns
rorl
jmp
xor
add
jmp
cld
or
cs
es
out
mov
dec
popl
int
dec
cmp
ja
add
push
sub
das
push
movl
sub
sub
faddl
pop
add
orb
inc
jecxz
enter
ss
testl
cmpsl
int
mov
call
movsl
loopne
add
outsl
int
in
insb
mov
mov
xor
pop
clc
ret
int3
in
aad
mov
sub
loope
aas
mov
jne
jno
jmp
pushl
xchg
inc
push
jge
adc
sarl
xchg
lea
add
jb
jne
int3
sub
xor
sarl
mov
repz
es
cltd
push
out
mov
pushf
fisttpll
ljmp
xchg
xor
popa
inc
outsb
scas
shl
add
outsl
stos
dec
xchg
dec
adc
mov
xchg
pop
add
pop
outsb
sti
or
pop
repz
and
addr16
mov
pop
loopne
jp
lds
cmp
mov
or
je
jb
aaa
or
adc
or
mov
rcrb
mov
push
inc
adc
shlb
fs
sbb
or
jl
stc
push
nop
bound
repnz
notl
mov
lods
xlat
cli
adc
mov
rolb
sbbl
fwait
cmp
pop
mov
lret
adc
std
mov
fisubs
mov
cld
les
mov
fwait
mov
fisubrl
fldcw
cmp
sarl
or
in
sbb
pop
in
pop
and
pushf
jl
xor
add
adc
add
lods
orb
jno
es
pop
inc
add
xor
cmp
jno
adc
pop
sarl
imul
stos
mov
aam
inc
call
inc
push
fimull
mov
je
pop
or
add
jb
cmp
cld
sub
push
andl
dec
pop
inc
adc
sub
fs
pop
ja
dec
shlb
scas
repz
pop
dec
fstl
sub
scas
inc
clc
jae
cmp
or
xor
mov
jecxz
fistpll
cmp
call
mov
mov
push
lcall
aam
mov
pop
enter
and
lcall
lahf
popa
lret
xor
lahf
pop
fstpt
sti
call
adc
movsl
xchg
popa
mov
pop
sub
movb
push
fists
sbb
push
mov
rcrb
sar
jb
pop
sub
aas
es
push
adc
rcrl
movsl
and
pop
pop
addl
xchg
leave
dec
mov
sbb
cmpsl
inc
and
clc
adc
aam
sub
inc
aas
lds
mov
icebp
xor
shll
lods
mov
mov
clc
mull
nop
call
push
hlt
shlb
pop
rorb
ljmp
ds
scas
lods
mul
stc
les
xchg
data16
nop
push
adcl
and
dec
and
add
sub
inc
add
mov
out
pop
add
add
popf
jbe
mov
fwait
xchg
lock
shl
aam
or
dec
or
fnstenv
push
mov
and
adc
add
sarb
movsb
add
jp
pop
out
cmp
les
js
mov
lahf
or
jl
add
push
fs
jns
shl
in
int
iret
adc
and
iret
xchg
add
test
sbb
xchg
inc
push
inc
cmp
push
adc
and
cmp
push
mov
mov
cwtl
pushw
aam
into
jecxz
add
jmp
enter
sub
aam
xorl
lahf
loope
push
push
test
mov
pop
add
lret
data16
xor
sbb
cli
pop
test
fdivs
div
jle
repnz
mov
dec
jecxz
jge
es
scas
xchg
sub
sbb
mov
fucomi
xor
test
and
scas
cmp
mov
inc
lcall
ret
push
out
sbb
out
push
add
lods
es
inc
add
dec
addb
in
or
xchg
shrl
add
mov
enter
mov
lcall
mov
adc
stc
and
sbb
sar
xor
into
pop
aaa
out
pop
add
arpl
lret
std
in
inc
sbb
pushf
lock
push
or
mov
and
ret
xchg
jnp
pushf
popa
mov
cmp
nop
pop
mov
movsl
xchg
repnz
or
mov
insl
mov
movb
or
adc
mov
mov
gs
adc
fst
pusha
mov
jmp
adc
and
mov
insb
sbb
sub
shlb
push
nop
jge
add
mov
sbb
pop
in
or
imul
mov
push
mov
pop
out
inc
mov
cmpsl
and
cli
cmpl
daa
mov
lret
daa
sbb
rclb
sub
and
and
sub
sub
adc
adc
shrb
pop
pop
ret
jmp
orl
push
sti
bound
mull
dec
jg
mov
aas
pop
ja
mov
test
adc
xchg
dec
jo
cmpsb
rclb
jne
sarb
int
adc
sub
mov
inc
scas
ja
dec
sbb
jbe
xor
xor
pop
push
pop
out
mov
mov
add
mov
leave
add
mov
pusha
cmpsb
add
xchg
cld
leave
fwait
pop
mov
test
and
cs
andb
mov
mov
mov
cltd
gs
les
xor
jmp
mov
push
push
xchg
or
inc
jo
or
popf
mov
push
mov
lods
cltd
aam
lret
mov
es
repz
lcall
xor
jge
fwait
add
dec
xchg
stos
xchg
push
shlb
xlat
add
xorl
sub
shr
mov
mov
inc
test
add
aaa
mov
inc
push
lahf
xchg
repnz
stc
cmp
int
popa
dec
sub
or
xchg
mov
ror
pop
dec
mov
adc
xor
cmpsl
add
mov
adc
les
test
nop
jmp
ret
scas
les
adc
rcll
jp
scas
mov
fxch
int3
and
addl
mov
cmp
cmc
setne
sub
ret
or
push
and
movsl
add
lahf
adc
xorl
mov
mov
mov
mov
push
test
cli
xlat
inc
xchg
lret
fiadds
pusha
pop
lock
cmp
xor
rcll
fistl
jl
mov
xor
mov
mov
gs
adc
and
lea
repnz
jne
cmp
push
clc
hlt
xchg
cmp
and
and
push
sbbl
fld1
jbe
mov
push
ds
in
popf
jmp
decl
jno
push
out
xor
cmp
vpshaw
daa
and
cwtl
mov
push
jmp
push
les
or
stc
rol
mov
cmp
jp
push
ficoms
dec
dec
push
inc
or
mov
sub
loope
roll
int
lea
cmp
pop
ja
mov
dec
jge
arpl
shlb
mov
adc
add
jne
inc
sbb
mov
mov
repnz
push
lret
dec
push
outsb
dec
loope
xor
pushf
xchg
pushf
rol
mov
fsubs
in
ljmp
gs
aad
mov
out
in
sub
or
cmp
lods
jmp
inc
cmpb
fstpt
mov
loopne
add
pop
dec
push
add
rorl
push
jo
aas
push
data16
scas
iret
and
sahf
repnz
mov
sbb
xchg
push
test
mov
imul
xor
adc
enter
sub
subb
dec
daa
sbb
fidivl
orb
lods
add
int
add
stos
pop
jp
pushl
hlt
shlb
sub
repz
xor
xlat
pop
xchg
dec
ja
mov
push
jle
cmc
or
lods
pop
mov
test
dec
or
mov
inc
cmp
clc
fildll
loope
sub
mov
daa
push
adc
sub
cld
cmp
std
lds
jne
mov
out
mov
jg
repz
addl
sbb
or
add
dec
and
pop
rcrb
jecxz
sub
popf
sbbl
dec
in
pop
or
push
call
push
addr16
inc
popf
lock
adcl
aad
jb
xlat
cmp
xlat
cmpsb
test
ljmp
gs
mov
dec
cwtl
bound
outsb
movsb
nop
js
jle
add
repnz
out
sarl
frstor
cltd
shll
es
dec
fsubrs
ljmp
dec
pushf
jno
inc
jg
mov
cwtl
cmp
mov
iret
filds
in
dec
test
xchg
pop
int
or
dec
xor
ds
xchg
popa
insb
imul
ja
sbb
das
mov
mov
ja
or
cmp
lcall
mov
inc
rol
ret
dec
pop
dec
icebp
mov
inc
into
mov
push
jno
xchg
imul
stos
scas
inc
lock
jmp
jne
inc
jbe
lods
ret
dec
aam
mov
mov
xchg
mov
adc
hlt
xchg
aas
frstor
cmc
or
pop
push
daa
jae
sub
add
std
sbb
xor
std
les
fstpl
adc
push
ret
jbe
stos
shlb
loopne
popa
orl
stos
fistl
loopne
jg
cmp
lret
int
mov
sbb
mov
adc
movsl
stos
lcall
push
fidivrs
insl
mov
shl
push
xchg
out
rcrl
jmp
daa
leave
popf
add
aam
fwait
pushf
or
rorb
mov
jbe
sar
in
sbb
cmc
xor
inc
jns
mov
cs
int
cmpl
jne
dec
jbe
dec
outsl
jecxz
aaa
pop
xlat
cmp
and
fmuls
inc
lret
inc
pop
jge
out
inc
int
adcl
dec
lods
fiaddl
das
test
or
pop
les
notl
or
pushf
dec
dec
pop
xchg
insl
sub
push
sbb
pop
ficompl
repnz
addl
mov
loop
mull
lret
inc
xchg
rcr
insl
fs
leave
pop
jg
hlt
dec
fcmovbe
fwait
loop
push
fcmove
rcrb
dec
adc
push
pop
outsb
mov
xchg
or
xchg
jp
cli
pop
and
insb
xchg
mov
cli
xchg
jnp
inc
or
mov
std
in
jp
adc
mov
mov
push
movsb
sub
testb
incl
int3
sarb
or
mov
sti
negl
cmpsl
and
mov
aaa
or
dec
xor
sub
pop
pusha
mov
xchg
xchg
jg
xchg
lcall
or
sub
xor
insb
mov
inc
lcall
add
js
xor
aaa
jne
aad
sti
mov
sub
dec
sbb
mov
sarl
nop
xchg
mov
push
cmp
inc
mov
mov
es
xchg
mov
bound
fwait
or
int3
lret
xchg
xchg
push
fists
mov
inc
adc
icebp
jmp
push
test
mov
push
rclb
je
cltd
loopne
shll
ror
decb
adc
lea
dec
inc
sbb
lahf
sarb
and
add
xchg
imul
jmp
add
mov
cmc
jnp
testb
push
mov
dec
aas
mov
add
pop
mov
sub
idivb
popf
mov
je
jb
inc
dec
cltd
lock
or
sub
mov
cwtl
ljmp
cli
mov
or
int3
pop
repz
out
mov
add
stos
sub
push
push
or
xchg
pop
movsb
push
and
add
shlb
andb
mov
jbe
test
push
push
out
ret
xchg
sbb
daa
jecxz
int
fldl
inc
in
test
or
loope
gs
cmpsb
inc
adc
adc
mov
out
in
aaa
les
lret
aaa
test
sub
push
sbbl
dec
in
shlb
je
cmp
jg
insb
mov
xor
jecxz
xor
xchg
popa
mov
leave
lock
mov
adc
pop
cmp
mov
and
aaa
cmp
jne
rcrl
xchg
mov
cltd
push
ja
add
insl
and
pop
sbbl
je
sub
repnz
fldcw
inc
aad
inc
rorb
lds
out
arpl
sub
push
push
inc
shll
sbb
into
lods
das
sbb
pop
dec
cmc
lea
popf
fnstcw
or
stc
or
fbstp
pop
pop
daa
arpl
arpl
pop
cltd
jg
sahf
je
lea
adc
cmc
adc
jl
in
and
jo
inc
jo
adc
sbb
out
cld
mov
adc
push
clc
add
aaa
in
add
in
mov
dec
in
jbe
or
iret
add
add
shlb
int
mov
jbe
dec
jne
or
xor
and
or
sub
dec
dec
adc
or
sbb
in
push
gs
sub
aas
xor
outsb
xchg
pop
xchg
or
sbb
jecxz
dec
sbb
push
clc
mov
lds
dec
aas
xchg
mov
and
cs
push
mov
xchg
pop
test
push
jg
xor
add
inc
adc
jne
std
xor
outsl
out
cwtl
jp
dec
jp
add
dec
int3
shrl
ljmp
mov
ret
cmc
push
outsb
xchg
sub
sub
add
push
cmp
and
dec
add
and
popa
pop
loop
clc
cmp
in
dec
in
or
add
out
dec
jns
sbb
ficomps
xor
aaa
lea
in
cmp
jle
pop
xchg
jbe
and
mov
addr16
scas
iret
jge
in
fisttpll
aas
nopl
jmp
cmp
imul
js
jle
test
stc
inc
shl
dec
push
rorl
sbb
cmp
inc
mov
adc
out
dec
arpl
or
imul
cmpsl
push
out
pushf
sbb
pop
fsts
cmpsb
push
pop
rcr
xor
mov
in
test
fildll
pop
pushf
leave
inc
out
push
jae
or
or
xchg
xchg
adc
add
mov
cmpxchg
imul
and
mov
xchg
into
jo
jmp
fs
push
aas
scas
daa
rcl
call
mov
out
cs
jnp
pushl
out
xor
sub
xchg
jecxz
jle
and
mov
cmpsl
lea
loope
js
jns
jb
mov
sbb
loope
adcl
adc
lds
and
ds
fcmovbe
sub
lds
and
mov
xchg
ret
adc
shrb
stos
aaa
sbb
test
dec
cmp
out
lahf
nopl
aad
test
mov
ret
je
bound
and
sti
stos
xchg
das
ret
mov
jecxz
js
cmpl
rorb
mov
add
mov
ffreep
xchg
insl
sbb
mov
push
call
push
out
sti
jae
cmp
repz
and
pop
mov
cld
and
arpl
popf
xchg
push
inc
mov
aad
dec
pop
mov
mov
inc
cmpsl
lret
xor
or
ja
mov
dec
push
adc
fsubrs
jmp
mov
mov
push
rcrl
ja
mov
dec
lods
sbb
mov
ret
fstpl
jb
add
dec
gs
push
mov
in
add
mov
shlb
sub
mov
daa
popa
xor
out
xchg
ljmp
xchg
in
je
sbb
out
in
adc
mov
mov
nop
stc
inc
outsl
test
idivl
cmp
push
jne
data16
mov
fisubrs
push
movsb
iret
jnp
lods
sbb
pop
inc
cmp
inc
adc
shrl
pop
enter
ret
outsl
cli
cwtl
outsl
jp
sub
pusha
hlt
in
sti
push
dec
add
cwtl
outsl
repnz
push
idiv
sbb
imul
stos
sbb
push
sbb
bound
rorb
adc
fadds
push
sbbb
mov
mov
and
or
add
pusha
pop
nop
stc
or
sahf
inc
test
and
cmp
push
std
rcr
jg
xor
mov
test
or
dec
fstl
bound
popf
sti
in
aad
lret
dec
mov
xchg
gs
xchg
and
pop
aas
push
dec
inc
mov
pop
out
lret
iret
jnp
ljmp
lods
mov
jno
cmc
cmove
mov
setg
ficomps
cmp
adc
pop
sahf
popa
sub
inc
cmp
cltd
or
jmp
outsl
cmp
int3
sbb
cmpsl
and
es
mov
mov
xchg
jmp
std
iret
push
loopne
cmp
add
pop
popa
push
mov
dec
lock
or
aam
xor
outsb
aas
in
pop
mov
pop
sbb
mov
mov
add
xlat
in
mov
lahf
call
out
dec
gs
jne
sub
mov
and
clc
xchg
and
scas
inc
fwait
lcall
adc
sub
xor
pop
xor
xor
ret
scas
jns
xchg
lret
sub
stos
adc
xchg
mov
clc
call
cmp
mov
loope
or
ds
call
pushf
mov
in
scas
ret
jle
mov
insb
push
cmc
lods
mov
or
cmp
sub
js
or
stos
jnp
dec
repnz
xchg
movsl
fdivl
in
iret
adc
imul
push
scas
pushf
insb
clc
out
and
out
cli
dec
cmp
mov
out
mov
fs
fisubrl
push
lods
mov
rcrl
jp
pusha
outsl
add
or
push
or
sub
rcrl
shlb
adc
xchg
and
popa
daa
mov
mov
popa
dec
sbb
imul
push
or
iret
cmp
out
dec
add
mov
pop
cmp
out
sbb
adc
jne
sub
sbb
add
addr16
ud1
repnz
sub
ror
mov
cmpsl
push
std
jb
imul
sbb
shlb
cmp
jae
ja
inc
insb
js
fdivl
inc
mov
push
decl
lret
imul
mov
cwtl
mov
xor
jge
xchg
sub
pop
xor
and
es
fildll
jb
lret
fistps
mov
and
test
loop
or
insb
push
loopne
xchg
jne
mov
lods
pop
xchg
or
pusha
out
jmp
jl
push
popa
push
cltd
sbb
psubd
jbe
push
mov
fwait
cmp
mov
jne
lret
and
fwait
sbb
jecxz
iret
xor
sbb
cmp
pop
adc
push
sarb
les
xorb
cmp
mov
mov
testl
push
sbb
test
clc
insl
pushf
adc
ds
aam
push
inc
lret
jl
test
ffree
dec
and
inc
jb
out
sbbb
test
dec
xchg
add
cwtl
xchg
enter
inc
lret
and
js
xchg
mov
sbb
ds
inc
xchg
adcb
int3
sub
testb
sub
adc
mov
jbe
repz
fwait
imul
mov
add
shlb
push
dec
add
imul
cmp
lods
and
xchg
pop
ret
jmp
pop
sbb
jg
push
adc
push
jb
insl
xchg
and
enter
insb
repnz
cld
push
pop
or
xchg
pop
and
xchg
xchg
adc
jns
in
sar
sti
inc
incl
mov
mov
jmp
test
popf
out
cmpsl
mov
mov
scas
fdivl
mov
aad
mov
adc
or
or
lods
inc
nopl
sub
lds
cltd
mov
mov
cmc
pop
inc
push
mov
fiadds
test
aaa
lret
jmp
in
or
jmp
lret
mov
std
fwait
or
aas
mov
inc
leave
cmp
imul
mov
out
xchg
std
mov
sbb
adc
repnz
mov
clc
lods
out
xchg
lcall
fisubs
out
lds
jecxz
jbe
dec
inc
xchg
icebp
jle
xor
ja
nop
add
sbb
push
outsb
cmp
inc
clc
lahf
repnz
int3
push
lds
push
push
popa
fs
inc
out
jns
xchg
aaa
mov
xchg
xchg
movd
and
xchg
addr16
cmp
pop
inc
lret
pop
outsl
outsb
push
test
jmp
push
or
mov
xchg
or
add
ret
cmc
jle
mov
imul
leave
rolb
xor
and
adc
outsl
mov
cmpsl
sbb
lock
scas
clc
adc
mov
mov
shll
loopne
ds
mov
xor
movsl
ret
dec
dec
xor
xorl
add
push
xchg
add
jge
jecxz
mov
loope
jbe
dec
pop
mov
push
jmp
inc
mov
hlt
cmpsl
push
aaa
addr16
or
push
jb
add
ss
add
sti
dec
cs
fimull
cmp
mov
outsl
loopne
add
fs
and
adc
push
cmp
push
aaa
into
jne
inc
adc
ret
nop
push
xor
arpl
sub
push
rclb
pushf
cmpsb
je
fildl
ss
je
loope
push
and
lcall
jmp
sub
jmp
aas
outsl
lds
mov
pop
std
cli
ds
int
pop
xchg
mov
mov
cmpsb
mov
sub
xlat
nop
mov
idivl
out
mov
jle
cli
outsb
jl
fs
dec
cmp
push
stos
inc
sbb
and
xchg
and
jmp
lods
inc
outsl
lahf
pop
mov
adc
push
sub
pop
jecxz
das
sub
sbb
sti
in
inc
int3
inc
add
sbb
add
and
or
mov
addr16
shlb
testl
ljmp
sub
lret
fucom
xchg
daa
imul
fwait
popa
lods
mov
push
fidivs
arpl
and
push
scas
cmp
ret
out
fdivs
int3
dec
and
ljmp
cmovl
stos
pop
cli
or
outsb
mov
lods
orb
daa
sub
mul
movd
loope
in
and
mov
aas
adc
call
mov
lahf
jl
jae
add
pop
out
inc
and
xchg
repnz
data16
std
jge
pusha
cmpsl
xchg
je
sti
inc
lods
ficoms
inc
mov
or
push
inc
fwait
mov
and
pop
gs
add
adc
sub
cwtl
popf
push
inc
cwtl
lds
gs
iret
sarb
mov
cli
cmp
or
pop
xchg
inc
scas
mov
ret
fstpl
stc
mov
in
pusha
test
inc
mov
dec
dec
rolb
call
push
inc
xchg
and
adc
je
outsb
repz
lods
cltd
popa
mov
dec
mov
imul
stos
cs
aaa
adc
fs
rcrb
aad
sarl
sti
cmpsb
push
and
rcll
add
pushf
mov
mov
push
rcl
addb
lcall
push
iret
ffreep
testb
mov
mov
add
mov
inc
and
cmp
shlb
mov
je
push
inc
pop
or
psrad
mov
addr16
dec
or
and
mov
or
icebp
dec
pop
hlt
add
out
ss
shll
cmp
push
iret
fwait
add
std
fcompl
cmp
jl
mov
rcll
scas
aaa
int
cmp
jbe
movsb
cmp
mov
jp
aad
push
jge
les
mov
ss
xchg
mov
sub
cltd
sti
ret
add
xor
cld
lods
jb
ss
ss
mov
jp
sbb
xchg
mov
inc
shrl
scas
imull
push
and
mov
int
jne
pop
mov
aad
cli
mov
lcall
fdivl
mov
aaa
cmp
addb
lds
out
lret
push
cmp
adcl
or
insl
adc
pushf
daa
test
xor
stc
adc
xor
dec
sbb
xor
sub
push
push
adc
dec
xchg
sub
sarl
cld
ss
and
pop
cs
sbb
xchg
cmpsl
jbe
push
loopne
jmp
mov
cmp
loopne
adc
stos
and
fistl
call
inc
je
pop
push
addl
jl
aam
ja
popf
or
sbb
xchg
rcrb
iret
dec
lea
cmc
add
push
push
cwtl
push
cmpsl
dec
dec
sbb
and
es
jp
adc
subb
out
mov
mov
push
xchg
xor
pop
mov
mov
je
fs
pop
ljmp
das
rcr
xor
gs
push
lahf
inc
push
cmp
jnp
ss
adcl
pop
imull
sub
notb
dec
adc
je
mov
repz
addb
movsb
outsl
into
xchg
rcr
xor
dec
enter
xchg
push
mov
xor
push
push
aas
mov
jno
or
adc
sti
and
shrb
mov
lods
xchg
dec
xchg
mov
mov
xor
outsl
push
xor
mov
cwtl
incl
add
aad
and
mov
xor
cmp
cmp
scas
mov
imul
xchg
fbstp
cmp
dec
stos
or
movsb
scas
js
test
pusha
shl
fnstcw
and
push
push
cld
jb
xlat
mov
sbb
scas
add
aad
adc
xchg
enter
scas
loopne
fcomps
cld
mov
sbb
mov
mov
jnp
mov
out
fsubrs
or
mov
sub
int
and
call
add
fs
ss
push
pop
lret
arpl
and
pop
ret
ret
lret
or
jno
adc
mov
mov
into
xchg
in
cmp
shlb
decb
jge
or
pop
das
sbb
push
jns
push
sub
in
movsl
testl
ds
or
push
dec
movsb
push
int
or
pushf
add
scas
pushf
pop
pop
notl
sti
adc
adc
xchg
andb
push
jge
xchg
add
xor
bound
dec
test
daa
outsb
out
dec
ja
cld
sbb
sarb
pop
sub
push
fstps
mov
fcompl
cmp
mov
aaa
mov
aad
dec
dec
jecxz
cmpsl
cmp
shll
add
mov
cmpsb
insb
mov
outsl
or
in
sti
aas
inc
popa
pop
insb
mov
imull
sahf
idiv
lods
or
daa
clc
jmp
imulb
push
add
ljmp
call
data16
test
inc
xchg
or
mov
jo
es
sahf
fwait
loope
adc
xor
imul
or
pop
adc
cmp
jns
loop
pop
mov
push
aad
add
fdivs
and
pop
dec
gs
repz
push
pop
mov
loope
int
and
xchg
sbb
das
lea
mov
lret
push
popf
inc
mov
outsl
xchg
or
aaa
pop
push
push
mov
test
scas
fdivl
outsl
repz
jge
inc
mov
or
bound
je
push
outsb
bound
mov
add
ljmp
push
test
mov
jp
jb
pop
or
lahf
insb
mov
gs
shlb
popa
add
sub
xchg
leave
incl
push
fildl
mov
iret
cmp
pop
add
test
xlat
pop
mov
fsubs
stos
push
sbb
repnz
test
lea
or
es
movsb
loopne
pop
sbb
fisubrl
fdivl
mov
adc
cmp
jp
lcall
xor
shl
aad
lcall
or
in
cmp
fimull
sti
divl
mov
dec
add
jbe
aam
mov
repz
fimull
fwait
lcall
sub
leave
jle
sub
sbb
add
fmuls
xor
push
push
call
daa
push
cmc
addr16
cmc
xor
lock
or
sub
ret
push
lret
movsb
out
xchg
jbe
pop
gs
mov
pop
mulb
outsb
leave
test
sahf
bound
add
lds
mov
fcompl
or
shlb
mov
jb
or
inc
add
cwtl
cmpl
adc
cld
adcl
shr
jge
push
sub
mov
pop
add
push
shlb
repz
out
add
fisttps
aaa
lret
or
jnp
lods
add
cmp
mov
push
xor
fists
dec
dec
jno
pop
and
dec
xchg
sbb
in
aad
roll
stos
xchg
push
inc
test
loope,pt
sbb
xor
xorl
not
push
xchg
jbe
fsubl
and
gs
xchg
inc
popf
pop
jp
inc
fwait
jge
mov
in
mov
push
push
jb
dec
jo
push
cmp
mov
inc
lods
cltd
sbb
xchg
jnp
fstpt
or
sub
add
mov
push
std
inc
int3
lahf
lret
scas
add
xor
mov
cld
xor
adcl
sbb
inc
xchg
rcrl
mov
jb
add
mov
inc
lods
xlat
test
jae
push
push
sbb
cmp
lahf
and
xor
cmc
mov
jmp
sbbl
rorl
mov
and
scas
cmpsl
imull
push
scas
mov
mov
clc
ljmp
inc
adcb
push
or
enter
dec
fdivrl
adc
fadd
cli
gs
cwtl
int
xchg
sub
rcl
push
rorl
xchg
xor
mov
xchg
inc
inc
daa
std
cltd
sbb
imul
cmp
imul
inc
or
pusha
ficoml
das
movsb
fdivrl
mov
subl
mov
loopne
fistpll
dec
pop
mov
sub
int
xor
jecxz
adc
push
adc
lcall
mov
nop
xchg
lea
sti
push
cmp
mov
cmp
xchg
push
sub
push
push
mov
sbb
jge
icebp
js
inc
data16
push
scas
or
enter
push
mov
loopne
pop
leave
mov
aad
aad
mov
jg
fimull
xchg
dec
mov
in
shl
xchg
jnp
jp
lock
push
xlat
scas
clc
mov
push
data16
xor
jo
lea
mov
jl
pop
scas
dec
push
repnz
xchg
push
fwait
jo
lods
fldcw
pushf
mov
imul
test
inc
lret
push
cld
push
pushf
jb
mov
mov
sbb
add
mov
enter
cld
mov
data16
das
or
insl
or
cmp
sbb
fwait
dec
mov
sbb
pop
mov
stos
pop
call
into
xchg
mov
out
aam
inc
dec
fistl
dec
add
pop
or
fdivrl
jle
popa
popa
scas
popa
xchg
push
imul
pop
stos
dec
adc
xor
adc
jge
lahf
xchg
mov
testl
es
mov
negb
add
dec
adc
xor
sbb
mov
adc
insb
add
mov
jge
out
jge
add
je
sbb
hlt
xor
addb
fs
movsl
add
push
movsl
ljmp
lret
mov
mov
leave
jmp
mov
inc
aaa
sub
jbe
xlat
mov
dec
and
add
ds
jno
ss
xchg
pop
fcoms
mov
xchg
adc
sbb
xorl
ret
push
aad
jmp
test
movsl
hlt
pop
xchg
int
cmpsl
lcall
cmpb
std
push
mov
adcb
xor
jns
lea
sbb
lds
and
rcrb
pop
mov
dec
add
push
push
rcll
cmc
lea
pop
dec
movsl
sub
cmp
ret
jge
xor
aad
outsb
xchg
aaa
pop
es
out
jno
loop
cmpl
inc
fst
mov
inc
inc
outsb
fmuls
pusha
mov
inc
repz
mov
imul
pop
push
push
out
and
fstps
add
fiaddl
fcompl
adc
xchg
mov
fwait
pop
clc
mov
jl
ss
scas
jp
fsubrs
cld
sti
movsl
aad
dec
pop
icebp
mov
out
fcmovb
ret
rcrb
bound
stos
push
mov
pop
stos
out
mov
outsb
pushf
pop
repz
adc
xorl
mov
cmp
test
ja
pop
aas
fistpl
mov
xchg
fstps
or
xchg
in
leave
popa
jge
push
adc
addb
ds
xchg
push
nop
cld
cmp
aam
stc
or
mov
sub
dec
ss
add
aad
test
xor
sbb
test
add
ss
cmp
push
movsl
adc
leave
je
mov
ret
push
dec
push
sub
lods
test
les
mov
sbb
cmp
cli
mov
out
sarl
enter
xchg
push
jo
pusha
mov
out
js
js
ret
sahf
xor
dec
insl
repz
dec
mov
and
dec
movsl
jns
ljmp
and
gs
inc
pop
push
jecxz
xchg
mov
mov
xchg
stos
lret
xchg
mov
jmp
mov
in
lods
xor
mov
mov
mov
pushw
mov
sub
pop
pop
jne
dec
mov
mov
xor
popf
pop
cmc
dec
mov
test
fnstenv
les
push
push
insb
inc
pop
mov
sub
jg
mov
cmc
xor
pop
popa
mov
add
js
adc
aam
fnstenv
lods
loop
adc
icebp
and
xchg
ljmp
jge
fldl
jecxz
into
sub
mov
out
lods
or
ss
movb
sub
nop
out
inc
inc
out
dec
xlat
insl
fadds
adc
movsb
or
sub
add
pop
jl
add
sbb
cmc
xchg
bound
aad
ss
cwtl
xchg
nop
cwtl
movsl
div
popl
jo
pop
daa
mov
fiadds
dec
repnz
in
adc
add
jmp
add
fwait
dec
movsl
popf
inc
mov
pop
insl
fiaddl
rol
lcall
test
mov
add
pop
push
cwtl
enter
mov
add
jecxz
jecxz
mov
xchg
hlt
test
mov
bound
aas
sub
adc
push
sbb
push
add
inc
cltd
push
sbb
push
popa
sbb
jbe
sub
or
sub
or
sub
les
mov
mov
arpl
mov
pop
xlat
loop
push
or
and
sbbl
jns
push
test
mov
lods
or
dec
add
cwtl
int3
das
loopne
xor
nop
sarl
jle
xchg
icebp
insb
inc
push
xchg
cld
out
in
mov
popa
push
mov
stc
pop
adc
jne
xchg
in
fisubl
push
in
sbb
sbb
nop
leave
addr16
add
outsb
xor
xchg
adcl
xchg
call
sub
dec
es
rcr
shll
and
out
sbb
ja
mov
test
loopne
mov
adc
inc
das
faddl
dec
pop
cmpsl
jnp
insb
sub
cmp
xchg
lods
add
sub
sub
mov
clc
push
inc
cs
in
jl
jno
stc
cmp
test
daa
loope
and
mov
mov
ds
bound
sub
in
aam
fcmovb
mov
push
fildl
pop
fadds
sahf
sub
add
daa
mov
mov
repnz
lret
jne
xor
das
mov
push
test
call
test
jp
push
or
insl
pop
in
ret
outsl
dec
ffreep
cmp
push
ficompl
aam
ja
inc
lock
insb
les
mov
pop
int
popf
arpl
cmpsl
into
lods
lods
push
mov
nop
leave
imul
add
cmpsl
stos
mov
out
sub
jmp
icebp
add
iret
jns
dec
pop
mov
and
xchg
xchg
imulb
push
push
movsl
push
adc
sbb
xor
pop
or
aas
mov
scas
aaa
push
mov
in
sbb
cld
sub
je
aas
mov
stos
mov
fimull
loop
stos
or
pop
pop
add
sbb
popa
loopne
shl
int3
stc
out
insl
cmp
mov
pop
pop
mov
and
lods
lahf
cmp
mov
out
sub
jp
xchg
daa
push
shl
pop
out
out
ret
xor
push
or
cmpsb
fildll
xchg
adcb
or
xchg
ret
add
addr16
adc
lahf
jg
push
imul
sub
push
int
sbb
arpl
int3
popa
jl
pop
xchg
aaa
adc
iret
or
fldt
stos
sahf
into
mov
xchg
add
orl
pop
push
scas
aas
repz
aaa
mov
sbb
adcl
adc
sbb
stos
inc
mov
sbb
fwait
mov
push
jne
xor
fbstp
loop
inc
cld
mov
dec
jmp
movl
arpl
and
cmp
subb
mov
rcll
mov
mov
lret
loop
ss
jp
lahf
movsb
addb
mov
and
out
add
dec
arpl
xchg
pop
mov
fiadds
dec
sub
fcomi
jl
and
inc
cld
inc
dec
sub
sbb
movb
out
and
mov
orl
insb
aam
inc
jb
pop
xchg
pop
push
or
sbb
xchg
nop
mov
iret
xlat
push
inc
insl
jge
aad
push
dec
cmpsb
cli
sbb
xchg
cmp
scas
xor
push
in
dec
out
out
push
push
out
test
jnp
cmp
dec
mov
cmp
sbb
das
repnz
or
jnp
sbb
xor
xchg
sti
mov
arpl
pop
cmp
mov
pop
mov
lret
aam
cmp
push
stos
arpl
adc
scas
xchg
cmp
sbb
sbb
cli
lar
les
out
andl
push
adc
dec
lea
nop
push
mov
out
fs
out
inc
sub
and
mov
sub
sbbb
push
mov
mov
push
push
push
jnp
cmp
and
pop
or
insl
adc
jmp
push
inc
adc
xor
sub
jne
mov
mov
and
movsl
xchg
loop
sbb
xor
inc
iret
fimull
adc
mov
sbbl
xchg
mov
pop
les
dec
xchg
and
ss
dec
aam
sub
jne,pt
insb
bnd
repz
fisttpll
sbb
imul
jl
ljmp
and
stc
xchg
mov
pop
ja
sbb
mov
add
pusha
push
inc
icebp
mov
mov
scas
addr16
sbb
ret
mov
adc
mov
negb
mov
outsl
out
out
mov
movsl
jge
jbe
mov
lods
push
mov
cmc
mov
into
adcl
or
fs
inc
out
and
and
fdiv
loop
data16
addr16
setns
ret
loope
cmp
mov
jne
in
in
cmp
orb
bound
cwtl
cs
pop
test
adc
test
cmpsb
loop
test
ret
pop
fcmovu
out
pushf
or
pop
lods
cmp
pushf
inc
movsl
lods
outsl
pop
mov
gs
data16
and
jnp
pop
push
sub
lods
jecxz
inc
cmp
shll
out
lea
insb
lock
mov
sub
pop
and
int
mov
cmpsb
push
and
subb
incb
in
outsl
pop
test
mov
rcr
outsb
jp
add
push
fbld
mov
adc
dec
lahf
les
add
and
or
mov
outsl
push
mov
les
jmp
and
jno
add
pop
sub
inc
jnp
jb
xchg
std
imul
stos
test
push
stos
negl
lret
insl
imul
push
gs
jo
xchg
lret
mov
cmp
xchg
sbb
popl
movsb
xchg
jmp
mov
mov
cld
mov
jg
cld
cmp
mov
inc
inc
push
cmp
jmp
mov
sub
lret
cmp
pushf
xchg
or
gs
movb
adc
aad
and
cmp
nop
sahf
xor
xchg
sub
cltd
jmp
out
push
icebp
js
or
sub
test
lock
add
imul
add
cld
rcrl
cltd
out
rcll
push
repnz
dec
inc
dec
pop
xor
sbb
pop
shl
filds
rcr
stc
arpl
mov
pop
pop
dec
mov
fwait
sub
xchg
scas
test
mov
out
fcom
xchg
mov
rcrl
pop
ret
adc
test
pop
bnd
stos
inc
shr
and
jnp
movsl
pop
push
and
pop
ficoml
mov
push
push
cmp
adc
cmp
push
pop
out
test
dec
pop
divb
push
sub
mov
fisubl
adc
icebp
mov
fisttps
inc
mov
jns
mov
mov
fwait
inc
push
mov
test
xor
imul
lret
shll
imul
lea
clc
scas
rcr
repz
mov
adc
mov
insl
sbbl
cmp
gs
pushf
scas
aaa
addr16
adc
shll
mulb
roll
out
mov
imull
xchg
or
cmpsb
adc
cmpsl
lods
es
jmp
xor
push
mov
arpl
cltd
sbb
lret
adc
and
xchg
ret
xor
aam
and
mov
test
xchg
pop
push
jp
and
hlt
cwtl
std
std
xlat
rolb
jecxz
mov
repz
sub
mov
insl
repz
jbe
fistl
mov
jp
or
in
mov
jno
enter
and
pusha
mov
cli
add
ss
bound
repz
xchg
mov
daa
das
jle
mov
pop
push
xor
lock
push
sbb
inc
mov
sbb
hlt
push
xchg
je
jge
jg
dec
test
push
or
call
xor
inc
xor
test
pop
in
adc
cld
mov
and
loope
aad
xchg
xchg
xchg
sarl
pop
push
jge
sbb
out
lcall
mov
cwtl
or
in
and
xchg
flds
bound
and
dec
cld
jno
lds
sahf
sti
xor
mov
dec
popl
mov
mov
into
push
cs
ud1
jne
push
aam
outsb
shll
sbb
idivl
lret
jl
nop
pop
das
mov
cmp
rolb
mov
out
dec
ret
lea
test
pop
xchg
adc
ljmp
push
jmp
and
aam
jecxz
pop
loopne
xchg
arpl
test
push
adc
inc
int
lods
jo
add
add
push
les
mov
lock
xor
insb
sahf
call
in
and
jg
sbb
jns
mul
jge
add
push
bound
aad
pop
dec
or
out
sub
mov
stc
xlat
mov
pop
and
rorb
mov
leave
mov
cs
stc
sbb
push
and
shl
pop
ds
xor
out
fistl
or
aas
outsl
aam
ss
and
adc
aas
test
inc
cld
jecxz
xor
pop
addr16
call
sbb
mov
mov
push
push
leave
mov
adc
outsl
xor
cs
xor
jg
movsb
daa
test
adc
mov
and
jbe
std
push
insb
adc
mov
aam
pop
adc
jle
xchg
mov
ljmp
testb
test
inc
mov
xchg
push
fdivr
out
adc
dec
xor
push
cmpsb
sbb
push
pop
cmp
push
add
push
test
or
fxch
adc
adc
and
cli
adc
mov
mov
cmp
xchg
cmp
les
mov
iret
jle
sub
inc
cmp
sbb
xor
xchg
jo
add
mov
pop
cmp
fistps
out
les
jge
inc
cmp
test
xchg
or
mov
push
andb
outsb
iret
cmpsl
mov
aad
cs
sti
jge
jle
xor
xor
rclb
mov
js
out
mov
cli
xchg
mov
divb
fsts
sub
lds
imul
lcall
adc
push
jo
fidivrs
mov
adc
lret
mov
pusha
xchg
enter
mov
jl
hlt
fmull
jbe
pop
ss
in
jo
and
jb
insb
out
fldl
sahf
inc
inc
xor
ss
divb
mov
leave
scas
nop
pop
add
inc
xchg
sub
cwtl
pop
test
je
pop
lret
jmp
mov
xchg
mov
xchg
sub
cli
cs
nop
cmpsb
fmul
lea
and
sub
push
cmp
xchg
push
sbb
or
test
xor
mov
sbb
add
xchg
xchg
popa
jp
imul
es
pop
test
arpl
mov
popf
jne
xlat
lea
sbb
or
gs
mov
inc
jae
addr16
cmc
enter
lcall
xchg
shlb
into
into
fdivrs
pop
sub
or
loopne
cwtl
sbb
mov
jg
insl
mov
adcb
insl
mov
dec
stc
test
dec
or
sbb
pinsrw
mov
cmp
push
mov
cwtl
xorb
mov
adc
popa
test
lods
sub
jb
adc
shll
dec
mov
js
ret
outsb
iret
dec
stos
test
sub
mov
insl
adc
cmp
lock
out
popf
pop
push
es
sbb
cmc
lret
pop
sub
rcr
jbe
mov
adc
cmp
sbb
aaa
mov
cmpsb
outsb
sub
jne
enter
mov
xchg
ljmp
jae
pushaw
ficoml
std
pop
or
cmp
cmp
arpl
or
out
jnp
lods
dec
sahf
mov
add
jmp
xchg
mov
push
add
fstp
test
xchg
bound
pop
call
insl
cbtw
mov
xor
ja
cmpsb
lds
idivb
push
jo
stos
push
ficoml
or
cwtl
xchg
or
adc
das
or
jg
jno
sub
sbb
xor
push
sbb
insl
jge
mov
int3
sbb
or
fsubl
js
xchg
je
lds
lret
aaa
pop
cmc
add
sub
inc
push
jp
inc
call
rclb
shrb
and
imul
inc
mov
test
adcb
cmp
dec
push
imul
xor
outsb
cmpsb
lahf
jo
xor
adc
mov
mov
pusha
leave
pop
mov
lods
bound
fimuls
jae
xor
and
rclb
lods
cmpb
xchg
imul
lea
push
stc
pop
add
mov
dec
xchg
mov
mov
mov
mov
imull
stc
addr16
xchg
sub
or
and
sub
add
ss
inc
ret
push
jb
mov
leave
cmc
cmp
nop
lcall
sub
mov
xchg
mov
dec
in
push
inc
cmp
jle
sub
xor
insl
jno
pusha
push
outsb
outsl
xchg
frndint
mov
mov
push
xchg
ljmp
ja
frstor
dec
cs
ss
mov
int
or
xchg
jns
mov
lds
movsl
subb
jmp
mov
or
xchg
inc
mov
adc
out
inc
dec
movsl
pop
es
aaa
cmp
loope
sbb
rcrb
call
jno
xor
push
out
mov
xchg
push
inc
adc
fs
pop
shlb
cmc
out
ja
xchg
dec
xchg
xchg
inc
aad
stos
ds
push
mov
mov
xchg
xor
pop
out
fists
mov
mov
in
es
cmp
sub
aad
adc
ja
fs
repz
daa
jo
scas
fisttpl
rorb
adc
push
adc
adcl
pop
mov
mov
xor
cmp
push
add
inc
add
adc
mov
shrl
jle
lret
push
mov
ss
sub
cmp
push
pop
inc
scas
mov
xor
add
and
mov
pop
sub
lcall
enter
shl
sbb
or
lock
stc
scas
or
fldenv
adc
mov
icebp
insb
dec
sub
xchg
mov
stos
xchg
sbb
int
xor
mov
mov
inc
dec
leave
arpl
pushf
jnp
cmp
sti
cwtl
xchg
xor
aaa
fsubrs
mov
sbb
dec
arpl
addr16
insb
lods
lret
sub
imul
imul
cmpsb
popa
pop
pop
test
inc
outsb
test
or
push
addb
sti
pop
pop
push
rcr
sahf
test
cmpsl
add
and
and
xchg
push
pushf
dec
pop
sub
fnstsw
inc
inc
std
xchg
iret
pop
out
subl
inc
jg
cmp
pop
scas
pushf
adc
les
iret
add
sub
cmp
pop
ja
ret
or
jle
stos
stc
faddl
and
mov
xchg
xchg
mov
adc
lods
sub
add
enter
xchg
mov
cmc
mov
cs
fs
jnp
or
cmc
mov
out
loopne
clc
xchg
jmp
iret
pop
mov
add
xchg
push
outsb
arpl
stos
mov
stos
pop
xchg
lret
ret
dec
cld
jle
loop
in
insb
aam
or
sbb
les
push
mov
add
jne
sbb
mov
cmp
lahf
fimull
gs
loope
cmp
rorb
jle
movsl
mov
outsl
inc
pop
cmp
sub
arpl
int3
cmc
cs
adc
xchg
in
cmp
dec
out
mov
cmp
iret
data16
inc
decb
adc
in
sti
in
idiv
sbb
sbb
in
inc
add
aaa
loop
cmp
ret
imul
loope
cwtl
out
cld
or
xchg
packsswb
or
adc
or
outsb
add
push
xchg
in
test
lret
mov
and
je
mov
rorl
and
jne
icebp
lods
cld
push
sahf
enter
addl
jmp
mov
hlt
jecxz
bound
and
xor
xchg
ja
test
mov
cmp
int3
jp
cmp
rorl
rcl
push
inc
popa
adc
out
mov
imul
jle
ret
pop
adc
divb
mov
dec
test
stos
stc
out
mov
scas
mov
nop
popa
add
ss
mov
inc
xchg
pop
in
sub
es
imul
loope
test
mov
shl
shl
lret
addb
mov
test
pop
into
outsl
fwait
push
mov
js
or
stc
mov
orb
imul
sub
add
scas
movsb
mov
pusha
lds
in
jp
pusha
adc
mov
out
jg
xchg
addl
mov
xor
inc
xchg
movl
mov
xlat
fcmovne
clc
mov
out
loopne
push
lock
dec
or
sub
cmp
sbbb
pusha
ja
jl
xchg
stos
sbb
sub
mov
bound
fs
cmpsl
mov
lahf
in
jbe
and
enter
inc
xor
in
sbb
adc
cmc
mov
and
lret
pop
xchg
sbb
push
lds
jmp
xor
sbb
sbb
cmp
aad
cmp
jg
fidivl
loope
loop
imul
addr16
mov
sbb
xor
movsb
aaa
adcl
sub
mov
fs
cld
sub
aas
or
repz
mov
mov
jne
jns
mov
mov
nop
imul
pop
or
mov
mov
inc
xchg
mov
push
inc
adc
inc
jnp
insl
addb
mov
lmsw
dec
ret
gs
sub
les
jbe
aas
aad
orb
cld
decl
jns
movsl
scas
pop
dec
hlt
and
mov
push
dec
ss
jge
cmp
rorb
repz
xchg
icebp
dec
dec
mov
loopne
enter
xor
pop
jne
add
movsb
daa
jae
mov
iret
xor
ja
xor
imul
xor
ja
aam
sbb
xchg
mov
movb
inc
push
insb
lahf
imul
cmc
and
incb
or
inc
std
std
cli
xchg
cmpl
into
mov
lret
fadd
das
cmp
dec
scas
lahf
adc
pop
mov
xchg
inc
lock
jle
jae
add
adc
insb
hlt
lods
adc
adc
mov
rcll
jns
sti
and
inc
xchg
or
adc
sbb
xor
mov
shrb
scas
adc
shlb
cmp
test
cld
jae
in
pop
pushf
ret
arpl
rorl
sub
das
adc
pop
jge
xor
mov
das
addl
mov
call
dec
out
arpl
jg
push
dec
sub
ljmp
aas
mov
adc
fstps
mov
testb
fdivl
lret
and
mov
mov
ljmp
inc
jmp
cs
xchg
push
out
add
cmpsb
iret
repz
je
sbb
and
xchg
push
cmpsl
fimull
inc
pop
mov
rcrb
test
call
inc
mov
sbbl
cmp
outsl
popl
scas
in
pop
xor
xlat
addl
fistpll
adc
push
add
test
enter
dec
in
adc
mov
out
lds
cwtl
frstor
pop
movsl
xor
xchg
ljmp
and
or
and
or
pop
push
fdivs
push
in
push
pop
mov
mov
mov
ret
fcompl
mov
cmp
cld
lret
lds
ret
jne
inc
xchg
loop
xchg
xchg
stc
pop
mov
sbb
jo
gs
imul
mov
pusha
or
pop
sub
xchg
and
mov
add
jo
jbe
pushf
in
outsb
insb
cmc
xchg
test
xchg
fcomps
adc
ret
addr16
pusha
pop
test
jmp
lret
out
loope
and
gs
or
xchg
lds
mov
jmp
popa
int3
repnz
xchg
inc
loopne
push
jecxz
add
nop
popa
dec
ja
mov
cmpl
add
and
mov
add
adc
repz
arpl
lds
out
sub
in
fistpll
pushf
les
call
pop
bound
or
mov
aas
jo
add
xchg
sub
push
stc
enter
jmp
rclb
mov
jecxz
cli
pushl
and
nop
fldcw
mov
lea
dec
mov
in
ja
adc
pop
mov
xchg
test
adc
loopne
mov
sarl
aad
clc
loopne
mov
xchg
sbb
clc
pusha
rcrl
jecxz
lea
pop
add
mov
push
jb
sti
or
aaa
into
dec
in
mov
scas
inc
adc
push
into
push
fdivl
pusha
push
xor
in
outsb
mov
cmp
lcall
xchg
inc
aam
frndint
mov
push
mov
cmp
out
lods
push
das
push
insb
xchg
mov
push
pop
jmp
out
sbb
jne
jb
cld
cmp
in
dec
daa
mov
jmp
insl
dec
icebp
push
nop
clc
out
sbb
lods
add
push
dec
fsubs
loope
and
ljmp
mov
sub
mov
adc
popf
fldcw
popf
push
cmpsl
rcrb
daa
xor
repz
xchg
and
test
push
jl
mov
popf
cwtl
vpsubsb
xor
cmpsl
fimuls
xchg
shr
adc
mov
fidivl
xchg
pop
mov
or
test
shrb
adc
push
addr16
outsl
out
jbe
fcmovb
dec
jae
xchg
push
mov
or
or
imul
pusha
push
arpl
cmp
push
cmpsb
bound
mov
or
and
dec
lock
or
out
les
mov
add
pop
aad
aam
mov
dec
in
xor
add
jno
adc
sbb
shrd
loope
mov
outsl
mov
sub
push
mov
sbb
mov
sarb
mov
push
in
fdivs
xchg
inc
mov
hlt
jbe
mov
andl
pop
cli
out
xor
jmp
test
jne
push
pop
mov
stos
arpl
and
push
lret
sti
cltd
iret
adc
js
cld
pop
repz
cld
into
jmp
sti
movsl
dec
jns
cwtl
xor
rclb
inc
cmc
jno
xorl
pop
sbb
jb
jae
cltd
lock
out
or
xchg
int
mov
and
std
pop
or
adc
movsb
imul
or
mov
mov
jnp
pop
mov
fs
push
jo
jl
pop
push
inc
test
rolb
adc
cs
jbe
push
ds
adc
pop
nop
aam
jmp
or
sbb
in
pop
scas
pop
jns
sbb
push
jnp
cmc
cmp
cli
sub
shlb
aaa
xor
ficoms
push
xor
cs
push
pop
adc
mov
cmp
add
call
or
scas
divb
mov
xor
xor
xor
xlat
inc
lods
mov
push
pop
xor
arpl
pop
adc
sub
pop
sti
popf
int
push
in
out
out
sbb
mov
subl
mov
ret
rorl
lahf
ss
andl
mov
xchg
xchg
xor
jo
add
push
pop
int3
fldl
cwtl
arpl
push
xchg
icebp
pop
jo
fcoml
xor
ljmp
popf
movsl
lea
fimuls
call
dec
mov
jno
js
adc
adc
repnz
ret
jg
flds
and
sbb
aam
or
add
shrl
out
push
fisttps
mov
cltd
push
jge
js
mov
sbb
repz
ljmp
insb
je
clc
pop
sarl
jp
shrl
or
pop
mov
shr
xor
push
bound
push
rolb
fstps
nop
xlat
inc
pop
call
imul
ret
cltd
cmc
push
shrl
mov
mov
cmp
adc
inc
push
fiaddl
paddusw
gs
stos
out
cmp
sub
sbb
pop
mov
cmp
add
nop
mov
out
jns
add
dec
mov
std
cli
jo
mov
flds
lea
cmp
loop
test
aaa
sbb
jne
aam
adc
sbb
mov
out
jle
xor
int
sti
ss
or
jnp
push
scas
sub
dec
mov
mov
rcrb
inc
or
aam
cwtl
cmp
cmp
inc
rcl
out
arpl
pop
add
xchg
pop
dec
repnz
ja
lcall
adc
sbb
clc
push
inc
cmpl
dec
aam
pop
aad
xchg
lcall
in
loopne
push
in
scas
mov
lahf
jnp
fs
lods
mov
sub
les
pop
add
imul
sub
je
nop
push
lahf
xor
out
call
jns
mov
pusha
and
mov
movsb
push
mov
ljmp
inc
imul
popfw
ss
outsl
es
call
stos
add
ljmp
inc
and
test
fs
cmp
mov
pushf
out
sbb
xchg
scas
test
pop
out
inc
or
inc
imulb
adc
pop
sbb
push
mov
cld
xbegin
popf
xorb
test
les
and
add
rclb
stos
jmp
iret
xor
pushf
loope
loopne
ds
dec
sbb
add
jge
pop
negl
cmp
sbb
push
adc
jle,pt
movsl
sub
dec
cmc
rcll
inc
shlb
fcoms
push
scas
clc
xor
inc
lret
fidivrs
insb
cmp
jecxz
cmp
repz
imul
cmc
xor
pop
nop
adc
loope
mov
in
cmp
and
aad
fbstp
shl
and
rolb
adc
outsb
push
xor
cli
out
data16
lds
test
adc
inc
pop
call
xchg
cmp
mov
inc
inc
jl
mov
push
xchg
gs
imul
inc
xchg
mov
stos
sbb
pop
xchg
repz
inc
in
inc
sbb
xlat
dec
sub
imul
adc
scas
notb
push
ljmp
and
test
int3
fisttps
ret
or
icebp
sub
and
and
imul
xchg
outsb
or
adc
cmpsb
lods
out
push
loop
fs
dec
xor
mov
dec
mov
scas
sbb
pop
dec
cmp
ret
cmp
jge
out
dec
or
inc
pop
popa
daa
xor
xchg
xchg
push
lods
aad
cltd
sub
fucomp
loop
mov
in
lret
rorl
andnps
mov
dec
xlat
xor
pop
nop
mov
sbb
jne
addr16
das
push
scas
cmp
cmc
outsl
jecxz
fnop
mov
cmp
int
pushf
repnz
jmp
cmpsb
or
adcl
sbb
ljmp
cmp
push
and
mov
dec
and
aas
mov
stc
imul
inc
mov
sbb
push
sarl
and
sub
jae
adc
lahf
aaa
shr
std
addb
insb
dec
jo
jae
mov
sar
sub
xor
out
adc
add
and
mov
cmp
jo
clc
comiss
inc
into
sub
ss
mov
iret
push
outsl
std
out
push
ret
popf
inc
jmp
xchg
push
dec
xor
sub
and
fwait
xchg
scas
fldt
sbb
pop
sub
xlat
sub
sub
stos
add
int
dec
inc
xchg
pop
les
sahf
dec
mov
or
mov
add
mov
movsb
pop
clc
jge
shl
add
lock
mov
addr16
cli
js
push
aam
sbb
call
jnp
pop
cmp
enter
inc
test
mov
jl
enter
sbb
xchg
arpl
and
jecxz
add
cmpsl
sbb
push
leave
xchg
nop
mov
adc
sub
push
inc
lcall
fs
jae
loopne
out
movsb
push
dec
shlb
mov
addb
pop
clc
cwtl
outsl
sbb
mov
and
jb
test
push
outsb
push
mov
insl
push
or
xlat
rcrb
jnp
inc
lret
pop
loopne
mov
xor
mov
inc
xchg
stos
stc
insb
out
cmp
ss
jl
sbb
mov
add
dec
push
loopne
pusha
dec
data16
outsl
int
pop
pop
mov
es
cltd
inc
push
rol
mov
push
in
push
inc
push
add
cmc
and
jl
out
jno
mov
rcll
push
inc
fwait
ja
mov
cld
add
lock
jb
outsl
mov
sub
subb
pop
inc
and
jne
inc
mov
cmp
mov
jg
pop
outsb
cmp
mov
nop
sbb
xor
mov
aad
and
popa
lods
inc
push
insl
xor
lret
add
cmp
jmp
inc
push
ficompl
cmc
ficoms
xchg
stos
jno
dec
mov
push
jg
jmp
in
mov
sub
sbb
push
cmp
pop
cld
push
mov
bnd
outsb
adcb
sbb
jnp
repz
adc
pop
stc
loope
and
pop
cmp
insl
clc
out
fldl
push
addr16
lret
stos
in
push
aad
xchg
lcall
loop
add
imul
daa
cli
dec
inc
pop
xchg
subb
cmp
stos
repnz
dec
cmp
push
sub
inc
lock
pop
fldcw
cwtl
cmpsb
xchg
fildl
adc
cmpl
sub
out
inc
idivl
jmp
pop
push
mov
mov
icebp
pop
dec
stos
push
cmp
in
xchg
inc
sbb
jl
scas
push
lods
popf
jb
sub
push
fsubrs
sti
lods
scas
mov
jge
lods
rcr
das
add
imul
mov
stc
mov
push
push
jnp
adc
sbb
push
loope
arpl
imul
loop
or
jae
mov
and
xlat
gs
ret
orl
cld
pop
imul
cwtl
add
ja
ss
jae
jno
imul
mov
mov
jnp
enter
ret
repnz
rorb
or
addr16
fistpl
mov
jbe
movsl
adc
mov
mov
pop
add
imul
jl
inc
and
mov
dec
jecxz
test
arpl
mov
xor
leave
pop
stos
loop
loop
mov
push
or
xor
xor
add
mov
jl
pusha
cmp
adc
in
lea
ret
mov
ljmp
std
in
dec
push
and
add
fwait
push
xchg
and
call
out
or
push
pop
leave
movsb
and
adc
inc
cwtl
dec
sysenter
and
or
or
ss
icebp
jne
rorb
adc
inc
popa
or
xchg
mov
inc
xchg
mov
lds
pop
push
cmpsb
xchg
outsb
aas
jecxz
mov
sub
vpcmpeqw
mov
and
nop
imul
loopne
js
cmp
scas
notl
mov
push
mov
dec
mov
pop
aad
bound
xor
leave
sbb
js
pop
jne
out
aaa
sub
shll
fcomi
jmp
js
stos
bnd
ds
gs
loopne
pushf
fdivr
sub
jmp
icebp
arpl
or
dec
insb
lock
bound
xchg
js
pop
shr
adc
jo
cmp
xor
cwtl
rcll
adc
mov
and
scas
js
fistps
push
dec
popf
jl,pn
inc
xchg
push
mov
mov
jl
or
inc
hlt
cmc
xchg
pop
test
xor
or
cmp
xchg
out
outsl
jmp
dec
pop
ret
or
test
xchg
mov
mov
cmp
sub
fimuls
inc
push
call
popa
push
test
or
mov
inc
lods
xchg
cltd
test
pop
sub
pop
xchg
cmc
cmp
xor
xchg
repnz
push
cwtl
cli
add
cs
pop
sbb
xchg
mov
pop
xor
sbbl
and
out
imul
push
dec
push
xor
jmp
cmp
jp
cmpsb
stos
pop
clc
clc
xchg
lcall
push
add
gs
aam
push
loop
sbb
lret
stc
pop
jge
lahf
int3
jecxz
lret
fsts
xor
dec
push
aaa
loop
aam
movsl
into
mov
or
and
adc
mov
mov
sbb
aad
cmp
add
std
rcr
lock
xchg
cmp
cs
arpl
outsl
ja
adc
add
xor
popf
jecxz
fbstp
push
mov
rcl
dec
cmp
jo
push
call
fdivr
rclb
sbb
dec
cmp
mov
adc
cltd
insb
cs
arpl
in
enter
fdivrs
addr16
inc
and
mov
into
fwait
mov
int3
or
fisubs
call
mov
inc
sbb
push
push
push
xor
mov
mov
jbe
adc
ds
add
mov
lea
test
pusha
iret
and
mov
movsb
je
jmp
jecxz
aad
inc
or
sbb
roll
push
adc
mov
aad
inc
sbb
neg
fnstenv
mov
mov
mov
outsb
out
lods
sahf
push
push
push
scas
jmp
xchg
mov
push
aaa
sbb
mov
xchg
jno
rclb
inc
daa
push
or
test
cmc
xor
mov
mov
clc
lods
push
adc
push
xchg
rcrl
pop
movsl
inc
mov
in
and
insb
ret
mov
loopne
int
je
sub
int
pop
inc
pop
mov
inc
bound
pop
jno
sbb
hlt
stos
add
add
push
lar
inc
mov
seta
das
bnd
insb
sub
xor
jno
add
push
out
loope
and
int3
fcmovu
fsubrl
hlt
ljmp
aad
enter
and
mov
fistpl
fcompl
push
outsl
imul
pop
or
shrb
or
sub
mov
lods
sbb
adc
adc
fisubl
jp
xor
cmp
lahf
or
dec
or
lret
rcr
movsb
imul
jae
je
js
loopne
dec
push
ds
lods
mov
or
mov
jge
mov
jmp
dec
mov
lods
test
mov
mov
ret
mov
aam
int3
popf
pop
sub
icebp
jo
inc
fsubl
iret
mov
xchg
dec
add
stos
sub
xchg
dec
adc
inc
shlb
out
add
rcll
lcall
imul
or
inc
mov
rolb
push
xchg
cmp
mov
loop
cmp
and
ja
out
jmp
data16
inc
or
iret
pop
mov
pushf
fcmovnbe
testl
pop
xchg
in
mov
cmovae
mov
jmp
adc
popf
dec
sbb
jo
and
mov
orl
jbe
enter
ror
dec
mov
aam
or
fmull
adc
add
lcall
cmp
xor
incb
test
out
popa
enter
xor
popa
pop
das
stos
push
fiadds
cmc
movsl
subb
int3
dec
shrb
add
clc
sub
rcpps
aaa
inc
pop
int
or
and
call
mov
fadds
es
stc
movsb
int3
xchg
dec
dec
inc
cltd
xor
decb
clc
sbb
fadd
cs
add
rcr
mov
lret
pop
out
pop
pusha
cltd
inc
arpl
je
xor
popa
movsl
pop
dec
js
call
and
jmp
xlat
jl
repz
mov
fmuls
and
dec
outsb
arpl
inc
push
fistl
lock
xor
xor
xor
inc
and
push
pop
mov
mov
lahf
mov
lock
gs
push
mov
adc
mov
mov
repnz
sbb
fisubl
addr16
iret
ljmp
ljmp
fsts
imul
adc
imul
icebp
cmpsl
imul
test
dec
ss
fistl
add
jg
inc
xor
shlb
jns
call
push
in
mov
xchg
aaa
and
popa
pushf
and
mov
stos
push
aam
dec
mov
outsl
arpl
or
push
pop
xor
push
push
mov
xchg
dec
mov
mov
outsl
push
nop
scas
push
cmp
adc
stos
in
idivb
jmp
jmp
push
fdivrp
cmpsl
or
push
mov
push
cs
dec
add
popf
cmpsb
mov
dec
popf
fisubrl
inc
lods
mov
movsb
jae
xchg
mov
data16
das
jne
adc
push
mov
push
lcall
mov
nop
or
mov
stos
jne
mov
inc
daa
addr16
and
xchg
push
fnstsw
jg
ljmp
gs
gs
in
test
mov
loop
pop
std
cmpsl
sub
test
jmp
xchg
mov
mov
dec
push
mov
shll
mov
mov
std
jmp
xchg
pop
and
mov
leave
or
pop
dec
ja
xor
adc
push
push
shlb
aad
dec
sbb
iret
jno
mov
ja
sbb
les
pop
mov
in
xor
push
fcom
mov
lods
sti
pop
aam
lods
dec
test
sub
add
ss
cmp
xor
inc
sti
cmpsl
dec
ficompl
fidivrs
xorb
pop
mov
sbb
pop
mov
lea
test
add
mov
je
fimuls
movl
mov
fstp
xor
pop
mov
xchg
fstps
jne
mov
jo
jge
xchg
inc
shll
js
std
popa
adc
inc
data16
testl
fst
pushf
adc
sar
fidivrs
pop
ror
imul
sbb
mov
pushl
push
push
sub
lahf
loopne
in
mov
jmp
or
aam
push
in
jecxz
jns
mov
inc
push
push
insl
xor
lret
ret
loopne
push
dec
fldt
jg
loop
sub
push
push
test
push
imul
or
repz
outsb
sub
jmp
push
std
inc
bndldx
scas
addb
jbe
shll
mov
lea
mov
addb
and
push
add
iret
sbb
dec
iret
adc
shl
push
leave
aas
shlb
cmpsl
iret
out
sbb
fists
or
pop
mov
xor
sub
sub
cmpb
push
mov
sar
lds
push
roll
popf
adc
fstpl
adc
xchg
xchg
lret
sub
xchg
aad
loope
add
mov
mov
dec
imul
out
into
fadd
sub
cmpsb
mov
or
mov
fs
ret
pop
out
cwtl
int3
popa
pusha
push
cmc
out
ja
icebp
aaa
into
int3
inc
lock
mov
cmp
iret
mull
cmpsb
xchg
xor
das
std
ljmp
out
sbb
push
shll
lret
test
ret
stc
cmc
fucomip
mov
fidivl
clc
push
jp
jp
jns
add
xor
outsb
fwait
arpl
or
cli
in
inc
int
cwtl
jae
lods
adc
cmp
add
int
push
movsb
or
enter
jns
jno
or
arpl
lds
xchg
jle
enter
xor
sub
popf
scas
inc
test
adc
sub
les
aad
in
jge
les
iret
cmp
cltd
xchg
pmuludq
mov
imul
or
scas
stc
xor
testb
lods
dec
into
stos
cmp
jecxz
push
xor
mov
out
push
push
push
fidivs
sti
or
prefetch
or
push
aaa
push
notb
sub
jl
leave
fwait
ds
popl
icebp
push
lcall
imul
lcall
inc
dec
jecxz
lret
lret
xor
push
jae
xchg
xchg
and
jl
outsb
je
in
mov
push
jge
push
cmp
add
mov
pushf
mov
cmpsb
pushf
adc
out
mov
jns
lds
push
xchg
aam
jo
add
xchg
popa
or
lods
dec
jge
pop
sahf
pop
dec
dec
scas
lea
dec
mov
sar
mov
dec
insb
or
insl
in
push
lcall
add
je
xchg
outsb
jg
iret
imul
push
push
xchg
repnz
pop
pop
push
iret
lret
cmc
int
push
dec
pop
or
mov
in
adc
push
push
jb
loope
fisubrs
push
popa
imul
sti
lea
stos
fwait
or
sti
cli
cmp
mov
aam
pop
cli
pop
stos
test
pop
cmp
push
fdivrs
out
cwtl
xchg
cs
lds
sub
mov
adc
cli
jle
pop
add
push
loopne
sbb
jecxz
fsubl
shlb
jmp
cmp
jo
mov
sar
adc
test
adc
lock
push
fstps
pop
les
xchg
nop
mov
push
sub
test
or
xor
push
popf
cmp
adc
ret
jmp
loope
push
cltd
or
mov
test
pop
lahf
mov
and
add
mov
mov
testl
shlb
rcrl
inc
je
cmp
push
vpaddq
add
orl
pop
in
cmp
pop
or
out
filds
rol
aaa
xchg
sarb
stc
nop
insb
into
xor
int
iretw
inc
pop
bound
mov
clc
dec
fwait
shrd
cld
sub
push
mulb
in
or
xor
pop
push
push
jns
clc
mov
std
xor
inc
push
pop
fs
jne
ja
mov
pop
mov
repz
pushf
jmp
and
pop
or
mov
aam
cltd
dec
nop
sub
mov
loopne
xchg
fidivrl
dec
roll
push
mov
cld
icebp
adc
out
cmp
jbe
lcall
cmp
aaa
es
mov
dec
in
jge
aam
in
in
decl
std
lahf
and
inc
mov
sbb
inc
addr16
xchg
insb
jb
adc
and
scas
enter
pop
adc
nop
call
testl
int3
pop
or
lret
and
or
mov
add
inc
dec
sbbb
or
sarl
sub
outsb
and
aam
std
adc
add
push
in
es
jmp
lods
or
cmp
dec
sarb
jecxz
clc
dec
test
pop
ret
sbb
pushf
or
fprem
adc
mov
leave
lcall
and
mov
xor
mov
pop
cld
call
push
movsb
cmpsl
cmpl
xor
fwait
movsl
repnz
lahf
gs
mov
and
lcall
testl
test
mov
mov
jb
or
mov
cmp
fadd
xchg
mov
into
sarb
jge
adc
sub
xor
push
addb
xor
xchg
scas
cmp
stos
xchg
je
cmp
insb
shlb
sbb
test
push
lods
clc
xchg
cmp
adc
ljmp
out
mov
sub
add
xchg
jle
in
js
xchg
hlt
cltd
shll
lahf
xchg
loope
outsl
sti
mov
in
jae
add
lds
lods
das
out
pop
in
icebp
cmpsb
cmp
loope
mov
xlat
es
inc
mov
push
mov
scas
fwait
dec
xor
lock
xchg
sbb
push
mov
cld
push
jecxz
stos
sbb
xor
push
jge
pop
cmp
cmp
lahf
test
xorb
mov
pop
fwait
adc
fiadds
pop
aad
lret
and
loopne
aas
xor
mov
lods
dec
cs
shrl
das
pop
xchg
add
mov
lret
lods
jae
aaa
or
push
adc
add
divl
push
adc
insl
lret
std
add
and
sub
xchg
and
sbb
gs
or
fsubrs
aas
arpl
sbb
imul
xchg
andl
or
pop
adc
negl
or
sbb
xchg
stos
lret
mul
or
ffree
imul
adc
and
pop
add
imul
cld
pop
push
mov
loop
shrl
push
mov
adc
fiadds
inc
push
in
cmpsl
dec
push
adc
xor
std
sub
insl
add
mov
xchg
popa
mov
xchg
jo
fcmovnb
scas
sub
test
ficoml
inc
sarl
cmc
mov
sti
jno
lret
xchg
push
inc
mov
popf
fsubrl
aam
ficoms
jae
repz
stc
stos
addr16
mov
popa
aam
pop
popa
jg
hlt
shll
cmp
repz
loop
pusha
popf
fistpll
ss
push
sub
outsl
test
mov
push
jae
or
cmpsl
add
imul
cmp
sub
test
test
ja
mov
sbb
stc
jecxz
jg
xor
fxch
fstps
ja
pop
out
pusha
sbb
xchg
inc
cmp
scas
test
les
ss
mov
dec
sbb
jecxz
xor
push
dec
mov
aad
je
dec
testl
xchg
mov
cmp
rorl
ja
add
inc
add
pop
ja
or
dec
and
es
lahf
repnz
int
fwait
cld
dec
ficoms
mov
cmp
sub
inc
mov
lret
inc
sti
cltd
jle
repz
rolb
fstl
cli
in
xor
adc
ja
mov
divb
sub
loopne
adc
stos
or
jno
mov
pop
mov
enter
frstor
je
fsubrp
int
outsl
dec
cmp
aad
push
sbb
and
in
daa
dec
test
push
movsl
out
outsb
test
jge
sbb
in
fs
push
gs
ror
lcall
outsl
clc
lea
sbb
mov
outsb
xchg
xor
jne
mov
cmp
lahf
addr16
scas
cmp
sub
les
push
adc
push
fstps
iret
fistpll
loope
jp
sbbl
xor
lcall
lcall
rorl
mov
jne
push
push
jo
sbb
ret
cwtl
popa
fsubrl
cmpsl
cmp
cmp
mov
sti
stos
lahf
pop
cmp
fwait
aam
out
adc
push
sub
mov
dec
xor
add
test
dec
insb
push
jl
ds
mov
arpl
in
mov
std
movsl
fstpl
pop
xor
jge
rorl
pop
inc
xor
pop
into
jns
mov
cld
jmp
nop
cmp
cld
cld
fcoms
aam
inc
pop
mov
xor
xchg
pop
push
in
outsb
mov
sti
test
sahf
movsl
in
imulb
mov
movb
test
aas
push
xlat
cli
mov
lcall
sub
fs
fisttpl
lret
mov
rolb
scas
mov
aam
and
fists
inc
or
pop
lods
mov
fcom
jns
cmp
imull
popf
loop
cltd
scas
ficoms
jle
clc
inc
sub
lcall
pop
fists
fucomip
loopne
xchg
lds
stc
pop
inc
adc
in
pop
gs
xchg
and
add
add
dec
add
repnz
in
rorb
or
xchg
in
and
das
mov
xchg
into
inc
pop
mov
or
call
inc
imull
cmp
mov
sti
out
test
cmp
mov
out
shl
sbb
les
fnsave
sti
int3
loopne
aad
mov
adc
jnp
pop
xor
lea
pop
aad
dec
dec
into
pop
jge
mov
sbb
test
sub
adcb
fs
pop
mov
stc
xchg
sub
push
ja
dec
xor
loopne
es
push
mov
sub
push
outsl
mov
dec
into
mov
in
inc
in
ret
sub
ret
outsb
add
lods
popf
inc
int3
sub
jle
or
or
lea
loope
test
push
adc
pop
decl
jbe
and
sbb
jb
addl
sbb
pushf
mov
mov
js
aam
cli
xchg
into
lahf
dec
ffree
pop
cli
xchg
jae
mov
jne
cmp
or
idivb
jge
repnz
push
loop
ds
lods
jecxz
lock
shrb
sub
shl
cmp
mov
lock
data16
sub
clc
fnstsw
dec
clc
inc
mov
out
xchg
dec
xchg
ss
cmpsb
sarb
ret
cmpsb
movsl
incb
aad
pop
xchg
mov
mov
adcl
pusha
push
jecxz
or
clc
adc
mov
pop
popa
popa
pop
jp
push
nop
mov
push
sbbl
add
sarb
pop
and
jle
push
ljmp
mov
cwtl
out
pop
or
push
mov
cmovl
xchg
push
sti
test
mov
push
dec
inc
movsb
inc
mov
ret
addb
out
leave
das
addb
mov
jmp
stc
in
xchg
cs
dec
lcall
test
repz
and
sbb
int3
jmp
mov
cwtl
cmp
push
xor
andb
je
dec
jg
loop
nop
iret
xor
daa
jae
xor
sti
call
mul
xor
mov
rcrb
sahf
adc
fs
cmp
les
mov
inc
xor
adc
pop
cmp
int3
mov
pop
push
lcall
mov
push
dec
or
orb
addb
out
shl
rol
pop
fcoms
rolb
mov
push
bound
jle
push
sub
outsb
into
mov
adc
shl
sbb
or
mov
adc
push
adc
lods
mov
and
xor
inc
and
or
dec
rorb
idivl
xchg
and
aaa
loopne
stos
aam
xchg
push
xor
adc
in
jg
cmp
in
sub
loopne
ftst
aad
aad
aaa
out
xor
mov
or
lods
stos
add
repnz
das
rcll
push
mov
cmp
xor
mov
cmp
jmp
mov
sbb
in
lahf
sub
and
mov
ljmp
xor
xlat
sbb
lods
sub
jbe
mov
lret
repz
insb
jae
jmp
aad
and
dec
adc
pop
dec
mov
insl
or
cmc
pop
int
jae
sbb
xchg
jl
ror
mov
ja
pop
xchg
and
js
imul
or
es
movsl
pushl
xchg
rorl
fs
cltd
leave
dec
iret
xor
xor
in
mov
push
lock
clc
and
lret
sbb
pop
sbb
insl
out
loope
aad
das
mov
repnz
fsubrl
inc
push
lea
jne
dec
or
cmp
mov
test
hlt
jg
loop
dec
push
test
test
adc
cwtl
cmp
and
outsb
out
js
fs
pop
xor
int
mov
push
mov
add
cmp
int3
icebp
test
push
and
inc
dec
cmp
adc
out
shrb
cmp
fwait
cmpb
pop
and
and
sub
mov
outsb
pop
or
stos
imul
int3
sbb
mov
ror
fldt
fisubrl
xchg
sbb
and
mov
stos
mov
hlt
jne
inc
mov
jge
call
dec
outsb
imul
pop
mov
les
daa
out
fbld
repz
xchg
xor
clc
or
sbb
mov
mov
nop
aaa
scas
add
mov
mov
xchg
pop
mov
dec
lods
test
fcmovnbe
ret
rcr
jo
sub
and
xchg
aas
in
aas
enter
ljmp
jg
sbb
push
dec
cmpl
fwait
insl
xchg
pusha
outsl
ret
fists
xor
inc
pushf
sti
adc
mov
mov
jecxz
xorb
insb
adc
das
fcompp
lret
and
inc
xchg
pop
pop
ja
add
xchg
stc
xchg
dec
add
sbb
fs
lods
mov
or
pop
cwtl
sbb
fwait
addr16
jecxz
lret
ljmp
xchg
sub
sub
sbb
xchg
jle
cmp
mov
mov
data16
jbe
inc
sbb
lods
xchg
icebp
inc
pop
int
jp
shrl
pop
outsl
sub
and
add
loope
in
push
and
roll
xchg
sbb
in
outsb
mov
cmp
jg
popf
mov
popf
shll
sub
insb
lea
xchg
inc
dec
inc
adc
lcall
add
aas
insl
xor
stos
and
popf
inc
dec
cld
or
out
and
arpl
jns
cmc
and
mov
pop
jo
add
push
cmp
ljmp
popa
dec
outsb
xor
push
testl
xchg
push
cwtl
je
adc
sti
mov
mov
dec
jl
inc
aaa
lds
ret
sbb
push
and
mov
jge
mov
adc
and
icebp
jno
dec
inc
dec
mov
lret
insb
cs
push
aam
inc
jnp
mov
xchg
ret
fisttpll
and
stos
jnp
pusha
mov
pop
scas
xlat
xor
daa
ficoms
sub
push
cmp
mov
jecxz
and
xchg
fistpll
mov
fiaddl
ret
loope
cmpb
xchg
mov
aaa
cwtl
std
mov
decb
imul
push
jmp
lock
mov
dec
aam
pushf
xor
cmc
inc
movsb
ret
stc
pushf
add
loope
sbb
push
icebp
pusha
cmp
push
cmp
jno
jae
pop
dec
or
inc
jmp
fisttps
push
cmp
cmp
mov
adc
imul
sbb
pop
rcrl
stos
nop
outsb
xchg
mov
fstpt
fildl
and
lock
inc
mov
mov
lret
jae
adcb
outsb
adc
or
sub
call
and
insl
int3
mov
inc
adcl
pop
sar
mov
push
incb
loopne
clc
in
es
addb
or
in
in
in
dec
mov
rorl
pop
aaa
cmp
cwtl
mov
add
fbstp
or
loope
pcmpeqw
fs
repz
lahf
mov
mov
sarl
stc
ds
subl
nop
js
pop
mov
inc
mov
bound
jae
mov
mov
mov
imul
lahf
mov
test
popf
out
adc
clc
inc
mov
lcall
push
imull
int3
xchg
inc
dec
fsubl
lea
jge
xor
push
push
push
or
mov
mov
test
cmp
cwtl
dec
xor
fidivrl
mov
mov
adc
mov
icebp
bswap
push
jb
outsl
mov
out
inc
out
push
jmp
arpl
xorb
xchg
or
cmp
repnz
push
je
sti
std
lods
inc
pushf
mov
out
out
ljmp
push
mov
add
fucomip
dec
lret
dec
sbb
sub
orl
dec
insl
adc
push
int
xor
adc
cmp
into
movsb
sarb
loope
shl
dec
pop
or
test
lods
testl
test
loop
xchg
xor
fisubrl
xor
scas
ljmp
ds
popf
inc
xchg
in
aad
jle
pop
inc
int
imul
lret
subb
mov
popf
leave
pop
and
push
stc
jbe
movsb
fsubs
fs
lret
push
jp
fistpll
cmp
jne
lret
fistl
std
andb
push
inc
test
cltd
out
mov
pop
mov
pop
stos
cmp
xor
les
ja
mov
or
mov
cli
adc
mov
sbb
cltd
or
out
jecxz
push
paddusw
jle
loopne
jo
xchg
jl
mov
psubq
sahf
out
stos
mov
test
pop
dec
popl
test
mov
inc
add
imul
or
mov
mov
jge
call
or
lods
and
xor
cmp
push
cld
jnp
fmull
mov
push
imul
inc
mov
pop
push
cwtl
mov
and
gs
icebp
dec
mov
lret
test
push
add
ret
iret
sbb
pushf
mov
xlat
insb
lods
push
decb
add
and
mov
dec
cltd
fwait
dec
cmpsl
mov
mov
sub
pop
stc
scas
jp
lret
roll
xchg
adc
fildl
mov
out
push
mov
fbstp
sub
push
mov
sub
add
movsb
adc
imul
jp
jecxz
jp
mov
subl
mov
mov
in
inc
nop
sbb
testb
ljmp
jns
lds
or
xlat
sti
dec
adc
inc
clc
inc
sbb
pushf
pop
sahf
popf
dec
int
push
ljmp
pop
adc
gs
sub
and
sbb
in
outsl
mov
jmp
mov
cld
sub
mov
stos
add
std
inc
inc
leave
loope
test
jge
shrl
test
inc
nop
in
fstp
sbb
xor
rclb
aaa
sbb
mov
mov
cli
hlt
shlb
and
cmp
pop
mov
stos
inc
add
mov
mov
int
hlt
sub
push
cld
stos
ret
out
scas
dec
imul
lods
push
das
aad
push
fcomps
sub
cmp
orps
jo
sbb
int3
call
or
cmpl
adc
push
ret
and
clc
mov
ljmp
in
mov
push
lret
adc
sbb
ss
scas
mov
mov
pop
incl
repnz
sbb
mov
jl
mov
stos
sub
icebp
fisubl
push
inc
jp
popa
jns
mov
add
jmp
cmp
push
aad
mov
mov
aas
jno
iret
popf
pop
int3
sbb
or
mov
pop
pop
je
cmp
sub
sbb
add
dec
mov
mov
xchg
pop
sbb
mov
jmp
js
pushf
test
pop
loopne
jle
call
lds
sbb
and
xchg
xchg
xor
and
or
inc
jecxz
dec
lret
je
ss
dec
xchg
dec
sub
fsubr
movsl
mov
sub
mov
insb
inc
mov
es
jmp
lahf
pop
pop
jmp
sbb
mov
mov
andb
lea
dec
int
cmp
mov
cmp
insb
loop
mov
mov
mov
cld
jnp
cmp
call
and
xor
cmp
out
call
fadds
mov
dec
fwait
xchg
lea
mov
xor
loop
mov
sbb
lds
hlt
jbe
add
iret
jno
or
sub
sbb
dec
out
es
je
lret
imull
pop
dec
cs
mov
xchg
or
pushf
mov
jmp
fs
and
jne
push
in
fnstenv
pop
sub
dec
sub
aam
cwtl
lds
xor
xor
pop
add
dec
add
outsl
pop
and
and
fidivs
push
cmc
bound
mov
into
jbe
push
adc
push
aam
rolb
sub
jno
ret
jmp
add
in
orb
insb
movsl
and
mov
mov
push
jbe
push
imul
xlat
lcall
stos
cld
push
mov
jnp
inc
push
mov
jp
mov
mov
shll
dec
xor
imul
cltd
or
lcall
addr16
out
mov
andl
mov
pop
or
sti
cmp
adc
mov
es
xchg
test
insl
into
daa
pushf
pushf
or
jecxz
rcpps
filds
rorl
mov
stos
pop
lock
imul
and
jo
lods
mov
push
cmp
pop
sahf
fcoms
cmpsb
fs
shl
pop
and
rcll
pop
aaa
sti
jle
jl
lcall
lds
ret
inc
fld
or
js
xchg
adc
mov
cltd
aad
sti
adc
mov
mov
inc
fldcw
out
lahf
jne
xor
cmp
lock
mov
adc
pop
and
lea
or
ficoml
out
or
sahf
sahf
mov
pop
repz
inc
cld
aad
cmpsb
push
xchg
fisubrs
cltd
ljmp
loop
das
xchg
mov
push
or
insl
push
sbb
push
mov
mov
js
and
int3
add
adc
scas
cltd
add
movsl
testb
adc
xchg
shr
scas
cmpsl
adc
in
rcrb
sbb
mov
repnz
xchg
notb
rorb
ss
and
mov
pop
test
andl
sbb
dec
cwtl
jp
and
in
sbbb
aaa
or
push
pop
movsb
cwtl
push
push
jae
ud0
cwtl
je
inc
bnd
inc
adc
xchg
push
test
add
xchg
cmp
rcl
daa
dec
dec
add
lea
jle
lahf
jmp
dec
adc
ja
push
cltd
dec
adc
scas
shl
add
push
cmp
add
test
jnp
stos
push
add
jle
sti
fs
pusha
addb
pop
into
jmp
jmp
xor
xchg
xchg
xchg
into
mov
clc
push
in
or
or
jg
jns
pusha
js
cmpsl
pop
xor
movsl
cmp
sub
pop
push
sub
in
adc
ret
xchg
xchg
pop
xchg
cmpb
ss
lret
jecxz
sub
cli
pop
pop
jl
loope
pusha
stos
xor
jbe
cli
xchg
aas
jno
mov
leave
adc
mov
sarl
in
imul
and
mov
xor
mov
pop
pop
movsl
inc
inc
daa
ljmp
mov
jno
nop
inc
rcrb
imul
pushf
cmp
xchg
mov
inc
fiadds
xchg
push
shrb
mov
sub
cld
push
int3
pop
imul
mov
icebp
mov
push
je
jp
mov
outsb
or
cmpl
bound
xchg
repz
add
mov
mov
or
push
and
or
mov
shlb
outsl
and
cmp
imul
ljmp
jb
or
or
sub
xchg
ja
xchg
stos
lret
xor
mov
pop
cld
add
aam
cwtl
out
push
test
inc
lret
rcrb
sbb
daa
ds
lret
adc
mov
add
pop
xor
pop
mov
cmp
push
int
cmpsb
jge
xchg
jns
pusha
fs
lcall
fdivrs
in
sti
sub
lret
test
rcll
jb
or
push
loope
push
inc
adc
xchg
sbb
push
cmp
mov
add
stc
div
sbb
cld
sbb
daa
sub
push
or
lds
insb
imull
fstps
test
push
shlb
or
loop
std
mov
xchg
dec
jne
arpl
push
les
jae
stos
mov
test
pop
dec
push
scas
cld
lret
cs
inc
dec
test
inc
mov
mov
cmpsl
fistpll
xor
mov
daa
out
fdivrs
pop
sub
out
mov
and
push
adc
mov
xchg
sbb
outsl
sub
fstp
ficompl
inc
out
sbb
movsb
sub
je
inc
loopne
jmp
arpl
mov
adc
and
lahf
fildll
bound
loop
push
lret
xchg
dec
add
fstps
ds
lahf
xchg
inc
mov
pop
stos
outsl
push
push
jecxz
loop
add
int
adc
cmp
mov
xchg
mov
dec
push
ljmp
test
ljmp
pushf
xor
js
adc
add
bound
ss
xor
xor
jge
push
movsb
dec
lock
push
sahf
imul
dec
jne
push
adcl
out
mov
addb
mov
call
push
rcrl
out
loop
repnz
repnz
or
loopne
mov
in
jns
test
je
cmp
ret
gs
ss
fiadds
fdivp
in
std
loop
adc
outsl
lret
push
push
test
add
push
mov
subl
rorb
arpl
lcall
push
movsb
addl
sbb
in
inc
lret
push
jge
pop
nop
hlt
ja
ret
cmp
xchg
mov
push
lds
inc
push
scas
cmpsb
lods
pushl
nop
push
add
push
or
add
dec
jb
mov
mov
mov
jmp
lahf
or
sti
jp
sbb
mov
popa
les
cmp
adc
popa
sbb
sbbl
test
xor
fdivrl
or
stos
jb
sub
lcall
sub
sbb
xorl
inc
pop
mov
stos
xchg
and
sbb
stos
sbbb
and
shl
push
push
push
mov
sub
inc
ja
sub
int
leave
ds
inc
lea
sub
test
and
cmpsb
or
mov
adc
mov
loopne
mov
repnz
gs
sbb
add
lods
daa
cli
sbb
sarb
cmpb
adc
addb
in
add
sbb
bound
ja
xchg
mov
addr16
and
outsl
xor
or
test
and
ljmp
sbb
jns
dec
out
loopne
add
mov
movsl
cmp
inc
or
dec
push
pop
dec
dec
push
inc
push
push
cmp
inc
mov
shll
pop
pop
ljmp
cltd
dec
mov
cli
lcall
sbb
mov
orb
je
notb
inc
cmpps
fimuls
jg
lcall
push
lcall
cmp
imul
cltd
jns
mov
or
mov
push
outsb
movsl
pushf
fcoml
dec
mov
fisttpl
mov
jb
pop
outsl
pop
fldl
mov
or
leave
lods
push
push
or
inc
add
insb
mov
lcall
leave
sbb
mov
cmp
and
lahf
sbbl
stos
xor
fldcw
stos
adc
jecxz
iret
push
icebp
movsl
lahf
fisttpll
mov
cmpsl
sub
push
mov
in
jg
cli
sbb
sbbl
das
jno
mov
sub
andl
add
cltd
leave
subb
ljmp
mov
repnz
cmc
dec
jle
cwtl
into
cli
push
repz
or
shlb
scas
push
adcl
sti
mov
or
movsl
imulb
lock
aas
shlb
lcall
mov
xor
test
dec
mov
jbe
in
push
lea
decb
icebp
outsl
xchg
testl
and
pusha
mov
loopne
sbb
fstpl
jecxz
sub
icebp
jne
mov
ja
mov
xchg
int
decb
cwtl
dec
jb
pop
movsb
sbb
mov
js
or
jae
popa
hlt
lret
inc
push
imul
fistl
sub
dec
sub
push
sbb
xor
pop
mov
aam
jb
mov
gs
sbb
ss
inc
xlat
inc
cmp
je
adc
test
frstor
fsts
mov
gs
mov
sbb
sub
jecxz
mov
mov
mov
movsl
jle
test
xchg
scas
cmp
or
sub
jno
fsubr
adc
rcrl
push
sub
mov
lcall
test
adc
lret
push
pop
testb
jae
inc
dec
scas
in
shll
mov
shrl
orl
mov
je
xchg
mov
mov
adc
jg
daa
sub
adc
xchg
jmp
cltd
mov
dec
aaa
pop
shrl
ja
push
fwait
test
orl
pop
push
mov
dec
fcomps
xchg
mov
push
sbb
and
inc
sub
mov
and
ja
mov
pusha
mov
jns
in
jle
push
mov
or
mov
lcall
sbb
push
leave
fisubrs
imul
pop
js
fs
cltd
dec
cmc
hlt
and
jle
adc
lcall
call
cmp
xchg
repz
sbb
in
dec
pop
jb
push
repnz
jb
push
sub
fmuls
repnz
push
hlt
addb
das
movsl
fstpt
outsb
leave
loop
fstl
clc
xor
into
movsb
cwtl
jg
insb
idivl
jne
pushf
jb
fcoml
add
mov
movsl
dec
insb
test
rcrb
adc
adc
mov
adc
xchg
jbe
out
jp
js
nop
lods
xor
mov
xor
mov
push
shll
lea
insl
jg
mov
xchg
mov
sub
cmp
mov
stos
popa
hlt
popf
mov
dec
sbb
mov
out
aaa
shl
pop
test
inc
iret
pop
push
call
inc
scas
subl
jge
int3
cmc
fs
mov
jg
xchg
clc
lahf
jecxz
stos
scas
mov
fdivl
cs
scas
ss
insl
push
push
push
mov
sub
xor
sub
jp
push
out
pushw
jl
mov
or
sbb
cmp
jbe
ljmp
ficomps
xchg
loopne
push
or
dec
jecxz
xor
in
out
ret
inc
add
aas
rcll
mov
mov
mov
mov
mov
mov
mov
lcall
mov
into
mov
sti
xor
push
adc
push
push
das
out
bound
mov
sub
pop
push
or
and
lahf
add
enter
inc
shlb
lcall
dec
pop
ja
jb
aaa
pop
arpl
psraw
sbb
adc
cmp
pop
xorl
and
inc
fst
xchg
sub
pop
pop
insl
adc
dec
jns
cwtl
in
in
sub
pause
movsl
ss
and
ljmp
fadds
sub
and
ja
pop
cmp
pop
sub
or
test
or
test
aaa
sub
imul
scas
fldenv
out
pusha
jno
push
and
add
jp
lock
xchg
and
leave
push
adc
aad
call
lods
cld
push
push
lret
push
pop
lock
sub
ret
jae
in
jge
cmp
jae
dec
adc
fwait
addr16
repz
lods
fnstsw
pop
aad
inc
icebp
js
psubd
aam
icebp
xchg
test
and
fwait
jl
and
sbb
dec
push
sbb
fsub
mov
push
inc
repnz
sti
xchg
ret
in
cmp
andl
test
popa
adc
mov
pop
rolb
pusha
cmc
inc
fimull
lgs
arpl
shlb
mov
mov
incl
scas
or
ret
mov
sbb
pop
sub
mulb
hlt
addr16
ljmp
pop
add
hlt
mov
fdiv
loopne
jp
mov
and
mov
push
jb
shrb
test
cmpb
xchg
and
cli
loop
les
xchg
loop
cmp
add
cmpl
decl
jbe
cltd
dec
inc
loope
pop
sub
mov
int3
iret
push
and
cmpsl
ljmp
arpl
clc
ds
jge
mov
mov
outsl
fwait
lret
adc
xor
fildl
cmp
xor
jle
xor
pop
movsl
or
dec
dec
cwtl
jle
push
and
enter
insl
pop
outsl
repnz
dec
repnz
pop
stos
mov
ja
sub
iret
adc
cs
sub
rcl
mov
mov
push
push
int3
in
push
xor
mov
outsl
lret
xor
adc
pop
push
xchg
xchg
movsb
jmp
cld
enter
xchg
je
sub
jl
xchg
cltd
sub
push
cmp
jnp
cmp
ljmp
mov
jne
add
sbb
inc
jae
lahf
lods
stc
in
roll
outsb
test
mov
repnz
scas
fsubl
pop
inc
add
sbb
lea
test
sbb
mov
adc
gs
or
test
mov
iret
ljmp
outsl
push
xor
ss
lcall
push
pop
cmp
lods
mov
xchg
andb
jnp
pop
push
outsb
outsl
cmc
outsb
cmp
mov
call
divb
popf
inc
lahf
stc
xor
jl
jo
add
xchg
sub
jecxz
loope
daa
push
push
ds
sbb
and
pop
rclb
negb
mov
inc
in
pop
or
es
int3
enter
pop
push
test
jmp
pop
loopne
xor
xor
xor
sub
imul
jmp
push
adc
add
cmp
inc
push
and
adc
call
xchg
inc
sbb
dec
loope
fcomps
ret
je
mov
and
leave
mov
sarb
das
inc
sbb
inc
outsb
sbb
sbb
cmpsb
shll
push
js
add
mov
mov
add
xor
mov
adc
ret
xor
movsl
mov
inc
and
rorl
mov
movsl
mov
add
cwtl
cwtl
enter
sub
jbe
add
xchg
shlb
cmp
call
inc
mov
rorb
cli
fidivrl
movsl
pop
lret
xor
mov
mov
push
jae
xor
cmp
mov
jmp
xchg
xor
pop
movsl
mov
jl
rcr
ss
mov
mov
dec
mov
call
dec
jmp
test
and
sub
xchg
jmp
inc
addl
xchg
push
fmul
xchg
in
adc
hlt
fimuls
cmpsb
lahf
mov
xor
loope
imul
stc
dec
inc
mov
dec
xchg
mov
jb
shlb
cld
hlt
lods
adc
xchg
aas
jnp
out
or
sbb
movsl
add
out
ret
and
pusha
leave
pushf
shr
std
mov
in
cmc
lret
repnz
jb
xchg
mov
xchg
mov
mov
push
rcr
adc
mov
pop
pushf
xchg
into
xchg
inc
mov
sbb
dec
sahf
cmpsl
outsl
cli
popa
test
xchg
push
mov
das
lcall
or
loop
jae
cmp
xlat
and
lret
pop
push
pushf
mov
sub
push
sub
test
xchg
jmp
sbb
cld
es
sub
imul
pop
imul
sbbl
add
lea
aaa
fcoms
ja
lock
push
cmp
jns
add
and
sub
sbb
sub
outsb
sub
mov
sahf
ja
pop
add
nop
inc
and
repz
mov
sti
test
add
fmulp
sub
push
xchg
sbb
adc
ds
add
cld
push
add
movsb
mov
push
xchg
pop
mov
jge
sbb
cmc
adc
xor
mov
sbb
or
xor
repz
repnz
mov
js
rol
adc
jae
inc
loop
jbe
nop
int
repz
rorb
outsl
or
notb
mov
daa
sub
test
scas
mulb
adc
mov
pop
jo
negb
loope
pop
adc
or
mov
pop
xor
inc
lock
cmp
fstpt
push
mov
in
lret
mov
das
mov
mov
lock
inc
inc
xchg
jle
rolb
and
cltd
stc
mov
aaa
xchg
das
and
lods
shld
shrb
mov
cmp
nop
mov
xchg
lock
sbb
pop
xor
dec
dec
cmp
cmp
mov
in
mov
jp
push
pop
mov
fisubrs
push
cmpsb
sub
fst
in
cld
aaa
bound
add
aaa
or
push
int3
daa
fisubl
pop
push
stos
pop
enter
loope
ds
mov
cmp
imul
push
js
out
pop
sub
orl
mov
dec
ret
cmc
movsl
push
popf
adc
mov
pushf
dec
gs
je
insb
imul
bound
or
or
and
call
test
test
fcoms
arpl
pop
push
out
loope
out
inc
repz
cmc
push
push
test
sub
mov
xor
mov
add
xchg
jl
jno
push
mov
leave
leave
lods
mov
lea
mov
jnp
movsb
ljmp
and
jge
fs
icebp
inc
daa
test
and
add
gs
mov
sbb
pop
scas
cmc
call
lret
mov
pushf
cwtl
xor
mov
shrl
push
sub
push
cmpsl
fmull
push
pop
mov
andl
add
jno
cmpsl
dec
hlt
cmp
jne
pop
pop
idivb
dec
inc
xor
insl
aam
ror
fists
push
xchg
adc
xchg
inc
loope
ljmp
sub
mov
mov
aaa
cltd
pop
pop
push
ret
aaa
sub
jno
push
sbb
mov
pop
les
push
in
hlt
test
lahf
xchg
je
jge
sbb
mov
sarl
dec
icebp
mov
fstps
xchg
xchg
adc
adc
ret
pop
push
idiv
jle
pop
into
dec
jns
sbb
dec
pushf
icebp
aam
jl
cmp
lods
in
fwait
ljmp
and
xchg
push
xlat
inc
int3
dec
test
mov
jbe
loopne
jmp
inc
aas
aad
in
ficoms
addr16
push
lds
flds
inc
movl
out
pop
xchg
pop
xchg
js
dec
and
popf
add
outsb
out
scas
popf
imul
push
iret
ljmp
mov
push
jns
mov
popa
ficoms
outsl
mov
sti
sbb
xor
inc
adc
inc
mov
es
cmc
mov
jae
lock
cmp
out
mov
fsubl
push
jl
cmp
sbb
dec
in
jp
inc
mov
add
add
int3
in
sahf
jnp
fs
fisttpl
cmc
add
jecxz
xchg
js
sbb
shrb
mov
lret
xchg
imul
lret
in
stos
add
inc
push
and
pop
dec
xchg
adc
clc
stos
scas
xorb
lahf
leave
mov
test
inc
outsb
setbe
or
add
push
out
jmp
scas
mov
mov
xor
inc
push
fwait
clc
shr
xor
mov
xchg
xor
push
sbb
iret
mov
mov
xchg
movsl
addr16
mov
rol
cmp
push
xor
hlt
test
leave
movsl
inc
adc
mov
cs
push
cmpsl
int
push
mov
jl
dec
lret
add
subl
insl
ds
insl
sub
pop
cld
data16
repnz
stc
leave
cmp
lahf
sub
push
sbb
nop
adc
lock
lds
xorb
aas
mov
sbb
push
notb
jno
std
xchg
mov
les
test
fdivrl
lock
and
rcr
rcr
popa
ljmp
call
cltd
popf
test
lea
out
out
mov
mov
jns
lcall
push
lret
orb
cmp
mov
cmp
pop
out
adc
push
push
fwait
lds
test
mov
std
mov
and
mov
add
xorl
loope
cmpsb
xchg
roll
insb
jns
sbb
out
adcb
or
push
lret
or
lret
imul
clc
js
add
mov
xor
pop
mov
dec
popa
mov
pop
fisubrl
pusha
push
les
push
pop
scas
jne
insb
mov
xchg
inc
or
scas
pushf
sbbb
ljmp
add
outsb
cmpsb
out
outsb
push
div
push
insb
mov
lahf
jl
std
mov
xlat
jnp
pop
xchg
dec
ja
inc
icebp
push
das
adc
sarl
push
pop
adc
inc
data16
inc
aas
scas
cs
cmpsl
lcall
daa
and
inc
pop
aad
je
and
lret
cmp
jbe
fmul
sahf
aas
btr
or
in
adc
in
imul
in
inc
ret
cmp
repnz
mov
cmc
insl
push
addb
ror
pop
stos
inc
enter
cmp
mov
stos
fst
sub
inc
jns
sub
cld
push
das
xor
cmp
push
shl
repnz
bound
rcll
addr16
data16
rcl
addl
sub
sub
sub
mov
fsubrs
sbb
in
and
rcll
lcall
dec
sub
test
mov
outsl
iret
movsb
inc
scas
xchg
stos
fldl
add
das
test
cmpsl
jle
fwait
mov
fldenv
addr16
sub
lret
mov
bound
xchg
adc
xchg
sbb
int3
adc
sbb
push
pop
sub
les
stos
cs
cmp
fimull
xchg
jno
test
in
data16
add
dec
ds
gs
jno
imul
xchg
push
iret
scas
inc
xchg
out
outsl
xchg
mov
jmp
std
outsl
jns
sub
mov
sbb
fprem
clc
movb
mov
mov
sbb
adc
faddp
je
pushf
loop
rep
stos
xorb
xor
or
pop
inc
jecxz
fbld
xchg
fdivs
push
jge
sub
jmp
mov
xor
xor
imul
and
in
xor
les
scas
jnp
repnz
pop
jno
wbinvd
sarb
mov
in
gs
pop
mov
shll
daa
mov
mov
mov
mov
mov
sub
dec
push
and
lods
in
lds
stc
cmp
push
std
je
jle
mov
inc
jmp
push
pop
or
jecxz
sahf
add
nop
add
jmp
cmp
cmc
inc
aaa
insl
in
push
xchg
fnstsw
fbld
inc
push
int
fdivl
xor
in
sbb
push
ret
ror
mov
call
int3
sbb
scas
xor
push
sbb
sbb
or
in
add
cld
jne
out
or
push
mov
lret
push
pop
iret
aam
fs
andl
movsl
rolb
push
and
dec
popa
and
imul
cli
bound
lea
cmp
or
cmp
ss
mov
mov
pop
xor
xchg
pfmin
dec
push
push
pop
outsl
fildll
imul
and
rcrb
jb
jns
sbb
imul
leave
push
sub
xchg
push
xor
insb
bound
mov
sub
outsb
outsl
mov
imul
lcall
inc
sar
outsb
mov
sti
stos
and
mov
aaa
pop
fimuls
sub
cmpsl
push
fadd
scas
sbbb
fists
and
ja
rolb
test
jno
andl
out
mov
add
imul
enter
xchg
out
lret
out
sub
push
push
xchg
loope
cmp
arpl
jb
into
xlat
data16
aam
test
and
add
cmp
lea
pushw
inc
test
imul
sub
movsb
jbe
ret
sbb
push
mov
mov
sbb
leave
enter
stc
sbb
mov
pop
sub
mov
mov
add
shll
and
movsl
push
xchg
pop
add
adc
and
xchg
fists
jp
adc
xchg
inc
xor
jo
jge
icebp
loop
cld
pop
fsubrl
mov
das
lret
jno
ret
and
inc
xchg
xor
lcall
cmp
js
push
jp
call
dec
scas
sbb
addr16
push
jmp
scas
cli
xchg
stos
push
add
jge
push
movsb
mov
shr
push
es
aaa
test
xchg
sub
sar
loopne
dec
dec
cmp
sub
xchg
inc
hlt
inc
adc
imul
add
inc
neg
daa
pop
sbb
push
xor
fldenv
inc
ljmp
fmuls
lods
cmp
ja
mov
iret
inc
mov
das
jns
jg
out
shll
jle
dec
mov
mov
jnp
adc
scas
or
call
addr16
testl
xchg
nop
psubusb
out
adc
xor
in
sub
std
fistpl
xchg
mov
dec
loope
rcrb
pushf
sub
jo
cmp
adc
inc
je
sbbl
push
call
jns
rcl
xchg
call
mov
rclb
jb
in
and
adc
ja
inc
mov
cli
fwait
unpcklps
push
cmpsb
mov
lret
xchg
cltd
xor
push
jo
into
das
inc
jge
mov
adc
das
shrb
movsb
xorb
negl
adc
mov
cmpsb
xor
push
jecxz
in
std
fstl
ret
push
outsl
adc
add
ljmp
into
pop
adc
mov
rcrl
repnz
or
mov
movzwl
cli
dec
dec
ret
push
sub
lahf
jle
mov
cmp
pop
jo
gs
xchg
jne
lea
add
cmp
lret
inc
bound
imul
jb
jno
mov
fiaddl
lea
sub
push
daa
and
adc
icebp
dec
add
repz
jb
cwtl
outsl
jg
sbb
jl
mov
sbb
arpl
xchg
fistps
push
mov
iret
push
add
xchg
mov
pop
fs
mov
stos
add
xor
add
fiaddl
xchg
jmp
scas
cmpb
xchg
fidivl
int3
insl
ds
jmp
push
jle
aad
mov
stc
xchg
cs
push
xlat
cli
testb
imul
pop
test
push
jb
push
js
and
jae
dec
sub
mov
cltd
mov
adc
outsl
cmp
and
xor
jg
adc
xor
or
xchg
fisubrs
push
out
js
pop
mov
repnz
fs
pusha
inc
mov
scas
inc
pusha
add
pop
add
mov
pop
frstor
xlat
sub
test
in
sbb
inc
fcomi
roll
repz
test
and
jns
pusha
sbb
pusha
jmp
fcoml
mov
shlb
call
xor
sbb
aad
repnz
add
xor
out
push
lods
pop
pop
inc
iret
mov
rolb
xchg
and
xor
lret
sbb
sub
adcb
jmp
ret
jb
add
sbb
mov
mov
scas
in
xchg
xor
in
fsubrl
mul
and
xorl
jno
sbb
xor
xchg
dec
or
je
repz
stos
dec
cmp
mov
push
pop
inc
cld
gs
negl
mov
into
push
inc
cmp
add
shrb
and
ja
inc
sub
inc
outsl
mov
push
sahf
lock
lcall
xor
dec
push
mov
lahf
outsl
pop
sbb
inc
mov
push
jo
mov
jo
push
data16
and
jno
and
sar
out
stos
ficoml
push
loop
xor
jbe
cmp
and
js
lods
shll
lea
xor
push
push
inc
mov
jne
xchg
ret
js
xchg
loopne
in
mov
std
popf
inc
imul
popf
push
mov
gs
stc
loope
xchg
pop
ficompl
and
mov
mov
inc
push
mov
cltd
gs
call
lea
add
xchg
jg
cmp
sub
inc
insb
pop
testb
movsl
shlb
push
inc
xchg
adc
stos
pop
inc
inc
das
adc
cli
pop
ret
movsb
cmp
adc
inc
xor
xchg
jg
add
dec
lock
shrb
cltd
out
std
loopne
loop
cli
pop
inc
xchg
push
xchg
push
pop
scas
jne
outsb
nop
lcall
and
dec
jecxz
insl
jae
leave
or
sbb
inc
pop
mov
xchg
loope
icebp
aaa
mov
fs
xor
roll
mov
jne
pop
xor
int3
out
pop
js
mov
and
pop
pop
or
inc
ds
cmp
jge
fcoms
scas
and
mov
test
cmp
and
push
stc
or
js
out
les
mov
enter
inc
scas
pop
pusha
xchg
out
mov
pop
int3
pop
cmp
xor
mov
add
push
into
or
add
shrb
jnp
add
jne
imul
jnp
lock
fwait
sub
out
pop
xor
fildll
jle
pushf
mov
xchg
mov
xchg
fadds
mov
jns
cmpsb
add
xchg
mov
in
cmp
adc
add
adc
scas
lea
insl
icebp
fisubl
pop
xchg
sbb
nop
push
loope
sbb
cmp
push
movsl
xor
inc
pop
inc
insb
and
push
inc
sbb
mov
pop
jecxz
cmp
adc
lock
adc
subl
mov
jge
imul
pop
inc
gs
dec
sti
sub
testb
cmp
inc
test
pop
add
sti
sbb
dec
jns
shrl
adc
or
and
sub
loop
dec
popf
imul
in
mov
aas
ret
sub
pusha
jp
adc
nop
es
xlat
add
pop
hlt
mov
ds
std
inc
leave
pop
mov
xor
jno
pushf
add
mov
aas
adc
mov
roll
scas
or
pushf
mov
sub
pop
loope
aaa
testl
xchg
shll
cld
and
daa
pushl
aam
andb
int3
adc
adc
and
xchg
and
test
cld
insl
sbb
pop
pmulhw
lods
es
int3
push
cmp
out
xchg
lcall
cli
xlat
lea
add
pop
enter
xor
xorb
cmovle
dec
mov
inc
jb
das
xor
mov
lock
push
jbe
push
pop
sub
js
icebp
fsubrp
inc
ror
cli
int3
xor
mov
repnz
notl
sbb
loopne
lea
or
andl
imul
fstl
cld
push
jae
pop
or
cmc
loop
sub
addl
pop
inc
sbb
pop
mov
push
push
xchg
int3
popa
dec
xchg
push
insb
ja
rcrb
and
cmp
pop
test
and
xlat
lods
lea
ss
cmpsl
sbb
lea
addr16
pop
cli
mov
sbb
mov
das
jnp
jecxz
cmp
sub
lret
cmpsb
movsb
push
cmp
shlb
add
repnz
pop
gs
mov
pop
outsl
xchg
cltd
inc
mov
push
xchg
test
xor
push
popf
sbb
add
dec
pop
pop
mov
aam
pop
inc
clc
or
std
ss
sub
jbe
pop
setno
movsl
or
mov
sub
sub
outsl
and
gs
mov
inc
sbb
lret
les
pop
ud0
pop
mov
mov
bound
cmp
adcb
or
dec
push
dec
gs
inc
mov
mov
cmpsb
jae
mov
pushf
cmp
xchg
and
loope
mov
xor
pushf
dec
cli
and
sbb
lret
xlat
rolb
es
movsb
aad
loopne
test
pop
jle
mov
add
and
inc
inc
cwtl
dec
mov
add
lret
push
stos
jne
mov
stos
push
decb
adc
jns
push
adcb
add
add
mov
adc
inc
popl
mull
or
pop
sbb
mov
inc
clc
xor
mov
and
xlat
sbb
xrelease
icebp
cli
out
xchg
leave
cld
leave
sbb
inc
push
hlt
mov
lahf
cmp
xchg
xchg
inc
add
xchg
jbe
xor
movd
js
rcr
fsubrs
push
rclb
fsubr
push
ljmp
push
ret
push
mov
negl
mov
stos
mov
call
js
loop
jge
or
ja
push
mov
sarb
mov
bound
data16
outsl
adc
and
out
stos
shrl
ret
mov
shll
out
call
lea
sbb
rcl
jmp
jmp
xchg
mov
int
sbb
lea
xor
xor
or
insb
push
jns
xchg
sar
dec
hlt
ss
inc
inc
test
pushf
or
adc
ret
out
dec
inc
sbb
push
adcb
dec
movsl
or
cs
and
icebp
fs
je
fisubs
xor
jmp
fstpt
and
mov
and
sub
or
and
sbb
push
push
xor
ret
insb
out
mov
mov
sbb
pop
pop
pop
push
ret
lods
jmp
adc
and
nop
cmp
loope
mov
lahf
outsl
inc
sub
fs
shll
mov
mov
cli
dec
mov
mov
cmpl
mov
mov
fdivs
ret
push
and
sub
jmp
or
rorl
add
push
sub
push
mov
push
mov
push
cmc
push
out
mov
mov
ret
sbb
sub
test
sahf
bound
sbb
sub
xor
jo
fwait
scas
push
rcrl
xchg
or
sub
jnp
inc
add
or
pop
add
adc
push
stos
gs
jne
mov
test
xor
jl
fisubl
push
lods
mov
inc
aas
xor
ss
mov
adc
outsb
mov
sbb
pop
xor
adc
fidivrs
jp
mov
or
leave
popf
mov
sbb
stc
pop
adc
inc
adc
rolb
pushf
fcmovnu
fcmovnbe
sbb
cmpb
mov
push
xlat
addb
incb
add
mov
dec
rcrl
inc
sub
lea
bound
push
pop
xor
int3
fcmovnu
inc
movb
mov
ret
scas
jmp
arpl
int
mov
jbe
dec
push
inc
lret
jnp
int3
clc
cmp
inc
mov
das
dec
pop
push
cmpsb
outsl
ja
xchg
mov
xchg
out
jmp
pushf
fcmovne
fwait
xchg
lret
mov
push
push
push
fisubrs
cmp
data16
das
enter
div
and
dec
and
movq
sub
daa
call
xchg
add
sub
sahf
jecxz
int
movsb
jmp
outsl
inc
mov
repnz
pop
jbe
std
mov
leave
mov
mov
pusha
and
jge
cli
pop
mov
cld
sbb
pop
stos
cmpl
sbb
lds
inc
jecxz
jnp
push
xchg
fisubrl
or
sahf
xchg
int
cltd
test
push
in
stos
cwtl
mov
enter
pushf
insl
je
jnp
adc
clc
lcall
fildll
inc
lea
or
mov
mov
inc
mov
adc
xor
pop
test
push
add
ss
testl
push
std
adc
lahf
push
pop
mulb
sbb
in
movsb
loope
fwait
imul
xor
or
aad
test
pop
enter
sbb
in
dec
xchg
add
mov
int3
int
inc
add
inc
hlt
sub
out
push
sub
inc
movsb
sub
mov
and
dec
pop
lcall
loopne
push
push
cmp
add
pop
dec
jmp
inc
push
data16
xchg
stos
sub
in
push
push
mov
jecxz
sahf
add
add
loope
xor
decl
add
push
je
mov
add
fidivl
cmpsb
push
jne
testb
mov
jecxz
mull
ja
in
xchg
push
xor
lret
jecxz
add
loope
ljmp
sub
pushf
cmpsb
and
add
push
fs
outsl
mov
xchg
and
fidivl
testb
ds
mov
or
divb
mov
push
xchg
mov
pop
je
add
adcb
inc
lea
push
pop
ljmp
ss
in
jmp
xchg
movsl
aaa
aam
pop
or
adc
in
mov
or
cmp
test
mov
pushf
push
dec
pop
outsl
shll
adc
sub
imul
std
enter
xor
jb
in
aad
or
rep
les
add
jle
pop
xchg
mov
jne
gs
push
adc
xchg
imul
jle
ret
mov
jp,pn
add
mov
jmp
push
jnp
inc
sahf
filds
movsb
pop
data16
mov
xor
or
lcall
inc
pop
gs
pop
and
or
lods
mov
inc
jb
xor
pusha
std
scas
jb
sarb
movsb
cld
test
stos
mov
jo
scas
mov
adc
cmpsb
sub
jno
inc
es
lods
mov
fcompl
push
pop
xor
fisubl
popf
rcl
xchg
faddl
adc
mov
pop
int3
dec
mov
jo
shll
popf
repz
sub
mov
dec
adc
add
jl
adc
inc
lret
mov
push
push
and
insl
mov
inc
mov
icebp
ljmp
mov
mov
xchg
dec
xchg
scas
shrl
sub
add
sub
imul
gs
push
aas
push
pop
sub
dec
pop
cmp
and
fwait
testl
or
and
test
mov
scas
mov
out
dec
lock
dec
cli
sub
jg
aam
cmpsb
and
xchg
push
sub
mov
inc
mov
int3
push
cwtl
mov
pop
jno
fsubrl
es
mov
jbe
hlt
jnp
scas
enter
aaa
mov
dec
in
add
jmp
test
push
shrl
les
add
ljmp
inc
fsubrl
shlb
out
or
inc
mov
pusha
pop
and
jae
push
lods
add
pop
jge
xor
cmp
and
enter
xchg
mov
test
pop
mov
mov
jae
jbe
js
inc
cmp
popf
clc
aam
or
test
fdivs
aas
jnp
mov
leave
xchg
adcb
lods
fcoml
jle
addr16
aas
ja
sbb
bswap
cmpsl
dec
orb
or
mov
test
mov
lret
dec
and
or
pop
movsb
fadd
xor
push
or
test
cmpsb
sub
leave
cmpsb
iret
fwait
test
dec
pop
mov
jp
fsubrl
into
pop
shrl
stos
mov
mov
inc
xlat
sahf
imul
cmpsb
push
dec
inc
xor
pop
jmp
stc
int
xchg
adc
jl
stc
int
add
cld
inc
sti
sub
cmpsb
popa
jg
push
or
jbe
push
mov
loopne
cmp
push
cmp
xchg
or
inc
aaa
lret
dec
dec
scas
add
into
scas
je
jl
adc
stc
sarl
jmp
inc
pop
and
leave
and
mov
pop
push
cmpsb
mov
nop
or
push
repz
cwtl
out
add
push
js
cs
add
shll
inc
cmp
and
inc
outsl
fbstp
in
mov
sub
test
xchg
in
push
lret
add
dec
lea
xor
loopne
and
and
js
ficoml
cmp
mov
push
enter
popf
aad
mov
bsr
out
lcall
out
shll
imulb
je
mov
pop
mov
lea
fs
andb
jbe
mov
fisttpl
adc
mov
mov
adc
mov
insl
mov
sar
push
daa
loope
pop
incb
xchg
int3
dec
xorb
call
in
arpl
aaa
mov
add
jmp
mov
js
inc
dec
fldt
jmp
int
outsb
daa
ja
push
cmp
rcr
xchg
xor
mov
sub
adc
rorl
cwtl
iret
jne
inc
xchg
ss
filds
cmp
popa
dec
loop
in
lock
push
lahf
jae
rcll
movsb
add
add
fwait
push
sbb
fisttps
cmpb
or
xchg
mov
or
clc
loope
dec
nop
xchg
insb
push
xchg
add
dec
push
mov
jmp
mov
test
add
pop
fdivs
hlt
out
inc
int3
scas
in
sbb
aas
insb
aaa
mov
pop
mov
test
sub
insb
fsubl
push
dec
mov
aam
out
cmp
push
push
sbb
adc
in
jno
xor
push
fcoms
nop
and
push
aas
sbb
pop
into
xchg
in
xchg
rclb
cs
adcl
stc
rcll
add
sbb
mov
out
repz
imul
out
xchg
and
mov
pop
lcall
andl
and
daa
mov
cmp
rorb
push
jbe
lock
pop
lcall
lret
les
iret
mov
inc
lahf
pop
icebp
mov
sub
nop
mov
scas
adc
mov
fidivl
and
mov
punpcklwd
and
xor
adc
add
aad
out
and
in
lret
xchg
sbb
adc
sbb
cmc
push
js
mov
aam
ss
popa
lods
popa
jle
adc
outsb
pop
or
bound
andps
and
pop
out
nop
mov
mov
add
xor
mov
xchg
mov
jb
jbe
push
xor
call
dec
add
stos
xor
enter
fs
je
in
je
push
fmull
sub
bound
imul
ret
rorl
mov
sbb
cmc
or
jnp
fs
push
loopne
fbld
xchg
leave
adcl
cmpl
and
int
std
jge
dec
pop
mov
mov
fistps
jb
pop
js
test
lahf
cmp
cltd
jle
sbb
ljmp
xor
jo
sub
xchg
xchg
dec
cmp
lock
pushf
lods
adc
ret
xor
je
hlt
xor
cmp
sbb
imul
out
rol
shrb
adc
xchg
pop
std
mov
cld
mull
adc
pop
ja
pop
popf
push
scas
cmp
fmul
out
add
shr
mov
dec
insb
pand
loope
xor
push
xchg
and
mov
gs
loop
xlat
sbb
mov
xchg
sbb
inc
sbbb
adc
or
aaa
add
push
test
mov
pop
int
cs
pop
nop
cmpsb
jp
add
sbb
scas
out
pop
lretw
lods
inc
ror
les
call
push
les
mov
push
mov
mov
mov
ficoms
xchg
inc
pusha
sarl
iret
repz
and
sub
dec
outsb
out
fisttpl
aam
ss
inc
mov
add
das
cmp
cmp
inc
dec
in
and
pop
mov
cwtl
lods
daa
adc
and
or
je,pt
test
jg
pushf
jl
rcll
push
mov
sbb
dec
sub
mov
clc
cmp
inc
mov
cli
cld
push
xchg
sbb
dec
dec
hlt
fs
cmpsb
in
nop
test
adc
jno
fisttpl
cwtl
pop
lds
sbb
sub
add
push
ja
inc
bound
cld
mov
mov
lea
pusha
pop
xor
movsb
in
jb
pop
mov
mov
and
lret
not
js
loope
or
inc
fwait
loope
xor
aas
cwtl
xor
dec
fadds
sbb
ljmp
pop
xchg
testl
sbb
push
ja
or
push
add
jns
imull
or
incb
rcrl
pop
sub
ffree
jg
setl
cwtl
pop
in
pop
push
xchg
cmp
out
adc
add
inc
push
daa
pop
call
pop
jno
pop
mov
dec
jae
and
cmp
adc
jae
dec
or
mov
pop
cmp
syscall
push
mov
adc
mov
jmp
or
sbb
adc
xchg
jp
pushf
mov
push
sub
je
cmc
mov
loopne
xchg
iret
or
es
ret
jge
mov
sub
in
test
sbb
popf
pushf
xchg
fs
pushw
jmp
std
inc
call
cmpsb
sbb
lds
ret
test
push
rorb
jnp
or
jge
les
cmp
dec
jne
pop
les
ljmp
xchg
sbb
dec
sub
mov
push
sbb
sar
lock
sub
pushl
je
push
and
cmp
sbb
mov
and
pop
inc
xor
add
sbb
jb
dec
inc
lods
and
xorl
rcll
sub
lds
xor
sbb
or
add
subl
js
add
sub
lahf
and
push
mov
sbb
mov
outsb
pop
adc
out
mov
inc
int
cmp
or
pop
push
fistps
insb
adc
arpl
cmp
das
imul
je
stc
or
mov
cmp
mov
dec
in
push
and
ja
enter
sub
pop
adc
add
cmp
insb
mov
jnp
outsl
gs
repz
inc
mov
jae
mov
fisubl
divb
sub
mov
out
xchg
pop
ret
dec
es
adc
mov
dec
movsb
cmp
or
adc
mov
loope
sub
sbb
pop
sbb
xor
popf
leave
mov
mov
sbb
aaa
shrl
mov
stos
imul
test
enter
xlat
repnz
lcall
xchg
fs
jb
insl
pop
jl
loop
mov
outsl
adc
add
in
popa
push
cmpb
dec
add
std
mov
sarl
mov
fdivrl
loopne
pushf
in
mov
inc
inc
xor
pushf
clc
bound
sub
add
out
xor
or
mov
mov
std
imul
iret
incb
shlb
sbb
mov
mov
insb
mov
pop
xor
mov
xchg
push
push
adc
rcr
outsl
pop
lods
add
mov
rcll
cmpsb
stc
pop
cmp
xor
jbe
mov
xchg
repnz
pop
and
jmp
inc
mov
popf
mov
aam
xor
movsl
orb
aam
mov
mov
jno
repnz
push
shlb
push
xchg
push
adc
aaa
and
mov
cli
inc
cld
ljmp
fisubrl
cbtw
test
pop
push
push
addr16
ret
data16
lea
xchg
sub
fyl2xp1
sub
inc
les
scas
xor
sub
pop
add
bound
sbb
lea
into
adc
fimuls
mov
rclb
test
mov
idiv
mov
mov
cli
pop
aam
mov
ljmp
adc
xchg
dec
jle
lock
out
push
xchg
pop
pop
pop
pop
std
mov
or
outsl
int3
lahf
sahf
push
out
inc
mov
push
lcall
mov
lcall
in
in
std
jmp
ret
cmp
mov
das
sub
push
in
in
push
mov
hlt
sti
inc
xchg
nop
idiv
icebp
adc
cmp
push
popf
lods
lds
inc
xchg
mov
xor
cmc
mov
push
xchg
xor
stc
data16
cltd
mov
sbb
cmp
xchg
lahf
in
jbe
inc
stos
jecxz
jmp
movsl
pop
mov
mov
cmp
ret
xor
iret
inc
push
fisubrs
test
cmp
sti
jecxz
shl
mov
push
cmc
mov
shrb
pop
xorb
dec
mov
mov
adc
shl
push
std
dec
lret
out
and
xchg
push
push
add
aas
or
dec
clc
sub
popa
repnz
mov
adc
imul
out
cmp
push
inc
sahf
pop
add
pop
fstl
push
lock
jno
rcll
ret
and
lcall
mov
sbb
rcl
lds
pop
mov
mov
xchg
leave
mov
add
pop
aaa
xchg
inc
icebp
sub
leave
dec
lahf
xchg
add
faddl
push
stc
pop
ret
cmp
out
pop
mov
test
adc
lds
jmp
mov
cmc
gs
inc
ja
cmp
push
iret
mov
pop
sub
rorl
xchg
std
pop
sarb
into
sub
adc
cmpsl
test
inc
cmc
push
pop
mov
jp
mov
mov
add
jl
and
xlat
xchg
and
popa
push
loopne
ja
or
into
aaa
dec
push
xorb
mov
out
jp
insl
push
rcl
into
repz
in
mov
jnp
xchg
pmulhw
dec
pop
jno
inc
push
jb
mov
rolb
sbbl
filds
pushf
loope
mov
sub
adc
fs
shll
or
push
shll
scas
popa
mov
stos
dec
stos
xchg
ret
xor
stc
xor
adc
shl
jns
popf
fdivrl
test
pop
mov
push
jl
xchg
cld
inc
in
inc
ret
xchg
repnz
sbbl
jno
adc
fists
ds
jmp
stos
aas
push
push
xor
xchg
mov
mov
arpl
movsl
fidivrs
cmpsb
or
push
fisubl
pop
fildll
push
pushf
les
lret
add
mov
pop
adc
pusha
jae
int
ja
mov
out
arpl
mov
sbb
push
push
ret
lods
out
sub
scas
popa
mov
out
sbb
sbbb
hlt
or
lock
pop
jecxz
dec
mov
cmp
adc
lock
cmp
mov
imulb
add
iret
xchg
cmp
dec
xchg
imul
pop
xchg
mov
sbb
mov
jns
test
push
cmp
arpl
shll
push
sbb
loopne
filds
sbb
aad
or
test
inc
jae
sbb
in
or
sub
ds
loopne
push
xchg
ret
clc
imul
dec
dec
fwait
outsb
mov
pusha
xchg
imul
imul
das
in
stos
dec
jmp
mov
dec
cmp
mov
mov
adc
dec
cmp
popa
mov
sahf
in
repnz
loop
rorl
lds
mov
cmc
test
sbb
jno
xor
push
sahf
out
mov
lret
xchg
cmpsb
jp
jle
pop
jmp
cmpsl
ret
adc
push
insb
and
pushf
push
pop
mov
in
rorl
or
mov
mov
and
imul
ljmp
sub
add
add
subl
or
clc
mov
push
xlat
out
pop
inc
mov
call
imul
fmull
loopne
add
xchg
fsubrl
jmp
xchg
inc
and
jl
mov
adc
lcall
loope
lcall
sbb
push
int
pop
xchg
lahf
jg
rol
lods
mov
sbb
sbb
stos
xor
mov
pushf
aam
pop
push
jae
sahf
add
lds
movsl
push
inc
mov
fwait
ljmp
and
cmp
cmp
movsb
loopne
mov
pop
push
cmp
xchg
jnp
outsb
mov
les
movsb
push
inc
push
pop
push
add
jo
out
mov
ss
lret
arpl
shlb
inc
sub
fnstcw
lock
loope
stos
std
xchg
movsb
pop
fadds
push
sub
arpl
mov
roll
hlt
xor
fistpl
shlb
jbe
lret
pop
push
mov
movsb
int
or
loope
mov
iret
mov
ljmp
xlat
mov
adc
shl
jmp
jne
xchg
cmp
xor
cmpl
lock
pop
aad
rcrl
insb
or
pop
ss
enter
jne
dec
cmp
inc
enter
lret
test
in
or
mov
adc
or
pop
jns
adc
lret
in
mov
xor
and
jae
ss
fcomps
and
popf
sti
sub
mov
jmpw
in
mov
sar
pushf
aad
out
lahf
rcr
bound
jns
movsb
into
push
or
out
test
lds
loopne
mov
mov
push
stos
push
rcll
loope
fwait
add
rcrb
mov
jecxz
cmp
sub
les
fwait
inc
iret
and
jb
cmpsb
aas
cmpsb
mov
pop
and
pop
jg
mov
adc
mov
cmc
inc
jg
inc
mov
scas
push
cmpsb
loop
out
mov
leave
mov
sti
xlat
fists
pop
aas
push
ss
lods
xchg
ja
mov
mov
sbb
and
mov
in
xchg
movsb
fisttpl
loope
popa
mov
call
jmp
mov
pop
in
inc
cmc
sub
arpl
loope
cmp
adc
incl
sub
and
das
stos
push
jmp
sub
loopne
into
jb
mov
jns
inc
xchg
cmp
fldenv
stos
jno
and
dec
push
lahf
cs
in
std
out
inc
int3
insb
jae
adc
outsb
loope
sub
dec
jecxz
xor
sub
aam
inc
pop
imul
popf
push
ret
int
cmpsb
push
mov
cmp
jl
and
fdiv
movsb
xor
jnp
out
xor
sub
loop
pop
mov
pop
xchg
js
jle
stc
mov
mov
ss
testb
and
pop
das
jae
jecxz
clc
jecxz
or
xor
movsl
mov
ss
cmp
arpl
fnstcw
or
sbb
pop
bound
cmpsl
or
mov
jno
pop
arpl
sub
shll
add
and
std
enter
arpl
xor
sti
and
loop
pop
lret
cli
cmp
cmp
sbbb
and
adc
in
jp
addl
imul
rcl
out
sahf
sbb
add
inc
cli
and
mov
cs
leave
inc
lret
scas
inc
out
in
sbb
rcl
fsts
pop
jle
arpl
jg
adc
sbb
negb
addr16
inc
test
aad
sub
iretw
insb
inc
pop
arpl
jno
mov
test
or
jo
xchg
mov
pushf
mov
jae
dec
scas
xor
int3
jae
sub
or
lcall
mov
sbb
sbb
jae
aaa
popa
flds
lahf
loopne
xorb
push
popa
pop
loope
icebp
push
imul
xor
sti
cmp
inc
test
rolb
insb
inc
icebp
popa
or
xchg
stos
movsl
xor
and
lret
push
sti
gs
shrl
push
repz
adc
jo
pop
ret
pop
test
cmc
test
push
cmpb
lea
out
mov
out
mov
cli
out
ret
cwtl
sbb
enter
clc
mov
pop
test
xchg
out
sbb
cmp
sarb
jle
mov
dec
sub
call
loopne
outsb
bsr
add
test
popa
aaa
adc
pop
stos
addb
and
or
add
and
out
pop
add
ds
mov
repnz
ret
mov
cld
lahf
inc
in
clc
or
in
add
or
push
mov
aad
in
mov
mov
cmp
push
cwtl
icebp
dec
fmuls
cmpsb
js
jnp
dec
adc
xchg
pop
iret
stc
and
push
aas
call
cmpsl
dec
daa
fnstenv
ss
xchg
addl
jns
andl
lret
cmp
mov
sub
jle
jno
xor
cwtl
or
loopne
sti
inc
lahf
adc
outsl
outsb
push
push
pop
das
adc
vrsqrtps
clc
sub
cmp
xor
add
sbb
and
sti
adc
or
cwtl
js
pusha
in
movsb
jmp
mov
pop
js
sarl
sahf
rorl
into
adc
inc
inc
mov
or
mov
adc
hlt
xchg
add
fs
pop
push
test
mov
pusha
push
loope
mov
or
pushf
cmp
ficoml
in
pop
pop
adc
mov
mov
lcall
or
daa
paddb
cmpsl
pushf
xor
or
test
add
adc
push
inc
loopne
ds
mov
mov
cmp
cmp
iret
lret
inc
push
dec
mov
dec
lods
cmc
sbb
in
ja
rorb
mov
mov
push
sti
mov
inc
cmp
sub
scas
pop
ljmp
add
mov
mov
or
lcall
jge
jle
lcall
call
sub
test
pop
push
adc
scas
ljmp
or
push
mov
movsb
lret
inc
orb
mov
rcrb
xorb
mov
xor
lahf
sarb
sub
push
push
push
divb
into
push
ds
xchg
bound
and
in
inc
sysret
dec
push
cmp
jle
loop
fcmovnb
jecxz
loop
dec
fldl
mov
jle
add
fstpt
xor
and
pusha
pusha
xlat
in
mov
mov
dec
push
jae
subb
mov
jmp
lcall
in
lahf
jne
mov
stos
mov
push
loop
pop
shll
lods
xchg
loop
loop
mov
shlb
popf
js
jl
mov
and
add
xor
and
mov
and
fcoml
clc
shl
into
sub
mov
dec
stos
pushf
notl
std
push
iret
sbb
inc
in
mov
cli
nop
dec
dec
inc
mov
mov
push
lods
bound
test
iret
or
fidivs
inc
pop
mov
mov
sbb
sti
inc
push
imul
int3
inc
mov
pop
enter
ret
addb
lods
pop
fistpll
jnp
inc
cli
xchg
stos
mov
or
int3
dec
mov
jp
sbb
sti
adc
clc
inc
mov
inc
neg
lret
inc
cmpsl
cs
adc
cmp
push
lahf
and
jne
sbb
or
pop
lods
inc
mov
mov
jge
mov
mov
cmp
sbbl
xchg
xor
lods
inc
addr16
push
daa
shll
fisttps
xchg
mov
rcl
fadd
loop
lea
imul
jmp
addr16
addb
dec
arpl
adc
dec
imul
sbbb
and
sbb
sub
test
xchg
cmp
dec
cmpsl
jbe
test
jmp
inc
imul
test
push
and
shrb
das
incb
pop
dec
jns
imul
add
pop
pop
es
outsl
pop
sub
popa
xor
test
inc
sub
inc
jmp
aam
popf
mov
mov
imul
dec
iret
push
add
dec
xor
iret
and
add
dec
dec
push
pusha
pop
cwtl
dec
push
data16
add
scas
in
jns
xchg
pushl
out
and
rolb
daa
lods
hlt
or
aaa
nop
rolb
lods
mov
addb
pop
mov
add
add
xor
inc
lods
pop
jbe
imul
mov
test
sbb
add
xor
negb
adc
mov
shll
stc
lods
mov
std
ficomps
mov
cwtl
add
jae
push
call
jg
js
push
cwtl
fildll
sbb
sbb
cwtl
lret
icebp
push
sbb
xchg
add
cmp
xor
call
lea
mov
shrb
mov
xchg
jne
testb
rorl
xchg
push
inc
cmpsb
lock
imul
divb
ror
movsb
rcrb
jnp
loopne
lds
lods
jnp
push
sub
mov
push
mov
inc
sbb
lcall
jae
shrl
pop
outsb
les
stos
shll
adcb
xor
mov
orl
mov
mov
push
inc
orl
or
mov
push
cld
jb
enter
or
into
or
aam
loope
pop
cmp
movsb
push
cld
stc
notb
dec
xor
dec
lds
loopne
add
mov
jg
dec
je
rcrl
pop
fsubs
mov
orl
and
cmp
jmp
lcall
xlat
jno
inc
pop
push
dec
bound
mov
push
stos
stos
orb
lret
push
xorb
test
stc
mov
enter
in
pop
inc
mov
movsl
hlt
mov
jns
lock
out
sbb
mov
pop
push
and
mov
pop
inc
jecxz
push
jnp
dec
ret
in
ret
sbb
sub
pop
adc
xor
ss
js
ja
repz
cmp
cltd
dec
bound
mov
test
xor
mov
repz
popf
pop
push
aam
ret
addr16
mov
outsb
out
pop
adc
jns
movsb
mov
test
add
mov
je
push
lds
and
mov
dec
mov
clc
hlt
pop
aam
adc
or
rcrl
xchg
xchg
lds
inc
push
jmp
and
pusha
stos
mov
dec
mov
fs
in
lea
jo
jbe
icebp
loope
les
dec
and
bound
xchg
mov
clc
cmp
loop
fdivrs
jbe
sbbl
dec
mov
sahf
js
jb
clc
xor
cld
nop
mov
aad
mov
cmp
cmp
test
xchg
sti
fisubrs
insl
push
jp
xchg
sahf
sub
xchg
push
mov
ret
test
jle
pusha
mov
incl
push
enter
pop
adc
nop
int
ficomps
ret
insl
mov
imul
lret
sub
mov
daa
not
clc
xchg
xchg
jl
pop
and
add
lock
sub
cmp
gs
push
adc
xchg
pop
and
jp
pop
mov
cltd
sbb
xor
xchg
add
icebp
sub
add
dec
popa
add
dec
pop
fld
mov
shll
xor
in
mov
insl
lds
cmpl
loope
xchg
or
mov
pop
xor
and
cld
sbb
insl
shr
inc
or
mov
ja
mov
test
dec
sbb
sbb
add
xchg
ss
cltd
cmp
sbb
pop
mov
inc
fcmovb
cld
sbb
push
mov
scas
mov
and
ret
xchg
inc
xchg
push
sub
sbb
ret
mov
inc
testb
xchg
femms
pop
mov
fsubl
cmp
mov
mov
dec
pop
pop
popf
pop
sti
inc
xor
fnstenv
fdivl
push
popf
in
cmp
addr16
mov
sbb
sub
les
loope
repz
push
mov
movsb
xor
dec
mov
outsl
xchg
sub
mov
popa
into
test
ret
pushf
cmp
mov
idivl
les
mov
pop
xchg
in
sbb
inc
sbbl
sub
jb
jle
sub
jno
lods
cmpsb
arpl
add
adc
sub
add
jl
cmpsb
es
jb
in
test
icebp
mov
repnz
push
push
movsb
push
mov
cltd
push
sub
jcxz
jmp
mov
roll
cwtl
cmc
dec
adc
pop
add
lea
push
mull
push
clc
push
push
scas
popa
pop
fs
pop
jl
inc
jge
pop
dec
sete
rolb
or
cmpsb
dec
in
push
rol
pop
repnz
or
dec
cmpsb
sub
xchg
test
and
rorl
or
sti
addr16
mov
jbe
push
sub
or
mov
fs
push
pop
loope
imull
aaa
xor
fisttpl
xor
fbld
lds
push
js
or
jb
sbb
gs
popa
inc
sub
jae
test
cmp
psllq
cli
cld
out
int
pop
cld
cwtl
hlt
out
popf
jo
imul
push
loop
inc
mov
jb
cmp
test
pop
push
lret
scas
lock
loopne
hlt
aad
enter
das
pop
clc
mov
popf
push
cmp
test
push
cli
jno
mov
xchg
sub
mov
jb
jg
sbb
test
cmpsl
repz
leave
cmpsl
dec
data16
jno
sbb
jecxz
dec
or
mov
notl
ret
push
mov
dec
jnp
sub
sub
push
mov
jg
xlat
data16
cli
fucomp
je
pop
shrb
inc
cmc
scas
sbb
adc
pop
mov
stos
cltd
lea
mov
idivb
popf
dec
inc
insl
jo
mov
test
cltd
jle
xlat
stos
into
mov
dec
std
mov
mov
arpl
push
sti
pop
pop
test
xchg
iret
sbb
out
jle
ja
mov
into
popa
cld
xchg
pop
mov
push
data16
push
xor
jns
push
cmp
std
repz
pop
popf
out
jmp
sub
data16
pop
sbb
iret
movaps
in
xchg
inc
ja
and
mov
leave
push
xlat
stc
pop
shll
cwtl
mov
push
mov
jns
icebp
xor
xor
xor
cmpsb
ret
push
cmpsb
and
add
outsb
jo
push
fsubs
stos
xor
or
dec
call
leave
mov
pop
lock
loope
mov
cmp
loop
sub
mov
loopne
push
xor
jnp
pop
enter
sub
inc
lcall
xor
insl
jne
lds
xor
dec
insl
aaa
mov
inc
or
pop
add
cmc
in
fnsave
mov
int3
imul
bound
xchg
mov
addr16
mov
cld
ljmp
add
fs
lea
pop
js
inc
clc
test
popf
insb
mov
dec
imul
sub
adc
xchg
xor
add
jns
in
mov
and
push
jmp
loope
shll
mov
mov
add
cmpsb
push
mov
cmp
push
cmpsl
cmp
clc
xor
cmpl
mov
out
frstor
leave
xchg
or
cmp
popf
or
jg
sbb
xor
lods
movsb
push
cli
xchg
jl
sbb
inc
mov
cmp
add
sub
rcll
mov
clc
pop
je
inc
fs
mov
test
xchg
cmpsl
push
mov
mov
mov
xor
adc
inc
sub
mov
ljmp
push
inc
xchg
rorb
xchg
jnp
lret
sbbl
mov
push
cmpsb
out
jb
aas
adc
repz
sub
pop
add
sbb
mov
fdivs
pushf
inc
cmp
adc
out
xchg
fmull
es
sbb
push
mov
dec
mov
std
mov
sub
in
pop
push
test
js
mov
stos
les
mov
xchg
adc
js
push
lods
mov
aaa
loopne
shlb
and
fstpl
aam
dec
pop
or
mov
fcomps
cmpsl
adc
sarl
insb
mov
mov
xor
jno
fstpl
jg
pop
jae
fwait
lcall
add
clc
cmpsb
pop
or
pop
lcall
addr16
sbb
fldenv
push
imul
and
addb
jbe
outsb
rclb
mov
in
shl
or
sbb
inc
sahf
jo
daa
xchg
dec
jne
push
add
mov
xor
dec
inc
and
outsl
aaa
je
xchg
add
push
movsb
mov
or
push
mov
iret
add
cmp
lret
push
sub
inc
sbb
sbb
enter
fcmovnu
shrb
mov
xchg
sbb
mov
mov
jmp
subl
mov
xchg
xchg
mov
incb
mov
movsl
add
lods
jbe
and
jno
movsb
xor
scas
pop
or
es
cli
xchg
paddb
insl
out
inc
fbstp
clc
shll
mov
es
mov
sub
dec
rcrl
push
pop
pop
jnp
sub
ja
ja
jne
jmp
cmp
cli
cmc
mov
nop
repnz
faddl
adc
stos
addb
mov
in
rolb
fdivrl
into
jecxz
or
push
mov
imul
ja
rclb
mov
cmp
and
mov
jb,pn
push
jnp
jne
and
sub
cmp
add
insl
jae
aaa
lock
call
dec
loope
push
or
repz
xchg
xlat
imul
xor
loope
ss
ret
dec
icebp
adc
mov
pop
and
lcall
sub
xor
mov
fwait
les
adc
hlt
fwait
shr
je
jmp
pop
shlb
cmp
jge
and
mov
sbb
cmpsl
lahf
icebp
push
es
mov
pop
xor
test
popf
push
rcll
rcll
inc
jns
idivb
or
dec
mov
push
addb
add
loope
adc
or
sub
pusha
mov
jne
movsl
pop
loop
sar
ss
cld
cmpsl
pusha
in
rorb
adc
fdivrs
in
mov
mov
mov
popa
cmp
push
mov
ja
inc
daa
add
jmp
popf
pop
and
aas
cli
xor
hlt
push
aam
js
mov
jp
xlat
lds
sidtl
sbb
inc
and
push
cltd
mov
fiaddl
addr16
ret
push
jmp
mov
adc
mov
or
pushf
jle
pop
add
xchg
adc
push
inc
das
jno
daa
mov
cmpsb
inc
mov
rcll
sti
sub
or
dec
mov
and
inc
inc
dec
arpl
fnstcw
xchg
daa
pop
add
mov
push
pushf
cmpsb
jg
lock
and
scas
lods
sbb
mov
mov
sub
jnp
icebp
ficompl
out
rol
cmp
mov
mov
cltd
push
pop
into
aaa
pushf
inc
rcrb
inc
jle
fisubl
outsb
pop
or
ss
stc
inc
and
pop
jne
jg
lahf
pop
cmp
mov
leave
mov
xorb
ret
pop
fbstp
movsl
push
sub
mov
cmpsb
int3
adc
xlat
orl
je
inc
fldt
adc
and
push
outsl
jbe
lock
in
dec
addb
push
lret
jno
xchg
xchg
scas
sbb
je
push
mov
bound
in
add
lahf
xchg
inc
pop
into
hlt
sbb
pop
popf
push
ret
out
xchg
inc
jle
test
mov
inc
sbb
add
adc
loope
aam
add
cmp
popa
add
adc
and
popa
mov
pusha
loop
cmp
movsb
fcomps
mov
push
xchg
in
jle
rorb
nop
sub
add
or
cmp
dec
sbb
pop
jge
lods
psubsb
adc
jg
cli
fcomip
mov
clc
inc
jg
or
mov
mov
xchg
fsubr
int3
mov
rorl
adc
sbb
jo
mov
loope
adc
jnp
repz
cmpsl
daa
insl
pop
add
sbb
iret
insl
stos
inc
mov
pushf
sub
sti
shll
xchg
fwait
or
repz
mov
dec
enter
adc
sti
add
pop
adc
mov
jmp
pop
lods
aad
xor
es
fwait
pop
rcrb
jg
jbe
movsl
jg
es
sti
sti
dec
inc
pop
cmp
fs
adc
pop
in
mov
scas
ror
xchg
jecxz
lret
int
inc
mov
popa
arpl
xorl
fistpll
jne
leave
dec
lea
add
jmp
push
pop
stc
mov
jl
test
jp
adc
jmp
or
sub
cmp
adc
xor
fcomps
ficoms
sbb
dec
std
sub
mov
mov
dec
lcall
dec
rorb
mov
mov
xlat
and
push
sub
lea
fnstenv
mov
mov
jg
out
loope
cltd
xor
lods
sar
jg
jge
push
mov
orb
popa
ja
sub
inc
ja
xor
hlt
cmpsb
sbb
push
mov
les
add
xor
ret
clc
cmp
add
cli
dec
mov
scas
popa
or
call
adc
inc
xor
sub
into
insb
stc
jns
mov
adcl
mov
push
push
mov
push
leave
lret
add
icebp
je
sub
mov
fisubs
je
popf
cmc
fs
push
out
aaa
xor
popa
push
dec
sbb
push
pop
cmp
pop
sub
mov
cmc
mov
call
cltd
out
xchg
xchg
adc
fimull
std
sbb
andl
jecxz
jmp
fwait
xor
lods
pop
fimull
sbb
push
call
sub
adc
daa
mov
lar
mov
mov
out
jb
mov
pop
frstor
test
and
std
les
ret
or
es
jbe
insb
das
adc
subb
pop
daa
int
js
and
jns
jge
in
jae
dec
lods
jl
mov
pop
mov
mov
hlt
jae
leave
cltd
mov
jne
sub
leave
sbb
ljmp
outsl
jl
dec
add
jns
in
jl
cmpl
jnp
lea
les
ja
xchg
loope
sbb
mov
jmp
ss
iret
xor
imul
or
in
inc
leave
sbb
mov
jbe
in
repz
push
mov
subb
cmp
xor
lods
push
mov
aam
pushf
mov
inc
out
pop
xor
jns
cmp
mov
xchg
pop
sbb
outsb
adc
stos
jge,pt
bound
pop
movsb
jge
popa
test
xchg
aam
in
ss
gs
pop
pop
scas
pop
int3
das
lea
dec
fs
dec
stos
cmc
cmp
dec
fiadds
cld
ljmp
adc
lds
sbb
je
xor
pop
loop
shlb
jmp
push
jmp
adc
test
lds
imul
xchg
fcoml
sub
or
jns
gs
jg
xchg
inc
ret
mov
mov
mov
jmp
inc
jecxz
addr16
push
cmpsl
cmp
push
push
mov
mov
scas
push
jecxz
pop
daa
fsts
hlt
iret
cs
rolb
sub
push
mov
popa
daa
sub
clc
pop
jmp
xchg
fs
or
adc
mov
sub
popf
clc
mov
cmpsl
inc
adc
sub
les
inc
push
sub
ds
jp
jno
pop
out
or
sbb
jp
mov
rolb
data16
pop
movsl
sub
mov
dec
cmp
xor
nop
std
push
les
shll
fnstcw
sbb
mov
sbb
decl
insl
xchg
pop
sub
mov
fcoml
inc
cmpsl
popa
test
ljmp
adcl
or
sbb
pop
inc
inc
fwait
cmp
fimuls
loope
add
enter
imul
testl
inc
mov
pop
jae
les
adc
fstp
lahf
mov
lds
xor
jle
int
pop
inc
bnd
mov
daa
pop
subl
mov
xchg
dec
cld
insl
fadds
jo
lret
mov
jle
adc
and
test
addb
lret
sbb
push
in
cmp
cmp
mov
imul
inc
xchg
pop
shlb
add
xor
adc
cmpsl
aaa
mov
out
pop
fdiv
cltd
neg
sub
mov
push
fiadds
movsl
scas
mov
cmp
xor
out
jl
pop
shrl
push
fldenv
jecxz
mov
rol
outsl
pusha
je
popf
les
jge
mov
pop
movsb
je
adc
outsl
icebp
pop
movsl
lods
and
aaa
nop
mov
test
fwait
add
cltd
push
iret
jo
outsb
loopne
enter
out
aas
aad
iret
dec
lock
pop
mov
imul
repnz
stc
or
rcr
mov
jmp
cmp
lret
pop
lods
xlat
mov
mov
mov
das
xor
outsb
mov
jge
add
movsb
mov
inc
mov
jo
or
in
imul
sbb
jb
jecxz
movsl
push
and
ficompl
in
pop
call
pop
and
cmpl
repnz
ret
push
xchg
jmp
aam
out
xchg
sti
lock
imul
mov
stc
in
out
ret
mov
aaa
je
dec
push
pop
adc
sub
cmp
movsl
std
mov
inc
adc
mov
and
test
adc
sub
inc
call
mov
mov
sub
jbe
loop
fadds
mov
call
lret
inc
adc
jmp
sahf
out
lret
out
test
in
out
push
jne
inc
adc
test
pushf
pop
iret
xchg
icebp
xor
push
pop
pop
jns
sbb
aam
loope
mov
jnp
fildl
and
jecxz
mov
add
sti
orl
outsb
popa
neg
inc
cmpb
jecxz
or
in
mov
xorl
fisttpl
outsb
sbb
dec
test
mov
or
xchg
inc
pop
ss
adc
xor
test
inc
xchg
scas
add
xlat
and
mov
stc
add
adc
sub
add
jae
cmp
loop
sti
dec
loop
pop
mov
pop
into
jl
ds
jg
in
mov
push
rcrl
insb
inc
out
mov
or
test
inc
jmp
stos
data16
sbb
or
ss
adc
dec
push
push
aaa
lds
push
push
daa
orl
repz
lock
int3
add
mov
mov
xor
xchg
fldl2e
repnz
jmp
das
fcomip
pop
cwtl
mov
pushl
in
cmp
ja
cmp
fidivrl
cmp
mov
sarl
loop
outsl
add
sbb
pusha
inc
xchg
out
sbb
mov
sub
cmp
add
in
push
mov
cmp
dec
in
pop
dec
lcall
inc
or
mov
and
cmc
adc
fcmovne
in
cmp
mov
lds
fucomp
ja
scas
push
fmuls
rorl
faddl
aaa
xchg
in
push
call
pop
and
scas
enter
fwait
add
dec
mov
sahf
pop
mov
lahf
inc
sahf
pusha
xchg
jo
and
cli
loop
icebp
xor
cmp
test
xor
push
pop
and
cmp
push
jnp
xchg
neg
imull
dec
lods
in
push
shr
fdivs
jo
ljmp
xor
scas
rorl
mov
into
lea
in
mov
ss
std
js
out
dec
xlat
test
push
popf
mov
mov
cmpsl
imulb
clc
fldenv
arpl
push
sbb
sub
cmp
sub
jnp
mov
add
jbe
cmp
pop
or
and
add
mov
sbb
dec
or
je
imul
mov
pop
das
rol
push
xchg
jl
imul
sbb
xchg
jecxz
jns
mov
sbb
or
stos
inc
xchg
mov
pop
jle
ljmp
xchg
adc
pop
les
rcll
and
and
push
jp
xchg
daa
daa
aam
aaa
mov
sub
lcall
pop
adc
cmp
and
pop
repnz
shlb
xchg
idivb
push
out
pop
lret
rcrl
cmp
cmc
sbb
xchg
jmp
data16
aad
js
les
mov
jo
fistl
xor
sbb
dec
ja,pt
push
bound
mov
jne
subb
mov
push
sarl
add
test
hlt
pop
in
out
cmpsl
jecxz
xorl
stos
mov
jns
adc
loop
hlt
cmpsb
imul
add
not
sbb
cltd
std
lods
push
faddl
or
ds
cmpsb
add
int
mov
sahf
sti
insl
dec
mov
ret
cld
or
mov
add
lret
scas
dec
test
hlt
dec
mov
and
and
pusha
pop
cmp
clc
int
leave
pop
movsl
fnstsw
cmp
hlt
xlat
cld
daa
cwtl
loopne
jecxz
xchg
add
mov
xor
pushf
add
or
mov
xchg
repz
sbb
mov
shlb
cmp
iret
adc
push
adc
and
or
ret
lods
sbb
push
test
mov
cld
adc
sti
cld
xor
xor
lods
imul
xlat
icebp
je
das
into
adc
sub
push
push
cmp
icebp
aaa
sahf
xchg
mov
mov
push
daa
gs
loope
jmp
mov
xlat
sub
adc
dec
mov
imul
int
jle
testb
or
aas
dec
repnz
movsb
and
popf
push
mov
and
loope
stos
xor
or
aad
xchg
lret
xlat
stos
cmp
mov
inc
inc
clc
mov
popa
aas
shll
jle
mov
sbb
test
or
or
inc
inc
adc
xchg
mov
orl
sbb
dec
mov
filds
cmp
jmp
sti
cmpsl
negl
cwtl
out
cmp
sub
fwait
dec
in
std
fstps
stos
jae
into
mov
mov
add
xchg
popf
test
add
rol
jle
push
push
stos
push
push
rorb
fsub
fldl
jno
pop
mov
je
jno
jmp
mov
movsb
sbb
shrb
mov
sub
or
mov
cmp
mov
dec
sbb
test
insl
into
jecxz
pop
test
or
rorl
loopne
push
cmp
adc
loop
xor
les
enter
xor
inc
cmp
pushw
pop
rolb
fsubrs
add
in
mov
pop
jle
mov
xor
ret
mov
je
inc
rclb
push
cmp
mov
stos
jns
fistpl
inc
xchg
sub
scas
inc
xorb
and
dec
outsl
cmp
cltd
jnp
push
adc
jno
xchg
stos
xor
add
mov
dec
cmpsb
nop
fstps
pop
mov
add
sub
jnp
or
cli
pop
lock
mov
cmpsl
dec
int
subl
sbb
mov
lods
sbb
sbb
xchg
jnp
daa
in
sbbl
dec
ret
push
hlt
sbbb
ljmp
pop
xor
insb
cmp
in
adc
mov
dec
mov
push
movsl
mov
insl
gs
jp
and
xchg
sti
push
rorl
xor
xchg
inc
orl
jl
in
std
dec
cmpsb
fwait
out
jo
jae
rorl
mov
pop
xchg
pop
and
loope
mov
sahf
shl
dec
loopne
mov
lea
mov
test
xor
ss
adc
aas
inc
loope
dec
jnp
push
pop
pusha
scas
push
int3
and
pusha
adc
mov
lea
and
pop
cmp
stos
stos
push
push
fistl
mov
insb
shrl
adc
dec
sbb
mov
sbb
fimull
adc
lds
pop
out
or
fildll
aas
lea
clc
mov
mov
lret
pop
mov
mov
sbb
jecxz
jo
in
cmp
push
shl
xchg
mov
icebp
fldt
xor
ja
jbe
test
fwait
mov
mov
jg
in
jge
adc
xchg
xchg
mov
aam
aaa
ret
xor
dec
jne
loop
dec
jmp
and
bnd
subb
mov
mov
fcmovnbe
lahf
lds
cmc
clc
mov
fsubs
xchg
lds
adc
sub
xchg
add
frstor
jg
fisttpll
loope
or
jmp
cmp
ret
mov
test
or
push
pop
jmp
aas
mull
mov
loope
stc
ret
mov
sbb
imul
cld
in
iret
nop
add
das
es
sbbl
dec
scas
and
imul
and
repnz
and
in
cmp
fwait
pop
imul
sbb
mov
into
dec
or
xchg
dec
xor
mov
xor
negb
roll
lods
loopne
or
das
das
test
fs
testl
pop
push
sub
jne
fadds
inc
fildl
xlat
push
ja
cmpsl
cli
mov
lahf
jns
ja
mov
cmp
movsb
xchg
in
sub
push
xchg
fadds
repnz
inc
not
pop
sbb
push
out
mov
dec
xchg
push
and
shr
pop
out
bound
cmp
adc
and
jae
cmp
adc
repnz
aad
jge
pop
lods
dec
fcoms
mov
hlt
inc
fisubrs
clc
out
or
hlt
add
push
jno
push
clc
cwtl
mov
paddq
xor
add
test
push
scas
push
fmull
and
cli
aad
repz
inc
cmp
mov
test
pop
lods
mov
cmc
fnstenv
out
pop
mov
lods
jmp
sub
fcomp
mov
mov
cmp
in
mov
cmc
mov
xor
mov
jle
andl
repz
xlat
leave
cmp
fistpl
lahf
xor
cmpsl
xorb
xchg
cmp
mov
cmpsb
sub
fstps
adc
push
inc
lds
push
imul
icebp
adc
or
shl
sub
int3
sbb
xchg
and
test
pop
fnstenv
mov
xchg
xchg
add
out
repz
mov
cli
xchg
mov
ja
xchg
clc
jno
fcomps
outsl
sbb
test
imul
mov
push
in
mov
sub
dec
les
mov
mov
dec
xchg
fdivl
mov
dec
adc
jg
inc
sub
lret
jge
lds
sahf
xchg
mov
add
faddl
and
or
xchg
pop
push
dec
push
mov
inc
add
inc
sahf
cmpsb
test
leave
hlt
adc
mov
push
int
inc
fdiv
sbb
pusha
lock
in
and
or
sub
aaa
lock
in
loope
add
les
xchg
cmp
fs
std
xor
std
cmp
mov
popa
dec
popf
jno
fldt
mov
scas
jle
inc
lret
dec
dec
repz
mov
decb
lea
rolb
and
cmp
push
movsb
test
inc
movsl
scas
push
xor
xchg
adc
sahf
inc
fisttps
cmpb
iret
or
add
inc
cli
inc
aaa
in
jae
je
mov
sarb
daa
sub
sub
sub
inc
pop
dec
cmpb
mov
cmp
add
sbb
mov
jl
pop
mov
dec
mul
push
sub
imul
jmp
xchg
ficoml
mov
ja
popf
jne
inc
data16
mov
or
shrl
cmpsb
lret
mulb
mov
push
ja
pusha
fsubl
aas
pop
mov
push
push
push
jle
adc
lds
insl
fmul
ljmp
jo
shrb
lock
outsl
cltd
jp
lret
mov
and
cmp
rclb
int3
xor
pop
jecxz
cmpsb
shrb
xchg
dec
call
sub
jne
movsb
jg
cmpsl
negl
xor
rcrb
pop
call
stos
daa
fcoms
mov
xor
cmpb
leave
data16
js
repz
dec
scas
ljmp
std
stc
test
add
mov
mov
ss
inc
pop
or
adc
clc
pop
es
inc
dec
hlt
add
mov
dec
dec
fildl
ret
xchg
stc
dec
mov
inc
xor
lods
xor
nop
loopne
mov
enter
mov
push
mov
or
sahf
sti
shrd
popf
int3
mov
cmp
iret
xchg
test
jmp
adc
dec
dec
mov
push
dec
outsl
dec
inc
int
ret
imul
ss
add
jbe
sub
mov
xchg
inc
pop
or
inc
fs
pop
stos
push
jge
jp
mov
aas
daa
enter
in
aas
fnstcw
mov
mov
dec
jl
mov
add
insl
rolb
scas
mov
or
shlb
jp
cmp
ds
and
sti
adc
mov
mov
dec
push
mov
outsl
mov
lcall
or
lret
das
cwtl
push
mov
lock
or
dec
enter
fdivs
and
out
call
mov
insb
mov
daa
pop
mov
xchg
out
cmpsb
mov
jmp
scas
mov
push
push
in
mov
enter
pop
icebp
scas
lret
inc
daa
jmp
jecxz
mov
and
pop
lods
scas
add
sar
adc
enter
test
push
in
mov
sbbl
sarb
mov
arpl
das
or
pop
int3
pushf
adc
ret
pop
icebp
adc
sti
or
push
cmp
pop
mov
cld
pop
popf
push
sub
push
in
inc
adc
pop
mov
in
in
xchg
mov
and
xlat
jae
pop
mov
xchg
push
test
mov
sub
fists
int3
in
sbb
cld
sub
adcb
cmp
scas
mov
cltd
jecxz
and
and
mov
add
jno
and
push
xchg
pusha
loope
sub
enter
mov
xchg
inc
adc
out
les
fdivs
ja
sbb
popa
sbb
mov
nop
dec
cmp
loope
loope
push
sbb
pop
sub
mov
nop
mov
pop
jmp
sbb
icebp
orb
sbb
or
fldt
inc
jo
pop
jp
or
mov
insb
add
ret
negl
mov
fsubs
add
mov
lea
pop
gs
insl
cmp
mov
rorb
add
bound
inc
sbb
std
je
push
adc
insb
push
and
fs
add
in
or
rcrl
mov
mov
popa
mov
outsb
imul
cmp
jno
orb
pop
std
sti
push
in
repnz
movsb
add
packssdw
xchg
sbb
adc
sub
imul
and
imul
mov
fiaddl
mov
rolb
jle
push
xor
jecxz
stc
or
mov
popf
add
lahf
lret
push
hlt
mov
jns
jp
dec
cltd
test
jge
mov
ret
mov
xchg
popa
mov
inc
or
pop
push
ss
insb
or
or
pop
dec
imul
cwtl
push
mov
xchg
addr16
loopne
cmp
jl
aas
push
dec
in
and
std
bnd
lods
xchg
in
push
aaa
fsubp
mov
fmuls
xor
sub
sbb
push
or
push
mov
aad
enter
dec
mov
xchg
dec
dec
or
rorb
mov
in
or
or
jecxz
pop
mov
incl
fwait
idivl
cmp
repnz
insb
mov
jle
ljmp
lds
adc
decl
cmp
bound
test
xor
std
ror
mov
int
mov
jp
mov
aam
outsl
fnstcw
loop
cmp
sub
pop
insl
dec
faddl
push
mov
cmc
leave
and
fnstsw
adc
int
arpl
stc
xor
in
pop
lcall
mov
push
cmp
sti
cmpsl
sti
jmp
mov
daa
sbb
in
mov
or
movsl
pop
fwait
js
and
int3
lods
mov
enter
hlt
out
push
mov
sbb
push
sbb
xchg
jp
fsubrp
dec
jo
pop
into
dec
push
cmp
and
sub
outsl
in
fcoml
sub
dec
popf
scas
cld
ss
test
or
leave
movsb
inc
rorl
stos
fiaddl
or
loopne
sarb
stos
mov
cmp
imull
mov
add
inc
aad
lds
push
popa
data16
sub
stc
pusha
cs
mov
push
or
mov
pop
mov
mov
mov
jno
test
ds
mul
push
adc
cmp
ret
jnp
pop
xchg
cmp
lock
xor
decl
cmc
xchg
and
ret
dec
jne
or
movaps
mov
pop
mov
and
es
dec
stos
lret
xchg
frstor
adc
lock
dec
or
sbb
ds
pop
icebp
xor
fwait
ret
dec
add
in
push
and
mov
cs
shl
sarl
into
daa
jb
aad
push
out
pop
in
leave
inc
inc
test
jecxz
jnp
imul
mov
dec
std
mov
xlat
imul
adcl
add
daa
in
jg
js
jmp
mov
push
cs
fpatan
pop
sub
leave
push
cmpsl
bsf
push
lds
xor
xor
mov
leave
pop
das
test
inc
enter
mov
rcl
inc
add
jnp
inc
roll
and
pop
push
xchg
cld
add
fdivr
sub
xor
pop
jp
addb
cmc
iret
inc
inc
adc
out
and
mov
adc
loop
mov
orl
xchg
lcall
adc
les
add
pop
ja
ljmp
icebp
sub
nop
pop
rorb
inc
sbb
dec
cwtl
into
jecxz
jmp
out
popa
je
mov
pop
shlb
rcl
cli
cld
xchg
imul
pop
push
std
mulb
cs
mov
ds
sub
stc
scas
mov
jge
jmp
cmp
mov
or
in
mov
mov
cmp
dec
pusha
or
xchg
mov
mov
jne
dec
mov
pushf
cmp
add
repnz
xchg
dec
movsb
cli
sahf
mov
cmp
testl
aad
loopne
push
out
adc
out
ret
inc
cmpsl
jae
lahf
jge
iret
stc
push
mov
rcrb
mov
leave
iret
scas
test
stos
push
jmp
and
pop
or
inc
xchg
cwtl
pop
inc
aam
cld
pop
rep
int
adc
fdivrs
arpl
pushf
fwait
sbb
and
ja
fidivl
xor
mov
push
call
shrb
cltd
or
jp
aad
in
call
lahf
imul
pushf
fdiv
xorb
fcmovu
imul
jmp
and
sub
cmp
sbb
mov
cmpsb
cmp
jecxz
insb
sub
in
enter
mov
dec
and
push
mov
imul
iret
sbb
cmp
mov
xor
mov
push
xchg
int3
push
mov
cmp
jne
pop
push
fwait
cmp
xchg
shlb
adc
jle,pt
pop
inc
inc
insl
jge
fldt
mov
in
stos
inc
mov
jne
imul
xchg
fcmovnb
dec
jl
inc
insl
push
into
push
jns
mov
adc
sahf
fwait
lods
mov
and
popf
xor
adc
outsl
pop
pop
push
insb
jbe
cmp
jp
pop
cs
lcall
ja
aam
inc
insb
incl
scas
mov
add
insb
mov
ret
stos
rcr
xchg
loope
aas
iret
sbb
inc
mov
sbb
mov
pop
inc
rcr
test
sub
pop
inc
mov
inc
mov
cli
pop
dec
outsb
scas
cs
lcall
push
stos
jnp
cld
adc
push
inc
loopne
add
das
inc
jg
jmp
ja
jmp
int
inc
pop
popf
dec
or
mov
or
lock
mov
imul
nop
cli
pop
dec
jbe
int3
jns
cmp
fadds
insl
repnz
sub
adc
sub
pop
jl
push
jecxz
push
std
cmp
sbb
sub
jmp
rcrb
cmc
ffree
dec
or
in
mov
dec
ret
mov
cwtl
mov
jle
or
js
insl
cld
sti
xchg
mov
outsb
ss
f2xm1
mov
icebp
gs
add
fisubl
mov
icebp
cmp
or
jmp
test
xchg
test
out
imul
lret
pop
cmpsl
js
add
arpl
adc
stos
mov
inc
into
xchg
or
xchg
in
mov
fwait
xchg
dec
cmp
xchg
sbb
jbe
inc
or
and
outsl
inc
inc
js
in
aaa
outsb
mov
xchg
jae
lcall
arpl
cs
cmp
out
add
ret
divb
sahf
xchg
cld
jg
inc
push
ds
mov
jmp
pop
add
pusha
jg
test
jo
jp
xlat
mov
xchg
push
frstor
sub
call
lret
fstp
es
cs
pop
cs
mov
lea
insb
mov
cwtl
and
mov
cmp
xor
fs
popf
leave
sbb
test
mov
inc
insl
fstp
ret
shrb
adc
shrb
add
inc
icebp
cld
dec
cmp
mov
lret
fsubrp
ss
push
shl
xchg
push
or
jb
jno
icebp
pop
aad
add
cmp
fwait
add
sbb
loopne
fs
repz
movsl
mov
xchg
fimull
push
cmp
adc
push
inc
adc
aas
insb
sahf
out
out
jbe
push
popf
cmc
pop
inc
data16
pop
enter
lods
aam
xchg
cs
dec
cmp
ret
mov
movsl
inc
inc
dec
mov
sahf
jns
in
outsl
add
jl
call
jnp
movl
adc
pop
mov
int3
test
shr
mov
movsb
das
dec
xchg
and
push
fsubrl
movsl
testb
dec
negl
out
out
scas
cmc
adc
pushf
pop
or
ds
data16
repz
adc
mov
mov
mov
xor
movsb
lret
aaa
sti
pop
push
mov
or
mov
and
mov
or
out
xor
mov
mov
iret
lods
ss
int3
dec
jne
das
or
mov
cmc
sti
mov
sub
push
lahf
bound
lahf
out
jb
movsb
test
test
push
xchg
pop
jo
cmpsl
mov
inc
sbb
repnz
xor
aas
cmp
cmc
decb
sbb
scas
pop
aad
push
jnp
scas
cmpsb
push
add
inc
clc
mov
leave
sbb
cmpsb
jle
mov
enter
pop
arpl
mov
div
adc
xchg
fisubs
mull
xor
stc
mov
in
mov
in
not
push
lods
fucomip
adc
mov
inc
push
pop
mov
lods
daa
lahf
lcall
incb
fidivrl
sti
jno
mov
lahf
or
cmpsl
inc
lock
movaps
pop
leave
mov
pusha
sub
cmpsl
fldl
mov
lds
in
or
dec
and
dec
test
std
mov
ret
int
jg
cmc
fstpt
or
pop
fistpl
fwait
pop
shll
dec
cld
lret
mov
call
fcmovu
or
mov
int
aam
in
push
icebp
xchg
sub
and
mov
add
and
shlb
out
scas
mov
ds
or
or
mov
mov
add
xchg
imul
sub
rcrb
sub
insb
xor
xor
xchg
pop
les
or
pop
xor
mov
leave
add
or
sub
dec
les
mov
mov
push
fcompl
rcll
or
lcall
addl
pushf
mov
bound
jge
pop
mov
inc
jp
dec
addr16
inc
sbb
popf
sarb
xchg
and
xor
pop
jecxz
push
add
test
cld
inc
pop
loop
ret
aam
or
callw
imul
add
push
pop
test
lock
jno
or
out
and
xor
xchg
xor
jle
mov
dec
push
pop
pusha
add
add
shrb
xchg
lret
test
sbb
cli
xchg
mov
mov
fiaddl
cltd
inc
hlt
fcmovbe
sahf
sbb
pop
cmpsb
cmpsb
mov
mov
test
xchg
cmpb
inc
xchg
out
jne
fsubrs
cmpsb
add
inc
aam
xor
mov
data16
aaa
lcall
jnp
inc
and
jmp
jbe
stos
xchg
insb
in
mov
out
mov
push
lcall
cmp
mov
pop
add
sbb
mov
jge
mov
aaa
dec
jmp
outsb
sbb
add
sbb
push
or
add
rorb
fcompp
mov
fdiv
orb
and
mov
mov
loope
mov
cmp
cwtl
lock
ljmp
mov
mov
jg
pop
movsb
mov
in
and
sbb
sbb
cwtl
dec
std
test
js
jg
adc
push
or
decl
or
add
xor
sub
aam
movsl
aaa
add
sbb
xchg
push
add
lahf
and
pop
xchg
add
cwtl
or
dec
or
jmp
das
bound
add
sub
xor
mov
pop
adc
fwait
jecxz
ds
inc
lods
xchg
push
insl
dec
cmp
rorl
jmp
enter
es
out
pushf
and
inc
pop
ljmp
lods
pop
adc
jl
sub
daa
xor
or
or
xor
push
sbb
mov
daa
stos
popa
adc
jne
xor
mov
sub
into
jo
jno
scas
ljmp
and
test
cmpsb
and
lea
mov
push
or
das
cltd
sbb
add
loopne
inc
cmp
pop
push
mov
mov
pop
mov
sbb
inc
lcall
and
lods
jg
or
pop
mov
jo
mov
hlt
idivb
cs
add
pop
dec
andb
adc
xor
mov
test
jbe
jmp
scas
inc
fdivrp
push
fisubrl
jl
roll
scas
inc
sbb
scas
out
lret
imul
push
mov
lds
push
fld
jo
divl
adc
sub
jns
frndint
jp
fidivrl
jp
mov
dec
movsl
in
sub
clc
int
inc
mov
cmp
in
hlt
ds
fs
add
xor
add
mov
in
iret
mov
popf
dec
or
fdiv
inc
and
fiadds
aad
hlt
inc
mov
pop
sbb
and
insb
movsb
push
leave
add
and
jp
arpl
or
jmp
je
fs
lcall
or
sti
es
popf
cs
mov
sahf
cmpsb
ret
movb
push
js
mov
dec
sub
hlt
roll
lock
in
or
lcall
dec
xor
or
adc
sbb
iret
dec
fcmove
and
sbb
dec
out
or
jl
lods
aaa
repnz
pusha
sub
dec
popf
or
and
cmp
ja
sub
xchg
in
sti
jl
push
push
imul
imul
clc
jl
stos
inc
cmp
pop
jb
pop
hlt
rep
and
dec
xor
or
test
sub
data16
xor
shlb
cmp
cli
or
or
repnz
mov
or
or
sbb
scas
mov
xchg
fwait
lret
push
adc
js
sub
push
inc
inc
and
bound
xchg
div
mov
add
adc
imul
mov
mov
push
jbe
dec
jae
ja
jle
scas
mov
in
pop
mov
mov
dec
mov
sub
in
rolb
jo
xor
mov
dec
cmp
stc
cld
jg
or
aam
push
jp
cltd
in
loope
push
mov
lahf
mov
add
ret
dec
jno
sarb
and
sahf
repnz
jb
sti
and
into
rol
sarb
pop
gs
jmp
xchg
das
shrb
aaa
fildll
call
test
repz
movsb
lret
aaa
dec
ret
jge
lods
int3
je
cmc
pop
sbb
iret
es
cmp
fwait
mov
enter
sub
call
addl
adc
scas
sub
insb
adc
cmp
inc
or
test
dec
jne
test
xchg
imul
lahf
dec
outsl
pop
rolb
sbbl
inc
mov
call
mov
fwait
mov
in
mov
xor
xchg
call
xlat
mov
sub
inc
dec
jb
sbb
mov
mov
sub
add
filds
stc
fldt
mov
lret
sub
xchg
adc
int
xchg
shrb
mov
mov
pop
cmp
pop
sbb
xchg
xchg
mov
or
dec
adc
les
and
out
mov
xchg
sbb
daa
add
cmp
lods
fcoml
les
into
push
fisubl
mov
dec
sub
mov
ds
add
stc
pop
mov
repz
xor
test
mov
repnz
jmp
data16
mov
xor
mov
jns
les
lds
xor
aad
lods
mov
mov
mov
mov
sbb
mov
ljmp
jo
add
lcall
in
aas
add
push
cmp
push
dec
insb
mov
pop
mov
sbb
inc
arpl
fisttps
fnclex
xor
push
lea
in
and
dec
add
xlat
sub
pusha
cmp
rorb
or
aas
lahf
lret
test
jl
adc
jge
jg
movsl
sub
or
out
mov
mov
pop
in
out
pop
xor
xchg
sbb
or
mov
xchg
cmp
and
xchg
or
insb
jl
in
inc
clc
cmp
mov
ror
fscale
and
sub
test
fadds
xlat
push
xor
cmpsl
dec
dec
mov
arpl
test
aaa
mov
repnz
arpl
or
jmp
stc
dec
sbb
mov
add
adc
xor
dec
push
loop
shl
lock
imul
js
mov
std
push
add
fidivl
xlat
push
mov
xchg
sbb
mov
mov
fidivl
cwtl
pusha
fidivrs
cmp
mov
inc
pushf
pop
dec
psubq
pop
jmp
movsl
in
push
lcall
filds
cmc
and
std
call
add
cmpsb
dec
add
insl
mov
cltd
mov
imull
call
loope
int3
lea
pop
frstor
aas
mov
or
lock
scas
cmp
adc
pop
scas
cmp
scas
jo
cmp
inc
ret
rorb
and
ja
xor
jl
jl
inc
push
add
cmpps
pop
mov
leave
ret
rcll
mov
int3
cmp
das
jnp
xor
jbe
xor
fsubrl
cmp
cmp
add
sbb
nop
movsb
sub
jle
repnz
mov
xchg
cmp
stos
xchg
dec
adc
sbb
jno
cmp
push
xchg
notl
in
and
jmp
pop
jno
jmp
mov
mov
int3
mov
jg
mov
lcall
test
mov
in
mov
aaa
sub
mov
dec
dec
cmpsb
cltd
sbb
pop
mov
int
cmp
dec
sarl
jle
fstpt
xor
test
xchg
sub
xchg
aas
sub
add
jnp
inc
lahf
add
inc
pop
lods
mov
inc
adc
popf
shrl
ret
inc
pop
pop
jmp
push
sbbl
insb
and
nop
les
adc
ficomps
pop
arpl
into
sbb
inc
xchg
xorl
daa
mov
jo
lock
jmp
xorb
adc
sbb
mov
sub
xor
dec
in
pop
lods
cmp
call
int3
mov
fiadds
jo
sub
inc
xchg
sub
loopne
sub
imul
push
in
cli
mov
xchg
movsl
mov
scas
hlt
and
and
mov
mov
testl
mov
or
repz
push
call
push
enter
in
push
icebp
sahf
adc
mov
dec
repz
loop
dec
rclb
inc
mov
dec
sbb
inc
roll
inc
movsl
lods
push
pop
xchg
ljmp
mov
int3
mov
jnp
js
and
mov
and
ds
rcr
or
test
xorl
pop
out
add
adc
jge
sub
fnstcw
ficoml
rcrb
call
pushf
xchg
ljmp
hlt
mov
cmpsl
popa
scas
aad
gs
sahf
jmp
xor
cmp
mov
ret
enter
dec
sahf
xchg
sbb
jmp
aam
cmp
pop
inc
cwtl
adc
pop
repz
outsl
pop
mov
mov
push
inc
cld
notb
push
loopne
subl
cmpsl
lahf
pop
insl
lcall
mov
cmp
cmpsl
call
gs
mov
cmp
cmp
subl
mov
inc
les
xchg
out
mov
rcrb
mov
mov
pcmpeqd
outsl
push
out
xchg
mov
stos
and
dec
lea
xchg
xchg
stos
inc
pop
shll
adc
cli
mov
repnz
push
add
add
stos
add
mov
scas
stos
xor
jg
and
shlb
mov
jbe
sub
ficompl
rorb
xlat
and
adc
mov
mov
loope
dec
mov
jg
mov
xlat
mov
in
push
sbb
mov
inc
xor
je
aam
mov
enter
mov
inc
add
pop
int
ljmp
mov
stos
pop
adc
mov
push
add
mov
xor
mov
jecxz
lcall
pop
xchg
mov
sbb
lods
pop
push
or
push
lods
jnp,pn
mov
int
jmp
pop
jo
andb
into
lods
aad
cmp
jae
and
xor
xchg
mov
cld
mov
enter
jmp
xchg
int3
loopne
bnd
xchg
ficompl
mov
out
jl
fcmovnbe
xchg
and
adc
mov
and
xchg
push
andl
jnp
pop
xchg
xchg
into
add
xor
push
std
leave
inc
lret
imul
dec
int3
push
cli
sub
je
leave
into
pop
fsub
sbb
mov
push
call
stos
xchg
lea
mov
lock
or
mov
frstor
popa
jl
cmp
fcmovnbe
in
fwait
xchg
jp
or
sub
dec
sbb
ror
out
hlt
out
or
mov
cmp
loope
aaa
inc
pop
inc
out
xor
push
or
hlt
fisubrl
mov
cmc
inc
pushf
mov
mov
mov
lahf
imul
mov
movb
inc
mov
xor
lret
fs
aas
outsl
inc
repz
mov
adc
push
movsb
fistpl
mov
mov
lods
xchg
jnp
cmovle
test
das
popa
das
xor
mov
rolb
sbbl
sbb
and
inc
mov
fldcw
ja
xor
in
mov
pushf
ljmp
cli
xor
push
adc
ljmp
iret
inc
xor
adc
push
xor
pop
repnz
dec
stc
cmpsl
add
aad
in
rcrl
test
cmp
sahf
jmp
jno
xor
shlb
push
arpl
ficoms
and
jmp
xchg
push
ss
and
cwtl
js
popa
sti
lods
leave
and
mov
jo
cld
cmpsb
into
jno
xor
xchg
jle
pop
sub
rorb
scas
mov
and
adc
aas
sti
push
pop
cld
jp
cmp
lcall
les
push
push
aam
push
subb
mov
negl
lods
pop
inc
in
popf
data16
jp
int3
or
into
push
sarb
lds
cmp
push
jnp
sub
xlat
cmpl
xor
xchg
in
mov
xchg
or
rcl
dec
daa
or
outsl
cmpl
jl
xor
jno
inc
or
mov
sub
out
and
sbb
xchg
jmp
leave
ret
scas
pop
sub
jge
gs
testl
sub
sar
add
rorl
sub
scas
js
mov
pop
mov
push
xor
bound
dec
call
or
rcrb
jl
mov
jbe
xchg
pop
push
mov
mov
xchg
popa
xor
loopne
or
hlt
mov
lret
insl
cli
jno
enter
das
in
mov
inc
sub
mov
push
ljmp
or
push
rep
or
pop
ret
inc
pop
push
popa
xchg
test
lea
in
add
cmc
aad
aad
push
ds
sbb
jbe
out
and
out
cmpb
adc
mov
call
cmp
test
fdivl
cli
hlt
lahf
andl
aas
xchg
insb
sahf
repz
cs
cmpsl
pop
mov
cmp
pushf
ret
or
shll
out
enter
mov
in
and
mov
iret
pop
mov
push
cs
mov
call
jp
movsl
inc
popa
and
fisttps
loopne
fs
js
cmp
insb
mov
stos
pop
mov
nop
imul
sarl
jecxz
ds
push
aas
pop
lock
xor
cmp
mov
dec
shld
in
cmpsl
push
push
insb
adc
lds
jo
fidivrs
push
or
cmpl
or
mov
xor
cs
sub
hlt
jp
and
fmull
in
xchg
push
or
and
adc
and
inc
out
and
pop
sub
jne
stos
jo
mov
sahf
mov
rol
and
outsl
and
lret
adc
leave
jmp
test
jo
mov
enter
jbe
sub
fisttpll
lret
in
lcall
add
js
push
jae
and
cld
xchg
int3
into
movsb
pusha
fnstenv
mov
pop
call
sub
xchg
push
jl
inc
sub
cmpsl
cmp
pop
arpl
arpl
mov
int
or
roll
push
sbb
scas
cwtl
test
push
adc
test
out
fists
insl
hlt
mov
dec
fst
cmpb
pop
or
push
movsl
shlb
sahf
test
sbb
push
xlat
add
inc
les
into
sbbb
loop
dec
sti
not
stos
lds
sti
push
mov
out
fsubrs
fildll
xchg
imul
sub
inc
stos
nop
inc
pop
jne
pop
jae
mov
dec
push
push
cld
fwait
scas
or
xor
dec
lret
jl
push
in
adc
jbe
mov
xchg
inc
xor
loopne
int3
pushf
aad
fsubs
mov
ficompl
mov
loope
cltd
mov
out
cmpsl
mov
ret
ret
adc
pusha
add
pusha
mov
setbe
pop
fists
jo
icebp
xor
mov
xchg
aas
cmpsl
mov
bnd
adc
add
mov
jp
loop
lods
ja
test
and
xchg
aaa
xchg
mov
sub
or
aas
ljmp
popf
mov
out
add
xchg
icebp
mov
dec
test
and
sub
fs
cltd
ljmp
pusha
in
push
dec
das
jl
sbb
push
add
ljmp
pop
fstpl
pop
jecxz
cmpsb
pop
pop
pop
and
mov
jnp
or
fld
lcall
push
inc
repnz
adc
add
add
mov
pushf
leave
mov
mov
pop
cmpsb
in
lret
imul
fnsave
cmp
pop
or
or
call
lret
ret
mov
pushf
mov
push
sbbb
push
mov
outsl
and
push
stos
ljmp
sub
loopne
popa
std
dec
sbb
sbb
mov
mov
repnz
adc
inc
imul
jns
rorl
jb
or
std
jnp
sub
repz
out
xchg
cld
sub
push
aas
add
xorl
mov
and
sbb
xchg
testb
ljmp
enter
adc
jbe
dec
cmpl
fdivl
mov
jle
or
mov
test
sbb
outsl
xchg
outsb
inc
cmp
cmp
mov
test
les
stc
ret
leave
sbb
and
adc
imul
add
dec
imul
push
dec
xor
cmp
mov
push
cmp
or
insb
callw
mov
jge
mov
std
fidivl
rclb
sub
jae
push
test
mov
outsb
insl
sti
popf
mov
sub
jae
aad
and
mov
adc
dec
sbb
mov
fwait
xlat
cmp
add
pop
pop
sbb
rcrb
lock
xor
fcomi
cwtl
mov
jo
test
push
inc
jae
fimuls
sub
mov
movsb
xor
xchg
dec
into
in
aaa
sub
fldenv
cmp
jmp
data16
sub
mov
mov
inc
dec
mov
shl
jp
xchg
jg
add
movsl
or
dec
fstpl
lahf
pop
mov
adc
adc
dec
ljmp
dec
cltd
ljmp
fiadds
pop
negl
xchg
cmp
adc
cmp
adc
test
sbb
add
rcl
test
bound
sbb
sub
mov
jp
fstpl
test
jb
pop
cmc
jbe
mov
jne
aad
loope
cmp
or
inc
test
sbb
and
and
adc
mov
add
or
pushf
sbb
lret
sarb
test
push
push
lods
xchg
sbb
and
test
xchg
fwait
jecxz
jmp
mov
loop
inc
pop
popf
add
xchg
jg
and
out
call
shlb
sarl
icebp
movsb
jl
mov
loopne
cli
repz
ficoml
and
pop
out
push
inc
out
or
inc
in
sbb
add
push
nop
test
sbb
mov
leave
xchg
dec
sub
mov
iret
jmp
add
pop
stos
out
and
xchg
fwait
scas
scas
pop
inc
sarb
inc
subl
add
or
mov
xchg
push
xlat
orl
scas
testb
addl
aam
pop
in
cltd
xor
mov
or
adc
or
xchg
adcl
cltd
fildl
in
mov
sub
dec
xchg
insl
cmc
das
jle
cli
lods
jecxz
push
rcll
cmc
enter
cmc
jnp
mov
pop
sub
mov
std
test
mov
push
inc
movsl
dec
loopne
jb
lret
into
lods
jns
movsb
push
dec
clc
xor
or
pushf
adc
cld
jle
cmp
xor
mov
cltd
mov
push
loopne
sbb
aad
in
jmp
shl
out
in
popf
pop
test
outsl
xor
adc
bound
or
popf
loope
mov
faddl
stc
loopne,pn
gs
dec
out
repz
cmp
push
pop
rorl
jbe
cltd
shl
test
std
cmp
pop
jge
adcb
int
lret
and
in
dec
loopne
into
das
sub
in
mov
frstor
aaa
mov
inc
int3
ret
cmpsb
and
mov
jns
mov
insb
sar
cltd
xor
xchg
sbb
push
xor
adc
push
xchg
sbb
sbb
mov
jne
addb
xor
mov
jp
fmul
dec
jns
push
pop
pop
into
pop
and
movsb
mov
fprem
enterw
xchg
push
dec
adc
jo
or
aam
xchg
ljmp
mov
push
dec
mov
subb
imul
push
ret
xchg
cmpsb
sahf
test
jbe
sub
sbb
mov
icebp
dec
jecxz
xchg
push
pop
imul
xchg
cmp
addb
outsl
mov
push
push
loopne
or
cmp
mov
jae
push
xor
jge
push
inc
int
out
mov
inc
jo
daa
or
lods
push
inc
stc
mov
ret
jb
inc
dec
loop
mov
pusha
out
int
icebp
out
nop
lret
sahf
ja
das
add
sbb
dec
ret
ret
mov
out
aas
lcall
imul
adcb
push
int3
mov
mov
inc
lods
fsub
add
xor
mov
push
cmp
rorl
in
outsb
push
test
adc
mov
dec
xor
ja
pop
xlat
jmp
test
repnz
popf
pusha
cli
jno
cmp
fstpt
push
clc
frstor
sub
mov
insl
sarb
and
popa
ret
sahf
inc
movsb
sbbb
xchg
pop
cmpsb
out
add
int
js
enter
repnz
sub
dec
data16
lods
movsb
rcrl
xchg
inc
jns
rcll
cmpsb
or
jne
cld
lret
jo
iret
mov
jecxz
mov
xor
test
scas
xor
in
and
insl
xchg
fcompl
cmpsl
ss
das
cmp
fdivs
sbb
in
sbb
or
mov
ret
pop
ret
or
mov
xor
ret
test
mov
test
xchg
notb
or
movsb
xor
leave
movsl
aam
inc
jno
xchg
insb
arpl
sbb
out
addr16
and
and
out
xor
mov
adc
roll
jg
xchg
xchg
mov
inc
sub
lock
add
mov
xor
mov
mov
cmp
arpl
mov
aas
adc
pop
jl
push
popf
int3
test
and
bound
sub
sub
std
or
mov
ss
cmp
out
rolb
pushf
and
lret
add
and
cs
in
cli
sub
xor
inc
mov
mov
arpl
push
jb
jnp
sub
mov
xor
outsl
aam
ljmp
mov
lahf
outsb
fs
fiaddl
cmp
outsl
and
out
jmp
sub
test
rolb
imul
mov
jo
call
mov
ror
add
dec
mov
adc
lods
loop
ficoms
xor
rolb
mov
jnp
test
in
repz
xchg
in
add
popf
xchg
cs
push
ja
push
in
xor
xor
out
adc
stc
xlat
lret
loopne
xchg
pmulhuw
xchg
pushf
xor
pop
in
xlat
movsb
push
push
loope
sub
fcmovnb
lret
inc
std
add
cmp
sbb
fnstenv
lret
lock
nop
cli
pusha
aaa
fcomps
shlb
sahf
or
xchg
arpl
or
mov
push
sbb
and
mov
fs
out
mov
xlat
mov
cmp
cli
out
fcoml
test
push
mov
outsb
adc
sbb
push
sub
mov
cltd
mov
ror
inc
or
jo,pt
sub
sub
cwtl
mov
loopne
xor
dec
sub
inc
pop
cmp
or
mov
pop
sbb
and
add
sub
repz
jno
data16
mov
popf
icebp
ljmp
sbb
outsb
fadds
cwtl
fmuls
insl
mov
int
mov
lret
mov
push
add
push
mov
inc
mov
adc
psrad
mov
cmc
xchg
aaa
pop
int3
in
cmp
sahf
mov
sub
cmc
mov
int
cmpsl
in
xchg
nop
movsl
pop
or
inc
lret
mov
sub
adc
popf
imul
xchg
push
iret
scas
push
ret
sbb
rcll
mov
mov
test
fiaddl
mov
inc
outsl
bound
mov
and
mov
add
push
dec
rcll
push
push
cmpsl
popa
rcr
mov
sbb
dec
and
cmp
push
mov
mov
cmpsb
pushf
jo
ljmp
adc
and
pop
pop
inc
test
call
mov
ret
pop
sti
test
inc
push
sub
mov
dec
in
lods
mov
and
or
push
repz
inc
shr
gs
stc
adc
inc
adc
pop
jo
pop
mov
popl
sub
outsl
push
mov
push
test
cs
or
push
xchg
hlt
sbb
cld
ret
movsl
and
and
popf
sbb
popa
arpl
in
push
mov
dec
data16
imul
and
fwait
clc
adc
fdivs
aad
jp
mov
daa
xor
idivb
aam
pop
out
rorl
mov
lods
mov
ds
dec
fstl
pop
cmp
sbb
or
mov
mov
fnstsw
jbe
mov
sti
push
addr16
arpl
and
dec
je
and
enter
movsb
adc
dec
cmp
jae
out
aaa
shrl
cmp
cmc
pop
sahf
out
fadds
shlb
mov
push
fisttps
or
dec
leave
jb
lea
sbb
pop
push
fcoms
push
pusha
fsubs
loop
add
repnz
popa
sub
mov
in
ss
jge
test
push
jge
andb
cmp
pop
arpl
mov
call
cmp
test
lock
outsb
jmp
push
push
mov
imul
push
and
sub
xor
xor
mov
or
das
add
dec
push
in
sbb
das
jo
and
repz
cmp
xor
idivl
or
dec
cmp
shlb
mov
sub
mov
outsl
mov
lahf
sub
jmp
xor
xor
sub
out
movsl
push
inc
movsb
aam
and
les
xor
push
mov
sub
jmp
mov
jge
sbb
push
adc
stos
xchg
lds
cltd
push
lea
mov
sarl
xchg
inc
das
sub
pusha
dec
dec
add
cmpsb
fisubrl
jmp
pop
dec
ds
mov
adc
push
jb
or
mov
mov
std
and
mov
inc
or
cmp
fadd
jge
and
js
add
cwtl
dec
sahf
jne
dec
in
inc
fisubl
outsb
mov
hlt
jae
rcl
push
repz
sbb
mov
mov
movsl
ds
or
xlat
in
pop
jmp
mov
jp
rcrl
pop
jge
iret
sbb
pop
icebp
je
dec
lea
pop
lret
enter
aas
dec
inc
xor
cmp
iret
into
xchg
out
dec
or
lea
fmull
pop
out
jae
sahf
stc
sbb
jno
ljmp
nop
add
sbb
jge
inc
sbb
imul
inc
mov
inc
loop
dec
sarl
jg
lods
das
pop
cwtl
out
int3
and
mov
sbb
sarl
jnp
shl
dec
fwait
out
pop
lahf
or
sub
ret
ds
pop
fs
or
lods
mov
or
sub
push
cmp
repnz
lret
add
pop
mov
mov
sub
fucomip
filds
push
push
cmp
cmpsb
push
iret
or
es
icebp
fiadds
popf
loopne
xchg
enter
lret
ror
inc
enter
fidivrl
pop
jle
dec
mov
ds
inc
adc
xchg
repnz
fdivl
jo
adc
xor
out
xor
adc
lods
int3
push
pusha
out
test
ss
ret
mov
cltd
imul
lock
add
inc
insl
addb
test
out
ss
mov
xor
add
push
cli
in
jp
or
jmp
push
push
shr
xchg
rorl
js
hlt
xorb
xorb
jp
xor
iret
sub
cmp
imul
ja
add
mov
jae
arpl
or
cltd
jmp
mov
pop
in
cmp
neg
push
mov
mov
scas
shll
or
insl
in
add
jb
dec
sbb
mov
sub
fs
xor
call
jnp
mov
ret
dec
lahf
add
fcompl
mov
cmp
mov
aad
push
out
fists
int
aam
mov
and
xchg
in
xchg
aad
pusha
test
mov
jecxz
sbb
jle
jecxz
imul
sbb
dec
adc
shlb
lret
sub
pushf
jp
cmp
cmp
in
push
outsb
mov
sub
and
loop
stos
out
insb
fists
cli
in
mov
fnsave
dec
sub
dec
stos
xor
mov
lds
jecxz
mov
cmp
jnp
push
sub
jge
in
test
jns
pushf
mov
stos
adc
popa
add
xor
xlat
test
loopne
pop
ret
adc
push
adc
stos
mov
pop
inc
xchg
or
stos
mov
aam
and
das
daa
and
movsb
test
cli
add
es
jno
cmpsb
into
cmpsb
push
movsl
jl
push
or
jmp
lcall
fwait
scas
fdivrl
rorl
ds
sbb
out
ficompl
test
aam
jns
clc
mov
mov
imul
mov
movb
adc
ret
test
movsb
aas
add
stos
lret
xor
cmpsb
mov
and
int3
pop
jbe
inc
pop
sbb
outsb
mov
inc
icebp
xchg
bound
dec
addr16
sbb
mov
sahf
stos
or
add
mov
sti
cmp
push
mov
movsl
out
or
int3
and
pop
clc
out
ds
add
fwait
imul
and
outsl
pushf
negb
lret
inc
sub
or
mov
push
sub
push
jne
mov
mov
push
push
mov
repz
ss
negb
mov
pop
clc
lret
pop
inc
cwtl
push
icebp
and
mov
jmp
or
xor
out
cli
xor
arpl
aas
in
ret
movsl
movsl
jecxz
test
je
add
adc
shlb
mov
adc
jbe
lcall
clc
or
xchg
pop
xchg
mov
mov
es
ljmp
push
sub
outsl
push
in
in
and
mov
enter
test
jno
fwait
inc
rcll
loopne
or
xchg
add
mov
push
stos
mov
popf
cmp
mov
and
pop
push
stc
daa
mov
xchg
pop
test
aas
xchg
shl
sub
icebp
in
xor
jl
and
sub
fs
stos
add
je
adc
and
push
js
notl
xchg
add
cld
outsl
pop
popa
dec
dec
inc
imul
jle
push
sarb
ljmp
mov
cmp
sbb
jl
iret
fcoml
xor
cmp
or
inc
pop
push
iret
jnp
in
mov
loop
inc
and
dec
add
jle
pop
jnp
dec
sub
mov
shl
std
cltd
lods
frstor
mov
inc
pop
and
xor
xchg
idivb
inc
ds
mov
add
inc
mov
in
mov
pop
ss
inc
into
clc
cmpsb
push
out
inc
js
xor
dec
push
imul
inc
xor
adc
dec
ja
inc
sbb
mov
cmp
aad
jnp
push
push
test
movb
in
and
outsl
fstpt
sbb
ljmp
out
out
mov
fimull
pop
and
xor
fs
and
add
bound
sub
sub
imul
add
cs
mov
jo
adc
cld
repnz
and
out
and
bound
lods
sti
xor
addr16
mov
adc
clc
das
mov
or
jl
push
or
cmp
inc
leave
and
movsb
push
adc
stos
xchg
adc
cmp
ret
jp
pop
flds
ret
pushf
gs
mov
jp
pop
mov
jo
stc
lcall
out
das
or
xor
rcl
dec
shrb
aad
mov
inc
mov
sbb
ljmp
cmp
test
mov
push
iret
inc
jmp
jnp
lds
cwtl
daa
stos
add
inc
sub
int3
mov
cmpl
arpl
pop
jl
pop
aaa
jno
xor
push
stos
adc
nop
push
fimull
loopne
notb
fwait
and
mov
add
out
nop
mov
and
out
ret
sbb
fmul
mov
push
pusha
cmpps
adc
and
iret
and
mov
add
push
roll
mov
inc
in
or
les
lahf
push
cld
popf
add
mov
mov
roll
sbb
ret
xchg
hlt
leave
or
sbb
cmc
mov
ja
dec
out
pop
mov
add
in
fldcw
add
mov
inc
xlat
push
xor
xor
pop
pop
arpl
out
mov
daa
pop
out
fcmovb
and
push
or
pop
mov
pop
sti
push
lds
iret
sbb
mov
jp
in
pushf
loopne
adc
outsb
jg
mov
sbb
and
insl
push
pop
aaa
stc
iret
mov
insl
add
int3
stos
popf
inc
roll
jne
lock
fildll
lds
xor
ret
xchg
add
mov
mov
daa
jg
fstpl
out
inc
dec
xor
adc
cltd
or
xor
sub
dec
in
cmpsl
mov
jmp
shll
stc
jo
sub
rcrl
negb
sub
adc
aad
dec
repnz
mov
sbb
int3
push
cmc
lods
ds
cwtl
sub
push
in
xchg
jbe
jno
jp
aaa
jmp
aas
sbb
dec
clc
pop
stos
ret
lret
mov
xchg
dec
testl
mov
loop
jnp
outsl
out
out
iret
pop
mov
lods
insl
insl
inc
mov
pop
daa
outsb
mov
pop
push
cmpsl
les
lcall
mov
pop
or
outsb
rcl
pop
mov
jno
stos
insl
or
iret
stc
dec
inc
dec
push
add
push
xor
jmp
int3
xor
add
scas
out
inc
loopne
dec
stos
movsl
in
stos
mov
xchg
mov
fsubrs
cli
mov
mov
aad
xchg
dec
mov
mov
lret
andl
jnp
loope
ds
jl
mov
xor
xchg
insl
sahf
je
pop
inc
jne
notl
and
mov
sub
xor
dec
jle
mov
jp
pop
gs
mov
cmp
pop
jae
movsl
nop
sbbb
xchg
ret
jbe
push
data16
cmp
ljmp
popa
jbe
or
test
mov
cmc
ret
scas
sbb
mov
pop
push
mov
inc
aas
sub
jge
icebp
call
jle
xchg
add
push
fdivrl
xchg
cltd
scas
je
mov
sbb
scas
jne
xor
mov
aaa
sbb
cmp
rcrl
es
addr16
or
push
ret
cmp
jo
jecxz
outsl
stos
xlat
pop
and
sbb
into
sahf
pop
rorl
inc
mov
jmp
add
inc
movsl
into
das
testl
mov
lods
lods
movsl
mov
jae
imul
dec
cwtl
mov
pop
shlb
xlat
sub
and
cmpxchg
test
jle
out
ds
sub
jmp
fst
fisubrs
leave
jb
or
dec
xchg
adc
mov
test
leave
out
incl
nop
and
ja,pt
or
adc
cltd
ret
xchg
ret
cli
add
mov
jmp
xor
cmp
pop
stos
enter
popf
sarl
push
ret
lods
xor
push
adc
mov
pushf
add
cmp
les
mov
push
sarb
in
std
and
add
sub
mov
fs
pushl
jb
dec
ljmp
aam
out
or
mov
mov
push
push
loopne
mov
leave
pop
lcall
mov
push
cmp
into
pop
addr16
out
push
jo
cmpsb
aam
sub
loopne
int
decl
dec
jg
imul
scas
clc
mov
test
jb
into
cli
iret
pop
mov
lcall
xor
insb
cmp
xor
jmp
sub
faddp
xchg
lods
push
inc
mov
insb
aas
mov
add
js
imul
roll
aad
dec
ret
test
inc
mov
mov
push
aas
arpl
out
cmp
mov
loopne
outsb
and
xchg
inc
mov
lret
mov
sbb
rclb
inc
jno
and
int3
int
aas
icebp
mov
cltd
sbb
jle
dec
scas
aad
xlat
repnz
out
ret
clc
sahf
pop
cmpsb
mov
push
cmpb
movsl
xchg
rorl
leave
sub
pop
test
repz
add
xor
loope
xor
or
fbstp
push
call
sbb
or
pop
ljmp
and
fmul
fisubrs
rorb
add
lea
jge
lret
addr16
jecxz
push
stos
addb
ficompl
jne
inc
nop
in
xlat
in
jecxz
push
push
icebp
and
sub
fadds
popfw
sbb
xchg
shll
orl
stos
cmpb
int
dec
xor
cmpsl
cmp
ret
jmp
xor
scas
cmp
xlat
bound
xchg
add
pop
xor
iret
imul
or
xchg
out
addr16
pop
scas
hlt
cli
aad
push
fnstsw
movsb
lods
call
jg
call
aam
mov
sub
ljmp
shlb
imul
loop
lock
mov
push
jo
and
and
xor
xlat
mov
inc
ljmp
cmpsb
jae
ja
and
in
ja
lahf
push
inc
cltd
int
cld
inc
add
inc
mov
les
mov
cmc
or
lret
test
scas
shlb
stos
repz
mov
mov
movsb
adc
out
fldt
sbb
dec
addr16
dec
cmp
sub
add
cmp
jne
aad
popa
popf
imul
pop
sarb
sub
sbb
sub
in
cmp
xchg
aaa
sbb
lahf
pushf
mov
and
xor
aad
ljmp
xchg
jne
mov
mov
pop
push
out
test
push
and
scas
ss
push
fildl
inc
sub
test
mov
and
xchg
repnz
inc
cmp
xor
ss
xor
inc
insb
fnsave
enter
mov
negl
xor
xchg
rcl
lcall
xchg
leave
fucom
jg
mov
frndint
popf
outsb
jnp
aaa
pop
and
push
dec
shll
push
das
pop
xor
lods
fs
push
shl
jnp
fwait
push
sub
js
sub
mov
jg
adc
mov
hlt
into
mov
decb
mov
outsb
imul
and
inc
pop
lret
cmp
push
or
imul
and
hlt
mov
addr16
inc
xchg
iret
adc
call
xor
push
adc
mov
cmp
adc
jb
pop
inc
daa
pop
push
fucomp
adc
adc
sti
push
push
add
mov
in
adc
pop
xchg
in
rcrl
orl
and
out
les
xlat
scas
and
push
lret
pushf
cli
cld
dec
ja
rorl
sbb
in
loope
mov
test
inc
cmc
decl
jmp
fisttpl
jmp
cwtl
cld
jne
and
lea
mov
mov
scas
js
dec
jmp
add
xchg
push
pop
adc
sub
out
mov
inc
sub
mov
loopne
sub
xchg
mov
test
rcrb
aaa
repz
xchg
inc
sti
pop
in
dec
addr16
push
mov
mov
inc
xchg
test
cmp
in
mov
mull
out
xchg
mov
inc
xchg
mov
xor
add
sahf
in
adc
mov
addr16
sbb
and
movsl
aas
sbb
or
xchg
jb
push
outsl
fstps
xor
pop
pushf
movsb
pop
pop
and
fists
incl
mov
int3
mov
pop
pop
cmp
cld
sub
insl
cmpsl
jle
repz
shlb
jnp
popa
pusha
xchg
mov
cmp
adc
inc
ffree
outsb
nop
fld
sub
movsb
inc
sti
cmpsb
leave
outsb
inc
cmp
jo
js
mov
pop
mov
jnp
icebp
dec
add
jne
loop
pop
int
sub
pop
push
fsubrs
movsb
mov
andl
into
pop
jbe
xor
xor
cltd
pop
scas
aad
ljmp
repnz
cmp
movsb
mov
jg
push
dec
js
orl
inc
cmpsl
test
test
popa
shrl
cmpsb
cmpb
int3
mov
sahf
rcrl
loope
push
ja,pn
mov
jb
pop
push
pop
lcall
pushf
or
repz
adcl
and
mov
pop
fidivrs
je
push
push
cmp
outsb
jae
roll
imul
sub
in
cli
rolb
cmp
data16
mov
imul
dec
pop
pop
pop
in
test
add
decl
aas
inc
adc
mov
movsb
jp
movsl
dec
add
push
push
enter
loop
ljmp
mov
incb
ffreep
lds
mov
cli
inc
insb
leave
in
pop
das
xor
push
xchg
mov
cmpb
dec
jle
adc
xchg
adc
inc
push
cmc
mov
lods
outsb
shr
aas
std
in
add
scas
pop
cltd
adc
scas
push
dec
inc
cmp
inc
push
shlb
mov
dec
imul
mov
in
jnp
fcom
ret
pusha
cwtl
dec
das
xchg
add
imul
out
stos
imul
xchg
enter
dec
pop
mov
dec
orb
xor
and
nop
push
es
mov
loope
jp
mov
jl
sub
adc
mov
fsubrl
loopne
inc
dec
pop
stc
rorb
cltd
or
pop
cwtl
xlat
adc
mov
enter
jge
sbb
cld
inc
jp
test
scas
dec
xchg
dec
shrl
loopne
xchg
int
je
jo
adc
sub
xor
xor
test
xor
popf
mov
das
pop
push
insl
lea
add
sar
xlat
outsl
cld
and
leave
cld
dec
inc
lock
xor
into
loopne
mov
in
ret
jl
fcmovnbe
hlt
aad
lcall
jbe
xor
cmpsb
pop
inc
in
cs
mov
pop
aam
testl
ret
inc
gs
aam
jb
adc
or
jle
xchg
dec
aaa
adc
iret
xchg
mov
mov
out
dec
sahf
adc
in
cmc
shll
jp
inc
in
sarb
cli
ljmp
out
icebp
ret
jecxz
mov
jnp
add
and
sbb
mov
xor
inc
push
jmp
mov
pop
cmpsl
push
enter
stos
rcr
inc
imulb
out
xlat
sbb
rdpmc
jl
in
rcrl
mov
or
dec
lcall
push
and
and
in
mov
mov
dec
cmp
cld
cmp
cmpsb
push
pusha
mov
cmpsb
or
lea
jmp
cmpsl
pop
insb
inc
or
pop
dec
mov
mov
test
ret
in
stos
sub
in
jge
fcoms
lea
aam
push
xchg
mov
shll
push
dec
jecxz
out
or
jge
idiv
dec
dec
addr16
out
xchg
mov
je
addr16
mov
je
xchg
pop
jno
movb
insb
mov
and
jo
pusha
pop
shrb
push
xor
jnp
inc
iret
sbb
cwtl
and
repz
fistps
sub
jb
lods
xchg
jno
add
and
arpl
in
ljmp
loopne
sub
mov
call
jbe
push
jo
jle
clc
loope
fs
xor
mov
jnp
xchg
hlt
adc
mov
data16
dec
adc
movsb
pusha
xchg
adcl
fs
mov
cwtl
mov
or
enter
mov
leave
cld
dec
fincstp
push
xchg
mov
xorl
push
insb
inc
fwait
insb
pop
rolb
add
mov
outsb
jns
mov
jp
dec
popa
pop
sub
daa
add
mov
mov
mov
ficomps
or
aas
cmp
sbb
sbb
stc
mov
cmpsb
add
or
jae
mul
sti
sub
or
ja
orb
cmp
ret
int3
adc
test
ljmp
lods
es
insl
sub
dec
enter
lret
ss
and
xor
xlat
adc
mov
sahf
popa
mov
sub
dec
xor
mov
adcb
mov
add
cmp
enter
test
inc
dec
aaa
icebp
mov
imul
out
sbb
out
cmc
enter
lds
cli
aas
sbb
hlt
lcall
add
dec
out
lds
ret
cmpl
cli
jne
dec
outsb
hlt
out
add
mov
in
nop
sub
xchg
les
jns
push
ja
outsl
cmp
mov
iret
cmp
dec
pop
mov
pop
push
hlt
lret
les
push
mov
stos
pop
nop
stos
push
ss
loope
insb
ja
xlat
in
xlat
cmc
cmp
fistpl
mov
lea
pop
iret
ror
sbb
pop
hlt
fisttpl
outsb
sbb
jg
fcompl
sahf
pop
xor
dec
sti
xchg
push
pop
cmpsl
pop
mov
sti
fs
jle
btc
push
lahf
adc
nop
andb
cmpsb
addl
aaa
push
sbb
fsubrp
inc
rorb
or
popf
es
mov
orl
mov
es
outsl
jl
cmpsb
cli
jnp
loop
pop
or
rolb
fists
ret
or
cmpl
cmpsb
mov
in
and
ja
icebp
pop
and
aad
fdivs
ljmp
mov
pop
popl
rcr
dec
ja
mov
xor
sub
sub
insb
xor
jp
adc
sbb
and
fadd
adc
sbb
loop
sbb
push
sub
xchg
movsb
icebp
sub
mov
lret
roll
adc
sub
pop
mov
jbe
mov
inc
inc
rclb
push
test
lret
les
in
xchg
jmp
or
sbb
aas
pop
mov
jns
mov
inc
dec
test
aas
stc
loopne
add
pusha
fcoml
mov
xchg
inc
in
aam
lea
fisubrl
inc
lahf
or
push
mov
movl
cmp
and
mov
pop
add
loope
sahf
adc
leave
in
dec
fists
mov
xchg
shl
sbb
jmp
fidivs
adc
out
loope
lret
loop
insl
inc
jle
inc
sub
sbb
imulb
adc
ret
mov
lods
pop
call
and
jecxz
repnz
jb
adcb
add
jl
inc
mov
jge
adc
xchg
dec
das
push
mov
sti
add
dec
pop
mov
add
mov
mov
daa
mov
ja
gs
xchg
lea
mov
sbbl
jmp
iret
adc
leave
adc
push
inc
andl
add
insl
mov
repz
fildll
pusha
mov
pop
loope
stos
and
xor
xor
mov
add
cmp
push
inc
inc
jl
imul
mov
or
sbbb
and
je
movsb
cmc
cmp
into
in
mov
jae
pop
xchg
test
pop
push
jle
not
add
and
test
fisttpll
xor
fxch
loopne
inc
sub
push
pop
xchg
adc
xor
out
and
div
adc
call
fsubs
test
jmp
mov
pushl
iret
xor
filds
sub
in
mov
sub
scas
xchg
repz
dec
jg
sub
adc
pop
inc
movsl
inc
hlt
mov
adc
mov
lret
push
gs
push
jnp
jns
add
xchg
pop
jg
jns
call
xor
fsubr
into
mov
hlt
xchg
test
into
lret
pop
dec
imul
imull
pop
clc
jp
neg
scas
jae
iret
repz
ss
cli
sbb
enter
lcall
xchg
dec
cmp
fidivrs
sub
mov
jecxz
xor
mov
jle
xor
cmc
mov
test
push
xchg
add
dec
jno
inc
sbb
movsl
hlt
fcomp
sub
jmp
pushf
mov
jb
ja
lds
sbb
xor
adc
movsl
mull
arpl
sbb
cmpsb
icebp
push
inc
insl
test
aad
fisubrs
and
mov
mov
cli
jp
or
lock
in
lds
mov
fs
lods
xor
mov
pop
loopne
std
ja
mov
lcall
test
inc
dec
xchg
bound
xor
add
push
push
push
or
test
sub
loope
mov
shll
js
xchg
daa
cmp
jl
in
fisttpl
mov
pop
adc
mov
or
mov
mov
loop
xlat
std
push
push
and
mov
inc
dec
icebp
mov
sbb
or
mov
lcall
arpl
inc
xor
push
loopne
push
movsl
adcb
test
push
jg
lea
mov
out
jmp
dec
mov
std
sub
mov
repz
mov
mov
aas
add
aas
ss
jbe
into
jmp
adc
dec
stc
lods
cmp
jb
nop
mov
psadbw
lods
or
mov
add
push
fiadds
aam
mov
push
jecxz
and
cld
aas
xorl
in
scas
repnz
lods
sub
jo
sub
inc
or
jnp
cli
mov
mov
cld
pop
xlat
sahf
add
sbb
sbb
fadd
test
add
and
or
xchg
push
adc
xchg
mov
adc
loopne
sub
int3
add
test
mov
xchg
mov
mov
jmp
xor
pop
lock
push
pop
and
push
fsts
xor
ja
test
sti
add
add
sahf
aad
aam
stc
cmp
mov
sub
in
jnp
mov
cmpsb
imul
int3
fstpt
xchg
fbstp
jns
jle
cmp
loop,pt
daa
add
cld
cmp
xor
sub
dec
sbb
cmpsl
add
fiaddl
inc
arpl
mov
mov
mov
jno
dec
idiv
cld
push
aad
lea
arpl
dec
das
shll
nop
mov
ja
add
and
je
aas
nop
cmp
data16
add
ret
ds
dec
pop
inc
je
nop
lret
dec
inc
loopne
fisubl
adc
in
ficompl
int
aaa
adc
orl
push
mov
sub
sbb
out
add
shlb
pop
popa
loope
add
push
popa
les
repz
fwait
es
pop
pop
call
sub
data16
mov
fcoml
xchg
pusha
call
add
fcomps
out
enter
popa
add
adc
es
or
jnp
or
jl
sbb
pop
jo
enter
jnp
test
ja
jbe
lret
mov
mov
sub
mov
add
pop
push
je
add
jge
mov
scas
inc
call
gs
es
cmc
add
cmpsl
mov
dec
cld
imul
mov
insl
subl
push
loope
mov
sub
mov
fmull
inc
out
cmc
jp
adc
loopne
jmp
cmp
add
pop
jle
pusha
enter
rorl
repnz
icebp
fstps
fisubrs
push
jmp
sbb
push
push
cmp
mov
in
mov
dec
nop
das
pop
lods
loopne
into
ja
dec
sbb
xorl
mov
push
fists
cmp
inc
and
jno
xchg
les
xchg
je
icebp
cmpsb
jmp
lcall
scas
fbld
jbe
add
loope
mov
xchg
push
mov
in
ss
in
pop
inc
cmp
sub
mov
adc
imul
jb
int
and
mov
cld
hlt
test
xchg
push
je
mov
fcompl
fwait
xchg
mov
jae
push
add
jp
loope
popw
cli
lcall
adc
push
adc
or
inc
xchg
rcrb
xlat
jecxz
in
jp
into
adc
mov
fidivrs
mov
and
roll
call
inc
and
mov
push
fwait
enter
mov
mov
bound
roll
mov
and
inc
shlb
adc
hlt
and
pusha
mov
mov
inc
jle
and
sub
mov
fs
mov
pop
pop
sub
push
insb
mov
aad
ds
lds
cmpsb
fcmovb
fistps
sbb
dec
inc
sti
or
in
testl
fnstcw
lods
jbe
inc
pusha
cmp
mov
sbb
cli
notl
cmp
es
push
push
movsl
cli
ret
inc
stc
sub
mov
jne
repnz
popa
mov
xchg
ss
and
xchg
mov
push
mov
mov
and
pop
dec
mov
sbb
lret
test
jmp
in
and
inc
fistpll
mov
mov
push
jnp
test
jo
pop
subl
lods
xor
jmp
jne
loope
pop
sbb
sub
in
mov
jle
pop
icebp
scas
dec
mov
mov
negl
adc
out
ret
in
push
in
cmpsb
jg
cmc
sbb
iret
xchg
mov
cmpsl
lock
mov
je
flds
loop
gs
xor
ret
jne
cmc
std
push
rcll
jns
pop
out
sahf
dec
addl
pop
dec
sbb
repz
mov
lds
pop
sti
scas
jge
mov
stos
pop
sub
sub
inc
sbb
je
inc
icebp
jg
push
aam
lret
add
inc
mov
loope
cwtl
fadds
cltd
or
pop
cltd
mov
and
mov
loop
cli
sbb
lock
jg
sub
push
and
popa
mov
ret
daa
sub
pop
mov
pop
sbb
in
add
fldcw
sbb
xchg
dec
movsl
fldl
in
push
mov
mov
add
shrb
std
cmp
mov
mov
daa
mov
fistpll
lea
pop
test
jl
jl
fcmove
test
sbb
leave
andl
mov
adc
enter
cld
push
loope
pop
lock
mov
xchg
ja
lcall
xor
cli
inc
movb
push
xchg
lds
mov
and
mov
mov
xlat
aam
cmc
lahf
je
fucomip
inc
pop
clc
or
mov
mov
xor
popa
hlt
stos
or
push
push
fdivr
sbb
cmp
mov
jmp
pshufw
mov
xor
cmp
mov
outsw
cmp
lret
cmp
and
cli
ret
push
fistpl
mov
shrl
push
pop
aam
and
mov
or
adc
or
scas
mov
and
fwait
test
rorb
adc
xor
mov
andb
pop
push
mov
sbb
jge
xor
xor
mov
repz
xchg
jl
std
add
and
pusha
sbb
xchg
push
iret
xchg
mov
push
lcall
xchg
jecxz
jb
dec
aaa
movsb
sub
dec
push
pop
les
jp
fimull
js
push
pop
rcll
hlt
negl
popa
xor
fcmovu
jle
add
insl
mov
mov
je
sbb
inc
lods
je
fs
jmp
mov
xchg
push
insb
inc
push
push
int3
pop
ja
decb
dec
repnz
inc
inc
pop
xchg
dec
fldenv
scas
fs
popa
mov
enter
xor
into
aam
jecxz
mov
add
jmp
or
mov
int3
sub
sbb
loop
push
imul
add
or
or
xchg
das
or
sbb
ret
mov
push
inc
fucom
or
xor
push
insb
jg
cmc
notb
cmp
inc
out
mov
das
fimuls
imul
xchg
test
mov
nop
xor
shlb
lcall
loopne
shll
imul
mov
cli
test
sahf
lret
les
aad
lods
mov
or
push
nop
fdivl
int3
xor
pop
test
push
in
cmpsb
adc
jne
inc
sbb
sub
pop
sarl
addr16
xor
lret
lods
mov
dec
lret
leave
lcall
pop
and
mov
iret
push
adc
dec
mov
imul
loope
popa
xor
adc
mov
mov
xchg
add
fcoms
inc
sbb
fwait
and
pop
and
and
aaa
fxam
clc
xchg
pop
pop
mov
push
out
mov
jp
add
jo
mov
mov
cltd
mov
mov
push
and
cwtl
mov
jo
sub
mov
adcl
ds
add
jae
fsubrs
jno
or
sbb
enter
scas
inc
jne
fcmovnb
test
cmp
xchg
fwait
sbb
gs
in
xchg
cli
outsl
int
fwait
lahf
mov
mov
xor
adc
mov
pop
daa
les
mov
mov
in
xchg
cmpb
dec
xor
sub
sub
sbb
push
rol
mov
cmp
jle
jnp
pop
dec
mov
mov
pop
sub
jg
and
imul
mov
jmp
pop
and
dec
push
sbb
inc
js
fcoml
cmp
pop
cmp
rcll
adc
bound
sub
hlt
adc
mov
in
mov
push
push
push
shlb
push
mov
push
and
rcrb
and
jb
xchg
loope
add
stos
dec
in
pop
out
inc
mov
and
jge,pn
cmp
add
xchg
xchg
in
add
and
ja
gs
or
and
add
das
fwait
mov
xor
imul
push
dec
scas
dec
imul
ret
mov
mov
les
jno
gs
inc
push
scas
je
data16
testl
pop
lcall
push
or
pop
lcall
jnp
leave
shlb
mov
fistps
mov
jb
rcl
scas
adc
sub
movsb
lods
mov
sub
das
data16
jg
stos
or
mov
test
sub
into
cli
cmp
sub
loop
sub
ret
out
fistl
lds
and
stos
or
in
icebp
mov
pop
subl
xchg
mov
mov
dec
sbb
lock
add
mov
pushf
sbb
and
or
roll
les
inc
pop
repz
mov
push
gs
cli
mov
sub
mov
daa
dec
xchg
push
xchg
mov
call
gs
xchg
push
cld
mov
mov
push
mov
nop
or
xchg
pop
ficompl
push
xchg
mov
lds
bound
jo
mov
int3
jle
lret
aad
push
push
shl
push
movsl
stos
sbb
scas
push
jb
fbstp
push
inc
push
mov
loop
fdiv
repnz
mov
inc
les
push
push
les
pop
inc
dec
or
andb
sub
push
adc
and
xchg
xor
lcall
dec
dec
and
test
test
xchg
cmp
nop
sbb
sub
sbb
adc
cmpsl
jo
cmpsb
mov
lret
bound
scas
mov
stos
dec
jle
lods
fcmovnu
push
fisubl
and
nop
shll
xchg
push
dec
int
jg
xor
outsl
mov
xor
loop
call
jb
xchg
or
sar
cwtl
jl
clc
ljmp
or
pop
lar
mov
test
mov
stos
sbb
test
or
scas
inc
jg
cli
cmp
loope
aaa
pop
add
scas
add
pushl
or
dec
repnz
outsb
sbb
std
dec
pop
test
cltd
or
mov
jmp
pop
push
adc
rorl
mov
shrl
les
jnp
mov
mov
mov
sbbl
jecxz
test
fs
cmp
dec
scas
cmp
jb
mov
aad
in
enter
cmp
test
pop
or
mov
push
fdivs
loope
in
jbe
cmp
cmp
jno
jnp
and
lds
dec
xchg
bound
idivl
mov
mov
imul
repz
cld
pop
jnp
dec
cld
lahf
fdivrp
mov
pop
fimull
jns
shrb
jmp
stc
push
in
pop
icebp
icebp
sbb
js
test
cmp
xor
adc
pop
je
inc
xor
cmp
dec
ja
add
ret
fimuls
mov
jp
xor
insb
pusha
sbb
adc
pop
movsb
add
loopne
cmp
jecxz
ja
pusha
dec
loope
inc
jg
jl
sbb
xchg
dec
cld
daa
fbstp
mov
cld
pop
adc
or
fldt
es
add
aas
pop
xor
std
xchg
in
dec
adc
imul
fisubs
test
inc
int3
test
cld
int3
insb
cld
mov
push
leave
inc
adc
daa
pop
pop
push
or
mov
jmp
frstor
mov
sub
fcmovbe
dec
addr16
mov
jecxz
sub
sub
xchg
sub
or
sbb
fmull
push
and
loopne
ljmp
pop
jecxz
push
stc
sbb
pop
xor
sub
lahf
push
repz
popf
jo
nop
pop
mov
inc
out
adc
fistps
loopne
neg
or
je
push
insb
xchg
mov
add
lea
push
sbb
mov
out
mov
push
popf
popf
and
ja
ret
psrlw
adc
clc
mov
popa
mov
and
outsb
lods
fcomps
mov
adc
cmp
pop
int3
jne
loop
mov
inc
pop
mov
adc
pop
push
sbb
mull
dec
fmull
aaa
ret
add
lcall
inc
cmpsl
loop
test
je
out
in
repz
lret
les
mov
adc
xchg
jo
lods
or
mov
enter
cwtl
imul
aam
clc
jnp
push
lock
xchg
mov
lahf
lea
pop
scas
jo
jl
pop
adc
sub
repnz
cltd
mov
add
inc
ret
mov
es
or
cmpsb
aam
cmc
bound
adc
adc
arpl
mov
outsl
movsl
aaa
jecxz
mov
movsb
and
cmp
pop
aad
scas
sbb
into
add
xor
xchg
mov
into
sub
mov
mov
jno
xor
and
sbb
mov
or
test
sub
std
adc
xchg
xor
cmp
adc
movsb
fisubrs
scas
andb
ds
loope
adc
mov
gs
in
int3
and
sbb
adcl
fwait
pop
sub
adc
push
fyl2xp1
mov
pop
add
sbb
inc
lock
out
enter
ds
sbb
or
mov
dec
sti
cmp
sbb
push
lret
pop
lds
and
mov
dec
call
in
jge
movsb
or
out
shl
xor
test
ljmp
mov
inc
out
fisubl
mov
int
pop
test
mov
jg
pop
or
inc
xchg
daa
jae
or
cmp
mov
cmp
adc
jp
sbb
inc
out
add
xchg
mov
iret
and
pushf
les
sub
mov
sub
inc
insb
jl
movsb
jns
sub
and
rcrl
cmc
loop
scas
and
int3
lds
jl
mov
or
add
stc
jge
shlb
in
xchg
jne
ret
or
mov
jb
shlb
fcomip
in
daa
into
daa
mov
imul
lret
adc
stc
frstor
aad
test
imul
jmp
mov
fimull
pop
mov
push
mov
repz
push
pusha
dec
jge
jne
neg
mov
or
and
scas
dec
repnz
roll
add
mov
fmull
inc
xchg
lock
fisubs
jle
arpl
cwtl
dec
cmp
mov
cmp
mov
mov
cmp
mov
out
ret
add
dec
jne
jge
lock
dec
adc
imul
imul
pop
push
xchg
lock
lret
popf
dec
mov
xor
mov
orl
out
xchg
mov
adc
sub
int
dec
xchg
pop
jb
popa
jle
and
mov
mov
movsb
push
out
push
ljmp
pop
aas
fs
test
sar
inc
xor
push
xlat
mov
mov
adc
enter
es
outsb
rcll
push
clc
adc
ljmp
out
insl
mov
jg
sub
in
or
xor
pop
mov
daa
ret
add
rcrb
imul
mov
test
cmp
sub
outsl
pop
pushf
sbb
negl
push
push
dec
add
pushf
push
pusha
lock
test
fldcw
std
int
das
xchg
and
add
ja
mov
fisubrl
and
fldcw
add
inc
mov
ja
scas
jp
je
lods
ret
out
pop
fwait
sub
add
inc
mov
ljmp
xchg
aam
add
cmpl
cmp
inc
imul
stc
push
inc
lcall
push
mov
mov
mov
xchg
stos
shll
lods
xchg
sbb
and
rcrl
popa
adc
pop
and
jae
inc
push
lret
xchg
repnz
adc
cld
rorl
pop
stc
jns
pop
andb
insl
xchg
ss
sbb
iret
mov
pop
xlat
sti
add
adc
aas
push
pop
in
dec
outsl
cmp
pop
and
aam
and
mov
or
xor
fnstsw
lret
jno
rcrb
jae
mov
into
push
repz
stos
dec
hlt
rorl
xchg
loopne
mov
addr16
testl
mov
in
mov
dec
dec
add
data16
mov
jne
add
fidivrl
pop
fscale
inc
outsl
fincstp
pusha
cmpsb
xor
fxam
or
ret
mov
insl
xchg
pop
dec
dec
xor
int
sub
dec
ret
int3
cs
push
ficomps
pop
mov
push
mov
sti
testl
mov
test
call
push
loope
mov
mov
and
out
leave
sub
testl
push
inc
add
jecxz
std
cmp
and
outsl
bound
push
push
repz
lods
jp
or
jnp
pop
sbb
jnp
fwait
pop
mov
and
mov
in
shl
push
jle
or
in
imul
pop
ret
cmp
push
icebp
mov
iret
cmp
jmp
sub
insl
mov
adc
mov
push
xor
adc
jg
sbb
nop
pop
and
adc
shlb
imul
lcall
and
in
add
daa
addr16
fsts
add
sahf
mov
inc
push
es
push
lahf
loopne
or
xor
push
aam
negl
cmp
xchg
jge
mov
ret
sbb
pop
sbb
addr16
mov
call
enter
addr16
push
or
ret
stc
mov
xchg
arpl
cmp
data16
dec
mov
addr16
aaa
add
adc
lea
mov
pop
cld
iret
insl
mov
rol
mov
iret
sub
ret
mov
lock
push
xor
and
sbb
lds
cwtl
aas
jno
and
je
fnsave
clc
sbb
sub
imul
int3
and
mov
dec
cmpsb
sub
stos
test
mov
hlt
inc
jmp
jge
lcall
mov
dec
arpl
orb
out
inc
and
inc
cmp
insl
adc
iret
push
pop
fcom
or
hlt
inc
lods
mov
gs
aam
aas
xchg
cwtl
ret
rolb
sbb
push
test
xor
pop
mov
and
lcall
stos
dec
add
outsl
pop
push
shrb
loopne
inc
pop
sar
in
js
andb
decb
sahf
dec
add
jle
jle
mov
shrb
out
fnstsw
cs
sub
ljmp
fst
rcll
add
dec
loop
sti
sahf
mov
sub
movsb
dec
or
xor
testb
add
arpl
insl
mov
adc
push
test
loop
mov
nop
mov
out
add
mov
stos
jb
push
inc
insl
add
insl
jne
lods
cs
mov
jns
out
and
dec
xor
lods
insl
mov
cmp
and
jb
lock
fs
push
pop
pop
nop
popf
lret
fildl
xor
push
push
mov
pop
or
cmpsb
xor
andl
imul
repz
cmp
xchg
adc
xorl
mov
lret
mov
iret
stos
lea
fs
fisttpll
cmp
ror
or
adc
flds
or
xchg
pop
lods
push
push
xor
jae
inc
je
pop
sbb
cmc
dec
xor
mov
push
stc
pusha
or
int3
nop
push
loope
cs
aam
testl
imul
push
ljmp
mov
shl
fistps
sub
mov
sub
add
xchg
dec
mov
push
adc
dec
jmp
mov
jmp
push
je
mov
lcall
dec
lret
popl
sarb
clc
mov
jo
dec
mov
and
jae
dec
push
outsb
push
icebp
ja
pop
adc
imul
xor
repnz
mov
and
add
and
xchg
lock
adc
fadd
xchg
and
cmp
push
int3
mov
loopne
popf
dec
js
xor
ljmp
pop
dec
sub
push
in
rol
call
or
or
imul
dec
data16
mov
in
xchg
mov
dec
xor
and
push
addr16
ss
add
and
xlat
or
test
push
add
test
xlat
jbe
xor
adc
xor
push
mov
inc
cli
push
imul
inc
and
xor
lahf
decb
pop
dec
lret
fisubrs
cli
xor
loopne
lock
arpl
mov
les
dec
movsl
std
xchg
sub
mov
insb
jnp
out
adc
je
dec
cwtl
jecxz
shlb
sti
insl
cmc
push
mov
add
mov
ljmp
mov
mov
dec
xchg
inc
push
mov
xor
add
or
inc
loop
popa
mov
es
hlt
add
or
lcall
insb
sbb
mov
mov
mov
outsl
mov
and
mov
jecxz
jle
gs
sti
insl
and
adc
push
cmpb
and
arpl
fistpl
gs
cmp
jecxz
test
or
out
mov
add
or
in
cs
xor
pop
ficompl
lcall
sub
iret
imull
je
std
repnz
cmp
repnz
xlat
mov
inc
xchg
push
xchg
sub
fwait
imul
iret
js
ret
cld
int3
mov
sbb
xor
test
iret
add
sbb
sbb
stc
cmp
mov
or
cmp
jecxz
push
mov
xchg
xchg
and
dec
or
cld
cmp
lds
cmp
push
ret
dec
sbb
movsb
or
inc
adc
lahf
sbbb
xor
lahf
push
add
xchg
stos
loopne
sbb
shlw
lcall
inc
push
add
and
add
fsts
mov
scas
sub
dec
lahf
push
jne
xchg
std
dec
sbb
dec
sti
andb
push
jle
cltd
sti
in
sub
or
popf
xchg
mov
xchg
fsts
or
insb
rorb
push
dec
xchg
test
mov
shr
in
rcr
sub
push
jge
call
inc
stc
push
cmpsb
and
sub
sti
cltd
and
sub
dec
adc
mov
pop
in
test
out
icebp
sbb
mov
sbb
adc
mov
fwait
inc
mov
aam
in
aad
and
dec
xlat
testl
dec
push
and
adc
roll
xchg
stos
fldcw
xchg
cmp
add
lcall
inc
mulb
lods
mov
xor
das
out
sahf
mov
fnstenv
pop
mov
cwtl
popa
pop
notl
push
xchg
fsubs
push
aas
lret
inc
call
clc
in
mov
adc
in
inc
pushl
fnstenv
cwtl
aas
ret
fldcw
inc
lahf
sarb
dec
imul
je
in
pusha
and
rcll
sbb
xchg
xchg
pop
addr16
pusha
xor
ljmp
and
inc
bound
pusha
in
mov
and
pop
aad
sub
call
and
sahf
push
mov
mov
shr
pop
sbb
in
leave
retw
push
cs
xchg
aad
dec
les
add
ret
xor
jle
repnz
bound
fcomip
test
addr16
inc
pop
out
push
into
dec
jge
test
dec
stc
outsb
xor
xor
or
aam
mov
xchg
mov
sub
add
lea
movsb
imul
insb
xor
inc
dec
or
lret
cmp
and
pop
pusha
popa
jg
mov
xchg
aad
repnz
jne
pop
pop
and
out
xchg
jno
jns
and
ret
ljmp
push
into
dec
outsl
sbbl
aas
outsb
xor
jmp
xor
mov
adc
daa
push
out
inc
imul
cs
push
iret
std
xchg
cli
clc
sub
sti
push
fs
outsb
test
std
stos
xorb
jbe
xchg
dec
rcr
pushl
inc
dec
and
lods
jo
cmpsl
inc
arpl
insb
mov
push
mov
nop
jecxz
sahf
cwtl
cmpsb
push
jge
and
xor
leave
and
fisubrl
aaa
xchg
cli
cltd
icebp
cs
adc
fidivs
scas
insl
mov
aaa
imul
xor
dec
xchg
sub
mov
dec
loopne
xchg
pop
and
cmp
roll
or
mov
or
cmp
int3
ficoml
sub
mov
ret
into
and
stos
imul
loopne
jno
je
fnsave
ja
mov
bnd
inc
popa
addr16
pop
jl
jecxz
pusha
xchg
rol
aad
sub
add
call
mov
js
mov
inc
push
adc
or
lods
movsl
inc
adc
pop
lods
pop
das
cltd
add
push
sbb
dec
push
rorl
push
and
adc
cmp
pop
push
shrb
mov
or
cmpsl
jbe
cmpl
jmp
cmc
inc
iret
outsb
aad
bound
leave
cmp
add
enter
mov
mov
es
pop
lock
outsl
movsl
lahf
call
xchg
ljmp
pusha
imulb
adc
pop
sbb
daa
sub
add
xor
sbb
or
pop
icebp
mov
lds
fcoms
jne
cmc
enter
xchg
in
cwtl
repnz
inc
adc
arpl
imul
das
call
mov
jp
cmpsl
stos
jae
pop
sbb
sub
adc
adc
cmp
ja
xor
subl
inc
pop
push
sbb
mov
and
cmp
cs
xor
mov
cmp
aad
pop
xor
lds
aam
sbb
mov
dec
cmpsl
push
stc
dec
push
lods
or
add
aad
mov
or
insl
pop
mov
out
fcmovbe
mov
fdivrs
jmp
mov
cmp
sub
jg
xchg
cmp
loop
adc
dec
inc
sub
cmp
cmc
push
sub
mov
sub
shlb
dec
xlat
xor
jno
enter
mov
pushf
lods
push
rorl
push
bound
xchg
mov
outsl
jno
test
mov
or
rorl
xchg
jmp
sub
out
and
lret
into
push
pop
jne
std
mov
and
xor
in
cmp
mov
mov
aas
lea
sar
push
mov
mov
imul
add
pushw
lret
shlb
mov
es
and
add
pop
push
jmp
stos
lea
inc
out
push
pop
xlat
lcall
popf
and
add
sub
in
stc
sub
mov
mov
divb
mov
pop
lret
data16
or
mov
sbb
xchg
pop
jne
push
cmp
daa
or
arpl
inc
mov
es
data16
push
cmp
adc
fisubl
adc
xor
popa
dec
popf
mov
add
test
lods
cmp
ja
adc
ds
aad
push
outsl
xor
dec
jg
inc
or
sub
imull
outsb
mov
inc
inc
stos
scas
pop
sbb
jo
in
out
loop
and
outsl
dec
nop
mov
sahf
movsl
push
add
lods
and
xor
enter
fs
jns
fidivs
mov
mov
add
mov
into
push
add
jecxz
mov
out
dec
lds
jnp
fisttpl
xchg
clc
xor
or
jmp
lcall
xchg
push
mov
pop
es
adc
outsl
jl
mov
pop
inc
outsb
lea
pop
adcl
jmp
sbb
sub
dec
xchg
push
mov
push
rcl
nop
pop
imul
pop
clc
fs
stos
dec
test
mov
mov
pushf
loope
inc
mov
pushf
add
jne
add
outsb
push
roll
lret
cmp
jb
xchg
push
mulb
sbb
outsl
push
lds
js
scas
test
inc
les
out
jmp
data16
or
and
in
lret
pop
inc
out
mov
repz
lods
popf
loopne
jnp
mov
faddl
xchg
inc
loope
pop
bound
xchg
ret
jmp
jne
cmc
adc
push
addr16
mov
rcrb
jno
enter
lret
push
test
xchg
sub
or
cmp
or
sbbl
ret
xchg
mov
add
enter
loope
imul
mov
xchg
adcb
imul
in
cli
or
and
or
out
push
pop
lret
mov
mov
pop
shrl
shlb
test
cs
fists
fistl
cltd
test
pop
repnz
mull
xchg
fst
popa
in
jle
lea
jge
out
sbb
mov
jnp
add
stc
mov
fisttpll
ret
jge
jmp
mov
addr16
repz
mov
sti
test
rolb
xlat
cmc
fs
icebp
into
jb
or
je
lcall
loop
mov
pop
ror
mov
xchg
jge
std
ret
or
inc
pop
subb
in
add
cmp
pushf
add
faddl
test
inc
xchg
mov
push
cli
popf
imul
pop
test
popf
idiv
enter
inc
inc
shl
mov
inc
fcompl
add
insl
mov
xchg
nop
mov
and
cmpsl
or
xor
test
shll
aad
leave
aaa
jle
inc
adc
jge
push
pushl
fwait
jg
xor
xchg
inc
cmp
xchg
in
cmc
cmp
outsb
or
sub
inc
cmpb
pusha
imul
ret
repnz
xchg
adc
sub
fnstenv
xchg
push
sub
pop
xor
loope
mov
leave
push
fnstenv
push
or
in
int
push
and
gs
pop
dec
cmpsb
shll
xlat
inc
fdivp
inc
xchg
fistpl
shlb
mov
aas
push
mov
loope
rorw
out
scas
in
xchg
repz
fsubl
xlat
xchg
add
inc
push
imul
mov
push
imul
imul
push
inc
pop
sahf
and
arpl
mov
xchg
and
pop
filds
jno
lcall
leave
xchg
enter
popf
lahf
adc
inc
aaa
mov
out
aad
add
xor
mov
adc
cmpsl
cmp
sbb
stos
lods
push
jmp
jmp
lret
and
jbe
imul
or
push
adcb
dec
push
jae
or
xchg
inc
xchg
or
or
jne
adc
testb
out
lods
pop
fdiv
inc
out
or
mov
aas
incl
jg
stos
aad
gs
sbb
rorb
push
cmc
mov
adc
mov
fs
mov
push
aas
subl
add
push
dec
xchg
xchg
stc
mov
mov
pop
xchg
push
push
lods
shlb
xchg
sbb
cmovl
data16
clc
push
fcoml
dec
das
ret
jl
je
mov
pushf
sbb
sbb
adc
jne
push
sbb
scas
xchg
fwait
addr16
jnp
cmpsl
cmp
es
rcr
je
xchg
sub
daa
loop
mov
mov
sub
orb
push
mov
sahf
les
adc
cmpsl
fldcw
and
insb
jo
dec
push
xchg
inc
jecxz
enter
sub
inc
or
cltd
and
xor
add
rorl
ljmp
adcb
mov
jno
jo
add
mov
rorb
bound
fwait
sub
gs
mov
sqrtps
std
rcl
inc
add
mov
dec
sub
or
mov
xchg
jle
pop
jg
test
daa
inc
flds
jmp
cmp
xchg
and
or
and
pop
into
cmc
xchg
mov
out
aaa
fs
sahf
shlb
cmp
push
cli
pop
std
cmp
pop
stos
dec
xor
in
cmp
ffreep
outsb
loopne
daa
mov
inc
adc
in
add
pop
sar
jge,pt
outsl
add
lcall
dec
cmp
in
pop
jge
or
lcall
cmpsb
add
and
in
adc
loopne
jg
data16
fmuls
xchg
pop
push
jbe
cmpsl
mov
dec
add
fildl
es
inc
cmp
mov
pop
iret
aam
mov
fwait
mov
pop
add
xchg
jo
jl
pop
repz
mov
cmp
sahf
jle
push
out
insl
push
lods
inc
icebp
push
arpl
or
and
xchg
mov
xor
orb
push
daa
in
das
cmpb
add
adc
xorl
into
scas
stos
jp
dec
lds
adc
aam
sbb
std
test
repnz
mov
ja
jle
push
dec
fldpi
lret
xchg
nop
cmp
dec
push
sbb
push
jl
mov
pop
xchg
add
mov
iret
mov
aam
add
sub
push
lret
fwait
out
mov
mov
sbb
call
inc
push
sti
into
daa
xchg
lods
daa
push
adc
adc
mov
jne
cmp
cmpsl
push
cld
pop
push
push
or
cmp
sbb
and
idivb
rorb
push
cwtl
xor
leave
shlb
xchg
fs
mov
nop
add
xchg
mov
lock
fwait
push
ss
fisubrl
jb
sub
pop
aad
dec
sarb
push
xor
int3
test
stc
jge
cmp
loope
push
xlat
arpl
xor
in
test
sub
addl
mov
xor
enter
jo
fsubr
cwtl
cmc
and
and
inc
pop
mov
cwtl
xlat
gs
pcmpeqd
jle
mov
xchg
int
xchg
gs
push
popa
dec
in
xchg
xor
adc
mov
adc
mov
mov
mov
inc
xchg
push
push
popf
out
sbb
mov
test
repz
jb
sbb
filds
xchg
lcall
fwait
jl
dec
pop
ror
das
ds
in
pop
cmp
jne
sbb
jne
arpl
cli
std
cmc
mov
mov
dec
iret
jbe
jae
sete
in
prefetch
adc
cwtl
scas
pop
fldl
xchg
in
jp
xor
lcall
inc
hlt
and
jge
shlb
sahf
loopne
test
mov
sbb
inc
int3
ss
dec
stos
push
idivb
mov
adc
lret
xchg
out
add
and
inc
clc
jns
mov
push
dec
mov
movsl
pop
mov
mov
outsl
fsub
add
test
es
mov
enter
inc
addl
mov
adc
and
clc
sbb
lret
movsl
add
mov
ret
xchg
pop
loope
ja
mov
jge
add
adc
rolb
dec
jmp
adc
inc
xchg
cwtl
pop
push
jo
jb
cli
stc
popf
daa
dec
mov
or
in
addl
es
jecxz
es
hlt
mov
in
icebp
stos
bound
pop
push
pop
sahf
decl
pusha
add
sub
and
cmp
pusha
popw
mov
mov
cs
fdivrl
outsl
add
dec
sahf
daa
scas
adc
xor
sub
xchg
dec
outsl
inc
xor
push
aam
or
fs
movb
mov
jecxz
es
jle
push
popf
insb
std
lds
mov
pop
or
repz
mov
fbstp
imul
dec
je
jle
sub
cmp
inc
bound
xchg
mov
lods
or
fdiv
je
fstps
test
pop
lahf
andl
hlt
sti
add
mov
and
insl
data16
adc
jmp
ret
ss
add
xlat
outsl
and
xchg
bound
scas
xchg
imul
sbbb
dec
in
fwait
mov
mov
lods
enter
pop
js
popf
aam
sub
pushf
sub
movsb
sbb
or
inc
jbe
xlat
sahf
mov
jl
add
xor
sarl
mov
js
mov
push
addl
jge
popf
and
pop
das
iret
mov
jns
mov
imul
sbb
adc
in
out
push
stos
ss
iret
xlat
call
adc
pusha
pop
adc
xor
push
jns
loop
sbb
push
fsts
push
sbb
jmp
jl
pop
out
push
cld
cld
sarl
enter
pop
inc
push
xchg
push
imulb
movsb
in
push
or
nop
test
xor
or
dec
xchg
add
test
push
jne
es
jle
shll
dec
lods
scas
mov
jnp
push
out
sub
add
loopne
out
test
cmp
stc
xchg
or
or
pop
int
push
cltd
scas
jb
inc
inc
ret
mov
jl
mov
push
pop
inc
pop
ret
dec
cmp
jns
xchg
in
out
push
inc
push
sub
cmp
pop
pusha
push
dec
pusha
dec
test
push
inc
pop
fwait
pushf
sbb
into
mov
andb
mov
inc
sbb
or
mov
cmpb
cmpsb
mov
mov
loope
jb
movsb
faddl
add
fisubrl
cmp
int3
repnz
mov
jae
xchg
jl
jge
sbb
jnp
cmp
mov
popa
loopne
dec
xor
adc
test
shlb
xchg
adc
test
mov
or
stos
incb
dec
xlat
sub
repnz
xchg
xchg
cs
sub
cli
sahf
insl
mov
lock
add
jno
rolb
ds
shl
pop
inc
xchg
push
add
or
sbb
inc
adc
push
lock
js
adc
jns
sti
mov
loopne
pop
mov
cmp
sbb
push
adc
nop
mov
mov
insb
in
add
mov
stos
cmp
push
test
and
cmp
orb
and
pop
cmpsb
push
lds
lock
add
xchg
int3
sbbl
adc
cmp
dec
rcrb
stos
mov
gs
jg
jl
mov
push
jne
xor
push
ss
and
lret
call
xchg
or
jg
adc
dec
lds
fs
mov
in
imul
fwait
inc
js
mov
ffreep
popf
xchg
shrl
shrb
pushf
mov
mov
gs
dec
leave
int
ret
mov
push
fwait
mov
stos
mov
and
int
xor
ret
jno
lret
push
mov
jns
into
or
add
pop
jle
push
iret
jns
mov
fwait
and
stos
nop
mov
mov
mov
addr16
cmp
ret
jmp
pop
add
and
icebp
inc
loop
fwait
incb
add
insl
cmp
mov
cli
pushf
fnstenv
mov
xor
aas
cltd
mov
xchg
popa
add
and
mov
cmp
cmp
adc
mov
andl
xor
mov
mov
xor
into
pop
cmp
lret
in
subb
add
xchg
fucomp
jno
cmp
fldcw
imul
sub
in
mov
je
mov
sbb
mov
jne
movsl
imulb
mov
cpuid
adc
pop
xchg
imul
mov
cld
inc
adc
add
cmpsb
xchg
jns
mov
out
or
mov
sub
imul
mov
pop
cltd
loope
push
cwtl
lahf
movsl
adc
in
sti
lock
xor
lock
jge
sub
mov
jae
movsl
inc
nop
lcall
mov
or
jns
rcll
orb
mov
push
xchg
fdivs
jne
in
cltd
insb
or
sar
stc
mov
es
clc
mov
jg
jae
jns
sub
call
dec
enter
pusha
mov
add
loopne
ret
sbb
adcl
outsb
push
mov
jne
add
aam
jmp
sub
xor
bswap
add
outsl
outsb
cmp
outsb
sub
hlt
ss
add
sub
test
sahf
adc
jo
dec
imul
cltd
pusha
lods
pop
xor
sbb
jae
mov
hlt
subb
and
lods
mov
mov
ljmp
gs
lds
push
pop
dec
cmp
pushf
daa
sub
pop
xor
inc
inc
push
jns
and
shll
and
dec
aam
ljmp
mov
in
shlb
xor
aad
andb
mov
xchg
mov
cld
sub
out
cmc
notb
adc
ja
pop
cmp
hlt
xchg
mov
mov
jb
rcrb
jns
cmp
cmp
mov
push
jno
adc
jns
ja
nop
fsubr
rorb
adc
into
in
aaa
mov
aaa
add
in
mov
pop
dec
in
scas
and
fwait
sbb
mov
stc
pop
js
into
jle
xchg
xchg
xor
sti
decl
es
mov
enter
pop
xlat
cmp
pop
fwait
sub
mov
pop
jmp
xor
inc
jns
mov
mov
das
int
test
dec
fnstcw
push
jo
dec
or
ret
mov
push
fsubr
enter
sub
jp
sarl
push
xor
dec
cmp
xor
data16
cmp
xchg
js
leave
pushf
jle
inc
add
loope
or
loop
and
test
inc
dec
xchg
pushf
fnstsw
dec
jmp
aad
loope
ret
in
mov
mov
dec
loope
les
push
push
sti
mov
inc
add
mov
in
sbb
aad
xor
push
or
mov
mov
in
sub
pop
loopne
push
sub
push
mov
mov
mov
push
arpl
aam
mov
jecxz
sahf
jl
push
xchg
xlat
adc
stc
mov
pop
jne
and
add
inc
dec
rolb
sub
aam
ret
xchg
pop
adc
xadd
movsb
push
xchg
pop
lretw
lods
out
mov
int
mov
loop
in
lock
cmp
arpl
pop
cmp
ret
lock
mov
js
mov
js
or
mov
mov
pop
adc
pop
sbb
icebp
add
imul
fildl
push
sub
fimuls
fnstcw
fistpll
orl
pop
repnz
or
jecxz
stos
pop
dec
je
mov
mov
cmc
rdtsc
push
out
pop
cmc
pop
jmp
incl
dec
cld
cs
sbb
popa
push
mov
lods
into
cli
cmpsb
xchg
fmulp
rol
shll
leave
jnp
mov
dec
mov
shrl
xchg
adc
mov
xorl
push
fdiv
out
ror
jge
out
gs
lds
test
lcall
pop
cmpsb
jmp
insl
test
xchg
stos
out
push
xchg
push
cmpsl
lods
mov
mov
dec
adc
cmp
rcl
cwtl
das
stos
das
out
xlat
popl
insl
mov
ss
mov
push
in
inc
cmp
pop
and
test
dec
xchg
lock
push
ljmp
push
popf
xchg
push
mov
jbe
rcr
icebp
inc
adc
js
popf
push
sbb
andl
js
adc
pop
imul
mov
sti
unpcklps
test
adc
inc
ds
sub
fcomps
int
fisubrs
mov
push
divb
fsubrl
test
test
jnp
das
insl
jle
add
pusha
sub
xor
daa
sbb
mov
push
cmp
outsl
adc
add
aaa
push
add
out
xor
jne
mov
xor
pop
adc
mov
filds
arpl
mov
jns
stos
loop
les
adc
dec
sbb
adc
jo
loop
mov
mov
xchg
mov
outsb
xor
adc
mov
out
cmp
loopne
dec
push
mov
push
sets
cld
or
out
push
outsl
dec
aam
in
cmp
sbb
mov
mov
cli
push
cmc
xor
jo
lcall
dec
or
rclb
mov
lds
in
movaps
jno
loopnew
push
shr
das
aam
push
jno
dec
jne
or
nop
cwtl
fadd
and
inc
mov
pop
fcomps
sub
sub
push
mov
jl
xchg
nop
aam
cmp
daa
rclb
xor
sub
ss
movsl
in
mov
pop
xchg
iret
in
sub
adc
sbb
sbb
dec
mov
loope
cli
movsl
xlat
or
imul
xor
cmc
cmp
pushf
mov
push
rolb
jmp
aas
jbe
mov
sbb
movsb
ss
les
lods
ss
and
push
xchg
dec
imul
or
sbb
and
data16
loopne
repz
adc
es
and
or
ret
test
add
push
pop
ss
rorl
xor
test
and
mov
mov
mov
xor
xchg
and
rol
pop
xchg
sbb
pop
xor
jecxz
push
or
and
arpl
sbb
fxam
addr16
push
pop
in
and
dec
fnsave
rcrl
sbb
jmp
pop
cmpsb
or
les
out
imul
iret
sbb
sub
outsl
xchg
xchg
fldcw
xchg
cwtl
fwait
lcall
inc
mov
je
sbb
in
pop
divl
mov
cmpsl
mov
lock
jo
out
dec
cs
outsb
sbb
inc
xor
sub
fldl
rol
dec
imul
fs
xchg
jno
sub
xor
push
movsb
xchg
scas
adc
cwtl
xor
mov
out
xor
leave
ret
jne
fs
jo
test
or
out
pop
icebp
std
dec
sbb
mov
nop
adc
mov
xor
aaa
inc
nop
jns
push
loopne
lret
jmp
lahf
in
or
xchg
adc
lret
cmp
dec
jp
pusha
pop
mov
aam
dec
sbb
jns
adc
xor
inc
jne
inc
int3
mul
mov
and
add
in
fsubrl
cmovo
pop
fucomip
movsl
aam
sub
addr16
xchg
out
hlt
lahf
xchg
mov
in
shlb
movsb
sbb
ljmp
xchg
addb
or
fsubr
cmpsb
mov
orb
pop
lea
cmc
adc
adc
popa
fnstsw
aad
sti
sbb
xchg
push
xchg
xchg
xor
rcr
mov
add
jg
add
mov
mov
daa
xchg
test
insl
inc
xlat
pop
aas
adc
jp
and
inc
mov
std
adc
xchg
in
push
dec
pusha
shrb
jecxz
fisttpll
mov
sub
xchg
mov
dec
ret
clc
std
inc
inc
rorb
cs
movsl
pop
mov
sub
dec
lock
ljmp
jnp
cmp
in
inc
push
sub
shl
push
pop
sub
hlt
cmpsb
or
xor
cmpsl
or
or
jle
lea
cld
out
js
xchg
mov
test
aas
fpatan
mov
adc
insb
jne
test
ds
dec
ret
push
pop
cld
dec
fldenv
pop
test
movsl
test
not
sub
xchg
sub
and
dec
loopne
jmp
imul
shlb
jl
rcl
mov
and
fcompl
pop
pop
sub
mov
call
jge
fisttps
fstpl
mov
xor
push
sbb
and
daa
shl
pop
pop
adc
jmp
out
cmpsl
outsl
psraw
mov
popf
pushw
fisttpll
andl
ds
adcb
pop
push
jp
sbb
pop
aam
xor
sub
pop
push
movsl
popf
shlb
aad
pop
lahf
lock
arpl
xchg
mov
push
arpl
loopne
pop
fldcw
and
fs
cli
orb
test
iret
push
shl
push
inc
movsl
inc
jns
push
cmpsl
ds
ja
sub
fmul
in
mov
and
popf
scas
mov
push
sbb
push
dec
add
add
jge
sbbl
dec
shlb
sub
mov
mov
mov
dec
cld
pop
pop
lcall
mov
xchg
subb
cwtl
cld
pop
mov
mov
pop
aam
repz
and
sub
jmp
roll
jo
push
adc
sar
pop
addr16
and
add
mov
cmpsb
xchg
call
inc
mov
jge
xchg
sub
push
aad
or
pop
xor
or
add
insl
loopne
inc
cmp
mov
adc
adc
loopne
fisubs
mov
lcall
cmp
dec
push
adc
fistl
addr16
sti
lret
push
push
push
sbb
sbb
lahf
xor
dec
pusha
in
dec
iret
jno
xchg
xchg
fwait
xor
movsl
pop
push
and
dec
fistpll
push
jns
pop
dec
in
rcll
and
xor
imul
add
ss
stos
lods
fcmovnu
pushf
pop
jns
mov
mov
inc
out
add
mov
fisttps
mov
add
pop
xchg
cmp
data16
dec
xchg
ja
lods
flds
leave
mov
inc
sbb
dec
aas
test
sbb
lea
pop
testl
in
call
xor
sub
shr
punpckhwd
imul
lods
pop
xor
das
adc
pushf
leave
sbbb
nop
xchg
add
mov
nop
repnz
insb
in
into
test
sub
or
push
outsb
add
dec
xor
loop
adc
pop
push
stc
outsb
mov
adc
push
ret
cmpsb
add
dec
lea
xlat
das
iret
stos
insl
ret
adc
pop
pop
inc
shll
xorl
add
rclb
and
enter
jno
or
leave
lds
xor
lret
out
pop
sbb
aaa
dec
mov
lcall
lea
mov
xchg
loopne
mov
int3
cs
test
icebp
sarl
dec
add
data16
fdivp
adc
repz
scas
cmp
int
test
jnp
lods
sbb
xchg
arpl
xlat
js
ret
push
and
mov
mov
outsb
push
fldt
fs
jno
outsb
test
js
idivb
or
adc
mov
sub
loopne
pop
dec
aaa
dec
inc
jo
imul
cmp
repz
xor
outsl
sub
repz
jg
lcall
ret
sbbl
mov
enter
pop
iret
cmp
mov
aam
xchg
xchg
loopne
insb
mov
popf
inc
sub
push
inc
imul
in
pop
xor
pop
xor
insl
xor
rorl
mov
arpl
pop
imulb
movsb
rclb
in
jmp
push
jmp
xchg
or
jmp
inc
subb
adc
inc
inc
pop
xchg
lret
mov
std
aaa
cmp
mov
jg
mov
adc
dec
mov
jb,pn
jnp
xor
cmp
ljmp
add
inc
ljmp
test
and
jp
lahf
jbe
add
ficoml
jecxz
int3
sub
cmp
insl
jbe
loope
cli
push
int
shrb
std
into
rcll
lods
aad
push
mov
ret
xchg
movl
lcall
push
leave
push
in
outsb
jns
push
mov
movsl
loop
pop
add
sub
in
dec
mov
pop
das
repz
repz
ja
jne
pushl
sub
clc
add
xor
aaa
sub
fistpl
out
push
push
mov
lock
adc
mulb
popf
mov
sbb
fs
daa
sub
aam
insl
xchg
in
or
cmp
test
test
sub
arpl
inc
xchg
dec
nop
mov
mov
leave
xor
jnp
jae
jno
mov
inc
sub
xor
in
and
into
xchg
xchg
xlat
xor
decb
leave
mov
mov
outsl
mov
adc
aad
ret
mov
jmp
sub
scas
push
aad
dec
lcall
push
mov
sbb
sub
btr
cmp
inc
das
leave
ja
jae
leave
rclb
fistl
mov
ret
out
mov
pusha
ljmp
leave
cmc
pop
xchg
les
jge
sub
rcr
dec
cltd
xor
xor
loopne
inc
cmp
fldl
sub
scas
mov
dec
and
pop
in
push
movsb
arpl
icebp
push
mov
pop
fsts
loopne
lret
pusha
aam
mov
cmp
repz
inc
adc
add
mov
insl
dec
fisubrl
xor
dec
and
fsubr
jge
xchg
std
and
mov
push
xchg
push
sbb
cmp
pusha
lods
out
jg
nop
or
pop
pminub
jae
pop
jl
cmp
cld
add
jnp
inc
jp
repnz
mov
xchg
aad
mov
call
imul
xchg
mov
dec
cmc
push
pop
cmpl
or
jnp
jae
rclb
ljmp
mov
push
inc
push
inc
sub
into
clc
xchg
stos
dec
lret
inc
jl
sub
es
xor
in
test
jnp
int3
mov
xor
dec
mov
lcall
mov
and
test
sahf
push
call
mov
mov
repz
movsl
and
clc
andb
and
faddl
loope
pusha
and
addr16
or
or
mov
cmp
xlat
outsb
je
cmp
dec
mov
in
fidivl
mov
mov
adcb
push
fsubr
mov
pop
ret
push
mov
inc
adcb
andl
sub
inc
jae
or
xor
cmp
sarb
mov
pusha
stos
cmc
movb
pushf
call
leave
push
mov
push
xchg
pop
xor
mov
fistpl
xchg
mov
js
test
mov
scas
pop
popf
adc
mov
iret
addr16
das
xor
or
inc
or
sbb
or
jp
data16
in
jmp
jl
fmuls
lds
cwtl
xchg
push
sbb
push
loopne
lods
mov
fcomp
jbe
cld
mov
in
or
lds
sub
in
or
in
sub
repz
add
cmc
mov
pushf
adc
test
add
jmp
pop
test
aaa
mov
in
pop
xchg
rclb
push
pop
mov
psubw
xchg
rcrb
mov
fstpt
lea
mov
push
clc
pushf
mov
int3
jmp
mov
xor
iret
test
add
or
add
push
xor
or
sbb
xor
add
add
in
mov
mov
dec
mov
int3
jmp
adc
stos
das
jmp
sbb
scas
adcb
sbb
add
sbb
dec
loope
sub
jo
mov
ret
mov
sbb
loop
push
mov
pop
sub
aas
xchg
cmp
mov
or
lret
lcall
es
data16
push
and
mov
inc
out
aaa
rcr
add
test
and
cwtl
or
pushf
loopne
jo
xchg
mov
clc
dec
aad
lcall
sti
xchg
fbstp
mov
ja
nop
xlat
cmp
sbb
push
or
outsl
dec
jne
add
sbb
rcrb
dec
scas
push
out
push
mov
xchg
sbb
mov
push
pop
inc
xorb
sub
dec
and
gs
jg
sub
sub
cmp
in
pop
sbbl
jno
das
and
cli
rcll
sahf
stc
sbb
push
push
fwait
shrl
ror
scas
loop
icebp
aaa
cmp
dec
in
in
cmp
mov
xlat
xchg
cld
cmpl
cmp
inc
xchg
adc
cmc
pop
cmp
nop
xor
fimull
xchg
xchg
adc
pop
stos
jne
pop
repz
punpckhbw
std
or
dec
mov
ljmp
mov
gs
repz
addl
test
out
fimuls
loopne
incb
imul
push
daa
in
mov
inc
jbe
sbb
int
inc
fisubl
mov
sahf
xchg
pop
pushl
add
fs
sti
loopnew
xchg
ljmp
adc
icebp
ret
and
sub
sti
pop
mov
mov
xchg
loopne
xchg
test
mov
repnz
xor
pop
sbb
mov
cld
popa
repz
popa
sub
je
rclb
add
push
jnp
sub
lock
rcll
ja
mov
or
and
dec
lcall
gs
cmpsl
mov
pusha
leave
xchg
je
cmpl
pop
pop
push
cmp
shll
hlt
ds
add
mov
adc
jnp
pusha
sti
repnz
rol
lcall
sub
cmp
and
xchg
xor
xor
mov
dec
cld
xchg
js
xchg
mov
inc
nop
adc
into
sub
ds
and
loop
jmp
xor
xchg
inc
in
push
mov
leave
and
jbe
xor
mulb
imul
test
lcall
xor
dec
inc
xor
neg
xchg
dec
jp
pop
incb
in
xor
cs
mov
inc
pop
or
mov
dec
sarl
out
sub
lret
ret
lcall
movd
mov
xchg
stc
or
loopne
push
sub
into
push
hlt
ret
scas
inc
sti
xor
ret
cmp
rcrb
pop
or
jge
rorl
xchg
jnp
or
aas
dec
xchg
test
pop
movsl
inc
aaa
hlt
je
outsb
fcomps
sbb
fwait
mov
jg
inc
xlat
hlt
xlat
rol
jmp
xchg
dec
ret
sub
imul
cmp
inc
int3
in
pop
inc
stc
imull
scas
in
mov
cmp
adc
ja
or
sbb
push
fs
xlat
xchg
imul
xor
sti
repnz
lea
mov
repz
int
repz
icebp
dec
fdivr
mov
arpl
and
jno
loope
sbb
nop
bnd
sbb
mov
scas
cmp
mov
lds
pop
push
sub
adc
fldenv
pushf
mov
xchg
clc
mov
jmp
mov
das
gs
sub
push
or
fistps
in
in
and
lds
mov
loop
sub
push
xchg
ss
into
mov
sbb
inc
and
stos
ss
sti
jmp
movsl
sub
and
sbb
mov
pop
cmp
pop
adc
dec
cmc
adc
addr16
es
mov
int
sub
jbe
add
jge
xchg
pop
jl
jl
icebp
fidivrs
loop
icebp
mov
pop
daa
cmc
js
in
cmp
ljmp
pop
add
mov
sbb
sahf
sub
mov
stos
sbbb
xor
pop
mov
mov
jg
inc
adc
ret
mov
inc
xchg
jno
repnz
test
cmpsb
xorl
push
nop
int3
adc
mov
shlb
out
lods
jle
aaa
bound
or
sbb
test
lea
fwait
mov
lock
mov
lahf
js
or
push
in
pop
shlb
xchg
pop
mov
mov
add
sbb
sahf
popa
aas
adcb
ds
cmp
inc
cmp
fdivs
out
scas
xor
ljmp
jmp
sub
xchg
sti
lret
js
out
sbb
out
adc
xlat
and
mov
sub
dec
in
in
hlt
mov
aaa
xor
mov
leave
call
test
and
mov
xchg
test
push
stc
sub
idivl
inc
mov
mov
mov
mov
cmp
clc
xlat
sub
xchg
fs
mov
testl
daa
pop
mov
ja
xchg
xor
mul
mov
mov
enter
xor
loopne
mov
cwtl
shlb
dec
insb
fmuls
adc
mov
sub
test
popa
shlb
sbb
les
roll
call
iret
insl
pop
scas
push
fistpl
sub
cmpsl
hlt
js
lods
test
aam
jns
dec
movsb
xor
xor
fldt
mov
push
push
xchg
test
inc
push
stos
addl
movl
lods
push
test
inc
inc
push
lds
test
mov
pop
add
out
add
mov
lods
outsl
cmpsl
repz
xor
in
push
ret
dec
add
adc
sbb
ret
mov
lods
xor
hlt
test
mov
sbb
leave
cmp
arpl
sbb
jo
inc
and
test
fwait
gs
pop
jecxz
ss
adc
int
add
leave
andb
cmp
rcl
mov
test
and
mov
push
inc
mov
stos
out
dec
cmpsb
subb
stc
in
fisttps
out
dec
test
loopne
into
mov
fbstp
xchg
push
pusha
dec
jb
xlat
lds
dec
lods
push
pop
mov
shll
xchg
jb
cmpsl
mov
xor
imulb
adc
xchg
dec
imul
cmp
mov
mov
int
adc
pop
push
nop
mov
in
test
movb
pop
inc
outsb
and
jo
or
bound
clc
mov
cmp
push
xchg
loopne
fucomp
adc
xchg
pop
sbb
mov
xchg
mov
cmp
rcl
push
gs
mov
lods
stc
and
cmp
mov
inc
popa
ljmp
dec
cli
pop
shll
hlt
int
fimuls
xchg
pop
sbb
gs
lcall
sub
dec
cli
iret
jno
shlb
pop
movsl
dec
add
lcall
out
inc
pop
ror
int
insl
pop
mov
ffree
loopne
cltd
adc
ss
fstps
cmc
mov
fwait
lds
out
cs
adc
lret
or
jecxz
stos
add
jo
filds
test
inc
scas
sarb
aam
or
push
dec
pop
adc
int
cmp
mov
mov
xlat
cwtl
fnstsw
int
and
cmp
icebp
outsl
and
sub
pop
fildl
mov
adc
add
aaa
sahf
rcrb
cltd
jmp
aam
cmp
and
insb
cwtl
scas
mov
call
movsb
shl
mov
arpl
adc
icebp
pop
mov
mov
out
imul
mov
cmpsb
fidivrl
cld
pop
sti
jns
pop
mov
cmp
sub
pop
jge
adc
sbb
repnz
and
adc
pop
cltd
mov
test
std
xchg
jge
sbb
inc
lds
idivb
rcrl
inc
ss
mov
sahf
scas
jp
aad
cli
dec
push
sbb
adc
orl
pop
mov
mov
sbb
out
jg
xor
cmc
pop
inc
push
lea
das
lret
adc
push
sbb
pop
test
rorl
jl
mov
adc
push
out
jns
sbb
fwait
call
mov
nop
in
add
not
mov
sbbb
gs
sub
mov
hlt
cmp
mov
xchg
movsb
or
mov
cmc
loope
mov
lods
in
je
push
mov
fwait
mov
pop
xor
push
mov
or
roll
mov
and
push
ds
movsl
imul
xchg
adcl
xchg
add
pop
shll
scas
push
mov
inc
outsl
add
outsb
dec
into
pop
ja
mov
mov
ss
iret
cli
mov
sbb
lahf
mov
cs
xlat
mov
mov
leave
jb
xor
xchg
jp
or
cltd
cmp
inc
enter
sub
nop
xor
cld
sti
pop
jo
push
call
jg
repz
out
xor
xchg
jg
imul
arpl
push
bound
xchg
shr
mov
inc
cmp
adc
mov
xlat
inc
push
dec
shrl
ret
lahf
or
dec
out
mov
pusha
scas
fisubrl
mov
addb
movsl
in
xchg
ja
outsb
cmp
aas
xor
and
iret
jns
and
mov
cmp
insl
push
xchg
pop
test
call
stos
pop
pusha
dec
fsubl
or
xchg
mov
sti
pop
or
imul
loop
hlt
mov
push
std
cmp
mov
jb
xor
pushfw
out
add
jno
cwtl
push
ss
mov
hlt
loope
fisubl
nop
cmp
cltd
or
ljmp
fsubrs
or
pop
clc
cmpsl
add
dec
fstpt
insl
jno
out
ljmp
imul
add
shll
out
ja
or
es
xor
sti
test
fwait
pop
fistps
pop
jge
push
repnz
sbb
sti
sarl
in
xor
mov
xchg
mov
mov
adc
cmp
pop
dec
mov
dec
out
cld
hlt
jmp
fsincos
and
lods
inc
cmpsb
insb
xor
dec
dec
adc
mov
stc
iret
mov
inc
mov
mov
insb
pusha
js
push
or
or
test
aam
popf
mov
fldlg2
and
mov
nop
into
je
into
jmp
xchg
and
aam
les
sbb
lea
push
lods
or
sbb
out
dec
pop
lcall
stc
cmc
fstpl
or
mov
aaa
jp
pushl
add
cmpb
lods
pop
divb
or
and
lret
and
fs
cmp
lcall
xchg
cmpsb
iret
xchg
test
and
mov
in
rolb
dec
pop
pop
mov
and
jns
call
hlt
sahf
mov
cmp
mov
mov
sub
add
xchg
mov
cmp
adc
in
and
rorl
lret
pop
adcl
pop
pop
pop
out
inc
pop
movlps
ja
rcr
sti
pop
inc
shr
jmp
xlat
push
sahf
les
adc
mov
sub
dec
enter
cmp
inc
mov
jno
rcr
lahf
mov
push
repnz
inc
in
je
push
cs
ja
ljmp
xchg
bound
lea
fs
sbb
cs
push
cmc
add
xchg
in
fucom
scas
push
push
lcall
pop
push
mov
jns
xor
jae
cmpsb
mov
testb
scas
movsl
sti
sti
mov
mov
shrb
jnp
sarl
cmp
clc
or
jmp
pop
test
clc
xor
adc
inc
dec
mov
fstpl
das
adc
jnp
xor
mov
nop
lret
mov
lret
test
mov
and
jge
jecxz
pusha
push
inc
ret
inc
xchg
fiadds
sub
mov
jmp
dec
pop
dec
call
stc
inc
mov
sub
dec
mov
bswap
gs
adc
sub
sub
adc
mov
push
adc
addr16
push
lahf
jne
ja
cmp
ljmp
fsub
cld
out
lods
mov
mov
cmp
pop
in
pop
xchg
mov
out
add
sbbb
out
fiaddl
xor
xlat
add
mov
pop
push
cmpsl
lcall
and
daa
sahf
inc
cmp
outsl
dec
adc
mov
xchg
daa
adc
and
fisubl
xor
imul
hlt
xor
jmp
push
stos
fwait
ret
and
rcrb
inc
jle
xchg
pop
fstl
addl
inc
pop
mov
mov
popf
js
cmp
fstps
jns
and
repz
pop
pushf
je
mov
outsl
insl
loope
mov
inc
mov
jo
pop
das
lock
mov
aas
push
adc
inc
xor
out
adc
popf
cmp
mov
sbb
adc
cmp
shlb
pop
in
ljmp
dec
sub
inc
out
adc
sbb
dec
push
pushf
daa
mov
jp
sub
fisubl
dec
or
sub
cmp
and
jnp
lcall
and
fadds
sub
imul
sub
movswl
sub
pop
rcrl
xchg
cwtl
addr16
push
mov
fwait
stos
fdivs
clc
aam
loopne
icebp
lods
shll
jp
xchg
push
mov
or
push
cmc
sbb
mov
stos
int
imul
xchg
push
push
lock
filds
movsb
mov
xor
icebp
push
push
into
sub
mov
and
ja
loope
mov
jnp
mov
in
das
adcl
dec
jg
stc
or
xchg
sbb
dec
jbe
cs
jne
fbstp
lods
mov
sbbb
shll
data16
xchg
jae
push
and
ja
cmc
gs
aaa
bound
xchg
adcl
lcall
inc
test
out
clc
xchg
into
test
adc
jge
gs
mov
mov
leave
sub
pushf
mov
cltd
xchg
lock
cmp
pop
adc
and
clc
nop
stos
stos
lcall
mov
inc
sbb
sbb
pop
clc
idivl
or
inc
subl
stos
add
fdivrl
outsl
pop
popa
sti
mov
fists
pop
out
stc
fsubrl
dec
cmpsb
pop
mov
daa
mov
test
push
shl
and
movsl
pusha
call
ret
cld
jg
adc
or
cmp
jnp
lcall
mov
lods
inc
or
or
movsb
rorl
inc
into
pop
jns
cmp
les
fs
subl
dec
inc
sub
mov
cli
and
jo
or
push
mov
mov
pop
into
inc
lea
push
inc
mov
jecxz
lods
adc
sub
mov
jnp
xchg
adc
dec
insb
imul
xor
or
movsl
xor
orb
subl
lea
int
mov
jb
insb
xor
jg
ja
js
ds
adc
cmpsl
push
sti
xchg
push
mov
test
ficoml
push
repz
bound
fwait
mov
out
enter
pop
mov
pop
cmp
stos
sahf
dec
fs
das
and
in
je
xchg
inc
stos
enter
mov
jp
adc
int
pop
xor
mov
js
mov
incl
mov
fs
pop
push
imul
lcall
out
mov
fimuls
insl
push
fs
push
xor
adc
divb
test
std
xchg
sub
mov
or
xchg
mov
lahf
movsl
inc
out
dec
cmp
mov
cmp
or
cmp
cmp
dec
les
sti
pop
flds
sub
clc
cld
mov
in
sbb
mov
cmp
xchg
push
inc
scas
cwtl
pusha
xchg
inc
dec
or
add
or
mov
jge
popa
lret
mov
andl
jge
xor
sbb
std
fidivl
aas
push
in
pop
push
aad
cmp
daa
out
mov
stos
cs
sbb
sbb
je
cmp
and
lcall
shl
rorl
jl
test
or
cmpsb
adcb
mov
call
gs
imul
idivl
xor
cmp
sahf
dec
popf
fcmovbe
scas
pop
xor
xor
in
out
push
lcall
movsl
pop
sahf
inc
pop
jno
cmp
sub
bound
mov
scas
xlat
je
sub
outsb
mov
dec
mov
fcmovu
std
push
pop
fsubl
ja
ret
pop
jl
sbbl
jbe
push
stc
out
inc
fnstsw
inc
hlt
fisubl
into
dec
negb
ja,pn
gs
or
push
in
fsubrs
mov
jae
pop
call
cmp
out
sub
test
cld
xor
hlt
mulb
jl
rorb
mov
pop
dec
fstpl
lds
dec
jne
mov
sub
lahf
scas
dec
or
jbe
clc
jecxz
in
or
ficompl
shl
xchg
icebp
mov
call
adc
sti
mov
shrl
mov
addr16
dec
test
mov
pop
adc
inc
or
pop
stos
xlat
int3
shrl
mov
pop
das
loopne
xchg
mov
into
pusha
dec
in
stos
jne
ret
push
pop
subl
dec
or
or
xchg
adc
movsl
cwtl
lahf
in
sbb
mov
pop
mov
rorb
lea
dec
mov
fstpt
imul
push
pop
cmp
into
xchg
sub
loopne
rclb
pop
xor
lahf
and
sbb
and
neg
andl
dec
dec
sub
test
mov
xor
sbb
je
and
into
iret
push
loope
ss
pop
mov
hlt
jno
mov
ljmp
jae
stos
and
sti
test
inc
jb
push
pop
pop
stc
xchg
test
jge
and
test
rcll
movlps
jmp
push
cmc
or
sti
imul
das
testb
mov
fisubrs
insb
mov
daa
cmpsb
out
jae
add
test
mov
xor
mov
dec
and
add
std
pop
add
int
mov
cmp
jnp
mov
sbb
repz
xchg
cmp
daa
lds
call
das
es
and
lods
movsb
jne
mov
sbb
mov
out
clc
push
mov
mov
mov
sbb
lods
cwtl
cld
jbe
es
int
sub
out
fnstcw
enter
pop
fldenv
fiadds
gs
out
movsb
test
and
mov
std
mov
pop
adc
jbe
push
xchg
ja
adc
shrl
lret
xor
lret
cmp
or
inc
data16
mov
popa
incl
je
aam
push
icebp
xchg
mov
sbb
lcall
xchg
add
clc
mov
jae
mov
in
mov
outsl
push
jnp
mov
xchg
cltd
leave
jge
push
jecxz
mov
push
xlat
cmpl
push
sub
gs
push
outsb
and
mov
xchg
stos
hlt
sub
ds
in
adc
xchg
enter
push
mov
push
xor
mov
idiv
insb
popa
mov
and
or
pop
fcoms
xor
hlt
push
ds
or
cli
fmul
push
rcrb
add
ja
or
and
in
xchg
xchg
incb
push
repnz
jno
adc
es
scas
in
xor
pop
outsb
mov
std
inc
sbb
push
or
sub
and
cli
push
outsl
pop
and
lea
repz
divb
stos
mov
mov
push
push
pop
xchg
push
aam
cli
push
inc
loopne
outsb
and
imul
cmc
pop
cli
jnp
add
fidivl
pop
cmp
or
sub
mov
rolb
push
xchg
pop
pop
shrl
push
push
fwait
je
mov
mov
jp
iret
and
in
and
sbb
stos
daa
gs
mov
repz
ret
jnp
in
xchg
adc
mov
cmp
adc
mov
insl
mov
cmp
fimuls
sub
dec
stc
cld
stc
sub
xor
push
in
ror
jns
fcom
les
out
pop
inc
lcall
mov
lods
adc
clc
cmp
jmp
mov
ja
push
xor
ja
sub
adcl
sbb
sbb
or
imul
xor
xchg
cmp
pop
sbb
sub
es
xlat
xchg
add
inc
push
pop
in
adc
pop
test
mov
mov
cld
popa
mov
sub
shll
mov
dec
push
push
pop
jo
pop
loope
and
icebp
fistl
loopne
inc
sahf
sahf
rcrb
mov
imul
push
mov
out
int
dec
popa
pop
sbb
sbb
pop
mov
lock
insl
lock
loope
inc
sbb
orl
lcall
adc
popf
stc
test
jecxz
enter
push
add
adc
jae
ss
dec
inc
lods
pushf
imul
mov
shl
imul
popf
pop
push
shlb
cmpb
daa
jecxz
pop
mov
push
cmp
je
int
jg
lahf
in
iret
mov
and
inc
insl
push
add
push
dec
aas
ss
leave
ret
pop
cmc
mov
in
movsl
stos
popf
rol
fwait
or
xchg
adc
cltd
adc
mov
les
mov
popa
iret
mov
cmp
pop
ret
fdiv
out
cmp
push
idivb
ficoml
mov
or
mov
out
mov
inc
bound
std
test
mov
dec
xchg
or
popf
pop
jmp
add
es
mov
jns
dec
dec
mov
mov
mov
rorb
fs
add
idivb
pop
dec
loop
cmpsb
jmp
jecxz
fisubrl
int
xor
add
fcoms
insl
mov
sahf
sbb
pop
xchg
cmpsl
mov
inc
ja
addr16
pusha
and
sub
int3
dec
imul
sub
or
ljmp
xor
ret
xchg
push
inc
or
ds
sub
insb
mov
push
cmp
mov
repnz
adc
cmp
or
cwtl
mov
pop
sub
ljmp
jge
mov
push
xlat
ret
fdivrl
xchg
loop
push
xchg
insl
lds
mov
test
xchg
pop
mov
xor
cmp
sti
xchg
arpl
xchg
inc
arpl
dec
pushl
cmp
mov
ret
ret
jecxz
iret
jbe
pushf
scas
pop
hlt
lret
leave
psubb
stos
inc
shll
cmc
jne
adcb
aaa
dec
mov
rcrl
xchg
icebp
cmp
jl
sbb
xor
nop
pop
dec
nop
int3
out
xorl
fildl
mov
stc
mov
arpl
jbe
lahf
lock
push
test
sbb
int3
dec
mov
jbe
dec
push
push
das
popf
ret
out
push
or
popf
aas
jge
out
inc
out
dec
xor
jge
lods
sub
push
or
mov
clc
dec
sub
xchg
cmpsb
jbe
shlb
sub
test
nop
dec
popf
sub
jns
push
insl
push
test
icebp
pop
fcomp
outsb
int3
xchg
shll
inc
mov
std
push
popf
lods
sub
aaa
gs
sbb
scas
push
xor
ss
das
mov
jo
std
les
pushf
insb
push
cmp
pop
jno
push
cmp
jge
pop
push
pop
cmp
lock
mov
xchg
sub
dec
xchg
xlat
test
xor
dec
mov
sbb
pusha
adc
or
jne
shrl
dec
push
pop
xor
mov
movb
jp
cs
popa
mov
iret
int
call
sub
fisubrl
movsl
xor
jnp
pusha
loope
sub
and
aad
popf
push
daa
in
out
std
and
repnz
adc
aas
mov
or
cwtl
mov
mov
arpl
mov
mov
pop
xor
push
xchg
cmp
cmovns
xchg
test
or
das
ljmp
inc
jge
fmull
ljmp
adc
jge
fmul
jbe
adc
mul
fisubs
jle
lock
lret
push
arpl
sti
fnstsw
cmp
std
mov
repz
mov
fxch
inc
ja
pushf
pop
inc
mov
lcall
scas
mov
lea
hlt
inc
inc
ss
xor
pushf
shll
pop
cmp
ja
xor
mov
sbb
xor
je
in
push
jae
sbb
mov
idiv
cmc
orl
aam
inc
into
push
decl
mov
test
icebp
push
hlt
test
push
inc
mov
out
push
int
lea
push
sub
sub
pop
sbb
fs
out
and
inc
fdivr
shr
imul
mov
daa
push
mov
ja
mov
movsl
cmp
push
sub
sbb
aas
cmp
cmpsl
in
adc
imul
jae
outsl
or
xlat
cmp
pop
adc
jbe
push
movsl
imul
mov
adc
loopne
and
mov
jno
movsb
mov
sti
jmp
and
cld
jno
add
jb
xchg
popa
xchg
mov
push
inc
outsl
mov
xchg
fnstsw
adcb
ret
push
cmpsl
repz
and
outsl
call
xor
dec
jle
rcll
pop
stos
idivb
mov
rorb
cmp
cmp
push
imul
aaa
jg
jg
cmp
scas
imul
ss
gs
lds
xor
sbb
in
repnz
lea
les
sbb
or
jns
test
out
lock
jge
add
sub
mov
sbbl
mov
enter
jne
push
mov
mov
stc
scas
push
stos
jge
xchg
inc
lea
lret
xchg
in
inc
sub
push
mov
jnp
and
xchg
fisttpll
cmp
mov
sbb
cld
mov
out
cld
test
add
std
sub
imull
push
insl
cmp
scas
push
arpl
into
jp
inc
inc
idivb
fldl
push
in
push
push
push
stos
aas
test
adc
fidivrs
pop
orl
lcall
inc
pop
pop
inc
xor
pop
jns
shlb
ds
jl
aam
jnp
cwtl
sbb
sbb
bound
fbstp
les
stos
jno
sub
inc
insb
mov
or
xor
sub
out
jge
mov
xchg
or
aaa
enter
sbb
cwtl
in
sub
pop
iret
aam
mov
sub
adc
and
push
enter
adc
xchg
mov
iret
in
or
mov
jnp
fildll
push
cmp
shr
aas
mov
insl
push
or
and
loop
inc
push
mov
outsl
jp
ss
cmpsl
push
pop
xlat
fsubr
inc
push
repnz
xchg
sub
aas
cmc
lock
and
inc
mov
dec
scas
rorl
icebp
jmp
mov
dec
jmp
dec
divb
push
ljmp
bsf
jge
mov
fldl
data16
push
filds
mov
mov
inc
cmc
push
test
jae
or
pop
dec
cld
inc
jl
inc
aas
cltd
addb
and
jo
mov
push
imul
pusha
shll
aaa
shrl
xorb
pushf
in
xlat
shlb
scas
add
scas
imul
out
frstpm(287
cmp
push
jns
or
add
int
hlt
insl
jns
add
insl
xor
testl
xchg
adcl
mov
mov
mov
lret
jmp
stos
push
lahf
fnstsw
lahf
pop
cmpsl
outsl
adc
jb
jge
fcmovne
sbb
sbb
movsl
movsb
cmpsb
cmp
mov
pop
mov
sbb
adc
cwtl
xor
out
push
icebp
je
cmpsb
pop
xchg
ja
loopne
pusha
cmp
dec
es
lds
xor
mov
imul
and
dec
or
mov
xor
mov
mov
cmpsl
out
inc
iret
mov
popa
mov
push
xchg
push
pop
sub
jne
xor
cmpsl
rorb
test
pop
jl
xchg
stc
out
cmp
push
in
imul
mov
sbb
push
pop
js
arpl
add
jp,pn
push
lret
pop
call
jnp
aam
fwait
mov
in
pop
dec
mov
dec
xchg
stc
mov
aad
cmp
sub
enter
push
shlb
fcoms
fisttpl
mov
fcoml
jb
aaa
jge
rolb
jmp
loope
dec
add
and
fwait
mov
ss
aam
push
orl
gs
pop
fdivr
rcrl
test
xor
mov
sub
and
xchg
adc
mov
xor
sub
sbb
out
push
call
add
cwtl
sbbb
or
push
fstl
mov
out
or
int
jecxz
mov
insb
or
lock
cwtl
jmp
mov
xor
imul
mov
xor
fiadds
cmp
loopne
jecxz
imul
mov
dec
or
outsb
mov
dec
sub
adc
nop
push
sbb
pop
jbe
outsl
jae
and
cli
push
imul
sub
test
adc
push
push
daa
sbb
jbe
jo
adc
stos
xchg
jmp
in
test
xchg
pop
out
adc
std
push
pop
mull
fs
adc
xor
xor
mov
fnstcw
cmp
adc
mov
jg
sarl
mov
add
pusha
mov
test
outsl
test
inc
hlt
jl
and
out
inc
addr16
cmp
cmp
mov
imul
push
das
rorl
sub
out
leave
lahf
and
into
lcall
aad
data16
das
push
and
insb
push
lcall
mov
inc
xchg
jae
cmp
ja
adc
out
mov
or
adc
jmp
adc
repnz
scas
jl
jg
and
popw
xchg
enter
addr16
dec
in
cld
imul
lock
mov
out
jo
jmp
mov
and
icebp
sub
mov
and
jo
add
into
jne
aam
push
push
lea
ret
shll
aad
xchg
xor
cli
adc
mov
xchg
nop
incl
std
hlt
mov
loope
xchg
jae
jnp
sbb
insl
pop
adc
jae
push
jne
pop
test
test
aaa
jo
or
incb
and
cld
out
cmc
push
outsl
sahf
in
and
pmaxub
sbb
in
add
fwait
cli
cmp
lahf
xorb
push
fwait
jge
popl
dec
vmovsd
aad
lds
bound
push
mov
es
fisubl
movsb
stos
mov
cmp
cs
rorl
into
lret
pop
push
clc
fcmovnu
mov
mov
or
xchg
and
mov
mov
and
into
push
xor
rcrl
outsb
ficompl
mov
xchg
aaa
into
cmpsb
pop
test
fcoml
aam
movsl
aam
out
mov
mov
or
add
or
outsb
mov
loopne
mov
push
arpl
or
cmp
mov
dec
mov
cmp
jg
out
lret
outsl
mov
pop
imul
lcall
mov
jmp
aas
xchg
push
jbe
outsl
sbb
and
test
xchg
jmp
cmp
ja
aam
pop
mov
hlt
push
xor
xchg
ds
adc
call
xchg
xchg
cmp
std
cmpsl
jo
scas
push
mov
scas
aad
je
push
je
andl
fbld
push
fs
push
dec
xchg
mov
inc
mov
sub
cli
ljmp
stos
cltd
pop
popa
dec
andb
das
xchg
push
mov
ss
imul
rcrl
dec
inc
shll
xchg
cmp
xchg
add
ss
stos
call
push
stos
nop
rcrl
lds
insb
mov
push
test
mov
sarb
adcb
dec
cltd
std
stos
roll
faddp
outsb
into
xchg
sub
ds
shlb
pop
aam
fsubs
mov
push
ret
repz
or
push
mov
cmp
add
ss
lods
enter
nop
insl
push
ljmp
lds
inc
inc
mov
out
xchg
sub
imul
cmp
call
xchg
out
lahf
das
mov
and
or
popl
movsl
mov
arpl
adc
mov
fsubrl
mov
mov
jle
clc
cmpsb
fsts
daa
xchg
jo
loopne
notb
je
adc
add
arpl
and
popa
sarl
or
jmp
adc
je
cmp
jecxz
in
sbb
cs
enter
scas
es
cmp
cld
popa
inc
ret
fldenv
xor
incb
daa
test
and
add
xchg
mov
mov
mov
push
outsl
arpl
stos
dec
andb
int
push
push
int3
mov
sahf
cld
xor
fimull
hlt
movsb
inc
in
dec
adc
sbb
dec
call
xor
out
std
aam
dec
repnz
sbb
mov
push
faddl
iret
xor
ljmp
outsb
rcrl
xlat
enter
ss
jnp
jae
xchg
test
cwtl
test
loopne
jp
dec
nop
stos
sarl
xchg
subb
xchg
fisubrl
pop
mov
test
outsl
push
mov
dec
cld
enter
aad
sbb
sbb
or
mov
xchg
xchg
jae
xor
call
in
mov
mov
dec
adcl
lcall
lods
cmpsb
xchg
xchg
xchg
push
xchg
cltd
jecxz
sub
out
pusha
addb
sbbl
icebp
mov
adc
or
movsl
int3
ret
dec
stc
jl
push
lock
sbb
rcrb
ficoms
cmp
subl
push
cmp
clc
inc
idiv
and
dec
in
mov
cmpsl
movsb
outsl
daa
jns
popa
ret
mov
inc
test
cmpsb
push
add
or
stos
adc
dec
mov
push
sbb
push
test
sub
xlat
sahf
jo
rcll
fisttps
inc
rorb
pop
fildl
and
fldcw
stos
fldt
xorl
inc
and
mov
jg
testb
fsubl
daa
sub
push
xchg
jae
sbb
xor
movsb
cmpsb
add
push
imull
sbb
ja
pop
mov
pop
or
int3
pop
dec
daa
mov
push
pop
add
lods
gs
lret
mov
ss
mov
insl
loop
lds
and
leave
dec
mov
xchg
xchg
mov
push
das
out
sahf
sub
lret
ljmp
ss
dec
clc
scas
outsb
idivb
stos
add
push
push
jp
cmpsl
and
test
out
out
outsb
sub
xor
lret
rcr
cmp
sar
fld
mull
add
cmpsb
or
pop
imul
jae
dec
and
sbb
sub
mov
out
mov
movsl
cmp
mov
test
pusha
jl
in
add
and
popa
mov
das
jbe
aas
jg
and
mov
stos
mov
aad
sbb
lret
xor
je
jmp
dec
mov
mov
jmp
outsb
inc
add
pop
shll
dec
lods
mov
mov
pop
xor
jmp
scas
mov
pop
cli
dec
push
add
jo
fdivs
mov
scas
popf
mov
rol
xor
loope
cmpsb
ds
lock
icebp
ja
ja
inc
jp
jge
int
xor
adc
jno
test
adc
sti
or
call
xor
jge
sbb
mov
lret
sub
xor
mov
es
addr16
pop
lock
lds
pop
mov
inc
pop
adc
mov
lock
add
iret
mov
fcmovb
push
add
pop
cwtl
or
outsl
bound
test
popa
sub
mov
int3
mov
or
dec
mov
loopne
data16
sbb
mov
sbb
rorb
inc
sbb
clc
jl
push
cs
or
iret
mov
in
sbb
aam
mov
push
dec
add
push
or
mov
inc
out
or
mov
pop
mov
scas
jge
test
enter
mov
bound
pop
adc
mov
dec
jns
cmc
loope
push
or
cmp
lods
or
dec
inc
jb
dec
xchg
xor
fwait
cld
scas
pop
mov
gs
pop
mov
sub
adc
ss
test
fidivrs
inc
push
sbb
jb
icebp
pop
sbb
mov
mov
movsb
popa
xchg
cmp
rcr
xor
or
mov
sbb
sbb
mov
pop
push
loop
lret
inc
mov
or
sub
sahf
int
pop
pop
mov
ljmp
insb
das
ja
outsl
movsl
lods
and
neg
fists
jge
sub
je
adc
pop
push
in
ret
xchg
dec
sub
dec
xor
rcrl
and
std
insb
lret
ret
mov
cmpsb
mov
sbb
fsts
cmc
xchg
gs
ds
rolb
xchg
in
cld
jmp
ljmp
inc
pusha
and
jmp
ljmp
cld
js
push
out
dec
ds
pop
inc
mov
jmp
sti
fimuls
add
scas
mov
in
ret
jl
data16
insb
lcall
shrb
dec
inc
icebp
into
movsb
out
dec
dec
enter
sub
icebp
filds
into
sub
int
push
fcmovne
pop
cmc
push
jecxz
out
out
adc
loopne
mov
push
shrb
mov
std
mov
scas
bound
push
push
push
std
pop
add
addl
dec
jg
dec
clc
dec
repz
sub
push
sahf
outsb
loop
gs
dec
adc
sahf
out
push
xor
cs
jle
in
and
gs
fldcw
pop
cmp
add
testl
js
das
and
mov
xlat
cs
mov
iret
ret
mov
lock
dec
aam
cmp
jp
adc
adc
rclb
js
cmpsb
jp
mov
lahf
out
movsl
scas
hlt
out
mov
push
bound
fwait
lods
movsl
push
call
ja
push
mov
arpl
int
pusha
xchg
shll
ret
mov
repnz
xor
add
jmp
les
cmp
jle
sbb
push
add
shr
mov
push
stc
fwait
xor
mov
sub
inc
pushf
jnp
psllw
cmc
push
and
mov
pusha
pop
xchg
lcall
push
je
add
nop
data16
add
jg
stos
test
pop
dec
push
lahf
ja
stos
add
jge
fdivs
insl
mov
jno
enter
test
mov
sub
sbb
jecxz
lods
int
sub
mov
jo
insb
loopne
leave
ja
fisubrs
dec
jno
jl
sahf
ret
and
mov
add
xor
popf
cmp
test
pop
cmp
xor
fstpl
xchg
es
rol
xchg
jmp
ja
std
and
testb
or
sub
mov
ljmp
inc
mov
aam
dec
pop
mov
mov
je
inc
lock
or
stos
xchg
pop
dec
pop
push
adc
scas
push
push
lret
mov
sub
popf
mov
stos
movsl
sbb
cli
repz
pushl
adc
jb
push
rorl
in
add
pop
cmp
inc
pop
push
xchg
fcomps
loopne
aam
ljmp
lcall
out
dec
mov
scas
loopne
adc
cmp
shrl
push
mov
cmp
sbb
jg
mov
xchg
cmp
dec
jno
in
xor
imul
test
dec
int3
sbbb
pop
push
jl
icebp
xor
stos
ucomiss
xchg
mov
sub
jl
loop
outsb
nop
mov
out
fsubl
jmp
pop
or
iret
popf
mov
clc
imulb
fnstcw
sarl
mov
fdivp
sti
lock
jmp
scas
test
xor
rep
cmp
mov
lock
lret
add
jmp
and
push
adc
inc
sub
nop
ja
push
lock
fwait
sbb
lea
rcrl
pop
add
cmpsb
inc
xor
xchg
lret
fisttpl
stos
out
rcll
orb
enter
jae
and
js
mov
stc
push
mov
add
pop
test
sub
call
cmc
cmpsl
fcoml
sbb
lock
ljmp
or
mov
es
or
iret
jecxz
push
xor
inc
imul
jb
outsb
or
js
addr16
inc
insb
lret
mov
pop
adc
shrb
in
scas
mov
or
mov
repnz
xor
ficomps
das
pop
mov
adc
pop
les
mov
pop
leave
sub
jmp
test
cmp
test
aad
xchg
insb
cmp
sbb
mov
insl
jmp
movsl
ror
into
add
vpcomuw
add
les
add
ret
mov
loopne
mov
mov
loopne
insb
es
xor
mov
fwait
inc
rcrl
xor
mov
out
adc
lock
lock
sub
out
loopne
jle
push
jo
mov
cmpsl
inc
dec
mov
pop
test
out
scas
cwtd
loop
call
pop
add
mov
es
mov
mov
test
or
insb
and
mov
and
adc
test
mov
pusha
cmp
sbb
enter
ss
dec
out
inc
cs
insl
dec
push
fildl
sbb
inc
aas
mov
lock
add
pop
cmp
cmp
or
test
pop
cs
testb
fstpl
mov
dec
pusha
mov
loopne
sbb
orl
mov
dec
push
push
sarl
fsts
popa
ficoms
xchg
jbe
fisttpll
sbbb
pop
pop
sub
sbb
pop
mov
adc
sbb
xchg
jl
mov
roll
or
pop
adc
dec
sub
ja
mov
lods
and
mov
fsts
mov
mov
xor
sbb
lcall
sbb
adc
test
xchg
push
jns
xor
cmp
mov
test
mov
lock
in
subb
sbb
pop
sub
dec
push
inc
jb
insb
rorl
clc
dec
jg
fsts
mov
je
pop
stos
cmc
xor
iret
ja
fiadds
pop
iret
add
xchg
jns
lock
inc
xchg
not
adc
xor
inc
inc
inc
mov
je
inc
shld
out
fnstenv
test
mov
dec
roll
repnz
out
cs
hlt
psubb
inc
in
aaa
cmp
lret
daa
aam
imul
inc
jecxz
divb
insl
push
frstor
repz
cltd
dec
dec
pop
xor
sbb
push
sbb
leave
adc
lcall
mov
sub
inc
pop
push
mov
std
test
lods
std
inc
cmp
pop
lods
add
js
sbb
sti
mov
pcmpeqb
je
imul
xor
in
insl
and
push
imull
or
inc
testb
test
sub
adc
lcall
mov
scas
int
std
insl
mov
xor
pop
addr16
push
adc
mov
jae
inc
mov
xchg
jge
jl
mov
test
fstpt
and
ss
or
cwtl
jmp
loope
or
mov
dec
adc
cmp
and
and
in
mov
daa
out
inc
push
mov
das
dec
icebp
jbe
cmp
xchg
sbb
jno
jmp
adc
ljmp
icebp
jmp
xor
adc
ret
adc
ret
cmc
lea
inc
pop
aad
scas
push
jo
push
jle
lods
jle
mov
adc
loope
xlat
int
filds
shrl
push
sub
in
adc
dec
jmp
push
sub
push
idivb
in
push
cmpsl
pop
lahf
mov
imul
fldcw
inc
inc
jae
ds
jnp
lods
fprem1
mov
sbb
jno
fdivl
push
mov
pop
out
mov
jnp
xchg
jns
pop
insl
dec
inc
out
out
adc
or
aam
iret
mov
loopne
scas
pop
imul
test
mov
dec
xlat
pop
leave
aad
jns
mov
push
mov
mov
inc
mov
inc
dec
nop
cmpl
and
out
loopne
xor
mov
je
daa
xlat
inc
push
cmp
and
add
and
xchg
nop
cmpsb
insb
daa
jbe
add
int3
in
lret
inc
jmp
popf
push
sub
shlb
insl
int3
loopne
push
push
mov
ds
sbb
cmp
fs
cmp
lds
cwtl
pop
test
cmpsl
out
xor
jle
mov
sub
push
jae
jae
push
popf
xor
mov
shlb
mov
mov
mov
dec
arpl
dec
sbb
push
and
jp
pop
mov
lret
rcrl
aam
ljmp
je
std
mov
shr
pop
mov
jmp
mov
inc
and
and
cltd
or
daa
pop
mov
inc
inc
fs
adc
pop
paddw
pop
iret
dec
mov
mov
xchg
mov
mov
hlt
mov
push
adc
jns
lret
and
add
js
inc
jo
fisttpl
pop
pop
xchg
cld
mov
enter
cli
xchg
push
popf
int
mov
pop
mov
push
pop
les
adc
loope
ret
dec
fimull
rcll
xchg
mov
outsl
lret
rep
aaa
dec
mov
pop
push
jbe
in
and
fsubrl
test
pop
loope
pop
inc
mov
adc
lea
fdivs
stos
sbb
test
ss
xor
shrb
pop
xlat
int3
jle
test
icebp
clc
jmp
loop
jl
fistl
fstl
adc
sub
repz
imul
outsl
out
daa
cmp
shrl
out
cltd
jae
jo
filds
or
xchg
sub
xlat
and
les
mov
aaa
into
and
adcl
sub
ret
mov
imul
cmpsl
imul
xor
orl
xchg
add
pop
fdivrp
adc
cvtpi2ps
inc
sahf
jo
enter
cmp
jae
adc
dec
push
lret
sarl
sbb
sbb
xchg
xchg
mov
jnp
mov
test
dec
mov
clc
mov
je
cmpsb
ljmp
rcrb
mov
jl
je
fs
sub
cmp
aaa
rcll
jnp
out
dec
mov
sbb
pop
sub
jb
test
jne
adc
insl
pop
mov
loopne
outsl
neg
ret
mov
xchg
cld
fisttpl
call
add
mov
sub
dec
ds
clc
outsl
bound
std
mov
loop
test
jle
enter
das
jne
or
push
jns
cmpl
movsl
lods
in
cmp
das
dec
jae
shl
xor
scas
ds
mov
call
fcmovnbe
mov
fldl
jecxz
or
fnsave
in
pop
movsl
and
in
dec
xchg
cmpsb
sbb
enter
xor
xchg
cmc
pop
outsb
pushf
cwtl
ret
and
imul
gs
pop
inc
daa
dec
sbb
movsb
xor
pop
jo
imul
sbb
push
mov
push
pop
xor
ret
pop
inc
and
inc
push
arpl
mov
aam
add
jne
in
lock
roll
fwait
xchg
mov
mov
cmpb
pushf
mov
pop
cltd
inc
movsl
jno
xor
pusha
int
cmpsl
jg
jmp
push
or
scas
mov
jle
daa
mov
or
iret
xchg
push
xchg
out
push
jb
xchg
fnsave
adc
iret
xor
aas
fistpl
cmc
push
mov
pop
sub
jg
or
adc
les
inc
aas
dec
ret
clc
clc
nop
rol
jl
or
add
add
mov
or
icebp
shrl
jnp
fsubrl
add
push
movsb
xchg
sub
sti
sub
fwait
shll
mov
xchg
mov
loopne
mov
rcll
push
insl
cmp
add
sub
add
faddl
cmpsb
cmp
insl
jns
aaa
test
xchg
inc
push
loopne
test
adc
repz
out
call
mov
jae
add
and
adc
dec
fildll
mov
xor
jbe
fnstsw
loopne
mov
cmp
cmp
in
sbb
dec
jo
and
hlt
dec
xor
jne
stos
add
mov
js
inc
movsb
in
roll
or
xchg
repnz
mov
sbb
jg
sahf
icebp
fcmovnb
call
dec
hlt
add
insl
lcall
or
icebp
mov
inc
jg,pn
sub
sbb
cwtl
xor
loop
iret
lahf
sar
sub
lret
jo
sub
pop
xchg
mov
popf
call
daa
xchg
in
fs
inc
pop
ret
mov
dec
scas
fstl
cs
inc
bound
repz
lahf
cmp
shr
pop
mov
jb
aas
in
sub
mov
scas
test
pop
push
negl
xchg
cmp
pusha
adc
lahf
and
shr
cmp
sbb
movsl
or
es
adc
mov
lcall
add
movsl
lcall
push
mov
in
push
dec
sbb
dec
xor
loope
cmp
mov
mov
int
or
hlt
cmp
jmp
sub
mov
outsl
and
jnp
mov
xchg
orb
outsb
fdivs
icebp
dec
mov
lea
clc
add
shll
lahf
movsb
icebp
sbb
ja
pop
jmp
jno
jns
lds
cmp
push
pminub
inc
int3
sub
push
ljmp
and
jae
cli
adc
cmp
jbe
aas
lret
or
repnz
dec
xlat
aaa
mov
cmp
mov
xchg
mov
push
mov
jo
cmp
mov
mov
push
pop
lock
out
sbb
loope
cmp
neg
push
es
ret
lret
push
and
rclb
ljmp
pop
aad
ret
mov
adc
adc
push
mov
sarl
xchg
xchg
leave
repz
ja
dec
aas
ljmp
shrb
cld
cmp
cmp
and
sub
inc
sti
lret
movsl
test
jno
cs
inc
movsl
cmp
mov
nop
cmp
dec
mov
dec
xchg
lea
aam
movsl
inc
ror
sahf
lock
and
push
daa
iret
xchg
pushf
scas
call
push
dec
xchg
pop
mov
int3
sbb
bound
push
rclb
loopne
sbb
lahf
outsl
pop
add
icebp
mov
in
mov
jmp
and
cmp
sub
les
sub
xchg
inc
out
pushl
push
sbb
pop
int3
lds
jb
nop
lret
or
cmp
aam
pop
fs
xor
ficompl
ja
in
shr
xchg
jl
test
sbb
push
loop
fbld
loop
outsb
sti
jns
in
jo
es
jne
stc
enter
lmsw
push
filds
mov
inc
and
mov
into
cmp
jbe
das
adc
arpl
cmpsb
clc
or
xor
outsl
cwtl
mov
jp
loop
xor
cmc
mov
sbb
mov
js
cmp
outsb
inc
int3
mov
inc
adc
jmp
les
push
fsubs
aad
sub
cmp
push
into
shrl
es
lret
clc
mov
pop
clc
inc
adc
inc
or
insl
sub
mov
xchg
cmp
pop
push
dec
lds
int
push
dec
movsl
lret
in
rol
mov
out
test
aam
popf
push
mov
xchg
jle
pop
xchg
sbb
pop
push
push
pop
les
push
pop
lahf
push
cmp
call
push
cmpsl
cld
js
mov
cmp
or
jle
cli
aad
mov
leave
push
jno
lcall
xchg
push
xchg
cli
mov
repz
mov
push
jae
sti
and
popa
int
mov
mov
daa
push
test
scas
fbld
cltd
gs
add
add
sub
fcomps
inc
insl
pop
ss
sub
int
mov
adc
popf
add
fstpl
cmc
repz
inc
xor
adc
mov
lret
ret
push
xor
xchg
xchg
jle
push
bnd
mov
pop
test
subb
dec
aaa
push
ja
repnz
and
iret
imul
shl
dec
in
sub
es
mov
push
mov
shlb
inc
lahf
xchg
fsubl
dec
mov
adc
inc
mov
xchg
cs
or
mov
leave
add
mov
loopne
sbb
arpl
lret
test
ret
push
dec
cwtl
jecxz
and
sub
sbb
stos
and
push
cmp
xchg
sub
inc
jns
mov
aas
push
jmp
sahf
mov
push
dec
jnp
cmp
pop
ja
mov
mov
mov
lret
jns
jle
stc
sub
out
cmp
push
lahf
sahf
mov
stc
cmp
addl
dec
repnz
jno
xor
mov
jbe
xor
push
out
sbb
dec
out
imulb
dec
jne
shll
shll
jbe
aaa
into
xorl
jae
out
je
pop
addr16
in
mov
ret
xorb
vsqrtsd
push
inc
cmpsl
push
push
xor
aad
call
xchg
xor
testl
pop
clts
ljmp
push
mov
fisttpll
adc
repz
jg
adc
movsl
jbe
mov
jle
lea
mov
sahf
sub
rcrb
hlt
cmp
jg
imul
jmp
test
sbb
mov
xchg
push
mov
addr16
adc
loop
test
jb
jno
dec
and
xor
shl
inc
scas
cli
icebp
pop
stc
mov
jg
xchg
lods
adc
pop
ficoms
cld
imul
ret
push
or
jle
xchg
xchg
test
scas
jecxz
hlt
add
lret
jle
popf
lret
add
sub
test
sub
loopne
fwait
push
leave
cs
pop
enter
shrl
shl
lea
stos
or
push
xlat
fwait
stos
mov
adc
out
cmpsb
cmp
push
sbb
mov
into
fmull
das
jg
pusha
or
test
mul
dec
mov
mov
jno
fbld
adc
and
ljmp
adc
idivb
sarb
push
popa
dec
inc
out
mul
in
movsl
cmp
fisubs
sbb
sub
loope
sub
pop
pushf
mov
pop
and
and
dec
dec
ds
mov
dec
lret
repz
ret
jae
and
das
lret
in
adc
cmp
sbb
xor
js
jg
inc
aaa
movsb
xchg
or
daa
or
dec
mov
bound
in
and
adcb
into
clc
cli
add
fsts
lods
fnsave
xchg
mov
inc
insl
mov
jl
in
mul
fwait
insb
aas
sti
pop
orb
jp
pop
cli
mov
sub
mov
sbb
movsl
mov
dec
popf
and
dec
and
imul
js
push
fisttps
and
cli
fs
lcall
pop
pop
je
cli
std
test
in
push
rcrb
mov
pop
push
or
in
rclb
inc
lcall
adc
add
jge
ljmp
enter
sbbb
out
or
pop
xchg
jae
sbb
stos
lret
fsts
int3
into
push
xor
ret
aad
dec
cmpsb
fdivp
xor
arpl
out
outsb
cmpsb
or
insl
lcall
xchg
mov
pause
mov
push
sub
std
mov
clc
xor
jmp
insl
jmp
imul
mov
lods
mov
outsl
pop
mov
dec
shll
jo
cmp
in
sub
sbb
or
push
mov
daa
and
and
call
cmp
jg
cmpsl
pop
pop
iret
jg
icebp
jp
clc
and
ret
ret
stc
adc
ss
in
push
and
shrl
sbb
pop
xor
dec
nop
and
dec
popf
pop
stc
xchg
stos
add
push
cmp
push
lret
push
aas
pop
push
lods
arpl
mov
mov
jnp
pop
pop
gs
cmp
repnz
xchg
sbb
inc
inc
cmp
mov
subl
not
ficomps
cmp
popf
sub
mov
dec
dec
inc
jne
push
cwtl
fcoml
xchg
sub
arpl
inc
into
ficoml
cmp
bsr
stos
stc
jecxz
jmp
addr16
into
add
pop
cmp
push
pop
mulb
lock
adc
inc
dec
adc
fdivrp
cmp
iret
push
je
shrl
ljmp
inc
lahf
int
inc
aas
mov
call
dec
adc
mov
lds
icebp
pop
lret
jle
icebp
lds
mov
jns
test
pop
subl
icebp
gs
adc
or
lcall
daa
lods
inc
rclb
xor
and
cmp
add
sub
jmp
lret
sti
xor
mov
push
stc
mov
mov
mov
inc
pop
jnp
inc
pop
pop
popf
hlt
cmp
or
sbb
hlt
mov
xlat
mov
jno
mov
push
movsl
add
lcall
dec
ret
adc
pop
mov
dec
or
add
out
dec
nop
stos
sbb
pop
xor
stc
loop
int3
push
sbb
out
xchg
iret
lahf
adc
bound
sub
fmulp
mov
dec
lret
fdivrl
sbb
test
pop
jecxz
sahf
xor
push
push
mov
fstl
out
inc
pusha
sarb
lods
outsl
lret
pop
xchg
ds
push
push
out
xor
sbb
mov
push
or
shlb
add
sub
mov
mov
fwait
hlt
pop
dec
xchg
lea
sbb
les
pop
mov
cmp
sbb
adc
xchg
and
bound
int3
and
repz
or
and
xor
jnp
shlb
xchg
out
out
dec
pop
mov
cmp
inc
iret
std
out
sbb
data16
lret
pop
jns
mov
adc
cltd
add
jecxz
incl
inc
fwait
shrl
inc
inc
cmpsl
aas
jg
jae
les
push
adc
xchg
sub
out
stos
sbb
jae
repnz
add
das
lret
popf
lds
shll
xchg
nop
orl
and
mov
rolb
push
push
jnp
xor
mov
ret
adc
clc
add
push
fdivl
cmp
mov
add
fnsave
add
push
jg
xor
push
push
lcall
out
or
movsl
or
insb
jae
pop
push
mov
repz
ret
pop
xchg
aas
fisubs
rorb
fwait
xchg
fwait
sbb
xchg
dec
mov
fnstcw
test
lea
adc
sub
fistps
ja
dec
mov
or
jns
aad
mov
inc
dec
pusha
xchg
shrl
jns
sbb
mov
jge
push
sahf
outsl
xchg
mov
push
jecxz
rolb
and
or
add
mov
and
stos
pop
xchg
and
add
stos
jg
xchg
xchg
cmc
mov
ret
lds
inc
or
xor
xchg
adc
add
jle
and
lret
sub
lods
pop
jp
dec
icebp
and
aas
cli
and
mov
push
ja
ja
stc
cmc
lods
clc
sbb
mov
rcrb
inc
mov
call
fmull
xor
dec
mov
insl
cmp
pop
inc
fs
les
in
in
mov
cltd
cwtl
popa
mov
adc
ss
mov
insl
push
and
aas
mov
andb
mov
mov
fs
adc
out
ss
jb
push
xchg
mov
ja
mov
ret
in
or
mov
or
outsl
xor
mov
add
push
insl
mov
or
inc
fdivl
sbb
and
movsl
xor
test
je
cmc
cmpsl
adc
lcall
mov
jb
adcb
neg
nop
enter
mov
xchg
test
loop
popf
dec
js
push
orb
nop
add
imul
xchg
xor
call
stc
jbe
sahf
ret
fwait
inc
stos
mov
xchg
fnsave
or
or
jg
push
push
into
xorb
in
add
cmp
dec
arpl
scas
xor
mov
test
icebp
xchg
pop
inc
jmp
sub
loope
test
loopne
aaa
mov
scas
jp
in
or
fisubrl
sti
out
scas
mov
sub
xchg
sar
test
mov
mov
mov
sub
mov
inc
jmp
scas
sbb
or
icebp
stc
pop
negb
out
sub
cmc
sahf
loop
lret
push
or
mov
sub
xchg
addl
cmp
je
jmp
jmp
inc
push
pop
in
xor
enter
push
mov
js
test
test
les
sub
lret
lods
outsb
or
or
repnz
sub
js
jecxz
shl
orb
out
in
lds
push
xor
mov
mov
mov
jns
inc
mov
testb
mov
cmp
xchg
stos
xchg
mov
insb
mov
add
leave
adc
add
shrl
shr
xor
bound
insb
jle
dec
out
add
mov
ss
add
jbe
xchg
repz
iret
loopne
in
inc
or
cld
dec
dec
hlt
push
repz
or
int
lods
int
push
rcrl
xchg
stos
xchg
xor
rcrl
mov
insl
fsts
adc
out
jo
ja
sub
or
mov
shll
mov
sbbl
push
leave
xchg
ljmp
jge
sub
xchg
stos
stos
ret
dec
into
stc
sub
mov
push
xorl
fcmovbe
mov
movsb
cltd
dec
xor
negl
xchg
outsl
lds
imul
out
jnp
outsl
cmp
stc
iret
push
cs
dec
sub
jbe
mov
xchg
aam
mov
fstpl
daa
loopne
jae
sub
sub
cmc
mov
xor
ror
insl
out
test
gs
addr16
ljmp
lret
mov
push
xchg
fists
inc
mov
sarb
jne
std
loope
push
adc
stos
mov
cmpsb
xchg
dec
dec
inc
int3
push
xor
xchg
and
repnz
ss
arpl
repz
lret
enter
xchg
or
mov
pop
mov
mov
xor
mov
xor
pop
gs
outsl
sti
mov
jnp
into
and
cmp
lods
pop
decb
xor
pop
pop
add
stos
repz
out
jl
dec
xchg
in
dec
sub
out
cmpsb
imul
stc
sbb
xlat
ljmp
aaa
pop
fmul
sub
adc
insb
outsb
fistpl
lret
inc
fiaddl
out
pop
mov
and
pop
loopne
stos
inc
sbb
movsb
xor
js
ds
xchg
jp
rorb
add
push
cmpsl
pop
pop
xchg
aas
js
fcoml
xlat
pushf
push
into
je
push
out
int3
or
dec
sub
popa
aaa
imul
loopne
in
test
stc
sbb
jno,pt
es
dec
mov
arpl
repnz
jecxz
mov
inc
add
ds
gs
xchg
xchg
mov
mov
rcll
cmp
push
dec
mov
inc
xchg
lods
mov
gs
inc
inc
xchg
or
fdivrs
jbe
and
test
cmp
mov
inc
or
lock
dec
pushf
lahf
lret
stc
and
imul
add
syscall
fnstcw
stc
outsb
lea
rorb
leave
imulb
stos
sub
bound
mov
push
int
jae
scas
je
and
mov
push
shlb
jmp
xor
daa
popf
jmp
mov
push
xor
in
test
push
add
jne
sbb
aam
rcrb
test
rcrb
aaa
outsb
outsb
pusha
push
ret
fildl
push
pop
lds
mov
in
or
jecxz
or
test
std
sub
into
cmpsl
insb
cmp
pop
push
pusha
mov
jecxz
inc
lock
ret
test
push
adc
insb
sbb
test
fwait
aad
imul
vucomisd
sub
cmp
inc
sti
mov
push
jo
pop
insb
les
enter
cli
in
pop
mov
adc
pop
mov
xlat
xor
jb
shlb
mov
add
cmp
push
cltd
int3
lahf
mov
mov
add
cld
lcall
sub
inc
repz
fstpl
shrb
dec
mov
stos
sbb
rorb
xchg
aas
into
insb
and
fdivrl
dec
icebp
dec
sbb
dec
mov
insl
out
push
sub
xor
ret
inc
xor
repnz
add
push
repz
testb
fnsave
shl
fstl
jge
pop
jp
dec
mov
push
sub
aaa
mov
loop
xchg
mov
xchg
js
cs
mov
lcall
inc
imul
ljmp
cld
lods
jb
pop
stos
push
jbe
cli
outsb
mov
xchg
test
add
data16
cmp
xchg
pushf
xchg
sbb
push
cmp
mov
lcall
jl
mov
xchg
scas
mov
add
sub
jo
lahf
mov
andb
stos
jge
popa
aas
ror
xor
lock
movb
lock
xor
in
mov
push
fisubrs
pop
mov
stos
pop
add
mov
movsl
into
sbb
adc
loopne
dec
repz
jg
inc
jns
nop
iret
xor
aas
cmp
cltd
sub
fchs
and
or
fimuls
xchg
scas
fimuls
add
or
clc
sub
sbb
divl
pop
mov
sub
mov
adc
lcall
outsb
pop
push
ds
insb
test
mov
fiaddl
iret
jnp
fwait
pop
addr16
jmp
mov
push
dec
mov
dec
mov
and
mov
ds
mov
adc
jg
sbb
mov
dec
push
or
pushf
cmp
cmp
cmp
and
mov
ret
shlb
mov
mov
shlb
cmp
pusha
inc
lods
jle
push
jo
push
sbb
push
pop
xor
cld
dec
sub
in
repnz
sub
inc
mov
scas
xor
mov
adc
loop
iret
popf
inc
dec
stc
data16
mov
jns
jecxz
insl
push
or
mov
ja
pop
inc
mov
std
mov
aam
jo
insb
pop
adc
into
stc
popf
mov
cmpsb
sbb
ret
arpl
dec
inc
add
pop
dec
push
nop
ret
insb
xchg
insl
sbb
push
fimull
xor
dec
jb
sbb
inc
mov
loopne
adc
sub
pop
push
int
xchg
ret
shl
popf
adc
lock
shl
aaa
push
cmp
xor
sub
rorb
mov
cld
sbb
push
add
push
and
jl
shrl
addr16
dec
mov
out
and
xchg
sti
iret
insb
dec
stc
push
pushf
xor
enter
mov
loopne
sahf
cltd
ret
subb
cmp
fs
cmp
push
daa
leave
mov
fld
mov
int
lds
or
push
pop
dec
imul
pushf
mov
add
xor
pop
mov
push
fldenv
mov
mov
jecxz
push
add
mov
xchg
dec
xchg
cmc
ret
outsl
clc
mov
rorl
rol
mov
cmpsl
sbb
popf
inc
cbtw
inc
enter
les
and
inc
mov
cwtl
cmpsl
popf
cmp
lcall
cmp
in
and
mov
mov
ret
dec
out
adc
ficomps
sbb
xlat
cwtl
lcall
mov
loop
cmp
push
inc
mov
insl
mov
mov
xlat
mov
sub
lcall
mov
cmpsl
sbbl
jno
sub
dec
adc
hlt
push
lret
adc
je
mov
sbb
or
mov
sbb
xor
add
out
or
jae
jbe
adc
push
mov
mov
mov
cmp
sbbb
mov
adc
imul
mov
in
fmull
mov
test
scas
in
mov
lcall
add
inc
jae
dec
mov
and
mov
pushf
mov
cmp
xor
xchg
pop
push
push
pop
ret
xor
int
leave
jb
push
jb
sub
or
lods
pusha
sub
xchg
sbb
and
or
lea
pop
test
adc
dec
add
xchg
xchg
cmpsl
and
test
cmp
and
sbb
jne
jo
xor
push
mov
shll
inc
jmp
mov
nop
leave
arpl
xchg
nop
pop
aam
and
add
sbb
or
push
stos
in
xchg
repnz
mov
mov
mov
inc
mov
jnp
int3
xchg
std
popf
xchg
rcll
add
push
ja
inc
scas
in
or
dec
roll
xor
mov
inc
in
jnp
jne
sub
sahf
ds
sbb
jp
lcall
std
sbb
push
repz
imul
xor
ja
ds
jnp
cmp
inc
cld
cld
js
or
or
test
cmp
push
jo
cmp
inc
jae
es
bound
mov
xchg
mov
xchg
mov
lret
outsl
sbb
addl
jo
pop
aad
dec
jle
xchg
push
mull
jp
and
and
fimuls
and
mov
fcomip
test
out
ss
xchg
js
and
add
mov
add
inc
out
sbb
and
xor
jmp
mov
inc
fidivrl
sub
xchg
insl
jmp
insl
mov
inc
cmpsb
jb
mov
inc
and
mov
mov
xchg
dec
jno
sub
cld
xchg
sarl
dec
sub
adc
jb
aam
xchg
lahf
in
adc
lahf
pushf
jae
sbb
into
jbe
insl
mov
jl
das
inc
inc
jmp
insb
or
mov
bnd
loopne
ss
test
test
cltd
cmp
hlt
rol
in
xchg
mov
out
mov
cmp
inc
and
dec
icebp
dec
pushf
add
rolb
testl
nop
call
cmovp
rcll
jb
mov
out
xchg
iret
stos
scas
or
pop
dec
dec
loop
or
jecxz
lods
mov
jmp
clc
addr16
mov
mov
inc
pop
add
icebp
in
mov
sbb
call
and
sar
sbb
fwait
jecxz
sbb
or
xchg
sti
stos
push
loopne
imull
in
ds
ret
mov
leave
jae
or
cltd
lock
mov
ss
jl
cltd
xchg
mov
idivb
jp
or
pusha
roll
or
sub
pop
cld
add
stos
cmpsl
pop
cmp
inc
inc
dec
pop
cltd
push
mov
jl
and
out
pop
cli
cld
jmp
mov
or
outsb
xchg
mov
sahf
mov
das
mov
pop
bts
fidivs
insb
xchg
mov
dec
lahf
xor
jae
xor
cmp
repnz
add
insb
mov
pop
scas
in
pop
cli
cld
out
out
sub
into
aad
inc
cwtl
pop
push
call
sbb
repnz
data16
jbe
and
push
and
roll
mov
andl
shrl
mov
loop
push
jl
push
sbb
mov
mov
les
xchg
cld
mov
mov
mov
sahf
mov
addr16
jns
push
lcall
pushf
leave
cmpsl
sahf
imul
in
pop
inc
or
pop
lds
and
rolb
shll
xlat
jnp
dec
mulb
test
cmp
in
adc
xchg
rolb
mov
jg
push
mov
pushf
in
push
and
aaa
aam
das
mov
lret
rcl
mov
inc
test
ja
inc
mov
xchg
fwait
dec
mov
icebp
push
das
arpl
jae
jno
xchg
adc
jne
xor
sarb
xchg
jne
add
mov
cwtl
or
cmp
jp
cmp
ret
xorl
es
sub
sbb
xchg
clc
xchg
stos
movsl
adc
push
imul
sub
pop
push
push
or
pop
aas
add
bound
add
in
cmp
repz
incl
sbb
sbb
xor
mov
dec
push
jns
jl
mov
sbb
sar
sub
mov
jge
test
inc
cwtl
cmp
xor
push
testb
cld
push
push
and
pop
ss
lods
add
arpl
and
push
sbb
xor
ss
mov
pop
mov
scas
dec
addr16
sbb
dec
xchg
es
push
fmull
ljmp
push
rorb
lock
ja
and
repnz
xchg
sti
pop
leave
jo
and
in
test
imul
add
push
push
lods
dec
inc
mov
je
mov
movsb
jl
mov
mov
push
aas
divb
and
and
xor
pop
adc
cmp
push
loop
movsb
jae
gs
addr16
daa
daa
roll
cmp
lret
jbe
cmp
dec
adc
into
push
shll
pop
ret
sub
mov
insl
xchg
push
cmp
adc
pop
fwait
scas
ds
in
daa
mov
es
pop
mov
jl
insl
pusha
lgs
mov
aam
pop
mov
sti
lods
cmp
or
jne
sbb
int3
mov
jnp
mov
mov
sbb
ljmp
imulb
push
inc
lahf
dec
bound
test
lret
mov
sbb
stos
movsb
call
push
adcl
addr16
fisubrs
mov
sbb
ficomps
pop
leave
push
pop
cmpsb
call
je
mov
out
push
popa
fs
xchg
das
mov
outsl
fs
fdivl
lcall
test
dec
mulb
into
jmp
mov
imul
in
mov
or
mov
mov
lock
test
jb
jns
ror
sbb
sahf
icebp
dec
loope
sbb
push
fstpl
inc
fisubs
loope
xchg
sub
xchg
mov
stos
ret
fwait
push
aas
or
lea
test
lret
or
cmp
mov
adc
lcall
jle
dec
fnstsw
lret
and
xchg
push
mov
and
xchg
fstps
mov
std
cmp
int
jmp
or
and
ljmp
lcall
or
push
adc
xchg
push
ja
inc
sbb
arpl
add
out
xor
and
test
sbb
lea
test
inc
cmp
jmp
push
adc
jo
push
adc
jmp
jle
rol
adc
xlat
xchg
pusha
jle
and
iret
cmp
sbb
push
lock
clc
imul
or
loope
mov
push
push
add
ljmp
cmp
incl
jmp
jbe
sub
test
data16
fs
das
mov
dec
mov
sub
repnz
push
insl
mov
inc
jp
aas
cmp
fcoml
pop
sti
push
test
or
mov
es
imul
call
lods
xor
mov
dec
add
insb
cmpsb
jecxz
les
push
lret
sub
andb
or
sbb
add
es
sub
in
fiaddl
movsb
stos
and
loop
and
aas
arpl
mov
inc
ficoms
orl
push
hlt
push
int3
sub
adc
sarl
dec
fidivrs
and
xchg
cmpsb
ficompl
addl
add
mov
or
dec
xchg
testb
pop
xor
inc
xor
mov
lahf
inc
lock
dec
dec
or
cltd
roll
outsl
cmp
mov
jae
lock
cwtl
bound
xor
out
sbb
add
mov
and
into
or
outsl
add
icebp
iret
cltd
lock
sbb
out
push
in
inc
or
out
lcall
mov
xor
and
inc
ljmp
sub
or
lds
or
mov
in
ret
mov
mov
pop
lea
cmpsb
arpl
sub
jnp
aam
xchg
pushf
es
popa
das
nop
mov
push
mov
test
aaa
cli
xor
pop
loop
adc
sbb
stos
pop
xor
out
inc
xor
sbb
mov
and
push
pop
mov
or
mov
testl
add
xlat
cs
mov
les
fcmovb
inc
sarl
dec
aas
add
mov
mov
nop
add
inc
xchg
push
pop
lret
mov
addr16
inc
and
lock
dec
jno
aad
mov
xchg
mov
call
lods
outsb
add
jne
mov
mov
xchg
cmp
in
mov
int
out
sahf
shrb
in
mov
cli
xor
in
ret
es
pop
pop
fldl
test
and
mov
movsl
adc
in
ss
pop
xor
ret
jnp
push
and
mov
add
lock
femms
fsubrl
aas
pushf
pop
or
dec
sbb
cmp
cmp
ret
popf
inc
popa
lds
mov
fs
scas
es
sub
shlb
add
aad
sub
scas
push
int
jo
scas
xchg
out
xchg
mov
push
pop
loop
mov
sarb
lds
sub
lock
leave
pop
and
or
sub
mov
lret
inc
gs
mov
sbb
mov
in
sbb
imul
mov
setbe
aaa
enter
mov
lods
in
jmp
mov
mov
inc
rcl
cmp
std
dec
cmp
mov
dec
add
pop
jbe
pop
and
fwait
mov
cmp
shlb
out
and
lock
aaa
stos
jl
popa
or
arpl
mov
fcom
or
test
mov
pop
fwait
adc
mov
movsb
pop
rcrl
cmp
mov
fcmovnu
out
mov
stos
cmpl
xchg
ds
jb
pop
or
js
divl
leave
arpl
fimuls
adc
cmc
fisubs
push
andb
ret
mov
xchg
cmp
or
cltd
scas
daa
mov
dec
je
push
repnz
mov
imul
mov
push
sbbb
cmp
sub
pop
dec
rcll
rcll
ljmp
iret
xor
sub
cs
cmpsl
sbb
push
shlb
std
xchg
xchg
cmp
cmpsl
mov
jnp
add
xor
test
negb
in
lods
lea
push
xlat
mov
leave
negl
aaa
je
push
pop
mov
mov
push
jo
dec
pushf
mulb
push
fdivrl
adc
pop
mov
sub
andb
lret
xor
mov
sub
pop
add
arpl
cmp
push
pop
add
movsb
inc
ljmp
xchg
testl
xchg
loopne
iret
lock
cmp
xor
mov
mov
insb
lret
cmc
fsts
xchg
clc
imul
xchg
push
lahf
pop
fldl
and
xorl
dec
mov
jmp
sbb
sub
push
hlt
adc
in
aam
inc
pop
xor
push
cld
lods
inc
xchg
add
or
push
adc
mov
mov
pop
loopne
jmp
cmp
arpl
cmpsl
data16
sub
fisttpl
cmpsl
inc
sbb
fwait
sbb
cmc
bound
stos
fldcw
bound
lcall
cs
sub
jo
mov
or
clc
cli
xor
jecxz
push
fcom
out
push
pop
aad
test
sti
aad
pop
jle
inc
push
jmp
push
mov
inc
jno
lds
sub
push
popf
test
adcb
test
bound
mov
push
xlat
lahf
in
cmpsl
lods
outsl
fsts
dec
cltd
shl
mov
nop
inc
sub
adc
adc
xor
or
arpl
mov
scas
jp
xchg
in
lods
fstpl
jae
fnstsw
ficoms
addb
inc
or
test
loop
jns
test
cs
test
pop
stos
fidivl
stc
rcrb
cmp
pop
xchg
cmp
push
out
inc
movsb
jecxz
pop
push
call
jmp
jb
ss
aas
lret
mov
in
push
test
adc
incb
pop
pop
or
or
mov
psrlq
mov
xor
outsl
jnp
xchg
dec
into
sub
xor
mov
inc
jne
jmp
scas
inc
in
out
test
or
xor
jb
inc
pop
and
xchg
clc
lret
pusha
xchg
stos
jmp
xor
jae
rorl
int
jbe
sbb
add
test
mov
in
out
imul
sbb
cmp
push
mov
sahf
and
mov
sub
push
in
fisubl
mov
data16
push
into
testl
lock
rcrb
fs
sub
jne
iret
pop
dec
inc
stc
stos
add
fidivrl
pushf
scas
add
sti
mov
addr16
ljmp
out
lods
mov
cmpsb
mov
push
loop
dec
xor
pop
je
popa
mov
lods
jle
mov
mov
enter
repnz
push
mov
ficoms
loope
in
jle
adc
mov
adc
in
mov
or
pop
cmp
xlat
ja
jbe
frstor
pop
mov
mov
sahf
push
inc
cltd
repnz
mov
sub
mov
test
or
lret
cmp
test
adc
pop
iret
ret
into
lods
mov
xlat
push
sub
fldz
or
xchg
sub
xchg
shll
cmp
imul
aad
mov
fidivrs
ficompl
xchg
repnz
mov
faddl
out
aaa
pop
xchg
ss
shr
dec
fdivl
cld
cmp
pop
pop
in
mov
or
andb
adc
inc
imul
mov
dec
fadds
clc
xchg
and
xchg
orb
adc
pop
inc
inc
stos
sahf
mov
mov
jnp
mov
xor
xchg
arpl
in
lds
and
rol
enter
pop
lcall
jecxz
or
xlat
pop
fstps
jno
shrb
scas
mov
cmp
movsb
outsl
or
push
jb
add
pop
into
cld
inc
aam
add
ss
push
and
ja
inc
daa
push
jecxz
xchg
jmp
insb
mov
or
cmp
in
push
jnp
notl
mov
mov
or
stc
fldl
xor
stc
hlt
sbb
add
and
adc
sbb
mov
add
ficompl
mov
adc
loope
sub
xor
push
lds
into
jno
push
cld
inc
pop
dec
loope
mov
imul
jne
daa
mov
push
sub
push
shrb
mov
fucompp
sbb
dec
jbe
ror
adc
mov
mov
add
stc
mov
xchg
test
sbb
dec
pop
aad
sub
jns
or
jno
cmp
push
push
rolb
pop
daa
test
mov
mov
mov
mov
fs
dec
or
repnz
pop
rcrb
push
dec
inc
jecxz
and
lret
out
dec
out
mov
add
shll
shll
push
ret
mov
xlat
stos
mov
dec
cmpsl
and
imul
jge
rclb
sub
add
push
loop
jno
mov
fstpt
sbb
sub
shrb
cmpsl
iret
cltd
inc
mov
cmp
sub
sbb
jecxz
or
lods
ret
sub
mov
and
mov
pop
xchg
iret
or
lcall
jno
aas
sbb
sbb
or
xchg
data16
mov
lret
push
and
cmc
jbe
dec
sar
or
jb
jb
loop
loope
jmp
cmpsb
push
sbb
sahf
xchg
xor
scas
mov
pop
fwait
pop
hlt
or
cmp
inc
add
and
filds
xor
stos
mov
sub
daa
rcrb
movsl
lods
xor
jo
ja
jb
pusha
decl
mov
dec
cmp
ret
xor
repz
push
xchg
and
or
add
lcall
jecxz
add
jae
stos
rcrb
inc
push
xor
or
in
lods
jg
mov
pop
rclb
loop
push
js
mov
adc
pop
jp
out
imul
cli
push
xor
fstps
inc
dec
pop
das
out
pushf
jns
and
arpl
and
jge
lret
shrb
pop
outsl
jle
rcll
mov
push
add
addr16
jmp
mov
pop
mov
mov
pop
pop
js
repz
cld
xchg
cmp
and
shll
ss
in
cs
pop
rcrl
or
fbld
mov
mov
push
push
fldt
add
ret
sbb
jns
jbe
or
scas
jle
mov
xor
mov
and
cmp
nop
pushf
inc
push
addr16
adc
out
mov
sahf
sar
test
call
mov
and
addr16
imul
pop
xchg
lock
jmp
xor
sub
xlat
cs
cmp
fistl
xor
jne
arpl
fisubrl
test
fs
xchg
sub
cmp
mov
inc
imul
inc
ret
hlt
test
ret
ljmp
inc
lret
fsubp
dec
hlt
popf
cs
pop
cmp
pop
ret
icebp
dec
jecxz
stos
gs
and
inc
rcrl
pop
inc
add
or
sub
repz
and
jns
add
adc
xor
adc
lods
cwtl
filds
dec
jmp
push
js
fcmovu
mov
cmpsl
xchg
mov
aaa
into
sub
cltd
inc
es
nop
mov
dec
sub
xchg
cmp
cld
insl
push
mov
add
arpl
int3
fsubr
mov
lds
fcoml
xchg
sub
ja
stc
cmp
and
push
jecxz
mov
dec
xchg
cmp
in
add
loopne
cmc
cmp
testl
fdivrp
lods
mov
cmp
xchg
lods
jmp
shlb
mov
mov
and
mov
sbb
mov
jp
sub
mov
lock
jmp
push
sti
mov
jne
adc
inc
and
jge
and
cmp
lret
mov
push
loope
pop
xlat
fists
fwait
push
mov
stos
popw
cld
ljmp
and
out
jmp
mov
ljmp
jo
cld
lods
lods
mov
out
mov
lcall
jne
testl
scas
mov
add
xchg
dec
ret
jo
in
fildll
scas
pop
xchg
and
scas
loop
fsts
aam
daa
inc
jbe
scas
jno
or
mov
movsb
mov
jno
mov
call
in
pop
in
ljmp
mov
shlb
xor
out
rcr
or
inc
cs
mov
jae
iret
inc
xchg
hlt
pusha
xchg
inc
ret
scas
pop
ja
jno
jle
mov
cmp
jmp
add
mov
cli
xchg
mov
and
pusha
nop
sbb
add
data16
leave
xor
std
jo
fs
mov
rorl
cmp
xor
sahf
add
loop
xchg
xor
insb
ljmp
adc
push
sbb
pushf
cmpsb
out
je
cmc
jmp
leave
pop
mov
notl
sbb
or
lea
scas
bound
orl
rcll
fisubrl
mov
imull
sbb
jp
je
fs
ret
mov
mov
pop
and
cmpsb
add
stos
pop
imul
fdivl
jns
fcomip
push
nop
push
mov
push
sarb
pop
add
mov
in
xchg
mov
mov
sub
xor
push
pop
cld
dec
sbb
shl
adc
mov
into
pop
mov
cltd
inc
jg
into
mov
dec
push
rorb
mov
cmp
pop
mov
pop
data16
icebp
jecxz
ja
sbb
xor
jmp
xor
fildll
sahf
mov
inc
dec
imul
sub
xor
adc
and
cmp
sahf
and
stos
in
xor
and
sbb
stos
jecxz
insl
mov
fstpt
fimull
es
lret
jmp
jg
sub
fisubs
ret
inc
rorb
jnp
push
pop
jbe
mov
mov
pop
into
dec
adc
int3
mov
inc
ret
cltd
jne
mov
or
inc
sbb
dec
aam
mov
jb
jae
mov
mov
lods
push
clc
lret
jne
pop
mov
adc
je
sbb
pop
cld
aas
ljmp
mov
dec
test
cmp
push
out
mov
shrb
std
int
out
adc
and
mov
xchg
or
es
sub
and
or
add
nop
clc
das
fcoml
hlt
ret
push
cmp
fnsave
or
or
and
dec
cmp
xor
pusha
xchg
data16
icebp
sub
mov
out
stc
dec
daa
aas
insl
xor
sti
push
dec
inc
lds
mov
daa
dec
mov
push
out
inc
jp
xchg
lahf
lahf
sub
and
jmp
jmp
out
lret
mov
push
pop
sub
lods
test
pusha
cmp
stc
out
clc
sub
inc
lcall
inc
js
cmp
out
sahf
and
cmpsb
pusha
gs
outsb
mov
mov
out
jge
dec
daa
inc
mov
jmp
xor
and
cli
fs
inc
out
jle
lahf
addr16
push
and
pop
adc
in
leave
ficomps
xchg
xchg
call
and
inc
push
xor
imul
push
add
sbb
sahf
sub
pop
into
insb
lods
in
call
shrl
or
outsb
popf
in
mov
dec
fldt
inc
in
jl
mov
nop
sbb
adc
hlt
ret
xor
fsubs
imulb
popf
xor
fidivl
lahf
fwait
pop
test
pop
mov
nop
mov
mov
test
mov
and
jnp
movsl
test
mov
and
sbb
sub
sarb
and
pop
pop
pop
cvtdq2ps
jbe
lock
add
data16
scas
sbb
cmp
incb
push
mov
sub
or
pop
jmp
dec
shl
stc
out
loop
push
mov
xor
adc
iret
insl
in
popf
sbb
in
loope
and
lahf
in
fcmovb
ret
cmp
jns
cmp
inc
and
inc
cmp
pushf
frstpm(287
add
ja
pop
test
pushf
test
stos
neg
cmc
push
cld
jne
inc
pop
out
mov
cmc
lods
jne
xchg
xchg
or
cmpsb
in
cmc
arpl
popl
xor
mov
scas
jae
push
in
insl
and
cmpsl
xor
mov
jne
dec
cmpsb
jno
pop
outsb
jg
mov
dec
add
movsb
xchg
jne
loopne
jecxz
and
mov
pop
pop
orl
dec
mov
ror
adc
adc
and
mov
std
mov
scas
loopne
and
neg
dec
mov
stos
pop
sub
insb
fildll
aas
push
sub
and
or
cmp
repnz
adc
xchg
sub
scas
pop
cmp
sub
xchg
dec
adc
cmc
adc
cmp
aas
push
hlt
mov
push
imul
cld
out
daa
inc
call
into
sub
jnp
push
sub
sub
fmul
xchg
jecxz
outsb
into
add
rorb
sub
jbe
adc
popf
mov
out
mov
int3
jp
insl
mov
xchg
mov
in
ja
jo
pop
adc
sahf
es
sbb
mov
mov
test
xchg
rcrb
rcrb
ja
cmp
andb
int3
aas
jno
jge
lcall
or
inc
mov
lock
jnp
lods
mov
jl
fcompl
lods
aad
xlat
arpl
fcomip
and
lret
push
in
mov
test
mov
in
push
loope
ja
or
mov
stos
mov
shll
scas
jo
rclb
clc
jae
scas
sbb
mov
mov
sbb
cmp
mov
sahf
fsubrl
fld
dec
int3
aad
and
mov
leave
lds
shll
sahf
jmp
pop
cmpsl
xchg
mov
push
jecxz
lock
or
mov
fldcw
mov
sub
into
xor
aam
negl
idivl
sub
lret
or
inc
nop
es
mov
add
jge
out
mov
int
jecxz
mov
jl
mov
popa
sbb
sbbl
leave
cmp
push
cmp
xchg
sub
inc
jecxz
pop
jmp
jne
xchg
pop
ds
outsl
aaa
sub
lcall
divb
cli
jle
sbb
stc
dec
dec
sbb
cli
cmp
xor
jmp
pop
call
pop
mov
in
sbb
int
cltd
xlat
mov
sbb
push
sbb
mov
fucomip
xor
in
notb
push
add
cli
stc
cmp
in
jmp
subb
adc
scas
ljmp
dec
sub
dec
das
jmp
xor
or
js
jb
popf
ror
arpl
and
test
cwtl
mov
inc
push
jg
cld
jl
cmp
popa
cmp
inc
adc
pop
mov
movsl
js
jg
rcll
pop
mov
mov
mov
mov
xor
inc
loope
push
mov
cmpsb
adc
mov
sbb
test
mov
push
pop
in
fldcw
sahf
js
xor
stc
sarb
jecxz
mov
cli
push
sub
cmp
xor
jo
cmp
fwait
or
out
icebp
int3
sub
inc
fs
sbb
cmpb
mov
sbb
jae
inc
cmp
dec
xor
cltd
pop
push
stos
test
xchg
lahf
or
inc
scas
stos
jl
inc
loop
jl
and
push
clc
ret
cmp
stos
adc
int3
xor
and
cmp
mov
nop
mov
pop
cmp
divl
es
jge
repz
pop
add
into
sbb
dec
std
mov
pop
jb
add
cmp
add
js
and
jb
push
ret
fucomip
into
pop
xchg
add
mov
push
mov
sub
inc
fnclex
push
dec
mov
sub
dec
lahf
mov
mov
pop
sbb
sahf
jmp
mov
les
pop
outsb
jg
sbb
or
int
adc
rcr
mov
ret
or
lea
dec
adc
test
arpl
fstl
fists
cld
or
push
jmp
adc
push
sub
adc
mov
inc
cmp
movsb
jmp
fcom
fdivrs
sub
rolb
in
mov
add
jne
or
imul
xor
push
loopne
hlt
ret
inc
je
orb
mov
mov
repnz
push
rcr
and
inc
fisttps
jl
imul
push
sub
lods
mov
jae
mov
mov
or
jge
sub
ds
iret
push
mov
xor
lods
pop
mov
mov
inc
sqrtps
loopne
and
ljmp
repz
into
test
jne
push
shlb
enter
lods
xchg
add
and
enter
mov
add
push
fwait
inc
xor
movsb
cmpsb
enter
stc
and
dec
lahf
into
xchg
out
lahf
add
mov
and
notb
push
xchg
add
test
inc
scas
shll
fucomi
jecxz
mov
mov
into
jo
and
jle
je
sbb
push
jno
lret
cmp
dec
cwtl
sbb
outsl
or
jo
fcmovbe
push
dec
stc
jmp
mov
mov
add
xorl
fcoms
or
and
mov
ljmp
xchg
ljmp
rclb
push
adc
pop
pusha
cmpsb
enter
insl
sbb
pop
mov
pop
ja
xchg
test
stc
mov
ljmp
mov
xor
jae
sahf
cmp
sub
pop
push
ret
int
xchg
mov
stc
pop
inc
test
popa
out
inc
mov
mov
jns
clc
push
movl
dec
dec
mov
add
dec
stc
orl
xchg
shlb
test
or
insb
mov
and
movl
pop
clc
push
xchg
push
das
and
pushf
das
adc
adc
dec
cltd
pusha
aas
xchg
sub
xor
xor
cwtl
lods
insl
jbe
outsb
push
adc
aaa
add
mov
jmp
mov
test
lret
popf
add
aas
sbb
inc
repnz
push
cmp
fcomps
push
in
cmp
int
inc
and
sub
test
insb
into
es
mov
mov
fucomip
shl
mov
cmc
adc
movsb
dec
sahf
cltd
add
jo
test
aaa
int
cs
movq
xchg
scas
push
inc
imul
add
push
dec
sti
push
push
cmp
adc
push
cmp
cmp
mov
outsb
cmp
push
leave
cmp
xchg
pushl
inc
clc
imul
in
pop
mov
mov
jo
dec
cmp
insl
scas
iret
push
fdivr
or
sbb
fisubl
adc
lock
out
loopne
mov
push
out
pop
mov
aaa
or
xchg
mov
mov
adcb
xor
je
cmp
lret
icebp
into
lds
mov
clc
mulb
ljmp
out
xor
out
ds
sti
leave
push
mov
in
cmp
cmp
cltd
dec
les
pop
out
sar
push
mulb
outsl
mov
faddl
xlat
sbb
mov
cmp
out
push
sbbb
repz
dec
push
xor
adc
or
xor
pop
jnp
push
or
mov
mov
xor
pop
inc
dec
clc
aaa
out
mov
cli
shll
mov
aad
sub
sub
or
hlt
add
fisttpll
jge
scas
mov
lock
ret
out
scas
jl
aam
xchg
fdivr
lret
es
jns
loope
pop
sbb
pushf
lock
xor
pop
xor
cmpsb
out
push
mov
scas
jns
and
jno
pop
repnz
cli
adc
and
mov
ljmp
sub
dec
or
pusha
mov
and
and
repz
ds
pop
loopne
add
sbb
push
sub
or
pop
fists
aas
sub
or
add
jo
stos
sub
adc
repz
nop
sub
aaa
mov
ret
cmpsb
scas
enter
lods
loop
cmp
and
add
lea
adc
pop
mov
stos
je
dec
push
pushf
data16
bound
or
mov
mov
out
leave
movsb
mov
int
out
xchg
sar
mov
scas
leave
cmpsl
or
mov
add
sbb
sbb
lcall
outsb
add
push
lahf
aas
fcoml
lret
xchg
xor
push
mov
subps
sub
mov
mov
xchg
xchg
cmp
add
in
jge
jge
repz
pushf
cmpl
mov
add
cmp
or
dec
push
sbb
in
fwait
pop
inc
add
in
mov
movsl
pop
jp
jge
es
mov
mov
fidivrs
sub
jg
adc
or
cmp
pop
pop
jp
ficoml
mov
outsb
xor
bound
stos
popl
dec
or
lcall
mov
add
and
cwtl
aam
pop
xchg
push
pop
xchg
inc
add
cltd
sbb
inc
movsb
imul
call
negb
fstpt
je
pop
fcoml
push
frstor
pop
lcall
push
xor
adc
fsubrl
in
mov
scas
fisttps
mov
adc
movsl
add
and
inc
mov
push
and
daa
mov
xchg
sbb
ret
push
in
insl
hlt
sbbb
mov
stos
or
ret
xchg
popa
fwait
xchg
cmp
jb
jae
sbb
inc
sbb
jnp
inc
cmp
lret
popf
lret
lahf
xor
xchg
or
cmpsb
arpl
add
call
mov
lods
xchg
jecxz
enter
clc
cmp
xchg
push
rcl
hlt
testb
add
sbbl
insl
cmp
mov
imul
push
pop
insb
jle
mov
jae
xchg
in
push
out
xchg
pop
lods
popf
mov
cld
mov
not
pop
loopne
fs
and
sub
xor
mov
filds
jne
push
js
dec
mov
push
push
lods
ljmp
movsl
data16
ljmp
fnstcw
enter
add
push
cmc
fildll
mov
leave
mov
push
test
adc
mov
adc
call
inc
fsubrs
int
fadds
insl
popf
push
xor
mulb
loope
pop
xchg
mov
movsb
mov
push
mov
xchg
negb
cmc
in
jg
or
lods
inc
lds
jb
stos
jge
jl
adc
imul
dec
mov
jo
ss
cwtl
es
mov
call
loopne
sub
mov
inc
shll
icebp
and
mov
adc
mov
push
dec
sub
sub
stos
mov
inc
push
push
jmp
loope
xchg
lods
xchg
mov
dec
add
in
mov
jno
jl
test
lahf
push
idivb
lret
push
test
mov
pop
add
add
fcmovnb
and
xor
roll
cmp
xchg
mov
mov
jp
inc
rcr
outsb
sub
sti
mov
mov
cli
jae
out
push
xchg
add
or
push
push
mov
icebp
fcomps
test
in
push
dec
cwtl
in
ret
inc
cmpxchg
sbb
sbb
xor
lock
mov
idivl
mov
mov
addr16
mov
cmp
push
jb
xchg
fs
arpl
jb
mov
mov
sub
jge
inc
fdivrp
mov
aaa
jae
hlt
into
xchg
loope
scas
rol
xchg
test
mov
cmp
mov
ja
jmp
jnp
pop
iret
adc
outsl
cmpb
sti
int3
adc
push
dec
sti
push
adc
cmpsb
push
sbb
shrb
enter
sbb
mov
js
and
pop
push
std
push
xor
sub
push
std
dec
dec
pop
stc
sti
insl
push
mov
mov
scas
or
movsl
scas
outsb
test
mov
jae
sbb
cmp
dec
jecxz
add
mov
and
loop
jp
dec
pusha
popl
or
sub
and
adc
jb
into
push
jle
and
mov
push
repnz
push
inc
inc
cwtl
clc
push
jl
jo
filds
push
shl
dec
nop
lret
mov
push
sbb
fstpl
imul
pop
shrl
or
jnp
scas
sahf
jb
mov
xchg
xchg
xor
adc
popf
out
push
adc
call
into
cs
jg
sbb
mov
outsb
int3
mov
inc
xor
cmp
add
push
jb
add
out
ss
xchg
ds
mov
xchg
int
out
idivb
jge
nop
test
fmuls
mov
mov
xor
hlt
pop
sbb
xor
cmpsb
jp
jne
sbb
xchg
xchg
jne
es
insb
pop
loopne
or
cmpsl
cmp
xchg
aad
mov
xlat
mov
jo
arpl
xor
mov
adc
dec
dec
ret
sbb
repz
imul
daa
and
daa
dec
mov
shr
push
fs
movsl
out
push
adc
fisttpll
lcall
test
fists
xchg
in
pminsw
cs
popa
or
push
push
test
xchg
out
xor
in
jns
imul
pop
sbb
addr16
les
inc
jb
jb
push
in
adc
push
scas
pop
sub
repnz
inc
sub
xchg
pop
mov
push
clc
rorb
xchg
int
std
or
fdivs
outsb
fists
in
cmpsb
jecxz
lods
push
movsl
add
cmp
imul
or
pop
mov
xchg
cmp
loope
dec
cmp
pop
dec
test
cs
mov
mov
and
sbb
and
mov
sbb
decl
into
popf
mov
mov
mov
sub
ja
cwtl
add
int
jnp
mov
clc
xchg
inc
lock
roll
adcl
ds
pop
insb
in
inc
ss
in
ret
sub
int
stos
cmpsb
pop
mov
sbb
xlat
mov
dec
xor
es
push
pop
loop
push
mov
push
fsubl
xor
mov
icebp
xor
rol
mov
lock
arpl
add
mov
and
xor
sbb
cwtl
test
and
ffree
dec
movsb
sub
sahf
or
xchg
nop
lods
out
scas
xchg
xor
sarl
aam
and
out
xchg
sahf
push
aad
or
insb
push
mov
into
mov
aad
jl
dec
or
mov
inc
mov
sub
inc
sbb
aas
rolb
pushf
and
push
mov
ror
rcll
aas
dec
sub
cwtl
mov
mov
lock
call
lret
jnp
or
and
lock
jmp
or
int3
or
push
out
and
lret
adc
jecxz
pop
aam
adc
lret
fcoml
xor
subb
outsl
incl
in
cmp
cltd
int3
repz
out
dec
dec
or
iret
add
ret
or
in
test
lret
outsb
addr16
push
stos
adc
lahf
jl
stc
repz
sub
jo
fldl
push
jnp
ss
jle
shll
inc
je
xchg
jb
adc
push
sbb
js
es
out
test
cmc
xlat
cmc
loop
mov
and
popf
pop
add
cmp
pop
mov
pusha
cld
lret
movsl
or
jl
iret
ficomps
lods
out
inc
push
pop
sub
or
xlat
sahf
sub
inc
pop
out
dec
inc
push
lahf
dec
jb
loope
repz
cmpsl
std
xchg
pop
data16
inc
popf
adc
push
dec
inc
ja
ss
push
out
jp
cli
jb
pusha
aaa
sti
cmp
xchg
push
sahf
sbb
xchg
out
das
pusha
fcmovne
or
push
sbb
sub
inc
mov
xchg
hlt
stc
arpl
inc
rclb
push
inc
xor
jno
and
in
aas
lret
decb
decl
pop
aam
shrb
cmc
or
cltd
xor
pusha
sub
shll
pushf
dec
rorl
mov
jnp
push
mov
xchg
sbb
sbb
testl
xchg
xor
insl
push
xor
push
popf
outsl
push
bound
and
scas
dec
xchg
jg
int3
stos
into
jmp
pop
adc
repz
icebp
dec
pop
or
loop
cmpsl
and
jmp
aam
inc
fsubp
sbb
aam
mov
ret
xchg
sti
repnz
lret
test
fnstenv
aaa
adc
dec
xor
ret
idivl
test
cltd
adc
mov
out
jmp
jae
xor
dec
jo
xor
cmp
xchg
inc
lret
sbb
cmpl
or
insl
xchg
cmp
jb
sub
sub
int
mov
add
shlb
jns
iret
aaa
pop
lret
int
jmp
xor
and
arpl
or
jecxz
shl
xrstor
lea
adc
sti
xor
jp
push
fisubl
daa
mov
std
sub
add
int3
jge
test
adc
xchg
fwait
repnz
or
xchg
inc
add
cmpsb
jp
fdivl
cltd
mov
inc
pop
and
cmp
xlat
into
std
cmp
cmpsb
sarl
jnp
cmc
add
test
movsb
cli
clc
sub
fidivs
mov
push
dec
scas
call
push
ret
stos
inc
jae
pop
das
insl
int
mov
mov
adc
dec
push
xchg
jo
xchg
outsl
rorb
add
add
cmc
dec
mov
scas
mov
fdivl
enter
adc
loope
and
push
inc
stc
pop
testb
pop
inc
xchg
mov
cmp
loope
or
and
xchg
fdiv
loop
sbb
loop
vcmpss
adc
jmp
xchg
inc
push
mull
pop
cmp
pop
lds
movsb
js
sbb
data16
xor
or
fwait
pop
jg
das
es
push
mov
mov
fnop
mov
jns
movsl
push
sub
in
and
rorl
mov
jmp
jmp
lods
out
call
dec
xlat
cmp
and
clc
xchg
adc
jae
dec
xchg
fdivp
into
fisttps
push
cmp
stc
addr16
popa
jecxz
das
mov
xchg
and
in
mov
cmp
scas
popf
ss
or
out
mov
popa
repnz
arpl
je
js
cmp
shl
test
adc
xor
cmp
lahf
gs
adc
jl
and
mov
fidivrs
mov
mov
je
mov
ret
mov
fisubs
lahf
pop
sub
cmc
sbb
lods
scas
lret
xor
mov
in
mov
sbb
ja
rol
mov
loop
std
sub
pop
fbstp
sbb
adc
mov
cmp
loopne
stc
mov
pop
add
mov
movb
insb
out
call
jne
cs
ljmp
push
call
add
test
jecxz
sub
pusha
lock
rclb
add
pop
xor
filds
outsb
nop
iret
cmpsl
and
and
bound
inc
fbstp
mov
out
mov
pop
lret
sub
movsl
adc
jns
pop
adc
in
scas
pusha
movsb
inc
pop
or
mov
or
das
aam
sub
add
fsubl
xor
sbb
pop
lods
dec
js
in
jg
incb
cltd
mov
mov
jo
out
jecxz
cmp
popl
xor
lock
push
pop
mov
sub
mov
mov
mov
push
push
jo
xchg
in
lods
cli
ds
mov
lret
dec
out
enter
or
xchg
jle
inc
cld
mov
sbb
sbb
ret
add
mov
mov
sub
dec
lods
adc
or
jbe
fcmovu
xchg
int3
daa
mov
xchg
ffree
mov
and
imul
jns
pop
out
pop
xor
outsb
sub
mov
daa
sub
popa
xlat
int
call
orl
aam
in
rcrl
add
ret
addl
and
mov
je
add
sbb
repz
mov
mov
xorl
scas
adc
test
lods
add
bound
sub
mov
push
movsl
shlb
push
dec
push
bound
test
into
xor
out
ret
pop
ret
fmulp
xor
aas
hlt
insb
pop
aas
mov
sub
and
adc
mov
loop
jno
xchg
fdivs
xor
adc
cs
jge
mov
xor
outsb
rcll
inc
mov
imul
pusha
sub
push
xor
pop
negl
ficompl
push
imul
xchg
push
ret
pop
and
sarl
push
sub
sbb
test
lods
push
sbb
gs
and
cmpsb
sub
enter
push
sub
push
pop
sub
mov
cltd
cmpsb
sbb
xchg
mov
subl
adc
cs
sub
mov
adc
sbb
repnz
push
js
adc
js
mov
xchg
stc
jbe
insl
jmp
jecxz
daa
jle
int
iret
sub
inc
ja
xchg
sar
push
lret
scas
hlt
xchg
test
les
pusha
loope
xchg
cmp
jae
dec
notl
jo
jo
sbb
sar
sub
loope
daa
fcomps
insb
movsl
dec
cwtl
push
mov
mov
adc
sbb
in
pushf
mov
popf
pop
stos
or
loope
sbb
ja
xchg
sub
gs
xor
notl
shll
ljmp
and
adc
push
mov
lock
jne
idivl
sub
mov
mov
fmul
fildll
bound
cmpsl
sbb
xchg
pop
mov
stc
adc
mov
lock
xor
mov
xchg
mov
inc
add
mov
mov
sarb
xchg
inc
xchg
pop
push
loop
xor
xchg
int3
mov
aaa
clc
jecxz
push
aam
adc
stc
mov
dec
stos
dec
mov
jecxz
xlat
std
loop
sub
and
jl
out
pop
mov
add
cwtl
adc
out
add
pop
pop
imul
sub
lods
xchg
push
ja
fstpt
dec
mov
jae
mov
sbbl
lods
adc
fisubrs
sbb
test
mov
rorl
push
movsb
shrl
aaa
aam
movsb
int
addr16
outsl
adc
movsl
not
mov
das
pop
mov
dec
dec
mov
mov
push
lret
push
cli
add
test
imul
in
int
and
mov
fbld
mov
jae
pop
cltd
push
sbb
loope
scas
mov
enter
pop
in
dec
add
and
dec
dec
jb
inc
lcall
fmuls
fwait
mov
or
arpl
inc
in
pop
rorl
shlb
jbe
call
pushf
imul
in
sbb
and
rclb
cs
in
cmp
scas
pop
mov
test
dec
xchg
repnz
in
or
repnz
repnz
loope
mov
arpl
push
scas
or
cmp
inc
jl
prefetch
cmpsl
push
mov
roll
push
sub
lock
out
push
mov
movsb
push
add
cmp
add
lcall
adc
add
out
add
cmpl
or
scas
dec
jb
push
in
cmp
in
jp
loopne
clc
push
pop
push
jge
cmpsb
into
lcall
mov
and
fisttpll
dec
cmpsl
ds
push
sbb
ret
test
jb
push
or
cmp
movsl
lcall
inc
call
outsb
inc
cmpb
xchg
or
scas
cmp
xchg
adc
popf
add
mov
dec
adc
cmpsl
inc
mov
imul
scas
sbb
dec
mov
push
enter
addr16
cmp
pop
out
sbb
mov
leave
xchg
cli
js
mov
adc
sbb
xor
pop
adc
lods
cmpsb
frstor
jo
ficompl
fstpt
add
sbb
or
sub
fcomps
mov
dec
cwtl
mov
pop
dec
ret
and
loope
test
jae
push
fisttpl
gs
shlb
andb
incb
cmp
mov
push
repz
jmp
test
sub
ss
pop
xor
imul
mov
add
rolb
mov
push
mov
xor
cmp
pop
adc
cmp
mov
push
dec
rcl
xchg
lock
lea
sub
xchg
mov
pop
add
lds
imul
xchg
cltd
mov
cli
add
mov
in
inc
push
xchg
inc
test
out
or
sub
dec
rcr
inc
mov
ds
xor
faddl
fdivl
add
cmp
in
jbe
mov
mov
fucomi
adc
sub
idiv
xorb
jb
or
out
in
jnp
mov
loopne
adc
jge
pusha
push
icebp
dec
mov
aam
sbb
jle
mov
cmp
jae
ljmp
sbbl
and
int
mov
aam
jbe
push
inc
sbb
es
out
in
ds
jb
cmp
jo
mov
pop
cs
daa
sbb
loope
push
push
mov
inc
dec
add
jnp
sahf
xor
or
int
ret
pop
jge
nop
mov
pop
outsb
pushf
push
fsubr
cmc
pop
mov
jae
repnz
dec
dec
adc
push
in
pmaxsw
sbb
fwait
sub
stc
add
aam
clc
in
and
mov
iret
call
andl
enter
in
xchg
or
jmp
add
jmp
push
xor
adc
stos
dec
ret
mov
and
cld
adc
scas
push
push
jne
enter
movl
ret
hlt
push
xchg
cmpsb
fimull
aas
push
out
adc
dec
popa
repnz
ret
nop
xchg
dec
xchg
cmp
cmp
sti
in
or
cmpsb
mov
pop
jg
jb
xchg
cli
aam
out
push
inc
dec
xchg
dec
subl
sub
dec
stos
mov
sbb
aam
out
dec
test
decl
add
enter
lcall
jp
and
les
sub
lret
sbb
xlat
or
mov
mov
lret
xor
mov
cwtl
std
fwait
das
out
jge
loopne
or
aaa
mov
lret
dec
adc
arpl
pop
xor
insb
int3
test
mov
lods
mov
out
push
cs
dec
insb
jl
inc
add
out
pop
jg
mov
jo
in
push
mov
aas
cmp
insb
test
xor
cs
jbe
sub
pop
sub
mov
test
sti
aad
xor
call
cmp
inc
movsb
pop
push
imul
push
lea
add
xor
loope
pop
mov
fwait
ds
arpl
dec
popa
adc
push
xor
shll
outsl
je
xor
mov
lods
sbb
mov
mov
adc
xor
xchg
addr16
xchg
rorl
insl
push
sub
jo
sbb
lret
lock
cmpsb
push
shlb
fsubs
xchg
idiv
int3
jne
jb
lret
je
add
pop
mov
pop
fidivrs
test
adc
cld
outsl
pop
stos
mov
or
adc
mov
and
push
pop
sarb
cmp
xchg
dec
xchg
add
jmp
inc
cmpsl
cld
stos
lahf
add
mov
fnstenv
xlat
fcompl
mov
mov
adc
cmp
add
xchg
xor
cmpsl
sbb
mov
test
out
out
popf
movsl
dec
enter
dec
bound
decl
inc
and
addr16
xchg
sub
aad
mov
xchg
scas
mov
hlt
daa
jne
lds
pop
push
mov
add
test
or
jg
lret
xor
int3
jecxz
xchg
dec
rcr
xchg
sti
xchg
push
scas
adc
adc
inc
bound
inc
fwait
test
xchg
aas
arpl
in
cmpsl
icebp
jl
fldl
cmp
xchg
cwtl
xchg
mov
shrd
lret
rol
adc
inc
inc
jge
addr16
mov
mov
inc
jne
add
andb
pusha
ljmp
mov
inc
inc
pop
negl
fnstenv
shrb
jb
pop
shlb
pop
hlt
dec
inc
jne
cli
bound
add
push
das
aaa
pop
mov
cmc
inc
jne
jge
out
pop
sbbb
fisubrl
push
ds
mov
add
ret
lahf
call
sbb
push
hlt
or
and
cmp
jmp
lahf
fcoms
out
addr16
inc
adc
sub
mov
inc
cmp
add
orb
mov
inc
mov
pop
cld
pop
push
int
cmpsl
cmp
sbb
dec
lea
cltd
pop
sub
aam
mov
mov
outsb
push
ffreep
cmp
ds
cmp
dec
push
out
sbb
xchg
add
xor
push
jle
jg
sub
outsb
imul
popf
fsubp
xor
jbe
inc
inc
mov
push
inc
in
out
mov
sub
lds
sbb
dec
jp
or
test
fnstenv
lds
in
mov
xor
in
and
mov
xchg
add
int
int3
ret
call
add
mov
jge
xor
pop
mov
mov
imul
in
movsb
add
jb
cwtl
stos
cwtl
adc
mov
mov
sbb
mov
out
int3
xchg
jno
sarl
pop
mov
and
repnz
neg
mov
mov
xor
setbe
mov
or
repnz
addr16
jbe
dec
push
in
or
stos
push
push
sub
ja
jne
push
dec
fsubl
push
jo
outsb
pop
adc
mov
jne
out
fs
and
xchg
ret
sti
xorl
dec
lcall
sbb
jg
nop
icebp
std
xor
pop
cmp
xchg
mov
mov
or
push
insb
aad
lahf
push
sub
lcall
push
mov
loop
dec
mov
lcall
xor
outsl
dec
clc
mov
or
cmp
dec
or
mov
sub
or
faddl
inc
add
shll
stos
cmp
pop
cmp
cmpsl
cmc
rcrb
das
pop
jge
nop
fcoms
leave
inc
sub
mov
sbb
pop
incb
jmp
insl
jmp
xor
dec
push
pusha
lds
lds
jp
mov
insb
sbb
push
adc
negb
arpl
inc
es
push
outsb
aaa
movsl
cwtl
ret
push
shrl
sub
mov
iret
es
ficoml
loope
idivb
out
rcll
cwtl
sti
inc
mov
adc
pop
xor
cmp
out
cmp
cwtl
add
repz
sub
xchg
jmp
mov
or
test
xor
popf
stos
cmc
out
popw
xchg
dec
dec
stos
inc
adc
dec
icebp
push
repz
pushf
dec
cmpsb
xor
mov
je
sub
or
ror
out
push
adc
ds
mov
sub
in
pop
cli
test
lret
mov
or
aaa
xchg
pop
flds
stos
aas
subl
clc
xchg
imul
imul
in
roll
xchg
fimull
es
sub
sbb
mov
sbb
fildl
xchg
dec
pusha
cmc
out
dec
jns
sub
mov
mov
jnp
or
or
mov
xchg
cmp
sub
pusha
jo
xchg
add
pop
mov
fnstcw
pop
fisubl
lods
mov
inc
stos
jle
inc
stc
imul
pop
insl
cmp
sub
mov
push
inc
inc
push
iret
jns
xrelease
out
cmp
inc
ds
std
jns
sti
insl
dec
or
push
lret
lahf
sbb
push
or
xchg
int3
repz
clc
test
cltd
popa
sahf
shlb
insb
xchg
ja
add
adc
mov
adc
mov
jecxz
cwtl
adc
push
xchg
cmp
adc
dec
mov
fisttpll
popf
pop
das
jg
cmp
bound
cwtl
ljmp
sbb
loope
cmp
ljmp
push
push
xor
push
mov
subb
push
scas
es
divl
in
or
les
xchg
in
inc
stc
jae
sub
mov
mov
popa
iret
xchg
hlt
mov
in
mov
int
call
inc
mov
lret
xchg
dec
aaa
xchg
hlt
push
mov
and
or
inc
das
jl
push
stos
fidivs
push
in
pop
jmp
jne
inc
testb
push
xchg
les
and
adc
rcrb
dec
jmp
jecxz
xchg
xor
xchg
xchg
repnz
popf
adc
add
jge
xchg
adc
cmc
aam
repnz
js
pop
lock
inc
popa
divl
adc
mov
sub
repz
or
pop
ljmp
mov
aad
out
or
mov
pop
cwtl
movl
mov
mov
jmp
jbe
andb
dec
shlb
jl
repnz
addl
mov
push
jmp
pop
test
aas
fldt
xchg
std
out
fiaddl
stc
shll
fucomip
leave
lret
dec
mov
in
lahf
stos
rorl
inc
insb
imul
mov
and
scas
pop
xor
test
jnp
in
inc
sub
xor
dec
xchg
push
xor
lods
das
pop
out
push
push
pop
cmpl
push
pop
fadds
lea
mov
push
xchg
frstor
into
je
enter
xchg
std
xchg
fwait
data16
and
or
icebp
mov
icebp
pop
fsubl
loopne
stc
lods
mov
jle
push
js
mov
jae
push
ss
pop
sbb
int
xor
jno
ljmp
xchg
or
adc
pop
pusha
add
rorb
xlat
or
or
sti
push
pop
pushf
xchg
bound
pusha
sbb
leave
jae
or
xchg
fnsave
je
xor
inc
xor
add
add
sub
adc
push
aad
aam
sbb
dec
push
lock
div
push
out
je
mov
sbb
cmpl
ljmp
xchg
xchg
xchg
movsb
lret
stc
pop
mov
dec
int3
pop
popf
lcall
xor
lret
mov
mov
imul
sbb
push
pop
xlat
mov
adc
add
xlat
fcmovu
stc
cmpsl
or
sbb
jge
sbbb
hlt
in
pop
sbb
push
pop
rcrl
push
inc
sbb
inc
clc
push
outsb
sbb
or
xchg
or
lret
mov
inc
push
mov
cmp
pushf
pop
cmpl
std
lcall
nop
and
lea
insb
int
inc
mov
jae
jg
sbb
add
popa
lods
adcl
xor
pop
mov
dec
pop
incb
out
and
xor
out
loopne
lods
mov
jg
jmp
rclb
or
testl
sbb
mov
jb
xchg
outsl
sub
inc
daa
inc
and
fisttps
into
insb
inc
sahf
xchg
xchg
es
cmp
jns
fadd
ja
call
cmpsb
push
cmpps
lahf
pop
dec
int3
xchg
adc
xchg
lcall
fsubrl
neg
imul
pop
pop
inc
imul
adc
adc
cld
cmp
sbb
push
les
test
mov
push
sub
outsb
mov
int3
out
loope
jmp
cmp
dec
inc
in
stc
cmpb
in
iret
gs
scas
xchg
addr16
andb
and
fwait
or
ret
xlat
cld
rcrl
shll
fisttps
je
popa
ror
mov
imul
mov
sub
nop
adc
clc
jbe
pop
subb
lcall
push
aam
sub
lds
mov
push
lret
or
pop
jmp
scas
mov
fildll
xchg
push
aad
cmp
je
pop
adc
sti
sub
sbb
ret
pop
outsl
add
out
test
les
push
xor
out
cli
push
push
fldcw
mov
jne
rolb
into
mov
adc
insb
pop
lcall
inc
lret
xchg
cmp
cmp
ficompl
inc
mov
dec
into
pop
fs
add
in
inc
nop
and
jmp
rcrl
lcall
adc
or
lahf
cmpl
mov
push
andl
push
add
je
std
sahf
es
push
mov
mov
xchg
and
and
push
inc
aas
shll
cmp
pop
lcall
and
push
aam
sahf
sahf
sub
mov
sbb
dec
pop
or
inc
push
cmp
and
sbb
xchg
or
mov
mov
mov
add
adc
cmpsl
out
inc
fstpt
xchg
xor
jae
and
pop
shrb
and
stos
dec
xor
shrb
push
imul
cwtl
cmp
xchg
loope
push
pop
cmpl
fcmovu
vpmacssdql
popf
sub
aaa
mov
mov
call
inc
cmp
inc
lods
pop
pop
mov
pop
push
jl
pop
mov
and
mov
test
pop
sbb
push
pop
cwtl
sbb
mov
push
xchg
jb
cwtl
outsb
lods
jmp
sub
mov
lea
or
es
leave
mov
shll
push
adc
andb
out
dec
ret
icebp
scas
pop
xchg
aam
adc
stc
mov
mov
xchg
mov
aaa
and
lahf
je
pop
scas
test
ss
sub
lret
test
xchg
rcll
arpl
out
mov
xchg
xor
fisubrs
xor
pop
outsb
pop
fcom
leave
sbb
fldln2
dec
mov
mov
daa
xor
jae
std
dec
out
dec
inc
scas
xchg
mov
push
sbb
dec
popw
cmp
and
sub
shrb
mov
push
call
and
dec
xchg
shrl
sbb
add
lods
cmp
xchg
int
test
les
aaa
mov
adc
inc
test
loopne
nop
dec
cmpsb
and
push
inc
or
dec
movsb
adc
xchg
repz
rorl
pop
ja
jbe
jg
dec
aas
ds
cmp
ficoms
inc
push
pushf
xchg
cli
bnd
shrb
leave
cmp
cmc
jmp
addl
cmpsl
push
dec
cmc
push
xchg
pop
fldt
fiaddl
jne
sbb
inc
sub
pop
lock
pop
dec
and
ljmp
xor
add
xchg
fucomi
inc
ss
inc
stos
cmp
dec
mov
cmp
out
hlt
pop
xor
cmp
in
iret
push
out
mov
and
jecxz
fstps
mov
je
sbb
test
add
in
push
xchg
mov
pop
ja
aas
nop
sbb
jns
aad
cmpb
jmp
mov
push
mov
cmp
cmpsb
sub
js
inc
adc
inc
insb
outsb
sub
jno
insl
ss
cmp
imul
cli
sub
and
rclb
addl
data16
arpl
imul
pop
lods
aad
jae
xchg
aad
xchg
lea
jns
dec
sub
jle
push
xchg
lods
mov
and
ds
cmp
jp
pop
and
cmpsb
daa
cltd
in
xchg
jno
jbe
pop
lret
mov
mov
sub
aad
sbb
inc
sub
sub
mov
push
roll
outsl
mov
vandnps
inc
xor
xchg
cmpsb
daa
sub
cwtl
cmp
push
or
inc
add
cs
stc
fnstenv
js
jle
mov
in
shlb
ss
aas
jne
addr16
int
mov
addr16
lods
clc
movsb
inc
sbb
jno
movsb
mov
andl
or
and
mov
fs
in
cmp
pusha
in
pop
ret
repnz
sub
mov
xor
repz
lods
movsl
mov
pop
imul
xor
dec
jecxz
addb
inc
xchg
xlat
addl
pusha
clc
bound
addl
or
sub
sti
add
add
test
push
fs
cld
sarl
dec
cmp
cmp
pushf
jp
xor
mov
mov
movsb
adc
mov
push
lahf
jbe
fistpll
cltd
mov
orl
outsb
movsl
fmull
inc
dec
in
in
or
jge
fdivrs
mov
add
xchg
les
into
sbb
js
push
dec
addb
lods
and
out
adc
xchg
scas
test
add
pop
in
lea
push
jne
sbb
cmp
cmp
pop
add
pop
mov
inc
xorb
cmp
jae
pop
loope
xchg
push
lds
sti
push
mov
bound
in
pop
mov
mov
imul
mov
dec
ss
mov
inc
popf
sbb
mov
pop
sub
dec
fidivrs
xor
jae
cmpsl
and
jno
sub
cltd
mov
hlt
or
xor
popa
push
fwait
rcrl
mov
daa
jo
mov
sbb
mov
mov
cmc
pop
mov
jmp
aad
push
sbb
xor
repnz
push
fs
jns
outsb
icebp
and
adc
jecxz
xchg
aad
mov
inc
sub
mov
pop
leave
mov
jl
jae
loopne
mov
out
out
jge
out
mov
xchg
rcrl
cmp
js
pop
movsl
test
xchg
xchg
mov
dec
or
cli
push
sbb
mov
mov
jle
ret
jae
movsl
mov
xor
ds
aaa
xchg
fstl
cmpsl
xchg
jb
sti
loopne
add
adc
stos
sub
jae
adc
dec
sub
mov
pop
shrl
into
jae
sub
ficomps
sub
push
pusha
dec
ljmp
mov
orl
es
pop
sbb
xor
mov
das
xchg
dec
adc
jecxz
mov
or
xor
mov
dec
pop
sbb
fldcw
dec
jno
or
lock
pushf
pop
or
add
in
dec
outsl
dec
les
bound
pop
int
pop
sbb
js
in
cmp
cmc
mov
push
dec
push
mov
ror
clc
push
jecxz
cmp
stos
jb
into
sbb
adcb
pop
lret
fcoms
or
test
xchg
adc
xchg
sarl
and
hlt
int
lret
outsl
sbb
push
pushf
addl
filds
pop
add
bound
test
imul
fs
mov
aam
arpl
pop
xor
mov
jo
jno
cwtl
xchg
rolb
dec
arpl
jl
inc
push
adc
jg
mov
repnz
popf
int3
pop
mov
dec
xchg
in
daa
dec
mov
jcxz
mov
inc
mov
popf
fstps
push
test
mov
push
stos
mov
inc
sub
in
lret
aam
call
sub
jnp
cmc
je
mov
in
and
dec
pop
xchg
in
pop
std
imul
int
dec
ficomps
mov
pop
mov
push
inc
cs
pop
std
in
fsubrs
inc
and
sub
pop
jnp
ret
lds
or
aaa
rcl
jb
insl
out
je
mov
mov
adcl
int
adc
mov
test
jbe
lea
shrb
push
xor
cli
fstl
cmp
rcrb
inc
cld
cmp
es
outsb
fimuls
dec
imul
xchg
push
inc
sahf
sbb
insb
add
sbbl
out
or
aad
push
mov
cwtl
xchg
jo
dec
mov
je
jnp
arpl
sbb
jo
lret
mov
filds
pop
push
jne
cmp
and
stos
inc
scas
lret
in
adc
xor
in
adc
sbb
and
inc
stc
bswap
ret
jl
adc
cmpsb
cmp
mov
scas
adc
jp
mov
repnz
fsts
arpl
mov
out
call
adc
nop
jno
pop
repz
push
test
inc
cmp
add
jns
ret
cltd
xor
jmp
ljmp
repnz
ret
xcrypt-cfb
cmpsl
mov
inc
and
xor
loop
xchg
xor
out
fdivr
jae
xorb
out
ret
out
test
loope
or
ret
insb
adc
jno
xor
xor
xchg
shl
fstpt
imull
inc
mov
push
lods
xor
movsl
xor
loop
inc
xchg
cmp
mov
pop
jecxz
rolb
adc
repz
ja
sub
sub
mulb
rorb
lock
xchg
mov
scas
cli
and
or
outsb
mov
push
fisubs
inc
out
aad
test
push
aas
ret
test
or
faddp
jg
sahf
insl
dec
loope
inc
cmpsl
in
mov
and
dec
cmp
push
sub
pusha
outsl
xlat
inc
ljmp
outsb
sbb
popf
ret
push
mov
dec
adc
popf
sbb
icebp
cmp
sbb
cltd
imul
cmp
fildl
push
sbb
das
cld
lret
bound
lret
popf
xor
jge
addr16
lds
cmpsb
out
imul
call
jne
push
jns
sbb
push
arpl
mov
clc
inc
sbb
cld
lahf
push
arpl
std
dec
aas
mov
lods
pop
cltd
out
push
push
push
sbb
popf
cmp
inc
nop
xor
cmp
and
push
idivb
inc
mov
lcall
push
xlat
jne
lods
scas
lcall
xor
nop
test
lods
dec
mov
pushf
fsubs
jbe
out
mov
jg
cwtl
in
cltd
imul
cwtl
jne
mov
pop
xor
lods
or
std
loopne
lds
xor
aaa
xor
mov
test
outsb
cmp
jns
mov
pop
emms
push
sti
mov
sub
mov
sti
mov
xchg
mov
adc
adc
mov
movb
test
add
push
jo
imul
cmp
or
push
dec
dec
ret
call
dec
cmp
js
je
nop
jno
inc
xor
insb
fidivs
xor
add
leave
mov
lea
xor
les
pop
pushf
rcrb
add
inc
movsb
xchg
lcall
xor
shlb
inc
int
push
xchg
pop
xor
add
movsl
cwtl
call
add
ret
mov
fiadds
leave
stc
test
add
inc
sub
pop
or
xor
push
xor
loopne
je
adc
mov
int3
gs
cmp
lea
incb
cmc
adc
shlb
push
cwtl
inc
data16
int3
lret
inc
mov
scas
aad
jge
inc
xchg
daa
aas
sub
dec
or
ret
jmp
pop
xor
les
rorb
das
inc
fs
cmc
stc
jecxz
gs
inc
aam
movsb
sbb
xlat
jo
scas
push
mov
jmp
sbb
or
test
mov
jle
xchg
out
dec
jmp
add
js
mov
mov
enter
cmp
and
xchg
inc
add
lret
dec
es
fdivl
fcmovnu
sti
inc
movsl
and
push
loopne
jecxz
fcoml
repnz
sub
push
and
fwait
ljmp
mov
fwait
ret
fisttpl
jb
adc
push
xchg
lahf
enter
mov
js
cmp
das
dec
mov
sbb
ret
ja
adc
cmc
sbb
cmpl
dec
jl
push
add
push
enter
dec
pop
aad
in
sub
aas
int3
jne
std
jns
sti
cmpsl
xor
sub
mov
ja
fiaddl
dec
int
mov
inc
sub
sbb
dec
arpl
bound
xchg
lods
xchg
cs
into
hlt
pushf
nop
mov
mov
daa
sub
xchg
ds
push
or
sbbl
test
int
lret
adc
mov
xchg
repnz
or
mov
leave
mov
xchg
clc
cmp
xor
xchg
or
adc
jae
jmp
mov
mov
xchg
sbb
mull
sti
xor
in
jne
sti
pop
xchg
clc
or
pop
adc
inc
testb
mov
orb
loope
fs
mov
test
push
and
flds
sub
xchg
jmp
mov
aad
xor
cld
push
mov
fldl
mov
add
test
imul
out
aaa
pusha
jp
mov
addb
js
int
pusha
nop
or
sbbl
and
push
nop
int
adc
sar
or
jne
jmp
push
lsl
adc
repnz
push
inc
inc
xchg
ret
lds
das
cwtl
cltd
stos
imul
add
jge
nop
in
add
pop
mov
push
inc
push
ret
push
pop
fiaddl
js
out
mov
xor
xchg
pushf
mov
das
add
push
cmc
sub
cmc
mov
stos
sti
scas
fsubrl
into
insl
inc
int
jmp
xchg
pushf
lret
xor
out
lods
sub
xorb
push
les
inc
fldcw
ja
inc
cmp
lods
movsb
aas
loope
testl
rcrl
into
xchg
ja
sahf
push
rcl
sti
add
sbb
dec
and
addl
inc
mov
out
or
loope
lret
inc
mov
add
push
mov
add
jb
and
add
mov
jmp
mov
and
pop
xor
repz
dec
clc
inc
jnp
mov
je
mov
mov
xor
or
addl
test
int
jecxz
andb
or
lret
fwait
mov
push
sub
xchg
push
jno
test
cwtl
adc
xor
mov
or
jbe
mov
iret
repz
bound
dec
jo
adc
jo
movsl
and
and
aaa
xchg
dec
push
daa
adc
sarl
pop
rorb
sub
cmp
jecxz
jp
sub
imul
das
lcall
sbb
mov
sub
add
faddl
push
loope
insb
ja
push
sti
jg
xor
nop
enter
push
mov
xchg
enter
testl
and
repnz
cs
std
aam
lea
movsb
sub
adc
jg
stos
pop
xlat
xchg
lds
insb
jmp
call
lods
cmp
dec
sub
adc
pushf
mov
lods
pushf
rcrb
in
test
subl
aam
mov
decl
jno
lods
dec
es
dec
jg
lahf
lcall
movswl
dec
leave
pop
test
mov
sti
jecxz
in
cmp
shl
adc
inc
mov
into
mov
push
incb
push
and
dec
gs
data16
enter
cwtl
and
je
jg
shl
fs
or
cmp
cld
pop
sti
jbe
lock
nop
cmp
xor
lcall
mov
mov
mov
fstcw
test
mov
inc
add
pusha
xor
imul
lret
or
inc
dec
push
jne
add
xchg
aas
xor
push
clc
icebp
js
subl
inc
sub
inc
add
mov
mov
xchg
and
leave
aas
scas
and
stc
in
xor
in
jns
mov
sbb
cmp
xchg
lret
loopne
dec
stos
in
cmpsb
sub
or
and
call
xchg
test
es
sbb
adc
test
mov
stos
sbb
ret
lds
addl
in
push
je
jo
mov
sbb
cld
fnstenv
jl
xor
cltd
stc
hlt
test
fwait
aaa
std
mov
jecxz
test
add
mov
cmp
std
test
in
enter
pop
mov
mov
push
cmpl
icebp
ret
fldenv
cmp
test
cmp
jnp
jl
mov
fidivrl
or
std
inc
adc
lods
push
leave
xchg
mov
jg
dec
nop
push
or
sbb
xchg
aad
xchg
fwait
jl
nop
mov
cmpsb
out
add
call
pop
mov
icebp
xor
xlat
jbe
and
pop
adc
push
mov
lock
or
shrl
mov
pusha
pop
mov
adcb
cmp
xchg
add
popf
addr16
adc
sub
test
inc
bound
mov
jl
jae,pn
fcoml
jmp
and
aad
movsl
cmp
cli
arpl
movsb
daa
loope
xchg
ficoms
adc
push
lea
jno
push
cmp
outsb
push
or
sub
stc
test
sub
popf
addr16
lods
out
imul
mov
sbb
pop
popf
cmp
add
xchg
adc
xor
jmp
jns
outsb
data16
call
push
insb
stos
and
fmull
aam
push
cmc
inc
stos
pop
in
xchg
sbb
xor
dec
dec
mov
mov
cs
cmp
pop
jae
in
inc
mov
int3
pop
call
movsl
addr16
mov
fmull
notl
insb
xchg
mov
push
sbb
mov
lahf
mov
cmpsb
push
stos
std
es
or
and
xchg
mov
lods
out
xchg
push
xchg
mov
or
xchg
lahf
in
lret
push
push
ficoms
mov
out
jecxz
adc
push
insb
pop
scas
repnz
addr16
jmp
popf
jb
loope
inc
mov
add
adc
stos
jp
inc
imul
jnp
xor
push
and
cmpsb
loopne
inc
jb
push
inc
push
pop
cmp
jg,pt
clc
insl
iret
mov
xor
sub
pop
pop
or
ljmp
mov
cmpsb
mov
pop
jae
aas
dec
repnz
scas
mov
or
and
mov
daa
jno
fisttps
and
nop
cli
repz
enter
inc
adc
insb
jge
dec
pop
pop
and
pop
add
push
shr
test
pusha
pushf
or
subl
push
sti
xor
xor
sub
xor
dec
add
jge
mov
pop
or
movsl
xor
cs
and
mov
pusha
lds
test
pop
mov
inc
lahf
test
repnz
pop
js
pop
cmp
mov
add
fnstcw
mov
pop
xchg
test
pop
movsl
shrl
fwait
inc
pushf
loope
and
cli
or
inc
mov
sub
cmp
ret
rcrl
pop
ja
ds
push
mov
cltd
adc
push
push
and
inc
add
and
mov
push
inc
jo
nop
out
sbb
and
cmp
test
repz
aam
loopne
hlt
cmc
dec
insl
push
std
call
jp
mov
cld
mov
shlb
push
dec
mov
cld
inc
call
lahf
mov
mov
or
in
inc
rcll
push
add
xchg
mov
aaa
sarb
loopne
shll
sub
sub
add
jb
rcr
aad
into
mov
ret
mov
push
push
rolb
mov
cmp
jbe
pop
ret
hlt
out
push
jno
scas
jg
xor
pushf
inc
or
inc
xchg
out
lock
insb
ret
xchg
out
fadd
cmp
cmp
cmpsb
insb
lods
lds
cmp
shl
and
jge
push
sbb
push
lods
jae,pt
push
addb
in
cmc
adc
push
xor
pushf
out
fcmove
pop
cmp
pop
push
push
popa
push
insl
jl
xchg
movsb
loopne
mov
cwtl
repz
jbe
or
lea
add
and
inc
xchg
dec
jmp
sbb
xor
lock
or
movsb
sbb
aad
mov
mov
dec
jno
push
std
pushf
mov
sbb
and
mov
shlb
push
cmp
ljmp
xchg
rclb
cmovs
mov
mov
xor
inc
mov
pcmpgtd
inc
jge
pop
and
orb
mov
cs
fwait
push
sarl
push
mov
sbb
pop
stc
cmp
mulb
mov
sub
clc
filds
cmp
pop
ds
pop
adc
ja
jle
into
cmp
push
sbb
lea
jge
pop
dec
jg
fidivs
cld
cmpsb
sub
xchg
loop
mov
into
push
loope
push
push
cmc
addr16
test
or
pop
stos
imul
push
in
js
inc
cmp
mov
je
adc
std
adc
jae
jmp
adc
xor
decl
xor
inc
mov
push
and
mov
add
mov
scas
stos
jo
add
jge
lahf
mov
mov
movsl
mov
in
and
stos
mov
cmpsl
cmp
icebp
xlat
push
inc
sub
andb
cmp
leave
sahf
mov
xchg
out
inc
jge
jb
imul
dec
jmp
mov
xor
sbb
jg
out
mov
enter
cmc
cmp
andb
mov
mov
out
mov
and
out
aas
mov
mov
inc
push
stos
push
std
sub
lods
ljmp
ret
jle
pop
cmp
cwtl
leave
insb
dec
pop
jo
les
repz
jo
out
lds
cs
fimuls
mov
jl
cmp
shl
mov
cmp
jle
fnsave
xor
cld
push
or
movsl
mov
ja
push
pushl
cmc
lahf
add
and
idivb
mov
add
fisubl
addr16
outsb
mov
sbb
mov
xlat
xchg
or
mov
sbb
cmp
cmpsl
scas
mov
decl
shufps
cmp
mov
pop
adc
inc
mov
push
push
xchg
popf
pop
out
add
inc
cmp
cli
dec
xchg
pop
dec
jnp
and
jl
xchg
jp
xchg
add
inc
test
dec
loope
xchg
or
aas
es
sub
mov
push
lcall
jl
push
sub
pop
jno
and
fwait
sub
inc
rcr
pop
inc
xchg
testl
nop
jb
xchg
cmc
mov
pop
cwtl
js
imul
pop
dec
xor
mov
clc
je
orb
mov
mov
pop
movb
push
xor
inc
and
push
idivl
leave
clc
jmp
out
xchg
push
je
cs
filds
mov
lret
lret
scas
pop
sub
push
push
adc
fucomip
pop
test
mov
fisttpl
or
dec
cmpsl
push
icebp
les
inc
dec
lret
cmp
push
inc
sub
cmp
daa
pushf
sub
imul
mov
fidivrs
out
test
ss
aaa
dec
cmpsb
fucomip
insl
sub
stos
xor
addr16
call
orl
stos
lods
mov
mov
jae
cmp
and
xchg
dec
adc
nop
insb
xchg
mov
jbe
fnstenv
mov
insb
inc
fstpt
sbb
push
mov
repz
std
sub
hlt
je
in
lcall
cmp
lea
jo
mov
or
jl
dec
adc
xchg
jl
xchg
cmpsl
mov
dec
popa
cmp
in
imul
sbb
pop
inc
sbb
movsb
xchg
rorb
fldcw
out
jnp
cmp
les
jno
xor
insl
mov
lret
in
cmp
inc
dec
rolb
cld
out
movsb
xlat
insl
pop
xor
ljmp
sar
jle
lds
or
sbb
sbb
mov
andb
pop
and
jae
dec
push
ljmp
pop
mov
les
push
push
out
dec
mov
xchg
movsl
xchg
push
dec
xchg
sti
xchg
es
sbb
or
in
bound
sbb
adc
lods
jmp
adc
test
outsl
int3
push
and
das
cmp
and
rcll
xor
push
push
out
std
jle
and
dec
push
repnz
rorl
pop
lods
aaa
sbb
and
xchg
das
xchg
and
pusha
outsb
mov
test
cmp
push
fisttpl
movl
test
pop
mov
mov
iret
and
add
dec
nopl
xchg
mov
xor
jno
push
lret
fistps
popf
sahf
mov
mov
das
adc
mov
lea
addr16
test
dec
mov
lods
gs
stc
repnz
jmp
insb
inc
daa
ds
sbb
add
jmp
or
shl
add
xchg
adc
testb
push
jns
fldlg2
and
push
xchg
cltd
inc
shrl
into
mov
jo
push
gs
int3
outsl
adc
xchg
aam
mov
or
push
inc
mov
nop
sub
cmpsb
les
test
add
push
and
das
scas
movsb
add
lret
mov
inc
or
jg
cltd
pop
push
test
mov
call
jmp
daa
xchg
loop
xlat
xor
xlat
lret
pop
and
pop
push
dec
clc
loop
mov
fsubl
ja
xor
int
pop
inc
jge
dec
sbb
hlt
outsl
fwait
insl
inc
sahf
pop
sti
fstpl
jne
sbb
addb
pop
cwtl
push
sahf
push
into
push
sub
jmp
mov
loop
stc
and
sub
jge
jp
subb
clc
inc
loopne
mov
dec
sub
sarl
cmpl
incl
sub
cmp
xor
mov
jae
loopne
loope
pop
adc
mov
int
xor
cld
cli
lea
in
cmp
fadd
rorb
or
mov
adc
ja
mov
imul
mov
dec
subb
jge
dec
in
scas
mov
fcomps
insl
out
mov
pop
into
dec
dec
mov
inc
das
loopne
cmp
punpcklwd
pop
das
pop
mov
sar
push
xchg
mov
cld
lea
push
mov
inc
sahf
cmpsl
icebp
outsb
fsts
lcall
inc
mov
je
xor
cs
pop
cmpsl
loop
fwait
mov
leave
stc
ret
cs
jno
add
xchg
movsb
push
sahf
lods
in
sub
out
jo
adc
and
mov
sbb
jb
in
scas
rcrl
cmpsl
mov
es
js
cmp
jno
xchg
cmp
jmp
jb
fstpt
mov
lret
dec
lock
stos
mov
pop
dec
sbb
jp
rorb
arpl
mov
addb
mov
jecxz
notl
mov
push
dec
mov
dec
aaa
sub
cs
lds
jecxz
xchg
jne
out
stos
mov
decl
dec
mov
pushl
nop
add
xchg
inc
ss
repnz
mov
fcomip
pop
data16
mov
dec
lret
sbb
add
mov
repnz
pop
es
pop
mov
inc
fbld
sbb
cmpsb
fistpll
inc
adc
add
sbb
das
int3
fcmovnbe
add
xor
adc
clc
adc
in
cmp
push
mov
mov
push
rorb
mov
ja
jo
pushf
jmp
cwtl
push
jne
shl
shl
sar
mov
cmp
int
icebp
pop
inc
cld
adc
sarl
adc
fdivr
mov
pop
inc
mov
inc
fisttpll
xor
mov
or
cmpsl
sahf
lock
in
adc
sbb
pushf
fadds
lea
ds
repnz
add
mov
mov
mov
insl
cld
dec
sub
add
stc
ficomps
fimuls
xchg
out
pop
adc
mov
mov
fwait
or
pop
ret
lods
xorb
add
and
les
int3
inc
sbb
mov
sub
xor
jbe
mov
es
mov
ds
mov
stc
imull
fwait
push
loopne
sub
sbb
faddp
roll
rcll
dec
push
mov
int3
add
sub
fsubrl
lock
xor
jb
test
jae
rep
push
call
push
mov
push
lret
xor
imul
scas
jge
sub
jl
jle
adc
loope
cmpsb
mov
data16
mov
rcll
in
repnz
jno
inc
cld
jb
scas
xor
sar
push
xchg
iret
ds
or
dec
nop
clc
mov
inc
cmpsl
ror
cld
pop
ja
pushf
push
test
jecxz
xchg
mov
std
das
inc
xchg
cmp
add
push
cwtl
pop
and
stos
js
dec
fnstsw
pop
outsl
mov
cmc
fcoms
lods
dec
mov
shll
or
cmp
shrb
out
jecxz
ret
ret
mov
sahf
mov
in
or
sub
xor
xchg
fnstcw
lock
loopne
xor
stos
cmp
dec
lock
add
in
data16
repnz
pop
scas
rcrb
cwtl
mov
ss
cmp
cmpsb
push
gs
pop
xchg
cwtl
bound
mov
sbb
inc
fimull
icebp
scas
pop
xchg
push
loope
pop
push
mov
fs
sbb
testb
add
mov
mov
jge
cmp
mov
aad
mov
fimull
sbb
repz
sub
push
stc
sbb
push
push
sti
stos
push
xchg
pop
scas
lahf
dec
add
inc
inc
or
lret
pop
les
xchg
push
in
call
mov
jnp
into
dec
add
imull
lcall
cmp
loopne
add
cli
movsb
cmp
test
or
outsl
fimuls
pop
push
lahf
jbe
lds
enter
out
mov
fstpl
mov
sbb
inc
pusha
les
jle
mov
fcompl
jp
adc
cmp
addr16
and
sbb
cmpb
daa
xchg
ljmp
inc
out
and
mov
lds
clc
ret
sbb
fcmove
ds
sbb
mov
int
cmp
lcall
mov
jl
push
cmp
push
mul
scas
insl
mov
mov
and
aam
jge
xchg
sbb
mov
push
es
push
sub
add
mov
test
incb
test
dec
mov
lret
add
fsubs
out
cs
jb
mov
stos
add
mov
cmpsb
sbb
inc
sahf
push
int3
or
call
or
jnp
mov
adc
push
stos
leave
out
xchg
inc
and
or
jmp
addr16
cmp
out
frstor
int3
std
ret
test
pop
jp
rcrl
stc
test
push
nop
outsl
push
and
jge
call
out
add
push
sbb
xchg
stc
aas
inc
and
and
xchg
mov
sbb
xchg
negl
jl
mov
fstps
inc
mov
adc
push
jl
outsl
stc
mov
add
add
cmp
ds
push
sub
sti
sbb
cmpsl
scas
sbb
loop
adc
cwtl
sub
sbb
push
inc
imul
cld
js
and
movsb
notb
and
aaa
jge
popw
repz
jle
xchg
xor
mov
lds
addb
stc
shrb
xor
test
mov
pop
pushf
xlat
lcall
roll
pop
lods
dec
or
mov
lret
test
call
sbb
adcl
cmpsl
fnstenv
fdivr
inc
jmp
jno
jnp
cmp
cmpl
sub
push
add
test
xchg
mov
jns
ficoms
mov
add
out
loope
push
lods
dec
clc
mov
push
and
add
xor
or
imul
jo
mov
imul
in
cmpsb
dec
push
adc
jbe
mov
lds
sbb
out
mov
cmp
cld
sbb
mov
shrl
insb
sti
xchg
cmp
loop
sub
or
scas
adc
dec
sbb
movsb
iret
add
cmp
pop
jb
add
shlb
pop
jbe
jne
mov
pusha
jmp
dec
sbbl
sub
lock
loope
pop
pop
int
jecxz
or
sbb
and
sub
push
popl
lret
test
sbb
imul
icebp
dec
dec
lock
cmp
sub
jnp
adc
inc
stc
and
in
jge
repnz
nop
stos
loop
or
bound
aas
cmc
sbb
jg
cmp
ljmp
fsubrl
pop
xchg
xchg
data16
mov
addl
fimull
dec
and
push
mov
jb
loope
pmulhw
nop
mov
mov
fidivl
sahf
lcall
cli
and
add
sub
outsl
sub
out
xor
and
aam
adc
adcb
dec
andl
ret
loopne
lcall
fstps
mov
pop
std
lret
push
test
xor
test
fucomp
fidivrl
adc
adc
iret
cmpsl
test
data16
fsubrs
dec
popa
push
lcall
jne
and
test
imul
mov
mov
xchg
test
jb
sub
mov
or
scas
lret
adc
pop
mov
add
lcall
das
shrl
aad
mov
or
ss
sbb
push
mov
pop
mov
mov
sbb
pushl
dec
and
fs
jns
mov
adc
xlat
cltd
pop
mov
inc
div
xchg
adc
pop
out
repnz
pop
lret
mov
add
or
inc
rolb
mov
rol
jmp
pop
js
lods
push
repnz
loopne
or
aam
push
dec
stos
fimuls
ret
sub
leave
imul
pop
adc
jns
fldt
popa
lea
jle
mov
leave
and
or
int
sub
mov
sbb
jne
push
out
cli
jmp
inc
or
ss
jmp
jbe
lret
sub
pop
mov
mov
mov
shlb
xrelease
gs
fmull
cmpsl
xor
sub
xor
adc
cmp
mov
mov
and
iret
repnz
jbe
dec
aaa
cmpsb
fsubrl
cmp
loop
in
cwtl
mov
sbb
popa
and
lret
push
lret
add
sub
cs
ljmp
mov
pop
flds
pop
pop
mov
enter
icebp
push
mov
cmp
leave
sbb
mov
lahf
mov
or
push
adc
enter
mov
inc
jle
sbb
jno
nop
push
stc
test
and
and
sub
loopne
in
mov
std
push
sbb
js
sbb
leave
pop
les
cmp
and
rorl
xchg
add
out
inc
xor
insl
cmp
pop
es
clc
lods
inc
mov
stos
clc
mov
out
jo
cmp
idivb
dec
adc
pushf
fldt
loop
mov
ljmp
dec
std
mov
aaa
push
mov
pop
pushf
jg
cmp
ss
sbb
aaa
dec
popf
jge
and
mov
inc
enter
adc
xchg
rcll
out
xchg
stos
xchg
mov
dec
subl
setb
out
ja
adc
mov
mov
shrl
lret
mov
andb
cmpsb
mov
sub
adc
xor
mov
mov
movsl
rcrl
cld
push
cmc
push
sbb
mov
xor
jp
jmp
add
insl
pusha
push
add
or
push
xor
xor
mov
int3
leave
aam
mov
andb
xor
inc
in
ret
sbb
shlb
inc
les
loopne
rcrl
xchg
adcb
lret
xchg
insl
ja
out
lret
and
add
lock
jbe
mov
popa
xchg
das
mov
xchg
xchg
jbe
in
std
popa
inc
sub
lret
push
out
rcrl
sub
push
sub
or
iret
adc
xchg
outsb
repz
mov
sbb
inc
inc
sub
scas
or
ds
in
decb
mov
sbb
xchg
xlat
ret
scas
cwtl
lods
sti
lahf
cmp
or
movsl
xor
mov
ret
pusha
add
mov
fwait
jmp
mov
add
push
insb
test
fstps
xchg
int
xchg
stos
mov
cmc
dec
add
rorl
lcall
enter
jbe
rolb
inc
mov
rcl
jmp
sahf
rolb
cmpsl
sub
movsb
mov
dec
pop
in
lods
mov
adc
cltd
pop
jl
dec
mov
fistpll
mov
addr16
xor
nop
aas
in
pop
cmpsl
fs
ja
out
js
addr16
cmpsb
mov
add
jo
mov
mov
call
dec
cmp
dec
nop
inc
ljmp
movsb
sbb
mov
push
and
mov
and
das
mov
or
push
jmp
shrb
dec
aaa
inc
adcl
mov
repnz
popa
dec
or
insl
xor
pop
in
add
fimuls
sub
inc
sub
pop
add
push
incl
mov
jge
push
fsubr
fsubs
adc
xchg
push
scas
mov
cs
loop
pop
pop
cwtl
jmp
jne
stos
sbb
inc
jecxz
fimull
ret
stos
js
dec
arpl
dec
add
push
hlt
lret
sbb
fnstcw
sub
dec
jp
enter
adc
sub
cmp
test
and
mov
push
in
add
mov
cmp
cmp
ret
pop
push
neg
and
push
pop
std
mov
push
pop
push
gs
popf
test
gs
mov
inc
bound
aas
xchg
pop
frstor
sbbb
out
cltd
sbb
lea
in
shl
stc
sbb
mov
and
pop
in
ja
cmp
sbb
sarl
and
rcll
jb
push
push
push
dec
aad
xor
scas
add
sbbb
lods
ljmp
push
rolb
lds
leave
xlat
add
adc
and
fwait
insl
into
mov
xchg
jmp
ret
cmpsb
xchg
ljmp
test
dec
jmp
mov
aaa
jne
bound
mov
or
push
push
insl
jns
es
mov
and
cmp
test
pop
mov
fisttps
decl
and
push
jge
pop
mov
or
mov
ror
xor
or
mov
int
cmp
jb,pt
mov
add
xor
and
mov
insb
sub
mov
push
push
xchg
sub
pop
sbb
ds
mov
es
pop
dec
inc
xchg
into
fidivrl
jp
sub
cs
pop
sub
jg
test
fsubs
lods
push
pop
adc
mov
inc
add
push
or
lods
clc
stos
inc
lcall
mov
xor
adc
scas
mov
loope
insb
and
dec
push
insl
push
inc
jmp
testb
xor
push
loopne
repnz
pop
pop
jp
enter
sbb
stc
cmp
bound
add
ror
xor
sbb
dec
jp
adc
or
dec
repz
sbb
sbb
mov
xchg
push
dec
int3
fs
sbb
lock
sub
sub
pop
divl
sbb
pop
cmp
popa
out
xchg
icebp
jp
sub
push
xchg
les
outsl
lock
inc
nop
xorb
mov
cltd
or
mov
mov
xor
ja
sub
mov
xchg
dec
jbe
cltd
loopne
mov
xor
aaa
insl
movsb
push
je
add
jg
sub
push
nop
mov
in
add
mov
jle
cwtl
aad
loop
adc
inc
xchg
sbb
push
dec
leave
adc
sub
add
jne
jle
push
aad
dec
or
xchg
test
pop
mov
push
fsts
pop
jae
repnz
jae
stos
andl
rcrb
mov
or
add
ds
fcomps
xlat
lock
or
xchg
jp
gs
jno
pop
out
or
nop
stos
and
pop
pop
sub
stos
jmp
mov
scas
and
cmp
and
test
jecxz
xor
mov
lods
movsl
sbb
sub
push
in
cmp
mov
jle
loope
xor
in
cmp
inc
jle
mov
iret
dec
mov
push
sahf
add
imul
es
or
pop
mov
cld
jle
test
out
sub
cmp
inc
mov
int
and
dec
idivl
mov
xchg
jae
movsb
js
cwtl
lea
jns
test
sbb
and
rorb
mov
dec
mov
sbb
orb
jecxz
into
imul
hlt
in
les
and
aaa
lods
sub
fcoms
add
into
lea
fsubrp
xor
test
jb
xchg
xor
and
loop
mov
dec
mov
cli
pop
roll
addr16
orb
jb
xorb
xchg
cmp
int
inc
popa
cmp
lea
push
mov
sbbb
repnz
or
cwtl
cmc
incl
jnp
movsb
hlt
sub
and
stc
shrl
or
push
out
jp
pushf
cmp
int3
xlat
sub
mov
adc
jecxz
pop
pushf
sub
jge
loopne
in
push
inc
mov
add
roll
mov
push
adc
ret
inc
inc
xor
mov
cmp
pop
mov
mov
push
pop
dec
xor
adc
mov
xor
int
inc
sub
es
inc
and
add
or
into
loop
mov
inc
inc
inc
sbb
fcompl
sbb
xchg
and
push
xlat
pop
push
xor
mov
push
mov
scas
cmp
into
add
mov
jne
fsubrs
dec
outsb
push
inc
cs
testb
daa
decb
mov
mov
sub
jae
mov
out
sub
rorl
xchg
xchg
xor
data16
push
sbb
in
adc
jl
inc
pop
mov
or
mov
and
inc
xchg
mov
aam
push
and
fdivp
push
in
std
push
rol
sbb
xor
sbb
dec
sub
and
loop
imul
xor
or
stc
aad
stos
fildll
sbb
or
sbb
xchg
je
imul
cld
ds
pop
insb
bound
jecxz
out
fsts
mov
loopne
sahf
cwtl
shlb
test
sbb
sbb
inc
lea
mov
out
push
shll
add
jge
les
sub
mov
and
inc
mov
popf
dec
rorl
mov
out
pusha
mov
addl
in
jno
mov
ljmp
repnz
pop
push
sbb
mov
popa
aaa
xor
into
icebp
stos
test
ret
or
lahf
dec
data16
sbb
icebp
repz
imul
lods
sbb
mov
jae
aas
outsb
rcrb
mov
test
cmp
adc
bound
add
imul
icebp
out
lods
jle
rorl
xlat
mov
sub
cmc
mov
pusha
push
mov
negl
test
jae
jns
pop
xor
je
sbb
lcall
daa
cmpsl
sub
stos
xchg
and
sbb
stc
fs
inc
jbe
jecxz
add
add
notb
clc
mov
adc
nop
push
insl
in
pop
fisubl
pusha
stos
fdivr
test
mov
andb
dec
in
outsb
cwtl
and
pushl
xor
lahf
and
insb
mov
arpl
test
subb
xchg
or
mov
clc
pop
or
push
add
lret
pop
rorb
lahf
lret
push
xlat
imul
mov
in
mov
les
fwait
inc
shrb
lock
sahf
push
outsb
enter
xchg
cmp
out
filds
flds
rol
mov
cmp
es
daa
insl
xor
jno
inc
add
jne
inc
mov
data16
cld
sbb
jge
lea
mov
xchg
pshufw
add
or
mov
push
inc
out
lahf
into
outsl
jle
cmp
jg
adc
ret
iret
xchg
test
and
add
pop
mov
mov
imull
loop
sbb
cmp
jo
mov
add
ds
or
jae
lcall
xor
into
add
scas
mov
dec
sub
pop
adc
sbb
sbb
shlb
dec
outsb
add
xchg
sbb
hlt
jnp
repnz
sbb
or
insb
jl
loop
cwtl
inc
cmpsl
aas
mov
cmp
cltd
in
pop
cmp
xlat
adc
xlat
mov
pop
mov
mov
adc
popl
push
pop
aad
adc
dec
sbb
pop
ret
mov
pop
push
xchg
sub
ds
ja
mov
and
inc
xlat
into
in
popf
push
loop
xor
rcl
pop
and
xor
push
iret
subb
jle
pop
cs
adc
rol
iret
loopne
push
das
dec
inc
adc
sub
pop
movsb
sahf
daa
pop
testb
mov
ss
inc
jbe
popa
push
jns
outsl
fbstp
lret
xchg
push
cmpsl
aad
mov
inc
push
mov
mov
mov
leave
in
dec
cld
sbb
sub
and
iret
fidivrl
stc
subl
mov
fdivrs
sub
mov
rolb
ret
adc
orl
cld
sub
mov
popf
std
dec
outsb
sbb
ret
xor
adc
jno
movsl
aam
mov
mov
loopne
sarb
fcoml
or
imul
ja
mov
cs
and
cmpsl
out
jns
es
mov
xchg
lods
popa
jnp
shll
bound
and
sub
pop
sbb
pusha
push
jl
dec
insl
lds
sub
ljmp
mov
and
xor
adc
mov
addl
mov
xchg
dec
std
cmpsl
inc
pop
mov
jno
stos
mov
push
ret
int
hlt
pop
jp
lock
xor
sarb
out
adcl
push
jbe
cmp
iret
mov
popf
hlt
outsb
jl
mov
out
dec
mov
jno
jge
and
sub
scas
je
xor
clc
push
mov
mov
jo
daa
mov
scas
and
push
and
mov
addr16
ljmp
xor
rcll
dec
incb
sbb
mov
pop
or
mov
xor
cs
cmp
bswap
pop
dec
and
adc
movsl
dec
jo
mov
push
in
jne
pop
mov
adc
ja
movsl
adc
and
jg
push
dec
adc
push
xchg
les
rcrb
loopne
or
xorb
iret
repz
sbb
aad
cmp
aam
sub
jbe
cmp
sahf
hlt
mov
pop
jmp
mov
sub
push
das
imul
pushf
cli
mov
ret
mov
sub
mov
jge
sub
lret
arpl
insb
rol
mov
xor
dec
pop
sub
mov
mov
inc
lcall
popa
xor
xchg
das
dec
lock
fnsave
push
shrb
xchg
call
mov
bound
xchg
out
iret
enter
fldl2e
fidivl
and
dec
jne
out
mov
in
sbb
or
outsb
js
jo
mov
js
cltd
mov
add
mov
or
mov
cmpsl
xor
push
shll
push
pop
cli
xor
xchg
push
pop
lret
xorb
xor
data16
sbb
mov
lahf
cmp
stos
mov
and
push
lock
adc
fxch
lods
jmp
push
dec
out
icebp
lods
jb
pcmpgtb
push
pop
pop
out
push
sub
inc
cmp
mov
sti
cmp
xor
lds
push
fstps
push
and
add
push
mov
adc
cwtl
icebp
cwtl
idivl
rorb
jmp
repz
rolb
ss
jne
jle
or
dec
sub
push
stos
fmull
ss
sahf
gs
xchg
sbbb
cld
mov
jge
jecxz
rol
call
push
dec
aas
add
into
stc
dec
ja
scas
mov
out
arpl
cmp
in
push
sar
pop
mov
fcomp
cltd
cld
sbb
pop
dec
ljmp
loope
add
jae
jns
les
lods
sub
pop
lret
sbb
rorb
repz
add
dec
xchg
add
popf
rolb
mov
adc
stos
sub
jg
repnz
mov
dec
fsts
cmpsl
cmc
fwait
ja
add
push
pop
int
fidivs
outsl
pop
shll
and
xchg
pop
ss
std
add
add
sub
sbb
mov
or
mov
push
mov
jae
outsb
and
lock
ret
lret
in
aas
enter
dec
mov
jecxz
addr16
xor
mov
fdivl
in
sbbl
pop
shl
add
gs
adc
cltd
jge
int
nop
sahf
loopne
in
out
xchg
sti
adc
dec
xabort
xchg
rcrl
or
push
mov
stos
and
and
inc
and
xor
sbb
popa
or
xchg
cmp
xchg
pop
negb
aad
aad
shll
leave
clc
sub
xorb
jnp
fidivrl
xor
xor
shrl
cli
push
loopne
sbbb
stos
mov
push
jp
lret
or
cmp
mov
dec
repnz
fisubrs
loopne
ss
lds
pop
jl
mov
rcr
fisttps
xchg
inc
jg
out
insl
jo
dec
push
fbstp
add
gs
mov
out
mov
add
xor
mov
inc
sub
add
movsb
je
fwait
lea
inc
fs
jp
push
or
leave
dec
jl
xchg
mov
ds
negl
jnp
xor
sbb
bound
cmp
mov
stos
pop
fidivrs
mov
sbb
push
ss
pop
pop
push
popa
cmp
mov
sahf
aam
incb
scas
clc
adc
test
xor
push
popf
xchg
fstpt
gs
jl
sub
pop
sbb
mov
adc
inc
xchg
je
pop
das
inc
gs
daa
lds
and
pop
cmp
sub
and
clc
data16
fisttpl
mov
out
jne
and
ja
stos
push
pop
in
adc
aaa
outsb
add
push
push
cmp
or
outsb
mov
inc
fldenv
in
cmp
lods
jg
repz
mov
and
xor
pop
insl
hlt
mov
cmp
adc
in
in
pop
pop
insl
fs
add
je
dec
cmp
xor
dec
lcall
dec
xor
dec
repnz
out
sub
mov
daa
mov
test
jo
adc
insb
ja
push
add
mov
and
mov
pop
jge
inc
gs
stos
in
jecxz
adc
mov
sarb
rcr
jno
faddl
fmull
push
pop
pop
sub
cmp
xchg
pop
bnd
add
sub
xchg
sub
inc
add
decl
add
pusha
out
sub
xlat
out
jmp
mov
fistpl
sub
inc
push
jbe
dec
add
into
and
pop
sub
fiadds
roll
repz
addl
push
dec
and
add
aam
add
xlat
ret
scas
clc
shrb
hlt
bound
xchg
cmp
into
leave
sarb
push
mov
cld
dec
popa
or
repz
test
mov
pusha
ficompl
jae
cltd
pop
add
push
mov
sarb
dec
in
loopne
filds
inc
adc
mov
or
enter
incl
jle
movsl
popf
stc
and
cmp
adc
sbb
inc
xchg
or
out
mov
lcall
jnp
enter
aaa
sub
jl
add
add
movsl
xchg
dec
sbb
mov
push
lds
sub
repz
add
shrl
pop
lret
notb
dec
std
sub
and
js
sbb
je
cmp
jle
loop
xorb
jge
mov
mov
and
jle
inc
sti
mov
cli
and
psrad
mov
and
add
push
mov
jecxz
xchg
jns
popf
repnz
jbe,pn
sbb
in
or
add
mov
mov
mov
aad
mov
or
jg
dec
das
stc
jmp
mov
xorl
jbe
inc
mov
dec
mov
insl
setne
adc
sub
cmp
pop
mov
jae
sarl
movsl
pop
out
vminpd
outsb
mov
sahf
push
sub
jle
cwtl
add
xchg
imul
and
jne
xchg
lret
rol
mov
pop
inc
test
lcall
jecxz
xchg
pop
clc
insl
xlat
or
xor
test
pop
nop
je
cltd
jle
mov
cmpsl
push
or
aam
nop
or
pop
xor
icebp
lods
lcall
jae
ret
jno
mov
and
imul
mov
or
mov
loope
shrb
mov
mov
jl
inc
sub
mov
sub
pop
push
or
repz
ljmp
sbb
in
lock
fs
out
sti
xor
test
sbb
mov
or
pop
inc
popf
loopne
mov
cltd
nop
test
hlt
sbb
cmp
arpl
mov
cmp
lcall
xorl
push
repz
fsts
xchg
xor
cmpsl
sub
jne
adc
cmp
rcrl
add
sub
out
mov
movsb
scas
lea
hlt
sub
add
push
subl
push
jnp
jecxz
and
jne
sub
lods
subl
mov
sub
mov
fnstenv
push
xchg
decl
in
aam
aam
mov
mov
or
and
mov
mov
outsl
mov
xchg
pop
lret
add
adcb
mov
test
sub
mov
je
push
js
dec
xchg
mov
push
or
fiaddl
pop
inc
in
adc
jle
push
push
in
and
xor
pop
inc
mov
jp
rol
inc
pusha
add
les
into
imul
jae
in
movsb
mov
xor
fmul
jae
jp
jo
sbb
cmp
fstpt
jmp
pop
scas
clc
pop
rcrl
ret
aam
aas
dec
das
sbb
mov
dec
ret
pushl
xchg
cmp
pop
mov
jmp
test
mov
fcomp
scas
mov
sub
sub
call
and
pop
lret
mov
xchg
adc
stc
lods
jg
or
or
adc
test
push
mov
rcr
fistpll
sbb
outsb
xchg
sti
mov
and
cmpsl
gs
pop
into
fs
adc
cmp
repnz
test
mov
mov
daa
jbe
bound
in
rcll
vmwrite
lahf
clc
sub
inc
fistps
ret
adc
call
daa
and
xchg
stos
divl
rcrl
mov
adc
mov
sbb
or
mov
gs
insb
xor
out
js
lret
aam
sbb
aam
adc
out
cli
cmp
mulb
add
outsl
and
fimuls
sbb
pop
in
gs
dec
je
xchg
sbb
xlat
sbb
jp
push
pop
mov
xor
dec
jne
or
fs
fcmovnu
jne
push
push
inc
mov
sets
cmp
ret
mov
dec
sub
jne
mov
push
sbb
shlb
and
jo
add
inc
and
cld
push
mov
push
aad
mov
add
out
inc
lea
fwait
mov
cmp
sub
cmc
out
lcall
loope
gs
cld
jae
xor
push
inc
cmp
imul
dec
xchg
jecxz
stc
aad
pop
popf
xchg
pusha
in
jle
bound
sub
roll
push
mov
fimuls
jp
fchs
sub
or
in
das
ficompl
cmp
push
cmp
inc
es
cmc
push
xor
push
adcl
icebp
fwait
push
scas
push
rclb
push
pop
xor
push
cwtl
loop
std
cmc
loopne
shll
gs
fiaddl
ljmp
xchg
cmp
sub
sbb
fildl
test
cmp
addb
mov
insl
imul
xlat
frstor
xchg
aaa
mov
or
js
daa
cmc
daa
ds
push
ss
or
dec
inc
sti
repz
jmp
and
aaa
dec
push
and
push
jg
xchg
cwtl
scas
push
push
lea
mov
add
fiadds
fstps
shr
mov
xchg
cmc
add
lods
cmp
imul
inc
mov
cltd
outsb
nop
dec
sub
int
inc
add
int
pop
push
orb
cmpsb
aaa
jmp
loop
jmp
cltd
sub
lcall
jno
sbb
out
adc
cmp
scas
dec
fistl
popl
pop
jmp
dec
lea
lods
and
mov
xchg
fs
xor
jo
leave
cltd
pop
pop
or
add
add
stos
lock
xor
and
aaa
daa
cwtl
xchg
and
mov
jg
lcall
rcll
jle
arpl
les
xorl
rolb
mov
bound
loop
cmp
sub
mov
add
movsl
push
jnp
push
sbbb
adc
iret
fisttpll
mov
scas
outsb
pop
test
stos
fiaddl
cwtl
repnz
pop
mov
iret
test
aaa
mov
das
mov
inc
addb
push
popf
mov
mov
rcr
pop
in
aaa
stos
mov
sub
loopne
pop
scas
pop
sti
leave
sub
pop
out
call
mov
inc
mov
push
int
sbb
sub
jae
cltd
cmp
fcmovne
jae
out
sub
outsb
scas
icebp
movsb
pusha
lods
sbb
cwtl
jbe
sbb
sahf
cs
fs
stos
out
sarb
mov
dec
xchg
insl
insb
mov
sub
cwtl
andl
sub
les
sub
arpl
lods
ret
int3
and
push
shll
out
fs
scas
scas
pop
pop
stos
pusha
mov
add
shr
clc
push
idivl
into
mov
mov
inc
adc
cmpsb
sub
dec
loope
fsubl
and
mov
push
movsl
movsb
jecxz
stos
negb
dec
push
loop
stos
icebp
xbegin
fbstp
mov
and
xor
mov
mov
add
inc
gs
and
outsl
leave
mov
test
jmp
fimuls
adcl
call
mov
adc
push
xchg
adc
stos
mov
lods
jecxz
aas
mov
std
fcoms
mov
cmp
inc
dec
jg
push
cmp
sbb
mov
fiadds
mov
pop
or
inc
in
inc
daa
sbb
mov
sbbb
test
sbb
les
mov
xchg
cmp
mov
shrl
sbb
je
push
push
scas
aad
mov
mov
scas
cmp
nop
mov
nop
sbb
sbb
das
xchg
inc
mov
xchg
fists
insl
int3
dec
xor
jge
push
jecxz
pop
idivb
es
cmpsl
push
movsb
cli
jle
mov
or
jns
push
out
ror
dec
repnz
addr16
repnz
mov
repnz
test
fstps
cwtl
cmp
psubsb
fmuls
lahf
xor
add
or
adc
je
add
js
sbb
int3
jne
pop
inc
push
inc
int
mov
stos
mov
test
lcall
int3
out
popf
outsb
iret
lret
xchg
push
inc
lods
jbe
js
cltd
cltd
xor
imul
leave
mov
loopne
dec
data16
ret
enter
fwait
sahf
jle
lds
int3
lods
xor
int
jne
add
mov
dec
sarb
bound
inc
les
js
jl
outsb
dec
xchg
out
sbb
pop
sbb
sbb
pop
sub
insb
push
jnp
mov
jno
and
cmp
sarb
aad
test
mov
jbe
cmp
lea
sahf
push
mov
jb
inc
out
sub
push
or
sahf
push
addr16
stc
bound
in
movsl
ret
aad
out
push
repnz
dec
xor
sti
push
das
mov
add
loope
push
sbb
sbb
stos
mov
sbb
mov
arpl
addl
cli
into
addr16
movsb
xchg
jbe
incl
aas
push
push
ror
mov
mov
jl
mov
mov
mov
mov
orl
inc
js
in
xchg
add
aas
cmp
out
or
xchg
test
xchg
ds
dec
adc
xchg
inc
xor
loop
jae
lahf
popf
and
test
adc
lret
push
sub
sbb
outsb
inc
andb
xchg
pop
pop
shll
sbb
xlat
rclb
mov
and
xchg
adc
gs
sbb
and
sti
mov
sub
shrb
sbb
ljmp
test
lods
fstl
in
fldenv
sti
out
gs
sbb
mov
jle
sbb
inc
icebp
xchg
fwait
or
aaa
mov
mov
fwait
pop
cwtl
gs
arpl
das
dec
adc
adc
mov
cmp
inc
fmul
int
mov
stc
iret
hlt
dec
ds
pop
cli
jb
push
loop
pop
and
or
pop
sbb
je
roll
mov
nop
lds
les
push
stos
out
cwtl
cltd
sahf
repz
in
shlb
hlt
jp
cmp
cmc
mov
sub
hlt
mov
popf
lret
adc
cmp
add
mov
jbe
cld
jno
jecxz
gs
repz
xchg
push
int
inc
jo
cmp
int3
pop
add
dec
popl
push
in
push
test
addr16
fiadds
neg
inc
or
lods
dec
repz
out
hlt
add
mov
popf
dec
test
das
pop
jb
fildl
cmp
rcl
mov
sub
adc
iret
out
dec
push
pop
into
rcll
out
mov
call
dec
jne
xchg
ja
mov
mov
jle
icebp
xchg
std
mov
pop
mov
xor
nop
lock
pop
xor
mov
pop
xor
inc
js,pn
jmp
adc
mov
js
mov
outsb
shrb
push
cmp
fidivrs
lret
jge
cmp
into
movsl
in
bound
push
or
pusha
adc
pop
icebp
cmp
call
int3
mov
lahf
mov
test
fstl
push
mov
daa
popf
mov
add
idiv
imul
jnp
xchg
in
aaa
les
lret
inc
adc
or
and
push
outsb
loope
jo
gs
fstps
sti
rcll
std
data16
lock
cmc
jp
push
pusha
xchg
enter
in
shll
add
inc
out
lcall
pop
adc
loop
mov
outsb
aad
xor
mov
lds
dec
sbb
xchg
loopne
push
fsubr
sub
lods
xchg
mov
mov
mov
imul
mov
repnz
dec
rorl
sti
out
test
push
jns
out
lret
dec
cmp
movsl
fcmovb
clc
inc
cli
mov
xor
insl
rcll
xor
adc
lahf
and
cmp
xchg
push
cmp
divb
mov
mov
xor
cmp
ja
lret
push
ret
out
imulb
xor
insl
cld
push
pop
push
sub
jns
cmpsl
lods
scas
repnz
dec
frstor
mov
adc
sub
mov
call
push
cmpsl
pop
fidivl
jg
arpl
or
imul
push
movl
vaddpd
dec
sub
aaa
popa
or
pusha
mov
xor
pop
inc
or
sub
hlt
xchg
jge
rcrl
in
movsb
pop
test
mov
into
add
loop
mov
loop
jo
jb
xor
daa
aam
jnp
or
ljmp
lret
inc
add
jge
andl
in
push
jbe
hlt
aas
jl
out
jg
and
loope
mov
adc
andb
ds
xchg
and
lods
xchg
or
cs
fidivs
enter
push
mov
bound
jae
xchg
ds
adc
mov
cld
pusha
lods
lock
js
int3
lret
push
add
int
fs
aaa
inc
stc
push
inc
std
popf
scas
and
pop
sbb
mov
push
lahf
insl
sbb
inc
mov
int
lea
mov
aam
inc
xchg
and
pop
mov
push
cmpsb
ljmp
mov
xor
mov
and
int3
inc
sbb
addr16
dec
adc
rclb
repz
mov
push
add
pop
pushf
movsl
out
sub
xor
sbb
decb
inc
mov
in
sti
mov
pop
frstor
call
sbb
push
adc
mov
mov
xchg
adc
ds
jge
fidivrl
fidivl
or
movsl
rcrb
mov
sbb
or
or
ljmp
outsb
rcll
xlat
lret
jge
add
push
repnz
in
inc
notl
sub
dec
fistps
ss
xor
rcl
dec
mov
sbb
jbe
lock
inc
sti
push
arpl
out
pop
icebp
test
mov
aam
or
push
pusha
inc
pop
sub
mov
xor
outsb
andl
xor
cwtl
rolb
int
xor
inc
sub
inc
mov
repz
rcrl
lcall
insb
data16
push
mov
sbb
stc
imul
daa
inc
andl
scas
lcall
pop
or
inc
pop
lcall
sub
push
rol
scas
stos
jns,pn
dec
ss
mov
add
pop
mov
jmp
xchg
ficompl
adc
push
adc
scas
push
pop
mov
repz
inc
add
sub
ret
jg
out
enter
ja
pop
inc
hlt
sub
push
int
clc
and
mov
jns
jae
gs
mov
stc
or
xlat
cmp
or
inc
add
sub
mov
pop
ret
cwtl
test
out
add
fisttpl
push
aam
add
fildl
xchg
fwait
lea
cli
andl
and
rcll
mov
in
xchg
ja
mov
in
or
xor
push
fld
jnp
add
fs
aad
xchg
adc
bound
test
subl
lods
push
cmp
sarb
pop
mov
jno
pop
jecxz
cmp
imul
dec
sbb
xor
xchg
cmc
mov
xor
push
xchg
stc
notb
lret
aas
repz
mov
jmp
iret
push
mov
out
pop
outsb
sub
pusha
cmp
aad
popf
adc
loopne
inc
pop
mov
jno
lods
xchg
adc
out
out
jg
rol
and
push
imul
mov
fidivrl
push
sbb
jp
ja
cmpl
adc
lret
stc
inc
mov
mov
stos
or
pop
sbb
int3
and
push
lods
pop
xchg
js
xor
inc
lods
std
inc
xor
inc
repnz
mov
mov
add
les
pop
cmpsl
or
xchg
adc
clc
icebp
push
cmpsb
xorps
addr16
push
adc
mov
dec
stos
sbb
xor
sti
imul
xor
int
xchg
xchg
and
sub
add
loopne
jae
cmpsl
lea
sbb
rol
iret
subb
cs
sarb
push
lcall
sub
push
sbb
sbb
pop
nop
sbb
sub
dec
sti
movsb
jg
ljmp
aam
int3
fildl
in
jle
push
jecxz
pop
pop
inc
std
xchg
test
shlb
pop
fcompl
add
clc
and
daa
in
and
jecxz
sub
adc
test
sub
jmp
pop
push
push
icebp
pop
cmpsl
or
push
mov
lcall
inc
adc
xor
add
sub
test
ds
repnz
xor
xor
xchg
leave
sub
rcll
loop
movsl
into
int
cmpsl
ljmp
xorl
pushf
xchg
mov
outsb
push
mov
aam
lea
ds
cld
fucom
adc
test
cmp
push
jae
mov
rcll
cli
fmul
xor
push
imul
sub
ret
dec
aas
adc
into
push
jle
fs
data16
int
pop
jmp
fidivl
dec
sbbb
jmp
hlt
mov
fisttps
movb
jb
sbb
jne
cmp
das
rcll
mov
rolb
cmp
add
xor
jbe
and
in
mov
in
std
scas
popf
in
or
stc
fisubl
fstl
aam
and
xchg
insw
push
sbb
bts
xor
inc
nop
or
mov
dec
push
push
int3
daa
fisttps
xchg
iret
dec
lret
jno
pop
cwtl
adc
push
adc
sbb
test
leave
leave
movsb
popf
stos
out
mov
fwait
repz
dec
push
insl
lock
push
pop
in
sub
data16
into
sbb
and
or
pop
mov
xchg
cmpsl
mov
pushf
or
lock
cmp
xlat
xchg
push
xchg
out
cli
insb
les
popf
xchg
ret
adc
orl
rclb
push
inc
mov
lret
test
test
aam
pushf
jmp
iret
sbb
lods
aaa
sarb
sbb
out
adc
xchg
repnz
outsl
jg
adc
scas
pop
or
fwait
sbb
loop
pop
fimull
imul
movsb
xorb
pop
lds
add
add
jle
ljmp
mov
jo
in
or
mov
pop
cmpsb
push
cmp
jno
call
data16
cmp
push
jo
ret
dec
sahf
mul
dec
shlb
clc
sahf
xor
fisubrl
mov
inc
xchg
dec
bound
dec
push
subb
push
mov
or
jle
and
xor
cmpsl
inc
mov
in
cmp
shl
mov
sbb
leave
mov
js
sub
cmp
std
sub
mov
ja
xchg
xor
pushf
lret
xchg
mov
enter
push
sub
push
jge
stos
inc
data16
jp
je
inc
pushf
clc
lret
out
clc
sarb
jp
push
adc
or
and
lods
cmpsl
out
les
and
nop
pop
cli
ds
dec
mov
sub
es
outsb
ss
cmpsl
loopne
or
popa
out
in
or
mov
imul
cwtl
out
jecxz
sub
xchg
jle
or
mov
add
push
jne
mov
es
lea
ljmp
fs
test
ror
jmp
repz
subl
imul
shrb
mov
jae
inc
bound
les
and
nop
lea
mov
nop
or
cli
sahf
inc
cwtl
xchg
addb
fisttpll
stos
push
out
cmpsb
jb
jnp
out
and
add
test
cmpb
out
sbb
and
inc
scas
push
inc
scas
movhps
leavew
xchg
cmp
sahf
fisttps
lret
mov
gs
push
pushf
jns
lock
jmp
fwait
cwtl
paddw
mov
shrl
jl
sbbb
test
adc
inc
mov
scas
dec
les
cmp
ret
std
or
scas
mov
rorb
or
lea
js
jo
mov
out
pop
fiadds
sbb
xchg
mov
negb
push
inc
sti
xlat
jb
cmpsl
xchg
mov
popa
scas
xchg
cmpsl
imul
roll
adc
push
movsb
not
jl
lock
mov
mov
mov
jp
cmp
shll
nop
cmp
inc
fsts
fiaddl
push
xor
lock
cmpb
pop
mov
call
push
inc
aam
push
movsb
add
cmp
fidivrs
sti
dec
mov
sahf
in
out
mov
pop
xorb
iret
jno
dec
sub
xorl
push
aam
mov
fstps
out
lea
gs
xor
test
pushf
cmp
rorb
ja
jmp
decl
mov
or
xchg
xor
mov
push
out
pop
lock
jae
rolb
mov
sub
fnstsw
fwait
adcl
xchg
test
hlt
sahf
xor
movsl
stc
in
and
mov
loopne
sti
xor
dec
sahf
icebp
subl
xor
in
mov
daa
hlt
pop
push
sbb
mov
adc
xor
xlat
ret
les
cmp
jno
ret
add
loope
pop
bound
xor
rorb
out
and
push
pop
sarb
dec
cmp
popa
sti
subb
xchg
push
xor
testl
data16
fnstcw
sub
sbb
jl
scas
ja
xchg
negl
mov
scas
mov
loopne
insb
add
cmc
decb
jmp
lods
xchg
cmpsl
cmc
inc
out
ja
lea
cmp
mov
push
fnstenv
jge
push
bound
cmp
pushf
pop
adc
push
xor
mov
mov
sbb
mov
push
push
sub
inc
ljmp
push
fidivrl
xchg
pop
repz
hlt
mov
mov
inc
cmp
mov
push
and
cmovns
mov
and
push
cld
icebp
negb
jmp
movsb
fistpl
jle
test
test
in
rolb
cmp
enter
in
dec
jne
cmp
mov
xor
lcall
and
sbb
sub
fldenv
imul
nop
mov
push
mov
push
std
lods
cmp
xor
jno
imul
mov
pop
das
iret
int
cli
inc
in
pop
inc
gs
or
enter
sub
jns
lods
sub
mov
inc
icebp
scas
aas
inc
les
mov
fdivrl
mov
sub
lea
pop
in
pop
xchg
filds
adc
sub
pop
in
inc
inc
mov
dec
out
inc
push
sub
les
bound
imul
jge
ret
mov
les
push
ret
icebp
xchg
call
fisubl
aaa
imul
xor
mov
jnp
or
mov
cmp
mov
in
and
sub
push
aas
xor
repnz
sbb
pop
bound
xchg
xlat
xlat
xchg
pop
lret
mov
mov
jb
dec
movsl
mov
adc
inc
push
and
call
mull
pop
movsb
fdivl
xchg
or
fimuls
inc
xor
or
aad
push
decl
lcall
ret
cld
mov
add
nop
inc
xchg
xlat
data16
ja
in
pop
icebp
rorb
stos
fiadds
cmp
mov
dec
mov
jns
stos
fldl
add
loopne
sahf
pop
mov
jmp
ret
dec
cmpsl
xor
xorl
fs
roll
jl
sub
mov
repz
xor
mov
add
xor
insl
lock
into
ja
inc
dec
mov
imul
adc
daa
and
push
inc
outsb
pop
jne
imul
addl
xor
jmp
lahf
ljmp
sbb
sub
pushf
decb
xlat
cmp
push
adc
ret
inc
or
dec
add
or
iret
push
test
jge
push
xchg
daa
push
fwait
adc
and
loop
aaa
jg
cmp
addl
mov
fs
jb
mul
push
pop
pop
sti
das
mov
shrb
insb
xchg
sbb
call
test
ss
jns
es
sahf
mov
sbb
jae
pop
xchg
orl
inc
mov
lock
nop
jno
std
xchg
push
xchg
pushl
or
rolb
cmp
adc
data16
or
pop
jp
push
das
in
aam
or
sbb
scas
push
loope
or
pop
pop
cmp
mov
cmpsb
jns
clc
pusha
repnz
mov
bound
ja
fdivrs
mov
insl
jno
pop
fcomps
int
or
push
mov
in
jo
int3
pop
push
mov
loopne
seta
arpl
or
test
xchg
dec
jmp
rorb
fsubrs
int
out
hlt
insb
dec
mov
pop
gs
sub
jg
dec
sbb
push
jecxz
nop
cmp
mov
imul
loop
loop
mov
outsb
rol
cwtl
xchg
push
jl
fadds
outsb
xor
jmp
adc
fs
jno
or
jecxz
push
movsl
ret
lahf
or
je
xor
jns
xchg
inc
mov
sub
pusha
jns
inc
sub
ds
rcll
mov
pop
jle
sbb
adc
pop
fimull
pushf
lahf
fs
pop
mov
push
sbb
pop
sbb
mov
shrb
xchg
mov
popf
lods
fadd
out
pop
dec
cmp
rorl
lods
hlt
xor
push
adc
shrb
cmp
pop
nop
sbb
xor
arpl
add
mov
jne
js
or
popa
call
inc
sbb
pop
aas
mov
jae
cwtl
leave
pop
scas
popa
rol
pop
mov
leave
xchg
push
push
cld
pop
cmp
lahf
and
in
pusha
repnz
mov
filds
icebp
pop
bnd
je
mov
outsl
sub
cmp
mov
adc
xchg
data16
fs
mov
mov
rclb
lock
push
inc
mov
lock
cld
sbb
and
fidivrl
mov
xor
xchg
mov
mov
xor
mov
out
mov
mov
mov
push
pop
ret
mov
orb
mov
and
fwait
adc
sub
imul
mov
mov
flds
scas
clc
jp
sub
outsl
push
lret
pop
rcrl
xchg
pop
xchg
stc
fdivr
push
lret
sahf
inc
in
cmp
dec
adc
repnz
push
lods
jnp
cmp
frstor
cmp
dec
mov
cmp
lret
sbb
scas
es
imul
dec
add
popf
pushf
aas
jle
sbb
jmp
or
push
js
sub
mov
pop
mov
in
in
in
out
out
xor
enter
lret
pop
roll
lea
addr16
pop
xchg
mov
idivb
pop
adc
add
cmpsb
inc
cmp
insl
fbld
jl
enter
or
cltd
sbb
fdivs
inc
adc
decb
ret
lock
in
mov
icebp
gs
xchg
int
mov
cmp
callw
sahf
push
adc
daa
add
jae
cmp
rorl
sahf
xor
clc
inc
in
mov
shl
jne
push
dec
sub
call
ds
push
fildl
loope
mov
sbb
pushf
adc
push
out
or
cmp
rcrl
popf
mov
pop
test
sbb
frstor
pop
cmp
or
jns
dec
lock
aam
in
jge
popa
negb
push
js
pushf
mov
mov
pusha
push
jne
cld
sbb
and
mov
adc
xchg
fistpll
ja
or
dec
mov
add
scas
stos
xchg
insl
push
push
or
or
cmp
push
ja
jmp
pop
out
push
jns
mov
out
adc
add
cmp
lret
dec
push
std
lea
out
add
xchg
sti
cmpsb
insl
fisubrs
rorl
push
loope
in
ss
lret
std
jns
ret
imul
adc
lods
rcl
jl
xchg
jno
out
ljmp
mov
negb
lret
andb
jge
mov
push
popa
idiv
and
pop
inc
mov
lcall
or
sub
pop
xchg
mov
and
clc
frstor
ds
or
lret
lret
and
cld
sbb
add
test
lcall
je
rsqrtps
mov
xor
dec
pop
pop
das
rcr
pop
or
insl
mov
adc
cmp
cmp
sub
xchg
push
mov
xor
pop
loopne
pop
xor
in
int3
ss
sbb
repnz
nop
pop
and
sahf
mov
sbb
fsubrs
popf
daa
addr16
ret
shrb
jg
shll
jb
push
test
jmp
xchg
fists
test
and
mov
xor
pusha
dec
push
adc
fistl
jae
shlb
push
pop
mov
orl
mov
std
stc
shrl
pop
xor
fwait
dec
je
ss
cmp
movsb
shrl
int
cmpsb
or
call
dec
sbbb
movsb
mov
and
icebp
jno
cmp
inc
jle
or
test
stos
and
push
movsb
rol
pop
push
fs
insb
sbb
mul
sub
enter
pop
stc
stos
and
out
adc
les
das
dec
ficompl
mov
stos
in
loop
cmp
jmp
and
dec
mov
xchg
movsl
jne
pop
lods
pop
out
fnstcw
mov
ljmp
int3
movsl
inc
fwait
push
popa
shl
cli
xor
mov
pop
xchg
inc
jnp
js
add
loop
mov
das
fldenv
and
incl
or
je
mov
stc
xchg
mov
lods
jecxz
mov
fisttps
mov
xor
movsb
cwtl
ss
inc
dec
cmp
or
jnp
lea
call
push
and
push
test
sbb
or
sarb
mov
pushl
xchg
shl
es
arpl
fistpll
gs
dec
mov
ljmp
xchg
fucom
js
sbb
ret
add
inc
pop
test
mov
rclb
loope
mov
popa
pop
leave
push
cmp
out
das
cmpsb
insb
imull
lcall
enter
adc
into
and
mov
mov
lods
pop
pop
push
dec
xchg
out
inc
popa
adc
cmp
insl
sbb
xchg
out
jae
push
xlat
ljmp
mov
mov
sbbl
daa
jmp
add
push
jmp
jb
test
imul
pop
push
push
add
cltd
pop
add
cmp
mov
outsb
outsb
adc
jg
sbb
repz
and
test
mov
cmp
inc
xchg
out
insb
fucomi
sub
push
and
sbb
divb
ljmp
js
out
in
sub
or
push
pushl
jne
movsb
out
dec
add
push
or
mov
mov
xchg
pop
push
dec
xor
push
jl
or
xor
push
js
mov
mov
js
jge
pop
lods
enter
hlt
sbb
es
cmp
imul
push
test
fld
cltd
add
out
aas
cli
adc
lock
xor
jbe
fstp
sub
andl
mov
aam
stos
movsl
dec
nop
sub
add
les
int3
lret
in
incl
push
cmc
out
dec
push
and
add
ret
mov
popa
in
inc
dec
sbb
cld
add
repz
pop
shll
addl
jnp
inc
or
subl
add
and
add
inc
push
xchg
cld
mov
inc
cmp
add
and
jl
nop
sub
daa
xchg
pop
cli
out
add
adc
cld
test
jne
in
sti
enter
jge
adc
data16
cmp
std
es
imul
dec
pop
loop
mov
inc
rolb
div
lock
les
and
adc
arpl
dec
push
sub
xchg
repz
xor
shll
loopne
mov
pop
js
cltd
adc
inc
daa
ret
add
adc
jg
push
mov
aam
xlat
xor
stos
pop
imul
jo
je
das
mov
or
mov
adc
mov
push
fwait
rcrl
leave
icebp
ret
xorb
dec
inc
mov
enter
dec
cli
int3
fidivrl
fdivs
rorl
mov
pop
sub
es
mov
idivb
in
and
add
into
ficoml
ret
test
insb
add
fnstsw
mov
out
pushf
shll
loopne
add
jge
jp
cwtl
mov
fimull
jbe
into
ret
loopne
imul
dec
and
mov
xor
sbb
mov
or
cli
dec
dec
cmp
mov
cmp
jg
out
pop
rcrb
xor
add
lret
mov
cs
outsb
lret
pop
rcrl
xor
mov
push
cltd
pop
shlb
xor
cmpsb
mov
jle
ljmp
sbb
jns
jle
into
incl
inc
cmp
pop
outsb
jmp
dec
repz
push
and
add
add
dec
jp
pop
fidivs
outsb
adc
outsl
stc
lock
out
movsb
xor
cltd
dec
xchg
mov
dec
insl
imul
add
mov
sbb
mov
fisttpl
sti
pop
lds
xor
pop
sub
cmp
mov
pop
xor
pop
jno
mov
cld
xor
mov
xor
mov
mov
cwtl
mov
repz
cmpsb
pop
cmp
pop
jae
cmp
dec
push
xchg
and
dec
scas
push
sub
insl
mov
shrb
push
push
ret
jae
push
jbe
xchg
shrl
ja
out
push
sbb
aaa
bound
push
xchg
xchg
ja
stos
nop
dec
add
jb
out
pop
dec
loopne
pop
mov
and
inc
inc
aad
es
dec
shlb
and
jns
aad
sub
rolb
mov
xor
adc
push
jo
repnz
mov
fimull
out
ret
call
inc
repnz
nop
add
or
sahf
push
xchg
mov
sbb
mov
out
dec
sbb
andl
int3
inc
mov
cmp
lahf
push
mov
jnp
js
mov
or
jg
add
icebp
mov
adc
lret
jns
cmp
cwtl
cltd
inc
dec
push
jg
faddl
aad
sbb
inc
adcb
cld
into
enter
rorb
imul
js
scas
popl
in
fstl
cmpsb
add
test
out
xor
cmpl
fnsave
mov
sub
xor
mov
sbb
jae
pop
outsl
cmc
push
and
dec
cmc
add
mov
dec
adc
fdivrs
jmp
cmp
xlat
leave
push
lock
sub
inc
lahf
and
adc
stos
add
stc
sub
add
xchg
aas
lcall
adc
cli
ss
fadds
jne
out
add
sbb
xorb
cmp
add
fsubl
nop
test
adc
ret
int
les
inc
cmp
je
xor
adc
outsb
xchg
cwtl
push
shll
lods
or
cmp
data16
xlat
cld
add
and
mov
cli
xor
add
mov
call
add
and
pop
and
cs
or
xor
bound
cmpsl
outsl
cmp
lret
psrad
gs
aaa
push
or
or
aad
pop
cmc
subb
iret
out
inc
jmp
sbb
jns
in
cld
test
mov
lds
push
and
dec
push
lret
imull
aam
stos
cltd
insb
insl
cwtl
sub
mov
jns
hlt
cs
mov
loop
xchg
je
pop
arpl
push
mov
stos
cmp
xor
xor
data16
xlat
pop
leave
mov
pop
icebp
divl
adc
out
inc
int
je
and
int
jnp
add
xchg
mov
xor
xchg
std
mov
dec
sub
das
icebp
loopne
fldenv
pop
mov
sub
mov
lods
adc
int3
add
pop
fsubrs
or
dec
in
cli
in
call
pop
add
fldt
sub
push
adc
xor
js
lods
xor
arpl
into
mov
adc
jmp
or
insl
call
cmp
cmp
loopne
pop
push
scas
repz
mov
arpl
pop
mov
ret
adc
insl
pop
dec
fnstenv
mov
in
ds
mov
xchg
cmpsl
xchg
clc
pop
xorl
inc
sub
cmp
pop
cmc
jnp
sbb
stc
orb
scas
je
mov
sub
ja
mov
fadds
scas
ficomps
dec
icebp
lret
lock
lahf
mov
or
adc
shll
fnstenv
ficoml
push
outsl
jae
inc
cmp
mov
fsubrp
push
loop
mov
cmp
daa
das
ret
push
faddl
pop
orb
ss
adc
es
test
dec
pushf
mov
xchg
or
pop
orl
les
shlb
bound
push
jle
jmp
in
movsl
or
mov
das
stos
sahf
mov
mov
mov
mov
sub
add
stc
pop
mov
mov
imul
fmull
cmp
inc
stos
test
int3
xchg
jae
ret
lea
pop
inc
fwait
push
aam
repz
jo
int3
jne
fisubrs
lea
jge
sub
popa
sub
mov
gs
lods
push
js
cmp
cmp
pop
lret
mov
xchg
or
popa
ljmp
scas
js
cmpsl
sbb
pop
repnz
imul
dec
xor
mov
sarb
dec
mov
xor
mov
je
push
mov
outsb
push
lcall
sar
sbb
ljmp
xchg
push
mov
add
adc
mov
fs
ljmp
cmp
ficompl
call
mov
pop
stos
adc
nop
xor
lea
adc
cmp
push
push
aam
out
orb
test
sti
mov
fs
ja
or
test
test
out
sbb
mov
clc
cmpsb
add
pop
in
rolb
mov
mov
mov
jns
rolb
push
or
add
lret
push
lea
or
cmpsb
lods
mov
aam
mov
rorb
std
cmp
movsb
movsb
pop
and
mov
xchg
call
mov
shlb
and
fidivrs
add
jbe
and
push
js
movsl
into
into
pop
xchg
mov
mov
jecxz
mov
dec
lods
dec
call
sub
test
mov
sub
sbb
insb
inc
jge
inc
pop
ja
jmp
mov
fisttpl
and
add
pop
ret
sub
lods
out
inc
mov
loope
xor
mov
int3
cmp
notl
sub
xchg
stc
adcl
xchg
sbb
cltd
or
in
in
cmp
call
mov
push
push
jg
jo
fcmovne
cmp
push
cmp
inc
imul
sbb
stos
in
mov
add
repz
mov
inc
jecxz
gs
sbb
stos
xchg
insl
add
push
xchg
lcall
out
mov
push
sbb
jnp
psrld
pop
mov
cltd
sbb
push
jnp
sub
test
jno
mov
mov
sub
push
addr16
jge
adc
jecxz
mov
jnp
inc
shlb
ljmp
push
pop
stos
xchg
push
int
ljmp
cmp
and
addr16
lahf
fnstsw
cmpsl
std
shll
mov
iret
cmpl
lahf
dec
jne
push
inc
mov
lahf
int3
lcall
data16
xchg
sbb
mov
cmp
jns
test
or
dec
pushf
fidivrs
adc
scas
rorb
mov
data16
arpl
jle
loope
jmp
add
xchg
orl
lahf
lcall
push
pushf
shlb
lods
fisttps
aas
sub
fiaddl
jecxz
sbb
stc
clc
sbb
mov
mov
je
xchg
out
stos
cmp
cli
in
push
shll
push
sbb
orb
cmp
cs
add
add
push
mov
std
jnp
dec
lret
push
sub
push
xor
ret
ljmp
mov
stos
scas
jp
sbb
loop
dec
add
imul
mov
mov
aam
push
mov
cs
lds
bound
mov
pop
loopne
mov
inc
jnp
pop
mov
aas
sub
adc
inc
pusha
xor
jmp
and
mov
insb
cmp
inc
mov
sbb
cmp
mov
fwait
cmp
push
sti
dec
and
ficomps
aam
bound
test
inc
push
or
mov
cld
iret
pop
cmc
das
out
push
popf
push
sub
cmp
fidivs
lcall
jle
cmc
adc
fcomip
jae
outsl
sbb
pusha
mov
sbb
add
push
pusha
mov
testl
or
orl
inc
jno
repz
dec
push
or
enter
pop
push
outsb
mov
ds
jbe
fiaddl
pop
sbb
jbe
lea
lock
pop
mov
lods
pop
mov
fisttpll
ret
jbe
inc
inc
test
cmp
sbb
dec
cmp
sahf
clc
rcll
fildl
xchg
testb
dec
fninit
inc
insl
mov
and
push
aam
push
cmpsb
ficoms
dec
lds
mov
out
jnp
mov
cwtl
xlat
loopne
cld
movsb
or
clc
fldcw
push
mov
mov
push
adc
adc
push
adc
cli
sub
lods
push
dec
cmc
add
popa
jecxz
xor
fildll
sub
lock
cld
push
cmp
jae
sbb
mov
loope
cmp
sbb
or
dec
mov
stos
sbbl
mov
sbb
dec
rcrb
jl
sbb
xor
or
aad
rorl
pop
repz
aad
scas
inc
xor
lret
or
mov
inc
js
outsl
add
in
loope
mov
fs
inc
sahf
subb
push
sbb
outsl
fcompl
xchg
leave
roll
stos
jb
in
jp
add
add
int
xchg
add
xor
sub
sub
jnp
jg
nop
stos
push
mov
xor
cmp
fidivrl
rcrl
mov
dec
add
dec
out
mov
and
or
jp
xor
cmp
mov
mov
dec
push
push
int
arpl
test
stos
mov
in
sbb
sub
movsb
sarb
fdivs
lods
inc
sbb
sbb
movsl
jns
ret
pop
ja
lods
fsubrs
popf
push
sub
lods
sub
out
cmp
bound
dec
xor
js
inc
or
nop
fsubs
pusha
dec
mul
inc
xchg
cs
jae
cmpb
or
stc
sbb
mov
cmp
xor
mov
leave
lock
fadds
mov
mov
in
dec
adc
stos
sbb
and
xchg
sub
cs
xor
test
push
mov
push
cmp
dec
ljmp
pop
push
icebp
pop
mov
dec
xor
push
call
loope
xchg
insb
adc
ret
lret
xor
mov
xlat
hlt
out
pop
cmpl
push
hlt
inc
adcl
stos
mov
push
in
stos
je
adc
int3
or
cli
iret
add
pop
push
cmp
or
push
lock
sahf
inc
pop
mov
cltd
push
mov
repnz
test
iret
and
mov
adc
push
pop
mov
shr
or
sub
ds
cld
imul
lods
repnz
test
int3
pop
sub
jno
insl
xchg
mov
sbb
xchg
pop
xor
out
mov
faddl
pusha
test
insl
jp
xchg
nop
push
jle
mov
mov
mov
pop
xor
scas
lods
popf
mov
xchg
sub
jmp
inc
dec
mov
rcl
ljmp
xchg
les
stos
mov
pop
push
adc
dec
mov
jne
and
mov
pop
outsl
outsl
fidivrl
mov
rol
and
and
in
imull
and
sub
mov
sti
sbb
sar
mov
imul
mov
xor
clc
pop
inc
insl
into
cmp
push
outsb
jl
in
mov
inc
movsl
push
loopne
dec
into
sarl
mov
sbb
fwait
cmp
and
pop
sub
and
add
adc
and
clc
cmp
inc
ljmp
stos
popa
mov
push
test
fs
mov
loopne
lret
push
adc
in
mov
addr16
pop
dec
sub
enter
dec
loopne
push
cli
or
xchg
int3
mov
stos
cli
stos
imul
notl
iret
adc
test
lock
nop
sub
sbb
and
mov
aas
fistpl
movsl
mov
stos
jb
out
mov
sbb
mov
cmp
lods
lret
xchg
fcomps
mov
arpl
or
jae
cmp
cwtl
adc
push
rorl
add
fucomi
xchg
std
or
xchg
ja
cmp
add
mov
arpl
sub
mov
out
push
lods
adc
sub
int3
mov
jmp
cltd
adc
fdivp
scas
xchg
daa
fwait
lds
lret
fildll
sbb
rcrl
std
dec
sub
adc
cmc
fwait
mov
out
stos
xor
dec
jg
lods
jmp
pop
cmp
inc
iret
insb
xchg
or
xchg
idiv
stc
fcmovnbe
fldenv
gs
and
aaa
les
out
and
dec
ret
test
or
loopne
popa
popf
xchg
cmp
out
je
movsb
cmc
test
xor
cmp
and
fidivrl
adc
jae
add
icebp
and
jmp
hlt
ljmp
incb
inc
sub
push
insl
cwtl
loope
adc
push
sbb
push
imul
sub
stc
stos
cwtl
xchg
lea
mov
call
aas
pop
or
lret
mov
inc
daa
fists
es
jp
jg
adc
mov
fwait
sub
cli
icebp
les
shrl
int3
daa
arpl
test
in
or
das
mov
enter
pop
loop
xchg
push
pop
insb
insb
mov
fisubrs
popf
imul
pop
cs
cmp
fwait
incl
inc
insb
push
gs
mul
and
rorb
cmp
pop
mov
pop
int3
imul
repz
or
popf
in
cmp
int3
lahf
cld
mov
sub
lds
xor
into
push
outsl
stos
nop
sbb
sub
add
mov
mov
mov
jnp
or
xlat
xchg
cmp
mov
cmc
xor
lahf
xchg
call
pop
rcrl
rcll
addb
xchg
adc
cmp
mov
in
pop
jge
or
jmp
or
and
cmp
lea
inc
pop
mov
inc
inc
gs
push
pusha
inc
adc
cld
pop
test
pop
mov
loope
or
pop
lcall
fistl
daa
sbb
imul
stos
inc
aam
jo
mov
cltd
jmp
div
pop
fs
jg
cli
dec
inc
jne
sub
pop
mov
sub
ja
fs
in
jnp
fstl
out
loope
dec
data16
push
movsb
cli
mov
sub
or
fcoms
stos
xchg
pusha
push
cltd
insb
xor
repz
mov
or
or
es
rorl
outsb
xchg
mov
clc
popa
or
shrl
sub
cmpsl
mov
xchg
outsl
dec
aas
aad
mov
fildl
jmp
arpl
and
iret
xchg
movsl
pop
mov
inc
and
mov
mov
inc
push
add
push
imulb
dec
stos
inc
cmc
mov
shl
add
jnp
xchg
dec
mov
xlat
inc
mov
std
inc
jne
xchg
loope
daa
jg
mov
fdivl
jbe
push
leave
mov
or
push
jae
mov
cs
les
movb
in
inc
sub
lods
jo
mov
adc
xchg
dec
out
fs
shrb
das
dec
jne
mov
enter
pop
inc
icebp
sti
sbb
loop
cmc
sub
pop
in
ficompl
inc
rclw
adc
ret
and
mov
cmp
cmp
stos
movsl
pop
clc
xor
mov
arpl
shrb
mov
out
lcall
mov
call
iret
outsl
xor
loopne
inc
push
test
sub
and
mov
mov
popa
es
ds
jp
xor
push
cmpsb
mov
nop
pop
mov
lcall
add
mov
cli
adc
xchg
loop
push
repz
lods
ret
pand
dec
lds
ljmp
popa
ljmp
mov
or
mov
mov
cmp
xlat
sub
repnz
jae
pop
xchg
lea
or
rol
xorb
aad
sub
add
and
jns
iret
xchg
xor
into
jb
push
cmp
jns
push
cld
mov
lods
inc
jg
fidivl
outsl
jo
xchg
dec
pop
arpl
xchg
push
cmpsb
mov
repnz
loop
pop
mov
ja
cs
addb
xlat
out
loopne
imul
into
out
inc
js
pushf
sub
adc
push
xlat
or
test
out
fmulp
insb
xchg
inc
repnz
dec
pop
shrb
test
sbb
js
mov
cmpsl
ss
xor
in
jge
scas
dec
and
and
test
dec
add
sub
test
adc
stos
loopne
cmp
es
lock
inc
or
std
hlt
sub
cld
repz
jno
sub
and
stos
mov
dec
in
sti
in
test
fsubr
pop
xor
lds
cmp
xor
mov
add
jle
cmc
cltd
jg
dec
cmc
out
lret
rcrb
clc
xchg
repz
dec
outsb
pop
popf
movsb
ss
stos
xchg
mov
add
gs
or
or
xchg
lahf
mov
push
mov
test
dec
pushf
rolb
add
mov
sub
mov
push
mov
sub
icebp
or
mov
rorb
cmp
mov
popf
fwait
dec
inc
es
push
push
inc
mov
outsb
push
mov
mov
enter
add
adc
fwait
sub
outsl
lahf
cmp
add
xchg
js
sub
loopne
imul
movsb
add
ficompl
jg
cmc
cmp
jnp
dec
cli
hlt
cmp
adc
call
int
loop
lods
pop
enter
pop
or
mov
pop
jmp
repnz
add
jne
cli
pop
xor
int
sbb
pop
outsb
aas
cltd
cmp
pop
jecxz
fildll
dec
out
std
int
cltd
in
inc
fiaddl
xchg
mov
pop
inc
push
or
pop
popl
xchg
sbbb
rorl
cmp
pop
cli
jmp
aas
sub
outsl
cmp
dec
gs
fsts
out
cmp
ds
inc
mov
add
sbb
pop
in
rcr
dec
adc
mov
hlt
pop
mov
scas
sub
adc
cld
call
mov
adc
lds
out
jns
cwtl
mov
testb
fisttps
es
rol
mov
push
jl
lahf
movsl
notb
loopne
jnp
daa
adc
cmp
aam
cmp
out
addr16
jb
dec
push
fnstenv
aas
inc
jae
pop
das
jb
pushf
mov
mov
xor
pop
out
push
sbb
pop
repz
sub
cli
pop
inc
lock
xchg
jno
pop
mov
xor
push
loopne
pushl
clc
push
mov
mov
push
mov
lods
aam
int
mov
mov
iret
mov
popw
inc
pop
push
pop
add
into
orb
data16
cmp
ss
cmp
pushf
out
pop
outsl
lret
jmp
icebp
mov
pop
mov
xchg
subl
add
inc
push
sub
and
jo
call
test
out
jb
xchg
shl
shrb
sarl
adc
xchg
jmp
jmp
xor
xor
in
aas
and
outsl
ret
and
xor
push
mov
xchg
mov
push
add
in
mov
and
pop
pop
adc
add
lods
jne
aas
scas
clc
mov
jecxz
lret
mov
daa
sbb
es
mov
mov
jae
repz
fists
cld
sub
daa
rcll
xchg
and
xchg
xchg
lock
mov
fnstsw
cmpsb
fcomp
xchg
cs
jecxz
loopne
int
jg
aaa
mov
mov
lret
movnti
dec
inc
or
stos
jmp
fs
jo
lea
sub
xchg
lahf
sub
test
or
ljmp
xor
jne
pusha
clc
jmp
xchg
fwait
or
in
sub
adc
push
das
xor
lea
out
adc
insb
xor
or
int3
pop
cwtl
ds
les
and
testl
pop
xor
insb
mov
or
cmp
test
fxtract
ret
inc
xor
xchg
mov
mov
lods
and
das
mov
and
cmp
rcll
cmp
scas
xchg
icebp
fnstcw
fidivrs
not
stc
push
inc
jl
in
flds
xchg
xchg
push
enter
mov
mov
loope
dec
enter
repnz
sub
cs
in
mov
push
mov
add
sbb
out
subl
jbe
out
mov
cmpsb
out
or
cwtl
jno
js
mov
adc
shlb
push
outsb
pop
dec
fstp
sbb
xor
cld
xlat
pop
iret
movq
mov
and
jae
cmc
in
mov
sbb
shll
call
test
inc
repz
lahf
int
ja
pop
mov
stos
fwait
xor
fs
lret
arpl
pop
inc
mov
lock
dec
test
push
xchg
dec
icebp
ljmp
and
cmpsb
out
fnstcw
inc
push
test
add
push
stc
fisubs
jnp
decl
cli
aaa
cld
insl
cmp
in
push
and
repnz
ds
into
ficomps
xchg
add
lret
pop
out
push
sbb
fcmovnu
xchg
rol
jmp
shlb
and
sahf
push
jl
inc
mov
push
sbb
fisubrs
in
mov
and
cmp
test
je
mov
xchg
pop
mov
jg
call
adc
lret
pop
and
push
cltd
and
inc
rcr
mov
cs
sbb
ret
jbe
enter
mov
push
inc
in
and
cmpsl
and
cmp
movb
xor
jb
popa
faddl
subb
xor
dec
shll
fcmovne
xchg
repnz
movsb
in
cmpsb
into
sbb
fmull
out
fwait
pop
ffree
pop
lcall
rol
test
or
mov
insl
nop
mov
lods
sub
adc
nop
cmpsb
or
sbb
aad
test
push
or
daa
test
jg
xchg
shrl
movsb
or
loopne
cld
outsb
in
call
dec
aaa
sbb
and
xlat
sbb
dec
pusha
cmpsb
cwtl
jg
pop
inc
cmpsb
cmpsl
repnz
inc
jecxz
movsl
fiadds
fld
cltd
xchg
pusha
cld
mov
arpl
mov
xchg
xchg
mov
mov
in
hlt
insb
mov
or
fmulp
and
adc
ja
inc
js
arpl
mov
xor
hlt
cli
dec
nop
sbb
in
cld
xor
adc
ss
iret
dec
cltd
dec
add
dec
add
pop
and
icebp
xor
inc
clc
rcrb
pusha
lret
daa
test
enter
insl
insb
hlt
sbb
aam
and
jbe
fwait
inc
mov
or
shr
int3
pop
stc
sbb
inc
xor
lea
inc
lock
dec
or
adc
sbb
insb
cmp
testl
mov
rolb
pop
adc
addb
cli
mov
xor
mov
jb
mov
mov
and
pusha
lods
pop
loope
scas
push
int3
and
jo
xlat
aas
sub
or
adc
cs
sub
jns
aad
ret
jnp
dec
rolb
sub
xor
or
sub
hlt
out
mov
adc
sahf
jecxz
fldl
push
jnp
sbb
xchg
fnstcw
sbb
subb
sub
loop
shlb
jnp
loop
sub
dec
adc
fsubrl
mov
les
stos
sbb
punpckldq
add
adc
dec
pop
fldcw
jmp
iret
icebp
lret
lea
mov
xchg
push
and
loope
cli
pop
pop
xchg
pushf
les
xchg
leave
mov
xor
imul
dec
ret
ja
dec
out
inc
hlt
mov
pop
ret
mov
jne
paddsw
add
mov
jmp
mov
and
cmp
add
cmp
ret
xchg
fwait
aaa
sub
loopne
or
and
push
ja
cld
pop
fwait
in
inc
push
loope
int3
push
add
xchg
sbb
xchg
inc
ljmp
inc
pop
cmc
sub
and
test
in
jecxz
xor
lret
mov
aaa
stos
loope
movsb
pop
xor
ja
mov
andb
or
cli
inc
mov
out
hlt
push
icebp
div
inc
adc
mov
push
sub
pop
cmpsb
das
and
cmp
push
repnz
sidtl
dec
push
aaa
jbe
fstl
data16
pop
call
mov
arpl
fsubl
sub
hlt
push
cmpsb
insl
xchg
outsl
int
xchg
add
mov
cld
jne
addr16
cmp
push
lcall
xor
xor
imul
int
pop
aaa
xchg
notl
dec
in
adc
std
dec
clc
mov
mov
cmp
in
sub
inc
loop
mov
pop
adc
in
add
lock
xor
lea
inc
jg
pop
dec
pushf
sub
data16
jnp
test
pop
jge
add
lock
push
adc
adc
nop
test
cmpsl
iret
xor
pop
jp
or
cli
jns
fdivl
cltd
sbb
inc
adc
in
cwtl
mov
leave
jl
shlb
push
lcall
add
movsb
pusha
cmpl
pop
divl
jno
pop
aad
lock
and
mull
dec
jb
rcll
dec
mov
lret
ss
lods
nop
test
jmp
and
imul
dec
sahf
push
inc
std
insb
fimull
pop
jg
push
ror
cmpsb
out
add
sarl
scas
out
sbb
add
inc
pop
xor
xor
fisttpll
dec
push
int
fnsave
xchg
push
pusha
or
sub
stos
inc
xchg
push
loop
lea
shl
int3
mov
xchg
add
xor
cli
stc
nop
pushf
insl
xchg
popf
pop
ret
cwtl
pop
mov
push
sahf
fcmovnu
cmp
inc
push
fcoms
popf
in
or
fisubrl
mov
mov
cmpsl
mov
or
jmp
int
sub
cltd
mov
or
push
into
pop
add
mov
test
push
xor
rcrl
mov
and
pop
pop
push
jg
and
flds
bound
xchg
in
jecxz
cmp
adc
es
popf
int
stos
mov
cs
sbb
pop
mov
mov
sub
jno
fdivrs
sub
sysenter
cli
pop
mov
push
nop
jne
pop
fbld
sbb
adc
inc
les
popl
mov
loopne
sub
outsb
jbe
and
pop
out
inc
in
movsb
stc
lea
fldl
leave
mov
fistl
out
aad
sbb
loope
aaa
lahf
arpl
ret
sbb
mov
xchg
adc
shlb
stos
fnstenv
ja
dec
sbb
aaa
jmp
into
test
iret
insl
mov
jge
es
mov
rcll
out
xchg
inc
inc
sub
adc
test
cmp
cmp
popf
popf
jne
mov
shrl
dec
lea
sbb
push
ret
xchg
pop
add
dec
pop
aas
cmpsb
shl
mov
jecxz
sbb
xchg
shl
scas
iret
mov
ja
inc
pushf
jne
leave
sub
cs
mull
daa
add
fwait
adc
dec
fstl
into
les
sub
pusha
add
into
push
repz
and
mov
lret
pushf
gs
and
add
xor
insl
imul
sahf
dec
movsb
cmc
pusha
dec
test
rol
notb
sbb
xchg
cmp
cmc
aas
sub
ljmp
pop
es
mov
mov
lret
xchg
stos
jmp
movsb
dec
or
jae
sub
sbb
dec
cwtl
adc
and
bound
cmpb
test
dec
xor
sbb
push
xor
hlt
bound
or
enter
fstpt
stc
or
add
xchg
pushf
sbb
push
lahf
fstpt
xor
mov
mov
push
int
mov
out
push
arpl
cld
lock
leave
mov
jae
mov
fs
cmc
push
jle
sub
or
adc
mov
add
nop
in
lods
enter
mov
pop
cmp
sub
jno
ljmp
sbb
ljmp
fcomp
in
out
cmc
sub
or
rcll
mov
pop
repnz
push
sbb
clc
cmp
pop
mov
mov
shll
loope
pop
out
inc
fdivr
dec
lods
or
les
xchg
stos
out
arpl
dec
pop
mov
mov
inc
scas
sbb
jo
mov
sarb
popf
inc
sub
fsubs
or
mov
adc
fs
not
and
je
aad
jl
jb
jno
cmp
ja
dec
mov
mov
push
lods
sbb
lds
mov
pop
enter
mov
sbb
aas
les
addr16
mov
in
fdiv
xchg
push
pop
mov
and
push
fwait
in
imul
aas
lahf
inc
adc
pop
jg,pt
movsb
xchg
xor
or
ja
fwait
outsl
test
sbb
sbb
mov
out
and
mov
xchg
inc
sahf
sbb
mov
dec
mov
dec
inc
aaa
sbb
movsl
movsb
push
cmp
mov
pop
movsl
inc
ret
mov
popf
cmpb
mov
scas
push
push
test
mov
test
jno
jne
lahf
push
mov
lea
jle
mov
or
or
aas
aas
cmp
inc
pop
mov
mov
jb
push
sbbb
popf
jo
in
scas
jmp
lds
push
in
or
cpuid
jo
adc
popf
aam
ret
mov
mov
pop
cmp
xor
mov
orb
push
jns
mov
cmpsl
jno
adc
mov
mov
xchg
jge
inc
adc
ds
in
jle
fstpl
cmc
fsubl
or
stos
mov
and
pop
cmpsl
mov
inc
cmc
lds
iret
adc
test
inc
mull
sahf
imul
xchg
xor
loopne
sub
cmpsl
mov
push
out
addr16
out
pop
mov
push
fldl
mov
sbb
lds
xchg
xchg
dec
push
aas
cmc
jecxz
sahf
loop
push
hlt
lods
enter
inc
inc
jb
pop
push
data16
mov
std
jg
es
arpl
jnp
pop
adc
push
mov
jecxz
push
sbb
jnp
addb
insl
ret
dec
pop
scas
into
push
div
dec
add
pop
jb
leave
adc
cmp
lods
push
mov
ss
push
mull
in
int3
stc
and
inc
cwtl
sahf
decl
lret
or
notb
sub
movsb
lret
icebp
xchg
inc
movl
decb
imul
fnstenv
push
cli
xchg
cmc
sahf
lret
and
xor
mov
add
jns
icebp
jne
cld
adc
bound
and
fmull
das
ja
sahf
adc
xor
int
mull
or
or
jl
lds
dec
cld
imul
ret
push
ret
popf
lahf
xor
in
pop
decb
adc
adc
sub
xor
rclb
ret
pop
pushf
xchg
out
mov
xor
hlt
push
test
ret
jb
addr16
cs
pop
aam
hlt
hlt
push
mov
in
inc
sbb
mov
xchg
loop
adc
mov
das
xchg
pop
cmp
lcall
mov
push
pop
push
inc
xchg
shll
adc
sub
cld
xchg
adc
je
xchg
cli
loope
jae
xor
adc
daa
pop
stos
jle
js
push
xor
into
inc
or
ss
dec
xor
std
shl
xchg
test
call
addb
mov
jge
clc
cli
rcrb
insl
sti
mov
adc
fs
inc
mov
pop
arpl
pop
sbbl
icebp
jle
jb
dec
xorl
pop
ss
mov
jae
je
stos
dec
push
mov
or
pop
inc
dec
and
sbbl
shl
sub
loop
sub
lret
cld
inc
cs
mov
xchg
shll
cmp
movsl
mov
out
cmp
js
inc
pop
movsl
sbb
shlb
add
cmp
push
and
sbbb
andb
stc
jb
mov
or
lret
dec
inc
push
pusha
mov
dec
mov
inc
loop
repz
inc
sar
pop
xor
xor
scas
or
out
jmp
ljmp
popa
lods
pushfw
push
dec
mov
mov
inc
sbb
iret
mov
jae
fbld
mov
or
mov
pop
add
mov
fisubrs
loopne
inc
mov
push
rorl
lcall
pop
sbb
clc
out
add
mov
negl
adc
test
addl
ret
lods
ret
add
sbb
incb
rcr
xchg
or
ja
jle
cmp
push
push
aas
xorb
repnz
rcll
inc
fldl
cli
mov
enter
clc
mov
sbb
cs
cmpsb
xor
cmp
pop
imul
cs
inc
jge
shrl
inc
shl
ds
xchg
mov
push
mov
gs
mov
push
jae
mov
lods
mov
in
mov
or
or
aad
push
repnz
sbb
cs
inc
xchg
fcoms
push
jo
sbb
imul
sti
push
lods
mov
into
rolb
addr16
test
dec
xchg
mov
inc
les
icebp
cli
mov
test
sbb
das
pop
icebp
add
imul
push
hlt
inc
jo
loop
mov
mov
stos
cmp
testl
out
jns
dec
mov
pop
cmp
dec
loope
mov
sub
xor
js
mov
gs
jnp
push
adc
lea
test
inc
xor
xor
bound
add
sbb
sahf
frstor
sbb
cmp
call
out
add
fdivs
xor
frstor
cmp
push
and
fdivl
and
add
push
jb
pop
cmpsb
lcall
push
push
dec
pop
lahf
ret
rcr
roll
outsl
stos
gs
and
xchg
jecxz
xchg
scas
sbb
fucomip
icebp
scas
jbe
jne
insl
ficoms
shll
cwtl
sub
inc
ds
cld
test
cli
add
lods
addl
aaa
xchg
or
add
lret
mov
outsb
movsl
jmp
fistpl
cli
mov
mov
dec
icebp
hlt
jl
pop
sub
sbbb
repz
imul
mov
push
and
loope
pop
push
mov
ret
mov
push
ficoml
xchg
addr16
roll
xchg
inc
aaa
inc
outsb
mov
lret
and
fwait
cmp
ret
rcrl
imul
inc
xor
out
sub
and
cwtl
xor
push
icebp
daa
rcrb
fistps
pop
xchg
fs
mov
les
mov
icebp
pop
adc
shl
cmc
pop
stos
or
test
lahf
icebp
int3
out
xchg
mov
and
or
add
sahf
add
sub
ret
sbb
test
inc
mov
xchg
fcoml
mov
or
fnstcw
add
pop
aas
repnz
outsb
iret
mov
rolb
pop
out
ss
mov
adc
mov
addr16
sbb
dec
mull
and
daa
push
mov
ds
sar
jnp
jne
aam
test
cmpl
enter
lahf
cmp
mov
fbstp
or
xor
mov
jmp
mov
jne
outsl
in
mov
mov
add
mov
je
insl
mov
lock
es
xor
adc
in
pop
xor
add
test
pop
in
mov
pop
lds
dec
xor
fnsave
pop
sbb
jnp
pusha
arpl
stos
or
xchg
push
lds
aaa
test
icebp
repz
icebp
sub
add
adcl
lods
insl
mov
ja
movsl
cmp
push
mov
xchg
push
dec
add
and
popa
out
cmp
adc
repz
addr16
mov
leave
mov
and
dec
dec
dec
push
cld
mov
data16
enter
lds
add
movb
xchg
cmp
jp
xor
cmc
out
dec
mov
mov
sub
xchg
and
mov
ret
lcall
das
inc
das
jmp
lcall
out
and
pop
jb
fs
iret
js
sub
pop
icebp
mov
repnz
push
pop
scas
mov
in
mov
shl
cmpsl
jnp
jg
pop
mov
jecxz
test
mov
test
push
xor
out
jle
mov
lret
mov
aad
xchg
fmuls
cmp
pop
or
loope
pop
mov
ret
stc
mov
dec
pushf
rcr
cli
stc
dec
sti
pop
stos
mov
arpl
jge
and
jle
xchg
data16
outsl
mov
lods
and
inc
jne
inc
add
lods
clc
insb
mov
mov
sarb
adc
daa
inc
push
arpl
dec
inc
mov
imul
jno
int
pop
repz
push
pop
mov
mov
sbb
je
arpl
add
fisubrl
mov
cmpsl
shlb
mov
jmp
jg
loop
and
inc
cmpsb
imul
mov
sbb
aad
sbb
cmp
mov
rorb
sub
jae
test
fwait
inc
loope
je
pop
jl
lea
call
mov
stos
and
pop
pop
push
and
mov
add
jecxz
scas
xchg
inc
daa
lods
mov
push
mov
inc
sbb
rcrl
idiv
and
mov
inc
fwait
shlb
inc
ror
mov
mov
lods
xchg
jecxz
stc
sbb
pushf
test
fs
js
mov
das
stos
shl
mov
repnz
repz
shrb
fmuls
pop
xor
es
push
in
mov
mov
sub
inc
xor
in
stc
push
and
cs
das
out
pop
push
rorb
out
sbb
out
push
data16
insl
lret
dec
push
xchg
fdecstp
or
pop
rcrb
adcb
ret
fadd
cmp
clflush
add
pop
push
xor
mov
arpl
inc
mov
or
dec
add
mov
xchg
cmp
inc
mov
inc
cmpsl
and
out
mov
or
xor
les
cmp
movsb
mov
xchg
mov
jle
mov
loop
cmc
fs
outsl
imul
fiaddl
movsl
lea
jnp
and
cs
xchg
sbb
gs
fistps
fldenv
rcrb
dec
fisttpll
test
jp
aam
add
xchg
sub
cmpsl
scas
cmpb
imul
mull
jns
fwait
outsb
sbb
je
orl
int
scas
addb
mov
mov
push
imul
and
dec
mov
ljmp
mov
pushf
sub
push
inc
aad
mov
mov
lds
mov
jmp
jae
lret
scas
in
mov
sbb
test
jg
sub
mov
aaa
inc
gs
mov
lock
xor
fisubl
out
dec
out
sbb
pushf
ret
inc
xchg
enter
pop
int3
jp
xchg
xchg
sbb
cmpsl
imul
dec
pop
into
fmull
insb
test
sub
or
fcmovnbe
mov
fildl
push
int3
jo
xchg
orb
jecxz
ds
adc
sbb
add
test
adc
xchg
mov
jp
mov
stc
pop
fsubs
ret
adc
ret
sbb
or
aaa
seta
or
cld
sbb
fwait
rcll
jg
jge
movb
add
cmp
xchg
lods
xchg
mov
jb
rol
test
sub
fstps
popf
pop
mov
push
xchg
inc
mov
mov
call
sti
pop
mov
repnz
out
push
std
inc
insl
ja
cwtl
movsl
pop
ds
add
sub
pushf
mov
in
push
ss
xor
lods
adc
cltd
popa
jmp
add
adc
std
bound
fmulp
sbb
sbb
push
jle
add
je
andl
arpl
insb
jl
and
in
stos
jp
in
xchg
xor
mov
mov
jmp
add
jg
mov
push
fs
jmp
repz
push
push
mov
jmp
daa
aam
ss
adc
fsubrp
ja
cmpsl
inc
xor
andb
wrmsr
jb
mov
cmp
and
adc
adc
and
pop
sbb
scas
inc
sub
xchg
lds
into
lret
je
stos
test
cmp
push
rcrl
and
pop
loop
hlt
fnstenv
test
fdivrl
inc
enter
pop
jmp
mov
divl
push
fwait
jb
stos
mov
pop
jmp
pop
fcomip
pop
cmp
rcr
sub
aad
inc
dec
xor
dec
data16
push
mov
cmp
xchg
pop
xchg
and
add
repnz
out
mov
sbb
jb
jecxz
mov
pushf
sbb
std
popa
adc
jl
mov
repz
dec
pop
cmp
les
and
xor
push
js
fcoml
push
adc
popa
xor
popf
je
mov
xor
popf
or
loopne
leave
cmpsb
jo
stc
push
mov
repz
or
popa
data16
test
mov
adc
xlat
in
aas
push
out
xchg
sbb
ret
xor
daa
addr16
test
outsb
ja
push
rcrb
inc
sahf
scas
mov
aaa
mov
xor
xchg
imul
mov
jl
outsb
pop
mov
mov
addr16
push
loopnew
mov
repnz
mov
or
idivb
movsb
stos
incl
lret
or
nop
sbb
xrelease
or
adc
in
fidivs
call
jns
push
data16
sub
jmp
push
mov
cltd
lds
mov
push
lret
fimuls
adc
sbb
and
jecxz
mov
dec
popa
insb
les
scas
push
cld
xchg
in
icebp
sbb
fbstp
pop
jmp
adc
mov
lock
rcl
sub
movl
fldt
cmpsb
xlat
mov
jbe
sbb
sbb
mov
push
jne
mov
xor
mov
xchg
xchg
sub
fs
xor
lock
jmp
movsl
or
push
mov
loop
popf
icebp
outsl
mov
cmp
nop
bound
movsb
in
testb
mov
lret
movsb
push
iret
xor
or
xlat
out
jmp
inc
outsl
inc
icebp
jnp
jno
cmpsl
cmp
xor
xor
inc
arpl
xchg
xchg
out
dec
adcb
push
ret
xchg
popf
sbbb
cmp
dec
cmc
xor
stos
push
inc
pushf
jecxz
scas
in
data16
pop
jno
cmp
fmulp
pop
mov
sahf
in
sub
or
adc
aaa
or
mov
jbe
jmp
out
sahf
jg
lods
stos
jmp
sub
cmp
sub
adc
mov
mov
dec
xor
gs
cmp
mov
pop
icebp
in
ret
dec
call
push
mov
gs
fisubrl
test
rorb
sub
push
into
shl
mov
inc
push
std
fs
neg
test
adc
ja
pushf
stc
test
xchg
inc
jbe
pop
and
test
cmp
xor
sbb
add
inc
call
ret
daa
into
mov
fwait
add
sti
lea
ja
cmp
js
fwait
cmc
icebp
cli
scas
shlb
push
inc
xchg
pop
data16
outsb
adc
fldcw
dec
sbb
daa
icebp
sub
pop
shlb
inc
mov
dec
xor
dec
and
pop
sbb
or
mov
cmp
xor
negb
add
pusha
xchg
adcb
pop
aad
adc
out
xor
ja
into
shrl
adc
mov
inc
mov
sbb
cmp
lds
push
sub
rolb
mov
lea
add
out
and
les
testb
inc
inc
call
jp
data16
sarb
pop
jnp
shl
adc
loope
sub
push
cli
pop
cld
jl
lock
adc
stc
dec
or
sub
mov
js
lea
pop
xchg
aas
inc
mov
outsl
cmp
adc
pop
popf
rclb
loope
ret
xor
pop
cwtl
ljmp
mov
ss
or
jmp
add
rorb
mov
ljmp
aam
push
imul
inc
or
stos
outsb
das
cmpsl
ds
mov
cmp
mov
stos
jns
inc
mov
test
jg
scas
je
adc
dec
mov
add
dec
mov
pop
add
pop
mov
jge
push
fists
inc
bound
aas
push
aaa
mov
vcvtss2sd
es
pusha
movl
iret
mov
or
call
pop
les
mov
int
push
jne
push
and
insl
mov
cwtl
out
fldt
repz
iret
mov
fldl
push
aaa
lret
imul
rcl
pushl
lods
stc
pop
cmp
stc
xchg
cmp
scas
pop
lahf
inc
lret
data16
mov
mov
add
in
mov
in
mov
mov
jae
inc
popf
popf
loope
dec
imul
or
mov
mov
scas
ret
mov
mov
sahf
sar
add
sub
imul
cmpsb
hlt
xor
in
fbld
test
lcall
pop
ds
ss
dec
mov
test
in
and
xchg
adc
add
push
mov
push
push
lahf
adc
lahf
cs
add
mov
shll
out
cmp
and
mov
fldl
add
sbb
cmpsl
stos
mov
fistl
outsb
aaa
test
mov
xor
decb
cwtl
bound
or
mov
lret
data16
lret
ds
pop
inc
xchg
push
pop
fwait
mov
lret
jo
inc
insl
subb
mov
nop
xchg
adc
leave
cmp
mov
nop
outsb
lods
mov
lods
pop
out
repz
xchg
mov
test
jno
jne
movsl
mov
push
dec
pop
in
bound
icebp
add
pop
jne
pop
movsb
neg
push
push
or
cwtl
dec
insl
dec
jle
icebp
and
cli
int
dec
cs
adc
cmp
jb
cmp
inc
movsb
or
movsl
jge
cmpl
int3
pop
lret
jbe
sbb
mov
adc
add
dec
mov
pop
push
cld
sbb
leave
cld
dec
ljmp
or
mov
jnp
mov
fcoml
pop
push
adc
add
in
adc
fsubs
hlt
mov
sub
stos
and
mov
ss
or
cmp
adc
data16
scas
inc
push
aas
mov
jne
insb
sahf
out
push
xchg
repz
pop
mov
sarb
mov
scas
jno
inc
sub
push
icebp
xchg
je
pop
sub
jle
fldt
sub
aaa
imul
add
sbb
ret
sarl
xchg
jns
dec
insl
adc
outsl
and
jmp
je
jg
js
sbb
mov
aam
inc
and
and
fwait
fwait
clc
push
add
fildl
lret
jmp
add
sti
mul
out
out
mov
hlt
aam
mov
sar
xchg
imul
inc
std
jo
ss
inc
fcompl
sub
fnop
cmp
xor
cmp
cmc
int
ds
mov
stos
dec
movsb
jmp
pushf
pop
adc
fistl
cmp
or
test
mov
jge
les
cmp
xchg
js
testl
and
xchg
lods
xorb
fsubrs
inc
dec
bound
and
mov
inc
cmp
mov
add
xor
add
pop
pop
orl
rcl
mov
test
push
dec
lock
sub
das
jns
lds
lahf
sub
xchg
jne
imul
ss
jb
lds
xchg
sub
mov
sahf
jmp
xchg
testl
cmp
jnp
sbb
pop
add
sbb
and
xchg
adc
or
mov
mov
inc
push
outsb
adc
inc
lds
cwtl
iret
outsb
adc
cmp
fstpt
jno
or
pop
push
adc
sub
fisubrs
or
outsb
addr16
cltd
into
inc
aaa
xor
mov
pushf
push
lds
jge
jl
pop
dec
fmul
pop
sbb
sbb
xchg
add
stos
pop
adc
add
push
sbb
das
cltd
cmp
nop
imul
clc
jbe
mov
xchg
pushf
testl
ljmp
inc
inc
fsubr
and
mov
test
push
or
sti
int3
in
inc
test
popa
lahf
or
mov
or
cwtl
daa
je
fs
scas
mov
into
mov
adc
pop
std
rclb
test
clc
mov
adc
push
mov
mov
out
cmpsl
add
outsl
pop
ljmp
inc
in
jp
push
mov
mov
ds
and
pop
frstor
mov
sub
and
dec
mov
mov
dec
loope
scas
rorb
icebp
inc
cmpl
sub
and
out
inc
out
mov
push
or
jae
add
lahf
adc
popa
daa
testl
jns
sbb
out
mov
inc
in
loop
mov
push
jb
lcall
jge
mov
adc
aas
dec
insl
sbb
jno
or
adc
addr16
xor
mov
pusha
insb
xor
cmp
adc
and
jle
cmp
mov
cmp
int3
mov
mov
hlt
andl
ficoms
outsb
xor
loope
mov
lods
adc
inc
mov
dec
loopne
aad
push
lds
pushf
scas
mov
js
add
mov
test
sbb
scas
mov
jb
mov
add
rcrb
adc
outsb
jne
testl
mov
adc
and
notb
out
mov
std
pop
ja
and
scas
or
stos
inc
fdivrs
or
adc
loop
xor
scas
add
imul
jp
and
xchg
mov
inc
xor
divl
hlt
addl
cmp
sub
test
inc
or
cld
cmp
jl
shrl
or
push
testb
fidivs
add
xchg
daa
mov
cltd
arpl
sbb
dec
mov
jmp
pop
or
adc
push
pop
fiadds
pushf
add
cmp
mov
mov
xchg
mov
xchg
jno
addl
jno
lods
gs
push
sub
sbb
hlt
dec
mov
stc
fsubr
pop
mov
add
jae
cmp
imul
dec
add
fwait
int
lcall
push
mov
xor
xor
xlat
lea
and
lahf
and
sub
pop
add
sub
pop
les
insb
push
and
cmpsl
addr16
ret
jbe
mov
sub
push
rorb
push
call
adc
mov
lods
test
sub
mov
pop
rol
int3
int
cltd
xchg
jg
pop
mov
mov
inc
inc
sahf
stc
push
push
mov
mov
test
jl
mov
sbb
outsl
sub
add
nop
push
push
xchg
pop
movsl
ljmp
adc
dec
lret
pop
sbb
into
hlt
dec
movsl
mov
mov
push
mov
fmuls
add
outsb
es
enter
push
mov
jle
lret
jecxz
dec
or
and
mov
fldt
sbb
push
lods
out
int3
imul
inc
push
xor
inc
shrb
jmp
clc
idiv
aad
xchg
into
and
scas
movsb
mov
mov
mov
dec
mov
arpl
lea
aam
or
test
cltd
cld
aad
jg
out
stos
mov
call
or
mov
out
xlat
add
pop
fstl
push
ss
sbb
mov
push
enter
jmp
xor
xchg
fcompl
dec
or
int
or
scas
jmp
daa
shlb
movsb
shr
mov
mov
mov
fsubl
icebp
adc
pop
dec
add
sub
and
pop
imul
xor
shr
xchg
insb
and
ret
pop
push
pop
inc
jo
insl
pop
xchg
or
test
sbb
mov
das
cs
mov
mov
mov
rol
stos
push
xor
out
test
inc
adc
inc
and
mov
mov
push
xor
test
aas
leave
xchg
mov
pop
repz
push
fisubs
add
shll
push
or
mov
add
lods
pop
adcb
or
test
inc
cwtl
in
jns
dec
sbbb
sarb
movsb
push
adc
outsl
dec
cmp
flds
mov
jno
pusha
sub
cmp
aas
cmp
jae
lahf
add
pop
out
pop
test
mov
add
and
dec
mov
lods
call
fnsave
std
imul
fstpt
mov
inc
push
cmp
stos
je
jp
xor
jbe
dec
pushf
subl
es
sbb
js
dec
inc
mov
ja
nop
out
xor
and
cmpsl
sub
cs
push
jle
in
xchg
mov
add
and
sahf
cmp
loope
push
lods
inc
data16
stc
idivb
jle
xor
rcrb
fwait
jmp
jns
pop
outsl
adc
mov
mov
je
insb
stc
lods
dec
or
and
lds
enter
sub
in
test
test
xchg
cmp
clc
and
movsl
orl
mov
push
cli
sbb
xchg
adc
sub
mov
or
xchg
push
mov
mov
pop
sub
xchg
int3
inc
fldenv
add
jmp
mov
popa
cmp
lock
cmp
push
arpl
das
xchg
cmp
iret
fldenv
decl
mov
fwait
mov
sbb
push
push
popf
sub
cmp
je
and
lds
mov
out
lods
sub
cwtl
in
pop
dec
adc
mov
ljmp
insb
xchg
jns
xchg
adc
mov
or
pusha
je
adc
rolb
pop
cmpsb
dec
cmpsb
fldt
pop
jbe
daa
fstpl
dec
jmp
and
adc
test
movsl
scas
push
test
dec
jle
test
lcall
aaa
dec
sbb
and
xchg
cmp
icebp
addl
mov
adc
stc
cmp
stos
cltd
and
and
cmpsl
and
repz
aad
ljmp
movsl
repnz
cli
add
movsb
jo
cmpsb
xchg
add
cmc
push
pop
mov
dec
cld
ret
or
or
lods
cltd
in
sub
adc
ds
mov
scas
jecxz
out
test
sub
insl
movsl
pop
pop
fdiv
pop
xchg
jnp
jbe
adc
repz
or
xchg
adc
cmp
in
int
js
mov
repz
mov
gs
int3
ljmp
mov
aas
loope
in
mov
das
sbb
in
mov
or
or
fucomip
sub
pop
mov
sbb
in
or
aas
pusha
loopne
fists
or
das
add
dec
mov
scas
lret
jmp
cs
or
pop
loopne
xchg
hlt
sub
lcall
into
mov
lret
and
xchg
in
sbb
es
push
ja
push
mov
fisubs
xor
shrl
push
mov
sbb
add
mov
icebp
cs
insl
aam
shrb
popf
fs
cmpsl
aas
sub
fldcw
jns
jmp
in
xor
sbb
push
xor
sub
adc
pop
jmp
sbb
or
xchg
int
mov
fimuls
ljmp
daa
mov
push
rol
jne
dec
fs
and
jae
xor
cmp
sbb
in
icebp
pop
push
mov
and
pop
and
adc
sbb
test
xor
fwait
not
adc
mov
insb
xor
dec
sbb
insl
add
add
add
sbb
stos
add
es
ret
jecxz
outsb
out
push
lcall
ftst
mov
or
rcl
or
out
add
mov
mov
mov
mov
hlt
test
dec
push
jp
pop
cwtl
fsub
pop
xchg
icebp
pop
push
sub
and
mov
movsl
jo
dec
mov
rorb
push
stc
lock
and
push
mov
addb
jae
xchg
aas
dec
mov
xor
test
fists
iret
out
xor
movsl
or
sti
mov
mov
repnz
lods
dec
mov
jp
pop
mov
xchg
jmpw
in
mov
pop
mov
cmc
mov
out
dec
test
cmpsb
jl
jecxz
sahf
pop
mov
scas
outsb
mov
cmp
mov
mov
es
stc
fdivrl
push
movsb
and
adc
out
hlt
inc
dec
arpl
push
fsubrl
movsb
inc
mov
jle
add
mov
push
pop
movsb
hlt
into
jae
iret
popf
inc
clc
fcomps
je
scas
cmp
adc
push
fistl
cltd
pop
ficompl
call
aam
add
jbe
cmpsl
lahf
stos
arpl
cmpsb
lea
dec
scas
enter
sbb
pop
mov
aam
cmc
bound
rcll
rclb
xchg
pushf
lock
push
pop
inc
jge
dec
xor
ds
mov
pop
cld
clc
inc
insl
sarl
scas
clc
dec
dec
push
js
pusha
adc
pop
test
enter
add
inc
insl
jae
dec
jo
pop
push
push
sub
test
call
test
out
and
xor
cltd
push
push
sub
push
jae
push
jae
cld
repz
dec
outsl
cmp
call
scas
fcmovnu
jg
ja
das
movsl
cld
inc
jmp
icebp
xchg
cmpsb
test
sarl
jmp
add
inc
adc
fwait
cld
pushf
push
test
push
ficompl
jnp
sti
inc
cmp
dec
imul
shrl
jne
xchg
cmp
cltd
outsb
ljmp
lods
and
mov
pop
xchg
add
adc
pop
cmpsl
in
cli
lahf
inc
and
and
or
outsb
aam
pusha
fmul
mov
lret
mov
adc
in
repnz
inc
mov
xchg
aas
xchg
ja
fwait
into
lea
stos
pop
inc
shll
jge
jge
xor
dec
jmp
xchg
rolb
sbb
lods
call
je
cli
pushf
push
cmp
cmpsb
dec
dec
iretw
push
push
inc
ljmp
jno
pop
leave
xor
test
xchg
push
out
insl
pop
cltd
add
notl
sahf
push
push
call
inc
and
out
add
lods
andl
adc
xorl
fcoms
mov
subb
int3
gs
neg
icebp
icebp
xchg
aas
or
into
sub
ficompl
clc
pop
mov
adc
pop
lret
fldl
mov
popf
call
out
sbb
bound
sub
je
hlt
xchg
out
popa
lds
stos
inc
lahf
jp
int
gs
leave
inc
je
pop
sbb
in
and
inc
inc
in
cwtl
jmp
nop
adc
or
in
adc
sub
mov
xchg
sbb
sbb
push
cwtl
imul
dec
std
and
mov
test
mov
push
cmpsb
push
cmp
ja
insb
mov
mov
sbb
mov
ret
xchg
sub
mov
xchg
inc
repz
js
xchg
push
pop
ret
xor
xor
into
cmpsl
adc
sub
dec
push
daa
mov
mov
add
loopne
insb
ficomps
mov
sbb
js
pop
ds
fs
push
cs
imul
arpl
test
dec
mov
movsl
push
ficoml
lret
and
aad
dec
pop
cmpl
cltd
inc
imul
hlt
mov
mov
sbb
xchg
out
shll
adc
test
xchg
mov
fisttps
push
mov
aas
pop
cmp
enter
pushfw
adc
fisubl
push
fsubs
sub
sub
iret
ss
jne,pt
in
lods
xchg
xor
mov
sti
dec
add
add
in
imul
adc
sbb
lock
loopne
xchg
adc
repz
xchg
mov
arpl
pop
mov
ljmp
aas
mov
adc
inc
aad
dec
adc
rcrb
lcall
clc
into
fcmovb
cltd
pop
test
rclb
jge
int3
call
adc
inc
scas
xor
ja
mov
das
pop
add
fs
sbb
out
movsl
xchg
popf
sub
or
xchg
popa
testb
je
mov
mov
xchg
xchg
pop
movsb
movsb
xor
sbb
mov
and
stos
test
mov
sysenter
iret
inc
lcall
mov
cmpsb
fildl
or
aam
lock
cltd
pop
jae
xlat
sti
aad
andb
nop
scas
fldcw
loop
fwait
lea
sub
or
mov
xlat
xlat
push
sbb
jne
jbe
out
roll
andb
add
xchg
mov
ss
mov
ficoml
mov
out
cmpsl
getsec
inc
idivb
lcall
mov
fdivr
mov
hlt
pop
adc
gs
aam
out
out
int3
fildl
mov
pop
mov
sub
jge
cmp
out
adc
loope
push
add
pop
mov
shlb
mov
push
sbb
and
daa
cmp
inc
mov
push
call
pop
lods
xor
dec
adc
mov
jo
ja
and
js
hlt
push
push
movsb
sbb
je
dec
imul
sbb
or
push
out
cli
pop
pop
push
dec
mov
jge
rcrl
push
aad
sbb
cmpsb
popf
mov
jle
inc
popf
pop
int
xchg
cs
mov
cmpb
inc
imul
js
shrb
sub
inc
test
popa
jecxz
xlat
jne
addr16
inc
test
xor
lods
das
adc
sahf
pop
scas
cmc
lock
dec
push
pop
pop
popa
jmp
pop
mov
into
lret
mov
ja
or
or
pop
orl
add
scas
bound
xchg
cmp
push
dec
lods
adc
mov
sub
add
notl
and
jmp
lds
jle
inc
call
std
arpl
loop
dec
adc
sbb
lock
sahf
cli
pusha
gs
pop
cwtl
xor
arpl
fdivp
in
jmp
mov
inc
jmp
mov
or
cmp
aas
test
mov
inc
mov
cmp
pop
int
inc
je
add
mov
cmp
and
jecxz
lahf
and
mov
add
mov
mov
inc
and
popa
pop
inc
lret
pop
mov
mov
push
xchg
nop
sub
outsl
jmp
mov
mov
sub
sbb
bound
orb
and
in
std
sbb
sbb
movsl
ds
pop
orb
sbb
movsl
pop
loopne
lcall
dec
and
and
mov
add
ret
lret
sub
xor
dec
in
jno
gs
push
cmp
aad
xchg
add
shll
stos
enter
out
lahf
insb
adc
mov
nop
jae
pop
cmpsb
jle
fs
and
mov
pop
jae
int3
subl
ret
arpl
cmp
pop
mov
mov
out
js
push
aaa
push
or
sbb
pop
xor
arpl
stos
out
xor
xor
ss
shlb
dec
dec
in
imul
inc
jne
cmp
xchg
mov
inc
mov
data16
int3
aas
xchg
or
xchg
push
pop
inc
sbb
mov
mov
xor
sar
jbe
dec
cmp
mov
loope
mov
inc
into
movsl
xor
xor
xchg
or
xchg
cmp
mov
adc
enter
or
dec
movsb
test
mov
jae
sub
mov
fadd
imul
and
jmp
mov
pushf
scas
jp
sahf
enter
add
adc
push
jecxz
bound
adc
gs
dec
xchg
adc
into
call
subps
out
daa
and
std
testl
out
enter
and
lods
repnz
mov
pop
mov
mov
cltd
cmp
push
cmc
icebp
mov
lea
addr16
add
mov
das
lock
mov
mov
mov
add
mov
xchg
les
pushf
test
pop
xor
aas
mov
pop
imul
or
xor
jp
call
jo
sub
fidivl
pop
jnp
cwtl
imul
lsl
shlb
inc
xor
jns
stos
lahf
mov
test
ds
add
dec
xchg
insb
pop
mov
jl
jl
clc
ljmp
into
dec
lahf
xchg
std
popl
jbe
lds
cs
xor
jecxz
add
lods
push
xchg
fwait
int
fldt
xor
cmpl
inc
push
cmpsb
cmp
xor
call
into
xchg
push
mov
jb
ret
mov
out
pop
dec
fs
addl
add
imul
bound
in
lods
ret
lods
fisubrl
xchg
mov
pop
inc
xor
add
adc
repz
cwtl
mov
adc
repnz
push
mov
mov
add
xchg
pop
xchg
andb
lret
pop
pop
not
sbb
or
rol
gs
out
xchg
and
aaa
ja
lcall
in
decb
test
pop
aam
jge
xchg
aaa
aas
aaa
sbb
push
ret
dec
jo
mov
fcoms
xchg
jp
adc
cs
scas
push
negl
lea
inc
dec
xchg
popa
in
lret
jle
jecxz
shr
jl
gs
xor
mov
inc
sti
ret
xchg
pop
lret
push
cmp
nop
addr16
xor
push
lret
ret
cvtps2pd
repnz
mov
repz
add
sub
add
subl
push
sbb
leave
in
mov
xchg
rcll
outsl
jno
sbb
adc
xor
lcall
sub
repz
xchg
ret
xchg
pop
push
and
js
mov
cmc
or
test
insb
ljmp
ret
icebp
lahf
inc
cwtl
push
lcall
lret
iret
cmp
nop
jg
addr16
xor
xchg
jecxz
sub
and
mov
fsts
lret
or
cmp
sub
cmp
jne
mul
inc
adc
jae
jge
pop
xor
ret
sti
sbb
stos
pop
inc
adc
push
mov
insl
sbb
in
mov
push
std
jo
pop
xchg
sbb
push
imul
repnz
xor
or
pop
dec
pushf
mov
add
add
pop
ja
fists
sahf
stos
push
pcmpeqw
std
lds
aaa
bound
mov
std
mov
pop
jmp
mov
icebp
popa
add
push
jnp
mov
notl
or
int
and
ljmp
test
stos
insl
and
pop
add
orb
les
es
lock
aad
cmp
inc
shll
aad
push
sbb
sbb
inc
dec
cmp
js
inc
mov
mov
outsl
mov
xchg
leave
mov
imul
les
fwait
enter
dec
adc
and
stos
dec
std
movsb
inc
mov
stc
cmp
pusha
mov
insl
or
in
pop
inc
sub
mov
decl
pop
inc
in
lahf
enter
cvtpi2ps
jo
mov
test
roll
pop
ds
sahf
andl
repz
mov
in
mov
xorb
sbb
ret
xor
push
lods
das
mov
mov
sub
push
mov
sub
mov
sub
stc
push
mov
mov
mov
call
out
inc
pop
cltd
inc
xor
or
cmpsl
ret
mov
fstps
dec
dec
lods
pushf
incb
cmp
jle
dec
pop
or
loope
mov
mov
and
arpl
popa
push
dec
jbe
cs
cmc
inc
dec
cltd
hlt
and
and
mov
sbb
sbb
in
mov
bound
out
lock
push
sub
pushf
cld
push
inc
jns
fdivl
or
cmpsl
mov
adc
or
add
dec
lret
in
in
add
cmp
scas
lock
popa
sub
cmp
inc
js
mov
into
test
mov
je
and
sahf
orl
pop
inc
push
loopne
arpl
jmp
sahf
dec
and
and
icebp
xorb
pop
cmpsl
repz
cmp
push
or
push
add
mov
js
push
cmp
loope
addl
pop
dec
mov
hlt
cli
rorl
xchg
jmp
pop
mov
cmp
pop
psadbw
mov
std
sub
out
and
int3
fs
clc
jle
lds
push
leave
in
loope
and
xchg
lret
aam
push
cmpsl
test
xor
sub
sbb
push
out
pop
imul
push
mov
sub
jno
fmuls
and
dec
adc
pop
cmc
scas
mov
repnz
or
mov
xchg
rcll
in
sbb
jle
sub
arpl
pop
sbb
repnz
mov
das
xor
push
imul
mov
pop
mov
enter
bound
test
pop
fs
pop
adc
adc
mov
push
mov
cli
cmp
rcr
xlat
push
repnz
arpl
in
mov
comiss
lea
mov
sti
shl
inc
inc
fsincos
sub
mov
push
popf
push
mov
jle
pop
les
bswap
lock
mov
int3
sbb
jno
mov
sarb
inc
call
mov
repnz
lock
mov
leave
push
bnd
orl
add
pushf
cmpsb
ds
test
lds
push
dec
iret
mov
enter
test
mov
int
add
xor
sbb
out
xchg
ja
das
pop
fists
ficompl
pop
les
fisubrs
and
enter
mov
nop
push
jb
push
or
push
rcrb
test
xor
jmp
mov
shrb
mov
in
cmpl
inc
and
adcb
jbe
cli
push
sub
xor
movsb
mov
das
popa
shll
xchg
add
ret
jo,pt
test
popa
testl
jns
adc
dec
sbb
fstpt
gs
rcrl
mov
sbb
sti
sub
loop
push
popa
xlat
push
xchg
pop
fwait
notl
mov
stc
loopne
sti
repnz
mov
std
outsb
out
push
vpmacssdql
daa
fdivp
test
pop
test
hlt
push
not
push
xor
imul
adcl
shrb
jecxz
fistpl
test
mov
lahf
cwtl
mull
out
push
iret
fcoml
jne
mov
xchg
cmp
mov
stos
cmc
out
inc
out
testb
cli
cmp
xchg
sbb
fs
cmp
pop
or
ffree
push
mov
ja
mov
lock
movsb
insb
ljmp
fildll
mov
adc
outsb
cwtl
stos
or
and
rorb
sahf
cmp
sub
mov
mov
sbbb
repnz
pop
jb
std
lods
out
and
mov
gs
outsb
push
xor
push
lock
leave
lock
add
push
adc
sub
loope
xchg
insb
rorl
les
loopne
push
cmp
pop
cltd
pop
popf
adc
jnp
mov
xor
mov
pop
lret
addr16
arpl
cmp
xchg
incl
adc
ret
mov
incl
decb
mov
rcll
fimuls
mov
xchg
insb
push
pushf
or
and
aad
pushf
mov
fs
sahf
leave
lcall
rorl
icebp
or
test
cli
or
or
cmp
lods
dec
imul
dec
push
adc
xchg
and
rolb
mov
mov
ljmp
adc
fstl
inc
dec
insl
and
popa
pop
ja
adc
dec
mov
mov
fisttpl
add
pop
fnstcw
sahf
adc
adc
cmp
lret
je
mov
mov
loope
cmp
fsubs
pop
cmp
or
add
xchg
dec
pop
ds
mov
in
lods
inc
adc
jb
inc
xchg
pop
sub
inc
aad
or
sahf
jl
test
dec
xchg
ds
inc
subl
ret
xchg
push
test
call
add
inc
stc
rclb
not
push
popf
push
lret
jne
test
mov
andl
add
mov
roll
sti
sarl
aas
push
stos
push
add
sbb
mov
sti
popf
mov
lret
sbb
and
dec
and
incl
out
dec
rorl
hlt
in
push
mov
stc
xchg
adc
test
in
jle
test
mov
jmp
fisubrl
mov
movsl
shlb
adc
cmc
into
adc
inc
out
adc
fimull
mov
mov
pop
jno
imull
pushf
mov
mov
sub
popa
mov
or
pusha
out
mov
imul
stc
addl
scas
jno
js
iret
ja
push
pop
lret
je
cltd
ss
jle
sub
rorl
add
mov
fdivrs
xchg
shl
ljmp
je
repnz
cli
mov
adc
sbb
daa
fisttpl
push
and
pop
lahf
fwait
mov
rorl
bound
mov
or
cmpxchg
hlt
out
movsb
or
fwait
out
data16
sbb
jmp
xorl
inc
push
stc
lahf
bound
xchg
and
lahf
jmp
push
pop
cmpb
xchg
loop
lahf
inc
dec
dec
push
js
in
aaa
out
stos
test
or
outsl
cmpl
xchg
xor
mov
xlat
sarb
pop
pop
mov
aaa
sub
stos
push
scas
es
stos
mov
xor
in
push
xor
ret
jno
xor
push
lret
cmp
or
dec
subl
lea
jl
andl
clc
add
or
lret
popf
rcrl
in
stos
in
subl
jecxz
jnp
fldt
jmp
pop
mov
jne
movsb
repz
rorl
push
sbb
nop
pop
inc
adc
cltd
scas
jl
iret
lods
and
cmp
lahf
inc
sub
arpl
or
adc
or
test
pusha
daa
add
cmp
sahf
enter
xor
repz
jo
jbe
cmpsl
push
and
fs
pop
push
ret
dec
push
out
shll
jmp
or
leave
mov
jmp
and
movsl
pop
fs
add
dec
aad
loope
cmpsb
stos
xlat
shll
adc
cmc
filds
sub
pop
imul
outsb
aam
insl
or
push
rorb
mov
scas
imul
cli
dec
out
dec
or
pop
lcall
sbb
pop
xchg
jb
setp
sub
stc
pop
push
into
mov
mov
lods
jbe
inc
int
sbb
rclb
dec
xor
insl
nop
sbb
out
mov
iret
pop
pushf
mov
inc
jae
imull
sbb
cmp
fucomp
adc
scas
sti
jnp
inc
stc
add
mov
pushf
mov
loop
inc
push
xor
lods
xchg
sub
fldl
int
and
jnp
push
xchg
mov
fnstenv
pop
call
out
mov
add
gs
aas
leave
das
in
jne
inc
nop
fdivs
mov
cmp
xchg
popa
pusha
xor
data16
popa
push
xchg
push
fsub
ljmp
clc
xchg
xor
sbb
add
jl
movsl
loopne
pop
popa
push
mov
inc
xchg
cmpsb
mov
add
mov
insl
stc
imul
add
out
xchg
stc
xchg
pop
in
inc
jg
dec
mov
enter
inc
cmp
mov
mov
imull
rcrl
mov
insb
cmpsb
loopne
push
jb
jbe
jno
sbb
sbb
mov
xchg
les
push
jne
adc
mov
aaa
jle
or
fidivl
leave
test
outsl
or
mov
sbb
and
scas
push
nopl
sub
xor
xlat
arpl
cmp
out
add
jb
mov
out
cmp
jmp
das
int3
dec
sbb
dec
imul
push
or
inc
mov
adcb
es
hlt
fisttps
jns
push
push
push
jg
in
cli
mov
cli
jmp
mov
out
jns
pop
imul
mul
xchg
mov
rcr
xor
fsubr
aas
xchg
mov
dec
fstpt
mov
mov
testb
popf
inc
das
xor
fs
add
lea
mov
dec
dec
das
jns
into
sahf
out
add
xchg
and
or
jno
fwait
fwait
push
in
cwtl
cmp
sti
cmp
push
mov
faddp
cmp
addr16
sub
xchg
imul
test
add
adc
jno
test
pop
sub
enter
xor
cltd
scas
pop
ds
arpl
pop
mov
or
xchg
cmpsb
xlat
cmp
pop
jp
cmpsl
sub
xchg
add
out
movsb
outsb
push
push
enter
sbb
and
push
mov
fwait
add
cmp
inc
pop
push
lret
lea
jle
mov
clc
nop
cmp
rcr
jp
and
test
mov
push
adc
xchg
test
adc
push
pusha
imul
addl
shrl
ja
repz
bound
repnz
pop
push
lea
xor
scas
sbb
dec
movsb
xchg
or
inc
push
test
aaa
pop
lods
pop
xchg
aaa
cmc
dec
shlb
test
movsb
das
inc
pop
shll
or
xchg
xchg
jg
jle
adc
add
and
std
add
jp
mov
loop
push
pushf
pop
frstor
cwtl
jns
insl
fcompl
js
add
stc
lahf
push
loop
roll
out
int3
mov
dec
in
cmp
mov
lea
fidivs
pop
pop
jmp
xchg
sub
xor
sub
jno
or
lock
push
sub
add
add
sbb
jne
adc
in
push
fwait
adc
add
pop
sbb
add
cmc
out
movsl
clc
addr16
daa
add
leave
push
divl
push
sub
cmp
push
jbe
call
jo
les
dec
sbb
and
xchg
test
dec
add
rcrl
xchg
and
stos
cmp
mov
aad
jp
jbe
cmp
iret
lea
iret
inc
dec
cmc
in
or
dec
dec
sbb
les
or
pop
jl
pop
loop
or
mov
mov
mul
and
iret
dec
jnp
cld
add
add
jl
iret
cltd
jae
sub
xchg
imul
sahf
push
cmpsl
outsb
jecxz
pop
push
pop
and
cmp
inc
sbb
shl
aaa
imull
adc
push
cmp
cmpsl
pushf
lcall
and
imulb
jns
mov
adc
jg
add
push
xor
inc
sbb
add
and
adc
add
aaa
add
rcl
pusha
adc
repz
fnstcw
int
lods
jnp
cli
mov
dec
int3
dec
dec
pop
sub
pusha
mov
jbe
add
dec
aam
into
sbb
shrl
xchg
test
loop
pop
mov
or
or
movsb
xor
add
xor
mov
dec
nop
xor
loopne,pt
cmp
dec
repnz
inc
and
movsb
stos
mov
adc
cmc
enter
sahf
pop
xchg
test
pop
lds
aas
add
adc
push
fsubrs
or
and
mov
movsl
inc
loope
insb
gs
xchg
pop
in
sbb
lods
mov
cli
call
jne
pushf
sub
mov
jo
and
stos
outsl
add
mov
push
or
jno
mov
mov
push
dec
arpl
pop
dec
jg
popf
das
mov
cwtl
jae
inc
cmpsl
sub
or
js
or
adc
popf
or
mov
rcrb
push
enter
clc
lret
mov
cmp
fmull
jmp
sahf
add
and
pop
cs
push
jo
mov
ja
or
jns
sbb
dec
cmp
outsl
dec
push
push
insl
mov
add
xor
push
outsb
pop
inc
pop
out
push
pop
fstpl
ja
push
in
shll
push
gs
mov
dec
rcll
pop
xor
shrl
jge
dec
out
outsb
jmp
sbb
pop
sub
adc
fildl
mov
adc
xchg
xchg
sub
mov
movsb
lahf
fs
jmp
out
out
and
mov
and
mov
push
mov
or
std
fnstenv
mov
pop
or
dec
dec
jmp
jl
pop
sarl
dec
sahf
in
xor
popf
lock
popa
movsl
xor
aam
mov
inc
rorl
jnp
mov
cltd
dec
lret
and
mov
cli
push
sub
ss
movsb
fcomps
sub
xchg
dec
cwtl
pop
inc
sbbb
pop
jle
or
jnp
repnz
adc
loopne
sbb
inc
add
add
mov
lods
fs
popa
icebp
xor
and
push
xchg
out
imul
lods
inc
sahf
sbb
sbb
pop
jge
cmp
movsl
jg
ret
test
mov
or
sbb
dec
test
mov
stos
movsb
xor
mov
inc
cld
push
xor
jle
push
fldcw
xchg
push
loope
xchg
add
lcall
ret
xlat
ds
ja
mov
sbb
loop
dec
ds
pop
push
mov
inc
mov
hlt
sub
jns
sbb
push
jmp
mov
loop
daa
mov
and
xchg
xlat
jg
jne
pop
cli
add
popf
fcomp
scas
sbb
mov
add
test
fwait
rolb
jmp
lea
stc
add
outsl
sbbl
rcrl
hlt
mov
hlt
push
out
jae
out
add
pop
in
lahf
mov
test
incb
data16
sbb
sub
sub
mov
insl
sbb
out
push
add
xorb
cmp
stos
int3
jno
cmp
shll
or
mov
andl
mov
pop
leave
sti
mov
fadds
xor
insl
cltd
pop
xchg
inc
jg
inc
mov
adc
ret
movntq
lods
icebp
dec
inc
jno
stos
pop
push
mov
out
adcl
mov
jl
pop
and
outsb
aas
gs
loop
cmpl
xcrypt-ofb
cmpsl
outsl
cltd
add
or
scas
push
and
push
mov
out
andb
and
mov
test
je
shll
inc
fmul
mov
dec
cmp
push
dec
xchg
test
xchg
sub
mov
or
shlb
fwait
into
in
lods
cmp
stos
enter
fidivrl
cmp
popf
lods
inc
das
iret
mov
sbb
daa
fcmovne
jno
stc
xor
jp
ret
rorl
cli
outsb
push
and
out
je
sub
aad
jp
dec
fsubrs
add
shl
adc
inc
out
lcall
push
int
dec
xchg
mov
cmpsl
in
push
adc
cmpb
or
faddl
xchg
scas
mov
mov
xchg
icebp
dec
imul
mov
sbb
push
mov
push
cmp
movsb
jbe
mov
lcall
dec
pop
int3
push
adc
jg
mov
ss
dec
push
dec
ljmp
mov
push
insb
cmp
inc
mov
lret
xor
or
pushf
add
lea
inc
ljmp
rorb
repz
mov
out
pop
into
ds
mull
and
inc
rorb
mov
sbb
add
lods
iret
jae
aas
pop
packsswb
repz
xorb
pop
push
add
sbb
jb
mov
jge
fstl
add
push
or
lock
lret
xchg
dec
and
daa
ss
mov
push
leave
clc
cmc
inc
in
inc
stos
push
jb
lret
add
xlat
mov
aad
xchg
inc
sub
pushf
js
dec
sahf
xchg
inc
add
cmp
xor
xchg
loopne
sti
sub
fs
lods
dec
xchg
test
int
stc
jbe
push
jmp
clc
addb
push
jecxz
lods
mov
pop
aas
les
pop
fs
xor
loope
push
add
cmp
or
cmp
push
add
mov
imul
test
das
sahf
mov
ja
pop
leave
sbb
pushf
sarl
fsts
icebp
or
adc
inc
scas
sbb
pop
adc
pop
sbb
out
mov
dec
mov
dec
push
push
rorb
jb
lods
xor
xor
testl
pop
cmp
mov
scas
xchg
mov
addl
and
xor
shrb
cltd
in
adc
pop
xchg
int3
jns
arpl
daa
adc
inc
xchg
ss
mov
aas
cs
sub
daa
aam
mov
mov
dec
fisubrs
sahf
sbb
enter
xor
imul
or
aad
fstpl
cmp
push
add
cmova
movsl
in
cld
movsb
jae
jp
gs
cltd
inc
jo
push
xor
clc
and
xor
into
xchg
xchg
xor
xorb
inc
in
inc
mov
mov
out
outsl
jecxz
xor
pop
sub
jecxz
mov
dec
or
inc
adc
xor
shrl
or
jge
negb
pop
fistl
jne
lods
mov
add
idivl
pop
xchg
shrl
into
mov
inc
inc
lods
and
out
jmp
stc
fs
push
inc
mov
sbb
out
fisubrs
cmp
pop
sub
adc
mov
hlt
add
adc
xchg
sub
ljmp
lret
aas
aas
pop
cwtl
es
clc
inc
dec
cmp
pop
mov
out
enter
mov
xchg
cmp
add
xor
or
mov
rolb
imul
sub
xchg
jl
fs
cmc
sbb
sub
cltd
mov
jbe
pop
mov
and
sbb
jns
pop
push
movl
jae
ret
ds
push
dec
cmp
ljmp
loopne
cmpl
pop
sub
cltd
repnz
jne
dec
sahf
out
mov
jl
out
or
ds
jmp
or
jmp
xlat
rcll
icebp
mov
into
xor
shrb
push
test
les
and
out
fdivr
xor
push
pop
or
mov
pushf
scas
pop
and
arpl
mov
daa
ret
jo
clc
shll
push
call
sub
lods
mul
push
imul
inc
mov
pusha
cld
dec
mov
push
js
push
adc
fldt
jns
pop
cmp
iret
or
in
lahf
ud2
jo
fxch
cmp
enter
fldt
test
cwtl
lods
xchg
inc
insl
ret
mov
sbb
fdivr
or
jne,pt
out
dec
push
mov
call
lods
mov
mov
lods
mov
scas
mov
xor
icebp
bound
call
add
hlt
in
cmp
dec
mov
rorb
shr
enter
ja
je
push
push
loop
movsl
mov
sbb
jns
push
cmp
cmp
xchg
pop
test
push
js
adc
loope
or
mov
aad
out
insl
call
sub
stos
xchg
scas
or
pop
xor
mov
stc
icebp
sbb
pop
dec
cltd
xorl
rorb
add
pop
and
dec
outsl
jo
xchg
mov
cld
sbb
push
push
lods
aaa
in
out
pop
inc
xor
das
je
xor
jne
cltd
mov
cld
xchg
fdivl
sub
je
stc
cltd
ds
pop
pop
mov
pop
lods
cmp
mulb
dec
mov
dec
repnz
jl
xchg
xchg
imul
dec
rcrl
sub
test
inc
xchg
or
xor
pop
sarb
xor
cmp
jne
out
xchg
jae
repnz
cmp
arpl
mov
mov
push
outsl
push
xor
stc
movsb
scas
sub
pushf
sbb
int
lret
mov
mov
add
lret
mov
adc
pusha
insl
mov
test
push
outsb
movsb
orl
outsb
dec
enter
lock
cmc
jecxz
or
adc
sbb
mov
jge
popa
and
fxch
imul
adc
mov
adc
cmp
and
lret
cmp
add
ror
fcompl
mov
shlb
or
lahf
adc
and
add
pop
jge
sti
xchg
inc
sub
rolb
loop
xor
ds
adc
jg
and
pop
and
mov
lret
xchg
gs
xor
es
mov
sbb
inc
pop
je
pop
inc
outsl
jecxz
cmp
aas
movsl
ljmp
inc
mov
mov
jnp
mov
clc
dec
mov
mov
adc
push
pop
xchg
or
sarb
mov
cmp
push
adc
inc
cld
jecxz
icebp
push
push
push
mov
or
stos
out
cmp
add
xor
sbb
flds
fwait
mov
xchg
xchg
fistpll
inc
sbb
push
fwait
in
jnp
adc
js
pop
popa
jmp
fcomps
arpl
or
popf
stos
into
fimuls
sti
dec
lea
das
mov
out
lods
lock
push
sbb
pop
fcompl
xchg
dec
mov
or
inc
lret
xchg
cmp
inc
xchg
push
cmc
shrl
mov
push
dec
cmp
sub
sbb
fmul
shrb
int
test
mov
mov
add
adc
aad
mov
sbb
jo
popf
mov
cmpsb
adc
mov
mov
or
pop
shrl
pop
test
movsl
push
or
outsl
and
fisttpl
fiaddl
push
movsb
movl
pop
in
or
fs
jno
xchg
out
cmpsl
or
inc
pusha
mov
mov
sbbl
out
nop
mov
pop
cwtl
test
hlt
cwtl
jne
cmp
push
adc
pop
dec
test
decb
int
fdivrl
xchg
xor
sub
mov
loop
fstpl
inc
fildll
xchg
pushf
in
jp
gs
pop
dec
pushf
je
inc
pop
xchg
dec
lret
enter
mov
aas
mov
pop
sub
jns
loopne
in
inc
pop
je
ret
lock
or
dec
clc
pusha
loope
ljmp
or
mov
je
enter
stc
xchg
int3
cmp
push
ret
popa
mov
dec
mov
lods
subb
dec
inc
dec
inc
mov
bswap
mov
out
add
cld
inc
sbb
pop
pop
mov
mov
adc
pop
adc
mov
jp
pop
xor
mov
or
mov
pop
inc
mov
aas
mov
mov
xor
cmpsl
scas
xchg
std
lods
dec
jne
pop
lea
xchg
cmp
hlt
cmp
cmp
jmp
or
mov
pop
popf
lret
sarl
dec
int
lcall
sub
outsb
mov
jle
push
push
out
sbb
repnz
xchg
push
mov
jg
push
popf
push
inc
mov
pop
and
inc
xor
add
outsb
gs
xchg
xchg
fiadds
mov
push
inc
aam
or
scas
mov
das
sub
dec
addr16
outsb
aam
in
je
push
cltd
xlat
mov
fwait
pusha
hlt
mov
addr16
cmpsl
jp
jmp
insb
mov
daa
xchg
adc
sbb
js
pop
mov
inc
sbb
aam
push
dec
stos
push
mov
sub
pop
test
popa
repnz
cltd
int
dec
shlb
rcrb
ja
or
sbb
pop
imul
cltd
dec
fstps
pop
shrl
pop
xchg
dec
cmp
inc
int3
adc
fisttpll
sub
mov
xchg
in
cmc
mov
mov
data16
in
add
push
vmovshdup
shrb
jmp
adcb
das
and
gs
dec
fdivrs
dec
and
stc
xor
push
pusha
xor
add
jg
push
das
std
mov
mov
mov
repz
lret
sub
lods
mov
ds
pop
mov
loop
or
mov
loope
lea
arpl
rol
push
mov
in
scas
int3
std
andb
je
add
jp
in
mov
or
mov
fisubs
les
lahf
out
loope
std
aaa
add
or
fisubs
push
add
loopne
andb
cmc
inc
fisubrs
sub
push
out
loope
incl
xor
mov
pop
rolb
sub
and
js
outsl
je
or
jns
xchg
mov
sbb
mov
sbb
push
ljmp
ret
iret
call
rol
je
xchg
ljmp
out
fs
xchg
lds
jl
push
jbe
and
movsb
mov
insl
sbbl
mov
fcmovne
lret
mov
fimuls
jge
loope
jge
xor
cmp
push
inc
pop
je
shlb
xor
mov
stos
mov
jo
pop
jmp
in
fs
pop
sub
lahf
or
cs
inc
in
mov
xor
xor
stc
aad
and
xchg
and
sahf
test
ret
add
inc
xchg
mov
mov
mov
aad
mov
inc
decl
dec
test
lock
mov
xchg
pop
mov
sbb
mov
in
fwait
add
jnp
cs
into
push
push
int3
lcall
je
sti
mov
push
xchg
add
mov
push
scas
push
lods
outsl
dec
xchg
jae
js
cli
aad
xor
push
mov
cmpsl
cwtl
int
sub
out
push
daa
mov
jmp
dec
bound
mov
push
out
mov
jle
push
lods
cmp
add
int
sbb
neg
ss
jo
mov
sbb
mov
add
ret
data16
sub
jecxz
push
xchg
pop
xor
mov
jecxz
mov
dec
imul
fbstp
ds
sbb
sbb
mov
pop
inc
insl
int
divl
outsb
popa
cmp
loope
daa
loopne
pop
in
cld
add
xchg
add
mov
pop
adc
int3
int
bound
pop
ret
adc
jp
jl
test
bound
lahf
or
dec
push
sbb
setne
mov
fnstsw
cmp
out
test
lods
push
inc
or
mov
not
adc
or
pop
mov
or
xor
jno
cmpb
popf
shll
mov
cmp
icebp
pop
jle
mov
les
sahf
and
arpl
in
or
mov
sbb
scas
imul
sbb
lahf
rcl
sbb
imul
pop
repz
fwait
ret
mov
nop
jnp
and
push
pop
xor
sbb
xor
mov
lret
xchg
aaa
xchg
sub
rcrl
xchg
dec
push
sti
mov
inc
xor
dec
pushf
es
lds
jmp
sub
out
jb
pop
push
inc
push
cmp
mov
or
neg
sbb
test
dec
xor
mov
push
push
jle
xlat
cmp
sub
mov
lock
scas
xor
les
inc
scas
clc
cld
leave
ss
mov
mov
xchg
mov
iret
cmc
les
ret
xchg
mov
or
adc
or
std
pop
pop
test
icebp
adc
out
jmp
inc
fcomps
cs
pop
push
fimull
sub
mov
jecxz
jae
xchg
pop
and
or
mov
or
add
shl
or
dec
mov
or
mov
jne
out
leave
xor
and
lret
push
fistpll
ljmp
xchg
dec
jl
cmp
xor
pop
or
push
cltd
push
testl
int3
inc
or
ja
sbb
ret
adc
mov
mov
adc
cmp
or
cmp
pop
jo,pn
jae
rcr
lret
jl
ljmp
int
icebp
push
jns
lds
cmp
sub
add
sub
incb
mov
xchg
bound
push
outsb
mov
sbb
dec
and
mov
test
fcoml
fst
test
xor
mov
mov
xor
cld
aas
roll
jb
push
pusha
stos
nop
imulb
pop
ds
lock
xor
sub
add
bound
je
mov
push
xor
cmp
lret
aad
test
jbe
nop
pop
mov
sub
sub
or
jns
jne
pop
mov
cld
cmc
add
cmp
div
cli
test
xor
sbbl
mov
mov
xchg
sub
outsl
pushf
icebp
mov
cmp
jnp
pop
out
movsb
les
jbe
pop
out
cmp
sub
mov
ret
jmp
adc
inc
mov
mov
or
ficompl
int3
in
sbb
cmp
sbbb
cwtl
ret
cwtl
sub
mov
sub
mov
ljmp
ja
mov
pop
sahf
push
mov
inc
lods
enter
and
lds
or
push
aam
xchg
gs
add
sub
lock
cmpsb
loope
into
adc
inc
cmc
xchg
sbb
cmp
inc
pop
loope
pop
loopne
xor
mov
cmp
mov
pop
fs
lds
dec
inc
cmp
or
inc
or
out
and
gs
test
movsl
jge
out
enter
push
add
cmp
add
ret
cmp
fwait
pushf
sarl
rcl
hlt
or
inc
mov
mov
or
pop
push
mov
je
sbb
inc
clc
sub
sbb
daa
popa
mov
out
repnz
dec
stc
je
xchg
pushf
mov
in
dec
adc
repz
sahf
xor
xor
shr
inc
ds
popf
mov
xchg
scas
push
icebp
or
inc
int
mov
jnp
push
jecxz
cld
inc
cmp
nop
repz
adc
xor
sbb
push
dec
sbb
pushf
mov
or
add
imul
jge
sbb
pushf
add
pop
pop
xchg
xchg
mov
jno
in
jbe
mov
shrl
popf
inc
stc
sub
xchg
notb
jns
outsb
out
loopne
push
xor
dec
xor
jp
jo
mov
inc
pop
and
shr
outsl
push
jmp
dec
pusha
mov
sbb
ss
sub
jl
add
add
inc
cmpsl
xchg
lcall
pop
mov
sbb
sti
push
ss
jnp
or
jnp
loopne
lock
mov
shlb
in
pop
jge
fdivs
arpl
fstl
sahf
sbb
mov
sbb
xlat
push
adc
leave
jecxz
sbb
cmp
pop
insl
xchg
mov
pop
shl
popa
inc
jno
mov
aad
and
jmp
mov
addr16
xchg
sub
ljmp
xor
in
push
scas
scas
testb
sbb
cwtl
clc
xor
cmp
or
rorb
xchg
xchg
adc
cmc
add
or
mov
jecxz,pn
lahf
int
push
mov
mov
in
stos
lock
imul
notb
inc
and
adc
outsb
adc
enter
pushf
sub
jo
sub
out
ss
sbb
inc
cmp
leave
das
scas
insb
adc
push
and
sbb
movsl
xchg
mov
lods
cs
adc
icebp
mov
add
out
mov
pop
cmpsb
dec
shll
std
mov
mov
sub
jle
jb
mov
push
jmp
jne
pop
dec
stc
pushf
cmpsb
jbe
push
lcall
sbb
in
mov
and
mov
sbb
pop
aam
cmp
mov
xor
mov
lcall
movsl
outsb
dec
rcrl
daa
mov
push
out
xchg
pop
pop
stc
xor
mov
push
pop
addl
xlat
fbld
pop
mov
xchg
lret
pop
sbb
cltd
pop
mov
loop
fucomp
jno
push
inc
inc
mov
bound
or
push
jo
test
xchg
pop
stc
mov
xchg
popl
and
push
add
jb
imul
and
cmp
in
dec
js
cmp
dec
repnz
dec
sbb
in
ret
icebp
dec
lds
xor
sub
mov
setne
clc
cli
adcb
lods
enter
stos
lcall
push
stos
outsb
push
js
out
cmc
jo
das
cli
and
xchg
lcall
daa
dec
pop
adc
out
cmp
mov
fisttps
fmuls
filds
flds
shlb
cs
jno
add
icebp
push
cmp
push
js
int3
xchg
stos
and
and
jl
les
sub
xchg
cmp
adc
push
jns
dec
lcall
rolb
dec
dec
aad
push
jno
lcall
add
sbb
std
add
insl
or
mov
sahf
int
sub
pop
mov
add
rcll
rorb
fisttpll
cltd
outsb
sub
adc
and
mov
popfw
nop
cmpb
mov
fdivrl
push
movsl
lret
pushf
jmp
push
aad
insb
orb
daa
add
add
popa
or
cmp
mov
repz
in
push
jle
pop
inc
pop
mov
lret
in
and
repz
sub
mov
fcoms
outsl
mov
hlt
xchg
lock
add
jg
stos
stc
inc
es
imul
sub
in
or
sti
cwtl
xor
pop
or
adc
rcll
leave
repnz
dec
loop
ss
sbb
mov
xchg
and
lahf
xchg
jno
jno
cmc
cmp
cwtl
outsb
xor
push
repz
into
rorl
sbb
push
fstps
jae
sub
dec
or
inc
insb
out
inc
popa
jae
mov
outsb
xchg
sti
pop
scas
mov
xchg
ds
mov
mov
mov
aad
push
mov
fadds
fsubr
js
cmp
stos
cltd
sti
xor
aaa
inc
jno
popf
xchg
aaa
fiadds
push
or
incb
rcl
push
inc
dec
aaa
adc
std
jb
loope
fsubs
cltd
cmp
or
dec
ljmp
or
dec
jge
mov
dec
mov
out
inc
shlb
pop
lret
icebp
into
mov
dec
rol
mov
push
xchg
pop
loope
outsb
xorl
mov
sub
pop
xchg
out
xor
sahf
cltd
jp
lds
sub
inc
push
xor
jae
xchg
jnp
outsb
jmp
loopne
push
or
data16
aaa
movsb
xchg
outsb
or
loope
scas
xchg
inc
ds
mov
pop
xchg
or
ja
adc
daa
add
or
cmp
dec
mov
movsl
pop
jne
lock
loop
loope
or
sbb
addl
xor
dec
mov
mov
or
ds
fadd
fidivl
inc
fidivrl
sub
je
ja
fcmovnu
mov
stos
iret
es
mov
ret
xchg
hlt
or
dec
lds
and
or
push
mov
lock
sub
sub
xchg
xchg
stos
push
popa
fs
insl
rorb
or
aad
xchg
cmp
scas
lea
xor
movsl
xchg
into
and
pop
addr16
push
shlb
es
aam
adc
sbb
ss
in
jl
lahf
add
push
xor
iret
add
sbb
xchg
aad
mov
jnp
xor
fldenv
push
sti
mov
add
mov
mov
inc
dec
fimull
movsb
aas
dec
iret
push
mov
clc
mov
hlt
add
xchg
xorl
cwtl
movsb
lock
push
mov
push
fnstcw
cmp
jg
fdivs
xchg
subl
mov
mov
cltd
xlat
jp
fcmove
push
out
mov
sahf
jmp
int3
idivb
jge
cltd
pop
adc
cwtl
and
mov
and
aas
dec
mov
push
repz
fimuls
pusha
mov
shrd
in
clc
xchg
icebp
nop
fdivl
mov
stc
repz
bswap
mov
push
addr16
cmp
cltd
mov
aaa
and
into
pop
xor
movsb
mov
and
mov
rcl
fs
sub
sbb
xchg
xchg
push
inc
gs
pushf
mov
xchg
lcall
fnstcw
enter
sti
fsubp
pop
cmp
in
rclb
lock
and
pop
nop
enter
cld
inc
insb
in
cld
push
adc
in
fwait
xchg
pop
jg
in
sbb
dec
adc
lods
shlb
aad
in
fstl
pop
mov
pusha
mov
iret
je
scas
and
rclb
movsl
shr
dec
xor
fcomp
dec
push
xor
test
fs
sti
out
fsubrl
cmp
cmc
adc
lcall
fnstenv
pusha
mov
addl
push
xchg
sbb
scas
cmpb
add
out
scas
lock
sbbb
movb
test
dec
outsl
fstpl
fisubs
cs
jbe
mov
mov
insb
cmp
or
in
repnz
mov
inc
mov
insl
sbb
andl
fldl
add
jne
and
jl
int3
ficompl
fs
cltd
int3
cs
call
loop
das
in
dec
or
mov
fstl
xor
rcrb
lds
mov
out
mov
outsl
dec
clc
sub
pop
or
in
xchg
mov
movzwl
bound
cmp
popa
test
sbb
sub
inc
in
repz
sbb
mov
mov
shl
push
ljmp
and
sahf
dec
cmc
mov
inc
fdivs
in
shll
jl
adc
daa
pop
nop
pop
cs
jg
ss
mov
push
in
mov
add
sbb
mov
fwait
xlat
sub
shll
pop
xchg
push
adc
dec
repz
xchg
cli
cmp
xchg
xorl
outsl
xchg
xchg
fisubs
jb
fisubrl
sub
mov
nop
aad
xor
jns
leave
fildll
jbe
jno
leave
es
cmp
loop
leave
jecxz
fisubl
movsb
ret
inc
sub
cs
xorl
fcompl
ds
inc
stc
xchg
sbb
pop
daa
scas
dec
mov
enter
es
cmp
fldt
repnz
and
cmp
test
lods
pop
cmc
mov
cmp
pop
push
imul
pop
pop
rol
mov
cmpsb
mov
hlt
out
mov
mov
stos
scas
mov
dec
stos
and
sub
mov
inc
mov
iret
sub
das
pop
and
cmpsl
cmpsb
xor
test
leave
dec
cmc
xlat
mov
mov
add
push
inc
adc
stc
dec
lahf
sub
add
repz
dec
or
fmull
icebp
popf
adc
dec
lock
or
xchg
jle
scas
outsl
xor
jmp
pop
xchg
sub
outsb
mov
inc
filds
popaw
jmp
fs
popf
das
movsb
aam
inc
ret
pop
ss
test
push
fstl
int
pop
push
sbb
pop
std
sbb
or
sub
xor
and
jg
xor
mov
or
push
jae
or
test
sub
fmuls
leave
clc
rclb
pop
jmp
divb
loope
push
and
and
or
lods
pop
inc
pop
fimuls
shlb
xor
int3
cmp
mov
cltd
lret
inc
in
sbb
std
adc
inc
xor
cmp
jp
aas
mov
stos
pop
sbb
adc
push
idivb
addr16
and
push
sahf
inc
gs
mov
jg
mov
jmp
loop
adc
mov
dec
in
dec
inc
dec
lret
fisttpll
ss
xor
stc
add
mov
stc
adc
out
sbb
pop
mov
push
mov
push
push
add
add
cmp
adc
sti
or
jbe
aam
jg
ret
pop
push
and
cli
xchg
xchg
out
gs
test
mov
lcall
or
push
push
cmpsl
pop
sub
mov
sarb
movsb
sub
jne
pop
mov
mov
scas
sahf
in
mov
inc
leave
cmp
pop
xlat
jno
xor
jl
inc
insb
add
xor
in
push
push
scas
fldenv
ss
jp
lret
mul
and
pop
and
mov
add
inc
sub
mov
sub
mov
loopne
das
mov
in
mov
or
roll
movsl
jp
and
xor
cli
inc
mov
sub
adc
gs
aaa
or
decb
pop
sub
popa
push
sbb
js
push
out
xor
pop
in
or
jmp
cwtl
jbe
lret
xchg
pusha
pusha
push
push
mov
cmpsb
jecxz
sbb
aam
mov
push
sub
movsl
mov
hlt
movsb
xor
sbb
scas
popa
mov
xor
aaa
enter
sbb
mov
push
out
mov
mov
mov
mov
sub
out
pop
cmp
test
orl
into
lcall
lahf
in
outsb
inc
loopne
adc
dec
mov
loopne
sbb
std
lret
pop
out
or
pop
loop
aam
arpl
jmp
stos
insb
cld
sbbl
mov
in
scas
sbb
sub
lcall
stos
ficoms
jp
ja
xor
xchg
outsb
repz
jg
mov
add
xchg
sbb
shlb
loop
jge
pop
push
dec
xor
xchg
cmp
repz
xchg
mov
bound
ds
rclb
inc
push
cltd
sbbl
leave
mov
nop
and
and
test
test
and
mov
mov
insb
stc
sub
add
daa
adc
push
sub
dec
jns
ss
push
int3
mov
outsl
pop
jno
sar
sub
xor
mov
sbb
cmp
and
lret
and
pushf
int3
add
jae
les
roll
inc
cmpsb
push
and
pop
adc
mov
and
nop
adc
add
and
mov
ret
mov
jge
mov
add
repz
push
pop
stos
das
cmp
sbb
std
push
inc
inc
stc
mov
adc
mov
loop
mov
inc
mov
inc
cmp
xchg
mov
push
jmp
and
scas
test
or
clc
mov
fcoms
jne
pop
xor
cltd
mov
cmp
popf
push
imul
and
push
test
push
ljmp
inc
push
roll
add
mov
int
cmp
icebp
inc
fsqrt
jo
inc
push
pop
lods
xchg
jmp
aaa
mov
adc
gs
dec
xor
sbb
push
pushf
in
push
sarb
mov
adc
xchg
xchg
push
xor
aam
daa
jg
sub
add
fnstsw
ret
mov
rclb
dec
pop
movsl
movzbl
out
aad
adc
jns
movsl
pop
sub
into
sbb
mov
push
inc
sbb
lock
jb
in
pop
mov
mov
std
dec
mov
out
shrb
out
push
mov
fucom
xchg
sub
arpl
enter
lods
daa
cmc
fistpll
fstpl
and
sbb
sti
mov
jmp
sbb
mov
call
mov
xor
jp
pop
negb
xor
push
mov
jno
xchg
dec
out
outsl
call
jle
scas
andl
push
cmpsb
cmp
data16
aaa
mov
dec
sbb
mov
push
and
test
loop
sbb
fnsave
std
gs
cmp
ja
inc
aam
xchg
les
fs
pop
cmpsb
inc
pop
pop
xor
js
test
push
mov
daa
push
push
xchg
cmpl
loope
ret
test
mov
out
sarb
cli
jle
adc
cmp
nop
out
leave
mov
sarl
pop
fnstsw
es
or
cmp
ja
stos
test
mov
mov
mov
lock
sub
mov
in
or
fwait
push
pop
daa
aad
jp
jae
fcoml
mov
dec
ficomps
orb
adc
mov
xor
xchg
ret
add
xor
sbb
fsubl
das
lds
mov
lret
push
jo
mov
lret
xchg
das
mov
data16
outsb
stos
out
jno
loop
cld
push
insb
mov
adc
push
push
push
xor
ret
push
outsb
cld
sbb
pop
test
sti
adc
imul
push
pushf
mov
jmp
mov
sub
cmp
mov
stos
sahf
pop
add
incb
mov
inc
push
test
sti
fsubrl
mov
imul
aas
jmp
mov
cmp
lods
shl
adcb
mov
notb
mov
push
and
mov
fs
lahf
push
and
repnz
sbb
stc
aaa
ds
into
dec
out
scas
ret
insb
jo
sub
or
loope
clc
push
movsl
jecxz
rclb
jne
inc
ret
and
leave
outsb
or
xchg
pusha
mov
fisubrl
sti
out
push
and
jl
out
mov
inc
mov
cmp
fs
and
sub
push
and
jp
repz
mov
call
insb
mov
mov
lds
ss
pushf
pop
mov
daa
call
movsl
sbb
inc
mov
cwtl
cmp
jl
out
imul
test
arpl
test
andl
sti
mov
bound
in
cs
repz
mov
int
ret
mov
cmp
pop
ja
lock
inc
push
mov
and
imul
push
mov
dec
or
fdivl
mov
xor
xor
and
int3
out
xchg
mov
lahf
inc
cwtl
sub
mov
out
xchg
rorb
aas
add
jb
inc
addr16
add
es
int3
inc
xchg
jnp
adc
test
loopne
fiaddl
insl
mov
lods
and
sub
daa
dec
push
and
rorb
inc
movsl
adc
push
mov
mov
bound
sub
repnz
hlt
xchg
mov
lock
ss
push
sub
addr16
jmp
jle
jo
sub
xchg
mov
call
pop
add
lcall
enter
in
in
push
pushf
jecxz
ret
dec
popa
sti
lahf
jbe
and
mov
pop
pop
xor
mov
jmp
mov
jbe
pusha
nop
inc
imull
sbb
pop
push
or
js
sub
add
adc
mov
cmp
cltd
mov
mov
decb
add
inc
push
adc
shll
push
jmp
pop
mov
cltd
test
ss
je
andl
or
inc
sbb
push
mov
and
gs
and
jl
outsb
incl
movsl
and
sub
enter
fcmovbe
repnz
scas
sub
rcrb
sahf
pushf
fdivrs
mov
lcall
outsb
lcall
insl
cmc
cmp
jecxz
adc
dec
cmp
or
jb
mov
adc
jno
loope
pop
repnz
daa
and
mov
aam
jp
sbb
and
and
pop
lods
sub
jge
xchg
shlb
mov
push
loop
pop
pop
cmpsb
jge
jb
loopne
addr16
hlt
mov
adc
jo
mov
insl
dec
out
insl
cmp
adcl
aam
pop
sbb
push
sub
jnp
fdiv
loop
lock
pop
jmp
sti
dec
push
sarb
ljmp
pop
push
insb
jge
addr16
insl
mov
inc
sub
jo
cmp
pop
std
mov
scas
jge
xchg
add
daa
lock
pop
je
test
mov
mov
iret
dec
sbb
cs
adc
add
xchg
movsb
dec
mov
int3
outsb
pop
and
mov
cmp
cmp
mov
ffreep
jne
inc
aas
or
xchg
cli
test
sbb
fldl
cwtl
xlat
cmp
xor
xor
dec
xchg
aad
fisubrl
out
xchg
mov
in
in
sub
lcall
gs
cs
rclb
or
and
cmp
pop
cmpsl
sub
cmp
push
mulb
in
pop
sub
hlt
outsb
cltd
inc
cmp
mov
shrb
movsb
push
jnp
sbb
mov
loopne
shl
xchg
rclb
sbb
cmp
std
jmp
adc
jnp
push
arpl
leave
xchg
or
mov
mov
jmp
add
shl
test
popf
les
hlt
add
inc
gs
insl
pushf
aad
imul
adc
cltd
inc
xchg
stc
pop
cmp
repz
pop
inc
int
movsl
and
test
xchg
dec
add
je
push
pop
sbb
lea
fstpl
push
mov
add
dec
fcoml
bound
iret
and
testl
mov
add
inc
rcll
inc
jo
pop
popa
push
dec
pusha
jmp
daa
loope
inc
adc
mov
and
pop
dec
xchg
mov
out
sbb
fdiv
jne
outsl
add
outsl
icebp
mov
and
scas
or
dec
or
or
mov
outsb
cmc
jmp
and
fistpl
jno
add
testb
adc
fidivs
js
lock
xchg
jecxz
and
aas
sub
xlat
sub
inc
push
iret
jne
jecxz
shl
std
std
outsb
sbb
mov
addr16
mov
in
icebp
lahf
jg
insl
push
and
sub
fdiv
flds
xchg
ret
xchg
lret
fldenv
fwait
sub
loop
out
push
adc
pop
pop
sub
rclb
push
mov
mov
jno
outsl
lods
loope
mov
es
int3
lock
insb
dec
idivl
mov
and
cmc
or
mov
push
sbb
int
mov
lret
cltd
add
xchg
btc
cmpsl
cltd
sub
sbb
or
and
jae
scas
cmp
push
cmc
or
mov
jo
test
inc
rolb
sub
pop
jns
out
and
sub
mov
pop
pop
adcb
pop
xchg
ja
mov
sub
lock
sbb
mov
xchg
gs
je
mov
ret
enter
sbb
adc
movsl
xchg
fwait
mov
movsl
mov
or
adc
aam
data16
shr
mov
jle
mov
jne
push
test
sbb
mov
inc
mov
call
pop
mov
xor
imul
fsubr
or
ficoml
xchg
jae
xchg
lret
dec
inc
ja
cmp
cwtl
loope
adc
loop
add
cmp
lds
test
repnz
cld
push
movsl
fidivs
mov
sbb
imul
mull
decb
vandnpd
sbb
dec
in
in
ficompl
mov
and
loope
fwait
andb
xchg
cli
test
aas
sub
scas
mov
xor
and
sub
cmp
and
mov
or
ja
in
imul
sbb
add
mov
cmp
iret
lret
push
sbb
push
mov
jg
ds
out
in
stc
adc
and
adc
js
jns
inc
mov
data16
stos
ret
mov
xchg
sub
jns
inc
pop
sbb
sub
add
jae
and
pop
add
imul
pop
push
imul
sub
jnp
xchg
sbb
adc
pop
int3
aas
pop
push
call
fistl
adc
sub
ret
push
and
test
sarb
lret
mov
add
out
jg
fnstenv
into
in
rclb
das
fistl
xchg
mov
icebp
xchg
cmc
adc
dec
std
mov
or
lret
fadds
test
jno
arpl
xchg
inc
mov
hlt
aad
add
pop
mov
in
test
mov
inc
hlt
pop
xor
jp
imul
inc
mov
cmpsb
stos
jg
imul
cmp
in
add
out
adcb
popf
sbb
dec
je
pop
push
pop
lcall
mov
cld
mov
push
sbb
push
stos
test
pop
outsl
mov
push
or
pop
mov
stc
sub
sub
in
push
cmc
adc
xchg
jg
and
neg
sbb
pushf
pop
mov
sub
push
int
aam
scas
pop
in
xor
mov
cld
pop
pusha
stos
popf
out
add
adc
mov
ss
mov
jnp
dec
xchg
inc
fcoml
xor
dec
pop
jns
scas
notl
xor
test
adc
and
xchg
mov
add
xchg
mov
mov
inc
jmp
cli
mov
jb
out
jmp
xor
leave
jb
lcall
cwtl
jl
ljmp
push
mov
push
cld
mov
mov
sahf
mov
xor
out
sub
dec
hlt
add
push
out
shr
cmpsl
ret
bound
fdivs
insb
int
mov
sbbl
sub
xchg
mov
jp
adc
mov
dec
test
cmc
mov
pop
dec
in
mov
subl
mov
push
fdivp
popa
adc
adc
jo
cld
decb
mov
sbb
cmp
pop
aaa
xchg
push
fnstenv
or
cmp
xchg
xor
enter
pop
dec
jge
adc
xchg
mov
push
jns
into
lods
push
and
addr16
fs
int
sub
xor
mov
sbb
ret
or
dec
loopne
jne
push
push
ficomps
imul
testb
test
cld
jns
outsb
xor
and
push
mov
mov
ss
loop
cld
sub
cmp
lods
mov
dec
inc
inc
jb
jmp
shl
ds
pop
in
icebp
pop
mov
or
gs
fidivrs
shr
testb
mov
cwtl
cmp
jo
stos
pusha
adcl
dec
dec
pop
jbe
bound
push
stos
mov
jecxz
mov
outsb
pusha
mov
mov
dec
sti
in
jl
xchg
aam
daa
imul
cmp
lret
lcall
fnstcw
add
dec
mov
mov
scas
push
mov
arpl
test
mov
cmp
adc
push
push
mov
into
adc
sbbb
sub
cwtl
cmp
jbe
stc
outsl
popa
xor
lret
xchg
dec
sbbb
sub
shrb
sub
test
mov
scas
mov
loopne
sahf
xlat
pop
xchg
inc
test
scas
adc
sbb
test
push
jbe
mov
fsubs
pop
cmp
test
xor
mov
adc
xchg
mov
xchg
jbe
clc
bts
push
inc
js
jne
add
js
dec
pop
pop
mov
loope
push
dec
shll
mov
mov
dec
add
pop
rep
sbb
ror
adc
jb
add
xor
scas
repz
pop
loop
outsl
cmp
adc
adc
pop
xor
lahf
push
mov
subl
mov
into
popf
xchg
orb
jmp
scas
cmp
pop
inc
mov
or
mov
pop
loop
in
ja
jno
aaa
mov
shlb
add
xchg
lcall
xchg
cwtl
lea
jnp
or
hlt
repz
mov
decb
mov
insl
pop
push
add
mov
outsb
popa
js
in
fidivrs
shlb
push
sbb
lods
test
xor
enter
xor
in
cmp
jbe
inc
fldt
hlt
xor
cmp
out
fstpl
jle
cmp
sub
pop
mov
mov
mov
out
push
std
add
bound
mov
out
mov
push
mov
loop
jmp
shlb
ja
dec
std
lock
ret
daa
in
mov
push
jmp
das
subb
add
add
jno
cmp
es
mov
test
fwait
jp
inc
lock
bnd
pop
jmp
dec
cmp
rorb
mov
pop
jne
add
cmp
into
es
adc
jmp
inc
pop
pop
cwtl
and
mov
mov
jg
ret
stc
imull
out
cwtl
fldenv
mov
jle
out
xchg
loope
stc
xchg
inc
roll
scas
push
and
push
sub
hlt
clc
lock
sarl
lock
frstor
neg
popf
insb
in
cwtl
mov
test
movsb
ret
mov
dec
and
add
ljmp
cmpsb
out
movsb
shll
mov
mov
add
rolb
mov
cld
push
andl
xchg
sbb
scas
mov
pop
insl
ljmp
lods
dec
inc
ficoml
test
fimuls
fldcw
pop
popa
call
lock
cmpsb
sub
adc
xor
out
fdiv
cmp
cltd
push
out
rolb
jle
mov
cmp
rolb
push
int3
lahf
sbb
cmc
lods
mov
cmp
mov
add
mov
sarl
pop
movsl
pop
cmp
mov
jmp
aas
cld
aad
pop
and
clc
jmp
add
loopne
imul
push
call
ds
sti
ficoml
sbb
mov
popa
test
or
push
out
push
pushl
sbb
xchg
out
in
mov
jmp
addr16
rorb
fisttpll
sbb
or
fiadds
sub
jl
iret
xchg
jnp
jmp
loop
or
mov
adc
pop
sbb
mov
movsb
pop
push
je
cltd
adc
mov
loope
sbb
cmp
repz
jb
sbb
mov
cmc
jae
jne
pusha
jecxz
or
stc
out
mov
jnp
popa
dec
lods
jg
mov
pusha
inc
in
jbe
pop
xchg
fistps
or
jmp
daa
dec
mov
add
and
sub
cmpsl
jge
mov
add
mov
jp
sahf
icebp
sti
data16
out
mov
sub
imul
loop
dec
push
mov
movsl
pop
dec
scas
mov
shlb
dec
jne
and
mov
xchg
in
or
sbb
mov
je
shlb
movsl
sub
bnd
sahf
cmp
orl
insb
dec
cmp
inc
pop
mov
scas
xor
std
std
sbbl
or
aad
popl
lds
repnz
cmc
je
push
int
addr16
push
dec
push
sbb
outsb
ljmp
jmp
imul
std
cld
lret
sub
push
pop
mov
js
mov
das
mov
push
mov
jns
xor
out
shlb
add
jge
pop
dec
setbe
jno
in
daa
ss
sbb
xchg
ss
lods
pop
cmpsl
scas
loop
add
fidivs
mov
test
je
or
mov
mov
inc
rorl
push
cmp
out
jae
push
stos
punpckhbw
sub
movsl
sub
dec
sbb
or
dec
inc
lods
dec
adc
icebp
mov
call
adc
xchg
cmp
fdivs
fnstsw
jp
js
mov
test
mov
cmpsb
xor
sbb
fisubrl
cwtl
lahf
pop
inc
mov
mov
ds
mov
cmp
and
subl
cld
in
popf
and
sub
lahf
lahf
repz
test
and
in
std
dec
mov
push
scas
in
jo
test
push
jae
out
jl
loope
mov
mov
cmpl
pop
outsl
cmp
jmp
sub
shl
jo
push
gs
mov
cmpsb
adc
stc
and
mov
fcomps
sti
cwtl
sbb
inc
cltd
nop
add
int3
push
mov
cmp
pop
push
arpl
ss
cli
or
fcomps
sbb
int
dec
mov
test
adc
pushf
jns
sti
mov
cli
and
push
pusha
mov
std
mov
repnz
inc
std
xor
pop
mov
lcall
fisttps
scas
call
ret
adc
daa
jns
orb
ds
insl
push
in
movsl
and
and
pop
lret
mov
jmp
add
stos
in
pop
rclb
je
fcmovnbe
je
in
dec
mov
les
addr16
sub
pop
jo
nop
sub
dec
or
into
lgs
adc
out
out
ja
pop
fnsave
mov
loopne
inc
testb
cltd
push
adc
sub
mov
adcl
cmp
fmul
pop
outsb
loop
adc
enter
fs
mov
xchg
mov
out
inc
std
in
rolb
adc
jp
pop
and
test
ds
mov
cmpsb
inc
inc
stos
push
arpl
inc
and
jmp
rorl
mov
dec
orl
jb
lcall
adc
cmp
ljmp
pushl
adc
outsl
cltd
jns
pop
mov
ret
or
adc
icebp
xchg
scas
dec
mov
or
sub
or
jno
xchg
add
add
fcmovnbe
mov
movsb
push
or
aaa
lods
push
jg
lahf
jb
adc
lock
orb
inc
jnp
sub
cmpsl
push
insl
lret
rcpps
pop
mov
add
mov
mov
fs
fs
out
jge
cmp
shrl
or
lea
lods
push
mov
in
xchg
sub
xchg
and
and
rclb
sub
ljmp
mov
iret
notb
or
iret
mov
pusha
jg
data16
sub
pop
pop
outsl
pusha
inc
pusha
mov
pop
roll
xchg
sub
mov
push
mov
in
sahf
nop
adc
jbe
xchg
lcall
or
in
mov
bound
add
out
inc
adc
dec
push
add
dec
sub
repz
xchg
pop
mov
cld
add
sub
hlt
bound
aam
xchg
sbb
sub
xchg
in
mov
jae
shl
test
sbb
aaa
lret
pop
loop
fidivl
and
push
pop
xchg
adc
xchg
mov
fsubl
inc
and
mov
inc
xorb
loopne
sbb
xchg
lods
or
stos
jecxz
pop
dec
dec
into
dec
ret
fidivrl
jmp
int
push
xchg
mov
in
mov
idivb
pushf
stos
lret
scas
add
loop
js
ds
aas
mov
es
xchg
or
int3
or
pop
xchg
mov
cmp
insl
pushf
pusha
sub
call
ja
mov
cs
xchg
jp
stc
mov
popf
dec
je
into
aas
cmp
fcmovu
adcb
pop
push
mov
test
in
xor
push
add
sbb
fcmovu
repnz
arpl
adc
cmp
jne
fmuls
hlt
dec
xor
flds
pop
jg
adc
lock
out
jp
ja
mov
cld
addr16
mov
insl
or
mov
inc
jmp
inc
push
orb
mov
fsubl
mov
mov
hlt
adc
scas
stos
dec
ljmp
push
pop
fsubs
pop
sub
in
les
xchg
add
loopne
adc
mov
fwait
pop
std
xor
cmp
loop
pop
out
insb
ja
addr16
aaa
pop
xchg
or
pop
pop
jmp
cltd
mov
outsl
sarl
sub
adc
mov
bound
inc
js
cmp
push
icebp
inc
fwait
sbb
out
rclb
mov
or
in
push
aam
xor
mov
shll
adc
testl
andl
cmp
sub
test
cwtl
test
insl
daa
pmaxub
mov
inc
push
pop
mov
cwtl
das
xor
pop
out
out
inc
and
pop
movsl
rorl
rcrl
push
mov
add
test
rolb
jp
adc
xchg
movsl
sbb
insl
sub
jge
inc
aam
mov
les
addr16
popa
fnstenv
cld
mov
arpl
std
sbb
sti
jb
or
lock
addr16
sub
shlb
loopne
hlt
mov
test
fxch
loope
dec
repnz
daa
daa
jle
cmp
mov
xor
lret
movsl
popa
mov
or
mov
test
pop
stc
mov
jb
jg
mov
mov
ficompl
repz
je
subl
push
and
cld
imul
popa
and
sarl
ljmp
ljmp
repnz
pop
data16
xor
dec
ja
clc
js
adc
incb
inc
sub
sub
imul
in
jecxz
aam
loop
inc
add
into
adc
sub
int
add
jge
xor
inc
sub
sbb
push
test
pop
insl
ret
push
sarb
fs
xor
insb
gs
pop
and
adc
push
ret
clc
mov
sub
mov
rolb
jg
dec
test
stos
mov
sub
loope
push
das
adc
imul
gs
popa
jl
inc
pop
and
push
and
mov
ret
add
push
and
test
mov
jle,pt
addr16
xchg
dec
push
out
les
loop
xchg
push
and
mov
push
nop
subl
ljmp
js
nop
aam
out
sbb
push
push
pop
mov
mov
rolb
lods
jmp
int
xchg
enter
xor
mov
fiadds
push
stc
xor
adc
mov
pusha
inc
cltd
ss
jae
or
movsb
or
mov
cli
mov
movsb
jno
lcall
sbb
ds
iret
popf
mov
xchg
inc
orb
jb
clc
daa
push
imul
insb
lahf
call
repnz
mov
inc
repnz
arpl
pop
js
push
or
cld
inc
stc
aas
cmp
clc
fcomip
xchg
cs
aaa
xchg
push
ss
mov
es
xor
js
pop
out
or
insb
xor
cmpsl
push
sbb
mov
pop
or
add
and
pop
mov
lock
xor
add
xchg
cs
sbb
or
fcomip
rorb
int
adc
push
int
cld
and
mov
mov
in
movsb
mov
push
mov
stos
bound
sub
test
xor
clc
xchg
sbb
stc
pop
incb
inc
popl
je
push
xacquire
shl
cmpsl
out
pop
ja
sub
add
mov
xor
inc
pop
push
lahf
jle
push
stc
sub
and
sbb
divps
pop
xchg
mov
push
fcmovnb
push
adc
fucom
mov
xor
mov
enter
xchg
pop
mov
insl
cmpsl
xchg
dec
les
shll
in
ljmp
repz
jnp
ljmp
push
pop
hlt
out
stc
inc
pop
frstor
push
add
jp
lods
aam
jno
push
mov
and
insb
mov
in
es
cmp
sub
and
dec
add
push
cmp
pop
jbe
mov
ljmp
dec
in
and
cli
or
imul
cmp
mov
es
fistpll
xor
dec
insl
inc
mov
dec
test
xor
lret
xchg
xor
cmpsb
call
arpl
lcall
xchg
jbe
xchg
dec
dec
mov
pop
pop
pop
sbb
push
out
adc
scas
add
push
mov
push
jo
loope
adc
push
xchg
push
adc
xchg
mov
lods
or
data16
ja
push
scas
xor
jno
fsubl
gs
int3
popf
int
cltd
psubd
lods
push
imul
out
xchg
and
pop
pop
mov
arpl
gs
cwtl
adc
int
loop
add
shl
fisubs
in
faddp
add
cltd
mov
xchg
push
aaa
arpl
lds
jbe
sarl
test
fidivrs
outsb
pop
push
repnz
shl
adc
and
std
sub
iret
arpl
lret
jns
or
xchg
push
mov
jmp
cli
cmp
jbe
lods
sub
enter
or
cmp
xchg
fnstsw
adc
xlat
loope
outsl
popf
push
aad
or
arpl
gs
cmc
test
in
sub
mov
dec
ss
fsubl
mov
xchg
xor
dec
xchg
iret
sub
sbb
mov
or
mov
dec
or
repz
adc
pop
js
sbb
aaa
lea
sub
out
xor
out
sub
lret
out
pusha
push
sti
push
cmpsb
xor
pop
testl
lods
mov
cwtl
sar
into
iret
cli
sbb
je
xor
mov
pop
or
xchg
and
sti
cs
mov
movsb
inc
je
xor
jle
add
cmp
push
test
mov
dec
jge
iret
jne
pop
cmp
gs
aaa
jp
call
ret
sub
add
xchg
ss
fimull
mov
test
and
pop
sub
repnz
les
lock
in
lds
mull
dec
add
inc
mov
inc
cltd
dec
js
add
adc
addl
pop
add
shlb
cmp
fs
jno
xchg
into
js
aaa
test
push
pop
mov
sub
std
mov
lahf
inc
mov
imul
add
in
js
lret
fcomp
mov
bound
imul
pop
lds
ret
cli
push
scas
xchg
jbe
inc
hlt
dec
inc
test
pop
dec
pop
fs
sbbl
adc
and
mov
out
mov
in
movsl
inc
cmp
jno
add
pop
or
rclb
xchg
mov
icebp
dec
imul
mov
sahf
pop
xchg
sbb
fmuls
adc
push
or
popf
lea
pop
iret
push
cmp
std
icebp
in
repz
test
or
xchg
lds
incl
add
lock
dec
dec
mul
fcomi
aaa
xchg
mov
cs
sbb
insl
push
cwtl
mov
jmp
push
in
rcrb
pop
or
stc
test
fstl
xor
inc
pop
rorl
mov
and
and
mov
rcrl
sub
inc
dec
pop
out
nop
dec
cmp
add
adc
xlat
loopne
mov
cltd
mov
mov
xchg
test
incb
nop
push
jae
sahf
fists
pop
adc
lods
xchg
mov
or
xor
enter
dec
or
jge
orl
mov
adc
add
dec
mov
popa
jnp
xchg
push
or
adc
mov
cmpb
in
sub
dec
and
call
sbb
mov
mov
pop
or
adc
push
xor
or
sti
fsubs
fsubrp
xor
jo
icebp
fldcw
es
pusha
jo
je
rcl
adc
js
jne
pop
adc
inc
or
xchg
ljmp
repz
out
out
orl
int
loope
xchg
adc
cmp
lods
aas
fcompp
push
sub
sub
mov
xchg
xchg
sbb
cld
or
stos
mov
xor
jmp
push
inc
call
cmp
add
ss
mov
das
adc
cmpsb
push
testl
out
test
roll
adc
xor
inc
ja
sbb
sub
or
pop
lods
push
aam
or
or
add
sbb
js
test
cmpsl
adc
add
dec
sahf
dec
aas
outsl
ficoml
scas
pusha
out
sub
out
in
jo
jno
push
call
lret
test
subl
popf
or
imul
and
fstpt
mov
xor
ds
xor
push
push
push
les
movsb
pop
leave
sbb
lock
daa
pop
out
or
in
aas
mov
rcr
xorl
mov
rcr
cmp
mov
lea
sub
rcr
push
ror
mov
movsl
scas
adc
adc
mov
js
and
orb
in
fimuls
push
inc
test
mov
jnp
fwait
stos
scas
fwait
cmpsl
pop
sbb
fs
or
pop
jge
xchg
push
stos
fisttpl
int3
notb
das
xlat
mov
rcrl
adc
add
xor
in
xchg
frstor
test
lods
decb
cwtl
hlt
add
cld
xor
pop
les
jb
cmp
xchg
jb
push
sub
jnp
aad
mov
jge
fisttps
cmp
mov
mov
xor
adc
mov
into
mov
dec
fs
test
lods
dec
cwtl
sarl
cmpsb
jb
jge
loopne
loop
cmp
cmc
shrl
fwait
xchg
outsl
cld
push
mov
pop
popf
cmp
jb
out
rcll
cmp
push
clc
rcrl
mov
aaa
mov
inc
mov
pop
jno
and
popf
faddl
mov
mov
jno
xchg
cmpsb
cmp
lret
sbb
das
lock
cli
pop
xor
clc
cmp
in
ja
mov
dec
roll
aad
lods
push
stc
je
cmpsb
jnp
and
fwait
inc
mov
dec
pop
addr16
mov
cmp
inc
int3
ljmp
in
jb
ds
jle
mov
push
push
stos
mov
mov
stos
push
fcom
dec
pop
xchg
loope
scas
inc
out
dec
xor
sub
sub
inc
jns
inc
adc
icebp
in
sbb
jp
outsb
pop
in
cltd
call
dec
stos
stc
sub
jbe
into
mov
inc
add
lea
jecxz
mov
loope
mov
daa
push
pop
rorb
xchg
mov
inc
test
jecxz
inc
mov
mov
dec
mov
mov
mov
xor
and
sbb
or
stc
and
test
sbb
mov
dec
or
jne
sahf
shll
push
rcrb
fldl
in
es
icebp
xor
je
stos
jle
fbld
push
imul
inc
mov
sub
and
pop
flds
push
mov
adc
je
and
mov
cmpsb
dec
cmpsl
push
cmpsb
mov
push
mov
mov
iret
inc
jmp
pop
jnp
dec
push
shl
pop
inc
stos
dec
ss
mov
iret
add
cmpsb
dec
jmp
xchg
ja
cld
das
bound
pop
daa
xlat
mov
iret
xor
jmp
subl
pop
sbb
and
testb
outsl
push
jle
cmpsl
gs
aam
das
lret
push
orb
or
in
dec
pop
aaa
mov
cli
movsl
push
das
dec
ds
mov
in
jne
cmp
lea
rclb
test
outsb
ljmp
scas
sbb
xchg
fcompl
ret
mov
lret
stos
test
mov
push
arpl
imul
mov
add
loop
inc
xor
aaa
shr
rclb
mov
fildll
mov
movsb
and
xor
sub
mov
rcr
adc
jo
js
cmpsl
divb
fptan
add
roll
fs
inc
data16
mov
sbb
push
rcrb
lcall
cmpsl
fs
sub
mov
popa
ror
ret
arpl
mov
xchg
mov
stos
xchg
shll
outsb
push
sub
mov
adc
ds
and
in
dec
or
leave
xor
adc
or
xor
enter
fxch
testb
inc
iret
insb
daa
mov
imul
rcrb
nop
xchg
repz
aam
jnp
and
xor
dec
or
xchg
push
mov
dec
pop
sub
sub
cld
roll
inc
clc
xchg
subb
ljmp
mov
lahf
mov
push
dec
mov
and
mov
xchg
mov
push
sub
sub
lds
sbb
jbe
pop
filds
jle
jb
xor
frstor
shlb
jno
xorl
aas
push
xchg
mov
push
jg
mov
jae
pop
jne
pop
push
push
jp
mov
iret
shl
das
inc
dec
imull
lods
mov
jg
add
aad
mov
inc
js
mov
xor
xchg
mov
inc
xorb
ja
mov
sbb
fimull
jnp
pop
sbb
out
mov
add
outsl
push
mul
fimuls
sub
out
and
push
ret
lods
loopne
shrl
cmp
and
aad
pop
pushf
cmpl
cmp
or
clc
or
add
and
cmp
sbb
jl
mov
sbb
cmp
mov
int3
xchg
sahf
sbb
and
std
mov
cmp
je
fnstcw
or
xor
adc
mov
add
sar
jmp
mov
or
adc
call
iret
adc
and
sbb
push
into
adc
add
sub
mov
and
mov
dec
pop
jne
or
mov
sti
sti
lahf
inc
push
cmp
dec
cs
add
jnp
inc
cmpsb
mov
outsb
cmp
in
mov
out
or
dec
mov
push
fisubs
lret
jle
cld
cld
fisubrl
subb
sub
sub
in
jne
add
jle
pop
dec
or
xor
sub
cltd
pushf
psubsb
pop
jl
jnp
test
pop
push
movsl
inc
movsl
cwtl
mov
push
add
enter
in
fdivp
mov
adc
inc
lcall
lahf
or
adcl
cs
data16
xchg
dec
outsb
notl
int3
inc
inc
xor
pop
xchg
push
out
pushf
ja
popa
and
shlb
jecxz
jb
popa
idivl
dec
fisttpll
sahf
inc
push
movsb
mov
out
leave
jg
movsl
scas
aaa
xchg
scas
in
xor
jb
jnp
mov
adc
inc
pop
ljmp
xor
push
add
in
imul
ret
add
out
popf
data16
sbb
xor
loope
dec
push
fisubrs
jae
xor
pop
ljmp
xchg
mov
fsubp
dec
sbb
aad
add
call
push
push
call
lret
clc
and
enter
or
andb
xchg
imul
cmp
inc
icebp
icebp
pop
cmp
dec
xor
int3
jg
xchg
ja
shll
inc
mov
mov
sbb
push
adcl
xor
fninit
out
inc
mov
xor
fmull
jl
in
inc
outsb
push
inc
clc
mov
inc
sbb
scas
mov
push
out
xchg
in
scas
dec
ljmp
or
mov
adc
rcrl
push
cs
loop
inc
or
jns
push
cs
ds
es
fmull
aaa
adc
call
pop
push
lods
out
cmp
inc
mov
mov
or
mov
xchg
mov
rorb
movsb
movsb
imul
iret
xor
lcall
or
movsb
sbb
or
popf
dec
inc
jecxz
mov
fsubl
xor
test
dec
adcl
mov
pop
sbb
sub
sbb
add
push
mov
sbb
mov
mov
jnp
adc
test
push
repz
fcomps
insb
xchg
fimull
dec
lcall
fists
mov
fdivrl
aas
lods
mov
push
out
xchg
testb
in
test
pop
pop
shr
sahf
mov
movsb
fsubr
dec
cmpsl
sbb
das
mov
mov
out
cwtl
mov
cmp
cs
xchg
or
sbb
movl
dec
hlt
sub
xchg
mov
into
loopne
pop
pop
dec
xchg
jle
pop
mov
fimuls
out
push
scas
xor
push
fldt
je
neg
mov
fists
loop
xor
cmp
leave
sti
mov
ds
popa
inc
add
daa
push
popa
push
push
rcrl
lea
in
inc
mov
sbb
push
jmp
and
out
cltd
bound
addr16
lods
and
clc
loopne
fmul
pop
xor
hlt
mov
inc
scas
cmp
cmpsb
push
add
inc
repz
push
mov
loop
dec
test
daa
mov
mov
jb
inc
fstpl
int3
mov
mov
ficomps
out
pop
or
lock
in
mov
nopl
movsl
or
movsw
loope
push
mov
mov
aam
mov
add
push
push
mov
jmp
js
rcr
icebp
arpl
cmp
xor
aam
jg
test
in
pop
fwait
pop
adc
mov
dec
push
inc
jnp
outsb
cmp
and
xchg
shlb
ss
aam
fdivrl
loopne
push
and
lcall
sarb
jmp
pop
pop
cli
xchg
xchg
jns
pusha
cmpsl
mov
sbb
iret
shrb
xor
sub
mov
mov
mov
popf
sbb
outsb
mov
or
inc
inc
mov
jp
xor
pop
int
test
mov
cwtl
fistl
test
ds
sarb
push
iret
fwait
jl
mov
in
push
test
shlb
push
jbe
cmp
in
adc
inc
add
mov
jmp
pop
or
bound
push
negb
mov
in
push
sbb
outsl
push
and
fnsave
and
and
js
fdivrl
stc
jns
dec
or
lret
xor
shld
jnp,pn
dec
jb
sbb
ss
cmp
add
push
insb
cs
cwtl
mov
push
mov
xchg
movsb
orb
mov
or
xor
mov
sbb
in
adc
dec
pop
mov
fcomi
xchg
popf
into
movsl
inc
movsl
out
sbb
incb
adc
stos
outsb
add
jo
andb
rol
aad
pushf
jge
arpl
push
mov
int
and
in
mov
or
mov
lods
push
pop
jae
push
lret
mov
rol
mov
cld
mov
out
mov
mov
push
stc
pusha
sbb
inc
push
adc
std
in
bound
int3
cmp
mov
jnp
jmp
cmp
push
loopne
lock
cld
shrl
cmpsb
in
or
mov
sbb
cld
or
pusha
inc
push
sbb
mov
in
cmc
mov
mov
pop
decb
mov
sbb
jge
or
js
jo
or
lock
testb
fwait
in
mov
enter
test
mov
mov
orb
data16
sub
ss
inc
nop
scas
orb
cmp
insl
dec
jbe
sbb
adc
jmp
mov
or
mov
hlt
cmp
add
cmpsb
mov
jge
aas
test
clc
inc
cmpsb
dec
adc
dec
ja
andb
enter
movsl
jns
lods
jae
jae
inc
jae
add
scas
xchg
in
cwtl
mov
inc
adc
mov
mov
movsl
scas
xchg
jle
fxch
push
push
ss
shl
and
movsb
xchg
jge
stc
push
and
in
repnz
scas
adc
adc
pop
adc
cltd
adc
xchg
push
test
imul
in
repz
cltd
and
inc
inc
adc
test
iret
push
push
ja
das
es
dec
or
xor
sub
adc
push
or
xchg
push
mov
mov
cmc
imul
xchg
inc
imul
pop
aam
ficoms
inc
jno
sub
dec
sbb
mov
in
stc
xchg
adc
jge
xor
ja
cmp
movsb
push
pop
inc
mov
sub
pop
in
sbb
das
cmp
out
outsl
xchg
mov
jecxz
movsl
into
mov
pop
and
sahf
and
shl
call
flds
iret
jmp
adc
xchg
pop
stos
inc
test
pop
mov
cmp
jmp
xchg
sub
in
lahf
mov
cli
dec
push
push
outsb
inc
xchg
imull
mov
cmpsb
add
adc
push
push
xlat
enter
fidivrl
dec
jge
dec
lea
jp
enter
cs
and
dec
and
or
inc
call
stc
jno
jge
lea
dec
pop
sar
aaa
aas
stos
sti
sbbb
sub
and
sti
mov
out
aam
insl
mov
xchg
and
scas
shlb
dec
lock
dec
mov
push
into
insl
adc
enter
xchg
jl
mov
cmp
and
pushf
leave
sbb
xor
inc
push
movb
test
pushf
in
test
lahf
nop
xor
in
mov
add
cmp
cmp
xor
loop
add
jns
mov
arpl
fstps
lods
jl
inc
sub
sub
mov
int3
call
dec
jno
enter
mov
or
mov
inc
mov
fisubl
lock
cmp
jle
out
pop
or
and
add
out
mov
mov
xor
enter
cmpsl
aam
xor
jmp
ret
push
inc
movsb
pusha
jnp
lock
lcall
xchg
not
xchg
outsl
test
lcall
test
jl
andl
jo
mov
pop
pop
rcll
xorl
fwait
outsl
fnsave
scas
dec
out
bound
xor
jo
adc
pop
mov
jb
sbb
xchg
xchg
rol
jo
and
cmp
insl
popl
sub
and
sarb
out
cld
shl
xchg
in
mov
push
arpl
int3
adcb
loop
lock
mov
mov
or
cltd
push
xchg
test
mull
push
mov
pushf
push
es
cli
popa
jae
inc
repz
cmp
jecxz
clc
pushf
scas
and
ljmp
sub
mov
sbb
inc
pop
or
and
in
jle
push
prefetchnta
inc
aad
mov
ret
flds
xor
test
sub
push
into
sub
pushf
popf
es
or
arpl
addr16
dec
pop
sub
adc
push
sbb
xchg
js
into
adc
filds
and
mov
fsts
inc
mov
cmp
ljmp
mul
lea
inc
and
adc
xchg
outsl
inc
aas
es
or
xor
sbb
xchg
test
loopne
call
push
lea
fs
mov
es
push
and
clc
loope
jle
gs
mov
pop
icebp
outsb
mov
sbb
mov
daa
lods
cmp
clc
mov
adc
pushf
test
dec
ljmp
sbb
mov
xchg
popa
test
repnz
jo
push
repz
int3
loop
mov
push
test
or
fcomi
and
xchg
dec
mov
push
inc
pop
mov
ret
ds
pop
sbb
jmp
movsl
mov
adc
add
aam
jl
mov
loop
inc
jbe
inc
fucom
arpl
pop
jle
adc
mov
add
arpl
push
fistpll
mov
dec
clts
and
jg
push
into
xchg
scas
incl
jp
fst
sbb
xchg
cmp
fwait
sbb
adc
pop
andl
outsl
ds
jo
cmpsl
cmp
xchg
mov
loop
jo
adc
sub
mov
leave
xchg
insb
cmp
es
popf
std
ret
mov
pop
jno
scas
outsb
mov
in
cmpb
rclb
pop
outsl
out
or
pop
in
pop
sub
inc
inc
nop
in
bound
jns
lcall
dec
ds
lret
push
ds
ret
or
push
hlt
stos
loope
pop
jno
scas
pop
or
push
cwtl
mov
jecxz
lret
call
imull
test
mov
mov
mov
dec
push
mov
aas
or
or
jl
jb
adc
pop
xchg
add
lret
mov
repnz
xchg
push
pop
mov
cli
inc
iret
cltd
pop
and
push
jp
mov
pop
jns
addr16
lods
inc
cltd
dec
dec
popa
fwait
repnz
dec
aas
jbe
out
ret
pop
jb
dec
scas
popf
xor
dec
mov
cltd
out
lods
cmp
adc
add
int3
mov
jnp
lods
inc
add
andb
sub
mov
sub
xor
movsb
gs
cmp
or
test
cli
scas
inc
pusha
push
pop
or
push
pop
dec
pop
adc
aaa
jmp
sahf
enter
sahf
cmpsl
xchg
lret
push
add
push
mov
lds
lods
nop
mov
add
inc
jmp
cld
fsubrl
mov
xchg
js
push
cmp
stc
adc
adc
out
mov
push
xor
repnz
add
xchg
mov
int
mov
pop
xor
jo
out
inc
xchg
and
std
jp
cmc
jno
pusha
int
push
jmp
jno
stos
out
aad
push
mov
pop
or
scas
jg
aam
push
pop
sbb
push
jp
jge
stos
enter
inc
xor
and
dec
jnp
imul
out
mov
jb
or
aad
push
pop
cwtl
movsl
mov
mov
imul
aad
mov
imul
cmp
adc
push
leave
adc
arpl
sub
adc
outsb
clc
push
mov
sbb
out
mov
pop
xlat
push
insb
aam
xchg
dec
js
in
mov
xlat
adc
jmp
frstor
mov
xlat
jne
jo
push
jnp
lds
shlb
inc
out
sub
push
lods
push
and
mov
and
stos
lods
cmpb
xor
outsb
rolb
inc
pop
cmpsb
scas
out
loope
repnz
lock
mov
push
cwtl
and
mov
cmp
jecxz
jnp
xabort
imul
movsb
cwtl
push
loope
scas
xorb
nop
push
jae
in
cld
sub
sbb
nop
ja
in
xor
xor
mov
lods
dec
ss
jo
sbb
loop
addr16
lock
pop
mov
inc
insb
mov
mov
imul
sbb
in
pop
mov
jne
dec
push
loop
neg
adcb
xlat
sub
hlt
insb
ret
xchg
je
frstor
cmp
jbe
dec
xchg
mov
or
les
scas
dec
sub
mov
in
in
cmp
adc
xor
ret
adc
rolb
mov
fidivs
fidivl
sbb
inc
stos
test
cmpsb
adc
mov
mov
popf
outsb
es
ret
scas
pop
push
push
rolb
cmp
jne
jl
out
int
inc
in
jl
rcrl
jne
scas
inc
inc
adc
ret
dec
hlt
aam
dec
mov
sbb
adc
mov
in
push
aad
xor
xchg
out
out
pop
mov
push
push
popf
mov
sub
sbb
faddl
dec
mov
pop
mov
stc
fwait
push
jle
and
inc
mov
shll
aad
cld
dec
add
fs
jae
add
dec
incl
enter
add
call
or
out
in
jae
dec
enter
repz
jmp
insb
int3
dec
mov
jle
mov
imul
or
xor
mov
cmp
sub
push
cmp
ljmp
mov
addr16
movsb
int3
xchg
dec
decl
bound
xor
and
mov
imul
mov
jl
pushf
jno
pushf
dec
add
sti
jmp
xacquire
pop
jecxz
les
fisubl
dec
sbb
in
andb
outsb
jo
icebp
ret
mov
popf
inc
add
cmp
ffreep
cmc
jne
enter
dec
stc
jecxz
mov
aas
lods
inc
jno
pop
sbb
jle
xchg
ljmp
sahf
and
push
popa
lods
fdivrl
loopne
xchg
cmp
jns
fldt
inc
and
daa
es
mov
mov
inc
lret
fdivrs
mov
mov
mov
jnp
mov
icebp
lret
mov
adc
add
sbb
mov
jb
jnp
sub
and
mov
sahf
cltd
or
inc
xor
adc
out
sub
sbb
jae
mov
fs
sbb
repnz
dec
mov
sbb
sub
iret
cltd
fisubrl
outsb
fwait
lods
mov
cli
lea
popf
add
add
mov
sbb
movsb
adc
jnp
int
int3
scas
dec
xlat
mov
ret
mov
push
mov
or
aaa
arpl
rcrl
push
int
arpl
ss
mov
aam
dec
mov
inc
outsl
and
mov
pop
ja
adc
xchg
pop
mov
and
dec
xor
push
sahf
inc
unpckhps
data16
xor
sbb
and
inc
push
loop
mov
ljmp
jnp
and
sbb
divl
pop
and
and
in
sti
in
mov
enter
fidivl
xorl
aam
pop
lea
lret
bound
add
and
fsub
push
popf
add
out
rcrl
ljmp
mov
cli
aaa
int
mov
dec
push
call
out
int
stos
cltd
nop
add
push
rorb
int
and
add
jb
bound
inc
mov
sub
rcrb
xor
out
xchg
jecxz
into
fnstenv
sbb
xor
push
jl
or
inc
in
sub
adc
test
cld
loopne
sbb
repz
adc
mov
inc
jne
mov
fistpl
test
pop
mov
subb
adc
xor
mov
icebp
adc
mov
repnz
dec
adc
xlat
aam
push
push
adc
rcrb
or
sbb
or
jp
int3
rorb
sar
mov
imul
sti
xchg
push
shl
xor
xchg
mov
xor
lahf
add
xchg
scas
ret
jae
daa
dec
xchg
cmpsb
push
jge
jecxz
add
mov
test
pop
ret
inc
xchg
loopne
dec
enter
imul
test
ret
mov
clc
jb
inc
outsl
or
movsl
sub
aas
and
dec
and
je
shrl
fs
xorl
lahf
adc
inc
jne
sub
or
mov
xchg
add
xchg
inc
leave
out
ret
or
mov
or
aaa
shll
std
je
out
inc
and
pop
xchg
loope
iret
xor
popf
push
fs
adc
sbb
in
testb
test
cld
aad
sub
ss
jb
inc
adc
mov
jnp
cmc
enter
jne
stos
and
lea
loop
fidivl
rorl
mov
or
push
sub
loop
mull
sub
aad
adc
insb
and
lcall
jo
das
fstl
shll
stos
es
mov
repz
mov
mov
adc
xchg
mov
lods
cmp
ljmp
insl
lock
mov
cld
push
loop
xor
mov
aaa
aas
xchg
jae
fwait
pop
lea
xor
std
xchg
bound
pop
jmp
cwtl
cmpsb
lret
jecxz
inc
test
ret
test
into
test
sbb
inc
int3
pop
sub
adc
and
fs
inc
shlb
jecxz
int
sbb
xchg
fdivl
pop
or
shll
loopne
out
push
cmc
fmuls
or
cltd
inc
dec
xorl
outsb
enter
loope
je
cmp
pop
jl
jo
push
dec
sbb
repnz
sti
sub
in
sub
push
lret
fistl
xchg
in
dec
jae
std
add
xor
jl
or
mov
mov
lock
mov
mov
lods
fwait
cmpsb
addr16
jno
adcb
aaa
xchg
push
loop
inc
add
and
push
hlt
inc
dec
cltd
jmp
or
fdivs
xchg
jns
sub
sbb
popa
fwait
stc
xor
cmp
cmc
pushf
in
addr16
jge
or
xchg
xor
add
cmp
adc
cmp
or
addr16
pop
adc
rcr
push
and
test
sub
adc
mov
rorl
incl
mov
sti
shrb
ds
push
jl
xchg
loop
inc
and
pop
and
push
sbb
fists
addr16
push
arpl
or
cmc
test
mov
ljmp
movsb
stc
sbb
stos
loop
rclb
push
insl
arpl
inc
xor
int
jb
add
mov
nop
rolb
dec
jge
stc
inc
xchg
fnstenv
dec
call
inc
mov
dec
repnz
mov
push
ret
cmp
sbb
cmp
pop
addb
xchg
push
xchg
push
out
das
xchg
adc
cmp
sbb
adc
aaa
adc
dec
pop
lret
inc
adc
bnd
scas
cltd
popa
inc
ds
loopne
mov
xchg
lahf
into
pop
or
pushf
cmp
movsl
pop
xchg
imul
test
jbe
ret
in
in
imul
test
daa
pop
xor
pusha
mov
cmpb
sub
add
sub
fcmovne
xchg
sahf
xchg
pop
cwtl
lock
dec
mov
sub
or
jecxz
repz
mov
mov
pop
leave
jl
cmp
dec
adc
jb
add
sub
ja
loopne
and
frstor
or
jmp
imul
mov
cmp
cli
mov
shrl
sub
repnz
and
sbb
add
push
shlb
sub
mov
ljmp
mov
addr16
out
pop
mov
pop
xchg
jbe
inc
out
dec
and
mov
addr16
dec
lret
xchg
add
push
push
xchg
rcrb
pop
scas
ret
nop
out
inc
enter
addr16
iret
inc
jae
loopne
cmc
push
sub
inc
fdivrs
pop
cmp
pop
aad
scas
imul
mov
dec
xor
into
mov
cmpsb
jmp
jne
in
scas
cmp
ds
jle
dec
xchg
aas
add
jg
scas
cli
test
lret
mov
aaa
jbe
imul
ret
pop
hlt
in
sti
cmpsb
data16
jne
shlb
cmp
jne
pushf
and
subl
clc
sub
frstor
xchg
int
mov
mov
jl
cs
outsl
scas
in
popf
inc
lea
ljmp
inc
jb
jo
mov
imul
addr16
nop
xchg
mov
jne
xchg
loopne
adc
ds
bound
jb
pop
or
pop
mov
cmp
leave
mov
mov
ja
adc
push
bound
adc
es
leave
shlb
test
mov
sar
shrl
push
mov
pop
add
dec
int3
push
jno
pop
daa
outsb
adc
cmc
push
cmp
cmp
ret
bound
jmp
pop
pusha
aad
pop
dec
addr16
int
cmp
mov
cmp
sub
cltd
push
sub
mov
rolb
pop
jns
mov
mov
jno
insl
inc
nop
push
cmc
iret
and
xor
mov
jo
push
pop
dec
mov
push
std
cmp
add
jl
andl
stc
xor
fcomi
mov
in
movsb
movsb
adc
push
pop
cli
xchg
cwtl
daa
mov
outsb
ljmp
sub
push
into
cmpsb
jecxz
xlat
lods
xchg
frstor
push
mov
sarl
loope
jno
push
outsb
je
call
xor
ffree
sbb
pop
pop
test
xchg
dec
ret
aaa
inc
int3
sub
in
repnz
sub
mov
sbb
dec
mov
dec
adc
xor
mov
incb
in
test
je
or
addl
lahf
mov
add
sbb
cs
aaa
xchg
scas
cltd
xchg
enter
xor
pop
cli
lods
fwait
repz
or
mov
je
jp
xor
iret
jae
or
cmp
test
mov
dec
cmp
or
fwait
pop
loop
or
insb
ja
loopne
lcall
sbb
popf
add
clc
mov
repnz
push
stos
push
adc
aas
and
popa
pushf
jp
sub
add
lods
and
jg
add
cmp
cmp
lods
fstpt
jmp
in
mov
mov
lret
xchg
rolb
xacquire
stc
aad
pop
call
xlat
mov
enter
dec
or
cmpsl
stc
xchg
test
xchg
je
test
fwait
cmpsl
repnz
inc
jo
add
and
sub
add
dec
lret
inc
leave
stc
mov
or
adc
mov
xor
sub
jnp
jae
jae
xchg
into
pop
push
xchg
xchg
movsl
outsb
test
pop
popf
mov
loopne
mov
mov
lock
aam
push
insb
jl
mov
mov
inc
or
fisubl
lock
sbb
addr16
mov
iret
push
push
test
push
sbb
mov
and
lock
fnstcw
add
xchg
popl
mov
lock
xor
mov
decb
adc
xor
aas
dec
in
xchg
loope
dec
sahf
loop
xchg
mov
fildl
test
adc
cmp
fimull
addr16
fsubrs
je
aaa
or
dec
fdivs
or
loopne
ljmp
lahf
psubb
cmp
xor
js
aaa
sub
shl
loopne
push
std
ret
pop
push
jbe
fsubs
jmp
mov
shrb
jle
cmc
cmp
test
or
adc
movsb
sarb
and
test
jb
or
test
and
inc
shrb
shl
sbb
xor
clc
adc
aaa
sub
or
and
inc
arpl
add
imull
pop
call
notl
adc
fsubrl
add
nop
fwait
pop
fwait
mov
lret
es
xchg
dec
or
ds
push
mov
orl
das
mov
cltd
sub
std
mov
cmp
xchg
mov
cmp
xchg
sbb
mov
scas
mov
clc
jae
adc
leave
adc
cli
cmp
inc
aas
lds
push
mov
mov
ds
ljmp
jmp
lock
mov
movsl
repz
ficomps
push
mov
aas
mov
mov
mov
decb
push
outsb
push
push
push
push
cmp
jnp
andb
mov
imul
xchg
mov
lcall
jb
add
dec
mov
pop
shr
push
mov
mov
mov
xor
data16
and
icebp
ss
sub
hlt
sbb
das
push
dec
cmp
mov
pop
jg
jecxz
xchg
call
inc
xor
pop
clc
pop
sub
daa
pop
outsb
sti
inc
popa
lahf
aas
sub
add
push
add
fmuls
sar
in
ret
shr
cmp
push
in
mov
push
aam
push
out
dec
xchg
jg
fldenv
icebp
repz
loopne
add
dec
shlb
xor
outsl
and
int3
cmp
xchg
pop
dec
mov
push
in
int3
inc
test
mov
or
dec
sbb
imul
cmpsb
cld
ljmp
fptan
idivl
je
lock
into
in
fnstsw
dec
ror
fcmovnb
jmp
inc
cmc
lods
sub
shlb
repnz
xlat
push
xorb
inc
inc
aad
add
sub
adc
test
ss
lods
jo
pop
cmp
test
aam
fs
js
cmpsb
mov
xlat
xchg
adc
add
ljmp
lahf
or
xchg
dec
add
fsubrl
mov
add
dec
mov
and
xchg
lahf
add
leave
das
push
mov
xor
jmp
cmp
aaa
cmc
inc
bound
lods
inc
fnstsw
movsb
jecxz
cmc
mov
pop
je
movsl
sbb
ret
mov
jo,pn
ret
aaa
std
sub
inc
dec
lcall
cmp
lds
dec
arpl
sub
stos
xor
aad
cwtl
inc
adc
fldl
cld
push
adc
movl
adc
sbb
push
nop
out
in
xchg
add
mov
stc
cmp
sbb
out
je
mov
xor
cmp
loope
clc
imul
sbb
scas
push
cmp
sub
mov
es
adc
or
mov
int
ret
sbb
invd
dec
mov
shrb
xchg
lret
jo
and
clc
repz
scas
cli
mov
dec
movsl
jo
movsb
out
mov
or
inc
push
es
fmuls
fwait
mov
sti
xchg
xor
mov
shrl
rolb
fcomps
and
dec
cmp
ja
sbb
ja
fwait
jp
movsl
movsl
sbb
stos
rcrl
push
push
add
ja
into
ret
and
mov
push
push
inc
cmp
xchg
adc
mov
dec
add
push
jmp
add
lods
clc
jp
std
lret
mov
frstor
into
push
push
out
fimuls
xchg
inc
fs
test
dec
xor
int3
add
hlt
js
das
lds
cmp
jl
leave
lea
inc
sbb
sub
test
mov
loopne
scas
cwtl
aaa
xchg
in
xchg
inc
cmp
lret
popa
int
loop
push
into
push
call
out
stos
fidivrl
roll
loop
hlt
movsb
scas
mov
adc
test
push
std
or
dec
mov
insl
jae
sbb
jmp
leave
jo
popf
icebp
fwait
pop
fistps
inc
imul
xor
adc
push
adc
int3
shlb
testl
pushf
jge
pushf
pop
js
test
dec
inc
adc
jo
cmp
push
mov
mov
sub
aaa
mov
sub
cmp
push
psubw
dec
lods
lret
movsb
jmp
xchg
xor
pusha
adc
mov
or
das
xchg
xchg
adc
mov
cli
inc
cmpsb
xlat
sub
adc
fidivrl
jp
lcall
rcrl
data16
mov
pop
popf
jle
mov
bound
add
and
bound
sti
int
xor
dec
and
pop
popa
std
push
mov
cltd
mov
jp
stc
mov
mov
adc
aaa
dec
cld
mov
push
negl
imul
adc
mov
out
mov
loopne
in
insl
insb
adc
mov
inc
mov
or
xchg
pop
add
inc
push
xor
mov
mov
cmp
xor
mov
insb
mov
int
ljmp
cltd
mov
and
ficoms
pop
xchg
movsb
lds
jo
leave
push
lret
jne
int3
insb
sbb
push
cmpsb
fnsave
int3
fdivl
adc
cs
loopne
or
sub
call
test
cmpsb
gs
dec
ds
pop
test
lods
test
or
lock
stc
mov
js
sub
lods
clc
sub
xchg
ret
mov
sub
cmp
jl
mov
and
lea
cld
cmpsb
sbb
aam
in
cli
nop
sbb
in
mov
or
dec
inc
push
daa
jo
sub
out
mov
daa
xchg
lahf
test
iret
push
mov
add
xchg
out
and
jo
add
and
mov
pop
loop
ss
mov
pop
push
jp
out
or
dec
nop
add
fsubrl
or
add
ja
mov
icebp
adc
or
les
sub
sub
xchg
push
int
adc
into
pop
pop
pop
test
sub
frstor
ret
push
cmp
adc
mov
insb
mov
jo
or
push
dec
push
fnstsw
dec
inc
imul
mov
sub
cmpsl
inc
mov
mov
mov
push
les
mov
jno
rorl
adc
jne
data16
and
sub
sbb
cmpsl
jle
mov
icebp
jno
arpl
fstpl
aas
mov
iret
add
imul
dec
loopne
jae
and
adc
in
add
lds
push
dec
cltd
cmp
pop
enter
enter
and
dec
sahf
mov
movsl
lcall
push
sub
scas
ret
negl
dec
ror
loop
xor
mov
jg
push
and
rolb
outsb
in
vpmuludq
cmp
inc
mov
insb
mov
xor
out
pusha
push
and
push
dec
adc
popf
mov
ret
adc
lcall
mov
ret
dec
andb
pop
fisttps
mov
fs
mov
lret
dec
loope
pop
sarl
cld
mov
cwtl
mov
dec
dec
push
ret
arpl
fiadds
mov
enter
loop
mov
sbb
jb
mov
into
mov
push
push
mov
outsb
aaa
xchg
mov
or
mov
fld
jae
inc
inc
aaa
lods
cmp
lcall
call
or
imul
add
pop
mov
aad
aad
faddl
movsb
movsb
es
xchg
pop
jmp
int3
lret
ds
inc
push
mov
jmp
lret
xchg
or
jp
push
and
scas
jo
ds
jo
inc
popf
sbb
push
mov
push
popa
jge
inc
lahf
jo
inc
fwait
rolb
mov
or
jl
lea
aaa
dec
adc
push
push
xchg
mov
mov
rolb
repnz
push
mov
jecxz
into
data16
and
in
mov
jnp
jecxz
ret
aas
stc
jbe
aam
xchg
push
adc
aam
ficoms
out
addr16
mov
sbb
mov
fs
sbb
cli
fwait
adc
addr16
mov
mov
aam
int3
jns
sbb
mov
mov
inc
sbb
adc
sub
arpl
cmc
jle
lods
and
clc
pushw
test
sbb
pop
out
pop
sbb
pop
sbb
lea
nop
jg
pusha
scas
nop
orl
mov
xchg
dec
add
sahf
ds
adc
pop
sbb
or
es
ret
dec
pushf
dec
push
jmp
out
int
fisubrl
jnp
cmc
movsb
es
add
inc
cmp
xchg
xlat
xor
jmp
and
nop
in
pop
js
das
ret
fdivl
fstps
xor
out
scas
inc
mov
lahf
scas
dec
cmp
data16
imul
cmc
aam
stos
push
out
sar
jecxz
inc
rcrb
jge
movsl
mov
iret
mov
fnstsw
fs
inc
das
lcall
jge
push
movsl
mov
lcall
jo
push
push
mov
inc
xchg
jge
push
push
adc
add
pop
or
sub
jae
fidivs
and
aad
fistl
in
add
les
xor
sti
call
shll
mov
mov
push
sbb
pop
or
inc
cli
lods
pop
mov
push
mov
push
mov
arpl
jnp
out
ds
sub
push
push
inc
fldcw
jb
sub
xor
xchg
test
aam
adc
test
xor
sub
pop
xchg
sbb
sub
stos
inc
inc
adc
cmp
lods
cmp
xor
jno
adc
sbb
sbb
mov
sti
pop
push
adc
aad
and
or
jp
or
sub
push
aaa
cmp
imul
jg
mov
xor
jle
call
out
shl
sub
ljmp
mov
sub
leave
mov
adc
frstor
repz
shll
jne
orl
and
mov
ja
xor
mov
sbb
repz
mov
add
sub
or
and
dec
in
enter
cmp
in
sbbb
xchg
pop
call
popa
bound
xchg
push
adc
sub
and
rolb
jle
popf
sarb
pop
int3
or
mov
push
pop
aas
dec
inc
sub
pusha
and
add
mov
repnz
cli
fwait
and
jno
pop
cltd
xor
inc
inc
enter
and
push
icebp
mov
mov
enter
cmp
and
outsb
adc
sub
int3
ror
divb
rclb
rorb
dec
sbb
or
jp
in
mov
aas
test
jle
pop
dec
pop
test
xchg
add
pop
loope,pt
mov
ljmp
add
push
mov
cmp
fmul
push
pop
xorl
push
cli
xor
mov
sub
outsl
hlt
dec
xor
aas
xor
and
mov
fcompl
cmp
mov
ret
dec
scas
dec
cmp
pop
xchg
rolb
dec
sbb
sbb
mul
loop
mov
stos
ja
sahf
pop
inc
cmpsl
into
repnz
in
push
jb
test
sbb
xchg
mov
daa
mov
mov
in
adc
cmp
les
cmp
push
push
sahf
xchg
addr16
pop
or
into
jp
les
mov
lahf
sbb
jl
stos
in
test
rep
fwait
pop
cwtl
fwait
xchg
cld
xor
sbb
cmp
in
jg
shl
lods
xlat
mov
js
xchg
mov
sbb
outsb
xchg
pusha
jmp
repz
inc
divl
adc
ret
sti
nop
fmuls
es
mov
and
xor
sub
fisttps
pop
push
bound
xor
insb
sub
pop
and
fsts
icebp
je
dec
pop
xchg
jns
outsl
fnstsw
scas
jle
aaa
sbb
adc
pop
pop
pop
pop
push
pop
fidivs
gs
jae
and
or
and
pop
ds
fcomip
xchg
pop
and
sub
pushf
mov
xlat
fisubrl
ret
or
into
mov
dec
mov
loope
cs
sub
int3
xchg
clc
push
pop
jbe
fbld
xchg
push
mov
adc
pop
add
ret
mov
xchg
mov
imul
stc
lret
scas
mov
mov
and
int
adc
cmp
mov
jmp
mov
loopne
pop
mov
adc
mov
sti
jbe
sbb
shrl
in
pop
ds
imul
adc
pop
xchg
adc
inc
popa
xor
out
jg
xlat
mov
insb
rclb
mov
adc
xchg
mov
pop
adc
mov
je
rcrb
arpl
or
dec
push
or
mov
dec
xchg
pop
cmp
add
jnp
repz
bnd
jb
icebp
pusha
jmp
mov
sbb
jno
test
mov
xchg
sub
out
in
das
aad
mov
mov
stos
out
ret
scas
xchg
dec
in
and
pop
outsb
jecxz
pop
iret
in
xchg
inc
out
xor
push
pop
jnp
cmp
outsl
iret
jge
mov
push
shll
cmp
orl
inc
gs
mov
xor
rclb
mov
mov
jp
sbb
sar
dec
xchg
fisubrs
push
xor
adc
jbe
push
popf
mov
sbb
xchg
scas
cmp
roll
jp
sub
movb
cwtl
mov
and
mov
mov
sahf
cmc
jp
mov
sti
mov
pop
push
fcoms
jae
pop
fwait
dec
out
sbb
sub
jge
mov
mov
mov
inc
jb
push
andb
lret
xchg
cmp
or
mov
sub
shll
xchg
pop
push
xor
sbb
xchg
mov
pop
iret
cli
enter
jmp
es
fisubl
mov
push
dec
test
std
push
aaa
ljmp
mov
xchg
fidivrs
mov
mov
imul
rorb
jecxz
sub
sub
test
test
jg
adc
cwtl
test
add
cltd
es
cmp
clc
imul
pusha
popa
or
push
jle
mov
ret
xor
dec
push
in
sbb
push
mov
mov
outsl
loopne
or
push
or
jo
add
rorl
popa
pop
add
push
shrb
cmpb
push
bound
sbb
add
push
jecxz
testb
int
push
cmpsb
lret
cmp
sbb
iret
cmpsl
push
rcrb
mov
xchg
mov
sti
mov
xor
adc
ret
jg
cmc
xchg
cli
jae
or
pop
das
mov
repz
xlat
jmp
and
sarb
adc
cmpsl
cmpb
pop
sbb
aam
pushl
cltd
outsl
pop
and
add
shrb
cli
js
pop
leave
in
outsb
incl
mov
dec
pop
mov
aad
in
dec
popf
stos
cmpb
xor
inc
mov
dec
clc
or
std
mov
push
and
adc
scas
inc
sahf
icebp
fwait
int
out
mov
inc
adc
cmp
imul
xor
int
adc
dec
mov
sub
imul
mov
sbb
pop
fists
rol
imul
jae
dec
out
in
inc
and
or
mov
into
inc
or
add
fsubrs
mov
sbb
dec
xchg
lods
push
sarl
sbb
movsb
add
sti
pop
aam
inc
jns
ficoml
jb
inc
scas
cmpsl
sub
cmpb
jmp
in
call
push
jne
push
jecxz
jp
inc
and
ljmp
pop
mov
cltd
push
arpl
stos
lods
frstor
hlt
sub
cmpsb
dec
fcomps
bswap
push
lcall
push
xor
jns
inc
dec
adc
ret
shrb
xchg
or
lock
ljmp
fldt
pop
sbb
mov
add
cli
push
mov
cli
mov
xor
mov
cmp
pop
scas
inc
adc
push
ljmp
sub
fbstp
add
repz
inc
and
xor
shll
and
pop
fisttps
mov
cwtl
xlat
push
pop
adc
xchg
push
nop
and
imul
pop
iret
js
cmc
ss
mov
into
pop
inc
cmp
pop
sti
testb
mov
push
sub
sub
lods
mov
dec
fistpll
mov
add
std
or
adc
dec
imul
inc
push
and
dec
push
cmp
out
scas
in
add
jns
jae
pusha
xchg
push
pop
jo
or
incl
mov
inc
push
mov
cmpsl
jmp
rolb
cmp
push
test
aas
xor
mov
mov
mov
fmul
ss
lods
inc
orb
scas
mov
scas
inc
xor
lcall
fwait
add
repnz
and
adc
add
idiv
or
popa
into
add
adc
fwait
mov
arpl
dec
js
jnp
insl
sub
cltd
dec
mov
aaa
jmp
mov
mov
das
sub
add
jle
sub
test
mov
jmp
rclb
or
cli
cmp
pop
push
mov
cs
shll
enter
out
insb
stc
jmp
or
mov
dec
std
daa
or
ds
cmpsl
jns
inc
mov
movsl
xor
sarb
sbb
mov
jecxz
or
int
arpl
xchg
dec
push
fwait
mov
inc
xchg
mov
imul
pop
ret
xor
rorl
ja
jecxz
mov
mov
sbb
jns
pushf
addr16
test
addr16
xchg
xor
outsb
xchg
push
push
jp
cmp
call
xor
push
jbe
jmp
mov
dec
or
push
mov
test
idivb
test
xor
adc
jb
push
lods
xchg
xchg
pusha
test
sub
jno
shl
loopne
mov
mov
aad
pop
jns
dec
dec
pop
adc
add
xchg
mulb
arpl
dec
mov
aaa
arpl
and
inc
inc
and
dec
jns
addr16
icebp
xchg
das
out
cmp
int
xor
mov
dec
cmp
xchg
xchg
mov
dec
dec
cwtl
adc
jle
mov
or
xchg
add
stos
push
push
std
cld
divb
lahf
mov
pop
dec
loopne
int
jmp
cwtl
cld
pusha
dec
js
mov
popf
decb
dec
cmc
jae
fidivl
fnstsw
xchg
sbb
mov
ss
push
push
lahf
inc
cld
bound
sbb
push
fstpt
ds
xchg
cmp
push
enter
subl
cltd
in
repnz
and
push
loope
cmp
cmp
jae
orl
mov
iret
repnz
xchg
mov
sub
mov
icebp
outsl
faddl
xor
je
mov
in
mov
inc
xchg
in
mov
cltd
call
out
mov
mov
or
or
mov
mov
popf
in
pop
push
es
mov
push
xchg
mov
lahf
shll
mov
fwait
out
mov
nop
pop
inc
cmpsb
stos
icebp
sbb
cmpsb
rcrl
je
shlb
jmp
xchg
and
sbb
or
adc
jmp
lcall
inc
aam
insl
enter
test
lock
push
jg
aam
xor
sub
push
lret
inc
mov
aam
stos
mov
jp
inc
adc
cmpsb
fcmovb
call
sbb
pushf
and
popa
jae
jmp
fs
pop
mov
in
xchg
add
mov
add
out
pop
sahf
stc
fstp
je
pop
bound
iret
sti
lcall
hlt
push
sti
popa
addr16
in
rcr
lds
jl
sbb
nop
dec
ret
inc
xchg
sub
xchg
fidivrs
mov
push
aad
movsb
adc
mov
pop
pop
fs
cmp
xlat
rcr
subl
test
cmp
cmp
sbb
int3
add
ficomps
inc
push
js
pop
and
aad
pop
push
das
push
icebp
xchg
in
sbb
adc
stc
push
push
into
jns
shll
iret
fsub
push
call
pop
xor
hlt
fsubr
push
les
add
mov
rcll
cmpsl
outsl
mov
pusha
sarl
ja
or
lret
xor
lods
cmp
hlt
jle
fs
jmp
xor
or
and
inc
xor
stos
lods
rorl
iret
xor
mov
xlat
jae
out
outsb
add
or
cltd
scas
sbb
ret
outsb
int
fwait
push
and
bound
loope
push
inc
scas
aad
jne
adc
mov
mov
mov
sbb
jns
shr
decb
test
lds
lock
inc
addr16
lods
mov
sub
cltd
mov
xchg
movsl
xlat
xor
jb
sub
adc
loope
xor
or
xor
ret
sub
mov
test
std
mov
sarb
pop
jl
jmp
fbld
add
push
push
out
xor
push
sbb
das
cmp
mov
cmp
xchg
cmc
mov
cmp
lds
mov
sbb
push
and
lcall
xor
mov
scas
lods
lds
pop
pop
pop
jge
mov
addr16
xchg
icebp
adc
vcmppd
dec
sti
lret
imul
inc
sbb
enterw
ja
imul
clc
push
rolb
pop
les
cmp
push
jle
js
jbe
jbe
enter
mov
hlt
sub
sbb
je
fwait
mov
stc
int
push
stos
mov
xchg
in
scas
cmp
mov
and
xchg
pop
int
add
sbb
nop
push
out
push
loop
imul
or
sbb
push
cmpsb
and
inc
arpl
push
pop
push
shll
jne
cmpsl
scas
inc
fistl
xchg
mov
or
mov
xor
mov
ljmp
ja
adc
scas
pop
jbe
lods
jnp
popf
mov
inc
push
lret
das
mov
mov
dec
dec
pop
js
fnstcw
xor
jle
sbb
addl
faddp
mov
mov
push
sbb
test
loope
les
in
std
inc
or
mov
jo
pop
dec
pop
add
push
push
add
mov
cld
adc
jno
mov
sbb
dec
subb
sahf
pop
inc
ljmp
scas
stos
in
and
ja
out
inc
mov
mov
or
in
lods
sbb
popa
fisubrl
repnz
stos
aam
mov
into
adc
xchg
shlb
adc
sahf
cmpsb
ja
or
icebp
cmpsb
stc
shl
jp
mov
xchg
pop
shll
cmc
sub
fnstcw
jmp
hlt
js
add
xchg
enter
bound
popf
cmc
popa
dec
out
pop
xor
add
xchg
daa
daa
sub
pop
mov
push
cltd
dec
mov
cmp
jmp
xchg
in
out
mov
imul
jecxz
outsl
popa
mov
pop
xlat
sub
sub
mov
daa
bound
jo
call
bound
jne
xor
ja
movsl
and
sub
mov
sub
insl
lahf
jnp
xchg
xchg
orb
add
inc
dec
mov
mov
push
add
imul
imul
enter
xchg
inc
lret
push
sub
loopne
push
sbb
sub
cmp
push
dec
adc
repz
mov
iret
cmpsb
pop
pop
jg
iret
xchg
fwait
shlb
iret
jl
and
clc
sbb
fildll
add
cmp
cmp
popa
adc
pop
scas
mov
out
adc
jmp
lds
cmp
jne
rolb
lea
int
adc
jge
pop
push
adc
cltd
ja
and
xchg
pop
sub
inc
xor
lea
mov
add
add
cwtl
outsb
pop
push
pusha
and
dec
sub
or
mov
add
arpl
xchg
mov
pusha
fs
mov
ljmp
inc
xchg
inc
push
dec
xor
outsb
xor
adc
aam
push
dec
jno
lea
movsl
imul
insl
mov
aaa
arpl
pusha
push
loope
jl
ret
imull
jmp
andb
fistps
lods
stos
sub
sar
or
sbb
test
jge
daa
filds
xchg
push
sub
mov
cld
rolb
cmp
push
mov
pushf
pop
ret
and
jg
mov
mov
cmp
pop
sub
dec
in
xchg
push
push
push
add
ret
mov
subl
fwait
cs
or
aam
int3
lds
popa
add
inc
scas
les
std
popa
setno
hlt
lret
xchg
test
ror
mov
cmc
out
ja
or
adc
call
sub
inc
push
jns
stc
les
push
inc
or
mov
lock
ret
lods
xchg
xchg
or
int
sbb
or
pop
adc
mov
mov
int
sbb
pop
scas
fdivrs
add
pop
test
push
push
add
movsb
pop
jno
pop
mov
push
lret
mov
out
outsb
sbb
dec
cmp
ja
inc
scas
adc
sahf
dec
mov
lods
jle
sub
orl
rep
push
dec
cs
out
call
repnz
adc
call
cmpsl
addb
add
cmp
sbb
rorl
leave
dec
scas
ss
in
aas
add
sbb
scas
cmc
push
pusha
aaa
xor
adcb
popa
rcrb
push
jmp
cld
sub
stos
xchg
in
push
push
les
lods
pusha
cs
adc
xchg
pop
mov
outsl
push
nop
cmp
call
sbb
das
fdivrl
popf
outsb
push
push
dec
pusha
lcall
pop
pop
fnstsw
inc
xor
add
mov
cmp
clc
push
dec
leave
mov
in
add
jne
push
jb
jbe
ss
fsubl
add
sub
mov
adc
adc
out
mov
mov
or
xchg
add
or
in
mov
and
es
sbb
xchg
or
mov
in
in
lods
mov
cmp
mov
sub
in
aad
inc
add
xchg
ret
sbb
pop
adc
sar
sti
jo
mov
cmp
rcrl
inc
mov
popa
or
test
aaa
mov
les
pop
xor
inc
in
rcll
std
in
into
inc
sbb
mov
jp
test
xchg
fstl
mov
or
insb
jno
dec
dec
sbb
fwait
imul
and
adc
pop
push
rorl
aad
inc
adc
cmpsl
clc
cmc
xor
jb
mov
lret
pop
test
clc
int3
add
js
mov
inc
lcall
and
xchg
jl
test
inc
or
dec
dec
gs
mov
mov
mov
out
push
out
out
dec
frstpm(287
outsb
gs
icebp
and
push
scas
rclb
mov
and
clc
push
fldl
jl
inc
lcall
hlt
ret
cli
clc
repnz
and
xchg
fnstenv
aas
mov
cmp
cli
fcmovnbe
aad
inc
xchg
sar
sti
je
inc
push
add
xor
xchg
popa
jbe
dec
sahf
insl
dec
xor
addr16
push
jp
loopne
scas
jno
pusha
lcall
loope
repz
stc
and
call
pop
or
les
loopne
in
jbe
divl
mov
push
pusha
adc
rcl
cmpsb
movsb
fcmovnu
mov
jne
pop
adc
loopne
fwait
xor
cmp
outsl
inc
pop
cmpsb
clc
jmp
outsb
test
dec
inc
mov
out
insb
scas
inc
ja
mov
inc
cmp
fmuls
mov
repnz
lcall
mov
iret
mov
jne
mov
mov
and
loope
les
shll
sbb
mov
cmp
push
jle
stos
mov
dec
repz
xchg
in
mov
jg
stos
xchg
xchg
adc
fiaddl
mov
cmpb
inc
or
popf
sub
ljmp
adc
sar
fldcw
rclb
and
mov
aam
js
sti
outsl
ror
leave
nop
jb
bound
push
mov
jp
lock
and
xchg
sbb
add
cwtl
into
mov
fs
mov
sbb
dec
mov
into
xchg
mov
sub
ja
aam
inc
dec
mov
cld
int
into
cwtl
loop
out
fwait
ljmp
mov
and
roll
aad
or
int3
mov
and
mov
out
ret
adc
fwait
test
push
jle
and
mov
adc
insb
xchg
addr16
pop
test
nop
ss
push
jo
imul
ja
xor
pop
mov
xchg
xchg
cmp
push
bound
mov
jle
out
and
leave
inc
dec
les
hlt
or
js
push
inc
cmp
outsb
jno
aad
ret
mov
ja
xchg
push
ret
cmc
test
icebp
les
movsl
in
and
pop
push
and
xor
cwtl
je
aam
outsl
pop
push
shrl
pop
dec
mov
and
mov
popa
out
ds
into
jo
leave
mov
aaa
outsl
loop
mov
jle
xchg
shlb
js
imul
aad
cs
in
xchg
xor
test
data16
mov
mov
test
xor
lahf
std
jge
mov
push
int3
inc
mov
ljmp
imul
cmp
sbb
xor
lods
lods
cmc
aam
inc
mov
add
outsb
sub
andb
cli
xlat
mov
push
push
scas
leave
sub
jecxz
dec
pop
dec
adc
and
int3
mov
lret
mov
fwait
and
mov
fstps
cld
xchg
xchg
sbb
sbbb
adc
mov
dec
lea
lods
xchg
mov
xlat
mov
inc
push
outsl
lcall
or
adc
je
jno
mov
lods
pop
lret
gs
pop
sbb
mov
cmp
xchg
sbbb
xchg
bound
pop
xchg
mov
dec
jo
aas
mov
pop
decl
mov
rcrb
cli
mov
aaa
jp
in
inc
shll
or
movl
movsl
js
xchg
imul
inc
add
cmp
adc
mov
push
sbb
mov
sti
loopne
mov
jae
inc
lea
out
insl
enter
mov
dec
xor
jl
ja
aaa
pop
fmulp
cmc
in
sarl
jmp
dec
xor
sub
xchg
ret
xchg
xchg
pop
mov
and
gs
nop
js
dec
popf
mov
push
pop
mov
dec
arpl
stos
dec
dec
int3
pop
mov
mov
cwtl
sub
lea
inc
pop
data16
adcl
add
sbb
fsubrp
outsb
dec
test
xchg
lea
cld
jbe
cmc
or
scas
fisttpl
mov
iret
mov
loope
sub
lret
mulb
mov
in
xor
out
jecxz
xor
insb
mov
mull
push
cmp
or
test
pop
xchg
sub
test
inc
dec
cmp
push
wrmsr
insl
push
xlat
mov
fstpt
aad
into
iret
mov
scas
or
or
aad
in
jb
aas
or
mov
push
lcall
sbb
push
je
aad
lahf
adc
cmpsb
ja
dec
mov
jp
sbb
add
add
and
fldt
jne
inc
daa
ret
negb
stos
dec
inc
dec
test
xor
dec
and
fsubl
jmp
push
push
fldl
mov
mov
push
in
arpl
cmc
and
mov
and
pop
dec
pop
jnp
cmp
dec
test
sub
sub
das
jmp
push
stc
push
xor
fdivrs
scas
add
push
xchg
push
adc
jns
not
xlat
arpl
jb,pt
adc
mov
inc
xchg
mov
shl
movsl
test
or
cwtl
inc
ss
leave
or
daa
arpl
inc
sbb
adc
mov
jge
in
mov
sahf
test
push
add
addr16
pop
outsb
xor
ds
lret
and
add
or
scas
and
inc
int
inc
inc
inc
adc
pop
dec
cmp
mov
je
pop
es
mov
jnp
jmp
jecxz
cmp
orb
ljmp
or
xor
test
aam
pop
dec
cmc
push
fnstenv
arpl
les
push
pop
xchg
popf
lods
cwtl
icebp
xor
or
sahf
dec
xchg
push
pop
subl
imul
xor
mov
push
ret
iret
sbb
int
xchg
cmp
test
ja
push
out
fstp
popf
rcll
mov
rcrb
pop
rcll
ror
iret
rclb
fisubl
jb
cvttps2pi
pushf
cmpsl
cmp
sub
cli
cmp
pop
mov
ljmp
ss
rcl
mov
pop
jg
into
imul
cmp
sbb
sub
ja
push
and
and
daa
div
mov
xor
mov
lahf
cmp
push
sbb
xchg
inc
pop
pop
jb
outsb
ffree
cld
lcall
subl
mov
push
sub
dec
clc
sti
cli
dec
fidivl
jle
push
ljmp
cli
xchg
jno
jne
pop
sbb
or
cltd
je
adc
xor
in
xchg
or
jg
xchg
and
lret
jp
mov
repz
and
les
cwtl
xlat
lret
fdivr
lahf
ja
mov
push
imul
in
out
dec
call
jecxz
rcl
fiadds
mov
or
pop
std
push
jmp
xchg
fldenv
add
adcl
mov
stos
and
cld
int3
or
dec
jbe
push
cmc
ret
dec
lret
ret
pop
pop
or
sbb
sub
xor
fcompl
add
mov
hlt
in
stos
dec
cmp
lock
clc
nop
call
stos
pop
dec
mov
int
pop
push
test
das
and
inc
fdivrl
arpl
stc
mov
mov
out
nop
inc
add
jns
xor
imul
mov
cmp
ja
ds
add
sub
push
mov
inc
or
lcall
adcl
clc
mov
ss
lret
pop
scas
jle
mov
in
int3
pop
movsl
dec
bound
jno
mov
data16
scas
jns
lcall
and
andb
mov
dec
push
stos
xchg
pop
sbbl
bound
es
repnz
pop
aam
dec
mov
xor
sarl
xchg
mov
jmp
fildll
push
jge
js
fstl
dec
int
cwtl
ljmp
fisubl
xor
xchg
mov
jo
xchg
mov
cltd
loop
mov
lahf
pop
shll
mov
lods
sahf
xchg
mov
test
mov
pop
fdivrl
fcoms
pop
stc
jge
aas
les
dec
cs
cwtl
mov
cmp
popa
in
xchg
mov
movntps
dec
adc
lret
and
outsl
mov
sarb
mov
mov
ret
jge
pop
insl
xchg
push
xchg
pop
xor
mov
sbb
ds
mov
sahf
xchg
ret
or
push
setb
add
mov
cwtl
inc
dec
jne
mov
mov
add
adc
sbb
push
movsb
jecxz
jns
jl
in
das
mov
mov
aas
adc
mov
jp
xchg
xchg
js
and
or
sbb
aaa
cmpsl
fwait
pop
mov
inc
sub
jns
xchg
or
loop
ljmp
cmc
movsb
ljmp
loopne
jmp
imul
enter
jns
cvtps2pi
adc
sbb
aad
iret
sbb
push
pop
leave
mov
xchg
xor
pop
and
test
hlt
xchg
rcr
andl
imull
jno,pn
add
inc
loope
cli
ja
out
sbb
inc
or
bound
ds
aas
sbb
xchg
ret
fdivs
or
mov
mov
inc
aaa
push
pop
push
fistpl
test
or
xor
leave
ja
int3
jge
add
push
inc
mov
cmp
push
call
lods
jbe
mov
dec
mov
icebp
xor
nop
or
xor
pushf
pop
xor
lods
inc
dec
js
hlt
cmp
xchg
jb
ret
jp
adc
cld
notb
sbb
and
sbb
fucom
in
stos
jle
enter
cmpb
and
jle
lahf
xlat
push
mov
pop
addr16
cmc
sub
jecxz
jns
out
pop
push
fisttpl
xchg
sahf
sbb
mov
inc
out
aad
sbb
lds
out
dec
add
xor
pop
push
xchg
hlt
fisubs
mov
inc
test
inc
dec
mov
push
pop
fisubrs
popa
out
push
pop
add
xchg
dec
and
imul
aaa
pop
inc
lahf
sub
mov
ss
inc
xor
inc
and
push
cmpsb
aaa
and
ud0
mov
icebp
and
enter
movsb
xchg
lcall
push
adcl
mov
mov
test
sbb
ret
sbb
xchg
ja
out
in
imul
mov
aam
fptan
icebp
cs
inc
inc
add
sub
sbb
lret
aam
xor
pop
mov
xor
jae
loope
test
scas
daa
mov
lcall
popa
mov
pusha
cmpsl
xchg
mov
xor
cmp
fildll
mov
sub
ret
jge
mov
mov
sti
and
mov
or
and
mov
xchg
lds
and
outsb
aas
loopne
icebp
inc
icebp
jb
ret
mov
das
cmp
jno
inc
add
out
sbb
xchg
xor
ljmp
pop
jb
push
mov
cli
jge
dec
lahf
in
scas
fmuls
es
imul
lret
adc
sbb
xor
cli
cmp
nop
ljmp
js
repz
xchg
and
data16
or
stos
ror
jge
adc
cmp
sub
jo
pushf
out
pop
arpl
jne
ja
incb
cmp
mov
stos
fsubrp
fnstcw
push
sub
jns
les
xor
std
dec
daa
dec
cs
inc
lock
sbb
frstor
test
mov
negb
pop
ljmp
loope
jnp
insb
push
or
lea
add
mov
outsl
sub
outsb
xchg
lods
stos
and
sub
xchg
pop
dec
scas
mov
adc
or
into
jg
fnstcw
sub
in
bound
push
insb
and
inc
jnp
leave
btc
aad
pop
ret
pop
lret
cs
mov
fsts
mov
ja
stos
jp
mov
xchg
cld
out
mov
sub
addr16
test
inc
dec
imul
add
and
xor
call
adc
rorb
roll
lret
fs
push
jle
arpl
xor
fwait
and
inc
xchg
rorb
scas
outsl
sbb
sub
sbb
and
and
out
in
or
push
out
xchg
cmp
xor
test
xor
mov
fwait
push
aaa
cmp
cmp
pop
cwtl
shl
repnz
in
daa
xchg
repz
clc
push
rcr
fs
addr16
lret
or
out
adc
mov
push
lahf
cmpsb
mov
jbe
lahf
cmp
xlat
popa
fmull
add
test
ret
pop
push
dec
adc
push
dec
movsl
fdivs
mov
sub
mov
cmp
pop
xor
pusha
add
ss
repnz
sbb
popf
outsl
in
xchg
push
add
and
fbld
inc
test
mov
dec
dec
pop
sahf
out
repz
or
jg
jb
jne
jge
push
mov
xchg
cli
hlt
pop
les
cltd
cmp
mov
mov
and
rorl
aam
jne
popa
outsb
sbb
dec
sub
jae
jmp
push
inc
outsl
test
scas
test
dec
adc
cmp
das
inc
cwtl
add
mov
aas
pop
xchg
cmp
test
nop
mov
mov
pop
sbb
dec
jl
es
fistl
mov
clc
fists
aaa
cmp
sbb
scas
jnp
inc
fiaddl
mov
or
inc
ret
mov
cwtl
and
fs
hlt
movsl
adc
test
push
call
mov
rorl
dec
dec
sub
sub
nop
js
mov
ja
adc
sbb
mov
cs
clc
out
dec
pusha
xchg
push
cmpsl
stc
out
call
pop
or
push
fst
mov
sub
lret
jbe
subb
adc
sahf
test
or
aaa
popa
fnstenv
jbe
push
xchg
dec
dec
bound
mov
sbb
ds
jno
mov
add
pusha
jmp
into
test
outsl
cmp
lods
into
cli
xlat
xchg
sub
jns
rclb
jmp
push
mov
mov
push
adc
mov
mov
fs
jge
or
sub
dec
cmp
cwtl
mov
into
in
mov
sbb
inc
mov
or
jnp
and
std
mov
push
mov
fisttpl
mov
into
sbbb
lret
into
in
insb
dec
hlt
int
test
cmp
dec
and
cltd
or
or
mov
lret
fmulp
fs
fcompl
fadd
jecxz
ss
lcall
mov
push
mov
fadds
ret
mov
xor
popf
jb
imul
sbb
lret
jge
cmp
outsl
jb
mov
lahf
stos
sbbb
fldln2
iret
xchg
jmp
xchg
sub
pop
xchg
in
add
lahf
mov
dec
cli
inc
jle
adc
cmp
jge
push
cmp
and
and
das
aad
mov
xchg
xor
xor
mov
xchg
ja
inc
sbb
xorl
popa
arpl
in
insl
add
stos
mov
movsb
or
pop
xor
shlb
into
add
add
sub
idivb
sbb
fsubp
out
xor
sbb
sub
or
sbb
out
gs
repz
jle,pt
fbld
loopne
out
sbb
dec
dec
xchg
mov
leave
pop
scas
outsl
push
ret
js
adc
lret
testl
or
dec
sarb
js
int3
mov
add
aaa
pop
push
ljmp
mov
cwtl
repnz
mov
dec
cmp
movsb
push
jle
sub
sub
das
mov
mov
mov
scas
cmp
inc
push
shrl
and
leave
aam
adc
ss
out
add
fs
in
pop
dec
nop
ljmp
push
dec
scas
fs
shrl
pop
popa
jg
pushf
out
leave
jbe
cli
pop
data16
in
stos
fimull
pushf
ss
lahf
and
or
inc
push
push
clc
mov
dec
inc
mov
hlt
std
adc
sub
sarb
bnd
repz
fs
in
sbb
jno
fdivs
xchg
xor
sbb
int3
adc
adc
sbb
test
mov
testb
aad
scas
pop
jns
leave
scas
ljmp
or
fdivl
in
fdivr
repz
dec
js
add
sub
ficomps
imul
mov
push
insb
jle
in
inc
mov
sbb
add
clc
pop
xchg
mov
xchg
xchg
mov
jb
movl
jb
adc
mov
dec
scas
fwait
xchg
sbb
rcll
mov
pop
pop
out
sub
adc
mov
mov
cwtl
inc
in
push
adc
outsl
push
stos
icebp
jbe
lock
pop
pop
xchg
jbe
pop
lods
ja
adc
mov
mov
enter
mov
subl
repz
icebp
int
xlat
in
pop
icebp
ja
add
daa
gs
mov
int3
rorb
mov
lahf
sbb
icebp
test
pop
in
push
loop
mov
inc
and
lret
and
lcall
fdivrp
jmp
hlt
push
mul
fisttps
lahf
or
bound
adc
js
movsb
aas
lods
or
lcall
pop
push
jne
cwtl
add
cld
add
aam
push
jg
push
lahf
in
push
xor
jne
dec
jns
in
pusha
and
insl
in
cs
sbb
sub
repnz
sbb
std
nop
add
insl
mov
dec
mov
xor
xchg
push
rcr
cmp
inc
ret
pop
pop
add
push
ret
xlat
loop
cmpsb
popf
mov
or
inc
addr16
pop
mov
mov
mov
clc
sub
xor
cmp
shl
jnp
pop
iret
daa
data16
jae
mov
sbb
flds
rcrl
fstpt
fs
cltd
jle
rcr
jmp
int
adc
insl
jmp
int3
xchg
dec
jp
mov
fdivs
sub
mov
jle
je
and
adcl
sbb
dec
inc
shl
fsub
or
push
and
mov
adc
inc
add
cltd
imul
cmpsb
mov
inc
ret
js
dec
jg
bound
sbb
lea
pusha
fcomp
gs
bound
mov
jb
lods
adc
lock
aaa
data16
test
push
jg
orb
and
jecxz
pop
jl
or
cltd
add
jle
fisttps
lea
lea
cwtl
call
xlat
mov
mov
mov
inc
fcos
cltd
sbb
lea
inc
mov
mov
xor
cmp
repnz
and
adc
idiv
inc
inc
push
lahf
add
push
jo,pn
cmpb
add
mov
mov
popa
lahf
cmp
xor
das
shrb
imul
inc
xchg
jecxz
fxch
push
push
sub
mov
in
out
and
jbe
mov
cli
subb
lahf
and
push
inc
mov
pop
int
enter
cli
adc
push
xchg
add
adc
mov
jl
jnp
adc
inc
jae
in
adc
sub
adc
cmpsb
add
mov
sub
mov
mov
dec
mov
mov
mul
and
sub
repnz
adc
arpl
sbb
mov
repz
add
push
mov
addr16
cli
movswl
dec
push
and
popf
inc
sub
dec
pop
inc
jecxz
xor
dec
inc
xor
pop
lcall
cwtl
xor
mov
pop
fimull
orb
mov
insb
stc
or
xchg
add
mov
sbbl
int
mov
adcl
cld
cmovl
cmp
movsl
negb
xchg
cs
lds
or
shlb
fwait
or
jb
sahf
mov
push
mov
aaa
enter
sahf
call
mov
xchg
inc
mov
mov
add
test
imul
mov
subl
mov
xor
loop
bnd
inc
les
loope
mov
sbb
cmp
push
and
dec
dec
dec
jae
jae
or
sbb
xorb
sbb
arpl
pop
ljmp
sbb
jb
outsl
ror
loope
add
sub
fstpt
xchg
mulb
mov
and
in
mov
inc
imull
mov
dec
stc
jg
lods
jne
or
or
das
fistps
pop
into
cmp
mov
fwait
popf
das
dec
fs
add
loop
xor
sub
and
int
lods
nop
inc
xlat
jne
test
cmc
xor
and
sub
stos
outsl
loopne
test
daa
lcall
ja
inc
add
push
daa
test
adc
pop
add
sub
push
enter
fbld
fidivs
lods
les
cmp
xchg
popa
call
push
sub
aaa
scas
xchg
ss
insb
cltd
add
popf
xor
mov
dec
push
lret
inc
inc
aaa
je
xchg
fdivs
cwtl
dec
scas
negl
sub
mov
pop
or
or
out
dec
outsl
and
and
mov
testl
push
jmp
sub
dec
xchg
stos
imul
fnstcw
ja
and
fisubrl
lods
popf
pushf
dec
mov
add
ds
pop
xlat
cmc
iret
fistpll
mov
jo
imul
inc
jg,pn
and
and
and
test
inc
mov
mov
stc
lahf
repz
sub
adc
ret
fmuls
sub
and
inc
idivb
test
xchg
push
loope
aad
aaa
stos
cmp
loope
pop
aaa
mov
or
das
out
shl
jg
scas
mov
add
mov
mov
fnstenv
or
push
lret
clc
rcl
fs
xor
popa
loopne
mov
jns
and
fistpl
mov
pop
dec
pushf
leave
pop
xor
loope
aad
jb
xchg
push
fwait
add
out
pop
or
out
ds
int
ret
shl
xchg
lcall
fsubp
cmc
mov
in
das
sti
inc
mov
xor
mov
fidivrl
jno
xchg
and
cmp
jmp
push
fldenv
imul
cmp
dec
insb
imul
aas
pusha
jne
push
sarl
mov
ret
into
and
pop
and
stc
test
out
pop
jnp
add
imul
cli
adc
lods
or
das
insl
push
sub
call
jae
lahf
jmp
dec
stos
cmpsl
push
ret
xchg
jmp
dec
arpl
int3
ljmp
pop
mov
movsb
mov
cltd
outsl
xlat
mov
mov
mov
icebp
das
out
rcrl
push
mull
lods
das
inc
push
xchg
jle
dec
pop
notl
nop
or
push
push
cmpsl
ss
pop
clc
push
xorb
clc
iret
jno
jae
cmc
xor
mov
addr16
and
xor
lret
in
loopne
subl
rol
movsl
adc
dec
out
stos
lea
fwait
aaa
ffree
cmc
or
hlt
in
push
in
mov
dec
out
clc
cmp
xchg
mov
fnsave
and
shrb
in
out
jae
scas
fldt
movsb
es
dec
or
pop
imul
enter
fdiv
jg
icebp
cmp
push
scas
leave
into
repz
xor
mov
enter
fs
or
pop
push
pop
fnstsw
sub
jmp
ret
dec
arpl
scas
iret
imul
faddl
push
mov
lret
dec
ret
int3
imulb
mov
or
push
in
pop
xchg
jmp
outsl
inc
mov
xor
cmp
xor
test
lods
pop
and
insl
dec
add
sub
pop
and
mov
mov
xchg
jge
in
jge
adcb
es
push
mov
aam
inc
mov
sti
dec
push
rclb
adc
push
shll
mov
icebp
add
pop
jl
nop
ss
adc
jp
dec
mov
adcl
mov
and
aaa
movsl
xor
jb
fwait
add
fdivl
cmpb
add
jb
mov
mov
leave
sub
les
dec
sbb
push
lahf
sahf
add
sbb
xlat
std
xchg
scas
fistpll
adc
je
dec
std
lret
lea
es
pop
pop
cmpsb
into
popf
mov
in
adc
mov
int3
and
xor
and
pop
dec
enter
lock
jnp
mov
or
ret
sub
fmulp
mov
sbb
fs
out
sbb
dec
lock
jge
imul
jl
insl
aas
inc
hlt
and
mov
aas
pop
jge
lcall
test
out
jo
idiv
arpl
lock
xor
mov
push
dec
jl
idivb
pop
and
stc
bound
lods
xchg
xor
pushf
imul
jge
insl
in
lahf
icebp
loope
lods
popa
adcb
pop
xlat
push
xor
add
lahf
call
jo
dec
inc
inc
mov
pop
mov
mov
push
fists
daa
call
mov
dec
clts
sbb
xchg
lea
dec
movsb
lock
lcall
mov
out
xchg
je
xchg
das
fcmovu
addr16
adc
or
mov
pop
mov
pop
faddp
cld
cld
xchg
and
outsb
cmp
xorb
pop
xchg
mov
faddl
mov
mov
xlat
addr16
bound
and
cmp
fstl
mov
pop
jle
int
jne
in
ss
and
mov
lds
xor
sub
out
loope
sbb
mov
mov
inc
das
or
mov
ss
cld
sub
int
inc
in
test
leave
dec
lret
pop
fisubrl
push
sub
rcr
push
test
test
mov
loop
out
js
hlt
scas
in
scas
test
push
or
in
ljmp
cld
test
mov
push
xor
mov
sbb
ljmp
mov
lret
in
lcall
stos
fcmovne
sbb
pop
or
dec
clc
out
add
push
loopne
arpl
jo
sub
lret
sub
out
addr16
mov
adc
loope
mov
push
jle
fdivl
divb
popf
movsb
sti
and
imul
in
out
pop
ljmp
mov
xchg
inc
inc
adc
sub
and
jp
aas
icebp
into
jle
xchg
or
fwait
lret
xchg
maskmovq
negl
pop
nop
push
add
inc
inc
xchg
mov
lcall
outsl
inc
adc
xor
and
fwait
inc
cmp
adc
jb
xchg
jmp
pop
ret
fsubrs
dec
push
in
stos
daa
sbb
cwtl
push
or
jbe
lahf
jmp
repz
mov
pushf
sub
insb
mov
inc
xor
int3
loopne
jge
adc
das
cmpsl
pusha
mov
stc
cwtl
and
mov
dec
ret
sbb
push
and
mov
roll
sub
loop
sub
pop
push
loop
cmpsl
iret
cld
sar
pusha
jne
movsl
test
mov
push
fisubrs
or
jns
dec
rorl
push
cltd
dec
mov
jb
lret
pop
lcall
sub
ss
mov
xchg
mov
dec
aas
mov
lods
insb
es
mov
pop
inc
or
lods
sbb
jge
push
cmpsl
mov
pop
or
xor
repnz
sbbb
std
xchg
pop
cs
cmp
dec
lahf
xchg
mull
dec
add
pop
inc
call
je
stos
inc
cmp
stc
or
inc
fucomp
fisubrl
or
enter
mov
shrl
outsl
or
shlb
loopne
out
jl
push
jle
stc
mov
call
out
xchg
xor
fstpt
and
fst
push
test
or
pusha
dec
outsb
les
scas
arpl
out
stc
in
lret
mov
xor
std
js
lods
adc
xor
xor
xor
or
inc
and
dec
in
jmp
cmp
lods
cmove
or
sti
call
daa
out
cltd
leavew
sti
dec
mov
iret
movsb
and
inc
out
mov
sub
mov
sub
mov
jecxz
xchg
leave
fmuls
dec
testb
pusha
shll
cli
push
in
sbb
test
sbb
adc
shll
popf
sti
pop
cmp
mov
cmp
fidivs
pusha
subb
psubusb
fmuls
jae
lock
mov
mov
repz
jl
push
and
insl
mov
xor
sub
aas
and
adc
xchg
cmpsb
push
mov
jb
movsl
sbb
add
lcall
mov
sub
add
mov
mov
push
outsl
dec
aaa
lea
stos
int
sub
xor
into
call
pop
push
rclb
js
mov
push
movntq
out
inc
mov
fstpl
add
aad
jnp
mov
lea
add
xor
xor
or
adc
push
add
jae
mov
fisttps
or
out
jbe
sub
mov
fnsave
pop
dec
imul
or
insb
fldt
xchg
mov
cs
inc
pop
or
sub
aaa
pop
cmp
loop
or
fmuls
outsb
mov
mov
or
into
fcoms
pop
cmp
xchg
loopne
scas
rclb
sbb
pop
cmp
add
mov
lds
movl
je
cmp
decb
mov
push
out
lock
shl
cli
shll
repz
pop
sbb
cwtl
mov
sbb
insb
dec
cmp
cltd
jmp
sbb
inc
pushf
jle
jecxz,pt
xchg
sbbl
jbe
imul
out
push
into
mov
outsb
pop
or
cwtl
enter
mov
je
mov
add
in
je
dec
jae
gs
idiv
fstps
ja
xchg
adc
pushf
jo
sub
pop
xchg
mov
lea
outsb
jno
orb
scas
popf
out
sarb
filds
cmpsl
loope
dec
es
cmpsl
pop
cld
pop
arpl
cld
repnz
mov
mov
cltd
mov
bnd
xchg
sub
mov
insb
sub
or
cmp
in
bsr
mov
pop
sbb
xlat
xchg
loop
push
ss
out
stos
jmp
mov
mov
lock
jmp
fldl2e
jge
fnstcw
mov
out
or
cmc
movsb
andb
cli
and
arpl
int3
mov
push
dec
sub
jecxz
lds
stos
add
rolb
pop
ficomps
lret
mov
inc
shr
lods
mov
push
outsb
orl
sahf
dec
lods
and
inc
xchg
rclb
pop
dec
imul
push
mov
notl
pop
sub
bound
jnp
mov
test
cwtl
mov
into
rcl
mov
lret
adc
insb
sub
pop
lcall
sti
sbb
cmpsb
push
adc
in
pop
arpl
stc
push
pop
aad
adc
add
mov
adc
xchg
loop
scas
cs
dec
push
xchg
push
mov
lods
data16
cmp
testb
adcl
mov
push
mov
cs
xor
aam
cwtl
mov
jle
ljmp
aam
add
dec
cmp
adc
xchg
pushf
dec
fcoms
mov
ret
fiaddl
xchg
mov
inc
loop
test
mov
jle
push
mov
test
sub
mov
fisttps
mov
popa
xor
jle
push
leave
adc
sbb
mov
sub
sti
fucom
or
jl
jnp
jl
add
push
aam
xchg
cmp
les
popa
sub
mov
cs
test
inc
and
cs
push
lcall
clc
dec
jmp
pop
dec
xchg
mov
mov
in
movsl
jmp
adc
repnz
cmp
in
push
stos
fwait
push
orb
inc
test
leave
sub
mov
cmp
jnp
lret
imul
bound
xchg
repnz
stos
out
cmp
mov
xor
je
inc
addr16
hlt
into
rcll
fisubl
hlt
roll
and
out
sbb
stos
dec
test
fidivl
dec
negb
inc
test
cmp
adc
nop
cmpsb
scas
aaa
mov
and
stos
pop
lret
bound
jg
jle
lock
inc
jbe
and
scas
lea
pop
aas
sbb
scas
push
int
out
addr16
iret
jecxz
filds
xor
jmp
roll
mov
insb
push
xlat
test
hlt
mov
jl
push
je
fwait
and
xchg
inc
adc
icebp
push
pop
xchg
stc
mov
lea
adc
xlat
lods
aas
movsb
shll
mov
into
mov
std
fisttpl
ss
dec
loop
aad
cmp
mov
jg
aam
dec
jl
imul
dec
sbb
pop
fisubl
stos
adc
push
jnp
sub
sbbl
mov
push
jmp
mov
xor
jnp
adc
add
mov
xchg
sbb
rcrl
cmp
andl
sub
xor
lret
pop
push
adc
inc
cmpsl
inc
or
in
in
out
repnz
popf
mov
sub
mov
out
shl
cmp
fcmove
test
and
push
mov
jp
dec
sbb
aam
aaa
cmpsb
jnp
sbb
xchg
add
pop
add
dec
shlb
loopne
inc
fstpt
lock
outsb
cmpl
mov
in
repz
adc
sbb
repz
pop
cmp
out
or
js
sub
xor
add
push
daa
in
testb
and
lcall
cmc
cwtl
or
mov
inc
fistps
mov
pushf
and
fstpl
movsb
mov
pop
push
push
out
cmc
ss
pop
insb
popa
notb
mov
xlat
and
xlat
cld
mov
aaa
xchg
lock
data16
or
imul
jl
jb
mov
int3
mov
xlat
fisubrl
aas
fmull
jns
clc
sahf
adc
pop
and
mov
inc
dec
lret
shrb
or
xor
stc
mov
es
sbb
insl
fisubrs
scas
sub
inc
sbb
out
sti
shll
fcmovnbe
cmp
inc
stos
dec
mov
jns
xor
xchg
push
movsl
sub
dec
mov
ds
jg
repz
sbbb
xchg
addr16
sub
repnz
add
aaa
dec
mov
pop
dec
or
bound
pop
dec
adc
sbb
rorb
lock
idivl
sbb
cmp
leave
xor
je
sbb
mov
fwait
sbb
mov
cmp
jae
mov
stc
repnz
mov
cmp
nop
mov
loope
jo
push
mov
popa
lret
in
mov
mov
outsb
js
mov
add
es
cmp
fwait
bound
push
icebp
mov
scas
fcoml
pop
xchg
addr16
in
scas
daa
mov
mov
imul
jns
xchg
cmpsb
push
ret
pushf
into
and
rcrl
adc
test
dec
sub
push
outsb
aas
push
mov
push
mov
push
pop
jno
call
idivl
inc
mov
test
scas
push
xchg
add
xor
test
out
xor
in
mov
dec
aas
adc
pushf
lcall
jnp
les
xchg
push
stos
cltd
mov
fdivrs
fcoms
sub
xor
sbb
xchg
jg
scas
or
xor
cmc
add
xchg
in
mov
mov
data16
dec
mov
sub
xchg
rcll
lock
outsb
imulb
test
ds
mov
inc
aaa
adc
jmp
ret
out
mov
in
jle
pop
mov
dec
rorl
prefetcht1
js
and
add
add
aas
dec
add
sub
pop
mov
mov
or
jle
push
sub
lock
jb
dec
es
xor
mov
scas
mov
iret
data16
fdivs
jge
xor
lods
cmp
inc
scas
std
push
dec
or
movsb
fisttps
mov
dec
data16
or
push
popf
jmp
fstpt
incl
cmc
mov
rorb
in
mov
sbb
fldl
lmsw
ja
sub
adc
add
sti
fimuls
lret
inc
lods
scas
cltd
call
cmp
ud0
sahf
out
jno
mov
and
xor
cmp
clc
sbb
or
test
mov
cli
or
xchg
insb
inc
in
xor
lret
out
add
hlt
dec
jp
sub
adc
ret
arpl
enterw
call
mov
pop
or
fwait
push
test
cld
push
data16
loop
imul
mov
roll
js
pop
aaa
out
fcomps
sub
mov
fsubrp
or
push
push
imul
pop
adc
in
and
sar
add
inc
mov
psubw
and
add
and
fcmovnb
stos
enter
cld
add
add
movsb
jecxz
and
pop
lcall
in
lea
gs
loop
mov
mov
fsubrs
fwait
mov
out
cmp
fs
xchg
xchg
mov
rcrl
xchg
out
sub
outsl
jno
jno
mov
adc
jbe
xchg
pop
inc
jmp
stos
ret
adc
stos
mov
loopne
inc
jns
cmc
repnz
push
inc
pushf
jns
out
lret
adc
cmp
pop
mov
fwait
and
pop
insb
stos
lret
xchg
xor
adc
jg
adc
call
adc
or
dec
loopne
popf
mov
push
or
lcall
hlt
xchg
pop
mov
in
ja
inc
mov
pop
pop
push
push
pop
ficomps
das
mov
pop
pushf
jmp
repz
lods
mov
neg
push
xchg
add
lret
xor
mov
arpl
ret
test
push
pop
mov
xlat
adc
xchg
fsub
mov
inc
inc
pop
lret
mov
sbbl
push
xchg
mov
xchg
or
lahf
and
movsl
popa
lods
mov
arpl
inc
fs
push
xchg
dec
mov
xchg
lret
mov
jle
xchg
scas
lahf
inc
nop
jbe
push
pop
ja
sti
push
bound
data16
mov
out
mov
or
orl
xlat
lock
or
mov
adc
out
xchg
cmp
mov
div
aas
test
cmp
inc
push
imul
add
xor
lahf
dec
js
sbb
int3
lahf
cmp
push
and
mov
xor
pop
xchg
sub
jmp
les
mov
or
mov
push
loopne
sbb
mov
push
call
addw
fdivr
xchg
xor
pushf
movsb
lods
inc
int
push
xchg
jle
int
add
jle
pop
push
les
cltd
cld
dec
clc
stos
lock
push
shlb
inc
dec
in
xor
mov
dec
and
nop
fimull
movsl
push
xor
adc
mov
lret
test
lock
sbb
rcrb
or
push
push
imul
and
cwtl
mov
outsb
and
hlt
mov
sahf
xor
or
aaa
push
fwait
adc
xor
lahf
andb
inc
cmp
pop
jb
orl
pop
add
arpl
mov
sarb
add
or
cld
jg
add
clc
push
sarl
sbb
jae
insb
jg
insb
xlat
xor
and
dec
outsl
push
in
mov
add
rclb
arpl
mov
cltd
and
loopne
scas
shll
repnz
lahf
sub
jp
xor
inc
sbb
mov
xchg
add
movsl
jae
mov
stc
cmc
push
or
arpl
nop
mov
mov
adc
sarl
fwait
mov
inc
scas
xchg
mov
xor
cmp
mov
pop
ret
scas
add
popf
push
in
aad
mov
or
adc
xor
repz
idivl
push
jmp
pop
pusha
cld
fs
mov
jmp
adc
pop
pop
mov
adcb
mov
lcall
cmp
das
pop
push
inc
lods
aaa
cmp
add
push
push
and
sti
aas
lods
cmp
scas
fwait
lret
mov
push
xchg
cmpsl
pop
daa
out
and
jbe
repz
jne
std
cmp
movsb
ret
mov
js
aas
test
movsl
xlat
test
or
xchg
cltd
inc
cwtl
pop
addb
popf
movsb
aaa
stos
inc
rorb
xor
push
es
clc
pop
sub
pop
data16
sbb
and
xchg
push
shlb
ficoml
cli
iret
dec
jns
dec
mov
sahf
iret
test
test
lret
test
dec
mov
inc
movsb
jnp
out
test
pop
das
out
popf
or
inc
scas
inc
dec
mov
nop
mov
push
jecxz
xchg
mov
or
cmpsb
lds
cmp
in
stc
xchg
mov
sub
mov
lock
cmc
dec
gs
add
popf
test
pop
sub
test
adc
mov
dec
fisubs
sbb
notl
push
xchg
inc
inc
cmc
ljmp
sub
xsaveopt
mov
xchg
mov
cmp
mov
into
inc
insl
fiaddl
adc
sbb
and
std
add
cmp
cld
ds
outsb
xchg
stos
pop
push
cmp
jno
loopne
lods
sahf
cmp
sub
pop
pop
push
mov
mov
mov
sub
xor
ret
or
xchg
dec
loope
imul
sub
sahf
fidivs
rcrb
xlat
xchg
ja
jae
sti
enter
or
pop
dec
sbb
pushf
aad
ficoms
dec
aaa
test
int
pop
shlb
jl
adc
and
cmp
repz
jmp
cmp
dec
sti
add
inc
addr16
loopne
fnstenv
add
icebp
idivl
mov
cltd
leave
out
imul
xchg
outsl
lods
mov
imul
aam
and
jl
adc
fildl
out
scas
inc
sub
inc
mov
mul
gs
repnz
into
add
sbb
xchg
mov
xor
lods
jp
mov
in
cwtl
data16
or
xor
pop
aad
xchg
in
add
loop
xchg
orb
ret
or
cmc
dec
fs
enter
mov
sub
verr
or
add
rorl
sub
or
sarl
jecxz
xchg
cmp
iret
out
push
push
stc
in
jno
sti
dec
testl
scas
push
insb
adc
ljmp
xor
aam
add
push
xchg
xor
xor
sbb
nop
movsl
xchg
jg
pop
jg
inc
pop
sbb
adc
pop
add
aas
push
ljmp
lods
shrl
imul
jnp
mov
dec
mov
jo
fidivrl
pushf
pop
scas
add
lahf
sub
inc
repz
inc
loope
cmpsb
xchg
cmp
or
mov
sub
loope
stc
test
mov
int3
inc
dec
lods
adc
dec
pop
push
or
push
ja
xchg
clc
jg
in
dec
cmpb
fisubrl
sub
xchg
and
cmpsb
xchg
enter
or
push
pop
mov
jp
xor
ret
js
mov
push
mov
fwait
inc
xchg
ret
loop
into
sti
movsb
aas
data16
aad
nop
into
imul
addr16
jecxz
push
inc
into
imul
pop
into
std
dec
jmp
jge
adc
inc
fsubrp
dec
paddb
repz
addb
push
mov
pop
sbb
sub
push
mov
popf
sub
jo
out
jge,pn
outsl
ss
daa
inc
push
and
inc
sub
ljmp
pop
pop
pop
and
rcll
fcomps
rol
jns
jnp
mov
mov
in
inc
adc
mov
and
xor
pop
mov
xchg
xchg
xor
cmp
add
xchg
push
pop
arpl
xchg
pop
outsl
adc
sub
arpl
pushf
test
shll
dec
dec
sbb
scas
xor
cld
mov
mov
in
sbb
mov
cmp
push
hlt
dec
jns
insl
ds
lahf
push
mov
pop
jb
mov
out
es
call
movl
in
pushf
inc
lds
mov
adc
jae
push
add
dec
ds
lock
jae
xchg
mull
fdivs
cs
xchg
fwait
cmp
xchg
addr16
pop
out
sub
lock
scas
int3
jp
rcr
fisttpl
sub
ret
lods
jecxz
adc
cs
pop
and
jae
pop
xor
loope
in
jl
and
sbb
scas
inc
mov
xor
xor
pop
xor
jae
cld
cld
stos
les
addr16
pop
pop
imul
and
jae
and
ja
sbb
sub
mov
dec
add
stc
mov
sti
mov
shr
jl
aaa
les
sub
in
pop
movsl
mov
dec
mov
clc
jns
mov
lea
mov
je
icebp
int3
mov
inc
shl
sub
jns
jae
scas
js
and
or
inc
jns
add
mov
sub
jp
incl
xor
xchg
cwtl
cld
push
pop
cs
daa
popa
jp
imul
aas
push
xchg
cmp
and
cld
stos
push
mov
add
dec
inc
pop
repz
add
xor
mov
loopne
pop
sbb
add
and
pushf
push
insl
ret
out
pushf
mov
pushf
movsl
inc
scas
pop
add
or
cmp
jmp
pop
bswap
fsts
mov
insl
jno
sub
ss
loope
push
fs
push
and
rcll
insb
inc
loopne
int3
jb
pop
cmp
add
fwait
out
dec
roll
sbb
push
cmpsb
ficomps
xchg
hlt
pop
in
push
cmp
pusha
pop
fimull
push
imul
mov
sbb
daa
addl
jnp
roll
pop
jge
pusha
leave
lret
int
jns
pop
adc
xor
and
jnp
lcall
ljmp
popf
mov
ds
fistpl
popa
dec
or
push
scas
add
outsb
pop
outsb
sti
cmp
mov
and
adc
outsl
cmp
gs
mov
pop
in
jb
mov
inc
dec
es
enter
ljmp
clc
cmp
shrl
daa
repnz
adcb
mov
push
mov
scas
push
test
insl
sub
daa
jno
movl
and
pop
pop
vmread
movsb
xor
add
out
xor
arpl
dec
call
repnz
jae
out
xchg
enter
mov
lcall
pop
sbb
sub
add
add
or
fimull
jnp
cmc
data16
adc
mov
enter
and
mov
aam
sbbb
popa
mov
inc
jmp
in
or
inc
jne
fcmovne
add
mov
add
sbb
cmp
lds
sub
xchg
into
jg
movsl
xchg
mov
push
ja
adc
lret
icebp
shrl
jb
call
pushf
mov
stc
sub
pop
pop
adc
xchg
cld
jo
pushf
push
dec
pop
pop
repnz
and
aam
lret
sbb
ja
fldt
and
jno
or
xor
inc
sub
shlb
rolb
addr16
mov
adc
loop
std
aas
xchg
xchg
pushf
mov
insb
sahf
fcomp
inc
inc
lock
mov
push
dec
mov
ds
add
or
adc
test
mov
fwait
inc
add
pop
xor
jbe
dec
sbb
fistl
ficompl
jno
nop
sub
jp
lgs
push
mov
inc
sbb
xor
mov
mov
jno
adc
fcoml
testb
sti
jmp
dec
imul
loope
sub
in
mov
stos
mov
or
inc
mov
je
mov
cltd
fmull
popf
in
mov
jnp
and
or
in
sti
popa
mov
sub
mov
sbb
inc
xchg
outsb
add
mov
push
adc
ss
jno
dec
pop
push
mov
xor
push
push
xchg
sbb
inc
xor
scas
int
imul
dec
pop
clc
push
int3
stos
fistl
fsts
sub
jmp
loopne
adc
push
stc
dec
scas
mov
in
add
adc
cmp
stos
idiv
mov
mov
jb
sub
cmp
cmpsl
xor
mov
sbb
mov
sbb
add
scas
outsb
movsl
mov
pop
and
lcall
inc
add
int3
ficompl
adc
mov
out
xchg
mov
test
in
cmp
add
adc
mov
mov
adc
mov
testl
lds
ds
xor
and
xor
adc
adc
pop
jns
push
sub
sar
mov
pop
ret
pushf
ja
adc
cmp
je
lods
mov
xorl
mov
cmpsb
andl
mov
mov
add
pop
xchg
inc
jl
dec
ljmp
call
xor
push
push
std
mov
xor
sbb
xor
sub
cmp
popa
lcall
movsl
aas
das
lds
jbe
and
push
xchg
sbb
pop
hlt
xchg
sbb
popl
stos
fwait
xor
pushf
mov
mov
mov
adc
xchg
push
mov
fs
push
push
xchg
or
xchg
loopne
or
jns
lock
cmp
pop
mov
mov
and
outsb
cld
cmpsb
xchg
sti
mov
insl
pop
xchg
pop
scas
sub
mov
je
push
ret
pop
jb
push
movsl
jg
scas
jbe
jecxz
lahf
push
mov
lcall
xor
ret
mull
pop
imul
sbb
mov
or
mov
sub
fisubl
mov
inc
mov
les
adc
lock
pop
lret
dec
and
mov
fwait
idivl
and
push
adc
xor
movb
mov
xor
push
enter
aam
push
mov
cmp
test
xor
inc
sbb
xchg
add
in
arpl
pop
sbb
mov
pop
mov
popf
or
adc
nop
bound
mov
imul
jo
push
pop
cld
xchg
pop
jae
mov
adc
xchg
fstpt
aam
and
pop
push
icebp
or
orl
leave
push
add
dec
iret
cmp
adc
mov
or
test
mov
lods
fisttpll
sbb
sbb
xlat
push
mov
stos
xchg
adc
popf
cmp
pop
dec
cwtl
loop
push
insb
out
pop
fimuls
push
sbb
lods
push
pop
adc
movsl
cwtl
pop
ffreep
fimuls
loope
xchg
dec
cli
jmp
sub
xchg
xchg
shll
dec
inc
sbb
scas
sbb
into
jle
outsl
popa
lods
pop
adc
inc
cmp
lock
pop
fstl
mov
mov
testb
scas
cwtl
lret
adc
push
arpl
push
mov
pusha
test
cs
add
out
data16
stos
pop
mov
cmpsl
les
add
lcall
pop
ret
nop
std
lods
and
movsb
and
xor
cmc
mov
jbe
fsubs
lods
dec
cli
xchg
out
inc
xchg
or
mov
movsb
add
int
sub
pop
sbb
mov
jmp
insl
pop
mov
jno,pn
xor
cmp
loopne
punpckhbw
out
adc
xchg
push
push
add
popa
add
dec
add
movsl
arpl
jmp
int
xor
dec
mov
pop
idivl
lahf
cld
scas
lret
mov
int3
mov
out
pop
fisttpll
push
xorb
jbe
adc
pop
xor
fistl
and
stos
iret
xor
jge
mov
xlat
aad
and
push
xchg
aaa
ss
mov
cmp
aad
add
fwait
jl
popa
hlt
sbb
daa
cmp
cmp
dec
mov
push
hlt
mov
frstor
add
loop
jle
sub
cs
sbb
jno
cmpb
adc
aad
in
pop
or
mov
je
cltd
cmpsl
push
es
shlb
jmp
adc
imull
js
arpl
mov
aas
sub
ret
xchg
cltd
int3
push
stos
adc
jmp
mov
xor
or
lds
rol
dec
jg
jae
xor
call
insb
imul
mov
mov
pop
popf
lds
in
mov
stc
adcl
ja
scas
arpl
fdiv
add
inc
xchg
je
mov
lods
insb
mov
pop
orb
xchg
scas
push
cmp
into
std
sub
xchg
inc
mov
bound
clc
inc
push
dec
pop
dec
iret
fidivrs
xor
into
sbb
lods
add
mov
in
xchg
mov
add
fisubl
es
mov
push
fisubs
fwait
movsl
ljmp
push
mov
loope
jp
fsubs
sarb
orb
mov
negb
or
repz
inc
xchg
test
add
dec
aad
pop
xchg
push
xor
adc
lods
mov
shlb
test
mov
gs
and
add
orl
add
dec
inc
outsb
nop
jg
xchg
rcl
mov
sti
inc
sarl
xchg
leave
dec
adc
popa
js
cmp
lcall
loopne
jo
mov
push
lods
loope
xchg
stc
nop
rcrb
jnp
mov
ja
out
bndldx
bound
repnz
ss
mov
movsb
fwait
movsl
js
jo
push
mov
and
add
mov
inc
jnp
jns
inc
dec
mov
mov
mov
cltd
push
push
ret
sub
int3
sti
mov
movsl
mov
test
xlat
mov
push
repz
dec
jb
loopne
cmp
adcl
jmp
lret
add
lcall
arpl
popf
dec
sbb
call
lret
fisttpll
mov
adc
movsl
and
cmp
call
shll
popa
test
push
jb
in
mov
filds
sbb
mov
mov
xchg
adc
inc
sbb
cli
adc
add
xchg
pop
add
imul
ss
testl
jecxz
lcall
in
pop
cmp
mov
loopne
jp
shl
mov
jno
call
arpl
mov
fs
test
scas
adc
imulb
push
aam
dec
fucomp
sti
popf
push
test
dec
push
lds
push
xor
sahf
stc
and
xor
dec
call
movsl
pop
in
xchg
loopne
jae
xchg
cli
jg
inc
mull
push
and
subb
lea
cld
push
mov
inc
outsl
inc
inc
inc
cmc
pop
shld
mov
jp
imul
pop
iret
sub
stos
jg
out
insl
mov
and
movsb
imull
mov
int3
iret
testl
push
loopne
leave
data16
fmuls
jle
mov
mov
loop
cmc
or
xchg
fsubs
sub
jae
push
pop
stos
dec
mov
inc
jge
clc
cld
jbe
fisttps
dec
cli
andl
nop
jbe
stos
xor
pop
roll
dec
cmp
jno
icebp
cmp
add
daa
xor
lret
aam
ljmp
push
mov
dec
test
xchg
and
lds
jo
mov
pop
loope
dec
xchg
je
loopne
jge
fucomp
add
sbb
scas
into
dec
and
fimuls
adc
xchg
data16
mov
inc
sbb
inc
cmp
in
xor
rorl
sbb
inc
cmpsl
gs
dec
cld
stos
dec
testl
pop
xchg
push
push
mulb
lods
and
data16
js
shll
xorb
and
cmc
test
loope
xlat
xor
mov
jp
f2xm1
push
das
test
add
xor
inc
inc
sbb
sub
sbb
mov
int
mulb
jbe
pop
and
mov
out
aad
xbegin
enter
das
jmp
lods
lahf
sti
gs
pop
jp
mov
mov
sbb
xchg
int3
in
pop
add
xorl
push
cmpsb
cmpsb
mov
in
test
mov
adc
pop
sbb
shl
lcall
incl
push
fbld
cmp
mov
ret
adc
xor
shrl
jl
aas
or
pop
orb
add
fs
enter
mov
mov
cmp
adc
daa
jno
jg
fs
or
sub
push
sarl
push
cli
bound
scas
xchg
pop
dec
dec
fisubl
xchg
add
jno
out
xchg
shlb
aaa
pop
leave
sbb
jg
andb
movsl
adc
fsubrp
push
leave
add
jno
jmp
cwtl
ljmp
inc
lods
in
jge
or
push
ror
lcall
pop
dec
sub
add
xchg
and
jmp
or
dec
sub
inc
rcl
arpl
and
push
addb
mov
mov
cli
sbb
in
jg
mov
sarb
pop
adc
push
into
test
pop
cmpsl
add
movl
lock
scas
xor
jns
shrb
ja
push
sbb
nop
sbb
lret
lret
fwait
shll
imul
add
pop
sub
xchg
sub
and
or
mov
das
aad
xchg
inc
cmc
jb
idiv
movsb
inc
sahf
cld
cmp
adc
add
fdivr
stc
lods
scas
aam
or
cmc
jmp
cmp
popl
push
xor
mov
fists
in
aad
jl
addb
ljmp
and
stc
movsb
sub
and
out
out
dec
fadds
cs
xor
aas
gs
jecxz
cld
mov
sbb
in
push
sbb
mov
es
insb
imul
mov
mov
cmp
push
iret
sbb
ss
fiaddl
jl
add
hlt
movsb
mov
std
mov
call
enter
fdivrs
mov
int3
xor
enter
xchg
sbb
fsubrl
out
ret
mov
aam
pop
out
rolb
sbb
daa
pusha
sub
test
pop
jp
add
dec
imul
ds
sahf
int
out
imul
fistps
mov
adc
and
popa
jp
sti
sahf
mov
jo
cli
and
cmp
dec
mov
cmpsb
ja
mov
lea
cmp
jecxz
mov
lods
fisubs
aad
ret
rorb
icebp
or
adc
add
cmp
call
mov
push
add
arpl
mov
andl
dec
fbstp
mov
clc
xchg
jne
fcoml
cmp
inc
xor
xor
out
lcall
pop
cmp
push
inc
shrl
int3
divb
outsb
insb
inc
jmp
mov
jbe
dec
push
repnz
test
test
repnz
gs
jg
push
add
lea
sahf
aad
ja
filds
push
inc
add
cli
lcall
insb
ret
inc
ret
cmp
mov
and
in
mov
cwtl
fsubrl
cmpsb
lods
and
scas
outsl
sbb
dec
and
pop
iret
cwtl
and
adc
mov
test
lock
mov
outsb
cmp
outsb
sub
lods
cmp
sub
daa
xchg
arpl
cwtl
mov
lock
ror
and
mov
mov
inc
stos
xor
das
stos
pop
jge
dec
push
repz
cmp
popf
pop
arpl
sbb
cmp
xor
aaa
negb
mov
mov
xchg
inc
iret
add
hlt
add
mov
pop
xor
cltd
imul
ljmp
mov
or
xchg
stos
sbb
jbe
stos
pop
lock
adc
jp
hlt
push
and
mov
pushf
loopne
inc
lret
and
cld
sbb
leave
fstps
rclb
fsubr
mov
jnp
push
fs
mov
icebp
or
rcrb
lods
lock
pushf
mov
cltd
repz
mov
mov
pop
neg
jno
lcall
lods
xchg
mov
ret
dec
adc
xchg
adc
mov
mov
adc
loope
cltd
lds
inc
adc
hlt
mov
jo
outsb
mov
adc
jne
loop
stos
add
fwait
jo
in
icebp
push
push
mov
jl
xlat
adc
ljmp
adc
and
rcll
fcmovne
jl
mov
push
pop
pop
mov
push
and
or
sub
test
adc
int
dec
fmull
or
cmp
and
push
inc
adc
daa
daa
xor
mov
jle
cwtl
pop
incb
xor
loope
lods
push
enter
loopne
mov
push
dec
mov
adc
stos
cmpsb
dec
mov
xchg
mov
mov
xor
adc
das
push
mov
lret
stos
or
xchg
xor
xchg
mov
xchg
shrl
dec
mov
int
das
dec
push
push
mov
nop
jae
es
adc
push
call
movsl
in
cmp
xor
inc
sahf
std
mov
bound
shll
add
outsb
into
sub
xlat
js
dec
cmp
jbe
cli
ljmp
mov
dec
cmpsb
mov
scas
xor
pop
lods
xlat
push
and
mov
dec
mov
jg
gs
scas
sbb
fnstenvs
sbb
aas
js
mov
popf
inc
cld
nop
sub
stos
mov
xor
inc
sub
adc
iretw
push
sub
mov
addr16
add
cmp
dec
movsl
cltd
sub
pop
mov
push
cmp
lods
lcall
cmp
sub
int
addr16
rolb
cmpsb
je
push
imul
mov
xchg
and
mov
in
lcall
push
mul
in
movsb
fstl
rcrl
ss
pop
push
jg
sbb
push
dec
into
repnz
fisubs
ja
sub
and
inc
pop
add
push
sbb
mov
shll
pop
xor
push
out
in
jb
cmpsl
shl
dec
jnp
rcrb
and
sahf
rorl
ret
or
pop
lods
push
je
daa
jns
das
jge
jmp
inc
and
pusha
xchg
push
icebp
or
and
inc
test
mov
loope
pop
cmp
test
push
mov
outsb
add
out
mov
das
pusha
mov
xor
sub
iret
inc
inc
mov
push
mov
repz
js
popa
cmpsb
test
or
jecxz
cmc
stos
jns
in
add
jl
mov
icebp
int3
push
mov
mov
movsl
mov
loopne
push
dec
cmc
divl
or
lods
enter
add
int3
push
adc
cwtl
iret
mov
and
jg
fsubrl
cmp
bswap
pop
push
sarl
add
or
lock
pand
je
xchg
xlat
iret
dec
test
adc
rcl
cwtl
out
call
ret
xchg
mov
adc
mov
in
and
outsl
push
and
enter
sbb
or
cltd
jb
and
pushf
or
jae
addl
stos
inc
das
inc
xor
out
xor
loopne
xchg
xlat
inc
pop
inc
pop
test
adc
stos
cmpsl
adc
fwait
push
and
scas
or
sahf
adc
xlat
inc
jle
jns
mov
aas
jnp
lret
sbb
xorl
subl
xchg
mov
lods
sub
push
dec
lahf
dec
push
mov
xor
in
fs
cmp
testl
in
mov
leave
and
mov
cmp
or
sub
and
ret
fmull
lock
hlt
dec
mov
movsl
shll
jmp
xor
les
mov
push
and
push
fldenv
jbe
ss
lock
fldl
jg
pushf
enter
bound
xlat
je
xor
jno
mulb
es
fs
xor
pusha
jp
or
sub
fbld
arpl
popa
jno
call
or
ds
jns
cld
and
cmp
xchg
lcall
test
dec
std
gs
push
leave
ja
outsb
or
jns
mov
mov
mov
sbb
jg
xlat
and
add
ja
jb
fucom
add
adc
inc
push
stos
outsb
push
cmp
push
mov
lods
push
cwtl
mov
scas
lret
call
push
mov
adc
aas
sahf
and
and
ljmp
dec
xchg
rorl
addb
movsl
xor
movsb
mov
int
fnstsw
rol
fldl
pusha
dec
aaa
add
mov
push
pop
dec
call
pop
sub
cmp
pop
iret
pop
mov
stc
pop
sbb
pusha
xor
inc
sbb
movsl
inc
sarb
xor
jno
pusha
cwtl
pop
adcb
repz
dec
test
movsl
xchg
ret
mov
add
dec
ds
fcoml
dec
adc
test
rclb
ds
cltd
jp
jo
jno
push
pop
rcll
jno
xchg
repnz
lods
mov
push
sti
adc
sti
and
scas
pop
mov
data16
add
or
or
cmp
repz
test
xor
add
roll
mov
ja
scas
mov
iret
or
add
into
fdivr
sbb
sub
push
hlt
sbb
xchg
mov
adc
jnp
lcall
cmp
les
popa
cmc
dec
lock
outsl
mov
cli
or
gs
aam
dec
imul
mov
pop
popf
xor
shlb
cld
pop
xchg
test
push
arpl
jge
dec
arpl
or
in
sub
insb
gs
jmp
xor
adc
sbb
pop
imul
push
popa
movsl
cld
jbe
and
addl
push
dec
lret
data16
jmp
scas
add
mov
ja
and
push
add
xor
cld
xchg
lods
inc
mov
popf
insb
ja
jp
in
xchg
jns
jno
pcmpeqb
sub
rcr
lods
ds
and
add
ss
mov
sbb
aad
cmp
shr
inc
cmpsl
pushf
or
leave
jno
mov
mov
fwait
repnz
and
push
stos
adc
cli
inc
adc
sbbb
adc
push
pop
loop
hlt
xchg
dec
sub
push
sahf
in
stc
push
push
mov
jne
gs
pop
sub
scas
inc
repz
sub
mov
call
push
sub
jnp
sbb
test
fcmovnb
push
dec
xchg
mov
sbbb
sub
mov
dec
add
es
mov
xor
test
daa
outsb
mov
imul
or
test
mov
lcall
cld
jnp
adc
and
or
dec
adc
stc
inc
int
sub
inc
and
adc
sbb
xor
inc
das
adc
flds
jp
int
scas
push
cltd
mov
mov
ret
jle
xor
enter
mov
sub
clc
iret
out
aad
dec
lahf
pop
orb
les
out
ftst
jle
pop
in
shl
mov
push
xor
call
push
mov
xchg
pusha
push
add
fdivs
mov
sub
push
ret
and
cmp
xchg
sub
pop
out
sbb
jp
jp
or
sbb
repnz
mov
and
decl
xchg
or
fiaddl
pop
jns
mov
dec
mov
mov
das
and
and
mov
jne
stos
mov
repnz
dec
in
imul
xchg
jmp
jo
or
mov
jl
xchg
fs
int
push
mov
dec
dec
dec
pop
mov
pop
vmovddup
mov
xor
cld
out
aaa
adc
mov
pop
xchg
es
sbb
or
inc
mulb
push
ss
fs
push
mov
mov
adc
xorb
insl
enter
int3
add
popf
lods
sbb
pushf
add
lds
les
into
xor
cld
mov
push
cld
jecxz
insl
mov
xor
repnz
sbb
out
push
sbb
out
mov
imul
add
add
mov
int3
bound
divl
sub
stos
or
dec
js
fwait
sub
xchg
mov
adc
cmp
jne
cmp
mov
mov
sub
inc
test
cs
add
xor
gs
sbb
push
fistpll
mov
mov
sbb
and
xchg
push
mov
fadds
sar
push
and
addl
jmp
scas
js
sbb
lods
int
loope
pop
xchg
mov
in
cmpsl
popf
adc
push
lcall
or
cmc
cmpsb
sbb
loopne
stc
push
cltd
xor
inc
mov
xor
das
or
and
lods
cmp
adc
jp
movsl
add
iret
xor
xchg
cmc
push
arpl
loop
pop
dec
hlt
xor
cmc
push
mov
testb
ficomps
xor
pop
adc
pop
icebp
cmpsl
repz
push
stc
fdivrs
outsl
add
and
incb
jg
fiadds
adc
icebp
fxch
and
adc
cmovne
or
mov
fsub
jns
push
outsl
fbld
scas
jno
stc
sub
push
push
adc
test
aaa
mov
inc
jp
jle
gs
cmc
push
sub
cmc
test
fistpll
inc
testl
adc
cmp
std
shlb
xchg
aad
in
pop
adc
repz
rolb
cmp
xchg
push
mov
lods
and
jae
xchg
mov
mov
mov
push
inc
jnp
jnp
and
mov
in
mov
xlat
pop
xor
add
jl
stos
clc
icebp
xor
dec
jmp
mov
outsl
sbb
aas
push
dec
mov
scas
xor
xor
dec
ret
add
jbe
rcll
push
jb
test
xor
out
jmp
adc
pop
push
in
and
es
sbb
push
insb
mov
sub
int
aas
push
ret
sbb
fimull
adc
filds
xchg
inc
pushf
jo
adc
mov
push
pop
xor
shlb
add
es
or
test
aam
mov
rcl
xlat
les
or
aas
mov
test
cmpl
or
jno
inc
lds
idiv
hlt
push
add
mov
cmp
mov
aaa
jne
fldl
add
xchg
push
dec
aam
pop
je
lock
mov
out
jge
pop
sub
and
mov
outsl
outsb
sbb
cmp
test
sub
insl
ret
xorl
pop
add
push
loopne
inc
imul
pop
dec
repz
sbb
adc
adc
or
rcl
cmp
into
push
jmp
loope
mov
inc
int3
call
fwait
std
popa
cmpsl
inc
aam
add
cmp
test
push
mov
outsl
sahf
into
and
jl
xchg
mov
insb
mov
ds
xor
dec
or
xchg
dec
in
or
xor
pop
and
addr16
stc
add
hlt
ja
xchg
lds
ss
stos
jl
ret
jb
xor
dec
mov
aaa
xchg
pop
icebp
mov
lret
push
cwtl
xor
mov
dec
into
pop
and
scas
push
ja
jae
push
xor
xchg
das
mov
mov
pusha
scas
in
or
jle
fs
popa
repnz
mov
sub
pop
shlb
pop
xor
je
jg
cltd
inc
and
push
stc
insl
mov
or
out
call
or
sub
das
adc
inc
cmpsl
imul
jmp
inc
jno
jmp
inc
enter
fsubs
popf
lods
xor
cmp
adc
imul
sbb
cli
mov
mov
pop
sti
mov
pop
xor
or
push
imul
jns
pop
int3
jbe
xchg
push
clc
xchg
addr16
and
jecxz
xchg
sub
xchg
dec
mov
jl
mov
dec
sub
sub
or
int3
jmp
push
xchg
stos
adc
sbb
adc
aam
jbe
or
jg
ds
adc
repnz
xchg
lods
cwtl
jne
pop
jbe
fs
in
adc
imul
insl
imull
xchg
and
fs
cmp
mov
pop
stc
imul
sti
pop
lds
jmp
add
in
fnstcw
push
sbb
dec
push
xlat
or
push
in
jbe
push
dec
mov
mov
adc
or
fbstp
push
data16
sbb
aad
in
xchg
mov
push
mov
les
inc
jge
push
in
popl
out
pop
push
shll
clc
inc
cli
int
xor
cmc
add
divl
mov
push
mov
iret
fcoms
jle
mov
hlt
mov
scas
out
mov
push
mov
mov
cmp
dec
add
cmpsb
add
mov
shl
rcrl
push
lret
gs
xor
aad
stc
cmpsl
add
pop
scas
inc
cmp
movl
sbb
mov
jns
jmp
jnp
movsl
dec
cs
pop
insl
dec
ret
pusha
jb
data16
shll
into
addl
insb
adc
ja
cmp
aad
fdiv
hlt
popa
shlb
or
lods
loopne
adc
mov
xor
imul
addb
shrl
inc
and
mov
lcall
data16
cmp
outsb
inc
lock
popa
ja
adc
fs
and
movsl
dec
sub
test
lret
clc
sub
inc
cld
mov
push
and
push
cmp
add
pop
mov
fldl
lret
dec
rcll
push
mov
mov
sub
xchg
fsubrl
jno
int3
xor
mov
cld
lret
sub
iret
sub
push
push
cmp
dec
mov
inc
xchg
nop
pop
push
sub
push
out
inc
dec
cmp
test
outsl
out
cltd
int
ljmp
nop
cmpsb
mov
inc
loop
rolb
push
js
les
xor
add
cmpl
scas
push
das
push
out
les
push
lea
mov
pop
xor
lret
pop
mov
test
int3
mov
into
inc
mov
fcoml
arpl
incb
mov
jbe
das
fldl
shl
dec
inc
mov
adc
inc
pusha
out
fwait
shll
nop
push
jb
shlb
xchg
inc
outsb
loopne
add
push
jle
pop
imul
mov
pop
lahf
push
pop
xor
lds
jo
cmpsl
xor
pop
nop
jae
jmp
hlt
add
mov
dec
xchg
in
cmp
cmp
ljmp
jne
dec
addr16
pop
xchg
bound
imul
push
aas
xor
add
cmp
cltd
push
push
cmp
arpl
repz
cmpl
xor
scas
push
mov
loope
mov
iret
push
dec
addr16
add
push
les
data16
xchg
sbb
and
jne
jge
adc
adc
xchg
sbb
je
scas
pop
inc
adc
insb
cmpsb
jo
jg
cmpsl
frstor
push
xchg
pop
pop
es
dec
jp
les
ftst
sti
pop
and
xchg
fisubl
xchg
mov
push
in
push
rcll
aam
fidivs
sub
jbe
out
xchg
xchg
mov
sti
push
outsl
push
pop
jo
sub
cmpsl
dec
test
or
sub
push
scas
scas
cli
jl
mov
mov
fidivrl
or
sbb
fcompl
jae
lret
sbb
or
or
lahf
les
in
cmp
inc
dec
sbbb
cltd
fwait
gs
mov
pusha
movsb
adc
not
sti
add
ficoml
mov
push
into
push
inc
lods
xchg
dec
push
mov
fsts
push
sbb
popf
dec
mov
outsl
movsb
mov
fcoml
pop
sub
fidivrl
lea
mov
and
lret
jmp
jns
add
sbb
orl
idivb
or
dec
aad
xor
mov
rolb
inc
sub
rcrb
sub
push
rorb
push
push
das
bound
sti
mov
jmp
or
repz
adc
jns
push
push
mov
mov
push
push
fwait
sahf
fisttpll
xorl
mov
and
inc
mov
jnp
fdivrp
xchg
in
pop
mul
sbb
or
icebp
cmpsl
jae
and
mov
in
out
aam
cmpsl
lret
gs
int3
cmp
xchg
pop
cmc
cli
sbbb
lea
sbb
cmp
stos
fisubrs
inc
lahf
jb
clc
imul
out
mov
or
xchg
fnstsw
mov
movsb
dec
jp
loope
idivl
xlat
cli
outsb
xor
rorl
pop
aam
sub
sarb
leave
aam
push
mov
in
pop
addr16
in
cmp
jp
sbb
xlat
adc
jbe
cwtl
push
cmp
push
ja
dec
push
sahf
mov
inc
in
pushf
nop
sbb
subl
xchg
adc
mov
add
and
xchg
dec
out
mov
insl
lahf
xchg
jno
mov
out
aam
add
mov
dec
imul
jae
loop
xchg
mov
int
jae
fldcw
in
cltd
rol
or
mov
lods
repz
scas
addl
cmp
sbb
cmp
lds
pop
add
sub
xchg
dec
pop
cmp
and
clc
sub
pop
insb
sbb
pushf
loope
lcall
pop
int
daa
sar
adc
jge
mov
fistpll
lock
neg
cmp
dec
aaa
jbe
add
mov
pop
adc
xor
dec
js
xor
pop
jns
or
insb
xor
mov
cmpb
loop
sub
rep
mov
and
ds
ds
or
shrb
push
inc
stc
imul
je
addr16
push
jns
repz
pop
dec
lods
sub
add
scas
lahf
and
sub
repz
jno
fadd
cmpsl
pop
test
push
lahf
loop
in
jl
mov
mov
lock
pop
cld
pop
adc
pop
or
sub
shlb
dec
ds
adc
and
or
out
mov
xchg
inc
dec
sbb
les
adcb
leave
cmp
das
push
and
and
clc
negl
fwait
dec
push
cltd
aam
filds
pop
stos
ss
stos
call
inc
cmp
xchg
sub
cmpsl
dec
jae
repz
inc
lea
mov
scas
shll
xchg
mov
inc
jl
js
mov
popa
sbb
xlat
sub
pop
scas
loop
add
xlat
ds
rcrl
outsl
in
scas
push
scas
dec
icebp
and
lods
inc
lcall
and
call
sub
cli
pusha
fs
test
lods
push
int3
add
gs
and
jne
xor
dec
or
mov
movsb
jae
fmul
and
punpcklbw
mov
repz
rorb
and
xchg
dec
mov
pusha
jns
pop
mov
rcrb
cmp
inc
pop
and
idivl
mov
sbb
push
push
push
out
xor
jnp
sub
mov
sub
in
cmc
xchg
xor
xor
ss
adc
push
or
andb
dec
loope
cwtl
sahf
push
and
sbb
pop
pop
outsl
leave
fistps
repnz
jl
sti
and
adc
xor
mov
and
inc
inc
cwtl
in
cld
mov
pop
mov
xor
push
in
mov
mov
dec
ljmp
mov
jno
sar
movsb
inc
xchg
test
insb
mov
dec
mov
add
ss
jecxz
mov
lahf
cltd
or
and
mov
lock
mov
aad
lock
in
dec
dec
inc
cltd
gs
inc
xchg
adc
jo
lcall
je
mov
xorl
xor
imul
test
xchg
add
mov
mov
mov
or
scas
push
addb
aaa
jmp
sub
inc
aam
add
mov
push
jbe
inc
sub
int3
mov
inc
jg
pop
hlt
jp
mov
cld
dec
cmp
icebp
fidivl
out
fs
out
adc
testl
enter
stos
cmp
sbb
cmc
adc
and
jno
pop
sub
lcall
mov
push
out
mov
arpl
lret
jmp
inc
jg
xchg
sbbl
scas
xchg
jecxz
pop
jecxz
fdiv
xor
ret
in
lock
push
mov
mov
pop
fisttpll
adc
mov
fadd
cmpsl
scas
mov
fildl
ljmp
sahf
je
test
out
cld
inc
rcr
orb
mov
lods
sub
jo
leave
fsts
sti
fisttpl
inc
add
pop
dec
mov
fdivrl
mov
aam
orl
cli
push
dec
mov
and
and
sbb
and
hlt
dec
sti
inc
data16
test
inc
sbb
pop
fs
pop
hlt
mov
xchg
sbb
or
dec
repnz
js
movsb
pop
lahf
loopne
movsb
push
inc
imul
subb
mov
mov
idivl
arpl
xor
push
dec
stc
fcmove
push
sbb
xchg
sarl
sub
cmpsb
out
addl
and
fildll
add
dec
outsb
mov
push
adc
jmp
add
mov
xor
pusha
push
shlb
sbbl
mov
lret
sti
pop
push
push
push
insl
mov
adc
sub
mov
repnz
and
pop
aad
fstpl
lret
xor
xchg
xchg
ja
fwait
add
clc
pop
adc
pop
lret
movsl
mov
sbbb
inc
fldenv
push
mov
xor
aas
orl
mov
fidivrl
fs
and
add
pop
mov
inc
fdivrl
outsb
test
ficoms
std
nop
mov
or
pop
inc
xor
repz
or
ljmp
push
stos
lcall
rcr
movsb
sub
lret
sti
push
mov
roll
repz
repnz
in
cmp
sub
push
adc
cmc
lods
push
pop
adc
out
adc
xchg
pushf
cmp
inc
pusha
sbb
pop
ret
out
adc
mov
pop
lods
cmp
arpl
lods
xor
sub
jb
push
and
shl
loopne
add
rcrb
push
ret
addr16
adc
jb
insl
loope
sub
les
and
adc
nop
call
or
xchg
insl
cwtl
cmp
fdivrl
ss
lds
lahf
ljmp
imul
mov
test
sub
jne
inc
push
jmp
push
sahf
mov
addr16
test
ja
imul
mov
xlat
outsb
int3
sub
mov
or
pop
xchg
fisubl
mov
lock
jge
inc
lcall
aad
xor
call
inc
dec
sbb
and
fiaddl
loope
shrl
mov
push
pushf
fisubrl
ffree
pop
scas
adc
or
or
inc
sbb
out
leave
xchg
dec
sub
cmpb
out
mov
sbb
cli
sbb
imul
es
aam
pop
jbe
pop
xor
ret
adc
popl
cld
sbbl
adc
push
mov
push
cltd
aam
push
fld1
bnd
aad
test
xor
ss
aaa
pop
lods
insb
inc
lret
cwtl
fscale
or
mov
inc
scas
cli
push
adc
mov
fisubrs
jno
pop
mov
imulb
push
jecxz
inc
sti
adc
dec
inc
add
dec
aas
jo
lods
xlat
stos
add
add
movsb
sub
cmpsl
jmp
jmp
cwtl
sbb
ja
pop
adc
and
cmpb
adc
aas
mov
sahf
dec
xchg
aaa
hlt
adc
or
scas
loop
test
imul
ss
int3
add
ret
mov
xchg
bound
or
idiv
mov
cmp
test
or
cmp
xchg
int3
and
add
mov
gs
rorl
push
jns
div
js
sbb
aam
xchg
xor
dec
es
pusha
mov
jle
fstpl
mov
mov
jno
sbb
push
ljmp
lock
jb
data16
addl
in
sti
cmp
xchg
std
pushf
xor
adcl
adc
lods
fsubs
cmp
push
es
mov
aas
cmpsb
sub
jmp
inc
icebp
jmp
mov
roll
and
les
call
pop
shr
mov
movsb
pushf
mov
dec
ljmp
out
out
test
fwait
dec
subl
jmp
rcrb
mov
arpl
ljmp
loop
in
popa
xchg
push
shrb
push
cs
lcall
in
in
test
sub
and
mov
dec
adc
mov
ret
cmp
addr16
test
repz
cmp
scas
mov
outsl
imul
push
sbb
out
aam
jmp
pop
sbb
fcmovne
or
inc
es
add
data16
dec
ss
add
scas
mov
push
aas
dec
xor
stc
popf
stc
adc
icebp
in
imul
cli
daa
shll
and
rcrb
mov
ja
scas
mov
jns
js
lahf
xchg
xchg
jg
shll
sub
and
or
aam
mov
lods
rclb
or
xchg
sbb
lea
imul
aaa
mov
shrb
popf
addr16
jno
ret
mov
in
adc
pop
jge
in
sub
mov
mov
imul
out
fdivrp
jb
push
lret
cmp
fwait
inc
stc
leave
mov
push
pop
jns
jg
std
imul
movsb
cmp
and
mov
mov
addr16
lods
stos
je
test
dec
pusha
xor
loop
aaa
pusha
dec
mov
fcomip
nop
dec
enter
jp
jbe
mov
add
out
cmpsl
loopne
insl
movnti
test
push
loop
pushf
xchg
dec
xchg
lret
shl
push
shll
out
scas
dec
pop
push
xor
scas
and
mov
stos
jnp
jnp
lcall
pusha
or
rep
and
xchg
push
icebp
lea
jp
mov
mov
call
add
ljmp
loopne
repz
push
lret
fdivrs
lock
dec
cmpsl
mov
lods
int3
push
sbbb
arpl
pop
imul
std
loopne
mov
push
insl
pop
push
mov
pop
inc
push
dec
fildl
movsb
xor
mov
add
ror
mov
mov
into
xchg
mov
clc
adc
fistps
imulb
jge
scas
into
insl
mov
lds
adc
push
sbb
movsb
arpl
test
arpl
add
push
pop
mov
mov
jge
aaa
cmp
mov
pop
xor
fisttpl
cmp
lods
dec
dec
push
jmp
aaa
dec
scas
scas
and
mov
insb
ret
xlat
jp
cmp
sbb
or
in
xchg
mov
jecxz
andl
dec
mov
aas
mov
or
popf
ficomps
les
adc
push
dec
or
rclb
test
popa
and
adc
decb
jge
sub
pop
cli
dec
aas
adc
cltd
sub
cmp
sub
lcall
cli
nop
lods
cli
cmpsl
cmc
pop
aaa
mov
notb
lods
adc
mov
aam
sahf
inc
inc
dec
sahf
push
pop
int
jae
xbegin
xor
mov
cmc
or
pusha
sub
clc
insb
xlat
lods
popa
stc
adc
sar
cmp
dec
aam
pop
add
stos
lds
xor
fdivrs
mov
outsb
and
push
add
push
and
ljmp
inc
leave
xchg
sbb
incl
xchg
test
lret
notb
loop
lret
imul
rcrb
pop
and
loopne
xchg
fidivs
call
out
popf
cmp
xchg
data16
mov
xor
arpl
jb
sbb
bound
movl
sahf
dec
sbb
loope
lods
dec
imul
xor
rcrl
clc
jg
and
imul
mov
pusha
fs
pusha
insl
or
fwait
dec
dec
and
sbb
inc
in
mov
in
mov
cmpsb
and
inc
pop
rcrb
jg
arpl
subl
mulb
and
test
rcl
jo
iret
sub
punpckhdq
call
jns
ret
dec
xchg
pop
data16
add
jge
roll
aad
jle
test
adc
jmp
ret
and
in
mov
mov
dec
lock
hlt
pop
out
mov
mov
daa
cmc
and
mov
jo
shl
cmp
jecxz
mov
je
jae
test
out
push
fnstenv
jb
push
in
lret
jo
or
mov
out
push
jecxz
test
sub
mov
dec
lds
rclb
iret
fs
xlat
pop
mov
das
add
mov
ret
or
stos
jbe
xor
outsl
ficomps
fs
out
shrl
test
xlat
xor
jo
in
xor
inc
jns
add
sti
in
clc
xchg
cmp
xor
fsts
xor
aam
push
sbb
add
jle
movsb
mov
xlat
outsl
xchg
adc
lock
pop
sti
sbb
std
js
addr16
pop
into
cltd
jl
in
mov
icebp
dec
mov
std
sbb
sarb
jge
pop
mov
mov
pop
adc
sub
jbe
xchg
rcll
push
outsb
add
lcall
jle
dec
shrl
mov
loope
mov
arpl
fidivs
out
ja
prefetch
jecxz
adc
mov
adcb
push
jl
sbb
xor
aam
push
dec
xchg
lock
fs
aaa
cmp
cmpsb
sti
daa
sub
repnz
mov
stos
jecxz
xchg
mov
sub
pop
std
shlb
inc
sahf
cmp
mov
mov
xchg
sahf
pop
shr
les
mov
pop
and
mov
sub
add
roll
jno
hlt
sbb
xchg
jbe
xchg
les
cmpsb
imul
arpl
inc
inc
dec
imul
sbb
xchg
fiaddl
and
jmp
push
insl
daa
xchg
fdivs
sub
jns
mov
nop
mov
xchg
data16
outsb
adc
call
or
lcall
popa
inc
dec
xorb
cli
in
and
mov
call
mov
mov
mov
xor
or
cmp
rorl
mov
inc
jle
sets
and
scas
fstl
push
sub
test
jl
ret
lods
das
pushl
sbb
outsl
out
mov
adc
test
inc
in
cmp
cmp
lahf
push
pop
fistl
or
jnp
rcrl
pop
dec
mov
cmp
sub
sub
out
push
mov
or
cmp
jl
cmp
push
inc
lock
lods
jne
into
mov
sbb
outsb
jno
cmp
dec
lea
fstps
rcrl
mov
sbb
xchg
aad
jbe
sahf
cmc
jle
adc
inc
nop
int
cmp
cmp
std
xlat
push
out
imul
mov
jmp
mov
fdivrp
hlt
jge
xlat
cmp
cmp
adc
xchg
jno
mov
inc
xchg
clc
cmc
ss
int
xor
inc
arpl
pop
sahf
jmp
fiaddl
add
insb
push
test
sbb
cmc
stos
les
lods
mov
jge
cmp
pop
js
cmp
adc
call
pop
sub
in
je
dec
lret
fidivrl
es
cmp
cwtl
xchg
mov
lods
inc
sbb
pop
in
out
int
lock
arpl
mov
fldl
bound
xchg
and
fistpl
clc
and
hlt
sub
pop
xlat
in
dec
mov
mov
push
sbb
adc
cmp
xor
movsb
iret
pop
xchg
inc
into
ljmp
aad
dec
adc
pop
cmp
xor
inc
aad
js
std
jnp
adc
and
xchg
inc
dec
int3
or
inc
or
mov
stc
stc
sbb
movsb
je
ds
xlat
inc
pop
mov
insb
adc
push
pushf
or
xchg
push
inc
adc
aam
mov
in
loope
gs
inc
push
test
test
and
push
je
call
fdivrs
inc
mov
pop
mov
and
push
cmpsb
push
and
test
js
loop
nop
jge
xor
dec
push
dec
pushf
cli
xchg
push
rol
mov
sbb
adc
scas
stos
add
sub
push
and
jb
icebp
bound
enter
jnp
incl
mov
cmpsb
into
into
mov
dec
insb
xchg
out
fwait
js
test
out
sbb
adc
fwait
jae
in
pop
dec
inc
outsl
jno
mov
xchg
sar
addl
imul
xor
mov
repz
shrl
xor
mov
in
out
movsl
jl
hlt
dec
out
cld
repnz
fcoms
pop
loop
or
add
xchg
sbb
sbb
jno
add
push
cmpsl
add
xchg
adc
scas
adc
mov
enter
popa
fcomi
inc
lcall
mov
xchg
add
incb
push
adc
mov
mov
add
add
xchg
jmp
mov
mov
imul
pop
movsl
cmp
push
jo
xchg
mov
jmp
cmc
inc
jb
adc
sbb
sti
fmulp
lods
test
lcall
cmp
mov
adcb
es
xchg
push
mov
roll
adc
popf
int3
and
adc
jo
in
dec
and
mov
mov
loope
cwtl
test
call
bound
imul
add
mov
mov
jns
push
jmp
pop
sarl
push
bound
testb
pushf
dec
pop
hlt
negb
adc
int
jg
jg
outsb
dec
cwtl
mov
out
sub
add
out
pop
dec
xor
or
push
stos
in
es
je
fmull
out
pop
push
push
test
xor
scas
push
adc
and
dec
fdivrl
pop
and
sub
add
mov
data16
mov
sub
in
sbb
enter
jo
pushf
in
push
lahf
push
push
xchg
sub
aas
popf
arpl
addb
push
addb
push
insb
in
sbb
je
xchg
arpl
leave
aas
hlt
nop
aas
jl
xor
shll
mov
adcb
imul
in
and
or
xchg
pop
mov
rclb
push
jmp
push
mov
ja
imul
mov
mov
nop
cmp
mov
cmp
mov
hlt
jp
dec
or
fmull
stos
js
or
jns
aaa
mov
push
jl
mov
sahf
out
adc
aad
in
pop
xchg
mov
xor
rclb
xor
dec
out
mov
xor
sub
int3
fnstsw
pop
push
in
aad
add
fs
push
cltd
ds
cmp
stc
dec
mov
cwtl
lods
jmp
xlat
inc
mov
xor
popf
dec
mov
sbb
jmp
cmp
cli
mov
push
xchg
loopne
jle
inc
cmc
adc
sub
je
push
inc
rorl
rcrb
adc
pop
scas
cmp
pusha
rcll
dec
jnp
icebp
inc
and
clc
adc
insl
add
shll
loope
or
cli
jno
dec
cli
jnp
in
movsl
jecxz
dec
pop
cmc
add
stos
mov
push
mov
sbb
mov
add
das
sbb
cld
out
cmc
lret
xchg
adc
or
test
ret
sbb
push
rorl
jmp
ljmp
cmp
notl
daa
xchg
test
loopne
cltd
push
xchg
xor
out
loopne
outsb
das
xlat
mov
pop
fucomip
out
int
out
pop
mov
fdivl
inc
add
fdivr
rcrb
pop
cmp
push
sbb
pop
aam
ret
xchg
cmp
in
lret
jae
add
xchg
mov
hlt
out
xor
inc
pop
push
and
es
outsl
dec
movsb
xchg
movsl
xchg
pop
mov
lcall
pop
push
sti
mov
inc
cmp
popf
cmpsl
sub
jbe
outsl
ret
dec
jmp
adc
in
push
mov
and
shrl
adc
insb
adc
xchg
mov
and
cli
xor
stc
nop
pop
popf
orb
push
test
jns
and
sub
push
or
shrl
insb
pusha
inc
sub
pop
and
fidivrl
lock
dec
data16
dec
fidivrs
or
adc
stos
or
or
mov
aaa
sahf
lock
jbe
push
in
aad
mov
inc
roll
fnstenv
andb
xlat
mov
pop
mov
xlat
pop
and
xor
push
jb
xor
sbb
jne,pt
cli
test
lds
dec
push
or
pop
add
mov
addb
cwtl
dec
sbb
imul
mov
xchg
mov
in
sbb
in
xchg
jmp
pop
dec
adc
or
and
pop
inc
popa
cmp
movsl
mov
scas
test
ret
xchg
push
repz
sub
inc
sub
scas
loopne
in
inc
mov
sbb
push
push
gs
xor
sbb
adc
popa
stos
mov
sbb
or
sbb
add
sub
loope
jp
xor
pop
xchg
pop
ret
xchg
xor
in
fdiv
cmp
jmp
or
stos
call
imul
fdivrs
in
xchg
pushf
imul
ja
sahf
jg
jnp
or
or
xchg
sub
test
dec
mov
xchg
pop
insb
mov
mov
xchg
loope
hlt
js
add
stos
push
pushf
jnp
pop
in
adc
push
cmp
jo,pt
orl
xchg
in
je
insl
cmp
mov
pop
js
xchg
sub
daa
fwait
js
mov
inc
push
jmp
jge
mov
loopne
ret
cmp
lods
lods
ljmp
setbe
sub
ljmp
loope
ja
ffree
xchg
xor
cmp
or
inc
daa
les
sbb
and
ljmp
or
lcall
loopne
push
fnstenv
shlb
out
aam
std
xor
cli
sub
inc
and
xor
loope
inc
mov
std
ss
xor
int
pop
rcl
lret
mov
subb
popf
outsb
frstor
dec
int3
xchg
je
scas
aad
mov
or
and
movb
cmpsl
push
out
test
rolb
das
nop
pushf
lahf
cmp
push
jge
adc
rorb
cmp
stc
mov
adc
mov
xchg
pusha
test
or
ja
dec
jo
adc
jl
xchg
sbb
inc
in
subl
xchg
cltd
lock
dec
movsb
es
xchg
popf
adc
pop
mov
mov
out
adc
add
xor
xor
cld
add
out
icebp
and
push
insb
addr16
add
cmc
in
dec
and
lods
add
inc
jne
xchg
add
adc
pusha
jge
xor
mov
adc
popf
add
pop
movsl
int3
xor
sbb
pop
push
xor
xor
inc
cli
mov
inc
addr16
inc
mov
mov
arpl
inc
inc
fs
outsb
pop
addb
mov
pop
fisubrl
xchg
sub
jae
jbe
cmpb
adc
jmp
les
rcr
mov
out
inc
cmp
add
fwait
ja
aaa
movsb
mov
sub
daa
inc
aas
cmpsb
lret
aaa
mov
cmc
iret
sub
push
sbb
inc
cmp
fldl
dec
cs
mov
je
sti
data16
les
xchg
out
test
sbb
loope
and
xchg
xchg
notb
xor
dec
ds
mov
xor
sarl
sbb
sub
loop
push
cmc
lret
add
xor
test
push
cmc
push
pop
insb
xor
jmp
or
insl
dec
inc
xchg
xor
or
dec
mov
sub
nop
mov
mov
fdivrl
push
filds
cmp
adc
mov
sbb
jle
push
ficomps
ljmp
mov
loope
sahf
dec
out
orl
cmp
arpl
daa
cmpsl
sbb
aas
xor
jb
movl
test
jbe
ret
pop
sub
sbb
fsubrp
fwait
cmp
movsl
add
adc
ret
decb
fdivp
mov
mov
fldl
jecxz
push
mov
inc
xchg
or
or
dec
jno
std
xchg
arpl
inc
popf
sub
jl
or
add
cmp
push
rolb
xchg
mov
stc
and
adc
out
insb
and
jl
imul
je
std
stos
and
inc
in
push
out
sub
add
inc
sub
jecxz
nop
paddq
lahf
ficompl
cli
stc
sbb
es
push
mov
push
lods
incb
test
repnz
out
rcll
pop
jbe
outsb
xchg
lcall
daa
add
xchg
lahf
stos
xchg
and
xchg
ds
outsl
mov
ret
xchg
push
xchg
fisttpl
push
call
inc
scas
in
xchg
adc
mov
aaa
mov
mov
inc
cmp
dec
add
pop
jge
xchg
andl
inc
lock
and
inc
nop
mov
jg
rolb
sbb
loopne
div
lods
jmp
cmc
dec
lret
dec
pop
push
xchg
and
adc
pop
in
pushf
ficompl
cli
cltd
xor
sbb
sub
mov
jae
inc
test
js
add
xchg
arpl
mov
lods
enter
sbb
test
xor
shrb
std
int3
in
lea
arpl
cli
pop
scas
mov
ficoms
dec
lahf
mov
xchg
in
leave
adc
push
fdivs
dec
ret
je
mov
mov
inc
pushf
dec
loopne
xchg
mov
inc
ss
icebp
or
out
push
and
push
xor
imull
push
mov
adc
or
int
jg
movb
call
clc
int
pushf
mov
jg
pop
clc
pop
lret
aam
push
mov
popa
fisttps
lds
pop
dec
fcomps
ss
pop
std
mov
addr16
out
xlat
inc
dec
xor
popa
push
adc
push
jo
sbb
pushf
imul
icebp
pusha
popf
test
mov
or
les
aad
pop
push
mov
jbe
cmp
pop
push
inc
jns
adc
mov
mov
enter
add
mov
inc
into
in
jno
push
pop
fcoms
mov
mov
mov
mov
notb
out
hlt
int3
push
mov
addr16
cmpsb
mov
pop
and
mov
inc
sti
push
add
inc
fsubl
jns
lret
out
sbb
inc
sbb
add
in
sub
mov
cwtl
lahf
and
stos
inc
pop
and
inc
test
dec
out
adc
stc
idiv
add
pushf
push
pop
aaa
cmp
xchg
jg
push
dec
jns
xor
pop
jnp
paddsb
or
leave
repnz
cmc
jns
xchg
jmp
add
in
cmpsb
mov
cmpsl
inc
mov
cmp
aaa
mov
sbb
int
jecxz
mov
in
bswap
ret
push
outsb
stos
mov
int
imul
in
popa
pop
pusha
idiv
mov
addb
movsl
mov
cmpsl
sbbb
call
test
imul
jae
in
lods
orb
gs
pop
popf
xchg
push
sarl
push
loope
push
jns
add
jno
mov
out
mov
data16
cmp
inc
test
pop
sbb
adc
xchg
ror
lods
push
pop
and
jg
iret
xlat
xchg
sub
lds
bound
scas
xchg
dec
sbb
icebp
hlt
push
jle
push
pop
fisttps
scas
add
mov
call
and
icebp
xchg
div
pop
test
notb
jp
jno
mov
popa
add
mov
imul
xor
jecxz
adc
mov
shlb
xchg
cld
aad
pop
sbb
mov
push
push
mov
jle
mov
and
insb
out
nop
mov
push
xor
mov
jae
jmp
xchg
popa
in
inc
push
push
int
jne
call
shr
iret
or
and
sti
pushf
or
dec
out
fsubp
add
mov
pop
aad
imul
and
sub
push
dec
jecxz
fs
add
mov
mov
pop
and
mov
xchg
mov
loopne
cli
push
outsb
xor
cmpsb
sarl
fdivl
cs
adc
iret
cmp
sub
xor
leave
loop
push
xchg
lock
insl
ljmp
je
fs
fsub
sub
cmp
popf
mov
add
push
mov
ljmp
sti
jg
das
cmp
das
leave
sahf
pusha
adc
cwtl
pop
inc
into
lret
popa
jle
jge
adc
inc
cwtl
int
inc
xor
xchg
testl
negb
jl
push
jns
leave
xchg
testb
inc
rolb
andl
mov
sti
aas
cld
pop
test
mov
popa
mov
inc
jae
divb
fimuls
in
in
les
shrl
iret
jb
jge
mov
mov
out
icebp
xlat
leave
pop
adc
scas
push
in
or
shl
mov
mov
int
mov
out
rorb
push
cld
scas
sub
leave
lods
and
dec
mov
iret
std
sub
xor
ja
mov
mov
pop
mov
dec
subl
testb
mov
mov
inc
push
test
jo
hlt
jmp
pop
xchg
ja
lea
xchg
lock
xor
sub
xchg
hlt
test
cmp
pop
xchg
nop
test
enter
add
aas
cld
stos
iret
mov
ss
pop
or
ds
repnz
mov
mov
inc
mov
lret
cltd
inc
daa
sub
cld
lret
mov
test
pop
in
fs
loop
and
incb
fidivs
adc
addr16
mov
xchg
aad
xchg
mov
or
mov
aas
pop
mull
add
sbb
xor
call
xchg
inc
sbb
shl
mov
ljmp
enter
mov
push
mov
insl
test
mov
iret
push
xchg
popf
out
rorl
and
jmp
nop
mov
fisubs
out
xchg
xor
jle
insl
xchg
inc
and
mov
cli
lahf
xchg
push
sbb
sbb
cmpsb
or
jle
ss
rcl
xchg
push
insb
rorb
enter
fdivl
sbb
imul
scas
pop
mov
lret
dec
xor
sub
mov
inc
imul
and
fidivrl
mov
loop
adc
fmull
loope
pop
or
xor
mov
out
gs
push
loop
mov
iret
nop
jbe
stos
lret
loope
insb
mov
int
outsb
call
add
mov
lods
inc
mov
in
sahf
idiv
jno
inc
pop
repz
lcall
push
rolb
or
and
mov
dec
nop
adc
fimuls
push
arpl
aad
mov
adc
pop
addr16
js
sub
iret
adc
nop
daa
jmp
shl
cmp
out
mov
loope
inc
mov
dec
pop
js
lock
int3
ds
out
add
and
stos
rcr
mov
lds
adc
psrld
dec
adc
mov
pop
push
xchg
nop
insl
jle
lcall
push
xor
bound
jne
dec
jbe
mov
fwait
pop
imul
jecxz
hlt
sub
xor
xchg
xor
adc
and
ret
bnd
cltd
mov
xor
sub
popf
lds
mov
mov
xor
nop
mov
mov
icebp
cmp
cmp
arpl
loop
mov
sub
mov
call
cmp
je
popa
cmc
sub
repnz
push
mov
xchg
fcmovbe
push
lods
ret
enter
ret
popa
fdivs
xchg
aas
insb
lcall
scas
pop
scas
sub
rol
mov
fmuls
xor
push
add
mov
xor
pop
xchg
inc
jo
fimull
fucomi
sbb
insl
scas
sbb
cmp
xchg
cs
or
fwait
mov
pop
and
fsub
sbb
aaa
pop
ss
unpckhps
inc
in
loopne
faddp
mov
lahf
ret
adcl
imul
lock
lds
roll
push
inc
test
pop
and
jg
popf
insb
dec
stos
leave
and
lea
aad
mov
stc
out
xor
push
mov
xor
bound
sbb
sub
dec
outsb
jbe
sbb
fwait
outsl
adc
jecxz
adc
pop
mov
repnz
aas
adc
ds
jnp
out
scas
lods
pop
sbb
xchg
inc
push
mov
and
movb
xorb
in
and
enter
daa
out
ficomps
call
and
pop
push
popa
int3
ror
xchg
insl
mov
sbb
test
insl
sub
mov
mov
add
xlat
jp
shl
rcrl
test
pop
xor
xchg
decl
add
sub
push
out
cmp
in
xchg
or
and
rorb
fcoms
push
jle
push
mov
rorb
mov
popf
icebp
mov
subl
dec
clc
xor
xchg
sbb
add
jnp
or
adc
lods
or
hlt
shll
jae
xchg
sbb
or
daa
in
sbb
fidivs
inc
push
jmp
pusha
mov
lock
or
mov
xchg
sub
mov
and
and
sbb
movsb
stc
cmc
jle
xchg
rorl
inc
inc
xor
cmpsl
jle
movsl
sub
dec
sbb
test
inc
je
outsb
xlat
jmp
xchg
pusha
fucomip
inc
imul
pop
jno
cli
xor
mov
call
add
jecxz
or
out
mov
mov
sub
push
adc
or
cmp
sub
ret
rcrl
lock
test
jne
inc
js
xor
gs
les
imul
sub
hlt
inc
add
ret
es
xchg
jae
out
sarl
pop
xchg
movsl
cmp
jle
inc
pop
or
pop
int
sahf
dec
fcomi
xor
adc
shrl
jnp
test
push
fistl
sahf
icebp
fmull
das
gs
pusha
fdivrl
push
xor
pop
and
dec
sbb
xchg
xor
xchg
push
pop
mov
mov
dec
mov
cli
xor
add
out
adc
xlat
cld
or
cltd
push
pop
idiv
and
inc
mov
movsl
repz
sub
dec
sahf
test
xor
cmp
cwtl
lahf
xor
lret
push
pop
mov
xor
jmp
sbb
out
fst
push
push
sub
jg
push
mov
outsb
push
mov
idivl
lcall
and
jns
dec
push
mov
mov
outsb
dec
mov
push
dec
in
xor
stc
jo
fbstp
sbb
inc
cli
fidivl
inc
sbb
hlt
test
inc
vphsubwd
roll
pop
popa
testl
clc
pop
xchg
cmpsl
mov
fiadds
lock
popf
mov
mov
scas
lods
and
testb
mov
mov
mov
into
sub
stos
movsb
mov
sahf
ljmp
lock
lea
xor
dec
das
nop
xchg
sti
out
into
fldl
fwait
mov
out
xchg
imulb
test
and
aaa
sbb
dec
test
xor
fidivrl
cld
mulb
loope
mov
loope
fs
std
lea
add
xor
mov
mov
adc
dec
cmp
jnp
ret
aam
sub
daa
std
pop
popf
aad
sbb
lds
or
jle
es
shl
or
pop
scas
mov
stc
adc
es
movhps
adc
cmpsb
out
rcll
popf
movsl
adc
push
cs
out
push
adc
lds
mov
mov
rol
push
daa
in
test
cmp
addl
add
jmp
arpl
andl
jge
sbb
cmp
push
repnz
jbe
jno
mov
ret
pop
push
mov
dec
mov
cvtpi2ps
dec
outsl
lcall
push
jne
movsl
out
fidivs
jns
dec
stos
sub
fmull
xchg
ficoms
notl
push
pop
sub
fsubrl
pop
xor
shr
or
idivl
dec
cmp
lahf
adc
out
int3
xchg
iret
ret
fs
adc
adc
or
cltd
leave
lds
push
movsb
lret
data16
inc
popf
data16
jmp
out
mov
xchg
push
mov
shrl
inc
xor
gs
das
insl
mov
pop
add
in
xchg
or
jmp
xlat
notl
jp
add
mov
xor
fs
xchg
test
jbe
movsb
mov
mov
add
cmpsl
mov
ljmp
adc
mov
jbe
stos
sub
push
lock
sbb
scas
out
roll
pop
testb
movsb
das
push
enter
ficompl
cmp
pop
adc
lods
sub
test
xchg
dec
sti
or
lock
jns
shr
push
out
add
lds
test
sub
inc
adc
frstor
pop
pop
mov
cmpsb
ror
mov
mov
cltd
dec
aaa
popf
sbb
test
pop
jns
daa
dec
xchg
mov
xchg
sti
mov
out
idivb
mov
int3
loope
and
add
je
cmp
stos
shrb
sub
stos
sahf
mov
cmp
fs
popa
inc
jp
bound
jl
call
sbb
lods
cmp
out
xorb
dec
pop
cwtl
mov
stos
jno
mov
test
sbb
sub
push
cs
out
icebp
icebp
xchg
cmp
or
movsl
test
add
push
or
xor
jecxz
or
or
into
inc
mov
push
sub
mov
out
cmp
pop
mov
cmp
mov
or
icebp
lcall
mov
adc
mov
popa
dec
xchg
xor
xor
sbb
add
loopne
pop
lret
mov
pop
pusha
divb
inc
add
in
add
enter
jmp
add
xor
popa
enter
sbb
ljmp
mov
mov
out
pop
lds
mov
test
jb
es
movsb
push
or
sbb
xchg
cmpsb
int3
adc
lods
and
test
or
push
cltd
inc
dec
out
adc
mov
nop
loope
outsb
out
call
inc
mov
or
xchg
mov
inc
cmc
mov
nop
inc
mov
jbe
faddl
mov
jmp
lret
gs
aas
xchg
test
push
in
ja
ss
xchg
scas
fstps
pop
sti
inc
dec
jmp
fcoms
in
loopne
xchg
pop
jmp
movb
pushf
and
jbe
jecxz
jns
out
loope
insb
pop
loop
aad
xchg
ds
insb
lret
lods
xor
iret
jns
ss
adc
enter
cmp
lea
pop
in
enter
sub
fisubl
sbb
cld
cld
dec
inc
xor
inc
jbe
add
test
xchg
lea
mov
adc
and
pop
adc
mov
aaa
std
mov
jno
inc
and
cld
sbb
mov
scas
inc
addr16
add
jl
or
out
popf
mov
int
adc
icebp
push
xlat
cmp
dec
push
or
les
mov
repz
add
mov
or
jae
mov
push
outsb
pusha
aaa
or
add
cmp
fldcw
dec
add
cld
cmp
loopne
popf
mov
xchg
cmp
lea
jno
shlb
inc
and
repz
inc
jg
add
push
js
mov
fildll
cmp
lcall
add
inc
lock
jnp
mov
out
xor
jmp
push
pusha
push
xchg
ds
pop
jb
enter
xchg
pop
adc
cmp
jbe
mov
enter
cli
cltd
push
int
scas
adc
cmpsb
xor
les
jp
in
mov
scas
sub
mov
rcrb
jnp
out
or
sbb
scas
xor
sbb
shlb
mov
sbb
jo
inc
cwtl
outsb
addr16
imul
subl
ds
jns
mov
or
subl
inc
cmpsl
fs
loop
je
pushf
out
dec
imull
mov
aad
adc
jno
fs
cltd
mov
and
lods
inc
out
xchg
fadds
xchg
out
fsubl
mov
dec
inc
mov
loopne
mov
fcomip
icebp
xor
ja
mov
xchg
adc
inc
out
push
add
cltd
mov
into
dec
int
xchg
fstpt
out
cli
mov
aad
test
cmc
inc
push
inc
imul
and
add
push
lods
mov
sbb
mov
dec
mov
mov
push
js
sbb
inc
xlat
pop
ljmp
push
in
mov
imul
cmp
cltd
mov
mov
push
hlt
or
mov
mov
mov
mov
jnp
xchg
rorb
and
scas
sub
in
inc
leave
mov
push
pop
sbb
popl
xchg
fmull
push
outsb
pusha
std
mov
sbb
rclb
clc
dec
inc
mov
mov
push
gs
cmp
lcall
sbb
sub
mov
arpl
or
shrl
push
bound
fildll
mov
shll
inc
push
cwtl
jle
jno
pop
pop
fdivp
je
push
fistpll
arpl
dec
jecxz
mov
mov
xchg
shlb
test
cli
inc
insl
fwait
in
sbb
ret
pop
add
xchg
pop
cmp
mov
loopne
pop
shl
xchg
adc
scas
or
pop
xor
rclb
lock
inc
push
sahf
sbb
push
sahf
outsb
insl
jae
sub
test
push
jg
sub
movsb
push
xor
or
cld
into
pop
pop
cld
ja
das
pop
jge
std
movsl
lock
inc
repnz
mov
pop
clc
push
push
mull
sub
mov
cmp
dec
adc
push
mov
out
cmc
jbe
pop
dec
push
sub
jb
or
mov
cmp
xor
fs
jnp
cli
pop
pop
jns
and
mov
and
mov
imul
insb
sbb
add
frstor
mov
in
push
and
ja
shll
mov
or
fstpl
hlt
xchg
mov
hlt
cmp
xchg
testl
dec
jecxz
imul
mov
out
test
push
xchg
inc
shll
sub
cmpsb
scas
stos
pop
inc
or
lods
and
cmp
arpl
pushf
ds
or
cmp
mov
cmp
sub
adc
sarl
adc
push
mov
jg
scas
jle
adc
mov
insb
cmp
push
bound
add
and
xchg
shll
adc
call
mov
cmp
push
push
push
push
insl
loope
jg
mov
fsts
shll
push
outsb
rcrl
jae
xchg
push
jnp
shlb
sbb
mov
aaa
xchg
shlb
iret
test
ret
adc
or
or
jp
arpl
push
push
int
cmc
pop
mov
push
lcall
je
jbe
popl
mov
mov
outsb
push
ret
pop
jmp
fstpl
arpl
insb
lods
add
adc
cltd
pop
add
ljmp
leave
test
dec
pushl
sbb
push
dec
cmp
pop
aas
pop
lcall
jb
pop
ja
rclb
imul
ja
or
insb
cmp
mov
and
outsb
mov
cmp
daa
adc
jae
rolb
pop
mov
adc
je
jle
scas
test
mov
mov
pop
xchg
in
dec
imul
stos
out
js
dec
popf
dec
sub
inc
in
push
pop
in
mov
out
stos
out
xchg
cld
clc
in
inc
test
push
addb
mov
or
adc
or
leave
push
cmp
sbb
incb
pop
dec
mov
cli
xchg
in
cmp
imul
or
adc
imul
and
hlt
pusha
push
repz
inc
push
sub
cmc
mov
dec
xor
daa
and
add
repnz
rcll
and
ficoml
popa
xor
shl
adc
pop
ljmp
xor
insl
hlt
adc
js
cwtl
cmpsb
cmp
jnp
and
fistpl
imulb
addr16
pop
repz
cmpsl
push
add
xchg
hlt
dec
jbe
fsubrl
stos
test
jae
cmpsl
lret
shrl
ja
push
loopne
jg
call
push
mov
test
out
sub
ja
add
mov
lea
imul
and
arpl
std
and
jo
test
mov
hlt
shlb
int
adc
and
or
pop
scas
xor
clc
bswap
mov
cmp
or
sub
dec
aad
mov
cwtl
cwtl
jns
inc
adc
inc
out
jnp
popf
cmp
inc
or
cmp
es
pop
add
pop
ss
imul
adc
ja
cmp
stc
aad
ret
aam
or
bound
or
mov
scas
jle
test
xchg
out
iret
xor
lcall
xlat
pop
mov
dec
mov
sbb
bound
call
dec
cmp
xor
stc
pop
scas
iret
sbb
test
and
dec
loope
pusha
or
std
out
push
jmp
pop
in
test
pop
stos
lcall
pop
push
pop
jmp
rcll
push
xchg
ss
pop
mov
pop
mov
cs
xchg
push
add
and
shrb
pop
hlt
pop
xor
clc
fldl
or
dec
push
lahf
mov
inc
pop
fadd
mov
push
lock
xor
mov
pop
jo
lret
fldenv
pushf
sbb
and
xchg
jb
inc
mov
fidivrl
add
out
sub
insl
push
aas
fwait
lahf
clc
test
pushf
shr
cmc
mov
fbld
mov
jge
in
push
and
sahf
aad
es
xchg
popa
stc
ret
int3
push
aas
cmc
pop
xor
repnz
test
inc
push
add
jle
rorl
sbbl
mov
loope
ljmp
or
pop
lahf
mov
xor
inc
sbb
pop
mov
gs
ja
cltd
mov
push
push
fidivrl
testl
push
data16
jg
sub
pop
cwtl
mov
daa
mov
das
sbb
sbb
fs
push
out
test
repnz
psubsw
lret
pop
popa
fwait
sub
test
sub
ss
aas
dec
mov
ret
push
dec
inc
ss
add
jle
js
repz
add
inc
leave
mov
pusha
dec
jae
jns
movb
and
mov
scas
pop
add
sbb
xor
sub
lods
cwtl
sbb
cwtl
and
cmc
std
data16
cmc
shll
jecxz
sti
fsincos
imul
jno
fisttpl
inc
adc
lea
mov
adc
mov
repnz
add
int
pop
jnp
mov
push
or
adc
xchg
jae
sub
pushf
cmp
sbb
adc
loopne
xor
sbb
adc
scas
aad
test
xchg
cmp
dec
mov
xchg
pop
lods
enter
repnz
stc
cli
add
mov
cmpsl
xor
sub
add
push
loop
fbstp
daa
mov
gs
adc
imul
stos
js
xlat
mov
roll
sbb
push
rorl
lock
jl
or
fisttpll
in
and
testb
aad
jnp
jle
pop
cld
pop
xchg
xor
adc
push
iret
out
inc
clc
push
or
stos
sbb
mov
fwait
rcrb
imul
inc
shlb
or
pop
imul
xchg
in
mov
ds
shll
aam
inc
sbb
scas
cs
inc
xchg
lods
adcb
sub
or
jecxz
addb
sub
pushf
push
hlt
sub
out
ret
dec
adc
push
and
nop
push
fs
mov
push
add
mov
lret
dec
test
sub
loopne
inc
mov
insb
mov
lock
cmp
jnp
or
out
dec
cmp
push
pop
insl
sub
xchg
cld
and
sbb
or
push
dec
jle
sahf
cmp
cltd
mov
sarl
sub
xor
nop
mov
add
mov
std
imul
or
add
mulb
cs
lea
iret
test
loopne
arpl
ret
adc
outsl
push
inc
mov
inc
mov
add
je
mov
clc
leave
mov
cli
jg
imul
mov
pop
fs
and
mov
movsl
pop
pusha
push
xor
cmp
gs
mov
and
push
sarb
and
lcall
mov
fists
xlat
dec
and
gs
jnp
ret
and
push
push
std
push
pop
mov
cmp
fwait
int
stos
mov
mov
hlt
movsb
loop
push
mov
jbe
lods
adc
fistps
pop
dec
test
cmp
mov
mov
lods
add
aas
into
ret
xchg
dec
push
sub
mov
sbb
outsb
call
xchg
dec
inc
push
lds
test
sbb
in
pop
adc
imul
inc
mov
adc
dec
mov
mov
inc
sbb
repz
fiadds
mov
jno
push
xor
int
movsb
fcoms
icebp
cmpsb
cwtl
inc
pop
xor
inc
and
outsb
ja
lcall
jmp
nop
fisttpl
xchg
push
xchg
pop
fiaddl
jo
xor
out
leave
out
cltd
adc
pop
es
je
loope
lock
aam
pop
inc
ljmp
out
andb
mov
pop
sub
xlat
push
mov
shrl
jp
xlat
mov
popa
cli
and
jmp
push
cmp
daa
into
inc
pop
push
arpl
out
adc
or
mov
xor
sbb
dec
int
and
sarl
ret
mov
cli
sub
gs
and
fs
push
xchg
ljmp
repz
sub
in
cmp
sub
insb
mov
xchg
repz
lods
sub
and
in
pop
std
pop
call
mov
push
test
xor
xor
addb
push
jge
cmp
cmp
cs
mov
sbb
add
mov
enter
adc
jle
aad
xchg
add
sub
adc
mov
mov
sti
cmp
out
mov
pop
inc
rol
sbb
fbstp
cld
fs
and
sbb
pop
ss
pop
icebp
rcll
enter
or
cmp
mov
add
mov
fisubs
and
dec
imul
imul
fs
jns,pt
xchg
nop
fwait
jae
imul
pop
jb
mov
scas
and
cmp
jno
insl
into
xchg
pushf
loop
das
nop
adc
cmp
add
xor
lret
cwtl
jg
jmp
jecxz
fisubrs
dec
dec
imul
or
xchg
jl
cmp
or
mov
mov
push
sbb
pop
cmp
sbb
cld
je
mov
lock
add
pop
mov
and
cs
icebp
lcall
dec
add
pushf
or
and
in
pop
mov
test
frstor
in
subb
jg
outsl
aaa
movsb
push
inc
aas
mov
adc
cmpsl
adc
cvttps2pi
test
iret
and
sub
fdivs
mov
xor
int3
jg
mov
push
fcompl
mov
in
jno
mov
cs
inc
jmp
mov
into
popa
fstpt
add
out
or
sahf
out
stc
vmovsldup
push
mov
and
sbb
lret
ljmp
push
dec
or
mov
lock
sbb
and
adc
test
lds
jg
jbe
and
std
insb
add
mov
inc
repnz
push
inc
loopne
jmp
pop
js
and
sbb
scas
das
fdivl
std
daa
push
cmp
jle
lret
cmp
mov
pusha
push
jl
call
cs
mov
cmp
scas
iret
lods
repz
pop
lods
stc
and
xor
ljmp
lods
icebp
cmpsl
sub
xchg
sub
test
les
jb
jne
xchg
outsb
pop
xchg
stos
fiaddl
cmc
jnp
sbb
into
jle
pop
arpl
sti
aam
jge
daa
cltd
in
cwtl
lret
aam
push
fisubs
add
ret
mov
or
mov
incb
xchg
jb
leave
insb
movd
es
sbb
cmp
jne
ret
data16
enter
xchg
ret
inc
fildll
int
shr
lock
xor
inc
insl
ss
imul
jbe
fdivrp
sub
ret
cs
adc
loop
jne
sub
jo
lahf
insl
ret
adc
or
adc
ret
scas
mov
xchg
xor
test
insl
loop
fcompl
pop
icebp
xchg
xor
add
xchg
mov
in
cli
sti
mov
add
and
jmp
jl
xor
or
push
cltd
js
xchg
mov
mov
out
aam
xchg
push
icebp
loop
lods
push
movsl
repnz
out
repnz
pop
shrl
hlt
inc
jg
cmpsl
movsb
enter
push
mov
xchg
repz
jle
in
mov
jge
popf
ss
fimuls
adc
xchg
xor
lock
fcompl
jg
cmp
jl
or
cwtl
mov
out
xchg
mov
ss
arpl
push
lret
popa
nop
sti
lock
pusha
inc
push
lret
ja
push
out
sahf
cltd
pop
jp
in
bound
xor
push
cmc
insb
ds
mov
jle
jbe
push
xorb
sub
mov
loop
pop
sub
sbb
jmp
inc
rcr
pop
sbb
mov
push
fstps
into
push
mov
mov
filds
mov
rclb
push
inc
sahf
and
aaa
adc
push
cltd
add
lret
lods
inc
pop
lret
jae
imul
xchg
cli
fidivs
rorl
xor
jl
xchg
test
lods
cmp
add
out
inc
pop
roll
adc
push
fisubrs
pusha
movsl
pop
hlt
jg
test
out
aas
int3
or
and
xchg
sarb
in
sti
xchg
and
std
sub
or
sbb
dec
out
push
lea
stos
jge
mov
mov
jne
dec
dec
daa
mov
dec
les
pop
mov
cmpsl
jge
sub
clc
xchg
testb
fwait
orl
adc
out
fdivs
fisubrs
inc
test
mov
xchg
test
ret
mov
xchg
rorb
dec
sbb
pop
sub
mov
repnz
xlat
mov
pop
or
insb
jg
leave
push
jne
iret
and
or
push
cmpsl
adc
pop
adc
jle
inc
pop
inc
jmp
pop
mov
in
push
das
shll
add
add
cmpsl
lods
lods
mov
jmp
pop
int
xchg
insb
insb
imul
inc
and
js
adc
arpl
mov
rorl
push
push
loopne
cmc
vmovntps
pop
fdivrl
fdiv
mull
xlat
scas
fwait
sub
jne
outsb
pop
sbb
jp
aad
push
insb
xor
jns
negl
scas
dec
or
xchg
sbb
rcrl
adc
imul
mov
adc
xor
out
sub
jecxz
aaa
jne
stos
push
sbb
in
sbb
imulb
xor
mov
das
add
in
repnz
push
cli
test
lds
dec
add
js
subb
xchg
test
loopne
fidivl
fs
and
addr16
clc
stos
pop
out
sub
aam
scas
pushf
daa
mov
jl
push
ret
lcall
out
adc
outsl
scas
jns
push
arpl
int
arpl
loopne
inc
pop
mov
clc
test
std
ja
or
gs
ret
inc
and
aad
ljmp
jl
movsl
ret
adc
in
push
nop
fucomip
sub
push
mov
loope
xchg
mov
outsb
popa
jo
inc
push
pop
into
outsl
sub
add
addb
lahf
negb
push
imul
sub
or
ret
je
mov
fdivs
iret
imul
mov
pop
popa
out
mov
test
lahf
into
pop
push
inc
movsl
sub
xchg
or
cmpsb
push
mov
push
jbe
mov
mov
fidivrs
in
fidivs
mov
pusha
inc
ret
or
inc
fcomps
push
shll
loope
inc
rcrl
rcrl
dec
stc
loop
pushf
push
adc
add
enter
pshufw
add
mov
pop
fidivrs
lea
rclb
insb
call
pop
dec
aam
cltd
dec
cmp
je
xchg
xor
idivb
or
jbe
lcall
rolb
jecxz
push
sbb
and
fdivp
mov
jg
sbb
pushf
bound
addr16
inc
cli
mov
cltd
xchg
jg
imul
sbb
push
sbb
test
outsb
arpl
lret
or
lods
dec
icebp
push
jno
inc
lods
hlt
mov
ja
fs
in
sbb
mov
push
add
push
sarb
incl
sbb
icebp
cmp
jae
pop
and
negb
dec
mov
out
sbb
cmp
inc
sbb
cmpsl
cmp
xchg
repz
cld
mov
push
pop
aad
nop
lret
loopne
jno
push
mov
adc
movsl
xor
push
and
add
mov
std
test
lods
jno
scas
push
sbb
lret
stos
pop
push
jns
and
push
jle
outsb
cmp
hlt
mov
dec
xor
pop
push
pusha
xorb
inc
xor
and
adc
test
aad
push
fwait
lea
aam
xlat
mov
out
cmp
repnz
loop
jno
outsl
bound
jecxz
inc
test
and
xchg
push
and
aaa
pop
add
stos
rcrl
out
inc
mov
jne
mov
xor
divb
push
push
cmp
daa
bound
and
lods
jge
fnstcw
add
jecxz
std
imulb
lret
push
or
test
nop
jp
in
rorl
pop
mov
and
xlat
daa
loope
jb
js
fcompl
shll
jb
psraw
arpl
mov
stos
scas
adc
pusha
xor
mov
loop
lcall
lock
jno
cmp
mov
js
mov
adc
cmp
ret
mov
pop
and
pop
sub
mov
push
aaa
and
movsb
or
jge
push
inc
into
or
mov
mov
pop
test
or
pop
jp
pop
pcmpeqw
mov
lods
mov
call
scas
push
in
pop
pop
sarl
adc
movsl
mov
dec
adc
std
xor
xchg
ficompl
cwtl
xorb
popf
push
xlat
push
mov
inc
pushf
mov
push
push
adc
sbb
ss
pushf
sub
in
xlat
mov
push
adc
xchg
or
enter
mov
scas
jle
jb
sub
popa
xchg
insl
push
cwtl
cs
push
rclb
ljmp
mov
cli
ljmp
clc
cmc
pop
mov
into
cltd
xchg
cltd
dec
lods
in
inc
lock
aad
mov
arpl
imul
icebp
stos
shll
add
shll
sub
movsl
lcall
xchg
adc
xor
mov
bound
popa
sub
arpl
lds
add
sahf
adc
push
int
mov
mov
pop
lock
out
add
dec
dec
add
ds
out
mov
je
mov
jle
sub
push
mov
and
inc
and
mov
arpl
cmp
push
lea
movsb
mov
jp
xchg
mov
bound
lds
sbb
sbb
jle
inc
cmpsb
push
sbb
std
into
stos
lcall
arpl
push
call
cltd
pop
adc
loop
aad
nop
adc
mov
pop
add
xchg
sbb
mov
xlat
pop
jecxz
ss
arpl
sub
dec
xchg
jg
mov
adc
repz
faddl
dec
sbb
lods
push
movl
repnz
fsubrl
filds
aaa
ja
ja
fdivrs
dec
cmp
mov
jns
ds
jmp
mov
xor
and
lahf
enter
enter
cmpsb
cmpsb
or
and
mov
mov
dec
and
or
daa
mov
cmpsb
stc
shrb
xor
sub
ja
push
loope
addl
jnp
rcr
xchg
scas
xor
xor
cwtl
shll
sahf
inc
add
clc
loope
pop
add
xchg
xor
jbe
dec
std
sub
mov
addr16
enter
mov
rcrl
cwtl
gs
outsl
jns
mov
lcall
cmp
mov
mov
pop
outsb
sub
cmpsl
adc
mov
dec
outsl
jg
and
mov
ds
mov
in
jp
push
shlb
jl
or
cmpsl
mov
dec
push
sub
inc
ja
mov
push
fistps
xor
fwait
inc
xchg
pop
out
mov
push
and
stos
leave
push
mov
xor
sar
pop
cltd
imul
es
mov
jl
in
or
enterw
hlt
rcll
iret
mov
pop
sub
int3
dec
mov
sbb
xor
adc
dec
pop
cmp
lods
xor
mov
xchg
mov
fistl
cmpsb
test
popa
jne,pn
push
repz
xchg
cs
xchg
les
aad
dec
pop
fsubs
mov
dec
ljmp
mov
xchg
mov
adc
int3
push
repz
sub
mov
adc
mov
cmp
fsubrl
and
mov
cmp
or
clc
sahf
mov
jl
mov
in
test
mov
out
jge
loop
js
dec
mov
xor
sbb
and
ret
jmp
lock
inc
cmp
loope
push
push
pop
mov
mov
xor
rcrb
jle
jmp
push
xchg
out
xchg
xchg
test
cltd
adc
adc
pop
sbb
jne
pop
push
mov
je
popf
fstpl
jne
cmp
mov
aam
ss
sti
pop
clc
lods
dec
cmp
push
sbb
in
push
jecxz
add
sbb
mov
sbb
ret
and
push
push
jge
jae
imul
push
dec
push
xchg
mov
dec
subl
out
xlat
mov
adc
out
mov
mov
pop
cltd
ja
jmp
insb
xor
lahf
iret
mov
rclb
xchg
mov
adc
hlt
inc
sub
sub
or
and
mov
test
stos
rcl
mov
in
nop
and
clc
jecxz
lock
orb
mov
fstpl
mov
movb
dec
xchg
push
inc
ds
cmpsl
mov
cltd
lret
push
push
mov
xchg
mov
add
or
loopne
in
enter
fldt
pop
dec
imul
das
fucomi
test
fisttps
pop
pop
stos
push
inc
jge
jg
jmp
jle
push
and
cltd
call
mov
pop
sub
xchg
pop
mov
sbb
ljmp
add
push
fisubl
mov
and
out
cmp
add
dec
test
imulb
sub
int3
scas
xchg
xchg
mov
movb
or
mov
lods
inc
rcrl
aas
cmp
fsubr
mov
xchg
fs
movsb
xor
adc
cs
int
and
movsl
adc
std
xchg
jp
lods
jns
mov
fldl
fsubr
cltd
mov
mov
jp
cld
and
and
gs
push
fisttps
shlb
fwait
bound
mov
add
xor
sbb
clc
or
out
int
xor
fildll
ret
into
and
cmp
xchg
mov
push
xchg
jge
mov
mov
outsb
inc
mov
adc
xchg
data16
sahf
rcrb
mov
xor
cwtl
fists
mov
cld
pop
xchg
inc
aam
push
call
data16
out
int3
loope
leave
mov
bound
push
add
ja
push
nop
xchg
push
sub
push
jl
jae
sub
xor
arpl
dec
mov
repz
adcb
push
dec
cltd
mov
xor
ds
push
jge
aam
mov
aam
jnp
inc
xchg
mov
add
out
and
dec
mov
out
sbb
lret
repz
sub
add
lahf
fs
repz
jl
and
add
add
dec
inc
bound
adc
arpl
jecxz
dec
xchg
push
lods
lds
mov
push
out
fimull
ja
aad
push
ret
xor
das
cmp
jle
xor
popa
ficompl
and
rcll
cmpsl
test
ret
sbb
aam
xlat
lds
cmp
jmp
int
jbe
pop
xchg
cmc
or
lods
xchg
mov
xchg
scas
loopne
in
test
mov
aam
shrb
mov
push
das
mov
ja
mov
mov
lds
fldt
mov
pushf
pop
or
sahf
bound
out
mov
cmp
mov
test
or
ds
je
jnp
or
jmp
inc
mov
push
loop
inc
jg
loop
mov
jmp
dec
add
dec
and
fcompl
xor
inc
mov
imul
mov
add
mov
std
out
mov
dec
mov
mov
subl
int
jbe
cmp
add
push
mov
cmp
push
jae
sahf
jo
inc
and
cmc
and
pop
jge
test
pop
xchg
jle
fstpt
es
mov
xor
shlb
mov
lea
aam
pushf
xchg
fwait
pop
fbld
ljmp
aad
outsb
jl
jl
mov
mov
mov
jmp
test
insl
stos
dec
add
xchg
imul
xor
cs
mov
pop
pop
repz
repnz
adc
sub
sahf
fdivr
mov
push
out
out
mov
sub
nop
sub
xchg
lods
es
mov
test
add
or
push
cmp
int
cmp
aas
rorb
rcrl
iret
and
jge
stc
xchg
mov
pusha
in
arpl
test
pop
aad
pusha
aas
aad
lret
loop
lret
cli
mov
and
sub
icebp
icebp
push
out
lock
sbb
jg
sub
loope
repz
nop
mov
out
cld
mov
dec
push
sti
and
fists
pop
scas
ret
ret
cltd
ljmp
xor
fwait
xchg
adc
nop
aaa
call
cmp
push
sub
shrl
fnstcw
out
popa
pushf
dec
test
loopne
add
push
xchg
and
adc
scas
push
mov
and
inc
inc
enter
xor
mov
ficomps
mov
jmp
cmp
sbbl
lcall
dec
cld
pop
inc
or
ja
xchg
aas
or
flds
popl
xchg
add
pushf
or
lods
add
cld
orb
xchg
add
fistpl
lods
mov
mov
sbb
add
jb
cmpsl
ljmp
push
gs
pop
pop
lock
shl
stc
or
hlt
add
aaa
sub
arpl
push
jg
jb
xchg
out
xchg
or
mov
popf
mov
sti
fdivrp
daa
nop
scas
cmp
pushf
dec
sbb
sahf
pushf
loop
cmpsl
inc
test
pop
fs
push
cmp
das
push
xor
pushf
ss
and
add
xor
mov
les
jno
dec
sbb
push
bt
inc
adc
ret
movsb
aaa
mov
inc
cltd
outsl
xor
or
arpl
lcall
lock
stos
pop
or
jb
test
xchg
repz
cmp
adc
push
popf
fildll
xlat
out
push
fstps
mov
push
add
test
adc
xchg
mov
push
movsb
test
pop
cmp
insb
sbb
mov
movsb
fcoms
mov
and
dec
xor
pop
jbe
add
test
sbb
gs
dec
or
nop
cmp
mov
xchg
cld
cmp
bnd
repnz
clc
repz
orb
push
pop
dec
and
mov
aam
xor
filds
fisubrl
enter
mov
test
mov
mov
stc
xlat
sub
cmp
sbb
int
pushf
pop
adc
fnsave
and
ss
shlb
popa
nop
loopne
enter
rcll
sbb
fbld
sti
sbb
icebp
xor
movl
or
cwtl
scas
mov
push
and
mov
insl
push
xor
mov
xor
iret
sub
sub
lock
les
sub
ja
ret
cmpsb
cmp
mov
sbb
push
or
sub
or
ljmp
fwait
xchg
mov
sub
sub
dec
sub
bound
pop
xchg
jne
je
jl
cmpsl
cld
sbb
cmpsl
rcrb
outsb
push
xlat
sbb
mov
imull
mov
das
xor
jns
jae
dec
adc
ror
add
mov
pusha
in
adc
je
mov
xchg
iret
ja
mov
and
icebp
adc
fldl
lock
fstpt
push
pop
push
and
ds
fwait
adcl
xchg
negl
adc
popa
mov
mov
movsl
iret
dec
push
sub
dec
sbb
add
leave
js
inc
dec
stc
push
enter
outsb
aad
mov
lods
and
mov
ror
add
dec
cmp
jle
lods
push
jg
jp
jo
loop
popa
push
jl
xchg
mov
cmp
lods
aaa
lods
je
and
aad
jnp
pop
pop
mov
pushl
sti
jno
push
dec
inc
pop
dec
fcompl
xchg
or
jle
sbb
sahf
adc
movsl
jecxz
xchg
mov
arpl
lods
xchg
fucom
sarl
xchg
call
sbb
flds
imul
roll
or
ficomps
lods
lret
cltd
xchg
aam
imul
xchg
push
or
xlat
test
repnz
jg
sahf
or
pop
rorb
pop
sbb
lcall
xchg
inc
xor
sbb
mov
push
mov
pop
aas
test
and
repnz
adc
int3
inc
cmp
jle
push
rcrb
xlat
cmp
clc
inc
scas
sar
mov
jge
mov
sub
pop
int
inc
orb
dec
fnstenv
inc
sub
data16
movsb
xchg
ret
in
push
popf
fcom
adc
sahf
pop
fists
inc
leave
push
push
fldenv
js
pop
iret
jnp
xor
mov
jg
stc
dec
bound
xchg
sub
cmc
mov
pop
dec
mov
fs
hlt
test
jnp
insb
pop
mov
roll
adcb
pusha
or
arpl
push
div
outsl
std
or
jnp
call
fimuls
mov
mov
sub
fxch
pop
out
push
push
jae
xchg
stos
ret
imul
xor
push
incl
iret
add
and
sub
int
lret
push
adc
jnp
jb
sub
fdiv
xchg
add
in
in
imul
jecxz
int
inc
push
sub
jp
pop
or
daa
outsl
jge
insb
sahf
push
pop
jb
sbb
shll
push
jmp
outsl
decl
aas
add
gs
shll
and
jecxz
dec
inc
sub
daa
scas
xchg
push
jge
mov
int3
testb
addr16
mov
push
xlat
or
add
lea
jg
adc
enter
and
adc
vmulss
inc
scas
sub
mov
or
mov
mov
mov
adc
adc
mov
mov
push
pop
inc
loopne
nop
add
pop
xor
and
movl
push
cmp
arpl
pop
lock
in
fimuls
dec
sbb
into
xchg
add
daa
xor
jecxz
aad
fbld
lock
fiadds
gs
icebp
or
das
insl
cmpb
add
dec
mov
rcrl
lods
pop
out
je
mov
scas
neg
and
out
test
sahf
insb
mov
popf
cmpsb
ret
mov
aad
movsl
jge
into
aad
aam
out
cmc
xor
lret
das
popf
cs
insb
xchg
push
cmp
jo
loop
enter
hlt
hlt
mov
ja
sbb
dec
add
mov
mov
inc
rorb
cld
add
sbb
cltd
shlb
mov
call
das
aad
xor
stos
in
fbstp
outsl
mov
mov
push
xor
sbb
inc
int
cltd
xchg
mov
sti
mov
jl
cmp
jno
mov
mov
pop
cmp
mov
cmpsb
je
mov
or
or
adc
cmovp
rcrl
pop
mov
lret
sub
inc
sub
and
jle
int
xchg
mov
dec
enter
popf
rcll
jmp
ds
add
mov
sbbl
ja
aam
jg
pop
mov
rcrl
test
repz
rclb
in
mov
pop
xchg
jbe
pop
test
xchg
mov
mov
push
lock
jne
pop
dec
in
movsl
enterw
mov
mov
inc
sbb
inc
outsb
dec
mov
xorb
test
fldcw
imul
pop
ss
enter
adc
out
adc
into
pushl
lea
mov
out
push
jmp
sub
cltd
loop
cmove
lock
vpsubw
push
and
enter
in
jmp
enter
fdivl
add
in
cmpsl
loop
sub
inc
rolb
or
das
sub
cmpsb
fdivp
mov
inc
inc
jmp
jmp
loopne
pop
add
es
jnp
mov
xchg
pusha
xchg
aas
enter
in
adc
ret
mov
jnp
pop
and
push
fwait
out
test
in
mov
lret
xchg
js
lea
repz
push
pop
loope
cmpl
push
lret
xor
repz
push
push
addl
cmp
and
pop
cmp
imull
sbb
movsb
xchg
stos
mov
aas
mov
je
jb
cltd
xor
add
sub
mov
movsb
sti
mov
push
push
inc
test
cmp
inc
outsl
mov
xchg
std
lahf
test
cmp
filds
xchg
fistpll
in
out
jno
insb
leave
sarb
lds
jbe
pop
sbb
cmp
cs
jne
adc
jo
jle
push
fimull
cwtl
mov
mov
or
sti
loop
dec
aad
dec
sbb
and
lock
pop
xchg
mov
outsl
outsl
pop
into
stos
rorb
pop
notl
mov
pop
lock
sbbl
popf
inc
add
cmp
cmp
or
bound
aam
xor
sbb
orl
mov
shl
mov
test
and
add
xorl
lret
sub
push
je
push
push
sbb
aas
in
sbb
insb
jecxz
push
inc
lods
cld
pop
lahf
jae
pop
sbb
inc
pusha
add
cwtl
addb
cwtl
add
lods
movsb
and
xchg
cmp
mov
sbb
ljmp
arpl
rcrl
inc
xchg
divb
xor
jmp
es
jns
jg
aaa
cld
lahf
pop
mov
jns
sbb
divl
xchg
std
pop
mov
sbb
pop
outsb
data16
and
sub
dec
das
inc
cmp
and
dec
cmp
xor
jno
mov
cli
cmpsb
mov
loop
adc
test
inc
sbb
mov
sub
fldl
das
mov
ds
cwtl
jns
mov
mov
cmp
call
shlb
loope
shlb
in
hlt
xor
fildll
popf
mov
leave
je
repnz
jns
sub
mov
aas
xor
clc
mov
mov
shlb
es
aaa
xor
notrack
pop
dec
pop
add
icebp
mov
inc
or
pushf
push
rorb
xor
leave
xchg
je
push
cmpsl
sahf
or
stc
movsb
ds
pop
add
add
mov
pop
inc
add
mov
es
push
lock
fwait
push
dec
adc
adc
rolb
test
cmp
cmc
shrb
or
and
fs
rcr
insb
inc
lds
call
sub
dec
cmc
sbb
pop
rcrl
sub
push
or
adc
adc
es
bnd
push
push
add
add
jge
adc
mov
mov
icebp
add
loope
cmpb
cmp
mov
xchg
in
mov
loopne
lods
leave
test
mov
lea
or
add
scas
dec
jg
sbb
push
xchg
cmp
mov
in
or
test
mov
xchg
fidivrs
sbb
pop
shll
inc
leave
jns
mov
mov
dec
xchg
cmpsb
movb
or
add
mov
outsl
aaa
sarb
add
mov
jmp
jb
sbb
push
shlb
es
test
pusha
popf
lock
sbb
leave
mov
fwait
jbe
jge
lock
aad
mov
pushf
int3
push
push
aad
ljmp
or
xchg
pushf
mov
hlt
ret
lret
loopne
xor
pushf
sbb
pop
xor
xchg
xor
in
call
xor
sbb
mov
bound
outsl
xchg
mov
test
in
or
das
adc
cmpsb
outsl
xchg
push
pop
test
sub
and
jns
xchg
and
sub
inc
out
cmpsb
push
notl
adc
js
xchg
and
push
pop
xchg
loop
mov
pop
xor
pop
jg
loope
add
mov
rol
push
xor
cmpsb
stos
arpl
cmp
shlb
out
or
cmp
in
dec
sub
cmp
out
xchg
rolb
das
adc
bound
mov
stc
outsb
iret
mov
fidivs
sbb
xor
loopne
mov
mov
push
push
inc
push
jnp
add
push
xchg
pop
pusha
mov
sub
dec
push
push
pop
fcoms
push
orl
mov
push
jle
insl
cmp
mov
mov
call
or
test
adc
push
adc
call
cmp
cmp
data16
jmp
xchg
inc
inc
loopne
dec
hlt
dec
push
out
push
test
pop
lcall
testl
cmp
mov
mov
cmp
rcrl
aam
cmpl
or
fwait
mov
dec
sub
mov
mov
mov
push
mov
adc
mov
ss
xchg
dec
int3
sub
cli
push
fiadds
dec
add
push
inc
std
add
in
rep
mov
xchg
les
add
addr16
inc
adc
mov
andb
jp
insb
push
push
and
loop
test
hlt
dec
stos
mov
jae
arpl
fsubrs
cld
and
and
jo
mov
js
fistps
popl
movsb
sbb
push
xchg
cmp
enter
pop
and
jmp
inc
adc
sbb
mov
fsubrp
cmp
sub
sub
out
jns
mov
lret
fmuls
add
loope
xchg
xchg
dec
adc
dec
and
loop
pop
fimuls
out
stos
aaa
and
scas
stos
cltd
jle
mov
add
stos
push
mov
fs
mov
stc
dec
xor
push
hlt
or
test
test
testb
outsb
or
or
xchg
add
add
outsl
lcall
mov
testw
pop
jl
outsl
test
lods
lcall
xchg
pop
daa
jnp
rcrl
and
inc
imul
sti
ss
call
jp
cmc
pop
js
adc
das
xchg
das
add
addr16
sub
sbb
fstp
int3
into
adc
imul
bnd
stc
pop
push
icebp
jle
push
les
les
jno
push
or
arpl
ja
clc
lret
std
das
inc
xchg
adc
jmp
iret
and
insb
fwait
push
lret
and
pusha
push
jle
es
xchg
xor
shll
jmp
cmp
cld
je
dec
dec
popa
xor
dec
sbb
dec
daa
mov
mov
cs
insb
sbb
ljmp
ja
rcrl
negl
xchg
cmp
jmp
xchg
sbb
ret
pop
in
ss
std
andl
iret
aas
test
inc
cmp
mov
xchg
mov
scas
and
clc
js
jecxz
sub
dec
ficoms
popf
sub
popf
jbe
rclb
adc
and
outsl
xlat
ret
pop
popa
inc
pop
test
shrb
fs
jl
cli
mov
fmull
mov
add
sbb
test
in
mov
mov
cmpb
push
movb
leave
and
loopne
int3
and
cmp
test
mov
add
das
rorb
js
xchg
and
clc
sub
mov
mov
xchg
fcmove
xlat
sbbb
dec
pop
lods
in
inc
shll
xchg
call
hlt
sub
test
pushf
lret
adc
mov
mov
sub
popa
hlt
add
mov
sti
das
mov
test
mov
inc
mov
pop
shr
inc
fidivrs
adc
xor
sbb
jne
adc
insb
pop
test
fists
jo
xchg
fistpl
push
or
loope
nop
jg
je
xchg
pop
push
push
and
adc
mov
or
jbe
leave
out
dec
insl
outsl
xor
cmp
jmp
xor
cmp
jmp
push
sbb
aam
adc
dec
out
pushl
cmp
mov
lahf
negl
cmc
aad
test
leave
es
pop
mov
adc
xor
dec
ret
xchg
fdivl
mov
test
leave
movsb
loop
loop
cld
push
loop
push
jno
les
jno
sti
lock
mov
mov
mov
jbe
decb
mov
call
mov
mov
js
inc
arpl
sbb
mov
lods
or
rorl
add
scas
pop
popf
pop
or
fsubs
jno
inc
lea
clc
outsl
loop
cmpsb
out
addb
xor
xor
mov
out
cmp
jo
fstpt
pop
mov
inc
loope
lret
mov
or
dec
cmpsl
enter
das
xor
mov
lock
dec
shll
test
aaa
xlat
movsb
testb
mov
inc
insb
out
fs
push
xor
icebp
or
in
fcoms
adc
inc
pushl
fistpll
mov
and
xchg
add
mov
and
mov
cmp
cwtl
push
push
out
mov
test
pushf
aaa
push
testb
inc
jae
push
pop
pop
cmpsl
mov
mov
subl
sahf
pop
cmc
and
sbb
std
xor
and
lcall
addr16
jb
jmp
pop
mov
mov
scas
mov
mov
jg
pushf
cli
imul
or
popf
push
gs
aaa
or
add
pop
add
mov
push
pop
mov
xor
ljmp
leave
mov
icebp
inc
xchg
out
cmp
inc
test
mov
xor
pop
sbb
mov
aas
dec
out
shl
cmc
push
sarb
mov
jo
loope
push
push
inc
or
addr16
push
add
das
cwtl
cltd
lahf
mov
mov
cmp
push
dec
ss
cmp
add
and
jecxz
sub
test
mov
add
push
adc
test
int
sub
int3
insb
int
pushf
or
or
rcrl
repz
push
movsb
pop
push
xchg
sub
jle
iret
imul
fstpt
jbe
adc
pop
cmc
xchg
lock
sbbb
dec
mov
sarl
lcall
arpl
gs
stos
sub
cltd
inc
lods
push
jp
cmp
sbb
cwtl
push
xor
mov
pop
lret
jae
repz
outsl
dec
mov
add
lahf
imul
int3
in
int3
stos
scas
pop
mov
pop
sub
jo
fisubrl
lret
mov
jo
jl
loopne
in
or
add
jnp
mov
lea
sub
push
cmp
mov
repnz
jbe
js
jbe
outsb
fsts
sub
dec
cwtl
pop
xor
fisubrl
repnz
fiaddl
push
movsl
fmuls
xchg
mov
div
or
inc
sub
or
jo
loopne
data16
mov
faddl
pop
loope
cmp
mov
mulb
sbb
loopne
loope
rcrl
jnp
cmp
xchg
ljmp
mov
adcl
mov
jb
out
sbb
es
sbb
pop
jge
dec
sub
dec
out
lods
jp
mov
je
cmp
js
addr16
or
mov
mov
loopne
pushf
push
mov
and
dec
add
mov
inc
cmp
idiv
pop
mov
pop
pop
xchg
cmp
push
insb
stc
add
cmp
out
ret
xorb
shll
js
sbb
lock
push
cmc
mov
mov
les
fwait
out
pop
divl
pop
jle
dec
mov
cmp
mov
mov
sub
daa
jmp
into
cld
pop
dec
cld
je
mov
lea
mov
sbb
mov
add
ss
loop
push
rcr
jo
cmp
push
jne
cld
xor
fs
stc
repz
sbb
inc
fdivl
mov
or
mov
jnp
stc
and
mull
jbe
popf
pop
arpl
sub
jns
stc
add
fisubrs
leave
aaa
mov
fidivrl
inc
xchg
and
mov
xchg
push
and
add
jno
inc
cmpsb
rclb
js
test
sbb
mov
clc
xor
icebp
cltd
bnd
pop
dec
roll
and
and
inc
ficompl
ljmp
mov
and
dec
sub
dec
pop
xor
test
or
out
pop
lds
and
es
fcomps
adc
cmc
inc
jge
dec
out
mov
push
jae
dec
fidivl
jns
fadds
sub
adc
lret
push
lods
imulb
add
cmp
mov
repnz
sub
mov
stc
cmpsl
jne
mov
scas
or
add
add
mov
push
mov
in
mov
xchg
mov
ja
nop
adc
mov
fcmovbe
fwait
inc
movsb
mov
cmp
pop
int
jne
mov
daa
movsb
xchg
cmc
int3
addr16
adc
push
fwait
mov
imul
mov
mov
mov
icebp
add
or
pop
ret
in
imul
jne
test
xor
sub
mov
imul
sahf
fidivl
mov
pop
mov
dec
adc
mov
mov
and
inc
ds
and
sbb
push
cwtl
movsl
aam
lcall
insb
push
dec
call
outsl
push
or
dec
fdivrp
jl
push
xor
dec
insl
mov
adc
out
adc
add
xchg
pushf
daa
xchg
mov
aad
imul
adc
lahf
stc
test
insl
mov
test
fistpl
loope
shlb
push
imulb
fsubrl
inc
mov
mov
push
xchg
dec
and
mov
mov
adc
outsb
jae
cmp
mov
jns
mov
dec
xchg
sub
push
int3
lea
dec
icebp
xor
adc
adc
cmp
xchg
cmpsl
lret
pop
addl
mov
mov
aas
pop
dec
add
mov
jle
inc
popa
test
sbb
mov
jp
add
dec
icebp
pop
andl
adc
and
cmp
es
mov
aad
dec
lods
fcmovb
andl
cwtl
ret
push
mov
arpl
shr
test
leave
inc
jnp
mov
sub
ja
ja
frndint
add
sbb
int3
out
rorl
clc
inc
cmp
testl
mov
arpl
movsb
cld
pop
psubsw
cwtl
xor
fiaddl
ljmp
sbb
mov
sbb
imul
adc
push
add
mov
stos
add
out
je
dec
repz
adc
sub
pop
cwtl
roll
jnp
das
dec
dec
lea
popf
jbe
shll
mov
rclb
jp
and
imull
push
xchg
wbinvd
out
mov
rcrl
inc
mov
int3
mov
repnz
aam
push
int
cwtl
fsubl
xor
or
test
xor
and
fsubrs
push
mov
push
ficompl
rcl
add
ja
xchg
test
imul
cmp
scas
insb
dec
push
xchg
das
scas
icebp
out
add
push
add
push
scas
jle
lahf
pop
cmp
es
lahf
mov
sbb
inc
popa
testl
cmc
outsl
push
dec
outsl
inc
push
clc
clc
adc
mov
or
arpl
daa
adcl
stc
cwtl
jge
dec
adc
ja
hlt
cmp
scas
pop
sub
lods
xlat
sub
mov
out
sub
inc
insl
and
hlt
cmp
mov
pop
push
jmp
mov
cmp
gs
fwait
xchg
cltd
push
loop
mov
arpl
das
and
push
cmp
jnp
sti
cld
aam
mov
cwtl
dec
push
in
subl
push
jp
popf
fisttps
sarb
jle
cwtl
aam
in
and
and
movb
loop
out
push
rolb
in
mov
dec
lods
ja
pop
test
adc
sbb
xor
mov
add
aam
cld
pop
js
sub
cmp
sarl
popf
nop
test
sub
push
cmp
insl
mov
jbe
dec
leave
lret
adc
mov
sub
jp
adc
add
dec
inc
xchg
lock
add
pop
xchg
insl
inc
mov
mov
rclb
lds
movsb
test
mov
stc
and
mov
ret
sub
lods
jae
add
push
adcb
sub
int3
or
hlt
jbe
cmpsb
push
mov
pop
mov
xchg
adc
pop
in
xlat
subl
xor
mull
aad
ja
icebp
jl
in
mov
sarb
in
fsubp
jne
out
vcvtsd2si
mov
bound
fstpt
lock
lds
fsubrs
jp
fists
adc
push
aas
inc
lcall
cmp
sub
cmp
jle
and
fsts
sarb
sub
enter
xchg
xchg
xorb
and
push
rcrl
xchg
inc
jmp
jne
daa
pop
sub
inc
frstor
pop
divb
adc
sub
pop
loopne
mov
and
xchg
sahf
out
test
movsl
xor
jns
mov
cmp
movsl
sub
insl
pop
popa
pushf
mov
in
loop
or
cmp
into
outsb
jbe
rcrb
mov
std
add
sbb
sbb
int3
push
lods
cmp
cmc
xchg
push
push
jb
mov
or
jle
in
out
insb
and
sub
inc
or
pop
mov
pop
cmc
inc
icebp
jmp
adc
movsb
arpl
jae
add
mov
jecxz
and
sbbb
cli
xor
loopne
pop
js
mov
mov
xchg
mov
aam
ljmp
ficoml
mov
mov
mov
and
xchg
xchg
dec
lcall
je
arpl
jo
dec
clc
push
roll
insb
fidivs
or
inc
aaa
ret
jae
fsubl
pop
or
sti
in
hlt
sahf
gs
stos
cli
out
mov
mov
add
sbb
add
xchg
stos
xchg
cmp
mov
or
cmp
test
mov
pop
fs
pop
out
cmc
add
mov
pop
xor
add
xor
sahf
mov
das
cwtl
jmp
fbstp
icebp
sbbb
test
push
and
dec
adc
push
dec
bnd
decl
sub
add
aas
sarl
jne
mov
sbb
jl
fistl
insl
add
js
mov
repz
push
test
xchg
pop
push
mov
push
aaa
cmp
pop
mov
or
subb
mov
ljmp
ret
lcall
pop
ror
adc
push
shr
imul
addb
jno
mov
adc
jg
shrb
fsubrs
lods
push
scas
into
call
fwait
jae
pop
popa
movsb
pop
ds
dec
sbb
mov
mov
cmc
cmp
ds
mov
push
arpl
movsl
sti
jnp
fadd
in
nop
jns
inc
lret
mov
out
gs
xchg
call
inc
sbb
sub
xchg
sbb
dec
mov
mov
jl
cmp
hlt
je
push
outsb
cwtl
gs
xchg
insb
and
xor
insl
addb
stos
and
mov
sub
or
ss
and
xor
pop
mov
and
jb
sbb
mov
sbb
ret
lret
stc
cli
ja
jne
adc
fwait
cmp
dec
fbstp
out
inc
fsubrs
mov
push
lods
push
dec
and
pop
fdivrs
jb
or
xchg
add
mov
aas
jp
adc
ja
outsb
push
test
and
fmuls
mov
xor
gs
imulb
in
pop
jae
dec
pop
push
idivb
mov
jb
ds
gs
cwtl
dec
sub
xor
adc
xchg
cltd
xor
imul
mov
mov
out
lcall
js
insb
push
lock
cmp
stos
sub
sub
add
xchg
out
rol
sub
fnstsw
inc
jo
in
bound
mov
cmp
inc
aaa
jg
stos
outsb
test
pop
lret
mov
roll
and
push
push
xchg
mov
lret
xlat
sbb
out
mov
xor
aas
mov
repz
lret
dec
aad
pop
pop
lret
cltd
xor
xchg
pusha
sbb
repz
dec
je
jecxz
rcll
scas
xor
sbb
pusha
xor
insl
in
mov
inc
push
pop
decl
xchg
icebp
int3
and
stos
pop
adc
mov
mov
push
dec
loop
test
mov
mov
push
int3
inc
or
xchg
inc
imull
dec
jge
test
dec
adc
hlt
fimull
dec
pop
enter
mov
and
cmp
xchg
xchg
scas
cld
sub
push
fcom
xchg
xchg
arpl
pop
xchg
xor
outsl
inc
jge
testb
push
mov
xlat
cmpb
lret
lcall
pop
icebp
mov
cmp
lods
movsl
outsb
xor
mov
sbb
rcrl
sti
packsswb
mov
pop
gs
insl
and
push
cld
jns
icebp
xor
fildl
push
ljmp
leave
pop
lock
dec
push
aad
push
mov
sbb
add
out
cmpsl
insl
adc
dec
and
fmull
push
jne
mov
addr16
shll
pop
adc
insl
dec
mov
fsub
imul
push
cmp
std
lret
pop
lahf
subb
in
push
cmp
jl
outsb
mov
xor
ds
dec
pop
dec
jbe
xchg
fcmove
std
icebp
push
jge
loop
adc
mov
in
xchg
adc
cltd
jno
push
mov
inc
lea
dec
nop
movsl
and
mov
out
jp
fcompl
pop
xchg
inc
fsubs
shll
lods
push
ret
je
dec
lds
mov
inc
mov
inc
inc
sbb
ljmp
and
sbb
sbb
into
push
dec
shrl
lea
fidivrs
cmpsb
mov
mov
inc
xchg
lds
cli
inc
pop
add
bnd
mov
mov
cmp
adc
lds
fnsave
sub
outsb
repz
dec
and
cmpsl
int3
jae
push
dec
std
rclb
pushf
xchg
out
cld
push
xchg
xor
jmp
stos
jnp
push
mov
out
or
xchg
out
push
shl
daa
mov
sbb
fld
pop
sub
jle
sti
xor
jnp
dec
jne
out
add
inc
arpl
or
sub
lock
inc
jno
mov
lods
inc
sub
ficoms
repnz
cmpb
test
leave
pop
mov
xchg
ror
adc
test
lret
lods
loope
mov
push
inc
popl
out
loope
out
fisubrl
cmp
fstpt
push
loop
add
mov
xchg
sbb
sub
inc
add
push
pop
mov
adc
jns
mov
in
cld
push
cmp
mov
sbb
fs
icebp
fldt
into
inc
stc
addr16
cli
dec
sub
lods
ja
insl
inc
daa
xlat
xchg
sub
cmp
pop
incb
repz
faddl
data16
shlb
fistpll
cmp
popl
xchg
loope
xor
addr16
lods
sub
lahf
imulb
in
push
and
out
sub
mov
aad
in
adc
xor
push
mov
add
fstps
pushf
jg
outsl
sbb
sbb
bound
inc
push
push
pop
stos
lret
cltd
arpl
sub
ds
repz
dec
ret
sub
ret
sarl
int3
inc
jbe
xchg
inc
xchg
scas
mov
test
shrl
cmpsb
inc
out
movsb
cld
mov
adc
in
pop
add
jbe
cmp
mov
jo
jle
dec
sti
dec
cmp
cmpsl
out
out
in
mov
inc
call
imul
push
jmp
gs
mov
push
lds
sarl
push
pop
xchg
cmc
outsb
pop
vmovss
and
mov
stos
xchg
xchg
pop
jl
popa
and
lret
jae
test
push
in
xchg
nop
das
loopne
mov
dec
or
fsubr
mov
sub
movsl
cmp
pop
lods
push
jne
pop
xchg
adc
leave
dec
sub
outsl
push
rolb
jp
adcb
cld
movsl
mov
mov
int3
stos
inc
fmuls
cmp
mov
cmp
xor
xchg
lea
lods
aas
or
test
test
outsb
xchg
pop
popa
mov
cmp
lea
ret
add
cld
sti
lret
add
addr16
cmp
pop
and
lret
mov
adc
sbb
pop
adc
adc
inc
mov
stc
mov
mov
mov
movsb
adc
pop
pop
sbb
add
test
sbb
rcrb
or
bound
xchg
dec
xchg
xor
mov
dec
sub
xchg
lcall
xacquire
cld
xor
leave
ficompl
jne
mov
mov
cs
pusha
ja
mov
jge
mov
addb
and
ret
int
shlb
mov
cmp
cmp
lds
mov
bound
and
sbb
les
and
inc
xor
ja
sub
pop
mov
cmpb
push
lahf
ljmp
dec
rcrl
testl
hlt
iret
mov
inc
jle
lods
xor
cmp
and
push
aam
cltd
sub
shld
pushw
cmp
pop
jnp
lea
adc
mov
xor
std
scas
insb
push
imul
in
lock
mov
and
lods
push
sub
inc
and
retw
ret
incb
sbb
fdivs
cld
push
pop
cltd
je
leave
in
aam
outsb
jecxz
push
fimuls
in
mov
adc
adc
mov
mov
xchg
movsb
mov
mov
dec
test
mov
jge
mov
push
cmp
adc
mov
inc
inc
mov
notl
cs
and
xchg
call
ljmp
and
and
aas
mov
filds
outsb
push
dec
inc
dec
out
push
movsb
push
jns
aas
cltd
ret
adc
pop
push
dec
stos
or
cmpsl
jg
fisubrs
push
in
lods
pop
mov
mov
jo
ds
or
das
add
into
or
mov
sbb
xor
pop
mov
cmpsb
les
lods
adc
mov
pop
aad
gs
test
stc
fcomp
data16
and
cmp
popf
push
out
jle
push
aad
jg
dec
mov
dec
adc
in
pop
test
std
insb
daa
xchg
ss
cmovae
xchg
dec
ljmp
test
xchg
pop
push
xchg
push
push
fs
cld
orb
dec
mov
pushf
jnp
push
ljmp
mov
xor
mov
dec
leave
jg
pop
lret
stc
popf
mov
push
xchg
into
aam
insl
insl
xor
lods
mov
xchg
cltd
mov
and
lods
sbb
add
lret
mov
test
or
cmp
mov
xchg
adc
mov
pop
jno
insl
clc
mov
pop
rcrb
out
imul
mov
fildll
pop
movsl
mov
mov
popa
mov
icebp
mov
and
cmp
mov
outsl
aam
jmp
mov
popf
and
xchg
add
and
sbb
jb
lock
scas
mov
cmp
jbe,pn
or
test
pop
mov
pop
shlb
xchg
in
jae
mov
test
mov
adc
and
sbb
cmp
add
ss
or
mov
jae
nop
in
mov
out
pop
lods
sbb
aaa
je
mov
jmp
lods
ds
cli
pusha
xlat
push
xor
jbe
out
and
add
lret
push
inc
add
jnp
push
xor
sbb
or
jmp
jmp
or
mov
xlat
xchg
into
add
add
xlat
inc
ja
in
std
lods
movsl
add
shld
push
ficoms
cwtl
lret
in
mov
pop
mov
adc
xor
push
arpl
sbb
pop
insb
mov
adc
sub
mov
scas
adc
lock
mov
int3
jbe
pop
nop
fmul
xchg
in
dec
sbb
shl
push
dec
jns
cs
bnd
cmp
ret
push
sub
imulb
and
fidivs
cmp
leave
xor
ret
lock
rcll
inc
lea
aam
cwtl
inc
and
cwtl
das
fidivs
push
lods
mov
shlb
bswap
loope
mov
flds
jne
add
out
cmp
xlat
fdivrs
in
int3
sbb
mov
ret
cmpsb
movsb
enter
shlb
xchg
mov
dec
xchg
mov
shrl
pop
stos
cs
sbb
and
adc
jb
js
movsb
out
xor
int3
lahf
inc
movl
lcall
icebp
bnd
pop
fidivs
not
xorb
outsb
sub
outsl
inc
add
mov
int3
sbb
sub
stc
test
loope
jns
add
mov
pop
adc
scas
lock
bound
dec
rclb
outsb
mov
pop
mov
iret
push
fimull
out
into
or
adc
or
les
js
sub
mov
out
lret
mov
inc
daa
in
movsb
sti
loopne
sahf
bound
add
ss
clc
test
pop
cmp
dec
xor
cmp
lahf
sarb
shl
ror
push
mov
dec
mov
sub
test
and
int
aaa
neg
daa
mov
adc
xchg
sbb
mov
add
idiv
dec
sub
jle
insb
lret
pop
mov
inc
sub
push
mov
icebp
lods
jge
xor
dec
jns
add
je
movsb
mov
out
jmp
dec
add
insl
mov
jb
push
clc
dec
imul
in
sub
fnsave
negl
xor
sbb
lahf
setbe
jnp
xchg
mov
enter
dec
es
punpckhbw
lret
xor
dec
idivl
push
sbbb
add
push
mov
aam
push
mov
fildl
jnp
push
outsb
loop
je
hlt
sarl
mov
adc
dec
mov
mov
rol
jg
xchg
das
lret
lock
out
add
mov
or
inc
loopne
jb
popa
push
arpl
or
out
mov
cmc
mov
fwait
enter
xor
sbb
lods
sbb
out
or
add
rcr
and
pop
sahf
pop
popa
sub
jg
dec
insl
and
adc
lods
out
mov
enter
mov
mov
ret
adc
adc
ljmp
xor
push
mov
jp
mov
sub
cltd
popa
adc
mov
or
test
push
out
dec
jp
mov
pop
mov
adc
int3
sub
cwtl
push
lods
sbb
inc
push
loop
and
xor
xor
fmul
add
cmc
shll
lds
addb
dec
jecxz
decl
fisubrs
push
aas
mov
test
out
dec
and
inc
out
aaa
fistl
mov
sbb
push
int3
lds
hlt
rcrl
pop
ficoms
mov
dec
iret
dec
xlat
lods
sbbb
xor
mov
jo
jne
inc
pop
adc
mov
adc
adc
lahf
test
in
xchg
cmpsb
in
adc
mov
sbb
sub
add
push
scas
sub
pop
mov
adc
jg
cmp
addr16
cmpsb
lods
pop
or
mov
push
les
data16
or
repnz
push
sub
mov
sbb
in
filds
stos
sbb
dec
fimull
enter
push
add
ja
sbb
popa
lret
loop
add
inc
test
out
mov
push
stos
test
jns
xchg
cmc
adc
xor
dec
mov
inc
push
fiaddl
add
xchg
sbb
repnz
pop
mov
popl
enter
add
lea
cmp
in
movsb
outsb
cwtl
ret
aaa
out
test
lock
lahf
jns
pop
mov
pusha
pop
test
stc
shrl
dec
iret
lahf
mov
adc
add
xchg
les
aas
add
les
gs
mov
and
cmp
fcomp
sysexit
lods
mov
and
or
mov
mov
sbb
xlat
ljmp
shrl
mov
inc
dec
popa
mov
repnz
sbb
mov
ss
xchg
pushl
in
mov
hlt
dec
mov
gs
jecxz
shll
add
clc
in
fwait
adc
pop
lret
adc
fidivrl
xlat
iret
repnz
mov
cmp
jnp
popf
mov
movsb
cmp
daa
out
jmp
and
pop
decl
xor
leave
pop
fwait
ret
xor
add
cwtl
sub
inc
pop
push
sub
push
xor
out
mov
stos
xchg
mov
inc
jb
and
jae
mov
push
loopne
popf
xchg
xlat
nop
decl
mov
sub
and
inc
lcall
ljmp
js
enter
test
or
mov
lcall
ja
fs
or
and
pop
and
wbinvd
add
int
int3
sub
sub
fwait
ss
pop
ds
fsubs
or
ds
jg
cmpb
loopne
inc
shlb
ret
xchg
popf
add
jl
mov
lahf
das
inc
out
xlat
adc
loop
aam
pop
psrlw
jge
ljmp
lea
mov
push
xchg
inc
aas
adc
ja
lods
imul
insl
jmp
arpl
dec
adc
cmc
adc
sbb
aad
pop
fsubs
imul
mov
cmp
fnstcw
adc
sarb
sahf
mov
and
outsl
fdecstp
dec
sub
bound
dec
iret
idivl
mov
loope
mov
jbe
stos
test
and
xlat
jb
and
inc
dec
ja
mov
test
in
mov
testl
scas
sbb
lock
sbb
and
and
divl
fcmovbe
push
xor
cmpsb
xor
inc
lock
sub
cltd
xlat
jmp
dec
out
inc
fcoms
sbb
dec
jns
inc
push
cmp
iret
rcr
adc
sahf
mov
stos
push
dec
mov
jle
add
fstpl
aad
repz
stc
shrb
sbb
scas
in
xor
sub
lcall
push
jb
int
fsubl
aaa
mov
popf
inc
and
mov
int3
cmp
clc
mov
ja
mov
shl
jmp
ret
cmp
sahf
sahf
xlat
lods
xchg
imul
movl
in
movsb
daa
pop
and
adc
cli
lods
lods
lcall
xor
or
insb
fidivrl
ss
ja
and
dec
dec
aaa
aaa
sub
adc
out
inc
adc
faddl
stc
mov
je
cmp
sbb
pushf
pop
jne
jbe
sbb
mov
or
stos
stc
sub
sub
sub
dec
mov
dec
imul
mov
pop
mov
mov
jge
cmpsb
daa
jecxz
jo
jae
scas
out
or
and
mov
xchg
fcompl
or
jo
loopne
ss
stos
outsl
out
sub
jge
pop
mov
push
jnp
lock
aaa
add
data16
sub
adc
int3
mov
and
mov
pop
jb
dec
popf
decb
jg
cmpsb
inc
in
dec
dec
daa
rclb
sar
xor
cmp
add
shll
fcomip
jae
pop
enter
ret
out
fbstp
ljmp
mov
les
or
je
fcoml
lcall
xor
call
loop
hlt
shr
xchg
inc
sarl
or
push
int
scas
ret
nop
data16
cmp
data16
call
lcall
icebp
xchg
addr16
mov
movsb
int
cmp
popa
andb
inc
pop
lea
add
jnp
adc
or
mov
cmp
jl
or
ljmp
in
scas
das
pusha
jno
popa
jno
repnz
pop
xchg
jmp
stos
or
jmp
add
rolb
push
mov
ret
ficompl
and
adc
loop
sub
add
push
push
iret
mov
enter
cmp
and
jp
xorl
daa
push
mov
pop
mov
insb
rolb
xchg
sbb
push
lcall
pop
sbbb
inc
cmc
dec
andb
push
int3
lret
and
test
add
pop
xchg
push
not
xchg
out
xchg
out
into
dec
ret
ds
sub
roll
sub
stos
cmpl
nop
inc
mov
addr16
lahf
xchg
ret
gs
nop
in
testl
mov
mov
call
pusha
mov
and
ret
bound
or
add
or
ja
cmpsb
xor
mov
mov
stc
xor
push
outsl
jb
clc
dec
mulb
dec
xor
xor
outsl
add
test
loope
or
sbb
adc
jp
je
sub
fisubs
push
pop
adc
dec
movsl
sub
das
mov
popf
xchg
out
xchg
cmp
push
inc
sti
gs
cwtl
int3
jmp
mov
mov
adc
add
pop
push
outsl
test
mov
inc
fbstp
pop
subb
push
jnp
pop
test
fwait
xor
fwait
ja
inc
stc
gs
popa
push
add
push
gs
or
cmc
out
push
adc
fidivl
sbb
dec
pop
push
or
push
shrb
mov
in
addl
lret
xor
test
pop
xchg
pop
sub
or
outsl
adc
push
jmp
mov
mov
das
lret
ss
pushf
std
lock
xchg
lods
inc
cld
mov
dec
scas
test
sti
fidivrl
xchg
scas
aam
ja
xchg
fistps
adc
in
jmp
inc
scas
inc
and
ret
push
fsubrl
gs
movsl
orb
ljmp
push
and
rorl
outsl
int3
es
aad
outsl
or
mov
jb
mov
js
negb
stos
and
ror
sub
mov
xor
sarb
bound
push
lret
test
or
div
and
sub
pop
js
fistpl
loop
jbe
or
or
fwait
not
mov
iret
push
adc
pop
xchg
cmp
push
and
lcall
ret
sbb
or
cmp
vrsqrtps
xor
push
imul
push
daa
sti
loopne
or
pop
and
and
jns
inc
adc
cld
jb
jmp
sub
iret
dec
popf
movsl
movsl
fs
in
addr16
sahf
mov
jns
cmp
mov
repnz
and
gs
fstl
xchg
dec
in
ret
pop
ljmp
pop
loopne
lcall
sub
add
push
iret
mov
shlb
addb
data16
or
test
push
and
jns
dec
jno
adc
inc
stos
ss
scas
test
sbb
cmp
addr16
and
xor
scas
sbb
mov
test
stos
dec
pushf
sbb
sbb
mov
cmp
mov
xchg
mov
pop
mov
cmp
jg
icebp
adc
and
sbb
sub
push
push
call
roll
sbb
xchg
mov
dec
inc
adc
fcmovnb
outsb
or
repnz
jg
xchg
sahf
adc
fdivrl
popf
stos
in
xchg
sbb
aam
hlt
jo
jmp
pop
pushf
cmp
hlt
pop
testb
in
lods
fs
inc
jae
adc
out
xor
mov
filds
dec
inc
push
fiaddl
imul
xlat
cmp
fidivrl
lods
insb
icebp
push
jne
pop
jbe
cwtl
arpl
nop
loopne
sub
push
mov
int3
decl
pop
mov
jle
push
inc
insl
sbb
sub
in
pop
pop
mov
sub
ds
repnz
adc
inc
or
sti
add
cwtl
xchg
fdivr
inc
dec
mov
aas
add
and
pop
in
jle
sub
movl
push
std
sub
movsb
push
andb
jmp
fs
jno
sbb
mov
cs
es
jo
pop
jbe
push
and
icebp
and
std
sub
outsl
mov
imul
out
pop
cli
pusha
subl
out
adcb
loopne
push
push
popf
sub
mov
fs
out
pop
or
mov
push
or
jge,pt
and
hlt
dec
jno
clc
inc
inc
sbb
in
and
mov
nop
iret
dec
orl
data16
arpl
jb
push
xchg
lea
push
sub
mov
adcl
negl
pop
popa
inc
lret
sarl
nop
pop
in
shrb
outsb
cmp
inc
sub
rcl
jmp
inc
loop
lret
mov
push
sub
push
mov
cmp
and
ret
sub
in
push
mov
jp
lds
xchg
jne
insb
call
dec
mov
mov
out
cld
pop
movsl
inc
daa
aaa
test
sbb
iret
out
jmp
xor
daa
lds
pop
daa
inc
pushf
mov
cmc
in
add
in
dec
in
sub
inc
fimull
push
jo
sub
jbe
push
fsubs
mov
mov
std
lods
mov
ficomps
stc
lea
jns
fs
stos
out
or
lahf
mov
int3
mov
movsl
pop
dec
and
inc
cltd
pop
stos
call
adc
lahf
cs
xchg
rclb
push
mov
stc
xchg
sbb
je
xchg
dec
clc
sbb
ds
imul
out
inc
or
decb
aas
int
push
insl
push
mov
dec
mov
mov
push
or
pop
push
nop
loop
subb
rolb
scas
xor
fstp
mov
cli
fcmovb
push
lods
pop
push
fistl
test
das
pop
sub
xor
je,pt
xor
mov
sbb
xchg
jle
outsb
mov
push
mov
loop
push
push
pop
jbe
lcall
jae
xor
mov
loop
cmp
jg
jmp
mov
test
sbb
mov
inc
fistl
iret
sbb
add
mov
in
mov
cmpsb
jbe
cmp
inc
je
jb
jae
xor
pop
clc
add
decb
xchg
add
test
jmp
movsb
mov
sbb
jb
jp
test
icebp
mov
adc
pop
xchg
das
dec
add
cmpsb
cmp
aaa
fucompp
dec
popf
popa
mov
push
adc
fildl
outsb
dec
arpl
xchg
bound
rolb
insl
aad
fisttpll
scas
ljmp
mov
xchg
or
cs
scas
pop
ss
rcrl
movsb
cmp
sahf
jb
pop
in
xor
adc
and
mov
fwait
cmpsl
pusha
mov
dec
js
cmp
sbb
aaa
gs
fs
mov
das
test
dec
jne
pop
mov
and
clc
pop
in
jae
jmp
pop
dec
movsl
andb
dec
out
xchg
xor
mov
arpl
dec
inc
pusha
mov
and
scas
mov
mov
or
pavgw
mov
push
cmp
iret
pusha
jnp
ja
add
push
xchg
sbb
lock
mov
adc
ret
xchg
dec
jne
jb
lods
and
mov
mov
adc
mov
dec
rcrb
mov
pop
inc
dec
fsub
imul
pop
std
aad
mov
cmp
shlb
fwait
mov
add
pop
call
sub
pop
lret
inc
into
pop
ja
push
sbb
arpl
cmp
pop
cmpsl
mov
fisttps
mov
ret
aas
or
and
sbb
push
dec
mov
jmp
cmp
in
jae
adc
xor
cld
and
inc
cmpsl
dec
test
mov
shlb
insl
inc
add
shll
mov
mov
pusha
adc
inc
mov
mov
int
lock
cmpsl
xor
adc
test
add
xlat
push
subb
jg
pop
hlt
push
imul
and
mull
dec
mov
in
lods
pop
push
push
nop
xchg
fwait
inc
sbb
aad
jne
jbe
in
dec
jecxz
repz
in
fsubrs
dec
lcall
in
jg
jno
out
scas
lds
sub
and
xchg
mov
inc
pop
jmp
jmp
jne
push
ss
insl
enter
inc
fldt
inc
mov
pop
push
push
shrl
ljmp
push
inc
sbb
in
iret
test
aad
lock
push
sbb
hlt
add
and
ret
fldt
cwtl
inc
jl
pop
shrl
stos
jecxz
lcall
repz
xchg
mov
adc
cmp
adc
outsb
xchg
pop
scas
xor
inc
sub
imul
pop
aad
adcl
fs
jns
push
insb
dec
movsl
js
inc
lods
pop
rcrb
in
jns
push
sub
mov
fnstenv
pop
in
in
and
or
jecxz
jnp
rclb
add
and
mov
mov
out
scas
test
or
adc
inc
mov
push
xchg
xchg
cwtl
fwait
shlb
or
add
mov
push
rcr
mov
lret
pushf
mov
test
cmpsl
inc
fnsave
dec
sbb
mov
dec
xor
mov
sbb
or
in
sub
jno
sbb
sbb
and
mov
pop
fistpll
cld
test
cmp
inc
adc
pop
cmc
push
not
pop
xchg
sub
xchg
inc
pushf
inc
push
dec
cmp
les
mov
fldcw
test
xchg
mov
int3
test
xor
xchg
imul
inc
mov
ja
dec
ret
inc
push
pop
xor
xchg
notl
jl
sub
mov
popa
insb
push
les
ret
xor
inc
mov
add
sub
ss
xor
mov
push
stos
adc
ret
in
imul
ljmp
pop
lret
mov
push
or
flds
js
fwait
pushf
shlb
cmp
jno
mov
lret
test
sub
jle
out
cmp
out
sbb
cmp
sub
sub
and
mov
mov
loope
xchg
lcall
xchg
sub
ljmp
js
push
imul
into
inc
je
je
insl
loopne
pop
or
in
jb
jmp
lcall
clc
lock
out
dec
cmp
test
add
jp
pop
test
lret
dec
and
jl
inc
push
push
dec
aaa
mov
inc
test
adc
jecxz
shrl
test
repz
pop
movsb
cmp
fisttps
pop
cmp
mov
addr16
aam
imul
es
pop
adc
cld
fs
mov
push
stos
shrl
add
cmp
ret
adc
fs
cmp
loop
dec
ja
aas
hlt
aam
call
imul
mov
iret
xchg
ret
lods
pop
hlt
cmp
cmp
mov
pop
xor
pop
or
hlt
mov
lds
ja
lods
cmp
sti
cltd
repnz
inc
lods
pushl
inc
mov
test
mov
je
mov
fdivr
outsb
mov
xlat
or
stc
mov
and
mov
sbb
aas
loop
sub
aas
and
call
dec
push
xbegin
mov
call
or
int3
push
pop
sub
std
jne
mov
icebp
push
inc
dec
xchg
lea
sbb
jno
mov
push
scas
xor
stc
adc
and
mov
push
inc
cmp
mov
aaa
push
sbb
or
out
mov
out
movsb
out
std
sti
pop
test
and
repz
pop
scas
popl
jae
mov
xchg
loope
jle
or
insl
inc
push
insl
ds
sub
pop
mov
cltd
pop
cwtl
pop
fiadds
subb
jle
push
icebp
std
mov
jo
fisubl
mov
dec
cld
or
mov
jno
sub
sbb
mov
cmp
fisttps
lock
out
insl
jmp
lds
aas
sub
mov
mov
out
cmc
xchg
in
dec
sbb
inc
or
jb
mov
jmp
bound
arpl
out
add
mov
cwtl
xor
push
pop
and
sbb
xchg
in
sbb
fistps
cli
int3
subb
test
and
xor
sbb
lahf
mov
ljmp
scas
dec
or
push
rcll
xchg
mov
arpl
in
lods
arpl
scas
sbb
loope
dec
mov
mov
sub
rcrb
sbb
ds
pusha
in
mov
or
sbb
pop
xor
inc
orl
xchg
js
add
pop
cmp
movsl
insb
call
xchg
jae
inc
jae
jo
add
ret
loopne
fst
cltd
shll
cld
jnp
enter
jecxz
push
addb
lret
mov
dec
cmpsb
xchg
sub
adc
mov
sbb
dec
jecxz
repz
mov
mov
sahf
add
mov
sub
pusha
movsb
mov
filds
dec
sti
fnstsw
insb
xchg
leave
stos
xchg
jge
lret
xor
mov
cli
das
rol
mov
mov
push
jge
lret
movsb
ror
mov
jb
fadd
stos
cmp
xor
inc
in
add
jae
fdivrs
sub
cmp
inc
sbb
dec
cmc
dec
push
push
inc
push
adc
dec
loop
pop
dec
or
call
push
imull
or
ficoms
stc
jge
mov
jle
dec
fnstsw
nop
aas
sub
adc
mov
hlt
pop
cltd
jl
cmc
bound
jle
call
cmp
mov
mov
inc
push
lahf
iret
mov
push
or
adcl
push
sbb
push
icebp
push
pushf
setp
jnp
test
and
lret
call
add
sub
mov
fcomps
xor
pusha
iret
jmp
pop
jnp
out
shl
jbe
ss
mov
mov
push
gs
mov
dec
push
dec
std
mov
mov
jo
test
mov
xor
test
sbb
mov
das
cli
movsl
and
dec
jmp
test
fmul
add
cs
lods
aas
leave
jl
dec
fisubrl
add
pusha
adc
pop
data16
ficoml
idivl
fisttps
dec
pop
adc
inc
mov
mov
mov
fwait
adc
sbb
hlt
fdivrl
cmp
sbb
dec
inc
js
aas
icebp
sahf
scas
add
or
jp
repz
lcall
ds
icebp
int
adc
pop
leave
xor
mov
sub
adc
insl
mov
outsl
es
sahf
inc
sub
fwait
or
adcb
push
stc
cwtl
pop
push
out
xor
inc
lcall
inc
fwait
enter
into
incl
add
xor
shlb
into
adc
ds
sti
cmp
mov
jne
push
aaa
icebp
xchg
ror
vscatterqps
rcrb
mov
dec
packsswb
arpl
push
jecxz
les
sub
push
jb
pop
jle
or
inc
push
in
bound
lods
aam
mull
xor
ja
add
cmc
and
or
cltd
cld
movb
cmpsb
ret
lret
xlat
lret
cmp
sub
adc
int
xchg
or
mov
push
hlt
repz
xchg
popf
mov
pop
mov
mov
into
mov
rorb
and
rcll
push
lcall
lods
es
adc
adc
jmp
rcll
xchg
test
jecxz
pop
fdivl
fimuls
mov
pop
in
cwtl
push
lahf
fbld
ss
sbb
cli
or
add
mov
fnstenv
mov
dec
lret
ja
lcall
mov
xor
cmp
into
pop
out
out
aad
push
push
mov
xorb
shlb
std
or
nop
dec
repnz
imul
pop
ror
push
pusha
sarb
popf
sub
push
je
test
pop
in
stos
jnp
rolb
inc
xchg
dec
sbb
xor
cmp
or
loop
incb
pop
mov
loope
dec
dec
push
push
sbb
int3
ret
push
es
jo
and
pop
cmpsb
mov
push
adcl
imul
cmp
xor
mov
dec
sarl
lahf
xchg
sub
sbb
cmpsl
call
pop
in
mov
cwtl
test
jecxz
cmp
xchg
jb
int
fsubrl
and
test
stos
jbe
add
inc
xlat
mov
das
adc
test
leave
ret
shlw
aas
stos
xchg
ljmp
push
add
cli
cld
dec
mov
mov
es
jnp
mov
sbb
jb
in
repz
popa
clc
pop
push
lods
jmp
loopne
gs
pop
jbe
fucomi
inc
faddl
jae
mov
xchg
mov
les
rcrl
divl
add
iret
enter
testl
xchg
int
sbb
xor
or
adcb
loopne
sbb
cwtl
shrb
inc
mov
cli
pop
leave
xorb
ret
sbb
and
fildll
mov
popf
and
jae
test
aam
xchg
lret
movsb
or
pop
sti
rolb
xchg
jbe
js
pop
enter
ss
and
push
shll
cmpsb
jg
inc
test
lds
sub
negb
jns
insb
push
shlb
outsl
dec
sbb
pop
lods
and
movsl
lods
clc
out
and
sub
orl
jge
mov
dec
shlb
dec
xor
lea
pop
dec
cmpsb
mov
push
xchg
addr16
fcomi
and
arpl
xchg
mov
iret
call
into
dec
or
rcrb
loop
push
jmp
shll
insl
shlb
jmp
inc
and
add
rcrb
inc
vmovaps
add
jns
sub
es
fsubs
add
mov
or
sbb
sub
push
cwtl
add
popf
out
ds
cmp
mov
movsb
mov
and
jg
or
or
adc
inc
mov
sub
mov
imul
mov
outsl
test
rcrl
aaa
test
into
lds
insl
subl
cmpsl
mov
mov
nop
adc
cmp
push
or
nopl
or
push
jb
scas
jbe
icebp
cli
mov
bound
jge
std
arpl
xchg
lea
outsl
inc
jg
fiaddl
push
daa
jge
xchg
push
lods
xor
iret
popa
push
pop
pop
pop
adc
ret
pop
fimull
enter
or
test
dec
push
negl
fneni(8087
pop
nop
jmp
push
cld
in
pop
push
test
inc
in
lods
fisttps
stos
sbb
xor
or
scas
sbb
xchg
sti
sbb
add
jnp
rclb
repz
pop
fcmove
inc
mov
imul
xor
sub
cmp
and
les
sub
jge
sbb
xchg
dec
add
loop
fstpl
repz
jnp
scas
add
xor
cld
clc
xor
pop
mov
pushf
push
pusha
mov
lret
into
pop
sahf
sbb
out
lea
add
lock
xchg
mov
dec
clc
xor
push
adc
mov
aas
mov
xor
add
test
dec
icebp
orb
xchg
lcall
in
lods
or
xchg
cltd
and
mov
push
or
mov
sarl
js
push
repz
enter
dec
lock
lods
inc
test
insl
mov
dec
inc
fcmovb
xchg
adc
mov
subb
mov
cli
out
cmp
movsl
sti
xchg
in
daa
or
daa
daa
out
inc
movsb
and
movsb
mov
push
xchg
movsb
or
jg
loopne
in
pusha
mov
push
sub
jmp
xor
ret
add
iret
popa
call
lret
ja
push
loopne
pushf
dec
sub
pushf
and
aad
add
inc
mov
xor
test
dec
imul
mov
sbb
mov
es
mov
in
dec
mov
pop
pop
out
cmc
movsb
push
adc
and
push
fwait
add
stos
in
out
shlb
mov
mov
std
je
push
mov
xchg
cmp
aam
dec
arpl
stos
paddd
out
pop
and
jmp
fldcw
and
xor
mov
mov
sbb
shll
scas
add
fadd
cmp
aaa
fisubl
fidivl
ds
ja
stc
add
je
cs
and
ret
ds
dec
jle
lds
inc
outsb
call
mov
enter
or
ljmp
inc
dec
insl
lret
fidivs
shr
frstor
jmp
inc
in
adc
std
cmpsb
jnp
pop
rcrl
pop
scas
sub
fdivl
or
add
lret
sbb
call
pusha
push
xchg
out
push
mov
cwtl
dec
or
inc
jg
dec
sub
loop
xchg
cmp
and
movsb
in
inc
out
rcll
stos
jnp
push
mov
test
std
das
sub
pop
dec
sub
in
outsl
addr16
movsl
nop
xchg
nop
call
dec
sub
mov
pop
sbb
ljmp
lea
fildll
and
ret
mov
jge
enter
icebp
dec
pop
repz
loop
out
cmp
loop
dec
inc
sarl
or
push
fst
adc
outsb
test
push
dec
jle
notl
clc
aaa
fs
ds
bound
scas
and
jns
add
xchg
fmull
sbb
outsl
add
jnp
mov
scas
cmp
jge
shlb
and
gs
xor
dec
jbe
xchg
fsts
imul
inc
ss
ljmp
mov
mov
add
jne
or
pushf
shrl
mov
fldcw
test
mov
mov
loop
test
mov
rcll
aad
out
push
jb
sbb
push
adc
cwtl
add
lret
std
pushl
lret
fwait
out
out
cld
push
mov
mul
mov
sbb
adc
stos
push
xlat
jecxz
mov
xchg
ret
pop
lea
je
test
and
mov
jge
add
adc
jp
add
sbb
imul
sub
popf
adc
mov
or
xchg
xchg
mov
cmpsb
xchg
sahf
and
or
jg
xor
inc
pop
jmp
sbb
adc
mov
mov
std
inc
mov
sub
sbbl
or
negb
inc
xor
js
rdmsr
cmp
outsb
or
or
xor
push
call
adc
jo
xor
xchg
sub
dec
add
or
mov
xchg
and
fwait
lahf
paddsb
movsb
mov
fwait
dec
push
adc
mov
sbb
imul
pop
jecxz
cmpsb
push
and
out
sbb
je,pn
inc
cld
popf
mov
fs
adc
inc
iret
int3
inc
shlb
loope
push
cld
push
push
stos
or
pop
inc
xor
iret
add
or
fmuls
xor
jle
rcll
call
mov
add
cmpb
mov
popa
out
in
loope
in
mov
or
or
mov
aas
aas
push
sbb
sahf
xchg
xchg
fdivl
aam
into
push
dec
xchg
or
test
dec
dec
test
testb
in
jne
mov
scas
push
into
andb
imul
mov
fwait
inc
mov
push
or
jp
rcrl
push
push
adc
cmp
mov
sbb
fisttps
dec
in
add
add
cwtl
or
adc
mov
mov
lds
sarb
comiss
aas
mov
movsb
push
xchg
in
inc
inc
addr16
jo
pop
gs
popa
xchg
in
push
pop
outsl
aam
lock
or
mov
ljmp
mov
pop
xor
loopw
xchg
fnstcw
cmc
into
and
pusha
mov
mov
or
das
pop
outsl
scas
inc
cmp
cmpl
imul
int3
jae
sub
push
test
mov
mov
mov
push
loopne
mov
roll
inc
adc
pop
pop
iret
or
inc
data16
loope
add
mov
stos
xor
cmp
cmpb
push
imul
sub
std
mov
xor
mov
dec
or
icebp
mov
fbld
roll
rorl
add
cmc
lea
sbb
dec
mov
add
divl
xor
enter
pusha
push
test
mov
cld
lea
mov
lock
sub
scas
insl
cmp
lea
daa
mov
loopne
enter
mov
mov
mov
adc
push
loop
push
repnz
inc
insl
mov
lahf
lcall
addl
aaa
or
pop
cmp
jg
lds
in
or
sbb
out
mov
sbb
icebp
pushf
jecxz
inc
mov
cmp
add
add
push
js
stos
xor
jae
push
aas
mov
imul
inc
fstps
stc
inc
or
xchg
cs
cmp
dec
ret
push
mov
mov
subl
add
mov
jo
mov
lock
jl
inc
addl
cmp
ja
outsl
mov
insl
mov
repnz
adc
aas
push
pushf
inc
dec
rcl
xchg
xchg
cmpsl
jl
sub
ret
xor
loop
insl
out
insb
outsb
mov
cmp
and
js
movsb
fcompl
xchg
fwait
cmpl
push
dec
mov
pop
int
inc
fbld
hlt
fildl
addr16
jb
jecxz
in
pop
lret
in
push
push
clc
icebp
movsl
xchg
xchg
jp
aad
cwtl
pop
jp
dec
pop
ja
pop
or
mov
and
popa
fisubrs
dec
mov
and
ret
mov
shlb
dec
or
push
mov
mov
or
mov
sub
lret
ja
inc
cld
or
xor
lods
mov
dec
inc
imul
movsb
dec
or
inc
cli
or
stos
jp
xchg
les
lcall
mov
daa
fs
pop
ss
cwtl
movl
cmp
xchg
aas
mov
imul
mov
ljmp
repz
cld
mov
adc
push
lret
imul
icebp
push
mov
jnp
fwait
push
mov
push
in
mov
cmp
push
imul
int
or
and
xlat
ficoms
fistl
in
jmp
push
xor
inc
xchg
mov
xchg
les
cmp
mov
outsb
std
xorl
loopne
subl
or
xchg
add
or
gs
push
subb
inc
fld
mov
gs
push
cmp
pop
sahf
dec
push
dec
lret
imul
pop
adc
pop
dec
sbb
addr16
inc
sahf
pop
test
mov
cli
lods
or
mov
cmpsb
sub
pop
gs
pusha
cmp
jge
fimull
stos
and
cmp
mov
aas
mov
fadd
clc
push
out
stos
ficompl
mov
out
out
push
inc
jle
ret
inc
cld
cmpb
scas
or
pop
leave
mov
les
fildl
bound
inc
cmp
ss
iret
mov
cli
movsl
xorl
imulb
pop
push
adc
xchg
cmp
jnp
popa
sarl
xchg
mov
mov
sbb
cmpl
popf
mov
push
jle
pop
push
fcmovu
stos
pop
pusha
xor
ljmp
faddl
push
fcoms
pop
or
test
scas
cs
mov
fistps
sub
bound
dec
mov
subl
pop
movsl
lock
jae
fdiv
sub
and
cmp
addr16
out
mov
or
push
mov
in
iret
mov
push
pop
pop
icebp
push
aam
imulb
pop
jmp
push
pop
xchg
dec
loope
cmp
xor
aaa
sahf
inc
cmpsl
mov
lret
jbe
xchg
popa
xchg
add
xchg
inc
jbe
in
or
cmc
push
and
sub
fstps
add
fstps
xchg
mov
scas
int
nop
stos
jl
add
and
lock
movsb
cmp
xor
inc
popa
add
into
push
cmp
and
test
arpl
mov
mov
jo
push
lock
stos
lea
icebp
xor
dec
sbb
aad
adc
push
push
int3
jns
fwait
lea
out
mov
les
xlat
mov
sub
dec
les
movsb
xchg
cmp
cmpsb
or
pop
jbe
xchg
add
mov
mov
lret
push
pushf
jne
pop
fdiv
sbbl
pushf
aaa
xchg
outsl
xlat
xor
or
bnd
out
pop
aaa
seto
xor
std
push
push
ss
cmpsb
mov
push
add
push
xchg
ret
into
fldcw
inc
sub
jg
mov
xlat
xchg
mov
sti
dec
emms
pop
je
pop
outsl
orl
mov
xchg
mov
sub
dec
stos
int
ret
jmp
jg
scas
jmp
sbb
shll
call
pop
nop
sbb
adc
jo
test
inc
not
push
lods
mov
pop
or
sbb
shrb
inc
mov
ss
add
cwtl
mov
adc
inc
pop
mov
mov
jl
fnstsw
iret
dec
jnp
jl
fsubs
xchg
popf
sub
fidivl
push
mov
lods
adc
jnp
fsubs
and
xor
insl
sub
xor
add
sbb
lods
pop
sub
popf
in
je
jno
push
mov
mov
sub
and
iret
push
jnp
data16
sbb
inc
and
repnz
test
sbb
sbb
std
sub
scas
into
ret
mov
faddl
call
iret
sub
ret
cli
jmp
push
jnp
imul
and
stos
mov
adc
mov
or
cwtl
sbb
pop
adc
cmp
add
add
lods
cmp
dec
in
in
add
aam
ljmp
jnp
insl
clc
jp
shl
test
mov
leave
das
mov
jne
dec
cltd
arpl
sbb
mov
adc
clc
adc
pop
adc
add
pmaxub
xchg
scas
int
cmpsb
dec
sti
repnz
mov
dec
popa
cli
imul
imul
xor
cltd
push
bound
jns
iret
rcrl
inc
inc
shrl
cmpsb
pop
ror
outsb
popl
aad
negb
sar
cmp
cmp
add
loope
xchg
cmp
das
inc
and
pop
pop
xor
imul
lret
push
xor
pavgb
aas
sbb
mov
stc
jmp
mov
stc
arpl
inc
push
inc
push
out
idiv
adc
mov
std
enter
inc
inc
in
push
pop
cmpsb
cmpsl
fstl
inc
bound
push
adc
jb
lret
cmp
aam
mov
sbb
push
pushf
js
out
push
insb
adc
push
imul
pop
into
loop
divl
int
cwtl
lods
and
add
mov
dec
mov
fdivl
add
lock
into
mov
mov
or
std
les
stc
cmpb
inc
inc
out
nop
cmpsb
mov
pop
jge
leave
dec
cld
mov
add
add
adc
lret
add
pop
lcall
ss
addr16
lcall
cmp
nop
insl
mov
push
or
cmp
adc
jbe
mov
pop
nop
mov
pusha
sbb
jl
aaa
sbb
inc
out
bound
xor
mov
and
int3
inc
fs
addr16
add
adc
inc
dec
addr16
aas
cld
imul
mov
cmp
and
cs
bound
push
jmp
xorb
cltd
jg
fadds
repnz
push
imul
xchg
mov
je
or
lock
pop
mov
test
loope
adc
push
jae
cmpsl
std
notl
arpl
call
repz
mov
ja
mov
sbb
and
mov
jne
dec
inc
push
push
or
sub
mov
push
adc
or
ret
cmp
mov
fisttps
adc
push
sub
dec
xlat
push
xor
mov
lock
flds
das
fs
pop
ss
xchg
cwtl
aaa
fwait
inc
mov
pop
dec
xor
mov
mov
xor
mov
lret
pop
xor
add
cld
lahf
lds
shll
dec
insl
test
pop
aaa
xor
shrb
push
jge
mov
sti
xchg
popf
mov
and
bound
out
push
xor
xor
out
mov
sbb
pop
shll
repnz
int3
ds
jmp
dec
arpl
mov
or
fildll
loopne
xchg
sahf
push
rcl
xor
pusha
cld
cmpsb
insl
addr16
mov
popa
xor
push
jg
ds
push
xor
je
jne
mov
popf
xor
dec
scas
inc
sarb
xor
pop
es
jnp
cmp
jg
pop
push
xchg
or
mov
pop
es
lret
out
sbb
fisttpl
out
movb
cld
sub
mov
push
adcb
xchg
jo
movsl
add
imul
lret
int3
in
adc
xor
pop
ljmp
icebp
sbb
sub
test
scas
pop
iret
or
fadds
xor
ret
mov
mov
pop
mov
pop
aad
cmp
jp
popf
sbb
cli
sbb
lahf
mov
xorl
xor
cmc
pop
mov
push
adc
or
jmp
mov
inc
arpl
mov
mov
mov
sub
iret
adc
daa
add
cmpsl
push
adc
repz
hlt
push
sub
or
jo
sub
and
bound
mov
fcomip
shll
mov
aam
ds
mov
push
pop
mov
lods
test
jmp
sub
filds
jg
jge
rcl
scas
pusha
mov
jbe
xor
idivl
rorl
or
out
je
aam
rorb
in
pop
sbb
addr16
add
push
adc
popa
nop
xchg
fisubrl
test
out
pop
in
pop
std
test
hlt
mov
sarl
or
cwtl
insb
sbb
stos
xor
rcll
imulb
mov
pop
mov
jmp
fsubrl
fs
into
lcall
clc
lods
stos
adc
sbb
jl
jae
sbb
mov
sar
cli
stc
sahf
cmp
jmp
xchg
icebp
xor
rclb
push
testl
xchg
clc
pusha
les
jo
push
jno
and
stc
push
mov
je
pop
movsl
rol
inc
inc
ja
jmp
in
mov
repnz
jb
adc
and
push
cli
mov
cli
cs
push
ljmp
lea
fildl
int
lcall
call
jb
push
jae
in
mov
sub
lret
pop
mov
pop
frstpm(287
call
pop
sarb
add
and
loopne
lcall
pushf
shrb
loope
cmp
adc
pusha
test
pop
popa
inc
cmp
xor
inc
imul
mov
add
mov
sbb
jno
and
stos
icebp
push
fs
fists
loop
cli
jo
aad
or
and
out
popa
mov
pop
cmpsl
fisttpll
jns
sub
outsl
adc
jge
mov
mov
cmpsl
pop
sahf
and
fstps
sbb
pop
sti
leave
sbb
xchg
aaa
js
cmp
andl
mov
dec
idivl
dec
stos
adc
lret
jb
loopne
pushf
push
jecxz
insb
jmp
and
icebp
lcall
jno
aad
dec
adc
cmpsl
sbb
ljmp
ret
or
xlat
pop
cs
mov
xchg
imul
fs
and
and
cli
movsb
js
cmp
hlt
loope
or
mull
insb
ds
das
push
jecxz,pt
shld
jae
dec
js
jle
outsl
or
fisttpl
push
fcmove
mov
call
gs
outsl
insl
and
dec
test
fists
inc
mov
stos
add
dec
cmp
pop
sub
popf
mov
xor
ret
cmp
pop
test
out
lock
cmp
repnz
xlat
jnp
mov
pop
clc
outsb
test
cmpsb
push
fiadds
xor
push
inc
shlb
mov
cmc
jge
mov
jp
mov
in
out
push
sbb
in
jns,pn
mov
aad
aaa
je
mov
fists
sahf
pop
jbe
lds
std
mov
jnp
xor
jge
sahf
fwait
lods
pusha
push
out
sbb
fsts
xchg
xchg
xchg
and
sub
shr
lahf
sub
lret
popf
pop
mov
mov
push
imul
adc
pop
mov
ljmp
pop
cmc
or
icebp
and
fwait
mov
xor
mov
xchg
loopne
sub
cmpsb
sbbb
xor
aad
mov
rcrb
xchg
je
aad
jnp
cmp
xchg
in
cmpsb
scas
xlat
jge
insb
xchg
pusha
dec
inc
int
inc
sbb
mov
mov
jg
cld
cmp
sub
cltd
pop
xor
mov
outsl
add
sar
rcr
adc
dec
lock
imull
sbb
inc
push
pop
aas
out
cmp
andb
mov
cmp
ja
rcrb
mov
inc
iret
jg
jbe
jle
adc
xor
mov
sbb
ret
cld
je
mov
leave
and
arpl
jg
push
inc
lahf
fisubrl
and
dec
lea
mov
std
sub
dec
add
push
repz
dec
xor
mov
mov
imul
js
mov
jle
pusha
lock
dec
das
xchg
aaa
sahf
pop
lret
out
adc
test
mov
push
cmc
xor
test
jb
jl
sarl
jbe
mov
ret
xor
jbe
cltd
sarl
sbbl
lods
cmp
fs
jge
ljmp
test
mov
filds
or
repnz
push
cltd
enter
test
adc
cwtl
mov
xchg
cwtl
mov
mov
xor
nop
pop
xchg
cld
sbb
gs
jb
sub
mov
pop
fsubl
sub
not
inc
add
lret
dec
nop
push
xor
jl
inc
lods
int
mov
mov
or
push
pop
ror
xor
jge
in
int3
mov
mov
xchg
out
outsl
fistl
xchg
popf
lcall
and
or
jl
mov
or
pop
sbb
dec
adc
push
mov
loopne
int
inc
clc
test
push
jnp
jge
add
push
int
popa
pop
in
sub
outsb
loope
mov
out
jecxz
pusha
rcll
lret
out
jns
xchg
jo
and
sub
mov
icebp
pushf
fcomps
pop
jo
sarl
loopne
cld
repnz
aad
aam
jns
pop
push
pop
aad
or
stc
ret
xchg
mov
mov
jnp
stos
sub
mov
pop
bound
mov
add
jae
or
dec
push
push
jle
cmpsl
mov
int3
cmp
das
movsb
mov
pop
mov
dec
pop
je
mov
mov
test
shrb
shll
xor
push
xlat
cmp
les
pop
and
jbe
gs
xor
or
pop
push
in
push
jg
cmpsb
jecxz
data16
push
sbb
and
xchg
mov
add
sbb
cmp
adc
stc
std
cwtl
inc
push
lahf
xchg
mov
add
add
mov
sub
sbb
mov
cwtl
jmp
jge
xor
add
rorl
or
cmc
mov
lea
jg
enter
sub
outsl
push
mov
sub
popf
out
sub
xor
shrl
or
sub
push
out
mov
pushl
xchg
push
repz
data16
push
int3
ljmp
mov
ds
das
add
and
add
pop
out
in
dec
adc
addb
ficoml
movsb
add
in
imul
pop
mov
outsl
dec
add
push
movsb
cmpsb
dec
xor
pusha
jo
loope
das
xor
mov
pop
pop
in
out
unpckhps
sub
popa
jl
adc
sub
adcl
enter
add
scas
jg
dec
jmp
rorb
or
mulb
lret
cmpsl
inc
pusha
add
mov
mov
sbb
cmpsl
test
mov
dec
mov
pop
test
fwait
jno
pop
dec
aas
and
fiadds
cli
les
nop
pop
adc
jle
scas
icebp
call
add
mov
in
jo
stc
cmp
mov
negl
jo
popf
mov
in
add
in
add
push
mov
xorb
sbb
or
inc
aam
adcl
dec
add
insl
sbb
dec
lods
int
movsl
std
mov
cltd
out
jns
inc
ret
sbb
lret
cld
movsbl
jne
sti
mov
arpl
out
hlt
inc
ret
push
popa
pushf
int
adc
fs
aad
daa
pop
in
xchg
testb
fisubrs
enter
mov
inc
sub
fistps
fdivrl
or
pop
jnp
pop
cli
rorb
cmpsb
js
ja
movsl
fidivrs
inc
pop
xchg
mov
jne
jno
mov
bound
jbe
inc
orl
pop
fld
rcl
add
jecxz
je
xchg
ljmp
or
pop
shrl
lret
jns
aaa
or
mov
ss
ret
rcrl
dec
cmpsb
add
js
sub
mov
xor
or
mov
add
repz
into
cmc
movsb
push
jecxz
adc
pop
or
jle,pn
and
pop
cld
add
insl
clc
add
stos
aas
sub
and
in
cmp
push
ror
lret
bndldx
insl
rcrl
adc
pusha
in
outsl
inc
shlb
jo
sub
test
sbb
jne
aad
sub
lods
dec
xlat
jb
pop
sbb
push
mov
inc
adc
adc
test
addr16
jmp
xchg
and
fistps
inc
imul
psubb
out
bound
lds
std
xor
mov
mov
adc
jne
adc
xchg
faddp
fisubl
into
shr
mov
dec
sub
stos
call
loop
cs
inc
adc
mov
into
test
daa
cli
xor
cli
shl
push
push
lahf
adc
lock
out
inc
cmp
dec
movsl
sbb
mov
lea
call
ret
dec
testb
inc
cli
add
and
cmp
aam
int
xchg
rcrb
lods
mov
inc
mov
pop
add
xor
aad
or
adc
stos
push
mov
lock
inc
dec
lea
gs
insl
iret
mov
stc
mov
inc
and
cld
mov
cmc
pushf
mov
push
dec
or
or
adc
insb
push
mov
and
cld
and
movsl
add
inc
cld
lret
push
dec
sub
in
lods
or
xchg
pop
or
xchg
sbbl
xchg
in
add
gs
int
mov
mov
ja
push
popa
incl
fiaddl
push
imul
in
icebp
mov
aad
arpl
fistl
xchg
ror
test
das
sbb
adc
aam
or
scas
scas
sub
fadds
in
pop
push
daa
jns
pop
xchg
enter
je
add
mov
add
test
xchg
fs
xchg
rcll
scas
repz
in
dec
lds
dec
push
sar
sub
orb
jge
sarl
je
arpl
cs
mov
jb
dec
sub
jne
sub
xor
in
leave
dec
dec
adc
fs
adc
dec
inc
push
leave
pop
lea
xchg
xchg
jae
inc
arpl
leave
xchg
adc
loopne
lock
jge
pop
imull
or
cltd
cmpsl
sub
xchg
fnstenv
sub
push
jp
ficoms
and
bound
sahf
xchg
scas
mov
push
mov
repnz
aaa
adc
push
or
lret
stos
or
fs
push
in
repz
mov
mov
sbb
or
and
subl
cmpsb
dec
pop
shll
add
dec
inc
xorb
les
pop
inc
imul
mov
clc
and
mul
gs
fmulp
movsl
ja
pop
pop
scas
xchg
or
dec
cwtl
mov
cmp
add
ficomps
or
popf
or
push
dec
sub
cmpxchg
test
mov
test
pop
sbb
add
mov
pop
pop
push
imul
lds
mov
outsb
adc
sbb
lods
add
mov
cmpsl
pop
jg
cltd
xchg
mov
mov
aas
xor
ds
ljmp
int3
outsl
jg
loopne
std
push
pop
fdivr
loope
mov
xor
ljmp
adc
push
out
js
test
test
and
mov
dec
dec
pop
cli
shl
lret
xchg
ret
dec
and
xchg
xorl
xchg
or
inc
sub
ret
js
fincstp
cmp
or
int3
adc
cmp
dec
add
push
add
mov
mov
div
mov
mov
cmp
pop
xlat
adcl
std
addl
inc
inc
in
lahf
cmp
test
lret
and
dec
ljmp
into
jge
or
sbb
rcrb
mov
mov
addb
orl
pop
cmp
pop
sbb
add
pop
mov
fiaddl
sub
adc
mov
cmp
pushf
mov
jge
adc
add
pop
mov
cli
mov
mov
mov
mov
shll
jge
add
sub
xor
stos
dec
add
movsb
add
lds
jo
xor
sub
push
xchg
cmc
adc
rcrl
jne
orb
xchg
and
push
inc
mov
and
xchg
shlb
adc
stc
iret
xor
xchg
inc
push
hlt
inc
loop
iret
add
jno
mov
out
mov
aad
sub
iret
lahf
lock
test
ja
or
stos
int3
data16
pop
fldcw
gs
add
jmp
daa
lcall
lret
and
dec
bound
call
sahf
int3
sarl
xchg
push
ds
sub
cmp
adc
out
sahf
xlat
cli
or
jecxz
scas
mov
cmp
sbb
or
push
inc
loope
repz
cmp
std
pop
pop
push
push
inc
add
out
pusha
clc
das
lods
xor
loop
cwtl
sar
mov
sbb
add
lock
mov
xchg
loopne
movsb
xlat
add
nop
dec
mov
dec
jns
or
add
movsl
loopne
outsl
outsb
test
adc
pop
popf
mov
ss
xor
mov
pop
xor
outsl
ret
dec
or
jge
jne
in
jns
ds
mov
or
mov
les
inc
xchg
inc
aad
dec
shll
jne
ljmp
pop
fbld
add
mov
mov
repz
push
icebp
loope
iret
adc
lods
cmpsb
jmp
daa
jo
jo
lds
mov
sub
adc
inc
out
scas
pop
xchg
add
and
lods
mov
xchg
outsb
xchg
inc
pop
inc
fxtract
shrb
jmp
pushl
mov
adc
cld
ja
enter
cltd
push
ja
jp
pop
adc
sahf
mov
fdiv
pop
incl
pushf
xchg
xchg
out
push
push
arpl
mov
loopne
push
mov
pop
xchg
push
movsb
push
xchg
subl
imul
push
clc
push
xchg
pusha
and
cmpb
es
sub
aaa
mov
out
sbb
xchg
shlb
out
fwait
js
jle
addr16
inc
enter
mov
test
and
fildll
add
mov
in
mov
fdivrl
and
mov
adc
pop
pop
mov
mov
fadd
and
xor
jno
insb
jg
xor
jp
and
or
addr16
rorl
sahf
or
adc
into
jmp
add
popf
push
inc
adc
out
mov
add
mov
sub
addr16
push
or
cli
inc
inc
adc
fimuls
mov
aad
add
cli
stos
adc
scas
imul
in
push
mov
aam
xchg
push
jg
lods
cmp
mov
pop
aad
lcall
test
fadd
or
push
lahf
ds
jbe
jge
in
loopne
xor
das
jb
cmp
shl
es
loop
jle
mov
adc
imul
insb
pop
xchg
leave
repnz
subb
adc
mov
sub
cmp
outsb
rcrb
gs
xor
mov
adc
mov
imul
sbbl
xor
pop
js
loop
in
fcomip
sub
flds
xor
sub
mov
jp
lds
cmp
mov
pusha
push
jnp
jo
pop
jecxz
add
cmp
and
mov
ljmp
push
pop
call
mov
out
pop
ds
les
fstp
scas
shll
adc
vcvttss2si
jge
pop
add
adc
cmp
adc
or
mul
movsl
cmp
test
in
out
sbb
popa
xchg
pop
push
cmp
fs
orl
mov
cmpsl
sbb
lock
pop
xor
mov
dec
jle
cmp
lret
cld
push
lds
push
fstps
adc
jno
outsl
arpl
jbe
adc
loope
bound
sub
rcrb
mov
lahf
js
sub
lds
jle
jecxz
sub
add
test
add
sbb
push
insl
les
out
lret
fldenv
or
jnp
adcb
call
repnz
je
pushw
xcrypt-cbc
cmpsl
push
pusha
xor
xchg
adc
popf
aaa
and
orl
scas
and
mov
negb
scas
call
jmp
mov
push
xor
adc
imul
jbe
cltd
sbb
push
mov
jl
ss
inc
test
sub
sub
lret
adc
jb
mov
xchg
ljmp
ret
in
test
out
push
loop
cs
push
int
divb
imul
xchg
and
bound
or
push
loopne
scas
iret
sbb
int3
sub
mov
lcall
in
sbb
jmp
cmpsl
jmp
js
notb
daa
imul
sub
mov
push
pushf
inc
add
hlt
repz
push
inc
and
push
xchg
into
subb
pop
ljmp
out
push
loopne
test
cmpsl
call
mov
ret
emms
in
flds
push
jne
call
mov
ret
sbb
mov
adc
and
or
cmp
adc
push
scas
in
rcll
mov
in
aad
push
mov
fsubrl
stc
add
data16
sub
pop
and
or
jnp
and
in
jo
mov
ljmp
and
int
inc
ror
add
in
inc
mov
lcall
iret
std
in
jmp
das
insb
add
jns
jmp
xor
pop
sahf
cmp
sub
dec
mov
les
mov
test
mov
sbb
xor
add
cltd
push
push
xchg
fmull
ror
fldcw
mov
in
cltd
sbb
cmpsl
mov
test
daa
clc
mov
add
pop
sbb
add
lahf
test
test
add
icebp
jmp
cmp
scas
jmp
cs
xor
push
repz
sbb
test
inc
call
addb
inc
dec
push
cmp
aaa
bound
jmp
push
ja
popa
repnz
push
push
jne
incl
outsb
inc
fsts
cmpsb
divb
lret
hlt
das
mov
loope
cltd
cli
mov
or
in
jne
mov
nop
push
jmp
pop
dec
je
add
dec
inc
xchg
mulb
inc
test
push
cld
rorl
inc
mov
pop
loopne
cs
fsubs
sub
stos
test
enter
adc
jecxz
dec
rclb
push
xchg
jnp
sbb
je
push
dec
clc
std
dec
mov
aaa
xor
clc
cmp
xchg
ss
js
xlat
mov
out
push
int3
out
jbe
mov
xor
ret
insl
enter
cld
dec
dec
lret
sarb
movsb
jg
jnp
fadds
aaa
mov
ljmp
in
dec
std
push
sbb
aaa
pop
pop
rclb
jnp
popa
lea
out
sub
pop
inc
fs
mov
jno
mov
loope,pn
pop
mov
in
test
cld
popf
pushf
test
sub
add
xchg
rorb
in
mov
pop
add
imulb
cwtl
dec
sub
ja
fistps
scas
lods
les
xchg
jg
nop
jne
or
fisttpll
mov
dec
inc
loop
shlb
lret
cmp
adc
imul
arpl
shlb
sbb
jmp
mov
inc
sub
or
jne
test
test
cmc
movsb
cmpsb
fstpt
test
jmp
stos
pop
cwtl
xchg
fdiv
hlt
pop
or
jg
pop
inc
lods
call
das
sar
pop
imul
arpl
popf
leave
or
cmp
xchg
xchg
sub
jl
xchg
jmp
jnp
push
idivl
and
jge
xchg
cltd
dec
popf
jg
out
les
iret
mov
call
fisubs
sub
cmp
fistps
in
pushf
add
jmp
mov
mov
into
push
stc
inc
inc
fnstenv
mov
cmpsb
adc
push
inc
loope
dec
cmp
cmp
stc
inc
mov
repnz
pop
dec
mov
rcll
jge
rcrl
int
fiaddl
jns
xchg
pop
sub
push
popf
pop
cli
repnz
ljmp
jae
mov
mov
fs
test
mov
add
push
mov
adc
or
jnp
rcrl
mov
sub
inc
pop
and
cs
sub
lcall
mov
addr16
sub
inc
inc
pop
cmpsb
adc
in
dec
xor
cltd
iret
xchg
mov
pop
xor
js
clc
subl
pop
mov
mov
lods
push
or
inc
popa
repnz
mov
add
mov
pushf
mov
dec
sbb
stos
or
mov
bound
lea
cmp
xor
pushf
out
cmp
shrl
test
bound
dec
orb
mov
dec
mov
xor
inc
das
cmp
rcrl
in
ljmp
xor
ljmp
mov
ljmp
push
push
stos
mov
xchg
push
push
imul
mov
pusha
inc
cmc
loop
mov
push
push
les
lds
pop
pop
inc
or
mov
in
add
pop
xor
push
sbb
cmp
jns
xor
movsb
ja
mov
mov
cld
or
pop
mov
fdivs
imul
mov
sbb
push
iret
shrl
mov
inc
cld
xchg
sub
imul
nop
dec
dec
xchg
and
in
mov
adc
leave
mov
cltd
andl
repz
xor
ret
pop
cltd
ja
rcll
xor
call
cmp
cwtl
movsl
jmp
pop
aas
stos
xor
idivb
out
or
or
push
lds
lret
dec
scas
loope
pop
push
cltd
pop
popa
push
fsubl
adc
cltd
xlat
jmp
mull
sbb
pop
mov
shll
gs
jl
push
andl
xor
and
cwtl
pop
std
pop
cld
push
and
jle
lahf
cmp
lock
sti
clc
ds
inc
adc
add
adc
aas
xor
jmp
and
rorb
xlat
and
mov
roll
sub
and
or
or
mov
add
dec
inc
cmc
xor
xor
jne
enter
dec
clc
pop
mov
mov
fs
jb
push
dec
movsb
adc
test
popa
lock
lret
or
mov
mov
leave
scas
dec
jmp
jl
sbb
out
mov
std
jae
int
or
leave
xor
adc
lcall
das
pop
lahf
inc
xor
enter
xchg
fmuls
pop
fsubrl
sbb
mov
sbb
iret
inc
pop
sbb
nop
ja,pn
ficoms
push
mov
test
mov
jbe
mov
cmp
mov
push
push
pushf
inc
add
jb
and
ret
lcall
hlt
mov
jecxz
cwtl
aad
pop
dec
mov
adc
rcrb
mov
outsb
out
cmc
mov
fsubrs
mulb
imul
xchg
inc
jmp
divl
test
dec
inc
mov
into
xchg
xor
mov
jle
das
out
cmp
mov
or
cmp
sbb
scas
repnz
cld
nop
sbb
jmp
rcl
ljmp
ss
repnz
jmp
pusha
inc
cli
call
sub
sbb
mov
sub
xchg
xchg
pushf
aad
jns
push
mov
jmp
nop
fldl
xchg
fisubrs
lret
pusha
js
jae
push
lods
cmp
sbb
mov
clc
lahf
iret
mov
out
cmp
adcb
lods
cs
adc
xor
mov
test
jne
test
testb
and
sbb
push
dec
dec
movsb
cmp
test
jg
lds
pusha
loop
das
push
dec
mov
sti
cmp
pop
cmpsb
test
cli
inc
mov
pop
pusha
aam
jg
fs
mov
mov
pushl
inc
lahf
mov
push
sbb
cmp
jo
mov
fwait
and
adc
aad
jbe
jecxz
mov
cmpsl
dec
div
lret
stos
fistpll
movl
xor
cmc
fdivl
or
jo
into
push
stos
fisttpll
ja
fisttps
mov
mov
pop
xchg
je
mov
adc
push
mov
push
dec
xchg
push
jb
mov
adc
sub
pop
and
and
test
push
sbb
ret
or
mov
or
fstl
xor
mov
in
dec
fadds
mov
rcll
popa
dec
std
pop
jo
iret
enter
add
xor
mov
repz
sub
into
sub
mov
enter
bnd
push
fsubrs
test
or
iret
subl
push
loopne
jns
xchg
mov
outsl
loope
bound
dec
pop
arpl
fldl
lds
daa
and
cmp
xchg
orl
sarb
xchg
cmp
inc
mov
mov
je
sbb
lahf
divb
clc
popa
leave
stc
pushf
sahf
jo
inc
jo
jbe
sub
xchg
inc
insl
and
xor
push
pop
xor
sbb
jbe
push
pop
push
add
movsl
out
clc
sbb
or
int3
xor
xchg
mov
inc
push
jb
inc
mov
dec
mov
mov
dec
add
stos
orl
cmp
pop
loope
push
popa
add
inc
pop
mov
mov
mov
scas
popa
dec
inc
dec
and
sahf
push
repz
add
inc
bound
jb
out
sub
iret
xchg
push
stos
pop
fwait
dec
fwait
rcrb
test
dec
aam
xor
xlat
cwtl
fs
dec
and
inc
xchg
dec
cld
mov
jecxz
leave
xchg
mov
loope
lret
movsl
cmpsl
or
aad
inc
clc
daa
in
adc
hlt
xchg
or
mov
or
jle
dec
adc
inc
mov
cmp
xchg
jne
nop
lcall
inc
lret
pusha
lcall
jb
sti
data16
ds
push
dec
ss
lret
js
ficoms
ljmp
mov
push
fldcw
pop
xchg
mov
fmuls
ret
add
pop
pop
cmpsb
mov
push
and
and
mov
add
mov
mov
push
or
jae
adc
pop
xchg
xchg
xorb
insb
ds
int3
xchg
pop
ds
inc
and
rcr
fsubrl
cs
cmp
js
stos
or
in
pushf
mov
mov
inc
push
scas
jns
pop
mov
aam
stos
insl
and
pop
aam
xchg
lret
xchg
dec
add
mov
sbb
push
xchg
icebp
mov
lret
cmp
ljmp
inc
std
shll
adc
push
shl
fisttps
repnz
cmp
mov
cltd
out
mov
sub
and
pop
arpl
mov
ret
les
hlt
fcmovnb
ficomps
pop
cwtl
ds
pop
cmp
and
pop
mov
stos
fimull
cmp
dec
in
cwtl
adc
push
mov
jns
push
mov
cwtl
dec
outsl
shll
pop
out
pop
movsl
mul
test
adc
cmp
and
xchg
in
pop
mov
push
popa
int
test
neg
cmp
xor
jne
fadds
pop
arpl
cwtl
push
dec
shll
mov
lcall
jne
jge
dec
clc
ficompl
jecxz
ds
sub
add
add
inc
jge
dec
fists
shrb
out
lds
cld
sbbb
add
cld
sbb
push
xchg
rcrb
push
rorl
fsincos
xchg
jecxz
imul
movsl
loop
cwtl
addr16
mov
mov
aas
sbb
push
or
and
daa
adc
inc
aad
movsl
loopne
fisttpll
xor
shrb
sbb
lods
aad
popa
rorl
inc
xor
lods
inc
jo
mov
inc
push
jno
mov
xchg
repnz
popf
imul
fcoml
enter
loop
rclb
mov
pop
sub
das
dec
aam
dec
lea
jbe
subl
and
aad
fidivrs
or
mul
xchg
rcrb
and
fsubrp
jnp
out
loope
mov
push
dec
add
jecxz
int
in
cli
pop
mov
cwtl
push
lods
loopne
notl
aaa
mov
hlt
mov
lods
jnp
dec
adc
push
pop
push
inc
lret
cmpb
shrl
ja
leave
popf
cmp
and
inc
repz
movsl
sub
and
in
out
dec
pop
movsb
sub
pop
jae
lds
ljmp
test
or
xlat
icebp
dec
lea
das
repz
fs
lret
fadds
int
mov
xchg
ds
dec
jbe
outsb
dec
cmp
and
inc
fidivs
ror
sti
add
xor
addr16
push
aad
mov
pop
inc
push
push
bound
outsb
pop
xlat
mov
in
sti
cs
or
iret
dec
rorb
mov
out
dec
add
cmpsb
scas
mov
leave
add
fcomps
inc
cli
cmpsl
rclb
sbb
inc
enter
jg
push
insl
mov
call
pop
pusha
ljmp
loope
mov
cld
decb
in
cld
jbe
and
or
js
test
cli
es
pop
out
xor
jl
insl
mov
adc
and
push
xchg
mov
push
ret
pop
adc
fwait
dec
cmpsb
push
mov
cmp
sbb
ss
test
lods
sub
xor
pop
or
sbb
mov
pop
and
ja
daa
cmp
jle
ss
jmp
loop
scas
pusha
mov
push
pusha
xor
fistps
inc
sbb
xchg
pop
adc
sti
pop
inc
pop
mov
cmpl
out
jp
dec
lea
lret
insl
inc
out
sbb
ficompl
int
bound
lods
je
pop
xor
cli
cmp
enter
scas
clc
xlat
pop
repz
mov
sahf
xchg
shlb
jbe
mov
sub
or
fcompl
mov
jbe
scas
adc
inc
repz
cmp
mov
cmp
jecxz
scas
or
push
pop
mov
mov
fnstsw
mov
xor
mov
loope
je
lret
imull
mov
loope
push
xor
sub
push
insl
jge
aam
movsl
and
fldt
shrl
jmp
jbe
adc
mov
xor
mov
dec
adc
and
mov
add
jae
cs
stos
push
jbe
push
xor
dec
sbb
fisubrs
pop
subb
test
rcrb
aas
test
mov
inc
andb
jp
mov
sti
testl
cmp
in
je
jns
ljmp
loop
cwtl
in
fbstp
sti
imul
addb
push
into
pop
shll
push
ret
xor
jmp
xchg
dec
mov
mov
lret
mov
pop
cmpl
dec
dec
stos
or
dec
cmp
or
mov
push
inc
lret
imul
jle
enter
fistl
loop
jno
pop
sub
or
stos
xor
push
or
lret
inc
jle
mov
xor
add
in
inc
dec
push
insl
pop
pop
movb
mov
gs
jbe
movsl
cld
xchg
mov
frstpm(287
rcll
cli
mov
push
repz
xchg
lea
scas
mov
pop
inc
xor
mov
or
insb
pop
add
pop
xchg
jmp
push
popf
rorl
subl
popa
outsl
pop
sbb
jmp
mov
jno
repnz
clc
in
xchg
mov
decb
int
fsubrs
fistpl
inc
mov
cmp
gs
ret
mov
pop
movsl
in
ljmp
push
cmp
dec
in
sub
cmp
enter
xchg
hlt
pop
mov
insb
cmp
jne
fmull
mov
call
jae
jb
lods
mov
cmpsl
scas
dec
push
lock
sub
rdpmc
fimull
sbb
sub
jg
movsb
adc
clc
sub
loopne
dec
jmp
add
or
mov
adc
addr16
xchg
xor
sbb
movsb
mov
add
or
xor
mov
mov
adc
add
test
push
lret
insl
or
dec
xchg
mov
sbb
iret
cmp
mov
mov
jle
inc
xlat
in
xchg
mov
faddl
sub
pop
lret
lods
jbe
pop
clc
loop
out
mov
xor
push
std
cmp
shr
mov
sub
stos
mov
pop
aad
fnsave
xlat
scas
pop
and
sub
pop
in
add
and
cld
enter
addb
lcall
loopne
add
hlt
clc
int3
dec
cmpsl
push
ret
mov
and
cmc
mov
xor
scas
test
adc
stos
stos
mov
scas
sti
out
cmpsl
mov
xor
in
into
xor
cmp
mov
stc
out
mov
leave
or
hlt
cmpsb
ret
repnz
jge
mov
leave
jns
jbe
mov
push
inc
sub
rcl
mov
and
mov
js
inc
or
fmull
nop
and
fnstsw
mov
mov
outsb
xchg
mov
pop
scas
sbb
fs
out
sub
jle
clc
adc
fwait
adc
push
cmpsb
test
and
sbb
ret
jo
cmp
mov
repz
pop
lds
insl
aad
shlb
xor
xchg
jl
mov
cmc
jns
stos
add
jnp
dec
fisttpll
popa
jecxz
shl
mov
daa
popf
in
mov
mov
inc
mov
lcall
adc
xor
cmp
sub
pop
shrl
fistl
xor
push
jmp
jnp
push
and
jb
test
aam
out
test
and
pusha
push
add
enter
fwait
cmc
test
notb
inc
mov
out
lcall
rclb
dec
outsl
loop
add
imul
sbb
inc
push
lret
clc
scas
push
fdiv
xlat
adc
cmp
xchg
outsl
push
mov
lea
pop
addl
or
sti
movsb
ja
pop
clc
roll
dec
xor
or
sub
adc
cmpl
lret
insb
jp
pop
or
inc
xor
mov
mov
loope
incb
stos
cmp
unpcklps
or
xor
sbb
paddd
scas
or
jmp
popa
xchg
inc
jecxz
cmp
cmp
das
inc
cs
ds
and
shlb
inc
fisubrs
leave
jge
sbb
adc
orl
sbb
lods
cmp
jnp
cli
cltd
popa
or
xchg
pop
cmp
jae
cmp
ljmp
mov
mov
mov
shll
mov
je
mov
push
scas
jge
xor
dec
bound
lret
sbb
and
dec
enter
xchg
xchg
in
adc
std
test
call
or
repnz
aad
ljmp
jb
sbb
cmc
fldenv
jo
jecxz
es
jo,pn
jne
and
push
cmp
lret
or
inc
mov
ds
push
pop
lods
subb
insb
mov
lret
ret
scas
loopne
sub
push
inc
mov
add
jecxz
mov
fbld
mov
push
daa
cmpb
push
pop
sbbb
push
dec
jbe
enter
lret
fwait
loopne
movsl
popa
add
imul
sti
js
dec
add
repz
dec
add
dec
sahf
push
pop
xor
out
and
inc
frstor
popa
mov
icebp
or
sbb
mov
adc
add
int
push
inc
jbe
addl
aas
mov
fmull
add
dec
addr16
cltd
or
lea
dec
mul
xlat
in
rorb
cmp
icebp
xchg
out
mov
out
pop
sub
js
mov
decb
and
and
or
mov
roll
mov
cvtps2pi
push
bound
in
mov
push
cli
popa
insl
mov
cwtl
test
mov
loop
fstpl
xor
mov
mov
xorl
es
stos
dec
cmp
movsb
lret
shlb
movsl
adc
jne
daa
js
es
insl
and
dec
mov
es
xor
mov
into
adc
cltd
sarl
jmp
pushf
mov
mov
add
xor
cli
push
sbb
fmul
cltd
movsb
dec
push
nop
cs
loop
int3
and
jecxz
add
pop
fs
leave
mov
rcll
and
xchg
div
sub
in
les
fwait
mov
bound
jecxz
push
out
hlt
out
das
loope
xchg
or
mull
pop
hlt
test
js
ret
sub
divps
push
or
data16
loopne
outsl
dec
leave
push
mov
lcall
jae
das
xchg
div
gs
xor
jmp
mov
xor
das
jge
sarl
loopne
or
jmp
pop
fdivrp
pop
xchg
inc
insl
repnz
fdivl
pop
shl
bound
insl
inc
xor
test
mov
dec
push
xchg
lds
mov
sub
test
or
pop
into
jge
cmp
push
clc
hlt
dec
push
ret
arpl
cmp
ret
loope
test
out
xchg
rcrl
jnp
adc
shrb
stos
or
or
push
add
adc
lods
cmp
fwait
pop
inc
and
lea
out
add
mov
jb
rclb
mov
jbe
pop
jp
test
push
cld
lret
aaa
inc
and
push
xlat
mov
jecxz
adc
or
hlt
xchg
dec
and
cwtl
rol
pop
ds
adcl
fists
je
int3
lds
mov
enter
mov
into
inc
mov
daa
data16
cmpb
or
lea
and
sbb
mov
pop
mov
sub
stos
lret
jnp
enter
add
add
mov
add
pop
inc
mov
sti
lods
xor
or
pop
sub
push
mov
xor
jnp
jo
testb
mov
mov
nop
ljmp
cmc
inc
lock
test
repz
jno
test
xor
sbbl
dec
std
inc
xchg
mov
pop
add
sub
ds
mul
inc
or
dec
push
sub
mov
jno
jo
jno
test
mov
push
iret
jmp
dec
clc
jno
dec
add
cs
jmp
pushl
lods
inc
ret
add
in
lds
daa
cs
test
add
xchg
es
push
in
xor
push
mov
test
push
dec
out
xchg
mov
shrl
inc
cltd
or
and
dec
pushf
aam
nop
js
push
adc
pop
mov
cmp
xchg
xor
jl
pop
xchg
repnz
out
das
in
bound
and
lret
outsb
es
imull
fs
sbb
mov
sbb
xchg
mov
dec
sbb
jns
aam
add
push
push
lock
jns
fisttpll
lcall
daa
loopne
stos
adc
mov
cmp
lds
movl
cmc
add
test
cwtl
sub
lcall
inc
out
mov
lret
fcompl
xchg
ds
cmp
lods
mov
xchg
ret
mov
adc
xchg
pop
jne
mov
add
repz
adc
jbe
sbb
jbe
sub
push
or
fstpt
mov
pusha
mov
xchg
out
cmp
pop
hlt
pop
jno
cmp
sub
pop
sub
test
fildll
out
xchg
shr
in
lods
cmpsl
push
pop
in
stos
movsl
mov
jb
loopne
pop
popa
mov
lock
xchg
jmp
xor
dec
or
shll
out
pop
lods
cli
rorl
lea
jge
inc
push
pop
jle
adc
shlb
rcrb
sbb
fistpll
js
in
cli
aaa
rcl
adc
cmp
fdiv
dec
xchg
jecxz
pop
sarl
xchg
fisttpll
dec
xor
xchg
cmp
leave
loope
lret
pop
divl
jno
mov
popf
cwtl
in
pop
shrl
mov
cmpsb
das
loope
out
push
inc
cmpb
out
fimull
lods
arpl
dec
test
nop
sub
call
dec
sbb
notl
mov
and
popa
stos
jo
fisttpl
jo
and
pop
addb
xor
mov
test
rol
push
xchg
jmp
push
test
jmp
cmp
mov
push
pop
aaa
jg
dec
mov
jns
cmpl
std
dec
xchg
push
out
mov
scas
mov
loope
add
inc
lret
fsub
inc
mov
jb
aam
inc
and
cmp
dec
shll
pop
xchg
fnstenv
shl
in
jo
xlat
xchg
rcrb
sarl
inc
in
cmpsl
icebp
mov
cmpsb
push
inc
stc
xor
jns
push
in
out
add
jge
push
insl
push
sub
mov
inc
mov
jge
mov
xchg
lret
xlat
mov
xchg
push
ret
mov
push
aas
inc
mov
loop
jecxz
add
cmpl
xchg
arpl
stos
jns
pop
mov
xor
push
dec
lds
xchg
mov
ret
sbb
jbe
jp
into
outsb
pop
jne
dec
jl
sub
out
mov
shrl
test
add
sub
or
xor
push
in
leave
push
das
and
push
mov
adc
insl
or
sub
dec
pop
ret
inc
shlb
test
shrl
icebp
mov
jge
in
xor
mov
leave
dec
lds
cmpsb
mov
popf
xchg
pushf
inc
mov
xchg
xlat
pop
cmp
jg
push
jb
ror
fucomp
pop
adc
sub
out
jb
jb
xchg
test
mov
push
sbb
mov
sbb
mov
or
pop
std
mov
mov
cmpsl
fidivrs
pop
sub
xchg
add
lret
add
aam
out
mov
xchg
je
punpcklbw
xor
cmp
gs
jb
pop
bound
and
push
rep
or
lock
int3
aad
mov
lret
loopne
xor
mov
call
jmp
sub
scas
sbb
xor
rorl
and
dec
test
testb
sub
cmp
aas
cmp
nop
cmc
hlt
pop
ficomps
sti
or
push
ljmp
imul
mov
icebp
ds
sbb
push
call
in
or
inc
or
mov
push
mov
pop
xchg
cmp
jns
and
jl
xor
adc
movsb
ret
mov
mov
gs
cmpsl
test
cmpsb
mov
adc
mov
shlb
jge
pop
push
add
mov
aad
sbb
and
sarb
in
xor
je
or
or
cmp
mov
add
aas
dec
ja
jo
jg
fisubrl
jo
test
shll
pusha
mov
ret
fwait
lret
cmp
fdivrs
outsl
into
dec
add
or
imul
mov
les
xchg
xchg
bound
loope,pn
mul
inc
pop
nop
inc
rolb
out
out
jno
ja
ss
mov
pop
jmp
mov
push
pop
lock
mov
std
jge
cmpsb
jle
inc
mov
pop
aaa
xadd
jl
sub
push
xor
out
mov
test
mov
mov
iret
adc
push
lea
jmp
pop
ja
call
cmpsb
in
in
out
xor
out
mov
add
dec
arpl
in
rcrb
xor
adc
xlat
pop
es
and
pusha
push
imul
fisubs
fs
mov
mov
jl
pop
xchg
in
testb
mov
roll
inc
pushf
imull
cmpsb
pusha
cmpsb
loope
fldcw
hlt
test
or
pop
fbstp
mov
jnp
inc
sbb
push
push
into
scas
push
add
inc
mov
pop
mov
pop
push
lret
scas
xlat
xlat
cmp
out
xor
outsb
pop
cmc
pop
add
jmp
mov
cwtl
fcmovne
imul
fs
clc
enter
arpl
icebp
out
xlat
add
cmp
test
fnsave
call
mov
fwait
sbb
iret
xor
pop
imul
add
fsubrp
in
fcmovu
add
rol
pop
mov
and
mov
push
jae
aaa
inc
stos
sub
jo
xchg
push
xchg
sahf
xor
pcmpeqw
pushf
in
mov
pop
push
rorl
pop
ds
scas
sub
xchg
xor
xor
inc
inc
out
scas
mov
cwtl
or
popf
hlt
mov
add
adc
jle
cli
cmp
ja
mov
mov
push
fs
sbb
loope
lret
and
std
out
decb
mov
sbb
stc
xor
in
pusha
ret
inc
dec
add
cmp
lcall
sti
xor
icebp
inc
lock
jns
in
and
jb
jecxz
popa
jns
fisttpll
push
xchg
lock
or
jge
fidivrl
enter
cmp
push
lock
enter
add
mov
clc
inc
fnstenv
pop
fldl
mov
mov
sbb
jb
out
mov
push
mov
dec
jns
mov
dec
or
scas
shr
push
idivl
and
cmp
das
scas
fnstsw
pusha
mov
ljmp
inc
sub
mov
dec
adc
movsb
rorb
addl
jo
xchg
cmp
inc
loope
push
lds
dec
push
cmp
mov
lret
mov
mov
mov
iret
imul
push
sub
and
js
xchg
add
cwtl
sbb
jbe
mov
mov
repz
push
sub
das
push
jns
loop
fisttpll
nop
mov
ljmp
add
lret
in
cwtl
xor
push
jle
jp
rolb
xor
nop
insl
loop
jne
fwait
mov
xchg
fyl2x
sbb
les
sti
inc
or
jle
push
cmp
sbb
jg
sti
popa
loopne
mov
mov
jns
cld
xor
in
jbe
mov
inc
mov
inc
mov
daa
add
bound
fisttpll
movsl
std
fimuls
outsb
mov
ret
out
outsb
inc
jbe
clc
and
sub
loopne
aad
test
sti
shll
pop
outsl
js
hlt
das
adc
insl
mov
aad
xor
sbb
pop
shrl
inc
iret
sub
loop
test
sar
jae
addr16
sbb
inc
insb
cmpb
sub
mov
mov
int3
in
mov
or
sbb
and
xor
or
lock
ret
ds
jo
mov
mov
pop
mov
icebp
ds
out
xor
mov
xchg
inc
icebp
in
cmp
out
jbe
lods
je
in
shrb
into
jbe
lahf
pop
push
push
dec
insl
cmp
imul
sbb
insb
mov
push
inc
push
add
leave
repz
jecxz
aam
pop
adc
or
test
mov
insb
cli
pushf
sbbb
mov
and
mov
aad
mov
clc
cli
pop
add
sub
push
sbb
mov
enter
sub
mov
fcmovnbe
and
push
out
lods
xor
ror
inc
enter
sbb
lahf
iret
xor
xorb
lods
jmp
icebp
out
and
loop
push
aaa
add
clc
mov
inc
xor
pusha
jp
xchg
push
cwtl
fisttpl
jmp
mov
out
movsb
ljmp
movsb
popa
jns
lret
cmp
sbb
fs
inc
inc
fsubr
sub
imulb
xlat
ret
into
pop
mov
clc
sub
xchg
arpl
xchg
jo
adc
jecxz
arpl
jns
jo
inc
std
test
push
loope
jmp
jbe
lods
idivl
mov
ljmp
insb
push
out
ret
sbb
test
jno
popa
jg
and
cli
imulb
adc
repz
cmp
mov
cmp
negl
push
flds
mov
cmp
dec
mov
ja
sbb
jp
xchg
testb
xchg
mov
inc
sbb
aam
push
rorb
jmp
out
ja
stos
jmp
and
out
in
xor
inc
jae
pop
shl
mov
mov
pop
sbb
std
cmpsb
pop
sub
scas
loopne
inc
mov
sti
xchg
sub
xor
lock
mull
test
shl
mov
dec
and
pop
std
mov
loopne
imul
aad
push
ljmp
xor
inc
movsl
cmpl
cli
xor
pop
outsl
jp
sub
scas
xchg
mov
mov
sub
xchg
int
and
mov
inc
ficoms
pushf
movsl
mov
fsubr
or
icebp
mov
fcoml
mov
ret
aaa
test
ds
js
in
or
sti
xchg
ficomps
adc
dec
ljmp
sbb
sarl
pop
mov
decw
jp
int3
lcall
test
aad
iret
lock
dec
cmp
mov
aas
aad
jge
loope
cwtl
aaa
sub
push
push
rcll
cwtl
pop
sbb
cmc
and
sbb
cltd
stc
rcl
imul
add
in
lods
dec
and
adcb
xchg
xchg
mov
xor
testl
pop
mov
pop
adc
leave
lea
xchg
loopne
push
mov
mov
pop
clc
dec
inc
sbbb
inc
cld
pop
arpl
lret
xchg
scas
sub
shlb
or
in
push
arpl
ficompl
in
mov
sub
xor
mov
mov
lea
rorb
and
xor
insb
cmp
rorb
sarl
lods
xchg
fdivrs
repnz
xor
sbb
sub
sbb
movsb
shll
pop
data16
fcmovb
jo
lahf
add
or
cld
add
mov
dec
mov
bound
mov
in
sub
push
iret
aas
mov
test
pop
fcmovnbe
popa
gs
inc
add
sub
cmc
cwtl
sbb
lcall
mov
fs
aaa
data16
mov
fdivl
out
mov
jle
push
pop
sub
mov
push
pop
sub
arpl
sub
xchg
and
popf
mov
fisubrs
addb
cmp
cmp
loope
sbb
outsb
nop
add
or
push
sub
movsl
or
loop
inc
sar
add
mov
repz
fneni(8087
jp
mov
or
gs
fwait
cli
scas
js
push
clc
pop
jle
push
mov
sub
insl
sub
dec
lret
cmp
sarl
sbb
add
mov
loope
imul
cmp
sub
xchg
sbb
sbb
and
xchg
popf
inc
imul
pop
mov
cli
addr16
pop
pop
xchg
addb
mov
mov
and
add
or
hlt
bound
aad
sbb
sbb
lods
sbb
gs
pop
mov
mov
push
jo
mov
pop
mov
jo
cwtl
movsl
mov
or
fstp
orl
mov
push
insb
loop
mov
dec
push
mov
out
pop
cmpsb
repnz
mov
mov
adc
aaa
adc
mull
scas
sub
xchg
cwtl
sbb
mov
and
or
lahf
jae
xchg
fisubs
out
lahf
daa
cmc
inc
sub
adc
in
inc
aaa
add
mov
mov
pop
xlat
sub
leave
and
in
test
xchg
and
enter
mov
and
loop
and
jmp
xor
mov
imul
xor
xchg
sbb
mov
mov
les
out
mov
push
add
xlat
push
mov
and
sahf
jmp
test
mov
sub
movsb
int
xchg
mov
mov
sbb
mov
insl
mov
push
lahf
and
and
dec
popf
stos
in
lret
mov
fwait
mov
lock
xchg
and
fisubrl
mov
adc
or
test
nop
add
adc
mov
rcll
shl
in
xchg
stc
insb
xchg
movsb
imul
sti
jmp
push
inc
popa
pop
push
cwtl
mov
clc
dec
and
cmp
adc
dec
in
jl
inc
fisttps
scas
sbb
sbb
xchg
imul
es
sub
cltd
das
dec
inc
int
dec
sarb
es
stc
add
leave
repnz
dec
jae
jnp
jl
or
inc
sub
push
dec
dec
adc
jl
jl
stos
shlb
insb
or
sub
aas
in
mov
inc
pop
cltd
mov
pop
inc
push
mov
inc
inc
inc
in
adc
jno
pop
dec
add
enter
movsl
icebp
xor
xchg
fstpl
shlb
es
and
call
mov
mov
sub
dec
movntps
adc
imull
inc
push
and
cmp
loop
push
add
mov
push
je
cwtl
repz
adc
arpl
shlb
int
sub
fldenv
push
fwait
jp
pop
cld
mov
pop
or
dec
fincstp
cmp
xchg
adc
ret
loopne
icebp
cmp
mov
fmull
sub
cwtl
dec
lods
lret
sub
in
sub
jle
insl
fwait
jnp
mov
xchg
mov
jp
mov
test
mov
add
cli
outsl
xchg
ret
jge
sub
movsb
and
jnp
out
mov
xchg
or
xor
pop
sub
ffreep
cld
dec
dec
mov
lahf
and
sarb
addr16
fisttpl
xchg
jl
repnz
mov
js
xchg
ja
dec
nop
and
jle
sbb
in
int3
jne
inc
rcl
push
test
mov
and
pop
cmpsl
aam
test
bound
pop
xor
test
push
jnp
push
cmp
sbb
dec
jl
sarb
sbb
jmp
inc
jo
push
lahf
in
out
xor
cli
ret
and
sti
cmpsb
cmpb
fdivl
dec
dec
add
mov
andb
mov
cmp
fnsave
pop
jne
sbb
jge
fsubrp
xchg
dec
loop
ja
test
cmpsb
jae
lock
xor
inc
and
testb
pushf
mov
stos
imul
push
scas
sbb
mov
subb
dec
popf
mov
jmp
test
je
mov
ficompl
in
gs
fisubl
icebp
outsl
mov
xor
xchg
int
sbb
add
and
xorl
mov
xchg
xchg
repnz
push
fimull
push
jle
xchg
jno
mov
and
sahf
pop
icebp
lret
lods
out
aas
sub
cmc
sub
fwait
je
pop
cmpb
jle
pop
jns
ss
xor
mov
scas
sbbb
mov
jle
or
lock
jb
mov
ljmp
jbe
sub
jmp
sahf
xor
jl
dec
dec
cwtl
mov
iret
test
jl
mov
or
movsl
fbstp
ds
jbe
mov
dec
inc
clc
adc
imul
mov
lock
pop
pushf
dec
inc
pop
or
fisubrs
add
fsub
cs
orb
lods
fdivrl
xor
xchg
add
jge
and
cwtl
ret
imul
or
clc
in
pop
or
or
mov
inc
xlat
sbb
add
push
shl
sub
in
popw
imul
and
int3
hlt
das
test
cli
aam
add
dec
divb
sub
mov
sar
mov
in
cwtl
xchg
mov
jnp
testb
addr16
sti
xor
push
ret
adc
hlt
mov
addb
movsb
sbb
xor
add
cmpsb
push
pop
mov
les
outsb
aaa
cmp
mov
sub
leave
adcl
roll
pop
test
jno
rcrl
push
adc
xor
repnz
cmovbe
mov
adc
cli
add
stos
pop
and
cli
xchg
jns
mov
jae
out
cmp
aam
movsl
in
js
lcall
push
cmpsl
inc
test
test
push
and
inc
add
mov
push
pushf
in
mov
test
cmpsb
sbb
push
xchg
sbb
cmpsb
push
mov
jmp
ja
popa
repnz
dec
stc
add
pop
push
jns
jb
cmp
in
aas
xchg
dec
mov
sbb
mov
cmc
loop
ja
mov
adc
ret
push
xor
jns
addr16
sbb
loop
out
fistl
flds
out
push
push
jbe
jae
scas
adc
pop
xor
fildl
adc
mov
stos
stc
push
mov
mov
mov
mov
or
mov
lds
fisubs
xchg
addr16
out
and
fadds
clc
leave
xor
cltd
sbb
test
mov
lds
insl
clc
dec
xor
pop
popf
pop
mov
xor
mov
xor
adc
test
cmpsb
inc
subb
push
stc
outsl
fstps
adc
pop
xor
mov
jmp
mov
sti
shll
push
je
sub
xchg
sbbb
xchg
mov
rcll
add
mov
or
fnstcw
std
xor
cmpsl
fmull
adc
flds
pusha
adc
jbe
add
aam
lret
xor
mov
mov
arpl
icebp
in
test
sbb
inc
mov
pop
push
add
jns
push
popf
pop
scas
dec
cmpsl
jl
xchg
aaa
pop
dec
and
inc
mov
push
pop
test
pusha
std
faddp
add
ficoml
xchg
or
add
jg
repnz
push
sarl
and
rcl
mov
jge
fs
subb
bound
adc
xlat
mov
push
add
jae
sub
xor
dec
push
and
imul
dec
ret
xor
xor
xchg
lods
daa
popf
jb
popf
cmpsb
cmpb
cmp
inc
sahf
scas
pushf
mov
sbb
sub
mov
dec
or
lds
testb
push
int3
pop
fmuls
cmpsb
fwait
mov
pop
out
push
shrb
cmpsb
repz
mov
ret
cwtl
mov
push
cli
or
les
mul
pop
mov
dec
pop
lret
fnsave
mov
pop
dec
sub
repz
aad
imul
lea
mov
pop
push
add
ja
std
xchg
or
dec
icebp
inc
lret
add
jbe
jae
pusha
repnz
mov
inc
dec
and
lcall
cli
or
rcrb
aas
rcl
fistpl
pop
fcompl
or
adc
ret
into
and
push
out
cmpsb
in
push
adc
scas
push
fdivrl
add
lcall
pusha
mov
dec
mov
ficompl
enter
fildl
dec
arpl
inc
popf
cmpsl
loopne
and
xor
dec
add
cmp
xor
or
pop
sbb
sarb
mov
test
add
in
cmp
out
push
out
outsb
cld
jge
scas
jl
mov
int
pop
inc
add
mov
andb
mov
sub
push
mov
pop
inc
mov
shrl
out
cld
jo
ds
arpl
sub
pop
repz
xchg
test
pmaxub
mov
pop
fsts
sub
mov
pushf
mov
inc
lret
addr16
lods
pop
pop
or
call
in
sbb
inc
inc
push
xor
pop
rcll
jno
push
or
cs
daa
sub
fs
fcmovne
out
testl
inc
les
pop
jle
inc
gs
insl
rorl
jp
cmp
jbe
adc
addb
inc
jp
push
add
adc
xor
movsb
data16
cmc
xchg
inc
cmpsl
cmp
mov
jns
arpl
sub
push
mov
push
aas
shlb
shrw
inc
push
inc
pop
movsb
mov
imul
adc
push
popa
or
imul
ds
cmp
fbld
mull
add
daa
andb
clc
movsl
pop
sbb
or
xchg
mov
daa
dec
popf
repnz
in
push
cmpsb
movsb
add
loop
vpmovsxdq
inc
rclb
aas
js
lret
daa
sbb
pop
rorl
cs
jnp
jne
dec
in
test
mov
es
out
shrl
pop
insb
or
lods
mov
mov
sub
ret
mov
loope
and
imul
cmp
test
xchg
xchg
sti
shl
mov
cltd
test
rol
mov
jp
pop
sub
or
mov
jnp
adc
popf
inc
mov
lahf
aas
neg
push
mov
pop
pop
pop
adc
push
cmp
add
inc
cmpsl
dec
sub
push
mov
adc
xchg
mov
js
test
imul
push
adc
cld
in
add
dec
cmp
and
and
adcl
push
int
aad
sbb
jno
aam
ficomps
das
inc
and
add
xor
push
add
mov
rorb
adc
dec
sbb
fwait
adc
lcall
sbb
fnstenv
xchg
or
or
push
sbb
ds
or
fs
pop
jg
xor
daa
loopne
add
or
mov
shrb
mov
inc
aas
insb
inc
stos
and
movsl
xchg
fldl
xchg
xchg
mov
mov
sub
xchg
jl
fstpl
xor
lds
push
push
addb
push
not
out
xlat
mov
outsb
sti
fidivrl
insb
sub
xor
mov
lcall
js
fistpll
ljmp
repz
ror
nop
or
sbb
movsb
dec
sub
test
cld
and
or
cli
std
ss
xchg
inc
lret
pop
mov
movsl
out
and
ds
test
cmp
in
movsl
enter
fwait
mov
ja
mov
int
cs
leave
adc
aas
sub
icebp
push
and
xor
jg
mov
mov
stos
jle
xchg
add
push
std
outsb
test
arpl
xchg
jge
mov
std
es
pop
mov
cmp
xchg
mov
push
fistps
es
insl
push
dec
push
sub
mov
push
push
out
pop
push
sub
cmpsl
fidivrl
call
mov
aam
in
inc
pushf
jl
mov
mov
lret
push
inc
mov
test
decb
repz
les
outsb
hlt
xchg
leave
mov
inc
test
push
push
fadds
mov
cs
fildl
mov
push
cmpsb
and
pushf
adcb
incl
call
sub
mov
xor
pop
sub
pop
fcmovnu
jg
mov
in
jmp
cmp
test
jb
inc
in
sbb
pop
les
mov
jb
pushf
xor
lcall
lea
mov
scas
mov
cmpb
inc
or
ret
rorl
call
adc
inc
or
aam
xchg
jg
ret
test
aaa
cmp
inc
insl
popa
and
push
fsubrl
int
dec
lret
cmpsl
cmp
xchg
mov
add
xlat
movl
sbb
popf
outsl
pop
push
xchg
dec
pop
imul
mov
mov
xchg
mov
cmp
or
ud1
fstpl
stc
es
lret
adc
andb
sbb
pop
pop
jl
jl
in
mov
and
hlt
gs
imul
jnp
test
adc
pop
jno
xchg
out
adc
lods
repz
js
push
cmp
ljmp
and
inc
add
push
dec
and
pop
fisubs
lahf
jmp
enter
xchg
mov
inc
addr16
cmp
mov
push
and
sbb
cmp
bound
mov
push
aaa
repnz
dec
cmp
fstpt
push
dec
cmp
aaa
jp
dec
jns
bound
and
pop
les
pop
out
in
mov
sti
adc
cmp
xchg
and
repnz
adcb
mov
bound
dec
in
cltd
out
leave
rcrb
cmpl
add
or
sbbb
push
icebp
xor
dec
insb
mov
and
jmp
xchg
lahf
pushf
mov
pop
mov
cmc
movsb
push
pop
xor
lods
push
jg
xchg
add
lahf
mov
xor
mov
ffreep
adc
hlt
jo
es
add
xorb
xlat
sbb
mov
lret
mov
lds
les
shll
sbb
test
xor
in
jnp
std
cmp
cli
shrl
adc
sub
orl
push
out
test
adc
jge
mov
lret
add
out
xchg
loop
cmc
into
movsb
lcall
mov
fidivl
into
lret
sahf
loope
arpl
cmp
xchg
adc
pushf
lahf
into
lret
lahf
mov
dec
push
rcr
sub
mov
enter
push
fimuls
lods
jmp
jmp
scas
sahf
pop
mul
xor
arpl
ds
mov
test
jl
mov
dec
push
movsb
movsb
pushf
xor
sub
mov
mov
or
adc
pop
xchg
inc
add
pop
dec
mov
lea
push
and
jo
insb
mov
daa
push
insl
daa
mov
mov
add
jg
push
out
ljmp
push
pop
mov
arpl
daa
clc
cs
xor
push
xchg
xchg
sbb
dec
in
inc
loope
inc
jmp
daa
fs
nop
jno
xor
icebp
in
mov
mov
out
into
jnp
jnp
sub
or
add
add
inc
jmp
scas
adc
les
int
jmp
clc
sti
fld
add
mov
imul
rcrb
fsts
xchg
xchg
pop
xchg
add
repnz
mov
sahf
xchg
imul
xchg
and
in
and
movsb
mov
or
xchg
mov
mov
sahf
fiadds
xchg
mov
cwtl
fcompl
mov
outsb
fidivrs
mov
sub
aaa
adc
add
xchg
jo
cmp
subb
xor
sarb
imul
fmull
mov
mov
push
jbe
insl
rolb
scas
xor
mov
sbb
sti
fldl
push
cmp
add
ss
sbb
mov
sub
jne
xor
pop
mov
ret
scas
ljmp
mov
mov
cmp
cmc
mov
lock
cmp
pop
mov
jns
dec
adc
into
nop
xchg
push
mov
lock
mov
ret
mov
push
mov
fdivs
jno
mov
mov
jno
inc
fs
imul
aas
adc
cmp
sti
jae
jge
and
push
xchg
sbb
sub
mov
mov
pushw
jmp
out
je
push
sbb
xor
mov
into
mov
sub
and
push
hlt
add
ds
jge
fimuls
leave
mov
loope
push
out
iret
mov
rcr
popa
and
fstps
mov
pop
cmp
sti
mov
cli
sbb
xor
xor
inc
pop
sbb
aas
out
pusha
sahf
loope
jae
das
stos
fnsave
lods
insb
push
daa
jns
mov
pusha
or
jne
or
imul
sub
cmpsl
xchg
jno
push
jmp
cmc
ret
iret
pop
arpl
adc
adc
push
xchg
outsb
in
pop
xor
sub
sbb
pop
sarl
cmp
mov
xchg
lret
out
pop
cmp
adc
cmp
mov
ja
mov
cld
xchg
jp
sub
mov
hlt
mov
test
push
ror
int3
xchg
push
pop
aad
in
mov
cmpsb
inc
repnz
testl
hlt
sub
push
and
push
sbb
adc
mov
cmp
xor
xor
pop
aas
or
gs
sti
dec
dec
or
dec
ss
es
movsl
pushf
sbb
pop
inc
and
aad
push
inc
pop
int
imul
adc
into
insb
mov
rcl
push
lret
int3
jmp
shrl
pop
jp
mov
mov
ss
filds
mov
or
cld
xlat
mov
insb
sub
dec
pop
jo
xchg
xor
inc
stos
ret
push
fcompl
sub
fsubrs
dec
out
mov
jge
lahf
mov
cmpsl
and
push
int3
pop
hlt
ret
jns
push
sti
clc
sub
jmp
testb
shrl
sbb
lret
mov
movsb
or
mov
and
les
es
and
out
cmpb
out
or
adc
mov
cmpsb
jp
pop
push
and
movsl
cmp
fisubrl
in
mov
push
js,pn
add
fidivrl
xor
push
push
bound
stc
push
mov
pop
ret
mov
cmp
and
or
stc
pushf
push
fstpl
fistl
in
and
in
cmpsl
stos
call
stos
xor
push
fsubrs
int
or
popa
daa
out
cmpl
inc
push
and
xchg
inc
sbb
lret
xchg
jecxz
mov
jbe
sbb
loop
xor
fnstsw
fidivrl
cmp
lcall
xchg
fucomip
std
cmp
in
xchg
out
jb
push
leave
mov
test
sbb
cwtl
jp
mov
in
std
sahf
test
and
sti
add
sub
into
or
divb
iret
fs
pop
ret
sbbb
pop
sbb
jbe
ficompl
mov
pop
sbb
adc
dec
stos
vpshlq
cmp
cmp
loop
cmp
push
stos
xchg
and
dec
es
stos
jae
cld
pop
cmpsl
and
fiadds
mov
lock
sub
push
test
or
fsubl
mov
xor
cmpsb
mov
sti
or
sbb
sarl
cmpb
ja
ja
lds
pop
dec
and
scas
push
sbb
mov
dec
iret
ficoms
int3
cmp
lds
pop
scas
xchg
sbb
shrb
int3
or
icebp
inc
jp
dec
cmp
popa
pop
jnp
jecxz
mov
sahf
or
scas
fbld
sti
mov
pop
daa
jecxz
ret
ret
je
adc
mov
movl
cmp
xchg
out
cmp
pop
mov
mov
sub
sarb
xchg
dec
repnz
sbb
cs
mov
jge
ret
mov
cs
pop
movsb
adc
push
std
inc
sti
test
jmp
div
es
or
in
pop
scas
inc
sbb
cwtl
repz
xor
mov
lret
dec
inc
mov
add
out
cltd
mov
add
out
jecxz
andb
adc
ss
in
je
out
adc
cmp
sti
div
and
push
fcomip
push
jae
xchg
inc
jmp
mov
jbe
lret
mov
sub
ss
ljmp
out
pop
sbb
push
sub
add
inc
shl
push
fs
jp
and
loopne
cmp
sti
xchg
pop
dec
jb
cmp
mov
vpmacsswd
lods
fsubrl
aaa
lahf
cmp
fists
loopne
jnp
inc
lods
popa
int
out
scas
cli
dec
sbb
inc
push
and
add
dec
add
rorb
test
mov
lds
xlat
add
push
mov
sti
sbb
adc
sub
iret
jp
mov
cmp
mov
cmp
mov
inc
les
jnp
adc
lret
jmp
in
lods
cmp
mov
stc
push
popf
sub
test
jbe
dec
cmpsb
lret
test
imul
aam
jecxz
es
stos
lret
and
or
shrb
and
in
jo
pop
lods
push
lods
int3
dec
mov
sub
mov
fiadds
jae
mov
jge
int3
sub
jmp
cwtl
sub
mov
jecxz
push
nop
shl
and
jns
mov
mov
cmp
js
repz
loop
icebp
mov
dec
push
mov
rcrb
int
ret
sub
mov
addb
mov
lods
icebp
ds
std
dec
ljmp
xchg
sub
test
out
dec
in
and
add
mov
cmp
rcrl
fs
lahf
jne
imul
push
push
push
push
jb
call
cs
and
pusha
and
bound
std
mov
add
hlt
movsb
or
mull
mov
push
cltd
repz
jl
mov
rolb
inc
decl
pop
push
les
adc
adc
stos
mov
test
test
sub
repnz
adc
inc
cltd
lret
or
and
imul
mov
mov
jnp
or
fisttps
gs
cmpsb
inc
aam
and
mov
push
mov
add
jg
fnstenv
leave
xor
aaa
dec
jl
pop
movsb
push
pop
sbb
dec
push
cmpsb
aas
pop
dec
in
xchg
aas
push
adc
jne
popa
mov
jne
cltd
sbb
jg
shrb
js
orb
dec
movl
pop
mov
inc
jmp
leave
xchg
cmp
jecxz
mov
out
mov
and
mov
xor
cmp
aad
lea
repnz
pop
lahf
pop
test
scas
mov
lock
addr16
jge
pop
add
push
xor
scas
and
stc
cltd
in
test
sub
and
movsl
fstl
out
dec
cltd
jmp
inc
fwait
push
fstpl
cmpsl
out
into
and
not
jo
jbe
fwait
adc
std
in
inc
jmp
fmull
popa
sbb
or
das
rol
cmp
mov
cmp
add
xor
or
sahf
shll
adc
insb
pop
movsl
cmpsb
sub
mov
jecxz
jb
iret
mov
lea
jp
xor
and
mov
mov
cmp
cmp
sbb
xchg
jno
data16
mov
sub
lods
shll
jo
jae
nop
cltd
xchg
les
fstps
fucom
pushl
dec
add
rol
sarl
movsl
mov
pop
or
sub
stos
mov
pop
in
push
pop
inc
xor
sub
and
ficompl
xchg
arpl
ret
ljmp
cmp
xchg
mov
cmp
subb
cmc
clc
data16
add
inc
xchg
fistps
xor
pushf
popf
lds
fimuls
jmp
adc
xchg
or
push
sub
push
add
cmpsb
mov
mov
mov
xor
ss
add
pop
aaa
inc
cmp
mov
jns
mov
inc
aad
cmp
sub
cmp
es
jb
pushf
xchg
andb
push
and
cmp
ret
pop
inc
ja
rcll
icebp
imul
sbb
mov
xor
mov
test
cmp
mov
in
das
or
outsl
movsb
push
ds
add
xor
daa
iret
mov
cmpsb
push
faddp
dec
cmp
test
out
pop
pop
pushf
mov
cmpsb
cmp
lret
hlt
call
ja
into
pop
andb
in
lods
shrb
lret
das
jl
jecxz
rcrb
or
imul
test
mov
xor
cmp
mov
ljmp
pop
and
jnp
pop
dec
cmc
rclb
dec
repz
out
adc
leave
mov
fs
and
movl
jno
jg
mov
mov
and
popf
xchg
int3
enterw
sub
imul
cmp
inc
psllw
test
mov
jbe
fisubs
out
xor
enter
test
cmp
int
lcall
push
imul
je
lret
xor
mov
outsb
aam
aam
cmp
xlat
sbb
pop
mov
add
sbb
out
loope
pop
jo
mov
mov
aaa
inc
pop
sbb
inc
sarb
es
cmp
mov
leave
in
add
add
add
fs
popf
push
jno
push
int3
arpl
and
popf
xlat
lock
sbb
lret
lret
ss
ljmp
mov
enter
in
mov
sbb
or
pop
rcrb
test
jge
dec
xor
pop
pop
out
or
repnz
jnp
sti
pop
int
ja
adc
test
fmull
mov
add
addr16
cs
test
xor
mov
pop
sti
dec
sbb
sahf
imul
in
imul
sbb
dec
pop
pop
shlb
pusha
cmp
insb
lret
sbb
pop
mov
jmp
mov
lea
mov
add
pop
gs
cmp
mov
xchg
or
imul
ret
dec
push
adc
jae
or
out
and
xchg
mov
jl
push
xlat
pop
dec
hlt
aam
mov
ud2
push
testl
stos
cltd
xchg
jl
inc
cli
jae
ja
rorl
sbb
adc
lods
repz
in
and
lods
xchg
sarb
fisttps
test
pop
mulb
pop
test
cld
test
add
lea
push
cli
cmpsb
add
sbb
jne
push
jns
ds
or
sbb
mov
mov
add
pop
aam
jo
mov
lods
movl
pop
sub
pusha
inc
dec
ficomps
pushf
dec
imul
mov
insl
aam
mov
fiaddl
adc
dec
cmp
cmp
and
mov
push
dec
sbb
pop
ret
cmpsl
or
mov
sar
je
aas
pop
subl
aam
ljmp
mov
cwtl
sti
mov
loop
cmpb
mov
or
pop
adc
jl
pop
mov
out
sbb
mov
dec
scas
mov
mov
or
fidivl
add
dec
lret
mov
pop
pop
iret
cmpl
arpl
fimull
lods
mov
lods
push
sbb
gs
cmpsl
js
sbb
or
cld
sbb
in
test
inc
or
mov
test
popa
lcall
leave
data16
cmp
cwtl
lret
mov
dec
mov
xor
sbb
and
sarb
pop
sub
js
int3
sbbb
or
pop
push
push
dec
out
arpl
dec
test
add
rcr
in
ds
cwtl
push
pop
imul
dec
push
sbb
and
jle
cli
out
or
xor
mov
fldz
into
pusha
pusha
xchg
lods
jmp
ljmp
cltd
mov
out
les
xor
cmpb
add
inc
in
and
sbb
cmpsl
mov
aas
jle
loopne
inc
xacquire
dec
push
xor
in
dec
popf
fsubp
adc
nop
mov
xor
insl
pop
mov
lcall
out
ljmp
movl
mov
inc
sub
and
rclb
xchg
push
mov
push
jns
aas
adc
xchg
mov
push
mov
cmp
gs
or
xor
pop
sbb
and
mov
xor
in
in
jbe
sub
pop
jge
js
cmpsb
lock
mov
enter
mov
inc
xchg
mov
mov
popa
scas
pop
int3
int
movsl
jle
pop
jmp
mov
sbb
pop
cmp
cmp
inc
push
jp
mov
adc
jl
in
and
outsl
add
stos
jge
mov
adc
adc
mull
aaa
and
mov
out
cli
pop
cmpsb
out
pop
mov
test
ds
mov
sti
mov
in
jge
pop
add
mov
in
inc
xchg
push
push
adc
stos
loope
addr16
cld
iret
faddl
xchg
push
clc
adc
lock
push
out
andl
lret
jmp
push
and
mov
jae
out
dec
cli
dec
xor
fldln2
mov
je
iret
std
jle
mov
bound
sbb
lcall
int3
out
push
and
lock
dec
dec
mov
cmp
imul
arpl
jbe
add
cmp
rol
jne
das
cmc
pop
mov
jl
dec
cmp
aaa
xchg
cli
jae
mov
insb
dec
inc
fbstp
fsubrs
test
dec
adc
jbe
jae
subl
mov
inc
mov
nop
jae
aam
cmp
add
cmc
into
xchg
int
ss
imull
mov
add
xchg
mov
or
jns
pop
mov
std
xchg
xchg
mov
mov
or
jo
pusha
push
adc
xor
cmpsl
inc
or
in
jb
jle
bound
popa
lret
enter
lods
cmp
bound
push
dec
out
xor
lcall
out
jnp
sbb
int
inc
lcall
fdivl
sbb
mov
cmp
test
cmp
out
jmp
push
mov
mov
test
scas
mov
mov
mov
sub
adc
lock
nop
scas
rcrl
shll
adc
test
imul
inc
or
aaa
xchg
lods
ret
cmp
jle
push
sbb
mov
sub
imul
or
mov
jo
ficoms
xchg
jnp
dec
mov
sub
cmpsb
aad
inc
push
int
adc
lcall
sub
hlt
nop
jmp
cs
dec
sbb
mov
or
cli
fisubs
sbb
inc
sbb
out
fstps
xorb
mov
sub
push
aad
xchg
gs
insb
cmp
enter
mov
mov
in
sub
insb
lret
cmp
repnz
in
xor
push
aas
stc
add
push
xor
das
dec
add
add
jg
je
bound
pop
xor
jmp
int3
and
pop
jae
and
ja
mov
movsb
mov
mov
in
int
ret
ret
mov
and
jns
fmull
dec
jl
ret
aam
sub
xchg
repnz
inc
mov
pop
lcall
out
push
inc
out
xchg
dec
hlt
fidivrs
cmpsl
adc
jecxz
mov
or
xchg
dec
jle
xchg
movntps
push
call
mov
fmuls
mov
das
sbb
dec
outsl
xlat
ss
imul
mov
add
and
pushw
std
inc
ret
in
sbb
or
aas
xchg
adc
pushf
cs
adc
or
and
into
test
jo
jnp
push
cmp
mov
shll
add
popf
push
push
hlt
adc
stos
push
out
outsb
or
movw
add
xor
fdivl
sahf
add
jb
pop
jmp
mov
sbb
jmp
and
test
push
xor
inc
and
std
cmp
xor
push
add
and
subl
repnz
add
dec
adc
dec
les
ret
testl
mov
test
sub
mov
movsb
sahf
or
mov
jl
fsts
and
inc
aas
push
ret
pop
or
push
loope
and
adc
cwtl
cmp
jecxz
push
xchg
push
pop
mov
cmpsb
out
mov
lahf
mov
jl
cmp
pop
int3
mov
sbb
add
out
push
mov
je
test
icebp
sti
insb
adc
inc
xchg
xchg
sub
stc
repnz
mov
lods
inc
aad
mov
push
in
iret
mov
pop
les
pusha
sti
mov
in
fsubp
outsl
sbb
test
clc
cli
sub
jecxz
sub
or
dec
cs
push
xchg
push
sbbl
add
mov
mov
dec
cmp
nop
mov
inc
loope
mov
mov
jno
aaa
sbb
jecxz
fwait
icebp
xor
leave
shll
mov
or
loopne
mov
cltd
fbld
jmp
fsubl
sub
test
pop
xor
shl
adc
sbb
xor
mov
popf
sbb
mov
je
sub
sub
daa
inc
out
stos
into
adc
dec
scas
jno
cmp
aam
inc
fwait
in
pop
adc
fiadds
xor
jp
into
clc
mov
mov
addr16
lahf
out
fcmovnu
dec
or
sti
movsl
push
std
fmull
nop
cmc
mov
sti
jne
fisubs
cmp
sub
movsl
pop
pop
cmp
das
fwait
adc
add
pushf
inc
es
jge
jne
out
sbb
add
in
push
je
call
xchg
xchg
pop
mov
and
daa
mov
mov
sahf
mov
and
push
fdivrs
es
xor
lcall
stos
test
cmpsb
sub
sahf
mov
jbe
pop
add
xchg
lock
lea
ja
sti
push
out
fiaddl
gs
xchg
icebp
faddl
mov
mov
ret
imul
scas
das
stos
movsl
adc
add
pop
xor
mov
xor
lret
add
rcrl
mov
adc
call
push
int3
mov
movsl
shll
cmpsb
enter
idivl
xchg
mov
adc
fidivrs
stos
mov
leave
or
mov
shll
cwtl
xchg
inc
push
ds
leave
push
das
sub
into
daa
jl
in
bound
jge
cmpsb
testb
aas
lahf
fcomps
in
rolb
decb
fstpt
xor
xor
ret
into
add
or
repz
stos
push
addr16
push
xor
subps
lret
mov
pusha
pop
jne,pn
ds
cld
dec
insl
xor
mov
or
cli
dec
and
sub
ss
sbb
xchg
popf
in
or
sbb
in
fs
xchg
lds
mov
sub
andl
lahf
jp
aas
pushf
mov
push
cli
lahf
sarl
test
push
inc
fcmovne
xor
dec
mov
or
jmp
inc
pop
add
out
fsub
push
push
lret
pusha
aas
fld
cltd
xor
loopne
test
push
mov
sbb
fwait
pop
leavew
push
xor
xlat
push
add
rclb
and
mov
mov
sub
cli
inc
jecxz
cmp
sub
das
mov
pop
pusha
xchg
push
cld
jb
clc
out
inc
leave
jbe
gs
xor
stos
push
mov
sarl
int3
inc
xchg
jmp
dec
xor
sbb
xchg
xchg
test
or
addr16
mov
adc
add
lods
daa
lods
lret
push
or
mov
or
jecxz
mov
jg
dec
lods
mov
pushf
add
sbb
adc
outsl
add
sti
sbb
stos
add
fstl
ret
jnp
or
aad
inc
inc
dec
cs
fnstsw
adc
mov
dec
movsb
lahf
imul
cmpl
mov
out
inc
ja
inc
push
in
and
ret
and
outsb
mov
pushf
add
aaa
ss
dec
cli
in
lret
add
ja
sbb
rclb
cmp
rclb
mov
stos
push
mov
inc
and
nop
pusha
sbb
pop
int
mov
dec
nop
mov
xlat
cs
add
jecxz
push
jmp
cmc
imul
xchg
add
jnp
leave
lods
lret
dec
imul
test
enter
movsb
ds
pop
movsl
add
dec
add
loopne
imul
rcll
imul
fmul
or
out
std
push
dec
into
xor
jbe
jns
jge
dec
test
in
mov
mov
lods
xor
push
sub
cs
push
and
pushf
push
rclb
or
mov
aad
js
or
leave
dec
psubusb
sar
jmp
call
imul
cmp
cltd
imul
sbb
adc
inc
mov
jnp
or
popf
lret
add
andl
push
loop
adc
js
test
sbb
popf
mov
shr
in
int3
inc
arpl
jmp
adc
adc
xor
mov
dec
or
shll
in
test
jle
jnp
mov
dec
pop
xor
cwtl
mov
cmp
jns
iret
out
push
lods
outsl
icebp
push
stc
mov
pusha
cmp
sub
xchg
or
testl
cmp
and
fs
pop
cmp
xchg
add
pop
sub
jmp
shr
add
aas
call
sbb
push
popf
adcl
mov
lahf
movsl
out
xchg
sbb
jbe
sbb
std
cmp
bound
mov
jecxz
lds
imul
int3
sbb
inc
xchg
or
dec
inc
and
fisubs
insl
mov
pop
adc
test
sahf
mov
push
jmp
cmp
fwait
push
dec
push
call
or
push
shl
fdivrs
and
ds
sbb
xchg
cmpl
lret
jecxz
adc
das
xchg
or
bound
dec
jbe
aam
or
and
xor
mov
inc
popf
jno
pop
inc
clc
push
nop
dec
inc
fistl
sbb
add
into
pop
bound
jle
pop
sub
je
not
add
cmp
movsb
into
mov
fmuls
mov
lock
loope
add
sbb
lea
sub
mov
loop
test
aad
mov
push
push
adc
xchg
or
test
sbb
xchg
aaa
jge
mov
sarl
push
xchg
lds
pop
ds
xchg
fnstsw
sahf
mov
jno
out
std
gs
movsl
adcb
int3
shrl
imul
jae
xchg
icebp
xchg
and
fnstcw
sub
xchg
int3
or
lea
sub
std
shl
bound
xchg
jns
cmpsl
jns
sbb
ja
dec
fstpt
mov
adc
cs
shlb
push
xor
cwtl
pop
dec
mov
cltd
das
scas
jno
sbb
les
sub
mov
cmpsb
ret
adc
mov
dec
inc
ret
cli
mov
and
fcomps
mov
fs
lods
sti
aaa
pop
xchg
repz
pop
xchg
dec
insb
dec
fildll
es
jge
mov
xchg
inc
xchg
ret
dec
push
lahf
push
mov
cmpl
and
mov
push
mov
in
cmp
fmuls
jae
push
sub
lods
and
das
and
push
jg
enter
call
mov
ja
jnp
adc
adc
es
jp
mov
pop
leave
dec
jmp
ss
pop
xorl
and
mov
mov
insb
movsl
das
ret
rcll
sbb
stc
jae
movsb
xlat
push
sbb
cltd
inc
fisttpl
xchg
je
and
mov
xor
iret
jmp
scas
add
cmpsb
add
in
jae
push
insl
test
test
nop
xchg
loop
adc
mov
out
les
scas
ret
adc
test
pop
insl
add
sbb
xorl
loope
mov
aas
fs
pop
sbb
mov
rorb
mov
push
repz
loope
mov
popa
rcr
add
mov
jl
bound
cmp
hlt
mov
test
add
mov
cmp
jnp
and
mov
adc
xchg
out
ficomps
xor
mov
fwait
js
mov
fs
dec
dec
xchg
adc
aad
jne
adc
nop
push
pop
scas
dec
mov
les
fs
movsb
mov
stc
mov
mov
mov
inc
stos
jb
mov
jb
jecxz
addr16
adc
fs
nop
pop
xor
jns
xor
fistps
add
andl
push
iret
sbb
iret
insl
add
jae
push
aad
mov
out
lock
movsl
mov
cmp
or
xchg
xchg
pop
test
mov
popa
jno
push
fwait
push
les
adc
push
gs
mov
sub
leave
subb
add
sub
push
jae
pop
mov
rcll
mov
and
adc
pop
push
inc
into
dec
aam
out
push
scas
inc
mov
cwtl
or
xor
inc
pop
dec
push
push
xor
ss
inc
dec
call
mov
sbb
dec
int
shll
inc
jle
push
out
adc
sub
outsl
add
int
inc
xchg
daa
mov
push
sbb
rcll
mov
fcoms
ljmp
dec
test
leave
push
lret
xor
push
adc
mov
sbb
ja
addb
pop
inc
dec
loopne
dec
jl
mov
sbb
xchg
sahf
lods
jmp
or
add
and
add
jl
enter
push
icebp
aam
xchg
push
pop
xor
hlt
pop
imul
mov
inc
add
jg
ljmp
inc
ss
or
inc
lods
fcmovnbe
loopne
mov
out
mov
jae
mov
or
test
pop
mov
push
dec
mov
mov
repz
dec
push
jb
sub
mov
rcrl
popf
sbb
and
out
popa
data16
hlt
jp
dec
dec
push
mov
adc
data16
scas
jge
cltd
lahf
push
mov
mov
movsb
sar
push
mov
sub
adc
pop
xor
mov
jo
aam
adc
adc
mov
jno
sub
jp
xlat
inc
sub
scas
test
mov
adcb
jl
outsb
gs
test
test
nop
loopne
xor
push
mov
jg
adc
fsubr
push
popf
or
mov
leave
or
movsb
mov
arpl
lcall
paddusw
sti
mulb
xor
sbb
pusha
mov
xchg
sub
cmp
movl
sub
or
fs
int
mov
cmp
int
nop
out
sbb
cmpsl
in
dec
add
pop
orb
aaa
sti
pop
cmpsb
add
roll
popa
and
nop
and
pop
cmp
in
inc
sahf
mov
nop
mov
mov
ljmp
pusha
cmp
jb
adc
inc
shlb
pop
fwait
in
mov
mov
pop
xor
ja
jl
add
mov
pop
dec
insb
or
repnz
jbe
sbb
mov
cli
into
aaa
or
dec
scas
lcall
jmp
lahf
mov
aas
aas
push
pop
dec
loope
movaps
scas
neg
imul
subb
mov
cmp
rsqrtps
rcr
frndint
shlb
xor
add
pop
test
out
in
add
push
sbb
loop
inc
mov
inc
mov
data16
jae
outsl
push
mov
std
loop
mov
dec
ljmp
pop
int3
xchg
pop
setle
lret
imul
cmpsl
lret
jae
xchg
xlat
add
lcall
leave
push
mov
hlt
daa
sahf
inc
leave
push
cld
shll
pop
mov
inc
into
and
or
pop
xchg
adc
insl
call
sarb
lahf
mul
aas
ds
mov
inc
and
in
icebp
scas
out
add
daa
jno
call
sbb
xlat
jl
or
aaa
push
fcomp
jo
jecxz
push
xchg
mov
xchg
adc
aad
or
mov
in
sarl
dec
test
inc
cli
mov
cmc
inc
add
sti
mov
sahf
jae
pop
mov
negl
insl
mov
in
and
xor
mull
nop
aad
xor
stc
loope
loope
mov
pop
in
shrl
or
adc
aad
test
je
push
push
repnz
lods
arpl
sbb
inc
or
lahf
jp
xor
lods
iret
rcrb
lods
jno
mov
inc
ret
lahf
mov
ret
mov
es
mov
int
mov
sub
pop
adc
jl
sbb
call
fadd
fucomp
or
scas
fimull
inc
or
xchg
std
xor
movsl
add
mov
adc
fidivrl
ss
inc
mov
pop
shll
jne
inc
inc
xor
adc
pop
loop
mov
mov
lret
das
iret
fisubl
ds
lods
jp
or
xchg
sub
sub
leave
and
or
xchg
int3
subb
and
das
les
pop
inc
jg
jge
push
lods
loop
fiaddl
xchg
cmpsb
pop
sub
test
std
add
lcall
int3
add
lds
repnz
add
mov
mov
add
mov
jb
adc
call
cmpsb
mov
lahf
fisubrl
xlat
test
inc
fisubs
push
mov
loope,pt
jnp
xor
jo
or
leave
and
outsl
out
loop
mov
cwtl
inc
jns
into
mov
push
popa
pop
and
in
push
pop
dec
gs
and
mov
imul
jp
jge
mov
lret
jb
mov
insb
cmpsl
xlat
pop
rorl
ss
outsb
cmp
loope
inc
frstor
jecxz
push
push
jl
andl
rorl
fdivrs
movsl
std
cmp
shll
shlb
jae
mov
or
adc
adc
jl
movsb
push
sbb
sub
xor
mov
inc
add
fcmovbe
loop
dec
mov
mov
out
pop
mov
or
in
xchg
dec
pop
inc
dec
into
lsl
inc
std
cmp
pop
cmovb
hlt
add
aad
jne
popf
mov
jge
bound
adc
adc
mov
mov
mov
fistl
shll
mov
leave
lods
dec
or
xchg
dec
jno
pop
dec
pop
aam
popf
push
mov
fs
fcompl
jmp
push
mov
mov
mov
sub
stc
add
dec
loope
add
adc
lret
or
and
lahf
sub
std
pop
aaa
sub
push
roll
pop
and
int3
xor
sbb
je
sahf
push
aad
mov
aas
aaa
push
lock
xchg
cld
or
add
and
xchg
xor
cmp
dec
jne
stos
movsl
push
cltd
call
xchg
xchg
add
pop
sub
jns
in
pop
jl
cmc
inc
mov
sub
fildl
push
pushf
inc
lret
inc
xor
sub
fs
jae
inc
ss
cmp
pushl
jbe
cmp
hlt
jno
push
xchg
cmpsl
xor
pusha
mov
jno
arpl
insl
pop
test
mov
add
sbb
clc
bound
in
mov
dec
mov
icebp
push
adcl
dec
fwait
pop
repnz
mov
jne
cmpb
jno
stc
out
shll
movsb
popa
dec
pop
or
lahf
arpl
cmp
mov
pop
pop
dec
pop
lock
jle
shlb
xchg
daa
xchg
mov
fisttpll
dec
aaa
test
xchg
dec
inc
stos
mov
sbb
or
js
push
lea
jno
pop
mov
jbe
mov
mov
or
int3
cli
pushf
sarb
insb
xor
xchg
int
cmp
pop
aad
push
sbb
or
inc
mov
xor
mov
enter
mov
and
mov
push
pusha
pop
aad
imul
test
lods
fldl
add
stos
jle
mov
outsl
sti
jmp
sub
adc
test
movsl
test
mov
mov
ja
cmpl
ret
sub
jb
shl
popa
inc
sbb
adc
inc
mov
aad
add
fwait
mull
or
insb
nop
pushf
xor
test
sub
xchg
aad
pop
sti
loope
sahf
les
mov
adc
jecxz
test
icebp
or
sti
dec
push
dec
lock
adc
add
pop
fdivrs
push
in
sti
mov
sub
call
es
add
inc
je
xor
adc
and
or
mov
xor
push
inc
cs
test
adc
xchg
inc
fidivrs
mov
dec
in
push
mov
jp
cwtl
repnz
mov
loop
mov
lret
pop
pop
dec
pop
lods
int3
insb
xor
shr
jp
gs
or
and
or
and
add
repz
xchg
cmp
cmp
imul
in
nop
sub
jp
adc
aaa
int3
cmp
jg
adc
imul
fsts
jno
sub
push
sub
jge
sbb
test
pop
dec
out
pop
and
sbbb
stc
fwait
adc
cmp
mov
jnp
add
and
push
cmp
cmc
stc
jg
add
stos
xor
push
es
shrb
adc
jbe
jno
xchg
jnp
lods
pminsw
mov
sahf
cld
scas
and
lret
scas
test
sub
jae
ds
adc
mov
repnz
jno
and
leave
or
fwait
push
cmp
xchg
mov
xchg
call
mov
and
es
lock
in
lcall
sbb
dec
in
rcll
insb
cmc
inc
std
inc
xor
dec
pop
push
pop
stos
mov
jg
mov
xchg
and
mov
mov
or
add
inc
andl
xchg
test
in
imul
fsubl
aaa
jno
fldenv
pusha
jb
pop
adc
test
lret
idivb
out
add
xchg
fwait
mov
xlat
fnstsw
mov
cwtl
fdiv
ret
ja
mov
dec
shll
lret
js
mov
or
lahf
add
loopne
mov
jp
sub
add
sbb
pop
test
scas
jmp
pop
iret
jb
add
cmp
test
lahf
mov
fprem
mov
sbb
mov
xor
mov
in
inc
jl
add
mov
sub
cmp
fwait
test
pop
rorl
mov
loopne
mov
mov
sbb
pop
pop
xchg
loope
cmpsb
lahf
jno
test
mov
es
stos
loop
loopne
dec
jne
push
dec
pop
outsb
insb
add
ja
scas
outsb
mov
cld
sahf
lret
repnz
cmp
nop
clc
push
xchg
and
insb
add
xor
sub
add
mov
shll
and
mov
add
or
jge
mov
outsb
and
pop
lcall
in
hlt
loopne
and
pop
mov
ss
outsb
xchg
mov
leave
cmc
fs
push
lds
mov
jo
arpl
mov
sahf
jge
inc
cmp
adc
mov
sbb
sub
jmp
insb
decb
xchg
and
cmpsl
cmp
out
add
xchg
ja
pop
dec
and
insl
lods
int
push
jg
and
pop
enter
mov
stos
punpckldq
pop
and
mov
sahf
xchg
and
outsl
inc
int3
adc
add
in
nop
int3
gs
es
mov
repz
aam
cmp
insb
call
stos
pcmpgtw
movsl
out
mov
adc
push
or
xorb
fxtract
adc
or
adc
popa
adc
xchg
lret
aas
outsb
in
dec
popa
cmc
push
cmp
jle
push
dec
ljmp
fidivs
rorb
mov
lret
mov
jmp
out
cli
jmp
push
mov
ret
aaa
push
frstor
aam
push
jmp
out
or
sbb
popf
cmc
or
mov
clc
sub
js
pop
or
lahf
sbb
cmp
les
xor
add
shrl
jge
gs
addr16
mov
dec
cmp
scas
or
dec
mulb
roll
and
cmp
add
les
pop
xor
outsb
inc
sbb
loop
pop
nop
mov
cmpsb
pop
add
sub
pop
cld
mov
jae
lods
pop
insb
xlat
inc
adc
jae
dec
nop
inc
movsb
mov
add
pusha
push
fsts
cmpsb
leave
cmpsb
lods
jp
in
xor
mov
xchg
pop
arpl
mov
sub
repnz
jge
push
iret
xchg
xchg
iret
stc
jbe
sub
mov
loope
sti
movsl
jmp
cli
add
push
test
data16
aas
stos
test
sbb
mov
ja
outsl
shll
inc
dec
jg
inc
dec
xchg
repnz
out
dec
xor
cmp
repz
cmp
fcoml
mov
sbb
dec
push
incb
stos
push
out
stc
cmp
popf
lret
or
iret
std
jne
lret
add
aaa
shll
std
and
insl
nop
jp
movsl
imul
bound
push
in
stos
inc
or
dec
fwait
adc
cmp
lcall
lock
xlat
xchg
ja
orb
sub
sti
stc
xor
and
imul
es
inc
std
popf
inc
and
pop
push
nop
push
clc
jecxz
and
add
hlt
mov
lock
mov
add
clc
mov
and
xchg
std
dec
xchg
mov
adc
test
mov
idivl
shr
in
pusha
insb
xchg
or
cmp
jp
shrl
sub
mov
pop
rorl
pop
mov
ret
mov
and
xor
mov
pop
pop
mov
dec
or
jle
pop
mov
xor
jmp
mov
ret
or
xchg
sbb
lahf
out
aaa
xlat
pusha
fcmovnb
lds
inc
sbb
cmpl
push
inc
aad
faddp
adc
xchg
cld
or
fadds
cmp
mov
int
into
jns
push
xor
jnp
icebp
xchg
jg
mov
sbb
mov
add
loopne
lods
jo
sbb
jecxz
aaa
sub
ljmp
insb
in
inc
jbe
inc
xor
mov
jbe
xor
pop
xchg
pop
out
cwtl
fiaddl
sub
adc
divl
jnp
leave
push
mov
xor
sbb
dec
or
arpl
lea
xor
arpl
inc
subb
mov
jae
jb
or
ret
fisubrs
inc
xor
mov
cmp
cmp
push
bound
ja
fidivs
lds
and
mov
or
stos
mov
mov
mov
ss
and
hlt
icebp
and
fistpl
in
ret
xlat
lahf
shrl
lcall
mov
rcl
pop
fcoml
aam
dec
outsl
int
cmpsb
bnd
sub
sub
xor
mov
adc
pop
mov
push
xor
sbb
mov
popw
xor
leave
inc
dec
xchg
das
scas
cmp
test
lock
xchg
fisubrl
add
push
addr16
pushf
aas
adc
daa
aam
lea
mov
mov
lock
inc
pusha
jne
mov
push
shl
repnz
mov
call
mov
jae
jnp
mov
cwtl
out
jns
mov
mov
and
lds
repnz
cmp
jns
xchg
inc
sbb
call
gs
out
push
outsl
inc
sub
std
ret
lahf
adc
add
dec
adc
arpl
mov
mov
push
stc
mov
into
xchg
psrad
bound
cmp
cs
sub
mov
repnz
ss
cmp
mov
popf
bnd
pop
movsb
orb
dec
and
and
cwtl
or
clc
and
into
mov
sub
scas
mov
ds
fldt
pop
ds
sbb
repz
ss
cmp
mov
stos
inc
cmpsb
xchg
fisubl
in
push
add
inc
jecxz
pusha
pop
scas
sbb
xchg
jge
mov
inc
or
xor
fistpll
test
jae
pop
sbb
js
nop
sbb
xor
lock
sub
pop
inc
xor
ret
adcb
inc
shr
out
lods
and
jnp
addl
bound
daa
jp
ljmp
pusha
mov
push
ds
pop
xor
out
mov
hlt
sbb
daa
out
add
std
push
test
loope
inc
outsb
inc
gs
jae
adc
mov
enter
pop
fwait
or
push
aaa
je,pt
xchg
xor
push
mov
std
xor
fisttps
jmp
mov
push
mov
sub
aam
and
lcall
fdiv
dec
icebp
movsb
lods
repnz
push
negl
jns
sbb
lea
mov
mov
test
and
push
xchg
lret
inc
push
pop
gs
sbb
xchg
filds
push
das
std
jno
and
and
mov
or
mov
xor
outsl
les
lock
jecxz
and
pmaddwd
mov
sbb
insl
jl
cltd
xchg
in
push
add
into
loope
sub
jno
push
cmp
jg
jae
fdivr
xchg
mov
and
mov
cmpl
aam
dec
inc
mov
mov
jle
jae
adc
dec
inc
jecxz
xor
and
lea
fwait
mov
inc
ljmp
popa
push
out
fisubrl
negb
sub
add
out
jns
lock
or
ficomps
xor
cltd
in
lds
pop
jae
popa
mov
test
push
loopne
cmp
cmpsb
xchg
and
pop
xchg
sub
sbb
push
pop
cwtl
lods
and
insb
cmpsl
mov
pop
cmovae
lock
cmp
jnp
gs
push
pusha
xor
xchg
sub
cs
dec
sbb
inc
push
adc
cmp
outsl
mov
xchg
jg
push
adc
fildll
mov
add
adc
adc
sbb
lret
lahf
push
addl
jge
pusha
sar
xchg
imull
adc
lods
xor
stos
mov
mov
das
pop
popa
stos
pop
in
dec
es
xchg
scas
lret
push
jno
mov
push
arpl
mov
cmp
xchg
mov
mov
out
jnp
mov
add
xchg
ljmpw
scas
enter
ror
sar
sub
mov
push
push
dec
mov
fsts
cli
ror
jle
lods
mov
lods
add
lods
mov
push
push
fxam
aaa
pusha
mov
and
push
loopne
stos
mov
jmp
lds
sub
push
mov
cwtl
loope
cltd
outsb
xchg
mov
out
mov
lods
push
mov
icebp
stos
and
insl
and
into
cmp
mov
push
sub
inc
in
lods
out
mov
add
aaa
aaa
pop
pop
mov
nop
jae
pop
xorb
scas
jle
inc
aaa
push
lods
or
outsb
push
ss
popa
mov
jmp
ror
cmpsl
dec
jp
pushf
push
jmp
inc
je
push
js
xor
or
mov
add
lds
ljmp
rcll
pop
mov
jno
fs
xlat
addr16
mov
adc
setnp
sub
or
movsl
dec
xlat
xor
cmpsb
jae
loopne
mov
out
adc
add
inc
pop
adc
adc
lret
scas
fnstcw
daa
dec
aam
lea
int3
arpl
cli
scas
xor
test
lock
mov
ja
inc
adc
ret
xchg
jne
jp
mov
repnz
inc
push
bound
addl
and
out
pop
inc
push
xchg
out
sbb
push
xor
out
inc
imul
jp
mov
adc
xor
aaa
ss
pop
mov
adcb
push
push
sbb
into
xor
mov
adcb
in
cwtl
jo
pop
std
mov
mov
mov
addr16
adc
mov
es
mov
hlt
aad
pop
mov
sub
sbb
push
lea
outsl
and
hlt
inc
adc
mov
push
test
xor
adc
push
lret
cmpsb
adc
jl
jno
mov
cltd
cwtl
and
pop
int
cmpsb
mov
scas
lahf
xor
jae
sahf
aam
in
mov
sbb
add
imul
jnp
data16
jg
pushf
xchg
pop
mov
push
jb
rclb
imul
sbb
ret
fdivrp
notb
movsb
mov
push
scas
fstps
in
pop
xor
or
xchg
into
jecxz
fistpll
pop
xchg
ljmp
pop
lods
test
pusha
sub
loop
inc
test
jne
pop
dec
sub
dec
pop
mov
inc
push
scas
sbb
lret
push
cs
jg
jmp
jo
cmc
dec
mov
fs
cmpsl
dec
sub
cmpl
mov
lock
mov
and
rorb
jmp
inc
sbb
push
push
lcall
dec
nop
test
int
or
push
dec
mov
jno
ss
push
dec
or
lret
jnp
int
popf
add
mov
call
das
js
sahf
mov
adc
mov
xor
dec
lret
sahf
imul
mov
insl
dec
sbb
inc
ja
clc
xchg
sub
negl
loope
test
fcoms
outsb
data16
nop
pop
popa
in
daa
adc
jno
jmp
scas
jno
or
jge
xchg
aaa
dec
and
movsb
lea
std
dec
push
jcxz
movsb
lods
xor
insb
sti
push
xchg
mov
jb
inc
mov
inc
rorb
push
push
movsb
addr16
push
inc
xchg
aam
rcll
das
cmc
adcb
xchg
pusha
out
orl
add
cld
jmp
sub
and
mov
mov
xchg
scas
loope
es
add
add
dec
jbe
and
sti
lcall
xor
and
mov
push
xchg
cltd
insl
cli
push
xor
dec
mov
add
aas
dec
mov
xlat
cltd
and
mov
loopne
add
xadd
push
inc
mov
add
or
data16
push
dec
nop
es
jne
mov
push
sub
jbe
pop
out
and
mov
ljmp
sub
mov
inc
adc
pop
lahf
inc
adc
out
clc
and
mov
adcb
xor
fs
pop
jg
sbb
adcb
adc
mov
dec
inc
push
shl
pop
aam
dec
mulb
shrl
inc
inc
inc
push
mov
adc
lret
leave
leave
xlat
xchg
ljmp
dec
aas
mov
dec
jecxz
adc
filds
pusha
dec
lahf
in
cmp
mov
gs
leave
mov
mov
lcall
adc
dec
jg
sahf
in
out
sahf
mov
mov
adc
sbb
mov
mov
sbb
mov
cli
cmpsl
inc
adc
shl
out
push
lods
jecxz
icebp
add
jb
push
ret
fimuls
inc
or
mov
mov
lret
notb
mov
imul
jo
stc
dec
mov
data16
fistps
jae
add
sahf
shrb
add
add
imul
notl
xlat
outsb
fwait
mov
mov
pop
fs
aam
cli
arpl
into
call
pop
js
loope
jp
mov
clc
mov
stc
inc
sub
pop
push
jnp
add
cmp
iret
jl
mov
jmp
jns,pt
push
jge
cwtl
lret
add
cli
fmulp
mov
and
repnz
cmpsb
inc
fildll
sbb
add
bound
adc
dec
shl
fwait
mov
adc
push
mov
sbb
cmp
in
cmp
xor
mov
jg
pushf
mov
add
jb
mov
push
sbb
mov
popa
scas
dec
cli
je
sbb
in
sub
add
mov
movsl
and
add
sub
fsts
jg
test
push
cmpsb
mov
push
or
scas
pop
mov
int3
inc
int
outsb
fsubs
dec
xlat
cmp
cltd
gs
gs
stos
shl
sbb
subl
push
xor
stc
pop
loop
iret
int
cmp
cmp
cmpsb
push
sarl
mov
cmp
sbb
lcall
sahf
or
cmpsb
and
push
ss
jnp
decb
mov
filds
in
out
out
xor
mov
pop
leave
dec
sbbl
ffreep
call
aaa
xchg
out
js
xchg
lret
jo
testb
jnp
xchg
push
test
pop
sbb
sahf
sbb
sub
aas
lea
lret
test
jns
std
mov
cld
ljmp
stos
dec
hlt
push
sub
mov
in
jmp
fsub
ficomps
daa
hlt
sub
mov
pushl
pop
movsl
cltd
lret
cmpsl
or
jae
data16
sub
hlt
adc
adc
mov
mulw
mov
mov
fidivs
cmc
dec
and
leave
jo
in
push
xchg
dec
nop
pushf
ds
cmpb
push
mov
sub
mov
fwait
repz
or
sbb
ds
cwtl
ret
subl
push
xchg
jne
pusha
cmp
mov
ja
adc
mov
cltd
ds
mov
aam
pop
lods
dec
test
sbb
or
mov
hlt
sub
mov
mov
outsl
add
vsubsd
push
mov
jae
fistpl
mov
cmp
jne
or
push
scas
jl
stc
mov
aam
add
aaa
dec
fs
push
inc
cmpsl
loop,pt
stos
in
inc
out
fnstcw
jle
popa
dec
or
scas
bnd
xor
or
xlat
das
leave
call
inc
jp
cwtl
add
negl
push
push
add
test
jns
and
inc
pop
mov
out
dec
addr16
dec
lea
rorl
imul
dec
fildl
or
and
pop
loop,pt
or
daa
sub
test
cmpsb
sbb
adc
push
in
repnz
daa
dec
xchg
nop
cwtl
inc
std
cmp
mov
pushf
inc
push
loopne
sub
mov
push
ds
mov
fisubrs
lret
cli
jmp
mov
xchg
or
sub
push
hlt
sub
sahf
push
es
mov
ja
fildll
pop
mov
mov
movsb
mov
dec
jo
pop
xor
arpl
js
or
xchg
adc
mov
inc
jb,pn
mov
in
insl
into
cltd
out
xchg
notl
sbbb
mov
aam
mov
fwait
in
mov
sti
fstpl
adc
xchg
mov
aad
aad
movsb
or
dec
mulb
push
jp
out
subl
mov
xor
adc
ret
adc
jmp
cmc
lock
mov
push
and
mov
xchg
insl
fmull
outsb
adc
push
int
pushf
int3
push
fistl
lret
mov
jl
fistpl
into
int
pop
iret
add
jnp
ret
mov
dec
fcmovnb
data16
pop
es
jecxz
mov
sub
pop
jge
andb
cld
dec
mov
hlt
imul
ret
xchg
ret
icebp
and
cmp
xor
xchg
bound
and
mov
pop
call
pop
and
cwtl
cmpsl
pop
and
pop
scas
jmp
jnp
push
repz
test
mov
mov
fs
repz
cli
les
in
jg
negl
and
out
mov
cmp
xchg
xchg
dec
pop
pusha
pop
dec
lods
xchg
push
add
mov
dec
bswap
pop
pusha
mov
cltd
lea
add
test
popa
in
lods
jbe
outsl
adc
clc
pop
sbbb
pushf
push
cmc
out
xchg
lea
mov
sub
mov
mov
and
fisubrl
inc
adc
mov
jmp
jnp
xor
jno
lea
adc
fsts
in
out
int3
fadds
inc
cmp
loopne
dec
mov
aad
inc
pushf
das
in
jg
ljmp
xchg
xor
outsb
mov
sub
mov
and
inc
movsb
mov
cmp
ficoms
sub
push
xchg
xor
adc
stc
lds
push
cmp
inc
adc
fs
rcrl
jp
dec
dec
cmp
je
pop
test
jg
addr16
mov
loope
jae
hlt
xchg
movsb
inc
mov
jecxz
jno
dec
or
sarb
pop
inc
int
nop
add
push
popf
mov
popl
lret
and
adc
jecxz
push
inc
je
sub
pop
test
cmpb
mov
imul
fisubs
cmpsb
addb
stos
sbb
and
and
fstpl
dec
daa
jbe
sbb
fs
arpl
out
adc
or
and
jno
pop
inc
inc
lcall
arpl
lods
lds
xchg
ret
test
rol
les
out
xchg
xlat
xor
repz
shl
mov
in
pop
inc
arpl
nop
or
pop
mov
js
xchg
arpl
das
inc
mov
mov
ljmp
mov
push
or
push
out
push
das
into
clc
push
or
cmp
repz
mov
mov
popa
cs
fnstsw
call
sbb
rol
cli
and
push
jbe
insl
setbe
mov
rol
aaa
mov
aad
imul
adc
fcomi
add
outsb
int3
pop
mov
push
fcmovu
fs
daa
cwtl
and
cltd
in
adc
add
rcl
pushf
data16
and
add
sub
push
mov
inc
cltd
push
leave
pop
jns
sub
push
cli
faddl
mov
push
push
in
in
out
push
pop
jbe
inc
pop
pop
aad
mov
sti
movl
sub
jge
pop
jg
and
xchg
sarl
inc
into
add
mov
mov
mov
in
shl
mov
or
inc
and
cli
dec
stos
rolb
pop
iret
dec
icebp
mov
outsl
lahf
dec
xchg
xorl
in
xor
nop
je
mov
fadd
cli
lahf
xor
jnp
or
mov
push
dec
cs
aad
jecxz
gs
mov
adc
loope
ficoml
xchg
push
mov
gs
jno
out
les
std
mov
scas
jle
inc
mov
lret
cmpb
mov
repnz
andb
xorb
in
sbb
sbb
jne
stc
shrb
mov
sub
adc
sbb
sub
sti
sbb
loop
test
mov
sbbb
sub
adc
adc
add
stos
cmp
les
xchg
test
lret
push
cmp
or
push
mov
dec
mov
roll
leave
ss
cmp
cltd
mov
leave
scas
mov
orb
dec
cmp
sub
dec
iret
xor
ror
dec
cmp
popf
lahf
mov
adc
cmp
push
js
mov
sbb
jge
stos
jb
sbb
mov
sbbb
int
mov
add
inc
imul
push
adc
mov
add
push
push
mov
mov
cli
call
stos
and
xlat
loope
nop
cmc
lcall
popf
ret
add
sar
mov
mov
jecxz
mov
pop
lret
or
push
frstor
xchg
movsl
dec
xchg
cltd
pop
addb
sub
mov
fmul
int3
popf
xchg
inc
push
hlt
push
ret
jb
add
push
lret
shll
inc
push
xor
or
sub
and
repz
outsl
sbb
sub
daa
xchg
cwtl
rorl
mov
pop
dec
xchg
xor
pop
mov
sub
cmpsb
jmp
dec
out
das
fstpl
aas
add
add
imul
xlat
ss
add
cmp
mov
repnz
xchg
stos
adc
ss
adc
fnstcw
mov
mov
push
mov
loopne
lods
out
push
out
sbb
sub
push
inc
or
divl
sbb
fbld
inc
insl
xchg
in
pop
mov
jns
pop
stos
test
push
pop
jb
es
xchg
cmp
daa
xor
sbb
sbbb
fadds
sub
pop
cwtl
mov
mov
push
mov
inc
jno
outsb
ret
mov
mov
xor
mov
dec
inc
sbb
dec
mov
call
in
stos
mov
sti
fldt
mov
rclb
sbb
and
rclb
fldl
fdivrs
into
lahf
fs
les
cmpsb
jle
arpl
test
push
sub
add
fisubrs
jmp
outsl
pop
jecxz
cmpsl
dec
push
mov
cmp
nop
mov
pop
shl
test
ljmp
xchg
pop
fidivl
lock
mov
jmp
jb
add
bound
xchg
adc
or
jge
clc
mov
add
ss
orb
and
repnz
sahf
loop
inc
into
mov
inc
and
inc
lea
shl
xor
insb
xchg
push
ja
cmp
sub
loope
cmp
add
fists
aas
roll
ror
xlat
leave
push
jl
cmpsl
xchg
into
insl
sub
push
or
popa
xor
pusha
dec
dec
dec
cmp
jle
push
xchg
addl
cs
xor
repnz
xchg
ss
fmul
fisubl
outsl
movsl
outsb
jno
aas
mov
push
pop
decl
xor
dec
or
mov
mov
mov
test
test
mov
adc
mov
scas
cmp
fiaddl
jb
dec
hlt
inc
or
sub
adc
inc
pop
pop
pop
mov
sub
lret
fwait
jp
push
mov
insb
shr
inc
lret
xor
fcoml
and
iret
push
push
mov
imul
inc
shll
adc
jg
push
shll
adc
ja
ds
push
pop
popf
out
fdiv
and
ret
and
into
add
push
aas
or
stc
mov
pusha
mov
int3
inc
lock
loop
pop
aaa
ret
lods
ret
ja
jmp
es
stos
jl
scas
daa
fchs
push
test
in
push
cmp
and
pop
adc
xor
ffreep
pop
into
dec
pop
int
shrb
pushf
rclb
enter
sarb
jo
jae
dec
ret
push
sbb
xchg
and
add
outsl
cs
push
ds
add
mov
ja
imul
inc
cmp
cld
xor
cmp
shll
xorl
adc
sahf
dec
out
push
aas
mov
into
jae
jecxz
pop
mov
icebp
push
add
js,pn
jno
cmp
into
mov
mov
adc
mov
movsl
jns
ret
lds
out
scas
stos
adc
push
aaa
inc
add
lret
pushf
push
dec
les
and
jo
in
ja
xor
dec
pop
bound
into
push
test
rolb
mov
repz
or
fxch
mov
mov
fsub
rcll
push
repnz
sbb
aas
out
jg
mov
mov
aad
xor
iret
aad
xlat
por
push
sbb
addr16
push
jb
jmp
outsb
sub
imull
mov
add
mov
sarl
shrl
lahf
pop
push
imul
rclb
push
dec
mov
repz
std
in
rcr
add
pop
sub
lds
push
cmp
xchg
pop
repz
ljmp
inc
mov
es
cmpsl
dec
add
cli
stos
add
push
pop
add
and
jns
mov
fisubrs
cmp
mov
fsubrs
jl
or
test
mov
rcrl
imul
push
lahf
ja
sbb
loopne
int
or
xchg
mov
xchg
push
inc
inc
call
mov
jno
sar
in
push
negl
daa
lock
push
sbb
or
inc
mov
stc
pusha
and
jp
out
cltd
inc
mov
xchg
dec
or
daa
out
popf
data16
int3
mov
insl
es
sbb
mov
add
mov
xchg
imul
pop
xchg
fiadds
mov
lret
fcoml
sub
fisttpl
or
inc
and
xor
adc
xchg
loopne
and
repnz
mov
fwait
dec
leave
push
push
outsb
inc
rcl
push
pop
pop
cmpl
mov
mov
mov
ja
add
dec
inc
call
jae
push
cmp
sub
push
sub
jo
out
push
iret
daa
fmull
mov
imul
jb
mov
xor
leave
jb
outsb
repz
cmpsl
scas
jg
xor
test
in
jbe
outsb
fwait
pop
test
adc
mov
or
xor
add
xor
fiaddl
xlat
ss
mov
movsl
in
stc
cs
mov
repnz
loop
ds
jp
jns
call
or
sti
pop
jmp
rorl
jo
jns
aam
int3
cmp
jl
pusha
jmp
and
repz
cmp
mov
arpl
or
in
sbb
enter
fimull
notb
push
in
fs
es
cli
aaa
mov
cmp
or
stc
jb
mov
orb
fwait
jbe
sbb
pop
call
jle
and
cmpsb
insb
push
iret
pusha
popf
lcall
cltd
mov
mov
jae
xchg
test
das
mov
lds
dec
div
test
fistpl
or
cli
testb
sub
sahf
clc
das
sbb
cwtl
leave
or
mull
lcall
lds
fldt
jmp
movsl
adc
jl
imul
int
std
les
xlat
mov
testb
xorb
or
adc
inc
lret
mov
iret
cli
outsl
jle
pusha
sub
xchg
aas
jbe
lret
dec
jb
add
sbb
call
cld
mov
out
mov
xor
enter
pop
in
ret
testb
pop
aas
shlb
sti
or
xchg
ss
outsl
jmp
or
mov
mov
inc
imul
and
inc
ss
mov
push
lahf
insl
out
testl
xor
inc
and
mov
jno
jecxz
jnp
pushf
in
mov
or
xchg
xchg
xor
lods
fnstenv
test
xchg
sub
inc
adc
sbb
pop
leave
push
out
push
lret
stos
jnp
aaa
add
inc
inc
addl
outsb
xchg
pop
cmc
jmp
fidivl
insl
nop
lahf
aam
jmp
nop
and
sub
cwtl
popf
bound
pop
les
jnp
enter
out
mov
cmp
push
mov
outsb
inc
or
movsb
lea
jae
call
ret
xchg
gs
mov
or
xchg
dec
cli
cmp
bound
push
jle
popf
mov
in
xor
not
push
lods
jae
xchg
mov
sbb
stc
mov
mov
mov
test
das
add
fwait
add
push
out
and
cltd
fldt
scas
add
fucomp
neg
je
pop
scas
shlb
sarb
fs
lcall
cmp
fwait
sub
in
pop
xchg
adc
das
test
adc
pop
out
adc
outsl
decl
pushf
imul
cld
jl
cmp
movsl
jnp
je
jg
cmpl
das
inc
xchg
popa
call
fldcw
xor
jle
fs
jnp
jns
push
push
xchg
cmc
movsl
je
xor
mov
outsb
pop
test
stos
xchg
jbe
out
inc
inc
add
and
pop
xor
or
arpl
fs
fldl
sbb
xor
push
mov
mov
mov
in
in
pusha
loopne
pop
stc
push
aaa
arpl
mov
pop
push
repnz
lods
dec
push
daa
mov
gs
sbb
and
dec
imulb
scas
ffreep
popf
popf
popa
ljmp
xchg
or
pusha
outsb
movsl
cmp
insl
lret
aaa
loop
mov
inc
fldl
mov
nop
mov
fisttpll
sbbb
push
add
xchg
leave
negl
xor
sub
inc
mov
dec
push
xchg
pop
mov
add
jbe
pop
add
frstor
cmp
pop
fstl
inc
mov
gs
pop
popf
sbb
movsb
js
test
jno
jo
pop
js
iret
and
xor
js
insb
mov
cmp
leave
push
push
and
xor
test
movsb
xchg
or
dec
mov
pcmpeqw
mov
outsb
cs
ljmp
inc
popa
xchg
rcl
jns
mov
mov
sbb
jnp
lret
mov
out
jl
push
addl
xchg
mov
cmp
shrl
ja
scas
sub
test
mov
nop
iret
iret
and
dec
shrl
adc
add
xor
pop
mov
mov
xchg
xor
mov
in
jmp
mov
insb
dec
test
inc
sbb
cmp
into
cld
pushf
xchg
test
loope
xchg
sub
jmp
add
jb
out
inc
es
movsb
dec
jg
gs
iret
mov
addr16
mov
jl
inc
push
cld
xchg
gs
push
push
sahf
xchg
dec
lods
push
xchg
inc
ja
and
lods
pop
and
aad
mov
out
sbb
es
ret
es
movsb
addr16
lods
mov
sub
adc
sbb
jge
pushf
sub
dec
and
jno
clc
shl
push
push
pop
repz
popf
jmp
lret
mov
cmp
or
xor
mov
in
sbb
pop
cmpsl
leave
daa
stos
push
or
dec
sub
dec
sbb
push
pop
pop
sub
imull
and
sbb
ret
inc
dec
inc
inc
sti
sahf
jp
call
out
mov
cmp
aam
jnp
jl
insl
stos
lret
push
aam
bound
lods
in
ret
cmpb
aaa
jns
add
stc
jl
mov
sbb
int
xor
sarb
adc
mov
mov
pop
jg
and
xor
jmp
popf
xchg
xor
lods
and
test
xor
push
cmp
add
shl
std
fnstenv
add
sub
test
jne
test
pop
mov
push
icebp
jl
jecxz
and
lods
orb
pop
push
inc
xchg
pop
es
sbb
dec
ret
push
iret
mov
sbb
cmc
outsb
daa
lret
movsl
mov
cmp
fistl
jmp
test
sub
or
outsl
pop
and
dec
test
rorb
js
pop
mov
into
cs
and
stc
add
out
ret
scas
xchg
rol
jns
and
xor
sub
jne
into
cld
push
stc
push
in
test
outsl
sub
jge
std
and
pop
pop
jge
sbb
mov
and
mov
mov
in
mov
in
scas
std
cmp
push
out
sbb
rcl
push
lods
lret
push
mov
sub
insl
icebp
ja
movsl
lds
lds
sub
jmp
in
js
iret
cmp
fcoms
js
and
mov
out
xchg
arpl
ljmp
push
cmp
loop
movsb
xchg
pop
mov
jecxz
mov
mov
sub
cmpsb
lods
mov
insb
push
and
bound
aam
or
cwtl
mov
mov
adcb
push
cmc
push
fwait
mov
or
push
mov
fdiv
or
inc
in
pop
or
into
cmp
ljmp
push
xor
mov
ror
sub
rcll
adc
or
sti
ret
dec
cmp
loop
loopne
sbb
stos
jp
popf
inc
xor
fcoms
gs
push
dec
lcall
xchg
inc
les
inc
inc
sub
insl
rolb
or
int3
pop
push
jl
push
pusha
mov
sahf
test
and
aam
loopne
ljmp
or
inc
dec
shlb
adc
lock
adc
push
mov
dec
mov
and
jne
xchg
push
mov
ss
push
or
sarl
and
mov
xchg
push
push
daa
int
movsl
inc
sbb
leave
iret
or
add
adc
pusha
xchg
fidivl
lret
out
rolb
shl
adc
xchg
stos
jmp
shlb
dec
cli
mov
pop
mov
cmpl
cmp
les
cmc
mov
xchg
cwtl
sub
push
dec
cwtl
outsl
fcomi
rcrb
data16
push
xor
test
cmc
mull
sub
idivb
add
xchg
jbe
ljmp
stc
xor
fsubl
mov
cli
loope
aam
popf
jnp
andl
add
scas
xchg
ret
and
shrl
test
addr16
jae
daa
or
ljmp
test
loop
or
cmp
add
pop
inc
pop
pop
scas
mov
sub
cmp
jp
fldenv
sub
ja
add
loop
and
pmaddwd
in
js
mov
lods
sbb
repnz
jb
mov
dec
push
cmpsl
adc
fsubr
or
jne
sub
orl
lock
mov
fbld
js
out
dec
pop
jge
pop
pop
notl
popa
dec
scas
cmp
pop
add
shll
jb
rcrb
adc
scas
jecxz
mov
jnp
cmc
in
mul
jnp
mov
mov
scas
pop
sbb
rclb
popa
int3
jg
fmull
int
dec
mov
jmp
aam
jns
cltd
lds
mov
jne
stc
pop
cltd
in
or
xchg
sub
cli
pop
push
push
pusha
out
incl
stos
arpl
sbb
movl
arpl
test
adc
shrl
aad
xchg
xor
call
inc
adc
mov
mov
rol
ret
aaa
sub
push
xor
les
aam
outsb
sbb
mov
sub
das
lret
lods
mov
cltd
out
adc
aas
dec
lcall
push
test
fcompl
sti
jle
xlat
movsb
push
in
mov
pop
cmp
jle
inc
xlat
cmp
cmp
jno
iret
inc
enter
shrb
iret
ja
pop
sbb
out
fistpl
jnp
jp
sbb
fisubs
pop
pop
mov
sbb
dec
add
test
dec
sbb
in
out
test
out
scas
shlb
cld
push
inc
sti
mov
xor
mov
pop
lret
mov
lcall
mov
cmc
mov
hlt
loop
adc
mov
inc
sub
mov
cmp
jmp
adc
imulb
xor
je
jg
mov
imul
cwtl
lds
in
and
into
push
pop
icebp
jnp
jl
adc
dec
add
bound
movsb
imul
jb
push
mov
dec
mov
mov
cld
les
pop
cmpsl
pop
cmpsb
push
xchg
fs
mov
jl
mov
mov
and
sub
mov
arpl
daa
sti
xor
add
dec
xchg
ljmp
mov
xchg
mov
dec
dec
mov
jnp
out
jno
lods
jbe
pop
mov
stos
loopne
shll
dec
loopne
out
imul
cmpsb
leave
arpl
stc
shl
insb
jo
pusha
sub
idivb
dec
xor
scas
dec
in
dec
int3
jne
pop
stos
mov
adc
mov
dec
nop
jbe
test
or
sahf
fisttpl
gs
or
or
sub
mov
sbb
gs
sub
outsl
mov
call
test
movsb
and
ss
sub
cmp
xchg
or
fucom
mov
movsb
or
daa
out
and
lcall
xor
lcall
jg
shl
inc
arpl
jo
les
pop
andb
mov
jp
ror
push
adc
jns
lods
bound
add
test
ja
jno
push
ret
or
xchg
and
aam
jp
xchg
movsb
sahf
test
ss
sbb
adc
dec
xchg
gs
pusha
mov
pop
mov
cli
faddp
popaw
mulb
push
scas
lds
mov
or
movsl
push
pop
arpl
movsb
dec
es
cs
xor
fmulp
sahf
inc
xchg
jnp
call
mov
ret
xchg
imul
inc
sahf
cmp
mov
into
lahf
movsb
subl
mov
cmp
mov
xchg
mov
nop
out
cld
mov
jmp
adc
bound
mov
inc
jle
loope
mov
inc
push
cwtl
lock
mov
jle
popf
js
mov
div
xchg
mov
inc
dec
pop
or
scas
adc
and
mov
mov
mov
cmp
and
cmp
inc
lods
mov
jbe
jp
movsb
jecxz
push
iret
xor
push
popa
jl
pop
inc
xor
frstor
xor
adc
jecxz
xor
lock
xor
loopne
pop
jbe
jecxz
jp
sbb
insb
mov
cmp
ret
sbb
sbbb
adc
lea
pushf
add
fiaddl
mov
inc
mov
into
cltd
adcb
cmp
out
outsb
clc
lahf
xor
aaa
fs
setle
mov
adc
push
and
iret
lret
jmp
enter
hlt
das
dec
inc
pop
cmp
mov
push
or
xor
pushf
mov
imul
fdivs
movsb
mov
sub
xor
ss
data16
jbe
out
iret
push
and
fsubs
jno
inc
mov
les
xchg
xchg
lret
lret
sub
mov
mov
imul
cmpsb
or
dec
xchg
mov
mov
sbb
pop
ja
lock
xor
fidivs
add
sbb
mov
in
inc
jb
sbb
jmp
mov
ds
pop
push
cmp
pop
lret
imul
or
mov
xchg
jno
mov
aad
and
xchg
fnstsw
adc
lods
and
add
jae
ss
push
and
mov
and
lock
es
push
popa
lods
or
mov
ja
std
nop
push
and
xor
daa
xchg
adc
cmpsb
call
mov
fcomps
in
shll
icebp
int
xchg
leave
loop,pt
xchg
and
fs
pop
adc
mov
rcrl
int3
dec
popw
and
adc
popa
loopne
xor
sub
dec
inc
popf
sub
inc
lods
in
in
sti
add
mov
scas
sbb
cld
sbb
pop
inc
push
inc
in
sarb
cmpsb
dec
xchg
lock
inc
es
inc
popa
pushf
gs
int
out
mov
pop
daa
pop
stos
loopne
in
push
test
je
jbe
test
mov
jbe
jmp
mov
sbb
lahf
mov
movsb
pop
mov
and
ljmp
loope
dec
sub
lods
leave
jl
hlt
movsb
out
icebp
fstps
push
dec
lahf
js
or
xor
xchg
clc
lds
mov
imul
mov
scas
out
out
icebp
mov
jmp
call
or
rcrl
sahf
add
rcrl
movsb
xor
fiaddl
dec
das
pop
pop
movsb
fistpl
int3
insb
mov
push
adc
or
mov
test
das
mov
mov
sbb
movsl
adc
aas
js
cltd
jnp
pop
and
aam
mov
jmp
inc
fldt
pop
xchg
imul
orb
jb
sbb
jl
leave
push
dec
jae
pop
or
addr16
sub
out
mov
push
fisttps
leave
mov
cltd
xor
and
cmp
sbb
iret
cs
jnp
jne
xor
cld
or
hlt
out
arpl
stos
push
dec
pop
test
aad
sbb
mov
call
add
cmpsb
int3
xchg
mov
adc
jae
xchg
popa
sbb
push
les
and
mov
or
and
sbb
ret
pop
aam
push
loope
sarl
push
addr16
out
aaa
test
jg
push
stos
test
or
inc
sbb
dec
xlat
psrad
arpl
dec
jl
stos
aad
push
adc
add
xchg
loopne
in
push
aam
test
sti
test
aam
pop
jl
enter
daa
lcall
mov
xchg
pop
insl
mov
dec
or
cmpl
xchg
add
xlat
data16
rolb
or
jle
pop
cltd
add
test
or
and
jmp
add
jge
mov
pusha
lret
dec
sub
test
xchg
dec
jne
ljmp
mov
pop
cld
and
test
rorb
jg
adc
fs
out
and
push
ret
fsubs
ja
movsb
dec
jae
add
scas
lahf
push
ja
mov
nop
and
and
cs
jne
je
pop
xor
sarb
mov
mov
testb
mov
xor
inc
cmp
adc
lock
pop
pop
ja
push
pop
rcl
push
inc
lock
adc
pop
scas
push
sbb
pop
ret
icebp
shl
jnp
dec
hlt
jo
mov
or
inc
mov
dec
pop
or
jo
lods
imul
insl
stos
lea
push
push
es
sub
lret
xor
mov
sti
out
fadds
aaa
jge
push
inc
adc
in
pop
pop
and
mov
xor
jecxz
push
and
mov
stos
mov
cld
aaa
sbb
inc
mov
scas
mov
push
pop
orb
test
and
filds
je
es
mov
mov
mov
mov
inc
xor
sbb
xlat
rcrb
mov
adc
dec
pop
out
xchg
jbe
jo
pop
subb
popa
imul
pop
dec
in
mov
popf
cld
pushf
mov
or
xchg
leave
mov
stos
add
mov
pop
and
dec
cmpsb
sub
std
mov
jno
jge
xor
dec
loopne
mov
out
and
pop
mov
push
js
mov
das
aas
or
and
adc
dec
pop
loope
popa
jnp
inc
movsl
pop
mov
lret
push
dec
sbb
or
mov
mov
test
xor
add
lret
cltd
mov
aaa
push
pop
out
lods
je
and
pop
mulb
pop
add
jb
sbb
mov
add
xchg
das
cmp
and
je
jg
cmc
jmp
or
add
fcompl
push
jbe
test
and
mov
inc
rcrl
lcall
lds
xor
sub
aaa
xor
add
dec
rorb
inc
testl
add
sbb
lods
std
mov
jg
scas
pop
call
and
jo
push
mov
arpl
mov
sbb
mov
dec
imul
int3
jne
inc
mov
rclb
pop
jle
jl
fbstp
xor
sar
repnz
inc
mov
jbe
inc
pusha
jno
lds
mov
fcmovb
inc
push
les
dec
jle
scas
push
aad
clc
jb
sub
mov
adc
xor
mov
xor
push
stos
in
jle
dec
inc
mov
add
fdivs
and
jecxz,pt
imul
add
push
mov
adc
pop
inc
pop
dec
ljmp
push
push
je
jbe
loopne
pop
mov
jmp
push
jmp
or
jb
rolb
pop
lock
sub
inc
push
push
pop
push
mov
cwtl
xlat
xor
std
test
jb
out
dec
push
or
adc
cmp
adc
adc
test
cmp
or
mov
fcoms
in
push
pop
mov
dec
mov
or
inc
addr16
cwtl
add
daa
pop
push
or
push
dec
repz
lcall
push
sbb
ret
pop
dec
xchg
mov
jno
pusha
sbb
xchg
lods
pushf
sti
js
imulb
sbb
aad
jmp
mov
mov
sbb
push
dec
cld
mov
sub
in
insb
pop
ret
sbb
das
scas
push
das
addl
xlat
decl
fimuls
cmp
dec
jo
aam
or
jmp
sbb
rolb
fcmovnu
rorl
mov
cmp
hlt
sub
mov
and
xor
test
rcrb
call
mov
mov
inc
fbld
jne
int
lret
cmp
inc
outsb
out
xchg
push
lods
fwait
scas
test
push
es
adc
mov
dec
les
dec
pop
mov
jp
and
fldcw
imul
ret
add
and
pushf
int
scas
jno
mov
mov
or
rolb
cwtl
mov
loope
xchg
lock
or
sub
dec
pop
cmp
int3
push
test
push
cmpsl
pop
fidivrl
mov
mov
jp
jp
hlt
xrelease
pop
and
into
pop
pop
jo
rolb
dec
and
inc
inc
mov
adc
shld
testb
xchg
lcall
cmp
xchg
xor
ljmp
jmp
icebp
fwait
push
cmp
xor
xor
cmpsb
orb
jb
add
fisttpll
mov
push
in
lret
push
aaa
mov
stc
popa
adc
std
orb
rcl
push
movsl
and
in
push
inc
adc
outsb
inc
daa
or
int3
pusha
mulb
and
popf
lahf
cmp
sarb
jns
in
inc
loope
aam
subl
cmpsl
aaa
es
ss
and
sub
outsb
dec
aaa
sub
or
mov
xor
jle
mov
mov
outsl
pop
inc
lods
mov
sarl
imul
adc
push
and
ror
rclb
adc
mov
mov
xchg
pop
add
cmp
test
mov
lods
dec
mov
push
mov
sub
mov
daa
in
int
mov
stos
ret
xor
movsb
in
jle
out
jo
and
xor
std
sub
frstor
fsubl
imul
fcmovnbe
hlt
mov
push
jne
adc
inc
arpl
data16
cmp
fnstcw
xchg
in
aas
shrl
xchg
sub
xchg
mov
mov
or
stos
push
inc
icebp
js
insl
sbb
mov
inc
sub
xchg
in
cmp
pop
roll
leave
mov
xor
in
test
mov
add
sub
mov
cmp
loop
sbb
int3
gs
fisttpll
jge
jb
cwtl
pop
stc
mov
sub
scas
gs
sbbb
sub
xorl
hlt
jmp
int3
add
pop
idiv
ss
xor
xchg
cmc
mov
xchg
xchg
and
nop
adc
movsb
outsb
arpl
sub
jno
aam
add
mov
xor
inc
in
mov
mov
test
rcrl
mov
ret
bound
cmc
sub
mov
pop
xchg
xchg
movsl
mov
xor
sarl
cmp
push
cmp
jg
rcrl
das
xlat
mov
int
movhps
mov
mov
stos
loopne
pop
dec
pop
hlt
aam
sub
cmc
inc
in
inc
loope
pop
pop
fld
testl
cld
pusha
test
xchg
mov
and
sbb
jne
int3
mov
scas
orb
push
xchg
sub
xor
enter
ret
fwait
mov
popa
shrb
popf
cmp
popl
addr16
negb
lods
add
push
lds
popf
inc
mov
xchg
push
sbb
aad
add
lds
call
pop
inc
push
aas
push
jb
lea
lret
mov
lret
imul
xchg
rcr
push
cmp
fists
cmp
xchg
sbb
pop
sbb
sub
xchg
adcb
sbb
insl
inc
pop
je
jns
add
ret
icebp
test
rolb
mov
imul
push
int3
xchg
ds
sbb
push
xchg
sub
cli
aaa
inc
pop
mov
repnz
insl
xor
push
andb
lret
popf
das
dec
repz
gs
pop
loop
xchg
aaa
out
jne
xor
in
mov
inc
add
push
test
rolb
cmc
ficoml
or
lods
lret
aad
clc
and
pop
decb
stc
jmp
mov
pushf
lea
fwait
jp
enter
cmc
dec
inc
push
ficomps
mov
lock
xor
and
and
push
out
jmp
ja
or
mov
lods
inc
mov
stos
sub
aaa
cmp
adc
add
imul
test
subl
ja
jp
sub
mov
or
orb
xlat
mov
push
insl
cwtl
xchg
mov
scas
xchg
jo
daa
outsl
inc
sbb
loopne
xor
mov
push
imulb
lcall
and
and
cmp
mov
inc
in
push
xor
dec
std
adc
pop
xor
inc
mov
or
adc
movsb
mov
in
mov
dec
cltd
and
sbb
addr16
xchg
mov
mov
cwtl
outsl
ret
xchg
lahf
fnstsw
shll
jecxz
fisubl
cmpsl
sub
out
push
sbb
push
jge
jb
adc
hlt
popa
jne
sahf
mov
adc
out
pop
fwait
push
lret
shlb
outsb
jno
decb
xor
lods
push
adcb
add
push
or
inc
and
push
in
stos
push
aaa
sbb
sbb
add
mov
add
add
jmp
and
js
loop
add
mov
lock
lds
es
dec
xchg
xor
jo
pop
wrmsr
xlat
push
es
jle
add
pushf
push
not
jb
dec
notb
divl
adc
push
sub
jne
test
inc
push
sub
insl
mov
dec
mov
lcall
out
jge
shlb
xchg
nop
sbb
cmpsb
sub
test
shrl
add
add
cs
stc
xchg
and
ret
add
jae
fldenv
pop
xchg
rcl
or
popf
mov
or
out
cmpsl
daa
loopne
outsb
jae
cltd
idivl
sub
les
aas
incl
mov
mov
xchg
mov
cmpsb
shll
aam
pushf
jo
outsl
pop
push
test
inc
cmp
aas
stos
pop
adc
or
mov
pop
out
mov
fs
aas
jbe
mov
into
icebp
ret
notl
inc
jle
call
add
xor
cmp
loope
xchg
mov
push
mov
dec
mov
lret
subl
sbb
pop
fcomi
aaa
add
inc
add
mov
jb
test
pop
xchg
xchg
xor
dec
cltd
je
jg
and
pop
arpl
mov
jo
gs
xor
jb
test
outsb
jns
inc
sub
rorb
add
ret
cli
pushf
stc
fisubs
js
cs
push
test
outsb
repz
pslld
mov
xchg
cmp
or
mov
xchg
and
loopne
mov
mov
push
mov
xchg
mov
ficoms
or
adc
and
sub
adc
ret
push
ret
addr16
pop
mov
cmp
lcall
out
shll
int3
mov
mov
xlat
mov
scas
xlat
stos
and
cmp
or
mov
ljmp
aas
pop
fistpll
inc
lock
mov
xchg
test
and
pop
xchg
jle
xor
inc
pop
jno
or
lret
pop
push
test
sub
sbb
or
push
mov
cmp
das
ret
jno
jge
cmp
movsl
data16
cmpsl
push
sub
xchg
xchg
scas
pusha
dec
dec
loopne
ja
xor
mov
mov
out
pop
pop
lret
mov
push
or
push
mov
movsb
mov
in
test
notl
movsl
jg
call
cmp
pop
movsl
loop
inc
hlt
fldl
jge
in
and
add
mov
dec
mov
push
inc
mov
cmc
test
xor
sbb
mov
mov
pop
xchg
push
xchg
sbb
jmp
mov
ret
jle
pop
mov
add
jae
cltd
movsl
cmpb
or
fcompl
fisubrl
inc
sbb
adc
sub
movsl
testb
rep
leave
mov
push
and
leave
ljmp
stos
nop
pusha
bound
lret
mov
pop
mov
cltd
jae
xchg
aaa
imul
cwtl
push
insb
dec
sbb
stos
dec
mov
push
popf
push
sbb
inc
imul
pop
aaa
out
sbb
int3
adc
out
or
cmc
and
in
xchg
test
out
jp
sub
mov
ja
cmpsl
mov
mov
movsb
fs
lret
jp
jge
fsts
dec
mov
xor
iret
adc
and
dec
dec
mov
cmp
sbb
push
js
mov
mov
outsb
sub
testb
divl
mov
ficoms
dec
pop
cmp
testb
and
test
xchg
mov
jo
mov
push
mov
jbe
push
movsb
mov
into
lock
mov
mov
mov
subb
outsb
loope
rorb
jmp
inc
mov
jle
push
sub
sbb
sub
stos
sbb
mov
xchg
cmp
xchg
push
lods
mov
iret
lea
push
cmpsb
outsl
shll
mov
mov
addr16
into
fldcw
mov
mov
dec
cmc
movsl
mulb
clc
imul
pusha
sbb
roll
jo
jmp
inc
rcll
mov
push
fisubs
inc
xor
ja
popa
int
jbe
cmp
cmp
les
xor
sub
shlb
dec
je
sahf
jnp
jns
aas
lods
jb
fsub
xchg
in
xor
repnz
fistpll
and
or
push
fwait
leave
or
mov
pop
syscall
mov
icebp
adc
test
pop
and
ds
scas
cmp
add
push
or
push
inc
imul
icebp
jne
mov
jo
add
pop
mov
adc
cld
rclb
and
sub
rcll
scas
insb
mov
inc
xchg
push
mov
or
or
in
cmc
cli
pusha
push
jmp
pop
clc
mov
pop
je
out
lea
sub
push
add
cmp
cmp
cmc
xor
in
mov
ret
inc
push
aaa
loope
sub
jmp
xor
bound
dec
push
sbb
inc
pop
add
movl
ror
mov
stc
ret
nop
inc
xor
lea
gs
adc
mov
xchg
and
es
or
and
out
jge
mov
pop
sbb
xchg
pop
mov
shlb
popa
aaa
mov
shll
adc
sbb
cmc
cmpsl
aad
inc
jge
pop
fsts
mov
jno
xorb
lds
cmpsl
pusha
pop
mov
cmp
in
das
dec
xchg
and
mov
fsubrp
push
pop
fistpl
sarl
push
int3
cs
rolb
cltd
out
andl
dec
mov
adcl
lret
divl
push
and
lret
inc
jp
and
sbb
clc
fwait
xor
push
sub
jo
mov
call
into
mov
inc
sar
xchg
pop
pop
es
adc
push
int
add
jecxz
jae
inc
ja
stos
imul
imul
pusha
jbe
jecxz
lahf
lahf
push
mov
mov
cmp
cs
pop
aas
in
mov
lods
xor
dec
aam
inc
cmp
xor
cmp
mov
mov
dec
arpl
xchg
fdivr
insl
mov
in
mov
stos
jge
cmp
test
movsl
pop
jl
push
out
hlt
js
outsl
stos
push
mov
pushf
or
test
fwait
mov
and
add
inc
mov
xchg
add
aam
mov
addr16
ret
mov
adc
loopne
xor
jae
popf
dec
cmp
and
add
testb
ffree
xor
cmp
in
test
in
dec
es
pop
fs
pusha
dec
lret
fs
push
iret
cmc
test
in
shlb
jo
jecxz
fdivrs
daa
or
lds
jg
inc
jae
imul
testl
push
xchg
jae
ljmp
mov
cs
dec
pop
sub
test
bnd
dec
fninit
stos
popa
sbb
lods
das
test
popa
mov
or
inc
pushf
jb
mov
inc
mov
cltd
das
sahf
mov
mov
and
or
pusha
add
jne
cmp
cld
fcmovne
sbb
pop
jmp
and
sti
jae
sbb
mov
cmpl
push
mov
dec
in
js
jo
lret
clc
lea
jecxz
pop
icebp
jecxz
andb
mov
mov
xchg
jne
fwait
cltd
xchg
sahf
fisttpll
sahf
ficoms
xchg
cld
clc
arpl
sahf
imul
lods
fst
ret
adc
sub
jnp
mov
inc
sbb
imul
mov
shrb
lret
faddl
and
imul
jno
sar
hlt
cmpsl
insl
lret
cli
lods
push
adc
dec
movsb
fsubrs
cld
fisubl
mov
cwtl
sub
mov
jl
push
push
gs
loope
pop
sbb
inc
sbb
arpl
xchg
icebp
pop
outsl
sub
cmc
xchg
fimuls
test
sub
dec
clc
out
and
icebp
int3
je
std
dec
imul
adc
jo
add
test
inc
adc
adc
insl
jbe
movsb
pop
addr16
jbe
test
mov
pop
and
fcomps
out
dec
push
jo
ja
jo
into
push
pop
push
mov
xor
jno
add
sbb
cld
enter
icebp
fidivrs
push
mov
ret
mov
sub
inc
imul
or
repnz
jge
orl
or
ret
cwtl
pop
fsubrl
or
aas
push
movsb
movsb
ja
mov
cmp
xchg
xor
mov
je
push
xlat
xor
add
lds
ficomps
loope
xor
out
jbe
adc
adcb
in
push
or
xchg
sub
mov
xchg
imul
mov
popa
insl
stos
mull
jl
inc
dec
test
and
ficompl
or
lea
push
stos
out
sub
inc
shll
sub
sub
sbb
mov
arpl
notb
shll
mov
push
int3
fidivl
or
pop
data16
and
dec
pop
imul
add
leave
in
mov
xchg
scas
cmpsl
ja
ficompl
or
call
xchg
in
cmpsl
xor
rorl
inc
imul
das
ja
xchg
push
sarl
cwtl
lret
les
sub
dec
pop
mov
jbe
dec
mov
xchg
sbb
push
adc
dec
mov
icebp
push
loopne
out
and
jae
pushf
jle
dec
lods
pop
loopne
into
clc
pop
rol
aas
sub
fldl
mov
dec
inc
adc
loop
inc
sbb
inc
xlat
mov
in
fisubrl
jb
test
jmp
xor
jle
ljmp
pop
xor
lret
rcll
repz
dec
mov
arpl
mov
mov
arpl
outsb
cmp
jmp
mov
pop
or
mov
sub
shr
mov
imul
loopne
psllq
nop
mov
adc
adc
pop
inc
inc
mov
xchg
pop
jle
jne
mov
out
jmp
nop
aam
mov
push
sub
jecxz
pop
cli
pop
push
inc
inc
insl
lock
punpckhwd
das
in
pop
fistl
cmp
stc
aas
outsb
fadds
jmp
hlt
sarl
faddp
push
imul
mov
fstl
outsb
mov
cmpsb
movb
mov
xor
lds
xor
stos
dec
dec
mov
mov
sahf
pushf
pop
shlb
shrl
movsb
sbb
pusha
aad
adc
mov
gs
imul
cmc
mov
jo
inc
jne
sbb
fnstcw
dec
loopne
movlps
loope
xor
push
xchg
lahf
lods
fisubs
xchg
mov
or
outsb
popf
das
stos
pop
cwtl
push
jae
lret
jl
lea
mov
mov
push
push
icebp
in
notl
cmp
lods
jp
insb
and
mov
and
bound
pop
fs
repnz
les
scas
jns
mov
jl
in
cmp
fisubrl
movsb
mov
push
lahf
fs
and
iret
add
arpl
in
and
loopne
loop
stos
push
loope
fadds
loop
push
repnz
mov
stc
lods
pop
enter
dec
pop
gs
les
movsb
stos
cmpsb
add
pop
jle
cmp
orl
std
pop
cmpsl
outsb
mov
imul
sahf
jp
jmp
mov
mov
je
add
or
dec
nop
loop
and
lcall
push
adc
inc
push
sbb
jl
stos
call
xchg
sarl
loope
dec
inc
movsb
mov
mov
and
test
cmp
jb
dec
mov
in
add
sbb
ret
data16
push
mov
out
cmpsb
es
div
das
pop
ret
in
sub
mov
xchg
mov
cwtl
or
mov
call
mov
push
adc
addr16
sub
addr16
and
sbb
dec
sub
xchg
add
and
addl
sahf
lea
ja
mov
inc
cmp
cmpb
cltd
mov
inc
mulb
fwait
stc
mov
and
fwait
je
add
xchg
push
stos
dec
lods
hlt
pop
sub
push
mov
les
adc
lcall
sub
in
xchg
in
lcall
push
std
dec
lods
or
aam
jns
outsb
lret
inc
sar
out
mov
fildll
mov
into
fnsave
adc
pop
lcall
int
addr16
repz
jo
aaa
out
xor
adc
mov
shll
xor
mov
in
out
sub
sub
shrb
rorb
pop
pop
repnz
out
mov
sti
cmpsl
les
jb
push
fildl
jge
add
mov
push
lret
test
push
imul
xor
cli
dec
and
outsb
and
and
jl
xor
push
mov
mov
ret
xchg
push
repnz
push
pop
sti
inc
mov
popl
into
pop
pusha
enter
cmp
inc
inc
or
or
sub
aas
cli
mov
and
int
outsl
jmp
mov
ds
jle
jge
sub
aam
xor
and
call
mov
adc
scas
call
sub
into
jge
lods
pop
mov
int
lcall
lods
fisttpl
xchg
flds
das
and
ja
in
add
sub
sub
lods
test
adc
xchg
mov
incb
add
cli
call
int3
out
mov
mov
xlat
imul
add
xchg
push
idivl
out
add
dec
push
in
xchg
adc
jecxz
out
jae
sbb
test
shufps
ja
mov
and
or
ljmp
cli
ds
jnp
mov
into
in
nop
mov
add
inc
jg
sub
adc
inc
loopne
jne
jnp
or
cs
xchg
lahf
jae
add
push
sub
les
loope
and
mov
stos
leave
inc
cs
jns
mov
leave
mov
daa
xor
pop
jae
sahf
xor
xchg
cmp
arpl
xor
add
mov
bound
cmp
mov
clc
aas
jne
cmpl
stos
cmpl
daa
xchg
rcrb
sbb
add
jnp
or
mov
je
scas
out
jns
pop
ds
outsb
loopne
clc
stc
int
sarl
cmp
imul
andl
sarl
out
fcomp
push
dec
lock
rolb
mov
xchg
ljmp
es
pushf
or
jnp
ficomps
repnz
or
cs
inc
test
lds
lahf
adc
mov
ss
sbb
test
jl
lock
push
mov
or
pop
sub
loop
dec
les
enter
xchg
add
sub
cmpsb
or
gs
add
xchg
add
xor
mov
cmp
mov
pusha
aam
dec
into
and
sub
pusha
cmpl
fadds
cmp
aas
movsb
dec
popa
out
in
hlt
pop
rclb
mov
mov
nop
or
xor
out
lret
dec
sub
roll
sbb
mov
lds
sahf
cwtl
das
cli
test
movsl
scas
dec
loop
in
jg
aad
xchg
mov
mov
inc
sub
shlb
adc
jnp
lret
outsb
pop
imul
cmpb
cmp
lcall
adc
add
mov
mov
cmp
subl
call
stos
and
int3
jecxz
sbb
jb
mov
sub
jb
imul
dec
sub
pop
dec
push
cltd
pop
cmp
xor
push
outsb
sub
push
pushf
cmp
push
mov
xchg
pushf
pop
mov
imul
inc
dec
lcallw
inc
mov
xchg
in
and
lds
je
fwait
daa
xchg
sub
xchg
test
jbe
dec
push
ljmp
and
xor
jecxz
dec
aad
xchg
loopne
pop
pop
cli
mov
mov
mov
fwait
psubusb
stos
in
jbe
adc
imul
xchg
mov
adc
mov
sub
ljmp
xchg
push
sub
fucomip
imul
fdivrs
mov
push
ret
cmc
pop
aas
out
in
addr16
mov
mov
leave
jle
int
cmp
pop
sub
lds
mov
lahf
jmp
adc
xchg
push
loope
nop
leave
scas
mov
cmc
jno
mov
and
dec
cmpsb
dec
xor
loopne
aad
bound
dec
dec
fwait
negb
mov
mov
mov
in
nop
setno
es
sub
pop
outsb
stc
add
or
and
sbb
mov
sbb
and
mov
add
cmp
jnp
jmp
mov
xchg
ds
push
add
out
imul
pop
sbb
cli
push
mov
pop
ror
outsb
mov
xchg
xlat
dec
inc
sub
and
lds
lods
cmpsb
fsubl
aam
movb
cmpsl
iret
mov
leave
insb
jp
popa
repnz
add
ffree
movsl
sbb
jns
ret
pop
test
or
lods
dec
int3
repnz
cmpl
daa
dec
xchg
xor
hlt
in
dec
xchg
xchg
add
test
lahf
pop
pop
push
cmp
test
sub
aas
cmpsl
sub
lock
mov
inc
adc
mov
lret
adc
loope
xchg
lods
loope
mov
push
sbb
jp
stc
das
jl
loope
mov
cmp
jae
sub
js
mov
cli
add
jb
cli
sbb
inc
mov
pop
and
int3
adc
push
shlb
aad
mov
or
jnp
fxch
pop
dec
mov
dec
sahf
and
test
test
and
outsb
adc
pusha
adc
rcll
nop
outsl
not
jle
dec
xchg
mov
adc
sbb
mov
aas
adc
lahf
mov
insl
mov
mov
dec
outsb
popf
xchg
fdivr
movsl
add
xchg
xor
aad
popf
xchg
ljmp
add
xor
mov
jmp
dec
test
inc
test
mov
rolb
stos
inc
imul
add
inc
jp
adc
xchg
push
mov
mov
scas
push
lret
mov
loop
mov
arpl
mov
test
das
add
add
xor
jge
orl
cmp
jae
sub
pusha
gs
cmp
mov
sub
leave
or
sub
aaa
stos
mov
imul
lds
shlb
cmp
mov
cmp
mov
push
and
in
pop
test
sbb
inc
int3
mov
ljmp
inc
mov
loop
or
xor
cs
mov
xor
lock
mov
out
fwait
xchg
and
lea
loop
jg
call
xlat
add
pop
sbb
or
sbb
mov
ds
pop
jns,pt
cmpl
shl
xchg
cmpsb
xor
cld
dec
jae
lahf
push
aad
js
sbb
test
jecxz
or
and
add
lock
mov
ret
test
cmp
lahf
sub
clc
push
ret
outsb
xor
dec
and
mov
leave
pop
mov
ljmp
add
mov
push
xlat
xchg
sbb
mov
push
sbb
pop
addr16
mov
sti
pop
sti
pop
xchg
mov
out
hlt
cli
pop
cltd
xchg
push
mov
push
inc
mov
mov
in
or
push
jb
adc
dec
lods
in
rol
popf
and
enter
xchg
in
and
jp
inc
pop
xlat
pop
xor
hlt
aaa
jecxz
test
or
cld
jecxz
iret
imul
les
daa
push
sbb
lock
cmpsb
lds
ja
mov
out
jns
push
rcrb
out
stos
push
dec
dec
cwtl
and
enter
insl
inc
icebp
push
xchg
push
ret
js
inc
mov
dec
mov
inc
dec
push
fldt
orl
mov
xor
pop
mov
inc
sbb
cwtl
mov
popf
outsb
mov
sub
xchg
sub
xchg
xor
pop
movsl
orb
in
xlat
decb
cmp
test
stc
cmp
push
mov
mov
cltd
fs
dec
jns
ret
scas
cmp
sub
shll
lods
ja
arpl
movsl
sbb
out
scas
push
movsb
test
hlt
stos
push
mov
jo
test
fcomps
fistps
daa
and
cmp
pop
pop
sbb
mov
sbb
xchg
sub
outsl
or
mov
leave
inc
aam
pushw
xor
cmp
xor
xchg
dec
inc
pop
out
loope
cmp
lock
pop
xchg
aaa
push
insl
orl
roll
stos
add
shr
dec
sub
inc
aaa
xor
and
fwait
clc
in
jo
movsb
mov
mov
insl
shll
test
je
xor
push
mov
and
sub
mov
sbb
insl
shrb
jmp
xorb
add
cld
cmpsl
mov
jae
fnstsw
or
stos
dec
sub
push
sub
sti
adc
leave
or
jle
jbe
or
les
inc
jb
jmp
fisttps
insl
and
aam
ret
jo
mov
dec
xchg
mov
xchg
mov
ret
int3
cs
pop
mov
xchg
aas
enter
aad
or
jo
mov
scas
outsb
push
rcrl
cmpsb
jnp
lea
addl
scas
pop
sub
mov
push
enter
or
lds
and
dec
insl
fsubp
jno
pop
jp
mov
dec
hlt
push
jecxz
rcrl
push
jb
or
add
test
sbb
mov
sbb
out
movsb
xor
and
adc
dec
push
jge
mov
rcll
je
sahf
scas
loop
jge
cmp
adc
rcl
ja
adc
test
cmp
aam
sbbb
inc
adc
test
push
jg
repz
test
inc
outsl
jae
ret
call
repz
dec
and
test
lret
fcmovnu
and
adc
daa
repnz
jp
or
mov
mov
xor
cmpl
ja
repnz
cmp
sub
ret
and
cld
aaa
in
push
dec
dec
cmpsb
enter
aad
aaa
aad
fucomp
aad
add
dec
ds
adc
stos
pop
nop
popa
lods
orb
ss
adc
test
push
mov
cmp
jle
shlb
mov
sub
mov
movsb
pop
jns
jb
outsb
test
push
xor
push
xor
dec
push
jae
hlt
imul
in
test
cmp
jb
int
pusha
xchg
add
mov
or
mov
in
insb
push
xchg
sbb
cmpsb
push
lods
adc
cmp
adc
insb
mov
xchg
test
inc
arpl
jg
jae
mov
xchg
insb
jg
fldcw
push
sub
push
push
idivb
pusha
and
inc
add
jl
sbb
adc
popa
add
push
jne
jl
icebp
dec
jmp
adc
inc
insl
stc
cmp
mov
out
lret
gs
fwait
mov
mov
jge
and
push
sbb
dec
push
fwait
or
push
sar
repnz
loope
fidivs
imul
adc
in
xchg
dec
test
dec
pop
lock
cmp
cmp
bound
mov
cmp
push
xchg
test
dec
testb
jmp
mov
push
xchg
iret
cmp
xchg
test
fmuls
subl
aad
mull
push
jmp
cs
pop
testb
lcall
out
jl
mov
out
xorl
fisttpl
faddl
mov
in
add
mov
cmp
jb
adc
push
enter
arpl
dec
mov
stc
aad
jno
arpl
lret
mov
xchg
jecxz
rcrl
and
lock
mov
in
sarb
sahf
push
pop
cmpsl
jecxz
leave
jae
dec
sbb
inc
lret
sub
pop
cwtl
jecxz
enter
enter
cmpsl
sahf
lods
jmp
xchg
pop
leave
je
shlb
js
ss
jg
enter
lds
addr16
adc
xor
sub
fsubr
iret
mov
mov
loopne
push
in
push
cmp
xor
push
mov
lock
xchg
mov
sub
sti
test
pop
jle
xor
movsb
jbe
sub
mov
fsubrl
outsl
lods
popf
fdivs
jmp
adc
dec
mov
mov
sub
cld
or
sub
xchg
mov
aam
sbb
push
mov
and
out
inc
movsb
lsl
lods
int3
inc
pop
xchg
int3
mov
mov
pop
es
iret
subb
jo
insl
idivb
cmc
insb
pop
fdivs
push
jge
push
mov
mov
cli
adc
nop
clc
or
xchg
in
push
inc
call
notl
arpl
les
adc
push
add
push
inc
push
mov
sarl
test
cmp
movsb
cmpsb
push
nop
daa
loopne
add
dec
pop
notl
out
inc
jbe
cmp
mov
scas
stos
pop
mov
in
add
pop
dec
inc
xchg
pop
in
mov
gs
out
sbb
xor
jg
int
das
test
push
push
inc
and
or
mov
outsl
rolb
stos
scas
mov
insl
in
cli
pop
scas
mov
pusha
sub
std
iret
push
add
pushl
leave
scas
lret
in
or
and
inc
pop
ss
iret
shrl
add
in
and
sub
nop
outsb
std
scas
out
and
jmp
ds
iret
xor
fimuls
jp
addl
xor
pop
adc
call
in
jb
repnz
xor
cmpsb
adc
stos
addb
sahf
dec
jno
xchg
dec
iret
cmp
ja
insl
and
pop
jmp
pop
jb
add
dec
mov
sub
aas
adc
loop
cmp
nop
test
sub
cmpsl
inc
fwait
stos
pushf
into
pop
push
fdivr
or
imul
stos
ljmp
or
cmp
clc
sbb
popa
push
jbe
fldt
aam
daa
sbb
cmp
dec
pop
xchg
pop
inc
dec
jmp
scas
xor
sbb
jp
fcmovne
pop
popf
out
stos
mov
push
push
loop
dec
and
out
fisubrs
dec
insb
das
into
repnz
int3
xchg
or
mov
pop
test
nop
or
test
outsl
mov
mov
jmp
sbb
dec
pop
mov
js
scas
popa
push
lret
cmp
fists
mov
sbb
ret
pop
popa
std
loope
xchg
ror
inc
sub
cmpsl
popa
popa
dec
sub
push
int
lahf
mov
or
fwait
out
cmp
jae
mov
repnz
and
out
fsubl
popa
sbbb
sbb
cmp
lds
call
pop
cld
scas
pop
int3
xor
icebp
and
pop
mov
inc
xchg
xor
cmpb
arpl
and
repnz
les
movsl
sub
inc
daa
mov
sub
cmp
adc
xabort
loop
outsl
fldt
and
and
test
test
dec
andl
sbb
jo
cld
dec
mov
mov
pop
add
xor
adc
sti
js
movsl
aad
xlat
stc
push
pusha
mov
lret
mov
mov
in
mov
dec
in
inc
call
push
in
movsb
push
repnz
or
loopne
lret
addr16
dec
mov
out
jl
pop
aaa
dec
or
daa
roll
out
mov
sbb
ss
sub
cli
dec
das
jge
fwait
movsb
and
lret
and
ret
flds
push
jo
repz
pop
xchg
mov
pushf
pusha
insl
rcrl
add
lods
add
sub
jb
lret
xor
js
xchg
pop
xchg
inc
cmpsl
sub
inc
std
adc
sub
adc
and
mov
lcall
adc
sbb
orl
lret
add
aam
mov
es
sub
inc
rcr
mov
pop
das
dec
sub
pop
dec
mov
xor
mov
es
gs
push
aaa
xor
ss
adc
and
jl
fstpt
les
mov
jne
xor
push
xchg
int3
test
push
pop
sbb
mov
scas
popa
cli
js
rolb
out
sbb
dec
lcall
pop
out
scas
lock
fucomi
mov
imul
inc
mov
ret
xchg
leave
inc
add
sub
xchg
cmp
mov
mov
cmp
xor
sbb
cli
mov
jne
mov
call
xchg
adcl
aaa
in
cmpsl
mov
lds
jp
imul
es
or
hlt
test
pop
mov
pushf
fidivrl
mov
aam
mov
stos
enter
pop
and
jb
aad
insb
or
mov
add
fadds
and
pushf
outsb
hlt
cmp
add
or
rcl
das
xor
addr16
lods
out
inc
dec
cltd
push
test
rol
push
es
lcall
scas
xchg
add
jne
dec
and
mov
push
repnz
icebp
mov
popf
repz
sub
fidivrl
adc
aaa
mov
rcl
fs
fstps
cmp
jno
call
sbb
into
inc
cmp
jecxz
cs
mov
cli
mov
out
lods
repz
jmp
sub
sbb
adc
imul
aam
imul
push
outsl
push
sbb
jbe
in
repz
lahf
push
mov
popa
pusha
sub
bound
push
inc
mov
xchg
mov
jl
stos
push
push
das
mov
push
imul
les
push
pop
push
pop
sti
xchg
mov
push
stc
out
sub
jnp
dec
rorl
mov
cmp
sbb
cmpsl
test
or
in
clc
mov
mov
push
ret
cmp
sahf
dec
mov
addr16
aam
dec
scas
pop
pop
ljmp
aas
jle
mov
data16
mov
fs
dec
mov
sbb
xor
shrb
fxch
push
sbb
mov
in
ss
fldpi
in
cwtl
out
and
sbb
pop
mov
xchg
daa
jle
out
xor
cmp
bound
mov
xchg
inc
test
adc
fs
jle
xchg
jecxz
lds
mov
lret
loopne
or
rcll
xchg
jmp
test
xlat
xor
jnp
bound
adc
mov
nop
jae
cmp
and
or
in
sbb
jecxz
nop
adc
and
sahf
jbe
movsb
repnz
js
jae
and
fists
sub
sbb
jns
xor
lret
fwait
add
add
mov
mov
or
movsb
test
jns
jp
mov
mov
fmull
ret
hlt
sub
sub
test
pop
pop
lods
out
push
mov
inc
sub
mov
lahf
inc
cmovnp
xor
mov
fistps
add
inc
orl
movsl
jae
push
mov
sub
sbb
fst
cltd
hlt
sahf
mov
inc
cmp
mov
inc
xor
cmpsl
mov
out
fldt
stos
add
adc
xchg
dec
mov
mov
add
fsub
pop
rcrl
shr
or
ss
mov
or
pusha
mov
int
push
lock
rorb
adc
pop
mov
or
int
or
scas
mov
inc
mov
adcb
sub
cmp
lds
xor
sti
adc
or
or
and
fsubr
mov
add
cltd
int
sbb
mov
cmpsb
mov
into
xchg
stos
sub
fs
pop
imul
jmp
cmp
popf
xor
sub
or
add
into
pop
lret
cmp
jl
or
add
enter
jmp
push
pop
push
fisubs
stos
stc
push
cmp
cltd
push
xchg
push
cmp
mov
jb
inc
pushf
lea
ror
pushf
xlat
shl
insb
jae
and
jg
fsubs
testl
sbb
jg
adc
mov
push
ljmp
sahf
mov
dec
fs
inc
rorb
sahf
cmpsb
enter
shll
mov
mov
repnz
test
imul
int3
xchg
popf
in
pop
pop
jae
ret
lock
ja
mov
pop
pop
aad
lcall
out
sbb
jp,pt
xchg
xor
das
mov
lcall
add
sbb
sbb
out
ror
jmp
icebp
cmpsb
sahf
mov
in
bound
mov
add
ds
and
scas
push
lods
imul
jmp
movsl
mov
mov
and
xchg
mov
jg
adc
lret
sbb
fs
mov
mov
dec
xchg
in
rclb
movsb
stc
push
inc
in
jbe
sarb
mov
aad
push
sub
cwtl
dec
xchg
lods
cmp
ret
xor
testb
aas
cmp
sbb
mov
andb
xchg
sbb
sbb
inc
xchg
mov
pop
and
outsl
mov
sub
push
gs
push
xor
xchg
add
jb
pop
jmp
andb
push
jnp
sub
rcr
js
out
outsl
xor
xor
into
pop
mov
lahf
mov
fnsave
outsl
jno
or
imul
arpl
jbe
and
dec
cmpsb
out
stos
lods
xchg
sahf
pop
jg
cltd
push
push
jecxz
sub
xchg
mov
add
dec
dec
cmp
xor
int
aam
test
sarb
lret
fiadds
sub
mov
adc
out
mov
hlt
mov
adc
pop
cmp
cmpsl
sbb
lock
jge
dec
sbb
out
and
inc
sbb
jns
cmpsl
mov
in
jae
push
adcl
push
dec
and
mov
xor
or
adc
adc
jns
das
xchg
arpl
mov
dec
inc
xchg
fadds
jle
jo
rcll
pop
es
mov
push
daa
push
gs
xchg
ja
test
pop
or
ret
mov
sti
sbb
in
sub
shll
xor
and
hlt
and
and
mov
pop
test
dec
fisubl
push
leave
loope
mov
rorb
mov
pop
aam
cwtl
ficoml
stos
cmc
mov
sbbl
jns
dec
add
cwtl
push
pop
bound
cmc
adc
insl
push
and
or
repnz
pushf
adc
jbe
or
in
mov
inc
pusha
xchg
and
fldl
mov
and
pop
jl
js
cmp
jbe
es
pop
sbb
cmp
jp
into
mov
sbb
sbb
lea
mov
icebp
mov
mov
hlt
cmp
dec
jg
push
lret
adc
roll
fwait
cmpb
shrb
xchg
lea
add
ja
cmp
arpl
test
push
xor
loop
repz
rcrb
cld
mov
fbstp
lods
lods
mov
and
test
fcmovne
fcoml
loopne
test
das
xlat
xlat
and
jmp
pop
imul
xchg
or
adc
cmp
inc
shrb
mov
push
mov
xchg
push
insb
out
lret
push
insl
ja
xor
mov
push
mov
jae
sbb
xchg
gs
das
sbb
jae
xor
das
pop
scas
and
stos
or
sub
jl
enter
arpl
les
pushf
and
push
sbb
iret
cmp
lods
mov
fidivrl
push
jge
nop
aam
jns
cmp
adc
sub
shrl
sbb
add
xchg
inc
loop
mov
imul
pop
cld
lahf
mov
mov
and
movsl
cli
jo
xchg
xchg
pushf
sub
mov
sarb
xchg
jmp
sbb
mov
mov
push
sbb
jp
out
push
dec
cmpsb
cmpb
cmp
aad
adc
pushf
cmpsl
fiadds
loope
and
test
push
push
imul
and
dec
jb
lcall
cwtl
add
mov
mov
and
int3
push
out
xchg
push
fisubs
and
out
and
xchg
test
xlat
push
arpl
popa
rorb
fs
rcrl
lret
repz
or
adc
decb
fmulp
push
inc
jmp
in
ja
jnp
adc
add
stos
lods
mov
adc
cmp
or
lock
sub
iret
xor
xchg
je
cmpsl
loop
xor
mov
out
push
mov
mov
inc
ficoms
jle
bound
adc
std
push
pop
cmp
jb
ret
sbb
inc
or
pop
or
sbb
pop
lcall
scas
sarl
negl
test
xorl
or
inc
mov
pusha
scas
lahf
into
lock
dec
out
push
dec
movsb
mov
lods
stos
mov
push
sbb
iret
scas
dec
lahf
mov
mov
jne
and
lahf
nop
fldl
and
adcl
sub
in
push
sbb
cltd
sbb
leave
push
popf
xchg
pop
inc
and
lock
sbb
push
aas
xchg
mov
pop
rcll
fimull
stos
or
jne
fdivl
dec
sahf
xchg
xchg
jnp
lods
loop
jmp
scas
sbb
pop
mov
push
sub
mov
outsl
fcompl
ret
sbb
jmp
inc
adc
and
fwait
mov
stos
pop
or
cmp
xchg
incb
mov
push
and
pop
push
cmp
mov
pusha
mov
sub
es
xchg
sub
out
cmc
aam
pop
xchg
or
pusha
scas
cmp
pushf
mov
js
je
std
int
repz
sub
xor
sbb
or
lods
and
lret
xchg
ret
shl
and
fisubrl
jl
xchg
insb
adc
scas
mov
mov
mov
push
dec
pop
mov
mov
mov
fidivs
mov
adc
into
out
dec
orl
and
inc
xchg
jmp
fs
aaa
popf
mov
adc
dec
fisubs
aad
sbb
icebp
int3
push
jmp
cmpsl
push
dec
aam
sbb
push
lret
cld
push
xor
aam
fdivs
jbe
sub
pop
in
cli
and
sub
rcrb
add
ljmp
les
sarl
repnz
jbe
sbb
test
xchg
pop
mov
fs
jecxz
mov
daa
fadds
push
into
cs
fnsave
xor
pop
pop
insb
pop
loope
out
arpl
sbb
adc
adc
add
sub
sub
shrl
push
adc
subl
and
sub
push
sbb
lock
sbb
or
mov
pop
add
xor
in
mov
cmp
dec
inc
gs
stos
sub
loop
xor
mov
daa
dec
push
pusha
fmul
pop
pusha
gs
fadds
aaa
insb
mov
loop
jno
cmc
xor
or
mov
int
add
or
in
ss
add
ljmp
insb
test
or
jne
add
stos
movsl
call
daa
icebp
cmp
bound
mov
cli
icebp
sub
into
mov
mov
push
cs
mov
mov
cmp
sub
or
sbb
pop
mov
dec
push
add
popa
mov
xor
cmp
test
stc
rclb
mov
sbb
movb
outsl
testb
push
stc
sarl
mov
out
sarl
cmpsl
loopne
xlat
xor
xor
lea
or
sbb
jl
dec
cmp
add
jg
rorl
in
ljmp
inc
movsl
popa
adc
out
imul
rcll
xor
xor
shll
jbe
test
xchg
in
ret
pop
push
lods
xor
js
adc
jne
sbb
xchg
and
pop
xorb
add
lret
in
cmp
mov
in
addl
xor
xchg
je
iret
test
out
sti
dec
dec
mov
or
jmp
sbb
mov
ret
lock
fwait
inc
in
ds
jns
jl
lds
stos
int3
add
jb
cld
fwait
xor
jp
adc
sbb
mov
dec
test
sub
sbb
loop
sbb
int
in
mov
jo
imul
xchg
fwait
scas
mov
mov
cltd
mov
sbb
xor
mov
loopne
or
sbb
push
adc
pop
push
cmp
push
pop
push
bound
mov
xchg
inc
les
cmp
xorl
mov
aad
push
adc
stos
cld
xchg
jle
jb
push
jo
fdivl
jecxz
insb
push
push
and
xchg
xchg
push
adc
lcall
rorl
repz
sar
mov
mov
jmp
xorl
test
testl
mov
mov
bound
xlat
cmp
xor
inc
pusha
outsl
mov
adc
dec
sbb
and
sub
push
sbb
sbb
mov
outsb
out
mov
repz
shrb
loop
fisttpl
cmp
mov
lea
sub
lcall
mov
bound
mov
add
test
pop
xchg
dec
test
ja
rcl
sbb
push
and
fidivl
stc
or
js
xchg
dec
imul
adc
iret
dec
fisubs
mov
sahf
jmp
mov
jbe
stos
sub
lret
mov
rol
es
test
scas
jns
insl
jae
jp
sbb
in
jle
popf
cmpsl
mov
cmp
xchg
scas
test
pop
iret
xlat
imul
jbe
adc
xchg
jno
shr
jge
outsb
popf
iret
inc
in
push
xor
sub
shrb
lcall
xchg
out
fwait
lret
je
pop
loop
ja
lods
push
cmp
add
push
add
pop
pop
xchg
call
pop
jne
call
stc
jo
sarl
subl
aaa
int
fidivs
in
fwait
ja
jle
mov
loopne
xchg
mov
mov
je
sub
and
dec
inc
subl
lods
lods
shrl
cmpb
ss
dec
aaa
insl
push
rcrb
cmp
ja
pop
add
lahf
iret
push
insb
in
dec
push
dec
mov
xchg
js
sub
imul
add
add
mov
ljmp
mov
jp
test
mov
andb
in
call
in
mov
loop
adc
mov
push
sbb
cwtl
mov
lods
data16
sub
push
imul
sbb
cltd
mov
les
in
loope
pop
jmp
and
mov
lret
movsl
lods
push
and
into
xor
clc
stos
out
mov
jns
sarb
add
cwtl
or
insl
cmpsb
dec
data16
cli
xchg
dec
xor
xor
jmp
in
mov
mov
mov
cltd
jmp
sub
mov
nop
or
or
or
push
ss
shrl
cmp
mov
sahf
popa
xor
rorl
push
inc
sbb
mov
and
mov
lock
mov
scas
jmp
insb
push
nop
imul
xor
push
pop
pop
inc
jae
lods
bswap
cld
bnd
xlat
adc
sub
sbb
ljmp
movsl
mov
jmp
and
lods
pushf
xchg
insb
xor
idivb
sti
lods
rorb
cld
and
sar
and
add
sahf
push
push
xor
lea
stc
lret
test
stos
lahf
mov
iret
cmp
in
pop
stos
loope
jno
out
ljmp
dec
jo
in
iret
pop
inc
sub
jmp
cltd
dec
xor
ret
pop
fnsave
fbstp
decl
roll
arpl
xorb
fucom
test
scas
outsb
hlt
and
sahf
movsb
mov
sahf
lods
cmp
pop
push
aaa
out
pop
aaa
mov
mov
mov
rcrl
repnz
mov
enter
sub
popf
popa
aam
push
daa
mov
pushf
sti
mov
outsl
mov
mov
cmp
rcrb
mov
inc
mov
cld
dec
pushf
jge
addr16
xchg
pop
inc
cs
test
inc
cmp
test
pusha
inc
jo
push
dec
cmp
sub
sti
rorl
mov
and
bound
jb
or
push
sbb
leave
aad
leave
xor
sahf
mov
jl
xchg
jl
xchg
fisubrs
rcrb
mov
nop
mov
lcall
mov
repnz
push
xchg
xchg
xchg
insb
cli
jnp
cmp
and
imul
mov
dec
xor
dec
adc
fcoml
adc
ljmp
or
push
and
inc
mov
add
jb
shrl
mov
push
loop
inc
shll
xor
cli
xchg
iret
jge
xchg
lods
xchg
xchg
sti
adc
in
or
stc
cmp
cmp
je
pushfw
push
pushl
mov
in
jecxz
std
int3
lea
xorl
insl
xor
enter
or
pop
adc
xor
adc
out
sub
cs
mov
xor
data16
in
add
add
es
push
fstps
add
rcrl
and
loopne
addb
cli
adc
jecxz
mov
fists
pop
es
xor
push
mov
add
or
xchg
add
cwtl
out
mov
inc
mov
rcrl
cmp
add
adc
add
cs
repz
and
popa
sbb
sub
stc
xchg
cmp
popa
or
push
mov
xchg
push
loope,pn
xor
pop
sbb
out
scas
mov
iret
ss
test
dec
ja
jg
cmp
xor
or
sub
stos
addr16
pop
adc
ficomps
inc
xor
mov
shll
dec
es
mov
adc
fwait
insl
out
add
xor
xchg
xlat
int3
xchg
cmp
mov
mov
push
bound
subl
jb
jecxz
clc
xor
and
push
jnp
sbb
mov
ror
xorl
jle
inc
push
outsl
cltd
pop
lods
jmp
jne
test
fidivrs
cs
lret
mov
push
cmp
cli
in
in
mov
jns
xor
cwtl
sahf
je
repz
or
cmpb
pop
push
add
and
clc
dec
aam
pop
jl
jl
mov
ss
mov
fwait
cmpsb
fwait
out
sub
aam
jb
push
sbb
inc
cmp
js
mov
cld
xchg
sub
mov
popa
das
xor
mov
sar
sub
test
rcrb
bound
mov
jg
or
xor
jno
mov
push
dec
ret
out
aam
inc
test
out
dec
jb
cld
cwtl
loop
ficoms
inc
pop
mov
adc
sub
stos
or
cld
out
insl
aas
sub
add
lods
aam
into
outsl
sub
scas
stc
fs
push
sahf
add
mov
shll
andb
mov
flds
jns
inc
add
orb
mov
mov
and
xlat
push
xor
push
es
push
mov
sbbb
xor
cmpsl
out
push
push
mov
jno
test
pusha
lretw
int3
cmp
and
imul
test
jge
sahf
mov
aad
fnsave
pushf
add
xchg
mov
cwtl
dec
mov
mov
jne
mov
or
inc
daa
mov
fcomp
mov
sbb
xor
and
mov
mov
mov
scas
pop
sbb
pop
and
mov
inc
dec
lahf
test
push
xchg
mov
loope
das
bound
adc
sbb
andl
xchg
in
rorb
std
push
inc
push
add
subl
add
dec
std
loop
mov
mov
mov
addr16
imul
xor
and
cmpl
xchg
adc
push
lret
dec
aam
adc
inc
pop
sub
and
insl
jnp
clc
xlat
lret
test
cmpsb
add
jo
push
adc
sbb
sti
inc
cmp
pop
insl
lret
mov
rcrb
dec
xchg
mov
cli
inc
mov
push
mov
stos
sti
iret
movsl
inc
dec
mov
in
adc
lods
mov
pop
push
and
pop
push
cmp
call
insl
cmp
dec
fisubrs
std
push
dec
int3
fs
test
pop
cmpsl
fwait
pop
cmp
fcomps
loopne
adc
flds
test
sar
aaa
sbb
nop
inc
aas
cmp
mov
pop
roll
jp
pop
mov
sub
movsl
lods
pop
out
sbb
mov
xchg
stos
xchg
sbb
push
xor
pop
xlat
pop
mov
dec
cmp
mov
insl
push
xchg
sbb
das
loopne
and
lret
sub
push
push
jnp
pop
iret
popa
mov
test
and
ret
xor
adc
enter
fisubrs
adc
fucom
aas
pop
xchg
stos
mov
ljmp
fs
jo
jb
mov
div
push
shrb
jl
xlat
lahf
mov
xor
outsl
call
sub
xorl
jbe
call
jg
cmpsb
repz
xor
arpl
das
pop
push
mov
cmc
mov
sbb
scas
xor
gs
pop
repz
mov
xlat
cmp
popf
jecxz
dec
cmpsl
push
outsb
jo
jmp
and
lret
divb
xlat
imul
aas
rclb
cmpb
stos
rcl
test
ret
lcall
cli
xchg
mov
movsl
push
mov
add
lret
adc
mov
les
mov
lcall
sbb
mov
mov
fsubs
outsl
es
decl
sbb
jae
jmp
or
mov
fwait
bound
mov
movsl
enter
mov
out
jne
leave
jno
push
sti
inc
xor
movsl
stos
xlat
sbb
dec
cmp
aaa
fs
mov
mov
nop
inc
ss
add
cmp
clc
dec
sub
mov
sbb
dec
je
mov
pop
mov
std
push
jg
neg
cwtl
jb
inc
inc
adc
adc
push
or
cmp
mov
outsb
ja
push
sub
and
push
fildl
pop
shr
cmp
out
pop
mov
xchg
scas
lock
mov
jge
aas
cli
jl
test
sub
xchg
push
lret
sbb
push
cmpl
call
fnsave
call
jb
pop
out
bound
test
xchg
xchg
stos
out
sbb
and
outsb
cltd
mov
mov
aam
or
adc
push
ds
aaa
and
nop
xor
xor
mov
aaa
idivl
scas
pop
add
out
or
fwait
lahf
xor
dec
inc
in
pop
inc
cmp
push
test
add
xchg
sbb
xchg
filds
or
lock
out
in
sub
movsb
push
jae
jae
pop
add
xchg
lret
aad
mov
push
sbb
into
dec
ret
xchg
dec
cmp
lret
fisubs
mov
adc
cltd
sbb
mov
add
addl
pop
mov
mov
jecxz
cwtl
sbb
repnz
jg
adc
add
xchg
fnsave
mov
mov
test
mov
add
add
faddl
pop
icebp
rcrb
sbb
sub
popa
push
push
xchg
lret
add
mov
nop
jmp
lcall
sub
fistpl
sarb
leave
loop
mov
hlt
test
in
inc
test
ret
push
push
test
js
jo
nop
daa
jno
sub
push
add
push
mov
sbb
sub
mov
add
and
xchg
fs
into
mov
mov
addr16
push
arpl
enter
sti
pop
fs
xor
cmp
pop
push
sbb
ljmp
scas
aad
mov
fst
rclb
adc
dec
fwait
jle
loope
pop
adc
mov
into
mov
sub
mov
cld
xchg
mov
xchg
add
cmp
or
sub
mov
mov
jae
dec
sbb
and
mov
in
jmp
scas
lret
mov
lods
out
sarl
adcl
mov
pusha
daa
lahf
push
inc
popa
les
mov
rclb
xchg
xor
sahf
mov
and
mov
lret
addr16
icebp
xchg
loope
pop
mov
mov
sbb
ds
pop
xchg
inc
outsl
sti
and
xlat
pop
xchg
in
push
dec
int
loope
cmpsb
shl
pusha
mov
mov
sbb
hlt
repz
push
sbbl
mov
test
cmc
dec
or
addb
push
daa
mov
fs
outsl
cmpl
xchg
dec
outsb
lret
dec
push
bound
or
inc
mov
cltd
pop
add
lret
mov
bound
and
push
mov
adc
or
out
inc
loope
popa
inc
mov
push
stos
adc
jle
test
je
or
jmp
mov
aad
mov
xlat
inc
xor
fcomp
pop
int
sbb
or
imul
into
loope
push
ret
pusha
loop
sbb
stos
jl
lahf
ja
add
mov
lock
mov
and
into
dec
idivb
repnz
xlat
add
test
push
in
or
dec
les
sbb
std
popf
fstpl
ret
arpl
sbb
repz
mov
enter
xchg
sub
call
roll
mov
in
inc
or
xor
sbb
rcpps
xlat
adc
dec
test
lahf
dec
sub
hlt
fwait
cmpsl
sahf
jae
xor
pop
arpl
stos
jmp
jae
adc
stos
lods
or
inc
mov
pop
das
jbe
aam
pop
inc
pop
out
sbb
dec
cmc
dec
fistl
push
xor
mov
sbb
sub
jg
popa
hlt
push
dec
push
pop
test
clc
xor
repz
out
fidivl
ja
add
and
or
scas
imul
stc
jo
lahf
jmp
out
fdivl
jg
iret
loopne
sbb
mov
ficompl
cs
lea
jmp
and
loopne
jg
push
pop
push
icebp
mov
lret
or
sub
inc
stc
mov
scas
je
arpl
jnp
mov
dec
dec
lret
andb
xor
inc
pushf
and
lahf
mov
mov
aaa
mov
push
rcrb
jmp
or
cmp
imul
stos
dec
mov
dec
mov
rcrb
xorb
and
push
movsb
mov
mov
insl
pop
es
push
pop
je
and
inc
cmp
dec
das
mov
or
sub
outsl
in
adc
sub
xchg
pop
sub
xor
scas
add
int3
pusha
add
inc
dec
push
dec
out
xchg
mov
adc
cmpsb
in
mov
mov
imul
ljmp
js
hlt
pop
jmp
sbb
mov
adc
in
sub
adc
das
pop
adc
cmp
test
mov
adc
and
imul
add
cmp
sub
aas
cmp
popa
cmpsb
dec
sahf
and
out
scas
lahf
sub
fistpl
jmp
xor
inc
mov
enter
fidivs
imul
fcomps
xchg
or
hlt
jg
mov
divl
add
pop
push
loope
mov
jbe
add
inc
mul
dec
sub
out
jo
fcomps
mov
adc
jg
or
out
jp
fwait
pop
enter
or
icebp
and
jg
fbstp
xor
fstps
mov
fisubrs
scas
inc
cli
dec
scas
jb
aas
xor
ljmp
sbb
adc
push
in
jg
mov
ficomps
std
into
pop
cld
cmp
mov
jecxz
add
push
int
add
sbb
cmp
mov
ror
cmp
mov
xchg
inc
xchg
cmpsb
mov
in
pusha
out
test
je,pt
mov
inc
dec
fisubl
mov
sub
push
sub
inc
add
test
loop
and
sti
xor
lret
push
js
pop
mov
loopne
ss
test
cwtl
fsubrs
mov
stos
xchg
xlat
in
cmpsl
ljmp
xchg
fwait
inc
fwait
stc
cwtl
mov
pop
jg
add
mov
cwtl
sbb
imul
roll
sahf
sahf
leave
in
xor
adc
inc
in
popf
xchg
and
repz
sbb
or
lock
or
idivb
add
loopne
mov
xor
rcll
mov
out
xor
aas
stos
xor
int
das
jb
push
dec
ret
inc
xchg
adcb
gs
cmpsl
out
push
xor
adc
cmp
daa
push
push
movsb
or
mov
fwait
test
aaa
dec
xchg
sub
add
sub
fstpt
adc
popf
xorl
mov
xchg
and
pop
xadd
lock
dec
cmpsb
mov
or
movsb
insl
mov
imul
adc
jns
cmp
push
jae
mov
shr
shll
adc
arpl
xchg
aam
gs
or
lock
mov
cwtl
or
mov
jp
pop
push
cmc
adc
push
lock
scas
or
cmpb
add
in
mov
shrl
xchg
xchg
ds
push
pop
jns
xlat
loop
xchg
lcall
and
ret
push
inc
pop
xor
bnd
ret
mov
mov
pop
cwtl
adc
adc
lods
push
mov
jae
adc
movsl
cld
pop
sbb
mov
out
mov
adc
push
xchg
gs
adc
xor
inc
cld
sub
or
dec
fwait
adc
scas
shrl
leave
mov
movsb
lods
mov
and
sub
adc
test
scas
jnp
mov
pop
and
xchg
cltd
lret
test
jb
int3
cmp
or
js
sarb
pushf
xlat
adc
or
or
push
daa
cli
cmpsb
fnstcw
popa
rol
movsb
jns
lret
loop
mov
mov
dec
data16
push
sbb
push
mov
inc
out
in
jne
and
mov
fsubrs
orb
frstor
mov
outsl
ss
mov
popf
mov
pop
push
cs
push
xor
js
test
out
xchg
lret
and
sbb
pop
pop
fcmovnbe
clc
inc
or
or
out
or
cmp
pop
dec
jg
fsubs
rcr
icebp
clc
mov
mov
aaa
xchg
sti
frstor
mov
add
xor
ret
add
xlat
or
fidivrs
push
mov
jecxz
mov
xor
loopw
lret
je
out
cs
repz
and
and
repnz
xor
sti
je
outsl
inc
xchg
lcall
stc
pop
fcomps
mov
sub
repnz
inc
or
sub
jns
add
push
or
sub
cmc
cmp
cwtl
movsl
aad
mov
jmp
dec
gs
sbb
adc
or
and
int
mov
and
and
ficompl
jns
inc
adc
pop
fucomip
mov
or
mov
sub
inc
stc
fcomps
and
loop
adc
les
push
mov
enter
xchg
add
lods
dec
or
mov
outsb
ret
leave
ret
lds
or
hlt
subb
icebp
call
ficompl
pop
test
inc
jae
daa
adc
clc
jns
mov
out
fs
push
sub
dec
repnz
adc
mov
and
xchg
dec
mov
imul
mov
and
stos
sbb
lret
xchg
xchg
imul
sbb
xor
les
add
fcmovnu
mov
sub
xlat
xor
mov
sbb
orb
rorb
sbb
bound
or
push
add
xchg
sbb
xor
push
outsl
add
mov
sti
orl
ret
shlb
fdivl
in
push
sti
lods
test
movsl
in
mov
fcoms
loopne
fcompp
leave
and
mov
xor
mov
sbb
cmp
cmp
and
xchg
push
pop
jae
icebp
or
pop
rcl
pop
or
repz
ljmp
inc
jo
lahf
fistpll
xor
ss
lcall
pop
mov
sar
ljmp
int
sbb
adc
es
lret
cwtl
push
std
adc
lret
adc
shrb
or
mov
mov
mov
dec
add
mov
dec
sbb
ficomps
dec
dec
mov
add
arpl
jl
mov
adc
jo
stc
adc
jno
mov
addr16
and
ljmp
pop
xor
xchg
movsl
push
cwtl
sahf
sarl
mov
and
sar
add
xor
loopne
pusha
and
shrb
dec
setp
mov
mov
mov
movsb
inc
incb
into
sarb
out
jecxz
hlt
movsb
jg
push
dec
movsl
loopne
jecxz
sub
sbb
push
lock
les
dec
inc
add
mov
push
rcrl
in
adc
mov
aad
jmp
inc
xor
mov
lcall
shl
or
xor
ja
fnstsw
xor
loope
arpl
xor
test
loopne
pop
jl
pop
ljmp
in
pop
adc
add
pop
mov
pop
sbb
jo
add
push
jecxz
in
cs
stos
test
hlt
mov
les
ds
xchg
sub
dec
dec
inc
sbb
jge
cmp
sahf
jl
in
mov
sub
sub
ds
adc
dec
repz
pop
lock
cmp
pop
pop
ret
adc
lock
cmpsl
and
test
cmpsb
cmp
dec
sub
sub
fs
xchg
push
popa
insl
mov
xlat
ret
std
pop
mov
pop
adc
add
clc
cmp
pushf
add
dec
push
stos
pushf
imul
ljmp
add
pop
mov
cmp
in
pop
jge
aad
push
mov
dec
sbb
mov
adc
rcl
xchg
mov
sbbl
xor
or
mov
std
inc
add
xchg
xchg
push
outsb
es
loop
insl
lock
ds
mov
sahf
ja
dec
mov
mov
int
into
or
test
adc
sti
push
jl
ljmp
xor
jg
push
adc
cli
stos
dec
inc
jg
mov
insb
cwtl
mov
adc
mov
and
shrl
cld
bound
mov
dec
jp
dec
lahf
andb
scas
cmpsl
rcll
xchg
inc
adc
pop
cmpsb
mov
shrl
je
dec
xor
mov
leave
fsubs
xchg
rorl
cs
call
adc
sbb
xor
loopne
adc
popf
xchg
aad
lret
jae,pn
dec
dec
aaa
cmp
xchg
sbb
shrb
repnz
or
add
arpl
cmpb
les
stos
data16
insb
adc
aam
xchg
xchg
mov
pop
andb
inc
aas
xor
ja
stc
imul
outsb
rol
loopne
lahf
jp
les
and
xchg
ja
cltd
push
or
push
push
adc
iret
out
in
jecxz
xchg
in
pop
outsb
ret
adc
in
arpl
dec
mov
test
dec
mov
push
cmpsb
ret
arpl
aam
sbb
inc
cltd
pop
gs
sarl
mov
push
pop
fnstsw
pop
and
inc
cmpsb
bsr
dec
pop
add
inc
mov
push
popw
jns
pop
adc
cs
sbb
and
xor
cmp
sub
mov
xchg
movsb
std
call
add
dec
sub
cmp
xchg
pop
pop
pop
outsb
sbb
lahf
sbb
mov
in
add
imul
hlt
clc
es
jle
js
dec
mov
es
gs
push
xchg
test
bound
fmull
popa
ds
inc
cmp
cmpsb
in
ret
outsl
xchg
loope
in
xchg
push
dec
mov
xchg
xchg
jle
shll
and
dec
lahf
mov
leave
xchg
shrb
ss
add
add
cltd
sbb
leave
push
push
lahf
push
sbb
adc
sarb
mov
loop
loopne
sub
loopne
stos
mov
push
lock
out
jnp
mov
or
cwtl
pop
xchg
cmp
pop
adc
inc
imul
add
lods
call
popa
sbb
or
adc
xlat
cmpsl
xor
add
push
loopne
scas
lret
sbb
dec
ret
inc
imul
add
sub
push
cwtl
xchg
iret
pop
ss
int3
ret
inc
out
sub
lock
dec
mov
bnd
mov
push
dec
adcb
insl
roll
mov
nop
popf
mov
call
mov
sub
or
cmpsl
push
stos
xchg
sbb
insb
pop
push
jno
cmpsl
mov
mov
js
popa
in
xor
lret
mov
cmp
mov
or
clc
dec
mov
adc
fdivrl
push
mov
push
sub
mov
xchg
repz
fsubp
jo
jno
xor
jno
pusha
lret
push
dec
out
mov
lds
out
mov
das
lcall
jo
iret
shrb
jb
mov
daa
es
jb
sub
xchg
pusha
iret
push
cmp
mov
pusha
aaa
fnstsw
xchg
mov
mov
and
sbb
fsubrl
xchg
movsl
push
int3
nop
ret
xchg
cmpsl
pop
mov
clc
xor
gs
jmp
arpl
popa
inc
cli
fnstcw
sub
mov
les
mov
mov
clc
shrb
add
xlat
cmp
mov
dec
dec
xchg
mov
jo
rolb
cmp
leave
jne
popl
addl
into
out
test
jmp
push
pop
lods
adc
mov
aad
mov
aam
mov
push
pop
push
inc
in
jae
ss
mov
sar
outsl
dec
xor
jbe
cmp
je
dec
loopne
ss
xchg
jmp
dec
lahf
mov
push
pop
int
xchg
sub
jno
add
fistpll
jecxz
movsl
push
push
jb
push
pop
xor
fimull
push
add
cmp
jl
inc
mov
push
or
repz
fwait
gs
popf
stos
add
subb
ljmp
gs
jae
jae
push
imul
testb
out
sbb
andl
pop
jecxz
push
in
or
cli
js
sub
dec
imul
lods
jne
pop
xor
into
test
dec
lods
or
xor
push
test
mov
adc
adc
cmp
sbb
into
xchg
pop
mov
jl
pop
je
xor
lret
sbbb
cmc
aaa
xor
ja
aam
sti
loopne
push
shrb
pop
scas
cwtl
dec
xlat
ljmp
xchg
pop
mov
xor
xor
dec
clc
fdiv
jge
loopne
pushf
dec
jg
or
dec
fst
fwait
nop
aad
push
jg
popa
cmpsl
call
mov
and
mul
in
xchg
cmp
and
outsb
mov
xchg
bswap
or
xlat
inc
fildl
pop
pop
out
cmpsl
push
or
or
into
inc
aas
ja
outsb
stos
mov
cli
cmp
xchg
pop
push
sbb
fisubrs
cmp
mov
mov
addr16
or
and
dec
imul
xchg
cmp
sub
inc
jg
mov
test
xor
ret
subl
pop
push
test
push
enter
mov
ja
rcll
sti
popa
fstpl
cmp
cs
mov
lahf
jo
int
add
lods
mov
and
js
shl
jl
ret
jb
sbb
sbb
mov
pop
imul
clc
xchg
fstpt
push
movsl
andl
ret
cli
lcall
cs
mov
rorl
das
das
shrb
data16
enter
ljmp
jae
xchg
pop
push
xchg
or
pushf
sarb
jbe
mov
aaa
push
mov
pop
out
pushf
aam
sub
sbb
cli
fbld
psrlq
arpl
js
cltd
add
jae
loope
test
fidivrs
jge
fcmovne
cmp
and
xchg
or
movsb
fidivrl
xlat
mov
jp
scas
xor
cli
jbe
jmp
and
leave
jo
push
adc
push
ficoml
xlat
push
xchg
push
mov
add
jns
or
push
lcall
cltd
mov
imul
arpl
jecxz
pop
dec
imulb
out
adc
jp
add
pop
clc
clc
cmpsb
or
jns
and
insl
mov
jo
stos
fsubrp
adc
ja
dec
mov
out
dec
out
xchg
adc
push
out
ja
ret
inc
je
mov
addr16
inc
scas
test
adc
xorb
fdivr
loop
cld
leave
add
sbb
cmpsb
cli
jp
repnz
ret
pop
add
fabs
add
icebp
mov
inc
out
call
pop
add
dec
pop
cmp
sub
push
inc
dec
je
call
repnz
adc
sahf
or
pop
push
aas
mov
enter
cs
aas
bound
push
inc
out
ss
lods
push
repz
outsb
outsb
fwait
jo
push
rcrl
into
pushf
pusha
pop
test
fnsave
mov
or
pop
and
dec
sbb
push
dec
adc
out
outsl
push
faddl
movsl
gs
pop
repnz
xchg
aad
cmp
clc
xor
or
cld
rcr
dec
pop
cs
and
jnp
inc
shll
std
jecxz
mov
daa
mov
pop
dec
in
orb
outsl
and
fdivl
imul
imul
scas
adc
nop
pop
push
mov
rcr
stos
cli
push
out
cmp
mov
gs
xor
bound
fsub
jle
pop
fisttpll
or
lcall
mov
ss
xchg
gs
mov
mov
adc
shr
fsubrl
inc
pop
pop
inc
insl
cmp
xor
das
sbbb
addr16
xorb
std
push
pop
inc
insl
ret
arpl
lds
sar
neg
xchg
cs
mov
pop
outsl
jg
mov
mov
rolb
int
mov
insb
xor
jle
dec
rorl
js
js,pt
sbb
addb
pop
inc
fsubrl
into
sub
xor
mov
sbb
test
inc
mov
mov
and
mov
push
xchg
popw
sbb
or
mov
rcl
push
fisubrl
dec
shr
dec
jnp
sbb
jmp
jecxz
rorb
adc
lahf
mov
dec
dec
adc
call
scas
pop
xchg
not
pop
out
ss
shll
and
fimuls
loop
in
cmp
pop
sbb
hlt
mov
push
pop
cmpsb
stc
sub
xchg
cld
cwtl
jb
pushf
or
mov
adc
icebp
mov
inc
xchg
mov
or
mov
add
in
lret
clc
xchg
bound
pop
pop
sbb
in
repz
in
std
stos
sub
jle
and
jne
stc
fiadds
cmp
jmp
jb
cmp
mov
negl
push
lret
stos
adc
adc
xchg
das
cmp
jnp
and
push
mov
adc
xchg
fists
jns
xchg
inc
clc
inc
sbb
inc
or
clc
leave
ljmp
aam
jo
mov
push
mov
push
dec
aam
jns
push
dec
add
and
pop
mov
ds
fwait
pushf
nop
ljmp
push
jecxz
mov
mov
shrl
rcr
gs
adc
mov
sarb
cmc
movsl
ret
mull
cmp
and
adc
mov
decl
cmc
ja
jae
and
clc
test
and
ret
push
add
dec
js
push
cmpsb
pushf
push
cmp
sub
push
fcmovbe
mov
mov
in
test
or
ss
xor
leave
pop
fisubrs
push
jecxz
int3
rolb
cmp
and
sbb
pop
stc
mov
jmp
loopne
dec
jnp
gs
daa
pop
pop
sbb
dec
push
xor
adc
mov
lock
xchg
cmp
out
mov
inc
cmpsb
mov
xchg
sub
fldt
jne
lcall
cmpsb
stos
push
jmp
xor
and
mov
popf
push
jo
push
sarb
cltd
jmp
sub
in
jbe
jmp
add
mov
addr16
push
out
pushf
testl
bound
mov
cmpsb
mov
xchg
int3
inc
fsubrs
inc
scas
bnd
pop
ljmp
push
xor
adc
lcall
adc
lret
jl
in
insl
push
fisubrl
insb
mov
jecxz
orl
std
arpl
cmp
mov
imull
sbb
ljmp
xor
dec
jmp
negl
int
mov
out
lods
andl
insb
jp
inc
inc
pop
jecxz
or
rcr
cmp
pop
jp
ds
fimuls
jnp
leave
xchg
pop
push
cmc
stos
jp
imul
xchg
hlt
dec
popa
push
xchg
or
mov
fcom
jo
cmp
scas
pop
shll
outsl
ret
icebp
pusha
in
sbb
adc
jae
mov
cs
clc
fsubrl
add
adc
imul
push
dec
pop
mov
imul
fidivrs
xor
jl,pn
bound
cltd
int
es
xor
cli
sub
cmp
sub
mov
push
addl
inc
adcl
xor
fnstcw
pop
les
stc
add
pop
dec
les
fisttpl
repz
xor
xor
or
fidivs
pop
loopne
pop
xlat
jo
adc
push
cmp
sti
std
hlt
add
rcr
repz
xchg
cmp
sbb
sbb
int
jnp
push
mov
sbb
test
ss
xor
inc
push
and
and
insb
jo
mov
ds
ljmp
dec
out
sahf
sub
mov
cltd
testb
jae
sub
add
cmpsl
in
mov
stc
test
loop
jae
ss
mov
inc
sbb
xlat
and
nop
sbb
xlat
cmp
and
adc
sub
sbb
xor
rorb
push
in
sahf
insl
mov
push
bound
xor
sbb
pop
sbb
push
repz
jno
xchg
mov
push
out
sbb
shll
sbb
cmpsb
scas
mov
xchg
xor
ret
mov
mov
dec
add
mov
out
loope
dec
mov
or
rcrb
call
dec
and
push
std
xchg
aam
sbb
adc
xor
nop
and
out
pop
arpl
fs
int
cs
popf
xchg
adc
clts
test
mov
sub
fisttps
mov
dec
or
idivl
and
fcomip
outsl
jle
cmp
into
fcmovu
mov
mov
sahf
dec
mov
and
pop
fs
pop
xor
stc
xchg
mulb
in
aaa
add
int3
push
cmpsl
andb
and
lahf
mov
sbb
mov
pop
push
ds
lods
rcrl
cmp
call
lods
das
jmp
popa
in
xchg
mov
dec
bound
mov
pop
aam
dec
stc
mov
mov
lret
jg
or
xlat
pusha
pop
stc
xchg
cmp
repz
dec
lock
or
add
sarw
loop
jmp
in
mov
repz
data16
dec
clc
and
inc
aas
sar
jae
popa
in
mov
cs
cmp
add
or
mov
aas
shrl
scas
xchg
push
pop
out
test
bound
xor
shrb
cmc
loop
xchg
nop
push
incl
sbb
xchg
or
dec
scas
addr16
out
int3
mov
scas
and
fldl
dec
cmpsb
mov
xchg
xchg
mov
andl
out
or
pop
xor
sbb
daa
sub
mov
push
sarl
es
dec
adc
pop
int
lret
pop
std
sub
sub
fstl
push
dec
add
ja
mov
cmpsb
jns
out
jno
mov
mov
cmp
pop
xlat
fdiv
pop
movsl
call
dec
ret
outsb
sarb
jge
stos
ret
push
test
or
push
sbb
scas
insl
mov
dec
mov
mov
pop
jmpw
es
xorl
scas
sbb
jl
decl
sbb
leave
or
mov
pushf
mov
cmp
cld
mov
aad
fcomi
nop
or
filds
addr16
sub
jne
mov
fs
pusha
push
stc
mov
jecxz
mov
out
stos
fwait
repnz
ret
mov
lods
inc
and
pop
dec
mov
out
popa
mov
jmp
sbbl
sbb
mov
loope
outsb
cvtdq2ps
push
cwtl
out
lds
mov
jae
pop
fldt
xchg
fdivrl
loopne
dec
mov
cmp
xchg
data16
fldcw
nop
mov
mov
iret
dec
shr
clc
ret
pop
push
pop
popa
cmp
cmpsl
jo
out
push
dec
inc
dec
aas
or
sbb
lock
sbb
ds
nop
scas
jne
mov
sbb
pushf
popf
test
mov
int
gs
outsb
pop
mov
imul
scas
mov
xor
jg
mov
cmpsl
pop
inc
ljmp
ds
mov
jg
adcb
push
sub
xchg
pop
inc
lock
push
js
fwait
xchg
test
jbe
cmp
test
inc
cld
jmp
std
mov
addr16
xlat
and
xor
scas
dec
pop
mov
lea
daa
rcl
out
loopne
int
stc
inc
leave
aaa
push
xchg
stos
jnp
cmp
push
decl
sahf
or
pop
sahf
pop
lods
es
fnstenv
jp
movsb
mov
mov
add
and
mov
push
fdivr
mov
test
mov
movsl
adc
adc
cmp
rol
cmp
ret
sub
fwait
mov
dec
xor
out
dec
movsl
inc
mov
sub
jl
fadds
std
dec
lock
jnp
cmpsl
mov
and
jo
xlat
pop
in
xchg
pop
xchg
cmc
aaa
mov
sub
jbe
pop
jl
aas
test
jl
sub
mov
stos
and
divl
xchg
frstor
adc
sub
insl
into
add
mov
pop
paddq
outsb
icebp
pop
cmp
mov
stos
ret
call
stos
xchg
dec
jb
jecxz
rcll
mov
insb
in
dec
xchg
and
and
cmp
add
in
jg
xchg
xchg
cwtl
stos
movsl
scas
pop
push
shr
mov
push
fwait
adc
mov
leave
out
cmp
movups
ret
cmp
and
and
jmp
into
cmpsl
push
jl
mov
iret
arpl
xchg
in
push
pop
fstps
add
outsb
pop
cmc
arpl
test
arpl
shrl
dec
decl
loopne
pop
xchg
ss
dec
sub
in
repz
inc
cmp
push
mov
push
mov
mov
sbb
mov
das
mov
jnp
pop
dec
and
jae
mov
pop
inc
sbb
lcall
outsb
cmp
add
lcall
rorb
jle
fists
adc
icebp
mov
mov
fisubrl
sbbl
fsubrl
dec
or
insl
xor
pop
inc
out
and
js
pop
enter
std
xchg
in
stos
dec
rep
inc
pop
mov
xchg
jo
test
lods
sub
or
add
pop
pop
into
movsl
stos
divl
inc
scas
mov
imul
loopne
dec
xor
mov
jg
jecxz
mov
xchg
lret
fwait
into
dec
mov
arpl
add
repz
pusha
jmp
arpl
lods
popa
popl
pop
stos
dec
cltd
imul
lahf
sub
adc
add
jne
push
loopne
xor
ja
jg
adc
into
inc
sub
pop
xchg
xor
loopne
pusha
mov
xor
ljmp
out
das
and
les
mov
cmp
dec
and
out
ljmp
adc
push
int
lcall
and
sub
mov
lahf
push
mov
add
sarb
fildll
xor
and
inc
shlb
orb
jbe
subb
inc
ds
addr16
cmp
dec
popa
ret
jno
ret
add
pop
pop
mov
or
jp
lret
les
ja
add
fwait
pop
or
mov
insl
or
jb
push
inc
call
jnp
das
notb
jbe
push
mov
loopne
test
xor
pop
daa
out
into
push
dec
pushf
gs
inc
les
mov
daa
insl
lret
jbe
shr
mov
cmp
jl
pand
mov
icebp
mov
loopne
out
cwtl
rorl
pusha
aad
mov
push
mov
std
jp
mov
jns
lock
push
cmpsl
sbb
ret
or
mov
inc
push
test
mov
jbe
aad
lock
xchg
add
sbb
shlb
jbe
jbe
inc
xchg
push
rcr
pop
in
jb
in
sbb
ja
cld
ds
xchg
push
mov
and
sarl
out
dec
xor
in
mov
xor
dec
in
cmp
jmp
mov
mov
rolb
xchg
out
or
pop
mov
shlb
sti
xor
jbe
daa
mov
add
dec
and
and
and
in
gs
in
mov
adc
fwait
push
ja
in
insl
and
fcmovnb
repz
rolb
dec
sbb
dec
jmp
clc
push
lret
fcmove
sbb
dec
ffree
lea
aas
sbbb
mov
push
test
lret
pop
test
jge
sahf
adc
mov
leave
adc
cs
pop
xor
insl
idiv
jnp
mov
iret
mov
xchg
lds
cmp
pop
addr16
xor
in
ret
cmp
mov
test
inc
decl
push
das
out
icebp
pop
repz
xor
adc
test
sbb
nop
and
fistpl
in
xchg
addl
cmpsb
inc
inc
pop
and
adc
cmp
fists
mov
pop
cmp
addl
inc
mov
jnp
pop
xor
test
sub
test
cld
xor
mov
call
fucomip
jg
shrd
cmp
dec
mov
addl
mov
jle
hlt
cmp
adcl
out
filds
test
sub
mov
push
xor
pop
dec
jno
sub
movsb
in
jge
mov
pop
divb
or
sub
into
dec
lcall
aam
xchg
imul
loop
jo
imul
loopne
lock
enter
sbb
jo
or
cmp
les
dec
cltd
fs
jns
inc
adc
sub
add
mov
xchg
in
inc
jl
enter
cmp
out
pop
push
adc
loope
adc
imul
push
out
add
xchg
loop
push
movsb
pop
inc
js
inc
lret
std
fs
adc
mov
sbb
lds
xor
mov
scas
inc
loopne
mov
cmpsl
lods
scas
pushf
or
lds
xchg
cmpb
frstor
in
jbe
mov
cwtl
xor
imulb
das
hlt
push
lret
dec
leave
mov
cltd
cld
ja
pop
in
idiv
packssdw
push
and
fs
fwait
dec
das
ret
mov
cmpsb
lock
mov
cmp
xchg
pushf
sbb
js
sub
je
iret
js
imul
mov
out
jnp
mov
int
adc
jb
data16
insb
loope
test
aad
enter
aas
mov
popf
les
xor
adc
xlat
push
jge
adc
push
mov
mov
mov
cli
cmc
add
xchg
fidivrl
outsl
xchg
jns
mov
fstpl
sub
lods
sti
xor
ret
sbb
sub
stc
mov
ret
aad
adc
sbb
adc
dec
pop
sub
clc
test
addr16
push
jle
outsb
ljmp
add
pushf
mov
cmp
flds
mov
into
lahf
leave
int
sar
mov
aam
pusha
or
jp
clc
xchg
jle
mov
dec
lcall
mov
cli
insb
rcrb
xchg
xor
outsl
inc
cmpb
cmp
icebp
xchg
lcall
addr16
sarl
cwtl
sbbl
jbe
jno
leave
or
leave
sbb
push
mov
shr
adc
sub
notl
sbb
lock
pop
daa
int
rol
push
pop
pop
sub
mov
lods
and
jno
pop
ret
gs
mov
push
jp
jbe
inc
inc
jb
leave
sub
jg
jp
jb
pop
jae
aam
jno
idiv
icebp
and
cmovs
sbb
fistl
push
adc
jp
pop
fs
mov
cmp
add
pop
cmp
inc
popf
sub
pushf
stc
inc
dec
sbb
xchg
adc
iret
popa
push
dec
pop
jecxz
ja
dec
rcrb
mov
fwait
lcall
movsb
sbb
stc
shrl
jne
jne
pop
leave
mov
mov
pop
lock
jge
insl
ss
fsts
cmp
fs
push
sti
or
pop
xchg
decb
pushl
cltd
aas
add
cs
jbe
push
rol
push
cmc
mov
sbb
into
cmove
xor
test
xchg
cmp
pop
gs
arpl
mov
jle
cmp
sbb
fisubrl
aas
mov
test
or
popa
hlt
inc
outsb
std
pop
lahf
push
js
jg
mov
push
imul
sub
or
cmp
push
in
jno
lret
daa
inc
mov
xor
adcb
xor
cmp
xchg
shlb
jbe
cmp
and
leave
cmpl
and
pop
mov
ss
aad
pop
bound
and
dec
jne
jecxz
mov
jbe
or
cmp
adc
lock
dec
push
cmc
mov
std
sti
push
inc
mov
movsb
scas
sub
mov
or
cld
pop
sub
sub
into
mov
int3
dec
push
adc
sbbb
dec
fdivr
gs
cli
lret
pop
mov
iret
jle
pop
dec
mov
dec
mov
fwait
nop/reserved
jns
or
mov
xor
cli
enter
xchg
in
fsubs
pop
lahf
je
lahf
addr16
cmpb
jbe
jge
lret
xchg
nop
scas
sbb
add
and
lfs
fstl
fadds
test
or
inc
out
bound
pop
jno
and
gs
movsl
fisttpll
sbb
inc
xor
cmp
mov
outsl
mov
or
xchg
lea
insl
fs
xor
stos
roll
das
cmpsl
pusha
push
mov
push
adc
sahf
xchg
sub
popf
xor
mov
repz
sbb
adc
push
adcl
les
dec
jmp
pop
xor
fldcw
ljmp
mov
or
xchg
or
rorl
out
xor
dec
pop
inc
cs
xchg
mov
adc
sub
nop
and
mov
jmp
cltd
xlat
jecxz
and
adc
add
adc
in
sbb
pop
call
sti
dec
jecxz
inc
lret
mov
mov
enter
xchg
mov
cmp
out
loopne
movsb
cmp
ja
mov
xchg
aas
rorl
cld
add
leave
add
push
sbb
in
sub
andl
aam
bound
test
aas
mov
adc
jbe
pmulhw
xchg
push
loope
cmp
fildll
insl
sbb
add
xchg
fs
mov
pop
inc
cmc
ds
cmpb
mov
outsl
mov
or
xchg
sahf
fdivrl
sbb
out
sub
popa
into
pop
aad
push
adc
div
testl
or
add
lea
stc
dec
call
mov
js
jo
into
fisttps
sahf
sub
cmp
out
cld
jle
mov
mov
push
xlat
add
sbb
rol
mov
scas
adc
jae
cmp
push
call
jl
addl
sahf
clc
nop
pop
cli
mov
dec
into
fwait
jae
imul
loope
xchg
add
rolb
mov
fincstp
aas
dec
test
inc
inc
cwtl
and
xchg
or
push
fisubl
rorl
jbe
loopne
adc
mov
push
lock
shll
clc
xor
inc
addr16
js
cli
out
test
sbb
cmp
push
or
mov
rolb
into
mov
xchg
pop
clc
pop
cmp
aaa
xor
fimull
mov
rcrb
fnsetpm(287
push
enter
shll
lcall
and
nop
out
push
loope
out
icebp
push
pop
cmpsl
mov
xchg
fstl
bound
rolb
pop
xor
add
xor
dec
pop
jle
push
or
int3
divb
ss
hlt
mov
fadd
cmp
mov
cmp
aas
pushf
out
dec
fsubrl
or
jl
xlat
or
int3
pop
lcall
or
jg
pop
jns
aas
les
push
test
push
test
lock
enter
or
mov
mov
push
mov
inc
scas
mov
pusha
pop
andl
mov
mov
sub
cmc
sbb
das
adc
mov
adc
mov
pop
rcrb
stos
test
xor
in
or
orl
jmp
sub
pop
in
stos
arpl
pop
enter
sbb
inc
out
ret
mov
test
int
in
mov
rol
mov
iret
pop
out
arpl
fcom
movsb
fadds
push
jno
pop
in
dec
repnz
adc
ja
repz
or
jo
js
imul
sbb
mov
mov
clc
cmpsb
pop
adc
lods
stc
pop
orb
sbb
roll
mov
mov
mov
sub
rcll
mov
scas
and
test
xchg
mov
imul
in
mov
les
inc
dec
mov
iret
jb
mov
fs
jo
negb
shrb
sbb
lret
inc
les
sub
es
loopne
push
sub
xor
or
add
fmul
pop
pop
mov
je
jno
push
jp
mov
aas
rcll
mov
sti
iret
ret
inc
sbb
leave
inc
test
xor
scas
add
push
cld
out
sub
insl
movsb
and
lret
mov
mov
sub
out
cltd
lahf
imul
jmpw
mov
fisubrl
dec
pop
and
lds
mov
hlt
mov
mov
sar
lods
mov
cmpsl
cmpsl
pop
fsubrs
or
and
or
jns
in
mov
mov
mov
dec
in
push
insl
ret
add
dec
adc
mov
mov
sub
push
dec
add
mov
mov
xchg
stos
cmc
push
imul
cmp
stos
mov
sti
popa
cwtl
test
nop
push
sti
dec
out
and
jns
int3
rcrb
mov
cmc
test
cwtl
sbb
inc
pop
lods
or
movsl
shll
cmpsb
mov
sub
pop
ljmp
pusha
sbb
mov
inc
insl
add
mov
dec
jne
adc
and
out
xchg
aad
jg
xor
loop
insl
test
cmp
iret
in
pop
in
ficoms
jmp
cld
mov
mov
mov
add
int3
nop
sub
loop
nop
and
les
fdivrs
aas
xchg
mov
enter
clc
pusha
into
add
testb
pop
push
rol
das
sti
scas
iret
xchg
cmc
ljmp
sbbl
xor
das
jne
sbb
sbb
sarl
sarl
add
out
or
and
push
sub
mov
adc
cmc
addr16
out
fdivs
or
and
repz
and
push
pop
loopne
inc
or
orb
cltd
pusha
xchg
rcrl
cmc
mov
rcrb
std
fwait
rolb
mov
adc
pmaxub
pop
pushw
dec
adc
out
pop
add
mov
scas
adcb
mov
xorl
xor
addr16
adc
or
scas
cmp
or
pushf
mov
stos
jae
cmp
jg
mov
dec
cs
pop
jp
bound
mulb
xor
cmp
jg
lahf
pop
and
sbb
out
pop
pop
test
jb
cs
mov
push
lret
push
mov
scas
movsb
lahf
push
jmp
dec
or
cwtl
or
push
inc
ljmp
mov
lret
sbb
or
inc
xchg
jae
fidivrl
sub
mov
ret
mov
outsl
daa
cwtl
add
dec
loop
xchg
sbb
push
cli
insb
adc
das
insb
fs
ljmp
and
or
daa
jb
push
pop
ds
movsb
jg
sub
adc
out
lea
mov
shlb
sbb
push
lret
mov
push
xchg
sti
or
icebp
stos
clc
test
inc
and
test
push
fdiv
test
lret
mov
push
xor
scas
push
ja
ljmp
shl
mov
xchg
mov
xchg
scas
push
imul
or
jne
sub
mov
adc
arpl
shrl
movsl
mov
jg
cmpsb
mov
mov
xchg
mov
adc
lret
pop
inc
pop
insb
lods
data16
pop
stos
cmp
mov
xchg
inc
data16
sbb
movsb
cld
sbb
inc
mov
xchg
mull
shl
test
jb
cmc
jns
fcoml
pop
adc
out
insb
push
cmpl
pop
inc
ss
jg
cld
movsb
xchg
add
sar
push
pop
pop
aad
outsb
and
pop
sub
push
xor
enter
jmp
cmp
jg
fldenv
dec
jo
orl
les
mov
and
push
fldenv
inc
jbe
push
push
fdivrs
addr16
loope
lret
cmpsl
sub
pop
and
push
dec
sub
shrb
sbb
das
stos
mov
frstor
push
lea
enter
or
jb
xchg
jle
nop
int
mov
fsubs
adc
jl
out
sbb
shrl
inc
in
hlt
nop
mov
sbb
inc
test
push
rolb
subb
add
dec
les
test
mov
lea
sub
inc
xorl
xor
pop
sbb
add
cmp
or
cmp
cltd
push
xchg
xor
test
rcrb
xlat
movsl
sbb
cmp
jae
fcompl
push
ret
dec
push
mov
hlt
sbb
pushf
xchg
int
or
pop
in
cli
sub
ret
cmovg
and
push
cli
test
fwait
rolb
or
sti
xchg
jge
or
add
push
jb
inc
je
xchg
jl
xchg
adc
pop
pop
lahf
xchg
divl
repnz
inc
js
pusha
jp
cmp
or
mov
lahf
cmpsl
jo
jmp
imul
and
dec
or
mov
mov
push
mov
divb
shll
push
je
shll
fwait
imul
mov
jae
mov
rcrl
mov
lret
mov
or
xor
push
mov
stos
push
aad
cmp
fs
fldenv
inc
ret
or
cmpsl
cmp
sbb
lcall
clc
fwait
popa
fidivrl
xchg
jb
popf
xor
cmp
and
cli
dec
cmp
movsl
lods
rorb
xchg
mov
bound
adc
daa
and
out
mov
xchg
mulb
fbld
iret
lods
mov
and
stos
jb
push
fdivr
and
xchg
arpl
jns
outsb
pop
pop
dec
rcrb
enter
adc
pop
lods
push
pop
pop
fmull
jne
xor
jmp
sub
jne
add
pop
dec
or
lds
mov
or
xchg
add
mov
rcrl
push
ss
cmp
out
pop
push
push
scas
enter
pushf
lcall
imull
mov
xchg
test
in
push
jnp
dec
lcall
out
daa
xor
jmp
sbb
jne
popa
movsb
inc
jne
mov
in
cmpsb
jae
pop
inc
sbbb
jle
ds
xchg
xor
push
outsb
jb
sub
pop
and
pop
in
adc
popf
test
push
adc
pop
inc
sbb
mov
mov
lahf
ss
inc
imul
cwtl
mov
adc
stc
loop
outsl
lea
fisubl
aaa
repz
out
int
in
in
or
lret
fwait
aaa
fucomip
jno
or
jecxz
stc
dec
xchg
repnz
xor
lock
into
mov
xchg
pop
sbb
sbb
loope
cmpsb
leave
ljmp
mov
fsubs
je
decb
fwait
es
sbb
bound
gs
push
decl
cmp
cmp
xlat
dec
sahf
and
inc
call
sub
aaa
push
mov
or
int
add
iret
cs
aad
test
push
mov
nop
fldt
sbb
pop
in
int
sbb
jae
push
popf
jg
jge
mov
ds
push
fmulp
push
call
inc
rorb
mul
cmpsb
dec
mov
cs
cmp
orb
lea
repz
fmuls
lahf
lds
call
lds
push
jbe
xorb
outsl
stc
out
xchg
xchg
xchg
sar
mov
add
pushf
xchg
cmp
cltd
mov
test
scas
xchg
mov
adc
lea
xchg
in
cwtl
and
xor
or
mov
lret
andl
mov
pop
pop
sbb
inc
jp
clc
lods
jb
and
fucompp
mov
inc
add
xor
fcom
jae
cld
adc
xchg
mov
sti
sbb
push
sti
leave
into
dec
movsb
jle
sahf
jl
pop
je
adc
xchg
xchg
mov
cmc
pop
ret
ds
lret
jne
cmp
sub
mov
inc
xchg
mov
cltd
loop
fisubs
prefetchwt1
mov
lcall
mov
sub
add
push
sbb
dec
push
mov
hlt
mov
push
es
adc
sahf
jge
popa
out
sub
xchg
push
insb
popf
test
pusha
adc
lahf
sbb
push
cmpsl
sub
jmp
mov
sub
and
in
pop
outsl
and
mov
dec
fsubs
fldenv
out
mov
imul
push
call
mov
stos
pop
std
cmp
outsb
cmp
sbb
xor
shl
pushf
scas
mov
or
cmpsb
movsb
or
fsubrs
into
imull
or
iret
mov
cmp
lock
xchg
dec
push
and
xchg
mov
sbb
mov
lcall
jnp
sbbb
and
repnz
mov
xor
in
jge
cmp
stos
pop
ja
pop
arpl
mov
stc
jae
imulb
xor
sub
cmp
cmp
add
dec
aas
xor
bound
dec
adc
jp
pop
popf
leave
inc
insl
push
cmp
scas
push
imul
jecxz
xchg
and
stc
comiss
shll
add
jbe
cmp
cwtl
popf
rol
mov
bound
xor
int3
iret
aaa
cld
xor
fnstsw
leave
loope
out
mov
test
test
mov
arpl
repz
dec
in
mov
mov
fiaddl
clc
aad
mov
ja
cmp
mov
in
jle
dec
popl
and
jge
and
out
xchg
filds
data16
ret
dec
mov
imul
xchg
out
daa
pusha
and
loopne
mov
push
dec
inc
stc
xchg
inc
insb
jns
adc
pop
cltd
pop
ret
or
push
cmp
mov
test
dec
fcmovb
icebp
push
mov
xor
or
pop
mov
dec
fsubrl
and
pop
push
mov
lds
out
mov
sti
sti
out
mov
jb
nop
jo
lcall
jmp
data16
das
push
mov
lea
mov
clc
push
sub
push
je
xchg
push
adc
mov
ss
sub
repz
inc
pusha
hlt
dec
stc
scas
pusha
jo
subl
mov
bound
rorb
pop
cmp
out
dec
movsb
imull
movsb
mov
pop
addr16
fiadds
mov
nop
les
push
push
fwait
emms
lds
sbb
inc
jmp
add
imul
lcall
push
xchg
cmp
push
call
jae
dec
pop
sti
push
andl
xchg
ljmp
out
out
faddp
fldenv
je
add
das
xchg
aaa
pop
pop
ret
lret
xchg
mov
dec
shrb
lcall
jae
cld
mov
mov
sub
es
sub
mov
test
xor
mov
sahf
lea
or
sar
fnsetpm(287
sbbl
mov
jo
jl
add
cmp
dec
inc
ja
faddl
ja
imulb
icebp
clc
push
push
inc
push
pop
aam
xor
pushf
push
dec
jecxz
inc
popf
aad
cld
xchg
iret
ds
outsb
adc
push
push
mov
dec
stc
test
out
scas
mov
ret
lahf
mov
inc
push
bound
xchg
or
xchg
test
mov
orl
pop
shr
jo
adc
jno
loop
icebp
jno
int
mov
push
in
and
stos
clc
jb
in
mov
shr
push
xchg
sbb
out
daa
cwtl
inc
lcall
pop
ficomps
aad
cmp
stos
xchg
mov
and
out
stc
or
mov
xchg
push
popa
scas
test
jg
xchg
loop
push
jmp
and
addr16
cmp
fsub
pop
test
xchg
lcall
aam
mov
mov
cmp
decl
sbb
or
jne
out
push
lea
xlat
ja
movsb
push
aaa
inc
or
lcall
adc
int3
cmp
mov
bound
jle
stos
mov
call
sbb
dec
and
cmp
xchg
aad
pop
or
subl
sub
imul
mov
dec
sbb
insb
mov
xor
stc
mov
push
xor
sub
loope
ss
cmp
dec
sub
cmp
pop
aas
insb
push
or
outsl
ja
stc
rorl
ja
adcb
adc
fsubl
xchg
lea
cmp
or
cmpsb
dec
xor
aas
cmp
ret
icebp
jns
pop
fldenv
ds
test
mov
cmp
mov
enter
push
pop
xchg
sub
in
inc
sbb
js
int3
add
outsl
fstpt
mov
adc
psrad
scas
mov
add
lods
mov
fwait
mov
push
insb
pop
imul
and
or
mov
pop
cmp
cmpsb
in
ficoms
push
mov
jbe
cli
mov
push
fucom
stc
int
arpl
pop
call
jns
cli
std
jbe
dec
das
scas
in
inc
mov
insb
dec
jg
mov
out
mov
popf
rclb
cmp
push
sub
inc
aas
xchg
ret
xor
call
adc
mov
adc
dec
leave
sub
dec
mov
std
sub
lds
push
or
inc
mov
mov
push
imul
aam
sbb
pusha
mov
test
inc
pop
mov
out
call
sbb
lods
rol
leave
mov
jp
bound
pop
dec
stc
jge
xor
xor
jmp
cwtl
mull
jno
and
dec
sub
iret
push
fstpl
push
in
nop
xor
out
fwait
insl
xor
push
xor
pop
aaa
sbb
add
shll
jecxz
push
dec
aad
nop
jb
jb
ret
pop
inc
cmp
pop
inc
aas
and
pop
icebp
inc
stos
jbe
addr16
pop
out
pop
jno
movsb
imul
push
pop
push
and
icebp
dec
ljmp
sub
int3
orb
hlt
js
mov
push
jg
jnp
pop
and
jbe
mov
aas
shll
test
sbb
data16
shrl
hlt
mov
or
push
gs
dec
ret
and
lret
mov
arpl
lret
pusha
aaa
cmp
mov
ss
or
jno
sbb
cmp
cltd
repnz
out
insb
mov
inc
jg
cmp
fbstp
and
jne
sti
pop
popf
inc
sahf
out
sub
aaa
stos
push
dec
xor
bound
inc
jl
pop
adc
xchg
popf
push
inc
lret
orb
sahf
dec
or
adc
in
jle
xchg
dec
dec
add
push
push
aam
sbb
mov
movb
adc
leave
int
xchg
clc
int
pop
mov
mov
push
push
jae
aam
dec
cmp
addr16
push
ret
push
daa
cmpsl
addr16
pop
mov
fcomp
lret
sub
hlt
pop
rolb
fsubrp
adc
addl
cmc
out
xchg
fs
and
or
out
hlt
xor
pop
aas
pop
add
mov
cmp
addr16
inc
lea
xor
clc
outsb
inc
xchg
sti
lock
adc
push
mov
or
btr
stos
push
pusha
imul
push
sbb
add
push
dec
mov
and
mov
nop
xchg
popf
vrcpps
sub
nop
sub
movsl
add
pop
inc
jecxz
xor
fbstp
pop
or
cmp
shrb
fwait
inc
and
pop
mov
or
nop
sahf
add
dec
inc
fsubr
fidivl
ss
pop
into
jge
cld
mov
in
fs
out
in
scas
push
clc
push
mov
lea
fcompl
int
imul
push
repz
inc
in
clc
xchg
rclb
test
not
pop
fnstenv
or
repz
adcb
popf
sbb
ljmp
or
sub
pop
mov
ja
xor
add
test
inc
movsb
stos
mov
and
jge
xchg
add
out
outsb
nop
icebp
pop
pop
nop
cmp
push
mov
jne
adc
xchg
divl
xchg
xchg
mov
ss
inc
pop
inc
icebp
adc
loopne
push
push
add
dec
push
push
mov
dec
xchg
js
idivl
movsb
sbb
test
inc
test
cmp
mov
in
xlat
je
outsl
stc
mov
inc
adc
or
lret
jg
loop
sbb
iret
test
ret
mov
movsb
dec
je
add
mov
xchg
mov
inc
pop
popa
mov
xlat
aam
mov
jns
sbb
int3
js
lahf
cwtl
in
pusha
sub
xchg
adc
out
adc
sbb
std
and
jp
pop
ret
je
mov
push
push
cltd
mov
xor
subb
bound
mov
or
jb
mov
xor
imul
in
inc
std
jle
popf
add
and
sub
mov
or
xor
or
mov
or
mov
loopne
testl
rorb
mov
push
out
or
inc
jns,pn
sbb
faddl
ficoml
insb
mov
xor
pop
js
in
add
pop
or
mov
ss
mov
ds
mov
sub
mov
and
mov
jp
out
popa
jo
daa
int
lcall
inc
movsl
in
adcl
inc
cmpsb
cmpl
frstor
test
push
and
sub
mov
xchg
cmp
mov
pop
adc
stos
fcoms
inc
sub
pop
in
sbb
push
into
mov
dec
or
test
inc
adc
and
iret
pushw
clc
mov
rolb
cwtl
adc
movsl
mov
cmpl
cs
pop
js
jo
mov
int3
and
ret
dec
jb
sub
push
sbb
aam
lea
fst
inc
dec
repz
dec
pop
scas
fildll
fstps
and
pop
xor
adc
cli
mov
imul
popf
int3
cmp
jg
mov
mov
loope
jmp
inc
and
scas
cs
movl
add
ret
or
ret
xor
add
ret
and
lcall
int
jnp
inc
loopne
out
test
ja
jmp
jne
scas
add
imull
rcll
xchg
bound
call
icebp
jns
sti
adc
imul
stc
push
push
in
jo
jp
push
and
fwait
popf
sbb
push
xor
lcall
adc
mov
in
int3
push
fs
pop
and
test
push
xchg
and
push
cmpsl
lcall
sbb
sbb
popa
aad
cltd
or
push
jne
pop
fcmovnu
pop
rolb
add
nop
dec
mov
jne
adc
mov
lahf
lret
xchg
shrb
inc
sbb
add
jecxz
outsb
sbb
xor
cmp
xchg
push
inc
rcr
dec
xor
test
inc
cmp
adc
fnstsw
cmp
xor
xchg
cld
jle
test
jecxz
push
dec
sub
rorb
inc
pop
test
mov
mov
push
cmp
cmpsb
cld
stos
arpl
adcl
xor
ljmp
cld
call
mov
repnz
push
icebp
sbb
jo
jae
add
jns
in
push
hlt
pushf
pop
pusha
loop
mov
ja
aaa
sub
dec
adc
sbb
push
sbbb
rorb
and
out
xchg
push
xchg
jnp
movl
ds
push
jge
dec
shlb
adc
or
and
xor
dec
xor
pop
xlat
sub
mov
int
adc
jecxz
inc
and
popf
cmp
mov
cmpsb
cwtl
in
xchg
sti
sub
jp
xor
sti
sub
aaa
jle
pop
inc
cmp
pop
test
lods
add
push
mov
hlt
jecxz
sub
sahf
repz
mov
test
pop
rolb
xor
xor
imul
push
cmp
mov
jb
mov
imul
pop
fldl
ret
push
push
mov
popl
mov
jecxz
mov
outsb
jb,pt
loop
dec
xor
mov
cmp
inc
cmp
jg
push
mov
sbb
xchg
xchg
mov
mov
pop
fwait
add
in
pop
int
in
inc
cmp
test
lahf
enter
xor
push
jnp
pop
xlat
notb
into
iret
jnp
xchg
jae
repz
mulb
xchg
mov
in
and
imul
fsubs
fwait
inc
or
pushf
lret
je
sbb
xor
rcrl
pop
lahf
mov
sahf
insb
sbb
dec
pushf
insw
jae
mov
lcall
xchg
in
dec
ret
mov
cmp
cld
outsl
or
pop
stc
shr
inc
add
gs
add
sub
or
dec
xchg
mov
add
jp
lahf
and
inc
add
out
adc
call
mov
leave
int3
loope
scas
mov
or
cmpsl
push
jp
movsb
cmpsb
xlat
in
pusha
and
es
in
or
dec
inc
idivl
mov
lock
jns
sub
ret
lock
fidivrs
mov
mov
add
sbb
mov
pop
or
or
sub
mov
cmp
test
add
xchg
inc
pop
std
addr16
les
rcrl
and
insb
push
sub
xor
dec
jb
push
inc
fsubrl
cmp
in
jecxz
xchg
lods
add
add
lfs
je
out
and
lret
lret
adc
pusha
test
jo
sarb
xchg
dec
cs
push
jne
adc
push
xor
js
les
test
sub
movsb
push
push
pop
mov
outsl
add
xchg
lret
jp
jge
outsb
and
outsb
and
sbb
jmp
dec
xor
jl
jmp
gs
and
jecxz
out
gs
adc
js
mov
das
xor
insl
enter
mov
int3
or
dec
into
mov
adc
test
adc
push
or
das
add
pusha
fiaddl
pop
push
push
lods
fcomps
jle
lods
jnp
dec
pushl
mov
rcll
dec
outsb
push
inc
jmp
cmc
sub
cmp
mov
mov
xor
inc
pushf
jb
loope
jne
lret
sbb
mov
dec
dec
mov
lea
or
sub
sbb
mov
and
lea
lahf
into
stos
bound
mov
and
mov
push
gs
idivb
mov
or
mov
div
test
leave
and
sti
cmp
call
inc
push
push
or
or
add
test
push
jge
test
inc
enter
test
xor
loopne
pop
addl
and
jle
clc
out
hlt
out
nop
and
mov
add
cmp
push
xchg
daa
pop
mov
imul
inc
sub
dec
add
or
mov
stos
sub
jnp
les
cwtl
push
test
fldt
jp
jb
cwtl
dec
hlt
lret
es
mov
sub
cli
into
rol
mov
mov
shll
in
push
push
cltd
cwtl
jmp
mov
sbb
mov
out
pop
hlt
and
xchg
cmp
pop
icebp
jo
pop
dec
sbb
cmpl
imul
inc
xchg
and
jo
sub
mov
loop
inc
aam
mov
jne
inc
lahf
fadd
cmp
cmp
sub
test
outsl
jne
fs
xchg
fsts
mov
pushf
inc
adc
jp
xchg
lret
push
cmpsl
rcll
jecxz
mov
mov
cwtl
mov
mov
pop
fisubrs
xchg
pop
and
fldcw
loopne
rclb
xchg
xor
jne
cmp
sub
mov
clc
mov
sub
xor
frndint
addr16
or
stc
lods
sub
or
cmc
pop
jo
call
sub
cmpsb
fsts
xchg
cli
jg
mov
mov
dec
ficoms
addl
out
popa
lods
es
mov
xor
outsl
fistl
jnp
je
fisubrl
push
call
or
mov
scas
stc
push
movsl
in
sbb
dec
out
cmp
xchg
mov
mov
inc
fidivl
sub
outsb
in
pop
add
aaa
nop
xchg
iret
mov
into
mov
mov
sub
imul
pop
mov
fstl
add
cmp
sbb
xchg
mov
add
mov
jo
cli
scas
dec
jb
mov
push
cli
aam
xchg
lock
xlat
into
xchg
fiaddl
fcmovb
bound
xor
daa
subl
xchg
jo
inc
cmc
xor
enter
cmp
insl
lock
lods
rorl
mov
xchg
adc
lret
xlat
scas
cmovne
cs
push
outsl
jae
dec
mov
mov
pop
dec
jno
inc
js
into
aas
jg
pusha
cmp
out
pop
cli
call
sub
icebp
popf
mov
aas
xor
call
mov
inc
mov
leave
push
adc
push
adc
xchg
fs
int
push
lahf
and
outsl
mov
movsb
mov
sub
mov
jl
adc
mov
lock
stos
xlat
mov
sahf
mov
jnp
sbb
loop
mov
fldt
pop
jo
cmpsl
cli
addl
xchg
push
adcb
movsbl
hlt
pop
jne
movsb
andb
cs
loope
lods
imul
adcl
inc
test
icebp
pop
mov
cltd
pop
mov
xchg
cmp
inc
mov
int
int3
rcrl
sbb
cmp
push
aam
mov
xchg
mov
orl
dec
idiv
aad
sbb
mov
adc
mov
ret
sub
inc
repz
in
popa
push
pop
add
inc
test
lret
clc
jle
add
xor
cld
or
stc
cld
mov
clc
inc
mov
push
fs
sbb
fistps
je
lods
xchg
cwtl
frstor
int
ss
rcrl
and
out
cmp
cmp
pop
pop
in
pop
movsb
mov
cltd
mov
movsb
pusha
test
cmp
scas
push
dec
xchg
orb
out
mov
xor
inc
sbb
ja
mov
mov
mov
sub
xchg
xor
sbb
sub
iret
rorl
lock
cmp
fsubr
mov
jnp
mov
insb
lret
aam
mov
cmpsb
xor
rcrb
testb
pop
into
ret
or
adc
cmp
xor
mov
les
add
adc
lock
pop
xchg
in
ds
rcll
nop
cmp
push
lcall
addl
pop
mulb
jl
scas
sbb
cld
pop
call
js
sbb
icebp
lods
in
repz
sub
mov
jno
mov
xor
push
mov
xlat
data16
mov
push
xor
or
je
jl
cmp
aam
jg
cli
aas
sub
aad
pop
daa
fsubrs
push
mov
and
addr16
daa
cmp
lock
xchg
pushf
aaa
into
xchg
inc
icebp
xor
dec
das
out
std
iret
iret
jne
aaa
enter
out
push
jno
mov
sarl
out
ror
dec
jnp
stos
outsl
pop
insb
pop
jp
sub
imul
mov
xchg
aad
test
xor
and
lahf
push
jg
rol
mov
push
mov
xchg
xchg
push
inc
pusha
xchg
lret
lret
fmull
mov
nop
add
or
dec
push
push
jecxz
gs
mov
xor
int
lock
out
lahf
bound
scas
loope
sahf
inc
and
push
and
hlt
xor
push
adc
mov
jno
fistl
inc
and
cmp
lahf
pop
add
xchg
jmp
fstpl
mov
out
test
fsts
push
pop
inc
sbb
sub
dec
out
xchg
insb
add
sbbb
mov
xor
sub
sub
out
adc
mov
in
or
jnp,pt
xor
push
loop
inc
jae
dec
in
cmp
xchg
ljmp
icebp
outsl
mov
data16
or
pop
xor
in
mov
mulb
sbbl
sub
jp
sub
jl
ja
xlat
push
xor
js
xchg
ds
jg
sub
pop
jae
adcl
jbe
in
xor
es
inc
das
mov
mov
mov
leave
mov
mov
in
out
popa
or
xor
outsb
xchg
or
dec
lret
inc
push
call
popa
xlat
and
push
std
push
jmp
ds
fcompl
hlt
adc
movsb
pop
jg
insl
fcomps
xlat
jg
rclb
pop
sbb
fwait
cmpsb
push
mov
icebp
rolb
jge
into
hlt
fs
inc
add
dec
inc
mov
pop
xchg
cli
xor
pop
es
fadds
into
dec
test
jb
lahf
cmp
sbb
lock
sub
adc
lret
fwait
into
mov
inc
push
insb
leave
mov
rorl
test
mov
lock
sub
mov
ja
and
xchg
pop
iret
cmp
mov
andb
push
dec
insb
mov
sti
hlt
ss
dec
adc
add
ja
scas
mov
pop
rcr
lods
push
iret
icebp
int
loope
rcr
inc
dec
inc
lea
test
sarl
shrb
fildl
aam
xor
les
jns
nop
xchg
jl
and
xchg
cmp
mov
mov
jp
cmpsb
out
sbb
or
adc
std
ja
in
stos
jmp
stos
mov
sub
mov
cwtl
lahf
jmp
sbb
xchg
ficoml
je
pop
das
in
inc
insb
adc
out
loop
push
add
lret
pop
arpl
mov
and
idivb
aam
jmp
inc
sbb
les
mov
notb
mov
bound
arpl
mulb
push
lea
add
fcmovnbe
in
test
push
shll
cwtl
adc
sub
leave
rol
fstpt
mov
lds
lret
xor
leave
xor
pushf
out
mov
imul
orb
lods
inc
adc
in
scas
mov
and
mov
add
cmp
jno
out
mov
mov
sbb
push
aas
push
sub
hlt
fdivr
add
mov
scas
out
movsb
push
add
xor
adc
mov
dec
xor
xchg
popf
xchg
imul
mov
adc
inc
adc
jnp
lods
add
sbb
or
lods
dec
adcb
rclb
call
jg
push
jmp
stc
push
incb
sbb
mov
cmp
add
stos
call
mov
cmp
add
xlat
dec
int
push
cmp
fildll
sub
outsl
bound
dec
jecxz
loopne
mov
inc
and
mov
int3
pop
dec
xor
adc
leave
xor
rcrl
dec
inc
mov
divb
push
pop
mov
aaa
or
push
pop
popf
or
dec
sti
sbb
loopne
sbb
jo
and
adc
aas
adc
mov
fistpl
scas
add
or
sbb
sbb
pop
fisttps
cmp
add
jle
std
pop
fs
popa
idiv
out
sub
pop
sub
dec
xor
pop
out
ret
popf
mov
or
lock
xchg
mov
ret
mov
sbb
clc
sub
shlb
cmp
jno
xchg
stc
inc
push
and
je
loop
or
adc
insb
pop
les
add
imul
sub
add
aam
jno
scas
test
stos
push
inc
push
stos
stos
pop
fmull
js
sti
xchg
mov
in
fwait
hlt
out
mov
fwait
inc
cmp
sti
inc
in
and
dec
fyl2xp1
ljmp
fsubrl
jl
push
sbb
sub
push
adc
bound
movl
adc
jno
or
popa
mov
mov
mov
inc
jg
inc
imul
or
and
mov
aaa
shrb
jo
addr16
imulb
adc
das
add
cmp
push
inc
loopne
insb
out
jnp
mov
pusha
test
mov
jmp
add
mov
call
jecxz
loop
pushf
mov
ss
push
mov
nop
mov
mov
xchg
xor
shrl
push
add
sbb
adc
xorb
out
dec
cld
pop
mov
das
push
stos
jbe
jl
jno
mov
out
into
andb
mov
jo
call
fidivl
scas
mov
shll
out
bound
addl
mov
scas
test
sbb
push
test
hlt
inc
subl
test
jns
fimull
lods
jp
or
adc
rcrl
test
sbb
mov
dec
mov
mov
push
sub
js
adc
pop
xchg
bound
out
int
mov
mov
cmpb
enter
cmpsb
out
and
popa
sti
outsb
jnp
mov
addr16
loopne
sbb
push
subl
jle
imul
dec
or
push
xchg
mov
xor
adc
add
pop
fldl
insl
rcrb
stc
ds
outsb
push
lret
inc
stos
sarb
sbb
cmp
push
jae
sub
push
jmp
insb
dec
das
push
pop
nop
pop
pop
push
sub
rorl
dec
push
in
xchg
inc
lret
fmulp
and
jo
aam
outsl
and
push
les
add
inc
push
pop
imul
push
movsl
ja
pusha
fmul
xor
insb
inc
xor
mov
push
les
mov
or
add
pop
nop
clc
sarb
mov
xchg
pop
ss
sbb
sub
leave
jge
sbb
adc
inc
mov
adc
sub
xchg
fwait
push
adcl
rclb
stos
ret
push
setle
or
das
lds
or
jmp
mov
call
mov
mov
fldl
pop
jnp
jecxz
scas
clts
loop
inc
or
shl
xor
adc
adc
push
xchg
lods
insl
scas
adc
add
adc
add
mov
jo
out
inc
mov
pop
and
in
inc
repz
mov
dec
icebp
push
movsl
xchg
popf
sbb
rclb
push
aam
aam
jl
fiadds
jl
popa
pusha
adc
sbb
adc
clc
xor
mov
aam
adc
fs
icebp
popa
dec
jecxz
es
inc
shl
and
nop
lahf
ret
in
mov
sbb
aas
pusha
mov
in
xor
inc
xchg
sbb
fbld
data16
je
popa
insb
fs
sbb
xchg
lahf
jmp
pop
cwtl
imul
sub
je
js
xchg
rcll
jp
dec
sub
dec
mov
decl
inc
jns
lods
jmp
roll
scas
and
cmp
icebp
loope
add
mov
iret
pop
adc
jmp
mov
add
ljmp
jg
add
and
mov
or
adc
ja
repz
and
sbb
dec
mov
pushf
dec
mov
test
addr16
lock
ja
arpl
inc
xchg
imul
cmc
mov
scas
xchg
test
mov
leave
ja
adc
fisubl
sbb
test
fwait
ss
cld
mov
and
xchg
ret
ds
cmpsl
adc
push
aam
jbe
pop
mov
movsb
outsl
or
xchg
adc
push
dec
dec
andb
sbb
xor
push
in
mov
or
ss
rorl
and
stc
mulb
fs
call
enter
xor
adc
or
cmp
cmp
add
sub
dec
mov
out
or
sbb
jnp
pop
mov
inc
test
rolb
rcrb
mov
xchg
cwtl
push
arpl
mov
add
mov
clc
add
mov
roll
aas
jne
mov
pop
sbb
mov
and
rcrl
xchg
sbb
cs
lret
movsl
icebp
or
in
pop
loope
pop
push
mov
push
movsl
enter
inc
or
aas
add
or
aaa
sar
xor
pop
test
imul
enter
xor
pop
andb
push
adc
aas
inc
ret
inc
mov
lahf
dec
ficoml
out
xlat
lea
jmp
ss
andb
cmp
neg
mov
out
sbb
and
mov
adc
xor
lcallw
adc
cli
jge
sbb
push
ret
js
nop
or
jno
nop
cmp
and
stos
ds
insb
jp
aas
push
push
pop
icebp
dec
sbb
cmp
mov
xor
jns
dec
xor
inc
sub
and
mov
negb
fbld
push
pop
push
loopne
lds
dec
inc
and
jb
jmp
xchg
inc
jne
out
push
fsubs
xchg
pusha
stc
aas
int
test
aad
sbb
xor
in
cmc
flds
testb
not
and
push
mov
sub
fdivr
sub
sahf
aas
adc
movb
ficomps
and
jb
xchg
or
jo
inc
ds
cmp
lcall
xor
les
rolb
incb
in
filds
ret
and
clc
mov
xchg
mov
jo
aas
mov
mov
cmp
or
push
out
and
mov
in
jno
lock
adc
xchg
mov
lcall
mov
jge
cmpl
sbbb
nop
cmpsl
add
mulb
inc
push
or
mov
dec
add
jae
xor
int
inc
add
scas
jb
sub
xor
ss
jnp
adc
dec
adc
insb
sbb
stos
xor
js
insb
pop
insb
add
std
xor
insl
call
push
cmpsl
repz
cli
in
add
xchg
sbb
xorl
inc
jno
ljmp
and
cltd
ljmp
mov
sahf
push
js
cli
jecxz
in
inc
cmp
push
mov
ficompl
inc
ret
or
aaa
sub
ret
ljmp
movhlps
push
ret
nop
mov
daa
xor
pop
mov
fnstsw
movsb
inc
jae
not
sbb
fcompl
xchg
pushl
pop
sub
das
push
stos
es
bnd
not
dec
gs
mov
popa
sub
and
inc
lds
lret
inc
popl
push
add
push
inc
clc
pop
add
stos
adc
adc
imul
adc
fwait
sub
xchg
cmp
test
adc
sbb
pop
hlt
inc
xchg
or
adc
sbb
xchg
outsb
fcompl
cmp
fdivp
xor
out
push
outsl
sbb
cmp
call
rcrb
push
in
add
sbb
aas
shr
dec
inc
sbb
inc
and
iret
dec
cmp
mov
inc
pop
mov
cmpsl
or
cltd
jne
pop
sbb
jmp
xor
cmpsb
sbb
and
testb
fwait
mov
sbb
mov
push
xchg
cs
jbe
popf
sub
push
add
repz
xlat
loop
aaa
mov
inc
daa
mov
xor
fwait
cmc
adc
imul
es
std
inc
push
dec
sub
mov
mov
dec
les
in
mov
push
dec
dec
jb
pop
fsubr
pop
push
ret
mov
in
in
iret
and
jle
out
std
es
dec
data16
cwtl
insb
mov
fstpl
xchg
sub
insl
addb
cmpsb
cmp
in
shll
loopne
fs
nop
frndint
daa
jb
lea
and
fldt
inc
jp
pop
cmc
rclb
insl
rcrl
stos
sbb
mov
mov
repnz
aas
movsl
cmc
sti
xchg
scas
sahf
lock
stc
inc
jno
and
jbe
insb
push
stc
outsb
pop
enter
cmc
cwtl
lds
cltd
ret
mov
or
xor
and
addr16
cld
mov
or
test
adc
and
pop
push
adc
test
cmp
fdivrs
test
jl
add
push
xchg
scas
cld
lcall
out
mov
mov
sub
lcall
push
das
jmp
xor
pop
insb
jb
xor
push
ret
enter
fstl
cmp
popa
pop
xchg
xor
cmp
xchg
jge
cmc
fsts
lret
sbb
xor
or
fwait
dec
lea
and
fsubl
sbbb
mov
xor
jge
lret
push
scas
or
fs
aaa
in
popf
mov
lcall
sub
das
ret
inc
shlb
or
push
movsl
and
sbb
fwait
inc
lds
push
or
cld
in
fmuls
lods
outsl
inc
mov
mov
test
out
pop
mov
mov
dec
mov
ljmp
mov
mov
add
sbb
sub
mov
sar
xchg
xchg
inc
out
or
xchg
int3
add
fldcw
sbb
mov
push
dec
sbb
xor
xchg
cwtl
mov
lods
ds
mul
mov
and
push
xchg
xlat
out
cmp
xchg
movsl
repz
loop
and
gs
pop
loop
fwait
xchg
aam
adc
fwait
xchg
std
insl
out
arpl
pop
add
vpmaddwd
or
pop
cmpl
jge
jle
sahf
imul
jp
jae
mov
pop
aam
xor
sbb
scas
std
jne
repnz
in
pop
out
sbb
stos
fsubrs
cmpsb
xor
pop
push
int3
xorb
aad
pop
cmp
popa
popa
mov
rcrl
mov
lds
xlat
into
or
in
mov
popf
xor
xchg
jecxz
and
jmp
push
inc
push
pop
xchg
lock
xor
or
jne
insl
aam
imul
jnp
popa
xlat
fstl
js
jmp
jge
mov
push
cmp
fcoms
sub
push
pop
inc
xrelease
in
jge
orb
fwait
lahf
mov
scas
jb
out
sbb
and
in
dec
cmp
sti
pusha
jnp
arpl
neg
jp
push
stos
xchg
jge
sub
jle
add
mov
cmpsl
jle
pop
mov
ja
je,pt
mov
cmpsl
pop
fisttpl
jp
xor
xchg
push
cmp
push
and
shlb
call
icebp
ljmp
fisttpll
aaa
lret
ret
mov
cwtl
pop
cmp
ret
dec
sarl
jno
call
mov
scas
sbb
mov
sub
je
cmp
repnz
mov
ret
cmp
shl
fstpl
aaa
mov
cmp
xor
fwait
loope
push
jmp
bound
popf
mov
lods
test
daa
sub
and
sbbb
shrl
pop
arpl
dec
lret
dec
repz
js
popa
testl
pop
repnz
add
and
xor
mov
dec
insb
insl
push
sbb
jb
lret
mov
sub
jl
shrb
dec
inc
push
shrb
test
out
les
cmp
inc
cmp
jbe
sbbb
xlat
stc
inc
add
negb
loope
imul
and
xor
push
leave
mov
jge
mov
pop
popf
add
sub
loopne
mov
mov
jmp
fldenv
icebp
dec
shll
loopne
bound
rolb
scas
pop
push
int
popf
cmp
mov
popl
movntps
shl
pop
cmp
cmc
push
out
mov
out
popa
clc
and
push
js
ja
mov
add
dec
sub
clc
pop
push
cltd
push
inc
xlat
mov
pop
mov
shlb
pop
push
and
popf
sahf
clc
add
push
push
out
ret
clc
testl
push
jmp
dec
mov
and
xchg
ret
mov
sti
inc
sub
push
jmp
sbb
mov
dec
loope
push
cs
mov
xchg
ja
jp
adc
fs
jbe
push
push
jbe
xor
mov
int3
pop
mov
filds
sahf
sbb
dec
jg
std
or
adc
and
add
jmp
fcmovnb
sti
jno
hlt
out
xchg
pop
pop
repz
add
pop
cltd
ss
jo
test
add
mov
iret
flds
xchg
cmpsb
out
arpl
in
adcb
shlb
lods
or
adc
ss
movsb
imul
adc
aam
cmp
movsb
jnp
xchg
cmp
mov
sbb
pop
cmpsl
loope
add
outsb
rcrl
dec
scas
icebp
cs
mov
insl
repnz
ret
push
stos
xchg
in
test
mov
fildl
outsb
dec
sbb
push
loop
addl
mov
mov
je
outsl
sub
xchg
loop
jae
and
sub
push
data16
or
lea
sbb
data16
mov
pop
outsl
cltd
xor
stos
test
xchg
jbe
scas
sub
outsb
xchg
xchg
imul
sahf
mov
cmp
push
add
leave
enter
into
sahf
push
rcrl
in
sub
lahf
pop
fcompl
push
push
js
add
or
outsb
sbb
addl
das
popf
push
lret
adc
xchg
add
cmp
pop
lcall
std
sti
fimuls
lock
lock
jl
test
mov
mov
out
shll
lock
loopne
fstp
pop
fcompl
enter
sahf
xchg
push
pop
jle
jg
test
js
push
mov
idiv
xor
arpl
sbbl
mov
cltd
fidivs
inc
ja
pushl
jno
popf
sbb
add
mov
fisubrl
es
repz
mov
add
fistpl
sahf
xor
and
int3
data16
out
adcl
xchg
leave
shrb
lahf
cmpsb
xchg
sbbb
xor
rcrl
test
shl
test
add
pop
addl
inc
sub
insb
pop
bound
pop
inc
mov
xchg
mov
jge
add
cmp
aas
jl
dec
je
js
out
adc
mov
aam
push
bound
mov
and
lea
jae
icebp
pusha
cmp
inc
out
stos
in
hlt
pop
jp
movsb
and
xchg
jb
or
lods
cli
lods
mov
mov
jecxz
mov
jle
addr16
rorl
es
push
cmc
movsl
test
imul
jo
stc
add
ret
aam
rolb
ss
inc
push
shrb
es
cmpsb
ret
enter
addr16
xchg
xor
sbb
scas
pop
cmpsb
icebp
sub
mov
xor
iret
dec
mov
rcrb
sbb
dec
test
sbb
nop
iret
dec
sub
jno
and
adc
pop
popf
cld
fcomps
jbe
jns
dec
rolb
and
sub
test
roll
push
mov
push
cmc
xchg
daa
dec
fsts
jmp
out
lret
mov
cmpsl
sahf
lcall
jbe
or
push
dec
xchg
push
pop
xor
sahf
loope
dec
mov
sahf
add
mov
int
mov
pop
mov
adc
lock
sub
lret
aam
stc
dec
jo
push
inc
into
sub
test
jl
pushf
stos
fsubrl
insl
pop
ret
sub
loope
in
hlt
dec
mov
dec
jb
shr
loop
in
sbb
dec
loop
mov
or
xlat
adc
repnz
in
add
ja
jle
pop
sti
inc
test
sbb
pop
clc
mov
jp
lds
mov
ret
rclb
dec
inc
insb
out
or
lret
or
ds
adc
sbb
enter
ja
cmp
jmp
ret
lock
mov
mov
dec
ljmp
or
push
stc
push
pop
pushf
std
mov
popa
divb
lret
adcb
mov
sti
cmp
sbb
bound
out
jns
inc
clc
xor
ret
add
push
insl
jl
data16
int
sub
mov
cmpl
int3
lods
inc
pop
inc
in
sbb
push
insl
jb
pop
nop
or
imul
cld
lcall
icebp
je
mov
jecxz
or
mov
xchg
aad
repnz
pop
iret
xor
push
loopne
daa
adc
or
or
mov
or
cli
pusha
stc
imul
in
outsb
testb
in
sub
and
ror
xchg
mov
pop
jbe
fldt
xchg
sbb
mov
xchg
xlat
stos
leave
lods
mov
sti
xchg
cmc
int3
or
sahf
arpl
arpl
in
data16
adc
or
lods
sar
in
jo
stc
pop
add
iret
mov
adc
into
lahf
inc
test
leave
clc
inc
dec
fs
or
cltd
lahf
fmuls
int
xor
xchg
cmp
fadd
idiv
mov
cltd
xchg
mov
inc
bound
insb
xchg
inc
push
push
push
mov
fstps
jge
sub
divb
pushf
lcall
inc
mov
jecxz
pop
lahf
dec
test
jmp
fstl
sub
push
cmpsl
inc
push
mov
incb
icebp
push
test
stos
mov
mov
shr
aaa
xor
mov
xor
push
pop
ja
add
mov
jecxz
not
add
sarl
xor
pop
repnz
mov
add
mov
pop
lahf
in
mov
outsb
popa
mov
xchg
pusha
imul
pmaxsw
push
jbe
bound
std
fwait
pop
ljmp
push
sbb
leave
push
add
data16
jp
push
push
or
mov
aam
push
pop
jge
inc
loopne
scas
adc
out
ret
inc
push
pop
loopne
stc
xchg
cmp
pop
ja
inc
add
xchg
cwtl
aaa
jns
sahf
pusha
hlt
xor
das
sub
mov
mov
movsl
dec
lret
jl
push
jp
stc
test
fwait
xchg
bound
dec
inc
aas
fistl
mov
out
scas
mov
subl
jge
leave
and
outsb
dec
xchg
sub
testb
jbe
xor
sbb
in
pusha
stc
sub
xor
jns
cli
push
testl
lahf
and
and
stos
jmp
push
inc
stc
lea
shll
mov
pop
lds
cmp
xchg
insl
idivb
xchg
jge
imull
ret
hlt
ret
imul
ljmp
mov
cmp
jb
add
xor
scas
adc
sbb
mov
loopne
xchg
add
addr16
iret
cld
ja
and
mov
cmp
cltd
xor
fcmove
cltd
mov
inc
xor
adc
subl
adc
cmpl
xchg
jmp
testb
in
daa
lods
test
imul
jne
inc
or
add
xchg
jnp
push
jnp
push
cmpsl
lock
shll
test
stos
pop
lahf
push
cmp
mov
in
in
imul
out
shrl
inc
xchg
add
add
xchg
xchg
mov
jp
aas
out
dec
sbbl
mov
mov
sbb
popf
and
shlb
arpl
imul
adc
push
insl
sbb
sub
pop
mov
and
adc
test
push
add
sbbb
add
sub
or
pop
and
pop
popf
test
xchg
push
test
arpl
repz
fbstp
inc
jl
dec
cmp
sub
mov
sahf
addl
enter
mov
lret
cmp
mov
cmp
or
std
cmp
add
shlb
sbb
test
sbb
scas
jno
in
fidivl
aaa
out
mov
fsubl
daa
das
loope
sbb
sub
lret
in
xor
fisubs
push
and
out
js
pop
add
pusha
mov
jnp
divl
dec
inc
mov
aad
lea
sti
add
out
sub
lods
test
movsl
mov
sub
dec
push
adc
inc
lea
repz
aad
imul
enter
in
lods
je
out
shll
test
adc
lock
mov
movsb
xchg
fs
rcrl
sub
xor
sbb
mov
cmp
daa
jb
mov
xor
jl
fildl
push
xor
sbb
sti
sti
imul
inc
stos
cmc
aad
and
lods
shl
sub
add
test
movsb
sbb
cmpl
stos
data16
iret
cmpsb
xor
rolb
sub
add
or
and
adc
jne
push
repnz
das
xor
adc
sbb
xor
push
xlat
adc
xchg
mov
cmp
insb
iret
dec
fs
enter
stos
inc
outsb
mov
dec
repnz
and
dec
or
sub
fwait
rcr
sub
xchg
sub
inc
add
push
inc
jg
add
mov
sub
scas
add
xorl
int
jae
mov
sub
pop
xchg
fistpll
lds
adc
clc
mov
inc
dec
jbe
int3
cmp
push
pop
jns
out
cmp
pop
mov
into
or
ficomps
lock
mov
dec
dec
mov
fwait
mov
and
sbb
pop
fildll
or
mov
push
jl
xchg
popa
sub
mov
inc
push
or
scas
ja
or
adc
mov
inc
xor
lea
push
subl
inc
lahf
mov
dec
lods
daa
ds
jle
es
xchg
jle
push
fdivl
movsl
sbb
adc
jmp
jbe
cld
mov
push
cli
clc
add
dec
nop
ror
push
pop
xlat
popa
leave
imul
push
ret
inc
sbb
pop
stc
popf
xchg
mov
addb
dec
xor
into
push
lods
sub
inc
fwait
push
sub
fwait
xlat
lret
mov
js
outsl
fldln2
push
and
xchg
repz
stc
cwtl
loop
ror
dec
adc
test
nop
jp
nop
push
push
sahf
xchg
mov
outsb
jmp
xchg
ljmp
rorb
pop
and
stos
lods
and
xchg
xchg
mov
outsl
imul
in
loopne
inc
inc
adc
mov
mov
es
test
and
popf
mov
adcb
addr16
lret
outsb
lcall
scas
lods
call
inc
xchg
iret
test
mov
mov
adc
call
loopne
movsl
sbb
add
mov
xchg
jnp
dec
jns
sub
in
out
xchg
jle
cmp
jge
mov
mov
inc
or
inc
dec
mov
lock
mov
xor
jnp
inc
dec
andl
inc
sbb
in
push
mov
lods
rolb
mov
cmpsb
xchg
mov
std
ss
jp
sti
xchg
cmpsb
jo
movb
adc
enter
sbb
dec
cmc
add
pop
leave
and
ds
aas
dec
ljmp
scas
pop
jb
cmc
xchg
sub
cmp
jnp
and
fisubrl
movsb
test
mov
loope
xor
xchg
movsl
sub
out
mov
loope
mov
pop
lock
fidivrs
dec
mov
inc
inc
sbb
stos
mov
lret
push
add
cmp
pop
rorl
cwtl
mov
or
xlat
adc
push
or
stc
sbb
xchg
dec
das
nop
xchg
imul
sarb
decb
sbb
int
xor
shlb
test
jmp
js
or
test
pusha
das
cmp
jo
leave
dec
xlat
stos
push
ret
mov
sub
sbb
add
ret
pusha
mov
aas
inc
lock
dec
and
jae
lods
pusha
inc
fdivr
sbb
fs
shlb
and
imul
test
cmpsl
pop
cmp
cli
lahf
das
add
clc
push
out
aad
push
push
clc
fwait
jecxz
bound
sbb
cmp
or
sub
or
jae
pop
mov
xchg
aaa
cmpsb
data16
lock
sbb
adc
fwait
mov
lret
xor
push
jnp
jle
push
xchg
mov
sbb
xchg
mov
mov
xchg
out
into
cwtl
jbe
mov
jae
pop
ljmp
cwtl
cmpsb
ljmp
mov
push
mov
jmp
sub
ret
inc
movsl
cmp
sbb
cltd
insb
js
es
jb
sub
push
jbe
fwait
ljmp
pusha
push
xchg
lret
loop
loope
ret
inc
es
add
dec
stos
fs
jo
enter
cmp
push
cltd
sub
std
arpl
sbb
sbb
int3
scas
cli
cwtl
jg
adc
cltd
outsl
bound
push
sbb
mov
xchg
jmp
shll
mov
les
mov
add
jno
xor
mov
jbe
cmp
outsl
mov
pusha
fwait
ret
add
inc
pop
out
aaa
adc
outsl
cmp
push
shl
roll
imul
sub
loope
jbe
test
clc
stc
psubsw
pop
lock
imul
pop
outsb
or
fidivrs
pop
dec
jle
inc
add
stc
push
inc
push
xor
mov
inc
test
adc
mov
xor
mov
and
pop
xchg
dec
xor
cmp
mov
xchg
ret
into
inc
xchg
fdivrl
mull
sbb
mov
testl
in
dec
in
pop
mov
or
sub
clc
out
nop
mov
xlat
sbb
mov
fldl
hlt
jbe
sbb
clc
push
out
inc
loope
out
fwait
push
add
jae
jl
xlat
cld
loopne
pop
push
add
or
test
cmp
mov
shl
adc
push
and
cwtl
lods
dec
orb
rclb
push
ds
jg
rcll
dec
pop
inc
scas
xchg
lods
mov
xchg
pop
add
mov
add
outsl
xchg
fcom
pop
aad
inc
mov
fsubl
shrb
aas
adc
lods
ret
jecxz
xchg
mov
sub
jecxz
mov
push
inc
jb
pushf
popa
ret
les
jae
sub
mov
movb
mov
mov
push
dec
mov
jmp
repz
xchg
mov
sbb
mov
aaa
xor
das
add
add
ffree
push
jne
bnd
mov
push
std
mov
icebp
mov
push
int3
xchg
push
add
aaa
adc
adc
dec
into
nop
push
mov
and
inc
adc
jmp
xchg
aaa
insl
ljmp
bound
or
cli
outsl
aaa
cli
jl
dec
aad
or
and
lock
clc
and
popa
pop
push
aad
xchg
dec
outsb
pop
and
stos
add
dec
les
dec
or
data16
enter
faddl
pusha
push
outsl
and
popf
repnz
mov
sbb
orb
outsb
pop
daa
js
into
mov
mov
and
outsb
and
dec
cmpsl
or
pop
aaa
push
dec
test
inc
adc
sbb
add
test
sub
test
add
pop
jne
or
and
sbb
inc
jecxz
add
adc
insl
movb
cmp
and
out
mov
outsl
shr
mov
sbb
and
push
and
push
call
jp
mov
cmp
rcl
inc
cli
xchg
xchg
and
outsb
and
shl
cmpsb
mov
das
sbbl
pop
cwtl
popa
mov
imul
xchg
xchg
imul
dec
inc
mov
rolb
cmp
outsb
push
pop
dec
clc
fsubl
push
cmp
lahf
stos
adc
fcoml
mov
sub
cmp
cwtl
push
push
cvtps2pd
repnz
adc
add
gs
scas
pop
push
jno
std
dec
mov
out
jnp
mov
mov
dec
cli
inc
cmp
push
mov
mov
pop
jmp
and
xchg
add
nop
push
mov
clc
pop
test
adc
mov
test
cmp
mov
clc
inc
sbb
pop
mov
aas
gs
call
mov
jns
add
dec
sub
test
jnp
or
and
mov
std
cltd
xchg
arpl
popf
call
mov
add
mov
stos
mov
decb
and
or
repz
pop
mov
mov
icebp
cmp
pop
mov
or
sbb
and
sbb
in
repz
xchg
int
dec
mov
lods
inc
fidivl
hlt
push
lods
pop
aad
out
in
push
jae
pop
mov
popf
or
add
cltd
jge
fidivrl
mov
sbb
movsl
pop
jnp
outsl
aaa
imul
jo
sbb
ret
xchg
call
or
fsubl
jge
ja
push
les
jmp
in
stos
and
mov
test
inc
testb
inc
pop
hlt
adc
cmp
leave
xor
pop
add
aam
aam
js
push
in
jnp
or
xor
clc
shll
sub
dec
pusha
push
fmull
add
lods
push
inc
icebp
lcall
xchg
into
stos
sub
aam
and
icebp
jo
mov
or
push
jg
fwait
mov
add
add
fists
js
aam
cmpsl
sbb
xchg
clc
xchg
push
and
imul
jl
add
cmp
rclb
inc
xchg
int
clc
dec
push
hlt
sbb
outsl
ljmp
in
subb
mov
push
mov
add
lret
in
cmpsb
mov
jl
movsb
push
mov
xchg
das
inc
sub
jne
jno
jns
out
addr16
fs
pop
pop
fs
or
mov
outsb
inc
adc
ret
add
stc
fwait
sub
add
and
jmp
xor
fdivrl
scas
sysenter
arpl
in
xor
movsb
jne
cmpsb
xor
push
pop
cmp
lret
negb
lahf
adc
divl
lret
fisubs
in
jle
push
add
mov
mov
adc
in
push
mov
imul
xor
movsb
out
or
mov
and
push
es
mov
stos
lds
dec
test
xchg
hlt
cmpsb
pop
pop
lea
out
mov
mov
out
sub
sub
mov
mov
enter
pop
ljmp
pop
mov
xor
xorb
fisttpll
and
adcb
sbb
and
add
insl
imul
push
inc
ljmp
filds
xchg
sbb
repnz
push
in
sub
cld
push
adc
push
movsb
mov
ret
xchg
loope
push
std
jecxz
xor
add
xchg
xchg
push
mov
mov
std
adc
mov
nop
test
cwtl
jbe
add
dec
mov
jbe
cmp
sbb
std
xchg
iret
and
jle
enter
pop
push
je
cmpsb
xchg
jbe
mov
clc
jmp
mov
lea
imul
flds
ret
ja
aad
cwtl
rcll
mov
mov
cmpsl
jge
ss
mov
test
mov
mov
lret
bound
movsb
jmp
cwtl
and
into
or
loop
push
leave
fidivrs
call
pop
loopne
adc
enter
cmp
icebp
aam
std
test
ret
push
push
mov
cld
mov
xchg
jae
insl
or
or
scas
push
hlt
je
jnp
rclb
aas
adc
and
out
rcr
fs
jg
ficoml
sbb
mov
fwait
dec
mov
pushw
sub
cmp
jp
sub
jl
ffreep
mov
js
daa
scas
das
outsl
inc
jp
sbb
cmc
mov
iret
inc
pop
push
sub
test
xor
dec
adc
sbb
ret
sarb
lock
cwtl
jb
mov
lods
and
mull
inc
pop
stc
mov
add
rcr
addr16
xorl
mov
movsl
lods
stos
cs
ja
sti
mov
notb
or
shl
mov
iret
je
rorl
pop
mov
xor
rorb
dec
sbb
sub
lret
lock
sbb
fs
add
xor
adc
in
pop
jnp
sub
jne
xor
add
in
popf
scas
stos
jns,pn
cld
inc
cmpsb
es
test
hlt
and
dec
outsb
out
and
int3
movl
test
adc
jno
movsb
xor
aas
sub
in
rclb
lock
divl
into
pusha
push
push
mov
out
lock
das
dec
pop
loop
or
loop
xor
daa
pop
ljmp
inc
in
adc
scas
sub
les
sbb
dec
push
adc
leave
clc
sub
imull
sbb
ret
inc
gs
jbe
shl
and
cmp
stos
fbld
cmp
leave
mov
mov
jle
add
mov
xor
insb
out
daa
pop
jp
and
cwtl
arpl
sbb
add
and
lods
fbstp
cmpsl
rcrb
adc
js
aaa
mov
sbb
sbb
pushf
fidivs
dec
mov
nop
outsl
dec
cmp
xor
roll
das
pop
stos
sbb
push
cmc
iret
test
ja
aas
cmpl
adc
aam
pop
inc
mov
scas
repnz
xchg
add
in
out
pusha
push
repnz
push
xchg
fs
xchg
xchg
icebp
xchg
jns
test
out
sbb
xor
sbbb
adc
dec
pop
or
push
dec
or
rcrl
push
fsubr
push
cmc
inc
xchg
in
push
and
inc
repz
dec
add
divl
mov
lret
je
loop
jmp
inc
das
outsb
cld
xchg
mov
xor
xchg
dec
push
cmpsl
mov
adc
inc
cmp
sbb
lahf
sti
xlat
xchg
sub
pop
daa
and
out
dec
out
pop
push
and
fistpll
popa
in
or
push
incl
push
mull
sub
cltd
sub
inc
pop
sbb
xor
cs
aaa
inc
mov
dec
ss
adc
or
push
adc
sbb
xor
ret
lods
pop
scas
insb
mov
push
or
fcoml
add
es
mov
xchg
ss
lea
push
sbb
loopne
add
or
and
rorb
popa
pop
sbb
or
pop
sbb
or
xlat
test
jle
push
mov
cwtl
mov
arpl
inc
or
inc
adc
cmp
inc
mov
out
in
jns
out
inc
popf
sbb
adc
fmuls
jg
adc
ret
mov
in
mov
addr16
xchg
ja
xchg
fnstenv
f2xm1
cmp
inc
and
push
push
int3
scas
fldenv
test
aaa
and
daa
jo
in
mov
jnp
xor
pop
enter
mov
jo
mov
int3
shrl
mov
adc
mov
std
outsb
push
push
out
out
aad
insb
stc
je
pop
aaa
stos
mov
ds
inc
mov
arpl
gs
aaa
mov
push
outsl
icebp
add
jle
jle
xchg
rorl
dec
xlat
add
xor
xabort
and
std
pop
ret
add
pop
dec
cmp
push
aaa
lcall
mov
cmpb
inc
push
adc
imul
stos
pop
mov
mov
repz
jnp
shlb
xor
jle
push
das
mov
adc
popf
stos
mov
sbb
std
dec
jmp
or
in
loop
fwait
std
mov
stos
orl
sbb
ds
cmc
shrb
into
jo
mov
ljmp
mov
idivb
fnstsw
nop
lahf
call
ror
and
int3
sub
sbb
mov
xor
cmp
out
push
cmc
xor
lret
stc
in
dec
or
pop
sub
daa
cli
sahf
xor
rorb
add
int
loopne
add
and
repnz
outsb
test
mov
sub
mov
push
or
add
stc
and
lcall
ja
or
push
add
ja
mov
inc
ja
xchg
ret
sub
call
jge
push
test
js
mov
dec
pop
inc
add
mov
pop
loopne
xchg
icebp
cmp
mov
cmp
mov
jae
sub
xchg
out
xor
push
cmp
sub
or
nop
sbb
adc
adc
mov
dec
or
jno
imul
mov
arpl
notb
xchg
fwait
mov
repnz
sbb
mov
cs
leave
cmp
add
cmp
movsb
loope
cmc
add
lea
cmp
repz
aam
fnstcw
and
xchg
sub
cmc
int
push
movsb
mov
cmp
bound
push
adc
add
insl
inc
ss
push
jp
fs
cmp
mov
cmpsl
lds
in
and
sbb
lds
imul
mov
jg
daa
mov
dec
sbb
jg
pop
dec
dec
outsb
xor
xchg
lock
xor
in
ret
out
cmp
jge
push
mov
cmp
icebp
fistl
cmp
jmp
sahf
test
mov
jmp
cwtl
ds
pop
push
in
bnd
push
cli
jg
sub
jmp
icebp
jmp
lret
mov
call
test
adcl
loope
mov
jns
aaa
aad
daa
xor
fimuls
addl
fists
jnp
push
xchg
push
push
xchg
sbb
rclb
std
jnp
cmp
lea
sbb
int3
xor
cld
push
shr
test
push
leave
lret
sbb
dec
lret
cs
jge
mov
jne
pushf
inc
lods
call
pop
mov
sahf
adc
mov
adc
mov
xchg
cmc
jae
xor
divl
inc
pop
fildll
lods
xor
sahf
fisttps
pop
or
mov
add
ja
dec
std
jb
add
popf
cmp
or
push
mov
add
insb
test
adc
ja
pop
ljmp
aad
cmc
adc
adcl
mov
mov
cmp
cwtl
mov
pop
sub
mov
inc
push
out
inc
dec
movsb
rcll
push
sti
lds
imul
inc
mov
mov
lret
and
mov
rcr
je
jg
sbb
inc
mov
inc
movsb
mov
add
cmc
ljmp
mov
leave
stc
jge
arpl
jb
xchg
enter
lcall
add
dec
test
lods
push
mov
xchg
add
scas
sub
dec
mov
cmp
inc
mov
repz
inc
bound
sbb
scas
lret
inc
cs
dec
clc
fiaddl
or
add
dec
imul
cmp
mov
add
cwtl
xchg
mov
push
inc
xchg
jle
and
gs
mov
es
aas
enter
add
or
rcl
sub
xorl
iret
xor
xchg
lcall
andb
adc
sub
dec
das
add
pushf
mov
movsb
push
or
mov
cmp
sarb
ret
mov
adc
xor
imul
mov
adc
aas
std
dec
les
shrl
cli
push
sbb
into
xchg
push
inc
lods
aas
rolb
pop
dec
repnz
cmc
mov
pusha
test
loopne
lcall
jmp
mov
dec
mov
dec
sub
cmpsl
in
mov
rol
add
pop
mov
cmp
nop
mov
pop
and
sar
dec
out
aad
xchg
out
pop
inc
jmp
xrelease
inc
popf
mov
repnz
bound
lds
int3
push
dec
in
and
aam
dec
xchg
jns
data16
sti
dec
push
adcl
movsb
dec
ss
mov
loope
stos
jecxz
sbb
sbb
dec
sub
pop
xchg
lcall
dec
push
jb
mov
lea
movsl
fnclex
pcmpgtb
sbb
push
add
sbb
mov
sbbl
fldl
arpl
jg
jnp
sbb
dec
sbb
rorb
insb
mov
adc
ja
xor
hlt
sub
fcompl
sub
fdivrs
outsb
int3
jp
jbe
cmp
repz
pushf
div
push
and
and
or
jle
test
mov
in
push
push
pop
lret
sub
xor
cmp
stos
push
pop
sbb
std
dec
push
and
cmpsb
rolb
insl
mov
pop
mov
sbb
fnsave
dec
mov
push
mov
jge
popa
bound
test
adc
cmp
push
sub
stos
mov
ljmp
test
negb
xor
scas
mov
sub
jae
popf
jnp
push
push
loopne
int
xchg
test
flds
inc
sub
jbe
cwtl
inc
jne
cltd
lods
or
into
lds
test
rcll
mov
outsb
pop
jb
jp
je
je
cmc
xor
imul
hlt
mov
imul
xchg
rcrb
fwait
pop
cmp
pop
xor
jbe
dec
mov
xchg
mov
cmp
lds
pop
inc
mov
push
lods
lock
and
sti
pop
loope
int3
negb
push
lock
xor
outsl
je
call
loope
xlat
mov
mov
inc
movsl
fsub
fsubrl
dec
mov
adc
mov
not
pop
jns
mov
mov
xchg
mov
pop
std
sbb
jnp
call
cmp
mov
hlt
std
adcl
push
test
add
sub
xchg
je
mov
dec
lods
pop
cmp
inc
movsl
mov
dec
cmp
mov
or
inc
inc
push
jl
idivl
and
cmp
mov
dec
in
sub
pop
xchg
negb
xlat
fs
insl
lds
push
repnz
jmp
fldcw
shrb
ss
push
addr16
mov
cmp
push
mov
test
mov
nop
les
int3
mov
inc
jnp
ljmp
push
add
andl
mov
ret
xchg
sub
xor
jb
loopne
jae
mov
mov
fidivrl
pop
xorb
rorb
jns
mov
aad
nop
gs
je
popf
xlat
clc
jno
dec
xor
xchg
jp
orl
sub
pop
or
notb
and
ss
idivb
inc
and
xor
adcl
xchg
xlat
pop
das
je
sub
ret
iret
pusha
mov
aas
and
ret
inc
addb
in
lea
sbb
mov
ret
add
cwtl
loope
ss
pop
xor
jae
out
fldenv
std
je
jns
dec
sbb
xor
mov
mov
xchg
jns
imul
add
push
inc
mov
mov
aam
sti
mov
push
pop
push
cmp
fbstp
mov
in
imul
push
xor
push
hlt
dec
jne
js
daa
fs
mov
cmp
jbe
outsb
cltd
pop
sbb
or
dec
insl
sbb
dec
push
addr16
dec
dec
xchg
int
daa
pop
jg
jne
xor
inc
out
jp
gs
loop
addr16
mov
in
lods
push
push
xchg
iret
lods
dec
jp
addr16
pop
or
out
repz
aaa
jo
pop
into
sarl
jmp
jle
inc
adc
cld
cmp
mov
int3
sbb
negl
adc
in
insb
sub
es
xor
push
fisubrs
inc
jmp
xchg
sub
or
inc
mov
pop
inc
sbb
sub
popa
jns
xchg
push
loopne
mov
pop
pop
stos
pop
ja
loop
xchg
push
mov
and
jns
test
pop
mov
pop
mov
fstpt
jb
sub
xchg
mov
sub
int3
icebp
loope
push
pop
cmp
out
repnz
jnp
xchg
fcoms
mov
lds
and
cmp
loopne
icebp
inc
hlt
jg
ds
das
aaa
int3
lods
jns
clc
inc
dec
lcall
por
dec
dec
add
gs
jecxz
jecxz
sub
sbb
lods
aaa
or
add
xchg
inc
mov
fmuls
sbb
sub
jbe
dec
cs
adc
inc
pushf
andl
push
sub
push
and
xor
inc
sarl
cmp
ja
sub
dec
cmpsl
dec
fld
add
pop
jbe
les
leave
lret
es
and
xchg
jmp
push
xor
cmpsb
xchg
mov
mov
cli
sahf
outsl
scas
jno
sar
pop
das
testb
movsb
in
out
or
pop
mov
mov
lret
mov
mov
add
sub
cmpsl
cmp
xor
nop
push
xchg
mov
pop
sti
jb
lret
jbe
fwait
xchg
add
adc
cmp
imul
push
push
aaa
popa
dec
sbb
mov
adcl
xchg
pop
cli
daa
jl
dec
jne
sbb
mov
and
adc
xchg
pop
out
gs
or
mov
inc
mov
xchg
bound
xchg
push
mov
cmp
lret
mov
sahf
icebp
test
inc
inc
mov
and
dec
cwtl
xor
movsl
push
sahf
fs
addr16
mov
inc
mov
lods
je
cltd
mov
and
gs
pop
aam
cli
or
cmpsl
mov
mul
or
lods
xor
pop
sti
cmp
pop
lret
dec
and
stos
arpl
add
mov
pop
mov
pop
sti
cmpsl
in
mov
xor
xchg
inc
out
xchg
fnstsw
popa
cwtl
ds
fwait
jle
jmp
xlat
sti
fbstp
adc
movsl
fisttps
push
cwtl
insb
push
xchg
and
sar
xor
lock
pop
rcrb
adc
sbb
jge
pop
mov
fdivrs
push
mull
lret
push
mov
insb
aam
and
jmp
mov
mov
in
ljmp
fcoms
ljmp
push
lcall
stos
in
cmp
mov
shl
sub
sbbl
ret
sbb
pop
pop
shlb
repnz
insl
test
xchg
xchg
jge
and
test
adc
sub
in
mov
bnd
or
lcall
dec
xor
jecxz
sub
push
jecxz
jnp
push
cwtl
mov
push
jns
in
sahf
add
xchg
enter
aam
xchg
ret
add
icebp
mov
xchg
add
cmpsb
out
adc
popa
ljmp
sbb
mov
mov
mov
push
ror
sbb
mov
stos
add
lahf
insl
mov
jno
fmuls
xor
lods
popf
adc
dec
sub
and
imull
inc
cld
push
or
aad
dec
addr16
cwtl
cld
dec
in
cmpsb
xchg
cmpsl
mov
mov
es
jp
mov
mov
xchg
adcb
or
adc
dec
cmp
daa
nop
adc
mov
loopne
cltd
enter
push
xchg
mov
lea
jne
cmc
les
jns
enter
hlt
mov
insl
scas
out
lock
hlt
stos
shr
pop
adc
push
pop
repnz
inc
mov
mov
jo
lret
adc
data16
sahf
fcmovu
mov
sub
xchg
insl
rcl
popa
cmp
mov
sub
test
dec
fnsave
mov
xor
cltd
les
cmp
inc
stos
push
sbb
inc
into
push
jae
jge
dec
cs
aas
mov
xor
je
xchg
loop
sbbl
iret
dec
loopne
pop
dec
add
xchg
inc
pop
pusha
lods
lods
jmp
stc
jecxz
test
add
call
and
lret
dec
adc
xchg
jne
xor
cmp
fs
pop
jg
vmovapd
pop
sub
int3
or
movsl
pop
lods
shlb
jmp
dec
aam
jg
inc
or
cmp
dec
inc
mov
fwait
jmp
shl
inc
mov
push
jb
rclb
push
push
mov
movsb
cltd
xor
gs
andb
xor
push
enter
imul
mov
push
lods
sar
test
orb
add
xor
mov
xchg
cmp
cmp
mov
or
aad
les
pusha
sbb
sti
dec
mov
sub
movsb
or
imul
jecxz
push
test
pop
jmp
outsb
clc
shr
mov
aad
push
dec
ret
xchg
cmp
gs
dec
pop
lcall
push
mov
std
lea
jp
mov
push
mov
mov
inc
and
dec
outsl
mov
xlat
scas
test
inc
sub
and
std
stc
add
xchg
fs
repnz
sbb
test
lds
out
sti
jns
lods
ljmp
push
rcr
jo
adc
idivb
push
mov
xchg
lcall
lock
jl
sub
fdivrs
inc
sub
xchg
dec
lcall
push
sbb
push
fs
es
orb
jo
fwait
cmp
ffree
sarb
negl
mov
xchg
xchg
cmpsl
jp
push
hlt
das
lahf
mov
adc
xor
or
mov
add
imul
out
pop
leave
mov
lock
sbb
ss
add
cmp
out
rcr
jnp
loopne
sarl
mov
jmp
movsl
out
mov
leave
push
nop
repnz
add
xchg
fsubrp
mov
call
pop
ret
jnp
shll
flds
jbe
sbbb
sub
stos
fcmovne
xchg
ds
adc
loopne
ljmp
nop
jne
add
lcall
pop
xchg
xchg
mov
je
sbb
xlat
mov
cmpsl
testl
lahf
into
dec
inc
xchg
out
mov
cwtl
movsb
nop
and
mov
test
mov
xor
adc
dec
sub
std
mov
lock
or
cmp
jg
sbb
roll
add
lods
call
add
je
hlt
adc
sub
sub
xchg
idivb
mov
add
fcompl
jbe
ficomps
or
cmp
insb
pop
mov
daa
mov
std
push
xlat
ljmp
mov
sti
dec
lea
lea
dec
cmpl
pushl
sahf
mov
test
into
mov
pop
fnsetpm(287
icebp
sar
inc
and
cltd
imul
and
test
lret
sbb
and
xchg
test
xchg
xchg
sub
repz
push
stos
cmp
adc
dec
out
insl
sub
sahf
cmp
push
mov
or
iret
inc
rcrl
loope
xchg
add
ficomps
add
xor
fisttpl
ja
out
in
stos
jecxz
testb
aad
ss
xorb
push
push
xlat
call
lods
and
mov
mov
lods
push
outsl
shll
cltd
sahf
pop
outsl
enter
push
or
jle
dec
enter
sub
mov
stc
jp
and
cmp
xchg
imul
call
xor
jecxz
jae
test
and
xchg
pop
add
adc
push
lock
jae
adc
bound
mov
loope
pop
scas
dec
cli
inc
inc
test
jbe
add
mov
pop
test
fidivrs
pop
out
add
mov
sbb
in
inc
pushf
in
adc
bound
pop
insb
mov
cs
jns
out
xchg
or
xchg
inc
or
jae
out
or
rcrl
lcall
push
jmp
ja
or
cmpsl
mov
out
movsb
popf
aas
or
xchg
lock
ret
cmp
xchg
loop
out
repz
xchg
pop
xchg
cmp
jmp
pop
jb
cmp
fsts
shrb
out
mov
cmp
fistl
inc
push
and
daa
flds
sub
pop
sbb
jle
mov
mov
push
jns
mov
loop
fwait
cmp
lds
or
mov
or
cmp
sub
stos
sbb
stos
dec
jg
add
nop
test
cmp
data16
xor
das
push
mov
lahf
popf
pop
mov
les
push
cmp
jno
adc
xchg
pop
push
leave
or
xor
jmp
xchg
pop
mov
aaa
lods
lods
mov
icebp
or
sbbb
mov
pop
xor
rcrb
and
xchg
mov
testb
ljmp
shll
xchg
mov
pop
adc
and
aad
jbe
sbbb
paddb
jns
fsts
in
push
mov
push
sbb
xlat
pushf
in
movsb
xchg
and
std
xchg
sbb
mov
fstpl
aas
fsubrp
test
inc
je
sbb
out
sbb
subl
inc
xchg
fnstcw
call
leave
sbb
test
mov
or
out
xchg
xor
xor
and
fdivrs
and
dec
lods
adc
jnp
mov
out
jmp
sbb
imul
mov
in
loop
pop
mov
xchg
aas
inc
inc
fimull
push
sub
arpl
lret
inc
push
push
mov
ljmp
out
xor
xchg
cmp
jne
shll
shll
imul
in
sahf
test
cs
inc
clc
dec
mov
xor
or
mov
das
dec
shl
mov
or
cltd
inc
or
imul
popf
cmpsl
sbb
jo
movlps
lods
fcomps
xchg
movsl
xor
dec
xor
dec
pop
xorl
adc
test
decb
enter
lock
xor
ljmp
push
and
lret
mov
dec
loopne
out
leave
mov
stos
mov
out
sbb
push
imul
mov
stc
dec
fsubrl
rorl
pop
jl
dec
dec
jo
and
pop
mov
shlb
ljmp
jne
push
mov
push
out
cmp
sub
and
inc
xlat
inc
pop
sti
add
and
fcmovnb
jb
fldcw
gs
inc
add
adc
xlat
test
jne
and
fwait
gs
andb
icebp
inc
out
es
lret
and
out
dec
fiadds
jp
xor
mov
sbb
adc
pop
adc
movsl
negb
xor
test
out
mov
loope
sbb
xor
addb
cmp
scas
xchg
push
mov
out
dec
repz
mov
jnp
mov
jmp
cwtl
pop
mov
iret
xchg
leave
jb
leave
xchg
or
push
lahf
pop
insl
out
sub
xor
das
adc
fnstcw
nop
cld
jecxz
nop
call
pushf
leave
in
stos
mov
mov
inc
or
jne
outsb
enter
ljmp
movsb
sub
adc
xchg
sub
cmp
mov
repz
fcmovnbe
sub
scas
push
jno
inc
dec
jmp
pop
mov
and
push
test
sbb
sbb
or
sarl
in
or
in
dec
data16
pushf
aad
lea
cmpsl
pop
cmp
jbe
fdiv
imul
mov
inc
mov
pusha
mov
popa
movsl
scas
or
cmpsl
fiaddl
mov
mov
daa
xchg
popa
mov
loopne
sbb
push
inc
shrl
push
aad
stc
test
sarb
sti
in
in
push
flds
mov
cmp
or
pop
sbbb
sub
sub
mov
mov
in
pop
fnsave
dec
push
push
push
mov
stos
inc
push
xor
pop
icebp
icebp
jnp
mov
vpaddq
dec
jl
mov
loop
inc
adc
cld
add
mov
cld
xor
jns
andl
mov
add
loopne
mov
sarl
bnd
ljmp
rcrl
mov
fsubrs
fbstp
or
push
pushf
adc
push
insl
or
xorl
mov
sarl
adc
scas
call
and
adc
xor
push
add
ss
or
and
xor
dec
test
inc
jg
mov
pop
loop
insb
jp
sarb
dec
fwait
dec
fwait
movsb
mov
adc
icebp
push
sub
pop
xchg
pop
mov
flds
dec
rol
pop
add
mov
pop
aaa
dec
shll
mov
outsb
int
pop
fists
ret
div
jnp
mov
pop
dec
shrb
popf
inc
jno
push
adc
mov
push
movsb
xchg
pop
imul
rol
icebp
imul
shlb
xchg
sbb
push
decl
daa
mov
fldenv
fiaddl
cmp
jg
popf
rcl
adc
fistl
in
insl
imull
sbb
dec
nop
std
insb
mov
enter
lcall
push
push
mov
adc
xchg
je
mov
cmp
and
ljmp
call
sbb
mov
jo
and
dec
stos
or
movsb
inc
pushf
imul
push
sbb
xchg
hlt
popf
outsb
out
cmp
mov
sbb
xchg
dec
lds
or
jp
stos
test
mov
cmpsb
sbb
call
and
popf
int
jb
lods
addr16
enter
fsubrs
jns
pusha
xchg
mov
pop
arpl
mov
sub
pushf
mov
dec
or
dec
movsl
jb
and
sub
cmp
shrb
loop
stc
mov
xchg
aad
sahf
mov
in
mov
insl
lds
push
imul
sbb
cmpb
jne
ret
loop
enter
dec
mov
sbb
ret
xlat
xor
mov
jg
xor
push
and
lret
nop
inc
aad
popa
out
hlt
pushf
test
daa
xchg
ss
xchg
ret
scas
addr16
aas
es
cmp
mov
cmp
and
adc
and
movsb
mov
jl
daa
push
test
dec
lods
jge
mov
popf
hlt
cltd
iret
enter
scas
push
fwait
lcall
pushf
ret
loope
js
sub
inc
cmpsl
lahf
shll
jbe
sub
sbb
xlat
add
out
dec
scas
adc
aam
sarb
xor
daa
repnz
nop
cmp
mov
or
or
sub
adc
ljmp
pop
loopne
add
fcoms
xchg
out
jge
or
lock
mov
cltd
sbb
lret
cli
jp
pop
and
mov
push
push
mov
xorl
inc
outsb
mov
xor
xchg
mov
neg
inc
and
sets
mov
inc
dec
leave
adc
xchg
pop
push
mov
popa
sub
cld
add
jno
insl
test
ret
push
das
xchg
leave
inc
jmp
cltd
repnz
scas
fwait
rcrl
dec
xchg
add
cmc
sbbb
push
pop
movsl
inc
aad
in
call
arpl
movb
mov
enter
fisubrs
push
xchg
sub
sbb
mov
and
jnp
divb
xchg
mov
lret
inc
mov
imul
sub
jnp
mov
sbb
push
mov
jp
sti
add
adc
out
ret
push
adc
je
add
jno
jmp
hlt
loop
aad
jg
arpl
or
mov
fwait
insb
mov
lods
in
testb
xlat
push
pop
loop
enter
dec
mov
adc
ds
insl
dec
insb
and
pop
dec
sbb
add
or
test
ds
and
jb
sbb
mov
out
cmp
into
test
in
sub
add
push
divb
inc
mov
fs
sbbb
dec
pop
xchg
aas
dec
shr
inc
lcall
lcall
jecxz
sbb
add
sbb
fdivl
test
push
jo
int3
mov
movsl
push
jge
jmp
mov
nop
icebp
mov
pop
mov
lods
mov
leave
fdivrp
or
out
cltd
add
jns
shlb
cmovne
xchg
fistpl
push
jg
cmp
lds
pop
add
push
jne
mov
int3
push
test
cmp
stc
inc
in
movsb
mov
ss
fimuls
xor
dec
jns
pushf
enter
jns
mov
mov
dec
fsubs
add
mov
push
jge
mov
fnstsw
push
inc
mov
outsb
jae
test
fdivrs
xchg
outsb
movsl
dec
inc
gs
jle
jo
test
cmc
add
outsb
mov
or
repnz
out
pusha
mov
int3
movsb
movsl
in
nop
ss
adc
into
mov
icebp
or
sbb
cmpsb
outsb
xlat
sbb
xor
outsb
insb
scas
imulb
shrb
adc
in
cli
xor
xchg
cs
xchg
jns
dec
loop
xchg
js
pop
test
push
jb,pt
fwait
adc
mov
pop
mov
fisttps
js
sbb
pop
xchg
cmp
movsl
dec
in
lods
add
and
pop
xchg
loop
sbb
inc
enter
xchg
sub
sub
xchg
aaa
outsb
pop
lea
pop
rolb
das
jl
sbb
cmp
xchg
cltd
iret
inc
std
cmp
add
jle
fisttpll
out
es
mov
outsb
test
inc
roll
cmp
jne
test
xchg
cmp
test
imul
scas
jno
imul
jge
out
mov
xor
cli
push
push
daa
stos
sbb
push
and
mov
arpl
add
addl
push
jp
js
fisttps
popa
cli
or
mov
push
lock
cld
add
mov
call
add
adc
jnp
jns
pop
rcl
pop
xor
je
jg
sub
xor
mov
jl
gs
sbb
into
ljmp
hlt
add
inc
mov
cwtl
loop
dec
pop
jo
lret
je
jo
jae
cwtl
lret
xchg
mov
mov
leave
div
adcl
insl
push
dec
pop
inc
fisttpll
es
icebp
or
or
lock
das
and
mov
mov
gs
mov
sub
push
hlt
repnz
ret
les
js
sbb
pop
int3
leave
shr
push
pushf
sbb
daa
call
das
mov
scas
sub
dec
pop
hlt
lock
clc
xchg
sub
ret
pushf
xchg
mov
sbb
frstor
xor
cltd
dec
xchg
lea
out
mov
sbb
sbb
mov
adc
inc
cli
push
cltd
mov
repnz
mov
adc
imul
subb
loope
popa
in
push
imulb
lock
mov
sbb
aaa
lods
push
test
and
test
pop
mov
push
add
ljmp
adcb
fiadds
add
out
pop
roll
push
lds
mov
cmp
out
into
mov
push
lods
lahf
insb
out
cmpsl
adcl
std
cmp
sbb
cmpsb
mov
mulb
jp
sbb
jae
icebp
sub
and
bswap
jge
jp
jne
lcall
stc
mov
xchg
mov
adc
fildl
push
mov
subb
addr16
outsl
xlat
sub
xchg
stc
or
repz
icebp
add
pop
imul
and
push
push
cmp
dec
jno
sbb
push
fildll
aaa
in
addl
hlt
sbb
add
inc
mov
dec
mov
cmp
pop
stc
mov
or
fsubrp
mov
jecxz
push
pop
test
pushl
sub
test
gs
xor
int
ds
jmp
scas
or
js
push
mov
xor
popa
loope
pushf
or
and
mov
sub
push
pop
xchg
mov
cmp
sub
xor
and
adc
push
add
jnp
xor
mov
arpl
dec
cmp
and
add
push
dec
gs
push
sbb
popf
cltd
jge
in
pop
ljmp
and
lods
dec
xor
movsb
int3
xor
mov
fwait
outsb
mov
push
fldt
inc
repz
movb
loopne
pop
mov
in
adc
movsb
dec
in
pop
sub
cli
fstl
nop
pop
xchg
inc
in
or
and
hlt
cld
push
les
jb
ds
cmp
stos
repz
mov
std
push
shll
add
cmp
push
xor
loopne
inc
push
adc
sarb
mov
lret
js
inc
imul
loope
mov
lods
nop
lods
je
stos
movsb
lea
push
mov
push
xchg
ljmp
xorb
sbb
xchg
popf
mov
int
fcoml
or
rcll
popf
mov
cltd
sub
insb
push
fidivrl
iret
pop
in
int
adcl
ds
call
mov
hlt
xchg
dec
inc
push
xchg
in
jbe
je
inc
push
arpl
adc
add
or
push
cmpsl
cld
sbb
imul
inc
inc
pop
outsb
cmpsl
arpl
xor
loopne
inc
out
scas
sbb
insb
cwtl
jl
fwait
push
leave
out
xchg
add
pop
xchg
cmp
leave
jo
sbb
mov
rcrl
add
pop
test
fsts
cmc
enter
sti
adc
lcall
inc
iret
lea
pop
mov
mov
fldl2e
dec
dec
jmp
pop
xor
mov
dec
scas
ja
in
mov
out
fwait
icebp
dec
xchg
mov
push
aam
jmp
in
test
lds
sarl
sahf
ds
xchg
outsb
jmp
inc
push
mov
sbb
push
mov
dec
out
out
rolb
xor
test
sub
xchg
mov
and
xor
mov
mov
jnp
mov
xchg
adc
pop
cmp
fmull
mov
nop
inc
es
sub
fmull
push
jbe
daa
mov
mov
and
mov
mov
jmp
cmpsb
xchg
in
push
ret
or
lock
arpl
mov
dec
imul
xor
add
movsb
jb
lea
xorb
mov
xchg
aas
mov
mov
inc
push
nop
rorb
sub
ret
and
sti
popfw
mov
xchg
adc
xor
xorl
rorb
test
inc
fbstp
scas
xlat
push
and
sahf
or
fs
jae
loop
leave
mov
in
xchg
sbb
fs
fwait
push
xor
das
cmp
leave
xor
and
popf
mov
in
movsl
and
and
mov
jle
jns
push
cmp
adc
pop
push
dec
pusha
popf
loope
mov
adc
mov
mov
inc
pop
mov
or
pop
negl
stos
add
test
cmp
cltd
pop
xorl
xchg
xor
jne
push
cmpl
xchg
into
lret
lcall
repz
sbb
popf
push
pop
dec
inc
pop
insb
int3
adc
cmp
add
test
out
push
cltd
pop
mov
sub
mov
lret
xchg
scas
mov
out
mov
lods
adc
out
push
sbb
jmp
daa
or
add
movsl
or
jmp
iret
loopne
mov
mov
cs
mov
push
dec
pop
xor
jp
ret
in
cmpsb
lock
cmp
int
inc
inc
xchg
inc
js
outsb
lcall
orl
push
xchg
jmp
push
jnp
pop
or
adc
loop
cwtl
je
xchg
dec
pop
nop
xchg
add
test
js
inc
pop
dec
js
sbb
cmpsb
sbb
aas
mov
mov
imul
push
adc
ja
sarb
or
push
jg
fisubs
pop
fmull
aam
loope
xchg
iret
pop
out
mov
aad
into
xchg
daa
mov
inc
imul
into
mov
xchg
bound
xchg
call
xorl
int
adc
stc
bound
lock
nop
cltd
mov
mov
cmp
xlat
or
pop
aam
sbb
jbe
mov
mov
sub
in
sbb
and
sbb
icebp
cwtl
das
jns
popa
push
mov
inc
and
pop
push
inc
ljmp
in
xchg
mov
ss
sub
mov
sub
inc
mov
cmp
jae
add
xchg
dec
xor
out
es
ja
push
leave
fs
xlat
call
popf
sbb
rol
loope
pop
js
cltd
jl
push
mov
push
aaa
cmp
fs
ret
mov
push
out
jns
fistps
leave
fdivr
test
dec
outsb
add
outsb
mov
sahf
das
cmpsb
negb
pop
cmp
fcompl
insb
sub
icebp
clc
pushf
sbb
add
sub
cmpsl
push
sarb
aad
pop
sbb
jge
pop
dec
mov
shld
rorl
fwait
cltd
mov
mov
xchg
cwtl
test
scas
xor
aam
adc
cmc
mov
and
add
push
rep
out
mov
push
icebp
mov
lea
sbbl
out
loopne
cmc
xor
cwtl
fistps
xchg
mov
mul
push
and
mov
xor
sbb
fldenv
xchg
and
cmp
xchg
fwait
add
lock
jnp,pt
fcomps
fildl
add
xchg
out
rolb
sbb
es
pop
ror
xchg
imul
loopne
and
jge
mov
mov
push
pop
mov
loop
rcrl
sbb
aas
lret
jle
xchg
mov
pop
out
popf
jno
ret
mov
sbb
xchg
mov
mov
aaa
xor
or
adc
cmp
imul
scas
fcoms
fisubrs
pusha
rclb
inc
out
jbe
pop
in
xchg
sbb
rcll
push
pop
inc
jg
fistpll
mov
push
out
arpl
fistpl
xchg
mov
mov
jge
sarl
push
repz
mov
pop
cmp
in
inc
std
dec
mov
cmpsb
addr16
mov
aaa
ds
inc
in
inc
call
adcl
test
jno
push
mov
mov
call
shlb
sbb
in
xor
mov
es
mov
scas
popa
and
xor
adc
bound
imulb
push
mov
rorl
sbb
popa
bnd
outsl
enter
dec
test
jo
add
popf
popf
mov
nop
push
pop
jmp
pop
mov
pushl
push
inc
mov
xchg
nop
xor
shl
sbb
jge
mov
lret
mov
idivb
inc
sub
arpl
ret
imul
clc
jmp
mov
les
xchg
mov
icebp
fsubr
dec
xchg
pop
adc
xchg
mov
cltd
js
push
xchg
mov
test
stos
mov
and
push
and
ljmp
inc
inc
int
cmc
fcoms
pop
inc
addr16
mov
je
add
movsb
sti
add
std
cltd
jo
cli
xor
inc
sbb
into
into
scas
or
mov
push
inc
mov
lret
cwtl
hlt
mov
adc
adc
xchg
idivb
mov
xlat
xchg
lods
pop
leave
cmp
sbb
push
add
fwait
lods
and
call
ret
movsl
mov
aad
aad
mov
std
adc
insb
out
lcall
push
xchg
pop
mov
fmuls
addr16
cmp
fdivr
nop
cs
lods
sbb
xor
push
xlat
in
inc
notl
js
jmp
stos
scas
pop
or
roll
jg
loopne
das
sahf
push
mov
inc
cmp
std
fwait
pushl
lods
push
or
sub
mov
xor
push
pop
or
dec
ret
xchg
int
sub
and
mov
es
mov
mov
jnp
mov
pop
int3
pop
aaa
sub
gs
pushf
pop
and
in
xor
sub
in
daa
rclb
in
lcall
test
push
aaa
xchg
xchg
sbb
in
bound
cs
int3
mov
scas
unpckhps
call
cmp
sub
push
mov
xchg
xor
aam
cmp
or
dec
rclb
gs
dec
loop
daa
ret
into
sub
in
pop
dec
test
sub
add
dec
pop
inc
aas
cltd
repnz
jge
fisubrl
and
push
mov
in
ljmp
mov
push
and
mov
in
rolb
mov
mov
into
inc
sbb
data16
xor
aam
push
repnz
aaa
pusha
in
cmp
in
jmp
or
adc
pushf
outsb
cltd
shlb
inc
jb
fdivrl
outsb
lcall
subl
shlb
mov
jp
mov
inc
sbb
into
jecxz
or
add
add
adc
test
in
test
pop
xchg
xor
nopl
mov
xor
rcrb
lods
jno
pop
stos
shl
adcb
sti
mov
sub
mov
fiadds
test
lds
arpl
cld
mov
sbb
stc
loopne
or
rclb
pop
std
popa
mov
cmp
cmp
ljmp
mov
mov
jo
xchg
ja
mov
pop
pushf
ljmp
icebp
mov
xchg
in
mov
adc
and
stos
sbb
ret
dec
mov
push
sub
add
sbb
mov
and
fwait
jae
sarl
add
xor
inc
popa
jb
cmp
test
push
loope
cmp
icebp
push
inc
ret
sahf
or
adc
adc
push
dec
enter
imul
xchg
dec
sbb
sti
mov
outsb
add
dec
in
sub
jb
rcrl
jbe
nop
outsl
jle
pop
push
xchg
mov
das
pop
popf
cmp
pushf
cmp
jp
insl
xor
inc
pushf
enter
xor
jnp
xchg
jmp
std
int3
add
sub
aas
xor
sarb
adc
aaa
pusha
push
mov
mov
int3
jmp
or
push
inc
orb
out
mov
dec
sub
out
and
clc
and
addl
mov
mov
sbb
jecxz
push
or
ret
lcall
int
sbb
mov
jge
je
imul
pop
out
rcll
addl
xchg
sub
sbb
cmpsb
mov
cmp
adc
mov
mov
mov
dec
fwait
arpl
jmp
push
pop
out
push
scas
push
adc
and
and
incl
ja
daa
loop
mov
dec
xchg
jle
int3
sbb
mov
lcall
lret
mov
or
fldl
popa
scas
mov
or
pop
lock
imul
add
imul
xorb
cmp
sub
cmp
jbe
push
jp
outsl
xchg
push
and
adc
negb
lret
lock
jp
cmp
xchg
bound
div
sub
out
mov
test
lods
xchg
mov
insb
push
jge
addr16
rcrl
std
push
outsb
and
data16
and
cmp
iret
cmp
adc
sub
inc
daa
jmp
sbb
fdivr
mov
movl
imulb
cmp
jb
mov
cmp
mov
lods
jb
cmc
inc
xchg
pushf
cmp
pusha
lea
mov
and
out
in
add
cs
movsb
outsb
aad
push
fwait
cmp
or
cs
adc
cmpl
ss
sbb
movsl
es
frstor
repnz
adc
leave
adc
jp
mov
push
in
leave
sub
mov
cmpsb
jae
lods
xchg
jmp
inc
fimull
mov
mov
mov
and
add
cmpsl
sbb
cmpsb
add
and
xchg
adc
add
stos
ds
pop
and
xchg
add
ss
stos
and
insb
stos
add
scas
adc
fildll
cmp
cmp
inc
and
fcmovnb
adc
nop
xchg
rorl
dec
mov
push
test
adc
push
in
add
xor
cmc
icebp
jae
pop
decl
push
jne
push
adc
push
cmp
adc
mov
cmp
mov
pop
adc
ret
mov
mov
xlat
int3
cld
daa
and
jne
orb
add
js
mov
lcall
je
lcall
shll
xchg
cmp
scas
jns
in
mov
fnstcw
and
lods
and
popl
enter
xchg
lret
cmpsl
jno
push
shr
add
mov
or
insl
adc
mov
shr
js
and
fsubrs
push
je
pop
mov
es
mov
jle
dec
and
lock
sub
nop
pop
adc
pushf
jb
mov
push
mov
jae
ja
xchg
sbb
pop
push
mov
lea
pop
mov
jno
cwtl
pop
stos
inc
mov
std
push
cmpl
or
insl
adc
bound
lahf
lcall
adc
xchg
lea
jecxz
push
aas
xor
and
aas
sub
cmpb
test
adc
sti
dec
fisubrs
into
shlb
jmp
mov
xor
mov
cmp
mov
jl
lock
and
pop
imulb
push
cmp
lret
lds
subl
push
cs
sbb
sbb
add
montmul
cmpsb
inc
stos
shrl
xchg
add
or
cwtl
outsl
sub
fsts
negb
adcb
test
roll
clc
out
sub
out
repz
cmp
push
adc
sahf
mov
comiss
pop
xchg
pop
aas
lds
and
je
mov
push
xor
push
cmp
aaa
fwait
and
shl
pop
jp
ret
xor
insl
pop
mov
mov
add
mov
hlt
lret
inc
rolb
adc
sub
bound
hlt
mov
or
sarl
jle
outsl
push
aas
pop
cmc
xor
lock
in
idivl
mov
fidivs
inc
dec
jecxz
jbe
loopne
pop
dec
iret
jp
and
jns
sti
repz
stos
mov
fisttpl
sti
jbe
aam
sub
ret
pushf
jecxz
mov
aam
lret
pop
pop
lea
je
and
pop
push
pusha
xor
enter
mov
pushf
movsl
call
mov
mov
jle
push
in
dec
adc
cld
mov
stc
mov
adc
fimull
addr16
xor
cmp
jbe
push
shll
fsubrp
cs
lahf
mov
cmp
sub
imul
mov
fprem1
ret
cmp
jae
dec
xchg
data16
pusha
dec
inc
imul
cmp
incb
or
and
test
dec
jle
push
mov
jecxz
or
arpl
mov
fadds
in
bound
rcrb
mov
repnz
add
iret
xor
mov
outsl
adc
addl
push
sbb
divb
inc
aaa
jnp
push
lods
enter
inc
or
rclb
pushf
js
mov
adc
in
cld
into
popf
xor
andl
jle
lds
enter
cld
and
popf
mov
addl
mov
dec
xor
iret
insb
jo
faddl
add
jne
pusha
mov
add
dec
inc
lock
or
sbbl
push
jne
sti
rcrb
dec
mov
cmpsl
call
jg
or
pusha
xor
lahf
scas
adc
fistpll
test
pop
push
inc
repz
int
jo
mov
mov
pop
inc
imul
aam
hlt
mov
jno
add
jno
push
outsb
pushf
or
mov
adc
rol
movsb
imul
lret
push
or
xor
out
dec
xchg
ret
ljmp
lret
push
out
xchg
mov
pop
cmc
and
xchg
stc
adc
imul
xlat
outsl
pop
jp
sub
ja
add
in
sub
aad
pop
mov
inc
lock
push
cmp
fbld
cltd
sub
jecxz
loop
fcoms
mov
mov
ret
ljmp
ret
rcrb
mov
push
fisubs
int
or
and
sbb
xor
or
aam
jmp
sub
jo
imulb
cli
divl
jnp
pop
fdivs
push
cmp
sub
faddl
xor
rcll
fbstp
mov
into
loope
lock
mov
inc
xchg
cmp
in
mov
sub
pop
jecxz
ror
pushf
icebp
jno
and
fdivs
sbb
mov
xchg
sub
pop
ret
dec
popa
shll
mov
adc
add
mov
jo
adc
pop
cmp
or
popa
mov
xlat
dec
sahf
push
mov
jae
sbb
scas
sbb
pop
jne
cs
mov
mov
cmc
ss
inc
mov
inc
sub
sarb
or
sbb
push
iret
dec
jo
push
cld
adc
inc
daa
outsb
das
outsl
ja
mov
and
mov
test
and
pusha
cmpsl
xchg
push
out
and
leave
popa
sbb
sbb
or
test
pop
xchg
mov
aaa
mov
int3
inc
int3
xchg
int
and
jmp
loop
sub
push
adc
xor
dec
inc
cmp
lret
out
pop
sbb
mov
cwtl
inc
jecxz
mov
dec
jne
fidivrs
negl
arpl
aam
sub
or
lods
mov
outsb
mov
pop
test
fildll
mov
cmp
xor
cmp
rcrb
or
loopne
add
adc
pop
into
add
mov
xchg
in
loop
or
dec
loop
arpl
aaa
or
popf
and
jp
stos
or
xor
cltd
dec
lahf
mov
std
xor
rcll
test
jnp
and
rolb
jns
mov
imul
lods
in
sahf
jae
mov
es
push
add
pop
addl
in
ljmp
testb
sahf
in
add
cmp
imul
or
sbb
mov
inc
xor
sbb
cs
push
popf
cwtl
iret
jp
push
popa
pop
pop
popf
mov
inc
push
sbb
and
lea
jl
dec
mov
cli
pop
test
sub
test
add
add
aam
cmp
or
jl
jae
jne
ror
xchg
sub
ds
lret
and
add
mov
pusha
sti
sub
out
dec
sahf
jb
mov
mov
in
jno
mov
cli
popf
bound
ret
test
mov
sbb
inc
data16
fst
or
mov
stos
dec
and
adc
scas
imul
movsb
and
adc
pop
add
adc
push
inc
ljmp
pop
mov
outsl
inc
push
sub
sti
pop
insl
es
push
addl
ja
and
out
push
pop
cld
cli
repnz
rolb
shll
mov
sub
movsb
sbb
xchg
enter
hlt
add
ds
add
and
add
cwtl
sub
push
sub
test
in
ret
jb
popf
push
lea
enter
xchg
mov
inc
adc
mov
xchg
rcll
je
sbb
jle
sub
out
or
mov
xchg
add
and
fstpt
mov
push
adc
jno
fwait
pop
and
frstor
sub
fdivrs
jp
fcmovnb
mov
sbb
movsl
inc
dec
add
pop
xlat
test
das
mov
push
sbb
int3
lcall
fs
lret
jmp
add
leave
push
fwait
andb
dec
loop
lods
push
jns
movsb
sbb
xchg
insl
lock
mov
jmp
sbb
sub
mov
add
cmpsl
mov
rcll
test
lock
or
fstpt
pop
push
in
push
add
and
ret
mov
mov
lock
cmp
or
sahf
and
arpl
adc
jns
cmp
inc
cmp
pop
pop
addb
stos
push
push
lret
fsubrs
out
setne
adc
pop
add
lods
jp
out
int
not
push
xor
sub
fwait
push
inc
mov
sbb
push
adc
rolb
sub
xchg
ret
mov
sub
ljmp
cltd
adcl
adc
sub
shrl
ret
fldl
push
and
xor
int3
jp
adc
sub
jno
jmp
dec
pop
cmp
outsl
ds
aas
scas
mov
or
push
stos
or
sahf
push
adcl
or
push
xchg
roll
fs
dec
leave
add
cmp
scas
adc
popa
cs
sbb
insl
ret
jl,pn
test
js
movsb
and
shrb
fmull
loopne
mov
aad
mov
mov
jmp
xorl
subb
dec
inc
mov
lods
push
push
fdivrs
xor
loope
mull
xor
popa
jno
mov
ffree
mov
dec
xchg
je
out
xor
pop
shll
push
pop
imul
jbe
mov
enter
add
jle
sbb
lahf
push
fwait
enter
hlt
into
pop
adc
push
jno
jne
mov
jbe
loope
out
mov
jnp
lahf
and
adc
cltd
test
mov
push
push
clc
inc
insb
add
andl
add
call
scas
insb
dec
out
cmp
gs
adc
lods
mov
in
ljmp
rorb
mov
sub
aas
ds
cmp
xlat
mov
fimuls
dec
mov
and
cmovp
iret
push
or
inc
cmpsb
add
fs
jle
clc
inc
movsb
aam
es
xor
dec
shrb
mov
ja
movsb
jecxz
hlt
mov
cwtl
inc
dec
jnp
xor
fdivrl
das
sub
mov
cmp
fiadds
pop
sbb
push
lret
sarb
test
lahf
dec
pop
ficompl
ds
mov
ja
xchg
push
inc
clc
ja
imul
dec
imul
cld
pop
mov
mov
cld
inc
stc
ret
rolb
jecxz
dec
ret
je
or
out
push
cmp
cmp
leave
mov
mov
mov
or
imulb
pop
pop
sbb
xor
into
jp
sub
cmc
mov
imul
add
mov
push
xor
mov
xchg
out
out
mov
and
adc
movsl
stos
test
hlt
in
sahf
mov
jle
rcl
sbb
xor
into
lret
shrl
outsl
scas
add
pop
repnz
push
xchg
imul
pop
loope
fwait
int3
jge
cli
or
sub
pop
lcall
xchg
negb
or
adc
loope
mov
lret
sbb
jno
sbbb
jae
aaa
pop
cmpsl
cmc
insb
push
add
movsl
mov
shll
cltd
test
mov
jne
jo
jmp
cltd
jb
sbb
adc
lods
push
push
sbb
fldt
les
mov
ficoms
xlat
push
jp
andl
filds
rcpps
ror
inc
scas
lret
sbb
sub
out
sub
mov
int3
lahf
and
xor
shl
std
cmp
add
loop
fnstsw
pusha
jmp
push
cmpsl
sbb
rorb
aas
jae,pn
clc
enter
mov
add
sub
xor
loopne
sbb
cmp
test
push
sub
push
out
or
in
push
fidivrs
fisttpl
lcall
xchg
dec
out
push
jmp
jmp
xor
push
push
aad
push
xchg
test
ret
sbb
push
adc
mov
jecxz
jl
lret
orl
lret
jmp
bound
cmpsb
cmp
test
das
orl
xchg
adc
fbstp
jbe
and
fsubrl
and
cmp
push
dec
fwait
mov
and
fs
sub
pop
shlb
int
push
sub
jo
xor
add
lahf
xor
or
cld
and
es
aad
stos
inc
inc
and
jle
xor
mov
xlat
filds
dec
shll
xchg
adc
into
pop
loop
outsl
hlt
jb
xor
xchg
in
pop
in
int3
aas
adc
jae
ja
cli
out
or
out
mov
xchg
sti
cmp
or
and
push
mov
idivl
push
pop
pop
in
push
sub
xchg
cmc
inc
cmpsl
movl
push
jne
clc
mov
xchg
movsb
xorb
sarb
adc
in
lods
shll
xchg
cmp
cmp
and
or
jp
xchg
or
ret
je
fildll
cmp
jne
jae
imul
cltd
xchg
inc
push
jno
shlb
add
mov
rep
sub
push
clc
mov
mov
js
mov
jae
xlat
xchg
xlat
mov
sbb
push
adc
inc
pop
adc
fld
lret
dec
mov
insb
fwait
mov
mov
notl
pop
push
lret
sbb
or
mov
xchg
out
add
or
adc
dec
aas
and
push
arpl
fwait
cmc
jp
jae
cli
dec
out
mov
test
cmp
add
mov
mov
js
lods
xchg
shll
push
sahf
lret
jle
xchg
sbb
mov
test
ret
cmp
ret
repz
jecxz
fmuls
mov
pop
fiadds
shlb
lods
cmp
test
mov
fcoml
xchg
or
aaa
shrl
test
int3
xor
outsb
jge
cli
insb
test
outsb
das
pusha
jmp
pop
shll
hlt
pop
fcomps
cltd
mov
jns
or
sbb
sub
add
arpl
and
sub
adc
sbb
addr16
pop
popf
roll
and
jp
lds
loopne
mov
mov
cmp
aam
gs
and
inc
push
and
or
dec
hlt
aam
or
cmc
ds
fildll
inc
pusha
jge
pusha
loop
decb
stc
and
pop
rcr
or
lcall
icebp
xchg
cs
mov
push
mov
or
inc
mov
xchg
inc
in
loopne
push
jb
cwtl
rcl
popa
jl
add
jo
lock
cmpsb
out
add
mov
stc
cmc
into
mov
xchg
xor
out
ds
and
ds
in
movsb
push
dec
sbb
add
out
xor
loop
mov
bound
jnp
and
repz
push
mov
inc
sbb
sub
pop
aaa
bound
js
lods
inc
sub
dec
in
cltd
push
and
sahf
add
jno
shlb
lods
mov
sub
adcb
je
lock
cltd
dec
into
cmp
jbe
sbb
aad
dec
xchg
inc
stc
or
fbld
andb
fbld
das
cmp
push
mov
rcrl
sub
adc
popf
push
pop
fisubs
dec
mov
sbb
ficoms
push
or
hlt
mov
dec
rorb
and
mov
xchg
jne
fs
dec
xchg
js
add
fisttpl
sub
pavgw
adc
xchg
repnz
es
mov
cmc
dec
icebp
inc
pop
sub
popl
fcomip
clc
mov
pop
jmp
nop
mov
xlat
pop
test
adc
hlt
std
out
lds
add
stc
pop
nop
mov
sub
dec
jp
cmp
addr16
ret
out
xor
xchg
push
mov
lods
xchg
push
inc
jnp
inc
stos
mul
pop
sbb
or
jp
cmp
arpl
sub
lea
xchg
cmp
dec
out
into
test
jmp
sub
jp
rclb
data16
pop
rclb
xor
data16
add
mov
je
fbstp
sbb
arpl
mov
jecxz
int
sub
sbb
pop
push
push
mov
nop
mov
dec
xchg
push
inc
popf
cli
add
jnp
sub
mov
mov
xchg
cld
pop
add
xchg
or
repz
mov
mov
xorb
dec
adc
cmpsb
xor
popf
mov
movsb
imul
dec
int3
mov
sub
sub
sahf
adcl
stos
icebp
or
mov
or
jl
mov
insl
int
das
repnz
lcall
arpl
mov
cmp
out
add
and
adc
xor
aaa
rcrl
popf
pop
xchg
push
enter
dec
lods
mov
mov
mov
cltd
xchg
adc
mov
xchg
jp
sar
inc
push
mov
mov
push
lret
jno
dec
cmp
mov
ffreep
outsl
aaa
mov
sbb
lods
inc
rorl
mov
sub
cmpsb
scas
mov
aam
and
jb
jo
inc
je
inc
idiv
imul
int3
cmpsb
push
cwtl
arpl
cli
inc
push
daa
sbb
mov
sub
mov
popf
or
insb
scas
in
into
add
pop
and
push
arpl
mov
fistpll
jmp
jns
movsb
lods
mov
pop
xchg
pop
xchg
stos
inc
or
mov
dec
cwtl
mov
shlb
pop
mov
cwtl
psraw
mov
inc
test
cmp
shll
in
mov
loop
stc
pop
pop
push
xor
pop
jo
xchg
fs
mov
sbb
shr
rcr
mov
jnp
sub
jge
xchg
popf
fists
xor
mov
test
pushf
xchg
lret
push
inc
add
aas
jl
leave
jns
data16
fmuls
cmc
push
incl
jns
mov
cs
repnz
shlb
sub
jecxz
pop
loopne
sub
push
push
fs
mov
in
mov
andb
pusha
add
push
popa
and
inc
outsl
in
fisttpl
inc
scas
and
sti
xchg
lret
mov
sub
sahf
insl
sbb
daa
push
nop
ret
sub
cmp
cwtl
fwait
jle
jg
jbe
mov
fstpl
shrl
stos
andb
push
leave
or
sub
std
shll
mov
and
in
mov
cwtl
mov
mov
bound
cli
int
rcrb
pop
jmp
xor
and
cmp
adc
incl
test
das
mov
jbe
lods
push
add
xchg
not
xor
mov
jmp
push
jmp
aam
out
in
mov
push
stc
shlb
test
xchg
fdivrs
in
mov
test
aam
movsl
dec
aas
scas
fdivrl
push
sbb
xchg
outsb
rcll
in
addl
sub
outsb
outsl
insl
das
int
lahf
insb
pusha
jnp
push
ljmp
xlat
or
push
and
inc
jbe
dec
int
out
mov
test
clc
xchg
xlat
repz
mov
lcall
cli
lcall
inc
out
setle
inc
mov
adc
add
adc
dec
adc
inc
int
inc
push
xor
jns
inc
popa
aas
sbb
lods
cld
negb
stos
and
call
and
pop
leave
arpl
sub
ret
sahf
enter
dec
das
insl
lds
mov
xchg
push
inc
pop
pop
nop
mov
arpl
mov
clc
lcall
sbb
stos
out
push
sbb
fiaddl
cltd
js
or
sbb
push
dec
in
sub
rep
push
into
or
in
cmp
icebp
mov
and
jns
sub
jmp
sbb
shll
pop
stos
dec
jno
int3
data16
pop
repnz
dec
pushf
fmull
adc
inc
xchg
add
mov
notl
das
xchg
inc
mov
mov
cmc
fwait
adc
cmp
pop
inc
xor
and
mov
add
adc
addr16
arpl
inc
xor
cmp
mov
dec
fistps
add
popa
icebp
sbb
mov
gs
push
cmpsl
fwait
cs
push
mov
pop
popf
sahf
add
jecxz
sahf
jo
stos
cld
dec
lret
add
pop
push
cmpsl
ds
push
aaa
lds
ja
mov
pusha
nop
leave
xor
loopne
adc
das
popa
mov
xor
lahf
ss
push
push
inc
leave
xchg
testb
dec
insl
jns
rclb
fnstcw
call
movsb
sbbl
bound
shlb
test
lcall
mov
std
sub
mov
xor
mov
inc
jns
sub
cld
mull
and
enter
fnstcw
lret
cmp
or
rdmsr
cmpsl
mov
outsl
push
int3
cmp
mov
mov
lods
sbb
cmpsb
loopne
movsb
es
loopne
daa
ficompl
mov
js
imul
inc
jbe
pop
fs
rcrl
aaa
adc
orb
pop
lods
xchg
xor
add
bound
and
lock
add
lods
into
shl
insl
data16
dec
push
clc
mov
xorl
pop
dec
movsl
in
fildl
mov
inc
push
pop
xchg
push
push
sub
mov
jmp
jno
subb
sub
mov
loopne
bound
nop
scas
outsb
jmp
fldcw
dec
cmc
push
jnp
mov
mov
lcall
je
and
cmp
adc
sti
lahf
adc
xchg
pop
adc
dec
into
cmp
and
and
pop
insl
lcall
adc
mov
xorl
cmp
in
xchg
insb
mov
jbe,pn
movsb
push
push
cs
fimuls
or
fistl
cs
repnz
xor
enter
lods
sub
out
dec
fldpi
rclb
fildll
inc
movb
insb
pop
pop
mov
pop
lahf
std
dec
insb
lods
xor
mov
mov
insl
andb
mov
test
xor
in
mov
push
lock
jo
xchg
sub
cmp
ljmp
fisubrl
xor
pop
clc
cmc
shll
dec
push
std
push
stc
imul
std
fmul
lea
xchg
shrb
push
adc
stos
dec
or
popa
ret
test
into
shrl
das
mov
loop
and
cmpsb
shll
sub
out
movsb
fldt
cmp
adc
enter
sbb
stc
mov
inc
xor
cmp
jb
cmp
fistpl
cld
cmp
sahf
cmp
mov
jae
adc
sti
sub
clc
out
inc
out
cmc
pop
push
cli
js
les
mov
out
popa
push
xchg
fcompl
and
in
jns
mov
out
mov
jg
mov
push
adc
jle
pushf
ja
inc
mov
hlt
jg
mov
dec
push
xor
jnp
cmpsl
pop
pop
xchg
jecxz
mov
addl
mov
xor
mov
sbb
fwait
out
jnp
pusha
pushf
pop
mov
movsl
xor
cld
mov
repnz
test
mov
cmp
stos
jl
mov
iret
inc
int3
pushf
aad
xor
mov
mov
ljmp
and
lock
add
adc
mov
cmp
cmp
cltd
cmp
fwait
xchg
es
outsl
out
push
arpl
leave
cmc
in
mov
mov
add
push
inc
fwait
mov
imul
lods
pop
dec
push
jle
adc
mov
mov
pop
notl
xchg
mov
popa
xor
stc
jno
or
push
fbstp
add
ret
and
ds
xchg
xor
inc
test
or
push
xor
and
pop
xchg
mov
mov
jge
pop
add
loope
fisttpl
les
jne
fcoms
jg
sub
stc
lods
clc
stc
inc
pop
cltd
jbe
sub
jge
mov
ret
arpl
sbb
sbb
xchg
in
movsb
mov
fistpl
mov
rcrl
je
loop
clc
in
push
testl
mov
bound
jmp
sahf
mov
mov
faddp
cld
jo
adc
fisubs
lock
enter
pop
jno
jbe
int
pop
cld
out
sarl
popf
lahf
add
mov
xlat
xor
shr
mov
push
push
das
outsb
xor
mov
jmp
mov
mov
or
stos
adc
jmp
pop
xchg
mov
notb
ljmp
dec
ljmp
jnp
mov
test
cmp
or
sbb
sub
ja
loope
jbe
adcl
dec
cld
imul
or
adc
popa
inc
mov
jge
js
les
mov
leave
mov
and
aad
mov
addr16
cmp
sub
dec
sbb
out
mov
roll
cmp
aam
int3
vaddss
sub
out
mov
sub
sbb
jb,pn
xor
adcl
sbb
sbbb
push
es
pop
adc
nop
cmpsl
gs
ja
imul
jo
fucomi
sti
out
hlt
jo
adc
ja
xchg
sahf
rcrb
loopne
jmp
outsl
cmpsl
pop
imul
add
add
sub
push
stc
push
repz
jmp
dec
push
xor
sbb
ret
xlat
xor
nop
pop
or
bound
or
sbb
mov
test
jle
or
and
iret
push
pop
xlat
addr16
sbbb
or
mov
cltd
push
int
test
shl
mov
push
stos
fdivr
add
stos
testl
xchg
sbb
push
cltd
fsubs
xchg
aad
sub
sbb
add
sbb
mov
inc
std
lods
and
test
cmp
fistl
and
adc
dec
push
mull
add
and
int
xor
push
lock
lret
add
xchg
out
mov
cltd
mov
add
mov
cmpsl
fucomp
mov
inc
decl
mov
out
aaa
xor
inc
pop
and
in
pop
in
filds
xor
xchg
mov
fldt
dec
mov
jg
loopne
mov
iret
test
inc
dec
in
or
loop
sti
mov
xchg
cmp
add
sub
and
les
sub
mov
roll
or
or
mov
jno
insl
pushl
xor
call
stc
loope
and
sub
pop
jb
dec
nop
sub
loop
mov
pop
mov
cltd
jno
cmpsb
mov
push
daa
repz
add
test
jo
jns
test
daa
jbe
shll
lods
cltd
xchg
leave
pop
mov
repz
test
push
xor
jnp
add
daa
lret
xor
add
inc
mov
mov
add
cmp
mov
adc
xchg
enter
insl
out
clc
cli
and
and
pushf
mov
imul
enter
sbb
stc
pop
mov
lret
lahf
push
mov
xor
test
daa
inc
pop
fstp
and
mov
clc
and
iret
les
sub
inc
pop
sahf
and
jns
jnp
sbb
ret
imul
dec
inc
adcl
cmp
xor
inc
push
adc
and
sub
push
lods
cmpsb
sub
fsubs
inc
adc
scas
push
mov
xchg
mov
xchg
dec
or
push
scas
push
add
mov
iret
mov
stos
pushf
mov
sub
leave
cmp
mov
mov
cmpsl
clc
jle
or
xor
pop
andb
pop
movl
xchg
leave
pop
adc
bound
pop
in
sbb
mov
mov
sar
sbb
push
mov
pop
add
or
not
insl
shlb
sti
es
dec
aad
out
xor
and
cmp
ret
ss
mov
ret
es
or
jmp
ret
out
sbb
jnp
mov
jbe
push
bound
xchg
inc
cmc
movsl
shl
sbb
stos
test
aaa
lods
or
or
push
aam
pop
mov
mov
mov
or
pop
stos
ljmp
js
xor
jle
scas
or
daa
adc
ja
cli
popa
jle
xchg
push
iret
push
rorb
cli
fdivs
int
mov
inc
and
inc
pushf
arpl
xchg
mov
ret
repnz
xchg
fists
dec
add
sub
scas
xor
test
stc
xchg
cmp
jge
dec
loop
and
and
out
cmp
mov
aam
mov
jl
push
and
aam
and
insb
adc
push
push
mov
push
sub
mov
or
jno
jo
or
outsb
sub
and
sti
mov
js
inc
iret
pop
pop
and
dec
push
cmp
mov
faddl
xchg
push
std
xchg
into
jecxz
cmp
pop
pop
and
dec
insb
sub
mov
pop
leave
das
fnstcw
xchg
loop
adc
add
fistpl
mov
inc
mov
ljmp
cmp
cwtl
inc
cmp
sbb
mov
sub
daa
mov
cld
in
aam
mov
mov
sub
mov
xor
popa
pop
in
sbb
xor
inc
fiaddl
push
movsl
mov
loope
shrl
imul
pushf
sar
cmc
inc
outsl
aad
fcmovnbe
adcl
into
fisttpl
filds
cmp
ljmp
pushf
dec
sbb
fwait
adc
xchg
lods
lahf
fistps
scas
pop
push
ss
pop
add
movsb
sub
fistl
inc
aaa
mov
mov
int3
jl
jae
inc
xchg
xchg
imul
iret
insl
sbb
stos
andl
je
bnd
cmpsb
dec
mov
inc
es
mov
ljmp
fsubrs
popl
dec
xchg
push
cld
mov
pop
gs
loope
xchg
or
inc
cmpsb
fwait
stos
cmp
xor
mov
out
dec
xchg
shll
popf
adcb
lock
cmc
xor
jbe
pushf
enter
aad
mov
xor
idiv
scas
mov
out
andl
or
std
inc
add
jecxz
js
addr16
mov
mov
out
cwtl
xchg
xor
test
mov
lret
mov
push
push
sbb
loope
lea
dec
push
mov
pop
cmp
push
push
out
mov
pop
cmc
xchg
enter
push
inc
adc
ret
aaa
jb
sub
jo
test
sub
or
mov
mov
popa
add
add
cld
das
dec
insl
jecxz
mov
outsb
inc
leave
fs
cmp
and
or
mov
fxch
fisttpll
and
push
and
adc
scas
daa
or
fidivrl
pop
test
mov
mov
push
xlat
mov
in
repnz
pop
sahf
aad
call
rol
call
cmpsl
mov
jae
mov
xchg
aas
push
xor
loop
sub
add
add
and
roll
mov
mov
and
shr
mov
ret
mov
out
push
jno
pop
mov
daa
mov
mov
cli
lods
ds
fbstp
mov
mov
cltd
push
push
and
stc
mov
loop
mov
sbb
mov
std
pop
ret
pop
shll
sbb
cwtl
jb
repz
pop
pop
cmpsb
jg
push
mov
mov
filds
je
nop
insb
or
into
add
test
ss
lahf
pop
in
cmp
push
jb
pusha
dec
push
arpl
mov
das
mov
les
xchg
push
popf
mov
mulb
push
pop
mov
lret
xchg
imul
mov
addr16
push
jmp
stos
pop
sub
pop
data16
outsl
test
ds
mov
pushf
movsb
xor
insl
push
dec
sar
add
jg
mov
sbb
xor
loope
jno
xchg
cmp
jno
iret
js
pusha
inc
mov
pop
in
aas
fwait
test
loope
sub
inc
mov
sti
sbb
ret
out
pop
ret
sbb
mov
aaa
cli
or
cmp
mov
insb
clc
mov
jae
mov
sbb
push
jp
inc
repz
mov
shll
clc
out
fdivrs
out
pop
push
sub
in
xor
and
test
jl
test
push
pusha
mov
cmpsb
rclb
pop
lock
stos
nopl
push
pop
das
sbb
cmc
mul
adc
mov
and
and
xor
addb
mov
xchg
pop
shl
sbb
imul
test
dec
push
xchg
rcl
sbb
dec
sbb
loopne
shll
mov
adc
stos
pop
push
mull
inc
mov
inc
addr16
xchg
mov
clc
xchg
jl
fwait
push
js
cmp
push
add
sub
arpl
adc
mov
add
push
cli
enter
mov
jle
shll
jg
mov
scas
fsubp
or
loop
dec
push
in
jp
sub
xchg
xor
mov
push
sub
inc
mov
xor
or
sbb
xchg
cmp
jb
xor
mulb
out
std
and
dec
or
mov
ljmp
int3
int
jno
inc
mov
clc
aad
ljmp
cmc
xchg
pop
rolb
sahf
cmp
push
lcall
push
jmp
bound
mov
movsl
outsb
jle
jo
push
insb
mov
mov
push
cmove
leave
push
fmul
push
test
cmp
xor
outsl
ud1
mov
clc
dec
sbb
fidivrs
mov
xor
inc
fisubrl
shrb
push
xchg
pop
inc
div
xchg
and
lret
rclb
std
mov
inc
jg
pop
out
inc
int
jmp
push
push
jb
loope
jmp
or
mov
xor
lret
sbb
mov
loopne
in
pop
mov
or
inc
cmp
jmp
mov
mull
mov
xchg
jmp
mov
js
ds
mov
jb
ret
std
dec
cmp
xchg
fcmovnb
cmpl
pop
xchg
xchg
and
lods
dec
cmp
xchg
lock
jle
fnstcw
jmp
sub
mov
pop
in
inc
movsb
inc
pop
test
pop
cmp
ds
cltd
xchg
jp
in
and
mov
rcr
dec
cmp
pcmpeqb
insl
sub
cmp
data16
dec
mov
mov
fidivs
sub
je,pt
cmc
adc
jne
jne
cwtl
jne
cmc
pop
mov
adc
sub
pop
dec
out
sbb
jne
stos
cmpsb
fmull
out
fiaddl
fidivl
pop
lcall
and
jbe
pop
gs
or
pop
ljmp
lcall
jl
mov
pop
test
mul
jbe
repz
push
fnstsw
fsts
popf
enter
add
fxtract
scas
mov
sub
xchg
int
popf
loope
inc
mov
dec
mov
push
in
lock
ficompl
lea
dec
idiv
scas
std
or
adc
or
push
cmp
fwait
mov
xchg
add
pushf
jbe
daa
jecxz
and
cs
cmp
jg
hlt
adc
rorb
mov
sbb
mov
fisubrs
popf
push
xor
add
sub
movsl
fldt
nop
ror
out
sbb
in
lds
jecxz
cmpl
rcrb
sub
nop
jp
rcll
dec
in
mov
and
pop
shrl
aaa
cld
mov
imul
rcll
mov
mov
rclb
dec
pop
or
fmul
adc
popf
cmp
test
inc
clc
aas
in
jge
test
pop
bound
xor
pop
and
lret
movsb
cmpsb
int
das
mov
jg
or
fnstsw
int3
subl
adc
shlb
xchg
lods
mov
xor
mov
jecxz
scas
cmpsb
je
call
mov
enter
movsl
mov
xchg
or
pop
fadds
sbb
mov
push
jae
les
sbb
xchg
mov
dec
xor
adc
cwtl
and
dec
fwait
in
outsb
cmp
cmpsl
cmp
or
mov
pushf
daa
mov
jnp
push
sub
pop
inc
es
in
sbb
push
je
sub
pop
cmp
aas
mov
dec
in
xchg
push
inc
int
push
flds
ds
rolb
sub
push
loopne
inc
test
mov
mov
jmp
adc
ficomps
inc
mov
push
dec
imul
sbb
loopne
ret
xchg
int
jl
arpl
loopne
lret
mov
and
ret
dec
push
mov
jle
data16
fs
les
mov
adc
arpl
cld
mov
ficomps
push
pop
lahf
outsb
leave
fdivs
das
ss
pop
jnp
fmull
cmp
prefetchnta
pop
js
or
scas
push
repz
in
shlb
sti
insl
mov
push
nop
cmp
stos
scas
inc
xchg
sbb
stos
aas
lods
jnp
adc
push
outsl
leave
notb
pop
push
hlt
sub
jg
push
stos
xchg
cwtl
sub
lock
pop
aas
inc
jb
or
mov
adc
into
test
movsb
or
push
out
pop
fists
add
loopne
nop
jns
pop
outsb
mov
ret
push
aad
daa
dec
cmp
lods
xor
cmpsb
cld
mov
xor
push
inc
sbb
jp
lret
iret
xchg
leave
add
mov
subl
and
dec
mov
inc
adcl
dec
cmp
adc
add
clc
test
cli
sbb
inc
cwtl
faddl
js
clc
jne
add
sbb
fmull
insl
fistl
push
insb
popf
cmc
loopne
sahf
xor
inc
movsl
add
add
rcrl
mov
xchg
sub
dec
loop
sbb
adc
jo
add
sub
std
lea
rol
mov
divb
shll
push
in
xchg
mov
and
std
pushf
xor
addr16
push
mov
push
pop
and
rep
sarl
jge
cmp
mov
and
test
mov
ds
jp
add
mov
movsb
xor
xchg
mov
notl
add
cs
lea
sub
aad
ljmp
into
and
fisttps
inc
pushf
jl
push
xchg
into
push
nop
sbb
ret
out
or
and
pop
push
or
mov
dec
stc
and
clc
test
xchg
sti
lret
outsl
and
aas
sbb
push
clc
cltd
lods
insl
stc
xor
int3
nop
insb
jg
dec
dec
iret
scas
jle
aas
in
adc
insb
hlt
ret
xor
aad
leave
shrb
clc
mov
fcomi
xchg
mov
test
int
ja
jnp
push
cmc
shlb
in
cmp
shl
roll
mov
popa
cmc
in
xchg
notb
movsb
in
cs
shll
cmp
push
jne
mov
repnz
sbb
mov
pop
loopne
data16
sahf
shrl
fbstp
pop
xchg
xchg
xchg
cmp
mov
addl
sbb
fstp
mov
xor
fstpl
xlat
mov
mov
test
lahf
dec
inc
xchg
popa
mov
xchg
jne
push
imul
cs
outsb
mov
imul
jbe
cltd
scas
mov
movsl
push
sub
jle
pop
push
and
xchg
mov
jg
sub
aad
inc
mov
aas
roll
fistpl
bound
xor
arpl
shll
lea
das
scas
sub
lcall
inc
jo
or
mov
aam
loopne
jmp
jp
pop
sbb
push
int3
arpl
add
iret
cmp
mov
ds
insl
out
xor
clc
mov
orb
in
cmp
cmp
mov
sub
xor
test
sarl
std
mov
push
insb
out
jmp
xor
cmp
mov
dec
push
sti
dec
jae
cld
cmp
cmp
pop
fsubs
stos
or
or
nop
sbb
and
cli
es
add
fiaddl
lds
out
sub
cli
out
vmovss
loopw
les
loop
mov
xchg
mov
or
lret
sub
mov
xchg
scas
fs
movsl
mov
inc
das
je
dec
mov
jbe
in
inc
stos
jl
in
pop
stos
cmc
jecxz
dec
xlat
mov
push
jb
or
jae
adc
adc
dec
ficoml
jp
mov
and
xlat
enter
push
mov
pop
mov
pop
dec
aas
cs
cmp
push
cmp
insb
lret
xor
add
adc
mov
cltd
push
xchg
cmp
add
fmulp
sbb
fxch
mov
adcb
fstpt
xchg
sbb
and
ror
test
pop
xchg
das
add
push
repnz
ja
sti
sub
pop
push
popf
outsl
push
sti
cmp
sbb
mov
mov
add
add
cmp
fstps
push
test
shrl
inc
sub
sbb
sahf
mov
mov
or
fwait
daa
push
jno
pop
cmpsw
ret
adcl
lahf
or
push
cmp
jge
aaa
in
bound
push
xchg
popf
enter
in
sete
dec
movsl
inc
leave
sahf
roll
xor
add
insl
aaa
lret
xchg
push
push
mov
mov
inc
test
inc
call
xorl
dec
sbb
mov
stos
pusha
xlat
rol
add
cwtl
pop
shl
ret
loopne
sub
push
dec
lret
stos
inc
xlat
rolb
sbb
push
inc
xlat
outsb
icebp
jmp
test
dec
mov
and
dec
dec
dec
ret
orb
shrl
out
dec
sar
ljmp
push
sbb
shll
pop
xchg
fs
addr16
xchg
scas
sbb
scas
jo
xchg
inc
adc
and
xor
rolb
ret
xchg
aad
cs
xchg
mov
cmpsl
popf
add
dec
push
and
movsb
es
xor
xor
dec
push
clc
js
push
push
pop
mov
lods
pop
and
jecxz
repnz
cmp
jl
jmp
jge
inc
or
and
sub
mov
inc
aas
xchg
sarb
sarb
fmuls
sbb
push
mov
or
jmp
imul
jecxz
loop
add
fs
push
int
add
jb
dec
jo
imull
in
xorl
mov
and
cltd
rol
lds
insb
fs
push
cmp
mov
rcr
rcll
adc
mov
and
cltd
ss
loopne
outsl
clc
or
cmpsb
loopne
cmp
fwait
in
mov
pop
mov
lahf
xchg
fidivs
jecxz
mov
ljmp
movsb
xchg
add
inc
loopne
xchg
push
mov
mov
mov
dec
test
jl
and
test
pop
lahf
lods
aaa
push
and
nop
jge
lret
adc
add
jb
js
bound
call
xchg
push
pop
or
into
in
push
mov
dec
cli
xor
adc
cld
mov
sub
inc
call
ret
js
jmp
xchg
std
rcrl
mov
mov
sbb
test
and
jo
inc
add
jo
shr
jnp
jp
aaa
and
mov
outsl
jnp
testb
mov
push
pop
push
icebp
nop
dec
lret
dec
push
sbb
pop
cmp
push
push
aas
fstpl
and
jo
pop
push
aas
mov
ja
call
sub
scas
mov
js
or
inc
cmpb
and
cmp
add
pop
push
sub
test
inc
or
xchg
mov
andb
push
jmp
fildl
xor
and
rclb
xchg
dec
es
imul
sbb
out
aam
shl
xlat
daa
cmp
mov
aas
and
test
adc
and
cmp
cmp
cmp
mov
pusha
pop
jmp
sbb
test
and
mov
or
mov
push
sti
dec
data16
inc
jnp
cmpsb
inc
cli
int
inc
or
sub
dec
and
mov
push
sbb
test
fs
sti
jns
sti
sbb
pusha
or
xchg
arpl
fbstp
push
push
mov
sarl
imul
pop
stos
imul
xchg
pop
popf
xchg
add
jns
jmp
dec
cmp
std
mov
ret
xchg
sub
jg
sbb
cmpsl
mov
lret
cwtl
mov
hlt
push
or
insb
in
enter
cmc
hlt
cmpsl
or
stos
dec
daa
daa
add
int3
mov
pop
jne
jne
pop
leave
cltd
outsb
or
and
bound
ret
adc
jl
mov
scas
jae
pop
jbe
sti
mov
ret
shlb
mov
rcrl
inc
cli
mov
lcall
sub
test
jmp
cltd
xor
jae
mov
xchg
leave
jecxz
cmp
jo
jmp
dec
daa
mov
fcompl
fprem1
pop
sbb
or
sti
jnp
test
push
add
out
aas
hlt
cmp
cmpb
das
out
sahf
dec
cmc
add
loope
jge
nop
mov
push
add
popa
sub
cmp
pop
loop
shll
arpl
rcl
stc
imul
cwtl
jl
and
mov
imul
xchg
inc
pop
xlat
dec
pop
jmp
add
je
pusha
mov
cmp
mov
push
pop
dec
call
adc
fsubrl
mov
xchg
cmpsl
pop
pop
test
jle
mov
mov
cmp
popa
aas
xchg
call
jne
cmp
in
pop
fwait
push
fucomip
in
rolb
mov
les
and
adc
dec
stc
hlt
arpl
cmp
inc
into
xchg
adc
jl
lods
mov
or
cli
imul
das
sbb
test
pusha
aam
or
nop
movsb
pop
fdivl
sub
cwtl
jmp
pop
xchg
push
cmp
in
lock
stos
jle
add
dec
inc
loopne
mov
inc
sbb
sar
movsb
outsl
push
mov
in
rorl
mov
iret
shrl
adc
mov
lret
shr
pop
xchg
or
push
and
stos
test
or
movsb
loop
mov
lret
in
sub
pop
pushf
leave
add
xor
pusha
cltd
push
rcll
sbb
stc
xchg
push
ret
inc
int
mov
fcmovnb
flds
arpl
or
movsb
xchg
ljmp
xor
jo
sbb
and
adc
pop
xor
and
aad
es
int3
jmp
andl
scas
call
data16
dec
dec
pop
int
loope
mov
ja
aad
stc
jg
out
cmp
pop
inc
inc
lods
repz
adc
pop
or
push
fadds
ret
xor
mov
cmp
jp
mov
xor
xor
les
rcrb
popf
jns
scas
or
nop
lods
stos
rcll
push
sti
adc
xor
sub
fisubs
pushf
push
inc
fsts
cmpl
jmp
loop
jp
rclb
leave
in
mov
jp
pushf
loopne
out
jle
jmp
xor
xchg
mov
push
int
pop
popf
mov
fs
jecxz
add
xchg
push
clc
movsl
sub
rorb
xchg
pop
in
mov
push
aaa
cli
mov
or
adc
ss
rol
pop
int
push
lret
add
out
int3
pop
add
icebp
push
scas
loope
out
xor
sub
mov
mov
enter
icebp
mov
repnz
mov
int3
mov
loop
cmp
lods
adc
and
mov
outsb
test
add
std
jp
push
lret
inc
or
and
pop
shlb
inc
xor
fwait
sbb
xchg
sbb
sbb
inc
loop
ret
in
cmpsl
les
pop
push
dec
movsb
out
jae
fimull
insb
inc
dec
mov
nop
add
cmp
movsl
xchg
mov
xor
fimull
fsubs
push
xchg
into
sbb
sub
cmp
ljmp
inc
sub
or
out
je
test
mov
push
daa
aaa
add
inc
rcl
gs
cli
pushf
xor
sar
add
mov
add
pop
movsl
adc
sbb
adc
imul
loopne
mov
iret
push
jb
cltd
mov
add
rcrl
sbbb
lods
aaa
call
pop
and
movsl
inc
add
pop
nop
mov
mov
loop
leave
clc
adcb
sbb
aas
adc
jns
fisubl
fucomp
mov
sub
mov
movsb
jl
adcb
ret
js
push
lock
icebp
xor
dec
sub
xor
fcoms
stos
nop
addr16
sub
dec
fldenv
or
mov
pushf
mov
aaa
mov
jbe
fimull
sbb
test
imul
mov
stc
jo
xchg
pop
or
xor
imul
mov
insb
jmp
mov
mov
pop
ficompl
push
mov
fisttpl
or
shlb
xor
mov
pmuludq
adc
mov
pop
pop
xlat
mov
jb
sub
lds
outsl
push
inc
mov
fcmovu
int3
jecxz
arpl
out
xchg
cmp
mov
ret
jl
push
mov
imul
loopne
xchg
jne
push
adc
orb
pushf
loope
push
lret
popa
cmp
js
dec
xchg
or
xor
push
test
shll
jmp
mov
xlat
cli
mov
imul
push
scas
mov
lahf
dec
mov
xchg
push
insb
mov
ljmp
add
and
sub
sahf
lret
cmp
cmpsb
adc
and
xor
fnstsw
and
jmp
pop
pop
jnp
je
mov
pop
jl
es
sub
ss
jle
lock
mov
insb
mov
mov
mov
sub
inc
insl
inc
cmpb
push
push
mov
lea
in
fiaddl
cvtdq2ps
and
divb
xchg
adc
outsb
jle
fisubrl
test
xchg
shlb
adc
andl
jp
dec
stos
les
cli
pop
int
imul
fwait
lret
ret
sbbl
cmp
jne
cmp
stos
loopne
pop
insb
xlat
and
pusha
fwait
add
aas
inc
or
mov
rolb
mov
insb
jne
ret
nop
daa
add
mov
outsl
and
push
sarb
mov
adc
xchg
daa
ljmp
mov
int
and
jmp
sbb
in
xor
or
loop
cmp
loopne
rorl
lock
mov
xchg
cmp
xchg
or
fstps
out
or
out
aad
orl
cmp
inc
test
test
in
add
jne
sbb
idivb
xchg
fstl
mov
adcl
imull
xlat
in
sub
add
fsubl
insb
arpl
cmpsb
scas
jp
push
lahf
or
pop
imul
push
jae
fcoml
call
sarl
loope
icebp
mov
pop
loopne
mov
mov
dec
mov
addps
pop
adc
scas
mov
in
xlat
testl
mov
inc
sti
and
xlat
rclb
pop
ds
push
arpl
in
xorb
insb
shrl
jge
rol
inc
orb
lcall
mov
loopne
adc
cmp
push
mov
jno
popa
adc
mov
in
dec
add
out
lock
rorl
rep
aas
add
cmp
hlt
pop
insb
inc
inc
cmp
rcrb
jae
cmp
lcall
jbe
pop
push
inc
push
cmpsl
cmp
aad
sub
cmp
xor
push
outsl
dec
je
jns
lahf
push
nop
hlt
push
mulb
cmpsb
ljmp
jecxz
sbb
and
ds
pop
adc
push
cmp
pop
shrl
in
sbb
xchg
subl
push
dec
adc
push
pop
in
fisttpll
ja
mov
mov
rol
inc
imul
sar
in
or
popf
mov
daa
jno
push
gs
jecxz
push
pop
xchg
addr16
pop
imul
jne
aaa
pop
push
call
aaa
test
push
sbb
xor
lds
ljmp
inc
pop
fildll
mov
pop
push
fwait
xor
sub
arpl
in
outsl
popf
mov
inc
js
add
movsl
mov
sub
push
test
cwtl
enter
outsb
mov
cmp
loop
lea
shlb
dec
aad
mov
cmp
pop
aam
push
cmp
std
add
push
repnz
jl
and
jb
mov
sbb
push
xchg
dec
sub
jne
ret
cs
nop
icebp
gs
divb
mov
mov
sbb
add
test
sbb
sub
mov
test
adc
lahf
push
fistpl
add
jmp
mov
add
jp
movsl
jb
jae
rcll
mov
fwait
xchg
int3
cmp
fiaddl
sti
cmp
inc
cmp
fnstcw
push
add
out
sbb
lea
push
sub
sub
jne
cmp
aaa
and
jo
stos
notb
mov
es
push
popf
cmpsl
outsb
jg
push
test
in
aad
mov
dec
inc
imul
cmp
aas
pop
push
pusha
call
shlb
mov
loop
xchg
ds
pusha
insl
nop
ret
sub
add
int
imul
test
inc
or
rclb
dec
adc
ret
enter
mov
out
nop
xchg
mov
xor
push
pushf
mov
mov
mov
rorl
xor
ja
inc
adc
jmp
inc
jp
jge
mov
xor
or
mov
outsb
lea
andb
inc
push
inc
sub
xor
jg
mov
popa
mov
stc
or
jne
sbb
movntps
or
jge
in
adc
sub
mov
dec
js
lds
cs
or
ss
dec
sbb
jg
pop
pop
fsubs
mov
pop
or
cmc
fsts
mov
cld
push
fldenv
xchg
test
pop
and
sti
xchg
push
in
xor
imul
int3
sub
ret
adc
push
inc
movsl
push
push
adc
mov
dec
aam
lret
mov
loope
mov
pop
mov
adc
pop
inc
mov
lds
mov
sub
outsb
sub
pop
lds
rcr
add
sbb
sbb
jg
mov
loopne
lret
les
mov
push
sbb
cmp
hlt
les
mull
cmp
outsb
mov
and
adc
push
sub
xchg
daa
sahf
push
jmp
mov
hlt
dec
mov
xor
xor
cmp
out
mov
sub
lods
lock
xor
addl
xchg
add
xrelease
xchg
push
lret
and
outsb
xor
xlat
les
xchg
das
call
mov
or
ljmp
jae
shlb
jbe
mov
mov
jo
jg
jbe
xor
xchg
mov
lea
push
jg
jmp
aam
adc
pop
pop
inc
dec
push
ss
cs
xchg
or
mov
fwait
fwait
test
lods
and
sti
popa
xchg
rorl
jl
dec
je
dec
sub
shll
scas
fcomps
ljmp
add
mov
inc
out
repnz
and
push
jg
daa
and
testl
sub
repnz
scas
xchg
xlat
and
out
sbb
mov
dec
aam
test
sub
aas
mov
je
push
movsl
inc
mov
sub
mov
int3
pushf
xchg
jmp
push
and
fdivrp
in
repnz
mov
push
rcl
pop
inc
mov
mov
add
pop
int
add
out
cwtl
rorb
sbb
sbb
std
mov
orb
repz
aam
adc
dec
mov
xchg
and
fwait
add
pop
inc
mov
pop
lods
push
sub
shll
sub
push
in
cmp
aas
adc
pop
subb
sbb
and
notl
xor
mov
sbb
inc
push
sbb
add
mov
adc
pop
jmp
xchg
mov
sbb
pop
push
adc
lods
push
fisubs
scas
pop
pop
xor
sbb
and
sbb
pop
sbb
int
daa
xchg
sbb
lods
out
push
daa
inc
cmp
lcall
cmc
dec
mov
mov
stos
sub
enter
arpl
bound
mov
test
push
and
mov
mov
data16
push
mov
inc
ret
adcb
in
pusha
mov
mov
pushf
fidivs
mov
adcb
je
les
mull
iret
lcall
test
shlb
ss
mov
popf
jecxz
call
push
or
sub
pop
or
jb
and
inc
pusha
sbb
std
mov
and
inc
push
fistl
xor
leave
push
push
sub
imul
movsl
jnp
add
fwait
nop
jmp
inc
xor
lret
sub
inc
or
pushf
push
shl
in
js
mov
xor
inc
push
sbb
xor
add
insl
sub
mov
repz
adcb
xor
mov
imul
clc
inc
ja
mov
inc
mov
adc
cmpsb
mov
mov
push
inc
test
imul
mov
mov
add
mov
mov
xchg
stc
ret
stos
and
lods
js
jl
movsl
dec
lret
pop
push
push
repz
and
and
stos
and
dec
push
outsb
std
dec
and
dec
cmp
sbb
xchg
sbb
or
loope
out
push
movsl
movsl
cmp
xchg
pop
fsubs
dec
jne
jns
pop
add
mov
cmp
mul
mov
std
cmp
inc
mov
pop
and
insl
sbb
push
inc
inc
sub
lret
aad
ss
test
or
cmp
fstpt
aaa
pop
pop
jmp
jmp
mov
pop
fimull
inc
mov
ljmp
stos
mov
inc
aaa
movsb
js
xchg
jne
cmpsl
loope
and
mov
movsl
in
dec
stos
shlb
push
dec
lods
sbb
push
cmp
mov
jge
sbb
xor
dec
sub
repz
dec
daa
out
push
xchg
repz
cmc
pop
adc
and
rcrl
dec
jnp
xor
mov
adc
sbb
inc
pop
inc
mov
xor
mov
cmpsl
in
repz
xchg
je
mov
aam
loope
push
mov
lds
adc
call
push
movb
inc
icebp
sbb
adc
cmp
dec
xchg
add
or
lret
pop
lret
xor
inc
jne
test
adc
sub
pop
cmp
xchg
mov
or
mov
xchg
aaa
ret
add
pop
or
enter
ds
push
shl
adc
jmp
bound
stos
mov
xchg
jg
lock
fucom
cmp
test
int3
sbb
or
xlat
dec
push
arpl
and
mov
jnp
aaa
cmp
pop
outsl
pop
mov
sub
loop
shrb
dec
push
ret
setge
mov
in
and
aas
and
jl
mov
lock
pop
aaa
pop
out
ret
cmpsb
push
in
fs
enter
add
mov
inc
push
popa
inc
nop
dec
jbe
pop
call
fs
sub
les
jle
out
xor
sub
mov
mov
scas
in
enter
add
xorl
and
mov
sbb
pop
sbb
mov
leave
lcall
gs
popa
out
jno,pt
cwtl
xchg
aam
inc
add
mov
movb
or
adc
push
or
movsb
in
lret
addr16
cmp
cmp
and
dec
aad
lds
xchg
adc
xor
jae
cmp
cmpsb
popl
jp
push
test
add
ja
jae
pop
jle
adc
fs
pop
mov
mov
in
dec
jae
push
outsb
push
jb
mov
and
push
lea
push
aaa
cmp
stc
cld
mov
fmull
and
mov
addl
stos
cwtl
mov
pop
push
cmp
push
cmp
lods
inc
ret
ret
sar
shr
or
or
mov
adc
test
pop
jne
cltd
out
adc
js
ror
jecxz
lret
std
popa
add
ficoml
jnp
dec
pop
inc
out
in
movsb
nop
mulb
outsl
loope
or
xchg
mov
pop
lret
aad
int3
xchg
in
jo
or
add
mov
cmp
lock
cli
bound
dec
repz
dec
push
jne
rcll
aad
mov
gs
sbb
adc
jmp
cwtl
xor
insb
repnz
or
ret
inc
sub
sbb
pop
adc
sbbb
or
xchg
sbbb
mov
loop
sub
scas
pop
inc
mov
adc
lds
lods
test
and
inc
add
mov
data16
adc
cwtl
mov
sub
and
test
outsb
enter
jmp
in
xlat
dec
pop
cmpsb
stos
pop
jo
xchg
in
imul
mov
test
xchg
data16
out
inc
sbb
adc
int3
push
iret
mov
in
je
cli
out
les
pop
ja
arpl
mov
and
push
fwait
arpl
shr
or
inc
bound
js
cmpb
popf
pop
into
stos
std
xchg
in
sahf
sub
imul
inc
mov
fadds
rcll
and
stos
adc
stos
and
xlat
rclb
cld
or
cmp
popa
imul
lods
adc
inc
inc
sbb
inc
mov
dec
inc
add
cmpb
jne
mov
and
aaa
xor
sub
loope
xor
bound
add
mov
dec
sub
or
cmc
addr16
loopne
movsb
test
dec
jmp
rorl
or
dec
cli
sbb
pop
mov
jb
popf
test
cld
cmp
lods
push
daa
cmp
data16
test
push
mov
jle
cmpsb
mov
shlb
adc
add
out
cld
ja
cmp
pop
popa
pop
jb
repz
outsb
dec
dec
repz
push
jnp
imul
adc
cld
lcall
jnp
inc
sub
dec
shl
mov
cmc
sub
int
ret
push
push
pop
inc
not
lret
push
fstps
add
pop
add
test
nop
cmp
mov
bound
pop
scas
popf
jae
lcall
mov
xor
pop
fsub
inc
aam
jp
pusha
cli
stos
ret
aaa
pop
test
shrb
ret
mov
into
fcmovnb
push
inc
xchg
jb
insb
xor
arpl
idiv
mov
ljmp
imul
push
lahf
test
and
sub
ret
lret
mov
sbb
mov
out
call
mov
in
push
frstor
ss
mov
loopne
dec
int
outsl
mov
push
add
addr16
jp
sahf
and
xchg
lods
mov
in
xor
xchg
jle
outsl
xor
add
cmpsl
xor
or
in
movsb
outsl
stos
jb
or
xchg
adc
mov
cmpb
cmc
imul
pop
dec
push
rolb
mov
loopne
inc
repz
out
or
es
jp
push
push
push
adcb
xlat
mov
addb
fsub
inc
dec
lock
andb
repnz
jg
jp
xchg
mov
je
cmc
sub
stos
shll
xchg
addl
or
push
sbb
mov
mov
cmc
pop
out
lods
mov
sub
adcl
bnd
aad
ret
test
out
pop
xor
mov
cmc
scas
pop
lods
sub
out
mov
mov
stc
sbb
sub
ja
cmp
imul
data16
mov
and
cmpsb
das
sarl
jo
mov
sbbl
cmpsb
js
mov
arpl
push
inc
and
dec
push
es
iret
mov
ds
jne
into
and
sti
and
mov
mov
push
xor
sbb
pop
in
xchg
and
repz
fwait
cmp
push
inc
dec
pop
xchg
ljmp
adc
xlat
xlat
pop
xor
mov
into
loope
add
jne
xor
sbb
aam
daa
fwait
mov
push
and
sbb
pop
arpl
or
testb
and
push
cs
idivb
mov
push
je
pop
and
jb
fcoms
stos
imul
fisubrl
xchg
push
adcb
add
test
in
push
loop
sub
pop
js
lahf
daa
out
test
sbb
sub
mov
ficoms
bound
pop
sbb
xor
pop
popf
inc
adcb
dec
shl
cmpsl
pop
gs
fwait
dec
aam
movsl
adc
sub
push
cli
lods
pusha
dec
push
adc
xlat
add
xchg
movsl
test
ret
jo
sahf
cmpb
pop
pop
mov
pop
gs
cltd
lahf
sbb
or
mov
dec
pop
xchg
pusha
jnp
arpl
dec
shl
jns
xor
xor
xlat
pop
or
pop
test
push
dec
pop
or
push
outsb
imul
int
mov
adc
stos
outsb
and
pop
test
fadd
pusha
jne
or
mov
popf
stos
aam
test
adc
rcr
add
push
add
clc
subl
sbb
add
dec
nop
movsl
mov
inc
push
or
or
rcll
inc
inc
bound
dec
mov
and
mov
pop
int3
out
adc
cwtl
test
xchg
push
jne
sbb
mov
cltd
repnz
and
and
jo
inc
pusha
lock
or
iret
ja
xor
xor
lods
sub
mov
les
loope
outsl
and
adc
inc
js
ja
pop
mov
test
jp
mov
cmp
lret
jle
and
pop
stc
mov
in
mov
leave
sarb
sub
xor
dec
stos
push
leave
mov
sahf
dec
adc
dec
lret
cli
jmp
cmp
or
sbb
or
pop
punpckldq
mov
jo
es
ja
mov
dec
push
aam
loopne
fcomps
cli
cli
cmp
std
adc
sbb
stc
xor
sbb
xor
jmp
sti
dec
insb
push
mov
cmp
dec
frstor
ljmp
pop
add
sub
push
fs
hlt
mov
sbb
and
dec
ficompl
insl
xor
test
add
gs
mov
and
cmp
xor
mov
in
testb
outsb
nop
or
mov
lcall
sub
jge
jmp
and
mov
push
ljmp
push
or
in
int3
xor
jge
out
sub
in
adc
push
sub
lds
push
inc
push
repnz
cli
cmc
testb
mov
xchg
loop
push
loopne
sub
mov
dec
out
fcompl
fs
cmp
add
lret
mov
loop
push
inc
pop
pop
jns
ret
xorl
mov
mov
mov
daa
mov
fldenv
add
pusha
test
scas
ret
jl
lcall
mov
rorb
jo
xchg
jns
add
inc
pusha
in
shll
pop
jl
repnz
call
ret
adc
jnp
inc
cld
dec
mov
popa
and
adcb
movsl
pop
lret
sub
mov
mov
adc
or
cmp
xor
orb
fbstp
jnp
fiadds
pop
push
xor
leave
test
mov
test
arpl
mov
push
push
rolb
sbb
xlat
arpl
fsub
mov
loopne
lock
test
notb
shlb
mov
aam
inc
xlat
pop
nop
xor
jge
fs
xlat
cmp
xchg
jae
dec
mov
push
xchg
in
or
and
mov
xor
scas
adc
and
xchg
out
dec
les
notl
out
mov
cmc
fisttpl
test
negb
out
sub
movsb
mov
sbbl
adc
into
rcrl
ss
push
hlt
jno
xchg
mov
insl
jb
clc
mov
icebp
pop
test
leave
push
gs
xchg
andl
mov
jmp
scas
sti
xor
inc
and
test
cmp
nop
push
push
sbb
push
cmp
pushf
xor
and
jle
mov
inc
jecxz
adc
push
mov
jle
pop
and
or
jne
fs
mov
int3
and
and
adc
movsl
ds
fisubl
xchg
add
int
scas
scas
pop
cmpsl
mov
fwait
or
push
aad
inc
jecxz
push
and
inc
dec
add
jp
sar
jae
js
adc
mov
xor
push
je
and
add
cmpb
aas
out
notl
mov
adc
in
negb
sahf
pop
sub
adc
sub
push
jno
dec
imul
add
bound
jp
pop
aaa
add
stos
addr16
out
cltd
sbb
repnz
int3
dec
ficomps
aad
jb
mov
lret
xchg
lods
push
push
adc
xor
ds
cmp
dec
leave
sbb
mov
repz
xor
ret
cld
std
push
fisubs
aad
fwait
jl
repz
es
dec
sbb
movsb
ss
push
addr16
inc
mov
push
pop
ret
ret
add
idivl
jge
or
std
adc
out
xor
mov
dec
sub
fstl
push
lods
fmuls
shll
lea
dec
xor
add
inc
dec
inc
aam
test
sbbl
cmp
aam
mov
out
fwait
sbb
mov
aaa
xchg
stos
adc
push
pushw
sub
clc
cmp
rcl
xchg
stc
add
inc
idivl
lret
outsb
sbb
iret
dec
mov
sahf
loop
out
nop
xchg
sarb
mov
dec
mov
repz
mov
or
jns
movsl
jno
sub
aaa
pop
dec
inc
pop
andb
jns
orb
xor
mul
mov
jo
and
cld
dec
inc
into
mov
hlt
xor
inc
lea
cmp
andb
adc
and
dec
cmpsb
xchg
cli
or
in
cmp
jp
loope
sbb
and
inc
lods
clc
inc
lods
in
lods
or
fistl
fldenv
lock
stc
jl
ljmp
lret
fcmovb
mov
add
test
add
sub
jne
and
test
inc
into
mov
sub
popa
push
pop
adc
fiaddl
cmovle
cmp
test
pusha
xchg
les
cmp
xchg
push
frstor
and
jae
lods
push
stos
push
in
or
push
dec
sbb
scas
jge
adc
xchg
fldl
push
cmpsl
jno
ja
out
and
pop
stos
push
dec
dec
cmp
cmc
or
ror
js
hlt
jge
or
push
xchg
hlt
imul
rolb
lret
push
xor
arpl
mov
sub
dec
push
or
xchg
sub
add
movsb
sub
add
xchg
adc
nop
cmp
mov
jle
iret
or
xchg
adc
in
popf
mov
mov
fcmovbe
add
not
xchg
and
loop
int3
enter
adc
jp
movsl
or
and
lods
fistpll
xor
ret
sub
jae
les
icebp
pusha
iret
testl
xchg
push
sbb
stos
push
or
in
lret
mov
pop
mov
lret
repnz
repnz
imul
and
ja
xchg
ret
test
adc
bound
ret
mov
aam
cmpsl
mov
pusha
aaa
cmp
ficoms
loop
xor
sarb
push
stos
jne
inc
mov
sub
xor
test
fnstsw
and
push
mov
out
mov
into
stc
adc
scas
or
inc
push
shll
push
pop
and
pop
clc
ss
cld
adc
jbe
in
in
js
sub
fcmovbe
or
pop
stc
mov
mov
dec
cmpsl
jo
cmp
jecxz
mov
dec
mov
inc
push
xor
popf
icebp
push
fstpt
mov
pop
push
int3
sbb
sar
loop
jne
in
mov
sti
xchg
push
and
jl
mov
push
js
xchg
sub
lods
jg
push
pusha
mov
mov
repnz
lods
push
pop
sub
rorl
mov
and
inc
push
stc
mov
jg
enter
cltd
xchg
test
mov
adc
fwait
je
cmp
not
sbb
lea
rcll
paddsb
in
inc
push
pop
lahf
mov
dec
mov
pop
lret
jmp
cmpb
lock
xchg
mov
fsubs
xor
xchg
pop
push
mov
push
int3
push
bound
ret
lret
pop
lock
sar
fistps
dec
jbe
popl
repnz
mov
inc
sub
or
mov
mov
cmp
cld
mov
rcr
cmp
cmc
movaps
pop
insl
in
sbbb
mov
adc
mov
call
sub
pop
dec
out
repnz
cmp
jge
pop
leave
mov
popf
sub
cmp
arpl
cli
sbbb
scas
xor
push
xchg
xor
movsl
sbb
mov
xchg
and
insb
sbb
loopne
add
jbe
sub
or
fisubrl
or
sub
mov
inc
sbb
inc
sub
dec
mov
fwait
pop
xor
jno
sub
int
push
adcb
loope
mov
xchg
popf
jae
sti
aam
insb
mov
out
inc
imul
out
into
je
xchg
fnstenv
test
icebp
pop
xchg
clc
sbb
jmp
pop
sbb
push
dec
and
xor
xchg
stc
or
ss
add
push
pusha
add
outsl
mov
mulps
and
sub
pushf
rcll
xchg
dec
out
dec
out
xchg
movsb
add
add
cmpsl
and
push
mov
sbbl
push
jmp
insb
add
sbb
std
jnp
push
imul
pop
or
pusha
and
test
mov
sbb
nop
inc
outsl
or
imul
mov
mov
dec
pop
lods
call
adc
jl
add
cmpsb
push
mov
add
mov
xchg
ret
fstl
adc
adc
jae
push
adc
mov
xchg
leave
int
sbb
inc
xchg
insb
fnsave
adc
add
mov
cli
pop
xor
shlb
or
push
in
mov
ja
push
f2xm1
mov
stc
imul
inc
or
dec
ret
loop
mov
jno
jae
mov
ds
dec
fistpll
pop
les
testl
sbb
push
arpl
inc
jle
sub
cmp
push
cmp
push
mov
mov
push
push
mov
add
test
pop
pop
or
and
adc
sbb
xchg
dec
adc
jp
xchg
inc
out
mov
lds
inc
in
clc
or
sarb
inc
sub
mov
mov
dec
cmpsl
xor
xor
addr16
and
jle
movsb
dec
call
hlt
mov
lock
and
xchg
aam
mov
fidivl
fistps
adc
sbb
call
inc
dec
push
sub
fstps
aas
hlt
ljmp
jge
dec
cmp
xchg
shll
fsubs
addr16
fs
or
mov
arpl
test
mov
fs
adc
xchg
icebp
stc
add
push
adc
xchg
inc
and
ficoms
sbb
pop
mov
pop
fwait
pop
popa
test
sbb
or
dec
inc
cmp
jecxz
inc
pop
xchg
and
inc
or
fucom
in
inc
nop
fisubrl
push
fdivs
push
movsb
lds
inc
in
fistpll
imul
jnp
or
gs
ljmp
pop
sarb
pop
fildll
push
jge
mov
mov
push
jae
inc
sub
iret
sub
loop
daa
repnz
pop
lret
and
mov
jb
loop
lock
cmpsl
mov
pop
adc
mov
outsl
jp
jnp
xor
or
inc
or
mov
call
jae
xchg
loope
orb
out
fmull
mov
mov
cmp
negl
arpl
shl
fcmovbe
xchg
xor
push
mov
in
stos
ret
in
xor
add
lods
mov
pop
mov
clc
lcall
mov
in
xlat
testb
inc
xor
call
fldl
jl
push
imul
sbb
test
pop
push
arpl
leave
sub
ss
sub
pop
call
add
jo
pop
stos
das
or
mov
jno
loop
mov
loop
test
adc
arpl
cld
mov
loope
vmovlps
cltd
enter
outsl
stc
mov
jmp
mov
testl
jnp
out
cmc
idiv
jbe
rolb
es
jle
cli
or
and
and
inc
jne
mov
mov
jno
movsb
cmp
cmp
nop
lods
int3
or
in
mov
divb
cld
mov
stos
mov
cmp
mov
incl
into
pop
fisttps
inc
jb
enter
js
pusha
jb
cmpsl
rcll
movsb
xchg
pop
scas
mov
mov
in
jmp
jb
xchg
pop
xchg
pop
cltd
xor
cmp
addr16
mov
sub
and
js
adc
scas
xor
xor
insb
sub
jmp
cmp
xchg
sbb
lret
leave
ds
pop
push
mov
fisubrl
dec
test
push
in
outsl
jp
sub
roll
iret
xorl
mov
xchg
adc
xlat
mov
or
pop
xor
jmp
jbe
repnz
mov
nop
outsb
mov
push
in
xchg
fdivrl
push
sbb
and
cmpsl
cmpl
mov
adc
sub
enter
outsl
mov
jb
inc
jbe
xchg
loop
adcl
pop
inc
lds
test
mov
add
sub
ss
out
push
mov
push
xchg
inc
xor
push
push
or
cmpsb
cmp
dec
cmpsb
jmp
gs
xchg
mov
xchg
dec
std
pop
cmp
inc
into
mov
in
pop
ds
mov
push
nop
and
and
jg
jge
aam
in
daa
pop
nop
adc
mov
sbb
xchg
fisubrs
add
mov
pop
mov
cmp
inc
sbbl
add
push
xor
stos
mov
dec
adc
xchg
int
mov
mov
iret
jbe
movsb
icebp
xchg
xor
loopne
stos
pop
cmp
inc
cmp
lcall
jo
mov
cli
shll
sti
add
add
gs
stc
lcall
sub
dec
xchg
dec
dec
mov
hlt
adc
js
sub
int3
clc
test
jecxz
mov
arpl
push
lock
dec
insb
mov
hlt
xor
pop
dec
pushf
adc
mov
add
push
mov
sbb
int3
xor
mov
mov
inc
inc
mov
les
fisubl
pop
out
push
dec
fcomp
fsubs
inc
mov
push
pusha
outsb
mov
out
push
or
subl
rcrb
jl
ss
cmp
fwait
mov
xchg
and
fnstsw
lock
repz
or
jbe
fwait
shlb
pop
xlat
push
push
inc
repz
xchg
ljmp
adc
sbb
out
aas
xchg
icebp
sub
sbb
jmp
xlat
fstps
mov
shlb
loopne
scas
or
adc
fmull
mov
imul
sub
lods
add
cwtl
adc
pop
out
rep
pop
push
cwtl
idiv
ss
lds
dec
fists
sbb
mov
outsl
cli
sbb
cmp
mov
cmp
je
fcmovnu
mov
rdmsr
jecxz
or
call
push
imul
ficompl
push
jbe
lds
daa
mov
popf
push
daa
jge
test
xchg
js
lds
mov
mov
in
jae
mov
jl
aaa
out
and
gs
jb
lcall
movl
imul
push
ret
sbb
xor
adc
add
mov
inc
sub
mov
mov
into
mov
inc
pop
out
cmp
outsb
jp
add
fs
pusha
mov
push
inc
jecxz
in
push
jbe
sbb
xor
cmp
shll
push
imul
mov
adc
push
xchg
lea
jns
adc
jo
pop
xor
in
sub
xor
dec
mov
cltd
add
mov
shlb
je
or
icebp
imul
cmpb
shl
xchg
xor
bound
lret
popf
inc
movsl
dec
pop
fdivl
mov
shlb
adc
jl
add
xchg
test
or
scas
mov
adc
xchg
jbe,pt
and
inc
inc
adc
add
dec
das
jo
add
aam
stos
adc
and
or
shrb
pop
lods
mov
out
arpl
lea
xchg
pop
cmp
mov
pop
fisttpl
and
outsl
adc
aaa
mov
gs
pop
dec
mov
push
push
repnz
cmpsl
mov
adc
cld
dec
test
jbe
rcrb
orb
bound
sbb
xchg
scas
out
mov
addr16
mov
jmp
test
dec
shll
fcomp
and
jmp
jmp
mov
adc
outsb
test
cli
push
dec
dec
leave
xchg
mov
jmp
lods
lahf
insl
lret
aad
fsts
or
sbb
or
lahf
ret
repz
sbb
in
daa
xor
ss
xchg
fwait
sarb
inc
adc
mov
fdivr
pop
aaa
mov
stos
push
bound
sbb
mull
out
in
popa
mov
xor
jmp
cmp
or
sbb
lret
add
pop
xchg
adc
jae
lea
pop
mov
aad
mov
mov
test
xchg
lds
hlt
sub
pop
in
jno
sbb
pop
bound
mov
ljmp
test
rcr
dec
fsubrl
inc
int
mov
inc
dec
je
fsts
cmpsb
pop
pop
mov
lea
neg
fdivrp
shrl
lret
mov
scas
and
int3
sub
lea
aam
popa
hlt
test
test
xlat
in
aas
mov
adc
addb
xchg
daa
daa
cmp
mov
push
mov
ret
sbb
xor
cmp
jecxz
ljmp
cmp
mov
xchg
inc
sbb
mov
out
lcall
add
movsb
pop
pop
cwtl
xor
jmp
adc
add
adc
enter
mov
sbb
loop
ljmp
call
imul
sbb
or
and
dec
add
sbb
shr
xor
pusha
aad
fisubrs
mov
push
cmpsb
jns
inc
repz
stos
xchg
fwait
call
ficoml
lret
jl
fnstenv
mov
push
add
push
xchg
cmp
xor
aad
movsl
aaa
out
imul
imul
cltd
pminsw
inc
push
shlb
out
scas
js
dec
inc
rcl
enter
aad
jbe
aaa
inc
push
xchg
xchg
das
nop
shlb
xchg
hlt
dec
xchg
pop
loop
sahf
mov
dec
inc
mov
orl
mov
sub
fnstsw
xor
cmp
inc
mov
xlat
xchg
or
and
out
or
inc
jo
mov
imul
andl
push
mov
stos
addl
cs
cltd
sbb
lret
lds
mov
cmpsb
pop
testb
ljmp
and
xchg
aaa
sub
out
outsl
pusha
mov
movsl
sbb
push
je
push
and
mov
cwtl
cmp
push
or
or
movsl
dec
loope
push
and
jns
insb
jne
mov
mov
movsl
jbe
add
mov
cmp
int
es
mov
add
mov
dec
mov
lods
inc
lcall
inc
and
punpckhwd
inc
add
repz
out
pop
sbb
push
pop
ja
mov
push
sbb
pop
jae
push
cmpsb
je
cmpb
scas
or
adc
aam
cmpsl
or
lock
into
lock
xor
jb
es
daa
sbb
mov
and
dec
jne
mov
and
insl
dec
pop
rorl
push
cmp
loope
mov
pop
jp
lea
clc
adc
ljmp
pop
mov
cmpsl
subb
or
loope
imul
out
gs
sub
add
mov
and
mov
ss
push
frstor
mov
nop
and
std
std
add
mov
lock
idivb
nop
out
fidivrs
mov
ds
jl
pop
jg
testb
mov
or
sbb
in
pop
es
mov
out
cmp
xchg
les
adc
shrl
lea
adc
into
sbb
ljmp
push
xor
sub
jg
xchg
out
sub
pop
repz
scas
je
mov
iret
sub
lret
rclb
and
outsl
xor
sub
jecxz
icebp
callw
icebp
inc
push
dec
sub
mov
inc
iret
xorl
push
popa
sbb
scas
pop
icebp
aas
ror
dec
push
loop
pop
imul
repz
push
xchg
xchg
push
xchg
add
add
lcall
pop
cli
mov
pop
dec
loop
adc
mov
mov
test
sub
pop
dec
bound
jb
and
dec
loopne
fiadds
xchg
mov
mov
repz
test
pop
std
push
jne
pop
sbb
adc
fwait
cmp
or
mov
xchg
mov
lds
jbe
jbe
add
push
inc
sub
dec
arpl
test
cmpsl
loop
out
jns
aas
and
xchg
sbb
pushf
jo
fisubl
shll
cmp
int
mov
cmp
adc
das
xchg
fldl
xor
adcb
add
incl
call
mov
adc
cmp
faddl
imul
jg
jmp
and
fstl
and
jno
sar
mov
cmp
jbe
repz
insl
add
mov
insb
mov
in
xor
in
int
test
inc
int3
mov
adc
adc
jbe
dec
js
push
nop
push
lret
mov
dec
jne
push
pop
push
inc
inc
add
push
popf
adc
into
dec
push
jnp
fwait
leave
jecxz
fadds
in
dec
adc
stos
dec
mov
add
pop
out
pushf
pop
int
test
jns
xchg
ret
lock
cltd
imul
mov
fidivrl
sti
sub
push
aas
int3
sub
sbb
sbbb
adc
xor
lcall
stos
lahf
arpl
lds
test
shll
sub
out
gs
dec
inc
xlat
repz
imulb
and
enter
shlb
call
push
push
sbb
xchg
vpunpcklqdq
pushf
push
mov
and
jne
lds
rclb
pushf
popaw
fwait
roll
addl
cmp
in
cmp
sbb
adc
mov
stos
ss
xchg
idivb
call
jo
enter
sbb
push
pop
jnp
repnz
out
and
xor
movsb
push
imul
mov
fildll
je
mov
mov
and
shll
imul
jle
xor
add
andb
dec
insl
mov
pop
pop
ret
mov
out
jne
test
add
lds
push
movsb
push
insl
scas
lcall
pop
ss
mov
addb
mov
adc
pushf
pop
cmp
outsl
mov
mov
lret
mov
scas
cltd
cmp
mov
pushf
add
jae
cs
xchg
mov
movsl
call
or
bound
inc
mov
pop
pop
mov
push
hlt
push
adc
cmp
jne
pop
cmpb
sarb
popf
loopne
cmp
cmc
shrb
mov
sub
adc
or
in
repnz
in
cltd
rcll
sub
fcomps
mov
adc
repnz
ja
divb
push
sahf
sub
pop
mov
jns
imul
pop
adc
loop
lds
push
cmp
sbb
decl
xor
adc
adc
shl
push
pop
inc
pop
add
jg
stos
shlb
test
insl
or
mov
fimuls
cld
call
out
xlat
movups
mov
dec
mov
jge
jbe
xor
xchg
leave
repz
mov
andl
adcb
call
or
add
dec
test
lea
outsb
int3
push
mov
enter
push
inc
js
jb
roll
lcall
pop
mov
sbb
xor
xlat
arpl
sub
add
aas
mov
push
cmp
enter
push
ret
cmp
test
nop
stos
fstps
pop
dec
mov
jge
lcall
pop
mov
push
cltd
dec
dec
mov
xor
negb
xchg
rcr
fwait
mov
dec
push
ret
mov
popf
lds
adc
dec
pusha
pushf
dec
xchg
add
xchg
add
mov
in
adc
roll
out
clc
dec
outsb
mov
jnp
sub
aas
movsl
movsb
jno
fistpll
es
imul
sbb
bound
insl
testb
or
and
add
and
mov
repz
or
dec
lahf
data16
inc
test
and
rorb
mov
lcall
lret
in
cmp
add
mov
lret
sub
sub
cmc
inc
xorl
sti
cld
lods
fmulp
push
push
add
push
in
clc
sahf
xchg
adc
in
xchg
mov
lcall
in
push
mov
jecxz
into
adc
dec
daa
cli
test
pop
js
fs
ret
pop
jg,pn
roll
mov
inc
insb
sbb
lcall
movsb
je
mov
popf
lcall
in
test
lcall
jae
mov
push
loop
jp
clc
insb
dec
bound
rclb
popf
imul
fbstp
ds
daa
inc
addl
mov
ds
sbb
sti
sti
push
push
cmp
shr
and
outsl
fisubl
cmp
mov
insb
cmp
mov
sbb
push
fucomi
add
xorb
mov
sub
mov
call
je
arpl
adc
pop
inc
pop
int
mov
mov
mov
adc
dec
mov
or
aam
out
pop
mov
sub
xchg
sbb
push
inc
pop
inc
pop
xchg
ret
js
inc
nop
or
cwtl
dec
adc
mov
xor
repnz
mov
and
jle
adc
mov
jbe
cmc
inc
jle
lret
js
adcb
mov
pop
fcmovne
loopne
jno
jne
jp
call
leave
dec
popf
jge
jp
es
scas
mov
add
cli
dec
out
das
fistps
jge
clc
push
in
fldln2
fnsave
push
dec
cmp
loopne
jg
in
push
push
xor
scas
lret
fmulp
stos
cmpsl
test
sbb
les
cmp
push
sub
or
fmulp
loope
fucom
lods
cmp
js
addb
jns
out
das
sub
ja
pop
or
xor
mov
pop
nop
lahf
dec
mov
insl
out
scas
sbb
adc
jmp
loop
dec
test
pop
imul
push
lcall
stos
xor
shld
or
les
js
and
orl
scas
xor
mov
faddl
rcl
imul
js
outsb
mov
pop
lcall
je
ds
mov
negb
or
call
mov
adc
loopne
xchg
sti
stc
and
sub
test
push
sbb
imul
xchg
xchg
adc
js
xorl
rorb
or
lds
or
out
lock
and
iret
add
inc
mov
and
sbb
shrl
and
int3
xlat
int3
enter
mov
push
lods
jge
scas
test
mov
pop
sub
fstps
xor
stos
ret
jae
aad
sbb
jbe
icebp
push
mov
push
dec
sti
xor
inc
hlt
mov
test
cmp
lret
mov
pop
add
inc
xchg
loope
daa
push
stos
push
sbb
flds
jmp
popa
mov
movsb
cmpsl
cmpsl
sbb
out
fstpt
into
push
adc
and
dec
incl
adc
out
dec
movsl
icebp
pop
xor
dec
je
repz
lods
gs
xor
jecxz
mov
imulb
outsb
mov
inc
popa
mov
jmp
pop
lds
aaa
jecxz
lock
inc
aaa
xor
jae
fwait
dec
jl
xchg
jl
shll
in
scas
and
mov
sbb
fstps
aas
je
out
mov
cli
xchg
sbb
add
inc
in
inc
stos
or
shl
cli
js
roll
xor
sub
push
mov
push
or
in
lods
test
arpl
dec
and
fs
pop
adc
mov
pusha
pop
hlt
into
inc
mov
xchg
or
cli
sbb
call
popf
popa
adc
stos
or
rcll
ret
cld
mov
xchg
aam
das
adc
jle
scas
aad
shll
iret
in
inc
notl
cs
mov
adc
mov
dec
mov
andl
subl
cmp
inc
mov
xchg
xor
repz
scas
cmc
push
into
out
adc
cmp
mov
dec
lret
pop
out
int3
xor
adcl
push
lret
and
gs
cmpsb
iret
pop
pop
xor
pop
imul
mov
lods
mov
xor
divl
jge
orl
inc
cltd
call
mov
pushf
repz
jo
jno
stc
sub
sub
or
sbb
mov
push
xor
insb
add
movsb
pop
jle
jmp
ret
sbb
cmp
jno
and
mov
inc
mov
xchg
jno
aam
xchg
pop
push
mov
je
inc
jl
dec
cmp
or
fldenv
mov
shrl
mov
into
in
mov
fst
shlb
jmp
scas
inc
into
jo
fprem
push
pop
in
hlt
aaa
test
rcll
jmp
jne
sub
mov
ja
jo
cld
je
ss
insb
dec
cs
rcll
and
lea
jo
xlat
push
aaa
adc
add
aas
fnstenv
cmp
sub
pop
mov
xchg
lods
xor
js
xchg
daa
ljmp
jb
jno
mov
dec
mov
or
ret
popf
shlb
adcl
cmp
leave
xchg
and
xor
xor
sti
jbe
and
sub
jle
adc
or
notb
ljmp
int3
xor
jno
arpl
mov
ljmp
adc
shrl
inc
fidivs
jae
adcb
fstps
or
mov
clc
or
lahf
pop
movsb
sbb
pop
orl
lods
xchg
int3
int3
iret
fists
dec
bound
pushf
loope
jg
cmp
pop
push
mov
push
mov
mov
push
jnp
pushl
fcomi
add
add
into
lret
push
aaa
aaa
or
mov
ret
je
add
fs
xor
pushf
xchg
mov
sbb
sbb
jnp
rcrl
sbb
jge
mov
pop
sub
mov
pop
in
fnsave
xchg
fnstcw
or
xorb
call
xchg
mov
mov
add
or
stc
aam
aad
fsub
jecxz
out
popf
das
pop
repz
or
adc
dec
cmp
push
iret
lahf
aas
movsl
push
pop
lods
sub
inc
xchg
inc
xor
xchg
jb
std
adc
pop
rcll
frstor
cmp
subb
test
inc
in
imul
out
imul
mov
data16
das
ret
mov
xchg
pop
mov
pop
inc
dec
movsl
cmpsl
adc
sahf
sub
add
out
sub
push
bound
imul
pop
jmp
push
inc
pop
sti
jo
add
xchg
sbb
xor
les
xchg
cmovle
or
roll
mov
jmp
push
push
adc
cltd
inc
and
imul
cltd
int3
loopne
in
dec
xchg
sbb
in
jo
mov
pop
jne
das
rcll
jmp
mov
in
ja
xor
subl
mov
cmp
enter
pop
xor
mov
sbb
pop
hlt
lret
mov
cmp
imul
mov
aam
cld
ror
dec
adc
jne
add
imul
mov
sbb
and
stos
adc
push
pop
sub
imul
and
js
je
mov
scas
test
jnp
pop
mov
call
repnz
and
icebp
fld
add
pushf
xor
pop
mov
mov
pop
cmpsl
inc
add
les
cmp
ret
fs
mov
cmpsb
loopne
mov
mov
sbb
inc
mov
dec
lods
fstpl
ret
sarl
call
sti
lock
cmp
xor
fmull
imul
push
sbb
cmp
movsb
addr16
enter
icebp
ljmp
pop
arpl
add
flds
movsb
jnp
adc
rorb
mov
jns
testl
es
enter
mov
mov
push
sbb
xor
mov
inc
movsl
mov
mov
cmpb
lods
or
ss
sbb
mov
ds
ljmp
dec
ret
xor
int
add
push
rcl
pushf
mov
sub
aam
push
or
mov
and
mov
popf
mov
stos
mov
inc
ljmp
insb
loopne
dec
fdivl
arpl
jno
stc
fcmovnu
xchg
packsswb
fldl
xchg
dec
pop
xchg
mov
sub
xor
inc
push
adc
imul
in
cmp
sub
jns
mov
dec
shll
push
jl
adc
out
or
ja
sub
mov
inc
stc
sahf
push
and
cmp
insl
cld
arpl
mov
dec
mov
push
shl
mov
nop
mov
mov
icebp
ds
inc
sti
mov
adc
mov
sub
fbstp
stc
aaa
ss
xchg
scas
outsl
rcrl
adc
pop
mov
xchg
pop
rclb
pusha
cmp
cli
cmp
dec
shl
js
imul
xor
dec
add
xor
stc
or
lods
outsb
fdivr
mov
fidivs
lds
test
push
jle
shld
and
push
dec
xchg
mov
fadds
fwait
cld
sbb
lret
jmp
outsb
sub
dec
jae
pop
pop
int
pop
lret
lds
mov
push
lret
mov
cmp
mov
gs
inc
out
add
pop
jbe
jp
leave
sahf
jns
pop
cmp
pop
push
imul
or
insb
imul
ret
imul
ljmp
aas
mov
pop
jb
mov
or
xor
pushf
xchg
jns
shll
ret
mov
mov
mov
test
rcl
out
pop
pop
out
aas
adc
sub
pop
dec
es
call
lret
int3
inc
mov
sti
das
add
test
pop
mov
pop
test
inc
mov
jge
sbb
cmp
int
ret
jae
test
mov
icebp
dec
cmp
enter
cli
gs
shll
xchg
push
pusha
pop
or
mov
mov
dec
pop
adc
shr
xchg
shld
xchg
adc
mov
push
and
and
call
sbb
xor
inc
cmp
aaa
pop
cmc
ljmp
push
insl
push
roll
inc
inc
mov
shll
scas
or
xor
or
cmovns
inc
mov
cmpsl
mov
or
jecxz
dec
push
ret
fidivrs
fwait
xchg
aam
fists
sub
lret
cltd
dec
sub
mov
loopne
sbb
sbb
scas
loop
shl
fisttpll
push
std
cmp
mov
xchg
and
xor
ljmp
outsl
out
mov
mov
sub
xchg
lea
inc
mov
pop
pop
mov
sti
scas
ds
inc
bound
imul
rol
call
gs
lret
jg
idiv
cmpb
loope
shl
add
ds
arpl
enter
cs
mov
xchg
mov
push
lret
xchg
shll
sbb
cmp
outsb
sbbl
adc
inc
xor
mov
out
mov
je
push
ret
jb
scas
and
out
ret
je
mov
loopne
mov
rcrl
scas
sbb
mov
lea
or
into
ret
aam
movsl
test
sbb
jne
rcl
add
jne
insl
push
cld
or
mov
mov
xor
into
jle
mov
pushf
xchg
jae
or
xchg
dec
test
inc
inc
inc
fildll
lret
imul
mov
mov
loope
push
rorl
fadd
xor
sub
enter
loop
cltd
out
or
and
pop
data16
out
sti
dec
mov
push
loope
cmp
outsl
addb
mov
xchg
test
jle
ficompl
inc
int
mov
push
in
sub
inc
popf
fildl
sub
fisubs
pushf
xchg
call
sarb
jmp
jbe
inc
and
out
ljmp
scas
jg
xchg
test
movsb
inc
xlat
cmp
jb
test
repz
or
cmpb
call
xor
ljmp
mov
lods
inc
cmp
mov
add
inc
or
rclb
loope
add
sub
inc
pop
mov
sub
test
mov
push
dec
cmp
scas
jb
nop
stos
xlat
imul
ret
mov
mov
or
addr16
leave
and
leave
daa
mov
xor
inc
mov
outsb
mov
fisubl
sarl
pop
push
adc
rorb
ja
pop
pop
outsl
mov
and
jge
jle
jecxz
xchg
mov
outsl
lret
icebp
das
fwait
mov
jl
mov
in
shl
jle
adc
es
lods
mov
inc
and
dec
lar
scas
sub
or
ja
jge
adc
push
pushf
inc
add
aas
sub
xchg
addb
imul
ret
bswap
cmp
es
ja
jae,pn
stos
in
or
outsb
push
sbbl
mov
ret
cmp
inc
sahf
xor
mov
mov
decb
adc
xlat
or
sub
cltd
inc
ja
and
jp
dec
jae
mov
and
cmp
sub
ja
pop
dec
xor
sub
out
push
pop
mov
in
test
in
outsb
iret
roll
push
inc
ret
adc
loop
cmp
adc
jbe
inc
push
lret
or
jns
push
add
out
out
rcrl
mov
mov
scas
fsts
mov
cltd
push
enter
out
icebp
cmp
cmp
ljmp
pop
shl
mov
arpl
inc
jl
or
dec
clc
call
ljmp
push
movl
cltd
enter
popf
lret
jle
pushf
and
jl
shlb
xor
pop
xchg
or
dec
mov
xchg
lret
lea
mov
push
push
inc
movsb
fcoml
ljmp
xor
in
mov
add
filds
js
mov
xor
sub
mov
sbb
test
ficoml
push
sbb
nop
xchg
jns
jne
arpl
sub
shlb
stos
adc
stc
cvtdq2ps
fsubl
xor
into
jle
push
incl
or
sti
scas
jle
ds
stc
dec
insb
mov
jb
sbb
pop
mov
sub
xchg
subb
pop
cld
pop
js
cld
in
outsb
inc
pushf
aam
shlb
inc
sbb
das
stc
or
pop
out
arpl
cmpsl
loopne
xchg
sbb
fstl
sub
testl
pop
or
callw
adc
popa
xor
mov
aaa
mov
mov
adc
dec
fwait
and
and
add
mov
fstps
out
stc
push
into
xchg
int
lods
mov
repz
ljmp
fstps
outsl
mov
push
lds
jo
outsb
cmp
push
xchg
pop
or
jmp
cmp
or
inc
ret
test
xlat
das
frstor
je
cld
or
and
sbb
pop
andl
pop
cmp
jae
call
xor
adc
xor
rorb
incl
xor
cld
popa
add
jl
push
add
add
ret
test
pop
aas
sub
jp
cwtl
sbb
call
adc
xchg
leave
lcall
movsb
pushf
addr16
lret
repz
arpl
mov
pop
jl
test
push
test
inc
cld
out
in
ds
addl
inc
adc
jne
jl
scas
jg
negl
mov
pop
popa
xor
xor
push
xchg
scas
iret
cmp
mov
dec
sti
push
fimull
in
pop
lret
insb
xchg
lds
cwtl
push
or
int
mov
data16
pop
sbbb
test
lds
push
test
fcmovb
pop
imul
nop
dec
sub
xchg
pushf
inc
inc
adc
inc
add
arpl
shrb
stos
sub
fdivrs
fcom
lods
loope
inc
movsl
lea
pop
outsb
push
cs
ja
push
pop
cmpsl
movsl
pop
shlb
jg
lock
inc
cmp
add
cmpsb
test
iret
pop
movsb
out
push
adc
int3
sub
popf
push
loopne
test
pop
out
mov
outsb
lods
fsubrl
js
mov
xchg
push
shlb
call
popa
and
int
fisttpll
cmpsb
repz
mov
mov
and
gs
jb
push
lods
fldl
lods
adc
insl
xchg
in
adc
das
test
popf
rcl
addl
mov
daa
mov
mov
outsb
adc
jo
mov
pop
push
dec
cs
iret
or
clc
add
cmp
jns
xorb
idiv
in
push
or
mov
int3
inc
add
sbb
jno
inc
sub
stos
dec
cmpsl
out
mov
lock
pop
int3
imul
jmp
ror
jle
xor
je
insl
push
jb
pushf
jecxz
rolb
in
fld
lahf
jno
in
xchg
dec
sub
lret
sub
popf
test
mov
mov
fstpl
lahf
jle
dec
aad
jecxz
jmp
cwtl
inc
mov
pop
mov
dec
sbb
movsb
aam
mov
or
loope
jb
sub
ds
push
cli
scas
iret
pusha
mov
mov
out
neg
cmpsl
gs
iret
add
dec
out
or
jo
mov
mov
fdivl
sub
or
jle
ja
adc
xchg
dec
pop
push
clc
dec
insl
or
pop
cmp
cli
cmp
sub
nop
add
inc
pop
pop
rcrl
frstor
lock
shr
roll
mov
js
sbb
jae
cmc
push
mov
into
cmpsl
scas
inc
clc
adc
push
push
jecxz
add
pop
scas
push
shl
fmul
mov
in
add
imul
imul
aad
inc
jg
icebp
lock
xchg
mov
hlt
ficompl
cli
insl
out
pop
pop
and
or
outsb
stos
sub
adc
jge
cmp
enter
mov
push
jp
ret
dec
std
je
sahf
pop
pop
stos
and
push
jecxz
lock
js
xchg
cli
enter
addr16
sbb
cmpsl
aam
outsl
mov
scas
adcl
decb
dec
fidivs
jo
dec
xor
icebp
sti
cmp
push
push
mov
orb
lock
sti
push
fildll
loop
mov
jnp
jo
repnz
mov
loopne
fdivl
add
pop
sub
jns
ja
std
xor
sbb
mov
push
xorb
mov
leave
sub
lret
adc
push
add
scas
adc
inc
pop
pop
pushl
or
stos
cmpsl
push
js
jne
negl
push
lcall
inc
and
inc
adc
push
sysret
shlb
inc
and
pop
add
stos
in
fcmovb
into
arpl
mov
inc
repz
out
lods
aad
xorb
and
in
adc
loope
int
adc
or
ja
lods
dec
test
outsl
fcmovu
inc
out
jl
cmpsl
jae
sti
mov
les
mov
cli
jmp
jle
adc
xor
xor
out
das
cli
pop
xchg
cmp
insb
lock
stos
push
mov
add
rclb
add
repz
mov
imul
mov
and
sub
mov
daa
or
or
dec
sbb
dec
stos
pop
test
setl
cmp
outsl
xlat
mov
mov
mov
push
adc
push
add
add
jo
xchg
xor
jmp
enter
lods
push
out
mov
cwtl
fwait
mov
push
jb
push
fldl
mov
and
sbb
adcb
cltd
aas
or
pop
int
loop
movsb
sub
int
mulb
sub
sub
inc
sub
pop
and
pop
pop
dec
fiaddl
aaa
inc
mov
or
es
pop
decl
pop
fwait
cmpb
cli
movsl
stos
test
nop
mov
and
push
repz
std
fsubl
fldenv
shll
sti
sbb
movsb
test
sbb
jmp
decb
xchg
test
and
jge
fisubs
or
out
sub
and
out
sbb
rcl
mov
dec
pop
into
aaa
popf
in
inc
test
mov
push
push
jns
sub
outsb
jp
jmp
and
mov
push
adc
aad
add
mov
mov
xlat
mov
mov
sbb
jnp
jmp
pop
dec
cltd
and
lea
jl
xor
jae
enter
mov
ss
sti
mov
xor
mov
cmp
lock
leave
pop
mov
adc
cs
les
or
inc
mov
adc
mov
jl
mov
lea
lret
outsb
jno
and
jns
adc
mov
mov
jb
push
clc
xor
in
pop
push
push
push
fwait
ja
mov
pop
mov
fidivl
jbe
out
mov
ret
cmpsb
pop
mov
jge
out
iret
in
test
mov
jecxz
jle
pop
inc
inc
push
push
mov
jle
xchg
mov
sbb
push
sbb
in
insl
loop
pop
mov
mov
xchg
lock
pop
rolb
mov
dec
in
out
mov
subl
add
jns
sahf
pop
stos
push
sahf
out
pusha
pop
int3
scas
clc
add
sub
jp,pt
out
out
int
push
inc
jp
pop
xchg
push
jne
pop
ss
adc
sahf
ds
adc
inc
jp
xchg
loopne
sub
cmp
add
in
or
lds
dec
inc
stos
fimuls
in
icebp
shrl
mov
sub
jmp
mov
xor
movsl
pop
outsl
mull
shll
out
or
std
add
shl
test
aaa
push
pop
idivl
inc
push
mov
ret
gs
out
push
pop
pop
cltd
dec
mov
mov
ret
rclb
shrl
lods
add
push
xchg
fdiv
jno
mov
fisubrs
mov
in
shrl
mov
and
popa
pop
hlt
mov
jge
loope
and
les
pop
jle
call
sbb
ss
arpl
dec
xchg
xlat
cmp
sbb
add
enter
jg
adc
gs
add
enter
jmp
adc
mov
xchg
sub
add
fwait
xrelease
sbb
jg
inc
sti
scas
mov
sbb
xorl
insl
sub
sbb
add
sbbb
mov
rorb
in
push
xor
push
aad
inc
and
mov
leave
pop
leave
jbe
les
cmp
sub
in
sti
mov
mov
daa
ljmp
dec
lds
jb
sbb
fld
jbe
mov
mov
mov
repnz
fsub
into
mov
mov
outsl
adcl
fdivl
lea
daa
sbb
mov
push
add
movsl
sbb
loopne
xchg
popf
jmp
xchg
inc
adc
mov
xor
in
dec
arpl
data16
std
add
fistps
outsb
insl
sub
xor
push
scas
test
xchg
mov
fwait
push
das
out
sbb
mov
cmpsb
decl
cltd
pop
aas
jb
inc
inc
dec
sarl
jg
dec
adc
scas
mov
push
es
cmc
jp
movb
mov
ret
sub
lock
nop
lret
fwait
push
pop
xor
hlt
loopne
jns
aam
push
gs
push
push
push
insl
mov
sub
test
pop
sahf
inc
jp
iret
cmp
pop
adc
push
mov
or
mov
or
xchg
push
xchg
add
stos
adc
xchg
pop
lcall
pop
push
les
lods
stos
rcrl
mov
lcall
jo
pop
stc
push
cmpsb
testb
das
adc
test
xchg
xlat
cmpsl
mov
dec
fadds
call
cli
adc
repnz
js
inc
mov
pop
sbb
fidivrs
out
lods
adc
xor
dec
cmp
add
pop
psrlq
testb
movsl
add
jno
jge
out
mov
sbb
add
jnp
mov
push
lret
xor
xor
idivl
cmpsl
adc
jl
js
pop
pop
inc
aam
fs
add
je
out
push
lcall
call
adc
mov
or
cmp
dec
rol
dec
jle
fiadds
test
and
mov
shll
out
popa
cmpsl
loopne
mov
iret
pop
mov
jl
repz
das
mov
ffree
push
lret
push
into
stos
scas
jo
jmp
popf
push
xor
xchg
xor
inc
cmp
in
mov
xlat
loope
mov
outsl
mov
jle
mov
int
cmc
push
aas
arpl
adcl
jo
inc
mov
jg
sbbl
in
xor
mov
sbb
sbb
andnps
mov
nop
aam
push
and
das
hlt
scas
psrlq
daa
outsl
lock
sahf
dec
repnz
push
leave
int3
cmp
fldl
and
test
push
adc
ret
inc
mov
mov
movsl
mov
std
enter
mov
mov
pop
dec
dec
push
mov
dec
jnp
test
shll
movsl
pushf
mov
roll
repz
inc
lock
cwtl
xchg
into
mov
aas
xor
mov
inc
cmp
mov
inc
call
jle
pop
and
inc
cmpsb
sahf
mov
ror
call
jle
into
testb
nop
push
and
add
bound
jl
sbb
sub
mov
pop
cwtl
mov
mov
adc
and
jae
mov
movsb
jns
scas
sub
jne
daa
cld
out
xor
push
inc
push
fldl
pop
inc
sbb
inc
dec
xor
jmp
dec
in
aad
and
inc
andl
push
xor
xchg
mov
inc
into
cmp
push
sub
inc
inc
xchg
cltd
outsl
es
cmp
ja
fisttpl
xor
push
out
lret
ljmp
sub
xor
call
jl
insl
fs
stos
icebp
shll
punpcklbw
inc
add
jl
cmp
mov
out
inc
int
dec
sbb
pop
aad
fstp
dec
push
push
mov
xor
dec
testl
adc
lods
fs
sti
in
loope
popa
leave
and
scas
cs
popf
sub
shlb
inc
fcoms
xlat
lcall
and
mov
icebp
or
push
ret
mov
lret
jg
push
fdivl
call
xor
ja
sti
dec
fisttpll
sbb
stos
cmp
movsb
test
jnp
int3
jge
sub
imul
xchg
imul
adc
cmp
iret
bound
mov
das
mov
orl
sub
iret
test
xchg
cs
push
daa
and
lods
pop
fwait
jge
sbb
daa
fimull
pushl
loope
push
je
inc
imul
mov
in
scas
and
mov
fwait
das
out
dec
rcll
add
push
push
bound
outsb
das
repz
sar
push
mov
cmc
insb
add
push
iret
aad
mov
xlat
jo
addr16
lret
loop
add
cmpsl
xchg
xlat
push
dec
dec
mov
stos
int3
jns
inc
mov
xchg
ret
aad
mov
ret
pop
stos
inc
xchg
sub
stos
jmp
imul
cmp
pop
in
pop
push
imul
bound
xorl
mov
data16
cli
mov
push
jmp
pop
ja
sti
adc
or
dec
cmp
fcoms
fcmovu
jb
test
js
or
out
idivl
jecxz
scas
cltd
ret
sub
aas
or
pop
xor
sbb
xorl
add
pop
or
out
mov
stos
aad
cmp
sbb
or
sub
mov
js
bound
jo
popa
mov
andl
inc
pop
outsb
mov
add
fists
jo
push
mov
lods
call
push
xor
jmp
cld
fstl
mov
push
ljmp
pop
adc
add
mov
repz
mov
pop
or
arpl
loop
mov
jbe
and
pop
mov
test
scas
mov
in
daa
xor
or
flds
push
mov
mov
jg
outsb
and
xchg
cmpsl
jmp
jne
nop
cwtl
push
pop
mov
and
xchg
ret
jmp
test
add
out
cmp
dec
xchg
xlat
rep
scas
rolb
cmp
jnp
jge
and
mov
adc
jge
push
pop
or
add
roll
into
jl
xor
imul
and
leave
std
pop
loop
jbe
adc
ficomps
cmc
ljmp
stos
and
push
lea
insb
xchg
mov
push
loopne
sbb
lods
mov
mov
cmp
imul
jae
xchg
ss
in
or
dec
push
sbb
ss
pop
adc
push
ja
les
mov
push
not
fcomps
mov
fstpt
add
adc
or
xchg
mov
add
or
imul
test
outsl
dec
shrl
insb
sahf
je
and
inc
and
es
adc
subb
ja
aam
ficoml
push
in
mov
repnz
loope
mov
pop
cli
in
imul
and
pop
and
ret
call
mov
out
mov
pop
mov
adc
push
mov
dec
xor
jmp
sbb
loopne
lds
mov
stos
xchg
dec
jbe
fadds
and
add
pop
shrb
mov
icebp
not
fs
dec
subb
jg
aam
test
sbb
push
or
inc
clc
test
in
shl
dec
jae
clc
test
mov
xchg
cmp
adc
cli
dec
popa
sti
mov
aaa
jno
mov
mov
fiadds
push
popa
xchg
push
shl
into
je
andl
jbe
punpckldq
popf
incl
les
imul
mov
cmpl
add
ss
mov
cwtl
or
add
jne
dec
add
jge
into
mov
in
mov
cld
test
lret
popa
les
jo
sub
in
add
mov
cmp
and
in
repnz
jb
cmpsl
filds
inc
fldenv
cmc
jecxz
test
mov
mov
fwait
stc
sub
jnp
cmp
test
fstl
push
and
fidivs
arpl
xlat
cmc
xchg
mov
loope
es
mov
ljmp
jecxz
cmp
andb
mov
mov
mov
xor
sti
je
daa
xchg
sub
fmull
add
mov
sub
adc
test
inc
jle
jbe
icebp
stc
mov
xchg
xor
into
loopne
jb
icebp
mov
pop
sbb
in
in
ja
dec
rcrb
loopne
bound
in
xchg
stos
push
inc
mov
dec
sbb
mov
faddl
adc
jge
xor
fld
mov
mov
inc
mov
test
pop
add
pop
pop
rcrl
std
arpl
mov
jl
or
add
loopne
loopne
cmpsb
add
test
mov
xchg
inc
add
mov
dec
pop
cmc
jmp
sar
jb
dec
fwait
je
push
mov
add
pminub
cmp
ja
push
xchg
push
idivb
movsl
adc
push
pop
push
mov
fnstsw
xor
pop
jb
leave
adc
mov
sbb
jo
popw
sub
dec
rol
jmp
cli
sub
out
test
ljmp
in
stos
push
in
dec
mov
lods
pusha
in
cld
int3
inc
xor
out
test
mov
loop
add
sbb
mov
adc
test
sub
mov
fsubl
dec
and
sub
jb
cmp
test
push
adc
jmp
push
xor
cmp
jb
dec
push
mov
js
inc
jo
lds
sub
xor
add
and
mov
pop
fbld
and
iret
es
nop
sub
fnstsw
cmc
mov
sub
adc
pop
inc
xchg
call
lcall
pop
cmpsb
into
or
sub
jno
jge
xchg
cmp
inc
out
popf
cmp
mov
jbe
adc
clc
inc
sbb
mov
cmp
stos
scas
adc
xor
pop
aad
inc
and
jp
jns
mov
cmpsl
push
ds
sbbl
adc
sbb
mov
mov
cmpb
stc
addr16
pop
fwait
jecxz
or
cmp
mov
push
cli
push
mov
jle
cmp
add
cli
push
mov
cmc
adc
fistl
inc
insb
fcompl
stc
push
les
out
enter
iret
pop
mov
cmp
xchg
movsb
in
into
xchg
push
sub
fildll
lahf
test
dec
in
std
push
mov
dec
xchg
jg
xchg
mov
jbe
jbe
jmp
mov
add
lret
sbb
divb
dec
sub
cli
or
push
inc
push
fstl
and
jnp
mov
jb
hlt
sti
xor
jmp
sub
movsb
mov
shrl
push
pushf
out
lahf
scas
sbb
or
jecxz
push
and
add
mov
dec
mov
jno
pop
in
xor
imul
ffreep
mov
xchg
shrl
and
dec
pop
into
je
jge
mov
ficoms
pop
adc
pop
prefetchwt1
loope
movsl
sahf
mov
shl
or
imul
ffreep
xor
out
fwait
es
lret
push
sub
andl
push
ret
mov
mov
ss
adc
push
cmc
lret
shll
imul
or
and
inc
add
and
xchg
push
test
lcall
pcmpgtw
lock
lret
das
addr16
lock
and
push
mov
repnz
sbb
test
lret
in
xchg
cmp
ret
adc
cmp
and
mov
jmp
fnstcw
add
xchg
add
mov
cmpb
mov
lods
jge
std
cld
push
cmpsb
outsl
repz
ret
pop
cwtl
inc
fldcw
add
add
out
inc
sar
in
adc
imul
shlb
adc
and
mov
xor
dec
iret
jp
jno
or
inc
or
pop
cmp
push
test
mov
mov
std
pop
movsb
clc
adc
es
jecxz
pop
xchg
mov
or
int
test
mov
fidivl
sub
pop
scas
lods
inc
push
add
les
mov
xor
jl
jns
clc
adc
inc
sar
push
stos
lods
adc
dec
dec
divl
sub
push
out
dec
pop
push
inc
xchg
ss
divl
fwait
or
sub
test
icebp
xor
testl
enter
adc
mov
cltd
dec
adc
push
cmp
adc
or
add
mov
in
sbb
or
xchg
negb
lea
test
jge
xor
sbb
mov
and
sahf
pop
mov
das
pop
xlat
test
jbe
addr16
stos
fs
xchg
cs
mov
pop
aaa
mov
and
xchg
push
sbb
repz
xor
adc
xor
cwtl
pop
rolb
nop
adc
push
dec
push
fcompl
mov
jmp
xor
lods
sahf
jle
jge,pt
sahf
xchg
and
xchg
and
cmp
dec
in
and
dec
fistps
push
or
lds
jno
insb
mov
repnz
adc
iret
mov
xchg
xchg
out
push
push
addr16
test
lret
in
ret
in
ret
pop
pusha
xchg
sbb
test
mov
stos
pop
xlat
rcrb
mov
test
movsl
adc
jno
sarb
push
in
pop
push
jmp
or
sub
or
mov
cmp
or
sbb
push
bound
cmp
push
adc
dec
rol
xchg
mov
sub
mov
xor
and
lahf
pop
or
stos
inc
or
lea
in
into
xor
loop
mov
fimull
pop
rcl
movsl
mov
clc
lret
adc
mov
pop
lss
ret
cmc
mov
ret
jne
pop
das
push
lock
mov
mov
push
mov
imul
and
ret
rorl
das
bound
adc
mov
dec
sbb
jmp
test
push
cmp
fmulp
cmp
fnstcw
mov
add
or
mov
stos
gs
dec
stos
jo
push
mov
push
out
xchg
xor
pop
cmp
xor
cwtl
loopne
stc
test
inc
mov
ret
mov
adc
andb
jecxz
xchg
xor
scas
dec
lret
jns
mov
mov
out
xor
andb
mov
ljmp
xchg
in
loopne
arpl
movb
fs
fcmovne
jo
pop
dec
mov
hlt
out
jno
sahf
pop
jns
inc
jno
fdivl
sti
push
call
int3
lods
xchg
or
or
mov
sub
into
loope
das
outsl
xchg
xchg
scas
fidivrl
fs
push
lods
add
nop
out
in
not
jp
cmp
push
sbb
fucomp
or
frstor
repz
push
mov
jo
pop
mov
movsb
push
mov
mov
xchg
sub
jg
mov
daa
mov
pop
pushf
inc
lret
xchg
mov
sub
mov
repnz
sub
or
in
mov
add
sbb
in
fldenv
lods
imul
fadds
lods
mov
jl
add
ret
loopne
insl
test
fs
into
iret
mul
fcomps
jb
addr16
outsl
leave
stos
xchg
insb
andl
push
and
movb
inc
fwait
std
cs
push
mov
daa
jg
out
sub
pop
fnstenv
mov
test
cli
jae
jo
mov
orl
nop
fstl
xchg
dec
adc
addb
movsb
fisttps
lods
fldt
add
out
test
test
pop
or
xchg
mov
sbb
mov
mov
push
addr16
inc
xor
cmp
out
cmpb
cmp
mov
lret
movsb
mov
hlt
ficompl
cwtl
push
push
mov
xchg
mov
aam
iret
dec
mov
or
adc
and
push
and
push
fsubrs
test
mov
out
xchg
pop
fs
pop
sub
nop
sarl
lret
sbb
dec
negl
shrl
in
pop
inc
xor
mov
je
sbb
push
imul
sarl
ljmp
dec
or
pop
loop
in
inc
lods
mov
in
mov
insl
pop
mov
icebp
and
mov
push
lea
divb
cli
sarl
jnp
jp
loopne
pusha
mov
repnz
cmp
xor
xor
mov
cli
push
test
popf
adc
dec
jb
pop
and
scas
add
xchg
inc
cmp
mov
loope
or
sub
cltd
sbb
lahf
sbb
cmpsb
push
and
dec
addr16
popa
xlat
push
in
jns
pop
mov
adc
jbe
stc
test
enter
pop
cmp
repz
ss
cmpsl
pop
inc
arpl
mov
pop
sub
add
mov
xlat
in
clc
iret
mov
shr
inc
jbe
cs
iret
dec
ret
mov
insl
xor
repnz
pop
fldenv
outsb
outsb
insb
fsubl
fmull
movsb
add
jno
xor
jp
test
mov
pop
inc
sar
add
in
cmp
stc
loop
loop
pop
add
js
lds
mov
sbb
cmp
sarl
push
dec
nop
pop
and
mov
in
dec
jns
pop
and
inc
lcall
jp
xor
xchg
xchg
ret
insb
sub
xchg
lods
addr16
in
das
in
lret
sbb
cmpsb
outsb
ret
pop
sub
mov
jp
mov
push
mov
xlat
inc
and
cmp
cmpsl
and
cmovnp
loope
fcoml
ja
movsb
push
push
dec
dec
fnstsw
or
mov
out
dec
push
in
or
out
in
jae
test
icebp
es
movsl
jbe
sbb
mov
hlt
test
cmp
and
mov
mov
cwtl
pop
gs
ljmp
fwait
insb
out
les
mov
fwait
mov
push
das
add
jnp
mov
test
in
das
push
sbb
imul
xchg
ss
das
sub
xchg
cmp
popl
xchg
out
jo
das
sti
push
sub
and
mov
jns
lea
or
mov
mov
adc
inc
sbb
push
jo
lret
or
flds
push
loop
xor
bnd
out
loopne
orb
loopne
mov
ret
add
jg
fisttps
hlt
mov
adc
insl
xlat
xor
cmp
pop
stc
and
pop
inc
inc
pop
mov
mov
inc
jbe
pop
loope
insl
push
icebp
js
into
loope
mov
test
mov
aas
and
push
sbb
popa
sub
pop
add
lcall
push
lock
ss
fcomip
ss
cmpsl
xchg
ss
push
or
loope
dec
xor
push
jp
and
mov
adc
jae
xchg
ljmp
sti
andl
int3
adc
outsl
pop
pop
fs
dec
sub
mov
test
mov
pop
outsb
mov
cmp
mov
add
pop
fsubrp
xor
fistl
popa
andb
ror
jbe
jecxz
adc
sub
mov
rclb
mov
sti
cmp
push
in
mov
mov
lret
adc
add
ficompl
dec
out
xchg
sbb
cwtl
mov
add
push
or
leave
and
xchg
std
mov
fwait
lods
addr16
aam
es
popf
cmp
sahf
xchg
pop
mov
and
adc
dec
inc
iret
inc
push
mov
aad
test
push
cmp
fidivrs
mov
sarb
dec
sub
pop
sub
or
pop
outsb
xchg
imul
sub
sar
inc
call
aam
mov
push
mov
test
repnz
jnp
mov
push
push
lret
mov
jge
ja
adc
xchg
sbb
shl
jbe
adc
scas
fistpl
sti
mov
sbb
xchg
test
lds
enter
push
fdivrl
js
jg
pop
xchg
lahf
les
lea
rcrl
pop
les
mov
popl
push
lods
mov
fcoml
movsl
pushf
dec
mov
inc
sub
cli
ficompl
outsl
mov
aad
and
jg
adc
lret
xor
dec
cmp
lahf
jno
pushf
cmp
fsubl
lods
mov
insl
ret
rclb
sbb
adc
cmp
push
inc
enter
testl
pop
ret
mov
push
popa
aas
int
mov
testb
jle
mov
add
or
fs
cmpl
mov
jbe
loopne
in
and
scas
adc
or
rcrl
jecxz
stos
negl
mov
shl
aaa
sub
inc
cmp
sub
jo
test
inc
mov
imull
std
bound
push
pop
addl
scas
push
add
jns
lods
into
mov
fs
insl
sbb
movsb
in
xchg
sbb
movsl
mov
je
cmp
test
aam
pop
jno
cmc
jp
in
cmp
enter
hlt
lds
hlt
test
adc
mov
cmpsl
dec
loop
pop
cs
xlat
shl
pop
and
sbb
dec
loop
xchg
add
dec
gs
in
outsl
cmpb
icebp
lods
test
pop
adc
push
sbb
cld
outsb
sub
sarl
push
data16
bound
adc
sti
sbbb
enter
or
sbb
insb
dec
xchg
xor
leave
sub
stos
xlat
sbb
testb
and
push
arpl
dec
pop
outsl
mov
fisttpll
dec
dec
das
cmc
fsubrl
and
inc
xchg
jmp
xchg
movsl
pop
lahf
xchg
jl
insl
fists
out
lods
lock
fwait
ret
psubd
adc
cs
add
rcll
repnz
rorb
jge
sti
jg
push
repnz
test
mov
popa
pushf
or
dec
fsubl
stc
test
inc
jecxz
dec
insb
mov
push
movb
xorl
xchg
and
adc
jg
xor
jnp
push
xchg
ljmp
add
jg
popa
dec
add
nop
mov
inc
dec
inc
cltd
outsb
rorl
or
add
adc
cmp
cli
shrb
mov
outsb
insb
popf
mov
sbb
mov
rcll
icebp
xchg
add
lcall
dec
xchg
pop
js
in
outsb
insb
sub
mov
xorb
in
fwait
int3
addr16
stc
xchg
sarl
loop
dec
xchg
aam
jb
push
nop
aad
out
pop
xchg
dec
sti
jnp
sbb
xchg
push
rclb
mov
aaa
lods
dec
stos
xor
sti
repz
dec
loopne
jg
lahf
sub
scas
aad
mov
adc
mov
popa
jns
in
inc
sti
jl
test
cmc
sbb
shlb
xor
inc
mov
add
in
adc
push
xor
mov
xchg
push
je
xor
test
mov
fxch
sbb
loope
push
dec
in
mov
test
adc
inc
int
out
js
jp
push
push
dec
pop
stos
xchg
xchg
fwait
or
push
mov
pop
sahf
sub
jnp,pn
insl
bnd
mov
mov
je
lea
or
clc
cmp
ja
xor
out
mov
aas
pop
pop
add
cwtl
rorl
pop
lock
mov
inc
pop
shll
and
xor
dec
ja
xor
icebp
push
mov
adc
add
add
adc
leave
and
cld
xchg
add
push
call
movsl
in
dec
xchg
cltd
test
std
pop
adc
jb
lret
ficompl
movsl
mov
mov
xor
pusha
clc
bound
jne
cmc
in
cmp
cltd
adc
or
shrd
xchg
inc
sub
xor
pop
add
ds
fcoms
mov
and
mov
dec
dec
movsb
fsubrs
inc
pop
sbb
fdivrs
jnp
into
call
xor
sbb
icebp
pusha
shl
pop
jae
pop
cmp
imul
jb
gs
jmp
jp
cmp
push
push
lods
xchg
rol
pop
sbb
jmp
lret
jmp
xor
sbb
push
stos
inc
adc
mov
mov
push
scas
fstl
test
cmp
hlt
jp
dec
inc
xchg
or
mov
pushf
in
in
or
imul
fwait
mov
mov
in
mov
or
pop
mov
sub
cmp
jb
sbb
cmpsb
lea
sbb
mov
jb
adc
movsl
stos
popa
cmp
shrb
out
xor
jne
sbb
sbb
cmpsb
push
mov
testb
outsl
or
lret
add
mov
cmp
jmp
xchg
ljmp
cmp
add
xchg
jns
sbb
jne
js
sub
xchg
sbb
int
in
push
mov
imul
or
xchg
aas
or
icebp
sub
inc
mov
pop
xor
add
mov
push
scas
and
mov
ljmp
adc
pop
enter
sbb
mov
cli
jb
std
cmp
cmp
std
cmp
cs
xor
pop
dec
mov
aam
jle
jne
dec
arpl
dec
push
or
jge
add
int3
adc
sub
popf
shll
ljmp
cltd
aam
xchg
xchg
data16
jg
mov
test
mov
lds
jle
add
mov
aad
insl
push
mov
sub
sahf
jns
ljmp
les
test
lret
arpl
pusha
fcoml
cmp
xchg
cmp
lea
es
adc
and
push
sub
addb
add
in
ja
adc
loope
sub
mov
mov
movl
add
push
add
jecxz
jge
adc
push
pop
std
fisubrs
in
cltd
outsb
sbb
xchg
fwait
adc
out
jnp
sbb
in
xchg
inc
jmp
mov
lds
mov
xchg
xchg
xorl
shrb
jge
cmc
jl
sbb
xor
daa
jle
or
adc
jp
sbb
and
mov
or
jno
inc
sub
lods
ljmp
arpl
aaa
jne
jne
mull
into
dec
xchg
push
inc
xlat
xor
jno
add
nop
xchg
fmul
cs
sub
mulb
shrl
aaa
scas
pop
dec
pop
add
mov
jg
mov
mov
aas
arpl
les
or
dec
cltd
or
push
mov
cwtl
bound
sub
fisubl
ret
outsb
fdivr
adc
jmp
clc
leave
cmp
das
ss
mov
pop
add
xor
pop
or
mov
rorb
adc
jo
shl
pop
cli
inc
add
or
inc
movb
notb
mov
jg
sub
adc
xchg
call
fwait
arpl
mov
divb
and
jo
aas
mov
push
add
push
daa
sbb
xor
outsl
sbb
iret
mov
lret
cmp
cwtl
cmpb
imull
pop
mov
inc
adc
ds
dec
outsb
inc
pop
xor
in
mov
add
xor
pop
in
mov
dec
ds
and
and
pop
pop
sub
addr16
mov
cli
push
dec
xchg
and
aad
popa
xchg
sbb
cmp
adc
enter
jmp
cmp
test
in
in
ret
out
add
mov
nop
push
rcrl
int
rolb
sahf
mov
mov
in
mov
cmc
xor
out
xor
lcall
addb
fmuls
sub
in
les
in
jge
dec
xchg
mov
and
cmp
xchg
and
lods
mov
push
mov
xor
loope
fs
sti
xor
pop
cmpsl
mov
cmc
cmp
test
imul
jns
test
scas
cmpsl
xor
rorb
fsubs
outsl
sahf
les
pop
or
std
cmpsb
mov
jle
rcrb
les
rcrl
js
lcall
push
orl
lcall
sbb
or
sarb
les
mov
dec
test
or
adc
cmpsb
das
leave
vmread
xchg
pop
cmpsl
sbb
inc
outsl
movsl
pop
mov
xchg
cltd
xchg
mov
inc
mov
daa
hlt
insl
cmp
dec
sti
ror
sbbl
fildll
addr16
pushf
sbb
push
fwait
decl
pop
mov
out
stos
sti
inc
test
rclb
lahf
mov
pop
sbb
push
movsl
xchg
jnp
add
sbb
rcrb
fmull
out
adc
pop
insl
rolb
add
sbb
fnstsw
jp
inc
mov
es
arpl
push
and
push
ror
ds
sar
test
or
xor
mov
out
push
mov
push
cmp
xor
lahf
add
sbb
lret
add
dec
and
jb
movsl
aam
lcall
fwait
les
mov
cmp
frstor
popa
push
ret
push
fldenv
add
gs
dec
clc
or
add
orl
in
or
cmpsb
fisubl
mov
pop
repz
test
jle
test
lods
aad
dec
add
adc
mov
fcompp
test
adc
push
sub
jbe
sub
lret
dec
mov
cmp
test
push
push
lret
loopne
jo
mov
push
add
out
push
ret
adc
push
pop
nop
pusha
xchg
pop
sbb
and
mov
add
test
push
jo
sbb
pushf
xchg
pop
pop
xchg
dec
mov
mov
repnz
xor
ret
cli
aaa
popl
push
mov
lcall
hlt
add
jle
sub
sahf
ljmp
rcrb
bound
dec
push
adc
popa
jne
adc
das
std
shlb
aas
loop
mov
outsl
daa
xor
lret
ss
jle
shlb
shlb
pop
insb
pusha
or
xchg
fsubp
addb
ljmp
sub
fimuls
mov
je
add
add
mov
movsl
xor
into
rcll
push
into
cltd
fwait
jbe
adc
pop
pop
adc
mov
call
outsb
shr
loop
mov
in
or
call
lret
mov
fadds
out
add
push
jle
cltd
lcall
les
in
cld
ret
xchg
fadds
je
lock
xor
dec
imul
aas
stos
jae
pop
jmp
lods
test
inc
sbb
sub
rcll
mov
lcall
fpatan
jl
xchg
repz
mov
and
rorl
cmpsl
jae
clc
aam
loope
push
xor
stos
xor
neg
movsl
xor
mov
jbe
push
and
sbb
xor
or
js
lods
cmp
out
dec
sarl
cltd
divl
xchg
cmp
cld
ret
jg
outsb
pop
fwait
cmp
es
mov
jmp
rorl
jecxz
dec
aaa
mov
icebp
cmp
in
fcomp
xor
andb
cmpb
shlb
xchg
cmp
push
cmp
dec
aas
out
js
in
dec
jno
jae
push
mov
call
sbb
inc
test
repz
lods
push
movsb
cmp
and
or
mov
adcb
mov
testl
or
mov
stc
inc
icebp
cwtl
xchg
push
mov
mov
inc
lahf
insb
test
sbb
inc
sub
sarb
sahf
jmp
inc
test
jne
std
jb
or
dec
xchg
stos
aam
lcall
cmp
adc
mov
sub
cltd
push
pop
sub
inc
test
shll
sbb
or
out
daa
arpl
sub
data16
cltd
scas
pop
loope
jno
cs
lret
xor
insl
adc
ficomps
pop
lock
in
push
pop
add
jo
cltd
div
aam
xchg
pop
sahf
insl
in
pop
loop
inc
mov
mov
in
inc
sahf
into
mov
rcrb
inc
pop
mov
fldt
xor
xlat
adc
mov
ret
leave
js
aaa
sti
mov
pop
lcall
dec
addr16
cmc
seta
pop
sbb
push
dec
cmpsl
cmpsl
jnp
in
cs
or
and
nop
movb
int
mov
xchg
push
xchg
fisttpll
cmpsl
xchg
cmp
mov
int3
mov
cld
add
push
dec
orb
mov
jp
daa
push
sbb
adc
imul
ss
insb
shrb
hlt
aaa
and
xchg
daa
roll
dec
data16
sub
mov
divl
outsb
push
xor
sub
aad
frstor
push
dec
inc
mov
in
xlat
insl
out
and
dec
scas
xchg
push
in
aad
out
lret
push
pop
sbb
fsubs
ljmp
bound
mov
fcoms
xor
push
pop
mov
pop
adc
mov
repz
fcoms
add
push
pop
add
or
les
ja
cmpsb
push
roll
in
pop
fs
sbb
xchg
fwait
sub
inc
call
popl
inc
sbb
sbb
push
mov
push
aaa
cld
sub
pop
cmp
hlt
mov
mov
cwtl
xchg
test
cmp
bound
mov
ss
or
pop
lret
dec
mov
adc
mov
sbb
mov
push
test
pop
sub
jbe
mov
xchg
adc
gs
and
int3
lret
aaa
mov
push
cmp
cmp
mov
pushf
or
push
das
pop
cwtl
xchg
scas
jo
inc
addr16
clc
ret
mov
cltd
rcrl
sbb
pop
aam
lcall
jne
fs
fyl2xp1
sbb
push
setb
sbb
iret
and
dec
scas
rep
add
mov
cmc
shrl
shlb
xor
stos
jle
push
pop
push
cs
mov
add
shll
cmpsb
mov
jg
jmp
rcll
sub
movl
push
sbb
dec
scas
cli
aaa
loop
insb
pop
mov
pop
mov
in
add
and
pop
in
inc
dec
lahf
cmpsb
mov
rclb
lret
mov
mov
rolb
xor
std
inc
daa
inc
std
setns
daa
push
outsb
sbb
jecxz
sbb
lret
pop
scas
push
stos
xor
push
shr
inc
sbb
lahf
shll
out
or
pop
and
mov
clc
filds
sar
rol
fisttps
rol
fidivrs
xor
dec
in
or
or
fcmovne
sbb
cmpsl
mov
dec
aaa
lret
arpl
test
dec
mov
or
int
or
mov
repz
rolb
cmp
xchg
inc
ss
jecxz
push
jns
and
dec
mov
push
int
sbb
popf
jmp
sbb
test
fsubs
adc
cmpb
add
fadd
mov
sub
mov
insl
lock
sarl
inc
mov
push
shlb
rcl
jmp
push
in
loope
adc
lods
mov
sub
lret
cmp
lahf
icebp
scas
and
or
mov
rol
mov
sbb
ret
lods
hlt
imul
jl
jg
inc
fimull
pop
lds
sbb
mov
jo
lods
movsb
cmc
ret
push
daa
dec
adc
xchg
mov
jns
cmpsl
arpl
add
es
loopne
test
adc
jg
mov
pop
loopne
mov
sbbl
xor
adc
or
xlat
or
mov
dec
in
push
in
mov
mov
cmp
cmp
loopne
test
daa
sbb
mov
ret
sbb
mov
jae
mov
leave
inc
cmpsb
fisttpl
inc
mov
dec
int3
loopne
fisttpl
addl
addl
jmp
xchg
aas
cmp
push
or
int3
sub
add
mov
or
or
or
push
cmp
push
and
ror
pop
or
mov
pop
fisubs
ja
dec
pop
bound
lds
ds
popf
jle
sahf
add
mov
aas
adcl
sub
bound
mov
into
daa
mov
add
nop
in
insb
adc
jl
pop
shrb
shr
xor
sub
movb
mov
ja
ljmp
cmp
pcmpeqb
dec
mov
jle
inc
adc
lock
pushf
adc
repnz
fbstp
test
xor
scas
cmp
das
mov
stc
push
fcoms
rcrb
xchg
scas
arpl
adc
pop
pop
nop
dec
jmp
cwtl
jo
imul
repz
push
popa
inc
jg
jno
lret
aad
js
imulb
rol
xlat
dec
jmp
or
add
les
sar
sbb
leave
mov
imul
push
and
ja
mov
in
push
lds
jae
xchg
jo
mov
mov
inc
mov
jp
ss
jno
mov
or
pop
fisubs
add
rcr
int
subl
mov
pop
popf
xchg
in
sbb
insl
push
imul
mov
pushf
std
add
cmpsb
xchg
mov
lock
jp
stc
or
xchg
cmp
add
je
subb
pusha
push
and
jnp
int3
in
lahf
inc
clc
hlt
rdpmc
stos
ds
int3
jne
push
into
push
sbb
jno
mov
ds
sti
into
repnz
outsb
or
cld
pop
push
adc
shl
std
adc
int
lods
sbb
loop
xchg
push
cli
pop
mov
pop
or
lret
jne
and
xor
cmp
loope
scas
mov
mov
dec
or
lret
cld
jno
fisttps
cli
gs
imul
enter
inc
shll
adc
es
scas
fistps
lahf
test
ss
lahf
out
mov
cwtl
das
push
sbb
mov
cwtl
repnz
cmp
adc
pop
mov
scas
cmc
rolb
std
pusha
pop
int
in
and
arpl
add
frstor
xchg
iret
lods
add
sbb
jbe
mov
push
adc
scas
in
insl
jmp
xchg
inc
je
add
cld
add
mov
aam
push
mov
data16
rorl
int3
icebp
cmp
out
shlb
cs
inc
lahf
cmp
and
cmp
fwait
jmp
mov
inc
aam
dec
mov
adc
adc
insl
rcrl
arpl
xchg
mov
jb
add
pop
xor
adc
sbb
repnz
xchg
fdivs
aad
adc
fiadds
ss
nop
movsb
push
or
jns
pop
cmp
dec
add
lret
adcb
mov
je
push
sub
push
lock
inc
fwait
push
aas
sbb
cld
jae
push
sub
mov
movsl
add
adc
add
or
repnz
sbb
loope
bound
mov
adc
imul
push
or
fbstp
xchg
call
mov
and
les
dec
leave
mov
xchg
cmp
negb
aad
pop
insl
ret
test
lcall
pusha
or
push
aam
pushf
xchg
out
pop
dec
or
mov
jne
xchg
pop
or
out
dec
mov
add
ja
and
fmull
sbb
adc
adc
std
jmp
cmpsl
lcall
xor
jle
adc
pop
enter
dec
ljmp
inc
lock
sti
add
push
out
add
and
or
pop
xchg
ret
dec
add
add
push
imul
mov
push
push
mov
and
or
push
arpl
mov
cmp
mov
cmp
xor
and
fidivrs
mov
adc
mov
scas
and
mov
sar
jae
scas
push
pop
xor
out
lahf
call
push
mov
mov
lods
jae
jns
sub
xchg
lds
rol
bound
jo
adc
fsts
inc
sub
jecxz
mov
cwtl
xlat
clc
mov
pushf
scas
jecxz
ret
push
push
sbb
lea
loope
jnp
sti
out
into
sub
aad
out
or
lods
mov
pop
xor
xchg
repnz
or
outsb
jnp
lock
rol
loope
pop
sbb
ja
xlat
or
push
mov
pop
cmp
xchg
xor
js
cwtl
inc
pop
cmc
cmp
mov
fmul
aam
js
es
into
fistps
leave
push
test
push
inc
testl
mov
jnp
or
aad
cmp
insb
and
mov
push
jg
jne
das
loopne
add
lcall
es
dec
repnz
dec
pop
xor
mov
jecxz
js
mov
outsl
iret
push
lea
mov
sub
and
icebp
mov
xchg
movsl
stc
fiadds
loopne
insb
adc
fildl
mov
inc
lcall
mov
lret
xor
cmp
jge
inc
lret
daa
data16
cmpsb
pop
add
pop
cwtl
ss
cmpsl
pusha
cmp
jge
xorl
fisttpl
pusha
inc
fwait
mov
ds
jbe
ret
in
fidivrl
and
lcall
push
daa
fcompl
dec
movsl
or
into
aas
mov
mov
ret
pop
xlat
add
sahf
hlt
add
fwait
pop
sbb
mov
pop
sbb
jmp
sbb
imull
repnz
push
les
ss
push
jns
ljmp
pop
pop
inc
not
leave
iret
mov
inc
sub
movsb
xchg
cmc
xor
cmpsb
fdiv
nop
mov
inc
sub
sbb
inc
adc
and
imul
add
jne
sbbl
dec
in
xor
or
pop
adc
fisttps
adc
push
jbe
test
or
pop
sbb
ss
test
cmp
push
loop
push
aam
push
push
lea
xchg
imul
jp
cltd
cmp
addb
xchg
add
icebp
orl
or
push
sarb
rcrb
ds
decb
loop
rcrl
pop
ret
dec
sarb
sub
test
mov
mov
mov
and
push
sub
sti
stos
add
sahf
or
call
adc
and
stos
and
mov
js
popa
lea
xor
dec
pop
jb
mov
dec
mov
dec
fs
stos
inc
sub
or
lcall
sub
or
xor
stos
pushw
movsl
push
jo
movsl
cmp
xor
inc
inc
fdivrs
movb
inc
fidivrs
push
cs
mov
jp
stos
pop
add
dec
ljmp
popa
mov
ret
lcall
rcll
mulb
test
fsubrs
in
pop
xor
shr
aaa
mov
cmc
insb
xor
xor
inc
ds
shrl
in
fiadds
scas
xchg
je
shl
iret
and
out
icebp
lods
adcl
mov
adc
mov
dec
add
jne
mov
test
iret
imul
jge
mov
mov
icebp
jmp
pop
xchg
lods
jle
ficomps
loop
sbbb
cli
movsl
rcl
in
fnstsw
ds
cmp
add
cmpsb
xchg
inc
decb
sub
outsl
scas
pusha
std
repnz
cmp
mov
aad
pop
push
mov
ja
fldcw
and
push
mov
push
jle
mov
cmp
inc
cmp
pop
pop
icebp
pop
sarb
pop
scas
pusha
or
aam
mov
sti
inc
lea
cmc
call
push
fisubs
loope
int
push
cmp
mov
cmp
mov
out
loopne
das
fstl
popf
pushf
shll
imul
jl
out
stos
sahf
repz
iret
dec
jo
adc
lahf
xor
sub
int
imul
jae
pop
les
lahf
xlat
test
nop
cmc
pop
jl
add
push
fcoms
in
mov
shll
fdivrp
xor
push
xchg
push
cmpl
xchg
in
mov
iret
dec
jns
mov
jmp
or
xor
inc
add
out
stc
adc
adc
loopne
mov
idivl
outsb
xorb
jg
inc
leave
les
out
jbe
mov
lret
test
mov
xor
imul
cmp
adc
imull
fistpl
fisttps
pop
dec
pop
pop
add
daa
arpl
push
aad
sahf
nop
jmp
repz
cs
lods
push
mov
push
jo
xor
pop
fcoml
jl
mov
inc
sub
hlt
int3
adc
leave
xlat
movsb
mov
out
popa
pop
pop
ljmp
into
lcall
lret
mov
lods
push
inc
leave
sub
jp
adc
mov
add
jmp
add
outsb
adc
iret
inc
pop
xor
push
icebp
push
aam
js
clc
dec
in
pusha
fmull
cmpsb
add
popa
push
push
js
jb
jmp
repnz
fdivl
aas
adc
hlt
lret
add
add
loopne
ss
sub
rcl
cmp
push
test
loop
add
push
repz
rol
std
jmp
movb
mov
mov
clc
mov
push
mov
and
xchg
ret
lds
push
das
and
mov
je
xchg
add
out
stos
push
dec
xchg
mov
xchg
mov
xchg
in
pop
andb
icebp
dec
cmp
pop
cwtl
pop
leave
pushf
push
push
mov
lahf
cli
add
pop
jmp
xchg
decl
jns
xchg
roll
loope
icebp
ds
dec
clc
imul
cmp
add
push
jmp
loop
addr16
xor
jne
int
cmpsw
adc
fnstcw
pop
leave
stos
lds
jge
jp
dec
lcall
mov
lret
ljmp
enter
outsl
cmpsb
xor
dec
mov
out
push
aam
add
fsubs
repz
push
aad
jecxz
pop
jb
in
mov
xor
shlb
daa
clc
sahf
jno
push
jbe
jl
push
xor
lret
mov
rorb
adc
jns
shll
ret
outsl
jp
mov
push
cmp
orb
stos
cmc
cwtl
shll
pop
mov
inc
push
sub
loope
mov
or
mov
mov
pop
push
sbb
shr
in
data16
push
xchg
outsb
dec
addl
nop
nop
popf
lret
and
int
xchg
ja
ds
cmpsl
pop
or
adc
cmpb
sbb
push
shrl
sahf
leave
jbe
xchg
out
movsb
cmp
push
addr16
pop
mov
mov
sbb
mov
or
lret
stc
inc
lods
daa
mov
lds
movsb
leave
std
fidivl
mov
das
mov
je
add
pop
pushf
xchg
popa
sub
int3
arpl
dec
jmp
movsl
int
iret
or
scas
test
xlat
sahf
dec
jge
fdivl
outsl
aam
icebp
loop
out
sbb
js
mov
cmpl
ror
cs
outsl
pop
push
sbb
adc
sub
xor
inc
add
iret
jo
fwait
jbe
add
cltd
pop
mov
mov
in
jg
out
inc
mov
jo
and
ret
mov
sbb
mov
mov
cmpb
dec
xor
aaa
cwtl
mov
data16
cmp
adc
jge
hlt
cwtl
jae
fwait
add
mov
repz
jbe
addr16
bound
jbe
enter
stos
xor
jmp
and
pushf
pop
inc
fstpt
cmc
scas
cmp
rcrb
mov
mov
lcall
sub
sub
mov
inc
mov
or
cld
outsb
pop
mov
daa
fbld
movsb
testl
data16
mov
mov
pop
fstpt
mov
sti
or
ja
dec
std
mov
cs
aad
jns
push
sbb
fsubs
or
mov
xchg
movl
xchg
inc
dec
ffreep
mov
xchg
mov
sbb
lds
mov
clc
frstor
add
mov
stos
ljmp
mov
and
int
push
mov
mov
push
pop
pop
imul
push
cmpsb
test
out
or
adc
lods
push
jns
lods
ds
jae
dec
xor
xor
pop
jecxz
pop
mov
lahf
add
fwait
js
ret
pop
push
scas
movsl
fs
imul
shl
push
std
add
push
mov
nop
cmp
fldt
int3
mov
jae
pop
mov
jae
add
dec
or
fstps
inc
ja
shll
mov
repz
mov
cs
mov
sub
dec
jbe
outsb
add
es
stc
insl
mov
inc
cmp
lret
lods
aas
call
mov
jg
xorb
mov
jmp
movl
or
jo
int3
cmpb
inc
outsl
mov
in
add
js
mov
mov
xor
jae
cmp
inc
lock
mov
insb
test
cmpsl
mov
lcall
imul
add
iret
insl
mov
inc
push
fists
cmp
inc
pushf
xchg
sahf
mov
sbb
xor
adc
cltd
aam
fwait
inc
xor
sbb
shr
fcompl
lds
sub
jecxz
jo
jmp
lret
jae
xor
dec
xchg
in
mov
xor
inc
cmp
pop
mov
iret
stos
sbb
xchg
and
stc
dec
decl
inc
mov
ret
loop
lods
insl
pop
fs
stc
cmp
andl
xchg
jl
cli
jb
in
test
loop
mov
xchg
or
xlat
dec
xor
es
cmp
test
mov
adc
scas
xchg
push
jecxz
es
bound
js
pushf
push
push
rcll
fs
movsl
test
and
dec
jl
xor
mov
negb
jge
jle
dec
fwait
push
adc
das
aam
aas
sbb
or
lods
xchg
popa
fstpt
sub
push
add
sbb
mov
mov
cmp
add
inc
movsl
loopne
jns
inc
push
lock
cld
test
ja
inc
pop
stos
punpckhwd
dec
or
in
or
push
call
insb
icebp
or
push
push
in
outsl
xchg
or
xchg
inc
ret
loope
cmpsl
cmpsb
fiaddl
out
sub
leave
test
out
mov
or
mov
ja
xor
leave
add
lret
mov
pop
stc
out
mull
cltd
enter
sub
ret
test
xchg
into
push
cld
cld
pop
lret
fidivs
ret
ret
xchg
std
and
sub
mov
es
movlps
cmp
dec
cmp
cmpsl
push
add
incl
je
pop
ds
or
dec
stos
psrad
pop
push
lahf
mov
test
jmp
lcall
push
mov
add
scas
inc
adc
shl
mov
paddusw
in
jl
aaa
test
push
push
outsl
pop
sub
cld
out
mov
mov
fdiv
mov
mov
xchg
int
outsb
cmp
test
addr16
repz
mov
lds
stc
sbb
cs
jns
adcl
jmp
adc
fstpl
loopne
je
inc
in
mov
push
hlt
dec
or
pop
cmp
add
and
xor
pop
mov
cmc
jnp
xor
xlat
mov
or
bound
jg
sbb
pop
test
xchg
jnp
shrb
sbb
xor
inc
imul
ss
pop
int3
sub
loopne
dec
and
rorb
cmpb
inc
in
aas
mov
inc
faddp
mov
xchg
pop
jns
ret
fs
push
adc
jmp
mov
mov
pop
lret
xor
inc
jge
add
in
pushf
pop
testl
popa
cwtl
cltd
and
mov
movsl
or
xchg
add
push
push
cmp
push
dec
jnp
xchg
cmp
lret
sbb
int
mov
ss
or
scas
mov
jbe
sbb
sbb
iret
push
into
sub
stos
test
or
push
add
popl
lock
jae
sahf
hlt
mov
mov
add
cmp
xchg
outsl
or
mov
xor
cltd
dec
cli
mov
ljmp
adc
mov
movsb
xorl
int
sbb
dec
es
xor
jbe
out
dec
jne
and
fbld
out
add
sbb
or
dec
movsb
iret
insl
sbb
xchg
mov
out
out
push
push
sbb
shlb
rolb
xlat
cmpb
ret
jp
ljmp
test
dec
add
test
pushf
jb
inc
hlt
into
cmp
mov
push
ljmp
lods
stos
int3
push
pop
popf
je
jb
fcoml
stos
pop
aam
icebp
add
hlt
mov
pop
pop
xchg
pushf
loop
sub
loopne
jg
xchg
popf
push
das
dec
push
jecxz
pushf
insb
aaa
add
xchg
jecxz
mov
scas
and
outsl
movsl
int
mov
cmp
mov
les
addr16
push
pop
insb
out
lock
xchg
mull
cmp
add
xor
rolb
sub
ds
aas
pushf
mov
push
jae
lret
xchg
push
nop
dec
xchg
or
fs
call
xor
push
push
call
dec
loop
lds
cmc
cwtl
incl
xor
adc
xlat
cmp
xchg
cmp
ja
sbbb
lret
out
shrl
and
sarb
sub
mov
jns
xchg
add
lcall
mov
inc
add
and
stc
sbb
js
hlt
test
or
mov
ds
int
das
push
push
sub
dec
cmc
out
ja,pn
push
sub
lcall
repnz
mov
stos
mov
push
fistps
stos
pop
vmwrite
nop
mov
push
rcr
sahf
fldl
sub
xchg
dec
movsl
xor
adc
roll
nop
clc
adc
dec
jg
nop
icebp
sbb
loop
and
xor
mov
jb
mov
fcmovnbe
repnz
mov
push
pop
movsl
subl
jno
aad
data16
pop
and
mov
push
mov
addl
dec
shlb
cmp
pushf
out
aaa
gs
repz
jle
sarb
mov
push
bound
arpl
mov
out
dec
push
push
iret
push
leave
adc
pop
push
cmp
lds
ret
cmp
pop
add
cltd
or
push
inc
adc
push
movsl
cmpsb
jl
pop
sahf
out
test
std
lds
xorb
ljmp
js
cmp
lods
dec
pop
je
jl
dec
dec
insb
pop
jle
adc
icebp
cmp
or
into
cmpsb
outsb
inc
out
repz
loop
stc
mov
fnstcw
xchg
lock
mov
adc
adc
outsb
lret
shrl
movsl
std
pop
jns
and
sub
and
dec
mov
gs
sub
aas
push
addl
jp
add
sbb
push
and
das
insl
ret
xchg
xchg
xchg
inc
lsl
in
push
leave
jne
cmp
call
or
fs
or
fmuls
call
sub
jecxz
inc
std
add
xchg
mov
pop
mov
test
pop
out
jnp
sahf
ficomps
lret
pop
in
adc
sbb
mov
or
inc
loop
mov
mov
mov
push
push
out
addr16
std
jb
adc
dec
xchg
movsb
imul
mov
out
fcomp
inc
add
pop
pop
xor
xor
in
jnp
xchg
cmp
je
dec
push
mov
pop
int3
xlat
dec
rolb
std
pextrw
sbb
jae
xor
mov
jmp
iret
lret
or
jno
mov
push
test
mov
fcomps
insl
int3
aaa
push
in
adc
call
sbb
aam
out
and
jl
insw
mov
fwait
inc
cmp
jecxz
push
int
add
push
and
test
fiadds
or
imul
daa
mov
int
mov
data16
xor
mov
imul
iret
out
scas
imull
popf
fcmovbe
pop
out
roll
je
sub
sub
cmpsb
or
sbb
popf
cmp
sub
mov
cltd
cmc
xchg
jmp
mov
shrl
aad
jp
xchg
loopne
jbe
das
rcrl
mov
test
cmc
ds
fbstp
imul
or
pop
xor
lret
jecxz
inc
inc
mov
xor
int
push
shlb
leave
mov
pop
ljmp
and
xlat
out
jg
or
aam
mov
xor
jge
dec
out
adc
lahf
out
inc
dec
inc
rorb
push
cltd
fsubrl
in
nop
sbb
les
outsl
call
inc
cmp
outsl
ret
fisubrs
jo
test
push
jns
push
aam
lret
cmp
xchg
clc
aaa
xlat
fdivs
adc
hlt
call
das
push
popf
push
call
rclb
lcall
xchg
push
popa
cwtl
stos
add
fdivl
push
sub
lds
stc
xchg
mov
xor
dec
and
repz
jl
cmp
loopne
pop
pop
xor
sahf
jg
mov
jbe
js
push
cmp
push
lcall
int3
push
mov
or
lcall
repnz
fsubs
das
fadd
pop
push
sti
mov
fldcw
sbb
ret
in
mov
push
popa
sbb
mov
push
sbb
mov
inc
aam
lahf
lret
test
in
mov
and
cmpsl
mov
sarl
js
ss
test
xchg
inc
mov
jg
and
sub
xor
addr16
adcb
xor
jno
pop
push
jbe
lods
dec
leave
sti
or
clc
or
xor
add
jne
fldl
adc
mov
mov
scas
jg
ficompl
mov
das
jnp
cmpb
sub
cmp
movsb
xchg
push
imul
in
mov
or
jbe
and
cltd
out
xchg
sub
add
insb
pop
push
aad
lds
or
push
out
call
add
sahf
inc
inc
jmp
das
inc
cltd
inc
inc
sarl
and
adc
insl
aam
mov
jmp
mov
sti
dec
pop
push
push
sub
and
cld
enter
loop
sbb
mov
into
insl
js
or
mov
rclb
sti
pop
outsb
jae
imul
fs
xor
xor
aas
imul
jae
dec
jp
dec
pop
dec
or
loope
cmp
aad
sbb
pusha
mov
cmp
add
push
push
aas
jne
pop
dec
sub
les
ret
in
int3
cwtl
ret
and
xchg
lret
or
jmp
lahf
push
lea
out
mov
mov
les
pop
addr16
jne
or
iret
imul
jne
pop
push
lods
pop
jp
aam
and
nop
fdiv
out
push
cmpsb
dec
or
jnp
lock
fnstenv
cli
push
repnz
mov
sub
and
jg
adc
xchg
test
cmpsb
test
or
mov
dec
loopne
arpl
aas
push
xorb
xor
jae
std
mov
cmp
mov
mov
dec
lds
test
das
and
scas
cmp
fs
push
jecxz
cmpb
ljmp
stc
push
mov
imul
push
lret
in
ss
fwait
cwtl
lret
loopne
mov
jo
dec
js
push
loope
mov
jo
push
adc
fldt
cmp
lods
repz
xchg
inc
insl
stos
popf
and
aam
pop
mov
jns
jo
jmp
push
sbb
data16
add
subl
push
call
stc
mov
jg
data16
mov
ret
in
jne
mov
cmp
and
jnp
daa
sub
std
rcl
lcall
cmp
pop
movsb
inc
adc
andb
test
neg
pop
ret
lea
pop
xchg
cmpsl
test
cli
adc
or
mov
rcll
sub
xchg
xor
mov
xor
stc
xor
dec
std
sub
jno
mov
lcall
cmpsl
shlb
jp
mov
bound
cs
xchg
inc
xlat
pop
jecxz
out
adc
xchg
cltd
jmp
xchg
sub
mov
addr16
sub
rcrb
adc
dec
adc
add
jnp
push
mov
lret
sbb
pop
sahf
cmpb
inc
stc
daa
sbb
addr16
mov
cs
out
mov
enter
ficoml
push
ficomps
cmpb
mov
inc
inc
shlb
ds
lods
fcoml
jb
mov
mov
mov
pushf
xchg
out
repnz
push
and
lods
dec
sbb
clc
or
and
push
push
xlat
addr16
sub
and
jbe
shrb
sub
aas
sub
jne
push
jge
sbb
push
leave
gs
fisttpl
sbb
adc
xchg
adc
mov
cmp
mov
sbb
rcll
loopne
cmpw
aad
inc
cmpsb
insb
shrb
jns
dec
mov
jnp
inc
data16
push
jno
xor
aas
pop
je
fsubs
loope
jb
out
fcmovne
test
pop
ljmp
stos
sub
mov
cmp
jg
pusha
in
sti
dec
stc
dec
aam
push
push
lcall
or
ret
nop
mov
mov
mov
inc
mov
push
cmpb
push
dec
dec
icebp
lea
mov
popf
push
mov
fnstsw
adc
outsb
negl
dec
mov
mov
stc
adc
mov
push
mov
std
pop
mov
sahf
je
pop
pop
jbe
movsl
cmp
jb
xchg
test
jbe
cmpsb
pop
and
xchg
push
push
jecxz
xchg
in
push
pop
div
cmc
out
dec
jg
pusha
movsl
das
out
clc
ficoml
or
out
stos
or
test
xor
push
stos
mov
xchg
outsb
leave
sbb
mov
insl
pop
xor
std
dec
jge
ret
mov
stc
sub
stc
dec
pushf
ret
daa
cmc
xor
dec
pop
jo
push
jbe
aad
scas
dec
add
lods
jnp
fld
daa
rcl
inc
xchg
dec
and
test
jle
cmpsb
push
lret
xorb
cltd
sbb
cmc
push
dec
xchg
in
sub
scas
xchg
mov
or
std
notb
mov
mov
mov
jmp
addb
shll
adc
incb
rcrl
pop
xchg
cmp
test
je
mov
movsl
inc
lret
fwait
inc
push
cmp
sub
pop
push
pop
dec
add
rorl
xor
imul
fistpl
jb
fs
es
jecxz
ds
jmp
jbe
sahf
leave
push
sub
dec
loopne
push
pusha
roll
add
cmc
adc
enter
add
mov
fs
roll
mov
shlb
je
mov
stos
outsb
addr16
iret
mov
cli
jns
cmp
jl
lret
pop
or
outsb
pop
inc
pop
mov
and
dec
sahf
lret
shrl
paddd
cmp
mov
push
fcmove
xor
stos
xchg
sub
or
sbb
xchg
lods
mov
stos
mov
loop
f2xm1
bound
nop
inc
loop
add
shll
into
or
dec
pop
subl
or
fisttpl
push
ret
data16
adc
and
mov
or
mov
dec
push
dec
sbb
fs
dec
push
and
push
push
pop
pop
and
xchg
test
iret
ret
pop
xchg
push
push
loopne
dec
jo
push
or
jne
ljmp
mov
sub
fcmove
test
push
or
lahf
outsl
movsb
ja
std
decb
aas
add
push
sbb
dec
test
sub
jp
rcl
push
stos
sbb
pop
push
fcmovb
push
dec
dec
jl
ja,pt
fsub
loopne
in
cs
rcl
insb
cmpsb
enter
xor
fsubl
test
pop
jbe
aas
push
cmp
cmp
out
inc
lds
stc
gs
add
add
shlb
lods
and
xor
jl
inc
pop
xor
outsl
fdivrl
inc
or
fbld
inc
adc
mov
das
sbb
or
pop
mov
or
fwait
xchg
pushl
mov
ja
push
out
push
xor
les
in
dec
cltd
push
xor
pushf
cmp
aas
cmp
xlat
jb
cld
push
sub
sbb
mov
adc
cmp
negb
xchg
or
in
push
test
push
imul
inc
push
arpl
mov
icebp
stc
fwait
xor
mov
jg
stos
ficoml
psubd
pop
lea
xor
mov
sbb
imul
pop
shrl
fldcw
cmp
cmp
push
rolb
xlat
sarb
mov
iret
cmp
push
sbb
push
shrb
xchg
test
jo
jge
xor
dec
sti
inc
fisttpll
sub
fdivr
test
mov
and
and
repz
sbb
ffree
movsl
out
adc
dec
jne
lds
lods
lret
outsb
mov
lea
idivb
in
cmp
clc
int
jno
jb
clc
xchg
sbb
inc
adcl
ja
add
aas
mov
aaa
jb
xchg
adcl
fisttpll
decl
dec
ret
insb
push
sti
mov
xor
pop
ret
mov
sub
loopne
loopne
movsw
insb
add
push
out
push
es
lock
cmp
enter
push
dec
push
sub
dec
clc
pop
xor
and
jae
cli
loop
push
fsubl
or
fisttpll
leave
cs
mov
inc
jne
sbb
leave
fwait
mov
out
mov
inc
dec
push
mov
push
sub
ffreep
int
adc
out
rcrb
cmp
cwtl
dec
mov
mov
fisubrl
add
fsubrl
bound
cmp
pusha
jno
das
xchg
in
and
movb
movsb
push
insb
testb
push
outsb
popa
pop
mov
or
inc
mov
shrb
mulb
out
les
mov
stos
ds
and
mov
add
addr16
xor
ss
or
dec
mov
lahf
insl
mov
ljmp
xlat
add
fisttps
push
xchg
xor
out
mov
jae
sahf
xchg
out
fisubrs
jno
jae
fcmovnu
push
xor
mov
mov
jg
pop
into
std
ds
out
sbb
mov
loop
ljmp
pop
sbb
loop
xor
or
jg
or
cwtl
rcrb
xorb
fimuls
sti
push
sbb
js
std
lcall
xchg
jecxz
ljmp
out
jmp
push
imul
pop
push
xor
sub
or
xor
mov
fadds
sub
aaa
add
cmc
out
add
je
adc
sub
outsl
pop
fdivrs
add
dec
movsb
pop
leave
pushf
inc
push
fcmovnbe
loop
jmp
and
xchg
in
or
xchg
les
insb
out
xchg
sbb
imul
ficompl
sub
daa
ljmp
or
mov
lcall
cltd
sub
adc
insb
and
adc
mov
push
add
and
cld
mov
mov
xor
lock
inc
mov
sbb
xor
adc
loopne
inc
lret
fsub
mov
hlt
je
insl
cmp
push
test
add
cmp
add
mov
xor
inc
jo
xchg
mov
insl
jns
xor
push
sbb
mov
or
inc
add
jmp
sbb
sub
xchg
push
jmp
and
cmp
movsb
cmp
push
xchg
sub
rcrl
or
sbb
testl
loope
rolb
mov
sbb
dec
out
movb
jne
ds
mov
push
sub
cwtl
sbb
mov
jno
push
mov
or
shufps
or
lcall
xlat
stos
in
mov
lds
scas
jno
lret
sbb
popf
imul
or
and
sbb
adc
fists
addr16
adc
movsl
inc
mov
or
jne
push
je
xchg
mov
jle
inc
pushf
daa
cli
push
mov
aad
xchg
push
push
out
and
adc
cmp
jl
pop
cltd
popf
mov
ret
in
or
daa
aas
inc
inc
addr16
subb
loop
fstpt
push
mov
sub
das
adc
pop
add
loopne
sub
mov
loopne
inc
sarl
sub
dec
pop
jg
pop
test
and
stos
mov
decb
or
mov
push
mov
cmc
or
outsl
or
mov
xchg
test
inc
lea
mov
inc
test
fbstp
jbe
sub
into
sub
in
in
aam
add
dec
sub
mov
xor
shll
jecxz
jmp
xchg
sbb
push
imul
sub
mov
inc
push
pusha
mov
test
jg
pop
inc
arpl
push
inc
xorl
ja
sub
es
pop
jp
jmp
lea
movsb
lcall
push
mov
cmp
testl
jnp
xor
add
mov
dec
das
enter
mov
roll
or
cmp
jb
inc
lock
jmp
mov
pop
mov
ds
dec
out
pop
repnz
cltd
loope
mov
mov
inc
jmp
sbb
inc
push
cmp
incb
in
popf
xor
and
adc
unpckhps
test
test
in
gs
ja
mov
jnp
stc
scas
mov
adc
jb
jle,pn
pushf
sarl
lcall
shl
rorb
and
in
jae
cli
sub
mov
stc
adc
ss
es
mov
dec
add
jae
and
inc
and
mov
xchg
add
xor
lret
mov
inc
fisttps
cmp
movsl
or
cld
out
sub
out
jae
pop
cmpsl
mov
rcrl
jp
jmp
dec
push
ret
xchg
add
push
sbb
push
xor
lret
mov
ret
jmp
cs
dec
cmp
push
mov
sub
js
mov
out
out
push
icebp
fdivrl
mov
jl
xchg
dec
dec
test
and
cmp
das
dec
xchg
fwait
and
pushf
xchg
and
lret
ret
push
jg
sub
lret
jecxz
sbb
mov
dec
xchg
add
cmp
lock
and
imul
inc
shl
das
cmp
test
pop
ret
adc
jae
xchg
call
cmp
movsl
push
outsb
int
lods
mov
xchg
in
inc
push
push
scas
adc
mov
fdivl
cld
shr
push
orl
cmp
out
push
jge
jnp
pop
fcmovnbe
cmpsl
xor
push
xchg
into
inc
das
xchg
js
roll
stos
jnp
and
mov
aaa
sbb
push
loop
jo
imul
dec
stos
test
lea
fisubl
push
pop
imul
and
mull
lea
out
mov
xchg
icebp
mov
adc
inc
ficoms
aaa
iret
dec
push
std
divb
adc
add
loop
pusha
ret
cli
xchg
pop
inc
bound
push
mov
loopne
mov
lea
popf
mov
pusha
in
mov
mov
mov
xorl
cli
clc
cld
xchg
idivb
aad
cmpsb
ss
mov
sahf
cmp
subb
das
call
dec
sbb
sti
into
scas
ljmp
lret
sbb
cmp
or
mov
sbb
outsb
or
std
inc
push
lcall
insb
jbe
aad
mov
inc
rclb
or
es
and
pop
loope
subl
dec
add
fwait
repnz
and
lods
cltd
dec
leave
inc
cmp
fsubl
cmc
test
jge,pt
mov
fidivl
les
cs
rcrb
mov
loope
sub
inc
pop
cltd
cmp
sbb
mov
addr16
mov
or
xor
aas
adc
and
rcrl
nop
je
cmp
adc
ds
ficomps
pop
cwtl
cmp
repnz
jg
xchg
mov
pop
imul
sarb
bound
lcall
call
xlat
out
es
or
dec
sub
incl
shll
mov
sbb
xchg
or
mov
inc
rorl
mov
or
or
jo
jno
mov
or
mov
pop
sahf
repnz
xchg
clc
dec
imul
and
xorb
or
jge
fneni(8087
xchg
pushf
mov
imul
jb
mov
popf
inc
jne
data16
sub
jne
out
add
sub
add
std
mov
pop
jns
sbb
push
cmp
fsubrl
dec
les
mov
xchg
jecxz
mov
test
in
lahf
xchg
jno
les
add
ret
sbb
mov
sub
fs
mov
loope
push
sub
push
pusha
push
popf
inc
add
outsl
fsubrl
dec
pop
lods
insl
mov
mov
dec
aam
lret
adc
jecxz
inc
pop
lahf
mov
push
cmp
shrl
lahf
shll
scas
xor
pop
leave
mov
cmp
out
mov
shll
roll
fisttpll
shlb
mov
int3
add
sub
dec
ljmp
pushf
arpl
push
clc
pop
movsl
push
lcall
or
loop
call
decl
test
sub
aam
xchg
dec
adc
decl
mov
jecxz
pop
mov
stos
ds
xor
add
and
push
mov
cmp
test
nop
xchg
aaa
xchg
jns
add
jmp
ljmp
mov
ljmp
push
mov
and
fldt
sahf
push
inc
xchg
push
adc
imul
stos
imul
inc
div
int
std
jmp
std
fstl
jl
xchg
stos
iret
cld
add
push
cwtl
and
push
sub
cmp
cmp
push
ljmpw
insl
pop
dec
pop
xchg
push
and
push
jmp
add
push
imul
popa
inc
mov
or
lahf
or
and
pop
push
adcl
ss
call
cmp
pop
ret
pop
ret
xor
popa
mov
lcall
xchg
sub
inc
dec
int3
adc
push
adc
jp
lods
adc
cmp
jnp
cmp
ja
pop
test
aaa
or
movsl
xchg
jnp
insl
call
sub
leave
outsl
popa
clc
in
stos
jnp
dec
xchg
ds
pushf
xchg
mov
repnz
inc
inc
mov
loopne
lods
jne
scas
add
push
arpl
xor
fdiv
orl
dec
lds
aam
dec
xor
mov
lock
imul
mov
push
mov
xor
pop
pop
jmp
test
lret
fcoml
xlat
cmp
call
mov
mov
xchg
ret
cmp
sub
lea
lcall
xchg
jnp
dec
sub
or
xchg
mov
scas
sar
mov
out
out
faddp
dec
cmp
push
jl
and
sbb
loopne
in
push
jp
cmp
in
inc
lods
mulb
mov
je
jl
rol
cmc
dec
or
jp
push
inc
aam
or
ret
push
sub
xor
mov
jo
push
push
out
cmp
dec
mov
and
scas
dec
sbb
icebp
or
sbb
lret
pop
mov
xor
mov
jo,pt
mov
cs
daa
jne
inc
mov
shrb
xor
stos
xor
cmc
sti
push
mov
subl
in
shll
fs
shlb
pop
shll
pop
andl
dec
ror
fcomi
adc
fwait
test
xor
jge
push
cli
clc
and
cltd
dec
nop
cltd
ja
adc
inc
aad
pop
movsl
int
call
sub
ficoml
or
in
sbb
mov
pop
inc
in
rclb
pop
and
mov
xchg
scas
lret
pop
cli
mov
in
imul
int3
cmp
ljmp
fwait
push
loope
xor
das
lods
fmull
xchg
ret
ret
xor
sub
fs
rorb
sub
int3
add
gs
icebp
adc
mov
stos
in
adc
and
cmp
negl
jp
sbb
arpl
fwait
dec
or
inc
mov
lahf
lahf
mov
mov
jns
dec
cs
cmp
mov
mov
sbb
aas
xchg
nop
push
aas
push
sub
daa
jecxz
mov
negb
cli
lds
add
in
adc
leavew
leave
jg
sbb
push
in
inc
lret
lcall
int3
add
icebp
xor
addr16
gs
jne
mov
loopne
aaa
mov
leave
cmp
pop
mov
cmp
lret
icebp
and
popa
mov
cs
ljmp
mov
aad
lods
jno
fidivs
cmpsl
popf
ljmp
push
lock
clc
push
arpl
inc
jne
mov
das
sub
imul
mov
nop
xchg
sub
sti
dec
rorl
dec
add
in
into
popa
fld
cmp
int3
fidivs
add
shl
jnp
dec
xor
cmc
popa
sub
xor
jbe
xor
cwtl
notl
xor
push
fldcw
jl
test
mov
inc
std
das
out
loopne
xor
mov
adc
sbb
mov
xor
das
ds
stos
lock
push
lret
or
and
and
lcall
or
fidivrl
in
pop
or
cmpl
mov
dec
xlat
xor
loopne
and
scas
inc
dec
ja
fcmovnbe
cmp
dec
syscall
lret
stos
into
jae
adc
cltd
ja
jmp
cmp
mov
mov
push
dec
call
pushf
or
inc
sbb
lods
frstor
sbb
imul
jecxz
aad
inc
fcomps
imul
push
mov
xor
incb
xor
lret
ret
movsb
leave
xor
mov
xchg
and
push
shr
cltd
in
mov
mov
je
test
or
push
shr
xor
imul
rcrb
in
push
cwtl
mov
test
out
cmpsl
lret
lods
int3
cmc
cmc
lcall
sub
inc
insb
aam
into
jmp
ror
xchg
lea
xchg
fnsave
xchg
inc
dec
test
movsb
jb
shll
fistpl
lret
xchg
shlb
pop
js
and
xchg
dec
hlt
out
jle
test
fldenv
mov
mov
mov
rcll
sti
test
fdivrl
mov
xchg
scas
ret
dec
push
and
das
mov
add
fsts
inc
sbb
andl
fwait
mov
mov
decl
pushl
mov
pop
int
jae
pop
jl
inc
cwtl
push
insb
sti
hlt
mov
mov
fidivs
sbb
in
or
cmp
add
or
out
cmp
add
js,pn
pushf
popf
or
ljmp
ljmp
aam
mov
mov
loop
loope
add
gs
inc
leave
popa
jl
lcall
cmp
lret
cmp
repnz
push
int
and
aam
cwtl
and
lock
je
pushf
mov
jae
xchg
cmp
imul
xchg
rcrb
repz
gs
mov
mov
cmp
int3
sti
xor
jb
add
add
add
jno
inc
push
cld
icebp
and
bound
inc
dec
jg
ret
popa
push
mov
inc
out
ja
xchg
sbbl
fstp
mov
or
mov
mov
sbb
loope
add
cltd
push
push
in
fcoml
xor
rolb
dec
push
aam
mov
lcall
aam
ret
lcall
jns
pop
or
cmpsb
pop
mov
addr16
add
xor
ljmp
cmc
pop
or
inc
cmp
ret
movsl
xor
mov
pushf
out
dec
cmc
xchg
mov
cmp
dec
in
adc
ja
add
jg
mov
push
loopne
dec
mull
jae
ljmp
mov
sub
adc
movsl
test
lods
and
popa
aad
mov
jo
loope
mov
andl
shll
scas
aam
enter
subb
lcall
insb
push
xchg
mov
cmp
adc
je
mov
pop
adc
jne
jnp
aam
cs
mov
xchg
xchg
cs
loope
cmp
ret
bound
ds
mov
iret
ret
in
sbb
add
mov
adc
pushf
adc
cs
cld
loopne
xorb
imul
lods
mov
aam
inc
shlb
loope
jle
push
push
cmp
push
fs
ja
lea
push
stos
or
dec
push
adc
mov
jb
adcb
fcoml
lahf
mov
insl
inc
sahf
mov
idivb
xor
cmp
fidivrl
outsl
dec
dec
push
cwtl
out
into
xor
arpl
jle
xor
fisttps
lcall
mov
add
fcomp
fdivp
ret
and
out
lcall
cmp
mov
into
inc
jne
adc
mov
cmp
call
imul
lods
cmp
dec
push
nop
out
fwait
jbe
test
mov
xchg
mov
nop
je
mov
cmp
xchg
daa
jmp
sub
repnz
out
push
aad
dec
push
xchg
push
jnp
and
outsb
push
into
inc
ds
fbstp
pusha
cld
cli
push
data16
and
in
inc
clc
out
cmp
lods
aas
pop
int3
xor
inc
in
push
in
pop
push
fisubrl
jg
mov
je
int
mov
push
pushf
test
inc
div
xchg
xor
pusha
mov
roll
mov
shrb
cmpsb
sbb
sub
or
add
sub
daa
dec
and
xchg
ja
filds
cltd
dec
pcmpeqw
pop
int3
fstpl
in
call
ret
es
and
push
jns
inc
aam
mov
ret
inc
xchg
and
out
xchg
push
subb
leave
nop
in
mov
pop
lods
cmp
mov
sub
push
or
pusha
inc
insl
dec
out
jb
jno
adc
mov
xchg
scas
sti
fmuls
mov
nop
jnp
pop
inc
lret
bnd
mov
imul
movsb
xor
mov
and
repnz
aas
aam
adc
sbb
jno
mov
sti
mov
mov
jb
shll
xor
and
loopne
insl
push
jecxz
leave
cmpsl
loop
mov
xchg
push
cld
push
je
aad
sub
call
jne
cmpsl
xchg
inc
add
movsl
mov
push
xor
cwtl
out
iret
mov
xchg
xor
dec
push
xor
pop
inc
popf
pop
or
jle
and
xor
push
fcoms
aas
cmpsb
test
and
lods
int
add
lret
xchg
mov
jmp
xor
not
mov
and
mov
cld
pop
cmp
and
and
les
insb
push
ja
lods
jns
lods
mov
nop
adc
or
mov
in
push
or
sub
dec
jp
lods
add
sub
jecxz
stos
aad
loop
andb
repnz
pushf
addr16
xchg
xchg
lcall
sarl
lods
shr
mov
jecxz
push
mov
aas
push
sbb
or
dec
push
je
loopne
hlt
stos
jbe
aam
ret
data16
sbb
fsub
jno
jno
xchg
pop
adc
loope
in
ret
lea
xchg
mov
imul
pop
in
push
rcrl
jp
mov
clc
inc
sbb
push
mov
mov
rorl
ret
ja
popa
mov
out
xchg
xlat
mov
push
sbb
sub
xorl
sbb
shlb
fidivs
es
repnz
insl
add
ss
sti
sbb
lea
mov
fs
sbb
iret
test
xor
test
roll
inc
imul
cs
pop
test
jecxz
popf
cmpsb
arpl
ja
xchg
scas
aas
scas
cmpsb
ret
in
mov
mov
push
push
pop
mov
clc
adc
enter
mov
ja
shll
in
leave
faddl
sahf
out
test
ljmp
andb
insb
nop
xor
inc
mov
sti
cli
sbb
pop
call
shll
js
jle
push
lretw
push
inc
fidivl
jae
push
dec
mov
push
cmp
fdivrl
pop
in
sub
lret
mov
add
out
or
cmp
icebp
rorl
aad
mov
push
pop
ret
add
pop
adc
gs
jmp
jp
xchg
and
jne
dec
cmp
lea
inc
sbb
cmc
repnz
daa
iret
add
sub
cmp
mov
mov
mov
mov
jl
sub
out
jmp
insb
fbld
lock
jne
outsb
sub
cmp
dec
les
jbe
push
and
outsb
jns
jns
adc
dec
stos
les
dec
mov
ja
stos
ja
inc
cmp
pop
and
cs
std
loop
xor
cs
mov
subb
js
dec
xlat
mov
sbb
movsb
nop
sahf
push
add
fstpl
pop
fadd
pop
cmp
dec
dec
inc
arpl
cmp
pop
je
sub
fidivl
dec
dec
insb
enter
bswap
iret
or
add
inc
mov
enter
push
pop
sbb
or
seta
rcr
xchg
xor
in
out
notl
pop
popa
add
xchg
sub
pop
xorl
cmp
inc
and
mulb
ret
push
cmovbe
sbb
std
daa
ret
outsl
add
xchg
f2xm1
sbb
icebp
jmp
push
adc
fldl
mov
sub
xchg
jb
push
dec
jle
es
push
test
cmpsb
mov
rol
xor
pop
jle
xchg
cmpsl
mov
push
mov
jne
add
scas
dec
out
jl
xchg
scas
pop
icebp
pusha
fstl
out
mov
lcall
out
push
popa
das
mov
mov
dec
mov
jge
and
outsl
ret
scas
xchg
fucomi
pop
mov
repz
xor
pusha
sbb
mov
orb
push
pushf
idiv
cmp
cltd
stc
mov
jmp
out
in
shlb
dec
sub
into
dec
sbb
xchg
movsb
insl
xchg
popa
mov
xor
pop
aas
jno
mov
mov
les
pushl
inc
outsb
push
addr16
xlat
mov
push
add
rcrl
arpl
dec
mov
xor
mov
out
adc
xchg
jg
ret
dec
and
sub
jb
idivl
std
push
mov
or
jg
or
jg
ret
mov
rorl
popa
cmp
repz
push
pusha
aad
pop
cmp
mov
pop
xchg
pop
imul
insl
rol
popf
jp
add
adc
jle
sub
or
lock
dec
or
out
lods
pop
or
loopne
lods
movsb
mov
fdivs
mov
js
xchg
std
pop
cmp
out
add
rcl
ljmp
les
sbb
inc
inc
in
cld
xor
jmp
jb
out
xor
mov
sbb
cmp
or
mov
adc
push
jl
inc
pop
push
clc
mov
adc
rcl
popa
inc
nop
andb
scas
mov
mov
jb
add
aad
insb
adc
loopne
push
add
lods
or
pop
popl
inc
adc
icebp
xchg
mov
pop
hlt
int
out
push
dec
fiadds
add
push
repnz
push
shrl
sahf
adc
das
clc
mov
pop
aaa
pop
ja
ljmp
jmp
cld
adc
push
es
add
sub
cwtl
dec
push
mov
sub
sbb
sahf
lods
sub
dec
loopne
gs
pop
cmc
sti
popf
mov
movsl
imulb
inc
dec
xchg
fimuls
jne
das
jbe
ja
mov
aad
je
pop
mov
xchg
fstps
jnp
insl
push
mov
adc
stos
inc
daa
orl
jne
xchg
xchg
xor
push
call
mov
ficompl
or
into
pop
orb
and
mov
push
in
repz
bound
fstpt
inc
xchg
cmc
mov
pop
xor
repnz
or
mov
mov
adc
lret
and
and
cmc
push
lods
lods
in
or
push
rorb
push
and
mov
adc
add
pop
sub
fcoml
das
jne
cmp
jl
call
or
mov
jge
rcrl
mov
jno
add
cmp
or
arpl
sub
or
es
int
pop
mov
sbb
mov
mov
xchg
or
pop
add
mov
push
mov
bswap
pop
add
scas
inc
and
fdivs
sbb
cld
push
ret
cmp
and
gs
sarb
popf
shrl
add
jne
or
jo
dec
inc
jle
mov
ficompl
pop
mov
xchg
gs
sbb
mov
dec
push
push
sbb
addl
imul
add
xor
xchg
cli
mov
dec
in
lcall
mov
test
xor
fucom
out
push
lock
pop
in
aas
enter
or
es
in
dec
addr16
sbb
shlb
shrl
mov
jg
leave
lods
jae
mov
pop
adc
inc
push
sti
fs
das
adc
subb
loope
xchg
mov
jns
into
aas
test
pop
orl
jmp
sbb
dec
iret
or
dec
cmp
mov
ds
fdiv
mov
pop
jle
push
int
cmp
das
adc
mov
add
fs
mov
pusha
aam
xor
mov
pop
vphaddbd
movsb
ds
into
dec
idiv
adc
add
sti
std
ljmp
push
mov
xchg
and
rolb
jl
std
inc
nop
ds
aad
xchg
or
gs
xlat
xchg
push
xchg
sti
insl
cmp
scas
jbe
jge
nop
xchg
mov
sti
loop
cmp
xor
stos
sub
and
stc
stos
xchg
push
cmp
cmc
pop
lock
rcrb
ss
aam
notl
sbb
pop
sub
ja
movsl
sbb
es
cmpsl
or
fldl
mov
fwait
push
sub
sub
push
xorl
sbb
cs
rcrl
cmp
in
popf
sbbl
push
sarb
test
lahf
in
or
out
mov
push
jecxz
jae
mov
xchg
ss
add
mov
lahf
mov
inc
test
cmp
pop
stos
add
jnp
mov
or
call
lret
push
test
inc
add
dec
cmp
push
push
xor
fcoml
ja
daa
rcrl
dec
xor
inc
lea
xchg
cmove
cmp
sub
push
mov
push
into
mov
clc
icebp
xchg
in
mov
or
xor
push
xchg
ja
je
mov
clc
push
int
mov
xchg
or
dec
in
push
ss
test
mov
pop
nop
or
jne
dec
adc
add
cmp
sub
arpl
shrb
mov
in
in
scas
out
and
test
mov
int
mov
and
and
sbb
fildll
xor
ds
loopne
sub
scas
lcall
push
shl
fisubl
jb
mov
stc
das
mov
adc
repnz
imul
sub
xchg
icebp
inc
mov
mov
cmp
loope
in
mov
inc
stos
mov
inc
test
push
or
fs
cmpsb
repnz
jl
mov
cmc
int
jb
inc
insb
and
and
push
je
add
lds
pop
jnp
jmp
setle
clc
pop
gs
pusha
mov
adc
jns
rcr
push
nop
cmp
or
sbb
lcall
push
inc
jno
jbe
das
jle
ss
cmpsl
movsb
xchg
push
adc
mov
aas
xor
out
xor
nop
jno
shrb
popa
test
fsubrs
xchg
daa
aam
jbe
scas
or
test
xlat
andb
in
jge
stos
jb
adc
and
mov
lahf
mov
arpl
push
aad
movsl
jmp
out
ja
sbb
push
scas
ret
xor
test
mov
fs
pusha
and
outsb
gs
pop
mulb
push
pop
push
data16
in
popf
and
fldt
add
sbb
icebp
and
fadds
dec
cmc
adc
addr16
dec
jnp
adc
mov
and
sbb
pop
push
dec
shl
scas
adc
jecxz
flds
movsl
mov
push
and
push
imul
pop
mov
or
cmpsl
xchg
negl
lret
dec
loop
xor
sub
lods
jmp
ds
and
xor
into
add
lcall
addr16
scas
mov
test
xchg
xlat
xchg
add
cmp
mov
add
jae
adc
mov
lret
dec
mov
out
out
xor
inc
mov
inc
insb
cmp
or
mov
ret
pusha
push
mov
dec
in
inc
adc
out
out
pop
mov
arpl
outsb
or
movsb
fistpll
fnstenv
push
div
fsubr
dec
lret
jg
xchg
popa
sub
movsl
lret
andb
sti
mov
movsl
push
mov
mov
addb
jle
sub
cli
lock
outsl
jo
sub
sbb
lods
fwait
arpl
aas
or
mov
dec
insl
outsl
sbb
mov
adc
cmpsl
pushf
insl
int3
pop
and
test
mov
movsl
data16
dec
leave
xor
imul
jb
xor
lahf
scas
dec
cmp
pop
fs
add
fs
movsb
lods
inc
popf
mov
lret
xor
inc
xchg
cltd
mov
pop
fsubs
xchg
or
jno
je
clc
sbb
stc
movsb
mov
mov
or
cwtl
xor
jp
pop
push
mov
fsubrs
xchg
sub
stos
clc
mov
inc
xor
mov
jp
jp
outsb
mov
jp
pusha
mov
lods
leave
jecxz
adc
adc
aas
adc
js
mov
loope
xchg
notl
cwtl
dec
sbb
adc
cmp
stc
outsb
ja
enter
adc
out
or
out
fstl
cltd
jo
adc
insl
cmp
lcall
fwait
inc
rcrb
jno
add
jp
icebp
push
sbb
push
xchg
loopne
pop
push
sub
lret
mov
in
mov
loope
test
cmpsb
in
and
leave
test
dec
int3
jae
mov
sbb
scas
lods
cmc
add
jae
mov
mov
mov
in
pop
push
andl
cmp
push
dec
mov
cmpsb
mov
popa
mov
stc
out
aas
insl
push
shll
int3
scas
jb
mov
push
rorl
xchg
ljmp
pop
xchg
add
sub
xchg
jmp
js
dec
scas
jb
sbb
pop
lods
cs
in
lahf
ds
divl
divb
jnp
roll
dec
jo
xchg
aaa
jae,pn
pop
lea
pop
jmp
repnz
jmp
loopne
int
mov
adc
sahf
lcall
ds
cs
add
adc
jmp
mov
cs
xchg
ret
pop
insl
push
shrl
dec
pop
pop
aam
arpl
push
cmp
rorb
lret
fidivl
push
stc
push
outsb
lret
mov
movsl
movsb
lahf
mov
shrw
adc
adc
inc
ret
adc
xor
dec
dec
dec
cmpsb
std
sbb
test
adc
cmp
push
adc
repz
hlt
jmp
icebp
jp
add
ja
adcl
addr16
pop
outsb
fiadds
and
add
mov
xchg
adc
add
mov
sub
sti
mov
jmp
stos
addl
inc
mov
ret
sub
enter
cmpsb
or
pop
xor
jnp
sbb
sahf
sub
pop
ss
jl
push
in
push
rclb
cltd
mov
loopne
pushf
getsec
sbb
mov
int
add
cs
movsb
vpsadbw
movsl
movsl
inc
rcl
xchg
mov
mov
push
sbb
imulb
cmc
mov
pop
jbe
nop
mov
mov
dec
adc
andb
xor
jbe
int3
mov
ljmp
add
jbe
fdivrl
xor
popl
dec
aaa
push
jne
mov
dec
mov
aad
int
fptan
inc
aas
fstps
xlat
jmp
cmpsb
out
out
pop
adc
pushf
fcmovbe
in
mov
push
cmp
popf
cwtl
mov
js
leave
sub
xor
popf
mov
mov
cmpl
ret
cltd
pushf
lcall
gs
jb
sub
pop
pushf
hlt
jmp
dec
dec
daa
mov
and
mov
cld
mov
std
das
cmp
mov
rorl
lock
jmp
fsubrl
outsl
dec
jno
leave
or
sub
ret
or
jo
xchg
into
xor
or
movsb
xchg
lret
movsb
or
mov
lahf
ret
jne
inc
add
and
push
outsb
inc
add
jmp
mov
cmc
xor
ret
lds
loopne
and
xor
cmp
pop
pop
push
loopne
rcll
in
xor
dec
pop
lahf
stos
and
js
fisttpll
aam
clc
clc
sar
mov
adc
xchg
inc
push
mov
xorb
out
jb
xorl
or
xor
ficomps
or
xor
cmp
int
push
pushl
popf
mov
ror
xchg
adcb
add
aam
adc
or
mov
mov
xchg
adc
mov
jbe
ret
repz
jnp
es
popa
icebp
test
lods
fcoml
lahf
mov
cmp
adc
or
cmp
mov
adc
mov
fsub
aad
fdivrl
jle
push
fcomps
into
mov
pop
push
dec
pop
stos
out
mov
hlt
jbe
mov
inc
inc
out
push
nop
sub
es
jecxz
inc
xor
jno
inc
push
push
jmp
enter
jge
fs
loopne
lret
or
test
ljmp
pop
add
test
adc
mov
push
addr16
xchg
xchg
sub
ja
mov
pop
pop
jle
hlt
scas
addr16
or
adcb
pop
dec
jge
ret
lret
and
lcall
mov
mov
outsb
sub
jne
and
jmp
mov
inc
mov
out
int3
lcall
cmpsl
push
lret
aad
cmpsb
repz
mov
cmc
push
push
mov
push
mov
or
les
icebp
pop
jno,pt
xchg
jbe
mov
in
cmpsb
imul
mov
cld
fwait
jge
fildll
push
lret
cmp
add
jp
imulb
cmp
imul
iret
jo
lea
int
inc
pop
outsb
cli
add
inc
in
ror
xor
xchg
jl
mov
hlt
cli
jno
xor
pop
push
cmp
shlb
sub
xchg
mov
sub
sub
cmp
xchg
pop
pop
push
inc
shll
lock
mov
pop
mov
lods
out
mov
xchg
xchg
mov
stos
in
pop
lret
mov
cmp
mov
bound
std
jae
cld
xchg
fmuls
pop
inc
rclb
xchg
sbbl
or
xchg
and
inc
lds
insb
out
mov
inc
mov
mov
xchg
aam
out
add
dec
dec
push
outsb
outsb
cmpl
mov
mov
icebp
cmpsl
xor
loop
loope
addb
push
and
adc
cli
lahf
lahf
clc
popa
jae
add
in
jmp
dec
or
sbb
in
shlb
add
push
mov
out
pop
repz
jo
stc
mov
leave
or
mov
or
test
jbe
out
incb
stos
icebp
std
pop
dec
lea
fs
cmp
push
xlat
cmpb
cmp
push
jge
data16
repnz
dec
sub
mov
push
das
aam
xor
push
mov
pusha
push
mov
cltd
xchg
add
scas
test
mov
stc
incb
cltd
mov
xchg
jbe
enter
inc
or
adc
adc
imul
fwait
sahf
sbb
push
or
xchg
dec
outsb
filds
mov
fisubrs
sub
adc
add
mov
xchg
pop
sub
pushl
rorl
loop
sbb
mov
push
mov
shl
ss
je
jne
bound
jmp
ret
jbe
adc
mov
mov
idiv
lock
pop
pop
inc
mov
int3
ficoms
add
cmpsb
xor
add
call
stos
gs
enter
jo
sub
inc
inc
add
mov
mov
leave
cmpsb
cmp
addl
jnp
mov
and
cli
mov
leave
data16
sbbl
dec
icebp
cs
jg
inc
sarb
scas
mov
inc
push
pop
mov
insb
sbb
cmp
loop
iret
cmp
cmc
jmp
hlt
rclb
xchg
call
into
cli
ja
push
dec
inc
and
mov
inc
mov
ds
lods
nop
int
cmp
jmp
stc
mov
repz
pop
ja
xor
lods
xchg
and
jg
fildll
xor
sub
cld
lods
mov
insb
ret
leave
dec
fstpt
fcompl
movsb
push
sbb
test
hlt
pop
stos
pmaxub
mov
mov
jle
outsb
adc
xorb
add
cltd
jl
insl
mov
and
test
or
mov
pusha
pusha
in
fisubrs
mov
inc
xor
leave
cmp
sub
xchg
lods
inc
push
cs
push
mov
jnp
sbbb
test
sarb
out
dec
push
mov
mov
pushf
and
xor
ss
mov
data16
lock
dec
sub
stos
lret
cmp
mov
jo
mov
push
roll
stos
sbb
lret
sub
in
js
mov
mov
xchg
add
int3
lahf
cmp
mov
add
stos
in
and
rol
pop
mov
push
and
sti
and
repz
in
cs
mov
pop
cmp
out
scas
dec
xor
out
push
test
sub
int3
jns
cmc
cli
aad
mov
ds
cltd
fnstsw
out
jae
add
fisubrl
icebp
xchg
or
int
inc
push
imul
rcl
enter
insl
pop
mov
jecxz
push
mov
sti
sti
xchg
int
cwtl
imul
jbe
dec
ret
mov
xor
push
inc
hlt
inc
shll
cmpsb
lret
incb
mov
cmpsb
mov
jmp
add
xor
mov
xchg
js
push
push
adc
ret
hlt
pusha
fadds
xor
mov
pop
jae
test
popf
cld
xor
mov
sub
insl
cmp
test
push
cmp
movb
int
or
mov
popf
pop
mov
pop
add
mov
js
sahf
and
mov
shl
movsl
movsl
jo
sub
and
data16
dec
rol
data16
push
mov
push
push
rol
push
xchg
loopne
neg
lret
jnp
and
vmread
dec
cwtl
aam
insw
sub
nop
stc
add
push
fnstenv
test
xchg
mov
int3
xor
mov
jg
decl
ficoms
add
sbb
pop
or
popa
add
adc
into
shrb
push
jge
xchg
rolb
orb
xchg
fs
popa
jns
ret
lret
rcrb
repz
or
jmp
add
subl
mov
test
xlat
mov
fmuls
daa
dec
xchg
xchg
in
scas
insb
outsb
int
daa
mov
into
push
cmpl
sub
out
js
leave
mov
in
insl
icebp
mov
lds
sbb
and
pop
lods
fwait
das
sub
cltd
inc
mov
repnz
daa
in
xor
or
push
mov
movb
pusha
movsl
lods
push
xor
jno
push
cmp
into
push
pop
mul
jbe
jl
xchg
rorl
lds
mov
pop
mov
pop
dec
sbb
mov
fsubrl
sub
fbld
mov
dec
or
loopne
out
inc
sbb
test
adc
add
mov
mov
out
dec
imul
cmc
hlt
js
ret
xor
stos
ds
cs
shr
adcl
stos
jge
aas
mov
ja
filds
enter
adc
das
push
out
push
imul
repnz
or
sub
in
sti
push
sbb
sbb
das
mov
retw
mov
sbb
int
dec
mov
divb
std
or
insb
add
push
pop
xor
push
cmp
ret
imul
jp
xor
jnp
fmul
adc
mov
adc
subl
jecxz
push
clc
sti
shrl
fisubs
cwtl
xchg
test
cmpsl
add
cli
lock
mov
int
or
xor
xchg
rcll
adc
xor
fcompl
lods
inc
test
jne
mov
dec
jae
xchg
xchg
mov
push
iret
mov
pop
fcmovbe
js
push
pop
push
repnz
idivl
jp
rcll
pushf
and
outsl
loop
sbb
push
push
insb
fsubrs
leave
dec
pop
imul
inc
addr16
aad
outsb
sbb
fisttps
fnstenv
adc
pop
lods
icebp
sbb
movsl
icebp
xchg
jg
cltd
add
cmp
fists
sub
push
shrl
cli
push
js
cmp
cltd
test
sbb
sbb
aas
push
out
mov
inc
clc
xchg
pop
insl
pop
dec
or
dec
push
cwtl
and
mov
adc
rorb
cli
movsb
cmpsl
fistpl
pop
in
cmp
mov
stos
in
sbb
jl
mov
stos
fadd
bound
pop
cmpsl
inc
pop
dec
in
shrd
data16
lcall
stos
push
insl
aad
add
dec
add
test
inc
scas
jo
jnp
push
lds
mov
ja
stc
stos
and
inc
xchg
gs
cld
icebp
mov
test
lret
jns
call
pop
movsl
push
aas
jnp
data16
dec
xlat
mov
ds
in
pop
outsb
lahf
inc
cmc
aaa
rep
je
andl
mov
test
dec
dec
xchg
pop
push
inc
outsl
pop
dec
ds
jne
xor
sub
lahf
mov
cmpb
inc
adc
sub
inc
into
cltd
sbb
out
mov
orb
dec
and
rolb
mov
mov
or
xchg
xor
sub
jmp
les
or
mov
addr16
sbb
rclb
jle
notl
inc
ss
fsubrl
inc
les
int
adc
add
ficoms
clc
js
or
push
jo
cmpsl
push
repnz
pusha
cmp
mov
in
xor
cmp
cmc
pop
dec
sub
cmc
xor
vmovd
adc
pop
push
stos
adc
push
clc
ret
pop
push
jno
incl
mov
inc
test
sahf
bound
xchg
and
push
xor
out
sub
jb
repz
jns
testl
xor
cltd
out
cmpsl
mov
mov
and
jne
xchg
adc
lods
gs
xchg
xor
jp
add
mov
ljmp
push
push
in
es
shlb
xchg
mov
xor
jle
mov
hlt
jmp
inc
push
in
mov
xor
jl
cs
icebp
rcll
jne
adc
testl
mov
mov
aad
les
push
push
fstps
daa
test
add
mov
inc
jg
in
xor
repnz
mov
mov
das
call
out
jecxz
stos
and
pop
popa
push
movsl
pop
dec
dec
insb
push
xchg
inc
dec
cmp
jbe
roll
bound
jle
leave
mov
sti
int
in
push
xchg
mov
jge
daa
pop
xchg
imul
jns
mov
fnsave
int3
xchg
xchg
mov
inc
in
loope
sti
stc
test
mov
sub
nop
addl
adc
xor
add
fs
js
stos
loopne
enter
shlb
push
shr
fidivs
mov
icebp
sub
sub
xchg
mov
outsl
or
inc
jae
xchg
mov
mov
mov
das
add
js
cmp
cmp
sub
or
mov
ds
les
mov
fstl
cmp
pop
push
push
jp
fbld
movsb
scas
lret
popa
cmp
ss
cld
pusha
xor
jno
out
mov
clc
xor
lahf
xchg
insb
jbe
sub
dec
js
add
cmpsb
mov
cmp
fwait
adc
insl
adc
pop
sbb
jbe
push
xchg
roll
cmp
add
xchg
rcr
iret
push
fstp
sbb
push
in
fucomip
int
pop
das
add
out
leave
pop
jp
in
loopne
repnz
lahf
fmuls
adc
and
nop
push
out
adc
pop
aam
imul
insb
aad
push
imul
popf
mov
cmp
mov
mov
scas
xor
shll
cmp
repnz
popa
outsb
push
fsubr
push
rolb
daa
pop
push
cmpsl
inc
xor
jo
mov
sub
sbb
sbb
bound
stos
cmp
inc
repz
dec
jl
xor
xchg
test
mov
sub
movsb
ja
enter
sbb
cs
sbb
cmp
in
add
cmp
sbb
push
lods
fimull
int
js
mov
aas
xor
std
pop
xlat
xchg
movsl
in
enter
jne
jbe
add
lret
sub
fildll
dec
jns
jae
mov
mov
rol
add
repnz
test
stos
or
jg
pop
adc
call
jecxz
dec
inc
filds
push
xor
sarb
mov
mov
aas
repnz
adc
imul
jmp
sbb
sarl
loopne
scas
adc
out
pop
xchg
and
jno
sbb
pop
mov
sub
adc
pusha
icebp
mov
test
popa
bound
jnp
jno
xor
pop
hlt
inc
xchg
bound
cmpl
and
mov
xchg
jmp
dec
mov
daa
push
in
addl
or
push
jmp
daa
lahf
movsl
sub
push
xlat
add
aad
scas
fwait
shufps
xor
cmp
cmp
scas
hlt
xchg
ds
adc
jo
dec
sbb
mov
adc
mov
push
inc
xlat
fwait
xchg
mov
lret
mov
nop
mov
aas
mov
fldt
incb
add
pop
jmp
popf
pop
push
add
cmc
xchg
xchg
jmp
cmp
fildll
adc
dec
cli
scas
jbe
aad
jl
xor
popf
mov
push
jns
cmp
std
mov
add
dec
fmulp
xchg
dec
and
add
outsl
cld
loop
cwtl
cmp
or
xor
xlat
xchg
inc
nop
dec
add
lret
or
mov
icebp
ret
mov
mov
xlat
jnp
data16
cmpsl
lahf
adc
add
leave
and
mov
lea
leave
rcll
and
cmpsb
jb
sub
aaa
dec
add
scas
jno
xchg
mov
ret
inc
cwtl
mov
enter
jmp
pop
stos
push
jo
adc
fsub
mov
dec
pop
xchg
shll
aam
ss
inc
outsl
add
or
inc
ljmp
push
out
jge
jle
jmp
jg
mov
push
and
sbbl
cmp
jmp
xor
sarl
lret
jmp
xchg
iret
xchg
xor
mov
cs
out
cltd
sub
repnz
add
sbb
or
cmp
leave
mov
lds
xor
adc
mov
mov
mov
inc
popa
loopne
fnsave
lea
fistl
jns
sbb
test
xor
adc
mov
jae
pop
repz
mov
das
cmp
mov
cmp
inc
aas
adc
addr16
sbb
scas
out
sub
xchg
int
scas
sarl
inc
xchg
push
xchg
adc
shl
out
in
test
js
sub
inc
pop
jge
push
popa
or
push
clc
pop
and
pop
adc
cmpsb
xchg
in
dec
mov
or
cmp
iret
push
adc
pop
adc
aad
mov
pusha
clc
jle
lcall
push
stos
stos
orl
xor
mov
sbb
ljmp
mov
sbb
bound
dec
lahf
xlat
push
in
pop
imul
pop
jae
sarb
mov
push
pop
xchg
fildl
pop
lods
data16
les
xor
pop
rorb
sbb
std
mov
sahf
je
loop
add
xchg
cmc
loopne
testl
xor
sbb
mov
jge
popa
bound
xchg
inc
fwait
mov
das
push
imul
mov
cmp
inc
cmp
cmp
daa
movzbl
lds
and
enter
sbb
out
push
mov
mov
xor
sti
imul
int3
or
ljmp
dec
test
push
mov
cmpsl
pop
xchg
loop
inc
mov
mov
daa
mov
js
pop
in
cltd
nop
and
scas
sbb
call
add
mov
mov
xchg
je
aam
js
pop
ss
and
stos
adc
and
in
sbb
add
cmp
pop
std
dec
ds
addb
or
xchg
pop
dec
mov
xchg
sahf
pop
jnp
shl
xor
jmp
in
mov
dec
dec
sub
subps
jns
or
aas
das
sbb
mov
ss
xor
push
and
jp
mov
push
scas
pop
pop
sub
and
bsf
push
dec
or
add
xor
loopne
leave
ficompl
xor
ret
push
sbb
ficoml
packssdw
test
mov
jp
fcomi
lods
setnp
in
shl
jno
cvttps2pi
jecxz
je
push
jle
bound
add
mov
int3
and
popf
imul
movb
iret
ds
push
ret
mov
cmp
notl
mov
es
ljmp
imulb
test
test
leave
les
or
mov
movsb
jns
mull
std
adc
nop
fldl
add
cmp
jo
add
add
dec
jnp
mov
pop
in
xchg
or
je
test
xor
ljmp
rcl
xor
jb
xchg
icebp
in
rcl
jg
std
push
pop
push
xor
iret
sbb
out
pop
dec
mov
imul
cs
xchg
jecxz
mov
jb
ss
insb
leave
dec
outsl
push
cmp
pop
lock
repz
xchg
mov
pop
mov
call
push
xchg
sub
ja
loop
ja
inc
cmp
add
xlat
addb
dec
jbe
xchg
test
pop
std
xchg
sub
shr
test
adc
and
repnz
cmp
ret
lods
push
mov
sar
test
orb
pop
xchg
fcmovnb
and
cli
insl
ljmp
mov
aas
loopne
nop
push
mov
sbb
jno
inc
scas
inc
fcomps
and
movsl
jns
dec
mov
adc
andb
adcl
lock
sbb
aam
cmp
xor
aam
fs
out
sub
stos
mov
stc
inc
mov
pop
cli
adc
and
shl
adc
iret
adc
cmpb
movl
stos
negb
xlat
mov
into
test
int3
movsl
in
shlb
pop
sbb
aam
cmc
lea
mov
jmp
daa
push
jo
jae
loope
stc
mov
mov
add
mov
adcb
mov
aad
inc
mov
cs
and
arpl
dec
pop
ret
lret
test
and
imul
clc
rcr
cmp
lea
sub
shlb
cmp
loopne
daa
push
test
int
and
paddsb
lds
add
adc
loopne
xor
out
les
sub
shl
aad
ljmp
mov
je
adc
xorb
xchg
hlt
xor
leave
in
test
dec
adc
jge
adc
push
insl
sti
roll
and
lret
adc
cmpsb
cmpsb
dec
add
or
aad
stos
mov
dec
add
hlt
hlt
out
icebp
and
jb
fildll
mov
in
sbb
arpl
xchg
or
and
xor
cmpsb
jmp
xor
jle
xchg
mov
pop
dec
adc
adc
loop
fisubrs
ds
lret
fistpll
jl
fadds
jno
rcr
cmp
loop
xor
clc
cld
inc
xlat
loope
movsb
cmpsl
push
jle
cmp
in
push
mov
mov
pop
jb
fcoms
jge
jmp
mov
or
dec
mov
push
add
or
mov
jns
mov
mov
mov
fcomp
les
pop
jp
inc
lds
fsubrs
mov
js
cwtl
pop
sti
mov
add
sbb
push
pop
inc
int
sub
sub
imul
scas
cs
pop
pushf
arpl
sbb
pusha
xor
sub
jne
mov
aas
loopne
sub
dec
hlt
jnp
arpl
pop
in
lock
mov
or
or
ret
inc
adc
xchg
pop
enter
pop
pop
cmpsb
jno
jne
fwait
scas
mov
jnp
stos
lea
add
sti
test
pop
out
mulps
xor
push
xor
fisubl
sbb
sbbl
notb
sub
shl
mov
cmp
xchg
jns
sub
lods
adc
inc
cwtl
rcrb
mov
cmpsb
mov
xchg
jbe
test
dec
sub
push
popa
mov
dec
mov
ret
aam
mov
das
cld
mov
cmpsb
stc
cmc
pop
adc
or
ljmp
cmp
fucomp
xlat
add
sbb
push
dec
jae
fwait
cs
lret
aas
lret
inc
pop
hlt
add
cs
mov
lds
mov
mov
in
mov
fisttps
sbb
jge
push
mov
jmp
aaa
pop
jno
cltd
stc
and
jae
cwtl
rcll
mov
sbb
or
jle
or
dec
xchg
sub
cmp
outsl
outsb
or
push
ljmp
lret
jo
mov
push
adc
mov
pop
xor
jns
or
cmp
cmpsb
add
push
add
jo
push
popf
xlat
fsubs
lret
mov
sub
rorl
fs
bound
adc
ja
ret
loope
shrl
xchg
imul
data16
cmc
adc
inc
inc
xor
in
fstl
jmp
ret
je
jne
cmc
adcb
mov
insl
cmc
loopne
dec
and
iret
inc
popl
mov
or
cmp
movsl
cmp
mov
adc
xchg
or
ret
and
and
jle
inc
mul
sarb
in
loop
jl
cmp
xchg
jle
mov
inc
test
fstl
mov
rolb
cmp
pop
mov
fisubrl
imul
mov
and
mov
cmpsl
inc
mov
dec
les
or
ret
fnstsw
mov
fbstp
lahf
std
pop
idiv
mov
dec
test
mov
aas
mov
jp
adc
mov
aaa
mov
clc
mov
mov
clc
push
cs
xchg
cmp
mulb
mov
pusha
jmp
adcl
lods
clc
mov
xchg
push
mov
pop
mov
and
out
mov
jae
popl
mov
sub
in
popf
cld
hlt
or
jae
xor
dec
popf
fdivrs
xor
rcrb
imul
lea
aaa
sbb
pop
mov
cmpl
daa
mov
cmp
jnp
lods
std
adc
push
mov
push
pop
push
inc
jle
addb
add
xor
adc
testb
hlt
and
lock
lods
mov
pop
ffree
fisubs
pop
pop
sub
dec
add
pop
inc
out
test
jmp
je
jbe
push
dec
pop
repnz
sti
sbb
lods
sbb
loop
gs
jecxz
pop
mov
shrb
in
iret
cmp
lret
jp
out
in
sub
xlat
mov
fcmovb
test
xor
shlb
jb
mov
mov
iret
insl
xor
and
outsl
and
push
je
xchg
jbe
push
and
cmp
adc
insl
loope
xor
jbe
mov
mov
loop
divl
daa
mov
push
ss
cmp
lret
ja
fsubrl
xor
lahf
xor
fsubrp
push
cs
and
je
push
add
and
mov
pop
icebp
sbb
xchg
dec
arpl
jb
lcall
aaa
mov
push
les
std
leave
pop
xlat
ret
cwtl
call
add
sbb
inc
mov
ljmp
ja
add
pop
push
mov
in
sub
int3
mov
es
pushf
stos
and
test
xor
aad
das
mov
or
dec
stos
mov
rcl
loopne
push
push
fdivrl
xchg
cmp
call
mov
adc
mov
mov
movsb
int3
daa
fstl
data16
mov
jbe
pusha
xor
mov
sti
mov
xchg
loopne
cmp
sahf
mov
push
das
inc
enter
xchg
out
mov
mov
loopne
mov
or
shlb
arpl
hlt
popf
lods
lahf
and
pop
mov
inc
mov
cmp
sub
popf
addr16
hlt
mov
scas
aaa
scas
xchg
out
mov
sbbb
mov
sub
orb
push
nop
jecxz
outsb
mov
pushf
inc
mov
in
add
push
outsl
inc
in
insl
enter
jmp
sbb
cmp
int
dec
push
adc
outsb
mov
out
cld
jg
aaa
outsl
mov
addr16
jno
sahf
mov
add
mov
cmc
push
jp
lock
repnz
scas
cli
sbb
enter
jmp
scas
pop
mov
mov
jno
mov
xor
stos
push
cmpb
pop
ljmp
pop
sbb
std
mov
rclb
inc
inc
push
pop
push
inc
bound
push
shl
cmpsb
cli
ljmp
cli
xor
ja
scas
ret
dec
fists
das
loope
xchg
ljmp
fisubs
call
pop
imull
mov
adc
les
arpl
iret
lahf
xor
push
fisubl
and
ds
sub
rorb
push
push
fwait
mov
test
lahf
jmp
in
inc
mov
gs
push
jb
cmp
jle
push
sub
movsl
int3
jne
out
pop
pusha
ds
push
sub
mov
xor
ret
dec
xor
or
add
adc
idivb
mov
xor
fwait
adc
gs
mov
shr
cltd
jns
or
pop
mov
stos
jg
out
and
cmp
and
adc
adc
pop
push
lea
push
aas
cli
loopne
push
xorl
jmp
pop
cld
mov
cltd
cmpsb
into
jmp
inc
fisttpl
out
dec
inc
aad
jbe
jb
mov
xor
or
stos
inc
pop
mov
mov
mov
shrl
mov
push
das
dec
push
scas
daa
push
add
imulb
add
mov
nop
pop
xor
xchg
outsl
ja
and
lret
push
pop
rorb
sub
inc
xor
movsb
ss
mov
stos
mov
jo
inc
or
cmc
inc
jle
mov
insb
jns
push
clc
lods
pop
jbe
lods
mul
insl
cmpsb
ds
pop
aad
loop
push
jb
out
notl
addr16
outsb
ret
aas
sbb
sti
fildl
jne
int3
mov
push
xor
lcall
dec
std
incb
std
clc
cmc
in
inc
mov
inc
mov
xor
pop
dec
sbb
movsl
subb
fnsave
push
pop
sti
jecxz
cmp
outsb
dec
inc
daa
cmp
loopne
lods
lret
jno
add
add
xor
jg
mov
push
pop
hlt
xor
dec
dec
mov
aad
cltd
xchg
cmp
push
sub
xchg
cmp
stos
mov
bound
sub
xor
aam
adc
out
sub
and
dec
jbe
mov
mov
ret
mov
out
sub
inc
flds
movsl
leave
mov
adc
mov
and
dec
push
mov
enter
and
mov
call
lock
shll
or
jbe
mov
arpl
data16
jmp
rcrb
lret
mov
insb
fisubrl
sub
and
arpl
andl
jb
add
ret
sbb
cs
dec
or
cmp
mov
or
je
push
pop
dec
bound
push
dec
mov
ds
xor
mov
xor
ret
test
jns
repnz
fwait
push
dec
pushf
push
sbb
iret
pushw
dec
out
push
mov
lret
roll
aad
cmp
dec
das
ljmp
sub
xchg
xchg
insb
out
sub
ret
xchg
add
call
mov
hlt
std
pusha
dec
and
adc
add
sti
pop
and
pop
loope
iret
cmp
insl
or
cmp
mov
les
pop
cmpsl
cmp
mov
cs
sbb
xor
repz
xor
movsl
hlt
lods
dec
xor
sub
and
or
push
loope
mov
data16
mov
inc
pop
add
push
dec
lret
popf
aaa
dec
or
int
stc
lea
shlb
notl
adc
ret
test
les
add
adcl
call
ds
call
and
mov
pusha
in
filds
aas
mov
push
xor
and
dec
mov
mov
cmp
out
push
push
add
lock
mov
mov
cmp
adc
gs
mov
add
es
rcll
andb
js
cmp
fdivrs
sbbl
inc
push
and
mov
pop
scas
fnsave
mov
or
scas
mov
lods
les
or
sbbb
push
das
pop
dec
mov
pop
rcrl
out
push
and
cmp
lret
imul
mov
movsl
add
sti
mov
jo
inc
les
push
cmpsb
stc
movsl
in
fisttpll
push
in
or
in
test
in
fdivrl
push
xchg
les
hlt
mov
xor
addl
in
jge
adc
push
dec
mov
push
jne
stc
cmc
lods
fnstenv
mov
loopne
pop
in
jo
fldenv
cmp
mov
pushf
outsb
inc
adc
inc
jge
popf
cmc
fstl
mov
fildll
add
adc
mov
mov
sub
xchg
lahf
pop
sahf
scas
jns
aaa
repnz
lock
loopne
cmpsb
push
xor
mov
test
into
es
cmpsl
fwait
lcall
add
lods
xlat
fimuls
dec
fcmovnbe
loop
mov
shl
fisttpll
and
cmpsl
add
jne
mov
jecxz
fidivrl
mov
outsl
sbb
stc
push
add
and
add
out
sar
aaa
jo
or
insl
loopne
cmp
mov
mov
xchg
rorl
pushf
pop
add
aaa
je
xlat
shrb
or
sub
mov
adc
das
out
mov
icebp
scas
xchg
xor
lahf
inc
push
and
subl
cmp
mov
and
push
xor
mov
mov
or
jnp
mov
paddb
adc
xor
sub
jg
mov
outsl
xor
rclb
cmp
test
js
push
sti
xor
add
add
push
inc
in
popa
and
cmp
outsl
ja
xor
cmp
rorl
cmp
jge
sbb
sbb
sarb
repnz
cmp
dec
or
inc
mov
dec
adc
fstps
repz
xor
xchg
fcmove
xorl
pushf
js
adc
adc
jae
mov
inc
addr16
test
cmp
lahf
add
pushl
sub
and
vcmpps
jno
stc
dec
leave
stos
mov
scas
pop
loopne
sti
pushf
mov
pop
pop
xchg
fcompl
cs
push
and
cltd
cmp
roll
mov
pop
fwait
mov
mov
std
cltd
out
hlt
xor
xor
cltd
and
ret
cmc
in
dec
or
jb
icebp
icebp
xor
outsl
jg
test
outsb
pop
imul
pop
xchg
or
mov
adc
enter
ds
js
das
sub
dec
sbb
fidivs
cmp
incb
xor
cmp
stc
xchg
pop
xchg
jmp
cmp
cmc
and
iret
js
push
mov
mov
andb
push
aas
mov
sub
mov
fsubl
gs
mov
mov
clc
mov
inc
outsl
adcl
sub
out
sbb
fidivs
mov
inc
cmpsl
pop
insl
or
rclb
dec
push
movl
pushf
ja
mov
fldcw
mov
je
aas
dec
rcrb
cld
mov
stc
dec
inc
fadds
cmpsl
and
scas
sbb
and
in
jno
imul
ret
sbb
outsl
movsb
popf
or
push
shrl
pop
jle
mov
mov
mov
aaa
sbb
and
and
out
cli
les
sub
push
test
jl
cld
nop
mov
fsubs
push
clc
fwait
ret
mov
aas
pop
jns
aas
faddp
or
mov
jle
fimull
jbe
add
push
fs
sub
push
mov
push
aad
gs
data16
imul
std
loopne
or
jp
adc
mov
and
mov
out
lret
xchg
dec
inc
inc
cmp
lret
push
sub
mov
fdivrp
mull
flds
and
movsb
test
rorl
test
push
jp
bound
adc
mov
scas
fadd
idivb
jno
ja
pop
mov
pusha
daa
mov
sahf
push
jl
repnz
mov
pop
xor
sub
ljmp
aad
jne
adc
call
aam
ret
adc
in
cmp
pop
add
cmp
loopne
cmp
shll
xchg
out
fistpl
test
imul
adc
push
jmp
mov
frstor
out
scas
or
inc
mov
mul
ret
mov
xorl
mov
and
sub
jp
lea
jbe
daa
jns
adc
loop
shl
mov
push
push
mov
test
aas
call
and
cmp
dec
popa
test
scas
in
js
sahf
jns
inc
enter
ror
int3
cmp
lods
clc
xchg
or
fisttpll
aad
pop
xor
shll
lods
mov
inc
int
cltd
sub
lret
xchg
xor
js
push
in
movsb
adc
mov
inc
fnstsw
ds
xchg
jg
shll
test
cld
fldenv
pop
fsubrs
fistps
fimull
pop
xchg
push
mov
inc
call
cmpsb
rclb
xchg
adc
cmp
lods
dec
and
lcall
inc
rolb
mov
and
pop
push
fs
push
aam
gs
stc
pop
insb
inc
pusha
push
jo
sub
mov
xor
popl
xor
stc
push
sbb
lahf
push
mov
pop
sub
and
sahf
movsl
pushf
add
cli
cmc
mov
leave
xchg
pop
sub
orl
jge
js
jecxz
lds
jbe
push
mov
mov
jae
xor
push
sbb
lods
xor
arpl
movsb
out
test
nop
mov
fwait
add
aas
cld
shrb
leave
push
cwtl
js
xor
dec
xor
push
and
dec
inc
jns
xchg
adc
imul
push
leave
mov
outsb
sahf
es
mov
pop
xchg
xchg
les
jne
pusha
add
mov
faddl
lock
jae
idivl
xchg
fimull
cli
lock
jbe
or
lea
insl
jp
clc
or
sti
push
and
cmpsb
push
cmpsb
cmp
lds
sub
xor
std
and
or
ss
shll
ds
xchg
decb
lcall
mov
mov
pop
or
movsl
dec
fstpt
setg
or
divb
jne
stos
xchg
out
fidivl
cmp
incb
nop
mov
addr16
mov
inc
lea
push
sahf
lret
adc
sub
lahf
icebp
push
addr16
cmp
or
adc
push
cmp
int3
adc
inc
jmp
xorb
das
xchg
push
mov
mov
push
lods
clc
cltd
mov
js
and
pop
mov
js
fistps
sub
cmp
bnd
push
test
or
cli
cltd
inc
mov
push
sub
mov
inc
mov
inc
sub
sbb
in
shll
loope
push
shll
mov
cmpsl
scas
push
xchg
leave
sarb
arpl
ds
mov
jae
popa
rcll
xlat
shr
jo
loopne
ljmp
fimull
cs
inc
pushf
xchg
cli
pop
mov
pop
shlb
rorl
pop
das
cmpsb
shl
cmp
lret
mov
sub
sub
adc
sub
pop
lods
ljmp
jbe
mov
pusha
jecxz
pop
push
push
mov
pop
mov
xor
jmp
shrl
pop
adc
popf
nop
scas
hlt
icebp
mov
out
ss
repz
inc
pop
push
xlat
icebp
adcl
mov
xchg
gs
add
push
in
add
lds
dec
inc
jp
decb
bound
in
push
xor
mov
jmp
shr
out
add
jno
dec
pop
pop
dec
inc
repnz
push
inc
push
pop
mov
add
imul
jo
mov
repz
movsb
xchg
and
or
push
daa
arpl
stos
xchg
push
int
adc
mov
ds
ljmp
rorl
out
jge
mov
pop
div
adc
mov
dec
popa
into
pop
cmc
lods
xchg
imul
cmp
arpl
xlat
or
fisubs
dec
mov
pop
inc
lahf
sbb
cmpsb
sub
pop
into
xchg
dec
lds
pushf
cli
mov
into
cmp
push
loopne
add
xor
sbb
pop
mov
and
jnp
mov
and
sub
filds
cmpsl
xchg
adc
push
les
fcmovbe
in
aad
testl
adc
aam
jb
pusha
xchg
rclb
pushf
push
bound
inc
insl
add
mov
cmp
sub
enter
lods
pop
push
cli
dec
jns
dec
dec
les
dec
mov
xchg
fsub
inc
scas
cmpsl
sub
mov
jne
xor
xor
fcomps
rcl
adc
jecxz
jmp
shrl
pop
pop
lcall
sti
push
stos
and
mov
jne
mov
xchg
add
mov
add
mov
sarl
lods
mov
js
jmp
sub
mov
xor
xchg
sbb
pop
adc
or
push
imul
jno
sti
fnstenv
out
fnstenv
cld
pushf
in
outsb
clc
pop
mov
les
pop
mov
inc
mov
loopne
clc
and
je
sub
shll
mov
and
pushf
xchg
cmp
loope,pn
test
sti
test
xchg
adc
aas
xchg
mov
fwait
paddusw
mov
cmpsb
or
lods
mov
adc
pop
orb
pop
mov
nop
outsl
es
mov
adc
hlt
scas
mov
setge
fistps
in
in
xchg
or
in
mov
aam
add
or
fmull
pop
and
movups
data16
cmp
cmp
arpl
rcll
test
test
push
mov
dec
sub
dec
mov
or
xchg
lcall
bound
mov
mov
pop
addr16
fnstenv
pop
adc
std
inc
out
into
xchg
push
lahf
divl
jns
outsb
mov
aas
mov
lods
pop
cmpsl
mov
and
cs
mov
inc
hlt
testb
jl
jno
pop
ja,pt
mov
in
pop
jns,pt
sub
inc
dec
inc
xchg
out
xchg
cmc
xchg
test
test
insb
xlat
jbe
and
pop
cmp
dec
pop
rcll
xchg
fld
sbb
xchg
scas
cmp
in
push
icebp
outsl
adc
inc
fmulp
popf
push
gs
mov
adc
sahf
dec
inc
pusha
out
outsl
jno
add
lea
mov
push
add
popa
xor
clc
and
lahf
xchg
cmp
pop
dec
jp
jmp
rol
stc
jg
in
jae
pop
xchg
add
addb
stos
jg
adc
inc
mov
shrl
mov
cwtl
int3
mov
jle
jno
sub
lcall
mov
mov
push
outsb
push
filds
orb
call
cmp
aam
sbb
stos
nop
repnz
movsl
jns
ds
std
push
pop
lret
jbe
popa
js
ljmp
shll
mov
xor
into
fbstp
inc
mov
inc
jae
mov
or
push
xchg
js
stc
loop
addl
in
cmpsb
xchg
das
scas
adc
popa
dec
push
or
fsubs
or
in
aas
mov
cs
dec
pop
jle
xchg
jmp
outsl
pusha
add
mov
mov
adc
dec
xor
repnz
mov
cs
sbb
sub
or
cmpsl
ret
ss
pop
adc
leave
dec
je
test
subl
icebp
jmp
fdivl
lods
cs
fstl
lahf
fld
xchg
dec
lahf
insb
or
push
mov
pushf
mov
paddsb
cmp
stos
mov
and
xchg
xchg
ret
fcmovne
gs
or
cli
jbe
dec
les
inc
fidivrs
fcoml
sub
push
xchg
xor
loop
add
arpl
repnz
add
jecxz
ret
add
gs
mov
jbe
push
sub
push
jo
outsb
imul
fidivl
shrb
mov
adc
push
jno
pushl
dec
sbb
in
icebp
lods
mov
sbb
aas
mov
leave
sbb
andb
add
sbb
pop
sbb
or
inc
cmp
mov
arpl
insl
nop
call
js
insb
or
jbe
xchg
dec
cmp
outsl
xchg
xchg
int
and
sbb
dec
pop
inc
mov
jne
adc
sbb
pop
inc
dec
mov
hlt
ret
adc
adc
or
pop
mov
xor
sub
arpl
sub
and
mov
fwait
dec
mov
int
jl
mov
cmp
xor
adc
xchg
or
gs
jno
ss
in
jae
pop
dec
sub
pop
aaa
inc
aaa
and
dec
push
inc
fwait
dec
lret
out
dec
popa
shlb
pushf
popf
enter
ss
push
lds
cmp
mov
outsb
lods
fsubp
icebp
ss
mov
out
cmp
shl
sbbb
push
outsb
sub
fmull
pop
lcall
bnd
outsb
and
mov
push
rorb
insb
test
push
arpl
in
ljmp
adc
and
xor
pop
daa
das
shl
and
dec
jge
jle
inc
imul
adcl
adc
inc
jge
xorl
dec
mov
inc
fdivl
std
cmp
pop
add
jbe
mov
stos
xchg
test
test
xor
xchg
dec
push
adc
sub
and
mov
es
xor
mov
pop
mov
mov
push
les
push
inc
shll
xor
stos
dec
fdivl
dec
mov
popf
fwait
sbb
popf
sub
cmp
sub
js
xchg
fsub
jg
into
push
mov
in
adc
mov
sbb
lea
push
fs
jae
adc
add
aas
cmp
jecxz
cmp
jmp
mov
shrb
push
lods
inc
leave
sbb
les
push
incb
sbbl
xor
sub
xchg
jmp
repnz
cmc
lds
in
loope
leave
add
jmp
fadds
add
xchg
test
scas
mov
pop
cmp
loopne
clc
xor
ja
lock
jbe
mov
leave
inc
fidivrl
stc
dec
lahf
mov
xchg
xchg
adc
pop
out
and
fsubrs
jecxz
push
lahf
cld
addr16
push
pop
rcrb
jg
mov
xor
push
sub
pop
inc
xor
cmp
mull
sub
ret
jg
daa
adc
hlt
mov
sbb
loopne
mov
jbe
pop
lea
ja
adc
adc
imul
in
push
push
push
inc
rolb
in
shr
sbb
mov
cmp
lret
sarb
mov
call
xor
sahf
or
cmc
or
push
mov
popl
dec
or
and
loopne
push
int3
mov
mov
and
insl
fs
fmulp
pop
ja
lahf
adc
rcrl
int3
loope
shlb
xchg
mov
dec
fs
push
or
mov
push
inc
cwtl
mov
mov
or
int3
push
lods
add
adc
lock
orb
jle
mov
ficoms
test
fsts
mov
popf
aas
jne
pusha
stos
out
mov
lods
or
or
cs
fiadds
ja
mov
mull
je
and
lcall
pop
insb
add
scas
mov
popa
push
sti
js
movsb
mov
repnz
out
jbe
add
mov
andb
push
jg
shl
push
aad
or
lahf
enter
mov
cli
xor
ljmp
add
adc
inc
mov
insb
fiaddl
adc
repz
push
cli
and
ss
popa
lret
rcl
jb
pushf
sub
out
lret
jno
dec
pop
add
mov
out
ljmp
jno
mov
sbb
fwait
mov
mov
push
dec
or
and
and
sub
add
lds
mov
movsb
or
jns
jnp
push
xor
cmp
sbb
mov
popf
push
daa
test
test
sub
repnz
pop
ljmp
adc
or
xor
xlat
sbb
dec
imul
test
aaa
mov
ljmp
sahf
arpl
xor
jmp
mov
enter
gs
fs
pop
punpckhdq
bound
lock
int3
add
fcom
rolb
mov
call
arpl
dec
iret
loopne
into
mov
outsl
cwtl
adc
cmp
aad
push
fwait
xchg
mov
and
xchg
mov
pop
repz
stos
xchg
ret
insb
xchg
leave
xor
cltd
mov
mov
cmp
mov
ljmp
fs
js
inc
push
push
cmp
or
pmulhw
pop
jmp
adc
inc
outsl
xchg
insb
inc
sbb
mov
mov
mov
jb
add
xchg
mov
ret
fiaddl
sub
bound
xor
out
aas
clc
jge
cmpsb
pop
mov
fnstenv
xlat
imul
dec
mov
sub
push
xchg
xchg
push
fs
imul
xchg
clc
xor
shrl
loope
and
add
insb
xchg
cmp
outsl
pop
mov
int3
mov
shll
jbe
scas
xchg
mov
shll
test
adc
cs
push
inc
jae
rorl
stos
hlt
sahf
push
xchg
ds
jle
lret
negb
pushf
xchg
fwait
jno
clc
xchg
outsb
pop
int
xchg
out
cli
arpl
sarl
add
popa
leave
xchg
xchg
dec
push
add
jo
movsl
inc
sub
pop
test
das
sahf
pop
adc
test
inc
inc
popf
ret
mov
xor
inc
mov
aad
mov
shlb
xchg
es
loop
pop
gs
and
bound
cmp
xlat
inc
scas
pop
repnz
mov
call
jno
sbbb
sub
inc
mov
les
push
in
adc
or
data16
pop
inc
pop
adc
cmpsl
or
fsubs
adc
movsb
jp
push
jnp
jecxz
pop
call
mov
out
les
or
das
ds
out
std
test
leave
push
dec
scas
mov
test
sahf
inc
fldl
pop
xor
shl
cmp
adc
jne
pop
mov
je
addl
or
adc
arpl
jge
cmp
cmpsb
ljmp
push
stos
push
popf
aas
pop
adc
mov
loopne
jo
jae
or
sub
xchg
mov
xlat
cwtl
dec
mov
ret
mov
fimull
enter
repz
pop
and
mov
inc
xchg
sbb
xchg
jo
jg
push
sbb
ss
mov
in
daa
js
lods
lret
xchg
sub
jo
add
dec
fiadds
insl
xchg
jo
jge
inc
jmp
mov
add
sbb
or
arpl
lret
std
sub
stos
add
jp
aam
roll
xchg
sub
xor
pop
ljmp
repnz
jle
dec
outsb
mov
cmp
mov
std
call
sub
jno
push
push
fmull
jecxz
push
rcll
popa
ret
in
add
inc
mov
cmp
jp
mov
hlt
xchg
xchg
adc
sbb
lea
mulb
lea
mov
pop
int
push
push
mov
fisubrl
stos
pop
outsb
push
sub
push
in
mov
jmp
jmp
mov
loop
in
js
mov
mov
shr
inc
imul
loope
stos
fcoms
insb
mov
bound
roll
cli
loop
xchg
xchg
stc
mov
pop
inc
cmp
dec
fdivr
dec
adc
push
pop
iret
into
or
fiaddl
lds
sbb
sub
pop
cmpsl
sbb
or
flds
fnsave
fsts
insb
adc
lea
jmp
out
push
sti
fstpl
cmp
pop
xchg
mov
jne
mov
outsl
lock
movsl
data16
sub
cli
mov
fildl
stos
push
into
dec
psubd
cs
outsb
shlb
lahf
cmp
cli
jae
push
inc
xchg
pop
xor
out
jne
sbb
iret
sbb
loopne
test
cmp
sub
outsl
cmp
cmp
fidivl
call
mov
push
push
xchg
popw
xchg
repnz
movsb
test
test
cld
push
mov
and
pop
push
popf
repz
inc
ret
push
push
mov
sbb
xor
add
subb
mov
cs
and
mov
dec
dec
xchg
inc
mov
inc
adc
sub
adc
add
ljmp
and
mov
call
sbb
shll
into
mov
cwtl
sbb
iret
fs
in
scas
mov
enter
xchg
push
and
repnz
dec
mov
pusha
xchg
lods
in
and
sarb
xchg
push
ss
mov
daa
repz
in
call
xchg
jne
lods
push
push
mov
in
add
xchg
mov
andb
flds
outsl
cmp
sub
pop
inc
stos
push
push
nop
push
or
stos
push
mov
jmp
fxam
inc
xchg
in
cmp
push
andb
outsl
and
addr16
xchg
in
xor
out
and
jecxz
iret
dec
cmp
push
jmp
push
mov
cli
sub
stc
cmpl
in
mov
sbb
push
cltd
aad
jecxz
ds
mov
adc
lods
push
fistps
in
imul
mov
pushf
lock
xor
and
mov
clc
sbb
push
insb
mov
out
sub
jo
mov
stos
pusha
xor
or
sar
or
cmp
mov
loopne
xlat
dec
test
push
popa
pop
lret
gs
mov
movsb
jge
mov
dec
data16
inc
or
adc
xchg
push
popa
scas
into
jg
cmp
xor
shlb
jo
inc
dec
ds
shlb
scas
cld
dec
jecxz
pop
cmpsb
std
mov
pop
sbb
mov
sub
mov
cli
sbb
fistpl
leave
repnz
push
dec
sbb
test
std
push
jo
out
iret
lock
adc
add
call
pop
jg
sarl
imulb
cs
es
pusha
int3
cmpsb
push
jne
cltd
and
xchg
cwtl
push
aaa
pop
jecxz
xchg
xchg
inc
xchg
jbe
aas
and
popa
xchg
pop
xchg
repnz
dec
jbe
adc
hlt
iret
arpl
or
clc
arpl
pop
stos
movsl
or
rorb
inc
xor
inc
xchg
inc
mov
sbb
outsl
lea
mov
fwait
push
or
mov
fadd
push
jl
popf
adc
push
sbb
roll
mov
cltd
add
gs
mov
mov
sub
call
jbe
fcomps
jno
int3
mov
pop
xchg
push
mov
xor
push
push
fadds
jae
push
pop
mov
mul
test
jg
test
sub
xchg
movsl
pop
adc
mov
jne
xchg
add
lret
movsb
lret
mov
xchg
shll
sahf
mov
lret
or
test
mov
icebp
jb
xchg
shlb
imul
mov
sbb
outsb
es
ret
jmp
mov
daa
out
mov
loope
push
pop
js
insl
ja
add
xor
pop
and
dec
push
sti
insl
lcall
movsl
popf
popf
and
cmp
jge
sub
mov
cmpsl
inc
rclb
mov
pop
mov
adc
cmc
adc
dec
or
ljmp
mov
jo
jle
popa
xchg
inc
or
inc
cmp
push
dec
mov
lds
jo
mov
adc
mov
jnp
paddb
negl
lahf
out
clc
repnz
int
xlat
jmp
std
cmp
rcrb
mov
in
pop
xchg
dec
or
lods
push
pop
jl
push
sub
xor
movsl
and
xchg
test
pusha
pop
push
mov
inc
jo
inc
mov
stc
and
add
fildl
pop
add
jle
psraw
dec
out
push
test
loop
or
push
inc
mov
xlat
push
xchg
sti
xchg
and
and
pop
lret
mov
xor
outsb
lcall
scas
out
cld
adc
push
lods
cli
lea
push
lds
push
repnz
iret
mov
inc
mov
inc
arpl
daa
mov
std
xor
insb
mov
lahf
lods
imul
mov
popa
adc
push
test
fs
fucom
repz
pop
test
pop
stos
mov
mov
add
pop
movsl
fwait
cltd
scas
sub
mov
dec
jmp
imul
xor
mov
cmp
push
stc
lcall
aas
int3
scas
push
and
jg
outsb
dec
bound
cmc
repnz
add
es
lcall
or
test
push
mov
es
lret
fdivrs
mulb
pushf
mov
cmp
xchg
fldl
ror
test
mov
mov
stc
push
shl
push
add
and
mov
lea
jae
pop
pushw
xchg
cmp
cmp
pop
cmp
scas
or
mov
sahf
mov
jle
out
mov
pop
cmp
jae
push
jne
stc
lds
jbe
push
lret
out
iret
dec
cmpsl
push
adc
mov
ja
fmull
lods
cmp
mov
add
and
sahf
mov
call
mov
xchg
pushf
mov
push
loop
mov
addl
push
dec
aam
mov
ret
jae
idiv
mov
fsubrp
pop
call
jns
cmp
mov
imul
mov
xchg
mov
adc
xchg
mov
je
clc
pop
ret
sbb
add
into
in
cwtl
dec
in
fwait
imul
decb
stos
bound
and
pop
push
call
mov
cs
pushf
ds
xchg
jmp
mov
cmp
pop
and
pop
divb
bound
or
mov
sub
or
insl
mov
fisubrl
mull
faddl
push
ret
inc
jmp
cmp
sub
ret
pop
and
adc
jnp
cmp
sbb
pop
xor
fwait
outsb
adc
cltd
jecxz
push
mov
insb
mov
mov
daa
sti
shlb
test
inc
inc
gs
ss
ja
pop
sbb
inc
xchg
pop
inc
xchg
sar
ss
push
jge
push
ljmp
iret
imul
jmp
jmp
cmp
iret
dec
xchg
push
mov
iret
movsl
jmp
mov
mov
std
and
and
rcrb
mov
jmp
cwtl
or
adc
mov
dec
and
sub
cmc
adc
add
push
std
call
ffree
in
mov
inc
sub
mov
gs
mulb
dec
dec
sbb
clc
ja
or
push
jecxz
fldenv
inc
cli
sahf
inc
add
sbb
or
faddl
xchg
mov
clc
mov
movsb
in
in
flds
xor
add
pop
test
jecxz
lods
mov
dec
cmc
mov
xor
loope
loopne
les
mov
pushl
stos
icebp
in
or
or
loopne
xor
cltd
aaa
scas
cwtl
test
push
mov
fincstp
xor
and
lcall
shrl
int
sbb
xchg
push
adc
push
sub
push
repnz
fisubrs
jae
mov
jns
rclb
xchg
test
test
xchg
mov
adc
je
jge
je
aam
xchg
mov
movlps
sbb
mov
mov
test
hlt
xchg
or
inc
loope
aaa
inc
sub
push
in
xchg
cmp
out
and
cli
rcl
sahf
mov
stc
jg
nop
out
xchg
divb
ret
es
dec
addb
jbe
mov
jmp
imul
push
pushf
out
std
push
hlt
loop
pop
inc
fwait
iret
cmp
and
xor
dec
xor
cmp
push
jl
aas
ret
inc
or
ds
xor
ljmp
rorb
sub
dec
in
mov
test
dec
mov
out
mov
jb
sub
or
repz
je
sbb
mov
xor
and
lahf
mov
xchg
mov
xlat
inc
mulb
icebp
les
sbb
scas
test
filds
xchg
jmp
xor
xor
sbb
sti
xor
mov
push
mov
fisttps
ljmp
fisttpll
push
movsl
test
inc
lds
inc
jg
or
xor
pop
xor
mov
pop
push
fwait
arpl
repz
add
dec
mov
movsb
into
push
sub
inc
loop
cwtl
mov
test
push
ret
je
mov
inc
adc
ss
mov
xchg
adc
ljmp
fsubrp
test
jno
sbb
mov
mov
mov
fisubl
jmp
test
jo
in
sbbb
pop
xchg
gs
inc
out
int3
dec
mov
mov
repz
jmp
leave
push
inc
cld
dec
lcall
insl
leave
nop
iret
shl
xchg
ja
das
jne
cmpsl
cmp
cmp
pushf
cmp
jo
xchg
mov
cmpsb
add
stos
int3
and
cmp
push
or
fidivrl
int3
and
mov
lret
es
cmpsb
mov
xchg
movsl
test
scas
bound
lods
popa
pop
adc
bound
subl
jge
int3
jno
nop
xor
jb
test
mov
adc
mov
cwtl
gs
ljmp
adc
sub
ds
mov
xor
jnp
aas
pop
add
int3
in
movsl
stos
rcrb
pop
and
pop
mov
repz
push
dec
xchg
push
jmp
mov
sahf
dec
outsb
lods
lds
test
mov
ret
push
xor
mov
and
out
add
jmp
mov
fildl
mov
and
out
cmc
pop
lret
inc
mov
xchg
sub
xchg
push
js
out
push
out
bound
xchg
pushf
fstpl
pop
jne
xor
jmp
add
lahf
std
sbb
dec
pop
xchg
cmpsl
rcl
stos
adc
push
adc
fldenv
aad
or
xchg
popa
cmpl
ja
imul
test
insb
out
xor
mov
adc
mov
ret
in
mov
dec
dec
push
movsl
jg
xchg
sub
jnp
push
pop
adc
imul
mov
push
adc
loope
mov
and
movsl
lods
imul
add
push
popf
mov
and
stos
pop
sbbb
bound
adc
fldenv
stc
dec
loope
dec
mov
fwait
cli
push
out
jae
mov
lea
jae
jbe
push
xlat
push
xor
test
mov
or
outsl
loop
aad
test
and
mul
adc
mov
pusha
pop
aaa
xor
inc
mov
mov
or
mov
add
movsb
jecxz
hlt
fistps
add
xor
inc
mov
in
pop
add
xor
lahf
icebp
pop
loop
je
inc
fs
mov
shrb
inc
cmp
popf
jmp
inc
fstpl
sub
xchg
mov
cmp
push
sbb
stos
loope
daa
scas
push
mov
or
loopne
mov
xor
mul
xor
cmp
pop
adc
leave
movsb
sti
add
sub
jae
adc
lds
sub
mov
and
push
imul
push
add
insl
xchg
mov
outsl
mov
inc
pushf
sbbl
adc
mov
pop
pop
sbb
sbb
mov
adc
sbb
lods
addl
jne
dec
xchg
mov
and
icebp
adc
imull
or
adc
and
or
sub
mov
jge
test
inc
push
sub
out
mov
push
insb
mov
pop
xlat
cld
adc
lods
push
dec
in
lcall
inc
aaa
in
insl
mov
xor
test
test
jl
dec
mov
out
dec
mov
mov
dec
shll
loope
std
jno
dec
push
push
out
adc
xchg
cmp
fcomp
pop
push
cmp
movsl
jae
xchg
bound
or
test
outsb
xor
sbb
shlb
push
push
adc
cmpsl
mov
aam
push
and
pop
add
cmpsb
aaa
pop
push
lods
push
ror
test
mov
sbb
imul
mov
cmp
fldt
adc
mov
cltd
inc
cltd
push
cli
mov
jne
inc
call
test
and
aad
lahf
push
in
mov
stos
jnp
pop
dec
cmp
test
daa
jp
mov
test
push
mov
add
xor
cmpsb
test
xchg
sub
push
mov
dec
repnz
scas
loope
cmp
or
imul
inc
sub
xchg
xchg
push
xlat
lods
sahf
dec
or
loope
inc
pusha
ficoms
fiaddl
leave
xor
adc
mov
xchg
jns
daa
push
inc
adc
hlt
loop
sub
xchg
cmc
jle
repz
mov
xchg
cwtl
add
xchg
mov
shrl
xlat
push
push
and
shrb
dec
out
imul
dec
xor
jae
and
mov
or
fiadds
xchg
pop
shrb
xor
dec
mov
popa
pop
xor
and
pop
fnsave
inc
lods
clc
stos
xor
jnp
mov
pop
loope
in
jb
inc
test
push
jmp
movsl
push
xchg
test
push
add
push
cmp
repz
daa
xchg
jbe
test
xor
mov
iret
scas
fnstsw
pop
jg
pop
xchg
adc
mov
and
in
adc
jmp
shlb
and
and
xorl
xor
cmc
xor
cwtl
or
out
mov
shlb
or
popa
sbb
lea
mov
jns
sub
add
jbe
push
jnp
sbb
xor
rcrl
add
sbb
push
xchg
dec
sti
sub
add
faddl
cmp
in
cwtl
xchg
enter
jnp
scas
in
and
and
aas
andb
shlb
add
hlt
cmp
loop
xor
setno
hlt
sbb
mov
cwtl
lea
mov
push
push
lea
into
cmp
popf
or
pop
adc
push
push
jnp
push
xchg
mov
aaa
or
std
pop
or
pop
pop
jmp
and
ss
ljmp
lret
lret
pop
insl
mov
mov
pop
loope
rcrl
fstpt
xchg
xchg
jmp
addb
rcrb
fwait
and
push
cmp
cli
jo
pop
jns
mov
aam
jne
dec
dec
inc
lds
das
pop
adc
dec
sahf
outsb
or
outsl
les
jno
xor
pop
adc
and
lcall
jnp
mov
mov
push
mov
adc
hlt
movsb
push
add
lcall
fmulp
mov
leave
mov
adc
pop
or
aaa
dec
dec
mov
push
add
mov
or
aam
nop
push
int
sar
add
andl
gs
jo
data16
xchg
jg
mov
aas
jg
xor
inc
test
inc
mov
loopne
push
aaa
jne
cmpsb
fs
mov
in
das
and
mov
xor
jle
pop
sbb
inc
pop
pop
outsl
iret
filds
push
mov
loope
dec
push
lds
popa
pop
xchg
sbb
and
push
repnz
jp
or
cmp
cmp
dec
dec
xor
xchg
and
mov
xchg
leave
out
int
fwait
mov
inc
enter
mov
sub
mov
dec
lods
ja
pop
insb
xchg
pop
clc
movsb
adc
test
fwait
out
jbe
das
fdivrp
mov
pop
cmp
popa
inc
mov
pop
xor
inc
sbb
daa
pop
xor
mov
and
mov
dec
lods
stc
popf
rcrl
add
or
rcl
sbb
push
lock
pop
das
jmp
mov
xchg
add
rcll
cltd
pop
scas
jmp
repnz
call
das
inc
dec
adc
adc
push
or
sbb
testl
or
data16
int3
pop
sub
lea
xor
std
pop
mov
ss
inc
add
int3
aas
inc
loop
icebp
push
pushl
xchg
inc
ss
je
cmpsl
stos
hlt
or
xor
jns
jecxz
mov
lret
popa
inc
ret
sub
das
mov
cmc
push
pop
mov
in
push
repz
ret
mov
aam
out
sub
adc
dec
pop
sbb
sbb
loop
js
cmc
not
jns
fwait
loopne
adc
shlb
jmp
push
sbb
in
inc
push
add
or
or
in
xchg
dec
xchg
adc
and
sti
inc
cmp
mov
jbe
push
sub
cld
dec
popf
popa
test
fdivrl
adc
mov
push
outsl
mov
mov
clc
fwait
and
popa
sbb
jecxz
loop
pop
bound
arpl
popa
mov
jo
adc
mov
fidivl
inc
and
cmp
pop
sub
sbb
frstor
dec
jo
sbb
fsts
repz
je
dec
xor
mov
xlat
addb
jo
inc
cmp
push
inc
in
sub
fnstcw
inc
xchg
flds
mov
cmp
xchg
stc
mov
notl
roll
sbb
push
sbb
fcmovnu
in
add
mov
pop
test
mov
fdiv
stos
jnp
andb
xchg
inc
out
popa
mov
or
mov
pop
push
mov
scas
push
sbb
insl
sbb
push
popa
sbb
out
into
in
call
sbb
or
or
cmc
dec
fsts
insl
cmp
cwtl
aam
mov
enter
sub
and
push
xchg
popf
iret
push
imul
fs
adc
xchg
shll
push
dec
inc
push
jge
or
sbb
stos
dec
push
loop
test
pop
pop
and
inc
push
sarb
or
sbb
pop
push
add
outsb
rcll
inc
pop
pop
rol
inc
xor
cmp
jecxz
mov
imul
and
cli
xor
shll
in
int3
or
in
test
je
xchg
push
sbb
sub
fisttpl
jp
int
add
sbb
adc
fs
test
fistpl
dec
pop
sbb
int3
daa
loope
adc
push
pop
pop
insb
daa
add
dec
addr16
dec
mov
cmc
push
mov
cmpl
sahf
pusha
outsl
imul
loope
cmpsl
int3
movsb
loopne
push
js
mov
mov
push
ret
outsl
ds
xchg
repz
inc
aas
push
xchg
push
pop
aaa
cs
cmpsb
mov
in
data16
inc
hlt
mov
aaa
sti
jb
inc
sub
sbb
sbb
push
sub
xchg
aam
mov
xchg
jl
inc
inc
push
std
lret
test
adc
lahf
iret
stc
xchg
xchg
ja
fnstsw
in
lret
push
es
leave
mov
dec
addr16
xchg
icebp
xchg
hlt
lahf
test
sbb
sub
lret
fnstcw
cltd
jmp
filds
sti
xchg
dec
sbb
fdivrl
jbe
pop
xor
xchg
stos
cmpsl
cld
es
cmp
movsl
out
inc
mov
xor
sub
ljmp
push
inc
repz
dec
lock
ds
int
clc
xor
cmp
lret
ljmp
fs
aas
xchg
dec
mov
mov
movsb
rolb
sbb
cmpsl
add
push
sbb
test
add
pop
fxch
pop
mov
in
test
pushf
mov
xchg
xorb
pop
sbb
inc
test
sbb
je
int
mov
mov
mov
in
mov
testl
inc
jg
mov
mov
pop
outsb
sub
inc
mov
fwait
mov
hlt
jl
mov
cmp
movsl
ret
add
cwtl
inc
test
sbb
fs
pop
adc
mov
sub
test
loopne
pushl
xchg
call
xor
pop
add
xchg
inc
push
je
and
sbb
pop
inc
add
jge
mov
insl
and
mov
fsubl
loop
les
push
jge
mov
sbb
xchg
dec
ja
js
xlat
mov
fcomip
or
test
repnz
adc
daa
pop
pop
int3
adc
adc
xlat
in
cmp
jecxz
fstpl
jmp
test
shlb
mov
dec
mov
into
jmp
out
ja
sub
mov
pop
mov
dec
jge
enter
push
jns
xchg
jnp
fcmovne
loop
push
jecxz
mov
xor
jo
orb
mov
cli
mov
leave
outsb
clc
push
mov
sub
sbb
push
push
fisubl
xchg
repz
pop
mov
ja
repz
movsb
pop
ret
mov
pop
dec
dec
rcll
mov
jecxz
inc
xchg
enter
ret
xorl
push
pop
in
cli
xor
sbb
movsb
clc
inc
xchg
pop
les
sbb
mov
and
popf
lret
ficompl
mov
fldenv
jmp
jge
pop
xchg
cltd
push
dec
cmp
popf
in
or
mov
xorb
xchg
iret
pop
ljmp
outsb
sub
das
pop
mov
sub
pop
xor
xor
mov
sub
repz
pop
sub
stos
dec
mov
shll
loope
xchg
push
ret
adc
xchg
xchg
sbb
sarb
jg
aam
inc
ficompl
lcall
in
adc
dec
fidivrl
aaa
mov
mov
mov
lcall
cmp
pop
mov
incl
fidivl
and
push
and
mov
test
mov
xchg
push
in
mov
ds
fwait
xor
jmp
pop
xchg
stos
push
mov
and
push
or
xchg
test
fwait
lock
pop
loop
fnstsw
sbb
test
xor
cli
and
cmpsl
daa
cmp
scas
xchg
outsb
ljmp
mov
xor
xchg
test
pop
imul
ljmp
push
test
loop
stos
fstpt
sbb
clc
shrl
or
cmp
ds
out
je
insb
mov
es
mov
mov
repz
jo
ds
int3
sub
cwtl
aad
fs
pop
das
push
cltd
jnp
lahf
cwtl
out
mov
push
push
xchg
cld
sti
inc
mov
loop
iret
xor
nop
inc
ljmp
fcmovbe
shll
pop
mov
mov
add
outsb
mov
cmp
jl
jbe
insb
sub
push
pop
push
jbe
enter
mov
cmc
xorl
xor
fdiv
add
xchg
stos
mov
push
sbb
mov
cmp
jge
inc
stos
imul
add
push
pop
fistl
jae
les
scas
inc
insl
mov
xchg
jg
movsl
xchg
movsb
lods
mov
sub
out
imul
pop
arpl
test
mov
xlat
aad
jne
inc
scas
xchg
fisubrs
add
cmp
mov
lock
adc
cmpsl
lret
and
and
jnp
pushf
daa
mov
aaa
xchg
ret
push
dec
out
cmp
fisubl
dec
das
cmp
cld
push
mov
mov
adc
repz
lock
pop
adc
or
fmull
pop
jns
mov
jnp
add
and
jbe
inc
xor
stc
add
sub
inc
push
cmovp
lahf
call
sbb
lret
scas
xchg
xchg
rcll
mov
xchg
xor
adc
push
or
sub
pop
rorb
jne
sbb
aaa
dec
lods
add
in
pop
pop
stc
inc
inc
push
les
or
and
mov
js
adc
int3
fs
and
mov
out
xor
lret
sub
adc
pop
and
dec
js
lret
sub
insl
sbb
repz
xchg
movsb
mov
mov
cmp
inc
inc
mov
loopne
std
mov
push
dec
lahf
cmp
scas
dec
inc
je
sti
call
cli
push
rolb
pusha
push
mov
mov
test
lds
mov
jle
inc
sbb
addr16
les
dec
es
jb
and
mov
mov
jae
gs
int3
adc
test
add
sbb
pusha
cmp
and
xchg
or
inc
xor
add
lods
js
xchg
sub
movsl
xchg
dec
and
orb
sbb
xchg
add
sti
loop
mov
mov
push
push
cmc
fisttpll
jae
or
aas
ret
movsl
test
or
icebp
adc
bound
rorb
mov
dec
or
xchg
popa
xor
outsb
cli
cmpsb
test
adc
push
lds
mov
pop
aaa
movsb
ja
xchg
scas
stc
arpl
and
sbb
ret
xchg
addr16
mov
or
adc
dec
icebp
lds
xchg
fwait
clc
add
xchg
aam
popa
movsl
cmp
ret
push
cmp
xor
and
inc
ss
fldenv
aas
cld
in
sbb
adc
adc
imull
pop
cmpsb
inc
or
cmpsl
inc
scas
cmp
adc
jecxz
xor
cwtl
xchg
loop
bound
test
cmc
in
sub
jmp
mov
xor
not
cmpl
sbb
fcomps
pop
pop
adc
and
sbbl
adc
xor
test
js
repz
and
pop
dec
out
xchg
out
cmp
jno
cmp
mov
out
in
mov
jb
dec
leave
inc
push
jmp
adc
mov
loop
jle
adc
xchg
mov
sbb
cmp
scas
or
fwait
xchg
add
fdivrl
inc
fs
int3
shrl
inc
shrb
inc
out
fisttpl
sub
push
cmpsl
addl
mov
outsb
push
scas
inc
xchg
mov
lods
sub
outsl
lcall
mov
and
jns
imul
movsb
sbb
sti
inc
jo
aad
fstpl
jge
xchg
jns
nop
ljmp
lods
enter
inc
fs
sbb
xchg
aam
test
push
inc
mov
addb
daa
mov
push
mulb
jbe
cmp
and
cmpsl
cmpsl
movswl
dec
mov
inc
aad
pop
xchg
xor
iret
clc
jecxz
dec
aad
aad
scas
outsl
xchg
mov
cmpsl
sub
popf
mov
loope
sub
and
mov
push
mov
xchg
pop
push
xor
js
sbb
pop
out
mov
roll
loop
pop
je
ja
stc
sbb
decl
inc
mov
ljmp
xchg
inc
xchg
push
fnstsw
mov
inc
inc
inc
push
out
sub
scas
dec
jb
xchg
mov
push
repz
or
jb
ret
popa
adc
fnstenv
jae
in
pop
outsb
call
out
jnp
mov
jne
or
or
into
sbb
mov
cli
push
adc
push
mov
sub
xchg
rorl
mov
ficoms
stc
inc
lods
push
jnp
sahf
mov
dec
imulb
mov
movl
ret
lret
sub
cs
bound
ret
insb
cmpsb
shrb
sbb
sbb
dec
jge
mov
add
jb
orb
xor
fidivs
faddl
inc
in
mov
repnz
jbe
shl
dec
test
add
call
or
fisttpll
stos
dec
lds
mov
sub
and
xchg
or
mov
cmpsb
jns
lcall
sub
add
mov
cmpsb
aad
mov
pop
mov
dec
imul
mov
pop
dec
rol
js
xchg
lret
xor
cs
fstpt
pop
xchg
sbb
cmp
test
rol
jle
mov
jo
rclb
mov
mov
xor
cmp
lea
xchg
out
ljmp
xchg
cmp
sahf
pop
and
inc
dec
fnstcw
mov
sub
das
xor
insb
xor
outsl
sti
mov
shrl
popf
xchg
sub
aaa
stc
dec
dec
push
stos
test
daa
das
mov
aam
sub
lods
cmpsl
out
pushf
or
or
lcall
mov
faddl
mov
inc
adc
adc
xchg
fstps
cmpsb
jge
ret
insb
rclb
sbb
xlat
sbb
and
repnz
mov
js
shrl
out
mov
out
xor
aaa
leave
cmpsb
loope
mov
pop
xchg
call
xchg
imul
pop
inc
xchg
mov
nop
call
adc
adc
dec
addb
add
dec
in
test
xchg
push
cmp
scas
popf
pop
dec
jbe
in
inc
pop
adc
jecxz
sbb
stc
jbe
mov
fstl
out
xchg
sub
push
stc
sbb
hlt
xor
ds
popf
push
ljmp
xor
push
add
rclb
fwait
xorl
push
sub
int
add
hlt
test
pusha
fimuls
adc
lcall
enter
cmp
inc
ds
adc
ja
and
dec
adc
jo
xchg
fisubrl
fcompl
xor
pop
lds
add
pmulhuw
addr16
ficoml
ja
mov
cmp
lret
push
pusha
push
xor
ljmp
fwait
sti
xor
dec
add
pop
add
pusha
or
enter
arpl
dec
enter
cmpsb
sbb
lcall
adcl
sub
jae
adc
jnp
andb
add
inc
or
in
cli
mov
and
or
xchg
and
dec
cmp
inc
mov
pop
aaa
and
xchg
sbbb
fs
mov
pop
cltd
clc
jmp
xchg
hlt
pushf
loop
mov
mov
in
and
mov
cmp
je
or
and
xchg
mov
ljmp
fsubr
pop
cmp
jmp
add
sbb
push
cmp
pop
push
test
cltd
je
addl
or
ds
jns
pusha
xchg
mov
nop
xchg
dec
jbe
das
push
lret
xchg
add
arpl
das
mov
pop
inc
aas
jge
notl
pop
pop
adc
xchg
sub
mov
jl
cwtl
lret
cli
inc
cmp
fidivrl
int3
repz
dec
add
jnp
add
xor
and
repz
xchg
jno
mov
les
push
mov
popa
mov
mov
outsl
iret
outsb
pop
test
popa
into
nop
lret
add
xchg
pop
inc
enter
jne
xor
dec
add
or
mov
mov
sub
arpl
lahf
stos
pop
xchg
xor
sub
movsl
ficoml
add
scas
call
call
addr16
or
lods
mov
push
scas
cli
insl
mov
mov
pop
pop
mov
add
push
out
cmp
xchg
out
aaa
adc
push
jae
push
mov
rorl
push
push
inc
test
dec
aas
lock
aad
cmpsb
or
inc
pop
ret
push
or
add
popf
in
imul
push
adc
jg
or
xor
jb
dec
lock
scas
mov
sub
lock
pop
loope
aad
xlat
dec
pop
sbb
daa
push
lret
mov
adc
dec
jb
pop
and
sbb
js
mov
inc
mov
adc
mov
gs
iret
stos
mov
mov
jnp
repnz
xchg
sbb
cmp
in
mov
loope
outsb
popf
mov
pop
mov
scas
inc
into
push
xchg
insb
mov
stos
xchg
pop
movsb
jmp
cmpsb
cli
fsubp
and
bound
mov
sub
sbb
and
into
call
jns
jno
push
mov
data16
mov
out
or
push
or
filds
loop
xchg
rorl
out
cmp
dec
push
push
fsubs
lock
std
mov
xchg
pop
movsb
imul
mov
mov
jnp
xchg
inc
xchg
adc
mov
gs
subb
shll
sub
sbb
and
or
outsl
loop
push
push
mov
dec
xchg
inc
or
jge
or
stc
shlb
hlt
out
and
jp
pop
sbb
jl
or
adc
imul
in
inc
shlb
cmp
repz
adc
pop
rolb
cmp
and
mov
pop
cld
and
add
inc
cmp
push
cwtl
lods
and
mov
xlat
pop
das
xchg
push
pusha
cmp
dec
imul
fsubrp
mov
cmpsl
push
jge
mov
jbe
fcoml
subb
das
mov
pop
cltd
adc
cmp
sbbl
gs
sub
sbb
push
lods
dec
xchg
repz
scas
stos
cwtl
mov
cmc
popf
cmp
jbe
les
mov
inc
xchg
cli
cmp
mov
lcall
push
daa
std
dec
inc
push
pop
in
stos
mov
dec
cmp
jno
add
int
xor
lret
pop
sbb
stos
pop
test
mov
xchg
add
mov
push
sbb
adc
pop
jnp
mov
test
jecxz
cmp
inc
add
lock
adc
mov
mov
mov
test
lock
or
das
sub
and
xchg
add
mov
stos
fnsave
and
dec
jl
cmp
in
nop
stos
mov
clc
and
int
mov
dec
in
sub
insl
setne
sti
test
leave
pop
psadbw
mov
aam
xorl
sub
xlat
xor
add
or
loopne
dec
mov
sbb
cmp
pop
or
fbstp
push
adc
lock
stos
arpl
movb
in
loopne
outsl
lcall
outsl
int3
test
or
mov
add
cmpsl
cmpsb
pop
lret
or
inc
mov
inc
frndint
cmp
push
bound
cmp
stc
xor
jg
out
cmp
xchg
aas
xor
lret
sub
jne
test
xor
pop
mov
imul
ret
std
sbb
in
jb
stc
mov
int
mov
sbb
decb
outsl
fisttps
xor
shlb
shlb
jnp
pop
jb
inc
adc
cld
adc
inc
popf
imul
or
cmc
or
jmp
pop
popa
dec
push
xor
push
xchg
fidivs
xor
push
or
jb
mov
outsl
sbb
push
xor
psubb
adc
int3
movsl
rcl
scas
adc
out
lret
js
pop
jg
out
adc
shll
sub
test
ja
xlat
add
fcoml
mov
push
cmp
stos
imul
fildl
or
jne
int3
pop
scas
mov
xor
pop
inc
push
int3
or
sub
stos
orb
mov
mov
test
pusha
dec
in
iret
iret
jge
cld
cltd
in
cmp
sub
pop
pusha
push
sub
in
fcmovu
daa
loop
push
cmp
mov
and
movsl
lcall
ds
imul
fstpl
mov
mov
xor
sbb
jnp
jno
jo
outsb
push
scas
or
pop
mov
jb
pushf
ret
in
or
mov
lods
pop
sub
std
mov
jb
cmpsb
loope
mov
xchg
jb
adcl
and
push
call
sbb
imul
leave
or
jle
xchg
pop
daa
lea
push
xchg
cmc
jp
inc
and
add
repnz
cmp
fadds
mov
xchg
bound
and
fwait
lcall
int3
imul
flds
fwait
lods
sub
jb
daa
and
mov
gs
arpl
xchg
test
sbb
jbe
cwtl
jae
mov
pop
xchg
cli
or
xchg
add
nop
mov
lahf
jg
sub
xchg
inc
cmp
decb
jle
xchg
xchg
jmp
shl
cmp
push
rorl
pop
rolb
and
pop
dec
mov
push
imul
es
lock
cmp
jmp
rolb
mov
or
shlb
jge
mov
xchg
insl
subl
stos
mov
std
es
xor
push
mov
rcl
adc
test
les
xchg
lcall
mov
mov
out
loopne
inc
xchg
cmp
add
or
mov
lds
or
add
popf
addb
push
xchg
mov
and
add
mov
push
js
popa
mov
dec
push
ret
mov
jg
or
and
test
popa
scas
adc
and
insb
pop
mov
shrl
adc
push
movsb
sub
and
mov
fbld
xchg
mov
fdivr
shr
jns
in
inc
stos
xlat
lea
sub
sbb
gs
mov
pushf
dec
jbe
rcrl
into
aas
jne
mov
fwait
jmp
xor
scas
clc
pop
pop
lea
je
sbb
psllw
rolb
stos
out
inc
rorl
sbb
into
cmp
or
cmp
mov
add
icebp
dec
jle
jae
xchg
iret
lcall
push
pop
out
mov
dec
pop
loope
dec
xchg
lahf
arpl
rol
xor
xchg
jg
adc
mov
fidivl
xchg
push
inc
or
adc
sbb
insb
or
add
fdiv
movsl
add
lahf
cmp
sti
out
jmp
sub
jo
repnz
loopne
int
stos
cs
cmp
movsl
call
lea
lods
xchg
xor
jnp
aad
sub
dec
pop
inc
adc
inc
daa
hlt
stos
loope
test
imul
js
imul
int
lahf
xchg
insb
bound
inc
mov
int
pop
test
sub
mov
stos
pop
into
adc
cmpsl
insb
or
fdivl
mov
in
pop
loop
out
push
mov
mov
dec
leave
shl
out
mov
daa
ret
xor
xchg
cmpsl
sbb
dec
ret
rol
add
jle
mov
adc
jae
add
std
dec
fwait
stc
or
sub
fidivs
pop
sbb
xor
test
out
xor
fisttpl
test
fwait
push
mov
pushf
lret
fiadds
push
repnz
sub
dec
push
repnz
mov
dec
mov
gs
and
mov
jg
lcall
sub
or
test
test
ja
mov
jg
xrelease
dec
inc
in
add
sub
lret
sbb
shlb
adc
push
and
push
loop
add
sub
adcl
push
lds
or
push
inc
loopne
jmp
js
push
xchg
add
jp
out
push
inc
sbb
jo
cmpsb
jg
xchg
mov
addr16
add
popf
cli
lock
sbb
inc
xchg
in
ficoms
dec
push
mov
or
lods
lcall
add
dec
mov
mov
add
mov
lds
in
xor
push
inc
out
lods
push
dec
inc
push
push
jmp
stos
inc
movsl
sub
mov
jp
test
sbb
nop
loop
and
movsl
xor
pop
lods
inc
mov
daa
dec
mov
stos
in
pusha
mov
and
and
mov
mov
dec
jnp
jle
pop
test
pop
xchg
add
push
fidivrs
xor
jb
jo
pop
sti
inc
and
lret
cmp
test
icebp
leave
mov
lock
lret
mov
lock
xchg
mov
gs
in
dec
pop
xor
jnp
lds
jmp
aad
sar
pop
adc
add
dec
mov
dec
movsb
lcall
dec
insb
popa
ret
add
or
fwait
hlt
mov
sahf
pop
cmp
cvttps2pi
arpl
adc
cltd
inc
mov
icebp
or
enter
mov
sti
inc
scas
add
lea
outsl
pand
fwait
imul
std
loope
mov
fistps
ljmp
xchg
leave
in
sarl
jg
xchg
jno
int3
std
xchg
xor
pop
mov
stc
adc
testl
add
jno
push
and
pop
out
scas
js
mov
pop
dec
lret
sub
mov
pop
pop
sbb
and
and
fnsave
lock
jbe
push
and
negl
push
mov
adc
jno
xchg
xor
fldenvs
push
loopne
sbb
fisubrs
pop
fmull
xchg
cwtl
jg
mov
push
sbb
jbe
repz
imul
inc
sub
adcl
orb
push
test
js
add
test
and
shll
inc
mul
outsb
lahf
imul
or
js
cmpsb
loop
test
mov
sbb
fistl
movsl
mov
shl
xchg
rcll
inc
enter
adc
dec
mov
loop
rcrl
xchg
movsb
scas
pop
roll
arpl
shlb
mov
xor
pop
mov
and
cmpsl
mov
mov
mov
push
cmc
push
enter
sbb
sahf
bound
arpl
fadd
pop
pop
mov
iret
jp
mov
adc
leave
mov
sub
or
xchg
mov
mov
or
pop
es
push
cmp
int3
jns
repz
stos
ret
cld
iret
and
mov
inc
in
decl
and
inc
repnz
push
shrb
adc
sbb
popf
shrb
sbb
daa
faddl
mov
sbb
push
lea
mov
sbb
popf
adc
idivb
ret
das
xor
jl
xchg
icebp
mov
ds
inc
xor
xchg
stos
and
jb
sbb
pusha
add
imul
mov
or
inc
sbb
scas
push
xchg
fldl
or
mov
daa
loope
jne
jne
cmc
fistpll
xchg
sbb
jnp
rorl
xor
inc
adc
jns
fwait
pop
mov
fldcw
push
adcb
movsb
pop
mov
jle
pop
lods
jl
lret
incb
fisttps
xor
sub
push
cmpsb
and
lea
faddl
or
push
insl
call
pop
lcall
repnz
int3
icebp
fidivs
dec
xchg
stos
lock
fnstsw
mov
fisttpl
push
lcall
fsubrl
mov
push
enter
sar
test
jb
repnz
push
sub
clc
leave
jle
jnp
dec
lods
mov
lahf
sbb
orl
pushf
push
cwtl
and
lea
test
cwtl
ljmp
cmp
cld
add
ror
xor
push
jno
stos
inc
fstps
lods
jb
or
cli
ror
nop
and
sti
jns
js
add
sub
xor
jns
insl
mov
xchg
push
xor
jbe
test
pop
push
xchg
sbb
andl
xchg
in
cmp
fisttpl
sar
dec
or
mov
ficoms
pop
add
negb
mov
inc
jne
jp
ret
jae
jp
popf
dec
pop
int
sbb
movsl
push
es
inc
jbe
fistpl
mov
in
dec
ret
shrl
cwtl
sti
daa
push
mov
inc
dec
and
popf
iret
repz
lds
fldenv
je
lret
jne
movsl
in
cwtl
and
loop
hlt
adc
mov
xchg
inc
ret
test
inc
push
or
push
icebp
ds
shlb
imul
sub
out
cmpsl
xchg
xchg
jbe
movsl
ret
cmp
cltd
jno
dec
nop
divl
mov
mov
int
jge
xor
repz
rolb
out
aam
enter
fildl
cmpsl
insb
nop
pop
xchg
iret
mov
mov
inc
lret
pop
loopne
inc
fisubrs
iret
ss
in
pop
pop
sbb
dec
decl
fsubl
stc
mov
cmp
movsl
rclb
outsl
int
iret
sbb
arpl
call
push
cs
inc
sbb
add
sub
repnz
vcvttsd2si
loopne
jns
jge
mov
add
outsb
mov
xchg
sub
pop
or
or
sbb
negl
pavgw
gs
or
jecxz
push
or
std
iretw
or
fisubrl
ds
inc
jmp
jp
xchg
lea
jb
aas
sub
out
clc
pop
in
popf
add
add
push
int3
aad
jmp
xchg
cmp
aas
std
dec
js
mov
sub
repz
aas
sub
mov
pop
add
rolb
mov
iret
xor
pop
sbb
and
or
sub
pusha
xor
inc
jb
jle
addr16
lods
aam
cmp
loop,pt
dec
dec
lret
aad
sahf
cmp
or
mov
test
push
adcb
mov
cs
dec
sbb
xor
mov
inc
sbb
leave
sarl
mov
repnz
shl
rcrb
fcoms
fistpll
outsb
popa
jo
testb
add
lods
rcll
icebp
iret
dec
jle
jge
push
in
mov
mov
sub
sub
mov
movsl
cmp
sbb
jl
sub
cmp
aas
rorb
mov
hlt
lret
out
outsb
fcoms
out
mov
push
sub
sub
push
and
je
sub
jp
pop
orb
test
sbb
lock
sbb
lods
cltd
adc
inc
and
pop
xchg
pop
dec
cli
inc
inc
push
mov
ljmp
mov
xor
sub
out
cmp
mov
adc
jno
jl
aas
jnp
sbb
outsl
les
in
sbb
mov
dec
dec
testb
pop
xchg
imul
push
jp
popa
test
mov
mov
xchg
jmp
sub
aaa
hlt
bound
aad
cltd
aaa
shrb
cmp
ret
cmpsb
fisubrs
jle
jmp
outsl
sbb
scas
les
sub
xchg
or
pop
gs
sub
cwtl
sub
mov
scas
xorb
pop
in
fs
das
sbb
push
jno
mov
bound
mov
push
push
mov
pop
out
fistl
dec
sbb
imul
std
aam
sub
add
test
push
or
mov
popf
pop
jge
mov
repz
sub
fnstsw
out
mov
pop
scas
xor
outsl
push
jbe
cmpsl
mov
xor
cmp
daa
cmp
sti
mov
cmp
fcmovne
mov
or
jne
mov
fdivs
mov
clc
mov
scas
mov
cltd
xchg
pusha
pusha
fcoml
mov
add
and
pop
mov
loope
enter
mov
or
das
imul
and
sbb
mov
lahf
pop
test
mov
cmp
mov
push
stos
lcall
mov
shrb
fs
mov
add
xchg
in
insl
fprem
aaa
leave
sbb
inc
and
repnz
cmpsb
ljmp
xchg
pop
cmpsl
aas
adcb
loope
in
in
push
popf
sub
push
sub
push
dec
stc
gs
mov
ljmp
dec
pop
push
js
xchg
loop
ja
testl
scas
or
loope
push
jle
ret
push
inc
push
mulb
and
xchg
neg
inc
gs
pusha
sub
notb
imul
adcl
iret
xor
jmp
cli
pop
pop
and
mov
mov
notl
fldenv
push
pop
shll
sbb
mov
jo
test
mov
push
add
mov
mov
call
out
stos
xchg
lods
je
push
jecxz
into
gs
fisttps
stos
aaa
lock
xor
push
testb
add
push
jecxz
or
jb
dec
mov
out
adc
int
mov
fdivl
dec
sbb
scas
faddp
sysret
dec
dec
jmp
dec
loop
mov
pop
outsb
ret
mov
add
addr16
rcr
cmp
adc
jne
pop
mov
testl
ds
incl
push
andb
mov
push
inc
int
inc
mov
pop
mov
mov
frstor
add
jge
or
cmp
es
popa
mov
cmp
aas
push
mov
ret
jae
dec
fistpll
ja
xor
mov
in
cltd
icebp
adc
and
or
mov
lds
fidivs
ffree
js
loope
dec
jo
inc
mov
xchg
pop
push
inc
bound
nop
sub
mov
clc
or
shll
push
cmp
fcomps
add
cmpsb
xchg
btc
ss
xchg
fistpll
pop
je
mov
test
mov
sub
xchg
mov
pusha
jl
dec
adc
mov
lret
lcall
pop
pop
stos
subl
sub
sbb
mov
aad
adc
in
icebp
fcomps
dec
subl
jle
adc
in
nop
leave
add
add
inc
movsb
inc
add
xchg
pop
loope
mov
mov
shl
jnp
outsl
fcoml
cmc
out
jne
leave
jne
lock
mov
mov
fcmovnbe
or
or
or
add
jmp
mov
adc
cmpsb
or
and
push
dec
leave
sbb
cmpsb
mov
imul
sub
jnp
mov
fildl
repnz
pop
pop
xchg
mov
nop
push
ret
xchg
mov
jae
lods
iret
cmp
das
cmp
cmp
xchg
adc
addr16
pop
loope
add
dec
int
imul
ja
mov
les
inc
inc
push
pop
insl
dec
dec
aaa
shlb
dec
daa
jo
sbb
bound
test
mov
sub
adc
mov
and
fdivrs
push
jg
cmp
in
nop
out
push
mov
pop
sbb
push
mov
stc
or
insb
sbb
into
and
shlb
aas
push
mov
adc
add
mov
imul
jne
push
mov
xor
dec
mov
lahf
mov
push
ret
sti
out
mov
inc
subb
scas
sbb
add
dec
popf
push
inc
pop
pop
pusha
mov
dec
jl
pop
arpl
push
lods
pop
xorb
push
xor
mov
mov
js
dec
cli
xor
repz
dec
inc
js
and
mov
subl
push
xor
xchg
cs
out
sbb
add
pop
stos
repz
xchg
add
mov
push
in
das
and
jb
inc
idivl
mov
jno
and
popa
stos
jecxz
sub
push
pop
std
adc
jae
mov
addr16
fptan
daa
adc
inc
popf
inc
jno
xchg
push
mov
sbb
pop
jl
fsubr
xor
inc
mov
add
inc
xor
stos
xchg
bound
mov
mov
xchg
xchg
rcrb
pop
mov
inc
mov
arpl
jnp
test
ds
daa
jle
mov
mov
loope
frstor
in
pop
xchg
mov
cmc
loop
insl
popf
xchg
loopne
xchg
call
inc
into
mov
mov
sub
cmp
stc
sub
hlt
cmpsb
add
sbb
xchg
pop
xchg
dec
mov
cmp
fadd
dec
nop
xchg
adc
mov
xor
call
jl
popf
jg
dec
out
dec
scas
fwait
sbb
lods
ds
sti
loope
cmpsb
lock
xor
pop
pushf
cld
xorl
sbbb
loope
stos
cltd
ss
adc
mov
mov
push
std
inc
mov
pop
insb
rcrb
push
mov
and
ror
and
dec
and
pop
push
test
pop
icebp
repnz
aad
xor
scas
inc
inc
mov
andl
scas
push
subb
out
sti
mov
mov
gs
push
out
loopne
inc
cmp
aas
push
scas
sub
ret
sbb
xor
pop
pusha
mov
mov
pop
pusha
mov
pusha
xor
test
and
jmp
dec
xorl
sub
mov
xchg
dec
jp
arpl
cwtl
aam
movsb
inc
jl
mov
loope
xchg
out
adcb
cmc
push
lea
adc
mov
bnd
sub
in
scas
adc
sub
mov
dec
imul
notl
sbb
mov
fcoms
stc
movsl
sub
add
dec
lea
clc
and
daa
xchg
pop
push
or
jnp
movsl
adc
xchg
lcall
dec
mov
enter
jae
lods
cmpsl
test
flds
jge
out
loop
in
dec
adc
aas
pop
xor
push
pop
mov
jl
fisubl
add
repnz
jbe
pop
in
jo
stc
inc
push
bound
jmp
vmread
jnp
int
add
cmp
fildll
andl
icebp
inc
push
cmp
xor
fcomps
fs
mov
or
in
add
mov
mov
out
test
mov
jno
flds
int3
sti
xchg
mov
ret
stc
lds
iret
pop
addr16
push
push
xor
imul
lock
fwait
fs
sub
icebp
push
sub
xchg
xor
push
daa
jne,pt
daa
jge
fsubrs
mov
enter
aaa
lods
ret
std
movsb
in
arpl
popa
fsubl
sub
int
mov
ss
push
jnp
mov
or
jmp
lods
xor
testl
pop
add
sti
out
adc
ss
lahf
push
dec
out
stos
jge
dec
and
dec
je
enter
jae
mov
dec
es
jbe
sbb
sahf
outsb
and
cmp
inc
mov
popa
jnp
repnz
ja
into
jle
mov
mov
lods
rcrl
fsubrs
adc
add
fwait
popa
adc
fimuls
lds
pop
fcmovbe
lret
push
push
orb
daa
leave
inc
scas
jne
push
mov
loope
in
adc
lods
sub
xor
adc
lock
nop
sub
fildll
in
rclb
or
je
out
mov
pop
xorl
ja
fstps
mov
dec
jle
fnstsw
sub
push
pusha
cmp
or
loopne
cwtl
cmp
pushf
fistps
insb
and
lcall
in
lods
popf
gs
cmp
js
ja
mov
pop
cmp
in
pop
cmp
insb
int
xchg
mov
mov
sbb
test
mov
and
push
jmp
aad
jnp
ljmp
mov
mov
in
inc
add
mov
xorb
sbb
mov
jg
and
mov
mov
push
add
pop
add
sbb
push
jge
ja
cli
scas
rcl
xchg
pcmpgtb
mov
pop
push
push
adc
xlat
stc
aas
or
inc
icebp
sbb
push
push
dec
xchg
xchg
imul
imulb
and
sarb
dec
jmp
sti
sbb
adc
mov
leave
loope
add
lods
adc
mov
xchg
data16
adc
cli
xchg
dec
notl
lods
cmp
mov
lock
push
pop
shll
lods
call
xor
shl
and
repz
outsl
adc
inc
test
adc
inc
dec
sbb
xlat
arpl
testl
jle
hlt
jae
mov
xor
sub
andl
jo
mov
jno
jnp
in
mov
jne
mov
cs
int3
push
ret
test
pop
jne
inc
mov
dec
fwait
into
lcall
ljmp
adc
out
adcb
call
ror
hlt
pop
inc
lcall
rorb
pop
mov
je
int
subb
xchg
std
mov
fisttpll
push
xchg
jmp
pop
sub
push
push
test
aas
mov
lea
movsl
pop
inc
mov
ljmp
mov
pop
xchg
push
lret
and
popa
and
dec
je
lahf
add
lcall
rolb
clc
inc
in
loope
xor
in
pop
leave
add
xor
push
and
ds
dec
sub
ds
pop
sti
nop
movsl
cs
shll
aas
xchg
push
call
addl
or
xchg
jg
mov
dec
mov
fs
cmp
or
jne
ret
cli
mov
hlt
push
sbbl
int
popf
sbb
into
ljmp
fadds
push
insb
cwtl
in
fwait
inc
push
notl
xor
mov
cmpsl
jo
xorl
jbe
dec
push
adc
adc
mov
mov
ss
mov
pop
xor
popf
mov
out
cmpsl
xchg
xlat
lock
out
mov
in
popf
movsb
jnp
loope
shrl
cs
jle
push
mov
ds
in
xor
fildl
scas
or
es
sub
ret
int3
inc
xor
pop
and
xchg
mov
loop
push
loop
inc
cltd
sbb
pop
xor
dec
xorb
arpl
jp
jl
or
xchg
xor
mov
pop
xchg
push
mov
mov
inc
inc
lcall
cmpsb
lcall
dec
mov
xchg
shll
push
jb
cmp
cmpl
xor
enter
lret
sub
mov
mov
add
inc
xchg
xor
jmp
mov
push
sbb
xor
mov
jbe,pt
inc
outsl
popa
pop
ret
andl
pop
xchg
xchg
int
ret
xchg
dec
in
dec
out
sbb
jno
push
ss
imul
lea
xor
out
rcll
or
fnsave
sub
xchg
aas
mov
ficompl
add
dec
mov
in
out
enter
or
aaa
in
dec
out
sub
mov
sbb
in
sub
dec
push
scas
push
jbe
cmp
inc
mov
cmc
and
jnp
mov
or
movl
out
inc
in
in
mov
dec
xchg
and
push
fmulp
rorl
out
cs
push
pop
adc
mov
cmpsl
mov
outsl
divl
rep
fidivs
cmpb
mov
repnz
mov
or
or
loope
icebp
or
inc
adc
es
repz
bound
test
add
inc
mov
adc
insl
adc
mov
push
mov
jno
nop
pop
xor
jnp
jno
pusha
in
shlb
mov
mov
mov
popa
out
cmp
mov
fndisi(8087
popa
adcl
xor
fdivrl
rsm
adc
sub
pushf
cmpsb
adc
fnstenv
sub
ss
push
adc
push
lock
ss
push
xchg
neg
cmp
dec
pop
pop
jp
in
sub
insl
mov
push
std
jecxz
xchg
push
push
fdivr
or
and
cmp
and
imul
and
mov
andl
add
fnstsw
divb
or
jg
cmp
jg
ss
adc
sahf
mov
pop
pop
jecxz
add
add
dec
mov
loopne
add
js
mov
sti
mov
lock
js
mov
pop
fisubrl
mov
into
out
jo
xchg
int3
adc
sbb
addr16
rorl
data16
stc
push
and
xlat
mov
adc
faddl
or
fmuls
add
dec
sbb
push
lret
mov
mov
mov
sbb
jno
or
pop
mull
mov
cld
mov
xchg
xchg
pop
pop
pop
icebp
pop
or
pop
add
ja
pop
bound
ja
sbb
mov
fstl
inc
mov
jno
cmp
ljmp
loop
test
out
mov
lds
cs
mov
js
lds
and
jl
cld
mov
or
adc
mov
outsl
ror
cmp
repz
jg
mov
dec
mov
test
leave
mov
inc
incl
fdivrs
scas
nop
lea
push
repnz
rclb
out
pop
ret
sub
into
fadds
xor
sbb
sbb
push
cs
dec
xchg
or
sbb
leave
jne
loope
mov
and
in
mov
push
fxch
cmc
std
xchg
jne
mov
call
inc
addr16
lret
dec
xchg
movsl
lds
sbb
push
mov
xchg
xor
leave
mov
xor
bound
xchg
rol
xchg
stc
sub
insl
push
addr16
cmp
cmp
je
dec
pop
scas
out
xchg
orb
push
cmp
cmp
popf
mov
inc
pop
call
push
ret
int
clts
or
and
xchg
scas
sub
fidivrl
dec
popa
ds
jge
xchg
mov
pop
jns
mov
sub
in
push
notb
push
mov
gs
mov
cmp
pop
pushf
lret
pop
jle
push
inc
ret
xor
cmc
into
sbb
fdivrs
loop
sbb
dec
add
xor
adc
cmp
cmp
inc
in
mov
in
imul
mov
push
roll
sbb
push
push
call
in
mov
ret
xchg
mov
xchg
push
xor
imul
add
je
cmpsb
je
and
ficompl
and
insb
xchg
and
push
adc
sub
cmp
fistpl
insb
fs
loope
and
int3
jge
inc
enter
jmp
inc
dec
or
and
xchg
pop
js
movsl
inc
idiv
cmp
adc
sahf
popf
int
jns
movq
lds
enter
and
dec
add
imul
jmp
sub
xlat
enter
mov
mov
stc
and
leave
push
cwtl
stos
jne
das
pop
icebp
mov
xchg
loopne
add
cmp
aam
ffree
xorb
or
arpl
mov
imul
clc
repz
clc
jno
lret
stos
lock
xchg
cld
popf
xchg
fcoml
clc
push
fsubl
push
shrl
enter
cmp
inc
add
sub
pop
sbb
outsb
stc
sarl
cwtl
pop
cmc
mov
pop
push
lret
cmpl
loop
pop
mov
lods
loop
xchg
mov
bound
mov
es
xchg
and
mov
or
daa
pop
xlat
cs
cmpsb
test
cmp
fmull
dec
dec
mov
mov
loopne
and
jno
rcr
repnz
adc
test
add
stos
les
sub
fsubp
jae
scas
xchg
push
popf
pop
das
clc
sub
push
aaa
sbb
adc
dec
ret
mov
push
mov
les
sahf
test
push
lret
mov
int3
mov
xchg
fwait
mov
and
inc
jg
pop
add
ja
shll
rcrl
mov
sbb
cmp
mov
mov
and
dec
add
mov
add
sub
aas
jns
cmc
cltd
lods
pop
adc
out
add
loopne
jo
pop
in
push
dec
shl
rcr
mov
sub
pop
nop
jle
and
add
cmp
mov
mov
out
dec
mov
push
fs
popa
lret
cmp
inc
mov
pop
push
or
push
icebp
fdivs
or
sbb
xor
mov
cmp
push
add
pop
iret
cmp
xchg
sbb
xor
xor
pop
nop
test
mov
pop
fiaddl
sbb
pop
dec
mov
and
sub
or
clc
hlt
push
cmc
dec
sti
xchg
dec
jnp
in
ficoml
xchg
cli
jne
je
sub
lea
test
jmp
pop
xchg
mov
or
fwait
mov
and
aad
sti
mov
mov
pop
pushf
in
inc
incb
inc
cld
cmp
loopne
cmpsl
adc
dec
lret
cwtl
ret
xchg
inc
push
stos
cmp
push
dec
add
cmp
add
inc
mov
jb
out
jge
xchg
or
test
cmp
sarl
insb
jge
fcmovb
mov
bound
lret
ss
inc
inc
cltd
dec
xchg
sbb
and
jnp
mov
leave
xor
fisttps
xchg
sbb
cmp
pop
mov
test
arpl
push
xor
adc
xchg
out
sbbb
push
int3
push
fnstenv
in
cmp
dec
pop
mov
sarl
mov
and
jmp
dec
js
sahf
push
push
imul
mov
cltd
cmpsb
nop
or
aaa
dec
int
pop
fmuls
enter
jp
jnp
out
sbb
mov
leave
fimuls
inc
adc
push
dec
data16
cld
rcll
pop
mov
test
jne
scas
repnz
push
jmp
out
movsl
sub
loop
pop
popf
js
push
xor
or
dec
jp
xor
leave
jmp
aam
aad
jl
xchg
sahf
std
sbb
mov
inc
mov
mov
cmc
adc
je
xor
mov
hlt
pusha
jge
add
or
div
int
push
in
ds
fnstsw
movsl
sub
sub
push
faddl
xor
push
jo
loope
lods
ds
mov
pop
mov
mov
pushf
out
arpl
icebp
inc
fwait
aad
adc
mov
xchg
jmp
das
sbb
jne
fstpt
pop
pop
fcomip
shll
or
mov
outsb
lock
fs
shlb
cmp
rorl
mov
jmp
xchg
mov
and
sbb
js
sub
ficoml
mov
imul
push
cmp
or
mov
andl
add
loop
mov
jns
shll
xchg
fcomps
cli
dec
leave
pop
lret
loop
ds
sbb
leave
in
mov
daa
pop
hlt
stos
mov
mov
push
sbb
cmp
add
insl
xor
scas
outsl
push
imull
out
dec
rclb
scas
lret
push
scas
ja
xchg
mov
jno
or
nop
pushf
movsl
jg
jl
mov
cmc
adc
mov
dec
aam
and
jg
iret
adc
addl
insl
xor
adc
ret
sahf
mov
mov
outsl
adc
xchg
arpl
xor
hlt
shll
bound
mov
or
ret
int3
cmpl
mov
imul
dec
aaa
mov
sbbl
insb
push
jns
mov
xchg
ftst
dec
call
mov
into
sub
pop
lahf
hlt
fldl
ret
ds
mov
mov
addr16
ds
pop
mov
mov
push
mov
sti
add
xor
in
movsb
in
notl
sbb
xlat
arpl
adcb
popa
mov
test
add
daa
cmp
jmp
and
dec
jo
or
ds
push
fsubl
cmp
mov
data16
cmp
pop
dec
pop
inc
sbb
fwait
push
aad
push
scas
xor
mov
and
jle
imul
push
inc
imul
or
adc
push
xchg
inc
ret
push
popa
addb
sub
mov
subb
orb
pop
mov
dec
inc
sti
inc
mov
insl
jne
jbe
push
movsb
pop
iret
cwtl
scas
pop
dec
repnz
inc
sahf
insb
cmp
je
add
inc
stos
cld
or
ret
xchg
pop
fwait
pushf
cltd
repz
ret
adc
aas
fsin
pop
cmpsb
adc
arpl
pop
mov
daa
mov
andb
inc
dec
hlt
pop
std
push
lcall
aaa
adc
flds
pop
subb
and
xchg
cmp
es
jge
inc
aad
jo
sub
or
sub
mov
mov
es
mov
xlat
jbe
loop
xor
jmp
flds
mov
dec
mov
adc
lock
sub
mov
pop
push
mov
negl
xchg
insl
mov
pop
adc
cwtl
cmc
pop
les
xchg
add
bound
pop
inc
push
mov
add
cmpsl
sub
cmp
or
das
xor
adc
sahf
xor
pop
jmp
imul
push
mov
repz
pop
push
scas
fdivrs
je
push
mov
mov
mov
pop
sahf
repnz
jnp
push
sbb
xor
hlt
mov
pushl
adc
jle
pusha
fldt
fstp
inc
mov
mov
pusha
lret
cmp
adc
mov
pop
sti
loope
and
mov
fsub
fsubrs
mov
sub
out
mov
cmp
sbb
dec
add
das
jae
inc
xchg
and
hlt
cmpsb
push
cmp
scas
loopw
jne
jbe
into
push
loope
or
jne
sahf
adc
mov
sub
fisubs
xchg
xchg
push
inc
inc
out
es
jbe
add
ss
icebp
inc
fcmovnb
ret
xorb
add
rclb
ja
jmp
or
cmpsl
fistl
inc
push
push
outsl
sbb
jle
mov
add
sub
mov
jmp
nop
push
add
shrl
in
lret
lret
add
mov
cwtl
mov
mov
ja
adc
scas
xchg
xor
incl
or
arpl
mov
xchg
sub
jl
inc
xchg
movsl
divl
xor
cmc
xor
xchg
sbb
xchg
jp
push
mov
leave
cs
shll
inc
inc
push
jae
and
jl
cmp
leave
int3
xchg
xor
dec
adc
mov
in
add
add
xor
xchg
je
and
dec
loop
scas
fmul
int3
dec
mov
sahf
mul
push
jb
sbb
shrl
cmp
cmp
movsb
pop
xor
in
and
bnd
icebp
gs
stos
push
cli
push
add
in
cmp
cmp
movsl
mov
inc
xorb
dec
pop
stos
xchg
hlt
rcrb
repnz
fs
xor
mov
dec
jle
cmp
pop
jno
out
sbb
dec
enter
cmp
mov
xlat
das
imul
push
cmpsl
int
cmpb
dec
push
pop
push
in
adc
lcall
popf
cmp
out
in
test
sbb
sbb
into
add
adc
add
xchg
adc
pop
jbe
loope
imul
lahf
call
jb
lahf
stc
lock
xor
push
push
orb
es
mov
aad
lea
repz
jns
jo
push
loope
inc
lods
mov
jmp
pop
mov
dec
pop
loop
icebp
pop
orl
nop
into
mov
pop
out
das
pop
filds
das
aas
repnz
mov
inc
sbbb
test
loop
iret
outsl
sbb
test
fsts
sub
jae
and
cmp
leave
push
bound
push
push
pop
addb
stc
push
pop
dec
xchg
inc
sahf
andb
xchg
enter
test
and
inc
dec
inc
jp
ret
push
icebp
jo
lea
pop
add
fwait
jne
fisubs
sbb
dec
pushf
sti
jns
roll
lret
insb
pop
jp
and
jle
lea
or
test
push
adc
push
push
ds
sub
dec
xchg
xor
mov
aaa
andb
repnz
xor
mov
jl
dec
aad
call
push
jmp
cli
push
cmc
dec
insl
ret
add
stos
xor
mov
sub
shlb
lock
or
scas
or
jecxz
push
test
flds
mov
dec
pop
insb
nop
push
pop
sbb
cmpsb
push
pop
jg
insl
aaa
push
fisttps
xchg
popa
and
cs
adc
insb
mov
stc
ret
adc
dec
subb
test
repnz
iret
and
sub
sbb
lock
cmp
in
mov
and
fsqrt
jge
mov
in
add
jnp
cli
repnz
lods
xor
jge
movsl
fisubrl
xlat
movsl
iret
das
outsb
or
xchg
sti
xchg
fs
mov
xor
insb
dec
stc
dec
adc
xor
mov
jg
stos
imul
out
ljmp
sbb
out
fcoms
add
adc
dec
repz
cwtl
lcall
lods
jb
ljmp
dec
push
dec
rclb
sar
push
pop
xlat
push
dec
mov
sub
jge
gs
sbb
inc
mov
or
sbb
pusha
mov
loop
add
mov
cwtl
jb
adc
mov
int3
mov
js
popa
outsb
mov
cld
test
loop
jg
adc
ss
pop
ret
pop
sub
lahf
push
bound
mov
popa
jbe
hlt
das
dec
cmpsb
dec
rcll
ret
sbb
cmpb
test
or
add
movsl
add
push
push
add
sarl
or
or
repz
push
subb
test
popf
xor
sub
shlb
jmp
fdivr
sub
adc
adc
cld
or
rcll
adc
pop
sbb
push
movb
test
xchg
mov
mov
mov
vmaxss
xor
xorl
nop
inc
and
sub
pop
add
push
aas
xchg
mov
mov
jmp
or
or
loop
fdivl
test
dec
push
loopne
loopne
cmp
out
mov
int
ds
mov
clc
into
adc
fwait
push
add
sub
sbb
or
fmull
insl
out
sti
sbb
mov
add
jnp
inc
dec
mov
push
jno
xor
sub
sarl
out
loopne
sbb
lds
dec
orl
cmp
inc
es
add
push
sub
and
pop
push
xchg
test
rorl
dec
int
es
add
lret
insl
loop
jl
jp
and
outsb
repz
lea
mov
mov
repnz
push
xchg
sbb
sub
mov
test
hlt
lods
popa
mov
push
jnp
push
xchg
dec
mov
adc
push
lods
mov
rorb
ret
jo
xorb
dec
ficomps
push
cmpsb
pop
add
das
out
in
dec
pushf
mov
jp
and
add
pusha
cmp
mov
cli
sbb
aad
jnp
push
pop
int3
rclb
jge
add
call
cmovs
lods
mov
and
bound
mov
ret
sbb
mov
add
or
sub
cmpsl
test
lock
out
push
fistl
xchg
das
lods
xchg
nop
or
cli
stc
pop
fstps
lcall
ljmp
mov
xchg
jl
and
dec
pop
mov
mov
cmp
jg
cltd
fucomp
pop
cmp
xor
add
inc
or
sub
in
and
mov
mov
sbb
push
xchg
js
xor
cmc
fs
mov
or
outsl
inc
and
sub
push
loopne
mov
adc
cs
add
arpl
push
test
cmp
adc
pop
mov
rcrb
movb
push
adc
test
push
lods
xchg
adc
mov
pop
outsb
push
les
aaa
jecxz
lods
and
movsb
mov
je
push
push
and
mov
scas
mov
mov
leave
ret
push
adc
jmp
cld
jmp
lahf
lahf
and
outsl
mov
and
fldcw
sbb
in
pop
xor
and
mov
pusha
aas
repnz
sbb
insb
movsl
mov
xor
mov
pushf
cmp
dec
xor
test
cs
scas
jb
repnz
scas
stc
adcb
sbb
das
mov
push
sbb
sbb
push
and
cmc
mulb
inc
jb
test
dec
dec
or
fwait
xchg
mov
and
cld
ficompl
test
mov
imul
ss
mov
mov
cmp
pop
mov
xor
xor
rcrl
push
mov
mov
add
jae
push
cli
stos
daa
xchg
in
mov
and
and
jmp
add
shl
int3
shrl
sbbb
fstpt
jns
inc
mov
fdivrs
cmpl
xor
fwait
inc
dec
xchg
out
test
hlt
out
jb
inc
std
imul
push
sub
bound
mov
testb
mov
and
outsl
popa
sub
pop
dec
mov
enter
testb
xchg
icebp
test
add
cmp
sub
add
icebp
repnz
clc
pusha
xchg
mov
xlat
cmp
sarb
loopne
cmp
nop
cs
test
lds
pop
jmp
pop
jecxz
xor
dec
push
sub
in
subl
test
add
jle
insl
subb
mov
jne
pop
mov
mov
test
or
mov
jmp
or
sub
test
call
or
jmp
scas
lds
sbb
and
inc
fld
push
add
sub
daa
out
or
fwait
mov
pop
add
push
scas
rcll
in
jns
in
push
call
push
cld
xor
jge
mov
sbbb
outsl
jb
sbb
inc
mov
das
rclb
mov
jbe
pop
mov
xchg
inc
decl
pusha
dec
idivl
jl
inc
push
repz
fcomps
jbe
fdivrs
jne
mov
sub
pop
fiaddl
mov
jl
aad
fisubrl
mov
fnstenv
sub
push
jns
cs
pop
cmp
push
or
je
rcrb
add
fsts
ret
scas
mov
and
mov
mov
add
mov
jmp
inc
push
xchg
cld
cwtl
sub
inc
push
movsb
jp
sub
mov
lock
outsb
shl
loope
sti
mov
jge
bound
stc
mov
dec
adc
shrl
pop
hlt
enter
dec
and
mov
xchg
fdivl
pop
xchg
or
and
sbbb
jecxz
movsb
out
int
gs
mov
pop
dec
pop
inc
cmpb
int3
stos
jle
push
shr
in
mov
push
xor
cmp
nop
mov
inc
dec
popf
xchg
xchg
jl
dec
test
popf
in
cmp
in
std
or
call
fsubrl
add
pop
js
sbb
divb
push
jne
pop
in
repz
stos
call
cmp
mov
loope
cli
jmp
jb
cmpsl
mov
test
inc
scas
in
dec
mov
test
or
jle
insl
inc
xchg
lds
dec
repnz
push
jno
or
ret
xchg
iret
push
dec
pop
pushf
mov
and
ljmp
scas
pop
jecxz
xchg
es
cltd
xor
xchg
sbb
sbbb
loopne
popa
push
xor
fimuls
rclb
mov
iret
pusha
xor
sub
xor
jmp
add
push
int3
cmp
sub
add
xchg
notb
mov
repz
addb
sbb
dec
or
sbb
jecxz
sbb
adc
aam
aas
inc
loop
ffreep
icebp
loope
mov
out
mov
je
or
or
loopne
int3
sahf
stc
xchg
nopl
dec
xchg
insl
repz
cwtl
stos
sbb
lock
jns
stc
in
sbb
bound
dec
cmp
jl
test
dec
ljmp
not
cmp
out
jl
pop
dec
xor
add
mov
pusha
cli
dec
pop
sub
js
cmp
nop
mov
xor
gs
or
jb
dec
and
lret
mov
lods
jp
out
push
sbb
fstl
sub
push
mov
outsb
cmp
mov
adc
pop
subl
push
cmc
inc
movsb
sahf
push
sub
mov
int
inc
movsl
dec
xchg
mov
mov
mov
jge
adc
sbb
inc
call
test
enter
xor
je
jbe
xchg
ss
jno
sub
arpl
mov
adc
push
movsb
aas
mov
mov
xor
inc
xchg
in
push
pop
cmp
jmp
mov
xchg
push
mov
insl
adc
enter
fyl2xp1
shr
xlat
testl
sub
sbb
sbbb
cld
xor
test
mov
jbe
xlat
mov
mov
cmp
inc
jp
das
rcrl
hlt
pop
or
adc
push
sbb
rcrb
pop
stc
xchg
mov
xchg
cmp
mov
into
mov
jle
cmpsl
lds
inc
dec
sti
cmpl
rorl
pop
jno
inc
inc
hlt
loop
sub
push
sub
cmc
add
cmc
pushf
icebp
and
gs
fldt
test
pop
int
push
xchg
dec
inc
jg
es
sub
inc
pop
push
xor
mov
jle
xchg
aad
daa
nop
xchg
lea
ss
call
test
push
call
xor
push
stos
mov
inc
and
mov
sbb
pop
fldt
lahf
mov
into
outsl
inc
inc
pop
insl
dec
rcll
js
adc
jle
ret
testb
pushw
shrl
ficoml
pop
mov
testl
cbtw
or
or
insb
jmp
sub
jae
sub
pop
sub
gs
ja
xor
cld
add
jns
pop
daa
jl
out
loop
pusha
pop
mov
enter
push
cmp
insb
enter
movsb
sbb
lods
lds
imul
fidivrl
pop
pusha
jmp
lret
jbe
sbb
jge
nop
xor
mov
lods
sbb
in
push
add
outsb
rcr
jno
es
mov
test
arpl
inc
fimuls
inc
sarl
sar
fstpt
inc
push
xchg
test
orl
bound
rorb
mov
pop
out
mov
jl
sbb
leave
inc
mov
push
call
or
lea
test
mov
in
pushf
inc
push
and
ret
repnz
sub
xchg
pop
lea
cmp
mov
or
das
inc
or
inc
push
sub
inc
cli
mov
leave
inc
adc
push
lret
push
xor
pop
lcall
pop
push
jae
test
push
lods
or
jmp
nop
scas
sbb
push
push
out
idivb
gs
int
mov
popa
repz
xchg
jle
popl
cmp
add
inc
iret
cmp
pushf
scas
and
sub
dec
cli
mov
xchg
stos
xor
in
ljmp
gs
mov
data16
xchg
and
gs
ss
test
packuswb
jp
mov
out
fs
mov
outsl
cld
or
ret
xlat
xchg
movsl
jbe
stos
js
iret
xor
or
inc
pop
xor
sbb
adc
xchg
fimull
mov
loopne
shr
mov
dec
fstpt
xor
inc
mov
dec
stc
sub
into
or
fidivrs
hlt
jle
test
jl
dec
insl
and
std
repnz
and
mov
fldl2t
in
das
push
sbb
push
fiadds
rclb
bound
jae
pop
ja
or
inc
push
cmp
xor
clc
cmp
pop
stos
out
lcall
add
pop
shl
stos
mov
mov
ret
dec
pop
daa
jb
repnz
jns
popa
sarl
cld
cwtl
outsb
mov
push
adc
data16
lahf
ljmp
rclb
aad
stos
and
pusha
cmp
mov
int3
jg
stos
aas
and
xchg
adc
and
dec
fcomps
stc
mov
sarb
dec
adc
lea
jne
mov
xlat
pop
adc
fsubrl
in
fildll
mov
xchg
push
add
push
fbstp
mov
pop
mov
xchg
leave
fisubl
cmp
scas
xchg
popa
in
mov
lods
lcall
jp
out
sti
popf
insl
and
pop
jl
loope
push
and
mov
push
dec
pop
pop
adc
mov
sarl
xor
xor
cltd
inc
rcrl
jae
test
mulb
or
shll
sti
inc
into
pusha
push
fcmovne
sub
inc
in
add
mov
inc
mov
enter
sbb
mov
stos
push
xchg
out
icebp
icebp
pop
or
pop
imulb
lcall
dec
lock
sub
push
int
dec
outsb
lods
or
push
mov
xlat
jne
push
or
sub
outsb
jae
adc
fs
das
jb
push
adc
adc
mov
sbb
bound
loope
add
dec
call
push
sbb
jle
pop
jg
stc
lret
mov
imul
mov
ficoml
fisubrs
and
std
les
mov
les
cmp
mov
jne
adc
lret
lret
inc
xor
nop
leave
das
mov
cltd
mov
out
lods
into
stos
test
cli
clc
xchg
or
loopne
and
cli
popf
out
add
iret
pop
xor
or
jae
mov
call
mov
push
test
rolb
sbb
sbb
std
mov
mov
ja
fsubs
pop
rorb
call
mov
sbb
pop
insl
mov
and
or
insb
lret
jo
xchg
leave
mov
loopne
pop
adc
fcoms
je
jbe
out
mov
and
jle
sub
daa
mulb
mov
gs
inc
sbb
hlt
dec
mov
or
xor
test
cmp
push
jae
jne
stos
xor
dec
out
js
call
outsl
mov
adc
mov
add
out
and
pop
mov
mov
mov
push
xor
icebp
sbb
sub
repz
repnz
andl
mov
push
push
or
mov
pop
sbb
out
xchg
xchg
into
or
xor
inc
shrb
push
pop
mov
lret
jg
data16
jge
scas
jg
rolb
clc
mov
pop
mov
xor
ror
inc
ret
sahf
xchg
jmp
lock
lahf
mov
jne
mov
jg
add
shll
cmp
push
cmp
arpl
cmc
sub
mov
ljmp
xor
fsubr
jecxz
jg
cmp
mov
enter
jns
and
dec
stos
lcall
mov
inc
aad
mov
inc
mov
test
cmp
mov
xchg
insb
insb
cwtl
cwtl
cltd
out
fcomp
push
sti
fwait
xor
fs
push
repz
stos
dec
and
sbb
xchg
std
pop
mov
and
xor
push
cmp
mov
aam
push
pop
ljmp
push
cld
dec
mov
sbb
dec
jp
loop
sbb
jo
and
pop
mov
sub
loopne
fiadds
inc
fstl
rcrb
xlat
dec
xchg
mov
inc
pop
xor
inc
mov
xor
mov
rorl
icebp
mov
movsl
and
rcll
cmp
cmc
arpl
sti
mov
into
xchg
push
xchg
aad
push
sbb
mov
mov
lds
push
jl
imul
repnz
sbb
push
adc
adc
test
dec
in
mov
mov
pop
mov
mov
add
pop
nop
outsb
aaa
jecxz
mull
mov
mov
pushf
aas
or
fstl
mov
fsts
pop
xchg
mov
jmp
enter
movsb
outsl
insl
adc
or
dec
xchg
jg
sbb
mov
scas
fsts
imul
fadds
xchg
scas
xchg
mov
les
subl
push
aam
xchg
ds
sbb
fdivrl
xor
movsl
rclb
pop
xor
sub
lea
xor
mov
push
dec
fistl
inc
jmp
ljmp
fnstenv
jne
inc
sub
and
xor
dec
or
inc
inc
mov
clc
jno
xchg
iret
pop
loop
std
pop
jmp
pop
inc
out
xchg
orb
pop
rcll
mov
cwtl
mov
inc
cli
mov
gs
xchg
loop
mov
jo
and
fwait
test
or
ds
xchg
sbb
repz
aaa
and
scas
fs
mov
movl
xchg
stos
pop
enter
hlt
add
rcrl
and
xor
fisttpl
mov
mov
test
inc
scas
sub
sub
in
rorl
sahf
mov
and
cli
xchg
fsts
xor
callw
insb
in
loopne
mov
shrb
roll
cli
test
sti
and
adc
mov
xor
test
mov
xor
push
int3
pop
push
lods
cld
les
mov
pop
fldt
and
cmpsl
leave
sub
xorb
add
sbb
pop
xlat
cmp
insl
and
in
stos
mov
outsl
insw
cld
mov
sahf
cmpsl
pop
jle
sarl
in
cmpsl
xchg
aam
xor
mov
or
dec
fucomi
mov
leave
or
jg
jbe
aas
ljmp
add
outsb
hlt
xchg
fiadds
add
aas
and
dec
mov
cwtl
loope
xor
xchg
loope
mov
adc
leave
rorb
fst
add
mov
cld
jg
mov
nop
sbb
add
notl
icebp
sar
insb
xchg
rcrl
xchg
fisubrs
cmpb
push
adc
or
sub
loopne
cmp
push
cltd
test
or
pcmpeqd
enter
iret
mov
ss
jecxz
sbb
jno
movsl
popa
fcmovu
dec
cltd
and
sub
jmp
and
shl
out
add
sub
hlt
xor
ljmp
pop
cmp
pop
mov
into
cmp
imul
sub
mov
out
or
jg
cmp
orb
or
jne
scas
fstps
add
pop
lcall
xor
push
test
clc
in
jo
inc
push
ds
or
dec
arpl
je
pop
pop
das
and
mov
je
hlt
mov
loope
push
pushf
jmp
movsl
dec
testl
fs
dec
xchg
mull
cli
repz
push
sbb
mov
orl
or
lods
adc
out
xchg
jae
rorb
inc
popa
mov
inc
test
mov
add
shlb
sti
test
xchg
pop
sbb
or
test
test
mov
or
xchg
or
mov
adc
push
or
or
sbb
aas
aas
rcr
jbe
dec
mov
int
imul
loope
dec
fiaddl
mov
pop
in
loop
dec
jge
into
mov
xor
xlat
insb
sbb
bound
sub
dec
cmp
lahf
push
mov
and
xor
cmpsl
dec
loopne
out
push
push
xchg
cwtl
and
out
cmp
xlat
cmp
in
pop
iret
stos
les
cld
or
ljmp
enter
in
xchg
cli
pop
pop
mull
push
pop
scas
in
subb
xchg
insb
outsw
or
iret
dec
out
call
cmp
mov
aad
stos
pop
inc
sbb
and
rolb
in
test
sub
mulb
rcll
sbbb
lea
add
popf
enter
mov
mov
fdivrs
stc
jg
cmp
in
lcall
mov
bound
add
insb
popf
repz
sbb
sahf
push
pop
add
jb
inc
das
dec
insl
and
sub
and
mov
pop
enter
jl
push
andb
inc
push
jns
cmpsl
push
sbb
lods
mov
pusha
and
sahf
das
imul
outsb
dec
mov
adc
and
ret
pop
adc
mov
inc
mov
outsl
xchg
dec
mov
aas
popf
pop
xor
cwtl
add
loop
or
lock
xorb
cld
inc
and
inc
add
dec
and
dec
jo
jecxz
in
scas
mov
aaa
das
mov
sbb
sub
addr16
xor
sahf
mov
fcoml
mov
scas
jns
mov
in
nop
pushf
aam
push
into
dec
loop
dec
jl
adc
iret
cmp
notl
push
mov
sbb
add
sbb
pop
inc
daa
xchg
addr16
js
sub
lret
enter
xor
fcomp
xchg
lods
adc
addb
jecxz
and
fisubs
js
aas
mov
sbb
adc
loopne
ds
data16
mov
sti
xor
pop
out
insb
push
xor
nop
mov
std
xorb
shll
push
stos
mov
push
clc
cmpsl
lea
mov
jmp
xor
dec
pop
pop
dec
outsl
mov
bound
mov
mov
pop
movsl
xchg
loope
iret
sbb
push
fbld
jge,pt
dec
fnsave
outsb
fidivs
jl
and
in
xchg
pushf
lods
cmp
push
sbbb
fildll
push
cld
xchg
aam
imul
pop
mov
call
je
xchg
into
mov
nop
add
mov
pop
xchg
fstl
pop
add
ret
rcll
inc
in
or
scas
jne
push
xchg
stos
cli
ds
dec
sbb
repz
push
aam
dec
cmp
mov
mov
push
clc
sbb
int
ss
lock
xor
lods
cmp
pop
aaa
rorl
xor
adc
inc
test
ljmp
pop
xchg
and
fwait
jne
cmpsb
pop
or
cmp
pop
mov
cs
fst
pop
jge
inc
lahf
inc
inc
push
cwtl
lahf
pop
adc
repz
fwait
add
shlb
fwait
inc
into
mov
mov
jno
ljmp
sub
add
pusha
and
mov
mov
jae
stos
mov
or
push
push
orb
jo
jns
cmp
test
ss
mov
dec
repz
ds
mov
fucomi
mov
mov
ficoms
push
adc
xchg
mov
or
or
inc
jg
or
inc
dec
fwait
push
cli
add
jnp
out
push
mov
jmp
int3
sub
sub
in
xchg
cmp
jp
push
and
mov
sbb
push
push
fs
scas
mov
add
push
ffreep
jp
adc
ror
fcmove
pop
mov
inc
or
pop
in
add
shlb
jmp
cmp
sub
insl
pop
mov
cmp
bound
loop
sbb
fistpl
aam
ss
cmp
cmpsb
pusha
xlat
pop
leave
aam
leave
sti
into
xchg
mov
dec
sub
movsb
mov
repnz
push
out
add
decb
lcall
enter
ret
xor
add
fldcw
sbb
mov
lret
and
mov
jne
jp
jl
test
xchg
xor
rorb
inc
and
dec
and
pusha
dec
jmp
xor
sub
ret
xchg
hlt
and
shlb
outsl
push
mov
pop
popa
ds
xor
sahf
inc
xlat
xchg
cmc
clc
cs
mov
not
bound
sub
clc
test
lahf
sti
pop
sub
mov
psubb
fidivrl
adc
mov
inc
pop
enter
jne
cmp
pop
sbb
in
repnz
cmpsl
loop
sub
jnp
addr16
scas
loop
jp
mov
xor
clc
aam
outsl
ja
xchg
idivl
lds
daa
cmp
aad
pop
ja
jge
in
rorb
nop
mov
fstpt
in
andb
test
loop
adc
dec
scas
testb
adcb
cmp
ds
lds
xor
adc
pop
cmc
fistpll
aaa
sbbl
cli
aaa
rcrb
call
clc
popf
sbb
repnz
adcl
fdivl
es
mov
sbb
jmp
adc
dec
jg
sub
add
push
cmp
mov
push
push
cmp
jge
xchg
ret
addb
xchg
shlb
mov
pop
or
out
shrb
stc
pop
sbb
outsb
mov
mov
repz
push
sti
lock
fcomps
mov
int
jne
in
xchg
push
jno
or
inc
jle
ja
inc
dec
dec
or
jb
aam
pop
mov
int
and
decb
cmovae
dec
das
insl
push
rcl
pop
xor
dec
js
jno
repz
xchg
inc
mov
jb
popa
lods
popa
sbb
inc
sbb
inc
fucomi
addl
pop
adc
xor
nop
lahf
mov
mov
ja
inc
sbb
sbb
test
cld
mov
mov
addr16
popf
icebp
xchg
jmp
dec
popa
or
ds
das
or
loope
rol
icebp
insb
dec
sbb
xor
cmpsb
fcoml
pop
in
aam
outsb
shrb
xor
int
in
cmp
add
push
outsb
xchg
leave
xchg
clc
xchg
data16
popf
int3
pop
dec
test
out
pop
lds
out
push
xchg
stos
and
lds
test
data16
adc
es
cli
sahf
repnz
lret
iret
fstl
mov
sarb
test
push
faddl
adcl
cmp
data16
je
mov
aad
movsb
dec
andb
push
push
mov
clc
loope
in
push
mov
popa
stos
xor
shrb
in
shlb
and
sti
dec
or
or
in
sarl
push
fwait
leave
pop
xlat
imul
out
shll
cmp
adc
aam
jo
adc
shrl
pop
mov
adc
repnz
and
dec
fidivrs
les
dec
adc
out
idivl
jae
rclb
data16
nop
sahf
pushf
mov
insl
test
sub
jmp
push
inc
jle
add
loop
popf
ljmp
das
sub
adc
lods
and
outsl
xor
in
cmp
jnp
fsubs
lods
pop
test
aam
ss
mov
or
int
les
movsb
pusha
inc
popa
mov
dec
cmpsl
int
jo
jae
ret
fwait
mov
in
rorb
ljmp
call
and
mov
aas
sbb
inc
xchg
xor
push
xchg
mov
pop
hlt
aad
rorb
mov
xchg
push
xor
aam
sbb
fisubs
inc
lds
pop
mov
adc
jmp
push
mov
insb
fcmovnbe
rorl
fnstsw
or
cs
rolb
jmp
pop
jb
lea
mov
jl
dec
or
push
jno
movsb
jp
sub
scas
dec
lahf
adc
pop
xor
or
aad
mov
push
ret
fisttps
dec
das
jb
cmpsl
sbb
pop
xchg
inc
arpl
pop
test
popa
negl
pop
mov
in
push
or
nop
adc
cld
inc
and
lock
and
fidivl
jmp
mov
clc
cmpsb
xor
add
inc
movsb
sub
cli
jno
ficoml
loopne
add
repnz
aaa
addr16
leave
stos
xor
xlat
into
xchg
xchg
aad
sbb
cmpsl
cmp
push
gs
mov
lods
mov
in
ja
insb
push
xchg
pop
rep
push
les
rcrb
mov
out
loope
pop
and
and
out
cmp
scas
repz
jecxz
mov
sub
out
sahf
xor
repnz
dec
mov
out
iret
mov
or
mov
out
fstps
mov
add
stos
xchg
std
cmp
jmp
mov
sbb
push
dec
nop
pop
xchg
in
mov
mov
jle
add
jne
out
push
stos
cmp
pop
xchg
mov
adc
xor
or
cmp
cwtl
ficompl
aaa
pop
sbb
inc
js
xor
dec
loop
sti
aad
mov
cmp
test
ds
dec
faddp
jge
lds
mov
shl
in
lds
add
int
out
jle
int3
add
lret
xchg
pop
les
cmp
mov
das
mov
mov
mov
mov
ret
and
stos
iret
flds
sub
sbb
jl
pusha
jnp
in
bound
pop
loop
iret
mov
test
mov
hlt
and
push
xor
aas
imul
sbb
out
push
in
jmp
mov
xchg
lahf
in
cs
xchg
or
aas
mov
je
jbe
sahf
daa
in
scas
ret
std
aas
loope
sbb
mov
lret
clc
iret
repnz
push
fcom
repnz
cmp
pop
push
mov
lock
sub
push
dec
jmp
cld
push
lcall
popl
fisttps
cmp
mov
out
mov
imul
mov
out
xor
cmpl
push
lcall
xchg
int3
cmp
clc
jle
pusha
call
stc
mov
jnp
adc
and
loop
dec
xor
push
cmp
ss
cli
fdivl
sub
mov
sbb
imul
aam
out
push
cwtl
maxps
js
mov
pop
xor
cmp
imul
push
and
pop
cmp
xchg
dec
mov
adc
inc
jg
ja
xchg
fimull
pop
xchg
mov
pop
pop
push
mov
cwtl
adc
inc
sub
out
pop
cld
or
imul
xor
std
mov
add
repnz
sub
adc
jmp
mov
jns
std
mov
sbbb
or
mov
mov
loope
sbb
push
jmp
popf
in
dec
lret
mov
enter
cmp
adc
fdivp
jne
in
les
movsl
jbe
mov
ss
xor
cmp
jb
mov
cli
lods
cwtl
add
imul
mov
mov
and
cmpsl
outsl
fisubs
pop
mov
mov
jae
ljmp
mov
dec
xchg
add
and
lods
jb
push
je
unpcklps
fistl
jg
outsb
jle
xchg
cmp
jl
stos
pop
or
mov
iret
cs
in
and
add
push
out
outsl
lahf
lods
fisubrl
int
pop
dec
push
mov
lock
adc
and
xchg
add
out
mulb
cwtl
fildl
add
cmpsl
fwait
dec
pop
xchg
out
xchg
daa
addr16
pop
jge
lcall
mov
ret
lcallw
mov
jp
push
int3
rcll
in
shll
imul
ljmp
cmc
cmp
inc
jge
js
jbe
mov
push
jp
xchg
jecxz
mov
push
pop
push
xchg
push
mov
cmp
or
ljmp
or
shlb
cmp
jb
stos
add
mov
fld
bound
push
repnz
xlat
mov
push
mov
mov
pop
mov
fnstsw
ds
lahf
cmp
inc
mov
fimuls
mov
rcl
xor
or
mov
lahf
or
ja
add
out
mov
and
test
inc
imul
out
pop
jno
xchg
dec
push
out
sub
pop
out
mov
scas
lcall
gs
out
xchg
xchg
cs
stos
add
adc
cmp
and
aas
ret
sbb
xlat
lret
leave
cmpsb
cmp
and
test
or
out
sti
mov
push
lret
add
dec
lahf
jmp
mov
mov
rolb
adc
int
xchg
adc
sbb
test
cmp
in
ret
jmp
mov
in
nop
inc
mov
dec
sbb
sarl
out
test
and
inc
mov
pusha
mov
cltd
sub
xor
jae
and
es
jecxz
ljmp
stos
ljmp
mov
jb
insb
add
sbb
mov
add
mov
lahf
cli
or
push
cmpsb
fincstp
js
or
lods
in
jmp
jg
faddl
ret
jno
sarb
das
aas
test
aaa
out
cmp
enter
xor
test
jo
mov
test
cli
pop
out
xor
fcmovnu
popf
test
test
stos
ljmp
inc
jge
in
dec
push
inc
pop
pop
imul
mov
dec
in
sbb
cmp
in
cmp
adc
pop
xchg
xor
push
jb
lret
mov
and
pop
fwait
xchg
or
repz
or
jmp
dec
dec
insl
mov
arpl
dec
sub
dec
xor
and
push
mov
mov
push
lock
data16
daa
dec
jmp
out
mov
pop
mov
lods
lret
add
aas
fisubs
int3
xlat
mov
repnz
fdivs
lret
add
cmp
adc
divl
dec
mov
mov
pop
mov
data16
jne
jno
cli
rcl
sub
mov
fsubrl
lods
je
fsubp
sarb
mov
packssdw
inc
out
in
mov
and
bound
ljmp
popa
lods
rolb
cs
nop
adc
and
mov
outsl
pushl
jp
movb
add
nop
xchg
push
mov
jmp
cmp
sub
aaa
fisubrs
mov
push
jg
mov
mov
outsl
jle
test
test
push
fisttpll
push
add
jecxz
popa
inc
jne
mov
js
jnp
icebp
aas
test
hlt
and
sarl
xor
and
cwtl
movsl
cmp
rclb
sbb
movsl
shlb
into
fcoml
xorb
sbb
and
or
lea
xchg
orl
xor
mov
cmp
in
mov
stos
shll
jl
test
xchg
pop
sbb
push
jne
inc
mov
fs
aam
mov
add
xchg
loop
push
xor
cmpl
jo
mov
in
clc
leave
out
in
mov
xchg
xor
cltd
lret
xchg
jp
cmp
push
es
loopne
jbe
mov
bound
pop
mov
jno
out
push
les
lods
xchg
movswl
and
xchg
in
in
cmp
inc
push
clc
out
idivb
test
and
jae
in
out
jmp
rcrl
repz
push
push
fucomp
or
mov
add
mov
lcall
xchg
inc
mov
push
jecxz
scas
push
fmulp
push
aam
js
xchg
insl
adc
adc
test
add
hlt
dec
mov
mov
or
jl
out
inc
das
ljmp
adcb
sub
cltd
sbb
pop
cmpsb
out
dec
std
mov
jmp
loopne
mov
mov
sbb
cmp
lock
cmp
cs
sub
xlat
psubsb
push
dec
mov
lret
adc
ret
adc
fisubl
bswap
push
shll
shll
ja
inc
cwtl
loopne
js
dec
es
adc
and
shrl
pop
and
repnz
stos
sbb
popa
repz
mov
push
mov
pop
or
test
cltd
cmp
inc
aam
add
lret
xor
push
fldt
fidivrs
add
xchg
jle
jg
imul
lret
mov
sub
jl
std
xchg
jge
adc
xor
scas
pop
add
popa
xchg
adc
lods
push
lret
add
test
xchg
inc
rcrl
push
fsts
jbe
xchg
nop
clc
sbb
xor
outsb
sbb
and
push
dec
lahf
cmp
and
sub
ss
sub
xor
push
fmuls
jno
movsl
sub
xchg
mov
fdivrs
jnp
jecxz
cmp
and
and
add
arpl
mov
pop
add
iret
cmp
mov
insl
nop
mov
popa
aam
filds
xor
iret
adc
xor
cmpsb
jns
push
loopne
pop
sbb
insb
aaa
pop
pusha
ss
pop
sbb
xchg
or
dec
lcall
repz
and
roll
jmp
ds
lahf
jecxz
inc
lds
push
or
outsl
cmp
mov
push
sti
pop
mov
mov
jp
pop
mov
loope
popf
inc
push
aas
lock
gs
jp
in
bound
popf
dec
push
mov
das
out
push
dec
push
adc
push
out
aaa
xor
mov
aas
xchg
xor
lcall
dec
lea
mov
imul
cmp
jbe
data16
rcll
aad
enter
and
aad
mov
cmp
mov
and
arpl
pusha
sub
test
int3
call
mov
outsl
sbb
push
jmp
repnz
and
mov
sub
in
pop
in
and
ror
mov
cmp
xchg
rcrb
imul
stos
cmc
js
in
clc
inc
ret
push
je
push
push
fmuls
xor
xchg
mov
cld
call
mov
pop
sub
fdivrs
sbb
xchg
jg
arpl
fisttpl
dec
and
mov
or
mov
lock
icebp
jbe
out
dec
popa
movsl
adc
jne
lock
leave
inc
imul
xchg
mov
sbb
icebp
les
ja
push
dec
fmuls
sbb
inc
push
pop
xor
mov
mov
sbb
cltd
test
fnstsw
out
mov
js
out
fsub
push
mov
xchg
leave
xchg
cmc
mov
or
inc
fs
inc
repnz
push
adcb
mov
mov
dec
mov
or
popa
outsb
pop
adc
lcall
data16
out
fdivrs
arpl
ss
in
ss
mov
out
pop
ss
frstor
negl
cmp
pop
loop
jno
jle
aad
mov
mov
sub
enter
inc
xchg
pushf
push
mov
bnd
cwtl
or
cmpsl
mov
fadds
or
aad
shlb
pop
mov
dec
pop
movsl
cmp
adc
or
sub
les
and
stos
out
sub
push
or
add
out
cmpl
xor
loope
aaa
in
pop
sub
xor
lock
pop
adc
push
push
jge
enter
stc
js
add
pushf
xor
dec
fisttpll
movsb
mov
lret
into
daa
das
mov
mov
mov
rcrb
stos
fildll
inc
adc
push
sub
mov
adc
pushf
dec
jg
mov
jbe
pop
negb
and
js
outsl
mov
sub
add
pop
aad
adc
addr16
aaa
inc
add
sbb
vmwrite
lcall
and
and
in
sub
repz
mov
jg
or
adcb
lods
cmp
imul
iret
or
push
push
in
jno
cs
adc
daa
sub
xlat
cmp
dec
movsb
js
sbb
inc
loop
push
js
outsb
jg
inc
setno
push
jno
inc
push
leave
ja
cli
xor
add
mov
pop
xchg
dec
clc
adc
mov
add
sub
movsb
test
sbb
dec
add
test
mov
pop
cmp
stc
pop
sar
aaa
xlat
pop
pop
fmull
js
jb
hlt
xchg
jecxz
mov
insl
dec
in
add
loope
popl
pop
aaa
sar
jecxz
sbb
pop
incb
push
or
test
mov
arpl
dec
pop
fucomp
adcl
aaa
insl
into
xor
lea
cld
pop
inc
test
js
sbbl
inc
adc
jecxz
inc
dec
jge
outsl
clc
test
aas
jns
je
nop
mov
lea
cwtl
insl
jb
sbb
arpl
mov
jo
xchg
mov
mov
pop
pop
mov
roll
adc
jo
mov
mov
sub
repz
je
dec
xchg
xchg
mov
scas
hlt
push
scas
in
in
incl
daa
adc
push
cwtl
mov
add
insb
fwait
lods
xchg
mov
mov
push
sarl
test
lahf
jae
aad
je
inc
mov
or
mov
or
dec
loopne
repz
add
mov
jl
mov
add
or
mov
mov
pop
mov
sbb
fistpll
pop
xor
das
aaa
xchg
xor
sub
push
xchg
das
movl
movsl
jecxz
pop
pop
add
xor
rol
lock
into
mov
lret
repz
xor
fs
push
adc
popf
mov
jge
mov
mov
movsl
xor
movsl
lret
in
xor
xor
mov
add
mov
adc
jnp
jmp
dec
xchg
shlb
adc
fnstenv
sbb
cmp
push
lods
sarb
and
mov
addr16
in
dec
stc
jle
add
add
fsubrl
xchg
xlat
push
cmpsb
xlat
test
imul
adc
xchg
inc
inc
mov
xchg
gs
pop
sbb
sbb
in
pushf
fiaddl
mov
repz
shll
sbb
sbb
shll
loope
sub
push
add
mov
adc
f2xm1
int
insb
xor
mov
push
movb
pop
loopne
mov
orb
pop
mov
push
sbb
enter
push
aam
loopne
mov
push
jno
add
repnz
out
frstor
lahf
and
jo
mov
xlat
pop
rcr
or
pusha
inc
out
data16
mov
fxch
mov
pop
pop
dec
push
push
inc
sbb
ret
inc
in
in
push
sbb
lea
and
iret
mov
add
