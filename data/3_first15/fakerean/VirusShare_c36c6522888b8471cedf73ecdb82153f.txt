nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
xchg
sti
inc
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
xor
inc
add
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
roll
add
movsl
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
cmp
inc
add
add
add
movsl
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
arpl
inc
add
sahf
stc
dec
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
mov
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
jmp
xor
test
mov
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
add
idiv
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
ja
loopne
cwtl
sbb
and
sbb
and
sbb
and
push
loopne
sub
loopne
jae
loopne
sbbb
and
inc
and
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
movb
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
push
push
call
mov
add
add
jge
pop
add
add
add
out
pop
mov
add
roll
imul
xchg
mov
add
add
stc
add
enter
add
add
mov
add
std
add
pop
jp
rcr
xchg
add
lea
arpl
in
add
push
push
push
push
push
lea
push
push
push
push
push
push
call
fildll
add
aam
add
add
push
add
fisttps
push
add
add
add
mov
ljmp
add
shll
adcl
in
in
fcomps
inc
in
push
push
push
push
push
push
push
push
push
push
call
add
bound
add
add
mov
pop
pushf
fwait
add
push
add
add
add
mov
add
add
filds
add
mov
pop
rorl
jge
add
add
jns
lret
add
fs
pop
add
xlat
xchg
fldl
add
push
push
call
xchg
ljmp
ja
pop
jb
add
add
xchg
add
ret
add
xchg
out
push
in
add
test
movsl
push
pop
add
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
test
sti
test
pop
sahf
add
jae
pop
add
scas
out
add
push
add
mov
push
add
mov
xchg
mov
add
add
js
mov
addl
push
push
lea
push
push
call
add
testb
add
mov
add
add
add
add
add
int3
add
jp
jns
add
lods
mov
sub
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
add
lret
movsl
add
scas
add
xorb
mov
jmp
lret
lods
loope
push
test
in
cli
jnp
add
scas
ficompl
mov
add
add
add
add
enter
add
gs
jge
mov
lock
pop
call
push
lea
push
call
into
in
std
roll
add
orl
loop
add
add
filds
mov
push
pop
add
add
in
clc
pop
call
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
push
mov
mov
xchg
add
cmpsl
add
popl
xchg
mov
add
add
jmp
scas
into
scas
add
add
add
add
cltd
xchg
add
add
mov
add
add
add
fldl
loop
sub
pop
push
call
push
lea
push
push
lea
push
call
in
jnp
cmpsl
add
jns
add
add
jbe
add
add
iret
lock
mov
imul
mov
fs
add
hlt
roll
xchg
add
jmp
add
add
test
add
mov
add
ljmp
add
sbbl
lock
lcall
dec
add
add
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
imul
nop
add
jbe
add
add
out
add
aam
rcl
in
loopne
mov
push
lea
push
lea
push
push
push
push
lea
push
call
int
xchg
add
sarl
lret
add
mov
fdivrl
sti
add
add
leave
mov
mov
add
add
jnp
add
add
lret
xchg
add
mov
lcall
pop
hlt
push
push
push
push
push
lea
push
push
push
push
push
call
pop
rolb
aam
push
add
add
loop
int
add
add
cmpl
mov
mov
add
cld
cwtl
cmpl
pop
add
pop
into
add
add
add
leave
in
add
mov
add
sub
pop
add
push
push
push
push
call
insb
cli
lcall
outsl
imul
add
add
add
jmp
add
add
cltd
mov
add
add
add
add
pop
add
sbbb
add
add
mov
add
jmp
out
call
addr16
add
jl
jecxz
add
add
lock
add
add
push
push
push
push
push
push
lea
push
push
call
add
jecxz
add
arpl
rorl
add
popf
mov
mov
cmc
add
add
xchg
mov
scas
add
sahf
add
negl
add
xchg
stos
add
pop
add
clc
add
add
cld
push
jne
add
lahf
add
fwait
jns
jo
add
stos
ja
lahf
push
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
call
movsl
sar
roll
fisubs
add
mov
int
loope
shl
push
push
add
add
xchg
xlat
xchg
in
popf
add
add
jo
mov
out
enter
in
in
lcall
sbb
push
push
push
push
push
push
push
push
call
add
add
lret
int
mov
enter
notl
add
xchg
mov
outsl
imul
add
push
jbe
add
popf
add
add
add
add
cmpsb
in
xchg
add
add
bnd
add
mov
loope
lcall
loopne
lcall
les
add
push
push
xor
dec
push
xor
add
ror
xor
dec
sub
xor
lea
not
pop
add
pop
push
push
push
push
lea
push
call
add
lahf
imul
add
nop
aam
mov
sbb
jmp
jle
mov
jb
add
add
mov
add
imul
sbb
iret
bound
add
stos
add
lods
roll
pop
add
add
push
stos
pop
movsl
xchg
add
in
add
fadd
sahf
test
cwtl
test
add
test
sub
pop
pushl
push
push
push
call
add
ret
mov
add
add
add
push
add
add
addr16
xchg
add
scas
fldl
nop
fstps
lahf
add
add
aam
leave
push
fldl
lahf
push
add
push
push
push
lea
push
push
push
push
push
call
mov
jecxz
clc
lret
jmp
add
cli
popf
rcrl
pusha
add
cmpsb
mov
add
xchg
add
stc
add
add
add
xchg
insb
add
mov
add
in
scas
js
mov
cltd
jbe
sub
pop
movl
push
push
push
push
lea
push
push
call
add
add
ret
add
add
fsub
mov
lock
call
add
in
rolb
xchg
xlat
subb
hlt
push
xchg
add
add
ret
jns
add
shr
add
add
pop
sub
pop
lea
push
push
push
push
push
call
mov
pop
testl
sarl
int3
add
add
add
sti
repnz
add
add
cli
xchg
call
mov
jbe
add
push
sti
jbe
popa
add
add
outsl
xchg
lcall
push
push
call
fwait
icebp
mov
add
pop
imulb
xchg
mov
push
fbld
pop
add
add
add
movsl
xchg
pop
add
fbld
stos
add
add
loopne
stos
mov
add
lcall
jne
push
push
push
push
push
lea
push
push
lea
push
push
call
jmp
jnp
clc
lock
mov
ja
add
lock
add
mov
rcr
push
out
pop
out
mov
add
add
add
data16
add
add
je
add
add
sub
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
push
push
call
push
add
in
jle
ljmp
jae
add
add
mov
addr16
add
out
loope
jne
mov
les
add
pusha
push
add
add
js
imul
push
nop
flds
mull
jae
shrl
leave
fwait
iret
xlat
in
add
in
mov
in
fcomps
fildll
add
push
push
lea
push
push
lea
push
lea
push
call
out
push
add
aad
add
add
add
in
enter
push
lds
add
cli
xchg
scas
add
int
loope
in
icebp
add
cld
ja
add
add
scas
add
in
loope
in
call
pushl
push
lea
push
push
push
push
lea
push
lea
push
call
scas
add
jge
into
xchg
add
add
add
sahf
add
add
add
je
add
add
icebp
add
gs
lret
stos
jge
in
popf
xchg
add
cwtl
mov
jle
add
test
pop
lea
pop
add
mov
add
add
mov
int3
cmp
jmp
stos
push
add
push
or
inc
add
shl
sub
lea
lea
pop
inc
pop
push
lea
push
push
push
push
push
call
mov
out
add
add
add
add
add
mov
push
add
mov
arpl
test
mov
fldl
add
add
add
add
add
add
lcall
jne
push
push
push
push
call
add
add
in
add
add
push
add
add
add
sahf
leave
jmp
add
jb
add
push
rolb
push
add
enter
add
push
scas
js
mov
fucomi
std
mov
in
stos
cltd
sahf
add
pusha
in
jo
add
jl
add
push
lea
push
lea
push
push
push
call
add
fstpl
mov
push
add
add
push
add
add
jle
mov
push
push
push
xor
push
push
pop
add
sub
rol
ror
sub
dec
dec
dec
sub
pop
sub
shl
pop
push
push
push
lea
push
push
call
add
add
add
add
sahf
add
cld
lock
sub
add
flds
out
mov
add
mov
add
add
ret
add
pop
push
pusha
out
pusha
in
adcb
xchg
add
lcall
push
push
push
push
lea
push
push
push
push
call
push
add
sahf
insb
int
ffreep
rolb
cli
jo
add
add
add
add
lahf
add
out
mov
popf
mov
fadds
xchg
cwtl
les
add
test
add
mov
add
add
rorb
add
in
lcall
rclb
call
add
add
add
lret
in
lods
add
lea
jbe
test
xchg
push
lods
std
outsl
push
add
mov
fwait
fwait
add
xchg
test
add
into
add
test
xor
sti
push
add
iret
addr16
pop
mov
push
lea
push
push
push
push
push
lea
push
call
negl
adcl
shlb
jne
add
out
add
in
add
bound
scas
pop
add
add
jnp
pop
push
mov
add
test
jle
push
xchg
xchg
sub
pop
push
push
push
push
lea
push
push
push
push
call
jne
jle
mov
lods
add
jo
add
add
jae
push
jmp
add
add
add
popa
jne
mov
push
push
faddl
jmp
mov
stos
add
jo
mov
stos
add
add
add
add
add
add
sub
pop
push
push
push
push
push
push
push
push
push
call
jp
mov
add
stc
test
add
xchg
iret
add
int
jmp
xchg
aad
stos
add
add
add
push
out
push
add
addr16
mov
lret
sub
pop
mov
push
lea
push
push
lea
push
push
call
push
out
pop
gs
clc
add
mov
lcall
arpl
pop
add
mov
mov
in
in
pop
add
push
push
push
push
push
lea
push
push
call
add
iret
sub
fwait
shl
out
lods
mov
mov
add
add
fcompl
pop
add
pop
add
test
mov
add
enter
pop
lods
sub
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
call
insb
add
push
add
lods
xchg
mov
jp
jne
add
add
rcr
add
pop
add
test
pop
jp
add
add
lcall
ret
sub
add
cmp
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
pop
push
add
add
add
add
jecxz
mov
add
jmp
xlat
push
jl
push
add
mov
mov
add
hlt
rolb
rolb
lcall
xor
push
lea
push
push
push
push
push
lea
push
call
add
test
add
xchg
add
add
add
pop
cmpsb
stc
pop
jbe
xchg
add
add
out
pushf
add
mov
jno
add
sti
add
aad
add
add
push
ja
in
jmp
mov
xchg
sub
pop
add
push
push
push
push
push
push
call
add
fcmovnbe
mov
movsl
add
in
xlat
in
leave
xchg
xlat
mov
add
add
in
add
pop
add
aad
fcoml
lods
in
mov
jne
repnz
addl
add
add
addr16
add
faddp
xchg
add
add
push
in
lahf
stos
imul
add
jne
push
push
push
push
push
push
push
push
push
push
call
mov
out
add
scas
add
clc
out
mov
rolb
out
sahf
add
cmpsb
pop
add
add
add
mov
imul
push
rolb
lock
bound
add
nop
lret
stos
add
add
add
push
loope
jno
arpl
add
inc
or
jno
adc
test
inc
popa
lea
push
call
repnz
push
pop
mov
mov
add
push
jl
call
sti
out
pusha
pusha
add
gs
arpl
pop
mov
mov
add
pop
testb
je
mov
add
push
add
add
push
lret
repnz
sub
pop
xor
push
push
push
call
hlt
jle
mov
add
jno
std
push
mov
add
add
pop
add
cld
add
add
repnz
add
xchg
add
std
jmp
in
add
hlt
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
xchg
xchg
in
mov
add
mov
mov
add
add
add
add
mov
jns
add
add
movsl
je
add
test
xchg
xchg
add
mov
hlt
pop
divl
lock
lret
add
lcall
lock
push
lea
push
push
push
push
call
add
test
push
add
fisubl
cli
addb
push
add
stos
add
add
jne
mov
add
add
add
add
xchg
cli
aam
lcall
shlb
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
push
call
test
mov
add
lahf
add
addb
shll
mov
shrb
add
cmpsb
lods
mov
rolb
add
push
roll
fmul
push
add
sti
add
mov
add
ja
add
add
mov
pop
lret
mov
add
add
icebp
add
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
pop
add
push
cmc
js
add
mov
add
sahf
popl
add
test
out
pop
xlat
add
data16
jge
int
add
fwait
add
popf
roll
js
add
add
pop
mov
lock
fidivrs
add
lds
add
add
xchg
add
add
mov
sub
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
push
call
in
push
add
add
addr16
add
add
add
scas
mov
hlt
jne
add
add
add
pop
jecxz
add
xchg
xchg
mov
add
push
outsl
add
fcompl
sub
pop
xor
push
push
push
push
push
push
call
clc
mov
movl
call
arpl
mov
mov
ja
add
add
insb
lods
test
cmc
add
xlat
test
add
lods
mov
add
add
pushf
cld
add
mov
add
call
mov
faddl
push
in
call
add
push
push
lea
push
push
push
push
push
push
call
add
js
add
bound
add
mov
pop
add
scas
js
icebp
add
pop
add
out
add
enter
mov
nop
add
add
in
outsl
add
mov
fiadds
add
fists
andb
add
popa
lea
enter
push
aaa
cmp
mov
add
add
pusha
movb
mov
push
add
add
std
add
add
jl
mov
clc
popa
je
push
xchg
jecxz
add
out
loope
lret
scas
add
add
pusha
mov
add
ja
mov
mov
add
shr
add
add
sub
pop
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
jnp
enter
xchg
add
add
imull
pop
push
add
incb
add
jo
add
add
bnd
fdiv
xchg
pop
imull
jmp
nop
repnz
add
in
add
lds
add
movsb
push
push
push
push
push
lea
push
lea
push
push
push
push
call
stos
in
xchg
xchg
xchg
add
negl
push
jmp
add
mov
add
add
in
in
fdivr
lcall
push
push
push
push
push
push
call
out
arpl
out
xchg
add
add
add
add
lea
fmulp
repnz
add
outsl
add
add
in
int3
pop
gs
add
xchg
int3
movsl
push
mov
aam
ja
add
push
fcmove
in
add
pushf
xchg
pop
fistpll
add
add
rolb
add
add
push
push
nop
sub
pop
mov
add
push
lea
push
push
push
push
lea
push
push
push
call
pusha
data16
in
popf
xchg
pushf
add
cmpsl
jae
fadds
add
int
add
add
mov
add
movsl
enter
icebp
mov
add
mov
add
pusha
add
add
loopne
lcall
ret
add
add
add
push
push
call
lods
mov
cmpsl
mov
add
add
xchg
mov
mov
add
add
ja
std
jns
stos
push
int
add
mov
test
sar
add
xlat
js
xchg
lods
cltd
mov
mov
roll
pop
cmc
icebp
add
sub
pop
mov
push
push
lea
push
push
push
push
call
add
in
cltd
test
mov
add
leave
jge
push
pop
hlt
add
out
call
enter
stos
xchg
add
scas
std
add
xchg
add
add
add
add
add
add
sub
pop
xor
push
push
push
push
push
push
push
push
push
call
in
ljmp
mov
add
mov
pop
push
jo
pushf
add
mov
mov
roll
add
mov
popf
loopne
cld
fadds
jnp
in
scas
insb
mov
jno
add
add
rcll
mov
in
fcompl
les
push
lea
push
call
stos
add
pop
pop
andb
add
mov
add
andl
pop
add
add
pushf
imul
add
add
test
add
stos
add
add
add
lcall
push
and
xor
adc
or
out
jge
lea
push
push
push
push
push
call
add
addb
add
push
stos
add
add
stos
add
add
add
mov
add
jb
add
movl
mov
add
add
icebp
xchg
stos
stos
add
aam
jecxz
add
add
add
mov
mov
add
repnz
sub
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
cwtl
mov
add
fldl
rol
shlb
add
add
add
add
rolb
pop
rolb
add
add
add
add
xchg
mov
add
lret
movsl
mov
mov
int3
jnp
in
fcomps
les
add
push
push
push
push
push
push
call
add
ret
add
add
lods
add
data16
add
scas
add
add
lock
add
ja
nop
add
mov
movb
pop
mov
xor
push
push
push
push
push
lea
push
lea
push
call
add
mov
mov
arpl
popf
lods
mov
add
fwait
imul
add
clc
jae
add
cli
push
add
cld
popf
add
add
add
lahf
mov
iret
std
add
filds
imul
lcall
ret
push
push
push
push
push
push
push
call
pop
loopne
xchg
out
push
jge
mov
add
add
add
push
jb
add
push
add
fcompl
xlat
add
add
add
add
in
in
lcall
fsubrs
mov
stos
push
lea
dec
push
sub
add
sub
sub
rol
ror
pop
dec
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
iret
lods
add
lods
shrl
jp
fsubs
lods
add
add
add
add
add
add
fcompl
jne
push
push
call
mov
pusha
lea
xchg
mov
add
add
enter
add
hlt
pop
fsubrp
icebp
cmpb
fldl
add
add
xchg
mov
outsl
push
aad
mov
ja
add
lcall
pusha
bound
add
cmc
lea
push
call
add
lahf
movsl
pushf
add
add
push
outsl
fnstcw
mov
add
pusha
add
aad
enter
add
cmpsl
add
add
add
add
add
add
push
sti
add
add
add
aad
ret
add
out
insb
data16
add
add
add
add
lcall
add
cmp
sarl
push
or
not
add
inc
sub
ror
add
xor
rol
pop
shl
rol
sub
pop
push
push
push
push
push
call
stc
add
add
add
mov
push
testb
cmc
jmp
push
mov
stos
add
push
lcall
in
in
lcall
push
push
lea
push
push
push
push
push
push
push
call
test
sarl
outsl
divl
mov
mov
add
add
add
add
mov
add
add
movsl
xchg
rol
jge
test
add
mov
add
lcall
cltd
add
add
popf
cli
mov
aam
loope
sub
pop
push
call
push
lea
push
call
movsl
add
add
rolb
insb
loopne
int3
mov
add
add
loop
add
jle
add
lret
add
add
sahf
lods
add
jae
fwait
mov
add
mov
add
add
add
jmp
filds
add
insb
mov
add
les
test
sub
pop
mov
push
lea
inc
lea
not
pop
push
push
push
not
inc
add
pop
mov
push
sub
add
pop
add
push
push
push
call
add
popa
add
mov
int
add
jecxz
lcall
scas
add
xchg
add
mov
int3
test
rcrl
push
cwtl
push
call
add
sti
lret
hlt
lcall
ret
add
add
push
push
lea
push
lea
push
push
push
lea
push
call
sar
add
faddl
push
pop
lret
fcoml
add
jnp
aam
cmpsl
mov
pop
iret
mov
add
jl
mov
shl
lds
push
add
add
add
sub
pop
add
mov
xor
push
xor
rol
pop
add
push
push
push
push
push
push
push
call
lods
add
lcall
in
in
add
add
add
fnstcw
pop
push
add
add
jno
xchg
xchg
mov
mov
shll
ja
add
jl
jo
pushf
int
mov
out
outsl
ljmp
add
in
aam
std
add
add
call
mov
push
push
lea
push
lea
push
push
call
addb
xchg
cmpsl
add
xor
add
add
movl
cli
movl
add
add
rolb
add
add
mov
repnz
test
add
scas
add
int3
aad
add
subb
add
shll
lcall
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
incb
mov
les
push
repnz
push
popf
push
mov
add
leave
cwtl
add
cmc
cmc
push
xlat
jns
jmp
add
pop
add
add
mov
lcall
les
add
push
add
dec
add
xor
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
push
call
push
add
add
pop
mov
push
fstl
adc
add
add
add
add
add
in
fisttpl
js
jbe
add
ja
add
lods
pop
jb
add
jl
add
ror
add
add
lcall
push
shr
pop
mov
xor
push
push
lea
push
call
add
add
mov
mov
add
mov
stos
imul
add
add
add
flds
xchg
pop
cwtl
leave
add
mov
add
fsts
lea
popf
jns
gs
jecxz
in
hlt
lcall
movsb
push
push
push
push
lea
push
push
push
push
push
lea
push
call
je
add
add
divl
icebp
push
cltd
je
adcb
cli
push
mov
addr16
add
add
testl
in
add
loopne
mov
cld
jp
add
cld
add
mov
add
pop
mov
flds
add
sbb
in
fdivr
lcall
dec
and
xor
adc
call
cld
add
add
push
add
iret
add
add
mov
add
mov
hlt
add
jae
test
pusha
add
add
add
in
clc
lcall
or
push
push
push
push
push
push
lea
push
push
push
call
scas
test
test
push
lret
mov
fidivs
add
add
pop
add
add
add
lds
mov
add
arpl
repnz
add
add
xchg
add
int3
add
out
mov
push
lock
pop
add
push
lea
push
push
push
call
add
xchg
loope
pop
iret
movb
push
imul
add
add
jae
loope
add
add
jno
roll
xchg
add
add
pop
push
lret
push
flds
add
add
sub
pop
or
je
push
inc
pop
mov
xor
push
xor
inc
pop
mov
push
push
push
lea
push
push
call
add
cmc
add
xchg
add
add
mov
cli
pop
push
pop
roll
imul
ret
stc
add
add
mull
addb
add
xchg
jle
mov
add
roll
jecxz
add
lock
xor
push
push
push
push
push
lea
push
push
push
push
push
call
add
push
xchg
hlt
add
add
mov
push
subl
sarb
add
fwait
mov
add
lcall
int3
jns
mov
push
std
add
add
add
jmp
in
fdivr
lcall
les
lea
push
lea
push
push
push
push
call
push
pop
in
faddl
vpaddd
movsl
insb
rclb
add
add
cmc
ja
push
stos
add
add
add
test
rclb
call
jne
push
push
push
push
call
mov
lahf
mov
call
add
mov
add
add
add
add
mov
add
ficoml
lcall
mov
push
push
push
push
push
push
push
push
call
lods
loope
add
mov
push
jnp
add
mov
out
add
mov
int
pop
add
mov
sahf
add
add
test
lock
faddl
add
add
movsl
add
add
add
sub
pop
xor
push
lea
push
lea
push
call
push
add
pop
arpl
add
add
mov
leave
arpl
test
jp
add
movsl
xchg
pop
add
hlt
sub
pop
add
push
add
shl
pop
add
push
lea
push
push
push
push
call
mov
enter
lods
lea
pop
add
xchg
jecxz
mov
add
add
js
int
enter
test
add
leave
pushf
add
nop
add
add
add
mov
fmulp
mov
add
lcall
rep
push
push
push
push
call
add
ljmp
mov
jae
add
push
add
lahf
incb
add
out
add
out
add
roll
add
pop
stos
in
jae
sbbb
jbe
in
lock
lcall
dec
sub
jno
adc
pop
push
es
push
push
call
pop
arpl
add
add
mov
mov
add
mov
push
xchg
test
jnp
in
jp
add
mov
add
in
aam
add
add
add
push
jle
push
data16
add
mov
flds
add
add
mov
lods
cli
add
mov
in
lock
xor
push
push
push
push
lea
push
push
push
call
mov
icebp
negl
jb
movb
int
les
add
les
add
add
jl
add
rcl
fadds
imul
add
add
add
in
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
arpl
add
fwait
add
imul
faddl
add
fwait
mov
lods
add
jae
mov
movsl
leave
add
add
add
add
lcall
leave
je
push
lea
push
push
lea
push
push
push
push
push
push
call
fisubs
add
test
lock
add
mov
jmp
pop
xchg
popf
loop
push
jl
add
cmpsb
fs
xchg
mov
mov
push
shl
pop
add
push
sub
ror
not
pop
add
rep
push
push
push
push
push
push
call
mov
ljmp
fs
jp
jp
mov
push
push
imul
int3
jns
add
pop
push
push
not
lea
ror
push
or
not
add
shl
shl
sub
add
xor
pop
lea
pop
push
not
pop
pop
push
lea
push
call
movsb
push
fstpt
pop
add
add
js
jge
ljmp
xchg
add
mov
add
mov
add
add
addb
push
nop
lock
lret
in
mov
pop
mov
push
dec
pop
mov
push
not
add
shl
pop
mov
push
sub
add
shl
pop
jmp
push
lea
push
push
push
call
add
js
mov
mov
mov
add
pop
mov
add
push
out
lahf
add
add
add
scas
test
add
je
shrl
add
add
out
add
into
repnz
flds
mov
add
outsl
sub
pop
push
push
push
push
lea
push
push
call
outsl
add
jmp
mov
sarb
add
les
gs
push
cmpsl
stos
add
fadds
add
int3
jns
add
ja
enter
add
add
add
jp
jp
add
add
cmpsl
les
mov
add
rolb
add
push
add
lcall
in
push
add
not
pop
add
push
push
lea
push
lea
push
lea
push
lea
push
call
add
loop
xlat
mov
push
mov
jmp
out
mov
pop
xchg
add
add
mov
jne
cmc
lock
mov
add
jle
imul
add
fists
mov
in
call
push
push
push
push
push
push
push
push
lea
push
push
push
call
mov
xchg
add
les
add
mov
stos
add
add
add
add
fiadds
jns
movsb
sub
pop
push
push
push
push
push
push
push
lea
push
call
pop
add
movsb
add
add
add
add
leave
addr16
ljmp
add
xlat
mov
add
pop
stc
add
sahf
add
add
mov
push
mov
push
inc
ror
shl
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
call
push
add
mov
xchg
add
pusha
pusha
add
xchg
movb
jb
jb
mov
add
gs
rcrl
xlat
add
add
push
add
in
pop
pop
push
inc
inc
shl
sub
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
test
add
lcall
add
outsl
add
test
into
cmpb
add
rclb
outsl
add
add
jmp
add
sub
test
scas
imul
fbstp
add
add
arpl
push
mov
add
lcall
push
shr
add
pop
ret
push
sub
pop
push
push
add
inc
lea
lea
pop
mov
push
not
pop
add
push
push
ror
pop
push
push
push
push
push
call
in
rol
cltd
movb
add
add
add
mov
add
push
jb
add
call
add
jle
jno
int
add
add
add
sub
pop
push
push
push
add
ror
pop
movl
addl
push
push
push
push
lea
push
push
call
movl
int
movsb
leave
fcoml
mov
clc
into
xchg
lock
stos
in
mov
outsl
add
add
je
xchg
idiv
add
add
in
add
add
add
pushf
test
call
test
pop
mov
pop
push
push
lea
push
push
push
lea
push
call
add
add
rolb
rolb
cmpb
add
jl
mov
out
cli
adcl
xchg
lods
pop
mov
sub
pop
pop
pop
push
push
lea
push
lea
push
call
stos
mov
jae
mov
add
mov
lds
add
pop
add
mov
subl
add
add
insb
sarb
add
fwait
mov
xchg
add
push
add
add
sub
pop
pop
leave
push
shl
pop
ret
push
push
call
pusha
call
js
loopne
enter
test
add
add
add
jmp
pushf
add
leave
lods
add
lret
scas
xchg
add
add
add
mov
jge
add
mov
mov
pop
add
add
fmulp
imul
clc
pop
push
mov
push
push
push
push
call
mov
scas
add
xlat
add
lahf
jmp
add
add
test
fidivl
add
add
add
add
sub
pop
add
push
dec
sub
pop
push
push
inc
pop
push
push
lea
push
push
push
lea
push
push
call
cwtl
fsub
ret
add
add
xchg
rolb
fwait
mov
add
add
fs
xchg
into
add
call
push
push
lea
push
call
popl
add
fcomp
add
add
add
mov
add
lret
add
test
push
fiadds
add
insb
add
movsl
add
outsl
mov
call
lret
popa
testl
mov
mov
out
sub
pop
push
push
add
sub
pop
testl
push
ror
pop
addl
push
push
not
add
pop
call
mov
push
sub
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
add
in
push
mov
add
add
hlt
in
call
add
add
in
add
mov
add
mov
jl
add
aam
xchg
mov
lcall
add
push
call
add
add
jge
imul
std
add
mov
add
add
add
popa
add
vmovq
fiadds
mov
push
add
add
jno
add
push
push
add
mov
mov
leave
pop
cmpl
add
leave
mov
fcmovbe
mov
lcall
pop
stc
call
sub
push
call
sbb
movl
add
imul
lahf
add
push
outsl
add
jb
mov
mov
mov
cwtl
add
repnz
add
lret
jno
lods
pop
enter
lret
jp
add
je
jns
mov
mov
pop
test
rolb
out
ja
in
lock
lcall
jge
add
test
lea
push
push
push
push
push
push
lea
push
push
push
call
nop
sahf
lods
add
in
roll
xchg
in
stos
mov
add
add
add
mov
jae
mov
cmpsb
mov
add
add
add
xchg
jp
loopne
mov
jo
add
add
add
jmp
stos
pop
mov
fcomps
push
ror
shl
ror
xor
pop
pop
push
sub
sub
shr
ror
pop
pop
push
push
lea
push
push
lea
push
lea
push
call
fcmovnu
enter
test
out
add
add
data16
add
xchg
add
clc
mov
add
insb
jnp
add
jp
add
lds
jmp
mov
pop
mov
add
call
add
sahf
xchg
add
mov
fisubl
into
andb
out
stc
sub
pop
pop
push
inc
pop
leave
push
add
pop
ret
push
push
lea
push
call
addb
add
imull
test
add
mov
add
insb
add
add
mov
add
xchg
add
in
add
add
add
add
push
sahf
jo
sub
pop
mov
push
rol
lea
pop
add
push
push
push
push
push
lea
push
push
push
call
test
test
popf
jp
rolb
push
xchg
je
jns
add
add
add
lds
in
popf
mov
xchg
sti
mov
into
jae
repnz
in
loopne
push
push
push
push
call
div
xchg
pushf
add
jno
popl
lahf
bound
mov
loope
push
int
mov
ret
lahf
xchg
pop
test
mov
add
add
pop
add
sti
xchg
movsb
push
add
nop
aad
ror
sub
pop
push
push
lea
push
push
push
push
push
call
add
ljmp
add
mov
xchg
add
add
jmp
lahf
shlb
jp
xchg
jb
lret
add
popa
in
add
add
push
dec
pop
movl
push
lea
push
push
push
call
scas
add
add
pop
pop
fcoms
add
mov
add
jbe
andl
hlt
add
popf
push
pop
push
add
push
mov
add
roll
in
lock
lcall
add
mov
lret
push
push
push
lea
push
push
push
call
add
add
les
add
aad
push
add
mov
add
jne
add
jne
pusha
stc
add
add
add
icebp
out
xchg
mov
mov
movsb
pop
clc
xchg
je
add
add
jae
sub
pop
call
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
test
pop
xor
popf
add
rcrb
add
push
push
mov
loop
aam
jae
push
xchg
lods
rolb
mov
sub
pop
push
push
push
push
call
add
pusha
add
in
mov
push
popf
xchg
add
add
add
leave
fiaddl
test
add
mov
add
movl
sub
pop
call
subl
push
lea
sub
sub
pop
cmpl
jne
push
rol
inc
sub
pop
pop
push
lea
push
push
push
push
call
ficompl
jmp
mov
add
fcoms
add
test
mov
add
mov
add
filds
out
add
fadds
add
pusha
add
xlat
call
ljmp
push
int3
cmc
xchg
test
mov
in
in
lcall
push
push
push
lea
push
call
push
shl
add
jge
popf
out
loope
imul
add
add
hlt
loopne
mov
add
jo
add
idivl
add
nop
lea
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
lea
filds
add
rolb
add
add
lret
add
add
arpl
add
addb
jno
nop
mov
add
notl
sub
pop
pop
leave
push
push
push
push
call
push
pushf
add
addb
add
test
out
add
add
shr
add
add
add
add
out
add
mov
add
into
mov
lock
lcall
push
lea
push
call
in
mov
pop
add
hlt
add
fadds
movsb
icebp
add
xchg
lods
push
xchg
push
out
shrl
push
jecxz
jge
mov
add
lods
ja
add
int3
jl
xchg
add
bound
imul
scas
lcall
scas
sahf
testb
sub
pop
push
mov
push
add
shr
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
popl
add
sarb
add
add
addr16
add
std
fucom
mov
mov
in
push
add
rol
mov
add
movl
std
fs
aam
add
add
mov
mov
nop
lds
sub
pop
push
push
rol
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
in
add
mov
mov
hlt
ret
add
lahf
imul
jnp
pop
add
nop
les
mov
add
add
add
pop
sub
pop
push
push
dec
shr
pop
push
push
xor
pop
mov
lea
push
push
push
lea
push
push
push
push
push
call
lods
testl
jle
add
add
add
push
lods
add
jmp
jge
cmc
repnz
add
out
fiadds
add
xchg
leave
testl
out
addl
in
jmp
add
addb
in
loopne
sub
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
rolb
add
ja
fsub
lcall
add
mov
xchg
mov
js
jle
add
mov
add
jbe
sub
pop
mov
push
sub
pop
shr
add
push
add
lea
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
add
jbe
add
jecxz
jecxz
enter
movsb
in
jle
add
add
mov
fstpt
add
mov
mov
xchg
fadds
andb
shrb
aam
aad
add
add
push
push
lea
push
push
lea
push
push
push
push
push
call
cltd
pop
lcall
mov
add
add
jo
pushf
fnstenv
add
add
mov
lock
imul
rolb
add
jb
mov
add
loop
jno
aam
mov
add
popa
add
icebp
arpl
add
add
sub
pop
mov
mov
push
push
push
call
add
mov
aam
fadds
xlat
js
add
mov
xchg
add
mov
add
add
add
mov
in
jmp
test
out
add
popf
add
xchg
add
add
add
jae
jns
loopne
test
pop
outsl
jne
cmp
jne
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jmp
jmp
pop
bnd
add
add
rol
add
cltd
js
jno
add
add
ret
jnp
aam
cli
in
test
sahf
add
add
lock
jae
add
ret
add
mov
pusha
add
je
outsl
mov
fcomps
inc
adc
add
add
add
fisttps
aam
jmp
push
rol
lea
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
fdiv
xchg
xchg
push
add
clc
add
aam
add
add
add
add
add
mov
add
lahf
addb
mov
in
cld
mov
add
int
std
add
mov
fbld
pop
cltd
add
add
mulb
pushf
add
sub
pop
mov
push
lea
push
call
add
add
insb
int3
add
jle
data16
add
pop
add
pop
add
ljmp
aas
add
add
lea
push
push
lea
push
push
push
call
jecxz
add
fwait
add
xlat
shrb
add
aam
add
fucomp
add
cli
leave
mov
add
out
cltd
add
fdivrl
mov
add
imul
test
movb
std
out
ljmp
mov
mov
push
movsl
xchg
push
add
inc
adc
popf
inc
pop
pop
add
add
add
add
xchg
cmpl
xchg
add
idiv
aad
pop
add
subb
sti
out
add
mov
add
out
shlb
mov
push
xchg
test
lds
push
add
xchg
fs
mov
add
cltd
jb
popa
add
fs
imul
add
mov
pop
movl
push
push
lea
push
push
push
call
xlat
sti
mov
add
stos
add
add
push
add
lcall
pop
stos
mov
mov
add
clc
add
push
cmpsl
jge
hlt
test
pop
jmp
mov
push
push
push
push
push
call
push
jbe
add
out
pop
add
mov
add
pop
push
add
cli
xchg
mov
data16
pop
aad
add
add
test
add
xchg
add
pop
lods
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
fisttps
add
pop
add
fs
jmp
add
add
mov
mov
add
jno
add
pop
add
add
mov
pop
cmp
jne
mov
push
shr
xor
pop
movl
push
inc
not
not
pop
jmp
mov
push
dec
not
shr
pop
cmpw
jne
push
sub
not
ror
not
pop
mov
push
xor
pop
movl
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
imul
mov
mov
pop
stos
addb
test
cmc
mov
insb
nop
xchg
add
add
test
add
lret
add
insb
pusha
pop
add
mov
add
push
add
int3
jns
add
adcl
push
sub
pop
jmp
push
push
lea
push
call
stos
mov
cld
jl
add
pop
add
jno
mov
lcall
pop
add
popa
lea
add
add
mov
filds
lods
mov
xchg
shr
hlt
sti
mov
add
andl
aad
mov
mov
add
add
jno
popa
add
sub
pop
pushl
pop
push
sub
pop
mov
mov
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
test
add
shrb
in
jno
add
add
add
cmpb
testb
mov
add
add
mov
pop
mov
push
push
lea
push
push
pop
add
sub
shl
not
sub
dec
shl
pop
lea
not
shr
pop
push
not
not
pop
push
call
push
ror
sub
pop
cmpl
je
push
push
dec
dec
sub
push
sub
add
rol
sub
shl
pop
lea
add
lea
pop
push
sub
sub
shr
dec
pop
push
push
sub
pop
call
push
shr
dec
pop
cmpl
je
push
push
lea
push
and
add
shr
sub
dec
sub
add
sub
pop
add
pop
push
push
lea
push
push
push
push
push
call
mov
int3
add
add
add
push
imul
xchg
add
add
push
ja
add
add
mov
push
lock
pop
add
std
sub
pop
push
push
dec
inc
pop
call
push
not
add
dec
pop
cmpl
je
push
push
ror
shl
push
sub
add
shr
dec
sub
sub
add
sub
pop
shr
inc
pop
push
push
push
call
mov
out
add
loope
jno
mov
add
add
roll
mov
imul
out
mov
pop
loopne
pop
sbbl
lcall
push
sub
pop
call
cmpl
je
push
push
sub
push
sub
add
ror
sub
dec
pop
add
pop
push
add
shl
inc
shl
pop
push
call
push
push
push
lea
push
push
push
push
push
call
mov
mov
test
in
add
add
ja
add
xchg
ljmp
xchg
push
lcall
cmp
rol
je
push
push
sub
shl
push
or
inc
add
sub
sub
pop
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
mov
add
xchg
mov
mov
add
add
add
lea
add
lret
xchg
add
jl
fst
mov
add
push
add
add
xchg
pop
xchg
popl
add
add
mov
add
push
nop
add
outsl
loopne
add
imulb
sub
pop
push
push
sub
pop
call
push
pop
cmpl
je
push
push
add
sub
push
or
not
add
sub
sub
xor
rol
pop
dec
add
pop
push
add
xor
pop
push
push
pop
call
push
lea
push
push
push
lea
push
push
call
lret
hlt
stos
into
add
jb
stc
add
aam
add
push
pusha
fimuls
add
test
icebp
add
popa
gs
fisttpll
and
add
call
cmpl
je
push
push
sub
push
sub
add
add
ror
lea
ror
sub
shr
pop
ror
ror
dec
pop
push
sub
shr
sub
inc
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
stc
testb
add
loop
add
int3
mov
add
jo
add
add
push
mov
mov
jb
in
add
in
enter
data16
test
mov
add
mov
add
xchg
push
add
loop
sarb
call
cmpl
je
push
push
xor
sub
push
xor
add
shr
shr
inc
sub
xor
ror
pop
shr
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
int3
push
loop
test
mov
add
cmc
mov
mov
movsl
clc
shll
add
jns
cltd
fildl
shll
out
fildl
fldt
add
add
test
in
add
add
pop
push
push
dec
pop
call
push
push
push
lea
push
push
lea
push
call
stos
add
int
jnp
add
xchg
nop
add
add
xchg
loope
rolb
out
mov
add
movsl
add
outsl
shr
insb
cmpsb
outsl
jno
fidivrl
mov
stos
roll
add
add
add
mov
roll
call
cmpl
je
push
push
lea
push
sub
add
sub
xor
rol
sub
sub
shr
pop
not
shl
pop
push
ror
shl
pop
push
push
push
push
push
lea
push
push
call
popf
jl
cld
mov
mov
add
mov
aam
add
add
xchg
lea
add
add
mov
jl
push
fidivrl
sti
jns
rorl
fs
popf
sahf
add
add
add
pop
popl
in
jmp
lcall
loop
add
push
add
dec
rol
pop
cmpl
je
push
push
ror
add
push
or
inc
add
dec
not
sub
lea
add
pop
sub
pop
push
lea
push
push
push
push
push
call
incb
jnp
mov
add
add
loopne
add
add
scas
icebp
pushf
mov
addl
add
leave
jo
js
add
popf
jge
add
sub
int
repnz
pop
push
call
push
inc
add
pop
cmpl
je
push
push
rol
push
and
add
add
sub
pop
rol
xor
pop
push
lea
push
push
push
call
add
sti
add
add
fsubs
add
pushf
add
test
add
jecxz
cmpsl
add
add
add
sub
pop
push
push
lea
push
call
lahf
in
jne
add
add
pop
movsl
cmpsb
mov
mov
add
mov
jns
add
pop
sub
pop
call
push
lea
pop
cmpl
je
push
push
dec
add
lea
push
or
not
add
ror
add
lea
sub
ror
xor
pop
not
add
sub
pop
push
push
lea
push
push
call
fstps
lods
into
add
add
fcomip
scas
imul
add
add
mov
add
in
sub
pop
push
push
add
not
add
pop
call
cmpl
jne
push
push
push
push
lea
push
push
push
call
lahf
add
lcall
addr16
lahf
add
add
push
xlat
jno
jb
cmpsl
add
add
leave
arpl
xchg
add
add
add
rcll
jle
add
popl
shl
sti
add
add
inc
adc
push
push
push
push
call
jb
in
cmpsb
add
jbe
add
mov
ret
iret
lods
clc
mov
lock
add
add
pop
pop
xchg
push
add
je
add
mov
iret
pop
pop
out
in
imul
sub
pop
movl
jmp
push
push
lea
push
push
push
push
push
push
push
push
call
lcall
add
add
push
add
mov
jae
add
mov
mov
add
xchg
xlat
add
add
mov
add
add
mov
add
add
xchg
push
add
add
add
out
add
movsb
jmp
mov
pop
flds
mov
repnz
jle
pushf
jns
outsl
push
xor
pop
push
sub
not
inc
pop
pop
push
dec
pop
pop
push
xor
dec
pop
pop
push
lea
push
push
call
add
fisttpll
in
movsb
add
add
fcoms
cwtl
ljmp
pop
push
add
add
add
sub
pop
leave
ret
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
stos
add
add
test
push
jl
pop
mov
lods
cli
pop
call
mov
outsl
add
add
enter
xchg
add
pop
push
push
add
add
mov
loopne
roll
bound
mov
add
in
jl
add
in
ljmp
add
sub
pop
push
push
pop
mov
add
push
shr
shr
pop
cmpl
jne
push
push
push
push
pop
add
add
sub
sub
sub
pop
lea
ror
pop
push
push
push
push
push
push
call
add
iret
add
add
int3
cmpsl
add
lock
mov
add
jne
add
ficoms
pop
add
add
jo
popa
mov
roll
lcall
jne
push
push
push
push
push
lea
push
push
push
push
lea
push
call
pushf
add
add
add
add
ffreep
sbb
rolb
add
push
xchg
aad
add
add
addr16
pop
call
push
push
add
sub
dec
pop
call
push
push
push
push
call
push
add
add
lds
clc
push
shll
add
jae
add
cld
add
testb
mov
in
add
jmp
cmpl
je
push
sub
sub
pop
cmpl
jne
push
sub
pop
leave
add
push
add
lea
pop
pop
push
xor
pop
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
mov
add
call
add
in
mov
add
add
add
push
add
add
add
addb
push
in
jmp
pop
add
xchg
mov
mov
push
add
lcall
push
pop
leave
push
push
push
call
add
add
mov
add
fistps
add
add
add
mov
push
les
imul
in
hlt
pop
add
push
sub
add
dec
pop
ret
push
shl
sub
sub
add
pop
jmp
push
push
push
push
push
push
lea
push
call
add
mov
xchg
add
add
pop
lret
popf
andl
mov
mov
lahf
mov
testb
cmpsl
repnz
jp
testb
les
movsb
add
add
addl
fldl
lcall
jge
add
test
add
push
push
shr
sub
sub
push
push
pop
add
xor
ror
dec
sub
lea
pop
sub
pop
push
sub
pop
pushl
push
shl
pop
call
push
push
add
dec
pop
call
push
rol
pop
jmp
push
sub
not
pop
cmpl
jne
mov
push
not
not
lea
pop
mov
push
push
push
rol
push
xor
add
rol
sub
xor
pop
rol
xor
shr
pop
push
add
ror
pop
pushl
push
lea
push
push
lea
push
push
push
call
add
mov
stos
push
addl
pop
popa
add
xchg
add
pop
mov
push
add
add
in
xchg
add
add
push
push
add
call
add
push
sub
pop
call
push
push
lea
push
or
not
add
dec
shr
lea
sub
sub
shr
pop
add
dec
pop
push
dec
shl
rol
rol
pop
pushl
push
push
lea
push
push
push
lea
push
push
push
push
push
call
jmp
jae
mov
rorb
rclb
add
jns
shlb
ljmp
flds
pop
add
lock
repnz
lds
jae
movsl
add
out
add
addl
add
out
add
pop
call
push
not
add
pop
call
push
push
push
and
add
lea
ror
add
lea
sub
shl
inc
inc
pop
shl
sub
inc
pop
push
shr
pop
pushl
push
lea
pop
call
push
sub
xor
pop
call
push
push
add
sub
lea
push
or
not
add
dec
add
sub
add
dec
inc
pop
shr
shl
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
add
nop
xchg
add
insb
popf
add
in
add
pop
add
add
mov
add
add
add
mov
mov
loopne
add
lcall
jne
push
add
ror
pop
call
push
lea
push
call
fst
imul
aad
push
loop
loopne
add
repnz
call
add
pop
pop
add
sub
add
add
sub
pop
call
push
push
lea
push
or
inc
add
dec
sub
add
shr
sub
xor
pop
ror
dec
pop
push
push
call
data16
xchg
add
cmc
lret
loope
cmpsl
ret
ja
xchg
push
clc
xchg
xchg
insb
add
add
add
roll
add
add
add
add
add
sub
pop
pushl
call
push
dec
pop
call
push
push
push
or
not
add
add
shl
not
not
sub
rol
pop
not
pop
push
push
push
push
lea
push
lea
push
lea
push
call
lahf
jnp
add
lods
pop
mov
movsb
imul
add
add
pushf
add
ret
mov
cwtl
add
lea
push
add
filds
lods
add
lret
add
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
call
int3
rorl
add
movsl
rclb
xchg
add
add
add
add
mov
jecxz
add
add
in
xchg
push
mov
stos
aad
into
sub
pop
call
call
push
push
inc
not
shl
push
push
pop
add
rol
sub
xor
sub
pop
sub
dec
lea
xor
pop
push
push
call
lods
loop
push
call
add
cmpsb
add
add
push
add
clc
xchg
push
cmpsl
add
mov
stc
xchg
xchg
mov
out
insb
add
lcall
jne
call
push
push
push
push
call
xchg
pop
mov
pop
in
add
shlb
add
lods
add
add
add
mov
lods
push
jo
mov
in
in
add
fistl
add
mov
roll
push
push
add
rol
add
inc
push
and
add
inc
inc
inc
sub
lea
pop
rol
rol
xor
pop
push
inc
pop
pushl
push
push
lea
push
lea
push
lea
push
call
add
add
cwtl
add
addl
add
into
rolb
fs
add
add
sarb
sahf
add
add
xchg
fsubrp
mov
clc
add
fiaddl
in
add
call
push
sub
pop
call
push
push
lea
sub
sub
push
and
add
rol
xor
ror
sub
ror
shl
inc
pop
shl
lea
xor
pop
push
inc
lea
pop
pushl
call
push
push
lea
push
push
push
push
push
push
push
call
push
les
add
add
add
add
add
jae
add
add
movsl
jnp
popl
pop
movb
push
xchg
in
cmpsl
lret
xchg
jbe
add
les
in
data16
mov
jmp
add
add
push
sub
pop
call
push
push
lea
push
or
inc
add
sub
sub
dec
pop
add
shr
shl
rol
pop
push
lea
inc
pop
pushl
push
push
push
push
push
push
lea
push
call
hlt
add
mov
add
rcrl
add
pusha
movsl
mov
repnz
mov
jecxz
push
pop
jae
add
add
add
add
add
mov
add
scas
jl
add
movl
jge
shrb
add
add
shl
roll
add
add
pop
call
push
xor
shr
xor
pop
lea
push
lea
push
push
call
add
flds
add
cltd
add
add
js
add
mov
cmpsb
ja
gs
bound
add
add
loope
mov
add
add
mov
add
add
fistpll
test
add
out
xchg
mov
add
pop
nop
test
sub
pop
push
push
push
lea
push
call
mov
add
mov
out
cmc
add
add
jb
test
add
int
add
add
ja
sti
out
scas
add
sahf
in
lock
mov
push
movsl
lahf
scas
xor
sub
pop
call
push
push
sub
push
or
not
add
lea
xor
sub
lea
shr
add
pop
shl
dec
ror
shl
pop
push
push
push
push
push
push
push
call
push
imul
add
loope
xlat
lock
add
mov
pushf
rcr
pusha
add
xchg
jmp
fists
loop
int
push
jp
mov
jbe
loopne
jno
add
mov
xchg
add
leave
bound
repnz
mov
add
fsubs
mov
add
add
fiadds
lcall
jne
push
push
push
push
push
push
lea
push
push
push
lea
push
call
pushf
enter
add
int3
jb
movb
cmpsb
add
pop
add
fildl
push
add
mov
add
out
aam
and
mov
cmpsl
ret
jl
jns
add
xchg
aad
jb
divb
std
loope
jecxz
add
cltd
add
add
xlat
sub
pop
call
call
push
push
dec
xor
rol
lea
push
sub
add
lea
ror
sub
ror
sub
pop
inc
pop
push
lea
push
push
call
push
fldl
mov
jle
in
add
add
in
add
outsw
add
jo
jo
add
jb
add
in
add
popa
fadds
add
gs
stos
add
imul
add
cmpsb
push
cmpsl
jge
mov
hlt
pop
pushl
push
sub
shr
pop
call
push
inc
pop
call
push
push
sub
push
and
add
not
add
sub
xor
pop
inc
ror
pop
push
push
lea
push
push
push
push
call
add
push
data16
jecxz
add
mov
iret
add
add
out
int
mov
xor
cmc
add
out
test
add
add
aam
std
xchg
add
add
add
aam
sub
pop
pushl
call
push
push
push
push
call
push
movsl
lods
jecxz
mov
loopne
add
add
mov
test
add
lds
insb
sbbl
filds
add
test
add
add
iret
ljmp
fdivrl
enter
flds
xchg
lds
rorb
ljmp
xor
adcb
xor
dec
shl
push
or
inc
add
add
add
sub
rol
shl
inc
not
pop
inc
xor
pop
push
push
push
lea
push
push
call
add
pop
mov
push
push
add
push
clc
jno
ljmp
stos
add
add
mov
fucompp
add
in
push
fs
xchg
in
add
in
add
jbe
idiv
mov
loope
add
add
in
lcall
jne
call
push
dec
pop
push
push
sub
dec
pop
call
push
push
shl
xor
push
sub
add
add
shl
rol
sub
shl
pop
xor
shr
sub
pop
push
xor
add
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
push
push
call
ret
push
rolb
xchg
pop
lods
add
xchg
jecxz
mov
add
mov
mov
gs
je
imul
xchg
xlat
add
js
mov
push
jl
out
pop
fldt
out
cmpsb
repnz
xlat
ja
mov
hlt
in
push
sti
add
add
jmp
add
scas
push
std
sub
pop
call
push
inc
add
shl
pop
call
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
push
filds
add
mov
add
mov
jnp
ja
mov
mov
movsb
add
mov
add
jp
mov
mov
test
add
out
movb
pusha
jge
push
stos
lds
add
add
sub
pop
mov
push
push
dec
push
sub
add
sub
sub
sub
pop
not
pop
push
add
pop
pushl
call
push
dec
sub
dec
rol
pop
push
push
rol
rol
xor
pop
pushl
call
push
push
rol
not
push
or
not
add
add
add
sub
sub
ror
rol
sub
pop
rol
shl
pop
push
add
sub
pop
pushl
call
push
push
shr
shr
sub
push
push
pop
add
add
sub
ror
shl
xor
pop
rol
not
sub
dec
pop
push
push
ror
dec
push
xor
add
not
sub
dec
add
pop
sub
add
sub
shr
pop
push
shr
add
ror
shl
pop
call
push
push
sub
push
or
inc
add
dec
xor
inc
add
sub
rol
shr
not
pop
shr
pop
push
shr
inc
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
call
add
xchg
add
rcll
mov
outsl
add
add
mov
mov
add
cli
pop
xchg
in
xchg
div
add
imul
add
fiadds
nop
jae
mov
mov
push
mov
enter
fcompl
inc
hlt
push
push
push
lea
push
push
lea
push
push
call
iret
loope
jle
out
push
test
add
add
add
scas
decb
loopne
rolb
int
ret
addb
cld
push
mov
movsl
add
add
ret
add
add
push
add
push
add
mov
stos
rolb
sub
pop
lea
push
pop
lea
push
sub
pop
push
push
push
push
push
call
add
icebp
mov
mov
xchg
int
roll
pop
add
aam
add
fdiv
add
add
add
jbe
sahf
add
mov
add
pop
add
add
int
scas
push
push
fildl
aad
push
pop
lea
mov
in
hlt
lcall
add
lea
push
lea
push
push
push
push
push
push
call
add
add
out
add
pop
pushf
ret
mov
jecxz
jns
xlat
xchg
hlt
mov
shll
xchg
fwait
add
add
add
mov
add
add
mov
mov
lret
add
xlat
pusha
mov
xchg
add
mov
jecxz
add
push
push
push
not
pop
push
push
sub
xor
lea
add
pop
push
push
sub
inc
add
pop
push
push
not
inc
pop
pushl
push
lea
push
call
add
add
xchg
mov
add
pop
mov
jle
enter
pop
xchg
add
add
add
push
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
mov
addr16
xchg
movsb
pusha
add
fimuls
into
shr
add
mov
insb
fs
jno
add
mov
xchg
test
call
push
push
sub
rol
push
and
add
lea
ror
shl
sub
sub
pop
xor
pop
push
xor
ror
pop
pushl
call
push
push
push
push
call
add
pop
jecxz
cltd
add
into
cltd
ljmp
stos
mov
add
mov
fwait
cltd
add
faddl
out
add
jb
fildl
xchg
add
loopne
pop
rorb
xchg
xchg
pop
add
add
add
add
enter
add
add
lcall
shrb
lock
call
push
sub
pop
mov
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
add
ret
insb
lret
xchg
jl
test
push
mov
sti
pushf
test
add
add
jmp
xchg
xchg
xchg
sar
lret
shl
xchg
stos
nop
add
add
add
pop
add
add
xchg
mov
lahf
add
jne
jmp
push
lea
pop
call
push
push
lea
xor
add
lea
push
xor
add
not
rol
ror
xor
sub
add
shl
not
lea
pop
dec
xor
sub
pop
push
push
push
lea
push
lea
push
call
add
pop
repnz
mov
fisubs
add
pop
in
lods
rorb
jnp
scas
mov
jp
add
add
loop
add
add
lock
clc
xchg
out
add
push
add
fadds
add
imul
mov
roll
lcall
jne
call
push
push
push
lea
push
lea
push
lea
push
push
call
cmpsl
jnp
jecxz
add
add
add
add
add
add
add
fisubs
mov
mov
adc
and
add
push
test
enter
stos
bound
add
lods
lods
fstpl
xchg
pop
add
add
add
in
in
lcall
call
push
push
push
push
push
push
call
lahf
add
lret
cltd
jecxz
rolb
mov
push
mov
add
movl
add
std
out
cltd
fwait
pop
add
add
add
lcall
add
xlat
jecxz
add
add
lcall
add
add
push
shl
shr
pop
lea
push
push
shr
rol
push
and
add
rol
sub
not
pop
add
dec
pop
push
push
push
push
push
push
lea
push
push
push
call
add
outsl
ficoml
jns
in
popa
push
loope
sahf
mov
jae
add
xchg
add
add
popf
iret
add
add
insb
add
std
add
add
add
add
mov
int
lods
add
sar
out
add
divb
in
fcompl
jne
push
push
push
push
push
push
lea
push
lea
push
push
call
xchg
add
out
add
arpl
loop
add
je
lret
push
lahf
icebp
add
lret
mov
lcall
jno
fisubrs
popa
mov
jbe
cltd
add
in
in
add
add
out
in
fcompl
add
push
call
rorl
test
mov
fwait
add
add
pop
add
ljmp
xchg
add
lock
add
ret
lea
add
add
add
hlt
add
test
add
pop
xchg
popl
add
testb
lcall
push
push
push
call
add
xchg
orb
mov
add
add
add
xchg
add
add
add
scas
add
pop
add
shl
cltd
mov
add
xchg
xchg
add
rcr
add
gs
sahf
add
xchg
jno
jne
in
hlt
pop
call
push
push
add
push
and
add
inc
sub
xor
pop
not
shr
xor
pop
push
xor
xor
sub
pop
pushl
call
push
push
push
lea
push
call
pop
test
stos
add
add
mov
jp
add
pop
mov
push
add
stc
add
pushf
mov
add
lret
leave
push
pop
movsb
xchg
jb
popf
add
ret
add
shlb
in
lock
lcall
rclb
push
push
push
lea
push
push
lea
push
call
scas
roll
pushf
lock
push
push
add
addr16
add
fucom
mov
add
add
imul
jne
ret
mov
addb
add
orl
fmul
add
test
add
fs
mov
sub
pop
mov
push
push
call
add
add
cltd
mov
je
xchg
mov
loopne
outsl
arpl
cmpsl
mov
mov
push
pushf
add
mov
imul
jp
mov
pop
hlt
add
add
pushf
out
add
nop
add
roll
add
mov
add
and
add
add
test
aad
push
add
pop
fdivp
add
push
add
sub
pop
lea
push
push
shr
lea
push
or
not
add
sub
not
sub
pop
dec
pop
push
push
push
lea
push
push
push
push
push
call
loopne
cmc
add
add
pop
add
ja
add
cmpsb
add
add
add
add
xchg
insb
popf
jmp
add
pop
imul
push
imul
add
call
rolb
add
add
lcall
sahf
lds
outsl
sub
pop
pushl
push
lea
add
pop
call
push
push
lea
push
push
push
push
push
push
call
push
push
out
xchg
ficompl
aad
add
push
mov
incb
add
lea
xchg
shll
test
addr16
pop
add
pop
lea
push
ror
add
pop
push
push
push
push
call
shl
jbe
in
in
add
leave
jp
add
xlat
add
add
push
add
mov
add
pushf
pop
add
pushf
mov
jae
add
popf
add
pop
add
mov
cmpsl
fnstsw
loopne
fwait
push
jo
add
lcall
add
ror
lea
pop
push
pushl
push
push
lea
rol
sub
push
push
pop
add
rol
rol
sub
shl
pop
sub
shl
inc
not
pop
push
push
push
push
push
lea
push
push
call
jne
in
pushf
add
jno
add
sbbl
movsl
xchg
add
jnp
add
add
xchg
add
fmul
sti
push
add
popf
mov
sub
pop
push
push
push
push
push
push
call
in
mov
add
add
mov
pop
add
mov
data16
add
add
xchg
orl
add
add
add
lcall
shrb
and
in
push
sub
rol
push
xor
add
add
add
sub
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
gs
pop
jp
add
add
add
movsl
add
xchg
add
cltd
out
push
mov
aam
jl
add
popa
fildl
mov
add
in
jle
test
add
ja
subb
mov
xchg
shll
mov
cli
jae
add
leave
icebp
add
sub
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
push
call
fiaddl
add
add
push
jl
cmpsl
mov
add
jl
add
push
pop
cwtl
add
xchg
add
js
add
pop
fadds
lcall
sbbb
add
add
sub
pop
push
push
add
sub
dec
add
pop
call
push
push
shr
sub
push
or
inc
add
lea
xor
shr
sub
shl
shr
ror
pop
sub
pop
push
lea
push
lea
push
push
push
push
call
scas
push
add
jp
loope
frstor
add
negl
add
add
hlt
mov
aad
les
popf
lock
xlat
add
xchg
pusha
pushf
lret
add
mov
push
mov
ffreep
mov
mov
add
cltd
add
iret
icebp
lods
add
add
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
call
add
test
jecxz
pop
clc
add
add
incb
add
pop
rolb
fnstsw
jb
out
jo
lcall
in
loopne
lcall
pop
pop
add
push
push
push
push
call
add
repnz
in
pop
add
shlb
fdivr
shl
add
xchg
add
outsl
movsb
loope
pop
rol
fiaddl
insb
sub
pop
call
push
push
push
lea
push
lea
push
call
add
jmp
ljmp
notl
add
mov
add
jl
mov
int3
push
cli
push
loop
in
int
add
lcall
mov
add
push
shr
add
not
pop
pushl
push
lea
push
push
push
call
cmpb
add
outsl
add
add
repnz
xchg
testb
add
loop
add
ja
add
fisubl
mov
testb
add
loop
lcall
add
imulb
add
sahf
add
out
add
mov
lcall
mov
jmp
push
push
shr
push
or
not
add
ror
dec
sub
not
pop
shl
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
jmp
insb
add
add
xchg
add
out
add
add
iret
add
mov
pop
mov
loopne
mov
fcompl
jne
push
add
dec
ror
pop
call
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
fildll
add
add
add
mov
lds
aad
push
rcll
add
add
cmc
add
nop
lcall
add
sub
pop
push
push
push
push
push
push
call
lcall
jo
add
add
xlat
add
movl
fidivrs
mov
add
mov
push
mov
int3
sti
js
addb
add
call
loope
pop
xchg
hlt
add
lds
fadds
roll
sub
pop
call
push
push
xor
dec
shl
sub
push
or
inc
add
xor
add
rol
sub
add
lea
pop
add
dec
pop
push
add
pop
pushl
push
rol
pop
call
push
push
push
push
push
push
push
push
call
cltd
cltd
mov
arpl
add
mov
test
add
mov
add
aam
in
loopne
lcall
call
push
push
push
lea
push
push
push
lea
push
call
add
add
lahf
add
data16
int
js
add
add
fisubrs
add
lea
xor
leave
cmpsb
test
test
bound
add
pop
std
xchg
add
pop
sub
pop
leave
push
push
push
lea
push
push
push
push
lea
push
call
pop
mov
add
add
enter
add
in
jne
add
fs
loop
mov
mov
roll
enter
add
into
mov
addb
les
add
mov
int3
incb
in
rolb
add
jo
sahf
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
call
add
add
stos
in
pusha
sahf
add
out
mull
popa
roll
jmp
enter
pop
pop
pop
push
shl
pop
pop
pop
push
lea
push
push
call
xchg
push
pushf
lcall
jae
add
gs
hlt
nop
fadds
add
jno
js
loope
out
mov
mov
stos
xchg
add
add
clc
mov
add
ljmp
sub
pop
leave
push
rol
add
xor
add
pop
add
ret
push
push
lea
push
call
xchg
jne
pop
mov
add
mov
add
stc
addb
enter
into
cli
loope
xchg
call
hlt
cmc
push
xchg
lret
mov
add
add
je
add
add
mov
push
add
mov
xchg
arpl
faddl
add
add
sub
pop
leave
push
inc
add
pop
ret
push
lea
push
push
push
push
push
push
push
lea
push
push
call
xchg
loope
out
jp
data16
jo
mov
add
addb
add
mov
scas
push
js
out
push
int3
add
data16
stos
pop
movb
add
add
scas
add
pop
bound
mov
xor
add
add
push
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
imul
add
add
add
movsl
in
stos
add
add
popa
int
imul
lcall
in
push
lea
push
push
push
push
push
call
add
add
mov
add
scas
jb
lock
out
mov
add
add
stos
add
int3
add
mov
mov
add
push
addb
cwtl
rcrl
mov
ret
add
int
add
call
add
popl
cli
add
lcall
jge
add
test
add
push
push
push
push
push
lea
push
lea
push
push
call
add
std
lods
add
cwtl
xchg
mov
add
shll
nop
add
in
int3
movsl
jp
jp
add
test
addb
loope
addr16
mov
popl
test
xchg
jo
in
loopne
lcall
inc
and
jmp
push
inc
sub
sub
pop
mov
and
push
push
push
lea
push
lea
push
push
lea
push
push
call
js
cwtl
add
pop
xchg
xchg
in
in
popa
add
push
cli
jmp
ret
into
add
add
js
add
cld
add
pop
add
mov
call
add
pop
in
push
sarl
jne
add
add
ror
jb
outsl
mov
mov
lcall
leave
push
push
push
push
push
push
push
call
add
push
outsl
aad
enter
addb
pop
add
icebp
movsb
cmpsl
in
cmpsl
add
stc
sarl
add
lods
add
int
sub
pop
xor
push
lea
push
push
push
push
call
mov
lcall
aam
ja
add
out
mov
in
add
add
lcall
in
lcall
rolb
dec
call
push
push
push
lea
push
push
call
decb
ja
iret
push
add
pop
int
int
mov
add
filds
add
push
movsb
insb
int3
add
xchg
stos
cmpb
faddp
add
int
popl
repnz
js
fwait
lock
mov
ja
cli
add
ja
jae
add
aad
pop
jmp
mov
imul
lea
pop
sub
jmp
push
sub
shr
pop
sub
push
dec
sub
shr
pop
pushl
pop
push
pop
sub
push
push
push
push
push
lea
push
call
jmp
add
mov
xchg
add
leave
add
add
add
add
mov
in
call
cmp
jne
push
lea
shr
sub
pop
mov
push
not
not
dec
pop
lea
push
shr
add
pop
sub
push
push
push
push
push
push
push
lea
push
lea
push
call
js
leave
loope
jmp
xlat
fadds
push
jp
add
add
data16
data16
loop
repnz
mov
pop
cltd
add
call
add
mul
pop
fbld
mov
add
icebp
cmpb
pop
stos
mov
add
out
add
mov
imul
push
push
lea
push
push
call
fwait
jle
push
xchg
mov
cwtl
roll
lea
popa
repnz
add
add
add
movsl
jnp
mov
jnp
jmp
stos
add
mov
add
stos
add
mov
mov
bound
pop
xlat
in
loop
push
sub
pop
shr
add
push
push
lea
push
push
call
fdivrl
mov
push
jecxz
je
add
int
add
faddl
add
xchg
xchg
enterw
js
add
sahf
testb
lds
icebp
lds
add
add
loope
sub
pop
sub
pushl
push
rol
shl
pop
pop
push
ror
pop
shr
and
push
push
lea
push
call
add
add
add
mov
addb
push
add
add
in
imul
ret
add
imul
movl
add
in
into
add
call
jnp
add
add
popf
mov
fildl
add
add
hlt
lcall
jmp
push
add
inc
shl
shl
pop
cmp
jne
push
push
push
push
push
push
push
call
push
add
shrb
ja
xchg
mov
into
ror
xchg
xchg
add
push
add
mov
jp
push
fidivl
add
insb
sub
pop
leave
ret
push
sub
pop
push
mov
push
push
push
call
loopne
push
jle
roll
xorl
add
mov
mov
pushf
add
add
push
iret
add
add
push
add
lcall
cld
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
jge
mov
add
pop
fldl
mov
add
shr
shlb
pop
fsubl
loop
popl
jbe
fadd
out
sahf
in
mov
jo
cli
xchg
add
add
lock
ret
add
add
push
mov
jle
add
push
add
pop
arpl
pop
push
push
push
push
push
call
rolb
pop
data16
fiadds
jb
add
add
enter
add
add
add
hlt
out
in
mov
jne
add
mov
in
hlt
lcall
push
push
push
push
call
add
add
add
mov
add
add
ret
add
in
mov
mov
mov
add
add
lods
add
pusha
add
ja
add
adcl
add
add
add
xchg
gs
lds
fadds
add
in
add
add
sub
pop
push
push
shl
sub
add
add
pop
push
push
xor
pop
mov
push
push
call
std
add
stc
rolb
add
mov
add
add
cli
jecxz
add
add
add
lcall
lahf
fildl
push
cmp
push
push
lea
push
lea
push
push
call
jb
add
xchg
cmpsl
popf
loop
add
mov
add
addb
mov
add
jge
xchg
jle
add
mov
add
cld
add
jno
mov
in
add
movl
add
call
sub
mov
push
push
push
push
call
mov
add
js
fsubrs
jge
add
rorb
add
xchg
add
fld
add
std
mov
add
add
xchg
mov
pop
xlat
add
nop
add
pop
lock
xchg
pop
jle
in
lock
lcall
ljmp
push
lea
push
push
push
call
add
add
add
add
int
add
push
int3
std
add
add
push
add
add
lock
stos
int3
add
add
in
call
add
push
push
push
push
push
push
call
add
push
sti
mov
add
add
add
aad
js
add
in
imul
mov
rolb
mov
enter
xchg
shlb
divl
jecxz
bound
out
mov
add
add
add
std
hlt
add
add
add
jl
pop
rolb
mov
jns
in
call
add
add
pop
or
pop
xchg
inc
push
lea
push
lea
push
push
push
call
add
rolb
js
add
pop
popf
add
insb
loop
add
add
xchg
mov
add
mov
cmpsl
add
add
pop
pusha
add
mov
in
out
xchg
jae
sub
pop
mov
add
push
rol
add
not
pop
xor
push
xor
add
add
pop
mov
and
push
push
push
push
push
push
push
call
add
popf
pop
add
add
sahf
mov
mov
xchg
out
cmp
add
lahf
add
pop
shl
add
mov
add
idivl
add
add
lcall
rolb
rol
push
inc
pop
xor
push
push
lea
push
call
push
add
mov
in
add
in
imul
mov
add
idivb
roll
add
repnz
add
clc
add
add
add
add
add
popf
popf
add
add
mov
cwtl
add
iret
xchg
add
add
in
add
xchg
add
jne
add
fnstenv
add
lcall
push
lea
push
call
jbe
xchg
jbe
mov
add
xchg
jno
lret
test
xchg
add
int
fisttps
icebp
loop
outsl
out
add
add
scas
mov
clc
add
add
gs
out
int
roll
add
push
lret
out
testl
lods
push
add
mov
in
clc
lcall
cmp
jne
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
js
loop
xchg
add
cmc
add
add
add
add
mov
add
add
push
xchg
push
add
add
mov
cmc
movsb
into
loop
xchg
add
addb
lahf
outsl
add
mov
mov
imul
in
push
jbe
add
xchg
sub
pop
add
push
push
call
mov
add
mov
mov
push
aam
add
mov
rcr
add
test
cwtl
mov
add
xchg
lret
mov
mov
add
fsub
loope
add
hlt
js
add
std
jo
in
clc
pop
cmp
je
push
push
push
push
lea
push
push
push
push
push
call
cmc
jnp
mov
ljmp
mov
movsb
ljmp
cmc
mov
loop
add
jp
mov
out
xchg
fiaddl
add
add
imul
add
aam
add
add
icebp
push
fdiv
xchg
add
ret
adc
jnp
add
test
std
call
stc
call
add
add
jae
add
push
mov
add
add
jo
xchg
mov
add
nop
add
add
add
aam
cmpsb
lods
jecxz
add
add
lds
sub
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
call
add
jge
add
mov
add
lods
add
nop
add
movsb
pusha
add
add
incb
xchg
adc
lods
push
imul
arpl
add
mov
add
icebp
lcall
lcall
pop
push
add
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
push
lods
iret
xchg
lret
in
pop
mov
notb
jle
sti
cmpsl
add
add
add
add
add
mov
pop
addb
lds
rcll
addb
add
in
mov
out
add
cmc
sub
pop
pop
pop
push
push
lea
push
push
push
push
call
outsl
rolb
add
jecxz
add
xchg
movsl
jmp
add
pop
push
out
scas
add
add
hlt
push
mov
xorl
add
push
push
lea
push
push
push
call
add
pop
fadds
add
leave
test
rolb
scas
cmc
shr
pop
add
mov
repnz
xchg
add
add
out
je
add
add
ficoms
add
pop
add
push
sub
pop
ret
push
push
push
push
lea
push
push
push
push
call
add
test
movsl
test
repnz
mov
add
mov
add
fiadds
add
mov
insb
add
cld
add
add
out
add
mov
add
add
add
xchg
lcall
mov
lret
add
add
lahf
add
mov
loopne
lcall
push
adc
mov
push
push
lea
push
push
push
push
push
call
scas
push
int3
scas
jbe
add
jmp
movsb
mov
les
std
push
stc
xchg
icebp
pushf
out
std
lcall
mov
imul
add
sub
pop
add
push
push
call
add
lea
iret
add
add
jge
clc
filds
addb
add
mov
xchg
add
pop
xchg
add
add
in
clc
pop
push
push
push
lea
push
push
push
push
call
add
cmc
add
jo
out
scas
pop
cwtl
loop
add
leave
add
stos
pop
fwait
add
int
xchg
mov
jl
out
jnp
add
add
mov
mov
pop
cli
neg
add
movl
data16
add
pop
jge
in
in
pop
add
mov
push
not
add
add
pop
testw
push
xor
add
sub
pop
pop
push
xor
rol
not
pop
pop
push
not
rol
add
pop
mov
push
inc
pop
push
push
sub
pop
call
push
shl
add
ror
pop
xor
push
lea
rol
rol
pop
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
jp
lock
mov
pop
ljmp
push
movsl
stc
fstpt
mov
add
jp
add
xchg
add
movsb
add
push
mov
rcll
enter
in
fdivr
lcall
pop
push
not
pop
pop
push
push
push
push
push
push
push
call
xchg
add
insb
mov
add
les
shlb
pop
add
loopw
xchg
add
lret
add
add
test
add
lock
add
add
xchg
in
in
lcall
push
push
push
call
bound
in
add
int3
add
mov
lret
js
add
and
add
cwtl
add
add
mov
shll
add
push
pop
movb
lcall
ret
push
push
lea
push
push
push
push
push
push
call
icebp
push
mov
add
sarb
add
mov
mov
outsl
add
fiadds
imul
add
loope
mov
add
add
add
add
popf
les
add
mov
pop
add
imul
add
pop
add
scas
add
insb
clc
imul
jbe
jns
pop
sub
pop
push
push
add
ror
pop
mov
push
push
push
push
lea
push
lea
push
push
call
add
ja
jmp
aam
add
ja
bound
add
add
add
push
jecxz
add
mov
add
add
add
add
add
jnp
add
in
add
add
nop
arpl
add
add
movsb
add
mov
add
hlt
push
push
call
add
notl
push
add
push
xchg
add
loop
jle
add
ljmp
jmp
mov
add
iret
add
push
dec
sub
add
pop
push
push
push
lea
push
push
push
lea
push
lea
push
call
roll
imul
add
jnp
add
add
jp
add
add
addb
add
rorb
add
add
push
jns
add
add
iret
add
add
add
clc
gs
gs
in
call
or
push
push
push
push
call
stos
out
add
add
in
pop
cwtl
jno
fs
pop
adc
push
mov
jnp
mov
add
pushf
ret
arpl
gs
xor
lods
icebp
pop
fsubrs
sahf
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
push
xchg
add
fadds
add
loopne
mov
les
stos
add
mov
add
call
rolb
data16
test
in
mov
add
cli
mov
lahf
aad
icebp
jmp
add
jge
cmpsl
lahf
pop
add
add
icebp
sub
pop
pop
push
shl
not
sub
ror
pop
lea
sub
push
shr
pop
mov
push
xor
not
pop
shr
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
mov
stos
mov
cwtl
mov
add
loop
add
push
call
add
add
mov
xorb
mov
add
in
add
leave
mov
in
fdivr
lcall
ficoml
cmpb
xchg
test
push
fldl
push
call
pop
add
addr16
gs
mov
add
ljmp
nop
add
addl
mov
pop
mov
bound
out
add
xlat
hlt
add
in
cmpsl
add
data16
mov
roll
je
icebp
add
add
fdivrp
add
mov
lods
add
in
lock
lcall
pop
js
push
lea
push
lea
push
push
push
lea
push
call
add
add
jp
in
mov
int3
out
jbe
add
leave
add
add
nop
add
aad
mov
int3
xchg
add
sarb
lret
add
out
add
ja
add
lea
stos
je
add
nop
add
sub
pop
add
push
lea
push
call
add
lock
add
mov
popf
shr
mov
add
mov
add
faddl
add
cld
fbld
in
clc
lcall
jae
push
not
pop
popl
push
xor
xor
pop
mov
push
push
push
lea
push
call
add
pop
fmull
pop
add
jne
mov
add
cwtl
mov
stc
add
add
incb
int3
cli
add
data16
add
push
loop
add
push
ljmp
lcall
lea
jnp
add
sub
pop
add
xor
push
push
lea
push
call
imul
arpl
jge
iret
add
add
mov
add
movsl
add
cwtl
add
lcall
in
hlt
lcall
adc
push
lea
push
push
lea
push
push
push
call
fs
add
loop
jns
nop
out
sahf
add
roll
add
fwait
add
add
add
pop
add
lds
imul
add
adc
rcll
fcmovb
out
pop
xor
rol
push
not
pop
nop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
test
jae
add
adcb
rcrl
mov
je
leave
mov
leave
rolb
add
mov
in
add
pop
scas
shrb
lahf
pop
add
int3
add
jp
mov
jnp
mov
pop
add
add
in
add
add
add
lcall
push
rol
sub
pop
xor
nop
push
push
lea
push
push
call
icebp
fxch
fcoms
pop
fdivs
int3
add
clc
add
mov
pop
je
mov
add
repnz
mov
js
pusha
add
stos
lds
stos
jbe
sub
pop
nop
push
dec
xor
pop
inc
push
not
not
shl
pop
nop
push
shr
rol
shl
pop
nop
push
push
lea
push
push
push
lea
push
lea
push
push
call
pop
jns
int3
fadds
lock
stos
add
int3
fists
xchg
rcr
add
add
stc
add
add
mov
add
fldl
pop
cli
outsl
lods
add
xchg
sti
mov
add
cld
add
icebp
sub
pop
cmpb
jne
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
popf
jnp
lahf
add
mov
js
into
add
add
mov
add
jns
loopne
add
xchg
add
add
xchg
ljmp
cli
jnp
add
inc
pop
ss
push
push
push
push
lea
push
push
push
push
call
mov
add
insb
xchg
clc
fwait
pop
lcall
bound
gs
add
add
add
jl
add
add
loopne
in
loopne
nop
push
sub
xor
dec
dec
pop
nop
push
sub
sub
not
shl
pop
cmp
je
push
sub
pop
nop
nop
push
not
shl
lea
pop
inc
push
push
lea
push
push
call
mov
add
add
add
add
hlt
addl
lcall
add
add
outsl
add
cltd
add
mov
add
mov
add
scas
add
out
add
jb
cld
rolb
mov
lcall
push
rol
not
pop
nop
cmp
jb
push
push
call
fistpl
lea
mov
add
icebp
pop
mov
add
add
aam
pop
test
add
push
add
ljmp
mov
les
add
add
add
add
loop
add
filds
add
in
xchg
out
movsl
lds
add
mov
add
add
in
clc
lcall
rclb
push
lea
push
push
call
add
cld
roll
add
xchg
add
add
add
add
add
pushf
add
je
stc
add
add
add
add
in
add
add
lock
jmp
push
not
pop
mov
add
push
lea
push
push
push
push
push
push
push
push
lea
push
call
adcb
push
jp
add
addl
mov
mov
push
pop
mov
in
roll
iret
jl
mov
add
add
add
add
sarl
add
push
mov
add
add
mov
mov
jge
mov
bound
lcall
mov
jb
inc
sbb
sub
xor
ror
sub
pop
add
push
push
push
push
push
call
jo
add
add
add
push
leave
clc
fadds
stos
outsl
mov
pop
add
pop
add
push
add
enter
jne
or
fsincos
imul
lds
add
jmp
fxch
fsts
in
in
pop
mov
xor
push
push
push
push
push
push
lea
push
call
jp
lock
popa
sarb
xchg
add
add
add
add
and
mov
add
mov
add
repnz
orl
mov
cli
stc
add
test
add
scas
add
dec
nop
add
loope
push
inc
pop
xor
push
push
push
call
add
mov
mov
jb
push
add
sahf
add
add
mov
add
pop
cmc
flds
jnp
aam
add
jns
jbe
add
add
mov
add
repnz
add
outsl
add
add
sub
lret
mov
add
fildl
mov
lcall
loope
push
push
lea
push
push
lea
push
push
push
call
movb
mov
aad
rolb
add
fidivrl
add
test
out
xor
pop
jnp
jnp
fadds
mov
xchg
add
add
sub
pop
xor
shl
push
dec
shr
pop
xor
push
push
push
push
call
pusha
mov
jno
add
stc
add
mov
xchg
mov
add
fbstp
addl
mov
add
aam
add
out
add
lds
add
push
imul
add
in
lock
lcall
roll
hlt
push
sub
pop
pop
push
inc
shl
xor
pop
pop
pop
push
lea
push
lea
push
push
push
call
lret
cmc
cmpsb
add
hlt
add
add
sahf
add
mov
add
jl
aam
add
test
popa
pushf
addl
cld
add
nop
add
lock
add
add
xchg
add
mov
add
pop
int3
addb
pop
pop
push
push
push
call
jl
js
in
lods
add
mov
ficomps
sarl
aad
movsl
stc
in
out
jns
in
movl
cltd
lahf
add
addr16
gs
aad
loop
stos
add
jo
mov
fldl
mov
in
add
nop
add
std
add
scas
pop
imul
aad
in
hlt
pop
leave
push
push
push
push
call
mov
jnp
cmc
pushw
add
add
add
std
test
lods
add
xchg
add
jnp
cmpsb
add
add
add
cmpsl
mov
loope
add
rcrb
addl
add
add
pushf
movsb
pop
add
add
out
mov
mov
sub
pop
ret
push
sub
sub
pop
push
mov
push
push
push
lea
push
lea
push
call
ret
xchg
add
mov
pop
push
push
imulb
mov
xchg
mov
mov
xchg
addr16
fildl
lock
mov
loop
add
add
fstps
add
cld
pop
mov
add
test
add
in
lcall
push
push
ror
add
pop
push
push
push
sub
pop
mov
mov
push
not
add
pop
mov
test
je
push
push
push
push
push
push
push
push
push
push
call
jo
shll
add
add
add
add
xorb
add
add
mov
fnstenv
xchg
add
loopne
jmp
clc
add
mov
pop
orl
jno
push
lea
lea
pop
test
je
mov
push
lea
push
push
push
push
call
xchg
add
add
fldl
mov
movsb
pop
add
push
add
add
jle
scas
jb
add
add
add
add
add
mov
popl
pusha
add
jno
cltd
fiadds
incb
xlat
idivb
bound
out
mov
add
in
in
sub
pop
mov
push
inc
xor
sub
pop
mov
push
push
push
push
call
mov
add
add
add
push
mov
jno
xchg
add
add
popa
test
add
add
add
into
mull
add
add
fldenv
fwait
popl
add
add
in
les
leave
addb
mov
inc
cmp
je
push
ror
dec
lea
pop
test
je
push
add
pop
mov
inc
push
lea
push
call
jl
mov
loope
pop
xchg
add
clc
add
mov
add
add
add
leave
add
add
js
add
fstps
in
clc
pop
cmp
je
test
jne
push
shl
pop
xor
push
xor
pop
pop
pop
push
lea
push
call
insb
subl
popa
roll
xchg
add
xchg
lock
jge
mov
addr16
lock
add
mov
mov
cmpsb
add
bound
pop
jmp
add
jecxz
lea
std
outsl
push
gs
add
lcall
pop
push
sub
pop
leave
ret
push
dec
rol
xor
pop
mov
inc
push
add
pop
cmp
jne
push
push
lea
push
push
push
call
mov
stos
add
add
add
add
add
out
add
jl
mov
push
push
fsubrs
out
mov
mov
add
sub
pop
lea
mov
push
pop
test
je
mov
push
shl
shl
pop
add
push
ror
inc
shl
pop
cmp
jne
mov
push
not
pop
test
je
push
lea
add
pop
mov
add
push
push
call
repnz
add
add
popf
pop
std
mov
in
mov
iret
add
add
test
push
flds
lcall
loopne
test
call
push
push
push
push
push
push
lea
push
push
call
test
add
add
add
popa
in
ljmp
add
adcl
add
cltd
popa
mov
aad
rclb
cmpsb
add
pushf
add
mov
insb
xlat
add
lock
cld
pushl
rclb
cmp
lea
push
push
push
push
push
push
lea
push
push
call
cltd
add
push
jno
mov
add
sub
add
add
jle
out
les
std
add
add
mov
jns
pop
xchg
push
in
addl
sub
pop
pop
pop
push
lea
push
push
push
push
call
call
mov
add
out
add
enter
add
add
mov
add
les
mov
mov
leave
add
add
enter
ror
add
iret
mov
add
mov
add
jbe
mul
add
lahf
repnz
add
mov
mov
lahf
loop
pop
out
aam
mov
sub
pop
pop
push
lea
push
push
call
subb
push
pop
push
pop
outsl
mov
enter
mov
sti
cli
loop
arpl
jns
mov
jae
add
add
add
cmpsb
add
std
add
test
mov
add
cwtl
fildl
mov
andb
add
sub
pop
pop
leave
push
shl
sub
pop
ret
push
push
lea
push
push
lea
push
push
call
pop
mov
stc
push
mul
shlb
add
jle
les
call
les
jle
push
lea
in
jl
pop
add
fwait
add
mov
in
fadds
add
lcall
leave
sub
pop
lea
push
push
push
push
push
push
call
mov
mov
data16
fbstp
enter
jb
add
leave
add
jo
mov
xchg
push
mov
in
call
fdiv
rcrl
push
xor
not
pop
pop
push
push
push
push
lea
push
push
push
call
lock
jbe
mov
add
add
push
add
faddl
jecxz
popa
mov
loop
add
icebp
mov
out
pop
bound
add
lret
fiaddl
add
mov
lcall
push
push
push
push
push
push
push
push
call
mov
outsl
ret
add
add
jl
add
push
add
add
add
push
xlat
jns
jnp
mov
or
roll
add
fisubrl
jne
mov
add
jl
mov
push
add
add
jle
bnd
bnd
push
pop
add
in
add
add
in
mov
add
sub
pop
leave
push
shr
inc
inc
pop
ret
push
push
lea
push
push
push
push
call
add
movb
add
nop
test
mov
testb
test
mov
cli
fiadds
xchg
loope
add
cmc
mov
mov
push
add
mov
lcall
push
sub
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
call
scas
roll
push
add
lock
add
fsubr
insb
jl
jno
fstpt
addb
add
ja
add
jp
stos
lods
mov
mov
loop
testl
in
in
lcall
push
push
push
lea
push
call
les
add
out
pop
add
cmpsb
jge
add
mov
stos
testb
into
add
add
lahf
push
mov
add
add
inc
addr16
add
mov
sbbb
push
add
imul
pop
add
mov
pop
add
arpl
lret
sub
pop
pop
push
inc
shr
sub
lea
pop
pop
leave
push
ror
pop
ret
xor
cmp
out
dec
cmp
xor
adc
adc
adc
xor
adc
push
cmp
pop
loop
adc
popa
cmp
xor
adc
mov
add
in
fildll
mov
outsl
hlt
mov
and
dec
jb
int3
hlt
or
int3
in
ss
xor
inc
xchg
push
nop
lret
push
test
enter
jle
sub
sub
sub
sbb
cs
xchg
cmpsl
mov
push
popa
aam
add
bound
push
orl
arpl
mov
push
mov
int3
mov
loop
fcompp
jne
nop
mov
mov
movsl
fsubrs
mov
xor
fs
push
jmp
inc
enter
nop
xchg
imull
push
out
int3
enter
inc
iret
in
ret
jne
xchg
jno
cmc
stc
test
dec
add
mov
push
dec
ret
popa
jne
std
inc
dec
fcmovnb
pusha
cld
lds
mov
adc
xor
lds
leave
movsb
or
jp
pop
int3
cmp
xor
pop
out
xchg
testl
xor
pop
stos
ja
jmp
fisttpll
insl
cmpsb
imul
inc
dec
imull
arpl
sub
repnz
xchg
dec
lea
dec
xchg
push
cwtl
cmp
and
pop
jb
lret
pushf
ds
or
ja
insb
and
aaa
mov
jg
fyl2xp1
dec
mov
adc
out
cmpsb
scas
adc
test
sub
mov
idivb
add
addr16
inc
mov
gs
popf
and
jp
das
and
aaa
sub
arpl
dec
hlt
fcompl
loopne
dec
ret
dec
xor
sarl
je
stc
jns
pop
adc
fstpt
scas
adc
or
out
mov
cmp
cli
outsb
arpl
mov
jmp
mov
push
sbb
aad
inc
cmp
rcrb
pop
push
mov
enter
scas
mov
fdivs
nop
mov
nop
lret
add
add
fcomp
inc
dec
xchg
mov
push
ss
leave
pop
loop
fcomps
mov
sti
aas
cmpb
lods
cmp
and
sub
stos
pop
dec
mov
mov
dec
xor
orb
andl
aaa
mov
inc
xorb
ljmp
sbbl
xor
jle
scas
cmpsb
add
lret
cwtl
sub
xchg
fildll
jp
fstpl
and
aad
dec
pop
and
jb
cmpsb
insl
outsl
lcall
xor
shll
or
out
sbb
adc
xor
scas
or
fcompl
ja
adc
mov
mov
inc
pusha
stc
jecxz
mov
das
adc
xchg
call
dec
das
lods
fs
ss
repz
or
jmp
cmp
and
pop
mov
in
lcall
scas
ss
jns
repnz
sbb
sbb
inc
inc
mov
lcall
popf
fs
pusha
or
loop
aam
push
jb
xchg
shrd
sub
push
test
test
jmp
sub
sub
xor
cmpsb
push
imul
inc
scas
inc
fsubrp
and
jp
fcomps
mov
pop
stos
rcll
dec
xlat
and
test
out
call
mov
jp
xor
dec
in
pushf
mov
test
mov
jmp
js
mov
inc
outsb
jge
xchg
fmulp
dec
cmp
mov
mov
jl
psubsw
ret
into
inc
test
fs
aas
cs
pop
stc
mov
sbb
jns
xor
test
aaa
mov
cmp
int3
stc
es
pop
or
in
mov
daa
rcrb
push
cli
and
xor
imull
call
in
loopne
stos
mov
lret
out
dec
test
andl
movsl
pop
xlat
lahf
jo
es
dec
es
test
xchg
adc
lret
dec
popa
fidivl
cli
push
ror
pop
xor
adc
ret
mov
xchg
cmp
sub
and
mov
push
cmp
push
call
push
push
xchg
test
adc
sub
mov
adc
push
cmp
dec
stos
jl
popf
jae
lahf
inc
mov
mov
pop
enter
imul
xchg
mov
jge
mov
dec
movups
cs
cld
add
mov
fisttpll
sti
inc
or
jae
movb
mov
data16
pop
xchg
in
add
imul
jmp
fs
bts
xchg
pop
mov
fidivrs
into
mov
inc
fs
sub
dec
cli
fstps
icebp
int3
aas
pop
aas
mov
xchg
fcomps
jmp
pop
or
push
and
int
and
call
les
fadd
and
xor
mov
aad
sub
in
mov
in
iret
inc
xchg
and
jbe
negl
push
jl
push
mov
popl
pop
jge
or
js
xlat
dec
mov
subb
sub
pop
pushf
xor
xor
test
add
cmp
into
fbld
fnstenv
mov
cmp
das
fldenv
xor
mov
sbb
or
push
sar
insb
xor
sti
mov
jb
dec
imul
sub
xor
pop
addr16
stos
mov
pop
dec
jl
shlb
xlat
sar
aam
push
add
mov
andps
cmp
push
pop
add
pop
mov
jmp
bound
cmp
movsl
pop
inc
jae
xchg
xor
push
stc
ljmp
insb
fs
pusha
ret
inc
pop
cmpsb
adc
inc
nop
pop
cmpsl
ret
mov
xchg
sub
lods
test
xor
jle
fdivl
xchg
lea
movsb
dec
fstps
int
ds
mov
push
add
ja
int
mov
mov
or
rorb
or
int
in
jg
arpl
bound
cs
and
or
sbb
lds
stos
pop
jo
sarl
push
mov
scas
jo
out
fwait
and
ds
test
pop
push
js
ret
movsl
lcall
xlat
mov
xchg
mov
fstpt
push
por
xor
daa
pop
push
jg
mov
lret
dec
xchg
ficoml
leave
cmp
dec
xchg
or
arpl
sub
aas
scas
or
iret
lds
test
push
push
sarb
jl,pn
insl
cmp
clc
gs
mov
adcl
out
xchg
daa
arpl
inc
stos
push
add
sbb
je
mov
dec
adc
test
add
lods
leave
push
mov
bound
and
mov
xor
push
cmp
pop
push
hlt
dec
push
cli
mov
or
fdivrl
inc
cmpl
adc
adc
movsb
addr16
sbb
cmp
cmp
test
mov
xor
sti
pop
lea
or
add
pushf
lods
insb
xchg
addr16
mov
sbb
ds
jecxz
cltd
in
lods
add
loope
sbb
test
int
cwtl
inc
inc
add
stos
jbe
movsb
daa
jge
pop
inc
cmp
xlat
sub
movsb
jle
jnp
es
pop
in
xchg
mov
add
mov
cmp
outsb
ret
scas
sub
loope
lret
jmp
sarl
xor
fs
aaa
xorb
jge
push
outsl
xchg
xchg
out
shlb
sub
and
inc
popf
push
and
aam
sbb
push
icebp
stc
mov
shrb
outsb
daa
push
in
out
adc
sbb
pop
pop
sbb
xchg
data16
shlb
xchg
sbb
jns
push
push
outsb
cli
and
inc
cmpsb
inc
daa
faddl
imul
stos
jg
pop
cld
cmp
mov
mov
sbb
movsb
adc
aad
pop
jo
jp
pop
in
cld
and
repnz
add
out
xor
mov
push
mov
scas
pop
fstpt
test
push
add
add
in
imul
xchg
jne
insb
js
or
outsb
cwtl
into
mov
ret
enter
push
xchg
pop
jne
lret
call
sub
xchg
mov
pop
mov
aas
adc
fsts
insl
stc
sub
inc
cmp
popa
cmp
jne
std
sahf
adc
call
push
repnz
dec
idivb
add
loop
testl
xlat
aad
cmp
aas
popf
xchg
sbb
cmpsl
sub
and
jle
xlat
lods
sub
lock
movsb
arpl
out
lods
jbe
inc
outsb
inc
sbb
mov
ss
fs
mov
addb
xor
les
iret
mov
and
adc
outsb
into
or
aaa
rolb
test
pop
outsl
rcrb
dec
popa
push
imul
adc
mov
sahf
add
xchg
aad
jmp
fstp
jo
and
add
clc
std
and
out
sub
mov
sub
xor
mov
fdivrs
xor
mov
sub
movsb
dec
bound
mov
mov
fistpll
push
xorl
pop
hlt
je
aas
xor
dec
out
cld
ret
xchg
loopne
dec
stc
in
dec
outsb
fildll
lods
inc
sbb
stc
insb
adc
xor
inc
push
pop
pop
or
inc
push
fcoml
subl
sub
mov
adc
lea
jbe
jns
mov
outsb
in
add
repz
push
aaa
loope
adc
push
sub
sub
and
push
and
sbb
push
jg
andl
push
mov
dec
push
lods
imul
fldcw
aas
sbb
xchg
xor
push
push
cmpsl
adc
insb
movl
and
pop
mov
addr16
fwait
outsb
test
sti
fildll
adcb
cmp
pop
cwtl
pop
aas
add
mov
popa
jnp
out
call
ret
xor
mov
dec
icebp
in
mov
cmpsb
adc
pusha
push
xor
out
xlat
pop
out
inc
cmp
inc
inc
sbb
inc
pop
adc
jnp
out
stos
mov
xor
insl
mov
mov
mov
fcmovnbe
pop
inc
push
cmp
mov
and
add
sbb
mov
sub
sub
xchg
xchg
pop
stc
mov
cmp
pusha
repz
cmp
in
insl
incb
testb
pop
cmc
iret
lods
jl
into
mov
xor
shl
xchg
rcll
or
and
jb
xorb
mov
jge
adc
add
sbb
sub
sbb
hlt
out
mov
pop
add
cmp
xor
mov
push
mov
mov
scas
outsb
and
push
inc
sbb
lret
push
sbb
mov
mov
sbbl
ljmp
scas
sbb
loopne
ficompl
insl
jnp
sbb
xor
sti
mov
fmulp
xchg
xchg
jnp
dec
or
into
lods
pop
mov
loopne
aam
scas
add
pusha
xchg
or
xor
or
fmuls
mov
xor
mov
pusha
adc
mul
das
sahf
jo
or
es
cld
push
out
inc
xorl
cli
push
iret
cmp
pop
loopne
in
jae
fcompl
outsl
lret
aad
push
push
mov
mov
fstl
sbb
jnp
loopne
and
push
sbb
xor
cwtl
dec
fsubrl
lret
pop
mov
add
sub
lock
out
dec
je
xor
mov
jecxz
gs
dec
dec
sbb
and
dec
inc
das
sahf
lods
and
jle
push
pop
jns
popa
mov
mov
and
subl
fadd
push
inc
arpl
pop
sub
rcl
and
dec
jae
shl
mov
mov
repnz
cmp
gs
into
pushf
push
movsl
daa
sbb
pop
nop
mov
and
cltd
and
pop
ljmp
mov
jg
push
mov
sub
adc
jbe
aad
xchg
sub
aad
push
bound
mov
test
lcall
hlt
insb
cs
lret
add
outsb
filds
test
cwtl
jecxz
in
mov
out
xchg
xchg
sbb
mov
out
scas
push
sub
push
xchg
cs
xor
ss
out
mov
into
lock
frstor
test
or
neg
cmp
inc
jo
push
push
cmp
pop
sbb
leave
and
jbe
fwait
pop
lcall
xor
ret
shrb
movb
push
xchg
push
loopne
inc
jns
rclb
subl
xchg
push
imul
xor
xchg
cmp
mov
inc
out
es
loop
movsb
push
xchg
mov
ljmp
sub
jns
xor
icebp
and
sbb
jmp
rolb
outsl
add
xor
fwait
or
mov
inc
or
ja
mov
pop
bound
push
shll
nop
out
lock
add
sbbl
cld
pop
les
fnsave
lcall
pop
out
sub
adc
test
mov
out
mov
int
jp
fsts
mov
out
sbb
sub
insl
mov
and
sbb
inc
xchg
jmp
cmpl
and
cltd
cmp
inc
sysenter
idivb
sub
mov
jae
inc
test
out
xchg
adc
loop
fdivr
cmp
shrl
adcb
push
dec
ficoms
jge
xor
aad
jg
adc
ds
dec
mov
dec
dec
push
pop
loope
and
sti
inc
pop
xchg
and
aaa
mov
mov
mov
add
fcom
adc
sub
out
mov
rol
jnp
in
daa
xor
cld
xchg
mov
push
sbb
jbe
xchg
pop
mov
jmp
js
jmp
pop
cmp
inc
mov
xchg
adc
xlat
or
lret
shll
fmulp
jge
movsl
scas
das
cmpsb
sub
jl
adc
cmp
cli
pop
andb
dec
mov
aaa
fsubr
adcb
pusha
xor
adc
insb
xlat
fidivrl
aas
push
leave
int3
pop
sbb
or
cmpsb
fwait
icebp
out
insl
ficompl
imul
xchg
jg
int
lcall
jb
aaa
imul
and
xchg
dec
xchg
leave
pop
xchg
mov
psrad
pop
in
inc
aam
outsl
xor
xchg
sub
dec
out
cmp
adc
js
sbb
call
push
mov
mov
cwtl
fisttpll
fists
or
ret
jmp
popf
push
das
cwtl
lock
sub
push
or
testb
sub
adc
hlt
in
mov
sbb
mov
mov
mov
push
pmullw
lret
and
or
inc
and
sarl
subl
mov
cmp
lods
sub
cmp
decb
sbb
pop
push
xor
test
push
pop
es
jl
add
ds
inc
int
imul
sub
pop
mov
cmpsl
jb
sub
jmp
jmp
pop
cmp
pop
scas
test
adc
sbb
in
sbb
sub
xchg
mov
addr16
jmp
arpl
push
mov
mov
cld
jae
rorl
push
mov
push
dec
mov
fsubs
mov
cmp
shlb
ds
into
dec
sub
push
data16
jae
shl
adc
push
dec
icebp
popf
sti
pop
imul
ljmp
or
mov
subl
sahf
pop
xchg
lcall
ficoms
jbe
repnz
jnp
fwait
rorl
sbbl
pop
xchg
sbb
fxch
add
jl
and
std
mov
clc
jne
fwait
jg
jae
jne
test
data16
sbb
or
jge
push
fldenv
cmp
out
xor
popf
pop
jge
fnstenv
mov
cwtl
mov
sbb
jo
cmp
cli
imull
xchg
mov
mov
cltd
adc
insb
or
sbb
mov
cmp
out
pushf
push
icebp
sub
adcb
cmp
cwtl
aas
sub
inc
adc
test
pusha
push
cmpsl
push
pop
jmp
pop
xchg
ret
ljmp
fwait
adc
mov
cmp
pop
movsb
mov
jo
imul
or
lock
jle
orb
push
outsl
sbb
repnz
mov
jecxz
cmpsb
or
mov
sub
loopne
jl
push
cmp
inc
xchg
addl
pop
andb
xorl
adc
xor
sub
cld
push
jge
js
adc
cmp
in
or
mov
mov
les
sbb
xchg
sahf
movsl
cs
jmp
xchg
or
xor
dec
nop
sbb
je
call
jnp
cmpsl
shrb
movsb
cmpsl
sub
cwtl
cmpsl
rorl
stos
ljmp
popf
clc
mov
mov
sbbl
or
repnz
cwtl
packsswb
jbe
mov
adc
push
cmc
shrl
dec
jp
insb
xor
ja
data16
sub
loope
push
sar
xor
pop
loopne
lock
sub
lds
lea
mov
ds
jg
xchg
push
xchg
stc
xlat
sbb
js
and
and
push
mov
sub
ljmp
hlt
add
ret
inc
and
or
push
push
mov
inc
stos
and
pop
sub
sti
test
pop
mov
push
mov
and
sahf
test
pop
cmpl
aas
adc
dec
cli
rclb
add
loope
in
and
push
xchg
pop
sti
icebp
adc
xchg
push
push
lea
cmpsb
mov
jmp
ss
pop
jecxz
outsl
adc
imul
xchg
pop
jbe,pn
es
pop
jmp
dec
test
fwait
das
jl
jecxz
or
stos
add
fisttpl
xchg
mov
add
call
jge
call
icebp
and
into
mov
das
out
fucom
sbb
jb
push
sbb
pop
inc
mov
jb
add
pop
dec
outsb
pushf
mov
pop
es
xchg
movsl
jmp
pop
aad
cmc
lods
and
lds
stos
fdivrl
aas
pusha
mov
popf
xchg
rclb
sbb
out
or
mov
rep
pushf
mov
mov
popf
jno
aas
aad
fmulp
out
xor
and
lret
inc
jnp
mov
outsl
call
out
lret
cmc
enter
mov
loope
jns
push
push
mov
int3
cmc
clc
imul
ljmp
fldcw
sub
mov
test
mov
pusha
add
add
movsb
scas
or
cmpsl
pop
inc
ficomps
xor
and
ret
test
mov
imul
mov
stc
pop
or
daa
icebp
pop
int3
push
xchg
pop
dec
mov
lret
js
cmp
inc
mov
xchg
icebp
mov
je
cmp
negb
andb
fwait
out
fists
dec
lahf
mov
stos
je
fstpt
jg
dec
xchg
call
cmp
and
inc
xor
xor
cmp
jnp
xlat
lods
insb
cmp
in
call
aam
cld
sub
dec
out
xor
inc
dec
jns
pop
xor
imul
add
jg
push
xchg
sbb
push
adc
and
xchg
inc
clc
mov
js
jne
and
in
cmpsl
ljmp
cli
sbb
mov
lock
dec
jecxz
xor
testb
adc
mov
mov
mov
inc
xchg
sub
sti
mov
add
je
mov
test
lea
rcrb
dec
add
movhps
movsl
pop
dec
sub
dec
std
subb
lret
cmpsb
jge
es
jb
scas
xchg
sbb
rcrl
sbb
mov
add
aaa
lods
test
adc
jbe
fbstp
or
sub
outsl
push
lea
mov
out
lcall
jne
test
mov
inc
mov
out
inc
add
sahf
into
cwtl
mov
dec
out
jle
sub
dec
daa
dec
out
push
lods
gs
add
popf
data16
xchg
clc
inc
add
jge
je
sbb
in
nop
inc
or
cmp
not
shll
rol
add
inc
xlat
lret
pop
popa
into
mov
or
std
sub
mov
pop
mov
ret
sub
push
mov
ret
sbb
add
cmp
fistpl
bnd
mov
out
or
dec
aam
inc
and
push
add
sahf
xlat
xchg
sub
bound
xchg
out
cltd
std
pushf
subb
repz
mov
jae
sbb
xchg
js
xlat
ss
xchg
mov
pushf
ja,pn
popf
lds
mov
int3
mov
mov
jmp
sub
ficoms
push
mov
xlat
movsl
cmp
push
lret
sbb
clts
xlat
adc
mov
mov
imul
fistps
and
push
loope
xchg
mov
imul
xor
gs
scas
add
mov
add
lret
and
lcall
lea
xchg
dec
repnz
push
mov
sti
inc
popf
pop
hlt
mov
pop
xor
insl
dec
pop
add
xchg
sti
das
scas
xor
ret
inc
test
lret
insb
ja
mov
cmpsl
push
adc
out
loopne
arpl
jmp
and
leavew
dec
add
mov
push
xor
add
ret
mov
and
adc
bound
sub
nop
fisubrl
outsb
loopne
jbe
leave
mov
pop
shl
inc
push
je
jg
xor
cmpsb
lods
das
lret
and
ror
pop
lea
cmpsl
clc
stos
dec
mov
push
push
clc
fstl
in
dec
pop
stos
lods
inc
mov
sbb
sahf
out
imul
js
add
xchg
push
pusha
clc
je
call
push
subb
sahf
mov
addl
cmc
out
je
fs
arpl
mov
cmp
or
inc
dec
inc
ds
nop
add
pop
xchg
push
push
mov
jnp
or
cs
lods
jne
lret
cmp
mov
push
mov
push
inc
sbb
push
nop
aaa
inc
inc
and
mov
je
mov
pop
inc
and
cltd
cltd
push
sub
in
gs
cmpb
inc
sbb
inc
imul
repz
std
das
cwtl
sbb
icebp
les
clc
shlb
negl
arpl
cli
xchg
pop
push
jl
popf
push
mov
arpl
push
test
arpl
sub
mov
add
cmpsb
dec
xchg
jle
jl
pop
fwait
jb
sub
cmp
int3
ljmp
std
xor
clc
cmp
fdivp
lea
lahf
and
cli
arpl
mov
jbe
lret
inc
or
les
fs
ficoml
and
movsb
push
fidivrs
xor
sbb
push
sbb
out
and
xchg
lock
jo
bndldx
ret
sub
cltd
push
lods
xchg
mov
scas
mov
int
pop
push
bound
idivb
insl
push
dec
mov
and
arpl
dec
jg
out
push
mov
mov
push
and
add
push
or
jns
dec
out
xchg
rcll
jne
cmpsb
jbe
iret
cwtl
inc
xor
pop
mov
fcmovb
jno
adcb
add
aam
or
jnp
andb
xor
in
aaa
pop
pushw
imul
test
test
xchg
xchg
and
fs
xor
lcall
lea
aaa
inc
dec
cmp
shr
xlat
addr16
ret
inc
rclb
add
aaa
mov
lcall
mov
gs
cld
iret
xor
bound
lea
movsl
xchg
pop
loope
push
lret
add
mov
in
cli
filds
jno
adc
jb
rcrb
les
jo
test
stos
push
xlat
jno
lahf
sbb
pop
xchg
pop
mov
sbb
xor
stc
das
repz
push
sti
andl
or
adc
and
xchg
push
adc
inc
mov
inc
std
popf
or
test
pop
push
mov
mov
repnz
lods
test
xchg
xchg
lret
clc
test
dec
scas
and
imul
ja
pop
adc
shrl
fsubrs
xor
push
movsl
negb
loop
push
lret
sbb
or
int
cpuid
inc
loopne
push
lock
cmc
fisttpll
mov
inc
jg
push
dec
insl
out
jle
ficomps
neg
repz
add
jbe
push
pop
or
push
fs
cld
sbb
jp
jp
pop
inc
mov
in
cli
hlt
fimuls
mov
or
leave
inc
cmp
out
inc
sbb
ljmp
inc
adc
sub
pop
int
jae
fisubrl
cmc
and
scas
dec
mov
daa
test
out
stc
sub
xchg
xor
movsl
scas
bnd
inc
mov
into
in
arpl
xchg
in
push
cmp
clc
xor
in
or
pop
inc
dec
xchg
mov
lret
pop
or
outsb
lret
cli
push
sahf
dec
out
xor
mov
stc
xchg
sub
sub
in
mov
ret
das
lds
das
adc
bnd
js
jb
dec
sahf
nop
push
dec
dec
cli
loopne
loope
add
sub
xor
inc
arpl
jbe
push
arpl
lahf
sbb
sbbl
jns
stos
arpl
pop
cmpl
test
mov
imul
push
jge
arpl
roll
sbb
icebp
das
xor
outsb
jb
rorb
pop
shlb
mov
fsubrs
outsl
aam
test
rorb
pop
mov
or
cld
pop
mov
ja
cmpsl
lret
pop
jnp
cmp
lea
ficoms
and
pop
out
es
imulb
sub
cmpb
psllw
outsb
add
int
data16
xchg
sbb
push
xchg
pop
sti
pop
mov
mov
fwait
xorl
rclb
jle
add
jl
jmp
imul
cmc
pop
sub
cmp
sub
lret
adc
jbe
push
rorl
sti
roll
out
inc
xor
lret
cmp
lods
dec
aaa
pop
push
outsl
out
js
in
or
push
push
sub
sbb
cmp
mov
jg
push
add
lock
pop
test
pop
lcall
xchg
sub
loop
xchg
sbb
xchg
das
cmp
push
clc
pop
adc
jo
loopne
pop
adc
pop
jmp
xchg
das
mov
pushf
loope
daa
xchg
xor
lret
int
mov
pop
mov
mov
aam
and
xor
mov
jg
sub
lock
roll
lea
test
xchg
out
lea
lret
nop
outsl
popf
add
xchg
pop
lret
xor
mov
pop
mov
outsl
dec
xchg
mov
outsb
ret
dec
jmp
jge
adc
pop
popa
int3
cwtl
das
ds
sbb
jle
cmc
pop
imul
insb
cmp
sub
int3
pop
mov
dec
stos
ss
sub
dec
dec
xchg
mov
inc
ficoms
add
outsb
fimull
in
sub
ss
or
mov
insl
push
xchg
cld
pop
jp
call
mov
mov
mov
in
jnp
xorl
out
stos
stos
add
sub
jo
sub
arpl
std
les
int3
cli
xchg
xchg
cld
sahf
ja
rol
dec
rclb
sub
imul
inc
mov
sbb
push
popa
fcoms
ss
lods
test
subb
dec
lock
sub
pop
jmp
ljmp
xchg
aam
cmp
mov
les
aad
int3
mov
mov
adc
jl
xlat
adc
mov
sub
in
addb
bound
push
js
ret
push
mov
orl
jg
outsb
adc
mov
in
in
xchg
stc
arpl
in
int
cmp
mov
lods
enter
pop
aad
jns
es
in
mov
jae
inc
movsb
mov
or
cwtl
push
call
lret
mov
loope
dec
movsb
sti
ja
outsb
out
repnz
gs
mov
sti
or
das
sbb
mov
aam
cld
stos
add
decb
iret
mov
adc
mov
cmp
pop
xor
jmp
sbb
test
add
into
xorb
mov
push
and
mov
mov
inc
js
mov
or
fldenv
loopne
jl
or
pusha
adc
lahf
sub
outsl
into
mov
mov
lock
ds
rclb
pusha
loope
mov
scas
clc
ret
mov
dec
jle
pusha
je
clc
repnz
ja
loopne
pop
arpl
arpl
or
js
icebp
adc
and
stos
inc
movl
jl
or
std
sub
mov
dec
cli
pop
jo
lret
jo
mov
sub
jnp
add
mov
fistps
lods
dec
inc
jecxz
cmp
mov
jb
lds
fs
aam
jnp
pop
loop
add
lock
sahf
sarl
cmp
sbb
and
nop
xor
divl
xchg
fidivs
mov
push
cld
or
mov
stc
sub
dec
ss
movsl
inc
pop
jne
fbld
icebp
clc
xor
ret
xchg
callw
jae
inc
push
inc
int3
fadd
xor
cmc
sbb
test
jns
ret
ds
push
pop
cli
in
jmp
cmp
movsl
and
cli
ret
cmpsl
ljmp
and
mull
jmp
mov
gs
pop
lret
push
movsl
dec
in
arpl
in
clc
shl
in
nop
mov
mov
dec
inc
mov
pop
cmpsb
stos
xorl
in
add
cltd
or
sti
outsb
scas
push
add
add
push
les
lock
mov
dec
sbb
sbb
sbb
in
xchg
shll
icebp
fimull
mov
dec
push
push
push
packuswb
aad
dec
popf
clc
mov
or
into
cmp
fbld
fstp
cwtl
mov
leave
bound
add
mov
push
lahf
jns
movsb
dec
or
inc
cmpsb
bound
and
mov
xor
sbb
push
sbb
adc
jns
js
mov
movsl
pop
adc
sub
xchg
jns
jecxz
inc
dec
daa
and
rcl
push
xchg
cltd
adc
jo
push
sub
xchg
arpl
xchg
mov
rclb
xor
or
mov
daa
lods
ss
jo
jnp
inc
xchg
jb
and
lret
test
dec
popf
icebp
push
bound
cmp
pop
xor
pop
or
inc
call
push
mov
xchg
pushf
cmp
mov
adc
jbe
sbb
in
sub
enter
xchg
and
aaa
mov
push
repnz
adc
out
lods
pop
adc
ret
mov
inc
enter
jb
or
cmpsl
and
sub
mov
int3
cmc
xchg
insl
in
pop
inc
inc
dec
int3
aam
js
xchg
mov
add
dec
lahf
ja
je
stos
and
add
ret
stos
divl
cltd
adc
test
cmpsb
popa
into
xchg
call
xor
loopne
movsl
mov
mov
pop
sbb
fsubs
addl
xor
cmp
std
mov
dec
sub
push
mov
cmpsl
sbb
jnp
push
pop
sbb
sti
shll
js
std
lcall
adc
or
test
into
mov
pop
pop
xchg
mov
pop
rorb
cli
addr16
inc
cmp
movsl
cli
iret
jns
dec
sub
pop
mov
add
ss
das
mov
das
shr
js
sti
jp
or
popf
mov
leave
push
lds
mov
jne
in
insb
xchg
push
or
adc
or
add
adc
dec
add
mov
fstl
xchg
ret
ret
loope
cmp
jb
add
jo
push
mov
pop
aam
ret
mov
dec
aas
fsts
scas
jp
dec
lods
xor
fstpl
adc
jne
xor
mov
add
push
xor
cmpsl
adc
mov
roll
test
sbb
int
push
inc
test
and
aad
pop
loop
adc
out
jns
fwait
mov
lahf
lods
cmpsb
mov
push
and
int3
pop
aam
mov
sub
data16
lcall
add
mov
shl
lea
lock
xchg
or
jmp
mov
pop
imul
jb
fstl
lds
hlt
fwait
mov
out
dec
inc
jno
xchg
ret
push
repnz
pop
push
mulb
mov
xchg
bound
or
std
popa
aaa
enter
lret
inc
dec
mov
jb
dec
data16
inc
or
loop
ret
es
pop
cmp
fdivs
in
fidivs
mov
iret
mov
test
jl
add
js
cmp
stos
jg
sbb
xchg
or
stos
xchg
out
cmp
jns
jo
sub
xchg
js
icebp
xor
inc
into
sub
icebp
inc
int3
imull
aam
pop
inc
cmpsl
outsb
xor
jae
adc
gs
scas
mov
xchg
cmp
not
bound
xchg
shrl
and
in
gs
or
ds
push
sbb
add
in
cmpsl
aad
jmp
mov
cmp
jge
sbb
dec
adc
mov
sbb
fptan
loope
dec
test
cmp
dec
imul
sarl
movsl
jl
in
xor
adc
maskmovq
mull
push
ret
push
push
jo
cwtl
das
inc
mov
std
xor
cli
test
enter
fs
ficompl
sbb
mov
popf
cltd
pop
adc
js
orl
push
sbb
or
mov
clc
sbb
scas
or
popf
aam
push
lret
in
pushf
clc
in
lods
pop
arpl
data16
data16
clc
dec
out
add
mov
jp
sub
cmp
call
out
inc
daa
and
mov
sub
push
jb
ss
push
xchg
sub
pop
mov
dec
cld
add
jbe
xchg
add
jg
dec
lahf
lds
ss
orb
dec
add
movsb
enter
mov
mov
aas
cmc
out
jp
jmp
mov
jo
popa
mov
in
bnd
outsb
subb
or
in
jmp
stc
stos
inc
pusha
mov
mov
stos
push
and
jae
and
test
popa
pop
dec
and
push
mov
xor
xor
cmpl
fst
out
mov
mov
dec
pop
dec
pop
ljmp
pop
loopne
dec
std
mov
fidivrl
and
push
jmp
mov
in
push
sub
hlt
mov
dec
ss
sub
inc
push
mov
in
scas
or
jbe
xchg
ss
pop
cmpsb
and
jnp
shlb
xchg
xorb
ret
cmp
das
xchg
mov
xchg
call
cwtl
movsl
xchg
jne
mov
xor
cmp
pop
jp
add
sub
push
test
push
jne
pusha
inc
mov
jns
bound
xor
ds
test
mov
lcall
add
or
push
lret
push
lds
repz
push
or
arpl
mov
adcb
jns
iret
outsb
scas
xchg
adc
mov
addb
ljmp
pop
adc
push
fdivl
popf
leave
lods
hlt
test
inc
xor
fisttpl
adcb
clc
dec
push
and
jno
add
out
inc
dec
push
or
mov
add
into
fildll
push
fneni(8087
out
enter
lahf
fidivrs
jg
test
fwait
adc
imul
adc
xchg
sbb
addr16
pushf
movsl
jb
call
in
mov
popa
cmp
cmc
stc
jno
push
stc
out
pop
aas
inc
mov
jns
ret
mov
cmp
add
jnp
sub
jp
shlb
std
jle
push
rcrb
mov
sbbl
daa
fwait
pop
mov
stos
push
sbb
add
pop
and
fistps
pop
mov
popa
add
sbb
or
add
jmp
inc
dec
test
dec
sbb
mov
cwtl
pop
lahf
repnz
insb
pop
xor
sti
mov
test
das
ja
fbstp
rolb
arpl
rorb
ret
in
mov
in
sub
push
mov
cmp
pop
lea
inc
dec
push
shll
rol
jmp
and
mov
leave
lret
outsb
out
pop
popa
clc
imul
jnp
and
inc
loope
popa
pop
dec
xor
int
dec
sub
inc
mov
shrl
mov
rcrl
aam
push
adc
dec
aas
cmp
add
and
jmp
mov
push
and
xchg
or
lret
mov
outsb
sbb
and
mulb
sbb
fs
push
movsl
mov
jne
stos
mov
dec
mov
cltd
xchg
inc
out
pop
jecxz
pop
xor
imul
mov
scas
mov
stc
mov
mov
in
xor
add
push
inc
lock
xchg
movsb
push
popf
mov
cmp
std
push
lret
data16
xchg
cmp
icebp
fbstp
xor
mov
test
loop
rcl
shrl
movb
imul
into
fldl
test
mov
fidivs
sbb
scas
or
pop
add
lock
or
fcomps
aas
pushf
out
and
lock
scas
and
inc
in
mov
add
fisubrs
ffree
or
xor
in
push
popa
mov
jo
dec
jb
int
ljmp
and
or
mov
test
lahf
mov
sahf
and
es
jl
ret
jge
pop
pop
push
and
inc
outsb
test
aam
sub
adcl
xchg
je
pusha
scas
mov
push
inc
adc
loopne
ds
popa
iret
cmp
pusha
loop
test
and
in
scas
movsb
xor
or
cli
jbe
or
and
mov
adc
mov
xor
int3
outsl
add
xchg
arpl
xor
test
add
inc
jmp
add
jae
loop
pop
mov
cvtdq2ps
xlat
shl
adc
jmp
je
cld
pop
jno
sbb
ljmp
loop
or
ljmp
sbb
mov
neg
fildll
cmpsl
testb
and
add
nop
push
mov
in
jg
rcll
popf
jl
adc
push
icebp
push
aad
lods
or
shlb
inc
cmpsb
mov
dec
mov
sbb
mov
mov
and
imul
filds
sbb
repz
push
rcll
daa
sbb
popf
inc
ja
or
jmp
shlb
jne
imul
bound
jmp
popf
ss
xchg
cmp
sbb
shrb
mov
clc
push
mov
js
mov
call
in
aad
sub
xor
xlat
out
xchg
mov
shrl
inc
mov
int3
mov
into
ret
int
jg
push
sbb
adc
mov
mov
push
sub
aad
je
adc
sbb
stc
lcall
mov
sbb
and
jmp
or
test
les
dec
sbb
ud0
xchg
push
aaa
popa
into
xor
rcll
dec
sub
adc
test
sub
cmp
mov
pop
in
out
int
push
sahf
lods
ret
insb
mov
das
lret
clc
jns
test
jae
add
fstpt
mov
hlt
jecxz
mov
or
ljmp
xor
sahf
lcall
mov
sub
inc
mov
pusha
sub
inc
push
cs
and
jno
xchg
mov
popf
and
lea
lods
shlb
push
xchg
sti
jle
mov
mov
pop
stc
loopne
mov
lcall
xlat
test
and
cmp
out
lea
mov
hlt
mov
dec
dec
cmpsb
adc
mov
fs
or
ret
sbbl
pop
inc
test
fldlg2
sti
sbb
push
sbb
sub
mov
xchg
xchg
cmp
add
adc
mov
inc
mov
xchg
xchg
mov
sbb
adc
aas
in
cmc
ret
or
xor
cld
popf
inc
mov
add
cmp
stc
fisttpll
xchg
pop
pop
lret
stos
add
sub
xlat
popa
mov
add
fnstenv
aam
in
inc
jge
inc
push
push
xchg
xchg
rclb
and
pop
shrl
push
push
push
jne
mov
ss
add
es
loope
xlat
fdivs
aas
jecxz
mov
push
mov
add
jns
mov
add
aaa
aaa
inc
in
jns
push
push
or
imul
inc
loopne
pusha
push
pusha
and
test
dec
xor
ja
dec
jge
fcoml
arpl
jno
orb
mov
stos
shrl
sub
xor
popa
add
lods
rolb
adc
push
add
cmp
cmpsb
xor
dec
orb
lret
fidivl
repnz
daa
rcrb
dec
jo
ror
adc
adcl
xor
ja
loop
add
jecxz
call
adc
or
gs
aas
push
or
sbb
shrb
inc
mov
lods
lea
pop
outsl
mov
clc
and
je
fwait
jp
fwait
andl
lods
dec
aaa
cmp
xor
push
in
sub
leave
inc
dec
fistps
pop
test
jae
inc
mov
jl
jp
mov
dec
cmp
js
pop
push
outsl
in
xchg
ss
mov
pop
test
and
mov
fwait
dec
dec
mov
pushf
mov
mov
rcrl
sub
outsl
popf
lcall
xchg
addr16
cmp
out
inc
ds
xchg
inc
push
orl
jmp
pop
pminsw
bound
push
cli
sbb
dec
jge
mov
addr16
lds
stos
ret
pop
dec
lods
cmpsb
ret
mov
add
mov
cwtl
imul
xor
adc
dec
pop
pop
adc
repnz
jl
cs
imul
cli
movsb
mov
jmp
loop
mov
jmp
add
testb
jmp
jg
sar
cmp
push
sbb
imul
aam
mov
int
jb
add
je
cwtl
xchg
outsl
ds
push
add
test
pop
xor
das
and
lea
dec
adc
inc
mov
mov
jo
cmp
mov
pop
les
or
sub
cli
and
jmp
bound
fisttpl
jmp
xchg
rorl
int
daa
mov
mov
inc
xor
cmp
mov
add
xchg
pop
addb
popf
push
lcall
cmc
mov
push
shr
adc
stos
add
sub
pop
or
sbb
jmp
aam
add
sub
xchg
jno
in
lahf
dec
out
inc
sub
out
aaa
in
daa
mov
pop
in
subb
inc
xor
cltd
cltd
repnz
push
mov
jns
out
test
add
mov
cs
jecxz
jecxz
incb
fucomip
movb
test
mov
push
xchg
or
out
insl
sub
stos
cmp
cs
aas
sbb
adc
push
lcall
cmovo
adc
jbe
fcoms
push
mov
and
pop
dec
dec
mov
pop
cmp
sarb
jb
ret
or
dec
xchg
xchg
pop
es
gs
lods
cmp
or
test
leave
scas
pushf
jp
invd
repnz
and
dec
mov
and
jecxz
jmp
inc
mov
mov
les
fadds
cmp
xor
dec
outsb
add
cmp
pop
std
cmc
push
js
sti
inc
adc
pop
push
popf
cmpsb
push
sbb
scas
fndisi(8087
and
jbe
push
push
and
pusha
adc
dec
sbb
sbb
sbb
sbb
inc
push
in
clc
cltd
pop
fsubs
inc
or
mov
pop
hlt
mov
shrb
ficoml
lahf
cmc
call
sbb
push
dec
sbb
sarb
jecxz
nop
mov
mov
mov
push
movsb
dec
push
jo
sub
xor
int3
sbb
pop
sti
jns
xchg
mov
jne
sbb
jno
cli
outsl
ss
sbb
lcall
faddl
mov
repz
add
dec
sbb
push
mov
cmp
pop
sbb
into
jnp
popf
cmp
loope
add
lcall
mov
mov
ljmp
jne
xchg
adc
je
cli
sbb
push
pop
push
lcall
loope
mov
mov
or
ds
nop
das
int
mov
out
dec
cmpsl
insl
pop
add
fnstsw
and
pop
lcall
mov
adc
jno
or
jmp
xor
dec
mov
sbb
jne
and
and
push
repz
std
sti
lock
and
icebp
sub
filds
jmp
addr16
sub
mov
inc
jo
roll
inc
fwait
and
and
popf
fwait
adc
enter
pop
mov
pop
cwtl
enter
push
cmp
push
push
pop
mov
sbb
ficoms
cmp
mov
fcomps
repz
cmpl
arpl
cltd
adc
repz
push
aad
xchg
fwait
add
ret
jo
pusha
sbb
mov
je
add
mov
sbb
adc
mov
mov
pop
mov
mov
pushaw
nop
dec
jnp
xchg
lret
bound
xchg
in
je
jp
stc
in
adc
pop
clc
lret
fcom
scas
adc
imul
inc
push
notb
enter
sub
xchg
push
push
push
jbe
cli
data16
xchg
icebp
sbb
hlt
adc
mov
bound
out
sbb
pushf
jns
sub
lret
sub
add
ret
fcomps
jmp
sbb
push
arpl
mov
push
iret
xor
xchg
shll
and
ja
mov
rcrl
lds
sbb
cmp
mov
pop
pop
sahf
stc
outsb
rcl
aam
loopne
sub
dec
dec
xorl
outsl
or
xrelease
leave
in
int
clc
pop
pop
shll
into
dec
jecxz
dec
jnp
shll
lcall
jg
mov
fldenv
out
out
jbe
inc
or
dec
mov
push
and
push
dec
repz
mov
jmp
push
mov
mov
cmpsb
push
push
icebp
jns
adc
jb
shl
jg
mov
mov
mov
repnz
dec
push
ljmp
aas
pop
mov
push
xor
lock
iret
scas
pusha
fnstcw
mov
int
pusha
cs
in
out
nop
pusha
sbb
pop
xor
push
sbb
push
and
stos
movsb
jns
aad
js
sub
adc
hlt
mov
dec
lods
ficoms
lahf
mov
cmp
sbb
jb
lods
gs
icebp
and
test
call
push
cmpsb
cmp
popf
or
push
inc
fscale
push
adcl
dec
or
push
and
jo
xchg
aam
shr
adc
or
ljmp
xchg
lcall
cmp
daa
or
subl
inc
lret
adc
add
push
push
adcl
imul
cmpsb
std
rolb
xor
jp
das
test
stc
push
stc
xor
dec
test
sub
push
adcl
mov
sub
push
aam
rcll
fistpll
dec
jno
scas
or
mov
fwait
icebp
sbb
test
sub
xchg
xor
int3
cmp
rorl
push
sub
mov
lock
rcll
sarb
xor
mov
rcrb
inc
shlb
addr16
xchg
pop
inc
mov
mov
pusha
aas
cli
int3
das
add
mov
inc
pop
dec
cmp
jl
xlat
push
pusha
jle
cmp
pop
adcl
cmc
rcll
mov
and
xchg
int
mov
jge
jl
push
inc
test
stos
stos
jns
leave
xchg
add
popf
test
insl
ja
je
imul
mov
jno
lret
sub
fisttps
push
jecxz
cld
dec
sbb
je
adc
jne
add
mov
inc
jmp
or
loope
or
mov
ss
jae
ljmp
inc
sbb
mov
int
push
sti
dec
xchg
test
xor
int3
mov
dec
cli
out
and
jge
in
mov
popa
jns
mov
dec
mov
cmpsb
xchg
lea
jmp
add
enter
inc
lret
cwtl
sar
lcall
xor
and
push
push
movsb
pop
lods
jl
adc
in
and
xchg
inc
stc
inc
dec
scas
shl
jne
popf
lods
cmp
movsl
jg
call
in
in
fildl
test
testb
nop
sarl
leave
dec
jns
scas
test
ss
dec
sub
or
xchg
push
in
dec
inc
call
or
mov
rcrl
jmp
push
rcl
mov
pop
sbb
repz
jg
rol
push
popl
insl
jmp
pop
in
out
jecxz
or
pushf
inc
sti
xor
test
pop
stos
icebp
jae,pt
jle
xor
sti
cmc
loopne
fldt
mov
inc
pop
mov
xchg
push
dec
icebp
lods
orb
hlt
lret
xlat
mov
jno
sahf
xchg
cld
jecxz
and
add
fwait
nop
or
cmpsb
sarl
xchg
call
cmp
movsl
sbb
push
jp
pop
or
lret
jecxz
mov
adc
xor
inc
sub
xchg
adc
dec
push
daa
js
push
js
inc
rcl
insl
push
adc
pop
addr16
shll
pop
ffreep
inc
jb
outsb
inc
sbbl
movb
insl
sub
jmp
or
insb
pop
ss
mov
imul
cwtl
add
jle
shll
jl
sbb
mov
dec
js
push
push
sbb
in
mov
ficoml
mov
sbb
in
pusha
inc
icebp
mov
cmpsl
adc
adc
xchg
push
insl
out
out
mov
test
push
mov
jl
sbb
test
test
das
mov
jg
pusha
jp
xor
inc
out
cmp
movsb
xchg
fisubrl
shr
dec
or
push
into
stos
das
fisubs
ficompl
shl
loop
inc
dec
mov
loope
dec
mov
and
insl
stos
in
jb
inc
mov
pop
test
add
dec
out
push
sub
mov
inc
xor
push
movsb
faddp
mov
gs
sbb
lock
int3
pop
jo
and
jg
sbb
xor
xchg
int
push
dec
jno
pushf
lods
in
out
or
mov
les
pop
das
sbb
scas
pop
adc
lret
jne
xlat
pop
cmp
sbb
add
in
arpl
jl
lods
pusha
push
or
jb
dec
fidivrl
imul
sbb
or
bound
cmp
sbb
roll
insl
ds
cmc
mov
mov
subb
lea
inc
in
mov
inc
mov
sbb
sbb
int3
mov
pop
lea
js
addl
movsb
inc
jbe
mov
jne
fmuls
sbb
rolb
testl
out
sbb
mov
call
pop
pop
cltd
rorb
add
cli
jno
and
cltd
hlt
sarb
test
add
push
pop
pop
or
dec
fildl
fnsave
in
rcll
and
or
and
and
shlb
movsb
add
aam
add
add
jae
pop
mov
hlt
mov
xor
imul
out
pushf
jno
inc
sub
shlb
push
lcall
adc
pop
addr16
ret
lret
lock
xor
pop
cmc
out
fidivs
adc
mov
jecxz
out
pop
inc
outsb
xchg
cmpsl
stos
pop
pop
setle
fs
dec
loopne
insb
push
push
push
xor
imul
xor
cld
push
mov
pop
pop
aam
jmp
je
in
iret
test
paddusb
fs
icebp
jl
fs
xchg
pop
pop
mov
outsb
insb
sbb
stos
iret
aaa
cli
test
dec
or
cli
clc
roll
bound
fnstsw
stos
je
inc
mov
aaa
fistpll
fistpl
pop
cmpsb
bound
adc
imul
pop
jle
inc
mov
sahf
and
and
aas
add
mov
enter
sbb
lock
outsl
sahf
popf
int3
or
arpl
jmp
push
cmpsl
lds
adc
push
ja,pn
mov
inc
mov
mov
adc
xor
sub
lock
inc
in
mov
jge
add
cmpl
fcomp
jg
subb
lret
xor
mov
pop
cld
scas
test
aam
imul
pop
sarb
sbb
push
push
mov
adc
test
or
js
jge
sub
lods
outsl
xor
pop
dec
sbb
mov
mov
lods
in
hlt
jno
mov
outsl
in
stos
enter
add
out
adc
fs
int
cs
pusha
xlat
push
addl
sub
jnp
mov
fnstsw
inc
and
sub
lds
xor
sbb
shl
movl
cwtl
and
fdivrl
xor
and
and
sub
iret
inc
sub
sahf
add
jp
xor
std
and
jb
sub
popf
inc
test
jns
pop
mov
cmpsl
or
adc
lods
into
into
pop
mov
inc
adc
mov
and
cli
push
test
fistpl
pop
rorb
jmp
enter
adc
lods
dec
add
cld
popaw
daa
xor
jg
inc
sub
jae
mov
sti
dec
outsl
shlb
push
inc
scas
repz
notb
lea
test
in
jle
mov
jnp
rcll
test
popf
xchg
fs
add
adc
stos
imul
lahf
lea
out
pop
jne
fadd
and
addb
cmc
jno
sbb
in
mov
cmp
push
jo
rolb
mov
cmpl
mov
cmp
orb
xor
fstps
mov
push
adcb
xlat
pop
pop
mov
mov
jb
int
dec
xchg
sbb
mov
push
lock
and
das
loop
push
cmp
in
mov
fcomps
jge
pop
adc
arpl
aas
rclb
pop
dec
sbb
sbb
fwait
aas
repnz
pop
push
pop
cmp
cmpsl
int3
clc
in
andl
xor
mov
xlat
lock
mov
mov
sbb
out
adcl
jmp
or
shlb
pop
dec
inc
xchg
shll
lret
push
cmp
dec
adc
insb
dec
enter
in
lea
push
xor
mov
inc
push
decl
inc
popa
mov
stos
push
sti
push
mov
cld
dec
pop
fsubrp
jae
lahf
nop
sub
cmp
stos
imul
xchg
jmp
jge
mov
fwait
rcr
xchg
mov
call
stc
movsl
mov
jnp
add
cmp
gs
aad
or
or
lock
dec
sarb
shlb
lea
inc
es
adc
fcomps
cwtl
subl
jg
into
insl
insb
orl
pop
icebp
xchg
inc
inc
dec
mov
jns
jecxz
popa
and
mov
inc
adcl
push
test
cwtl
fstl
pop
xchg
in
out
push
sbb
sbb
sub
jo
popa
sbb
adc
sarb
cmp
dec
push
scas
cmp
xchg
ficoms
xchg
stos
stos
xor
loope
pop
add
cmp
or
stos
xor
add
or
out
push
int3
lods
mov
jp
add
js
mov
or
lret
pusha
mov
int
mov
aaa
les
xchg
xor
push
sbb
insb
xor
sbb
sub
mov
jb
jl
jp
out
imul
xor
movl
inc
ficompl
or
inc
insl
mov
push
sahf
mov
cltd
cmc
repz
and
lret
fldl
adc
or
repnz
jmp
inc
mov
jbe
add
ljmp
mov
push
testl
xchg
mov
cmp
cmpsb
push
inc
bound
pop
idivl
cmc
inc
sub
jae
jle
xor
adc
int
ljmp
lea
ja
cmpsb
mov
dec
out
mov
mov
pop
mov
add
in
aam
mov
lods
data16
push
cmpsb
insl
dec
outsl
cltd
xchg
sarl
cltd
jno
cmp
aaa
sbb
cmp
rorb
std
loopne
jg
dec
sub
pop
pop
js
rorl
das
sbb
jno
repnz
or
mov
xor
and
ja
push
in
xor
pop
shll
mov
lret
pop
push
xor
push
pop
ret
daa
mov
insb
lahf
stos
dec
push
push
nop
mov
lods
enter
sahf
ja
idivb
xchg
rcrb
test
xchg
test
jmp
test
lahf
pusha
mov
jg
dec
stos
negl
mov
stos
sub
or
dec
push
mulb
cltd
push
pop
jno
aam
jnp
enter
rclb
mov
out
jmp
jmp
ja
pop
jle
push
sub
aam
fs
jne
mov
fimull
repnz
gs
mov
lds
and
popf
jmp
add
xor
mov
mov
mov
loopne
es
fcompl
out
dec
movsl
xor
shll
mov
mov
mov
mov
outsl
mov
rolb
sar
ja
or
add
dec
loop
inc
mov
or
leave
stos
cmc
inc
dec
js
adc
rcrb
pop
out
mov
mov
mov
out
in
test
mov
lods
inc
fldl
inc
push
mov
movsb
pop
jecxz
call
jnp
lods
ret
sar
out
pop
inc
mov
outsl
cmp
push
mov
mov
cmpsl
adc
mov
addl
mov
mov
add
sbb
shlb
ret
movsl
sbb
cmp
inc
jecxz
pop
pop
cmpl
push
and
cmpsb
xchg
lret
movsl
test
jmp
cmp
scas
pmulhuw
int3
sahf
cmpsb
enter
jns
clc
adc
sub
cli
cmpsb
lret
xlat
sti
pushf
push
xchg
je
aaa
adc
aas
inc
clc
inc
jno
adc
sbb
cmc
popa
out
mov
push
cs
sbb
pop
outsb
fidivs
mov
loope
add
andl
adc
dec
jl
fiadds
rclb
aad
pop
add
cmp
dec
mov
cmp
adc
ficoms
inc
and
mov
nop
xorb
int3
mov
lods
push
addb
popf
or
sub
jle
dec
repnz
adc
add
mov
xchg
lods
xlat
mov
mov
lods
or
pop
push
es
add
xchg
pop
stc
ret
outsl
xchg
jbe
mov
pop
mov
sar
stos
and
push
jnp
loopne
ja
mov
cmpsl
pop
cltd
call
movsl
dec
adc
aaa
jb
loopne
pusha
dec
dec
cmpsb
mov
inc
pop
shlb
add
pop
or
pop
push
push
iret
ficoml
mov
into
aam
outsb
jae
xchg
cli
and
adc
mov
sbb
pop
cwtl
push
mov
cmp
mov
mov
adc
pop
lea
add
ljmp
filds
jno
das
cwtl
in
nop
out
outsl
push
ss
rclb
mov
push
sbb
cmpl
in
js
lahf
cltd
pusha
and
insb
ja
mov
sbb
hlt
or
mov
in
mov
jne
sahf
xchg
shlb
fistpll
or
lret
inc
mov
out
test
scas
jbe
mov
hlt
pop
cs
or
adc
cmp
pop
int
mov
lods
xchg
jg
dec
ljmp
sti
mov
ljmp
mov
inc
push
mov
bound
je
daa
int3
nop
rorl
adc
test
adc
xchg
pop
divb
loopne
mov
lahf
jge
jns
stc
jge
jl
cli
mov
clc
jp
sub
negb
popf
das
lock
dec
shrl
int3
int
jb
out
push
neg
repz
adc
adc
pop
sarl
cmp
cltd
inc
rolb
dec
cmp
xchg
filds
cmpl
mov
and
fstpl
mov
cmpsb
push
fs
inc
fisubs
jmp
xchg
les
dec
and
fldl
mov
or
and
int
mov
aas
lds
lods
and
inc
lcall
ljmp
and
adc
fstps
xor
sub
stos
push
out
call
jecxz
out
push
add
mov
or
inc
mov
xchg
xor
mov
sbb
out
outsb
pusha
or
cmp
lret
and
and
dec
and
out
testl
lds
jo
dec
dec
rclb
or
and
mov
add
sarb
pop
xlat
out
mov
stos
out
into
push
and
movsl
inc
mov
mov
jb
mov
push
jle
xchg
call
repz
adc
xchg
mov
repnz
gs
les
divb
cmpl
testl
shrl
or
add
mov
imul
icebp
mov
fwait
mov
dec
jmp
mov
repz
addr16
decl
jp
lahf
inc
mov
shlb
imul
das
or
std
lods
pop
test
pop
loop
iret
out
cli
dec
cld
sbbl
sub
mov
push
ret
xchg
jo
pop
push
push
mov
pop
icebp
cld
jecxz
sarl
add
xor
aad
push
movsl
fidivrl
iret
lods
popf
add
jno
and
repnz
loope
lret
mov
add
loop
jp
mov
mov
add
dec
subl
lret
push
dec
adc
stc
sti
mov
jg,pt
popf
jle
add
loop
jne
xor
sti
xchg
or
in
push
xlat
ds
inc
jp
adc
fwait
jg
shl
into
scas
insb
or
popl
and
jo
enter
stc
in
scas
fistpll
repnz
arpl
rorb
leave
jb,pn
or
cltd
test
mov
rclb
push
in
dec
pop
or
dec
jecxz
imul
mov
add
inc
in
bound
or
cld
test
mov
jnp
andl
fwait
jecxz
nop
insl
aas
repz
pop
push
cmc
pop
cs
out
in
sbb
mov
stos
and
shr
fisttpl
aaa
ficomps
jnp
sti
mov
mov
xor
out
cli
shr
ds
xchg
movsb
pop
test
cmp
daa
mov
hlt
jecxz
lds
xor
sub
loope
icebp
popa
cli
or
nop
xchg
adc
or
and
fdivrs
mov
clc
bound
cmp
imul
dec
pop
dec
aaa
mov
xor
aaa
sub
mov
mov
cmp
mov
add
test
je
test
lcall
add
ljmp
repnz
sbb
mov
dec
mov
sbb
xchg
aad
cmp
push
call
push
call
push
sbb
jnp
push
outsb
clc
test
leave
es
inc
iret
stos
mov
cmpsl
pop
sbb
pop
push
add
test
and
jp
mov
xor
jbe
jae
pop
push
dec
jge
shll
mov
ljmp
sub
lret
insb
xor
inc
pushf
lock
shl
add
and
adc
sbb
imul
nop
jae
push
mov
inc
xor
movsl
or
inc
loopne
bound
pushf
and
lds
add
pop
repz
pusha
cltd
call
or
mov
in
cmp
pop
jnp
mov
pop
xchg
dec
je
mov
mov
scas
and
jge
and
test
pop
adc
andl
dec
in
adc
subl
sub
or
cs
mov
mov
pop
pop
loope
push
xor
scas
pop
int3
sub
push
jo
cmp
mov
rep
orb
cmpsl
inc
fcompl
enter
sbb
loope
pop
xchg
xorl
aas
mov
cmpsb
add
fldt
aaa
ss
cmp
ret
in
dec
pop
aad
pop
outsl
nop
mov
mov
rolb
inc
jnp
fnsave
mov
jbe
loope
pop
stos
push
lret
or
mov
jo
sub
scas
addr16
adc
dec
sahf
xor
scas
test
sbb
imulb
nop
andb
mov
xor
outsb
cld
cmp
pop
dec
inc
xor
xchg
sub
mov
ss
lret
aam
movsl
or
stos
outsb
jae
lahf
sar
xlat
pop
sub
fcoml
ds
and
mov
push
je
and
ret
sbb
push
hlt
adc
aas
adc
orl
addr16
sbb
hlt
cmp
cmp
jnp
mov
clc
push
pop
aad
mov
mov
xor
xchg
scas
jecxz
push
dec
in
in
add
cmc
test
pop
test
xor
mov
add
hlt
xor
int3
sub
pushf
mov
sub
mov
loopne
cld
jge
xchg
sub
rcll
push
xor
mov
ret
sbb
jb
xor
in
mov
adc
mov
add
mov
inc
and
add
sbb
js
jb
nop
sbb
js
ljmp
and
pop
lds
es
out
push
lock
mov
outsl
jp
jg
mov
mov
mov
cli
aad
mov
mov
out
mov
fdivrl
loope
cmp
mov
mov
rolb
mov
aad
mov
mov
fs
mov
aam
lds
arpl
jmp
test
lods
cltd
nop
insb
inc
dec
ret
xchg
xor
scas
jne
daa
mov
popf
sahf
dec
lret
stos
dec
std
mov
aad
jmp
std
sbb
inc
jecxz
mov
fwait
and
leave
or
pusha
jmp
das
cmp
jno
xchg
cld
mov
mov
fcoml
hlt
xchg
jnp
sbb
add
lret
mov
imul
lret
ja
push
mov
in
sarl
cmp
mov
xor
frstor
stc
sbb
push
xchg
adc
pusha
pop
mov
inc
mov
mov
fwait
out
pop
loop
aas
js
mov
sbb
mov
pop
or
int
test
loope
cld
and
sub
inc
or
inc
xor
pusha
dec
sbb
mov
fmuls
push
xchg
clc
imul
xor
xchg
add
insb
and
mov
out
mov
xchg
lahf
icebp
jne
mov
lret
mov
pop
sub
enter
imul
push
test
enter
out
mov
cmp
fmull
sub
out
mov
xchg
sub
adcl
cltd
into
movl
or
push
aas
push
jl
dec
stos
pop
add
xor
in
adc
or
in
push
pop
mov
or
loopne
sbb
push
cmpl
and
es
and
mov
cmpsl
xchg
jae
aad
ss
or
out
xchg
sahf
push
add
test
inc
add
roll
and
cli
jge
cs
pusha
sahf
mov
lret
and
outsl
rolb
sbb
lahf
xor
mov
pop
stc
and
push
or
lret
and
insb
pop
push
pop
jae
cmp
cmp
pop
out
push
jns
arpl
mov
xchg
movsb
cmp
sub
cltd
jne
aam
sub
popf
dec
mov
add
pushf
sti
jb
sbb
pop
cmpsl
xor
sub
insl
sbb
inc
sub
pusha
pop
loopne
incb
dec
sbb
stc
cmp
lret
icebp
sub
loope
push
mov
shlb
pop
in
scas
jge
sub
sbbl
popa
xor
dec
test
add
rorb
xor
ja
jnp
lret
and
and
cmp
leave
int3
inc
mov
pop
call
je
js
xor
xchg
daa
or
pop
xorb
ret
sbb
jne
js
jne
pushf
xor
mov
inc
mov
pusha
movsl
and
push
movsl
popf
lods
push
cmp
xor
mov
push
fdiv
cmpsb
adc
dec
std
repnz
dec
xor
sub
incl
mov
inc
add
jecxz
iret
dec
jecxz
mov
into
push
mov
idiv
in
mov
push
cmc
mov
insl
cs
fwait
dec
cmp
outsl
mov
sti
sbb
test
jne
fistpll
xor
and
add
rcr
push
mov
mov
mov
mov
cs
dec
dec
sarl
mov
aam
mov
rcrl
test
push
cmpsb
cltd
cld
insb
push
out
jmp
mov
aaa
in
call
push
sbb
pop
mov
mov
jns
les
adc
lea
inc
mov
mov
pop
out
push
mov
movsl
lcall
es
pusha
popa
ret
dec
or
adcl
scas
lret
sarl
pusha
arpl
cmp
and
in
std
inc
out
sbb
cmpb
or
lret
dec
lcall
sub
and
addb
mov
or
divb
mov
decb
and
xchg
xor
mov
xor
jl
pop
mov
stos
or
mov
lods
shlb
lds
in
aam
subb
imul
iret
cmp
out
add
movl
cltd
or
in
xor
and
add
dec
mov
ljmp
push
movsb
inc
pop
pop
cmp
aaa
xchg
xlat
cmp
add
in
mov
mov
or
subb
and
or
test
int
aaa
outsl
mov
mov
decl
fcmovnu
xlat
rorb
js
int3
adc
scas
mov
inc
les
push
int
dec
sbb
sub
rcrb
push
test
fisubl
or
inc
pop
add
adc
or
mov
leave
stos
push
lds
mov
es
aaa
mov
cltd
jl
ja
enter
jae
jmp
mov
fnstcw
pop
xchg
sbb
pusha
xchg
lds
ds
aaa
ds
add
push
loopne
push
add
xor
ljmp
addr16
test
loop
sbb
push
clc
repz
jecxz
and
leave
lret
adc
mov
dec
das
sbb
addr16
sbb
fcompl
or
movsb
test
dec
out
jne
cmp
outsb
xchg
cwtl
mov
pop
adc
stc
jl
aas
xor
push
sahf
mov
sbb
push
push
jo
clc
xchg
adc
xadd
pop
sub
adc
js
faddl
sub
rorb
mov
push
fwait
sub
mov
out
adc
call
shrb
cmpsb
xor
add
lds
add
lea
sub
sbb
cli
in
pop
inc
pop
sti
jmp
das
arpl
sub
push
movsl
jnp
pop
in
pop
dec
in
test
xchg
add
cmpsb
loopne
inc
pop
je
cmp
dec
insb
xor
xor
insb
out
sub
sbb
jns
cmpb
jecxz
btr
lahf
adc
popf
fcoml
add
scas
aad
dec
mov
add
aad
adc
add
sbb
xchg
jnp
mov
ss
test
in
mov
jnp
mov
push
repz
test
stc
insb
inc
sub
fwait
mov
sub
aas
sbb
jne
mov
in
or
pop
lret
sub
and
repnz
add
ss
jmp
aad
lcall
fcoml
imul
jae
adc
sbb
mov
adc
inc
mov
cmp
dec
xor
sub
outsl
fisubs
xchg
ja,pt
cmp
add
sbb
jmp
test
sub
dec
sti
xchg
in
push
je
add
or
xor
cmp
inc
scas
and
lods
lods
push
mul
pop
repz
mov
popa
mov
stos
addr16
rorl
aaa
shlb
inc
cmc
or
sbb
push
sub
or
lods
test
push
aam
dec
mov
mov
pop
je
rorl
mov
xor
shlb
inc
jl
shr
fcompl
mov
rclb
mov
jecxz
std
stc
push
rcrl
xor
dec
lahf
inc
inc
sti
pop
add
rcrb
xchg
call
cmp
or
dec
fldl
pop
into
in
ss
add
mov
stos
cmc
hlt
ret
pop
ficompl
and
fwait
sbb
leave
shll
lret
mov
fs
cmp
mov
aaa
sub
xchg
rcrb
stos
sub
repz
and
js
lds
lods
mov
fistpl
std
jb
mov
in
inc
push
cmp
mov
ja
aas
or
out
jns
or
cmp
cwtl
movsl
push
xchg
mov
mov
sub
shll
add
push
out
and
sub
dec
sbb
lret
push
cmc
iret
fsubrs
fsts
outsb
jge
cmp
adc
xor
ljmp
pop
adc
into
outsl
or
cmp
xor
cli
add
inc
aam
mov
cmp
inc
dec
and
pop
push
pop
fcmovnbe
sub
sti
jecxz
cltd
pop
mov
mov
mov
pusha
and
fwait
pop
outsl
lret
out
mov
pop
jle
xchg
pop
jns
or
ljmp
fmuls
mov
and
pop
pop
icebp
dec
mov
pop
shlb
sub
popa
jp
movsb
jno
pushf
add
sbb
jae
jg
cltd
xchg
mov
cmpsb
cwtl
jno
lods
scas
mov
out
out
pop
outsl
jmp
inc
aaa
xor
mov
and
sbb
je
or
dec
fistpll
pop
and
mov
arpl
mov
dec
xchg
mov
and
mov
cmp
fsubrs
sbb
out
xchg
sub
pop
add
test
adc
pop
pop
popf
jb
aaa
xor
add
add
in
inc
sub
sbb
cmp
repz
int3
pop
cwtl
test
sub
decb
mov
or
into
loop
mov
inc
xchg
movsl
sbb
jno
popa
xchg
ljmp
xchg
andb
inc
sahf
jmp
stos
insl
lret
or
and
scas
je
push
mov
mov
ret
cltd
jb
ljmp
js
cmp
jnp
pop
popa
movsb
inc
push
enter
push
mov
or
out
jg
das
dec
insb
push
popf
nop
ljmp
test
pop
je
cli
aas
xchg
pop
lret
lret
sbb
mov
push
xchg
sahf
jae
jno
pusha
je
cmpb
sub
sub
outsl
negl
addl
ljmp
imul
and
push
mov
sbb
or
push
data16
fsub
cmp
in
test
ds
repnz
movsl
dec
mov
lret
lods
stos
pop
push
adcl
mov
jp
or
insl
jl
fucomi
add
call
jns
inc
mov
rorl
sti
dec
and
and
fcmove
dec
push
and
sub
popl
adc
cwtl
sbb
lret
test
xor
mov
sbb
stos
jp
insl
fildl
test
adc
jne
pop
lcall
sarb
mov
cld
fsts
sub
push
insl
xlat
adc
call
mov
sub
mov
xchg
ret
cwtl
mov
cwtl
rorl
xchg
outsb
out
push
insb
sbb
ret
repz
and
addb
mov
inc
lret
and
pop
lods
jp
cltd
add
push
and
dec
adc
into
scas
pop
addr16
or
push
and
je
test
push
fwait
or
mov
ret
ret
imulb
insl
mov
add
add
pop
test
data16
mov
push
xchg
hlt
jnp
mov
lret
out
sbb
push
movsl
std
cmpsb
or
adc
popf
mov
mov
xor
or
loope
add
xlat
ror
xlat
sub
mov
sahf
popa
xor
mov
adc
push
jo
pop
mov
xor
dec
vmread
ss
ss
sub
lret
shrb
das
lock
mov
mov
adc
cmpsb
xchg
cld
ds
mulb
cmp
mov
enter
cs
add
arpl
jmp
pop
inc
and
jb
shrd
outsb
mov
fs
push
std
xor
xchg
jp
cmpsb
or
lret
push
xor
cmpsl
jmp
pop
ja
gs
jmp
gs
inc
mov
sbb
stc
xor
or
xor
and
outsl
mov
clc
sti
jne
movsl
lret
notl
push
scas
es
jns
push
pop
scas
fbld
outsl
mov
insb
mov
cmp
iret
ja
push
adcb
insb
jmp
scas
movsb
rcrl
pop
lcall
lods
fidivrl
rcll
xlat
arpl
pop
fld
or
jbe
cmp
dec
and
imul
or
sbb
xchg
rcll
push
pop
shlb
mov
scas
push
faddp
lock
mov
testl
lcall
movb
adc
fadds
out
repz
inc
daa
test
popf
add
cmp
aad
divps
xchg
push
cmc
sahf
fwait
nopl
gs
adc
scas
dec
lcall
push
push
repz
enter
lahf
and
lods
sar
push
orl
mov
scas
arpl
clc
or
data16
sarl
push
and
arpl
jge
movhps
fldenv
dec
loopne
adc
inc
ds
ret
iret
sahf
inc
in
add
rcll
pop
enter
push
fsubrs
mov
pop
xor
push
jp
aas
xchg
fprem1
das
xchg
push
pop
add
mov
adc
gs
dec
bound
or
mov
addr16
mov
aaa
jmp
inc
pop
jae
mov
mov
incb
sub
scas
stc
jb
call
or
mov
idiv
mov
hlt
inc
scas
mov
out
xchg
mov
jl
cmpsl
cmp
cmc
add
nop
inc
push
pop
and
fmulp
push
daa
mov
sbb
dec
xor
mov
jmp
push
rcll
pop
and
sub
adc
dec
test
cmc
mov
scas
test
and
test
loopne
adcb
jg
fucomip
pop
out
shlb
mov
addb
jne
xchg
inc
repz
bound
mov
pop
push
pushf
fistl
stos
cmpsl
ja
test
in
jne
nop
cmp
xor
lcall
lods
xchg
push
daa
mov
fistpl
or
movsl
pop
sti
mov
call
sbb
cs
push
cmp
mov
sub
test
fstl
sub
add
negl
ss
pop
push
xchg
js
rclb
adc
scas
jg
or
mov
fisttpl
insl
add
add
inc
xchg
out
stos
inc
mov
inc
pop
inc
ss
adc
dec
cmp
push
mov
sub
iret
jecxz
add
pop
negl
out
mov
fiaddl
pop
dec
sbb
cmpsl
fs
lods
aad
inc
push
adc
pop
or
push
mov
aas
inc
pushf
outsb
mov
xchg
jno
lret
sub
dec
add
mov
jns
lahf
add
xchg
push
fsubs
add
lret
push
inc
out
xchg
sub
iret
cmp
push
xchg
fwait
data16
mov
dec
aaa
sbb
push
frstor
xchg
and
jns
xchg
mov
insb
jae
jne
jmp
orb
push
mov
ljmp
xchg
xor
seta
mov
sub
pop
mov
test
mov
bound
sbb
cmpsl
cli
jmp
or
and
push
mov
fstps
ret
xor
adc
jne
ror
sub
and
les
mov
xor
jmp
xchg
adc
mov
mov
cmpsl
or
sub
fisubl
aaa
xchg
lds
mov
cmpsb
push
xor
push
sbb
add
or
pop
dec
lcall
jne
loop
sub
adc
push
jl
movsl
cmc
xchg
cmpsb
faddl
mov
jne
imul
inc
inc
cmpsl
sbb
out
mov
mov
and
add
dec
add
and
pusha
sbb
test
shll
fucomp
push
jno
push
xchg
call
cmp
xchg
rol
insb
xchg
in
inc
xor
rorl
stc
ss
movsl
pop
xor
mov
testl
int3
sbb
push
push
jae
mov
mov
setl
mov
iret
push
add
xor
jg
stc
lcall
ror
xchg
mov
xchg
push
cltd
sbb
sbb
xchg
lds
mov
mov
shrb
push
inc
jne
mov
mov
mov
roll
pop
test
lcall
cmp
lea
xor
cld
ret
out
jo
ss
orw
mov
shll
loope
in
jnp
lds
jno
pushf
push
cmp
mov
jl
xchg
shlb
lods
les
gs
ljmp
pusha
cmp
cmp
dec
out
jp
mov
scas
xchg
in
aaa
inc
iret
arpl
mov
sti
mov
jmp
inc
fadds
out
int3
nop
adc
and
add
test
xor
sbb
inc
cli
gs
es
popa
out
mov
subl
je
lret
out
or
dec
inc
lahf
in
loopne
fidivs
ds
pushf
sub
xor
xor
push
cmpsb
rcll
mov
mov
icebp
adc
and
ret
fstl
fcom
popa
int3
xchg
outsl
push
cmp
out
mov
jg
inc
mov
rcrb
es
push
pop
sahf
fwait
in
lods
lcall
mov
shlb
mull
jl
jo
out
lcall
stos
in
mov
cwtl
jae
mov
andl
push
pushf
int3
mov
lods
adc
mov
xchg
xor
repnz
or
adc
aad
movsl
cmp
mov
sub
lods
pop
sub
cmp
xchg
pusha
pop
pop
movsl
ficoml
add
out
aaa
jl
je
loope
loope
mov
mov
push
enter
sbb
movb
cltd
fs
stos
xlat
mov
test
repnz
pushf
jae
fimuls
out
mov
fildl
sbb
iret
dec
xor
dec
mov
aad
xchg
or
icebp
cmp
inc
pop
fidivl
push
imul
hlt
ret
mov
add
add
movsb
cmpsb
out
push
adc
xchg
into
xchg
sub
xchg
ljmp
jmp
pop
popf
mov
movsb
sahf
out
xor
push
aaa
int3
mov
ret
dec
push
addb
xchg
xlat
mov
fsubrp
clc
jge
and
push
mov
rclb
and
adc
mov
xor
xchg
and
jg
in
sarb
cs
dec
pusha
insl
sub
je
pop
jl
orl
shl
imul
push
push
dec
ljmp
sahf
roll
xor
popf
rcr
mov
js
ret
push
lret
xchg
cmp
mov
sbb
pop
es
iret
loop
jno
or
xchg
mov
mov
and
push
mov
call
or
sub
and
mov
lods
jl
and
in
rorl
xacquire
movsb
bound
mov
test
and
mov
xchg
adc
cmpsl
add
inc
jne
inc
mov
popf
xor
fidivrl
leave
or
repnz
cmp
in
jae
dec
int
imul
pop
sahf
adc
addr16
inc
cld
loope
mov
xor
pop
xlat
ljmp
jle
mov
psrad
lea
ljmp
jecxz
repnz
jo
xchg
faddl
movsl
sbb
inc
xor
or
movl
mov
jle
jl
jmp
fildl
ss
xor
dec
loopne
jno
adc
xlat
jo
xor
test
adc
xchg
adc
xlat
pop
mov
dec
daa
mov
scas
lcall
xchg
push
xor
outsb
mov
rclb
daa
in
lcall
cmpsb
fcmovne
cld
clc
sarl
insl
sahf
or
mov
and
sarl
cmc
fwait
test
lods
sub
adc
fiaddl
jno
cmc
xchg
pop
out
adc
mov
jp
ret
pop
mov
push
loop
lcall
cli
enter
enter
addb
movsl
xchg
xor
mov
lret
add
sbb
jnp
mov
xchg
shlw
or
dec
fwait
adc
test
lcall
subl
in
cmc
fisubrl
and
mov
jle
lods
mov
ret
scas
notl
fwait
dec
cs
xchg
push
pop
mov
push
mov
icebp
mov
mov
push
inc
or
and
lods
push
mov
push
push
inc
pop
cmp
mov
add
shll
inc
jp
sub
dec
popf
imul
xchg
cmp
cmp
repnz
push
push
pop
xchg
loope
lods
bound
lock
sbb
xchg
mov
out
cmp
imul
push
dec
cwtl
jb
mov
xor
rolb
fnstsw
xchg
ds
pop
fistps
add
add
fidivrs
cmp
lea
clc
ds
xor
mov
loopne
add
dec
add
mov
or
and
inc
push
ds
rcll
or
inc
adc
shll
lret
test
push
add
cmp
push
repnz
popf
inc
ret
xor
pop
pop
stos
push
pop
lods
in
sbb
jbe
mov
test
mov
sub
cmpsb
inc
push
jnp
mov
mov
repz
rolb
bound
into
aaa
sbb
xchg
push
in
sbb
pop
mov
adc
aas
dec
xor
or
inc
adc
sbb
repnz
add
stos
lds
and
in
inc
add
std
jne
cmpsb
sbb
aam
cmp
mov
imul
sbbb
or
or
scas
insb
in
sub
sub
fsubrs
mov
pop
sbb
cmp
adc
inc
ret
scas
cmp
mov
movsl
shlw
and
xchg
cmp
jl
sbb
je
test
leave
adc
jns
dec
mov
inc
or
or
cli
leave
fsubp
outsl
dec
xor
push
cld
in
jb
jb
xchg
or
push
mov
lds
test
cld
sub
pusha
push
xchg
add
xchg
cmp
inc
mov
mov
shrb
ja
cmp
fildll
incl
xchg
cmp
shrl
dec
sarl
lahf
jae
repz
or
pop
inc
push
sbb
out
mov
xchg
cmp
cmp
pop
xor
fnsave
adc
jge
inc
xchg
xchg
mov
jmp
loopne
xor
sbb
pop
inc
push
rcll
xchg
jge
add
dec
push
aam
add
xchg
dec
cmpsb
adc
das
fdivp
cmp
cmp
cmc
xchg
shll
pop
lret
xchg
cmpsb
mov
pop
inc
aas
ds
inc
mov
sbb
lods
cmp
in
fisubrl
in
addb
xor
xorl
test
bound
test
int3
mov
int
outsb
push
xchg
xchg
pop
jl
xchg
xchg
pop
xor
pop
call
jmp
xor
mov
lret
lds
mov
adc
and
mov
push
mov
test
push
imul
in
xchg
cs
js
and
incl
or
shll
clc
push
loopne
mov
pushf
mov
cs
addb
shll
mov
or
jne
xchg
dec
decl
mov
aas
ret
out
orl
popa
fistpl
and
xchg
fcompl
mov
ret
mov
and
addl
cmpsb
sub
insl
dec
in
ret
call
data16
jns
inc
mov
mov
das
outsb
mov
ret
jb
add
insl
xor
cmp
mov
imul
sub
in
dec
lea
aaa
loop
cmp
dec
jno
and
jmp
popf
pop
cld
int3
jbe
sub
cmp
cmp
dec
add
xchg
mov
inc
es
mov
adc
and
jnp
test
pusha
test
ret
prefetcht2
shlb
ret
pop
xchg
fs
push
xchg
insb
in
jbe
jge
adc
rorl
push
pop
fnstcw
das
mov
subl
pop
xlat
cs
lods
fcmove
push
iret
sbb
pop
and
push
or
loope
inc
dec
ret
mov
jbe
decl
adc
xchg
and
mov
dec
insl
fldcw
bound
mov
adc
std
sub
xchg
adc
inc
lea
scas
xchg
call
popa
cwtl
sahf
in
and
das
cmc
or
xchg
inc
inc
inc
stos
dec
mov
sub
insl
rolb
xchg
dec
fcmovu
mov
icebp
xchg
cld
sbb
dec
xor
enter
pop
loope
xchg
loopne
es
sti
pop
ret
xchg
call
add
jae
flds
pop
sarb
pop
jmp
xchg
mov
jecxz
sbb
xchg
adc
pop
pop
cmpsb
ja
in
jnp
mov
in
pop
popa
or
test
xchg
cmp
mov
xchg
nop
cmpsl
adcl
xchg
popa
divb
popf
notl
mov
fimuls
cmpl
mov
push
mov
lods
cmp
cmpsb
xlat
add
stc
out
jae
pop
fimuls
mov
inc
cmc
xlat
xchg
sub
mov
clc
or
cli
int
add
mov
sub
js
fcos
push
ds
insb
outsl
dec
mov
xchg
pop
and
mov
push
out
add
mov
pop
mov
in
or
out
pop
dec
aad
jl
push
inc
in
int
fldl
adc
les
lods
push
rorb
icebp
push
scas
inc
mov
sahf
xor
popa
push
mov
inc
cmp
push
and
adc
mov
pop
cmp
aad
lahf
mov
stos
adc
out
xchg
das
cs
jp
ror
and
xchg
inc
jmp
pop
sbb
mov
nop
xchg
cmp
mov
or
aad
mov
shll
ret
notl
cmpsb
stos
sbb
xlat
sub
cmp
aas
iret
jo
std
shll
dec
test
lock
dec
aas
dec
cmp
jno
cwtl
inc
jae
dec
or
jge
cmpxchg
mov
mov
loop
fcmovnu
out
subb
push
insl
mov
leave
lahf
cmp
mull
add
std
pmuludq
and
cmp
or
fidivl
rcr
out
mov
clc
and
push
cmp
inc
mov
inc
pop
or
insb
add
pop
imul
nop
js
mov
mov
xchg
xchg
jb
jns
mov
xor
testb
jp
ss
inc
das
aas
lds
repnz
popa
in
pop
popa
das
xor
xlat
inc
clc
and
mov
inc
jge
pop
jmp
inc
clc
cld
idivl
pop
add
gs
jl
mov
inc
les
out
or
xor
mov
dec
lods
lds
aad
loope
ja
xor
push
jns
int3
andb
cld
sub
push
xor
ds
lar
or
push
movsb
orl
popa
pop
and
rcl
repz
rolb
stos
cmp
xor
push
lds
pop
movsb
adc
lock
jle
aam
mov
jns
shrb
cmp
je
pop
lret
cwtl
sub
jl
inc
das
dec
cmp
mov
je
mov
out
frstor
loope
add
cmp
xor
sub
loope
cmc
xchg
pusha
imul
adc
imul
push
std
or
jb
in
mov
cmp
sbb
jno
clc
andb
std
aam
inc
call
imul
ja
jmp
bound
push
cld
pop
outsl
gs
stos
push
jge
jp
int
jbe
mov
sarb
mov
inc
mov
outsl
jnp
test
xchg
mov
push
data16
xchg
push
loop
call
jne
jnp
shlb
in
dec
push
in
test
jmp
or
into
lret
insl
add
mov
dec
js
mov
pusha
fsubr
sbb
sti
jbe
lock
cld
push
icebp
icebp
rcrb
adc
aaa
push
in
push
sets
dec
das
cmp
je
and
push
stc
dec
iret
mov
repz
test
mov
les
test
enter
scas
mov
add
jecxz
mov
pusha
pop
jmp
mov
xchg
rcpps
and
movsl
sbb
aaa
adc
repnz
push
into
pop
cmc
jbe
push
pop
pusha
jge
mov
cltd
shlb
cmp
mov
pop
push
mov
dec
icebp
xchg
sbb
adc
aaa
xchg
jle
pop
xchg
dec
in
fldcw
and
pop
dec
imull
push
ss
cmp
scas
and
jo
sbb
adc
out
insl
aam
lret
inc
sti
add
sub
cmc
fwait
cmpb
jp
jo
xorb
iret
jg
fs
pop
mov
inc
push
sbb
mov
shll
imul
adc
enter
jmp
or
cmpsl
divb
sub
pop
mov
pop
mov
pop
jae
mov
add
jns
xchg
aad
jns
jge
data16
js
or
adc
sbb
sub
sbb
int3
xor
orl
int
push
movsl
int3
in
dec
faddl
je
imul
repnz
psrld
lods
mov
push
mov
out
ja
movsb
icebp
mov
adc
daa
push
lock
push
sti
push
add
test
arpl
mov
outsl
cmp
fstpt
and
push
into
ret
and
iret
jg
pop
fiadds
iret
or
push
pop
mov
xchg
mov
insb
adc
icebp
push
insb
sbb
or
sub
mov
xor
cmp
mov
and
movsl
sbb
push
test
mov
icebp
test
xchg
arpl
mov
dec
shlb
mov
pop
ficomps
jae
mov
mov
dec
fidivrs
or
dec
cmpb
fnsave
nop
loopne
into
data16
cld
pop
and
sbb
scas
mov
pop
test
aas
push
mov
cmpsl
setp
popf
xor
outsb
sub
jp
jno
push
jl
sub
dec
sub
bound
add
pusha
dec
mov
push
inc
or
cwtl
int
jg
test
insl
sub
dec
inc
dec
push
jge
inc
jp
dec
or
aad
mov
orl
das
inc
inc
pop
mov
adc
jecxz
std
xor
pop
lds
mov
cmp
int
aas
vphsubbw
dec
adc
push
mov
push
dec
adcl
jno
sub
cld
mov
ds
mov
ja
adc
pop
jl
dec
mov
movsl
adc
push
xchg
test
xchg
sarl
mov
jno
add
arpl
jmp
hlt
lret
testl
fisubrl
mov
ret
xchg
loop
addl
inc
xlat
test
outsb
aad
sbb
push
jns
faddl
ret
jnp
movb
mov
sub
popl
repnz
push
outsb
stc
fsubs
cmp
dec
mov
lods
mov
int
in
js
push
push
mov
pushf
jno
insl
pusha
lahf
aad
loopne
jge
xor
stc
add
mov
sub
jmp
xchg
cmp
scas
push
push
push
cmpsb
xlat
sub
sahf
scas
fistpl
imul
mov
mov
add
fidivrl
sub
movsl
xchg
add
loopne
insb
mov
sbb
fisubl
test
jmp
testb
push
hlt
inc
fcoml
insb
jae
es
mov
std
nop
arpl
xor
sbb
int3
int
in
jne
cmp
aam
adc
test
testb
faddl
hlt
inc
push
sub
sub
xor
nop
mov
pop
ret
outsl
push
imul
inc
call
inc
clc
clc
sub
pop
mov
bound
sub
cmp
std
xor
or
fsubl
jbe
hlt
in
lock
sbbl
pop
cwtl
jge
adc
enter
aaa
sub
movsl
lret
stos
popa
mov
imul
pop
addr16
ret
dec
iret
rcrb
xchg
das
dec
sbb
mov
push
mov
and
addr16
jnp
and
dec
mov
cmp
jecxz
aam
jge
test
mov
sahf
lods
pop
xchg
and
std
ss
push
push
xchg
push
sub
cmp
adc
int
xchg
aam
int3
sarb
and
scas
insl
jecxz
icebp
inc
loop
and
repz
repnz
sbb
adc
fidivrl
repz
test
negb
pop
mov
lcall
push
jns
roll
lret
xchg
inc
int
sbb
lret
sarb
imul
lods
leave
cltd
icebp
cwtl
inc
repz
sub
jns
mov
jae
icebp
push
push
inc
jle
pop
ret
lods
test
fildll
and
fs
mov
dec
inc
outsb
xchg
cmp
hlt
mov
out
cs
insb
xor
pushf
lret
testl
and
fistpl
dec
push
xor
loop
adc
call
orl
and
xchg
push
dec
jb
push
and
test
jo
cli
aaa
mov
outsb
mov
jne
jae
adc
insl
mov
daa
inc
dec
icebp
ss
dec
in
scas
inc
add
sti
bound
xlat
ret
mov
inc
setns
lahf
push
xor
lcall
or
cmc
mov
mov
jl
push
pop
cli
sub
insb
ds
repnz
popf
pop
inc
movq
mov
movsl
sub
push
ja
es
add
lea
dec
pop
mov
daa
int3
sub
sarl
push
push
sarb
and
ret
aam
sbb
ret
jbe
dec
fldt
mov
jge
daa
or
repnz
pop
addr16
dec
cmp
mov
adc
stos
push
xor
rcrb
cmc
out
jns
shl
inc
xchg
int
dec
aaa
imulb
mov
jle
cltd
aam
or
push
sub
inc
out
aaa
mov
push
test
je
insl
and
cltd
jl
xchg
sbb
mov
dec
xchg
fidivrl
inc
pushf
fwait
insl
fcomp
inc
lret
pop
imull
or
ficoml
and
imul
mov
or
les
pop
pop
push
mov
pop
sbb
sub
pop
test
insb
jb
xorb
jl
hlt
seta
xchg
dec
addr16
cmpsl
mov
aam
arpl
test
or
add
ret
mov
out
lods
pop
mov
mov
in
ss
xchg
add
jae
jg
mov
pop
in
cmpsb
inc
popf
std
aaa
or
insb
imul
fsubr
pushf
xor
add
mov
pop
filds
inc
jmp
mov
xor
sbbl
dec
test
lea
enter
ss
xor
cwtl
add
test
int
lret
sub
mov
addb
inc
in
adc
imul
lcall
xlat
adc
inc
test
jb
mov
int
testb
std
xor
call
mov
nop
ret
stos
adc
mov
jns
dec
pop
xlat
cmp
addr16
out
out
jecxz
cmc
xor
fwait
in
mov
mov
jle
add
into
addr16
fxch
cmp
lock
jno
out
daa
pop
mov
push
iret
faddl
out
subb
xor
push
sub
das
ljmp
repnz
scas
lret
pop
lret
push
xchg
fwait
js
daa
daa
jb
jp
xor
mov
sub
outsl
js
aas
xchg
mov
punpcklwd
in
inc
and
adc
std
stos
fwait
clc
popa
pop
pop
iret
xchg
aam
imul
call
sub
xlat
xchg
insl
test
xchg
mov
fisttpl
lds
jns
xchg
outsl
insl
adc
add
fdiv
or
pop
mov
aas
gs
pop
push
xchg
testb
leave
dec
hlt
jmp
and
into
les
xor
out
dec
fcmovb
lcall
mov
mov
mov
pop
dec
fiadds
aad
cmc
push
jl
adc
fsubrl
sarb
test
stc
pminub
lock
das
pop
xor
add
fstp
xchg
lret
and
push
fsubl
push
sub
xchg
or
mov
cmp
cmp
xchg
cmp
ja
adc
adc
mov
xchg
icebp
ja
jb
stos
lcall
jmp
fs
out
push
out
sbb
cmp
fmul
lcall
mov
sarb
mov
dec
or
jp
shrb
adc
pop
jo
mov
fwait
cmp
clc
jnp
imul
icebp
rcrl
ficompl
sahf
or
das
mov
xor
lea
shr
daa
push
jbe
loopne
lods
ss
je
xchg
sbbb
arpl
or
jge
out
cmp
xor
repnz
push
jle
cwtl
daa
mov
jge
lret
add
dec
lds
and
leave
iret
pop
xchg
mov
inc
mov
or
push
push
mov
addr16
repz
loopne
jle
popa
inc
out
out
data16
enter
into
xchg
inc
mov
fucomp
lock
push
cmp
arpl
and
mov
cmp
push
test
outsb
shrl
insl
inc
jmp
add
ret
inc
sub
data16
lock
sbb
movsl
lods
shll
sti
outsb
stos
sub
shl
dec
ret
jnp
mov
jle
push
dec
das
and
xor
pop
adc
jbe
pushf
stos
ret
mov
cltd
stos
xor
loopne
fdivrl
push
mov
jl
cmpsb
into
mov
psrad
sbb
cmp
or
dec
daa
or
movsl
repz
jne
test
stc
out
adc
xor
into
xchg
shlb
cmp
push
mov
rep
testl
inc
aam
jg
clc
jmp
pop
xchg
call
mov
pop
out
fcomi
and
lret
mov
push
sub
scas
jns
and
stos
dec
xchg
and
daa
test
outsb
lock
xor
push
sbbl
push
add
mov
sarl
dec
out
pop
sub
add
mov
jno
ja
mov
test
inc
leave
mov
add
call
inc
cwtl
mov
sbb
cmpsl
and
hlt
pusha
or
jo
sub
jl
or
jno
mov
dec
jle
add
rcrl
mov
dec
ds
sarb
rcrl
sbb
fistpl
arpl
and
jg
sar
jbe
pop
fistps
out
inc
movsl
add
xor
data16
mov
inc
jbe
std
xchg
cwtl
or
or
icebp
add
test
add
mov
adc
in
or
or
cmp
jecxz
push
bound
pop
std
xor
es
subb
jno
aad
gs
rcll
in
adc
xor
jmp
test
aad
iret
or
adc
loopne
fdivr
xor
out
push
or
aad
add
ret
fsubs
mov
pop
ja
add
dec
pop
aaa
insl
and
pop
xor
add
xlat
repz
shl
rcrl
inc
or
inc
insb
idivb
and
fcmovne
pop
push
jg,pt
add
push
xchg
int3
loopne
mov
push
and
ret
pop
xor
xor
imul
push
out
sub
sub
mov
dec
insb
jae
cli
testb
roll
and
mov
push
xor
test
pop
push
xchg
shr
loop
imul
hlt
and
inc
xchg
push
xor
fmuls
add
leave
das
mov
ja
roll
cmc
lock
xor
clc
pusha
dec
xchg
movb
sub
sub
gs
jle
je
add
mov
jmp
push
or
inc
sbb
idivb
into
cmpsb
andl
incb
stos
cmpsl
outsb
jge
xor
pop
repz
out
gs
sbb
and
push
test
pop
inc
fdivrs
aad
into
clc
add
imul
push
mov
fcompl
cltd
and
fwait
mov
jno
pop
and
mov
ja
mov
adc
pushf
test
sbb
mov
fcomp
push
das
repz
adc
mov
mov
lcall
int
xchg
jecxz
mov
rclb
ficompl
in
fdivl
mov
jb
mov
sbb
xchg
inc
ja
sub
push
dec
not
aad
leave
inc
fstpt
or
dec
push
addr16
test
xor
leave
mov
into
ljmp
ds
mov
loopne
xchg
ja
sub
mov
push
adc
inc
add
xchg
add
add
int
jp
ret
pop
push
aad
inc
pop
pop
ds
ret
lods
iret
inc
dec
adc
push
add
outsb
mov
scas
repz
test
das
andb
lret
jb
repz
sti
rorb
jecxz
mov
pop
push
push
dec
xor
pusha
out
dec
popa
xchg
stos
push
push
xchg
push
mov
lods
jb
xor
push
adc
dec
jle
out
mov
sahf
jg
jae
jae
mov
cmc
push
scas
les
mov
enter
or
sub
sub
ds
or
jno
xchg
xor
xchg
and
sbb
rclb
inc
insl
adc
cmp
clc
fiadds
out
sub
jcxz
outsl
jg
inc
inc
ja
out
xlat
mov
and
pop
icebp
call
ja
and
cmpsl
adc
sbb
int
in
push
dec
shlb
xchg
mov
inc
mov
cwtl
adc
mov
pop
out
mov
leave
dec
repz
notl
lock
xor
jg
cmpsb
inc
inc
in
adc
cmp
push
xor
cmp
cli
pop
mov
data16
sbb
mov
cltd
shr
in
shrb
in
mov
fstpl
mov
inc
jmp
xor
xchg
sbb
cmp
outsl
cmpsb
sbb
out
repnz
add
jge
insl
in
sbb
pushf
jbe
les
int3
iret
outsb
sbb
lret
pop
cmpsl
ds
xchg
adc
in
pusha
xchg
sahf
popa
sbb
sbb
ja
bound
push
mov
lock
sub
fidivs
ret
out
pop
mov
mov
divl
push
js
test
xchg
xchg
outsb
inc
sub
and
push
pop
insb
jbe
adc
out
enter
aad
leave
mov
mov
aad
pop
mov
jl
push
push
inc
movaps
lock
ss
push
xor
jns
or
clc
xchg
ret
dec
push
xor
js,pn
or
pop
pusha
pop
pop
inc
imul
mov
je
sub
inc
add
fidivl
lds
decl
pop
dec
and
pop
rclb
stc
xchg
cmp
mov
pop
pop
cmp
roll
dec
pop
and
dec
cld
rol
jb
sbb
shl
jnp
xlat
rcrl
add
cld
sbb
sub
mov
loopne
lret
mov
add
imul
das
jge
push
sbb
mov
adc
xor
mov
ja
xor
mov
xchg
out
adc
pop
aaa
or
pop
dec
lods
xlat
lret
dec
int
xor
lods
mov
push
das
or
repz
push
dec
cmp
int
cmpsl
dec
fimuls
push
xchg
andb
rolb
inc
frstor
pusha
pop
cli
sub
shl
lock
in
setle
push
xchg
adc
jbe
mov
mov
and
inc
sbb
pop
push
pop
jae
enter
adc
mov
adc
or
rorb
and
mov
sub
in
pop
cmp
adc
dec
jg
sti
mov
push
gs
cwtl
pop
enter
inc
pop
pop
and
aaa
popa
pop
xchg
cld
dec
sahf
and
fwait
idivl
push
xchg
mov
aas
imul
and
dec
scas
push
aad
js
rcll
xchg
int
mov
push
loopne
or
scas
jmp
adcl
fcomps
add
xchg
sbb
adc
cmc
push
lahf
inc
inc
lahf
imul
ret
aas
fldl
mov
fcmovnb
cmpl
xor
out
adc
mov
ret
mov
test
jb
loope
js
repz
fldenv
imul
push
in
push
loope
lret
sbb
divl
inc
in
and
xor
dec
jne
mov
xchg
or
pop
es
outsb
fstpl
and
loopne
push
cld
mov
jp
xchg
mov
mov
jecxz
jg
cmpl
dec
mov
mov
dec
mov
pop
xchg
ficompl
cmp
sbb
lcall
lock
mov
sub
lret
insb
filds
aaa
in
mov
xchg
addl
mov
in
int
int3
jns
std
cltd
jns
pop
cs
xchg
pushf
imul
jno
iret
xchg
repnz
inc
sarb
jp
imul
mov
outsl
popf
rcll
add
jbe
dec
jmp
enter
push
fsubp
insb
sub
pop
cmp
adc
rcl
lock
push
lret
jnp
add
repnz
adc
pop
mov
jge
sbb
jae
push
mov
jp
mov
cwtl
pop
xor
imul
pop
shll
mov
cmpsl
push
pusha
dec
mov
dec
mov
loop
in
pop
lret
pop
sub
hlt
out
push
mov
mov
aad
mov
inc
or
sub
cmp
ror
mov
mov
dec
pop
pop
and
fcmovnb
mov
fwait
out
dec
aam
push
lahf
add
push
inc
cmp
push
pop
or
mov
lock
push
imul
inc
or
cmp
mov
test
push
roll
stos
sbb
hlt
and
add
mov
or
jno
mov
enter
stos
mov
pop
subl
push
cmpsb
rcrl
xchg
repnz
push
stos
sbb
aas
or
jg
ss
jl
xchg
jno
or
jae
call
insl
mov
jle
jl
cmp
lods
cmp
add
add
inc
ss
aad
push
mov
scas
loope
mov
ficomps
fnsave
xor
fld
std
or
rorb
ss
lahf
pop
loope
inc
loop
mov
xchg
xchg
ljmp
cs
inc
leave
or
stc
ljmp
arpl
out
push
stc
in
cld
dec
insb
lea
outsl
jb
push
push
push
sbb
int
filds
inc
loopne
add
sub
pop
xor
pop
jbe
into
push
ret
pusha
pusha
test
mov
pop
imul
cmp
cmpsb
repnz
sahf
or
push
in
lods
in
iret
or
adc
fisttpll
popf
cli
fsubrs
fs
pop
xchg
call
in
repnz
xchg
sbb
cmp
xchg
mov
push
dec
pushf
add
pop
pop
add
push
js
in
ds
mov
into
sbb
push
aam
pop
test
in
js
mov
int
add
divl
jo
add
sub
movsl
xchg
or
mov
shlb
jge
mov
daa
jle
in
dec
jecxz
sti
stc
xchg
shlb
and
or
inc
cmp
out
mov
inc
xchg
sub
leave
mov
out
bound
movsl
add
out
rolb
push
out
xorl
shrl
sbb
lcall
fisubrs
add
push
pop
movsb
mov
jl
inc
popf
adc
stc
fisttps
jnp
repz
mov
push
inc
xchg
and
inc
or
mov
or
cmp
add
jae
mov
inc
adc
mov
fs
xor
pop
ja
adc
das
push
mov
cs
test
bound
adc
pushf
fcomp
in
lcall
mov
push
mov
roll
les
mov
arpl
enter
aad
cmp
and
sbb
sbb
jp
fstl
and
in
push
mov
cmp
int3
pop
ss
dec
push
sbb
adc
dec
jne
mov
movl
gs
cmpsb
xchg
insl
gs
clc
inc
ss
stc
hlt
push
sbb
cmc
test
adc
in
lret
pushf
mov
dec
adcl
mov
sub
mov
mov
push
inc
xchg
jecxz
push
clc
xor
rcll
mov
lahf
sub
cmovg
sub
mov
scas
rcrb
and
fistpl
cmc
adc
gs
subl
ficomps
js
and
ret
ja
movsb
add
rcrb
das
lods
ljmp
push
je
test
addr16
adc
push
orl
mov
sbb
mov
cmp
adc
pop
mov
lds
sub
adc
or
add
and
jae
ljmp
cmp
pop
out
imulb
inc
jecxz
mov
in
cld
inc
sub
adc
rcr
and
lds
mov
mov
and
sahf
pop
mov
xchg
ret
mov
shll
cwtl
gs
popf
xchg
add
outsb
rorl
bound
cmp
pop
orb
rcpps
or
loopne
or
mov
jmp
mov
fwait
insb
mov
add
xor
ja
rclb
add
rcr
in
lcall
scas
rol
jb
jmp
movsb
push
dec
push
mov
scas
mov
movsl
scas
lea
mov
sahf
and
clc
testb
lods
arpl
loope
bound
dec
getsec
out
or
xor
mov
cmp
pop
loope
out
jmp
int3
inc
mov
decb
push
pusha
cmp
pop
mov
push
cli
inc
xchg
mov
dec
sub
cs
mov
jnp
mov
repz
push
int3
sbb
push
or
in
arpl
xchg
sti
cld
je
add
int3
test
inc
push
sbb
in
mov
pusha
add
xor
mov
test
jnp
or
repz
pop
fs
les
in
push
cltd
pop
mov
std
add
mov
fsubs
sub
push
fcom
pusha
jns
fcmovu
lahf
xchg
mov
push
cld
mov
pop
cmp
rcrb
popf
or
lock
fildl
repnz
mov
in
sub
lods
sub
js
out
dec
enter
clc
adc
jg
jl
fcomip
xor
mov
mov
xor
popf
popf
adc
ljmp
stos
sub
adc
pop
rorb
int
mov
aas
sbb
mov
dec
das
clc
fs
imul
xor
push
les
imul
xor
aad
test
jb
rcrb
mov
clc
pop
dec
lods
stos
lahf
mov
mov
inc
inc
mov
out
add
xor
jne
orb
push
xchg
ja
sub
test
cmp
clc
add
mov
dec
or
hlt
add
clc
hlt
adc
aam
or
popf
cmpsl
imul
cmpsl
inc
clc
mov
xchg
in
dec
cli
pop
inc
dec
mov
in
test
fidivrs
lcall
imul
cli
aam
jecxz
adc
pop
push
xchg
je
cmpb
mov
adc
aad
mov
push
pop
or
pop
fildll
lods
xchg
stos
xlat
adc
push
ss
cmpsb
out
sti
push
outsb
ss
dec
dec
pop
xchg
data16
pop
mov
inc
lods
icebp
call
jle
jnp
repnz
imul
test
fldl
sbb
ret
mov
test
popf
in
cmp
lods
shll
adc
cs
aaa
lods
and
sbb
repnz
out
dec
adc
add
inc
out
pop
out
je
aam
lcall
mov
std
dec
sbbb
scas
setb
mov
pushf
iret
ss
stos
fsubs
inc
xchg
mov
lods
pmulhuw
shll
out
mov
pop
adc
sub
xor
je
xchg
mov
jns
inc
fbld
fwait
inc
xchg
pushf
cwtl
enter
ds
xlat
test
cld
jl
cmp
adc
xchg
and
sbb
xchg
ret
outsl
outsb
lret
cmpsl
ds
push
js
inc
iret
push
repz
jge
mov
pop
ss
cmpsb
inc
sahf
or
push
mov
sahf
iret
xchg
rcll
ja
movsb
dec
repnz
mov
mov
and
cmp
pushf
mov
add
fmuls
sub
out
jle
cmp
push
and
movsl
xor
enter
cmc
stc
int3
sub
shr
sub
mov
sbb
mov
std
std
add
fwait
das
popa
sub
movups
shlb
mov
mul
in
leave
dec
cmp
mov
ret
jns
nop
and
xor
icebp
xchg
xor
push
sbb
decl
jno
sbb
out
addr16
jle
adc
inc
inc
imul
mov
popl
das
lods
or
movsl
xchg
insl
pop
and
repz
out
lahf
xlat
jb
xchg
movsb
inc
rolb
inc
sbb
shl
leave
prefetch
mov
jb
and
fwait
mov
add
mov
ss
mov
xchg
push
xchg
or
jmp
and
ljmp
lock
cld
outsl
mov
ficomps
sbb
outsb
orl
pusha
mov
lahf
pushf
xor
rol
push
rcrl
or
std
xor
or
push
ja
sbb
loop
jae
in
out
scas
sub
popf
leave
push
xchg
mov
and
mov
mov
fnsave
dec
testb
push
and
mov
xchg
lcall
hlt
ss
les
leave
jmp
dec
aas
mov
xchg
dec
pop
popa
push
sbb
mov
test
lock
loope
gs
mov
mov
out
add
pop
enter
sbb
push
into
daa
popf
inc
mov
sbb
popf
xchg
mov
mov
addr16
jmp
sub
pop
fldenv
xchg
cmp
data16
adc
cltd
cmpl
int
push
or
mov
nop
cs
mov
out
lea
mov
jb
cmp
and
sbb
insl
cmp
xchg
xor
fbstp
cmp
loopne
mov
jo
mov
jae
cld
xorb
or
lahf
xor
inc
pop
repz
inc
or
aad
lock
aam
int3
mov
ret
or
clc
test
mov
test
loope
shll
adc
add
xor
pushf
dec
shufps
icebp
int
push
in
mov
mov
scas
lret
mov
ret
cmp
pusha
mov
scas
nop
les
mov
sub
sub
jp
sahf
xchg
sbb
xor
or
mov
iret
or
test
mov
push
nop
jne
mov
xchg
xor
mov
pusha
mov
mov
outsb
repnz
jne
out
das
inc
sbb
push
xchg
lret
jmp
jge
mov
jp
pushl
cli
adc
fwait
sbbb
xor
imul
cmpl
addl
adc
pop
ja
into
nop
jge
adc
lcall
out
es
in
and
aam
stc
ret
scas
mov
inc
jmp
push
and
and
pusha
xor
dec
mov
xlat
push
sbb
cmpsl
push
lods
jnp
push
xchg
in
dec
ret
mov
sbb
add
test
cmp
popf
rcll
xor
mov
movsl
pop
pop
popf
iret
sub
rcrb
mov
rcr
dec
stos
mov
fimuls
repz
call
lds
pop
push
xchg
lahf
cmpsl
jns
ficompl
pushf
inc
add
and
and
jmp
or
andl
testb
adc
jg
ja
xchg
sahf
sub
fnstsw
pop
push
xchg
pop
pop
add
pop
sub
add
mov
jg
cmpb
jb
jno
mov
push
jb
fdivrs
pop
cmp
sar
arpl
or
mov
lods
pop
ja
jne
mov
sub
les
ljmp
inc
mov
or
cmp
sbb
jbe
or
call
or
hlt
jo
dec
ljmp
push
push
cmpsl
dec
sar
test
add
cmp
add
or
mov
sbb
dec
mov
aaa
and
lock
xchg
scas
cmp
notb
fbld
test
pop
fbld
mov
mov
inc
dec
fidivl
scas
inc
dec
loope
sbb
jp
dec
inc
and
or
inc
push
push
andb
jb
out
pop
sub
cmp
rcl
ja
rcr
popf
sub
ret
sbb
cltd
cmp
ret
mov
gs
xor
cli
and
xchg
fdivrs
and
arpl
pusha
mov
mov
pop
movsb
adc
popa
push
sub
add
outsb
icebp
push
inc
mov
aad
mov
xchg
insb
aas
xchg
push
xor
dec
mov
dec
push
push
xchg
fldcw
add
mov
lods
inc
add
xchg
test
shr
jg
xor
xor
cmpsl
mov
subb
cmpsb
sub
jmp
sbb
and
dec
mov
xchg
xor
repz
push
jbe
pusha
fs
and
rorb
in
lods
aaa
int
fistps
push
xchg
xchg
sbb
pop
cmpsb
xchg
mov
push
aad
movsl
test
adc
pop
push
sbb
shlb
sub
jle
cld
xchg
push
sti
scas
xor
cmp
add
inc
cld
cli
bound
mov
das
mov
subl
mov
aam
scas
int
outsb
jp
xor
or
sub
repz
shll
test
out
rol
adc
pop
mov
push
inc
mov
je
cmpb
sbb
leave
test
mov
mov
adc
adc
mov
movsb
cmp
enter
lock
je
cmc
aaa
mov
shl
iret
mov
nop
xchg
popa
pop
mov
ss
lcall
xchg
rcrl
mov
and
push
sub
xor
negl
inc
test
dec
stc
sti
test
cmp
xor
adc
or
mov
xor
ljmp
xor
enter
pop
aam
mov
cmp
jb
or
jo
ljmp
stc
movsl
adc
pop
inc
hlt
jbe
mov
cmp
push
and
xor
push
insb
popf
outsb
int3
sbb
jp
cmp
aad
ljmp
gs
sub
ja
push
or
mov
pusha
sbb
stos
shlb
outsl
mov
or
fbstp
jb
out
push
and
enter
lahf
ljmp
add
or
ds
jmp
pop
push
inc
pop
xor
mov
out
mov
andb
je
pop
cmp
imul
and
and
mov
daa
loope
js
out
push
jl
inc
mov
pop
pop
mov
call
cltd
pop
add
jns
xchg
loope
inc
faddp
add
add
and
cmpsb
xchg
jo
adc
inc
mov
push
pop
test
sub
pop
cli
add
mov
xlat
pushf
mov
leave
rcll
add
test
mov
push
jb
ret
push
jmp
and
mov
sbb
outsl
sbb
pop
fs
adc
mov
stc
lock
pop
ret
scas
sbbl
pop
lods
fimuls
add
nop
xor
inc
cmpb
in
xchg
cld
sbb
test
std
rolb
mov
xchg
sub
cmpsb
xchg
xor
xlat
jno
mov
test
shll
add
popa
dec
mov
mov
pop
inc
sbb
jae
adc
mov
adc
jmp
cmc
jne
add
ljmp
mov
inc
cwtl
sbb
nop
dec
movb
jo
cli
mov
push
push
aam
xor
ss
push
out
sti
lods
pop
flds
dec
cmp
imul
mov
xor
js
adc
mov
dec
mov
mov
dec
pop
fldcw
popf
add
or
jb
cli
mov
sub
push
cmp
loop
or
sub
std
out
dec
adc
sub
hlt
cmp
lret
add
push
adc
call
mov
fwait
inc
stc
cmpsl
and
add
add
fnsave
dec
jb
lcall
jmp
pop
lds
and
push
hlt
call
and
or
pop
xchg
cmpsl
or
clc
jae
movsb
mov
pop
or
jge
popf
ss
out
imul
pop
jae
repnz
mov
mov
in
inc
add
jecxz
sbb
adcl
jo
lds
mulb
shl
rorl
stos
fdivr
or
inc
xchg
dec
jns
rorl
mov
lock
push
ljmp
pop
repnz
cmpsb
scas
adc
pop
inc
ljmp
mov
cltd
add
inc
adc
gs
test
sub
sbb
mov
push
scas
jle
or
or
inc
jno
jbe
aam
push
xor
mov
sub
rcl
mov
stos
mov
adc
add
aad
jbe
cmpsb
stos
and
pop
cmp
icebp
push
adc
cli
cmp
pusha
adc
adc
ret
pop
jns
in
and
aam
or
cmp
xchg
mov
iret
xor
jle
iret
jmp
mov
bound
gs
jmp
das
mov
mov
ljmp
pop
test
pop
fadds
enter
xlat
adc
sbb
fstpl
lds
nop
loop
add
mov
data16
jg
sbb
jae
pop
cltd
adc
out
jge
push
inc
jle
sahf
jge
add
sub
push
mov
cmp
mov
fsts
cltd
push
loope
dec
adc
in
xor
repnz
push
pop
and
movsl
lret
push
addb
out
add
testb
pop
lcall
sbb
cmp
lods
out
mov
push
dec
sbb
fwait
test
enter
fldt
enter
xchg
mov
xchg
push
bound
sub
loopne
inc
cmp
dec
mov
and
xor
mov
xchg
movsl
push
dec
push
cmp
xchg
gs
das
mov
flds
loop
fsubp
mov
shlb
lret
xchg
sar
pop
xchg
mov
in
jne
loopne
sarl
jl
jecxz
jne
jb
shll
lcall
push
mov
sti
jo
sahf
push
jge
in
push
jne
dec
cmpsl
mov
cmpsl
mov
sub
imul
addr16
push
test
jb
xchg
sti
jl
xor
stos
dec
xchg
dec
aaa
mov
divb
xor
enter
insl
and
sub
in
repnz
pop
mov
loopne
loopne
pop
push
mov
test
inc
iret
outsl
ficompl
mov
mov
mov
sub
mov
pop
xchg
mov
hlt
sub
push
push
sub
jp
lret
mov
in
pop
xchg
out
pop
sarb
hlt
mov
or
push
ja
inc
push
mov
and
mov
das
mov
or
xor
and
shr
add
and
popa
mov
mov
jmp
xor
ret
cwtl
test
inc
xor
stos
and
mov
fildl
pop
popa
xchg
fwait
jecxz
xchg
sub
add
lahf
push
gs
mov
and
pusha
ljmp
fiadds
jmp
sbb
shrb
ror
sbb
mov
cmp
pusha
xor
fistpll
cmp
pop
jmp
icebp
pop
test
and
leave
rclb
lock
nop
and
enter
jbe
stc
or
sbb
inc
sub
push
push
fwait
xor
ret
imul
jbe
mov
icebp
mov
int
mov
dec
nop
adc
and
rorb
dec
add
push
inc
cmp
pop
daa
mov
xlat
push
adc
inc
or
cmp
push
lds
push
inc
test
and
sbb
cmpl
sub
xchg
insb
pop
mov
xor
mov
mov
mov
or
sbb
sarb
push
aas
lea
cmp
enter
insl
or
movsl
stc
sub
sub
mov
dec
ror
mov
rep
in
mov
cmpsl
xor
xorb
lahf
sub
ficompl
xchg
sbb
dec
stos
mov
inc
sbb
mov
or
test
lret
xchg
mov
ret
ret
and
sbb
ja
xor
in
lahf
ljmp
jb
pop
fnstcw
daa
dec
data16
cmpsl
iret
in
push
loopne
and
ljmp
sub
addr16
mov
sbb
test
pop
mov
mov
fsubrl
xchg
cmc
sub
add
sub
mov
cmp
push
and
cmpsl
or
paddusw
nop
in
movsl
mov
imulb
int
stc
cld
or
inc
adc
pushf
rcrl
xor
and
pushf
mov
lahf
push
neg
mov
pop
cmc
and
mov
pop
xor
push
into
add
hlt
sbb
xchg
into
jb
mov
es
clc
aad
push
jns
pushf
inc
dec
rol
imul
sub
jl
aaa
inc
mov
add
test
adc
test
repnz
adc
mov
dec
movsl
mov
addr16
in
cmpsb
add
mov
adc
or
add
jo
andb
sub
adc
fmuls
pop
fsubrl
bound
cmp
sbb
comiss
push
shlb
xchg
adcl
loopne
popf
and
or
xchg
xchg
dec
xor
mov
mov
popf
lea
jg
rcrl
pop
xor
push
mov
clc
cli
stos
push
jnp
jno
insl
out
lahf
xor
out
pop
dec
dec
test
repnz
pop
push
lahf
repz
roll
xor
mov
inc
adc
mov
fbstp
mov
xlat
mov
mov
sbb
test
jno
push
or
sbb
ret
jp
xchg
cmc
pop
ret
push
adc
push
mov
in
jg
or
testb
sahf
adcl
in
scas
jmp
xor
xor
sbbb
push
cmpsb
bound
mov
mov
push
leave
jmp
jbe
sbb
push
test
loopne
test
test
fs
movsl
jns
mov
pop
push
mov
adc
outsb
cmp
test
dec
xchg
testl
adc
jl
repz
and
mov
in
xchg
xchg
xor
sub
lret
push
push
sub
outsl
aas
pop
aad
xor
sub
dec
mov
sbb
ret
cmp
pusha
adc
jp
push
pop
decb
pop
sbb
pop
mov
sahf
stos
jl
sbb
push
adc
jae
and
scas
mov
xchg
xchg
cmp
pop
adc
imul
pusha
test
or
repnz
inc
push
sub
adcl
push
push
mov
pop
mov
in
bound
popa
cmp
mov
cmpsl
mov
inc
insb
shlb
test
cmpsl
loop
nop
jg
test
sbb
dec
jae
xor
add
or
imul
push
push
sbb
and
mov
pop
iret
jp
daa
jg
sub
movsl
nop
repz
cmpsl
push
jo
clc
imul
jp
test
rol
imul
jmp
add
fbstp
call
into
cs
mov
cmp
inc
jge
jne
je
pusha
jae
fs
cltd
mov
cmp
xchg
add
jl
cmp
lods
int
dec
mov
mov
jle
dec
fcompl
inc
mul
popaw
sbb
sub
xor
gs
mov
sbb
mov
mov
xchg
aad
lock
mov
push
and
fdivrs
dec
push
jge
shlb
mov
jle
pop
test
int3
sbb
in
test
mov
mov
mov
lods
and
inc
cmp
cmp
cld
leave
add
push
jb
push
cs
lcall
out
pop
sbb
mov
xor
leave
mov
cmpsl
movsl
aad
aaa
sahf
pop
dec
js
arpl
fs
movsl
sbb
cmp
sbb
or
test
cltd
nop
repz
or
adc
repz
neg
rclb
adc
mov
adc
test
cmpsb
or
jb
sbb
adc
or
cmp
std
cld
std
fwait
cmp
inc
imul
fldcw
out
jno
push
mov
mov
push
pop
cmp
mov
pusha
mov
test
dec
or
aas
decl
das
inc
jecxz
lret
add
cs
cld
cltd
aam
sarl
add
sbb
dec
xchg
icebp
addr16
cmpsl
pop
xor
sbb
repz
into
cmp
into
inc
xor
cmp
gs
std
mov
mov
outsb
mov
outsb
and
adcl
repz
and
loop
push
dec
xchg
xchg
lods
pop
inc
pop
mov
movsl
pop
lcall
mov
shl
push
stos
jge
dec
push
add
in
ffreep
mov
mov
dec
rclb
insb
sub
push
das
icebp
das
mov
xor
js
decl
out
cs
push
jne
push
andb
daa
add
push
xchg
data16
mov
push
xor
jb
shll
ja
adc
mov
push
push
gs
repz
fisubl
adc
sub
xlat
fwait
in
and
hlt
insl
notb
sub
aad
dec
jnp
xor
repz
inc
cmp
sarl
gs
inc
sahf
mov
push
and
adc
adc
scas
aam
inc
inc
outsl
and
pop
stos
mov
filds
ljmp
and
cs
jae
mov
aam
enter
mov
jecxz
sub
dec
movsb
xor
mov
sub
rcll
stc
stos
in
pop
mov
jge
jns
sbb
jecxz
add
stos
add
cli
loope
movsb
arpl
mov
xor
les
sti
xchg
sub
int
sbb
lods
std
jbe
cmpsl
push
cld
adc
iret
adc
add
daa
mov
pop
out
in
dec
idivb
xchg
pop
and
outsl
sti
jae
xchg
push
out
notb
mov
xchg
sbb
inc
adc
mov
data16
pop
or
int
cwtl
add
and
data16
xchg
xor
into
lds
fldcw
scas
push
sahf
sbb
decb
lcall
in
sub
add
mov
xchg
repnz
into
sbb
flds
aaa
or
xor
movlps
repnz
out
popa
cmp
sbb
push
aaa
lods
pop
cmpl
decl
imul
imul
out
or
dec
andl
jne
dec
std
jp
pushf
into
fsubrs
arpl
in
sti
inc
jno
gs
in
push
xor
push
aad
cltd
jne
arpl
jecxz
cmp
push
stos
dec
clc
pop
add
push
ljmp
popf
xchg
fwait
cli
jne
jno
mov
mov
push
repnz
sbb
jg
test
mov
in
and
adc
daa
insl
sbb
cmp
and
add
lods
je
pop
adc
enter
mov
mov
adc
out
adcb
mov
in
lea
jmp
push
pop
int
add
mov
mov
js
int
repz
jg
push
add
xorb
push
clc
test
and
push
mov
cmc
cmp
adc
xchg
and
loope
jp
and
jns
and
jnp
pop
lods
pop
mov
out
cmpl
imul
push
adcb
cmp
jne
sub
sbb
mov
mov
jmp
push
insl
insl
xchg
push
sbb
inc
cmpsl
jae
pop
out
mov
and
fs
jge
push
add
rorl
mov
push
inc
mov
lea
hlt
faddl
insb
or
pop
xchg
or
dec
aaa
push
inc
mov
leave
dec
cwtl
push
add
loop
add
pop
testl
or
cmp
call
push
and
jle
push
sbb
jbe
lcall
out
add
xchg
das
adc
add
pop
jne
int
lret
pop
add
xor
cmc
data16
jl
lret
dec
add
les
rcrl
dec
adcl
mov
jecxz
cmp
out
pusha
pop
mov
sbb
or
push
addr16
in
lahf
sub
aad
out
in
movsl
cmp
mov
jge
mov
adc
and
fcmovu
add
pop
lods
push
icebp
in
lods
jne
insb
push
mov
or
push
aad
sbb
inc
ljmp
rcl
int3
xchg
mov
fwait
push
rcl
xchg
jbe
lds
pop
stos
jb
in
xchg
xchg
mov
ror
xchg
clc
inc
mov
sub
idivb
and
cld
fisubl
mov
jge
lock
sub
inc
cmp
sar
jecxz
push
xor
sbb
clc
outsb
sahf
adc
or
xorl
sub
stc
xor
lds
inc
jmp
add
xchg
xchg
xchg
sbb
or
aad
repz
punpckhbw
push
pop
rclb
or
sbb
cld
data16
or
jp
rorl
test
test
pop
dec
aam
mov
push
stos
addr16
mov
mov
mov
test
add
push
jb
or
pop
jns
sub
popa
add
addl
mul
cmp
mov
je
pop
sbb
inc
movsl
jns
ja
dec
xor
outsl
xchg
dec
pop
pop
xchg
xchg
cmc
mov
mov
out
arpl
stc
push
add
pusha
and
fcompl
lret
adc
movsl
adc
mov
sbb
lock
stc
inc
rcll
push
cwtl
sbb
filds
filds
insl
hlt
sbb
test
popa
xor
sub
xchg
add
jne
call
or
pop
cmpsl
lret
ss
pop
mov
xor
cld
test
scas
xchg
mov
push
lock
jg
push
mov
jae
and
ja
sub
mov
fstpl
lahf
lds
or
or
mov
adc
dec
adc
pop
add
lret
or
out
ja
xor
sbb
das
jae
leave
adc
cmpsb
int
jl
insl
pop
pop
cwtl
pusha
imul
lock
ja
push
mov
movsl
jne
and
mov
nop
inc
es
shll
sub
xchg
cmp
sub
push
aaa
enter
sbb
or
jge
insb
repz
fistl
cltd
or
jnp
ss
iret
cmp
sarl
mov
mov
push
out
sbb
lea
jecxz
or
lods
shll
mov
jecxz
lods
sub
mov
es
push
and
gs
int
cmpsb
jno
outsb
ret
imul
dec
push
mov
int3
fcmovu
sahf
jbe
adc
xchg
xlat
dec
pushf
cmc
mov
push
xchg
cwtl
and
insl
inc
nop
pop
rcl
lret
inc
popl
sub
mov
out
stos
lret
fwait
ljmp
add
lahf
mov
pop
fdivr
dec
inc
mov
jnp
loopne
or
inc
testl
mov
jmp
pop
fcomip
insb
dec
notb
lcall
shlb
rclb
add
js
loopne
jg
or
cmp
inc
cmp
inc
jne
leave
add
iret
ja
pop
add
icebp
pop
push
call
mov
les
cmp
lret
cmp
add
in
dec
aam
ja
add
mov
xor
fldcw
sbb
ss
mov
jge
fbstp
sbb
dec
jmp
jmp
mov
push
repnz
mov
fcomp
lds
push
pop
dec
sbb
aad
xor
xchg
cmp
push
in
adc
je
rorb
outsb
ss
inc
add
out
or
jl
insl
jp
push
mov
push
mov
loopne
lcall
mov
aas
loop
pop
pop
fcomps
pop
xchg
xchg
inc
adc
mov
push
call
adc
or
adc
fcoms
stc
test
lea
mov
jae
xchg
les
testl
cltd
push
mov
inc
sbb
and
add
arpl
stc
cmpsb
sti
scas
ds
aas
xchg
sbb
cmp
or
leave
int3
xchg
das
popa
mov
pushf
inc
cs
pop
xchg
stc
mov
pop
mov
cmp
xchg
sub
jbe
lret
push
xchg
js
jl
xor
push
outsl
cs
sbb
pusha
jnp
movsw
jnp
imul
jne
out
jle
mov
sti
lds
fnsave
loope
sbb
outsl
inc
dec
and
or
ffree
outsl
movsb
mov
fistps
jo
mov
pusha
jb
stos
xorl
mov
jb
dec
add
xlat
mov
push
lret
mov
mov
cwtl
insl
push
jmp
add
lret
dec
es
push
inc
js
popf
dec
add
xchg
xor
adc
mov
rcrl
dec
or
mov
cmp
mov
test
outsb
sbb
movsb
call
inc
fldl
aam
xchg
xlat
in
stc
sbb
mov
jl
jb
aam
shlb
pop
jp
jmp
adc
pop
xlat
popf
sti
push
outsb
mov
and
ja
or
mov
pop
sbb
xchg
int
out
rcr
jge
or
or
imul
sub
cmc
lds
or
xchg
js
jge
mov
jle
outsb
sbb
sub
and
lods
insb
lcall
cld
xor
mov
loopne
outsb
add
pop
jmp
and
repz
inc
cmp
and
push
push
in
ffreep
sbb
push
jl
xchg
and
test
mov
idivb
test
push
in
pop
outsb
dec
jno
imul
mov
out
inc
data16
cmpb
sbb
sub
lea
dec
or
std
sbb
push
sbb
pop
sbb
dec
adc
ret
mov
outsl
sbb
stos
adc
inc
in
pop
fld
jmp
mov
stos
loop
xor
mov
push
repnz
sub
popa
mov
inc
dec
inc
sub
ret
inc
in
push
mov
cmpsb
sbb
sub
lds
fiadds
addr16
dec
and
mov
pop
jmp
pop
mov
or
dec
sti
in
enter
sahf
in
arpl
stc
test
repz
cmp
scas
sub
into
ret
mov
lret
pop
jb
jne
mov
dec
mov
mov
or
xchg
insl
nop
pop
mov
sub
std
mov
mov
jp
push
mov
ja
adc
push
adc
lcall
gs
test
mov
pminsw
jno
xchg
into
js
sub
cmpsb
fidivl
arpl
pop
jecxz
mov
jl
je
lcall
add
jo
shr
pop
pop
mov
lret
out
aaa
fstp
inc
sub
fs
or
or
inc
in
inc
inc
or
push
roll
stos
ror
lods
stos
mov
jle
scas
xchg
push
imul
jle
shlb
in
and
repz
jns
pop
sahf
push
lods
insb
cmpsb
pusha
mov
movsl
lcall
jbe
sbbl
fs
in
jg
mov
scas
jg
mov
ds
sub
mov
lock
jbe
pusha
mov
adc
pop
add
lret
add
inc
add
int
mull
out
rcrl
ret
sbb
inc
cmp
mov
jae
lock
pop
ljmp
into
loop
ljmp
fwait
jg
gs
hlt
inc
xor
xor
mov
aas
xor
loopne
sahf
leave
insl
rcrb
inc
add
out
test
fistpll
and
and
cmp
mov
or
lock
jp
push
jns
pop
sub
add
ficoms
lds
shlb
dec
dec
push
dec
jmp
fidivs
pop
add
xchg
adc
or
cmp
outsb
push
ds
sub
into
rcrl
cmp
sub
movsl
mov
in
lea
xor
jle
mov
mov
mov
xchg
mov
fldcw
cmpsl
sbb
pop
fs
ss
or
xchg
inc
pop
inc
xchg
sub
outsb
rol
inc
cmpsb
in
ds
loopne
je
sti
in
ja
icebp
out
inc
addr16
mov
mov
aas
pop
push
cmc
sbb
hlt
imul
outsb
ret
and
fmuls
decl
dec
lret
push
jmp
js
pop
int3
sub
sbb
mov
movsb
out
cmpsl
push
stos
add
inc
dec
xor
aad
and
out
xchg
or
nop
std
jg
lcall
pop
testb
cwtl
pop
loopne
aad
inc
xor
movsb
mov
icebp
lret
sub
pusha
fisttps
mov
xorl
leave
pop
ds
ss
add
xchg
stos
rclb
mov
adc
push
cmp
outsb
mov
xor
je
add
stc
adc
xchg
iret
fnsave
sub
xor
adc
fisubl
std
leave
or
loopne
mov
aaa
fsubrs
pop
push
dec
add
adc
ljmp
jne
mov
mov
daa
sbb
addl
js
int3
xchg
xor
popf
fstpl
in
aas
in
dec
jg
filds
test
xchg
push
jnp
in
lret
mov
leave
mov
int3
xchg
or
or
js
dec
pop
xchg
jmp
inc
inc
mov
mov
mov
push
or
rcl
push
js
or
pop
int3
popa
mov
jo
cmp
dec
adc
jmp
loopne
ror
sahf
mov
inc
pop
lods
pop
sub
push
int3
cmp
subl
cmp
daa
loope
fwait
stos
lods
out
sub
and
pop
and
lret
dec
js
add
out
mov
flds
push
out
add
mov
inc
pop
call
icebp
mov
fiaddl
pop
push
icebp
loope
mov
lods
nop
std
cs
push
mov
jo
dec
lcall
pop
or
test
mov
dec
inc
pop
in
sub
test
lock
mov
cmp
sbb
xchg
in
cmpsl
or
bound
cmp
out
out
aaa
orb
out
movsb
push
cmc
dec
xor
fisttps
aaa
pop
xor
fmulp
add
std
in
mov
inc
mov
cmp
shrb
cmpsb
mov
sti
rorl
mov
pop
es
pop
je
xorb
mov
mov
or
jns
hlt
xchg
or
aaa
push
lret
and
xchg
jg
xchg
or
insb
sbb
xchg
in
jb
ljmp
pop
mov
std
stos
lock
out
push
push
loop
adc
xor
mov
pop
xchg
je
xchg
repnz
imul
fnstsw
stos
movsl
push
or
lcall
sub
aas
pop
push
addl
inc
lea
dec
pop
mov
in
js
sub
cmpsl
and
sbb
xor
fisubrs
aam
fbstp
mov
push
rol
xor
ret
mov
jle
into
lds
xchg
sarl
pop
adc
sahf
and
xchg
inc
push
gs
in
and
push
popf
paddd
jnp
jp
psllq
lret
cmp
outsb
xchg
es
cmc
mov
mov
mov
inc
cmp
es
ret
and
xchg
sub
roll
rolb
mov
lea
pushf
jg
push
xchg
aaa
adc
fsts
adc
cmp
xchg
ret
imul
push
fisubs
andl
xchg
push
and
or
call
iret
ret
dec
out
dec
dec
ret
insb
and
dec
ficoms
push
inc
movsb
outsl
pop
jecxz
aas
jl
in
mov
mov
call
into
lret
or
xchg
add
xchg
adc
aam
fiadds
mov
call
in
pop
xor
push
jno
or
mov
pop
mov
rcrl
xchg
insl
mov
subl
and
adc
pop
xchg
lahf
jo
sbb
xchg
es
cmpsl
into
arpl
je
sbb
data16
in
or
lcall
aas
pushf
xlat
roll
pop
movsl
sbb
mov
sahf
xchg
pop
and
cmp
out
mov
insl
mov
pop
notl
imul
cmp
inc
std
or
fs
sbb
aas
adc
movsl
xchg
push
push
pop
ret
xchg
mov
or
out
mov
iret
mov
jnp
cltd
sub
into
adc
push
or
out
iret
push
jge
and
pop
sbb
fists
leave
mov
dec
jnp
pop
cmp
out
xchg
mov
add
movsb
sub
in
jns
out
test
push
push
xchg
lods
aam
nop
cmc
test
add
sub
testl
lods
das
movsl
jp
shrl
or
dec
jle
dec
mov
ret
mov
mov
jmp
jl
scas
cli
rcr
repz
inc
out
rcrb
xchg
in
xor
ds
arpl
in
push
js
icebp
pushf
cmp
pop
mov
je
or
mov
aad
dec
or
test
outsl
push
clc
add
and
test
call
xor
mov
mov
call
push
rcl
jns
mov
dec
lret
ja
aad
mov
push
je
add
mov
rorl
jp
dec
ret
jle
jp
mov
sub
and
mov
stos
mov
or
adc
mov
out
inc
stos
xchg
dec
fs
call
fmull
xchg
rcrl
xchg
mov
xor
push
es
mov
sbb
mov
out
mov
in
xor
mov
mov
jne
mov
adc
mov
xorb
leave
stos
push
arpl
test
ret
and
insl
or
subb
lcall
and
and
pop
mov
push
outsb
outsb
popa
sbb
jnp
jmp
loop
movsl
inc
mov
daa
push
mov
ficompl
xchg
data16
inc
imul
daa
inc
or
cmc
pop
mov
lods
call
popa
cld
pop
dec
jl
enter
mov
add
ret
xchg
mov
clc
xor
dec
in
out
pop
iret
adc
sub
ret
sbb
rcll
or
cmc
aas
and
rcll
les
and
ds
insb
loope
xor
and
idivb
sahf
inc
ficompl
mov
push
jl
and
mov
maskmovq
mull
test
mov
cmc
mov
push
arpl
xchg
dec
add
or
add
cld
mov
repnz
jbe
daa
xor
lahf
inc
dec
pop
shlb
mov
int3
fstpl
call
xor
cwtl
ds
repz
arpl
aam
in
sbb
scas
nop
dec
rolb
xchg
ret
xor
inc
shlb
dec
and
roll
out
in
fbstp
in
pop
fdivrp
arpl
xor
dec
adc
repz
movsb
roll
jmp
lret
dec
inc
mov
and
pop
and
sbb
push
lahf
arpl
pop
loopne
pop
daa
pop
arpl
adc
push
add
ficoms
cwtl
insb
xor
xor
in
inc
mov
rolb
mov
or
pop
sub
sbb
mov
inc
out
mov
cmp
mov
fnstcw
add
lock
dec
jnp
int
jo
sahf
sub
adcl
setns
cltd
mov
aam
adc
movl
cmp
sahf
jmp
push
movsb
adc
push
bnd
xor
das
popa
call
pop
inc
je
lret
jbe
push
sbb
adc
push
jae
mov
mov
xchg
ds
cmpsl
push
mov
push
xor
jmp
aam
icebp
rcl
or
shll
cld
add
jnp
fistps
jae
add
dec
fsts
pop
scas
lods
or
cmp
jmp
sub
cltd
sbb
loope
stos
sub
cld
push
int3
sbb
mov
int3
add
and
fcomp
sbb
pop
or
mov
inc
test
xor
pop
ja
lcall
and
or
xor
imul
movsb
cld
fisubrl
pop
arpl
pop
mov
shrl
mov
enter
sbb
sahf
xchg
pop
mov
sti
sbb
xchg
idivb
dec
and
inc
out
jbe
or
out
enter
sub
xchg
cwtl
mov
jb
sbb
mov
mov
push
mov
neg
mov
test
fdivs
xchg
mov
jbe
inc
lret
xor
addr16
cmp
mov
jb
lahf
je
pop
repz
inc
mov
orl
test
aam
shl
sbb
cltd
clc
sbb
push
dec
inc
mov
push
in
and
adc
jp
into
push
cmpsl
repz
rcrl
jmp
clc
adc
cltd
cs
movsb
adc
cmpsb
test
fcmovbe
roll
ret
leave
mov
xchg
add
adc
cmp
lahf
cmp
insb
sub
mov
je
punpckldq
aad
mov
test
leave
jo
std
bound
mov
scas
mov
je
dec
or
daa
je
aad
xor
iret
inc
and
jp
or
lahf
mov
xchg
xor
sarb
sbb
icebp
cld
dec
cmp
js
push
popf
and
gs
sbb
leave
mov
sbb
or
xor
ljmp
lret
mov
jmp
or
aam
cmp
xor
fsub
movsl
cmpsl
xchg
sbb
xchg
sub
in
jb
jecxz
stos
lea
mov
sbb
add
jne
divl
out
lock
push
inc
and
add
xchg
inc
into
ficoml
or
mov
xchg
inc
cwtl
rorb
jecxz
outsl
xor
dec
rcrb
and
push
rclb
push
jl
scas
jns
mov
push
or
into
pop
jbe
mov
adc
pop
jne
xor
xchg
lea
cli
cmpsb
mov
lds
in
insl
inc
add
pop
cmp
cmp
cld
dec
cmp
lods
push
fdivr
arpl
imulb
mov
cwtl
pop
pop
in
dec
pop
xor
les
sbb
xor
dec
push
outsl
adc
sbb
jmp
lea
hlt
sub
push
inc
cmp
or
lods
or
sbb
mov
std
sub
iret
aas
jae
cmp
stc
jne
repz
mov
je
cltd
enter
inc
je
sets
stos
fmul
add
sbb
mov
jbe
sub
pop
inc
test
lods
nop
dec
popa
inc
sub
scas
xor
or
jge
fcmovnb
adc
lret
add
push
out
cmc
stc
in
add
or
inc
add
insl
mov
cmc
xor
fwait
push
lods
add
push
sub
push
push
pusha
xlat
jo
xor
out
jmp
pop
mov
fs
insl
jmp
adc
ljmp
in
dec
js
mov
aas
outsl
jo
imulb
inc
dec
idiv
xchg
adc
push
push
ret
ss
adc
test
jno
xor
inc
insb
lock
std
mov
cld
xorl
push
cmp
fs
jo
push
push
fst
outsb
pushf
xchg
pop
fmull
jge
xor
stos
ja
push
push
test
mov
imull
xchg
xlat
incb
push
insl
in
lret
bound
out
dec
cmpsl
add
adc
mov
adc
or
mov
pushf
or
rorl
sbb
in
add
cmp
or
sbb
mov
pop
cltd
dec
pop
mov
push
ret
dec
pop
pushf
icebp
xchg
into
pushl
enter
mov
inc
fstpt
push
pop
std
or
outsl
pop
mov
dec
mov
cmp
mov
sbb
adc
loop
add
stos
mov
xor
sahf
mov
mov
scas
in
mov
sbb
xchg
lods
push
aas
dec
icebp
out
mov
mov
push
mov
mov
cltd
xor
ja
test
pushl
pop
sbb
pop
clc
pushf
leave
pop
testl
cmp
push
dec
test
dec
imul
int3
and
mov
out
sbb
dec
dec
pop
dec
stos
lods
enter
insb
push
push
sub
xchg
adc
push
jbe
repnz
add
shrl
or
movb
sti
mov
roll
push
cwtl
xchg
dec
ret
and
gs
pop
sbbl
dec
addr16
fs
das
sahf
add
dec
cwtl
jae
in
push
outsl
inc
aas
jo
push
orb
movsb
push
pop
inc
inc
idivl
movsb
hlt
cli
adc
sti
fsubr
push
iret
dec
sbb
fisubrl
dec
shl
sub
fnstenv
stc
pop
mov
lds
mov
fildl
pusha
push
pop
sbb
inc
dec
loopne
xchg
xchg
adc
adc
cmpsb
cmpb
cmpsb
jg
xor
es
xor
std
pushf
add
test
jnp
std
daa
jo
push
jns
jmp
fisubl
fdivp
jns
cmpsl
cmp
loope
ds
push
and
mul
test
mov
loope
inc
stc
addr16
ret
iret
jge
sar
fwait
insb
pop
ret
push
bound
enter
stos
or
orl
cmpsb
fidivrl
lahf
fimuls
cltd
push
fsub
lock
mov
ret
sbb
fs
lcall
adc
and
je
daa
lea
mov
lret
adc
sbb
lret
add
mov
xchg
mov
pop
rorb
adc
mov
sub
call
pop
jnp
adc
pop
sarb
sub
mov
divb
xchg
mov
test
movsb
cmpl
pop
adc
cli
lds
mov
ret
sub
js
inc
inc
test
clc
inc
clc
cli
addr16
xor
imul
nop
std
ret
ljmp
stc
xor
mov
ret
test
movsl
sub
pop
ss
mov
loope
fidivrs
rclb
cmp
inc
adc
mov
inc
in
push
cmpsb
xchg
insl
jecxz
sub
test
movsl
jns
pop
out
mov
jge
and
imull
into
hlt
dec
pop
pusha
or
out
test
pusha
cmpsb
cmp
adc
jle
les
outsb
in
mov
mov
mov
sbb
pop
les
fwait
dec
arpl
std
aaa
sub
enter
paddb
cli
push
sti
and
mov
jmp
mov
cmp
arpl
scas
loop
gs
jne
es
aas
roll
inc
fcmovnbe
cmp
pop
pop
lds
xchg
xchg
call
shlb
insb
push
jbe
cwtl
mov
add
jg
fcomps
cld
mov
je
push
js
push
mov
adc
inc
sbb
data16
cld
pusha
xchg
lret
dec
push
xchg
sbb
inc
sbb
pop
leave
hlt
pop
int3
fwait
cmp
cmc
add
enter
mov
mov
subb
jmp
push
add
push
jge
push
pop
lock
fidivrl
ret
test
sub
fwait
lock
or
jb
popf
jne
popf
std
int
push
shl
sbb
in
icebp
jle
leave
dec
xchg
in
lret
adc
cmp
inc
pop
bnd
lock
stos
cli
add
mov
pop
add
lock
popa
mov
push
fst
xor
pusha
fdivrl
mov
mov
mov
mov
lret
or
mulb
jl
push
cmp
imul
int3
inc
jle
mov
stos
add
shll
cli
cmp
fwait
jbe
jp
inc
fstps
shr
dec
jecxz
adc
jle
xor
cltd
jo
cs
fdivp
jbe
push
loop
push
jmp
pop
mov
call
and
inc
ss
adc
mov
pushf
and
inc
jne
daa
jmp
add
cmp
out
addb
pop
repnz
std
out
inc
adc
dec
sahf
or
sahf
je
dec
inc
lret
out
call
shrb
xchg
xchg
xor
mov
insl
and
adc
js
in
call
adc
and
pop
cmp
pop
mov
daa
push
jns
fistps
sub
lds
sbb
pop
adc
pop
or
push
pushf
fdivs
push
sbb
mov
cltd
popf
jae
adcl
cmp
pop
jmp
inc
adc
inc
lret
testl
sbb
ficoms
orl
rcr
mov
jecxz
mov
leave
sti
test
mov
into
dec
test
lea
pop
dec
add
aad
fiadds
lds
xor
cmp
in
adc
lea
and
ret
orl
lcall
and
shll
push
pop
pop
cmp
and
sub
inc
repnz
lcall
cli
scas
push
adc
dec
imul
xor
pop
sbb
xchg
xchg
jne
and
mov
lods
add
je
jnp
dec
or
call
addl
mov
cmp
adc
cmc
out
arpl
in
cltd
jbe
mov
mov
lcall
jbe
xor
push
mov
mov
mov
test
dec
cli
sahf
sub
mov
pcmpeqd
push
mov
mov
xchg
push
cld
dec
fidivl
std
cs
rolb
into
fcompl
loope
sti
mov
div
lcall
sarl
shrl
jnp
rcl
mov
nop
dec
neg
cli
xchg
pop
imul
and
push
das
loope
cltd
popf
fldenv
push
inc
leave
outsl
xchg
jp
cmp
sti
test
xor
movsb
out
cmp
ljmp
bnd
test
leave
mov
ret
aam
dec
loope
mov
sbb
shl
mov
jecxz
mov
scas
ret
add
mov
es
or
sahf
fcmovne
push
mov
jmp
addr16
ja
ja
mov
jge
aam
or
scas
mov
imul
shl
sahf
xlat
call
shr
sub
jo
fisubl
jb
inc
lods
or
xchg
xor
jle
or
aad
arpl
jne
mov
mov
inc
fdivl
pop
mov
gs
mov
repz
stos
jg
mov
mov
mov
cld
addr16
mulb
imul
mov
inc
or
mov
jmp
scas
ss
cmp
dec
mov
push
ret
fwait
mov
cmpsb
hlt
jne
mov
fisttpl
mov
mov
sub
iret
xor
fisttpll
and
xor
xchg
into
ljmp
jne
sub
xchg
cmp
xchg
subb
mov
inc
mov
dec
mov
push
addr16
movsl
lock
and
out
ss
sbb
popf
pop
stos
push
in
xchg
jae
fidivrl
sub
sahf
into
adc
das
xor
mov
xor
test
sbb
outsb
adc
add
push
outsl
aad
mov
sub
leave
push
pop
push
arpl
mov
notb
sbb
jmp
add
xchg
inc
popa
loope
lahf
outsb
pop
fs
inc
xor
aad
fsubrl
adc
daa
loop
or
lahf
movsl
loop
test
lret
cmpsb
cmp
jp
sbb
cmp
mov
shrb
popa
mov
daa
bound
stos
repz
repz
mov
push
icebp
push
push
pop
fidivrl
cmpsb
cmp
sbb
or
loop
in
fwait
adc
push
fcmovnb
xor
pop
repnz
add
hlt
mov
orl
jmp
inc
dec
dec
sub
jg
push
or
fcos
or
mov
sub
shrl
stos
je
outsl
jp
ss
lods
add
out
mov
cltd
lods
dec
sub
pop
mov
mov
sub
loope
jnp
mov
jecxz
add
sub
aam
mov
push
xchg
pop
jl
inc
jl
fwait
das
add
pop
in
stc
mov
adc
mov
js
mov
or
stc
and
loop
cmp
add
cmp
or
push
sbb
fsubl
sbb
test
aam
lret
test
jb
push
popa
clc
daa
adc
es
xchg
inc
repz
lods
or
dec
jmp
cmpsl
sbb
sbbl
xor
mov
scas
jmp
or
je
icebp
mov
arpl
sahf
scas
popa
dec
jge
or
or
or
jle
mov
pushf
aad
dec
mov
inc
jge
sbb
dec
adc
mov
loope
imul
loopne
insb
nop
sbb
cmpsb
xchg
xchg
jb
aas
inc
dec
nop
hlt
pop
pop
xchg
repnz
mov
aaa
push
dec
sub
sub
dec
fsubrp
out
inc
mov
fstl
jb
insb
cmp
ss
push
arpl
inc
in
jns
pop
popf
cmp
cmp
shlb
or
sbb
or
movsl
sub
dec
push
mov
add
pop
stc
out
jp
pop
fucom
sub
gs
flds
mov
repz
push
orb
xchg
cmp
clc
add
fisttps
add
aaa
jne
loopne
jl
int
mov
or
jnp
sub
cmp
xchg
insb
insb
inc
mov
dec
loope
das
mov
inc
cmp
xor
orl
or
cmpl
fdivl
adc
mov
mov
test
dec
jle
outsb
add
sbb
lahf
jns
out
adc
mov
mov
add
out
out
pop
fnstenv
std
fsubrs
sbb
clc
out
arpl
pop
test
ja
dec
sbb
jo
inc
add
xchg
and
jmp
push
sub
loopne
cltd
xlat
lret
setge
push
std
jge
aas
mov
or
lea
ja
cmp
add
mov
fwait
xchg
out
add
ret
push
push
adc
arpl
push
aaa
pushf
test
jmp
pop
ret
or
mov
and
fiaddl
lahf
scas
add
jecxz
outsb
mov
ret
xor
jg
punpckhwd
add
lret
dec
fwait
or
mov
sahf
rol
lret
rorl
dec
jge
rcrl
mov
push
cmpsb
pop
rorb
bound
mov
std
mov
insl
popa
jmp
je
sub
scas
test
mov
xor
xor
or
xor
test
insl
jnp
out
dec
jmp
mov
sbb
lret
cmp
lret
cmpsb
sbb
lahf
lret
inc
imul
popf
out
lret
shll
dec
fdivl
insb
xor
jns
sub
sub
jmp
pop
sub
fimuls
imul
jno
jmp
xchg
fnstsw
sbbl
lcall
mov
mov
xchg
test
adc
cld
mov
sbb
sbb
cmpsb
ret
jo
xor
cmp
test
insb
jo
push
int3
jne
pop
out
out
xchg
scas
arpl
movsb
ret
mov
mov
inc
lods
loop
add
mov
pop
lea
mov
or
shl
xchg
int3
or
dec
xchg
daa
add
icebp
inc
leave
mov
cmpb
int
fldcw
daa
andb
and
dec
and
xor
adc
xchg
inc
push
movsl
inc
jecxz,pt
jg
cld
lret
sub
ja
xchg
out
js
lods
xlat
mov
xor
mov
mov
mov
dec
mov
andnps
testb
xor
ret
mov
mov
cmpsb
mov
pop
or
push
data16
hlt
push
and
cwtl
inc
popa
imul
roll
sbb
cmp
xor
inc
inc
ds
jg
cmp
fisubl
pop
mov
cld
push
mov
mov
push
leave
mov
fcmovb
cli
mov
pop
jge
jb
popa
jmp
push
push
push
xor
or
and
scas
pop
sub
dec
add
push
fnstcw
dec
movsb
int
andl
outsl
cmp
push
incl
enter
mov
jmp
dec
pop
pusha
jp
jl
shll
sti
mov
sub
sub
fwait
stos
mov
or
xchg
fiadds
pushf
and
inc
rorb
loop
and
imul
cmpsb
dec
lret
sahf
in
dec
push
xchg
ret
mov
loope
cs
outsl
lods
movsl
or
jge
dec
hlt
cmp
mov
mov
jmp
out
sbb
xor
sahf
fistpl
sti
and
push
test
dec
mov
hlt
das
pop
and
lret
flds
dec
out
scas
pop
sbb
mov
gs
xor
stc
mov
mov
xchg
js
xor
push
ja
xchg
cmpsb
cmpsb
inc
and
insl
and
xchg
mov
add
addb
lea
mov
rclb
mov
jno
dec
xor
cmc
jne
outsb
mov
xor
pop
jb
lret
and
xchg
push
lock
jns
test
sub
lret
rcr
mov
mov
outsl
je
pop
daa
lret
jns
sub
add
add
jl
clc
out
adc
psubsw
jl
pop
mov
jg
xchg
xchg
cwtd
jp
mov
enter
or
ja
cmpsb
subb
ljmp
mov
lds
add
jmp
adc
scas
xchg
push
inc
int3
jle
push
xchg
cmc
lea
inc
push
dec
enter
jbe
mov
movsb
rcll
fstpt
outsl
fcmovnu
sbbl
fidivrs
sbb
cmp
sbb
and
into
movb
adc
xchg
insb
aam
ss
mov
pushf
pop
fisubrl
shlb
sbb
push
sub
ss
sub
test
scas
lahf
push
out
push
pusha
leave
popa
jg
fcomps
fadd
loope
bnd
push
mov
inc
je
in
dec
and
inc
loop
mov
mov
push
ljmp
dec
popa
mov
and
sub
push
aam
add
and
and
jns
jo
mov
imull
cwtl
and
adc
mov
fld
mov
adc
mov
pop
mov
mov
roll
lret
cmp
sarl
sahf
arpl
les
xchg
sbb
lret
xchg
sbb
jb
test
in
jae
lea
insb
or
pop
lods
jg
addb
or
pop
fmuls
filds
addl
les
iret
movsb
cwtl
push
or
daa
jae
les
push
push
addr16
mov
lods
mov
nop
mov
in
aas
insl
out
adc
enter
clc
test
xchg
pop
and
sbb
mov
mov
pop
movsb
rcrl
fs
std
jo
mov
xchg
notb
xor
orb
lcall
loop
add
dec
dec
xchg
push
das
lret
je
ret
and
xor
sub
out
fiaddl
mov
shll
out
jecxz
xchg
adc
dec
cli
lock
aas
inc
jg
jmp
test
ja
hlt
call
and
ljmp
sub
in
sub
adc
xchg
add
enter
xor
or
adcb
aas
hlt
repz
pop
and
cmp
xchg
jg
jb
add
push
dec
mov
push
repnz
movsb
pop
lea
cmp
add
cmp
ljmp
xor
aaa
push
jae
int3
jl
rcrb
in
movsl
mov
hlt
out
mov
xor
cmp
and
out
int
and
add
maskmovq
idivl
into
enter
jmp
je
ret
call
dec
test
jg
xor
xor
jmp
insl
stc
dec
xchg
push
inc
sti
insl
xchg
fs
xchg
and
stc
cmp
pop
mov
mov
mov
out
xchg
pop
dec
sahf
sub
mov
cmp
pop
add
and
xor
pop
leave
in
mov
cmp
or
imul
lea
pop
xor
aaa
ss
pop
lcall
or
in
lods
mov
test
mov
fsubl
sbb
ds
rol
cmc
sbb
adc
xchg
andb
inc
repnz
pause
imul
outsb
rcrl
push
hlt
mov
movq
and
xor
int3
or
mov
pop
xor
pop
dec
mov
or
stos
push
int
loope
push
add
fists
sbb
shll
bound
mov
lock
inc
xor
add
pop
repz
mov
in
aad
inc
sti
inc
sub
jo
into
pop
loope
pop
pop
or
daa
arpl
fistpll
push
mov
xchg
push
repz
pop
jne
stos
and
les
mov
lahf
xor
sbb
mov
add
aam
adc
std
add
std
add
pop
call
dec
jle
push
test
lea
imulb
sub
fadd
mov
je
aas
jge
sti
out
jmp
pop
test
outsb
push
dec
addb
inc
mov
lock
bnd
test
mov
xor
mov
sub
dec
repz
icebp
xchg
jge
rclb
inc
or
scas
sbb
adc
xchg
mov
fwait
push
and
outsb
into
test
subl
xor
leave
ds
mov
stos
jb
push
cs
out
jmp
outsb
mov
das
or
inc
push
and
xor
adc
pushf
and
xchg
add
inc
mov
inc
sub
rclb
and
adc
dec
xlat
mov
into
movsb
and
and
and
jecxz
sub
push
push
insl
inc
sbb
jp
push
orl
popa
sahf
es
push
loope
cmpsb
mov
mov
outsl
jecxz
xor
in
cmc
aaa
pushf
cld
mov
test
push
stos
pushf
enter
or
cld
or
out
out
faddp
jo
mov
test
pushf
fbstp
mov
aas
lods
sbb
lret
or
pop
xor
dec
add
mov
test
gs
inc
mov
cs
fdivl
lods
sub
outsb
push
and
pop
call
pop
loopne
fcomi
sub
or
imulb
add
cmc
or
sub
je
and
dec
ret
jno
xchg
adcl
addr16
push
je
enter
bsr
dec
inc
adc
aaa
scas
cmp
cmp
sub
or
jp
fisubl
fiaddl
pusha
pop
dec
scas
sbb
mov
sub
jp
dec
cmp
enter
pusha
pop
test
dec
jg
inc
mov
test
dec
cltd
cltd
lcall
cmp
xor
and
mov
test
pop
in
ds
push
daa
fldcw
icebp
or
insb
inc
sub
or
clc
mov
xchg
cmp
or
lcall
mul
dec
int3
jo
dec
pop
ljmp
icebp
or
lock
subb
hlt
icebp
int
mov
or
icebp
cmp
sbb
mov
cmp
mov
mov
and
xchg
stos
aaa
jo
loope
icebp
arpl
es
xchg
xchg
push
in
sub
and
cmp
dec
das
jb
hlt
testb
rcl
fildl
cld
jae
xchg
movsl
sub
cmp
mov
cmc
dec
sub
ljmp
rcll
cltd
add
push
gs
in
mov
scas
sbb
cmpl
loopne
jmp
sbb
or
or
jmp
fidivrs
mov
pop
and
jp
xchg
mov
push
mov
inc
stos
inc
xchg
mov
je
pop
dec
aas
mov
inc
ss
mov
out
mov
std
sbb
scas
and
lahf
sbbl
decb
xchg
and
cmp
xor
jle
cmpsl
aas
in
mov
xchg
repz
mov
shlb
xchg
pop
stc
movsb
ja
popw
aas
test
adc
nop
xchg
lret
cmp
roll
jg
jnp
mov
out
jp
or
test
push
movsb
jl
mov
sarl
pop
add
cwtl
cs
mov
fprem1
mov
ja
pop
sti
jg
inc
fnstcw
mov
aaa
arpl
cmpsb
rcrl
lret
mov
inc
loop
ljmp
mov
lret
push
fld
fcoms
add
push
sbb
sub
xchg
fs
adc
add
jne
sbb
mov
push
lods
mov
addr16
aaa
sbb
sbb
xor
mov
lret
movsb
jmp
xor
pop
adc
cmc
outsl
mov
sbb
mov
test
mov
test
jp
dec
push
out
xchg
jno
jb
cwtl
popf
jne
lret
mov
inc
sbb
push
ret
leave
push
or
xchg
loopne
push
add
ljmp
sub
xchg
lea
push
push
mov
out
ds
inc
mov
aad
shl
je
xchg
movsl
pop
push
sub
xor
xchg
repz
xchg
stc
sub
push
inc
jp
mov
fisttpll
sbb
fs
popa
push
jp
cmp
std
arpl
rorb
or
jno
add
lods
inc
inc
pop
dec
leave
test
iret
xor
rol
cmp
in
cwtl
sbb
push
add
push
cmp
ret
mov
popa
sbb
cmp
cltd
mov
jne
and
dec
dec
or
adc
stos
jp
xor
ja
pop
icebp
outsb
daa
jb
mov
adc
mov
lods
and
sbb
and
xor
dec
cltd
pusha
cmpsl
nop
fcompl
adc
jmp
xchg
movsl
sbb
leave
rorl
ss
pinsrw
add
and
push
cs
cmp
mov
shlb
mov
imul
mov
sbb
pop
dec
and
push
insl
daa
sbb
or
xchg
cmp
fwait
notl
stos
int3
in
and
int3
lods
les
iret
jo
push
scas
sbb
mov
test
movsl
stos
addr16
xchg
mov
sbb
add
jo
mov
mov
jg
scas
arpl
std
xchg
jnp
or
inc
fnsave
icebp
mov
xlat
jnp
lea
push
push
cs
shlb
mov
lret
add
fsts
pop
sub
imul
dec
rolb
xor
fimuls
int3
stos
jg
dec
jecxz
jnp
fmuls
punpckhdq
call
mov
pop
stos
push
fcompl
pusha
notb
dec
xor
lret
mov
js
push
sti
sbb
iret
adc
fdivrl
cmp
mov
in
fsub
sbb
fstpt
stos
repnz
mov
jne
jns
xchg
or
sub
push
mov
pop
fstpt
xor
adc
fbstp
inc
adc
idiv
rcll
js
jl
mov
pop
or
dec
mov
mov
in
inc
adc
test
je
lcall
jno
in
lcall
out
out
dec
push
adc
shrb
cltd
outsb
and
loopne
shrl
pop
jo
lret
loopne
dec
pop
push
in
mov
das
test
sub
inc
cmp
test
rcrb
and
in
jmp
mov
rorb
fs
cld
mov
daa
cmp
stos
addb
lret
jns
pop
dec
mov
and
pop
jo
push
pop
sub
movl
xlat
add
mov
loop
call
stc
mov
andps
jmp
pop
negb
jg
inc
cmpsb
in
mov
and
mov
cld
cld
inc
int3
xor
out
mov
test
mov
push
jmp
scas
insl
call
in
or
jmp
jecxz
push
aam
inc
inc
cmpsb
add
ret
mov
int3
lods
in
pop
mov
add
das
pop
fcmovnbe
data16
jge
fs
adc
dec
jecxz
daa
add
js
xchg
faddl
or
fisttpll
popa
cmovg
in
jge
xchg
jnp
add
jne
sub
jo
pusha
xor
cmc
out
mov
cmp
and
add
adc
popa
add
ljmp
xchg
sub
cvtdq2ps
lahf
inc
dec
inc
jg
add
aas
div
mov
cld
jno
or
movsb
inc
and
xchg
sbb
pop
add
fs
in
add
mov
fstp
repnz
ss
add
inc
adc
loopne
out
sahf
mov
stos
pop
jae
cwtl
and
outsb
mov
out
clc
hlt
stos
adc
ret
fsubrs
rcrl
int
pop
or
ss
xchg
push
jae
pop
bound
xchg
aas
and
dec
inc
mov
into
daa
fadds
inc
pop
dec
popa
mov
xchg
jae
xchg
and
ds
push
pop
and
xchg
daa
fstpl
push
xchg
cltd
test
jge
pop
sub
adc
sbb
sub
fiadds
inc
mov
orps
mov
ficoms
arpl
filds
scas
mov
outsl
data16
jmp
stos
sbb
or
mov
sub
mov
cmp
je
inc
push
inc
sbb
push
push
add
xchg
test
and
pop
cwtl
jne
orb
loope
inc
xchg
mov
cmp
push
mov
arpl
popa
cmpsb
dec
xchg
jmp
adc
push
cmp
inc
ficomps
repz
fsubr
aad
and
fs
jbe
nop
and
xor
sub
sbb
sub
push
imul
push
test
pop
or
lar
inc
inc
jp
aam
lods
jb
mov
xchg
icebp
fimull
insl
mov
fabs
pop
xchg
cmpsl
push
or
stos
dec
idiv
mov
js
sarb
jmp
xchg
std
dec
pusha
and
not
pop
inc
dec
or
jp
mov
cmp
rorl
inc
add
xchg
adc
mov
jp
mov
shll
push
sub
push
inc
ja
cld
jb
enter
push
je
into
loope
xor
and
mov
xor
jle
xchg
mov
push
jae
inc
std
mov
imul
jo
adc
mov
loopne
faddl
cmc
ss
sarb
mov
pop
in
fistpll
sub
movsl
cmp
pop
cmp
adc
bound
push
push
jno
loopne
xchg
js
movsl
in
test
outsb
fdivrs
popf
sub
jo
jae
mov
xor
bound
cld
dec
push
add
push
test
into
inc
sahf
pop
xchg
pop
lods
ret
push
adc
dec
fistpll
test
dec
mov
test
xlat
subb
idivb
adc
cld
mov
ret
jnp
movb
sub
sti
ss
push
pop
mov
and
dec
xchg
rcrb
jnp
and
lock
iret
je
mov
leave
sti
into
sarb
jp
out
push
lret
icebp
dec
cmpsb
je
and
push
ret
cmpsb
or
xlat
mov
ret
repz
in
dec
pushf
mov
or
xorb
xor
cmp
je
out
sub
pop
mov
cmp
cmp
ja
scas
mov
daa
push
inc
les
test
in
insb
fldln2
sub
ja
adc
ror
repz
jbe
jae
sbb
call
roll
mov
sbb
push
xchg
jge
js
mov
pop
lds
testl
test
jmp
dec
sahf
mov
mov
sub
jl
cmp
stos
shlb
jmp
mov
push
cmp
adc
xchg
mov
lods
jg
rcl
ja
dec
xor
xchg
orb
test
adc
data16
cmp
jp
shlb
adc
loope
push
arpl
call
ficomps
lock
jbe
scas
jmp
and
test
mov
cld
jne
cmp
pop
call
cmpsb
sub
gs
push
jns
pop
ljmp
jae
cmpsb
mov
sub
jns
push
push
fwait
mov
imull
cs
fcoms
out
call
inc
xchg
pop
jbe
int3
imul
dec
lock
les
xor
or
cli
dec
mov
lea
add
push
psrlw
push
pop
insl
stos
jno
bound
in
fwait
pop
mov
loope
pop
into
stos
lcall
shr
ffree
add
or
mov
xchg
push
mov
ja
enter
fstps
mov
outsl
sti
adc
push
pop
pand
cmp
jp
sub
and
xchg
or
push
sbb
test
loope
push
lods
mov
mov
cmp
nop
enter
addr16
push
int3
daa
jns
movsb
sbb
enter
sti
dec
push
stos
lret
popf
pop
out
xor
lcall
mov
cltd
decl
int
jns
adc
sbb
ja
insl
popa
lds
sub
jnp
pop
pop
adc
add
shrl
mov
dec
push
lock
xor
or
pop
mov
mov
sub
lods
stos
sti
addr16
shll
adc
adcb
jecxz
loope
inc
jno
cwtl
das
fsub
sbb
test
loopne
mov
out
scas
dec
ficompl
pop
pop
repnz
xchg
out
adc
jmp
sbbb
mov
mov
popa
lret
cmpl
cld
fsts
not
add
test
nop
fld
insb
mov
sar
jne
int
adc
jle
mov
xchg
ljmp
and
scas
cmp
test
mov
adc
sub
sub
mov
pop
mov
sub
jge
out
loope
push
inc
lret
fnstenv
andb
dec
mov
dec
stc
ss
mov
pop
push
lcall
addr16
mul
lods
mov
sti
xchg
mov
inc
leave
fnsave
and
dec
fimuls
cli
add
and
lcall
fildll
loope
cmpsl
pop
sub
out
add
and
mov
lds
ja
xchg
test
push
pop
jns
clc
repz
je
or
cmp
jne
sti
lods
sbb
jne
dec
jno
shrl
rorb
cmp
pop
jl
iret
mov
cmp
jnp
cmpl
inc
adc
out
cmp
out
jne
and
add
arpl
dec
rolb
mov
push
mov
jb
xchg
dec
mov
and
loopne
lret
xchg
enter
adc
or
lret
enter
cwtl
icebp
push
dec
in
fsubrp
pop
sub
mov
xor
sar
pop
dec
or
jecxz
iret
jbe
cmpsl
loopne
movsl
stc
movsl
pop
jns
sub
out
mov
fs
add
jno
notb
jno
ds
repz
out
sub
sbb
inc
fnstcw
dec
xorl
loopne
stos
in
xchg
jl
pop
add
inc
push
adc
mov
pop
mov
jl
aam
je
pop
jge
in
pop
data16
xchg
dec
cmp
ud1
fwait
sti
iret
icebp
cmc
xor
cs
adc
push
dec
mov
push
outsl
or
test
dec
jle
shll
js
mov
movl
in
ss
test
jl
out
mov
imul
das
pop
dec
mov
or
mov
das
nop
lea
data16
popa
or
inc
jnp
aaa
sub
clc
adc
add
sub
xor
add
pusha
pop
stos
dec
shlb
sahf
femms
sub
stos
push
test
dec
pop
cmp
les
cwtl
lahf
stos
sub
dec
cltd
dec
push
add
pop
jg
and
out
cmp
jns
lret
push
dec
clc
scas
sarb
insl
mov
hlt
stos
jge
add
in
orl
pop
mov
jg
shrl
push
lods
add
into
outsl
loopne
sub
lods
gs
out
mov
jne
cli
cmp
mov
xchg
push
add
mov
sbb
inc
push
sti
and
cmc
pushw
xchg
ficomps
pop
out
mov
mov
jecxz
push
imul
loop
int
mov
hlt
or
call
ss
xchg
mov
cmpl
dec
mov
in
xlat
or
jae
sbb
sbb
js
mov
pop
push
dec
and
pushl
cld
push
jbe
push
daa
out
imul
dec
mov
lds
loope
mov
mov
inc
insb
inc
lods
xchg
sub
mov
cmp
dec
xchg
pop
inc
cmp
pop
fiadds
mov
jno
arpl
mov
std
sahf
in
xchg
test
sbb
and
lock
dec
inc
add
or
inc
loope
pop
shrl
adc
sub
pop
jbe
pop
orl
pop
jae
jmp
xchg
push
rcrb
dec
out
xchg
mov
inc
int
imul
adc
test
jbe
subb
aaa
fs
dec
cmp
pop
xchg
push
sub
repnz
fdivs
mov
sbb
push
adc
jns
mov
push
out
fwait
mov
xorb
or
dec
lds
jmp
push
cwtl
adc
mov
test
jg
sar
jmp
pop
jbe
inc
clc
popf
inc
lret
mov
clc
ds
into
enter
clc
xrstor
daa
inc
mov
in
mov
mov
inc
or
xchg
mov
loope
inc
fsubrl
adcl
jnp
jle
mov
cmp
outsb
xchg
out
pop
add
clc
pop
out
pushf
cltd
ror
or
cmp
mov
mov
xor
cmp
push
push
pop
inc
mov
dec
in
mov
mov
sbb
xor
cltd
xchg
fistpl
mov
int3
mov
pushl
add
mov
or
push
mov
inc
jae
popf
fdivrp
push
leave
mov
mov
xor
adc
mov
mov
adc
push
mov
in
sbb
ss
mov
cmp
xor
xchg
addr16
in
outsl
jbe
mov
push
inc
adc
sub
sub
adc
sahf
aam
jo
sub
fsubr
repz
call
js
add
call
push
outsb
ret
xchg
fidivl
cld
xchg
rcr
bound
das
cwtl
xor
pop
cmp
mov
fstpl
std
xchg
cmpsb
mov
xor
movsl
imul
je
jnp
cmp
mulb
shlb
dec
push
xlat
fwait
or
adc
mov
or
addr16
popa
ja
test
in
sbb
xor
and
in
scas
mov
aad
mov
out
xor
mov
sub
lock
adc
fsubl
aam
xlat
pushf
rep
add
repz
subl
fisubrs
mov
push
push
push
out
mov
scas
fdivs
rcrl
in
jae
pop
jae
and
mov
testb
insl
cld
insl
dec
ffree
loope
movsl
cmpsb
fsubrp
hlt
mov
call
and
xchg
shrl
cmp
lcall
dec
add
andl
in
repz
add
gs
ret
addb
jmp
fisubs
sbbl
int
push
mov
hlt
enter
mov
sub
mov
andl
push
inc
jge
idivb
add
cs
jo
dec
sub
inc
mov
bound
mov
cs
inc
cmpsl
iret
jmp
mov
jecxz
dec
es
mov
in
icebp
int
addb
jbe
rorl
and
cmp
push
movsl
repnz
mov
leave
mov
pop
cmc
xlat
push
sti
in
sub
in
negl
add
add
jl
rdpmc
dec
push
lcall
jle
inc
adc
mov
leave
xchg
push
jmp
enter
shrl
aaa
pop
iret
lods
out
hlt
mov
addr16
mov
push
push
addr16
pop
jp
leave
push
sub
adc
flds
stos
jmp
test
cld
sahf
cmpsb
pop
mov
pop
fwait
in
mov
cmpsl
rcl
sub
and
or
out
leave
add
xchg
jecxz
je
jae
rcll
xor
pop
or
mov
cmc
loopne
lods
sbbb
mov
xchg
pop
leave
in
data16
push
es
cmpsl
ds
dec
and
pop
jbe
or
dec
mov
jmp
sbb
push
sbb
dec
push
loope
pop
dec
in
pushf
mov
xchg
dec
call
and
sub
fs
mov
mov
packuswb
jmp
jns
leave
jnp
adc
mov
dec
cmp
sbbb
cs
pop
pop
pop
mov
mov
push
xchg
sti
cmp
aad
and
aam
mov
sbb
and
lahf
cli
lods
cmp
and
jne
push
jne
out
adc
out
lret
cltd
sbb
and
fistpl
sbb
xlat
jnp
adc
xchg
hlt
sti
inc
mov
or
cmpsb
mov
or
jl
mov
push
jne
ror
cmc
or
dec
cld
insb
pop
xor
out
cmp
cwtl
std
inc
mov
insl
jo
jae
cmc
jl
popa
aam
lock
fwait
cmp
cmc
mov
cli
js
data16
xor
push
ret
std
sbb
jecxz
arpl
jp
pushf
jle
and
sub
jb
fucomi
ret
outsb
adc
xchg
arpl
imul
insl
in
and
and
std
insb
sbb
pop
outsl
es
mov
or
mov
mov
dec
inc
push
xlat
xchg
aas
mov
dec
inc
inc
push
in
jp
test
das
fs
xchg
outsb
repnz
add
mov
pop
pop
push
test
mov
xchg
dec
test
out
out
out
icebp
movsl
loope
or
pusha
cmp
sub
lods
xchg
div
sbb
jbe
sbb
rolb
in
mov
pop
decb
repz
cli
inc
bound
adcl
jg
adc
adc
xchg
cld
sub
mov
push
and
repz
pop
push
xchg
xchg
fisttpll
and
mov
jge
das
js
orl
daa
pop
lret
aas
sbb
sub
sub
cmp
xor
out
ficompl
bnd
sti
mov
xchg
sarl
out
or
fldenv
jbe
mov
cmp
repnz
lahf
lods
in
push
fbstp
mov
in
pop
cmp
inc
xor
hlt
push
inc
mov
movsb
mov
and
mov
into
xchg
aaa
ja
jp
lods
cld
adcb
aam
cmp
adc
ds
pop
xchg
rcrb
xor
dec
insl
cmpsb
push
jns
and
js
aad
xchg
add
xchg
lahf
andl
mov
xor
dec
ss
out
jle
mov
inc
cld
xlat
fwait
xor
inc
xor
sti
sub
inc
repz
out
sti
faddp
jno
sahf
into
sbb
lds
mov
sahf
test
fnstsw
fidivs
stc
out
xor
cltd
popl
inc
mov
arpl
xchg
loopne
push
sub
mov
or
push
or
hlt
add
shlb
out
mov
div
inc
pop
or
movsl
xchg
in
test
loopne
and
test
cmp
into
idivb
scas
xlat
fsubr
cmc
pop
and
insl
and
ret
incl
imul
test
out
xor
lods
sbb
and
push
pushl
mov
gs
mov
xor
vmovaps
fisubrs
cmpsb
sbb
ficomps
pop
push
sahf
scas
cmp
cmpsb
mov
clc
sub
call
adc
out
and
test
pop
xchg
and
or
xchg
sub
repnz
xchg
add
and
xchg
inc
pop
mov
xchg
pop
dec
dec
sarl
xchg
test
aas
pop
dec
sbb
xor
and
jns
push
ja
repnz
nop
iret
jg
stos
push
jmp
cmc
add
jp
inc
add
mov
je
xor
mul
inc
mov
xchg
lea
test
jns
push
sub
pop
loope
cmp
insb
scas
pop
test
mov
loopne
or
sbbl
notb
jne
lret
mov
and
add
out
adc
and
or
addb
ret
lret
imul
cmpsb
jno
das
cmp
cmpsl
cmp
imul
dec
int3
inc
imul
dec
xor
jecxz
sub
lahf
push
cmc
adc
imul
adc
xor
mov
mov
and
inc
fsincos
mov
je
lock
sahf
mov
and
lock
ljmp
jns
pop
pop
add
repnz
xchg
out
in
notb
les
or
cltd
lea
add
outsl
test
push
daa
mov
out
andl
jmp
xchg
mov
out
add
fcmove
leave
pop
lcall
inc
cmc
mov
movsb
inc
cmp
and
lock
adc
sbb
sahf
xchg
cmp
sub
daa
cld
shl
fwait
inc
loope
cmpsb
dec
clc
push
jp
xchg
mov
fdiv
insb
outsl
sub
test
or
xor
jne
cmp
cmp
xchg
cmp
into
mov
imul
add
adc
fadds
mov
mov
fs
add
jbe
sbb
push
sub
jb
jns
inc
push
add
out
in
repz
out
outsl
out
in
mov
ja
jnp
repnz
lahf
push
adc
mov
sbb
call
test
and
outsl
xchg
into
sub
xor
adc
andl
push
in
xor
popa
sbb
sti
and
jecxz
pushf
jg
pop
mov
fidivrs
fmull
enter
movd
int
subl
stos
xor
mov
fsub
mov
and
cli
xor
inc
ljmp
mov
movsl
dec
test
shrl
adc
ds
pop
imul
jmp
or
in
js
outsb
mov
loopne
test
movsl
out
sub
xchg
jl
push
pop
push
add
dec
xor
pop
std
xor
and
push
push
push
int3
clc
xchg
iret
add
shrl
repnz
ficompl
add
icebp
movsb
aas
pop
and
xchg
jnp
popf
xchg
aas
push
adc
mov
sbb
mov
lret
adc
mov
mov
and
push
dec
fcmove
push
adc
xchg
cmp
enter
jb
jne
and
xchg
jne
mov
jbe
pop
pop
mov
mov
daa
fstl
pushl
aam
dec
mov
mov
ds
enter
mov
push
mov
sarb
movsb
inc
dec
and
push
leave
adc
sbb
cld
in
cltd
ds
adc
mov
dec
idiv
mov
or
scas
je
sub
and
insl
jb
push
pop
cmp
dec
or
sub
pop
cmp
mov
dec
shlb
pop
loopne
lods
inc
xor
out
add
ret
mov
in
inc
lds
xor
cmp
and
arpl
xchg
lds
inc
pop
out
imul
jge
sub
fsubl
test
xor
cmp
push
cltd
jo
jmp
cmc
add
xor
jne
mov
pop
cwtl
cs
cli
ss
jno
test
push
mov
inc
mov
pop
mov
bound
inc
mov
popa
dec
lods
sbb
and
das
push
mov
add
pop
sub
in
push
dec
mov
mov
sbb
jns
jnp
sbb
cwtl
setb
inc
xor
fs
inc
pop
or
aas
in
mov
mov
sbb
push
push
lcall
notl
or
mov
out
jge
mov
push
ja
test
mov
add
addb
mov
test
div
scas
lcall
sti
add
ret
xlat
pushf
mov
push
mov
jg
fsubrs
scas
or
cwtl
out
es
jle
ret
rcrl
jb
fcoml
pop
add
dec
sbb
cmc
popf
ja
out
and
lods
cmpsl
mov
imul
jl
xchg
pop
inc
inc
add
mov
test
push
xchg
insb
and
lds
push
mov
scas
xchg
cmpsl
jb
test
mov
mov
les
push
js
xchg
xchg
movsb
cs
cmp
out
mov
daa
aad
lock
adc
xchg
push
jae
sbb
outsl
stos
mov
out
pop
or
inc
xor
jb
bound
mulb
sbb
cmp
outsl
cmp
cmp
outsb
pop
das
push
clc
dec
mov
mov
loop
test
and
dec
fisttpll
negb
fmuls
repnz
mov
es
fisubs
movsb
fwait
jge
jmp
or
jo
scas
sub
or
sbb
inc
mov
cmc
movsb
mov
mov
lcall
push
xor
pop
pop
cld
addl
inc
pusha
inc
pop
cltd
pop
pop
cli
lods
xor
popa
xchg
out
dec
mov
fnsave
pop
popf
sbb
jecxz
out
pmaxsw
sbb
ja
jge
movsl
push
mov
add
cmp
lods
inc
sarb
lret
mov
cmpsl
shll
jnp
clc
loop
popa
aas
pop
bt
mov
and
shrl
imul
lret
jge
cmp
nop
mov
jmp
leavew
movsb
mov
jmp
jecxz
mov
lock
xchg
imul
int
inc
mov
mov
xor
stos
mov
sbb
xor
inc
and
ret
cld
xchg
hlt
mov
dec
jecxz
subl
dec
inc
sub
mov
fwait
jb
aad
repnz
out
jbe
cwtl
fldl
stos
jg
mov
mov
sbb
push
mov
aad
push
frstor
jmp
pop
sbb
in
adc
xchg
mov
sbb
xchg
add
outsb
ljmp
pop
sub
das
xorb
adc
hlt
mov
jp
dec
jge
mov
pop
fucomp
mov
mov
rolb
ljmp
leave
sub
adc
mov
pop
xchg
dec
mov
ja
jle
sub
mov
loop
or
aas
and
inc
jmp
in
jge
add
or
loopne
jno
pop
push
mov
lcall
pushf
sbb
push
ljmp
jno
pop
pop
arpl
mov
xor
fsubp
sub
stc
jp
les
arpl
je
es
hlt
sub
mov
ljmp
push
gs
mov
in
add
xchg
adc
mov
mov
shrb
pop
clc
out
sbb
cmpb
xchg
xor
js
in
das
sub
fwait
inc
pop
mov
ss
xchg
push
jge
cwtl
movd
jle
add
sub
push
les
mov
push
mov
clc
rcrl
mov
or
lods
lahf
add
stos
popf
test
or
fwait
jmp
xor
fisttpl
popa
mov
jp
jg
fidivs
push
pop
fbstp
fisttpl
rcpps
fnstenv
stos
mov
ss
push
jo
into
dec
mov
out
push
movsb
bound
add
or
int
inc
dec
jecxz
dec
lock
mov
push
and
fs
cmp
xor
pop
mull
call
lret
inc
jns
sub
test
aas
lret
subb
push
cmp
mov
cld
or
cmp
pop
pushf
aad
sbb
dec
pop
frstor
lods
out
in
imul
mov
xchg
mov
test
fsubs
sbb
in
shl
insb
aas
dec
or
insb
inc
add
fsub
xchg
dec
rorl
mov
push
nop
mov
dec
in
popa
fistpl
jne
iret
mov
iret
dec
dec
inc
or
pushf
mov
dec
loopne
jl
cmp
mov
dec
xor
jmp
std
mov
or
inc
lods
mov
test
test
sub
cmp
mov
inc
xchg
sbb
and
mov
or
insl
adc
test
jle
std
cmp
outsl
bound
cmp
fs
aam
dec
push
sbb
out
lahf
repz
jmp
test
xchg
inc
ds
in
rol
adc
movsl
mov
outsb
fistps
in
mov
insl
movb
jbe
lahf
lcall
pop
cwtl
cmp
cmp
shll
sbb
dec
mov
out
pop
sbbb
adc
add
loopne
and
inc
add
mov
mov
mov
xchg
jmp
ret
das
lret
mov
fstp
inc
inc
stos
hlt
call
mov
mov
insb
mov
incl
imul
sbb
sbb
push
cld
lahf
pop
and
stos
movsl
pushf
jle
pop
sbb
or
test
add
add
test
adc
mov
mov
lea
loop
pop
mov
fcompl
popf
jge
mov
imul
lea
pop
cwtl
xor
loop
insl
decl
and
outsl
mov
enter
mov
mov
push
jmp
scas
jg
sbb
xor
cltd
scas
movsb
cwtl
ja
pop
insl
push
shl
movsb
push
loop
adc
cmpsl
cmp
iret
cmpsl
add
rolb
ret
mov
sti
mov
mulb
jns
xor
test
cli
subl
dec
sub
push
shll
ja
fnsave
lock
jecxz
xchg
test
mov
mov
mov
sub
mov
jmp
sbb
int
mov
int3
jnp,pn
loope
cmpsb
adc
push
or
push
xchg
xchg
push
inc
fisubs
cltd
sbb
and
inc
lret
xchg
lods
stos
xor
test
test
jns
lds
imul
aam
dec
xlat
and
nop
sub
cmp
subb
and
pop
lds
pop
dec
loope
call
into
imul
int
out
cmp
xor
sahf
lcall
and
and
movsl
fstpt
pop
and
or
mov
dec
xchg
xchg
or
shll
cmp
push
les
dec
pop
clc
lcall
dec
pushf
cs
ljmp
subl
ffreep
mov
xchg
js
addr16
cltd
out
cltd
or
stc
push
pop
js
adc
cmp
adc
pusha
sub
push
inc
out
stc
adc
les
push
jo
cli
lock
or
lcall
inc
scas
int
call
add
dec
fiadds
bound
sbb
rclb
adc
fnsave
lds
cmpsb
xor
xchg
sti
mov
xor
scas
fiadds
mov
sub
adc
and
aas
push
cmp
mov
iret
aaa
add
mov
push
mov
shll
jne
jl
addr16
lcall
xchg
jp
inc
push
xchg
jne
mov
mov
in
mov
outsb
movsbl
sti
push
cmp
push
and
xor
dec
jge
fld
iret
cld
xlat
mov
in
sbb
repz
jecxz
sbb
adc
sahf
repnz
jge
mov
pushf
stc
rcll
sbb
clc
stc
outsl
jo
jo
sbb
bound
jb
jl
and
pop
xor
push
xor
dec
xor
addb
xchg
lret
mov
add
ds
clc
sti
ror
sub
repz
inc
aam
jno
xchg
outsl
imul
mov
cmp
movsb
aam
movsl
subb
mov
adc
stc
icebp
jno
cmp
cmp
jbe
dec
dec
notl
pop
cmp
fists
or
sbb
and
ja
out
cld
jns
out
xchg
ror
cwtl
jl
or
orl
test
mov
sbb
clc
daa
outsl
xchg
icebp
pop
icebp
popf
stc
push
test
cs
pop
dec
xor
testb
icebp
fs
iret
test
popf
add
lods
enter
out
mov
imul
cmpsb
bound
mov
xor
ret
or
push
insl
push
test
lods
iret
xchg
mov
mov
ljmp
not
scas
outsl
testl
popa
enter
adc
pop
add
bound
aas
out
lods
dec
push
mov
lods
jb
add
xchg
push
lret
outsb
xchg
jecxz
in
sub
sbb
negl
mov
lea
jns
in
call
cmpsl
lret
jecxz
push
std
call
and
push
lcall
pop
push
push
scas
fadd
jnp
outsb
adc
cmp
push
imul
xor
jae
nop
popa
outsb
pop
and
and
xchg
testl
loop
jno
push
jmp
dec
es
aad
and
leave
scas
sbb
push
sbb
mov
sti
movsl
inc
lea
into
je
dec
inc
or
adc
mov
cmp
add
imul
sub
loopne
cmp
sub
fcoml
cmpsl
flds
repnz
sbb
fstpl
fbstp
mov
mov
scas
pop
lock
mov
fadds
xor
mov
sub
call
xchg
lock
jmp
and
loopne
mov
mov
push
cmp
add
pop
mov
imul
push
imulb
add
into
xchg
and
cmpsb
sub
jp
push
sbb
shrl
push
cli
and
mov
cmpsb
and
movsb
xchg
incb
stos
and
xchg
jbe
inc
jmp
outsl
cwtl
jno
or
mov
ret
jnp
addl
test
inc
fistps
xchg
xor
pop
xor
arpl
mov
jle
cwtl
mov
mov
fs
jnp
in
std
fiaddl
jbe
imul
mov
cmpsb
jmp
out
cmpsl
nop
jecxz
and
pusha
add
shll
std
sub
daa
fidivl
arpl
bnd
je
sub
dec
fisttpl
mov
lea
cmp
pusha
out
add
cwtl
adc
test
movsb
xor
adc
je
sub
mov
or
pop
xchg
iret
push
arpl
rorl
xor
mov
mov
dec
stos
dec
test
push
lock
mov
test
push
jns
int3
pop
pop
jp
out
aas
sbb
adc
and
jb
dec
in
cmp
into
stc
mov
push
movsl
cltd
bound
push
and
jge
push
pop
push
outsl
mov
test
lea
ljmp
xlat
movsb
movsb
lcall
enter
out
pop
cmp
or
cmp
movsl
xor
adc
push
in
mov
and
add
stc
pop
imul
dec
xor
addr16
or
sahf
add
into
and
fcoms
sub
jp
pop
sub
das
xlat
cmp
xlat
fistps
clc
movsl
jg
jge
xor
add
inc
icebp
push
mov
push
mov
iret
ss
inc
pop
adc
mov
shll
cli
jp
pop
mov
pop
mov
aam
dec
push
cld
push
mov
adc
xlat
scas
inc
inc
mov
push
pop
xchg
sbb
mov
xchg
sbb
outsb
aam
in
jnp
pop
or
adc
int
and
std
mov
ljmp
clc
lcall
cmp
clc
fwait
push
test
js
dec
mov
aad
dec
mov
sar
sub
imul
jmp
or
jns,pt
movsb
sbb
rcl
mov
hlt
inc
stc
movsl
xchg
movsb
xchg
ds
jle
or
mov
and
lcall
mov
xchg
in
xlat
mov
pop
add
das
adc
popa
pop
movsb
mov
jno
xchg
sub
test
xchg
or
cltd
xchg
cmp
pop
out
lods
out
cmpsb
xor
push
dec
ret
adc
mov
repnz
lds
hlt
icebp
push
pop
or
ja
sbb
sbb
lret
stos
cmp
aas
stos
or
jl
test
mov
sbb
adc
mov
pop
xchg
sub
lods
and
inc
test
jl
mov
in
cli
fmuls
cwtl
in
jmp
xchg
ret
dec
cmp
jmp
adc
jo
xor
inc
jge
and
pop
imul
jb
aaa
push
cmc
sahf
adc
adc
cs
mov
or
cltd
xchg
mov
push
cmc
push
add
shll
push
mov
and
fldt
pop
jbe
mov
insb
jmp
mov
jg
push
xor
mov
mov
test
jb
les
pop
xor
mov
mov
movsb
sbb
push
sub
cmp
outsl
cmp
fwait
insb
inc
stos
and
cmp
addr16
sbb
stos
sbbb
or
push
inc
add
jge
mov
std
add
mov
les
add
add
sahf
clc
or
pusha
gs
in
fsubs
xlat
push
aaa
es
das
in
jns
xchg
mov
inc
cmp
and
call
test
or
cmp
arpl
adc
lahf
xor
sbb
pop
sbbl
repz
sbb
cmp
jo
mov
into
jecxz
pop
and
and
pop
nop
mov
lret
push
cld
sub
je
roll
sub
sbb
adc
std
divb
xchg
cld
test
mov
aas
je
imul
sub
sahf
shlb
arpl
in
cltd
adc
std
aas
xlat
jbe
push
mov
insl
int3
bound
cmpsl
adc
jae
sti
add
xchg
mull
mov
shrl
dec
mov
rcll
cltd
loopne
divb
test
mov
dec
aaa
test
add
pop
ror
or
inc
push
rcrl
inc
sbb
xorb
cwtl
scas
fnsave
shl
cmpsl
xor
cli
ret
outsb
push
mov
sbb
mov
push
enter
sbb
xchg
mov
adc
pop
mov
push
adc
adc
fsubr
mov
adc
and
pop
or
mov
mov
ret
jp
dec
and
pop
adc
mov
inc
sti
fiaddl
jmp
adc
cmp
xchg
clc
dec
popf
xchg
imul
push
sahf
popf
aad
xchg
stos
push
inc
mov
inc
push
pop
xchg
jbe
jbe
add
push
dec
sbb
inc
fcom
jp
testl
cmpsl
mov
fiadds
idivl
adc
xchg
sub
jmp
push
and
and
stos
imul
and
xor
cld
cmp
xlat
out
leave
inc
pop
lea
stc
loop
push
adc
sbb
cmp
adc
push
push
or
and
inc
mov
test
movsb
push
lcall
push
test
jp
movl
aas
inc
es
insl
jg
or
popa
xchg
fchs
cmp
jg
repz
push
xchg
jns
in
pop
pusha
jmp
sti
shll
dec
xchg
aam
pop
sbb
jge
push
fildll
dec
in
mov
in
out
nop
xor
shrl
inc
mov
repnz
add
lods
loop
cmp
ror
or
les
stos
mov
popl
push
push
fists
lret
in
lcall
ds
das
jg
inc
mov
test
cmc
pushf
add
mov
inc
mov
repz
fldt
fsubrp
popa
fsubr
or
aam
dec
xor
xor
fcmovnb
stc
scas
push
test
dec
cmpsb
and
test
rcrb
inc
sahf
jnp
pop
mov
mov
dec
jmp
xchg
jp
repnz
lahf
inc
div
sub
inc
mov
arpl
jb
or
shrl
leave
pusha
jns
stc
jbe
test
push
and
jne
sub
je
mov
pop
ret
pop
ja
adc
jecxz
hlt
jmp
leave
test
pop
jl
mull
sub
loope
pop
fs
int3
pusha
jecxz
stc
xchg
outsl
punpcklbw
push
faddp
xor
fbld
ret
xor
sub
or
inc
sahf
pop
inc
jne
mov
fstpl
es
into
mov
push
cwtl
adc
pop
mov
gs
xchg
sbb
shll
repz
add
inc
inc
xchg
test
icebp
mov
adc
push
outsb
xor
add
mov
rcrb
pop
ret
or
fwait
stos
pop
lea
imul
inc
mov
int3
xchg
xchg
outsl
push
aas
adc
dec
into
xlat
push
pusha
or
dec
daa
inc
pop
outsb
gs
aaa
loop
inc
fwait
rorl
lds
pop
jns
int3
ds
cmp
jmp
lock
cmc
icebp
lock
fs
sbb
or
mov
testb
pop
push
or
test
and
lcall
daa
cmpsl
in
scas
scas
xchg
je
jmp
mov
cld
sbb
iret
jg
push
fisttpll
dec
insb
push
fs
jae
add
pop
xchg
cmp
aam
inc
dec
cmc
lcall
and
jnp
xor
mov
cmpsl
push
xchg
mov
jp
mov
cmp
subl
cmpsl
dec
sbb
ja
mov
stc
ja
or
ret
addr16
push
sbb
pusha
pusha
sub
pop
push
sbb
repnz
adc
cmc
mov
push
and
inc
push
push
push
enter
jno
mov
adc
ds
mov
sbb
push
pop
adcl
sbb
cltd
outsb
pusha
add
adc
or
add
imul
sbb
iret
cmp
fcompl
inc
xchg
xor
sub
jae
adcb
cs
popf
xchg
mov
fstpl
xor
repz
add
out
clc
inc
ret
rorb
cvtdq2ps
test
xor
push
lret
dec
jne
pop
getsec
fldl2e
out
cmpsb
fiaddl
cmp
cmc
dec
dec
xchg
inc
cmp
add
addb
fnstenv
mov
cwtl
push
sub
cmc
rsm
dec
or
add
sub
push
sbb
adc
stos
int
xchg
cmpsb
jno
jns
js
fst
popf
push
adc
imulb
jnp
push
cmp
mov
pop
lods
stos
popa
inc
fs
data16
pop
imul
push
loopne
sbb
pop
shlb
mov
jno
daa
adc
or
mov
push
cs
lds
pop
inc
enter
pop
insl
xchg
jo
xchg
jne
push
pushf
dec
cld
stos
inc
mov
data16
dec
push
sbb
ret
and
lods
or
aad
inc
dec
repnz
ja
mov
lods
stc
popf
or
leave
add
inc
push
jno
ret
fmul
pusha
lret
xor
or
enter
test
ss
xchg
outsb
je
jmp
fstpl
mov
inc
stos
jne
dec
inc
xchg
lret
xor
movsb
push
dec
lcall
lret
jns
shrl
dec
fst
push
es
jne
out
fnstenv
sti
aam
insl
xchg
push
dec
mov
mov
int3
xchg
xor
cwtl
cmp
or
pop
lock
icebp
movsl
or
cmp
loopne
mov
add
or
xor
sub
jg
jae
imul
out
lahf
nop
push
mov
cmpsl
push
or
pop
rcrl
scas
leave
sbb
cmp
cld
and
sub
add
imul
push
daa
aaa
jle
push
lcall
mov
or
mov
mov
das
push
ss
xor
mov
jle
sbb
scas
fs
xor
fs
push
pop
dec
mov
and
pushf
jo
movsb
add
pusha
xor
mov
pop
fcmovu
xchg
xchg
jl
sahf
add
cmp
out
rcr
jle
add
lods
pop
daa
push
cld
sti
rorb
inc
mov
sub
int
xor
das
dec
aam
sub
mov
out
add
movsb
out
add
rorb
shll
adc
jb
cmp
outsl
in
pop
and
sbb
push
adcl
out
adc
imul
jge
movsb
add
xchg
cwtl
jb
mov
xchg
xchg
loop
mov
hlt
aad
in
xor
adc
lret
adc
xchg
inc
movsb
inc
nop
xor
loope
shll
cmp
add
mov
inc
into
out
xchg
add
sub
int
addr16
mov
fs
or
mov
mov
inc
movsb
ljmp
jmp
jno
dec
and
mov
arpl
into
adc
dec
push
push
in
int
xor
bound
testb
sub
adc
adc
pusha
xor
xchg
jmp
mov
ss
rcrb
insl
pop
in
ss
and
test
pop
push
push
sbbl
push
jns
add
pop
mov
pop
xchg
icebp
lret
fs
jno
movups
pop
xchg
cwtl
jo
jl
xor
and
movsl
jae
mov
mov
das
aad
std
xchg
or
push
lahf
xor
test
mov
ja
flds
push
and
shlb
or
out
pop
cmp
inc
adc
adc
push
dec
pop
imul
mov
xor
test
jecxz
or
hlt
out
jnp
repnz
xlat
dec
pushl
jb
cs
loope
dec
scas
mov
jno
xor
popa
xlat
jb
scas
xchg
js
imul
sbb
cli
jb
xchg
inc
cmc
fcoml
in
js
test
in
xor
jae
push
and
pop
pop
out
dec
in
in
imul
xor
and
pop
xchg
xchg
in
mov
jecxz
mov
clc
ljmp
mov
jge
js
xor
jl
jno
shll
es
and
ljmp
aas
aam
xlat
cld
mov
imul
lret
jno
mov
ja
or
push
fldt
out
addr16
clc
into
adc
mov
aas
lret
dec
icebp
sbb
adc
in
cmc
arpl
jb
shll
sbb
fists
out
cmpsl
int3
enter
leave
or
sahf
je
mov
in
es
and
test
pusha
xchg
in
or
pushf
sarb
xchg
jge
fldln2
ds
add
jmp
arpl
je
subl
mov
ret
xlat
xchg
daa
xor
outsb
rclb
aam
xchg
push
sahf
cmpb
xor
mov
xchg
dec
xchg
scas
mov
xor
push
sbb
fdivrs
jbe
cld
mov
es
repz
sti
sbb
lods
pop
push
repz
clc
push
push
cmp
xchg
xchg
push
cmpsb
aas
insl
push
sbb
lods
es
xchg
dec
mov
bound
cmpsb
jle
popf
or
cmp
pop
mov
mov
outsl
aad
int
jno
sub
js
pop
sbb
push
movsb
jo
stos
ret
jmp
push
lock
loopne
and
fsubrl
and
push
int
clc
or
xor
mov
pop
cltd
ljmp
cli
lock
aaa
les
xchg
imul
cwtl
repnz
xchg
test
cli
push
push
inc
loopne
xlat
sti
add
movsl
nop
sbb
repnz
fdivl
fdivl
mov
data16
jne
das
mov
mov
jno
cltd
movsb
fisubrs
mov
cmpsl
popf
pop
pushf
sbb
or
mov
or
jns
pop
pop
and
popf
xchg
mov
in
add
inc
lods
call
push
out
cmc
push
adc
dec
addr16
iret
mov
shr
mov
neg
mov
push
xor
fistl
jp
sbb
jbe
mov
mov
in
dec
or
or
insb
inc
dec
mulb
je
aad
movsb
adc
dec
lret
jecxz
ret
scas
sbb
idivl
clc
adc
filds
pop
ret
das
stos
xor
mov
out
jecxz
into
cmp
adc
lods
movsb
rcrb
add
add
inc
lea
hlt
mov
push
cmp
into
rclb
sbb
and
mov
hlt
sbb
adc
rol
sbb
xchg
cmpsb
into
or
fstp
fwait
sbb
cmp
jbe
jmp
xchg
add
jae
fwait
or
lock
sub
ss
enter
test
inc
mov
lret
test
mov
or
sbb
scas
cs
lods
pop
ret
sub
test
inc
repnz
lahf
mov
xor
pusha
scas
adc
in
imul
push
add
xchg
jae
aas
and
je
movsl
fistpll
mov
lods
adc
sahf
orb
xchg
lcall
insl
nop
enter
mov
cmc
add
push
ja
sarl
ffreep
mov
push
dec
scas
sbb
jns
aaa
push
mov
incl
int3
pop
or
sbb
push
or
mulb
fists
push
subb
std
xor
mov
mov
push
mov
test
inc
sbb
incl
fnstenv
imul
mov
xchg
mov
popa
cmp
push
sbb
dec
sub
pop
test
or
hlt
insl
mov
mov
xor
cmp
sahf
mov
dec
cmp
and
mov
dec
dec
xor
jns
mov
push
adc
push
xchg
jne
repz
push
push
pop
inc
fmuls
cmp
pop
push
ret
shl
push
cli
jb
enter
push
xchg
mov
mov
test
sarl
bound
rcr
pushf
pop
je
adc
outsl
data16
into
jne
into
fstpt
xchg
stos
adc
jae
sbb
mov
daa
mov
inc
jnp
inc
psllq
stos
mov
xchg
pop
sub
sub
lret
jne
jge
inc
pop
rcr
mov
mov
js
lahf
stos
inc
lret
adc
mov
out
jmp
out
sub
dec
out
inc
stc
lret
out
ja
icebp
fs
push
pop
imul
mov
dec
aad
or
cmp
xor
pop
in
idivl
ret
sub
pop
pushf
in
push
leave
and
popf
fcomps
cltd
nop
mov
data16
pop
pop
dec
mov
adc
int3
fldl
jnp
test
jns
rol
push
xchg
sar
stc
cmpsl
cmp
and
mov
add
cwtl
mov
or
aam
cli
jnp
cltd
mov
cmp
stc
sub
sub
notl
sbb
jle
int
imul
sbb
out
scas
gs
dec
jp
addr16
movsl
sbb
push
daa
mov
pop
movsb
mov
cli
mov
leave
clc
out
push
shrl
lcall
pop
pusha
pop
cmp
into
ds
iret
pop
xchg
mov
and
repnz
lods
dec
pop
repnz
in
cmpsl
out
ljmp
jmp
loop
adc
iret
ljmp
sbb
xchg
pop
repz
push
cwtl
and
pushl
fidivs
lods
ljmp
ljmp
jae
mov
cmp
and
outsb
loopne
cwtl
push
lret
pop
aam
lods
adc
ss
imul
adcl
push
adc
xorl
push
loope
sahf
push
inc
out
push
leave
jp
loop
dec
jb
lds
repz
negb
rorl
mov
pop
cmpsl
aas
out
imul
sbb
push
subb
pop
ljmp
cmp
mov
andb
popa
imul
add
pop
pop
push
pop
push
push
pop
jge
push
jnp
mov
inc
xchg
aas
andb
xor
jg
pop
adc
stos
je
xlat
jbe
iret
pop
lds
xor
out
adc
in
pop
xchg
or
push
fwait
outsb
cs
fcmovu
insb
cmc
stos
movsb
daa
push
fistps
pop
or
in
jno
jl
mov
sbbb
lcall
shl
clc
sahf
jns
mov
clc
jmp
sub
cmc
imul
pop
clc
mov
hlt
lahf
xchg
loope
in
sahf
dec
test
or
ret
lret
inc
pop
mov
xor
push
mov
into
push
bound
sbb
and
adc
int
and
xchg
es
mov
jbe
mov
mov
into
pop
adc
push
jae
lcall
pop
adc
add
jb
icebp
loopne
jecxz
add
mov
jle
call
aaa
push
je
mov
rcrb
xorl
and
rorl
add
jbe
repnz
leave
scas
mov
lea
or
and
xchg
mov
outsl
xchg
lret
les
mov
cmp
or
xchg
cmp
sbb
adcb
js
ljmp
imul
flds
sbb
or
shl
dec
aaa
inc
push
mov
loopne
dec
es
ret
ficompl
daa
and
outsl
sbb
aad
jecxz
enter
cmpl
jns
loopne
and
dec
int3
test
or
and
movsl
shrb
negb
sbb
or
in
sub
and
sti
js
sahf
pop
mov
xor
cli
lret
jg
ret
mov
clc
pop
add
or
inc
sbb
testb
int3
loope
data16
mov
and
mov
inc
jg
imul
mov
dec
cltd
leave
dec
sub
psrlq
mov
stc
adc
mov
subb
mov
lahf
add
mov
rcrl
bound
fnstcw
mov
jmp
add
mov
ficoml
in
lods
aad
mov
or
jb
push
out
shl
negl
jae
sbb
mov
xor
mov
push
xchg
xlat
imul
mov
and
jle
mov
push
push
in
xor
cmp
or
xchg
imul
mov
xchg
mov
pushf
aas
jbe
xchg
jno
lock
leave
xor
icebp
icebp
scas
xlat
mov
shl
cmpb
leave
orl
cwtl
push
cmp
jge
movsl
xchg
or
jb
cmp
loope
out
outsb
sbb
xor
imul
lods
out
pusha
jnp
cmpb
jo
cmc
cmc
sti
pop
or
test
cli
hlt
nop
mov
sbb
ja
sbb
and
mov
aam
cmp
inc
lock
inc
ds
adc
mov
insb
xchg
dec
pop
xchg
test
jg
jl
or
pop
and
push
add
shll
and
fdivs
mov
mov
outsl
mov
inc
insb
cli
stos
lcall
xor
aam
shll
clc
pop
push
or
pop
pop
xchg
inc
stc
in
dec
sub
pop
cs
ds
out
mov
test
mov
pop
es
es
push
daa
xor
movsl
adc
xor
or
aam
test
adc
mov
insl
gs
xchg
xchg
push
sub
fbld
imul
mov
mov
pop
in
jmp
push
pop
push
sub
out
mov
mov
sahf
insb
in
mov
pusha
and
mov
mov
lahf
call
mov
mov
cmp
insl
xchg
cmpsl
mov
cmp
enter
jno
push
in
fnstenv
fcomp
arpl
mov
sbb
outsl
out
lahf
push
mov
pop
mov
mov
push
jmp
dec
ds
cmpb
or
cwtl
jmp
cmp
out
iret
cs
fsubrp
mov
ss
dec
lods
cmp
imul
sahf
sar
xor
in
lret
xor
push
loope
push
sub
push
mov
imul
dec
mov
add
or
addr16
mov
aad
push
sbb
jp
insb
sbb
pop
ret
inc
cmc
int
shl
jb
in
in
js
outsb
imul
divb
mov
add
xor
sub
pusha
sub
push
dec
sti
cmp
add
lods
adc
mov
mov
cmp
and
pop
popa
ljmp
cmpsl
push
push
loopne
mov
aaa
pop
not
pop
mov
out
out
pop
xchg
xor
hlt
pop
mov
je
fs
pop
xchg
fsubrl
addl
lods
pop
shl
mov
insl
sub
sbb
das
mov
adc
dec
cmpsb
mov
popf
adc
add
movsl
xor
lret
xchg
sbb
test
inc
pop
cmp
adc
sbb
test
and
mov
lods
out
arpl
lods
test
mov
jo
ret
dec
add
cmovs
or
push
fiaddl
loope
test
dec
add
push
push
xor
shlb
je
xor
cli
dec
jne
cwtl
mov
sbbl
int3
sbb
out
fstps
das
or
xchg
jbe
sub
test
cmp
push
jecxz
fildll
insb
push
sbbb
pop
push
sbb
in
add
into
in
movsl
sub
dec
dec
imul
pop
mov
prefetcht2
xchg
lahf
dec
lock
fistps
gs
repnz
jmp
sub
pop
shr
adc
push
clc
loop
in
and
mov
sub
out
int
fistpll
loopne
ret
popf
jno
jg
cwtl
scas
add
in
adc
xchg
cwtl
jl
scas
lds
and
loop
fmuls
roll
jb
gs
or
adc
jmp
add
or
jp
add
cld
shrb
fmuls
repz
sub
jne
out
loopne
stc
les
xor
aas
dec
ret
test
mov
push
jp
fnstenv
testb
push
mov
or
fstpt
dec
push
jne
pop
clc
jmp
mov
lds
and
in
cltd
mul
jne
mov
sti
fistpl
ljmp
in
out
adcb
mov
dec
adc
push
pop
adc
out
push
jge
push
fsubl
mov
cmp
je
mov
call
movsb
mov
mov
xchg
outsb
jecxz
push
add
stos
dec
popa
cmc
iret
push
xchg
or
add
mov
imul
pusha
adc
rcl
push
ljmp
pop
sti
frndint
movsl
enter
pop
sub
lds
mov
cmp
mov
iret
cmp
imul
cmc
inc
jb
sbb
fidivrs
mov
aas
nopl
andb
inc
cmc
jecxz
insb
fcmovnbe
popf
pop
arpl
sub
xchg
xlat
jne
adc
inc
insl
push
into
cli
cmp
mov
sub
lds
or
sub
adc
jbe
or
out
and
daa
or
xchg
pop
inc
in
lock
adcb
add
mov
xor
les
repz
insl
jl
inc
add
aaa
or
dec
dec
add
jns
cmp
push
sub
push
ja
clc
inc
test
adc
mov
loopne
ret
dec
xor
mov
in
xor
xrelease
jae
cld
test
pop
ret
or
iret
aad
xchg
xchg
loope
ret
dec
aad
mov
sahf
je
xlat
or
lods
or
hlt
ljmp
leave
mov
add
xor
mov
mov
pop
mov
sbb
imul
cmp
xchg
xchg
cmpsb
sar
out
ret
pop
push
shll
mov
xor
mov
xor
stos
push
iret
loopne
xor
dec
in
insb
sbb
insl
mov
mov
out
xor
mov
nop
neg
sarl
jbe
xor
push
cld
mov
lock
and
fisubl
push
test
adcb
lock
lret
lcall
add
call
popl
jg
mov
xor
xchg
cmp
dec
out
xchg
xchg
scas
jecxz
pop
stc
and
adcl
xchg
push
insb
dec
jne
js
dec
pop
mov
xchg
lea
xchg
push
and
xchg
lock
cmp
adcb
jne
push
inc
call
mov
sbb
fists
dec
dec
cmpsl
mov
mov
es
daa
add
mov
sub
and
sbb
ret
push
jg
int
jle
test
leave
sbb
insl
les
cld
pop
mov
dec
pop
fbstp
outsb
sub
movl
or
pop
daa
addl
int
sbb
arpl
pop
in
cmp
pop
outsl
add
push
sbb
add
les
pop
and
fisubs
popf
or
add
dec
ret
ss
jle
ret
out
mov
xchg
dec
jo
add
jle
adc
test
inc
inc
jmp
fs
movsb
push
xor
and
xchg
into
mov
jg
lods
jb
daa
dec
je
addr16
mov
aam
loope
rcr
rcrb
mov
cmp
push
clc
or
fstpl
push
mov
gs
xchg
or
cmp
pop
into
xchg
push
mov
stc
sub
xchg
lods
lea
ss
jecxz
dec
adc
mov
xchg
or
jle
mov
sub
lret
and
or
cwtl
loopne
repz
dec
stos
mov
inc
decb
push
jle
xchg
pop
cmc
pop
add
cs
ss
or
and
stos
cmpsl
jb
mov
adc
or
jge
push
jne
mov
adcl
inc
or
pop
adc
aad
jbe
ret
bound
dec
jecxz
cmp
repnz
test
mulb
and
and
xchg
js
and
push
movsb
and
addr16
inc
sbb
lock
in
push
mov
add
push
data16
mov
jns
push
sbb
test
pop
ret
inc
ficompl
popf
mov
dec
test
shr
add
push
repz
push
lods
outsl
inc
add
mov
daa
pop
lret
pop
jae
aam
fistl
pop
jno
adcb
jecxz
rcr
outsl
fisubs
lods
aaa
dec
je
scas
xchg
and
out
and
jae
mov
aas
lret
into
into
movsl
mov
lahf
push
push
sub
pop
sbb
xor
push
inc
sbb
lret
hlt
lahf
je
es
mov
inc
mov
stos
pushf
mov
cmp
mov
pop
push
add
out
gs
aaa
and
push
mov
test
sbb
ljmp
ficompl
cmp
pop
imul
jo
jl
in
fdivrs
cmpsl
mov
cwtl
adc
insl
mov
jl
pop
xlat
mov
in
push
out
call
cmpsb
int
push
test
fimuls
in
xabort
lods
imul
pop
in
xorl
sbb
lods
fisubs
in
mov
or
sub
jb
xor
and
dec
aad
sbb
pop
sub
dec
push
out
inc
das
sub
push
and
mov
inc
and
mov
lods
xor
push
outsl
or
js
dec
scas
sbb
fdivl
inc
fwait
mov
gs
and
popa
andb
and
lahf
or
into
popa
pop
arpl
push
test
in
pushf
push
loopne
ficomps
xchg
and
pusha
pop
les
aaa
adc
inc
in
sbb
imul
imull
loop
cmp
mov
in
add
data16
repnz
jmp
aam
mov
sti
cmp
pop
fadd
and
mov
cmp
imul
sbb
cmc
cmp
adc
lds
loope
mov
sbb
gs
mov
fs
push
movsb
movsl
sbb
add
or
rorl
xor
outsb
mov
sbb
pop
out
es
leave
ds
clc
inc
shll
push
sbb
sub
out
push
cld
ljmp
jge
adc
in
pop
call
inc
dec
sub
sub
or
xchg
call
push
imul
loope
div
imulb
ret
adc
and
sub
cmp
adc
outsb
xor
jns
stc
jns
pushf
or
xchg
pop
ss
adc
filds
adc
and
shrb
mov
xchg
aaa
inc
mov
mov
mov
pop
imul
push
mov
xor
ds
mov
scas
mov
sahf
cli
xor
jmp
push
shl
sbb
mov
aaa
and
sub
iret
pop
sbb
test
clc
je
mov
mov
sbb
notl
into
es
test
xor
clc
sar
movsl
mov
jle
rolb
js
sbb
or
lods
cmp
mov
pop
lahf
pop
add
movl
xchg
xchg
or
adc
inc
movsl
adc
aaa
adc
loope
add
test
loop
jno
mov
lcall
rcrb
sbb
jge
outsb
cs
mov
jno
enter
pop
dec
sbb
jle
ret
mov
scas
in
push
rcrl
sub
pop
or
dec
cmc
ljmp
adc
stos
scas
data16
roll
xchg
aas
jne
push
hlt
test
insb
push
fscale
aas
mov
jae
mov
xchg
adc
dec
dec
mov
and
cmp
lea
xor
push
aam
adc
push
sbb
cltd
int
cmp
sub
mov
xchg
movsb
cmpsl
xor
jp
mov
aam
mov
add
sbb
hlt
icebp
and
shrb
insl
xchg
add
jbe
add
cltd
cld
push
shrl
lahf
push
xlat
test
scas
pop
push
je
sbb
mov
xchg
sub
movd
into
and
popa
pop
xor
jnp
js
xor
test
jge
pop
pop
add
mov
adc
pop
loope
push
insl
jl
push
sbb
jg
cmc
mov
sub
pop
and
das
fisubs
loopne
mov
inc
cmpsb
loopne
xchg
mov
or
cmp
jns
cmp
aaa
aas
cmp
or
pop
mov
xchg
lock
fsub
aad
or
sub
stc
dec
js
pusha
xchg
fs
hlt
pop
test
sub
mov
xchg
mov
dec
push
xor
icebp
mov
clc
enter
fildll
push
les
sti
dec
add
cmp
std
jo
imul
dec
out
mov
mov
lret
repnz
andl
inc
sub
cld
sbb
and
mov
mov
aad
adc
jmp
cwtl
adc
pop
outsb
aaa
dec
mov
stc
icebp
inc
pop
into
aaa
daa
add
fsubrp
cmp
mov
xchg
and
mov
sbb
cld
je
lods
push
mov
pop
xor
clc
mov
cmp
cmp
push
or
sub
outsb
jo
add
push
mov
cli
rcrl
imul
jne
stos
adc
mov
imul
mov
push
sbb
lahf
cvtpi2ps
sbb
int
sub
addr16
and
cli
gs
iret
shrd
dec
repz
mov
idiv
leave
sbb
outsb
inc
and
loopne
sbb
fistl
rolb
test
ret
icebp
insl
popf
mov
xchg
rolb
jl
in
pop
outsl
in
push
mov
mov
popf
inc
xchg
jmp
ret
in
repnz
mov
outsb
hlt
rcrl
in
xchg
fwait
in
jp
and
aaa
lds
in
rcrl
add
or
int
outsl
xchg
loope
push
rcrb
inc
mov
repz
cli
mov
faddl
test
loop
inc
aam
data16
jbe
cmp
push
test
dec
test
adc
inc
push
stos
jl
les
fwait
in
mov
mov
dec
movsb
int
cwtl
adc
test
or
ljmp
sbb
jnp
xchg
leave
sarl
std
xor
cltd
das
sbb
pop
fbstp
ss
push
mov
test
xchg
mov
insl
das
adc
xchg
stc
les
add
enter
cmpsl
jmp
jnp
in
pop
push
aas
hlt
xchg
sub
xor
arpl
or
mov
jp
push
imulb
daa
jo
mov
cld
mov
popa
in
and
adc
mov
push
in
push
dec
mov
push
inc
xor
push
xor
lahf
pop
add
mov
je
inc
mov
push
cld
mov
adc
xor
int3
test
andl
es
icebp
and
int
mov
lcall
add
das
in
arpl
cmp
adc
out
inc
inc
icebp
out
sub
scas
int
adc
jl
cmp
inc
int3
adc
dec
xchg
or
lret
cmp
dec
push
or
pop
mov
jne
pop
sbb
pop
aaa
xchg
xchg
lea
sahf
popa
xchg
push
mov
dec
pushf
cmp
mov
adc
fsubrl
fs
aad
pop
sub
test
mov
jle
jo
mov
lcall
sti
pop
lcall
and
loopne
jmp
into
je
pop
mov
xor
inc
lret
loope
mov
sbbb
and
push
jg
jb
test
jp
dec
push
jge
and
mov
insl
mov
outsb
lock
enter
push
sub
push
fisubl
pop
into
dec
mov
add
adc
mov
jb
stos
fists
mov
int
adc
pop
jb
xchg
es
inc
mov
sub
fsubrs
jno
sbb
cmp
ror
out
cmp
lds
mov
ss
or
push
pop
fistl
repnz
sub
pop
jae
lds
mov
and
insb
ret
or
or
pop
hlt
stc
lcall
iret
fbstp
dec
enter
mov
bound
mov
inc
dec
xchg
push
ljmp
mov
test
loop
or
pop
jb
fadds
inc
pop
mov
push
pop
movsl
mov
lret
fcompl
xchg
stos
adc
pop
push
mov
mov
inc
aad
imul
cmp
lods
pop
out
xor
aad
incl
sbb
add
sub
rcr
dec
push
inc
adc
jno
mov
aaa
test
cmp
jbe
icebp
in
aas
xor
andb
clc
or
notl
inc
je
mov
mov
out
add
or
sarl
sbb
add
lret
scas
rcpps
cmp
cld
sbb
mov
ja
aas
aam
pusha
add
jl
shrb
cmc
cmp
push
cli
cmp
test
ss
mov
mov
jbe
mov
cmp
or
test
stos
je
stos
mov
enter
lcall
scas
mov
clc
pop
mov
adc
or
xor
ja
mov
mov
jne
cmpxchg
stos
fadds
imul
push
lahf
out
pop
cmp
outsb
mov
cwtl
add
pop
sub
lahf
jp
out
jecxz
arpl
xlat
ret
dec
or
inc
scas
pop
jmp
fidivrs
mov
xchg
in
push
sbb
pop
cmpsl
mov
fimull
dec
repnz
out
xor
or
mov
xchg
fcoml
inc
pusha
xor
int3
repnz
cwtl
ret
jecxz
mov
testb
scas
pop
fisttps
jle
and
scas
je
dec
jns
fwait
xchg
jle
popa
mov
lcall
iret
sahf
arpl
loopne
out
inc
aad
mov
imull
pushl
sub
nop
cli
cmp
jb
mov
mov
in
test
iret
jnp
mov
lock
cmpsl
mov
add
fcoml
les
add
mov
inc
aas
test
fmuls
in
adc
jo
jl
into
sbb
push
jno
into
sub
clc
pop
cltd
jle
pop
inc
sbb
mov
or
in
pop
jbe
xor
mov
loopne
push
add
js
pushf
movsb
sub
jne
inc
sub
cmpsl
cwtl
xor
jmp
mov
and
add
cmpsl
push
cmp
pop
xchg
out
jne
test
inc
cli
and
sub
pushl
push
sub
in
dec
sbb
scas
out
loop
pop
je
push
mov
dec
mov
fisubs
popf
sti
and
das
fucomi
wbinvd
mov
fisttps
jno
sub
outsl
sbb
iret
jnp
inc
loope
ret
inc
pushl
mov
jmp
loope
mov
cmp
fistl
add
mov
lcall
scas
popa
jle
inc
sbb
aas
adc
sbbl
jo
pop
clc
jno
push
sbb
push
dec
ja
cld
or
sbb
inc
lods
jno
arpl
je
clc
mov
push
shlb
clc
sbb
xor
sbb
adc
movsb
aas
adc
inc
fs
xorl
fiaddl
fnstenv
jecxz
mov
add
sub
push
daa
sbb
rcll
sbb
stos
xor
in
sbb
lock
imul
sar
movsb
fcmovnb
mov
add
xchg
ret
xchg
fmul
int
call
push
dec
cltd
pusha
add
cltd
popa
nop
icebp
sbb
outsl
notl
data16
movsl
into
data16
cmp
mov
jb
xor
ret
hlt
and
pusha
subb
sbb
mov
add
cmp
stos
inc
mov
push
loopne
xor
jbe
and
movsl
fisubl
addl
icebp
push
imul
out
ljmp
bound
xchg
int3
out
std
ror
imul
ror
movsl
les
fwait
inc
inc
mov
stos
xchg
mov
push
std
and
mov
adc
repz
add
dec
xchg
int
int
sub
pushf
std
inc
sbbb
jns
xlat
push
push
or
fs
into
imulb
lret
adc
pop
jnp
andl
mov
ds
mov
bound
mov
in
add
xor
pop
loopne
clc
cmp
pushf
sub
or
call
pop
pushf
ds
sub
sub
and
cs
addr16
shrb
push
adc
mov
push
jp
dec
pop
test
roll
jo
loop
je
mov
sbb
test
xchg
out
movb
jnp
push
jp
or
push
pop
and
dec
pop
aad
xchg
ss
cmp
cmp
into
cmpsb
add
push
push
mov
push
or
lret
call
movsb
das
nop
jp
cmp
and
test
data16
mov
std
adc
jg
iret
fidivl
and
add
out
jo
fnstenv
jle
jno
pop
movsb
stos
pop
and
fistl
orps
push
lret
mov
xchg
jns
in
mov
sbb
adc
pop
mov
or
inc
movsl
insb
or
notb
jg
dec
inc
imul
les
in
xor
sub
lcall
sbb
mov
stos
rcl
cmp
mov
cmpsl
cmp
sbb
in
xor
je
mov
pop
xor
repnz
xchg
leave
leave
leave
ja
stos
pop
xor
sbbl
dec
ret
mov
and
jle
inc
push
jb
mov
or
xchg
sub
xor
push
sub
mov
cli
add
sbb
push
and
jg
pushf
xor
sub
mov
cmpb
pop
sbb
add
js
or
fldenv
lds
cmpsb
out
jge
xlat
aaa
movsb
hlt
shlb
dec
sar
int3
les
pop
je
sub
jo
pusha
pop
mov
imul
inc
cmp
shll
xchg
sbb
aam
sub
mov
inc
ljmp
pop
loope
mov
mov
cmpb
inc
int3
rcrb
int3
and
and
mov
adc
fists
pop
incl
addr16
push
adc
mov
jae
cmp
sbb
cmpl
lret
jmp
lods
aam
je
lcall
sbb
mov
out
mov
sub
idivb
sub
sti
and
lea
out
dec
mov
cmp
in
dec
sub
mov
out
addr16
in
jle
add
xor
mov
popf
gs
dec
lahf
insl
sub
sub
pop
add
inc
dec
dec
xor
xor
fs
jmp
lret
and
xor
push
sub
xor
scas
testb
dec
sti
add
fucomp
dec
jnp
add
clc
addr16
lret
lods
sub
mov
dec
fwait
pop
and
mov
mov
jb
mov
int
imul
push
xchg
cmp
inc
push
add
pop
fs
imul
out
lahf
mov
in
lret
cmpsb
jno
insb
mov
daa
imul
xor
fs
nop
aam
jle
pop
cmp
lods
and
inc
or
cmpsl
xchg
ret
repz
xchg
pop
int3
sti
sbb
rcrl
adc
add
xchg
add
aam
mov
or
in
mov
push
dec
inc
xlat
shll
jge
or
cmp
cmpsl
cmp
or
mov
clc
cwtl
sub
lds
lcall
xor
repnz
cmp
pop
mov
mov
mov
and
sub
insb
xor
dec
xchg
rolb
pop
adc
repnz
cs
mov
cltd
in
pop
addl
mov
inc
xchg
sti
pop
mov
in
jmp
js
out
inc
add
repz
cmp
fidivrl
pop
push
sub
pushf
test
push
lea
pusha
jg
sub
dec
lods
inc
push
or
fsubr
inc
jnp
arpl
sarb
ret
scas
in
pop
dec
pop
inc
mov
xor
les
push
adc
cmp
sub
ret
jb
in
popf
push
mov
ja
insb
repnz
std
pop
test
jo
xor
addb
repnz
push
sub
mov
pop
in
into
xlat
inc
sarb
inc
sbb
inc
pop
mov
in
test
add
fisttpll
cmp
ret
inc
add
cmp
sbb
cli
mov
adc
mov
es
repz
sbb
std
stos
insb
ret
aam
aaa
aad
sub
in
inc
adc
neg
in
clc
pop
jmp
in
push
jne
mov
dec
shrb
push
xlat
push
nop
das
pop
inc
popf
jbe
lret
outsl
push
cli
insl
mov
push
arpl
shr
add
push
repz
rorb
icebp
add
mov
scas
push
movsl
ja
andb
lods
xchg
mov
cmp
movsb
addr16
pop
fildl
and
or
out
into
cmc
out
imul
sbb
fadds
decl
jmp
dec
dec
jl
xchg
cld
mov
cmp
test
pop
lods
dec
dec
sub
ror
hlt
mov
cmp
and
loopne
insb
mov
bound
push
xchg
jl
ljmp
mov
pop
lcall
ret
and
xchg
jge
sub
push
push
adc
js
js
lds
xchg
in
xchg
insb
mov
out
pop
xor
daa
dec
jbe
cmove
loopne
es
mov
xlat
lods
dec
mov
andl
dec
imul
sbb
cwtl
jo
push
scas
or
xchg
mov
mov
jne
mov
mov
loopne
ret
add
iret
add
or
imul
cltd
sub
mov
inc
mov
aam
mov
xabort
or
pusha
fcomi
sub
adc
aaa
arpl
lret
jo
ds
sbb
push
xchg
inc
sub
mov
imul
mov
mov
pop
lret
dec
fldenv
xchg
cmp
sub
push
sbb
jnp
fiaddl
scas
ret
sbb
mov
loopne
xchg
mov
jmp
pop
int3
aam
stos
enter
adc
and
or
inc
sbb
jns
arpl
lds
sub
and
inc
mov
xor
into
xor
or
sbb
adc
push
sti
inc
cmp
pop
add
scas
ljmp
out
daa
jnp
and
clc
imul
out
adc
and
cmp
popa
mov
inc
cmpsl
lret
fidivs
mov
push
lret
test
es
push
xchg
mov
dec
jmp
cli
gs
movsb
push
test
stos
aad
xor
es
push
in
inc
cmpb
mov
sub
push
and
push
lret
mov
xor
mov
lcall
mov
sub
fsubs
dec
mov
add
scas
mov
orl
jecxz
sbb
notb
shr
loope
mov
test
je
repnz
pop
outsl
lcall
sbb
sbb
jb
repz
sbb
push
xchg
fisubl
lds
mov
andl
rcr
jb
imulb
lea
out
pop
cmp
sbb
lock
inc
das
stc
xor
loope
push
adc
and
aas
aas
loopne
filds
mov
or
add
scas
nop
inc
sbb
idivl
adc
mov
into
sarb
test
dec
es
inc
gs
lcall
jmp
stos
sub
inc
dec
movl
and
cld
mov
lods
jns
pusha
mov
out
mov
call
sbbb
pop
test
mov
sub
jge
hlt
cmc
std
shlb
mov
aaa
mov
pop
or
rorb
icebp
outsb
dec
sahf
pop
dec
imul
sub
popa
in
call
inc
stc
in
movsl
ja
mov
pop
inc
negl
daa
testb
push
push
adc
cmp
xchg
or
xor
push
pop
mov
cli
pop
mov
fwait
sub
jecxz
orb
xchg
insl
sub
xchg
pusha
inc
mov
test
mov
popf
add
cmp
xrelease
loop
or
cld
sbb
enter
or
inc
aam
sbb
rorb
test
mov
adc
lahf
jae
add
test
jns
mov
xchg
movsl
nop
push
call
jae
sbb
mov
lret
cs
adc
pop
adc
xor
rcrl
aam
mov
push
and
fsubs
jp
nop
popa
xor
push
clc
imul
das
cmpsb
fwait
bound
pop
adc
jmp
pop
mov
leave
push
faddl
mov
dec
jg
sbb
adc
cmp
lret
int3
sub
push
xchg
mov
shll
add
cmp
ret
jl
jmp
sub
mov
adc
and
out
mov
adc
pusha
mov
inc
inc
push
sub
push
push
xchg
jno
mov
cmp
in
adc
icebp
fwait
pop
jbe
lea
test
mov
gs
inc
cmpsb
orl
and
jo
addr16
cmp
pop
cli
pop
call
jbe
outsl
jg
push
fildll
sbbl
loopne
cmc
adc
pop
mov
adc
in
push
test
or
daa
fsubl
filds
push
or
fwait
outsl
iret
mov
loopne
push
fstpl
test
rol
fimull
adc
lahf
sysret
int
into
test
nop
jecxz
movsl
pushf
aas
les
out
lods
rcrb
mov
lods
lret
push
mov
icebp
adc
aad
add
lods
xchg
es
call
jnp
jbe
sbb
in
lds
mov
mov
push
and
sbb
jne
pop
fildll
jp
insl
push
lods
push
cs
addb
add
into
cltd
testl
ss
dec
pop
repnz
inc
push
xchg
jno,pn
rcll
dec
dec
sbb
add
push
xchg
add
lock
popf
notb
jg
push
mov
repnz
jno
rcl
div
ret
jge
pop
bound
adc
imul
and
in
mov
mov
sub
in
xlat
mov
inc
push
or
repnz
mov
add
push
mov
cmpsb
cmc
int
mov
jne
dec
mov
mov
icebp
or
test
xlat
rcrb
mov
sub
loop
xlat
pop
mov
out
sbb
sub
out
pop
ss
push
cmp
out
out
out
and
std
add
nop
std
push
mov
fildl
sub
das
sub
stos
mov
aam
pop
lds
das
push
pushl
scas
shll
jo
inc
mov
pop
stos
nop
pop
test
push
add
pop
sub
mov
dec
out
roll
mov
loopne
test
add
mov
sub
lret
fildll
ja
scas
xor
and
in
cmp
fcmovbe
sar
push
cld
push
hlt
add
push
inc
leave
loop
in
push
mov
test
add
sbb
das
fnsave
add
inc
fwait
dec
arpl
and
jbe
daa
mov
loop
sbb
rcrb
scas
and
xlat
sub
leave
daa
out
lock
lahf
push
aad
clc
loopne
repz
rorb
jnp
sbb
jp
cltd
outsb
and
xor
mov
mov
mov
mov
nop
cli
int3
outsb
rcr
jo
nop
pop
inc
jns
add
in
iret
jne
lret
jecxz
or
shl
mov
popa
divl
dec
cmpsb
ljmp
fs
add
cwtl
xchg
push
mov
lods
xchg
xchg
jecxz
xor
xor
lcall
les
hlt
sbb
repz
mov
pop
cld
pushf
xchg
sbb
hlt
mov
stos
sbb
mov
out
in
ror
dec
sbb
lahf
ret
jp
stos
xchg
aaa
shrb
lock
adc
test
inc
out
dec
inc
pop
cmp
lods
ds
mov
and
ja
add
dec
xchg
lock
inc
adc
sbb
testb
push
cwtl
je
xor
hlt
mov
mov
test
cs
pop
adcb
jae
xchg
pop
push
ljmp
cmpsl
mov
out
call
inc
pop
jno
sahf
push
lret
adc
jnp
in
daa
mov
add
or
pop
popf
pusha
sbb
jb
dec
fwait
dec
daa
mov
int
add
lock
xchg
sbb
xchg
lock
cmp
jp
lock
imul
mov
in
addl
adc
gs
dec
nop
pushf
pushf
push
shl
inc
les
inc
mov
clc
push
inc
or
pop
ds
inc
aaa
loop
and
scas
pushf
pop
inc
sbb
aaa
xor
rol
ds
pop
jo
add
sub
and
sbb
mov
inc
lahf
dec
sub
loop
mov
into
nop
or
inc
add
sbb
stos
xor
lock
sub
movsl
xchg
frstor
imul
jbe
stc
push
shl
pop
mov
leave
iret
push
xchg
sbb
push
sbb
mull
sahf
arpl
xchg
sahf
imul
mov
mov
out
xor
lret
data16
inc
clc
xor
dec
adc
hlt
scas
out
jns
pop
fdivr
and
das
fmulp
adc
inc
and
ja
xchg
jns
push
xchg
push
xchg
sti
cmp
test
add
stos
inc
decl
loopne
sub
inc
mov
inc
or
ljmp
jp
scas
imul
data16
les
inc
movsb
ja
ret
clc
dec
bound
stc
fs
cmp
adc
mov
add
loop
push
jo
call
ret
cmp
xchg
rol
ficoml
in
rolb
sbb
jl
cld
mov
mov
dec
lods
test
loopne
or
xorl
dec
repnz
enter
repnz
test
ret
sbbl
testl
fadd
xchg
xchg
push
mull
push
sbb
xor
inc
in
sbb
jmp
sbb
inc
sbb
jne
imul
jns
orb
push
test
fld
or
or
xchg
out
andb
push
repnz
or
popa
xor
iret
and
lock
lret
push
cltd
ja
pop
cli
ja
popa
xchg
nop
fldl
cmpsl
push
lock
mov
cmp
test
insl
push
add
arpl
mov
push
mov
movl
lret
push
mov
lahf
mov
xor
fwait
popf
mov
pop
ds
movsb
fucomip
jmp
repnz
sahf
idivb
inc
adc
sbb
push
jae
inc
imul
aam
shrb
fsubs
outsl
lret
sbb
push
add
pop
rol
push
in
push
adc
lahf
or
lods
out
imul
imul
pop
sub
dec
fisttpl
jge
ds
fimull
ficomps
add
adc
cmpsl
adc
sub
and
and
pushf
and
push
loop
jo
orl
loop
sbb
ret
ja
jae
push
sbb
jnp
pop
aam
scas
and
aas
cmpsl
lods
aam
sbb
int3
stos
xlat
inc
imul
inc
mov
cmpsl
call
xchg
sub
rcrl
jmp
jno
push
cmc
shll
lret
test
fstps
aam
mov
in
and
pop
jns
dec
mov
loope
std
hlt
xor
dec
adc
sbb
and
clc
mov
nop
lret
mov
mov
push
mov
fsub
sub
adc
cmp
mov
lret
das
subb
lahf
dec
lcall
fs
sub
push
push
pop
add
ret
inc
jnp
pop
cmpb
aas
xor
xlat
cwtl
sbbb
lret
inc
cld
inc
mov
iret
fxam
push
gs
lret
cltd
ss
js
imul
jp
or
mov
sub
fisubs
sbb
fisubrs
or
xchg
jecxz
jo
add
pushf
in
cmp
jne
push
idivl
outsl
xchg
push
mov
mov
push
cltd
in
jo
es
clc
subb
loop
mov
cwtl
test
sbb
jp
cli
bnd
std
out
out
sbb
add
pushf
mov
fwait
push
mov
sbb
sbb
cmpsb
jge
add
inc
xchg
shll
and
fwait
xor
out
cs
out
scas
pop
aam
insl
out
push
adc
mov
idiv
test
fcomps
xchg
in
push
push
pop
mov
add
sbb
xor
int
fsubrl
pop
icebp
cmp
cmp
aad
adc
outsl
add
lahf
pop
mov
xchg
rolb
dec
xor
mov
outsl
ss
xchg
in
cli
push
pop
cld
ror
mov
test
pop
xorb
fdivl
xor
mov
sbb
ret
test
inc
mov
push
pop
sub
clc
jge
aam
jnp
sbb
lock
sbb
xchg
add
push
ljmp
add
jbe
xor
push
loopne
cs
pop
in
shrb
in
aam
popf
add
fsubrl
mov
lock
and
push
ret
xor
popa
cs
hlt
pop
xor
je
jle
mov
insl
cmp
aad
dec
in
mov
int
xchg
call
push
test
push
xchg
mov
xor
cmp
jg
xor
mov
and
in
leave
xor
daa
in
or
jnp
mov
cmc
aam
mov
call
fisttps
sbb
push
daa
std
push
push
icebp
sub
push
das
mov
pop
fcomps
cwtl
sub
add
in
dec
jbe
inc
lock
xchg
pop
lds
in
je
xorb
fimull
js
or
cli
out
fisubl
das
xor
ljmp
rcrl
adc
mov
jge
adc
stc
mov
inc
mov
xor
pop
je
add
sub
and
lds
adc
stc
loope
adcb
mov
cltd
pop
xchg
jae
and
mov
test
sbb
stos
push
inc
mov
lahf
inc
loope
and
mov
push
mov
ss
div
ret
jo
outsb
lret
rol
push
push
adc
dec
jno
push
fwait
movsl
mov
and
scas
push
cmc
movsl
dec
mov
orb
mov
inc
jb
xchg
push
add
sub
lcall
shll
jne
data16
jp
sarb
jl
mov
xchg
mov
addr16
fnstsw
icebp
out
popa
add
push
add
loope
add
push
mov
sub
mov
pop
push
push
cs
loop
inc
add
xor
mov
and
les
mov
popa
cwtl
push
clc
pop
mov
cmpsb
fldt
inc
add
test
xchg
inc
cs
frstor
mov
cmpsl
add
popa
pop
stc
mov
pop
orl
and
push
xor
fnstenv
fwait
xor
lahf
xchg
mov
cmp
sbb
testl
push
leave
jo
je
adc
add
push
outsb
ret
xor
mov
xor
mov
in
in
shll
and
xchg
shrl
imul
loop
push
rorl
push
jno
jmp
mov
sbb
fwait
dec
pop
pop
and
cmp
shrb
in
je
fidivl
inc
pop
adc
rcrb
xchg
rclb
dec
in
roll
lcall
sbb
push
jns
les
cld
leave
jbe
push
fmul
push
jg
and
mov
test
cli
jl
mov
ja
xchg
scas
ljmp
mov
mov
jo
jecxz
es
mov
cmpsl
mov
lds
and
mov
pop
test
and
add
js
xchg
inc
jle
outsl
divl
lcall
js
pop
mov
xor
sahf
dec
jge
loope
aam
and
jmp
cwtl
xchg
or
jmp
push
les
dec
enter
sub
stc
nop
sbb
push
adc
out
xchg
push
insl
dec
nop
mov
das
or
sbb
cs
or
cltd
sbbl
and
mov
push
nop
hlt
hlt
ss
dec
xchg
and
jmp
pop
mov
mov
roll
popa
fcoms
bound
sub
into
and
scas
ds
xchg
loope
cmp
fstl
fstpl
das
mov
loop
inc
cmp
mov
imul
cmp
movsb
fisttps
loop
sbbl
and
sbb
jno
test
rclb
std
iret
insl
subb
push
mov
mov
or
movsl
cmp
das
cmpsl
xchg
cmp
pop
pushf
add
xorl
sbb
jns
jae
push
mov
loopne
sahf
movsb
pop
dec
mov
fsub
popa
ja
out
xchg
fcoms
insb
clc
clc
adc
fwait
add
pop
mov
cs
lahf
push
fwait
mov
ror
cmp
popa
out
push
testb
ljmp
pop
fidivrs
add
push
pop
pop
aaa
imul
repnz
push
sbb
jb
cmp
std
inc
add
fs
fisubs
imul
and
lret
pop
movsl
std
popa
mov
icebp
mov
push
ret
xor
aam
xor
dec
sbb
test
insb
adc
lods
aam
xor
fs
xor
pushf
adc
mov
dec
cmp
es
sub
push
cmp
xor
movsb
hlt
je
cmp
idiv
out
add
mov
xor
pop
daa
sbb
cs
lds
ret
pop
mov
jl
xor
cmp
add
push
or
pop
mov
into
fcmovu
xchg
pop
pop
aam
dec
pop
arpl
sbb
cwtl
adc
popf
es
icebp
pop
xchg
inc
lods
fnstcw
cmpsl
fldt
loop
scas
mov
das
mov
movb
imul
jg
repnz
pop
adc
cmp
cmp
jne
mov
inc
push
mov
jns
push
xor
xor
insb
mov
sub
mov
pop
jno
jmp
pop
xchg
jae
push
cmpb
fld
in
xor
add
mov
iret
fisubrl
js
mov
push
push
jae
fcomps
mov
aam
mov
inc
mov
pop
hlt
jno
imul
out
mov
dec
adc
mov
cmp
jo
nop
das
iret
sub
add
xchg
and
xchg
test
pop
sub
jl
pop
sbbl
jne
in
inc
xchg
dec
inc
popf
imul
pop
xor
arpl
icebp
dec
cwtl
push
sahf
mov
aaa
leave
xchg
ja
arpl
mov
add
pop
aaa
enter
gs
sub
fwait
push
mov
fildl
jl
pop
sub
out
jns
and
aad
call
xor
xor
pop
and
mov
xor
pop
mov
push
das
incl
push
inc
sub
dec
imul
xchg
test
je
outsb
mov
ds
add
int
mov
xor
mov
roll
xor
sbb
and
loop
rcrl
lcall
or
mov
das
scas
pusha
adc
jno
cmp
sbb
cmp
mov
xchg
ret
jg
mov
stc
sti
out
xlat
dec
jl
mov
scas
push
movsb
scas
adc
cmp
hlt
ret
mov
push
push
repz
inc
gs
jae
pop
pushf
mov
scas
and
les
and
mov
pop
sub
mul
or
fdiv
js
pop
aas
mov
fidivl
pop
test
dec
dec
xlat
dec
test
jbe
xor
das
pop
xchg
movsl
imul
gs
jbe
test
mov
lret
fs
jae
test
imulb
xchg
ret
movsb
mov
es
dec
pushf
dec
cmp
loope
xchg
xchg
and
push
inc
mov
movsb
mov
lods
ret
mov
ja
cli
xorl
lret
rorl
mov
push
mov
cmp
sbb
repz
push
dec
cltd
gs
fisttps
das
scas
and
andl
bound
out
ret
test
mov
inc
aam
jbe
lock
jo
push
sahf
pop
js
dec
dec
lods
ss
and
rorb
or
xchg
aaa
jge
xor
pop
push
notb
adc
push
mov
test
add
cs
mov
adc
or
into
mov
test
jmp
pop
sbb
fstpt
int
pushf
sbb
lret
arpl
xor
fwait
mov
je
xlat
mov
sub
dec
outsb
mov
rcl
and
pop
jecxz
add
in
sbb
jecxz
pop
adc
sbb
sar
xor
in
pop
inc
inc
or
dec
ficomps
inc
inc
jae
sahf
repnz
ss
dec
pushf
lods
mov
jg
mov
subl
or
out
mov
into
int
mov
and
pop
jmp
popl
dec
sahf
arpl
ljmp
dec
mov
or
shll
movsl
out
stos
sub
jecxz
xchg
sbb
pop
jne
xlat
aam
out
rcl
in
xor
pop
or
enter
loop
push
sbbl
dec
mov
adc
das
mov
ds
adc
repnz
icebp
push
mov
xor
adc
cmp
scas
or
xor
mov
dec
sub
or
mov
out
mov
xor
pushf
test
jl
movb
push
shrl
ja
jnp
in
rclb
aaa
mov
fisttpll
cld
test
cmp
pushf
pop
sbb
jl
pop
rolb
cmp
mov
xlat
mov
out
mov
les
cmp
adc
inc
aad
loope
cmp
push
lds
dec
pop
movsl
shll
ds
fimull
mov
iret
jbe
in
mov
je
shlb
adc
mov
jb
push
push
pop
lods
ja
rorl
or
mov
shr
loope
mov
mov
mov
or
insb
fwait
in
mov
add
hlt
dec
pop
int
jge
mov
sbb
sti
xor
sub
cltd
rclb
imul
popf
dec
or
inc
fs
cmp
ljmp
popa
push
fnstcw
outsb
mov
out
aam
mov
in
cmc
cmc
mov
cmp
and
dec
inc
enter
sti
nop
cs
icebp
sub
js
sbb
xor
out
bound
mov
leave
std
rcl
outsb
and
xchg
dec
push
stos
push
int
sbb
movsb
movsl
mov
js
mov
in
out
adc
imul
incl
in
movsb
repz
leave
hlt
enter
adc
test
and
or
mov
pop
push
into
inc
lock
rdtsc
dec
cmpsl
jl
inc
xchg
fcmovb
outsl
cmc
mov
movsl
sbb
pop
leave
lcall
ljmp
mov
dec
aaa
xor
mov
cmp
xor
stos
sub
jmp
or
ljmp
rcr
mov
ljmp
push
rcll
arpl
and
pop
jne
mov
out
int3
mov
std
aas
ror
lcall
lret
repz
stc
std
sub
jae
or
sbb
test
lahf
mov
mov
in
in
sbb
shrb
stc
dec
adc
lcall
inc
push
cmp
dec
cmp
fcomps
adc
xor
hlt
mov
adc
push
xor
jb
imul
gs
push
in
xor
sub
adc
and
sub
pusha
xchg
pop
dec
loop
inc
cltd
push
insb
mov
fnstcw
insl
lcall
gs
cmc
ficompl
mov
sarl
out
mov
lret
iret
cmp
rclb
pop
bound
and
cmp
lcall
dec
jmp
lret
lock
xor
fmull
outsl
hlt
std
mov
and
xchg
sarb
xchg
dec
push
xchg
xchg
mov
dec
mov
xor
lahf
insb
mov
cld
jle
jnp
lret
xchg
outsb
adc
add
call
movsb
jl
xchg
or
scas
imul
and
push
mov
sti
aaa
daa
in
iret
jge
dec
dec
rorb
or
add
xor
into
push
idivl
lock
sbb
test
gs
rcr
mov
dec
pop
in
sbb
jl
nop
mov
inc
pop
cmc
mov
cmp
mov
add
int
shll
sbb
and
adc
fldl
push
cmp
bound
cld
add
push
xchg
mov
dec
rcr
aad
rolb
add
subl
jns
and
test
push
aad
mov
mov
jo
pushf
test
and
jnp
adc
addr16
xor
in
stos
xor
push
mov
mov
repnz
loope
decl
pop
mov
dec
and
jb
xor
mov
and
idivl
fcoml
push
rol
lock
iret
scas
mov
sti
lock
in
pop
movsl
fsts
xchg
add
das
mov
adc
cmp
mov
jge
mov
xchg
movsb
xor
rcrb
and
dec
mov
es
sbb
cmp
or
mov
xchg
fcmovnu
xchg
lret
out
xchg
cmp
and
scas
lds
test
sub
mov
mov
stc
jne
inc
mov
cld
push
xor
jns
jmp
mov
in
add
nop
aad
shl
das
pop
mov
xchg
je
xor
or
int3
inc
test
jae
mov
scas
les
cmpsb
fmulp
pop
in
fiadds
mov
mov
mov
jp
cmpsb
cmp
cmp
add
sbb
cld
lret
imul
and
adc
xor
addr16
and
test
mov
jl
xlat
jae
imul
add
adc
les
add
popf
or
mov
ss
loopne
sub
lds
js
xorb
mov
sub
push
mov
insl
push
xor
popa
fldl
shl
pop
aaa
jbe
lret
inc
dec
and
mov
mov
cli
test
sub
mov
data16
add
pop
fidivrs
add
mov
dec
sub
insb
loope
cmp
imul
jmp
mov
daa
aam
or
push
xor
adc
int
pop
in
or
icebp
stc
setno
xchg
cs
jo
rorb
mov
test
xor
lahf
cld
jb
lcall
andb
dec
stc
or
pop
mov
and
jno
add
cmc
test
hlt
and
mov
jbe
imul
repnz
fistpl
outsl
sahf
clc
lret
bound
insb
repz
add
inc
mov
popf
adc
ret
jl
mov
cwtl
sub
or
pop
cld
xchg
insl
mov
or
rolb
xor
inc
mov
add
xor
mov
push
jl
or
clc
cld
jg
mov
int3
shl
pusha
js
jae
and
ss
lcall
jo
push
loopne
icebp
loopne
ljmp
sub
or
jnp
sahf
jnp,pt
add
lret
sub
mov
push
js
xchg
loop
fdivl
mov
jns
jbe
aaa
enter
jo
adc
stos
or
jmp
mov
mov
loope
mov
xchg
lahf
or
mov
cwtl
sub
mov
pop
and
jns
fsub
sub
mov
xchg
add
sahf
mov
inc
mov
and
in
add
xchg
add
add
push
mov
inc
adcl
sbb
addl
int3
dec
into
or
les
xor
jl
rorl
pop
adc
xor
lret
mov
sub
nop
and
add
outsl
ja
xor
pop
sub
and
add
jle
sbb
cmp
adc
dec
push
adc
push
imul
pop
xchg
mov
stos
mov
sub
add
int3
lcall
ret
xchg
xchg
add
leave
push
dec
adc
fiaddl
push
mov
cmpsl
inc
pop
push
das
sub
and
inc
jne
cmp
aad
jle
arpl
adc
jp
lds
popf
adc
stos
jno
cmpsl
out
lods
xlat
test
xor
outsl
dec
pop
int3
aam
fcoms
repz
movhps
xor
in
cld
cmc
xor
jecxz
loopne
mov
mov
imul
push
adc
adc
lods
add
inc
push
or
enter
pop
dec
in
mov
and
xchg
mov
jecxz
mov
push
ljmp
sub
cs
xor
insl
sub
and
shrl
dec
test
repnz
insb
adcb
clc
mov
fisubrs
das
call
jne
adc
jg
push
push
insl
loope
in
outsb
pop
push
mov
push
lret
shll
xchg
pop
and
pop
mov
clc
pop
mov
movsl
insl
imul
fimuls
mov
mov
adc
repnz
jecxz
push
xchg
sahf
sbb
out
xorb
mov
or
iret
shrl
in
mov
adc
sub
lret
xor
sysret
data16
xorl
data16
jns
test
xor
bnd
dec
dec
in
leave
jp
leave
mov
lcall
dec
jbe
mov
pop
push
sub
fwait
jb
mov
loopne
inc
enter
cltd
fwait
xchg
fcomip
std
stos
jae
dec
lret
in
addl
xchg
cmp
ljmp
cmpsl
sub
aas
lahf
push
or
pop
roll
aaa
pop
dec
shl
in
sub
shl
push
xchg
nop
sub
push
ficoms
std
pop
les
and
imul
sbb
sub
js
pop
push
push
sub
and
or
add
out
add
imul
lret
pushf
ror
fwait
rorl
add
cmpsb
ljmp
mov
fcom
cmpl
mov
movsb
dec
addr16
xchg
pop
cltd
into
mov
bound
int
incb
cmp
mov
lret
pushf
jae
stos
enter
dec
lret
outsl
lods
xor
cmp
sub
and
and
faddp
cmpsb
xchg
inc
jbe
fucomi
shl
xchg
add
repnz
cld
sub
out
and
jg
mull
in
negl
iret
daa
cmp
sbb
mov
fldenv
fldenv
jge
imul
rolb
push
mov
rorb
mov
adc
pop
pop
fdivrp
push
sub
mov
dec
sti
and
adc
lods
repz
pop
dec
js
lahf
imul
push
out
cmc
sarl
stos
iret
popa
xchg
int3
insl
test
ja
adc
sbb
inc
inc
lock
int
and
push
loop
loope
cld
sbb
sbb
call
cli
dec
lods
lret
insb
les
call
shr
inc
xchg
fidivrl
add
pop
mov
jp
sbb
das
cmp
push
sub
std
repz
cmp
jl
xor
mov
fdivrl
jne
xorb
mov
leave
jno
icebp
push
mov
fcomps
xor
push
out
pusha
push
inc
es
sbb
arpl
cmp
mov
mov
dec
xchg
lret
xchg
push
bound
sub
mov
jmp
push
sahf
loope,pt
cmp
insl
or
fwait
push
sub
jmp
mov
fidivrl
push
sbb
fs
inc
push
rorb
aam
les
and
or
add
sarl
ja
or
pop
imul
mov
jnp
popf
iret
sbb
jmp
clc
mov
xor
mov
xchg
ss
jo
lods
or
jns
and
cs
inc
and
das
cmp
movsb
aas
aas
jo
jge
sti
into
lret
pop
xchg
nop
repz
mov
mov
fld1
inc
sub
into
cli
rcl
pop
mov
or
push
out
xor
mov
add
push
bound
fidivrs
testl
dec
enter
or
sbb
mov
cmpsl
scas
int3
xchg
xchg
mov
cmpsb
push
pushf
push
inc
movsl
jno
pop
outsb
cwtl
mov
enter
std
cmp
jl,pt
iret
lds
push
cmp
lret
xchg
addr16
and
sub
cltd
vpaddsb
js
aad
mov
les
jns
cwtl
fnstsw
adc
ret
insl
loope
push
stc
push
js
insl
jle
sub
stos
subb
jne
out
int3
pop
inc
mov
jp
es
rorb
lret
ret
mov
fs
push
loopne
jmp
lds
mov
ret
sub
cli
lds
mov
xlat
movsl
pop
movsb
divl
adc
pop
xchg
dec
mov
roll
cmp
mov
jns
mov
mov
roll
add
sub
xor
test
inc
cwtl
call
aaa
test
xlat
mov
repz
rcrb
lock
enter
leave
push
mov
lret
mov
inc
cld
pop
in
leave
pop
pop
cmp
inc
add
mov
int
icebp
fimull
sub
fldt
aam
shl
mov
and
imul
in
aaa
repz
cmp
das
xchg
in
mov
mov
inc
das
jmp
clc
push
call
mov
mov
fidivl
pop
aam
cld
mov
push
jbe
rolb
pop
mov
rolb
lock
movsb
adc
int3
call
xchg
imul
insl
adc
jns
sbb
sub
or
pop
cmp
aaa
scas
mov
xchg
repnz
mov
cmp
in
cmp
fsubs
stos
lret
movb
es
stc
dec
pop
icebp
mov
iret
fcmovnu
sbb
aas
data16
jl
sub
stos
cmpsb
out
negl
pusha
jg
sub
sub
xchg
roll
and
dec
repnz
push
loop
and
ja
shrb
and
pushf
mov
dec
xchg
push
xor
sub
fdivrl
inc
push
xor
jne
push
nop
jb
imul
lcall
ds
pushf
daa
dec
out
or
icebp
scas
movsl
jecxz
cmpsb
mov
adc
fadds
mov
in
aas
imul
jle
lcall
mov
test
inc
nop
jmp
sbb
jge
cmpsb
cmp
inc
sti
push
mov
dec
push
xchg
fdivl
sbb
inc
mov
fdiv
stos
sti
dec
xchg
push
ss
int3
mov
mov
bound
sbb
or
scas
in
cmp
dec
aas
cmp
sbb
xchg
dec
dec
popf
xor
mov
pop
stc
xchg
inc
test
mov
pusha
aas
dec
adc
leave
and
fistl
xor
movsl
xchg
inc
sub
arpl
pop
les
pop
mov
mov
sbb
mov
sbb
loopne
loope
and
cld
add
loope
mov
popa
test
stc
clc
in
je
sbb
push
in
cmp
cmpsb
push
cs
ss
leave
dec
les
dec
and
leave
mov
mov
and
call
out
xchg
popf
and
dec
arpl
cmp
jbe
jmp
add
sbb
fdivrl
fwait
icebp
cmp
icebp
repnz
xor
add
pop
or
adc
lahf
adc
xchg
sarl
cmp
jle
and
pusha
fadds
jmp
aam
push
push
or
fwait
push
push
and
jnp
std
mov
mov
ret
adc
lret
jne
mov
daa
scas
dec
js
cwtl
sub
out
lea
adc
sbb
cli
add
mov
jg
in
icebp
enter
push
xor
jnp
loopne
mov
int3
push
mov
enter
mov
or
aam
pusha
ja
in
pop
dec
jl
insl
cwtl
test
push
cli
aaa
push
dec
aaa
mov
dec
repnz
lods
jo
xchg
dec
jle
in
mov
pushf
sub
iret
insb
jae
dec
loope
fwait
push
xchg
sub
push
lcall
xchg
sahf
push
jle
in
jmp
cs
jmp
or
mov
repz
mov
shrl
test
or
stos
int3
aaa
cmp
into
shr
movsl
cli
and
sub
push
imul
mov
jnp
in
shlb
cmc
int
fidivrl
cmp
outsb
repz
imul
mov
movsb
xchg
cmpsb
mov
test
inc
xor
jno
push
inc
out
and
inc
jo
inc
daa
or
pop
pop
or
xor
cmp
mov
in
ss
mov
xor
cmp
dec
lret
shlb
and
int
push
mov
xchg
inc
sbbl
cmp
cmp
or
cmp
repz
enter
dec
es
jns
push
push
popf
aad
cmp
and
icebp
daa
gs
jnp
push
add
je
filds
lret
push
jmp
cmp
ror
insb
mov
std
jbe
push
mov
ret
enter
fimull
ss
bndstx
push
ds
fadd
in
pop
jmp
or
or
call
mov
push
xor
leave
mov
lret
jmp
jg
and
pop
dec
movsb
mov
sahf
pop
pop
data16
scas
cld
mov
gs
out
aaa
cmp
xchg
loope
add
xor
pop
push
mov
dec
mov
dec
pop
dec
sbb
or
ja
cmpsl
sub
mov
sbb
mov
adc
jae
sub
aaa
lods
sbb
xchg
addl
mov
jg
xor
insl
jno
repz
mov
pop
or
outsl
insl
addl
inc
adc
jle
inc
repnz
xchg
add
mov
aas
and
xlat
add
je
or
or
pop
sub
push
setge
sbb
push
inc
stc
cmp
inc
fwait
jg
data16
adc
iret
lahf
imul
icebp
jle
fxam
and
enter
xchg
mov
dec
cmp
out
mov
inc
or
movsl
pop
fs
daa
int3
mov
cmpsb
arpl
push
negl
jl
dec
lods
inc
data16
fisttps
das
mov
add
imul
mov
jecxz
push
jle
jle
mov
adc
mov
jbe
into
inc
fsubrs
or
sub
xchg
lret
xor
jmp
fmulp
setle
adc
scas
sarb
loop
call
pop
mov
inc
cltd
out
and
arpl
add
mov
fiaddl
adc
push
repz
in
insl
outsb
pop
jae
pop
xrelease
test
clc
mov
sbb
or
pop
out
mov
xlat
fstpl
mov
iret
fcmovnu
in
addb
jmp
mov
cmp
push
cmp
arpl
movsb
incb
in
jp
mov
xchg
add
pop
stos
dec
aaa
cmp
hlt
jne
shlb
cwtl
out
aad
fstpt
mov
sbbb
mov
cwtl
punpckhdq
into
jecxz
push
push
mov
add
push
push
adc
scas
xchg
idiv
pushf
mov
inc
mov
fnsave
fcompl
scas
fxch
jbe
fldenv
hlt
inc
mov
pop
test
add
jp
movsl
jbe
sub
pop
jno
loopne
jo
movsl
adc
pushf
das
xor
inc
ret
outsb
in
or
lods
dec
jnp
pop
pop
adc
sbb
add
dec
inc
into
popa
out
inc
jae
enter
pop
xchg
pop
mov
in
or
fstp
es
pop
and
cmp
pop
sub
pop
xorb
add
jns
xchg
mov
adc
add
enter
dec
movsb
or
scas
lds
daa
mov
outsl
call
push
push
cmpb
jge
iret
out
mov
out
mov
push
jp
mov
out
and
jg
xchg
and
dec
mov
das
insl
addl
loope
stc
setne
xchg
pop
repnz
dec
or
scas
mov
xchg
push
ficomps
ret
pushf
popa
gs
icebp
fcomps
ds
adc
flds
bound
jbe
es
inc
int3
sbb
mov
xchg
nop
test
aad
mov
mov
sarb
xchg
inc
jge
mov
push
mov
jp
mov
sbb
add
or
pusha
sbb
xchg
xchg
test
je
fmul
sub
push
dec
cmp
sarl
ljmp
cmp
or
ret
addr16
pop
dec
jne
pop
dec
test
stos
sub
or
and
xlat
lds
xchg
int3
jo
jp
mov
pop
adc
bound
stc
xchg
or
loopne
out
jne
lret
mov
jg
gs
pop
inc
fildl
adc
clc
hlt
out
cld
loope
out
mov
dec
dec
mov
jmp
cmpsb
mov
adc
dec
insb
mov
clc
loopne
xchg
jnp
cwtl
cmp
xchg
leave
dec
and
dec
push
cmp
data16
fucom
icebp
scas
mov
repnz
and
dec
fbld
or
xchg
lret
xchg
enter
cmp
test
cmp
mov
pop
popf
pop
cmpsb
addr16
pop
dec
imul
aam
mov
mov
and
mov
lcall
pop
out
adc
stos
jmp
lds
das
ljmp
mov
dec
in
push
xchg
cli
xlat
push
hlt
mov
pop
add
cmp
js
dec
cmp
ror
dec
pop
mov
mov
xlat
mov
es
aas
das
mov
cmpsb
pop
stos
pop
xor
or
sbb
xchg
and
mov
das
add
mov
sti
movsl
aaa
and
lds
adc
mov
testl
xor
or
inc
mov
sub
aaa
lret
stos
mov
andl
insl
jnp
pop
xchg
shr
xor
pop
scas
or
gs
fcomip
rolb
notl
aad
push
sbb
fwait
mov
inc
ror
or
les
mov
sub
pop
ja
jg
mov
jg
test
or
mov
pop
sub
shrl
mov
cmp
cmpsb
hlt
cwtl
aas
push
and
out
or
int
pop
imul
pushf
jg
pop
les
fimull
jne
sahf
cmpb
addr16
sub
xlat
gs
pop
cmp
std
push
mov
add
mov
inc
push
lods
mov
fcomps
push
adc
mov
test
mov
leave
jmp
or
fsubr
shrb
pop
fsub
out
fistpll
stos
lret
call
pusha
notb
or
mov
sbb
mov
pop
or
mov
jge
int
jge
rorl
daa
lahf
aas
insl
je
ljmp
or
and
out
xchg
pop
mov
outsl
data16
push
clc
mov
imul
xchg
add
push
xor
mov
lods
lahf
jno
cmpsl
int3
push
leave
dec
rorl
je
xchg
in
cli
inc
test
fcoml
xchg
xor
mov
xchg
xor
mov
lahf
ret
fdivrl
outsb
adc
je
or
sahf
xchg
xor
jns
imulb
ret
inc
imul
lret
int
cltd
test
popa
mull
add
xor
iret
add
xchg
jp
hlt
ret
imul
cmpsl
and
lock
inc
adc
es
ret
sbbl
sar
add
pop
mov
push
cltd
test
movsl
jge
push
lods
sub
sahf
sbbb
mov
test
int
and
pop
or
ljmp
mov
ljmp
mov
inc
js
lds
int
mov
fdivrl
imul
mov
rorl
mov
pop
addr16
mov
sub
aad
movsb
imul
pop
add
repnz
inc
sub
movsb
cltd
mov
aas
stc
lds
mov
sub
scas
mov
push
inc
div
xchg
pushf
inc
mov
jecxz
sub
out
sub
inc
mov
pop
mov
cli
mov
scas
adc
cmp
test
test
xchg
jecxz
push
test
pop
pop
xchg
xorb
js
std
cmp
es
ror
pop
adc
mov
add
imul
adc
lds
pop
mov
data16
in
cs
test
out
hlt
sbb
add
jne
sbb
jp
dec
cmovno
sbb
aam
repz
popa
adc
rcrl
sahf
add
push
xchg
int3
sbb
ss
cwtl
sbb
jl
sbb
leave
outsb
xchg
lahf
inc
lods
lds
lock
cmp
mov
loopne
jge
mov
fidivrl
lret
test
sbb
mov
cmp
lods
mov
push
xor
mov
jbe
dec
mov
in
fdivrs
adc
xchg
fnstcw
das
mov
out
push
dec
cmc
push
dec
mov
mov
push
add
sbb
inc
ljmp
pop
and
or
xchg
add
mov
std
sbb
aad
clc
xchg
sbb
mov
cmp
rcrb
test
pushf
mov
push
cmc
clc
xor
lahf
push
popa
pushf
push
fs
and
add
test
inc
and
ja
divb
outsb
ret
inc
aas
cli
stc
pmulhuw
lret
out
jb
or
cli
xor
and
jno
jb
out
adc
add
nop
aad
mov
fldt
sbb
sbb
lds
mov
aas
dec
xchg
inc
fidivrl
std
orps
iret
xor
jns
adc
nop
xor
adc
fs
dec
outsb
xchg
or
scas
leave
pop
adc
mov
pop
adc
cmp
in
mov
lret
test
push
jg
xchg
in
jge
jae
andl
dec
fnstenv
cmp
pushf
cmp
mov
inc
cmp
ss
xchg
add
xlat
stos
adc
xchg
adc
test
cmpsl
aas
ja
or
and
jge
daa
loopne
popl
add
push
addr16
shl
lahf
aam
lahf
out
enter
out
shll
negl
sub
int
add
sarb
mov
dec
mov
pop
jns
sbb
jne
xor
inc
sbb
xlat
mov
cwtl
xchg
inc
mov
orl
ret
add
inc
addr16
dec
push
inc
addb
push
xor
int
sbb
add
std
and
push
insl
push
sahf
jecxz
insl
repnz
xchg
cmp
outsl
pop
xchg
mov
mov
mov
out
mov
and
sti
pop
aad
sbb
xchg
scas
scas
or
divl
inc
add
push
cwtl
ret
nop
and
insl
jne
testl
lds
inc
in
in
mov
mov
aas
sbb
shlb
and
jae
fcom
in
sti
imul
xor
cmp
into
push
testl
aad
xchg
lods
cmp
out
sahf
stos
cmp
xlat
or
xor
mov
adc
out
xchg
push
ficompl
mov
les
mov
jnp
hlt
xchg
lock
pop
shl
push
repnz
and
repz
push
cmp
xchg
dec
das
sahf
and
xor
adc
push
jmp
jns
or
jg
inc
mov
loope
lds
fidivs
pop
xor
sbb
imul
fldl
pop
mov
lret
push
aad
xchg
push
shll
lea
add
inc
scas
and
xor
arpl
inc
cld
dec
adc
and
mov
fldenv
mov
inc
add
pop
mov
call
icebp
xor
leave
cmp
cmpsb
cmp
mov
sbb
and
pop
sbb
cs
lcall
das
and
movsb
sub
mov
rcll
cmpsl
std
test
cmp
test
xchg
scas
and
lret
inc
mov
mov
adc
or
arpl
leave
mov
xchg
adcb
scas
jl
icebp
adc
xor
in
mov
mov
sbb
cld
dec
mov
sub
jo
add
sbb
pushf
sbb
jb
mov
fstp
pop
decb
mov
negb
dec
addr16
xchg
sbbl
ret
lret
add
sub
jecxz
popl
xchg
cld
push
mov
xchg
mov
pop
jne
call
mov
movl
out
add
dec
repz
shrb
jmp
push
movq
mov
mov
test
mov
xchg
ljmp
scas
mov
push
fisubs
sub
cmp
dec
loop
cmp
mov
movsl
mov
fdivrl
push
sti
pushf
jge
imul
lcall
mov
sahf
mov
call
mov
dec
mov
jno
daa
movl
or
and
aas
dec
and
fmull
aas
clc
int3
int
sti
movsl
out
lret
cltd
daa
and
cld
ret
in
outsb
pop
sbb
xor
insl
shr
cmp
loopne
notb
inc
out
ljmp
ljmp
and
mov
fwait
xlat
shl
hlt
sahf
cmpsb
in
adc
cmp
inc
sbb
or
movsl
sub
pushf
pop
mov
popf
lcall
fwait
imul
xchg
ljmp
dec
push
cmp
add
fsubl
pop
dec
mov
aam
and
aam
xchg
bound
push
pop
inc
inc
pop
dec
out
pop
in
lcall
cmpl
push
mov
repz
insb
ljmp
stc
cmc
pop
ss
cmp
aas
mov
add
stos
jmp
jle
pop
insb
fcmovu
lret
mov
push
push
fldl
in
adc
inc
xor
mov
pop
and
in
jbe
enter
lds
inc
xchg
inc
cld
fildl
repz
sub
pop
mov
lods
in
sub
cmp
lods
xor
pop
in
add
sbb
jl
and
mov
pop
jl
inc
arpl
push
mov
icebp
sbb
loope
rcl
jae
pop
sbb
mov
jp
mov
mov
nop
mov
or
enter
push
enter
xor
xchg
call
jns
clc
xor
or
arpl
adc
mov
popa
adc
shll
push
sti
imul
xchg
ljmp
mov
or
addr16
xor
cmc
ja
lods
pop
push
jno
jecxz
pop
mov
sar
push
daa
lret
pop
je
and
shld
xchg
sti
rclb
dec
and
jl
lahf
bound
sbb
imul
lcall
outsb
lea
ds
clc
fisubl
aas
stc
xchg
test
inc
test
xchg
lahf
mov
sbb
push
dec
or
fdivl
cli
or
dec
pop
mov
push
and
scas
data16
mov
icebp
adc
mov
cs
mov
jmp
enter
push
nop
rorl
ss
xchg
and
sbb
cmp
iret
adcl
push
icebp
mov
cmp
dec
push
lods
mov
icebp
jp
packsswb
cs
jl
rclb
xor
mov
imul
pop
jne
f2xm1
mov
push
scas
mov
mov
push
cmpb
idivb
mov
aad
pop
sbb
pop
mov
in
sub
std
sbbl
int
and
loop
gs
int3
pop
mov
arpl
icebp
xchg
test
or
aam
cmp
and
jbe
jne
inc
mov
aas
in
mov
push
dec
adc
aam
leave
rol
adc
les
negb
aaa
xor
mov
push
jns
iret
pop
pop
sbb
lret
repz
out
and
inc
adc
jmp
scas
or
aad
push
in
sbb
mov
jno
pop
aam
gs
or
xchg
rcrl
add
adc
xor
sub
arpl
cmp
in
sub
jmp
push
or
shr
and
mov
push
pop
lods
movsb
stc
gs
mov
mov
mov
insb
sub
repz
std
push
mov
or
jae
repnz
outsl
push
aaa
pop
lods
test
jb
add
xlat
dec
cwtl
or
push
lahf
aam
cmp
ss
push
cmpxchg
testl
pop
mov
in
adc
or
ja
lret
loop
push
mov
lds
cmpsl
xchg
xor
cmp
lret
or
std
or
pusha
jg
mov
add
or
lret
orl
push
or
in
mov
sbb
pusha
les
mov
push
fdivrl
jge
icebp
popa
popa
shrb
xchg
es
decb
mov
movsb
cmpsl
dec
mov
or
mull
xor
add
fsubrs
xchg
mov
hlt
mov
mov
xorl
inc
in
add
and
inc
pop
adc
inc
mov
push
xor
sub
dec
xor
rorl
rorl
les
xor
lods
jne
lds
iret
jle
cmpsb
xor
in
xchg
cmp
adc
sbb
sbb
xor
enter
adc
or
pop
adc
push
mov
and
jno
out
push
outsb
pop
push
movsl
mov
popa
inc
iret
push
ret
aam
mov
mov
cmp
jno
repnz
out
dec
mov
movsb
sbb
lods
aaa
scas
mov
lds
bound
sub
mov
xchg
sbb
push
inc
add
jecxz
sbb
inc
pop
push
mov
sub
mov
mov
xor
jae
je
cmp
sbb
sub
stos
sub
faddp
int3
jne
std
aas
movsl
cmp
push
sub
shl
sti
inc
and
pop
cltd
and
outsb
mov
mov
inc
int3
lret
hlt
push
decl
ds
shlb
inc
dec
js
pop
inc
test
dec
scas
shl
adc
jnp
in
add
jecxz
outsl
rolb
cmp
jmp
lcall
jp
arpl
cld
loop
loopne
int3
test
addr16
out
dec
lret
out
jl
add
or
push
sbb
mov
call
push
and
mov
cmp
dec
imul
icebp
mov
mov
mov
fcmove
aam
push
in
cmp
xor
popa
adc
mov
mov
lret
push
cmp
int
add
in
ja
ss
inc
fmull
pop
xor
add
ljmp
mov
add
cmc
aad
test
cltd
in
es
scas
imul
pop
movsb
push
or
mov
bound
loopne
inc
inc
rcll
rorb
inc
cmpl
jne
dec
fisubrl
jg
jl
xor
pop
cwtl
or
sbb
leave
jle
dec
cltd
push
jno
fisttps
in
push
sub
aas
lea
inc
and
ljmp
pop
inc
adc
xor
aam
aam
fisubl
loop
xor
shrb
cmp
int
test
loopne
in
and
xor
aam
sub
sbb
adcb
xchg
pop
movzbl
sub
xor
mov
test
and
inc
xor
sub
cmp
pop
mov
repz
and
adc
add
into
fidivs
ljmp
jae
pop
fwait
lods
or
loop
int3
xchg
xchg
inc
iret
jle
out
sbb
pop
fisubs
sub
aad
adc
sahf
or
adc
nop
cwtl
sub
sahf
imul
add
adc
int3
imul
mov
xchg
and
or
dec
mov
jo
test
loopne
mov
in
mov
and
outsb
int
fst
xchg
jl
sbb
sahf
dec
leave
out
aam
mov
gs
push
mov
in
sbb
sbb
in
xchg
mull
cltd
push
mov
sbb
lahf
sar
stc
dec
test
inc
pop
and
mov
imul
aad
jecxz
popa
ret
aad
xlat
dec
push
cltd
call
outsl
and
sub
push
ret
xchg
cwtl
jl
xchg
popf
cmp
xor
das
sbb
mov
jge
loopne
sub
sub
negb
fsubs
xor
lahf
shrb
push
pop
sbb
test
xorl
lcall
shll
jno
cmp
pop
mov
and
call
adc
and
mov
int3
sbb
mov
cltd
or
lods
mov
in
mov
mov
add
or
xor
sbb
cmpsl
xor
pop
pop
dec
mov
jecxz
fisubrs
sbb
clc
push
cli
dec
std
sbb
fcoms
mov
mov
shll
js
icebp
xorb
scas
jp
rcr
popa
adc
fwait
pop
lea
sti
xor
mov
andb
push
mov
popa
into
sub
stos
jae
add
add
mov
je
bound
loop
jb
outsb
xchg
pop
sub
ficompl
pusha
cli
test
mov
movsb
pop
sbb
sub
scas
js
push
cmp
jmp
call
pop
dec
sub
xchg
sbbl
dec
aas
rolb
jmp
mov
dec
lods
nop
sub
xchg
add
stc
imul
scas
fs
sbb
stos
mov
mov
xchg
add
sub
xor
push
mov
ret
sub
mov
lock
lret
fcoms
fucom
testl
fistpll
and
add
mov
jbe
pop
inc
xor
rorb
sub
sub
jmp
or
ds
cmp
pop
cmp
andb
inc
mov
lock
lods
sbb
dec
cs
xlat
sar
xor
mov
jb
cmpsb
mov
mov
inc
push
add
clc
dec
mov
loopne
sub
mov
nop
cmp
mov
hlt
shll
mov
and
imul
push
in
mov
sub
mov
cmp
mov
sbb
mov
jge
push
call
or
jge
jmp
out
xchg
loopne
xchg
fwait
xor
mov
xchg
les
jo
cmp
movsb
daa
jl
and
jge
out
jb
add
push
xor
call
dec
cmp
add
pop
neg
push
ljmp
aad
or
fldl2e
lock
out
fldln2
ljmp
test
sarb
xchg
cmpl
std
gs
mov
sub
sub
lahf
sub
mov
sbb
das
out
stc
jg
in
out
xor
int
in
xor
popl
ljmp
mov
aas
pop
fsts
gs
dec
out
mov
pop
mov
test
data16
stc
and
inc
mov
aaa
mov
pop
xchg
xor
pop
cs
lods
or
push
adc
or
lret
in
pop
fmuls
xlat
pop
cwtl
cltd
out
adc
mov
inc
fcmovnbe
mov
insb
and
jmp
ret
xchg
jmp
insb
in
sub
int3
pop
xchg
add
xlat
cli
inc
xor
fldenv
mov
insl
testb
fisubrs
inc
push
cli
inc
and
push
rolb
mov
or
insb
addr16
les
call
scas
push
rolb
std
pop
ljmp
xorl
iret
movb
xchg
ljmp
mov
adc
mov
loope
minps
push
outsl
lea
outsl
jge
mov
imul
push
sub
out
xor
mov
ja
pop
sbb
ret
xlat
xchg
mov
mov
xchg
xchg
mull
xor
jae
lea
sub
xor
notl
pop
subl
and
dec
xchg
jecxz
push
ret
cld
hlt
inc
movsb
xorb
cmp
adc
push
jbe
dec
dec
cmpsl
fldlg2
adc
data16
xor
sub
inc
aam
pop
xlat
xor
movsb
jno
adc
icebp
xchg
popf
push
mov
dec
sbb
aaa
fldenv
xor
dec
jmp
stos
insb
jge
lret
xchg
stos
push
push
fisubl
stos
movsl
mov
jmp
xorl
test
loope
mov
lea
or
out
jb
inc
cmp
xchg
sbb
jmp
fnstcw
xchg
lock
cmp
fnstsw
mov
mov
adc
xor
sbb
sub
xor
lods
addr16
in
repnz
or
insw
push
cmc
popf
add
out
or
rcll
jl
dec
leave
jne
xor
cmp
cmpsb
jle
push
movsl
cli
pop
adc
mov
idiv
add
xchg
xor
les
shrb
fucom
pop
ljmp
push
aas
dec
lcall
xchg
sub
xchg
adc
dec
mov
fs
adc
clc
scas
push
out
inc
mov
clc
stc
push
adc
aam
rcr
popf
xor
dec
mov
lea
lret
sbb
sub
test
call
lock
test
adc
fsubl
add
insb
idivb
xor
stos
mov
imul
inc
xchg
lahf
loope
or
rcr
lock
cmp
dec
dec
lahf
out
movsb
sbb
insl
cmpl
and
and
fstpt
and
inc
mov
mov
scas
xchg
cmp
mov
xchg
or
dec
xchg
cmp
repz
cmp
jmp
cld
divl
push
jno
in
mov
cmpsb
outsl
sub
push
xlat
xor
adc
mov
mov
jp
adc
push
and
fistpl
push
xchg
stos
adc
ss
aaa
dec
sbb
mov
xlat
inc
ds
xor
mov
fldt
xchg
push
mov
div
sub
xchg
inc
mov
scas
add
sbb
in
es
fldcw
icebp
jge
sbb
cld
jg
jmp
aas
adc
call
sub
sub
inc
test
and
jo
jmp
mov
fstpt
insb
cmp
sub
movsb
or
inc
mov
leave
push
mov
stos
pop
fisubrs
ds
push
pop
inc
cltd
pop
shll
xor
or
jo
dec
shl
xchg
and
adc
ret
rcl
inc
pop
push
add
mov
pop
or
mov
leave
pop
loope
popf
or
push
movsb
mov
aad
dec
dec
dec
cmpsb
cmp
xor
push
leave
andl
sahf
mov
jnp
mov
enter
cmp
sub
cmpsl
xor
inc
or
int3
mov
fwait
jp
add
popf
push
xchg
cmp
sbb
sbb
mov
in
inc
xor
cltd
js,pn
in
jp
jnp
dec
cwtl
pop
hlt
scas
stos
adc
xor
mov
fnstenv
sub
inc
ljmp
mov
jb
xor
pop
push
int
rcrb
mov
out
jg
outsl
repz
aam
jmp
je
negl
dec
xor
jne
test
jecxz
cltd
sti
cwtl
repz
imul
stos
outsl
xchg
push
pop
aaa
daa
inc
scas
pop
sub
movsb
jge
sbb
cwtl
mov
ljmp
lock
pusha
mov
adc
aas
cltd
pop
insb
adc
lock
mov
fcmovnu
andb
test
mov
fcmovu
cli
inc
and
aad
call
data16
mov
dec
pop
cmp
lahf
dec
mov
xchg
jno
xlat
loope
fnsave
mov
les
inc
jle
sbb
rclb
and
dec
cmp
dec
imul
sub
sbb
push
add
mov
dec
add
adc
push
je
xor
push
stos
fildl
dec
lret
dec
add
push
pop
repnz
mov
cwtl
push
les
ja
cmpsb
lret
icebp
and
addl
fadd
xchg
dec
mov
and
cmpsb
xchg
cmc
test
jbe
mov
mov
popa
int
testl
adc
pusha
or
cmp
fildl
cmp
jno
dec
lret
or
fld
push
xchg
push
dec
sti
cli
cmpsb
sbb
pop
mov
les
push
and
and
loopne
add
xchg
mov
mov
cmp
mov
hlt
fstl
adc
aad
fildll
shrb
xchg
jl
jno
es
add
shlb
push
out
loope
daa
push
loopne
fcoms
sbb
imul
outsb
movl
aam
add
lret
lock
aam
lret
addl
inc
jg
sub
ljmp
ja
xor
or
mov
xchg
mov
push
gs
stos
or
mov
ret
cmpsb
mov
jecxz
mov
movsb
mov
aam
mov
sbb
orb
fldl
xor
mov
xor
ljmp
mov
mov
pop
push
push
aam
mov
imul
movsl
popa
mov
fnstenv
sbb
cmp
and
pop
aas
adc
lea
mov
in
jge
mov
cwtl
out
inc
mov
pop
dec
cmp
jo
mov
mov
cmp
popl
in
mov
mov
js
jne
adc
in
mov
or
xor
bound
dec
and
rcrl
dec
and
push
mov
cvtpi2ps
out
sbb
mov
mov
xchg
sbb
cmp
jo
lods
push
add
adc
pushf
ss
addr16
rolb
lods
clc
xor
icebp
sbb
into
lahf
jg
mov
loope
ljmp
adc
std
cltd
push
sbb
out
adc
jmp
or
jo
or
ret
xchg
sub
sahf
xchg
jge
insb
jl
and
inc
cwtl
adc
in
add
inc
push
or
jl
cmp
pop
adc
call
push
ret
cmp
scas
repnz
mov
shrl
xchg
adc
lret
pusha
dec
dec
enter
jg
xchg
add
frndint
dec
pusha
inc
pop
cmp
enter
daa
xor
jo
leave
divl
sbb
lret
lret
cmp
inc
or
mov
cmp
movsl
mov
testb
or
mov
or
or
outsl
scas
add
jmp
pop
add
ret
pop
cmp
adc
push
and
jbe
in
cmpb
out
jmp
outsl
cld
or
sbb
dec
inc
ja
mov
pop
sbb
and
adc
enter
fsubrl
and
pop
pop
adc
push
mov
je
ljmp
repnz
pop
adc
mov
leave
test
cmp
insl
clc
out
mov
push
pop
lods
xor
jae
mov
push
stc
mov
test
xor
add
push
shrl
add
mov
addl
dec
add
mov
cwtl
cmp
push
test
adc
push
lock
dec
sub
pop
popa
push
add
jle
nop
fistpl
push
lds
jp
in
sahf
imul
ss
enter
xchg
sub
bound
push
fidivl
sbb
ljmp
sub
dec
test
lahf
mov
outsl
fwait
xchg
js
leave
mov
cmp
jl
and
mov
dec
call
clc
dec
push
jne
mov
xchg
mov
nop
mov
mov
fdiv
in
btl
jmp
pop
fwait
in
lds
and
sbb
mov
and
lahf
xor
xor
aaa
xor
mov
push
push
sub
push
push
and
xchg
push
add
push
mov
pop
sti
adc
das
push
cmp
xor
insl
fxch
or
mov
sbb
push
add
inc
mull
dec
xchg
fstpt
and
out
adc
and
inc
aaa
das
xor
outsb
test
add
adc
push
popf
jns
mov
or
and
pop
std
mov
or
sub
mov
pop
mov
sub
mov
mov
mov
and
adc
out
or
xor
jno
adc
in
popa
loop
inc
sbb
or
and
pop
inc
rclb
or
cmp
repz
roll
fwait
in
cs
mov
ret
out
push
jp
mov
jp
inc
or
loop
cmpl
mov
and
shrb
or
loop
sub
insb
xchg
dec
jle
sbbb
push
cld
aaa
jae
sbb
lds
into
and
or
clc
mov
stos
cltd
xchg
in
lock
or
aad
in
adc
cmp
mov
orb
rcrb
or
sbb
stos
stos
dec
inc
xchg
jb
jo
inc
jl
popf
jns
outsl
mov
pop
and
pop
add
test
jno
pop
shrb
or
icebp
fistl
dec
into
stos
in
imul
push
leave
push
or
fidivrs
mov
leave
inc
aaa
xor
ficomps
loope
loope
push
cld
in
xchg
cmpsb
or
pushf
mov
fsub
cmpb
cmp
imul
push
lcall
or
pop
add
cltd
stos
fucomi
xchg
push
mov
stc
xor
mov
xchg
add
push
add
xor
ss
lahf
push
sbb
icebp
je
mov
fwait
xor
pushl
add
lds
insb
xor
pop
cmp
sub
pop
leave
repnz
loope
sbb
adc
cmp
fidivs
push
std
dec
xor
dec
pop
dec
ljmp
inc
pop
cwtl
mov
fs
orl
fimuls
lcall
pushl
jnp
in
sub
xor
xor
pusha
push
mov
mov
repnz
xor
mov
cmc
mov
loopne
int
and
sbb
inc
js,pt
jmp
jo
adc
pop
mov
and
aaa
outsl
jl
cs
mov
call
dec
inc
mov
test
sarl
jno
icebp
pop
stos
xlat
lret
and
and
mov
or
bound
or
loope
loopne
jne
outsl
int3
and
xchg
outsb
xchg
int3
sahf
ret
cmp
stos
inc
leave
or
clc
xor
loop
rclb
push
jp
and
dec
rorb
push
lahf
sbb
dec
add
js
jb
cmp
adcb
add
mov
icebp
popa
lea
xchg
mov
xlat
mov
cli
mov
xchg
inc
repnz
pop
lods
je
sub
dec
cmp
je
fidivl
or
lods
loope
push
add
cli
inc
rcl
arpl
xor
add
jne
pushf
fdivrl
push
inc
in
dec
sub
mov
addb
ds
push
enter
and
sbb
add
pop
mov
and
ss
aas
xchg
pop
outsb
outsl
loop
push
loopne
addr16
into
fidivrl
daa
mov
push
jno
push
and
inc
scas
popa
std
call
cmpsl
adc
mov
dec
adc
push
mov
xchg
push
call
mov
out
add
cmp
stc
imull
lret
adc
lods
sti
lea
dec
fstl
and
cmp
push
out
ja
mov
repz
xor
mov
imul
ljmp
cltd
sub
cld
or
sbb
clc
push
fdivl
sub
daa
ror
mov
iret
jl
dec
cmc
lods
pop
dec
jb
fcompl
lret
xchg
mov
out
jmp
out
add
ds
cs
add
or
inc
xor
xchg
rorb
cmp
cmp
mov
out
dec
movsb
xchg
add
je
inc
cmpsl
dec
movsb
jb
inc
jle
fcomi
jle
sbb
sub
jo
test
cmp
pop
andl
sbb
out
enter
pop
sbb
ror
call
cmp
cld
sbb
push
fisubl
xchg
cmp
jp,pt
pop
mov
push
cmp
fsqrt
xchg
add
fdivr
xor
je
cmp
cmpsb
enter
or
sub
lcall
imulb
dec
pop
sub
shrl
mov
ret
inc
or
dec
aad
das
mov
loopne
xor
gs
jmp
xchg
add
push
pop
cld
aam
mov
subl
pop
inc
adc
leave
inc
repz
push
add
roll
sbb
orl
jl
push
dec
cld
idivb
sbb
fdivl
inc
test
test
cmpsl
jns
sbb
aaa
pop
pop
stc
sub
pop
sbb
push
push
push
aad
ret
insb
mov
jo
inc
int3
jle
inc
mov
inc
dec
jne
inc
loop
ss
arpl
mov
pop
hlt
lods
xchg
jg
int
imul
push
repz
ljmp
scas
lea
mov
lret
and
or
push
mov
sti
jp
imul
gs
loop
dec
jns
dec
mov
test
cmp
leave
test
mov
dec
cmpsb
sub
jle
nop
mov
and
cmpsl
pop
test
push
and
lds
out
mov
mov
stc
xor
mov
movsb
inc
inc
adc
dec
mov
push
push
pop
xor
popa
cmp
cs
into
mov
int
shrb
jl
iret
xor
cmpsl
jle
pop
sbb
push
ss
dec
add
clc
sub
push
pop
and
pop
sbb
mov
ret
sbb
fists
xor
out
ret
mov
add
test
jno
jecxz
out
lods
push
out
pop
mov
inc
ret
xor
sub
adc
cmp
popa
lods
fidivrs
lcall
sbb
movsb
jnp
sub
call
push
push
mov
push
inc
andb
and
mov
adc
subps
int3
fnsave
outsl
fisubs
roll
mov
lock
cmc
xchg
scas
icebp
sub
mov
mov
jnp
mov
and
push
mov
fisubrs
sarb
or
test
cltd
dec
nop
cmp
add
sahf
dec
popa
popw
outsl
add
sahf
jle
pop
notl
adc
inc
sahf
push
sbb
dec
mov
imulb
mov
repz
imul
movsb
xor
jne
cmp
sub
addr16
or
dec
int
js
movsb
stos
cwtl
aas
repz
cwtl
sahf
or
inc
insl
cmp
mov
xchg
inc
lea
xchg
in
pushf
dec
cmp
fldl
jl
mov
xchg
pop
or
inc
cltd
cmp
pop
sahf
test
xor
dec
push
daa
add
out
inc
mov
insb
mov
inc
inc
sub
dec
jge
imul
sbb
rcll
jno
pop
push
loopne
sti
pop
sub
in
xor
test
cli
xor
cmp
add
into
mov
xor
push
lock
mov
adcb
lods
xchg
sti
andl
mov
pop
mov
add
aaa
in
xorl
lods
lock
decb
lahf
sahf
jo
add
clc
mov
aam
cmpsb
cmp
jno
js
adc
dec
dec
push
xor
fcompl
arpl
lret
jmp
adc
sar
lret
push
sahf
std
lods
outsl
rcll
gs
mov
dec
hlt
dec
cmpb
out
sbb
pop
and
mov
loope
test
and
dec
scas
enter
lea
mov
mov
cmp
xchg
imul
loop
dec
lds
insl
test
sbb
jp
mov
mov
jne
std
cmp
mov
imul
in
mov
and
xchg
inc
cmp
xchg
cld
in
aas
pop
pop
push
inc
sbb
out
mov
andb
or
pop
xchg
sti
dec
dec
std
sbb
inc
pop
jb
sub
inc
lahf
pop
out
xlat
mov
cmpsl
or
movsb
push
push
test
xchg
lds
cmp
test
jecxz
daa
js
adc
ficomps
sub
cmp
push
and
insl
stos
or
enter
jp
jl
mov
mov
jbe
lahf
xorl
stos
cmp
push
movsb
into
xchg
stos
imulb
cmp
cmpsl
push
mov
mov
pop
aaa
test
jnp
testl
fisubl
imul
pop
xchg
mov
gs
jp,pt
stc
add
daa
jmp
push
fisubl
loop
jne
mov
je
out
ror
adc
popa
pop
sub
iret
inc
mov
mov
sub
xchg
fwait
out
add
mov
mov
inc
pop
push
xor
pusha
mov
out
outsb
xorb
mov
test
xchg
enter
xchg
push
jnp,pn
test
nop
xlat
cmc
in
add
shrl
sub
imul
jo
inc
jns
ja
rcrl
sbb
jb
jmp
sarb
adc
je
ja
cmc
push
xlat
ret
shlb
fwait
inc
lret
pop
lcall
add
pop
fxch
mov
test
and
outsl
leave
add
or
nop
in
out
testb
aad
pop
fistps
push
inc
imul
xor
pop
jne
outsl
sub
adc
ret
test
jne
fdivs
mov
call
testb
cmpsl
cld
mov
dec
test
shlb
xchg
int3
sub
cli
xor
xor
bswap
loop
insb
inc
fnsave
add
mov
addb
push
repnz
lret
pop
cli
std
xor
pop
push
mov
fcmovbe
pop
adc
into
loopne
add
hlt
into
sub
negb
adc
xor
jb
enter
cmpsl
inc
adc
adc
mov
cmpsb
mull
js
add
pushf
cli
mov
dec
mov
adc
sub
mov
lret
nop
ljmp
add
jb
hlt
sub
push
xor
jp
adcb
mov
mov
mov
sbb
frstor
scas
jecxz
sbb
loop
dec
shlb
mov
aas
jnp
cltd
mov
fldl
mov
enter
or
in
push
jne
inc
sbb
sub
xor
je
cli
dec
push
xor
daa
call
in
es
clc
and
push
adc
pop
jmp
leave
push
rcr
mov
shlb
jg,pn
mov
lods
adc
push
jb
mov
imul
lods
cmp
pop
or
enter
aam
movsb
xchg
aas
xor
pop
pop
mov
fistps
repnz
sbb
add
in
imul
pop
push
add
inc
aad
leave
aaa
cmpsl
fiaddl
push
mov
pop
add
lock
cmp
jg
xlat
test
fcoml
mov
add
sahf
cbtw
sarb
andb
cmc
rorb
inc
and
sub
jne
xchg
jo
in
add
mov
and
loopne
jl
push
sti
mov
frstor
or
fdivrl
es
push
dec
sub
subb
imul
and
inc
xchg
hlt
outsb
xchg
mov
sub
mov
and
mov
pop
xchg
push
cmp
xchg
mov
or
sub
aaa
cmp
add
enter
loopne
cwtl
scas
jl
adc
imul
lods
push
sub
dec
sub
dec
cmp
xchg
das
and
cmp
inc
jne
and
sbb
mov
dec
push
cmp
or
out
loope
xor
out
pop
call
pop
test
outsl
sub
mov
xor
mull
cmp
jg
inc
outsl
imul
in
test
scas
jp
adc
xchg
out
pusha
sti
movsl
divl
pop
orl
mov
adc
lds
addb
add
imul
jne
jno
mov
pushf
loopne
ficompl
mov
or
mov
xor
or
fsubr
or
stc
ds
mov
daa
mov
test
cmp
cmp
mov
mov
jno
cld
insb
jae
push
inc
jns
mov
lods
imul
sahf
incl
in
xchg
xchg
in
nop
lods
jne
cmp
mov
push
xor
lock
or
fistl
sahf
push
or
mov
sbb
lret
andb
stos
dec
loop
pop
adc
cmp
repz
jecxz
xor
clc
cs
inc
loope
stc
cmp
jbe
into
hlt
push
xchg
add
lret
jo
and
data16
jnp
fldt
mov
movsb
insl
sub
fdivrs
movb
ficoms
andl
clc
push
loopnew
and
shll
mov
mov
mov
mov
stc
sbb
inc
std
pop
mov
push
sbb
enter
into
push
adc
scas
mov
mov
sub
iret
aad
mov
aaa
shll
mov
jecxz
jne
inc
push
inc
push
pushf
sahf
jge
mov
aaa
fcomip
push
xchg
pusha
pop
or
das
pushf
mov
js
or
pop
call
cmc
ficoml
leave
pop
lcall
fwait
cmpsl
dec
roll
jle
add
inc
rcll
jp
aad
inc
push
jge
movsb
dec
out
movsl
roll
movsb
fildll
mov
push
cmp
fisubs
test
repz
movsl
dec
test
popl
test
bound
aas
or
mov
mov
adc
or
pusha
lock
lock
push
push
fsubrs
pop
add
repz
popf
mov
loopne
pop
into
or
inc
popa
fldl
xor
push
xchg
push
jg
jne
lods
int3
loopne
stc
rcrl
mov
faddl
cli
mov
and
xchg
dec
mov
stos
in
or
xchg
adc
push
rcrb
es
push
adc
lods
mov
mov
shlb
scas
cmp
xor
lds
add
sahf
data16
pop
add
pop
aas
adc
repz
add
add
test
enter
out
or
xchg
adc
fdivs
mov
leavew
arpl
mov
ljmp
push
and
popf
rcr
filds
insl
fidivrs
insl
pop
dec
std
enter
cwtl
xchg
inc
out
push
into
dec
jg
pop
movsb
inc
dec
data16
inc
in
mov
fmuls
jecxz
ret
inc
and
jge
pop
movsb
push
adc
iret
cmpsl
pushf
scas
andl
xor
mov
out
and
and
mov
pop
xor
dec
dec
mov
jns
xchg
pushf
aad
loopne
js
jle
sbb
add
jbe
xchg
insl
fisubl
in
and
jne
add
into
enter
addr16
sahf
insl
lahf
jmp
leave
fimull
cmpsb
lret
mov
pusha
mov
mov
sub
jns
mov
dec
shrl
cmp
adc
push
xor
cmp
pushf
test
jecxz
add
jno
popf
pushf
gs
es
filds
pop
pop
pop
adc
mov
mov
andb
into
sub
rdmsr
jbe
insl
or
add
insb
scas
pop
lcall
push
je
adc
imul
adc
or
test
dec
pop
push
dec
jnp
adc
bound
pop
test
dec
mov
push
rolb
inc
mov
sub
rolb
filds
syscall
inc
sub
mov
push
sbb
movsb
xchg
mov
test
mov
popf
je
loope
clc
push
repz
pushf
scas
add
jns
cmp
lock
add
mov
es
mov
test
mov
sbb
mov
lods
mov
lahf
imull
out
scas
cmpsl
jns
icebp
mov
sub
mov
cld
or
push
shll
movb
mov
js
out
mov
and
add
adc
adc
test
cmp
in
inc
xor
xlat
repz
or
mov
push
sbb
inc
cmp
add
push
jge
ja
lret
pop
int
pop
add
jmp
mov
inc
cs
rorb
mov
lret
sbb
inc
push
out
jmp
or
xchg
add
call
lock
adc
cmp
fcmovu
mov
adc
insb
inc
jg
xor
xorl
mov
sar
data16
and
loopne
cmp
jae
jae
and
lock
cmp
mov
sbb
js
jecxz
lahf
push
xlat
sti
ss
jno
cwtl
bound
pop
push
pop
jmp
xor
bnd
enter
pop
fstp
cld
push
cli
shll
orl
movb
mov
incb
cld
roll
aad
mov
or
out
rcrb
inc
out
scas
mov
addl
push
scas
stos
xlat
jg
mov
jmp
repnz
daa
scas
scas
inc
out
imul
xlat
mov
arpl
push
loop
leave
jp
jmp
out
pop
adc
mov
jg
je
jno
push
scas
cwtl
xchg
pop
pusha
xor
std
add
addr16
in
sbb
xor
cmpl
imul
dec
jno
xchg
lret
popf
clc
sar
mov
add
repz
pop
sub
jbe
nop
lock
cld
imull
dec
mov
xchg
adc
mov
test
add
rcrl
mov
cmp
test
or
adc
pop
int
pop
adc
push
mov
fisubrs
hlt
adc
adcb
mov
push
lods
ret
or
and
aas
arpl
and
subl
cmc
pop
mov
mov
fcompl
push
popf
idivb
aas
jns
push
xchg
and
pusha
mov
fisubrs
andl
ror
mov
aad
mov
std
daa
sub
movsl
test
js
dec
sti
dec
cltd
cmp
sbb
mulb
cmova
movsb
test
xchg
fisubl
lock
movsb
mov
mov
jl
inc
decb
add
dec
aad
sub
clc
es
or
xchg
sbb
inc
nop
push
daa
mov
subb
push
mov
push
mov
daa
dec
add
jo
jne
jl
jne
add
add
jns
lock
pop
or
sbb
pop
jb
mov
dec
in
or
sbb
test
inc
arpl
xor
push
subb
sbb
rorb
pop
push
sbb
cmp
int
stos
dec
mov
in
xor
mov
into
mov
les
sub
xchg
cmpl
hlt
sahf
cmp
pop
cmpb
fsts
daa
sti
push
lock
aaa
arpl
sti
cli
sbb
into
and
fnstsw
xor
mov
fucomip
adc
push
push
inc
xchg
leave
sub
cwtl
push
push
cwtl
and
in
or
sahf
aas
nop
push
cmp
orb
xor
push
sbb
and
je
sbb
inc
push
dec
fidivs
add
lcall
fidivrl
cmp
insl
jb
cmp
ljmp
or
es
shll
sbb
loopne
mov
dec
jb
iret
push
xchg
or
xchg
adc
jne
xchg
or
push
lods
por
call
or
mov
lea
ret
push
test
in
loope
ds
nop
fs
ret
jecxz
gs
sahf
xor
inc
sbb
dec
out
xchg
sbbb
pop
stos
jle
inc
or
mov
push
nop
xchg
sub
or
ja
loop
incl
inc
jmp
lods
xlat
sub
out
daa
pop
daa
adc
icebp
xor
insb
jo
push
or
inc
adc
pop
inc
insb
or
dec
shl
cmp
cli
imul
dec
jne
adc
cmc
aas
pop
les
rolb
test
jmp
push
jnp
je
fnsave
mov
xchg
jmp
inc
sar
push
lret
in
nop
popf
pop
sahf
test
push
test
inc
dec
leave
mov
ss
fwait
pop
dec
aam
adc
jae
outsl
pushf
pop
scas
jmp
int
lahf
test
pop
add
out
ds
jge
les
scas
pop
cmp
sbb
jecxz
lea
dec
iret
int3
pop
dec
mov
cmpsl
rclb
dec
out
xlat
jbe
jl
xorb
adc
inc
add
arpl
in
push
add
and
xor
gs
pop
flds
imul
in
fmuls
mov
sub
pop
pop
adc
ret
lret
xchg
rcrl
inc
cld
push
nop
pop
lods
loop
dec
decl
jb
mov
mov
test
and
mov
push
mov
pushl
mov
test
push
inc
stos
xor
add
dec
push
test
popa
mov
lret
mov
add
fs
jne
sahf
push
sub
sbb
pop
and
and
jl
sbb
pop
out
xor
pusha
xchg
mov
mov
std
cmpsb
sub
je
jne
adc
in
div
push
ret
pop
mov
outsb
gs
jnp
xchg
in
or
xor
mov
lods
push
xorl
add
lds
push
cmc
mov
shrb
jae
push
jb
mov
out
rclb
adc
sbb
pop
mov
xor
leave
inc
mov
adc
add
adc
cld
inc
mov
lahf
xorb
sbb
sub
ds
mov
inc
cmc
imul
std
mov
int3
pop
adc
push
insb
imulb
out
jne
sbb
mov
iret
sbb
popf
insb
push
push
sub
hlt
dec
lea
insb
jmp
mov
cmp
mov
sub
ret
xor
inc
inc
jo
sti
das
testb
inc
inc
mov
inc
lret
xor
lock
rcrl
jne
or
xchg
icebp
je
aas
inc
push
leave
jbe
mov
lcall
cmp
sbb
adc
inc
ds
xor
das
inc
in
pop
std
lods
int3
nop
out
rclb
dec
push
push
or
mov
or
into
icebp
jnp
data16
pop
ret
xchg
pop
into
and
sub
pop
push
aad
in
mov
das
daa
xchg
cmpsl
cmp
or
ret
inc
fbld
test
mov
add
jmp
popf
inc
cmc
push
ds
jb
loopne
movsl
das
das
xlat
scas
add
stos
ja
jge
aam
sbb
shrl
jmp
and
mov
pop
das
and
in
enter
movb
outsb
and
clc
jne
in
mov
rorl
or
fbld
mov
sub
or
and
sbb
ja
sbb
mov
lret
mov
mov
int3
es
mov
adc
cmpsb
pop
mov
gs
mov
loopne
dec
mov
mov
je
push
int3
jmp
mov
int3
fldcw
xchg
popf
test
mov
sub
mov
sbb
push
es
cmp
ljmp
frstor
push
xor
cmpsb
fildll
outsl
inc
or
add
or
call
inc
rclb
rcrl
cs
mov
popa
dec
gs
mov
inc
sti
push
test
dec
inc
out
gs
call
jnp
mov
mov
shlb
in
pop
add
cmpsl
dec
sub
mov
cltd
mov
andl
mov
jmp
negb
scas
and
lret
stos
xorl
fisttps
outsl
sahf
js
add
xchg
outsl
jmp
add
jmp
shl
mov
fsubr
fcmovnb
aaa
mov
mov
dec
lret
int3
push
mov
xor
pusha
xchg
pop
push
dec
push
push
lret
stos
ja
stc
pop
sti
ficompl
lahf
xchg
pop
cli
into
sub
xchg
imul
es
cltd
dec
fsubrs
dec
xchg
shl
js
shrl
test
pop
leave
mov
pop
xchg
or
pop
je
and
lcall
sarb
mov
jge
jle
pusha
pusha
ss
or
mov
shll
pop
jp
sbb
mov
int
push
cld
sarb
mov
lds
mov
sbb
js
test
sti
and
push
mov
xchg
mov
idivl
loopne
shll
dec
inc
das
dec
imul
sub
cltd
pusha
popf
push
push
es
xchg
mov
push
sbb
dec
js
jg
stos
cmc
mov
test
daa
in
add
push
sub
adc
cld
rolb
cmp
jle
xor
stc
stos
mov
or
jl
jns
add
inc
mov
cmp
arpl
cwtl
in
pushf
dec
jp
mov
adc
jecxz
xor
push
test
fs
sahf
ja
cld
pushf
aad
sub
fstps
jne
repnz
int
inc
mov
mov
xchg
cmpsl
and
xchg
cwtl
mov
sbb
xor
mov
mov
setp
inc
rorb
arpl
jle
iret
push
fstl
insb
cmp
cmp
scas
sti
ret
pushf
call
xor
shlb
out
pushf
xor
xchg
int
in
cmc
pop
int3
dec
shll
push
pop
dec
cld
lahf
insb
cmp
shrl
pop
xor
inc
cmpl
mov
xor
xchg
push
xor
sbb
ret
lcall
cmpsb
jnp
mov
pop
xchg
lret
dec
loope
insb
inc
lea
data16
icebp
mov
cld
xor
cmp
adc
xlat
cmp
cmp
sub
xchg
xchg
mov
std
enter
pop
or
push
shlb
idivl
mov
rol
cmp
add
sbb
enter
xor
sub
imul
cli
std
cmpsb
in
push
xor
pop
ds
push
add
gs
dec
aad
pop
mov
cltd
dec
pop
mov
lcall
mov
hlt
in
push
and
xor
jne,pn
jbe
into
cmp
jle
push
aas
and
jbe
and
and
shlb
je
xchg
fisubs
mov
out
fs
jg
sub
outsl
test
and
sbb
and
xchg
ror
inc
out
inc
lods
mov
data16
clc
cmp
push
mov
in
dec
jnp
mov
add
daa
dec
mov
addr16
jle
sub
aad
clc
out
push
outsl
lahf
pop
jno
mov
cmp
idivb
mov
addr16
loopne
jbe
xchg
jnp
jno
xchg
or
daa
add
sahf
int
or
fs
cli
and
ja
mov
pop
pop
daa
popf
sbbb
fistpl
pop
mov
push
dec
pop
ficoml
dec
sub
pusha
cmpsl
and
xchg
mov
pushf
ja
inc
mov
fbld
cld
pusha
xor
jo
push
cmp
mov
mov
cmp
cmp
aaa
pusha
xchg
inc
paddd
mov
pusha
adc
adc
aam
scas
scas
push
in
adc
pop
pop
lods
xor
lock
sbb
cmp
sbb
int3
sub
rep
xchg
sahf
pop
adc
in
es
stos
mov
dec
inc
mov
movsl
or
mov
cmpsl
inc
movlps
repnz
cmp
adc
xor
push
add
imul
addr16
out
pop
xchg
dec
bound
or
add
aam
js
mov
fisubrl
xchg
jle
les
mov
dec
cmpsb
sar
or
mov
pop
mov
lret
rcl
lcall
mov
stos
mov
sahf
jle
lret
shl
leave
orb
push
push
ljmp
imul
push
sahf
addr16
cmp
push
insb
sahf
mov
push
dec
push
mov
sbb
and
sub
pop
mov
in
lcall
or
mov
imul
dec
inc
sbb
je
sbb
je
dec
out
mov
fmull
jl
shrl
stos
out
cwtl
inc
adc
je
mov
xchg
xchg
add
adcl
push
clc
xlat
add
insb
add
mov
and
fwait
daa
sub
lahf
mov
int
and
jbe
or
jmp
jbe
aaa
js
fcompl
test
in
jg
call
out
add
xor
daa
sbb
lcall
pop
imul
pop
sbb
push
popf
jl
jecxz
loope
mov
mov
add
mov
dec
enter
add
and
aad
aaa
loope
mov
pop
inc
scas
pop
jno
imul
je
stos
daa
stos
xchg
pop
adc
test
ficomps
movsl
nop
rcrb
pop
inc
push
loop
mov
jbe
fbstp
mov
inc
push
mov
cs
mov
test
mov
lret
hlt
adc
push
bound
out
rcl
add
fcompl
stc
fcmovb
div
aam
cwtl
sub
add
dec
testb
insb
icebp
movb
insl
sub
pop
mov
mov
jae
and
xlat
pop
cmp
sbb
addr16
popf
jmp
sub
jbe
cwtl
adc
inc
sub
cmp
test
mov
mov
ljmp
pop
pop
aaa
inc
mov
sarl
dec
aad
lock
pop
icebp
lahf
movsb
enter
popf
xorl
add
inc
loop
imul
cwtl
xor
and
push
mov
out
adc
in
shlb
ljmp
jle
push
sbb
popf
xor
pop
dec
mov
mov
subl
pop
pop
pop
inc
pop
or
adc
mov
push
lock
xchg
ss
cli
pushf
testb
add
addr16
std
shl
stc
mov
jno
inc
push
dec
or
jo
sub
jne
bound
aas
cmp
adc
sbb
jns
mov
ret
pop
inc
xor
xor
call
les
and
outsl
dec
pop
addb
ror
repz
imul
mov
push
jge
dec
fsubs
mov
pop
sbb
xor
adc
rorb
into
mulb
cmc
cmp
das
daa
loope
mov
dec
jl
mov
xor
jle
sahf
fwait
sahf
adc
lret
loope
add
pop
mov
add
push
stos
jae
mov
push
mov
jl
xor
shr
mov
insl
adc
sub
sti
ljmp
movsl
jae
clc
jae
or
int
pop
and
dec
iret
in
and
push
dec
xchg
scas
test
movsl
pop
adc
out
popa
dec
popf
faddl
clc
test
int3
fucomp
push
mov
sbb
in
inc
adc
gs
jne
xlat
sub
inc
cmp
dec
xchg
test
pusha
lods
je
and
in
xchg
inc
dec
subl
sub
ds
cli
rorl
fs
sub
mov
test
cltd
inc
jecxz
jb
popf
addl
pop
cmc
xor
adc
out
add
or
scas
rclb
mov
ficoms
mov
mov
cmp
fwait
clc
cltd
xchg
inc
push
inc
and
push
xor
sub
leave
jno
pop
add
xchg
fcoml
adc
lea
dec
cmpsb
mov
out
ret
mov
pop
or
and
stos
das
sti
and
cltd
lcall
adc
mov
lods
pop
int
pushf
inc
or
ja
xchg
pop
and
adc
inc
sub
subl
aam
inc
in
push
push
fbstp
or
xor
ljmp
or
lret
cwtl
dec
dec
pop
into
dec
mov
and
fdivrl
sbb
push
jb
aas
pop
ljmp
inc
mov
xor
gs
inc
xor
iret
mov
lcall
push
jmp
add
add
inc
mov
fadd
pushw
sbb
in
pop
rcll
push
xor
inc
arpl
pop
dec
negl
mov
jmp
adc
mov
sbb
inc
stc
repnz
inc
adc
das
nop
mov
sub
test
lds
pop
subb
pop
inc
int3
dec
pop
sahf
sub
out
outsb
fdivrl
fisubs
mov
cmpsl
sahf
sarb
mov
fstpl
push
adc
movsb
fsubr
sub
aad
loopne
mov
das
movsb
cmp
pop
sbb
push
aas
fstl
outsl
inc
adc
mov
sbbl
insl
adc
aam
jg
jge
jbe
sar
jnp
mov
mov
les
mov
mov
jmp
or
mov
jno
das
leave
daa
out
test
sbb
push
icebp
sub
aaa
std
adc
add
sbb
lahf
xor
cmp
aad
mov
cltd
fwait
stos
aam
add
test
mov
xchg
cmp
and
or
jo
stos
mov
or
jae
loop
push
clc
in
push
and
ficomps
negl
ss
jg
mov
inc
sbb
and
mov
push
je
addl
es
inc
sbb
jg
xor
pop
pop
shlb
daa
lods
movsb
jecxz
xor
adc
hlt
mov
gs
mov
mov
or
jb
push
adc
push
insb
sub
insb
test
inc
and
xchg
repnz
xor
pop
xchg
loope
push
lock
imul
and
cmpsb
fsubrp
xlat
jge
test
or
ja
bound
popf
loop
scas
lret
sbb
lods
sub
out
cmpsl
mov
lods
sub
loope
cwtl
sahf
and
movsl
mov
inc
cs
jl
clc
bound
push
fld
mov
into
pop
fcmovnu
push
repz
sbb
imul
int
sub
mov
push
jnp
adc
movsb
adc
adc
mov
scas
push
movsl
dec
jb
data16
xchg
or
in
imul
xor
test
mov
cmpb
lret
ss
sbb
cmp
arpl
jl
mov
mov
movsl
hlt
xchg
leave
push
push
ds
bnd
jne
mov
mov
cmp
fmull
cmp
mov
inc
sbb
and
add
cld
fnsave
or
and
push
inc
imul
push
in
jmp
or
enter
push
adc
mov
add
xor
test
mov
es
int3
out
jl
aas
xor
sti
xchg
icebp
das
jno
inc
jmp
sub
sub
inc
xchg
fistpll
inc
pop
stc
aas
cltd
add
jae
ret
push
jg
scas
xchg
out
add
je
cmp
lods
and
xchg
push
push
mov
mov
add
fs
sbb
decb
in
loop
push
mul
sub
cs
pop
jb
into
lds
xor
sub
outsl
pop
das
pop
push
jle
cmp
out
addr16
add
popa
rorb
scas
jno
and
sbb
mov
movsb
scas
mov
and
mov
mov
push
inc
into
pop
xchg
add
jo
lock
mov
icebp
jl
lret
out
xor
loop,pn
jbe
pop
lahf
jbe
adc
inc
mov
xor
or
jns
addl
mov
icebp
cs
push
jbe
or
and
adc
pop
sarb
pop
or
xchg
cmp
or
test
movl
mov
popa
xchg
adc
or
and
clc
or
adc
cmc
dec
movsl
imul
mov
pop
add
icebp
fisubs
repnz
lcall
jmp
js
gs
add
lea
cmp
lahf
mov
xchg
fwait
mov
inc
jo
mov
xlat
pop
sub
and
push
mov
inc
sahf
imul
call
shrb
mov
add
popa
ret
sahf
push
xchg
pop
or
lret
adc
mov
jo
cmp
fadds
and
pop
add
addr16
add
push
dec
stos
sbb
pusha
sub
push
or
lods
pop
repz
lea
into
shrb
cmp
xor
and
mov
add
outsl
xor
int3
sub
push
add
mov
fadds
inc
and
bound
or
int3
mov
je
xchg
sub
adc
daa
sti
mov
cmp
aad
lret
outsb
cld
adc
xchg
mov
fwait
je
cwtl
mov
dec
dec
push
mov
inc
lcall
std
push
push
lock
mov
lock
lods
jp
mov
aam
sbb
mov
xchg
sbb
cmpl
int3
and
xchg
pop
xchg
mov
lret
popf
mov
or
jecxz
push
cltd
pushf
fnstcw
jnp
imul
js
inc
dec
lods
out
or
out
jns
loop
xchg
mov
and
mov
addr16
enter
pop
fs
fcmove
ss
aam
lcall
loopne
adc
sarl
stos
icebp
pop
pop
push
sbb
xor
mov
jecxz
mov
jo
loope
fxch
in
fwait
inc
mov
sub
fs
cmpsl
ror
bound
push
enter
sub
je
cmp
xchg
fdivrs
dec
into
cwtl
loop
clc
push
xlat
lahf
shll
ror
cmp
xchg
in
cwtl
and
hlt
xchg
cmpsb
dec
inc
mov
iret
mov
add
test
add
fcmovnu
testl
frstor
negl
pop
movsl
in
in
and
xchg
leave
xchg
repz
jmp
fwait
jp
jne
les
popa
mov
pusha
lret
sbb
or
nop
or
xchg
jge
pop
lock
jns
inc
push
mov
mov
mov
cld
xor
lret
fsubp
cld
add
push
ljmp
adc
addr16
jbe
cmpsb
and
in
inc
jnp
mov
stos
test
and
std
outsb
ret
push
mov
dec
out
adc
or
out
jae
dec
sub
or
cltd
gs
movsl
cmp
ja
and
in
dec
or
sbb
inc
divl
xchg
rcrl
or
outsl
push
arpl
mov
mov
mov
inc
stc
jl
stos
push
push
mov
imul
rcl
rcr
adc
mov
push
into
lods
mov
and
push
mov
mov
outsb
mov
into
arpl
ja
rorb
push
sbb
inc
jp
jecxz
jae
mov
sub
sbb
dec
dec
mov
inc
sbb
bound
out
dec
int3
mov
mov
into
ret
add
jnp
and
daa
xlat
outsl
cmp
jo
push
movd
push
mov
sub
cmp
jne
inc
pop
bnd
xor
adc
das
and
daa
add
xorl
out
stos
xor
fwait
out
mov
mov
or
outsl
jae
mov
sub
insl
out
sbb
insl
gs
xchg
push
push
push
jle
sbb
mov
test
es
clc
cwtl
ds
xchg
ss
call
push
aad
lock
or
mulb
ljmp
inc
and
mov
xchg
std
stos
xchg
cmpsl
aas
divb
mov
mov
or
dec
ljmp
stc
mov
fisubs
ljmp
push
sub
and
addr16
data16
shlb
mov
in
mov
movsl
push
or
adc
in
adc
dec
push
push
dec
cmp
jb
jmp
lcall
out
out
or
adc
popa
push
jecxz
mov
repnz
gs
outsl
loope,pt
jbe
icebp
es
dec
sbb
push
mov
adc
sub
jmp
in
add
xchg
mov
gs
and
lds
subb
jbe
mov
out
push
hlt
je
cwtl
in
mov
cmc
sub
test
pop
mov
outsb
lods
ja
mov
pop
cmp
sub
mov
ja
pop
lock
testl
ret
mov
fucomi
push
pop
cmp
ljmp
mov
adc
mul
xchg
out
adcb
imul
enter
or
inc
mov
push
sub
or
fnstsw
pop
loopne
pop
mov
stc
mov
add
cmpsb
in
mull
xor
xor
lock
es
int
adc
outsl
fcmovbe
repz
add
sbb
sarb
mov
pop
ss
fwait
and
shl
add
cmp
outsl
dec
es
jae
test
test
sbb
cmp
adc
push
cmpsb
pop
mov
push
cwtl
cmp
xor
xor
sub
pop
shl
sahf
adc
leave
repz
sahf
adc
xchg
pop
sbb
ds
js
xchg
cld
pusha
pop
scas
cld
lods
xor
mov
push
loopne
adc
pop
mov
addr16
cmp
jmp
mov
fnsave
sub
xor
dec
dec
lret
je
or
popf
sbb
push
lret
ja
roll
sbb
int3
lahf
pop
daa
pop
sti
loope
xchg
xor
int3
stc
jbe
jg
jne
roll
test
in
inc
pop
ja
iret
xchg
fwait
arpl
popl
xchg
xchg
mov
jne
lods
mov
jnp
xchg
push
and
popa
ret
adc
or
mov
jae
mov
cmc
sub
stc
decl
cmp
mov
and
pop
fcmovnb
xchg
or
and
sub
jbe
int3
jecxz
movsl
in
ja
pop
mov
sub
pop
aas
xlat
xlat
cmpsb
imul
pop
or
addl
lods
cwtl
dec
call
test
pop
push
adc
add
xchg
jbe
dec
call
cli
dec
mov
paddq
mov
ds
in
push
dec
loope
and
dec
cmp
lods
das
sbb
sub
push
enter
pop
fnop
pop
repz
adc
sub
fdivs
xchg
push
fadds
jmp
lret
inc
loopne
cmp
out
xchg
xchg
jnp
cmp
neg
jbe
or
lret
xlat
iret
loope
fwait
scas
fs
add
frstor
sarb
js
jp
clc
mov
lret
jne
loope
push
mov
lods
or
push
sarb
jp
cmp
add
jbe
pop
adc
push
das
xchg
es
adc
hlt
and
iret
leave
pop
aad
aam
add
mov
mov
notl
xor
in
data16
xchg
or
lahf
inc
ret
cwtl
outsb
in
dec
lcall
mov
mov
enter
sbb
cmp
push
adc
mov
adc
ja
jl
testb
pop
movsl
cltd
push
dec
aad
push
xchg
push
cmp
adc
mov
pop
mov
push
in
jmp
movsl
cmp
jecxz
xor
imul
lret
addr16
scas
fadd
sub
addr16
xchg
inc
es
int3
clc
sti
loope
movsl
insb
add
mov
xchg
das
xlat
hlt
mov
stc
ret
xlat
in
inc
mov
sub
xor
ljmp
xchg
fisubs
stos
jae
loopne
mov
cltd
repz
cmpsb
sbbb
add
sarl
xor
sarl
sti
jmp
mov
js
sbb
pop
insl
subl
add
sbb
adc
loopne
lods
mov
jecxz
pop
xchg
pushf
dec
cmp
mov
dec
arpl
sbb
mov
out
in
jp
mov
cmp
test
add
add
dec
mov
int
add
imul
shrl
ds
xchg
in
xchg
xchg
pusha
popa
lret
push
ror
ret
lods
push
cltd
scas
enter
loope
push
icebp
sub
cmp
gs
jle
leave
push
jae
jp
ss
and
or
add
imul
fstpl
adc
jp
mov
roll
dec
popf
jns
mov
loopne
sbb
sub
cmpsl
jle
jmp
mov
aad
bound
adc
mov
jne
daa
out
mov
out
enter
xor
movsl
ret
mov
test
push
mov
dec
pop
mov
pop
cmp
in
xchg
mov
rclb
les
xchg
or
lahf
push
push
push
call
xchg
sub
sbb
cmpl
outsl
or
jg
fs
mov
inc
adc
mov
push
mov
jecxz
std
mov
not
movsl
dec
lcall
bound
inc
imull
jmp
ret
lods
inc
and
aam
or
movsb
hlt
xlat
sahf
jne
inc
loop
ja
cmpsl
imul
mov
ja,pn
xor
or
xchg
sbb
bound
mov
lods
or
mov
mov
icebp
xchg
in
aam
pusha
push
lret
dec
int
fs
mov
cmc
cltd
scas
movsb
dec
cmc
insb
sbb
mov
shr
jle
jb
mov
pop
add
jecxz
sub
pop
rorb
into
sub
movsl
call
ja
mov
xchg
hlt
push
andl
stc
xchg
adc
push
xlat
inc
push
outsb
jmp
xor
and
and
inc
in
sub
mov
das
rolb
js
je
xorl
cmp
test
mov
and
or
adc
nop
int
cwtl
clc
push
mov
push
scas
adc
sub
sbb
mov
sub
push
out
in
int3
jns
clc
sar
pop
mov
mov
mov
popf
mov
mov
sub
pop
push
aad
clc
cmc
mov
jae
loope
or
out
xchg
mov
xchg
test
stos
std
loop
in
add
and
cli
arpl
pop
negb
push
mov
and
and
fdivr
test
mov
fs
pushf
testl
or
adc
pop
xchg
xchg
jp
pop
jp
fistl
fs
jle
xor
xchg
int
add
add
lret
inc
sub
sub
cs
cmp
dec
mov
mov
dec
mov
loopne
cmpsb
lods
shrl
or
scas
sub
scas
push
mov
out
adc
imul
pop
add
loop
xchg
stos
fldcw
dec
enter
aad
push
sti
lds
sbb
in
add
pop
call
and
xchg
and
sub
clc
int
test
adc
pop
movsb
lahf
rolb
mov
ss
sbb
icebp
psubusw
jg
in
push
mov
pop
add
les
aas
repz
addr16
leave
pop
push
stc
lods
mov
rcl
inc
pop
jl
or
fidivrl
clc
push
repz
inc
cmp
xor
dec
fnstcw
cltd
dec
int
dec
inc
push
nop
loop
mov
out
jg
sbb
adc
add
daa
xorb
out
fxch
ja
repnz
out
fwait
inc
int3
out
fucomi
fcoml
jno
adc
cmp
std
das
outsb
mov
decl
sub
sub
movsb
inc
test
aas
jecxz
push
pushf
sub
xchg
mov
fsts
stos
fcom
out
pop
or
cmp
repnz
push
lret
adc
daa
jo
jmp
insb
mov
test
jg
bnd
jae
fimull
mov
push
sti
ja
xor
xor
cli
filds
test
cmpsb
mov
inc
lods
add
das
add
jecxz
aad
pop
in
or
les
dec
das
sahf
rcrb
inc
outsl
enter
sti
pop
xor
lret
adc
pop
or
add
mov
pop
lret
inc
ljmp
aad
mov
cli
test
mov
popa
jp
jle
cld
mov
pop
fcompl
out
mov
dec
iret
xorl
stos
insl
add
lds
sbb
push
push
packuswb
pop
adc
leave
push
test
push
push
addr16
loope
ror
sub
jae
push
leave
out
cmp
and
adc
jns
mov
fimull
mov
push
xchg
or
cmc
sub
rclb
sbb
xchg
dec
jae
mov
and
lods
push
push
dec
nop
push
movl
cld
mov
call
lcall
scas
test
fistpl
push
xor
mov
pop
lret
cmpsb
mov
lret
subl
add
lea
loopne
dec
sub
sub
aaa
sti
pop
aam
push
jnp
adc
mov
xor
xchg
icebp
cmpl
fisttps
arpl
cmpsb
adcb
jns
shlb
xchg
addr16
adc
sub
pop
push
xor
fs
outsb
fimuls
push
sti
call
sbb
or
out
and
out
loop
xlat
sub
ljmp
lret
sbb
test
mov
int3
test
mov
and
dec
mov
clc
mov
pop
or
cmpsb
pop
aas
int
xor
dec
sbb
push
push
bound
inc
cs
popa
in
mov
jne
push
mov
or
sti
pop
dec
dec
sbb
dec
sub
sub
inc
fnsave
sarl
stc
mov
xor
mov
inc
ret
cli
mov
sahf
jp
pusha
push
stc
je
pop
enter
imul
negb
imul
or
jge
add
cmp
mov
lret
data16
dec
fisubrs
stc
inc
add
cwtl
in
dec
adc
mov
jle
sar
testl
mov
mov
enter
xor
mov
scas
nop
jmp
dec
aaa
imul
lahf
stos
mov
cmpb
sbb
bound
addb
inc
pop
add
in
clc
or
fildll
ja
imul
movsb
adc
cmpsl
add
aaa
out
inc
movsl
jge
add
jp
shrl
fildl
imul
or
mov
cld
mov
jg
sarb
xor
push
insb
mov
bnd
mov
shrb
push
xlat
cmp
push
std
mov
inc
push
scas
rcrl
movl
stc
mov
mov
jl
clc
jbe
sbb
mov
mov
pop
add
dec
adc
addl
jne
pop
ret
ficoms
inc
cs
aam
inc
inc
xor
mov
push
sub
xchg
jp
orl
imul
lods
js
push
jmp
mov
sarl
jns
pop
inc
int
mov
xor
xchg
ss
es
mov
or
hlt
fisttpll
ss
pop
pusha
pop
lock
js
mov
mov
mov
push
xchg
les
lea
adc
dec
inc
test
outsb
loopne
mov
enter
idivl
xchg
movsl
dec
mov
pop
arpl
cmp
pop
cld
cmpsl
jno
mov
test
pop
call
and
fildl
jnp
inc
aaa
pop
pop
mov
xor
stc
pop
fidivrs
mov
insb
lods
int3
mov
shrl
pushf
cmp
pushf
shll
aas
out
mov
push
dec
mov
xlat
adc
ljmpw
mov
pusha
pop
ret
jo
adc
inc
adcb
dec
jo
pop
pop
xor
aam
cmp
ja
xor
mov
jne
cmpl
mov
push
cmp
lea
lret
xchg
cmpsl
adc
out
push
cltd
dec
push
mov
inc
cld
mov
in
mov
mov
cs
push
push
push
pop
nop
push
cwtl
cmp
sti
dec
clc
mov
push
jmp
loop
pushf
insl
movsl
push
sar
add
or
sbb
rclb
xchg
fbld
cmp
add
push
or
jp
ds
aas
pop
and
xchg
pop
es
lret
mov
rcrb
or
adc
xor
jb
test
outsl
fistpl
xor
rcr
pop
loopw
js
out
jb
or
outsb
sti
cmpsl
inc
sub
jno
outsl
mov
movl
call
cmp
sub
fxam
and
bound
inc
xchg
aaa
sti
jno
mov
ret
xor
mov
cltd
lods
sahf
cmpsl
mov
push
mov
mov
add
in
insl
sbb
or
sub
cmp
adc
xchg
fwait
dec
add
push
stos
int3
adc
xchg
notb
inc
stc
mov
loopne
pop
out
sbb
loop
ja
pop
add
imul
dec
idivb
dec
test
jbe
jecxz
sub
add
pop
xlat
or
pop
iret
mov
add
daa
xchg
stos
add
enter
mov
push
and
lock
movsl
push
scas
push
xor
sub
roll
push
setl
mov
xor
mov
loope
add
xlat
shll
leave
push
int
and
jae
xchg
jmp
cmp
jo
popf
and
and
mov
pushf
shll
push
or
adc
jmp
sbb
les
xor
inc
xor
mov
inc
jbe
fwait
add
adc
fdivl
add
mov
sub
or
lock
addr16
jb
jg
sarb
push
add
stos
xchg
testl
inc
jo
xor
mov
sub
fcoml
das
pushf
cwtl
xchg
pop
sbb
inc
or
or
inc
test
mov
roll
mov
pop
xchg
vpshab
fsub
push
push
xor
mov
dec
dec
movsl
add
and
mov
add
aad
pop
xchg
int3
xchg
jne
sub
inc
dec
push
sbb
mov
jmp
rcrb
insl
pop
lcall
setno
dec
jno
mov
imul
xorl
mov
in
or
add
clc
push
inc
popa
xchg
loope
and
andb
in
add
and
jl
fstpl
in
ljmp
int3
xchg
add
xchg
xor
cmp
mov
loope
decl
sbb
mov
xchg
std
cs
jg
int3
and
jbe
stc
jae
fnstsw
mov
xchg
xchg
gs
cwtl
imul
stos
cmp
mov
adc
sahf
adc
dec
dec
mov
fs
flds
negl
orl
inc
loope
dec
and
sub
jb
dec
mov
lea
add
inc
and
inc
dec
sub
mov
mov
lcall
fs
popf
ja
or
or
lahf
adc
outsl
sti
inc
adc
pop
das
xchg
orb
stos
mov
sbb
outsl
cli
mov
subl
sti
dec
xchg
icebp
jne
fisubl
cmp
mov
fucom
dec
push
imul
inc
mov
mov
jb
fcmovbe
adc
fsubrl
ja
fsubrl
leave
mov
cwtl
fsubrs
and
sbb
push
loop
movl
mov
loopne
add
mov
mov
enter
ljmp
outsb
movsl
imul
sti
cs
lret
cmp
js
shlb
or
jb
xor
jo
lods
fsts
adc
mov
shr
or
shrl
lock
push
xor
loopne
dec
sarl
mov
loop
sahf
mov
cwtl
ret
popf
loopne
adc
lret
test
stos
out
inc
aas
xor
mov
call
lea
cmp
pop
adc
in
push
scas
mov
rclb
mov
js
cmp
mov
cmp
arpl
xchg
add
adc
xchg
das
add
and
jbe
lret
adc
imul
push
pop
sub
jb
pop
ss
inc
mov
sbb
decb
or
jnp
cmp
push
push
jecxz
jmp
lock
sbb
lcall
pop
rcrb
dec
add
mov
cmp
je
push
inc
push
pop
fldl
pop
ss
pushf
sarl
in
or
xchg
and
insb
daa
cwtl
or
ljmp
xor
popa
jne
into
inc
jae
or
fwait
sbb
or
fsubl
cmp
dec
mov
push
mov
sbb
pop
jb
sahf
scas
adc
adc
jae
xchg
std
movsl
adc
shlb
xchg
push
mov
fstps
pop
test
mov
sbb
outsl
dec
xchg
inc
mov
dec
aam
lds
cmp
mov
pop
pop
cli
lods
mov
inc
out
lods
lods
cltd
addr16
cmpl
in
insb
mov
push
jecxz
add
add
fists
aad
nop
mov
stc
pop
enter
inc
out
ret
cmp
sahf
nop
xor
adc
xchg
shlb
enter
ds
inc
inc
xlat
cld
rcrb
sbb
movl
push
int3
and
rcll
cli
insb
fcomp
addr16
cmc
lock
push
mov
mov
enter
call
cltd
out
les
stc
aas
push
pop
xchg
inc
xchg
sbb
or
call
sub
mov
dec
jnp
shrl
out
fists
mov
aas
popa
stos
adc
mov
lcall
out
scas
pop
cmp
data16
lods
xchg
out
repz
fistpl
xor
adc
inc
cmc
mov
push
xchg
xchg
repnz
int
mov
cmp
pop
mov
out
mov
adc
daa
inc
mov
jecxz
or
call
push
test
loopne
scas
pushfw
add
add
push
xor
rclb
adc
notb
inc
icebp
adc
cmp
imul
lahf
sub
xor
mov
jge
xchg
xchg
inc
das
rclb
mov
rclb
fwait
inc
xchg
xchg
pop
test
cmp
pushf
negb
test
movsl
mov
push
mov
in
xchg
das
shrl
adc
stos
push
mov
out
cmp
xchg
pop
mov
cmc
xchg
mov
outsb
xchg
push
inc
push
es
mov
jae
mov
mov
sub
jl
xchg
inc
adc
adc
aas
mov
cmp
std
lret
imul
xchg
cmc
imul
mov
dec
cli
or
outsb
ljmp
out
std
add
ljmp
inc
mov
mov
shlb
sub
test
push
pushf
xchg
mov
jbe
pop
bound
repz
cmc
mov
das
ss
fucomp
outsb
adc
mov
loopne
push
out
loope
int3
pop
xor
or
in
fcomp
mov
xor
mov
pop
sbbb
inc
inc
aaa
xor
or
lret
icebp
insl
sub
and
inc
adc
and
stos
mov
jmp
outsl
out
enter
bound
mov
pop
xchg
and
xchg
stos
add
push
adcl
mov
xchg
ja
sub
lds
or
mov
std
loop
mov
testb
pushf
fisubl
sahf
out
mov
push
gs
mov
cmp
cli
cli
shll
movsb
ljmp
add
or
dec
lea
outsl
jle
fmull
add
xchg
mov
dec
out
in
sar
mov
insb
es
cwtl
sub
fs
xchg
cld
push
repz
adc
push
cli
cmp
jmp
pop
shl
loopne
mov
mov
adc
sbbb
js
repnz
ficompl
aas
test
add
and
mov
mov
je
dec
sbb
sar
dec
jo
daa
roll
inc
xor
sahf
daa
daa
inc
jnp
bound
lods
push
cmp
iret
adc
mov
adc
loop
imul
fcmove
pop
mov
imul
mov
jecxz
push
inc
xchg
push
mov
adc
sub
loopne
mov
arpl
mov
out
movsl
mov
lods
mov
pop
lea
fidivs
mov
mov
and
mov
sub
mov
or
xchg
ljmp
dec
xor
outsl
mov
in
pusha
inc
mov
jmp
or
mov
inc
popa
mov
sub
daa
sbb
jb
push
inc
ljmp
jmp
pop
clc
imull
mov
cmp
jecxz
nop
cmovno
or
test
cmc
xchg
sahf
xchg
sbb
xchg
xor
sbb
les
push
mov
andl
daa
push
repz
cmp
adc
jge
test
jge
mov
cmp
jp
mov
inc
jae
sub
and
mov
cmp
or
mov
call
mov
sahf
in
mov
xor
aad
js
mov
adc
popf
mov
scas
fs
and
jmp
dec
jb
jae
adc
push
cmp
cmp
push
ret
add
mov
xor
lds
mov
inc
or
pop
mov
scas
aad
or
jno
aam
aas
iret
or
cmp
push
push
xchg
iret
insl
nop
out
jae
cwtl
xchg
mov
or
pop
movsb
pop
lret
movsb
mov
xor
lcall
push
mov
aad
xchg
aaa
imul
hlt
lahf
inc
xchg
cmp
mov
xor
push
mov
int3
aas
outsb
iret
mov
fs
pop
frstor
inc
into
mov
mov
lahf
inc
pop
jbe
jmp
adc
ss
mov
iret
sub
loopne
hlt
dec
jecxz
or
jecxz
inc
mov
jmp
call
adc
or
or
and
ret
mov
cmpb
xchg
loop
add
out
fildll
in
data16
push
daa
stos
jecxz
out
cmp
sbb
loop
je
fisubl
pop
jecxz
sub
cltd
repz
jnp
sub
jl
std
mov
xchg
adc
fidivl
xor
in
push
sbb
lock
fucom
js
pop
fisttpll
sbb
inc
icebp
cmp
sbb
pop
pop
mov
daa
inc
dec
and
and
sub
xchg
inc
in
icebp
cmc
ja
jne
hlt
call
iret
cmp
bound
in
mov
mov
scas
adc
push
and
push
ds
shlb
mov
and
xchg
and
repz
lea
mov
inc
ss
mov
sub
and
mov
jae
lahf
push
mov
dec
adc
icebp
mov
xor
fdivrs
push
fldcw
dec
inc
rorl
into
push
xchg
xchg
and
inc
test
mov
mov
push
jle
sub
push
insb
fcoml
inc
in
shlb
iret
mov
cld
inc
insl
mov
repnz
adc
ja
dec
cmpsl
leave
jbe
pop
xchg
pusha
mov
adc
and
inc
call
sbb
cmp
adc
adc
sbb
mov
inc
xor
push
int
test
mov
in
mov
lock
sbb
sbb
rcrb
test
pop
add
cmpsb
add
push
arpl
mov
test
xchg
jnp
orl
jg
cld
xchg
outsb
mov
std
sarl
loope
jge
push
jge
add
pop
dec
test
cmp
mov
adc
into
push
das
or
sub
and
cs
mov
mov
out
ret
mov
fs
xor
mov
adc
sbb
sahf
jo
in
xchg
add
test
call
call
in
push
pop
cld
xchg
fwait
xchg
es
rcrb
pop
inc
je
dec
add
mov
out
inc
adc
or
lcall
loope
leave
xor
std
mov
div
jbe
mov
adc
xchg
out
mov
mov
data16
stc
int
push
adc
push
xchg
jmp
movsl
pop
or
push
mov
pusha
mov
jl
jae
push
adc
or
xchg
lds
dec
push
rcll
mov
into
xchg
jo
fistps
jno
adc
dec
or
push
ja
cmpsl
xor
int3
or
push
mov
neg
push
dec
cltd
or
je
cld
fcompl
pop
mov
sub
xor
mov
push
inc
outsl
into
lahf
into
cwtl
fs
add
in
cmpsl
out
pop
jge
outsb
xor
push
inc
test
mov
cmc
cwtl
das
xchg
add
pop
in
inc
pop
aas
jae
into
inc
or
mov
in
mov
sti
inc
jae
cmp
jecxz
xchg
or
dec
aaa
pop
and
jge
inc
add
push
add
pop
mov
nop
inc
sbb
sbb
outsb
mov
enter
sbb
xchg
cmpsl
xor
add
mov
mov
outsl
faddl
jb
iret
andb
mov
lods
inc
sti
dec
sbb
xchg
sub
icebp
push
lcall
mov
push
or
in
add
pop
or
adc
pusha
adc
lret
sbb
ja
pop
popf
aaa
out
aam
out
jns
fdivr
rcl
pop
or
fs
scas
pop
xor
mov
mov
stos
out
fimull
iret
push
adc
jbe
dec
and
scas
dec
fnstenv
push
test
and
loopne
adc
int
mov
ret
xlat
stos
loope
inc
pop
je
leave
sbb
cmpsl
hlt
jo
imul
test
jl
cmp
inc
cwtl
sbb
or
mov
push
dec
lods
pop
out
pushf
scas
cwtl
add
xchg
sub
jo
daa
imull
pop
orb
into
xor
pushf
call
mov
xchg
jp
dec
inc
jge
add
mov
rcl
sub
test
nop
jecxz
mov
nop
mov
inc
stc
ffreep
xchg
xchg
les
xor
repnz
adc
mov
shr
decb
jno
jne
popa
frstor
mov
mov
out
sahf
and
mov
sbb
sub
in
ljmp
and
or
pushl
pushf
rclw
lcall
cli
ss
fimuls
daa
sbb
movsb
in
lods
call
mov
hlt
sub
hlt
daa
mov
in
adcb
jo
imul
nop
jns
stos
add
mov
fs
sub
adc
sub
or
pushf
pop
inc
adcl
cmp
insb
bnd
jno
fisttpll
rcrb
inc
aad
jbe
loope
and
faddl
add
cmp
adc
xor
fnstsw
push
pop
cld
in
test
push
add
lock
mov
mov
mov
adc
mov
push
test
lahf
xchg
je
std
lods
dec
xchg
xchg
and
sub
inc
cmpsb
insl
or
je
xlat
pop
sub
push
or
dec
insb
lds
cmp
adc
cmp
push
hlt
xchg
dec
inc
aam
ret
mov
outsl
push
jno
and
pop
ds
xor
push
lods
jbe
insl
cmp
ss
cmp
jecxz
push
orl
add
loop
fists
aas
mov
inc
add
das
add
dec
divl
inc
cmp
or
setae
daa
in
pshufw
mov
cmp
js
in
aaa
jns
mov
push
dec
mov
lea
push
mov
sbb
mov
pushf
cmp
jle
and
mov
imul
mov
lea
add
ja
nop
bound
ds
xchg
mov
movsb
lcall
lahf
or
mov
and
pop
mov
fwait
cmp
test
jmp
mov
sbb
cmp
scas
mov
inc
jns
daa
outsb
leave
stos
insb
push
adc
sti
out
cmp
sub
ljmp
xchg
divb
inc
fmuls
into
mov
fidivs
dec
mov
popf
inc
jl
xchg
or
mov
jmp
test
cmp
dec
sti
push
xchg
jnp
add
mov
movb
sub
in
loop
fimuls
loop
mov
clc
xor
in
imul
add
cmp
xchg
add
jo
mov
int3
adc
add
sub
add
inc
jg
adc
jecxz
mov
adc
inc
scas
fimull
add
xor
divps
sti
dec
mov
sub
xor
aas
xor
in
add
inc
inc
cld
xchg
cmpsl
or
fwait
addr16
dec
into
mov
lods
pop
std
aas
fwait
popa
mov
or
mov
push
mov
add
push
testb
cmpsb
xor
jno
mov
movsb
sbb
cwtl
push
es
dec
adc
or
mov
add
cmpb
aaa
dec
add
cltd
push
xor
out
or
outsl
add
ds
and
fists
inc
mov
cs
enter
mov
or
addb
inc
adc
jg
and
mov
push
mov
loop
lods
lcall
cmp
mov
clc
add
fldz
movsl
adc
les
lcall
out
sarl
xor
pop
jno
jae
int
cmp
aaa
jl
adc
cs
lds
mov
sahf
sbb
or
adc
jbe
xor
cmp
pop
mov
sub
inc
add
lret
push
mov
push
out
push
sbb
pop
mov
scas
lret
fst
ret
imul
mov
cld
lods
sub
dec
push
push
loop
mov
mov
mov
jecxz
sarl
xchg
and
mov
cs
adcb
adc
or
std
jns
sbb
into
test
sbb
pop
imul
ret
test
pushf
test
dec
inc
mov
insl
emms
es
cmp
push
mov
pop
loope
adc
cmp
push
lea
jns
insb
xlat
mov
mov
mov
loopne
int3
mov
add
das
imul
jecxz
sub
push
mov
jecxz
icebp
fsubrp
push
sbb
mov
movsl
sub
xchg
andl
ret
pop
pop
hlt
mov
push
pop
and
or
lret
icebp
lds
std
xorl
jg
sub
jg
push
pop
mov
mov
push
test
sarl
sbb
aas
and
mov
popf
test
cmp
jmp
addb
or
sub
mov
jmp
cmpsb
rcrl
mov
push
jne
and
xchg
cmp
mov
mov
push
xchg
and
cmp
andl
pop
add
rorl
pop
les
cltd
notb
sub
cmp
xchg
push
push
arpl
push
sbb
popa
pop
xor
fadd
mov
adc
and
jbe
pop
adc
lcall
popf
aam
rcrl
fldenv
or
out
aas
jae
sbb
xchg
les
mov
xor
ja
mov
push
mov
xor
cmp
mov
push
mov
dec
xor
shll
add
xlat
stos
xor
in
xchg
arpl
pop
sub
fsts
pushf
leave
call
insb
xchg
jmp
fnsave
and
pop
stos
mov
sub
popf
popf
pop
push
inc
sahf
shll
rol
outsl
and
lock
push
dec
xchg
stos
pop
aad
movsl
mov
xchg
ljmp
les
add
int3
loope
adcl
lock
jbe
mov
push
jae
fadds
lods
iret
jb
inc
scas
jnp
mov
add
bound
sub
cmp
pop
hlt
fstpl
mov
pop
maxps
mov
repnz
jns
pop
or
xor
sti
mov
mov
push
ret
iret
xchg
testl
push
pop
jecxz
outsb
ja
pushf
pop
xor
lods
adc
sbb
adc
inc
dec
jbe
sub
inc
cmp
and
mov
sbb
sbb
inc
pop
mov
shll
xor
sbb
out
adc
mov
mov
loope
shl
sub
or
cmp
stos
jo
xlat
jge
out
jb
xor
jl
and
rcrl
dec
xor
and
sub
cmp
inc
xchg
sub
mov
ja
shlb
mov
cmpl
imul
pop
dec
outsl
fcoms
mov
xor
mov
push
lcall
jecxz
jbe
mov
inc
pop
enter
jp
fcomps
das
or
mov
cli
add
and
pop
sbb
cmp
sub
shl
aaa
sub
mov
movsb
cmp
push
out
addr16
xchg
insb
imul
adcl
xchg
push
cs
cmpb
repz
jbe
fdivp
and
in
xchg
inc
mov
push
sub
enter
ds
roll
jne
clc
stc
shrb
cmpb
inc
mov
insb
jp
hlt
xchg
push
sbb
enter
sbb
test
jbe
fmuls
push
mov
pop
xchg
and
pop
sti
xchg
push
out
jge
test
add
in
mov
add
or
mov
pop
and
xchg
mov
xor
fstps
xchg
xorb
or
pop
xchg
das
mov
pop
sbb
aad
scas
dec
sbb
cmp
jno
iret
in
js
scas
push
sbb
jp
pusha
fldt
cmpsl
das
in
out
test
push
adc
xchg
fcoml
xchg
test
dec
incb
or
jecxz
add
cmp
data16
xor
adc
push
mov
inc
push
fsincos
pop
inc
dec
sbb
jecxz
outsl
jl,pt
movsb
push
jle
or
in
sbb
push
hlt
cmpsb
cmp
xchg
and
fidivs
adc
lods
inc
xor
scas
pop
out
testl
mov
inc
push
loopne
dec
push
sbb
jl
cltd
xor
js
or
fsubl
inc
mov
jle
in
pop
inc
sarb
add
stos
or
pop
dec
in
stc
xchg
fimull
xor
mov
sub
outsl
pop
test
xchg
adc
scas
addr16
add
movsb
sub
js
arpl
lcall
pushf
xor
xchg
loope
lea
jmp
scas
pushf
sbb
push
push
pop
fnstenv
mov
aaa
insb
insb
lock
xchg
popf
dec
pop
or
int3
mov
adc
call
mov
mov
insb
mov
pop
mov
mov
or
mov
lds
aas
cltd
test
cmpsb
mull
or
inc
mov
dec
push
out
sub
push
stos
mov
je
ror
mov
movlps
inc
iret
mov
sub
add
rorl
push
hlt
rcrb
sub
or
rcpps
shl
pop
cs
pop
xchg
adc
hlt
and
add
hlt
movsl
mov
pop
repnz
jl
out
loopne
or
popa
mov
cmp
xor
mov
xchg
negb
inc
cwtl
gs
sub
shr
out
or
idivb
in
lods
insb
fs
inc
ss
shlb
mov
mov
add
push
in
dec
addr16
dec
loope
lahf
shrl
inc
xchg
nop
mov
scas
pusha
pop
cmp
stos
cs
cmpsl
push
jb
sbb
movsw
sbbb
cld
in
pop
jl
push
jecxz
xor
pop
les
negl
xor
std
sub
mov
inc
pop
dec
add
fdivs
aam
dec
mov
push
out
insl
and
cmp
pop
out
test
test
adc
push
push
mov
sub
jno
negb
scas
movsl
sbb
cmp
adc
pusha
ss
scas
xlat
mov
fimull
jg
fdivrl
lods
and
push
mov
or
rcl
jnp
in
adc
minps
and
lret
dec
mov
das
dec
mov
andl
add
test
fs
mov
adc
inc
idivl
roll
stos
add
or
push
fistpll
mov
xchg
cltd
addr16
pushf
sarl
scas
inc
repnz
xchg
rclb
and
negb
pop
pop
in
repnz
xor
js
cmpsl
mov
cmpsb
xchg
nop
test
insb
call
test
les
imul
scas
adc
mov
les
or
push
xchg
add
out
popa
outsb
and
imul
loopne
js
je
loopne
test
insl
sub
or
xor
stos
das
cmp
mov
pusha
adc
imul
xchg
andb
sbb
inc
lcall
mov
xchg
out
mov
test
or
aam
push
add
inc
ret
push
or
mov
aam
xchg
faddl
pop
inc
cs
popa
insl
push
out
push
sbb
sbb
adc
stos
and
pop
ret
mov
push
and
sub
iret
push
icebp
mov
pop
sub
pusha
fbstp
or
dec
jle
add
lea
mov
fadd
arpl
inc
xor
gs
dec
shll
pop
outsl
xchg
adc
lret
and
mov
cmp
fwait
sarl
xor
mov
inc
push
cs
push
inc
sbb
outsl
rol
push
ror
xchg
xor
push
fistpll
push
mov
mov
dec
sbb
test
cmpsl
pop
mov
xchg
and
sbb
sub
pop
testl
fnsave
mov
lods
pop
imul
xor
add
mov
inc
aas
rcrb
or
sub
lcall
sub
test
pusha
cmc
adc
jmp
mov
sub
rcrb
pop
fcomps
lock
addl
sbb
aam
pop
push
cmp
or
jmp
cld
in
push
dec
arpl
inc
out
or
inc
pop
cmpsb
fisttps
lods
cltd
xchg
cmpb
sbb
test
xor
outsb
push
sub
add
fwait
cs
adcl
xchg
ret
mov
adc
sbb
leave
out
jmp
or
sub
and
mov
loope
pushf
adc
and
loopne
inc
xchg
aad
mov
movsl
dec
cli
push
test
lea
mov
add
xor
sbb
addr16
push
ret
sbb
pop
ja
inc
lcall
jo
insb
push
mov
hlt
inc
add
ss
mov
es
shll
stc
jmp
mov
cltd
mov
pop
jns
rorb
cmp
aaa
popf
imul
pop
pop
and
fcomi
test
xor
push
dec
inc
xor
xor
mov
sub
add
icebp
pop
push
outsb
repnz
or
cmp
icebp
push
outsb
popa
cli
push
adc
lcall
jp
lods
cmp
mov
pusha
add
adc
pusha
out
and
gs
inc
call
out
cmpsb
jl
mov
imul
in
cmpsl
sbb
out
sti
push
push
into
cmp
xor
movsb
xor
in
movsl
daa
add
shrb
xchg
xor
in
scas
mov
mov
xchg
dec
lcall
xchg
cli
stos
pop
lods
or
xchg
or
push
add
into
pop
mov
adc
insl
push
flds
ss
leave
mov
ja
jecxz
je
sbb
mov
in
ljmp
push
pop
je
outsl
lret
lea
movsl
sub
jecxz
cmp
sub
sbb
adc
mov
push
icebp
and
imul
xor
dec
sub
sub
xchg
ret
add
in
dec
cmp
jne
dec
repz
xchg
arpl
into
sub
data16
push
dec
push
mov
stc
jns
repz
ret
mov
cmp
pop
push
scas
inc
push
aas
fwait
pop
sbb
adc
xchg
pop
leave
inc
inc
fnstsw
dec
xchg
dec
aas
and
dec
mov
popa
aaa
xchg
push
mov
shlb
cmc
insl
xchg
lahf
mov
lret
je
jge
pop
sbb
leave
fld
pushf
cmp
hlt
cmp
cmp
xor
cmp
sub
int
les
sti
sub
push
inc
test
in
xchg
insb
fldcw
and
stos
adc
fldcw
inc
xor
sbb
adc
mov
cmp
leave
loop
cwtl
pop
xor
out
push
sbb
daa
call
xchg
in
out
push
repnz
dec
push
adc
dec
fcmovnbe
test
jae
cwtl
push
stos
mov
repnz
mov
mov
mov
pop
nop
add
lret
mov
inc
xlat
jmp
inc
lcall
push
jmp
fucomi
sub
push
xchg
inc
ja
outsl
jmp
icebp
sub
ja
in
xlat
pop
mov
test
xchg
jbe
or
iret
fmulp
cmp
jge
cmp
das
sub
fcomip
pop
fs
mov
lret
pop
popf
lret
jecxz
test
inc
xchg
fstl
shl
lcall
push
mov
dec
xchg
mov
or
shlb
jno
aaa
sbb
fwait
pop
xor
adc
mov
xor
mov
nop
add
push
mov
popa
pop
xor
jnp
gs
aad
inc
mov
adc
cmp
in
mov
mov
inc
sub
scas
in
in
dec
xchg
mov
sub
xor
mov
mov
sub
enter
jg
test
xchg
pop
mov
mov
notb
ja
push
sbb
adc
dec
xchg
lahf
and
mov
sti
dec
pop
sarb
cltd
add
jp
test
jle
test
in
out
mov
insb
lods
lahf
iret
or
lret
inc
insb
rcr
psubusw
fiadds
mov
int
popf
or
in
adc
fucomp
add
xorl
loope
mov
mov
adc
jle
enter
pop
lods
fnstenv
jmp
rolb
movsl
repnz
xlat
stc
jae
leave
pop
and
jge
divl
lret
mov
int3
pop
clc
xchg
mov
orb
fst
ss
sbb
ret
inc
call
aas
mov
pop
add
xor
sbb
xchg
aaa
mov
sbb
test
clc
xor
scas
cwtl
add
and
jb
mov
add
mov
cmpsb
daa
ret
pop
pop
inc
push
mov
fsubs
inc
cmpsb
ficomps
mov
sub
jp
push
nop
in
mov
mov
pushf
xor
push
inc
hlt
jg
in
loopne
dec
loope
inc
dec
dec
dec
cli
enter
sub
stos
adc
mov
scas
std
jb
js
jno
push
ret
divb
mov
jecxz
les
stc
pusha
mov
mov
inc
pop
ljmp
int3
cwtl
inc
jmp
ret
data16
out
pop
popa
lretw
dec
insl
lret
sub
mov
add
inc
pop
and
loope
xor
xchg
hlt
sub
outsl
xchg
fs
insb
into
daa
pop
jge
shlb
lods
cmp
sbb
or
into
ljmp
sahf
pop
xchg
gs
aam
push
addr16
sub
fs
sub
or
orb
ret
add
lcall
jb
pop
fcomps
mov
push
mov
cmc
bound
cli
pandn
or
clc
push
int3
or
ss
out
ja
push
mov
bound
rorl
pop
out
jle,pn
mov
outsb
jae
push
xchg
xor
add
xor
and
cmp
imul
test
mov
movsb
pushf
push
or
cli
out
iret
leave
punpckhwd
andl
decb
jb
pushl
cli
jno
adc
inc
and
mov
lret
stc
pop
xchg
mov
aaa
jns
mov
icebp
pusha
cmp
imul
into
sub
out
mov
mov
out
xor
fcmovbe
decb
pop
fstp
and
js
jb
jnp
ret
out
sti
mov
mov
insl
jl
sub
or
daa
push
xor
mov
mov
mov
or
cmp
dec
pop
push
mov
add
sub
cmpsb
xor
mov
pop
xchg
xchg
out
xchg
inc
aaa
outsl
adc
iret
stc
into
gs
cmpsl
scas
test
xor
fisubrl
out
push
mov
fs
fwait
loopne
dec
ficompl
stc
dec
lahf
rolb
xor
idiv
aam
sbb
sahf
popa
rorl
jae
lods
pop
jb
clc
mov
sub
movsb
das
xor
cmpsl
fisttps
in
jle
lds
cmpsb
jl
int3
pop
lds
dec
xor
sbb
lock
repz
daa
imul
xchg
push
or
aad
out
dec
into
cld
push
shrb
loop
cmpsl
lods
clc
loope
sbb
or
pop
leave
lock
mov
ss
cmp
fidivl
pop
jns
stc
data16
cmpsl
mov
mov
ja
bound
pop
cmpsb
popf
lods
and
push
enter
mov
callw
outsb
stc
mov
jmp
add
mov
lret
pop
add
iret
ljmp
aas
fadds
inc
fidivrl
jbe
lock
or
iret
rcll
dec
data16
lods
add
sbb
call
ficoms
sbb
inc
cmp
sbb
xor
xchg
cwtl
stos
jne
leave
cltd
pop
aam
fidivrl
loopne
jecxz
imul
mov
xlat
mov
xlat
push
push
xlat
xor
mov
lods
notl
mov
outsl
leave
mov
scas
sub
incl
cmp
xchg
sbb
adc
sar
outsl
sarl
in
mov
sub
es
sub
dec
sbb
inc
mov
inc
out
cwtl
xor
leave
sti
pop
push
scas
jb
cli
push
test
jne
loope
lods
mov
sahf
push
push
mov
and
inc
roll
out
scas
hlt
out
pop
ljmp
push
fstpt
jb
or
sub
hlt
or
mov
std
push
negl
mov
int3
push
notl
and
mov
inc
pop
mov
int
mov
lods
rorl
call
pop
mov
lret
xchg
lds
and
sbb
sub
icebp
insl
xor
cmp
xchg
dec
cmp
xchg
xchg
icebp
shll
mov
aas
shrb
sbb
shll
js
jno
das
add
fdivr
sbb
in
inc
testl
add
jmp
mov
pop
arpl
mov
xchg
pop
movsb
pop
jo
jne
loopne
dec
out
mov
lcall
mov
rorl
inc
adc
mov
jg
out
inc
sbb
bound
push
inc
mov
mov
mov
gs
fdivrs
int3
popf
popf
loopne
jo
inc
mov
mov
adc
and
jo
and
inc
mov
and
scas
pop
jp
or
jne
outsb
movb
xchg
mov
idivl
cli
ljmp
dec
fadd
sti
pushf
xor
int3
mov
in
sbb
ret
test
jl
jp
je
adcb
movsl
cmpl
and
test
sub
enter
lods
add
cmp
push
sub
xchg
inc
sub
fldcw
clc
in
cmc
mov
pop
xor
mov
mov
lret
out
aad
pop
setb
outsb
mov
cmc
mov
jp
cmp
jecxz
into
test
lcall
inc
iret
adc
mov
leave
dec
inc
sub
sub
in
imul
mov
sbb
dec
scas
mov
dec
inc
daa
add
mov
fstpl
xchg
sub
mov
in
xchg
mov
sbb
es
adc
xchg
out
jge
pop
lahf
xor
andl
stc
xlat
movsl
jmp
hlt
add
xchg
in
lcall
out
out
xchg
fnstcw
lods
call
push
pop
popa
jl
adc
dec
pop
cltd
mov
sub
mov
ds
and
jno
mov
sub
jne
notb
mov
cmc
sar
ret
arpl
in
out
mov
xor
fdivl
mov
pop
jmp
fistpll
pop
adc
and
mov
adc
jmp
inc
xor
ds
dec
pop
fs
pop
cld
dec
mov
cli
lods
jnp
sub
mov
sarb
out
mov
push
and
movsl
into
and
aam
jmp
and
mov
sbb
fcmovb
mov
push
mov
adc
pop
out
les
pusha
fcoms
jo
and
rclb
sbb
mov
mov
cld
movsl
jbe
adc
mov
je
inc
cmp
aam
xchg
adc
dec
ljmp
sbb
pop
mov
aaa
movsb
and
outsb
fbstp
stc
cmp
add
pop
cmpb
sbb
in
lcall
imul
xchg
testb
xchg
pop
aam
fmuls
push
pop
jb
std
mov
sbb
mov
jbe
int3
popf
or
into
lahf
pop
push
lock
test
cmp
and
outsb
cld
insb
arpl
lds
jge
popa
lret
and
sub
insb
jno
jno
jbe
ds
cmp
repnz
loopne
xor
divl
xchg
insb
mov
mov
gs
mov
sub
fsubrp
rclb
add
sub
out
mov
pop
lods
imul
sets
scas
xor
push
orb
mov
xchg
adc
movsb
xor
in
or
mov
adc
mov
in
out
xor
out
je
and
cli
jecxz
sub
cmpsb
jecxz
hlt
mov
push
inc
adc
test
repz
sbb
test
mov
jns
repz
add
xchg
xor
push
std
iret
mov
xor
imul
xor
mov
test
cld
sub
cmp
mov
push
movsl
inc
shrb
xchg
mov
es
xor
int3
dec
push
ss
in
xchg
push
xlat
aas
fistpl
subb
bound
loope
pop
popa
idivl
cmovl
sti
popf
xchg
push
xorps
jp
mov
test
int
mov
shlb
xchg
adc
lea
ret
mov
insb
mov
push
out
xchg
or
mov
fwait
jp
jg
inc
lea
xchg
pop
fmull
imul
sub
push
sub
or
out
sbb
imul
lock
aaa
call
jne
pop
outsb
adc
js
jle
xorb
sub
fwait
stos
mov
pusha
out
mov
sub
imul
or
mov
sarb
int3
inc
mov
mov
adc
inc
ss
push
addl
ljmp
out
pop
dec
stc
and
mov
jp
sbb
leave
movsb
mov
neg
jge
fildll
out
hlt
test
bound
mov
xchg
jl
scas
sub
add
mov
sahf
loop
lods
fnstsw
lcall
cld
fcmovnu
div
push
lcall
mov
mov
cmp
insl
inc
and
adc
mov
mov
push
in
icebp
push
cmp
loope
or
sti
xor
icebp
fdivrs
aas
sbb
push
dec
outsl
fdivrl
sbb
xor
and
loope
in
cli
rclb
dec
fbld
or
sub
mov
jge
push
mov
mov
sar
stos
dec
jb
add
sbb
mov
das
push
or
jno
and
stos
cmp
sub
cmpsb
subl
jnp
test
cwtl
mov
jl
loop
adc
mulb
int3
add
fcompl
iret
and
call
cmp
sbb
jl
pusha
stc
js
stc
repz
adc
in
pop
dec
adc
addb
push
ret
or
jle
inc
test
xchg
add
push
push
int3
rcll
mov
or
mov
std
aam
mov
es
imul
dec
test
xchg
lret
push
lcall
or
test
or
cmp
aaa
imul
movsl
enter
mov
push
mov
cmp
mov
aaa
push
stos
add
cmp
je
ljmp
cmpsl
or
in
or
aaa
sub
mov
call
pop
addr16
test
cs
ljmp
xchg
jo
loopne
mov
xchg
jecxz
int3
mov
sti
mov
dec
daa
xchg
iret
lds
xchg
inc
jbe
mov
movsb
test
das
rep
int3
jmp
and
rolb
outsb
xchg
push
dec
leave
ljmp
mov
aad
jp
loope
aam
xchg
or
pop
and
sbb
add
stos
and
mull
push
or
rol
jmp
jp
jo
out
repz
sbb
arpl
aas
jmp
or
ffreep
icebp
insb
add
mov
loope
testl
push
lret
scas
mov
mov
addr16
lods
cmp
test
fmuls
xchg
test
sub
mov
xchg
or
shrb
and
xchg
mov
cmp
pop
or
jl
mov
mov
mov
out
subb
cltd
pop
jecxz
les
push
fsubrp
movsl
mov
or
mov
cltd
pop
test
iret
mov
lahf
fidivrl
cltd
sahf
ds
test
inc
pop
lock
rorb
add
test
je
adc
mov
shrb
sub
cmp
dec
icebp
es
fwait
je
dec
rcll
adc
scas
ja
mov
mov
arpl
mov
or
add
mov
popa
push
std
sub
sbb
sub
cs
jle
and
mov
or
and
push
in
xlat
cmp
repz
mov
movsl
sbb
les
stos
cli
arpl
cld
bound
push
pop
adc
jp
inc
cltd
mov
sbb
jle
aaa
xchg
insl
xchg
push
cmpl
sub
mov
jle
je
cwtl
xor
xchg
stc
sbb
ret
pop
xchg
in
rorb
or
idivb
in
pop
mov
lret
lods
push
jne
in
cmp
cli
rorl
adc
sub
pop
or
loopne
jae
cld
dec
shlb
cmc
fstl
xor
xor
repnz
rclb
into
or
ds
sub
lods
repnz
insb
cmp
fnstsw
fistl
add
scas
popf
xor
push
test
push
into
and
inc
jbe
lcall
mov
loop
and
enter
mov
pop
lea
ljmp
mov
pop
push
shl
addr16
jp
test
or
mov
cmp
sbb
dec
mov
lods
push
mov
movsl
je
ret
inc
stos
sub
mov
shll
andb
and
mulb
adc
xchg
jge
stos
pop
and
mov
lahf
inc
clc
pop
inc
shlb
pop
sub
push
cmp
inc
cmc
sub
cmp
dec
jo
adc
push
push
push
inc
and
add
and
inc
ret
movsb
pop
cmp
mov
mov
sbb
pop
mov
fstl
movsl
xchg
ljmp
xchg
sub
mov
shrb
inc
sub
arpl
out
ret
add
leave
adc
out
jge
jge
into
aaa
mov
sbb
push
lret
dec
repz
cmpsb
jecxz
sub
fst
adcl
test
xlat
lcall
popf
push
inc
das
xor
fmull
inc
das
ss
movsl
arpl
mov
push
cmp
mov
cmp
or
lods
or
popa
jle
mov
mov
sti
or
jno
pushf
orl
pop
sbb
cli
fs
xor
test
inc
ja
pop
xor
mov
xor
push
mov
pusha
sub
jl
lods
fistl
inc
sub
adc
rcl
fs
mov
push
stos
xchg
lea
imul
jle
ret
lods
orb
sub
ret
add
push
adc
sbb
mov
mov
cmp
xchg
mov
addr16
or
push
fnstsw
clc
popa
enter
dec
data16
mov
mov
or
xchg
and
mov
jo
out
sbb
pop
push
pushf
xor
xor
std
jg
push
pop
out
adcb
sbbl
jg
dec
jl
mov
ds
or
bound
fisttpl
popf
or
arpl
mov
xor
mov
xor
pop
and
lcall
cmp
test
mov
add
push
xorl
lret
pop
push
cmp
pop
ljmp
mov
call
out
or
sbb
not
cmp
or
in
xchg
mov
int3
pusha
or
push
aas
lret
hlt
mov
roll
inc
sub
add
shrl
and
clc
xor
lea
mov
jbe
adc
adc
or
adc
and
imul
js
add
clc
sbb
fistl
bound
mov
cli
push
jbe
int
cmpsb
xchg
lea
add
aam
push
pop
mov
aas
mov
push
mov
xchg
scas
push
fistps
test
je
cmpsl
mov
pop
mov
cld
sbb
mov
jp
mov
dec
jg
stos
jle
mov
in
push
adc
hlt
fcoms
sbb
adc
cltd
xchg
jle
imul
clc
pop
inc
clc
jge
scas
xchg
iret
push
outsl
pop
lock
xchg
push
fptan
cwtl
sarb
pop
mov
int
jecxz
sub
and
lahf
push
jae
fsubrl
and
out
or
shll
arpl
nop
mov
dec
sub
push
xor
jmp
out
outsl
frstor
mov
push
test
mov
fidivrs
cs
mov
jmp
dec
clc
sub
repnz
sahf
adc
inc
xchg
clc
sub
imul
sbbb
idivb
add
leave
repz
out
mov
insb
je
push
hlt
inc
setae
dec
ret
jnp
xchg
aas
jne
shll
or
adc
pop
pop
jb
mov
mov
xlat
arpl
push
and
loop
stc
getsec
leave
loope
rorb
add
mov
xchg
movsl
mov
in
xchg
fidivl
mov
sub
popa
jecxz
dec
push
pop
and
rorl
loope
jp
push
and
push
sbb
adc
sbb
add
jl
and
sbb
ret
sub
add
xlat
push
jno
inc
push
add
sbb
jmp
fimuls
cltd
dec
in
mov
mov
hlt
test
dec
outsl
mov
dec
dec
mov
test
inc
cwtl
xor
pop
inc
fmul
mov
insb
insb
and
shrb
stos
push
sub
lods
xchg
or
mov
or
outsb
lret
pop
mov
sbb
in
and
cli
fadd
jmp
or
adc
add
dec
and
or
arpl
stos
push
fnsave
sbb
jle
xchg
dec
xlat
rorl
cmp
jl
cmp
and
enter
xchg
out
adc
xchg
call
push
or
or
nop
xor
fsubrl
nop
test
bt
and
cmp
mov
inc
cmp
jbe
mov
aad
dec
icebp
aas
dec
or
and
sbb
sub
mov
cmpsb
xchg
aam
push
pop
cmp
push
dec
scas
je
in
into
imul
out
xchg
adc
popf
clc
dec
xor
jmp
mov
outsl
leave
mov
add
lods
jno
mov
sbb
sar
jmp
movsl
call
or
test
sub
sbb
inc
add
into
adc
js
mov
inc
cmpsl
pop
rcrb
and
mov
das
scas
cmp
mov
fmul
dec
add
ficoms
dec
stos
call
adc
shrb
shl
inc
dec
mov
stos
and
inc
add
test
xor
in
shrb
dec
scas
mov
jecxz
arpl
push
mov
or
dec
outsb
and
mov
ret
jb
pop
lret
xchg
mov
jno
mov
xor
cwtl
push
cld
je
popa
lret
jl
lret
sub
in
cmp
push
je
sbb
dec
jle
push
xchg
dec
in
mov
sar
les
jg
mov
dec
cld
mov
xchg
fmul
push
adc
inc
and
lods
jne
and
hlt
and
push
repnz
jns
fcomi
je
mov
pusha
adc
mov
repz
xchg
mov
mov
pop
lea
jge
push
push
dec
xor
popf
ficoms
or
das
repnz
mov
dec
shrl
ret
sbb
add
add
xor
push
das
fisubs
adc
rcr
lret
push
xor
and
pop
ljmp
cwtl
mov
push
xchg
popf
jae,pt
ret
push
sahf
data16
jg,pt
insb
cmp
add
add
aam
jg
and
cs
iret
mov
push
jl
xchg
lcallw
rclb
ja
cmp
call
add
cmp
mov
jbe
push
cld
xor
into
push
mov
fsubl
arpl
fisubs
cwtl
mov
adc
dec
pushf
outsb
fstl
dec
adc
sbb
fdivr
inc
push
repz
rcl
repz
pushf
icebp
push
ss
pop
and
out
dec
mov
dec
pop
lea
or
icebp
addr16
pop
push
in
inc
rcll
jl
or
es
add
jmp
call
ret
add
push
pop
movsb
jecxz
mov
jnp
xchg
repz
es
loope
andb
out
dec
adc
rolb
sub
cmpsl
mov
fidivs
push
mov
ljmp
ja
jnp
mov
xchg
cs
cltd
xchg
inc
movsl
fistps
add
xor
pop
in
sub
out
adc
sub
and
fidivrs
adc
lret
mov
push
push
frstor
in
lods
les
cltd
loop
or
imul
mov
cmp
or
dec
pop
dec
pop
or
or
pop
stc
mov
in
or
arpl
sub
push
mov
push
dec
je
cmpsl
lret
or
pop
aad
or
or
inc
imul
sbb
into
adcb
dec
xlat
or
inc
sbb
dec
adc
pop
loopne
inc
cmpsb
dec
cmpsl
outsb
and
jmp
out
mov
push
cmpsl
stos
jo
pop
cmc
addr16
fsubs
pop
cld
sub
adc
testb
add
xor
pop
xor
mov
mov
jl
and
je
aas
dec
pushf
out
pop
in
xor
sbbl
cltd
xor
nop
repz
scas
fs
adc
jmp
jo
pop
sbb
xchg
fs
in
pop
movsb
imul
bound
in
mov
popf
xlat
pop
test
pop
inc
lods
xchg
cmpsl
cmp
mov
jno
gs
ja
das
notl
sarb
mov
call
adc
xchg
cmp
xor
lods
mov
scas
add
sub
lods
pop
mov
movsl
pop
sbb
mov
mov
sgdtl
jnp
add
cmp
jle
jp
loope
inc
fcmovu
xor
icebp
cltd
adc
rcr
repnz
cmp
mov
es
mov
push
pop
mov
lods
cs
lahf
arpl
test
das
mov
sub
addr16
mov
lahf
pop
pop
mov
jecxz
mull
add
xchg
cmpl
mov
dec
mov
testl
addb
test
rcl
jne
call
push
stos
pop
fistpl
xchg
cmp
push
xor
rclb
and
mov
sbb
pop
fnstcw
add
jno
mov
push
xor
shr
stos
jb
add
data16
mov
cltd
dec
cmp
in
mov
add
aam
pop
insb
xor
inc
push
les
fcoms
nop
pusha
fcmovnu
fsubrs
mov
xor
jmp
mov
shl
pusha
add
mov
sti
cwtl
pop
jp
daa
dec
mov
push
lods
add
pushf
or
xchg
mov
pop
jnp
mov
push
fisubrs
insl
cmpsb
popa
xchg
xor
arpl
out
mov
and
imul
aad
cmpsb
dec
push
in
out
dec
lds
mov
rcl
mov
dec
push
mov
int
outsl
dec
jno
bnd
fstp
sti
jb
jmp
sbb
xchg
cwtl
fdivrp
in
xchg
sbb
lock
into
shll
aas
adc
sub
lds
xchg
sbb
adc
xchg
jge
mov
xor
pop
pop
sub
push
sub
fcomps
loopne
ret
dec
adc
xor
cmpb
sub
and
cmp
xchg
std
imul
ffreep
jns
mov
ss
sbb
jb
mov
cmp
jne
scas
dec
mov
mov
movsb
or
mov
jg
and
adc
and
and
jl
mov
pop
mov
sub
out
insl
cs
jo
cmp
aaa
fcmovnbe
test
and
mov
push
lds
test
mov
imul
adc
xchg
sbb
mov
cmc
lret
pop
mov
mov
sub
js
popa
mov
jno,pt
ret
push
dec
cmpsb
and
pop
icebp
ret
imul
ja
cmp
iret
sub
mov
jecxz
push
or
adc
scas
adc
mov
push
mov
jae
adc
add
scas
mov
dec
loopne
fimull
jle
int3
jge
sub
pop
fmulp
dec
pop
fldl
lock
fcoml
ljmp
mov
cmp
sarb
push
xchg
dec
sbb
aad
adc
lahf
scas
aas
cmpb
in
lret
jl
cld
insb
mov
and
pop
xchg
mov
or
push
inc
mov
fsts
pop
inc
adc
dec
mov
mov
mov
and
popf
lods
sbb
and
mov
jp
sar
jl
cli
out
xchg
rcrb
cmp
xchg
int
mov
pop
enter
das
cmp
sub
lcall
movsl
out
out
imul
inc
push
push
repnz
xchg
int
les
ja
popf
scas
shll
mov
pusha
in
in
adc
adc
stos
es
inc
sub
cmpsb
pushf
inc
pop
mov
jb
cmp
cltd
loopne
adc
movsb
sub
lcall
cwtl
shll
fsubrs
clc
jnp
dec
andl
cmc
push
sub
testb
fbstp
inc
lock
inc
and
dec
push
sbb
loopne
add
mov
push
cmp
test
sbb
lods
jb
sbb
lds
shr
imul
xor
in
outsb
dec
repnz
sub
cmp
lea
cmpl
pop
sbb
jno
add
ja
push
jmp
loope
nop
testl
mov
mov
fcmovne
xor
xchg
fistl
add
push
js
mov
mov
xor
jmp
pop
lds
add
ss
jecxz
rcl
mov
gs
incl
ds
mov
testb
or
sti
mov
cltd
jae
sbb
xor
imul
call
shrl
and
enter
lret
mov
fucomi
push
inc
mov
imul
add
sahf
fwait
call
out
adc
dec
push
xchg
lods
xor
lret
lea
sbb
outsl
shrl
cmp
fwait
sub
ret
add
push
gs
xor
jmp
inc
divl
sbb
and
mov
ss
lea
cli
sub
cwtl
pop
jbe
push
hlt
adc
ffree
sub
gs
or
shlb
xor
movb
pop
inc
or
popa
rcl
loopne
inc
sbb
cmp
mov
outsl
xchg
jecxz
pop
adc
dec
sub
pop
mov
insb
int3
hlt
out
push
stc
xchg
jb
mov
and
aam
pcmpeqb
jne
jbe
pop
add
push
mov
rorb
in
jbe
sbb
xchg
jl
loop
test
xor
iret
cli
icebp
inc
xlat
pusha
cmp
jle
lahf
std
ss
jg
shrb
push
jae
pop
mov
inc
adc
or
sbb
sub
lcall
mov
iret
xlat
mov
sti
sub
out
cmp
fucomip
push
ljmp
adc
movsb
pop
jae
push
mov
mov
ffree
dec
pop
xchg
nop
mov
and
dec
and
and
dec
enter
push
lahf
fs
inc
mov
and
and
cmpsb
add
rcrb
mov
mov
push
cltd
inc
fldl
std
gs
cs
or
popf
sbb
test
decl
sub
jp
rcll
outsl
dec
cmp
dec
jge
cs
pop
test
push
les
movb
cmp
icebp
sbb
ret
dec
add
push
icebp
or
aas
cmc
inc
mov
mov
sbb
arpl
fucomi
je
push
adc
xor
das
fidivrl
push
xor
add
je
jge
jge
sub
pusha
enter
in
lods
ret
and
lods
pop
mov
fs
jbe
ljmp
aas
idivb
jb
jl
dec
fwait
cs
push
sub
sbb
test
call
je
notb
out
xchg
add
out
repz
and
mov
or
xchg
insb
inc
aad
fidivrs
data16
add
jne
or
lcall
fstpl
cltd
pushf
lock
hlt
push
lcall
addl
add
testl
nop
mov
mov
sbb
add
sbb
mov
push
popa
sub
lcall
xor
pop
mov
ret
ljmp
aaa
fwait
je
pop
add
cmpsl
mov
mov
adc
xchg
inc
sbb
hlt
cli
aas
adc
jp
jbe
jb
mov
dec
inc
dec
inc
sti
stos
inc
js
mov
jne
sbb
ror
cltd
outsb
xlat
inc
xor
sbb
mov
jb
jle
leave
movsl
and
pop
jns
lods
cld
and
push
or
xchg
dec
arpl
pop
mov
fstl
arpl
inc
jl
mov
mov
add
test
testb
fsubr
pop
cmp
sub
push
push
movsl
inc
ja
loopne
add
js
adc
cwtl
or
enter
ds
enter
xchg
pop
addl
push
add
jbe
mov
mov
int3
lahf
mov
call
push
test
pop
sbb
push
add
pop
outsb
movsb
xor
jmp
outsb
mov
daa
outsb
or
les
shlb
add
mov
and
inc
imul
inc
adc
inc
push
out
sub
repz
and
rcrl
stos
adc
aam
xchg
mov
adc
sub
in
ja
cmp
add
pop
aas
cltd
iret
scas
loopne
lods
ss
xchg
out
adc
inc
jo
mov
in
loopne
push
mov
jge
outsb
xor
clc
push
sbb
mov
push
inc
mov
hlt
mov
cmc
mov
je
mov
out
push
jne
push
lock
dec
test
xor
xor
sahf
cld
cltd
dec
mov
in
pushf
cmp
sub
movsb
iret
mov
hlt
in
pop
inc
divb
sub
or
je
mov
sub
add
sarl
jb
shr
mov
fstpl
jnp
xor
pop
mov
jle
mov
adc
fadds
pop
add
subb
xchg
fs
popl
mov
loope
and
push
lock
icebp
mov
loop
outsb
fiaddl
pop
xchg
mov
popf
mov
inc
dec
xchg
jns
add
push
add
dec
mov
mov
add
add
ret
and
sbb
lds
and
cmovae
js
inc
mov
ljmp
xchg
mov
incl
lcall
out
jp
xor
mov
xor
mov
jne
jl
lcall
in
movsb
xor
sahf
push
sbb
mov
fisubrl
movsl
sbb
arpl
push
jp
and
sub
flds
jl
nop
jp
aam
incl
gs
xor
outsl
das
hlt
xchg
or
pusha
je
or
mov
fiadds
adcl
pop
pusha
dec
lret
mov
sti
sbb
shrb
pop
xor
mov
cmpsl
mov
nop
nop
scas
sbb
mov
mov
and
icebp
jl
shr
fistpll
movl
iret
data16
jl
daa
lret
pop
cmp
inc
xchg
aam
outsb
sti
jns
clc
mov
and
mov
and
inc
cmpsl
mov
lods
mov
out
mov
ret
sbb
mov
lods
lahf
mov
outsb
daa
pop
push
mov
aas
or
pop
iret
jo
imul
mov
insb
int3
mov
dec
out
cmp
lods
xor
jmp
notb
mov
popf
add
notl
xchg
andl
inc
add
sahf
fs
cltd
and
ss
hlt
cmp
jecxz
adc
inc
fstpt
cmp
movsb
mov
movsl
test
push
ret
in
shl
xchg
or
fadd
or
push
mov
add
inc
push
jns
outsl
adc
mov
cmp
adc
fsubl
pop
shlb
mov
fcoml
imul
popa
scas
popf
subl
sti
jle
mov
stos
dec
mov
push
or
rolb
mov
or
cmp
adc
js
xchg
shll
inc
jg
aam
stc
add
push
cmpsb
mov
imull
jecxz
sub
dec
dec
sbbb
jae
pushf
cmpsl
jbe
bound
mov
add
cmc
adcb
or
xchg
shr
subl
in
icebp
ret
mov
das
jecxz
filds
cmp
ficoms
xor
dec
inc
sbb
mov
and
imulb
ss
push
push
adcb
int
mov
and
shrl
arpl
mov
in
inc
test
mov
mov
and
xchg
lods
adc
pop
adc
out
push
jmp
mov
lahf
out
mov
push
addb
and
ja
sbb
jmp
popf
add
xchg
shll
jecxz
mov
jne
into
or
add
test
sbb
lcall
sbbb
out
add
cltd
cwtl
sbb
in
mov
stc
adc
fwait
aam
push
push
pop
out
mov
jbe
pop
jmp
cld
push
inc
mov
ret
dec
lods
xchg
arpl
ds
push
clc
test
dec
hlt
mov
pop
cmpsl
lods
pop
stc
mov
cmp
xor
fstl
ljmp
cltd
adc
outsb
jne
pop
xor
cmp
lcall
ds
ror
std
mov
shld
sbb
rorl
push
in
je
sbb
inc
inc
test
sbb
out
lret
jp
dec
push
insb
jo
imul
xchg
dec
adc
push
scas
inc
test
sar
mov
movsl
mov
adc
lcall
enter
pusha
mov
jb
aam
sub
lock
or
sbb
xor
mov
sub
push
ljmp
xchg
sti
ds
inc
das
sbbl
dec
jmp
dec
jne
add
add
jbe
stos
lret
rcll
cmp
mov
mov
mov
iret
sub
int3
insb
jl
movsl
sbb
mov
or
sti
sub
aad
sub
aas
add
add
inc
mov
inc
jg
add
xchg
test
push
test
addr16
push
xor
pop
ja
pop
pop
dec
mov
jge
jae
sti
scas
int3
sarb
outsb
sbb
pop
xchg
rcrb
loopne
in
dec
imul
icebp
or
nop
outsb
pop
pop
pop
dec
fidivs
jno
jnp
mov
dec
push
nop
inc
ja
adc
push
inc
stos
pop
in
mov
mov
cmp
aas
test
scas
cs
shrb
cmp
popa
inc
pop
imull
jnp
sub
ljmp
xchg
pop
mov
and
ss
stos
sbbl
cmpsb
xchg
add
outsb
pop
sbb
stos
jge
int
mov
outsl
pop
cmp
sub
cmp
lods
fidivl
rcr
cld
sarb
pop
andb
push
insb
iret
cmp
dec
push
ret
loope
out
sub
out
in
jecxz
mov
loop
adc
cld
mov
rcrl
pop
cmp
jne
mov
fidivs
mov
mov
gs
mov
sbb
jne
pop
inc
dec
fldt
cmp
add
stos
std
insb
scas
inc
mov
or
mov
mov
xchg
loopne
test
or
sub
xchg
mov
imul
dec
cmp
lret
mov
dec
adc
loope
sbb
pop
sbb
test
aas
mov
data16
and
cmp
push
cmp
dec
in
cmpsb
xchg
scas
sbb
loop
fs
subb
push
adc
pop
repnz
sbb
inc
or
push
dec
sbb
mov
or
and
cwtl
mov
orl
push
cmpsb
mov
std
lods
cld
mov
push
pusha
shl
jg
lcall
jnp
outsl
mov
movl
imul
cmp
ss
xor
mov
lods
into
and
into
xchg
mov
xchg
out
push
push
mov
sbb
hlt
mov
in
inc
mov
mov
imul
sub
loop
xchg
lock
fwait
jle
fsubrl
fildll
out
iret
jmp
cmp
mov
mov
clc
push
or
std
arpl
jle
cs
push
rorl
dec
adc
movsl
cmp
stos
jns
jge
rcrb
lahf
jecxz
inc
mov
pop
stos
jnp
push
cli
push
mov
push
or
cmp
cli
pop
inc
dec
jp
xchg
mov
sarl
mov
dec
pushf
push
mov
adc
mov
in
xor
jbe
xchg
add
xchg
jns
inc
test
js
mov
xchg
xor
sub
add
or
push
fcoms
or
sar
out
mov
cmpsl
lods
cmp
xlat
dec
inc
in
jo
cmc
in
dec
insl
aas
movsb
imul
jecxz
cmc
or
bound
sbbl
imul
inc
jl
mov
fistl
mov
fisttps
cmpsb
sub
mov
aas
mov
dec
cmp
mov
out
dec
stos
loop
ficoms
lds
adc
xor
enter
push
pop
dec
sub
fimuls
mov
fstpt
xlat
jp
stos
jnp
cmp
jo
inc
mov
adc
jbe
pushf
dec
sub
iret
mov
fdivrs
inc
jns
scas
popa
cmpsl
cmp
lret
faddp
adc
mov
outsl
test
out
pop
ret
out
cmpb
xchg
out
ret
and
mov
shll
sub
adc
lds
add
scas
xchg
add
or
cmp
push
movl
pop
addr16
sahf
or
mov
stc
push
ds
andb
movsb
in
xchg
scas
pop
daa
jo
jmp
xchg
push
dec
mov
rcll
cmpb
dec
sbb
cmp
mov
xchg
mov
push
fsts
inc
mov
mov
jb
push
inc
xchg
arpl
add
mov
test
push
icebp
orb
aam
fimuls
ja
mov
arpl
xor
jne
adc
cmp
icebp
sahf
xor
jbe
xor
xchg
loopne
call
adcl
aaa
push
cmp
shrl
ss
insb
aad
pusha
inc
xchg
mov
test
pop
shr
mov
add
loopne
cmpsl
dec
push
outsb
aad
rcr
andl
popl
rorl
or
pop
popf
pop
ja
stos
xor
push
mov
gs
push
add
push
inc
add
out
xor
sbb
push
sub
pop
jo
add
int3
and
js
ret
mov
aas
pop
sub
adc
lods
pop
and
and
push
xor
mov
aas
inc
lock
fistpl
dec
fimuls
out
pusha
pop
stos
leave
mov
xchg
mov
sbb
pushf
lods
lcall
daa
xor
gs
push
imul
inc
cmp
push
cmp
and
add
dec
out
pop
into
bound
movsb
movsb
lret
mov
push
push
clc
scas
xchg
cmpsb
mov
imul
xor
fidivrl
jp
cwtl
cld
push
or
and
std
stos
cmpsl
loopne
mov
fidivl
dec
or
ret
add
and
arpl
inc
out
add
mov
std
mov
and
or
inc
mov
lea
adc
popf
leave
test
imul
pushf
xchg
adc
cmc
in
inc
push
lods
sbbb
xor
dec
sub
addr16
add
jns
ds
cmp
xchg
pushl
adc
fcmovb
dec
and
lock
jmp
push
jno
fnstcw
cmpsl
adc
xchg
adc
pop
scas
inc
pop
and
push
pop
adc
test
nop
aaa
mov
lcall
in
sub
scas
mov
mov
cmpsl
mov
les
push
xchg
sbbl
adc
cmp
mov
mov
lret
loopne
push
dec
xor
push
or
fs
mov
in
xchg
inc
filds
sub
mov
sbb
rorb
stos
push
out
into
xlat
push
add
cmpsl
push
data16
xor
pusha
fcompl
cmpsb
or
scas
lret
sub
cmpsl
pop
outsl
push
test
jae
sti
push
pop
stos
pop
push
leave
repnz
fldt
sahf
pusha
sbb
jl
rcll
xor
inc
in
mov
jne
inc
mov
xlat
fnstenv
sarl
mov
mov
daa
rorl
bound
jne
cmpl
icebp
loopne
bound
sub
test
push
push
mov
adc
mov
jle
bound
movsb
adc
and
dec
in
sbbl
mov
addr16
sbb
rolb
call
sub
mov
setnp
adc
lret
xor
jo
cmp
movsb
scas
int3
and
inc
jl
jecxz
mov
mov
scas
ret
fsubp
xor
sub
push
jg
into
or
adc
imul
dec
sbb
mov
mov
out
inc
push
in
pop
xchg
in
cmp
test
pop
cld
dec
out
addr16
loope
movsb
dec
insl
pop
push
int3
push
sbbb
fstl
nop
stos
xor
jge
ljmp
jecxz
cmp
sarb
mov
sbb
sub
mov
push
mov
clc
cmc
pop
aaa
adc
mov
lds
jmp
jmp
mov
mov
or
lcall
shlb
cs
fwait
xchg
out
push
sbb
cmp
pop
inc
cld
mov
pop
jae
mov
or
xchg
lret
add
into
mov
jnp
fcoml
xor
jle
inc
add
push
jp
ss
bswap
dec
neg
mov
sub
push
rclb
out
lret
out
xlat
outsb
cwtl
out
mov
xchg
repz
addb
sbb
mov
stc
pop
adc
adc
adc
cmp
inc
pusha
sahf
je
sub
xor
jl
or
in
orl
mov
sbbb
inc
das
sbb
scas
shll
jmp
sub
push
inc
xchg
adc
xchg
mov
clc
jbe
lcall
inc
cltd
jl
lods
test
shrl
sbb
sub
call
pop
dec
arpl
iret
test
bound
iret
mov
les
lods
ret
repnz
xchg
inc
aad
pushf
fs
pop
fs
shl
mov
push
inc
mov
rolb
aaa
push
outsl
dec
daa
arpl
push
push
jge
dec
shll
hlt
mov
into
sahf
xchg
or
xchg
mov
jge
aaa
cmpsl
jb
xlat
test
sarb
dec
mov
push
dec
out
fdivs
clc
pop
fs
data16
push
cmp
in
ret
or
adc
jecxz
pop
pop
fdivrl
dec
fs
jecxz
int3
mov
test
sbb
push
pop
dec
mov
xchg
jge
push
pusha
fistps
xchg
out
and
mov
mov
pop
push
sbb
fisubl
fisubrl
push
push
pop
push
sbb
inc
jns
sti
sbb
mov
jecxz
lcall
iret
push
cmp
pop
sub
rclb
out
mov
insl
fdivp
fcmovb
mov
stos
outsl
mov
test
enter
mov
gs
cmc
fadd
push
or
jge
xlat
out
pop
fcoms
dec
loop
and
mov
inc
into
popf
push
insl
packsswb
scas
mov
adcb
mov
inc
xchg
jns
sahf
xchg
adc
push
dec
cmpsl
jbe
hlt
and
push
add
ret
push
movsl
ret
or
sub
or
out
or
lcall
pop
cwtl
fdivrs
mov
fidivrl
pusha
and
xor
pop
lods
push
pop
fldt
stos
js
jno
inc
or
cmpb
sbb
mov
rolb
mov
loopnew
mov
and
mov
test
and
add
addr16
or
sub
jae
ds
push
pop
mov
xchg
xchg
cltd
mov
mov
lret
hlt
pop
out
lods
outsb
or
mov
andl
mov
lds
pop
hlt
addr16
test
lret
mov
dec
xor
adc
or
es
std
fsubrl
js
sub
sub
imul
push
mov
inc
jo
add
cmc
repz
sbb
mov
pop
xor
repz
cli
imul
scas
aaa
fldcw
add
pop
lahf
in
and
add
pop
cmpsl
ss
push
fucomip
insl
mov
pop
in
shrl
or
sub
mov
sub
stos
sahf
into
jbe
stos
jae
or
mov
inc
cltd
inc
cli
cld
xlat
sbb
fsts
sub
push
cmp
stc
mov
inc
pop
movsl
fimuls
xchg
push
mov
fcmovne
lret
sbb
add
xor
jmp
sub
cmpsl
mov
push
mov
add
push
cmp
xchg
pop
push
mov
out
jmp
mov
jns
sbb
nop
sub
adc
mov
pop
popa
loope
in
and
add
int3
inc
sub
sbbb
scas
mov
lcall
movsb
out
arpl
fidivs
push
sub
pop
xor
hlt
imul
jge
fsubrs
xchg
mov
xchg
imul
test
mov
inc
outsl
cmpsl
adc
sti
push
add
lds
push
adc
push
in
inc
and
movsb
dec
clc
cmp
pop
adc
or
fcmovnb
xor
pop
ret
mov
cmp
xor
lods
ficomps
add
out
jae
rorb
rcl
push
mov
mov
inc
lods
mov
mov
mov
addr16
cmp
lcall
sub
and
lahf
push
mov
and
outsl
gs
adc
inc
mov
mov
add
adc
in
jp
dec
lret
decb
sbb
jge
or
stos
rorl
fsubrl
mov
cli
push
lret
mov
outsl
movsb
data16
inc
xchg
repnz
xchg
bound
scas
lret
aaa
mov
divb
lods
dec
fisubrs
enter
lods
fsts
pop
jne
jmp
mov
lret
dec
mov
xchg
or
movsb
insl
mov
push
dec
push
or
mov
out
push
xchg
bts
and
xor
xor
sub
pop
inc
fisttps
jo
daa
push
popa
fwait
test
aas
pop
sbb
fcompl
xchg
adc
insb
mov
fdivs
int3
or
test
loop
mov
mov
jle
or
shll
pop
outsb
jle
js
fwait
sahf
rol
lret
xor
lretw
sub
cwtl
jge
push
cs
out
mov
pop
loop
outsl
pop
stos
cmp
mulb
inc
aam
or
sub
and
scas
out
pop
iret
sbb
mov
ret
push
jnp
mulps
sbb
xchg
dec
xor
in
int3
mov
icebp
lahf
pop
test
cmc
cmp
push
xchg
xor
cli
lcall
dec
cld
cmp
and
push
fldt
hlt
pop
or
sbb
cmp
mov
stos
mov
inc
jb
cmp
scas
xchg
mov
push
jecxz
adc
testb
sub
fwait
mov
movsl
add
dec
mov
pop
lock
loopne
sub
jecxz
into
call
cmp
sbb
lods
jle
and
push
dec
ljmp
cmp
iret
mov
mov
mov
pop
and
cmpsb
nopl
ljmp
jmp
or
movsl
push
pop
sbb
mov
xchg
les
dec
push
fdivl
xchg
pop
movsb
and
push
gs
pop
xlat
xlat
adc
je
popa
mov
repz
add
out
lods
adc
or
cltd
outsl
mov
hlt
in
xchg
imul
stos
std
mov
fildl
mov
mov
mov
sbb
jge
mov
adc
clts
pushf
push
mov
je
ret
mov
pop
arpl
hlt
bound
mov
mov
lret
fs
mov
fimull
inc
aas
sbb
aaa
jb
popa
stos
jae
addr16
cmp
shrb
lea
xor
ss
aad
push
jecxz
loop
test
rorb
sar
je
adc
popa
into
paddusb
push
ds
test
enter
iret
pop
sub
xor
nop
daa
push
std
mov
jmp
inc
adc
nop
xor
add
xchg
es
and
sti
ljmp
pop
xor
outsb
push
mov
sub
cmpsb
xor
in
out
flds
in
sub
push
sub
ret
adc
jns
cld
bound
xorl
movsl
xor
inc
mov
out
jns
and
shrl
push
mov
push
shrl
pop
imul
aad
dec
shll
pop
sbb
cmp
pop
in
sbb
pop
mov
test
bound
fistps
out
adc
push
mov
fisttpll
cmp
cs
dec
mov
pop
xchg
and
cld
imul
xchg
mov
in
push
inc
jl
call
xor
or
adc
adc
das
pop
lret
clc
sahf
mov
aas
test
in
jle
fldcw
sbb
xchg
jns
mov
lret
jb
fmull
jns
pop
bound
or
add
loope
mov
push
lret
repnz
icebp
xor
cmp
xchg
jecxz
addr16
cmp
xlat
fwait
push
into
adc
jmp
xchg
daa
in
test
inc
je
adc
inc
outsl
and
insl
bnd
daa
cmp
stc
shlb
jl
popa
lcall
test
aam
sbb
mov
dec
popa
dec
dec
test
cwtl
decl
es
push
lahf
adc
push
nop
adc
mov
pop
lahf
cltd
cmp
push
idivb
pop
movsb
idiv
outsl
push
or
out
jno
cld
or
int
ds
fwait
jb
inc
mov
adc
sbb
lret
pop
adc
or
mov
push
lahf
sub
cmp
std
das
icebp
mov
cmp
or
jae
out
pop
cld
pop
scas
jns
xchg
add
jecxz
out
mov
les
addr16
sahf
test
sub
mov
pop
fld
pushf
and
xchg
cli
jnp
jne
movsl
mov
pop
mov
hlt
negb
js
imul
pusha
nop
inc
lret
mov
pop
add
fstl
fnsave
cmc
aad
jns
leave
pop
xor
aaa
in
and
pop
shl
call
cs
xor
xchg
in
xchg
fwait
in
in
mov
xlat
pusha
lret
cld
lcall
lahf
fsubrl
add
pop
jg
ja
sti
addr16
mov
jmp
mov
mov
pop
aas
je
ret
push
dec
and
imul
sbb
popf
jg
sub
sbb
out
cmp
es
cmpsb
push
rcrl
cmp
lds
ljmp
xchg
mov
jl
xor
push
xor
mov
ret
fmul
bnd
xorl
pop
mov
inc
inc
stos
push
scas
imul
mov
cltd
cmp
les
sub
mov
or
test
xlat
ret
mov
xor
push
inc
lea
mov
mov
jns
inc
pop
scas
adc
aas
nop
pushf
xor
pop
jb
pop
out
cmc
add
inc
add
or
or
cmc
adc
mov
stos
je
jge
int
in
jle
cmpsl
sbb
les
cmpsl
pop
mov
add
mov
mov
fwait
cmpsb
jae
mov
mov
dec
sub
adc
add
mov
mov
sbb
pop
fldcw
xchg
inc
arpl
adc
cmp
movsl
pop
and
pusha
mov
arpl
sbb
push
test
mov
jl
cli
gs
call
daa
sub
mov
idivb
mov
pop
int3
pop
outsl
test
adc
xchg
cli
sub
xchg
data16
mov
mov
cmpsl
enter
or
scas
call
and
ret
lahf
addr16
stos
es
jo
in
fwait
pop
add
lahf
test
jns
es
inc
inc
push
call
ret
stos
mov
xor
mov
psadbw
inc
enter
sbb
jnp
cmp
push
fimuls
sub
push
and
dec
sub
adc
hlt
or
iret
inc
call
jnp
pop
push
fstpl
lea
js
xchg
aam
xchg
push
push
faddl
adc
fcomps
or
jnp
mov
mov
outsl
jg
addr16
loop
jo
lds
ja
or
pop
loopne
jmp
dec
imul
pop
pushf
push
aam
shrl
and
mov
bnd
sbb
sbb
cmp
adc
sub
cmpsl
lods
mov
sub
sub
add
sahf
mov
push
shrl
cmp
push
clc
pop
fdecstp
orl
mov
mov
pushf
addr16
ja
daa
push
inc
dec
rcrl
movsl
nop
add
adc
mov
scas
popf
fnstsw
mulb
fldt
mov
push
cs
mov
xchg
and
int3
mov
out
nop
push
dec
push
bound
and
push
daa
lock
movsl
out
jp
pop
mov
jmp
das
adc
mov
outsb
fcoml
jecxz
sbb
mov
jns
scas
xor
sarb
jae
scas
adc
dec
std
and
scas
ja
out
jmp
test
cmc
aad
das
movsl
sbbl
jo
test
scas
ss
jecxz
mov
fwait
jnp
push
jne
xorl
js
aas
sub
ss
lret
test
jno
dec
mov
loopne
jo
add
jns
or
pusha
cli
inc
and
int
inc
dec
mov
cmc
jmp
xor
addr16
rcrl
mov
adc
test
fcomps
push
outsb
push
sbbl
xor
sti
mov
test
add
call
mov
jecxz
lret
xor
insl
xchg
xchg
dec
cmc
decb
bound
and
lahf
in
add
dec
jl
push
and
popf
test
fwait
push
inc
pop
roll
iret
jge
fcoms
adcl
dec
mov
testb
or
iret
imull
shl
mov
lcall
sahf
imul
in
mov
daa
fsubl
xchg
fcmovnu
dec
loope
lret
inc
mov
push
dec
push
jecxz
push
sbb
cli
out
fwait
push
fimull
pop
or
mov
aam
aaa
hlt
xor
pop
jns
icebp
rclb
add
and
mov
inc
lods
out
outsb
dec
into
lcall
mov
jo
inc
mov
push
cwtl
faddl
xor
das
sub
aam
cltd
lock
js
mov
cmp
xchg
jmp
inc
add
sub
stc
or
nop
xchg
stos
adc
leave
mov
mov
js
dec
xor
jo
ljmp
or
ret
lds
and
insl
cmpsl
xchg
loop
jo
aas
lods
inc
mov
lret
inc
fstps
jl
jle
rcl
filds
cltd
adc
stos
xchg
cmc
cmp
repz
cmp
mov
cmpsb
push
fsubl
mov
lea
pop
add
aad
or
enter
xor
cs
fmuls
pop
or
cli
pop
or
or
xor
sub
mov
aam
mov
lret
mov
mov
add
stc
pop
outsl
cld
push
push
cltd
adc
iret
icebp
aas
dec
cmpsl
dec
negl
clc
mov
dec
repnz
arpl
leave
or
or
and
hlt
cmc
push
int3
jmp
dec
xchg
divl
pop
jbe
mov
arpl
insb
add
inc
cmp
dec
into
push
lcall
fiaddl
dec
insl
imul
pop
xchg
mov
shlb
add
push
ja
cli
jle
jns
jne
test
fldl
aas
xor
aam
pop
add
adc
fstl
mov
data16
pop
push
mov
adc
cmp
outsl
int
or
dec
je
jbe
inc
repz
sti
add
shll
outsb
pop
mov
pop
loop
adc
outsl
std
ds
sbb
inc
cmc
sub
lcall
fsubp
jg
cmp
dec
or
int
stos
or
jns
ja
push
daa
sbb
clc
jb
aam
mov
mov
pop
fistps
mov
xor
and
push
xor
lret
fcmovnb
jnp
xorl
imul
pop
pop
mov
shrl
sbb
adc
lods
xor
imul
lds
xchg
jbe
mov
xchg
ja
xchg
popa
movsl
in
or
jmp
xor
xchg
fbld
shl
jmp
mov
ss
decl
imul
dec
mov
scas
call
xchg
out
and
or
push
lods
push
push
push
sub
sbb
dec
jae
in
mov
outsb
jge
or
jg
xor
mov
mov
xchg
in
andl
jnp
adc
mov
imul
lock
inc
into
pop
aam
cmp
cld
out
fstps
gs
add
fwait
ret
cld
push
mov
xor
movsb
mov
or
mov
not
cld
outsb
or
sub
inc
leave
and
test
push
sub
je
sbb
loopne
lds
inc
and
aad
mul
xchg
add
rcr
fcomps
mov
ja
mov
push
int
jb
add
repz
aam
icebp
push
cmovno
ss
xor
pop
out
inc
pop
jb
sbb
cli
das
mov
add
pop
vmovsldup
pop
mov
rorb
jecxz
cli
sub
push
cmp
and
and
cmpsl
call
mov
insl
stos
scas
mov
data16
dec
xchg
shrb
mov
bnd
popa
jl
insl
popf
lahf
addr16
call
movntps
fs
cmp
push
enter
call
xor
das
dec
mov
pop
and
push
jae
fstpt
push
enter
sbb
or
hlt
loope
ja
push
movsb
fcoms
adc
pop
jp
testb
adc
push
cmp
imul
icebp
pop
dec
dec
push
or
mov
fsubs
ret
xchg
nop
xchg
rcl
stos
loopne
dec
and
or
and
data16
sahf
lds
aad
push
push
cmp
pop
pop
fcmovnbe
xor
aad
mov
es
push
mov
xchg
add
mov
ret
and
in
xchg
xor
test
jmp
test
rclb
sub
inc
mov
aad
stos
xchg
sahf
sub
push
xor
xchg
stos
inc
icebp
xor
dec
xchg
pextrw
push
pop
mov
adc
or
ret
mov
cwtl
les
outsb
jecxz
xchg
fdivs
cli
jne
lahf
push
fmuls
cmc
fsubrs
test
lahf
das
ret
jb
ljmp
cmpsl
popf
popa
dec
pop
out
std
mov
add
test
andl
lods
add
in
jmp
adc
fs
xchg
and
or
push
inc
ljmp
fstp
add
ds
sub
sbb
mov
sbb
and
adc
rcl
pop
test
jg
subb
push
in
inc
cmpsl
adc
push
fadds
sub
subl
or
mov
mov
scas
test
imul
jno
push
or
movsl
pop
gs
in
adc
fdivrs
dec
inc
rolb
into
mov
jnp
inc
rorb
adcl
mov
movsb
pop
pop
mov
jb
add
cld
pushw
icebp
and
add
fisttps
fwait
movl
inc
mov
arpl
mov
sbb
lcall
mov
add
mov
inc
scas
or
adcl
cli
notb
lar
sti
and
cmpb
push
cmp
push
div
into
stos
adc
mov
xchg
je
sbb
push
psraw
mov
lods
pushf
inc
mov
add
add
pop
lret
cmp
scas
data16
in
sarb
adc
shlb
loop
mov
and
out
jmp
test
jae
and
lret
dec
fmul
pusha
leave
nop
je
mov
mov
add
xor
cmpl
mov
scas
iret
and
pushf
push
add
push
lret
jne
push
jbe
push
mov
lcall
cmp
into
xorb
out
pmulhuw
sbb
iret
dec
xchg
js
insl
nop
ljmp
dec
jmp
jmp
nop
dec
popf
adc
stc
push
leave
or
inc
xchg
arpl
ja
or
and
ret
inc
es
jg
sub
push
add
fnstsw
cmp
mov
cwtl
xchg
mov
daa
xchg
jae
dec
xor
jne
ljmp
and
mov
fxch
notl
and
adc
sbb
adc
cmp
push
scas
and
stos
sbbb
add
ds
rcll
adcl
adc
setle
jne
inc
mov
dec
mov
sbb
adc
dec
xor
ds
push
inc
lock
clc
negl
sarb
inc
pop
sbb
mov
out
cld
push
fst
jecxz
pop
sbb
stc
mov
mov
outsl
fwait
or
mov
popa
mov
xor
sub
cmp
push
lret
in
adc
jl
aad
fisttpll
fsubr
cmp
imul
pop
aas
sub
sbb
or
or
sub
std
pop
push
sbb
mov
xor
pop
jns
fcmove
cwtl
pop
jns
iret
fbld
cli
jle
movsb
xchg
and
ret
stos
mov
cmpsl
enter
dec
aas
adc
dec
mov
dec
add
mov
clc
divb
inc
adcb
pop
in
pop
sahf
add
adc
jge
xor
xor
cmp
and
jmp
pop
cmp
sub
add
and
insl
clc
inc
dec
lcall
xor
cli
xchg
and
dec
lret
push
push
cmc
cld
xor
mov
shr
xchg
ss
mov
rcr
std
sbb
lods
sub
repnz
inc
and
xchg
xchg
mov
pushf
adc
movsl
mov
jo
loope
mov
in
xchg
sbb
repnz
push
add
sub
push
ret
std
mov
pop
dec
pop
add
pop
adcb
xor
inc
mov
pusha
enter
and
ss
dec
shll
shll
outsl
stc
jmp
dec
mov
add
pop
jl
es
mov
jmp
mov
fldt
loop
adc
fs
int3
aam
and
inc
cmp
pusha
imul
push
inc
popa
fcompl
lea
test
popf
popf
popa
in
adc
and
or
vxorps
aam
jp
bound
add
lds
inc
sahf
adc
xor
aad
cld
inc
dec
sub
out
xchg
es
pop
sar
xchg
sub
orb
pop
mov
mov
daa
mov
iret
lock
lret
or
sbb
pop
jp
movsl
adc
push
dec
lret
push
mov
leave
sub
aam
add
sub
lcall
out
shr
in
clc
fcoms
or
imul
xlat
jge
mov
sub
les
out
push
or
outsl
sbb
dec
popf
xchg
out
sub
inc
ds
popa
inc
inc
out
stos
cmp
stos
push
std
sti
push
mov
fsubrs
lret
leave
jns
data16
jmp
into
xchg
loope
fs
push
inc
jnp
arpl
cmp
dec
in
jo
in
xchg
daa
push
add
lret
pop
cmp
jae
dec
cmpsl
into
ret
mov
loopne
arpl
mov
repz
and
je
lcall
add
inc
push
lds
mov
dec
cmp
jno
xorb
xchg
loope
pop
orb
mov
cmp
enter
xor
mov
aad
fidivl
movsl
adc
dec
push
pop
iret
in
dec
add
jbe
popf
xchg
sbb
imul
cmp
jmp
cs
sarb
inc
mov
mov
je
mov
sbb
lock
andb
add
movsb
jb
mov
das
pop
adc
dec
bound
dec
sbb
pop
cmp
adc
push
out
xchg
mov
lret
xchg
cmp
xchg
stos
cltd
add
cli
xor
cmpsl
out
or
cmpsl
stos
pop
mov
fmuls
mov
inc
jg
xchg
pop
mov
aad
das
roll
mov
mov
or
loopne
repnz
jecxz
das
xor
insl
dec
add
push
dec
addr16
clc
test
fucomp
cmpsb
sub
xchg
pop
stc
jl
sub
subb
das
pop
lahf
sbb
push
jns
je
je
insl
mov
xchg
sub
mov
into
mov
cmp
iret
push
call
jp
outsb
pop
xchg
jb
jg
pop
fwait
mov
jp
stc
pop
out
xor
push
sbb
push
int3
ficoms
sbb
jmp
and
repnz
adc
add
repz
and
jno
sub
fnstcw
mov
aas
ds
stos
mov
cmp
push
cld
sbb
int3
adc
testl
xorl
xchg
xchg
xchg
movl
mov
xlat
loopne
cmp
mov
les
arpl
repnz
in
stos
push
lcall
pop
rorl
sub
push
frndint
sub
and
inc
lcall
aas
mov
out
stc
adc
dec
inc
ret
into
std
dec
pop
lds
add
arpl
fisttps
jp
add
mov
cmp
rol
std
and
cmp
push
aaa
adc
movsb
insl
and
jecxz
frstor
iret
cmc
mov
mov
sahf
test
fnstcw
outsb
int
neg
dec
shlb
movaps
xchg
cmp
lahf
addb
notl
lock
imul
inc
cmp
lea
adc
popf
xor
inc
xchg
clc
out
mov
xor
xchg
sbb
xchg
in
sbb
out
pop
loop
fcmovu
push
push
outsb
cmp
xchg
negb
cltd
mov
outsl
xor
ret
lods
inc
out
fwait
push
sub
test
stos
and
xchg
add
pop
inc
push
sti
into
fnstsw
stos
hlt
daa
mov
testb
sub
loopne
push
jecxz
add
jge
popf
ja
inc
lods
inc
fs
enter
mov
mov
sbb
orl
sbb
lock
mov
pop
pop
and
mov
pop
out
xchg
cmc
pushl
nop
jbe
adc
dec
xor
mov
hlt
test
add
cli
rorb
jl
lock
out
hlt
cld
add
aam
test
inc
cld
pop
leave
or
jns
pop
in
push
bound
inc
movsl
aam
push
dec
sbb
loop
popf
lahf
xchg
inc
cmp
arpl
and
ret
stos
dec
adc
out
push
mov
push
movsb
fdivs
push
into
call
mov
mov
arpl
sub
ds
cmp
insb
dec
add
insb
mov
dec
ret
mov
dec
lock
rorl
cmp
lret
movsl
pushf
sub
jmp
inc
sub
pop
push
pusha
imul
je
cmp
and
inc
sbb
mov
xchg
sbb
or
mov
arpl
pop
sbb
icebp
andb
test
jge
mov
out
data16
sbb
lock
adc
adc
jns
cmp
cmpsl
and
jl
mov
xchg
xchg
jmp
icebp
shrl
inc
pop
adc
jl
mov
shll
pop
data16
out
mov
mov
pusha
mov
mov
adc
cmp
cmc
xchg
add
mov
int
fadd
or
xchg
dec
lcall
imul
test
lret
push
mov
ss
mov
add
mov
pushf
xchg
mov
fidivrl
or
stc
sbb
jnp
adc
iret
dec
call
lcall
in
add
in
jecxz
sti
push
mov
in
mov
cmp
mov
mov
out
jp
loopne
js
or
dec
xchg
push
mov
push
inc
sbb
in
mov
aam
fistpl
jb
sbb
pop
jp
jl
push
mov
paddusb
mov
loopne
mov
add
stos
lods
push
adc
or
inc
dec
mov
xchg
sbb
jl
neg
and
adc
sub
aaa
mov
mov
out
xlat
jmp
setb
rclb
lds
int
stc
mov
mov
inc
in
fdivl
lret
pop
insb
jg
sbb
sub
mov
les
sahf
stc
jmp
inc
dec
je
push
fidivrl
pop
pop
cmp
xchg
cwtl
and
push
push
add
ret
movl
jecxz
push
mov
out
push
cmp
clc
shl
ds
mov
lods
or
mov
int
add
outsl
mov
mov
adc
repz
cmp
sar
xchg
adc
hlt
dec
sbb
jnp
lret
adc
leave
cltd
outsl
out
mov
jecxz
call
jge
mov
adc
dec
outsb
loope
in
xor
xchg
and
rclb
sti
xchg
sti
xor
and
int
cmp
stc
pop
int
andb
mov
dec
jo
mov
mov
sbb
mov
ljmp
jae
leave
lods
or
stos
vpsubusw
jbe
xchg
jp
out
pop
fbld
arpl
xchg
xchg
xor
inc
xchg
mov
jno
inc
sbb
fimull
movsl
scas
aaa
pop
jg
cwtl
hlt
jno
mov
pop
lock
and
push
lcall
mov
add
aam
rolb
lret
and
lea
or
or
xor
pop
pop
scas
sbb
test
test
lods
xor
push
fisttps
jbe
or
fucomp
fstps
push
cmp
push
aad
jge
or
js
mov
clc
aam
fbld
es
inc
test
jno
popf
int
jp
xor
or
mov
cmpsb
cmpb
popa
dec
adc
outsl
in
scas
rcr
mov
push
sbb
cwtl
sbb
scas
ljmp
inc
stc
in
jae
cmp
popf
sbb
mov
sbb
aas
dec
dec
xchg
dec
dec
or
cmp
stos
aam
mov
mov
cmp
sbb
or
out
cmp
jmp
mov
or
mov
fnstcw
sahf
and
sbb
lret
ljmp
cli
mov
mov
stos
test
mov
mov
xchg
imul
jmp
mov
xchg
ret
add
mov
jae
jns
dec
pop
or
ss
loope
mov
ret
lods
xor
jle
mov
fildll
outsl
pop
lret
xchg
push
xor
lcall
cwtl
iret
test
dec
imul
sbb
push
jnp
cmp
mov
xor
and
in
dec
imul
mov
cmpsb
fistpl
call
xchg
ret
ja
addr16
sbb
xchg
imul
in
aad
cmpsb
mov
jo
inc
leave
mov
stc
jbe
add
dec
inc
cmp
cld
popf
cmp
cltd
inc
bound
mov
or
adc
add
lods
xlat
imul
mov
call
test
xchg
add
mul
mov
mov
call
ret
jecxz
cmc
mov
lret
xchg
jg
inc
inc
movsb
mov
roll
rcr
dec
xor
and
xor
cmpsl
in
push
fsub
or
sbb
and
push
popa
aad
and
adc
mov
test
in
mov
pop
mov
jp
mov
out
pop
pop
lahf
loope
sarl
cmp
out
fs
popf
aad
sub
movsl
push
mov
mov
mov
imul
cli
repz
xchg
push
xchg
hlt
test
pop
call
mov
push
add
mov
jge
xor
movsl
add
or
test
add
dec
std
scas
or
aad
icebp
and
jle
adc
xchg
push
sahf
ror
add
pop
dec
lret
push
lahf
jmp
sub
outsl
pop
rep
out
jne
pop
and
push
repnz
dec
jg
sbb
popa
out
cwtl
in
cmp
push
cld
imul
bound
lds
inc
mov
insl
adc
adc
mov
lahf
out
or
lock
adc
test
xor
xchg
inc
push
cs
cmp
aaa
add
sub
pushf
jns
xchg
insb
daa
cmp
popa
inc
test
fdivr
scas
adc
lcall
sub
or
js
inc
xchg
push
scas
xor
aad
jb
mov
cmp
outsl
imul
loope
shlb
loope
dec
insl
sub
call
mov
ljmp
mov
dec
testb
pushf
ds
jne
lcall
in
test
out
jno
call
dec
lret
lock
sbb
cmp
dec
loope
pop
xchg
out
push
cmp
xlat
sbb
and
cmp
loop
push
lahf
aaa
loopne
leave
shlb
imul
lahf
stc
xor
fists
xchg
into
mov
inc
lcall
addr16
nop
xchg
mov
fbstp
mov
test
or
mov
mov
jbe
bnd
jge
cmpsl
add
loope
ss
data16
inc
popf
jg
popa
outsl
inc
cmp
pop
in
xchg
icebp
push
mov
lahf
mov
leave
mov
movsb
adc
imul
movsb
mov
loope
data16
mov
les
jb
push
cltd
xchg
cmp
adc
in
fsubrp
cmp
ljmp
cld
mov
enter
popa
rorb
subl
pop
dec
push
fwait
pop
jmp
test
xor
jp
test
dec
xchg
mov
pop
xor
or
inc
push
adc
cwtl
sbb
sbbb
stos
in
xor
les
xlat
out
add
or
cmp
or
jl
sbb
adc
xor
jne
xchg
cmp
jnp
jecxz
imul
in
mov
into
jne
jl
add
or
mov
sar
outsb
mov
push
nop
loope
adc
stos
cmp
into
rolb
repz
lock
or
insl
mov
fcompl
lock
jne
xlat
movsl
inc
das
ror
mov
mov
stc
rcrb
xorl
add
cmp
ss
mov
inc
mov
notl
or
clc
dec
loop
sub
push
test
cld
inc
clc
imulb
popf
outsb
push
dec
inc
add
movsl
sbb
sbb
mov
mov
add
jg
adc
mov
sub
dec
ret
inc
popf
dec
daa
pop
pop
xor
xlat
ja
cmc
sub
das
xor
stc
shlb
mov
lahf
push
fcomp
and
subb
data16
shr
mov
je
test
inc
rorb
std
pop
push
cmpsb
in
int3
mov
push
ss
test
or
in
mov
ljmp
jb
stc
shl
ja
addr16
movsl
jae
int
sbb
ret
stos
enter
inc
pusha
dec
fsubl
lea
sti
jl
int
sbb
mov
or
cmp
fwait
add
pop
xlat
mov
adc
jecxz
inc
mov
ja
scas
adc
pop
add
cltd
imul
sbb
mov
imul
xchg
sbb
aad
push
cmp
add
mov
inc
mov
je
cmp
xor
fbld
and
adc
or
and
lahf
out
getsec
inc
mov
cmp
mov
fcomip
imul
push
shll
mov
loopne
lret
cmpsl
test
in
dec
in
rcr
rolb
clc
push
cld
push
imul
lds
ja
add
push
jmp
stc
std
mov
xor
in
into
int3
lods
or
jle
push
inc
pop
lods
push
cmp
push
xor
fadds
mov
stc
andb
jb
lods
rorb
cli
inc
dec
mov
faddl
xlat
inc
sbb
fsubr
lds
mov
push
lea
imul
cli
into
pop
dec
sbb
xchg
decb
jg,pt
xchg
pop
int3
jbe
dec
es
cli
jno
in
push
cmp
cs
stc
add
inc
push
dec
pop
push
mov
iret
add
lret
scas
sbb
cmp
inc
ja
sub
aad
arpl
dec
add
aas
pusha
or
sarb
dec
and
jp
sbb
inc
stc
add
mov
sbb
out
jb
dec
jbe
push
dec
in
pop
push
push
lcall
and
sbb
icebp
nop
xbegin
clc
sub
sub
add
xchg
xorl
ja
inc
sub
sub
push
cmp
rclb
sbb
daa
out
mov
jns
out
jnp
push
fs
mov
fsub
adc
pop
xor
mov
stos
call
jno
aam
in
lods
in
mov
xchg
aad
jnp
pop
sbb
outsb
test
loope
xor
roll
sahf
dec
mov
aam
xlat
cltd
inc
fldl2t
js
iret
js
xor
daa
dec
sbb
dec
inc
jge
push
rorb
inc
xchg
sahf
arpl
aam
insb
test
lea
pop
adc
jbe
movsb
push
push
mov
mov
pop
call
enter
sbb
sbb
repnz
not
imul
and
sbb
push
and
aad
mov
loope
insb
pop
lret
in
xor
and
cmp
fmuls
loope
adc
fistps
add
sub
gs
or
cmpsl
xchg
jae
sub
mov
jecxz
inc
lcall
iret
xor
add
stos
and
cmpsl
push
pop
inc
inc
pop
cmp
jg
mov
bound
push
mov
sbb
xchg
aaa
and
repz
aaa
ss
stos
les
rcrl
ret
into
into
pop
dec
sub
mov
push
icebp
push
dec
cmp
loop
mov
andb
outsl
push
pop
int
pop
aam
aam
inc
mov
mov
pop
sbb
sti
test
dec
cltd
stc
mov
jb
xchg
and
xchg
enter
inc
xor
and
dec
ss
not
inc
jae
pop
lret
add
or
mov
sbb
pusha
int
fldcw
ss
outsb
lea
cld
cs
jg
mov
inc
outsl
lods
mov
in
xor
pop
and
insb
stos
hlt
jmp
xchg
xchg
fdivrl
inc
pop
lcall
or
jb,pt
out
fs
dec
fwait
pop
js
dec
shrb
jmp
or
lcall
cli
push
add
xchg
sub
mov
adc
push
adc
mov
dec
dec
in
pop
enter
imul
xchg
mov
out
icebp
dec
cmc
into
sbb
or
sarw
dec
stc
pop
fcom
cmpsb
push
pop
jecxz
or
dec
xlat
inc
mov
lods
dec
jb
outsb
jge
insb
push
mov
mov
inc
int
jl
loopne
fsubl
out
lret
xchg
stos
fmull
adc
xchg
subb
clc
add
adc
lret
movsb
mov
aad
lret
push
loope
es
imul
inc
push
xchg
sbb
inc
add
stos
ja
ja
add
push
je
addl
imul
push
int3
jecxz
pop
daa
sti
and
loope
add
shlb
sarb
mov
ret
cmp
rol
or
mov
ret
push
sub
test
sbb
jge
les
or
fnstcw
jecxz
cmpb
sahf
pop
pop
loop
ret
fnstenv
ret
cmp
xchg
mov
cmc
jbe
shrw
popa
sbb
cmpsl
fcomip
icebp
add
test
data16
pop
and
mov
push
enter
add
es
inc
dec
in
cmpsb
mov
mov
repz
cmp
mov
icebp
sub
sarl
stos
lock
jnp
and
jp
ret
iret
sbb
mov
mov
inc
mov
stos
loop
outsl
leave
push
insl
sbb
inc
ja
outsl
or
in
in
seto
test
jp
mov
outsl
mov
mov
push
mov
shlb
jb
add
mov
sub
cmc
mov
inc
mov
push
pusha
xchg
sub
in
pop
in
xor
imul
mov
pop
in
pop
shll
ljmp
rcl
cmp
pop
cmp
sub
rolb
in
out
dec
fstpl
jns
call
pop
clc
in
sbb
inc
je
enter
dec
push
out
sub
cmp
fcomip
cmp
and
pop
or
jne
icebp
or
mov
nop
fimuls
imul
dec
fisubrl
loope
pop
nop
jb
imul
negb
inc
and
mov
mov
loop
div
pop
jg
and
es
ljmp
daa
arpl
cs
mov
js
aas
and
sahf
sbb
sub
mov
clc
jge
ret
xchg
dec
scas
lds
xchg
lcall
pop
sbb
mov
xchg
les
or
icebp
lret
lcall
xrelease
cli
fildll
push
cld
int
push
pop
out
xor
enter
mov
or
bound
orl
das
push
ljmp
movsb
lds
jnp
out
test
adc
push
xor
adc
mov
sbb
scas
xchg
imul
loop
mov
stos
or
stos
dec
jb
or
push
call
xchg
mov
push
std
out
je
push
jne
pushf
xchg
mov
scas
aas
pop
mov
adc
fnsave
or
adc
mov
loope
aaa
xchg
fucomp
arpl
pop
les
imul
cld
out
xlat
loopne
and
cld
add
fstps
adc
nop
push
mul
paddsw
punpcklwd
xlat
push
xor
gs
and
pop
call
pop
in
loop
pop
pop
cs
and
scas
fistpl
es
orb
sbb
mov
aaa
add
cs
repnz
xor
lret
pop
loopne
jnp
xlat
data16
stc
and
lods
addr16
push
add
ja
enter
fistl
and
pop
sub
loopne
outsl
mov
in
inc
int
scas
rcll
addr16
lret
pop
and
mov
mov
sti
cmp
mov
aas
fcoms
inc
jmp
cmp
adc
sbbb
popa
pop
lcall
inc
xchg
pop
jno
push
lcall
into
popf
mov
and
mov
cmc
adcb
fists
out
xchg
aas
jno
or
test
mov
dec
out
addr16
xchg
cltd
les
data16
lcall
mov
jbe
sbb
xchg
jp
scas
pushf
pop
adc
mov
or
ljmp
imul
rclb
and
pop
xchg
mov
xor
lods
repnz
hlt
filds
mov
inc
or
outsl
dec
fcomps
adc
aam
dec
dec
pop
sub
add
out
dec
xor
ss
test
mov
fwait
std
cmpsl
mov
repnz
mov
jmp
mov
in
pop
loope
add
adc
xor
je
cmpsb
jnp
mov
scas
sbb
daa
lock
push
into
push
dec
mov
jmp
les
iret
test
dec
ljmp
icebp
push
roll
out
insl
cmp
xchg
push
sub
inc
push
pop
test
aaa
insl
dec
jge
lret
xchg
push
pop
push
cmpsb
cmpsl
imul
loope
je
stos
jo
pop
xor
cwtl
cmpsl
sbb
adc
jl
adc
cmp
shll
xor
mov
jbe
or
dec
mov
movsb
sbb
dec
xlat
cltd
cmp
stos
sub
mov
nop
dec
xor
cmpsl
mov
mov
pop
pop
cmpsl
sub
adc
or
in
loopne
jmp
rorl
xorl
jbe
test
xor
fldenv
pop
sbb
bound
mov
sub
mov
iret
outsb
and
jne
inc
es
push
scas
iret
dec
into
mov
pop
pop
jns
mov
lods
loope
cmp
mov
pop
pop
in
iret
mov
inc
cld
dec
or
out
loop
add
fwait
xchg
shr
sub
enter
imul
pop
lea
shl
pop
jmp
loop
or
fcoms
outsl
or
sub
cmp
or
lock
or
and
push
sub
cmp
and
cmp
lds
shlb
popa
and
adc
mov
inc
in
cmpb
lods
stos
mov
loopne
jns
sub
mov
pop
shrb
lds
lcall
mov
jb
pop
mov
in
push
adc
sub
add
add
inc
lahf
loop
pushl
sbb
adc
dec
addl
push
leave
divb
cli
xlat
inc
mov
sub
aas
push
ljmp
repnz
cli
data16
call
push
jmp
loopne
sub
sbb
movsl
lock
adc
jne
sub
dec
add
mov
or
and
and
and
mov
cmpl
pop
xchg
dec
repnz
lods
and
inc
ja
pop
jg
dec
jecxz
adc
jle
jno
mov
inc
mov
icebp
ret
shrb
arpl
out
dec
mov
enter
ficoms
sub
push
dec
popf
mov
jbe
mov
mov
inc
adc
in
xchg
loopne
push
ret
add
fldenv
clc
sbb
push
pop
jo
out
ficomps
mov
dec
orb
jno
mov
and
pop
ja
jle
pop
popa
jae
lahf
sub
sub
pop
in
sbb
or
ja
push
outsl
xor
aas
inc
mov
aaa
aas
frstor
fildl
mov
pop
sbb
pop
insl
lock
sti
mov
out
xchg
fadds
aam
movsl
jns
sub
add
roll
mov
in
and
or
mov
out
iret
ror
mov
mov
add
test
or
movsb
inc
and
loope
mov
cmp
add
scas
sahf
xchg
inc
xorb
xor
int3
icebp
das
in
aam
push
leave
sub
sbb
movsl
in
loopne,pt
test
mov
sbb
and
pop
xor
jl
jle
xchg
scas
out
or
sub
stos
stos
adc
rol
push
jp
mov
cs
shl
push
hlt
test
scas
push
mov
xor
add
mov
das
ja
sbb
and
ds
in
aaa
std
or
ja
jge
fistps
pop
scas
cmpb
and
sub
in
sub
dec
xchg
mov
test
xchg
iret
or
out
jge
push
jb
mov
pop
addr16
es
push
cmp
movb
mov
cs
mov
fs
xchg
push
or
lcall
fs
jb
cmp
aad
fnstcw
push
lahf
lods
xor
cmpsl
leave
incl
ret
push
push
sbb
test
push
popa
in
cli
pop
pop
leave
xorb
repz
mov
fidivl
pop
scas
jmp
arpl
ds
pop
enter
jmp
adc
mov
loope
fwait
jle
cmp
push
adc
sbb
jb
inc
outsl
adc
jecxz
nop
jecxz
mov
test
leave
mov
ret
popf
sub
arpl
pop
lds
jne
inc
std
ret
jecxz
cmp
pop
mov
adc
xor
popf
xchg
or
leave
push
xchg
iret
and
int
call
mov
pop
dec
cltd
cmp
push
pxor
ja
out
daa
fisubrs
inc
daa
inc
inc
lret
lcall
add
lret
test
es
mov
int
inc
mov
adc
cmp
pop
repnz
cmpsl
loopne
jns
mov
jns
mov
xchg
enter
jecxz
pop
fwait
popa
stc
sub
push
cmp
lods
mov
lock
jne
and
daa
xor
scas
sub
cmpsb
cmp
ds
idivb
je
jecxz
xchg
mov
test
lret
or
jl
test
dec
push
add
roll
push
adc
jmp
jmp
adc
mov
sbbl
or
mov
mov
test
add
jne
sbb
sub
and
addr16
add
push
lahf
aam
xlat
stc
mov
pop
xor
xchg
sbb
aaa
out
shrl
test
pusha
bt
dec
popa
mov
and
mov
xchg
fstpl
sub
and
dec
mov
mov
ret
mov
mov
sub
aam
jno
fxch
mov
add
and
repnz
xchg
sbb
scas
xor
ficomps
push
adc
popa
push
fwait
cmp
ficoml
jmp
jne
mov
push
stos
xchg
cwtl
jp
or
subl
gs
and
fiadds
xor
mov
out
dec
lcall
aad
cmpsl
jmp
or
mov
pcmpeqd
xlat
adc
aam
imul
or
mov
sub
mov
mov
cli
push
loopne
inc
repz
fsubs
popf
data16
cmpsb
hlt
in
add
and
fdiv
inc
iret
mov
aas
mov
outsb
fdiv
xchg
enter
aad
sbb
inc
mov
cltd
sar
cmp
adc
lret
lds
push
inc
std
mov
add
ljmp
or
mov
scas
fwait
mov
dec
ret
bound
jg
lods
inc
xchg
jle
mov
xor
adc
mov
shlb
xchg
pop
xchg
xor
jp
orb
dec
out
or
push
jg
xchg
mov
out
add
or
lret
mov
fcoml
loop
ds
stc
xchg
in
dec
jge
imul
hlt
ds
movsb
pop
adc
icebp
xlat
adc
inc
lret
add
push
into
lods
sbb
cmpl
xchg
shl
icebp
sbb
adc
movb
cmp
mov
jb
push
pushf
jecxz
cmpsb
sub
scas
in
xchg
push
jne
mov
sbb
fisttps
pop
popf
xor
lods
lret
add
gs
push
aam
cmp
fsubr
xlat
mov
xor
adc
jb
outsb
inc
push
cmpsl
movsb
pushf
and
jo
icebp
cmc
mov
sbb
dec
add
xchg
jmp
insl
stc
or
jnp
sbb
mov
sbb
push
sarl
mov
mov
push
test
iret
lods
dec
gs
cwtl
xor
add
call
sbb
push
mov
mov
loop
pop
popf
subl
inc
fs
and
jp
adc
fwait
enter
add
test
cli
adc
movsl
movsl
mov
pop
lret
and
cli
push
or
outsl
dec
add
pextrw
sbb
decb
test
loope
lds
fdivs
jg
stos
jno
mov
fwait
ja
mov
icebp
imul
inc
cmp
add
lds
shll
lods
faddp
insl
lret
add
push
rcll
aas
and
mov
hlt
in
adc
sti
dec
push
fsub
fidivrl
icebp
rcll
push
xchg
sub
out
cmp
out
bound
bound
mov
sbb
and
out
fsubrl
xchg
test
std
imull
cmp
out
jp
sbb
add
cmpsb
std
cmp
xchg
mov
je
inc
out
jns
and
xchg
add
mov
add
movsb
pop
fsubl
test
loopne
push
rorb
filds
scas
mov
and
into
fsts
cmp
sbb
and
rorb
mov
inc
adc
adc
cmp
cmp
add
jb
or
adc
popf
out
outsl
mov
cmp
cmp
les
dec
inc
movsl
mov
adc
fisubrl
sub
or
pop
rcl
mov
cld
xor
repz
dec
into
sti
or
test
push
aaa
imul
cmp
nop
repz
dec
scas
sub
adc
and
scas
or
add
push
aad
mov
adc
sub
idiv
ljmp
pusha
sarl
pop
cmp
xlat
shlb
test
xor
jne
cmpsl
xchg
out
sbb
xchg
mov
mov
push
mov
fwait
push
clc
inc
xchg
ret
test
add
jbe
pop
xlat
dec
add
sub
pop
sub
mov
lgs
mov
arpl
jle
mov
in
mov
push
clc
mov
adc
fsubl
lea
in
clc
cmp
les
sti
outsb
inc
add
std
test
pusha
mov
sbb
cmc
xchg
push
les
mov
and
pop
loope
mov
mov
sub
sbb
andb
sbb
lods
pop
inc
pop
scas
sub
rorb
mov
mov
in
mov
pop
stos
aaa
sti
or
mov
adc
xor
mov
mov
add
mov
shl
mov
xchg
mov
pop
mov
sti
mov
lock
dec
dec
cmp
or
push
xchg
hlt
jl
pusha
outsb
push
int
mov
scas
add
dec
lcall
jne
insb
xchg
cmp
xchg
icebp
push
dec
imul
mov
mov
adc
push
cltd
adc
add
jp
mov
push
jle
inc
repz
mov
shll
pop
xchg
fcmovne
sub
adc
dec
stos
sbb
push
es
and
jae
leave
jns
sbb
mov
mov
or
dec
inc
insb
xchg
inc
lret
lsl
pop
or
scas
push
jne
popf
dec
dec
cld
sub
dec
pushaw
push
add
mov
ja
movzbl
mov
mov
sub
aad
and
sbb
test
in
mull
gs
jmp
lret
xchg
fcmovb
sbb
sbb
ffree
inc
data16
and
cmpb
decb
scas
out
sub
adc
xchg
ljmp
sbb
xchg
sub
rclb
xlat
xchg
mov
shlb
popa
orb
jmp
out
jecxz
icebp
or
xchg
dec
mov
filds
stos
cld
lahf
leave
cmp
ljmp
push
gs
aas
jle
dec
fwait
mov
mov
rcrl
lcall
lods
push
rcrl
jns
out
mov
xor
push
fdivrl
sbb
sbb
fsubl
in
mov
jae
cmp
call
mov
mov
call
mov
ds
outsb
add
sahf
jb
pushf
jo
lcall
sti
in
cmpb
pushf
jp
dec
aas
add
data16
std
xor
push
repz
sbbb
jg
test
insl
cmpsb
push
es
push
incl
and
sbb
jb
es
fbld
mov
jno
scas
push
pop
sbb
xchg
jno
push
jle
int3
mov
adcl
cmp
cmp
shlb
pop
mov
fstl
mov
dec
xor
pop
or
ljmp
scas
inc
mov
decb
sti
push
imul
sti
fisubrl
or
in
inc
out
stos
leave
sti
addr16
aas
subl
xchg
adc
andl
cmpsb
add
aad
xlat
or
xor
stos
add
cwtl
and
push
sahf
adc
or
addb
push
popf
mov
loop
pushf
sbb
inc
je
sbb
mov
das
xor
cmp
mov
and
addr16
push
mov
sbb
mov
mov
cmp
in
es
sbb
mov
inc
and
add
out
mov
or
arpl
popf
push
ljmp
testl
dec
push
inc
aad
push
repnz
insb
rclb
xor
fsubrs
sbb
adc
notl
add
adc
mov
hlt
pop
push
jmp
dec
mov
cld
sub
rcl
rcll
sbb
sbb
sbb
cmpsb
add
mov
pop
mov
stos
mov
push
pop
push
pop
sub
js
stos
xor
mov
out
push
mov
std
pushf
or
andl
and
or
adc
stos
lock
mov
out
imull
add
lahf
cmpsb
cmc
adc
pop
out
ss
mov
xor
cmp
pop
add
ficompl
or
xlat
arpl
imul
lods
stos
cmp
cwtl
xor
xchg
xorb
test
jns
in
test
add
xor
lea
imul
adc
xor
call
mov
mov
adc
and
xchg
or
sti
lcall
int
lds
loop
sbb
das
mov
push
lahf
sti
test
xchg
cltd
es
notl
lea
cmp
sbb
jp
lods
sub
lcall
icebp
jmp
mov
dec
dec
push
mov
ljmp
mov
pop
popa
aam
push
jae
out
xchg
dec
or
shrl
add
int
das
add
mov
fs
xor
inc
push
pusha
repnz
fwait
idivl
mul
mov
mov
mov
stos
gs
aaa
inc
in
or
sahf
ja
mov
gs
xlat
cltd
stos
test
mov
aam
lods
xchg
fucomip
jb
push
pop
fstpt
mov
insb
sub
test
xchg
or
jmp
adc
dec
xor
repnz
and
ljmp
jecxz
pop
mov
movsb
or
or
ret
sbb
mov
stos
sub
push
jnp
push
into
hlt
inc
frstor
mov
xchg
lcall
insb
outsl
inc
adc
mov
dec
sbb
push
cs
pop
fidivrl
mov
add
rcrb
xorl
cmp
in
jno
and
sub
inc
out
test
sbb
arpl
or
sti
inc
pop
mov
es
inc
daa
or
das
inc
mov
sbb
imul
cltd
push
adc
jno
call
stc
dec
dec
dec
lds
add
js
sub
jne
and
jecxz
fldcw
test
ret
adc
je,pt
sbb
loop
fsubp
ljmp
or
fisttps
js
and
inc
enter
cli
xchg
adc
dec
pop
decb
js
inc
mov
mov
jnp
bound
les
aad
pop
js
xchg
add
pusha
mov
mov
sahf
lock
jo
sbb
xchg
xchg
in
bound
aam
jl
movsb
or
addr16
xlat
push
je
cltd
pop
loope
addb
adc
xor
dec
pop
mov
movl
mov
out
or
and
adc
lods
sbb
push
xor
outsb
adc
mov
xor
pop
in
push
shrl
add
movsl
js
lcall
adc
movzbl
and
push
in
push
pop
inc
rclb
mov
mov
js
or
aad
nop
aad
inc
cmpsl
jle
sbb
xchg
sub
fs
ret
cwtl
fmull
sbb
out
cld
push
push
pop
pmuludq
add
ret
xchg
pop
mov
mov
jo
pop
jnp
arpl
sahf
aas
fiaddl
inc
push
mov
shr
gs
stc
add
sbb
lret
pop
jnp
mov
push
jb,pt
outsl
push
cmp
jb
mov
aaa
jp
sub
cmp
sub
dec
cmp
std
lcall
adc
in
mov
mov
repz
aaa
xchg
xchg
roll
or
mov
jb
add
push
dec
in
ljmp
push
insl
out
outsb
cmp
es
dec
fs
aad
pop
push
shl
and
mov
divl
pop
mov
or
jp
inc
jae
and
clc
je
in
pusha
cmp
dec
in
sbb
ret
inc
inc
sbb
add
jbe
pop
cmp
cld
test
mov
sahf
shrl
fiadds
psraw
jl
adc
in
stos
pop
or
test
orb
pop
push
icebp
aam
mov
pop
aas
loopne
xchg
or
shlb
aad
push
push
xchg
arpl
popf
lret
ss
jge
pop
mov
jns
lcall
mov
xchg
lgs
add
pop
mov
in
es
outsl
cli
inc
jl
clc
imul
iret
mov
mov
or
push
in
cltd
mov
imul
mov
popa
adc
inc
int
fdivrp
test
push
nop
cmc
les
leave
insb
mov
out
jbe
pop
xchg
nop
cmp
sub
mov
rcll
idivb
aad
and
lods
push
mov
jnp
mov
aas
popa
jbe
popa
mov
pop
xchg
and
jecxz
lcall
loopne
imul
pop
pop
in
ficompl
add
jbe
cmp
stc
inc
test
or
jmp
lods
and
cmp
out
xchg
pop
jecxz
fdivrl
jmp
jl
push
xchg
rep
jmp
cmp
cmp
cmc
outsb
lods
xchg
shlb
inc
shlb
pusha
push
and
jb
rcl
xchg
in
and
jnp
loopne
xchg
shlb
inc
dec
xor
shll
push
xchg
dec
in
xchg
jo
cmpsl
xchg
fisttps
push
mov
stos
jne
or
addr16
data16
daa
in
or
pusha
pop
mov
mov
jnp
test
mov
int
rorb
rcrb
xchg
insb
xchg
mov
lods
mov
jnp
inc
jl
dec
cmp
inc
lods
jl
add
movb
movsb
nop
add
cmp
cmp
hlt
icebp
aas
push
ret
or
mov
add
lahf
pop
sti
sbb
icebp
or
xorb
lock
es
test
lock
mov
popf
xchg
int3
cli
pop
adc
iret
sbb
push
dec
ds
xor
sbb
lods
fs
mov
aad
mov
fwait
es
jne
pop
xchg
clc
add
push
xor
add
pushf
inc
lahf
out
stos
mov
sahf
test
scas
dec
mov
xor
aam
pusha
shlb
pop
pusha
cmp
rcll
out
nop
push
cltd
cmp
sub
jbe
push
sbb
stos
mov
adcb
ja
cs
lahf
sub
ret
clc
jmp
mov
jg
icebp
mov
fsts
lahf
lods
cmpsl
xor
loope
xchg
insl
mov
inc
push
mov
inc
out
pop
sti
xor
xor
adcb
push
lret
inc
cli
push
movsl
adc
mov
adc
cmp
inc
sbb
pop
shl
mov
imull
pop
repz
popf
into
icebp
rcl
cmc
adc
iret
nop
mov
data16
cmc
in
mov
sbb
arpl
lret
hlt
adc
push
fdivrl
cmpsl
movsl
sub
mov
jmp
mov
sub
xchg
cmp
cmp
cmp
lcall
mov
outsb
push
hlt
fcoms
xor
mov
xchg
repnz
out
shrl
inc
xor
test
lahf
sub
push
and
xlat
cmp
inc
xchg
scas
adc
out
ds
sub
sbb
dec
in
cmpl
mov
pop
mov
sub
and
push
inc
mov
pop
pop
and
cmp
mov
cmp
loopne
ret
dec
jae
inc
jp
and
dec
in
pop
pop
pushf
inc
test
stc
mov
inc
std
or
stos
outsl
popf
fnsave
pop
sbb
sbb
inc
dec
aam
cld
mov
fs
mov
push
push
and
pop
dec
push
inc
mov
sbbb
mov
mov
add
loope
add
scas
imul
dec
das
rcrl
sbb
pushf
aas
rcll
pop
and
or
jnp
xchg
int
int
fists
jo
mov
dec
enter
out
pop
adc
mov
bound
mov
test
mov
dec
lretw
lods
fdivr
and
mov
xchg
out
stc
mov
sbb
adc
pop
inc
imul
test
movd
xor
fsubrl
dec
xchg
xchg
in
mov
and
jmp
jp
in
and
inc
push
pop
ret
mov
rcrl
push
pop
lcall
pop
mov
fwait
pop
das
mov
jg
orb
test
xor
mov
lock
jns
push
cmp
pop
rcrb
cmp
out
and
fstpt
int3
inc
and
jecxz
or
push
adc
in
or
cmp
jmp
hlt
jno
pop
xchg
xchg
hlt
and
push
add
mov
jp
cli
outsb
adc
jb
or
arpl
sbb
sbbl
xchg
xchg
inc
push
mov
pop
cmp
adc
pop
sbb
pop
push
mov
add
cmpsb
lea
icebp
aad
mov
jns
inc
stos
cmp
or
xor
lods
nop
inc
std
das
enter
aas
xchg
cld
scas
fldcw
insb
add
test
shll
mov
adc
sub
adc
jle
in
jle
cmp
lahf
leave
inc
rclb
lea
mov
adcb
subb
cmp
cmp
push
fsubl
push
ss
leave
or
aaa
xor
ret
icebp
inc
imul
cltd
push
sbb
pop
jecxz
dec
pop
pop
pop
cmpsb
imul
sub
hlt
jge
cmc
sar
je
inc
lcall
in
rclb
mov
outsl
pop
jl
adc
cltd
scas
cmp
xlat
adc
cmp
push
mov
cmp
cmp
add
leave
lcall
fsin
mov
sub
jge
mov
adc
dec
mov
dec
rcrl
mov
mov
cld
iret
sub
adc
push
and
add
mov
mov
scas
or
xchg
out
cli
mov
xchg
jb
cmp
sub
xor
pop
sub
aas
push
dec
xor
arpl
mov
lret
aaa
mov
xchg
lods
daa
xor
cltd
test
or
je
mov
gs
jge
sarl
inc
and
fsts
add
jmp
outsl
movsb
lock
cwtl
pop
xchg
pop
dec
lret
ss
fisubrs
sub
mov
pop
cltd
sbb
fists
xchg
and
xchg
push
js
rcll
mov
lods
fisubrl
push
fdivrs
push
add
jp
jae
mov
lods
xor
ret
inc
stos
aas
pop
xchg
dec
stos
dec
cmp
push
repnz
pushf
xor
es
std
and
roll
mov
sbb
scas
add
add
dec
and
mov
enter
adc
cmp
xchg
xor
cltd
mov
xchg
cvttps2pi
aad
xor
jg
jne
mov
aas
lods
cmp
fwait
mov
ss
aas
inc
lret
loopne
or
popa
je
pop
sbb
and
and
call
loop
push
jnp
mov
adc
dec
and
pop
and
imul
cmp
push
fnstenv
and
push
fdivrs
in
sbb
movsb
aaa
lock
test
scas
fadds
xchg
lock
cmp
lds
xor
push
push
jle
add
ror
cli
cwtl
adc
sti
rcrb
cmpsb
adc
adcb
or
or
add
rorl
lods
pop
pop
lock
cmp
mov
add
in
cli
int3
or
in
push
xchg
movb
icebp
icebp
fisttps
inc
cmp
sbb
fstpt
add
push
jb
cmpsb
pusha
or
jge
adc
nop
mov
cmp
mov
cmp
add
mov
out
int3
mov
mov
adc
leave
sub
subl
xor
out
adc
add
pop
shlb
dec
aaa
iret
xchg
test
dec
insl
add
scas
sar
dec
or
popa
in
out
pop
and
pop
xchg
ret
imul
scas
cmp
scas
cmpb
mov
mov
in
in
xor
test
nop
ja
les
mov
inc
inc
fwait
aaa
sub
pop
and
push
insl
sti
stos
lahf
and
ror
fisubrl
inc
lret
ja
pusha
dec
lea
icebp
dec
fmull
mov
cmpl
mov
dec
pop
xor
pop
out
pop
pop
or
inc
das
pop
push
out
pop
mov
push
scas
inc
test
cmpsl
int
mov
and
mov
addl
aaa
ret
cld
xor
cltd
pop
xchg
sub
cmpsl
lods
or
data16
lea
jmp
jl
or
lahf
push
pusha
addb
cmp
ficoml
pop
cld
cmp
jl
addb
std
decb
add
push
lds
push
and
hlt
es
xor
gs
data16
rolb
pop
lds
frstor
rcll
adc
jae
call
in
xchg
sbb
in
test
jo
add
jb
or
loopne
or
cmc
cmp
enter
cs
add
xchg
mov
inc
neg
cmpsb
cmp
mov
jb
fdivs
maxps
andl
ret
stos
jnp
aaa
cmp
std
pop
shl
cwtl
call
bound
mov
push
ret
push
in
in
push
icebp
add
fnsave
cmp
mov
inc
shlb
xor
addr16
and
mov
lret
dec
gs
add
lret
xchg
test
insl
pop
dec
cld
or
dec
orb
inc
out
fcompl
pop
outsl
adc
mov
std
mov
aad
xchg
iret
sbb
lods
dec
outsl
push
gs
sbb
loope
ror
mov
dec
and
gs
inc
outsl
inc
std
ret
and
nop
lret
repnz
mov
ret
xchg
add
insl
popa
and
pop
cld
push
add
mov
or
ljmp
inc
add
test
push
sbb
daa
call
repz
jne
test
cmpsb
mov
ljmp
lods
outsl
push
push
inc
aad
and
fistpll
shrl
and
rcrl
fnsetpm(287
out
mov
rorb
jecxz
inc
jl
pop
mov
sub
jge
fistps
mov
jge
mov
push
jg
pop
test
xlat
out
xchg
or
in
ss
sbb
xlat
jo
and
addr16
mov
mov
xchg
cmpsb
dec
cmp
adc
or
xchg
push
jno
adc
arpl
adc
inc
enter
std
dec
add
mov
addr16
inc
shrb
push
xchg
mov
add
adc
fdivrp
mov
xchg
pop
insb
notl
in
cmp
dec
cli
leave
inc
adc
mov
les
jle
outsl
push
xchg
add
dec
fiaddl
lods
jo
loopne
pop
gs
push
push
or
out
xchg
loope
adc
xchg
xlat
insl
pop
add
fwait
xchg
push
adc
sbb
add
xchg
in
fcomps
daa
cmp
aam
mov
stos
push
daa
mov
gs
ljmp
rclb
mov
push
push
dec
push
shlb
out
xor
sarb
mov
cmp
push
cmp
xor
into
cmc
pop
outsl
mov
lea
scas
mov
into
test
pushf
or
push
cld
loop
test
mov
jno
aas
sub
popf
daa
or
ss
fldl
sbb
or
lret
push
inc
push
inc
sbb
or
clc
repnz
cmp
xor
jno
jle
and
mov
popa
imul
std
or
in
aaa
add
mov
and
pop
fs
and
jbe
data16
push
mov
jno
add
in
mov
clc
stc
jl
jecxz
pop
mov
adc
push
out
pop
cs
jmp
jae
test
xchg
mov
test
add
cltd
or
ret
push
sbb
xchg
jo
sub
inc
and
pop
loopne
sbbl
sub
jge
fmuls
xchg
pop
pop
sbb
xor
test
pop
mov
repnz
sti
dec
mov
int
sbb
ds
pop
mov
into
pop
clc
lods
popa
scas
shll
test
mov
stos
lcall
and
imul
jne
aaa
mov
jno
aam
add
xor
pop
inc
sahf
bound
daa
mov
in
xchg
daa
jno,pt
mov
orl
jmp
mov
movl
cltd
mov
xchg
aam
mov
lods
sbbl
xchg
pop
mov
xchg
popf
in
test
push
lcall
outsb
sahf
repz
xor
or
jno
jo
outsl
or
repz
fucomip
mov
lahf
mov
push
test
jle
push
mov
pusha
pop
xchg
or
cs
mov
push
ss
in
dec
subb
jns
std
movsl
pop
loopne
cmp
inc
enter
push
or
xlat
icebp
imul
push
lahf
mov
pop
or
aaa
enter
bound
xor
rclb
adc
aad
popfw
arpl
fnstsw
dec
and
push
jnp
inc
fiaddl
mov
std
scas
insb
mov
nop
roll
hlt
xor
mov
stos
in
jno
aam
stos
cmp
fcoms
hlt
dec
sbb
dec
xchg
xchg
dec
push
push
insl
std
lahf
into
adc
shl
and
sub
xor
rcrb
inc
fisubl
ja
iret
idivb
test
std
sbb
dec
sub
icebp
inc
cmp
ret
ret
je
int3
jecxz
in
mov
xchg
adc
mov
xor
imul
jne
icebp
les
or
xor
rol
mov
inc
push
jmp
jbe
call
and
pop
rclb
xor
or
test
fs
divl
xlat
or
aad
dec
and
jb
outsl
mov
leave
jmp
xchg
cld
xor
cld
xchg
fstpt
inc
sbb
push
pushl
adc
jo
jp
mov
ss
enter
xlat
outsl
mov
jno
fisubrs
in
fildll
cld
enter
scas
lcall
adc
std
repz
cli
icebp
call
loope
or
push
loop
mov
dec
mov
fsubrl
sbb
xchg
sti
outsl
shlb
cwtl
pop
sbb
cmp
sub
and
insb
sbb
lods
sahf
sub
cmp
loope
ds
jmp
fdivs
mov
xorl
or
mov
cli
shrb
repz
pop
jno
xchg
push
data16
in
sub
jge
sub
loop
push
call
sar
iret
rcl
enter
arpl
or
jecxz
lret
or
jmp
push
jp
in
pop
ret
roll
or
ss
rcll
scas
push
xchg
ds
popf
sbb
jmp
fs
lahf
add
pop
dec
push
jb
jb
dec
shll
lock
jmp
mov
fcompl
push
sub
std
pop
movsl
shll
pop
adc
icebp
mov
daa
out
std
sub
pop
stc
sbb
pop
push
pop
mov
push
xchg
adc
jp
std
out
and
out
leave
mov
inc
cs
mov
cmp
lds
push
daa
ret
loope
push
std
mov
jmp
xor
mov
inc
jne
insl
jecxz
bound
and
mov
fsubl
push
inc
cmpsb
inc
ffreep
sahf
mov
or
push
pop
and
dec
addr16
mov
xchg
and
jmp
nop
std
jns
cmpsb
dec
ds
pop
mov
sub
rcll
sub
jmp
mov
inc
sub
imul
push
xchg
loopne
cmp
lea
out
or
data16
aad
jno
in
fdivrs
test
jg
inc
out
pop
ss
jmp
and
mov
fcmovne
pop
push
xor
pop
xor
add
xchg
sub
pop
push
hlt
inc
sub
loop
dec
xchg
push
lock
push
xlat
cli
insl
dec
adc
ja
inc
mov
lock
push
stos
repz
into
out
daa
jno
mov
or
js
ds
adc
xchg
push
or
ret
jp
add
push
data16
lret
or
sub
mov
jae
fcomps
repnz
push
fwait
push
movsl
xlat
fsubr
add
mov
stos
cmp
ffree
xchg
cmp
ret
and
add
sbb
dec
sub
test
xor
out
fsubrs
bound
xor
and
xor
cmpsb
and
loope
mov
test
in
fadds
into
inc
aaa
leave
inc
push
push
xchg
cli
stos
iret
mov
or
notl
or
outsl
mov
mov
xchg
inc
and
jbe
imul
and
clc
adc
or
mov
scas
pop
dec
jns
inc
mov
and
adc
in
dec
fidivl
lret
xchg
sub
fisttps
sbb
pop
fwait
mov
clc
add
jl
xor
mov
js
mov
addr16
aam
fildll
add
ljmp
divb
xor
mov
push
mov
es
push
cs
test
add
aaa
mov
fstpt
fidivrl
ds
in
add
sarl
xor
add
fstl
mov
fcmovu
and
pop
add
inc
push
sbb
jp
lods
dec
mov
mov
sahf
xor
add
sub
xchg
push
dec
pop
lock
mov
fnstsw
cmp
test
das
adc
daa
rcll
pusha
cli
add
jnp
sbb
sub
fstpl
sub
sbb
mov
mov
rcrl
push
xor
lret
push
shl
adc
push
pushf
cld
add
cmp
mov
add
push
cld
enter
cmp
in
ds
jns
xor
dec
sbb
ret
popa
test
cld
and
xchg
or
adc
jb
inc
loop
inc
js
dec
mov
push
shl
sub
add
std
inc
in
add
inc
das
mov
dec
aaa
cmc
pop
pop
or
mov
jnp
xchg
je
test
lcall
es
ja
loop
jg
mov
xchg
cmpsl
stos
mov
xchg
fisubrs
imulb
idiv
push
cmp
xchg
mov
jae
mov
stos
add
pop
cli
out
push
jp
cmpsb
std
dec
pop
std
pop
mov
leave
cmp
xchg
popa
xchg
push
and
sbb
js
xorb
mov
outsl
leave
and
das
mov
inc
in
repz
test
mov
adc
test
xchg
rolb
fsubp
mov
stc
sub
pop
stos
scas
pop
or
scas
addl
out
pusha
inc
push
popa
fistl
xchg
test
jnp
add
andl
xchg
pop
cli
pop
ret
or
shl
push
daa
faddl
cs
jmp
xchg
jl
sahf
jmp
mov
pop
xchg
cmpsl
jl
and
js
inc
jmp
mov
stos
cltd
xor
sti
lds
xor
pop
popa
jno
xchg
sub
cmp
cli
shrb
inc
cmpsl
xor
fldl
pop
iretw
push
cwtl
es
lods
adc
mov
insl
or
dec
into
lea
add
xor
ds
mov
movsl
cli
push
jbe
pop
push
clc
ljmp
mov
rolb
je
scas
aas
mov
xchg
add
out
fdivs
or
jnp
les
xchg
xchg
cld
test
or
in
xor
rorl
cmp
int3
jp
inc
push
xchg
xchg
cmc
popa
mov
xlat
pushf
js
negl
or
mov
test
icebp
or
mov
push
bound
adc
inc
pop
jne
inc
jl
call
call
or
out
cli
pop
push
jecxz
leave
ljmp
stc
int3
stc
xchg
mov
adc
push
cs
cmp
fdivl
or
std
or
imul
test
ss
ds
jbe
in
dec
push
dec
push
lods
out
sub
or
adc
cs
sub
fidivrs
add
sub
adc
pop
loop
jg
ds
push
aaa
jge
mov
cmp
inc
mov
int3
daa
ret
nop
sbb
adc
push
push
add
inc
popa
cli
adc
xchg
pop
and
pop
mov
int
adc
in
sub
jp
andb
scas
repnz
push
movsl
mov
ds
addr16
cmp
and
cmc
xor
xchg
lret
xchg
into
das
in
dec
adc
mov
pop
xchg
leave
pop
shlb
movsb
mov
dec
inc
jns
cmp
imul
test
test
ljmp
ds
add
repnz
jnp
stc
sub
xorl
addr16
sub
cltd
mov
out
js
clc
sbb
pop
bound
arpl
iret
xor
lea
popa
dec
lock
jbe
jle
adc
inc
pusha
push
das
insl
mov
je
mov
jmp
js
mov
pop
xchg
xor
xor
inc
aaa
cmp
lock
movsl
adc
enter
jae
iret
pop
add
inc
jg
cmc
rcrb
dec
push
clc
pop
popa
or
fiaddl
call
test
mov
pop
ss
adc
mov
push
xor
pop
int3
in
les
cld
adc
sub
or
add
lock
lahf
push
mov
push
add
ret
inc
mov
jge
mov
lcall
nop
xlat
ja
sub
jo
xlat
inc
mov
out
xchg
pop
insb
jae
outsl
inc
cmpsb
shlb
mov
jl
jo
popa
push
cwtl
ds
pushl
xchg
lds
enter
mov
jle
xor
and
testl
insl
fnstenv
inc
pop
mov
cmpsb
mov
and
std
enter
jae
sbb
nop
sbb
lods
fimuls
insb
mov
mov
call
pusha
call
lds
in
fadds
mov
ret
push
imul
mov
imul
lock
pop
pop
adc
and
xchg
adc
or
mov
call
cmp
jecxz
pop
sarb
pop
int3
push
cmp
addr16
mov
dec
mov
xchg
dec
out
mov
jb
push
lcall
fs
popf
fs
fiadds
lahf
cs
repnz
xchg
sub
outsl
jb
mov
andb
mov
mov
xor
and
sub
out
or
jg
repnz
jns
call
scas
cltd
sub
shlb
jne
insl
jg
push
shll
sbb
xor
push
adc
ret
xor
addr16
pusha
lock
and
inc
push
jno
mov
xor
stos
dec
outsl
fstps
push
loope
dec
mov
adc
data16
pop
pop
xchg
jp
arpl
jmp
fiadds
mov
gs
pop
inc
ja
out
push
scas
aam
xchg
orb
xchg
add
dec
pop
int
std
jo
adc
hlt
cmp
mov
into
or
adcl
inc
sti
inc
jle
in
xor
rorb
xor
cmpsb
cmp
int3
inc
shlb
cltd
dec
mov
adcl
pop
push
into
arpl
cmp
inc
in
lds
sub
test
imul
jbe
cmc
lret
or
sti
pop
test
enter
test
dec
pop
jo
jmp
mov
pusha
inc
push
or
enter
stos
pop
sub
pushf
loop
dec
mov
aam
cli
mul
into
loopne
inc
lret
inc
and
adc
dec
push
adc
push
test
or
stos
aam
xchg
js,pn
mov
xlat
mov
pop
imul
test
sub
test
cld
push
add
sbb
sbb
cld
jecxz
adc
in
hlt
ds
das
mov
ljmp
jo
mov
pop
cmp
sbb
arpl
or
jns
movsl
bound
mov
mov
jmp
in
push
cmp
je
push
mov
test
adc
fmuls
int3
aad
and
push
out
stos
sbb
mov
fwait
pop
repz
andb
xorb
mov
adc
xchg
ss
in
mov
lds
mov
lahf
lret
iret
sbb
insb
sub
data16
or
adc
mov
dec
push
mov
pop
repz
das
pop
mov
addb
cmpsl
pop
cmpsl
mov
push
add
sub
jno
adc
push
in
sub
push
ss
cli
stos
outsb
mov
mov
push
scas
mov
imul
pop
fists
mov
push
cmc
sub
mov
add
adc
rcrl
mov
adc
fsubrs
xor
push
push
or
js
adc
dec
lods
scas
mov
movsl
and
loope
fildll
pop
jnp
imull
shrb
lods
ficomps
stos
lcall
cmp
sti
pop
jbe
test
sub
jle
xchg
aam
aad
adc
sarb
sub
negl
sarl
push
xchg
test
sub
imul
roll
xchg
in
rolb
imul
pop
pop
movsb
xlat
adc
icebp
test
xchg
xor
adc
add
pop
and
and
xor
add
xor
pushf
sub
mov
aaa
ds
dec
xchg
cmp
push
sub
cmpsl
lcall
movsl
imul
mov
popf
sbbb
mov
mov
jg
cmp
jnp
xchg
pop
cmp
pop
out
ljmp
cmpsl
lock
jge
and
add
xor
add
mov
inc
xchg
adc
fs
cmc
js
negl
jmp
adc
add
jge
test
pop
data16
sbb
aam
xor
push
mov
pop
push
cmc
movsl
imul
shlb
sub
xor
call
aad
jp
jbe
push
into
dec
mov
pop
mov
cmp
adc
rorb
lret
xchg
mov
aam
dec
mov
sti
ljmp
mov
sub
lret
or
pop
leave
es
xchg
stos
sahf
sub
and
mov
pop
fimull
xor
cmc
mov
mov
and
shl
lods
scas
and
xchg
cmpb
push
pop
push
lods
fnsave
cmp
dec
add
shlb
jge
cmp
invd
in
data16
mov
push
pop
nop
xchg
into
inc
outsb
or
call
movsb
push
adc
push
or
lret
iret
add
mov
sub
and
mov
outsb
mov
fsub
mov
add
and
mov
movsl
jg
popf
fsubrl
ret
pop
sarb
mov
imul
arpl
xlat
add
mov
lret
xor
lock
jge
mov
arpl
mov
xchg
jae
jo
sbb
cld
fdivrp
sbb
pusha
out
pop
jo
aas
mov
pop
fisttps
loopne
pop
cmp
pop
test
mov
or
out
ret
mov
lock
fistl
mov
jnp
insb
pop
mov
mov
negl
xlat
sub
mov
aas
dec
xchg
repz
inc
sbb
xor
in
inc
pop
in
push
fwait
adc
pop
movsb
or
in
or
mov
ds
and
stos
jmp
pop
jae
pop
adc
sbbb
repnz
jnp
cmpb
aaa
in
mov
scas
mov
inc
js
filds
fs
xchg
in
or
sub
pop
pop
push
inc
add
and
mov
scas
add
sbb
js
scas
pop
rclb
push
jle
pop
daa
mov
mov
das
cmp
ret
loop
cwtl
gs
and
call
or
fwait
inc
mov
mov
adc
ror
adc
dec
outsb
pop
cmp
jae
insb
clc
outsl
in
pop
addb
subb
icebp
mov
dec
popa
xor
inc
mov
inc
pop
inc
push
push
in
sar
mov
jnp
add
mov
mov
cld
es
inc
ljmp
fisttpll
sbbb
sarb
stos
cli
outsl
mov
dec
sub
mov
out
and
dec
js
popf
mov
lods
sbb
adc
insb
xor
mov
push
jge
jb
fildl
sbb
xor
dec
dec
loop
stos
xorb
ja
mov
xor
jno
xor
aas
lret
sub
jg
arpl
xchg
fldcw
ret
or
pop
pop
sub
mov
cmp
stos
sub
in
enter
fcmove
adc
es
lcall
jp
andl
lds
fimull
gs
psllq
sbb
push
push
pushf
mov
fidivl
sarl
pop
clc
pop
addb
dec
rcll
loopne
popa
lcall
xor
test
sub
jae
mov
mov
xchg
push
jmp
mov
out
adc
mov
cli
adc
pop
mov
pop
adc
cmp
gs
mov
jnp
jb
inc
outsl
and
xchg
and
stos
out
inc
andl
imul
clc
in
inc
mov
lds
cld
jg
arpl
add
pop
fimull
rol
xor
adc
cmp
out
ret
loop
and
ret
stos
pop
or
icebp
ljmp
scas
inc
lret
adc
add
scas
ror
cmp
in
lods
into
add
xchg
or
imul
movb
pop
add
lds
pop
pop
lods
push
clc
and
fdivl
jp
xor
xchg
mov
jmp
push
fldcw
cmpl
pop
cmpsb
into
dec
mov
xchg
xchg
ss
add
gs
out
jb
nop
loop
imul
xor
lock
fnsave
xchg
test
outsl
mov
les
lds
push
jp
cld
or
fcoms
repz
popa
sub
ja
mov
jns
push
movsb
enter
int
dec
minps
stc
mov
aaa
nop
in
pop
and
insl
ret
push
jno
push
sbb
inc
sbb
or
out
ss
ljmp
sub
mov
lcall
dec
pop
mov
lds
jle
fmul
pop
cmp
jne
mov
outsl
and
cmp
dec
pop
ja
leave
xchg
enter
pop
scas
inc
inc
outsl
fisubs
xor
mov
sarl
clc
pop
mov
cltd
outsl
fwait
pop
sbb
dec
mov
fldcw
loopne
sarb
fbstp
push
push
adc
mov
push
dec
out
rcrb
dec
test
popl
testb
fmull
dec
adc
pop
add
pop
add
sub
jne
movsl
xor
pop
fnsave
clc
jne
lret
aad
mov
pop
add
movsl
mov
loopne
fs
mov
pop
call
push
and
mov
inc
in
test
xchg
std
lret
out
mov
and
xchg
clc
jp
add
sbb
and
stos
es
or
mov
out
xchg
sub
insl
sub
sub
push
rcll
es
aam
jbe
lock
out
cs
push
pusha
es
xchg
dec
or
xor
into
pop
mov
mov
sbb
jo
xchg
lods
xchg
sbb
and
out
mov
xchg
fiaddl
lea
jmp
push
loop
lods
mov
scas
mov
mov
out
pop
nop
les
sahf
inc
jg
sahf
push
test
cmp
jo
push
adc
lds
adcb
iret
std
sbb
and
mov
push
stos
int
in
add
mull
cmp
outsl
cli
or
cs
or
dec
jae
scas
std
and
push
lods
mov
stc
mov
sahf
jns
xor
mov
adc
dec
mov
cld
jae
inc
mov
add
add
mov
leave
xchg
call
mov
aas
and
std
add
shll
insb
fwait
pop
jno
fildl
inc
adcb
pop
sbb
addr16
inc
rorb
inc
inc
arpl
cs
aam
xchg
lock
loop
in
add
subl
add
cmp
and
push
pmaxub
gs
ficoms
insb
sbb
jmp
fistl
sbb
inc
xor
aam
adc
sarb
mov
dec
test
bound
mov
mov
sub
jo
fdivl
dec
pushf
mov
xor
add
les
and
mov
out
aas
add
mov
and
lcall
and
xchg
out
cwtl
insl
stc
cmp
negl
xchg
fs
push
or
insb
fcomp
push
add
orb
dec
cmp
mov
adc
inc
loopne
es
in
mov
nop
lret
pop
sub
add
into
das
adc
push
mov
sub
pop
shrl
int
jge
jbe
mov
mov
addr16
xchg
shl
out
dec
lret
shll
cmpsl
test
movsl
sbbb
cmp
sbb
and
fcmovbe
add
repnz
cmp
jbe
mov
stos
fdivr
adc
daa
add
outsb
mov
sub
in
test
lcall
jle
push
stos
mov
push
sub
dec
push
and
mov
jecxz
push
push
jg
ret
leave
push
xchg
inc
dec
mov
test
push
dec
ja
repz
mov
cmp
inc
mov
sub
je
pop
jne
add
jg
add
or
mov
aaa
cmc
dec
je
data16
jb
data16
outsl
enter
call
xchg
xor
mov
push
pop
aam
aad
int3
and
dec
insb
push
push
out
mov
mov
in
roll
rorl
outsl
out
fsubs
cmp
dec
cmp
mov
sahf
divl
das
mov
lret
jo
sbbb
sahf
adc
or
aas
inc
jmp
adc
stc
roll
and
adc
popf
loopne
xor
or
mov
sub
or
rcr
mov
aam
fisttps
pop
mov
rorl
pushf
add
cs
or
push
lahf
inc
mov
cmp
aad
in
push
jmp
lahf
adc
or
xor
scas
mov
repnz
stos
lock
ret
ret
pushf
insl
sub
jae
add
sub
data16
xchg
sbb
adc
fnstenv
jns
and
dec
mov
jbe
xchg
aaa
mov
xchg
fadd
or
and
xchg
lahf
mov
adcl
cmc
push
inc
jmp
shr
fistps
and
bound
imul
mov
repz
and
xor
cmp
vmovss
ljmp
and
xchg
and
arpl
or
jns
mov
in
popa
pop
ss
mov
xchg
inc
and
push
loope
cmpsb
popa
outsl
imul
and
sub
adc
testb
in
xor
mov
cs
mov
bnd
into
rclb
and
dec
lock
mov
fwait
mov
mov
inc
int
test
arpl
test
je
xchg
push
pop
roll
sub
and
mov
jae
out
cmp
xchg
iret
sete
xrelease
inc
or
out
xchg
mov
mov
sbb
rclb
pop
mov
jge
pop
cli
pop
arpl
mov
in
nop
pushf
sub
out
lahf
dec
shll
leave
mov
jbe
into
inc
jmp
in
pusha
inc
sbb
jb
jb
mov
sbb
lods
ja
sbbl
mov
cltd
sub
pop
dec
sub
sbb
sbb
ret
enter
lcall
fidivl
push
test
psubusb
aam
dec
icebp
and
ljmp
lods
dec
popf
das
cltd
adc
dec
jo
imulb
mov
jnp
jns
aas
dec
or
dec
push
pop
shrd
mov
adc
push
decl
xchg
stc
mov
mov
add
jmp
xor
inc
fbld
dec
fcom
push
movsb
mov
xchg
test
mov
lret
add
notl
jl
dec
fidivrs
cmp
data16
and
push
pop
movsl
into
imul
aam
lods
jecxz
pop
adcb
fimull
and
jmp
outsl
mov
imul
in
push
pop
shrb
cmp
mov
dec
push
popl
nop
and
in
rolb
xor
out
imul
mov
inc
push
aas
xor
fdiv
adc
ss
add
mov
jb
mov
mov
dec
or
movsl
icebp
insb
sbb
fistl
xchg
pop
xor
cmp
cmp
sbb
rorl
mov
or
sbb
setl
jge
and
dec
loop
mov
push
adc
orl
inc
fcompl
in
int3
shrb
cmp
push
or
fdivrl
jo
mov
pop
mov
pushf
push
jmp
and
sbb
orl
jmp
or
push
or
aam
jle
rcrb
jnp
cli
ret
popa
testl
cltd
xor
dec
fbld
adc
or
sbb
pushf
jnp
shl
cmc
outsl
and
or
shrd
lret
loope
push
push
and
sbb
and
cmp
and
pusha
push
pop
stos
sti
outsl
ficoml
ficoms
popa
call
popa
shl
cli
lds
and
jno
pop
pop
jp
pusha
xor
cmp
push
inc
adc
div
or
hlt
int
lods
stc
inc
jae
or
jbe
jb
test
inc
ss
xchg
jno
adc
repnz
movsb
or
dec
test
push
and
std
inc
sahf
int3
mov
mov
ret
daa
mov
push
les
les
je
fwait
and
inc
hlt
ljmp
fmull
lcall
popf
mov
mov
daa
jb
and
sbb
aad
sub
fcoms
test
icebp
stos
cmp
cmp
push
popf
mov
int3
popf
cmp
int3
mov
in
adc
mov
sbb
inc
lcall
jnp
mov
loopne
pop
xchg
mov
mov
push
fsubrl
rorl
sbb
push
cld
adc
imul
mov
into
mov
or
add
jae
lock
test
enter
add
cmp
hlt
es
pop
jp
mov
bound
out
ffreep
lds
pusha
lods
mov
xchg
out
test
mov
adc
loope
mov
int
jae
jae
mov
or
jbe
in
shrl
jno
lcall
fdivr
sarb
fmuls
pop
pop
repnz
jecxz
rolb
adc
sti
push
and
movsb
out
loop
fidivs
cs
ror
outsl
inc
loopne
aad
insl
xchg
xchg
push
arpl
push
cmp
or
dec
movsl
pop
or
push
loopne
test
jb
rcrb
mov
mov
aaa
xor
mov
dec
mov
dec
xchg
cmpsl
xchg
frstor
int3
clc
jle
out
mov
lcall
mov
lock
mov
mov
xor
inc
mov
insl
dec
pop
pusha
movzbl
push
or
xor
xlat
in
jl
enter
not
mov
push
sbb
push
jne
stc
test
call
cltd
loop
hlt
arpl
loop
cmpsl
adcl
aaa
out
mov
adc
sbb
pop
mov
cmp
adc
cmp
or
sbb
ja
jns
repnz
xlat
pop
mov
sti
mov
push
mov
jns
inc
xchg
bound
lds
add
lret
pop
fsub
call
popa
xor
pop
cmp
aas
shll
jmp
adc
push
insb
cmp
incb
clc
test
xor
fwait
inc
repnz
ds
cli
lret
les
push
out
das
movsb
insl
fildll
add
test
mov
or
cmp
or
hlt
adcb
imul
test
xor
add
pop
jg
add
mov
sub
mov
mov
sub
fs
xchg
lea
shll
iret
sbb
add
imul
lret
xchg
fsubrs
call
push
jb
sarb
jne
cmpsb
dec
or
jge
pop
dec
aas
int3
or
pop
ss
sbb
push
and
mov
and
imul
jns
sbb
daa
js
out
sbb
out
pusha
notl
loop
jle
sti
outsl
addb
pop
jg
xchg
mov
or
jecxz
lds
adc
add
push
lds
sbb
rorl
andl
imul
add
or
mov
out
cmpsb
push
stos
icebp
mov
dec
pop
fldenv
lret
outsb
cmp
jp
mov
shll
mov
rcrb
fistl
jl
pop
insl
push
cltd
cmp
xor
out
mov
hlt
and
insl
fsts
loopne
lcall
stos
jp
add
sub
dec
xor
sahf
leave
shlb
cmc
jle
jae
in
adc
jo
mov
test
add
inc
lcall
xor
rcll
jnp
js
sahf
iret
shlb
sub
xchg
sbb
adc
call
mov
sub
stc
pop
imul
xlat
push
pop
pop
mov
test
xor
add
cltd
fwait
push
inc
dec
add
js
jle
pushf
fists
test
push
test
adc
sbb
lock
and
cmp
adc
vmovntps
test
adc
mov
mov
sbb
into
dec
pop
sub
xchg
sti
xor
je
inc
out
fistl
insb
test
pop
sti
imul
mov
int3
outsl
xchg
sub
adc
fsubr
cmp
je
int3
es
or
jp
test
and
fs
outsb
dec
in
clc
call
cmp
icebp
inc
inc
xor
stos
mov
lea
outsl
sub
std
mull
jmp
loope
xorb
stos
xchg
jne
sar
cmp
out
lret
mov
call
lds
xchg
jl
cli
jno
pusha
mov
cmc
inc
les
sub
aas
scas
push
mov
mov
cmc
dec
jecxz
dec
push
popf
es
mov
xor
cwtl
adc
pop
adc
cmpsb
cmp
push
push
ret
xlat
cld
stos
cwtl
mov
out
cld
mov
test
ja
and
negl
test
orl
mov
xlat
jp
pop
les
dec
jl,pt
inc
xchg
xor
rorb
cmpsl
mov
add
in
fistps
and
adc
xchg
adc
clc
jg
or
push
inc
jmp
bnd
repz
stos
idivb
dec
adc
sbb
mov
mov
in
dec
int
sub
pop
data16
fiadds
jae
out
fdivrp
lock
stc
test
adc
ret
aam
out
fisubrl
std
scas
cmp
les
push
cwtl
jmp
xlat
jle
mov
rcl
fs
jl
xor
cltd
xchg
dec
and
or
xor
rclb
sti
mov
mov
mov
in
mov
xchg
jb
cmp
testl
and
addr16
jns
mov
cltd
or
jp
iret
mov
jmp
or
pop
cmp
fiadds
clc
ret
add
jne
cltd
mov
lcall
bound
out
aam
adc
shll
aad
add
aas
mov
add
cmc
jns
lcall
out
addb
mov
or
jb
and
xchg
push
movsl
mov
pop
sti
addr16
xor
mov
lahf
dec
inc
sbb
cmp
sbb
das
pop
pop
sub
mov
neg
cmc
xchg
mov
out
xor
sbb
rcrl
mov
add
aas
jmp
lret
dec
xor
or
ret
roll
mov
insb
cmp
push
aad
jl
stc
sub
jbe
lcall
add
mov
stos
mov
icebp
jb
xchg
sub
cmp
pop
pop
adcl
pop
adc
rcl
rcll
in
mov
fisubrl
mov
incb
int
loop
fisttpl
sbb
adc
je
sub
rcll
jecxz
dec
push
dec
jno
ror
mov
mov
pop
push
sub
cltd
fstps
icebp
xor
sbb
add
daa
loop
adc
lods
xor
fisttps
jge
popf
mov
dec
fs
movsl
aas
add
rcrb
sbb
adc
prefetch
or
cmp
sbb
or
lds
mov
mov
int3
scas
stos
cwtl
sahf
enter
outsl
icebp
testb
addr16
push
stos
rorl
cmp
mov
and
daa
pop
pop
mov
dec
aaa
rcrl
lahf
pop
xor
pop
add
pop
cmc
sub
dec
in
sti
mov
sub
mov
xor
inc
data16
jl
sbb
ss
xchg
fbstp
inc
and
scas
mov
insl
jno
movsb
add
int3
mov
sbb
adc
enter
add
lcall
fsubs
sbb
adc
pushf
xchg
pop
into
jmp
inc
mov
sbb
arpl
mov
addb
add
mov
into
int3
sbb
pop
mov
pop
cmc
or
add
cltd
xchg
and
xchg
out
jg
arpl
aad
cs
inc
inc
xchg
lds
loopne
insl
mov
aas
xchg
out
pop
sar
sbb
dec
leave
rcll
test
iret
fsubrl
cmpb
inc
adc
pop
jl
cmp
pop
outsb
cmc
sbb
xchg
into
cmp
xlat
pusha
cmpsb
cmp
pop
mov
mov
in
lods
pop
outsl
mov
pushf
jmp
sbb
dec
mov
jp
xchg
mov
adc
arpl
cmp
es
in
ljmp
loopne
cld
enter
arpl
mov
ds
xchg
dec
push
out
cmpsl
jecxz
out
test
xor
cmp
icebp
jle
outsl
faddp
xchg
aad
rcrl
outsb
pop
pop
sbb
ret
push
xchg
decb
pop
in
pusha
push
out
cmp
inc
jle
mov
dec
or
fisubrs
outsb
mov
insb
jbe,pt
mov
jns
out
fildll
je
or
ljmp
ja
test
jne
xor
xor
insl
movsl
cwtl
lret
mov
xchg
cmp
ja
aad
clc
mov
xor
hlt
inc
mov
mov
jb
and
xor
fwait
fwait
xor
ret
pop
adc
enter
push
dec
lods
mov
imulb
sub
mov
push
push
mov
lods
sbb
sahf
xchg
cmp
pop
mov
mov
mov
xor
inc
out
push
mull
mov
add
sahf
fwait
popa
cmp
das
jle
xlat
fisubrs
mov
cmc
repz
sbb
cmpsb
jbe
call
aaa
aaa
mov
push
ljmp
push
fldenv
and
or
inc
enter
fsub
jp
pusha
cmp
sarb
iret
fildll
repz
inc
push
mov
pushf
loope
iret
aaa
cli
rcrl
pusha
ss
mov
cmpsb
sub
jecxz
xor
outsl
jl
jbe
pop
or
jle
cmp
ficompl
aam
dec
lret
popf
push
lcall
popf
ja
xchg
dec
jge
mov
enter
into
outsb
fsts
mov
sub
or
xor
sbb
fisttpll
cwtl
int3
xchg
push
mov
ffreep
xchg
xchg
aas
std
cmpsb
pop
push
sbb
and
daa
jmp
test
in
adc
popa
fcomp
xorl
jns
xchg
pop
xchg
lret
add
and
adc
mov
adc
pop
pop
fldt
xor
cs
iret
jle
dec
fstps
cmp
mov
fidivs
loope
sub
sub
ret
xchg
icebp
pop
stc
stos
imul
mov
push
push
adc
jge
xor
jg
xchg
mov
push
leave
mov
or
adc
inc
aas
out
cwtl
jge
dec
orb
mov
outsb
cli
aad
jae
adc
mov
pushf
and
adc
je
pop
cs
mov
lods
sbb
jmp
cmc
jp
xchg
jo
loope
shlb
fldenv
dec
cltd
mov
sahf
push
insl
inc
adc
nop
in
or
lods
xorb
sbb
aaa
jnp
mov
xor
das
addb
sub
ljmp
push
jg
fucomi
aaa
scas
mov
daa
data16
loope
dec
xchg
and
nop
pop
aam
out
push
shrb
adc
gs
or
movsl
add
pop
shl
fbstp
mov
lds
jae
lcall
fwait
into
insl
inc
lcall
gs
out
add
jae
xor
pop
sub
mov
add
popf
sar
and
jecxz
enter
mov
xlat
movsb
sub
imul
xor
mov
xor
scas
dec
pop
dec
and
scas
inc
cmpsb
xchg
outsl
pop
mov
or
jge
out
ds
fisttpl
push
or
dec
pop
aaa
sub
outsb
mov
add
fisttpll
mov
xlat
jge
test
mov
lea
dec
fstpl
lock
mov
sub
adc
hlt
and
mov
dec
xlat
repz
push
mov
push
cs
cmp
adc
out
xor
call
cmp
push
movsl
ret
sub
testl
rcl
pop
test
mov
pop
adc
scas
pusha
loopne
insb
scas
imul
repnz
cmp
inc
jno
loop
imul
insl
aad
fucomip
jns
out
add
jecxz
fdivs
out
or
lods
in
dec
dec
std
ret
lcall
cmp
popf
clc
sub
jg
mov
mov
je,pn
mov
jae
roll
movsb
lea
out
lahf
pop
mov
jecxz
iret
test
push
mov
jnp
pop
mov
in
arpl
out
popa
push
cli
or
mov
fidivrs
or
jecxz
push
jns
jbe
arpl
fcmovnu
cmpsb
jns
frndint
testl
push
xchg
push
jl
mov
lcall
sub
xchg
stos
cmpsl
insl
scas
nop
fidivs
pop
add
mov
mov
shrl
in
sub
stc
mov
dec
xchg
mov
jae
push
push
enter
into
push
mov
lahf
inc
mov
loope
push
lds
loope
push
test
lret
sti
mov
mov
cmpsb
pop
insb
mov
and
ret
pop
decb
lods
lahf
shr
xor
nop
stc
jo
scas
enter
mov
adcb
arpl
stos
sbb
fbld
jl
iret
jmp
pop
int3
jmp
movsb
or
test
mov
icebp
dec
arpl
push
incb
dec
and
inc
aaa
popf
sbbl
mov
cmp
pusha
mov
shlb
or
das
push
inc
sbb
stos
jne
jb
push
popa
loope
arpl
cmp
ds
ret
sar
sbb
inc
sbb
dec
popf
pop
xchg
loopnew
das
push
sbb
jl
or
mov
jmp
cmp
rolb
sub
imul
inc
dec
les
popa
push
jbe
hlt
lcall
push
lahf
xchg
xchg
nop
sbb
cltd
and
aad
repz
and
call
aaa
out
ret
adcb
cmp
push
mov
xor
sbbl
cmp
pop
js
out
jno
pop
lea
das
aas
out
cld
lret
push
pushl
mov
push
in
cwtl
inc
adc
leave
inc
and
lods
and
jp
pop
sbb
dec
jg
sub
and
pushl
pusha
pop
hlt
popf
mov
xchg
ret
int3
es
cld
mov
insb
out
pop
push
cmp
push
pushf
xchg
mov
pop
pushf
push
xchg
popa
jecxz
es
mov
add
repz
cmp
movsb
mov
adc
gs
popa
cli
stos
subl
rcr
les
mov
xchg
dec
push
and
cwtl
loope
adc
inc
jae
mov
stos
inc
dec
notl
push
icebp
mov
lcall
inc
rcl
rorl
cld
add
insb
nop
jle
fildll
insb
xlat
dec
decl
sti
inc
lcall
jp
push
out
sub
out
mov
testl
mov
imul
addr16
push
into
lret
bnd
addr16
adc
pop
cmc
repz
inc
imul
xchg
fistpl
jns
xlat
ljmp
xor
aam
aas
loopne
das
lret
frstor
push
adc
fstenv
lahf
sarb
inc
push
cmc
sub
mov
xor
stos
jno
ds
lret
mov
adc
xchg
mov
xlat
popa
sub
ds
insl
mov
push
test
pop
popf
xor
push
xchg
xchg
push
mov
jmp
and
mov
ds
cs
rclb
ficoms
mov
es
fstps
iret
stos
cmp
push
jnp
pop
adc
xchg
pcmpeqb
fnstenv
pop
push
sbb
xor
pop
movsl
in
imull
dec
cld
ljmp
mov
cwtl
inc
xchg
xchg
adc
ret
cmpsl
and
inc
stos
mov
xor
sbb
inc
and
fisubs
or
inc
leave
aad
int
inc
test
fstl
les
pop
sub
xor
jle
mov
push
outsb
xchg
xor
push
xchg
pop
cmp
addb
stc
sbb
xor
ja
inc
xor
mov
and
es
inc
cmp
es
stos
stos
iret
push
xchg
push
ror
hlt
nop
mov
mov
mov
cwtl
cs
sahf
pushf
cmp
repnz
xor
and
or
js
xor
and
sub
xlat
pop
adc
std
negb
fldt
jo
jge
out
imul
mov
sbb
shll
mov
mov
sub
test
cwtl
insb
jp
test
mov
pop
shrl
sub
xchg
sub
jl
push
ret
js
je
sub
mov
lahf
mov
in
jb
cmpsl
push
imul
mov
xor
mov
and
movsb
nop
jns
lods
jbe
sub
jge
add
xor
or
add
int
mov
iret
sti
aam
dec
pop
dec
stos
fsubs
lret
addl
mov
mov
imul
or
imul
ror
xchg
xor
fcoms
dec
lds
sub
xor
and
mov
mov
lcall
push
pop
sbb
inc
sub
jb
cmp
mov
scas
jns
jo
ljmp
arpl
stos
shl
bound
sbb
xor
les
addr16
iret
popa
add
dec
mov
in
xchg
rcrb
or
mov
dec
loop
mov
and
cwtl
add
in
cltd
or
sbb
lret
mov
mov
mov
addr16
adc
xchg
popf
jge
inc
jmp
sbb
pop
xchg
xor
arpl
push
scas
push
mov
ljmp
test
movsb
gs
sbb
leave
enter
stos
fnsave
cld
repz
testl
iret
lock
jae
mov
or
jecxz
jl
out
dec
daa
fidivrs
add
cmp
push
or
cs
aam
dec
mov
mov
push
mov
cmp
inc
xor
inc
add
fucomp
add
sbb
push
xchg
jb
fdivl
aas
add
aas
test
cmp
lock
dec
iret
js
addr16
repnz
filds
inc
ja
addr16
and
cmp
cwtl
mov
xchg
lcall
xchg
jecxz
outsb
icebp
sub
pop
incl
inc
ljmp
mov
add
jg
inc
jg
xchg
aam
mov
mov
xchg
push
aas
pop
pop
lahf
jae
addr16
pop
push
movb
out
pushf
mov
shll
test
je
mov
lret
pop
jo
out
sub
js
into
insb
sbbb
sbb
sbb
add
xor
clc
dec
fucom
jecxz
mov
xor
mov
outsb
push
dec
fwait
sti
lock
mov
arpl
sub
adc
push
mov
pop
dec
test
lcall
subb
lahf
sbb
subl
or
je
sbb
xlat
mov
imulb
jge
lahf
mov
enter
mov
popa
xchg
lods
aam
xor
fdivrp
in
adc
int
lea
inc
xchg
test
leave
adc
fpatan
cs
insb
xchg
clc
loop
push
fsubrp
inc
and
xchg
or
std
enter
xor
ja
ret
jno
push
sahf
loop
xor
dec
push
sub
pop
ret
mov
cli
sub
shr
push
rclb
jbe
movsl
dec
push
into
stos
icebp
testb
sti
loop
hlt
jg
sbb
cmp
cmp
pop
addr16
mov
ljmp
lock
inc
popf
js
lcall
cs
mov
pop
imul
aad
pop
pushf
data16
testb
jbe
jbe
in
cmp
rcll
into
fmull
sbb
or
jb
mov
xchg
fisttps
pop
lret
adc
jbe
pop
xor
shrb
mov
pop
xchg
or
flds
xchg
sbb
mov
out
mov
arpl
shrl
inc
xchg
cmpsl
pop
cs
rolb
xor
in
pushf
xchg
lret
adc
stc
xchg
mov
sbb
add
pop
xor
daa
push
hlt
pop
xchg
push
mov
dec
jg
dec
xchg
cwtl
push
je
out
adc
mov
mov
adc
pop
or
fisttps
mov
cmp
cli
cmpsl
orl
mov
cmpsl
dec
daa
xor
stos
leave
aad
enter
push
cwtl
mov
sti
test
rcll
ret
xchg
adc
es
je
inc
test
test
arpl
stos
mov
out
xchg
push
fdivr
xchg
call
scas
daa
dec
inc
jne
inc
add
popf
stos
repnz
leave
sub
mov
popa
push
repz
cmp
mov
push
cli
sti
out
sbb
jnp
jge
adc
pusha
xor
jno
mov
loopne
or
sbb
jo
es
pushl
push
bnd
test
or
mov
adc
cwtl
insb
push
out
out
dec
adc
and
mov
jp
test
rorl
fidivrs
jb
sub
sti
popa
add
inc
xchg
mov
out
pop
pop
fwait
mov
jle
add
xchg
and
out
ds
pushf
adc
call
mov
fidivl
push
fstpl
push
or
movsl
out
mov
jns
das
jge
in
int
dec
adc
and
inc
cmp
aas
sbb
xor
mov
lret
jno
scas
mov
je
cmovo
and
pop
sbb
fs
or
and
push
xlat
cmp
add
lea
push
adcl
cltd
cmc
bound
sub
fwait
sbb
cwtl
mov
ficomps
iret
or
cwtl
mov
shll
jmp
or
jecxz
xchg
fidivl
mov
mov
loopne
sub
jl
insl
jne
push
nop
mov
push
sahf
mov
loope
or
xor
cmpsb
xchg
and
cwtl
lds
sbb
lcall
xchg
test
lahf
std
sbb
push
and
test
addr16
inc
cli
jmp
iret
sbb
mov
xchg
in
mov
pop
jmp
iret
testl
mov
inc
xchg
nop
jecxz
stos
sbb
pop
mov
adc
stos
std
movsb
daa
adc
push
push
dec
pop
loop
jecxz
repnz
xchg
sub
inc
cltd
mov
dec
cmpsb
stos
fimuls
je
add
icebp
adc
fmuls
fnstsw
test
lds
das
pop
iret
sbb
mov
sbb
pushf
sub
ret
dec
scas
sbb
outsb
mov
or
ss
clc
sub
add
inc
adc
pop
pushf
addr16
mov
pop
aaa
mov
xor
clc
jle
xchg
lcall
mov
push
imul
cmpsl
xor
adc
jecxz
hlt
sbb
subl
data16
dec
ficoms
bound
push
jecxz
cli
mov
push
push
xchg
inc
in
fs
in
js,pt
mov
mov
and
adc
sbb
add
out
inc
pushf
in
push
insb
clc
ljmp
enter
inc
push
cmp
add
adc
scas
into
and
movsb
add
pop
es
push
cmp
xor
jo
shll
pusha
shlb
in
outsb
shlb
jae
cmc
jb
inc
sub
data16
xor
adc
rcr
ret
adc
push
inc
fcompl
push
sub
imul
bound
jecxz
pusha
les
scas
adc
jecxz
sbb
mov
dec
out
inc
add
das
push
jge
repnz
test
fst
cmc
pop
in
xlat
loopne
cli
mov
mov
xor
sbb
and
push
and
mov
mov
and
mov
dec
negb
shll
jo
das
call
mov
mov
dec
movsb
fildll
sbb
jns
shll
ret
xchg
push
or
lret
adc
jb
push
pop
icebp
popa
and
aad
lret
pop
push
fildll
iret
das
cmp
adc
mov
rcrl
int3
test
repnz
cmp
add
call
mov
loopne
scas
ficomps
movsl
adc
and
pop
leave
cmp
sbb
fwait
into
scas
rep
jb
or
sti
cmc
cmp
push
sub
loope
adc
pop
cmp
je
adc
dec
dec
and
sbb
scas
push
imul
cmpsl
out
popf
scas
ljmp
xchg
sar
addb
mov
xor
stc
bound
repnz
nop
stos
mov
in
xchg
adc
pop
shr
xchg
outsb
sar
and
stos
lret
sti
stc
xlat
and
ficoml
dec
paddb
loopne
outsb
cmp
mov
js
xor
ret
pop
inc
add
pop
outsb
sbb
jmp
insl
jg
jns
in
cwtl
adc
pop
xadd
mov
cmpsb
mov
fildl
or
outsb
hlt
or
out
mov
ja
cld
ret
cmp
pop
pusha
cmpsl
add
mov
mov
arpl
loopne
jg
mov
adc
les
sbbl
pop
daa
pop
js
out
dec
xor
insb
xchg
test
xchg
imul
movsl
loope
inc
lcall
repz
pop
fnstsw
cld
lret
and
xchg
inc
fisttpl
xor
ljmp
lcall
idivb
inc
inc
loope
flds
xor
lods
repz
pop
jmp
bnd
andb
dec
mov
mov
xor
ja
ss
stc
xchg
ret
dec
shrb
mov
sbb
dec
adc
ljmp
cmp
and
gs
mov
shll
dec
push
lret
sub
cmpsb
pop
fcmovu
leave
push
rorb
xchg
les
mov
pop
and
xchg
xchg
or
cs
test
shll
inc
pop
mov
enter
adc
mov
out
sti
jp
sub
xchg
mov
rcll
loope
faddl
clc
mov
sbb
push
xchg
add
fwait
xchg
adc
ss
and
aas
or
es
add
dec
mov
stos
jl
or
xor
ja
fisttpll
stc
imul
or
add
push
ucomiss
in
hlt
push
adc
and
inc
adc
fildl
nop
int3
jmp
stos
or
jo
sbb
gs
out
inc
adc
pop
cli
pop
imul
mov
movsb
lcall
sub
add
lcall
sbb
inc
mov
cmp
cmp
inc
repz
sub
rolb
int
push
cmpsb
xchg
sbb
ficoms
addr16
mov
xchg
fisttps
sbb
pushf
sub
jnp
dec
sub
insl
mov
mov
adcb
jnp
inc
movsb
jl
xor
into
mov
bound
je
cld
dec
inc
movsb
inc
imul
cmp
shlb
mov
mov
mov
mov
push
ss
dec
lret
sub
jo
in
mov
inc
leave
xor
lods
mov
pusha
ficomps
repz
movsl
and
add
adc
pop
lds
fisubrs
ljmp
test
or
adc
stc
pusha
or
mov
es
xchg
outsw
pop
mov
mov
jae
aam
sbbb
pop
inc
mov
outsb
jmp
push
pusha
push
jnp
dec
cmp
pop
push
xchg
sub
scas
mov
out
mov
cmpl
sahf
insb
sbb
adc
jae
shll
out
xchg
push
popf
xchg
fildl
and
pushf
mov
arpl
sub
ljmp
stos
arpl
dec
jnp
fcompl
inc
xchg
push
xor
push
dec
mov
xor
mov
pushf
and
inc
fdivp
push
stos
push
jg
sub
js
mov
inc
or
jbe
adc
js
jmp
jae
pusha
jle
or
mov
test
test
push
enter
inc
inc
add
dec
push
adc
jno
insb
lcall
cwtl
jle
popf
popa
mov
mov
cmpsb
les
push
cmp
sbb
pop
mov
cmp
inc
sti
jne
sbb
outsl
mov
lds
add
dec
cld
pop
insb
sub
shlb
push
mov
push
in
push
aaa
add
mov
dec
and
mov
xchg
and
push
add
cwtl
test
mov
cwtl
ja
insl
lcall
rclb
out
push
mov
jns
movl
loope
addr16
popf
cmp
mov
cmp
xor
jns
cmp
sbb
bound
lret
pop
jecxz
stc
in
cmp
mov
mov
aaa
lret
jbe
pop
mov
hlt
push
jae
jbe
in
enter
mov
cmpsb
or
push
enter
jb
dec
out
mov
push
xchg
mov
es
and
mov
fildll
shlb
icebp
mov
les
lret
pop
lret
in
shlb
mov
push
pusha
in
icebp
push
aas
and
lret
ret
jae
add
xchg
outsb
and
and
pop
and
mov
dec
sub
lods
insb
mov
out
xor
xchg
xchg
mov
cmp
add
cmp
mov
dec
mov
push
xchg
in
or
xor
hlt
jecxz
clc
rcr
fildl
jnp
push
inc
imul
into
ja
or
addr16
in
scas
push
stc
xchg
mov
jae
pop
pop
xor
fidivl
mov
xor
aaa
mov
test
inc
jo
xchg
je
test
repnz
fstpt
popf
pop
pop
hlt
add
repz
je
and
pop
or
adc
pusha
xchg
jnp
lcall
dec
ficomps
sub
ja
adc
push
mov
mov
lods
cmpb
in
push
subl
hlt
popf
cs
xchg
xchg
mov
andb
jmp
outsl
xor
sbb
pusha
mov
xlat
stos
into
mov
fisubs
push
cmp
xor
mov
out
das
sbb
aam
sbb
mov
addr16
out
lods
push
xchg
movl
and
cmpsl
dec
je
int
jle
daa
sti
scas
or
sub
xlat
mov
mov
push
jmp
fidivl
dec
clc
xorl
sbb
xlat
sub
sti
call
int3
lret
bound
mov
add
aas
rcl
mov
or
pop
sti
pop
lea
fdiv
add
imul
shlb
les
jns
pushf
icebp
jnp
jl,pn
fucomp
sbb
mov
or
xchg
add
sub
movsb
or
inc
sbb
xlat
popf
or
data16
lret
xchg
fsubrs
push
add
sarb
lret
cmpsb
and
jns
lock
stos
hlt
clc
test
jno
sub
cmp
popf
mov
call
das
dec
ret
stos
hlt
xchg
sti
xchg
ja
addr16
mov
out
mov
push
cmp
int
and
out
lds
mov
pop
mov
ljmp
add
ljmp
daa
push
cmp
jbe
xor
das
push
add
adc
add
js
inc
adc
mov
cmp
pop
ret
sbb
jle
sbb
jp
shll
sub
movsl
je
loope
ds
sbb
test
inc
test
daa
add
cs
movsb
sbb
pop
gs
int
jnp
add
addr16
loop
lds
fwait
adcb
mov
rcll
push
cltd
sub
fcoml
out
faddl
xor
int3
xchg
int
pop
jg
ficoms
test
mov
jo
bound
add
mov
pop
cs
std
pop
std
xchg
push
sbb
outsl
stos
inc
mov
lds
loopne
out
rcr
outsl
insb
xchg
pop
push
xchg
push
lcall
movsb
inc
or
icebp
mov
add
shlb
pop
add
inc
shlb
pop
in
lock
and
stos
jmp
nop
in
xlat
push
mov
pop
rcll
or
cmp
cmp
add
and
stos
pop
xbegin
jmp
lods
adcl
ret
xor
cmpsl
xchg
pop
cmpsb
hlt
fisubs
sbb
popa
xor
call
fldl
or
shrb
in
lret
aam
pop
dec
cltd
jnp
and
call
add
lods
pop
jle
rclb
and
pop
ljmp
fbld
pop
push
adc
xchg
fs
in
cmp
iret
andl
in
fildl
dec
movsl
push
repnz
push
cmp
fcoms
xchg
popa
fildll
and
push
dec
data16
fldenv
xchg
add
inc
xchg
imul
jae
pop
movsb
pop
orl
mov
inc
stos
inc
add
mov
adc
mov
adc
addr16
mov
jno
dec
push
out
jge
or
out
std
mov
xor
sarb
xor
or
push
xchg
lcall
mov
out
adc
fwait
arpl
mov
loope
sub
mov
pusha
jg
push
mov
mov
adc
mov
in
outsb
movsb
inc
mov
dec
stc
aas
divb
in
mov
cmp
test
repz
loop
add
jl
dec
mov
add
mov
pop
xchg
jnp
call
mov
mov
insl
outsb
idivl
jecxz
xchg
test
fdivrl
fucom
mov
sbb
xor
das
test
push
shlb
and
lods
ficoml
cld
ficompl
jno
push
imul
pusha
out
pop
mov
stos
imul
pop
jmp
mov
int
iret
cmp
xor
imul
fnstenv
jle
and
pop
insl
mov
into
pop
clc
shl
call
cmp
mov
push
test
sub
push
pop
xchg
mov
mov
sbb
ja
mov
mov
pop
test
out
arpl
pop
fdivs
sbb
int3
adcb
pop
pop
mov
or
xchg
mov
mov
das
pusha
xchg
and
imul
and
cli
push
pushf
rcr
sub
mov
adc
fldenv
into
aad
testl
cmc
fnstenv
mov
xchg
xor
cmp
outsl
test
adc
mov
jbe
push
ja
xor
pop
adc
subl
mov
outsb
pop
je
pop
stos
stos
test
push
mov
int
pop
shrb
xchg
test
ja
push
shr
mov
mov
rol
repnz
cmp
push
inc
sub
pop
aam
or
inc
mov
cmp
jg
gs
dec
outsb
jle
jno
lds
adc
xor
rclb
dec
jb
cli
cld
xchg
or
sbb
inc
and
prefetchnta
sahf
push
jge
lret
xor
pop
jge
clc
aad
push
mov
inc
add
inc
push
or
leave
ja
push
inc
adc
lahf
lods
mov
mov
and
mov
and
cmpsl
sub
add
xchg
sbb
lahf
std
stc
adc
sbb
insb
out
mov
inc
push
pop
sahf
jb
xchg
xchg
mov
stos
or
call
lret
cld
out
xor
popf
call
ljmp
sbb
cli
ja
jo
add
int
ret
insb
dec
push
insb
adc
xor
jnp
aam
loope
mov
lcall
pushf
arpl
inc
xor
dec
or
dec
xchg
and
adc
jle
mull
xchg
cltd
pop
xchg
adc
push
pop
mov
and
add
jae
leave
sub
cmp
push
adc
or
add
in
pushf
add
and
pop
pop
xor
in
idiv
push
xor
add
or
jne
bound
pop
mov
cmp
inc
sti
and
ss
outsb
sbb
loope
shlb
sti
push
adc
xchg
sub
in
xor
sbb
shll
das
or
iret
mov
push
cli
jp
test
pop
adc
pop
ljmp
adc
ds
jne
inc
ss
sub
ljmp
js
mov
movsb
dec
pop
cmp
shlb
adc
stc
roll
sbb
mov
scas
adc
xchg
lea
fisttps
sbb
sbb
mov
arpl
pop
pop
loop
adc
mov
lret
mov
pop
mov
xor
sbb
addl
js
cmp
cld
cmp
rclb
jge
jg
repnz
rolb
mov
sbb
sub
mov
mov
mov
and
int
dec
test
addr16
pop
int
loop
rcrb
mov
pop
aas
push
adc
xchg
movsb
mov
xchg
icebp
push
out
fdivrs
sub
mov
hlt
push
cwtl
imul
insb
and
sub
enter
fdivl
jnp
jbe
sbbl
pop
xor
xor
adc
push
xor
cwtl
cmp
enter
sti
fidivrs
lahf
push
pusha
xchg
out
ficompl
inc
std
lahf
add
cltd
das
sbb
sub
mov
sub
enter
subl
mov
xchg
add
scas
adc
adc
shlb
pushf
xlat
mov
pusha
or
push
mov
pop
or
inc
insb
rol
test
pop
stos
ja
iret
push
cmpsl
data16
imul
xchg
inc
cmp
mov
bt
mov
out
lea
sahf
jle
xlat
mull
popa
cmp
test
adc
jge
sbb
cmp
dec
test
mov
in
loope
jmp
das
es
cmp
movsl
mov
and
hlt
out
mov
nop
add
pop
or
mov
cmp
jmp
or
push
or
aam
sahf
cmp
loope
cmpxchg
lahf
cmpsl
jb
push
call
mov
in
add
pop
push
sbb
scas
leave
xlat
sbb
xchg
in
mov
mov
sahf
sub
je
inc
ljmp
jl
push
pushw
dec
sbb
cld
sub
cmp
mov
cmc
sub
inc
fwait
mov
jnp
ds
add
mov
jo
xchg
cmp
out
push
push
inc
jbe
scas
pop
push
cmp
pop
mov
loop
sti
popf
mov
inc
out
jge
ror
loop
jae
sub
push
daa
push
jo
outsb
ret
pop
hlt
pop
mov
shl
sbb
push
xchg
in
mov
xchg
ss
adc
aam
pop
cld
pushf
aas
cmp
sub
aam
aad
fidivl
out
inc
pop
mov
pusha
mov
jae
rclb
sbb
mov
mov
push
addl
std
pop
sbb
xchg
pop
xchg
mov
cli
mov
dec
divb
sti
sti
fidivs
je
or
cmpsb
aaa
inc
shl
mov
ljmp
cmpb
je
pmullw
testb
mov
aam
inc
add
lods
imul
dec
bound
pop
inc
arpl
sub
jns
add
pop
jno
xchg
sub
mov
shlb
mov
std
imul
das
and
adc
loopne
cmp
jmp
mov
cs
jb
sub
mov
repz
mov
data16
cwtl
push
in
mov
xor
lods
nop
mov
andb
push
jne
or
ret
inc
xor
mov
inc
cmp
dec
mov
cltd
repnz
pop
pop
mov
dec
js
rorl
adc
cli
sub
and
je
mov
mov
lret
shrb
sbb
icebp
decb
imul
fiadds
movsb
xor
inc
xor
mov
mov
int3
jmp
fimull
inc
mov
insl
jns
sbb
movsw
lret
aas
shl
stos
stos
frstor
out
push
mov
xlat
mov
inc
loop
mov
pop
rolb
stc
aad
lret
nop
jne
mov
pop
ret
cmp
je
call
repz
ds
or
fstpl
mov
fs
mov
repz
les
cltd
test
fbstp
inc
push
mov
add
movsl
jo
adc
fsubl
out
cmp
xor
out
orl
dec
jno
lods
test
out
pop
cmp
dec
stc
arpl
shrl
js
jbe
or
cltd
jae
pusha
adc
cmp
add
rcl
aam
jo
test
sub
cmp
mov
imul
push
cmp
adc
mov
test
movsl
jne
inc
mov
xchg
dec
and
movsl
test
or
insb
jo
aas
addl
xor
out
inc
addr16
pusha
xchg
outsl
pop
mov
inc
cli
cmp
in
dec
test
sbb
sub
in
loope
loope
add
hlt
insl
test
sub
js
ljmp
and
dec
movsb
int
das
xchg
cmp
push
loop
push
xchg
or
add
in
subl
pop
ret
negl
or
ret
mov
jbe
or
fcmovnbe
int
int3
scas
jl
fimull
jp
outsb
jle
ficoms
je
lcall
cwtl
xchg
pop
mov
ljmp
or
push
shll
cli
mov
ljmp
xor
mov
add
push
sbb
dec
adc
push
and
inc
data16
mov
adc
sub
mov
inc
stos
leave
loopne
sbb
fs
aad
ret
lods
dec
mov
pop
adc
daa
sbb
push
xchg
ret
sub
mov
jg
lcall
xor
rol
ss
sub
mov
cmp
mov
aaa
lahf
jle
int3
or
add
or
xor
sbb
dec
push
mov
inc
dec
push
xorb
loop
adc
cmpsl
pop
ljmp
popa
mov
sbb
push
cmpsl
lods
iret
pop
mov
out
std
stc
sbb
jno
call
sbb
mov
pushf
mov
in
aad
fiaddl
repz
cwtl
mov
mov
xchg
push
icebp
xchg
out
pop
and
mov
inc
sarb
cli
pop
imul
pop
fsts
xor
pop
dec
fbstp
xchg
jecxz
sti
sbb
jo
es
pop
in
mov
dec
imul
clc
arpl
lods
dec
xchg
stos
xor
mov
sub
jmp
pushw
mov
pop
mov
mov
xor
pop
out
sahf
idivb
fs
clc
roll
mov
pop
push
xchg
and
xchg
imul
xchg
int3
inc
and
fstpl
add
xchg
jmp
mov
lods
out
pop
addr16
jmp
xor
addb
dec
scas
rcrb
xchg
push
mov
sbb
scas
and
cs
icebp
adc
xor
pushl
je
ljmp
mov
aas
sahf
repnz
pop
sub
stos
add
dec
pop
lods
or
dec
fsubrl
into
mov
pop
and
mov
aaa
fwait
stos
in
xchg
inc
int3
lock
push
daa
cmpsl
add
pusha
ljmp
dec
fwait
pop
add
push
xlat
xchg
sbb
mov
jnp
add
bound
inc
or
loopne
sahf
les
dec
or
cmp
loope
stc
add
cmp
and
and
sub
jmp
sbb
jae
dec
mov
pop
jae
push
add
or
aam
xchg
insb
imul
adc
flds
add
stc
xchg
pop
dec
test
push
pop
xchg
sarb
pop
mov
lods
pop
mov
push
test
decl
fcmovbe
mov
adc
adcb
outsl
or
aam
xchg
push
popf
mov
cmc
inc
add
push
dec
xor
loope
test
sub
jae
sub
test
push
scas
add
mulb
adc
stos
clc
inc
and
sbb
pop
add
fldenv
dec
aaa
cmpsb
sub
mov
adc
xor
mov
lret
jmp
in
pop
push
ret
dec
cmpsl
jge
or
mov
jnp
das
mov
notl
mov
mov
shll
jae
icebp
jle
test
mov
xchg
jl
mov
sbb
mov
push
inc
cmp
sahf
sub
add
or
insb
enter
add
adc
and
ds
int
sub
mov
adc
ret
jae
jbe
in
dec
sub
jg
jb
scas
loopne
movsl
aas
push
inc
pop
sbb
aam
mov
das
xchg
enter
push
addl
xor
fmuls
test
sbb
sub
cmp
scas
repz
inc
pop
or
jecxz
or
push
lret
ror
loope
or
lea
pop
scas
pop
jo
scas
cmp
in
xchg
out
push
testl
test
out
repnz
out
xchg
outsb
lods
jge
or
mov
pop
push
lock
mov
push
mov
lds
dec
pop
repz
lahf
stos
icebp
divl
repz
js
out
dec
rorl
insl
pusha
mov
inc
nop
lret
jae
rcrb
imul
mov
data16
pop
inc
arpl
rolb
cmp
out
clc
mov
rcr
cwtl
adc
xchg
mov
xor
icebp
fucomip
orl
push
in
cmc
rcrb
cld
mov
stos
jo
arpl
js
jo
fs
pop
jne
addr16
sbb
bound
std
cmp
mov
jmp
sahf
inc
adc
outsl
adc
incl
push
int
lahf
lds
mov
pusha
add
lret
or
xchg
jns
mov
mov
scas
mov
add
int
stc
adc
pushf
push
addr16
cli
out
or
in
fcompl
push
jbe
popa
and
or
mov
out
push
push
mov
sbb
arpl
push
inc
repz
pop
stos
dec
mov
frstor
cmp
sahf
stc
jmp
jmp
scas
xor
xchg
mov
or
test
jg
inc
into
add
jl
xchg
jnp
enter
push
fsin
aas
enter
or
fidivrs
adc
pushf
nop
movsb
sub
pushf
cmp
loop
insb
push
stc
and
jge
mov
jne
shlb
movsl
sbb
jo
adc
or
or
mov
jb
rcr
mov
mov
dec
xchg
sub
xchg
loope
cmp
stos
out
rcl
dec
aas
cmpb
fisubs
imul
push
daa
das
jg
movsb
lds
and
int
divl
lret
mov
sub
lret
add
into
cmpsl
lea
in
test
mov
outsb
inc
popa
xor
lea
sub
pop
pop
daa
fdivl
xchg
push
and
sub
lds
cmp
iret
shll
pushf
and
fcomip
fsubl
and
and
cltd
adc
and
jo
push
pop
jmp
ds
mov
xor
mov
adc
fwait
cmp
stc
push
repz
imul
pop
sbb
fidivl
subl
add
sbb
adc
adc
les
addr16
je
movsb
sbb
jbe
xchg
out
pop
sahf
adc
xchg
call
pop
ror
cmp
fstp
add
sbb
insl
adc
lds
mov
out
es
scas
ficompl
nop
in
mov
repz
rol
mov
jo
jne
out
jg
das
loope
fstpl
imul
out
jae
xchg
shl
mov
jb
xor
ret
out
aas
mov
sub
je
in
pop
jl
add
push
cli
push
popf
xchg
popa
jns
inc
add
sti
xor
ss
jg
mov
mov
mov
mov
jne
mov
or
sarb
addr16
cmp
xchg
push
xchg
leave
jbe
mov
pop
jb
subl
loop
and
cwtl
jmp
push
push
pop
cmpl
stc
dec
aad
cmpsl
pop
shl
mov
xlat
lds
es
sbb
dec
push
loopne
insb
and
scas
jbe
adc
stos
int3
repz
xor
pop
xsaves
dec
cmc
mov
jg
cmpb
push
jle
mov
cmp
push
stc
inc
sbbl
aad
push
sub
in
outsl
fsubl
test
add
lea
push
inc
data16
mov
jmp
sti
rorl
jge
push
insl
adc
jle
dec
clc
fisubs
cli
lods
push
mov
sahf
data16
cltd
mov
das
mov
cmp
loope
insb
xor
push
mov
push
or
mov
out
lods
xor
mov
sbb
sbb
cli
mov
enter
push
adc
mov
movsb
pop
mov
ror
cld
mov
mov
jp
bound
repnz
lahf
mov
push
mov
push
rcll
sahf
and
jp
cmp
shr
push
sbb
cli
mov
clc
popa
and
cltd
push
jne
jecxz
les
fwait
pop
mov
insl
sub
mov
adc
push
adc
sbb
dec
lret
adc
aad
pop
adc
ficomps
or
data16
pop
jbe
push
push
aaa
cmpsb
movsl
mov
fadds
sub
test
fimull
cmp
push
mov
scas
mov
cmp
jp
adcb
iret
sbb
mov
xor
push
mov
mov
and
mov
or
sbb
add
push
jmp
cmp
popf
loop
lods
fs
ja
pop
cwtl
nop
inc
js
mov
mov
enter
cmp
pop
out
movsb
cld
sub
add
aaa
fwait
jp
jg
mov
mov
xor
xchg
sbb
dec
pavgw
fistpll
pop
jns
mov
mov
aad
popf
mov
pop
xor
sub
in
xchg
or
movsb
mov
adc
inc
addr16
repnz
fs
pop
in
and
xchg
ja
dec
daa
js
fcoml
sub
arpl
fcmovbe
out
or
ds
mov
les
loop
sub
mov
or
add
fcomps
das
clc
orb
jno
nop
or
sahf
sub
mov
repnz
adc
mov
dec
mov
adc
lret
sbb
jno
test
push
loop,pn
insl
adc
aaa
cmpsl
inc
decb
xchg
ljmp
outsb
jmp
xchg
rorl
sbb
pop
inc
push
sub
ret
sub
pop
mov
mov
arpl
xchg
sub
fiaddl
pop
test
cmpsl
add
mov
sbb
cld
leave
jae
jg
xor
dec
pop
loop
outsb
sti
out
sbb
loopne
pop
mov
insl
push
aam
mov
xor
adc
jbe
lcall
push
daa
jp
pop
andl
int3
fisttpl
jge
shrb
push
mov
in
jo
mov
lock
xchg
aas
scas
mov
call
mov
add
pop
cli
sbb
cmp
mov
popf
dec
mov
and
xor
xchg
jns,pn
inc
cmp
and
push
mov
imul
inc
leave
jo
mov
into
icebp
and
mov
xchg
xchg
mov
test
out
adc
fistpll
pop
cmp
cli
sub
add
cmp
shrl
gs
cmp
jnp
mov
movsb
cmp
mov
cmp
pop
jecxz
or
nop
push
mov
push
sbb
or
mov
stos
scas
outsb
xor
mov
adc
fs
inc
addr16
pop
iret
add
mov
sbb
cmp
jl
add
pop
mov
es
roll
xor
enter
les
stos
fsubl
ss
jae
and
icebp
fdivl
push
mov
mov
ljmp
mov
cmp
mulps
pushf
fildl
testb
lcall
xor
icebp
in
pop
cmp
or
inc
push
inc
jb
ljmp
insb
jnp
xchg
pushl
push
les
mov
xchg
or
arpl
es
mov
push
cmp
sbbl
dec
mov
clc
sbb
adc
sub
cwtl
xor
sbb
mov
push
ret
jecxz
or
adc
mov
cmpb
stos
mov
mov
mov
sti
xor
ja
jae
dec
sub
xchg
sbb
ljmp
sub
mov
insl
in
fs
rdmsr
mov
cmpb
or
jne
xchg
xchg
push
jl
jnp
test
out
add
and
outsl
dec
std
dec
jbe
movsb
lahf
fisttpll
or
jbe
je
xchg
pop
lret
push
pop
xchg
inc
inc
cltd
and
inc
and
jne
les
fimull
jmp
aas
mov
cld
dec
ja
addr16
in
cmp
arpl
cmp
adc
popf
push
into
imul
adc
xchg
pop
rorb
insb
and
xor
cli
sbb
cmpsl
dec
fdivs
adc
lods
xchg
adc
mov
popf
and
jo
mov
xchg
sbb
xorl
pop
repz
insl
cmp
jo
fwait
sub
loope
sbb
jbe
subl
andl
ljmp
roll
xchg
jp
ret
dec
and
push
pop
jae
mov
mov
aas
add
out
in
sbb
in
out
fdivl
arpl
cld
xchg
test
xchg
ja
call
cmpsb
cwtl
or
xor
in
cmp
and
test
loop
stc
movsl
addr16
pushf
cmp
daa
je
inc
ficoms
dec
ret
sbb
imull
in
ja
xchg
fldt
push
xchg
cltd
lret
mov
mov
xlat
add
jge
push
pop
and
xor
or
hlt
sbb
call
inc
or
adc
add
fs
adc
stos
popa
pop
xorb
dec
data16
hlt
add
sub
cltd
lahf
sar
movsl
pop
sti
mov
mov
fidivrl
add
xchg
inc
push
rcl
dec
loopne
sub
jle
nop
lea
fldenv
adcl
add
enter
mov
mov
loopne
mov
arpl
xor
mov
add
fdivrs
adc
push
push
push
pop
inc
cmp
inc
sbb
out
aam
nop
int
adc
test
add
cmp
jp
insb
push
jmp
mov
orb
mov
cltd
aam
push
cmpsb
mov
xor
stos
inc
adc
cltd
push
pop
dec
pushl
push
mov
loopne
dec
fwait
mov
in
pop
push
insl
in
xor
mov
or
scas
popf
mov
lock
cld
cmp
jae
out
insb
int3
loop
push
sti
mov
pop
and
imulb
xchg
or
add
jg
lock
test
dec
add
mov
lods
das
in
pop
inc
mov
out
xor
rorl
pop
jns
mov
in
test
xchg
cltd
mov
dec
mov
pop
jl
or
and
int3
push
cmovl
or
into
jl
loop
push
push
sub
sbbb
test
pop
leave
imul
push
pop
add
sbbl
aas
adc
and
push
jl
sub
mov
jmp
adc
mov
popf
test
mov
enter
adc
dec
shlb
xchg
insb
push
pop
frstors
xchg
jg
or
push
cmc
and
rolb
fsubs
shrb
and
jg
add
inc
aas
cmp
repnz
push
jbe
mov
rorb
sbb
test
sub
adc
mov
push
fistps
lcall
or
es
int
sti
rol
fwait
hlt
dec
insl
pop
pop
idivb
outsl
and
jbe
xchg
lret
or
jns
aaa
inc
lahf
add
pop
cltd
cld
xor
cmp
mov
fists
ja
xchg
mov
adc
push
sbb
scas
out
roll
stc
or
pop
push
xor
sti
push
cmp
ss
mov
loope
in
xchg
test
in
clc
pop
incb
sbb
mov
pop
or
arpl
jno
mov
mov
pushf
push
test
fidivl
mov
mov
pushl
out
pusha
sbb
jb
xchg
xchg
stc
test
mov
xchg
addl
or
enter
add
loopne
dec
cs
pop
movsb
xchg
ret
xchg
aad
xchg
js
push
add
mov
movsl
negb
or
mov
cltd
pop
pop
mov
push
push
adc
mov
out
neg
fcmove
shl
xchg
mov
sbb
cli
adc
rcrl
hlt
mov
movsl
adc
call
ret
fsubl
xorb
rolb
pop
nop
xchg
fiadds
push
jecxz
add
call
xchg
loopne
mov
cld
lcall
adc
jns
jmp
cli
push
pop
push
mov
inc
ror
or
iret
dec
or
movsb
push
push
out
sbb
in
hlt
icebp
dec
dec
xchg
int
mov
inc
push
push
mov
cmpsl
dec
gs
adc
loop
and
lret
movsl
mov
mov
sub
add
jmp
xchg
pop
lret
xchg
mov
jl
mov
pop
hlt
xchg
jl
dec
inc
in
lods
dec
notl
xchg
cmp
adcl
loope
mov
dec
out
sub
std
jne
pop
or
sub
pop
dec
pop
call
or
xchg
mov
xor
add
xor
int3
imul
jl
push
fmuls
xor
arpl
mov
and
cmpsl
fstps
mov
mov
mov
aas
imul
outsb
lods
mov
cli
and
in
jl
inc
popf
mov
fs
std
lahf
pushf
fsub
push
outsl
lret
jae
lock
mov
cmp
outsb
js
out
inc
xor
stos
test
and
pop
mov
pop
or
loopne
mov
jl
js
ds
data16
mov
shlb
shlb
addl
jb
adc
cltd
sbb
push
sbb
mov
push
mov
dec
mov
cwtl
repnz
pusha
fwait
aam
sbb
add
aam
cltd
std
inc
lock
fidivl
arpl
clc
out
push
sbbl
outsl
fisubs
or
je
fs
les
and
cmp
ss
push
scas
mov
pushf
mov
jp
mov
loope
xchg
test
pusha
dec
sti
pop
lea
sub
std
scas
inc
mov
xor
fdivrs
sti
xchg
arpl
sub
loopne
int
out
mov
imul
and
fdivrp
lock
aam
push
add
testl
xor
and
xchg
lcall
sbb
cmp
mov
dec
jno
sbb
call
xchg
xadd
jo
scas
inc
cmp
ds
lock
mov
dec
sti
cmpsl
loop
ds
stos
pushf
lea
in
add
fwait
inc
push
and
jmp
pusha
or
insl
lcall
jnp
aam
psrad
addr16
es
call
std
mov
test
pop
mov
push
ss
mov
fiadds
adc
mov
fistps
add
imul
mov
mov
xchg
dec
imul
dec
scas
and
movsb
jmp
pushf
mov
pop
cmp
add
cmp
sbb
lahf
push
pop
jbe
call
xlat
lret
sbb
fstp
xlat
jp
xchg
cmpsl
dec
push
mov
pop
cmp
cmp
div
sarb
or
adc
leave
jae
test
mov
lahf
rol
in
mov
xchg
sub
loope
daa
addr16
push
aad
lods
mov
mov
dec
sbb
jmp
jl
jp
jno
lds
addr16
dec
sbb
aam
fsub
test
cld
clc
aas
andb
dec
sub
push
in
jbe
fists
and
pusha
or
cmp
push
xchg
dec
xor
push
fwait
shlb
adc
or
push
and
fs
mov
xlat
xchg
push
mov
and
lret
aas
pop
cmp
dec
daa
sub
lods
sub
repnz
mov
push
push
inc
xor
mov
js
imul
cmc
cwtl
nop
data16
push
pop
xchg
lcall
shl
mov
daa
insb
cmp
sub
ret
filds
pushf
jne
pop
and
dec
mov
stos
inc
jns
mov
stc
fcomp
sbb
push
mov
sub
xorb
pop
dec
addr16
xchg
test
ljmp
mov
bound
aad
jo
bound
and
lahf
xlat
dec
int
add
xchg
sbb
pop
jg
push
in
add
pop
mov
push
inc
sbb
push
and
repz
adc
es
scas
jp
xchg
xchg
pop
cmpsb
and
cmpsb
sub
xorl
out
bound
lret
test
in
in
ljmp
xchg
and
dec
mov
pushf
inc
dec
scas
fnstcw
mov
daa
sub
adc
mov
push
xchg
les
iret
addr16
dec
and
dec
jecxz
or
jo
test
xchg
pop
inc
sti
inc
xchg
pop
sbb
mov
movsl
stos
sarl
mov
jecxz
inc
mov
movsl
mov
int
cmp
push
dec
or
sahf
inc
push
lds
pop
push
mov
test
fmull
in
enter
imul
mov
js
or
outsl
dec
in
arpl
scas
dec
orl
cwtl
or
and
clc
pop
or
xor
shlb
adc
sbb
orb
es
jp
dec
cld
lahf
stos
out
dec
cmp
aaa
fs
fstl
sub
je
inc
mov
stos
mov
fcoms
dec
stos
dec
mov
lods
cltd
ret
imulb
mov
movb
ficoml
mov
sub
mov
ret
rcrb
jl
ret
popf
std
orl
pop
inc
xchg
rorl
or
mov
push
clc
lods
pop
fldt
rclb
lock
dec
scas
imul
or
or
adc
dec
sub
in
xchg
insb
mov
out
sahf
add
ss
mov
in
repz
in
mov
fs
lock
lods
cwtl
cwtl
pop
pop
fs
test
inc
mov
sbb
cmp
mov
xchg
mov
jle
outsl
adc
sbb
insb
cmp
jo
dec
sub
pop
aam
stc
xorb
inc
sahf
mov
aas
or
data16
xchg
sub
pop
and
mov
cmpl
sbbb
fimull
in
jg
ss
in
xchg
xchg
or
push
sbb
out
pop
jo
jns
loope
mov
or
push
popf
xchg
and
sub
in
pop
inc
orb
je
jecxz
lea
mov
sbb
inc
addr16
scas
lret
in
sub
and
push
int
mov
out
ds
aas
cmpsb
mov
mov
push
cmp
into
arpl
lahf
fwait
push
ret
jge
add
dec
jo
jae
jno
fstps
mov
sub
js
stos
mov
das
int3
aad
out
push
nop
xor
jp
inc
mov
xchg
out
loopne
sbb
arpl
fnstenv
dec
dec
push
inc
mov
ret
or
fcmovb
insb
xchg
sarl
into
pop
pop
aam
and
adc
in
sub
jle
bound
cmp
jo
sahf
jmp
pop
loope
rol
sahf
lahf
repnz
pop
flds
bound
xor
sar
ljmp
js
add
test
mov
mov
inc
scas
adc
lcall
push
fisttps
dec
xor
cmp
repnz
cmpsb
mov
mov
mov
mov
nop
ds
in
cld
test
inc
inc
aad
loope
add
or
test
push
mov
push
inc
loope
mov
and
cmp
rcrb
call
orl
mov
and
pop
int3
imul
out
shrb
sub
movsl
rcrb
stc
loopne
fiaddl
inc
xor
fsubrs
or
push
mov
jo
repz
dec
adc
lret
inc
movsl
xchg
imul
sbb
popa
mov
adcb
fs
adc
mov
test
push
mov
inc
out
lret
outsl
sbb
subb
test
pop
xchg
out
dec
test
jae
mov
in
fnstsw
and
rcll
xor
cltd
xor
cwtl
lret
push
cwtl
push
xchg
xlat
je
lods
push
ja
xor
sarb
rcrl
cmpb
pop
cli
iret
stos
xor
mov
out
jecxz
lock
push
or
daa
hlt
jbe
fistpll
ds
popa
push
insl
pop
vcvttsd2si
leave
pop
adc
jns
jne
out
and
jb
push
ss
mov
leave
shl
jecxz
dec
lret
mov
mov
xor
mov
mov
mov
loop
repnz
add
add
lret
add
adc
ss
pop
leave
pop
push
sub
push
scas
std
or
les
js
in
jg
add
in
enter
in
movsb
add
mov
jl
lds
sub
nop
test
into
xor
outsb
jnp
xchg
in
in
movsl
pop
mov
mov
lock
test
inc
inc
push
fstpl
cmp
adc
fisttpl
jecxz
add
shll
inc
mov
imul
out
cli
jnp
dec
jnp
or
mov
lret
sbb
gs
push
pop
ja
rcll
mov
mov
adc
jp
dec
and
dec
test
and
movsl
fwait
sbb
cmp
push
jo
idivl
aaa
std
pushf
lcall
lods
mov
add
or
js
mov
adc
lret
jl
and
pop
aad
xchg
or
scas
dec
scas
int3
imul
xor
cmp
mov
and
add
repnz
xor
inc
inc
adc
push
pushl
or
arpl
fmull
push
push
jns
sar
xor
dec
inc
mov
sub
and
xchg
and
mov
push
fistpl
xor
daa
scas
and
push
cmp
or
test
inc
sbb
xchg
mov
jecxz
jl
jp
insb
lahf
pop
push
xor
adc
lahf
loop
lea
icebp
mov
jg
inc
fsts
test
repnz
fidivs
ljmp
jb
cltd
sub
pop
pop
fsubrs
inc
sbb
dec
pop
inc
ja
insb
push
lret
test
pop
sti
jb
dec
rolb
dec
pop
push
movsb
subb
sbb
pushf
add
jo
sbb
mov
ljmp
jne
xchg
or
xor
leave
sub
lret
inc
lea
xchg
mov
int3
sub
adc
lret
addr16
clc
cmp
xor
in
fidivl
xchg
adc
outsb
pop
inc
stc
rcr
je
sub
xchg
out
jl
out
fsubrs
in
div
icebp
jns
fwait
mov
mov
sbb
cmp
fcmovnu
dec
mov
or
or
pop
add
aam
sbb
not
dec
push
cli
xchg
fisttpl
add
push
adc
mov
enter
push
iret
cmp
std
and
mov
inc
adc
jb
pop
adc
mov
roll
icebp
insb
mov
mov
or
fs
jge
dec
imul
pop
xchg
sbb
repz
push
stos
ljmp
jg
outsl
jecxz
xchg
add
sub
shrb
push
movl
movsl
fstl
test
addl
ret
leave
mov
inc
cmp
out
test
mov
lahf
pop
push
mov
jbe
pop
out
testb
lods
imul
fnstcw
imul
or
rcrb
adc
subb
lret
lcall
std
fcomps
aad
wrmsr
cmpsl
or
les
lock
ficoms
and
pop
movl
movsb
gs
sbb
out
mov
xchg
xor
jl
jbe
rol
and
fcmovu
jbe
shll
jne
hlt
pop
nop
jmp
cmp
sub
fsubs
adcb
aaa
or
push
in
lds
xor
cmp
sbb
add
xchg
pop
mov
mov
addr16
psubw
sub
pop
and
cmp
fldl
sbb
mov
mov
mov
lock
loope
sbb
out
enter
mov
test
mov
scas
and
and
inc
cwtl
loope
test
in
cmp
cmp
xor
data16
xlat
dec
xchg
mov
mov
pop
cmp
mov
pop
xorb
sahf
in
adc
mov
xor
movsl
sbb
dec
mov
pop
stc
cmp
and
sbb
adc
ja
push
nop
fdivrl
rcr
pop
sti
mov
pop
pop
out
inc
lods
sarb
int
lret
push
push
jmp
and
ja
hlt
mov
sbb
les
ljmp
lock
int3
pop
icebp
sbb
fnstenv
stos
loope
ret
xchg
sbb
inc
lret
add
push
lds
imul
mov
adc
jp
mov
cmp
add
bswap
cmp
xchg
inc
nop
divb
mov
jle
pop
out
arpl
aad
imulb
or
lock
pop
add
fwait
sub
jmp
sub
inc
cmp
lock
push
lret
and
in
in
mov
or
divl
movsb
push
mov
int3
xlat
jnp
sub
cmpsl
jecxz
inc
lds
aaa
inc
jl
add
pop
add
dec
xchg
pop
xchg
ds
outsb
xor
in
inc
lcall
or
mov
stc
lcall
inc
in
sub
repnz
pop
imulb
add
mov
idivb
push
loopne
shll
repnz
cmp
xchg
xchg
out
adc
mov
dec
fisubrs
push
adcl
dec
jb
sub
rolb
dec
nop
or
sbb
pop
loope
movsl
das
xchg
cwtl
loopne
add
div
lret
xor
cmc
mov
sbb
sbb
adc
mov
inc
out
ret
push
dec
loopne
lret
mov
add
hlt
sbb
iret
jne
fimuls
cmp
jns,pn
movsl
push
popf
ljmp
cld
sub
aas
movsl
push
das
add
hlt
repz
mov
mov
rorb
inc
push
pop
xchg
cmpsb
repnz
mov
lcall
jne
repz
pop
stc
pop
cmpsl
inc
push
cmp
mov
clc
sbb
jno
or
dec
fwait
cmc
test
je
mov
cs
adc
shrb
mov
xchg
movsb
shrl
xchg
adc
jecxz
jbe
jae
in
xchg
xchg
push
jl
test
jle
fdivrl
sub
jae
mov
test
pop
sub
stos
jl
pop
pop
jno
bswap
mull
mov
int
cmp
xchg
push
add
pop
mov
clc
imul
mov
clc
rep
inc
and
pop
loope
jp
push
stos
cmp
loop
xchg
push
xchg
jo
scas
mov
jmp
adc
and
adc
mov
push
test
dec
sub
adc
loopne
mov
cmp
dec
jns
or
negl
inc
popf
dec
jns
xor
inc
push
push
dec
mov
fisubrs
mov
push
filds
inc
sbb
and
dec
cmpsl
sbb
leave
push
pusha
cmp
cwtl
jge
cmp
mov
aaa
inc
jo
test
repz
repz
xchg
inc
or
mov
cmp
stos
push
mov
outsl
pop
hlt
add
leave
jae
jp
mov
sub
aad
jae
ret
outsb
add
cltd
push
add
sub
xor
sub
lret
inc
fwait
addb
inc
pop
roll
xchg
mov
push
lcall
mov
fsubp
mov
mov
adc
and
lret
sbb
mov
adc
cmp
dec
push
push
xchg
aas
push
push
pop
andb
lds
jmp
sahf
sub
sti
mov
jb
xlat
xlat
cmp
mov
imul
dec
hlt
push
pushf
fmuls
adc
rcrb
sbb
mov
ss
icebp
cmp
loopne
dec
sub
mov
cmovnp
aad
cmp
sbb
decb
pop
sub
js
dec
xchg
cmp
xchg
cmp
call
mov
in
pop
push
addr16
sub
mov
scas
mov
pushf
pop
insb
push
ss
inc
les
popl
mov
mov
add
inc
fsts
testb
fistpl
pop
adc
lcall
add
mov
mov
pop
cmpsl
or
xor
mov
clc
outsl
push
fucom
cmp
push
mov
nop
sbb
jmp
sub
cmpsb
int3
cmpb
or
sub
dec
xchg
mov
hlt
cli
insb
cmp
sbb
ljmp
out
adc
mov
movsb
adc
cld
jecxz,pn
cmpsb
movsb
sbb
and
mov
mov
push
in
inc
mov
insb
imul
push
push
js
or
out
fidivl
xor
ret
mov
and
push
gs
add
pop
insb
mov
mov
push
cmp
out
rcl
bound
xor
xor
cmp
xor
std
pushf
xor
outsl
mov
mov
push
mov
loopne
or
call
pop
jae
or
add
mov
push
test
jnp
out
adc
ljmp
xchg
fisttpll
dec
aas
jne
push
mov
pop
fildll
adc
fisttpll
