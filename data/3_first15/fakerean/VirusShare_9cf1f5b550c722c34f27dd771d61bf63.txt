sbb
add
mov
dec
test
les
dec
call
add
aas
leave
xor
out
mov
movsb
fidivrl
xor
clc
lods
adc
xchg
cs
cwtl
fildll
dec
ds
pop
jl
clc
cmpsl
adc
xchg
xchg
fwait
push
jno
jo
mov
in
ja
clc
cmpsl
sahf
pop
xor
xor
push
popa
sti
cmc
mov
cmp
mov
and
mov
fidivs
test
inc
xchg
outsb
movsb
adc
repz
mov
pop
adc
fs
out
xchg
mov
in
and
jg
les
mov
pop
out
fwait
pop
xor
lret
add
rcr
jl
gs
add
je
je
test
rcrl
imul
pop
out
push
fwait
pop
enter
outsb
outsb
dec
inc
ss
jecxz
mov
arpl
push
mov
xor
mov
aas
out
dec
or
std
sar
mov
dec
pop
jmp
int3
test
add
inc
add
xchg
ret
cmpsb
mul
and
in
pop
jo
xchg
add
adc
in
stc
and
cmp
fnsave
adc
xchg
mov
int3
int
test
xchg
inc
adc
movl
stc
push
pop
or
pusha
int3
mov
sbb
stos
sub
call
mov
mov
ljmp
mov
fs
or
xchg
out
iret
mov
cs
enter
xchg
in
pop
or
pusha
add
xchg
bound
ret
push
and
mov
mov
adc
cli
xor
stos
or
push
ja
das
mov
mov
pop
xor
ret
mov
rclb
mov
and
xchg
add
scas
fs
sub
je
int3
pop
repz
int3
pop
xchg
stos
mov
lahf
pop
aaa
cli
cmp
push
push
push
js
fsubrl
mov
jl
cltd
loope
mov
cs
call
push
or
iret
jge
xchg
push
test
addr16
mov
mov
inc
insb
push
inc
das
xor
int
dec
push
and
ljmp
in
sub
mov
stc
pop
jnp
sbb
or
sbb
mov
aam
ja
adc
xchg
bound
jmp
lret
pop
mov
roll
into
std
push
jae
inc
pop
xchg
scas
ljmp
adc
out
lock
jmp
or
movsl
mov
loop
popa
popa
dec
movsb
xchg
add
sbb
cmp
mov
xlat
int
push
cltd
pop
push
jo
out
int
in
inc
popa
jl
vpaddq
popf
cmp
mov
and
cwtl
mov
adcl
stos
lret
insl
inc
out
flds
mov
mov
mov
loop
mov
outsb
loope
xor
and
int
xchg
movsl
out
push
xchg
xor
adc
enter
add
or
xlat
jle
add
dec
xor
ds
fmull
xor
mov
cmp
mov
add
stc
dec
loopne
dec
adc
jmp
or
inc
lcall
ljmp
lods
out
adc
add
xchg
lods
push
mov
loope
jl
push
out
add
vpor
mov
test
or
pop
push
and
mov
fiaddl
mov
jbe
dec
movsl
or
jge
sbb
in
ret
out
jg
adc
push
add
daa
out
xor
sahf
jle
sub
add
adc
mov
loope
into
jae
mov
jbe
stos
stc
pop
fsubrs
mov
xchg
into
or
subl
xor
and
mov
push
in
pop
cmp
pop
adc
push
subl
pop
es
sbb
pop
lock
sbbb
pushf
sahf
stos
mov
ljmp
vcvttss2si
push
test
pop
adc
pop
mov
xchg
loopne
sub
pop
stos
hlt
sbb
jbe
lock
xlat
loope
dec
pusha
or
xor
jmp
lods
sub
push
xchg
sub
mulb
inc
inc
incb
mov
in
lahf
mov
jge
pop
in
or
xor
das
cmp
loopne
loopne
mov
mov
or
xchg
cmp
sbb
ret
inc
jmp
imul
movsl
add
enter
dec
mov
inc
xchg
inc
jp
mov
pop
in
jl
repz
stos
stos
mov
ds
mov
jl
jo
and
stos
leave
pop
out
ljmp
jo
inc
jno
sub
insl
and
mov
ret
adc
test
pop
inc
das
aam
test
pop
mov
dec
adc
add
jae
lods
sub
pop
mov
nop
add
push
dec
nop
cli
shrl
mov
subb
xor
test
out
and
xor
mov
mov
cs
loopne
fistpll
mov
pop
dec
add
aam
lret
in
and
scas
insl
inc
mov
push
aad
mov
leave
cmc
fisttpl
cmp
push
mull
add
jmp
arpl
and
les
ret
hlt
std
xor
ja
inc
outsl
shr
aad
je
in
and
jge
lock
ljmp
cmp
sti
mov
mov
ja
xchg
xchg
pop
hlt
inc
mov
sbb
adc
mov
out
adc
mov
clc
mov
jno
int
lcall
add
mov
cmp
ret
testl
sti
cmp
mov
jno
push
mov
out
add
xchg
mov
dec
cld
xchg
jae
inc
or
dec
mov
adc
pop
and
pop
mov
test
hlt
mov
incb
mov
xor
xchg
pop
mov
push
jno
add
es
xlat
mov
pop
test
repnz
pop
icebp
or
cmc
add
fbld
adc
xchg
sahf
xor
and
mov
fnstsw
add
push
data16
fnstsw
dec
mov
leave
ja
clc
jg
mov
repnz
into
es
mov
or
mov
mov
fcomip
out
mov
jg
and
cmp
sbb
mov
rcl
add
call
adc
jnp
pop
gs
add
mov
rcl
ljmp
dec
int
out
or
pop
jne
call
popfw
sub
pop
das
sub
mov
dec
cmp
and
ror
xor
pushf
adc
mov
dec
cmp
mov
das
pushf
ljmp
or
xor
aam
hlt
dec
outsl
cmp
push
outsb
out
dec
cmp
and
sub
push
mov
jmp
xchg
or
andb
adc
cmp
jb
fisttpl
pop
or
jne
lahf
jmp
push
test
push
xor
mov
and
cld
aas
pop
mov
sahf
fwait
dec
fwait
popl
sub
sub
fwait
mov
push
mul
rclb
bound
cli
cmp
mov
adc
pop
bound
cmp
inc
repnz
mov
dec
cmp
push
mov
fcmovnbe
movsb
orl
sarb
pop
dec
and
js
daa
ljmp
and
add
cltd
adc
cmp
repnz
in
pop
scas
pop
hlt
cmp
mov
adc
pop
mov
jns
lcall
inc
xor
insb
pop
test
pop
jnp
in
mov
shll
or
das
cmp
inc
sti
inc
adc
xchg
andl
lret
ret
mov
mov
scas
xchg
cs
popf
test
aaa
cmpb
fcmovnb
pop
adc
nop
jne
movsl
in
pusha
loope
or
add
loopne
or
lret
lds
repz
fists
sbb
arpl
xchg
xor
jns
mov
fsubrl
sahf
xlat
data16
mov
jp
sti
xor
mov
xor
test
xchg
ljmp
inc
arpl
jo
fcoms
mov
add
and
ret
je
sub
push
test
orl
xor
loopne
xor
daa
cmpsb
into
pusha
push
push
mov
es
mov
dec
push
imul
mov
add
jl
sar
cmp
mov
imul
pop
or
mov
inc
ja
push
cmpsl
or
push
insb
sahf
dec
fdivs
lret
mov
cli
nop
dec
pop
push
pop
mov
in
aad
ja
xchg
sbb
jmp
in
mov
add
test
sub
leave
xor
lea
daa
imul
xchg
mov
mov
adc
sahf
push
and
or
ljmp
cmpsb
fildll
pop
mov
bound
push
jnp
pop
dec
repz
and
xchg
pop
jns
outsb
adc
xor
nop
loopne
pushf
pop
pop
rolb
adc
cmpsb
pop
sahf
mov
movsb
dec
mov
pop
xchg
sub
sbb
iret
lcall
sbb
jnp
lea
mov
cmp
stc
cmpsl
sbb
dec
pop
aam
fdivl
jb
inc
xchg
hlt
iret
out
push
insb
push
aas
cli
mov
out
mov
notl
aad
xlat
cmpsb
cmpsl
out
shrl
daa
out
daa
sahf
sbb
inc
and
pushf
xchg
loope
shlb
xchg
shrl
sub
inc
bound
loope
cli
popa
mov
call
jbe
lods
jne
ret
scas
adc
ljmp
out
lahf
cwtl
jnp
jecxz
inc
xlat
jb
int3
out
jnp
push
out
aad
call
inc
sub
xor
mov
mov
add
push
pop
mov
daa
adc
pop
xor
lahf
or
sbb
inc
xor
push
adc
daa
stc
push
fwait
cmp
xchg
ds
sbb
jle
ret
inc
push
test
jp
or
sbb
sbb
arpl
ret
cmpsb
clc
icebp
jecxz
shll
xor
or
mov
jle
pop
and
xor
stos
arpl
inc
arpl
adc
jmp
negb
jg
shlb
fimull
test
inc
sarb
xchg
je
aad
iret
xor
push
or
pop
sbb
mov
xchg
fucom
push
adc
mov
out
rolb
aad
stos
fs
je
push
outsl
stos
and
inc
sbb
push
in
cmpsl
outsl
addl
aas
fistl
lods
xchg
or
adc
and
in
sbb
push
andb
mov
addr16
pop
cli
pop
stc
jp
hlt
jg
into
lcall
roll
je
sbb
sarl
ljmp
sbbl
dec
fistl
xor
lods
adc
in
mov
int
mov
cwtl
dec
cmp
and
sbb
fsubl
mov
scas
sbb
mov
bound
enter
cmp
sbb
mov
pop
inc
js
cmpsb
lret
mov
add
and
repnz
mov
push
lret
mov
leave
mov
ljmp
pop
jge
push
mov
xor
dec
inc
andb
pop
or
nop
das
in
in
add
cmp
push
jbe
and
cli
sub
fldenv
pop
xor
repz
cmp
fwait
outsb
pusha
into
lods
cwtl
and
jp
fstps
test
add
dec
adc
fnstcw
adc
mov
test
xor
aam
subb
and
in
inc
and
shll
cwtl
jno
jmp
mov
in
test
nop
movsb
cmp
mov
cmpsl
pop
push
ret
jnp
mov
aas
xchg
into
rcll
xchg
loope
insl
mov
push
dec
xchg
mov
jbe
add
loopne
movsl
cli
sub
xchg
dec
jle
dec
out
pusha
iret
xchg
mov
sbb
adc
fisubrl
add
clc
rorb
jb
popf
enter
pop
mov
scas
or
fbstp
cs
push
sbb
lds
sbb
or
xchg
push
testb
imul
mov
fldcw
stos
in
xadd
mov
cwtl
mov
test
pop
cmp
mov
loopne
jne
push
test
mov
stos
jmp
adc
mov
enter
cwtl
stc
mov
js
jecxz
data16
out
push
and
scas
mov
cmp
or
dec
les
mov
repz
pop
sarb
sarb
pop
jne
add
mov
movsb
mov
or
stos
pop
jo
fildl
leave
push
mov
pop
mov
nop
pusha
jne
jbe
xchg
insl
push
cmp
sub
jmp
dec
mov
imul
outsl
pop
fldenv
lea
sbb
sub
and
shlb
in
std
mov
xchg
pushf
rcrb
imul
jl
xchg
cli
scas
inc
adc
mull
or
xor
int
test
sbb
xchg
jp
mov
adc
jp
push
jp
movsb
das
cmpsb
iret
jno
fidivrs
jo
pop
lods
push
and
enter
cs
movsb
mov
aam
pop
xchg
addr16
icebp
call
fisubrs
sub
lea
fisttpll
out
in
into
xor
sarl
lahf
jl
nop
jge
and
or
add
lds
cmp
lock
mov
dec
int3
cmp
rcrl
or
pusha
mov
popf
clc
pop
and
lea
sbb
std
movsl
push
lcall
addl
add
shll
hlt
into
das
stos
adc
add
pop
aas
stos
dec
jg
mul
insl
mov
jnp
and
lods
loop
fsts
sub
dec
sbb
ret
nop
nop
call
loopne
mov
out
std
movsl
mov
aam
cltd
mov
fmuls
and
sub
pop
or
adc
aas
test
sahf
in
stc
sbb
fwait
lahf
test
js
test
dec
adcl
add
addr16
cmp
insb
lock
push
mov
pop
lods
in
pop
sbb
and
xchg
and
mov
add
sti
clc
pusha
inc
cmp
lock
je
xchg
lret
sbb
dec
test
popf
or
je
mov
xchg
addr16
sbb
and
pusha
int
test
push
lods
das
lret
push
mov
xor
loop
xchg
jbe
dec
arpl
dec
pop
push
xchg
pop
mov
xchg
das
cmp
pop
cmc
pop
adc
cmp
ds
push
mov
jbe
scas
pop
das
cltd
xchg
mov
xchg
mov
push
cli
xor
aad
cmc
add
or
fimull
xchg
inc
or
xor
mov
add
jbe
pop
shl
iret
dec
sti
rcr
cmp
cmp
cmp
mov
fdivs
pop
mov
mov
push
lods
aad
addr16
shl
jge
sarl
xchg
push
inc
mov
loope
pushf
arpl
cmp
fiaddl
push
cwtl
fmuls
mov
sahf
add
out
enter
mov
bound
push
push
scas
mov
clc
cmp
ret
shlb
jne
add
mov
int
aas
push
cmc
rcll
mov
loop
shl
cmpsb
jle
jg
and
mov
jecxz
add
pop
pop
scas
pop
push
sar
imul
aad
jmp
into
shr
out
mov
lock
scas
jg
push
outsb
insl
push
sub
or
adc
loopne
orb
inc
lds
or
dec
sub
adc
cmc
andl
adc
pop
or
shlb
lea
push
mov
into
cmp
mov
and
out
xchg
ficomps
pop
dec
shl
push
add
in
ror
pop
std
push
ss
and
jmp
inc
xchg
cld
pushf
dec
jge
loop
pop
lret
jbe
pop
int3
int
adc
push
xor
cmp
test
jg
aas
mov
mov
dec
adc
lods
int3
pop
add
dec
jmp
xor
lods
hlt
push
lahf
bound
ret
rorl
xor
sbb
add
xchg
sti
jne
bound
sti
jnp
pop
dec
inc
in
pavgb
sbb
fdivrl
shl
xchg
subb
xchg
push
pusha
stos
xchg
inc
movsb
stos
sbb
mov
cmp
sub
xchg
testl
push
mov
xor
and
das
pop
cmp
inc
sbb
dec
and
mov
loop
loopne
mov
sbb
mov
or
cmp
xchg
jp
cli
adc
movsl
test
out
pop
jb
xor
cmp
dec
in
lahf
mov
rcrb
inc
lds
inc
test
loop
rorb
cmp
cmovle
or
mov
sbb
mov
push
rol
fnstsw
pop
mov
shrl
cmp
inc
or
bound
fcomi
mov
mov
jnp
bound
xchg
iret
dec
loop
adc
fsubrs
imul
mov
sub
aaa
xorl
mov
push
scas
adc
xor
outsb
xchg
dec
xchg
push
and
push
repnz
cmp
loop
dec
les
xchg
add
ja
xchg
jo
inc
xchg
loope
xor
shll
adc
enter
stos
scas
pop
bound
das
mulb
rclb
clc
dec
cmp
add
fistpl
cmpsl
mov
mov
std
push
sahf
cli
push
mov
mov
dec
jmp
rorb
sub
mov
pushf
rorl
xlat
mov
mov
iret
and
pop
lods
fwait
test
lock
jmp
ret
jbe
movsl
mov
ret
jge
push
or
sti
dec
jmp
stos
lods
push
jno
movsb
imul
xchg
out
in
ss
outsb
mov
mov
xchg
push
jmp
mov
pop
jnp,pt
push
cmp
cmp
inc
lcall
movsb
and
mov
jecxz
lea
lock
rorb
dec
insl
bound
out
push
sub
and
shll
popf
fmul
repz
inc
mov
sbb
int
lods
sti
dec
jae
pop
mov
pusha
pop
xchg
ret
and
adc
xor
sub
jl
into
hlt
daa
xor
mov
xor
xchg
fstps
xchg
mov
ret
stc
repnz
add
imul
lods
rclb
sub
andl
icebp
fmull
call
mov
lcall
lock
addr16
adc
sahf
repz
out
iret
stc
or
mov
gs
in
cmp
dec
sbb
andl
mull
imul
ret
iret
inc
xchg
mov
enter
pop
repz
hlt
jecxz
out
mov
xchg
mov
xlat
cmp
pusha
mov
adc
aam
fstpt
sar
rcrb
stc
out
enter
jp
std
jg
mov
loopne
sub
cld
xchg
popa
mov
inc
pop
inc
repnz
push
jmp
stc
imul
scas
mov
and
and
ret
bound
inc
inc
or
mov
daa
out
jns
mov
xchg
jle
mov
addr16
popf
aaa
test
jbe
push
sti
inc
mov
sub
inc
and
inc
outsl
clc
cmp
dec
cltd
adc
inc
push
mov
and
fmulp
xlat
mov
hlt
inc
in
mov
dec
or
jb
out
dec
sub
push
adc
sarb
jge
roll
jne
xor
push
cltd
pop
inc
lods
mov
push
cmc
dec
cs
roll
cld
pop
sbb
xchg
sbb
dec
stc
sahf
fwait
sbb
roll
pop
gs
in
push
out
gs
push
pop
xchg
movsb
ds
xchg
inc
test
lret
repz
cmp
jg
or
pop
testb
jo
sub
pop
pushf
stc
fwait
mov
push
ljmp
mov
insb
cli
xchg
outsl
or
add
mov
sub
pop
fildll
xor
ret
stos
jmp
cltd
in
mov
pop
sbb
fldl
or
call
push
lret
or
loopne
roll
sub
in
mov
inc
scas
sbb
and
sub
push
or
dec
adc
popf
dec
and
data16
das
gs
mov
pop
pop
xor
cli
sbb
and
movsl
sbbb
add
jp
inc
pop
push
pop
nop
call
inc
xchg
mov
add
xchg
call
lcall
addr16
arpl
mov
cmpsb
movsl
add
and
sbb
rcll
roll
pop
ret
dec
mov
mov
add
sarl
lock
xor
subl
js
mov
sbb
ficoms
xchg
adc
xchg
je
pop
sbb
push
push
pop
mov
inc
inc
mov
pop
xchg
sbb
cmpl
popa
lock
mov
insl
jbe
push
mov
fisubs
fidivrl
adc
aam
scas
mov
pop
repnz
sbb
mov
mov
fucomip
stc
test
jle
test
rolb
call
cmp
daa
dec
js,pn
out
push
daa
repz
ret
ljmp
mov
aas
mov
sarb
mov
sbb
sub
xor
popf
add
cmpsl
popa
dec
mov
and
adcl
popf
or
push
inc
push
jo
sub
mov
inc
sbb
loope
popf
xchg
and
pop
cmp
cmp
push
xchg
add
or
insl
orl
std
xchg
push
daa
xchg
ljmp
mov
jbe
mov
push
lods
adcb
sub
or
mov
xchg
mov
cmp
divl
sub
retw
xchg
fistps
mov
and
leave
inc
jnp
sbb
scas
push
pusha
jno
cmp
inc
cmp
outsb
aad
inc
mov
les
into
mov
sub
sbb
add
es
outsb
and
and
lret
dec
pusha
xchg
bound
call
jo
aas
or
roll
jno
xlat
fwait
jmp
xchg
xor
mov
pop
mov
cld
mov
idivb
mov
mul
int3
leave
fidivl
cmp
xorb
mov
scas
push
insb
add
fisubs
sahf
pop
scas
stos
ljmp
xchg
lods
add
shlb
sub
cmp
cld
cmp
ljmp
adc
imul
andps
mov
mov
arpl
fadds
push
pop
push
cmpb
and
insl
mov
stc
dec
leave
jne
ds
dec
xor
pop
test
jnp
pop
pushf
jmp
shlb
xchg
or
adcl
test
cmpsl
es
sub
add
sti
or
test
js
jno
ret
stos
inc
mov
mov
inc
cmp
xchg
test
ficoml
ret
mov
call
aad
mov
add
jne
out
cmp
negl
add
repz
adc
out
xor
int
xchg
cmp
mov
mov
and
pop
out
imul
repnz
add
loop
addb
xchg
call
push
out
inc
or
jmp
xor
sbb
dec
inc
outsl
popa
push
lret
push
cwtl
jnp
cmc
or
loop
cltd
outsb
mov
pusha
imul
and
nop
adc
mov
push
jp
outsl
cmp
lods
xor
xchg
fwait
mov
dec
addb
movsb
mov
hlt
fsubrp
leave
push
sub
pop
aas
mov
inc
into
aas
insl
scas
and
xchg
loopne
and
sub
or
inc
sbb
pop
ljmp
stos
xor
inc
and
je
scas
call
into
lret
mov
imul
add
rcrl
loopne
mov
xchg
mov
inc
enter
pop
dec
sbb
pusha
notb
sub
push
jp
push
repz
ffreep
int
out
lcall
pop
pop
clc
adc
adc
or
jno
xor
dec
adc
lcall
shll
sbb
es
mov
and
or
push
repz
jno
or
test
fimuls
and
sahf
arpl
dec
cs
movsb
mov
xchg
xor
orl
daa
push
xchg
add
jge
mov
inc
test
add
push
push
nop
scas
das
xor
std
pop
inc
jb
out
pop
cli
ret
and
adc
pop
cltd
dec
setg
push
ret
dec
inc
test
mov
ret
ret
dec
mov
pusha
pop
notl
ljmp
jle
push
test
js
add
adc
push
mov
nop
jno
cmc
or
gs
inc
xor
mov
mul
ficompl
jnp
cmp
push
mov
sbb
mov
test
ss
loopne
push
pop
xchg
inc
es
cmp
pusha
aaa
and
daa
mov
dec
push
xor
dec
outsb
outsl
dec
in
fmul
sub
mov
or
sub
mov
adc
addr16
scas
mov
movsb
and
push
jno
pop
jnp
sti
and
inc
push
jno
in
fimuls
call
cmpsl
mov
repz
jle
push
xchg
adc
arpl
jle
jmp
pop
sarl
das
lahf
daa
inc
jnp
pop
jl
sarl
sub
jne
call
popf
adcl
mov
add
cmp
lods
mov
popl
pop
mov
mov
lret
rolb
leave
aaa
adc
cs
es
loop
xlat
rcr
adc
jl
or
cmp
xlat
sub
lahf
mov
jmp
outsb
inc
mov
mov
mov
and
xchg
inc
pushf
in
sbb
mov
inc
js
ret
cmp
ret
scas
popa
fs
leave
push
jecxz
or
xchg
invlpg
out
aas
outsb
stc
jl
adc
fsts
ret
ret
jmp
sti
sbb
inc
ja
mov
sub
aaa
cli
push
int3
bound
xchg
daa
xor
loopne
mov
cmc
push
mov
and
and
dec
push
iret
inc
sbb
cmp
andl
imulb
pop
hlt
cmp
orl
cmp
test
sbb
out
xchg
cmpsb
mov
jnp
push
mov
lods
cmp
bound
into
rolb
xor
jge
jecxz
push
dec
or
js
mov
jne
fimuls
jne
jmp
cmp
leave
add
aam
jmp
cltd
inc
push
shlb
push
jge
outsb
fnstenv
jecxz
iret
sub
aad
iret
pushf
setp
popf
scas
mov
push
cmp
jo
in
adc
rcrb
xchg
jae
mov
add
jbe
jmp
adc
movsl
sbb
mov
ret
arpl
cmpsb
hlt
loopne
jnp
push
jbe
cli
mov
mov
ljmp
xor
mov
aaa
sub
sbb
je
cmpsb
and
or
leave
test
mov
repz
mov
xor
iret
mov
push
mov
testl
les
mov
mov
xchg
dec
xchg
pop
call
jbe
and
inc
sub
mov
in
mov
mov
ja
data16
pop
xchg
andb
push
mov
notl
out
repz
xchg
pop
and
les
lock
pusha
ss
fnstsw
hlt
sbb
lock
adc
aas
fwait
stc
dec
cmp
lods
xchg
push
lock
mov
ljmp
mov
pop
hlt
cltd
sub
push
stc
std
mov
push
dec
shrl
jns
xor
shll
push
sub
outsb
sbb
push
or
mov
inc
dec
stc
cmp
and
xchg
ret
jmp
movsl
in
ss
ret
sbb
lods
pop
push
xor
push
and
cmp
jne
adc
rorl
mov
nop
mull
cmp
sub
jecxz
inc
loop
pusha
mov
cmp
cmp
loope
xor
das
mov
mov
push
inc
pop
fs
xchg
sub
lcall
int
icebp
pop
scas
cmpb
mov
adc
jg
stc
xchg
push
lret
dec
outsb
jl
cmp
lds
inc
fwait
add
mov
pop
jae
add
pop
sahf
notl
push
cmpl
dec
rcl
push
add
fldcw
sub
inc
and
xor
mov
jo
cmp
push
sarl
sbb
cltd
cmp
stc
ljmp
dec
lock
cmp
in
aam
mov
iret
aaa
inc
sbb
sahf
pop
fstl
add
dec
jnp
mov
das
cltd
jae
sub
lods
mov
dec
jl
outsb
mov
push
shll
out
into
pop
jge
in
mov
mov
jb
iret
mov
dec
xchg
out
push
mov
into
fistps
data16
xor
xor
push
les
arpl
out
sbb
mov
xor
mov
pop
pop
mov
jnp
mov
dec
jns
push
incb
and
xchg
test
add
cmc
scas
sahf
faddl
pop
movsb
repz
scas
inc
dec
xchg
dec
sbb
push
lods
hlt
sbb
sub
pop
out
mov
mov
orb
sub
insl
mov
outsb
jmp
jg
mov
popf
and
fimull
addr16
mov
jl
ret
add
xchg
mov
mov
jmp
mov
stos
mov
mov
arpl
mov
or
std
out
jnp
sbb
lock
leave
jle
and
mov
insl
jb
add
xor
adc
into
pop
addb
cltd
arpl
add
in
adc
insl
mov
push
jle
insl
jp
xor
dec
insb
scas
jae
sub
pop
pop
pop
lcall
cmc
ljmp
mov
movsl
cltd
jbe
pop
loopne
adc
lret
in
ret
cmpsb
pop
push
rcr
mov
push
shr
mov
add
or
rorl
iret
aaa
hlt
or
dec
inc
repz
vcvttsd2si
cwtl
xchg
cwtl
add
add
fdiv
sub
mov
fsubrl
lcall
mov
imul
and
subb
daa
sti
ret
cmpsl
pop
pop
cmpsb
jp
pop
fisubrs
pop
in
push
insb
xor
xchg
aad
and
hlt
and
inc
mov
lret
in
push
xchg
mov
leave
ret
notb
mov
lahf
pop
in
push
lea
mov
mov
pop
mov
loop
scas
faddl
ljmp
mov
mov
xchg
sub
icebp
xor
mov
jg
rcrb
xor
pop
rorb
xor
sub
test
xor
sub
nop
push
adc
pop
inc
xor
sarl
pop
nop
icebp
cmp
rclb
xchg
sbb
sub
sahf
mov
pop
dec
cmp
pop
add
outsl
andl
data16
mov
out
stos
je
clc
jns
je
dec
pusha
cwtl
lcall
cmp
xor
xor
inc
push
mov
lahf
sub
lret
and
lods
mov
icebp
ret
sbb
mov
lds
pop
push
fwait
mov
push
insl
test
data16
imul
rcrl
push
push
fwait
or
jns
mov
rorl
inc
pop
in
xchg
lahf
mov
jmp
movsl
jl
mov
imul
xor
xor
sub
push
xchg
mov
aas
cmp
mov
icebp
dec
lahf
imul
dec
fwait
inc
sarl
aaa
fdivl
filds
xchg
in
mov
ds
lods
mov
push
pop
lock
repnz
stos
cmpsl
or
loop
insl
xchg
fdivrp
cmpsb
inc
inc
aam
adc
arpl
add
jo
xchg
in
decb
sub
inc
adc
xor
mov
negl
popa
out
cwtl
mov
dec
icebp
and
aas
subl
andb
call
mov
les
aam
xlat
out
or
push
jle
int
fwait
dec
cmpsb
mov
dec
rorb
dec
and
pusha
test
lods
stc
cmp
sbb
pop
imul
fs
mov
pop
in
int3
bound
in
dec
or
rcll
icebp
call
loopne
movsl
mov
pop
mov
jmp
and
testl
ja
in
lds
sub
sub
fdiv
push
add
adc
fistps
mov
mov
rdtsc
jne
outsl
adc
imull
cmp
mov
in
add
cwtl
or
pop
xchg
lock
jnp
std
xchg
mov
sahf
jbe
lods
push
cld
sub
push
pop
or
add
add
and
imul
mov
mov
cld
jb
add
rorb
cmp
push
es
cmp
lahf
iret
scas
scas
xchg
rcrl
xchg
pop
lea
and
mov
adc
out
sub
or
mov
inc
dec
cmp
inc
sub
push
cmp
lods
clc
and
pop
add
enter
js
dec
add
push
cld
test
pushf
mov
stc
sbb
loop
into
push
ret
pop
cmp
repnz
sbb
scas
outsl
cmp
es
iret
pop
jge
mov
clc
stos
mov
mov
and
jnp
xchg
inc
push
add
or
insl
insl
fbstp
xchg
pop
inc
notl
loope
xor
sub
pop
lret
cmp
jno
inc
cmpsb
cmc
sbb
movl
outsl
lcall
mov
bound
mov
outsb
into
ss
add
rclb
xchg
dec
mov
inc
xor
std
jmp
test
push
push
jb
and
cmp
sbb
cmp
into
cmp
and
lods
lret
xchg
fists
inc
out
push
pop
fsubl
hlt
ret
and
pop
sub
pop
lahf
sahf
cmpl
cmp
aaa
mov
jno
xchg
ret
mov
mov
cmpsl
iret
jecxz
jp
mov
das
sub
sbb
ds
jl
lock
lods
and
negl
imul
push
pop
outsl
mov
ljmp
or
cmp
dec
arpl
fsub
xchg
pop
mov
xor
scas
mov
fstps
call
sub
jb
dec
cmp
lret
dec
xchg
cs
push
movl
mov
mov
cmp
inc
and
adc
insl
or
cmp
gs
xor
leave
aaa
int3
or
repz
mov
cmpb
push
and
xchg
fisubrs
les
aad
cmp
xor
rcll
pusha
aaa
loopne
jg
add
addr16
outsl
sti
cmpsl
add
mov
imul
cmc
shlb
xor
dec
adc
mov
add
daa
sti
fists
sub
es
insl
lret
ret
add
lods
cs
lods
lods
into
add
sub
and
scas
xchg
mov
out
loop
pushf
inc
sub
enter
mul
push
lods
sbb
inc
and
pop
in
jae
negl
add
add
sarb
mov
push
sbb
shlb
es
inc
jne
ret
inc
ds
and
stc
outsb
mov
add
fwait
adcb
pop
mov
mov
dec
add
mov
clc
ljmp
dec
or
inc
cmp
dec
mov
push
lcall
loopne
rcrb
pop
add
scas
aaa
mov
movsb
mov
jecxz
and
lcall
xchg
ja
and
aad
xchg
jns
out
pop
stos
push
and
out
and
or
mov
imul
push
or
out
push
pop
and
fldcw
jp
pop
imul
loope
notb
inc
addl
mov
out
sub
jne
mov
sbb
out
inc
sub
mov
movsb
bound
mov
pop
lods
ret
ljmp
insb
pop
push
sti
xchg
jnp
pop
mov
xchg
mov
lea
pop
jle
sub
xchg
lods
stc
sbb
fmul
xchg
sbbl
adc
push
js
fldcw
inc
out
pop
xlat
dec
ficoml
push
fbstp
fcom
pop
pop
jb
add
ja
popf
icebp
mov
dec
push
or
jge
bound
shlb
adcb
cmpsl
fcompl
ficomps
addb
sub
inc
jge
fdivrs
test
or
and
leave
mov
xor
aad
and
pop
pop
xchg
sbb
lahf
fs
push
cmpsl
js
inc
jbe
jnp
ja
aam
mov
addb
and
lds
push
mov
push
xchg
gs
sub
cs
jg
icebp
cmpl
stc
lds
mov
daa
repz
stos
shlb
jne
mov
cmc
popf
sub
in
std
out
jne
jb
mov
ret
push
sbb
push
in
shll
shrb
sub
fnsave
into
mov
pop
inc
jmp
das
gs
xor
push
pop
adc
lcall
into
cmp
inc
out
add
xchg
andl
pop
add
xor
mov
xor
ljmp
xchg
sahf
mov
rolb
adc
add
in
and
xchg
fbld
add
push
aas
sti
gs
fidivs
jmp
add
rolb
mov
xchg
mov
rol
xor
and
xchg
cmp
lds
jae
clc
push
popf
imul
pop
mov
cwtl
or
xadd
repz
jb
jecxz
mov
fistpll
ds
mov
lea
ret
shll
push
rol
mov
popa
leave
mov
jge
scas
dec
push
xorps
das
xor
adc
cmpsb
iret
in
mov
pusha
daa
mov
cmovnp
shl
std
xchg
push
call
or
pop
mov
aam
xchg
xlat
jmp
push
cmp
scas
mov
xchg
fisubl
cltd
pop
pop
cmp
and
cs
imul
daa
enter
pop
or
insl
mov
loope
mov
mov
push
pop
xchg
xor
sub
xchg
mov
or
inc
das
sbb
and
mov
or
outsl
hlt
xchg
jecxz
add
out
or
fwait
mov
daa
fwait
ds
sbb
ret
add
mov
mov
in
pop
js
fcompl
clc
mov
jns
hlt
jge
insl
daa
out
mov
bound
cld
push
mov
inc
and
mov
and
in
jnp
xor
adc
xlat
add
xor
dec
icebp
cmovs
jno
cmpsl
test
cltd
lcall
xor
repnz
sub
rclb
inc
insl
mov
cmp
dec
mov
mov
dec
cltd
mov
movsl
call
add
or
jb
jb
xor
sbb
fucom
cmp
pop
adc
dec
dec
sar
movsl
adc
mov
or
cltd
fldenv
xchg
lods
lea
les
pop
shll
fadds
mov
pop
leave
add
and
cmp
sub
add
push
sub
sub
movsb
lret
xor
lods
jne
push
imul
inc
test
inc
add
inc
cli
xorb
adc
pop
loop
mov
lock
mov
adc
pushf
loopne
mov
repnz
push
pop
lods
adc
jns
fiaddl
mov
test
dec
jnp
dec
jge
rorl
or
mov
lea
adc
pop
daa
xor
imul
inc
dec
hlt
sbb
sbb
mov
jge
or
inc
mov
adc
lret
mov
add
mov
adcl
mov
fiaddl
jmp
imul
stos
lcall
scas
mov
int
setnp
xchg
test
jno
mov
push
outsb
aad
scas
dec
lea
dec
out
xchg
add
push
push
stos
call
push
loope
inc
icebp
lcall
mov
test
hlt
lods
in
sub
fprem
repnz
push
cmp
xchg
dec
and
xor
daa
sbb
sarb
push
xchg
loope
ljmp
mov
pop
push
std
shll
mov
lea
and
ljmp
and
subl
lret
scas
enter
cld
xchg
je
jbe
icebp
mov
mov
mov
test
test
inc
adc
inc
popa
jmp
fsubl
mov
iret
test
push
sbb
mov
inc
cmp
loopne
jns
dec
inc
push
fucomi
cs
mov
dec
rclb
inc
ds
call
xor
lret
inc
outsl
jno
xchg
pushf
xor
scas
popa
add
dec
xchg
cmp
cmc
add
out
outsl
leave
jle
stc
pop
mov
mov
mov
into
mov
cmp
ds
lock
inc
outsb
xchg
clc
outsl
idiv
fdivs
jo
sarl
xchg
mov
insb
jno
out
fstpt
push
loopne,pt
in
or
push
fcompl
adc
mov
js
push
push
mov
cmp
cmpsb
jns
scas
dec
arpl
popa
xlat
fs
xchg
ror
ret
or
push
mov
sub
mov
xchg
jge
add
mov
jae
and
shr
fisubl
sbb
bound
or
dec
aaa
mov
jmp
adcb
add
cli
mov
mov
addr16
clc
jne
rol
ret
jp
fmul
push
add
jg
sahf
rcrl
outsb
pop
add
sbb
aaa
fmull
repz
icebp
in
mov
xchg
lret
mov
mov
inc
aas
mov
mov
xchg
outsb
xchg
push
and
xor
cmp
sub
adc
cmp
jl
arpl
push
jno
lret
jb
inc
rcrb
lods
aas
call
jl
and
ds
sub
vmovapd
movsl
jmp
aaa
pop
adc
loopne
add
jo
stos
xchg
popf
jnp
mov
cwtl
jecxz
sbb
loopne
mov
jg
cmp
xchg
pop
jnp
pop
push
pop
push
xchg
sub
mov
sub
ret
xor
mov
testb
xor
inc
mov
dec
dec
pusha
cltd
add
ljmp
xlat
test
push
psadbw
and
data16
xchg
data16
negb
imul
push
lea
dec
stc
inc
adc
fiaddl
outsl
xchg
lea
jnp
push
in
mov
cmp
push
insb
ljmp
mov
xchg
mov
out
aad
in
das
xlat
in
xadd
outsb
xor
inc
jb
es
nop
iret
daa
push
jmp
stc
cmp
rcrl
fwait
popf
sub
jmp
scas
push
or
cmp
or
sarl
cltd
push
mov
lret
xor
mov
pusha
jns
push
cmp
sub
xchg
movsl
mov
xlat
repnz
inc
in
cmpsb
add
push
mov
pmaddwd
call
loope
mov
sub
sub
scas
xchg
loop
xor
mov
xlat
lods
push
mov
hlt
out
adc
stos
shlb
jecxz
adc
fiadds
add
fs
rol
sub
fcomps
test
sub
push
mov
pop
and
mov
inc
sbb
ret
pusha
push
outsb
fidivrs
je
scas
jle
push
cwtl
cmp
mov
dec
sbb
fwait
cmc
ja
or
js
push
mov
push
adc
mov
out
in
test
adc
jl
in
mov
lock
or
inc
fsubrs
outsb
inc
je
adc
scas
cmp
push
ret
adc
pop
shlb
jbe
sub
out
jecxz
shll
dec
loop
daa
cmpb
push
mov
pusha
in
flds
adc
push
mov
mull
shll
xlat
and
lahf
cli
inc
lahf
fcomip
inc
daa
aas
lds
mov
je
cld
push
xchg
cmpsl
sar
add
cmp
jp
push
int
and
sbb
fcomip
ds
jmp
shl
pop
adc
inc
inc
xlat
popf
push
sbb
out
ret
xchg
xchg
jmp
pop
stc
and
xor
jge
jns
pop
adc
pop
movsb
add
imul
push
or
cs
scas
aaa
nop
sub
adc
ret
lret
jo
mov
jno
push
sub
push
pop
repz
pop
loop
bound
cmp
in
xchg
cli
fidivl
sbb
xchg
jge
cwtl
les
jle
xchg
movsl
fsubrs
sbb
scas
fistps
mov
clc
int
push
mov
pushf
dec
clc
popa
sbb
ficoml
loop
jge
stos
sub
out
xchg
into
pop
fstl
aas
testb
nopl
lret
xor
mov
fadd
and
jnp
dec
xchg
movsb
fildl
test
jge
imul
xor
je
xchg
aam
flds
test
lods
cwtl
or
mov
cmp
lcall
in
and
mov
and
mov
mov
arpl
dec
in
xchg
scas
cli
jo
or
data16
mov
lock
int3
mov
dec
addr16
xor
jo
pop
dec
lods
inc
adc
push
outsl
rclb
mov
mov
or
cmp
add
call
adc
out
ret
into
xor
mov
and
adc
jge
enter
mov
mov
in
repnz
fsubrs
sub
jmp
fisubs
sub
std
mov
add
jnp
stc
fimull
dec
in
rolb
inc
or
cmp
out
or
adc
ret
lret
add
rorl
in
stos
and
pusha
stos
pop
push
jmp
in
cmp
sub
dec
mov
lds
test
mov
and
fstpl
std
adc
pop
sub
mov
xlat
mov
rorl
cmp
sbb
add
xchg
pop
sub
dec
shr
enter
cmpsl
imul
js
les
sbb
jle
xorb
mov
push
add
jae
lods
fdivrl
xchg
mov
icebp
ss
dec
movsl
pop
or
int
cwtl
mov
negb
mov
sbb
aas
add
add
out
movsl
cmp
dec
mov
lcall
or
lock
jmp
mov
shll
nop
and
or
dec
lahf
or
cli
stos
fnstenv
aad
pop
sbb
fists
and
sub
mov
push
mov
dec
jmp
sub
sbb
stos
mov
mov
inc
xchg
imul
sarl
js
push
mov
pop
adc
movsb
push
sub
push
shlb
lds
mov
loop
mov
in
xor
and
mov
stos
xor
lcall
pop
and
jns
bound
mov
or
aad
mov
lock
xchg
mov
jnp
cmp
sbb
xlat
push
jbe
in
push
push
daa
push
popf
and
je
sahf
nop
fdivl
or
test
scas
push
adc
imul
or
mov
out
in
das
cmp
xchg
sub
mov
xchg
adc
mov
popa
sub
out
pop
mov
fstpt
dec
cwtl
int3
sbb
add
rclb
mov
fwait
sar
ljmp
or
lret
mov
mov
scas
adc
mov
sub
loope
lret
pop
dec
cmp
mov
test
repnz
inc
mov
out
jbe
dec
cmpb
cwtl
outsb
pop
fcom
mov
arpl
sbb
push
int
and
mov
test
negb
sub
dec
test
daa
sbb
paddq
xor
clc
sbb
or
pop
lret
push
pop
or
sbb
ss
stos
fistpl
fidivl
std
fsubrl
pop
rcr
repnz
adc
mov
insb
rcrl
mov
sbb
test
and
mov
mov
mov
push
mov
loop
mov
sbb
adc
cld
sub
push
fnstcw
add
add
out
mov
sahf
mov
jns
sbb
in
mov
add
xchg
lock
mov
stos
mov
popa
ja
xor
sub
jae
dec
lods
fwait
push
inc
mov
xchg
inc
enter
cmp
mov
inc
pop
mov
cld
aaa
icebp
cmpb
sbb
or
lock
cld
inc
xchg
lods
xchg
cltd
fadds
das
and
repnz
out
in
or
aaa
sbbb
dec
insb
xchg
imul
outsl
pop
and
out
and
sub
xchg
push
popf
jmp
sub
push
rcll
cmp
pop
stos
sbb
or
cmp
outsl
dec
or
add
in
and
ss
sbb
mov
inc
push
xor
or
shll
sahf
data16
jbe
xchg
mov
test
mov
outsl
popf
lea
lods
jle
xor
cmp
rcll
jge
imull
or
xor
dec
pop
xchg
lds
jns
iret
add
cmpsb
xor
inc
pushl
lods
scas
push
mov
mov
sub
gs
shll
cmp
mov
add
cmpsb
neg
sub
lret
fstpl
sar
jmp
ss
lock
xor
repnz
mov
mov
sbb
mov
lock
adc
pop
ds
cli
pop
shrb
push
js
adc
xor
and
push
and
pop
popa
stc
stc
std
lcall
mov
popa
sbb
xor
daa
cmp
test
out
notb
push
sub
sbb
xchg
mov
push
or
cmc
or
sbb
fucomip
pop
mov
aam
arpl
popf
cmpsl
pop
mov
insb
or
jnp
jl
mov
cltd
mov
inc
popf
cmp
inc
inc
jne
fsubr
sbbb
mov
sbb
xor
shll
loopne
lds
sbb
adc
lea
daa
cmpsl
lock
inc
aaa
mov
jae
jb
mov
lods
js
jno
ja
hlt
mov
or
scas
in
pop
popf
sbb
jl
aas
xor
sub
ljmp
mov
ret
mov
and
lcall
in
sbb
mov
sarb
fcoml
dec
sbb
xor
stos
ja
push
push
test
imul
int
repnz
mov
add
pop
daa
aam
stc
mov
scas
push
in
dec
jns
jbe
jmp
in
insb
repnz
sbbb
repz
imul
jg
aas
mov
xchg
pop
inc
pusha
lahf
add
call
leave
sbb
mov
dec
mov
xchg
push
std
call
frstor
ds
ja
adc
xchg
adc
mov
ror
or
xor
shll
fwait
notb
std
mov
mov
push
imul
in
scas
in
inc
pop
mov
mov
popa
ss
outsl
js
adc
xorb
pop
cmp
stc
pop
filds
mov
jnp
orl
outsb
mov
xor
pop
inc
out
insb
call
inc
jb
adc
shrb
sub
rorl
mov
aaa
ror
in
adc
aas
in
xor
sbb
loope
sbbb
sub
movsl
sub
mov
insl
rcrl
rclb
aas
cmp
jnp
test
adc
jle
mov
jne
inc
pop
xchg
into
mov
test
in
pop
mov
repz
ss
lret
es
or
cs
int3
js
push
inc
insb
pop
adc
cmc
or
add
jl
jo
push
pop
or
mov
or
in
cmpb
jnp
jge
or
lcall
mov
jnp
jp
repz
cld
pop
pop
loope
arpl
lret
mov
mov
mov
sbb
rcll
cmc
and
and
xchg
and
in
sub
mov
testb
push
rorl
xor
lcall
and
rcll
push
xor
sbb
mov
xchg
mov
clc
pop
imul
and
cmpsb
pop
pop
in
fwait
int3
ret
sbb
cs
xor
jbe
icebp
mov
sub
int
std
or
pop
and
xor
lahf
sub
negl
xchg
xchg
ficomps
dec
push
cmp
xchg
leave
mov
lods
clc
push
inc
imul
shlb
es
jg
mov
fidivrs
repnz
sti
das
fs
add
cltd
insl
pop
out
add
fdivr
lcall
out
lock
inc
add
jbe
addr16
in
mov
scas
inc
fistpl
jne
addl
gs
or
push
add
xchg
adc
into
inc
in
cs
popf
sti
pop
rcrl
insb
pop
add
push
mov
arpl
shll
add
jae
lea
scas
adc
stc
outsb
jns
in
fstl
xorb
mov
pushf
and
xchg
sub
push
mov
ja
push
repz
sbb
push
das
lds
add
mov
and
pop
cmc
sahf
jl
mov
ja,pn
jmp
xor
rolb
inc
mov
push
push
sbb
cmpsb
inc
adc
inc
into
incb
add
pop
fsubl
xchg
adc
pop
mov
mov
pop
test
ss
push
sahf
mov
mov
fcomi
test
leave
dec
out
cld
int
jmp
scas
nop
and
xchg
inc
xchg
outsl
notb
jne
and
icebp
ljmp
test
out
fcomip
in
push
mov
dec
push
pop
fadds
dec
jmp
sbb
pop
jo
not
ljmp
or
adc
inc
mov
sbb
xor
or
in
mov
xchg
out
inc
sbb
cmc
mov
xor
and
ljmp
clc
xor
cwtl
and
mov
ja
pop
cmp
or
mov
mov
mov
iret
pop
popf
or
lea
inc
aad
stc
lcall
test
iret
in
mov
cmp
loop
push
jle
or
xchg
or
and
sbb
jle
outsl
lret
cmp
add
cmp
cld
sarl
jg
outsb
and
pop
jle
iret
test
in
mov
dec
mov
je
sarb
scas
pushf
pop
ja
xchg
add
jp
fldt
fstpl
les
fists
enter
bound
jbe
xor
adc
jne
in
es
or
mov
dec
sbb
push
and
sarb
adc
cmpsb
outsl
jge
sub
repnz
mov
int3
pop
mov
in
sbb
add
inc
in
stos
push
push
xor
test
inc
out
imul
sub
or
and
into
rcrb
out
adc
push
mov
xchg
jecxz
fisttpl
xor
fstpt
mov
dec
add
fstl
bound
xchg
xchg
push
adc
and
xchg
or
and
nop
rcrl
or
cmc
je
ljmp
insl
call
dec
jp
das
out
sti
outsb
add
and
push
inc
mov
int3
push
insb
clc
lahf
pop
mov
sub
mov
or
xlat
jne
mov
notl
push
scas
or
and
fists
adc
mov
stos
repnz
scas
cmp
sbb
jo
or
test
aad
inc
mov
fwait
ret
mov
pop
sbb
lock
cwtl
xor
pop
fidivrs
add
sub
add
or
ror
mov
xor
loope
mov
stos
ss
mov
popa
mov
pushf
lock
jge
lret
mov
in
xorb
movsb
movsb
cmp
out
shrb
pop
lea
in
subl
pop
shl
enter
push
xchg
mov
pop
sub
sti
notl
mov
sarl
sub
frstor
lret
adc
enter
lds
pop
sub
pop
mov
sbb
les
sbb
aaa
mov
mov
daa
xor
shrl
daa
adc
idivb
stos
or
xorl
sbb
xor
mov
int
cltd
mov
sbb
mov
xchg
pop
and
cli
sub
out
sbb
xor
test
mov
xor
test
lret
arpl
in
test
cmp
mov
xchg
addr16
into
xchg
and
add
mov
xor
nop
bound
dec
es
cltd
xlat
mov
lahf
sbb
push
es
xchg
mov
push
push
lret
lcall
out
sti
xchg
das
and
jbe
pop
ljmp
and
push
out
lret
scas
cmpsb
xchg
jmp
out
or
push
jmp
mov
mov
mov
xchg
fstl
xlat
bnd
int
mov
test
cmp
push
data16
pop
stc
xlat
push
sbb
clc
inc
jmp
fucomp
mov
out
dec
sub
stc
adc
dec
push
aaa
ja
or
bound
jle
pop
mov
push
inc
inc
sti
setb
loopne
lret
cmp
add
pop
jl
jne
icebp
xchg
xor
gs
jo
jg
stos
lcall
push
pop
dec
cld
mov
popf
lret
mov
inc
mov
pop
pusha
pop
in
out
scas
mov
imul
notl
jmp
fnstcw
pusha
std
int3
or
daa
aaa
scas
dec
add
push
in
outsl
in
int3
cmp
pusha
aas
push
lret
cwtl
add
and
mov
cmp
xlat
push
inc
jmp
jnp
sub
addl
dec
xlat
push
pop
xor
in
pop
dec
imul
xor
ds
aam
jae
xchg
dec
sbb
jg
std
jecxz
sub
add
inc
ret
fstl
jae
or
inc
push
out
xchg
add
outsl
mov
mov
and
arpl
mov
incb
int3
orb
stos
ffree
xlat
in
outsl
stos
sbb
pop
add
pop
or
in
cmp
xor
mov
insl
cmpb
lods
ss
cmp
sbb
scas
popf
inc
jle
fdivs
mov
loope
enter
mov
cld
jmp
push
hlt
xchg
inc
bound
push
xchg
aaa
dec
or
test
sub
pop
xor
mov
cmp
add
push
imul
leave
inc
mov
inc
jg
jb
fdivrs
mov
jmp
cs
pop
jno
push
sub
inc
test
or
add
lret
out
and
fisubs
stos
cmpsl
icebp
ja
cmpsl
pop
dec
mov
xchg
cmp
inc
lds
mov
and
push
mov
popf
xchg
xchg
add
sbb
cmp
das
into
ss
imul
int3
inc
mul
xchg
ss
iret
sbbl
mov
push
leave
cmp
in
in
pop
pop
mov
xchg
ret
push
mov
mov
push
addb
mov
popf
dec
sahf
and
in
push
incb
das
mov
mull
sub
pop
lret
and
rcrb
bound
xor
jno
sbb
push
gs
adc
jae
ret
or
pusha
rcrl
icebp
in
cli
mov
jbe
daa
xlat
fisubrs
ret
xchg
idivl
jp
mov
aas
xchg
xchg
cmp
jle
jl
lods
xchg
or
aaa
out
adc
subl
add
leave
or
cwtl
ja
mov
cmc
out
js
mov
test
mov
pusha
xchg
cmpsl
das
push
loop
loope
jno
or
aaa
push
adc
add
xor
push
bound
xor
sbb
rcrb
xor
lret
push
mov
filds
je
xchg
das
jno
imul
mov
lret
jge
loope
or
out
jp
call
in
xor
fcomps
lcall
addl
test
mov
loop
test
daa
jl
lret
int
in
push
sti
stc
push
jno
sbb
lahf
pop
fwait
mov
loope
fdivrp
enter
mov
roll
es
inc
inc
xchg
lgs
push
sub
lods
je
push
bound
repz
xchg
mov
loop
pop
sbb
add
shrb
fsts
imul
out
sarl
loopne
aam
inc
fwait
mov
adc
sbb
add
sub
xor
ficoml
icebp
sub
sahf
test
jns
mov
jp
add
clc
insb
lcall
stos
mov
jbe
or
inc
pop
add
and
mov
mov
cli
arpl
xchg
add
movsl
xchg
leave
outsb
lcall
pop
adc
xchg
nop
inc
xchg
fists
inc
sub
data16
sbb
fcmove
cld
and
stos
popa
jns
mov
test
pop
scas
xor
iret
cmp
cli
jg
jmp
push
fmull
bound
pop
inc
fadd
or
arpl
popa
adc
cwtl
xchg
and
push
shr
sbb
outsl
sub
push
or
adc
jl
addr16
pop
fsubrl
xchg
push
adcl
ret
data16
andb
out
sub
hlt
and
push
cmp
mov
inc
decl
jns
dec
lods
aam
cltd
dec
incb
jl
dec
fdivs
mov
rclb
mov
push
icebp
push
outsb
divl
cli
js
mov
das
xchg
pusha
shrb
nop
gs
mov
mov
out
das
cmp
sarb
loope
sub
test
inc
scas
fbld
popf
enter
mov
jle
or
jo
cmp
xor
cmpsb
mov
or
cpuid
xchg
lods
mov
hlt
push
push
jp
cmp
pusha
sbb
inc
sbb
nop
out
and
inc
pusha
ja
cmpsb
rcr
cmp
xchg
and
out
mov
and
les
cmp
pop
mov
nop
cltd
test
sub
addr16
adc
sbb
fwait
mov
mov
ljmp
pop
xchg
ljmp
shll
dec
dec
cmpsb
cmp
inc
jg
sbb
insb
repnz
mov
outsl
test
pusha
xchg
mov
in
or
pop
int
push
adc
adc
inc
jnp
lret
jmp
stc
cmp
jge
pop
push
mov
xor
shlb
stc
inc
xor
mov
mov
ss
sbb
xchg
adc
loopne
adc
add
xchg
fiaddl
fcmovu
pop
mov
loope
push
cmp
fidivrs
iret
or
addr16
test
int3
into
lods
cmp
dec
xor
inc
and
stc
push
es
fs
aad
mov
in
cmpsb
adc
xorl
xchg
stos
fwait
movsb
pop
mov
stc
xor
lock
jg
xlat
mov
imul
lahf
test
adc
into
outsb
aas
mov
fadds
push
or
loope
cmp
add
call
rclb
mov
sub
roll
sub
mov
rorb
ds
mov
and
fcoms
lds
test
mov
cmp
jns
and
cmp
jno
push
es
jl
int
inc
inc
sbb
xor
jp
rcll
stos
lea
xchg
rorb
jle
jo
lock
cmp
pop
sub
sub
pusha
outsl
jg
xchg
jle
scas
cs
rorl
mov
inc
clc
cmp
insl
out
mov
jmp
or
dec
cmp
push
sbbl
and
out
mov
and
pop
loopne
stos
mov
sbb
data16
or
jp
test
sti
minps
and
dec
movsl
pop
cmp
cmp
in
int
jecxz
add
jmp
mov
inc
std
mov
mov
repz
cmp
mov
mov
xchg
push
imul
sub
les
je
ja
xor
sub
xchg
jle
pop
add
mov
loop
xchg
ret
add
xor
pop
sarb
iret
data16
mov
mov
sub
int3
fsubp
imul
cltd
pop
pop
xor
pop
or
sbb
jmp
gs
movsb
leave
stc
icebp
ss
push
lcall
mov
cmp
mov
sbb
lret
and
hlt
nop
cwtl
sbb
lock
cmp
cmp
pop
imul
out
arpl
je
cmc
push
mov
xor
dec
pop
pop
mov
push
mov
and
cltd
into
xchg
xor
mov
mov
xchg
pop
cmc
push
imul
mov
fmulp
dec
dec
jno
xor
hlt
push
scas
loope
push
and
hlt
loopne
lock
cwtl
cmovs
mulb
adc
mov
iret
push
jnp
in
stos
ss
jae
jmp
roll
call
inc
pop
jnp
lahf
xchg
fxch
nop
test
in
test
lcall
pop
clc
lea
stos
dec
iret
push
shlb
or
xchg
mov
imul
adc
cs
into
push
fistps
loopne
fcmovnu
inc
jl
bound
mov
inc
inc
in
jo
std
test
std
fidivrl
gs
fsubs
test
xor
fiaddl
jbe
lret
fcoml
mov
dec
adc
cmp
xchg
jmp
or
sti
test
pushf
or
rcrb
sbb
aam
adc
cmp
cmp
xchg
in
or
fucomp
inc
gs
cmp
cltd
mov
jb
sub
sub
xor
imul
lahf
iret
mov
bnd
das
xchg
pop
pusha
push
and
cmc
xchg
aaa
cld
mov
jnp
sbb
rcl
mov
loopne
aad
outsl
cmp
push
xchg
int3
pop
sub
or
mov
lods
mov
or
clc
rorl
dec
xchg
jle
mov
pop
fs
imul
out
mov
sbb
mov
push
mov
pop
dec
pushf
outsb
aaa
out
aas
xchg
mov
adc
rol
lcall
inc
push
ret
adc
cmp
inc
dec
iret
mov
jecxz
xor
add
inc
fs
push
dec
mov
mov
out
stos
sub
out
cmp
jb
lods
or
fsubs
lret
add
outsb
inc
pop
mov
mov
mov
adcl
mov
or
les
add
clc
xorl
dec
and
loope
dec
in
or
xchg
ror
mov
xor
test
and
add
cmp
push
ja
cmp
cmp
adc
and
popa
data16
and
hlt
int3
movl
lds
in
lds
out
and
js
ds
pop
mulb
mov
sbb
jp
mov
cmpsl
push
sbb
pop
lea
inc
ja
mov
jno
sti
cmpsl
jp
pushf
mov
pusha
cmpsb
inc
push
pop
mov
outsb
cmpsb
sub
xchg
push
and
sbb
xorb
sbb
nopl
jg
mov
jne
shlb
mov
inc
mov
test
ss
lcall
cli
sub
das
iret
mov
mov
jge
inc
mov
ret
cmp
icebp
sarb
xor
cmp
stos
fisttpll
aaa
fnsave
into
dec
cmp
cmpb
aad
and
fwait
mov
adc
add
adc
or
pop
arpl
aas
adc
inc
shrb
shlb
inc
fdivl
xor
setne
jg
add
ret
in
fwait
repnz
add
je
dec
cmp
lds
scas
cmp
insb
dec
mov
add
aaa
mov
je
inc
add
pusha
pop
insl
push
imulb
and
scas
dec
hlt
enter
std
arpl
lret
movb
mov
jge
jns
sarb
rclb
icebp
or
andl
adc
ja
cmp
addb
jae
cmp
adc
cmc
sub
cmp
cmp
inc
ss
push
xlat
inc
lahf
std
outsl
push
out
ss
cmp
fsubs
sub
ror
or
pushf
div
rcr
mov
cld
aad
mov
arpl
test
push
mov
test
sbb
outsl
addr16
ror
das
sbb
cld
xchg
jo
test
dec
das
mov
pop
aam
js
xchg
adc
js
sub
and
jne
jge
shll
push
fwait
and
lock
fnsave
xchg
jbe
shl
sub
push
loop
sarl
push
xchg
test
std
push
xor
call
lds
imul
dec
dec
xlat
lock
pop
fdivr
scas
xor
pop
sbb
xor
sbb
add
roll
test
test
enter
and
aaa
and
sbb
mov
stos
int3
out
add
xlat
lock
cli
rcrb
shlb
aam
mov
stos
iret
xor
loope
inc
jle
mov
adc
xor
lock
cmp
scas
lcall
mov
mull
and
cltd
mov
add
fcoml
sbb
mov
cmpsb
out
xor
mov
jecxz
dec
mov
cmp
cmp
inc
in
enter
in
dec
cmp
inc
mov
call
add
hlt
dec
mov
xchg
add
aas
ja
mov
pop
push
sub
fisttps
adc
cmc
lds
push
in
call
sti
adc
jp
je
adc
imull
push
inc
test
add
mov
subb
rcl
xor
pop
push
and
call
and
out
push
dec
and
out
in
mov
cmp
insb
pop
inc
and
mov
js,pt
jmp
jl
mov
add
not
aas
fucomip
stos
adc
popa
mov
xor
sbb
cld
out
lock
testl
ret
inc
lret
push
outsb
push
bound
or
ret
cmpsb
call
incb
mov
fsubrp
stos
and
push
in
jo
bound
mov
and
fs
hlt
mov
sub
push
imulb
jmp
and
scas
jbe
imul
es
addr16
rol
ja
movsl
aas
mov
andl
inc
fmull
xlat
shrl
repz
shlb
sub
push
loopne
jl
aam
pop
push
inc
cmp
jno
pop
jecxz
aad
iret
test
or
movsb
stos
jge
fucom
adc
cmp
mov
mov
jmp
cmp
and
sbbb
lahf
add
pop
arpl
addl
gs
arpl
sbb
lahf
sbb
adc
and
shr
testl
les
push
pop
dec
test
fidivs
ret
js
mov
lock
jmp
inc
sarb
divb
lods
mov
insb
decl
mov
push
xchg
jo
scas
loopne
xchg
mov
js
cmp
inc
andb
jne
repnz
cmp
cmp
cmp
xrelease
mov
and
stos
xchg
inc
cmp
popf
pop
lcall
mov
test
cli
jl
ret
sbb
lcall
lods
mov
sti
pushf
add
dec
dec
or
mov
pop
jg
sub
dec
push
imul
outsl
push
loope
sbb
dec
repnz
fdivrp
js
inc
inc
xchg
and
dec
mov
mov
push
addr16
fidivrl
adcl
imulb
imul
out
les
in
pop
insb
out
repz
shl
arpl
cwtl
jl
mov
repnz
sbb
dec
testl
scas
add
arpl
mov
mov
xor
pop
inc
aad
ja
aad
dec
pop
sub
arpl
pop
mov
subl
pop
ljmp
jae
dec
or
cli
mov
and
fwait
adc
xchg
inc
cmp
pop
cmp
xchg
lock
or
fsubrl
inc
pop
lea
das
into
shll
insl
mulb
add
add
jne
xor
cwtl
mov
cmc
je
addl
movsbl
mov
ret
push
outsb
jp
jne
aam
inc
stos
xor
cmp
and
add
pusha
xlat
adc
cli
push
push
out
xor
lahf
mov
daa
loop
das
stos
xchg
and
jmp
dec
xchg
in
xor
cs
into
cli
loopne
outsl
imul
cmp
push
test
sbb
adc
mov
or
adc
fiaddl
in
mov
cs
sbb
rcrb
sar
adc
pop
lcall
cld
jo
sub
stos
fbld
imul
dec
or
inc
stc
pop
test
xchg
mov
mov
in
gs
dec
cmpsl
push
and
les
sbbb
mov
cltd
and
movsb
andl
sahf
ljmp
dec
xchg
mov
pop
aaa
and
loopne
int
lea
enter
hlt
sahf
xchg
sti
test
loop
jmp
cmp
or
push
movsb
enter
rcl
mov
movsb
sbb
int
jns
test
iret
ds
jmp
inc
sub
xor
imulb
sub
jge
and
lods
mov
mov
jae
adc
add
mov
sbb
jg
test
shrb
cld
in
push
fdiv
or
cmp
shlb
xchg
das
fbld
jo
cmp
dec
subb
aaa
sarb
lods
jb
scas
xchg
decl
adc
and
xlat
inc
or
dec
push
fldenv
mov
xchg
fidivl
or
shlb
repnz
outsb
in
dec
movsb
fprem
push
mov
movsb
dec
jne
or
addr16
sbb
fdivl
mov
aas
fmul
mov
dec
fsubrl
or
or
aas
jns
xchg
mov
fmull
xor
cmp
imul
sbb
outsb
shlb
into
jle
pop
or
mov
mov
aam
mov
imulb
and
clc
jno
sbb
rorl
and
out
inc
jmp
repnz
pop
pop
aas
or
test
or
xchg
ror
clc
loope
mov
mov
mov
xor
jns
sub
fcoml
sub
xor
jno
add
scas
xor
mov
mov
mov
mov
jnp
and
in
fstps
pop
adc
movsl
sub
xchg
mov
shll
sbbl
push
sbb
mov
ja
cmc
add
out
or
xor
cmp
or
mov
iret
pushf
or
insl
sahf
mov
shll
es
fbld
add
clc
jle
sbb
fisttpl
xor
add
and
loope
test
movsl
je,pn
fwait
movsb
btr
int
xchg
das
pop
inc
push
xor
call
push
daa
adc
jg
sbb
sbb
inc
test
outsb
pop
in
ret
pop
jmp
mov
les
test
lret
push
mov
mov
insl
adc
or
mov
std
lods
das
mov
mov
stos
scas
pop
fld
jb
pop
sub
adc
lahf
xor
out
push
outsl
test
mov
leave
push
sbb
xor
pop
hlt
outsb
xchg
hlt
cmpb
jae
out
jp
or
mov
movsb
mov
lret
mov
imul
pop
push
push
ljmp
lret
ret
add
add
repnz
notl
loop
mov
mov
xchg
andl
lods
mov
out
popf
insl
mov
sbb
mov
jno
xchg
cwtl
loope
adc
imulb
xor
pop
testb
xchg
add
loope
mov
sub
in
hlt
xlat
out
call
cmp
xor
jne
nop
and
xchg
xor
inc
popf
push
aad
jbe
ret
inc
imul
fwait
movsb
nop
and
jp
movsl
cld
or
in
jae
xchg
mov
add
aaa
nop
mov
push
cmpsl
jg
jmp
xor
xchg
lcall
mov
loopne
inc
inc
pop
xlat
movsl
xor
push
jmp
jmp
lret
dec
jge
or
addr16
push
mov
es
and
xchg
pop
mov
cs
mov
out
jge
out
mov
insb
outsl
push
aad
inc
mov
jns
xor
shl
stos
pop
in
jae
mov
mov
cli
cld
pop
mov
or
aaa
cmpb
lock
inc
cmp
hlt
fs
mov
iret
call
shll
xchg
push
mov
jp
xlat
push
jb
iret
cwtl
cmp
mov
shl
movsl
mov
jmp
notl
stc
xchg
iret
xchg
hlt
imul
xor
daa
dec
dec
or
shll
cs
lcall
int3
cmp
in
push
xchg
or
cmp
rcl
sti
xchg
cld
cmp
jmp
stos
mov
imul
xorb
out
ja
push
stos
mov
inc
mov
icebp
mov
cmp
je
pop
divb
adc
int3
mov
in
mov
ror
fdivrs
test
cmc
dec
jle
xchg
ljmp
or
fmul
pop
mov
ja
push
cmp
jmp
out
insl
pop
xor
mov
mov
xor
lcall
imul
into
bound
add
pop
cmp
xchg
mov
pop
fistpl
cmp
cmpsl
jne
sbb
sbb
decl
out
cwtl
pusha
into
sbb
mov
fdivrl
fs
jp
jns
mov
mov
lcall
xlat
popf
scas
pop
cmpsb
mov
inc
or
or
aad
je
adc
mov
int
repz
rorb
mov
dec
in
jnp
les
jmp
inc
mov
pop
and
aaa
pop
rcrb
cmp
notl
mov
test
into
jnp
xor
out
jbe
ficoms
or
stos
fsts
lds
xchg
xchg
xor
ret
rcrb
add
aad
loope
cli
pushf
mov
mov
ljmp
mov
stos
push
sbbl
lods
add
rorl
je
mov
xchg
dec
mov
enter
xchg
insb
mov
push
mov
sub
mov
das
dec
in
daa
inc
cwtl
pop
mov
and
outsb
xchg
jnp
and
dec
aas
cmp
pop
pop
xor
fistps
jecxz
mov
insl
pop
sub
daa
aaa
jl
mov
ficompl
push
or
cmpsb
push
add
idivb
sbb
in
fldt
add
inc
adc
mov
jle
sbb
sub
dec
jnp
cmp
ds
xor
add
repnz
inc
and
pushf
gs
lret
xchg
ljmp
mov
outsl
and
push
icebp
popf
mov
sbb
push
push
std
movsl
mov
ret
cs
or
pop
xor
loopne
adc
mov
insb
and
adc
or
or
ret
inc
mov
aas
test
push
push
mov
divl
adc
mov
mov
aad
add
cld
addb
ljmp
addb
inc
fistps
fcomip
clc
add
mov
test
int
push
or
and
and
in
mov
push
popa
sahf
push
adc
and
cmp
xchg
div
nop
ret
or
shl
fistpl
xchg
jmp
cwtl
or
aad
cmp
int3
xor
xchg
bound
ret
pushf
fstl
lds
js
test
mov
mov
mov
movsb
jo
cmp
sbb
shrb
cmpsl
sub
add
shll
outsb
in
hlt
sub
mov
xor
jp
shl
sti
dec
cmpsl
bound
jmp
push
ss
mov
jecxz
jecxz
and
pop
pop
xchg
xor
cmp
or
imul
pop
dec
cmpsl
or
ljmp
jbe
sahf
jnp
fld1
xor
bound
dec
aad
enter
imul
fldl
insb
mov
fsubp
hlt
and
mov
pop
rclb
daa
push
nop
sbb
ret
pop
jmp
or
scas
imul
inc
cmp
rcrb
mov
rorl
jecxz
pop
xor
fbstp
das
mov
icebp
mov
iret
jbe
movsb
mov
scas
pmaxub
or
arpl
push
sbb
int
jae
mov
pop
mov
lret
mov
and
jb
jge
push
lds
dec
aas
mov
mov
lock
scas
pushl
mov
push
rorb
mov
or
cltd
stos
cwtl
mov
jo
mov
out
sub
and
xorl
lcall
jle
push
sub
fdivrs
pop
dec
and
mov
les
imul
push
mov
cwtl
lods
sbb
pop
and
out
cmp
outsb
notl
pop
js
ds
lret
xchg
bound
sub
mov
mov
cmc
mov
cmp
jbe
or
dec
test
fidivs
movsl
mov
adcb
inc
mov
in
or
sbb
loope
add
mov
and
outsl
sub
xchg
dec
loop
or
cwtl
sub
mov
push
jecxz
cmp
inc
push
xor
rol
shlb
mov
mov
or
or
mov
cs
popf
jmp
adc
enter
mov
sub
lahf
in
mov
push
dec
add
add
or
rcrb
sbb
cwtl
leave
xor
xchg
int3
lcall
sbbl
xchg
jnp
scas
bound
cli
cmp
xor
sub
fcoms
jae
rorb
jl
jnp
mov
mov
push
add
out
mov
cwtl
push
sti
adc
jecxz
imul
sub
or
test
jp
orb
mov
xor
outsb
sub
jg
in
sbb
movsb
int
lods
sub
outsb
loope
mov
dec
sbb
mov
or
das
push
jae
sub
lods
mov
mov
daa
add
test
pop
fbld
inc
cwtl
mov
in
inc
sub
dec
mov
scas
cmp
je
fldcw
and
popa
pop
adc
loop
pop
xor
hlt
sysret
jp
int3
rorl
mov
daa
mov
xor
fsubrl
inc
int
or
xchg
pop
stos
dec
fidivl
mov
lds
jno
mov
test
mov
inc
xor
push
rcrl
jb
add
cli
sbb
sbb
push
pop
jne
mov
scas
cli
notl
nop
lock
shlb
sub
mov
fistpll
cld
inc
push
jmp
push
outsb
push
ret
pop
lahf
xchg
adc
bound
jo
dec
sbb
sub
insl
xchg
jge
clc
bound
cld
or
mov
out
adc
cmp
addr16
in
movsb
ljmp
cmp
in
mov
or
push
outsl
xor
pop
cmp
xchg
mov
je
adc
mov
int
xor
mov
ljmp
cwtl
in
ret
rorb
test
pop
icebp
stos
scas
cmp
sbb
rcrb
dec
sub
adc
ljmp
ss
test
int
pop
mov
push
scas
test
faddl
mov
xchg
mov
add
stos
insb
pop
inc
push
cmp
fsincos
andb
rcrl
jnp
pop
mov
ret
ret
push
inc
sub
mov
aam
fcmove
mov
frstor
or
mov
pop
xor
add
push
sbb
adc
incb
pop
dec
or
aas
dec
int3
xchg
movsl
ds
sbb
cmc
int
out
into
push
inc
sbb
in
mov
jmp
clc
pop
xchg
decl
add
mov
sub
aas
push
pop
adcl
jo
xor
mov
add
insl
mov
or
call
leave
daa
xchg
push
adc
mov
adc
idivb
xchg
sub
jg
lock
xor
idivl
jae
popf
js
fmuls
add
pusha
scas
mov
push
xchg
sbb
imul
shl
mov
mov
push
or
loope
cwtl
das
push
test
in
test
or
push
dec
cmp
jmp
sub
in
rorl
ss
push
mov
cmpsb
mov
adc
adc
and
or
mov
pop
fstps
mov
xchg
inc
loopne
mov
insl
adcl
lods
or
or
jno
inc
mov
dec
jb
mov
jmp
xchg
jbe
sbb
dec
jecxz
push
ret
cmp
fimuls
mov
rcrb
leave
cltd
out
adc
in
arpl
lahf
adc
out
cld
ficoml
out
fldt
pushf
xchg
or
dec
push
sbb
imul
mov
imul
scas
push
dec
popa
sub
mov
hlt
scas
xchg
stos
int3
insb
inc
mov
xchg
js
pop
push
fimuls
cmpl
xor
add
xchg
mov
data16
fucomp
dec
sub
repnz
dec
cmp
inc
xor
in
pop
pop
jl
loope
mov
iret
mov
inc
and
mov
cmpsl
nop
lods
fdivrs
stos
mov
add
popf
pop
pop
add
sbb
jecxz
xchg
mov
mov
out
out
dec
das
mov
sub
mov
pop
sub
xor
jge
jmp
pushf
cltd
and
push
and
mov
push
or
pusha
rolb
inc
mov
ss
jno
push
cmp
add
movsl
enter
inc
xchg
aam
icebp
shl
cli
jae
mov
sub
push
sbb
je
mov
jae
shlb
xor
lret
dec
dec
fs
jp
inc
or
es
pop
jp
clc
stc
xchg
cltd
dec
xor
scas
cmp
sub
movl
or
pop
cmpsl
add
mov
adc
shrb
jp
dec
loope
cs
daa
adc
sarb
lds
jbe
stos
lea
cmpsl
cwtl
mov
bnd
ljmp
mov
xor
jmp
cltd
out
jg
popa
lcall
jmp
mov
pop
or
jnp
adc
fs
ficompl
sbb
mov
lods
aad
insl
lds
jns
fisubrl
in
push
popf
jmp
xchg
cmp
popa
pop
inc
jmp
dec
push
and
mov
jl
inc
dec
shll
lock
push
in
pop
or
jo
or
arpl
xor
fwait
cmp
shrb
pop
xor
sbb
fdivr
pop
scas
pop
push
mov
movsb
lahf
and
pushl
ds
clc
sub
inc
jmp
inc
stos
xchg
push
or
add
jmp
stos
mov
sbb
popf
pop
dec
sub
xlat
mov
and
fwait
in
mov
jno
and
jg
and
cmpsl
jno
sbb
nop
out
inc
shl
mov
incb
mov
mov
adc
test
cmp
jo
fwait
push
dec
pushf
movsb
and
jmp
pop
rcrl
int
test
fwait
sbb
pop
stc
cltd
jl
xchg
stos
or
push
mov
cmp
dec
test
sub
mov
fdivrl
xchg
mov
out
mov
hlt
js
fisttpl
push
mov
xchg
cli
mov
sub
jno
repz
shr
idiv
lds
mov
pop
push
outsl
stc
shll
lods
xchg
mov
jg
test
enter
pop
dec
add
dec
mov
dec
add
xchg
pop
and
stc
dec
cmp
fdivrl
and
int
add
fwait
and
stos
and
xor
add
test
cmp
stos
sub
jnp
fwait
adc
loope
popw
rcl
inc
popa
lret
mov
jnp
mov
loopne
movb
xchg
add
lds
mov
inc
and
lcall
inc
jle
sbb
fisttpll
jle
fnsave
mov
and
xor
xchg
or
out
jne
adc
xorl
jnp
jecxz
fldenv
cmp
mov
mov
jb
and
cmc
out
outsb
imul
add
adc
mov
jae
cs
ret
xchg
sub
jnp
fcoml
sub
mov
std
movswl
fcoms
mov
adc
xchg
cmp
and
bound
shll
mov
or
jecxz
into
cmpsb
clc
out
es
daa
out
enter
ljmp
cmc
data16
mov
pusha
push
jge
mov
leave
clc
or
out
es
pop
and
callw
inc
scas
push
pop
adc
xchg
inc
xor
pop
shll
push
test
movsl
dec
shll
cmp
add
sbb
mov
dec
addb
lods
add
cmc
pushf
mov
xchg
ss
cmpsl
out
mov
in
push
xchg
sub
insl
stc
cmp
adc
adc
add
jg
or
outsl
adc
push
mov
loopne
xchg
flds
adc
mov
out
aam
repnz
jmp
and
in
pushf
sub
or
pop
jns
dec
jbe
fcoml
mov
into
sahf
mov
sbb
mov
adc
mov
sub
mov
add
push
mov
cmc
and
data16
mov
push
adc
test
ret
psubb
iret
loop
int
sub
insb
orb
loope
sub
fimull
mov
ficoml
pushf
add
jno
mov
inc
loopne
or
xchg
in
sub
repz
lock
cld
sbb
jno
fidivs
xchg
mov
outsb
mov
pushf
cmpsb
repz
cs
adc
addr16
adc
inc
add
cmp
gs
hlt
fimull
lret
mov
aas
sbb
sub
scas
mov
shll
es
stc
inc
out
jne
xorb
pushf
dec
frstor
int3
es
xchg
pop
addr16
jns
adc
and
jmp
sub
xchg
fsub
cld
add
push
add
in
sbb
stc
aam
rcll
and
sbb
cmp
addr16
jp
inc
repnz
cld
add
mov
imul
inc
xchg
xorl
mov
dec
sbb
cwtl
int3
outsl
movsl
out
cltd
cs
jae
mov
xchg
adc
jmp
jmp
mov
pop
dec
add
sbb
jnp
mov
jg
int3
frstor
dec
cmpsl
or
xor
je
shlb
lcall
in
lea
jbe
jae
enter
mov
mov
xchg
aad
out
sub
push
cmp
xchg
sub
leave
push
test
arpl
test
dec
imul
cmp
loop
mov
xor
in
add
mov
lds
adc
xlat
adc
sub
cltd
cmp
in
pop
or
mov
jle
xchg
es
fidivs
gs
fstps
adc
push
cs
sub
mov
cli
stos
dec
test
ss
push
push
jecxz
or
icebp
jnp
in
jle
mov
cmp
clc
inc
jae
sub
xlat
mov
subb
cmpsl
mov
add
call
or
push
rcll
mov
loopne
cmpsl
inc
cmpsb
pop
mov
mov
pushf
push
push
xchg
sbb
stos
inc
lods
test
out
sub
in
pop
jecxz
hlt
mov
ror
cwtl
rcll
xor
jg
jle
jae
lcall
cmp
or
mov
data16
xchg
xor
mov
inc
stos
neg
dec
in
cmpsl
mov
xor
loopne
mov
mov
sbb
jp
mov
add
push
shrl
or
aad
mov
int3
lret
jo
dec
mov
or
rorl
lock
add
in
fs
mov
inc
mov
adc
pushaw
pop
cmp
mov
lahf
adc
mov
xlat
jno
sbb
xor
lcall
gs
sub
adc
lea
dec
ret
js
mov
jmp
mov
fwait
jns
pop
movsb
and
shl
div
pop
adc
add
sub
mov
add
scas
int
jnp
jno
xlat
xchg
rclb
in
ss
mov
enter
repz
testl
mov
mov
mov
mov
ss
pop
loope
test
rcr
mov
push
in
mov
cmp
rclb
cld
fisttpl
and
sbb
mov
mov
outsb
imul
push
pushf
push
ja
fs
pop
pop
lods
lret
lods
cmp
imul
mov
addr16
test
mov
pop
mov
aaa
and
push
fiadds
stc
aad
sbb
popf
adc
movsl
pusha
loope
sbb
insb
stos
arpl
sbb
xorb
lahf
inc
push
inc
sbb
mov
sub
mov
dec
pop
sarb
icebp
xchg
shl
aaa
pop
sbbl
popf
jp
imul
jae
push
out
rclb
test
imul
or
mov
jecxz
jbe
inc
imul
je
in
cli
cmpl
pop
out
cs
sub
out
dec
subl
or
arpl
pop
je
testb
and
xchg
dec
push
push
dec
xchg
into
push
dec
lret
adc
fdivrs
inc
xchg
mov
sbb
sbb
pop
push
sub
enter
lds
xchg
fidivl
hlt
add
sub
ss
cmp
call
sub
mov
out
gs
imul
sbb
frstor
hlt
insl
xchg
ficompl
fstps
and
mov
add
out
xchg
lret
ss
pop
adc
adc
push
movsl
ss
jae
fiaddl
aam
add
fstpt
sub
jl
mov
aaa
fsubr
mov
fcomi
inc
or
insl
hlt
sub
js
pop
mov
mov
jecxz
jg
or
pop
mov
mov
adc
scas
ret
push
in
inc
bound
jmp
and
ss
mov
iret
into
push
xchg
or
dec
popa
mov
sub
fucomip
push
test
dec
cmc
dec
mov
add
bound
add
xchg
jns
push
pop
in
mov
pop
and
and
test
stos
sub
vshufps
or
jge
mov
int3
xchg
aad
jmp
pop
add
xchg
insl
jne
popa
andb
orl
nop
out
and
sub
push
shrb
test
adc
movsl
sub
mov
int3
data16
outsb
ficomps
or
lahf
aaa
pop
adc
or
lds
dec
fbld
fadds
fwait
hlt
icebp
mov
fldt
mov
inc
or
aaa
mov
int
push
fstps
int
dec
sub
cmp
mov
cs
decl
lret
adc
mov
cmpsl
mov
int3
mov
and
push
jb
jne
mov
xor
mov
cmc
outsl
popf
testl
testb
lds
jl
sbb
stc
inc
push
xchg
adc
pop
xchg
lods
cmp
add
or
imul
lret
dec
decb
sbb
jle
movsl
inc
mov
nop
sub
xchg
xchg
out
xchg
and
xchg
dec
test
jecxz
dec
mov
adc
adc
or
aas
xor
mov
in
fnstsw
orl
shlb
ds
mov
xlat
bound
jmp
cmp
mov
aaa
mov
cli
dec
insb
sahf
int
ljmp
push
loopne
lret
and
adc
mov
fistl
mov
cli
mov
inc
mov
cmp
pusha
push
stos
adc
mov
shlb
bound
les
push
inc
jg
lock
imul
js
jns
mov
adc
push
daa
das
imul
in
outsl
mov
sbb
int3
sti
out
sbb
ja
imul
xchg
lods
dec
sub
fbld
ja
and
add
shl
gs
add
inc
sub
jns
unpcklps
lret
inc
out
inc
pop
aad
mov
push
inc
shr
or
pop
imul
into
hlt
ss
sbb
rolb
jge
adc
pop
iret
mov
jne
inc
rcrl
cmp
xor
push
insl
adcb
test
out
jne
loope
adc
lds
lds
les
hlt
and
scas
movsb
icebp
pop
xchg
jecxz
jge
cs
pop
cwtl
mov
mov
gs
jb
pusha
fmull
dec
lret
sbb
or
and
int
inc
jp
lahf
jne
pop
mov
leave
or
insl
loope
aas
pop
movsb
sub
mov
inc
scas
push
adc
scas
mov
sub
push
add
outsl
mov
les
adc
push
mov
fs
and
mov
xor
iret
or
xchg
push
or
in
adc
xchg
sub
pop
cmp
jno
lock
xor
inc
sbb
movsb
inc
inc
cmc
xchg
outsb
leave
push
pop
pop
add
jb
sub
dec
movsl
scas
adc
xor
add
addl
adc
paddsb
push
mov
jns
push
icebp
pushf
iret
cli
out
xchg
add
xchg
jmp
pop
out
lea
inc
fists
pop
bound
loop
loop
mov
push
fstl
dec
insl
shlb
enter
push
cltd
inc
dec
arpl
mov
mov
push
nop
jecxz
inc
pusha
jne
outsl
mov
aam
jmp
imul
andb
es
mov
imul
cwtl
pushf
inc
cld
or
lods
cmp
jno
dec
cmp
dec
loopne
test
mov
mov
pop
jae
pusha
push
and
jmp
cmp
xlat
push
rcl
out
mov
cmp
clc
adc
data16
repz
in
mov
insl
ret
or
repz
imulb
fdivs
out
aam
ret
push
dec
push
cld
cmp
mov
loopne
mov
mov
add
shll
or
push
aad
mov
push
xchg
jmp
cmp
dec
push
js
inc
push
nop
dec
hlt
cmp
aam
fisttps
daa
dec
sbbl
int
push
pop
inc
push
movsl
mov
ds
push
or
pop
loop
sbb
pop
outsb
jl
push
push
cwtl
mov
rcl
les
mov
mov
call
cltd
jne
pushf
cmc
sbb
notb
outsl
popa
mov
push
lret
adcb
xor
cmc
jno
out
iret
mov
cmp
lock
pop
test
pop
adc
ds
bound
sahf
jnp
or
iret
push
pop
mov
imul
jecxz
je
xchg
pop
sub
and
ret
fldt
dec
test
push
xor
outsb
xchg
or
inc
stos
xchg
lret
nop
loop
mov
ja
sub
adc
fiaddl
out
or
sub
jmp
cmp
leave
cld
icebp
cmp
cmp
in
scas
cmp
cmpsb
icebp
adc
enter
xor
push
push
mov
stos
ds
xor
nop
push
inc
mov
je
push
lods
pop
pop
std
clc
mov
add
sub
or
dec
xor
sub
nop
jae
mov
dec
mov
sbb
mov
mov
sub
push
inc
iret
pushf
push
lret
mov
sarl
test
out
jg
int3
sub
ljmp
jbe
outsl
pop
in
sub
cmp
sbb
scas
je
hlt
and
xchg
lea
mov
aam
xor
inc
popl
pop
adc
ja
sub
push
add
ljmp
in
lcall
inc
xchg
pushf
out
bound
pop
adc
es
lret
adc
pop
add
push
xchg
mov
add
lcall
data16
mov
movsb
loop
aas
inc
and
popf
jns
fdivl
add
imul
mov
dec
add
pushf
dec
aam
mov
mov
adc
addr16
mulb
add
stos
jns
mov
jbe
cwtl
scas
jbe
add
lahf
int3
jmp
fisubrs
imull
pop
ss
ret
loope
mov
add
repnz
insl
fdivrl
sahf
sub
cmp
xor
dec
shlb
pushl
dec
aaa
jp
loopne
inc
out
sbb
je
je
and
in
sbb
jns
pop
jne
jge
addr16
dec
inc
or
cld
or
jne
movsl
inc
xchg
mov
rorb
push
pop
xchg
int
push
cmp
add
xchg
mov
sub
les
call
mov
fisubrs
adc
add
and
pop
jle
fisttps
mov
rclb
dec
xor
jo
out
jno
leave
cltd
push
mov
es
xor
mov
pusha
gs
movsl
jmp
mov
cs
mov
push
sub
lods
inc
and
jo
xor
xchg
int3
cmp
fldenv
jae
nop
test
xor
ficoml
sub
mov
cmp
mov
dec
stc
int3
add
out
dec
fcoml
aas
es
test
mov
lods
jle
ret
mov
push
or
fmulp
fsts
rcr
addb
les
dec
or
jnp
push
cltd
lods
js
push
lods
adc
loopne
mov
dec
cmp
xchg
scas
ja
repz
xchg
mov
mov
lahf
and
adc
mov
push
jno
adc
arpl
jb
out
push
repz
and
cmpsb
push
mov
dec
mov
sbb
xor
aad
xor
jb
pop
adc
adcb
cmp
jecxz
rol
stc
xor
repnz
mov
mov
cmpsl
aam
push
out
sahf
loop
lret
pop
ret
lea
adc
in
mov
cmpsl
mov
inc
push
sbb
pop
sbb
fisubl
and
cli
pop
push
insl
insb
jo
dec
push
xchg
orl
stos
jmp
testl
mov
into
and
fmuls
gs
in
jge
sub
clc
popf
push
xchg
ss
lret
aam
out
in
push
fmulp
dec
sarb
aas
loope
xor
jne
mov
mov
out
aad
shrb
sarb
dec
inc
fstpl
cwtl
push
add
or
push
and
dec
adcb
mov
jge
fcompl
push
xchg
xchg
cmp
pop
fcmovbe
mov
inc
rcrb
jae
mov
sbbl
push
fwait
outsl
rcrb
mov
popa
cmpsb
pop
or
add
cld
js
inc
aam
jnp
lahf
nop
sub
cmpsb
xor
push
jmp
aad
sbb
mov
sbb
add
lcall
push
xlat
test
cmpsl
sti
mov
popf
loope
mov
pop
rcrl
ret
iret
push
ljmp
dec
jno
and
fsts
cmpsb
jno
jmp
jne
xor
jg
mov
jns
shll
insl
repnz
jb
mov
or
jecxz
cmp
mov
cmc
in
cld
movsb
loop
fs
cmpsl
test
orl
jmp
fdivr
fisubs
inc
and
sets
cld
xor
es
cmpsl
cld
push
mov
addr16
scas
lahf
xor
cld
jmp
cwtl
xor
sub
repz
cmp
in
andl
arpl
sub
outsb
mov
insl
jo
jne
mov
cltd
cltd
in
rorb
sub
mov
dec
cmp
push
dec
xchg
inc
dec
stc
cmpsb
repz
pop
xchg
es
jmp
es
in
mov
or
inc
and
mov
fcomps
pop
es
jns
inc
dec
shll
xor
jo
aad
jl
fmuls
sub
out
and
xchg
sub
dec
cmp
push
sub
adc
push
jnp
xchg
sub
popa
movsb
insb
mov
sbb
int3
in
int
lods
sbb
sbb
add
push
pusha
adc
inc
out
lds
je
pop
add
pusha
pop
push
sbb
call
sahf
and
adc
fcoms
adcb
xchg
and
push
jo
xorb
add
mov
inc
loope
adc
dec
xchg
cmpb
and
adc
mov
jno
xchg
jnp
sub
mov
mov
cli
outsb
bound
xchg
stos
pop
ja
jmp
xor
mulb
xor
mov
test
jl
push
addr16
dec
and
cld
cmp
xchg
inc
iret
xor
les
lock
test
and
jns
loopne
add
mov
addl
adc
add
stos
cwtl
jae
or
subl
es
add
jl
sbb
lods
mov
lods
mov
dec
cli
in
xor
pop
mov
xchg
mov
dec
fildll
bound
sub
or
add
scas
fidivrs
xor
pop
call
add
clc
in
mov
xchg
mov
call
mov
dec
xchg
lods
cmp
jno
dec
into
dec
fs
aad
out
push
mov
cwtl
add
push
es
pop
lds
cltd
inc
aad
dec
fwait
sbb
inc
jo
add
rcrl
and
stc
pop
pop
mov
outsb
mov
jecxz
sub
mov
dec
dec
pop
mov
es
cs
das
lcall
dec
or
mov
in
dec
out
jmp
iret
mov
cmp
fbstp
pop
mov
dec
out
push
fidivs
sbb
push
ljmp
flds
aad
insb
jb
mov
push
mov
mov
lds
mov
mov
pop
pop
xchg
or
xor
or
xor
xor
and
cmp
pop
xorl
test
and
jecxz
das
cltd
mov
cs
int
add
es
jecxz
mov
pop
clc
stos
adc
pushf
shrl
subb
insb
mov
adc
stos
les
stc
cmp
mov
adc
out
lret
mov
jecxz
clc
mov
test
dec
aaa
sbb
lds
stos
jmp
stc
jecxz
aaa
cmp
subl
fs
push
push
nop
nop
mov
lcall
push
cmp
adc
and
dec
les
inc
xchg
insb
sub
sbbl
inc
push
or
push
sub
je
lahf
mov
mov
jo
subl
in
push
das
inc
lret
test
xor
mov
jge
mov
inc
lret
xor
adc
testb
fmuls
daa
stc
or
fildll
arpl
adc
push
cmc
add
mov
inc
xchg
pop
loopne
and
xchg
sub
and
dec
push
insl
fsubs
push
loope
dec
xor
lret
fidivs
js
xchg
dec
inc
jo
or
subb
dec
add
and
dec
push
adc
or
stc
pop
adc
outsb
imul
add
fwait
sub
aam
insb
jge
lcall
cmpsb
push
andl
inc
test
xchg
test
fimull
xor
mov
mov
adc
daa
cmc
and
xor
and
ret
lea
lods
mov
in
outsb
inc
das
inc
repnz
dec
jl
cltd
arpl
jge
fstps
mov
xor
movsb
dec
dec
pop
nop
aas
pop
mov
inc
push
sub
and
cmp
ljmp
mov
in
pop
mov
stos
mov
negl
pushl
je
int3
cmpsl
mov
loopne
or
scas
xchg
xorl
sbb
and
call
shlb
jns
mov
mov
sbb
pop
xchg
mov
aam
and
push
aas
aam
cmp
lret
icebp
jno
repnz
mov
ret
jb
add
dec
fldt
pop
xor
jnp
inc
negb
cld
pop
scas
and
adc
jns
xchg
dec
loope
loopne
add
push
or
or
je
iret
push
or
out
xchg
mov
sbb
xchg
push
jp
mov
out
popf
push
ljmp
push
dec
jp
mov
inc
das
push
hlt
push
mov
mov
jg
pop
mov
jb
add
and
jno
xor
flds
and
leave
sbb
push
aad
cmc
lret
pop
adc
aas
nop
push
cmc
dec
popa
cmp
adc
xor
push
cmp
xchg
mov
sbb
jno
sti
jb
lcall
mov
push
cltd
mov
push
mov
jne
iret
dec
mov
loope
pop
cmp
push
jmp
pop
xor
test
and
clc
or
imul
stc
xchg
jb
xchg
mov
outsb
pop
shrl
fdiv
and
clc
xchg
push
out
out
dec
f2xm1
mov
mov
mov
mov
movsb
mov
fdivrl
popf
inc
pop
mov
je
mov
jecxz
aad
jle
jae
loopne
sbb
fstps
adc
or
shll
insb
dec
rorb
out
mov
mov
adc
sub
into
pop
inc
or
jl
notl
sub
insb
jne
xor
out
je
lret
mov
jbe
cmpsl
mov
lret
adc
add
xchg
es
nop
hlt
jae
dec
xchg
icebp
int
faddl
xchg
dec
imull
hlt
cmp
jecxz
lret
cmp
or
push
sbb
xor
jns
jmp
dec
es
push
lret
cmpsl
jmp
insb
inc
out
push
stc
jae
xor
stos
and
repnz
aam
mov
mov
clc
push
loop
sbb
jbe
mov
cmpsl
mov
pop
add
pusha
out
fcmovnb
or
movsl
mov
xchg
mov
dec
inc
push
fnsave
das
mov
jo
arpl
mov
inc
loop
stos
cmp
pop
lods
and
jmp
fildl
add
push
sub
fmull
mov
jae
mov
xchg
push
ja
es
adc
jge
insl
jb
stos
and
mov
popa
bound
sbb
sub
mov
add
ret
xor
mov
aam
cmp
or
les
cmpsl
mov
pushf
jbe
mov
popa
dec
and
jbe
cmpsb
aad
lods
mull
cmc
enter
imul
cmc
sub
add
addr16
sbb
ret
mov
pop
popa
das
pop
dec
aam
popf
stc
test
roll
stc
fwait
shrb
xchg
das
icebp
pushf
fs
xchg
push
popl
mov
js
or
jg
mov
pop
outsb
push
xchg
xor
nop
mov
in
xchg
cltd
ret
cld
jcxz
retw
mov
daa
mov
bnd
lahf
std
xchg
data16
cmpsb
int
adc
or
outsl
xor
pop
push
add
pop
popf
adc
fsubl
pop
push
xor
decl
enter
js
mov
popf
stos
xor
pusha
int3
addr16
cli
sahf
or
add
push
and
or
cmpsl
loop
mov
push
push
xor
cld
enter
mov
jl
in
into
adc
mov
movsl
mov
jns
pop
ret
pop
pop
push
jg
mov
pop
pop
fsts
aad
dec
test
shr
test
enter
mov
jmp
jle
xor
ljmp
xorl
je
or
mov
jb
lcall
add
sbb
xchg
inc
push
popa
icebp
add
add
mov
popw
xor
inc
les
fcmovnbe
mov
jl
loop,pt
inc
ret
sub
add
xchg
push
icebp
sbb
sahf
xor
and
pop
inc
pop
mov
and
mov
push
xor
fistps
mov
push
lret
fld
ss
cltd
push
leave
cmp
call
stos
xchg
xor
jmp
sahf
push
faddl
inc
jb
test
xchg
pop
gs
push
jmp
rcr
jno
ja
pop
sub
mov
push
add
hlt
jb
adc
jae
push
adc
lahf
xchg
dec
push
dec
test
cwtl
orl
js
call
pop
pop
clc
or
arpl
out
push
mov
shrb
imul
or
dec
sbb
cmp
fcomp
lcall
je
mov
js
cltd
jbe
lret
aam
jge
das
cmp
int3
push
mov
lret
sub
stos
in
push
pushf
jns
dec
mov
rep
sub
pop
fdivp
jecxz
insb
cmp
adc
repz
pop
mov
loop
nop
sub
es
stos
and
shrl
xchg
std
testl
fidivs
dec
pop
insl
and
int
or
and
cwtl
notl
xchg
xchg
jnp
cmpsl
push
dec
adc
mov
inc
in
fldcw
xchg
sbb
mov
paddsw
inc
pop
jno
outsl
pop
mov
fidivs
or
add
xor
xchg
scas
cmpsb
bound
jo
ss
mov
adc
jnp
xchg
or
jmp
test
mov
rcr
mov
push
push
lret
js
ret
std
dec
bound
imul
mov
pop
jcxz
into
out
push
pop
fs
iret
inc
mov
cmc
rcrl
jle
lcall
cmp
neg
mov
mov
push
cmpsb
jg
lret
jl
dec
jecxz
xchg
cli
pop
xchg
jge
test
pushf
jne
cmp
cltd
movsl
cmp
in
je
repz
test
xadd
fsubp
lcall
lcall
mov
or
loopne
fimuls
mov
push
jno
dec
mov
inc
bnd
hlt
push
cli
sbb
scas
sub
aas
cli
jmp
rol
lods
sbb
sub
sbb
incl
xor
and
jp
jl
and
aas
xchg
push
xchg
or
cli
insb
fs
les
push
call
fs
xlat
scas
out
lds
xlat
xchg
xchg
push
fnstsw
mov
adc
sarl
lea
xchg
dec
push
xor
into
mov
dec
mov
cmp
jecxz
jge
cli
mov
mov
mov
xorl
sbb
sub
push
scas
mov
or
frstor
sub
int3
pop
pop
xor
or
sub
fisubs
ret
lea
add
int
ljmp
enter
jge
cmp
sub
loop
lret
cmpsl
dec
les
jmp
jo
lahf
pusha
xchg
cltd
mov
nop
inc
cli
xchg
lret
dec
pop
arpl
fs
push
push
jnp
cmp
push
call
ljmp
xchg
add
xchg
dec
mov
cwtl
cld
cltd
lock
or
cmp
inc
cmp
stos
lahf
push
pop
jg
std
cmp
add
push
cmp
mov
movsl
int3
fisttps
xor
jl
in
dec
fcomi
or
cmp
jle
push
mov
dec
fisubrl
loope
cwtl
stos
cltd
push
js
and
aad
push
bound
in
sub
cmp
cltd
cmp
jo
mov
scas
lahf
imul
jp
xchg
aaa
std
ds
test
lcall
jae
or
sarl
sub
jecxz
jnp
xor
std
xorb
fisubs
cmp
in
lock
in
mov
pop
cmpsl
adc
mov
js
nop
mov
sbb
ret
jl
xchg
dec
les
cmp
sbb
add
gs
sbb
shlb
inc
push
add
xchg
dec
push
jns
mov
out
fwait
xchg
jnp
cmpl
rclb
sarl
dec
mov
loope
sbb
fidivs
test
dec
outsb
enter
imul
push
popa
sbb
mov
lods
test
into
fmuls
jb
jno
push
inc
repz
mov
out
xchg
sub
sbb
mov
mov
pop
push
popa
lea
sbb
inc
push
fadd
jb
bound
jle
inc
cmp
pop
inc
adc
cmp
xchg
jg
insb
lods
jmp
push
jle
push
outsl
mov
movsl
sub
lds
movsb
inc
cli
call
int3
aas
jbe
inc
loope
test
add
aas
cltd
inc
addr16
movsb
xor
rolb
rolb
es
sub
dec
outsb
stos
int
cmp
xor
into
xchg
adc
mov
outsl
mov
mov
fcomps
jo
cltd
das
scas
bound
ret
xchg
sub
or
rcll
imul
mov
sbb
push
inc
jnp
add
insb
lcall
shl
inc
dec
dec
dec
and
and
fmuls
andps
out
push
sbb
stos
adc
cwtl
repz
je
pop
adc
outsl
xchg
xchg
jb
push
cmp
cwtl
or
repnz
mov
testb
imul
loope,pn
movb
push
js
subb
xchg
xor
sti
sahf
adc
push
pop
pop
cltd
jge
cs
or
decb
cld
adc
and
jge
jnp
icebp
xchg
cmp
mov
push
sub
and
mov
les
mov
sbb
sbb
pop
cmpsl
adc
inc
mov
dec
pop
mov
lock
sarl
adc
jecxz
or
dec
xor
pop
xchg
push
fldl
in
jg
jne
cmc
push
mov
sahf
out
sub
push
push
je
shlb
cmp
in
inc
dec
xchg
pop
ljmp
cmp
xorl
fisubrs
je
out
popf
sub
adc
inc
sti
mov
mov
pushf
jg
mov
xchg
and
jecxz
sbb
fsubl
mov
lods
into
push
loopne
in
adc
jge
gs
mov
mov
lea
adcl
add
outsb
push
add
ljmp
popf
sub
adc
loop
cmp
xchg
push
dec
cld
pop
cmpsb
push
pop
xor
adc
sbb
fildll
adc
jle
dec
xchg
jno
mov
das
xchg
lea
aam
lds
sbb
xor
adc
xor
mov
jnp
int3
dec
jle
adc
push
cmp
dec
call
leave
pop
dec
sub
sbb
js
jo
mov
push
shll
and
aad
ficomps
cs
mov
xchg
pop
push
inc
loope
dec
and
add
test
xor
ds
popf
dec
jae
mov
cmp
lret
in
sub
jnp
stos
mov
mov
icebp
or
ja
outsl
jno
xchg
out
jae
insb
mov
fimuls
cmp
loopne
add
add
cli
aaa
jl
and
lret
popa
sbb
and
int
aad
cmpsb
add
ja
pusha
fadds
js
dec
pop
rcrl
sbb
in
notl
mov
xor
xchg
scas
xchg
cs
repz
xchg
fmuls
fs
ret
mov
cli
ja
inc
xor
int
mov
cld
cmpb
das
ret
mov
loopne
push
jae
ds
mov
cmc
mov
cmp
xor
push
into
aas
aaa
in
out
lret
push
jno
clc
test
push
sub
lahf
mov
pop
push
dec
ret
loope
mov
xchg
pop
add
mov
inc
lock
int
add
hlt
subb
cmc
ljmp
insl
pop
cmc
test
out
cmpsl
jae
mov
jge
je
addr16
inc
mov
enter
add
adc
sbb
movntdq
stc
mov
mov
inc
add
cld
mov
inc
xchg
into
dec
dec
pop
and
adc
imul
xchg
xor
jecxz
jo
jo
and
or
dec
js
sbbl
jge
pop
pop
aad
pop
jle
jb
adc
movl
aad
daa
movsb
je
xor
jo,pt
ret
cwtl
cmc
cmp
xor
fstpl
add
push
sbb
mov
adc
div
aad
adc
push
jae
inc
out
adc
pop
jle
add
addr16
mov
leave
pop
jb
enter
test
jb
lock
cmp
fistl
xor
pushl
xchg
sahf
fists
xchg
mov
pusha
insb
inc
pop
or
xchg
or
jmp
xchg
jnp
dec
lret
cmpsb
hlt
data16
pop
lods
cmp
cmp
sbb
hlt
and
mov
fsubrp
jp
or
mov
cs
pop
sbb
lret
ret
xchg
cmp
cmpsb
dec
inc
repz
add
cmp
jno
push
js
testb
xchg
cld
mov
pop
arpl
test
rcr
dec
mov
pop
ljmp
shlb
test
mov
dec
mov
cmp
leave
inc
push
cmc
mov
shll
fs
pop
sbb
lret
mov
jae
push
push
add
mov
hlt
mov
push
cmp
rorb
movsl
sbb
lds
clc
into
int3
in
jno
lds
out
je
xchg
out
movsl
cmp
iret
enter
and
sbb
and
lods
sti
imul
sahf
push
xchg
fadd
push
negl
insb
cli
adc
pusha
cmc
mov
adc
mov
rcrl
lret
cmpsl
mov
data16
pop
or
inc
pop
push
lods
jae
xchg
push
bound
cmpb
jnp
adc
fcoml
movsl
clc
sbb
cmp
xchg
sbb
insb
dec
cmpsl
inc
das
bnd
mov
mov
mov
and
push
push
out
jo
mov
enter
add
and
dec
mov
leave
imul
call
dec
fisttps
rcrb
fdivrs
cmp
mov
negb
jb
push
test
out
cmc
xor
cmc
jmp
and
xor
ret
test
mov
roll
xor
in
cmp
les
xchg
fmull
fildl
rcr
insb
stos
mov
dec
push
push
test
test
es
jge
sub
xlat
das
ljmp
push
cmp
sti
fwait
dec
jb
idivl
adc
iret
test
ja
xchg
test
add
lret
repz
out
les
mov
sub
mov
xchg
pop
lock
cmpb
pusha
outsl
hlt
sbb
cmp
and
lods
loopne
sbb
push
or
jecxz
cmp
pop
xchg
loope
inc
jns
cmpsl
nop
cmp
sub
aad
jno
js
in
cmp
mov
dec
xchg
pop
rol
out
xadd
jp
dec
adc
jg
and
and
inc
bound
insl
cld
in
pop
pushf
mov
push
xchg
sbb
repz
ja
add
sbb
add
jecxz
or
cli
ficompl
loopne
insb
aaa
add
sti
jno
jp
sbb
jne
push
pusha
lea
lahf
lahf
inc
popf
mov
nop
sub
test
and
cmpsl
mov
mov
and
cmp
ds
lock
aad
lret
mov
add
movsw
cmp
inc
jecxz
jnp
shll
or
stc
out
or
lea
loopne
das
xor
sbb
xchg
or
pop
mov
js
sti
stc
stc
movsb
inc
inc
shlb
js
enter
xchg
xchg
xchg
inc
iret
and
ds
push
mov
jae
sub
mull
inc
das
adcb
das
test
rclb
sbb
xor
mov
js
mov
lea
or
lock
sbb
mov
push
jge
dec
rcr
add
sub
arpl
out
add
push
sbb
xchg
adc
mov
mov
or
lahf
push
pop
xor
loope
dec
test
mov
inc
cmc
sbb
inc
popa
inc
and
dec
int
or
daa
int3
ret
pop
mov
jbe
out
push
sub
dec
inc
mov
sub
fldt
mov
pop
inc
mov
ljmp
das
je
jno
push
add
push
or
lcall
ds
mov
fmulp
pop
xchg
inc
out
shrl
pop
and
adc
pop
mov
out
dec
repz
repnz
jge
das
push
jge
and
repz
pop
pop
push
stos
push
add
out
test
mov
push
inc
mov
divl
test
cwtl
fs
inc
add
fcmovbe
int
push
cmp
rorb
pushf
das
imul
mov
and
movsl
arpl
out
xor
xchg
rcll
xchg
gs
roll
shrb
fstp
cmpsb
xchg
hlt
aam
sbb
mov
jp
mov
gs
lods
push
inc
sbb
and
xchg
mov
shl
sahf
popf
or
test
or
dec
testb
push
test
rorl
imul
out
and
jnp
sub
push
imul
fmul
int
data16
fldt
je,pt
xor
lea
test
xchg
pop
sbb
or
dec
imul
mov
fld
sub
mov
cltd
or
bound
xchg
push
pop
cmp
mov
push
and
push
sbb
pop
add
push
xorl
sub
or
add
sub
xchg
mov
ss
in
outsb
inc
fists
rcll
aad
sbb
push
gs
into
rolb
or
dec
call
flds
mov
pop
fstl
mov
std
push
pop
xchg
fcmove
xor
imul
imul
sub
add
mov
push
scas
daa
daa
mov
lcall
psubq
bound
cmp
and
sub
mov
push
push
in
mov
jnp
repz
xorb
loope
mov
pop
lods
inc
adc
sbb
push
sub
inc
and
je
stc
mov
jl
mov
pop
sbb
xchg
mov
fwait
and
cmpl
inc
outsl
mov
cli
adcb
mov
leave
push
es
xorl
push
out
sub
mov
dec
iret
cmp
gs
mov
xor
xchg
xchg
das
fstl
jns
fstpt
inc
cmp
idiv
and
lds
xchg
push
fisubs
lret
pop
scas
xchg
push
ret
cmp
or
cltd
aaa
outsb
out
rorb
int3
scas
cmp
lock
mov
add
add
fisttpl
clc
daa
stos
push
xlat
push
xor
fdivp
lret
xor
in
stos
mov
pop
jae
push
test
lret
mov
in
fiaddl
jle
xchg
xchg
lret
hlt
mov
add
sub
jno
pushf
jne
ss
or
mov
sub
jae
push
cmpl
mov
rcrb
inc
lret
inc
lret
test
and
jl
inc
neg
sub
shlb
pushl
sbb
dec
insb
flds
and
cmp
cmp
call
mov
data16
mov
scas
mov
into
add
sub
xchg
mov
sbb
loop
dec
dec
jle
jg
mov
fmuls
pop
cld
lret
pusha
ss
imul
xchg
push
int3
mov
cmpsl
int3
dec
ja
jae
dec
push
jb
pop
adc
or
jle
mov
test
mov
mov
jb
mov
cld
mov
lods
inc
fdivs
repz
out
testb
rcrl
insl
sbb
fwait
xor
aam
ja
pop
mov
jmp
in
add
insl
xor
leave
test
stos
popa
cmp
mov
xchg
aad
repz
cmp
loop
je
shlb
addr16
sub
ljmp
adc
dec
ja
addl
loopne
jb
sbb
lock
pop
xchg
cmp
sub
xor
jb
sub
stc
push
push
je
xchg
int3
inc
xchg
inc
pop
aaa
ja
in
lods
push
or
xchg
mov
xchg
ret
xchg
stos
xchg
popa
fists
je
xchg
push
pop
add
adc
test
xchg
add
xor
xchg
push
fdiv
sarl
xor
fisubl
arpl
js
mov
ficomps
pop
adcl
add
mov
push
dec
fwait
ss
inc
lds
dec
bound
xchg
cld
filds
jae
fsubl
in
fistps
or
dec
inc
xlat
aaa
nop
aaa
jmp
pop
inc
inc
stc
and
mov
clc
add
mov
pop
add
jnp
xchg
pop
add
mov
es
inc
xorl
jge
vaddps
dec
sahf
inc
and
mov
xor
cmpsb
shr
loop
mov
ds
jo
push
cwtl
inc
cmp
jmp
lods
inc
sub
repz
ret
push
out
pop
dec
daa
test
dec
mov
arpl
ffreep
imul
call
les
mov
push
jge
sbb
or
cwtl
add
mov
or
sarl
aas
dec
movsl
adc
repnz
pop
or
test
test
push
push
jp
sub
push
jmp
dec
jl,pn
xlat
add
scas
outsl
xor
pusha
push
mov
les
push
mov
pop
jnp
cmpsb
push
fdivp
leave
in
push
js
call
fadds
cmpsl
leave
mov
in
and
cmp
call
int3
push
push
mov
fmul
xchg
lahf
mov
dec
stos
jmp
or
pop
xchg
dec
or
sbb
sti
mov
dec
and
lret
inc
push
xor
cmp
pop
fwait
sub
pop
in
leave
int
sbb
inc
push
ficompl
xor
pop
iret
jnp
jmp
fwait
xchg
adc
inc
sti
into
xor
inc
loop
push
mov
mov
in
lret
dec
in
dec
adc
xchg
loopne
dec
pushf
and
push
jg
xchg
pause
mov
or
fnsave
les
mov
mov
testb
jne
jbe
arpl
cmp
mov
mov
cmp
mov
mov
sti
pop
fs
setle
pop
push
xchg
scas
xor
popa
int
dec
jp
test
mov
sbb
hlt
add
notl
inc
xor
and
fs
jo
sarb
push
mov
cmp
lret
dec
roll
std
sub
aam
mov
xchg
sub
fdivrl
jne
sub
fwait
mov
cmp
call
fcoms
aad
jo
xchg
cmc
push
sbb
stos
shlb
and
cmpsl
pop
lea
hlt
rol
or
loopne
jmp
mov
pusha
mov
dec
pop
sub
aad
add
jecxz
xor
push
dec
sub
rolb
enter
xor
push
cmc
call
mov
je
pop
cmp
xorl
nop
pop
pop
into
lahf
mov
loope
sbb
jno
mov
cld
roll
pop
cwtl
pusha
jg
fs
not
jmp
and
cmpsl
aam
mov
fcoms
cmp
mov
sbb
xchg
add
push
mov
mov
fnsetpm(287
xchg
lock
into
out
add
test
adcl
out
lret
mov
fidivs
sbb
out
rclb
shrb
shrb
fldl
fisttpll
sbb
test
lcall
test
cmp
xchg
or
or
ss
cmp
outsl
sti
repz
dec
jo
inc
mov
sbb
lods
mov
imul
pop
inc
push
stos
inc
mov
out
mov
mov
mov
pop
pop
iret
cwtl
xor
mov
cltd
mov
xchg
in
push
ss
mov
xor
call
add
sub
fs
inc
xchg
add
mov
inc
decb
xlat
frstor
test
sahf
icebp
cli
mul
sbb
aaa
movsl
cmpsb
xor
shrb
or
arpl
mov
call
jae
push
pop
cmc
xor
adc
mov
cmpsl
std
jmp
jns
lea
pop
cmp
inc
out
sub
fwait
and
fnstcw
enter
cwtl
mov
decb
and
dec
dec
mov
cwtl
lock
sub
cltd
repz
pop
aas
cmp
int
rcll
std
test
inc
push
insl
jmp
inc
mov
mov
stos
cli
mov
sub
jnp
ja
jge
or
es
mov
push
mov
dec
jnp
ds
ja
mov
pop
movsb
xorb
adc
inc
jbe
movsl
xchg
js
imul
lahf
xchg
loope
ds
int3
push
inc
imul
daa
adc
fistpll
scas
out
popf
cmpsl
out
mov
xchg
jne
adc
rcl
lcall
mov
add
xor
test
or
pushw
div
adc
cld
leave
cmc
add
mov
fmuls
jecxz
dec
sub
out
sub
ja
and
and
rcrl
pop
or
mov
in
pop
testb
mov
adc
and
in
repnz
dec
cltd
pop
xchg
sahf
addr16
insb
or
jo
xorb
lcall
aas
aas
cwtl
scas
pop
pop
stos
scas
aaa
cmp
adc
arpl
pop
out
dec
ljmp
in
cmp
rcl
les
inc
aam
jne
sbb
filds
testl
dec
das
mov
xor
lock
fisttpl
add
aad
push
ficoml
xor
add
iret
jb
and
mov
cli
add
lret
or
call
mov
pop
mov
mov
xchg
push
shll
loop
cli
movsl
scas
outsl
jae
add
jp
aad
push
sub
mul
xor
lret
or
test
add
jmp
loope
imul
jge
pop
inc
xchg
push
popf
adc
cmp
xor
imul
shlb
ds
pop
add
jmp
ss
sahf
jne
shl
shrb
jmp
adc
insl
inc
mov
xchg
cld
sub
jecxz
movnti
cli
aam
mov
insl
dec
xor
sbb
pop
sbb
les
ud0
inc
nop
xchg
xchg
mov
and
sbb
cli
loopne
bnd
mov
jecxz
cmc
xchg
mov
pop
dec
push
aaa
insl
daa
insl
mov
push
outsl
sbb
and
add
push
cmpsl
add
mov
cmp
and
sbb
nop
adc
pop
adc
and
hlt
mov
xor
mov
cmp
sub
in
push
add
add
andl
lea
sub
inc
mov
pop
and
xchg
out
add
ss
cwtl
pop
loope
sub
stos
push
jns
iret
lahf
mul
xor
shll
push
xor
cmc
jg
pop
repnz
lret
dec
lods
cs
mov
fisttpl
mov
ja
aam
mov
pusha
fs
or
push
sub
call
out
leave
ja
jae
adc
pop
push
or
mov
addr16
pop
mov
cmpsl
inc
subl
fldcw
sub
inc
test
dec
fidivl
aaa
sbb
ret
mov
fldenv
sbbb
pop
sbb
ret
sbb
sub
sbb
mov
adc
ret
pop
mov
and
mov
cmp
push
cli
aas
cmp
jmp
xchg
cmp
and
xor
mov
fsubl
jg
aaa
repz
push
lret
adc
mov
or
cmpsb
shl
or
and
mov
fisubs
in
xchg
add
gs
leave
mov
addr16
inc
jmp
rolb
ja
mov
shrl
pop
push
add
sbb
ret
mov
or
stos
xor
dec
mov
fmul
lret
sbbb
mov
cs
jae
push
test
movsl
pop
andb
mov
call
movsl
or
lea
jae
data16
int
mov
movsl
add
or
xchg
xchg
mov
mov
xlat
es
push
cmp
repnz
scas
das
lods
sbb
jne
sbb
test
int3
mov
adc
add
bound
push
ret
dec
fsubr
push
push
dec
inc
mov
fwait
mov
xchg
je
push
vpandn
mov
fbld
or
popf
jmp
sbb
inc
adc
cmpsl
aas
cmp
cmp
push
jle
aaa
aaa
dec
adc
mov
insl
je
loop
imul
ds
adc
shlb
xchg
vpand
sub
or
lret
cmp
inc
mov
inc
xchg
inc
dec
inc
in
mov
cs
es
sub
inc
push
stc
popa
xchg
icebp
adc
mov
mov
mov
or
repz
mov
adc
mov
ja
xchg
and
push
aam
mov
mov
mov
sub
adc
sbb
mov
mov
mov
pop
ja
mov
add
mov
outsb
ja
xchg
or
ret
rclb
test
xchg
imul
fmull
movsl
sub
mov
rol
sub
pop
out
imul
xchg
and
aaa
out
mov
push
and
jg
push
cmc
in
daa
inc
mov
cmpsl
cmpb
push
je
out
sub
inc
insl
sbb
fisttps
call
push
mov
add
xchg
adc
inc
mov
push
xorb
and
aaa
dec
clc
lds
jmp
push
stos
jb
shrb
inc
cmp
scas
iret
les
push
outsb
pop
fdivrs
mov
add
jmp
xchg
ret
mov
and
mov
out
scas
adc
xor
cwtl
cltd
cmc
cli
je
cmp
or
shll
push
or
test
notb
xchg
mov
insl
icebp
out
jne
ret
mov
xchg
clc
xlat
es
cwtl
inc
and
mov
test
sub
and
out
stc
mov
cs
jae
aaa
mov
and
push
sbb
jle
push
js
mov
je
sbb
sbb
lock
outsb
or
pop
sub
lock
ja
mov
cmpb
dec
pop
loop
and
mov
sub
xor
ret
stos
and
push
push
rclb
add
xor
sub
scas
adc
stc
xchg
mov
pop
add
push
rol
push
mov
mov
jge
sub
fdivs
cs
lds
addb
fs
dec
fidivl
test
mov
adc
filds
dec
xchg
cli
mov
ljmp
mov
xchg
sbb
pop
mov
ljmp
lret
push
jmp
popf
pop
sub
lret
cwtl
movzwl
pop
adc
xor
sarb
add
inc
test
lock
fsubrl
rcr
fwait
shlb
data16
rcll
xchg
mov
jbe
jle
scas
adc
notb
and
fwait
scas
stos
out
faddl
scas
mov
bound
jge
mov
pop
pushf
cmp
out
rcll
add
icebp
imull
lds
xchg
jl
outsl
jno,pn
aas
or
ljmp
push
leave
sbb
mov
divl
xor
decl
out
das
mov
add
in
sub
repz
cltd
mov
pop
jnp
adc
xchg
je
xor
jno,pn
lock
lock
adc
xor
fwait
out
or
cltd
lahf
imul
sarb
bound
movl
sahf
imul
mov
cmp
mov
aas
and
cwtl
jle
movsb
adc
dec
aam
mov
add
jbe
in
mov
loope
cmp
je
loopne
lcall
test
ret
fdiv
mov
mov
or
cld
and
pop
xlat
shlb
pop
pop
xor
inc
les
mov
iret
push
or
insl
lods
xor
add
imul
jb
in
or
fildll
push
push
inc
scas
ljmp
push
xor
add
fbstp
sbb
fcmovu
lret
mov
sub
mov
les
repz
aam
scas
fistl
rcl
add
push
aad
sti
daa
ds
push
or
js
jp
stc
or
popf
or
and
in
ja
ss
xchg
ficompl
cmp
sub
aas
sub
icebp
push
data16
mov
imul
xor
scas
sub
xchg
mov
js
adc
sub
cmpsb
call
in
test
dec
lret
pushf
pop
lcallw
mov
arpl
cmpb
in
in
aaa
jl
xor
icebp
addr16
jns
out
ds
popa
ss
enter
jo
cmp
jo
or
push
mov
hlt
adc
outsl
int3
lods
xchg
mov
lahf
inc
subl
adc
jecxz,pn
sbb
xchg
lret
icebp
inc
imulb
inc
sub
gs
mov
cmp
addr16
lcall
or
pop
test
pushf
decb
pop
push
inc
push
ja
sarl
fstl
jno
xchg
mov
pop
pop
push
call
pop
sub
xor
aaa
or
getsec
mov
cmp
xchg
sub
rclb
scas
imul
lret
lea
lret
sbb
mov
jmp
cmp
in
adc
cwtl
xor
aas
mov
inc
insl
iret
fidivrl
test
mov
pop
cmpsl
sar
out
mov
mov
push
test
mov
jo
pop
testl
push
mov
sbb
adcb
xchg
and
in
das
mov
xlat
out
mov
inc
dec
in
push
fs
sarb
lahf
jo
jns
mov
fcomp
lret
mov
xor
push
jl
inc
jo
dec
scas
and
dec
les
cmp
push
or
lret
movsb
pop
js
scas
outsl
mov
pop
imul
xchg
je
out
or
gs
push
push
idivb
mov
jo
cmc
ret
and
or
ret
test
xor
test
cli
popa
cmpsb
movsb
mov
mov
lods
or
xchg
stc
in
and
sahf
lods
sub
sbb
pop
repnz
scas
das
loopne
jae
cltd
push
pop
lahf
jle
stos
lods
test
das
shll
pop
inc
add
push
std
mov
pop
pop
xor
push
jl
popa
add
ret
xchg
movsl
inc
fisttpl
ja
lret
int
fisttpl
adc
inc
sbb
cltd
adc
adc
lret
sbb
cmovo
mov
push
push
jl
mov
popa
ret
sub
push
data16
mov
popf
mov
das
addr16
jo
les
call
rcl
cmp
insb
sub
shlb
push
cmp
xor
decl
and
jo
dec
mov
js
pop
and
ret
xor
jl
pop
push
mov
test
push
mov
jmp
rcrl
stos
stos
and
cld
xlat
mov
stos
cs
jp
add
xchg
sub
inc
or
mov
jne
movsl
ret
int3
xchg
sbb
sbb
mov
pop
cltd
add
ret
mov
pop
mov
cmp
fwait
cmp
pop
arpl
push
adc
jb
jnp
dec
mov
pop
mov
fstl
repz
faddp
xchg
and
xchg
adc
das
add
data16
mov
hlt
pop
xchg
addr16
aaa
test
pusha
push
out
cmp
or
scas
mov
imulb
jmp
push
into
xchg
cmp
iret
sbbb
mov
cmpl
jp
stos
lahf
lods
test
lret
pop
inc
movsl
bound
push
xor
int
xchg
push
dec
jb
sbb
pop
fildll
pop
pop
adc
fldl
divb
dec
sti
repz
andl
mulb
in
xchg
mov
and
or
sahf
mov
cmp
or
sub
icebp
stos
call
jbe
call
xchg
jl
les
mov
rcr
push
xchg
dec
je
inc
ret
divl
bound
sbb
lahf
iret
dec
cmp
sbb
xchg
sub
and
push
loope
or
sahf
into
mov
sbb
inc
punpckhdq
mov
out
les
cmpl
sub
push
ds
push
test
scas
sub
and
ss
mov
lahf
dec
test
mov
xchg
cmpsl
mov
jle
fcoms
dec
enter
push
clc
mov
ds
fcoml
shrb
pushf
adc
out
mov
lock
sbb
or
or
push
out
push
mov
shr
lret
cmp
dec
mov
and
dec
lea
cmpsl
lahf
sub
or
lahf
jl
lock
add
push
mov
pushf
sahf
or
ret
clc
in
aas
ds
xlat
and
iret
push
or
xor
jb
mov
cmpb
xchg
push
push
pop
and
repz
mov
xlat
insl
addb
cli
sbb
and
in
roll
pop
arpl
mov
add
push
jb
mov
out
adc
adc
cmp
jae
popa
jb
pop
mov
orb
aas
jno
mov
cld
mov
push
inc
in
cmpsb
sub
jmp
cmp
jae
rorb
pop
ficompl
push
xchg
ds
xchg
push
add
fsub
add
int
test
cmpb
imull
icebp
sub
sub
mov
sbb
loopne
loop
cmpsb
fisttpll
cmp
mov
and
mov
das
mov
xor
fld
ffreep
fistl
push
out
orb
cmp
push
out
fwait
sub
inc
inc
pop
enter
adc
sarb
inc
xchg
iret
cmp
imulb
mov
jl
adc
sti
divb
in
xor
and
out
sub
aad
pusha
and
dec
sbb
push
cmpsb
es
xor
stos
loop
inc
enter
fs
dec
inc
or
xchg
imul
lret
fnstsw
aaa
sbb
cld
adc
sahf
cld
bound
dec
xchg
inc
xchg
scas
dec
orb
xchg
jmp
sub
xor
gs
jne
add
ss
lods
dec
inc
mov
mov
sbb
daa
mov
push
adc
enter
cld
pop
out
xchg
aam
jle
jle
enter
xor
sbb
rorl
xor
push
pop
test
or
call
xchg
mov
mov
ret
cld
and
or
bound
sub
shrl
test
push
sahf
mov
dec
test
aaa
decl
xchg
or
and
pop
push
cmp
mov
in
or
dec
sub
ja
mov
icebp
inc
xor
sti
js
xchg
adc
or
pusha
imul
or
into
jmp
les
dec
out
mov
inc
and
mov
inc
inc
sub
and
fsubrs
cmpsb
int3
cs
call
stos
xchg
pop
lods
dec
or
popf
fsubs
xor
sbb
sbb
mov
bound
cmc
cwtl
mov
shlb
insb
es
sarb
movsl
xchg
jae
add
popf
cs
sub
shll
xchg
lock
call
out
insl
daa
hlt
inc
or
outsb
ja
cmp
pop
lea
push
in
push
in
cld
mov
mov
outsb
lret
fistl
xlat
icebp
dec
std
pop
mov
aaa
fdivrs
xor
mov
loope
sub
imul
add
mov
arpl
adc
movsl
mov
xchg
icebp
ss
push
dec
mov
loope
leave
push
jmp
cmc
mov
ja
and
add
aaa
aad
push
std
fmul
push
outsl
in
xor
sub
and
and
sti
shl
sbb
pop
sbb
ja
xlat
mov
lcall
enter
in
fprem1
xchg
dec
sub
fwait
or
xor
add
adcl
xchg
pop
int
out
push
arpl
or
sarl
fcmove
mov
add
leave
sub
in
cmp
jle
mov
int
mov
inc
mov
sahf
stos
push
dec
pop
dec
adc
sbb
xor
imul
leave
loop
and
jge
push
fldt
and
aas
mov
call
mov
xor
push
cltd
mov
cmp
fcoml
in
test
cmp
pop
ret
dec
dec
lret
and
mov
jg
aas
sbb
orl
std
xchg
test
xor
lock
adc
pop
int3
xorb
dec
out
jecxz
or
mov
bound
pop
and
fbstp
xor
gs
ljmp
je
sbb
sub
sbb
xchg
xor
push
pop
jnp
hlt
or
jle
xor
adcb
pop
cs
inc
sbb
dec
mov
mov
xchg
outsl
dec
sub
pop
hlt
add
sub
lcall
pop
adcb
and
ja
jge
cmp
dec
jp
push
test
pop
xorb
inc
pop
es
call
xorb
scas
repz
fnstsw
jno
cmp
fidivl
jnp
or
loopne
and
js
lods
jl
pop
adc
imul
stos
cld
dec
and
js
inc
cmp
mov
out
pop
dec
ret
push
mov
mov
popa
sub
inc
aam
cmpsb
and
ds
add
movsl
call
cli
jb
jmp
sti
jnp
rolb
scas
imul
xor
mov
pushf
sub
inc
sbb
loop
xchg
and
mov
cmp
je
push
pop
lret
pusha
dec
pop
cli
cmpsl
inc
test
pop
adc
cmp
loope
icebp
jns
mov
outsl
jmp
sub
cli
fs
scas
lret
loopne
mov
pop
test
paddusw
ret
sbb
and
jo
xchg
lret
movsb
into
mov
push
mov
aaa
rcrl
shrl
push
int3
shll
jge
add
stos
xchg
dec
test
and
xor
jns
inc
cmp
adc
test
mov
sbb
jne
pop
push
add
push
mov
push
and
call
in
sub
xor
fistps
in
cmpsl
iret
pop
in
jae
lahf
mov
mov
pop
add
lods
daa
lea
adc
call
push
aaa
scas
out
and
imul
popf
push
pop
mov
add
pop
ret
inc
ljmp
lret
xor
pop
jmp
add
call
jnp
adc
out
bound
int3
add
sbb
sbb
lods
pop
cmpsb
jmp
cltd
fistpll
int
pop
mov
cmp
mov
ret
call
mov
insl
pop
sti
int3
mov
loopne
gs
jle
aaa
sub
dec
mov
adc
insl
mov
rolb
mov
dec
inc
add
test
call
lods
add
das
xorl
xchg
pop
mov
pop
repz
adc
jp
pop
int
out
push
dec
xlat
adc
dec
in
dec
dec
pop
imul
pop
ret
sbb
jo
clc
dec
and
dec
cli
sbb
dec
xor
dec
orb
dec
scas
clc
in
mov
dec
inc
add
pop
xor
xchg
pop
icebp
popf
push
add
jecxz
sbb
loop
pop
push
push
xchg
fcmovu
mov
mov
mov
mov
xor
int3
dec
or
lods
jo
xchg
ljmp
ret
mov
lods
rcrl
cmp
cmc
imul
repnz
lret
dec
hlt
mov
repz
dec
cmp
das
lea
push
jb
jne
out
ss
cmp
pop
cltd
das
push
out
push
xlat
xchg
les
mov
add
and
pop
fmuls
pusha
or
imul
lock
add
test
mov
cmpsb
sub
das
ja
iret
dec
mulb
jnp
pop
and
adc
addb
pushf
or
push
pop
popa
pop
jo
pushf
packsswb
mov
aas
outsl
and
ret
aam
cmp
cs
mov
mov
dec
insb
lock
fidivs
dec
pushf
cmpsl
cmp
jg
sbb
add
xchg
icebp
adc
fisubrs
das
sbb
mov
push
cmp
imul
cli
dec
incl
adc
setl
js
dec
or
dec
je
sub
sbb
xchg
je
xchg
gs
pusha
je
sub
fiadds
inc
sbb
xchg
cltd
adc
out
or
jecxz
aas
mov
insl
aad
pop
jl
mov
mov
stc
out
mov
push
shlb
scas
loop
cmc
push
sub
lcall
dec
ss
mov
mov
sbbl
out
sbbl
mov
inc
fsts
xchg
enter
mov
lcall
jp
sub
inc
mov
or
xor
cli
sbb
jae
popf
bsf
scas
gs
jno
and
dec
test
and
mov
mov
jns
sub
mov
inc
and
jp
mov
mov
iret
faddl
popf
push
add
and
push
xchg
dec
fnstenv
xor
cli
test
and
nop
into
jle,pt
mov
push
cmpb
das
shlb
loop
mov
ret
lret
les
out
rolb
iret
jo
adc
mov
xlat
lcall
shlb
lods
test
push
dec
jmp
mov
xchg
mov
je
xor
in
push
and
fnsave
mov
out
add
cmp
int3
mov
sbb
gs
add
push
push
mov
cmp
mov
push
test
mov
frstor
or
and
jp
mov
fidivl
pusha
jge
jp
jl
ja
sub
mov
jo
mov
in
mov
popf
jmp
outsb
pop
sub
clc
xchg
jle
mull
sbb
xchg
faddl
outsl
sbb
dec
scas
and
dec
jae
fucomp
mov
psubw
mov
or
rcrb
fs
sbb
aaa
enter
pop
mov
addr16
add
negb
aad
mov
cmp
in
jge
dec
rcll
xlat
gs
test
je
int
and
nop
sbb
hlt
leave
les
lahf
jae
push
scas
in
or
stc
fwait
lea
loop
aad
inc
mov
call
dec
jae
fdivs
dec
pop
pop
xchg
shll
xchg
xchg
sbb
ret
sub
pop
test
ja
call
sahf
or
jns
fst
cmp
jnp
hlt
and
sti
adc
and
mov
and
and
scas
dec
out
xchg
xchg
lock
dec
daa
xchg
and
pop
jbe
loop
xchg
insl
pop
dec
in
and
mov
jnp
add
scas
pop
sub
and
popa
sbb
sub
movsb
andb
in
shlb
lret
andl
xor
jg
pop
inc
or
sub
mov
jp
adcb
xchg
xor
or
jl
jmp
pop
mov
cli
orl
sub
pop
cltd
test
insb
in
aaa
test
cwtl
loopne
dec
add
loope
push
sbb
xor
fadd
aaa
ret
mov
xchg
test
mov
cmpl
das
dec
xchg
and
ss
inc
lahf
sbbl
mov
inc
shll
mov
add
out
in
add
sbb
push
sbb
add
mov
mov
lods
mov
leave
mov
loopne
scas
mov
xor
loop
pop
movsl
mov
cmp
add
jmp
mov
push
movsl
adc
ljmp
gs
mov
sub
movsb
cmc
mov
adc
test
or
test
push
pop
pushl
bound
sbb
sub
dec
mov
add
sbb
inc
push
mov
sbb
ret
dec
ret
jo
bound
iret
add
rorl
insl
or
jno
mov
jne
xchg
dec
inc
outsb
iret
xchg
inc
push
fs
pop
lret
or
scas
sti
push
adc
add
popf
repnz
mov
aad
adc
add
dec
jge
jg
xor
add
xchg
mov
push
cmp
xchg
in
xchg
jb
mov
dec
xor
lret
out
mov
out
hlt
mov
xchg
mov
xchg
cmpsb
push
shrl
jo
fcmovu
insl
je
insb
loopne
mov
bound
jo
xor
in
aaa
dec
lret
aaa
and
shll
jle
push
outsl
xor
jne
inc
fsubr
test
insl
mov
add
adc
xchg
inc
or
sbb
icebp
leave
sti
sbb
mov
stos
loop
cmp
mov
fiaddl
lahf
and
jl
cmp
pop
push
lea
enter
push
pop
jnp
mov
imul
inc
cs
or
bound
add
inc
xchg
out
clc
jo
inc
adc
pop
iret
scas
cmpsl
xchg
mov
xlat
and
jae
inc
and
shrb
sub
sbb
inc
push
mov
jg
scas
rcrl
gs
pop
mov
orb
cld
leave
dec
xchg
bound
scas
out
sti
push
test
xchg
push
scas
fidivrs
inc
lods
xchg
mov
movsl
xchg
pop
jns
pop
sbb
lcall
gs
mov
push
sahf
adc
adc
gs
cmc
fstps
or
mov
mov
cmpsl
mov
jmp
inc
fwait
xchg
ret
sbb
rorb
sub
sbb
push
pop
dec
in
inc
push
out
mov
ss
repz
jmp
pop
aas
adc
call
pop
jns
mov
ss
imul
jns
rorl
fmul
mov
or
sub
adc
sti
pop
stc
sahf
daa
jns
loopne
jnp
pop
lds
sub
sbb
push
lock
rol
xor
pop
or
push
cli
mov
xor
stc
shr
ja
push
push
sti
fmull
cs
push
repnz
jno
testb
test
or
in
pop
xchg
lods
xor
sbb
es
scas
jno
jns
movsl
pop
and
loop
mov
imull
mov
jae
sub
mov
or
cmp
mov
rolb
ficompl
and
loope
gs
fidivs
mov
sbb
popf
xchg
imull
scas
addr16
jmp
xchg
ds
xchg
mov
jecxz
imul
inc
cmp
idivb
sbbl
pop
ljmp
adc
scas
fcmove
int3
or
pusha
shll
inc
and
push
pop
out
shll
dec
notl
mov
jge
popa
movsb
icebp
insl
imul
addr16
xor
aam
ret
ret
mov
cltd
adc
insb
jmp
or
xchg
mov
jmp
jge
mov
scas
ljmp
test
sbb
das
adc
arpl
push
push
jg
ss
xchg
cmp
jbe
popf
out
sahf
mulb
loope
inc
adc
push
pop
add
mov
inc
mov
das
mov
mov
lcall
insb
cli
push
sub
jo
or
and
mov
cs
sub
sbb
or
mov
jne
loopne
pop
inc
bound
mov
mov
sub
lcall
andl
mov
jno
enter
in
push
pop
das
mov
dec
xor
lods
ficomps
sahf
xchg
adc
xor
dec
out
rolb
fwait
adc
stos
pop
or
add
xchg
cmp
aas
stos
adcl
repz
hlt
mov
nop
add
xchg
xor
imul
jbe
or
rorb
daa
lcall
adc
push
aad
and
es
inc
mov
gs
adc
ds
sbb
push
add
xchg
or
jmp
jo
cmpsb
xchg
inc
push
push
push
or
int
jmp
mov
cmp
sub
mov
popf
xchg
xchg
das
cwtl
or
sti
popa
cmp
mov
in
out
or
push
outsl
adc
or
mov
jecxz
gs
pshufw
out
mov
inc
push
or
ja
xchg
aam
inc
push
pop
cltd
and
adc
adc
jns
cmp
or
xor
xor
dec
popf
jmp
mov
jo
outsl
je
outsl
ficoms
ret
and
xor
push
adc
mov
xchg
test
pop
adc
stc
add
je
mov
sbb
xor
dec
adc
xchg
mov
outsb
xlat
cwtl
stos
into
sub
sub
fildll
or
sbb
mov
rol
sub
mov
jo
aad
or
call
xchg
xchg
int3
jp
or
dec
mov
push
and
call
mov
sbb
jecxz
push
push
call
and
dec
ljmp
jno
push
loopne
pop
mov
add
cmp
jns
mov
fcoml
pop
fs
sub
jno
in
mov
xchg
fcomip
inc
hlt
or
xchg
cmpl
add
call
fsts
hlt
cmc
pop
ljmp
punpckhdq
xor
int
push
sub
aam
mov
in
stc
push
push
call
ss
sar
mov
dec
add
aam
cmpsb
in
xor
fwait
xlat
stc
sbb
hlt
pop
xchg
xchg
mov
test
pop
pop
sti
pushl
cmc
test
loope
pop
in
icebp
clc
xchg
leave
and
dec
dec
rorl
pop
mov
fisubs
sbb
xchg
sub
pushf
mov
adc
cmp
lret
pushl
xlat
cmp
mov
jg
pop
inc
dec
iret
cli
dec
dec
lods
stc
or
push
mov
or
xor
inc
add
sub
mov
push
jl
popa
shlb
orl
dec
icebp
push
inc
iret
mov
jl
arpl
sarb
jne
mov
cmpsl
adc
aad
jo
insb
mov
xor
vandnpd
jecxz
repz
fsubr
adc
dec
sbb
xchg
jecxz
sbb
lcall
inc
mov
or
out
hlt
dec
lods
loopne
shld
jmp
push
stos
neg
mov
insb
inc
lods
ficoml
sub
jle
jp
and
pop
and
or
jne
int
xor
mov
pop
ficompl
add
dec
shl
xchg
scas
mov
in
popf
mov
mov
loopne
xor
inc
loope
sub
into
enter
cmpsl
shl
lds
mov
pop
es
aaa
sahf
outsl
js
stos
jg
ret
or
loopne
mov
jmp
loope
pop
insb
stos
out
lret
xor
jbe
mov
inc
inc
xchg
rol
push
mov
icebp
pop
pop
mov
xor
or
add
cmp
fmuls
adc
mov
out
mov
mov
lods
sbb
push
mov
cmpsb
stos
adc
aam
inc
sbb
sbb
ja
popf
data16
cltd
addb
or
push
mov
icebp
mov
push
xor
imul
sub
or
dec
jnp
and
pusha
pushf
adc
cmpsl
mov
gs
shll
and
dec
leave
outsl
mov
xor
test
or
mov
jae
js
aaa
push
pop
adc
dec
push
and
xor
add
pop
std
xor
popf
jge
arpl
insb
call
rcll
jnp
repz
add
mov
inc
ds
xchg
xor
push
pop
pop
push
push
sub
xchg
popa
lahf
cltd
call
mov
out
and
add
insb
inc
rclb
lea
pop
cmp
and
mov
xor
mov
pushf
adc
add
bound
jmp
jecxz
inc
push
and
loope
fdivrs
outsb
pop
pop
adc
xchg
inc
and
sub
mov
addr16
imul
call
or
out
outsb
sbbb
mov
xchg
in
jo
add
inc
ja
add
clc
mov
pop
mov
loopne
ficompl
imul
adc
adc
cmp
sub
and
lods
scas
ja
into
outsl
popf
adc
xor
cmp
sub
sti
inc
loop
mov
cld
pop
out
jl
rclb
repnz
lret
push
xchg
or
pop
test
or
popf
fcmovnu
std
test
divb
sub
mov
out
lahf
ret
push
repnz
shll
in
or
data16
lcall
jo
outsb
ljmp
fcoml
mov
push
add
loop
dec
push
icebp
dec
popa
dec
adc
jle
add
xchg
inc
rorl
fwait
and
dec
mov
loopne
jp
push
dec
mov
lahf
in
rcrb
repz
adc
dec
pop
mov
or
fistpl
bswap
fisubl
imulb
dec
mov
inc
aam
enter
mov
sbb
cmc
push
pop
pushf
sarl
fdivl
mov
gs
xor
jg
enter
cmc
jmp
cmp
mov
shll
insb
es
inc
enter
call
jnp
daa
mov
lods
add
nop
dec
ds
cwtl
mov
ss
jo
into
nop
mov
jge
sar
adc
inc
sub
insl
jecxz
in
pop
lods
mov
scas
sbb
cli
push
or
cmp
pop
stc
xor
lret
out
loopne
push
lds
mov
mov
jle
jbe
cli
sarl
hlt
dec
roll
mov
iret
xor
arpl
cmp
push
imul
add
pop
dec
sbb
adc
xor
rcrl
popa
stc
inc
xor
dec
xor
sub
stos
and
jp
movsb
icebp
mov
inc
fsubr
mov
and
leave
pop
testb
lahf
jmp
jns
fcomps
lret
in
shlb
jo
sub
mov
arpl
adc
test
sarb
or
fidivl
add
out
fidivl
xor
loop
pop
dec
dec
movups
jns
jecxz
sbb
pushf
add
jo
mov
cmp
or
mov
inc
not
xchg
gs
and
mov
xlat
add
jg
ljmp
sbb
cmc
xchg
cwtl
push
addl
xchg
pusha
mov
hlt
mov
pop
aam
jl
or
pop
add
adc
dec
push
pushf
jns
pushf
in
mov
icebp
or
pop
lock
aaa
push
repz
adc
imul
ficomps
mov
shlb
ja
and
movsl
imul
outsl
mov
rcr
outsl
outsb
arpl
or
pop
sub
movsl
inc
mov
movsl
daa
cmpsb
sub
cmc
push
xchg
jmp
pop
arpl
pop
cld
std
jg
cmp
mov
add
or
cmpl
cmc
in
orb
push
int
sbb
xchg
mov
cmpl
out
cld
cmpsb
xor
inc
cld
rcr
inc
xchg
push
shrl
fnsave
xchg
popf
lods
push
and
lock
pop
pop
mov
jp
out
in
pop
dec
sub
push
or
loopne
xor
lret
jecxz
inc
out
push
movsl
push
imul
cmc
push
add
cli
cwtl
arpl
movsl
dec
out
in
xchg
inc
jle
int3
or
inc
rcr
ret
dec
fnstenv
aaa
std
cli
lcall
jl
xor
popa
cli
add
nop
push
orb
ss
push
mov
loop
adc
shll
shlb
dec
js
shr
inc
mov
or
inc
loopne
movsl
xchg
xchg
les
test
repz
or
mov
mov
and
mov
dec
sbb
mov
int3
cmp
lret
xchg
jns
sti
mov
sub
lock
insb
fsts
mov
jecxz
addr16
inc
test
add
aas
out
stos
into
mov
ret
mov
pop
cmp
lret
xor
sbb
fisttps
mov
aas
or
and
lcall
dec
inc
cli
adcb
flds
scas
mov
push
aaa
fcmovu
ss
or
aad
sbb
cmp
stos
fxch
mov
xchg
sbb
xor
testl
flds
sub
push
hlt
xchg
sub
mov
fwait
call
out
mov
mov
jge
ffree
add
xchg
mul
mov
mov
leave
inc
out
insb
and
test
or
or
adc
aam
clc
mov
adc
iret
jmp
rclb
lods
cmp
and
cmc
xor
and
push
push
pop
jg
pop
jnp
mov
xor
outsb
ja
jle
mov
xchg
daa
ljmp
cli
mov
je
std
push
xchg
jg
sub
mov
or
shl
repz
cmpsl
inc
add
mov
adc
xchg
ds
in
fdivs
xor
jbe
cmp
inc
cmpsl
scas
arpl
pop
mov
xlat
mov
sbb
mov
sahf
rorb
pop
and
mov
cmp
cwtl
jecxz
lds
ret
cmp
ss
jo
jbe
test
push
iret
pop
dec
dec
call
icebp
xor
mov
and
out
mov
inc
sbb
inc
mov
ret
jo
xchg
or
or
cvttps2pi
xor
cmp
movsl
flds
scas
sub
or
cwtl
adc
xchg
pop
ret
add
out
jne
lret
add
push
or
cmpsl
lods
loop
lret
and
loop
hlt
adc
jbe
fisubl
mov
ja
xchg
xchg
sub
fnsave
test
mov
mov
jae
inc
dec
in
push
dec
push
je
movsl
aam
aaa
push
inc
xlat
scas
aaa
and
sub
xchg
mov
push
cmpsb
inc
jle
mov
ret
xchg
leave
pop
push
xchg
sti
jae
push
dec
pop
ss
cs
and
bound
out
int
test
cwtl
cmp
pop
int
xor
pop
fimuls
push
xchg
jg
addr16
hlt
dec
mov
jne
jmp
push
inc
mov
inc
scas
shrb
xchg
and
cmpsb
jg
mov
jg
inc
add
cmp
and
or
pop
into
xor
sti
repz
scas
jne
cmp
out
jb
adc
cvttps2pi
xlat
and
jecxz
je
out
clc
inc
pushl
das
push
insl
mov
sahf
mov
dec
andb
ret
loopne
xchg
mov
cmpsb
push
test
xor
sub
jnp
sub
sub
out
and
dec
movsl
repz
mov
test
jle,pn
jge
add
fwait
pop
inc
movsl
inc
cmp
lret
dec
pop
mov
scas
push
add
pop
in
inc
push
pop
je
pop
out
stc
or
xchg
ret
sub
push
test
fsub
pop
fcmove
in
std
outsb
ds
inc
sti
xchg
popl
lods
jl
dec
ljmp
in
push
test
adc
lods
add
mov
lds
or
icebp
xchg
iret
fimuls
loope
mov
push
inc
cmp
mov
ficompl
or
sbb
dec
jb
fs
mov
push
faddl
mov
mov
fidivl
icebp
movsb
into
je
arpl
cmp
js
jge
lea
fwait
aam
aad
inc
divl
jne
push
adc
mov
in
push
cmp
mov
das
and
inc
sub
pop
xlat
or
cmp
ss
jno
jno
mov
imul
shll
sbb
fstpl
roll
outsb
insl
movsl
enter
cmp
xchg
fucomip
das
out
pop
jne
jg
mov
iret
dec
xchg
loopne
call
in
inc
or
cmp
xchg
fwait
movsl
dec
test
iret
xor
fwait
mov
insb
xchg
cmp
lret
cmc
pop
mov
rolb
scas
leave
fcmovnu
aam
int
fiadds
imulb
shlb
cmp
sub
iret
pop
testb
push
jl
leave
not
hlt
sub
sub
je
fcomp
fidivrs
cmpsl
or
push
out
sti
jo
loopne
cmc
ja
fldcw
nop
mov
data16
or
dec
cmp
xchg
std
mov
or
lret
iret
test
dec
inc
aaa
mov
mov
jp
insl
mov
repnz
and
fldenv
xor
or
shlb
cld
movsl
cmp
and
mov
and
sbb
sbb
sub
inc
xchg
mov
xor
adc
sbb
insl
sbb
inc
sub
dec
cmp
or
jo
ret
jno
adc
fcompl
mov
inc
dec
call
out
daa
mov
xchg
push
mov
pop
int
arpl
mov
jbe
mov
fs
lea
mov
jg
dec
push
push
imul
scas
mov
cmp
arpl
lret
js
aad
lods
into
aam
xor
mov
int3
jne
stos
cmp
call
cltd
ss
imul
jae
xchg
sbb
xlat
push
jg
dec
xor
les
aad
seto
popa
mov
in
jne
xchg
test
in
pop
inc
cmp
pop
add
push
and
mov
cmp
jo
dec
sub
sahf
sbb
sbb
pushl
xchg
inc
push
ficomps
ljmp
add
lds
add
loop
inc
lods
xchg
out
test
add
and
pop
fsubr
ret
xor
mov
and
push
xorb
movsl
pop
sar
test
mov
inc
cltd
movsb
lea
mov
add
int3
xchg
sbb
ds
mov
lods
fsubs
xchg
divl
je
imul
dec
mov
jmp
stos
js
xchg
sub
add
sub
jns
jg
dec
stos
std
inc
int3
mov
insl
cli
jg
push
loope
push
adc
es
pop
in
pushf
fwait
sbb
xchg
and
cmp
lret
or
mov
sarb
cmc
outsl
and
divl
push
push
cmp
lahf
pop
xchg
inc
mov
xor
push
imul
push
inc
divb
push
inc
repz
cld
add
in
notb
ret
rcrb
ja
or
mov
mov
pop
lcall
sub
pusha
cmp
mov
mov
outsl
insb
in
dec
test
xchg
cmpsb
ss
scas
ljmp
popa
imul
lcall
out
xor
cli
mov
dec
sarl
in
cmc
add
loop
psrad
sti
push
lds
shll
sbb
push
popf
mov
add
lock
negb
insl
insl
push
sbb
inc
jl
sbb
inc
sbb
push
mov
pop
sub
mov
mov
mov
xchg
and
sbb
shrl
pop
fsubrl
inc
dec
xlat
push
dec
add
dec
popf
outsb
or
cmpsb
repnz
test
jle
push
inc
shll
imul
xchg
cmp
jb
sbb
dec
outsl
orb
mov
sbb
fs
popa
gs
shlb
jge
xchg
fldl
test
dec
daa
andl
ss
xor
rcrl
mov
xchg
subl
insb
push
imul
std
xchg
xor
out
mov
lea
popf
inc
and
inc
jge
mov
daa
sub
mov
repnz
xor
inc
push
cmp
mov
cmp
push
jne
push
mov
pushf
scas
pop
push
mov
dec
testb
cmp
aad
loopne
mov
jne
shll
and
repnz
push
push
lea
repnz
lahf
int
movb
push
push
mov
hlt
pop
sub
mov
add
sub
push
xchg
neg
out
push
ret
mov
iret
imul
std
cld
bound
out
sbb
mov
repz
or
jle
xchg
xchg
in
cmp
add
jg
add
and
mov
ret
xor
in
loope
pop
sub
lods
xchg
inc
mov
add
xor
sub
push
cs
cs
push
xor
out
lds
icebp
iret
aas
dec
or
fidivs
sbb
or
xor
or
scas
call
inc
lahf
push
int
push
movsb
pop
push
cmp
lea
ja,pn
pop
sarl
js
lcall
jno
xor
call
fnstsw
mov
sbb
cmp
in
mov
ret
pop
sub
dec
inc
adc
movsb
les
dec
rorl
stos
in
and
ds
test
icebp
mov
js
ret
sarb
shl
or
stos
cmc
inc
lea
out
inc
lds
push
popf
sahf
add
cmc
adc
lods
arpl
iret
xchg
xor
fisttpl
dec
pop
out
jg
ret
cmpsl
pop
sub
inc
push
add
shlb
test
jno
lods
lea
adc
addr16
mov
pop
test
jg
push
xor
sub
data16
dec
arpl
call
movsl
xchg
push
pop
add
xchg
mov
mov
or
dec
xor
push
or
insl
mov
jecxz
and
adc
jecxz
mov
fnstsw
gs
lret
sbb
das
lods
bound
add
lret
insl
lret
adc
xchg
mov
push
adc
clc
fsubrl
stos
sub
adc
adc
test
mov
imul
jl
repz
mov
aad
lret
add
in
scas
pushf
push
fs
cmpsl
lods
out
cmpl
dec
loopne
lds
push
inc
scas
movsb
push
test
sahf
fidivs
cld
sub
push
add
scas
ret
dec
mov
out
jb
and
pop
xchg
shll
jne
dec
mov
mov
movsl
pop
lock
inc
jne
sbb
pushf
sbb
gs
lcall
nopl
stc
xchg
mov
mov
mov
int
cmp
pop
iret
push
mov
stc
push
stc
fucomp
test
lcall
lods
mov
jnp
in
cmpsl
into
and
fdivs
inc
loopne
cltd
ds
roll
aas
jne
stos
nop
fcompl
repz
fisttpl
xchg
and
jbe
or
add
sub
sbb
insl
pop
les
and
lahf
mov
lea
int3
pop
xlat
das
daa
or
mov
xchg
popa
xchg
push
mov
sbb
loop
mov
jnp
nop
jbe
out
inc
fstpl
mov
cli
fs
rol
jae
ret
pop
stos
ljmp
sbb
mov
dec
test
mov
pop
aas
push
fildl
loope
js
clc
mov
or
idivb
in
mov
push
push
std
push
aaa
in
fsub
test
dec
mov
xchg
les
std
jg
in
adc
imul
push
xchg
into
les
cmp
aad
add
fs
pop
subb
lock
cltd
ja
sbb
lods
jecxz
sub
push
jle
popf
pushf
inc
dec
cmc
aas
ficompl
inc
push
mov
jo
add
sub
or
mov
sbb
js
jg
out
sarl
mov
in
pop
lahf
aam
repnz
aam
dec
push
sbb
out
lahf
out
and
and
movsb
out
cmp
ljmp
dec
addr16
or
add
mov
sub
inc
inc
xor
pop
cmp
sti
adc
dec
movsl
popa
adc
dec
cld
imull
out
adc
insb
aam
inc
xor
dec
add
les
lret
cmp
sbb
mov
jns
and
ss
mov
andb
insl
outsb
dec
inc
push
sub
out
xchg
punpcklwd
mov
xor
out
sarl
lods
push
and
lcall
into
fdivr
imul
cmp
jns
sub
int
test
out
hlt
fstps
xchg
xor
mov
pop
lret
aam
push
pusha
mov
push
stos
mulb
and
mov
out
adc
dec
mov
mov
push
mov
pop
dec
mov
stc
sub
repnz
icebp
inc
imul
and
and
icebp
mov
jge
jmp
jne
out
jge
cmpl
cmp
mov
pop
pop
je
add
jp
enter
pop
mov
repnz
lods
lcall
dec
inc
aam
shrl
pop
das
xor
and
xchg
and
cmpsl
out
idiv
jecxz
and
aaa
outsb
mov
mov
orb
flds
movsl
jl
call
mov
imul
or
xlat
cld
fildll
jno
je
ja
mov
fcom
in
fdivl
xchg
jl
cmp
rcrl
in
push
jmp
js
mov
xchg
in
outsb
fmull
push
rol
shrb
mov
jl
lcall
dec
xchg
sbb
shll
add
mov
inc
aam
inc
data16
nop
shll
mov
std
imul
insl
xchg
mov
sub
in
sbb
mov
push
xor
sub
nop
jmp
jg
loop
mov
xchg
inc
mov
sti
cmpsl
cli
lret
lds
sub
out
aaa
nop
push
les
cltd
add
mov
add
outsb
cmc
cld
mov
add
aas
test
or
mov
cmp
add
fs
stos
cmp
cld
jle
sub
movsl
push
xchg
mov
xchg
stos
or
pop
mov
xchg
sbb
loopne
inc
cld
fistps
iret
loop
ds
add
in
xchg
clc
push
jge
and
sti
and
mov
cmpsl
xor
in
adc
and
or
int
out
cmp
stos
daa
shlb
add
jo
xchg
mov
lret
dec
aam
mov
int
mov
push
repz
pop
les
cmc
inc
mov
aaa
repz
push
in
push
jno
mov
enter
aas
loopne
jne
mov
cmp
add
pop
shr
mov
inc
gs
jl
lret
lds
in
aam
adc
pop
adc
or
cmp
mov
aas
test
sub
pop
sbb
in
xchg
in
jle
sub
adc
pop
dec
js
rcl
and
cli
cmpb
aad
sahf
pop
out
mov
jecxz,pn
fimuls
cmp
pop
ret
sahf
in
jmp
jecxz
xchg
ja
pop
jle
and
mov
fnstsw
imul
stos
add
mov
subb
lret
daa
push
push
sahf
faddl
ror
lahf
outsl
dec
cmc
jmp
js
add
or
cs
shr
iret
add
jbe
aam
movsl
fstpl
mov
adc
lock
nop
dec
adc
movsb
adc
and
mov
mov
mov
push
sub
in
cli
out
mov
orl
std
xor
mov
call
dec
dec
push
test
inc
sub
std
mov
and
dec
dec
sub
daa
ret
cmp
pusha
mov
push
es
repnz
push
outsb
repz
loopne
dec
jno
mov
pop
lock
or
sbb
mov
mov
addr16
mov
pusha
ja
fisttpl
pop
imul
sti
cld
in
sbb
fists
jae
push
out
stmxcsr
pop
imulb
sub
mov
and
pop
cmp
stos
push
lcall
sbb
fistpll
pop
lods
add
mov
adc
mov
jle
aam
cmpsb
xor
push
sbb
fidivs
imul
push
mov
sbb
mov
bound
adc
mov
shrl
scas
mov
lods
cmpsl
mov
lret
dec
mov
std
stos
lds
icebp
lret
jnp
push
sti
sti
pop
das
outsb
data16
sbb
adc
lods
iret
mov
out
or
or
nop
outsb
out
mov
stos
push
rcr
aad
popl
imul
sbb
sti
inc
loopne
dec
push
test
mov
push
and
push
mov
rcrb
cmp
pop
push
xor
or
and
or
incb
jo
lret
or
or
jne
sub
push
idivl
dec
je
push
xlat
ss
dec
dec
xor
jle
ja
fcomps
stos
xchg
push
jbe
je
add
or
push
cmp
es
lock
add
pop
mov
mov
test
frstor
mov
xor
je
mov
pop
lret
jge
idivb
movl
hlt
sbb
nop
aam
add
aas
lea
adc
and
jl
inc
std
adc
test
dec
mov
popf
jno
iret
pushf
jns
nop
insl
pop
out
lock
in
mov
test
ljmp
lret
jns
pop
pop
dec
dec
and
xor
bound
push
push
fildll
lock
sti
mov
add
jno
popa
fdiv
and
je
iret
movsb
shlb
rcll
fmuls
push
and
or
mov
movsl
xor
stc
int3
test
loopne
decl
repnz
inc
movsb
lods
addr16
jle
orl
inc
gs
imul
das
push
fcomps
pushf
xchg
popa
dec
push
pop
rcll
sub
jo
loopne
out
fadds
pop
aas
inc
dec
loope
test
pop
xchg
push
ss
xchg
dec
clc
sbb
mov
adcb
loopne
dec
shrb
push
iret
and
or
lret
fidivrl
mov
mov
loop
add
add
clc
push
fsubrp
scas
pop
popa
sub
icebp
repnz
and
mov
push
jae
lahf
mov
push
fsubrs
or
movsl
cmpsb
shrd
out
and
add
inc
in
stos
stos
jbe
push
out
lret
xor
jbe
jns
inc
js
mov
iret
sbb
clc
inc
sub
push
mov
mov
std
sbb
inc
mov
push
cmp
test
and
mov
dec
insb
sbb
mov
cs
jmp
sbb
pop
in
mov
loop
add
ficoml
jecxz
daa
xor
loop
aaa
fsub
into
sbb
inc
sti
dec
lret
loop
jge
hlt
int3
xor
xchg
mov
inc
mov
pop
icebp
xchg
lds
push
jmp
mov
adc
inc
xor
outsb
push
or
mov
pop
push
add
and
popa
bnd
sarl
xor
adcb
notb
dec
dec
and
inc
shr
sub
jge
cmpsl
push
jne
jns
cmp
mov
sbb
ret
lahf
xchg
jl
push
hlt
xor
xchg
push
xchg
mov
or
push
ss
mov
inc
mov
je
sbb
std
mov
movsb
jo
mov
and
pop
idivl
in
fs
mov
xlat
leave
out
jg,pn
sbbl
mov
xchg
pop
std
push
call
lahf
dec
xor
dec
sub
test
sti
push
fidivrl
pop
push
mov
adc
gs
mov
push
sub
inc
sarl
cmp
lcall
cld
mov
sub
xor
das
pop
add
cs
push
jne
rcr
bound
adc
push
andb
out
scas
jge
je
ficoms
and
mov
outsl
mov
cs
sub
and
jno
jg
test
ret
js
xor
mov
pushf
mov
push
push
int
movsb
inc
sbb
fnstsw
xor
aas
psubusb
aas
aad
sub
shr
or
lahf
sti
mov
cmp
loopne
mull
mov
int3
daa
stc
jp
iret
ljmp
adc
mov
or
add
jmp
adc
rolb
rcrl
sub
call
jmp
cs
arpl
mov
fisttps
in
ss
pop
cmp
fcompl
mov
jns
pop
xor
or
xchg
xchg
adc
adc
loopne
fnsave
lret
out
dec
imull
jecxz
sub
outsb
and
adc
clc
xor
xchg
jecxz
xor
stos
push
mov
mov
add
sub
mov
push
shll
and
push
testb
mov
shl
loop
icebp
dec
and
mov
out
clc
ret
lock
xchg
cwtl
loopne
loope
or
stos
xorb
mov
fucomp
and
push
pop
adc
adc
jae
add
test
fisttpl
dec
mov
add
push
js
imul
roll
lods
into
sahf
mov
cli
pop
pop
repnz
dec
adc
ds
out
shrl
js
mov
imul
pop
mov
and
push
ret
lock
hlt
adc
lret
and
outsl
aam
lds
pop
and
fwait
mov
xchg
xor
sub
orl
lea
mov
inc
vmptrst
push
aas
mov
push
js
sti
xlat
int3
sub
das
sbb
or
pushf
popa
and
or
add
fiadds
adc
in
xor
mov
xchg
mov
test
xchg
mov
jns
add
adc
push
jmp
jmp
mov
mov
cltd
add
jmp
outsl
add
xchg
out
ltr
add
or
insl
add
mov
dec
xchg
clc
jecxz
inc
in
lcall
push
push
imul
outsl
flds
add
push
mov
jns
cmp
jp
les
cld
icebp
mov
cmp
xchg
popf
aam
mov
add
mov
in
ret
or
push
inc
iret
ljmp
mov
sbb
dec
jo
sti
mov
xor
mull
cs
subb
pop
xchg
or
sub
mov
ljmp
xor
push
jnp
jecxz
lcall
lahf
int
inc
xor
cmp
hlt
rcrb
sub
add
and
popf
shrb
lds
inc
dec
insb
lds
push
popa
sub
or
fmuls
iret
or
dec
loopne
xlat
insl
jmp
dec
mov
insl
stos
scas
mov
test
pop
rclb
test
xor
scas
mov
stos
mov
pop
out
jb
insl
out
inc
push
stos
sbb
inc
mov
je
pushf
mov
mov
test
cmp
and
icebp
clc
mov
jg
pop
xor
fisubl
fbld
inc
or
mov
push
add
add
jbe
out
jle
loop
sub
lret
mov
mov
rorb
xchg
lret
ss
adc
cmpsl
and
je
in
sub
nop
mov
clc
mov
rolb
xchg
dec
arpl
xor
push
xlat
sub
ljmp
adc
xchg
jno
jne
cli
fistl
push
movsl
mov
xchg
add
and
xchg
pushf
aam
xor
lea
cmc
movsl
dec
mov
std
mov
jo
mov
mov
iret
mov
repz
mov
add
cmp
lock
and
int3
sahf
ret
cmp
mov
mov
loop
fisubs
cli
enter
inc
cmp
stos
lret
je
bts
push
inc
pop
ficompl
cmpsb
add
sub
mov
dec
scas
adc
jecxz
and
ret
inc
or
out
dec
cmp
jmp
loope
add
cs
mov
add
push
int3
enter
mov
cmc
jno
pop
add
imul
sub
mov
rolb
cmp
dec
scas
mov
inc
out
sub
jo
arpl
ficoml
outsl
pop
lret
pop
shll
jmp
sub
leave
fstpt
xor
loope
mov
mov
sub
test
mov
mov
stc
pushf
cs
sub
mov
sub
fsts
insl
je
loopne
scas
cmpsb
pushf
shl
cmpsl
or
xchg
or
adc
jo
addl
and
mov
inc
lea
shl
xor
xchg
stc
add
mov
jae
adc
xchg
pop
pushf
gs
insl
mov
add
test
fsts
in
mov
mov
cld
lret
cmpsb
inc
ss
hlt
xchg
add
cmp
push
sbbl
scas
xchg
lcall
push
pushf
dec
in
ljmp
cwtl
jb
rcrb
stos
mov
push
sbb
or
cmpsb
push
fsubrl
imul
test
xor
jge
cmpsl
xchg
jae
inc
sbb
jo
adc
cmp
push
adc
fsubrs
sbb
mov
sahf
push
or
aas
push
movsb
cwtl
ja
sbb
sub
aaa
mov
mov
cs
push
cltd
inc
inc
sub
aaa
scas
xchg
aad
aam
push
in
aas
jmp
cmp
sbb
fcomi
lret
aaa
mov
jne
dec
scas
xchg
pop
pop
out
pop
sub
inc
into
addb
cmpsb
fcomp
mov
xchg
inc
adcb
mov
cmp
outsl
pop
jmp
stos
and
lret
mov
pusha
lock
cwtl
rclb
pop
mov
imul
outsb
ficomps
lahf
clc
mov
mov
clc
push
sub
pop
jnp
mov
orl
fwait
ds
jno
pop
mov
lds
inc
in
mov
mov
or
out
je
orb
fldl
fisubs
jl
andb
lds
mov
mov
fdivr
das
jge
mov
push
outsl
jg
pop
fbstp
jge
lods
add
mov
repz
push
xchg
xor
add
or
inc
cld
int3
ja
dec
and
es
fwait
lock
fs
mov
jo
sbb
int3
std
lods
xchg
popa
decb
mov
fadds
sbb
lret
sub
cwtl
lods
mov
push
mov
pusha
adc
fdivrs
js
lret
call
xchg
and
sub
sub
bound
rolb
cmp
in
jne
mov
mov
pop
and
sub
loop
mov
mov
movsl
mov
in
out
fcmove
jle
out
mov
hlt
iret
fwait
dec
into
mov
or
dec
pop
jecxz
jecxz
inc
jmp
fs
dec
pop
subb
dec
mov
fs
inc
lods
scas
push
xchg
mov
dec
cmpsl
fldt
shll
subl
repnz
add
inc
test
mov
fld1
cmpsl
inc
out
lods
add
popf
inc
hlt
xor
mov
push
cmp
divb
test
mov
pop
mov
test
ret
lock
pop
leave
jecxz
outsw
shlb
or
mov
push
std
ret
fs
mov
xchg
mov
jmp
lods
arpl
stc
dec
cmp
sbb
ficompl
gs
pusha
sub
aad
mov
mov
pusha
mov
sarb
in
icebp
pusha
lds
orb
dec
mov
push
cmc
push
jg
inc
fwait
sbb
cmp
imul
fidivl
jnp
cmp
inc
fisubl
dec
lcall
cmpsb
xchg
orb
jb
addl
xchg
adc
mov
lret
or
leave
mov
in
xchg
repz
mov
mov
push
test
fmull
stos
push
repnz
movsb
mov
and
inc
sub
fimull
add
dec
ljmp
mov
mov
adc
pushf
push
js
aaa
orb
or
lret
jmp
nop
sbb
inc
push
dec
fld1
cwtl
fistl
push
push
and
iret
xor
insb
jp
and
lea
sbb
mov
lret
dec
cmpsb
push
ljmp
mov
or
pop
cmp
xor
mov
addr16
fcoms
cmp
add
dec
dec
push
cmpsl
aad
addr16
loop
fadds
aas
xchg
jbe
push
mulb
sbb
out
ficompl
or
movsb
mov
fisubrl
push
stos
push
lcall
inc
inc
cmp
xor
jbe
popf
adc
mov
icebp
sub
cmp
inc
cmp
jge
and
or
iret
mov
add
scas
int3
stc
push
test
popa
and
shl
sbb
je
push
cmp
out
out
scas
or
pop
popf
mov
jg
push
dec
and
jne
adc
inc
ret
inc
outsb
mov
idiv
dec
mov
pop
xchg
pop
shlb
jne
psubq
push
dec
jo
pop
jle
push
je
mov
movsb
cmpsw
dec
rcll
push
fcomi
dec
pop
push
mov
push
mov
jmp
cli
int
arpl
push
xchg
daa
loope
pop
adc
or
lret
xor
xchg
pushf
mov
dec
in
lods
inc
push
nop
mov
les
insl
xor
xchg
fisubrs
and
push
mov
mov
jb
sti
scas
scas
mov
lods
sub
in
mov
adc
pushl
pop
and
mov
inc
push
sbb
cwtl
adc
jns
xchg
jp
xor
xor
popf
iret
insl
jge
push
mov
and
jecxz
xchg
flds
cmpsl
ret
sub
dec
aaa
jns
dec
sbb
dec
push
cmc
nop
enter
push
stos
sbb
jp
pusha
adc
add
fsubr
pop
mov
das
mov
sahf
sub
push
or
mov
dec
sub
aam
add
push
mov
cmp
pop
je
push
pop
sub
sbb
dec
outsb
mov
pop
mov
sahf
mov
mov
loope
push
arpl
fidivl
jge
cmpl
cmpl
inc
dec
mov
icebp
and
adc
test
mov
sbb
sbb
jnp
lret
daa
mov
xchg
dec
xor
mov
rcrl
pop
ret
sbb
movsb
aas
dec
arpl
iret
xchg
jmp
jo
add
cltd
xchg
push
and
sti
scas
pop
addr16
mov
sbb
xchg
cmp
mov
in
sub
xorl
in
leave
mov
fstpt
push
jge
xchg
rcr
mov
mov
ds
ret
imull
imul
mov
aam
filds
into
fldl
sbb
aaa
push
pop
jno
inc
cwtl
pop
out
cmp
mov
loopne
adc
mov
push
fdivrl
add
mov
mov
jle
lret
mov
adc
lret
movsl
xor
mov
shll
out
repz
xchg
sub
insl
leave
lcall
shrb
or
in
xchg
in
mov
je
jl
cmp
clc
cmp
push
add
test
mov
outsl
dec
jge
mov
push
test
xchg
cmp
sahf
jle
lcall
mov
je
cltd
imul
dec
lret
xchg
sub
repnz
test
inc
xchg
and
and
and
pop
out
and
or
pop
aad
inc
xchg
dec
and
xchg
jno
sbb
inc
adc
lock
inc
sbb
push
ja
les
lcall
sbb
sbb
xlat
aad
mov
mov
xlat
push
sahf
int
fidivrs
add
xchg
in
dec
or
rclb
pop
rcrl
cli
add
or
sbb
cltd
imul
push
mov
cmc
lock
cmp
sub
es
leave
pop
cmp
ret
pop
mov
out
lcall
or
shrl
mov
dec
mov
cmpsl
daa
jge
inc
ret
incb
lods
mov
jl
mov
sub
fnsave
push
cmc
and
js
sete
pop
movsl
push
jl
fwait
or
push
movsb
mov
or
int
add
imul
int
test
sub
dec
fs
push
push
orl
cmp
ljmp
cli
mov
jnp
mov
fnsave
sbb
call
lret
mov
mov
dec
movb
aaa
or
fmull
aad
inc
sbb
mov
adcl
add
nop
and
test
cmp
decl
push
cmp
insb
dec
lock
ret
xor
xor
das
in
push
mov
jl
jecxz
xchg
dec
sub
sbbl
mov
inc
pop
popf
cmp
lds
xor
lret
imul
loopne
dec
popa
or
and
inc
insb
mov
rcrl
push
sbb
cmc
fdivl
pop
sqrtps
inc
push
inc
mov
sbb
leave
inc
push
adc
and
and
pop
stc
xor
mov
pop
ret
mov
add
ds
js
out
and
xor
lds
je
enter
xchg
lret
cmc
sbb
mov
pushf
fnstenv
mov
push
cmp
shlb
add
subb
inc
dec
adc
pusha
mov
inc
push
imull
adc
push
add
cmp
mov
mov
inc
inc
stc
inc
movsl
dec
cmp
pusha
stc
jle
or
int3
subb
bound
in
movl
xchg
jns
adc
stc
bound
orl
and
ljmp
in
scas
into
stc
pop
adc
cmp
xor
fnstenv
mov
add
sbb
outsl
int3
ds
sbb
pop
lret
loop
jle
sub
out
dec
jns
sub
loop
xor
jb
mov
mov
fnsave
mov
jl
arpl
lods
rorl
stc
daa
das
dec
test
icebp
push
cwtl
ljmp
inc
sbb
jmp
mov
fucomi
mov
push
pop
out
hlt
divl
add
addr16
mov
ficomps
pop
adc
mov
les
orl
mov
mov
and
stos
icebp
sbb
add
mov
or
or
inc
inc
mov
cmpsb
dec
rcll
or
enter
shll
lret
pop
and
loope
imul
pop
sub
fwait
push
andl
iret
fstps
and
xor
mov
xchg
mov
push
iret
push
or
clc
outsb
jo
sbb
cmp
je
xor
adc
mov
cs
rorl
in
jbe
push
jb
fwait
into
pop
sti
sti
ss
jg
or
cwtl
in
cltd
mov
mov
cmp
pushf
idivl
mulb
mov
roll
gs
clc
popf
les
add
cmpl
dec
or
shll
cmp
cli
push
push
add
hlt
add
cmpsb
jns
sbb
jae
pop
adc
cmp
icebp
outsl
loopne
push
out
das
scas
sbb
insb
push
mov
out
jmp
cmp
into
or
ret
sub
adc
or
testl
repnz
cmpb
xchg
jnp
jl
sbb
rcll
jns
sbb
in
ret
xchg
adc
jmp
dec
jp
xchg
add
mov
out
and
add
arpl
xchg
jp
mov
jge
jne
into
fs
fadds
andl
lods
shll
insb
aas
test
bound
cmp
inc
ja
imul
mov
test
mov
test
push
mov
jecxz
adc
scas
movsb
sarl
das
in
loope
ds
out
dec
fadd
popa
lods
push
mov
in
mov
testb
mov
jmp
hlt
repz
pop
imul
bound
adc
movsb
adc
lea
mov
cs
mov
adc
jo
mov
jmp
cmp
sub
mov
fiadds
orl
xorb
lock
test
popf
xchg
test
jg
pop
adc
mov
arpl
popa
jl
out
jnp
dec
sub
jp
movsb
sbb
loop
jb
ret
add
xchg
bound
mov
cmp
mov
pop
cmp
addl
and
inc
in
cmc
mov
dec
in
or
outsl
and
push
fsts
xchg
add
jg
mov
jne
lods
push
push
arpl
or
or
ret
xchg
xor
sbb
inc
and
push
test
out
push
leave
xor
fdecstp
fsts
ds
mov
sti
pop
dec
adc
out
adc
loopne
lcall
movsb
adc
pop
jg
scas
outsl
mov
sti
pop
fiaddl
and
mov
lret
and
adc
insl
mov
movsb
sbb
dec
and
xchg
pop
lahf
xchg
dec
fs
push
or
adc
shrb
push
push
mov
sub
and
mov
and
out
out
dec
fnstsw
push
subl
nop
enter
cmp
and
sub
dec
stos
add
sbb
jbe
addb
insb
sbb
pop
jbe
int
adcl
int
inc
lods
andb
cmpsb
dec
andl
adc
or
hlt
stc
fnsave
bound
jnp
sarl
daa
sub
or
jns
and
out
ret
movl
push
out
xchg
pop
cmp
rcl
pop
jmp
pop
sub
mov
xor
fwait
sbb
cmp
loopne
pop
pop
mov
dec
adc
dec
leave
or
and
push
xlat
aad
xchg
push
lret
sbb
pop
cmpsl
popf
jae
cld
fwait
in
mov
gs
sbb
call
inc
xor
dec
dec
add
out
fwait
and
insl
add
mov
mov
dec
xchg
fiaddl
addr16
and
stc
lock
mov
pop
into
adc
imul
fisubl
dec
es
dec
shl
decl
push
jl
mov
lods
push
inc
inc
mov
loop
or
shrl
call
xor
jbe
mov
dec
call
rcl
sbb
push
and
imul
cmp
mov
out
add
popa
pop
pop
les
push
out
add
push
adc
in
add
inc
push
in
xor
mov
movsl
xchg
or
mov
cmpsl
or
aam
xor
jb
das
sbb
lods
sub
xor
nop
shl
inc
push
dec
stos
sbb
outsl
rorl
lcall
imul
mov
push
pushf
mov
enter
mov
xchg
dec
xor
repz
sbb
jle
nop
sbb
push
xchg
inc
repnz
jp
fs
and
xor
in
push
outsl
les
xor
nop
push
movsl
jecxz
outsl
add
xchg
jp
mov
es
mov
into
pop
out
arpl
pop
loope
jecxz
daa
pop
das
lds
fistpl
mov
nop
out
ljmp
daa
or
inc
cwtl
xlat
mov
test
aaa
mov
ret
ja
jne
repnz
or
int
gs
xor
pushf
std
insb
daa
jns
sub
in
push
or
dec
insl
inc
xchg
ret
mov
xor
xor
mov
mov
loope
loope
mov
std
xchg
mov
lret
or
outsb
icebp
fadd
add
repz
cmp
cs
xchg
in
fadds
scas
sbb
jecxz
pop
mov
stc
cmpsb
jne
lea
cli
fsubl
dec
dec
imul
outsb
fldcw
rcrl
pusha
mov
imul
lcall
subb
cmovbe
test
push
pop
loope
sub
imul
and
stc
pushf
fsubs
maxps
mov
sub
mov
xor
repz
mov
enter
mov
lods
in
orl
push
iret
fwait
xor
in
mov
pop
cli
fwait
shrb
lods
clc
leave
jmp
pop
mov
leave
jns
stc
mov
sbb
adc
cmp
push
mov
pop
loopne
dec
cltd
cmp
sbb
mov
mov
mov
sarl
cmc
ja
cli
and
cmp
pop
add
or
push
call
dec
fmul
sbb
xor
mov
mov
add
pushf
jo
sub
sub
xor
jnp
inc
repnz
sub
pusha
cmp
jge
std
inc
and
jno
out
push
jno
and
xchg
orl
and
aad
jp
xchg
out
scas
sahf
cwtl
inc
push
sbb
lds
mov
sub
cmp
push
xor
fwait
les
sub
sub
daa
mov
adc
or
xchg
jae
repnz
jo
xchg
icebp
in
imul
inc
mov
std
mov
or
jg
jle
scas
or
repnz
xorb
sti
out
jo
dec
inc
imul
pusha
lock
dec
adcl
add
out
sub
fdivl
inc
adc
loope
sbb
xor
stc
stos
sbbb
push
push
jae
sub
mov
mov
xchg
mov
data16
fidivs
or
push
adc
lret
rcrl
xor
or
xchg
jno
in
pop
push
push
data16
sub
push
ljmp
cmpl
icebp
jle
mov
xchg
lock
sti
mov
add
adc
sti
andb
test
push
outsb
arpl
pop
or
call
pop
clc
int
test
sahf
mov
out
pop
and
fldt
mov
out
xor
pop
or
hlt
loopne
decl
lahf
in
cmpsb
adc
adc
dec
das
icebp
jo
in
out
aam
in
push
test
xor
sbb
sbb
mov
daa
inc
push
movsl
and
scas
push
sbb
dec
push
movsb
js
cmpsl
leave
sbb
cmp
sti
std
inc
out
js
idivb
pop
lcall
js
adc
dec
negl
jg
outsb
pop
push
jbe
inc
popa
push
into
sub
xchg
fiadds
aam
outsl
mov
lds
movsb
jge
mov
xor
sub
mov
scas
mov
dec
mov
xchg
xchg
pop
fwait
lods
fs
icebp
cmpsl
jb
add
sbb
testb
add
mov
sbb
jb
mov
or
in
popf
bound
ljmp
sub
lcall
sahf
sti
add
add
lret
nop
jns
cld
dec
and
fildll
xor
adc
rorl
out
mov
adc
dec
and
jns
mov
mov
sbbl
inc
std
call
imul
test
loopne
pusha
xchg
sub
int3
insb
and
mov
pop
divb
sbb
mov
cwtl
gs
lods
js
movsb
das
inc
xor
arpl
adc
mov
movsl
add
test
ja
aam
xlat
popf
xor
mov
arpl
aaa
jbe
in
mov
mov
jbe
bts
enter
xor
cmp
out
mov
fcmovbe
cmp
cmp
arpl
xor
inc
push
fidivrl
rcll
insb
xor
lret
arpl
adc
std
loop
cltd
xchg
mov
xchg
sub
in
loop
mov
cmp
push
and
or
add
insl
aad
in
pop
repnz
lret
xor
pop
mov
xlat
push
mov
xchg
test
testl
in
ret
fucomip
xchg
push
popa
push
rcrb
adc
sar
sub
mov
lods
cmp
jge
xchg
push
xchg
xor
cmp
jne
loopne
pop
mov
fsts
clc
js
pop
aaa
mov
adcb
rcr
cmpsb
mov
enter
mov
leave
dec
and
arpl
das
xchg
pop
inc
std
imul
test
or
dec
pop
imul
stos
jo
add
and
cmc
cwtd
lret
jbe
pop
jl
fcmovnbe
adc
mov
jle
lock
call
mov
and
cmp
xchg
nop
std
jb
dec
dec
push
dec
pushl
shlb
mov
fmuls
iret
in
cmp
lcall
clc
daa
out
pop
jae
outsb
hlt
push
sub
sub
dec
lds
cltd
das
xor
cmp
nop
sbb
mov
adc
imul
cmc
add
nop
add
mov
jg
popl
add
mov
inc
adc
scas
pop
cmpl
jo
jmp
ljmp
pop
add
or
mov
xor
fmull
out
int
dec
cli
ffree
cwtl
es
fmul
cmpsl
mov
mulb
add
outsb
cmp
push
xchg
push
or
lods
jmp
out
pop
mov
clc
sub
loopne
mov
clc
loop
adc
mov
aaa
int3
or
inc
sbb
inc
adc
loop
mov
out
je
inc
cmp
cmpl
cmpsb
jecxz
int
std
pop
push
cmpsl
xchg
cltd
mov
lahf
xchg
or
jmp
mov
inc
pop
test
jle
aas
bnd
ss
out
ljmp
sub
test
mov
mov
adc
and
xchg
sub
push
ds
clc
xchg
jb
loope
pop
shlb
rcrl
out
lcall
imul
xchg
mov
mov
test
inc
fistl
test
test
loop
adcl
mov
sbb
or
out
pop
lods
and
repz
loopne
dec
das
xchg
js
sbb
mov
mov
xchg
loop
and
imul
xor
inc
ds
cmc
jne
cmc
hlt
testb
add
test
cld
mov
jecxz
mov
sti
lods
cwtl
adc
jmp
icebp
je
mov
adcb
pop
mov
mov
and
mov
mov
pop
stos
jge
xchg
jbe
sbb
sub
dec
mov
loop
cs
popa
sub
cld
aaa
lods
loope
mov
leave
popf
mov
rcl
push
sbb
testl
movsl
fwait
jne
pop
xchg
insl
cmpsb
sbb
lods
repnz
mov
iret
test
pop
adc
mov
inc
lock
push
ljmp
leave
sarb
jmp
dec
aas
mov
xchg
insb
rcrl
int
mulb
mov
xchg
lock
fildl
mov
xchg
push
gs
push
cmp
jge
lds
inc
mov
jge
jbe
mov
mov
dec
in
mov
int
pop
pop
cmp
imul
int3
adc
pop
cmc
xchg
jmp
or
mov
jge
inc
repnz
rep
xor
ss
mov
cmpsb
sbb
inc
pop
pop
and
jge
mov
rcrb
and
fbld
fstps
arpl
repnz
inc
test
lret
mov
mov
lods
ljmp
cwtl
jp
sbb
fsubs
aaa
jo
xor
lods
pop
cli
mov
sub
daa
fsts
mov
adc
xchg
cli
xchg
sub
nop
and
shll
movsl
sub
fimull
mov
sbb
push
sub
mov
mov
das
xor
sar
icebp
mov
push
lcall
pop
inc
xchg
addr16
mov
std
pop
cmp
add
adc
push
cmpsb
sbb
in
in
push
inc
add
pop
mov
idivb
rcll
sbb
gs
push
pop
imull
cmp
cmc
rcrl
jae
pop
ljmp
push
loopne
adc
adc
push
sub
or
mov
jno
mov
xor
mov
test
sbb
nop
pop
adc
movsb
sti
jbe
movsl
inc
out
aaa
popf
pop
cmp
movsb
sbb
adc
adc
dec
sbb
mov
ss
cmp
jge
push
mov
clc
sub
pushf
repz
mov
fistpll
push
xchg
data16
add
mov
sbb
jge
push
mov
dec
or
test
lea
arpl
mov
push
cmpsl
sub
cwtl
pop
jb
sbb
pop
pop
aam
jno
push
mov
sbb
outsl
sub
sahf
xchg
mov
adcl
mov
push
lret
push
sbb
ja
int
jo,pn
adc
movsb
xlat
xchg
dec
bound
outsl
add
add
jbe
aad
int3
sbb
add
outsl
mov
test
popf
ret
fsubrl
sarl
in
pop
and
xor
mov
mov
push
push
cs
insl
faddl
insl
adc
jo
pop
push
fsubp
adc
cld
dec
stos
xor
inc
push
mov
aad
mov
xorl
or
imul
gs
insb
pop
xor
adc
lods
jp
dec
aad
stc
mov
xlat
aas
jl
sbb
mov
sbb
xchg
sbb
add
jbe
aas
nop
or
add
mov
ss
das
jmp
outsl
das
adc
in
loopne
aas
popa
mov
imul
into
or
cmpsb
inc
in
xchg
aas
or
dec
inc
push
push
push
push
jecxz
repnz
pop
sahf
loop
push
mov
or
std
imul
sub
pop
jle
mov
ljmp
into
cmp
mov
mov
mov
sub
dec
test
push
das
mov
popf
mov
mov
adc
xor
loope
ret
rcrl
loope
fwait
popa
push
jb
test
pop
pop
sbb
out
mov
fcompl
push
add
mov
push
cmpl
push
jnp
nop
add
jae
mov
je
and
ja
adc
mov
ss
xchg
adc
rorb
icebp
or
stos
dec
inc
push
cltd
push
fcmovnbe
mov
arpl
sbb
mov
cmp
mov
xor
cmp
mov
pushf
and
sbb
fwait
scas
jno
sbb
bound
xchg
sbb
icebp
or
mov
mov
sub
lret
and
sub
adc
pop
dec
and
sub
and
push
mov
and
cld
cmp
nop
aas
mov
xchg
in
aaa
ficoms
dec
inc
scas
cwtl
or
add
push
xlat
fxch
mov
sbbb
xchg
sbb
mov
hlt
test
insl
fmul
xlat
push
add
adc
test
inc
and
or
adc
pop
mov
xor
push
ficoms
ljmp
std
lret
sbb
jne
jle
push
mov
in
pushfw
mov
orb
out
scas
in
add
out
pop
push
mov
das
and
stos
sub
pop
or
cmp
inc
dec
sub
mov
pop
or
les
pop
inc
push
push
dec
pop
pop
push
cmp
adc
pusha
sub
in
or
dec
xchg
mov
pop
push
rcrb
add
lods
aas
fsubrl
decl
stc
mov
mov
or
imul
pop
call
xchg
gs
sbb
mov
mov
mov
movsl
xchg
mov
js
call
lods
and
push
push
mov
in
jo
push
mov
ret
pop
mov
ja
push
mov
fnstenv
push
test
lock
shlb
inc
add
cmp
aad
sub
add
push
aaa
mov
adc
jmp
sbb
addr16
or
loop
xchg
clc
push
cmp
ret
mov
sub
cmp
add
out
imull
jle
add
nop
imul
das
lcall
mov
mov
rcrl
xchg
shl
or
jg
adc
movsl
sub
out
cmc
int3
addr16
test
mov
xchg
ret
jecxz
hlt
call
das
xchg
xorb
sub
scas
push
cmpsl
popa
dec
adc
add
jo
mov
xor
int
xlat
jae
test
shrb
push
cmc
aaa
fstpl
jle
divb
or
mov
mov
movsb
pop
or
cwtl
icebp
ret
movsl
pop
gs
sbbb
and
and
imul
pop
das
fisubrs
sub
mov
xchg
cmpsb
mov
adc
jecxz
imul
sub
jno
or
outsb
mov
faddp
mov
cmp
lods
cmp
popfw
sub
push
add
jno
jno
xchg
mov
jecxz
adcl
xchg
mov
bound
pop
shll
pop
and
mov
in
dec
inc
dec
test
sbb
dec
out
xchg
out
pusha
outsb
stos
enter
mov
ljmp
lcall
adc
subl
mov
mov
or
jp
nop
loope
and
outsb
jo
pushf
sar
rcl
sbb
pusha
push
sbb
movsl
scas
repz
mov
mov
sub
lahf
mov
jae
bound
subl
pop
pop
ss
xchg
pop
jne
test
lret
jno
or
cmc
push
mov
daa
stos
das
inc
ja
ja
ror
jg
rep
inc
lea
adc
testl
mov
pop
paddw
roll
lret
jmp
popa
adc
jns
jge
xchg
call
jno
xor
test
mov
cld
inc
mov
add
jb
mov
push
lods
mov
push
sbb
mov
pop
dec
gs
or
imul
dec
push
adc
xchg
adc
jnp
dec
or
inc
sbb
xchg
shrb
jge
add
pop
push
pop
fs
mull
mov
xchg
dec
push
pop
jecxz
mov
sbb
ret
jo
inc
sti
cs
push
ret
js
ja
jns
rorl
test
aam
mov
nop
push
xchg
test
and
popf
into
cmp
insb
rol
scas
sbb
or
aaa
mov
and
dec
in
call
fs
pop
push
repnz
ljmp
mov
pop
popf
test
hlt
add
int
das
aad
cmp
or
test
cmpsb
cli
rol
sub
pop
or
in
cld
ja
dec
pop
or
rclb
mov
sbb
stc
add
sub
sub
popf
inc
lods
xchg
jecxz
cltd
sub
mov
push
or
cs
or
xor
clc
ljmp
jl
pop
outsb
lods
sbb
imul
in
int3
push
cmp
das
mov
es
push
jne
je
iret
push
xlat
test
jnp
sbb
mov
adc
mov
mov
dec
popf
sbb
loope
xor
in
fstl
and
jl
data16
pop
shl
out
add
arpl
jmp
adc
ret
adc
fcoml
iret
int3
enter
cs
add
stc
dec
fists
xchg
je
cmp
sbb
fmuls
push
and
cmc
gs
xor
inc
push
ret
jo
mov
movsl
ja
pushl
rolb
jnp
lods
add
sbb
pop
dec
icebp
out
jmp
jne
cs
xchg
aad
xchg
push
lock
xlat
jmp
aam
jmp
test
icebp
xchg
inc
fsubrs
jle
repnz
repnz
inc
xchg
push
push
lret
jno
and
push
cld
and
int
jge
lods
push
xchg
push
add
dec
xchg
mov
imul
iret
repz
mov
and
enter
mov
jnp
stc
insl
mov
scas
xchg
psubsb
fstp
cmpsl
push
inc
jo
add
lds
jecxz
inc
pop
aad
push
mov
inc
imulb
dec
push
mov
int
stc
sbb
sub
xlat
test
inc
push
out
mov
mov
mov
das
push
jge
xor
insb
in
inc
push
dec
xrelease
pop
movb
sub
bound
mov
or
cmc
xchg
inc
xchg
leavew
xor
or
idivb
sub
jle
test
pop
sarb
je
sbb
hlt
dec
dec
push
shll
and
xchg
pop
and
sbb
pop
lret
sbb
in
call
jmp
jns
mov
cmp
outsl
inc
mov
xlat
pushf
iret
repnz
dec
cmc
andb
fxch
js
jo
lahf
fs
in
stos
xlat
fwait
mov
jecxz
inc
jne
mov
pop
lods
push
stc
aaa
xor
xchg
xlat
add
test
sahf
repz
lahf
push
add
and
jp
pop
jbe
cld
lcall
mov
pushf
ss
gs
push
aam
jne
stos
pop
les
loopne
clc
push
addb
ja
movb
nop
pop
daa
pusha
sti
test
jge
loope
or
scas
loope
jge
mov
decl
mov
and
push
movsl
data16
loope
pmulhuw
dec
dec
ds
jns
jp
test
dec
pusha
pusha
call
ja
mov
push
pop
xchg
push
in
adc
out
lret
gs
mov
ds
scas
ret
sbb
stos
pop
or
or
or
lock
out
cwtl
push
cli
in
jae
mov
mov
dec
test
jns
xor
rorl
xor
push
dec
lcall
xor
xor
repnz
mov
out
push
ss
call
lock
xchg
cmp
and
cmpsl
fsub
inc
lods
and
faddl
into
dec
push
in
ja
out
sub
xor
dec
push
cltd
fidivrl
movsb
out
scas
fs
push
test
dec
aas
fiadds
adc
ret
movsl
addr16
mov
pop
fwait
sbb
or
xchg
push
sbb
adc
pop
mov
mov
xlat
dec
rolb
jno
fsub
push
sbb
fs
frstor
adc
loope
jp
ljmp
jae
or
psrlw
mov
jne
mov
mov
int
fiadds
out
sbb
sub
lret
mov
inc
mov
icebp
pop
sahf
rol
dec
lds
sub
xor
dec
mov
xchg
push
pop
cltd
inc
xchg
scas
out
mov
jne
mov
popf
imul
push
fs
cwtl
pop
adc
pop
out
add
push
lock
lods
cltd
icebp
out
mov
ret
sub
xchg
popf
pop
push
mov
mov
push
jno
and
shrb
xchg
pop
fiaddl
jns
out
mov
mov
in
jmp
sbb
mov
mov
leave
out
and
jb
jle
popa
lea
dec
mov
mov
xor
and
fwait
mov
rcll
pushf
inc
ljmp
fwait
ljmp
adc
xchg
out
hlt
sbb
jbe
jns
cmp
pop
adc
dec
test
stos
xlat
dec
sub
lahf
in
lgs
cmp
rorl
sub
and
push
stos
jb,pn
in
dec
push
add
sbb
sbb
out
sub
addb
fldl
dec
loope
adc
add
xchg
popf
lods
ud0
sarb
fmuls
in
scas
test
fists
pop
mov
cltd
pop
mov
add
push
jno
push
adc
jecxz
mov
jecxz
push
sbb
test
xchg
xchg
daa
lods
push
shr
nop
pop
add
push
stos
data16
fiaddl
lods
jb
inc
mov
inc
testl
xchg
ret
and
aaa
lahf
inc
rclb
es
in
into
pop
ljmp
mov
xor
mov
push
dec
flds
inc
xor
dec
into
and
or
pop
cmp
mov
xorl
aaa
lods
push
xor
fcomi
and
insb
add
mov
xchg
insl
ret
push
jno
push
pushf
xchg
lret
inc
arpl
fs
lret
addr16
popf
je
jns
into
icebp
xor
mov
ret
popa
fcoms
mov
fstl
mov
pop
xor
and
outsl
cmc
sar
sbb
push
stos
in
mov
mov
scas
jnp
into
jmp
int3
arpl
push
pop
inc
lods
fisttps
in
push
int
adc
and
dec
adc
popf
adc
lret
and
stc
xorb
mov
mov
jne
sbb
xchg
xchg
mov
mov
stos
xor
dec
sti
mov
pop
push
dec
movsb
pop
cmp
loop
xor
cmp
mov
sbb
jnp
cmp
mov
in
jb
addr16
xchg
clc
adc
add
add
rclb
pop
inc
clc
stos
stc
pop
inc
pop
xchg
out
cmp
pop
jmp
or
aad
dec
cmc
pop
cmp
cmpsl
inc
sub
sahf
xchg
sbb
imul
mov
xor
adc
mov
dec
lret
pop
addl
sbb
inc
testl
xor
push
stc
pop
rcl
dec
add
sub
sub
mov
cld
pop
inc
loopne
jno
nop
push
lret
adc
mov
and
fs
dec
popa
pop
mov
push
fisttpl
sub
fsubrl
xor
leave
dec
push
aaa
cmp
jp
fld1
mov
adcb
gs
mov
jl
mov
ss
or
mov
lods
xchg
je
cltd
push
xchg
push
mov
stos
jnp
test
sti
jno
and
cltd
cmp
pop
push
lahf
mov
outsl
das
inc
inc
gs
pop
xchg
sbb
hlt
movsl
sarl
subb
mov
into
push
sbbl
sbbl
mov
je
scas
xchg
sub
sahf
popf
aad
mov
fisttps
rcl
mov
jno
lock
loopne
jo
push
scas
ret
stos
xchg
aam
mov
inc
orl
add
pushf
addb
dec
sbb
sahf
cmp
and
or
int
add
mov
mov
int
push
rclb
xchg
mov
dec
push
sti
scas
inc
lcall
pop
std
in
arpl
push
cmp
mov
call
and
aas
jmp
pop
add
jno
and
xor
jne
jmp
ja
cmp
add
mov
add
push
daa
jl
icebp
push
jmp
mov
jecxz
pop
sbb
adc
mov
out
adc
lock
insb
inc
push
mov
nop
push
out
int3
jecxz
cmpsl
in
sahf
aaa
adc
dec
daa
push
lea
rorb
mov
shlb
int
popa
mov
aad
inc
dec
push
mov
mov
test
push
push
mov
sub
pushl
pop
xchg
sub
clc
adc
lods
ror
mov
xor
lea
imul
xchg
xchg
addr16
repnz
mov
xchg
icebp
xchg
out
sbb
pop
bound
dec
xchg
dec
negb
aaa
push
push
movsb
or
xchg
in
mov
and
mov
push
int
adc
out
movsb
mov
stos
and
push
pop
or
and
inc
icebp
sbb
xchg
sbb
in
xchg
pop
add
mov
adc
add
jns
repz
mov
xorb
sbbb
icebp
pop
repz
inc
jge,pt
jns
adc
scas
xchg
pop
insb
push
jno
push
or
cmp
and
pushf
jbe
out
cmp
lock
mov
lock
xchg
loopne
add
xor
inc
adc
mov
test
lods
push
fucomip
scas
mov
lea
in
mov
pop
inc
push
cmp
inc
cld
mov
inc
movsb
and
and
jae
and
sbb
cmpsb
push
repnz
jns
xchg
js
dec
inc
pop
js
jecxz
pusha
inc
pop
mov
mov
movsb
pop
pop
mov
adc
inc
gs
mov
scas
cmp
bnd
nop
inc
ds
inc
xor
rcr
dec
adc
inc
je
out
jnp
insb
dec
mov
mov
inc
arpl
cmp
pushf
jne
popf
pop
daa
rcrb
dec
jae
lock
lahf
arpl
inc
mov
pop
sbb
adc
lea
dec
fbstp
sti
nop
gs
arpl
push
imul
mov
jmp
adc
sub
push
lcall
xor
int3
mov
mov
pop
mov
cmp
jl
push
sti
ret
in
outsl
mov
mov
pop
je
rcrl
lock
negb
pop
ss
aaa
inc
mov
fidivs
mov
out
out
into
ja
dec
add
lahf
ja
mov
jo
and
mov
ss
insl
shll
jnp
out
mov
adc
lcall
fwait
mov
pusha
jp
frstor
cmp
ffree
shlb
in
or
cli
hlt
add
pop
jl
or
cmp
pop
movsl
iret
sub
scas
add
int
add
pop
and
cs
push
or
lahf
push
addl
adc
mov
sub
jecxz
cli
decb
cld
sub
call
imul
pop
sub
pusha
mov
test
lea
mulb
adc
jbe
adc
stos
mov
sbb
addr16
out
inc
rorl
in
pop
mov
cltd
inc
in
or
xor
xchg
aas
xchg
test
lcall
pop
inc
add
scas
in
and
push
push
jge
in
dec
pop
mov
inc
fucomp
stos
pop
aam
pushf
pop
sbb
cmp
xchg
xchg
mov
cmp
lds
lcall
mov
pop
leave
mov
stc
out
ja
xchg
pop
inc
jne
xchg
clc
xchg
call
sub
jp
inc
add
xor
xchg
mov
cld
iret
xchg
dec
xor
movsl
or
adc
push
test
sub
call
jl
mov
mov
test
mull
ja
pop
ficomps
sarl
xchg
or
xor
lret
jg
sbb
divb
ljmp
mov
es
je
sub
adc
popa
cwtd
xorb
sub
mov
push
or
shll
rolb
dec
nopl
in
bound
mov
push
or
push
fsts
fisttpll
je
push
movsb
or
and
not
subb
test
iret
xlat
or
loope
push
loop
adc
push
mov
push
repz
mov
pop
xor
and
leave
daa
cmp
inc
inc
dec
mov
sbb
in
and
pop
mov
dec
in
xlat
pop
pusha
xor
lret
xor
daa
mull
repz
adc
fcompl
jnp
shrb
sbb
push
das
inc
in
dec
rorb
std
aas
xchg
insl
mov
popa
int3
xchg
xor
inc
enter
jnp
dec
cmovle
mov
pop
jmp
push
insb
mov
xchg
mov
jne
dec
sbb
les
mov
fsubrl
jnp
shrl
shll
ret
sub
andl
cmp
ss
dec
addr16
cmp
fiadds
mov
jecxz
jg
jae
sub
adc
mov
lock
push
repnz
sbb
add
fildl
mov
pop
mov
jns
lahf
popa
mov
adc
dec
out
jo
push
push
clc
pusha
inc
push
sbb
rcrl
cmp
inc
sar
data16
add
popa
stos
jae
fwait
push
pop
fists
add
sbb
mull
jmp
jl
adc
fsts
push
lahf
xor
lahf
mov
adc
adc
aad
and
mov
insb
scas
adc
gs
jp
pop
xor
sub
push
pop
sub
mov
aaa
xchg
inc
enter
or
jmp
xor
fiaddl
test
mov
negb
mov
push
lahf
sub
pop
mov
pop
test
cmp
lea
mov
cmp
mov
bound
fnstsw
in
rcrb
cmp
add
inc
and
xchg
xor
pop
push
imul
cmpsl
mov
daa
push
cmp
xchg
loop
add
insl
dec
ljmp
fldenv
dec
adc
aaa
dec
add
std
or
fnsave
mov
fldenv
cmp
mov
popf
ja
and
or
call
xlat
mov
mov
add
insl
jge
dec
add
bound
jmp
stos
out
dec
inc
pop
mov
lods
in
fidivrs
dec
inc
js
push
sub
test
pop
xor
and
mov
lods
mov
xchg
and
xor
mov
cmp
fstpl
and
fcoms
mov
pop
or
xor
lods
iret
push
mov
call
pusha
sub
andb
cmpsb
lock
popa
out
fcoml
xlat
pop
mov
loopne
xchg
cwtl
leave
and
insl
dec
fistps
loop
xchg
fstpl
mov
aam
loope
pminub
sub
test
jae
outsb
std
mov
mov
and
fidivl
lret
inc
dec
or
aaa
std
xchg
cli
lahf
add
pop
xchg
pop
int
adc
in
mov
xor
mov
iret
fwait
inc
mov
cmp
movsb
push
dec
in
sti
mov
insb
inc
mov
push
shr
popa
mov
je
mov
leave
pop
ficoms
xor
jg
call
ret
xchg
mov
jecxz
call
and
mov
pop
adc
mov
xchg
sbb
mov
xor
push
ss
test
lods
jle
add
incl
sbb
push
out
and
add
jo
insb
inc
insb
dec
rcr
addb
gs
pusha
cmpsb
inc
inc
or
push
fbld
lretw
pushl
fildll
hlt
sub
in
pushf
push
lcall
jle
or
aas
movsl
rol
adc
rolb
rcll
xchg
call
pop
pop
jae
mov
push
jno
mov
or
cmp
out
jmp
std
add
pushf
adc
sub
fcmovne
je
jmp
aam
jle
add
rcrl
fwait
jp
les
jl
mov
cmpsl
out
pop
inc
lcall
mov
roll
out
mov
jg
push
adc
cmpsb
jmp
pop
ret
mov
pop
movsb
js
or
sbb
shlb
mov
cmp
pop
pop
dec
sub
add
sarl
lock
fs
jmp
cmp
xchg
xchg
fildll
pop
inc
cmp
push
mov
rcrb
mov
ss
ss
cltd
pop
sbb
adc
push
inc
xor
sbb
ja
es
mov
loope
andb
out
jle
in
notl
mov
adc
sub
mov
aam
fucomp
fdivr
sub
into
xchg
addr16
mov
cmp
popl
mov
xchg
pop
std
mov
or
add
pop
iret
push
lods
jno
es
adc
mov
out
lret
push
insb
or
jnp
inc
loope
imul
jae
adc
mov
sbb
mov
push
sub
pushf
and
call
adc
lahf
xchg
stc
cmp
popa
imul
lds
fucomip
jbe
mov
cmpsb
inc
pop
dec
out
pop
jmp
out
hlt
repnz
notb
sti
mov
js
adc
fnsave
mov
cli
inc
test
add
mov
int3
sub
divl
xor
jnp
jnp
pop
mull
insb
inc
adc
inc
roll
mov
jmp
loope
push
sub
neg
or
mov
adc
mov
shll
sbb
loope
daa
pop
in
cs
aam
popa
sub
pop
push
stc
adc
mov
je
pop
jae
dec
stos
push
jnp
mov
sub
test
ficompl
lds
insl
push
or
aas
xor
sub
mov
loope
imul
adc
or
push
das
dec
stc
imul
test
mov
bnd
fst
sub
out
sub
sub
adc
insb
push
mov
and
loop
and
xor
adc
push
loop
cmp
subb
pop
js
mov
mov
jb
mov
ss
lret
pop
loop
test
ret
xchg
aaa
add
fisttpll
mov
fbstp
push
in
cmpsl
mov
popf
and
cmp
test
js
xchg
dec
or
ds
sub
stos
pushf
int
loopne
mov
sbb
adcb
xchg
outsb
cmpsl
jg
xor
and
mov
inc
cltd
inc
ret
or
or
jo
jge
adc
cwtl
lahf
test
mull
mov
mov
push
mov
jmp
rorl
inc
and
or
mov
test
aam
je
inc
mov
push
addr16
sub
mov
xchg
fdivs
in
insl
hlt
push
push
cltd
xor
mov
sti
rolb
mov
sti
pop
pop
push
dec
and
movsb
popa
sbb
push
or
pop
xchg
sahf
mov
testl
pop
addr16
cmp
enter
je
das
call
fldcw
inc
push
mov
mov
adc
push
inc
bound
addl
ja
pusha
xor
std
xchg
add
scas
jo
in
popf
push
push
jecxz
leave
jae
push
mov
mov
repnz
push
cwtl
outsb
fidivrs
std
loope
mov
push
test
clc
lods
xor
add
jo
fwait
movsl
pop
xlat
xchg
cmpps
clc
sub
ret
pop
mov
xlat
or
jl
cmp
daa
add
sub
sbb
mov
add
leave
cmp
std
cmp
push
dec
mov
insl
mov
inc
psubq
push
ret
int
push
xchg
jmp
mov
pop
out
rcr
jae
fdivr
adc
icebp
push
loopne
iret
inc
jno
mov
cmp
iret
mov
insb
xor
mov
dec
sub
sbb
jl
out
xchg
xchg
jg
iret
stos
ret
jge
sbbb
and
dec
decb
add
incl
jne
das
cld
cli
sbb
mov
add
in
mov
clc
add
pop
ss
fdivp
pop
in
inc
dec
push
fcom
xor
fnstenv
lahf
add
dec
adc
daa
mov
mov
mov
cs
fildll
test
in
push
addr16
dec
mov
in
test
xchg
dec
pop
xchg
push
add
imul
xor
xor
int3
push
loopne
negl
sub
fidivrs
lret
push
or
xchg
sub
cmc
adc
jl
in
loope
je
mov
push
lods
push
pushf
mov
aas
pop
out
into
dec
fcmovnbe
es
bound
inc
icebp
fsubs
mov
cmpsb
insl
inc
dec
push
cmp
mov
or
das
fmul
clc
jae
mov
std
divl
xchg
xchg
lds
xor
cmp
ja
movsl
pop
aaa
mov
ss
xor
adc
cli
mov
jg
fists
in
pop
push
mov
in
dec
jecxz
pop
lcall
cmp
mov
inc
in
sub
fstl
out
cmp
cli
mov
lret
rorl
scas
mov
fbstp
jmp
cmp
mov
push
js
aas
and
push
call
popf
adc
xchg
sub
push
imul
stc
loope
movsb
mov
lret
ss
sub
aam
stc
push
in
sbb
push
sbb
xchg
cli
mov
sub
cmp
imul
lea
out
rclb
fdivl
dec
lahf
cltd
inc
leave
rcll
xchg
sahf
ja
je
dec
mov
add
sub
cmc
or
cmp
mov
arpl
fldenv
ss
cmp
ret
gs
cmp
aas
cmp
popf
adcl
rcrb
fnstenv
insb
out
fistpl
daa
xchg
push
sub
push
lret
cmpl
pop
sahf
inc
or
add
inc
std
pusha
out
addr16
mov
push
xchg
cwtl
bound
jbe
test
loope
jae
xchg
fwait
outsb
sbb
es
das
das
inc
or
xchg
sbb
xor
push
adc
mov
mov
adcl
push
dec
call
out
shll
xchg
pop
in
push
cmp
loop
push
fs
addl
adc
jb
shlb
std
inc
mov
imul
loop
mov
xchg
rclb
cmp
add
insl
es
add
mov
mov
repz
insb
repz
fstpt
jg
int3
and
jne
adc
leave
gs
fidivrs
in
addl
sub
inc
mov
pop
and
shlb
mov
inc
xor
leave
push
push
xchg
imul
sbbb
jno
mov
jno
insb
out
faddl
sarb
pop
sti
push
xor
in
jne
arpl
xor
xor
and
adc
pop
fcoms
hlt
cwtl
aaa
andb
int3
pop
test
fisttpl
lds
cs
iret
jge
jecxz
xchg
andb
imul
call
lods
fyl2xp1
and
jmp
dec
test
mov
in
jmp
das
mov
or
lea
push
cld
xlat
repnz
push
ljmp
xchg
pop
je
mov
mov
filds
mov
out
mov
mov
test
in
adc
adc
ljmp
cld
ljmp
or
jp
arpl
or
mov
mov
or
movsb
mov
cmpl
iret
js
dec
mov
inc
mov
test
cmp
xor
mov
jno
push
and
xlat
push
dec
fxch
pause
rolb
leave
add
lds
xchg
cmp
cmp
mov
xchg
lea
jg
jge
xchg
movsl
mov
jno
xchg
adc
hlt
test
or
and
repz
lcall
push
xor
pop
popa
scas
fidivrs
adc
roll
xchg
ret
and
popf
cld
data16
or
or
decb
mov
stos
jg
mov
icebp
mov
in
adc
lods
jle
out
out
imull
dec
xchg
xchg
jmp
jmp
cmpsb
cld
loop
mov
jge
add
cmpsb
dec
dec
jbe
mov
insb
lock
daa
push
repz
idivb
sbb
test
nop
imul
xchg
xlat
pop
mov
popa
add
xchg
pop
mov
lods
xchg
add
adc
stc
daa
shlb
pop
data16
test
ja
xchg
inc
push
or
cs
adc
xorl
push
jae
push
sub
subb
sbb
data16
xor
mov
lcall
test
subb
das
lahf
lahf
mov
pop
pop
cmc
mov
daa
push
jo
mov
pop
pop
and
rclb
outsl
fsubrl
in
xor
mov
mov
jge
pop
push
clc
ss
sub
inc
jb
int3
lock
mov
xchg
sbb
fs
addr16
push
push
fcoml
sbb
fidivs
nop
out
fldl
adc
jb
pop
push
push
cwtl
adc
test
dec
cmp
clc
fucomp
adc
push
pusha
rcrb
sahf
mov
out
fcompl
adc
xor
add
mov
inc
jecxz
sub
mov
jbe
popa
cs
daa
and
and
repz
cltd
push
sub
idivb
cmc
ljmp
add
stc
jo
sbb
pop
popf
mov
ret
jb
pop
mov
add
into
sbb
dec
xchg
incl
sbb
lret
ficoml
mov
stos
inc
cltd
std
shlb
loope
loop
ljmp
les
ret
add
pop
and
mov
sub
repz
add
inc
dec
jns
xchg
sti
cmp
lods
or
in
or
out
cwtl
dec
mov
lds
scas
add
arpl
xchg
mov
jo
ret
es
movsl
add
sub
lret
and
sub
sub
mov
imul
mov
lahf
inc
add
fiadds
mov
adc
ret
stos
or
pusha
jnp
push
std
mov
stos
add
daa
rcrb
sub
inc
or
sbb
popa
lret
bswap
cmovge
insb
push
jae
sub
es
adc
xor
add
pop
pop
sbb
jmp
push
pop
ss
push
dec
cmpsl
fnstcw
mov
pop
mov
loop
push
loopne
insl
push
lock
adc
and
loopne
dec
rcl
pop
aaa
and
mov
and
mov
das
out
dec
into
insl
push
icebp
lret
pusha
pop
cs
out
inc
mov
fnstcw
and
lds
scas
push
push
xlat
add
shll
push
sbb
addps
push
cwtl
mov
push
mov
out
hlt
inc
shr
cmp
mov
loope
mov
aas
les
scas
jecxz
adc
cli
mov
mov
xchg
in
dec
movsb
cmpsb
stos
test
pop
add
sub
xor
addr16
repnz
pop
or
movsl
dec
popa
push
jecxz
dec
jnp
sahf
aad
mov
mov
ffree
fucomip
or
push
adc
es
or
stos
scas
mov
into
push
push
inc
je
arpl
add
movl
pop
test
js
inc
sub
sub
call
push
mov
insl
in
test
dec
mov
fdivr
stos
mov
xor
cmpsb
or
jae
roll
stc
add
jmp
loopne
adc
mov
lods
sub
jo
adc
int
pusha
inc
es
imul
xor
mov
shll
mov
nop
call
out
jbe
xor
jbe
xor
xchg
mov
insl
lret
fstpt
pop
push
out
inc
fstps
xchg
lds
mov
jmp
call
addl
shlb
aaa
orl
xchg
push
xor
mov
lcall
jno
shr
repz
adc
adc
push
xor
mov
ljmp
mov
adc
xchg
xor
push
movsl
rcrb
mov
and
push
and
mov
int3
aad
mov
mov
movsb
fnstenv
test
test
jbe
call
ret
fimuls
pop
push
add
sbb
enter
std
inc
adc
jge
ja
mov
xchg
loopne
loop
inc
cmp
andl
mov
jae
pushw
sbb
ret
stos
in
dec
and
pop
mov
daa
mov
add
lea
and
xorb
jb
sbb
push
mov
dec
and
into
or
pop
push
dec
xor
and
push
fstpt
mov
arpl
idivl
int3
jmp
cmp
cli
cmc
cwtl
notl
cwtl
jmp
lds
js
cmp
xchg
cmp
fwait
xor
push
shll
lods
divb
cmpsl
pop
push
sbb
mov
rcl
int
clc
lahf
add
dec
fdivl
mov
push
lock
cli
add
mov
test
je
mov
das
gs
mov
std
xor
js
pop
in
hlt
pop
cld
outsl
inc
cmp
xchg
loope
inc
shlb
rcll
lea
fildl
js
add
leave
mov
ljmp
loope
pop
enter
dec
or
dec
ss
mulb
add
in
cmpsl
movsb
and
mov
lea
mov
sub
jg
inc
xchg
inc
loope
and
mov
sahf
fmulp
iret
inc
mov
xchg
add
daa
iret
jmp
in
inc
or
inc
sbb
fcompl
mov
or
cwtl
mov
loope
sbb
pop
scas
test
call
sti
dec
push
insb
nop
push
loopew
sbb
into
cld
mov
js
adc
into
xchg
enter
or
jnp
lret
xchg
rorb
stc
mov
cmpsl
mov
scas
jmp
jno
cmp
push
in
fadd
dec
add
push
add
dec
mov
enter
push
sbb
inc
addl
dec
pop
xchg
cmpsb
rol
inc
fs
cmp
clc
mov
sbb
and
mov
scas
in
push
js
into
iret
lret
xchg
cld
repz
fwait
push
scas
shrb
fdivl
xor
or
or
jge
dec
pop
jle
filds
pop
fmull
inc
push
stos
inc
xchg
push
inc
cmc
rolb
pop
mov
xor
andb
mov
shrl
add
mov
pop
mov
inc
inc
adcb
jns
jnp
or
and
xchg
das
or
das
or
mov
add
mov
pop
and
js
out
mov
xchg
jae
pushf
sub
aad
adc
dec
fistpl
cwtl
mov
testl
add
sarb
xor
mov
dec
repz
or
jmp
add
push
and
xor
test
lea
and
mov
mov
call
add
shl
fwait
testl
in
sub
test
shrl
sbb
pusha
lahf
mov
mov
adc
pop
gs
mov
popa
mov
es
aad
jmp
xchg
aad
lea
bound
jl
addr16
mov
pop
mov
dec
bound
into
mov
int3
xor
inc
jmp
rcll
mov
sub
xchg
adcl
or
push
inc
pop
pop
add
mov
mov
mov
addl
inc
push
shll
leave
es
enter
outsl
mov
push
push
pop
scas
cmp
sahf
fbstp
fwait
aas
cmp
lret
aad
inc
outsl
sti
dec
ficoms
pop
pop
mov
test
aas
repnz
cwtl
push
add
movsl
xchg
mov
jnp
nop
mov
xor
cltd
aam
jbe
pusha
sub
mov
xor
xchg
inc
pusha
sbb
cmp
mov
lahf
mov
jge
inc
stos
pushf
and
jno
lds
mov
inc
rclb
roll
pusha
ljmp
push
outsl
xor
xchg
mov
loope
into
mov
mov
cmp
ljmp
jae
and
pop
inc
rcll
aas
jg
fdiv
test
out
ss
dec
add
adc
jns
aaa
xchg
adc
mov
cld
cmp
scas
pshufw
rolb
push
sub
movl
sbb
aad
sbb
bswap
xor
dec
add
xchg
jp
add
in
mov
sahf
out
popa
test
mov
xchg
sbb
push
out
fnstenv
rcl
lods
sbb
mov
cmc
int
adcb
adc
jnp
mov
ret
jl,pn
mov
cmpsl
rclb
daa
push
dec
cltd
in
fisubl
mov
jp
or
in
ja
and
popaw
inc
js
cmc
fcomp
dec
icebp
stc
sarl
dec
mov
fstpl
nop
stos
xlat
lcall
fcmove
imul
mov
insl
repnz
daa
mov
das
xlat
and
xchg
fdivrl
out
mov
cmp
inc
into
dec
imul
push
nop
loope
lcall
outsl
popa
outsb
sarb
xchg
lock
mov
dec
into
pop
loop
test
push
cmpsb
cmp
pop
ss
cwtl
incl
ret
adc
fists
in
mov
adc
and
mov
sti
xor
mov
or
repz
iret
push
xchg
jns
mov
incb
mov
jb
testl
jp
out
push
push
scas
mov
cmp
cli
add
inc
hlt
insb
mov
imul
cli
lods
sub
popf
and
movsl
mov
sti
dec
sbb
dec
jp
push
fldl
stos
pusha
mov
je
sbb
sbb
mov
xor
in
pop
push
iret
cmp
pop
or
cmp
rorb
std
pop
mov
pop
in
or
icebp
sbb
add
pop
jae
mov
cmp
inc
ss
ss
xor
adc
xchg
mov
repnz
bnd
jg
iret
inc
sbb
lcall
les
lret
cmpsb
mov
lcall
cmpb
int
xchg
into
outsb
rcrl
cs
loopne
adc
add
stos
jmp
sbb
outsb
or
adc
stc
sahf
int3
jl
pop
stos
test
mov
pushf
fucomip
in
test
idivl
push
jbe
out
nop
sub
faddl
not
pop
xchg
jle
xor
inc
jnp
sub
lods
add
hlt
sarb
shll
aaa
mov
cmpsl
add
fcoml
pop
nop
sub
jne
fisubl
push
fsubp
push
cli
pop
pushf
dec
out
cmp
aas
enter
sti
xor
pusha
movsb
inc
pop
imul
jnp
in
jg
push
push
add
fmuls
clc
fnsave
je
mov
adc
sbb
repz
test
dec
movsb
or
call
fistpl
stos
test
mov
jno
into
push
aas
fcoml
jbe
mov
cld
mov
push
bnd
jp
xchg
dec
jb
xchg
cmp
inc
sbb
int
push
rcll
sub
mov
push
dec
stos
dec
jo
push
sbb
gs
dec
jmp
jnp
sbb
xchg
arpl
repz
jp
arpl
movsl
jecxz
insl
cmpsb
out
mov
rolb
lret
insb
div
lea
cmp
pop
leave
dec
cmp
mov
jne
inc
dec
mov
cmp
sbbl
fiaddl
pushf
cmp
in
call
lds
mov
ret
fisubs
pop
fwait
cwtl
mov
int3
andl
or
cmp
outsl
jge
sbb
gs
mov
movsl
add
or
xchg
add
push
jbe
lcall
inc
out
inc
popf
lret
xchg
dec
inc
xchg
jbe
mov
clc
imul
lods
adc
sub
sub
mov
mov
add
notb
imul
cmp
xchg
mov
cs
out
andb
push
xor
je
jno
test
mov
mov
xor
cmp
jg
div
pop
loopne
add
add
fwait
out
jge
pusha
std
dec
fnstsw
std
push
adc
shl
ret
xchg
fnstcw
pushl
push
pushf
gs
add
dec
sub
xor
and
mov
imul
int
push
imul
xchg
mov
pop
pop
mov
jno
pop
nop
loopne
in
fcoml
fldt
jb
ret
ret
fisttpl
and
mov
jbe
push
dec
pop
out
add
or
stos
xchg
cmp
fdivrs
mov
mov
enter
std
push
fsubl
cli
sub
mov
adc
cmpsb
and
andb
dec
fistpll
sbb
lds
xchg
dec
mov
push
or
js
sbb
test
inc
and
jnp
bound
scas
ficomps
sbb
adc
adc
mov
sbb
loopne
pushf
mov
mov
xchg
mov
mov
and
pop
jp
xchg
sbb
lock
jecxz
nop
lcall
add
jle
cmp
xchg
adc
lcall
or
xchg
mov
daa
es
inc
lds
sbb
sub
sbb
leavew
push
fisttps
cmc
or
push
outsl
sub
or
mov
icebp
or
jo
mov
push
or
out
les
pop
mov
sbb
add
push
sub
sbb
sbb
add
mov
repz
adc
addr16
pop
out
pop
mov
aad
or
fidivl
and
mov
xor
sub
jle
lcall
sub
add
shrl
mov
xchg
lcall
adc
cmpsb
sbb
mov
test
test
leave
aas
lret
pop
adc
push
add
ret
lods
dec
shrl
xchg
mov
repz
push
lds
dec
repnz
leave
test
mov
loopne
pushf
sub
cmpsl
ret
enter
hlt
fs
cmp
pop
push
sbb
repz
cmp
mov
and
sti
xchg
jl
adc
mov
cmc
cmpsb
add
leave
mov
jmp
in
inc
adc
jmp
mov
jmp
fildll
sub
jecxz
push
mov
fidivs
scas
mov
xor
push
fnstenv
dec
push
sahf
dec
gs
mov
mov
push
insb
mov
pop
sub
repnz
mov
ficoml
fstl
movsb
in
lock
cwtl
aas
adc
je
rcll
ss
sub
data16
in
sub
mov
fldt
shlb
je
jmp
sbbl
inc
stc
addb
mov
mov
aam
push
in
push
popf
and
mov
mov
xchg
sti
fwait
mov
dec
and
mov
cmpl
xor
sbb
roll
les
fisttpll
cmp
sbb
push
in
mov
popl
xor
nop
push
outsb
mov
jne
or
jmp
cmp
push
mov
push
dec
das
sub
cld
nop
movsl
mov
stc
mov
in
add
data16
jb
in
inc
int
stos
movsb
ss
dec
jle
and
mov
jne
mov
fmull
fadds
push
cwtl
mov
shrl
leave
ret
sbb
jno
mov
mov
inc
sarl
inc
cmp
pop
xlat
xchg
jnp
sbb
ficoml
std
or
std
jns
rclb
stos
add
pop
sbb
push
mov
call
lcall
popf
mov
cmp
movsl
xor
stos
xlat
ret
cmp
inc
push
es
jp
lahf
add
ds
les
mov
repnz
sbb
mov
mov
in
mov
or
xchg
cmpsl
mov
fnstenv
mov
push
outsb
xchg
mov
or
scas
fsubl
or
mov
xchg
push
sub
push
dec
sbb
insl
int3
push
jp
es
icebp
push
push
neg
pop
and
jo
and
push
jae
jge
push
xchg
jns
adc
mov
mov
lret
xorl
pushf
xor
fstps
insb
call
push
subb
mov
ljmp
aad
jmp
inc
cmpsb
lea
sahf
cli
shl
or
ss
popf
daa
fucomi
jl
pop
int3
cmc
xor
jb
test
fstpt
js
repz
push
xor
inc
sbb
scas
mov
sbb
push
sub
popa
enter
add
fsubrs
aas
push
add
test
push
mov
push
push
mov
int3
subb
mov
bound
fs
jb
push
jns
jno
push
int
add
cmp
cmp
fisubs
mov
inc
xor
jns
aam
jno
cmp
inc
aam
enter
mov
shlb
loope
sub
out
fdivl
cld
inc
imul
pop
jno
push
pop
xchg
xchg
jne
inc
lret
jne
cmc
mov
stos
adc
gs
mov
mov
aas
cmc
mov
cmp
ja
xchg
arpl
das
iret
int
out
fiaddl
cwtl
inc
mov
ss
push
ror
pop
add
dec
mov
adc
aas
jg
inc
mov
clc
rcrl
dec
adc
jle
data16
and
repnz
imul
adc
jo
aad
stc
daa
pop
and
xchg
insl
mov
test
pusha
in
lret
das
push
pop
clc
inc
add
in
and
outsb
sub
mov
stos
sbb
popl
out
negb
cmp
js
adc
stos
sbb
mov
pop
mov
cli
sbb
stos
into
hlt
into
pop
aaa
inc
xor
xchg
and
cmp
mov
pop
mov
sbb
jg
ficoml
pop
ja
cltd
shlb
jae
repz
and
cmp
sar
or
pop
lea
jecxz
mov
adcb
and
loop
mov
or
inc
sub
lcall
cli
popl
mov
imul
sbb
xor
lret
dec
scas
sbb
je
sub
out
jmp
popa
add
mov
into
sub
cmp
fidivs
lds
mov
test
ret
adc
mov
sub
cs
ret
arpl
xor
shlb
std
stos
int3
mov
ret
mov
shlb
jmp
push
inc
call
xchg
inc
jns
pushf
int3
ret
sub
out
insb
mov
not
mov
daa
sahf
inc
add
push
inc
jno
out
in
sti
and
test
sub
out
jge
inc
in
inc
or
jg
inc
add
ret
clc
jle
test
iret
mov
dec
jp
inc
out
sub
cmp
and
pop
lds
mov
xor
test
das
or
push
xor
fiadds
cmp
mov
shll
mov
and
xchg
dec
in
xor
pop
lret
outsb
les
jecxz
movl
jne
mov
mov
call
cli
sahf
nop
jle
mov
std
sub
add
dec
pop
stc
mov
mov
stos
mov
push
aam
mov
pop
dec
popa
jb
es
pop
outsl
pop
vmovaps
or
jb
repz
mov
push
dec
cmpsl
jo
sti
push
or
and
push
dec
xchg
ss
inc
and
adc
pusha
outsl
sbb
stos
stos
test
cs
enter
dec
add
lods
movsb
xor
xchg
jmp
jb
jecxz
pop
sub
fiaddl
adc
insb
cmp
into
adc
mov
popa
ret
lcall
dec
rorl
add
bound
mov
enter
xor
mov
xchg
push
sbb
ds
pop
push
les
iret
xchg
and
pop
xchg
push
jns
jge
push
mov
pop
cmpsl
out
fwait
pop
or
movsl
pop
push
shrl
hlt
jns
inc
fcoml
test
and
in
cmpsb
lea
jl
pop
cmpb
inc
ja
int3
inc
inc
out
jb
cli
mov
lret
sub
xchg
lock
cld
push
inc
or
or
std
fisttpll
push
add
xor
out
dec
inc
stos
test
fsubp
out
test
sbb
outsl
scas
pop
dec
shrb
or
cs
rol
dec
imul
mov
lock
add
inc
xor
ret
and
jl
std
inc
lds
sarb
sbb
pushf
inc
outsl
push
fcmove
je
mov
fmull
sbb
aad
arpl
rclb
push
inc
jp
in
in
fists
cltd
shll
lea
push
xor
icebp
pop
popf
pop
ljmp
shll
scas
jnp
dec
test
jg
ret
push
imul
test
push
lock
mov
mov
dec
mov
xchg
pop
push
xor
fs
daa
add
dec
cwtl
bound
pop
mov
xchg
cmp
or
sti
mov
xchg
mov
daa
das
fisubs
dec
cmp
gs
jp
in
test
mov
mov
push
ja
enter
inc
mov
movsl
mov
mov
jp
or
sbb
imul
and
adc
daa
or
mov
mov
stos
cld
ret
loope
in
jle
push
xchg
shlb
xchg
ljmp
cmp
jns
mov
fimuls
cmc
shll
pop
cvtpi2ps
cmc
stos
jo
xor
or
inc
imul
notl
mov
or
lods
or
push
adc
aas
sub
pushf
movsb
mov
cmp
in
pop
push
test
dec
push
adc
ror
clc
popa
mov
ja
mov
cmp
fs
mov
and
pop
sub
mov
out
insb
inc
cmp
xchg
fsubrl
dec
mov
jecxz
icebp
orb
shll
test
mov
leave
aaa
rorl
sub
clc
push
inc
nop
ficomps
movsl
sbb
insl
add
hlt
dec
cld
mov
cmpsb
push
inc
adc
mov
aam
je
les
decb
inc
dec
xchg
mov
adc
inc
sbb
rolb
jns
jmp
stc
cmp
mov
repz
or
jmp
jo
cwtl
xchg
outsb
ret
sbb
mov
mov
insl
pop
push
jmp
jge
hlt
or
jae
ficompl
stos
ja
dec
ja
aas
inc
cmc
sti
inc
xchg
dec
sbb
nop
lcall
xor
gs
xchg
ficomps
cmpsb
and
out
cmp
addb
add
cmpsb
jmp
je
rolb
jg
dec
and
adc
jae
lds
aaa
outsb
js
pop
sti
out
mov
out
pop
mov
cmpsl
call
dec
in
jg
iret
fimull
cmpsl
out
push
ds
mov
or
scas
scas
pop
fsubrl
lods
push
rcll
add
mov
pop
decb
rclb
sub
add
notl
jns
in
dec
in
mov
imul
pop
xchg
push
inc
xor
call
xor
popa
je
jbe
pop
ret
mov
icebp
les
sahf
repz
loope
and
inc
out
sbb
fs
mov
dec
loope
mov
pop
adc
xchg
fistpll
and
arpl
lret
sub
push
xchg
stos
mov
pop
push
sbb
add
inc
sub
adc
sub
mov
and
and
push
xlat
aas
mov
xor
aas
bound
into
adc
push
push
push
cmp
je
inc
movsb
mov
js
loopne
data16
mov
hlt
xor
mov
into
xchg
imul
add
loope
xchg
or
out
mov
cli
push
imul
loopne
sahf
shl
lds
les
cwtl
and
fcom
in
sti
and
ret
popl
push
push
sub
in
jbe
adc
lea
hlt
jl
xchg
adcl
lods
push
xchg
es
nop
jno
jns
pop
mov
cwtl
push
xchg
cmp
lret
add
ret
push
cmp
jnp
xor
xor
sbb
mov
cld
mov
aam
add
mul
lret
jmp
sbb
lcall
and
pop
cmp
push
dec
ficoml
jbe
sti
sub
xor
xor
je
inc
mov
data16
rcrb
mov
jae
xchg
movsl
or
mov
ss
add
jnp
xor
fdivs
xor
lahf
or
ficoms
add
subl
subl
iret
add
add
sti
push
cmp
ds
aas
es
insb
xor
lcall
mov
pop
test
adc
lods
cli
add
add
cwtl
mov
leave
ljmp
lea
bound
jp
dec
add
jns
stc
shrl
int3
jle
sti
movsb
cmp
pop
loopne
outsl
ljmp
daa
adc
shll
arpl
call
dec
sti
adcb
and
cmp
and
xor
movlps
stos
lds
das
movsl
xchg
xor
add
adc
mov
mov
and
cli
push
xor
inc
sub
mov
add
push
xchg
dec
add
xchg
ja
or
adc
mov
adc
popf
add
pop
pop
in
sub
sahf
mov
adc
push
push
or
call
pop
daa
xchg
sahf
jbe
mov
or
or
dec
movsb
xchg
xchg
in
pusha
jno
fsts
outsl
jmp
adc
pop
mov
or
imul
mov
fistps
in
dec
jmp
mov
mov
dec
jne
and
sbb
xchg
inc
cmp
rolb
imull
testl
mov
push
icebp
fdivs
lret
ret
and
mov
sbb
push
outsl
sbbl
push
movb
rol
sub
in
jp
ja
cmp
mov
dec
pop
xchg
push
outsb
iret
add
xlat
stos
sahf
test
cmp
clc
jae
push
mov
popf
pop
aas
sub
sbb
or
or
or
jle
mov
mov
pop
lods
out
push
aad
inc
mov
repz
adc
xchg
cmp
faddl
inc
xor
loope
ss
add
in
cmpsb
ds
in
outsl
dec
xorb
sub
inc
test
xor
adc
push
push
xor
rorl
dec
and
xchg
test
mov
mov
leave
add
pop
sbb
lock
dec
sub
inc
xor
mov
das
jns
lret
test
je
aam
jge
pushf
pop
mov
leave
mov
aaa
xchg
jb
adc
nop
test
pop
pop
pop
xor
imul
ds
push
or
cmovs
loop
outsb
aam
pushf
mov
push
or
and
das
std
fwait
test
outsl
adc
and
sbb
movsl
test
jnp
lds
out
out
jne
movsb
adc
xorb
cwtl
test
push
dec
pop
or
jle
test
or
in
ss
xor
sti
inc
pop
dec
stos
ret
adc
leave
xor
push
inc
or
mov
outsl
loop
dec
mov
pop
popa
pop
or
jl
xor
in
iret
mov
dec
scas
sub
js
popa
sbb
out
xchg
mov
iret
es
jmp
cmp
push
je
vrcpss
mov
test
mov
jb
lods
push
add
lahf
and
in
mov
imul
mov
xor
pusha
adc
mov
push
mov
push
push
jno
lahf
and
push
out
imul
fdivrs
lds
pop
xchg
insl
cmp
cwtl
pop
pop
sub
lcall
fistl
mov
xchg
mov
insl
stos
push
sub
jle
sbb
jmp
or
mov
dec
int
jae
mov
xorl
scas
push
movl
pop
push
mov
mov
sub
loop
push
add
je
jl
mov
dec
sbb
xor
mov
and
popf
xchg
add
pop
xchg
movsl
int
lock
push
mov
lods
pop
lret
jmp
cmp
mov
sbb
or
pop
int3
jg
xchg
out
inc
or
stc
mov
jl
imul
dec
jne
push
loope
jae
xlat
pushf
and
adc
add
mov
pop
mov
mov
imul
sahf
push
or
mov
sbb
push
dec
xchg
jne
mov
aad
and
push
aam
rclb
cli
push
ret
jge
mov
push
inc
arpl
loopne
sbb
fimuls
scas
push
push
and
in
mov
and
cwtl
mov
jb
jg
adcl
lea
mov
sbb
addb
test
xor
xlat
mov
cmp
and
rclb
cmp
in
cmp
xor
mov
adc
dec
aaa
cwtl
sub
cli
leave
xlat
push
fadds
je
mov
mov
sti
out
enter
pop
mulb
dec
mov
mov
push
or
pop
cmp
sti
scas
scas
pop
rcrl
imul
mov
stos
lahf
push
ret
mov
test
xchg
loope
fistpll
addr16
inc
movsb
xor
mov
push
xchg
pop
scas
int3
jne
jbe
imull
jmp
setge
mov
mov
mov
mov
cmp
mov
sbb
mov
pmaddwd
pop
add
addr16
ja
sub
es
cltd
sub
enter
orb
jl
mov
mov
mov
mov
pop
lds
mov
pop
out
and
push
cmp
push
fiaddl
or
inc
dec
xchg
xor
adc
sub
out
mov
in
mov
psubsw
sub
popf
in
fsubs
pushf
outsb
cmp
push
or
add
cmpsl
cs
insb
add
jg
sbb
add
xchg
sbb
loopne
sti
shll
xlat
adc
ja
cmp
pusha
fidivl
lcall
testl
lahf
lea
push
ja
in
inc
push
adc
cmp
xor
loop
pushf
pop
xchg
lea
push
adc
and
pusha
in
out
lds
push
mov
das
cmc
enter
and
xor
popa
test
mov
clc
adcb
mov
scas
sti
push
cmp
adc
aad
xor
sbb
push
imul
subb
push
mov
mov
cmp
in
and
fnsave
test
and
movsl
xchg
mov
and
test
je
nop
push
mov
punpckhbw
or
gs
ljmp
mov
pop
pop
int3
cmp
subl
call
mov
lods
jno
or
sub
movsb
iret
stc
cmp
mov
sbb
pusha
pop
xor
add
dec
cmp
dec
mov
jmp
rcrb
fs
pop
je
addr16
cmpsb
adc
or
pop
rol
adc
xor
lods
fs
enter
fstl
fnstsw
cli
and
cmp
and
xchg
imul
add
jns
test
insl
repnz
lret
and
push
or
roll
mov
ret
add
dec
pop
jecxz
int
mov
dec
lret
subl
adc
mov
jno
inc
jns
and
add
icebp
jae
dec
test
mov
mov
and
lods
enter
jne
cmp
sbb
jle
subl
or
stos
add
jns
mov
repz
insb
sbb
pop
mov
idivl
dec
fs
jl
cmp
jg
aaa
arpl
sub
jg
mov
jne
dec
loop
mov
leave
push
hlt
dec
nop
jp,pn
xor
pop
loopne
les
mov
in
clc
and
adc
push
je
testl
cmc
sbb
dec
push
or
mov
mov
or
enter
sbb
iret
and
push
push
dec
mov
aad
imul
mov
js
cmp
mov
xchg
clc
dec
pop
loopne
out
or
rcll
aas
jg
mov
jge
leave
std
mov
lods
dec
inc
jl
push
cli
mov
sarb
pop
mov
fistpll
mov
call
dec
cmpsb
add
fwait
scas
fwait
jnp
xor
cmp
add
sarb
cmp
dec
xchg
ret
shrl
ret
testb
mov
imul
test
xor
jg
cwtl
add
add
cmp
aas
fcmovbe
lds
mov
lret
and
jno
mov
dec
xor
and
outsl
sub
add
sbb
lret
xor
inc
ja
lods
inc
test
mov
scas
cmpsb
test
dec
into
nop
sub
push
test
mov
jbe
jl
pop
cmpb
loopne
or
push
sarl
sbb
fmull
jo
ljmp
test
push
jecxz
and
in
jmp
jl
cmc
ja
int3
pop
jecxz
add
scas
jge
mov
jb
imul
adc
js
cs
cwtl
and
or
mov
loop
leave
repnz
lcall
xchg
sub
and
and
int3
jbe
fadd
mov
push
cmpl
in
fcmovne
lahf
movsb
pop
cmpsb
mov
insb
and
sbb
add
test
mov
cmpsb
iret
mov
cmp
mov
pop
jnp
adc
lcall
jle
mov
xchg
sub
sbbb
pop
dec
sti
or
fcomip
and
ret
or
cmpsl
cltd
sub
push
cltd
fildl
pop
and
sti
adc
call
push
mov
pop
cli
lods
jae
push
sub
jne
lahf
push
aas
mov
test
mov
jmp
jl
jnp
adc
bnd
sbb
adc
mov
mov
aad
sub
mov
sbb
push
pop
ds
push
in
cmp
or
dec
inc
or
in
insb
xor
cmp
cmpb
shll
sbb
addr16
pop
sub
xor
clc
lret
subl
mov
or
lock
les
or
inc
add
imul
xchg
loop
inc
xor
sarl
mov
mov
mov
addr16
mov
push
arpl
push
enter
in
fcoms
jmp
adc
mov
sbb
pop
push
mov
dec
jae
add
test
and
pop
xchg
mov
add
jecxz
lret
add
filds
testb
push
aad
xchg
xchg
inc
insb
lods
mov
pop
push
inc
cmpb
mov
in
pop
fmull
cmpsb
pop
xchg
loop
insb
push
aas
out
sbb
fs
jbe
mov
cld
sub
inc
and
cmp
inc
std
jp
dec
bt
add
popf
imul
push
out
fwait
inc
pop
out
add
std
pop
inc
cmc
pop
cmp
cltd
pop
xchg
add
mov
js
test
movsl
rcll
xlat
mov
repz
outsb
leave
outsl
lret
inc
add
sub
popf
psadbw
jno
fildl
push
mov
cmpsb
je
or
dec
sbb
movsl
sub
nop
int3
jp
imul
pop
fwait
loope
mov
mov
mov
pushf
mov
sub
xor
mov
sbb
dec
cld
jns
push
xor
mov
in
sbb
repnz
xchg
inc
mov
push
or
xchg
imul
jb
xchg
sbb
lcall
and
ret
push
cmp
imul
mov
dec
mov
pop
jnp
mov
jns
jmp
int
adc
cmc
inc
int
xor
lods
and
mov
mov
sub
out
inc
mov
mov
inc
ja
inc
arpl
loop
inc
js
add
and
fildll
pushf
leave
jmp
clc
mov
sbb
ret
shrb
and
cmc
in
inc
or
adc
and
in
lods
mov
sbb
push
pusha
test
bound
js
add
inc
jecxz
sbb
mov
jmp
or
and
dec
fincstp
adc
arpl
pop
dec
ds
inc
icebp
gs
mov
inc
fldt
inc
scas
adcb
xlat
xchg
lret
xlat
out
push
or
mov
test
out
stos
fistpl
aas
mov
enter
out
and
jg
out
pushf
xlat
pop
ret
lds
rcl
push
jne
mov
lsl
push
and
mov
mov
sbb
pop
inc
dec
sahf
mov
cmpb
mov
ss
shll
or
mov
xchg
push
ficomps
xchg
int3
jb
iret
xchg
push
inc
add
loope
jg
or
movsl
push
adc
mov
imul
cmp
lret
and
push
push
ret
jle
arpl
repnz
aas
int
jo
clc
sbb
adc
and
je
mov
test
test
xorl
ficoms
dec
lret
mov
lcall
sbb
popa
lret
or
cmp
loop
sahf
imul
sbb
cmp
mov
mov
addr16
xor
push
dec
sub
test
pop
in
addr16
jge
repnz
gs
lods
add
push
ds
insb
jb
sub
inc
in
push
xchg
leave
and
pusha
orl
mov
lret
sbb
pop
xor
andb
sbb
fisubrs
pop
push
pop
and
imul
cmpsb
out
cld
xchg
es
js
jmp
jnp
dec
push
sahf
push
sbb
fisubl
xor
mov
cmpsb
movsb
mov
fsubl
lods
adc
dec
or
repz
int3
lcall
cltd
cmp
inc
inc
push
sub
mov
add
stc
sub
pop
jns
push
add
int3
add
lods
sar
arpl
shrl
outsl
push
xchg
fcoms
push
shrb
arpl
inc
insb
fisubl
in
push
inc
push
faddl
jp
js
call
fdivrs
mov
data16
rcrb
jl
xchg
xor
fcmovnbe
rorb
stc
out
cmpsl
sbb
in
jb
cmp
adc
mov
filds
dec
adc
add
mov
out
xchg
inc
stc
dec
mov
inc
xchg
popa
lcall
push
dec
rorl
mov
in
pushf
xchg
and
add
jmp
in
insw
popa
jno
imul
inc
leave
or
cld
pop
inc
in
pop
shll
bound
shl
mov
nop
call
push
cmpsl
leave
xchg
popf
shl
lods
xor
mov
sub
jg
out
or
mov
dec
or
push
jns
fs
inc
lahf
data16
xor
or
inc
xor
xor
mov
bound
xlat
jno
adc
imul
es
cmp
sbb
addl
insl
jno
fs
popa
jmp
dec
and
and
and
pop
xchg
inc
decb
push
notb
mov
push
xchg
adc
imul
sarl
mov
movsl
sbb
mov
call
push
lcall
shlb
pop
sbb
int
sub
out
mov
pop
mov
or
sbb
push
orps
notl
test
sub
movsb
sub
repnz
das
frstor
mov
cmc
mov
bound
imulb
mov
lahf
dec
int
mov
stos
push
xorl
scas
daa
fs
mov
je
sar
and
ljmp
leave
out
fisttps
fisubs
notl
fidivl
mov
incl
pushf
rcrl
loop
jns
push
mov
jno
push
gs
int
push
or
xchg
test
movsl
subl
push
jmp
shlb
sub
iret
cmpsl
mov
ret
jns
jb
imul
lock
repnz
in
xor
outsb
mov
mov
int3
jmp
aaa
pop
lods
insb
inc
mov
data16
sub
or
mov
rolb
repz
test
push
cmp
xchg
jno
xor
sbb
xlat
push
popa
lret
lods
out
xor
mov
mov
data16
cli
xor
mov
sub
popf
fucomp
js
pop
lods
mov
push
sub
adc
sahf
lea
inc
sub
add
in
outsl
xorb
inc
push
les
sub
nop
cld
repnz
inc
add
js
sbb
clc
lea
sti
aaa
and
push
mov
in
jnp
push
mov
dec
arpl
and
adc
dec
stos
mov
ja
pop
pushl
add
aaa
ljmp
fdivs
pop
sub
pop
je
cs
int
js
dec
add
mov
ja
jge
mov
xlat
mov
inc
sub
shll
stos
stos
mov
cmp
mov
xchg
js
jecxz
cs
in
cmp
cwtl
mov
xor
sub
and
xchg
enter
lahf
rol
repz
fwait
addr16
pushf
lahf
fs
fnsave
or
lods
inc
jp
enter
xchg
leave
fs
push
pop
shrl
pop
ja
mov
and
mov
sahf
xchg
jae
lahf
cltd
fwait
hlt
pop
pop
xor
jmp
ljmp
es
xor
or
and
push
sbb
test
sbb
push
shlb
jnp
sub
cmp
aas
push
mov
xor
mov
in
lea
rcrb
xchg
std
aaa
xlat
fdivl
jg
inc
xchg
sbb
pop
and
insl
gs
das
sbb
aaa
scas
lods
add
xchg
negb
push
fwait
xchg
imul
shr
pop
aaa
out
xor
cmpsl
inc
inc
arpl
cmp
fwait
addb
xchg
add
sbb
out
mov
sbb
out
mov
mov
jle
gs
arpl
in
scas
xor
frstor
fstps
sti
inc
stos
add
xchg
aas
dec
fisttpll
orl
dec
sub
jl
and
movsl
test
or
pop
pusha
mov
iret
mov
adc
into
and
int3
movl
push
js
lcall
sub
movlps
add
inc
testb
in
push
ret
push
mov
xchg
insl
dec
mov
mov
movsl
inc
mov
dec
jb
or
mov
add
cmp
out
push
sbb
mov
add
test
jmp
int3
or
fbstp
pop
adc
cld
dec
mov
movsb
fs
jno
shrl
mov
xchg
pop
cmp
sti
mov
adc
adc
add
rcrb
or
and
je
enter
pop
add
fs
popa
sbb
xchg
mov
mov
ljmp
dec
lcall
roll
push
jg
lahf
sahf
sbb
dec
pop
and
leave
jbe
neg
pop
pop
aas
fadd
nop
and
push
and
mov
pop
scas
sbb
test
jp
push
jecxz
fsub
arpl
push
add
jl
in
std
bound
mov
xor
incb
xchg
insb
cmc
lret
arpl
sbb
fiaddl
jns
mov
ret
iret
xchg
rcrl
mov
cs
or
testb
cmc
lock
faddl
push
call
mov
leave
pop
int3
ret
jle
inc
push
adc
andl
shrb
js
adc
inc
aaa
pop
call
push
push
sahf
sub
push
out
mov
std
or
sbbl
inc
sub
pop
or
lods
mov
adc
clc
mov
ror
xor
repnz
int
cmp
test
lea
add
clc
xlat
fisubl
ret
cmp
pop
insb
fcoml
or
mov
iret
test
cmpsb
fsubs
inc
stc
fcmove
shrb
aas
and
or
aad
loop
pop
inc
faddp
push
pop
inc
test
lcall
jge
pop
fistpl
test
jecxz
push
dec
sub
add
out
mov
aam
pop
push
pop
jae
comiss
adc
lcall
xchg
sub
xor
bound
or
jmp
cmc
aad
adc
cmp
cmp
jae
js
inc
aam
ds
lcall
jno
mov
cwtl
lock
fiaddl
lea
pop
mov
popf
and
arpl
stos
aas
mov
mov
sbb
int
rcrl
ret
fldcw
inc
mov
test
outsl
mov
cld
adc
js
pop
push
xchg
push
repnz
push
adc
push
leave
sub
lret
mov
add
mov
jbe
das
bound
cld
popf
mov
repnz
sti
jae
inc
adc
fcompl
shr
mov
pop
lock
mov
jge
stos
dec
lret
das
xchg
std
add
ret
ret
out
push
xchg
xchg
push
lea
fdivs
sti
push
test
push
sbb
outsl
mov
mov
mov
inc
add
lods
mov
sub
ljmp
fdivrl
cld
mov
cmp
test
outsl
inc
lods
sbb
pop
jns
rcll
in
shlb
fcmovne
xchg
mov
add
lret
adc
loopne
inc
fadds
sbb
cs
push
mov
hlt
mov
jno
mov
clc
or
cmp
cmp
aas
sub
pop
out
movsl
sbbb
cmp
shlb
rcrl
movsb
sub
mov
and
std
push
cmp
les
xor
mov
cmp
jnp
xor
cmp
or
add
negl
sarb
mov
xor
lods
in
sub
mov
add
sarb
ss
aas
cwtl
aas
lea
mov
arpl
pop
mov
pop
into
repnz
loope
in
lret
inc
cmpsb
cmp
sub
xchg
lods
insb
adc
mov
sbb
icebp
mov
es
or
or
sbb
push
mov
jbe
out
mov
cmpsl
ss
ss
fwait
hlt
cmp
mov
push
addr16
xchg
push
fldl
xchg
mov
and
lods
lcall
popa
andb
insb
mov
outsb
gs
int
xchg
ret
cmp
xchg
cmp
mull
push
xchg
aam
imul
sbb
xor
push
mov
clc
add
ss
test
movsb
and
xorl
fmull
test
xchg
ds
andb
xchg
xchg
xor
xchg
sbb
scas
push
mov
dec
jae
jns
addb
movsb
filds
test
call
shr
add
fldl
and
bound
fcompl
fsubrl
stc
ret
pop
adc
shll
shr
sbb
jl
in
loop
shlb
lret
adc
xorb
in
xor
pusha
xchg
mov
movsb
xchg
stos
fistl
enter
pop
in
scas
imul
ss
test
icebp
or
mov
mov
dec
xor
push
test
or
xor
mov
add
lret
fwait
mov
xor
add
movsb
mov
xchg
enter
sahf
and
pop
imul
cli
shlb
lds
add
dec
add
out
lods
fsts
inc
sub
pop
and
push
jp
sub
jle
mov
add
fidivrl
rcrb
and
loope
sub
cmp
cmpsb
xchg
in
out
aad
pop
push
lds
sti
xor
pushf
cld
mov
mov
cmp
sbb
int3
jmp
ljmp
jno
mov
sbb
push
imul
push
cmp
stos
fiadds
and
clc
lock
inc
dec
add
jae
lret
loope
in
cmp
push
mov
pop
jne
dec
sbb
dec
arpl
clc
push
repnz
pop
dec
test
arpl
ret
cmp
dec
jae
in
cmpsl
lret
dec
mov
cmpsb
xchg
cmp
jo
les
int3
mov
and
pop
addb
mov
add
std
cmp
lret
rclb
push
mov
sbb
sbb
gs
push
sbb
in
cmpsl
call
push
xorl
outsb
sbbb
insb
pop
addl
adcl
mov
pop
jmp
jae
dec
adc
xchg
add
adc
push
sbb
mov
cld
fidivl
push
adc
jg
lock
jnp
lock
in
sbb
sub
inc
sub
add
push
fists
stos
loopne
jg
cmp
jmp
sbb
mov
stc
cmp
jge
pop
dec
cmp
fsts
ljmp
mov
sti
jl
sub
adcl
shll
xchg
dec
ja
aaa
out
xor
int
loop
adc
mov
adc
jns
cmp
mov
pop
xchg
cmp
insb
xchg
sti
push
ret
inc
out
push
fdiv
andb
xor
sub
mov
int
mov
xor
push
test
fldcw
enter
lods
cmp
and
shll
je
jecxz
dec
scas
in
ja
rcll
mov
adc
in
imul
cmp
movsb
sarb
jb
sarb
push
or
jno
mov
mov
xchg
mov
xchg
in
shlb
or
cmc
popf
fucom
in
ds
std
pushf
aam
insb
leave
add
es
data16
popl
add
mov
jb
push
mov
xor
adcl
pusha
or
fidivs
inc
mov
sub
cmpsl
daa
movb
pop
lods
lcall
xor
out
pop
dec
xor
push
mov
out
pop
arpl
ja
push
mov
ss
cld
and
test
sub
and
cmp
inc
mov
and
bound
mul
xchg
jp
ja
int3
sub
jo
and
popa
pop
sub
xchg
pop
mov
insl
or
pop
pop
insl
cmp
cld
mov
in
pavgw
mov
das
mov
and
call
aaa
mov
out
repz
sub
add
ds
lods
repnz
ja
sarl
cli
add
pop
sbb
mov
ds
and
jo
mov
inc
or
fadds
sarb
fdivl
cmpsl
aaa
jmp
push
jne
cmp
rcr
xchg
inc
sub
mov
xor
adc
cmp
xor
cli
into
jecxz
aas
jmp
pusha
push
inc
nop
dec
or
xchg
fdivp
inc
dec
fimuls
into
enter
loopne
sbb
dec
jl
fcmovu
cmpsl
jg
jmp
out
pop
inc
sub
pop
mov
lret
sbb
or
dec
aaa
movsl
daa
aaa
adc
mov
sar
xor
pushl
jb
ljmp
cmp
sub
push
int
add
test
mov
aaa
and
jp
push
push
push
inc
push
or
pop
cs
push
xor
ja
fstps
inc
movsl
addl
cmp
fisubrl
mov
sub
push
pusha
sahf
outsw
add
jbe
lods
xchg
fsubp
push
out
xchg
cmp
cs
push
xor
fisttpll
xchg
fwait
mov
aas
xchg
add
cmp
outsl
inc
push
mov
mov
shrl
decb
dec
aad
enter
jns
pushf
call
push
cmp
imul
fwait
subl
jb
mulb
mov
cmpb
push
imul
mov
sarb
dec
jle
inc
mov
xchg
ret
pop
pop
xor
fwait
cmp
ret
test
mov
pcmpgtw
push
rol
cmp
fwait
push
test
and
imul
dec
shlb
lret
loopne
pusha
jb
lcall
mov
xchg
push
xchg
clc
cmpsl
fistpl
add
push
dec
add
cmp
xchg
mov
xchg
and
add
imul
sub
loopne
daa
mov
repz
push
mov
pop
out
sbb
lods
push
xor
jg
or
sbb
mov
fdivl
jle
ljmpw
and
test
xchg
mov
push
sahf
insb
pop
nop
mov
mov
les
mov
mov
push
ss
mov
cmpsb
fisubrs
into
repz
xor
and
bound
cli
cwtl
jmp
jo
dec
pop
jmp
push
push
lahf
adc
fidivl
push
add
mov
mov
xor
sbb
lods
xchg
cs
popa
scas
sub
push
add
inc
mov
mov
insl
mov
out
fcomps
lret
in
lahf
sar
repnz
push
scas
mov
xchg
pop
dec
out
pop
arpl
jbe
push
rcrl
shll
lret
xchg
hlt
cs
les
ficompl
push
mov
test
in
sti
lds
push
adc
push
ror
addr16
dec
jo
cmp
arpl
xchg
xor
mov
xor
dec
push
test
xchg
cld
insb
pop
orl
ja
sbb
aad
fcomps
xlat
mov
mov
lcall
pusha
xchg
push
mov
push
fsubs
inc
int3
push
pop
pusha
in
xor
test
jg
cli
mov
mov
js
div
inc
pop
lock
jne
or
sub
rcrl
push
movsb
add
adc
ds
sbb
mov
pop
mov
aaa
rol
scas
scas
mov
stos
push
add
jl
out
fdivr
or
mov
mov
mov
int
iret
cmpsb
cmp
incb
xchg
lahf
loope
adc
icebp
into
jp
insb
inc
mov
popf
out
push
enter
mov
addr16
pushl
pop
add
in
add
filds
mov
sub
xchg
mov
push
call
dec
fmul
aaa
es
inc
sbb
mov
mov
mov
cltd
lods
inc
popa
lea
xchg
sbb
ljmp
pop
pop
push
push
inc
jnp
add
movsb
push
lret
jbe
xchg
pop
out
lods
int
shll
cmpsl
iret
dec
cmp
sbb
push
push
test
aad
mov
mov
jb
ja
pop
push
dec
push
dec
fcompl
adcl
xchg
mov
frstor
popa
inc
lods
push
jecxz
or
cmpsl
sahf
std
cwtl
push
sub
mov
cmp
test
test
out
lock
sub
dec
loop
push
rol
aad
test
stos
daa
xor
pop
fists
pop
aad
inc
jnp
icebp
and
imul
bound
or
aad
fwait
inc
adc
fstpt
mov
adc
and
add
mov
je
inc
in
dec
push
in
outsl
pop
cltd
inc
out
ljmp
xor
in
cmpsl
mov
das
inc
mov
icebp
add
mov
mov
push
inc
mov
mov
lcall
mov
ljmp
fs
xchg
jmp
mov
cmpsb
out
rolb
gs
rcll
jg
adc
jp
pop
pop
sbb
sub
sub
jo
mov
inc
xchg
pushf
push
outsl
jns
mov
test
or
mov
ret
adc
jbe
aam
jp
add
sub
lock
sub
dec
push
out
cwtl
lahf
xchg
imul
mov
subl
hlt
lea
cmc
add
pop
mov
bound
add
je
cmp
mov
xchg
inc
pushf
xor
iret
or
mov
cli
xor
popl
stc
lods
aaa
xchg
es
xchg
into
add
push
xchg
shrb
cmpl
cmp
push
popf
loope
out
jp
imul
in
scas
mov
jns
push
mov
gs
neg
cltd
dec
cmp
arpl
xor
lods
mov
adc
lds
stos
test
fsubrl
sahf
shll
stc
bound
cld
inc
push
testl
aam
je
loope
inc
inc
fistps
enter
mov
jl
or
xor
hlt
cltd
pop
mov
push
mov
jae
and
sbb
pop
sub
insb
sub
ds
repnz
adc
jnp
lret
sbb
in
mov
jno
pop
js
int
lret
ss
lock
cwtl
cmp
andb
adc
lds
xchg
mov
jne
mov
pop
xor
aam
lds
leave
nop
xchg
add
xchg
sti
mov
mov
jge
dec
jb
sbb
bound
cmpsl
and
cmp
or
sub
ja
loope
scas
stos
cmpsb
je
xor
repz
mov
scas
pop
jb
pop
fisttps
arpl
into
cltd
jp
mov
pop
testl
sbb
mov
out
mov
or
lods
add
pop
cld
and
test
mov
jno
and
sbb
xchg
pop
lods
pop
daa
test
insb
sbb
mov
out
inc
sub
shlb
std
cmp
cmp
stos
daa
daa
fisttpll
into
data16
mov
pushf
jne
sub
leave
loop
jns
and
xchg
sbb
notb
outsl
sbb
ja
mov
xchg
cmpsb
jmp
nop
and
scas
in
nop
adcl
add
bound
fldenv
mov
test
icebp
dec
dec
arpl
repz
push
fdivrs
jae
mov
imul
sub
sbb
rolb
fstl
out
out
cltd
cmp
in
xchg
dec
or
aad
xor
lret
cmp
jl
in
ljmp
push
outsb
outsb
test
in
cltd
std
cmp
jbe
mov
pop
int
pop
mov
adcl
sub
mov
jp
lods
cmc
repnz
scas
sahf
pop
sbb
in
mov
adc
cli
out
imul
daa
adc
or
xchg
push
ljmp
adc
sbb
and
lahf
mov
pop
in
mov
out
popf
dec
dec
cs
lea
adc
mov
mov
mov
in
divb
lds
in
jb
inc
loopne
dec
xchg
insl
dec
jmpw
and
and
ret
xor
push
popf
lock
pop
mov
stos
in
outsb
jnp
pop
mov
jne
adc
je
xor
ret
mov
call
push
sbb
gs
idiv
cmp
mov
insb
jle
lret
mov
orl
xchg
and
imul
fs
test
insb
popf
cld
mov
pushf
mov
jno
jnp
xor
popa
and
cmpsl
repnz
jl
xor
pusha
dec
div
xor
mov
dec
mov
cld
in
ss
stos
dec
std
js
mov
filds
rorl
loop
scas
sbb
into
mov
rorb
jl
flds
inc
in
sbb
emms
mov
into
ror
add
add
sub
cli
lcall
testb
xchg
inc
cmp
cli
cmpsb
pxor
iret
add
cmp
jnp
or
push
into
push
jp
xor
push
lock
lret
pusha
inc
adc
les
cmp
rcr
jl
mov
pop
mov
mov
cwtl
push
add
jg
mov
out
cmp
lods
fwait
dec
loop
sti
jmp
pop
aas
push
loop
sub
inc
inc
add
xor
in
rorb
cmp
orb
jae
fisubl
add
add
sbb
insl
mov
outsb
mov
enter
jb
inc
cmpsb
icebp
xor
leave
cmpsb
mov
xor
sub
and
push
inc
sub
dec
xor
outsb
imul
push
mov
fistps
xchg
pmullw
cmpsl
loopne
mov
sbb
leave
and
xchg
xor
cmpsl
or
pushf
mov
mov
popa
or
xchg
cmp
shll
aam
jle
movsl
push
test
ds
push
rolb
or
add
shll
popf
xchg
fdivrs
stc
inc
gs
addr16
mov
jg
sbb
cmp
out
push
pop
adc
cli
loopne
scas
outsb
fwait
jnp
iret
and
jle
adc
mov
jmp
es
push
fwait
stc
fldl
sbb
push
sbb
inc
js
mov
into
dec
bound
mov
sub
fsubl
fistl
jecxz
add
in
xchg
or
out
out
int
jnp
rcr
fs
call
pop
in
test
pop
lahf
aaa
xchg
int3
jb
xor
iret
cltd
or
sbb
pop
call
loop
cmp
fisubs
jmp
xor
xchg
cmpsl
xorl
xor
push
add
shrb
cwtl
xor
sub
roll
pop
divl
fsub
push
dec
iret
imul
xor
insl
les
add
lods
test
pusha
and
add
pop
xchg
sbb
fimull
jl
fists
popa
call
addr16
test
aam
ja
inc
test
js
pop
test
add
cmp
push
lcall
jecxz
mov
dec
hlt
sub
mov
pop
xchg
mov
adc
call
sbb
xor
outsb
repz
jns
pcmpgtb
inc
dec
and
in
pop
clc
test
adc
pop
call
mov
adc
popa
test
pop
or
dec
movsl
lahf
bound
dec
adc
and
mov
sub
pop
add
xchg
pusha
push
iret
jns
push
cltd
xchg
pop
in
adc
test
into
pop
cld
jnp
push
push
inc
in
rcrb
hlt
popa
sub
aam
es
push
ljmp
cmp
push
pop
test
jle
jg
cmp
sahf
jne
push
adc
jb
es
dec
xor
movsb
push
lret
mov
decl
mov
out
pusha
sbb
dec
sbb
sub
loope
int
bound
pop
scas
push
lods
cs
jbe
scas
aaa
sbb
sbb
dec
xchg
dec
jae
scas
xor
add
xor
cmp
aaa
rorb
es
add
jle
adc
sbb
jns
mov
pop
adc
pusha
addl
mov
and
out
xchg
mov
out
push
xor
jne
and
fwait
xchg
mov
int
lock
ljmp
ss
out
xchg
and
push
fcoml
xchg
iret
out
cmc
xor
clc
mov
addr16
mov
scas
cmp
jbe
cmc
jbe,pt
push
rorb
and
push
add
rcl
mov
notl
ds
push
xor
jae
int
insl
cmp
mov
aas
mov
call
hlt
jno
aam
cmpl
fcomps
popa
std
cmp
add
and
lret
mov
mov
adc
cwtl
push
test
cmc
mov
test
pop
inc
mov
mov
and
xor
jp
inc
mov
int3
arpl
pusha
dec
fwait
xor
jecxz
xchg
sub
and
pop
loopne
inc
test
int
aam
and
jnp
inc
into
loopne
jmp
movsl
aas
inc
mov
outsb
out
fwait
jo
outsb
or
mov
mov
mov
clc
sahf
iret
lcall
scas
cs
push
mov
into
out
iret
inc
lcall
xlat
call
sbb
ffree
dec
mov
outsl
mov
jae
pop
adc
jne
mov
adc
std
sbbl
fcoms
in
dec
fs
inc
aas
pop
xor
xchg
push
mov
imul
aad
repz
xchg
or
pusha
mov
rcrl
mov
sarb
cmpsb
fsubs
jle
cmc
cmpb
mov
push
adcb
xchg
mov
popf
repnz
aam
jle,pt
inc
add
insb
pop
ljmp
mov
adc
leave
loope
ror
sar
or
sub
cli
enter
fs
in
aam
add
inc
nop
push
dec
lret
mov
xchg
in
mov
sub
sti
lahf
ficoms
popf
dec
ds
repz
inc
cmp
not
or
fsubrl
iret
out
aad
aad
add
out
jmp
mov
sub
pushf
inc
cmp
push
mov
sbb
cmc
rcrl
mov
stc
xor
and
pop
sbb
xchg
and
in
cwtl
cmp
push
sbb
imul
add
inc
xorb
fldt
lret
xchg
mov
or
cmp
sbb
pusha
and
movsb
jo
cmp
je
movsl
adc
mov
in
sbb
jb
pop
cmpsb
sub
iret
push
mov
into
add
mov
addr16
idivb
mov
cmp
or
sub
adc
jns
mov
mov
mov
pop
inc
push
mov
fwait
sbb
or
cmc
adc
mov
aad
xor
cmp
and
pop
pop
fcomps
pusha
inc
push
jge
rclb
jmp
shlb
adc
sub
or
out
hlt
xchg
or
xor
xor
outsl
inc
cmp
pop
fmul
aaa
or
loope
ret
imul
cmp
jecxz
add
dec
enter
incl
mov
and
repnz
js
jmp
adcb
sub
jl
out
mov
cmp
imulb
jmp
push
xchg
push
fisubrl
or
cmc
rolb
and
cmpsl
lods
push
adc
int3
pusha
mov
add
xor
adc
xchg
mov
cwtl
pop
shlb
sti
xchg
mov
mov
jmp
add
and
cli
xchg
testb
inc
bound
mov
shr
mov
dec
lods
stc
notl
lds
add
je
push
push
rcrb
in
mov
ficompl
fstl
cli
inc
mov
jle
push
pusha
and
aaa
insb
rcll
aam
cmc
bound
dec
and
pop
cmpsb
lcall
mov
jg
push
sub
iret
push
and
cwtl
data16
mov
call
fiaddl
fistl
scas
int3
pop
add
adc
and
jecxz
pop
in
in
push
jae
add
mov
push
push
cmp
push
fxtract
jne
loope
add
out
xchg
sbb
out
sub
sbb
mov
cwtd
dec
push
sub
icebp
or
sub
pop
popa
loop
mov
enter
cmp
nop
fs
std
call
xchg
in
popf
in
add
mov
sub
pop
dec
sub
xor
dec
fs
xchg
pop
outsl
lea
out
in
ret
adc
inc
loope
push
lods
xchg
dec
cmp
pushf
push
jecxz
sbb
sbb
mov
fistl
push
pop
sti
ljmp
mov
push
addr16
imul
stos
ljmp
or
and
bound
lret
int
xor
nop
lret
cld
sub
dec
dec
loopne
shr
add
inc
lds
imul
mov
inc
cmp
jbe
or
cmp
ja
lcall
shrb
pop
push
fcmovnu
xor
enter
push
jecxz
sub
or
add
xchg
sbb
imul
pop
push
xor
fiadds
mov
xchg
adc
jl
aam
jmp
push
inc
inc
jnp
loop
mov
sbb
push
sbb
jmp
or
sbb
dec
or
sbb
cmp
rorl
call
xor
xor
push
sbb
fimull
push
maxps
decl
outsl
lcall
sbb
shr
inc
mov
push
outsb
scas
xchg
cwtl
sub
rolb
push
mov
jne
out
loopne
dec
mov
in
std
xchg
aam
test
enter
mov
sub
push
lcall
adc
xchg
dec
into
or
add
dec
push
push
cs
negl
shrb
sbb
hlt
mov
mulb
adc
push
out
dec
push
popl
daa
inc
imull
dec
lods
lods
pop
inc
addr16
jg
imul
xchg
push
sub
aam
push
push
add
mov
int3
icebp
std
xor
repnz
addr16
movsb
loope
pop
xchg
iret
cmp
lock
scas
dec
add
fldenv
rolb
xchg
xchg
inc
cmpsl
scas
and
bndldx
movsl
nop
ljmp
hlt
jnp
jge
test
shlb
sub
add
icebp
dec
popf
into
or
and
aas
or
test
aas
mov
test
adc
repz
or
aas
sbb
xor
bound
jg
jmp
mov
mov
ljmp
nop
rep
pop
push
in
imul
cltd
xor
inc
js
push
fwait
sub
cs
mov
nop
pushf
loope
cmp
cmc
push
mov
das
ds
mov
pop
and
mov
inc
or
loopne
fisubrs
inc
pushf
dec
icebp
push
mov
loop
or
inc
stos
out
mov
mov
add
mov
jnp
xchg
sarb
enter
fisttps
enter
cmpl
enter
mov
mov
add
or
imul
test
loope
loopne
pop
leave
popa
cld
sbb
lahf
add
xchg
add
lret
gs
cltd
ja
cltd
mov
push
push
dec
push
adc
sub
psubw
xchg
adc
jp
mov
jno
pop
into
mov
popf
jne
jl
sub
jmp
xchg
les
hlt
push
dec
push
shll
xor
fidivrl
rolb
and
sub
jmp
bound
push
sub
dec
jmp
mov
push
shrl
push
xchg
pop
outsb
xchg
les
mov
adc
inc
mov
iret
sub
inc
xor
cld
mov
loope
push
sbb
lock
sbb
cmpsb
mov
rcl
scas
fisubrs
pop
sbb
jl
loop
je
dec
hlt
into
pop
mov
flds
push
inc
sbb
xchg
inc
pop
aas
stc
cmp
push
int3
inc
sub
std
aaa
or
sbb
xor
pushf
adc
xor
xchg
mov
mov
lea
and
lods
stc
cmp
cmp
out
sbb
ret
ffree
mov
test
sbb
nop
lds
incl
repz
inc
divb
pop
add
mov
in
push
int
adc
fistpl
xor
and
inc
xor
mov
lea
cmp
daa
mov
pop
enter
mov
xchg
lods
mov
data16
mov
xor
movsl
jg
test
lret
repnz
lods
pop
stc
repz
pop
jl
scas
cs
pop
shl
popa
std
daa
adc
lcall
dec
jl
psadbw
mov
mov
ja
push
mov
sub
cmp
add
andl
push
inc
cmp
mov
push
scas
popf
xchg
sahf
dec
pushf
xchg
fwait
and
mov
pop
and
cs
mov
mov
jge
fcompl
ds
jg
push
mov
jno
jle
push
icebp
mov
mov
jg
daa
fs
add
cli
xchg
push
stos
daa
xchg
fistl
in
and
add
mov
mov
or
lods
call
mov
mov
rcl
jns
shrl
test
mov
pop
push
mov
ficoml
ret
mov
push
xlat
repz
aam
mov
xchg
mov
inc
inc
iret
add
repnz
pop
in
cmp
jno
fisubs
sub
xor
push
fidivrs
imull
movsl
add
xlat
sub
stc
test
ja
incb
test
aad
test
popa
or
add
popa
nop
test
pop
add
xor
sub
ret
push
and
jno
lcall
xchg
mov
insl
cli
idivb
xchg
jge
sub
push
adcl
xor
cmp
cmp
xchg
movsl
mov
data16
sti
sbb
fs
jns
mov
popa
mov
call
push
xchg
pop
int
add
push
in
pusha
sbb
aad
mov
mov
pop
insl
fs
shll
dec
mov
jne
bound
fwait
lcall
cmp
sbb
adc
in
xlat
scas
js
lock
fwait
jo
cmp
mov
rclb
mov
sti
pop
xchg
ja
ss
jle
loope
xchg
stos
xchg
push
clc
pushf
jmp
pop
sbb
mov
mov
out
repz
lods
mov
ljmp
sub
mov
xchg
aad
push
adc
fcomp
mov
fs
rcr
loopne
nop
cmp
cwtl
xchg
dec
and
push
das
jns
fbstp
mov
fcoml
mov
loopne
dec
ljmp
pop
je
mov
iret
and
sbb
es
int3
lds
push
mov
jp
ja
push
dec
xchg
jno
mov
dec
rol
mov
out
mov
jns
dec
and
stc
rorl
sub
pop
pop
inc
lods
pusha
push
lcallw
insl
iret
jmp
xchg
imul
pop
mov
and
sub
xchg
adc
adc
sti
xor
inc
sub
loopne
addb
in
or
jb
popa
and
pop
cmp
out
movsl
jbe
aas
pop
lock
arpl
test
xor
dec
push
mov
int3
jecxz
jg
shl
or
mov
mov
jp
push
inc
cmpsl
ffreep
mov
je
dec
cli
pop
in
mov
jb
pop
jge
repnz
dec
lret
mov
loope
popf
adc
ret
lods
xor
std
test
adc
adc
xor
dec
pop
mov
cmp
push
jne
cmpsb
pushl
cmp
std
and
ljmp
mov
mov
xchg
or
shrl
pop
push
ljmp
aam
adc
jbe
loop
push
xor
pop
adc
or
dec
out
xlat
jbe
pusha
and
xchg
sub
aas
mov
inc
nop
mov
out
xor
and
dec
imul
xchg
into
push
outsl
shll
lods
enter
jb
outsb
loopne
cmp
addr16
dec
sbb
xor
aad
and
push
rol
or
add
mov
jecxz
mov
or
sbb
adc
in
sbb
hlt
aad
adcb
out
or
je
mov
mov
aaa
and
cli
adc
sahf
repnz
jmp
aam
xor
jmp
inc
sbb
cs
mov
jae
imul
pop
pop
mov
sub
popa
mov
imul
pop
inc
push
cmp
in
arpl
fdivr
push
adc
push
into
lret
lds
aam
xchg
sarl
aam
repnz
test
icebp
mov
pusha
cmpsb
push
mov
ja
lea
cmp
mov
cmc
jno
xchg
fdivrs
mov
mov
push
imul
dec
les
inc
repz
jge
jnp
shlb
jge
iret
mov
lds
in
or
xor
sub
fidivrl
add
add
movsl
push
sub
int3
pop
test
inc
mov
arpl
xchg
pop
ljmp
cmp
inc
les
jns
sub
lret
cmove
lods
mov
sti
sub
xor
inc
pop
ret
cmp
cmpsb
subl
inc
aaa
dec
filds
or
dec
dec
mov
or
xlat
fadds
cs
scas
dec
scas
lret
jl
arpl
test
mov
inc
mov
inc
les
sbb
xor
inc
pop
push
mov
mov
jp
adc
dec
lods
pop
fs
imul
push
cmp
loop
jne
xor
sub
fwait
and
in
jae
outsb
inc
xlat
iret
movsl
insb
adc
push
sub
data16
mov
mov
fsubrl
je
fucomip
or
cltd
int
xlat
xchg
add
in
sbb
mov
enter
nop
leave
push
ds
lds
stos
pop
test
and
pop
lods
mov
push
inc
inc
rcl
aad
pop
pop
enterw
and
jge
lods
pop
ret
mov
xchg
pop
rclb
test
cmpsl
pop
lahf
cmp
test
and
mov
scas
icebp
cs
in
jle
cmp
mov
sub
fadd
cltd
xor
les
xchg
pop
nop
add
mov
daa
iret
or
push
sbb
cmpsb
dec
mov
dec
bound
jae
lcall
cmp
jecxz
mov
mov
and
and
mov
ds
push
js,pn
outsl
xor
sahf
pop
and
pusha
mov
sub
fwait
inc
insb
add
mov
pop
jns
ja
push
aas
in
or
push
dec
mov
pop
mov
add
aam
shll
add
adc
push
sbb
sub
push
jnp
pop
sub
adc
sbb
pusha
sub
mov
loopne
iret
inc
in
sbb
cli
sarb
ja
js
jge
fbld
jae
push
cwtl
push
pop
cli
sti
sub
das
dec
dec
neg
shrl
or
imul
adc
fcoml
xchg
std
fs
stos
jne
lds
aas
sbb
mov
gs
xchg
sub
push
aas
ficompl
inc
lock
aam
or
jle
mov
xor
clc
movb
int3
in
jbe
xorb
jno
pop
fcomps
cwtl
fimull
iret
sub
fldt
gs
imul
mov
pop
cld
mov
in
jl
push
stos
jp
scas
sub
and
int
clc
dec
mov
cmp
sub
fbstp
test
mov
cwtl
push
push
xor
cld
jl
out
add
into
xchg
aad
test
mov
mov
dec
inc
stos
inc
dec
insb
or
aad
rorl
jl
jb
test
fistps
sub
mov
leave
orb
lods
dec
add
call
insb
inc
xchg
paddb
sbb
inc
mov
xor
fidivs
rorl
jne
insb
and
hlt
ja
insl
scas
mov
in
inc
mov
repz
mov
or
stos
lods
aas
cmp
es
ret
jecxz
ds
pop
std
mov
int
push
ror
aaa
xlat
pop
sbb
popf
in
aas
or
data16
xor
movsb
ss
cs
sbb
mov
subl
out
int3
xor
xchg
push
repnz
or
pusha
into
enter
lcall
lret
lret
js
xchg
or
ffreep
and
mov
mov
stos
pop
sub
and
mov
aam
mov
mov
jecxz
mov
sbb
outsb
lods
test
inc
outsb
jp
adc
mov
data16
ljmp
std
xchg
pop
mov
inc
mov
repnz
or
out
mov
lret
pop
pop
mov
ret
loop
fstpl
cmc
and
insb
outsb
nop
pop
pop
out
fsubrp
fists
sbb
mov
xchg
jmp
and
jmp
inc
insl
adc
enter
sub
jo
jnp
adc
sbb
sub
cmpsb
inc
ret
test
outsb
pop
sub
push
nop
fbld
loope
push
lds
push
and
ja
test
aam
hlt
clc
jg
in
outsl
sbbb
fsubrs
aad
outsl
pop
pushf
enter
pop
sbbb
ret
cld
mov
add
pop
es
xchg
mov
lahf
mov
dec
jecxz
sub
ja
fstpl
xor
dec
sarl
test
mov
loop
shlb
and
jmp
outsl
mov
stos
xchg
mov
sarl
mov
ret
jle
xor
rorb
inc
aad
xchg
ficoml
aaa
dec
xchg
cs
add
xor
add
dec
jbe
pop
xchg
add
repnz
repnz
rcrl
dec
fs
dec
sbb
decl
pop
rolb
add
jae
into
inc
xchg
and
xchg
adc
bound
push
xor
xor
jge
xor
or
fs
mov
push
pushf
mov
fstps
dec
decb
cs
jg
xchg
sysexit
popa
repz
jg
pop
test
push
cmc
cmovae
adc
hlt
in
imul
mov
dec
cmp
scas
stos
out
and
push
gs
fidivl
sbb
test
cmp
jmp
and
mov
dec
mov
jl
test
test
mov
xchg
sbbb
or
inc
or
hlt
dec
les
cltd
add
insl
adc
stc
std
adc
sub
jne
aad
sub
movsb
xchg
sub
inc
clc
add
mov
push
dec
add
sbbl
mov
xchg
lahf
push
addr16
or
pop
cltd
mov
sar
mov
sbb
xorl
xor
jge
or
sbb
aam
dec
xor
add
jge
cmpsl
shr
pop
call
dec
icebp
loopne
ficomps
test
clc
mov
or
sahf
jmp
ja
mov
or
sub
adc
pop
dec
stos
push
fisubs
cmp
fs
mov
std
fldenv
xchg
inc
testl
cltd
mull
fldt
mov
xchg
aam
push
sbbl
sbb
inc
sbb
sbb
mov
mov
lahf
jo
or
push
clc
mov
and
pop
sbb
pop
je
pop
push
loop
adc
lcall
cmp
jnp
inc
jbe
rorl
push
inc
push
iret
and
stos
lock
es
cmp
out
icebp
mov
rclb
dec
add
pushf
ds
pop
or
sbb
xor
and
dec
mov
adc
push
test
xchg
xchg
pop
xor
pop
in
xchg
adc
inc
pop
ror
test
inc
and
lea
pop
es
xor
adc
inc
cmp
out
std
mov
loopne
push
subl
push
inc
hlt
fcompl
push
iret
jle
div
gs
dec
sub
fsts
das
into
jge
enter
sbb
das
aas
pop
sbb
pop
xor
or
aas
aas
ja
enter
and
pop
push
push
jp
xchg
ljmp
mov
pop
daa
loope
xor
push
adc
mull
int3
jnp
je
lods
fisttpll
outsl
fucomi
lret
fildl
jo
xor
notb
mov
int
push
mov
xchg
outsl
xchg
mov
cmp
nop
cmp
mov
lret
das
mov
lret
mov
movsb
xorl
ds
jmp
jp
das
and
aas
push
sbb
iret
ss
mov
stos
add
rclb
lds
cltd
test
repnz
push
in
push
ljmp
lcall
mov
fsub
fdiv
ss
lods
out
adc
jge
int3
sbb
cmp
rol
push
mov
imul
in
jg
mov
sub
sbb
push
inc
cs
jo
rcrl
push
mov
enter
lret
push
sub
push
rorb
lods
xor
xor
cltd
and
push
jnp
mov
fsub
andl
fnstsw
dec
xchg
lock
scas
inc
xor
pop
mov
into
sahf
movsb
test
fdivr
shrb
rcll
jo
rcrl
cwtl
mov
loopne
repnz
pop
mov
dec
es
mov
mov
lret
or
lds
push
js
or
jns
push
pop
xor
fsubrl
add
dec
shr
bnd
cmpl
pop
dec
nop
xchg
mov
roll
xchg
fcmovb
dec
cmpsb
xor
aaa
sbb
sbb
adc
mov
scas
in
dec
dec
push
aaa
sub
inc
push
mov
ja
movsb
mov
cltd
mov
sub
push
push
pop
cmp
mov
scas
add
sbb
lret
stos
notb
mov
ja
dec
sub
mov
or
pusha
test
fistpl
incb
xchg
lds
mov
sarl
pop
adcl
xchg
lods
js
add
into
and
add
cmp
pop
je
ljmp
test
mov
sbbl
xorl
xor
mov
mov
sahf
dec
adc
inc
jge
arpl
pop
add
out
pop
stos
addr16
inc
or
fldl
cmc
or
dec
movsl
addr16
sbb
mov
stos
xchg
pop
mov
inc
inc
xchg
je
jbe
cmp
dec
scas
in
and
ret
add
jo
and
loopne
cmp
ret
aaa
push
push
ret
leave
sbb
in
out
fwait
mov
dec
fists
test
rcl
aaa
das
add
push
push
pop
sub
int3
xor
sub
aam
ljmp
int
fldcw
inc
xchg
stc
cld
add
shlb
sahf
mov
test
pop
rcrb
dec
out
mov
movsl
jmp
std
es
call
pusha
das
sbb
inc
lea
pusha
scas
pushf
nop
shr
cmp
or
ljmp
jg
xchg
dec
push
fdivrl
and
ljmp
insb
push
pop
xchg
inc
fs
jne
cmpsl
pop
push
adc
pop
aam
sti
hlt
inc
test
pop
aam
jp
popa
sahf
std
movsb
mov
sub
lret
lock
mov
add
xlat
addl
pop
pop
inc
push
jno
ds
or
iret
push
mov
fsubrs
fwait
test
cmp
push
imul
adc
xor
movb
mov
cld
mov
sub
das
sub
in
pop
shrb
adc
test
mov
lods
hlt
call
jb
fnsave
cmpl
insb
cmp
out
or
imul
les
xor
xor
mov
test
push
lcall
in
hlt
fdivrl
aas
pop
pop
lds
in
xchg
jmp
repnz
mov
int
mov
movsl
push
out
push
mov
sub
movb
dec
and
enter
and
jns
sbb
dec
aaa
push
shrl
pop
pop
pop
dec
js
out
inc
sub
push
popa
push
mov
or
mov
loopne
add
clc
imul
sub
push
mov
outsl
test
addr16
jg
dec
cmp
cwtl
mov
int
sbb
xchg
fistpll
pop
sahf
or
dec
push
les
xchg
std
adc
mov
cmc
sti
and
mov
insl
fcoml
push
inc
inc
arpl
shl
xchg
aas
and
xor
jle
mov
mov
or
push
scas
and
xchg
test
out
dec
ljmp
or
add
int3
int3
xor
push
fldl
mov
jb
mov
xchg
lret
dec
lods
ret
mov
pop
adc
adc
jg
inc
inc
push
jno
ret
and
repnz
push
icebp
sbb
sbb
lock
lret
inc
pop
cltd
push
xchg
jp
cmp
inc
ja
dec
cmp
pop
and
fs
sub
add
mov
cmp
push
loope
test
push
ret
dec
inc
cltd
mov
and
mov
jmp
ljmp
stos
mov
outsl
call
mov
ds
repnz
and
into
popl
aaa
adc
das
enter
lret
or
aam
cs
aas
push
cmp
cwtl
dec
addr16
dec
addb
or
sti
imul
push
ficoml
sbb
xlat
icebp
jae
pop
nop
xlat
test
mov
daa
cld
jp
sti
mov
gs
mov
dec
addr16
mov
loopne
or
lods
push
movsb
les
push
jns
ss
pusha
or
enter
jae
mov
cmp
cs
cmpsb
xchg
and
movsb
push
daa
mov
push
or
in
test
insb
pop
subl
inc
pop
enter
out
pop
dec
repnz
stos
or
faddl
mov
xchg
into
popf
pop
xor
lock
aas
inc
cwtl
dec
mov
inc
cmp
xchg
cwtl
fsubs
sbb
sbb
mov
xor
push
ds
dec
mov
ds
movsl
in
clc
pop
ret
jge
ret
cmc
nop
fidivl
repnz
xchg
push
shll
loop
aas
call
out
aam
aad
aas
mov
fs
lea
and
sub
xor
cmp
cld
mov
sbb
dec
scas
mov
call
loop
icebp
jbe
mov
insl
fisubrs
or
fadd
jmp
xor
cmp
mov
loop
add
call
dec
mov
jecxz
test
push
adc
stos
cmp
mov
adc
or
cmp
push
aam
jl
push
mov
daa
jp
mov
cmp
xor
addr16
cmp
in
into
mov
cmp
cli
rorb
divb
mov
inc
mov
imul
dec
mov
inc
add
or
push
pop
jnp
lret
add
and
clc
inc
fadds
les
aas
adc
loop
push
jmp
and
jle
push
insb
xchg
popa
jno
mov
xor
dec
mov
icebp
sti
push
aaa
mov
addr16
pop
jo
in
jg
xchg
imul
ljmp
pop
dec
adc
mov
addr16
lcall
adc
stos
mov
jl
scas
or
addr16
jb
arpl
mov
xor
mov
mov
into
das
dec
and
jmp
xchg
cmpsb
jge
jle
pop
push
mov
iret
push
scas
in
ljmp
lret
mov
imul
cltd
dec
cs
pop
sbb
not
leave
sbb
scas
jae
sub
pushf
or
in
jmp
cli
push
outsl
outsl
cld
inc
lds
push
out
mov
mov
adc
mov
xor
push
sub
aad
jns
dec
mov
jae
xchg
or
inc
aad
test
jbe
lods
adc
movsl
lods
inc
addr16
adc
cs
cs
jbe
and
dec
adc
pop
mov
int
test
out
sub
jl
lcall
pop
leave
adc
loopne
stc
jnp
sub
aad
pop
stos
add
sahf
adc
push
pop
jae
pop
mov
fisttpll
ja
add
cmp
out
inc
or
fstpt
add
fimull
pop
push
xchg
pop
xor
or
test
outsb
cmpsl
inc
mov
inc
rcrb
cmpsl
shlb
ss
xor
addr16
adc
mov
sub
sbb
mov
outsl
or
movsb
add
cmp
lahf
and
popf
pop
xchg
lods
js
and
push
cwtl
je
mov
lods
lret
xlat
dec
jb
sbb
cmp
pop
cmp
or
out
loope
mov
or
cmp
xor
in
daa
jg
mov
sbb
mov
sarb
cmp
out
call
lods
mov
lcall
dec
in
mov
lock
mov
and
inc
dec
int3
mov
and
fidivs
dec
cmp
xchg
and
mov
or
mov
clc
call
jnp
in
sbb
test
ds
ficompl
insl
sub
dec
sbb
rol
cmp
mov
jle
pop
push
sub
or
sub
int3
loop
adc
lods
das
loope
cmpsl
inc
sbb
mov
pop
mov
aad
ljmp
and
mov
repz
mov
pop
in
in
outsl
or
popf
inc
int3
shl
xchg
add
into
mov
mov
lods
jnp
jg
ja
sub
inc
aam
push
inc
enter
into
negl
mov
push
decl
or
mov
jns
xchg
sub
mov
arpl
std
inc
cmp
imul
insb
mov
pop
cmpsl
xchg
jmp
lret
jg
xchg
mov
lock
jecxz
dec
std
jns
pop
lods
flds
scas
cld
fsts
add
and
jb
mov
les
je
jns
jnp
add
xchg
aam
mov
dec
sub
adc
or
jbe
xchg
add
ds
imul
inc
push
cmpsl
ss
lcall
mov
roll
stos
test
scas
cmp
push
xchg
repnz
loop
xor
mov
loope
movsb
push
inc
inc
popa
jg
xchg
int3
insl
xchg
mov
push
fisttpl
sub
cmp
mov
sahf
sbb
xor
cmpsl
inc
push
test
lea
rcr
jecxz
loope
adc
dec
inc
add
ret
fbld
daa
int
sub
mov
dec
imul
sbb
aaa
cmpsl
mov
outsb
xor
mov
dec
push
jo
dec
and
iret
pop
adc
jb
and
sub
inc
add
lods
shll
push
lcall
icebp
xchg
push
lahf
jne
lret
mov
mov
pop
sub
mov
mov
jb
pop
fadd
mov
stos
add
mov
jnp
sbb
cmpsb
shlb
popa
divb
leave
sub
stos
daa
insl
inc
lcall
lcall
jns
xchg
mov
ljmp
lds
fmull
cmp
fiaddl
aas
stc
int3
call
xchg
lods
sbb
ja
or
push
pop
rorb
mov
jecxz
pop
adcb
mov
aam
cmp
push
loope
not
push
add
scas
sub
mov
pusha
outsb
rorl
push
stos
fmul
pop
fcomip
push
divb
or
mov
test
adc
fucomi
pop
xor
outsl
mov
sub
clc
outsl
xlat
idivb
repz
mov
dec
mov
fs
pop
loop
out
out
jmp
mov
mov
pop
rolb
adc
mov
push
xorb
dec
aam
mov
sub
adc
loope
lods
sbb
mov
cmp
mov
xlat
data16
jns
jno
xor
mov
in
pop
ljmp
add
popf
jle
das
fstl
cltd
int3
mov
addb
sbb
xchg
dec
or
loop
add
movsb
push
loop
enter
aaa
in
cwtl
and
popa
dec
popf
popa
fdivrs
cs
popa
rcrl
loope
and
cltd
movsl
pop
cmpsb
out
xchg
push
shr
adc
dec
jo
orb
call
popa
fdivr
mov
pop
daa
or
rorb
and
push
push
mov
jmp
xchg
ljmp
in
xor
sahf
sarb
mov
and
inc
mov
or
or
pop
cmpsb
ror
jnp
arpl
je
push
mov
aam
into
sbb
cmp
mov
push
pusha
cmp
jl
js
and
imul
data16
mov
repz
jns
sbb
xchg
gs
inc
loop
scas
ficoml
dec
addr16
es
and
ret
dec
in
xchg
popa
fsubl
enter
dec
and
mov
test
and
out
fdivr
xchg
mov
pop
aad
std
dec
xchg
fnstsw
jge
stc
rcr
jg
adc
dec
cli
out
outsl
popf
xor
push
out
insl
sbb
and
mov
push
ret
or
in
mov
hlt
jb
fcomps
adcb
cmpsb
cmp
test
xchg
push
cltd
shll
jo
dec
mov
adc
adc
test
and
pop
jno
iret
inc
pop
fcompl
sbb
cmp
ds
in
lcall
mov
sub
stos
movsb
js
loopne
es
lods
icebp
in
xchg
popf
out
pop
sbb
rcrl
push
push
push
push
shll
fnstenv
test
scas
lret
or
lret
inc
inc
jo
imul
fmulp
loope
test
jo
call
loop
aas
sahf
outsl
in
xorl
and
add
sahf
loopne
cmp
mov
cli
and
iret
mov
fs
sbb
ds
pop
getsec
scas
mov
rcr
cmpsb
stos
mov
pop
add
outsl
mov
rcrb
mov
lahf
mov
shrl
arpl
jo
push
sbb
cmp
adc
aad
push
fidivrl
dec
mul
adc
push
call
cmc
jnp
or
and
rcr
int
jp
jl,pn
data16
sbb
test
jo
into
pop
jbe
stos
mov
jae
jae
std
aam
push
sub
rcl
xor
test
popa
xchg
mov
fistl
in
test
cli
or
fisubs
popa
lahf
pusha
fwait
xchg
lcall
pop
push
in
ret
addr16
addr16
pop
jp
jns
aad
lahf
imul
pop
cmc
lahf
inc
inc
push
aad
fsts
dec
hlt
mov
xchg
adc
loopne
jns
inc
add
mov
data16
jae
jno
fisttps
das
lds
jmp
ficoms
les
xchg
mov
test
shrl
pop
test
mov
mov
imul
cltd
adc
dec
xchg
in
les
pop
les
jns
mov
mov
daa
adc
jo
pop
cmpsl
jmp
aad
xlat
xor
sub
scas
adc
jmp
add
adc
inc
jg
int3
lret
add
es
daa
add
pop
dec
cmp
bnd
lret
xchg
gs
es
imul
pop
adc
xor
mov
lds
mov
lock
jp
push
mov
or
dec
inc
arpl
loopne
dec
dec
scas
scas
icebp
jmp
mov
les
jge
mov
and
cwtl
lock
xor
out
or
repnz
jb
int3
sbb
lea
mov
push
lock
inc
mov
adc
pushf
add
loopw
js
and
sub
and
data16
stc
xchg
lahf
popa
addr16
aaa
sti
imul
sub
sbb
inc
sub
loope
fidivs
jg
cmp
outsb
inc
pop
inc
rorb
cmc
pop
ret
popf
sub
mov
lcall
add
sbb
sub
inc
divl
fs
sbb
pop
aas
xlat
mov
mov
xor
xchg
cmp
mov
add
lds
outsl
test
test
mov
xor
test
push
dec
cld
or
insb
add
icebp
notl
cmp
popa
sub
xlat
loopne
sbb
mov
cltd
push
xor
stos
push
xchg
push
push
mov
cltd
push
fadd
xchg
pop
pop
pushf
movsb
leave
push
data16
sbb
in
popa
jnp
pop
es
pop
inc
lods
pop
clc
in
dec
sub
clc
and
sahf
fsubrs
mov
mov
cmpsb
loop
in
pop
movsb
xchg
leave
xchg
enter
jge
dec
shrl
adc
into
rol
pop
dec
nop
lds
jge
cld
or
repnz
push
clc
outsl
xor
ljmp
aam
lret
cltd
xor
lea
xchg
add
jae
out
push
fldcw
in
xor
dec
bound
outsb
lods
sub
mov
inc
pop
daa
add
inc
dec
aam
sub
fldt
out
lock
cmp
lds
cld
orl
or
leave
adc
sbb
mov
or
push
fs
test
fstpl
arpl
mov
cld
stc
pop
fcoml
cmp
xor
cmp
int3
push
xor
lcall
mov
orl
movsb
pop
xchg
insl
jmp
xlat
and
sbb
dec
or
mov
fst
jg
cmp
lock
rorl
and
mov
adc
in
mov
cmova
stc
jae
ss
lods
add
repz
cmp
mov
ss
pusha
fwait
xchg
fstl
add
stc
jg
movsb
jge
inc
ja
scas
push
sbb
cmp
push
imul
pop
push
or
cmpb
push
cmpsl
inc
sbb
xchg
pop
mov
xchg
cld
inc
adcl
ljmp
aas
sub
cmc
add
data16
jae
fstps
cmp
pop
dec
mov
mov
mov
lds
mov
mov
sarl
xchg
pop
jnp
jmp
dec
pop
cmp
test
xchg
xor
mov
mov
gs
dec
pop
sar
sti
or
mov
inc
mov
int
push
aas
js
clc
shll
push
sbb
sub
mov
and
cmp
cmp
mov
shrb
push
filds
negb
lahf
jecxz
sti
sarb
mov
push
test
fdivs
add
add
push
jb
add
cmp
dec
xor
or
xor
pushf
cmp
dec
icebp
push
mov
inc
add
shl
outsl
jp
mov
mov
xor
sahf
and
mov
dec
jle
into
fwait
into
pop
jns
cmpsb
in
mov
adc
add
push
int
cmp
in
mov
fldt
ret
and
jp
pop
mov
adc
push
dec
xchg
or
and
xchg
into
std
arpl
and
mov
aam
daa
ljmp
pop
xchg
jno
pop
xchg
adc
mov
mov
push
fdecstp
pop
add
sub
call
incb
movsl
sub
jle
jge
das
bound
mov
rorb
add
sub
ja
lock
in
sub
cwtl
mov
mov
sbb
mov
mov
mov
test
mul
arpl
mov
jecxz
jle
dec
adc
mov
imul
push
cwtl
sub
in
mov
cld
pusha
mov
xor
xchg
lcall
mov
xor
mov
xor
and
xchg
dec
mov
popa
jbe
loopne
or
negb
dec
lcall
ds
aam
fiaddl
mov
push
test
movsb
test
dec
enter
sub
jne
jns
arpl
das
and
imul
test
das
xchg
xchg
fildll
push
mov
pop
aam
jle
mov
mov
mov
out
xor
std
pop
or
repz
stos
test
xor
aas
mov
shrb
and
mov
cmp
rcrl
cld
and
xchg
out
cmp
in
and
out
daa
jne
and
aas
mov
outsl
pop
push
jge
or
push
dec
repnz
mov
push
negb
xchg
std
jp
std
dec
daa
xor
cmpsl
adc
jb
inc
mov
xchg
gs
sub
fcmovbe
sub
push
cmpsb
and
lcall
outsl
jnp
push
ja
faddl
mov
out
in
hlt
aad
insl
shlb
adcb
fidivl
sub
out
jne
pop
imul
inc
jbe
adc
fcoml
cmpsb
push
cmp
inc
inc
push
sub
mov
imul
jnp
sbb
dec
pushf
sahf
mov
sbb
jae
lret
enter
mov
xchg
in
aas
push
push
push
ja
adc
jno
cld
jns
repz
lret
jo
in
adcb
pop
add
mov
aaa
inc
scas
jns
addr16
or
inc
mov
loopne
or
add
stos
loopne
push
sub
daa
lods
cmp
sub
fisubrl
arpl
pop
leave
stos
imul
and
aad
mov
aas
add
xchg
mov
mov
jle
xchg
lahf
or
mov
sub
jne
mov
adc
data16
push
rcrl
mov
sbb
jne
stos
push
push
jp
pusha
adc
hlt
mov
lret
dec
sub
xchg
testb
mov
mov
aad
add
repz
jmp
ror
sbb
mov
lods
daa
xor
into
inc
fcoms
xor
or
pop
sbb
enter
jbe
adc
rclb
and
arpl
div
cmp
adc
and
cwtl
test
pop
in
testb
inc
jns
mov
add
cmp
jns
cmp
push
imul
xor
adc
inc
popa
int3
mov
pushf
repz
push
or
sub
mov
je
cmp
in
rcrb
cmp
stos
fistpl
fbld
enter
cmp
adc
in
pop
and
aam
stc
adc
pop
mov
sub
adc
fisubrs
jge
addl
mov
scas
mov
sub
add
or
daa
inc
mov
es
pop
ret
cmp
stc
sbb
push
pop
fiadds
in
cmpb
stc
push
sbb
out
daa
pop
adc
test
sub
or
ss
push
xchg
mov
jb
mov
mov
jg
push
xchg
adc
push
mov
test
dec
or
fsub
clc
stc
sbbl
inc
inc
xor
out
inc
mov
lds
out
insl
mov
loopne
lcall
jne
and
adc
test
push
cwtl
in
pop
lahf
out
je
ds
loope
mov
mov
lock
in
jge
sub
jnp
cmp
push
and
dec
push
movsb
rcrb
jbe
fs
ds
mov
sub
repz
jp
sbb
rcrb
pop
xchg
fnstsw
jmp
jb
movsl
adc
jo
sti
add
hlt
xlat
push
or
push
cmpb
adc
xor
and
loopne
aam
je
sbb
stos
fwait
test
pop
out
dec
push
adc
adcb
and
subl
mov
cmp
lahf
inc
xor
or
dec
ljmp
lods
fidivs
rorl
dec
lds
add
test
pop
and
les
or
pop
or
jecxz
adc
add
inc
out
in
clc
rcrb
mov
bound
repz
and
mov
dec
loop
into
mov
scas
inc
xor
xor
leave
or
pop
mov
inc
push
push
inc
adc
mov
aad
fistps
xchg
sbb
fbstp
sub
push
or
rolb
fs
dec
in
out
out
outsl
stc
sbbl
pusha
mov
clc
push
xchg
sub
sti
mov
inc
int3
ja
push
pop
insl
rclb
scas
imull
sub
aas
add
aaa
inc
jl
inc
inc
push
addr16
fnstcw
sub
push
xchg
aad
and
rorb
shlb
mov
rorl
dec
in
mov
sub
popa
fstps
mov
scas
mov
sarl
mov
popf
jo
out
mov
mov
outsl
pop
sub
mov
or
cmpb
mov
mov
push
mov
cli
or
popf
loope
lods
jbe
mov
test
ds
ss
push
sbb
push
ja
cmpb
jmp
mov
push
stos
xchg
jo
xchg
and
jno
in
fwait
pushf
shrb
sbb
jo
sub
inc
and
or
pop
adc
les
sbb
arpl
sarb
sti
sahf
aad
mov
repz
notl
pop
xchg
xor
sub
mov
imul
dec
rorb
mov
shrl
mov
mov
mul
sar
sbb
sbb
test
nop
sub
mov
pop
pop
lahf
movsb
mov
cmp
mov
pop
cmpsl
cmp
sti
pusha
push
jp
jle
stos
jmp
pop
or
imul
loopne
mov
enter
xchg
pop
fcoms
lea
addr16
xor
out
ffree
jne
imul
in
adc
daa
insl
jb
and
testl
out
fdivp
lret
sub
jge
flds
dec
test
mov
fidivl
sbb
cs
sbb
xchg
je
adc
ret
mov
lret
jmp
jae
out
mov
push
dec
sub
cmpsb
push
sub
inc
arpl
aaa
fwait
xor
cmp
xor
push
in
aam
add
cli
xchg
mov
lods
repnz
mov
mov
icebp
test
cmc
xchg
xchg
sbb
in
in
xor
cmp
push
push
lock
cmp
adc
shll
inc
lds
push
pushf
movl
mov
mov
movb
cli
loope
bound
jno
nop
outsb
pop
mov
xchg
push
js
sbb
jne
push
sbb
cmpsb
mov
jp
mov
in
sbb
lret
push
je
xchg
enter
sub
sub
pop
nopl
adc
add
inc
push
std
sbb
repnz
mov
sbb
in
inc
rclb
pop
hlt
mov
sahf
and
pop
cmpsl
inc
or
cmp
jo
sub
mov
push
stc
mov
jge
dec
dec
mov
cmp
fildll
push
test
push
adc
out
jno
js
mov
jmp
mov
fidivrl
pop
sbb
push
or
mov
popf
xor
mov
pusha
aas
xchg
scas
mov
leave
rorl
inc
inc
lret
test
ljmp
negb
pop
fnstenv
cltd
repz
xchg
insl
add
and
pop
xchg
sbbb
movsb
push
jg
lret
outsb
xor
xchg
ds
adc
lcall
es
bound
dec
jecxz
dec
mov
add
aad
out
jl
xchg
subl
dec
dec
dec
sbb
mov
addl
dec
add
pop
sbb
js
fisubrl
or
and
sub
loopne
insb
lahf
popa
adc
add
xor
or
aas
mov
cvtdq2ps
bound
xor
mov
sbb
inc
subb
fimull
out
lock
cmpsl
and
xchg
pop
addr16
fs
scas
sub
mov
nop
test
and
decl
cs
mov
fimuls
icebp
mov
arpl
and
and
mov
fidivl
shrb
fidivrl
pop
lds
pusha
dec
xor
int
mov
idiv
xor
cltd
lahf
addb
leave
mov
out
iret
ds
mov
or
psllw
mov
pop
pop
repnz
ret
jbe
test
sub
sbb
aas
pop
add
lret
fsubs
movsl
les
adc
sub
add
mov
mov
cs
mov
push
sub
enter
add
ds
lea
pop
or
pop
mov
cld
nop
xchg
cmpsl
pop
pop
jl
imul
mov
loope
ficoms
dec
xchg
mov
lock
loopne
pop
shrb
xor
pop
mov
inc
movsl
mov
mov
insl
mov
dec
jmp
es
cld
cmp
test
mov
movsl
lock
dec
scas
sbb
add
fiaddl
icebp
aam
sub
popa
je
xor
sbb
je
inc
loop
repnz
imul
xor
mov
mov
jne
test
sub
dec
rcr
sbb
or
push
leave
cmp
fstpl
in
lock
sbb
pop
xor
jecxz
insl
js
dec
mov
insb
mov
repnz
pop
outsb
subl
or
inc
aas
das
and
mov
pop
idivb
sbb
loope
out
movsb
daa
loopne
ret
jl
scas
sbbl
mov
mov
mov
or
xchg
xor
or
push
and
jmp
lds
dec
cs
repnz
xor
inc
cld
dec
xchg
int3
enter
xchg
jl
sbb
and
inc
inc
insl
lea
outsb
fwait
adc
mov
push
sbbl
je
jge
sbb
sahf
iret
es
mov
lcall
loope
out
ljmp
pop
iret
pop
in
fdivs
stos
inc
pop
lds
into
sahf
mov
jne
cmpsb
jmp
mov
xchg
lret
xchg
pop
mov
pushf
sti
push
or
xor
sub
in
mov
in
xchg
xor
mov
sub
inc
setge
xor
pushl
fnsave
xor
mov
pop
loop
out
xchg
scas
mov
cld
add
adc
popa
cmpsl
imul
mov
cmp
ja
inc
in
or
negb
push
jne
fisttps
xchg
or
sbb
mov
or
sub
add
push
je
fistpll
jle
jge
mov
lods
cmc
mov
repnz
add
out
add
mov
loopne
and
pop
jp
out
and
pop
jg
shll
mov
pop
fdivrs
jb
and
mov
adcb
xchg
lea
lret
and
pop
add
inc
std
mov
cmpsl
shll
xchg
pop
cmc
add
or
mov
sub
jbe
or
dec
fisttpll
rolb
mov
or
stc
popf
or
ds
int
cwtl
mov
nop
arpl
cmp
add
jb
out
adc
or
adc
stc
cmpsb
hlt
xchg
sbb
jp
popf
in
popa
in
adc
je
push
push
cld
add
push
adc
fyl2xp1
bound
mov
sbb
jns
inc
mov
leave
push
sahf
dec
push
xor
jmp
mov
movsl
ja
hlt
ss
loope
mov
int3
and
adc
rolb
mov
mov
pop
imul
sysenter
jl
xchg
test
jns
in
pop
iret
mov
out
imul
xchg
add
mov
sarl
shr
pop
inc
pop
mov
ds
push
xchg
out
xchg
test
sbb
lcall
stc
outsb
rcr
push
jp
add
add
add
flds
lds
test
push
movsb
and
and
lds
adc
mov
mov
mov
push
and
mov
aad
insl
inc
pop
lods
mov
cs
or
push
mov
out
insb
fwait
lds
xchg
les
sub
fbld
scas
pop
lea
jge
scas
es
xor
pop
popa
je
arpl
outsb
iret
and
and
loop
aad
loopnew
ja
xchg
xor
mov
out
enter
pop
cmp
sub
in
xchg
shlb
cs
or
in
xchg
sar
add
sbbb
fdivrs
in
pushf
incl
hlt
outsb
addr16
sbb
cli
or
arpl
push
cwtl
rclb
xchg
sub
rolb
rol
cmp
mov
mov
movsb
sbb
xchg
ljmp
js
or
push
adc
stos
test
or
add
cli
sub
and
mov
or
gs
fimull
ret
jl
cld
stos
stc
shrl
pop
sbb
insb
out
xchg
xor
pop
cmp
add
lds
ror
jmp
mov
jecxz
adc
cmpl
imul
enter
jns
sti
addr16
mov
shlb
sub
scas
test
sti
sbb
fbstp
ljmp
cs
fnstsw
push
or
addl
push
mov
push
or
push
int3
test
pusha
adc
loope
jl
pop
push
ret
jo
fimuls
or
punpcklwd
dec
sti
in
pop
je
fwait
stc
decl
test
sbb
inc
lea
sbb
stc
push
lret
jb
outsb
repnz
push
pop
repnz
out
nop
cmpsl
shrl
push
scas
in
mov
aam
notl
sbb
mov
cmpsl
pusha
add
cli
dec
mov
mov
fldcw
lcall
sub
sbb
pop
loopne
in
in
std
jae
nop
push
mov
or
cmp
xor
mov
cmp
and
aaa
repnz
xchg
sub
sbb
ljmp
inc
ja
push
pop
pop
jmp
mov
in
sahf
jne
mov
pop
and
push
loop
push
or
dec
int3
sub
into
out
aam
loop
inc
je
xor
lahf
in
icebp
xlat
fsubrp
bound
push
sbb
dec
inc
imul
sti
xchg
xor
inc
xchg
stc
cmc
add
and
mov
cld
cld
jne
xchg
and
cmp
in
dec
jnp
shl
arpl
aaa
sbbl
sbb
ret
jae
stos
sub
call
fildll
fs
ffreep
jmp
and
mov
loope
xor
call
or
iret
push
mov
add
inc
mov
movsb
lods
sbb
or
gs
rcl
xor
std
mov
or
mov
int
push
pop
test
mov
fidivrs
adc
jl
movsl
adc
ja
push
cmp
mov
dec
add
mov
pop
loopne
les
jge
cmp
inc
sub
enter
mov
movsb
dec
std
cmp
xor
pop
sub
xor
add
sub
jecxz
sub
inc
minps
ds
sub
sbb
mov
cli
pinsrw
dec
dec
push
scas
pop
pushf
mov
pop
pop
stos
push
mov
push
push
xchg
push
pop
pusha
sbb
or
jno
jbe
fwait
mov
out
mov
and
jno
ljmp
sub
ret
test
xchg
push
push
out
rclb
orl
cld
mov
fstpl
pop
push
jno
dec
scas
sbb
jb
jmp
mov
testl
pop
mov
movzwl
xchg
sbb
out
rcll
jbe
inc
in
pop
mov
fcmovu
jo
aam
lds
jae
repnz
jp
jo
addr16
mov
testb
outsl
push
popf
nop
push
cmpsb
lods
mov
inc
mov
fwait
push
cmp
repnz
xor
xor
pushf
ret
push
xchg
and
ret
mov
mov
lcall
sub
aam
imul
dec
xchg
shrl
lea
sub
scas
in
mov
lcall
es
imull
imul
stos
jle
shl
jo
rorl
push
jne
iret
fidivs
lods
mov
sub
adc
add
fdivrl
cmpsl
jl
push
mov
lcall
push
push
mov
push
enter
jae
push
negl
mov
inc
jle
dec
incb
mov
lea
inc
adc
jg
clc
icebp
xor
adc
mov
loope
jmp
jbe
ljmp
xor
inc
ljmp
xor
or
cmpsb
mov
daa
dec
push
push
fcomps
jnp
cmpsb
pop
xchg
push
pop
addr16
inc
jg
xchg
jo
sub
pop
clc
lret
repz
into
mov
pushf
aam
repnz
and
pop
cs
inc
inc
dec
test
aaa
into
push
lds
je
adc
adc
push
inc
mov
fistl
cmp
pop
enter
add
xchg
pushf
addl
cmp
and
int
or
pop
aaa
or
aam
fstps
out
push
mov
or
and
stc
mov
outsb
mov
std
mov
push
in
jns
xor
xchg
fadds
jge
cwtl
jge
mov
sbb
int3
cli
cltd
dec
shll
test
cwtl
pop
js
mov
ss
jmp
xchg
repz
jge
subl
mov
js
enter
push
std
cmp
pop
xor
in
in
aaa
jns
movsl
adc
imul
push
insl
stos
lcall
push
and
mov
mov
pop
mov
jno
repnz
xchg
test
enter
leave
insl
add
aaa
cmp
or
ret
sbb
leave
mov
adcb
scas
jge
imul
push
xor
cmp
inc
jbe
popa
mov
lds
xchg
in
scas
or
ja
pop
in
in
xor
and
sub
push
lret
sub
push
sbb
cmc
stc
push
ret
test
add
jne
mov
dec
lcall
aam
out
out
mov
imul
mov
inc
xchg
and
mov
xor
sahf
mov
adc
sub
test
jp
adc
imul
movsb
lret
adc
loopne
adcl
lock
and
xor
mov
cmp
inc
ret
shlb
mov
stc
paddq
lret
pop
dec
arpl
aam
xchg
xchg
jae
add
pop
shrb
mov
add
nop
cmc
faddp
mov
popf
and
ja
push
mov
mov
sub
mov
cmp
pop
xor
mov
cmp
inc
leave
jnp
xor
xchg
jp
ja
pop
pop
addb
mov
es
aas
adc
mov
jecxz
mov
inc
fs
sub
pop
adc
or
fwait
or
out
dec
push
pop
aad
lahf
cmp
out
jno
mov
jnp
pop
ds
push
jb
ja
dec
loop
addl
cmpsb
pop
fs
or
inc
loope
jge
sbb
lea
leave
or
jle
outsb
iret
xchg
test
mov
and
push
xchg
leave
jns
jecxz
sbb
mov
dec
cmp
mov
jnp
fwait
inc
inc
cmp
xchg
add
inc
in
sub
out
scas
fstpt
sbb
cmp
mov
adc
popf
or
repz
push
xchg
int
cmc
movsb
mov
outsl
push
imul
cs
mov
sub
jbe
and
mov
bound
mov
fmull
jbe
cmp
jo
dec
xchg
mov
push
into
sbb
pop
std
scas
xlat
mov
cmpsb
fs
aad
push
pop
sbb
mov
cmp
mov
mov
mov
in
cmc
cmc
cwtl
and
sbb
inc
mov
std
inc
repnz
js
xor
test
jae
testb
cmp
dec
test
js
fimull
mov
jno
pop
mov
push
cmp
lret
gs
mov
xchg
mov
inc
lcall
aas
cmpsb
test
gs
jnp
cmpsb
mov
add
out
stc
insb
mov
outsb
mov
aad
cmc
add
push
inc
xchg
mov
xchg
jnp
adc
stos
pop
cmp
or
scas
pusha
xchg
test
xchg
dec
call
add
cmp
lret
sahf
ss
sti
mov
mov
fcmovbe
leave
and
mov
inc
xor
dec
xchg
out
cltd
adc
dec
pop
cmpl
movsb
xor
sub
or
stos
jl
leave
sub
and
inc
dec
jae
pop
aaa
mov
sub
push
lahf
cwtl
aas
sbb
rcrl
arpl
xchg
push
sbb
out
movsl
dec
xchg
mov
mov
mov
pop
sub
and
fldt
je
movsl
adc
ret
xchg
outsb
loop
lock
aad
dec
arpl
push
hlt
in
push
pop
jle
add
and
ss
push
or
sbb
mov
xchg
jnp
aam
test
out
pop
in
in
mov
xor
in
mov
push
stos
lahf
or
lahf
dec
or
fcoml
push
and
push
jmp
jmp
jo
mov
test
adc
mov
mov
fisubrl
push
enter
mov
and
outsb
insl
arpl
arpl
xor
xchg
fdivrp
imulb
aam
mov
inc
jmp
decb
mov
imul
ffree
adc
sbb
stos
stos
fwait
out
pushf
les
lods
popa
fsts
cmp
loop
push
pop
daa
xchg
and
pand
cmp
and
push
mov
add
imul
add
or
push
mov
cmpl
outsl
rcr
popa
pop
pushl
ljmp
mov
sbb
add
xchg
sub
mov
mov
pop
mov
lods
out
adc
test
sub
jg
jle
pop
fistps
mov
add
or
inc
mov
add
mov
push
ret
test
push
inc
sbb
aas
inc
jmp
in
push
fsts
dec
es
lret
fsubl
fwait
int
lds
sub
xchg
sahf
jl
jno
sbb
rolb
jb
cmpsl
xor
data16
jmp
sahf
icebp
sti
adc
inc
xchg
xor
cmp
jp
fwait
test
data16
ficoms
and
outsl
faddp
mov
pushf
pop
mov
adc
pop
inc
sub
mov
cltd
jbe
hlt
or
cmp
adc
aaa
mov
es
pop
xor
les
pop
mov
add
add
fnstsw
jecxz
jp
lahf
lahf
andl
in
icebp
movsl
adc
and
lea
or
jnp
inc
cs
dec
je
data16
lret
add
mov
ds
movsl
xchg
iret
mov
jne
push
mov
mov
pop
adc
push
mov
mov
mov
sub
shrb
out
pop
cmp
ret
jns
xchg
insb
data16
pop
stos
or
or
and
push
aaa
arpl
mov
loope
adc
xchg
jl
sub
lcall
fnsave
in
sub
out
loope
incl
lcall
hlt
je
aad
push
sbb
cmpsb
push
ljmp
gs
scas
add
and
test
lahf
push
lret
xchg
and
stos
push
ret
xor
sub
lock
call
ja
gs
mov
flds
sbb
faddl
cld
ds
lahf
bound
stos
inc
mov
jae
imul
enter
mov
dec
hlt
es
inc
aaa
push
xchg
nop
and
stos
xchg
push
mov
sbb
jo
mov
jno
test
hlt
insl
push
xchg
pop
dec
push
jecxz
subl
fidivrl
sub
sub
sbb
lret
fcomps
in
sbb
fidivrs
int3
outsb
adc
push
inc
cmpsl
jne
add
inc
and
mov
inc
xchg
das
leave
adc
jnp
insl
or
orl
movsb
data16
xor
mov
inc
mov
xchg
lahf
out
or
inc
scas
xchg
add
rcrb
push
lods
jecxz
mov
push
ss
xchg
sub
shl
mov
inc
cmp
xchg
jno
js
subb
xor
std
hlt
mov
xchg
xchg
sub
in
scas
inc
sarb
xchg
sbb
imul
ljmp
sbb
inc
iret
vprotb
mov
std
inc
xchg
mov
jl
cli
test
xchg
cmc
mov
push
push
es
cli
mov
sar
mov
xchg
das
cmc
cltd
jl
das
cmpsb
lods
call
int3
mov
sahf
add
int
mov
test
nop
ljmp
add
scas
pop
popl
mov
cmp
js
xor
mov
inc
pop
inc
lahf
lds
xlat
sbb
fiaddl
mov
notb
mov
mov
in
fld
enter
sbb
popa
push
jg
xchg
loope
pop
popa
lret
jbe
inc
loopne
call
mov
insl
pop
mov
inc
push
cmp
inc
jae
aas
cmp
movsb
inc
sbb
push
movsb
stos
dec
popa
sub
cmpsl
test
jmp
pushf
dec
ds
lahf
leave
xor
test
cmp
ficoml
adc
aad
loopne
lock
or
cs
cmc
xchg
fnstsw
std
ret
gs
jno
subl
sti
cld
sub
adc
inc
pop
or
dec
icebp
dec
push
subl
xchg
sub
and
pop
and
mov
sub
cs
comiss
enter
je
lret
fwait
mov
addr16
cmp
nop
fstl
out
lret
mov
outsl
and
pop
cltd
loop
notl
push
cmpsb
dec
out
mov
or
clc
cmc
mov
cmpsl
or
xchg
ret
cmp
movsl
vmovq
sbb
enter
and
out
fldcw
dec
daa
ds
pop
addr16
scas
pop
and
cmp
push
xor
mov
shlb
test
lods
sub
dec
cmp
mov
cmpsl
or
adc
ja
pusha
stos
sbb
xchg
xor
inc
test
cmpsl
jmp
xor
outsb
sbb
cld
outsl
push
call
in
or
adc
mov
ds
repz
add
popf
ret
cmp
dec
es
ss
jb
inc
push
shrb
sarb
rol
add
dec
mov
pop
cmp
dec
sub
push
adc
and
sarl
cmp
xchg
out
imul
xor
loope
adc
je
shl
adc
mov
and
sub
mov
lock
cmpsb
mov
das
rorb
jge
push
js
imulb
aad
inc
js
test
xchg
cmp
cmp
aas
mov
xchg
and
arpl
xlat
and
push
push
cltd
xor
xor
rcrl
inc
cmpsl
inc
or
lahf
fdivs
outsb
in
je
sbb
push
mov
mov
dec
sbb
add
sub
scas
mov
xlat
push
loope
in
push
and
fimull
jle
sbb
lock
xchg
adc
cmp
mov
pop
jnp
inc
das
lcall
subb
and
les
inc
xor
movsb
adc
aam
fists
aad
popf
jl
adc
mov
std
jns
sub
rolb
pop
out
inc
mov
int
les
int
sbb
mov
into
jp
imulb
test
xor
inc
mov
fisttpl
in
rcll
mov
mov
dec
or
and
lea
stos
or
imul
xchg
aaa
dec
mov
or
rep
xchg
insl
mov
ret
imul
sub
pop
imul
mov
sbb
sbb
and
mov
add
fidivl
push
xchg
jp
lods
sahf
jl
pop
or
push
mov
lds
movsb
aaa
dec
sbb
adc
xor
inc
fs
pop
outsb
test
in
movsl
jmp
dec
jnp
mov
imul
or
sub
or
leave
pushf
enter
inc
jnp
pusha
shll
fstp
push
push
aas
mov
mov
repz
fxch
xor
jae
xchg
mov
jne
add
lea
mov
addr16
jl
xchg
push
sub
insb
xor
inc
sbb
clc
test
pop
lret
adc
pusha
mov
jg
shll
std
or
je
call
inc
enter
inc
fnstenv
push
loope
repnz
test
xchg
xor
sbb
xor
cwtl
lods
ja
sub
jne
jmp
jg
xchg
or
and
lods
test
mov
adc
push
pop
ljmp
mov
outsl
lock
mov
loop
push
xor
push
fs
mov
adc
js
shr
test
ja
ds
daa
sub
cmp
pop
scas
jo
push
and
and
sahf
jno
ret
and
jmp
fs
mov
das
pop
data16
outsl
mov
dec
aas
sahf
in
adc
xchg
sti
add
cmc
add
mov
nop
loopne
fbld
ror
mov
pop
cld
and
hlt
jmp
rcr
jae
add
in
test
adc
jge
aad
lock
stc
out
mov
movb
inc
inc
mov
mov
sub
arpl
fists
popf
add
rorl
fdivrl
or
mov
mov
cmpsb
fidivrl
mov
sbb
test
cli
jp
push
push
jmp
sub
xchg
stos
inc
ja
sbb
lret
xchg
clc
xchg
mov
sub
fldl
in
pop
mov
and
aas
lcall
sbb
addr16
mov
scas
into
jp
xchg
add
rol
out
subl
jne
dec
add
mov
adc
mov
cmp
scas
sahf
in
sarb
cmp
sarb
das
nop
dec
sub
sbb
out
xchg
pop
mov
popf
js
clc
xor
mov
and
hlt
sub
fyl2xp1
movsl
sbb
adc
orl
add
mov
xchg
inc
cs
xor
push
addr16
and
jo
pop
pop
add
mov
lret
pop
jne
mov
or
cmp
call
nop
mov
ds
pop
aas
xor
fcmovu
sbb
jb
xor
fmuls
and
xchg
orl
clc
xor
loopne
std
ljmp
daa
xchg
sub
sub
test
cmp
pop
push
aam
lods
data16
inc
popa
and
and
ds
cmc
jge
shll
imul
loop
push
add
arpl
enter
lods
int
in
aad
arpl
mov
cmpsb
rcll
pop
movsb
cmp
inc
shrb
cwtl
sub
adc
aad
fucom
sbb
mov
dec
movsb
mov
movsl
inc
lods
cmpb
push
in
sbb
and
mov
cltd
jle
add
jno
add
in
aam
pop
push
ljmp
test
popf
sub
xor
jbe
lods
pop
je
rcrb
cmp
add
sbb
insb
mov
leave
rol
aam
jo
outsl
loopne
mov
arpl
jp
and
dec
inc
inc
inc
repnz
adc
xchg
and
dec
in
pop
cmp
aam
cli
ds
push
lock
sub
mov
cli
adc
int
mov
imul
ja
subb
jns
sub
and
movb
push
nop
cmp
pop
xchg
inc
fisubrl
dec
push
out
add
xchg
xchg
test
dec
testb
xor
push
mov
fimull
push
mov
fsubs
aas
movsl
lock
mov
idiv
mov
idiv
jg
push
mov
idivl
cmp
or
dec
js
sbb
xchg
daa
insl
add
std
outsb
and
xorps
push
push
in
and
or
movsb
mov
and
lods
pop
push
in
stos
pop
cmp
and
bound
sbb
test
mov
daa
stc
test
sub
inc
xchg
test
stos
cwtl
add
imul
inc
sub
aam
jb
dec
ret
lods
lea
mov
dec
mov
push
repnz
pop
shlb
or
insb
lods
jmp
cmp
pop
mov
sub
jl
shl
aas
xchg
and
mov
popf
sbb
and
loop
cmp
add
sahf
mov
dec
jns
aas
pop
cmpsb
fs
and
out
lock
cmp
sbb
shlb
mov
adc
dec
jbe
and
in
mov
movsb
leave
ret
in
ljmp
push
jne
pop
dec
xchg
sub
data16
xor
inc
xchg
inc
hlt
fcmovu
dec
inc
dec
xchg
pop
ret
sub
out
lret
repnz
fcmovb
popa
ds
xor
bound
icebp
adc
sbb
inc
pop
sbb
mov
mov
ds
sbb
stc
push
add
fimull
xchg
mulb
adc
lock
jle
jbe
cmc
popf
dec
test
pop
std
call
push
mov
pop
andl
or
out
es
add
popf
dec
mov
outsb
push
xor
xlat
inc
sahf
cmp
xchg
rorb
inc
test
mov
lea
pop
sub
andb
fsubs
ja
gs
stc
jg
scas
in
inc
int
push
jne
imul
inc
mov
sarb
shlb
adc
arpl
xchg
mov
imul
xchg
lods
mov
jg
adc
sahf
and
xor
or
add
addr16
jle
out
into
add
pushf
mov
push
mov
lock
mov
push
pop
cmp
fbld
cmp
jp
mov
mov
push
mov
sub
jg
repnz
push
fwait
bound
call
jmp
pop
cmp
xor
cwtl
dec
ds
arpl
out
hlt
pop
mov
pop
xor
std
jb
int3
add
mov
mov
arpl
mov
lods
pop
adc
iret
adc
loopne
xchg
insl
push
jbe
cmp
fstl
mov
aaa
jmp
pop
ljmp
iret
push
ret
stos
shlb
add
cmpl
cs
nop
or
insl
loop
ret
adc
cmp
pop
mov
dec
test
arpl
sub
xchg
sub
leave
inc
mov
push
xchg
pop
mov
mov
sbb
and
mov
xchg
fldl
movsl
lcall
enter
inc
sub
test
es
cli
insl
es
inc
adc
aaa
jnp
sbb
push
popl
mov
fmull
dec
cld
mov
dec
pop
hlt
xchg
cltd
leave
jg
jmp
xchg
fdivs
or
jmp
xchg
push
jmp
mov
ja
xchg
add
push
fwait
sti
stos
aad
dec
call
clc
pop
push
jg
pop
xor
ret
or
mov
pop
push
shlb
shlb
ja
push
aas
cmp
mov
je
jbe
arpl
loopne
mov
call
clc
int
imul
xlat
fiadds
push
mov
ret
mov
pop
cmpsb
sub
icebp
inc
sar
mov
pop
or
mov
aad
js
imul
or
add
pop
leave
stc
fst
push
cld
imul
hlt
in
outsl
dec
fsts
sti
inc
imul
dec
mov
mov
cmp
dec
sarl
lret
jp
push
sub
inc
or
adc
jae
push
sub
lcall
in
sbb
inc
test
mov
dec
mov
inc
or
imul
or
fdivrs
popf
push
psllq
pop
jb
push
or
lock
icebp
fsubrl
mov
hlt
mov
negb
mov
imul
jae
mov
jnp
ret
addb
rolb
jp
mov
rcll
jnp
shll
sahf
aas
mov
push
jmp
cmpsb
inc
test
in
adc
pop
or
push
arpl
pop
je
inc
lcall
adc
sbb
imul
jne
insl
pusha
xchg
cmp
jmp
cmp
push
rcl
fdivrl
cmp
pop
mov
lods
loope
adc
mov
cwtl
fsubrl
pop
stos
mov
mov
fistpll
fcompl
xor
push
pop
cwtl
int
sbbb
lret
rorl
in
cmp
mov
int
idivl
push
and
xchg
imul
jns
addr16
cmp
out
std
mov
and
movl
test
adc
xchg
xchg
sbb
push
cltd
dec
in
mov
cmpsl
aas
or
xchg
mov
pop
out
mov
pushf
cmpl
lods
inc
rolb
mov
shl
ret
int3
mov
inc
clc
push
mov
mov
dec
ret
xchg
dec
ja
jge
dec
aas
testb
cmc
pop
pusha
and
mov
ret
cli
scas
subl
mov
xor
adc
cld
lret
stos
mov
and
adc
xchg
insb
outsb
cmc
lcall
mov
test
inc
jge
fidivs
mov
filds
mov
mov
hlt
and
lcall
mov
les
sbb
call
push
les
and
jp
jg
movb
leave
out
cmpsb
push
lods
fucomi
imul
xchg
or
lods
mov
sahf
jne
mov
sahf
cs
inc
add
jl
xor
test
mov
add
mov
and
cli
scas
pushf
sbb
inc
dec
sbb
lds
or
mov
mov
int
sub
aaa
idiv
imul
mov
js
jne
cmp
sahf
gs
stc
arpl
outsb
cld
dec
outsl
clc
push
cmp
subl
mov
push
lret
iret
stos
jnp
popf
in
inc
aas
push
dec
dec
movq
mov
mov
call
lea
out
inc
push
mov
xor
mov
xor
sbb
adc
scas
xchg
int3
push
jecxz
insb
mov
mov
pop
xor
or
add
or
jo
das
shll
inc
imul
movsb
cmp
push
ljmp
jno
addr16
sub
js
adc
sbb
adc
sub
sub
xchg
xor
outsb
js
mov
push
repnz
in
inc
inc
jge
pop
outsb
mov
das
and
loopne
insl
mov
xor
adc
push
cltd
mov
lock
fiaddl
mov
sub
xlat
lea
popa
sbb
and
pop
jnp
mov
push
xchg
jecxz
dec
out
push
xchg
mov
aas
sti
mov
vmread
push
test
mov
pop
adc
mov
in
test
push
popa
push
out
and
sbb
inc
aam
lock
sub
mov
mov
mov
push
jns
cmc
jge
scas
roll
adc
dec
divl
cmpsl
daa
scas
loopne
mov
mov
jl
pushf
aaa
jbe
insl
pop
sbb
sub
xchg
loopne
mov
xchg
fists
mov
jmp
test
pop
sbb
cs
jecxz
scas
push
mov
icebp
popa
mov
imull
mov
inc
push
icebp
cmc
sahf
sub
repz
mov
push
push
adc
movsl
inc
pop
mov
pop
fimuls
les
sbb
jb
lock
sbb
mov
xor
xor
cmp
lret
jno
xchg
dec
sub
jno
call
les
pop
imul
xchg
insb
movl
xor
ret
fldt
dec
mov
sbb
inc
sub
mov
shlb
stos
rorl
mov
shlb
sub
inc
mul
inc
mov
loopne
enter
sub
dec
hlt
aaa
inc
pop
xchg
arpl
adc
jp
or
mov
sbb
out
push
add
loope
out
push
test
inc
jecxz
sub
jno
sub
or
or
xchg
push
loop
test
test
lret
push
fimuls
dec
jo
mov
cltd
cli
lret
jecxz
pusha
inc
fxch
jo
xor
sbb
mov
inc
fnstcw
mov
push
mov
ret
or
jmp
sub
ss
mov
xlat
ror
popf
pop
dec
lcall
xor
test
stos
lea
ret
and
adc
iret
jne
jo
xchg
ror
lods
lock
aam
cmp
les
rolb
gs
fstpl
jns
xchg
or
enter
sub
xor
je
cmc
jg
das
mov
bnd
adc
pop
imul
pop
pop
fadds
push
fldl2t
je
xor
and
sbbl
sbb
call
add
rcrl
inc
leave
daa
xor
add
adc
je
loop
or
and
and
loopne
in
push
jns
shl
xchg
mov
mov
fldenv
mov
leave
mov
push
push
pop
pop
or
sub
xchg
jp
aaa
cmp
mov
xchg
outsl
mov
pop
lret
stc
add
jmp
xchg
outsl
mov
mov
xor
pop
inc
jno
push
hlt
lds
jbe
clc
in
icebp
mov
mov
int
lea
shrb
add
pop
xchg
gs
shll
imul
stos
insl
pop
push
cmp
jl
jns
stos
push
sub
push
cmp
mov
int3
fld
jbe
or
push
add
inc
out
and
popf
cltd
mov
clc
pop
lock
mov
pop
daa
and
xchg
pusha
add
xchg
idivl
cwtl
jnp
dec
cmpsl
pop
xchg
pop
icebp
jl
xorl
jnp
jp
addr16
xchg
mov
dec
scas
dec
adc
jne
jne
sub
hlt
mov
mov
add
pop
lret
jmp
inc
pop
iret
add
test
mov
out
mov
rcr
cld
xchg
jae
xchg
inc
add
cmp
outsl
inc
inc
ljmp
jne
push
inc
push
lods
dec
repnz
adc
out
or
and
mov
jmp
sbb
lahf
push
and
add
dec
pop
out
cmp
xor
push
pop
xor
mov
cmp
ds
dec
mov
push
inc
mov
les
add
jge
jo
cmp
pop
shrb
pop
adcl
leave
pop
mov
fidivrl
mov
ficoml
stc
pusha
xchg
adc
imul
test
outsb
mov
mov
adc
mov
pop
test
and
jbe
hlt
fistpl
aaa
add
sub
js
pushf
inc
bound
xlat
fcmovnb
cltd
testl
in
into
jae
popa
ljmp
scas
loopne
lahf
fdivrs
ficomps
lahf
xchg
cmpsb
fwait
sbbl
test
leave
jl
mov
sti
int3
push
dec
xchg
fsubs
orb
clc
mov
pop
mov
mov
ds
clc
sahf
mov
mov
lods
imul
inc
ret
in
in
xor
dec
popf
lods
sbbl
sti
std
sbb
cmp
sub
movsb
pop
subl
add
ficomps
sbb
mov
sarb
out
lret
aam
push
push
out
jno
fs
mov
or
hlt
sbb
and
add
scas
inc
push
or
or
mov
and
lret
mov
pushf
stos
adc
outsb
fucomi
in
inc
or
lock
xchg
push
std
insb
icebp
movsl
cmp
mov
mov
add
mov
idivl
xor
call
popf
cmc
and
sub
arpl
cld
xchg
stos
dec
xchg
aam
xchg
fs
das
fildl
mov
fbld
mov
mov
sub
repnz
cwtl
test
and
outsb
cmpsb
inc
leave
pop
insl
fdivrs
and
adc
call
push
test
sbb
out
test
loopne
fnstsw
mov
das
push
das
adcb
sub
sub
fnstsw
jmp
jecxz
mov
or
or
leave
test
jae
jmp
lret
loope
xor
test
adc
loope
sahf
loop
cmc
arpl
arpl
adc
or
mov
test
sub
pop
mov
out
shll
xchg
mov
sbbb
cmp
lahf
cmc
fisubl
xchg
dec
lcall
pusha
sbb
or
push
fsub
cmp
cli
outsb
repnz
xchg
cli
nop
aaa
imul
add
rcll
mov
insb
pop
ja
mov
lret
jae
fwait
loopne
push
push
imul
aaa
lret
arpl
xor
insl
repz
push
jns
xchg
mov
popf
xchg
push
xor
leave
mov
aam
mov
std
lds
push
nop
mov
mov
clc
cmp
xchg
insb
mov
popf
and
in
js
adc
cmpsl
lds
sahf
jno
in
xor
repz
test
mov
ror
fimuls
es
aam
cmp
inc
jne
mov
hlt
outsb
and
lcall
add
fisubrs
repz
mov
mov
mov
pop
ret
mov
aas
mov
add
int
sti
repz
int3
mov
cmp
cmp
jge
dec
loopne
adc
adc
icebp
cmp
and
dec
or
enter
or
mulb
xchg
jmp
cld
sbb
xor
or
dec
push
aas
in
mov
ret
inc
fld
jge
test
daa
int
lods
ret
dec
pop
mov
fwait
iret
xchg
ret
pop
aad
fldenv
add
jb
popa
call
cmp
mov
or
xchg
cmp
jo
nopl
cli
es
xlat
cmc
sub
sbb
pushf
test
push
fsub
pop
sbb
jb
sbb
mov
inc
add
das
pop
addr16
aaa
pop
pop
xchg
and
sub
xchg
inc
sub
jmp
xchg
dec
sarl
ds
mov
mov
ljmp
hlt
pop
std
mov
repz
mov
inc
push
dec
pop
cwtl
pop
divl
add
scas
imul
out
clc
add
fildll
pop
push
and
notb
sbb
cmp
inc
sbb
pop
xchg
jl
addr16
ret
xchg
sub
aas
fcompl
call
test
in
addb
stos
ja
loopne
push
sbb
and
idiv
cmp
adc
xchg
push
xor
sub
inc
mov
add
xchg
cmp
jmp
outsl
sub
into
push
aas
lock
jle
or
sub
repz
loope
mov
push
pop
add
cld
mov
lret
stos
dec
add
daa
mov
pop
loop
fmull
call
outsl
mov
pusha
lahf
std
inc
sub
push
aaa
stc
add
negl
fnstenv
mov
es
pop
sbb
jno
sub
push
or
aaa
xor
push
dec
mov
jle
das
pusha
dec
xchg
addr16
jno
insb
inc
stc
add
cltd
cmp
hlt
ret
gs
movzwl
push
and
mov
rcrl
xchg
pop
inc
iret
mov
lock
cmp
jg
or
aaa
push
test
sub
push
jmp
mov
push
xchg
push
mov
fucomip
and
movsl
je
add
arpl
icebp
dec
imul
inc
xor
xor
pop
jl
inc
stos
popf
test
pop
xchg
mov
pop
repnz
mov
mov
push
dec
subl
aaa
xchg
shll
xchg
pop
mov
xor
in
mov
int3
jle
xor
adcb
je
push
dec
mov
repnz
jp
cmc
push
cmpsb
jbe
mov
xor
xchg
dec
and
scas
dec
push
adc
xor
mov
pop
icebp
and
mov
sbb
dec
lret
and
cmc
cwtl
mov
cli
add
test
idivl
dec
shr
inc
lret
orl
sub
out
pop
push
or
mov
pop
jmp
ret
add
aam
fiaddl
rorl
jge
into
add
or
jne
sahf
cmp
xorl
dec
aam
ss
jp
aaa
pop
outsl
sti
jnp
push
movsl
or
pop
xchg
nop
cs
dec
incb
loop
icebp
xchg
dec
inc
cmpsb
cs
frstor
loopne
icebp
lods
test
push
lock
stos
loope
leave
pop
addr16
dec
inc
rclb
mov
xor
int3
movsb
lea
jns
mov
jae
inc
push
jno
jae
and
add
mov
dec
add
or
cmp
jnp
aam
and
push
jge
mov
nop
fucomp
popf
push
cs
js
imul
outsb
ja
insl
cmp
or
pop
mov
pop
pop
bound
adc
or
das
sahf
or
adc
imul
ss
and
sbb
dec
shrb
jnp
pop
ss
add
sbb
pop
int
push
jnp
loopne
add
movsb
rol
les
ror
xorb
add
xor
mov
aas
cmp
sub
dec
fcmovnu
mov
xchg
pop
xchg
jle
mov
inc
xor
cmpsl
lret
pop
cmpsb
shll
inc
jg
out
rcl
push
ror
xlat
inc
sub
je
jnp
fnstsw
js
fwait
xor
jae
and
cmp
cmp
movsl
ret
xor
and
xor
scas
push
fmul
or
addb
scas
in
add
mov
mov
pop
adc
iret
js
aaa
mov
fmuls
jle
adc
int3
mov
out
std
mov
lds
bound
aas
pop
jg
jle
fwait
push
add
shrl
out
loop
dec
fcoml
mov
xchg
out
inc
pop
into
out
lods
ds
out
lea
adc
pusha
rcrb
ja
adc
fadds
cmc
and
je
fimuls
divb
les
inc
lret
fwait
mov
scas
loopne
jl
lahf
xor
dec
sbb
mov
push
sbb
leave
adcb
int3
cmc
fcoms
push
jmp
jnp
jo
ja
jmp
pop
xor
mov
adc
nop
fsubs
lea
and
fdivrs
pop
je
or
shr
test
cmpsb
push
roll
mov
sbb
fistl
inc
adc
pop
and
dec
in
scas
out
lds
push
sbb
fiadds
les
xor
adc
push
jbe
test
mov
stc
push
and
lret
daa
cmp
mov
adc
insb
push
mov
xchg
push
lcall
popf
out
and
fisttpll
or
fisubs
ret
ret
cmp
mov
push
xchg
push
fimull
cli
pop
inc
add
mov
mov
jne
int
imul
jecxz
jecxz
test
fs
sbb
mov
pop
call
cmp
dec
mov
pop
xor
sub
aad
data16
or
popa
adc
xor
jo
add
mov
outsb
add
push
rcrl
add
pop
mov
mov
movsl
in
cld
add
lds
insb
push
push
bound
inc
sbb
aam
or
scas
cmpsl
push
rolb
add
mov
fs
mov
insb
add
pop
xchg
fidivrs
fldt
xor
inc
sbb
testl
mov
xor
push
sahf
sub
int
dec
lock
add
lods
leave
es
adc
mov
xchg
or
push
mov
mov
lea
add
mov
in
outsb
push
sbb
shlb
or
mov
pop
mov
xchg
dec
or
lods
push
lcall
sbb
sub
mov
outsl
ret
into
inc
lea
shl
cmp
mov
mov
xchg
outsb
cli
add
lahf
xor
fstps
add
insb
sbb
push
jno
push
jae
dec
and
sbb
ret
gs
stc
pop
test
push
pusha
cmp
xchg
adc
sub
cmpsb
push
add
mov
inc
jne
mov
scas
fdivrl
push
rorl
iret
xchg
mov
mov
add
int
daa
add
sub
int3
xor
pop
dec
aad
dec
lret
orl
mov
dec
push
mov
repnz
repz
ds
pushf
push
fldcw
pop
ret
jp
dec
in
fimuls
jge
or
push
pop
call
nop
lcall
ds
adc
test
sub
sub
inc
cmpl
push
push
mov
xchg
jne
sub
call
xor
mov
lods
push
lahf
aam
pop
mov
cli
std
and
out
in
jl
dec
popf
xchg
fs
inc
incb
add
jb
fidivrl
scas
negl
and
dec
fistps
outsl
inc
jnp
push
icebp
rcl
pusha
and
lret
mov
add
mov
rorl
cltd
push
dec
movsl
pop
xchg
bound
adc
shlb
sub
mov
push
test
cs
sub
pop
call
jl
jg
jg
lock
pop
jmp
mov
mov
fcompl
lret
dec
fstpt
stos
mov
mov
and
inc
leave
daa
outsb
push
mov
jecxz
cwtl
mov
push
int3
inc
and
xchg
sbb
mov
clc
jno
and
repz
sbb
or
mov
push
pop
xchg
test
sub
leave
jp
add
mov
cwtl
sbb
rcrb
xor
sub
sbb
ljmp
sub
dec
adc
mov
and
push
fwait
cmp
pop
inc
iret
outsb
xor
inc
dec
mov
fildll
xlat
test
push
dec
jb
clc
inc
enter
cmp
and
sub
dec
in
cs
push
push
jbe
cmc
or
mov
xor
por
dec
xor
pop
jmp
pop
jns
test
hlt
sbb
mov
cmpl
xchg
fwait
jnp
pop
lcall
adc
pop
mov
push
or
jge
inc
xor
sbb
mov
mov
mov
jle
xchg
add
subl
cltd
scas
arpl
out
lcall
mov
fisubrl
mov
insb
popf
popa
int
cmp
test
dec
adc
int3
out
test
dec
push
push
cmp
jnp
mov
dec
aas
mov
ret
jnp
popa
test
or
in
and
fsubl
mov
dec
out
cmpsb
cwtl
add
fstpt
notb
pop
xchg
jo
xchg
push
shlb
sbb
rclb
mov
clc
mov
sahf
out
movsl
bound
push
lret
sub
mov
cmp
xchg
sub
jo
sbb
cmpsl
push
mov
and
xor
pushl
cmp
xchg
stos
and
cli
xchg
push
movsl
in
push
mov
icebp
icebp
pop
xor
or
sub
or
popf
mov
lea
jl
bound
adc
lods
pop
adc
sbb
mov
and
subl
jle
popf
lret
lea
mov
mov
sub
ja
test
leave
sbb
adc
pop
mov
icebp
mov
inc
pop
cmp
pop
pop
das
sub
lret
ljmp
push
jp
lahf
int
orb
jp
inc
push
pop
enter
sbb
clc
inc
dec
addr16
jp
mov
and
adc
jnp
cmp
cltd
jge
lea
adc
cmc
add
mov
push
movsb
sbb
mov
mov
pop
cld
movsb
mov
bound
sub
fndisi(8087
stc
loopne
push
call
addr16
leave
jnp
push
aas
sbb
fstpt
lods
jge
cli
xor
mov
adc
sub
xchg
rcr
dec
xor
test
ja
push
mov
jno
pop
adc
cmp
and
jae
push
xor
sub
cmpsb
and
cmpsb
jnp
cli
dec
sbb
mov
movsb
mov
adc
mov
mov
jp
lods
adc
repz
loopne
ss
jno
push
xor
cs
loopne
push
adc
adc
add
sbb
out
xchg
sbb
xor
jecxz
add
aam
divl
add
adc
jb
sub
test
popf
hlt
ret
mov
lea
adc
mov
xchg
push
adc
popl
aas
push
inc
ret
andb
jp
cmpxchg
test
fisttpl
movsb
xchg
clc
xchg
std
lea
scas
aaa
shrb
lea
mov
pop
inc
mov
inc
push
stos
and
pop
cmp
push
lahf
jle
cmpsl
lret
ljmp
add
scas
mov
call
call
pop
loopne
cmp
in
add
bound
movsb
out
inc
sub
cmp
frstor
dec
movsb
call
ret
fisttpl
hlt
js
mov
cmp
xor
dec
ret
xor
scas
es
push
imul
mov
daa
sub
pop
fdivs
sbb
pop
std
pop
les
outsb
mov
inc
push
cmc
push
repz
xor
mov
aad
sbbb
sub
or
dec
adc
je,pt
sub
je
xchg
addr16
jecxz
adc
cs
push
jp
fiaddl
or
and
out
fdivl
cmp
ret
sbb
sbb
sub
sbb
clc
pop
shlb
cld
leave
mov
std
pop
aaa
xchg
imul
cld
mov
lock
mov
lods
xchg
lcall
add
sub
sahf
cs
loop
movsl
or
lcall
pop
mov
push
jbe
adc
jno
xlat
clc
adc
lock
cmp
mov
orl
add
xchg
gs
sub
repnz
push
pop
ror
sub
xchg
mov
sbb
push
mov
push
insb
mov
push
jmp
and
out
into
adc
pop
pop
repz
push
jo
mov
aaa
xor
in
mov
out
test
add
jbe
lret
cwtl
std
sub
lock
das
cmp
xor
add
mov
mov
or
rclb
xchg
mov
mov
das
mov
inc
mov
adc
mulb
lock
inc
jb
mov
test
in
adc
mov
mov
or
and
pop
gs
mov
jp
mov
inc
sti
incl
int3
cmpl
cld
loopne
jmp
push
xor
repnz
pop
or
out
call
and
into
ja
jns
leave
push
pop
stos
fadd
pop
aad
clc
cmp
jo
mov
imul
outsb
jecxz
lcall
mov
pop
pop
pop
aaa
or
jno
arpl
addr16
test
fisubl
add
jge
stc
pop
dec
dec
out
insl
cmpsl
mov
lea
das
push
mov
mov
xchg
movsl
xor
xorb
add
mov
loope
adc
dec
sbb
cmp
fdivrs
xchg
xchg
xchg
push
outsl
repz
or
mov
pop
scas
sbb
inc
or
push
ss
xor
dec
insb
mov
jp
mov
cmp
pop
dec
cmp
sbbb
dec
nop
dec
iret
pop
outsb
xchg
repnz
js
in
ret
dec
aam
push
es
fnstenv
push
sub
jbe
mov
pushf
repz
xlat
push
sub
push
ret
and
sbbl
xchg
jnp
mov
push
pop
rcrb
or
pop
mov
sub
cs
aam
pop
push
rcll
inc
and
sub
mov
pop
mov
adc
cmpsl
js
pop
call
enter
loope
sbb
mov
stos
mov
add
sarb
lock
sub
dec
leave
add
mov
add
mov
cmpsl
and
lods
cmpsb
sub
test
int3
xor
cltd
cmp
in
inc
fsubl
cs
sub
jo
sahf
or
adc
xor
sbb
cltd
mov
dec
dec
or
hlt
mov
movsb
ret
lahf
js
or
cmp
addr16
rorl
mov
sub
das
xorb
je
push
faddl
pushl
jno
popa
lret
sti
mov
mov
int
test
inc
loopne
xor
and
lcall
movsb
or
cmpsl
mov
ficoml
push
movsl
mov
mov
jl
pop
dec
jg
xchg
dec
loope
sub
inc
jg
mov
mov
in
cmc
repz
fildl
dec
push
sbb
mov
push
jecxz
ljmp
out
jp
mov
dec
mov
lds
hlt
pop
int3
movsb
lret
push
in
mov
push
and
push
adc
fmuls
mov
xchg
push
push
imul
add
inc
cmp
push
test
outsb
add
jmp
sbb
fisubrs
mov
lods
jns
push
xchg
xchg
mov
pop
scas
test
pop
repz
fwait
roll
pop
js
add
hlt
mov
mov
outsl
xor
lock
push
sub
mov
adc
ss
jns
jp
aam
push
sub
repz
jnp
xchg
pop
jle
xor
mov
lret
inc
or
mov
lods
sbb
loop
adc
xchg
and
mov
cmp
add
cltd
mov
sahf
push
add
or
int3
jp
jbe
das
push
nop
xor
movsl
into
sbb
notb
mov
dec
sbb
dec
mov
in
adc
mov
int
jbe,pt
add
sub
adc
aad
or
sahf
inc
adc
iret
cmpsb
xor
adc
push
sbb
lock
mov
testl
pop
pushf
insb
gs
jecxz
test
inc
xor
es
xchg
sub
pushf
mulb
pusha
leave
ja
mov
stos
ljmp
sub
xor
mov
movsb
push
popa
push
jecxz
ljmp
rol
mov
lock
popa
fcoms
out
sbb
adc
mov
dec
xchg
insb
push
negb
nop
mov
shll
add
sbb
jns
push
and
mov
jne
xor
cmp
lock
test
inc
add
and
les
stos
je
fs
xlat
outsb
test
push
mov
shl
dec
jmp
enter
js
push
dec
push
or
lret
or
addr16
incb
push
dec
test
out
xchg
pop
ds
test
adc
ret
call
test
shr
das
add
mov
dec
mov
pop
lcall
imul
mov
imul
cmp
paddsb
cmp
pop
dec
jle
pop
es
cld
jae
mov
sub
ljmp
stos
adc
xchg
sub
enter
mov
xchg
push
xchg
ss
sarb
or
mov
dec
repz
lret
xchg
aaa
sub
jge
cmc
rorb
repnz
subb
lcall
out
shl
test
mov
and
and
and
dec
push
mov
add
push
dec
sub
pusha
loop
jg
aad
pop
and
xor
je
push
xchg
or
jge
pop
fimuls
pop
in
test
pushf
test
sbb
cltd
pop
inc
push
mov
lea
dec
lret
jmp
aam
xchg
subl
les
push
adc
lock
jmp
pop
movsl
cmp
pop
jle
push
push
dec
jo
aad
sbb
in
ret
loope
add
repnz
lods
mov
dec
stos
pop
inc
inc
jg
sbb
mov
lret
push
sub
mov
push
push
fwait
or
sbb
dec
inc
mov
bound
in
sub
fisttps
add
mov
repnz
pop
nop
cmp
pop
outsl
sub
aaa
pusha
rolb
push
stos
adc
fcoms
fcomip
inc
clc
adc
dec
add
fcmovnbe
push
dec
test
out
dec
dec
ret
out
test
push
jg
add
pop
jnp
push
cmp
sarl
out
jmp
inc
lea
and
push
or
adc
mov
data16
or
xchg
jne
xor
jg
ljmp
mov
cld
test
daa
adc
jecxz
pop
loop
xchg
push
xor
mov
mov
in
cmpsl
fcoms
mov
addb
inc
push
std
push
inc
imul
xchg
and
mov
sti
iret
cmp
cmp
ficoml
and
gs
out
sub
inc
inc
lods
add
pop
pop
ret
dec
into
adc
push
mov
sbb
in
xor
mov
mov
inc
ret
mov
jae
enter
cmp
xor
lock
or
call
aad
sbb
gs
jo
xor
xchg
in
pop
aam
cwtl
test
rorb
ljmp
cs
aam
push
int
leave
dec
xlat
lods
push
fisubrs
sub
jmp
push
test
movsb
pop
push
bound
lods
lahf
cmp
jl
xchg
push
stos
roll
ficoml
sbb
scas
cli
mov
inc
xchg
and
jne
sub
pop
fisttpl
ja
fldpi
rclb
xchg
pop
mov
sbb
mov
adc
int
cmc
jno
add
xor
lcall
ja
jb
xor
lods
ljmp
dec
xchg
xor
fcmovnbe
mov
jmp
inc
cmp
cmp
fldcw
mov
in
push
xchg
pop
jmp
cld
inc
shlb
push
fs
jnp
or
mov
bound
test
fadds
cmpb
add
clc
inc
mov
popf
aaa
fsubr
jne
and
adc
repz
push
sub
dec
push
out
sbb
push
clc
inc
push
sbb
pop
mov
out
bound
pop
lret
dec
hlt
or
addl
fisubs
push
std
cmp
cmpsb
dec
cmpsl
sbb
jl
outsl
or
inc
mov
scas
xchg
negb
mov
pop
leave
inc
out
xchg
fistps
add
mov
addr16
push
adc
push
notb
sbb
sbb
int
aaa
jp
popa
pop
xorl
jp
sub
pop
mov
mov
cld
dec
cmpb
adc
or
pop
es
lods
lret
test
push
cs
ljmp
dec
mov
cmp
aas
xchg
xchg
adc
test
lea
adc
shl
xor
push
add
sbb
dec
push
push
enter
ja
mov
in
jle
and
push
mov
ret
int
xchg
xchg
jle
or
fdivp
mov
jbe
pushf
push
xchg
in
lret
movsb
or
out
mov
pop
pop
mov
pop
jmp
sbb
rol
hlt
insl
aas
enter
es
cmpsl
and
mov
mov
mov
jl
addr16
pusha
xchg
loop
stos
adc
mov
insb
add
sbb
js
cli
pop
lret
pop
mov
xchg
ficoml
insb
lcall
mov
push
dec
mov
xor
out
cli
xchg
jecxz
rol
jo
inc
in
sub
test
aad
sahf
mov
inc
jmp
mov
popf
inc
in
mov
fcom
loopne
popa
leave
repz
dec
and
xor
and
jne
add
outsl
cwtl
subb
adc
or
xchg
inc
cmp
sbb
stc
fmuls
sti
add
sbb
push
imul
shl
repz
adcb
jbe
or
loop
sub
pop
lods
lret
sub
js,pt
pop
ret
dec
sub
mov
inc
jo
aad
jecxz
mov
fidivrs
insb
mov
adc
push
jecxz
mov
xchg
fistps
ret
lods
test
jmp
xchg
in
scas
daa
fs
iret
dec
cmp
std
adc
das
xorb
mov
add
mov
pop
inc
lds
pop
test
sbbl
stos
popa
inc
gs
testl
or
sahf
imul
and
xor
popf
mov
add
dec
and
push
inc
lds
aam
jg,pn
inc
in
and
aad
mov
loope
jbe
adc
push
repz
loope
je
das
loopne
inc
xchg
or
pop
mov
addb
add
and
jle
mov
testb
loop
fisttps
cs
pop
add
jae
scas
dec
xchg
sti
or
jge
sub
sub
shrb
cmp
dec
mov
xlat
out
push
xchg
jle
sub
imul
mov
add
jmp
xchg
imulb
fisubrs
cmp
fidivrl
mov
mov
or
inc
xor
pop
sbb
int3
arpl
in
test
sbb
out
mov
mov
and
test
fucomi
hlt
xor
pushf
mov
cmp
add
mov
fs
jge
repz
test
mov
push
pop
mov
movsb
cmp
xchg
mov
aad
xor
pop
push
out
into
sub
stos
mov
test
push
jbe
push
mov
roll
insl
das
mov
sub
fistps
jl
insl
push
mov
dec
push
pop
push
rcrb
pop
fstps
repnz
adc
mov
loopne
dec
fidivs
mov
ret
jle
push
movsb
mov
sub
jg
lahf
nop
or
xchg
gs
fs
and
movsl
mov
and
xchg
inc
xor
aaa
push
movsb
inc
push
stos
mov
add
fs
add
and
xchg
imul
ret
ja
loope
cmp
insb
ret
add
push
inc
fs
lods
mov
adc
idivl
jno
sub
std
ficoms
ss
fdiv
adc
lret
jle
pop
xor
sub
inc
setnp
cmpsb
jb
scas
xchg
adc
pop
xlat
mov
mov
inc
or
lret
mov
ja
xor
test
vpackuswb
pop
jl
ja
daa
push
in
dec
sub
mov
add
adc
xchg
add
cltd
adc
push
inc
mov
int3
les
insb
mov
add
jecxz
push
cld
pop
sahf
mov
lret
decb
adc
daa
sti
call
mov
gs
ljmp
out
sub
mov
roll
repnz
movsb
mov
and
lret
cli
sbb
inc
adc
jg
jecxz
inc
sub
out
xchg
push
lea
sub
cmc
sbb
fdivs
bound
sbb
out
xchg
mov
mov
hlt
fcoml
jle
adc
or
xchg
stc
xor
mov
xchg
sahf
mov
insb
popf
cmp
rcrb
add
dec
bnd
dec
pop
icebp
mov
movsl
arpl
lods
loop
aaa
cmp
sbbb
sub
pop
cmpsl
pusha
in
mov
mov
push
mov
out
xchg
imul
or
fwait
shrl
fistl
out
cmp
inc
cwtl
jnp
enter
xor
pop
push
and
xchg
sub
adc
shrl
add
fs
aas
test
push
mov
cs
push
rcll
and
sbb
pop
lret
jns
inc
test
std
sbb
icebp
loopne
es
pop
aas
insl
sbb
xor
mov
out
push
into
popf
mov
jnp
ds
in
shll
pop
or
jno
sub
mov
push
stos
rcr
imul
adc
pusha
pushf
je
mov
scas
mov
inc
leave
hlt
pushf
sahf
fidivl
jmp
ret
aas
icebp
jae
pop
push
sbbb
inc
movsb
xchg
idiv
mov
mov
daa
outsl
inc
push
sub
jl
and
sub
lds
fs
xchg
cmpsl
cmp
jae
push
scas
cmpsl
rcrl
jb
addr16
cmp
mov
dec
sbb
es
adc
mov
and
pop
dec
add
xor
loop
fiadds
adc
out
daa
or
sbb
sarb
out
adc
inc
adc
inc
push
inc
pop
inc
inc
add
mov
pop
adc
mov
push
xor
iret
int
or
frstpm(287
jne
in
jnp
pop
outsb
add
or
cmc
mov
cmp
in
mov
xchg
push
mov
insb
je
add
fmuls
cld
adc
inc
pop
aam
and
sub
or
shlb
xor
mov
imul
push
dec
ljmp
cld
rcrb
xchg
mov
jb
fs
sti
jo
sbb
dec
stc
out
mov
jns
cmc
sub
es
stos
push
jg
mov
push
jl
sub
iret
push
js
call
stos
mov
xorl
js
or
loope
and
pop
sahf
fidivl
push
inc
xchg
out
pop
cmp
inc
pop
scas
test
mov
lock
out
dec
sbb
inc
test
pavgb
mov
xor
fdivs
xchg
cwtl
ja
in
jbe
shll
cs
scas
shlb
pop
mov
fbld
bound
and
clc
mov
lcall
jle
xchg
leave
test
dec
out
pushf
into
pop
mov
jns
pop
mov
subb
sahf
mov
leave
popa
stc
dec
mov
aaa
pop
xorb
xor
cmpsb
imul
int3
jecxz
pop
pop
outsb
adc
lds
inc
movsl
daa
icebp
negb
cld
add
jp
pop
and
lds
jno
shrb
cmpsb
adcl
dec
mov
lods
ljmp
lret
inc
adc
inc
jecxz
sub
shll
inc
add
mov
fisubrl
fsubrs
add
test
adc
ds
in
or
and
inc
xor
pop
xchg
out
stc
fidivrs
dec
jp
mov
loopne
in
stos
mov
xor
aaa
mov
fwait
jle
divl
pop
sub
push
mov
xchg
sub
adc
in
in
fstps
sarb
xchg
dec
fbstp
and
ret
sub
popa
movsb
dec
mov
rcrb
xor
inc
faddp
pop
and
mov
jnp
push
and
and
lahf
insb
js
push
sbb
jno
ret
jns
les
das
leave
in
push
inc
cmp
call
arpl
mov
or
push
add
jp
lds
push
test
inc
pop
mov
out
or
and
orb
iret
mov
pop
jnp
movsl
xor
rorl
or
and
mov
bound
add
pop
add
fucomi
mov
jp
mov
push
sub
ret
mov
and
rorl
cmpsb
imul
and
call
xchg
divl
dec
fstps
mov
pop
push
mov
mov
pop
or
pop
popa
lods
xor
sarb
inc
scas
out
sbb
int3
lods
inc
hlt
cmpsb
and
std
adc
lods
shlb
jno
stos
add
test
stc
mov
lods
ds
inc
add
inc
movsl
push
sbb
icebp
nop
insb
cmpsl
or
icebp
mov
mov
mov
sbb
add
lods
mov
adc
adc
dec
js
inc
call
sub
aam
ja
lret
enter
out
and
leave
jno
inc
mov
stc
push
xchg
cmp
cmp
cmp
ja
outsl
add
addr16
leave
add
ljmp
inc
fdivl
shlb
sahf
out
mov
sub
test
loop
clc
inc
cwtl
pop
enter
dec
jbe
cmpsb
mov
ret
inc
es
fildl
notb
or
sub
pushf
movsb
mov
int
inc
mov
adc
and
out
add
shl
pop
mov
repnz
jmp
rclb
dec
inc
shrb
push
jmp
shl
push
ljmp
pop
subb
int
lods
repz
push
pop
and
mov
test
inc
int
fisubrs
mov
lcall
bswap
rolb
aaa
cltd
das
clc
in
lcall
jne
in
cmpsb
or
cmp
push
in
jnp
jnp
lds
xchg
pusha
test
inc
movl
lds
je
div
or
xor
jne
lds
les
in
vmovmskps
pop
popf
inc
loope
mov
rorl
sbb
lahf
jb
cmc
into
jecxz
sub
push
data16
jno
mov
inc
xor
call
std
or
test
loop
adc
cwtl
adc
cmp
sub
sahf
iret
pop
jae
inc
sbb
mov
popa
sub
shll
fidivl
push
and
ja
pop
mov
ror
adc
pop
not
xchg
outsl
push
pop
test
pop
lret
push
cmp
xor
sbb
sub
mov
xchg
test
push
sahf
sub
out
cmp
loop
out
jmp
adc
pop
add
stos
push
sbbl
hlt
adc
cli
out
jl
insl
mov
mov
push
jns
push
jbe
out
out
mov
sub
cmpsb
lods
mov
add
imul
mov
jb
rcrl
lock
add
aaa
lods
scas
lret
adc
loopne
sub
and
pavgw
xchg
lock
jp
cmpsb
in
fisubl
pop
lods
mov
mov
cmp
xchg
mov
ja
mull
mov
mov
push
inc
fadd
lods
int3
pop
xchg
cmp
adc
lret
and
enter
jg
mov
ljmp
orl
dec
cltd
movsl
les
xor
dec
sub
loop
mov
and
cmc
inc
mov
test
cmpsl
xchg
ss
adc
xor
sub
jl
dec
fnsave
mov
fwait
lahf
lods
cmp
xchg
or
and
adc
flds
cmpsb
lret
xchg
push
jno
xor
clc
and
pop
clc
push
sbbl
xchg
cmp
inc
iret
pop
scas
xorb
cmp
inc
repz
in
clc
in
dec
mov
out
data16
jmp
pop
mov
mov
das
xchg
inc
arpl
or
cli
push
shrl
jp
jl
call
lahf
lret
mov
shl
insb
lret
mov
mov
test
adc
aam
sub
movsb
scas
cmp
inc
mov
sbb
add
jo
lea
mov
mov
ss
mov
pop
frstor
jne
xor
sub
out
fisttpl
rep
iret
push
lret
fistps
sub
lods
mov
stos
mov
test
xchg
and
xchg
ds
imull
ja
ret
pop
push
test
test
test
mov
in
dec
mov
mov
in
fdivs
test
adc
jo
mov
mov
pop
push
loop
inc
cmpb
out
stos
stos
mov
inc
jno
mov
ss
sti
push
sbb
mov
sbb
div
xor
in
imul
jbe
cmp
and
cltd
adc
and
out
adc
or
cltd
add
adc
sbb
add
adc
in
iret
xchg
mov
sbb
pop
mov
xchg
les
pushf
das
stos
adc
call
mov
ret
out
ds
pop
push
pop
call
push
fnstenv
aam
mov
adc
rcr
out
mov
push
in
rcll
xor
test
enter
sbb
and
mov
into
mov
sbb
pop
sub
sbb
dec
cmp
lret
lahf
mov
cmp
inc
dec
push
lret
aam
cltd
nop
inc
and
cmp
jge
lret
into
cmp
test
cmp
imul
cmpsb
push
stc
ret
dec
jg
roll
lea
sar
popf
cmp
push
push
scas
pop
and
pushf
cmp
cmpsb
mov
int
push
jg
iret
loopne
movsb
mov
sbb
rcrl
daa
add
shr
cmpsl
add
rol
aad
inc
int3
and
adc
rol
into
arpl
mov
mov
out
fsubs
cltd
push
inc
add
orb
add
sub
jmp
scas
dec
leave
mov
imul
je
pop
sbb
out
xchg
xor
stos
or
and
ret
clc
xor
lods
mov
adc
xor
lahf
mov
mov
adc
mov
out
dec
out
sti
and
rorl
in
das
gs
push
and
xor
sub
lret
das
xor
jmp
into
cwtl
je
je
dec
lcall
and
addl
adc
lds
bound
out
push
push
cmc
sbb
lret
sti
mov
mov
sbb
daa
pop
mov
pop
addb
arpl
fs
mov
sbb
mov
dec
inc
aaa
hlt
ret
cmp
dec
add
insl
mov
pusha
ss
in
je
lods
mov
cmp
idiv
mov
pop
mov
pop
in
add
sbb
in
jo
cmp
popf
imul
mov
ds
sbb
imul
push
ret
mov
mov
fimuls
cmp
loopne
aam
ss
ficomps
mov
inc
push
pop
jmp
sub
outsl
cmp
push
lret
in
leave
out
in
dec
xchg
mov
sub
test
daa
sti
fwait
rcrl
mov
test
cmpsb
clc
movsb
mov
push
lods
fbstp
push
add
out
nop
sti
jnp
jnp
pop
ljmp
xchg
ret
insb
push
inc
roll
pop
jle
or
test
fisttpll
cltd
pop
dec
aas
dec
xchg
lret
mov
inc
sub
bound
xchg
jo
test
cmpsl
aad
pop
int3
push
push
adc
add
mov
dec
sahf
add
xchg
mov
lret
rcll
mov
pushf
scas
sbb
in
shll
and
dec
iret
xchg
add
cmp
push
cmc
adc
add
dec
cltd
push
aam
loop,pt
outsl
jb
push
push
movsb
jb
rcll
in
xchg
xlat
inc
push
sbb
push
sbb
push
cmp
addr16
out
mov
fidivl
cmp
aaa
jb
lcall
jbe
jmp
mov
sbb
and
stos
jmp
mov
or
test
mov
in
lcall
mov
pop
pop
sbb
xor
push
scas
xchg
stos
cmp
call
shll
scas
outsb
pop
daa
test
mov
or
ds
jmp
or
sbb
dec
mov
gs
and
test
cmc
cmp
mov
sarl
scas
jo
sub
dec
popa
insb
xor
icebp
and
stos
push
sub
mov
sbbb
cmpsb
out
pop
inc
push
dec
xor
out
inc
mov
dec
mov
in
jecxz
notl
jecxz
xor
cmp
cmp
push
push
pop
insl
lret
xchg
mov
mov
jmp
jb
ret
popf
inc
into
mov
ljmp
lods
mov
test
cmpsl
mov
scas
cmp
out
icebp
jns
jl
outsl
push
data16
sub
cltd
push
out
out
pop
sbb
lea
mov
out
mov
dec
or
je
xor
mov
nop
cwtl
dec
fidivs
imul
sbb
outsl
jg
inc
repnz
call
loop
jns
scas
ljmp
ljmp
sub
int
xor
xor
fcmovnbe
pop
mov
jp
or
lea
or
push
inc
mov
lret
and
rorl
or
xchg
cwtl
call
mov
insb
adc
xor
xlat
dec
mov
pop
cld
cmpsl
pop
dec
mov
bound
or
in
lret
push
inc
sti
or
bound
xor
or
enter
daa
sub
sbbl
jp
mov
in
mov
mov
ss
mov
in
cs
sub
das
push
push
nop
cmp
sub
mov
dec
mov
in
jg
cltd
pop
xchg
rsqrtps
jno
mov
inc
add
pop
in
in
fwait
mov
cmp
mov
sahf
adc
xchg
sbb
xchg
andl
mov
mov
addr16
pop
sub
mov
arpl
fnstenv
push
out
mov
subb
ret
xchg
cmp
mov
mov
sub
pop
jns
xchg
insb
xchg
push
xor
lods
leave
xchg
lea
dec
pusha
push
push
dec
xchg
jne
out
insl
mov
pop
pop
mulb
sub
dec
cmp
jo
bound
xor
mov
cmc
loope
xlat
cmp
jg
xchg
add
arpl
inc
mov
insb
aad
or
mov
pop
and
xchg
jnp
nop
lods
pop
inc
andb
push
mov
push
shl
cmp
loop
into
add
test
mov
mov
xor
int
mov
pop
sti
cmp
cmp
dec
mov
add
mov
push
inc
inc
ds
sbb
mov
jne
aam
lods
addr16
cld
sbb
xor
inc
pop
sbbl
es
rolb
jge
cmc
push
cmc
sub
fldln2
push
nop
cmc
xchg
sti
ret
pop
fbstp
psllw
xchg
sub
jae
mov
sub
mov
pushf
xor
sub
xchg
xchg
or
xor
jnp
and
jno
push
aad
or
xchg
pop
aam
loope
pusha
daa
mov
jmp
stos
cmp
popa
pusha
scas
popa
push
jns
mov
stc
cmp
lahf
push
jnp
insb
pop
mov
fbld
mov
pop
xchg
ljmp
cmp
test
and
mov
aad
jp
lds
icebp
aas
xor
jno
nop
pop
sub
sahf
icebp
jb
fnsave
out
sahf
jns
imul
subb
in
das
jecxz
mov
adc
test
movb
dec
mov
lods
xor
push
adc
pop
in
mov
ret
mov
pusha
sbb
cld
adc
clc
imul
neg
adc
xchg
lcall
pop
xchg
cmp
dec
or
imul
sub
in
or
cs
cmpsl
stos
ret
xchg
sub
xor
loopne
add
sbb
decb
mov
add
cmp
es
dec
mov
clc
iret
pop
pop
dec
pop
push
adc
aaa
addr16
pop
fistpll
dec
jno
pop
jmp
ja
pop
cltd
enter
cld
bound
in
fildll
xrstors
push
fwait
mov
int3
aad
cmp
jmp
fldenv
push
inc
xor
sbb
test
jp
fsubrs
je
out
add
pop
and
outsb
and
sarl
js
iret
imul
dec
fdiv
fiaddl
sahf
jge
in
out
test
pop
hlt
jne
ljmp
xchg
xchg
dec
and
cmp
pop
or
rcrb
das
sti
sub
mov
dec
mov
push
cmp
stos
leave
and
and
pop
sbb
mov
ret
mov
int3
cs
aad
cld
push
int
in
arpl
push
push
or
ret
ret
mov
clc
inc
inc
pop
mov
mov
push
lods
call
scas
dec
shlb
mov
jnp
xor
stc
push
repz
mov
inc
jno
js
imul
pop
clc
jb
cld
sbb
in
add
int
mov
lods
adc
loope
jg
idivb
mov
mov
call
dec
stc
incb
fdivl
dec
xor
shll
rcr
mov
imul
test
mov
xlat
cli
jns
xor
mov
cwtl
fadds
jg
ja
mov
mov
or
ja
jbe
cs
mov
jns
ljmp
mov
mov
jae
imul
movsb
push
add
in
int3
frstor
sbb
stos
jle
lret
or
or
fwait
or
xchg
and
aas
cld
inc
or
jbe
xor
dec
xchg
lcall
ror
sub
les
xor
je
ljmp
dec
sbb
add
movsb
outsb
cmc
fstp
orl
mov
in
mov
and
and
adc
jae
mov
test
in
fildll
push
xchg
nop
notl
cmp
imul
jle
push
dec
negl
call
dec
std
aam
mov
pop
fdivp
cld
xor
sub
mov
jae
fsubp
or
inc
lock
cltd
mov
xchg
fsubrs
xor
adc
push
es
out
xor
pop
imul
aad
xorl
fmull
adcl
mov
movsl
inc
adc
cltd
dec
xchg
jbe
inc
insb
outsl
cmp
outsl
mov
jne
sub
or
and
adc
sub
or
ja
jmp
mov
pop
lcall
mov
add
cs
test
jae
sarb
mov
jne
or
sub
pop
rcl
mov
pop
mov
and
repnz
lods
mov
push
and
mov
adc
add
jmp
in
push
data16
dec
les
es
mov
mov
inc
cmp
dec
pop
dec
ss
and
mov
insb
test
loopne
xchg
icebp
cmp
pop
and
xor
ja
aam
jns
jp
or
scas
inc
and
int
adc
xor
lret
aaa
adc
add
mov
repz
call
mov
mov
add
inc
orb
pop
cmpl
or
faddl
inc
xchg
sub
imul
jne
jg
es
pushf
ja
fcompl
adc
adc
mov
mov
xchg
outsl
cmpsl
std
bound
ljmp
jns
mov
rcrb
and
outsl
mov
out
test
ret
jb
dec
push
sub
dec
push
pop
mov
inc
frstor
push
and
int3
and
xchg
xlat
bswap
push
test
cmp
mov
fmuls
jp
test
lock
inc
and
xchg
rcl
and
jmp
jb
sbbl
jb
mov
mov
mov
repnz
fs
cli
cmp
jmp
std
clc
inc
dec
jecxz
lds
ffree
or
cmp
fs
mov
jmp
test
cmp
xchg
into
push
ficoms
or
daa
pusha
or
pop
aad
hlt
mov
and
sbb
and
cmp
jne
pop
pop
je
xor
fnstsw
push
sarl
test
int
cmpsb
sarl
inc
push
pop
mov
mov
aas
rorl
mov
mov
dec
popl
mov
inc
into
cmpl
dec
jl
mov
and
xor
or
stc
int
stos
pop
aad
in
cli
fsts
jns
je
add
shr
or
test
aaa
insl
in
insb
jnp
push
scas
pop
push
into
sub
repnz
push
mov
out
push
push
popa
shrl
scas
dec
mov
std
jae
ret
lcall
loopne
clc
cld
inc
outsl
sbb
test
jnp
into
adc
pushf
lods
jecxz
movb
mov
cmpl
xchg
int
cmpb
xchg
pop
mov
dec
sbb
outsl
std
pop
lcall
cs
lods
mov
and
clc
aam
dec
cs
ja
sub
jns
jmp
stc
push
ficompl
dec
cmp
cli
pushf
adc
in
and
push
mov
data16
mov
cmp
shlb
pop
mov
xchg
call
cs
sbbl
inc
jbe
movb
cmp
adc
lods
aad
in
or
sub
data16
sbb
jno
sub
pop
je
cmp
sbb
xor
sub
scas
mov
push
push
out
sub
dec
mov
and
mov
mov
sub
fldenv
lret
adc
push
jl
test
std
adcl
add
sub
push
mov
xchg
shlb
cmp
jg
ror
test
dec
and
push
push
in
xor
outsl
mov
adc
add
repz
imul
in
cmp
addr16
rolb
fildll
mov
adc
and
push
mov
sub
enter
pop
test
mov
stos
mov
pop
push
ret
push
aad
pop
push
push
add
xor
ret
test
imul
ror
push
das
pop
mov
push
push
sub
xchg
mov
add
stc
dec
mov
sub
xchg
test
aas
push
adc
cwtl
push
inc
fucomip
mov
mov
js
loope
inc
add
lcall
in
sahf
scas
rcrl
rorb
dec
add
mov
add
lcall
lea
dec
dec
push
jno
in
sub
mov
test
mov
in
xor
mov
fidivrl
lret
jns
daa
push
cld
sbb
fimuls
sbb
cmc
out
popa
and
mov
lock
mov
dec
jns
imul
sbb
icebp
dec
and
jmp
iret
push
repnz
ficoml
call
mov
fwait
inc
mov
stc
push
into
jo
ret
push
dec
roll
loope
fildl
test
push
cwtl
loopne
add
lds
sub
out
sbb
lret
adc
scas
fadd
fs
sbb
mov
mov
cmp
mov
lds
cltd
mov
test
in
imul
dec
pop
in
sbb
pop
lods
rcrl
xor
adc
ljmp
mulb
ja
or
mov
inc
mov
movsl
int
adc
xchg
adcb
push
sbb
or
mov
leave
stos
mov
xor
jb
dec
fstpt
sti
pop
pop
pop
push
pop
je
nop
jl
xlat
lds
dec
pusha
mov
popf
mov
out
popf
cmp
jno
dec
repnz
and
push
fs
in
mov
or
popl
ret
xor
xchg
movsb
enter
sti
push
inc
adc
arpl
dec
sbb
lcall
jno
outsl
es
inc
repz
sub
mov
in
es
sub
test
sahf
pop
dec
mov
and
je
mov
sti
aad
xor
lahf
cld
fisubs
push
sub
xor
mov
movsl
xorb
add
insb
daa
dec
jae
shrl
push
test
in
push
ja
out
rolb
int3
es
mov
ret
jl
stos
fbld
pop
in
cltd
jecxz
sahf
pop
mov
xlat
sub
mov
jp
sub
mov
test
repz
xchg
xor
push
loope
fs
add
or
mov
out
jl
add
sub
test
stos
fisubrl
lret
mov
or
push
xor
xor
mov
inc
sub
bnd
and
das
dec
push
jge
outsb
jb
testl
in
iret
rorl
rolb
mov
rorb
dec
xchg
mov
sbbl
repnz
inc
gs
or
icebp
loopne
inc
int3
inc
mov
lods
cmp
sub
sub
add
cltd
sub
stos
sub
nop
cltd
push
pop
add
jmp
adc
push
cltd
mov
or
and
adc
stos
adc
or
loopne
enter
xchg
push
iret
inc
push
imul
mov
ljmp
lret
imul
pusha
adc
into
inc
jne
js
jno
mov
adc
inc
test
ror
jl
lods
mov
pop
cmp
lods
or
mov
xchg
scas
xchg
mov
rcrl
rorb
repnz
sub
loope
addr16
orb
add
pop
clc
dec
pop
fwait
push
cmpsb
mov
hlt
sarb
mov
jle
in
imul
sub
dec
lock
and
lods
ja
xchg
jae
jg
fnstenv
shl
andl
push
pop
loope
add
xor
and
enterw
inc
inc
mov
add
lret
fists
test
addps
mov
inc
test
or
push
les
fs
lods
mov
loope
cmp
int
int
sbb
dec
push
pop
pop
xchg
mov
popf
call
shlb
mov
insl
mov
push
pop
mov
lret
inc
fidivl
addr16
dec
cltd
mov
mov
fisttpll
out
adc
sahf
dec
xchg
dec
sbb
or
call
es
lcall
jo
sbb
or
ja
les
mov
std
pushf
mov
fisubrs
pop
add
or
sbb
inc
jp
hlt
ret
js
sbb
vmwrite
ret
ja
nop
adc
add
jo
cmpsl
push
xchg
add
fcoml
cmc
lock
and
dec
addr16
jp
push
loope
cmp
jne
pop
in
push
mov
or
es
popf
pop
mov
xor
xchg
mov
pop
xchg
je
iret
xchg
sub
xchg
mov
testl
insl
lds
fs
fisttpll
dec
js
sub
add
ss
popa
cmp
call
push
pop
icebp
dec
fwait
cs
xor
mov
sub
test
cwtl
out
push
jecxz
outsb
adc
dec
nop
les
add
xchg
ret
ret
xor
jmp
jbe
in
push
push
push
cli
mov
add
push
xlat
inc
scas
imull
stc
pop
mov
dec
fsin
sbb
dec
xchg
test
or
cmp
pushf
ja
ds
push
sbb
xor
in
sbb
call
ljmp
fwait
mov
mov
push
fldl
in
addr16
adc
subl
mov
enter
popf
in
adc
outsb
mov
and
test
imull
test
outsl
inc
xchg
pop
mov
mov
dec
push
jae
ret
lock
mov
subl
adc
sub
in
cmp
xchg
dec
sbbl
xchg
pop
mov
loopne
imul
fildll
cli
stc
mov
mov
pop
out
in
je
in
popa
push
cwtl
and
lahf
lcall
test
insb
ss
shrb
pop
nop
cld
fsubl
ljmp
jae
xor
dec
clc
cmp
js
inc
and
xchg
cld
cld
mov
int3
push
int
mov
xchg
sbb
mov
mov
orl
and
jl
jl
xchg
pop
mov
fmull
enter
xchg
or
dec
dec
ljmp
mov
add
inc
adc
and
mov
aaa
mov
mov
negb
les
lcall
adc
mov
sub
cmpsb
inc
and
int3
fwait
pop
call
jmp
popf
test
clc
in
jl
xchg
cs
mov
in
es
inc
shlb
xor
insl
jb
push
xchg
dec
shlb
or
add
xchg
mov
lods
pop
jmp
push
mov
loope
mov
daa
aad
repz
scas
push
cmp
mov
xor
mov
inc
bnd
mov
sbb
sub
leave
mov
lea
pop
mov
inc
cmp
mov
mov
pop
dec
sub
jno
loopne
mov
popf
adc
and
xor
fisubl
into
pop
sbb
stc
out
lods
sarl
or
jbe
dec
nop
add
inc
inc
ret
jmp
outsb
loop
mov
xor
xchg
xor
loopne
pusha
mov
out
mov
adc
gs
jno
sub
shr
inc
shl
sbb
cld
rcll
or
lock
popa
int3
jno
lods
loop
and
call
cmpsl
scas
insb
sbb
sbb
pop
movsl
ljmp
mov
in
fs
push
xchg
std
lret
xor
dec
loopne
ds
clc
mov
out
mov
fs
std
mov
mov
pop
jle
mov
fwait
out
lret
adc
xchg
sub
pop
xlat
mull
xor
lds
imul
cs
rorb
popa
cltd
mov
xchg
sub
mov
and
xor
cwtl
adc
jmp
push
pop
jns
enter
repz
dec
imul
shlb
cmp
or
pop
pop
hlt
fistps
bound
cli
repnz
int
testb
mov
inc
cmp
int
out
and
push
daa
dec
into
sub
in
push
pop
or
push
pop
aaa
add
cmp
shll
or
mov
inc
jle
cmp
pop
pushf
mov
adc
jno
mov
js
xor
aas
xchg
pop
lods
out
push
and
pop
dec
or
and
adc
shrl
push
mov
std
jl
lea
jg
div
leave
js
jg
sub
jne
pusha
xchg
push
fisttps
jmp
jecxz
cltd
or
xor
inc
cltd
aaa
sahf
dec
lret
xchg
xor
stc
ja
pop
cmp
testl
and
and
loop
dec
loopne
dec
js
inc
fidivrl
imul
sarl
adc
aas
sub
mov
add
scas
push
xchg
sub
inc
repz
cmpsb
add
or
aam
lea
ss
pop
cmp
push
add
adc
pop
lret
dec
nop
pop
xlat
add
pop
dec
or
ds
pop
fwait
insl
fwait
xchg
js
leave
inc
dec
pusha
iret
xorl
mov
adc
jg
dec
scas
lahf
dec
fsts
adc
mov
div
cli
jmp
xor
clc
sbb
out
cmp
daa
dec
fsubl
daa
js
sahf
jl
push
mov
jne
jle
push
xlat
push
jne
stos
ja
imul
adc
ljmp
push
cli
hlt
jle
jae
dec
repnz
push
mov
arpl
xchg
xor
aam
les
sub
arpl
adc
mov
popa
sub
popa
mov
push
jl
out
insb
mov
fwait
aad
add
lods
out
mov
inc
mov
cld
subb
test
sub
fisubrs
rorb
push
push
cli
iret
add
sbb
jns
jecxz
stc
cmp
push
adc
pop
jne
rclb
mov
push
push
sbbl
andb
out
nop
jp
adc
dec
xchg
cli
jg
add
repz
addl
push
xor
fldt
mov
dec
inc
sbb
xor
jl
push
mov
jl
lret
outsb
push
pop
hlt
in
inc
cmc
sub
fcomp
push
arpl
pop
cmpsl
into
sbb
loop
dec
add
xor
adc
flds
pop
cmpsl
jo
inc
jo
hlt
rcrb
lea
rcll
scas
mov
inc
jno
dec
lea
push
shrb
movsb
pop
push
mov
xchg
aam
jp
jae
into
dec
jp
decl
xor
pop
inc
push
inc
aaa
sti
add
pop
add
negb
jmp
pop
inc
test
push
jno
mov
scas
repz
push
jne
xor
addl
cli
nop
imul
jns
int3
adc
bound
lcall
xchg
fs
outsb
cmp
nop
jne
outsb
pcmpgtw
mov
rol
jae
sarb
mov
mov
call
xchg
cmp
inc
and
sub
test
dec
in
push
jne
jmp
outsb
fbld
xchg
je
mov
mov
je
inc
fbld
movsb
xchg
fwait
jl
pop
pop
push
cwtl
jns
push
mov
ficoms
mov
dec
dec
ret
fmuls
add
bound
and
les
add
out
dec
das
aad
insl
pop
test
and
dec
cmp
fimull
cmp
mov
mov
dec
pushf
leave
orl
push
cmc
or
fnstenv
xchg
xchg
cmp
and
imul
cmpsl
rorl
rcll
push
cmp
cmpsb
daa
push
cmp
sub
dec
insb
inc
push
sub
test
insb
add
add
jp
loope
scas
xchg
sub
insl
pusha
xor
dec
das
mov
mov
sub
outsl
jnp
cmp
addr16
push
fisubl
jge
xor
cmp
or
js
xchg
jb
out
aad
adc
adc
or
sbb
jns
pop
test
add
push
and
sti
pusha
push
mov
jne
es
movsb
or
pop
leave
int
push
pop
in
inc
dec
outsb
jo
and
lahf
mov
stos
out
lahf
push
jb
add
mov
xor
xchg
add
in
xchg
jmp
mov
cmpl
lods
inc
mov
inc
xor
adc
sbb
sub
xor
hlt
ret
dec
into
shl
sbb
repnz
mov
inc
movsb
push
jmp
sbb
data16
mov
xlat
xchg
ret
mov
add
jge
lods
pop
ds
popf
test
pop
mov
jae
mov
aaa
mov
push
wrmsr
lods
sub
imul
mov
shll
outsl
mov
ja
jbe
xor
lahf
insb
xchg
scas
inc
sub
ja
hlt
scas
push
rolb
mov
xorl
out
outsl
fs
mov
mov
jmp
insb
in
xchg
lea
push
daa
lret
xor
xlat
jnp
int3
cmpl
add
xchg
or
pop
les
sbbb
into
sub
mov
mov
nop
dec
pushf
push
int3
sub
dec
xor
dec
les
ret
and
je
adc
lret
js
or
mov
outsb
jle
lods
inc
mov
fists
repnz
add
lea
ds
stos
out
cmp
cmp
lods
pop
jbe
xor
int3
aam
or
xchg
adc
int3
sti
sbb
xor
rolb
fsubrl
pop
mov
mov
inc
dec
inc
sbb
xchg
insl
inc
aas
xor
pop
stos
add
icebp
sarb
popa
mov
imul
outsb
aaa
adc
iret
iret
mov
pop
es
xchg
outsb
inc
repnz
cmp
adc
cmpsb
fisubl
jle
ret
pop
xor
cmpsl
dec
mov
fcmovnbe
mov
cld
push
shll
imul
ljmp
in
in
mov
movsl
lahf
sti
xlat
repnz
stos
pusha
int
popf
fstpl
int
sahf
outsl
ljmp
sub
mov
shrb
repz
ljmp
mov
test
outsl
push
adc
lcall
aad
rcrl
std
fimull
cwtl
movsb
jecxz
pop
rclb
lods
cmp
notl
addr16
sti
inc
inc
pusha
push
daa
ljmp
popa
sub
test
sub
jne
pop
xlat
or
mov
and
mov
mov
scas
imul
rcrb
mov
test
push
jmp
sarl
xor
cltd
xor
dec
mov
fwait
inc
pop
xchg
ds
sbb
std
out
das
xchg
fcoml
loop
mov
jbe
push
jnp
jnp
push
mov
mov
push
push
mov
xchg
pop
shrl
loopne
adc
lea
push
jp
mov
fidivrl
test
rcrl
scas
push
mov
push
cmp
in
mov
dec
push
xchg
into
and
repnz
stos
jl
pop
inc
lock
es
dec
add
adc
faddl
test
add
mov
scas
mov
push
cltd
lock
jns
stc
cmp
xchg
aad
mov
mov
fiaddl
sbb
pop
fs
mov
sub
pushf
mov
ds
stos
ret
into
std
fistps
movsb
push
xchg
and
ret
bound
pop
jge
xor
rcrl
outsb
sbbl
lods
xlat
out
ss
or
dec
sub
and
jb
dec
lock
imul
ss
icebp
cmc
xor
or
addl
xchg
sub
pop
clc
stc
xor
and
int
test
adcl
add
cwtl
push
aam
sahf
jg
popa
in
and
push
sub
mov
cmp
rcll
xor
inc
sub
std
mov
and
cmp
mov
outsl
and
mov
aam
or
xlat
lahf
das
push
popa
arpl
mov
cmpsb
les
adc
or
xor
mov
aad
cmp
cmp
arpl
pusha
dec
loope
pop
test
cmp
xchg
popf
sahf
cmc
sub
xchg
jmp
jo
out
in
and
xor
gs
lds
jmp
stos
and
fwait
pop
into
push
add
mov
sub
loop,pn
cmp
ficomps
test
sbb
mov
imul
psrlw
mov
out
les
je
sbb
sahf
adc
fxch
adcl
mov
jno
loop
xchg
mov
out
daa
stc
dec
cmp
sbb
xor
fs
sub
mov
nop
jp
out
fisubs
adc
mov
mov
orb
and
dec
sar
cmp
hlt
push
cmc
jg
ret
clc
jb
lods
out
sbb
inc
int3
test
dec
lods
fisttpl
imul
cmp
fisubrs
leave
push
or
pushf
xchg
jae
mov
in
dec
scas
pmuludq
sub
out
push
xchg
aas
mov
ret
pusha
pop
pop
jbe
hlt
jbe
aaa
push
into
push
imul
sub
je
sahf
andb
mov
mov
push
push
pop
pop
mull
out
dec
xor
add
pop
mov
and
movsl
mov
xchg
iret
or
scas
mov
pushf
ljmp
into
pop
dec
test
movsb
nop
push
mov
sub
push
pop
inc
in
lea
push
in
sbb
cmpsl
pop
push
fiaddl
loopne
test
dec
sbb
loope
sbb
mov
and
jo
jmp
pop
lods
cmp
jbe
mov
and
notl
ficomps
incb
mov
mov
mov
pop
lahf
mov
repnz
filds
cli
xor
push
sub
aad
push
and
dec
fiadds
pop
in
mov
add
out
sub
fsubr
fld
and
adc
push
bound
sub
add
push
ds
imul
insb
test
repnz
aad
inc
ss
pop
adc
bound
jno
jge
add
icebp
popf
xchg
push
pop
ffreep
pop
ljmp
xchg
jmp
scas
sbb
xor
and
leave
jecxz
aaa
mov
movsl
push
sub
jbe
inc
jo
cmp
xor
loope
push
jne
push
mov
sub
dec
roll
pop
push
and
loope
insb
lock
sahf
add
imul
insl
je
cld
ss
mov
xor
or
fists
jae
or
jmp
mov
add
xchg
jne
mov
or
sbb
sti
movsl
fldl
scas
cmp
fucomp
xchg
mov
pop
sub
cltd
mov
leave
or
mov
into
fucompp
mov
movsl
jle
mov
js
push
add
aas
popa
mov
pop
leave
sti
pop
mov
sarl
ret
sbb
adc
pop
jg
mov
imul
lods
ds
push
leave
int3
xchg
daa
mov
test
and
clc
dec
scas
pop
or
jmp
mull
mov
ds
xchg
pushf
es
fistpll
enter
sbb
pusha
mov
scas
jbe
adc
adc
cmc
dec
mov
movsl
out
and
mov
aas
enter
add
sbb
stos
xchg
cmpsb
mov
jg
mov
test
mov
dec
les
loopne
outsb
mov
je
test
ds
ret
mov
push
pop
sbb
jg
shll
dec
jnp
sub
test
cmpsb
cmc
xchg
push
fldenv
insb
cs
rcrl
mov
sbb
ret
ljmp
sub
hlt
movsl
and
add
jle
fidivs
loope
lods
push
adc
sti
in
movsb
push
leave
mov
fcoml
sub
std
inc
stos
pop
out
push
pop
and
mov
ror
icebp
jae
sub
and
inc
xchg
cltd
sbb
sbb
into
xor
jae
sti
sub
push
test
pop
xor
inc
fpatan
xlat
js
js
orl
cmp
add
jp
out
cmp
adc
lods
dec
dec
fmul
xor
push
mov
aaa
out
pushf
clc
mov
ljmp
int3
pop
insl
cmc
out
xchg
mov
and
popa
fstps
arpl
cmc
xor
mov
mov
nop
adc
or
sarl
add
sub
repnz
movsl
sbb
inc
lcall
hlt
addl
dec
shlb
es
cmp
addr16
repnz
in
add
mov
add
outsb
jne
xor
xchg
insb
adc
ljmp
repnz
jns
adcb
fs
mov
sbb
mov
clc
cwtl
xor
es
shrl
mov
out
fwait
push
or
mov
bnd
sbb
shlb
inc
pop
jle
stos
jnp
test
jmp
rclb
aad
sub
jne
and
mov
lret
sub
addb
icebp
xchg
popa
dec
lret
loopne,pt
clc
pushf
mov
aam
pop
pop
inc
add
sub
push
pop
jp
js
addb
popf
pop
xor
test
xchg
mov
xor
std
pop
out
dec
movsl
movsl
dec
inc
iret
ljmp
sub
fwait
ja
or
jbe
in
push
sub
dec
gs
sub
lods
jbe
out
shlb
flds
mov
dec
inc
pop
add
xor
jp
cmpsb
sub
and
cld
dec
sub
in
inc
fwait
push
dec
adc
mov
lods
dec
lods
push
and
cmp
test
xchg
std
test
imul
xchg
or
in
mov
sub
lcall
cwtl
mov
xchg
cmpsb
ss
dec
xchg
jns
fsubr
dec
sbb
lahf
jb
mov
and
adc
test
shlb
push
sbbl
add
inc
bound
pop
les
stc
roll
add
mov
outsl
pop
xchg
decb
mov
jne
shl
and
cmp
pop
mov
test
out
js
push
pop
adc
addr16
sub
loop
sarb
lods
mov
push
pop
mov
es
pop
pop
cwtl
shll
movsb
mov
cmc
push
sbb
in
divb
stc
fisubl
lea
in
in
testl
pop
mov
out
sbb
pop
movsl
and
rcr
mov
xlat
dec
xchg
arpl
sub
mov
push
cmpsl
or
mov
push
sub
sbb
ja
cmpsb
jmp
adc
xlat
data16
inc
divb
cmpsl
popf
jge
movsb
mov
or
cmp
sbb
cmpsl
mov
xlat
and
movsb
sbb
shrl
add
jp
cmp
rorl
jae
pop
mov
data16
testl
test
push
fldl
mov
adc
jmp
inc
xchg
movsl
cmp
ja
ljmp
movsb
ss
lahf
lods
cmp
push
and
xchg
arpl
popf
push
lods
pop
test
sbb
mov
push
popa
lahf
sub
lret
std
adc
ret
adc
adcl
js
mov
push
mov
or
shlb
enter
cmp
jne,pn
fnstsw
loopne
xchg
pop
xchg
cwtl
fisttpll
sub
hlt
popf
fistpll
pop
daa
arpl
jle
and
sbb
imul
sub
or
insb
sbb
jno
xchg
sub
aam
pop
mov
sahf
mov
cs
call
or
cmp
dec
outsb
cmpb
mov
add
push
fiadds
mov
inc
pop
scas
lods
shrb
dec
xor
mov
lods
xor
mov
xchg
fstpt
dec
dec
sti
push
add
arpl
outsb
int
xchg
in
cmp
lret
rcrl
jmp
xor
rolb
into
pop
adc
aam
jle
inc
test
mov
mov
pop
mov
jnp
fwait
sub
test
repz
mull
nop
cmpsl
mov
lea
sbb
roll
cld
and
mov
jne
adc
std
icebp
push
adc
ret
sub
push
pop
and
test
cmp
fucomip
push
push
sbb
js
sbb
add
jle
sbb
setno
scas
xchg
jge
call
xchg
inc
outsb
pop
ds
rorl
or
dec
mov
loop
ficoml
cmp
adc
mov
dec
lock
scas
fdivl
lds
test
mov
xchg
aaa
leave
fildl
imul
push
jno
xor
xor
mov
popa
roll
fstpl
adc
cmp
dec
mov
add
dec
cmp
mov
test
in
push
xchg
sbb
pop
leave
aad
in
adc
mov
stc
cld
cwtl
mov
stos
lcall
sub
jbe
stos
aam
mov
lret
sbb
negb
pushf
xor
mov
repnz
push
enter
or
xor
daa
add
mov
cmp
and
jecxz
stos
out
xchg
sbb
jns
stos
cwtl
imul
add
js
sub
jo
ljmp
mov
movsb
nop
xor
adc
inc
addr16
shrl
test
clc
mov
lods
jge
fistps
inc
out
mov
xor
sub
mov
cwtl
mov
inc
rclb
cltd
or
inc
ljmp
fistpl
pop
sub
add
icebp
or
stc
outsl
fwait
push
ja
sbb
hlt
jno
mov
mov
fildll
ss
mov
out
add
sbb
add
push
dec
ret
mov
mov
std
test
jl
push
push
ss
jno
ds
pop
inc
pop
mov
jbe
pop
in
xchg
dec
mov
and
stos
fldenv
mov
cmpb
iret
in
out
in
xchg
shrb
clc
or
hlt
into
imulb
mov
xor
jns
xor
dec
pop
adc
ret
movsl
outsl
fwait
insl
push
fsubrs
push
or
xor
or
sti
inc
outsb
cmp
repnz
mov
loopne
testl
or
testl
js
dec
aad
cmp
push
loopne
lods
lds
cwtl
jecxz
je
outsl
es
inc
imul
ja
xchg
pop
or
dec
push
push
imul
lods
ret
jecxz
leave
xchg
neg
xchg
xchg
ficompl
dec
mov
xor
iret
sbb
sub
movsl
or
fs
dec
insl
pop
inc
rcrl
movsl
or
mov
imul
sbb
mov
jle
aad
sub
data16
pop
sbb
cmp
or
nop
sarl
popf
xchg
inc
das
or
push
mov
push
je
clc
and
sub
xchg
sarb
pop
lcall
sub
das
shrb
jo
in
mov
jmp
es
xorb
sub
adc
lods
shll
mov
outsl
or
dec
fnsave
push
cmp
pusha
push
into
push
inc
cmp
mov
adc
mov
flds
imul
sbb
mov
repnz
int
inc
dec
and
mov
mov
pop
in
mov
mov
mov
dec
cmp
cli
jne
imul
mov
out
jg
or
test
xchg
fstl
std
daa
insb
or
pop
push
sbb
or
jl
mov
push
cmpsb
in
sbb
stos
or
mov
imul
mov
repz
push
js
pop
dec
xchg
inc
and
sbb
das
data16
add
leave
or
shll
clc
mov
push
jnp
pop
movsb
lods
adc
out
repz
insl
xchg
in
mov
icebp
mov
es
add
fsub
movsb
jle
loopne
cmc
es
movsb
cmp
aaa
xchg
out
adc
lret
adcl
fisubrl
sbb
enter
cmp
int
xchg
imul
stos
sub
dec
add
push
inc
cltd
push
and
mov
dec
dec
push
ret
or
jno
xor
pop
push
loop
cmp
jbe
adc
adc
mov
lods
rcll
popf
or
insl
shl
dec
les
outsb
mov
incl
popa
loope
ss
mov
or
std
sub
cmp
unpckhps
cs
add
std
xlat
mov
jle
mull
sub
or
dec
mov
xchg
mov
push
dec
ja
sub
mov
ja
mov
bound
mov
jp
or
in
es
mov
stos
mov
rorl
js
mov
sub
jbe
sub
fs
aad
and
xchg
test
insb
lahf
jno
jp
mov
push
push
push
rcrl
xor
ficompl
adc
add
xchg
inc
jg
in
mov
pop
push
cwtl
mov
inc
or
lret
das
scas
loopne
int3
jmp
lcall
lods
daa
pop
mov
mov
cmp
add
adc
and
ja
out
jb
fcompl
pop
cmp
xor
sub
dec
out
fisttpl
xor
xlat
inc
rorb
ror
lock
sbb
sub
mov
es
mov
dec
push
pop
pop
mov
push
pushf
or
das
jbe
xchg
jns
mov
fisubrl
dec
xor
out
ds
scas
test
lock
arpl
in
mov
sbb
mov
out
negb
dec
in
sub
outsb
jb
adcl
xchg
adc
jge
adc
popf
cmp
mov
int
inc
fnsave
mov
imul
mov
shll
cmpb
inc
dec
dec
dec
inc
mov
out
rcl
push
sbb
les
xchg
icebp
es
movsl
xchg
fidivrl
sbb
test
outsb
adc
sub
dec
gs
pop
pop
vcomiss
gs
ret
hlt
xor
out
call
add
cmpsl
lods
movsb
xor
sub
in
aam
lods
sub
lcall
jno
pminub
add
xchg
xchg
rclb
jg
mov
rcr
lock
sbb
out
add
xchg
inc
pop
mov
mov
jbe
or
cmpsb
push
or
inc
sub
add
rcr
incl
and
xchg
lods
movntq
notl
out
stos
adc
inc
fsubrs
jecxz
outsb
ljmp
push
and
outsb
int
out
scas
inc
dec
adc
pop
fwait
pusha
fmul
push
mov
xchg
xlat
jp
sub
lods
bound
push
jns
out
and
shll
bound
jne
mov
cwtl
and
fisubrs
inc
add
push
jno
xor
clc
outsb
add
push
xor
dec
pop
rorl
mov
addr16
xor
in
lret
test
push
add
addl
in
je
adc
xchg
les
xchg
inc
stc
push
push
cli
imul
jg
imul
xor
xlat
sbb
push
sub
dec
pop
mov
popa
xchg
lahf
mov
adc
mov
stc
pop
xchg
xchg
xchg
xchg
sub
popf
mov
clc
push
addb
fiadds
push
add
mov
mov
pop
mov
push
mov
pop
jmp
inc
lds
dec
js
dec
into
or
push
push
ret
ja
ret
arpl
cmc
adc
push
mov
subb
sub
adc
jae
lods
fnstenv
or
cmp
pushf
leave
mov
pop
jecxz
cmp
inc
jbe
mov
mov
daa
fs
ret
imul
pop
mov
push
mov
or
cld
out
mov
jmp
and
int
mov
sahf
faddl
mov
xchg
sti
jns
mov
and
lods
loopne
xchg
jp
mov
outsb
clc
int
insb
inc
insb
cmpsb
in
pop
hlt
cmpsb
sub
mov
lods
fcomps
jle
sbb
mov
ret
jle
lahf
inc
aad
push
mov
push
outsl
add
pop
lahf
mov
sub
cmp
jne
add
js
xchg
lea
dec
xor
mov
cmpb
stc
in
jle
test
lods
mov
daa
fmul
loope
mov
in
xor
mov
call
add
xchg
jle
fisttpl
shll
lahf
mov
xchg
fwait
sbbl
lcall
or
int
mov
cmp
inc
xchg
xchg
sub
aad
pop
and
roll
xchg
outsb
inc
dec
inc
or
mov
mov
bswap
cwtl
outsb
inc
cmp
fsub
jmp
insl
xlat
nop
mov
addr16
jl
pop
daa
cmp
outsl
push
sub
lret
dec
nop
out
mov
or
sub
insl
adc
xor
and
push
es
sar
push
push
xchg
mov
daa
rcrb
adc
shll
push
mov
pop
push
rclb
orl
faddl
test
rol
js
pop
stc
cmpsl
push
sub
jns
sbb
and
sti
jbe
adcb
xor
sti
mov
es
js
sbb
inc
test
push
ds
dec
cmp
in
fisubs
pop
test
dec
push
jmp
cmpl
mov
insl
mov
sub
and
les
jo
cmp
jne
pusha
mov
insl
inc
jmp
or
aaa
pop
push
loopne
fdivrl
scas
mov
xchg
movsl
cwtl
sahf
in
shl
mov
jp
pop
sbb
sub
js
pop
add
pop
mov
inc
xor
jl
sub
loopne
dec
loop
repnz
or
add
insl
mov
pop
mov
and
or
jae
pushf
ret
sbb
stos
pop
xadd
push
shlb
jo
cmpsl
xchg
jns
loope
cmp
int3
aas
lods
jl
mov
inc
sbbl
je
ja
push
xor
add
or
es
loope
addr16
mov
jne
sbb
xlat
mov
push
addr16
push
mov
lret
lret
pop
mov
lret
xor
jno
out
fcoml
fildll
addb
xchg
fisttpll
and
dec
mov
aaa
push
cmp
xchg
mov
das
add
pop
xchg
cmp
push
xchg
dec
je
ds
lods
adc
jno
cmc
xor
icebp
int3
test
mov
aam
dec
push
gs
sub
fiadds
leave
dec
inc
and
pop
sub
iret
ljmp
pop
fstpl
lret
jo
mov
and
movsl
cmpsl
jle
xchg
fsubrl
pop
fsubl
xor
mov
push
rolb
mov
daa
mov
push
xchg
je
fidivrl
jae
aas
pop
fldcw
xchg
and
cmp
fsub
and
arpl
stos
xor
xor
notl
jge
cmp
sub
or
xchg
out
pop
xor
in
push
lea
icebp
jmp
mov
xchg
rcrb
and
negl
stos
lret
aad
mov
lock
adc
cli
adc
mov
arpl
mov
fwait
pop
das
clc
sbb
jbe
lcall
lea
inc
cld
test
les
mov
lcall
add
jno
add
sub
fnstsw
outsl
inc
ja
xchg
jecxz
push
mov
stos
push
movsl
mov
ret
pop
aad
push
push
rcll
out
imul
fcmovu
loop
or
inc
mov
mov
gs
mov
imul
out
xchg
pushf
cltd
outsl
xor
adc
jle
cld
fildll
and
sub
int3
out
jg
mov
sub
mov
es
sub
push
cmp
xor
push
mov
popa
mov
testb
cmp
addr16
jg
and
xadd
add
in
movsb
sbb
fs
sahf
loop
lea
adc
rcl
cld
xchg
mov
pop
popf
mov
and
cmpsb
dec
es
adc
sbb
or
jne
fs
inc
push
dec
fcomp
lret
data16
fsubrl
lds
in
adc
mov
test
and
fidivs
dec
fidivrs
pop
and
loopne
adcl
and
or
jl
lret
sub
imul
adc
dec
movl
out
pop
arpl
adc
mov
nop
push
lods
cld
clc
fstl
or
ret
mov
test
mov
xor
mov
inc
sbb
lock
pop
dec
roll
xchg
push
or
cmp
inc
inc
divl
xchg
add
push
mov
push
inc
imul
dec
add
push
push
enter
lcall
sub
les
movsb
pop
into
pop
out
cli
sbb
inc
push
cmpsb
mov
jg
push
div
dec
cmp
arpl
fcmovu
loope
mov
xchg
daa
ja
pop
or
insb
lods
xchg
lret
inc
mov
xchg
jnp
rcll
or
int3
ret
and
cmp
jb
mov
cmp
and
test
lods
mov
rcll
dec
push
mov
jne
inc
pop
push
aas
cwtl
into
mov
pop
dec
cwtl
and
inc
scas
dec
cmp
insl
iret
lods
jnp
mov
pop
aaa
xor
out
out
fistps
xchg
fbld
data16
stc
nop
scas
imul
push
repz
test
ds
xor
and
daa
fucomip
ds
pop
jge
loop
ret
cmp
call
lret
aaa
fadd
mov
aas
or
mov
push
out
and
dec
shrd
jne
lret
push
cmpl
stos
ljmp
icebp
push
in
les
xchg
sbb
out
mov
loop
inc
fdivs
bound
mov
lea
inc
popf
xchg
dec
cwtl
cld
pop
xchg
bound
fs
add
xor
leave
mov
mov
or
push
lret
repz
inc
cmpsb
pop
jno
cwtl
sbb
pop
inc
add
push
iret
scas
iret
mov
icebp
shrl
push
sub
repnz
cmove
dec
jg
mov
movsb
mov
addr16
std
daa
mov
sahf
sarl
lahf
mov
test
lods
es
sbb
mul
aad
ljmp
scas
sti
sbb
dec
outsb
xor
sbb
jae
cmpsl
aaa
cmc
or
int3
mov
test
and
sbbb
outsl
loopne
aas
cmp
push
mov
in
pop
pop
inc
sbb
dec
add
ror
or
shrb
iret
ss
nop
sti
je
mov
fcmovu
xlat
adc
mov
pop
movsb
mov
ret
add
mov
out
into
pop
ret
or
mov
pop
and
cmp
lret
shlb
or
outsl
xchg
cwtl
mov
mov
int3
jl
int3
mov
jp
push
pop
xchg
xor
and
insl
fcompl
xor
mov
das
iret
xor
hlt
into
nop
cltd
roll
jle
push
mov
sbb
mov
sarb
push
cs
je
jb
mov
mov
insb
push
sub
icebp
dec
jns
lock
push
arpl
enter
mov
outsb
sub
or
adc
int
jle
add
lea
movsl
dec
and
mov
mov
scas
jo
test
add
loopne
into
addr16
scas
je
sub
and
pop
adc
mov
mov
test
sub
adc
mov
dec
hlt
jb
pop
push
popa
mov
ljmp
bound
loope
fcompl
fiadds
mov
mov
movsb
mov
aas
pop
adc
mov
pop
icebp
push
aas
stos
jno
inc
stc
insl
loopne
push
lea
outsb
push
dec
push
out
jne
dec
into
in
lock
js
loope
jbe
sahf
adc
ljmp
jl
dec
fiaddl
cmpsl
fidivrs
pusha
xor
push
jecxz
pop
iret
in
push
jl
insb
mov
fcomps
insb
mov
cmpsb
pop
addl
cmpsb
arpl
fcom
push
aam
enter
dec
popa
in
sbb
sahf
jecxz
mov
mov
add
out
sbb
loope
mov
push
sub
sub
add
add
jno
notl
cmp
xor
lahf
out
inc
xor
add
push
inc
add
std
js
cwtl
jle
fildl
sub
arpl
jp
pusha
add
cmp
push
das
xlat
ds
divb
add
sbb
and
leave
insb
jno
jecxz
sub
jp
cmc
inc
cmc
sub
or
sub
sub
mov
mov
push
jl
inc
cmp
xchg
xor
inc
jne
jae
jecxz
cmpsl
cmp
sbb
inc
imul
jno
shr
lods
xchg
add
scas
int
pop
adc
std
gs
jmp
add
nop
and
lahf
sub
cwtl
mov
cmc
mov
mov
mov
je
sarl
adc
push
or
repz
mov
cmp
popa
mov
inc
outsl
push
ljmp
cltd
push
sub
notb
imul
and
loopne
jle
adc
jp
xchg
and
stc
dec
pop
pop
leave
mov
xchg
or
xchg
lods
imul
push
inc
in
movsb
cltd
and
xor
out
cmc
fidivrl
test
jle
gs
leave
imul
push
adc
lods
dec
inc
pop
cmpsb
pusha
and
jge
pop
mov
pop
insb
mov
pop
adc
dec
fldl
mov
add
in
or
or
xchg
repnz
add
pop
popf
inc
aam
inc
test
or
mov
xchg
ret
xchg
and
or
test
adc
arpl
jno
aad
call
mov
les
push
scas
arpl
sti
pop
lcall
lods
outsb
lods
or
loopne
sbb
popa
out
inc
add
test
adc
inc
mov
push
push
ret
insl
fcoml
ret
inc
jae
jecxz
loopne
icebp
stos
fsubrs
imul
xor
dec
adc
addr16
xlat
jle
xlat
xor
mov
jp
test
ret
dec
fdivs
pop
add
in
mov
adc
outsl
pop
mov
lock
adc
das
cmp
jmp
inc
xchg
les
mul
iret
mov
jb
lods
xchg
cmp
mov
push
sahf
fstpt
hlt
fcomp
xor
test
ja
inc
fidivrl
mov
dec
dec
rcll
inc
in
cwtl
mov
fs
pop
push
cmpsl
enter
cwtl
incl
sahf
fiaddl
jae
sub
pop
push
orb
ret
sub
in
pop
imul
filds
mov
adc
lcall
iret
pop
loope
sbb
and
clc
in
ficompl
pop
inc
sahf
pop
jp
sbbl
icebp
ds
dec
mov
ja
js
in
daa
aas
cli
mov
pop
sub
adc
xor
enter
push
or
es
xor
inc
ret
xor
rclb
mov
mov
or
in
inc
fisttpll
mov
jl
out
ret
scas
sub
and
or
jmp
adc
xchg
flds
sbb
mov
inc
xlat
push
test
and
inc
cmpsb
je
div
and
sbb
xor
into
in
ficoml
and
sti
mov
push
push
cld
add
mov
mov
dec
jecxz
dec
stc
inc
and
lds
inc
les
pusha
and
xchg
mov
pop
negl
pop
push
lock
mov
rorl
mov
xor
dec
push
ja
ss
add
das
xchg
mov
adcb
inc
or
icebp
and
xchg
inc
or
sub
int3
dec
js
pop
jg
movsb
jno
add
cmp
xor
sub
dec
xchg
lcall
lock
mov
jl
lea
mov
adc
pop
mov
or
cmp
fisubs
loop
xor
in
mov
jbe
pushf
xchg
dec
push
in
lahf
data16
lret
cld
inc
xor
or
dec
es
arpl
jecxz
mov
mov
neg
test
movsl
lcall
in
repnz
cmp
addl
cmp
sti
sub
mov
push
fstpl
fdivrs
pop
imul
push
adc
sarb
adcb
movsb
movsb
vmwrite
out
in
or
add
fcomps
ljmp
push
sbb
mov
rorb
mov
xorl
mov
push
pop
fmuls
loope
jbe
outsb
call
mov
pop
pop
enter
adcl
out
xchg
mov
fsub
xor
pusha
inc
sbb
mov
and
jmp
pop
es
loope
aam
mov
inc
cs
cmp
pop
jns
xor
push
aas
dec
hlt
test
call
jg
jge
movsb
imul
cmc
in
mov
or
mov
add
rep
fistps
mov
mov
sbb
mov
cmpsb
add
call
pop
repz
cmp
aad
mov
ret
and
jmp
cld
mov
dec
out
clc
push
mov
sbb
imul
fldcw
fdivrl
cmp
ds
sub
mov
enter
loope
scas
or
jl
dec
push
in
pop
xor
adc
dec
xchg
sbb
add
cmp
cmpsl
sub
jge
mov
in
sbb
inc
arpl
cli
jno
dec
out
aas
and
xchg
insb
rorl
pop
fs
jnp
pop
aas
incb
adc
mov
ljmp
adc
cmpsl
fdiv
sub
inc
add
pop
lods
xor
pusha
imul
lea
ss
sahf
push
arpl
cltd
test
hlt
shrb
mov
lcall
cs
sub
movsl
mov
shll
push
mov
loop
jecxz
xchg
cmc
mov
inc
sbb
sub
pop
xchg
push
daa
pop
xlat
cld
out
xchg
cwtl
sbb
push
xlat
cmp
lret
test
sub
jge
jecxz
mov
sbb
in
or
je
daa
inc
add
inc
mov
xchg
lret
push
mov
das
push
adc
lods
push
sahf
divl
mov
xor
jl
add
add
into
cli
mov
lret
cld
daa
faddl
das
pop
dec
fs
stos
lahf
cmp
call
gs
pusha
pop
lcall
aam
mov
jmp
xchg
pop
lds
mov
sub
mov
lds
push
jg
mov
movsl
sbb
mov
iret
sbb
xchg
cs
divl
jle
sbb
sbb
mov
popa
pop
mov
daa
push
std
out
xchg
loope
aas
pop
daa
std
loop
push
rolb
mov
mov
push
jmp
ja
mov
bound
nop
sbb
pushf
filds
call
ret
jle
fldt
scas
in
dec
add
inc
pop
test
call
idivb
cmc
fsubr
push
inc
fmull
fbld
scas
push
imul
adc
lret
jecxz
cmp
sahf
adc
lret
outsb
out
and
cmpl
push
xorb
test
sbb
jg
int3
sub
mov
push
pop
cmpsl
jns
push
les
lret
push
mov
rcrl
push
filds
inc
xor
cmpsl
sbb
adc
je
out
sub
xor
dec
testl
lds
dec
roll
sbb
cld
pop
mov
jl
jns
imul
pop
push
scas
leave
lea
xor
stos
mov
in
fnstsw
lret
push
jns
dec
or
dec
in
push
and
sub
loop
cwtl
xor
mov
adc
cmp
mov
dec
xor
push
and
fadds
sbb
sub
pop
cmp
test
arpl
daa
arpl
jnp
sub
lods
push
mov
shrl
les
insl
int3
xlat
hlt
add
lahf
mov
loope
inc
gs
add
aad
adc
push
repnz
lcall
mov
negb
mov
sub
cmp
dec
jl
push
lods
adc
lock
mov
cmp
pop
cmpsl
divb
adc
mov
cmpsl
add
mov
cs
jne
cs
in
inc
iret
pusha
mov
out
jns
fiaddl
cmpsl
pop
pop
or
or
dec
mov
cmpsl
aaa
ja
sbb
jbe
add
add
cmpsb
pop
lcall
sti
add
int
pop
jg
aaa
orl
fwait
and
shrl
add
shlb
xor
push
mov
daa
scas
xchg
in
mov
mov
mov
xor
mov
push
dec
ss
lea
sub
mov
ret
mov
fmull
jno
xorb
pusha
mov
jmp
nop
out
aam
sbb
lret
mov
jle
mov
cmpsb
int
mov
sbb
pop
xor
push
cmc
js
inc
cmp
push
push
sbb
cmp
idivb
mov
cs
clc
xor
jbe
cmp
sub
lods
mov
add
or
sbb
fadds
sub
lret
adcl
adc
dec
cmp
push
add
idivl
loope
dec
in
std
and
adc
cmp
rol
jb
scas
shr
jne
mov
add
xchg
cmp
movsl
gs
dec
push
inc
pop
push
call
pop
sbb
std
mov
aaa
adc
cltd
fsubr
jl
js
push
ss
pop
xchg
data16
rolb
ja
out
mov
loop
sbb
and
add
ja
push
inc
mov
inc
shl
out
ss
lcall
das
stc
in
lahf
sti
mov
jo
xchg
mov
decl
ret
cmc
cmp
mov
add
out
xlat
push
fsubrl
je
pop
adc
mov
icebp
mov
cwtl
imul
cmpsl
add
cmp
lods
push
out
mov
push
sbb
jne
cmpl
jns
sbb
dec
adc
in
data16
cmp
rcl
arpl
dec
inc
jle
cmpsl
adc
dec
xchg
aam
dec
cmp
sub
test
xchg
mov
cmp
sbb
fbld
inc
imul
xor
in
inc
into
mov
dec
test
xor
xor
mov
inc
shr
movb
xchg
jb
mov
aam
mov
sub
jg
lret
es
stc
repnz
sbb
xor
cs
aaa
je
push
lret
adc
and
adc
jge
lds
xor
call
xor
and
lods
dec
mov
mov
dec
loopne
jnp
or
jb
push
fsubr
dec
jbe,pt
jb
fcmovnb
mov
mov
adc
xchg
add
pop
cld
xorl
std
arpl
insb
xor
pop
ret
xor
sbb
xchg
ja
jo
mov
fdivp
sbb
rorl
je
clc
sub
jo
data16
dec
mull
mov
adc
mov
pop
sbb
mov
sbb
les
loope
fcompl
cmc
cli
mov
in
stc
sub
mov
call
mov
sbb
inc
pop
sbb
fs
mov
push
and
fwait
or
bnd
sub
jnp
orb
and
jp
push
mov
mov
xor
lods
into
add
push
and
mov
mov
xchg
mov
enter
xchg
ja
loop
sbb
out
pushf
decl
call
sub
adc
aad
lds
or
adc
roll
icebp
pop
add
hlt
in
sub
cs
scas
lret
jge
aas
mov
sub
fs
push
rcll
push
mov
loope
xor
scas
mov
pushf
push
xor
jno
cmp
inc
data16
in
js
adc
dec
xchg
xchg
stc
cs
and
lds
aad
iret
dec
push
xor
int3
inc
and
xchg
mov
dec
jl
in
inc
mov
mov
add
pop
push
test
dec
cmpsl
popf
xor
jp
out
fwait
dec
xor
sbb
push
arpl
test
push
xor
xchg
mov
sbb
rorl
add
inc
gs
dec
dec
pop
mov
xchg
cld
xchg
in
cli
lds
mov
jbe
add
nop
mov
xor
xchg
push
inc
jle
sub
ja
ffree
mov
and
push
imul
rolb
or
data16
xchg
add
insl
jb
push
mov
fisttps
mov
and
in
pushf
mov
aaa
cs
mov
pop
mov
sub
jb
mov
in
xchg
inc
repz
mov
testb
je
push
popa
inc
push
rorl
outsl
inc
xor
icebp
push
xor
inc
stc
inc
fistpll
sti
movsb
fcmove
xchg
test
in
mov
xchg
xchg
jmp
add
xchg
fiadds
mov
das
adc
xchg
outsl
dec
loop
insl
in
cmpsl
call
sbb
xor
or
mov
aas
lock
mov
add
in
cmovs
out
popw
mov
sahf
adc
test
popf
es
mov
fsub
fdivl
jb
adc
inc
xor
mov
loopne
lock
sub
dec
push
and
pusha
movsb
mov
outsb
repnz
lcall
push
mov
mov
inc
xchg
out
dec
lret
ficomps
jo
hlt
cmp
rolb
jecxz
push
xchg
mov
cld
push
mov
movsl
or
cs
lea
cmpsl
fsubrl
mov
lea
xchg
xor
mov
lods
popa
jp,pt
js
out
push
dec
js
shl
insb
ja
adc
sbb
test
cmp
or
sar
cmpsb
scas
add
and
sbb
inc
cs
fildl
mov
subl
test
repz
pusha
or
test
scas
cli
das
imul
movsl
and
and
je
push
inc
test
pop
and
in
mov
or
cs
mov
cltd
addb
and
jbe
pop
xchg
cmc
js
jmp
dec
test
or
mov
aaa
push
mov
dec
mov
xor
fcoml
sub
jecxz
ficomps
lock
or
pop
dec
jno
mov
jo
mov
cmpsb
push
mov
loopne
mov
bound
mov
adc
inc
or
mov
test
mov
or
insb
loopne
data16
and
inc
cmc
lock
jne
pop
dec
shl
cmp
sbb
enter
sbb
lret
aas
ror
mov
sub
sbb
sub
add
push
jns
shlb
jno
test
vpinsrw
push
dec
fcoms
mov
xchg
xor
in
fldt
dec
icebp
jne
je
push
or
xlat
dec
mov
pop
arpl
test
je
cmp
out
add
call
xchg
fwait
pusha
add
mov
inc
aam
xorl
pop
and
insl
mov
out
push
insb
pop
mov
cmp
jnp
fstp
imul
push
cmpsl
cmp
add
add
cltd
jecxz
dec
pop
inc
push
pop
scas
pop
jo
in
inc
jns
shl
inc
or
cmp
cmovs
pmaxub
inc
addb
or
push
cmp
adcl
mov
incb
repz
sbb
pop
mov
xchg
xor
pop
loope
xchg
cmp
aas
iret
fldl
gs
lcall
cmovg
shrl
int3
cmp
loope
mov
jnp
and
fwait
mov
pop
xorb
bound
and
inc
sub
adc
xor
in
push
pop
xor
out
out
xchg
rclb
xchg
cmp
mov
popl
pop
cli
mov
cmp
mov
dec
fdivrl
xor
pop
sbb
xor
test
ret
xchg
loopne
pop
push
pop
inc
es
int3
cmp
mov
aam
dec
jmp
xchg
shrl
mov
in
sub
fistps
xor
or
jle
hlt
adc
pop
aam
lret
or
test
cs
inc
repnz
test
xchg
xor
in
jecxz
xor
and
jle
adc
push
mov
dec
mov
nop
push
cltd
pusha
daa
stc
and
mov
stos
sbb
cli
push
jnp
imul
aad
mov
inc
add
popa
stc
inc
fdivrl
mov
dec
jecxz
or
mov
sbbb
and
add
or
fwait
mov
xchg
sbb
add
cmp
push
xor
jbe
pop
cmp
and
pop
xchg
outsb
in
mov
out
jecxz
out
jo
icebp
dec
jnp
imulb
adc
jl
dec
pop
dec
mov
in
xor
mov
fbstp
dec
dec
orb
push
or
inc
out
adc
add
rcrl
repz
cmp
divl
xor
fldl
ja
inc
dec
insb
nop
cmp
movq
add
enter
les
xchg
adc
loopne
das
popf
sub
mov
js
and
lahf
clc
sbb
pop
ljmp
push
bound
sar
or
fiadds
movsb
mov
push
sbbl
and
and
mov
lods
jae
jae
adc
mov
stos
push
sbb
or
xchg
inc
repnz
mov
sbb
sub
dec
lds
test
mov
cmc
ljmp
adc
repnz
les
xchg
ret
dec
fwait
jne
pop
insl
shrl
xchg
sub
mov
ds
js
in
outsl
fiadds
ljmp
sub
out
xor
mov
lds
outsl
stos
xchg
shll
adc
mov
cmp
xchg
fsubs
out
out
mov
test
mov
pop
lahf
inc
jns
pusha
xchg
cmp
xor
and
pop
out
dec
cltd
fs
inc
add
cmc
mov
xor
bound
jp
ret
outsl
pop
mov
mov
gs
test
sbb
lods
cmp
es
push
loop
cs
outsb
insl
mov
jl
es
jg
sub
xor
cmove
adc
push
cmp
stos
arpl
addb
sub
xor
xchg
mov
ret
push
jnp
sbb
rcrl
clc
jne
lret
scas
mov
sbb
cld
push
jge
ss
jge
xchg
sub
xor
mov
test
lea
mov
pushf
jge
out
dec
cmc
sub
sub
mov
icebp
and
aas
loopne
gs
inc
cmpsl
push
jne
pop
test
xor
inc
inc
lret
add
arpl
das
cmp
sub
sub
cmp
sbb
test
jp
call
insb
cmp
xor
sti
shlb
or
sub
cmp
sub
inc
add
inc
mov
testl
cmp
pushf
icebp
popf
adc
lods
insl
lods
lds
push
adc
jnp
push
test
xchg
fcomps
int
cld
push
adcl
insb
jecxz
xor
scas
xchg
aaa
pushf
fs
dec
mov
add
push
pop
jae
push
adc
out
testb
repz
inc
or
inc
mov
xor
mov
arpl
inc
push
daa
sub
insl
outsb
sub
jo
xchg
outsb
mov
mov
sbb
ret
jb
or
aad
call
xchg
jo
lods
test
imul
and
dec
ret
out
gs
push
sbb
jmp
push
cmp
das
lcall
cld
aam
xor
mov
cmp
or
dec
test
aas
in
sbb
xor
rep
mov
hlt
mov
mov
roll
xchg
aas
xchg
pop
cmp
pop
lods
inc
push
mov
jno
xor
std
inc
cmpl
mov
jbe
jp
loopne
mov
cwtl
das
leave
mov
mov
data16
xchg
int
addb
and
xchg
add
addb
lds
xchg
and
movsl
lret
xchg
dec
and
jmp
int
daa
pusha
dec
cltd
pop
pop
jnp
xlat
lds
cmpsl
lret
mov
pop
int3
inc
jb
call
testl
stos
xchg
fmuls
xlat
outsl
jecxz
jns
movb
xor
and
shl
cmc
and
call
xchg
mov
inc
mov
adc
jne
ret
stc
int
lret
bound
mov
cwtl
clc
mov
mov
adc
aam
out
push
mov
sub
dec
push
ficomps
mov
rol
and
dec
call
cmp
ljmp
mov
push
out
cmc
sbb
arpl
stc
sub
popa
scas
mov
or
xlat
jno
enter
pop
ja
dec
xchg
pop
jp
add
add
fisubs
or
sub
cmp
pushf
add
mov
hlt
xchg
cmc
int
les
sbb
dec
mov
fwait
rorb
ret
xchg
xchg
sbb
mov
xchg
out
xor
aam
lret
xchg
stos
mov
jecxz
jmp
dec
loop
arpl
cmp
out
jle
std
imul
shrb
and
jge
daa
jmp
xchg
iret
pop
pop
mov
aaa
push
das
add
stc
rorl
adc
push
adc
mov
sub
hlt
test
pop
and
mov
lods
test
cmp
fstpt
arpl
jne
addl
lret
jmp
mov
in
movsb
pop
outsb
xchg
dec
pop
push
sub
lret
in
cld
sbb
in
call
adc
insb
sbb
push
inc
mov
add
add
pop
or
clc
pusha
ret
fwait
dec
shrl
arpl
fsubr
push
push
pop
fimuls
push
add
andb
mov
sbb
lret
lds
sti
lcall
incb
dec
mov
into
js
cltd
xor
lock
xchg
fwait
pusha
pop
je
shr
pushl
and
stc
arpl
add
xor
sub
call
push
addr16
adc
dec
gs
out
xchg
sbb
sahf
push
das
addr16
cmpsl
call
dec
mov
adc
mov
enter
aaa
fmull
test
sbb
fsubrp
add
fnstsw
aas
int
cmp
adc
dec
punpckhbw
mov
inc
adc
arpl
dec
std
les
and
lahf
out
pop
add
adc
jnp
je
xchg
shrl
push
xchg
dec
inc
dec
push
sbb
jmp
shrl
xchg
push
repnz
shlb
inc
arpl
xor
xlat
or
pop
lcall
jne
es
jle
and
jp
loope
sub
push
test
pop
hlt
addr16
fbstp
push
insl
popf
mov
cmp
dec
repz
lahf
mov
bnd
stos
into
cmc
mov
and
sub
seta
jns
jns
stos
std
imul
in
dec
cmp
push
outsb
mov
push
pushf
ljmp
dec
outsb
xchg
push
js
xchg
xor
aaa
cmp
xchg
mov
je
les
in
pop
daa
push
out
dec
mov
dec
mov
mov
aaa
in
stos
jl
inc
mov
push
mov
in
outsl
sbb
pop
mov
lods
or
cmp
and
call
in
push
dec
mov
sti
enter
inc
cs
ret
inc
ds
dec
pop
jge,pn
fcom
pop
icebp
mov
imul
fadd
add
pop
scas
mov
add
cmpsl
sbb
push
or
dec
mov
mov
out
bound
mov
jge
add
cwtl
dec
mov
xchg
fbstp
sbb
addr16
out
arpl
ljmp
mov
lods
add
xchg
fiaddl
out
add
jg
dec
lods
mov
jg
jnp
clc
push
pop
mov
daa
inc
mov
movsb
loope
fcoms
mov
int3
push
jmp
sahf
and
imul
lea
popl
xlat
mov
leave
sbb
lea
push
lock
out
xchg
int
xchg
das
or
mov
cmpl
into
scas
popa
dec
lret
loop
ret
ror
inc
nop
inc
inc
mov
into
mov
aas
mov
inc
push
push
cmp
roll
fistps
jp
adcl
inc
mov
mov
testb
rcll
cmp
pop
mov
sub
test
into
daa
sbb
xor
sub
scas
mov
out
dec
push
jl
push
jl
das
int3
stc
mov
sbb
add
dec
mov
xchg
orl
mov
int
dec
inc
inc
mov
sub
clc
cmp
adc
loopne
dec
nop
aas
shlb
adc
subb
push
int
sub
ja
cmp
repz
loopne
jne
cwtl
xchg
ret
xor
and
add
dec
adc
lret
fisubrl
cltd
jg
js
pop
cmpsl
pop
mov
jecxz
imul
dec
fmul
and
stos
outsl
scas
daa
fistpll
mov
or
cmp
test
dec
iret
pop
movsl
jp
xchg
mov
sub
call
shlb
cmp
push
push
mov
loop
test
frstor
dec
xor
push
add
add
lds
add
lods
lea
sbb
xchg
fisubs
int3
sub
push
insb
mov
mov
sbb
mov
sbb
test
ja
addr16
negl
xor
insl
adc
mov
fsubrs
punpckldq
sub
dec
dec
mov
mov
jecxz
nop
jne
rolb
dec
push
jb
test
not
out
ljmp
sarl
push
xor
pop
and
out
mov
cmp
lea
and
fsubs
lods
pop
outsb
sti
cmp
or
shrb
mov
cs
mov
inc
orb
lea
adc
jb
adc
clc
lods
jae
adc
xchg
jns
push
lds
push
jne
arpl
xlat
pop
and
adc
dec
cmp
xchg
xor
xor
pop
sar
xorb
imul
rcrb
aam
negl
mov
rcrl
add
mov
mov
insl
cmpsb
int3
dec
mov
fstp
repnz
mov
loopne
and
mov
jmp
fwait
pop
test
dec
das
xchg
and
push
push
filds
dec
pop
or
popf
movsl
frstor
test
adc
sbb
sub
jecxz
cmpsl
pop
mov
sahf
cli
imul
jl
loop
push
pop
into
jl
pop
sbb
test
icebp
aad
xchg
inc
loop
into
int3
outsb
push
es
stos
popa
push
sbb
repnz
fisubrs
sbb
jae
sub
push
push
and
imul
das
jle
xor
lods
cmp
adc
cld
xchg
fcoml
cmc
jo
jb
cmpsl
clc
adc
negl
subb
imul
add
cwtl
xrelease
hlt
ss
add
pop
and
jecxz
gs
hlt
pop
outsb
adc
add
pop
cwtl
fadd
xchg
imul
loope
dec
arpl
sub
push
test
pop
lds
movsb
pop
ficoms
cli
pop
cltd
test
shll
sub
jmp
or
and
nop
dec
ja
xor
sub
out
jmp
xchg
lock
cmp
or
push
sbb
lock
mov
cmp
jb
hlt
and
aas
repnz
shl
icebp
mov
lds
stos
cmp
jne
sbb
jg
es
sub
pusha
cmc
lahf
push
inc
aas
outsl
xchg
dec
pop
fstps
xchg
jo
xchg
sub
pop
ficomps
xor
jmp
and
sub
dec
pop
cmp
mov
popa
push
fstps
sub
ds
adcl
adc
push
fwait
mov
stos
add
or
and
sub
pop
push
or
std
push
or
test
pop
or
jecxz
sarb
test
cltd
xchg
in
je
cwtl
sub
arpl
fstps
icebp
push
sub
or
shl
adc
outsb
push
jno
fwait
dec
sub
fwait
int3
push
xlat
pop
xor
push
insl
sbb
xor
or
inc
inc
mov
mov
std
mov
mov
fcomi
insl
sti
into
lahf
cli
pop
mov
mov
lds
push
stc
jnp
sbb
insl
dec
std
jbe
mov
das
xor
sti
inc
and
in
mov
mov
mov
fidivs
jge
cmp
out
sti
jo
frstor
out
movsb
sbb
data16
pop
pop
sub
sbb
cmpsl
stos
mov
popa
test
or
repz
mov
push
out
jp
stos
xchg
rcll
mov
dec
sbb
ficoml
push
out
lret
je
jne
xlat
test
inc
jmp
leave
test
test
cmp
leave
inc
lods
lahf
pop
inc
adc
icebp
add
cs
cmp
inc
mov
das
repz
mov
pushf
shrb
outsl
or
mov
shlb
ss
inc
leave
push
in
xchg
xchg
popa
out
or
lea
xchg
jns
pop
in
fnstcw
ffreep
leave
pop
dec
inc
mov
scas
andl
dec
inc
arpl
inc
jbe
enter
cwtl
cmp
add
mov
jne
bound
push
int3
fidivrs
lea
push
shll
test
cltd
pop
xchg
pop
cmpsl
ljmp
daa
push
rcl
into
adc
dec
adc
push
xchg
int
call
mov
pushl
jne
push
dec
mov
arpl
mov
call
es
sti
dec
pushw
add
and
inc
jnp
test
mov
sbbl
addr16
jmp
adc
add
leave
scas
ljmp
push
out
dec
mov
lahf
adc
jmp
inc
pop
fucom
out
les
out
inc
mov
lcall
out
ljmp
mov
fistps
aam
outsb
ja
xchg
push
mov
out
mov
push
testl
out
xor
dec
cmpsb
sbb
adc
pop
xchg
ja
test
adc
aaa
cmpsb
and
pop
iret
in
stos
loopne
push
push
push
ret
insl
or
fwait
xchg
adc
lock
pop
pusha
aam
sub
pop
lahf
add
lock
dec
addr16
lock
das
dec
add
push
cmp
sub
xlat
mov
sti
xor
fistl
fs
nop
mov
mov
jg
push
outsl
sub
add
cmp
mov
in
ljmp
jp
fildl
sbb
ds
xchg
add
or
lock
mov
cwtl
adc
fisttpll
pop
sub
mov
sbb
ss
fldcw
sub
and
lcall
dec
insb
xchg
aad
and
shlb
gs
push
je
xchg
push
and
push
xor
pop
cmp
sbb
in
movsb
das
push
mov
dec
ret
xcrypt-ofb
cmpsl
in
fstpt
adc
xor
pop
mov
jno
imull
sti
movl
add
test
loopne
fmuls
inc
mov
gs
xchg
jg
je
and
push
jnp
xchg
mov
pop
pop
in
gs
jne
cmc
cmp
adc
in
iret
std
xor
adc
mov
inc
sahf
dec
cmpsb
cmp
mov
dec
subb
cmp
lret
fmull
inc
sbb
cmp
out
mov
lds
xchg
call
push
mov
dec
dec
push
loope
or
loope
xor
jae
add
cmpsb
addr16
lahf
cld
adc
xchg
and
call
outsb
add
jmp
loope
push
and
adc
mov
outsl
and
sbb
xor
ds
cmp
imul
aaa
int3
or
lahf
pop
pop
cltd
pusha
movsl
in
test
aad
push
or
mov
mov
cltd
dec
push
outsl
fcompl
cs
add
stc
sbb
in
xor
dec
scas
adc
sub
mov
stos
cwtl
cmp
pop
mov
cmpb
xor
das
fadd
roll
aad
sub
dec
lds
enter
xchg
xor
scas
sub
pop
jge
and
aas
cbtw
dec
pop
cmc
adc
mov
push
adc
add
nop
fcoms
fwait
cmp
int
out
xor
daa
jle
mov
sbb
dec
shrl
xchg
cmp
cmp
pop
xlat
adc
aaa
push
stc
mov
push
dec
cmp
mov
test
jo
push
jb
nop
dec
mov
repnz
xchg
jo
mov
scas
std
xchg
icebp
test
pop
mulb
daa
mov
es
cli
iret
fs
pop
pop
out
leave
negl
outsl
lock
and
sub
movsl
test
sub
pusha
sarb
pop
fsubrp
in
push
xchg
mov
cmp
fnstcw
clc
and
dec
inc
lcall
mov
xor
sbb
adc
pusha
movsl
roll
popf
sbb
push
movsl
and
clc
popa
and
xor
imull
and
push
mov
adc
cmp
testl
into
jp
stos
pushf
inc
subb
sub
into
imul
push
add
cmp
sub
imul
lcall
movsl
cmpb
adc
adc
xor
xchg
mov
and
push
scas
xor
sti
dec
mov
das
push
xor
lods
lods
dec
js
or
mov
mov
mov
addr16
lds
add
push
xchg
push
xor
push
lods
out
or
popa
rclb
lcall
dec
popf
xchg
fistpl
imul
rcrl
ljmp
sbb
or
int
rcll
fnsave
iret
push
shr
xchg
pop
outsb
and
pop
enter
mov
ss
mov
es
sub
mov
xchg
add
imul
mov
xor
in
mov
inc
lcall
lret
dec
js
fisubrs
icebp
jne
add
mov
lret
sahf
mov
sub
xchg
xchg
lahf
movsb
push
lods
hlt
flds
popa
outsb
jns
rorl
negl
inc
cmp
xor
sbb
sbb
pop
mov
xchg
jns
loope
adc
out
mov
out
mov
fadds
jp
lods
stos
cli
stc
xor
cmp
loope
mov
xchg
pop
imul
jl
sub
repz
add
adc
enter
adc
mov
stos
inc
cmovae
imul
push
push
sub
popa
out
and
push
outsb
loope
xchg
bound
add
mov
sub
cmovne
or
inc
inc
pop
fisttpll
cmp
stos
fcompp
and
xor
xor
mov
fs
pusha
mov
dec
inc
nop
and
loopne
xor
test
jp
jae
inc
push
mov
orb
fwait
nop
mov
mov
xchg
sbb
push
rcrl
mov
push
adc
dec
push
cmp
out
stos
cs
push
sbb
clc
ror
cmc
sub
leave
icebp
test
lods
xor
adc
stos
add
ret
icebp
inc
add
ss
fldcw
cs
aas
cs
jns
add
push
sub
xor
and
daa
dec
push
jbe
fstpt
jns
fnsave
adc
sti
movsb
inc
into
jae
rolb
or
cmp
cli
repnz
jb
cmp
dec
lods
mov
xchg
into
dec
lea
mov
cltd
out
push
or
sbb
pop
out
ljmp
and
xchg
int
sbb
sub
jo
xchg
popf
and
jmp
stc
mov
add
or
pop
jae
out
ljmp
inc
mov
lock
iret
sub
push
adc
cmp
ret
dec
dec
push
fdivrp
and
insl
mov
fisttpll
ret
push
mov
ljmp
fdivr
mov
pop
dec
fmull
insb
lock
mov
and
sti
pop
lods
add
xor
mov
pop
test
shl
mov
fbstp
cmpsb
faddl
sti
xor
add
cmp
ret
jae
xchg
ss
addb
xchg
cwtl
pushl
mov
pop
pop
outsb
stos
cmp
xor
nop
lods
xor
mov
inc
imull
jns
out
jle
dec
push
lcall
adc
mov
mov
mov
ljmp
ds
add
scas
sbb
push
and
addb
and
or
xchg
jmp
lcall
enter
scas
pusha
repz
call
jnp
jae
jl
shll
jmp
and
les
push
ds
sbb
in
pop
push
cli
bound
mov
sub
dec
aaa
push
sbb
pop
pop
popf
xor
call
push
rcrb
out
and
add
testb
ss
xchg
jl
in
jl
js
jo
sub
orb
pop
je
lret
mov
xchg
outsb
mov
int
or
mov
jl
jo
push
jne
fiaddl
push
in
movsl
lds
inc
pop
js
movsl
dec
in
cmp
jle
and
aaa
add
shlb
insl
dec
jp
movsl
leave
and
jmp
jnp
push
lret
sbb
in
insb
rcrb
cmp
jns
adc
cmp
dec
lea
add
push
leave
pop
jb
sti
jg
cmpsl
mov
and
enter
fmuls
stc
shll
pop
nop
cmpsb
cmp
loope
cmpsl
jno
cmp
pop
dec
cld
shrl
adc
mov
scas
sub
sarb
pop
pop
in
push
ret
insl
push
int3
cltd
fidivrs
adc
std
pop
movsb
lahf
icebp
rolb
jge
push
nop
jne
xchg
and
sar
mov
push
sar
fsubrl
clc
fnstcw
inc
sbb
dec
pop
inc
mov
std
ret
dec
push
ret
pop
fildll
inc
jl
icebp
adc
jo
mov
and
mov
data16
push
mov
ja
out
mov
push
ret
adc
pop
sbb
xchg
test
jb
mov
lods
xor
fstps
xor
bound
into
xchg
dec
mov
mov
adc
repnz
ror
inc
dec
sbb
nop
push
inc
aas
sbb
push
sub
sub
outsb
add
shlb
inc
jb
xor
add
out
xchg
add
jl
mov
jecxz
inc
and
inc
sbbb
or
test
dec
bound
pop
jl
dec
sub
sub
into
scas
xchg
orl
or
xor
fcomps
das
jg
popf
push
js
imul
sub
and
pop
push
addr16
inc
or
sub
mov
or
insl
call
and
pop
test
mov
jae
repz
in
add
xchg
dec
jle
repz
jle
xor
pop
jo
xchg
ja
fiaddl
lds
dec
add
cltd
popa
repnz
push
mov
je
mov
cmpsb
test
inc
pop
jecxz
xchg
xor
xchg
or
adc
lcall
lds
sti
jns
push
sub
iret
push
lods
enter
rol
mov
mov
sub
sahf
je
je
jecxz
mov
cmpsb
addr16
cmp
mov
test
or
notl
adc
dec
pop
cmpsb
push
pop
push
jo
fsubs
xchg
data16
iret
mov
push
loopne
in
and
and
fisttpll
aad
ret
test
xchg
xchg
lret
loopne
mov
xor
pop
mov
add
loope
jbe
fnstsw
jl
ljmp
or
hlt
push
push
jmp
mov
or
pop
cmpsb
lahf
out
xor
push
jge
push
push
das
xor
jmp
cs
dec
rol
inc
aas
add
ds
mov
test
andb
nop
inc
mov
decl
out
std
clc
cltd
mov
jno
push
push
sbb
inc
std
mov
or
into
jbe
xchg
jmp
rcr
xchg
cmc
ret
data16
inc
divb
mov
jbe
mov
mov
or
stc
mov
pop
cmp
imull
xorl
aas
jecxz
rcr
movsl
stos
cmp
outsb
lcall
cmp
push
pop
or
repz
add
rcrl
lcall
push
jb
sbb
or
loop
lea
sub
jns
cmp
sub
inc
adc
pushf
ret
push
stos
adc
in
in
in
scas
stc
imul
testl
inc
scas
pop
mov
pop
dec
ret
add
imul
xchg
pop
xor
sbb
lret
jp
fnsave
icebp
repnz
xchg
mov
push
pop
stos
fdivs
jb
lods
lahf
dec
insl
inc
daa
outsl
loop
pop
dec
sbb
push
test
and
mov
jp
out
mov
sub
decb
stc
lcall
xchg
xchg
or
inc
jb
aaa
push
lods
mov
pop
mov
push
xor
mov
repz
scas
jg
xchg
icebp
sbb
aas
or
mov
push
mov
cmpsb
push
dec
lea
xchg
xor
sub
int3
arpl
scas
mov
arpl
mov
mov
mov
lret
push
stc
je
and
std
mov
jg
rcl
pop
lods
scas
pop
std
dec
xlat
adc
dec
dec
xchg
mov
aam
pushf
jns
pop
addr16
mov
sbb
cmp
dec
pushf
sbb
xor
xchg
pop
jle
xchg
not
shlb
cmp
dec
enter
mov
mov
xorb
pop
xchg
sub
pushf
fs
pop
xchg
mov
nop
mov
ret
mov
sub
mov
mov
sub
scas
lret
adc
sbb
jecxz
xlat
push
cmp
inc
or
or
pmaxsw
add
loope
push
imul
sub
and
sbb
adc
fdiv
dec
mov
mov
xchg
orps
cmp
mov
fnstenv
sbb
jb
dec
stos
and
setg
out
sbb
adc
push
pop
aam
inc
scas
hlt
sub
jmp
push
inc
or
jne
scas
orb
push
lahf
jo
mov
mov
fistpl
and
or
sbb
xor
out
push
jmp
and
lcall
and
dec
or
lret
mov
fists
or
cmp
mov
cmpsl
dec
repz
sub
mov
jl
cmp
mov
arpl
mov
cld
xor
sub
push
dec
inc
je
add
adc
ss
test
xchg
sub
xchg
lds
sub
or
or
adc
inc
add
inc
out
adc
push
jno
add
sbb
imul
call
sub
cwtl
sub
mov
jmp
mov
and
jbe
and
and
cltd
jnp
cmpsb
push
cmp
imul
jbe
popf
int
jle
dec
inc
lock
jne
andb
decl
pop
mov
test
shlb
add
fisttps
xor
in
ljmp
xchg
jae
mov
mov
fldl
test
les
xor
sub
or
frstor
xor
lcall
rcll
data16
push
mov
or
xor
push
sahf
out
mov
sti
sub
cmc
int3
je
shl
cmp
pop
fwait
cmpsl
fdivrs
mov
fucomi
mov
aam
leave
sbb
pop
js
jmp
push
mov
xchg
in
inc
inc
ret
jno
inc
into
or
pop
es
jno
mov
test
push
vmwrite
sbb
mov
dec
pop
mov
or
pop
loopne
fldenv
aaa
int3
lock
ds
ret
push
and
cmp
inc
call
add
repz
adc
and
mov
mov
lock
xchg
xor
jmp
sbb
dec
adc
or
add
sub
ret
adc
stc
xor
in
push
add
xor
or
mov
add
loop
fsubrl
icebp
sahf
xlat
notl
inc
inc
mov
push
mov
insb
ret
sbb
mov
mov
dec
mov
and
stc
lds
pop
xor
test
iret
cmc
stos
dec
mov
add
ljmp
rorb
sbb
int3
mov
inc
mov
jp
sahf
mov
in
cmc
repnz
out
loope
test
inc
outsl
sub
sbb
cli
dec
mov
adc
into
cmp
repz
into
jbe
mov
repnz
lret
xchg
push
ss
scas
int
int
pop
sub
gs
test
sbbb
popf
mov
rclb
clc
je
mov
in
push
adc
negl
loopne
add
mov
cmp
xchg
test
push
mov
xor
mov
mov
ljmp
cmpsb
dec
imul
mov
xor
jbe
mov
int3
add
jo
mov
push
bound
push
xor
mov
mov
jns
aas
sub
sbb
inc
rcrl
mov
fsubrl
movsb
lahf
popf
cmpsl
imul
pop
mov
mov
je
jmp
loop
scas
xchg
test
les
cmp
sbb
fdivrp
lcall
clc
push
ljmp
ljmp
mov
xchg
jne
xchg
xorl
push
cmp
fidivrs
mov
inc
mov
cwtl
mov
clc
sbb
fsubrl
dec
outsb
push
adc
fldt
insl
or
ja
int3
popa
stos
lods
pusha
std
cmp
in
cmc
out
mov
jle
dec
test
stos
pushf
les
pop
leave
dec
testb
rorl
scas
pop
mov
imul
sbb
rcr
lret
push
jge
push
cld
movsb
xchg
aam
cmp
inc
stos
cwtl
push
jge
js
sub
orb
push
inc
dec
lods
sub
je
add
repnz
idivl
cmp
adc
in
cmp
or
dec
dec
xchg
pop
aaa
ficoml
jle
dec
xchg
ret
lret
adcb
pop
push
sub
adc
and
cmp
outsb
in
and
inc
fldenv
and
fwait
mov
lea
popa
shrb
cmp
in
xchg
rcrb
stos
cmpsb
pusha
jnp
add
inc
dec
stc
out
outsb
cmpsl
xlat
pop
ret
ljmp
xchg
movsb
jb
mov
push
jl
jbe
ljmp
test
push
outsl
pop
xchg
add
mov
xchg
xchg
cmp
mov
or
cmp
adc
and
inc
lcall
in
mov
mov
out
cmp
cli
xchg
xchg
inc
popa
xor
movsb
mov
pop
adc
mov
pop
dec
notl
xlat
jmp
les
xchg
cs
data16
scas
sahf
xchg
test
ss
inc
add
movsl
lret
out
gs
in
pop
call
xchg
xchg
fnsave
inc
sbb
movsl
dec
adc
scas
fs
mull
xchg
loopne
repnz
lea
adc
dec
jge
jle
adc
push
in
ljmp
adcl
rclb
jns
daa
add
imul
push
pop
jp
add
adc
jae
sarl
and
dec
je
in
in
lcall
lds
lods
iret
int3
es
in
stos
pop
inc
nop
sahf
adc
fsubl
pushf
es
fldz
dec
push
iret
mov
inc
out
dec
pop
cli
dec
xlat
mov
adc
shr
pop
in
xchg
fsubp
add
pop
clc
push
mov
push
ror
cs
push
or
xchg
fnstenv
repnz
xchg
jae
insb
jle
push
xchg
loop
xor
les
jne
mov
mov
lock
cltd
mov
sub
andps
sbbb
mul
adc
pop
je
xor
mov
je
mov
pusha
pop
mov
xchg
outsl
in
adc
ret
fs
jmp
shll
lods
pop
push
in
push
lds
jecxz
iret
push
adc
mov
pop
xor
leave
shlb
stos
mov
pusha
add
add
movsb
push
stos
insb
fildll
pop
sub
xchg
arpl
xchg
or
mov
jge
or
and
mov
shrl
add
jp,pn
dec
inc
add
cmp
sbbb
int3
push
and
imul
push
stos
cmp
lret
lea
jno
mov
jg
ret
and
sub
pop
call
pushf
movsb
dec
mov
fwait
mov
jg
lret
mov
das
jmp
sahf
sub
push
inc
sbb
cmc
xorb
out
sti
jbe
push
xor
les
xor
mov
mov
cld
push
mov
bound
fisubrl
repnz
xor
cmpsb
cld
adc
sub
call
or
jns
sub
sti
stos
ja
adcb
push
push
mov
stos
scas
mov
jl
or
jne
mov
popa
div
jo
sbb
pop
ds
or
lcall
ret
push
mov
movsb
repnz
jno
cmpsb
push
lret
ficoml
push
mov
dec
inc
std
mov
or
das
adc
std
imul
outsb
je
fsubrl
nop
scas
push
push
or
ds
test
xchg
xor
add
das
clc
xchg
or
sub
in
movsb
or
imul
stos
pop
gs
jno
lock
ret
mov
pop
lret
add
idiv
pop
clc
jbe
cs
out
sbb
mov
xor
jo
clc
lcall
int
scas
imul
imul
xchg
add
mov
lods
mov
sbb
insb
mov
fsubp
mov
es
sbb
pop
push
addr16
cmp
out
dec
movsb
test
movsb
imul
imul
fisubl
stc
inc
movsb
fmul
adc
jno
inc
xor
enter
add
nop
mov
cmp
mov
lcall
add
xor
aaa
sub
movsl
outsl
sub
pop
add
lcall
dec
add
pop
sub
cmp
xchg
shrb
dec
push
and
popf
mov
sbb
xchg
mov
add
or
ret
inc
adc
jbe
mov
outsl
leave
hlt
pop
movaps
pop
or
xor
aad
xchg
lock
stc
mov
inc
xlat
aas
sarl
sub
cmp
xchg
mov
lds
push
push
adc
xchg
cmp
dec
push
imul
in
xchg
xlat
and
adc
push
enter
xor
aas
orl
adc
and
xor
aaa
aaa
imul
sahf
out
and
or
add
jp
lahf
xchg
movb
pop
mov
test
pushl
lret
dec
push
frstor
mov
pop
inc
mov
jnp
or
idiv
sub
insl
sub
fstl
mov
push
cld
fadd
lret
xor
insb
fimull
cmp
jne
xor
stos
mov
iret
popa
movsb
repz
xchg
xchg
push
icebp
and
daa
and
add
testb
stos
inc
clc
inc
inc
xor
stc
xchg
and
insb
mov
push
dec
daa
pop
scas
in
cmp
or
in
ss
repz
cmp
jo
inc
shll
loope
cwtl
mov
sbb
imul
dec
pop
jo
fisubrs
sbb
dec
and
nop
test
testb
sbb
dec
iretw
mov
jp
sbb
pop
lea
test
mov
stc
mov
jl
xor
push
pop
lcall
out
jbe
mov
call
mov
int3
cli
inc
push
dec
pop
ss
inc
fwait
xchg
jmp
lret
mov
inc
push
pop
test
rcl
xchg
mov
xor
pop
leave
popl
outsl
fs
inc
out
fcmovu
icebp
std
addb
fnstcw
cwtl
mov
pusha
sub
adc
add
mov
and
add
dec
cmc
enter
xchg
fwait
mov
sub
pop
lock
stc
sub
mov
mov
jmp
in
stc
rorl
sbb
or
sbb
daa
mov
int3
mov
mov
imul
jne
shr
daa
adc
call
imul
mov
test
push
dec
sub
int3
shl
cwtl
sub
aas
out
xchg
mov
mov
adcb
cmpsb
mov
mov
mov
xlat
std
sub
int
xchg
sub
cmp
push
xor
jl
rcrb
add
in
push
lds
movsl
jnp
inc
sbb
jns
xor
xor
mulb
loopne
or
stos
movsl
rcll
sub
pop
into
fisubrs
push
lcall
ret
shrl
mov
add
dec
cmp
mov
sub
push
push
cmpsb
pop
in
insl
pop
xor
movsl
pop
xor
addr16
dec
popa
jo
insl
mov
rcrb
cli
jns
iret
jle
or
pop
clc
mov
sbb
xor
sbb
nop
js
mov
les
lods
inc
fimuls
in
std
test
adc
mov
xchg
lods
ss
mov
in
dec
sti
add
or
adc
cltd
and
daa
inc
mov
cmp
outsb
or
sub
inc
pop
cs
lds
xor
push
in
popa
adc
psraw
mov
clc
add
xorb
inc
int3
ret
and
icebp
cs
imul
divb
cmove
sahf
adc
or
loope
mov
cmp
ret
test
xor
dec
or
add
mov
and
je
push
inc
dec
addb
or
lahf
cmc
fcoms
cmp
mov
push
icebp
fwait
sub
addb
out
ret
mov
cltd
mov
pop
and
movsb
ljmp
ret
pop
ja
sub
outsb
ret
mov
push
pop
mov
push
aam
mov
xor
leave
loop
cmp
xchg
xchg
cmpsb
ds
jbe
cmp
stos
test
lcall
push
outsl
jl
xchg
fs
daa
subb
inc
adc
adc
ret
xchg
push
add
je
sub
ja
inc
sti
add
int
push
mov
add
sahf
xor
mov
lock
xchg
xchg
nop
jo
iret
arpl
push
mov
orl
int
push
jecxz
es
jbe
mov
stc
jb
loope
xchg
fidivrs
add
enter
sub
fcmovbe
decl
leave
add
jns
jnp
ljmp
pop
das
shrl
add
cmpb
subl
sarb
insl
inc
imul
jge
test
jb
jle
ficoml
adc
add
in
lods
cmp
ret
inc
jnp
xchg
sbb
addr16
mov
jecxz
loop
pop
sub
or
and
xor
pop
cmp
xor
leave
sub
jns
xchg
jae
jecxz
xchg
imul
xchg
mov
fadds
fbld
ss
call
jge
lds
std
test
inc
fwait
inc
mov
rcr
and
sbb
lahf
pop
push
outsb
test
dec
arpl
xor
inc
adc
sar
pop
jg
out
jnp
sub
jno
mov
push
push
inc
jle
xchg
xor
sub
push
scas
push
pop
mov
cs
xor
cli
fldenv
dec
in
test
jmp
subb
jne
test
call
xchg
sub
sub
xor
pusha
dec
push
fidivs
xlat
lcall
dec
jmp
jle
cmpl
mov
dec
sub
sahf
push
push
shll
icebp
pop
insl
jns
add
cld
shlb
jp
inc
push
cmp
mov
cmp
mov
aaa
rcrb
mov
or
mov
xor
sbb
jecxz
adc
lods
fimuls
sub
clc
dec
stos
pop
push
mov
nop
fs
lds
add
loop
movsb
lret
hlt
out
icebp
mov
add
cmpsl
addr16
pop
gs
aad
repnz
dec
lcall
jmp
nop
int3
shr
lret
dec
leave
and
jb
stos
pop
dec
dec
popa
xor
loop
adc
shrl
cltd
test
inc
push
inc
pushw
sahf
push
clc
loopne
xor
pop
sahf
inc
lahf
xchg
lock
cli
daa
mov
loop
mov
loopne
gs
jae
sbb
jns
or
and
out
mov
insb
pop
fildll
mov
scas
pop
jne
sub
mov
pop
lret
xchg
shll
pop
mov
add
mov
sti
test
adc
adc
cmpsb
xor
ficoms
aaa
cmp
lock
pop
jecxz
dec
ja
int3
xor
into
mov
dec
in
popf
jle
push
and
inc
aam
cli
imulb
das
andl
sub
sbb
shll
mov
jmp
popl
rdpmc
fsubrs
push
xchg
pushf
adc
or
xor
jo
sahf
adc
ret
mov
add
stos
or
call
push
push
mov
js
pop
add
enter
stos
mov
popf
and
pop
xchg
push
sbbl
xchg
arpl
scas
pop
mov
sbb
xor
mov
or
mov
fisttps
clc
lea
cmp
enter
jno
in
inc
in
sub
shll
lock
inc
std
jle
cmc
popa
inc
xchg
or
loope
and
xor
sbb
cld
pop
xchg
xor
jne
cmpsl
dec
lret
and
push
test
pop
cmp
sbb
jmp
sub
mov
pushw
js,pn
dec
dec
ret
dec
bound
sbb
add
mov
push
mov
icebp
mov
adc
mov
aad
out
int3
dec
xor
test
jle
pop
lods
sti
xchg
push
pop
add
and
stc
in
xor
or
cmpsl
out
sub
or
shll
mov
imul
fmull
ret
sbb
xchg
das
dec
std
outsl
cltd
repnz
push
add
int3
mov
xlat
insl
enter
out
mov
mov
and
xor
iret
lret
push
daa
and
stos
jp
fldl
or
in
xor
dec
loop
pop
leave
mov
add
cmp
cmp
cmp
scas
outsl
jp
push
test
jns
sub
push
fiadds
and
xor
in
je
xor
sbb
add
in
pusha
cmp
or
insb
jae
ja
jle
xchg
repz
xchg
jne
rorl
hlt
dec
xchg
inc
pop
jle
cmp
mov
cmpb
adc
int3
mov
jle
jl
mov
push
mov
inc
inc
push
adc
outsb
push
aad
inc
inc
jne
lods
jmp
dec
adc
rcrl
mov
sti
sub
inc
mov
or
fildl
inc
incb
sbb
sub
jle
insb
sbb
in
cmpb
hlt
fcmovbe
out
adc
mov
in
out
jl
sbb
jbe
imul
notl
dec
sbb
pop
sbb
xor
int3
xor
mov
cmp
pop
xchg
in
stos
and
fs
aad
mov
rcr
insb
inc
sub
imul
in
push
mov
or
dec
or
mov
add
inc
sbb
shl
ss
subb
test
cltd
mov
popf
ret
cmp
jb
popf
mov
cmp
and
xor
inc
loope
sub
cmpl
dec
bound
inc
xchg
mov
cmc
jb
subl
fldenv
xor
cltd
repz
and
or
xchg
mov
push
cmc
scas
mov
add
inc
pusha
pop
jg
dec
inc
pop
sti
stos
in
xchg
jb
push
lret
push
mov
lods
adc
mov
dec
xchg
inc
jle
pop
insl
mov
xor
xor
icebp
mov
mov
mov
ss
add
out
or
call
mov
mov
push
ja
imul
cs
sub
mov
lds
repnz
mov
mov
dec
adc
pop
ret
insb
aaa
insl
daa
arpl
pop
mov
test
adc
int3
std
dec
popf
sub
fdivr
ss
cmpsb
in
adc
fcmovnb
lds
ret
in
fcmove
pusha
cmpsl
imul
aas
pop
adc
jae
enter
jle
mov
pop
push
dec
add
mov
popf
bound
jbe
xchg
xlat
pop
inc
cwtl
lahf
and
aam
lahf
lods
orb
in
cmpsl
xchg
out
and
sub
stos
xor
and
rcrb
fldl
mov
jg
mov
jmp
xchg
jg
sbb
and
jl
mov
or
pop
cmpsl
pop
and
jp
mov
cmp
push
sub
ds
sbb
test
mov
cs
push
lods
add
stos
fstpt
sbb
jb
adc
cmp
mov
sbb
push
sbb
sbb
sub
sub
adc
or
scas
push
push
outsb
add
mov
adc
subb
rcll
pusha
lret
lock
loopne
jne
or
cmp
jle
rol
ja
xchg
mov
push
sub
into
adc
sbb
bound
stos
inc
and
add
aas
popf
rcl
ret
mov
inc
xor
adc
jl
iret
aad
ss
sbb
jbe
jo
mov
lods
test
jl
scas
sahf
aad
and
clc
jbe
sub
xchg
adc
hlt
lea
cwtl
cmovge
xchg
sbb
cmp
add
stc
mov
mov
pusha
ret
cmpsb
jle
outsl
adc
pop
or
pop
mov
sbbl
push
cmp
fwait
dec
xor
in
or
aam
jge
scas
cltd
ljmp
cmpsl
outsl
push
xlat
roll
or
pop
cltd
cmp
js
pop
lea
jp
std
notb
mov
dec
and
mov
adc
mov
loope
jo
or
lods
data16
fistpl
and
lret
fcompl
sbb
sarb
xorl
xchg
sub
xchg
lock
inc
dec
jae
inc
lcall
mov
or
mov
jmp
fnstsw
lret
push
jno
iret
in
xchg
out
xor
aam
and
daa
aam
repz
adc
pushl
fwait
push
jge
shlb
mov
inc
adc
xchg
push
pop
mov
popa
xorb
imul
out
push
loopne
in
mov
fs
jmp
jb
xchg
adc
jp
mov
sub
add
gs
mov
cli
xchg
jg
jb
push
cmp
stos
repz
mov
push
mov
hlt
pop
lret
xchg
dec
xchg
lcall
fcoms
dec
lret
je
call
adc
push
js
push
xorb
or
mov
xchg
xorl
xchg
pop
mov
movb
fisubs
add
cmp
xchg
insl
mov
lock
xchg
jae
ret
jbe
mov
inc
fnsave
push
pop
dec
enter
into
jl
xor
int3
cmc
mov
les
cli
fnstenv
je
dec
or
sbb
push
add
dec
push
std
repz
call
push
xchg
es
xchg
sbb
repz
xchg
dec
outsb
es
test
insl
sbb
cmp
test
push
mov
mov
ljmp
cmpsw
mov
call
cmp
fimull
or
cli
es
mov
mov
outsl
xor
adc
aaa
bound
xchg
dec
testb
lret
test
imul
add
xchg
testl
outsl
push
rol
mov
test
aaa
xchg
and
or
jno
inc
add
bound
dec
mov
or
push
pand
fcoms
pop
iret
mov
sbb
out
inc
inc
sahf
and
cmp
cmpsb
inc
xchg
lods
mov
xchg
scas
jecxz
jmp
cmp
inc
les
mov
cld
cwtl
aad
js
sub
pop
push
aas
mov
je
mov
cld
xchg
adc
jb
jecxz
imul
mov
adc
hlt
ffreep
lods
inc
adc
jo
or
aaa
cmp
mov
daa
lock
pop
hlt
lds
xchg
stos
jge
jp
inc
test
sub
inc
pop
or
sbb
lahf
stos
fisubrs
ljmp
and
sbb
add
mov
lea
mov
sub
jnp
mov
pop
xchg
xchg
cmpsl
or
jmp
dec
bound
push
cmpsb
sbb
inc
add
shll
sbb
jno
fldt
inc
jno
test
push
mov
inc
dec
stc
sti
adc
inc
mov
or
dec
dec
pop
pop
std
bound
lea
pop
pop
clc
test
adc
mov
punpcklwd
jbe
add
mov
mov
cmpsb
xchg
outsb
xor
inc
stc
jo
jo
pop
inc
jns
mov
pop
imul
xor
inc
ret
gs
mov
popf
pop
xor
ss
andl
add
sahf
pop
cmp
enter
rolb
push
test
orb
into
repz
movsl
ds
or
je
je
icebp
inc
and
out
xchg
adc
gs
mov
dec
in
rcr
mov
mov
rorl
jb
xchg
adc
out
jns
pop
adc
pop
rcrl
mov
jnp
sbb
mov
push
mov
lods
dec
divb
stc
pop
xchg
ret
mov
mov
out
popf
cli
pop
jl
pop
dec
mov
add
out
inc
jl
sbb
and
inc
add
fcoml
dec
dec
ljmp
push
lahf
push
xchg
and
mov
lcall
gs
sub
xor
dec
xchg
mov
lds
arpl
lahf
bound
pop
push
cmp
test
mov
jns
or
push
enter
jge
orb
icebp
mov
push
out
cmp
int3
inc
jmp
pop
mov
add
sub
pusha
data16
pushf
sub
repnz
ja
adc
test
sub
sub
in
ret
xchg
ret
sub
insb
mov
insb
or
cltd
das
mov
adc
mov
and
imulb
ret
addr16
loope
mov
popf
mov
or
pop
arpl
in
dec
jmp
jle
popf
call
clc
pop
outsl
das
jnp
mov
frstor
stc
sbb
xor
inc
mov
in
dec
mov
popf
or
repz
jecxz
fwait
xor
or
imul
enter
and
in
ds
lea
pop
aas
int
enter
add
mov
xchg
sbb
cld
push
mov
je
mov
pop
outsb
fdivl
cld
sub
stos
mov
jnp
stc
test
cmpb
aad
inc
mov
or
lahf
mov
lret
fcomps
pop
pop
or
rorb
jbe
icebp
inc
gs
andb
roll
inc
stc
lcall
test
sub
xor
push
int
xor
cmp
mov
fdivrp
adc
out
rcr
popf
std
inc
inc
inc
mov
xor
xchg
ss
dec
xchg
push
cmp
fimuls
andl
cmp
ss
out
jns
sub
and
xchg
push
fcoms
pop
imul
repnz
jmp
orb
imul
fs
lods
jbe
sti
je
out
mov
sbb
push
inc
inc
adc
scas
mov
mov
and
pusha
pop
scas
push
cmp
into
dec
aas
dec
mov
sti
push
xchg
mov
push
arpl
lret
mov
xchg
mov
mov
ret
and
pop
in
push
mov
gs
dec
ss
mov
inc
dec
insb
sbb
inc
or
cmp
sbb
std
sbb
aaa
cmp
stos
mov
jno
xchg
sub
mov
push
adc
sbb
sbbl
adc
imul
sub
add
test
mov
out
inc
leave
sahf
aaa
add
and
gs
out
sub
push
pop
cmp
daa
mov
and
and
je
push
movsl
cltd
sub
lds
adc
mov
daa
and
dec
movsb
xor
ja
sbb
rcll
cmp
stc
xchg
mov
jge
jecxz
inc
xor
outsb
shrl
adc
adc
repz
int3
and
arpl
stos
jb
adc
xchg
inc
rorb
outsl
shlb
repnz
cmpsl
pushf
jnp
jge
and
add
jo
leave
shlb
jne
test
daa
mov
xchg
push
push
mov
cmovle
je
xchg
push
cmpsl
pop
pop
sbb
cmpsb
inc
scas
rcll
add
and
orb
iret
addr16
pop
fwait
mov
out
sbb
ja
cwtl
mov
jno
jecxz
ljmp
js
cmpl
adc
xor
cmp
xor
jns
andl
rcll
arpl
fnsave
push
cmp
adc
fstpl
jl
rcl
fisttpll
and
or
mov
sti
mov
iret
and
lea
lahf
dec
test
jno
inc
add
enter
mov
adc
dec
sbb
mov
adc
andb
das
mov
inc
add
dec
and
jecxz
sbb
test
or
mov
push
sbbl
rcrb
arpl
mov
dec
lods
or
daa
xchg
dec
cld
pop
cmp
aam
jle
cmpsb
fidivs
push
mov
mov
sbb
jge
push
lea
loop
adc
mov
into
andl
cwtl
cs
xor
xor
dec
ljmp
xor
data16
orb
push
imul
jb
xchg
xlat
xchg
inc
fistps
inc
hlt
pop
fnstsw
addr16
mov
add
ja
fwait
add
test
push
xor
aam
mov
sbb
roll
lea
lret
or
scas
or
jmp
nop
jl
jg
loope
lods
fisubrs
xor
test
xlat
rcrb
das
fwait
add
cmp
sub
cli
mov
mov
ds
dec
push
jge
mov
sub
in
shll
insb
leave
fucomi
or
mov
stos
ja
mov
cmp
fnstsw
fidivrs
sbb
xchg
sti
das
aam
scas
iret
lret
in
jbe
mov
jp
out
inc
je,pt
imul
or
inc
mov
aas
and
cltd
repnz
jmp
mov
push
xchg
imul
xchg
mov
and
test
je
jle
out
shlb
jns
ret
pop
sbb
cmpsb
jb
jae
iret
mov
sub
fwait
mov
dec
xchg
xchg
pop
and
in
xchg
xchg
aam
shl
inc
push
mov
dec
add
or
jne
jle
xchg
xchg
popf
inc
mov
dec
sbb
pop
outsl
push
test
das
dec
cmp
jmp
aad
or
xor
insl
mov
xchg
cmp
sbb
out
mov
add
leave
and
push
shrb
ja
xchg
mov
repnz
xor
mov
scas
push
mov
lcall
xchg
pop
sbb
xor
xchg
les
clc
aaa
mov
inc
or
sub
add
pop
test
movsb
aad
dec
out
out
test
aas
cmpsl
jg
jmp
mov
outsl
cmpb
and
pop
jl
out
mov
mov
jmp
cmp
xchg
scas
call
mov
dec
sbb
push
test
jb
push
cmc
ret
xorl
adc
inc
xchg
sbb
mov
imull
jle
sub
pop
movsl
mov
dec
mov
cmc
ljmp
xor
fstl
insb
jnp
pop
out
cmp
outsb
xlat
adc
mov
sbb
jmp
jl
xor
stos
xor
icebp
lods
into
mov
leave
es
or
lahf
push
jne
jnp
ret
es
sbb
add
popf
gs
jg
bound
mov
rorl
or
sub
mov
lret
rclb
mov
lds
les
sub
sti
cs
rcrl
xor
pusha
add
mov
inc
and
and
jl
fadds
pop
popa
hlt
fisttpll
stc
xor
test
xor
push
pop
mov
mov
out
lret
lock
dec
hlt
imul
shr
fs
lahf
cmp
pop
xchg
in
test
sub
daa
and
mov
bound
dec
loope
shll
popa
or
push
mov
cmc
daa
fdivl
mov
stos
adc
jmp
cmp
loope
sbb
mov
add
mov
push
daa
call
xchg
pop
dec
icebp
lea
cmpsb
inc
xchg
and
mov
jl
add
sbb
mov
adc
sti
out
mov
or
xchg
adc
pop
mov
sbb
pop
fnsave
inc
push
cmpsl
add
js
xor
imul
cmc
notl
loop
or
rclb
mov
mov
sub
pop
fimull
outsb
add
subl
loope
lods
mov
fucomp
icebp
xor
nop
lcall
or
sub
adc
loope
ja
cmpl
mov
mov
stc
jns
jmp
xchg
stos
aas
aad
pop
fadds
add
cmp
push
lret
xchg
mov
rcl
lds
mov
add
stos
pusha
cmp
add
je
push
or
pop
pop
or
cmp
jb
div
int3
dec
stos
pop
insb
pop
and
std
dec
push
jnp
cmc
sbb
dec
jne
xchg
orb
out
jecxz
cltd
outsb
outsl
and
pop
cmpsb
xchg
xor
shrd
xchg
xor
and
testb
je
or
jno
push
insl
addr16
mov
outsl
inc
out
sub
push
into
inc
sti
out
loop
sarl
push
xchg
fsubs
das
mov
add
lods
xor
add
pop
es
lock
dec
sbb
jo
push
shlb
dec
orb
mov
inc
and
movsb
fistpll
jne
mov
adc
ljmp
scas
sbb
jmp
std
xchg
mov
xlat
stos
out
mov
sahf
test
jg
dec
addr16
mov
call
scas
ds
ret
jp
xchg
sahf
cmpsl
cmp
ucomiss
rclb
daa
loopne
outsb
sub
std
fcomps
mov
xor
and
push
ja
leave
shlb
xchg
repnz
mov
cmpsb
pop
inc
into
sbb
adc
push
pop
xor
cmp
add
add
or
fcmovnu
sbb
mov
std
aaa
mov
testb
mov
or
or
ja
xchg
push
mov
shl
call
jne
insl
insb
in
fwait
sub
ljmp
scas
jnp
scas
cmpsb
cld
adc
rcll
cltd
jne
popa
mov
in
icebp
mov
outsl
push
popf
aad
mov
push
sub
lret
push
loop
push
sbb
mov
push
mov
mov
jge
clc
mov
mov
sub
push
inc
and
jmp
push
lds
push
or
icebp
popa
daa
into
adc
movsb
push
xchg
adc
popa
mov
push
push
ljmp
mov
mov
ffreep
sti
cmpsb
in
add
pop
lds
xchg
cld
cmp
xchg
jbe
fidivl
inc
inc
pop
aad
push
jnp
pop
jno
xor
jle
xchg
dec
enter
pusha
lahf
scas
mov
xchg
subps
sbb
push
fsts
cmp
sbb
out
cli
clc
add
bound
enter
repz
sbb
pusha
out
xor
in
inc
mov
fistps
push
hlt
je
adc
clc
and
cmp
rcll
fld
push
pushw
aas
jecxz
enter
xor
xchg
pop
xchg
dec
sub
shrl
repnz
mov
mov
rcl
into
mov
leave
mov
insb
jo
ds
pop
icebp
mov
jp
xlat
addl
sub
ljmp
push
cwtl
subl
jl
in
pop
repnz
push
jg
xchg
xlat
popa
in
repz
test
insl
adc
mov
add
push
fstl
jmp
mov
rcr
fisttpl
sub
mov
push
push
test
push
cltd
das
xor
and
stos
add
and
mov
push
jecxz
fnstsw
daa
and
mov
xchg
faddl
popa
rclb
cli
cld
lahf
shrb
mov
dec
enter
or
sub
pop
sub
dec
pusha
int
lds
clc
cmc
out
repnz
xchg
push
aaa
jg
pop
cmpsb
lea
xor
sbbl
aad
inc
or
lods
lock
lahf
inc
mov
push
pushf
ret
inc
xchg
test
lcall
test
pusha
ja
jne
shrb
and
div
add
mov
jne
js
insb
inc
hlt
jne
outsb
add
lret
pop
inc
dec
int3
and
data16
daa
fwait
mov
sbb
sub
dec
mov
xor
xchg
mov
das
xlat
testl
push
inc
dec
ret
push
pop
mov
std
test
pushf
jg
sti
jge
sbb
push
fistps
pop
repnz
ud1
ret
rclb
dec
pop
mov
add
fsubrs
mov
xlat
push
scas
cmp
and
imul
aad
cmp
loopne
mov
bound
pop
mov
adc
lds
sub
or
mov
and
les
mov
mov
sti
pushf
and
lock
sarl
bound
xchg
pop
test
inc
testb
adc
scas
aaa
fildl
shll
into
arpl
xor
stc
sub
mov
into
mov
bound
ficoms
cmp
mov
mov
mov
pop
test
cmp
jne
dec
jo
outsl
popa
fnstsw
xchg
addr16
shll
sub
out
in
test
inc
fiadds
jo
inc
pop
jmp
popf
dec
mov
outsl
je
jmp
nop
outsl
mov
jge
aas
inc
add
scas
movb
das
jae
cmc
into
sub
cwtl
daa
adc
mul
shll
test
repz
mov
test
mov
pop
cmpl
daa
icebp
jecxz
mov
fildl
test
sub
dec
sub
dec
aad
loopne,pt
jnp
mov
icebp
mov
sbb
jmp
dec
and
cs
pop
adc
movl
dec
jno
or
or
cmp
push
js
sarb
fs
or
or
jb
xchg
aam
push
adc
add
and
loop
enter
iret
aam
push
sbb
xchg
int
xor
xchg
out
mov
daa
das
out
in
fldcw
shr
je
sub
in
sbb
jmp
ja
cmp
and
cmc
test
jb
in
cmp
jae
pop
test
sub
inc
sbb
or
and
mov
jo
jge
movsl
inc
mov
dec
sub
fidivl
sub
mov
leave
mov
pushf
pop
test
xchg
outsl
xchg
ds
outsb
and
imul
mov
dec
fmull
lods
or
cmp
inc
xlat
adc
mov
negl
jbe
rolb
mov
or
fdivrs
xor
hlt
jp
xchg
sbb
aam
scas
jle
mov
and
scas
ret
repnz
add
xchg
stos
dec
jg
add
xlat
sbb
or
fnstenv
outsl
adc
mov
add
xor
jecxz
ret
lods
mov
bound
sub
jmp
push
pop
xchg
and
lods
loop
iret
or
add
ficompl
filds
imul
and
jns
enter
push
sqrtps
iret
mov
dec
add
add
mov
insl
sub
stos
out
inc
fdivrl
push
and
flds
mov
add
adc
mov
push
sbb
test
pop
in
jb
mov
xor
inc
sarb
push
pop
adc
xchg
dec
mov
arpl
jecxz
and
cmp
lds
std
pop
lcall
outsb
sbb
cmc
shlb
in
add
dec
dec
ljmp
fsubs
adc
and
dec
mulb
movb
add
movsb
in
cmc
sub
lahf
xchg
jle
loope
sbbb
inc
ja
mov
jg
ds
push
inc
add
push
imul
add
aas
sbb
gs
cwtl
loopne
ja
lea
notl
in
sub
lahf
mov
pop
pop
mov
sbb
pushf
sbb
popf
mov
mov
push
stos
push
into
push
pop
xor
and
and
in
pop
fdivrl
push
scas
bswap
push
lods
lret
test
xchg
pop
dec
ret
push
lret
repnz
imull
cli
in
mov
mov
fs
mov
add
out
add
add
push
sub
sub
les
fldenv
sahf
cmpb
fiadds
mov
repz
sbb
adc
dec
cs
out
call
adc
add
fwait
aam
or
int
cld
mov
inc
sti
sbbb
push
add
enter
enter
aaa
mov
jle
lock
and
test
jecxz
out
xchg
jl
dec
sbb
arpl
mov
pop
sub
jge
daa
xchg
sub
and
ljmp
dec
invd
mov
sbbb
or
dec
sub
mov
xchg
pop
les
cmpsl
mov
adc
dec
cltd
mov
movsl
daa
sub
into
call
fcompl
popf
and
xchg
push
movsb
test
dec
mov
test
out
xor
cmc
dec
mov
fisubs
mov
sub
cmp
lahf
push
pop
jge
loope
inc
stos
dec
jns
ficoml
inc
pop
push
loopne
xor
jbe
repnz
mov
cmp
mov
inc
fcomi
pop
cmpsl
loopne
sub
mov
pop
mov
adc
jo
xchg
popa
adc
or
lret
nop
jge
xor
mov
xchg
popa
mov
fstpt
pop
nop
xchg
cmp
je
rorb
cmpsb
rcrb
or
cld
and
sub
je
scas
into
sbb
push
xlat
xor
rorl
mov
push
mov
push
aas
pop
and
cmpsb
and
out
jbe
or
inc
aas
pop
in
loopne,pn
sbb
xchg
add
sarb
pop
enter
lea
stc
jno
jmp
scas
fsubs
fdivl
leave
jo
clc
mov
out
sbb
pop
fcom
mov
popa
sti
ds
push
cmp
pop
sti
cmp
pop
stos
ljmp
sub
jmp
rclb
aad
mov
xchg
int
push
sbb
add
outsb
xlat
insb
fcoms
cmc
jmp
lods
mov
or
mov
movsb
orb
ljmp
or
xor
mov
dec
nop
stos
mov
jbe
fildll
imul
xchg
and
movsb
outsb
xor
or
mov
cwtl
jns
add
test
jle
test
pop
popa
sbb
jb
inc
neg
arpl
jns
mul
mov
cmc
xchg
or
stos
loopne
jbe
dec
js
inc
push
jns
jp
cmpsl
inc
shl
das
imul
ljmp
scas
rcrb
js
add
stc
lods
test
hlt
jle
add
bound
pmuludq
mov
xlat
fcompl
addb
mov
das
lock
push
out
in
mov
pop
scas
loopne
int
icebp
mov
jo
xchg
mov
and
jl
sahf
pop
push
ljmp
shlb
mov
out
jp
sbb
loop
xchg
or
ja
iret
lods
mov
repz
mov
orb
push
dec
cmpsl
push
and
inc
mov
stc
sbb
push
iret
or
cli
fmuls
popa
out
loopne
rcrl
adc
stos
adc
and
aas
sub
clc
cmp
aaa
fisttpl
xchg
aaa
fwait
addb
rcrb
dec
adc
rorl
mov
movsb
sub
mov
gs
jb
jnp
mov
push
hlt
add
jg
lret
gs
out
mov
and
xlat
ss
stos
inc
ds
jno
and
cmc
popa
test
inc
jl
into
lods
xor
adc
inc
test
sub
out
and
xchg
je
jo
push
push
sbb
xchg
mov
xchg
push
je
inc
pushf
dec
stos
test
xchg
adc
mulb
ds
sbb
sbb
sub
dec
xor
push
stos
adc
or
sbb
dec
out
push
sahf
shll
xor
add
push
sub
daa
mov
pop
sub
xchg
lret
aam
out
push
mov
rcr
xchg
lahf
arpl
push
mov
mov
pop
xchg
fistpl
cmc
addl
into
idivb
fldl
pop
mov
mov
test
call
cli
lock
lods
int3
push
movzwl
pusha
outsb
inc
xor
lock
add
jo
mov
push
jno
inc
imul
sub
mov
test
flds
push
loope
test
jge,pt
arpl
pop
xchg
ds
mov
or
aas
nop
imul
inc
movsl
jne
nop
pushl
out
rorl
mov
test
movsl
std
aaa
ret
adc
test
xchg
jb
ret
cltd
mov
or
dec
orb
fwait
and
push
negl
mov
adc
aam
add
jno
sti
sbb
lcall
js
push
outsb
mov
xchg
sub
mov
jp
jl
addr16
or
mov
jne
nop
push
out
cmc
and
test
flds
fs
mov
add
aad
dec
in
les
sti
aas
icebp
jae
cwtl
movsb
xchg
in
or
push
ss
dec
xchg
push
fimuls
movsl
dec
ret
fs
adc
sub
les
shlb
push
aaa
addb
xlat
pop
or
cmp
jnp,pn
sti
adc
cmp
stos
gs
mov
gs
outsl
loope
leave
push
or
and
mov
out
mov
pushf
sti
aaa
push
mov
insb
push
adc
adc
add
pusha
pop
adc
bound
mov
add
mov
ret
dec
fs
mov
das
jno
cmc
rol
or
fsubs
lcall
fsub
xor
nop
jne
dec
cmc
or
insb
gs
mov
xorb
cmp
lahf
push
push
add
aaa
push
pop
loopne
mov
lods
mov
lret
pop
jne
pop
les
push
cmpsb
repz
rclb
or
or
fsubp
dec
into
mov
subl
adc
sbb
out
add
mov
test
cmp
sub
add
push
mov
das
jns
repnz
mov
pop
gs
push
nop
sub
sub
je
push
xlat
sub
aad
mov
mov
scas
cmp
arpl
xor
and
rcrl
sub
cmpsl
add
in
xor
mov
stc
adc
rcl
test
or
xor
mov
repnz
ss
leave
and
and
adc
push
test
test
outsb
add
mov
in
int
add
mov
push
xchg
hlt
into
lds
das
pop
sbb
in
ret
push
js
aad
sbb
add
jne
sub
ds
rcl
push
or
das
pop
loope
pop
enter
mov
add
or
data16
rcrl
add
cmp
xchg
repz
xchg
mov
idivl
push
inc
xchg
outsb
leave
fs
xor
lds
lods
popf
or
add
xchg
or
push
subl
cmp
add
xor
mov
icebp
roll
fstps
into
sbb
push
sub
jmp
cmc
add
cmp
repnz
adc
mul
and
xchg
daa
or
inc
push
js
cmpb
into
fisubs
lcall
jge
je
pop
push
int
push
mov
lcall
mov
sub
daa
repnz
pop
jne
fwait
call
lock
add
ret
push
stos
loope
imul
add
or
daa
adc
xchg
es
mov
add
mov
push
decl
scas
test
enter
adcl
cmc
add
icebp
pop
mov
sub
ficoms
fcmovnu
cmp
xchg
imul
test
cwtl
xchg
xchg
xchg
cmpsl
mov
imul
or
mov
sbb
insl
mov
adc
in
rcrb
xchg
pop
pop
repz
fwait
sub
jl
jb
shl
pushf
add
shlb
pop
push
xchg
mov
pop
mov
jns
cmp
push
fwait
adc
test
jnp
in
mov
adc
fxsave
cmc
fs
mov
pop
insl
mov
stos
js
shrl
repz
or
add
inc
adc
into
mov
and
aaa
push
dec
inc
in
dec
and
dec
es
adc
mov
push
fwait
mov
cmp
push
sbb
dec
add
pop
aad
es
xlat
mov
popa
sbb
int3
and
das
push
or
enter
xchg
test
pop
das
lea
adc
xor
into
pushl
mov
xor
js
or
fcomi
push
adc
stos
or
xchg
xchg
es
pop
lea
gs
aad
loop
cmp
cmovns
add
jecxz
test
push
inc
out
mov
hlt
pop
scas
cwtl
pop
xlat
lret
cmpsl
movsl
pop
mov
repz
lock
bound
and
mov
incb
lods
push
inc
and
jecxz
movsl
fcomps
pop
dec
out
sbb
seta
and
test
lea
xlat
loop
sbb
inc
sbb
lea
push
es
lea
shlb
jmp
xchg
not
xor
ret
mov
xorps
push
mov
or
pop
mov
xor
inc
xchg
fwait
or
add
push
and
call
subb
mov
jge
enter
mov
jae
or
push
xchg
nop
mov
push
mov
push
roll
out
repz
in
adcb
jne
data16
xchg
or
inc
mov
sub
rcll
cli
les
sub
mov
pop
rcll
mov
dec
inc
mov
ss
shrl
js
jmp
fisttps
pop
jmp
dec
in
popf
in
mov
inc
jnp
arpl
cld
and
sub
fwait
stc
dec
jle
int
or
mov
mov
cmp
add
ds
xchg
mov
nop
add
cmpsl
iret
push
je
xlat
aaa
mov
mov
lds
push
aas
test
mov
ret
arpl
xor
lret
imul
in
jg
aam
aaa
cmpl
mov
mov
or
inc
pop
lea
sar
mov
popf
int3
xchg
and
mov
xchg
mov
repz
repnz
push
mov
push
stc
and
in
xchg
inc
inc
sub
sub
pop
pop
popa
in
jae
dec
movsb
xlat
icebp
mov
fidivs
mov
xchg
add
jb
test
push
and
mov
lds
fs
popa
flds
lret
test
or
mov
movsb
cmp
outsl
mov
pushf
adc
cmp
push
div
je
popa
xchg
pusha
adc
scas
xor
mov
or
jbe
or
dec
lret
ror
shrb
int3
push
mov
sub
call
ss
ljmp
dec
and
mov
xchg
xor
mov
or
and
nop
xchg
mov
or
call
js
pop
sub
xor
mov
dec
fdivrl
jp
cli
push
imul
ret
push
dec
rcll
stc
jmp
shll
out
cld
jg
ret
mov
xor
add
dec
jmp
ret
add
adc
or
jns
dec
leave
cld
rclb
sub
movsb
jbe
lret
dec
repz
dec
and
repnz
je
jl
movsb
loop
ficompl
jb
jae
push
lods
and
push
pushf
and
decl
imul
inc
xchg
inc
inc
pop
sti
add
push
cmp
pop
mov
ds
xorb
fidivrs
xchg
push
mov
sub
pop
cli
orb
outsl
dec
mov
cmc
je
adc
or
in
cmp
inc
jno
popa
or
loop
pop
add
add
js
pusha
or
andb
call
ja
or
sbb
lea
fcoms
xchg
adc
aam
push
xor
sub
mov
test
xor
out
jbe
jge
xchg
dec
sbb
insb
jmp
push
sbb
outsl
or
jg
and
mov
cmp
out
jmp
inc
fwait
icebp
mov
xchg
xor
addl
mov
lret
es
aad
jmp
ss
dec
mov
push
jg
arpl
xchg
and
mov
pop
mov
sub
fsubrs
jge
test
xchg
inc
outsl
dec
mov
push
out
jnp
push
loopne
adc
xchg
add
sub
dec
movsl
mov
pushf
jecxz
mov
rolb
pop
sbb
mov
cmp
addr16
in
ljmp
adc
add
xchg
mov
xor
cmp
aaa
push
jnp
mov
lods
inc
or
insl
inc
push
daa
jg
xchg
fnstenv
and
cmpsl
or
popf
sbb
sub
hlt
dec
loopne
adc
hlt
cmp
lcall
dec
mov
pop
xchg
jg
scas
add
xlat
add
mov
and
xabort
cmp
cmp
and
pusha
mov
mov
xor
aas
add
outsl
arpl
mov
es
test
sub
pop
cwtl
jae
imul
pop
lea
fiadds
in
jecxz
add
enter
push
sub
pop
pop
test
sub
sub
push
stos
mov
jbe
pop
adc
lea
inc
xor
xchg
dec
fiadds
lock
xor
aaa
test
mov
xor
mov
jg
pop
divl
jmp
insl
push
cmp
push
sub
mov
jmp
xchg
pop
fdivrs
mov
adc
ss
iret
xchg
xor
mov
out
stc
jp
aad
mov
mov
aam
test
ret
xchg
or
xchg
mov
xor
dec
outsb
and
jb
xor
stos
inc
fprem1
inc
pop
sub
xor
push
and
cmp
mov
and
mov
movsl
dec
push
mov
jb
add
dec
inc
mov
xor
pop
enter
add
dec
cmpsb
and
ret
shl
and
and
iret
xor
inc
mov
dec
cmp
jl
and
xorb
stos
mov
repz
movsl
movl
es
mov
addl
outsb
inc
pop
cmp
dec
mov
incb
xchg
lahf
rorl
lahf
sti
push
and
ret
mov
rcrb
and
outsl
cmp
push
fwait
nop
test
pop
inc
pop
insl
cld
out
icebp
xchg
les
addr16
sub
negb
sub
add
lods
cmp
cmp
pusha
jne
sub
stos
fildl
icebp
jmp
push
mov
sar
sub
je
push
ret
and
jle
or
push
xor
out
dec
fwait
pusha
dec
mov
data16
inc
arpl
in
push
sbbb
in
mulb
inc
mov
aas
test
cmp
pop
pop
fsubrs
mov
dec
push
sahf
xor
adc
add
push
dec
std
cmpsb
je
dec
mov
mov
imul
fldl
leave
push
xor
jmp
shll
jp
addr16
inc
out
js
outsb
movsl
arpl
cmp
jecxz
push
stos
sbb
enter
mov
jp
mov
pop
add
testl
push
or
rcr
pop
adc
inc
cmp
inc
scas
rolb
loope
lds
xchg
cmp
ret
orl
adc
or
cwtl
ret
shr
into
lahf
int3
arpl
pushf
xor
fucom
cld
jg
adc
iret
shrl
shll
mov
push
push
sub
xor
dec
fimull
out
incb
xor
xlat
jle
mov
lahf
push
data16
dec
mov
adc
mov
add
ficompl
mov
lcall
ds
inc
adcl
stos
pop
adc
mov
std
or
adc
lock
fidivl
jp
cmp
push
pop
sbb
test
push
popa
pop
mov
mov
sbb
sub
jo
xchg
shr
out
pop
push
enter
cmp
loope
and
repz
cmp
das
push
sub
aas
mov
pop
arpl
adc
lods
inc
enter
mov
add
push
and
in
js
mov
sbb
inc
jge
addr16
inc
orb
fldt
mov
dec
loope
fldpi
ss
and
sti
movsl
test
rorl
xchg
jne
jecxz
add
pushf
hlt
pop
adc
cmp
cmp
lret
rorb
dec
dec
jge
fwait
divb
lock
js
fistl
cmpsl
out
xor
cmpsb
lahf
icebp
outsl
sub
pop
shll
push
jne
ficoml
add
clc
sub
push
shrb
shrb
adc
jno
scas
cmp
mov
cmp
inc
and
adc
xchg
out
scas
sbb
cmc
mov
loopne
out
daa
sti
mov
dec
inc
pop
cmp
in
ret
in
push
scas
mov
enter
and
mov
adc
sti
push
popa
imul
mov
data16
cltd
jle
out
daa
jno
cmp
nop
pop
movsl
call
out
aam
pop
aad
out
sub
ds
xor
xchg
or
push
push
stos
jmp
cmp
sti
imul
fnstcw
pushf
push
stos
lcall
adc
cmc
icebp
scas
int3
das
mov
mov
mov
add
xor
outsb
mov
mov
push
jne
ret
lods
mov
push
adc
adc
insb
mov
dec
and
jle
scas
mov
adc
movsb
filds
or
aad
lods
adc
mov
sarl
mov
push
dec
lret
adc
and
test
lret
nop
out
fldenv
lods
fisubrl
int3
fdivr
iret
out
or
pop
outsl
outsl
and
mov
js
pop
pop
iret
push
hlt
shll
xchg
les
pop
cmp
mov
shlb
sub
xchg
or
aad
mov
sar
adc
xchg
xor
adc
ss
jb
inc
gs
pop
jg
fs
push
and
mov
jge
lods
shlb
pushf
cmp
insb
dec
icebp
push
and
inc
add
inc
mov
inc
test
cld
mov
es
mov
mov
inc
gs
mov
int3
mov
adc
or
shll
adc
xchg
shll
sub
xor
sbb
icebp
dec
inc
push
and
inc
mov
stos
scas
or
xchg
xor
jno
adc
clc
test
lods
loope
jge
pusha
and
fildll
add
cmc
jmp
jmp
les
les
stos
xchg
or
push
mov
mov
mov
ds
mov
mov
mov
sub
add
mov
cmp
add
jo
adc
cwtl
push
xchg
jl
inc
xchg
pop
stos
add
cmp
sub
and
lock
cmp
dec
int
lods
dec
cmpsb
and
scas
add
jp
inc
test
insl
pusha
mov
push
push
aaa
inc
adc
mov
lods
pop
mov
aam
outsl
mov
mov
xchg
ljmp
inc
inc
adc
xchg
iret
je
mov
insb
pop
and
jmp
or
xchg
xchg
rcr
lods
movb
mov
push
nop
jnp
cmp
lds
sub
jnp
sub
push
ss
mov
and
outsl
in
lcall
int3
add
cld
adc
aam
lods
ss
cmp
pop
lahf
cli
scas
movsl
imul
orb
repnz
cmc
outsb
mov
in
push
insb
add
stos
cmp
pop
icebp
xor
push
scas
mov
inc
and
in
adc
pop
shlb
mov
pop
xchg
scas
cmp
repz
movsb
push
loope
mov
insb
fists
add
xchg
mov
or
xchg
inc
subb
std
ja
call
add
popa
jae
int3
out
insl
inc
cwtl
sub
pop
jb
movsb
push
inc
clc
mov
push
ss
aam
lods
xor
lcall
mov
adc
lock
nop
mov
loopne
mov
mov
xor
cmp
dec
pop
rcrb
adc
push
test
addb
pop
cmpl
js
mov
pop
dec
push
imul
aam
add
scas
test
and
movsl
mov
mov
pop
sahf
xchg
push
add
mov
roll
aas
out
mov
fimuls
pop
or
add
fists
mov
arpl
ds
lock
out
xor
mov
pusha
loopne
push
xchg
inc
arpl
ja
xor
and
mov
fsubs
jne
lock
cmc
push
jns
xor
dec
jbe
shrl
xchg
aas
adc
mov
push
and
sbb
or
dec
scas
loopne
or
leave
pop
xor
cli
cltd
jecxz
out
gs
dec
mov
arpl
inc
mov
cmpsl
mov
fcmovnb
pop
mov
lock
lcall
mov
icebp
loopne
sbb
jo
push
es
shll
dec
pop
sub
jno
je
lock
cmpsb
std
arpl
or
cmp
mov
pop
push
lock
sub
mov
out
scas
cld
mov
sahf
mov
mov
adc
push
adc
popf
dec
xor
mov
repnz
mov
cmp
pop
sbb
mov
lret
lret
jno
sbb
lock
xchg
hlt
adc
xlat
jo
mov
mov
cmp
cmpsl
popa
or
and
test
hlt
mov
stos
icebp
jl
enter
pop
stos
mov
xchg
and
sbb
add
and
push
rcr
pushf
mov
mov
push
pop
cmc
repnz
testl
dec
icebp
jae,pt
inc
mov
leave
icebp
shl
mov
xorb
test
stos
sub
movsb
fsts
test
xor
jp
mov
loope
shl
push
mov
add
mov
into
push
adc
pop
pop
dec
mov
dec
shl
add
mov
ljmp
ljmp
fadds
imul
dec
xor
lret
jno
int
pop
das
imul
icebp
jp
pushf
jno
call
xor
push
fs
in
cmc
aam
and
leave
xlat
dec
jbe
jo
mov
notl
mov
jp
jp
scas
mov
mov
xchg
pop
inc
iret
hlt
je
sbb
outsl
dec
xchg
loopne
fcomip
test
es
pop
test
faddl
xchg
mov
repz
sarl
lret
mov
cs
push
add
je
fidivl
push
scas
js
xchg
fdivl
in
je
mov
add
fldt
insl
add
fadds
ret
lahf
add
jae
pop
mov
out
dec
in
lods
push
sbb
pop
mov
xor
std
dec
push
jg
adc
repnz
dec
cwtl
daa
cmp
adc
leave
sbbl
pusha
pop
mov
cmp
push
ret
xorb
std
pop
or
pop
mov
jbe
lods
cld
mov
fiaddl
add
jl
fisubrs
dec
jb
jle
push
lods
pop
pop
mov
es
stos
cli
jmp
pop
gs
or
imul
insl
inc
nop
ret
ljmp
xchg
aaa
imul
dec
mov
insb
jecxz
jbe
cmc
sbb
divl
pop
sbb
sbb
push
adc
mov
jmp
gs
or
movsb
bound
roll
mov
dec
push
xor
mov
data16
scas
sbb
lret
inc
mov
or
fs
xchg
sub
mov
in
lret
cli
mov
jmp
xchg
sbb
imul
fcmove
or
outsl
xchg
xor
add
fsubl
ljmp
inc
adc
sbb
insb
rcrl
dec
mov
and
aad
inc
clc
sti
daa
xchg
push
gs
das
pop
jl
ficompl
dec
int3
andb
andb
jb
shrb
inc
test
leave
adc
cs
xor
into
arpl
popf
or
and
jbe
xchg
ss
loop
inc
cmc
mov
add
int
xlat
and
dec
mov
iret
sbb
push
gs
pusha
arpl
idivl
mov
push
sbb
ja
mov
inc
add
sub
add
out
outsb
jmp
pushf
enter
xchg
push
shl
sahf
shr
js
jle
pop
pusha
sbb
and
mov
pop
pop
inc
xor
nop
xchg
stc
push
aad
lea
pop
sti
icebp
test
or
js
je
adcb
push
cmp
cmpsb
pop
jns
push
out
cmpsl
lret
mov
lcall
cmc
testb
bound
add
xor
mov
pop
stos
dec
jno
ficoms
push
pop
addr16
jne
hlt
ss
and
insb
mov
rorb
mov
in
sahf
dec
dec
aaa
dec
sbb
add
fdivs
xchg
and
ss
sub
dec
adc
xchg
mov
xlat
pop
and
and
mov
push
add
lahf
push
inc
shr
lods
mov
mov
pop
dec
repnz
pop
icebp
jmp
js
fst
lock
sti
cmp
aam
jae
mov
cld
cmpsl
rcl
repz
fstpt
cmpxchg
inc
outsb
cmp
mov
inc
movsl
xor
jmp
cmp
cmpsb
mov
loope
lcall
call
sub
rcrl
xchg
shrb
loope
jb
fildll
jecxz
mov
imul
mov
push
or
iret
xchg
jmp
out
and
mov
lcall
mov
push
test
mov
daa
test
in
xor
push
jnp
int
mov
movsl
adc
xchg
add
lock
out
add
add
xor
adcb
mov
cmp
fwait
jae
sub
jno
mov
ja
jle
cmc
mov
jne
jmp
xchg
or
sbb
adc
cmp
xchg
sbb
mov
in
inc
inc
adc
rclb
cmpl
cmp
mov
xchg
movsl
pop
jge
or
fimuls
aad
dec
cmp
pop
push
mov
jno
rolb
imul
cmp
mov
mov
dec
lea
addl
push
xor
or
test
jo
cltd
ja
add
push
cmpb
icebp
jnp
dec
push
stos
fsts
out
add
and
insl
jne
ret
cmp
xor
clc
ss
jecxz
jle
cmp
outsb
cwtl
mov
push
push
test
lret
lret
inc
sub
sar
add
sbb
jno
pop
dec
shll
mov
icebp
jmp
dec
jmp
push
push
aam
repz
sarb
xchg
xchg
push
insl
loopne
cltd
cli
pop
mov
inc
push
mov
dec
mov
cmp
das
xchg
addl
adc
lea
mov
add
sub
push
into
mov
push
add
pop
pop
inc
jb
sub
jae
outsb
jge
movsb
loop
pushf
dec
cmp
imul
ljmp
pop
dec
adc
loope
add
cmp
cmp
test
std
cli
cmp
leave
sbb
lea
imul
and
in
inc
and
imul
xchg
inc
shll
int3
imulb
push
xchg
pushf
pusha
stos
cmp
lock
test
or
incl
sbb
scas
dec
les
sub
aam
iret
into
push
jp
adc
leave
pop
lods
mov
fldl
push
or
ret
movsb
pop
push
push
dec
popa
or
pusha
xchg
ss
push
es
adc
adc
lea
or
stc
aaa
mov
sub
into
test
mov
mov
jno
add
mov
xchg
aad
adc
std
stc
fisubrl
scas
mov
adc
fnstsw
push
jle
addl
out
pusha
nop
fistps
in
scas
push
push
out
cmp
addr16
fcmovnb
add
xchg
sbb
mov
sub
mov
addl
cwtl
cmp
stos
push
xor
movsl
mov
rol
testb
xor
hlt
leave
pop
jmp
dec
into
or
dec
push
leave
and
inc
xchg
data16
sub
jb
push
int3
cld
xor
inc
shrl
cmpsl
push
inc
pop
pop
push
xchg
xchg
xor
mov
lcall
xchg
xor
cld
sbb
aam
pushf
mov
daa
pop
lret
sbb
mov
jp
fdivrs
pushf
imul
call
int
shlb
inc
iret
push
in
sub
jg
adc
es
flds
push
xlat
xchg
ficoml
or
cltd
sbb
or
xor
shrb
sbb
lods
mov
outsl
xor
cli
inc
mov
ret
sub
shlb
int3
insb
inc
or
into
jo
jp
dec
out
inc
and
cltd
sub
out
sub
cmp
lock
aam
mov
xchg
testb
add
mov
nop
dec
xor
aaa
and
dec
fsubs
fwait
rorb
std
sub
cmp
lods
test
lock
cld
jmp
mov
xor
shlb
rolb
int
mov
jl
jecxz
lret
mov
insb
out
push
xchg
nop
jl
adc
xchg
rclb
test
lods
or
jmp
out
and
jecxz
in
dec
dec
add
mov
pusha
das
cmp
xor
cmp
iret
or
aaa
lret
jge
pop
test
mov
stos
sbb
jp
daa
push
inc
aas
dec
test
sub
cmp
mov
outsb
shlb
cmpsl
xchg
testb
das
push
movsb
dec
test
push
mov
inc
adcb
adc
bound
fbld
sub
pop
testb
jno
cmpb
jne
les
ret
loope
std
data16
int
sbb
hlt
iret
stos
enter
cmp
shl
xchg
cmp
cmp
xchg
adc
sbb
out
mov
lcall
add
dec
push
cmp
call
sub
aaa
add
dec
pusha
add
int3
jmp
jne
add
xor
leave
xor
lahf
push
push
lahf
jae
dec
shlb
pop
jb
sbb
adc
stos
xlat
jmp
pop
jmp
jne
jecxz
mov
mov
cmp
ret
mov
stos
sub
lods
cmp
loope
pop
or
mov
int
lcall
sub
loope
cwtl
pop
test
mov
inc
xchg
cli
das
pop
imul
in
icebp
stos
in
aam
pop
jmp
ljmp
in
nop
popf
pop
push
jae
xor
xchg
repnz
sub
mov
aam
fimull
sbb
bound
shrl
int3
ds
mov
jb
test
stos
xchg
into
lcall
mov
cld
dec
and
cmp
sub
aam
jmp
cmpb
in
xor
cli
xor
addr16
imul
dec
jo
inc
sub
jecxz
test
jns
movsb
pop
testb
mov
lret
xchg
jge
sbb
dec
daa
pop
add
mov
sbb
or
lods
and
inc
iret
gs
jl
jae
movsl
jecxz
cwtl
pop
lahf
hlt
mov
stc
mov
sbb
jo
add
mov
cmpsb
fimull
xor
pop
pop
xorb
loopne
push
dec
jno
add
inc
daa
repz
leave
imul
sub
inc
mov
out
cmp
mov
mov
pushf
lahf
out
push
out
cmpsb
xchg
jmp
scas
push
pop
sarb
cli
fcoms
cli
jb
mov
ss
add
movsb
pop
mov
jae
jmp
jg
mov
cltd
xlat
in
std
xchg
add
add
int3
rcrl
mov
pop
lock
add
mov
inc
mov
or
push
outsb
mov
shrl
sbb
in
insl
pop
arpl
mov
pushl
mov
mov
add
into
mov
dec
fcompl
fisttpl
es
je
mov
inc
add
jle
xchg
jg
dec
shl
xor
cli
pusha
lods
and
push
xor
xor
fs
jmp
lods
clc
mov
or
rcll
sub
in
ret
mov
shll
mov
push
push
dec
xchg
jno
mov
outsl
or
jo
mov
icebp
inc
add
mov
rcr
fsubrl
clc
jg
in
adc
sub
mov
int3
out
xor
jge
imul
inc
imul
mov
adc
mov
cmp
in
neg
sub
pop
cmpsl
jno
pusha
mov
fcmovbe
push
inc
in
add
stc
mov
jle
loopne
out
push
add
mov
in
cld
or
inc
pop
or
sti
lods
adc
js
and
push
jb
mov
inc
repnz
mov
das
rcl
jnp
addr16
or
dec
adc
in
dec
mov
mov
mov
push
das
int3
test
xchg
pop
mov
lcall
iret
sbb
push
int
jge
sbb
out
mov
or
pop
and
mov
inc
cmpl
adc
cltd
dec
inc
hlt
push
cs
roll
jo
dec
jbe
pop
loop
cltd
jb
fldt
jno
cmp
imul
pop
orb
movsb
daa
mov
sub
imul
pop
pop
imul
xor
xchg
les
xlat
movsb
xor
int
ficompl
lcall
in
cwtl
pop
add
and
xchg
fs
mov
aad
push
sub
add
mov
pop
scas
sub
lods
adc
ret
mov
rclb
mov
jge
mov
pop
outsl
xor
mov
add
ds
mulb
push
inc
mov
daa
pop
mov
cmp
repz
cwtl
daa
ja
movsb
repz
es
in
mov
popf
out
rcrl
pop
jbe
shr
shl
pop
mov
out
imul
or
inc
stc
push
loope
leave
jnp
sub
gs
lock
push
les
icebp
xchg
mov
and
imul
mov
mov
cli
mov
stos
cmp
nop
clc
add
sarb
jl
hlt
xor
orl
out
aas
es
pop
ljmp
jnp,pt
dec
pop
jge
test
and
in
push
test
bound
daa
iret
pop
sbb
lahf
push
cmc
cmp
mov
pop
add
xor
pop
mov
movsl
xlat
add
lcall
mov
pop
sti
sub
sbb
ds
cs
daa
pop
jae
lret
cmpsl
pop
adc
and
in
jns
movsl
push
lods
cmp
push
and
out
shlb
xchg
leave
les
and
push
in
mov
stc
dec
and
jnp
fmuls
ljmp
lahf
sbb
sbb
stc
imul
xor
push
test
add
fmull
mov
mov
or
pop
push
not
adc
sbb
bndldx
xor
popa
adc
mov
icebp
cmp
or
and
jo
xor
cltd
push
jae
cld
ljmp
vandnpd
scas
cs
add
mov
pop
cli
lods
or
mov
dec
or
loope
jbe
test
cmp
popf
jne
push
pop
pushf
fisubl
jo
jge
push
shl
adcl
inc
mov
push
jp
cmpsb
in
mov
fistps
xchg
mov
dec
lea
ffreep
mov
ljmp
add
add
xchg
inc
inc
cli
inc
mov
push
cmp
dec
fiadds
lahf
arpl
adc
mov
jo
mov
inc
test
adc
jmp
sbb
adc
fcomps
pop
push
movsb
mov
mov
mov
mov
es
lahf
mov
mov
aad
lds
into
push
sub
popa
fdivrs
sahf
and
mov
loop
pop
xchg
or
push
dec
int3
inc
adc
adc
cwtl
or
outsb
jbe
loop
aad
jae
shrb
mov
pop
fistps
fisttpl
mov
aam
loope
and
mov
int3
cmp
js
clts
xor
or
jnp
inc
inc
pop
push
std
fs
xchg
or
push
stc
call
pop
jnp
xor
xor
and
test
xor
and
arpl
mov
mov
fdivr
in
aas
stos
adc
add
sbb
imul
imul
subb
jle
in
xchg
outsl
int3
push
dec
adc
loop
xor
test
xor
add
mov
outsl
mov
lcall
add
push
push
lret
dec
data16
es
dec
mov
ljmp
sbb
mov
sbb
inc
pop
test
xchg
ret
mov
jnp
test
mov
lret
adc
jo
add
xor
cmp
jl
add
lock
adc
cmpsb
into
outsb
push
repnz
pusha
outsb
xchg
insl
aad
notb
xchg
mov
or
jmp
shll
xchg
jmp
or
jb
cmp
mov
or
insb
lods
push
cmp
pop
imul
pop
stos
test
or
dec
mov
sub
stos
jle
pusha
jp
mov
or
addr16
jns
std
jle
outsb
adc
imul
or
sahf
adc
fimull
out
loopne
xchg
xor
xchg
mov
push
bnd
dec
or
mov
add
xchg
mov
adc
cli
sub
repz
push
or
jne
sub
push
insb
lahf
mov
inc
or
pop
jge
mov
mov
xor
xchg
mov
test
lds
xchg
imul
jecxz
push
jl
mov
dec
jbe
rcll
das
ljmp
movsb
lods
inc
cltd
add
push
ds
xchg
sbb
or
arpl
into
jns
push
jb
mov
iret
pop
jecxz
pop
mov
mov
inc
mov
mov
out
imul
dec
in
icebp
std
loopne
ret
sbb
pop
cmp
adc
mov
dec
cmp
sbb
cld
cmpsb
in
mov
jmp
sbb
jo
sahf
loop
test
dec
int
mov
add
insl
in
aam
lods
loope
mov
lret
push
cmc
sbb
mov
push
pop
cmc
mov
or
xor
push
notb
xor
mov
mov
push
insb
aas
xor
xor
dec
ret
shrl
enter
shr
out
dec
mov
pop
cld
and
loope
mov
and
mov
cld
lock
cwtl
testl
xor
xchg
dec
addr16
or
rol
repnz
cmp
fbstp
add
mov
sub
inc
imul
and
sub
repnz
add
aas
stc
xchg
fidivl
jg
pushl
add
mov
and
bound
xor
xorl
hlt
adc
les
push
daa
sti
inc
sub
clc
push
xchg
movsb
outsb
gs
adc
imul
mov
and
pop
xchg
ret
xor
xchg
sbb
or
add
fisubs
das
mov
stos
sbb
sub
mov
imul
lret
sbb
jmp
out
rolb
xor
clc
outsb
push
xchg
fsubr
repnz
adc
or
cwtl
pop
push
mov
adc
mov
mov
fldl
cmp
add
sub
test
cmp
shll
adc
test
fidivl
jle
out
and
hlt
cli
jne
js
shll
enter
cmp
push
fisttps
jbe
fcoml
out
mov
pop
repnz
nop
ret
push
mov
mov
and
cmp
sub
add
mov
fsubs
ds
lahf
mov
push
or
pop
mov
push
pop
popa
inc
test
icebp
sbb
aas
push
test
cmp
sub
cmp
jg
out
pop
outsb
xchg
arpl
mov
popf
add
outsb
inc
pushf
fnstcw
in
add
pop
loope
push
push
mov
or
pop
sbb
mov
mov
pop
mov
in
push
popa
divl
shl
pop
dec
sbb
subl
lcall
js
repnz
push
xor
aaa
neg
arpl
ds
adc
adc
mov
push
push
jl
sbb
jo
push
push
leave
fidivl
push
outsl
mov
dec
loope
fnstsw
aas
lea
stos
dec
ja
call
dec
jo,pt
insl
jp
mov
jmp
outsb
mov
pop
push
orb
pop
rclb
mov
or
xchg
loop
adc
jp
scas
adc
mov
data16
push
mov
and
adc
shll
mov
icebp
pushf
sahf
les
push
push
and
jl
mov
xchg
lods
repz
cld
cmc
sbb
pop
sbb
repz
mov
push
test
cltd
outsb
push
out
data16
pop
scas
sidtl
xchg
aaa
xlat
clc
xor
dec
cmp
mov
xor
mov
xchg
js
lcall
adc
lds
inc
xchg
xor
add
shll
xor
ficoms
or
mov
stc
mov
push
adc
mov
aaa
mov
jmp
leave
sti
mov
fimull
jmp
imull
hlt
cmp
in
sub
popf
mov
jecxz
bswap
push
loope
add
cmpsb
out
cmp
xchg
mov
mov
out
orl
sbb
aad
inc
jmp
add
dec
fildl
mov
push
mov
xor
daa
sub
xchg
mov
sub
lret
push
data16
inc
fsubs
cmp
cs
mov
sub
lret
outsb
jno
xor
sbb
les
clc
movsb
rol
inc
nop
movsl
es
sbb
stos
adc
and
gs
ret
int
in
inc
les
mov
mov
push
stc
icebp
lret
fcoms
mov
add
jo,pt
mov
lock
and
mov
mov
sbb
daa
cmpsl
ffreep
add
outsl
xor
and
prefetch
push
repz
xor
scas
mov
or
sbb
xor
xchg
cmpb
xor
mov
shl
fsubl
popl
sahf
inc
rclb
adc
out
mov
jle
inc
cld
push
enter
inc
xchg
or
mov
mov
je
bound
shrl
push
jae
dec
ja
xor
rorl
jp
adc
enter
mov
jb
xorb
xchg
sahf
fs
jae
xchg
int
jmp
mov
movl
mov
mov
scas
jecxz
inc
scas
xchg
cmp
fistpl
sub
cmpsb
push
dec
and
add
sub
mov
jg
cmpsl
lods
adc
xchg
scas
jle
and
ds
nop
add
adc
mov
outsl
push
push
jg
mov
dec
adcb
repnz
imul
cmp
jo
dec
test
inc
aad
je
sbb
fsts
jns
or
adc
stos
pop
out
cmpsl
xor
push
shr
cmp
in
pop
pop
test
js
ss
sbb
test
mov
loope
sbb
lods
fdivp
lods
insb
pop
lock
push
mov
or
mov
sbbb
nop
bound
sub
lahf
imul
scas
movsb
sahf
cltd
in
stos
imul
test
les
shll
out
das
xchg
dec
fstpl
js
arpl
out
pushf
xlat
mov
in
mov
ljmp
hlt
ja
fs
mov
lea
insb
cmp
cmp
xor
and
shlb
rclb
fistl
stos
jae
cs
aas
movsb
mov
push
dec
popf
jg
xor
inc
fneni(8087
fildl
push
les
std
jb
jb
std
pop
subps
mov
int3
pop
pop
pusha
push
and
jle
daa
je
jp
sub
jb
mov
add
mov
sbb
mov
and
pop
fucomip
mov
gs
imul
sbb
mov
jb
in
into
and
in
mov
add
adc
cwtl
and
xchg
into
arpl
das
mov
iret
push
sti
sbb
jbe
dec
sbb
aam
ret
sbb
lcall
iret
ficoml
cld
add
push
dec
ret
mov
subl
js
subb
insl
nop
pop
push
notl
int3
dec
shll
jge
xchg
out
xor
out
mov
adc
dec
fsubl
and
outsb
pop
or
in
fisubs
aas
push
cmp
insl
adc
out
pop
adcl
xlat
xor
into
daa
jg
mov
rorb
sbb
cld
mov
xchg
dec
outsb
push
push
mov
push
shlb
pop
movsb
inc
pop
adc
scas
sti
sub
add
mov
stc
movsb
jmp
out
push
pushl
sbb
outsb
repz
iret
insb
or
aad
mov
inc
out
mov
daa
sbb
pop
dec
sti
aad
insl
xchg
jbe
lds
movsl
pop
js
cmp
pop
stos
fisubrl
mov
cmc
dec
sti
sbb
shlb
sub
adc
mov
loope
insl
jmp
in
enter
popf
pusha
imul
xor
xor
shlb
or
aad
fcomip
pushf
adc
hlt
stos
sub
push
xchg
out
jg
xor
bound
mov
mov
in
test
and
sbb
je
xchg
jg
and
jl
lret
psubsw
dec
int
mov
xlat
pop
push
mov
cmpsb
xchg
push
sarb
and
sub
in
mov
lret
int
xchg
int3
cld
fisubrl
mov
xor
pop
aad
les
adc
jbe
lea
pop
std
jno
das
jnp
dec
loop
idivb
enter
push
add
popf
cli
shlb
iret
push
subl
pop
loopne
test
or
sub
sub
cmp
in
sub
leave
mov
add
xchg
adc
pop
ljmp
mov
push
cmp
sub
cmp
mov
inc
or
sub
jge
ljmp
leave
xor
out
inc
ror
icebp
add
fldcw
mov
fstps
inc
test
mov
bound
xor
aas
lcall
push
dec
loopne
jns
xor
iret
jno
push
jne
das
xor
shr
mov
xor
les
and
dec
jmp
cmpsl
fists
andl
add
lods
imul
mov
mov
into
mov
cmp
lcall
aaa
loop
and
adc
sub
lock
fcmovbe
movsb
pop
mov
inc
mov
add
pop
mov
pop
jl
add
lea
add
push
aas
lret
jmp
insl
mov
insl
pop
cmp
jb
leave
call
mov
cmc
pop
scas
pop
xchg
and
int3
push
dec
jo
icebp
jl
lcall
jmp
push
cwtl
icebp
sbb
orb
jne
clc
pop
mov
pop
call
sub
push
push
and
addb
lret
mov
les
mov
sbb
push
int
pop
addr16
loop
rclb
xchg
sbb
inc
je
xchg
push
pop
inc
lds
arpl
lock
jb
xchg
sbb
loop
mov
js
cmp
mov
pop
cmpsl
push
pusha
pop
mov
mov
cmc
xchg
outsb
or
mov
and
dec
pop
je
imul
loope
cmp
dec
and
dec
sar
mov
jmp
sub
icebp
xchg
pop
xchg
adc
push
daa
or
jle
loope
fmull
push
fldl
sub
adc
scas
popf
imul
negl
dec
xchg
lods
cmp
loop
outsl
xchg
fdivrl
insb
jbe
andl
notb
jge
xchg
xchg
push
mov
insb
mov
fldcw
pop
lds
int
inc
pop
pop
pop
pop
rcrl
sbb
mov
cli
test
in
pop
hlt
insb
loope
inc
imul
jg
insb
loop
and
std
dec
loop
xchg
arpl
add
adc
mov
outsb
movsl
ja
ds
and
pop
ljmp
and
iret
in
add
addr16
rcll
dec
rorb
xchg
mov
arpl
bound
fsubr
rorb
jge
pop
xchg
adcb
adcb
add
orb
pop
cmpsb
dec
mov
push
sahf
test
cwtl
in
aam
inc
pushf
adc
mov
xor
inc
sbbl
cs
inc
shlb
sbbb
mov
fsubs
aad
jns
inc
daa
decb
mov
ror
icebp
aad
cmp
push
jae
scas
outsl
and
jmp
cltd
orl
adc
cmc
popa
push
push
mov
mov
mov
les
rcr
mov
push
push
adc
cwtl
sbb
test
jne
les
cmp
arpl
popa
cld
roll
mov
lea
pop
inc
or
adc
fs
std
bound
pop
lahf
pop
mov
in
insl
xor
ja
push
fwait
das
lea
xor
mov
adc
in
or
rorl
fwait
cltd
jb
jmp
roll
mov
arpl
and
test
mov
lods
xchg
cli
vshufps
sbbb
mov
xor
popa
lds
xchg
js
lahf
scas
or
mov
xchg
cwtl
aam
cmc
fwait
clc
mov
ficoms
inc
pop
push
les
inc
cmp
add
movsb
out
mov
aaa
iretw
sbb
lods
push
pop
sbb
popa
scas
lcall
data16
mov
in
imul
add
cmp
sbb
lret
and
stos
mov
fdivrl
sbb
xor
lcall
inc
xchg
out
jge
mov
imul
jne
sbb
mul
jle
sub
popf
add
add
fwait
repnz
and
sub
inc
lret
sahf
aaa
leave
in
shrl
iret
pop
xchg
adc
mov
xor
pusha
adc
inc
add
fsubs
sbb
mov
xor
adc
or
inc
push
and
mov
out
arpl
pop
stos
cmpl
imul
sbb
jl
adc
frstor
into
daa
fildl
or
arpl
inc
insb
mov
out
in
add
data16
mov
ja
and
mov
xchg
xchg
and
xor
sahf
mov
cmpb
xor
mov
mov
and
pushf
xor
lea
jb
push
dec
adc
pop
repnz
cmpsl
xlat
add
out
adc
and
adc
and
outsl
inc
mov
bound
subb
inc
call
inc
shll
movsb
aad
xchg
mov
or
jl
mov
mov
sbb
push
jno
adcb
sbb
mov
sub
mov
popa
push
xor
lods
adc
pop
lahf
cmc
pop
adc
xorb
push
arpl
jmp
xchg
dec
clc
mov
cmp
mov
sub
inc
push
gs
jne
pop
dec
lret
in
add
stos
loop
cmp
in
pop
or
mov
jno
pusha
sbb
iret
movsb
fldt
mov
mov
mov
pop
stos
sbb
xor
xchg
and
jle
sbb
jnp
or
outsl
pop
mov
pop
push
mov
pop
scas
movsl
out
into
sub
pop
cmp
xlat
xchg
inc
movsl
leave
cmp
fcomps
jge
mov
call
xor
popa
shrb
les
mov
mov
leave
leave
out
lods
adc
mov
rol
test
aad
bound
mov
scas
xorl
test
adc
pop
loopne
bound
pop
fsubrs
roll
push
mov
mov
cld
mov
push
push
mov
rorl
pop
mov
test
psrlq
push
inc
pop
data16
mov
xor
sub
xor
jne
add
shlb
fstps
ss
pop
in
hlt
xor
popa
mov
dec
jge
jle
scas
mov
ret
test
add
or
adc
mov
scas
repz
in
in
or
in
mov
adc
pop
test
dec
aad
add
xor
ja
les
cmpl
xchg
mov
jmp
fisubrl
loope
mov
fisubl
ret
mov
xor
movsb
jae
and
and
xor
push
scas
pop
rclb
xchg
pushf
adc
jnp
insb
xchg
lods
add
push
out
and
sub
mov
push
cmpsl
push
mov
mov
pop
jle
dec
push
push
push
push
ret
push
cli
mov
jle
adc
mov
rorl
or
push
sub
jo
or
push
mov
xchg
lock
xor
int
pop
pop
or
icebp
addr16
inc
js
pop
loopne
sbb
xchg
push
dec
mull
jle
or
jnp
push
inc
ja
aad
mov
subl
dec
call
cmpsl
cli
mov
push
ja
and
sub
adc
lret
inc
mov
cmp
aas
popf
pop
cmovns
sub
dec
mov
add
jecxz
sub
xchg
scas
jns
out
mov
xchg
loope
movsl
dec
jle
dec
rolb
and
shll
das
xor
mov
mov
aas
jb
aas
and
cmp
outsb
pop
mov
sub
test
inc
in
sub
addr16
push
or
mov
fdivs
repnz
cmc
shld
bound
inc
pop
push
xchg
sub
pop
xor
cld
cmp
add
enter
mov
andl
add
push
and
mov
mov
decl
repz
sarl
jg
sub
mov
loop
lret
popa
sti
xor
arpl
dec
jecxz
loop
and
jg
test
jp
xlat
sbb
pushf
inc
sbb
cmp
add
dec
mov
stos
iret
push
pushf
repz
test
xor
mov
xor
sub
mov
mov
cmp
xchg
add
push
dec
pop
rcll
addl
jecxz
sub
mov
xor
and
xlat
pop
or
cmpsb
jge
es
sbb
mov
outsb
mov
add
leave
jno
pop
std
xchg
leave
xor
jecxz
jl
rcrb
leave
xchg
xchg
xchg
cmpsl
ds
mov
push
jge
daa
jg
testb
sti
cmpsl
xchg
sub
mov
mov
sbb
mov
shlb
enter
or
dec
jmp
inc
fwait
pop
cmp
popf
pusha
push
push
mov
stos
pop
dec
or
adc
mov
fwait
xchg
aad
out
sub
push
dec
cltd
test
jl
mov
cli
adc
in
mov
inc
ret
pop
cmpsb
in
mov
inc
inc
nop
xchg
xor
mov
xor
cmc
inc
jmp
xchg
lahf
stos
or
scas
cwtl
cwtl
push
push
mov
pusha
not
cmpsl
jp
mov
aam
gs
cmp
sub
xchg
cmp
imul
mov
orl
mov
cmp
jp
fwait
test
mov
cwtl
cmc
adc
int
push
in
and
and
push
mov
mov
jl
jnp
sbb
xor
popa
movsb
xchg
in
out
sbb
xor
sahf
and
int
add
cmpb
mov
addr16
lea
xchg
push
mov
or
sub
scas
loopne
in
aaa
inc
jp
ret
adc
dec
shlb
les
in
cmpsb
int3
out
mov
push
mov
enter
add
mov
mov
and
ja
outsl
mov
lea
roll
icebp
bound
cmp
jle
fldenv
mov
sbb
cmp
test
rol
jecxz
inc
mov
ret
ss
dec
xchg
repz
fldt
les
dec
adc
fcompl
aaa
sub
hlt
jns
jnp
push
les
cmpsb
push
js
add
mov
mov
xchg
loop
cmpsb
imul
ja
insl
test
mov
insb
fnsave
sbb
jle
ljmp
pop
lret
pop
dec
and
movsl
mov
jo
mov
leave
mov
cwtl
jbe
or
adc
sbb
test
cmpsl
addr16
and
scas
int3
dec
dec
and
in
lea
movsl
pop
inc
das
movsb
pop
push
ficompl
sub
xchg
pop
loopne
lret
pop
sar
cmp
add
in
xchg
iret
loopne
and
sahf
sti
mov
fnstsw
in
roll
or
loop
insb
push
mov
in
rolb
sbb
mov
add
ljmp
lods
dec
and
sub
mov
mov
fwait
scas
jns
xor
cmp
insb
in
push
push
sbb
enter
mov
loop
jae
jo
popa
push
repz
cmp
mov
dec
les
loop
das
mov
sbb
adcl
in
sbb
aas
mov
ficomps
mov
push
push
insl
aad
enter
pop
inc
out
mov
das
sbb
cs
fistps
push
fbstp
mov
jge
jmp
mov
inc
int3
pop
adc
iret
or
pop
cmp
nop
pop
jl
outsl
lods
mov
mov
mov
imul
jae
pop
fwait
ja
call
cmp
sub
or
inc
lcall
mov
iret
cmpsb
sbb
fimuls
aad
push
xchg
movsl
movb
inc
xor
pop
sbb
xor
jno
push
inc
shlb
mov
sar
popf
pop
sub
pop
test
adc
sub
adc
mov
xor
and
sbb
or
mov
xchg
inc
nop
icebp
ja
out
and
data16
and
push
ret
push
add
pop
enter
jb
mov
add
push
add
mov
mov
andb
jg
scas
std
call
cld
je
xlat
or
imul
push
or
scas
xchg
mov
jne
shll
sbb
popf
jmp
mov
call
mov
lret
loop
jmp
aad
call
jle
dec
enter
aaa
pushfw
lods
stos
call
sub
popf
test
enter
int
ja
jmp
insb
scas
mov
out
data16
pop
inc
movsb
popf
xor
fxch
lcall
pop
fsubs
ficoml
mov
pop
xchg
shr
jno
push
mov
sub
push
cmpsl
in
fnstcw
std
fwait
leave
icebp
mov
cmc
loope
lahf
ret
push
mov
mov
clc
test
fwait
mov
rcll
push
cmp
jg
shll
and
jmp
mov
xchg
lret
sub
or
sub
sti
push
mov
push
adc
fbstp
shl
cmp
jo
pop
xchg
jno
mov
mov
mov
and
dec
loopne
sbb
popf
leave
xlat
shrl
outsl
aad
xor
lahf
inc
mov
jmp
sbb
es
jmp
aas
decb
lock
loop
dec
mov
gs
int3
jb
mov
repnz
jmp
fisttps
jg
jl
sbb
mov
lret
mov
clc
jl
and
mov
pop
icebp
dec
std
mov
in
or
adc
rcl
add
xor
inc
adc
xor
insl
sti
lods
mov
lcall
xlat
icebp
xor
sub
xchg
jmp
insb
cld
pop
or
fdivs
es
push
in
divl
xorb
pop
mov
in
pop
mov
enter
pop
sbb
sbb
pop
sbbb
call
mov
cmpsb
push
out
sub
pop
hlt
jo
push
sub
addl
jbe
mov
add
test
out
int3
fs
inc
arpl
add
int
call
inc
addr16
lods
inc
sbb
and
adc
jnp
cmp
shlb
nop
jo
fwait
inc
clc
jae
int
jnp
lahf
jmp
adc
out
out
fs
xchg
call
sbb
sub
cmp
mov
in
sahf
pop
push
dec
pop
inc
or
fwait
in
and
mov
cmp
rcrl
dec
fnstsw
sub
xchg
push
cmc
lret
push
or
iret
jl
lahf
jne
add
xor
orl
sub
sub
mov
insb
clc
sbb
insb
hlt
adc
scas
arpl
push
adc
push
sbb
leave
or
data16
mov
jae
xchg
inc
gs
call
dec
mov
aad
dec
mov
mov
in
add
add
mov
lret
add
add
mov
dec
sbb
inc
mov
mov
mov
xor
in
xor
ljmp
sbb
sbb
movsb
das
aam
incb
sbb
out
inc
jle
fimuls
mov
xchg
cwtl
in
mov
inc
mov
or
inc
push
mov
repnz
fsts
add
lcall
in
stos
mov
shl
pushf
adc
and
sbb
jb
or
pop
aaa
xor
mov
out
daa
xchg
mov
mov
je
dec
pushf
lahf
jbe
pop
aad
scas
sbb
and
je
jo
sti
mov
addl
pop
xlat
adc
div
imul
sub
xchg
jnp
xchg
pop
aad
push
adc
enter
xchg
cmpsb
add
xchg
xchg
imul
xor
negl
fcmove
dec
jmp
and
inc
xor
cmp
outsb
test
jae
or
in
es
dec
out
xchg
mov
dec
or
lahf
daa
mov
and
imul
lret
lock
mov
loopne
ss
lret
add
mov
xor
fdivl
xchg
roll
sub
mov
aaa
enter
dec
ret
push
out
movsl
movsl
cmp
push
cld
lret
daa
outsl
mov
push
pop
and
jge
mov
in
out
push
lods
daa
adc
loop
lahf
or
mov
rcr
cmp
pop
call
mov
xor
pusha
xchg
adc
push
cmp
sub
mov
shl
lcall
pop
lret
out
push
insl
adc
movsb
adc
mov
lds
mov
push
mov
call
mov
in
mov
cmp
cli
test
pushf
fwait
adc
or
lret
sbb
jae
cmpsb
fiadds
mov
pushf
xchg
ja
dec
xchg
in
mov
ljmp
addb
and
icebp
repnz
jnp
jl
cmp
std
xchg
repz
cmp
fsts
loop
pop
fwait
sbb
sub
sub
pop
push
lcall
lea
cmp
mov
aas
sti
rcl
xor
cmp
dec
lahf
sub
jge
sbb
mov
mov
dec
fisubl
dec
insb
mov
fsubs
inc
push
sbb
iret
pop
cmp
lods
sbb
shrl
imul
sub
cmpsb
or
jns
repnz
popa
sub
xor
mov
cmc
mov
popf
adc
xor
cli
jmp
dec
out
push
lods
push
and
into
jno
aas
pop
int
dec
ss
ficomps
push
sbb
adc
cmpsb
ds
sarb
cmp
out
je
addl
jmp
mov
cmpsb
adc
lahf
xchg
xor
lret
into
sbb
testl
cmp
adc
jmp
mov
bnd
bound
int3
jle
popa
mov
adc
jns
cmc
popa
sahf
and
sub
cwtl
xchg
imul
repnz
gs
jno
pop
cmpl
push
or
insl
jo
cmp
cmpsl
fdivs
and
es
ljmp
mov
insb
and
xchg
test
xchg
stos
push
cmp
and
push
pushf
test
shr
jmp
fcoms
sbbl
add
jne
dec
lods
and
inc
test
rcrb
push
xchg
mov
mov
xchg
xchg
jl
add
add
andb
pop
movsl
push
pop
inc
xchg
lods
pushf
jne
lds
push
das
adc
test
dec
cmp
int
insl
jns
ficompl
lea
mov
jecxz
and
add
idivb
add
js
flds
pop
jae
pop
fldcw
jne
jle
incb
incl
jecxz
std
cmpb
mov
xchg
xor
sahf
add
sti
dec
fidivl
cmp
xor
pop
sarb
or
mov
sbb
sbb
ss
jle
or
pop
arpl
rcrb
sti
cmpsb
mov
push
loop
sbb
int3
popa
mov
daa
sub
aam
xor
jns
pop
adc
push
xchg
roll
inc
sbb
adc
in
ds
adc
outsl
push
inc
push
outsl
xchg
adc
sbb
jbe
std
sbb
lea
cmp
repnz
int3
insb
dec
shlb
add
lret
mov
adcl
icebp
sbb
pop
sbb
dec
mov
nop
push
push
pop
dec
jecxz
aam
inc
pop
sub
imul
lret
fs
fsts
jno
ret
stos
sbb
xchg
mov
rol
add
cmp
mov
inc
std
rcll
popf
nop
mov
je
repz
cmp
cmp
mov
jl
jb
lods
je
repnz
jecxz
movl
cmc
adc
bound
inc
out
scas
jne
mov
cltd
sub
mov
fdivp
mov
cmp
mov
icebp
daa
cmpsb
pop
pushl
and
out
sbb
sbb
aaa
loope
out
fcmovb
shll
dec
pop
sub
xlat
push
jle
cmp
hlt
mov
inc
sub
mov
pop
lcall
cmc
xchg
shll
lcall
cmp
js
dec
faddp
movsb
xchg
xchg
mov
inc
fucomip
cmp
daa
fmuls
iret
xchg
pushf
pop
test
rclb
xchg
cmp
inc
and
add
cmp
inc
mov
mov
dec
repz
xlat
lds
test
mov
test
stos
add
test
lds
or
clc
es
shl
in
push
and
mov
push
push
xchg
ljmp
pop
dec
xchg
sub
fwait
cltd
xchg
fdivr
cld
pushf
insb
sbb
sbb
pusha
shl
jmp
sbb
les
das
xor
xor
lock
sbbl
xchg
nop
aaa
js
and
pop
add
add
outsb
imul
leave
xlat
cltd
xchg
pop
lcall
push
movsb
dec
lods
xlat
sub
add
add
or
andl
cld
bound
jo
in
pop
notb
mov
sbb
adc
xor
cwtl
lahf
sbb
xchg
adc
cwtl
cltd
scas
mov
int3
or
repnz
add
call
xchg
cmp
and
push
imul
bound
jmp
mov
push
xchg
pusha
dec
js
test
movsl
xor
mov
insb
push
or
xchg
in
mov
and
imul
push
test
push
dec
push
push
push
push
cmp
lods
ja
jb
repnz
repz
loopne
inc
pop
adc
les
xor
pop
sbb
or
lahf
sub
push
pop
mov
sbb
dec
jno
sbb
sbb
loop
and
adc
pop
data16
pop
sub
icebp
cld
into
xchg
xchg
pop
jle
int
in
imul
jge
mov
jns
fs
js
sub
mov
jge
sti
lret
es
gs
pusha
mov
mov
xorb
call
inc
xlat
jg
inc
cmp
cltd
addr16
popl
cs
in
inc
jmp
mov
subl
aam
inc
xchg
jb
cs
adc
dec
ljmp
push
movsl
mov
inc
jl
movsb
enter
add
jg
pop
pop
cmp
cwtl
inc
xor
push
pop
shll
or
test
ss
insb
data16
and
add
sbb
lret
lahf
xor
inc
roll
insb
inc
adc
int3
ja
enter
ds
outsb
sub
pop
cmpb
push
push
xchg
out
or
out
popa
out
push
repnz
cmc
sbb
outsb
inc
cmpl
cmp
test
xchg
xchg
scas
sbbb
iret
jnp
pcmpeqd
daa
jp
dec
cmc
mov
push
mov
mov
daa
repnz
mov
jne
pop
push
adcl
sub
cli
lods
in
hlt
xchg
rclb
pushf
pop
cmp
mov
fisubl
sbb
sbb
xor
jae
inc
lahf
push
or
or
xlat
mov
push
mov
fiaddl
xchg
or
dec
jge
mov
or
inc
call
and
mov
jmp
test
les
iret
jl
lea
call
mov
out
sti
add
cmp
sbb
pop
xchg
mov
call
mov
adc
mov
xchg
iret
lea
dec
fwait
gs
xchg
aad
mov
adc
sbb
test
lcall
jne
xchg
ljmp
xchg
pop
in
sbb
or
sub
arpl
cwtl
xchg
sub
jnp
push
mov
outsl
sahf
lock
andb
out
adc
in
pop
jp
inc
jl
fadds
sub
inc
and
jg
hlt
in
icebp
mov
cmpl
cmp
insl
fcoms
push
mov
jne
popa
dec
push
jo,pn
jmp
or
repnz
jno
daa
sbb
fs
sub
imul
xchg
inc
adc
inc
fistl
pop
mov
mov
aad
or
lods
es
aam
pop
mov
jbe
pop
jmp
xchg
fstpl
jp
mov
xchg
out
loopne
sub
clc
xchg
inc
push
cmp
dec
ds
sbb
push
int
pop
idivl
mov
hlt
inc
lods
arpl
sub
add
sahf
movsb
pop
leave
lods
fsubs
xchg
mov
lret
sahf
inc
sub
orl
mov
int3
mov
je
mov
and
ficomps
jbe
adc
je
pusha
mov
repz
es
cmp
sub
adc
xchg
dec
mov
movsb
lcall
sbb
cmp
arpl
out
lods
loop
ja
cmp
mov
sub
add
jne
and
notrack
or
mov
cmp
outsl
sbb
jo
jmp
dec
push
in
les
icebp
out
movsb
cmp
or
or
and
sbb
cmp
cmp
dec
push
push
cmp
fwait
jns
enter
add
adc
or
repz
adcl
inc
mov
data16
mulb
inc
lahf
xchg
push
pop
daa
sbb
lahf
outsl
mov
mov
xor
shlb
push
pop
add
xchg
dec
inc
sbb
push
sbb
add
aaa
imulb
cmpb
div
jecxz
lret
iret
xlat
fstp
lods
lods
gs
inc
popf
std
incl
push
ss
jo
daa
test
xlat
cmp
jl
jns
sbb
xchg
call
sti
mov
or
adc
test
push
scas
or
xchg
cmp
imul
out
and
dec
add
push
or
push
cmpsb
shrl
hlt
dec
rorb
out
or
cmp
dec
sbb
fwait
shll
fistps
stc
jbe
js
adc
mov
inc
pop
or
sarl
sahf
negl
dec
sti
out
loopne
push
xor
add
mov
jne
lahf
jp
push
xchg
iret
push
jp
inc
idiv
fucomp
sbb
add
icebp
rclb
outsl
adc
pop
flds
sysexit
in
inc
dec
fstpt
scas
cwtl
sahf
push
push
sub
neg
mov
pop
mov
pcmpeqb
stos
or
sbb
push
mov
outsb
shrl
jno
js
arpl
mov
or
sahf
adc
cmpb
mov
addr16
push
mov
in
push
test
jg
fcmovu
jb
pop
mov
dec
icebp
cmpsb
into
dec
fs
and
ret
iret
mov
dec
loope
xchg
pop
mov
stc
pop
jno
sbb
sub
je
push
sti
cmp
mov
fwait
adc
add
out
loopne
xchg
xchg
or
lods
add
xchg
adc
xor
inc
xor
push
movsb
lea
fimuls
sbb
and
jl
add
imul
xor
jns
sbb
mov
add
xchg
adc
push
mov
std
fistps
daa
test
push
fmull
out
push
int3
adc
pop
nop
jae
mov
xor
lahf
repz
daa
shrd
push
cmp
jecxz
inc
and
mov
sbb
adc
in
lods
fcoms
arpl
xchg
mov
mov
fdivl
dec
nop
and
jl
pop
mov
fcomps
imul
inc
or
or
stos
xor
cmp
inc
repnz
push
dec
mov
add
pusha
popa
icebp
or
push
test
or
jl
lods
pop
lcall
jbe
pop
mov
xor
loope
lock
inc
out
lock
jp
repz
push
dec
data16
dec
mov
dec
rclb
cmpsl
les
pop
jmp
icebp
bnd
adc
lds
pop
add
cmpl
dec
jecxz
sti
sti
inc
cmc
or
push
addl
jecxz
xor
sub
push
fdivrs
sbb
pop
dec
pop
dec
push
pushf
or
arpl
mov
les
mov
es
shr
jge
test
pop
sbb
mov
mov
mov
xchg
test
ficompl
dec
orl
pop
ficompl
fincstp
xchg
out
cmpsl
in
adc
mov
addr16
in
pushf
es
push
pop
mov
jns
pop
icebp
dec
mov
add
inc
mov
daa
inc
cmp
mov
push
push
cli
andl
adc
imul
xlat
fidivrl
mov
push
adc
mov
inc
xchg
lds
jl
in
enter
push
punpcklbw
test
inc
push
hlt
ja
je
ljmp
test
mov
sub
iret
sbb
xchg
out
mov
daa
shr
cltd
xor
mov
cwtl
mov
inc
add
sti
mov
leave
jne
clc
repnz
mov
pop
mov
xlat
push
xchg
arpl
push
jns
push
mov
movsl
pushf
jl
sti
xlat
push
xlat
mov
push
push
xchg
xor
push
xor
sarb
cwtl
in
add
ficomps
ss
mov
sub
hlt
sub
push
mov
repnz
pop
push
je
xor
xor
daa
or
or
mov
dec
addl
sbb
iret
add
lods
xor
lea
stos
inc
add
ss
fcmovne
arpl
pop
sarl
stc
mulb
mov
int
jb
out
xor
sub
mov
sbb
out
imul
stc
aas
cmp
aam
imul
nop
jo
je
scas
aaa
mov
xchg
inc
negl
xchg
rol
cwtl
sbb
or
sbb
mov
push
mov
and
std
lods
je
call
shl
dec
loope
lahf
cmp
push
out
mov
mov
popa
jns
in
test
out
lea
jmp
out
lock
aas
das
xor
sbb
lret
cmp
movsl
ja
aad
popa
call
stc
lods
incl
and
out
xor
or
stc
mov
sub
pushf
xchg
xor
into
and
dec
xor
jae
sarl
sti
and
stos
cmp
pop
inc
adc
mov
adc
aad
inc
dec
cmp
inc
jns
pop
push
jmp
popa
add
mov
movsl
dec
mov
xchg
divl
clc
add
lods
jg
int3
adcl
jmp
pushf
xchg
dec
cmpsl
xchg
xor
mov
loop
mov
pop
mov
jg
out
test
sti
fsubrs
lock
jl
bnd
cmp
or
adc
out
push
push
aam
ret
jp
jae
andb
shll
add
lahf
push
sub
orl
shrl
lock
ret
imul
fcomps
out
in
jecxz
xor
in
repnz
mov
inc
scas
add
insl
inc
fdivr
inc
hlt
cwtl
clc
test
sub
lods
dec
in
psubw
shll
push
sbb
jo
jge
dec
pop
inc
out
lcall
lods
mov
flds
scas
xorb
xor
pop
mov
or
pop
mov
aam
lock
mov
and
xchg
xor
ds
jecxz
pop
and
jnp
jns
rcr
xchg
add
testb
xorl
scas
int
mov
pushf
cltd
mov
ret
aam
add
and
sub
adc
jge
jle
or
sbb
nop
decb
pop
lahf
bound
pop
int3
in
xchg
jle
add
or
jle
loopne
outsb
inc
sbb
bound
mov
dec
call
cmp
pop
and
loope
mov
test
flds
lock
ficomps
ja
push
inc
mov
cmc
pushf
clc
xchg
and
sbb
xchg
sub
insl
movsb
popa
add
pop
lods
adc
pop
js
shrl
xchg
aaa
xchg
mov
mov
cwtl
or
ds
xchg
aas
mov
xor
movsb
dec
mov
cmp
cld
sbbl
push
fdivr
cmp
imul
lods
adc
leave
fwait
push
pop
inc
pop
and
mov
cmpsb
dec
push
mov
adc
adc
dec
jl
scas
icebp
inc
dec
ljmp
inc
add
pop
xchg
popa
subb
fcmovb
jg
sbb
cs
cmp
out
cli
cltd
aam
fsubrp
loop
daa
xor
mov
sub
scas
dec
arpl
adc
pop
ds
std
int3
xchg
xor
inc
imul
push
mov
in
inc
in
xor
adc
fs
push
shl
je
stos
out
or
rol
xchg
xchg
ljmp
and
mov
in
nop
test
sub
mov
jb
mov
mov
fisttpl
cmp
aas
in
cmp
mov
cmpb
or
mov
pop
sbb
mov
add
fsubs
sub
adc
pusha
fiaddl
scas
shrl
fmuls
mov
xor
cs
mov
pop
push
lds
test
push
cmpsl
test
fdivr
loop
pop
jb
sbb
ja
inc
enter
addr16
xchg
lahf
pop
cmp
jnp
xor
mov
push
jp
jbe
dec
sbb
out
movsl
or
inc
cltd
pop
lahf
sbbl
push
popf
push
xor
sbbl
out
imul
popf
aad
mov
jle
lret
pop
in
nop
fwait
test
fstpt
rcrb
mov
push
xchg
mov
clc
lods
xor
sbb
enter
orb
lods
cld
ret
dec
scas
jns
dec
or
je
xor
sub
mov
icebp
mov
cltd
add
lcall
cmpsl
pop
ret
pop
insb
mov
rorb
ds
jnp
out
jae
aaa
add
in
sti
insl
and
adc
scas
xchg
dec
jb
cmpl
std
push
jnp
jo
pop
inc
jno
mov
dec
jae
mov
fstps
sahf
pop
cmp
pop
mov
arpl
push
iret
pop
cwtl
in
scas
mov
sub
cmp
pop
lods
pop
iret
xchg
mov
mov
inc
cmp
xchg
mov
mov
je
fildl
std
call
int
lea
aas
xor
iret
sbb
and
fildll
push
jp
aam
sub
shlb
or
adc
dec
jge
push
mov
mov
in
pushf
imul
dec
mov
or
or
out
add
fdivl
cmp
lret
push
cmpsl
jno
pop
iret
arpl
cmp
cwtl
outsl
and
cmp
stos
lods
fs
xchg
imul
push
in
ret
aaa
test
icebp
in
nop
sub
xor
pop
mov
sahf
lcall
mov
jbe
lret
imul
call
test
mov
pop
dec
push
mov
imul
jg
out
add
mov
mov
mov
ljmp
mov
or
loope
fldl
loop
mov
push
mov
and
sub
call
jp
outsb
xchg
mov
lods
sbb
fsubrl
add
ret
daa
sub
mov
xchg
push
push
adc
stos
add
jge
cmpb
mov
sbb
adc
stos
out
cmp
popa
lcall
mov
sub
fldcw
and
fistpl
arpl
mov
pushf
xor
adc
js
push
push
or
es
pop
fcomi
pop
das
test
lods
fs
ss
js
inc
lret
rorl
sbbb
lods
and
dec
sub
jle
out
in
jmp
xchg
outsb
dec
in
stos
cmp
iret
pushf
jmp
fidivs
sub
jmp
inc
inc
inc
jbe,pn
cwtl
in
lods
xor
sbb
mov
lcall
xchg
jecxz
mov
ds
mov
push
inc
fisubs
scas
ret
push
testl
mov
aaa
cli
pop
sbb
dec
lcall
stos
iret
fisubl
outsb
push
mov
fldcw
sub
enter
dec
cmp
mov
inc
push
mov
loope
lea
or
in
mov
cmp
in
cmp
outsb
mov
mov
imul
xrelease
jmp
sar
jge
pop
cmpsl
mov
cmp
adc
dec
xchg
inc
hlt
or
mov
cmp
call
and
in
in
and
mov
das
dec
cmpsb
mov
push
test
ja
mov
addb
mov
sbb
out
in
movsl
js
mov
sub
jle
sti
iret
shl
xor
add
sbb
mulb
sub
pushf
fldt
push
sbb
repz
mull
and
roll
cmc
xor
inc
jecxz
sub
loop
out
pop
stc
add
insl
mov
mov
dec
pop
or
fs
cld
inc
add
ss
cmp
pushf
jmp
dec
cmpsb
add
xchg
inc
lock
outsl
xchg
fdivr
pop
stc
jge
and
mov
pusha
popf
jbe
hlt
mov
push
inc
shll
cmc
aad
sti
ss
pop
pop
fdivl
mov
pop
jno
cmp
jmp
movsb
mov
push
xchg
mov
cwtl
lret
sbb
cmpsl
lahf
lcall
adc
sahf
mov
lahf
orb
mov
xchg
ja
fwait
loope
cmc
call
test
mov
mov
movsb
mov
lods
test
and
aad
mov
into
inc
das
outsb
out
cwtl
enter
aas
int3
mov
inc
je
test
sti
pop
movsl
sti
mov
xor
mov
xchg
imull
or
push
sub
scas
cmove
mull
add
pusha
mov
inc
xchg
adc
jl
repz
daa
fstpt
xchg
inc
mov
mov
mov
ret
lcall
movsb
xor
imul
cmc
dec
inc
in
outsl
test
sbb
fildl
mov
mov
outsb
jbe
jne
aaa
cmpsl
mov
rclb
pushfw
sbb
cli
testl
mov
push
add
test
inc
jnp
jne
sub
xor
and
loopne
shlb
iret
pop
jo
or
inc
or
cmpsb
scas
mov
cmp
loope
xor
scas
jecxz
nop
jg
xchg
push
mov
xchg
mov
stos
insb
int3
xchg
iret
int3
lahf
push
scas
push
mov
ja
add
stc
imul
sbb
dec
rcrl
sbb
sub
dec
pop
pop
sub
outsl
aam
push
add
js
cmp
popf
pop
hlt
lods
mov
adc
cmpl
xchg
daa
je
mov
mov
icebp
push
repz
sar
xorl
sahf
les
pop
mov
xor
fwait
divl
and
push
cmp
inc
xor
pop
testl
xor
xorl
sub
xor
nop
and
push
repz
enter
xor
cmp
xchg
mov
lret
mov
jbe
push
fnstenv
dec
pop
in
push
pushf
push
ficomps
pop
jp
mov
pop
pop
clc
pop
imul
mov
fwait
add
rcrb
cmpsb
lea
clc
ss
sub
xchg
setae
push
in
rolb
or
dec
and
or
pop
insl
orl
cmp
daa
cmpsb
sbb
dec
sub
and
mov
mov
pop
test
pop
lret
lahf
pop
push
mov
xchg
sub
hlt
adc
imul
inc
lahf
and
nop
cwtl
jmp
and
outsb
inc
lea
dec
add
xchg
mov
lods
imul
das
inc
jl
or
or
mov
sbb
jle
sbb
std
pusha
fsubrs
push
std
xchg
imul
mov
mov
inc
push
adc
mov
pop
outsl
lds
pop
test
mov
cmp
cli
mov
mov
sub
mov
repz
push
add
dec
mov
inc
lret
sub
fdivs
or
je
lahf
hlt
sti
push
std
jo
sbb
or
cmp
test
repnz
cmpsl
push
and
loope
nop
xor
cs
cli
cltd
ret
mov
pop
fisttps
adcb
push
ljmp
inc
fld1
jmp
push
pop
inc
fcomps
or
pop
adc
mov
mov
jg
xchg
out
stos
sub
mov
push
inc
mov
or
fs
addl
jge
or
mov
xchg
pop
outsb
add
movsb
cwtl
pop
mov
call
jns
sti
gs
inc
in
cs
test
movsb
aam
int3
add
mov
xor
in
sbb
add
clc
popa
fmulp
adc
push
sbb
loope
int
jmp
mov
iret
cmpsl
orl
popa
dec
dec
or
rolb
out
stos
push
jae
fld
fisubs
lea
mov
sub
out
adc
adc
js
shlb
call
push
rorb
jmp
mov
jge
call
pop
hlt
test
jb
dec
pop
test
xchg
sbb
jae
out
dec
je
fwait
inc
pop
movq
and
jg
add
insb
mov
in
stos
add
add
xchg
and
pop
xchg
sbb
push
jmp
xchg
xadd
ljmp
clc
jecxz
in
sbb
or
adc
jo
push
mov
or
outsb
loope
shrb
fimuls
sub
bound
mov
in
jg
cmc
jbe
sti
prefetchwt1
mov
neg
jl
cmc
leave
xchg
iret
cmp
dec
cltd
rolb
xchg
shlb
shlb
jecxz
mov
mov
aad
sub
js
pop
or
pop
ljmp
cmp
lods
pop
cmpl
cmp
or
dec
mov
jecxz
sbb
lcall
dec
jmp
dec
cmpsl
repnz
fdivrs
add
mov
sbb
pop
push
dec
jns
and
hlt
ljmp
sub
xchg
aas
and
sbb
fiadds
gs
mov
sbb
adc
into
scas
imul
cmpsl
adcb
jge
add
jle
ret
push
xor
cmp
cmpsl
bound
and
out
push
push
add
test
scas
outsb
out
mov
mov
mov
xchg
data16
fimuls
or
out
lahf
jno
add
ljmp
mov
nop
ret
mov
add
mov
mov
test
subb
jg
adc
enter
lods
xchg
cmc
stos
lods
call
adc
xor
mov
sbb
out
je
jp
clc
mov
das
movlps
jge
in
mov
or
xchg
dec
mov
into
pop
aaa
imul
cmp
loop
xorb
je
dec
pop
xchg
orb
xor
pop
lods
push
dec
loopne
ds
cmp
inc
inc
repz
xchg
mov
or
add
push
pop
and
inc
fistpll
fwait
gs
cli
or
cmp
xchg
and
adc
popa
es
mov
pop
mov
out
xchg
mov
jge
popf
ret
jae
inc
jnp
imul
gs
xlat
push
xchg
ja
add
push
pop
xor
dec
mov
jbe
mov
pop
out
push
mov
push
enter
mov
pusha
mov
sub
inc
daa
movsb
adc
xlat
xchg
mov
adc
inc
cmp
shrb
stc
mov
mov
mov
push
pop
fs
push
fisttpll
xchg
adc
iret
jecxz
movb
int
notb
inc
dec
ja
cmp
push
pop
sbb
idivl
test
or
inc
pop
xchg
clc
push
dec
xor
pop
xchg
fistpll
sub
cmp
jmp
adc
mov
movsb
adc
stos
lock
or
mov
fs
lcall
jnp
in
or
pusha
pop
lock
mov
xor
fidivrs
inc
sbbl
xor
xchg
testl
std
and
sub
pusha
out
mov
mov
popf
aam
sub
push
add
packssdw
leave
lods
xor
pop
pop
lret
cmpl
or
xchg
push
imul
les
jecxz
jns
ds
sbb
hlt
popa
xor
inc
leave
and
ficoml
push
adc
sarb
int3
or
inc
inc
add
popf
sbb
cwtl
lahf
clc
insl
cli
nop
mov
test
pop
xchg
scas
sub
xorl
adc
je
pop
fnsave
decl
mov
add
idivl
rorl
jg
mov
fdivrs
mov
pop
jl
cmc
push
loop
rdpmc
inc
stc
dec
sub
leave
lods
add
repz
adc
lret
addr16
std
add
mov
mov
mov
mov
inc
sbb
mov
cmc
fwait
loop
push
divl
adc
fisubrl
mov
bound
aam
fs
les
mov
push
fcomps
mov
mov
xchg
aad
and
jbe
push
mov
jcxz
call
movsb
movsb
mov
out
repz
ret
leave
jo
imul
popf
outsl
popf
xlat
xor
pop
lahf
inc
fwait
in
insl
dec
adc
jae
jmp
xchg
pushf
mov
test
fwait
stos
and
cmpsl
aaa
mov
pop
rorl
gs
jne
adc
outsl
dec
into
pop
or
sub
or
sub
mov
xor
fistps
cmp
test
add
fcom
or
cmp
nop
and
outsb
scas
pop
add
push
jnp
jle
sub
xor
inc
mov
inc
aad
cmpsb
std
mov
sub
mov
repnz
sbb
pop
push
xor
sti
mov
ret
or
inc
mov
popf
test
mov
jo
sbb
loope
add
mov
cwtl
fcompl
or
out
jmp
inc
ja
sti
push
mov
or
push
or
sbb
sbb
push
notl
les
fcmove
sub
jnp
icebp
outsl
push
int
mov
cmpsb
std
sub
cld
call
rolb
mov
push
mov
dec
outsb
outsl
sub
ja
jno
inc
icebp
fwait
inc
test
jp
int
xchg
pop
xchg
iret
test
lret
dec
ret
pushaw
in
std
xor
xchg
sbb
nop
in
ja
in
js
cwtl
mov
icebp
pusha
jl
and
inc
outsb
mov
jg
sub
adc
sbb
jp
and
out
sbb
enter
aam
aad
fdivs
nopl
rolb
aam
js
push
mov
loope
jbe
sub
incl
je
jnp
sub
pop
jp
roll
mov
mov
inc
and
cmpsb
and
lcall
pop
xor
adc
mov
lods
adc
shll
repz
jmp
mov
adc
lods
sbb
push
jle
mov
rorb
fiaddl
dec
inc
xchg
negb
or
lock
pop
add
aaa
dec
push
subl
xor
mov
jge
push
cmp
dec
xchg
pop
sbb
jbe
inc
adc
xchg
and
add
add
mov
and
inc
sbb
roll
pop
or
sarl
mov
repnz
gs
push
adc
cld
adc
dec
ret
test
mov
lods
xchg
scas
daa
adc
mov
inc
ret
push
cmp
jp
push
dec
rcl
sbb
jl
lods
fadds
mov
xor
add
test
ret
rcrb
xor
push
xchg
arpl
add
mov
cmp
test
dec
out
test
pop
in
xor
cmc
pop
call
ljmp
adc
aas
stos
ljmp
scas
xor
or
xorb
xor
pop
mov
or
fs
adc
int
mov
aam
enter
inc
in
and
dec
sahf
jbe
mov
push
add
cmp
mov
fcmove
insl
movsb
out
or
sbb
xchg
jl
aad
adc
mov
aaa
and
pusha
stos
sub
xchg
add
daa
sarl
pop
mov
mov
mov
daa
icebp
loop
addr16
insb
jmp
insl
mov
mov
sub
mov
xchg
mov
in
jl
bswap
jnp
fwait
inc
xchg
push
xor
dec
mov
add
addr16
repz
aas
mov
or
int3
cwtl
ret
pop
ljmp
xchg
jne
sahf
addl
test
inc
sbb
xorb
in
mov
cmc
outsb
jnp,pn
mov
jns
addl
pop
push
push
pop
and
fldl
push
jecxz
mov
push
arpl
cs
mov
inc
div
inc
lods
mov
imul
mov
out
dec
cmp
lcall
xchg
sub
pop
inc
add
mov
and
jne
xchg
dec
out
mov
xchg
lret
jp
inc
es
inc
or
loop
out
pop
dec
ret
mov
mov
sub
je
push
fistpl
or
mov
syscall
call
popf
stos
lcall
nop
xchg
mov
scas
mov
adc
loopne
pop
test
in
xchg
add
imul
aam
dec
clc
pop
fmul
dec
cmpsl
xor
pop
or
adc
in
add
daa
add
je
pop
fimull
push
les
ljmp
lcall
movsb
push
jno
xchg
and
ficoms
jns
sbb
push
cmp
pop
dec
sbb
ret
daa
das
scas
xchg
inc
adc
pop
add
into
cli
outsb
pop
mov
shr
add
nop
push
lahf
add
mov
data16
inc
in
daa
test
sbb
add
stos
cmp
mov
cmp
lods
pop
xchg
xor
addb
cwtl
sub
xchg
movsb
mov
cli
mov
insb
addr16
into
add
jb
push
ds
cmp
mov
js
lods
xor
xorb
sbb
mov
jns
mov
ss
stos
orb
sar
roll
cmp
and
clc
sub
push
shll
dec
xlat
popa
sub
mov
mov
push
xlat
mov
xor
or
mov
lret
push
inc
jg
mov
rcrb
les
popa
inc
repz
pop
insl
cmp
sbbl
scas
shrb
filds
lret
nop
mov
xor
mov
xchg
sub
test
pop
mov
movsb
scas
scas
ror
sub
mov
push
insb
popf
xor
cmpsb
lds
push
jp
pop
shr
mov
add
sbb
cwtl
lods
or
inc
jg
or
clc
xor
pop
pop
adc
jecxz
int3
sbb
sub
push
sub
std
mov
outsb
clc
jge
lahf
imul
int3
adc
sbb
cwtl
out
xchg
clc
cmp
cmpsb
scas
add
js
xchg
inc
xchg
iret
pop
pushf
mov
aaa
mov
inc
mov
inc
xchg
fnsave
xchg
jnp
sbb
into
pop
jbe
test
mov
xchg
jns
pop
or
mov
pop
mov
mov
inc
mov
scas
jecxz
xor
jns
sub
mov
stc
and
cmp
sbb
xchg
adc
das
pop
adc
mov
mov
adc
arpl
jle
mov
or
cs
add
sbb
push
xchg
xchg
mov
aam
int
dec
jno
or
stc
add
xor
dec
dec
xor
or
std
jmp
fldt
in
cmp
push
insb
xchg
sbb
pop
jb
jo
insl
jne
cmc
je
dec
mov
dec
subb
stos
lahf
cmpsb
pop
mov
mov
mov
push
mov
jmp
ret
cmpsl
pop
lcall
sbb
or
ret
notb
mov
pop
call
and
fs
dec
js
shlb
pop
in
inc
daa
repz
jns
test
jp
push
jg
cmpsb
dec
dec
outsb
gs
imul
or
cmpsb
xor
fs
jae
stc
les
cli
pusha
sarl
je
scas
inc
adc
mov
mov
and
pushf
mov
sub
mov
jle
movsb
test
pushf
push
jp
test
fildl
dec
xor
fcmovnbe
add
pop
lcall
inc
mov
pop
mov
stos
stos
movsb
sub
xor
repnz
mov
movsl
mov
adc
bound
push
in
in
outsl
imul
cwtl
xorl
lcall
js
punpcklwd
mov
jns,pn
call
in
xchg
inc
push
cs
mov
cli
sahf
lcall
out
and
cmp
lea
inc
gs
aas
das
insl
lcall
jecxz
stos
leave
pop
add
ret
sbb
bound
in
xchg
add
fnop
ljmp
mov
add
out
shr
int3
cld
xchg
cmp
mov
add
sub
mov
push
fprem
in
xchg
cmpb
mov
pop
cmpsl
cmp
ds
aad
das
push
xlat
mov
and
movsl
addb
pusha
dec
mul
adc
jecxz
sub
loopne
aad
dec
pop
repnz
and
inc
add
cmp
pop
lahf
push
cmpsl
roll
fistpl
popf
add
pop
jno
loope
mov
mov
int
cwtl
outsl
movsb
xor
ror
push
lahf
iret
call
pop
xor
int3
stos
insb
cmp
mov
sub
mov
lea
adc
adc
mov
out
mov
das
dec
sti
sub
js
ja
cmp
jle
sub
add
test
test
dec
sub
xor
inc
lock
sub
jl
inc
add
dec
frstor
mov
push
inc
cwtl
xchg
pop
mov
inc
arpl
mov
inc
mov
jns
pop
stos
or
call
cmp
mov
dec
mov
ss
stos
and
jl
leave
inc
xchg
xchg
rep
xchg
mov
adc
dec
cmpsl
pavgb
or
push
pop
xlat
mov
mov
js
enter
cmp
sbb
sbb
lcall
fldl
rorl
shlb
or
shrb
cmpsl
mov
lods
fwait
cmp
jge
jmp
adc
xchg
xchg
push
rcr
add
in
inc
pop
mov
out
inc
lahf
pop
sub
sbb
fisubl
lret
cmc
andl
dec
jns
cmp
push
lea
jb
in
inc
mov
insb
pop
add
sub
or
jnp
lods
sbb
add
adc
loop
mov
orb
test
pop
adc
outsl
mov
jle
sub
sbbl
jb
int
sbb
sbb
lds
addr16
xchg
push
xlat
cmpb
push
pushf
xor
mov
aad
mov
popf
or
and
inc
jbe
rclb
or
call
dec
repnz
out
mov
jnp
xacquire
insl
cmp
sub
jno
es
pop
push
jo
scas
in
or
fsubs
shrb
add
lea
mov
add
push
jmp
repz
fisubs
mov
cltd
xor
sbb
xchg
shlb
dec
sar
and
lds
repz
orb
jno
and
imul
push
aad
mov
das
das
sub
movsb
inc
and
xchg
test
jbe
or
mov
pop
movsb
sti
mov
cmpl
sub
or
cmc
fmul
mov
jmp
mov
cwtl
fdivl
mov
dec
cmpb
inc
in
inc
or
sbb
or
aaa
hlt
bswap
xchg
pushf
pop
mov
cmp
xor
pop
sbbb
sbb
test
and
adc
js
mov
out
clc
mov
dec
call
cmp
rorb
mov
ja
mov
lret
aaa
dec
int
xchg
mov
lods
or
mov
jecxz
incb
mulb
ret
std
sub
dec
dec
push
or
pop
dec
cld
cwtl
jo
dec
insb
std
divl
clc
outsl
xchg
lahf
popf
call
mov
adc
iret
fwait
insb
and
adc
xchg
mov
push
insb
bound
adc
mov
shll
inc
cltd
dec
pop
in
lods
movsl
push
in
jmp
int
cmpsb
out
dec
call
clc
inc
cmp
dec
rcl
mov
jb
test
das
push
sub
gs
dec
arpl
fwait
subb
loop
jno
jp
or
scas
stos
sub
or
in
add
push
insl
cltd
daa
outsb
xchg
inc
fisubl
mov
push
xor
mov
or
cmp
jmp
jae
or
daa
gs
into
repnz
aas
mov
mov
jge
add
inc
in
sub
push
leave
loope
js
cmpsl
add
mov
aaa
xor
ja
dec
cltd
dec
xorl
mov
fwait
das
pop
sub
push
push
dec
flds
and
ret
cli
add
adc
cmp
cli
add
pusha
mov
pop
inc
pushf
fiaddl
pop
jp
into
mov
xchg
pop
ficoms
add
mov
sbb
and
dec
imul
sahf
cmpsl
dec
scas
je
xor
icebp
inc
test
sarb
inc
nop
inc
popl
inc
mov
into
loope
lods
sahf
or
pop
mov
rcrl
and
pusha
mov
orb
inc
cld
outsl
mov
jecxz
lret
cvtps2pi
scas
mov
xchg
imul
xor
outsl
lods
test
pop
mov
iret
mov
lds
movsb
aaa
movsb
pop
cmpsl
test
cld
sbb
dec
or
aas
pop
and
sub
imul
bound
lcall
mov
adc
or
xor
loope
into
ret
int
test
call
sbb
jge
aas
cs
mov
add
push
ds
xchg
mov
mov
cld
repz
lret
mov
jmp
pop
loope
or
add
lahf
pop
jp
jno
add
imul
sbb
in
cmp
in
mov
clc
push
push
jl
mov
inc
push
arpl
sub
sub
in
pop
movsl
fildll
movsl
jmp
cltd
push
cmp
fwait
or
cmc
hlt
and
clc
fdivrl
pop
in
mov
cmp
sub
out
addb
inc
pop
cld
icebp
cmp
inc
lret
subl
jl
fs
lahf
jns
roll
dec
ss
rol
mov
jg
add
add
lahf
cwtl
ljmp
movzbl
mov
sahf
arpl
shll
jae
xor
out
add
push
leave
fildl
dec
jle
scas
in
pop
push
mov
add
mov
xchg
dec
int
sbb
xchg
mov
push
clc
jne
ucomiss
es
repnz
or
scas
cmp
repnz
sbb
pop
push
sbb
ret
jno
mov
inc
mul
push
xchg
nop
dec
sub
fldz
inc
push
xor
xlat
flds
fdivr
cltd
mov
mov
xchg
mov
mov
dec
clc
test
mov
es
insl
xchg
scas
jb
movsb
adc
dec
jnp
dec
ss
and
and
ljmp
lds
inc
jo
jo
cli
pop
mov
testl
adc
jmp
lea
scas
les
pop
lcall
fwait
or
mov
or
mov
dec
add
xorb
pop
add
subb
in
imul
lock
sbb
lahf
shrb
sbb
sarl
xchg
shrb
jge
aas
push
fistpl
push
and
imul
mov
mov
jmp
adc
clc
cmp
repnz
out
daa
mov
into
adc
mov
je
mov
xchg
add
adc
and
out
pop
adc
mov
outsb
out
nop
push
xorl
je
mov
jbe
pop
dec
mov
pop
notl
sbb
push
es
pop
mov
mov
sahf
and
popa
mov
out
push
out
sub
add
mov
xor
xor
jo
xor
push
aam
or
sarl
mov
in
or
or
insl
clc
and
insb
and
mov
pop
enter
lds
adc
inc
dec
mov
jmp
mov
repnz
mov
cs
sarb
xchg
cmc
cwtl
js
popf
sbb
pop
sarl
mov
add
data16
adcl
sub
movsb
adcl
pop
xor
pop
mov
jmp
adc
sti
shlb
inc
aaa
and
aam
mov
cmp
sub
add
sarb
arpl
cs
sub
imul
test
gs
xchg
sbb
ss
xlat
add
sbb
sbb
fsubl
push
xor
icebp
push
bound
ljmp
fmuls
lret
ret
mov
adc
mov
xchg
push
sbb
cmpsb
jmp
and
rcrl
push
pop
daa
cmc
cmpsb
push
addb
lock
lret
lcall
cltd
fisttpll
ret
jo
dec
jne
push
test
adc
push
les
aad
xchg
mov
inc
add
push
adc
roll
popa
mov
mov
xchg
insl
das
ret
es
loope
test
scas
jmp
mov
push
sahf
jl
jmp
iret
aad
xlat
pop
sbb
jl
ret
adc
sub
jp
sbb
loopne
in
adc
jo
adcb
inc
roll
or
cmc
push
notb
mov
cmc
xchg
jb
pop
aas
stc
pop
arpl
cli
xor
iret
addr16
fsubr
adc
das
adc
push
mov
mov
les
jge
cs
inc
stos
mov
js
ja
or
xor
xchg
fwait
lcall
dec
cli
imulb
idivb
cld
lea
xchg
cmp
xor
mov
inc
cmp
pop
in
add
inc
dec
addb
dec
push
add
cmp
in
ja
mov
adc
xchg
xor
xchg
add
mov
pushf
cld
adc
pop
in
sbbb
pusha
es
or
push
mov
cmp
pop
movsb
or
cmpsl
mov
in
in
lahf
jp
push
mov
push
mov
out
stc
cs
sub
xor
adc
ja
cwtl
lock
mov
imul
nop
cwtl
das
mov
xchg
je
jecxz
pusha
and
sbb
repz
xchg
pop
pop
aad
je
inc
pop
dec
jns
jb
adcb
add
insl
xor
fmuls
push
xor
shrl
pushf
mov
ja
dec
fdivl
insl
aaa
bound
neg
xor
mov
adc
int3
inc
push
xchg
xlat
jbe
push
xchg
ret
pop
mov
pusha
pop
mov
jnp
inc
sbb
fsubl
or
inc
ss
pop
cld
rcrb
ja
jne
fstl
and
and
jns
xor
push
pushf
bound
stos
insb
fld
mov
push
adc
sbb
pop
out
stc
in
inc
add
fisubrl
ret
xlat
xor
inc
aaa
or
fldl
cmp
loopne
lret
in
inc
scas
mov
imul
hlt
notb
jbe
cmpsl
pop
and
arpl
mov
lahf
sbb
aas
fstl
jo
xchg
push
incl
jnp
sbbl
fs
jmp
ret
sub
jecxz
mov
aaa
and
dec
popa
xchg
add
fdivp
jae
push
cmc
hlt
arpl
enter
mov
cmp
push
add
fs
sbb
mov
mov
fsub
leave
and
or
jnp
add
std
inc
rolb
int
into
push
fwait
stc
adcl
das
mov
or
in
push
out
rcpps
inc
mov
aaa
jns
cmp
pop
and
xchg
add
and
mov
cmp
push
xor
shrb
inc
shrb
movsl
add
sub
into
jns
daa
dec
inc
push
pop
test
and
sub
inc
push
cwtl
push
test
sub
and
ljmp
xchg
cmp
pop
sbb
sbb
ja
and
adc
xchg
fidivs
and
mov
shll
push
ret
sub
or
pop
pop
jbe
mov
test
or
inc
xchg
and
pop
ret
aaa
mov
cmp
mov
stos
or
repnz
adc
into
cli
adc
sarl
into
mov
push
inc
mov
or
test
jmp
sub
adcl
cltd
pop
and
dec
pop
pop
aas
sub
arpl
sub
cmp
sahf
or
lahf
aad
mov
adc
js
mov
fildl
aas
jg
mov
dec
loopne
sub
or
lods
jmp
inc
test
xchg
mov
loope
or
xchg
nop
xchg
bound
and
daa
lock
adc
bound
mov
xchg
mov
push
mov
ret
jl
aam
dec
mov
ljmp
add
push
insl
dec
gs
pop
lcall
cmpsb
aad
cmp
mov
je
jecxz
mov
test
mov
aam
sbb
cmpb
gs
fdivl
and
pop
data16
stc
jecxz
sbb
push
mov
dec
out
mov
fidivs
gs
adc
or
adc
fdivrl
inc
sti
xchg
icebp
pop
push
imulb
cmc
ja
fcoml
fildl
and
jnp
inc
imul
iret
xor
jecxz
add
outsb
fwait
loop
cmp
ljmp
sub
mov
lods
push
push
pop
push
pop
xor
mov
pop
sub
int3
adc
and
jmp
ss
cmp
mov
dec
adc
int3
push
jb
test
dec
push
jmp
xchg
daa
jle,pn
mov
lods
and
adc
aam
ja
call
add
inc
ja
or
xchg
loop
xchg
loopne
dec
inc
lret
inc
sub
jge
add
daa
es
mov
stos
cs
icebp
in
pop
test
enter
push
decb
push
mov
aaa
add
sub
loope
out
sub
popf
mov
mov
arpl
mov
jne
jp
in
add
repz
mov
cli
push
clc
fwait
lret
cli
fcoms
cmpsb
bound
loopne
or
outsb
mov
fildll
inc
jb
insl
sarl
push
fwait
cld
loope
adc
into
xor
sub
jnp
aas
lods
aad
xor
insl
aaa
leave
add
pop
fcoml
fwait
mov
ror
idivb
in
in
or
cltd
xchg
mov
mov
int
aaa
xor
xor
fists
imul
lods
pop
ret
out
cld
in
or
hlt
jns
cmp
repnz
fdivrl
and
xor
xchg
inc
add
sbb
sbb
jecxz
test
imul
fildll
insb
into
push
jbe
mov
sahf
nop
push
or
mov
out
or
test
sub
sbb
mov
jmp
push
sub
mov
cmpsl
aaa
jge
xor
out
add
loopne
jne
js
aas
push
mov
push
imul
and
adc
lods
pop
test
mov
or
adc
cli
xchg
push
fstl
ss
lods
test
xchg
push
lods
inc
insl
xchg
sbb
cmp
and
andb
rcl
and
xor
movsb
xor
pop
cmp
mull
jmp
mov
dec
addr16
jg
test
jne
xor
insl
es
testl
das
cmpsl
pop
xor
lahf
jbe
lock
jne
add
jl
inc
repz
jb
pushf
jle
push
mov
cmp
pop
mov
pop
aam
fwait
jae
ret
lcall
ss
data16
sarb
cmc
lods
xor
or
sbb
aad
adc
lahf
test
mov
cmc
push
pop
cli
xchg
sbb
jnp
push
inc
or
jb
fisttps
push
cwtl
arpl
dec
mov
inc
jg
dec
leave
add
stos
jp
aad
pop
add
xchg
or
in
push
insl
mov
sbbb
mov
dec
xor
int
xor
push
lods
jb
jno
and
pushf
cmp
daa
mov
jmp
dec
cmp
popa
stos
cmp
dec
sub
mov
aad
cmc
adc
xchg
adcl
jno
cmpl
dec
or
repnz
out
push
lods
ret
jg
roll
jnp
cmpsb
ja
xchg
dec
inc
mov
aad
xor
jne
lret
imul
rolb
jg
subl
and
inc
and
xchg
or
push
pop
outsb
cltd
sbb
js
or
out
shrl
subb
test
pop
adc
lods
mov
push
sub
fmulp
das
popa
aam
mov
in
lock
mov
add
jmp
faddl
mov
sahf
mov
clc
add
cmpsl
pop
mov
fcompl
push
lds
dec
push
xchg
sub
cmp
test
dec
mov
imul
aam
xchg
leave
hlt
clc
sahf
in
test
outsb
pop
pop
jbe
test
into
subb
fcomip
ss
push
int
sbb
in
icebp
jl
lret
jge
fisttpll
sbb
pusha
mov
pop
jae
adc
mov
xorb
fadd
imul
popf
sub
push
icebp
ja
mov
add
pop
iret
push
bound
lcall
out
rcrl
or
ds
sub
cwtl
inc
add
or
stos
adc
push
jl
xchg
out
lret
xor
insl
or
lret
das
jecxz
and
jo
lea
lcall
scas
push
lcall
movsl
xchg
cld
call
mov
sbb
ljmp
mov
push
lret
inc
mov
add
movsb
mov
mov
add
subb
ds
in
pop
cld
push
ja
add
sbb
arpl
jns
lahf
imul
xchg
cmp
lahf
push
or
and
sbb
pushf
pop
fcoms
icebp
or
mov
adc
test
addr16
mov
pop
cmpsl
cmp
adc
fisubrl
mov
push
lock
pop
leave
cmp
pop
loop
push
jmp
dec
jno
ja
mov
sarb
adc
addr16
loope
xchg
mov
loope
out
mov
int
cs
dec
dec
adc
cmp
mov
sub
xor
imull
jo
and
dec
mov
inc
jne
stos
push
aaa
push
add
pop
jmp
jp
pop
adc
stc
push
popa
int
jne
xchg
xchg
addr16
sahf
mov
aam
jo
call
fdivp
shlb
mov
popf
mov
and
lods
mov
xor
mov
loop
jns
xor
lret
sub
sbb
mov
fiaddl
mov
jae
lahf
pop
pushf
clc
ret
adc
sti
lods
or
xchg
sbb
stc
push
adc
pop
cmp
adc
and
xchg
in
imul
loopne
pop
stos
andb
sbb
dec
lods
lock
popf
lret
lods
mov
add
lret
repnz
movsb
out
mov
jnp
cmp
icebp
sub
fcoms
dec
push
jle
addr16
mov
dec
jo
daa
pop
dec
push
lahf
pop
jg
xor
inc
mov
xor
std
stos
push
add
xor
int3
push
cli
pop
adc
or
or
mov
and
pop
xchg
adcl
xchg
shrb
push
insb
shlb
orl
pop
imul
sub
mov
notb
mov
or
push
mov
dec
inc
sub
lds
lea
push
ja
fadd
inc
mov
mov
push
dec
mov
pop
push
clc
jno
and
popf
repz
or
dec
aas
dec
cmp
jecxz
in
add
movb
int3
ja
sub
aad
lcall
pop
adc
cmpsb
push
rcll
scas
aas
push
sbb
out
mov
push
call
jne
inc
jae
jle
arpl
data16
add
mov
pop
lret
rclb
shl
jmp
cli
and
mov
loop
pop
xor
xor
mov
sti
pusha
in
xor
stos
sub
adc
inc
push
pusha
jl
filds
xchg
pop
outsl
or
ds
sub
scas
mov
insl
adcb
xor
mov
popf
mov
cmp
mul
xor
out
mov
or
jb
xor
fisubl
cli
fwait
mov
loopne
imul
xor
push
add
lahf
movsl
movsb
les
mov
and
ja
xchg
fistps
hlt
loop
pop
fisubs
dec
push
clc
je
stos
mov
std
or
imul
pop
nop
jo
outsb
andl
xchg
dec
jl
mov
inc
pop
or
xchg
jecxz
or
out
jb
inc
xchg
lahf
and
mov
ljmp
dec
xlat
jl
fsubr
xchg
pop
pop
lcall
imul
and
stos
jne
ljmp
outsb
push
negl
pop
rolb
insb
loope
mov
les
mov
mov
mov
xchg
jno
aam
das
jle
repz
leave
jp
add
cli
push
lret
xlat
mov
fists
push
push
ror
subb
or
pusha
lods
scas
or
mov
mov
add
stos
sbb
jnp
push
loop
add
cmp
push
sub
popf
repz
lods
sbb
repz
xchg
mov
dec
jno,pt
test
pop
sub
in
push
jg
xor
sbb
sbb
ja
cmp
add
mov
pop
shll
push
push
cwtl
fcoms
push
aas
adc
mov
inc
mov
nop
fxch
cs
fdiv
outsl
arpl
fimull
inc
in
icebp
mull
daa
mov
sti
inc
nop
shrb
movsb
dec
cmp
cltd
cli
mov
repnz
popa
fdivrs
mov
sub
out
scas
addr16
mov
mov
dec
xchg
xchg
fld
out
cld
or
arpl
js
dec
pop
std
xorl
sarb
sub
fs
add
daa
xor
out
sbb
sub
jecxz
cmc
sub
movl
fsub
out
fildl
lea
test
scas
inc
ss
incl
scas
inc
les
pop
jae
mov
dec
xlat
mov
pop
pop
stc
push
dec
sahf
cmp
cmpsb
testl
jbe
adc
mov
aad
repnz
cmp
mov
sub
test
ret
dec
mov
jecxz
fwait
add
adc
notb
test
mov
pop
dec
lock
or
lcall
xchg
jg
cltd
adc
jle
insb
cmp
pop
jp
xor
lret
mov
and
or
stc
jno
mov
push
mov
mov
cld
adc
pop
mov
jl
cs
mov
add
es
xor
mov
fnstcw
pop
push
pop
xor
push
and
add
xor
add
fcmove
arpl
mov
add
lea
adc
icebp
lret
inc
lods
xorl
xor
dec
cwtl
adc
mov
repnz
into
push
dec
fnstcw
cltd
in
js
cmpsb
fisttpll
cltd
xchg
jle
lret
xor
mov
xchg
mov
mov
test
insb
fidivrs
cwtl
mov
dec
bound
hlt
scas
clc
adc
adc
mov
and
sbb
test
out
pop
mov
and
or
xor
test
jne
adc
pop
data16
hlt
repz
push
or
xor
push
dec
loop
shld
mov
movsb
lea
cmpsb
mov
bndstx
or
test
popa
pop
cmp
jl
icebp
adc
cltd
push
movsb
and
loope
lods
fnstenv
push
rcrb
and
nop
sbb
stc
xchg
std
mov
push
ret
cmp
push
pop
cmp
lds
jnp
cmp
cltd
jb
shll
mov
loope
sub
jo
dec
sbb
inc
int
jp
roll
or
addr16
mov
pop
into
leave
sahf
and
pop
data16
and
subl
or
jae
push
xor
cmc
jo
fstpl
adc
std
mov
xchg
push
cmp
movsb
mov
aam
sub
push
insl
daa
mov
shll
jge
insl
xchg
dec
fiaddl
fcmovbe
cmpsb
lahf
icebp
and
adc
mov
ss
stos
or
inc
adc
lods
sbb
add
mov
aas
cmp
pop
cmp
inc
mov
mov
push
inc
das
mov
xchg
aam
aam
push
iret
xor
int
mov
addl
jae
jbe
add
sub
dec
mov
mov
je
sbb
xorb
aad
movsl
push
xlat
push
adc
jle
sub
cmp
je
or
xor
int
lahf
imul
jmp
inc
pop
fs
mov
ffreep
mov
cmp
jae
xor
jl
mov
cwtl
jmp
test
fisubs
shrl
xchg
push
lods
fbstp
sub
cld
sbb
out
xchg
push
xchg
mov
push
iret
sub
loope
or
repz
jp
mov
xor
mov
subb
fsub
mov
or
jae
xchg
bound
scas
add
inc
jmp
sarb
imul
ret
add
push
xlat
imul
sub
iret
pop
mov
cmp
cmp
repnz
lea
mov
roll
mov
call
xor
jl
dec
das
add
mov
dec
pop
rorl
jecxz
sub
cmp
mov
sub
jae
in
pushf
clc
adc
daa
pop
enter
cmp
fildl
push
and
ds
jmp
xor
jae
adc
incb
xchg
xchg
pop
push
xchg
jle
push
mov
jnp
pop
push
daa
sbb
or
test
jecxz
shrl
inc
fwait
sbb
mov
iret
pop
es
scas
cmpsl
andl
cmp
push
fistl
setbe
testl
push
mov
out
out
pop
js
inc
push
fs
dec
add
aaa
dec
cmp
pop
mov
sub
xor
das
imul
xor
stc
mov
pop
repz
jo
movsl
cmpl
aad
ss
add
mov
sahf
sub
adc
test
je
jno
xlat
aas
inc
mov
inc
push
ret
mov
push
rorl
or
add
mov
push
pop
ja
adc
cli
popl
hlt
shl
push
dec
sub
ds
test
fiaddl
fldt
push
cmp
rolb
imul
sbb
xor
lahf
inc
push
cmpsl
push
push
adc
add
ja
shll
push
popa
into
int3
rorl
jp
mov
mov
mov
movsb
push
jp
push
dec
sub
fnstsw
fsubs
fdivl
cld
es
push
sub
mov
xchg
inc
cltd
repnz
mov
dec
scas
dec
adc
cs
fcomps
cmpsl
inc
popa
shl
cmp
int3
cmp
sbbb
in
add
push
inc
mov
mov
idivl
repnz
sbb
pushf
addl
push
aad
pop
jle
fnsave
scas
fstl
jmp
mov
out
push
outsl
rcrl
and
mov
ret
mov
enter
lds
icebp
cmp
or
push
push
in
xor
mov
popf
dec
push
mov
loopne
in
ret
imul
mov
popf
rolb
jmp
pushf
sbbl
or
imul
or
add
cmpsb
je
cwtl
xor
insb
xchg
ret
push
pop
cli
pop
sbb
sbb
dec
jne
cmpsl
cmpsb
adc
inc
aas
aaa
cmp
and
add
dec
shll
xchg
dec
and
sub
xchg
mov
scas
mov
shll
mov
inc
int3
and
and
xchg
xchg
lret
and
fcoms
jle
fdivrl
lea
push
xchg
jae
sub
xchg
xchg
sarb
add
icebp
daa
adc
cwtl
add
xor
sti
js
xchg
inc
repnz
sahf
inc
xchg
movsb
jne
mov
lods
and
mov
rolb
add
push
jnp
out
and
and
dec
dec
sub
and
sti
xor
aas
jbe
push
popf
ss
in
pop
pop
push
xor
inc
lods
enter
or
lods
lock
inc
ret
iret
xor
pop
jae
icebp
adc
fwait
icebp
adc
lret
sub
shlb
in
int
cmpsb
inc
sub
adc
repnz
pop
cmp
jmp
adc
testl
push
out
xchg
cld
jmp
sbb
mov
daa
enter
push
jp
and
xorl
dec
dec
clc
xorl
mov
mov
push
adc
sub
add
xchg
push
lods
in
mov
inc
movb
or
pusha
sub
mov
mov
xor
adc
inc
aas
add
stos
add
cmp
cwtl
cmpxchg
lds
dec
call
int
and
lahf
xchg
lock
sti
stos
or
es
rorb
jg
dec
add
std
cmpsl
dec
jbe
mov
daa
in
cld
scas
jl
jae
lret
mov
xchg
aaa
mov
or
add
test
pop
insl
inc
and
rcll
mov
nop
add
lahf
inc
sahf
pop
or
cmp
sbbl
jo
sub
xor
ja
cmp
mov
pop
data16
ret
jecxz
adc
pop
inc
movsl
clc
std
pop
addb
shlb
inc
add
scas
pop
in
and
jnp
mov
fsts
pop
mov
xchg
push
sti
shr
pop
inc
iret
or
push
mov
int
cmpsb
add
fdivrl
inc
fadds
xchg
mov
lret
cmp
out
pop
out
test
movsb
inc
hlt
sbb
fcmovnb
sub
pop
cld
sub
sub
loopne
xchg
mov
mov
into
adc
push
pop
cmp
sbb
add
loopne
mov
push
sarl
mov
pop
pushf
ljmp
ja
or
xchg
jb
pushf
sub
push
mov
fwait
mov
sbb
push
sub
add
sbb
scas
lea
or
jb
push
jo
sbb
push
int3
dec
push
add
dec
outsl
or
sbb
push
lods
out
jnp
imulb
cmp
sub
das
jns
fsub
cmc
cwtl
sub
loopne
and
shrb
int
fwait
lahf
jne
dec
movb
mov
mov
out
mov
jb
addr16
jbe
push
xchg
pop
out
inc
adc
adc
testb
mov
jo
fisttpl
mov
mov
xchg
cmc
int3
mov
ds
jl
repz
call
sbb
or
daa
andb
inc
popa
cwtl
jbe
insb
xchg
mov
dec
push
xor
cmc
iret
add
icebp
push
adc
xor
adc
pop
xchg
stc
or
and
int
lcall
fdivr
les
adc
das
adc
sti
aas
sub
add
jns
push
sbb
bound
mov
test
std
fs
sti
cmp
adc
jg
xorl
add
js
repz
ret
aas
and
jne
cltd
iret
jg
xchg
mov
in
fistps
mov
inc
xchg
insl
jp
lods
jb
repnz
adc
adc
xchg
push
and
sbb
lret
insl
enter
pop
cld
ds
in
dec
cmp
mov
push
pop
mov
shll
add
std
inc
xchg
int
pop
leave
aad
icebp
dec
jg
mov
in
add
dec
push
pusha
lcall
push
cld
mov
rclb
dec
sbb
cmp
and
push
jnp
add
cmc
and
lret
adc
pop
adc
push
test
scas
push
shll
roll
call
mov
fidivs
loopne
mov
aaa
ds
mulb
in
daa
or
aam
xor
xchg
loopne
rclb
mov
ss
leave
test
pushf
add
xor
addr16
push
and
js
loop
mov
es
out
or
clc
mov
jo
mov
pusha
insl
fdivr
xchg
test
sub
or
sbb
add
or
dec
inc
push
cmpsl
sub
add
mov
sahf
xchg
xchg
mov
add
icebp
mov
jne
loopne
mov
cmpsb
pop
mov
sub
lahf
enter
mov
rcll
mov
icebp
dec
mov
dec
sub
mov
mov
xor
loop
pop
fistpl
cmp
roll
out
inc
sub
arpl
test
jbe
out
push
mov
lret
sub
jae
xor
shll
pop
bndldx
sub
test
js
cli
adc
mov
sbb
jmp
jmp
out
cmp
inc
test
stos
rcrb
cmp
add
ror
xor
js
gs
shr
movsb
shlb
mov
cmp
mov
clc
jns
jns
out
insl
mov
add
mov
push
push
jne
xchg
dec
inc
loop
mov
es
xor
mov
in
aaa
mov
push
call
lock
mov
cltd
rcrb
mov
dec
dec
pop
pop
jecxz
jmp
and
call
leave
mov
pop
aaa
shlb
xor
jnp
adc
pop
sub
leave
gs
idivb
mov
jmp
or
inc
xchg
pop
mov
push
mov
in
jg
push
loope
js
inc
mov
push
ds
movsb
add
mov
xchg
inc
cmp
add
js
or
adc
jnp
inc
dec
and
test
pop
xchg
xchg
aas
je
pushf
pop
je
imul
test
jbe
add
mov
inc
into
mov
imul
sahf
cmpsl
pop
lds
or
mov
adc
lods
add
cltd
je
xchg
mov
cmc
mov
push
addr16
add
jb
cmp
lcall
cmp
lds
jg
sub
outsl
ret
out
push
lods
mov
ret
inc
mov
adc
rcr
inc
jp
or
ret
leave
adc
pop
loopne
and
lea
xor
mov
mov
int3
inc
aam
xor
aas
mov
out
adc
std
in
mov
sub
cmp
stos
push
addb
adc
dec
ja
dec
mov
push
sbb
ficoml
push
popa
jns
fistpll
xchg
outsb
fcmovb
jo
push
and
sub
sub
bound
shr
pop
cltd
cmp
aad
test
std
testb
mov
cmp
fs
in
subl
cli
loopne
jbe
mov
sbb
in
pushf
push
cld
xchg
pop
mov
push
jl
insb
and
das
inc
lods
push
cmp
scas
das
adc
ret
xor
sub
loopne
push
add
lahf
nop
adc
jg
and
lahf
ret
cmp
pop
or
out
jge
sub
aam
pop
push
jg
jnp
pop
and
xchg
xlat
prefetch
enter
jae
imul
sarb
xor
push
push
add
test
lock
aad
shl
test
pop
jb
push
xchg
es
rorb
xchg
fs
lret
or
sub
cld
mov
mov
fstl
pop
out
push
nop
mov
test
sbb
sub
cmp
dec
push
add
pop
inc
shlb
xchg
fcoms
aam
push
mov
add
arpl
decb
push
push
pushf
jmp
inc
mov
call
mov
popl
rorb
lret
dec
fwait
notb
ja
adcl
mov
dec
xchg
arpl
add
clc
cmp
sub
add
lea
mov
push
lods
sbb
ret
adc
jno
dec
lret
mov
lahf
sub
idivb
xchg
pop
xchg
repz
xchg
and
mov
inc
cmp
inc
fidivrs
mov
loopne
out
mov
sub
add
inc
dec
xor
mov
loop
out
iret
rorb
and
push
adc
cmc
jno
push
sub
shlb
sahf
pop
shlb
and
sub
sub
jl
mov
jo
pusha
jne
iret
cmpsl
cmc
cmpsl
mov
into
js
jecxz
fdivrl
or
mov
cmp
dec
stos
roll
mov
and
xchg
call
sbb
outsl
xchg
scas
in
cld
shl
arpl
mulb
xor
movsb
mov
sub
xchg
and
scas
sbb
adc
push
cwtl
popf
in
out
scas
cmc
mov
stos
pop
jle
clc
imul
or
shl
cmp
pop
gs
push
jmp
jb
int3
mov
pop
call
out
icebp
sub
xor
push
fcmovnu
push
xchg
and
and
push
jl
daa
add
rolb
mov
dec
xor
adc
bnd
sub
add
xor
dec
mov
ja
jge
iret
sbb
in
inc
xchg
inc
jo
cli
or
xchg
add
outsl
ds
pop
sahf
add
fs
jbe
adc
jb
loop
xchg
int
or
adc
popa
repz
jle
dec
test
cmpsb
mov
cmp
in
mov
lods
rorb
sbb
loop
pop
ss
pushf
mov
mov
stos
mov
mov
cli
bound
mov
arpl
mov
cmp
push
lcall
dec
mov
push
imul
sti
inc
sub
test
xor
sbb
sbb
test
idivb
repz
out
daa
std
call
les
andl
inc
fwait
jge
cmp
aas
cmpsb
mov
sahf
push
dec
shr
mov
icebp
bound
add
push
orb
mov
jg
mov
add
cmpsl
add
cmc
dec
jecxz
push
out
pop
sub
pushf
adc
sub
push
push
test
jge
nop
pop
bound
loopne
aad
mov
push
psubsb
push
ja
mov
mov
adc
dec
movsb
test
rolb
enter
sbb
mov
sub
or
fidivs
loop
lea
xchg
add
shlb
hlt
sub
mov
mov
inc
pop
sbb
xlat
es
sbb
cmp
or
sub
adc
fs
in
xchg
xchg
popl
enter
js
scas
xor
mov
lods
push
aam
psubsb
je
lods
mov
mov
loop
and
ret
inc
jp
mov
mov
popw
sbb
push
dec
daa
mov
aaa
inc
dec
enter
adc
sarb
cs
fisubl
arpl
xchg
fdiv
cs
cli
lahf
cmpsb
ret
mov
addl
inc
dec
mul
mov
mov
sub
movsl
jecxz
movsl
push
mov
cld
xlat
sub
cmp
sub
sahf
sarl
in
aas
or
js
mov
adc
jecxz
mov
fidivrs
inc
and
mov
iret
cld
inc
mov
cmp
test
in
lock
add
js
movsb
adc
or
xchg
je
les
mov
xchg
jl
in
jns
insb
xchg
lods
xor
enter
or
out
mov
leave
push
adc
lock
jecxz
adc
and
push
mov
mov
loopne
inc
and
roll
push
jmp
and
ja
cld
jb
imul
sbb
dec
or
or
fsts
aam
sarl
ss
scas
inc
mov
insb
cmc
adc
jp
loope
cmp
mov
fstl
jo
pop
mov
js
xchg
xchg
push
fnstcw
mov
add
mov
je
pop
lcall
addl
fisttpll
fcom
cmp
les
mov
movl
arpl
ljmp
push
inc
stc
jno
loope
and
shr
ljmp
outsl
or
fidivrl
mov
les
aam
negl
sub
push
adc
ss
imul
fsubrl
dec
and
mov
xchg
mov
subb
jo
and
inc
adc
mov
inc
fsincos
jg
icebp
fimuls
andl
add
xor
or
js
xor
scas
in
sub
mov
in
mov
xchg
sbb
sbb
or
stos
push
cmp
dec
pop
sub
push
mov
test
push
daa
xor
lods
and
call
sbb
mov
xchg
mov
pop
mov
cmp
insb
shll
mov
add
rolb
mov
pop
mov
push
dec
js
xor
pop
pop
inc
test
decb
and
sti
xchg
cmp
mov
orb
jmp
and
rorb
mov
mulb
in
call
dec
cmc
mov
xor
js
mov
cli
pop
faddl
aas
filds
push
mov
es
es
popa
idivl
shll
lods
mov
repnz
push
icebp
pop
mov
sub
fcompl
fadds
adc
mov
into
lods
lcall
shl
push
mov
lret
jnp
sbb
or
ds
cmpsl
mov
sbb
mov
mov
sbb
jmp
cs
and
test
pop
add
popa
rol
int3
cwtl
lods
cmp
insb
cmp
cld
xchg
jg
add
pushf
addr16
mov
cmp
sub
js
pop
daa
add
push
jmp
mov
jle
popa
andl
lods
repz
jle
xorl
fs
jle
arpl
leave
popa
sbb
insb
icebp
loope
cltd
jle
sbb
xor
enter
out
shr
cltd
enter
int3
mov
call
sub
or
jecxz
jp
sarb
cld
add
clc
fnstcw
fsubp
lods
sub
inc
jle
fwait
pop
cmp
xchg
mov
fstp
outsb
push
add
sbb
adcl
mov
jecxz
rcrl
xor
mov
inc
or
aad
arpl
into
stc
icebp
outsl
push
jp
out
aad
fists
xorb
jb
in
lock
in
into
mov
arpl
inc
jmp
add
mov
iret
sub
out
inc
out
adc
cld
pop
fsts
fdivr
mov
inc
lea
mov
mov
imul
das
lret
sbb
sub
gs
and
imulb
aad
pop
pop
pop
stos
mov
ret
xor
cld
cwtl
das
aad
jl
dec
xchg
hlt
outsb
mov
dec
fsub
fisttpl
mov
imul
cmp
lock
in
push
movsb
pop
mov
popf
dec
les
adc
ljmp
sbb
orl
cltd
jp
inc
cwtl
das
repz
mov
pop
jmp
xchg
lods
sbb
fdivrl
insb
daa
imul
dec
cld
add
pop
bound
rcrl
or
jbe
cmp
shrb
pusha
rorb
dec
push
xor
iret
adc
into
mov
out
jae
shll
push
add
pop
push
add
cltd
jns
arpl
inc
mov
jp
mov
push
jp
sub
push
push
jbe
sbb
cmc
ss
jmp
sbb
jp
and
inc
sbb
xchg
int
jb
cmp
push
sub
xchg
int3
aad
and
xor
adc
dec
dec
adc
xor
jns
adc
xchg
inc
xor
fisubrs
push
lock
push
sub
jb
mov
xchg
arpl
notl
mov
jg
pop
mov
lahf
and
lods
pop
arpl
mov
fcmovne
mov
test
lds
and
pop
push
sbb
inc
idivb
sub
data16
lea
xchg
ss
or
dec
data16
mov
sub
in
dec
bound
jg
sarb
cmp
in
jecxz
mov
dec
mov
stos
dec
insl
mov
cmp
xchg
cwtl
adc
cmp
sbb
pop
jge
push
adc
cli
dec
jne
data16
ja
icebp
xor
stos
xor
mov
push
aas
xchg
xor
xchg
out
int
mov
sub
dec
jne
rolb
pop
push
mulb
inc
jp
shl
jae
push
outsb
cmpsb
adc
cmpsb
jns
pusha
add
and
scas
xor
stos
mov
push
out
roll
pop
jne
call
adc
mov
cwtl
imul
xchg
scas
mov
inc
retw
and
ja
xchg
outsl
and
repnz
cmpsb
push
test
cltd
notl
out
hlt
sub
cmc
int3
call
ljmp
xor
pushf
daa
jb
adc
addr16
fstl
std
xchg
jbe
push
fldt
cmp
in
or
rolb
outsb
lahf
xchg
loop
sbb
jecxz
push
dec
nop
dec
and
jne
adc
xchg
out
mov
cmpsl
pop
lahf
or
test
ljmp
repz
cmp
push
bound
sar
aad
cwtl
or
sub
idiv
aam
sbb
jns
pop
xchg
in
sub
std
movsl
stos
inc
mov
sbb
shrb
in
push
inc
inc
ret
mov
push
jo
fidivl
xchg
in
outsb
andb
push
data16
outsb
or
lret
pusha
fwait
cmp
adc
rcll
dec
mov
sbb
mov
mov
inc
or
icebp
sbb
jo
aam
mov
mov
outsl
int
insl
push
dec
push
and
cwtl
mov
ret
sahf
pop
inc
outsb
add
push
sub
adcl
xor
sbb
cmp
push
pushl
add
mov
jge
lds
movsl
fidivrl
xor
sahf
cmpsb
lahf
xchg
adcb
or
adc
adc
mov
lea
nop
sbb
and
lahf
pusha
lods
inc
loopne
mov
ret
jae
pop
cli
xchg
dec
iret
call
into
aam
jnp
add
mov
mov
push
aas
xor
loope
or
jno
jmp
iret
and
pop
shlb
cmp
fldl
inc
push
roll
repz
xchg
dec
into
stos
jnp
and
test
outsl
int3
cmpsl
icebp
cmpsl
xchg
outsl
iret
push
les
lcall
jmp
sub
outsb
les
push
pop
dec
popf
outsl
int3
sbb
int3
orb
cltd
add
jb
ljmp
sbbl
pop
push
test
adc
pop
ret
push
xor
test
aad
ror
cmp
push
fxam
inc
lea
add
jbe
xor
bound
dec
adc
decl
sub
sbb
cmp
clc
stos
int
or
std
xor
and
dec
icebp
imull
pop
in
jmp
outsb
test
sub
xchg
xchg
xchg
jae
jmp
fidivs
dec
sbb
arpl
ret
add
mov
push
pop
and
cmc
fs
jecxz
popf
push
pusha
dec
jl
mov
outsl
pop
aas
jle
jp
jge
sub
frstor
fimuls
js
mov
sub
xor
mov
sub
mov
sarb
jecxz
mov
aad
lahf
mov
jne
lds
add
in
mov
sub
sub
push
xchg
adc
sub
leave
jecxz
ret
andl
repnz
push
push
pop
cmpb
push
mov
pop
xchg
fidivl
lods
jge
jno
mov
pop
cmp
jmp
stos
push
xor
jne
jecxz
fsubs
rcl
and
lods
mov
push
sub
xchg
insl
test
push
pop
pop
ret
or
scas
dec
sbb
pop
ficoms
int3
push
push
adc
dec
repz
mov
in
imul
xchg
lea
and
jle
movsb
das
mov
int
mov
int3
popf
add
jbe
inc
mov
mov
idiv
mov
or
push
pop
cwtl
stc
dec
or
add
popa
clc
jp
mov
sbb
push
cs
aam
jns
ljmp
xlat
add
cs
testl
out
ss
pop
and
dec
jns
add
push
out
sub
rcrb
in
sub
push
sub
ljmp
xor
mov
adc
sub
mov
imul
hlt
or
rclb
sub
sub
or
inc
fsubl
pusha
mov
shlb
mov
das
adc
mov
aam
icebp
std
insb
xor
xor
movsl
cmp
push
cld
cli
push
mov
or
pop
enter
and
rorb
xor
nop
mov
mov
in
pushf
rclb
movsl
negl
movsb
fbstp
pop
add
shr
sti
decb
dec
jmp
or
pop
cwtl
clts
push
mov
loopne
das
add
dec
dec
pop
mov
pop
mov
sbb
clc
cmp
out
adc
mov
jb
mov
cli
fs
ret
lods
daa
inc
dec
fsubs
push
adc
mov
dec
sti
sbb
mov
and
repz
cmpsl
adc
add
orb
cmpl
movsb
lret
dec
fwait
sbb
int3
fnstenv
enter
pop
dec
mov
in
stos
mov
aad
bound
js
test
adc
mov
loop
clc
stos
in
int3
test
inc
xlat
lret
fnstenv
sub
add
addr16
push
jnp
pop
lret
cltd
insl
sbb
lret
sbb
ds
and
add
mov
xchg
mov
ret
cltd
stos
mov
mov
stc
adc
and
into
loope
xchg
sahf
mov
sbb
lock
clc
sbb
lea
mov
lahf
aaa
mov
aam
loopne
arpl
push
mov
sbb
or
js
push
or
cltd
nop
pusha
imul
cmp
lcall
rcrb
and
sbb
cltd
mov
notb
scas
lods
add
aad
mov
sti
sbb
mov
sbb
inc
pop
test
push
lods
in
subb
mov
popf
and
add
push
je
jp
push
mul
imull
mov
iret
ret
lret
mov
cli
push
sti
adc
sbb
cmp
int3
mov
mov
xchg
or
and
shrl
and
shl
xchg
lock
ret
imul
loopne
fs
div
jnp
mov
test
test
or
lahf
movsl
xchg
mov
mov
mov
xchg
data16
stos
and
and
int
pop
mov
cmp
pop
sub
pop
push
stos
push
cmpsl
xlat
dec
nop
cs
push
xor
dec
call
adc
xor
cmp
add
mov
cmp
loopne
cmp
cmpsb
mov
adc
jge
pop
add
stos
or
ret
mov
push
adc
mov
mov
inc
pushf
negl
rorb
stos
cmc
aas
shll
cwtl
insb
lcall
cmpsb
cmp
jb
inc
ret
lods
push
cwtl
fwait
push
push
mov
aas
in
shlb
sbb
dec
pushf
pop
dec
mov
js
sbb
xchg
cmc
push
add
sub
pop
lcall
insl
ret
arpl
mov
mov
fs
mov
xor
xchg
pop
dec
fmul
sub
shrb
orl
out
ret
pushl
adc
sbb
adc
mov
das
fsubr
push
mov
mov
cmpl
cmpsl
pop
pop
nop
add
inc
xor
push
mov
sbb
test
in
daa
int3
sti
arpl
jmp
jno
mov
loope
sub
icebp
mov
jo
inc
rcl
push
inc
lret
jp
fwait
pushl
arpl
inc
sbb
mov
insl
dec
lret
mov
inc
dec
lea
out
mov
sbb
xchg
lret
rorl
xor
push
xchg
inc
and
push
adc
dec
xchg
add
xchg
add
pushf
mov
xchg
adc
int3
jne
xchg
sbb
cmp
or
aam
inc
imul
push
push
sub
mov
and
shl
mov
xchg
mov
push
pop
jle
in
jbe
testl
mov
mov
sub
in
out
lret
daa
jnp
adc
pop
out
mov
pushf
fcomp
call
add
jbe
setnp
insl
inc
cmp
lods
pop
or
mov
cmpsb
js
imul
das
inc
pop
cmp
fistps
push
jno
roll
sti
and
sbb
xchg
xlat
sbbb
jmp
sbb
xchg
mov
je
and
sub
cmc
mov
hlt
imul
fwait
lds
test
daa
icebp
cltd
fldcw
cltd
pop
mov
push
push
jp
pop
test
fistpll
adc
dec
sahf
mov
dec
mov
cld
mov
xchg
psubq
mov
fnstenv
fmul
xor
dec
sub
adc
lock
push
sbb
clc
xchg
mov
add
lahf
in
inc
insb
pop
shr
fcompl
xchg
cli
lcall
xchg
shrl
ret
xchg
into
and
push
adc
cmp
mov
ds
mov
add
mov
and
xchg
or
mov
push
cwtl
loopne
inc
adc
fxtract
jo
cmpsb
xchg
push
xlat
shl
dec
pop
sbbb
inc
mov
mov
xchg
stos
xor
mov
das
pusha
sbb
mov
movsb
push
adc
mov
jno
pop
or
ja
fisttpll
cmp
xor
sbb
dec
cmp
and
dec
addr16
or
adc
mov
test
scas
ret
das
or
dec
or
or
cs
xor
out
mov
lea
ljmp
mov
call
push
aam
mov
push
mov
fists
fdivr
xlat
retw
int
popf
fs
enter
mov
lods
outsl
cmp
in
mov
in
pop
outsl
cmp
testb
loop
fistpll
mov
mov
or
mov
push
fidivl
into
in
xor
pop
lcall
xchg
sub
inc
sbb
jnp
insl
sub
mov
push
xchg
lock
movsb
loopne
fnstsw
xchg
mov
fbstp
jge
xchg
pop
imul
das
sbb
sub
and
stos
incb
push
fidivrs
cltd
jbe
mov
jg
cmp
or
subl
inc
stc
divl
movsl
cmc
jle
ds
jmp
push
aaa
int
mov
out
sbb
rolb
fmuls
icebp
enter
pop
sbb
arpl
lock
inc
cwtl
xchg
mov
pop
push
and
cs
lock
pop
jecxz
fcomps
sub
nop
sub
pop
jecxz
or
lods
stc
sub
inc
loop
fdiv
ja
cmp
jmp
xchg
pop
mov
inc
cmp
arpl
out
mov
push
out
ljmp
test
xchg
and
push
xor
outsb
and
add
push
mov
lcall
fcom
repz
xchg
outsb
ret
in
dec
insl
xchg
sub
repz
test
push
lret
push
xor
inc
not
xor
iret
les
xchg
sbb
in
into
out
push
jnp
dec
mov
cmp
adc
popa
mov
push
scas
stos
jecxz
mov
mov
out
xor
repnz
ds
ret
mov
or
or
xor
mov
mov
xchg
pop
mov
leave
lahf
xlat
lahf
jnp
dec
ja
mov
cmpsb
add
mov
mov
jmp
or
enter
int3
xchg
ss
nop
push
lea
lds
sub
fmull
dec
sub
adc
xchg
sti
jns
adc
adc
loop
sbb
push
jne
or
pop
sbb
ret
icebp
clc
imul
lods
cmp
faddl
je
dec
dec
ds
es
negb
cmp
sar
paddw
repz
ret
push
and
pop
jnp
jge
add
xchg
loop
insl
dec
xlat
outsb
and
nop
pop
fldenv
in
ret
dec
test
push
in
and
insl
test
es
inc
pop
xor
push
clc
nop
push
ljmp
imul
jae
push
xchg
sub
out
sbbb
ds
push
add
fs
lock
iret
scas
daa
mov
daa
push
mov
orb
repz
xor
cli
sahf
test
xchg
es
push
pop
imul
insl
shll
jge
icebp
mov
jo
shrb
nop
cmpsl
std
mov
cmpsl
push
fst
es
stos
popa
cmpsl
leave
jae
inc
mov
mov
dec
inc
clc
xlat
cmp
inc
scas
ja
add
imulb
lahf
pop
dec
fnstenv
xchg
cwtl
repz
pop
push
fnstenv
pop
sbb
cli
imul
dec
lods
addb
lahf
or
cmpsb
daa
aaa
mov
push
pushf
xchg
shr
sbb
xor
and
outsl
xchg
mov
lock
push
jmp
or
ret
and
cmpsb
cmp
adc
aam
sub
dec
aaa
shrl
scas
jmp
pushfw
es
popf
inc
fisttpl
adc
lock
popf
push
lods
imul
js
sub
test
imul
loopne
out
les
std
test
rcrl
test
mov
inc
lahf
fwait
ja
movsl
movsl
xchg
push
imul
ds
mov
and
scas
imul
clc
cli
mov
push
mov
clc
adc
shlb
push
sbb
arpl
aad
ja
icebp
int3
pop
aam
xchg
and
pop
in
iret
mov
scas
cmp
dec
dec
push
roll
enter
gs
mov
testb
in
out
add
fiaddl
es
and
adcl
dec
add
push
mov
dec
int3
push
bound
clc
fimull
leave
jnp
cmc
sub
xchg
add
and
cmp
stos
aam
pop
and
jmp
cld
jecxz
sub
out
xor
push
pop
shlb
cmpl
iret
sarl
or
mov
adc
outsb
es
int3
je
outsb
mov
pusha
ds
fsubrs
movsb
push
popa
dec
pop
mov
cld
or
sub
lods
xor
inc
ja
xor
fmull
cmp
adc
pop
stos
mov
addr16
imul
or
jno
pushf
pop
xor
push
xchg
push
inc
out
movsl
inc
mov
fs
push
jecxz
rcll
push
sub
cmp
adc
jnp
call
mov
mov
pusha
mov
outsb
cwtl
push
pop
imul
pop
cmp
push
popl
sbb
xorb
repz
fucomi
fsubs
pop
clc
lea
gs
rcl
pop
xor
and
aaa
adc
pop
iret
loopne
cmpsb
jge
mov
add
aad
xchg
repz
xor
add
arpl
fdivrs
push
jl
int
xor
xor
sub
push
lock
push
push
dec
repnz
push
inc
sarb
jno
pusha
push
aad
adc
adc
xchg
and
jl
add
stc
xor
out
pop
imul
outsl
jb
cmpsb
xchg
add
jb
arpl
mov
pop
or
out
and
jecxz,pt
out
out
xor
iret
mov
dec
ret
out
lahf
lret
jae
popa
lahf
cmp
jmp
loope
imul
icebp
addr16
mov
xor
lret
cmc
jge
jae
inc
pop
gs
mov
jnp
or
mov
inc
negl
cli
add
sarl
insl
sub
ficomps
push
lahf
rclb
out
push
jns
mov
ds
xchg
xor
add
sbb
xchg
movsl
adc
lcall
push
adc
xor
fcomp
nop
cmpb
sbb
lods
mov
out
rcll
push
orb
push
xor
decl
jo
insl
lods
sub
xchg
and
clc
push
xchg
fldl
les
cli
in
xchg
adc
adc
ss
push
js
mov
bound
push
pop
or
mov
rorb
rolb
dec
rcll
faddl
sbb
push
fnsave
mov
and
in
out
mov
and
jno
add
mov
mov
and
ret
and
and
and
loopne
arpl
sub
mov
test
inc
frstor
adc
enter
mov
test
js
push
sbb
aaa
push
or
aad
dec
icebp
bound
push
je
iret
mov
push
lods
sbb
punpckhwd
out
dec
pop
arpl
xchg
jae
add
push
or
cmp
icebp
nop
das
push
push
xchg
xchg
cmpsb
adc
jle
popa
shlb
test
adc
aam
pop
leave
leave
adc
push
jo
xor
je
dec
adc
lods
adc
sbb
jl
std
mov
daa
push
and
sub
cmp
dec
mov
call
xchg
lret
push
jecxz
dec
ror
sbb
test
mov
sbb
jg
jbe
in
sbbb
jbe
or
mull
jp
outsb
mov
xchg
ss
rcll
notb
cmpsb
push
mov
psrad
cltd
jg
in
pop
mov
sahf
adc
xor
cmp
in
pop
es
jb,pn
mov
jmp
incl
push
cmp
cmp
addr16
sahf
xlat
cwtl
cmp
out
pop
xchg
mov
stc
mov
push
and
push
cli
xor
sub
int3
push
mov
jae
pushf
cmp
dec
xlat
in
adc
sub
lret
xchg
cmp
aaa
cmpsb
xor
repz
inc
lock
fadds
out
scas
push
enter
and
out
push
lea
push
sbb
and
ret
pop
push
out
inc
sbb
ret
lock
loope
lret
rorl
shl
mov
cld
int
shrb
inc
daa
dec
push
aaa
sbb
pop
mov
inc
std
lcall
sarl
movsl
cmpsb
xchg
rorb
or
out
xchg
xor
dec
cmpb
mov
jbe
push
pop
push
inc
icebp
outsl
mov
in
sub
dec
filds
repz
insb
cmpsb
inc
bound
pop
loopne
in
mov
push
inc
stos
stos
sbb
mov
addr16
push
pop
push
dec
xor
mov
cmc
sti
stos
fcoml
push
mov
mov
and
int3
dec
cld
pop
unpcklps
and
rcll
pop
mov
push
push
add
ja
jae
aas
sub
sbbb
ja
scas
cmp
lock
stos
cmp
dec
lock
xchg
sbb
popl
in
mov
outsb
loopne
xchg
f2xm1
repnz
add
mov
arpl
sbb
adc
inc
jl
push
popa
push
outsb
ds
ss
inc
mov
lret
sahf
cwtl
mov
and
insl
mov
and
mov
rcrl
sub
jne
aas
jg
out
xchg
cmpsl
mov
in
ljmp
insl
in
idivb
mov
out
ja
imul
sbb
out
or
sbb
sub
mov
das
dec
jp
add
push
ja
repz
data16
fsubr
loopne
icebp
or
cli
lock
shlb
push
xlat
xor
clc
jns
std
adc
xor
aaa
enter
xor
add
dec
push
inc
shrl
and
add
or
jb
mov
sub
pop
imul
inc
lds
pop
jl
sbb
int
out
xor
pushf
into
pushf
cmp
adc
sbb
lds
popa
stos
stc
mov
and
cld
adc
enter
nop
fmul
cmpsb
movsb
ds
out
int3
jno
and
sbb
cld
mov
ror
mov
loop
mov
stos
outsl
cs
gs
arpl
and
mov
dec
xchg
jns
mov
jnp
jnp
mov
in
push
adc
leave
and
mov
pop
clc
mov
jae
in
roll
shrb
inc
sub
cwtl
imul
mov
pop
dec
push
push
in
hlt
sub
sub
xchg
shll
dec
imul
enter
sbb
jns
inc
push
inc
add
add
xor
push
dec
pop
mov
xchg
insb
adc
push
dec
jmp
mov
push
mov
dec
sti
lahf
das
or
loop
sahf
dec
xchg
sbb
rcl
jecxz
ljmp
je
mov
lods
and
inc
pop
jecxz
std
pop
mov
and
jl
add
inc
inc
xor
ficomps
sahf
ret
and
add
cmpsb
in
les
dec
rcl
js
jno
jnp
sbb
fistpl
pop
cwtl
cmp
mov
or
and
mov
sbb
ja
pop
lret
sbb
aaa
ud0
xchg
push
jge
jmp
or
push
sbb
lret
cmp
push
jmp
sahf
jno
cmpb
into
mov
xor
out
pop
rorl
cmp
pop
xor
insl
and
or
push
cmc
sti
pop
and
aaa
mov
lods
mov
push
into
and
and
xchg
or
test
jle
add
int
emms
repnz
jl
mov
inc
in
fiaddl
pop
inc
subb
pushf
test
push
jge
sub
movsl
mov
cwtl
mov
ds
fistpl
mov
jp
hlt
in
aam
fisttpl
or
sbb
xchg
fwait
and
push
sub
sbb
movsl
add
cmp
cli
lret
jle
adc
in
aas
icebp
inc
push
adc
repz
fisttps
add
test
fsubl
mov
test
call
insl
clc
jmp
dec
mov
outsl
loope
xchg
cwtl
test
inc
aas
dec
push
test
je
lds
insb
daa
cmp
mov
lods
sub
mov
movsl
fnstcw
cli
lret
hlt
mov
add
cltd
mov
add
jle
mov
idivl
adc
sbb
xchg
jp
clc
orb
gs
ja
jge
cmpsl
fwait
ret
add
outsb
lret
inc
or
fisubs
inc
pop
addb
xlat
movsl
and
cmp
jne
loopne
imul
ror
fstps
js
xor
cmp
xchg
and
lock
xor
xchg
movsb
fstpl
inc
inc
pusha
mov
cltd
andb
xor
loopne
dec
xchg
arpl
test
dec
inc
rorb
inc
fadd
icebp
imul
je
xchg
fcoms
lret
movsl
lcall
add
push
rol
mov
arpl
pusha
push
scas
mov
stos
add
fwait
ss
adc
das
lahf
pop
ret
adc
mov
mov
mov
and
fadds
lea
sar
mov
repnz
push
popf
adc
jnp
sub
dec
xchg
mov
inc
push
push
pop
jmp
inc
mov
pop
popl
lods
jl
lds
icebp
sub
xchg
mov
cmp
rorl
or
xor
lahf
xorl
outsb
mov
jno
test
push
lret
div
xchg
sahf
xchg
int3
testl
cmc
fwait
mov
leave
inc
repz
jg
mov
mov
dec
inc
cmp
cmp
mov
adc
aas
je
stc
jmp
and
mov
ljmp
push
sub
mov
enter
les
fsubr
cmpsl
sub
xchg
scas
in
push
mov
inc
mov
add
mov
cmp
imul
filds
call
stc
add
push
loopne
inc
adc
sbb
push
lret
push
dec
sbb
shl
jo
adc
sub
xchg
and
add
or
sub
mov
sarb
xlat
inc
mov
es
mov
jmp
cmp
and
push
cmp
addb
addr16
mov
bound
xchg
repz
js
bound
enter
ret
jno
mov
pushl
dec
int
xchg
fs
pop
and
xchg
jnp
dec
into
inc
sarl
in
aad
mov
and
mov
insb
mov
mov
or
in
mov
arpl
stos
aad
stos
test
lods
inc
jp
mov
mov
aaa
push
pop
mov
sbb
sar
popa
aam
les
clc
ja
adc
push
fbstp
add
mov
fs
popf
out
sub
and
call
ljmp
jl
xlat
loope
shll
je
jecxz
push
in
fwait
sbb
jge
adc
xchg
add
or
fxtract
push
sub
push
outsb
inc
jge
jecxz
bound
xchg
fs
or
and
ss
fcmovbe
int3
neg
sbb
bound
lahf
cmpsl
rorl
pop
push
lahf
adc
jb
sub
aaa
sbb
fsubrl
test
fsubs
icebp
jne
inc
das
cli
pop
shrb
xchg
sub
ljmp
pop
cwtl
xchg
push
push
aam
outsl
push
mov
out
ret
xchg
jne
aas
jg
arpl
sahf
cmpsb
movsb
sub
fs
or
nop
mov
dec
pushf
mov
inc
or
cmp
mov
cltd
or
sbb
push
mov
and
call
aam
movsb
stos
pop
xchg
jmp
ljmp
out
movsl
aas
hlt
push
or
and
fnstcw
leavew
or
out
pop
pop
mov
dec
imul
jg
fldt
cmp
nop
mov
add
and
aaa
cld
out
ss
fdivr
dec
and
add
int3
sub
cmc
dec
fdivrl
inc
cmp
stos
mov
xchg
pop
adc
jb
fiaddl
xchg
jle
and
xchg
clc
ret
xchg
pop
lahf
in
jae
add
mov
clc
or
shl
in
dec
jns
adc
int3
or
das
inc
cmp
mov
cmp
jo
jg
inc
fmul
jge
mov
int
mov
out
fcoml
ret
sbb
mov
int
or
add
xchg
cmp
sbb
adc
dec
fisttpl
add
ret
mov
out
sbb
mov
or
dec
xorb
mov
scas
cli
dec
cmpsl
pop
outsl
jg
int3
xchg
add
ret
jno
ret
pop
inc
aad
or
bound
push
ret
or
fldt
xchg
xor
iret
mov
inc
aad
das
or
sbb
cld
bound
jmp
push
ret
push
push
push
adc
sub
aas
test
dec
xor
mov
rcrl
or
mov
jg
adc
jge
jp
frstor
sbb
xor
push
xchg
dec
mov
stos
mov
movsb
push
popf
aam
dec
loop
jns
sub
xchg
dec
into
xor
mov
dec
scas
pop
sub
pop
mov
and
fadd
jg
bound
lret
mov
lahf
shlb
or
scas
cmpsb
cld
jbe
jg
mov
mov
xchg
fcomp
mov
cmpb
inc
sti
in
iret
pop
pusha
test
cmp
fisubs
test
jb
xchg
out
aas
inc
push
inc
stos
cwtl
rorb
jmp
xor
test
cltd
into
mov
lea
cmpsl
and
jmp
jmp
arpl
xchg
les
add
mov
jae
jno
mov
mov
hlt
call
jno
xor
inc
lods
in
outsb
data16
fdivrl
pop
scas
sub
and
aam
mov
ss
stos
les
addr16
jb
jo
popa
shll
inc
outsb
call
sub
pop
xor
mov
pop
je
add
xchg
jl
pop
push
sti
push
nop
das
hlt
jl
into
xchg
stc
adc
movsb
popf
push
xor
shlb
sub
mov
cwtl
cmpl
mov
adc
sub
mov
mov
pop
or
jp
push
sti
stos
inc
ljmp
loopne
xchg
mov
stos
in
xchg
sbb
add
in
cli
add
push
dec
in
sub
je
mov
lcall
sub
dec
imulb
sub
lahf
add
push
dec
push
dec
xor
pop
adc
aam
repnz
xor
cmpsl
fwait
cmp
imul
call
out
adc
mov
sub
mov
insb
out
inc
aad
pop
push
loop
xor
pop
aad
mov
cld
test
aad
lea
int3
bound
and
imul
popf
cmp
pop
pop
aad
jbe
stos
push
cmp
mov
inc
cmpsb
outsb
dec
push
adc
in
jns
inc
lock
pop
aad
aas
fistl
test
inc
cwtl
dec
rcrl
cmp
xor
js
pop
ret
lret
addr16
lahf
imul
adc
pop
jmp
mov
cmpb
adc
pop
mov
pop
sbb
adc
stos
jmp
in
enter
pop
and
std
xlat
cli
push
lret
cmp
mov
jp
popf
cmc
mov
mov
xlat
mov
pop
pop
adc
inc
shr
sub
inc
into
push
add
scas
iret
popa
stos
mov
xor
adc
outsb
jno
sub
xchg
insl
and
das
jecxz
inc
and
rcr
jge
or
jns
push
jp
mov
scas
jns
push
int
push
cltd
bound
mov
bound
sbb
jp
cmp
iret
decl
mov
int
sub
scas
cli
rcrb
outsb
mov
ret
sbb
and
sti
pushf
movsb
or
test
test
push
lock
fimuls
aas
andb
imul
mov
das
shll
cmp
or
jecxz
ja
sbb
push
call
xchg
pop
adc
test
dec
inc
cmp
mov
xchg
pop
xchg
mov
pop
push
out
jae
and
rcl
movsl
jle
mov
outsb
lods
push
inc
pusha
push
pop
testl
lret
rcrb
mov
mov
ja
stos
lods
rcrl
inc
lock
sbbb
or
pushf
sbb
loop
in
popf
stos
pusha
and
repz
push
push
sarb
test
sub
xor
dec
sahf
rolb
shll
call
ljmp
fildll
xor
sub
mov
fstps
adc
dec
popf
sbb
out
mov
loop
stos
fistpl
lahf
jns
cmc
jne
xchg
mov
or
add
repnz
cmp
xor
push
and
sbb
sbb
mov
push
adc
in
enter
mov
outsl
inc
pop
or
insb
mov
add
sub
and
sub
lds
int
ljmp
test
data16
xor
aam
roll
pop
xchg
cmp
stc
hlt
jo
in
add
sub
jmp
movsl
mov
inc
mov
or
push
xchg
mov
outsl
mov
ljmp
xor
and
addr16
cmc
dec
in
push
mov
push
sub
jmp
data16
pop
xor
mov
mov
add
loopne
jle
mov
clc
cmp
push
pusha
sub
mov
pop
lock
adc
mov
aam
fwait
push
notb
add
sub
cltd
lret
call
pop
outsb
or
dec
and
dec
cltd
jbe
test
ret
jae
addr16
stc
mov
push
add
dec
mov
inc
aam
insb
inc
xchg
mov
or
sbb
inc
inc
mov
inc
sbb
les
and
xorl
ficomps
fmulp
lock
dec
cmp
lods
pop
sub
sbb
ds
rolb
push
outsl
scas
and
cmp
pop
movsl
jbe
arpl
mov
dec
and
adc
sub
les
mov
roll
push
and
push
popa
imul
out
mulb
adc
dec
test
mov
enter
xor
xchg
inc
xchg
pop
mov
inc
sub
push
mov
es
ljmp
jmp
lods
ljmp
jmp
insb
xchg
dec
cltd
mov
or
insb
jge
aam
ds
scas
stc
das
in
mov
aam
sbbl
sbb
repnz
mov
test
and
add
add
fcoml
xchg
and
dec
xchg
pusha
repnz
sahf
mov
out
jns
or
es
sbb
push
imul
mov
lock
aad
es
or
xor
jg
ret
mov
sbb
or
gs
rolb
test
nop
mov
cli
dec
rcrl
daa
ljmp
test
outsb
stos
jp
mov
pop
cltd
inc
cmpl
inc
push
inc
jmp
mov
daa
loopne
mov
push
mov
cmpsb
xchg
lods
ja
shll
sarb
roll
jnp
mov
mov
cmpsl
cmp
mov
test
iret
ljmp
js
push
jle
sub
pop
arpl
mov
xorl
cmp
imulb
xlat
fcompl
rorl
dec
fwait
and
jb
mov
movb
ja
xchg
xor
sbb
dec
xchg
in
loop
xchg
add
gs
push
xor
mov
repnz
stos
xor
dec
inc
mov
inc
pop
jecxz
and
cmpsl
in
dec
xchg
inc
xor
xor
ret
lea
push
xchg
es
and
aaa
xor
aas
ljmp
pop
shll
lods
ja
fcoms
mov
repz
daa
enter
jg
dec
mov
or
pop
rcrl
imull
mov
xchg
xor
jne
push
out
fcmovb
push
aam
outsb
fistpll
repnz
sbb
pop
dec
adc
addb
fnsave
fwait
scas
fisubl
jns
jl
mov
mov
int
cmp
jmp
ljmp
pop
ljmp
pop
mov
gs
mov
lret
sub
jns
iret
and
xor
fnsave
imul
bound
add
push
adc
insb
jnp
stc
loop
pushf
xor
lahf
out
sbb
cmp
adc
je
sub
ficoms
xchg
cmpsb
fimull
int
cld
fcmovnu
inc
mov
push
jle,pn
int3
mov
jmp
shll
stos
xor
stos
xor
dec
adc
add
jb
or
out
mov
nop
xor
stos
jb
pop
pusha
pop
lods
cwtl
mov
push
jae
ret
cmp
sbb
xchg
cmp
push
pop
mov
jae
push
aas
push
xor
stos
jne
stc
xchg
addb
clc
mov
push
and
shrb
test
test
aas
mov
in
inc
dec
mov
mov
jbe
push
pop
stc
mov
stos
xchg
out
subl
pop
add
jne
cmp
outsl
inc
andb
inc
sub
sub
mov
vmwrite
jg
mov
bound
adcb
popa
xor
mov
push
aam
xor
shl
or
call
sti
push
adc
rclb
mov
not
pop
xor
scas
sahf
rcrl
cs
and
sbb
push
xor
icebp
jge
dec
in
xor
das
pop
push
inc
inc
les
ljmp
xchg
insb
push
or
mov
rcrl
add
and
pushf
add
in
mov
jnp
mov
cmpsl
and
dec
mov
push
inc
popa
pop
jp
push
sbb
or
hlt
push
sahf
sti
pop
mov
lods
repnz
push
push
mov
imul
mov
je
mov
cwtl
mov
out
scas
dec
and
pop
int3
jnp
les
inc
push
mov
push
xchg
jbe
icebp
cld
xchg
pushl
pop
arpl
sti
dec
xchg
push
pop
mov
insb
pop
add
test
pop
int
adc
xchg
leave
jg
lret
out
scas
popf
cld
push
bound
or
stc
shlb
mov
jb
leave
mov
dec
inc
cmp
adc
add
mov
mov
xor
loope
les
jne
hlt
xor
and
ss
pop
test
sbb
pop
or
sahf
push
cltd
jmp
and
cmp
sub
inc
xchg
loope
xor
mov
xlat
shlb
subl
jmp
adc
test
mov
lahf
adc
sbb
insl
mull
or
jno
je
adc
mov
lret
push
mov
mov
xchg
adc
lock
sahf
dec
das
cmp
gs
mov
dec
mov
pop
mov
repnz
jb
sbb
push
bound
xchg
test
std
je
mov
aas
cltd
cmp
adc
ds
test
popa
push
in
fstpt
jae
xor
or
addb
jns
xor
in
and
xor
push
add
or
bound
mov
fsubrs
fdivs
aaa
push
insl
stos
cli
lahf
mov
pop
ret
pusha
pop
push
dec
mov
xchg
fbstp
inc
cwtl
sbb
jae
fsubrs
mov
pop
decl
jl
mov
ss
xor
subb
data16
jle
arpl
sahf
loope
mov
adc
sahf
ljmp
sub
jmp
xchg
rclb
fdivr
popa
gs
cmp
sub
xor
xor
sarl
rcr
fsub
sbb
dec
stos
push
or
pop
mov
dec
insl
adc
mov
push
mov
cmp
pop
dec
cld
cmp
aaa
je
daa
mov
mov
dec
fiadds
nop
scas
dec
inc
sub
mov
fbld
lea
scas
cs
sbb
dec
jns
scas
xchg
pop
test
cmp
loopne
push
sbb
pop
jp
in
es
fcoms
sbb
dec
es
out
mov
xchg
repz
clc
xor
aam
push
inc
sbb
mov
inc
sub
std
sbb
add
pop
fnsave
mov
test
inc
push
movsb
fisttpll
push
nop
mov
and
sbb
cmc
add
gs
pop
mov
add
mov
push
rorl
dec
in
addr16
add
popa
add
in
pop
addb
insl
mov
jne
stos
push
or
mov
pop
pop
jmp
or
nop
push
fs
inc
nop
gs
loope
pop
out
cmc
call
jecxz
repnz
and
outsl
mov
call
fstp
adc
xlat
mov
insl
sub
in
or
sub
sub
jb
jo
adc
adc
das
mov
imul
add
jb
int
and
fstps
mov
jo
out
xchg
test
xchg
repz
movsb
fsubrl
mov
aas
or
pop
repnz
xchg
aam
nop
lret
inc
in
xor
jp
sbb
adc
movsl
or
mov
sbb
mov
test
adc
in
jnp
dec
aaa
pop
and
add
jecxz
pop
and
or
xor
mov
xchg
sub
icebp
out
hlt
cmp
imul
push
adc
lods
inc
je
and
mov
out
dec
in
into
lds
aaa
sub
aaa
mov
mov
cmp
jge
jnp
mov
cmc
imul
cmpsb
loopne
loope
ret
mov
xchg
jecxz
sbb
movsl
mov
hlt
mov
xor
andl
or
gs
push
mov
pop
jns
and
inc
xchg
rcrb
mov
repz
cmp
sbbl
xchg
sti
lea
pop
int3
adc
outsb
and
ficoms
cvtdq2ps
lahf
fs
sbb
gs
jo
dec
shll
cwtl
and
mov
add
sbb
lret
or
hlt
push
push
fdivrs
mov
sub
rclb
cmp
push
xchg
pushf
dec
notb
add
call
scas
outsl
cmpsb
pop
mov
out
add
je
cmp
inc
int
xchg
ja
fidivs
mov
or
mov
adc
xlat
call
or
jne
std
out
std
sub
rorb
mov
inc
sbb
jp
pushf
dec
ja
ds
push
ja
adc
sbb
adc
insl
adc
mov
je
cltd
fisttps
movsl
js
sbb
nop
movl
fs
sub
jg
insb
dec
add
stos
adc
pop
mov
inc
mov
fs
cmp
dec
mov
mov
pop
ja
sbb
and
mov
arpl
cmp
pop
adc
xor
jne
inc
jge
pushf
cmp
xorb
xchg
jmp
inc
xchg
pop
xchg
loope
icebp
in
addr16
push
insb
or
inc
lea
mov
sbb
mov
mov
sbb
imul
sub
sti
cmp
das
adc
addr16
or
lea
jae
popf
mov
inc
sub
sub
shrl
jnp
cmpsb
call
movsb
pop
inc
test
dec
xor
push
lret
lock
pop
lea
andl
ret
cmp
mov
cmp
add
push
aaa
loop
lahf
push
xchg
xchg
xorb
jle
mov
fdivl
mov
mov
sbb
cli
adc
add
ficomps
jg
mov
push
imulb
push
add
rcll
sub
fwait
enter
mov
pop
add
int3
pop
mov
mov
jae
adc
pop
pop
adc
icebp
sbb
adc
std
pop
mov
push
xchg
xchg
xor
mov
fisubrs
jp
imull
orb
fisubrl
mov
imul
add
mov
inc
pop
sar
ret
jns
and
sub
ret
loopne
movsb
mov
in
sbb
mov
adc
mov
push
je
mov
daa
push
dec
rcrb
cmp
loope
sub
mov
stc
pop
push
inc
dec
cmp
lock
sbb
outsl
sti
loop
sub
pop
ret
dec
movsb
imul
mov
lds
push
mov
push
jecxz
jecxz
or
or
sahf
inc
cmp
scas
or
inc
les
push
or
sti
dec
mov
int
push
ja
pop
leave
stos
mov
push
shll
cmp
fisubrs
lcall
aaa
cmp
pop
add
std
xor
pop
out
inc
js
and
or
addl
fistps
xchg
dec
rcll
mov
push
inc
cmp
xchg
repnz
xorb
dec
loopew
pop
loopne
sbb
jno
sbb
sbbl
pop
mov
shlb
jge
add
icebp
or
clc
mov
popa
mov
xchg
push
sbb
enter
cmp
xlat
inc
sub
pop
mov
sub
inc
xchg
xor
cmp
sub
xchg
adc
ds
or
rorl
fstpt
fwait
and
je
adc
js
iret
mov
mov
push
ja
xor
js
lea
cmp
fists
sahf
das
jno
dec
add
test
jno
mov
hlt
loope
test
jge
gs
ss
pop
js
roll
mov
out
lds
stos
dec
and
out
mov
and
pusha
addl
inc
daa
cwtl
mov
sub
mov
in
push
mov
and
jp
push
std
adc
adc
mov
jno
push
std
mov
jbe
xchg
mov
imul
cmc
xchg
and
lods
fcoml
divb
or
imul
jb
adc
add
insb
insb
loope
and
dec
repnz
jge
fimull
mov
icebp
dec
mul
out
ficoml
daa
mov
xor
cmp
movsb
sub
movsb
outsl
mov
lahf
ficomps
lods
lds
int3
test
mov
lret
xchg
pop
ds
cmp
scas
movsl
fsubl
sbb
loope
scas
mov
movsb
shl
into
push
leave
out
inc
mov
mov
scas
loopne
test
pop
sahf
lea
xchg
push
or
add
mov
xor
mov
push
cmp
sbb
aaa
ss
ja
movsb
mov
aas
inc
scas
divb
loop
nop
xchg
jmp
dec
adc
out
sbb
repnz
lcall
pusha
lods
or
andb
in
lds
pop
adc
jne
outsb
int
sub
into
or
mov
push
lcall
mov
jo
fisubs
xor
or
addr16
scas
sbb
or
jecxz
lock
xchg
imul
in
mov
les
std
pusha
ret
dec
xchg
loop
fiaddl
mov
xchg
add
sbb
push
inc
mov
loope
imul
cmp
jp
sbb
cli
in
in
adc
iret
cltd
jl
xchg
xchg
out
sti
mov
lock
xchg
scas
stos
xor
int
addr16
sbb
push
std
mov
cmc
sbb
pop
lods
scas
out
fstpt
xor
adc
into
dec
or
cmp
in
cmp
mov
push
adc
sub
sbb
aas
movsl
inc
ljmp
mov
ja
push
in
ljmp
outsl
sbb
in
ds
pushf
jae
inc
outsl
inc
outsl
adcl
dec
paddsw
movsl
mov
icebp
pop
adc
jbe
jmp
ja
ss
push
clc
pop
mov
cmp
and
pusha
cmp
push
mov
into
add
add
mov
push
jg
jmp
aam
iret
ss
lcall
adc
loop
jg
push
arpl
movsl
push
sarb
adc
bound
dec
sub
jecxz
rclb
fdivrs
xlat
cltd
fcmovbe
movsb
push
lret
mov
xchg
ljmp
neg
cmpsb
adc
mov
xor
pop
rorl
xor
mov
stc
in
jns
popf
subl
repnz
push
pop
shrb
jmp
in
dec
lahf
xor
icebp
pop
test
mov
inc
xchg
push
adc
sub
ja
xor
les
retw
pop
fldcw
data16
inc
imul
sbbb
dec
or
mov
and
pop
lods
daa
mov
push
adc
fwait
push
cmpsl
pop
rdmsr
dec
loopne
pushf
scas
xchg
jbe
push
mov
or
mov
pop
cld
jmp
lret
neg
popa
mov
int
pusha
daa
jmp
lods
outsb
lds
push
jns
hlt
cmpsb
push
mov
insb
and
xor
xchg
imul
jg
xor
insl
test
mov
xor
pop
inc
cmp
adc
test
aaa
fildll
das
fmull
mov
pop
or
push
pop
cmp
mov
cmpb
clc
dec
fdiv
cmp
sbb
fisubrl
xchg
add
adc
push
mov
cmpsb
je
sub
fstpt
dec
inc
in
cmc
adc
lods
lcall
test
dec
in
and
inc
mov
inc
dec
dec
cmpsb
leave
pusha
popa
insl
movsb
sub
cmp
nop
mov
ret
pop
stos
inc
cmc
pop
aaa
int3
adc
jle
cmpsb
outsb
adc
xchg
movsb
add
mov
mov
enter
cltd
mov
dec
cmp
and
jae
xchg
shll
pop
mov
aad
sti
mov
xor
es
or
pop
mull
lahf
test
dec
xor
push
and
pop
das
rorl
or
loop
jl
mov
sub
imul
arpl
cmpsb
loope
daa
pop
pop
push
cmp
aaa
ss
loopne
repz
mov
out
add
jl
fsts
xor
cmp
test
adc
xchg
je
xor
mov
mov
lods
sbb
mov
icebp
mov
aas
jae
jmp
js
ljmp
cwtl
loop
or
pop
sbb
daa
dec
loopne
pusha
xchg
mov
dec
imul
lahf
sbb
xor
inc
push
lea
mov
xorb
mov
rorl
push
cmp
lea
xor
icebp
lods
cmp
test
dec
fcmovnu
rcrl
cmp
enter
sbb
mov
and
imul
roll
loop
fcoml
je
pop
mov
add
cmp
push
pop
xor
out
sbb
xchg
inc
xchg
insl
lea
roll
ja
mov
mov
lret
ljmp
int3
icebp
dec
std
sub
mov
xor
roll
xchg
adc
shlw
dec
xchg
cmp
movsb
fdiv
jae
and
push
in
loop
push
lods
mov
les
mov
adc
int
and
in
mov
fs
ds
mov
xor
test
aas
dec
sub
addb
fldcw
in
in
jp
pushf
jl
ds
cmc
cli
loopne
add
rcr
leave
fildl
jno
push
inc
sbb
repz
int3
xor
imul
addr16
scas
cmp
dec
iret
icebp
cmp
loop
push
xlat
push
mov
lea
inc
add
fwait
es
and
imul
mov
aam
pop
outsb
jnp
out
pop
out
dec
lret
repz
cmp
cmp
dec
sub
lock
cmp
stos
iret
in
shll
push
mov
lret
and
or
pop
and
xor
push
testl
pop
cmpsb
dec
adc
cmc
pushf
dec
notl
rclb
and
imul
dec
mov
xor
add
xchg
mov
shll
or
ljmp
inc
dec
mov
mov
popf
or
or
push
shll
test
add
mov
mov
mov
mov
test
pop
in
push
sub
fnstsw
std
sub
sbb
mov
test
into
out
lcall
pop
ret
fcoms
xchg
push
inc
sbb
rol
out
cmp
jmp
imul
sbb
imul
mov
xor
loop
xor
lea
sbbl
sub
mov
mov
mov
std
adc
add
pop
cmpsl
and
notl
mov
addl
mov
pop
fistpll
xchg
push
mov
sbb
out
and
jae
stos
mov
mul
sbb
jle
test
pop
stos
push
out
sub
lahf
fwait
stos
sbb
aaa
fsubl
sub
sub
pop
nop
je
imul
icebp
insl
lea
icebp
lods
enter
mov
outsl
add
sub
pop
sbbb
pop
mov
sub
sbb
insl
cmp
push
adc
gs
int
aaa
in
ficompl
mov
mov
mov
es
enter
jbe
enter
xchg
ja
icebp
jae
pop
jnp
add
xchg
inc
sbb
add
ror
push
pushf
xchg
jb
mov
in
adc
fcmovne
cmpsb
add
push
push
jp
fmul
mov
enter
insl
fisubrs
lret
ret
mov
mov
pop
scas
xorl
lea
flds
jl
adc
and
dec
xor
sbb
les
add
adc
loopne
adc
mov
dec
imul
inc
push
mov
ret
cmp
xchg
clc
outsl
icebp
xadd
push
fidivl
dec
shll
mov
xor
cld
jb
cli
mov
cmc
cmp
shlb
mov
iret
mov
nop
or
xchg
mov
ljmp
insl
outsb
push
lret
or
sbb
xchg
pop
scas
add
iret
movsl
add
add
es
icebp
js
fs
mov
xor
jb
nop
add
incb
mov
movsl
fwait
pop
adcl
enter
cmp
imul
pop
test
xor
imulb
sub
inc
sub
pop
scas
jo
scas
mov
das
fistl
push
aam
je
mov
popf
sub
dec
sbb
pop
xchg
rolb
add
mov
ljmp
push
cmp
add
aad
dec
mov
mov
xlat
int
in
std
add
dec
aas
pop
cmpsb
jl
lcall
push
add
cmp
jnp
jp
mov
insl
les
in
sub
lods
cmp
ja
dec
jno
cmp
sub
mov
mov
and
sbb
rcll
ret
dec
cmp
lret
lret
pop
popa
jb
cmp
enter
inc
pop
insl
dec
cs
vandnps
jns
adc
jmp
cmp
dec
jnp
mov
mov
adc
lods
jne
jns
inc
add
or
fwait
loopne
lods
in
enter
jmp
cmp
pop
mov
js
lcall
adc
ret
sub
arpl
and
ds
sbb
mov
sbb
jne
sbb
xor
sbb
leave
and
mov
rol
jg
and
repz
fwait
jl
lret
cmp
enter
mov
gs
push
hlt
add
mov
jg
and
andl
jnp
test
inc
push
inc
mov
inc
or
jle
cs
adc
jg
aad
mov
sub
repnz
sbb
jecxz
jae
ret
in
and
dec
or
pop
ret
dec
mov
sbb
sbb
fs
mov
sahf
dec
push
movsl
cmp
test
lret
lods
pop
adc
dec
inc
sbb
jmp
xchg
cmc
pop
sbb
cmp
cmp
push
xor
cmp
ja
loopne
xchg
nop
adc
xchg
push
push
fimuls
mov
mov
and
adc
pop
leave
aaa
popa
int
xchg
into
addr16
repnz
mov
daa
pop
dec
sbb
xchg
mov
push
int3
in
cmpsl
mov
or
repz
jp
outsb
sbb
lock
in
inc
mov
mov
dec
fwait
mov
fsubrs
int3
cld
adc
movsb
jnp
cmp
enter
sbb
xor
popa
jno
sub
iret
cli
sbb
mov
pop
xchg
push
xchg
push
bound
jmp
adc
int3
popf
mov
in
out
add
cmp
mov
jge
xchg
or
cmp
fnstcw
xlat
inc
xchg
fcompl
push
test
mulb
stc
xlat
je
push
mov
stc
nop
pushf
out
rclb
sub
pop
add
sbb
xor
mov
inc
xor
fildl
sub
mov
mov
xchg
push
push
jo
xchg
mov
push
test
mov
loopne
orl
dec
ss
mov
jl
xchg
sub
pop
dec
das
imul
inc
lock
loop
sub
ret
mov
lea
jns
dec
js
sbb
xor
ret
push
jmp
shll
mov
aaa
aaa
sub
add
inc
sub
aas
inc
stos
add
popa
pop
les
add
dec
lret
inc
leave
or
pop
cmpsb
and
outsb
sahf
imul
mov
push
arpl
sub
inc
lret
shrl
add
notl
repnz
inc
adc
lret
push
mov
dec
ret
in
mov
jne
or
push
inc
or
inc
aam
cmp
loope
nop
in
popf
jle
outsb
ret
mov
cmp
ja
mov
dec
and
xor
jbe
repz
out
inc
push
div
adc
repz
pop
mov
and
enter
mov
arpl
call
cli
mov
lret
outsl
shlb
and
scas
imul
icebp
lds
inc
lods
add
jecxz
lret
js
sbb
dec
jo
test
aad
jne
outsb
inc
jo
mov
adc
in
cmpsb
ret
mov
mov
loopne
lea
push
xchg
dec
or
xchg
jl
sbb
fwait
sbb
and
push
out
idivl
dec
inc
mov
sbb
js
scas
inc
stos
push
lahf
push
dec
ja
lret
push
lahf
add
xchg
mov
jge
leave
sub
and
dec
imul
mov
add
out
xchg
xor
das
adc
fcoms
sub
int
repnz
jge
mov
mov
sbb
movsl
movsl
inc
fldl
js
pop
xor
fs
and
cld
pop
cli
les
push
mov
aad
push
rcll
cmpsb
pop
aam
insb
sti
pop
xchg
mov
push
loope
jae
and
jge
rcrl
mov
imul
shrl
loop
push
gs
sub
sarl
call
pop
lds
or
int3
mov
xor
ds
lock
cmp
test
jg
test
pop
mov
je
push
sub
pop
call
stc
jp
adc
xor
rcll
popa
jmp
bound
arpl
in
mov
xor
pop
mov
jmp
lods
adc
sqrtps
aam
popa
orb
mov
mov
mov
mov
push
jge
adc
jge
xlat
icebp
std
or
xchg
dec
pop
mov
dec
mov
rcrl
xchg
inc
jb
shr
cld
push
cld
cmp
test
stos
mov
mov
sub
lods
scas
adc
mov
decl
push
arpl
sbb
test
mov
sbb
and
or
xor
insb
enter
mov
ss
xchg
mov
pushf
inc
xchg
mov
and
sbb
mov
movsb
xchg
pop
inc
adc
outsb
pop
inc
in
dec
iret
and
or
ds
scas
dec
sarb
into
pusha
enter
rol
cmp
xor
push
stc
incb
push
ss
stos
cmpsl
dec
imul
or
lods
ficoml
mov
js
inc
push
jo
add
cmp
ret
add
jo
ja
addr16
sbb
xchg
je
sub
dec
movsl
adc
cmc
adc
test
pop
push
dec
pop
outsl
mov
jmp
mov
es
cmc
out
jmp
cmp
or
adc
loop
std
jecxz
or
push
out
clc
popa
nop
mov
xchg
mov
add
mov
inc
dec
aas
int
jae
fldenv
loop
jg
adc
add
sub
mov
bound
xchg
or
iret
int3
cmp
flds
shl
dec
loopne
cltd
xorb
sub
je
je
lock
add
mov
leave
or
pop
jne
lcall
out
pop
movsl
les
aas
ss
lds
mov
stos
ljmp
push
inc
leave
test
lahf
cmpsb
inc
inc
mov
inc
sub
lahf
test
xor
repz
or
aam
and
js
mov
cmp
push
out
xchg
xchg
and
or
fxtract
push
leave
dec
test
test
pop
dec
and
adc
pop
xlat
shll
jae
pusha
insb
xchg
push
jmp
je
cmp
add
push
xor
or
test
adc
out
bound
mov
imulb
push
sub
or
add
sub
inc
mov
inc
das
jle
dec
mov
movsb
jae
mov
sbb
sbb
add
inc
xchg
pop
inc
xchg
push
mov
adc
jl
jmp
mov
dec
lds
mov
int3
in
lock
fs
push
push
js
xlat
and
rorb
shl
inc
mov
inc
lods
test
call
aad
sub
fwait
movsl
int
mov
adc
sbb
es
add
fildl
popa
jecxz
fsub
and
call
das
dec
ffreep
sub
dec
sub
mov
pushf
pop
notl
es
call
push
add
xchg
out
push
sbb
sub
es
scas
sub
ror
ret
cmp
push
jne
or
imul
enter
sub
in
mov
adc
imul
pushf
xor
icebp
xchg
loop
out
pop
aaa
frstor
sub
push
jnp
int3
shll
inc
mov
stc
pop
push
rcll
notb
dec
shrl
sbb
and
shl
mov
test
stc
insb
enter
pop
jnp
push
das
jns
mov
push
cmc
cli
lcall
test
pop
test
cld
xor
fs
enter
xchg
sar
jg
push
xor
mov
sub
jp
fdivrs
movsb
xor
jecxz
add
jno
pop
sarb
test
sbb
test
sub
jg
sbb
loopne
and
jg
pop
cltd
lods
xor
bound
test
jo
popa
fdivrp
addl
xchg
std
icebp
addr16
jbe
fmuls
add
jbe
push
pop
cmp
rorb
test
arpl
lock
push
dec
stc
sub
mov
imul
shll
insb
pop
lea
jle
add
aaa
cmc
jo
repz
xchg
mov
lods
push
aaa
stos
inc
sarb
xor
mov
test
das
dec
enter
and
xchg
add
aam
push
std
pop
add
cs
movsb
std
and
jns
sbb
fidivl
daa
pop
cmpsl
dec
dec
test
lahf
jne
out
adc
push
mov
pushf
add
sarl
pop
test
push
xchg
call
call
scas
mov
ficomps
mov
stos
mov
imul
stos
and
ficomps
xlat
sbb
xor
inc
loopne
or
and
clc
dec
rclb
inc
pop
popf
stos
aaa
in
loop
cmpsl
xor
mov
xchg
repnz
inc
sbb
mov
fprem1
rcl
jecxz
clc
pop
push
xchg
or
mull
or
mov
lahf
sub
cmp
mov
iret
mov
pop
push
out
dec
adc
ja
addr16
test
adc
je
xchg
movsb
pushl
int
dec
and
cmp
jo
inc
sub
jg
push
mov
and
out
sarl
imul
add
or
pop
sub
mov
jns
sbb
mov
lcall
cmpsb
stos
pop
lret
or
mov
outsb
dec
mov
inc
dec
pusha
icebp
mov
out
lds
imul
sti
push
mov
pushw
jg
cmp
stc
xchg
fucomp
pop
mov
add
sub
xchg
je
push
mov
push
cmp
add
in
jnp
fldcw
imul
ja
icebp
pop
pop
pop
jo
dec
mov
into
cmpsl
lds
paddb
and
je
xor
movsl
jbe
sub
jmp
xor
cmp
jg
call
repnz
das
ja
or
outsl
lahf
fs
xchg
popf
clc
sub
jbe
inc
push
push
mov
int
push
push
and
sbb
xor
enter
cmp
cmp
sub
orb
je
sahf
inc
into
pop
lcallw
or
adcl
mov
fs
je
push
mov
dec
xor
jbe
dec
jp,pn
jecxz
xchg
inc
sti
lods
inc
xor
jl
repnz
mov
test
mov
scas
jge
jp
jge
xchg
dec
pop
lock
sub
dec
pop
shrb
xchg
cwtl
sbb
pop
in
dec
cmpsb
outsb
hlt
ja
cmpsl
bound
int3
adcl
xor
pushl
addl
shlb
mov
and
filds
mov
sahf
add
adc
ds
scas
test
repz
lods
inc
hlt
cmc
jnp
jmp
dec
subb
icebp
stos
xor
mov
push
sub
int3
push
cmp
in
sub
adc
cwtl
out
fsubs
shl
pop
insl
mov
ds
adc
insb
pop
inc
ret
inc
jns
insb
hlt
push
je
insl
mov
sbb
in
sub
sti
imul
xor
mov
xor
insl
fcompl
jecxz
aas
shl
call
cld
inc
dec
lcall
fldt
inc
and
cmp
les
add
aaa
xor
setae
or
daa
or
popf
mov
jle
jnp
or
in
mov
in
mov
stos
add
mov
out
lock
and
jmp
cltd
in
icebp
add
sbb
cmp
dec
pop
sbb
push
xchg
adc
ds
jb
jo
dec
scas
imul
cmp
test
jnp
xor
cmc
dec
mov
push
sub
pop
push
and
int3
push
in
ss
fwait
addr16
adc
sbb
sbb
sub
nop
stos
mov
inc
lahf
rolb
es
pop
or
and
insl
dec
push
sub
insl
cmc
xor
call
data16
mov
orl
xor
scas
dec
ret
jb
shrl
ds
addb
and
mov
adc
loopne
adc
jle
jnp
pop
cmp
push
xorb
mov
and
adc
jae
jae
and
xchg
mov
ss
jo
jo
inc
mov
mov
test
jecxz
popa
jp
icebp
aam
cmc
pop
jp
push
xchg
ds
leave
roll
pop
sahf
fcmovu
or
in
jmp
je
lods
insb
adc
xor
pop
pop
mov
ljmp
addr16
dec
insb
xchg
aam
les
pop
stos
adc
jno
xor
daa
xchg
xor
shl
mov
push
ret
stos
sarl
fcoml
push
popa
push
xchg
inc
adc
lea
ret
push
push
sub
or
cmp
addr16
cmp
dec
cs
mov
jne
imul
mov
shr
dec
test
cs
mov
xchg
xchg
jo
lods
das
pop
flds
pop
pop
rcrb
addr16
pop
arpl
in
push
mov
mov
xor
cmpsl
idivl
push
pop
or
xor
jne
sub
jmp
mov
rorb
pushf
int3
insl
rorl
sqrtps
cs
or
mov
push
and
aaa
fmuls
cmp
imul
aad
data16
xor
repz
dec
adc
sbb
push
pop
pop
insb
mov
int3
add
sbb
or
mov
xchg
je
mov
loope
mov
and
pop
out
or
pop
adc
mov
pop
pushf
mov
push
cmp
jle
and
xchg
mov
adc
das
xor
pop
xlat
mov
or
cmc
call
sub
loopne
ja
xor
sub
and
pop
cmc
add
shl
jns
dec
mov
jo
lret
out
pop
add
nop
pushf
dec
pusha
outsl
aam
popa
mov
mov
and
scas
cltd
daa
pop
push
cmpsl
into
insb
mov
and
cmc
out
mov
test
int3
loop
mov
sarl
in
sbb
pop
jnp
jle
cmc
jnp
je
mov
pop
add
movsb
mov
das
jmp
mov
or
iret
xchg
incb
ret
dec
cld
clc
cltd
xor
xor
rorb
pop
in
pop
pop
and
xor
push
hlt
pop
cmp
aam
jg
jno
movsb
mov
xchg
and
ficomps
mov
jbe
or
mov
cmp
fimull
data16
pop
in
jmp
sbb
adc
pop
jnp
jnp
mov
je
mov
lds
mov
mov
into
lret
orb
mov
ss
pop
xor
test
push
inc
cli
inc
or
mov
jns
iret
or
sbb
or
add
inc
push
adc
or
out
mov
daa
inc
dec
stos
and
xchg
lahf
sahf
sbb
stc
xor
gs
sbb
roll
stc
sub
loop
outsl
xchg
out
iret
or
and
xor
jge
addps
jmp
arpl
out
add
push
lret
xor
loop
ficoms
mov
mov
neg
xor
adc
sub
inc
xor
je
repnz
aam
xchg
outsl
es
dec
cmp
and
andl
inc
mov
scas
jmp
mov
scas
jb
scas
sbb
cmpsb
fisttps
push
lea
dec
adc
push
pop
subb
jno
pop
pusha
pusha
and
lahf
mov
push
in
and
xor
test
into
aaa
xchg
shll
insb
jp
xorl
push
popf
dec
sub
pop
cwtl
mov
repnz
mov
cld
mov
lret
mov
mov
mov
fcoms
jbe
aas
mov
pop
or
lods
add
lds
push
mov
inc
jnp
jae
sahf
adcb
imul
push
sbbl
jl
jnp
mov
lods
and
and
loop
nop
sub
jle
mov
xchg
mov
rorb
jne
jge
cmpsl
gs
lret
andl
mov
cmp
loopne
mov
or
inc
pushf
sub
stc
jge
sahf
xor
pop
negb
hlt
push
sbb
adc
stc
adc
daa
push
mov
test
jmp
lahf
sbb
mov
jmp
mulb
ret
hlt
push
push
push
enter
xor
aam
pop
mov
outsl
ret
fisubs
mov
fbld
or
mov
sbb
je
out
and
xor
insl
jle
or
push
outsl
mov
sbb
loopne
insl
mov
pushf
test
cmp
sbb
call
je
scas
mov
adc
pop
nop
and
push
stc
xor
and
add
cld
popf
mov
lret
repz
and
shl
cmc
loope
ret
pop
add
xchg
jmp
dec
mov
push
popf
rorb
aad
vpxorq
jecxz
cwtl
add
adc
pop
mov
popf
shl
mov
movsb
mov
lods
lods
pop
je
jecxz
int3
sub
push
enter
dec
inc
idivb
mov
div
aam
mov
mov
mov
mov
jno
lods
pop
xchg
fiaddl
lods
jg
out
xor
lea
cmp
leave
jecxz
mov
mov
nop
or
dec
mov
dec
and
popf
jecxz
scas
sub
idiv
xor
loopne
gs
lods
xchg
movsl
push
call
mov
notl
dec
xor
int3
test
ja
in
les
mov
sbb
cmp
pop
fwait
jno
scas
std
xchg
ljmp
xchg
sarb
pop
jl
cmc
jo
cmp
fildll
sub
mov
out
fs
xor
push
sub
aaa
ja
xor
nop
negl
xchg
es
es
shlb
loopne
fisttpll
lods
jo
jmp
fcomps
test
aas
sub
popa
mov
lods
add
lock
scas
mov
xor
insl
ds
mov
xchg
aaa
push
out
stos
jb
lock
lret
sbb
fadds
lahf
mov
pop
xchg
shlb
loop
aad
mov
adc
imul
outsl
jnp
inc
xor
xchg
sbb
sub
mov
mov
pop
dec
orl
mov
mov
pop
dec
jmp
cmpsb
push
adc
ret
or
leave
rclb
lret
popf
test
push
mov
sub
aad
mov
lea
daa
clc
jbe
test
arpl
sub
sub
and
xchg
dec
cld
movsb
sahf
push
icebp
mov
gs
aam
pop
insb
fadds
xchg
jno
gs
push
aam
test
jge
fucom
xlat
xor
addb
inc
pop
add
mov
fmuls
std
mov
xchg
and
push
mov
cltd
add
or
or
mov
fisubs
xchg
or
arpl
pop
ftst
sbb
ror
and
outsl
outsb
pop
repnz
movb
fsubs
push
mov
flds
or
jbe
lcall
out
add
jle
jbe
adc
fadds
sub
sub
call
stos
es
insl
add
sub
rcrb
and
fstl
jp
adc
mov
sub
fisttpl
in
daa
inc
xor
orb
cmp
pop
mov
jns
fimuls
aam
setb
cmp
cmpsl
fcompl
xchg
push
sub
push
jb
cmp
fidivs
into
mov
and
aad
cltd
mov
les
test
dec
nop
push
xchg
fs
test
jne
push
hlt
div
lods
mov
cmp
push
jle
sahf
rcll
jnp
jns
mov
scas
dec
shrb
mov
push
mov
lahf
cwtl
cli
jmp
es
lret
cmp
sbb
and
push
int
mov
xor
popa
sbb
xor
pop
andl
jns
pop
testb
mov
lcall
arpl
ja
push
aam
sbb
sub
rcrl
imul
push
notl
push
subl
push
pop
cmp
xor
add
push
lret
ja
pop
lahf
fsubl
add
xlat
mov
mov
pusha
sub
nop
in
cwtl
jb
mov
cmp
pop
mov
and
out
dec
loopne
cmp
mov
pushf
mov
add
rolb
cmp
pushl
arpl
stos
call
aad
rcrb
or
les
test
leave
sbb
ret
adc
xchg
cltd
jg
addr16
xchg
shlb
jns
xchg
insl
inc
cmp
lret
rclb
fidivrl
mov
dec
fxch
pushf
adc
es
jne
and
cmpsb
fisubrs
roll
xor
inc
in
loope
addb
xchg
xchg
subl
sub
or
push
cmc
push
pop
mov
mov
mov
jl
ljmp
cltd
enter
cmpb
iret
push
into
aam
push
test
enter
add
mov
mov
xchg
fisubrs
divl
jmp
lcall
push
push
imul
fldt
rcll
jnp
inc
mov
xchg
push
mov
cmp
inc
mov
aaa
icebp
xor
push
rcrb
dec
pop
dec
pop
out
push
sub
xchg
repz
dec
add
mov
xchg
sarb
icebp
xchg
cmpsl
ja
push
hlt
cli
fcomps
xchg
aaa
inc
push
dec
pop
imul
pop
add
repnz
pop
pop
scas
push
push
fadds
cli
and
pushf
repnz
pop
mov
test
lret
in
mov
push
pop
add
mov
in
je
out
movsb
xor
loopne
mov
lock
insl
scas
pusha
into
daa
jb
jns
in
cld
imul
cmpsb
test
jno
add
lahf
xchg
pushl
cmpb
mov
shrb
loopne
shrb
cwtl
popa
xor
rolb
jle
adc
fdivp
pushw
enter
pushf
or
push
cltd
arpl
lea
jno
les
mov
push
out
jp
and
into
fmuls
lret
bnd
sbb
imul
gs
dec
mov
cli
push
mov
int
mov
fistpl
push
adc
lcall
rolb
push
test
pop
cmpsw
xor
pop
mov
xor
push
xchg
in
and
jno
iret
mov
xchg
xor
adc
sbb
ljmp
fistl
mov
ljmp
mov
es
lcall
mov
pop
cmp
pop
pop
add
sub
push
les
cltd
jmp
rorb
test
mov
adc
sub
fidivl
aam
nop
es
mov
loope
mov
scas
dec
lock
lock
mov
out
pusha
add
adc
fwait
mov
daa
sbb
dec
pop
inc
addr16
mov
pushf
adc
cmp
inc
sub
mov
mov
or
sub
lea
mov
decb
jne
cmp
movsl
push
icebp
ds
outsb
dec
popa
loop
bound
hlt
roll
cmc
mov
aad
mov
mov
push
mov
or
lahf
sub
push
je
scas
lcall
and
aam
cmpsb
pop
push
push
pusha
push
arpl
daa
xor
sub
cltd
mov
mov
out
push
fsubl
je
sarb
mov
sahf
clc
fdivrl
shlb
call
xor
sub
sbb
sub
stc
xor
pop
call
in
ja
mov
dec
subb
fists
or
jae
in
mov
insl
cli
ret
cmc
and
push
xchg
loopne
imul
pop
out
in
test
inc
sti
dec
dec
repz
pushf
rol
movsb
mov
sub
add
sub
out
mov
and
and
inc
inc
inc
xor
mov
ror
in
xor
jae
es
adc
dec
ret
xchg
jae
lcall
testb
xor
mov
pop
sti
dec
xor
int3
enter
dec
sahf
les
add
xchg
in
testb
ror
mov
ss
adc
cmp
jb
jle
or
roll
sbb
inc
aas
add
aaa
mov
xor
fsubs
push
iret
in
ljmp
sub
roll
cmpsb
mov
xchg
add
push
das
cmp
sub
mov
loopne
andl
iret
xorb
pop
push
mov
mov
shll
lcall
pushf
sub
sub
add
inc
sahf
mov
mov
cs
xor
cmp
add
and
inc
push
inc
pop
loop
mov
sbb
xchg
push
push
aam
popa
or
adc
ss
leave
adc
dec
push
cmp
mov
jno
iret
jmp
imul
xchg
je
enter
test
addr16
imul
shl
push
dec
repz
or
ja
addr16
test
repz
sub
lret
dec
pop
repz
fcomp
pop
cmpsl
and
or
lcall
add
outsb
sahf
jo
add
mov
inc
pop
lods
bnd
pop
aam
cli
aas
jae
insb
movsb
mov
sbb
fnstcw
incb
in
mov
cmc
jmp
dec
int
push
rcrl
mov
sbb
test
ficoml
out
punpckhbw
mov
or
mov
push
fiaddl
mov
inc
insb
cltd
xor
mov
mov
mov
mov
out
push
enter
dec
leave
inc
mov
fsubrs
stos
mov
lret
pusha
mov
out
push
or
dec
dec
dec
das
jecxz
pop
shrb
xchg
mov
mov
ret
std
sub
push
pusha
sub
out
xor
cli
arpl
or
inc
stos
cmp
mov
dec
in
mov
xlat
inc
cmpsl
cmpsl
lret
cmp
dec
rol
js
sbb
mov
xchg
fisubrl
fcomps
aaa
mov
or
mov
cltd
adc
fsubrs
psubsb
outsl
mov
inc
xor
jp
fidivrl
aaa
shl
imul
and
shr
and
push
movsl
test
add
or
and
fwait
pop
mov
mov
or
xchg
js
add
sbb
leave
icebp
mov
jbe
insl
mov
cmp
sub
mov
repnz
out
sarb
dec
lcall
jecxz
jno
xor
scas
mov
repnz
jmp
and
xchg
rcrb
cmp
push
inc
in
out
dec
cmpsl
inc
mov
into
enter
fidivs
jo
cmpsb
out
pop
xchg
jne
mov
ret
mov
aaa
cmp
jno
sbb
je
out
imul
mov
btc
xor
jnp
xor
mov
inc
xchg
pop
adc
jnp
lods
inc
outsb
mov
loop
jmp
mov
inc
xchg
and
jno
negb
pushf
sbb
stc
cmp
pop
out
imul
or
push
cmpsl
or
gs
in
sub
iret
xchg
push
ret
shlb
repnz
or
dec
js
in
pop
loopne
mov
pop
scas
fwait
mov
mov
cli
rcl
cli
call
lret
push
inc
shll
test
outsb
insl
lahf
jb
mov
ret
lcall
mov
cmpsb
mov
mov
lahf
imul
loope
xor
insb
pop
mov
pmullw
sti
aam
and
xchg
sub
push
jecxz
xor
xchg
int
xchg
in
jp
and
clc
shlb
push
inc
shrl
and
push
pop
shll
push
arpl
aaa
sub
add
cmc
stos
lds
mov
lcall
lods
cltd
repnz
inc
shll
xor
in
lahf
dec
lock
arpl
xchg
inc
adc
cwtl
dec
push
pusha
js
cmp
std
mov
das
scas
xor
hlt
mov
jns
sbb
jl
push
cli
out
and
je
adc
mov
movsb
pushf
ljmp
mov
repnz
aam
mov
lahf
popa
cltd
clc
mov
enter
in
xor
ds
push
cli
pop
and
fcompl
xor
jno
or
xor
xchg
cmp
fwait
dec
mov
mov
popf
out
inc
jl
sti
push
jo
dec
imul
fistpl
xor
jne
faddl
rcll
into
sub
jbe
stos
outsl
mov
sti
sub
mov
and
loopne
push
test
pushf
jb
pop
jae
icebp
and
mov
ret
sub
inc
inc
mov
idiv
rolb
and
rorb
aas
inc
cmp
lret
or
jbe
lock
sub
or
stos
jno
sbb
cmpsl
xor
sar
ret
bound
popf
pop
push
or
loope
xchg
jl
push
push
xchg
lahf
inc
push
andb
out
sbb
mov
int
addr16
pop
mov
mov
sub
xor
dec
iret
aas
or
push
sbb
enter
mov
and
pop
hlt
adc
mov
lods
repz
pop
lret
stc
sub
aam
mov
or
sbb
add
shr
ss
xchg
add
lds
add
das
scas
jmp
lock
lea
fisttpll
mov
cmp
and
push
int
push
mov
xchg
hlt
in
xor
dec
mov
lock
mov
push
xorb
fdivs
and
fisttpll
aam
dec
jp
jb
inc
push
ds
xchg
mov
cmp
vxorpd
ja
nop
ror
dec
mov
inc
lods
fists
cwtl
xor
aas
in
adc
aam
mov
cs
pusha
cltd
mov
fsts
mov
enter
call
cmp
cltd
jle
fcmovbe
and
xchg
ja
in
loope
iret
push
and
jecxz
out
dec
push
sbb
add
lcall
gs
push
adcb
andb
icebp
mov
sbb
ds
inc
fsubs
aam
jge
cs
mov
insl
test
gs
test
outsb
push
leave
ds
dec
bound
movb
ret
adcl
mov
fildll
addr16
movsl
stos
outsb
idiv
add
stos
dec
test
aam
std
in
xchg
daa
cmp
icebp
add
mov
add
and
adc
das
icebp
mov
enter
in
push
repz
ds
add
xor
inc
es
mov
add
pop
cltd
sub
push
leave
push
adc
sti
stc
and
cmp
sarb
je
outsl
or
add
daa
out
out
sbb
mov
mov
inc
lret
pop
xchg
push
and
xchg
int
xchg
push
lcall
stc
pushf
mov
js
js
add
xor
inc
mov
std
pop
aaa
ss
lds
cmp
nop
adc
int
pop
pop
sub
lahf
rclb
lret
adc
insl
dec
jnp
or
jne
dec
or
xchg
shr
in
jne
sub
sub
mov
lahf
jae
xchg
push
sbb
mov
int3
loop
pop
test
xchg
movsl
cmp
jg
xchg
mov
add
loope
popf
repnz
pop
in
push
and
mov
int
in
call
mov
mov
in
es
mov
sbb
sbb
inc
rolb
dec
add
push
mov
sbb
dec
and
pop
cmp
push
in
push
sub
aas
cli
mov
addl
adc
rcl
lret
pushf
sub
xor
sub
mov
clc
xor
xor
out
xchg
mov
test
lock
ficoms
ljmp
clc
mov
jne,pn
push
inc
in
sub
sbb
testb
lret
cli
testb
adc
push
cmp
shrl
cwtl
stos
jne
pop
adcb
dec
loop
xchg
je
mov
jle
leave
pop
sarb
outsl
mov
sub
flds
addb
int
xor
ljmp
movsl
outsl
ja
enter
dec
testl
adc
push
and
jne
sahf
mov
mov
mov
jmp
enter
push
cmp
int3
ja
fs
aad
ja
int
add
test
xorl
pop
sub
ljmp
test
idivl
mov
jb
push
loop
pusha
push
push
cmp
mov
xor
or
pop
insl
mov
test
pop
add
mov
dec
inc
mov
sub
sub
dec
push
pop
mov
pop
test
cmp
pop
int
mov
pop
xchg
and
add
mov
jecxz
cmp
jle
push
adc
roll
cmpsb
lds
push
ret
mov
add
mov
mov
add
frstor
jmp
and
aad
dec
iret
fnstcw
push
and
bound
adc
pushf
push
push
fiadds
sbb
je
sbb
xchg
bound
outsl
add
in
or
cli
push
pop
int3
mov
add
rorl
jmp
xor
adc
movsl
ja
mov
sub
mov
jp
int
pop
mov
ds
imul
shl
mov
cltd
cmpsb
mov
jl
lock
out
cmp
dec
rcrl
testb
mov
sub
js
add
sbbl
jecxz
or
and
dec
cmp
xchg
cld
loop
or
mov
push
push
jg
lods
jecxz
rolb
sti
in
inc
fmuls
jno
sti
xchg
scas
lea
xchg
mov
or
pushl
sbbl
sbb
addl
xchg
out
es
add
dec
cmp
add
inc
push
push
cmp
mov
enter
jnp
mov
out
push
hlt
xchg
xor
push
cs
cmp
scas
cltd
or
xchg
movq
sbb
cltd
cmp
cld
mov
scas
enter
pop
cs
call
aas
in
lods
dec
fidivs
mov
mov
icebp
iret
jl
push
ds
mov
inc
mov
mov
jp
aam
pop
ret
mov
push
cmpb
mov
fidivl
lods
lret
sub
mov
sub
jl
or
das
xchg
gs
inc
insl
imul
sub
xor
and
jo
cs
or
dec
pop
fs
mov
push
fdivs
lret
lret
lock
inc
or
inc
test
outsb
in
push
pop
sbb
fwait
js
shl
mov
adc
imul
sahf
cmp
repz
test
and
xchg
add
sbb
xor
fstpt
fs
adc
fdivl
loopne
cld
sbb
mov
dec
je
addr16
into
cmp
sbb
inc
pop
dec
dec
pushl
jno
test
in
into
push
inc
ret
stos
imul
xlat
daa
adc
mov
std
push
xchg
leave
repnz
push
inc
arpl
xor
dec
jnp
mov
sbb
xor
pop
arpl
sbb
pop
les
jle
das
cmpsl
cs
addl
jns
mov
sub
jb
int3
cmp
adcl
dec
jae
lds
into
test
popa
push
dec
clc
pop
inc
aas
nop
cld
ret
xor
cmpsb
aam
add
jmp
sbb
push
imul
and
adc
jns
push
mov
mov
xchg
into
cmp
je
mov
js
cmp
xchg
sub
pop
fdivrs
pop
sub
lods
dec
fs
xchg
add
scas
cmp
cmc
or
pand
add
sbb
aam
pop
lret
mov
sub
push
dec
push
push
xchg
mov
mov
xchg
arpl
in
sbb
insb
outsl
xchg
cmpl
in
nop
bnd
mov
add
push
popa
shrb
into
jecxz
shl
xlat
dec
pop
pusha
cmp
inc
lods
js
cmp
mov
mov
mov
sbb
leave
push
loopne
aad
mov
pop
push
fabs
sbb
aaa
cs
sbb
loop
lea
cld
cltd
mov
or
in
repz
aas
sbb
push
jns
psrld
push
das
jl
fldcw
out
ja
shl
fsubs
xor
std
int
cmp
sbb
mov
fdivs
pshufw
xchg
scas
or
mov
xchg
xor
add
adcb
pop
adc
push
jecxz
inc
lock
repz
pushf
test
in
and
test
add
out
mov
in
es
jns
push
or
into
scas
cld
pop
movb
popf
pop
push
out
lds
jmp
roll
sbb
mov
ret
cmp
inc
pop
cwtd
dec
ljmp
lcall
fdivr
cmp
outsb
xchg
std
sub
xchg
aaa
test
lods
sbb
mov
in
sbb
or
sub
pop
ret
jnp
in
ja
and
mov
adc
sahf
fistl
xor
sub
sub
mov
test
int
cmpsl
pushf
cmp
jns
sub
pop
pop
orl
dec
outsl
cmp
xchg
xor
cmpsb
loope
imul
repnz
jl
mov
xlat
pop
add
aam
cmpsb
lea
mov
mov
fmull
mov
jno
andl
insl
mov
add
inc
jge
push
bound
cmp
add
sub
or
xchg
xchg
inc
lret
add
push
jge
and
push
jge
cmc
xchg
push
or
lock
or
jbe
pop
inc
xlat
inc
idiv
jle
icebp
mov
mov
sbb
stos
shlb
mul
loopne
mov
mov
mov
cld
nop
cmpsl
cmp
std
jmp
aad
and
xor
lods
jge
pop
out
fistps
fld
cmp
pop
add
xchg
adc
fcmovne
xor
movsl
pop
outsb
scas
pop
jae
pop
test
test
adc
sbb
dec
inc
inc
popf
loopne
pop
jmp
and
push
inc
or
out
js
das
movb
mov
test
dec
and
ds
cmp
out
and
pop
jge
aaa
insl
clc
xchg
iret
cmp
ret
enter
mov
int
mov
jbe
mov
scas
shll
sbb
popf
push
fs
dec
ja
pop
dec
push
push
enter
dec
dec
cmpsl
add
jg
stc
lods
or
jns
stos
ss
in
xor
jg
push
popf
addr16
xchg
push
hlt
inc
int3
sti
test
xorps
mov
cld
mov
mov
adc
in
mov
push
aaa
sub
sub
insl
cmp
xchg
sub
and
call
aas
or
xlat
lcall
outsb
xchg
cmp
lcall
jbe
daa
inc
orb
adc
inc
gs
flds
mov
add
inc
insb
jecxz
or
mulb
fsin
fcmovbe
icebp
inc
adc
repnz
addr16
sbbl
out
jecxz
int
shlb
or
movsb
lret
ret
pop
inc
inc
ljmp
xor
sahf
cmp
push
popa
mov
rolb
inc
mov
enter
mov
xchg
push
xchg
mov
dec
push
mov
das
sti
js
sbb
scas
xor
xor
fwait
pop
sbb
test
sub
mov
rcrb
jmp
mov
and
popf
test
cmc
shlb
or
imul
fsubrl
jmp
pop
inc
adc
loopne
and
mov
and
in
clc
inc
test
in
repnz
shl
mov
push
inc
xor
push
and
mov
cmp
add
enter
outsl
cltd
sub
jne
scas
sahf
sar
nop
jo
scas
mov
jbe
mov
pop
add
and
mov
pop
jg
cmpsb
adc
lret
lahf
sub
ja
or
or
rcl
ret
andb
lahf
nop
pop
pushf
sub
imul
xor
push
mov
ja
outsl
and
or
cmc
aad
add
sub
inc
mov
xchg
hlt
mov
lcall
bound
mov
or
das
insb
mov
push
hlt
adc
adc
adc
and
in
out
mov
add
xchg
pop
sub
xchg
mov
sub
add
aad
hlt
cmp
scas
cltd
sahf
int
adc
inc
insb
test
mov
and
cmp
adc
and
xor
inc
mov
pop
add
ffreep
insl
out
fiadds
cmp
je
sub
sub
int
into
sub
or
out
pop
mov
scas
adc
daa
sub
out
sbb
jl
or
xor
jnp
lods
sbb
adc
push
fsubl
push
and
cmpsl
jmp
cmp
push
imul
aas
cli
loop
mov
insl
lcall
out
sti
sub
push
testl
in
iret
and
fiaddl
lock
xorb
push
nop
ret
lea
inc
fcomi
push
mov
sbb
scas
push
mov
in
jmp
daa
pop
cmpsl
add
or
cld
fildl
jae
xchg
clc
xor
popf
jmp
decb
pop
adc
hlt
or
frstor
pop
push
jno
jo
mov
mov
dec
mov
add
pusha
rolb
aad
cltd
cmpsl
mov
pop
dec
and
dec
dec
mov
outsb
dec
sub
dec
cmp
fsubrl
xorb
ret
mov
pminsw
push
outsb
adc
and
sti
lods
and
dec
fmull
fstpt
push
ss
push
loopne
push
xlat
cmp
jecxz
repz
push
notl
fs
xchg
insl
test
fs
shll
lret
mov
push
add
dec
sbb
dec
push
test
stos
aad
inc
popa
mov
flds
test
rorl
fsubl
xlat
scas
mov
mov
push
movsl
inc
cmp
xchg
and
add
or
mov
add
incl
mov
pop
int
push
sbb
mov
mov
jl
xor
cmp
rcll
pop
cmp
stos
int3
nop
ror
std
cmp
mov
scas
movhps
push
insl
fidivl
es
sbb
sbb
ja,pt
aas
movsl
fs
repz
mov
jno
ret
pop
cmp
je
shlb
mov
xor
pop
lcall
lret
xor
popf
pop
push
sar
int3
in
push
stos
pop
adc
pop
out
repz
mov
hlt
or
push
outsb
inc
push
xchg
xchg
push
aaa
loopne
dec
mov
loope
xchg
lcall
mov
xorl
inc
out
mov
dec
xchg
out
pop
mov
jnp
push
mov
outsb
sbb
ja
and
mov
inc
and
test
xchg
cmpsb
lods
int3
repz
inc
cmp
fcoms
inc
jmp
xor
popf
jmp
and
mov
in
cmpsl
xchg
sbb
cltd
xor
loopne
sbb
mov
push
push
xchg
push
mov
pop
js
imul
loopne
push
mov
sub
sub
pop
push
adc
ret
test
and
lcall
push
push
cmp
shrl
mov
sub
add
adc
ja
lahf
dec
rol
fistpll
inc
pushf
or
push
aaa
sbb
mov
movsb
sub
fstps
xor
aaa
mov
in
shrl
xchg
xor
mov
mov
daa
stos
pop
push
add
xchg
dec
ret
out
dec
sbb
sbb
inc
test
cmp
bound
aam
pop
stos
aad
cmp
push
mov
and
push
sub
xlat
pop
push
push
sub
push
dec
neg
xchg
inc
popa
jns
jl
roll
pop
push
xor
jo
lods
dec
mov
popf
inc
repz
pop
cs
jbe
testb
or
jns
xchg
ljmp
mov
clc
aam
mov
jno
and
xchg
pop
mov
mov
mov
mov
sbb
dec
xchg
lahf
jae
push
sbb
jbe
pop
cmp
movb
subb
gs
sbb
je
cmp
das
pop
xchg
cmp
xchg
dec
push
jae
sbb
repnz
jge
aad
fsubl
rorb
cli
dec
xchg
orb
xorb
outsb
push
test
dec
fcmovnu
jge
pop
mov
jl
xchg
push
repnz
jb
cli
clc
arpl
jecxz
enter
pop
sub
xchg
stc
lret
outsb
loope
mov
rclb
leave
arpl
mov
jecxz
stc
or
cwtl
sub
sahf
call
pop
clc
dec
lahf
jno
fdivp
jo
shlb
in
mov
sbb
push
jnp
cld
lods
xchg
mov
jbe
cmp
repz
dec
stos
arpl
scas
out
push
out
arpl
fmul
pop
cmp
test
dec
mov
jecxz
lds
js
and
and
stos
enter
mov
stos
xchg
sti
mov
sahf
rolb
out
mov
rcr
leave
mov
xchg
mov
xor
sub
pop
out
lea
jl
pop
mov
in
sub
sbb
aad
shrl
repz
cmp
test
lret
ret
dec
clc
xlat
cli
mov
or
cmp
cltd
enter
lock
movsb
ds
insb
adc
scas
inc
lds
add
mov
pop
shll
adc
mov
rclb
pusha
outsb
cmp
sar
adc
cmp
and
pop
pop
sti
cmp
push
ljmp
into
or
sarb
test
xchg
lret
or
fs
aas
lods
loopne
mov
adc
fucom
lods
ret
in
rorb
pop
or
ss
ret
or
es
imul
push
leave
jbe
push
push
mov
xchg
or
ss
push
shll
mov
mov
int3
push
pushf
sub
setp
loope
adc
shl
les
sti
or
out
jecxz
pushl
pop
scas
sub
test
push
xchg
ljmp
in
inc
ljmp
dec
dec
std
mov
add
pop
push
adc
imul
dec
fnstcw
scas
jno
in
insb
movsb
in
lcall
cmp
aaa
and
aas
lcall
ret
cld
mov
adc
and
lods
rcr
bnd
jp
xchg
lods
fs
pop
add
mov
inc
hlt
xor
ljmp
add
or
jle
push
mov
inc
dec
in
movsb
out
xor
pop
in
xchg
popf
sub
int
sbb
rcrl
sbb
addr16
or
cltd
cs
imul
in
out
out
jns
test
fwait
sbb
sub
stc
mov
mov
xchg
adc
stc
cmove
xor
popf
gs
xchg
push
mov
mov
in
andl
dec
out
jcxz
aaa
xchg
ljmp
dec
mov
sub
jle
and
push
add
jns
and
sbb
lcall
mov
out
aas
lock
push
pusha
in
dec
mov
push
mov
popa
xor
sub
jb
jge
mov
pop
and
xchg
aad
divb
add
movsl
test
inc
xor
nop
mov
xchg
les
inc
xchg
test
loope
je
dec
jnp
pop
inc
and
cmp
gs
daa
mov
loopne
hlt
ss
pop
aam
mov
mov
push
push
loopne
or
insb
push
xchg
cmpb
jo
jecxz
mov
icebp
pop
and
and
push
les
and
inc
mov
test
fildl
aad
jb
popa
cmp
out
inc
adc
jge
movsl
push
mov
lods
lret
push
stos
js
cmp
mov
mov
aad
mov
dec
test
mov
andb
stos
in
sbb
andl
add
mov
cltd
cmp
mov
ds
movsl
mov
sub
mov
les
je
pop
jo
out
mov
test
into
adc
or
sbb
jg
cmp
aas
xor
push
jae
daa
imul
fstps
mov
jg
adc
mov
fstp
sbb
xchg
enter
mov
xor
xchg
ret
daa
jle
scas
push
jp
roll
and
dec
add
out
pop
stos
push
mov
pop
and
inc
cli
adc
fwait
dec
adc
sub
shlb
push
jle
imulb
cmpsb
sbb
mov
jle
mov
adc
or
out
stos
neg
test
rorb
cmp
lret
mov
test
sbb
pop
stos
xchg
xor
nop
stos
test
jno
or
mov
fistpl
aaa
push
out
icebp
sub
cs
ja
adc
adc
jb
and
out
sbb
push
into
mov
shll
xor
mov
xchg
add
ds
cli
sahf
std
fmull
cmpsb
adc
fstps
xchg
push
inc
movsb
enter
insb
push
inc
test
in
jmp
adcb
and
mov
inc
sbb
pop
jo
jne
add
jmp
fiaddl
and
or
enter
gs
arpl
movsl
popa
aas
out
cmp
fists
jns
mov
xchg
les
push
or
jl
out
mov
inc
int
mov
das
int3
pop
jg
dec
stc
test
pop
cmp
jnp,pt
inc
imul
xchg
lods
xchg
orl
cmp
lcall
pushf
add
dec
add
jb
bound
push
push
xor
adc
add
shll
pop
mov
dec
or
and
prefetch
dec
push
repnz
sbb
dec
fwait
cmp
pop
adc
adc
mov
mov
sbb
jo
pop
cs
jmp
xchg
test
adc
and
subw
pusha
sbb
dec
sbb
jno
jnp
fcmovu
push
arpl
ret
aam
lcall
sbb
mov
jnp
add
mov
mov
sti
pushl
out
push
outsl
movsl
sub
roll
in
jp
jmp
mov
push
xchg
jmp
inc
mov
nop
xchg
sti
or
in
test
inc
cmpsb
ret
pop
adc
lods
mov
sti
pop
jecxz
scas
out
dec
jbe
fstps
fs
inc
jns
lods
xchg
movsl
cmp
fsts
mov
lret
movsl
mov
sti
out
xchg
pop
jp
mov
xor
cltd
shlb
popa
cmp
or
mov
out
out
negl
cmp
mov
sbb
movsl
mov
das
ss
notl
jb
lds
int3
and
sub
xor
aas
mov
les
cmp
jecxz
addr16
mov
add
dec
ljmp
mov
mov
and
pop
mov
xor
lcall
or
xchg
into
dec
add
in
cmp
ja
adc
iret
outsl
push
sub
cmp
scas
inc
mov
sbb
push
lods
in
out
subb
fildll
inc
or
dec
xchg
inc
add
loopne
fiaddl
jg
jle
lea
dec
cmpsb
add
sbb
pop
lea
inc
pusha
dec
inc
pop
add
cltd
jle
sbb
pop
jnp
cmpsb
shlb
mov
cmpb
or
sbb
sub
inc
push
add
fbstp
xchg
mov
lds
into
cli
int3
jmp
pop
push
decb
sbb
cmp
shll
cltd
je
pop
out
out
xor
test
pop
int
jg
or
add
enter
imul
dec
dec
movsl
fcmove
icebp
out
xor
add
imul
std
sbb
leave
xor
pop
mov
shlb
pop
mov
loope
cld
mov
inc
cmp
int3
mov
adc
in
xor
jno
and
mov
add
mov
out
xlat
mov
ror
lea
out
fcomps
aad
mov
add
aam
int3
pop
mov
aam
mov
xchg
cmp
mov
mov
push
mov
mov
or
loopne
lea
adc
icebp
or
pop
dec
and
jne
dec
sub
mov
test
xchg
fdivrp
xchg
mov
ret
sub
xchg
or
in
cmpl
int
jl
ret
stos
das
mov
pop
aam
lods
xchg
push
mov
into
mov
call
add
inc
in
push
push
imul
cmp
cmp
cltd
fs
adc
ljmp
adc
and
rcrl
aam
lods
xorl
mov
call
or
dec
jns
jmp
or
push
pushl
sub
add
fcoml
xchg
dec
mov
lea
jg
fsubs
insb
lods
and
mov
cmp
jmp
repnz
add
sbb
sbb
and
add
aad
pop
insl
fsts
fisubrl
inc
sub
add
and
sbb
ret
dec
sub
jmp
pop
mov
mov
cmp
inc
xchg
cmpsl
les
loope
popf
mov
adc
mov
pop
push
mov
lcall
push
daa
test
cmp
fadds
rclb
inc
stos
xor
ror
push
dec
cmpsl
adc
testl
cwtl
hlt
stc
iret
in
cmp
dec
or
add
popf
cmp
je
sbbl
mov
push
js
fs
adc
ss
cwtl
mov
pusha
and
subb
dec
xchg
mov
in
rclb
mov
inc
movsb
lahf
pop
add
pop
cmp
mov
jne
jnp
inc
inc
cmp
inc
ret
push
dec
into
fstl
mov
adcl
or
cmpsl
ja
sub
jb
in
mov
test
sahf
mov
sbb
rclb
push
lahf
mov
bound
inc
ljmp
xchg
and
sbb
jle
ss
es
mov
xor
cmpsb
les
adc
test
xchg
mov
xchg
push
rcrl
mov
fisubl
sbb
movsb
pop
push
push
and
cwtl
js
in
pop
punpckldq
addr16
scas
dec
mov
call
pop
pop
sahf
mov
push
lods
jle
daa
adc
outsb
add
addr16
mov
and
fcompl
jl
testl
push
push
jge
daa
cmp
out
pop
add
mov
and
in
movsb
rcrb
jo
xchg
fsubl
mov
mov
sbb
mov
or
je
insl
sti
movsb
testb
pushf
dec
ljmp
mov
jg
std
inc
mov
lcall
int
push
add
mov
outsl
pop
push
lods
fs
ss
shll
add
cmp
arpl
and
outsb
jb
sbb
scas
jp
ljmp
jmp
push
xor
push
lods
outsl
loopne
es
cmc
mov
gs
mov
insl
mov
mov
hlt
stc
mov
sbb
nop
and
jne
cmp
addb
movsb
imul
jae
jle
pushf
sub
scas
popa
xchg
arpl
leave
add
mov
lock
sub
adc
pushf
xchg
or
sub
mov
jno
cld
test
clc
iret
xor
mov
mov
xor
pusha
stos
lods
xor
mov
push
jo
mov
cwtl
insl
rol
cli
ds
or
push
adc
scas
fldz
add
inc
or
mov
aad
cld
mov
gs
add
fsubl
ret
mov
stos
bound
mov
imul
adc
mov
lcall
adc
inc
mov
push
and
leave
ds
cmp
movsb
xor
mov
das
mov
add
lahf
xchg
into
fildll
insl
aad
std
getsec
and
mov
lret
pop
hlt
test
sub
popf
sub
or
out
xchg
jp
inc
pop
enter
data16
inc
das
jne
orb
sub
addr16
sbb
and
leave
mov
sar
dec
std
andl
xor
mov
mov
rorb
icebp
mov
nop
mov
jg
test
pop
jno
or
xchg
aad
out
lret
inc
addr16
add
sub
cmc
jnp
pop
scas
repnz
jb
out
pushl
loope
inc
adc
negl
sub
or
push
dec
xor
fwait
jle
adc
repnz
xchg
dec
jnp
xchg
lock
ja
popa
push
cmp
in
and
jb
jb
addl
pop
gs
cmp
insb
sbb
iret
in
pop
pop
mov
adc
es
out
es
pop
add
fs
insl
adcb
or
xchg
sbb
scas
ds
sub
loopne
lods
mov
shl
mov
mov
push
cmp
lock
cmpsb
mov
pop
cs
jns
rorb
sub
test
xor
xor
mov
sub
mov
fnstcw
out
dec
xor
mov
lret
jg
bound
cmc
cmp
movsl
call
mov
push
sbb
push
lret
inc
les
mov
aad
scas
pop
xchg
arpl
cmc
pop
stc
and
pusha
jecxz
jns
jnp
fdivrl
leave
ja
enter
stos
lds
dec
fs
pop
mov
outsl
add
mov
lds
jb
add
rclb
out
sbb
stc
stos
int
div
jmp
mov
lcall
outsb
pop
mov
or
mov
add
cmc
cmpsl
in
jmp
insb
and
stc
xchg
adc
dec
dec
push
imul
or
lods
out
loopne
or
andl
filds
daa
je
stos
in
adc
push
sbb
pop
jno
and
push
push
or
sahf
push
mov
push
dec
test
jge
cmc
lods
js
pop
dec
xchg
xor
pop
sub
xchg
mov
or
xor
jns
inc
fs
dec
push
sub
xchg
in
les
ja
mov
pop
jge
pop
int
pop
shl
mov
in
adc
lret
mov
or
push
je
mov
outsb
lock
jmp
xchg
lock
jnp
jne
lea
lcall
jno
ja
imul
int
push
mov
dec
sbb
fidivl
icebp
or
lret
lods
clc
out
lcall
cmpl
and
sarb
mov
rclb
xor
aaa
jle
sahf
mov
ss
xor
push
aaa
data16
cwtl
mov
in
fadds
or
jle
aas
xlat
jl
adc
inc
mov
popf
dec
mov
pop
push
es
push
sbb
cmpl
mov
aad
ss
mov
insb
jp
into
cmp
mov
dec
xor
loope
fwait
mov
jp
ss
mov
rclb
push
idivb
or
movsl
xor
push
mov
pushf
or
out
mov
outsb
rol
je
mov
mov
sub
fldt
sub
fidivrl
cltd
dec
pop
popf
cld
push
pop
jb
stos
lcall
sub
insl
cltd
adc
and
imul
aam
xor
dec
and
fisttps
flds
ret
jg
fs
ds
xorps
or
mov
jg
lcall
mov
insb
pop
sbb
mov
lock
cs
lret
jp
xor
jbe
popf
sub
in
cmc
jnp
int
aas
sahf
cld
xchg
pop
test
popa
jb
sub
lds
dec
sbb
cld
cmp
push
movsb
adc
xchg
fldcw
mov
jo
or
data16
dec
rclb
in
in
push
mov
jecxz
mov
pushf
in
into
cmp
cmp
lea
inc
test
fcoms
and
rorb
sub
pop
testl
enter
push
jno
xchg
bound
sub
and
pop
popf
mov
into
data16
int
clc
test
dec
loopne
sti
mov
shl
lock
pop
inc
sbb
or
and
jg
or
daa
subl
push
fsts
bound
icebp
or
mov
pop
jge
loope
mov
mov
jle
xchg
in
mov
inc
loop
jb
sbb
xor
cltd
fcmovnbe
movsb
aam
sub
add
bound
adc
sahf
and
call
rcrl
inc
push
gs
mov
and
out
icebp
dec
add
inc
mov
fnsave
or
push
jae
mov
in
sete
pop
out
add
ret
inc
cmp
std
mov
insb
and
imul
pusha
mov
sbb
in
pop
jmp
jae
lock
add
xchg
sti
sarl
shl
cmc
les
pushf
ljmp
jecxz
pop
js
rolb
sub
je
daa
pop
iret
sbb
cld
lods
ds
ja
push
ljmp
fldcw
dec
push
dec
out
jmp
mov
sbb
cmc
dec
add
push
orl
xchg
into
cmpsl
je
lock
insl
stc
outsb
and
imul
inc
or
movsb
imul
mov
pop
xor
cwtl
mov
mov
test
repnz
mov
stos
mov
fcom
dec
add
mov
in
cmc
scas
orb
mov
pop
bound
ja
dec
lcall
addb
adc
push
movsb
mov
test
adc
test
sbb
mov
xchg
jg
cld
out
cltd
push
xor
jle
adc
ds
push
lock
ss
in
mov
ret
jg
dec
jmp
in
or
push
call
xchg
pop
pushf
push
and
data16
xchg
pushf
pop
insl
jae
xchg
pushw
push
xchg
popa
cmp
call
add
cmp
sbb
stc
sbb
mov
test
mov
pop
fdivrs
xchg
cmc
inc
std
push
out
fwait
jmp
jbe
pushf
dec
les
pop
add
sub
repnz
aas
std
outsb
xchg
shrb
lods
adcl
lods
or
push
dec
int3
out
enter
aam
addr16
or
xchg
pop
push
cmpsl
clc
xor
test
test
push
outsb
loop
mov
cmpsb
cs
push
adc
push
idivl
in
mov
loope
xchg
fistl
jle
loop
push
push
clc
loop
sub
jnp
adc
imul
lds
dec
cmp
insb
scas
pushf
push
xor
imul
fimull
mov
shlb
mov
jl
pop
and
push
pop
inc
xor
adc
in
sarb
or
sahf
inc
dec
popa
push
hlt
and
inc
jnp
shl
stos
xchg
popf
out
int3
inc
cmc
fldl
mov
js
jno
xor
je
inc
mov
jbe
in
out
sbb
es
or
or
or
or
push
imul
mov
xchg
test
fists
jle
add
les
mov
lods
addr16
pop
ja
sub
jno
imul
lea
popf
lea
sub
dec
sarw
fnstenv
stos
push
ret
mov
pop
cmp
pop
jno
or
ds
repz
arpl
add
jno
out
stos
sbb
mov
leave
aam
repz
jmp
and
jge
sub
jns
cmp
xor
andl
imul
inc
bound
rol
cmp
jle
xor
pop
lret
and
cmp
sub
add
and
sub
nop
jae
shrb
and
push
pop
jl
icebp
jnp
and
xor
dec
outsb
adc
loopne
add
sti
pop
xor
mov
cltd
test
movsl
sub
jo
ljmp
int3
adc
xchg
push
push
bound
dec
inc
cmp
fs
mov
scas
dec
std
leave
push
sahf
sbb
push
jbe
std
dec
sub
out
pop
pop
test
dec
push
mov
and
push
test
or
and
in
lcall
call
or
push
ret
jge
pop
mov
pop
jmp
xchg
cmp
dec
es
lds
xor
sbb
xor
fwait
or
ss
std
xchg
inc
idiv
xchg
cmp
jp
jge
mov
xlat
dec
mov
mov
mov
test
push
jecxz
in
inc
push
imul
mov
outsb
mov
xchg
das
jg
or
sub
in
pop
sub
out
inc
inc
pop
sub
dec
adc
int3
xor
fiadds
push
pusha
lock
dec
inc
and
add
fsubl
aad
lods
sarl
scas
in
sub
cmpsb
inc
push
sbb
test
xchg
in
insb
je
xchg
insb
pushf
je
pusha
sub
iret
test
lea
testl
out
daa
cmc
ljmp
js
movl
add
jl
test
mov
xchg
mov
jb
jb
jg
sub
lods
pusha
adc
dec
inc
xchg
sbb
shl
dec
or
out
test
jns
ss
bound
popf
xor
inc
adc
loope
rcrb
call
iret
xchg
add
jl
push
cmpsl
nop
and
mov
inc
push
lret
jmp
lret
push
mov
dec
call
pop
ss
pop
fisttpl
mov
loope
push
pop
cmpsl
jge
mov
std
adc
sub
shll
mov
pop
movsl
jmp
ret
inc
pop
sbb
loope
mov
dec
pop
mov
sub
add
fidivrl
jae
push
inc
bound
insl
pop
in
into
mov
or
jne
ficompl
jnp
daa
cmpsb
mov
std
aad
lds
test
stos
call
fdivrl
push
cmpsb
test
insl
outsl
xor
dec
enter
adc
push
aaa
enter
inc
stos
push
or
icebp
lock
cmp
into
sbb
inc
sbbb
inc
in
sbbb
dec
xlat
fs
mov
jge
pop
mov
lds
lods
sub
push
int3
adc
adc
mov
fs
dec
sbbb
lods
xor
out
jge
dec
shl
mov
push
push
pusha
and
push
fbstp
cwtl
aaa
cli
in
hlt
mov
out
mov
adc
inc
jnp
mov
daa
push
cmp
cmp
sub
ss
lods
sub
ret
std
add
lret
xlat
arpl
sbb
jnp
jnp
in
xchg
scas
push
sti
add
and
rol
mov
hlt
mov
dec
and
addl
sbb
test
pusha
pop
sbb
xchg
pop
xchg
xor
jae
hlt
jb
call
out
inc
pop
repz
ret
pop
sbb
mov
and
ror
inc
push
push
push
add
sbb
notb
pop
and
jl
inc
or
mov
push
iret
ret
pop
sbb
adcl
xchg
dec
hlt
test
out
bound
pusha
jne
mov
pop
test
mov
add
orl
or
movsl
mov
cmpsb
push
in
inc
push
cmp
sub
mov
addr16
and
out
jmp
pop
cmpsb
jl
xchg
insl
jge
daa
mov
sub
cli
aaa
or
jbe
cltd
clc
jl
les
std
divb
gs
mov
sub
fcoms
sub
in
cmp
mov
xor
pushf
dec
mov
pop
sub
loopne
andl
ss
and
mov
lock
mov
addr16
hlt
jmp
sub
dec
test
addr16
inc
sub
icebp
jae
lcall
jl
push
xchg
mov
sbb
add
jg
dec
lret
jmp
push
dec
mov
mov
xchg
xlat
pop
inc
cmp
pop
pop
add
shll
ds
mov
xor
enter
popl
out
sub
loop
sar
pop
push
icebp
dec
subb
jle
xchg
orl
or
lahf
loopne
stos
out
ret
sbb
mov
xor
in
dec
add
cmp
std
sti
cmc
adc
jbe
pop
or
sbb
pop
stos
clc
in
sbb
xchg
and
ljmp
movsl
fsubs
mov
push
push
or
mov
add
out
pop
stos
call
mov
sub
clc
mov
mov
repz
jp
divb
jp
mov
shlb
nop
and
out
add
mov
jmp
xchg
xchg
or
adc
arpl
fincstp
sub
xchg
int3
ds
dec
xchg
cld
repz
nop
add
inc
in
and
cltd
cmpsb
push
sbb
cmp
stos
out
xor
outsb
xor
cmp
push
sbb
mov
data16
pushf
loopne
scas
scas
xor
std
jbe
xchg
push
add
ror
stos
or
addr16
adc
and
repnz
or
lcall
stos
movsl
stc
cmp
add
xchg
xchg
jmp
icebp
stos
inc
xchg
out
adc
aas
or
mov
cmp
sbb
cld
push
pushf
clc
pop
mov
shrl
inc
adc
cmp
ret
ss
sub
fwait
lret
adcb
ja
add
mov
jmp
jge
mov
add
inc
and
inc
jno
lcall
sbb
in
mov
add
jno
mov
dec
hlt
cli
mov
sbb
xchg
into
dec
dec
test
sub
mov
scas
jb
and
idivl
xor
and
ljmp
lock
mov
addl
lods
or
lret
mov
in
push
mov
scas
cmp
adc
mov
js
loope
scas
ljmp
into
mov
pop
inc
in
dec
jg
shll
outsb
mov
fnstenv
xchg
fmull
popl
stc
mov
xor
cld
shrb
or
jo
push
int
cmp
arpl
xchg
dec
pop
jno
xor
sti
xchg
pop
filds
mov
arpl
aam
leave
stc
pop
mov
cltd
cmp
cmp
mov
push
lods
int
and
adc
lock
je
jbe
cltd
pop
scas
rcr
sub
icebp
jl
xor
inc
mov
mov
mov
xor
inc
sub
sub
pop
and
out
lds
mov
xor
push
mov
or
sub
push
cltd
and
sbb
arpl
int3
pop
stos
push
call
push
fisubl
pop
sbb
add
cltd
andb
mov
sar
and
loop
rclb
cmp
push
imul
inc
imul
cmp
fstps
dec
in
inc
lret
into
inc
sbb
mov
push
xchg
adc
stos
fsubs
xor
fdivl
mov
enter
aam
notb
add
icebp
sbb
cmc
std
fiadds
das
lock
push
pop
je
sub
inc
sub
add
into
sbb
xor
mov
dec
xchg
shl
mov
ss
ret
scas
sub
xchg
cmp
into
fs
imul
aaa
data16
xchg
mov
sahf
and
mov
add
nop
iret
call
loop
jns
mov
dec
and
cwtl
shlb
ss
xor
push
xorb
and
loopne
ret
mov
xor
test
ds
add
xor
sub
notl
dec
mov
jmp
imul
xchg
sbb
cmp
mov
out
cmp
jae
push
ret
enter
loopne
jbe
sub
sub
adc
int
rcrb
mov
arpl
cmpsb
fsubl
mov
fwait
cmpsl
cmpsb
rcrl
std
andb
and
lds
cmp
cmc
xchg
xchg
mov
dec
ljmp
cmc
dec
std
mov
push
add
inc
xchg
mov
mov
push
xor
repnz
cmp
fbstp
das
xchg
xchg
mov
lahf
aaa
cmp
test
xchg
addr16
push
stc
jle
mov
mov
add
jb
loope
je
testl
sbb
or
push
and
shrl
test
mov
lea
jmp
pop
mov
enter
stos
je
addr16
add
jle
add
stos
faddl
rcr
pop
mov
aam
and
adc
icebp
ss
int3
fcoml
xchg
call
icebp
aaa
xor
int
test
setb
jl
jl
mov
cmp
push
imul
mov
xor
cmpsb
inc
ret
mov
jo
pop
mov
pop
xchg
rcrb
das
repnz
push
pop
test
xchg
xor
dec
add
dec
cmpl
mov
pop
icebp
lea
mov
nop
dec
andl
sbb
cmp
jecxz
out
sub
or
cmp
sbb
lea
inc
pop
ss
push
incb
dec
pop
xchg
sar
enter
outsl
mov
mov
aam
mov
pop
into
repnz
mov
or
das
rcr
out
in
mov
int3
mov
inc
aam
insb
xchg
dec
aad
sub
int
or
cmp
mov
lock
jecxz
jnp
leave
mov
repnz
fdivp
jnp
cmp
out
pop
inc
jge
jecxz
shll
lock
mov
or
add
adc
inc
sbbl
adcl
test
jle
pop
pop
mov
cld
push
add
xchg
mov
adc
xchg
cltd
xor
aas
outsl
push
jns
push
je
cld
fcoms
pop
mov
xlat
loopne
fwait
aam
incb
pop
pop
sbb
pop
inc
jne
add
mov
aad
dec
loop
inc
cmp
lcall
xor
sbb
ja
ret
pop
push
xor
loope
test
call
sti
sbb
sahf
mov
cmpb
je
mov
jg
sub
popa
mov
or
or
xor
ljmp
cltd
inc
testl
xor
jmp
hlt
scas
dec
aad
in
jo
mov
or
push
or
jmp
enter
inc
dec
xchg
lea
ficoml
cld
lcall
dec
clc
inc
dec
popa
lcall
fs
bound
cmp
aam
mov
out
push
inc
inc
mov
and
pop
aas
pusha
mov
sbbb
xchg
pop
cltd
or
out
mov
and
or
push
mov
xchg
repz
xor
stos
jp
fsubr
lods
xor
and
push
or
jo
mov
sti
mov
test
insb
dec
enter
cmp
aad
int3
jmp
sub
jo
out
call
mov
or
lds
sub
inc
je
in
loopne
xchg
aas
xchg
push
dec
jns
pop
sub
mov
pop
pushf
int
pop
pusha
sti
mulb
pop
clc
movsl
sub
xor
out
jns
push
pop
je
dec
bound
dec
xchg
cld
xchg
addb
lahf
icebp
inc
ljmp
daa
dec
mov
repz
das
jns
cld
out
scas
push
lods
and
push
out
je
aas
std
jae
xor
add
out
pusha
stc
test
push
adc
outsb
push
inc
fmull
and
push
pop
fdivrs
xchg
dec
lock
or
call
and
push
lods
scas
or
lret
inc
subb
and
decb
push
or
insl
orl
and
xchg
mov
enter
repz
ds
jge
sbb
ret
xchg
movsl
mov
test
jnp
lret
pop
mov
jmp
jg
pop
add
divb
dec
out
loope
ficompl
adc
pop
mov
clc
insl
mov
test
xor
pop
push
notl
aaa
inc
fcoml
test
sub
into
xor
test
jecxz
jge
jb
jne
cmp
sub
lcall
das
sbb
pop
fwait
jbe
popa
lret
pop
fisttpl
pop
hlt
mov
loopne
and
sbb
or
dec
insl
mov
mov
in
and
cs
push
sbb
enter
jecxz
sbb
pop
repz
movl
pop
ja
fbld
xchg
pop
mov
push
mov
adc
adc
cmpsl
stc
cmpsl
arpl
sub
in
xchg
and
cmpsl
hlt
insb
jb
dec
push
repz
cli
addr16
push
pop
ret
sbb
push
into
addr16
or
cmpsl
loopne
out
mov
mov
mov
testl
outsl
and
pop
dec
mov
pop
andl
sbb
and
dec
fsubrp
xor
rolb
jno
xor
mov
scas
xor
pop
out
sub
mov
pop
mov
leave
mov
shr
xchg
mov
xchg
inc
pop
cs
mov
fistpl
add
shlb
sbb
out
xchg
push
inc
add
dec
jecxz
xor
fs
push
jns
push
rcll
pop
lret
pop
jnp,pt
popa
testl
in
push
int3
mov
lcall
shr
jae
jg
mov
cmpsl
mov
inc
xchg
mov
test
mov
xor
or
test
jmp
pop
cld
xor
sub
xchg
lods
andb
pop
movsb
pop
outsl
dec
jnp
shlb
mov
xchg
sbb
or
fwait
in
lea
dec
adc
or
outsb
inc
or
repnz
lock
mov
lcall
movsl
adc
add
sub
mov
jb
xor
inc
cli
or
js
pop
pop
lcall
test
adc
jae
sets
push
and
jno
push
jge
das
xchg
mov
sub
clc
xchg
or
jb
sbbl
lds
inc
scas
mov
jbe
jmp
sbb
fisubl
lahf
and
jno
jae
pop
jb
and
hlt
or
cmp
sub
pop
mov
je
imul
test
mov
jno
mov
push
xchg
orl
movb
test
enter
adc
lods
xor
sub
cmp
fstps
push
jmp
sbbl
sbb
repz
cld
ret
int
cs
jno
roll
mov
mov
ror
pop
inc
aad
mov
add
jge
fwait
mov
sbb
and
pusha
push
add
mov
push
mov
test
les
ja
dec
dec
jmp
mov
fcompl
inc
cmc
pop
shr
pop
sub
xchg
lret
jl
or
lds
mov
push
roll
pop
lcall
pmullw
sbb
sub
push
mov
aad
add
sar
insl
popa
add
enter
mov
push
dec
sub
push
mov
adc
cmpsl
add
cmc
outsl
outsl
jle
lahf
pop
dec
add
mov
add
lret
jbe
mov
inc
mov
cld
and
in
cmc
adc
mov
icebp
xor
sbbl
pop
lock
push
sbb
lret
pop
mov
inc
xchg
nop
cmp
lahf
pop
call
pop
inc
out
int
sub
dec
addr16
sub
mov
ret
ss
out
out
adc
push
push
js
push
repz
or
jnp
loope
or
ret
fwait
and
jb
loop
pop
pop
push
push
stc
xlat
fidivrs
mov
jb
sbb
in
filds
leave
out
or
nop
out
dec
fucom
jnp
mov
mov
ds
pop
push
loope
pusha
and
hlt
jp
xor
cmp
ss
xlat
call
fs
cmp
test
push
insl
mov
scas
pop
mov
repnz
fcmovnbe
test
scas
out
inc
pusha
sub
je
push
cmp
loop
jbe
mov
jecxz
mov
dec
or
orl
add
push
sbb
adc
or
in
call
add
fwait
mov
dec
push
mov
mov
mov
xor
xor
sarb
or
pop
sbb
cmp
into
loope
jecxz
inc
xchg
inc
dec
fsubp
outsb
out
and
out
adc
fldt
jl
xchg
popa
in
jl
cld
mov
or
xchg
std
cltd
movsl
sbb
lret
negb
add
cltd
outsb
das
aas
cmp
dec
add
jmp
adc
sbb
pop
pop
ds
enter
cmp
out
xchg
add
xor
sti
xchg
fisttpll
xchg
or
test
int
jl
jmp
std
pop
and
shl
or
or
stos
mov
inc
pop
push
aam
or
sub
dec
jne
inc
mov
push
adc
adc
adc
into
adc
xor
sbb
sti
fsubrs
adc
hlt
aad
adc
cwtl
ret
lock
cmp
sub
push
add
dec
mov
mov
callw
inc
mov
in
push
jg
jg
loop
inc
add
or
mov
imul
inc
jp
cmp
stos
insb
cmp
push
lds
ror
cmc
sarb
push
out
xchg
add
mov
xor
push
mov
mov
int3
in
xchg
push
add
fldenv
je
mov
sbb
lahf
daa
jnp
filds
and
ss
repnz
jae
bound
lds
cltd
mov
xor
fisubl
mov
mov
push
dec
je
in
pusha
jne
xlat
push
cmp
jge
les
jp
sbb
mov
outsl
ds
sub
sbb
lds
xor
adc
cmc
cli
xor
jbe
sti
mov
mov
js
repnz
mov
rclb
dec
fstps
or
and
cld
or
jne
dec
jle
mov
pop
xchg
outsl
inc
jbe
gs
test
out
push
adc
xchg
pop
int
imul
movsl
push
xorl
inc
je
cmpsb
es
das
setns
repz
sbb
inc
dec
jnp
jecxz
loope
pusha
push
dec
push
outsl
pop
popa
and
xchg
lcall
rcl
mov
add
push
insl
lea
dec
pop
in
ljmp
pop
pushf
mov
cwtl
imull
inc
cmc
andb
xchg
jmp
negb
addb
inc
lret
jp
out
lods
inc
jb
xorl
xchg
pop
cmpsl
lret
xchg
pop
fisttps
sub
pusha
mov
mov
mov
mov
jo
movzwl
dec
imul
loope
ret
jmp
test
inc
test
jl
adcb
std
inc
lods
movsl
fmuls
mov
es
sbb
arpl
incb
dec
inc
cmp
sbb
rol
lret
sbb
insb
iret
insb
adc
mov
mov
mov
mov
mov
jns
stos
xchg
push
movsb
cmp
divl
add
out
jb
mov
subb
adc
lock
mov
ss
aad
pushf
pop
inc
pop
rorb
loopne
incb
cmp
icebp
xor
sarl
xor
sbbb
pop
iret
test
jmp
stos
sbb
lock
or
enter
daa
cli
outsb
inc
stos
lock
cs
xchg
adc
stos
sub
mov
mov
into
movsb
sub
test
xchg
jmp
or
add
andl
leave
dec
adc
cmp
and
push
sbb
popa
jl
sub
mov
inc
sbb
ss
cmp
aad
mov
das
shrb
jp
xor
jbe
test
js
jno
mov
mov
imul
aaa
and
test
jl
filds
jg
mov
cmp
inc
jl
lret
outsl
outsl
mov
sbb
mov
sbbl
in
or
cmp
and
mov
cltd
daa
daa
pop
or
out
sbb
jg
cwtl
movsb
iret
cltd
push
test
mov
push
enter
pusha
sar
and
aaa
adc
stos
in
xchg
popf
push
out
push
outsb
rcr
dec
loop
call
stos
mov
pop
pop
add
sbb
push
jge
or
popa
repz
sub
fiaddl
sbbl
or
ds
push
shl
xor
and
insl
mov
jbe
push
insb
fisttps
in
ja
adc
andb
fstpl
xlat
pop
jle
mov
enter
sbb
mov
and
test
xchg
pop
sub
je
add
loope
xchg
cli
add
cmp
rorl
sub
adc
xchg
insl
jecxz
popa
dec
scas
push
ret
imul
lock
or
pop
add
mov
psubsw
aaa
sub
pop
jno
sbb
pusha
mov
push
jo
dec
push
or
into
aas
ss
inc
and
sub
sub
fnstcw
mov
out
out
push
dec
jnp
sbb
int
cmpsl
dec
jbe
data16
cmp
leave
dec
cmp
test
jno
mov
dec
jl
or
mov
push
lods
ret
imul
out
call
scas
adc
movsb
js
scas
fcmovnbe
insb
and
jns
cmp
xchg
xchg
fnsave
ficomps
iret
cmc
adc
lcall
and
jno
push
adc
sbb
xchg
xlat
sbb
outsl
maskmovq
imull
fcmovnu
loop
xchg
mov
nop
out
test
or
insl
mov
insb
cmp
pusha
mov
subb
out
lahf
xchg
dec
fcomip
jle
movsb
jl
pop
jge
popf
dec
stos
mov
aaa
in
nop
pop
cltd
test
in
sbb
mov
pop
pop
mov
xchg
sub
stos
mov
int
cmp
jbe
enter
push
push
ja
push
jb
xchg
dec
push
sar
and
adc
int
sahf
mov
fldt
adc
dec
popa
xchg
lods
je
imul
ret
xchg
pop
loop
pop
mov
and
out
push
sbb
fbstp
jmp
lea
adc
shl
adc
dec
xchg
aaa
ds
outsb
adc
call
in
xchg
iret
lds
sbb
push
stos
mov
mov
jmp
imul
icebp
cli
rorb
adc
outsl
lock
enter
movsb
scas
stos
int
cmp
adc
in
inc
mov
into
push
popf
lret
push
mov
adc
jmp
pop
mov
xchg
jecxz
xor
test
lods
fcomp
jg
pop
sub
je
loop
or
fwait
adc
xorl
addr16
stos
aad
push
and
xchg
mov
js
mov
icebp
ret
mov
insl
iret
mov
dec
dec
adc
dec
mov
aas
pop
pusha
xchg
sub
or
mov
popf
cmc
sub
neg
aas
push
das
pop
sbb
dec
sbb
dec
repz
or
rclb
mov
insb
pop
fnstsw
cmp
lds
xor
jo
cmp
sub
sub
cmpsl
adc
mov
mov
nop
insl
mov
sub
hlt
testl
stos
int
sub
js
cmpsl
push
in
cmp
test
and
sbb
dec
mov
push
aaa
outsl
cli
inc
jae
push
sti
imul
xchg
cld
cmp
into
hlt
jle
stos
movsb
data16
cmpsb
in
xchg
loopne
pusha
nop
int
int3
rolb
xchg
jg
ja
mov
cmc
lods
cmp
xor
inc
loop
xor
popf
je
xorb
pop
bound
repnz
mov
js
pop
in
mov
pop
stos
pop
and
in
dec
stos
dec
dec
jecxz
shlb
xchg
mov
arpl
dec
sbb
nop
dec
outsl
push
in
cmp
jp
or
fisttpl
add
sbb
popf
cs
sbb
stos
mov
add
add
push
mov
dec
cmp
test
push
es
mov
push
in
repnz
add
fdivrs
adc
mov
fimuls
dec
cmp
imulb
testb
into
pop
push
pusha
enter
inc
mov
xchg
jae
mov
mov
fldt
sub
ret
pop
inc
mov
cmpsl
je
stos
sub
aas
div
adc
decl
xor
and
ficoml
ret
in
push
mov
mov
jbe
add
repz
loope
rolb
rcrb
mov
jmp
jae
cmpsb
push
sti
stc
or
jo
repz
mov
adc
fcompl
sbb
jne
lock
xchg
mov
out
cld
sbb
int
mov
and
adc
cli
psllw
mov
push
push
popfw
inc
xchg
neg
push
leave
mov
mov
lcall
jp
in
fsub
lea
dec
shld
shll
jmp
adc
clc
stc
dec
push
ffree
and
leave
sbb
out
xor
cld
xchg
pop
add
in
add
xchg
movsb
nop
sub
inc
jmp
cmp
add
dec
mov
jae
sub
dec
lock
cmp
test
sbb
loopne
jge
dec
pop
stos
push
adc
das
test
pop
out
xchg
jmp
add
xor
and
lret
cmp
jo
mov
push
or
mov
and
orb
ficomps
pusha
push
popa
jno
in
pop
in
repz
mov
fwait
jge
mov
sahf
inc
or
pop
mov
ret
mov
test
add
xchg
mov
jecxz
add
shrl
add
je
xor
inc
pop
pushf
sbb
int
cmp
call
cmp
mov
lds
pop
lods
fs
sbb
inc
daa
fisubrl
ss
nop
xor
push
jle
dec
andl
mov
imul
negl
outsb
pusha
or
or
inc
sbb
adc
add
jg
push
test
sbb
shl
call
dec
out
cli
or
xlat
mov
sub
and
push
mov
loop
mov
lret
lahf
jb
rcrb
add
xchg
notb
lea
iret
mov
das
ret
leave
sbb
jne
fisubrs
aas
jno
lock
push
xor
jne
in
out
ds
dec
sbb
xchg
adc
ficoml
stc
lods
pop
jecxz
imul
fidivrs
push
inc
fdivs
sub
push
cmp
out
mov
cmp
mov
sti
mov
test
or
idivl
pop
sub
movsb
or
sub
and
mov
insb
out
pushl
and
sub
add
jmp
cmc
mov
lds
jp
out
adc
add
or
mov
sbb
cmp
adc
push
aas
dec
lds
mov
xchg
jecxz
dec
das
and
cmp
pop
filds
scas
dec
pop
dec
addr16
inc
aaa
fucomp
jmp
mov
mov
or
iret
xor
mov
mov
aam
pop
sub
mov
adc
mov
xor
icebp
mov
mov
xor
push
repnz
repnz
stos
loop
lcall
inc
mov
fldcw
imull
loope
clc
jo
sub
in
mov
scas
cmp
mov
or
push
add
sbb
popf
mov
stc
sbb
push
icebp
sub
jne
gs
pushf
add
sub
dec
and
cltd
xor
aad
inc
add
or
movsb
rcl
jecxz
and
in
jae
pop
clc
adc
daa
pop
mov
imul
call
mov
fnstsw
and
imul
push
je
or
dec
pop
adc
sub
dec
movb
je
cmp
inc
xacquire
ja
jne
xor
das
in
fistpll
xchg
xor
in
mov
sahf
scas
daa
repnz
insl
mov
rcll
shlb
inc
cli
in
loope
es
lret
adc
bound
mov
push
out
jecxz
shlb
loopne
mov
mov
mov
inc
outsb
hlt
incl
mov
or
cltd
push
sbb
push
ds
or
test
lock
in
xor
lahf
sub
jns
fwait
scas
sahf
lds
push
xchg
out
pop
nop
cmp
mov
pop
aas
data16
adc
mov
out
and
cld
movsl
jo
test
rorl
mov
test
je
in
inc
sbb
add
js
ss
scas
nop
push
mov
push
add
add
push
daa
sub
fcmovne
call
lret
aas
jno
mov
inc
neg
and
aad
sub
negl
push
adc
lahf
incb
cmc
pop
push
mov
cmp
cld
dec
mov
fldcw
dec
mov
arpl
fisubl
cmpsb
add
out
sub
clc
shlb
scas
mov
cmp
sub
scas
imul
int
jmp
fdivr
int3
scas
cmp
jb
mov
inc
je
push
fwait
mov
xlat
mov
ljmp
or
fisttpl
sub
push
test
push
lods
ljmp
dec
push
push
cmp
cwtl
pop
xor
cmp
add
pusha
push
mov
mov
pop
sub
or
ffree
out
adc
sub
fwait
cmp
push
leave
es
and
std
push
loope
jge
cmp
clc
inc
daa
test
add
dec
or
add
xlat
xor
ja
inc
inc
cmp
iret
int3
mov
dec
mov
in
call
xor
insl
das
cmp
dec
fisttps
cltd
cltd
lret
pop
cli
imul
sbb
push
and
je
xor
fimull
mov
fdivs
jg
insb
dec
xor
dec
adc
lods
int
ja
dec
imul
mov
xor
fcos
sbb
and
fidivrs
jne
fidivrl
jl
xlat
lahf
xchg
sbb
imul
inc
sbb
mov
jns
and
pop
popf
jne
and
or
aas
call
imul
and
lcall
mov
popf
ja
leave
stos
lods
in
in
rorl
in
shrl
daa
int3
adc
mov
sbb
mov
pop
lahf
mov
enter
sub
outsl
fwait
cli
dec
jne
adc
add
cmpsb
mov
jp
sbb
mov
cli
jns
jns
cli
imul
insb
mov
xchg
shld
loop
jnp
into
lret
rcrl
xchg
shl
pop
jmp
rorl
add
int
int3
pop
adc
mov
inc
outsl
jae
std
mov
cmp
stos
les
mov
aaa
or
inc
cmp
lcall
int
lret
jnp
loopne
add
dec
fwait
sbb
jno
fld
leave
push
lret
mov
ret
rcr
sbb
xor
cmpsl
sub
pop
testl
std
adc
je
mov
test
cli
lcall
loope
test
imul
sti
cmpsb
dec
push
xchg
and
push
cmpsb
inc
lods
scas
sbb
sbb
adc
inc
fildl
cmp
loope
dec
xor
sub
loope
fwait
jns
clc
xchg
icebp
fisttps
mov
xor
jl
fistl
inc
mov
outsb
les
cmpsb
xor
mov
inc
and
movsb
jecxz
mov
inc
adc
adc
into
clc
es
sbb
jo
sub
popa
fs
adc
adc
xcrypt-ofb
cmpsl
sub
adc
inc
insl
sbb
in
loope
add
aad
sbb
out
stc
daa
xchg
addl
and
mov
xor
je
inc
xchg
xlat
fimuls
ja
in
clc
cwtl
daa
shll
out
xbegin
xor
and
imul
xor
bound
sub
pop
mov
es
inc
push
sub
dec
cmp
daa
gs
mov
test
dec
xor
cmp
lahf
aam
add
jb
cwtl
mov
ficoml
sti
bound
add
popa
sahf
adc
jl
mov
inc
dec
sub
sbb
sbb
fnstsw
jecxz
sbb
xor
mov
xor
sbb
pop
jns
dec
inc
xchg
and
add
sub
adc
lock
add
mov
ret
add
sub
mov
sbb
ljmp
in
mov
or
test
and
lds
push
mov
and
jg
xchg
add
jae
and
and
ja
or
outsl
les
iret
dec
sbb
fbstp
lahf
mov
stc
ds
mov
jge
inc
in
subl
aas
sub
dec
or
das
lahf
out
lahf
push
jge
dec
and
mov
loop
subl
bound
mov
mov
stos
out
pop
dec
and
not
xorl
imul
adc
shll
pop
jp
fs
push
scas
mov
arpl
mov
popa
addb
ret
movd
xchg
div
pushf
xchg
out
lahf
out
mov
jb
jae
subb
xor
sbb
mov
dec
cwtl
insl
mov
test
mov
out
jne
dec
out
and
inc
pop
sahf
daa
pop
hlt
or
jbe
cwtl
or
fsubl
insl
cmpsl
sbb
inc
test
nop
cmp
in
nop
inc
dec
ljmp
rolb
sub
sbb
stos
sub
xchg
pop
push
das
mov
sub
ljmp
mov
push
loope
and
inc
mov
test
shrl
fadds
mov
notl
adc
cwtl
fbstp
aad
jno
xchg
pop
mov
jnp
push
mov
jl
loope
loop
enter
subb
mov
pop
jmp
test
cmc
push
cmpsl
mov
out
jecxz
scas
daa
inc
cli
ds
es
xchg
push
sub
push
movsl
mov
int
xchg
push
pop
lods
add
pop
sti
dec
cmp
lcall
jae
aaa
mov
imul
sub
aas
in
frstor
push
mov
in
repz
fcmovnu
repnz
stc
mov
pusha
xchg
xor
stos
pop
adc
dec
sarl
pop
arpl
pop
dec
shlb
fdivl
outsl
cld
lods
pushf
push
ljmp
or
mov
retw
or
mov
or
xor
lret
repz
mov
jge
ljmp
mov
xlat
lahf
data16
mov
out
sahf
mov
jbe
jl
and
lcall
sbb
or
sbb
loop
insl
ret
adc
stc
cmp
jno
mov
fxch
cwtl
lods
xchg
in
lods
push
fidivl
inc
cmp
test
fcomps
inc
stos
pusha
cmc
xchg
outsb
jne
mov
inc
lea
repnz
push
jno
xlat
dec
pop
sbb
mov
mov
bound
jnp
das
test
dec
xchg
jno
cwtl
cmp
xchg
pop
add
repnz
xor
lods
ss
jmp
or
int
daa
jae
dec
mov
xchg
sbb
or
mov
and
mov
mov
fiaddl
inc
cmp
addb
out
dec
aad
in
and
sub
jg
jg
or
pop
jo
aas
mov
jbe
sub
mov
mov
cmp
and
inc
sahf
jg
ljmp
add
arpl
sahf
setl
idivl
add
std
cmc
and
add
test
call
jno
insb
jb
sbb
repnz
jbe
sbb
mov
pop
popa
sub
sarb
int
lods
xor
lcall
cmpsb
mov
int
sbb
xor
testl
pop
sub
lret
inc
mov
das
fisubs
mov
iret
mov
sub
xor
icebp
repnz
cmp
mov
arpl
mov
subl
jo
leave
repz
push
orl
cwtl
xchg
arpl
cmp
pop
pop
inc
cmp
push
mov
or
inc
lods
or
leave
sub
jecxz
lds
cmp
jl
test
out
pop
mov
ds
cmpl
outsw
rorl
cmp
adc
adc
sbb
cmp
adc
mov
pop
out
mov
xchg
sub
aam
sbb
leave
jns
adc
nop
lahf
lods
xor
int3
lods
jae
jp
add
lock
cld
jae
out
or
cwtl
sbb
pusha
aad
inc
xlat
sub
pop
aaa
cs
sub
in
push
mov
sub
nop
aas
mov
mov
push
xor
push
mov
std
cmc
pop
jl
push
mov
pop
fcomps
gs
pop
out
cmp
sub
sub
xchg
xchg
fistps
es
sbb
outsl
mov
push
lock
sub
loop
xchg
inc
sub
cli
and
out
addl
in
sub
pop
dec
data16
sbb
mov
roll
lret
outsl
xor
xchg
fsubl
inc
leave
xchg
pop
fbstp
adc
sbb
and
push
xor
xorb
and
mov
cltd
or
dec
hlt
aad
loop
push
cmp
lahf
iret
adc
nop
popa
rcrl
es
jne
pushf
test
mov
fisubs
pushf
add
sbb
mov
call
inc
jns
adc
clc
inc
je
xchg
lea
lods
push
xor
inc
mov
jae
mov
mov
test
lret
imul
ja
xor
or
cmp
scas
xor
scas
push
mov
jno
mov
push
dec
jne
daa
and
or
xor
insl
cli
test
jmp
nop
and
fistpll
leave
test
or
xchg
movsb
push
shll
mov
mov
test
lret
sarl
or
ja
aad
nop
pop
cmpsl
insl
lahf
in
dec
std
pop
add
je
and
jne
pop
aad
das
ss
dec
xchg
shrl
xchg
push
sub
es
xor
call
pop
dec
les
leave
push
cmp
xlat
push
ljmp
dec
adc
mov
xchg
lcall
or
aas
lods
ja
cwtl
add
cmp
adcl
mov
int
imul
xchg
leave
xor
sub
sahf
fwait
imul
push
push
add
push
mov
mov
and
es
ret
ret
hlt
dec
cs
shlb
mov
dec
pop
jmp
fidivrs
pop
jl
fstpl
inc
or
lret
pop
sahf
pop
ret
sbb
leave
sbb
inc
cltd
adc
repz
out
clc
xchg
ja
jecxz
sgdtl
lret
adc
repz
lods
inc
lahf
mov
pop
mov
sti
es
clc
push
push
int3
imul
lea
push
cmp
pop
pop
jmp
push
push
pop
icebp
mov
sub
ljmp
push
fistl
push
jo
pop
adc
mov
mov
adc
push
rcr
and
imul
jns
shlb
cwtl
dec
movsb
jg
pop
push
pusha
mov
pop
ret
sub
or
inc
loopne
in
gs
dec
or
jg
pop
or
imul
xchg
icebp
inc
dec
push
pop
adc
add
pop
mov
in
test
xchg
mov
test
jle
iret
xchg
mov
dec
adc
inc
mov
or
xchg
pop
cmp
js
int
je
push
mov
or
popf
mov
scas
or
mov
lds
lahf
mov
jp
gs
add
sbb
in
mov
mov
outsb
inc
lahf
out
insl
mov
jecxz
imul
sarl
mov
lock
repz
adc
mov
mov
popf
xchg
add
cwtl
mov
or
enter
out
dec
and
ret
lock
xchg
push
sub
push
mov
sbb
fnsave
xchg
das
cmp
dec
dec
std
adc
rcr
cmp
imul
je
sbb
cmp
imul
push
xchg
ja
pop
insb
or
test
mov
push
and
sub
imul
push
fimull
jbe
push
inc
push
and
outsl
inc
jns
dec
pop
mov
cmp
sub
add
push
lahf
ljmp
or
jb
mov
rolb
dec
dec
jo
lcall
shrb
inc
lods
aaa
dec
das
adc
daa
ret
or
jl
outsl
negb
mov
adc
cmp
inc
div
sbb
mov
stos
jne
mov
cli
rolb
sub
add
int3
push
je
xor
shll
pop
fdivl
or
les
pop
or
mov
shl
hlt
aad
stos
mov
pop
sbb
gs
or
cmp
fcoml
ljmp
xchg
and
aad
ja
jnp
lcall
or
ds
inc
xlat
jae
lea
pushf
mov
xchg
mov
mov
xor
and
fcoms
mull
inc
adc
jnp
out
cmp
pop
pushf
add
popf
xchg
mov
test
sub
jne
fs
xchg
xchg
fs
icebp
xchg
stos
loop
dec
lods
shrb
inc
iret
adc
mov
movsb
push
in
cld
lahf
and
rcrl
mov
outsl
repnz
jae
jge
mov
add
in
cltd
or
pop
lret
arpl
aam
lret
mov
add
ret
loop
push
mov
ret
xor
mov
outsl
aad
xchg
std
sti
sbb
adc
sbb
out
jmp
sub
in
sahf
mov
andb
mov
jns
rol
dec
dec
in
scas
or
out
dec
scas
adcb
xchg
sbb
mov
fnstsw
arpl
rclb
fistpl
lods
pushf
in
lods
xchg
cmpsl
lret
mov
popa
test
cli
cli
adc
cmp
js
xchg
sbb
push
sbb
gs
push
xlat
xor
in
scas
mov
arpl
add
sub
dec
jns
jb
into
mov
jo
adc
add
sub
and
insb
and
xchg
dec
and
dec
sbb
inc
in
imul
push
sub
pop
icebp
imul
fdivs
mov
bound
inc
or
dec
dec
sti
fdivs
enter
pop
rcr
push
xchg
nop
mov
ja
aam
arpl
faddl
mov
sub
clc
xchg
fnstenv
pop
xchg
push
test
mov
hlt
xchg
adc
mov
hlt
and
ret
add
sahf
inc
out
enter
movsl
adc
mov
lea
xchg
imul
ss
mov
pop
mov
pop
fs
int
xchg
mov
mov
hlt
shr
test
inc
outsb
ja
lea
ss
sub
sub
out
inc
bound
add
jl
and
mov
or
je
inc
or
jp
fdivrl
mov
mov
jle
inc
icebp
mov
sbb
or
ds
test
in
hlt
cmc
cltd
adc
push
push
jl
enter
xor
fcomps
sub
sbb
mov
rcr
pop
adc
cli
dec
std
daa
dec
inc
push
adc
psllw
inc
adc
jo
and
movsl
add
dec
int3
mov
inc
ja
int
clc
mov
xchg
sub
fsts
mov
and
shlb
pusha
sbb
lods
dec
call
mov
arpl
xchg
into
push
subl
lods
xor
adc
mov
jle
or
or
pop
outsl
enter
xchg
add
fwait
xor
lds
out
and
cmp
mov
ror
dec
sahf
inc
inc
rcll
push
mov
fildl
dec
jp
and
lods
int
test
dec
mov
lods
nop
fcmovnb
mov
fnstenv
cmp
test
out
pop
push
dec
jmp
and
or
fstpt
ds
repnz
jp
lods
adc
shrl
sbb
adc
popa
test
sub
mov
lret
add
dec
mov
xchg
jmp
inc
leave
jne
jl
fsubrl
mov
int3
jae
inc
or
ljmp
xchg
xchg
scas
rcr
cwtl
dec
mov
test
and
or
push
das
xor
hlt
cmp
adc
mov
notl
jp
sbb
pop
repnz
xor
sub
adc
arpl
push
xchg
mov
mov
push
test
ja
ss
or
fucom
xchg
mov
fists
sbb
jp
mov
rcr
push
pop
sbb
mov
or
add
mov
outsb
loope
mov
mov
sbb
ja
dec
outsl
stos
mov
push
mov
mov
xchg
sti
xor
cld
int
sbb
mov
inc
mov
hlt
mov
mov
out
pop
callw
dec
mov
sub
xchg
xor
shr
out
into
add
dec
call
es
int3
stc
or
fs
sahf
sbb
fwait
push
in
pusha
lcall
push
inc
push
es
or
and
jb
fs
dec
icebp
ja
aas
sbb
jno
sub
movsl
and
enter
cmp
fdivrs
pop
cs
xorb
and
jp
and
mov
stos
mov
and
loopne
lcall
sahf
mov
mov
sbb
ret
inc
daa
and
xor
sahf
xchg
nop
inc
adcb
sub
xor
mov
pop
mov
sbb
in
cli
xchg
mov
leave
repz
popa
andb
mov
arpl
iret
mov
sbb
int
mov
repnz
pop
xchg
mov
and
or
cmpsl
and
sub
insb
dec
cwtl
ret
mov
xchg
cmp
shll
ss
repnz
testb
rolb
mov
cmp
inc
into
pop
test
sbb
sbb
bound
add
daa
and
push
cmpsb
repnz
ret
jmp
mov
cmpsl
adc
dec
cltd
cltd
push
xor
insb
and
jl
out
je
addb
xchg
test
mov
fwait
mov
push
cld
loop
pop
xor
add
lret
xchg
jne
ljmp
outsl
and
shll
test
or
push
in
mov
inc
cmp
push
adc
pop
fcmovnb
rcrb
push
cwtl
lods
outsl
stos
adc
mov
adcl
lds
or
mov
jl
imul
jo
ljmp
xchg
inc
loop
jg
adc
dec
fldt
xor
sbb
loope
mov
cwtl
fs
lcall
and
and
jb
imul
add
js
sbb
inc
icebp
inc
sub
cltd
les
adc
or
or
and
xchg
outsb
pop
in
push
jmp
mov
inc
jo
and
adc
cmp
sub
xchg
fnstenv
sub
cmc
and
push
push
outsb
push
mov
xchg
mov
xchg
inc
push
test
roll
add
in
mov
push
clc
sub
cmp
dec
icebp
jl
mov
mov
push
aad
incl
inc
out
rclb
mov
cs
xchg
scas
rcll
xor
inc
shlb
cli
mov
mov
inc
inc
test
inc
mov
iret
jne
xor
imul
test
push
ja
mov
xorb
xchg
lea
mov
add
sub
mov
xchg
pop
adc
xchg
mov
in
jmp
sbb
nop
cmpsb
jnp
in
xchg
out
adc
std
out
mov
aas
push
pop
xchg
stos
lahf
jno
push
mov
xchg
cmp
dec
push
jmp
mov
or
push
insb
adc
jno
push
jg
xor
push
test
aam
pusha
sub
movsl
xchg
mov
ljmp
ljmp
out
xor
sbb
testb
mov
sbb
mov
leave
data16
or
lods
xor
jmp
mov
pop
jb
cmpsb
jns,pn
jb
or
adc
dec
je
sub
mov
jle
sbb
mov
pop
data16
or
sub
or
push
leave
sarb
pop
mov
and
sub
pushf
decl
cmpsb
lahf
jnp
push
pop
rcl
or
ret
push
testb
jl
xor
cmp
jl
daa
lahf
sub
xor
adc
mov
inc
fldenv
bound
stc
call
call
mov
mov
push
movsl
and
sub
cltd
js
pop
xor
movsl
cmc
inc
mov
sarb
dec
adc
mov
sub
cli
sahf
movsb
mov
mov
aam
gs
cmpb
or
pushf
loope
into
or
push
sub
mov
sub
jo
loop
aas
cmp
stc
cmp
add
xor
sbb
fisttps
inc
inc
shl
adc
mov
jae
outsb
mov
in
and
je
enter
mov
movsb
in
ret
or
push
pop
jnp
lcall
fwait
enter
stos
sbb
jp
out
sti
in
cwtl
outsl
push
adc
push
hlt
cwtl
dec
pushf
and
jb
inc
xchg
dec
sbb
or
outsl
insb
jge
xchg
rcrb
xchg
les
cmpsb
mov
xchg
xor
mov
idiv
stc
test
jge
ret
mov
and
call
xchg
cmc
cmc
lahf
subb
inc
cmp
aam
adc
xor
outsb
dec
cld
jmp
pop
data16
adc
inc
adc
mov
jnp
rcr
lock
out
adc
xchg
dec
and
in
mov
adc
cld
jg
pop
fistl
jb
xchg
cmc
jl
xlat
in
icebp
jmp
lret
out
adc
xor
push
jbe
or
repnz
mov
push
pop
jl
mov
jmp
push
lret
in
mov
leave
ret
pop
sahf
dec
shrl
fwait
pushf
xor
cmpsl
sbb
addl
add
mov
pusha
inc
xor
push
call
mov
sbb
es
sub
sub
pop
push
add
cwtl
loop
jp
jl
push
mov
into
stos
push
push
xchg
or
push
pop
jns
int3
sbbl
sub
adc
pop
jg
stc
dec
cltd
inc
mov
push
xlat
jecxz
xchg
xor
icebp
lahf
fstpt
or
movsb
xchg
stos
fs
mov
jno
les
mov
stc
xor
jmp
repz
xchg
cmp
pop
inc
sbb
vpacksswb
cmp
mov
inc
jo
mov
jl
fs
lret
cwtl
shrl
push
jae
fadds
mov
mov
sub
add
mov
add
push
jb
dec
sub
adc
lods
jl
mov
fxtract
int
gs
pop
jb
pop
mov
out
pop
inc
pop
or
cmc
jbe
cmp
inc
mov
mov
push
jmpw
jge
dec
pop
das
popa
in
lcall
mov
in
sub
mov
int
jge
aam
inc
aad
and
ret
lods
sub
movsl
sub
or
test
enter
lods
dec
stos
inc
lcall
xor
out
push
mov
das
enter
iret
cmpsl
xor
mov
mov
jecxz
movl
and
arpl
mov
pop
push
mov
mov
pminub
sub
test
cmc
cltd
fdivrl
int
cli
mov
fucomp
sbb
scas
inc
es
call
and
popl
nop
fsubp
sbb
and
in
dec
xchg
stos
mov
jo
mov
add
cmp
mov
push
enter
pusha
aaa
lock
testb
inc
jbe
outsb
cmpsl
arpl
cwtl
mov
add
scas
movsl
pusha
stos
in
cmpxchg8b
jle
sti
xchg
adc
addr16
shrl
insb
and
leave
jae
mov
jge
pop
cmp
cmp
jle
movsb
jo
adcl
mov
aam
in
fsubl
push
mov
mov
jno
loope
inc
lods
cmp
mov
pop
cmp
dec
jae
clc
ret
pop
and
push
inc
addr16
aam
mov
mov
and
ds
push
xor
lea
movl
xor
jmp
jae
mov
dec
mov
adc
sbb
add
sti
test
mov
jne
sti
xlat
into
cmpsl
inc
xchg
push
orl
pavgb
test
xchg
js
jle
das
pop
xor
xor
inc
cmp
shll
add
inc
fbstp
mov
and
into
sub
ljmp
or
dec
bound
pushf
stos
andb
daa
inc
pop
jle
rolb
pop
sbb
xor
pushw
insb
stos
sti
cmpb
jge
dec
mov
mov
push
mov
mov
call
lods
push
push
jne
cmc
xor
aas
or
cmp
cli
xor
scas
jo
inc
repz
cmpl
push
xchg
lds
arpl
lret
push
jne
sub
lahf
into
stos
cmp
and
scas
or
outsl
pop
loope
loope
std
jo
movsl
sub
adc
mov
test
lret
push
xchg
pop
incl
inc
xchg
xchg
lcall
pop
push
scas
push
lahf
add
scas
add
sbb
inc
jle
add
pop
push
add
in
mov
mov
ss
pop
push
lret
jmp
rcl
push
hlt
pop
xor
stos
add
inc
fwait
dec
mov
adc
sbb
mov
rclb
lret
sub
push
pop
ljmp
sub
mov
xchg
ret
inc
xchg
or
je
jae
shr
cmpsb
mov
out
mov
cltd
rolb
aam
rorl
ret
les
xchg
xor
mov
dec
mov
push
sbbl
gs
mov
push
inc
mov
fists
or
pop
inc
lret
sbb
cmp
xchg
push
push
xchg
mov
mov
sub
push
adc
xor
push
cmc
mov
cmp
pop
in
xor
inc
arpl
inc
out
and
imul
ss
push
jmp
push
fdivs
mov
add
shlb
push
lock
add
xor
pop
xor
nop
in
sub
xor
dec
mov
xchg
push
xor
dec
arpl
inc
sahf
xor
cmp
jb
pop
dec
xor
xchg
mov
dec
hlt
add
sbb
ret
jnp
sbb
and
repz
add
xchg
xor
and
sbb
xchg
ds
pop
ret
insb
lock
inc
jno
sub
mov
lock
xor
mov
test
sti
test
jmp
ja
movsb
out
push
add
sbb
mov
push
out
cmpsb
pop
sub
addr16
stos
adc
mov
in
and
jecxz
and
dec
sti
mov
or
outsb
mov
jo
jl
jmp
cmc
jbe
cmp
aas
lods
fists
icebp
lods
sub
mov
push
jo
inc
push
ficoml
mov
mov
and
add
cld
and
dec
fwait
cmpl
push
push
push
mov
push
push
ljmp
sahf
mov
notl
arpl
inc
pushf
push
mov
jle
cmc
push
and
insl
jbe
ret
test
dec
or
jne
xor
negb
cmp
into
inc
pop
push
ss
repz
add
mov
lahf
xchg
outsb
stos
lods
das
mov
out
cmp
dec
out
orb
lods
and
lods
cmp
vpmadcswd
popa
pop
cmp
jmp
loopne
mov
jbe
mov
xlat
repz
cltd
aad
mov
mov
rorb
rcl
jbe
push
aaa
or
pop
scas
rol
sbb
scas
jge
into
js
xor
jo
fdiv
adc
sub
gs
jle
sbb
or
popa
inc
sub
fsubrs
xchg
adc
cmp
push
gs
add
imul
fisttpl
mov
and
ficomps
inc
lods
cmp
mov
jnp
inc
bound
pusha
js
rol
xchg
cmp
mov
mov
jne
sub
jne
lds
roll
out
xchg
cwtl
mov
sub
sub
pop
xchg
push
bound
and
sti
xor
push
cmp
std
loopne
leave
lds
in
xchg
sbb
iret
pop
or
jno
cmp
aad
loope
inc
ds
mov
fildll
add
es
xor
sbb
repnz
dec
fcoml
pop
add
xor
push
movsl
repz
add
dec
loope
push
dec
cmp
jecxz
ljmp
dec
add
push
out
add
leave
dec
dec
aad
xchg
aas
push
pop
fdivp
clc
xor
aas
in
gs
in
pop
gs
push
ret
lods
add
mov
es
test
movsl
pop
xchg
outsl
das
xor
sahf
mov
mov
cmp
cmp
xchg
jno
fbstp
add
sub
cli
movsb
das
sub
adc
movsl
and
lahf
adc
fstps
addl
int3
push
rcrl
xchg
xor
adc
je
fnsetpm(287
repnz
xchg
scas
xchg
into
xor
jl
adc
pop
xor
ffreep
addb
inc
outsb
sbb
xor
pusha
fdivrs
mov
dec
inc
jns
mov
or
loop
and
inc
inc
or
push
and
sarl
in
mov
mov
push
das
sub
ffree
inc
fbld
mov
shll
loopne
test
sub
and
mov
sbb
mov
fisubrl
nop
xchg
je
cmpsb
dec
xor
fsubr
add
sbb
repnz
inc
and
mov
sub
icebp
pop
in
xchg
stc
ss
hlt
shlb
test
sbb
jmp
inc
jle
jmp
xchg
sbb
add
pop
shrl
test
outsl
repnz
cmp
test
xchg
jb
nop
pushf
test
cmp
dec
aad
xchg
test
mov
repz
inc
loop
int3
xchg
cmp
or
lcall
sub
cs
daa
add
inc
mov
pop
movsb
mov
sbb
pop
fwait
pop
cmp
push
mov
mov
mov
aad
inc
lds
push
or
mov
lock
ror
test
dec
mov
in
movl
loopne
and
mov
adc
out
cmpb
xchg
and
xchg
push
sbb
mov
xor
dec
jae
sbb
jg
pop
jp
xchg
xchg
test
jb
mov
jg,pn
dec
jae
xchg
mov
pavgw
jecxz
dec
mov
sub
sub
test
sbb
je
fwait
lods
addr16
mov
movsb
sahf
xor
cmpsl
mov
in
gs
or
push
mov
hlt
push
or
inc
inc
xchg
loopne
mov
mov
je
ljmp
dec
gs
mov
or
adc
mov
adc
dec
sbb
lods
fs
push
lods
jmp
subl
jge
jb
pop
imul
push
and
dec
daa
adc
or
fstps
js
jp
xchg
in
stc
dec
nop
sbb
aas
fisubrs
in
daa
mov
xchg
les
inc
push
mov
or
dec
lret
ljmp
test
sbb
dec
add
adc
js
daa
bound
adcb
mov
inc
push
bnd
cltd
mov
in
iret
cmp
xor
aad
in
push
jecxz
sub
fwait
arpl
movsb
insb
inc
mov
fnstsw
sbb
sbb
dec
and
test
lret
mov
push
shl
jo
or
mov
stos
inc
mov
cltd
es
in
sub
adc
vphaddubd
test
sub
pop
mov
insl
fstps
insb
adc
stos
sahf
push
fidivs
push
and
rol
cmp
adc
adc
jecxz
pop
lret
fucomp
mov
sub
xchg
dec
ds
xlat
test
fwait
int
sub
add
je
push
fidivs
loope
mov
xchg
adc
sbb
push
mov
aam
xchg
fldcw
test
addr16
out
xor
xchg
enter
mull
mov
fisubs
jno
mov
stos
pop
repz
dec
insb
out
insl
cmp
loopne
bswap
dec
push
mov
jmp
mov
pop
bound
push
out
stos
lods
jns
adc
push
jmp
sub
jbe
into
mov
std
loop
cmp
and
fistps
in
xchg
inc
pop
fbstp
test
data16
cs
roll
fisubl
dec
adc
shl
mov
int
jb
add
jns
pop
mov
cmp
vpslld
idivb
inc
and
pop
and
pop
add
cld
lret
mov
fwait
inc
sbb
xchg
cld
or
fstpl
aaa
mov
and
sbb
insl
shll
add
dec
scas
mov
pop
or
jmp
sub
or
dec
cltd
push
xor
mov
or
stos
xchg
inc
dec
or
das
fdiv
jecxz
fs
jbe
dec
inc
cmp
cmp
jle
fidivrs
sbb
mov
icebp
dec
mov
insl
lods
push
test
cmpsl
pushf
sub
sub
test
test
xor
es
xorb
jbe
push
loope
push
data16
iret
sub
and
insl
daa
inc
mov
movsb
loope
mov
xor
shrl
push
jge
adc
or
push
xchg
cmc
test
lcall
inc
mov
leave
aas
inc
mov
insl
jbe
mulb
sbb
pop
sub
adc
adc
lock
fwait
xchg
push
or
idivl
lds
jmp
or
ljmp
push
repz
les
inc
lea
lods
add
ds
xor
mov
lea
in
cmp
insl
imul
in
repz
xchg
lret
dec
mov
dec
mov
push
push
and
loopne
push
add
sti
mov
mov
mov
jbe
xchg
sub
dec
xchg
imul
inc
mov
ss
jns
aam
dec
and
mov
fcmove
outsl
sub
xor
mulb
ret
cwtl
push
rol
mov
xor
adc
ret
outsb
or
adc
xor
aam
add
fsubl
mov
lock
jns
cli
jnp
mov
xchg
popa
cmp
in
std
mov
pop
ret
cmp
ficoml
adc
xor
or
mov
lock
imul
pusha
gs
push
xor
std
dec
xchg
push
or
mov
ljmp
cltd
inc
rcll
push
add
add
mov
cs
gs
fs
cmp
jp
aad
call
cmpl
fisttps
sbb
inc
add
xchg
out
shll
in
aas
inc
add
test
push
inc
dec
es
inc
or
sbb
adc
inc
test
xchg
xor
std
cmpl
and
cmc
mov
inc
add
sub
aad
pop
dec
xchg
test
sub
mov
mov
add
dec
pop
mov
clc
aad
rorl
xchg
pop
jae
mov
decb
insb
fdivp
add
aaa
scas
mov
sbb
in
cmpl
mov
mov
pusha
adc
or
dec
movsb
push
addr16
movsl
mov
les
ret
push
lods
add
adc
fstl
xor
fdivrs
lcall
int
add
dec
pusha
dec
shll
addr16
repnz
xchg
xchg
jbe
inc
mov
xor
cmpsl
xor
inc
and
sbbb
icebp
add
insl
sub
lret
sahf
mov
jmp
dec
ja
outsl
cmp
jnp
cmpb
daa
adc
ret
mov
enter
adc
mov
orl
mov
xor
test
in
pop
in
lahf
cli
fistpll
adc
out
pop
inc
sti
in
fs
les
inc
jp
sti
xor
push
and
xchg
testl
mulb
xor
sub
push
pusha
movsb
mov
and
mov
mov
sub
hlt
das
sbb
dec
std
out
imul
xor
add
lcall
jns
pop
mov
inc
repnz
lods
test
jno
aam
xor
test
lret
dec
je
push
stos
xchg
mov
pop
and
scas
cwtl
mov
sbbl
dec
jge
add
dec
bound
cltd
xchg
sti
pop
movsl
xchg
sub
mov
movsl
in
push
mov
mov
pop
push
int3
mov
mov
nop
push
cmp
sub
pop
int3
push
fidivl
movsb
push
mov
lahf
pop
and
jl
stc
jmp
lret
or
sbb
sub
cli
cltd
push
mov
jle
cmp
and
in
mov
jb
cmp
scas
cmpsl
jmp
sub
mov
dec
pop
mov
xchg
and
cmp
mov
iret
fwait
movb
inc
jno
dec
push
jbe
add
imul
fidivrl
idivb
fnsave
lea
das
addr16
xchg
mov
xor
inc
adc
xchg
mov
test
cwtl
inc
test
pop
cmp
inc
inc
pop
mov
mov
cmp
sti
ljmp
mov
js
sub
fs
xor
imul
pop
nop
dec
lahf
sub
fucomi
mov
sub
fidivs
sub
lret
jo
adc
pop
movb
aaa
ljmp
cmc
pusha
xchg
adc
test
inc
icebp
sub
adc
sti
sbb
add
push
outsl
clc
jno
cmp
jl
insl
xor
enter
mov
int3
push
xchg
sbb
inc
dec
sti
test
loopne
push
popa
std
add
inc
int3
push
insb
or
mov
loop
movsb
cs
pop
dec
sub
sbb
xor
jo
in
sbb
lsl
sbb
adc
jecxz
or
cmp
dec
sub
adc
outsl
mov
mov
jno
outsb
aas
jnp
inc
fdecstp
or
and
add
adc
inc
push
adc
sub
cs
xor
jae
out
cmp
push
pop
pop
or
jno,pt
arpl
mov
std
inc
gs
movb
jb
inc
data16
add
push
je
or
jp
loope
iret
xor
xor
shlb
jns
mov
push
xchg
test
or
stos
hlt
or
pop
xchg
jns
add
or
sub
ffreep
sbb
cli
pop
sub
mov
loopne
in
fcmovne
in
push
sub
push
add
daa
je
lahf
inc
lea
repz
mov
shll
jns
jbe
mov
insl
fwait
pushf
push
in
mov
cmpsb
dec
cmp
out
scas
jge
push
cmp
adc
dec
push
jl
jnp
out
shlb
and
push
dec
ljmp
icebp
push
inc
popf
cmp
loope
pushf
imul
jecxz
cmpl
test
outsl
into
xchg
in
addr16
stc
mov
push
pop
ja
push
fistps
daa
in
shll
mov
xchg
xchg
lcall
scas
adc
pop
dec
aad
dec
and
and
out
repz
out
pop
push
lret
pop
jo
or
mov
jp
cmpsb
push
aaa
aam
mov
xor
ljmp
fbld
push
testl
in
hlt
into
daa
xchg
cmpl
jno
mov
idivb
adc
aam
push
sarb
push
jmp
mov
fwait
roll
in
add
add
pop
lcall
sbb
jmp
xor
jo
adc
sbb
jno
popa
xor
sub
dec
sub
inc
mov
mov
shll
jns
mov
lret
or
fldcw
pop
pushw
jbe
ds
fiaddl
jg
adc
mov
mov
xchg
stos
adc
mov
in
mov
int
fisubl
or
int
cmpsb
or
mov
movsl
iret
cmpsl
test
dec
mov
cld
adc
mov
les
mov
imul
sub
xchg
adc
cwtl
cltd
or
imul
sahf
dec
adc
aas
imul
sub
iret
repz
mov
outsl
push
call
push
push
out
cmp
mov
idivl
jle
ret
rolb
mov
xor
adc
cltd
and
mov
xchg
or
xchg
lods
mov
push
in
es
xchg
cwtl
adc
pushf
hlt
repnz
push
lods
jb
jns
movsb
xchg
jecxz
lcall
notb
cli
adc
push
jecxz
ret
mov
sbb
repnz
pop
push
imul
xor
push
es
fwait
bswap
or
fs
push
inc
cmpsb
or
cltd
xor
lcall
lcall
push
or
xchg
sbb
sub
loopne
and
sub
and
push
out
mov
lcall
cmc
test
shl
cmp
ds
mov
xor
sub
xor
pop
repnz
mov
imul
xchg
pop
dec
pop
outsb
pop
xchg
aad
xchg
data16
es
sarb
and
sbb
cmpsb
push
inc
test
aaa
or
push
mov
dec
sbb
and
push
sbb
sub
outsb
xor
push
je
xchg
rol
ja
jl
es
jle
pop
sbb
sub
xchg
cli
add
leave
das
cmpsb
and
movsb
mov
fsts
enter
mov
inc
cld
pop
out
lea
cmc
or
stos
xor
fisttpl
add
das
mov
and
mov
pop
int3
lahf
cmp
sub
bound
sahf
xchg
or
push
or
dec
pusha
bnd
mov
repz
movsl
mov
js
inc
insb
push
rolb
out
xor
dec
movsl
sbb
inc
outsb
sub
test
out
jno
jle
pop
cmc
lea
les
mov
xchg
stos
xlat
out
adc
xor
jo
movsb
imul
in
dec
clc
mulb
sub
fsubs
out
cld
push
popf
aaa
add
stos
xchg
lret
cmp
and
dec
ja
das
cmpsb
cmp
fildl
sbb
lea
cmpl
inc
and
mov
push
push
out
dec
sbb
add
shll
mov
test
and
repnz
shrl
sbbb
inc
stos
jl
mov
out
and
jmp
mov
xorl
jecxz
cmp
or
std
test
mov
arpl
mov
dec
in
and
pop
adc
mov
pop
jnp
fisubrs
out
sti
dec
inc
mov
pop
mov
in
filds
mov
xchg
rcrb
int3
or
jle
mov
int3
out
inc
inc
cmc
mov
jp
out
sub
xor
je
loop
addr16
cmc
pop
out
movsb
and
pop
push
sbb
xor
imul
xlat
repnz
mov
popa
inc
leave
sub
aas
or
mov
push
test
xorl
mov
jns
push
mov
dec
add
mov
stc
rol
jnp
push
mov
outsl
in
mov
std
xlat
movsl
inc
rorl
cmpsb
cmp
cmpsb
clc
aad
push
push
and
xchg
int3
fs
gs
clc
jbe
cltd
test
pop
hlt
decb
popf
aam
sbb
xor
mov
mov
bound
xorb
push
mov
adc
sub
inc
jp
stos
aam
ja
addr16
test
test
ret
xchg
test
xchg
mov
xchg
daa
jns
push
jecxz
inc
lret
and
push
cli
jae
sub
shr
hlt
and
inc
mov
lods
dec
lods
cltd
sbb
push
sbb
sbb
sbbb
arpl
jg
and
xor
je
fdivs
subb
pop
repnz
pop
ljmp
cmc
sub
mov
dec
pop
icebp
shr
int3
sub
lcall
loopne
xchg
ss
test
or
nop
lret
imul
lcall
out
adc
cmp
xor
nop
in
loope
xchg
mov
hlt
sbb
jmp
popf
daa
lahf
pushf
rorb
mov
sbb
inc
cmp
sarb
lret
out
sub
mov
test
jne
leave
xchg
clc
jns
shll
arpl
xchg
cmp
jge
mov
iret
push
xchg
aad
cmc
data16
imul
push
enter
push
lds
test
inc
lahf
jns
fisubrs
push
repnz
adc
sub
rcrl
and
out
cwtl
mov
xchg
adc
add
push
ficompl
sbb
dec
bound
adc
mov
lcall
adc
cmpsb
fidivs
subl
sbb
sbb
insl
xchg
jp
jge
mov
sti
jp
dec
cmpsl
jb
cmp
jg
pop
cmp
sub
mov
cmc
insb
and
jae
insb
mov
mov
cmp
xorb
push
inc
mov
jge
les
ss
in
je
shufps
dec
push
sbb
mov
xchg
mov
fst
mov
add
das
out
dec
fildll
xor
dec
repz
and
cmp
mov
imul
fwait
add
incb
scas
cmpsl
cmp
add
cmp
stos
mov
std
jl
out
lea
adc
es
clc
push
xchg
inc
loopne
mov
lret
mov
mov
pop
xchg
dec
push
jo
jecxz
lock
js
ss
gs
cmp
xchg
lret
inc
push
jle
add
inc
adc
and
mov
lcall
sarb
push
push
pop
fbld
mov
rclb
out
adc
imul
and
sbbb
mov
sbb
shl
lret
pop
test
cmpsb
inc
jb
dec
fistpl
cwtl
push
call
add
jb
mov
dec
push
mov
mov
or
movsl
xchg
repnz
aam
sbb
jl
insb
add
outsl
cltd
push
xchg
lret
pop
add
ret
ja
fcoml
int3
ds
add
add
pop
loopne
cmpl
mov
mov
dec
stc
push
fistps
sub
std
idivb
pushf
inc
sbb
es
push
call
fnstsw
subl
je
jae
mov
and
data16
mov
xchg
lret
jge
lret
sub
shll
push
out
mov
out
call
fcomps
cwtl
rcrb
inc
xor
mov
rcrl
mov
jo
xchg
xchg
cmp
mov
ret
sub
out
pop
push
out
sbb
orl
popa
clc
sub
into
addr16
sbb
das
les
das
sub
leave
dec
repnz
loopne
icebp
or
inc
push
outsb
scas
fucomip
xor
mov
sub
dec
or
sbb
outsl
add
fstps
bound
dec
dec
cmp
cltd
mov
push
xor
fsts
add
sub
testb
push
outsb
addr16
movsl
sub
dec
in
loop
sub
jle
pushf
pusha
sbb
xchg
and
pop
add
push
repnz
int3
dec
inc
jb
dec
movlps
aam
pop
jge
lods
lret
arpl
ficoms
jbe
mov
aam
lods
std
mov
fldcw
sbb
mov
shl
mov
scas
aaa
rcrb
cmp
lret
mov
inc
sbb
mov
jg
add
adc
call
loopne
rolb
mov
inc
andb
cmp
and
jle
push
xor
adc
mov
inc
adc
sbbl
cmpsb
and
shl
pop
cmpsb
cmp
xchg
pop
nop
lcall
sub
outsb
jg
or
xor
stos
or
jbe
ljmp
stos
cmp
xchg
mov
mov
je
pop
sub
add
in
pop
outsl
adc
cmpsb
mov
push
xlat
mov
mov
movsl
cmpsb
imul
lret
js
ret
in
fisubs
xchg
inc
in
pop
repz
push
cli
sub
cli
inc
flds
and
std
out
mov
push
mov
jo
sub
iret
jb
icebp
jp
xchg
mov
out
pusha
push
outsb
adc
mov
lret
insl
ljmp
xchg
nop/reserved
adc
cmpsb
and
int
or
mov
pusha
pop
testb
aaa
cmpsl
xor
popf
push
inc
sbb
add
in
clc
push
pop
es
movsb
inc
mov
push
std
test
ljmp
xor
lahf
arpl
dec
adc
bound
subb
test
sti
out
test
mov
pop
insl
jle
push
lods
popf
repz
sbb
mov
imul
daa
addr16
insb
sbb
fisttpll
and
lock
jns
xchg
ljmp
into
test
jmp
pop
arpl
rorl
stc
cmp
mov
shl
mov
fucomip
mov
mov
or
and
mov
rorl
jle
hlt
loopne
fwait
aas
mov
jno
imul
rcrl
imul
popa
mov
clc
sbb
mov
mov
push
adc
sub
pop
jnp
in
jns
push
push
xchg
mov
pop
xchg
or
ss
subb
in
dec
pop
mov
insl
in
lret
ljmp
int3
mov
fsts
leave
or
xor
push
mov
lea
mov
movsb
hlt
sbb
push
mov
mov
fisubrs
and
inc
aas
popf
cmpsl
sub
cmp
fwait
or
imul
orb
lock
xor
dec
imulb
cmpsb
jns
xchg
xchg
sahf
mov
xchg
push
dec
in
xor
fcmovb
int
ljmp
pushf
shll
orl
sbb
dec
push
jnp
xor
mov
sub
sarl
dec
push
push
adc
push
outsl
rcl
sahf
jl
mov
imul
adc
lods
push
je
pop
sub
scas
insl
es
cltd
pop
and
mov
push
imul
gs
dec
inc
es
pop
mov
dec
sahf
xorb
sub
icebp
xchg
mov
pop
mov
jns
popf
orb
cmp
dec
xor
pop
and
insl
aam
or
or
fistpll
adc
jp
jae
mov
nop
popa
inc
jecxz
jge
jle
insb
xor
popa
mov
shll
lods
ret
loope
and
mov
enter
das
fldenv
add
mov
std
lods
inc
aam
dec
pop
xor
fwait
pusha
xor
or
gs
xor
push
ja
push
inc
sbb
xor
xchg
xor
cs
push
lcall
stos
mov
shrb
add
inc
cmp
cmc
mov
ficompl
ss
jmp
push
stos
rorl
cmp
sbb
leave
addr16
out
fwait
cmp
lods
mov
test
push
nop
leave
mov
ror
aaa
pop
lods
or
push
xchg
and
mov
or
cmp
jmp
sbb
dec
loope
cltd
imul
mov
sub
cmp
out
out
dec
in
add
add
xor
jbe
call
adc
test
xchg
cmp
dec
push
imul
add
imul
pop
lcall
jle
mov
mulb
sub
mov
dec
mov
pop
add
repnz
lds
push
pusha
jl
js
sub
cmp
mov
and
xor
lds
inc
cmpsl
into
cmpsl
bound
sbb
or
loope
cld
out
sbb
push
jbe
add
cmp
push
mov
stos
pop
push
add
jl
jecxz
or
cltd
pushf
and
dec
mov
mov
mov
pop
mulb
xor
jle
jmp
fbstp
xchg
cmpsb
in
test
pop
dec
jne
sahf
sti
dec
push
ret
aam
push
iret
subb
sub
push
nop
cmc
dec
mov
push
xchg
mov
or
bound
mov
add
sub
mov
daa
mov
push
cld
ret
fimuls
aaa
and
jg
mov
cli
ficompl
movsl
xchg
and
pop
inc
aam
cmc
popf
push
or
mov
mov
jns
adc
push
dec
cmp
and
inc
mov
or
cs
js
sarl
and
sub
repz
cmp
sbb
out
add
and
push
mov
xchg
jne
arpl
push
cmpsl
jns
mov
int3
add
into
or
xchg
shll
push
dec
and
int3
fs
stos
xlat
bound
inc
aam
add
stos
arpl
in
mov
lods
or
mov
inc
fwait
add
sbb
sub
jnp
bound
mov
jno
pop
scas
inc
lcall
dec
mov
outsb
lahf
pushf
push
adc
add
jmp
push
sarl
sbb
mov
out
mov
das
lods
jge
cs
movsl
mov
ret
movsl
xchg
fisubrs
sbb
aas
ss
add
add
jle
sbb
adc
mov
rclb
sub
xchg
enter
cmp
inc
push
aaa
ud2
subl
inc
mov
lret
loop
sti
push
lahf
ja
sahf
fld
lcall
mov
fs
aas
cltd
jno
in
or
fsubr
jge
xchg
cmpsb
loope
cli
xchg
leave
sbb
mov
pop
jns
loopne
pop
aad
jge
sub
negl
pop
push
outsl
xchg
cmp
popa
shlb
mov
xlat
sub
mov
push
adc
arpl
mov
jbe
test
ss
out
mov
push
pop
xor
or
out
jae
sub
sub
sbb
inc
mov
loope
xorb
cltd
ja
mov
lret
dec
mov
cmp
adc
sahf
sub
in
xchg
sbb
fs
xor
add
xchg
in
push
addr16
jnp
and
push
js
jbe
xchg
aas
mov
mov
cmp
subb
pusha
inc
movb
mov
mov
out
mov
sub
ret
stc
cmp
mov
mov
adc
sub
inc
movb
or
or
sahf
fcoml
nop
pop
dec
mov
insl
inc
enter
jae
notb
frstor
fldl
push
xchg
mov
lahf
lahf
dec
sarb
adc
cmp
dec
out
add
int3
mov
or
jge
jb
or
js
addr16
mov
pop
sahf
jle
mov
sti
push
pop
or
mov
dec
imul
popf
mov
out
sbb
push
fistl
lret
xchg
mov
pusha
imul
cmp
pop
addb
adc
mov
xor
test
movsl
int3
dec
add
and
aam
in
cmp
adc
ret
out
adc
js
add
fsubl
sub
cwtl
popa
xchg
imul
sbb
aad
lahf
jecxz
daa
or
sub
hlt
ja
aas
repz
rcll
sub
inc
push
stos
das
mov
fldcw
push
jb
inc
roll
and
fs
adc
cs
mov
insl
out
inc
push
adc
mov
inc
test
inc
je
iret
xchg
sub
dec
pop
xlat
in
push
icebp
mov
hlt
mov
je
icebp
and
out
push
xchg
cltd
xchg
xchg
mov
shrl
inc
mov
xchg
dec
sub
cmp
sub
push
out
sbb
push
adc
repz
js
sub
inc
icebp
lahf
cmp
in
adc
inc
mov
inc
mov
dec
mov
sbb
xchg
fsubs
jg
js
addr16
test
cli
das
gs
push
stos
int3
dec
popl
xchg
addb
jecxz
shlb
imul
mov
lds
ds
fbld
stc
xor
cltd
push
call
enter
shrl
pop
inc
mov
add
pop
dec
mov
sub
hlt
xchg
sbb
and
in
es
movsb
cmp
push
add
pushf
xor
ja
imul
negb
pop
ror
fimuls
ds
sti
mov
jno
loop
xchg
pop
andb
imul
cmc
fisttps
fs
insl
shlb
in
xchg
jp
push
pusha
and
cli
or
sbb
aas
aaa
in
fldcw
or
pop
or
mov
sti
xchg
or
leave
es
sub
and
push
pop
iret
or
out
sbb
not
aam
push
add
js
sub
pop
jbe
data16
popa
lods
jno
arpl
xchg
push
insb
icebp
lret
sub
sbb
sarb
xchg
mov
cmpb
ret
mov
push
and
push
mov
cmpsb
mov
jb
inc
in
adc
daa
and
loope,pt
pop
mov
inc
adc
push
mov
bound
std
lods
in
cmp
ljmp
push
test
mov
jne
int3
testl
sbb
arpl
and
test
pop
clc
jp
jge
in
mov
adc
cltd
xlat
adc
mov
or
ljmp
aam
push
pop
adcl
push
adc
mov
lret
les
popf
outsb
dec
ret
cltd
mov
jno
cld
add
xchg
mov
adc
scas
sub
sbb
push
dec
in
mov
ret
and
mov
je
mov
xor
je
or
xor
jg
push
roll
jbe
pop
mov
xchg
xchg
xchg
pop
lock
out
pop
icebp
jns
gs
sub
jne
and
clc
loope
sbb
adc
es
dec
cmc
or
jecxz
xchg
mov
faddl
pop
sahf
repnz
subb
jo
insb
xor
xchg
inc
pop
loop
cwtl
cmp
aas
fdivrl
out
xor
adc
in
cmp
add
lock
xor
sarl
cmp
fwait
xchg
jb
sbbl
mov
aaa
int
stos
or
pushf
enter
pop
pop
xlat
mov
adc
repnz
and
inc
ficomps
fsubrs
enter
fwait
add
adc
mov
aad
cmp
add
xor
rorb
add
out
cltd
out
outsb
movsl
fldenv
pop
movsb
cmp
les
add
or
pop
ret
std
jl
sbb
std
iret
mov
push
aas
cld
nop
jbe
mov
icebp
je
xchg
inc
repnz
xor
xchg
cld
inc
or
in
lahf
ja
xor
sti
sbb
adc
mov
leave
cld
xchg
sar
ss
aad
bound
js
shrl
stc
cltd
std
cmp
sahf
inc
loop
outsl
ja
pop
add
and
sbb
xchg
movl
ret
xchg
or
rol
inc
dec
dec
in
scas
leave
cmpsb
push
imull
imul
jo
sub
popa
loop
xor
xchg
leave
jle
jg
scas
outsb
rol
loope
and
mov
and
cmpl
push
add
jne
pop
and
mov
adc
adc
mov
in
xchg
cmpsb
clc
mov
cli
cs
mov
xchg
das
jae
mov
pop
fdivrs
das
in
loopne
sub
stos
xor
outsb
sub
dec
in
les
xorl
iret
mov
inc
loop
mov
inc
dec
dec
out
sub
xchg
push
cld
mov
in
jmp
sbb
push
xchg
jp
xchg
cltd
rorb
mov
dec
sub
loopne
call
add
pusha
cmpsb
insl
push
in
xchg
mov
mov
enter
fcompl
sbb
dec
push
fisttpll
push
mov
or
insb
sbb
jge
sub
int3
cmp
scas
pop
stos
cmpsb
mov
push
push
mov
push
jns
hlt
ds
xor
filds
push
dec
or
push
pusha
and
pop
push
std
dec
mov
add
insb
imul
std
cmp
inc
out
into
fprem1
jo
add
gs
orl
xor
ret
sbb
lock
xchg
jmp
inc
in
add
leave
in
mov
pop
out
adc
lcall
mov
adc
xor
cmp
fldt
test
test
inc
or
lahf
into
pop
sbb
test
mov
jecxz
cmpsb
and
sbb
inc
ja
test
pop
push
fisttpl
push
outsl
inc
js
in
mov
je
lds
fdiv
push
adc
ja
sbb
push
ficoml
fildl
push
cmp
lock
clc
loop
gs
out
mov
dec
cmc
mov
mov
repnz
cli
dec
imul
dec
jg
in
sbb
inc
leave
dec
xchg
xor
fwait
pop
lock
sbb
scas
mov
call
lret
into
mov
pop
jns
outsb
sub
add
push
inc
and
lods
mov
and
andb
mov
enter
shll
or
push
mov
cmp
cmp
mov
stos
lods
call
test
imul
lea
aam
shl
push
andb
arpl
pop
dec
loope
xor
xchg
jne
aaa
push
mov
cwtl
sti
sub
inc
stos
jl
cmp
test
sub
adc
scas
mov
rcrb
adc
xchg
andl
stos
sub
stos
scas
fiaddl
pop
mov
cmpsb
or
jmp
mov
push
mov
and
cmp
or
popa
roll
inc
xor
sub
and
lods
aas
push
mov
push
sub
faddl
jno
dec
cmpl
jb
xchg
mov
adcb
cli
fidivs
inc
imul
mov
cmpsb
jns
aaa
jge
loop
mov
test
into
inc
jmp
stos
std
insl
mov
fsts
cmp
lds
fists
rcpps
lcall
sub
or
jno
fsubrp
push
sbb
hlt
sahf
add
fbstp
daa
in
cmp
xchg
sarl
pop
jp
testb
shl
dec
inc
mov
stos
clc
rcll
gs
sahf
jp
or
out
jmp
sarb
clc
fisubrl
push
add
adc
das
aam
push
dec
push
cmpsl
outsb
mov
jae
clc
pop
cs
stos
and
cwtl
dec
test
jle
gs
outsb
or
sub
adc
fcom
and
cmp
lret
mov
push
shl
sbb
push
je
aas
hlt
pop
xchg
mov
pushf
mov
out
sbb
or
stos
mov
lds
aad
data16
cmp
stc
cli
iret
out
jae
mov
mov
cltd
xor
mov
nop
lds
repz
jae
cltd
sar
test
ss
mov
jb
mov
adc
stc
insb
fs
test
fsub
or
push
insl
xor
jecxz
into
mull
pop
xor
xchg
inc
ja
popa
repz
outsb
inc
loop
fs
maskmovq
testl
add
xchg
xchg
imul
pop
stos
inc
scas
lret
je
fs
mov
inc
pusha
sbb
sbbl
push
addl
les
addr16
movsb
mov
push
lcall
inc
sbb
ret
push
dec
lods
int
push
mov
mov
cmp
stc
icebp
lahf
dec
xlat
sbb
adcb
xchg
cmpsb
jnp
sti
sub
fisubs
adc
xchg
orb
es
dec
mov
shl
ljmp
sbb
pop
cmc
or
test
and
cmc
or
and
rol
test
push
jbe
and
int
mov
jmp
insl
pop
sbb
call
dec
pop
dec
pop
and
imul
jle
in
icebp
or
cwtl
lahf
int
pop
or
xor
inc
pop
cmp
or
insb
xlat
movsb
out
inc
lea
lahf
xchg
or
jmp
pop
faddl
add
dec
jp
out
xor
out
in
popf
sti
sub
pop
xchg
cmp
repnz
xor
int
ret
loop
jle
push
lods
mov
shrb
adc
add
sub
fcompl
add
adc
fstl
xor
inc
addr16
rorl
mov
add
pushl
dec
mov
mov
adc
gs
in
sub
xor
inc
and
push
ficoms
imul
mov
aas
sbb
pop
test
xor
testl
cmp
xor
jne
imul
in
inc
pop
inc
flds
testl
jb
popa
jno
mov
roll
cmpsb
out
sbb
dec
pop
scas
pop
out
sbb
mov
add
std
test
scas
lock
add
outsb
sti
pop
mov
xchg
sbb
mov
rcl
testl
dec
rclb
inc
outsl
adc
adc
push
sub
test
mov
arpl
push
shld
or
mov
mov
subb
dec
imulb
dec
sbb
mov
mov
add
ljmp
mov
cmp
xor
loope
ret
jnp
xchg
sub
sub
out
mov
cmpsb
jl
add
outsb
xor
movsl
hlt
fidivrs
sbbl
pop
aam
ja
xor
mov
aam
push
lods
in
repnz
aad
negl
add
xor
subl
in
scas
sbb
mov
imul
jecxz
lcall
push
cli
xor
mov
dec
mov
iret
rcrl
mov
sub
push
stc
sub
mov
and
cmpb
enter
or
xchg
popa
sub
pop
cmc
test
popa
cltd
jae
mov
adcb
popa
or
js
cltd
sti
mov
jl
sbb
iret
insb
or
cltd
jmp
xor
sub
fisttpll
inc
or
lock
shlb
pop
mov
testl
dec
sub
sbb
dec
or
popa
dec
xchg
outsl
mov
or
data16
jg
jp
fsubs
ror
dec
push
pop
jg
sbb
jbe
xchg
add
roll
int
int
aas
subb
test
icebp
adc
adcl
sub
adc
xchg
sbb
das
insl
cwtl
sbb
int3
fld1
or
add
lret
cli
clc
push
jne
xchg
data16
stos
xor
lods
dec
adc
mov
or
pop
das
shr
dec
xorb
dec
shrl
daa
xor
test
stos
out
sub
sbb
sub
cld
xchg
xchg
cmp
push
out
mov
lret
xor
xor
xchg
icebp
mov
lods
pushf
sbb
sahf
pop
adc
dec
jg
inc
inc
mov
pop
leave
adc
lret
lahf
mov
jbe
mov
test
pop
in
jl
xchg
add
mulb
pop
xor
std
pop
bound
xchg
negb
xor
aad
mov
xor
mov
lods
stc
je
out
std
dec
into
inc
rcrb
or
jmp
mov
scas
sub
adc
mov
sbb
mov
std
lods
loop
xor
out
mov
sbb
xor
cld
ja
sbb
lock
jge
sahf
inc
pop
pop
jg
iret
or
cltd
js
lret
or
adc
add
mov
jg
iret
out
in
push
cltd
adc
jl
repz
sub
test
add
loop
adc
mov
xchg
repnz
ret
movb
sti
sub
mov
lock
jge
popf
push
xchg
scas
adc
xor
fs
mov
dec
mov
fidivrl
nop
out
pop
sub
repz
mov
fdiv
sarb
jmp
xor
repz
xlat
adc
xchg
insl
lahf
sbb
lret
les
fstps
es
inc
mov
push
add
jg
es
lods
les
aaa
das
cmp
cmpsl
sub
push
cs
jl
movsb
ret
adc
mov
out
fsubs
divb
xchg
push
arpl
or
out
push
or
cmp
adc
xchg
lods
test
xor
mov
xlat
and
mov
out
add
test
add
lcall
mov
and
push
pop
sub
flds
adc
mov
pop
jnp
imul
lcall
mov
in
adc
jge
mov
fadds
dec
fcoml
test
cmp
movsb
sbb
lds
push
pop
dec
dec
in
dec
iret
pushf
lds
aas
sub
lods
roll
sub
adc
jb
dec
fadds
xor
xchg
push
popf
rorb
mov
ja
shrl
xor
in
mov
mov
inc
ss
mov
xor
mov
and
dec
jge
movsl
mov
adc
out
push
mov
lock
in
mov
push
dec
adc
stos
pop
jmp
popf
lds
scas
imul
out
jecxz
cli
test
cld
popf
repz
and
inc
lcall
pop
sbb
mov
cmp
jne
and
insb
fisttps
pop
adc
sub
xchg
aam
and
mov
adc
adc
jge
dec
add
inc
and
xor
repz
out
mov
mov
loop
rorb
hlt
loope
jmp
sbb
icebp
mov
sub
and
jb
or
aad
add
xchg
fadds
ret
shlb
mov
ds
push
mov
aad
push
adc
jbe
mov
arpl
das
sbb
out
fcompl
add
aad
add
xchg
arpl
test
out
inc
mov
jb
jle
fs
idivb
insl
push
adc
push
or
and
or
add
xchg
nop
lds
adc
xor
mov
add
jae
mov
jmp
scas
mov
std
push
or
int3
sbb
daa
jno
imul
cmpsl
mov
lea
mov
out
cmc
ds
ficoms
pop
xchg
out
xor
test
pop
cmp
mov
pop
dec
cmp
lret
inc
test
fs
loope
nop
xor
xorl
mov
mov
pop
test
lea
lret
leave
xchg
dec
cmp
lds
jge
enter
dec
xchg
fadds
daa
sbb
test
and
fs
or
shl
pop
push
dec
scas
jb
test
stos
cmp
adc
jecxz
cwtl
roll
pop
sbb
dec
gs
in
dec
fistpll
sahf
repnz
lods
int
and
sub
xor
pop
xchg
or
dec
add
je
push
dec
test
jo
in
ja
xor
jns
lahf
std
in
outsb
inc
in
fstpl
out
in
icebp
loope
adc
cmp
mov
xor
jo
sub
mov
and
fsubl
shll
lods
xchg
push
lahf
lcall
push
mov
or
lret
sbb
xchg
dec
shll
ja
xchg
adc
mov
repnz
push
sub
jb
push
sub
mov
jmp
cwtl
sub
xchg
ret
rcr
fldenv
hlt
add
aad
jp
stos
pop
fdivr
lods
ljmp
xor
sti
adc
js
ds
add
sbb
push
pop
rcll
popa
in
xchg
and
inc
es
leave
iret
sub
incl
lock
jbe
jno
lods
add
outsb
adc
cmp
decb
fmul
aad
dec
fdivrl
idivl
enter
daa
stos
out
push
jae
out
xor
mov
mov
inc
lcall
push
push
mov
andl
xchg
adc
repz
les
inc
nop
cmp
xor
inc
fidivs
insl
inc
std
in
enter
dec
gs
inc
dec
lds
or
sbb
notb
loope
stos
dec
mov
lret
pop
xchg
push
add
push
xor
pop
dec
enter
mov
mov
sub
lcall
inc
int3
shll
inc
popa
fwait
aaa
pop
mov
pusha
push
or
adc
inc
aad
mov
and
pop
adc
cli
or
xor
xor
daa
imul
in
and
adcl
incl
data16
pop
in
stos
adc
xlat
outsb
pusha
mov
fmul
or
ljmp
int3
push
sub
pop
push
ret
push
inc
and
es
dec
scas
jbe
outsl
movsl
outsl
inc
push
and
lea
iret
in
add
lods
push
iret
lret
shlb
mov
outsl
xor
mov
sbb
popa
out
popf
xchg
repnz
pop
push
lods
in
xchg
in
ret
int
or
sti
iret
lcall
and
sub
subl
lcall
jne
sbb
or
enter
cmp
clc
xchg
cmpsl
or
movsb
xchg
pop
shl
test
rcrb
or
push
inc
lock
xor
and
loopne
aad
or
pushf
push
shr
popf
lcall
cmp
xchg
in
xchg
jbe,pt
mov
mov
jl
jmp
insb
push
lahf
xchg
mov
push
out
mov
fdiv
inc
insl
divb
push
ret
repz
daa
inc
sub
lahf
cld
lods
sub
daa
adcb
xchg
push
xchg
lret
pop
dec
sub
mov
cmpsb
dec
or
insl
mov
cmc
cwtl
outsb
in
addl
jno
mov
xor
cmp
test
cltd
stos
mov
testb
and
mov
or
mov
out
mov
pop
hlt
leave
daa
jle
out
insl
and
xchg
adc
jnp
push
or
call
jle
push
xor
cmp
mov
xchg
std
xor
and
cmp
sub
inc
add
or
lds
adc
scas
jmp
ret
call
ret
test
pop
mov
cmp
xchg
pop
pushf
pop
cmp
push
cmpsl
test
jge
adc
inc
cld
sub
jno
and
add
xchg
sti
dec
xor
jb
xchg
clc
out
in
and
scas
gs
dec
call
push
insb
mov
pop
mov
in
daa
nop
test
sub
cmp
mov
add
add
leave
lret
jp
xchg
int
mov
int
sub
cmp
call
xor
pop
or
ja
das
jbe
mov
jo
inc
shr
orl
loop
push
sub
adc
add
test
stos
mov
pop
popf
pop
fiadds
sbb
mov
sbbl
xchg
test
enter
int3
inc
mov
fsubrp
cs
and
repnz
movsb
jne
pusha
mov
push
xchg
mov
jb
dec
in
and
out
fidivs
loopne
dec
push
cmp
into
jbe
aaa
addr16
and
cld
out
pop
sub
fs
loopne
cmc
stos
negb
jp
add
xchg
std
push
pop
mov
jecxz
jl
jp
cmp
xor
pop
mov
xchg
adc
out
add
sub
test
imul
xor
fisubrl
dec
and
push
mov
mov
mov
dec
mov
ljmp
or
dec
xor
daa
adc
enter
and
in
pop
jne
cmp
jle
fnstsw
pop
and
pop
call
sub
adcl
dec
aad
in
pop
kmovb
andb
out
mov
popa
ret
clc
fnstenv
dec
xor
pusha
mov
cmc
push
mov
inc
xor
mov
testb
lret
add
bound
jno
outsb
mov
aas
jg
enter
orb
xchg
mov
pop
or
jmp
xor
movsl
push
into
sbbl
fdivl
mov
adc
mov
push
scas
sbb
push
sahf
popf
ret
mov
pop
sub
pop
sub
lea
popf
ret
fnstsw
jp
jmp
lea
out
pop
outsl
sarl
lock
dec
push
adc
sbb
xchg
cli
cmpsb
mov
into
push
iret
dec
mov
xchg
xor
inc
fimull
jg
pop
popf
loope
xor
sbb
ret
in
sub
pop
ja
lahf
scas
and
push
divb
dec
lods
push
push
push
dec
das
pop
push
push
iret
xchg
popa
rolb
pop
daa
ss
cltd
popf
push
mov
mov
icebp
cmp
movsl
lret
adc
fwait
sub
stos
xor
ret
jae
pop
mov
shr
pushf
mov
ret
and
roll
pop
movsl
sbb
lcall
jecxz
fwait
sbb
lcall
iret
jno
sub
stos
stc
sub
push
adc
mov
imul
sub
clc
xlat
or
test
idiv
cmpl
sub
push
adc
inc
ljmp
insb
sub
inc
mov
rclb
icebp
pop
or
cltd
jge
notl
push
mov
sbb
and
aaa
cld
jecxz
inc
pushf
rcrb
loope
icebp
or
idivl
sbb
enter
mov
aas
jbe
fiaddl
and
lods
xchg
movsl
sub
cmp
pop
mov
dec
fisubs
mov
push
rol
cld
pop
add
clc
pop
ret
push
movsl
mov
cmp
or
mov
pop
sbbb
mov
rolb
add
lahf
pop
hlt
push
test
xchg
pop
dec
sbb
int3
pop
push
xchg
dec
arpl
jp
loop
iret
ds
adc
inc
inc
mov
mov
fiaddl
xchg
lcall
cmp
mov
ret
jg
jle
mov
jno
cld
xor
mov
xor
cmpsl
test
stc
inc
jne
sti
nop
shrb
stos
add
sub
mov
dec
adc
pop
icebp
loope
pushf
cmp
out
add
mov
imul
mov
leave
mov
mov
pusha
pop
xor
outsb
jge
movsb
inc
popa
mov
fwait
sar
jnp
out
or
out
inc
sbb
loopne
adc
fidivrs
popf
mov
out
xor
ljmp
test
int
xchg
test
xchg
icebp
testl
pop
cs
mov
sbb
and
test
js
xchg
shlb
pop
inc
stc
push
mov
mov
mov
test
xchg
repz
bound
push
ss
mov
adc
push
and
mov
sbb
sti
andb
mov
shrl
pop
add
fidivrs
stos
mov
sub
rolb
jle
scas
xchg
ds
mov
dec
xchg
cmp
arpl
sub
push
pushf
movsb
mov
scas
mov
xchg
call
cmpsb
aaa
adc
pop
mov
cld
pop
mov
xor
popf
outsl
xlat
movd
jb
add
divb
in
inc
sub
fstps
inc
jecxz
aas
lock
mov
out
xchg
jecxz
les
xchg
sub
test
xor
pop
bnd
stos
sub
or
pop
mov
dec
cmp
pop
xor
in
dec
es
push
jg
lds
xor
negb
jno
lret
cmp
mov
sbb
push
jge
loope
jmp
dec
arpl
in
icebp
pop
mov
cmp
insl
jmp
movsl
mov
mov
lods
daa
dec
inc
shrl
ljmp
lret
push
push
and
pandn
mov
push
mul
rorb
sahf
sbb
mov
testl
push
shll
mov
dec
and
mov
adc
inc
jnp
in
notb
iret
enter
faddl
lds
out
clc
push
int3
xchg
mov
xchg
cmp
loopne
das
pop
xchg
or
aas
mov
xchg
aad
sbb
movsl
push
adc
scas
adc
or
jmp
aad
test
scas
cmp
imull
inc
imul
out
call
sub
js
fsubs
sbb
call
shl
add
jo
adc
mov
dec
fs
icebp
mov
inc
sub
inc
dec
sub
int3
inc
cli
cmpsl
in
push
sarl
outsl
adc
dec
jo
lock
push
stc
jbe
mov
fsubrl
inc
sbb
repz
into
ja
push
xor
and
dec
sbb
sbb
arpl
mov
jb
inc
dec
xor
les
add
lock
dec
push
push
xor
lock
mov
ret
outsb
push
mov
fstpl
adc
in
jb
pusha
dec
rorl
je
xchg
repz
cltd
push
dec
lcall
les
ret
inc
mov
jg
addr16
pop
insb
jnp
xor
xor
mov
pop
jae
pop
pop
dec
sbb
std
adc
out
mov
cmp
sbb
cwtl
dec
jo
and
jne
or
mov
mov
loopne
inc
ret
mov
xchg
loopne
inc
pushf
sbb
leave
hlt
hlt
negb
push
jge
jae
xor
rorl
mov
fdivrp
fidivrs
jmp
mov
pop
pop
sub
test
xchg
lds
in
sti
or
enter
and
jae
adc
add
jp
sbb
xor
push
lods
mov
les
mov
mov
or
addl
ret
sbb
or
out
mov
jp
xchg
rcl
or
sti
sti
push
mov
aad
jmp
pop
cmp
das
dec
mov
add
sub
jo
and
addb
out
sub
ss
lret
or
cmp
test
cmp
lods
push
jecxz
adc
cli
out
sub
add
xor
fs
aam
inc
out
dec
xor
in
lahf
xchg
or
mov
mov
and
ss
jno
xchg
jg
push
arpl
hlt
push
or
jge
pop
xlat
out
aam
mov
data16
jbe
inc
and
mov
sub
dec
fcompl
outsl
dec
pop
pop
ret
clc
mov
arpl
xchg
cmc
xchg
or
push
and
imul
dec
int3
and
lods
arpl
pop
lea
dec
lock
mov
int
lods
inc
icebp
sti
outsb
mov
push
insl
push
xchg
push
mov
pop
and
icebp
mov
hlt
test
sarl
stos
xor
mov
and
imul
ljmp
lcall
xor
mov
push
rcrl
outsb
mov
inc
mov
sbb
pop
sbb
pop
jo
movsl
mov
sbb
shrb
or
insl
pusha
lods
repnz
pop
or
ret
popf
inc
jg
aad
shl
decl
jge
movsl
dec
sub
in
out
or
shl
in
and
pop
mov
cs
xchg
adc
or
cmp
mov
lods
aas
addr16
lods
pop
mov
fnclex
inc
push
loope
int
mov
mov
adc
rcrb
sbbl
mov
pushl
jg
ja
mov
sbb
call
adc
push
mov
das
scas
insl
add
outsb
mov
shlb
shll
cmp
mov
pop
mov
sub
scas
xchg
adc
pop
push
outsl
mov
lods
shll
jne
shlb
out
lcall
fiadds
pop
push
add
out
mov
sbb
xor
mov
sub
mov
cmpsb
sub
repz
xchg
aas
mov
inc
iret
sbb
inc
push
jge
dec
repnz
xor
loopne
add
mov
rclb
adc
xchg
or
inc
sbb
jg
ljmp
stos
cmp
lcall
cmp
inc
fildll
gs
sbb
fisubl
lods
mov
sbb
jmp
loopne
movsl
dec
push
out
mov
push
xchg
push
xor
jno
pop
fists
dec
std
fcoml
mov
in
aaa
cld
sahf
dec
adc
rclb
mov
push
or
out
pop
push
rorl
xchg
jns
pop
and
cmpsl
sti
test
in
sub
out
and
xor
in
jge
push
push
jb
dec
jg
sbb
icebp
push
je
mov
arpl
pop
mov
cmc
xchg
repz
sarb
fwait
mov
or
push
fld1
stc
lahf
fstp
mov
sub
dec
ret
mov
lea
imul
dec
sub
xchg
repnz
jo
cmp
lds
inc
pushf
push
sbb
cs
push
negl
fs
loopne
mov
pop
adc
push
or
adc
sbb
insb
adc
xchg
lock
and
cltd
aam
push
mov
xchg
sti
inc
loope
or
or
hlt
andps
rolb
sub
or
xchg
fidivl
cmpsl
jge
mov
pushf
cmp
jecxz
jle
fcomip
lret
mov
push
sbb
xor
mov
clc
stos
out
clc
into
arpl
push
mov
xchg
fildl
cmp
leave
pop
repz
stos
jnp
add
ljmp
pusha
aaa
mov
aam
loope
stos
ret
lret
repz
sbb
inc
leave
add
addl
hlt
xchg
sbb
les
mov
aaa
push
call
adc
and
xor
xchg
jle
push
jmp
outsl
pop
ret
inc
out
lret
add
aam
sub
push
adc
lds
aas
mov
ret
pop
jmp
outsl
xor
lss
ja
rorb
sti
jle
in
jnp
mulps
or
test
stos
sbbl
jb
mov
mov
mov
cltd
sub
mov
sbb
pusha
clc
cmp
push
sti
mov
insl
call
movb
cmp
cs
xor
push
dec
outsl
inc
inc
lods
jecxz,pn
adc
dec
lcall
xchg
dec
push
jmp
pop
lea
jge
adc
mov
jbe
test
iret
lret
fadds
jmp
lods
notl
stos
sarb
aam
or
aad
int3
dec
push
jbe
xchg
jle
lods
jp
lds
jae
sahf
mov
mov
cld
scas
outsl
add
sbb
loope
out
out
sbb
aam
inc
aaa
push
sbb
fdiv
cmpsl
sbb
xor
jl
into
pop
dec
aam
sbb
xchg
push
mov
jnp
fidivrl
sub
out
gs
cmp
add
xchg
pop
push
je
jmp
mov
inc
testl
pop
fcmovnu
cmp
jmp
xor
xor
jno
mov
and
in
jecxz
divb
sub
enter
push
xchg
mov
xor
sub
mov
fdivs
jg
decl
push
xor
leave
sub
shlb
imul
shrb
xchg
cltd
nop
push
imul
and
or
or
jecxz
push
sti
rcl
mov
out
mov
push
test
mov
push
sti
andl
std
loope
iret
xor
cmpsb
adc
or
xchg
cmp
cmp
mov
iretw
mov
loop
test
sbb
jp
movsb
adc
xchg
cld
cltd
movsl
xchg
push
mov
or
xor
adcl
jmp
dec
subl
inc
push
cmp
jno
lret
dec
aam
lea
jbe
xor
fistps
shll
jecxz
mov
mov
and
ret
in
inc
mov
jmp
outsl
mov
and
mov
or
push
in
adc
in
mov
jge
pop
leave
aaa
pop
aaa
insb
in
pop
pop
mov
push
adcb
cmp
cmp
je
cmp
idiv
mov
jp
and
or
push
rcr
sub
loopne
leave
imul
shr
xchg
stos
clc
cmp
shll
lea
insl
dec
out
mov
mov
pusha
loope
push
and
add
aad
mov
cmp
sbbl
arpl
jns
cmp
dec
rorl
cmp
dec
and
mov
int
cld
push
pop
mov
mov
imul
les
mov
add
xchg
sub
testl
inc
push
add
cmp
and
xchg
jbe
std
das
or
lret
xor
cmp
into
pop
aas
dec
adc
pop
lds
xchg
popf
jno
fnstenv
xchg
and
mov
mov
add
mov
inc
xchg
fucomp
mov
push
add
jo
out
inc
rcrb
pop
push
adc
adc
cltd
xor
add
aas
mov
sbb
std
int3
imul
lret
movsl
call
xlat
icebp
clc
xchg
out
pusha
sbb
ja
jp
dec
mov
xchg
lret
inc
mov
nop
fadds
pop
xchg
loopne
or
in
lods
mov
pushf
lods
push
inc
hlt
retw
sahf
cld
and
and
mov
or
mov
pop
cltd
mov
gs
loope
pop
xchg
or
cld
mov
jb
ret
xchg
jecxz
pop
mov
sbb
les
sbb
jbe
aam
sbb
stc
gs
cld
mov
lods
lea
ds
in
leave
pop
ficomps
adc
sbb
shlb
pop
in
lea
notb
cmp
inc
mov
or
pop
loop
jno
ret
jmp
adc
mov
sub
sub
lcall
xor
dec
mov
mov
cmp
je
addb
inc
mov
mov
xor
roll
dec
sbb
repnz
push
pusha
in
cs
outsb
xor
and
jbe
into
shrb
jg
mov
pop
les
or
jecxz
lods
mov
fmul
inc
jne
cmpsl
sti
mov
mov
push
outsl
lock
mov
lcall
cmpsl
jo
scas
xchg
mov
loop
jno
inc
pop
out
cmp
clc
popf
movsb
and
sub
lods
push
bt
aas
lods
aad
js
dec
or
lcall
call
stos
fistpl
push
into
jmp
mov
add
bound
sbb
out
push
xor
mov
dec
push
loope
shll
das
push
fcomip
push
push
xchg
mov
mov
rcr
and
xchg
jne
int3
call
xchg
lea
dec
xor
jb
add
aaa
sub
out
cmc
adc
xchg
cmp
push
popa
mov
cmp
or
add
cmpsl
test
mov
lret
incl
mov
inc
aaa
pop
aas
mov
insl
gs
int
bound
dec
les
xchg
pop
push
add
lock
icebp
mov
jo
and
mov
mov
cli
cli
popa
push
cmpsl
fdiv
pusha
xchg
int3
ret
data16
and
sub
adc
movsl
rcll
inc
adc
outsb
fidivl
inc
lods
popf
or
jnp
sbbl
cs
pop
into
mov
push
ss
cmp
popf
mov
adc
xor
push
adcl
dec
lods
into
pop
dec
mov
xchg
xlat
call
popa
jnp
jo
sbb
push
leave
fsub
xor
adc
jbe
ss
jbe
shll
aad
in
push
imul
inc
pop
xchg
or
out
mov
sub
or
imul
lahf
mov
or
or
jo
jecxz
push
fprem
xchg
sbb
cmp
movsb
and
sahf
pusha
push
inc
push
aam
dec
jg
adc
jo
imul
pushf
fucomp
scas
std
pop
cmp
inc
push
push
and
arpl
add
push
ja
arpl
mov
xchg
lds
mov
inc
xchg
dec
rorb
xchg
push
fcomps
inc
lahf
imul
or
push
pop
xlat
subl
inc
sbb
sub
subl
sbb
mov
popf
jecxz
ja
dec
dec
jb
addb
adc
shll
stos
xchg
mov
fs
pusha
popf
adc
xchg
mov
testl
je
addr16
push
or
mov
jecxz
cmp
rcrl
add
jmp
ficompl
fwait
test
or
or
mov
iret
int
jmp
add
lods
daa
mov
cmp
in
ds
push
ljmp
or
xchg
pop
mov
shr
add
push
or
test
sub
shl
cltd
xor
push
xor
ja
xchg
xor
pop
mov
mov
sbb
pusha
scas
lds
mov
jae
mov
xor
adc
inc
ficoms
push
jg
pop
xchg
mov
inc
pop
xchg
sbb
aam
xchg
pop
xchg
movsb
cmp
mov
mov
cwtl
mov
cmp
decl
sbb
or
inc
pop
outsb
clc
movsl
mov
loope
out
js
sub
je
add
push
lcall
dec
popa
inc
mov
loopne
cmpsl
mov
notb
idivl
adc
js
dec
repnz
andl
movsl
jnp
rcrb
sub
push
adc
and
in
push
inc
mov
xchg
out
and
mov
pop
dec
out
cmp
dec
scas
stc
jmp
add
xchg
pop
ljmp
sub
jmp
add
add
arpl
inc
cmp
in
mov
cltd
mov
movsl
lods
daa
push
push
push
sub
or
fiaddl
pop
stc
push
push
test
mov
in
jg
mov
repz
cmpsl
pop
insl
std
repz
cld
in
sub
imul
mov
cs
in
mov
xchg
jl
adc
sti
or
and
sub
into
subb
jle
push
repnz
adc
mov
mov
dec
and
cs
inc
mov
jmp
iret
imul
add
fs
out
lods
negl
mov
insl
in
sbb
xorl
sbb
xlat
fistpl
pop
ret
push
jne
and
and
or
mov
or
push
test
dec
das
jns
or
sub
xchg
lods
add
lret
sbb
mov
movsb
or
fmul
mov
sub
sahf
xchg
int3
out
scas
jl
and
pushf
and
pushf
daa
sbb
cmc
mov
cli
mov
rcll
add
cmp
mov
ret
or
arpl
or
shrl
cltd
test
pop
cld
pop
adc
mov
scas
jne
sbb
shrl
adcb
mov
mov
ret
sub
movsb
push
jns
add
mov
adc
sbb
fists
lods
stos
ret
push
lcall
pop
sbb
add
dec
jecxz
lds
inc
xor
pop
xchg
pop
inc
cmp
popf
mov
mov
push
sti
pop
gs
jne
jmp
pop
movsb
mov
jns
les
cwtl
scas
iret
je
fdivp
outsb
mov
test
addr16
fstl
imul
dec
lds
sbb
pop
or
repz
inc
push
sbb
xchg
aad
push
fcmovu
push
dec
addr16
lahf
inc
cmc
sbb
sub
int
dec
clc
inc
mov
or
ljmp
imul
mov
pop
adc
data16
dec
jne
and
cmp
mov
sbb
push
xchg
cmp
sbb
and
inc
lock
arpl
pop
mov
ss
mov
and
push
and
scas
loope
loope
ret
cmp
in
sbbl
xchg
xchg
roll
out
lds
dec
sub
gs
dec
xor
jl
sbb
aaa
sub
bnd
sbb
jnp,pt
sub
repz
test
lock
xchg
push
inc
fdivp
xchg
cmp
stos
lods
ficomps
push
movsl
mov
fwait
je
pop
xor
aad
xchg
fdivl
test
xchg
and
inc
mov
xchg
stos
mov
lods
enter
daa
adc
shlb
adc
dec
mov
mov
loop
shlb
push
les
adcb
or
sub
ja
in
loope
jae
inc
inc
dec
jae
adc
divb
mov
dec
pusha
in
stos
push
or
adc
imul
mov
or
push
subl
add
or
inc
mov
push
pop
pop
jne
stos
into
push
fldt
pop
and
loop
lods
shll
adc
mov
gs
cltd
es
imul
mov
pushf
bound
xor
push
mov
in
jmp
mov
push
faddp
jle
out
sub
jns
add
test
movsb
xor
jne
repz
dec
int3
es
and
sbb
in
push
mov
push
fistps
fs
fnstsw
or
pop
push
pop
cmpb
sbb
fwait
pop
mov
data16
xchg
xor
jle
inc
cmp
sbb
xchg
shll
bound
hlt
push
inc
pop
push
sti
lds
sbb
rolb
ret
sahf
cmp
sbb
or
adc
out
jae
or
dec
in
mov
jp
mov
and
dec
sbb
aaa
and
sahf
add
int3
fisubs
push
add
ffree
test
cmp
pop
stc
jl
and
bound
jne
data16
fs
in
push
out
sub
fisubrl
aas
mov
sarl
cmp
repnz
cmp
js
lret
add
xchg
sbb
mov
add
jmp
out
jb
sub
add
and
push
sub
cld
aad
lea
jge
aam
fwait
repnz
push
stc
popf
mov
pop
movb
push
inc
jne
and
movsb
shll
pop
in
xchg
loop
aaa
xchg
dec
xchg
out
mov
adc
or
je
mov
mov
in
outsb
lret
lea
dec
sub
xchg
or
mov
adc
or
mov
xchg
sbb
mov
and
into
push
test
div
sbb
mov
bound
push
mov
ret
push
jp
and
jl
aas
jns
sub
jne
or
and
sub
mov
mov
leave
sub
cltd
call
and
fsts
push
cmpsb
outsl
mov
pop
das
and
int3
push
lahf
lcall
mov
push
fcmovnb
sbb
xchg
test
add
out
sub
add
popf
sbb
fimuls
pop
jns
adc
ljmp
mov
mov
mov
xor
jg
adc
in
pushw
sub
cmpsl
cmc
mov
push
scas
test
rcrb
movsb
rclb
push
fistps
pusha
cli
jg
nop
mov
xchg
lods
mov
imul
adc
in
cmp
xchg
push
popf
inc
xchg
sub
loop
mov
fisubrs
sub
jb
xchg
negb
fdivr
and
cs
xor
mov
dec
or
fists
cmpsl
jae
sbb
int3
xor
sub
ljmp
jno
lods
and
enter
add
imul
pop
shrl
push
fdiv
and
scas
xor
jns
cld
lods
mov
jnp
and
nop
sbb
stos
adc
dec
cwtl
loope
xor
sbb
pusha
mov
add
pop
cwtl
xor
jno
sti
out
jne
jp
xchg
std
ret
test
jecxz
mov
push
and
inc
scas
pushf
rorl
xor
loopne
mov
data16
insb
mov
pop
insl
std
cmpsb
movb
imul
dec
cli
sarl
push
lahf
cmpsl
lahf
mov
pushf
fwait
out
mov
dec
and
aas
pop
mov
aam
mov
in
xchg
xor
cmp
fdivrl
push
xor
inc
icebp
hlt
jb
push
sahf
loopne
imul
add
mov
scas
sub
and
or
inc
or
push
or
inc
push
aaa
rolb
mov
pusha
cwtl
in
and
ret
mov
cs
sarb
xchg
mov
aaa
shr
out
inc
adc
std
pop
fisttpll
loopne
and
movsl
xlat
cmp
cmpsb
mov
xchg
push
pop
scas
xor
loop
andl
cmpsl
mov
pusha
mov
adc
or
xchg
aad
clc
or
out
mov
cmp
cmp
adc
lret
dec
cmp
mov
insl
subb
ljmp
filds
aaa
and
xchg
sub
pop
cld
mov
xchg
xchg
mov
adc
cmp
gs
lods
dec
faddl
mov
sbbb
xor
ret
aaa
push
ficoms
cmpsl
enter
inc
mov
icebp
sub
jge
mov
ljmp
xorl
popf
xchg
adc
mov
fadds
jns
test
pop
mov
out
out
push
mov
mov
push
movsb
sbb
sbb
jle
test
mov
push
pop
ja
pop
stc
sub
iret
jp
adc
dec
int3
test
sub
mov
js
xor
ds
inc
mov
je
sbb
sub
lret
lock
mov
nop
sbb
inc
jg
popa
dec
in
dec
outsb
xchg
in
mov
int3
or
out
lea
das
notb
movl
push
int3
scas
dec
jo
push
cmp
imulb
mov
iret
sub
or
mov
lock
rclb
shrb
test
test
scas
je
push
mov
lret
mov
push
jo
rcl
mov
cld
dec
mov
mov
in
bound
fstps
and
jne
out
pop
das
imul
out
lods
sbb
sbb
pop
xchg
clc
test
into
in
push
shll
mov
icebp
jp
pop
fs
jo
cmp
xchg
dec
popf
xchg
imul
loop
mov
sub
jbe
daa
jecxz
push
fisttpll
or
mov
fcmovu
je
test
jge
leave
out
in
sbb
push
pop
fisubl
pop
mov
jo
jp
xor
xor
cld
xchg
test
mov
cmp
jns
xor
push
inc
lcall
xlat
icebp
cmp
push
mov
mov
adc
cli
xchg
xlat
mov
mov
push
js
stc
mov
clc
insl
push
das
jno
rclb
scas
lahf
subb
sub
sbb
lds
divb
shlb
and
call
mov
iret
jo
jnp
pop
in
subl
add
test
mov
pop
push
jno
stc
add
leave
add
xor
cltd
sbb
loop
add
inc
dec
lahf
adc
mov
cwtl
in
orb
or
jge
xchg
inc
sbb
or
inc
jge
das
jp
pop
push
sbb
push
lods
into
inc
jle
lock
xor
mov
mov
jns
mov
pop
bound
ljmp
or
pop
int3
roll
gs
sbb
adc
push
inc
or
push
pop
icebp
loope
rcrb
mov
sbb
mov
jns
xchg
adc
cmc
clc
mov
sbb
mov
mov
dec
sub
add
cld
jnp
std
and
lea
dec
jo
cmp
in
push
jno
sub
dec
pop
pop
add
inc
inc
jns
aaa
daa
lcall
jg
push
inc
push
outsb
push
push
dec
ja
mov
ja
and
bound
jno
test
pushf
fmuls
jo
mov
push
and
ljmp
outsl
mov
cmp
ja
cmc
xchg
xor
pusha
and
es
imul
jg
xor
lahf
pop
rcl
loop
out
insb
shlb
fisubl
jg
shlb
sbb
lcall
shll
xor
mov
mov
push
movntq
call
jp
mov
jg
sub
mov
fdiv
mov
dec
or
daa
bound
jl
cmpsb
bound
jb
aas
pop
rcrb
ror
mov
jno
xchg
jecxz
pop
jmp
mov
jmp
int3
add
ds
sbb
lock
dec
out
dec
push
xor
int
sub
dec
aad
sub
lock
mov
shl
sub
lret
sti
xchg
aam
or
inc
sbb
pop
inc
pop
xchg
shrl
div
lock
bound
jmp
pop
jle
loope
test
push
mov
ljmp
adc
cmp
push
ret
sub
inc
push
ja
mov
xchg
jnp
mov
xchg
dec
mov
filds
cmpsl
sub
enter
cli
dec
add
fildl
f2xm1
icebp
dec
lahf
pop
mov
mov
add
pop
mov
push
mov
movsl
imul
cmp
je
sahf
jg
cwtl
xchg
lahf
sub
adc
addr16
mov
add
ljmp
jp
lock
cwtl
cld
mov
andl
inc
addb
repnz
lods
sub
xchg
adc
loop
pop
mov
cmp
sub
imul
cmc
out
push
loop
aaa
lret
mov
nop
pop
inc
subb
sub
pop
mov
mov
daa
mov
inc
arpl
das
movsl
in
cwtl
das
pop
fidivl
andb
pop
add
fldl2e
jne
sarb
aaa
push
jp
mov
cmpsb
sub
lret
add
mov
hlt
mov
push
je
sahf
cmpsb
and
inc
sub
scas
orl
xchg
sbb
aas
mov
sbb
push
lret
and
xchg
loop
sbb
lock
les
out
stc
mov
dec
dec
cwtl
loop
stos
or
jp
pop
je
inc
jecxz
pop
in
test
mov
and
mov
mov
jnp
inc
pop
gs
pushf
scas
js
mov
sub
dec
mov
xchg
sub
cmp
stos
jmp
push
sub
push
sar
les
cmp
pop
or
xor
push
push
cmp
lock
ljmp
sub
jno
jg
jns
test
cmpsb
jo
push
push
xchg
add
sbb
out
clc
jl
data16
arpl
pop
pop
jge
rorl
mov
xor
pop
or
add
imul
jne
jg
call
add
pusha
or
lock
mov
cli
fsubrp
lret
mov
enter
mov
mov
adc
jnp
push
icebp
cmp
mov
jno
xor
mov
fidivs
sub
xor
test
stos
sti
fisttpll
pop
jno
mov
je
movb
inc
mov
push
and
push
sub
xchg
xchg
dec
out
insb
popa
bound
outsb
xor
leave
fsts
sti
sahf
fstpl
jno
xor
aam
repnz
aas
bound
pop
pop
pop
cli
ffree
lds
push
shrl
pop
insb
or
or
fcomps
lahf
ret
dec
insl
ret
adc
push
aam
mov
das
pop
cmp
and
mov
fldz
pop
imul
xchg
int
mov
cmpsl
cmp
dec
fwait
xor
aaa
das
mov
cwtl
insb
pusha
adc
xchg
sbb
xchg
jecxz
or
lea
outsb
sbb
fnstcw
addl
or
xchg
fsts
fimuls
push
idivl
xchg
frstor
aad
test
es
insl
orb
icebp
mov
aaa
jle
mov
insl
cmc
cmp
pusha
test
jb
mov
fimull
ret
scas
out
aaa
into
jno
call
add
xchg
ret
into
aam
int3
mov
mov
or
daa
je
popf
push
arpl
jecxz
or
leave
or
jnp
inc
movl
loop
and
xchg
iret
insl
fnstcw
push
fiaddl
enter
lahf
rcrb
jmp
xor
sub
roll
enter
or
and
out
pop
insb
notb
add
mov
jp
jb
xor
pop
cld
imul
loopne
sar
jmp
push
push
lret
dec
mov
insb
mov
mov
sbb
push
cmp
jecxz
or
adc
push
push
add
cmp
aas
add
and
outsb
fs
bound
dec
mov
xor
adc
int3
into
pop
fisttpl
sbb
clc
mov
ret
lods
mov
pop
test
dec
or
je
sete
sub
add
dec
sub
imul
push
pop
hlt
adcl
into
fs
int
or
fsubs
dec
fwait
mov
jns
stc
or
cld
jne
aam
aam
out
adc
jbe
push
data16
jecxz
bound
push
imul
jno
pop
add
mov
sahf
inc
pop
aaa
rcr
pop
das
sbb
mov
pop
fistpll
dec
jge
dec
mov
scas
sub
cmpb
mov
or
pop
mov
or
add
jno
outsb
jp
pop
ja
ret
repnz
xchg
movsl
idiv
out
jbe
cmc
xor
sbb
movsl
or
sti
jge
sub
mov
repnz
add
jmp
lahf
and
inc
cmpsl
push
and
rcr
sbb
cmp
and
and
andps
gs
push
into
cmpsb
leave
and
sub
fwait
lods
stos
in
cld
mov
sbb
scas
out
fildl
test
add
int3
xchg
pop
sub
popl
je
mov
addl
out
jbe
cmp
push
jmp
sub
repnz
popf
sub
add
push
andl
pop
add
sub
roll
mov
repnz
xchg
jo
dec
outsb
into
inc
mov
push
cld
je
js
cmpsl
cmp
push
xchg
fcoml
aaa
jne
bound
or
push
lret
adc
mov
mov
gs
mov
mov
cmp
cmp
stc
or
orl
push
fiaddl
and
add
dec
jg
adc
aas
aam
stos
inc
int
lret
hlt
fmul
cmpsl
mov
lcall
pop
hlt
lret
xchg
sub
cmpsb
testl
clc
pop
mov
stos
pop
mov
or
lods
adc
push
out
jg
mov
fucomi
cld
push
jl
enter
mov
aas
jle
lahf
imul
fwait
std
mov
shl
push
jmp
mov
clc
xor
mov
mov
fidivl
inc
jo
push
ret
dec
ljmp
dec
pop
js
arpl
iret
cli
lock
add
fstpt
outsl
loopne
cmc
dec
lods
cwtl
ljmp
pop
sbb
push
cli
loope
dec
fisubrl
mov
aaa
in
and
jle
sti
mov
cmp
push
lret
call
xchg
inc
adc
call
pop
iret
pop
xchg
adc
imul
mov
add
mov
inc
repnz
xchg
add
outsb
leave
xchg
js
jge
sbb
rclb
rcrb
outsl
xor
add
add
xor
mov
adc
jg
rcll
mov
pop
inc
cmp
in
js
sbb
mov
pop
es
and
call
aad
inc
enter
add
mov
stc
daa
mov
add
or
jecxz
popaw
into
ret
inc
push
pop
repz
cmpsl
aam
cmp
fs
mov
cmp
cmp
iret
sbb
pop
push
ret
fidivrl
fwait
push
xchg
sbb
jecxz
mov
adc
adc
sahf
mov
into
fidivrl
rclb
dec
push
pop
cwtl
sbb
jns
add
or
imull
jbe
mov
adc
and
scas
imul
das
or
icebp
dec
inc
adc
sbb
loope
fadds
stos
cmpsb
xor
dec
or
loope
cli
test
mov
push
mov
fmull
cmp
inc
cltd
lods
mov
and
pop
insl
icebp
push
mov
outsl
in
sbb
inc
xlat
mov
test
pop
jno
popa
and
pop
aas
sbb
dec
mov
lahf
mov
shll
je
aam
repnz
scas
push
jbe
cld
cmp
jl
mov
adc
int
and
movsb
mov
stos
dec
popa
dec
mov
xchg
test
push
lds
rcll
adc
or
stc
xchg
sbb
loop
cmc
mov
idivl
adcb
imul
cli
push
inc
std
adc
lea
jp
aas
sahf
mov
stc
adc
dec
mov
adc
mov
sbb
push
xor
das
outsl
repz
fmulp
not
shlb
out
xchg
lcall
mov
dec
mov
or
enter
out
dec
jmp
stos
test
repnz
jle
lds
ret
xchg
pop
shl
mov
inc
jb
pop
loop
xlat
mov
cs
xchg
push
lcall
cli
dec
lahf
pop
mov
out
mov
rcl
xor
fs
or
mov
inc
xchg
pop
push
inc
or
subl
xor
cltd
jb
mov
xor
jmp
mov
adc
iret
btrl
jo
add
jp
add
cltd
repz
push
inc
aas
jge
leave
fstpt
mov
push
mov
scas
mov
dec
scas
adc
idivb
jnp
out
add
movsb
lock
jbe
test
int
inc
and
push
lcall
add
clc
sub
outsl
xchg
shll
mov
push
adc
mov
int
sbb
out
jge
es
push
nop
sbb
inc
mov
push
mull
jmp
cs
mov
ds
mov
jb
xor
decb
lods
cmc
jns
cs
movlps
inc
das
mov
and
sbb
pop
fmulp
mov
fwait
push
mov
loope
push
jp
xchg
out
and
cmp
rcrl
inc
testb
mov
cmp
lods
inc
pop
jg
mov
je
fcoms
ret
ret
push
lret
lcall
fnstsw
dec
jmp
cmp
mov
cli
jle
sub
pop
and
fwait
add
add
adc
adc
in
cmp
xchg
and
mov
mov
shlb
add
mov
mov
xchg
mov
cmp
and
aad
cmpsl
dec
aad
in
aad
mov
mov
inc
cmp
ss
pop
jb
gs
fsubrl
movsb
lock
mov
mov
xchg
jmp
adc
mov
add
gs
sbb
jno
or
test
test
push
push
and
jns
nop
fistpll
imul
inc
sub
xor
lods
add
pop
mov
jo
enter
nop
jnp
jle
pushf
test
cld
xchg
mov
out
in
cs
inc
loope
push
mov
cld
inc
repnz
push
fimull
add
mov
adc
sub
fs
fisttpl
call
fimuls
pop
sub
mov
push
pop
push
push
push
push
je
and
sub
cld
sbb
repz
frstor
dec
fs
lock
inc
pop
cltd
add
sbb
pop
shlb
dec
fisubrl
fsubrl
pop
loop
jae
push
data16
sbb
xlat
mov
enter
xchg
push
xor
rolb
add
or
mov
ja
xlat
test
or
push
cmpsb
lret
or
fcmovnbe
test
jnp
add
xor
mov
lahf
movl
mov
push
cli
scas
pop
mov
or
xor
clc
cmp
jbe
push
xlat
pop
je
fsubrl
into
pop
xchg
mov
pop
in
push
int3
adc
shll
dec
push
pop
mov
adc
add
xchg
jecxz
mov
inc
test
mov
jg
pop
push
hlt
push
jge
cmp
sahf
pop
je
cwtl
lcall
jnp
movsb
fisttpll
imulb
sahf
out
ds
mov
popa
mov
and
cmp
pushf
cli
sbb
dec
lcall
out
das
push
sarb
mov
xchg
sbb
data16
rcll
push
jne
inc
in
hlt
push
insl
cmp
stc
es
xor
in
mov
and
push
push
imul
jo
push
push
aas
mov
dec
mov
xor
repz
imul
inc
inc
cld
mov
lea
aad
leave
dec
pushf
xchg
xor
dec
xchg
xchg
daa
ret
push
inc
notl
daa
mov
stos
mov
inc
jecxz
fiaddl
jge
mov
jmp
sti
iret
rcrb
jge
push
dec
cli
and
lods
pop
sti
fldl
int
mov
mov
ffree
pop
aas
sub
xor
test
sti
sub
cmovae
clc
lods
xchg
imul
xchg
adc
lods
aaa
enter
ss
cli
cs
xor
jae
or
and
enter
loopne
jo
push
fsts
mov
shll
push
or
and
mov
data16
push
mov
stos
mov
outsl
push
hlt
or
and
sbb
mov
lock
mov
idivb
sbb
pop
mov
add
pop
decb
dec
cmp
adc
add
out
jge
adc
mov
or
dec
outsb
int
push
std
xchg
gs
test
sbb
rorb
dec
mov
mov
pop
dec
out
jmp
in
out
or
sub
stos
jb
push
adc
popa
pop
push
xlat
in
sbb
aas
and
add
loopne
pop
dec
jb
add
jecxz
or
jbe
popf
and
adc
inc
jnp
push
mov
sti
and
inc
ss
and
push
pop
xchg
fmull
adc
mov
cld
cltd
xchg
xchg
cltd
mov
xchg
repnz
pop
inc
sub
addr16
sbb
adc
and
jns
mov
sub
cmc
jg
or
ss
lods
cmc
das
out
mov
sbb
pushf
sbb
cmc
cli
push
stos
inc
addr16
lret
punpcklbw
movsl
test
jns
xor
sbb
out
push
xchg
movsb
negl
mov
jno
and
push
xlat
andl
pusha
sub
lods
push
mov
push
sbb
insb
mov
dec
loop
mov
test
fnstenv
nop
sbb
ljmp
dec
pop
xchg
sbb
mov
mov
aad
movsl
andl
xor
dec
add
adc
nop
nopl
push
out
ljmp
cmp
iret
pushf
xchg
stc
popa
lock
cmpsl
xchg
mov
inc
add
into
mov
add
and
add
jg
mov
ljmp
adcl
mov
cmpsl
xchg
or
leave
pop
mov
mov
lds
ja
popl
insl
dec
sahf
cmc
jns
and
neg
aam
inc
jecxz
cld
jecxz
in
xchg
into
xchg
jno
das
aam
repz
lret
filds
nop
pop
es
or
xchg
clc
fcmovbe
test
mov
add
ss
xchg
aaa
push
adc
lock
push
loopne
shrl
jnp
imul
lea
jb,pt
mov
into
rcrb
sahf
mov
adc
mov
push
out
add
pop
pop
orb
sub
movsl
inc
rclb
inc
js
mov
mov
addr16
iret
flds
and
outsb
mov
movsb
cltd
jbe
sbb
sbb
mov
sbb
push
cmp
or
sbb
push
int3
in
icebp
call
mov
pop
aas
or
ret
push
shrb
or
sbb
cli
cmp
or
ret
into
shll
pop
test
xor
push
or
out
push
test
sbb
ror
outsl
ljmp
and
lcall
jnp
mov
adc
in
js
in
loope
fs
xor
xor
dec
sbb
push
push
or
mov
pop
fwait
cwtl
adc
test
dec
mov
int
inc
push
sub
lret
incl
movsb
mov
les
or
and
addr16
mov
adc
test
push
out
fisubrl
mov
inc
xchg
push
dec
and
sti
fwait
in
add
pop
addr16
js
stos
mov
int
mov
mov
std
in
jmp
xor
rclb
in
hlt
and
pushf
movsb
xor
cmpsl
xchg
std
movsb
dec
push
xlat
jp
dec
mov
fdivp
sarb
add
or
das
popf
enter
ret
mov
repnz
std
sbb
test
add
pop
inc
inc
jnp
iret
jbe
mov
lods
sbb
movsb
test
scas
movsb
nop
arpl
jns
call
mov
gs
sbb
jns
push
xor
ljmp
mov
aam
push
xor
inc
test
fiadds
imul
cmpsb
inc
out
xor
sbb
xchg
enter
cli
imul
xlat
mov
cmpsl
cmpsb
lret
fs
mov
inc
jg
dec
xor
jmp
ds
sbb
cwtl
xchg
out
pop
mov
inc
xor
mov
inc
dec
xchg
mov
xchg
mov
dec
and
and
into
pop
push
cltd
mov
shll
mov
dec
lea
aas
int3
push
subl
in
shlb
cmp
popa
inc
xchg
mov
inc
fldt
arpl
push
push
or
loopne
je
inc
js
mov
out
leave
jne
imul
das
cmpsb
sahf
pop
dec
xor
push
xchg
out
sbb
jae
fdivs
sbb
or
mov
mov
mov
fbld
pop
mov
pop
mov
xlat
daa
cmpsb
jp
sub
dec
lds
in
scas
bnd
push
dec
jb
xor
cmp
scas
je
imul
inc
mov
testl
outsb
pushf
out
rcrl
xchg
adc
fs
xor
add
inc
dec
sbb
fnsave
movsl
fwait
inc
stos
mov
repnz
push
push
push
pusha
mov
cmp
ret
cs
cld
sbb
testl
in
jmp
sub
pop
push
in
int3
mov
add
hlt
sahf
gs
testb
fdivl
mulb
clc
test
fisubs
cltd
icebp
pop
xchg
and
daa
dec
shl
cld
inc
test
jp
fiadds
outsl
sub
mov
iret
cmp
adc
fisubl
dec
push
fisubrl
and
outsl
je
pop
adcl
bound
rdmsr
mov
xchg
add
add
sub
fidivrl
jg
lods
jg
fcompl
or
sahf
dec
pop
jb
ja
mov
dec
add
fwait
xchg
call
enter
jno
ljmp
hlt
iret
dec
jo
xor
sbb
jl
repnz
jns
loope
or
mov
cwtl
mov
idivb
je
rorl
ficomps
inc
js
insl
aaa
pop
adc
int
mov
cmpsl
popa
add
das
pop
popa
jb
inc
aad
scas
push
or
lcall
insb
mov
jmp
mov
fidivrl
sti
add
or
mov
lret
dec
jge
daa
push
jl
jg
popa
cmpsb
mov
push
sub
idivb
popf
lret
negb
repz
cmp
loopne
adc
cmp
adc
sub
pop
rolb
jnp
sub
adc
xchg
adc
inc
inc
int
test
sbb
call
jno
icebp
es
jl
or
clc
add
adc
sahf
and
pop
test
aaa
fmuls
pop
sbb
mov
cwtl
push
or
pop
mov
insl
fldl
sbb
dec
mov
arpl
xor
pop
mov
push
ljmp
insl
sub
ror
popa
xchg
pusha
mov
shlb
das
loope
push
jo
je
jle
in
sti
jmp
pop
outsb
pusha
cmp
jmp
push
adc
push
dec
rclb
lret
repnz
fs
cwtl
aad
shll
and
sub
jns
cltd
sbb
xchg
aaa
dec
add
aad
pop
mov
test
je
adc
hlt
xchg
testl
adc
testb
scas
pop
aaa
jns
mov
jae
sub
push
addl
cmp
add
xchg
das
sbb
cmp
xchg
fs
test
test
push
mov
clts
mov
mov
fldl
cmp
push
mov
sub
pop
js
pop
loopne
fidivs
shlb
xchg
mov
mov
arpl
sbb
ja
cmpsb
push
icebp
cmpsl
fcoms
push
cmp
jge
arpl
out
sbb
xchg
xchg
sub
xchg
pop
aas
test
jl
out
xchg
jg
or
xchg
jg
das
pop
pop
mov
test
iret
push
push
jg
ds
xchg
lea
roll
stc
stos
mov
loopne
xor
lahf
lret
mov
jne
adc
xor
stc
mov
pop
jle
jns
inc
roll
les
xchg
sbb
andps
xchg
loope
mov
cvtpi2ps
in
int3
push
mov
push
cmp
cmp
adc
loop
test
popa
loopne
mov
mov
scas
ret
shlb
js
pop
jge
adc
jnp
mov
lds
ja
sub
ret
sub
mov
repnz
pop
popf
push
fimull
out
pop
pop
in
fiaddl
pushf
repnz
popa
ret
mov
rol
mov
test
adc
in
jb
pop
mov
xchg
fmull
test
and
mov
popa
xchg
or
sbb
adc
iret
xchg
in
sti
cmpsb
ljmp
xchg
repz
cmp
outsb
jmp
xor
xlat
push
sarb
cld
jle
mov
leave
sub
dec
mov
mov
jle
sub
sti
sbb
sub
in
je
in
mov
mov
popf
pop
xor
sbb
popa
jno
push
adc
push
xchg
sbb
fcom
fbld
shlb
xchg
push
mov
fcompl
sbb
mov
icebp
dec
xchg
out
test
gs
xchg
cwtl
mov
xchg
aam
addr16
daa
sbb
push
sub
iret
cli
and
sub
add
out
sbb
inc
dec
inc
js
stos
pop
cmpsb
scas
add
adc
ss
lods
out
jg
mov
iret
inc
push
xor
int3
hlt
push
lock
sbb
add
test
lods
sub
push
sbb
or
mov
xor
test
pushf
stos
into
xchg
out
sarb
pop
xor
sub
mov
out
and
lret
xchg
gs
and
dec
xchg
xchg
into
scas
mov
fwait
shl
call
cwtl
xor
sub
xchg
xor
adc
mov
jmp
rcl
xchg
inc
mov
cli
imul
aad
ret
jl
shrb
sub
mov
xor
sub
adc
pop
dec
adc
das
mov
stos
or
popa
jb
push
cmp
mov
ret
adc
outsb
aas
sub
or
pop
push
mov
add
data16
cmp
mov
aam
js
mov
cmp
adc
sbb
popl
dec
cmc
call
add
sbb
fwait
inc
inc
dec
js
movsb
mov
mov
int
jbe
adc
mov
js
js
mov
mov
popl
js
pushf
popf
adc
fs
mov
xor
icebp
in
repz
jnp
into
inc
push
out
out
scas
and
shll
cmp
mov
stos
pop
clc
stc
leave
mov
add
inc
cmpsl
out
scas
xchg
subl
loope
stos
sbb
jbe
pop
adc
lret
xchg
es
ljmp
add
dec
sar
xchg
dec
ret
dec
inc
xlat
add
dec
outsl
sahf
xor
sbb
loop
out
pop
mov
fildl
jne
mov
cmp
jp
and
cltd
mov
xor
aas
subl
sub
dec
mov
add
cltd
push
xchg
cmpb
push
ror
mov
andb
jmp
mov
lahf
or
xor
ret
jno
sub
gs
hlt
xor
repz
mov
and
xchg
les
push
pop
xor
sti
push
loope
xchg
mov
xchg
rcl
jl
icebp
adc
sahf
jmp
xor
loope
bound
repnz
lods
imul
loopne
jno
fildll
js
fidivl
sbb
xor
adc
lock
in
sahf
mov
xchg
add
fdiv
dec
sub
push
int3
sti
pop
push
lds
das
push
mov
push
ret
jno
lods
in
rcrb
adc
fcomip
adc
xor
imul
sbb
xchg
in
loopne
or
inc
or
shl
nop
jno
negb
mov
clc
mov
adc
mov
sbb
and
sub
pushf
mov
and
mov
aas
movsb
and
pop
or
mov
adc
fldt
push
imul
aad
rcl
call
shl
add
popf
shll
jns
lea
jne
je
ds
inc
add
jp
pusha
jne
sbb
int
jno
fcoms
lcall
or
cmp
push
stos
jae
sub
lods
xchg
sarb
lcall
popa
dec
rcrb
mov
push
push
mov
push
adcl
fs
push
xor
lods
fstpt
adc
push
aad
mov
push
pop
or
cs
pop
dec
ss
jmp
push
les
scas
mov
dec
out
adc
mov
in
leave
int
aaa
push
add
adc
inc
arpl
mov
cltd
js
push
pop
adc
pushf
push
sbb
jl
nop
sbb
or
cmp
push
call
js
sbb
rcrl
enter
mov
and
push
xchg
loope
fwait
dec
jns
mov
aam
paddq
push
sahf
xor
stos
xor
lret
dec
push
adc
rcr
jnp
push
roll
mov
jbe
jge
dec
xlat
je
popa
add
mov
inc
push
cmpsl
sbb
enter
adc
pop
int3
and
mov
add
stos
pop
pop
cmp
fucomip
sbb
cmp
loop
jl
int3
pop
add
sub
push
xor
inc
adc
inc
pop
or
or
xchg
xchg
ret
dec
ret
hlt
xor
dec
icebp
pop
jmp
xor
or
iret
sbb
sbb
aaa
hlt
mov
stos
ret
rorl
cmp
xor
int3
cmp
sarb
add
jl
dec
popf
aas
xor
mov
jmp
jae
div
in
and
out
scas
insl
push
popa
jge
cltd
inc
out
mov
mov
dec
pop
xor
insb
inc
ss
rdtsc
push
adc
sbb
rcrb
int
lods
enter
popa
add
push
mov
dec
jns
dec
lea
rorb
gs
cmp
mov
sub
pop
pop
sub
jle
call
mov
lret
imul
jl
ds
adc
in
pop
ret
pop
popf
enter
icebp
outsb
jp
leave
sbb
cltd
mov
ret
test
std
mov
testl
jb
mov
movsl
jle
cmp
fiadds
pop
jnp
imul
jb
in
push
cmp
inc
inc
xor
xor
cli
in
shlb
mov
aad
cmp
leave
ror
lock
jmp
pop
cld
add
dec
sahf
leave
shlb
arpl
ret
lea
sub
push
bound
fbstp
xchg
push
jge
mov
outsl
clc
lret
dec
and
lea
test
push
out
cmp
jno
divb
xchg
mov
shrl
and
xchg
sbb
or
add
je
notb
cmp
inc
xchg
jp
and
inc
xor
xchg
mov
iret
push
popf
lods
dec
fldl2t
mov
sub
lahf
cmp
xor
je
sbb
es
sub
bound
jae
imul
xchg
jmp
fsubr
jno
mov
xlat
repz
xchg
inc
and
les
out
and
outsb
ljmp
pop
push
push
insl
mov
push
mov
push
sub
in
sbb
sti
iret
pop
outsb
lods
cwtl
cltd
and
lahf
repnz
into
pushl
mov
sub
adc
outsl
test
push
push
call
fsubl
fcompl
cmpsl
jo
inc
out
test
push
adc
test
inc
jno
popa
rorb
jg
mov
sahf
test
aas
aaa
scas
lods
cmpsb
cltd
and
enter
jbe
cmpsl
mov
roll
add
sbb
push
add
sub
addl
call
push
cmc
pushf
sarw
mov
pop
ljmp
add
dec
or
into
mov
mov
adc
enter
jnp
jbe
shrl
adc
movsl
xchg
mov
jp
push
jnp
call
push
cmp
mov
dec
sub
lods
or
ficomps
xor
inc
loopne
adc
icebp
nop
xchg
mov
rclb
insb
dec
nop
mulb
int
mov
push
xchg
xor
je
test
iret
arpl
xchg
inc
mov
or
cs
or
nop
cmc
mov
pushf
das
fimuls
inc
adc
in
fldl2e
push
sahf
jmp
lahf
jl
out
pop
scas
aaa
jle
stos
dec
adc
fistpl
jp
das
outsb
or
subl
xor
leave
jp
pop
rcrl
jae
push
add
sbb
cmc
sbb
lds
aas
daa
pop
xchg
mov
fwait
jbe
pop
jmp
dec
fidivl
cs
sub
es
test
ja
mov
mov
push
dec
fldcw
jo
pop
mov
fidivs
dec
mov
fwait
and
adc
out
std
or
stc
sar
sub
or
mov
mov
inc
mov
out
sbb
mov
mov
lcall
push
pop
and
push
pop
xchg
mov
stc
push
xlat
mov
inc
jbe
nop
and
mov
data16
cmp
jo
cli
out
add
and
add
pop
lea
js
pop
adc
mov
dec
xorb
fwait
and
popa
mov
jle
push
dec
ficompl
adc
push
test
test
pop
sbb
push
repnz
pop
cmp
jg
leave
or
mov
scas
dec
pop
mov
mov
loope
stos
pop
xor
cmp
rcl
cmp
sbb
mov
mov
inc
xlat
faddl
inc
push
in
inc
movsb
jae
add
cmp
xchg
xor
adc
dec
pop
jnp
decb
cmpsb
idivb
sti
lret
ret
stos
inc
orb
popf
lcall
mov
fadds
jge
mov
adc
cmp
setb
mov
sbb
push
mov
test
mov
lahf
pop
js
add
push
out
repz
insl
ret
lods
mulb
outsl
gs
popa
xchg
jmp
int
add
stos
js
arpl
sbb
xor
stc
xchg
jns
sbb
pop
ret
pop
cmp
lods
mov
and
data16
into
mov
daa
mov
pushf
mov
dec
test
adc
adc
movsl
push
scas
inc
adc
pop
sahf
xchg
imul
clc
inc
jmp
or
xchg
scas
or
mov
fmul
sahf
jmp
call
adc
xacquire
popf
sti
ja
cmp
sbb
pop
mov
loopne
inc
xlat
pop
and
stc
xor
cmp
mov
pop
call
test
push
mov
push
xorl
pop
push
mov
rorb
sbb
test
xchg
and
fisubl
mov
sbb
dec
repnz
mov
add
addr16
push
xlat
shrb
subb
pop
scas
sub
mov
mov
enter
pop
dec
jge
xchg
xchg
ds
mov
sub
data16
add
sbb
ljmp
hlt
jnp
push
std
out
and
aad
sbb
orb
add
xor
jne
call
mov
mov
jmp
push
sub
mov
mov
adc
testl
jg
aam
mov
xchg
add
pop
fldcw
add
inc
sar
xlat
sbb
int
dec
aas
pop
movsb
inc
jno
scas
inc
hlt
ret
dec
sbb
jae
add
pop
or
and
lea
dec
scas
int
movsl
scas
movsl
mov
aas
adc
movsl
lock
sub
mov
add
std
mov
movsl
adc
incl
sbb
cs
fcomps
test
hlt
adc
mov
dec
xchg
adc
repnz
int
and
pop
mov
ja
xor
add
ljmp
test
jp
test
out
mov
xchg
xchg
dec
cli
std
jnp
addr16
cltd
sbb
adc
sbb
in
xchg
aas
adc
adc
dec
jl
dec
xchg
push
movsl
pop
stc
jbe
jns
sbb
test
in
loope
cmpsb
repnz
cld
push
xchg
mov
nop
push
fnstcw
mov
sahf
dec
ja
and
pop
cmpsb
pop
test
test
paddusb
inc
lahf
lahf
inc
outsl
sbb
lods
jnp
mov
jl
pop
cltd
loopne
xor
aad
mov
int3
inc
std
psllw
je
inc
cltd
xchg
push
push
lods
jne
push
mov
outsb
sbbb
fnstsw
or
les
add
adc
add
in
mov
jp
jg
pop
js
rcrl
push
mov
sbb
xor
hlt
lahf
jae
pop
aaa
jecxz
test
pushf
mov
int
mov
negl
movsl
out
in
adc
jp
loopne
pop
add
push
sbb
or
cmpsb
js
push
xor
aaa
adc
or
xchg
pop
dec
cmp
aad
bound
push
int3
ljmp
adc
or
in
xor
push
in
in
mov
fs
ret
cld
pop
int
mov
push
mov
sarl
outsb
push
push
cli
fwait
addps
mov
mov
das
xor
fwait
jns
sub
adc
inc
lahf
mov
jbe
and
adc
sub
inc
lret
ljmp
cmp
in
shlb
das
sbb
cltd
shl
pop
mov
repnz
jno
jg
pop
xlat
adc
repz
hlt
outsl
fdivl
rcrl
and
aas
push
pop
mov
test
push
adc
mov
jbe
jp
out
data16
jle
out
das
xor
outsl
loope
rclb
add
mov
or
aaa
jne
test
xchg
xor
mov
dec
cltd
adc
sub
neg
scas
xor
and
outsb
inc
inc
xchg
int
mov
call
add
shlb
adc
mov
lahf
jg
in
test
and
xchg
mov
mov
and
inc
push
mov
pop
stc
jle
test
faddp
push
stc
xor
jl
in
icebp
subb
xchg
sbbb
jnp
fmuls
dec
sub
in
xor
jmp
dec
loop
mov
pop
pop
pop
pop
test
jnp
xor
pop
mov
addr16
bswap
aas
xchg
mov
and
sub
lea
push
stos
jg
scas
sub
imul
push
bound
in
in
movl
out
clc
pusha
sbb
lret
jnp
jne
mov
push
or
das
cmp
push
mov
mov
stos
jge
inc
and
add
inc
imul
pop
mov
mov
push
sbb
and
jle
xor
ret
inc
add
into
sub
frstor
mov
mov
sti
sti
add
jno
and
into
or
inc
sub
shll
add
nop
lds
and
lock
inc
push
fisubs
mov
dec
push
aad
mov
cli
xor
inc
pop
sbb
decl
imul
mov
mov
jno
loop
sub
cmp
sub
je
jl
jge
inc
mov
aas
mov
test
mov
arpl
inc
dec
daa
inc
popl
jno
call
dec
in
addl
cmp
add
aaa
inc
jae
lea
xlat
das
xor
mov
adc
xchg
cli
incb
pushf
lock
in
outsl
push
fisubl
stos
adc
mov
aad
sub
sbb
and
mov
and
imulb
in
aam
mov
mov
jns
push
and
sub
inc
je
adc
sub
aad
add
lahf
imul
xchg
sub
cmpsb
in
xor
insl
rol
jnp
and
ret
lea
lods
ljmp
mov
xor
sbbl
dec
jo
bound
mov
loope
mov
nop
lods
clc
pusha
sti
ljmp
and
xchg
in
pop
jns
sbb
pop
out
xchg
daa
ret
jbe
mov
pop
add
pop
xchg
mov
jg
fmuls
pushl
jp
sbb
inc
mull
scas
testb
fcmovne
popf
or
ret
ljmp
lahf
jnp
sbb
notb
cmp
jl
mov
fsubr
fs
pop
jns
ret
sahf
sbb
test
push
fwait
jae
or
fcomip
out
push
mov
cmp
pop
ret
adc
daa
cmp
inc
push
icebp
mov
nop
xchg
icebp
in
xor
or
sub
add
or
and
ds
pop
xchg
or
fs
cld
adc
out
or
jecxz
addr16
in
xchg
and
sub
or
mov
test
fwait
mov
pop
lcall
fwait
int
and
rcr
push
ljmp
loope
xchg
mov
push
outsl
mov
es
xchg
int
xchg
test
push
in
and
mov
call
fsubp
rcrb
pop
add
fistpll
and
cmp
and
fcoml
fdivl
inc
mov
jno
xchg
xchg
aas
sbb
push
xchg
jbe
xchg
cmpsb
add
mov
pusha
xchg
mov
and
ss
dec
push
icebp
mov
cwtl
or
pushw
rorb
sbb
cli
mov
out
push
pop
jp
negl
fbstp
ret
cmp
arpl
xor
cmovg
call
or
push
insl
mov
mov
sub
or
imul
arpl
push
repnz
mov
iret
lcall
ja
push
and
pop
test
dec
mov
pop
mov
scas
aaa
sub
jno
mov
add
inc
cs
mov
gs
mov
push
jbe
dec
xor
out
mov
call
je
mov
push
imul
xchg
cmpsl
data16
call
cmp
popf
cwtl
xor
or
inc
out
mov
mov
xor
subb
adc
int3
mov
jno
sub
xchg
pusha
loop
jecxz
xchg
jg
pop
je
jmp
inc
das
xchg
cmp
icebp
push
sarl
subb
lods
loopne
sub
push
xchg
pop
in
out
je
cld
orb
sarb
popf
fdivrl
xchg
inc
or
dec
or
mov
les
or
lods
ja
dec
sbb
fdivrl
bnd
out
inc
adc
xor
rol
enter
pop
arpl
dec
add
xor
sub
stos
mov
cmp
dec
gs
in
cs
loope
es
jb
mov
or
in
jmp
lock
xlat
push
jle
les
add
or
xor
test
mov
sbb
push
lods
jmp
scas
test
rclb
push
mov
cmp
push
jbe
cmpsl
mov
popa
hlt
sbb
pop
push
inc
popf
add
mull
adc
fdivrp
lods
mov
jle
push
mov
mov
dec
loope
fadds
mov
push
mov
jmp
aad
scas
popf
push
push
imul
mov
inc
leave
pop
inc
loope
cld
add
xchg
fdiv
lret
or
add
dec
aam
ss
pop
lcall
adc
add
fcomps
cmp
pop
add
xor
dec
adc
add
stos
out
jecxz
data16
out
inc
mov
add
ret
jg
in
jno
mov
cmp
fs
adc
xorb
lret
dec
daa
inc
or
jns
mov
mov
xchg
jae
sub
cmp
jl
inc
int3
daa
mov
addl
mov
add
sti
lcall
xor
jb
loope
ja
test
or
add
scas
add
repnz
sub
shlb
shll
sbb
or
hlt
inc
shll
jns
fnsave
push
xchg
cmc
and
pop
mov
sti
je
mov
cmp
pop
add
enter
stos
xchg
cmc
and
iret
push
movsb
nop
stos
cltd
cld
ja
aaa
sub
divb
push
push
xor
inc
and
repz
add
push
icebp
dec
je
lahf
push
mov
lods
mov
jle
mov
lret
push
xchg
mov
aad
or
sti
or
inc
jl
xor
bound
inc
mov
in
lods
cwtl
out
fs
xor
jno
stos
sub
dec
mov
xchg
lea
xor
adc
loopne
lcall
and
in
out
xchg
dec
callw
fisubrl
jne
xchg
rorl
xchg
sub
add
int3
mov
inc
cmp
loop
inc
push
mov
test
lcall
bound
jbe
jg
inc
test
pusha
mov
jge
in
movsb
test
shlb
mov
cmp
loopne
outsl
mov
add
xor
pop
sbb
in
aas
dec
push
and
ljmp
push
call
imul
sbb
data16
test
xorb
sub
mov
mov
push
adc
mov
mov
outsb
test
push
xchg
push
rolb
inc
sbb
inc
cmpsl
mov
imul
jno
sub
cli
inc
push
lret
adc
popa
adc
pusha
pop
push
lret
jo
les
push
jno
aad
or
fsubrl
mov
fcmovbe
outsl
dec
and
adc
mov
lret
shrb
push
sbb
fsubs
iret
pop
fbstp
ret
mov
daa
xchg
push
pcmpeqd
cmp
mov
dec
pop
fiadds
sti
xor
mov
jbe
les
cmpsl
popa
or
pop
pop
or
daa
clc
sbb
rclb
cmp
sbb
fbld
in
lock
push
mov
jb
aam
shlb
nop
jl
and
cmp
dec
xorb
add
mov
pushf
sub
and
jle
mov
push
movsb
add
rcr
pusha
jo
into
mov
cmpb
repnz
in
or
lods
dec
mov
out
lret
ret
push
cmp
aad
shll
push
xchg
sub
xor
and
add
push
out
lcall
xor
mov
into
mov
xor
lods
pop
dec
push
pop
and
mov
pop
fwait
or
jno
mov
sbb
test
in
andl
test
and
sub
mov
sti
movsb
rcrl
in
push
inc
frstor
ret
pop
repnz
sub
dec
stos
ss
add
dec
cmc
inc
es
adc
cmp
fiaddl
mov
stos
xor
aaa
pusha
jb
sub
push
inc
fs
and
push
pushf
cli
push
cs
fwait
push
clc
cmp
in
and
icebp
and
ljmp
sbb
inc
and
jg
lret
jl
out
lea
mov
jae
fwait
iret
loope
sub
xchg
mov
and
adc
repnz
and
xchg
push
and
arpl
sbb
mov
rcl
inc
push
push
popf
push
adc
inc
inc
mov
jg
sbb
dec
insl
dec
jae
pop
aas
push
adc
mov
fwait
mov
js
addl
int3
das
xchg
xchg
xchg
xor
ror
mov
in
repz
push
and
cmc
cli
cmp
push
stos
insb
scas
pop
test
lea
ret
cs
push
add
push
ss
daa
outsl
loopne
imul
mov
fmuls
and
cld
ds
inc
data16
and
iret
repnz
add
inc
jnp
jmp
mov
cmp
sbb
data16
mov
ret
mov
push
aad
jb
imul
push
and
adc
sub
pop
bound
out
mov
cmp
and
mov
push
cld
pop
jle
ficoms
push
mov
popf
pop
daa
and
jb
dec
push
mov
scas
jb
sahf
jge
sbb
call
add
lods
xor
fcoml
inc
lds
jp
ja
mov
xchg
mov
cltd
add
ljmp
int
mov
popa
loop
jns
push
push
mov
inc
iret
stos
or
jl
fs
scas
and
popl
fnstsw
stos
inc
adcb
and
push
xor
mov
cmpb
fninit
push
lret
in
and
xor
xchg
pop
ret
arpl
mov
jmp
pushf
out
aam
ret
loop
adc
ret
mov
mov
or
jg
int3
fistpll
push
cmp
push
cmc
add
sub
mov
pop
xchg
ficompl
imul
mov
jmp
gs
iret
jne
jns
rorl
adc
sub
shrl
inc
mov
addl
add
inc
lock
fists
pop
jo
adc
mov
push
or
or
cmp
mov
stos
leave
arpl
orb
lods
mov
fldcw
or
clc
test
xchg
cmc
cvtps2pd
sbbl
icebp
enter
aam
mov
loopne
cmp
fidivrl
add
and
ret
push
and
repz
xchg
xor
repnz
jl
cmp
movsl
push
mov
jbe
out
test
add
fst
pop
inc
inc
es
jae
icebp
addr16
pop
clc
or
mov
mov
pop
lods
push
repz
inc
popf
aas
mov
push
and
mov
sahf
outsl
mov
mov
sbb
fs
ficompl
sub
sbb
rcrb
pop
sti
push
mov
jl
cld
shrl
cmpsb
popl
enter
jl
fcmovnu
jae
cmc
and
add
std
sbb
clc
scas
popf
mov
pop
or
test
sub
fdivrs
movsl
and
dec
pop
jnp
out
push
inc
fsqrt
cmp
xchg
int
mov
and
cmpsl
sub
xchg
push
jo
push
xchg
shlb
cmp
scas
xchg
cs
cmpsb
test
xor
push
scas
mov
lea
aad
cmp
cmp
ficompl
das
or
cld
jns
notl
cmc
adc
addb
xchg
in
and
test
sub
repz
les
ja
fldenv
xchg
fimull
cmpsl
add
and
xchg
icebp
daa
jb
add
fisttpl
ret
loopne
pop
jo
jnp
test
xchg
jbe
inc
mov
sbb
push
add
les
ret
mov
lret
clc
into
pusha
cltd
ret
xchg
lret
js
mov
jecxz
test
pushw
adc
std
call
mov
orl
cltd
add
push
outsl
push
mov
pop
sarl
push
dec
xchg
or
ret
fisubrs
addr16
stc
rol
push
pop
adc
mov
gs
cltd
xchg
lret
xor
xor
jge
mov
fsubs
push
lcall
lcall
hlt
xchg
sbb
out
xchg
pop
in
lock
lret
or
imul
dec
jle
call
cmc
xchg
sub
xchg
or
inc
mov
mov
out
push
fs
test
adc
xchg
or
sti
loopne,pt
cmp
mov
mov
addl
or
daa
mov
mov
or
lcall
arpl
mov
call
add
testl
mov
mov
cmp
mov
movsl
mov
cmc
xor
jb
ds
das
lock
pop
xlat
push
shlb
divl
cmpsl
cmp
repz
leave
testl
push
cld
jne
bound
lret
mov
xchg
mov
or
sub
rorb
jnp
insl
add
cmp
cmpsb
inc
inc
fs
loop
leave
cmp
or
add
stc
xor
mov
push
adc
sub
lods
fistps
test
cmp
movl
das
or
test
mov
mov
in
cs
jo
jp
or
mov
mov
or
gs
and
loopne
les
push
jecxz
subb
push
divl
rclb
idiv
lods
loop
fistpll
add
jmp
push
lods
mov
out
fstpt
subb
xor
movsb
adc
mov
fwait
mov
into
fs
push
or
and
mov
lahf
cmpsl
sub
add
pop
loop
lahf
push
popf
dec
inc
push
mov
aam
dec
sahf
iret
pop
int3
mov
push
test
shr
in
js
pop
jmp
stc
or
jb
mov
sub
sbb
mov
sbb
mov
dec
pop
pop
int3
fildl
add
adc
mov
pop
imul
orl
test
call
push
pop
sub
sbb
dec
pop
stos
mov
push
in
cli
or
and
jp
in
sti
pusha
or
jg
outsb
xor
fdivl
pop
push
cltd
adc
das
push
push
pushl
repnz
xchg
push
lds
out
and
cmp
dec
mov
cmp
mov
stc
inc
stos
sub
sbb
cmp
mov
inc
imul
xchg
dec
sbb
addr16
push
mov
inc
jo
push
popf
sahf
lods
out
icebp
int3
mov
lcall
lcall
xor
pinsrw
adc
jle
imul
jge
dec
add
cld
mov
lods
stc
js
mov
jp
adc
ljmp
pop
push
dec
inc
sub
lods
cmp
cmpsb
mov
mov
rorl
adc
outsl
js
jecxz
inc
icebp
mov
pop
adc
xchg
push
xorl
dec
fwait
lret
and
mov
pop
faddl
push
sbb
cmpsb
inc
push
or
int
cmpsb
xor
dec
or
push
repz
faddp
loope
movsb
dec
adc
aas
sbb
in
pop
lock
in
or
pinsrw
xchg
dec
std
xor
and
scas
xchg
arpl
xchg
pushf
mov
dec
fdivrl
rorb
xor
pop
bound
cs
xchg
loop
shll
ja
adc
sub
cmc
out
or
cli
decb
lock
out
in
aad
cmp
fs
lock
and
cltd
push
outsb
in
ja
xchg
loop
xor
jg
pop
xor
gs
test
pop
mov
in
loope
outsl
mov
mov
subb
mov
into
ljmp
clc
fadds
or
movsb
cmp
pop
mov
pop
or
add
fsubrl
adc
or
xor
leave
xchg
pop
cld
dec
mov
cwtl
clc
add
adc
stc
stos
hlt
and
jne
xor
pusha
adc
js
insl
addr16
and
outsb
or
ja
shrl
cli
mov
fwait
push
js
leave
push
xor
jne
outsb
cltd
push
out
loopew
inc
inc
ss
sbb
std
xchg
mov
scas
inc
pop
sar
fisubrs
mov
pusha
mov
cld
adc
mov
insl
pusha
mov
jg
test
jge
stos
pop
sub
adc
gs
and
mov
sub
test
mov
cltd
repz
dec
es
insb
or
add
sbb
aad
in
inc
fstl
pushf
jno
mov
lea
or
imull
vpslld
testb
pop
dec
xchg
push
jb
rcrl
and
xor
mov
pop
jge
stc
jecxz
subb
xchg
and
dec
sub
cmc
enter
ja
nop
test
dec
xchg
bound
adc
popf
shlb
out
adc
cld
insl
sti
adc
ret
stos
imul
nop
cmp
dec
or
sti
inc
pop
std
addr16
dec
xor
fistpl
xchg
subb
push
je
jns
lret
test
push
add
mov
inc
js
loope
lods
mov
nop
and
dec
xlat
rcrl
pop
xlat
xor
cmovo
push
fxch
andb
dec
bound
dec
gs
cmp
mov
subb
rcl
in
mov
push
fiadds
je
in
fldt
inc
jne
cmp
or
add
push
push
mov
fimull
inc
bound
cld
or
inc
adc
test
jl
dec
popf
movsl
shrb
sub
cmpsl
mov
fnstcw
pop
pusha
movsl
sub
mov
gs
js
inc
ja
sbb
sahf
inc
cmp
ja
push
or
aam
cmp
loope
leave
loopne
fstps
daa
sbb
push
jge
sbb
xor
js
or
jge
gs
xor
dec
jg
inc
data16
mov
add
out
shlb
cli
aad
xchg
pop
pop
out
jmp
cmpl
or
ljmp
jbe
pop
push
cli
and
cwtl
inc
repz
dec
pop
leave
mov
pop
mov
in
add
mov
inc
add
pop
lock
pusha
inc
inc
sbb
adc
int3
cmp
loope
jbe
ja
cmc
inc
stos
inc
leave
lock
jmp
dec
push
je
fcomip
or
ret
insl
cmc
mov
jae
pop
adc
dec
stc
ja
push
imul
fwait
movsl
inc
loope
and
push
or
dec
push
scas
and
push
dec
sbb
mov
jecxz
mov
lds
nop
xor
jmp
imul
mov
inc
lahf
push
and
pop
inc
or
push
push
xlat
out
and
xchg
inc
int
jecxz
lahf
unpcklps
aam
adc
and
adc
nop
ficompl
rolb
test
roll
sarl
test
pushf
daa
push
jns
jecxz
mov
adc
inc
sub
mov
inc
cmpsb
dec
pop
push
pop
inc
mov
xchg
inc
push
outsb
cmpsb
out
and
or
ficoms
xor
arpl
inc
sbbb
push
push
pop
and
pop
and
cmpb
cmp
jb
lods
push
xchg
out
push
mov
push
lods
arpl
xchg
popf
sub
adc
icebp
je
loopne
xchg
aam
add
jge
cmp
mov
repz
into
addb
inc
mov
cltd
add
xchg
cltd
pop
xor
ret
or
das
inc
stc
rolb
rcr
clc
popa
sub
xor
repz
push
or
hlt
and
dec
pop
xchg
mov
imul
push
fildl
cmc
or
jne
xor
sahf
loope
inc
jbe
mov
xchg
lods
popa
pop
rorb
push
mov
sub
pop
mov
dec
inc
cmp
mov
pop
test
or
flds
pop
fldenv
test
loope
repz
cmp
icebp
or
cmpsl
out
add
rorb
fsubs
setnp
and
stos
jns
mov
adc
mov
and
repz
int
addr16
mov
in
imul
lods
repz
shl
push
std
std
mov
popf
jg
or
mov
pusha
test
popa
stos
call
xchg
add
xor
mov
iret
dec
shlb
scas
jno
jmp
mov
outsl
cli
xchg
leave
push
cmp
clc
push
cmp
pop
jbe
jge
push
inc
adc
js
mov
jne
jmp
hlt
clc
jp
lret
mov
rorb
imull
mov
mov
fmull
movsl
jbe
test
lahf
cmp
pushf
dec
loope
add
sti
stos
fcom
ja
dec
ja
stos
hlt
inc
ljmp
loop
sahf
push
add
sbb
jae
jmp
push
enter
cwtl
cwtl
xchg
or
cmp
sbb
lret
sub
mov
or
jecxz
adc
sbb
cmpsb
sbb
hlt
rolb
sbb
adc
xor
lret
imul
push
dec
sub
test
cmp
int3
cli
and
fstps
push
mov
sub
loope
mov
pop
cltd
push
out
mov
sbb
out
insl
fildll
sub
arpl
jmp
mov
out
adc
in
push
movsb
aam
mov
lahf
shrb
scas
sahf
push
cmc
mov
pop
or
or
jp
bnd
or
mov
mov
push
repz
data16
jl
lods
sub
nop
inc
inc
bswap
xor
cmp
cs
lods
and
test
and
leave
push
lcall
faddl
out
push
add
mov
cmc
inc
jnp
lret
inc
scas
or
mov
pop
jo
dec
test
xor
jp
jb
push
fistps
xchg
mov
add
mov
addr16
mov
lea
loop
decb
rorb
ljmp
push
push
in
cmp
jmp
xchg
test
mov
dec
adc
rclb
pop
shr
jns
loope
out
cld
loopne
dec
mov
sub
scas
pusha
mov
sbb
push
and
out
out
lret
or
fdivrs
sahf
mov
stos
cltd
aad
mov
sub
sbb
stos
xchg
aad
inc
imul
sub
aam
arpl
mov
dec
dec
xor
cmp
shrl
addr16
sbb
mov
pop
xor
xor
sbb
push
mov
in
push
call
cltd
mov
ret
ja
inc
out
test
ja
mov
jns
clc
add
nop
cld
jo
cmp
in
jnp
sub
jg
lods
sbb
cmp
jno
mov
xor
or
bound
cmpsb
or
out
sbbl
cld
into
hlt
fs
jo
mov
les
add
push
pusha
pop
jl
js
mov
inc
mov
or
add
iret
rcll
fcoml
push
mov
cmpsl
inc
pusha
mov
subl
inc
scas
in
bound
cmp
pop
enter
sub
std
or
jo
xor
shl
loopne
adc
pop
mull
mov
lret
or
jb
in
cmpb
jne
arpl
jmp
or
jno
jp
lcall
loope
pop
push
sbb
add
jb
sbb
xlat
xchg
pusha
pop
jo
cmp
xchg
nop
js
jae
sarl
dec
push
rolb
rcrb
cmp
add
sub
xadd
fisttpl
lock
push
sbb
pop
out
push
sub
out
mov
ret
lret
jo
test
mov
leave
inc
subl
test
sbb
loope
mov
leave
bts
jbe
rcll
pop
push
sahf
mov
mov
fistpl
insb
push
sbb
jp
and
scas
jno
xchg
xchg
xchg
icebp
cmp
fimull
pusha
arpl
sarb
outsb
out
and
cltd
xchg
shrl
iret
in
jp
or
add
movsb
lret
cmp
dec
rcr
std
out
orb
or
mov
std
out
out
call
adc
and
lcall
xor
xchg
clc
pop
shl
and
std
mov
mov
sub
push
push
jecxz
sbb
sbb
xchg
or
mov
mov
xchg
in
in
inc
into
dec
jns
loopne
xor
push
scas
jl
outsl
arpl
add
jo
nop
xor
jp
and
imulb
lret
mov
in
and
adc
mov
imul
mov
jl
mov
jmp
les
testl
sub
outsl
mov
adc
lea
enter
cmp
mov
pop
jmp
dec
xlat
das
in
inc
cmp
push
pop
stc
js
jns
outsb
jp
ffreep
xor
repnz
and
jbe
push
dec
ja
add
icebp
adc
mov
call
nop
fidivrl
cmp
or
pusha
lods
repnz
lods
mov
nop
rorb
mov
ljmp
je
mov
jb
mov
cld
push
and
movsb
fcoms
inc
mov
mov
shr
aam
lds
pushf
mulb
das
addr16
in
add
cmp
mov
fistpl
lods
test
ja
adc
lret
call
js
or
cmp
pushl
mov
int3
les
loop
lea
ljmp
gs
int3
or
xor
test
lret
push
call
ss
adc
jmp
inc
cmp
ficompl
and
cmp
push
xlat
xlat
mov
inc
mov
sahf
aaa
add
cli
bound
ss
loope
clc
jno
mull
jg
pop
add
ret
fldenv
pop
popa
ja
push
cmp
fucomi
adc
xor
data16
into
jl
pmulhw
and
push
jbe
cli
mov
clc
lret
sub
sub
adc
fstpt
popf
fsubs
stos
sahf
rol
sbb
xor
lods
in
in
add
cmp
nop
jo
cwtl
jg
out
fidivl
bound
leave
inc
fistps
repnz
clc
in
test
adc
mov
push
imul
cmc
fisttps
add
xchg
push
aad
mov
adc
pop
call
fistl
push
xchg
add
imul
pusha
sbb
or
xorl
arpl
jbe
fldenv
ss
jne
or
les
mov
push
sbb
cli
dec
jg
hlt
out
mov
dec
push
mov
cli
xchg
xor
cs
add
mov
sub
mov
frstor
jmp
cli
mov
dec
add
and
cwtl
addr16
mov
stos
enter
inc
xchg
xchg
sbb
add
jmp
lcall
cmp
out
xchg
fwait
jb
sbb
sbb
out
mov
jmp
lods
std
pop
jns
popa
pop
push
mov
int
cwtl
pushf
push
imul
ror
sub
xchg
leave
inc
ds
fidivrs
adcl
xchg
mov
dec
stos
data16
rcr
fldl
test
int3
pop
cmpsl
fimull
mov
add
stc
pop
and
cli
mov
add
movl
pop
mov
sbb
cmp
dec
scas
shl
push
addr16
cwtl
insb
pop
pop
ret
or
pop
gs
movsl
sbb
push
dec
sub
xchg
jno
xchg
movsb
mov
sti
std
inc
pusha
faddl
jnp
add
fcompl
mov
jmp
mov
mov
mov
add
cltd
dec
pop
mov
les
stos
push
jle
cmp
aaa
sub
out
lock
pop
vpsllw
es
jle
addb
push
xchg
mov
lods
cmp
mov
lret
mov
fidivs
in
fisubs
add
int
mov
xchg
push
movsl
xor
jnp
pop
cmp
cmpsl
dec
mov
xchg
lea
in
jl
ljmp
rcrl
inc
mov
out
in
dec
sbb
shrl
stos
pop
leave
mov
aaa
scas
mov
mov
test
mov
xchg
cmp
sbb
fst
ret
and
push
xlat
push
je
mov
scas
out
loop
jno
es
pop
mov
divb
add
push
add
push
or
movsl
dec
cwtl
ljmp
mov
add
popa
mov
dec
ss
iret
repz
mov
lods
adc
pop
ss
mov
inc
jne
sub
out
cmpsb
and
dec
insl
dec
mov
clc
pusha
push
xor
lcall
jne
push
jge
jl
dec
aad
shr
insb
cld
xchg
xchg
fmul
jns
jb
or
inc
jmp
movsb
add
test
mov
mov
sahf
add
movsb
test
or
ret
mov
icebp
cmp
and
test
add
stos
add
aaa
fldl
out
shlb
adc
xchg
mov
push
jae
pop
cmp
test
cmp
cwtl
fwait
lahf
mov
fdiv
sub
stos
cmc
mov
stos
decl
data16
push
push
sbb
jmp
cwtl
cmp
int
data16
cwtl
fnstsw
out
mov
enter
outsl
fstpt
mov
inc
lsl
clc
push
movsl
jb
push
das
icebp
inc
push
mov
xchg
insb
mov
xchg
sahf
mov
gs
jbe
mov
mov
js
fistps
insb
sbb
pop
xchg
call
test
loope
adc
divl
adc
dec
pop
aas
pop
push
xor
mov
jnp
hlt
out
enter
and
cmp
mov
sub
insl
jno
rcrb
cmc
pop
scas
xchg
jecxz
pop
rcll
dec
or
sbb
ljmp
flds
insb
ss
popf
xor
or
nop
iret
mov
xlat
mov
adc
retw
or
adc
rcrl
stos
inc
and
sbb
subb
negl
add
fbld
xchg
push
aad
inc
mov
in
jno
fldenv
not
xchg
xchg
je
mov
jecxz
dec
cmpl
inc
ss
int
xor
xor
out
xor
xor
sub
and
xor
fnstsw
scas
add
or
loope
sbb
dec
sub
gs
mov
test
pop
jnp
or
xor
in
roll
bound
push
pop
loopne
fldl
cmp
cmp
adc
enter
sbb
cs
sbbl
pop
jae
add
cmovnp
pop
enter
pushf
mov
mov
jbe
ret
add
js
inc
xor
and
mov
inc
je
xchg
lahf
xor
push
stc
inc
add
es
sbb
xor
adc
lahf
mov
movsb
hlt
sarb
xor
inc
xor
push
mov
stos
call
and
mov
xlat
and
in
jle
outsb
lods
cmp
aaa
lds
xchg
pop
and
ds
pop
jmp
jge
cltd
or
add
fdivrl
dec
imul
adc
mov
push
mov
jo
fldcw
jmp
jecxz
jnp
mov
push
shr
mull
insl
leave
sub
mov
or
mov
cmp
popf
ret
add
sub
test
inc
inc
sarl
lods
mov
pop
jg
in
cmp
adc
stos
xchg
inc
xchg
outsl
mov
pop
mov
inc
xchg
sub
imul
clc
ja
jns
mov
dec
push
add
and
jp
sbb
mov
sub
or
mov
mov
inc
mov
sub
xor
out
daa
testb
sub
xchg
push
enter
mov
jo
adc
push
arpl
add
or
sbb
push
push
mov
push
sub
into
shlb
add
mov
mov
xchg
jns
pop
das
xchg
jp
insb
aad
xor
dec
jbe
push
jno
movsl
xchg
pusha
jns
sub
xchg
jl
dec
je
cwtl
clc
mov
mov
push
lcall
ret
xchg
call
je
and
and
loope
cmpsl
daa
xor
xchg
jge
xchg
mov
cltd
xchg
mov
cmp
repz
dec
lret
test
ret
mov
fisttps
push
imul
xchg
push
adc
fscale
inc
mov
int
pop
lret
ja
jno
inc
or
push
jge
push
enter
xlat
ret
movsl
inc
inc
cmp
or
rcrb
mov
dec
mov
mov
out
fnstsw
mov
fsts
jp
scas
xor
in
outsl
idivb
sbb
mov
cmp
bound
or
jae
mov
or
clc
pop
int
addr16
cmp
aas
in
addb
ds
push
inc
xchg
inc
enter
imul
dec
loop
mov
ja
std
stc
mov
scas
jge
add
outsl
loopne
mov
jmp
jle
loopne
xor
iret
pop
stos
fistl
sbbl
cmp
inc
test
dec
add
mov
loope
or
mov
dec
popa
push
sub
not
push
xchg
in
mov
inc
popf
les
adc
mov
add
push
adc
fdivrs
mov
popa
add
mov
mov
and
stos
cmpl
dec
or
cmpl
sub
outsl
sbb
outsb
pop
adc
and
mov
cs
mov
jne
test
adc
mov
repnz
lret
lea
push
or
xchg
adc
aaa
jecxz
mov
dec
mov
xor
cmp
push
xchg
mov
jmp
scas
sahf
aad
mov
ja
js
mulb
bound
jecxz
mov
movsb
call
dec
in
dec
mov
ja
mov
stos
jno
dec
out
test
jl
push
lret
pop
outsl
pushf
cmp
dec
sub
jne
insl
sbb
cli
lods
out
push
jno
cmp
gs
xor
bound
popa
adc
jae
stc
xchg
dec
xor
sub
and
sub
mov
mov
imul
fists
je
jnp
enter
push
xor
pusha
push
push
enter
movsb
shlb
xlat
push
xchg
fnsave
mov
push
aas
xchg
aas
rorb
push
jge
aaa
data16
das
stos
fdivs
or
cmpsl
loope,pn
mov
fst
data16
xchg
adc
fnsave
adc
dec
lds
lea
cmp
push
daa
xor
push
data16
add
stos
pop
clc
mov
push
shrb
xchg
jo
push
push
cmp
sahf
cmp
and
sahf
movsl
lcall
inc
loope
stc
ja
inc
aam
jl
dec
pop
rorb
inc
xor
leave
fwait
and
loope
mov
loope
xlat
ficomps
fwait
push
dec
sub
inc
and
push
insl
iret
out
repz
nop
orb
repz
cld
fwait
negl
push
pop
ljmp
pmullw
lods
pop
dec
or
in
adc
push
aad
insl
ljmp
xchg
popf
pop
fwait
push
lods
pop
movl
aad
scas
into
jge
outsl
xor
xor
repnz
sub
rcrl
andb
cmpl
int3
inc
mov
dec
adc
adc
dec
insl
iret
mov
in
jmp
mov
sub
mov
xlat
outsl
jge
in
push
inc
aas
pop
cmp
mov
mov
mov
movsb
pop
je
mov
je
cmp
sbb
or
popf
negb
mov
add
ja
sahf
rolb
mov
sub
sahf
dec
lods
js
nop
rol
sub
hlt
mov
dec
or
aas
clc
shl
and
sbb
call
pop
push
arpl
xor
mov
movsb
out
add
divb
lds
test
bound
and
stos
push
fadds
call
fildl
mov
lret
stos
icebp
int3
out
jg
xchg
adc
lcall
push
xor
mov
push
lds
add
inc
cmp
xor
shl
dec
ljmp
dec
mov
mov
std
xchg
mov
fwait
push
fs
loopne
inc
sahf
pop
inc
in
push
pusha
pop
fucom
rorb
xchg
cmpsl
jb
ja
lahf
jp
add
fwait
xchg
ds
and
or
scas
push
or
dec
push
xchg
jmp
rcll
push
ljmp
cltd
and
xchg
jg
dec
jg
push
inc
jbe
mov
push
sahf
push
sbb
mov
int
call
nop
adcb
icebp
fbstp
mov
icebp
shrb
lret
shrl
mov
imul
cld
inc
xor
sbb
ljmp
shrl
add
push
dec
jp
fwait
mov
in
mov
cmpsl
cmpl
bound
pop
cmp
int
jbe
push
sub
sbbl
inc
popa
cmp
fwait
xchg
or
cmp
dec
mov
hlt
int
and
inc
repz
jbe
dec
inc
jle
test
dec
fsubrs
jns
inc
frstor
or
and
xchg
adc
sbb
add
cltd
dec
xchg
sub
sbb
rclb
jecxz
lds
inc
jecxz
sbb
adc
pop
mov
adc
out
xor
sarb
jne
adc
pop
jo
and
mov
out
inc
inc
int
and
insl
sub
inc
loope
inc
jb
mov
stc
fidivl
lret
roll
sbb
mov
fs
loope
cwtl
mov
xchg
push
jne
stos
fisubrl
cmp
cmpsl
sub
loop
sbb
or
fcomps
lea
rcll
enter
js
fs
or
leave
dec
xor
es
mov
ds
int
mov
xlat
or
push
test
les
aam
mov
ret
xchg
mov
or
scas
adc
sub
sbb
call
inc
adc
into
xchg
pop
aam
fs
dec
fbld
dec
dec
and
imul
inc
xor
push
rorb
sbb
push
mov
sub
sub
push
cld
inc
and
adc
xchg
sub
push
ret
xor
xchg
imul
push
les
inc
cs
lret
xchg
lods
fwait
lret
rorl
inc
fucom
ficomps
push
sbb
add
cltd
scas
cmp
jns
lds
fidivrs
iret
adc
pop
xchg
fcmove
jae
xchg
jge
fidivl
xchg
inc
nop
insl
mov
mov
jge
mov
out
movsb
fiadds
jge
jecxz
push
sahf
jmp
jp
pushw
scas
test
push
into
in
sahf
fstp
mov
cmp
fistl
pop
dec
jnp
repnz
in
or
nop
xchg
mov
mov
pushf
mov
adc
ror
or
mov
bound
dec
fmul
xor
rep
in
dec
loope
xor
sbb
pop
add
in
jb
xor
imul
pop
lahf
sub
mov
mov
xlat
mov
imul
xor
test
sub
sbbb
jmp
push
xor
ds
mov
jmp
rorl
push
or
jae
out
out
decl
stos
lcall
notb
pushf
std
sbb
icebp
ret
pop
mov
push
cmpsl
sahf
hlt
mov
ds
cmpsb
sbb
push
push
or
enter
add
push
aas
mov
iret
decb
xchg
clc
add
sahf
xor
dec
push
dec
pop
popf
xchg
outsl
enter
aam
andb
push
aam
cmp
mov
xorb
inc
fs
enter
mov
test
cmpsb
push
push
loope
incl
call
mov
cmp
jle
loopne
fbstp
mov
add
insl
shlb
or
aas
mov
iret
rorb
sub
sbb
icebp
mov
jp
fcomps
xchg
inc
mov
aad
lods
mov
data16
and
inc
lods
rcr
sbb
sbb
jae
jne
leave
gs
lret
inc
mov
jg
movsl
mov
mov
jne
in
enter
add
inc
jnp
leave
xchg
pop
cmpsb
push
cmpb
mov
lods
cmp
scas
push
pop
xchg
pop
andl
sub
outsl
imul
lcall
mov
mov
in
les
into
dec
out
shlb
xchg
and
mov
sarb
jecxz
iret
iret
lea
jb
insb
std
xor
pop
pusha
fs
test
outsl
dec
andl
add
xor
adc
jbe
js
add
inc
dec
add
ljmp
pop
mov
mov
pop
xchg
sarb
pop
repz
out
xchg
int
sbbb
leave
add
insl
ficoms
aaa
adc
loopne
jp
xchg
adc
jg
mov
xchg
dec
fcoms
fucom
fwait
mov
cmp
jnp
arpl
jmp
and
clc
sub
lea
rcrl
mov
in
jmp
cmc
adc
xor
cli
mov
stc
sub
ds
inc
push
fdivs
xchg
pop
cmp
xor
fdivs
imulb
in
cli
cmp
pushf
push
pusha
push
ret
shll
push
js
popf
rcll
ljmp
add
sub
push
das
fs
jae
lods
lret
movsl
popa
mov
jg
test
movsb
sub
out
dec
and
arpl
push
xchg
cmp
lcall
adc
xchg
gs
mov
xchg
je
fiadds
insl
rolb
outsl
and
and
mov
mov
push
sar
push
mov
jae
lcall
cs
aas
into
dec
jg
mov
mulb
sahf
lds
push
pop
int
cmp
popf
loopne
push
test
push
rclb
jbe
mov
out
ret
je
es
lds
cmp
mov
in
lods
or
pop
aam
add
repnz
mov
jmp
push
sbb
inc
cmpsl
inc
add
mov
pop
imul
lea
aad
pushf
xlat
cmpsb
xchg
jne
push
cli
add
adc
jecxz
cltd
lret
xchg
xchg
mov
jo
jl
sti
enter
imul
je
jl
jbe
xchg
add
mov
mov
and
mov
xchg
fs
dec
jne
add
or
popa
arpl
xor
add
shlb
adc
cli
adc
lret
push
add
mov
push
aad
add
cmpsb
xchg
adc
out
dec
sbb
sbbl
ja
lock
dec
rorl
push
jle
mov
fistl
pop
test
into
xor
mov
sbb
push
and
mov
bound
insb
push
add
es
test
inc
out
and
idiv
shrb
mov
adc
loope
das
mov
pushf
lahf
das
fcoms
ja
jo
push
out
fstpl
mov
pop
mov
test
das
call
out
or
mov
icebp
push
jge
adc
mov
add
mov
jge
aas
and
inc
js
cmp
loopne
add
call
pushl
sub
sub
mov
daa
ljmp
add
adc
add
pop
or
jle
mov
mov
or
pop
loop
xlat
fidivrs
sbb
test
pushf
das
mov
jl
out
movsl
mov
roll
push
cmpsl
test
daa
cltd
jmp
pop
push
mov
mov
out
or
pop
in
mov
mov
pop
or
or
xor
pop
sbb
hlt
sub
int
inc
cwtl
outsb
add
pop
dec
sub
adc
call
mov
int
pushf
loopne
filds
scas
or
inc
in
test
fidivs
orb
adc
cltd
pop
cmp
lods
xchg
mov
inc
dec
lea
cmp
jl
jb
mov
push
cmp
in
orb
sbb
dec
sti
adc
or
mov
mov
mov
loope
mov
les
ja
shl
aad
sahf
inc
xchg
cmc
ds
jbe
xchg
imul
test
jl
mov
dec
dec
jne
sti
sub
or
jge
test
sub
cmp
into
sbb
shll
mov
sti
mov
mov
popf
jno
mov
xlat
nop
jg
push
cmp
pop
or
enter
inc
rcr
enter
ret
daa
mov
in
add
cmp
and
sub
xchg
vpunpckhwd
or
fadd
test
inc
push
push
daa
sub
loopne
and
push
cld
fimuls
outsb
and
lea
cmpsl
pop
stc
fcmove
sbb
repnz
sahf
pop
push
scas
outsb
cmp
mov
flds
adc
fmuls
decl
lret
shll
xor
xchg
dec
int3
dec
test
and
scas
out
cmp
xor
sub
xchg
cmp
xlat
imul
mov
lods
xor
xchg
out
sbb
mov
pusha
and
std
in
add
cs
cmpsb
jnp
lods
jmp
mov
mov
xchg
popf
add
aad
adc
cs
dec
enter
mov
jne
jecxz
inc
push
rclb
lods
mov
test
inc
pop
cld
dec
push
stos
ds
mov
dec
imul
leave
pushf
lea
jne
imul
sahf
add
mov
add
mov
mov
xchg
dec
xchg
mov
call
fcoml
shrb
int
popa
stc
dec
sarb
push
pusha
imul
idivb
fldl
xlat
cltd
mov
fistpll
push
fcmovne
inc
mov
pushf
nop
repz
lods
or
int3
aam
stc
push
xchg
cmpsl
mov
push
bound
mov
iret
lahf
or
insb
mov
sub
inc
mov
cs
test
add
cwtl
dec
pop
inc
sbb
ret
es
out
adc
cltd
pop
iret
out
fidivl
clc
or
scas
cmp
into
xchg
imul
cltd
dec
dec
and
push
or
pop
outsl
pop
push
insl
shlb
add
or
jbe
xor
sbb
testl
cs
in
mov
mov
pop
or
outsl
mov
adc
pop
and
loopne
adc
bnd
xchg
and
inc
out
cmpsb
jb
mov
cli
push
into
leave
sbb
push
add
jae
lods
cmpsl
test
repz
mov
and
loop
push
in
and
out
mov
xor
in
call
mov
sbb
push
out
test
stos
fdivrl
out
aad
test
pop
gs
sbb
cmp
cwtl
inc
jp
imul
fadds
lcall
sub
cmp
or
int
daa
push
ljmp
repz
push
push
lock
jg
push
fcomps
jnp
mov
outsb
cmpsl
xchg
mov
mov
lock
inc
mov
mov
mov
ffreep
dec
ret
repnz
rcll
mov
leave
lods
leave
cmc
pop
and
hlt
xchg
push
in
pop
jae
mov
subl
nop
lahf
inc
out
add
jge
sahf
test
xor
lret
pop
std
scas
jno
pop
jne
enter
dec
ja
data16
jle
add
sbb
roll
mov
sbb
das
dec
stc
data16
loop
lret
int
sbb
lahf
or
xor
int
pop
cmp
add
fsubs
aam
insb
jbe
xchg
sub
cld
dec
bound
lcall
cs
pop
jmp
pop
repz
cmp
sub
jle
dec
shrb
stos
jne
inc
xor
sbb
pop
stos
nop
in
fidivrl
mov
sbb
dec
pcmpgtb
add
out
fiadds
fldl
std
popa
mov
jbe
pop
add
cmovo
cltd
and
add
xchg
mov
enter
push
cmpl
jae
inc
pop
addl
shl
xorl
push
es
fisubl
rorb
push
xchg
mov
push
adcl
dec
sbb
xchg
cmpsb
icebp
sbb
js
imul
test
addr16
pop
or
pusha
mov
dec
fwait
jns
ja
daa
ds
ja
aas
cmove
dec
aas
xor
mov
lret
sub
xorb
mov
and
push
jb
pop
pop
ja
adc
cmc
adc
stc
and
pop
push
mov
popf
icebp
shr
pop
inc
ja
pop
push
call
xchg
sti
sub
aas
lahf
cmc
lahf
cmp
sbb
je
cmp
pop
mov
aam
sti
je
cltd
mov
pop
jp
inc
sbb
push
rcl
mov
dec
pop
pop
and
repnz
jae
insb
sbb
outsb
mov
mov
mov
repnz
mov
or
lods
or
inc
push
cld
fnstcw
je
pop
cs
imul
shl
stos
jo
cmp
lahf
fwait
out
sbb
dec
imul
lods
inc
sub
enter
inc
cltd
cmpsl
cmp
or
jg
push
push
sti
xchg
adc
nop
push
nop
mov
dec
push
mov
mov
cmp
mov
in
or
or
aam
mov
outsl
shll
sub
std
xor
inc
aaa
mov
outsl
push
ss
pop
fisttpll
adc
add
jne
pop
xchg
mov
add
fsubs
mov
loopne
testb
dec
pushf
aad
faddl
clc
mov
mov
push
jmp
or
add
lock
push
sti
pop
and
mov
fists
setnp
dec
popa
sbb
dec
jl
and
add
xor
fiadds
mov
loop
hlt
stos
gs
mov
xchg
mov
fs
add
jnp
repz
mov
push
into
int3
fistl
out
popf
testl
push
ja
fmul
pop
shrl
gs
movsl
mov
or
lret
cmpsb
cli
lock
push
adc
push
daa
sub
out
mov
ret
push
int3
xor
mov
nop
lea
inc
xor
mov
out
sahf
jnp
cltd
push
inc
les
scas
fcoml
add
hlt
xchg
mov
adc
dec
adc
pop
jae
push
jecxz
xor
aaa
jmp
in
cltd
and
and
sti
mov
inc
sarb
bound
aam
lea
mov
loope
es
xchg
inc
es
sbb
cli
in
call
push
sahf
mov
push
insl
inc
popf
out
in
add
dec
int
or
repnz
push
cmp
cli
and
pop
pop
mov
cmp
aam
ficomps
jns
add
sub
adc
mov
loope
mov
mov
fdivl
add
pop
dec
or
shl
adcb
jno
fisubl
dec
mov
mov
dec
mov
and
dec
mov
push
mov
jae
adc
cwtl
jge
sbb
and
jecxz
cmp
nop
gs
sub
or
mov
pop
jge
bound
xor
ja
dec
popa
and
pop
adc
ja
stc
or
stos
sub
bound
idiv
jns
sbb
subl
sbbb
int
cltd
in
pop
cmp
lock
ret
testl
xor
out
xor
push
jo
or
div
or
pop
repz
fidivrl
and
aas
mov
daa
jge
pop
push
cmp
das
jecxz
mov
or
push
mov
sbb
xchg
ds
lret
xchg
mov
js
push
cmp
cmpsl
sbb
mov
aas
inc
cmp
cmp
dec
stos
jne
pop
dec
outsb
jns
dec
ja
fs
sbb
movsl
pop
push
scas
push
or
je
add
cmp
or
fistl
les
cmpsl
mov
xlat
mov
xchg
cld
icebp
inc
push
cmp
xor
das
bound
bound
jmp
jecxz
ja
pop
rep
xchg
mov
sarb
mov
dec
jae
adc
addr16
mov
fisubrs
or
imul
mov
cmp
pop
es
push
pop
pop
rcrb
jmp
outsl
imul
loop
adc
sbb
addl
mov
andl
int3
push
sarb
cwtl
cmc
xchg
xor
push
into
cld
repz
scas
xchg
push
jno
push
jo
mov
dec
fstpl
stc
jns
xor
xor
subl
test
les
xor
jmp
into
and
js
push
sbb
out
mov
adc
pop
shrb
jecxz
xor
adc
pop
cmpsl
mov
xchg
out
dec
andb
in
daa
inc
sub
push
pop
inc
xchg
mov
sbb
icebp
cltd
xchg
adc
cmpsb
cltd
mov
orb
sti
mov
inc
sbb
add
sub
in
mov
das
pop
stc
push
or
jecxz
xlat
sub
jmp
pop
or
inc
aad
scas
test
popf
fldl2e
xchg
adc
clc
enter
ljmp
int
xchg
mov
sub
mov
pop
in
push
mov
adc
aaa
mov
mov
jb
xchg
out
lcall
and
shlb
repz
call
dec
or
outsb
pop
adc
popl
xchg
loop
aam
dec
sti
push
fdivl
mov
inc
xor
rcrl
sub
xchg
fs
mov
sub
pop
cmp
cli
xchg
xchg
les
add
std
out
sahf
push
pushf
sub
fdivr
mov
fnstenv
mov
hlt
and
jae
stos
gs
sbb
movsb
mov
xor
push
arpl
or
and
loopne
cmp
mov
incw
add
push
loop
aas
mov
adc
test
in
rolb
sbb
mov
sahf
inc
cmp
in
nop
adc
les
jbe
test
sbb
mov
faddl
or
or
xchg
repz
leave
push
icebp
xchg
add
les
push
fs
dec
mov
xor
lods
icebp
dec
jae
xchg
sbb
mov
icebp
xor
insl
xor
lods
inc
inc
loopne
dec
add
sub
iret
aad
mov
sbb
lods
jle
add
xchg
ret
dec
dec
cltd
lock
sub
cmp
fsubrl
push
mov
mov
jl
push
and
xchg
fcompl
add
jo
nop
insl
push
sahf
es
leave
fldt
sub
dec
push
mov
mov
mov
pop
test
lret
mov
mov
mov
scas
ret
or
or
das
pop
popf
adcb
dec
lea
adc
std
gs
or
mov
jns
jne
ret
jp
jno
jl
dec
fdivr
push
pop
xchg
pop
jno
jo
out
adc
loope
mov
and
ss
mov
mov
jns
pushf
scas
nop
cmp
xchg
gs
add
cmp
notb
jmp
add
add
jnp
xor
pop
and
ss
xchg
sbb
sbb
and
scas
movsl
out
pop
inc
mov
jbe
jle
aas
jl
ret
cmp
insb
inc
jmp
ss
mov
aad
in
xchg
sahf
inc
adc
repnz
jmp
xchg
sub
lds
xor
movsb
test
mov
daa
mov
mull
into
int
aaa
fwait
int
ret
aad
push
mov
fwait
pushfw
mov
fidivrs
jp
xor
jge
jp
adc
adc
and
jmp
rol
jp
mov
mov
js
sbb
mov
and
popf
int3
movdq2q
pop
jle
cld
pop
pop
popa
xchg
jae
or
sahf
xor
andb
jg
das
stc
xchg
mov
mov
dec
pop
and
push
lret
mov
out
sub
daa
sbb
dec
sbb
das
scas
jae
jne
mov
mov
arpl
cs
and
fldenv
cmp
ret
or
xchg
mov
jnp
jg
jle
inc
out
dec
mov
cltd
push
mov
bound
inc
jo
cmp
or
test
mov
loop
pop
aaa
mov
mov
mov
push
adc
in
js
cmpb
cld
and
iret
xor
push
dec
mov
mov
jns
inc
rolb
stos
dec
in
xlat
mov
lods
sbb
xor
lahf
pop
pop
rcrb
jno
ret
cltd
stc
clc
jns
pusha
arpl
jnp
add
inc
and
call
push
cli
sbb
stc
jge
push
push
xor
push
mov
in
or
xchg
sti
push
sbb
sarl
add
mov
cs
leave
mov
xchg
xchg
in
adc
or
xchg
shll
mov
in
xchg
lea
pop
mov
scas
xchg
into
xchg
pop
sti
in
shl
rorl
sbb
movsl
dec
nop
xchg
fstl
and
add
jb
in
test
xor
or
call
mov
mov
fs
stc
jbe
cmp
test
mov
inc
xchg
push
out
rolw
loop
adc
and
mov
xlat
or
add
mov
ret
dec
jg
pop
xorl
js
mov
push
stos
or
sub
push
dec
adc
jmp
fldenv
addr16
jae
ljmp
loop
daa
inc
and
jp
cmpsl
sbb
roll
lds
les
ret
and
jle,pn
inc
or
and
lods
in
pop
aaa
imul
mov
lods
pushl
push
es
inc
aam
das
fsubl
and
jl
xor
xchg
lods
inc
shlb
clc
push
ret
dec
push
push
sbb
xchg
dec
dec
mov
mov
sub
mov
pop
ret
loopne
lret
mov
in
pop
mov
mov
xor
cwtl
xchg
pop
mov
push
xchg
mov
andb
mov
test
stc
dec
pop
or
lahf
dec
cmp
mov
inc
dec
insl
lret
xchg
ja
jne
addr16
nop
xor
test
hlt
test
xchg
daa
push
pop
inc
jno
jle
mov
das
dec
sub
out
cld
cld
in
xchg
repz
xchg
push
xchg
out
fmuls
xorb
stos
push
push
std
dec
and
push
fs
mov
movsl
fistl
adc
jle
mov
or
adc
mov
cmp
das
fwait
mov
adc
repnz
jmp
xor
push
dec
push
in
fimull
mov
lret
and
out
pop
add
roll
dec
pop
and
jns
dec
dec
pop
push
enter
push
sub
fisubs
inc
aaa
push
sti
les
push
orl
add
sbb
mov
in
es
movsl
lea
je
aas
push
out
stc
es
jecxz
test
cmp
inc
inc
cmp
outsl
cmp
adc
add
sub
jp
pop
rorl
xor
lods
mov
test
inc
sub
in
test
outsl
jecxz
xchg
add
in
add
pushf
in
add
xchg
fadds
das
ds
mov
lea
jmp
popa
vmovsd
push
sbbb
rcrl
adc
mov
cwtl
sub
icebp
inc
pop
aaa
dec
adc
jb
aas
fmull
mov
pop
fs
mov
mov
insb
sub
xchg
xor
mov
nop
jmp
sub
jne
dec
xchg
bound
xchg
mov
loope
mov
pop
inc
prefetchw
mov
shl
add
jnp
icebp
aas
cmpsl
push
xchg
mov
inc
mov
lock
inc
inc
jae
dec
xchg
insb
sbb
mov
mov
adc
adc
iret
pop
shrb
je
jns
sub
orl
call
mov
fmull
pushf
jl
push
push
add
je
leave
into
and
sbb
and
addl
mov
mov
fucomp
movsl
xor
insl
data16
dec
mov
imul
jae
divb
mov
mov
call
lret
arpl
frstor
insb
mov
mov
mov
std
or
push
dec
pop
lcall
dec
push
xchg
or
mov
ret
sbb
dec
loopne
push
dec
jae
jb
fucom
out
push
mov
fwait
pop
stos
rcll
call
adc
adc
cltd
mov
mov
or
std
fst
push
adc
xchg
fildl
repnz
mov
lahf
fpatan
cmp
les
sbb
ror
mov
loope,pt
sbb
in
lods
mov
mov
mov
adc
popf
lock
jne
and
loop
loope
orl
lret
add
mov
fs
cmc
or
in
sarb
push
lcall
lds
mov
adc
pop
sti
xchg
pop
cmpsb
sub
add
xor
add
jmp
imul
mov
je
fnstcw
sbb
mov
cwtl
lret
sti
push
xchg
xchg
shll
int3
lret
fsubr
ret
scas
test
sub
adc
rcll
int3
mov
cmc
sbbb
inc
jne
les
mov
push
leave
xchg
push
das
jmp
lret
fcoms
sbb
mov
and
and
sahf
cmp
in
adc
test
push
dec
push
adc
push
mov
movb
dec
push
in
cmpsb
and
daa
push
mov
pop
inc
roll
push
inc
in
mov
xor
int
arpl
sar
pusha
mov
inc
sbb
js
stos
aas
mov
testl
xchg
das
imul
add
cmp
mov
push
mov
gs
gs
fnstcw
js
or
es
or
sbb
pop
fisubs
jnp
rcll
mov
mov
outsl
add
xor
sub
adc
jne
pop
push
bound
insb
int
iret
xchg
or
pop
jge
dec
insl
rclb
pusha
dec
sbb
jp
dec
mov
popa
inc
gs
stos
sub
outsl
repnz
adc
movsb
ficoml
pop
aaa
dec
arpl
insb
push
push
sub
cltd
xchg
shll
ljmp
and
fidivs
xchg
repz
xchg
in
or
jo
idiv
mov
cmp
lds
adc
or
ljmp
and
adc
cmp
xorb
call
push
sbb
icebp
ror
xchg
arpl
ss
adc
and
xchg
insl
out
add
jl
mov
sbb
xchg
or
pop
add
jbe
dec
addb
addb
cmc
fsubrs
dec
stos
adc
and
pop
mov
adc
inc
aaa
out
or
mov
mov
adc
test
mov
daa
mov
notb
lds
iret
dec
push
inc
loopne
jmp
adc
scas
xchg
lret
xchg
into
lret
scas
rolb
xlat
cmp
lods
mov
jmp
in
lahf
ficoms
push
cmp
dec
out
adcb
cli
ss
pusha
lods
test
push
fstl
inc
cmp
jp
or
sbb
out
mov
push
xor
and
mov
lea
stos
adc
xor
jmp
mov
in
jae
add
imul
sbb
and
lcall
enter
push
fwait
push
leave
mov
addr16
fildl
outsl
gs
mov
push
imul
push
inc
push
mov
pop
ss
andb
out
pop
inc
mov
call
add
pop
pop
adc
and
fwait
sbb
jge
inc
add
mov
mov
shl
stos
rcl
fdivrl
add
or
cmpsl
inc
lahf
cltd
push
mov
dec
aas
sbb
lcall
mov
push
mov
std
push
cld
rcrl
dec
xorl
popf
or
lods
add
or
jns
lea
mov
inc
xlat
cmc
orl
rcrl
out
leave
xchg
ja
inc
adc
mov
test
cltd
add
shrb
je
ss
or
in
ret
pusha
xchg
lret
jle
ja
mov
or
mov
das
or
iret
mov
fbld
dec
push
rorb
outsb
mov
xchg
shrl
pushf
mov
frstor
rclb
and
mov
cmp
dec
add
adc
sbb
loope
jecxz
out
push
pop
ficompl
jmp
and
cmp
mov
sub
mov
add
jbe
cs
stc
inc
xchg
fbld
sbb
idiv
xor
lret
shlb
push
insl
sub
cmp
push
pop
pop
cmp
stc
lret
sub
ljmp
mov
and
xor
test
clc
lods
clc
pop
and
fwait
dec
aad
mov
jmp
cli
and
adc
push
sbb
call
xchg
leave
jo
inc
sahf
movsl
mov
or
subl
sbb
ret
dec
sbb
fwait
push
scas
sbb
mov
jecxz
ret
dec
sub
aam
imul
je
push
xchg
filds
faddp
orl
popa
push
daa
sar
lret
cmpsl
push
cli
sbb
xor
xchg
lods
jne
roll
arpl
shr
sbbl
sub
cmp
sbb
mov
dec
push
mov
cmp
lods
dec
dec
cmp
popa
jno
add
jmp
sub
mov
or
lds
jmp
int3
into
adc
cmp
mov
hlt
pop
inc
sub
dec
jmp
xlat
scas
pop
mov
sub
int
adc
bound
dec
imul
and
jo
fildll
insb
adc
das
inc
jo
adc
sar
and
push
lcall
lahf
sub
and
inc
int
dec
add
xchg
mov
cmpsl
xchg
or
fimull
cmp
js
xchg
and
jbe
push
mov
inc
mov
ja
clc
out
fisubrs
mov
push
lret
in
test
gs
out
sbb
bnd
push
pop
xchg
fnstcw
pop
and
or
pop
jl
pop
outsb
clc
lea
jb
fildl
es
adc
jo
or
mov
inc
or
ds
push
dec
lea
mov
add
jg
pop
scas
lock
jecxz
inc
enter
inc
cmp
stos
add
cmp
sti
imul
xchg
outsl
call
push
add
push
out
decb
lret
mov
xchg
push
push
stos
pop
adc
shlb
or
cmpsb
out
mov
push
js
in
sbb
pop
cltd
pop
mov
pop
dec
and
push
push
push
outsl
mov
in
ja
ljmp
nop
mov
pusha
lea
rolb
imul
mov
mov
jp
add
test
mov
mov
arpl
sarb
xchg
push
in
int
ss
sbb
cmp
jl
dec
adc
pop
leave
scas
testb
daa
sti
jne
push
sbb
pop
mov
jb
movsl
xchg
mov
sbb
cmp
push
jl
mov
adcb
mov
xor
out
aam
push
lock
or
cmpl
pop
sub
pop
call
xor
xor
lret
repnz
addr16
movsl
mov
sbb
loop
pop
ret
sub
jecxz
mov
mov
in
shr
enter
fisubrl
mov
mov
pop
add
pop
ss
mov
call
push
mov
out
fidivl
push
jl
les
movsl
mov
sbb
fdivs
jmp
enter
lock
scas
aas
sahf
out
push
push
inc
pop
ljmp
inc
jb
push
dec
jne
inc
in
sbb
or
cmpsl
and
mov
inc
adc
in
rorb
movsl
dec
cwtl
mov
imul
xor
mov
mov
or
arpl
cmc
sub
out
out
push
cmp
popf
sub
in
inc
rcl
nop
sbbl
xchg
inc
out
jmp
mov
gs
scas
repnz
mov
out
out
lahf
push
pop
inc
cwtl
aas
and
popf
cmpsb
add
in
cmp
test
jge
les
jmp
cli
mov
dec
dec
loopne
icebp
mov
xor
xchg
leave
loop
scas
ja
xor
mov
mov
lcall
adc
fsub
add
adc
sub
rcll
pop
shl
dec
mov
pop
inc
jl
test
fs
dec
loop
jmp
mov
jb
shll
xchg
pop
dec
repnz
pop
mov
xor
std
pushf
inc
mov
xchg
jb
pop
cmp
or
adc
jne
ja
jnp
add
int3
push
popa
xor
aaa
xor
mov
pop
mov
inc
pushl
xchg
xchg
cwtl
cltd
push
fs
loopne
inc
clc
cli
cmp
mov
imul
push
loopew
sub
fabs
out
or
lods
fisttpl
dec
ja
pop
data16
push
ljmp
xor
mov
aad
xchg
mov
xor
mov
cmp
shlb
pop
xchg
cmpsb
outsl
testb
ret
mov
mov
test
sahf
lahf
push
ds
rorl
sbb
arpl
xor
adc
out
cmp
shl
jle
popf
add
sti
or
repz
inc
dec
and
pop
mov
jg
push
sbb
push
cmp
jnp
test
xchg
dec
loopne
popf
pop
jb
lret
mov
js
repz
jmp
ucomiss
adc
in
xchg
es
push
ret
stc
push
xor
sbb
enter
or
inc
mov
push
aam
inc
xor
int3
dec
mov
pushl
sub
in
ja
cmp
push
adc
ret
mov
stc
push
jb
xor
mov
jge
rcrl
loope
mov
push
call
imul
ror
push
sub
or
mov
adc
jp
roll
shlb
adc
repz
ds
push
adc
lock
mov
punpckhdq
bound
xchg
jmp
inc
test
adc
jbe
xor
xchg
mov
insb
in
dec
leave
lods
fcompl
sbb
mov
les
mov
test
mov
loope
iret
push
and
aad
testb
xor
jnp
rolb
jp
sbb
inc
xchg
xchg
sti
mov
repz
mov
cmpb
les
loop
xor
xor
add
in
sub
imul
enter
xchg
sub
jno
mov
push
cld
lods
xor
stos
or
jl
dec
stc
sahf
in
enter
addb
pushf
pop
xor
and
daa
sub
sbb
aaa
xchg
into
mov
mov
dec
mov
mov
jae
cli
pop
xchg
dec
cmp
pushf
sub
and
js
outsb
or
sub
cwtl
shll
dec
insb
dec
mov
cmpsb
test
pop
sbb
xchg
sbb
cltd
xchg
std
pop
lock
call
pop
aas
imul
or
pop
daa
je
sbb
xchg
loop
negb
push
je
popf
inc
dec
adc
shrl
cmpsb
sahf
pusha
mov
ror
pop
pop
fcmovne
in
jecxz
arpl
sbb
sub
inc
imul
out
das
movsl
testl
cmp
clc
cmp
xor
adc
xchg
es
inc
or
push
sub
loop
idiv
outsl
movsl
cmp
frstor
out
in
int
out
ret
inc
pushf
int
jg
jbe
add
jp
inc
and
notb
or
test
mov
cltd
push
insb
sub
cmp
movsb
shrb
push
mov
pop
int
mov
jns
out
repz
scas
inc
int
push
popa
les
pop
dec
lods
jecxz
ja
xor
stos
movsb
and
mov
and
mov
mov
sub
test
mov
repnz
sahf
add
das
sub
lea
adc
and
cmp
xor
mov
xor
xor
shl
shrb
cmpsl
pop
jecxz
adc
sbb
movsl
fsubrs
outsl
mov
popa
pop
dec
insl
popf
pop
xor
fs
xor
cmp
xor
xchg
jae
pop
lds
inc
loope
lcall
cmpsb
adc
adc
sbb
test
pop
rcr
push
movsl
cli
xor
add
xor
xchg
pop
rcr
cmpsl
in
ja
out
adc
mov
fiadds
jge
add
stc
jl
test
xchg
push
ljmp
adc
dec
or
xor
iret
popf
in
imul
mov
push
sbb
out
mov
lret
mov
xor
sub
and
cmpsb
lahf
into
stc
pop
or
push
es
sbb
out
jle
xchg
jmp
mov
xor
outsl
pushl
push
jb
ret
push
insb
sti
and
pop
les
hlt
sub
mov
cmpsl
jb
mov
cmpl
or
push
add
cmc
dec
mov
push
call
xor
fdivl
ret
mov
adc
lods
mov
test
push
dec
xchg
cmpsl
mov
lcall
cmp
lods
sahf
or
dec
adcl
and
dec
wbinvd
push
jl
jmp
jno
xor
jne
and
xchg
pop
movsl
mov
pop
inc
inc
mov
iret
push
test
push
sub
mov
mov
imul
xlat
jae
mov
sub
mov
and
sub
adc
xchg
mov
lds
and
stc
addl
inc
adc
jnp
fwait
ret
mul
ficomps
add
movsb
cld
cmpsl
std
idivl
adc
or
cmc
stos
adc
ja
push
stc
push
push
test
and
pop
pop
mov
xchg
add
ljmp
jns
dec
ficoml
ret
out
xchg
nop
js
cmpsb
jle
bound
ret
or
cmp
mov
or
ret
xchg
ss
pop
xor
test
popf
je
scas
sub
in
ret
xchg
shrl
out
adc
xchg
dec
mov
jnp
pop
inc
xchg
fsubl
in
movsl
into
jno
xchg
lea
enter
mov
ja
and
push
orl
fcomps
andl
lock
dec
xchg
incl
addl
or
sbb
repz
aaa
sub
call
loope
add
insl
jb
rorl
xchg
ds
mov
jecxz
xor
cmpsb
ja
push
dec
mov
int
loop
push
lret
lahf
mov
inc
add
jmp
popf
imul
int3
jmp
repz
cmc
and
outsl
cmp
int3
test
xchg
dec
mov
adc
mov
sub
movsb
loop
xor
mov
inc
sti
into
push
push
jle
int
dec
and
ds
mov
mov
lds
mov
inc
out
lods
jl
test
out
sub
xchg
sbb
out
and
mov
add
outsl
cmpsl
mov
test
inc
sbb
icebp
mov
push
xchg
int3
into
lods
jae
jge
adc
xchg
jno
mov
stos
jmp
ja
iret
cmp
cmp
insl
cmp
ds
add
sub
sahf
mov
mov
xchg
pop
jge
into
jle
mov
pop
xor
and
fyl2xp1
ljmp
push
xor
push
scas
test
xchg
push
push
les
adc
jo
cmp
sbb
lcall
ret
or
adc
rcrl
dec
ficomps
insb
mov
xchg
test
sub
es
in
push
pop
and
and
insb
ret
iret
mov
mov
xchg
movsl
pusha
sbb
push
lock
mov
aam
inc
dec
lahf
mov
sub
inc
cmp
sbb
mov
sahf
xchg
adc
fs
or
lcall
or
stc
xchg
xchg
jno
dec
mov
cmp
push
int
out
mov
popa
adc
aad
ljmp
push
iret
pop
out
sbb
out
lods
xor
daa
test
jbe
movsb
dec
mov
xchg
adc
mov
jge
inc
xchg
dec
lcall
out
outsb
addr16
loope
xor
pusha
div
lds
in
mov
xchg
mov
bound
and
dec
mov
bt
pop
ss
cmpsb
pop
ds
adc
add
adc
inc
pop
ret
cltd
scas
fmul
mov
fsubrs
pop
mov
or
lret
xor
adc
icebp
xchg
stc
insb
in
and
lret
pushf
repz
sti
shr
popf
loopne
pop
ret
or
test
stos
sbb
gs
mov
mov
adc
jo
and
rolb
popa
xorl
sub
jo
jbe
xor
xor
shlb
add
jo
lcall
sbb
push
jae
sti
mov
xor
sbb
popf
loopne
push
cmp
in
push
bound
jne
fsubrl
pop
ret
or
and
ds
mov
xchg
rorb
stos
es
jmp
pop
int3
ds
or
sar
sbb
ret
xchg
xor
lret
xchg
pop
mov
xchg
cmp
mov
shl
iret
jp
repnz
pop
adcl
enter
and
cs
ret
hlt
call
mov
adc
xchg
es
mov
loopne
mov
lret
jae
and
stos
adcb
int3
or
add
mov
xchg
xchg
mov
jg
movsb
mov
or
mov
dec
gs
vpaddsw
jg
sahf
sub
jnp
hlt
loopne
xchg
daa
outsl
xchg
push
pop
jns
and
and
fcmovnb
add
lods
fists
aaa
dec
mov
cli
ret
mov
fcmovu
test
cmp
jne
hlt
add
les
jmp
sbb
dec
mov
ret
out
or
xor
jbe
je
dec
pop
inc
out
daa
push
test
cwtl
or
or
daa
push
or
dec
ds
and
cld
xchg
xor
xorl
les
mov
aas
notb
mov
int3
sbb
jmp
cld
and
daa
rcrl
jo
jg
ds
sub
dec
gs
xchg
inc
jmp
and
xchg
roll
inc
xor
push
cmp
xchg
push
sub
out
inc
test
dec
or
cld
xchg
int3
popf
xor
cmp
in
xchg
push
inc
cltd
inc
sub
std
push
add
call
mov
in
bswap
mov
insl
sub
fsubl
push
xchg
pop
lahf
and
pop
pusha
out
add
jmp
aas
xchg
lock
incb
sub
pinsrw
nop
movsl
inc
or
arpl
std
test
sub
aam
pusha
mov
xor
adc
adc
push
loopne
jae
and
aas
add
jo
sbb
loopne
push
dec
mov
sbbl
adc
outsb
insl
cmpb
jl
sub
xchg
std
jae
add
or
dec
loope
sbb
popa
fistl
xchg
insb
jl
pop
call
addr16
xlat
mov
cmpsb
aad
xchg
push
cli
and
add
cmpsb
mov
loop
divb
inc
fdivp
xchg
in
test
sahf
xchg
loopne
and
mov
outsb
ds
int3
inc
and
sbbb
mov
pmulhw
push
push
cmp
mov
xor
push
lret
pop
mov
orb
pushf
jge
test
clc
jns
push
addr16
or
adc
andb
int
lds
fstpt
inc
rol
outsl
mov
dec
cmp
in
cli
sub
outsb
dec
jmp
in
push
aad
inc
mov
outsb
dec
adc
addr16
je
or
aas
sbb
or
dec
scas
or
add
psllw
insb
push
gs
movsb
test
jb
push
nop
in
insb
pop
add
lcall
rcrb
movsb
sbb
ret
and
jl
shlb
fwait
xchg
int3
jno
je
outsl
sub
xchg
adc
cli
test
cli
push
stos
xchg
cmp
test
imul
in
jp
das
leave
mov
inc
mov
mov
iret
fiaddl
cmpb
int3
jo
mov
ret
daa
or
jno
in
test
mul
sub
into
vpmullw
lret
iret
mov
push
mov
xlat
cmpl
xchg
sbb
add
sbb
mov
repnz
test
jnp
mov
xchg
popa
dec
mov
push
cmp
push
fcomp
sub
lods
test
jno
xchg
inc
jnp
push
xchg
divl
xchg
data16
xchg
lret
into
inc
mov
dec
loope
or
adc
stc
test
ret
add
push
sahf
or
fistpll
push
aas
pusha
adc
push
cmpb
add
mov
jo
nop
shrb
in
cltd
sbb
adc
loopne
popf
int
sbb
addr16
clc
hlt
cmpsl
xchg
es
dec
mov
aam
inc
fiadds
xchg
add
pop
mov
xor
pop
xchg
movsl
mov
out
loope
int
rep
mov
push
pop
aaa
lds
or
adc
and
mov
lock
sub
inc
gs
dec
or
mul
sub
push
sahf
fdivrl
ja
cltd
sub
jmp
jne
add
cmc
ja
or
fmuls
mov
lret
stc
aam
mov
clc
icebp
mov
sbb
mov
lods
dec
bnd
inc
aas
inc
and
mov
das
subl
xor
mov
inc
mov
mov
or
or
rcr
pop
add
mov
cmp
add
arpl
xor
adc
dec
loop
xchg
js
pop
out
out
fnstcw
sub
adc
lahf
dec
bound
jbe
or
ljmp
mov
iret
mov
andl
adc
into
cltd
out
mov
shrl
xchg
mov
and
dec
push
push
sub
pusha
sarb
inc
mov
cld
icebp
mov
cltd
cld
push
adc
pop
or
icebp
mov
push
push
dec
dec
fnstsw
mov
mov
lods
rcll
mov
cmp
data16
xor
adc
push
sub
xchg
jns
addl
dec
xor
lcall
mov
mov
fisttpll
pop
mov
aad
in
mov
push
add
popf
lock
xchg
lcall
add
mov
pop
addl
dec
fdiv
dec
mov
enter
push
stc
inc
stc
inc
data16
mov
in
inc
push
push
jns
test
push
jbe
roll
test
and
in
and
repnz
bound
mov
add
xorl
fcmove
inc
push
xchg
fmuls
push
adc
mov
xchg
lahf
sub
inc
mov
mov
je
mov
insl
lods
adc
lods
cmove
or
std
pop
adc
daa
sbb
push
test
inc
mov
shrl
mov
push
rcrl
addr16
dec
xchg
inc
repz
xchg
inc
push
or
inc
xlat
add
sbb
out
int3
add
jg
mov
mov
mov
call
clc
test
test
lods
xchg
lock
cmpsb
decb
mov
xchg
fwait
cwtl
ja
loop
jb
pushf
dec
cmpsb
call
mov
pop
xchg
test
jp
xchg
or
mov
test
out
push
sub
mov
sbb
loopne
sbb
adc
push
fstpl
inc
hlt
sub
push
push
int
cmp
clc
cmp
ja
dec
inc
mov
stos
push
enter
cmpsb
and
stc
jmp
sbbb
xorb
adc
dec
bound
shrl
push
popa
jns
stos
xchg
movsb
dec
cmp
arpl
sti
jbe
div
aam
jg
ret
mov
sbb
stos
rclb
lods
add
ret
arpl
gs
in
jo
in
cwtl
imull
and
adc
push
jecxz
das
outsl
daa
in
pop
pop
inc
loope
pop
jge
fcoml
or
xor
gs
lods
xor
cmc
jl
pusha
insl
lea
jp
add
xchg
cmp
js
dec
lods
or
push
cwtl
mov
pushf
pmaxsw
js
pop
dec
mov
xchg
sbb
movsb
push
cli
pushf
jns
repz
rclb
stc
bound
movsl
cmp
cmp
outsl
imul
mov
cmp
into
push
pop
xor
js
enter
pop
mov
pop
arpl
mov
cmpsb
jle
mov
test
lods
sub
inc
icebp
movsb
and
inc
aaa
daa
lods
sbb
add
jl
pop
fs
out
pop
lret
xchg
dec
adc
cltd
xchg
adcb
inc
push
mov
mov
insl
jge
fildll
push
dec
inc
fucomip
cs
adc
pop
rcll
pop
jb
push
jbe
scas
xor
fsts
stos
xor
push
xchg
xor
dec
scas
and
popf
lret
mov
pusha
popa
das
mov
lret
lods
dec
sub
sub
jnp
jo
pop
cli
cwtl
or
arpl
cmp
sbb
aad
fstpl
adc
push
lahf
xchg
iret
push
mov
add
and
mov
cmc
mov
std
xlat
mov
add
sub
outsl
flds
out
push
push
bound
adc
cs
ds
into
xlat
jp
fadd
push
xchg
add
xchg
pop
inc
cmpsl
ljmp
xor
mov
imull
stos
and
or
or
or
into
cld
adc
mov
mov
into
push
fstl
neg
bound
push
cmpsb
test
adc
fcomps
jmp
push
lcall
mov
pop
jg
pop
sbb
inc
test
mov
mov
ljmp
add
aas
insb
push
fldl
dec
aas
aam
stc
and
lret
stos
sub
push
sub
cltd
jbe
mov
inc
mov
cli
in
inc
sbbb
xchg
cmc
insb
and
lods
ret
inc
inc
xchg
insb
or
clc
mov
and
out
pop
push
sub
mov
imul
repz
test
mov
adc
test
fistps
jno
jnp
jns
xor
jecxz
dec
bound
add
out
ficoms
jg
pop
mov
movsl
cwtl
fwait
stc
fsubrl
sbb
inc
shll
xchg
outsb
test
idivb
jmp
imul
cs
mov
inc
icebp
xchg
rorb
xchg
xchg
add
outsl
push
xor
outsb
into
pusha
addr16
mov
sbb
outsb
sbb
cli
jno
cmp
xchg
xor
js
jp
enter
popf
push
xchg
popa
test
stos
cltd
ret
lods
add
jge
cmp
mov
mulb
cmpsb
imul
jbe
xchg
mov
neg
out
mov
data16
lds
pop
and
jg
cmp
add
push
mov
subb
aam
sub
jns
insb
mov
push
xchg
fstl
cli
loop
outsb
ret
add
mov
out
iret
xor
lret
push
inc
fistl
leave
bound
pop
sub
nop
add
jne
dec
int
and
add
push
pcmpgtd
adc
dec
stos
jno
inc
mov
dec
jl
fdivs
mov
mov
jecxz
popf
lods
test
add
repnz
sub
push
nop
mov
es
jmp
aas
dec
insl
push
inc
hlt
jle
andb
push
aam
jb
or
lcall
push
sbb
sbb
cmp
adc
push
lock
lock
mov
and
push
xor
lea
je
sub
fadds
mov
and
loop
inc
into
shrb
daa
and
lods
dec
movsl
pop
insl
adc
add
movsl
xor
ret
mov
sub
or
cld
paddd
xlat
mov
leave
mov
outsb
or
sbb
xchg
pop
ja
test
les
bound
xchg
mulps
sti
and
inc
mov
xchg
out
sbbl
ds
popa
cmp
mov
insl
dec
int
ja
sarb
outsl
xlat
mov
sbb
jle
inc
ja
sbb
adc
sbb
ds
cmp
fimull
repz
sbb
jl
xchg
mov
jmp
mov
jmp
test
cltd
xchg
call
orl
repz
data16
dec
in
iret
sbb
fildll
inc
add
push
pop
das
cld
fisttpl
inc
push
stc
mov
or
and
sbb
in
adc
dec
jb
or
mov
insl
dec
imul
clc
and
push
dec
js
loope
fnstenv
call
shr
iret
test
add
jge
jl
xor
mov
lods
arpl
push
xlat
mov
lahf
push
mov
mov
lret
das
adc
aad
or
stc
dec
loopne
push
es
inc
push
mov
sbb
inc
mov
pop
jg
adc
pop
xorb
test
or
inc
je
mov
dec
cld
loopne
scas
outsb
testl
xchg
and
lock
pop
in
bound
jne
dec
and
orb
pop
add
pop
mov
in
insl
scas
divb
xor
daa
adc
mov
cltd
popf
cmp
dec
mov
je
pusha
cmp
lret
cltd
and
add
cmp
ja
stc
out
mov
lcall
sbb
jb
or
mov
jne
imul
orl
sub
push
sub
adc
jno
add
fsubs
bound
jg
push
mov
jb
sub
imul
int3
push
cld
or
cld
xchg
pop
popa
jecxz
fcompl
mov
inc
imul
mov
pop
or
shlb
clc
addr16
sbb
add
sti
dec
adcb
jle
out
jecxz
cmp
jmp
insb
and
mov
fdivrl
jmp
lea
arpl
out
nop
fsubl
movsb
imul
xchg
fucomi
fidivrs
pop
je
clc
jmp
aaa
out
add
cmp
push
jb
push
mov
dec
mov
sahf
pop
mov
mov
rcrl
and
add
mov
test
mov
movsl
lcall
int
rcl
jmp
mov
popa
sbb
push
std
cmp
mov
xorl
adc
sbb
in
xor
sub
jmp
imul
mov
imul
ret
insb
ljmp
jmp
movsl
jbe
stos
mov
sbb
daa
out
nop
xlat
or
scas
fs
dec
xchg
lea
jns
test
add
mov
fsubrl
aaa
adc
mov
stc
test
insb
mov
and
rcrl
mov
and
jl
push
push
jbe
test
dec
repz
les
xchg
pusha
cmpsl
mov
mov
xchg
bound
sub
pop
jle
and
mov
mov
sahf
push
mov
ret
jle
jne
mov
lahf
int3
push
sbb
std
mov
insb
pusha
cmp
repz
test
es
out
dec
sub
pop
and
in
clc
cmp
cli
das
and
sub
mov
enter
sbb
leave
clc
jmp
test
xchg
sub
and
fwait
repz
divb
out
pop
mov
pop
mov
dec
popa
sbb
nop
jecxz
addb
arpl
jns
jmp
jns
sbb
adc
aam
idivl
ffreep
decb
or
aad
ja
pop
in
test
and
adc
aam
adc
jp
mov
xchg
shrb
nop
push
scas
dec
repz
data16
in
pop
in
mov
dec
mull
add
mov
cmpsl
aas
dec
inc
jbe
mov
dec
xor
sub
fdivrl
add
xchg
jo
adc
inc
push
repnz
into
cli
sub
call
sahf
loop
in
jle
add
xor
cwtl
or
inc
add
pop
or
pop
dec
or
and
jge,pn
mov
out
pusha
inc
mov
cltd
pop
xor
jnp
ljmp
sub
cs
dec
lock
xchg
adc
icebp
pop
mov
outsl
add
js
and
jo
xchg
mov
mov
cmc
mov
jp
gs
dec
ds
pop
mov
ror
out
test
stos
inc
and
test
leave
push
adc
mov
mov
push
in
xchg
jge
cmpsb
sahf
jg
add
xchg
insl
sub
aam
fwait
repz
pusha
lock
inc
sbb
pop
sub
xchg
sub
pop
movsl
sub
sub
push
xchg
ds
stos
mov
jno
push
pop
movlps
ja
out
cmc
cmp
lock
cmpsl
mov
add
pop
dec
xor
outsb
mov
jge
dec
rorb
lret
or
ja
fisttps
into
mov
rcrl
xor
lods
inc
subl
pop
cmp
pop
test
mov
mov
sub
out
nop
inc
fiadds
leave
lcall
jnp
rcrl
inc
hlt
mov
cmpb
xchg
push
adc
inc
fwait
lcall
out
cmpsb
or
std
push
fcmovbe
cli
jmp
mov
mov
scas
outsb
arpl
outsb
dec
pop
pop
dec
add
jmp
xchg
xor
add
nop
sti
sbb
mov
out
lods
aad
and
xchg
mov
jl
or
lods
jle
push
sub
scas
mov
pop
xor
aam
adc
sub
sub
pushf
cmp
jge
lea
pop
or
or
sahf
mov
lahf
fnstenv
mov
loope
fabs
push
icebp
cmp
das
cmp
inc
dec
cmp
mov
and
cmp
out
adc
adc
subb
out
mov
mov
jecxz
mov
cmc
test
xlat
mov
mov
cmp
sbb
je
sahf
mov
push
mov
loopne
hlt
mov
dec
stos
dec
das
sahf
les
pusha
mov
and
pop
leave
push
pop
movsl
or
fisttpl
and
out
xor
pusha
mov
pop
and
xchg
scas
xchg
repz
aad
je
lods
les
mov
mov
addb
pop
cmc
add
out
push
gs
adc
pusha
cmp
inc
add
pop
jno
xchg
ljmp
sbb
sbb
mov
or
xchg
jg
mov
dec
adc
icebp
adc
imul
jle
daa
push
xchg
and
scas
push
lods
mov
shl
xchg
push
jl
dec
and
cli
and
xchg
sub
sub
fsubl
les
insl
sub
outsl
adc
lds
mov
std
push
mov
out
push
daa
movsb
mov
std
xor
jge
jne
lock
sub
je
xor
fsubrs
lret
pop
icebp
andb
xchg
push
and
mov
ror
mov
mov
mov
adc
add
repz
lret
nop
sub
inc
pop
testb
push
je
mov
sub
bound
inc
pop
call
inc
js
pop
daa
int
std
mov
enter
dec
cld
aad
loop
mulb
xor
ss
xchg
gs
add
mov
jmp
movntq
push
add
sub
mov
inc
jp
xor
jne
mov
mov
or
dec
out
push
cli
cmp
call
add
jo
cmpsb
mov
mov
mov
dec
mov
ret
lds
insb
fwait
int
push
mov
mov
jge
pop
dec
imul
push
hlt
jb
rolb
jg
xor
or
loop
je
pop
ss
test
daa
xor
xor
mov
aas
jmp
xchg
push
and
mov
mov
jmp
xchg
inc
mov
add
jo
pushf
sbb
cmp
pusha
xor
outsb
sbb
cltd
xor
inc
adc
cmpsl
ja
in
lea
add
jo
xor
sbb
inc
or
mov
sbb
cmp
testl
sarw
inc
dec
shlb
mov
push
out
mov
ret
popa
lcall
mov
imul
xlat
mov
cmp
xchg
push
mov
call
mov
adc
inc
and
pop
add
adc
xchg
cmp
fsub
mov
mov
cmp
loop
jae
sub
or
jns
sub
sub
and
push
stos
jb
cs
icebp
adc
ljmp
test
hlt
ret
fnstenv
inc
scas
push
add
lcall
xor
and
push
pop
ss
cmp
lret
in
or
lret
adc
push
sarl
xor
mov
pushf
pop
aam
negl
push
adc
pop
cmc
jnp
loop
test
or
dec
aaa
jge
movsl
cld
mov
stos
dec
mov
xchg
shlb
cmp
movsl
pop
pop
jp
fsubp
outsl
lods
mov
ljmp
or
jae
push
outsb
cmc
fdivrs
mov
sub
popa
movsl
xor
adc
cmp
mov
movsb
addr16
mov
insb
cltd
in
aam
mov
aam
aaa
aaa
cmp
test
jnp
adc
pop
sub
dec
push
aad
cld
sbb
adc
mov
adc
add
out
daa
xchg
fldl
jns
call
jo
sub
jg
loopne
leave
out
out
out
pop
adc
test
push
ror
pop
in
scas
or
inc
pop
popa
shlb
das
lret
pop
sbb
pop
xchg
jl
jae
lcall
push
test
cmpsb
imul
mov
inc
shlb
inc
sub
and
aad
outsl
jae
scas
aad
je
cmp
aas
push
std
mov
outsb
mov
aas
jo
xchg
cwtl
or
cltd
mov
pushf
pop
dec
cmp
popa
fcmovu
faddl
sub
xor
ljmp
clc
imul
jmp
ja
mov
es
dec
cli
ja
clc
add
out
les
test
adc
lahf
ja
lods
into
pop
mov
inc
sbb
cmp
cmp
add
int
jno
adc
idivb
mov
aaa
inc
push
push
movsl
xchg
inc
loopne,pn
jne
in
fsubrl
jl
inc
mov
inc
sahf
inc
into
fildl
clc
les
das
outsb
add
ret
hlt
pop
out
pop
lods
sbb
mov
test
push
and
call
mov
dec
and
pop
mov
or
cmp
push
dec
ret
jne
std
xlat
flds
leave
and
pop
call
fistps
mov
dec
mov
xchg
sub
dec
mov
rclb
popa
scas
jno
cmc
hlt
andb
lcall
push
mov
add
into
jns
jge
jl
out
fwait
mov
mov
mov
cmc
rorl
loope
pop
mov
enter
jge
push
xchg
mov
daa
xchg
int
sahf
mov
jmp
stos
mov
jmp
aas
aas
ds
mov
test
xchg
cmpsl
sub
cltd
loopne
add
pop
jg
pop
pop
movl
rolb
and
push
xlat
sahf
mov
in
les
shll
sbb
push
jle
je
movsl
dec
jo
mov
inc
xchg
sbb
cmp
cltd
push
add
mov
mov
outsb
pop
xor
mov
aaa
pop
mov
mov
xchg
mov
sti
jb
lret
xchg
movb
jno
push
sub
lea
je
jl
adcb
jbe
mov
xchg
inc
jg
pop
lock
sarb
pop
adc
inc
loopne
pop
std
pusha
cmc
js
orl
ret
inc
adc
mov
adc
xchg
jl
jnp
movsl
repz
out
mov
cmpsl
push
fnstsw
testl
rorb
ret
mov
jecxz
add
jl
pop
inc
mov
jns
lcall
or
or
lods
add
cmp
jmp
mov
xor
and
aas
adc
cmp
shll
add
push
sti
mov
mov
or
jecxz
out
arpl
fmull
or
adcl
mov
hlt
insb
popa
mov
subl
and
mov
dec
jne
fs
ss
dec
fists
iret
mov
xor
dec
movsl
out
aam
mov
iret
into
cmpl
adc
xor
outsb
ret
mov
lea
fdivr
jp
test
cmp
in
xor
mov
js
outsb
dec
dec
lock
fnstenv
cld
push
dec
fimuls
push
pop
adc
jae
adc
pop
cmp
mov
cmp
mov
cmc
xchg
xchg
jne
pop
dec
out
aad
and
push
or
pop
push
repnz
adc
mov
decl
cmpl
add
jnp
ret
loop
rcrl
daa
movsb
push
lea
jg
push
leave
adc
arpl
repnz
out
int
push
sub
xor
jbe
sbb
stc
arpl
sbb
push
lods
xor
sub
push
cmc
scas
and
add
sub
fisttps
stc
int
or
add
popa
pop
out
out
mov
inc
sub
les
cli
test
in
mov
and
es
push
push
mov
jb
lcall
lods
adc
fsts
clc
cli
cld
ja
lret
adc
lock
loop
inc
dec
pop
mov
pop
dec
push
push
rol
cmp
in
scas
out
xchg
and
adc
push
out
sub
jecxz
adc
mov
and
adc
gs
dec
pop
jne
ds
sub
xchg
fisttps
rcr
and
mov
add
xor
jle
jmp
fidivrl
stc
stc
stos
and
movsb
cmp
test
into
cltd
and
xchg
xchg
adc
ret
gs
in
mov
rorl
dec
pop
movsb
fwait
cli
enter
cld
outsl
adc
movsb
enter
jae
shrl
or
lock
mov
mov
loop
pop
mov
or
push
mov
dec
js
add
cwtl
movsl
in
jne
fdivs
dec
imul
fcmovu
and
jge
mov
push
and
aas
jnp
add
popa
adcb
or
insl
fmuls
add
pusha
js
push
or
fldl
shl
fs
fucomi
cli
int
push
outsl
decl
outsb
or
lods
inc
jge
sub
add
jp
add
test
inc
sub
in
rcr
outsb
fildl
push
jb
loope
pop
dec
pop
push
mov
std
movsb
in
cmp
sbb
add
sub
ljmp
cld
insl
mov
add
and
scas
and
sbb
rcr
popf
ffreep
jb
dec
cmp
in
ljmp
pop
dec
loop
pop
or
cs
rorl
fwait
pop
push
mov
out
sub
dec
test
out
dec
sbb
in
out
clc
cmp
scas
jge
loop
push
std
adc
jmp
and
movsl
mov
addl
cmc
outsl
and
push
mov
sub
repz
insl
popa
mov
push
mov
mov
jl
shll
insl
jb
rolb
add
popa
test
aaa
stos
xor
lods
pop
inc
in
mov
shrb
adc
xor
movsl
or
jne
cmc
lock
iret
and
mov
sub
por
daa
movsl
xor
cmpsl
jnp
mov
jae
loope
cmp
je
cmp
lret
repz
ljmp
add
dec
or
cli
or
and
cmp
daa
hlt
and
push
pop
insb
mov
or
clc
xchg
leave
roll
mov
mov
and
mov
sub
xchg
cs
test
mov
dec
lcall
xor
xchg
rcrb
test
arpl
jge
mov
enter
test
mov
into
icebp
and
fucomip
inc
or
fisubs
sub
cmp
in
out
lods
lock
dec
jnp
nop
ficoms
push
ret
outsb
and
ret
fucomp
outsb
lahf
push
cmc
push
negl
mov
imul
sbb
jecxz
add
ljmp
push
mov
xor
pop
sub
jne
inc
ret
adc
cmc
or
sbb
adc
jns
xor
movb
das
xchg
mov
push
adc
stos
xor
or
rcrb
cmp
cmp
cli
in
fxch
cs
cmpsl
or
cmp
and
sub
mov
cmpsl
fidivrs
push
jl
movsb
test
push
mov
popf
xchg
dec
test
lods
ja
xor
shlb
cmpsb
jl
fisttps
xchg
dec
jae
mov
sbb
adc
dec
mov
movsb
cli
cmc
cwtl
jno
pop
cmp
sub
daa
or
aaa
iret
enter
dec
out
mov
arpl
lcall
jb
dec
push
mov
insb
pop
lds
ds
add
adc
pop
popf
and
shl
movsb
lea
cld
scas
mov
test
out
inc
jg
push
add
addr16
sub
inc
push
jno
pop
mov
pop
sub
pop
xchg
add
jno
std
negb
cmpsb
cmp
je
add
push
stos
incb
call
out
popa
movsb
dec
mov
jnp
xor
cmovl
test
xchg
aad
imul
fisttpl
adc
movlps
sbb
xor
stc
dec
repnz
mov
mov
mov
test
rorl
pop
inc
iret
lea
and
fmuls
cmp
lods
adc
negb
dec
ret
jno
push
int
fistpl
stos
fmull
jge
mov
or
fists
in
call
sub
mov
pop
cmp
mov
lods
outsl
dec
cmpl
shlb
test
xchg
mov
out
mov
adc
or
jecxz
out
mov
push
aas
sub
into
or
shlb
cli
pop
or
push
pop
xor
lea
mov
sub
adc
test
inc
cmpsb
push
fsub
nop
arpl
cld
lret
in
insb
pushf
pop
pop
lods
inc
and
cmp
xchg
mov
fstps
sub
repz
lret
cld
add
dec
sub
aam
sub
pusha
dec
mov
cltd
cmp
mov
ja
outsl
adc
mov
adc
int
jecxz
sbb
mov
mov
xchg
rcl
sbb
pusha
dec
mov
and
cli
inc
adc
cmp
mov
ss
adcb
icebp
cmp
pop
pop
ss
sub
and
aas
jno
std
icebp
loop
push
pusha
push
outsl
xor
stc
xlat
in
xchg
outsb
je
clc
test
out
add
lods
cmp
iret
hlt
jbe
fisttpll
cmc
jecxz
jle
test
cs
sahf
clc
mov
cmp
push
xchg
insb
das
scas
aam
loopne
inc
movsl
rorb
mov
stos
ret
push
imul
aaa
fmulp
push
arpl
clc
push
fdivrl
inc
and
hlt
cwtl
and
mov
bound
mov
out
xchg
mov
adc
ret
pop
pop
xchg
lods
jmp
jle
push
pop
in
push
nop
cmp
stos
sbb
cld
inc
add
aad
sub
nop
ret
cltd
fistl
into
cmpsb
lds
into
aas
loope
xchg
adc
xor
inc
push
out
adc
je
stos
imul
loopne
pop
xor
or
dec
sti
mov
repnz
push
add
add
insl
xchg
jno
negl
cmc
imul
adc
popl
mov
pushf
stos
filds
mov
repnz
jl
insb
and
imul
fldt
int3
push
out
stos
das
ret
or
push
adc
cs
mov
in
add
jae
aaa
test
sub
adc
mov
mov
sbb
ja
pop
test
aam
mull
in
inc
mov
in
cmp
sahf
lret
stos
mov
dec
pop
out
pop
cmpsl
dec
leave
mov
mov
addr16
cmp
mov
in
out
cli
lret
sti
cmpsb
xlat
notb
dec
pop
jl
std
into
negb
es
adc
adc
adc
cmp
int
orl
pop
scas
or
jge
add
xor
jecxz
rol
repz
jo
clc
dec
push
lea
hlt
aas
fcmovnb
add
in
adc
sbb
movsl
mov
jnp
imul
dec
adc
xorl
pop
fs
rcl
lds
pop
push
cld
lods
mov
cwtl
push
inc
sarl
outsl
insb
or
jp
xlat
mov
lods
mov
into
xor
cmp
pop
popa
mov
ljmp
inc
push
in
fs
push
dec
push
ds
or
scas
imul
pop
imul
aam
call
xchg
mov
push
inc
test
imul
pop
imul
lock
xchg
mov
int3
pop
xchg
sti
popl
inc
xchg
lods
jno
enter
fldt
ret
dec
or
cld
xor
dec
cmp
jbe
mov
ficoms
fmuls
cld
arpl
adc
pop
negl
sub
pop
popa
xor
orb
pop
das
xchg
mov
inc
mov
cmp
fistpll
paddsw
xchg
pop
rolb
movb
or
sbb
ss
lods
aas
insl
testb
fnsave
mov
and
in
xor
and
loopne
push
push
std
icebp
sbb
cmc
out
fcomps
lock
les
adc
popf
fistps
adc
and
xchg
mov
data16
movsl
adc
xor
sbb
fmuls
das
push
add
mov
xchg
out
ljmp
inc
pop
call
ud1
and
outsb
arpl
mov
sub
dec
sub
push
add
ja
pop
pop
push
pusha
mov
and
push
mov
pop
mov
cld
shll
loope
cld
loopne
in
xchg
pop
sbb
shrl
frstor
ret
add
aam
pop
add
outsl
testb
xchg
stos
loop
shrb
mov
and
jp
rorb
fnsave
sbb
stos
and
lds
xchg
cld
lahf
xchg
push
loopne
out
adc
push
push
arpl
fucom
out
inc
add
aas
pop
loopne
lock
mov
cmp
lahf
cmp
add
popa
mov
jne
popa
cltd
mov
jne
and
in
mov
jl
or
push
cmp
mov
cmp
mov
pop
popf
pop
ss
insb
xor
es
test
mov
jne
adc
ret
pop
adc
add
loop
or
xchg
lret
icebp
pop
lahf
test
cli
int
pop
xchg
jbe
fisttps
mov
add
mov
pushf
vpcmpgtw
and
cmc
and
dec
int
outsl
pop
ljmp
cs
leave
bnd
jne
jnp
rorb
daa
mov
sbb
lcall
push
mov
xchg
divb
or
mov
push
mov
ret
ficoml
adc
enter
cmp
or
clc
jno
sub
lea
sbb
sbb
xor
jae
xlat
mov
out
mov
dec
xor
sbb
jmp
adc
stos
lods
xor
mov
and
scas
lahf
aad
pop
fdivs
lret
dec
xchg
insb
jb
sbb
cmp
inc
stos
hlt
cli
aad
mov
pop
insl
loope
daa
into
mov
scas
ror
ljmp
js
mov
push
xchg
test
sbb
stos
mov
push
outsb
mov
rclb
mov
fsubrs
es
stos
dec
xchg
mov
adc
cli
mov
dec
aaa
stc
aas
xor
pusha
ja
dec
mov
pop
loopne
subl
mov
inc
pop
das
dec
out
adc
cli
loop
push
and
and
sbb
inc
xchg
add
das
push
mov
or
pop
test
xchg
jmp
and
out
xchg
test
dec
mov
sub
pop
neg
xlat
dec
incl
sbb
mov
fcomps
ljmp
aad
push
into
je
push
xchg
lock
push
adc
xchg
adc
repz
clc
mov
mov
cld
shll
mov
and
dec
xchg
pusha
cmpsb
int3
leave
jbe
call
scas
in
inc
push
adc
xor
mov
sahf
scas
loopne
fsubl
js
loop
sub
pop
ds
add
in
adc
das
jmp
stos
outsb
mov
mov
sub
xchg
cmp
adc
and
and
mov
cmp
pop
inc
inc
vorpd
jmp
sbbl
lret
cmpsl
std
testl
mov
lock
mov
xchg
dec
dec
decb
lds
clc
loop
out
cmp
push
mov
ds
js
dec
iret
clc
sti
sbb
adc
lret
aad
ds
in
mov
jge
inc
or
jbe
outsl
mov
mov
jb
xchg
stc
inc
xchg
inc
rclb
xchg
jae
push
sub
push
add
mov
lods
int
mov
ret
leave
adc
mov
dec
mov
inc
push
pop
lock
push
imull
hlt
fimuls
sub
push
stos
gs
sub
shll
push
hlt
mov
pop
gs
ret
sbb
or
xlat
es
add
stos
push
addl
cmp
imul
push
std
loopne
daa
mov
ret
imul
ss
daa
cltd
ficoml
scas
push
les
stos
push
fistpll
mov
adc
mov
push
adcl
xchg
sub
sbb
xchg
ja
mov
push
mov
lahf
cmp
xchg
xorb
iret
xor
xor
fs
mov
mov
cmp
pop
sub
lea
jecxz
mov
nop
mov
push
out
xor
lock
enter
mov
mov
aas
xchg
out
roll
les
mov
xchg
jle
mov
sbb
inc
xchg
jg
pusha
and
mov
hlt
lret
imul
fwait
xchg
jmp
call
sbb
in
and
xor
addr16
shll
xchg
sub
movsl
push
decl
xor
add
inc
sub
outsl
mov
sub
and
mov
out
cmp
mov
xchg
push
mov
adc
xchg
mov
cmp
mov
out
test
movb
sub
aam
mov
in
dec
loopne
into
and
mov
jmpw
ss
add
std
fisttps
imul
stos
pushf
adc
inc
inc
movsl
stos
xchg
lahf
fcmovb
lcall
pop
mov
in
mov
fsubrs
addl
out
les
popf
lcall
cmp
mov
xor
loop
je
cmp
jb
xchg
mov
add
mov
and
iret
in
enter
inc
pop
addr16
cltd
lods
sbb
dec
mov
cmpsb
lret
pop
push
dec
inc
jecxz
jle
cs
mov
mov
insl
mov
xchg
pop
dec
lahf
inc
std
daa
xor
and
jno
mov
adc
mov
push
sub
sahf
dec
add
pushf
sbb
fnstsw
push
push
and
mov
and
rclb
xlat
mov
dec
add
sahf
aad
xor
int
lods
out
mov
dec
or
jle
inc
or
adc
out
jmp
or
mov
cmp
test
lcall
cmpsb
daa
adc
or
push
sub
cmc
mov
inc
adc
push
cld
mov
rcll
aas
dec
inc
sub
mov
scas
inc
std
addr16
adc
mov
lods
clc
push
decb
adc
mov
lock
cmc
jo
dec
pop
mov
mov
fimuls
lock
cwtl
fidivrs
gs
xchg
sbb
push
hlt
mov
lods
loop
mov
mov
scas
int3
jl
aas
das
data16
xlat
pop
adc
dec
inc
inc
and
outsb
ss
mov
cmp
xchg
jp
scas
push
sbb
ret
push
sbb
add
jecxz
mov
cmc
pop
mov
aaa
mov
xchg
add
mov
or
aam
bound
pusha
loope
sti
cltd
sti
ja
pop
inc
gs
cs
xor
outsb
nop
mov
repz
cld
cld
filds
mov
add
and
icebp
xorl
dec
sub
jo
mov
cld
mov
aas
mov
dec
mov
jne
movsl
cmp
repz
sbb
cmp
xchg
scas
call
idivl
cmc
push
mov
fnstcw
xchg
stos
ret
lock
lret
pop
rorl
pop
insl
jns
push
rol
jge
add
adc
xchg
mulb
sub
popa
icebp
mov
into
mov
jb
hlt
cmp
sti
faddl
cmpsb
pop
dec
jns
push
test
out
aaa
push
add
movsl
xor
test
xchg
subl
or
aaa
outsl
xor
into
mov
mov
mov
fwait
xorb
leave
inc
sbb
adc
mov
push
pop
jnp
sbb
fldenv
insb
sbb
pop
cmp
repnz
sbb
and
pushf
xor
or
aaa
push
loopne
xchg
dec
dec
mov
mov
movsb
lods
fisttpll
xchg
mov
fimuls
shrb
scas
or
mov
inc
sbb
sti
mov
cmc
pushf
into
sbb
push
mov
dec
add
cmp
inc
shrb
sbb
stos
ds
jg
mov
dec
mov
neg
and
int
int
dec
or
sbb
lods
pusha
cld
bnd
pop
ds
ds
das
gs
adc
decb
int3
in
aas
lea
adc
scas
pop
in
in
fists
mov
jmp
xchg
pop
and
dec
cmp
dec
xchg
mov
shll
xchg
enter
push
loope
movsl
cmp
push
inc
movsb
sbb
int3
dec
jae
mov
pop
or
mov
hlt
fmull
and
push
lret
jecxz
xchg
call
add
repnz
xor
bound
jae
je
or
shl
stc
mov
insb
pop
xor
adc
jg
notb
mov
fdiv
out
lahf
xlat
loop
popa
jne
mov
bound
sub
shr
mov
mov
or
pop
jb
cmp
in
out
fcoms
int
mov
pop
mov
xchg
cs
sbb
jns
xlat
push
cmpsb
xlat
or
repz
inc
mov
hlt
cwtl
add
inc
xchg
loopne
arpl
push
sub
cmp
pop
movntq
out
or
and
mov
mov
mov
and
mov
std
or
add
cmp
es
nop
or
ror
and
divl
scas
iret
mov
and
jb
cmp
rcr
add
dec
fcoms
fdivr
jae
insl
sub
pop
pop
jns
test
out
shlb
jno
or
dec
inc
les
xchg
and
enter
pop
or
fimuls
push
adc
inc
call
and
xchg
jmp
cli
int3
leave
fisubl
jae
inc
inc
das
xchg
dec
dec
xor
jmp
fdivrp
dec
bound
sbb
inc
push
pop
lods
inc
xlat
stos
rcrb
jecxz
mov
sti
mov
ss
lods
out
cmp
adc
add
and
out
cld
sbb
push
jnp
xchg
mov
lds
push
fistps
mov
adc
adcl
lret
in
in
or
sub
insl
adc
icebp
call
xor
jmp
cmc
in
dec
push
mov
fsts
sub
dec
cmpb
mov
fcomip
pop
mov
pop
jl
popa
insl
push
bound
or
xlat
inc
mov
movsb
mov
push
and
ficoms
pop
pop
pop
sti
dec
jne
fstl
adc
pop
push
inc
aaa
adc
jmp
js
add
sbb
sti
cmp
mov
mov
cmp
sbb
jns
int3
dec
out
insb
push
outsb
loope
mov
sahf
or
mov
jbe
mov
stc
mov
pop
sbb
mov
sbb
jmp
xchg
insl
jns
xor
push
int3
push
lahf
enter
and
dec
shl
loop
ja
cmp
mov
imul
jne
sbb
sbb
inc
adc
push
sbb
cwtl
push
adc
mov
xor
push
xor
decb
mov
in
xchg
out
lcall
jnp
xor
cmc
pop
in
xacquire
test
rcrl
daa
cmpsl
sbb
bound
fisubrl
sbb
popa
xlat
sahf
or
xchg
push
fadd
ficomps
hlt
sub
lret
cmp
sti
leave
mov
ficoml
sub
pop
push
lret
xchg
sti
jmp
pop
lods
hlt
imul
test
lret
fsubl
cmp
sbb
fisubrs
idivb
jne
cltd
lcall
jbe
cwtl
dec
insb
inc
fwait
dec
mov
inc
rcll
and
fcomp
push
mov
das
xor
cs
in
js
inc
xor
push
nop
sarb
mov
int
fucomip
ljmp
cmpsb
scas
mov
add
jne
cli
stos
cs
lea
adc
dec
add
mov
dec
xchg
cwtl
sub
cmp
cmp
add
inc
cmp
iret
push
into
int3
aas
xorl
push
lock
jp
scas
dec
sbb
mov
dec
stos
sbb
test
sub
pop
bound
cltd
out
js
sbb
mov
cmpsb
mov
stos
leave
iret
rcll
inc
movsb
xor
xchg
xchg
xchg
or
push
mov
mov
jp
add
subb
and
lret
jle
shll
repnz
or
mov
pushf
arpl
into
movsl
pop
xor
adc
sub
dec
mov
mov
data16
pop
jl
std
push
mov
mov
dec
dec
mov
and
repz
in
inc
rclb
hlt
lods
movsb
push
sbb
loope
mov
insl
jge
dec
das
or
stc
arpl
sbbl
mov
scas
ljmp
les
lret
call
mov
inc
daa
movsl
push
rorb
xchg
sahf
xor
xor
addb
ret
and
fdiv
gs
jge
pop
scas
mov
jnp
and
shlb
cwtl
aaa
fdivrl
mov
xorb
push
shlb
push
and
std
std
jle
fmul
push
lcall
adc
test
mov
pop
je
dec
imul
pop
imul
int
jnp
shl
leave
int3
fisttpl
nop
lock
mov
cmp
jbe
mov
ljmp
aad
cld
cmpsl
mov
sub
call
adc
sub
sub
add
or
subl
push
bnd
imul
loop
icebp
pusha
jp
xor
cld
sub
xchg
insb
bound
les
jle
call
cmp
dec
push
jl
fidivrl
push
scas
jg
adc
xlat
je
lock
mov
incb
xor
xlat
shrl
dec
scas
clc
inc
pop
jae
jae
cmp
das
mov
inc
or
pusha
pusha
mov
adc
repnz
cmpsl
notb
mov
pop
mov
pop
outsl
pop
pop
repnz
adc
pop
dec
pusha
sub
xchg
shlb
pusha
outsb
cmc
mov
mov
addb
push
cmc
or
into
cld
cmp
xchg
jns
adc
sub
and
push
mov
lds
adc
popa
orb
xor
rorb
pop
adc
outsl
dec
repz
push
scas
pop
inc
ret
cltd
outsl
xor
sub
in
dec
and
pushf
sub
jo
jae
mov
inc
jmp
movb
rorl
sub
inc
jge
adc
xor
mov
loope
lret
jmp
xchg
sub
scas
adc
mov
or
sub
xor
rorl
or
dec
sbb
ds
add
push
in
outsl
mov
subb
pop
mov
dec
ret
stc
stos
push
mov
mov
push
pusha
push
aaa
jo
push
mov
in
lock
dec
addl
push
popa
dec
adc
dec
das
adc
mov
mov
fdivr
in
cwtl
xor
cmc
sti
mov
popa
xchg
jne
pop
aad
mov
in
aam
mov
icebp
movsb
push
movsl
dec
scas
sahf
cmpsb
cmpsl
mov
inc
pushf
mov
xor
add
inc
out
enter
mov
xlat
leave
retw
inc
push
cli
xchg
movsb
stc
loope
push
movsb
cwtl
sbb
arpl
inc
cld
dec
enter
data16
and
adc
jmp
aad
xor
loope
call
xchg
and
out
jp
push
push
movsl
xchg
lret
cmc
push
add
aad
push
fisubrl
push
das
dec
sbb
and
xchg
stc
jae
andb
stc
sbbl
addr16
je
add
out
bound
pop
in
les
movsb
lods
outsb
jl
scas
fs
adc
add
dec
insb
xor
dec
adc
adc
push
push
xor
loopne
fwait
mov
clc
mov
mov
aaa
mov
subb
sub
movsl
add
arpl
xorl
xchg
and
lds
std
mov
sub
sbb
gs
or
jp,pt
inc
jmp
sub
int
jbe
out
mov
jbe
shl
lret
lea
inc
jg
and
aad
clc
mov
mov
aas
das
mov
pop
jo
add
mov
add
mov
jb
movsl
ret
lahf
pop
mov
mov
dec
mov
movsl
std
cmp
mov
jecxz
mov
mov
jne
daa
xor
pop
inc
faddp
mov
test
sti
mov
add
mov
xchg
leave
popf
add
addr16
sbb
or
jl
push
enter
pusha
lock
or
push
pushf
in
insb
xor
push
jecxz
mov
test
loopne
sub
data16
iret
sbbb
stc
rorb
pop
popl
and
sub
ss
rclb
stos
lea
in
je
xor
dec
das
mov
lret
sti
out
lock
loop
sub
shll
aam
in
and
or
sub
outsb
mov
pop
push
inc
mov
xor
sub
arpl
mov
cmp
inc
int
sbb
lods
and
adc
jae
adc
mov
sbb
push
cmp
xor
sub
mov
lea
dec
lds
movsl
ss
push
xor
mov
lock
insl
dec
lcall
int3
jb
dec
mov
lret
add
pop
rcrb
xchg
xchg
outsb
pop
je
mov
flds
and
lods
daa
lret
pop
mov
les
fnstsw
mov
pop
adc
rorl
adc
cmpsl
push
subl
mov
lahf
mov
lods
sbb
jae
jae
jl
js
push
fisttps
jge
sbb
dec
xchg
jl
jle
stc
or
into
mov
rcr
in
loopne
lock
leave
popf
inc
mov
xor
adc
push
and
leave
xchg
dec
sub
xor
and
xor
adc
lods
xchg
cmp
jno
mov
fdivs
xchg
popa
xor
test
and
in
cmp
add
movsl
mov
test
rcll
inc
mov
and
test
test
jg
into
test
in
add
inc
lock
cmp
and
sub
inc
cs
ret
sbb
pop
xchg
cmp
xor
inc
shlb
pop
rcrl
subb
loop
in
xor
cmp
ret
ficoml
mov
cmp
pop
aam
adc
outsl
ror
push
divl
pop
in
xor
psubusw
cmp
mov
gs
add
stos
stos
out
jle
imul
cwtl
sbb
lock
cmpsl
aas
xchg
add
stc
xor
out
movsb
icebp
mov
cmp
mov
js
jo
sbb
call
xor
push
add
inc
imul
hlt
push
outsb
adc
xor
ljmp
int3
test
lea
or
push
xchg
test
and
dec
push
lahf
dec
jmp
sub
data16
mov
fildl
loop
pop
pop
mov
rorb
pop
push
ret
fwait
and
and
add
and
rolb
xchg
pop
mov
in
cmp
pop
inc
es
call
std
mov
push
cld
mov
ficomps
xchg
andl
fadds
arpl
add
loop
jmp
mov
xor
jo
fnstsw
ficomps
fwait
stos
imul
add
mov
outsb
roll
xchg
aas
es
popf
push
mov
mov
fisubs
push
adcb
adcl
fldenv
push
pushf
mov
jmp
mov
cmpsb
out
jns
jl
fwait
int
addr16
clc
mov
in
ljmp
pop
add
jbe
push
jecxz
push
and
jp
scas
dec
mov
lret
dec
lods
push
ja
jecxz
xchg
ja
pop
adc
sbb
mov
lcall
pusha
sub
pop
mov
scas
lahf
out
push
js
ja
fbstp
scas
loope
dec
jne,pn
dec
and
or
jl
icebp
push
inc
mov
outsl
xchg
mov
xchg
cmp
pusha
cs
cmc
jae
dec
sbb
mov
push
mov
sub
mov
push
xor
icebp
mov
movsb
push
sub
das
cmp
vcmpnleps
outsl
jge
lds
shrb
icebp
mov
jl
aaa
lret
xchg
daa
or
nop
out
rolb
mov
fisubrs
mov
jp
mov
aad
scas
sub
adc
es
xor
cli
filds
cmp
stos
inc
and
cmc
xchg
gs
sub
lret
into
push
cwtl
mov
inc
push
mov
cmp
mov
dec
sarl
into
out
xchg
iret
cwtl
rcl
push
xchg
test
pop
adc
divl
insl
leave
arpl
sahf
push
mov
in
xor
sub
fs
in
cmp
ljmp
pop
push
int3
sub
push
lcall
dec
enter
shrb
dec
pop
adc
cmp
jns
pop
mov
arpl
or
add
in
pop
sbb
nop
jb
add
es
lahf
out
fwait
sub
add
call
dec
pop
iret
lcall
mov
jg
xchg
aam
test
cld
or
mov
stos
sbb
jg
pop
mov
test
cmpsl
jge
rcrl
sbb
sarl
mov
sub
xor
pop
fdivrs
push
jae
loopne
sub
mov
andl
movb
lock
adc
pop
in
add
pusha
popa
dec
adc
push
fdivs
mov
and
scas
lret
aam
jb
cmc
push
push
ljmp
clc
xor
mov
jg
hlt
jnp
movsl
loope
xor
imul
mov
test
outsl
lods
adc
ret
pop
mov
or
das
pushf
shl
pop
call
ss
or
sbb
mov
xchg
aas
pusha
fsubs
jg,pt
or
cmp
sub
fwait
sub
jae
jb
and
lahf
add
mov
inc
mov
mov
fwait
lea
mov
xchg
pop
mov
call
pop
mov
xchg
sbb
inc
ljmp
add
loopne
in
and
and
fsubrl
insb
xchg
dec
cmc
lods
cmc
xchg
mov
iret
xlat
and
jbe
lret
in
lods
mov
cmc
imul
out
sbb
mov
lcall
mov
cltd
pop
xchg
adc
mov
xchg
pop
out
std
cmpl
aas
cs
mov
mov
popa
push
push
mov
cmp
mov
aas
push
scas
jle
shl
mov
push
xchg
and
push
cmpsl
mov
inc
cmp
aaa
push
repz
in
jbe
dec
cmp
decl
pop
mov
cli
imul
in
fsubrs
push
iret
insb
jae
mov
jecxz
clc
inc
cmp
fimuls
int
or
and
sahf
xchg
add
sbb
popf
mov
xchg
lods
inc
imul
imul
and
mov
pop
outsl
inc
jl
or
out
inc
add
mov
imull
xchg
jnp
mov
jmp
pop
add
mov
dec
inc
imulb
sbb
and
jmp
in
lods
add
or
or
sub
sub
mov
mov
test
mov
pop
addl
adc
mov
iret
inc
ficoml
lea
movsb
adc
push
inc
jb
pop
or
inc
xchg
shlb
imul
dec
bound
xor
int3
filds
add
test
inc
lods
rclb
mov
pop
das
push
pop
xor
mov
pop
loope
lock
sahf
adc
mov
lds
in
jo
adc
jno
xor
cmc
enter
and
push
xchg
xchg
stc
cld
xchg
mov
or
push
lcall
fdivrs
xlat
cmpsb
mov
fldcw
lods
push
push
jg
jp
xchg
push
xchg
fbld
cmc
cld
mov
sub
xchg
insl
cwtl
dec
adc
cmp
push
ja
mov
hlt
ds
in
je
into
ss
jg
add
add
repnz
mov
adc
or
movsl
mov
dec
sub
add
jb
inc
iret
or
pop
jecxz
pop
icebp
icebp
inc
out
inc
incl
sbb
out
mov
cmpl
lock
xor
xor
sbb
xchg
es
repz
push
sbb
dec
pusha
ds
popf
in
rclb
addr16
jmp
roll
adc
xchg
dec
outsb
addl
testl
xchg
cmp
jl
jbe
mov
jno
loop
and
in
mov
sbb
dec
or
dec
jge
inc
inc
jb
and
mov
std
lock
pmullw
mov
push
mov
sub
pop
sbb
cmpsl
scas
jp
test
jne
imul
enter
mov
mov
mov
or
hlt
jo
xor
push
sbb
cld
or
mov
andb
test
cmpsl
and
jg
lods
push
shrb
outsb
and
outsb
jmp
mov
inc
mov
test
xor
and
enter
loope
test
mov
ja
xchg
inc
sub
cli
sbb
jae
daa
ret
mov
mov
xor
xchg
out
movsb
insl
outsb
dec
fs
xor
testb
mov
jmp
jo
js
and
test
mov
sbb
stc
mov
arpl
push
inc
push
fwait
ret
pop
xor
daa
add
xor
dec
in
aad
inc
push
in
xor
ja
mov
into
dec
popa
pop
inc
notb
lea
and
jb
pop
pop
or
outsl
jl
outsl
rorl
adc
cltd
mov
fwait
push
mov
inc
sub
fcompl
cmp
adc
dec
or
cmp
cmp
std
arpl
popa
pop
jno
push
test
stos
xor
lea
fnsave
or
xchg
lret
adc
push
adc
pop
ret
out
testl
xchg
mov
xchg
int
pop
pop
jle
mov
mov
hlt
push
inc
mov
incl
jne
fstps
fstp
mov
adc
mov
loop
leave
test
stc
sti
xchg
xor
sbb
rdpmc
cmp
push
mov
pop
sar
lahf
push
lock
in
push
mov
sub
and
add
adcb
repnz
fisubl
inc
xor
dec
ret
jb
xchg
pop
int3
xorl
or
scas
xchg
push
cmovs
inc
repz
jns
jae
dec
inc
mov
shrb
mov
movsb
imul
dec
loopne
inc
or
cmpb
mov
mov
leave
in
pop
cmp
xchg
in
test
push
mov
fldt
addr16
xchg
aad
subl
aaa
or
adc
add
xchg
bnd
js
mov
mov
les
cltd
push
sub
orl
movl
stos
pop
addr16
and
int
aad
out
popf
sbb
xchg
data16
xor
aad
mov
gs
cli
cmp
mov
arpl
and
fs
in
jbe
mov
imul
push
mov
or
xor
test
adc
js
pop
daa
fcomps
cmpsl
push
in
sbb
icebp
loope
sbbl
sub
jne
test
push
je
jl
jp
inc
enter
in
sub
fsubr
mov
notl
in
ret
sbb
rcrb
cli
mov
jns
lock
aam
xchg
cmp
cmp
loop
add
or
into
popa
adc
inc
cmp
adc
ss
es
pop
jns
ret
shr
xlat
cmpsb
call
les
dec
fwait
decl
hlt
incb
clc
and
jo
pop
push
mov
fsubs
addr16
test
stos
cwtl
xchg
inc
aad
inc
in
aad
loopne
sti
addr16
mov
mov
push
sub
sbb
std
iret
outsl
dec
loop
sub
xchg
stc
or
jne
fdiv
test
shll
popf
dec
pop
dec
ja
sbb
push
dec
and
mov
mov
jae
mov
std
out
xchg
inc
rcll
mov
mov
in
mov
pushf
jbe
xchg
and
stos
jle
cltd
or
and
rcrb
inc
mov
mov
loope
sub
into
sbb
adc
rcrl
push
and
out
mov
and
xchg
inc
test
nop
push
aas
stos
mov
mov
sti
out
adc
dec
mov
dec
and
xor
lock
adc
outsb
into
stc
clc
int3
mov
pop
hlt
xchg
in
or
adc
out
pop
gs
ljmp
ficomps
sahf
or
gs
xchg
mov
push
pop
pop
and
add
aad
das
mov
stos
fists
xchg
dec
inc
outsb
sub
ja
addr16
dec
out
cli
push
fadds
je
fsubrs
jno
int3
xchg
loopne
mov
dec
xchg
cmp
div
je
inc
mov
or
push
lods
std
cs
mov
in
adc
in
loopne
loop
mov
mov
and
scas
insl
fdiv
add
inc
cld
add
cltd
inc
xchg
and
test
pop
cli
clc
dec
mov
insb
xor
mov
sbb
pop
stos
int
into
call
xchg
cmpb
lods
dec
je
mov
std
cli
mov
or
add
push
inc
inc
ss
jbe
stc
mov
mov
sub
pop
cmp
jg
xor
add
cwtl
int3
js
xor
mov
mov
imul
sub
jg
or
push
rorl
push
adc
imul
push
mov
jmp
inc
lcall
popa
dec
mov
sbb
sbb
inc
test
and
cmp
add
lcall
aad
insl
jnp
xchg
es
xchg
das
xchg
mov
pop
mov
adc
js
xor
inc
jecxz
push
cmc
loope
sbb
jb
mov
lea
mov
add
push
mov
push
sbb
sbb
test
jbe
popa
cmc
xchg
das
xchg
sub
adc
repz
mov
xor
dec
adc
mov
mov
pop
push
jns
xchg
jo
outsb
add
jb
dec
jecxz
cmpsl
scas
jmp
sub
dec
cmp
mov
int3
or
cmp
fmuls
lahf
xor
test
clc
sahf
popf
std
sub
dec
addr16
push
or
pushf
arpl
push
xor
dec
inc
add
xchg
mov
mov
add
xchg
push
fsubrl
dec
mov
repnz
cmpsb
xchg
loopne
push
cmpsl
dec
jecxz
int
loop
aam
in
inc
sub
out
or
pop
je
hlt
push
sbb
scas
popa
mov
jb
rolb
jl
ss
jg
hlt
jge
jl
mov
xor
sbb
fstps
push
movsl
leave
push
jg
orb
inc
negw
adc
dec
push
sbb
push
clc
pop
out
dec
jp
xchg
mov
jb
cmc
mov
ss
and
or
out
cmp
cmp
inc
sbb
jmp
xchg
scas
push
cltd
lahf
daa
loopne
notl
into
pop
mov
pop
ret
pushf
jge
call
in
sbb
les
inc
pop
repz
xchg
shl
fidivrs
or
mov
dec
cmp
fidivs
and
addr16
jp
cs
pop
addr16
ljmp
mov
ret
loop
push
int
icebp
sbbl
xor
mov
arpl
inc
cmp
xor
lahf
sbb
jmp
or
mov
inc
adc
incl
or
gs
adc
cld
stos
jnp
adc
test
adc
in
xor
jecxz
ja
jmp
jecxz
inc
dec
sbb
adc
cs
dec
mov
dec
ret
mov
jmp
mov
out
aad
jb
cmp
mov
add
or
iret
or
xchg
scas
notb
adc
pop
bound
sbb
data16
aaa
stc
sub
mov
pop
jb
test
xor
es
adc
sbb
cld
das
das
cmpsl
pop
daa
xchg
mov
outsb
aam
push
jnp
loopne
repnz
out
gs
pop
sbb
scas
les
loop
xchg
lea
xchg
outsl
popa
nop
aaa
xor
dec
mov
leave
dec
cltd
add
dec
sbb
mov
jb
jecxz
push
out
and
aaa
clc
loope
test
aas
mov
mov
mov
je
stos
out
das
push
lahf
cmpsl
fisttps
out
inc
in
inc
mov
sbb
sahf
call
mov
repnz
in
add
jmp
ja
add
ljmp
cmpsl
aam
jb
lret
xchg
loope
jl
or
jle
aaa
into
mov
repnz
xchg
orb
add
jmp
pop
shr
rolb
jge
inc
mov
lds
in
ja
adc
pop
push
inc
mov
data16
loop
sub
jle
xchg
icebp
pop
out
fisttps
or
pop
insl
rcrl
cwtl
repz
lods
adc
cmovbe
inc
bound
mov
and
into
dec
dec
test
in
pop
int
gs
push
mov
ljmp
mov
adc
ret
jno
mov
rcrb
and
add
sbb
sbbl
pushw
fldt
or
inc
jmp
cmpb
aam
popf
xchg
xchg
iret
and
add
ljmp
fsubrs
call
xchg
sti
gs
ret
jecxz
xor
push
dec
out
es
push
fstl
out
popa
cltd
mov
push
hlt
je
imul
cmpsb
loope
or
sub
cmp
cli
mov
or
call
ja
cmp
and
lods
loop
pop
into
mov
rorl
mov
mov
xchg
cmc
insb
jne
inc
pop
sbb
scas
jmp
cmp
pop
leave
sbb
mov
das
push
negb
pop
sub
lods
js
daa
nop
pop
out
fsts
aam
in
sbb
xchg
dec
xchg
ss
xor
sti
hlt
popf
call
sub
jmp
outsb
sub
jnp
ficoms
dec
pop
clc
loopne
int
xchg
bound
lods
sbb
outsl
xrelease
xchg
push
adc
mov
pop
and
add
sbb
daa
mov
or
xor
les
xchg
xchg
aas
ljmp
push
int3
loope
sub
ja
ljmp
or
lods
push
movsl
aaa
inc
add
adc
pusha
loop
jp
bound
ljmp
xor
mov
mov
xor
fucomi
daa
or
pop
or
out
pop
test
push
or
cmp
cmpsb
mov
aaa
pop
push
push
jp
sub
cwtl
push
popa
xor
out
add
dec
std
ror
xor
push
sbb
sar
fildl
and
rorb
pusha
push
leave
dec
xchg
es
pop
push
or
mov
test
lods
inc
xchg
leave
ds
or
xchg
ret
xchg
or
movsb
rol
lcall
sahf
fwait
es
cld
add
hlt
movsb
lds
mul
fldenv
cld
aad
aam
inc
or
data16
aam
mov
jmp
les
push
and
dec
call
iret
jg
xor
pop
sbb
in
push
lods
mov
mov
and
fistpll
or
repz
push
ror
out
aas
push
mov
addr16
jne
mov
insl
outsl
aas
icebp
mov
mov
sbb
out
cltd
pop
and
aas
push
mov
add
mov
arpl
and
sbb
jge
clc
jp
leave
fistpll
data16
dec
cld
jnp
divl
sarl
imul
xchg
pop
or
jp
and
xchg
popw
sbb
les
sub
sbbl
test
sahf
sbb
xchg
adc
clc
lds
push
pop
fnstcw
xchg
addr16
jmp
dec
aas
jecxz
cmp
test
xchg
mov
inc
cwtl
adc
addr16
repnz
lret
sbb
adc
aam
add
repz
fsubl
mov
pop
lock
push
cs
fnsave
lret
stos
mov
push
hlt
mov
xchg
xchg
push
jl
and
and
and
into
pop
mov
sti
cltd
movsb
pusha
jno
xchg
cmpb
pop
jge
push
ds
lods
shr
mov
sub
xor
mov
fmuls
rorb
repz
sbb
jo
xchg
lret
daa
mov
push
popf
cs
push
mov
in
xchg
push
rcrb
xor
lret
jae
xlat
xchg
jns
xor
pop
mov
xlat
xor
lret
je
pop
movsl
rcr
bswap
xor
sbb
or
xor
adc
lods
cmp
dec
shlb
or
lret
jns
repz
aas
notl
aas
imul
mov
mov
and
pushf
jae
xchg
mov
add
xchg
xor
addr16
mulb
and
jmp
mov
inc
pop
test
cmpsb
mov
sbb
loope
and
and
push
std
mov
divl
mov
cmp
lret
movsb
sti
xchg
add
das
out
movsl
jecxz
aam
and
fs
lods
sbb
and
add
loope
insl
stos
pop
icebp
mov
xor
jl
jecxz
pop
inc
jl
mov
jmp
push
mov
mov
imull
dec
sub
inc
mov
inc
lds
or
sub
xchg
divb
hlt
jb
dec
mov
dec
jnp
pop
in
jecxz
lock
loop
dec
cmpb
sub
mov
xor
mov
sbb
cs
or
pop
imul
shlb
push
jbe
and
cmp
add
test
sub
mov
xor
sbb
cmp
pop
xor
cmp
not
add
xor
ljmp
mov
and
mov
cmp
leave
push
xchg
mov
push
jbe
adc
fistl
or
mov
jle
inc
jb
cmpxchg
sub
mov
into
dec
sub
popa
fstpl
xor
popa
sbb
lea
mov
call
icebp
in
jge
jb
leave
ja
ljmp
movsb
jo
xor
mov
hlt
dec
lret
adcl
das
sub
stos
inc
repz
daa
je
scas
mov
out
call
daa
nop
pop
sub
add
lods
adc
and
xor
dec
sti
fstpt
je
inc
inc
inc
mov
jbe
push
test
or
jmp
pop
xchg
int
xchg
mov
imul
fnstsw
mov
shll
mov
test
test
and
clc
cld
int3
adc
dec
pusha
jne
dec
pushf
aaa
sub
inc
fyl2x
cmpsb
fildll
ret
mov
mov
cld
mov
fwait
nop
adc
push
jge
xchg
int3
mov
xor
push
idivl
sbb
dec
add
clc
out
dec
push
dec
jecxz
cmp
outsb
mov
icebp
xchg
cmp
dec
orb
mov
sbb
push
xchg
mov
or
xchg
scas
ret
jno
movsb
arpl
cmp
test
mov
es
cltd
mov
and
ret
into
cmp
les
ja
push
cmp
mov
daa
cmpb
xchg
push
ret
ds
aaa
pop
negb
repnz
mov
pop
mov
imul
jg
fdivrl
xor
lahf
nop
stc
repnz
jecxz
inc
pop
cmp
mov
shll
aam
int3
jge
cmp
add
sbb
adc
enter
inc
js
pop
stos
xlat
iret
push
push
jo
xchg
push
insl
jbe
aaa
inc
out
sub
mov
push
lods
adc
xor
leave
cmp
nop
xchg
sub
pop
pop
cmp
inc
jno,pt
stos
xchg
fldl
inc
testl
cmp
sbb
icebp
les
xor
scas
dec
push
cmp
fisubrl
cmp
imul
push
sub
insl
cmp
jbe
lcall
add
dec
stos
hlt
pop
mov
pop
les
inc
jne
insl
push
cmpsb
and
jbe
stos
cmpsb
fistpl
aas
cmp
cmp
cmpsl
mov
pop
mov
jmp
push
je
imulb
loope
and
push
call
mov
xor
ds
das
mov
fdivr
xchg
aad
add
adc
jne
inc
lahf
loope
idivb
cmpl
and
push
lea
push
mov
jg
call
stc
inc
subl
cltd
stos
adc
adc
xchg
or
dec
push
mov
aas
pushl
add
sbb
lea
out
into
xchg
mov
outsb
out
shl
mov
ss
fsubr
sub
mov
push
mov
lret
test
ss
cmp
sub
jle
mov
rorb
icebp
cli
sbb
shrb
fnstenv
add
inc
jecxz
lret
loop
adc
fbld
lock
mov
imul
lods
adc
rolb
xor
cmpsb
or
fwait
dec
mov
jle
sbb
mov
sbbl
mov
loope
lea
add
mov
and
jo
mov
stos
pop
sub
mov
lret
jbe
sub
ficoml
scas
fisttpll
jbe
rclb
mov
mov
in
mov
jge
test
push
call
sbb
imul
cltd
rcrl
add
jecxz
inc
fstps
push
arpl
dec
enter
into
push
imul
scas
inc
cmp
mov
cmp
cmpsb
in
ret
std
fists
jb
cmpsl
repz
xor
into
imul
jmp
in
lahf
sbb
sarl
hlt
and
xchg
jl
daa
mov
sbb
imull
pop
hlt
mov
sbb
int
mov
pusha
lret
sub
test
enter
lret
lret
mov
sti
test
xor
fs
fs
xchg
fstps
and
int
xchg
shl
push
aas
pop
bnd
in
movsb
aam
pusha
pop
rclb
push
ret
nop
test
mov
clc
das
lods
mov
adc
or
mov
sahf
push
movsb
mov
xchg
lret
sbb
enter
test
lahf
fistl
pop
es
icebp
xchg
imul
sub
mov
leave
add
xchg
in
and
rolb
ret
ficompl
lods
jge
xor
cli
pop
into
lods
jl
gs
popf
cmp
xchg
jo
rclb
mov
mov
test
in
jb
or
pop
jg
je
xor
dec
rorb
or
and
fs
and
insb
push
xor
imul
popf
sub
push
add
gs
adc
stos
sbb
adc
cltd
leave
and
jno
jmp
push
jl
lock
inc
js
sbb
imul
repnz
rclb
das
shl
in
add
mov
inc
xor
jle
push
jns
push
fistps
and
imul
cmc
mov
adc
shl
fldl
dec
adc
add
jae
out
int3
pop
lret
sub
xor
mov
lock
cmp
fmull
inc
imul
lcall
int
inc
je
call
push
jnp
sub
inc
add
dec
mov
lcall
and
adc
dec
aam
jns
repnz
inc
in
dec
mov
push
in
pushf
mov
dec
mov
fidivrs
out
xlat
jns
pop
lcall
xchg
in
iret
or
xor
inc
imul
out
jb
lods
or
dec
xchg
adc
ret
xchg
sub
or
adc
filds
inc
in
cs
sub
subl
sub
icebp
nop
dec
jg
add
sub
mov
cld
hlt
les
test
mov
dec
mov
idivb
ja
add
or
pop
mov
jae
jne
push
push
outsl
ljmp
adc
xor
test
and
shlb
mov
inc
movsl
out
push
mov
jge
sub
ss
je
xchg
adc
repz
jmp
cmp
lods
in
imul
push
xchg
mov
es
cli
aad
cli
scas
sub
xlat
xchg
sub
jp
fsubrl
xchg
popa
mov
and
sub
adc
pop
sub
inc
pop
das
mov
jl
mov
loope
lcall
repz
push
sub
in
mov
push
adc
push
adc
lret
mov
adc
cltd
or
inc
int
aad
cmc
inc
in
mov
dec
xor
sbb
push
sub
xchg
rcrl
sub
das
cli
js
xchg
jnp
arpl
mov
cmpsb
push
or
xor
loopne
or
pop
cmp
aam
dec
sbb
cmp
xor
jge
neg
mov
aaa
in
shlb
xchg
cmp
push
push
pop
test
and
adc
daa
cltd
or
push
jae
push
fadd
in
inc
fimuls
stos
sbb
loop
and
inc
and
mov
jp
adc
ja
imul
repnz
ja
insb
add
xor
pop
test
imulb
out
stos
lods
lahf
adc
or
aad
xchg
jle
cmp
rcrb
jecxz
dec
push
jle
out
push
cld
push
push
push
sbb
cwtl
iret
mov
mov
mov
loopne
shlb
je
fld
sub
andl
xor
mov
ds
cwtl
test
rcr
cs
arpl
fldenv
inc
lock
dec
mov
and
jo
mov
jmp
in
lret
pop
mov
jae
in
dec
filds
mov
mov
daa
pop
mov
xorb
iret
push
pop
pop
daa
mov
lret
test
xor
in
inc
or
sbb
mov
push
cmc
lcall
dec
sub
je
jg
add
out
fildll
fdivp
xchg
rcrl
ret
test
jge
frstor
mov
push
pop
scas
mov
int3
jns
push
pop
lock
out
fs
inc
or
adc
sbbl
fstl
scas
testb
test
and
dec
cmp
je
lahf
pop
sub
inc
data16
addr16
ss
mov
pop
in
mov
xchg
popa
popf
xchg
aaa
testl
and
or
sub
out
jne
into
jge
loope
shrl
cmc
int3
popa
fimuls
cmp
sbbb
pop
xor
pop
inc
aad
cmpsb
movhlps
pop
adc
stos
inc
sbb
dec
add
mov
addr16
leave
jno
test
aam
inc
ds
loope
aaa
and
mov
mov
dec
shll
int
mov
or
cmp
jp
inc
sub
inc
icebp
frstpm(287
push
sub
aaa
xchg
ret
lods
out
jb
pusha
fcomp
pop
push
data16
shr
gs
sbbb
xor
dec
jg
or
jb
in
enter
pop
in
push
loop
movsl
std
sti
cltd
int
repnz
push
popf
cmp
mov
or
dec
jo
les
cs
mov
dec
movsl
leave
ljmp
and
notl
fidivrs
inc
dec
movsb
das
popf
rol
mov
add
ljmp
sub
jnp
inc
pop
mov
pop
int3
cld
lahf
insl
loop
pop
mov
out
in
xchg
cmp
or
out
int
int3
test
mov
sti
insb
xchg
pop
aas
outsb
mov
pop
inc
mov
inc
adc
add
clc
and
sbb
cli
pop
pop
cmp
push
inc
roll
out
pop
pusha
jbe
sbb
loope
inc
push
cltd
into
imul
dec
hlt
lods
outsl
pop
icebp
mov
arpl
mov
jle
and
cmp
adc
icebp
jae
xchg
adc
jmp
mov
jno
stos
outsl
and
jns
dec
ficoml
jge
aam
mov
inc
lods
outsb
repz
imulb
add
hlt
cmp
mov
push
sti
cld
in
add
mov
in
push
mov
aaa
mov
sbb
or
adc
push
jo
aam
xchg
dec
push
sub
icebp
pop
arpl
xor
pop
lods
jecxz
scas
lock
cltd
dec
xor
mov
ss
mov
mov
or
fisttps
cmp
cmp
gs
and
jecxz
sahf
adc
ret
loopne
fimuls
or
pop
push
push
mov
sahf
and
mov
enter
fnstenv
jnp
dec
mov
dec
sbb
popa
sub
es
dec
mov
dec
jno
sub
rcll
stos
scas
ror
jecxz
or
inc
gs
nop
shll
sub
mov
les
add
js
mov
lods
sbb
xor
psrlq
mov
xor
arpl
xchg
xor
inc
fmuls
in
mov
add
int3
aam
ljmp
lcall
mov
xorb
out
pop
sbb
imul
inc
jl
aam
xchg
fisttpll
lcall
sub
out
inc
jmp
hlt
out
push
add
dec
enter
or
test
sub
xchg
ss
mov
enter
mov
xorb
movsb
punpckhbw
add
lods
std
dec
cwtl
adc
in
sahf
inc
mov
shr
adc
inc
daa
cmp
sti
inc
xor
add
dec
out
mov
sub
add
outsb
push
jmp
stc
insb
cld
addr16
adc
sub
adc
into
xor
inc
fsubp
out
int
cmp
fstpl
mov
sbb
sti
jp
stc
push
loope
push
cwtl
xchg
or
cmc
inc
inc
pop
cmpsl
sub
lcall
clc
leave
enter
scas
mov
inc
jne
cld
add
lret
sbb
add
jl
aam
jo
sti
andl
movsl
in
hlt
rcr
mov
shlb
int
cmpsb
sbb
jnp
xor
imul
pop
inc
cs
jp
ja
scas
cmp
xor
mov
add
fs
dec
cmp
mov
pop
pop
push
or
sbb
out
push
sarl
ret
push
loopne
je
scas
enter
lds
mov
cltd
mov
cld
rclb
sarb
movsb
inc
push
mov
lahf
jno
ljmp
mov
dec
jecxz
push
xchg
je
rcrl
adc
mov
pop
jae
sub
and
sbbb
std
lea
lock
mov
dec
and
pop
jg
adc
mov
xor
sub
jl
and
les
jnp
cltd
ds
push
pushf
sbb
dec
add
cs
mov
jae
xorl
data16
les
cmpsl
xor
in
pop
into
adcl
sbb
add
outsb
test
mov
xor
sub
nop
mov
es
mov
push
in
outsb
sbb
es
sub
shl
call
mov
loope
loopne
xor
dec
jmp
in
subb
pop
out
sar
shrl
adc
test
mov
inc
loopne
add
aas
out
stos
sbb
sarl
pusha
into
cmc
mov
nop
ret
andl
jbe
mov
adc
repnz
mov
dec
mov
jbe
movsl
add
push
push
mov
dec
jae
aad
js
xchg
pop
xor
mov
xchg
cmp
mov
aad
xlat
shll
sbb
add
sahf
adc
out
xchg
lcall
mov
add
aam
push
les
loope
in
xor
push
loope
in
addr16
repnz
and
pop
mov
xor
enter
jge
lret
repnz
fildl
pop
dec
pop
adc
add
and
mov
inc
subb
dec
sub
lcall
sub
subb
inc
pusha
lea
push
sub
add
lahf
inc
fcomps
scas
ficoms
js
mov
insl
loope
lea
inc
das
out
xchg
in
adc
xchg
insl
fmull
popf
int
sbb
jecxz
sbb
pusha
in
sbb
sub
rcrb
divb
dec
frstor
push
aaa
push
jl
aad
shrb
push
xor
add
pop
cmp
les
aaa
jbe
bound
fsubp
outsl
cmp
cs
call
leave
and
enter
bound
jns
add
cmpsb
adc
and
adc
nop
outsb
jp
outsb
test
xchg
aas
mov
ljmp
clc
pop
jl
mov
fldt
cmp
rcrl
pop
mov
shll
lock
lds
cli
and
std
pop
jecxz
xchg
push
pop
xchg
add
sbb
rcl
jp
setns
inc
mov
pop
and
cs
jno
popa
add
addr16
cmp
xchg
icebp
inc
mov
ret
data16
push
xchg
clc
into
inc
stc
imul
popa
and
mov
daa
mov
xor
cmc
jb
popf
mov
jmp
lods
shl
mov
inc
cmp
imul
jl
scas
lahf
push
mov
sbb
out
inc
loopne
jmp
mov
push
push
int3
push
dec
push
jnp
lea
mov
sub
mov
mov
int3
or
bound
xchg
mov
lret
insl
sbb
cmp
test
icebp
cli
outsb
fsubr
movsl
adc
or
mov
pop
adc
repnz
sub
dec
jns
testl
call
mov
cli
sti
shlb
or
push
into
or
pop
outsl
sub
xor
out
jae
lds
xchg
lds
and
push
and
mov
sahf
xor
fbld
sbb
clc
testl
fcomp
je
test
lcall
mov
adc
cltd
jge
pushf
xchg
shrl
data16
aam
sbb
test
leave
cmp
sbb
pop
popw
lods
into
inc
adc
sub
cmpl
sbb
inc
scas
and
call
scas
es
adc
push
xor
mov
push
mov
xlat
insl
das
jns
dec
push
inc
sub
ljmp
repnz
repnz
inc
imul
popf
sahf
inc
or
jo
fdiv
fimull
daa
hlt
movsb
add
mov
hlt
sbb
sti
ret
xchg
and
int
sbb
pushl
pop
rclb
fwait
mov
xor
cmc
push
xor
cmp
and
pop
dec
mov
das
std
test
pcmpgtd
mov
stos
xor
sub
insb
jbe
or
je
jmpw
sbb
mov
inc
push
in
pop
xchg
xor
jmp
mov
xor
sub
jp
pop
lcall
stos
loopne
sarl
out
and
dec
cmpb
sub
lea
adc
dec
dec
jl
pop
hlt
xchg
jbe
pop
jns
out
popf
xor
loope
rorl
dec
cmpsl
in
cltd
dec
dec
dec
cwtl
push
push
sub
test
sbb
sbb
xor
scas
cmp
ret
cmp
lock
aas
cs
cmc
and
sbbl
jae
mov
jg
mov
bound
xchg
and
fdivl
jb
popa
lahf
pusha
fcompl
mull
test
repz
iret
movsl
out
mov
or
aas
lcall
mov
scas
mov
ljmp
inc
outsb
inc
cmc
push
pop
pop
sub
sbb
jecxz
push
and
loop
shr
aaa
pop
xchg
outsl
decb
addl
mov
push
flds
xor
imul
push
imull
stos
push
imul
loopne
pop
xchg
int
xor
mov
mov
cmp
repz
outsl
sub
mov
faddl
adc
adcb
cwtl
adc
std
sar
jae
fwait
inc
out
faddl
mov
ljmp
mov
push
sahf
fisttpl
sub
orl
cmp
xor
mov
push
movd
xor
push
xchg
sub
mov
pop
cmpsl
mov
pop
imul
mov
push
jmp
mov
and
mov
jne
aam
mov
ljmp
pop
icebp
add
pop
insb
test
xchg
in
fisubrl
jmp
enter
xchg
movsl
lods
bound
cmp
in
pusha
adc
shrl
ret
js
cmc
loop
pop
jno
divb
adc
insl
and
mov
ja
cwtl
jge
and
xchg
dec
movsb
jmp
fsubs
les
rclb
nop
inc
adc
mov
out
cmc
cmp
shr
xchg
cmpsl
jo
ret
mov
sub
dec
incb
mov
xlat
inc
lods
jb
mov
pop
dec
and
sub
repnz
adc
dec
jnp
mov
adc
cmp
pushf
into
push
pop
dec
fdivl
mov
imul
cmp
jmp
inc
sbb
add
test
nop
aaa
mov
int
mov
push
aas
mov
dec
pop
out
jge
cltd
not
sarl
and
jecxz
and
scas
ret
out
sub
jmp
inc
hlt
scas
add
rolb
mov
stc
popf
fimuls
lea
push
pusha
call
je
mov
xchg
popa
add
add
sbb
shl
out
pop
sub
adcb
aas
adc
jbe
inc
sub
push
movsl
insb
aas
fmull
pusha
adc
sub
int
loope
sub
or
add
xor
jb
mov
nop
lret
cli
mov
push
push
jg
sbb
pusha
imul
mov
sti
sbb
adc
jle
inc
jecxz
jmp
inc
add
xchg
fimull
rcll
es
mov
sbb
adc
test
mov
pause
mov
int3
mov
lret
mov
lock
pop
pop
lahf
xchg
inc
rol
jp
cmpsb
int3
into
loop
pusha
inc
sbb
scas
jge
stos
xchg
aam
imull
pop
sbb
sub
or
lds
cmp
insl
in
in
dec
mov
ss
inc
ds
dec
mov
add
dec
test
mov
pop
aam
shll
rcrl
nop
pusha
out
icebp
pop
dec
xchg
movsl
pop
or
xchg
inc
and
or
xlat
arpl
lcall
push
lods
orl
mov
pop
clc
mov
int3
mov
push
mov
cmp
mov
mov
cmpsb
jo
or
cmp
movsl
mulb
iret
es
add
ss
lock
popf
incb
lahf
xchg
cmp
pop
in
dec
aam
repz
mov
addr16
in
mov
mov
fstpl
pop
hlt
mov
sarl
ljmp
or
loope
out
xchg
mov
push
xchg
fisubl
rol
loope
or
push
xchg
or
repnz
mov
mov
push
or
dec
stos
jge
stos
sbbb
arpl
not
dec
loope
clc
mov
sub
div
mov
adc
cmp
sbb
jo
mov
lcall
aaa
jle
lcall
cmp
or
mov
cltd
mov
fsub
mov
dec
and
push
or
outsb
mov
es
add
sahf
sub
mov
pop
int3
cmp
imul
mov
mov
fwait
sub
inc
fmull
and
xchg
mov
bound
ljmp
daa
das
xor
mov
fidivs
cld
sub
ja
and
pop
and
mov
sbb
mov
ljmp
push
mov
xchg
sub
mov
cli
pop
imul
mov
pop
inc
js
jnp
popf
mov
int3
mov
jne
mov
inc
aaa
jmp
mov
pop
clc
pop
mov
mov
hlt
call
pop
push
sub
mov
sub
mov
insb
lds
dec
mov
fidivl
dec
aas
or
xor
leave
scas
fs
mov
dec
into
mov
mov
je
lods
movb
mov
add
cmp
dec
pop
fdivrl
push
roll
ja
or
fwait
jl
sbb
and
out
jae
je
adc
fldcw
les
out
addr16
jge
fistl
nop
inc
push
loop
insb
adc
aam
inc
aaa
cmpsb
arpl
stc
jnp
mov
sub
out
jmp
test
cmp
cld
fcoml
lahf
popl
popf
push
jnp
aam
or
pop
shll
push
leave
sub
hlt
fstpl
xchg
jl
lods
pushf
jae
jecxz
mov
push
call
mov
fs
mov
pop
out
inc
xor
rcrb
cltd
mov
fsubrs
stos
mov
mov
inc
jne
adcl
aaa
mov
inc
mov
stc
popf
outsl
mov
into
xlat
aad
inc
aad
dec
add
ret
loop
scas
ss
ljmp
fs
pusha
mov
mov
jl
pop
or
imul
fsubp
xlat
inc
hlt
pop
imul
pop
push
xchg
cmp
push
mov
test
and
fwait
idivb
cld
sub
daa
adc
mov
push
jmp
or
mov
or
push
push
ret
shrb
sub
lods
pop
imul
sti
out
adc
and
lcall
out
cmp
lret
fmuls
aas
or
stc
cmp
cmp
inc
lret
lock
pop
stos
icebp
fmull
push
ret
pop
aad
shlb
xor
cmc
mov
xor
out
adc
cs
or
js
inc
pop
ljmp
sbb
shlb
cwtl
push
push
loop
es
lods
mov
pop
gs
push
cld
pop
and
andb
out
sahf
aaa
push
das
push
xchg
in
cli
jo
test
cmp
or
mov
sbb
pop
push
sub
mov
loope
int3
scas
repnz
and
aad
jne
test
or
cld
xchg
fists
push
jne
pop
pop
lret
xchg
aas
mov
cmpl
cmp
es
lahf
lret
ja
int
mov
adc
fld
or
lahf
push
into
and
or
daa
adc
repz
sbb
add
mov
pop
push
cmpsb
sub
push
lret
sbb
outsb
sbb
rcll
push
lods
adc
xchg
cwtl
das
adc
ficoms
lret
dec
lret
xor
cmp
inc
lcall
sbb
push
pop
cmp
dec
out
stc
mov
clc
cmpsl
rorl
pop
push
cmp
xchg
jle
mov
insl
inc
sbb
jecxz
and
mov
sbb
pop
into
mov
pop
pop
fsubs
sbb
outsb
mov
or
in
pop
cmp
cmp
out
mov
push
dec
movsb
ja
sbb
mov
pushl
mov
sti
jle
inc
or
mov
int3
pop
fwait
pushf
mov
cmp
and
add
add
sbb
jne
inc
xchg
cmp
iret
and
rclb
addb
in
fimuls
test
leave
inc
lods
push
fildll
cld
mov
jnp
push
mov
lock
mov
inc
cltd
or
pop
cld
aaa
lret
dec
add
adc
daa
fisubs
roll
cmpsb
test
mov
jns
mov
leave
push
icebp
inc
xor
adc
arpl
mov
inc
adc
dec
stos
sub
imul
frstor
leave
sub
out
xor
clc
and
jle
inc
mov
mov
ja
mov
jecxz
imul
add
shll
mov
jg
stos
in
mov
xor
out
or
jmp
sbb
add
fwait
dec
jbe
loopne
cmpsb
push
lock
stc
out
and
loop
daa
fwait
daa
fnsave
pusha
push
mov
mov
adc
loopne
xor
in
xor
adc
push
xchg
inc
test
mov
lods
mov
push
sbb
int3
int3
push
and
cmpsb
std
addr16
outsb
and
andl
mov
sub
lret
gs
xchg
test
orl
out
xor
mov
jmp
xor
pop
psllw
inc
sbb
or
add
xchg
cmp
adc
and
or
into
movsl
dec
mov
pop
inc
fdecstp
xchg
adc
jb
shll
inc
mov
loope
push
adc
mov
test
push
adc
loopne
fwait
pop
and
mov
jp
fisubs
or
mov
in
movb
aas
mov
push
jbe
sbb
stos
xlat
adc
jle
or
sbb
pop
fisttpl
adc
inc
mov
mov
mov
sbb
cmp
aaa
inc
mov
rorl
lds
adc
xor
inc
dec
push
or
inc
int3
aaa
data16
sbb
inc
mov
hlt
lahf
and
ds
lcall
shl
sbb
loope
out
mov
movl
fidivrs
add
cwtl
adc
pusha
das
fcmovnbe
leave
sbb
imul
mull
sti
pop
sahf
dec
fisttpll
cmp
pusha
gs
in
out
pop
xchg
shrl
outsb
fisttpl
xchg
aad
cmp
hlt
dec
jno
mov
inc
xchg
js
lock
push
cmpsl
add
push
stos
mov
call
and
repz
repz
sub
daa
or
test
rcr
adc
mov
arpl
xchg
sub
add
clc
push
mov
mov
push
fdivr
aas
jmp
inc
dec
aad
jecxz
dec
push
mov
push
xchg
cwtl
jns
aam
jb
mov
cltd
add
add
in
sbb
cld
mov
push
data16
pop
jb
movsl
mul
je
push
das
shll
stos
mov
dec
mov
ret
pop
mov
stos
icebp
sbb
enter
roll
pop
and
out
dec
and
in
push
rorb
and
jmp
jnp
xchg
adc
movl
push
insl
mov
inc
bnd
mov
ret
pop
fcom
sub
scas
repz
fsubl
scas
imul
xchg
push
jp
fwait
and
inc
int
cmpsl
pushf
and
stos
in
jecxz
insl
icebp
xor
cld
in
loopw
adc
cltd
xorb
testl
rcrb
mov
and
push
mov
add
inc
jg
pop
xor
rcr
ror
sub
mulb
imul
in
xor
pop
in
into
ror
in
or
mov
insl
orl
sub
xor
cld
sub
push
int
nopl
inc
pop
les
clc
mov
dec
fwait
outsb
sbb
xchg
xlat
int3
enter
fisttps
into
pusha
repz
dec
pop
inc
sahf
out
sbb
pop
mov
or
xor
xchg
cmp
loopne
sub
xchg
ficoms
cmpsl
cmp
sub
lds
xchg
inc
fdivrl
sbb
cmp
aad
mov
lcall
and
das
mov
sub
push
ds
xchg
gs
cld
mov
pushl
aas
lods
arpl
cmc
or
movsl
push
xor
loop
test
jno
aad
pop
je
xor
adc
jg
ret
out
mov
or
push
addl
in
sub
imul
jae
adc
dec
cmpsl
and
in
mov
pop
cwtl
in
jge
inc
shlb
xor
mov
loope
add
and
xor
lret
mov
mov
lods
mov
in
or
outsl
push
adc
stos
arpl
hlt
cmp
push
mov
pushl
out
jl
xchg
or
jmp
push
cmpsl
sahf
sub
icebp
add
inc
lahf
xchg
mov
sbb
movsl
ds
xor
scas
push
ss
mov
inc
pop
mov
dec
and
ja
pop
mov
int
roll
sub
cwtl
dec
icebp
dec
xor
inc
fldenv
push
cmp
imul
fsubr
mov
out
std
or
or
or
aaa
shll
adc
stos
xchg
cmp
cmc
repz
push
inc
shrb
test
loop
sbb
scas
xor
mov
adc
pop
lea
jmp
and
pop
mov
mov
push
sub
mov
ja
lods
adcl
adc
outsl
jbe
add
cmc
xchg
sti
sbb
clc
xor
xchg
push
push
movsl
outsb
jg
xchg
das
mov
or
push
out
mov
popa
jne
das
scas
jnp
sbb
stos
xchg
gs
mov
or
in
jle
jge
push
outsb
fstps
inc
subl
add
lcall
cs
lods
mov
jp
leave
out
nop
iret
xchg
ss
push
sub
mov
sbb
ret
push
sbb
lods
int
jp
mov
loopne
push
and
jbe
push
iret
pop
std
dec
jmp
jne
mov
inc
adc
repnz
nop
cld
pop
outsl
ja
in
cwtl
cld
jae
and
imul
dec
gs
mov
daa
lahf
inc
mov
insl
es
mov
xor
aad
mov
jo
cwtl
inc
and
xor
pop
dec
dec
out
mov
cmp
push
pop
adc
pop
enter
pop
xchg
jmp
sub
xor
mov
adc
addr16
mov
pop
xchg
xchg
mov
sti
and
cmp
xchg
push
lahf
xchg
fprem1
sub
fsubrl
xchg
dec
push
outsl
cmp
mov
imul
mov
test
inc
fistpll
orb
sbb
jbe
psubb
xchg
push
inc
sti
sbb
cmpl
frstor
jae
push
mov
dec
xor
test
in
cwtl
fsub
sahf
test
cmp
test
fwait
into
hlt
stos
std
arpl
frstor
outsl
cmc
ret
int3
add
mov
f2xm1
cs
adc
mov
jne
loop
sub
lret
pop
cmp
clc
dec
inc
push
fwait
adc
and
sti
int3
jnp
outsb
jno
popf
xor
out
mov
test
fnstsw
cltd
jp
add
mov
add
int
mov
rcrl
scas
pop
and
mov
lcall
cs
loop
mov
bound
imul
xorl
aad
cmp
aas
jmp
sbb
sub
and
insl
movsl
jno
loopne
fidivs
lock
loop
arpl
mov
xchg
insl
shrb
outsb
mov
push
dec
aam
test
sbb
or
push
out
loop
sub
inc
sbbl
sub
and
pop
fdivrl
jl
add
imul
adc
push
inc
or
adc
sub
ja
in
cld
imul
jb
mov
and
pop
insl
pushf
or
leave
jmp
and
fstp
or
jae
sbb
xorl
dec
xchg
mov
pop
inc
xchg
imul
dec
xor
hlt
cmp
jp
int
mov
leave
shll
mov
inc
mov
sub
or
mov
xor
xchg
jo
cmpsl
mov
mov
and
xchg
push
sbb
push
mov
push
cwtl
pop
inc
les
push
popa
mov
pusha
std
nop
out
data16
out
pop
aaa
jbe
mov
sahf
negl
push
mov
es
outsb
rorl
push
lds
jno
sub
or
loopne
lock
inc
stc
decl
mov
je
and
push
or
sbb
mov
test
gs
pop
rcrb
fcomps
inc
mov
fcomp
adc
cmc
out
scas
pop
mov
aad
fs
loope
add
std
pop
or
dec
jnp
cmp
das
adc
stos
mov
jne,pt
out
outsb
int
push
adc
fistpl
hlt
into
jg
mov
push
repz
leave
out
dec
aad
shlb
int
rep
xchg
dec
cwtl
inc
fcmovu
push
mov
jp
pop
mov
xor
dec
xor
mov
xchg
imul
mov
jl
test
fcomip
movsl
push
repz
outsb
sbb
jl
xor
sub
loope
add
mov
jg
mov
sub
mov
or
scas
sbb
lods
addr16
sahf
jg
lods
inc
mov
mov
rorb
les
jg,pn
loope
xor
pushw
mov
or
lahf
movsl
and
fisubs
sti
adc
int
inc
push
jmp
push
out
shll
stos
in
dec
add
adc
mov
aad
call
xchg
dec
xor
jge
push
lret
clc
in
mov
cmp
mov
aas
jp
cmp
cmp
in
pop
and
inc
test
xchg
icebp
jae
das
out
lods
sub
lock
out
pop
add
cs
imul
nop
aad
lret
cmp
test
fsubl
hlt
loopne
dec
sbb
pop
sete
push
add
pop
mov
cmp
dec
testl
mov
in
ljmp
pop
insb
xchg
dec
sti
xchg
addr16
pop
push
iret
xor
fimuls
jne
paddsw
outsb
push
mov
xchg
and
and
je
fnstcw
or
cmp
icebp
add
in
mov
jge
sub
ja
mov
cltd
jmp
dec
inc
int3
pop
dec
mov
js
jbe
push
bound
test
out
inc
rolb
mov
inc
cmp
adc
cmpsb
inc
shll
mov
dec
mov
pop
into
jb
adc
cli
dec
mov
sub
dec
and
pop
add
je
push
dec
mov
xor
sbb
sub
dec
sti
mov
rcr
and
outsb
push
aam
mov
jo
lds
cmp
xchg
pop
out
add
sbbl
mov
xchg
iret
xchg
out
and
pop
add
adc
and
jnp
arpl
adc
outsb
in
sahf
or
into
dec
sub
lcall
pop
fistps
push
xchg
adc
mov
inc
push
in
and
pand
pop
jae
sbb
jl
adc
stc
xor
mov
add
cltd
push
adc
mov
sub
testb
stos
cmpsb
stos
into
pop
adc
fnstsw
push
push
mov
bound
sbbb
pop
cs
pop
xchg
ljmp
sub
cmovp
loop
push
dec
out
scas
jle
mov
xchg
inc
vmovntps
mov
pop
inc
lahf
adc
adc
imul
sub
mov
sbb
mov
jnp
shll
in
inc
push
scas
loopne
insl
aad
aad
fsts
xchg
xor
shlb
insl
aam
mov
das
int
mov
pop
inc
test
pop
outsl
inc
les
and
sahf
icebp
mov
loope
cltd
dec
or
out
adc
notb
incl
sbbl
or
push
inc
psllq
jo
hlt
cmc
adc
jmp
enter
les
mov
mov
mov
mov
xor
mov
pop
popf
sub
push
jbe
pop
bound
mov
mov
cld
push
xlat
test
push
xchg
imul
std
jle
push
pop
or
sbb
xchg
jb
or
stos
mov
pop
jle
je
daa
dec
xchg
xor
pop
cmp
shlb
adc
mov
jp
sub
cmp
fidivl
push
inc
push
insl
and
and
fimuls
cmpsb
push
call
je
push
imul
add
pop
jns
cli
xchg
ljmp
mov
mov
aad
and
adc
sbb
cmp
mov
roll
fidivrl
and
out
in
popf
outsl
mov
fbld
stos
stos
in
and
cmp
jp
add
jmp
cmpsl
addl
sbb
cwtl
test
repz
xchg
pop
jle
shrb
mov
sbb
cmc
out
ffree
and
push
add
sub
js
lret
mov
pop
jp
cli
cmp
sti
mov
cmp
inc
sub
push
inc
push
xchg
dec
jl
or
mov
lret
int
or
out
sub
or
push
das
outsl
sti
pusha
out
addr16
in
cmpsb
jnp
jo
and
xor
cmp
loop
scas
cld
sti
cmc
sbb
lahf
es
sbb
add
pop
adc
cli
inc
lahf
int
stos
or
ret
adc
js
xor
pusha
shl
adc
and
inc
enter
popa
shrb
js
push
pop
dec
pop
push
sbb
sarb
mov
sub
adc
bound
movsb
outsb
pop
adc
ljmp
mov
mov
cmp
outsl
mov
repnz
stos
and
in
cltd
lret
test
lret
ds
fidivrs
je
mov
jge
mov
sub
sub
arpl
movsl
xchg
jae
imul
mov
cmpsb
sub
addl
xchg
cmpsb
xor
push
mov
xor
clc
mov
jle
mov
out
or
in
leave
mov
jp
sbb
pop
cwtl
dec
jae
fidivrs
pop
sbb
loop
mov
mov
mov
sbb
sbb
outsl
cwtl
orl
test
xchg
leave
adcb
xlat
adc
int3
cmp
test
stos
jnp
jl
pop
scas
xlat
leave
jle
andl
imul
sub
test
outsb
mov
mov
aad
pop
push
pop
pop
pop
inc
fistpl
pop
jnp
in
adc
jp
mov
push
or
lods
loop
aas
push
inc
adc
mov
data16
ljmp
ja
ss
aaa
pop
mov
or
sub
sbb
je
popf
sub
pop
jp
dec
lea
mov
ja
outsl
repz
ret
jg
dec
or
mov
inc
mov
push
mov
mov
aad
xchg
bound
mov
sbb
xor
stc
sbb
stos
pop
cmp
jmp
testb
loop
xchg
pop
push
lahf
pop
inc
inc
pushf
fdivr
push
xor
xchg
push
fcompl
ljmp
jmp
jp
es
mov
out
mov
iret
inc
in
adc
orl
shlb
pop
or
xlat
test
popa
add
xchg
mov
rorb
and
in
dec
lods
out
fistpl
xor
jge
mov
jg
ljmp
aad
cld
inc
leave
jo
enter
stos
lods
adc
cld
mov
call
shlb
push
and
insl
or
shll
pop
xor
ja
sbb
push
cs
or
push
sub
mov
enter
into
sbb
inc
test
inc
aaa
mov
xchg
shlb
out
mov
inc
shll
pusha
iret
inc
adc
lock
lcall
ret
add
mov
cltd
lea
loope
shl
mov
sub
sahf
pop
or
push
movsb
sbb
icebp
push
pop
sub
cmp
xchg
cmc
loop
xchg
ja
aaa
ret
aas
fninit
pop
lds
cwtl
mov
mov
pop
push
push
or
xor
cmp
in
cld
test
jmp
test
cmc
dec
shll
xchg
mov
arpl
or
push
dec
mov
imul
addr16
popf
outsb
add
pop
movsb
pop
mov
mov
jbe
pop
stc
mov
adc
push
pop
mov
testl
insb
cmp
pop
mov
jo
xchg
aam
lods
mov
inc
xchg
rorb
mov
aaa
sub
pop
push
jbe
xchg
add
into
out
xchg
mov
pop
adc
in
data16
mov
mov
popa
movsl
xchg
mov
xchg
mov
sbb
lret
push
add
movsl
daa
rcl
leave
add
aaa
hlt
aam
in
mov
pop
enter
mov
iret
push
inc
pop
jge
decl
sti
push
call
arpl
shl
in
or
push
dec
loope
outsl
mov
add
pushf
jmp
pusha
test
mov
mov
add
jnp
sub
stos
loop
pop
imul
ret
je
ds
dec
test
mov
adc
sbb
outsl
out
andb
nop
and
lds
mov
sti
push
inc
mov
es
adc
jp
jp
ja
leave
test
test
mov
or
ja
add
int3
xchg
icebp
add
pop
xchg
or
popa
xchg
jecxz
push
xor
js
pop
clc
out
out
push
gs
ljmp
sbb
sbb
cli
scas
imul
xor
xor
pusha
xor
mov
rcl
mov
mov
mov
cmpb
stc
cmp
in
push
test
insb
fidivrl
nop
adc
add
pop
push
js
pop
outsl
insl
icebp
fnsave
jecxz
aaa
aaa
outsb
lret
test
xor
jne
pop
sti
or
pop
mov
das
pop
cmpsb
push
flds
bswap
ds
xor
stc
pop
mov
adc
fldenv
aaa
cmp
icebp
decb
mov
pop
sub
aaa
add
sub
sarb
xchg
ja
and
and
call
ds
cltd
jl
sar
cmp
pop
mov
sub
xor
mov
ror
dec
ljmp
aas
movsl
sub
ss
jp
repnz
ja
pushf
jecxz
fadds
dec
cmp
fs
es
or
popf
push
mov
andl
inc
test
add
and
es
dec
sbb
mov
cmp
icebp
add
mov
inc
mov
out
mov
push
push
popa
subl
test
push
gs
sti
pop
sub
mov
leave
jl
or
sub
jge
out
cli
dec
mov
sbb
sbb
xchg
mov
push
pop
fistl
subb
repnz
mov
lret
dec
sbb
dec
inc
cli
and
iret
aas
outsl
jbe
or
jge
mov
repnz
scas
imul
mov
repz
jbe
xor
shll
and
clc
stos
xor
push
adc
loop
cwtl
test
adc
incl
jnp
xchg
sub
mov
andb
mov
mul
cmp
or
and
pop
jecxz
sub
dec
cld
in
aad
xor
out
pop
push
repz
inc
outsl
rcrb
cli
jbe
je
adc
movsb
push
mov
mov
ret
in
outsl
emms
mov
dec
js
mov
jne
js
inc
out
mov
push
cmp
sbb
mov
ret
andb
int
jbe
adc
adc
pushf
fldl
fs
cltd
loope
and
pop
sub
pop
mov
inc
stos
in
sub
mov
fdivl
xchg
cmpsl
js
mov
cmp
lock
and
sub
push
das
push
mov
xchg
or
add
push
in
xchg
mov
divb
xchg
stc
jp
mov
add
push
inc
and
jbe
faddp
jmp
inc
hlt
jnp
ret
add
and
mov
fwait
sarl
data16
pop
mov
sbb
out
pop
dec
stos
or
cli
jmp
sarl
out
aam
push
cmpsb
sub
pop
adc
dec
xor
fadds
xchg
cltd
data16
insb
mov
pushf
pop
jmp
aaa
and
and
sub
inc
das
lock
push
cli
or
adc
lahf
mov
lods
stc
mov
xlat
and
mov
mov
push
aaa
imul
xchg
add
mov
xchg
mov
adc
mov
rcll
mov
ds
xor
mov
pop
pusha
mov
icebp
pop
mov
mov
jl
xchg
out
xchg
and
gs
ljmp
jbe
sbb
jmp
xchg
inc
popa
or
jne
jp
in
mov
out
mov
mov
mov
inc
movsb
arpl
cmp
inc
mov
mov
inc
sbb
shrb
mov
mov
push
jmp
outsl
adc
push
bound
fadds
scas
pop
not
pop
fwait
js
mov
in
add
in
iret
jg
lcall
dec
les
dec
or
daa
aaa
add
xchg
sub
mov
push
jns,pt
xchg
mov
xchg
mov
mov
lods
test
jl
lret
out
pop
dec
sbb
push
jns
dec
repz
or
call
ds
lret
or
in
jns
mov
push
popa
pop
int3
fwait
int3
lock
int3
repz
push
jnp
xchg
mov
xor
inc
fwait
aad
adc
rorl
mov
and
scas
mov
cmpsl
or
adc
stos
sbb
repnz
cmp
cmc
mov
xor
xchg
aaa
cmpsb
xor
dec
pop
mov
pop
pshufw
fimull
mov
pop
adc
fimuls
ret
mov
mov
xchg
jns
pop
jbe
dec
aas
lea
dec
fistps
xor
xchg
movsl
or
cld
sub
adc
mov
sahf
push
and
xchg
mov
pusha
bound
daa
cmp
cltd
fs
jmp
addr16
cwtl
repz
data16
stc
push
cli
mov
add
adc
hlt
fs
lret
sbb
sub
cmp
inc
ljmp
das
and
outsl
mov
shlb
cwtl
fwait
test
subl
sub
ret
push
popf
into
sbb
jns
sbb
push
mov
or
dec
xor
addb
add
cmc
push
mov
rorb
push
rcrl
je
jmp
push
sub
sbb
jge
jbe
mov
test
pop
pop
je
inc
adc
nop
loopne
cltd
insl
sbb
and
dec
sbb
pop
iret
andb
xchg
sbb
daa
popa
jno
dec
push
stos
jno
pop
xor
ret
test
jcxz
mov
xchg
cmp
lret
dec
mov
mov
aam
ljmp
adc
pop
outsb
mov
cmp
mov
jg
out
scas
mov
xlat
stos
das
sub
mov
aas
push
aas
cmpsl
pop
aad
scas
pop
scas
push
and
xor
es
pop
test
out
sub
into
inc
xlat
push
cmpsb
or
popa
enter
sbb
hlt
fstl
mov
mov
call
or
and
or
shrb
or
mov
inc
and
inc
cmpsb
hlt
xlat
iret
imul
stc
cmp
xor
aam
adc
ljmp
std
mov
movsb
sbb
dec
loopne
cmp
dec
pop
pop
or
lcall
jmp
push
adc
inc
xchg
rclb
ret
jmp
mov
xor
rcr
loope
jle
gs
jp
or
out
scas
mov
roll
or
imul
hlt
ror
xlat
mov
popf
call
jbe
movsl
pop
aas
or
ja
ss
out
fmull
leave
addb
mov
iret
fwait
pop
pop
pop
cs
ficoml
mov
adc
cmp
xchg
imul
bound
push
cwtl
push
outsb
fldenv
jp
and
hlt
xchg
jb
push
xchg
out
xor
cmp
dec
push
xor
push
mov
mov
aas
test
mov
fdivrs
pop
fldcw
into
ffree
jle
icebp
jge
cwtl
test
and
movsl
bound
adc
cld
lock
and
xor
aad
jmp
cmpsb
std
and
pop
ret
dec
gs
movsl
jg
sub
lods
les
andb
jl
jno
pushf
push
inc
jge
aam
es
push
cmp
inc
fstl
lret
jns
push
mov
popf
stc
inc
cwtl
mov
js
mov
push
push
and
mov
dec
js
orb
outsb
lods
or
cmp
scas
cmp
nop
mov
aam
adc
xor
jne
rcr
testl
adc
xor
push
or
push
mov
js
gs
test
sbb
add
loopne
push
loopne
aaa
mov
outsb
xchg
jl
sub
into
dec
popf
pop
dec
and
sbbb
shll
mov
adc
pop
or
movsl
pusha
mov
call
lock
pushf
mov
cltd
imul
test
call
mov
scas
and
out
and
sahf
sahf
xchg
out
int3
sub
aaa
out
outsb
sub
popa
cltd
stc
sbb
add
jbe
jne
or
inc
sub
insl
in
pop
inc
mov
test
bound
xchg
fsubrl
pusha
xchg
or
and
aaa
push
movsb
and
push
inc
loope
je
push
jmp
sarb
cli
mov
xchg
lret
pop
or
clc
xchg
push
in
mov
cli
repz
sub
dec
repnz
sbb
mov
and
mov
into
jb
xchg
lret
adc
mov
ret
pop
pushf
pop
sub
dec
outsb
cmc
xor
mov
test
dec
cmp
fidivrs
aam
dec
int
mov
in
xchg
shrl
ds
loope
les
stos
or
or
jno
aas
hlt
cmp
jmp
mov
stc
xor
in
or
aad
pop
test
dec
and
aad
jmp
inc
cmovne
or
andb
into
aad
fisttps
cmp
lret
ss
xor
cmp
jb
lcall
jo
aad
mov
das
mov
pushf
cwtl
pushf
sbbl
sub
and
dec
adc
gs
sub
lock
out
push
xor
jg
add
lds
pusha
jle
mov
mov
popa
add
outsl
cmp
rclb
scas
negb
repnz
sub
test
sub
xchg
push
sub
clc
dec
enter
sub
fisttpll
pop
push
xchg
js
mov
insl
stos
inc
cli
out
mov
int
xchg
sbb
loop
inc
and
ficomps
pop
aad
push
cmp
ret
pusha
sti
clc
repz
jmp
out
imul
lock
dec
test
call
js
and
es
xor
fisubl
imul
nop
sub
mov
cwtl
mov
imul
jle
push
mov
out
push
push
or
add
mov
aaa
jmp
fs
jnp
jl
or
mov
add
fildl
fstl
or
test
xchg
daa
ja
push
out
pop
cltd
inc
scas
test
cmp
push
push
mov
or
sbb
outsl
loopne
push
xor
ds
mov
fstpt
loopne
mov
mov
cmp
jb
and
or
add
outsl
cmp
int3
sbb
pop
in
jo
mov
dec
cli
fisttps
bound
inc
andl
and
pop
insl
jp
cmp
lds
fsubrl
mov
cmp
out
xor
ljmp
inc
pop
aam
and
mov
rcr
pop
jns
mov
jg
fnstenv
adc
dec
and
lcall
sub
mov
cmp
stos
js
push
shl
xlat
daa
add
dec
add
popf
sti
clc
push
xchg
fisttps
in
int
stos
push
add
jno,pt
mov
mov
out
comiss
cs
fadds
test
adc
out
and
scas
xchg
adc
and
insb
push
sbb
negl
repz
mov
pop
int3
jle
nop
sarl
sahf
pusha
test
ja
lret
or
cld
mov
pusha
flds
fstpl
cmpsb
pop
std
shrl
cs
addr16
cmpsl
popf
cmp
fucomip
sbb
push
xchg
xlat
push
sub
ja
mov
and
imul
dec
movsb
adc
scas
mov
mov
sub
test
mov
lds
jge
ret
mov
insl
adcb
cwtl
pop
dec
pop
mov
jbe
lds
cmp
fiadds
add
mov
lods
adc
mov
lds
add
mulb
mov
dec
fstl
lcall
xchg
adc
jecxz
pop
inc
movsb
les
sbb
jno
loope
bound
in
sahf
jns
ret
xchg
mov
cmpsl
jge
and
sbb
mov
mov
clc
jg
xor
loopne
add
jecxz
inc
mov
pop
xchg
sbb
jmp
fldt
mov
dec
push
cmp
push
das
mov
into
jp,pt
inc
pop
sbb
pop
in
jmp
loopne
xchg
xchg
out
push
pop
lcall
sarl
out
lock
leave
sbb
push
inc
loopne
pop
cmp
mov
movsl
mov
mov
movsb
mov
clc
jmp
stos
loop
pop
repnz
push
fisttps
ljmp
mov
aam
dec
andl
or
cmp
mov
iret
sbb
mov
mov
adc
js
xchg
fisttps
add
idivl
mov
push
push
arpl
inc
or
pop
or
add
call
cmp
cld
xchg
dec
addr16
fwait
jge
add
call
cli
mov
adc
dec
arpl
mov
and
cmp
mov
sbb
mov
fcom
and
enter
mov
jecxz
mov
xchg
sbb
jae
push
mov
xor
out
adc
sub
lcall
out
ret
xor
mov
sbb
sbb
in
movsb
call
mov
sbb
fcoms
lcall
xchg
mov
test
stos
out
jae
lcall
xchg
sub
xchg
inc
add
inc
das
repz
mov
out
jb
scas
ss
or
outsb
out
mov
das
in
lret
fs
xchg
push
add
sub
pop
push
mov
or
call
out
loop
flds
pop
sbb
cmp
pop
and
push
int3
loop
test
jecxz,pt
xchg
movsl
mov
ja
mov
or
mov
mov
or
mov
jnp
sbb
inc
shlb
xor
aas
out
lods
pop
push
mov
pop
pusha
add
cmc
jg
mov
inc
xor
jg
cmp
test
mov
or
leave
data16
xlat
inc
or
push
cmp
movsl
push
lods
test
scas
int3
xchg
mov
jbe
xor
xchg
push
dec
in
pop
sub
es
sub
and
je
xchg
outsl
xchg
xor
imul
mov
dec
std
loopne
call
pop
xchg
rclb
jle
push
push
inc
out
add
xor
cmpsb
aas
ja
pop
in
jne
ds
out
pusha
dec
bound
scas
nop
and
enter
int3
cmp
adc
mov
xor
ss
mov
xor
pop
pop
mov
sub
loopne
cmp
sbb
pop
les
push
imul
xlat
fnstsw
push
xor
pop
hlt
jb
cli
jg
and
dec
and
add
inc
das
test
pop
neg
lds
pop
adc
push
xchg
mov
scas
mov
jnp
ret
mov
hlt
mov
jae
leave
jo
popa
incb
in
pop
cltd
jno
push
jbe
leave
and
cmp
pop
inc
in
lods
xchg
ljmp
xchg
fidivs
mov
or
mov
pushf
scas
shlb
jecxz
shl
xchg
xchg
and
or
nop
roll
clc
mov
fwait
cmp
adc
push
movsb
scas
push
jne
fidivl
aad
push
stos
cli
dec
movl
jns
enter
mov
and
clc
push
and
or
popf
imul
loopne
iret
and
cmp
dec
repnz
ss
and
xchg
insl
pusha
int
in
pop
inc
jg
ds
push
cmp
xlat
fisttps
roll
adc
aad
ljmp
mov
xchg
js
push
mov
add
repz
xor
les
mov
pop
std
fs
scas
mov
jg
fdivrl
or
or
call
je
dec
add
cmp
stos
movl
cmpsb
roll
xchg
or
aaa
push
push
mov
mov
adc
subb
into
mov
gs
sub
aad
jmp
jg
jmp
mov
xor
jno
outsl
stc
pop
jns
mov
addb
mov
mov
jg
outsl
enter
inc
xchg
xchg
insb
ljmp
push
sub
pop
xchg
aad
pop
movsl
push
les
push
sub
mov
sbb
sarb
fildll
in
mov
lret
test
arpl
hlt
shrb
jecxz
insb
sbb
stos
sahf
jg
sbb
repnz
leave
movsb
inc
lret
adc
xchg
imul
pop
fisubl
pop
les
sar
xor
or
or
fwait
int3
mov
outsl
push
mov
mov
jmp
push
cmp
jp
std
loop
pusha
xchg
pop
push
cltd
jae
ret
roll
mov
es
hlt
mov
pop
xchg
movsb
xor
inc
mov
inc
cmp
roll
xor
mov
add
icebp
jg
xchg
mov
mov
mov
aaa
cmp
mov
sub
cmpsb
push
push
xor
dec
shll
in
in
adc
aas
sbb
xor
into
and
lods
sub
outsl
xchg
mov
adc
or
pop
mov
dec
cs
popf
call
jmp
adc
dec
out
mov
mov
inc
jnp
popl
inc
lahf
mov
mov
mov
add
xor
add
xchg
dec
cmpsb
into
add
or
cmpb
mov
push
mov
and
mov
rclb
add
mov
shl
loop
sbb
dec
dec
and
push
mov
xchg
lock
jp
xor
cmp
lret
jecxz
mov
into
shrl
add
jg
cmp
push
or
sub
shll
xor
loop
and
mov
cmp
int3
cmp
in
jb
stos
inc
call
test
xor
fs
imul
sub
les
xor
les
jne
mov
inc
lds
sbb
fldl2e
popa
pop
jbe
bound
stos
in
jge
sahf
mov
repz
fsubrl
xchg
ds
cmp
test
xchg
xchg
mov
dec
in
or
pop
call
std
pop
sbb
jo
xor
xchg
ret
cmc
mov
cmpsl
arpl
inc
mov
pop
pop
call
fwait
pop
mov
aas
movsb
cmp
das
inc
xchg
adc
cltd
ss
cs
inc
ds
push
clc
movsl
sub
jno
mov
iret
dec
leave
sub
ret
aad
sub
adc
jge
mov
pop
push
pop
gs
inc
push
adc
xchg
in
shr
lcall
mov
das
push
xor
xor
mov
mov
repnz
adc
sub
adc
jno
ja
das
and
clc
inc
inc
aad
repz
dec
cmpsb
int
ss
je
lock
loop
add
push
sub
cmp
xchg
in
push
cltd
ss
mov
push
cmp
clc
mov
cmc
cmpsl
test
aad
and
push
aaa
inc
mov
jns
test
xor
test
movsl
iret
or
add
dec
add
adc
stos
orl
mov
addl
sbb
add
jmp
enter
and
pop
mov
lods
cmp
mov
xor
dec
push
enter
mul
rorb
fs
push
mov
lods
ds
pop
into
mov
fisttpll
ds
daa
dec
dec
cmp
sti
fcomi
jne
divb
pop
mov
loope
push
jl
stos
fcmovnb
loop
mov
xchg
lret
cmp
iret
mov
xor
jbe
jbe
push
and
mov
sti
fcmovnb
inc
shrb
cs
sarb
or
mov
in
jge
jge
call
shlb
mov
pop
xchg
jl
and
adc
es
ljmp
sbb
aam
rcrb
in
dec
jecxz
xor
mov
shlb
js
jp
inc
jo
inc
jb
outsl
ret
or
fsubrl
data16
jbe
int
xor
dec
and
add
and
inc
into
push
outsb
xlat
je
and
loop
add
pop
add
jg
sub
mov
fdivl
inc
cwtl
ret
xlat
arpl
out
push
fwait
dec
pop
rorl
sti
and
loopne
add
imul
inc
mov
movsb
sbb
jp
fmull
mov
out
mov
or
outsb
xchg
add
fimuls
sahf
sbb
iret
fstpt
lea
mov
dec
sub
je
push
mov
jmp
cltd
pop
cmc
stos
lret
into
add
jnp
inc
dec
push
or
push
and
aaa
xor
ret
inc
inc
jmp
daa
dec
ljmp
lret
imul
jecxz
shll
push
adc
lret
stos
fcomps
mov
jecxz
jl
ja
mov
rorl
stos
sbb
dec
mov
push
mov
add
xlat
loop
jmp
pop
out
inc
add
bound
dec
bound
mov
ret
or
es
jmp
jnp
mov
push
arpl
push
mov
cmp
ret
cwtl
ja
ret
pop
pop
rolb
mov
mov
and
dec
in
xchg
aad
lods
test
popa
or
add
dec
xor
cmp
mov
arpl
jbe
fidivl
lea
test
pop
je
xchg
jmp
xor
out
fidivs
in
out
shrb
loop
into
or
ss
jle
sbb
aas
enter
cmp
shll
and
mov
and
je
push
mov
xchg
mov
sbb
shrl
icebp
daa
pop
fs
pop
pushf
adc
xor
das
in
xor
in
aas
dec
jbe
cmp
mov
movsl
fmull
mov
mov
inc
mov
sbb
cmpsb
das
repnz
test
ljmp
fildll
ss
fcomi
xor
jnp
aam
lcall
out
repnz
in
sub
in
pop
sub
jnp
pushf
xchg
dec
std
push
mov
ficoml
leave
and
push
or
add
out
pop
aam
mov
outsb
lret
nop
aaa
and
jbe
cli
push
mov
sbb
sarl
pop
xor
lods
dec
fdiv
fdivs
xchg
and
cli
add
cmp
xchg
mov
scas
andl
movsl
in
jbe
mov
mov
imul
pop
adc
xchg
mov
xor
add
ds
or
mov
sub
lods
in
cmp
xchg
shrb
out
fistpll
or
jmp
test
orb
fbstp
add
dec
xlat
mov
jg
ljmp
inc
shl
loope
push
rcr
xchg
jg
incl
push
repz
imul
and
inc
mov
push
pop
mov
aas
jmp
aaa
push
push
cli
ret
daa
cmp
xor
jg
fstpl
shll
in
mov
add
mov
and
ljmp
cltd
ficoml
adc
jl
mov
imul
or
call
add
in
sbb
adc
xchg
int3
cmp
add
pop
lcall
push
mov
ss
imul
shlb
insl
inc
shrb
mov
test
rol
inc
fisttpl
imul
lds
xchg
xchg
fsubrl
pop
cmp
stc
push
insb
xor
inc
mov
movb
mov
rolb
dec
jno
hlt
pop
jecxz
pusha
or
ret
test
push
dec
add
cmpsb
lods
mov
mov
loope
lea
mov
repnz
aaa
stos
mov
sub
call
faddl
ficoml
nop
mov
aaa
lods
pop
adc
xchg
fidivrl
push
jle
add
js
mov
mulb
sub
xchg
or
into
out
mov
sahf
push
arpl
stos
mov
stc
mov
adc
test
sub
lahf
or
jge
inc
adc
fdivrl
test
lds
fcom
lahf
and
cmc
jmp
ljmp
repz
mov
fidivl
jno
xor
inc
sbb
sbb
mov
xor
mov
cmp
add
popf
fiaddl
pop
dec
notb
mov
pop
pusha
jmp
add
nop
jge
sbb
xchg
sarl
inc
insb
sub
aam
rclb
cmpb
fimuls
scas
jns
dec
mov
pop
js
add
adc
or
lea
stc
les
repz
stos
cmp
mov
add
push
bound
jno
cmp
sub
cmc
pop
out
repnz
movsb
test
xor
mov
inc
ja
pop
in
stos
enter
int
inc
stc
scas
xor
repz
mov
outsl
in
adc
dec
jb
xor
add
cmpsl
mov
adc
paddsb
jmp
mov
icebp
or
push
outsl
xchg
mov
push
mov
addr16
add
ljmp
xchg
pop
add
iret
rcll
test
adc
and
sahf
pop
fs
orb
mov
mov
and
adc
xor
out
cwtl
stos
dec
imul
repz
push
test
int
mov
jno
mov
cmpsb
sbb
xor
dec
test
cmp
repnz
and
or
inc
pop
pop
movsl
cltd
pushf
inc
push
jae
mov
daa
xor
push
push
leave
enter
movsb
sub
fsubs
lock
repz
loop
jp
inc
dec
jb
or
in
inc
lcall
insl
mov
push
ds
sbb
mov
cmp
das
inc
push
cmp
popa
adc
int3
icebp
int
lods
cmpsl
xchg
inc
push
lcall
jnp
in
dec
push
push
jl
mov
imul
xorl
xchg
aam
cmovns
dec
and
or
sahf
jecxz
insl
pop
pop
adc
adc
in
jl
add
cli
inc
inc
jmp
test
or
xor
xchg
push
lahf
mov
test
imul
test
aas
push
repz
xlat
fcmovnb
loope
cmp
inc
mov
sub
rolb
cmp
push
lahf
jns
sbb
dec
cs
push
fldcw
or
push
adc
fsubr
testb
insl
stos
xchg
dec
nop
mov
and
ja
lods
ret
fisubs
sub
divb
cld
add
jnp
mov
out
and
sub
jne
pop
mov
repz
inc
or
push
shlb
dec
jb
jl
popa
or
pop
ret
fmull
mov
sub
testb
lahf
jecxz
testl
sbb
cmp
mov
adc
out
movsl
xchg
jmp
pop
icebp
adc
or
leave
jne
leave
jns
pushf
cs
inc
adc
jo
cmp
bound
mov
lcall
mov
mov
fildll
inc
es
mov
sub
lea
int3
jle
inc
out
int3
adc
push
popa
ds
cmc
andb
repnz
sub
sub
arpl
mov
enter
xlat
mov
je
aaa
mov
add
jb
lea
push
mov
adc
dec
push
cs
jae
adc
adc
inc
out
or
mov
negb
inc
push
xor
or
pop
cmpsl
mov
mov
jmp
inc
adc
xor
pop
cmp
xchg
mov
cmpsb
xchg
cmpsb
lcall
inc
pop
cs
cmp
cmp
in
jo
fidivrl
and
mov
dec
lret
xchg
push
inc
add
in
stos
loopne
test
repnz
jno
push
xor
add
rolb
pop
lock
sbb
xchg
enter
xchg
cmp
jae
inc
outsb
pop
xchg
aad
out
jnp
mov
outsb
mov
bound
fcomi
and
mov
jg
adc
pop
sbb
and
and
out
adc
nop
stc
ret
push
mov
lock
stc
icebp
inc
mov
stos
fimull
cmp
loope
dec
add
push
popl
insb
insb
sub
ficompl
iret
les
mov
push
lods
mov
push
and
and
cltd
es
aaa
cmpl
faddl
push
jmp
ja
add
roll
cs
fstps
mov
dec
pop
adc
sbb
outsb
inc
test
call
bound
test
cmpsl
fstl
xchg
pop
and
jle
cmpsb
adc
sbb
int3
loopne
and
aam
push
add
and
cmp
adc
cmpsb
xor
xor
rclb
push
out
and
xchg
sub
xorl
cwtl
push
mov
ss
cmpsl
js
daa
test
bound
add
lret
repnz
xor
xchg
mov
rorl
pop
jne
push
mov
sub
pop
cmc
sub
roll
xchg
mov
sbb
loope
clc
movsl
jg
or
nop
lea
subb
jl
pop
ret
sarb
inc
cmc
shll
imul
push
ss
mov
inc
xchg
lcall
lcall
dec
mov
or
cwtl
xor
outsb
out
mov
shr
xor
sub
cmp
pop
out
sub
out
pop
lea
jle
sbb
pop
hlt
cmpsl
push
jl
mov
pushf
mov
les
and
mov
leave
les
addr16
pop
insb
arpl
and
fimuls
pop
rorl
dec
dec
ret
scas
data16
and
sbb
xchg
jbe
xor
rclb
movsl
lahf
or
mov
js
lcall
sbb
sub
sub
jge
clc
jne
mov
bound
xor
dec
imul
sub
lods
push
mov
cmp
jns
subl
xchg
ret
ds
pop
add
xchg
or
mov
in
sbb
xor
sbb
mov
mov
out
pop
les
xor
es
sbb
xor
incb
mov
jmp
and
xor
popf
ja
ds
pusha
jns
jecxz
loope
jb
push
out
loopne
push
push
sbb
and
enter
out
mov
in
sbb
lcall
inc
jle
mov
test
jb
cli
pop
mov
xchg
mov
test
inc
sub
ljmp
add
outsb
lods
cmp
adc
je
xchg
add
or
dec
xor
and
inc
pop
mov
je
nop
ljmp
lods
add
sub
es
jp
or
xchg
push
popf
add
pop
lods
je
std
popa
imul
cmpsl
push
xchg
pushf
repz
push
cmp
and
dec
dec
xor
inc
insl
enter
jnp
cld
sbb
notb
jae
pop
pushf
dec
and
jne
int3
dec
sahf
pop
cmpsb
sti
ret
dec
mov
lcall
ds
mov
movsb
xor
test
pusha
cmp
sahf
outsb
loop
xchg
jge
out
in
and
cmc
fdivl
dec
ret
outsb
or
jno
xchg
cld
push
dec
mov
cmc
lea
add
icebp
xchg
xor
push
jmp
fld
outsb
scas
xchg
push
push
sub
in
repz
cmp
sar
xor
push
mov
push
adc
pop
orl
lods
stos
iret
cmc
jl
aaa
push
jl
push
fwait
add
lret
add
lock
aaa
movsl
cwtl
xchg
mov
push
push
sbb
cltd
icebp
shlb
arpl
les
int3
paddusw
jae
pop
pop
cmp
loopne
sar
mov
nop
jne
sub
ret
adc
xor
pusha
ljmp
ss
fdiv
stos
mov
push
lret
data16
testb
test
sub
mov
in
xchg
jl
jl
into
dec
and
aas
imull
inc
in
dec
xlat
cmp
jne
pop
cwtl
pop
fwait
push
pop
pop
cmp
mov
cs
xor
sub
jge
pop
jb
sahf
push
inc
xchg
mov
and
push
add
sarl
or
enter
dec
dec
lahf
cmp
imul
push
scas
inc
lea
insb
out
je
dec
cmp
add
mov
faddp
stc
jge
cld
fldenv
fistpll
sub
xchg
call
out
out
aam
faddp
cwtl
imul
addb
inc
adc
jle
jecxz
imul
out
sub
push
cs
cmp
lea
mov
and
or
mov
adc
push
fiadds
movsb
push
mov
es
and
sbb
mov
sahf
repz
lds
orl
mov
ljmp
mov
pop
xchg
sbb
adc
mov
push
scas
sahf
ror
fmuls
lcall
rcl
mov
loop
js
pusha
ror
push
lahf
mov
ds
jl
or
rcrb
nop
add
push
jl
cmpsl
in
sahf
pop
lret
out
adc
xchg
xor
mov
jp
aaa
out
mov
xchg
stos
outsl
cwtl
dec
iret
jl
cltd
mov
shlb
xchg
aas
jb
inc
mov
mov
adc
shl
push
jle
inc
pusha
fcomi
xor
xor
cmp
mov
lea
inc
aaa
push
push
in
mov
nop
lea
sti
mov
std
aam
mov
test
jge
fistl
adc
push
out
out
push
out
repnz
push
call
dec
imul
loope
test
jl
lock
insl
test
jno
mov
mov
cltd
cmp
jg
les
ss
adc
pop
cmc
push
dec
imul
js
mov
and
imul
sbb
add
sbb
inc
cli
cmp
add
jle
mov
movsb
in
and
dec
sbb
xchg
and
out
int3
lcall
jne
arpl
xchg
push
adc
test
jbe
add
xor
jp
xor
popa
add
cwtl
pop
daa
and
mov
add
repnz
sbb
in
mov
mov
jl
mov
or
push
aad
je
adc
lahf
pop
int3
lods
cmp
xor
lahf
or
test
stos
xchg
test
fmuls
jg
mov
jl
lock
sti
push
inc
sbb
lods
leave
lret
es
fidivs
mov
ds
cmp
fnstsw
push
pushf
jo
sarb
sbb
hlt
and
cmp
xchg
mov
mov
cmp
out
add
ret
add
xchg
shl
pop
push
das
in
fmuls
out
dec
out
push
push
subl
mov
fstl
scas
xchg
sub
mov
out
movsb
mov
adc
lds
cmpsl
fbstp
or
rclb
sbb
sbb
cwtl
pop
pop
jmp
movsb
pop
mov
pop
fisttps
pop
xchg
scas
xor
outsb
push
cmpsb
mov
jo
mov
outsl
pop
cmpsl
mov
data16
or
sbb
mov
loope
inc
sbb
movsw
popf
loop
ret
ret
xchg
out
sub
addr16
mov
inc
or
pop
cmpsb
lea
mov
xchg
enter
inc
add
aad
and
notl
test
sarl
inc
stc
pop
pop
cmp
loop
jg
dec
mov
cli
mov
cmpsb
ja
add
nop
jnp
mov
adcl
flds
cmp
in
mov
imul
xor
inc
fstpl
test
lea
in
inc
inc
data16
aam
mov
ja
mov
rclb
and
mov
cmp
mov
mov
add
not
xchg
rorl
stos
cmp
imul
sbb
inc
sbb
xchg
mull
pop
dec
jmp
nop
xorl
mov
sub
pop
dec
roll
js
pop
repnz
cmp
or
pushf
sbb
dec
in
hlt
insl
mov
fdivl
les
scas
in
mov
dec
movsb
stc
ficoml
pop
sub
xchg
adc
pop
nop
mov
clc
repz
cmp
mov
pop
mov
dec
and
fnstsw
fstl
xchg
xchg
sub
inc
stos
lock
data16
fsub
scas
cmp
movsb
std
mov
ss
inc
jge
pop
mov
pop
mov
jg
out
fxch
je
mov
mov
add
sub
sarl
into
pop
push
rcr
leave
arpl
cltd
xchg
mov
dec
sub
clc
int3
out
cli
adc
les
xor
cmp
sbb
add
and
mov
movsl
push
inc
insb
leave
gs
mov
leave
mov
jg
rcrb
popf
pop
inc
push
cld
lahf
cli
jl
xchg
push
inc
out
xchg
aad
imul
loop
inc
jne
test
xlat
and
cmpsl
daa
pop
xchg
cmp
shrl
rcll
pop
js
das
sbb
das
addb
push
jle
push
lret
jp
sbb
sbb
ss
fidivrs
cmp
in
das
fisubrs
daa
dec
fwait
and
jno
je
repnz
jne
cmp
shlb
cli
mov
jo
loopne
xchg
pop
daa
jmp
adc
mov
or
cli
push
mov
out
insl
ss
xchg
lock
jnp
out
inc
xchg
icebp
inc
adc
mov
fiaddl
add
sbb
lds
fmuls
adc
sub
bnd
xor
dec
daa
xchg
lret
data16
dec
dec
shlb
inc
ret
nop
fildl
test
jns
mov
push
add
cltd
mov
push
inc
jmp
repnz
out
mov
cmp
or
xorb
imul
movsb
lock
clc
xchg
fldenv
in
call
xor
nop
testl
xchg
stos
repnz
loopne
out
xchg
push
push
pushf
sub
add
pop
pusha
mov
lock
test
divl
lea
xor
cmpsl
scas
divb
dec
mov
inc
and
cmp
and
xor
insl
dec
mov
test
inc
ss
test
adc
pop
adc
or
cmc
das
mov
test
sbb
adc
push
adcb
lods
js
pop
leave
cmp
xchg
aaa
loop
popl
pop
test
bound
push
ret
fldcw
mov
cmp
pop
les
or
sub
or
jecxz
mov
sarl
cmp
pop
inc
mov
mov
leave
outsb
call
adc
rcll
das
inc
dec
movsb
sbb
out
pop
hlt
dec
cld
mov
cli
out
negl
rolb
and
xchg
dec
mov
cmp
pop
fwait
in
dec
mov
not
stc
push
insl
lock
adc
push
lret
insb
mov
cmpl
movsb
ficoml
jp
cli
xor
lods
pop
imul
dec
fprem
out
sti
jle
push
das
xlat
mov
in
outsb
sar
jge
pop
mov
jb
jmp
mov
shlb
bound
scas
push
pop
cmp
addr16
pop
cmp
xorl
ror
and
packssdw
sahf
movhps
in
test
jl
imulb
sub
aaa
out
push
lret
popa
add
push
lea
sbb
mov
pop
aaa
xchg
lret
and
add
or
mov
pop
out
mov
dec
popf
adc
mov
xor
inc
cmp
ds
or
std
insl
push
sahf
into
lock
xor
jmp
xor
xorb
mov
out
idivb
out
mov
mov
mov
iret
sti
xchg
fimull
jl
inc
popf
stos
dec
sub
pop
lds
test
lea
push
sbb
stc
aam
popa
pushf
xchg
popf
scas
mov
imul
jle
sbb
adc
mov
inc
repz
cmp
loop
ja
out
lods
gs
mov
mov
pop
inc
pop
movsl
bound
dec
mov
sub
fstpl
out
cmovns
dec
sub
add
outsl
xchg
mov
fdivl
test
lods
and
xlat
out
stos
outsb
xchg
sbb
fadds
rcll
test
xor
out
add
jb
pop
adc
lods
adc
packssdw
int
mov
pop
mov
movsb
pop
das
scas
fs
mov
clc
stc
sbb
call
cmpsb
movsb
pushl
daa
in
inc
mov
dec
inc
mov
xchg
enter
adc
or
fistpl
idiv
xor
movsl
arpl
mov
outsl
imul
sub
fdivrl
mov
dec
push
cli
fadds
jmp
jp
pusha
in
pop
push
push
popa
fs
cli
clc
mov
fbstp
sub
sbb
jnp
mov
iret
das
outsb
sub
fs
fidivrs
sbb
rorl
aam
or
js
or
mov
int
das
pop
push
adc
push
aam
adc
cli
cs
enter
cmpl
or
mov
and
in
sti
adc
popf
pop
gs
or
outsb
push
adc
repz
cmpsb
stc
stc
xorl
dec
clc
cmp
cs
shll
inc
leave
jg
cmpsb
aam
insl
jns
cs
fs
out
mov
jmp
or
and
mov
in
push
adc
xor
gs
std
sub
mov
xchg
leave
xchg
loope
push
mov
popf
popf
clc
rcl
jge
xchg
sub
inc
mov
rclb
enter
lret
loopne
scas
cmpsb
push
dec
rcll
mov
push
leave
ret
data16
adc
xor
and
pop
push
fistpll
adc
sub
cwtl
dec
sub
mov
imul
mov
bound
and
dec
lret
mov
pop
hlt
mov
push
cwtl
and
lds
jnp
jmp
inc
cmpb
popa
pop
pop
ljmp
fdivl
dec
mov
rcr
add
mov
ds
insb
es
les
xchg
xchg
xchg
imul
xor
stos
push
jge
ret
imul
mov
inc
mov
dec
adc
out
loop
test
cmp
mov
inc
jbe
adc
popf
jno
ret
stc
repz
jg
inc
or
cmpsb
out
or
ret
enter
rcrb
insb
mov
adc
stos
fwait
stos
mov
fisubrs
pop
call
lods
adc
outsb
rol
int3
movsb
repnz
adc
insb
pop
or
lret
cmp
push
out
repnz
inc
jno
js
sub
fstps
or
pop
xchg
pusha
aad
mov
sub
in
push
mov
sbb
je
sbb
xchg
imul
jmp
ret
cmp
movsl
aam
dec
cmpsl
notl
sub
ss
pop
pusha
cmpsl
mov
psllq
int
mov
pop
mov
jg
push
ja
js
cli
test
pop
lock
jmp
stos
js
mov
push
and
or
xchg
in
aaa
or
cltd
or
movsb
pop
mov
sbb
cld
popa
xor
scas
push
inc
cld
inc
int
xchg
push
dec
push
and
dec
pop
push
hlt
out
sub
push
jmp
pop
sbb
loop
insb
cmp
jne
pop
cli
add
dec
es
pop
inc
pop
add
sub
add
cld
add
mov
leave
adc
cmc
hlt
inc
jg
xchg
int3
leave
sbb
jb
push
aam
cs
jae
xor
cmp
in
scas
jecxz
int
mov
inc
repnz
pop
or
inc
mov
jb
insb
je
stc
jne
or
nop
jmp
insb
mov
jmp
lcall
inc
stos
ret
xor
jl
sub
xchg
clc
dec
mov
out
ret
shrb
sub
in
xorl
mov
xor
mov
pop
cmp
cmp
sbb
jecxz
je
data16
xchg
or
std
push
sub
jnp
push
push
push
mov
cmpsl
xor
fcomps
insb
mov
adc
out
imul
ss
and
cmp
insb
push
ficomps
pop
cmpsl
mov
ljmp
and
in
int3
mov
cmpsl
add
and
sub
xchg
inc
push
mov
int
xchg
add
testb
pop
popf
or
sbb
mov
jp
sub
cmp
jno
fwait
and
pop
daa
jge
push
pop
xor
cltd
and
xor
push
push
fcmovu
adc
aas
in
fs
cli
fwait
xor
sbb
inc
in
scas
add
popa
insl
xchg
adc
xor
call
stos
dec
jmp
push
pop
rorb
mov
fidivl
mov
inc
mov
inc
stc
aaa
punpckldq
pop
dec
dec
mov
or
sub
jae
push
cmp
inc
cmc
pop
cs
stos
roll
xchg
loope
inc
lock
add
imul
mov
add
cli
cmp
mov
mov
or
inc
mov
dec
mov
mov
jg
xchg
or
dec
loop
sub
mov
ret
xor
lods
hlt
add
fcmovnu
testl
mov
addr16
test
push
int
dec
xor
sarb
cmp
fs
clc
mov
pop
and
cmp
shll
sbb
xchg
xor
jb
test
mov
pop
and
or
pop
mov
cmp
cmpsb
insl
cmp
leave
lret
lds
lret
dec
and
mov
je
or
sub
inc
arpl
leave
xor
pop
dec
pop
push
imul
dec
jb
jle
sti
push
push
lock
fdivrs
lds
fdivr
mov
xchg
or
das
es
and
rclb
inc
dec
xor
cld
push
mov
cmp
cmc
lods
lds
aas
push
subb
inc
popa
jle
add
popf
pop
xor
or
jg
xor
mov
mov
pop
xchg
inc
and
fisttpll
mov
inc
aaa
lea
leave
lret
out
dec
sbb
pop
sub
xorb
js
dec
fwait
or
pop
dec
inc
sub
mov
jae
mov
repnz
ror
imul
mov
mov
jae
roll
dec
push
lock
fcmovnu
push
loope
xor
aaa
mov
std
lahf
sahf
adcl
sbb
jnp
inc
or
sub
loopne
sub
xor
addr16
imul
push
rorl
inc
jp
popa
inc
jl
test
jecxz
test
outsb
or
push
mov
mov
and
pusha
jns
mov
cmp
mov
test
aam
sub
test
push
jl
lret
jae
in
scas
push
ret
xchg
mov
sub
dec
adc
fs
jmp
jbe
out
dec
les
cmpl
pop
sqrtps
mov
and
sbb
push
stc
cmpsb
imull
adc
ror
lret
jb
scas
cmc
jmp
or
mov
mov
frstor
push
aaa
dec
pop
xchg
sub
test
mov
icebp
sub
cli
loop
adc
cli
mov
stc
dec
pop
fdivrs
jno
mov
inc
mov
push
xor
out
popf
dec
jge
sbb
scas
fsts
xor
push
inc
or
push
inc
cmc
xlat
jne
xor
xor
mov
jl
in
mov
clc
dec
mov
test
inc
mov
inc
sbb
cmpsl
fwait
test
inc
cmp
gs
icebp
aam
repnz
jecxz
add
pop
fs
cli
lock
mov
insb
popa
mov
inc
fisttpl
imul
mov
or
jmp
out
ficoms
shl
out
int
sub
outsb
imulb
mov
lea
mov
pop
cmp
icebp
cltd
dec
addr16
sti
mov
push
mov
push
in
pop
enter
jo
iret
cmp
leave
adc
daa
arpl
nop
adc
xchg
loopne
or
pop
push
movsl
mov
jg
add
lret
scas
push
mov
movsb
pop
pop
adc
inc
inc
adc
push
push
call
fbld
data16
aad
mov
sub
sbb
pushf
or
xlat
push
cmp
adc
mov
arpl
xlat
test
loopne
dec
adc
es
decb
lret
inc
jmp
frndint
ss
pushf
and
pop
and
pop
jecxz
lock
mov
test
pop
and
push
sahf
sahf
xchg
aam
or
das
stos
bound
or
mov
int
imul
jmp
ljmp
repnz
dec
je
lahf
sti
fwait
mov
in
adc
ljmp
mov
repz
insb
pop
cmpsl
sbb
pop
jle
add
add
xchg
and
repnz
lret
inc
push
mov
sub
imul
lret
aad
out
insl
and
call
mov
dec
popa
push
xlat
mov
mov
mov
add
and
push
inc
mov
pusha
cmp
and
ret
sbb
out
insb
dec
mov
mov
mov
outsb
inc
aam
shrb
dec
mov
std
sub
and
sub
add
jnp
mov
testb
cld
add
in
mov
inc
ljmp
push
sub
fwait
data16
push
or
sbb
dec
jge
jbe
sub
jg
lret
cs
inc
or
adc
lds
ret
ffreep
pop
xor
xchg
add
sub
mov
cmp
fidivrs
pop
sti
rclb
mov
and
cmp
outsl
pushfw
cmp
rol
push
js
call
xor
into
callw
out
das
cmp
cwtl
xor
cmp
int
test
loop
dec
pop
aaa
lret
push
adc
rorl
mov
jnp
stos
inc
jbe
xor
xor
pop
mov
imul
cli
inc
or
inc
pop
and
push
test
lret
and
add
outsb
and
inc
outsl
mov
or
out
aad
popf
adc
cmpsl
jno
adc
leave
stos
push
scas
push
lock
jg
pop
cltd
add
xlat
lret
mov
mov
rolb
sub
mov
aaa
jmp
rolb
xchg
out
pop
aad
call
scas
std
into
lods
scas
filds
mov
push
lock
mov
fs
in
mov
scas
gs
push
negl
pop
push
jp
rorl
xchg
jne
sbb
out
add
add
call
cmpsb
mov
cld
jge
pop
sub
enter
lahf
negl
xor
xchg
sarb
sub
pop
or
arpl
pop
repnz
mov
jne
jae
mov
and
jbe
rorl
mov
lods
lret
xor
cmpsb
sub
mov
call
loope
push
cmp
inc
sahf
movsb
or
and
mov
into
int3
mov
mov
or
push
push
loope
pop
mov
add
xchg
adc
rorb
and
hlt
cmp
sbb
cmpsb
and
shlb
mov
movsl
roll
mov
push
add
jo
jno
and
fs
jbe
das
cmp
call
inc
je
jp
out
shlb
and
sub
inc
inc
push
dec
inc
add
mov
mov
cltd
sbb
fldt
popa
xor
sub
cmp
mov
pusha
clc
xorl
cwtl
fnstsw
icebp
mov
xor
test
push
sbb
movb
pusha
std
xchg
jecxz
fcomps
push
fldt
ror
inc
lret
enter
mov
ljmp
std
or
mov
jg
jg
loop
loopne
jns
andb
fnstcw
push
std
mov
pmaddwd
subb
xor
dec
clc
ret
and
jmp
inc
in
pop
sub
test
hlt
or
iret
dec
sbb
lahf
cmpsl
arpl
mov
or
jge
into
movsb
and
cmp
push
adc
cmp
sub
mul
ret
xor
sub
mov
mov
shl
sbb
xchg
sbb
or
pusha
pusha
sub
popf
push
movb
hlt
push
imul
push
sub
push
fldt
add
test
inc
aas
mov
stos
les
or
adc
adc
data16
ss
lock
mov
pusha
xchg
mov
pop
data16
pop
mov
sub
push
sbb
mov
mov
push
jbe
lods
jbe
pop
add
mov
imul
sti
scas
push
cli
popa
or
mov
push
fsubrp
xor
and
and
sub
stos
mov
cmpb
fnsave
rolb
shr
cli
mov
inc
cltd
sub
icebp
int
or
adc
xor
iret
mov
mov
cmp
repz
stos
and
cwtl
outsl
imul
mov
adc
push
sbb
ja
push
out
shll
cmp
imul
dec
aas
push
int
fstp
xor
dec
mov
xor
dec
adc
es
repz
adc
icebp
cwtl
fstl
inc
ljmp
cwtl
hlt
xor
lret
mul
dec
movsl
sbb
int
inc
pop
rolb
jb
outsb
cmpsb
insl
pop
adc
lea
test
mov
xchg
stos
fs
movaps
and
fdivl
scas
pop
stos
lret
push
adc
enter
cli
dec
fmull
out
or
xor
jno
cmp
frstor
add
sub
mov
out
sbbl
loop
in
ret
loope
stc
fucom
sub
dec
xchg
popa
mov
mov
adc
adcl
pusha
outsb
push
nop
pop
push
sbb
push
into
push
call
out
scas
inc
icebp
jp
xchg
xlat
scas
pop
or
js
je
cld
inc
rsm
sbb
mov
xor
sarb
or
mov
add
or
lret
out
push
dec
cmpb
ja
in
sti
mov
inc
xchg
testb
int3
int3
daa
mov
xchg
dec
xchg
sbb
stc
adc
imul
rcrl
das
aas
jmp
frstor
add
adc
lret
out
jmp
sbb
inc
lcall
hlt
mov
and
dec
pusha
fcoms
pop
mov
movsl
pushf
ret
jecxz
movsl
sbb
int
jno
decb
fst
cmp
cmpsb
jb
lret
sub
ret
cmp
cmp
pop
or
sbb
outsb
sub
cmp
mov
inc
popa
fsubs
aad
dec
sbb
rcl
lock
xor
decb
adc
mov
ret
dec
fistl
mov
dec
add
sbb
imul
stos
aaa
xchg
out
call
push
mov
mov
and
test
ljmp
lahf
pop
hlt
in
jno
cmp
push
jo
pop
add
in
dec
or
cwtl
popa
and
xchg
sbb
add
pop
lds
lods
fcompl
cmc
stos
and
paddusb
enter
sub
cld
mov
fistl
mov
xchg
ja
imul
push
iret
js
scas
jl
sub
lcall
sub
ljmp
push
jecxz
movsb
stos
pop
pop
sbb
mov
bound
sti
mov
xor
mov
or
pop
flds
cwtl
sub
lcall
lods
mov
lods
movsb
mov
cld
lods
sbb
int3
and
je
inc
insb
imul
mull
aas
sub
pop
push
xor
iret
inc
fwait
mov
inc
sbb
xchg
aad
insl
mov
sbb
mov
sbb
sbb
adc
xor
inc
test
gs
mov
or
jne
push
aad
push
cmpsb
aas
pop
sbb
cltd
pushf
inc
pop
mov
sbb
icebp
pop
xchg
lods
sahf
leave
rorb
push
and
and
mov
shl
test
jne
imul
pop
movsl
cwtl
mov
stos
push
scas
mov
lcall
les
into
mov
cmc
hlt
inc
js
dec
mov
pop
sahf
pop
inc
fwait
mov
pop
ss
movsb
xchg
lret
mov
loop
push
bnd
les
push
or
fldenv
mov
xchg
enter
dec
or
inc
dec
je
fwait
cmp
adc
faddl
mov
cmp
sub
lea
xchg
add
mov
inc
xchg
mov
push
mul
addr16
call
dec
les
or
pop
jne
fsubl
jmp
sbb
xor
aad
dec
and
fucomip
loope
mov
mov
pop
push
test
xchg
inc
inc
fidivrl
xchg
and
rcrl
fcmovnb
daa
rcr
loop
insl
daa
nop
stc
mov
test
jecxz
mov
or
rorb
das
pop
shlb
fld
movsb
mov
jl
mov
xchg
jnp
cld
pop
out
mov
adcl
mov
dec
mov
ss
xchg
outsb
mov
push
stc
lcall
pop
xor
dec
loop
shld
sub
jo
push
mov
cmp
pop
sub
xor
and
cld
jno
lret
rcl
add
dec
and
fimuls
dec
scas
pop
add
scas
out
lods
add
fistpll
and
pop
dec
daa
es
arpl
scas
push
sub
insb
pop
idiv
ljmp
add
in
xlat
fsubrs
test
lds
fisttpll
je
repnz
jns
js
mov
pop
cmpsb
sub
fdivrl
ja
or
loope
test
stos
sbb
lcall
dec
and
mov
scas
sbb
pop
xchg
movups
mov
cmc
sub
xchg
mov
pop
cmp
dec
add
fisttpll
out
sbb
push
mov
mull
int
sti
fdivl
popf
cwtl
out
out
cmp
fisttps
fldt
addr16
in
lds
out
scas
xlat
arpl
mov
and
out
or
cmp
insb
mov
lcall
sub
cmpsb
js
jnp
lea
arpl
push
les
push
add
push
or
fwait
pusha
fwait
or
mov
pop
inc
push
jae
push
push
push
mov
push
movb
nop
mov
push
dec
and
xchg
enter
mov
mov
in
pop
sti
mov
pop
shrl
loope
test
sbb
outsb
addl
pop
mov
mov
inc
mov
mov
lcall
jb
fstpl
add
mov
sbb
clc
and
repnz
sub
or
dec
pusha
repz
and
insl
and
ds
mov
lcall
loop
and
sub
and
sub
rorb
xorb
arpl
sub
stc
push
jbe
sub
jbe
out
add
lea
cli
outsb
sub
cld
mov
jle
mov
and
ja
negb
jecxz
xchg
push
cwtl
in
mulb
sub
push
imul
mov
fcomps
in
in
mov
cltd
mov
pop
jmp
movsl
sub
jmp
push
mov
pop
dec
pop
sub
sti
and
jg
and
sbb
mov
pop
pop
cmp
and
and
jae
or
jo
ficompl
xor
jge
clc
fcmovnb
mov
repnz
cmp
sahf
out
push
jo
mov
out
and
mov
mov
ljmp
lahf
dec
jae
orb
int
mov
insb
movsl
js
jno
mov
mov
mov
cld
mov
push
ds
aad
mov
xor
stos
mov
push
enter
lea
and
mov
daa
mov
sub
into
fnstsw
add
dec
lea
ja
push
jle
lock
push
out
enter
mov
es
pop
outsb
shl
jae
nop
popf
add
addl
movsl
cmpsl
and
inc
cmp
pop
adc
cmp
call
lcall
mov
orb
jp
push
fldt
stos
ja
arpl
aam
nop
into
and
adc
jge
jno
sub
xchg
mov
dec
enter
adc
push
xchg
pop
sbb
cmpsb
jbe
ficoml
enter
push
lock
sbb
hlt
xlat
call
cli
mov
pushf
jbe
rorl
jl
sub
jecxz
sbb
adc
aad
es
jo
jo
icebp
ja
int
jne
dec
push
repnz
int3
movsb
jb
pop
fnstcw
xor
push
fcmovbe
sbb
xchg
xor
sbb
add
add
jmp
loope
cmp
rclb
sahf
cmp
and
scas
clc
and
out
adc
test
mov
lods
jae
in
loope
imul
jo,pt
sti
jne
sbb
mov
test
pop
dec
fdivs
mov
inc
int3
sub
cmp
imul
loopne
cmp
test
rclb
int
lods
out
jl
xchg
mov
dec
inc
fcomps
loopne
add
or
mov
stc
mov
sbb
xor
lret
xchg
and
xor
loopne
fsubrs
mov
pusha
mov
sbb
mov
jl
push
jle
test
sbb
xlat
adc
pusha
inc
or
out
scas
dec
pushf
xchg
in
lcall
sti
jne
dec
aaa
push
dec
data16
test
push
popf
sbb
fcoms
ret
mov
test
lea
lret
aam
scas
lea
inc
jmp
out
pop
add
jmp
mov
mov
rol
lods
mov
sub
inc
ret
dec
jl
xchg
sub
and
sbb
rcr
cmpl
cmc
jle
mov
jae
and
xor
xchg
dec
xchg
jl
jg
decb
lock
es
mov
das
popa
inc
lret
popa
in
fimuls
cmp
mov
add
das
mov
push
test
cli
jl
out
add
int
dec
pmaxub
sbb
inc
push
loop
mov
mov
mov
out
shlb
mov
mov
ret
lret
inc
outsb
pop
bound
add
xor
and
push
loop
xor
jge
mov
cmp
cmp
jl
mov
inc
mov
pop
sti
outsb
imul
or
nop
pop
sub
pop
push
mov
sub
ftst
es
dec
inc
movsb
scas
test
mov
repz
pop
or
cmpsb
adc
sbb
subl
pushf
divl
je
lods
mov
sbb
dec
mov
sub
dec
sub
loopne
xchg
inc
mov
mov
cmpsb
lea
adc
andb
movsl
ja
lret
xor
stos
jl
ja
dec
test
jp
adc
scas
fistpll
mov
mulb
mov
jno
in
insl
xchg
mov
mov
lea
inc
mov
imul
fwait
mov
push
xor
sub
call
xchg
xchg
jo
dec
dec
mov
ret
push
shl
and
dec
cmpsl
fistl
push
jg
sbb
es
ret
std
jno
pop
out
adc
xor
jae
or
push
xchg
lcall
roll
mov
addb
mov
imul
mov
sub
gs
fistpll
xchg
jle
mov
jle
cmp
push
mov
jne
sub
xchg
mov
jns
imul
dec
or
fwait
lock
js
xor
cltd
sbbb
les
jge
adc
icebp
insl
push
push
adc
out
cltd
mov
test
ss
leave
ret
leave
ljmp
dec
mov
mov
lahf
xchg
lea
xchg
mov
ljmp
icebp
mov
dec
movsb
add
sbb
sti
les
dec
sub
xchg
rcrl
dec
movsb
push
shlb
inc
mov
xor
test
and
insl
fmulp
repnz
sbb
sub
imul
mov
sbb
mov
and
adc
aam
sub
insb
jmp
ljmp
bound
push
idivl
lahf
cmpsl
rcrb
popf
mov
insl
or
push
test
dec
ja
mov
sub
jmp
pop
xchg
lret
jmp
aaa
cmc
sub
mov
dec
iret
movsl
jbe
rcl
mov
adc
cmpsb
pop
pop
roll
jbe
xor
mov
jae
or
int3
rcl
loop
jp
xor
loope
push
cmc
pusha
and
add
jb
imul
jge
cmp
push
adc
fdivrl
test
fidivs
jmp
gs
test
stc
lret
push
rolb
xchg
rcrl
out
cli
add
mov
xchg
movsb
pop
lret
icebp
sbb
push
icebp
cli
das
stos
lods
sub
sbb
push
pop
aam
ljmp
movsl
pop
int
in
ss
stc
xchg
push
cmp
cwtl
test
pushl
jne
sub
stos
and
iret
sahf
inc
dec
out
test
lods
and
loope
pushf
push
xchg
dec
cld
sub
cwtl
or
pop
inc
cmp
adc
clc
adc
gs
adc
mov
out
cli
or
dec
pop
pop
je
mov
ret
jb
sbb
js
insl
sub
add
xchg
jae
scas
pop
ss
mov
add
mov
dec
fistl
rcll
xchg
dec
adc
xor
cs
sahf
out
mov
cmc
das
push
sub
mov
sub
jo
popf
and
icebp
pop
ljmp
js
sti
and
push
in
ss
jno
xor
pop
cmp
loope
cs
fcoml
nop
dec
shll
loope
scas
xchg
aam
xchg
cmpb
cmc
out
xchg
mov
mov
inc
pop
cmp
lcall
shll
ja
inc
push
or
and
xor
jmp
pop
ljmp
push
sub
sti
insb
and
add
dec
rcrb
push
pop
mov
push
or
xor
sub
movsb
sahf
pusha
dec
dec
and
mov
cltd
in
ret
jae
xchg
xchg
mov
pushf
aam
pop
scas
xlat
adc
loopne
pop
andnps
pop
js
xor
jbe
cli
sub
pop
adc
lods
pop
mov
out
sbb
jns
int
mov
cld
pop
loope
bound
mov
add
ret
inc
mov
pop
pushf
mov
xchg
jle
jbe
js
movsl
push
in
adc
jno
negb
cwtl
dec
shll
mov
inc
fnsave
movsb
icebp
inc
and
aam
dec
dec
add
lea
sbb
mov
xchg
push
inc
lret
fsubrs
fstps
sarb
xchg
mov
call
fistpl
jo
sbb
dec
enter
icebp
pop
and
outsl
inc
rclb
xchg
pop
leave
push
ja
std
out
mov
inc
sbb
mov
push
mov
das
and
and
nop
push
lods
mov
dec
adc
pushf
jg
fmuls
dec
lret
aas
xorb
jns
les
hlt
stc
outsl
addl
or
push
or
push
or
add
adc
add
out
cmp
and
cli
fsubrl
loope
in
aaa
pop
cmp
lret
test
or
sbb
mov
pop
inc
and
pop
repnz
fsubrs
mov
fs
mov
xor
imul
mov
imul
fwait
int3
push
gs
aam
inc
out
pop
ret
aam
pop
test
pop
xor
repnz
xchg
pusha
xchg
lea
loope
lret
jb
nop
sub
jp
sbb
jecxz
jne
arpl
xor
xchg
shl
stos
jmp
sbb
sub
xor
iret
mov
popa
scas
mov
mov
movsb
into
mov
inc
adc
hlt
mov
lds
fldl
push
dec
pminub
mov
fdivrl
xor
out
imul
xchg
aaa
pop
negb
push
dec
into
cmc
shrb
outsb
loop
sub
add
sbb
faddl
outsl
mov
xor
fdivl
inc
aaa
hlt
jmp
dec
xchg
in
ljmp
and
xor
mov
lret
sarb
push
in
insb
into
mov
lods
repz
xor
int
add
pop
push
jnp
or
std
sbb
xorl
fidivs
push
jbe
dec
movsl
pop
adc
cmp
xor
cmp
inc
fadd
cmp
push
push
or
lock
sbb
movsl
jmp
jle
xorl
sbb
push
jne
sbb
negb
cld
stos
xchg
mov
ficompl
cmp
testl
lds
and
xor
js
dec
stc
jle
mov
lods
cltd
xor
std
iret
lcall
xlat
inc
adc
inc
or
test
setbe
in
daa
pop
mov
xchg
xlat
sub
rol
push
movsl
sbb
lahf
outsb
outsb
mov
frstor
scas
ds
ds
dec
insb
jnp
std
xchg
mov
sbb
adc
mov
pop
test
aas
popa
int3
and
daa
xor
and
ljmp
jbe
cmpsl
xchg
lret
scas
insl
dec
and
adc
neg
jg
mov
outsb
xchg
sti
mov
push
and
int3
cmp
les
adc
push
cmpsb
pop
jp
in
mov
mov
jnp
int
clc
sub
xchg
mov
ds
out
and
or
iret
in
fnsave
add
mov
mov
xor
fldenv
lds
inc
in
mov
cld
dec
pop
mov
jp
pushf
lods
cmc
imul
les
sbbl
jp
aam
sub
mov
imul
mov
and
inc
mov
stos
sub
or
mov
mov
inc
push
dec
push
push
mov
popa
shrl
rorl
ja
pop
sahf
or
or
or
loopne
shll
adc
jp
mov
popa
sub
jae
ret
push
inc
and
cmpsb
mov
and
push
add
jle
xchg
sub
loope
adc
nop
xchg
shrb
xchg
add
and
nop
divb
add
push
pop
cmpsb
pop
sub
dec
sub
xor
xor
push
jno
jmp
jo
lds
push
adc
fildll
aam
jecxz
js
loope
sbb
push
mov
add
sbb
inc
add
aad
mov
push
ss
pop
mov
lds
rcl
add
into
or
mov
cmpsb
dec
jo
dec
xchg
or
inc
pop
add
dec
cli
adc
push
pushf
aad
or
scas
cmpsl
inc
adcb
aaa
xor
test
mov
ss
mov
xchg
push
stos
xchg
adc
ljmp
test
shl
xchg
inc
call
stc
mov
stos
push
inc
ss
dec
mov
les
mov
sbb
divl
icebp
cmp
inc
cs
pop
push
icebp
pop
scas
push
test
mov
loope
fxam
ret
mov
sub
add
popa
pop
cmp
int3
aaa
outsb
shlb
lods
lret
xchg
or
mov
push
push
scas
movsl
push
jbe
out
pop
call
xchg
lods
xchg
xchg
xor
push
and
jl
jnp
inc
scas
loopne
ret
cld
call
shlb
sbb
rclb
push
stos
push
cltd
adc
xchg
into
inc
jns
sbb
jecxz
je
aas
aas
stos
push
ja
jecxz
dec
insb
addl
mov
inc
int3
mov
loope
cmp
shl
mov
scas
stos
push
and
and
adc
add
push
jne
jns
addr16
jecxz
pop
push
loopne
ljmp
dec
xor
dec
mov
and
mov
xor
test
stos
mov
incb
ret
std
lods
push
mov
xchg
and
mov
adc
test
or
mov
lock
mov
cmp
or
imul
int3
stos
push
hlt
ds
or
cmp
inc
push
mov
jecxz
cltd
rclb
or
call
les
and
cmp
sub
and
cmp
jae
jp
dec
pop
mov
mov
push
aam
movsl
mov
lods
or
sti
imul
add
loopne
sbb
lds
sub
dec
cmc
pop
shrb
shrb
cmp
inc
cmp
mov
xor
xchg
cld
movsl
push
mov
mov
pop
sub
xor
push
xor
push
int3
into
jg
stos
loopne
or
insl
or
andb
sbb
jp
xor
pop
jg
mov
test
jp
cmpsl
ds
adc
out
int3
inc
sahf
rclb
enter
push
jo
lahf
jg
daa
jp
lea
mov
inc
and
xchg
ret
cmpsb
insl
fs
jne
adc
test
xor
test
ss
scas
es
push
mov
fsubrs
push
xlat
xchg
pop
fldenv
mov
jl
add
loopne
inc
movsl
sbb
and
mov
adc
mov
pushf
rcrb
pop
out
lret
jmp
loopne
cmp
push
pop
xor
stc
sbb
rol
out
mov
inc
jne
ljmp
sub
jb
call
push
popf
icebp
cmp
stos
mov
xor
arpl
leave
es
mov
pop
mov
or
lock
negb
pop
mov
fcmovnb
jmp
aam
xor
std
inc
adc
dec
cli
insl
adc
or
push
sbb
aas
push
lcall
nop
fadd
pop
adc
inc
xor
jp
and
pop
xchg
stc
dec
mov
in
mov
fwait
xor
cmp
stos
pop
mov
jmp
pop
xor
inc
push
fidivrs
into
mov
loope
mov
std
dec
cmp
sbb
lock
inc
stc
pop
pop
jno
dec
test
cli
hlt
jb
push
push
sahf
sub
insb
ds
and
movsb
mov
add
enter
push
and
ret
mov
jmp
jg
iret
mov
pop
ja
jmp
push
inc
aaa
pop
xorl
or
push
adc
add
cmp
std
movsb
popf
sub
inc
das
stos
stos
cmpsl
adc
mov
icebp
mov
pop
inc
push
fwait
ret
add
jp
jg
cmpsl
ficompl
or
add
mov
mov
in
push
test
addr16
lea
pop
jmp
or
cwtl
push
lahf
push
mov
cs
and
fnsave
push
sub
push
mov
add
dec
jnp
sbb
push
sbb
rorb
fwait
les
or
sti
inc
aam
std
lret
popf
ficoms
fwait
imul
fcmovu
testl
add
addr16
mov
and
sbb
loop
mov
push
pop
cmp
or
mov
push
fstps
push
cmp
cld
xchg
cmpsl
ror
xchg
pop
cmpsl
ja
repz
dec
ret
clc
inc
inc
cwtl
adc
sarl
xchg
dec
je
jmp
sbb
out
xorb
cld
cltd
xor
loopne
shrl
movsl
fdivrp
dec
iret
call
xchg
adc
sub
aas
mov
inc
add
add
popf
ljmp
loopne
outsl
jecxz
jge
push
fimuls
add
push
clc
bound
rcrl
push
ret
fwait
cmpl
add
dec
pushf
pop
pop
push
sbb
jmp
sbb
jno
les
sub
jmp
adc
xchg
dec
iret
fwait
adc
cld
jp
and
add
cli
int
and
mov
daa
mov
add
nop
push
or
pop
or
dec
aaa
and
stos
dec
dec
roll
fists
push
in
and
add
stos
push
stos
xchg
mov
loopne
adc
mov
addr16
adc
dec
loopne
in
cmp
xchg
loope
arpl
push
cmp
mov
stos
mov
inc
xchg
adc
jno
jmp
ret
orb
mov
xchg
or
je
cmp
aam
cs
jl
ss
or
les
mov
mov
and
pop
dec
mov
rorb
push
mov
pop
pop
xor
ret
ret
push
push
pusha
fistps
in
sti
inc
jecxz
sbb
cltd
pushf
movsb
add
push
mov
lock
sbb
xchg
pop
xchg
cli
adc
cs
jg
cmp
insl
fs
jmp
pop
in
inc
inc
out
push
inc
ror
and
in
and
fxch
mov
out
xchg
xor
inc
push
mov
iret
cli
sbb
cmpl
andb
pop
ja
rol
adc
test
test
jb
add
sub
push
icebp
push
ficomps
testb
mov
mov
adc
gs
loop
inc
or
mov
leave
mov
rcrb
mov
frstor
ficoms
sbb
in
lret
mov
mov
xchg
into
daa
cmpsb
and
test
pop
enter
mov
fstpt
xchg
jecxz
scas
add
push
shlb
fists
mov
xor
daa
bound
into
mov
xchg
push
imul
pop
sbb
bound
into
pop
in
andl
outsb
pop
out
nop
movsl
sar
int3
or
mov
je
push
or
inc
inc
sti
adc
leave
mov
out
lock
jle
xor
out
repz
outsb
pop
sub
fadds
cmp
mov
insl
sbbl
lret
das
mov
pop
mov
out
adc
mov
pop
repz
cmp
sbb
shlb
add
mov
mov
xchg
jae
push
sbb
pusha
bound
adc
sub
dec
cs
mov
subl
add
nop
in
or
or
cmp
push
sub
add
mov
or
xor
mov
push
mov
xor
add
leave
cltd
mov
adc
cs
mov
add
jbe
lock
mov
and
cmp
dec
xor
addr16
sub
lods
cld
jno
in
or
xor
adc
sbb
lods
mov
push
cmovae
sbb
icebp
xor
and
sbbl
push
xchg
sub
inc
movsb
xchg
dec
in
pop
rolb
cmp
xor
lcall
add
and
and
lahf
jecxz
roll
call
jp,pn
push
pop
sbb
sbb
jge
cmp
xchg
sbb
loop
dec
xchg
idiv
test
mov
sbbb
pop
imul
lcall
loope
cmp
jl
fcmovb
adc
aam
pop
pusha
push
and
aam
add
xorb
popa
jge
mov
jle
push
xchg
xchg
iret
mov
xchg
jo
or
sbb
in
test
lock
sub
sbb
cmp
filds
lret
gs
data16
les
jns
ds
mov
jns
aam
xchg
das
add
and
adcb
mov
out
and
pop
mov
and
inc
sbb
es
mov
sbb
pop
dec
xor
out
mov
lahf
test
es
mov
sbb
xorl
dec
in
fdivr
mov
or
es
cli
pop
decb
sbb
add
xor
jbe
in
mov
jnp
add
push
ret
fnstenv
nop
cmp
push
cmp
and
ret
loope
iret
push
and
sub
aad
xor
fcoms
repz
repz
push
mov
sti
sahf
and
inc
mov
fdivrl
cld
adc
inc
jg
pop
dec
mov
divl
aam
or
jmp
fnstenv
dec
pop
add
push
inc
pop
cmp
filds
or
mov
mov
jno
sub
adc
icebp
mov
in
imul
and
jge
pop
cwtl
scas
push
mov
mov
movsb
push
ss
into
sbb
xchg
clc
rcl
into
cmp
lret
jp
test
mov
gs
loop
shr
cmp
inc
cmp
pop
les
mov
cwtl
jb
xor
ljmp
xlat
dec
rolb
movsb
sub
jecxz
pop
cmc
cmp
sbb
js
jo
jg
loope
das
stos
cmp
and
shr
cmp
fidivl
jae
mov
iret
movsl
and
ror
mov
pop
subl
jge
pop
shlb
cmp
mov
stos
cs
in
adcl
mov
shll
cltd
inc
jno
mov
xor
sub
and
push
jge
adc
and
or
jns
lahf
mov
fidivrl
ret
mov
stos
cmc
lds
pop
bound
add
push
mov
fisttpl
jne
sub
adcb
fstpt
cmc
scas
movsl
push
push
mov
es
sti
jnp
pop
xor
daa
rcl
sbb
lcall
jnp
stc
adc
fnstenv
cld
or
mov
lret
dec
repnz
add
adc
inc
push
fldl
subl
repnz
mov
out
popf
inc
cltd
popf
sti
icebp
sub
out
lret
mov
mov
inc
mov
inc
jno
ja
sahf
aaa
gs
cld
xor
push
cmpl
ljmp
gs
aaa
int3
stc
add
js
hlt
sahf
gs
xlat
push
sub
dec
push
fidivl
js
mov
jg
gs
or
fisubrl
pop
clc
jae
fisttpl
pushf
xor
out
iret
inc
cltd
sahf
shrb
add
insl
and
adc
gs
shr
fldl
addr16
push
lods
push
cltd
into
movb
push
jl
cmp
or
add
mov
add
aaa
jns
xchg
xchg
jns
ljmp
push
lahf
xchg
out
testl
sub
pop
sbb
xchg
jae
mov
cmp
icebp
daa
xor
mov
aas
pop
sub
out
inc
and
out
and
push
sbb
mov
int3
mov
sahf
lods
into
add
sti
push
jb
cmovg
frstor
rcrb
sbb
mov
mov
sbbb
addr16
jmp
xor
fwait
adc
cwtl
popf
repnz
test
arpl
mov
or
jmp
in
lea
mov
add
mov
orl
xor
enter
xlat
mov
sbb
shlb
sbb
push
xchg
sahf
es
jno
lock
mov
inc
pop
shrl
mov
aam
xchg
or
ret
ja
sbb
inc
lcall
or
fldl
arpl
xchg
out
mov
jl
scas
ljmp
orl
and
sahf
sti
subb
shlb
cmpsl
mov
les
test
jp
nop
pop
dec
cmp
cmp
push
aad
mov
sbb
push
and
mov
mov
sbb
pop
aad
add
aaa
and
loop
adc
shlb
mov
dec
pop
rorl
dec
mov
cmp
and
xlat
sbb
shll
ret
sbb
add
andb
mov
inc
xchg
adc
sub
test
jmp
inc
jbe
inc
fmuls
test
sbb
add
fisttpl
adc
mov
push
cmp
sbb
dec
cs
or
mov
mov
das
dec
lahf
pop
jecxz
mov
ss
nop
pop
and
lcall
xor
or
sub
adc
std
shlb
fcmovnu
in
lret
add
cmc
xor
hlt
popf
sub
xchg
fidivrl
jge
xchg
repnz
or
js
lds
add
divl
sbb
push
push
lods
lret
rcl
leave
in
jmp
into
cwtl
cs
push
inc
push
xorb
fsubr
push
in
lock
cmpsb
xlat
ljmp
je
sbb
jge
and
test
cs
add
sub
enter
cmp
test
mov
mov
cld
popa
xor
aam
pop
mov
ret
cmc
lcall
sahf
dec
push
inc
xchg
loope
mov
jge
pop
pop
stc
adc
sahf
test
addr16
repz
imul
sub
jbe
leave
fstl
idivl
cwtl
loopne
sub
dec
add
movsl
movsl
jmp
pop
aam
mov
fst
cmp
adc
out
cmc
sbb
mov
outsl
mov
out
cmc
into
movb
cltd
add
and
mov
xor
push
xor
xchg
mov
push
in
mov
je
xor
adc
add
int3
adc
mov
iret
lahf
mov
std
fs
and
aas
jp
les
adcb
mov
pop
ret
or
pop
jge
outsl
fsubrl
int3
sbb
out
cmpsl
inc
test
jle
sub
gs
mov
adc
std
cmc
cmpsb
cmp
outsb
cmp
dec
dec
jae
xchg
mov
stos
xor
sub
jecxz
adc
test
imul
jnp
lea
daa
xor
cli
push
je
clc
gs
push
pop
fwait
and
adc
pop
ret
sub
inc
inc
inc
push
fistpl
or
mov
dec
pushf
loop
pushf
fisubrs
call
daa
popf
ja
cmc
lret
mov
sahf
pop
clc
jp
rorb
cwtl
xor
and
and
mov
push
enter
loope
out
out
dec
test
out
inc
xchg
xchg
pop
cmpsl
or
das
jle
lock
jns
mov
sbb
bound
mov
push
mov
pop
je
jb
pop
scas
insl
fbld
sti
ljmp
cs
push
daa
inc
mov
push
cmp
pop
or
cld
out
pop
shrb
imul
jmp
out
and
sbb
sahf
xor
jmp
pop
into
test
and
dec
xchg
push
push
test
lret
inc
or
cwtl
inc
pop
inc
loop
sarl
mov
and
pop
test
ss
sbb
stos
jg
dec
fwait
jge
repz
mov
sub
sbb
sahf
mov
enter
mov
dec
loope
shr
add
bnd
push
daa
add
cmpsb
mov
cmp
inc
dec
push
loopne
cmpsl
xchg
add
cmpsl
jg
dec
int3
cli
hlt
push
sbb
cmpsl
pop
mov
inc
lea
ret
mov
outsl
pop
xor
inc
lds
hlt
mov
mov
roll
in
mov
dec
je
inc
loopne
enter
and
dec
and
ret
adc
rcrl
dec
ja
sbb
jl
cmp
dec
cmpsb
pop
push
int
fildll
push
clc
and
mov
imul
testb
sbb
sub
repnz
jno
jmp
push
dec
mov
xchg
cmc
jae
pop
inc
push
or
push
orb
xorb
jge
fcompl
lods
dec
pop
stos
lds
xor
xor
add
mov
test
or
lret
xor
push
into
pop
leave
enter
inc
clc
inc
sahf
mov
mov
push
sahf
loope
push
shll
lahf
lds
add
mov
push
clc
inc
insb
je
mov
xchg
pop
and
dec
stos
stos
cli
add
jle
xor
ds
jecxz
or
in
and
dec
adc
and
xor
js
std
mov
fstl
adc
fldenv
ds
test
bound
sbb
jecxz
fstp
cmc
cltd
xchg
repz
sbb
jo
sbb
loop
pop
int3
aaa
loope
mov
insl
test
into
mov
dec
mov
std
cmc
int
jecxz
push
sub
loopne
push
sub
inc
push
cli
or
adc
xor
lods
pop
inc
jmp
or
push
push
mov
scas
push
add
mov
mov
mov
cmpsl
add
mov
add
xor
test
xchg
jns
in
pop
aad
adc
insb
jmp
adc
pop
sbb
jns
or
lods
out
adc
pop
mov
pop
push
incb
jns
dec
mov
cld
sbb
cmp
int3
dec
mov
lock
imul
jbe
xor
cmpsb
cmp
jl
or
pop
test
pop
stc
scas
lahf
bound
scas
add
and
dec
roll
jle
jb
test
insl
bswap
inc
push
jg
adc
call
mov
clc
lcall
mov
icebp
stos
arpl
ret
rolb
and
enter
iret
ret
enter
mov
push
daa
pop
pop
and
nop
in
jne
pop
xchg
jb
shrl
jmp
ret
fsub
rolb
mov
cli
xchg
mov
and
insl
push
push
icebp
xchg
jne
icebp
cld
push
aas
cmc
cltd
sbb
or
out
roll
and
scas
dec
das
pop
fstpt
lcall
leave
aam
dec
mov
sbb
mov
lock
fists
jecxz
or
ljmp
xchg
stc
loop
daa
stc
and
dec
mov
ja
repnz
xchg
dec
lods
cld
jmp
inc
jno
sbb
mov
xor
inc
jle
mov
inc
test
mov
mov
xchg
push
pop
xor
fwait
push
sub
addr16
push
push
sub
inc
lret
xchg
notl
mov
es
mov
arpl
int3
sbb
ret
push
inc
adc
jo
imul
push
cmp
in
andb
sbb
or
nop
out
xor
dec
iret
xchg
dec
add
pop
std
out
and
and
inc
push
movb
outsb
mov
test
cwtl
int
pusha
imul
xor
and
add
das
sbb
loope
mov
dec
mov
inc
es
and
loope
cmpsb
and
jmp
sub
mov
jge
xchg
push
in
dec
test
and
rcrb
movsb
leave
arpl
sub
mov
imul
xor
fcmovu
out
sbb
repnz
xlat
shl
xor
stos
dec
cmp
enter
cmp
sub
pusha
and
pop
xchg
or
imul
int3
outsl
in
push
mov
adc
jge
ja
nop
jo
pop
mov
mov
dec
popf
jmp
xor
lods
pushf
idivb
or
lret
jmp
fldl
cmp
rol
out
cwtl
push
inc
inc
cs
jne
mov
mov
cmpsb
adc
imul
icebp
push
or
push
lods
mov
cwtl
adc
shll
jb
jb
scas
jbe
add
push
push
cmpsl
bound
adc
xchg
and
dec
pushf
ret
push
xchg
mov
fisubrs
mov
clc
mov
out
enter
cmc
fisttpl
in
lahf
sbb
mov
out
imul
lods
aam
call
scas
inc
lock
les
inc
xchg
mov
inc
lea
pop
call
pop
push
inc
lret
add
push
out
popf
out
xor
jno
mov
xchg
cmp
mov
inc
mov
add
loope
add
int
ds
xor
push
call
testb
mov
jp
or
pop
ja
insb
adc
into
mov
loope
xlat
imul
cld
out
or
mov
dec
and
jo
cmpsl
mov
cmp
ret
test
fcomps
int
nop
sarl
xor
push
fimull
scas
in
dec
add
imul
cld
cmp
adc
lcall
mov
out
sub
icebp
cltd
or
fiadds
push
fldcw
mov
sti
fisubrl
cmc
test
loop
dec
std
mov
xchg
addr16
mov
jne
mov
cmpsb
ljmp
dec
icebp
pop
xchg
add
popf
addr16
cmp
add
xchg
cld
lea
sar
xor
into
fxch
xchg
and
push
xor
mov
es
add
xor
rclb
aad
push
test
pop
into
js
lret
lock
sbb
adc
mov
call
inc
cwtl
in
lods
mov
adc
shrb
jle
enter
ja
andb
lods
mov
fdivrl
call
pop
lods
fwait
std
jae
cli
or
arpl
xchg
imul
mov
cwtl
add
call
movb
pop
jno
lea
stc
movsb
jbe
mov
jg
xchg
xor
mov
adc
mov
imul
inc
or
shll
lock
mov
jnp
int3
xorl
mov
jl
jl
sbb
add
add
aad
test
stos
dec
sbb
bound
shll
cwtl
inc
xchg
mov
imul
roll
jecxz
shrw
repnz
push
xchg
ss
js
dec
fidivl
and
out
push
pushf
cmp
ja
fprem
adc
fistps
pop
repz
fs
scas
enter
lahf
in
mov
xor
jp
xchg
mull
push
stos
pop
pop
mov
pop
jmp
xchg
ret
and
push
ljmp
xchg
movsb
gs
xchg
lods
push
leave
mov
push
push
pop
ror
or
repnz
mov
mov
fiadds
mov
inc
dec
fmull
jns
or
roll
push
hlt
or
dec
loop
stos
leave
xchg
lods
pusha
xorl
je
cli
rorl
sbb
add
xchg
jnp
es
sub
repnz
pop
aas
aas
ret
out
fwait
insl
or
stc
mov
pop
adc
pop
add
adc
scas
fwait
and
pop
test
push
inc
ja
aam
test
mov
fadds
mov
or
xchg
xchg
scas
mov
outsb
bound
xor
inc
ror
jb
or
mov
shll
xchg
andl
cmpsb
fmulp
pop
xchg
cmpsb
call
mov
fdivl
rcll
cltd
and
mov
xchg
int3
cmp
sbb
fcmovb
imul
in
outsb
mov
out
cmc
xor
push
jno
adcl
pop
sbb
mov
push
cs
dec
xor
push
lods
insl
pop
sti
xchg
bound
test
sub
call
add
or
add
repz
sub
bound
or
xchg
xchg
in
iret
jg
jle
pop
dec
jl
rcrb
mov
cld
jmp
ret
lret
pop
jmp
jb
jbe
subl
lret
dec
in
pop
jl
add
out
fistpll
loop
pop
jp
popf
add
pop
shll
lea
mov
addr16
cmp
test
inc
lock
sbb
cmp
test
add
mov
sbb
jbe
aam
jno
cmp
pop
cmpsl
negb
dec
jl
lea
rcrb
jmp
or
push
mov
call
adc
inc
add
mov
jl
push
flds
jno
cli
jmp
mov
add
rcl
fimuls
movsb
loope
in
xchg
test
sti
loop
or
xchg
ret
sub
push
sbb
stos
lea
ljmp
and
aad
neg
dec
aam
cmp
int3
inc
imul
or
jb
xchg
jnp
jae
ljmp
ret
aas
rcll
mov
and
lea
push
in
cmp
leave
imul
sub
test
mov
cs
cmpsb
or
jnp
add
jp
leave
stos
js
mov
and
pop
les
mov
test
popa
xor
xchg
cmp
and
push
inc
and
push
nop
add
pop
mov
fadd
and
push
push
pop
hlt
ljmp
arpl
sub
pop
or
dec
ror
cmp
push
push
sbb
fldenv
push
inc
divb
mov
das
in
cwtl
jno
test
gs
push
sbb
mov
inc
jmp
sbb
data16
test
fs
outsl
inc
scas
jecxz
lock
sbb
jbe
jecxz
arpl
ds
movsb
xchg
xchg
in
shrl
fmuls
leave
mov
add
jb
or
xorb
or
je
adcl
sub
xor
xor
stos
lcall
sbb
repz
inc
cmp
or
cmpsl
test
addr16
pop
hlt
adc
add
mov
lea
ds
test
pushf
outsl
sub
ja
sub
dec
mov
repnz
cmp
cltd
lret
sbb
jecxz
cld
or
fistl
push
xchg
sbbl
mov
pop
and
pop
adc
loopne
xor
sub
push
imul
pusha
mov
test
pop
icebp
std
cmp
lahf
cmc
and
stos
sti
jne
add
mov
out
jb
mov
int3
jno
adc
mov
aas
idivb
andl
loopne
mov
pushf
insl
jo
inc
and
and
cmp
inc
add
pop
xor
adc
jecxz
sbb
cltd
mov
aas
jns
adc
das
jl
cs
add
jle
jp
scas
inc
cld
cmp
xor
inc
cwtl
add
xchg
mov
divb
mov
rol
cmc
pusha
xchg
pop
iret
ljmp
xor
fsubrl
mov
hlt
ljmp
ds
sti
leave
fs
mov
pop
clc
mov
das
fidivs
cwtl
sub
jl
add
jg
rcrl
lds
xchg
loope
push
and
mov
dec
xchg
repnz
pusha
jno
jge,pn
in
mov
cli
mov
sub
xchg
js
cmp
test
roll
aaa
cmc
and
movsb
imul
or
push
es
movsl
adc
xor
mov
mov
push
fcomp
push
cmp
jge
mov
cld
lret
adc
in
mov
sbb
movsb
xor
shlb
xor
push
or
sbb
inc
fiadds
jp
test
les
mov
fidivrs
dec
pop
or
cs
cld
iret
outsb
ret
mov
mov
inc
in
cwtl
sub
outsl
stos
jns
dec
aad
jns
bound
lret
call
fidivs
mov
fidivl
insl
repnz
insl
je
sub
mov
mov
sbb
int
xchg
add
xor
sbb
aaa
out
adc
push
insl
outsb
jb
xchg
xor
xor
lret
xchg
and
pop
jp
ss
out
andl
dec
push
and
into
stos
adc
mov
aaa
pop
sbb
daa
xchg
data16
roll
shll
xlat
pop
pop
jmp
nop
jnp
push
roll
add
adcl
jne
xor
out
repz
das
push
xchg
into
mov
insl
mov
int
jnp
popa
push
mov
mov
lods
data16
in
dec
or
gs
jo
add
out
call
inc
stc
xchg
aam
dec
stos
pop
inc
add
dec
pop
sub
jl
cmp
adc
jge
je
imul
sahf
and
rcr
lahf
inc
test
push
int
pop
ljmp
scas
dec
lods
mov
xor
hlt
rcrl
pop
divl
and
dec
daa
rorb
cs
sbb
arpl
mov
or
cmp
or
cmpsl
push
icebp
imul
unpcklps
cli
xlat
xorl
cmpxchg
xchg
mov
pop
es
cmc
pop
adc
fcoml
lock
stos
mov
jne
push
rorl
lods
cld
dec
pop
cmp
pop
es
ret
cli
out
dec
xchg
jne
adc
movsb
dec
arpl
mov
mov
add
cmpsl
rcll
xlat
mov
sub
mov
cs
xlat
push
sbb
sub
mov
xchg
cmp
jns
cmp
cmp
mov
in
lret
ss
rcr
shlb
test
push
or
ss
inc
inc
fimuls
popf
push
adc
fmuls
sbb
dec
pop
mov
fsubrl
xor
js
loop
sarb
cmc
xor
inc
jl
push
pop
test
ss
movsl
cmpsb
divl
lret
outsb
enter
out
mov
popf
mov
fidivs
scas
std
sub
jb
pusha
pop
mov
mov
idivl
lds
or
jnp
loop
and
and
add
cmc
pop
mov
inc
or
push
bound
notb
push
inc
andl
push
into
pop
int
jmp
fwait
jnp
pop
paddw
movsb
cwtl
dec
stos
in
sbb
pop
js
imul
cmpb
jbe
sbb
test
cli
and
xlat
jmp
hlt
test
sub
xor
test
cmp
out
jmp
scas
sti
mov
cmp
call
int3
xchg
imul
xor
dec
sub
xlat
ret
cmpb
mov
shlb
fists
mov
lods
add
pushf
fmuls
and
push
mov
or
lods
or
cmp
xchg
ret
jno
imull
fiaddl
push
out
fistps
outsl
outsb
ds
loope
jmp
es
fwait
sub
lret
sarb
sbbb
mov
test
int
inc
mov
dec
ror
loope
or
cmp
or
dec
and
mov
jo
je
test
and
out
mov
cld
and
mov
mov
int3
push
imul
mov
mov
mov
sbb
gs
lds
loope
cmp
vorps
inc
popf
pop
orb
or
xchg
aam
mov
adc
or
jbe
js
cwtl
mov
cmp
add
and
idivl
or
sbb
es
scas
stos
pop
dec
add
aaa
out
nop
decb
lds
clc
pop
xchg
xor
insl
push
in
pop
ss
cmp
flds
mov
pop
pop
stos
inc
push
enter
cwtl
push
jecxz
out
jns
mov
hlt
daa
xor
in
js
sti
adc
sub
and
xor
popa
int3
pushf
push
imul
inc
jg
add
mov
jne
mov
xchg
push
gs
xchg
mov
xchg
xchg
push
mov
pop
or
lcall
jecxz
mov
add
and
sbb
mov
adc
cmc
in
pop
adc
jne
enter
push
push
xor
mov
clc
rcr
shlb
xor
mov
rol
fiaddl
adc
jp
out
call
lea
clc
jecxz
push
jmp
unpckhps
sub
insl
xchg
je
push
inc
xlat
stos
fcomps
test
test
sub
int3
jge
push
repz
cmc
pop
lock
hlt
add
les
repz
imul
loope
fnsave
cmp
push
lds
xlat
mov
stos
and
sub
scas
ret
lahf
adc
sub
mov
pop
push
or
test
and
mov
adc
and
jb
pop
mov
leave
movsl
js
adc
pop
push
xor
inc
jb
dec
mov
dec
sbb
shll
jb
mov
cwtl
cltd
push
sbb
xor
loope
in
imul
mov
mov
cmp
cmp
and
mov
xchg
jns
add
mov
dec
sub
push
stos
repz
xchg
in
and
call
xchg
add
out
sbb
sub
pop
jge
test
cltd
or
aas
xor
sar
sub
hlt
push
notrack
cmp
pop
adc
sub
pop
std
and
push
scas
push
push
cwtl
adc
cltd
cmc
dec
adc
or
fdivrs
dec
add
rolb
repz
cmpsb
aam
sbb
jge
lahf
pop
pop
lods
pusha
add
cld
ret
mov
sbb
ljmp
xchg
popf
cs
push
lret
mov
jle
fstpt
jle
repz
inc
scas
sub
andl
sub
xor
jecxz
lahf
and
dec
jb
cmp
add
cmp
jo
sub
lods
lahf
add
imul
sub
mov
cs
stos
and
add
dec
jecxz
rol
stos
repz
rcl
push
pop
xchg
push
and
and
call
sbb
repnz
cld
mov
incw
mov
int3
dec
outsb
mov
lods
sub
dec
sub
push
sahf
nop
andl
fwait
aaa
add
pop
push
ficomps
mov
jle
dec
pop
lcall
shl
iret
push
shll
inc
fsubrl
pop
mov
rorl
jge
or
push
movsb
and
pop
adc
popf
mov
jmp
scas
fimull
xchg
sarl
mov
push
inc
xchg
enter
shlb
nop
pop
inc
push
clc
icebp
or
adc
and
out
shlb
xor
push
xor
mov
clc
lock
dec
adc
or
cmpsb
xchg
shlb
push
inc
push
adc
pminsw
jp
gs
sti
aam
fcoml
stc
test
mov
add
ret
push
cmp
jmp
inc
das
dec
int
mov
push
aaa
fcoms
add
jb
jno
inc
jb
adc
dec
lock
pop
aad
movsb
mov
test
leave
fnsave
mov
mov
sub
ss
inc
clc
mov
aad
push
test
int
pop
int3
pop
rcrb
xorb
lahf
pop
hlt
xchg
jp
testb
scas
out
lods
out
icebp
cmp
push
and
pop
ficoml
ror
stc
pop
lahf
mov
mov
int3
cmp
testl
popa
push
cmpsb
lret
xchg
daa
dec
repnz
int3
cmpl
jb
mov
pop
inc
ret
push
aaa
lcall
pop
xchg
scas
and
push
sub
xchg
add
lcall
mov
jae
movsl
rorl
std
imulb
cmc
fdivr
pop
or
mov
cmp
push
sbb
mov
cmp
ss
add
shll
sarl
or
stos
and
in
pop
mov
jecxz
cmp
pop
popa
imul
sub
inc
dec
sbb
cmp
gs
jb
nop
shrb
and
out
xor
call
fsubl
mov
rclb
enter
in
or
imul
enter
fwait
or
adc
xchg
mov
cmp
xlat
and
jno
test
cmp
jae
cmp
daa
add
xlat
aas
xchg
jo
push
lret
add
mov
inc
sahf
mov
addl
ret
decl
xor
add
push
sti
cmp
mov
mov
pop
js
xor
ljmp
movsb
cmp
out
xchg
les
push
fisubrl
pop
insl
mov
movmskps
fcoml
cmpsb
daa
mov
pop
lea
adc
xchg
jns
stos
lahf
test
add
repnz
fmuls
test
shll
xchg
js
fldt
fcomp
push
jl
or
sub
and
and
or
adcl
in
clc
out
jnp
cltd
popa
shll
addr16
lcall
cmp
sub
idivl
fwait
cld
push
aad
jb
add
xor
dec
inc
or
mov
imul
cmc
or
inc
fbstp
dec
push
pop
arpl
mov
sarb
mov
sbb
add
dec
dec
jge
fildl
and
sbb
cmc
or
sbb
xchg
cmpsl
and
inc
mov
sub
insl
fdivrs
loopne
add
mov
ljmp
xchg
mov
pop
sub
mov
push
sub
sbb
push
add
ret
fistps
adc
cmp
idivb
icebp
shlb
mov
or
call
cmpsb
jae
mov
sti
xlat
roll
jne
cs
push
adc
lret
and
stc
xchg
insb
arpl
test
js
pop
jle
dec
sbb
pop
xchg
jp
mov
jmp
sub
cmpsl
call
out
leave
push
inc
inc
repnz
push
stos
mov
xchg
shrb
cmc
int
inc
dec
lds
pop
ror
lods
jne
pop
sub
inc
movsl
xchg
imul
mov
cmpsb
pop
xchg
jno
outsl
mov
ss
std
dec
push
cli
xchg
push
push
add
jg
in
jecxz
jae
mov
mov
dec
insl
mov
fsubl
scas
push
or
dec
add
movsl
and
dec
dec
imul
pushf
xchg
cld
fxch
cmc
lock
dec
scas
adc
andb
loope
jnp
stos
pop
xchg
das
and
pop
pop
mov
push
outsb
cmpsb
test
pop
testb
push
or
fwait
push
fisubl
xchg
add
sub
sub
ficompl
shrb
and
push
addr16
jbe
mov
mov
mov
mov
in
outsb
jbe
cmp
mov
xor
cmpsl
mov
jmp
in
push
in
ficoms
adc
mov
cmp
dec
pop
mov
jno
repnz
popl
push
inc
sahf
cmc
push
or
aam
das
sub
adc
loopne
xchg
aas
out
push
cmp
fwait
push
dec
out
jns
movsl
xor
push
mov
clc
and
in
inc
dec
aaa
sbb
mov
xchg
dec
test
cmp
pop
mov
lds
notl
or
mov
in
aaa
adc
add
iret
adc
or
and
or
test
test
enter
xchg
cld
fbld
pop
inc
std
adc
ret
and
add
icebp
sbb
popa
lds
inc
je
fwait
in
mov
adc
and
jg
xchg
and
sbb
mov
pop
cmp
push
fmulp
fdivs
mov
adcb
push
sbb
mov
xor
dec
inc
jl
push
lahf
sub
jo
jae
std
out
xor
xor
test
add
cmc
push
loopne
pop
or
lock
jo
mov
std
loopne
xchg
push
insl
ljmp
push
xchg
rorl
pushf
pop
push
jmp
xorl
jne
mov
sub
in
popa
push
loope
jno
inc
xchg
cli
sbb
test
cmp
fs
das
dec
mov
test
outsl
inc
sub
rcll
dec
jg
dec
adc
jmp
fnsave
mov
adc
ss
mov
add
cmp
cmp
sbb
jle
adc
pop
jl
daa
ljmp
cmp
cmp
xchg
shr
mov
xor
test
negl
cwtl
cli
test
dec
push
cwtl
adc
jnp
and
imul
push
cmp
add
sub
push
jmp
inc
push
mov
sbb
xorl
stos
sbb
lds
movsl
jo
lcall
cmp
mov
add
aad
xor
pop
mov
out
nop
push
push
pushf
jo
lock
ja
xor
cmpsl
lods
xor
xor
sbb
cltd
loopne
cmp
mov
xor
jmp
xchg
loop
out
xor
cmp
cmp
and
dec
outsb
push
cmpsl
lods
orb
call
inc
lahf
cmpxchg
inc
dec
cmpsb
stos
dec
pop
sbb
sub
loop
sub
data16
inc
sub
add
jns
lods
repnz
pop
icebp
outsl
sub
imul
cs
and
aas
adc
popl
shll
adc
jno
mov
adc
pusha
mov
push
scas
incb
and
xchg
decl
push
insb
sbb
lods
std
ljmp
fwait
icebp
xchg
lods
mov
loopne
int3
orl
sbb
insb
cli
push
pop
fs
cld
popf
mov
xchg
jns
pop
sub
inc
adc
popf
jle
sbb
scas
loop
rcll
adc
inc
dec
sbb
sbb
ror
jge
arpl
pushf
push
loopne
dec
mov
push
popf
scas
pop
js
add
sbb
and
sub
ja
xorl
scas
and
ljmp
pop
mov
push
loop
sub
sti
hlt
ret
jmp
testb
mov
mov
and
inc
pop
in
test
sbb
xchg
push
test
insl
inc
or
cmp
sbb
loope
js
test
lahf
xor
xchg
div
add
sti
repnz
pmulhw
fisubrs
xor
push
fdivr
or
inc
jb
jg
or
inc
pop
push
sub
insl
orl
enter
adc
and
iret
popa
lock
ds
scas
pop
adc
adc
push
je
movl
shll
and
mov
test
xchg
cli
push
or
sub
add
out
inc
mov
mov
mov
add
sbb
and
ja
mov
lock
mov
push
sbb
add
cmpsl
popa
pop
sar
daa
dec
mov
lret
ljmp
mov
pop
push
cmp
xchg
bound
cmp
xchg
or
cmp
add
jno
imul
adc
sub
adc
jg
jmp
fdivrl
lods
adc
stos
sub
push
jg
aad
mov
out
push
and
clc
push
imul
int3
fwait
push
sbb
mov
aad
aaa
or
mov
xor
daa
sub
jge
pop
dec
fstpt
mov
cmp
inc
jmp
nop
dec
int3
dec
mov
fptan
fbstp
sbb
push
inc
jmp
sub
push
repnz
inc
cmpsl
int3
adc
mov
push
pop
test
fisubrl
daa
inc
sbb
out
jbe
sbb
xchg
dec
lds
out
pushf
jecxz
addb
sub
loope
call
jge
inc
push
call
or
mov
stc
sbb
xchg
pushf
mov
stc
cmp
rorb
mov
in
add
popa
cmpb
pusha
xchg
sub
push
mov
sti
dec
push
mov
inc
sbb
cltd
sub
sub
clc
imul
popf
sbb
cmp
jmp
or
mov
es
hlt
dec
mov
adc
lods
add
jno
adc
jecxz
or
cmp
seto
dec
loope
mov
xchg
lahf
jo
mov
push
adc
pop
jns
push
mov
jl
fbstp
adc
pop
out
xchg
mov
add
mov
xor
sbb
int3
add
fildl
daa
sbb
push
sbb
and
aad
push
cli
mov
pushf
adcb
mov
lods
scas
out
dec
xchg
rcll
add
enter
hlt
roll
ret
xchg
jno
xchg
dec
push
push
loop
mov
jbe
adc
lahf
test
push
xchg
das
inc
loopne
pushf
add
imul
roll
jns
mov
xchg
pusha
jg
decb
fsts
imul
data16
jle
inc
push
mov
incb
std
mov
icebp
fisubrl
xchg
jecxz
or
pop
and
xchg
mov
pop
in
pushf
inc
out
inc
cmp
movsl
cmpsb
sub
xor
pop
sbb
jl
cmp
sub
les
push
pop
push
ljmp
add
jbe
xchg
inc
dec
mov
and
adc
int
je
and
sub
clc
sub
sahf
gs
je
or
adc
sbb
lods
mov
xchg
mov
fucomp
mov
or
pop
iret
inc
out
or
fidivrs
jns
add
mov
loop
dec
sbb
repz
mov
xchg
mov
loop
pop
jmp
inc
or
icebp
adc
mov
jl
fs
mov
sarb
jb
test
xchg
leave
subl
mov
in
pop
pop
orb
out
xchg
les
jne
sti
sub
das
roll
subb
scas
das
imul
hlt
jb
std
add
loope
or
out
or
xor
pop
out
ja
insb
int3
lock
dec
lock
inc
sub
sbb
sarb
shrb
mov
mov
fcmovnb
inc
pop
mov
and
xor
icebp
pop
shll
add
fcmovnu
rolb
mov
aaa
aaa
cmp
xlat
aam
mov
sbb
sub
popf
mov
cmp
push
xor
clc
aam
mov
push
cld
inc
divl
mov
loopne
lods
ja
sbb
add
notl
cli
or
sub
and
sbb
or
int3
xchg
lock
sbb
and
and
cmp
in
sub
rcrl
out
mov
popf
mov
xchg
mov
icebp
stos
sub
add
cs
dec
subb
jl
test
push
pop
xor
sub
rcrb
xor
imul
loop
jae
push
push
out
daa
pop
std
lea
pop
inc
push
mov
jge
fisttpl
adcl
jecxz
divl
cmpsb
enter
jb
popa
movsl
pop
ljmp
jl
push
es
test
lcall
ds
sahf
aam
or
ja
cmpsb
ja
mov
dec
dec
xchg
mov
ror
lock
in
mov
flds
mov
add
loope
sub
scas
ja
icebp
fisttpll
lods
xchg
xor
xchg
mov
lods
test
rcl
push
or
pop
cmp
inc
repnz
fisubrl
les
jg
nop
mov
lret
pop
stc
sbb
mov
fistps
mov
sbb
pushf
jge
or
push
mov
loopne
inc
out
mov
int
push
jle
inc
cmp
jb
push
mov
sti
push
repz
clc
jg
jmp
mov
jge
mov
sbb
push
sub
xchg
out
adc
cmp
mov
sub
jp
inc
or
dec
pop
repz
clc
cmp
cwtl
xlat
inc
dec
xor
xor
in
sub
ret
sahf
jns
pushf
enter
push
mov
fimull
mov
lock
popa
lcall
imull
jl
lock
mov
push
popf
repz
ret
rcrb
xor
add
push
or
mov
das
inc
int3
lods
cs
cmp
leave
and
lret
push
xor
jle
adc
rorl
cmc
dec
movsb
insb
outsl
bound
mov
or
out
popf
mov
je
test
sub
cmp
sub
jmp
jmp
imul
daa
lock
arpl
pop
lods
js
xlat
and
repnz
std
dec
sub
push
sbb
pop
or
lahf
scas
xlat
cmp
lods
cmpsb
or
pop
xor
mov
add
pop
scas
incb
je
xor
mov
imul
popf
adc
and
jg
mov
cmpsl
pop
pushf
fildll
xchg
inc
cmpsb
sub
hlt
movsb
mov
mov
xchg
jae
cmp
outsb
xchg
scas
fisttpl
add
js
cmp
jge
mul
rcrb
fldcw
xchg
adc
sbb
jae
xor
scas
push
in
aas
outsl
sbb
subb
stc
into
mov
or
cmp
shlb
stos
bound
cwtl
cmp
mov
jae
mov
mov
into
pusha
or
jbe
pop
push
xchg
push
inc
aam
fnstenv
adc
stos
shrl
jns
xchg
xor
sbb
push
mov
sbb
ja
push
test
jno
xor
cmp
js
add
mov
or
sbb
push
mov
sahf
jb
push
sbb
mov
fs
jmp
jno
or
xchg
lahf
lods
or
rcrb
aas
popf
and
cmp
nop
sbb
shr
pop
pop
pop
cwtl
add
popf
dec
ss
iret
adc
loope
lret
fisubrl
test
inc
adc
mov
xor
pop
pop
addr16
push
add
mov
mov
mov
mov
out
call
xchg
xlat
outsb
sub
pop
push
or
mov
stos
mov
lods
or
lods
insl
and
dec
pop
ja
or
fdivp
jne
cli
mov
pop
add
xchg
std
sub
lock
into
aaa
scas
xor
mov
and
cwtl
hlt
sub
cmpsb
fidivs
mov
inc
mov
pop
scas
inc
mov
fsubl
insl
filds
mov
inc
add
in
xor
dec
imul
pop
sbb
push
pushf
mov
dec
out
fsubs
insl
add
dec
xchg
popf
xor
inc
mov
jns
cmpsb
in
ficoml
adc
sti
imul
push
pop
aaa
clc
insl
xor
xchg
inc
and
cwtl
nop
addr16
add
and
call
jmp
lea
jge
cld
xchg
pop
jo
call
pop
jecxz
fcoms
leave
mov
sbb
dec
daa
popa
stos
cwtl
jnp
cmpsb
jno
aad
cltd
pop
mov
inc
sbb
push
dec
and
jno
push
cmp
out
sbb
andb
push
loop
data16
mov
push
pop
leave
stc
xor
stos
stos
inc
arpl
jno
cmp
sbb
jae
les
push
in
dec
cmc
mov
jne
mov
mov
push
and
push
sbb
pop
inc
or
xor
pop
mov
adc
sbb
xchg
dec
xchg
pop
in
movsl
dec
add
and
sub
pushf
jmp
shll
mov
mov
jl
cli
jmp
or
pop
add
mov
or
test
jne
pop
in
les
mov
or
sub
shlb
xchg
sbb
test
loopne
fwait
outsb
out
and
das
pop
in
and
xchg
xchg
ret
inc
jp
add
xor
xor
push
hlt
popf
and
pop
ret
fidivs
aaa
mov
xchg
test
cmp
pop
and
pop
lcall
mov
and
test
jno
cmp
gs
xorl
jo
pop
fcomp
jg
cmp
aad
lods
outsl
leave
sub
aas
cmp
cmp
decl
push
enter
aad
dec
pop
adc
pushf
popf
or
cld
pushf
adc
out
push
ss
dec
idivb
add
dec
mov
jb
test
mov
popf
ret
xchg
bound
push
and
sbb
cmpsb
jmp
xchg
lods
sbb
fdivrs
and
pop
mov
rorl
dec
stos
dec
push
jbe
pop
pusha
jb
pop
mov
pop
pop
popa
mov
cmp
mov
loope
mull
in
clc
popf
push
inc
int
lahf
xor
or
insl
jno
fcompl
xor
enter
lcall
sbb
mov
mov
fcmovnu
jae
leave
frstor
sbb
stc
lds
dec
adc
push
jl
dec
xor
pop
push
nop
push
bound
and
jne
add
ret
xchg
mov
xchg
xchg
and
mov
and
xor
js
sti
pop
and
bound
sbb
dec
fldt
scas
ljmp
hlt
and
loopne
add
mov
cwtl
push
popa
pop
or
fs
clc
pop
insb
or
jle
inc
jp
pop
add
in
sbb
adc
add
push
testb
ret
dec
gs
lret
cmp
cmpsl
cmpb
xor
push
mov
push
inc
loopne
in
jp
xor
aaa
dec
mov
jp
xchg
mov
pusha
adc
adc
inc
mov
repz
cmc
paddq
shrb
mov
js
hlt
jno
rcrl
ret
addr16
lcall
fwait
dec
inc
in
fistps
pop
jb
insb
jmp
push
mov
fnstsw
mov
jmp
movsb
dec
pushf
adc
mov
dec
icebp
lods
gs
js
sbb
addl
roll
or
xchg
mov
jecxz
dec
aas
nop
sbb
mov
add
outsb
scas
inc
test
adc
nop
xchg
xchg
imul
mov
lret
out
iret
pop
pop
ret
mov
mov
push
xchg
inc
push
and
rorl
mov
iret
in
pusha
imull
fsub
fildll
ljmp
cld
pop
cwtl
cld
inc
rep
idivl
lods
adc
mov
ss
ss
subl
cmpsl
in
fwait
ljmp
cmpsl
xchg
push
imul
test
in
mov
cpuid
mov
sbb
popa
addr16
or
jb
fwait
mov
pop
mov
adc
xor
push
cmp
and
loopne
sbb
push
in
dec
cld
dec
add
adc
mov
ret
fwait
enter
push
xchg
adc
cwtl
lret
dec
sbb
sti
mov
repz
fcmove
sub
fsts
sahf
out
ljmp
je
mov
cmp
lret
add
jae
and
pop
cmpsb
push
xchg
testl
push
pop
insb
add
icebp
fsubr
mov
test
mov
or
sahf
pop
push
out
add
mov
cmpsb
iret
xchg
repnz
sub
cmp
mov
pusha
stc
adc
jo
mov
push
fs
jbe
inc
or
jl
dec
dec
adc
mov
es
lret
mov
popl
ds
stos
dec
loop
cmp
stos
cs
ret
test
call
in
mov
push
push
mov
mov
adc
push
mov
and
xchg
mov
cmp
out
lahf
je
push
and
pop
and
aas
jp
xor
pushf
xor
fdivs
fwait
mov
lret
sub
ljmp
mov
adc
cld
mov
cmpsl
adc
ss
inc
sahf
ret
call
xchg
mov
mov
lods
xor
sar
mov
pusha
jnp
fwait
push
aas
out
push
test
jle
mov
inc
xchg
loopne
sub
lcall
out
les
xchg
xor
or
jmp
cmp
jno
in
outsb
stc
pop
fimull
sub
cmp
inc
repnz
mov
int3
dec
dec
mov
sub
sub
and
push
shl
cmc
hlt
cmp
lds
jle
push
mov
loope
negb
pop
in
mov
call
adc
pushf
dec
jmp
es
push
mov
add
imul
ss
xchg
push
test
pop
f2xm1
adc
xchg
sub
jb
stc
dec
test
add
push
sbb
mov
addr16
xor
js
cmp
sbb
outsb
dec
mov
lds
inc
dec
pop
outsl
lret
cltd
std
sub
rcl
cmp
cmpsb
fiaddl
mov
movsl
or
jge
adc
adc
mov
mov
cltd
push
cmp
in
mov
jecxz
out
fisubrs
push
adc
cli
mov
subb
out
je
xor
xor
mov
shll
fnstcw
or
pop
aad
rep
and
jp
mov
and
sub
ror
adc
xchg
les
add
push
testl
dec
xchg
inc
pop
add
push
lcall
int3
xor
add
clc
and
fsubrl
xchg
push
dec
mov
mull
fisubs
sbbl
pop
sarl
addr16
outsl
lock
add
jp
mov
out
dec
xchg
lods
pop
enter
addb
jno
cwtl
mov
mov
pop
dec
jg
cmp
push
stc
adc
sbb
aas
cmpsl
xchg
push
xchg
sbb
roll
cmp
mov
cwtl
shl
mov
test
cmp
in
xchg
fsubs
add
push
pop
mov
add
cli
pop
insb
loope
or
lock
loop
aas
cmp
jo
addr16
xchg
call
sahf
enter
pop
and
push
pop
xchg
cld
add
shr
sub
je
ja
fistps
jle
mov
inc
push
add
rolb
incb
dec
sbb
cmp
and
mov
add
mov
adc
sbb
jmp
mov
fs
sbb
sbbb
clc
ja
push
dec
jge
push
cmc
call
addb
inc
mov
push
pop
inc
mov
jp
imull
scas
push
add
lahf
sti
jbe
or
pop
xchg
lock
icebp
cld
lcall
mov
ds
ljmp
leave
mov
pop
and
loopne
mov
jbe
mov
mov
cli
jg
lret
or
push
repz
leave
inc
outsb
in
aaa
add
adc
push
fbstp
sub
pop
adcl
xor
xchg
dec
sub
sahf
mov
cmp
jmp
adc
fsubl
sahf
in
nop
mov
xchg
inc
das
hlt
pop
push
mov
sar
xchg
adcb
in
arpl
and
je
sahf
cld
adc
sub
mov
stos
jbe
call
bound
push
cs
push
push
cmp
adc
jecxz
shrb
add
negb
std
data16
sarb
aas
in
jecxz
pop
mov
mov
mov
ret
leave
cmc
dec
sub
add
popa
lret
push
vpaddw
imulb
shr
pop
stos
loopne
shl
and
inc
mov
add
lock
jno
jg
push
js
or
push
daa
dec
repz
xchg
cltd
stc
or
push
fiadds
popa
shlb
lods
cmp
pop
push
and
gs
inc
cmpsb
jmp
lret
int
repnz
push
fstpt
and
cmp
xor
xlat
cltd
decb
dec
add
push
mov
mov
and
mov
int3
jmp
frstor
push
icebp
xchg
pop
push
lock
sahf
xchg
fcoms
pop
out
push
xor
xchg
ficomps
or
and
ret
mov
pop
flds
cmp
pusha
push
fwait
cmpsl
fisttps
inc
xor
xor
add
shll
sbb
sub
and
add
addr16
out
out
pop
mov
nop
mov
push
sbb
outsl
sbb
scas
mov
xor
in
mov
fcompl
xor
jecxz
dec
sbb
pushl
jnp
orb
pop
mov
jnp
lahf
mov
dec
mov
repnz
insl
push
aam
adc
jg
add
mov
add
xchg
stos
add
pop
cmc
adc
gs
and
or
pop
cmc
xchg
fstps
in
push
inc
xchg
add
jge
fmulp
pop
out
mov
cmc
int
in
adc
cmp
mov
arpl
mov
inc
and
insl
iret
push
aaa
jns
loop
jmp
adc
stc
ljmp
fldt
daa
popa
xor
push
push
mov
or
cli
or
mov
cmp
fsts
inc
pop
add
mov
aam
cld
pop
cmpsl
and
sub
fsubs
mov
mov
ret
inc
movsl
idivl
xchg
adc
mov
cmp
pop
mov
sbb
lcall
jmp
mov
cmpsl
cmpsb
push
sti
inc
mov
std
jg
insl
mov
xor
push
cs
add
dec
test
pop
and
cmp
xchg
icebp
xor
jecxz
lret
dec
clc
cmp
and
das
in
imul
pusha
jno
adc
stos
sub
sti
pushf
add
dec
cmpsb
lods
mov
push
mov
data16
inc
or
cmp
fbstp
xchg
ffree
popf
sbbb
add
shrl
js
add
inc
jne
adc
aad
lods
faddl
jo
xor
arpl
pop
fistpll
scas
jle
shll
je
pop
lahf
push
dec
stc
decl
mov
mov
jnp
jle
cwtl
fwait
popa
clc
test
pusha
and
mov
push
loopne
push
jae
fwait
cmp
inc
insl
scas
cli
and
sub
or
movsb
mov
mov
in
rcrb
pop
pop
ss
add
mov
dec
cli
cmp
dec
push
nop
xchg
push
popf
sub
and
leave
xchg
inc
jo
ja
ficomps
adcl
sub
xchg
cmpsb
dec
inc
movsb
pop
aam
adc
or
das
aam
adc
ss
mov
and
mov
or
adc
jb
dec
div
mul
inc
shll
out
test
add
and
lret
cmpsl
movsb
adc
leave
adc
cld
dec
sbb
jae
dec
sbb
out
push
aaa
mov
pop
mov
clc
adc
and
shll
or
jle
mov
push
stos
imul
lods
ljmp
mov
popf
sub
xorl
cmp
adc
adc
jp
pop
lods
ret
xchg
jnp
cmp
into
xor
insb
push
out
jecxz
bound
or
fisubrs
lea
jge
cmp
push
jnp
cmc
adc
sbb
fincstp
shlb
cwtl
mov
lea
mov
push
mov
fwait
dec
inc
and
sbb
mov
jnp
and
or
cmp
popf
sub
mov
sbb
push
push
dec
and
xchg
stos
jecxz
cli
rcrl
testl
mov
cmp
in
bound
imul
dec
in
loope
enter
dec
xor
ja
test
addr16
insb
cmp
dec
nop
inc
loop
sbb
movsb
fwait
xchg
inc
adc
push
push
jbe
cmp
sub
dec
cmp
dec
sub
fwait
cmp
ret
dec
stos
mov
cmp
sbb
jl
lret
loope
out
pop
mov
je
xchg
popa
xor
push
jbe
int
popf
leave
loopne
cwtl
aam
cli
sub
lds
stc
je
repz
iret
jae
inc
mov
xchg
push
xor
hlt
or
decl
inc
in
mov
jno
xor
inc
loop
scas
dec
jo
outsl
xchg
push
int
or
dec
push
out
mov
push
xor
push
movsb
pop
pop
cwtl
ret
inc
scas
fptan
sub
jb
xor
add
mov
ss
lcall
sbb
scas
mov
xchg
sub
or
xor
dec
inc
pop
cs
xchg
add
mov
insb
push
ret
cmp
xor
sti
pop
adc
xorb
data16
xor
mov
dec
jle
inc
int
les
jp
std
out
fcoms
sub
xchg
xchg
mov
mov
cli
add
aaa
and
jne
jmp
xor
xor
mov
xor
sub
jmp
xchg
xchg
xchg
leave
sub
jle
orb
sbb
and
arpl
mov
add
xchg
jbe
jnp
xlat
jge
aam
cli
xor
aaa
movsl
jbe
flds
lcall
lock
imul
jns
lret
cmp
xlat
rcr
scas
adc
mulb
ljmp
mov
in
xchg
push
test
daa
outsl
cmc
into
in
jle
mov
cmc
lcall
adc
cltd
mov
cmp
xchg
popf
rorb
xor
ret
mull
hlt
lds
out
adc
sub
in
cmp
mov
outsl
gs
inc
sti
in
in
jl
mov
inc
in
push
mov
jns
add
inc
leave
lock
cli
int
cld
fcoms
or
xorl
dec
int3
or
add
orl
out
mov
ret
add
mull
in
and
add
sbb
xchg
dec
push
scas
cli
mov
dec
es
in
lret
pop
out
test
les
pusha
or
pop
jmp
inc
test
sbb
sbb
ret
popa
jl
lcall
mov
mov
jnp
adc
insb
fldl
and
mov
mov
lahf
iret
inc
sti
dec
push
sub
nop
sub
inc
pop
in
mov
call
std
or
loopne
push
enter
stos
cld
adc
lods
pop
rclb
mulb
roll
add
sbb
lods
pop
and
jecxz
ds
in
in
cmpsl
clc
mov
xchg
fisubs
push
es
add
or
hlt
xlat
push
inc
jl
xchg
mov
inc
lahf
cmova
xchg
pushf
sub
divl
mov
xchg
test
mov
mov
add
push
push
mov
hlt
test
xchg
and
mov
test
lock
lods
addl
or
in
mov
lods
scas
inc
pop
pop
push
aas
iret
iret
jb
xchg
pop
cmp
adc
xchg
add
push
div
dec
ja
pop
jge
sub
dec
in
mov
lahf
adc
xor
imul
les
inc
adc
cwtl
mov
test
inc
shr
mov
push
xchg
out
dec
push
adcb
pushf
xor
mov
stc
xchg
push
pop
mov
lock
mov
push
movsl
and
push
add
cs
cmc
add
inc
outsb
add
les
pop
mov
pop
and
push
std
ret
fst
in
dec
xchg
push
jmp
js
sub
sub
stos
negl
mov
cmc
divl
sub
orb
push
push
popa
cmp
cmp
pop
ljmp
fldt
cwtl
xor
flds
jae
add
or
daa
sub
cmc
jnp
ret
jmp
or
jge
enter
lods
outsl
mov
inc
push
jb
dec
data16
dec
dec
cmp
ljmp
lods
in
jne
fcoms
ja
pop
test
insb
pusha
push
stos
inc
or
int
adc
xchg
jb
jg
xor
mov
push
cld
adc
inc
iret
jne
mov
cmc
sub
pop
lret
lahf
push
pop
movq
pop
loope
fs
icebp
stos
or
or
jle
in
fdivl
jno
movsb
xchg
lods
xor
ds
leave
jg
popf
pop
cmpsl
mov
scas
int
je
dec
mov
cmp
hlt
pusha
pop
fcoms
ljmp
rcrb
hlt
xchg
and
pop
dec
jg
sti
pop
clc
outsl
loope
orl
popf
cmp
pop
imul
inc
imul
push
dec
pop
ficompl
pushf
adc
in
sub
ss
or
add
pop
jne
mov
icebp
cmpsl
cltd
mov
sahf
xor
mov
out
hlt
sbb
mov
pop
sbb
mov
decl
or
and
aaa
lods
push
popl
aas
sahf
cwtl
roll
outsb
xchg
call
shlb
mov
cmp
pop
fistl
xchg
adc
enter
cmp
mov
adc
jnp
adc
jl
sub
push
stos
pop
add
int
dec
cltd
aas
pop
out
pop
mov
cmpsb
push
sub
mov
aas
inc
push
mov
inc
push
sbb
sbb
lds
cmp
les
cs
jg
mov
pushf
negb
jae
std
or
mov
jo
sbb
shlb
sub
dec
mov
or
inc
mull
enter
test
jp
lock
dec
loopne
mov
movntps
daa
inc
lock
subb
loop,pt
jne
pusha
shlb
mov
mov
fcmovnbe
sub
adc
jle
mov
and
xchg
cmpsl
push
sti
sarl
movd
mov
inc
bound
subb
mov
outsl
das
jge
sahf
push
pop
sbb
sub
js
jmp
repnz
fcompl
dec
sbb
add
test
rcr
adc
pushf
lcall
push
sub
pop
pusha
rcr
dec
movsl
mov
clc
jle
sub
push
cwtl
xchg
xor
jae
rorl
fcompp
xchg
xchg
shlb
cmp
imull
push
ficompl
or
loope
xor
pop
pop
mov
aaa
lret
jns
sbb
pop
push
aas
leave
pop
cmpsl
xchg
jg
push
cmp
lock
inc
out
push
and
bound
pop
mov
dec
fsubrs
sbb
and
mov
sti
jp
cmp
push
aas
sub
mov
push
mov
popa
xchg
in
xlat
roll
pusha
sbb
stos
adc
shlb
mov
inc
jbe
dec
mov
dec
dec
jle
lea
or
mov
les
inc
pop
xchg
daa
adc
bound
xchg
nop
scas
cmp
and
adc
mov
ja
cli
and
jno
mov
call
sub
rolb
orl
xchg
sub
dec
out
add
mov
popa
jo
shr
adcl
jno
pop
cmp
mov
xchg
sub
or
sub
aaa
sbb
push
xchg
enter
xchg
packuswb
mov
into
push
xchg
dec
or
mov
push
lea
cmp
shld
adc
stos
ret
inc
xor
push
or
adcb
xor
sbbb
mov
xor
inc
std
fsub
adc
aad
ss
imul
std
add
scas
push
leave
jg
test
xor
out
cmp
cmc
push
jp
mov
lret
xchg
mov
cmp
loop
cmp
adc
in
and
sbb
sub
lahf
mov
sub
mov
adc
bound
add
or
psllw
jl
pushf
les
or
dec
mov
mov
sub
js
adc
cwtl
lods
dec
mov
cmp
out
fs
aas
add
movsb
mov
add
je
ror
xor
mov
gs
inc
mov
mov
push
inc
lcall
xor
pop
fucom
jge
ds
ror
add
jge
test
rcrb
xor
push
pop
fldt
xchg
test
adc
in
push
imul
test
jns
nop
test
popf
fcomip
popa
aad
nopl
xchg
pushf
arpl
repnz
sub
outsb
xchg
push
jnp
lods
fs
pop
cwtl
mov
popf
mov
fwait
insb
fstpt
inc
std
decb
test
cwtl
mov
andl
out
mov
sub
pop
xorb
xchg
push
fdiv
pushf
or
rol
inc
fiaddl
jo
xlat
stos
out
jecxz
mov
dec
adcb
orb
or
mov
inc
lock
push
adcb
jg
test
test
xor
push
inc
shl
sub
jp
icebp
nop
ret
inc
imulb
and
fstl
dec
test
scas
test
rcl
lock
and
mov
sbb
and
in
imul
out
xchg
insl
inc
push
xor
lret
inc
icebp
adc
imul
je
mov
out
test
mov
cmp
dec
orb
out
xlat
mov
call
test
mov
lods
xchg
sub
mov
loopne
adc
sub
stos
rolb
jge
pusha
fwait
or
das
nop
cmp
cmc
test
mov
inc
inc
xchg
dec
and
int3
popa
xchg
xor
adc
cmp
adc
fwait
ljmp
ret
dec
cmp
sbb
xchg
cltd
mov
lret
or
outsb
aas
pushf
popa
mov
sub
aad
mov
in
out
js
into
lods
cld
mov
lcall
jno
cmpsl
fxch
adc
repnz
out
fnstenv
jecxz
jmp
or
adc
int
pop
mov
pop
scas
add
addr16
icebp
push
xchg
sub
stos
rorl
ss
loop
pusha
sbb
insb
jmp
ret
sbb
and
adc
cmp
sbb
cs
dec
adc
fisttpl
insl
bound
pop
sub
aas
xor
loopne
mov
inc
dec
mov
mov
add
test
push
jb
notl
hlt
mov
push
adc
bound
stc
outsb
adc
test
iret
xchg
fwait
mov
push
addr16
pusha
add
push
jp
xchg
pop
hlt
xchg
adc
and
out
aad
xor
movsb
filds
jecxz
int3
lea
pop
movsb
inc
fwait
or
xor
mov
and
pop
cmp
mov
dec
bound
out
mov
pop
push
mov
imul
jae
sub
jmp
jg
cltd
imul
add
outsl
pop
adc
cmp
jb
push
repnz
lods
xchg
mov
hlt
push
mov
fldcw
rorl
cwtl
pop
mov
shll
mov
fs
js
shlb
scas
sbb
lret
insb
aad
clc
or
lret
loope
or
adc
jmp
push
fmul
pop
cmp
loop
push
in
sbb
imul
push
sbb
int
out
sub
jmp
out
das
decl
pop
imul
outsl
xor
jmp
push
iret
lret
inc
or
or
sbb
sbb
test
call
add
adc
test
mov
outsb
xchg
icebp
adc
in
adc
lods
push
flds
aaa
and
cmp
mov
push
loopne
mov
xchg
xor
mov
dec
in
stos
andl
inc
out
mov
mov
pop
adc
in
lcall
pop
dec
iret
inc
xchg
std
sub
enter
cltd
das
lcall
fwait
pop
mov
sbb
sbb
jp
add
mov
mov
out
in
int3
jmp
push
push
leave
js
push
inc
sti
out
out
pop
push
sbb
idivl
leave
outsl
push
push
loopne
push
and
repnz
in
dec
imul
and
jg
jg
xchg
aam
sbb
xor
add
out
cli
inc
bound
sbb
jg
mov
xor
mov
out
sbb
inc
cltd
mov
xchg
push
add
or
xchg
test
adc
cwtl
pop
shrb
inc
pop
iret
pop
gs
inc
cltd
pushf
dec
sbb
dec
mov
in
or
sbb
cmpsb
add
or
mov
cmp
pop
jp
cmp
dec
jae
loope
pop
adc
pop
mov
jo
je
test
dec
and
in
jg
add
subb
add
push
push
imul
jge
fdiv
pushw
and
xor
ss
or
aaa
mov
iret
out
arpl
sahf
lods
cmpsb
repz
add
jnp
pop
outsl
repnz
cmpsl
je
jecxz
jmp
iret
sub
xor
xchg
mov
mov
or
cs
lds
sub
out
cld
imul
pop
sbb
sbb
adc
add
lret
pushf
cs
fcomip
or
out
dec
into
mov
or
push
mov
ds
rolb
xchg
adc
jecxz
adc
repz
cld
dec
mov
xor
hlt
jp
dec
jg
cmpsb
xor
xor
push
stos
test
fiadds
clc
jecxz
mov
test
jo
imul
cmp
fwait
pop
lods
lods
xor
js
cmc
xchg
jns
push
mov
mov
out
sub
enter
inc
or
mull
add
jge
movsb
inc
or
iret
hlt
or
in
cmc
insl
lret
iret
cmc
je
aaa
ror
das
int3
jg
cmc
mov
inc
icebp
into
sahf
pusha
movsl
mov
shlb
stc
jl
shrl
jmp
xchg
jmp
dec
add
or
mov
stos
sbb
cmp
sub
test
ja
sbb
sbb
push
sahf
jae
rolb
js
aam
sbb
cmpb
fcoml
call
jl
cs
dec
pop
xchg
or
sbb
inc
sub
dec
cmp
clc
testb
push
fiaddl
movsb
test
push
imul
mov
mov
mov
inc
stos
mov
push
jle
cmp
inc
mov
add
std
xchg
fnstsw
fcoml
rcrl
push
xor
mov
lcall
movsb
test
dec
jnp
lods
xchg
int3
outsl
dec
cs
rcr
pop
mov
dec
lahf
rolb
out
jns
scas
subb
je
loop
stos
lods
cltd
pop
pop
xchg
or
addr16
outsl
lods
or
jle
sub
xchg
out
outsl
add
cmp
mov
xchg
sarb
xor
mull
and
and
push
or
out
push
je
pop
aam
rcl
sbb
shrl
or
jge
or
into
dec
cs
or
mov
rcll
lea
adc
push
dec
lahf
and
out
mov
ret
mov
xchg
mov
sub
push
mov
and
dec
and
inc
push
sub
or
loop
or
push
lods
jle
cmp
movsl
or
sti
mov
mov
idiv
xchg
xor
mov
mov
sbb
call
arpl
push
jbe
add
adc
jb
das
xchg
add
or
pop
jle
jb
sub
clc
cltd
sub
iret
ds
lahf
jmp
pop
outsl
nop
insl
in
push
xchg
push
cmp
mov
inc
aas
es
cmp
dec
popa
imul
jo
je
jae
lock
loop
cmp
dec
xchg
sbb
jb
cmp
aaa
into
dec
mov
in
ret
jle
adc
jb
cmc
add
inc
jp
stc
inc
std
mov
test
test
test
sbb
les
mov
test
shll
fnsave
aad
adc
sbb
stos
mov
call
iret
pop
cmp
shll
movsb
je
sub
push
test
int3
push
fs
xchg
mov
iret
xchg
push
adcl
test
out
call
loopne
mov
jle
cmpsb
jl
xchg
fldl
push
stos
stos
pop
pop
les
out
out
cmp
lods
sbb
pushf
mov
ss
dec
jb
pop
mov
ds
cmp
xchg
mov
fwait
cmp
push
std
jmp
imul
decb
fldenv
jg
xor
inc
mov
into
sbb
push
call
ds
pusha
outsl
out
jecxz
sbb
test
pop
mov
stc
push
aas
mov
fidivrl
ret
mov
xchg
sub
std
and
mov
test
jge
jp
inc
iret
test
pop
add
lods
pushf
stc
pop
lods
lods
ja
pop
js
jbe
sbb
in
lahf
sbb
adc
insb
mov
mov
cmpsb
mov
pop
dec
xchg
push
inc
out
mov
xor
rol
xchg
jmp
jb
bt
pop
or
inc
sbb
inc
sbb
fildl
xchg
xchg
adc
xchg
and
sbb
mov
into
cmp
add
ret
movsl
iret
mov
repz
leave
fimuls
fwait
mov
clc
push
push
sbb
xor
fidivs
ds
adc
push
add
sbb
outsl
popf
mov
cmc
enter
add
mov
scas
mov
outsl
insb
and
fpatan
sti
mov
sbb
adc
push
pop
push
dec
outsl
scas
jno
or
out
imul
ret
movsl
pop
icebp
leave
xor
push
popw
and
push
ss
mov
add
fists
pushl
js
popa
adc
or
fimull
cmpl
je
bound
push
cmp
ja
movsl
cmp
cwtl
adc
xor
dec
test
sbb
in
sub
or
mov
sbb
cmp
mov
scas
xchg
mov
pop
mov
or
xchg
ret
or
ret
xlat
repz
mov
cmp
inc
stos
stc
sub
jne
push
jle
adc
mov
out
cli
cmpsl
in
mov
mul
stc
xor
cmc
into
add
movsl
clc
scas
xchg
push
fsubrl
test
rcl
and
jno
mov
ret
lods
iret
push
js
incl
mov
xchg
clc
scas
aaa
ret
iret
fdivrl
jmp
rcll
mov
out
push
mov
xchg
push
mov
cltd
dec
stos
ljmp
sub
ljmp
jae
cltd
pop
fadd
es
into
jno
test
icebp
lret
mov
ds
mov
adc
imul
cld
pop
jmp
roll
sub
mov
repnz
outsl
sub
ficoml
lock
inc
lds
mov
lret
pop
pusha
mov
and
movsl
aad
pushf
inc
fcmovnbe
sub
or
jecxz
xorb
nop
pop
push
in
sub
add
insl
sbb
fists
pop
in
fidivl
or
imul
cs
push
andb
lcall
sub
ja
xchg
enter
sbb
imul
movsl
cmp
je
insl
push
movsl
mov
iret
movsl
divl
lds
cmp
inc
je
cmpsl
les
adc
add
inc
js
cli
pop
minps
loop
fucomp
or
push
and
aas
dec
jge
call
jno
out
test
cmp
adc
jmp
out
js
push
repnz
ficomps
jge
jle
cli
lcall
leave
sbb
insl
ficoml
test
sbb
mov
shll
add
fadds
adc
sbb
inc
mov
int
data16
repz
xor
lds
mov
mov
sahf
jns
scas
mov
mov
mov
rclb
mov
insl
fmuls
mov
or
insb
in
cmpsl
out
pop
nop
xor
shlb
notl
js
ljmp
or
sub
sub
pusha
hlt
pushf
mov
cwtl
inc
sbb
xchg
xchg
pop
inc
inc
fcmovbe
jae
cs
inc
push
pop
sub
jns
stos
in
int3
xchg
jne
inc
idivb
jb
test
mov
mov
or
dec
and
lock
lcall
mov
ja
mov
call
movsl
icebp
out
xor
cmp
cltd
add
xchg
pop
xchg
dec
and
sbb
es
push
fiaddl
in
ljmp
das
mov
popf
xor
adc
xchg
pop
lds
sbb
mov
pop
ror
add
lds
jnp
xchg
bsf
leave
cmc
dec
or
adc
lea
pop
pop
cmpxchg
lret
outsb
dec
jbe
sbb
jmp
add
cmp
and
and
xor
outsb
js
movsl
xor
pop
adc
xchg
jns
mov
mov
lods
or
mov
testb
sub
daa
ljmp
js
or
popa
out
movsb
xchg
js
jmp
pop
or
and
inc
sbb
dec
sbb
inc
mov
mov
fadds
mov
enter
bnd
pop
dec
gs
dec
lret
dec
inc
ja
shlb
pop
cld
pop
cmp
push
adc
ja
jb
and
insl
xor
stos
cmpsb
xchg
into
es
and
repnz
insb
rclb
mov
pop
ljmp
xchg
inc
neg
test
pop
mov
mov
pop
mov
jg
ljmp
ret
mov
sbb
or
cmp
imul
fisttpl
in
cmp
scas
fidivrs
shll
insb
push
mov
movsl
cmc
cld
push
sub
inc
xchg
xchg
lock
in
pop
push
sbb
movsb
shrl
ljmp
flds
cmp
stos
insl
push
stc
push
out
mov
repnz
daa
push
dec
pop
shlb
jae
ret
sbb
imul
and
loope
xor
insl
loopne
shrl
imul
imul
jo
lea
jnp
imul
loopne
mov
fstpt
ljmp
jp
aam
jge
cli
in
or
dec
rcl
mov
lret
jp
push
xchg
sahf
mov
cmp
imul
mov
scas
inc
sti
in
ret
add
cmp
enter
xor
xlat
mov
add
and
fisubrl
lock
add
ret
pushfw
outsl
xchg
xchg
lock
jmp
adc
push
ficompl
pop
push
xor
xchg
jp
pop
sub
out
dec
popf
arpl
jecxz
pop
jmp
bound
mov
or
lahf
out
jne
repz
sub
push
flds
loopne
add
cltd
jmp
dec
inc
das
nop
icebp
mov
xchg
mov
in
jl
xchg
in
loop
subb
mov
lret
fistpll
adc
pop
mov
rorl
nop
loope
lret
test
std
inc
or
repnz
push
jns
adc
mov
fsts
pushf
mov
ret
jno
mov
loope
and
mov
and
pop
xchg
pop
ds
mov
xor
shl
shll
inc
inc
xchg
cmp
xchg
cmp
or
dec
idivl
sahf
loope
or
xchg
lret
mov
adc
sbb
and
icebp
pusha
push
push
push
int
mov
ret
xor
and
jbe
lock
jno
and
jns
inc
mov
arpl
ja
mov
ret
stc
mov
inc
xchg
je
fwait
adc
scas
pop
int
mov
fucom
idivl
rorb
popf
xchg
jns
cwtl
push
outsb
xor
pusha
mov
and
iret
aad
inc
sub
into
xchg
jno
scas
cmc
push
adc
fdiv
xor
movsl
insb
inc
bound
pop
pop
xor
dec
inc
mov
cmpsb
and
fnsave
outsl
incl
or
leave
loop
orb
lds
sub
in
mov
sub
fistpll
jge
lods
pop
pop
cmp
push
xchg
dec
adc
pop
in
lea
mov
mov
imul
lods
sub
mov
push
fwait
pop
clc
pop
movsb
pop
push
pop
add
in
lods
std
clc
add
test
xor
jmp
test
shlb
fsubl
jns
les
es
push
fs
std
cltd
leave
std
imul
movsb
cs
mov
popa
jmp
subl
pop
pop
cs
mov
lahf
mov
inc
cmp
test
mov
mov
lret
adc
lock
sub
push
dec
repz
pop
ds
addr16
push
mov
cli
faddl
jnp
and
popa
int3
mov
out
scas
loope
lahf
jae
dec
sar
ds
xlat
test
testb
ficompl
jne
jnp
ljmp
fs
push
mov
negl
push
call
dec
frstor
imul
dec
data16
lret
addr16
aaa
rcrl
insl
inc
mov
sbb
loop
data16
rcrb
aad
push
xor
decl
mov
scas
aas
adc
push
cmpsb
inc
and
xchg
cmp
fcomps
incl
cmc
mov
mov
aas
movb
decb
xor
ds
mov
cld
outsl
es
fdivrl
inc
sbb
movl
popa
sahf
and
mov
inc
das
repz
or
clc
jp
test
sbb
sarb
xor
inc
movsb
mov
xor
adc
pop
and
inc
mov
mov
ljmp
rorb
dec
xchg
orb
outsb
pop
sub
sbb
shll
sbb
aaa
lret
pop
popf
dec
lock
or
mov
leave
in
xor
fdivrs
mov
or
sub
sbb
mov
es
test
mov
in
mov
aas
rcrl
insl
sbb
sub
adcl
push
pop
xor
lock
cli
pushf
in
dec
mov
jne
pop
in
xor
push
in
push
pusha
sbb
dec
add
nop
adc
mov
ret
lret
dec
sub
jge
movsb
sub
fdivs
pop
jle
movsl
xor
jp
cmp
pusha
ficomps
arpl
fdivp
test
fnsave
stos
movsl
xor
sbb
xchg
xchg
icebp
and
in
fwait
cmp
icebp
add
idiv
sub
js
cmp
roll
xor
mov
xlat
and
nop
dec
xchg
push
pop
mov
arpl
loopne
dec
or
cmp
enter
add
jbe
pop
int
cli
mov
daa
mov
push
fmull
and
leave
stos
xchg
sbb
lock
push
and
mov
cmpl
sub
insl
dec
arpl
gs
mov
loop
js
fwait
stos
push
ffree
les
jno
lahf
inc
mov
push
es
sbb
stos
sub
outsl
mov
jb
cmp
fcomip
or
mov
outsl
mov
mov
cwtl
and
xchg
add
lods
add
mov
adc
push
in
dec
cmp
fdivrs
adc
dec
and
inc
shll
add
adc
xor
mov
out
pop
sub
jp
fstpl
xchg
repnz
mov
mov
sub
jne
cltd
mov
imul
xor
jge
movsl
mov
and
enter
aaa
push
out
sub
jns
pushl
sti
mov
and
es
das
and
cmpb
fs
push
sbb
sahf
sarb
push
inc
add
sub
inc
sbb
mov
test
fwait
sahf
xchg
sar
jnp
adc
fs
pusha
cmpl
dec
sbb
pop
cmpb
jns
sub
pop
into
mov
ret
mov
jmp
loop
inc
js
fisttpl
orb
es
cmp
mov
sarl
push
mov
adc
sub
push
pop
inc
ror
push
mov
push
lret
jg
ror
sub
add
rcrl
adc
pop
xlat
daa
test
and
mov
add
fdivrs
jge
in
jno
aam
adc
adc
sahf
int
mov
xchg
cmpsl
mov
dec
cmp
jne
push
sti
int
movsb
das
xor
mov
in
out
in
idivl
arpl
mov
dec
xor
pop
into
mov
jns
outsl
xlat
or
das
jno
xor
xor
pop
add
mov
push
ret
and
mov
cli
ljmp
loope
cli
mov
dec
inc
adc
fcmovbe
rcr
mov
mov
outsl
nop
cmp
xchg
call
pop
mov
hlt
xchg
std
xchg
loope
pop
arpl
add
inc
cmp
lods
fdivrs
mov
stos
xchg
add
mov
cmp
sbb
pop
dec
add
stc
lods
aaa
cmovno
gs
mov
push
std
lds
mov
mov
insb
add
addr16
aas
movsl
dec
ljmp
pop
xchg
push
dec
cwtl
pop
sub
dec
cs
ja
xchg
sub
fs
jo
test
cmp
push
fwait
sbb
mov
in
movsb
add
dec
dec
sbb
mov
jl
or
ss
mov
enter
sbb
bound
add
sti
leave
adc
fcom
movsl
in
lahf
lahf
pop
mov
insl
scas
aaa
add
and
loopne
inc
xchg
je
pusha
jge
negb
sbb
push
testl
xchg
mov
shlb
adc
decb
out
mov
push
sbb
xorb
shrb
mov
jg
add
jnp
clc
jmp
xor
push
jnp
in
mov
inc
icebp
add
pop
dec
negb
hlt
or
stc
jmp
aas
or
sar
jb
or
dec
aam
loope
pop
xchg
dec
add
mov
nop
dec
arpl
mov
mov
repz
mov
mov
cmp
pop
addr16
or
jno
jp
cmp
push
lods
cmc
mov
loope
mov
dec
lret
ja
jg
mov
cld
sub
mov
int3
sbbl
sub
xchg
adc
mov
rclb
xchg
add
sbb
in
out
nop
mov
lret
adc
sbb
and
fsts
cmp
das
cld
jl
and
movsl
mov
inc
sub
lret
daa
insl
xchg
ficompl
mov
mov
mov
mov
imul
aas
call
test
pop
cmpsl
fstps
loope
aam
push
jmp
pop
xor
stc
sbb
jl
jo
call
xlat
mov
mov
jo
jge
cmp
std
jecxz
inc
popf
and
mov
mov
fcompl
js
push
and
fdivp
es
repz
xchg
dec
xor
adc
push
in
dec
cli
mov
rolb
cmpsl
and
push
lcall
mov
sarb
mov
icebp
shl
mov
add
sbb
pop
sbb
clc
pxor
lret
mov
lock
sub
xadd
sbb
mov
inc
pop
add
push
aam
sar
mov
das
push
push
test
add
cmp
movsl
cmp
fs
roll
xchg
fcompl
xor
mov
mov
mov
lock
mov
repnz
fdivs
add
xchg
xchg
cli
into
jg
filds
cld
data16
dec
pop
dec
and
scas
imul
pop
xor
add
sarb
test
rcrl
pop
lahf
mov
sbb
inc
adc
les
in
outsb
xchg
push
inc
add
popa
movsl
hlt
lret
jecxz
xlat
lea
sub
popa
outsb
or
cmp
clc
mov
outsb
mov
dec
sti
loopne
rcr
jle
mov
insl
js
add
add
sti
xchg
out
jo
pop
inc
out
push
fs
sub
ss
xor
stos
jbe
je
push
leave
cld
adc
arpl
roll
xchg
pop
test
jo
lahf
pop
mov
push
repz
ret
mov
faddl
std
or
dec
xchg
out
xor
js
xchg
cmp
pop
add
adc
jmp
and
ss
pop
popf
xor
mov
out
cmp
jno
pop
rclb
or
cltd
mov
xchg
stc
in
cs
jno
lock
loopne
fxch
add
sub
outsb
ret
fists
ljmp
bound
movsb
hlt
daa
sbb
xorl
imul
loop
mov
sub
xor
xor
add
enter
in
repz
repz
insl
inc
sub
ficoms
add
mov
mov
aam
aad
inc
ds
fsts
inc
lods
jmp
xchg
xor
cmc
add
adc
push
xor
fisubl
sti
aas
jne
xor
xor
shlb
adc
into
add
pushf
daa
xchg
dec
ds
xorl
icebp
push
mul
sbb
cmp
push
lcall
adc
mov
fcmovbe
dec
leave
jnp
dec
jo
cmp
xchg
inc
or
mov
inc
stos
insl
testl
loop
imul
adc
xchg
push
out
adc
adc
aad
jbe
pop
jns
push
iret
fs
out
inc
jle
or
mov
adc
fucom
lock
rorb
lock
pop
out
dec
lods
dec
inc
popa
movsl
out
aas
push
addr16
bndldx
lds
daa
push
arpl
call
add
dec
mov
or
mov
mov
pop
sahf
imul
test
sbb
xchg
insb
xor
sub
lcall
lock
add
cmp
pop
ss
pushf
xor
sub
mov
outsb
pop
jl
add
lret
inc
and
ud2
ja
addr16
aaa
cltd
in
bound
movsb
dec
insl
inc
imull
les
ret
or
enter
jne
xor
xor
sub
rcl
mov
dec
push
aad
xchg
and
subb
testb
adc
jg
in
xorb
lcall
testb
es
jnp
jl
jbe
dec
loopne
pop
jo
and
icebp
pop
push
nop
or
scas
addb
movsb
rcl
out
nop
mov
sbb
push
dec
mov
jae
inc
or
sub
shrb
inc
push
clc
mov
hlt
push
sub
int
add
mov
cltd
ss
leave
dec
adc
add
mov
add
aaa
push
into
xchg
pop
enter
adc
dec
push
gs
rcll
xor
inc
outsl
cli
push
in
orl
or
jmp
push
orl
push
sbb
outsl
mov
scas
adc
fcomi
jae
fiadds
sbb
int
test
shll
enter
mov
fnsave
out
popa
mov
push
lock
test
idiv
cltd
xchg
xchg
pop
js
les
adc
les
jo
pop
lcall
lds
fldt
inc
stos
bound
cmpsb
popa
mov
adc
aaa
add
xlat
pop
sub
and
jo
bound
sub
loop
fmul
xlat
out
stos
lea
cmp
call
xorb
out
jb
dec
xchg
push
lods
std
nop
add
push
adc
lcall
lret
repnz
sbb
cmpsl
sti
iret
pop
push
js
sbb
in
sbb
insl
scas
mov
vmread
sbb
lds
fstl
jno
ja
ljmp
out
pop
push
jle
push
lahf
lcall
push
aaa
add
dec
imul
xchg
push
xchg
mov
pop
stos
pop
xor
test
lret
jl
lds
cli
jb
mov
loopne
pusha
jae
testl
movsb
lahf
ss
push
out
sbb
mov
pop
into
sub
mulb
fcom
cli
mov
mov
loope
dec
push
in
lcall
pusha
lds
mov
clc
mov
or
out
enter
int
sub
ds
xor
mov
push
add
insb
push
jns
inc
pop
outsb
xchg
in
xor
xchg
sub
aad
movsb
sub
shl
addr16
adcl
jns
test
es
or
xchg
test
cmp
mov
inc
push
mov
testb
enter
lods
inc
scas
divb
shll
lcall
push
hlt
mov
sbb
adc
mov
pop
das
sbb
push
sbb
push
sub
in
mov
rcll
sbb
xorb
or
sbb
fs
daa
gs
popa
icebp
mov
xor
push
adc
gs
cmpsb
rcr
sbb
mov
cmp
sbb
cmpsl
cli
inc
call
pop
and
test
add
loopne
outsl
lahf
arpl
int
adc
fdivrl
mov
movsl
and
and
cmpsl
mov
in
and
add
push
push
add
loopne
fnsave
jns
out
inc
outsl
mov
scas
aam
je
sbbl
add
xorl
es
int3
scas
ret
repnz
or
sbb
and
cmp
cmp
xchg
pop
sub
sub
sbb
inc
fbstp
and
clc
push
pop
je
xor
iret
and
adc
sub
daa
cli
faddl
dec
xor
divb
test
xlat
daa
int3
popf
lods
scas
aas
rdmsr
orl
sbb
fsubrl
push
mov
and
es
ret
mov
xlat
movsb
inc
in
daa
ret
sub
lcall
and
dec
adc
push
and
and
out
mov
xchg
adc
lods
sub
lret
loop
loope
push
push
xchg
cmp
into
sbb
and
mov
sub
jl
test
inc
out
into
pop
inc
lea
adc
dec
dec
cmp
or
sub
inc
mov
js
iret
lds
fsubr
addr16
mov
cmp
out
jmp
test
jnp
cmp
bound
mov
mov
insb
mov
or
push
outsb
sub
mov
sbb
enter
inc
sbb
mov
cltd
or
mov
sbb
cmp
cmp
push
push
in
ljmp
lcall
mov
les
shlb
fcomps
xchg
imul
daa
mov
adc
cmp
add
cwtl
or
mov
adc
sbb
xor
or
add
out
cmp
jge
ljmp
jbe
movsb
mov
nop
in
lcall
cmp
imul
pop
push
inc
mov
jb
or
cmp
sbb
outsl
lahf
cmpsl
test
xor
ja
or
ds
in
and
cwtl
pop
xchg
adcl
xchg
jnp
sti
cmp
testb
shlb
pusha
xchg
or
pop
add
mov
imul
pushf
or
inc
cmpsl
xlat
xchg
mov
stos
jmp
fisttpl
js
jbe
xor
jnp
pop
cmp
scas
cmp
jnp
in
add
cld
xchg
mov
cmp
enter
paddsw
out
outsl
add
pop
sbb
test
test
jl
es
sti
xchg
or
sahf
xchg
adc
lods
inc
mov
cmp
call
pop
mov
and
jns
xchg
mov
sub
dec
mov
movsl
pop
mov
adc
mov
inc
sub
inc
rorb
test
sbb
pop
rcr
add
pop
jle
dec
call
shrb
jbe
aas
mov
aad
out
push
sub
and
xor
mov
inc
stos
rcl
inc
xor
mov
bt
xchg
mov
les
cmpsb
cmp
mov
ljmp
mulps
invd
jge
adc
aas
nop
test
fidivl
push
test
mov
push
orl
iret
pop
xor
mov
fidivrl
iret
xchg
pop
inc
push
push
push
nop
into
jecxz
scas
sub
sub
push
inc
jbe
ja
and
ljmp
dec
int3
inc
xchg
in
jp
pop
push
mov
std
adc
mov
pop
mov
mov
and
inc
aam
cmpb
xchg
addl
push
jns
flds
fs
dec
sbb
mov
aad
insb
fsts
add
mov
out
out
mov
mov
idivl
mov
rcrl
dec
dec
jno
cmp
aaa
pop
or
lock
xchg
xchg
bound
in
into
push
dec
fnstsw
incl
fpatan
cmp
test
out
faddl
fisttpl
mov
jno
jecxz
pushl
fst
fcoms
push
shll
sahf
int
pop
fwait
leave
jge
add
xor
mov
push
dec
cmp
stc
icebp
hlt
adc
pinsrw
or
push
lret
inc
jecxz
sub
lods
lret
mov
xchg
mov
fildll
std
into
sbb
shll
outsb
inc
mov
dec
cmpsl
aas
mov
or
sbb
mov
jmp
stc
repnz
ljmp
and
fsubr
filds
dec
es
sub
mov
xchg
push
jnp
cs
dec
jo
or
dec
in
lcall
or
in
lahf
stos
sti
mov
mov
xor
mov
roll
add
outsl
xor
faddl
xor
mov
out
push
mov
ss
mov
lahf
ss
jbe
movsl
jp
dec
push
dec
rcll
cmpsl
mov
mov
hlt
xchg
jle
mov
addr16
outsb
cmpsl
pop
xchg
roll
popf
jnp
xor
and
add
sbb
pop
loop
cld
mov
out
pop
movd
ret
push
idivl
cld
imul
popf
rcr
push
mov
idivb
sub
pop
fidivrl
fdivl
cmp
mov
push
cltd
push
xchg
out
jg
sub
in
repnz
mov
push
jl
push
icebp
out
pusha
scas
jp
or
mov
retw
ds
ret
xchg
lret
rcrl
in
mov
mov
pusha
imul
adc
jae
ds
mov
scas
cmp
add
ret
sub
sbb
mov
lret
jns
mov
out
lods
movsl
imul
fwait
cmp
sbb
sbb
add
popf
push
lahf
sbb
and
mov
push
insl
jecxz
mov
sub
push
push
movsl
popa
mov
jne
dec
mov
mov
jecxz
lea
clc
jnp
dec
int
xor
js
pop
jecxz
rcrl
push
pop
sbb
adc
int3
test
leave
shll
icebp
push
jo
push
xor
inc
add
jmp
push
mov
cmc
leave
dec
mov
out
xor
scas
jg
cmc
movsb
mov
paddsw
movsl
icebp
mov
in
leave
cmp
addr16
push
dec
test
inc
mov
sarl
mov
fadd
push
imul
ss
push
jnp
out
or
xchg
leave
or
xlat
ljmp
ret
cmp
pop
and
mov
jg
outsl
cwtl
incl
xchg
stc
pushl
add
cmp
jge
popa
ficoms
sub
sbb
cltd
cmp
or
mov
aam
aad
mov
cmpsl
adc
mov
pop
sub
sub
cmp
ds
rorb
adc
gs
repz
rorb
lea
out
jae
mov
jae
jle
pop
or
inc
cmpsb
mov
dec
push
cld
sarb
push
jl
gs
mov
test
into
rcll
xlat
push
push
mov
pop
sarl
fcmovnbe
mov
sub
cmp
xchg
sti
test
adc
divb
fwait
push
shll
jle
mov
aas
inc
jmp
ficomps
sbb
pop
cmp
cmp
movsb
rcl
pop
inc
lods
test
sub
es
dec
rclb
mov
pusha
adc
outsl
and
test
dec
add
push
cmp
push
mov
out
sbbb
fisubrl
mov
je
inc
shll
mov
data16
mov
dec
sbb
in
inc
and
mov
xchg
pop
aad
insb
mov
pop
lret
cmpsl
movsb
push
mov
ror
add
mov
inc
mov
dec
cli
outsl
dec
add
enter
xor
inc
cwtl
or
jb
dec
dec
cltd
cmp
add
mov
scas
or
push
mov
push
adc
shrl
cmc
insl
add
adc
movsl
notb
ja
pop
push
sub
add
push
or
hlt
jb
cmpsb
push
jp
arpl
pop
cmpb
das
loop
out
ret
outsl
mov
adc
outsl
cld
sbb
jns
je
and
pop
movsl
push
in
sbb
xor
jmp
sub
mov
ret
push
xchg
add
inc
push
mov
mov
mov
lret
and
ljmp
mov
in
mov
pop
mov
daa
mov
cmp
stos
push
imul
lret
lods
stc
ret
mov
ss
mov
hlt
dec
pushf
sub
jne
push
adc
loope
jg
je
fst
or
sbb
adc
ljmp
mov
out
ds
fiadds
ss
push
rcll
add
inc
ret
pop
xchg
push
mov
push
mov
push
push
hlt
add
ret
imul
mov
inc
fnstsw
arpl
fisubs
xchg
sbb
aas
mov
aaa
pop
add
mov
fistpl
sbb
aas
cwtl
and
pushf
jns
cmp
jnp
fdiv
jmp
test
in
sub
jle
sarb
xchg
push
lea
stc
sub
lds
std
gs
dec
cwtl
enter
pop
cmp
sub
adc
les
test
cmpsl
lods
add
jns
and
pushf
lahf
lcall
xor
adc
jae
lea
sbb
xchg
lcall
sbb
or
xor
mov
scas
jg
pop
lret
sub
nop
jge
pop
es
dec
popf
popf
cld
loope
inc
xlat
mov
jecxz
push
loop
fcmovnu
push
adcl
xchg
jge
xor
jns
push
addr16
and
xchg
pop
jae
push
push
cmp
mov
rolb
push
pop
and
insl
dec
mov
imul
adc
aam
movsb
cli
clc
sub
clc
fiaddl
xchg
xchg
popa
outsb
mov
stos
ljmp
adc
jmp
fldenv
mov
adc
and
fistpll
lahf
stc
je
ret
xchg
ds
orb
jmp
repz
push
or
pusha
leave
test
stos
aad
pusha
mov
cli
out
xor
in
jle
scas
jo
mov
sbb
sub
sbb
dec
jmp
and
data16
sbb
bound
inc
lods
xor
out
adc
jbe
xchg
and
cmpsb
push
into
push
nop
popa
ss
jns
xchg
jg
and
xor
gs
add
xor
xor
pop
push
inc
inc
inc
cmpsb
fwait
clc
fdivl
imul
cwtl
fsub
sub
imul
scas
call
jbe
cli
loopne
fsubrs
sub
dec
sarl
loope
ja
sarl
cmc
mov
in
dec
cld
pusha
mov
jne
loope
test
jns
iret
add
bound
cmp
pop
movsl
pop
and
sbb
adc
sub
pop
jnp
cmp
mov
leave
mov
mov
mov
jge
mov
pusha
fs
ja
xchg
cmp
lret
mov
cmp
sti
cmp
insb
bnd
lret
test
sbb
dec
shrl
loope
sbb
scas
mov
aad
ret
rol
aas
mov
popa
xor
dec
dec
pop
sub
sub
inc
pop
fldt
inc
mulb
jo
adc
inc
sbbb
pop
lds
pop
icebp
dec
call
push
mov
sub
int
add
push
scas
mov
mov
xchg
std
bound
dec
test
add
repz
lahf
jo
arpl
sbb
lds
push
pop
mov
push
int
xor
and
mov
mov
addl
adc
repz
lods
loope
mov
loope
popa
mov
sahf
add
mov
ds
push
pop
ret
inc
inc
cmp
cmpsl
js
sub
repz
cli
icebp
adc
mov
jl
das
fsubrs
and
mov
jb
movsb
and
repz
mov
shrl
imul
pushf
xlat
hlt
orl
fmul
push
clc
sbb
imul
cmpsb
popf
stos
shl
xchg
pushf
fwait
bound
es
call
or
hlt
adc
in
outsb
dec
fildll
adc
gs
sbb
cwtl
enter
out
cli
insb
or
cmp
push
scas
pop
dec
bound
pop
icebp
jne
test
nop
adc
ret
jmp
push
stc
repz
mov
scas
push
repz
call
mov
lea
test
fistps
push
inc
dec
xor
jo
adc
scas
sub
jmp
lds
and
lods
sbb
xchg
aas
lret
enter
inc
cmp
xor
jle
xchg
jle
cmp
scas
push
ret
ja
js
push
popa
sub
cmp
sub
lcall
sub
jnp
iret
inc
pop
arpl
fucomi
insb
and
xor
push
ljmp
fsubrs
xor
stc
add
mov
and
bound
outsb
adc
cmp
xchg
pop
dec
adc
jge
add
mov
in
dec
fs
pushf
sbb
bound
jmp
jne
arpl
mov
jmp
ljmp
and
mov
mov
rorl
add
cmp
imul
inc
push
cmp
cli
cs
in
movsb
mov
lea
sub
lock
lahf
sub
ficoml
jmp
iret
adc
addr16
jmp
mov
mov
mov
jno
addr16
out
cmp
or
addr16
lds
jnp
inc
bound
mov
mov
mov
jnp
add
or
mov
xchg
xchg
push
jge
fs
sbb
dec
es
cmp
aam
imul
jo
loopne
ss
and
addb
dec
scas
insb
jb
out
rcl
xchg
repnz
fidivs
outsl
push
push
sbb
mov
mov
xor
push
adc
aaa
in
adc
add
jmp
inc
adc
clc
pushf
lea
sbb
cld
pop
mov
insl
push
mov
jns
sahf
cmc
in
rcrb
sub
sbb
xor
pop
lret
pushf
sbb
popf
cld
imul
cwtl
addr16
pop
pop
sti
inc
leave
adc
scas
jo
xchg
mov
nop
test
test
shlb
lock
leave
out
add
jmp
insl
lret
mov
jns
xchg
mov
xlat
out
pop
jbe
add
and
hlt
jno
mov
cmpsl
leave
cmp
lret
in
push
cmp
movsb
push
sbb
sbb
ret
mov
xor
out
adc
inc
pusha
insb
mov
push
outsl
mov
push
or
mov
sub
test
sub
inc
xchg
fadds
or
sahf
orl
fcomi
aas
sub
xlat
in
dec
jl
pop
in
xor
push
add
cmp
dec
out
out
mov
loopne
jno
bound
sbb
xchg
add
in
lret
daa
lretw
das
les
cld
jo
dec
push
inc
sbb
jl
fisttpl
ljmp
pop
out
inc
lock
jl
scas
mov
dec
mov
or
pop
mov
int
push
scas
fimull
mov
stos
xchg
mov
inc
and
jae
cli
xchg
adc
test
xchg
xchg
out
xchg
pop
daa
mov
adc
loop
jbe
mov
rcl
out
xorl
mov
fildll
inc
sti
fprem
sub
fnstcw
inc
pop
pop
adc
mov
pop
mov
outsb
mov
dec
jb
dec
mov
fmulp
and
inc
std
mov
mov
adc
les
mov
pusha
aaa
imul
mov
xchg
pop
lods
sbb
add
in
dec
outsb
out
pop
push
pop
mov
xlat
mov
inc
cs
sbbb
stos
add
pop
outsl
daa
out
rcll
and
push
incl
push
inc
outsl
mov
mov
mov
inc
loop
cmp
adc
into
imul
pop
popf
xchg
inc
dec
leave
loopne
add
mov
and
dec
test
xor
inc
push
lret
inc
arpl
pop
sbb
jae
or
aaa
xchg
adc
fildll
fcoms
sub
sub
add
scas
aaa
push
push
pop
notl
fs
jne
fdivrl
test
dec
es
push
dec
or
mov
clc
pushf
loope
push
fsubrs
test
jp
jecxz
mov
inc
stc
outsl
push
cmp
sbb
mov
cmp
add
add
sub
lahf
xchg
in
into
ja
or
lahf
inc
rol
mov
in
mov
pop
sbb
mov
pop
lcall
movsb
negb
movsb
pop
outsb
pop
cmp
js
rolb
cltd
test
inc
int
insl
imul
mull
shll
xchg
pushf
pop
lret
sbb
in
insl
insl
mov
jecxz
ja
aam
fldt
in
push
push
sub
sub
jns
xchg
pushw
aaa
sbb
filds
mov
addr16
cmp
fs
call
pushf
push
pop
add
ret
jg
sub
arpl
movsl
push
xchg
addb
leave
jb
call
adc
cmp
mov
pop
add
in
sub
mov
ficompl
fwait
lret
cmp
mov
mov
ss
call
cmpsl
cmc
daa
imul
mov
or
pushf
xlat
push
mov
mov
add
mov
loope
roll
dec
mov
or
cmc
xor
sahf
cmpsb
xlat
pop
movsl
fucompp
pushf
jb
inc
sti
xchg
xchg
rorl
inc
int
jno
lds
dec
xlat
test
cmpsl
jle
xchg
in
out
lods
frstor
ss
fs
icebp
gs
mov
test
cs
mov
push
pop
gs
xchg
push
shll
mov
data16
ss
outsb
sbb
test
xchg
pop
push
loopne
inc
jne
dec
loopne
outsl
out
mov
iret
sbb
sbb
shlb
and
xor
test
mov
movsb
jb
or
popl
jp
jmp
sub
mov
sub
iret
pop
aas
sbb
xchg
flds
imul
enter
push
lret
stc
xor
lods
mov
loopne
je
cmovs
fisubl
or
rclb
push
lcall
lock
test
nop
mull
cs
or
jns
je
cmp
add
xor
xlat
mov
les
fsts
push
or
std
and
or
adc
lahf
push
xchg
js
ret
add
mov
enter
fildll
aas
js
les
jg
cmp
lock
push
sbb
sbb
push
loop
jno
fs
dec
mov
rorl
mov
test
cld
pop
jle
hlt
fwait
push
pop
fs
mov
add
ja
fidivs
sbb
movsb
xor
mov
daa
pop
bound
cmpsb
xchg
and
mov
out
ret
test
cmpsb
mov
pop
xchg
mov
pop
mov
add
aas
and
fldl
adc
or
test
imulb
push
add
push
mov
xchg
ljmp
and
mov
xchg
adc
out
cmpb
es
cltd
push
dec
mov
aad
test
push
sbb
mov
mov
std
inc
cli
mov
push
inc
mov
sub
jge
ret
loopne
jbe
aaa
jp
fidivrs
ljmp
andl
loop
jae
popa
repz
inc
sti
push
and
stos
mov
sbb
jnp
test
sub
cs
ja
mov
dec
add
cld
push
xchg
pop
mov
adc
push
xchg
mov
loopne
popa
divl
sbb
xchg
scas
mov
repz
cmpsl
push
and
mov
xor
sbb
mov
clc
sahf
pop
and
shll
popa
add
mov
push
xchg
push
push
cli
mov
cmp
dec
popf
cmp
mov
ret
bound
xor
pop
lods
daa
add
orb
or
add
int
sub
flds
mov
pop
sahf
add
call
mov
nop
adcb
sub
sbbl
mov
xor
imul
fcmovnu
test
cmp
pushf
fstl
xor
xor
add
jns
mov
jno
int3
js,pn
movsl
push
dec
mov
cltd
in
rorl
mov
xor
jns
mov
cs
js
shl
mov
in
mov
repz
loopne
int
xchg
mov
inc
fs
mov
adc
sbb
fdivr
inc
out
fsubrs
test
sarl
mov
xchg
cmp
popa
jo
xchg
lret
inc
mov
mov
pop
sti
pop
aad
sbb
add
jae
push
xchg
jno
jmp
insb
ja
xor
shll
mov
push
cmp
push
push
movsb
into
icebp
sahf
movsb
inc
dec
adc
loop
shrl
call
js
xchg
outsb
mov
mov
fwait
jp
lods
dec
or
cld
ds
mov
adc
or
imul
sti
cmc
push
inc
add
xor
adc
push
mov
pop
out
xor
roll
or
pop
je
pushf
dec
lahf
push
ljmp
and
stos
jle
hlt
mulb
addr16
repnz
jg
lods
imul
cli
cmp
std
push
outsl
test
push
pop
shll
in
test
lods
mov
dec
enter
xchg
pop
pop
xor
pop
xor
jge
stos
ja
sub
imul
push
mov
and
sbb
pushf
sub
and
popf
inc
xor
add
std
sbb
push
out
dec
mov
repz
jl
mov
inc
movsl
out
shll
xchg
or
push
adc
push
jno
in
popa
pop
pop
jecxz
dec
cmp
mov
pop
loop
xchg
vcvtps2dq
fs
sbb
imul
negl
mov
or
xchg
jbe
test
in
sbb
cltd
stc
sbb
cmp
xchg
dec
in
jecxz
or
in
das
mov
insl
xchg
and
rcr
pop
lcall
jns
xchg
mov
outsb
stc
mov
adc
into
lahf
fiadds
fs
inc
push
cmp
rcrl
push
sbb
xchg
mov
ja
jle
push
dec
push
push
jp
int
adcb
repz
ja
and
clc
dec
push
mov
cwtl
and
cmp
pop
inc
pop
cmp
fsubl
lret
rcll
dec
mov
sub
orl
ret
mov
stos
data16
inc
popa
xchg
imul
xor
xor
decl
int3
sbbb
mov
dec
aad
pop
pop
fsubrs
repz
xchg
and
mov
das
sbb
adc
jle
and
and
mov
loope
ficomps
outsb
out
sub
or
pop
pop
cmp
adc
outsl
sarb
lahf
pop
mov
lret
and
mov
bound
mov
scas
cmpsl
pop
lods
xor
inc
inc
fnstenv
dec
and
xor
mov
dec
outsb
aaa
sbb
jns,pn
les
add
int
xor
out
inc
adc
sub
adc
out
int3
pop
lods
mov
cs
pop
jne
or
lds
and
pushl
and
cmc
enter
movsl
add
imul
cli
mov
stc
arpl
and
pushf
hlt
xchg
inc
nop
sbb
enter
test
xchg
push
shrl
in
enter
mov
iret
loopne
pop
sti
bound
mov
sub
aad
inc
int3
popa
dec
adc
mov
test
jl
and
imul
mov
ret
jecxz
repz
out
xchg
lock
lea
cwtl
xlat
and
repnz
jo
xor
mov
adc
add
push
lock
cmp
sahf
and
ljmp
or
lock
in
scas
push
iret
pushf
fwait
imull
pop
repz
scas
mov
push
mov
mov
sbb
aaa
pop
out
xor
mov
das
ret
lret
jb
pop
mov
les
shl
gs
mov
or
mov
std
xchg
aaa
or
or
inc
repz
and
sub
adc
jecxz
mov
pop
xchg
test
cmpsb
pop
add
bound
daa
push
out
jne
roll
outsb
xchg
int
push
mov
xor
out
dec
in
into
jp
pop
test
divb
xlat
mov
push
mov
sub
aas
cmp
lock
call
les
lcall
xchg
or
fidivl
push
pop
pushf
iret
hlt
fstps
scas
in
mov
xchg
and
pop
jnp
jp
loope
add
sub
xchg
stos
sbb
dec
push
outsl
adc
in
mov
or
mov
fwait
push
test
adc
daa
jecxz
mov
xor
out
push
hlt
addl
mov
lods
jmp
xchg
test
test
in
int
push
push
xor
dec
ret
xchg
mov
push
cmpsl
inc
movsb
inc
mov
mov
dec
fisubs
das
jl
out
mov
enter
sbb
rcpps
bound
lods
jecxz
test
mov
popf
adc
xor
in
mov
ds
ss
jae
call
les
xchg
sti
pop
inc
pop
frstor
push
xlat
mov
push
xor
xchg
sbb
inc
xchg
es
sahf
mov
cmp
loopne
dec
add
mov
fcomp
aas
push
fiaddl
xchg
pop
jg
je
add
ljmp
inc
fcoms
cmpb
push
jmp
loop
push
sub
stc
mov
enter
adc
stos
jnp
scas
xor
aaa
repz
movsb
or
cwtl
jns
cwtl
xchg
scas
dec
push
jmp
outsl
mov
cmp
ds
aaa
sub
mov
test
xlat
mov
es
pop
ret
or
adcl
cs
jmp
mov
sub
data16
hlt
ljmp
int
mov
rcl
or
clc
push
jg
cmc
jns
ja
inc
nop
ret
cmp
arpl
sub
dec
adc
mov
sub
add
aaa
lret
adc
loope
das
push
mov
cmpl
lods
cltd
push
repz
pmullw
or
adc
gs
mov
mov
push
sbb
lret
inc
aaa
xorb
sbb
in
roll
fwait
lcall
mov
mov
inc
and
sbb
xor
sarl
hlt
push
and
das
xchg
cs
ret
jg
xchg
pop
mov
roll
jns
and
out
dec
divl
mov
sbb
sbb
lcall
dec
pop
imul
jg
loopne
scas
cmp
push
in
mov
test
out
loope
cmc
lock
dec
aas
cmpsb
inc
clc
mov
sarb
sub
lds
lahf
fs
mov
push
mov
inc
sahf
jne
insb
std
lahf
cli
mov
mov
outsb
imul
stc
adc
test
inc
jle
or
lds
adc
inc
insb
lret
outsl
popa
xor
mov
xchg
push
orl
out
lods
outsl
fbstp
pop
mov
xor
cli
test
cmc
pop
mov
divl
fldcw
inc
and
inc
push
mov
es
leave
pop
mov
aam
sarb
pop
movsb
mov
push
jge
call
sahf
jne
loopne
dec
lods
sub
fisubs
fcomps
mov
dec
outsb
hlt
pop
fnstcw
push
adc
and
sub
gs
jo
mov
sub
pop
insl
scas
jecxz
xor
call
mov
xchg
loope
rorb
and
xorb
adc
push
aam
adc
jp
ss
nop
dec
pop
bound
xchg
jecxz
lds
push
stc
mov
clc
xor
jp
stos
pop
adc
fidivrs
mov
pop
pop
jle
push
fsubrp
jmp
mov
pop
cli
sbb
jnp
inc
jno
or
xchg
sbb
sub
pextrw
data16
int3
sti
orb
pop
test
data16
xchg
xlat
pop
int3
popa
ja
push
aad
out
adc
mov
cmc
lret
scas
pop
cmpl
js
push
sub
xor
pop
mov
mov
loop
cwtl
insb
imul
or
rcll
jg
fldl
cmp
aam
inc
sbb
hlt
mov
cmp
mov
push
jle
mov
sub
push
xor
std
push
sub
jns
mov
ror
or
jns
mov
add
xor
pop
or
mov
sbb
inc
std
xchg
mov
cmpsb
outsl
xchg
js
add
add
stc
and
rol
leave
popf
aaa
test
cmp
cmp
mov
aaa
lods
pop
fidivrl
jns
mov
jns
adc
adc
jl
lds
mov
mov
out
lcall
call
adc
movsl
mov
insb
cmpsl
and
jmp
jae
sbb
test
jp
pop
add
fwait
pop
pop
fucomip
cmpsb
pop
scas
jnp
and
inc
rcrl
aam
enter
aaa
inc
aad
cmp
sti
sub
les
mov
shr
dec
stos
jb
dec
into
lock
out
sub
push
push
xor
dec
ljmp
popf
inc
js
cmpsl
addr16
jge,pt
pusha
mov
inc
xor
and
iret
aas
into
stos
xchg
ret
les
scas
xchg
sbb
cli
pop
sub
pop
negl
fimull
push
pop
xchg
cli
push
cltd
xchg
mov
inc
test
clc
addr16
arpl
aas
add
mov
sbb
gs
je
or
ds
mov
andb
repnz
push
adc
xchg
rcrb
mov
xor
push
add
das
jp
dec
mov
scas
les
enter
pusha
pop
aas
subl
add
push
or
or
dec
push
sbb
aaa
fwait
jp
inc
aad
or
lahf
call
push
sbb
jae
jo
push
ret
xchg
into
push
pop
add
roll
cmp
stc
mov
leave
sbb
int3
rcrl
icebp
xlat
rcrl
pop
push
xor
jns
pop
xchg
fs
xor
insb
cmc
mov
inc
shlb
lcall
push
mov
or
lods
mov
xorb
add
or
into
popf
xor
xor
fiaddl
pop
push
insl
jmp
pop
push
inc
imulb
insb
adc
imul
das
mov
adc
inc
loop
lret
adc
fistl
push
lahf
popa
lea
xor
cmc
fisubs
push
icebp
or
push
pop
out
xor
jmp
xchg
cltd
loopne
mov
sub
insb
nop
mov
mov
or
jg
cmpsb
jb
out
or
sahf
rolb
xor
push
ja
lret
cltd
cwtl
sub
aad
lcall
lcall
inc
aam
lret
or
out
sub
bnd
cmp
xchg
mov
pop
pop
and
test
mov
sarl
ficoms
sub
sbb
jmp
mov
out
sti
mov
dec
fidivrs
xor
push
cmp
cld
and
mov
in
ds
adc
push
push
add
add
hlt
jnp
lods
es
leave
jnp
aad
sub
xor
fwait
iret
lea
push
add
adc
repnz
sub
fildl
xor
jmp
pop
scas
push
inc
js
sahf
xor
xor
scas
mov
gs
sbb
ljmp
xchg
lods
lahf
xor
mov
ja
mov
jnp
adc
push
or
add
sub
xor
inc
dec
xchg
in
pop
add
jne
pop
dec
or
sbb
jge
rclb
scas
push
xchg
mov
lods
push
test
repnz
mov
mov
pop
sub
aaa
inc
ffreep
inc
mov
dec
fcompl
ds
mov
fimull
stos
js
and
rcrl
and
enter
mov
mov
mov
and
rcrl
xor
jns
adc
pop
xor
clc
pop
pop
dec
adc
leave
je
aaa
xor
mov
xchg
sbb
addr16
mov
int
sar
pop
xchg
push
pop
repz
out
inc
enter
sahf
cli
clc
out
fisubrs
sub
out
in
pop
in
in
jge
sub
inc
mov
out
ret
push
jbe
mov
mov
or
inc
scas
leave
dec
repz
sbb
pop
outsb
mov
inc
xchg
xchg
insl
lret
sbb
enter
inc
mov
dec
or
aam
mov
mov
xor
dec
xchg
popa
and
shrb
call
xor
pop
call
mov
push
ljmp
xlat
stc
sub
dec
add
xor
mov
fadds
orl
iret
add
out
call
out
sbb
xorl
adc
adc
cmp
jle
inc
sbbl
inc
mov
xchg
arpl
cwtl
xchg
dec
mov
das
adc
dec
les
in
sahf
out
ret
cld
daa
xlat
jle
inc
mov
push
popa
lcall
sbb
sub
frstor
pop
pop
out
push
xchg
shrb
add
andl
inc
std
lahf
cmp
in
inc
jae
rclb
inc
movb
cmc
stos
lea
mov
pop
pusha
mov
jge
add
pop
aaa
pop
mov
sbb
je
xchg
inc
lods
or
mov
dec
inc
iret
int3
push
sbbb
in
fistpl
rcl
sub
xor
ret
pop
adc
iret
add
dec
adc
mov
mov
sahf
cld
mov
push
test
iret
mov
mov
outsb
hlt
mov
ret
push
inc
or
out
adc
mov
pop
or
adc
shlb
adc
inc
pop
loop
pop
lock
pop
fistl
add
mov
mov
push
add
mov
and
push
cltd
dec
xor
pop
or
jp
je
shl
repz
arpl
loop
out
pop
in
pop
inc
mov
mov
in
cmp
xor
jg
fildll
or
adc
je
mov
jg
dec
mov
mull
mov
add
pop
push
sbb
sbb
scas
andb
lahf
fldt
xchg
inc
push
fwait
push
lcall
mov
sub
lds
pop
push
fwait
and
fbstp
fnstsw
iret
push
nop
mov
shlb
xchg
push
arpl
les
sbb
in
popa
sar
addr16
lcall
rol
das
mov
inc
push
imul
cmpsl
ret
sub
sbb
jb
adc
or
xchg
pop
mov
sti
xchg
adc
addr16
sbb
insl
pop
push
xchg
fwait
jnp
jp
outsl
sbb
mov
sub
cltd
fs
xor
test
incb
lock
xor
mov
pop
and
push
cmpsl
sbb
push
xor
sub
test
xlat
andl
mov
push
add
loopne
imul
ljmp
push
addr16
inc
sarb
inc
push
pop
lock
fidivrs
and
inc
cltd
dec
idivb
sbb
sahf
jb
mov
repz
xchg
jnp
add
push
fdivrs
dec
fs
enter
aaa
es
out
lret
mov
or
out
cmpsl
enter
pop
inc
loope
mov
bound
jmp
sbb
mov
mov
clc
adc
stos
xor
rol
pop
or
push
test
xor
ret
xchg
iret
xchg
lods
xchg
je
in
or
jle
mov
sahf
sub
sbb
mov
add
sbb
dec
lds
stos
int3
out
repz
inc
sbb
popa
fcomps
xor
fsubp
dec
mov
push
les
aad
xchg
pop
dec
adc
shrb
gs
cmpps
mov
in
sub
stos
movsb
and
sbb
push
dec
mov
jnp
or
pop
mov
testl
jp
cmp
inc
push
xchg
sub
cld
jo
out
and
aas
pop
xchg
iret
mov
testb
fldl
jmp
push
xor
repnz
push
roll
mov
orb
add
dec
lret
and
sub
repnz
stos
loop
stc
paddd
mov
mov
aaa
ljmp
aam
xchg
rorb
and
mov
imul
xor
dec
fcmovnbe
pushf
cli
jge
mov
addr16
daa
add
inc
shrl
lea
dec
pop
dec
push
sub
aam
pusha
and
enter
repnz
icebp
lea
cld
ret
mov
sub
or
push
push
stos
mov
cmp
nop
sub
sbb
pop
call
xchg
sub
and
lods
or
inc
sub
sbb
jge
inc
loope
enter
xor
mov
fidivl
jo
sub
andb
inc
mov
and
sub
inc
adcb
push
loope
scas
sbb
in
mov
jl
fists
cmp
notl
insl
sbb
daa
fistpll
test
adc
mov
cmpsb
pusha
and
mov
es
frstor
and
adc
adc
lods
in
fsubrl
pop
mov
stos
pop
jge
mov
or
testb
push
pop
add
mov
les
and
cmp
cmp
repz
sub
inc
repz
cmp
add
jmp
adc
dec
mov
mov
clc
fs
pop
mov
mov
aaa
push
push
mov
pop
sarb
or
loope
imul
xor
popa
call
inc
mov
daa
push
in
bnd
jle
adc
xorl
add
dec
xchg
bound
into
push
pop
nop
jno
cmpsb
das
sub
cwtl
jmp
adc
inc
ja
adc
or
dec
sahf
adc
mov
sbb
lock
sbb
cli
xchg
ja
inc
dec
mov
sub
addr16
sbb
sub
andb
cmp
nop
arpl
leave
push
xchg
lahf
fdivrl
cmp
jl
cld
lcall
mov
int
cli
add
outsb
and
popf
mov
xor
das
add
inc
mov
test
out
push
xchg
leave
idiv
sbb
sub
test
jo
sbb
arpl
sbb
mov
movsl
daa
cli
inc
jo
mov
push
mov
mov
cmp
mov
daa
in
test
data16
mov
es
popf
xchg
ss
pushl
xor
lods
pop
xor
loope
sub
insb
pop
jl
or
jns
insb
push
cmpsl
or
sbb
xchg
in
inc
cwtd
or
cs
negb
sub
or
adc
sbb
mov
mov
add
or
rcl
lods
jae
mov
nopl
push
js
jae
and
push
stos
push
jl
stos
xchg
or
ficomps
aam
or
daa
xlat
gs
mov
fwait
add
sub
cltd
pop
roll
cmp
mulb
out
test
insl
lahf
mov
jp
push
push
xchg
pop
push
dec
pop
lea
test
loopne
ss
mov
add
in
sbb
mov
inc
int
pop
inc
or
and
je
mov
cmp
pop
adc
pushf
daa
xchg
pop
dec
mov
jne
cmp
add
jle
dec
sub
lods
aad
outsl
push
mov
aas
dec
imul
dec
incl
add
rcll
sbb
push
in
adc
cmp
sub
sahf
fistl
inc
into
out
add
push
jne
in
jp
movsl
ds
xchg
mov
xor
insl
cwtl
je
int3
mov
aam
mov
pusha
xor
rcl
dec
mov
repnz
cmpsl
subb
insb
add
xchg
lret
shll
mov
in
jno
pop
pop
test
mov
testb
das
pushf
mov
mov
pushf
adc
jb
push
repz
adcl
loopne
or
push
or
mov
jo
xlat
jl
pop
in
xchg
sub
jns
mov
sti
xor
inc
lret
add
test
and
movsl
enter
inc
test
fisubs
cld
bound
repz
or
jnp
xor
popa
imul
stos
xorb
stos
inc
xchg
add
pop
lods
cmc
cmp
xchg
mov
popl
outsl
scas
ljmp
jae
xor
pop
pop
mov
push
clc
test
jb
xor
cmc
call
and
jae
lahf
int3
cwtl
insl
fisubl
fsubp
cmp
loopne
in
xchg
and
sub
scas
or
xchg
sahf
stos
loopne
or
ret
mov
enter
call
mov
sarb
mov
dec
push
test
hlt
rcrb
fistl
aam
xor
xchg
je
gs
jne
adc
jne
mov
inc
jle
rcrb
cs
push
out
xlat
jo
lret
ret
hlt
lods
movsl
addr16
mov
pop
loope
mov
lcall
ss
lds
adc
cmp
push
jg
dec
lock
insb
add
jbe
pop
sub
flds
jno
data16
mov
lea
mov
out
sarl
test
sti
outsb
ss
shr
push
push
mov
mov
add
addr16
insl
in
add
and
and
pop
inc
cwtl
push
push
jp
jp
add
pop
scas
sub
lahf
mov
pop
fnstcw
jnp
or
pop
lock
notb
xor
mov
mov
test
pop
and
adc
or
jne
push
adc
insl
into
adc
inc
lahf
rcl
daa
stos
cwtl
mov
and
lds
fisttpll
cmc
fs
jb
mov
dec
pop
lds
mov
mov
decb
jg
movsb
mov
lods
enter
imul
repz
fcoms
prefetch
dec
mov
in
loop
leave
push
popa
cltd
jmp
mov
mov
pop
pop
cmp
and
jb
mov
sbb
xor
mov
pop
orl
bound
mov
cmpsb
jge
je
sbb
push
imul
jg
sbb
lret
andl
jnp
pusha
outsl
pusha
add
testl
dec
popf
cli
jnp
cld
mov
int3
fs
sub
mov
xor
push
pop
pop
ret
adc
andb
repz
mov
leave
pusha
ja
iret
cmp
pop
xchg
push
movsl
push
enter
imul
cs
ss
aaa
mov
mov
push
xlat
or
jl
or
sub
jb
xchg
repz
add
cmpsb
das
mov
dec
cmpsb
loope
cmp
fcmovb
pop
xor
in
xchg
mov
js
faddl
xor
sub
ret
xor
dec
xchg
scas
mov
pop
push
loope
push
iret
mov
ss
cmp
sahf
pop
dec
adc
inc
outsb
mov
push
stos
daa
daa
scas
xor
mov
add
int3
push
jecxz
test
mov
loope
and
mov
jbe
repnz
sbb
js
movsb
fdivrs
and
test
adc
mov
adcl
cmc
mov
fstps
push
sub
add
ds
sub
test
stc
cmp
dec
xorl
insl
lock
add
mov
jb
xor
lods
xchg
stos
fildll
roll
jmp
cli
clc
sahf
out
or
mov
dec
mov
enter
stos
bound
dec
daa
pop
fsubl
cmpsl
mov
jne
lods
pop
daa
ret
out
pop
pop
sbb
ss
and
fnstsw
or
in
into
ja
stos
pusha
mov
pop
dec
or
jns
stos
nop
jns
jecxz
cmpsl
scas
mov
sbb
sbb
sbb
jle
in
dec
daa
shrb
push
out
jb
mov
cmp
insl
mov
xor
mov
mov
aam
es
push
jge
pop
mov
lret
fs
ss
push
jb
xor
mov
iret
xchg
or
fistps
push
test
xchg
test
mov
sub
popw
icebp
push
sahf
mov
movsl
mov
lods
xor
fbld
repnz
xchg
dec
pushf
xor
pop
inc
adc
mov
lea
jnp
pop
fidivrl
inc
and
pop
iret
ja
shrb
xchg
sub
test
mov
dec
jecxz
inc
aad
pop
adc
fnstsw
ret
sbb
cwtl
inc
or
pop
pop
sbbb
leave
xlat
inc
sub
jo
cmc
sub
popf
xchg
rcrl
or
and
imul
mov
std
aam
push
es
loope
ret
rclb
cmp
push
ficompl
inc
movsl
xchg
mov
xchg
stos
leave
xor
mov
fbstp
into
test
leave
lret
lods
stc
ja
shll
jb
ds
sbb
adc
roll
push
into
ds
inc
or
xlat
lods
dec
push
or
jle
push
adc
clc
imul
xlat
push
inc
cmp
aaa
cmp
push
push
jnp
out
sbb
stos
outsl
pop
or
push
test
lock
scas
cmovbe
jbe
aam
mov
adc
je
enter
jge
inc
and
add
roll
push
add
shrl
mov
hlt
scas
shlb
dec
in
dec
dec
or
lret
push
inc
popa
ror
inc
mov
jnp
pop
ds
and
dec
cltd
call
decb
daa
ljmp
xor
sbb
shl
xchg
push
mov
pop
add
mov
lea
xchg
push
je
xchg
fldt
pushf
adcl
inc
mov
cli
jb
push
push
xchg
xchg
push
mov
inc
lods
hlt
aad
fdivrl
mov
adc
xor
inc
outsb
fistpl
mov
stos
xchg
pop
dec
or
das
dec
sbb
and
loopne
sbb
popa
push
mov
and
sub
js
sbb
sub
aad
push
js
mov
in
ret
lret
and
pop
and
add
add
or
aas
in
mov
and
sub
cld
cmp
das
push
cwtl
jne
xchg
inc
or
outsb
adc
sbb
pop
imul
or
jle
test
xchg
cmp
mov
cmp
clc
add
je
in
pushf
pop
clc
shlb
cltd
movl
jno
popf
imul
orl
mov
dec
mov
dec
pop
ds
lret
icebp
popa
lods
fmuls
mov
clc
fwait
fs
fldcw
aaa
icebp
into
or
cmp
adc
fwait
mov
push
cwtl
in
stos
outsl
ds
inc
popf
loopne
fmul
iret
mov
adc
jl
pushf
negb
shll
adcl
scas
sbb
add
int
pop
orl
enter
sbb
cmpl
push
in
mov
pop
sbb
xor
or
das
mov
mov
loope
out
or
push
lods
jle
adc
aad
adc
int
cwtl
fsub
mov
lods
out
dec
cli
pop
push
les
mov
mov
or
push
jns
mov
test
add
pop
clc
test
out
iret
lods
lock
loop
ja
and
xchg
lods
push
lcall
xor
fucom
xchg
dec
pushf
jns
clc
and
imul
pop
cmp
outsl
je
enter
sarl
jae
ffree
test
inc
out
jmp
sbb
hlt
aas
push
jb
dec
jno
lret
cltd
or
imul
in
test
jnp
xchg
inc
ffree
cmp
leave
pop
arpl
or
push
xchg
jns
loopne
xor
aas
or
int
mov
add
cmpsb
aam
xchg
mov
mov
lods
int
jae
bound
ret
lcall
sbb
push
mov
add
add
loope
dec
pop
push
inc
movsl
mov
xor
outsb
inc
out
das
jne
and
jo
jp
insl
mov
cwtl
jb
das
pop
jp
sbb
insl
inc
cmc
es
lock
sbb
test
mov
outsl
cltd
pop
dec
fadds
xor
repz
adc
jae
xor
adc
loop
shll
inc
nop
push
sbb
push
outsb
popa
lcall
xchg
xor
mov
cmp
cmp
cmp
cmp
nop
mov
or
pop
lds
mov
inc
pop
cmpsl
and
mov
mov
shrb
or
into
xor
mov
sub
mov
icebp
mov
cmp
adc
out
sti
lods
lea
xor
mov
iret
adc
or
inc
mov
test
out
ljmp
jl
cmp
in
cmp
mov
das
push
sbb
lcall
cmpsb
cmpl
xchg
icebp
movsl
xor
adcb
lret
push
jl
lods
icebp
inc
jl
and
xor
shlb
and
or
mov
cmp
push
adc
inc
cmp
and
dec
inc
mov
or
test
sbb
das
hlt
orb
pop
repnz
add
mov
ret
jecxz
mov
xor
adc
push
or
orl
out
mov
out
xor
or
or
jbe
bound
cmp
or
mov
es
icebp
adc
and
add
enter
sub
je
sbb
adc
xchg
iret
sbb
paddd
ja
push
or
pop
xor
sahf
mov
flds
push
lods
inc
mov
sub
mov
and
mov
ficoml
pop
les
sti
ss
dec
jge
mov
or
int3
fistpll
mov
pop
add
faddl
push
adcl
pop
leave
ja
in
repz
xchg
fimuls
dec
inc
mov
scas
and
jmp
notb
lds
cmp
imul
pop
iret
xchg
fcmovnu
mov
movsb
and
push
push
inc
mov
pop
xchg
lods
mov
mov
out
mov
mov
push
popf
sub
jbe
fldl
xor
mov
jl
xor
or
aad
iret
mov
jle
or
add
push
loope
xor
dec
lret
add
jbe
jge
jle
pop
jo
dec
fisttpll
das
or
scas
lcall
cwtl
and
mov
add
lock
and
call
ja
mov
sub
push
call
inc
mov
and
addr16
sub
or
mov
test
sub
xor
cmp
push
xorb
daa
mov
loopne
mov
mov
mov
test
stc
in
push
inc
or
xor
ss
fsts
nop
sbb
pop
enter
fistpl
sbb
cltd
int3
inc
cmp
stos
addr16
popf
cmp
ret
adc
cmp
in
sti
xor
jp
lea
adc
clc
rcll
mov
jno
and
inc
inc
mov
cli
jl
dec
in
xchg
cmc
and
call
iret
icebp
test
inc
imul
add
fstp
add
aaa
pop
xorb
lcall
icebp
lds
cmp
mov
or
pop
out
call
jmp
adc
push
push
xchg
aam
pop
add
jae
adc
push
mov
arpl
out
push
imul
dec
jnp
loop,pt
outsl
xchg
xchg
in
shrb
sub
fimull
outsb
or
in
cmpb
inc
icebp
jle
sub
fldenv
xchg
mov
xor
xor
stc
push
mov
mov
cmp
mov
cs
inc
aam
xor
cmp
xchg
xor
mov
mov
popa
inc
pop
aam
push
push
mov
jg
adc
adc
into
pusha
scas
pop
pusha
xchg
xor
xchg
insb
jmp
push
push
and
sub
enter
ss
and
push
pop
cmp
push
rcrl
jb
push
movsb
orb
dec
jmp
cmc
fcomps
scas
jnp
sti
cld
xlat
mov
dec
add
sbb
sti
ret
es
mov
aaa
jmp
xchg
roll
das
aad
adc
test
ret
jecxz
and
jb
add
dec
cs
xor
mov
icebp
cmp
adc
or
outsb
call
sti
das
orb
out
aam
xchg
sbb
subl
or
out
std
push
sbb
sbb
push
sub
sbb
mov
jne
and
arpl
cmp
out
mov
movsl
ret
scas
cltd
scas
mov
add
push
fistps
sti
sti
idiv
pop
repz
jb
mov
mov
mov
je
dec
jb
test
xorl
and
mov
jmp
push
scas
cmpsl
andl
xchg
or
lahf
push
arpl
inc
sbb
add
leave
inc
dec
in
or
int
jae
test
or
ret
in
test
pop
jp
arpl
fwait
add
sbb
push
loop
aam
mov
ret
and
dec
sub
pop
mov
stos
adc
jnp
out
xor
adc
jnp
sti
mov
and
scas
sub
daa
std
stos
dec
mov
loope
cmpsb
mov
sub
in
iret
inc
sahf
shrl
xchg
imul
fsubl
in
jb
mov
dec
cltd
stos
dec
mov
sbb
jns
jns
jecxz
cmp
pop
xlat
enter
ja
mov
cmc
or
jno
pop
add
jno
movaps
sbb
in
sahf
xchg
add
pop
mov
fcompl
ficoms
dec
enter
fidivs
pop
adc
pop
push
add
mov
subb
jge
inc
in
mov
bound
jecxz
fidivrl
fdivrl
xor
push
sbb
data16
das
push
push
sbb
cmpb
shrb
imul
gs
shr
push
mov
je
mov
pop
xor
xor
hlt
jl
inc
sti
push
mov
int
out
int
push
stos
rolb
int
repz
dec
repnz
insb
jl
in
xor
mov
xchg
mov
in
add
mov
jns
sub
mov
jne
lahf
lret
lcall
pushf
mov
inc
ret
daa
jbe
test
jle
cmp
dec
dec
and
stos
dec
and
add
pop
sbb
lods
imul
pop
ja
xor
xor
sbb
loopne
icebp
imul
outsl
jno
ficoml
cmp
scas
jbe
pushf
jae
add
add
cmp
mov
push
xor
dec
fisttpll
xor
sahf
aas
bound
incb
rcrl
cmp
and
push
dec
fcmovnb
loopne
imul
mov
inc
test
add
push
and
adc
cmp
sbb
stos
repz
xorps
push
adc
xchg
cwtl
loopne
mov
dec
pusha
cmc
gs
std
mov
rorb
push
scas
add
pop
dec
add
mov
jnp
mov
cmp
cmpsl
bound
add
repz
mov
lock
mov
add
sub
add
sarb
mov
push
stc
pop
xchg
addr16
xlat
pop
mov
imul
pop
pusha
xchg
sub
roll
mov
push
jmp
aaa
in
fsubs
cmp
and
aaa
cmp
or
dec
pop
int3
jecxz
mov
sub
mov
cmp
cmpsb
xchg
jbe
ljmp
sbb
lret
push
fiaddl
or
dec
cbtw
sti
out
shlb
xor
popf
mov
mov
pop
lods
push
fsubr
jp
int
jne
sbb
rorb
shrb
cmpsl
pop
insb
mov
sbb
das
sub
hlt
lods
popa
insl
add
or
pusha
and
sub
into
or
sub
inc
push
icebp
mov
ss
adc
mov
push
rcrb
test
add
mov
xchg
inc
xchg
sub
mov
movsb
adc
inc
out
sbb
imul
add
push
stc
adc
xchg
xor
inc
jle
sub
lahf
cli
aas
sub
into
arpl
dec
pop
push
addr16
dec
cmp
or
push
shlb
sti
in
push
mov
mov
int
in
clc
ficomps
add
pop
std
mov
pop
push
push
dec
xor
mov
mov
fdivl
and
pop
data16
lea
dec
scas
adc
push
cmc
fldt
mul
lcall
sbb
fisttpl
imul
fnsave
fcmovnu
sub
in
cmpb
push
sbb
xlat
lret
sarl
std
insl
xchg
adc
addb
pop
ficoms
add
adc
mov
inc
loope
rcll
adc
xor
mov
add
fsubr
or
int3
adc
inc
icebp
mov
push
pop
push
shll
lock
iret
xor
push
stos
fsubs
cld
add
pop
cmp
cmpsb
dec
pop
stc
fidivs
sub
loope
pop
pop
lods
cmp
mulb
mov
stos
mov
sbb
addl
jnp
int3
mov
bound
test
push
cli
cli
cltd
rcll
clc
adc
xchg
jns
sub
jg
xchg
add
xor
sub
jne
mov
data16
mov
out
or
mov
xchg
sbb
scas
test
popf
and
add
ja
jns
mov
scas
mov
cmp
cmpsb
aas
insl
mov
push
andl
lods
mov
mov
xor
xor
aas
mov
ljmp
mov
movsl
and
in
and
test
int3
xchg
bound
icebp
cmp
xchg
jle
shl
xor
loopne
cmove
bound
cmp
xor
xchg
xorl
cltd
mov
and
and
lret
and
jg
pop
int3
pop
jae
js
shll
inc
shll
cld
insl
ljmp
gs
into
push
jmp
cmp
sub
mov
int
inc
ret
test
jmp
movsb
xchg
imul
sbb
and
in
and
stos
lcall
and
out
fs
dec
addl
lds
fwait
xlat
imul
test
cmp
add
jo
or
mov
push
dec
loope
pop
xchg
inc
cmp
fcmovnb
sub
dec
add
inc
jmp
xor
rorl
add
outsl
cld
adc
out
ljmp
mov
xor
icebp
ret
aam
or
out
ss
jo
daa
daa
xchg
mov
int
sbb
das
lods
cmp
sti
iret
pop
js
push
imul
and
sbb
out
adc
sarb
out
fnstsw
or
out
mov
sbbb
mov
adc
cmpsl
ds
clc
xor
pop
mov
dec
xchg
clc
mov
pop
adc
inc
adc
or
ret
cmp
pop
daa
sbb
adc
out
jnp
popl
dec
mov
fcomi
sub
xor
sub
pop
xchg
andps
scas
lods
adc
sbb
or
rorl
inc
sub
ret
loopne
or
dec
into
push
dec
pop
dec
or
leave
xchg
inc
xchg
jge
ss
and
cmp
movsb
mov
insl
les
dec
xchg
subb
adc
xchg
mov
mov
sub
fimull
shrb
and
jns
jecxz
sti
sub
insb
nop
adc
cs
xchg
mov
mov
jno
and
dec
iret
arpl
xchg
pop
inc
movb
adc
cmc
lock
pop
sub
sahf
push
je
dec
mov
and
scas
sub
loope
fdivrl
mov
je
iret
scas
ds
cmpb
jne
mov
dec
ficomps
in
pop
mov
mov
push
mov
sbb
nop
lds
cmp
loop
jns
test
lods
dec
rol
lcall
ret
call
fs
das
mov
and
cmc
popa
repnz
sbb
aas
out
mov
cmpsb
push
mov
imulb
sbb
or
fcompl
and
jbe
cmp
xlat
ss
pop
inc
aad
xor
std
mov
cmp
inc
popf
sarl
scas
imul
loop
pushf
mov
cmpsl
mov
inc
call
inc
inc
dec
in
test
mov
lock
add
dec
dec
dec
sub
xlat
jg
pop
xchg
arpl
cli
push
lds
jbe
or
xor
cltd
mov
icebp
push
sub
in
ljmp
mov
repz
mov
adc
and
fsts
into
scas
inc
out
divb
mov
les
fwait
lods
mov
dec
lret
dec
mov
push
movlps
and
cmp
rcr
pop
sbb
inc
jo
mov
xor
sahf
daa
mov
dec
movsb
scas
test
rorb
outsb
mov
rorl
leave
shrb
xchg
rorl
jl
mov
add
sbb
mov
or
pop
sbb
rorl
icebp
xchg
xorb
pop
enter
aam
hlt
mov
pop
xchg
into
or
xor
mov
icebp
nop
pop
je
and
cld
xor
gs
xchg
mov
inc
jl
and
fnsave
cmp
xor
scas
ljmp
aas
testl
dec
adc
inc
inc
lds
scas
mov
mov
mull
inc
in
push
or
pop
and
nop
xchg
add
pop
mov
adc
push
or
mov
in
pop
in
sub
mov
iret
cmpb
xchg
sbb
xchg
movl
inc
loop
mov
dec
or
jb
dec
lea
ret
inc
mov
imul
fcmovbe
push
in
les
loop
repz
inc
popf
sub
int3
scas
fistpl
add
and
insb
sbb
nop
push
push
pop
mov
pop
inc
add
add
sub
nopl
lods
fbstp
into
jg
xor
mov
xor
xor
clc
outsb
or
stos
rcr
inc
rcl
mov
lock
pop
mov
hlt
mov
mov
xchg
rcrl
xchg
aaa
rol
shll
arpl
loopne
enter
xchg
sarl
add
or
nop
push
out
inc
fldt
sub
cmpsb
xchg
mov
push
sub
ljmp
inc
mov
push
sub
push
jne
jp
mov
in
or
hlt
pop
mov
inc
xchg
les
aad
xlat
sub
xchg
filds
out
and
fcos
push
mov
add
out
sbb
mov
mov
xchg
and
sub
insl
out
push
and
jmp
sub
xchg
mov
out
mov
pop
adc
dec
add
stc
push
outsl
rorb
sbb
sbbl
adc
mov
inc
mov
mov
jno
lea
out
iret
scas
in
jne
dec
lcallw
fdiv
pushf
jns
cltd
xor
mov
dec
lock
wbinvd
das
mov
mov
mov
inc
push
leave
push
mov
mov
push
bound
xchg
pop
ja,pn
fildl
popa
mov
sarl
pop
pusha
push
xchg
pop
stc
mov
insl
mulb
cmp
clc
into
jae
out
imul
popf
cld
push
mov
ss
sub
popa
inc
das
rcll
xchg
rorl
xchg
hlt
adc
test
outsb
inc
jg
mov
psraw
jge
fsub
addr16
xchg
cmp
adc
dec
sbb
loope
jne
repz
sbb
fs
frstpm(287
out
rcl
in
mov
mov
cmpsl
lret
lcall
jmp
xchg
inc
push
jns
test
fwait
out
inc
scas
add
mov
out
jne
scas
xor
cmpsl
mov
cmpsb
mov
inc
lock
stos
call
jne
loop
mov
int
cmpl
cmp
pusha
fmull
adc
xor
popl
jne
xchg
mov
xor
scas
sbb
cmpsb
insb
andl
xor
mov
lea
jnp
pop
xchg
or
stc
xlat
mov
loop
out
je
lcall
cli
jmp
ja
push
sub
sarl
les
aas
sbb
insb
add
in
rclb
in
push
ds
dec
pop
hlt
test
jl,pt
and
pop
jns
inc
mov
or
sti
ljmp
iret
sbb
sbb
or
lock
out
xchg
fcompl
jmp
dec
insb
or
xor
aas
aaa
add
mov
gs
adc
addl
cmp
adc
xchg
loope
push
and
ds
jmp
cli
jg
jle
inc
ljmp
inc
call
aam
jp
arpl
js
sbb
adc
sti
mov
push
mov
inc
sbb
mov
add
or
jbe
test
push
jl
fnsave
and
push
das
loopne
loop
lahf
outsl
mov
iret
mov
add
test
adc
sbb
fimuls
out
dec
cmp
ret
push
div
in
sahf
add
popf
xor
int3
push
jp
pop
jo
pop
sbb
lcall
xchg
insb
sbb
mov
enter
push
pop
jns
stos
cmp
pop
sbb
imul
dec
cld
shll
sbb
dec
shll
jns
data16
pop
inc
fs
clc
mov
mov
repz
mov
movsl
dec
or
lods
push
ret
aaa
cmp
cmp
jmp
lcall
adc
fmul
dec
mov
cli
lret
jnp
jbe
push
out
std
fidivrl
rorb
cmp
out
push
je
repnz
rcl
mov
inc
xlat
jae
adc
push
pop
pop
in
int
in
jge
insb
ja
gs
push
push
rorb
outsl
mov
pop
push
mov
cld
daa
jp
int3
mov
adc
ljmp
add
dec
jb
int3
shr
out
mov
lds
fistl
fwait
out
stos
das
xor
movsb
inc
out
xor
and
adc
mov
call
sarl
mov
xor
adc
mov
adcb
add
jmp
sti
ret
imul
fs
mov
push
cmp
testl
sub
lods
jo
fstpl
jne
insb
int
jnp
out
jne,pn
addr16
mov
imul
outsb
push
hlt
inc
ret
adc
ret
xchg
sbb
sbb
fcoml
hlt
cmp
insb
mov
mov
xchg
xor
fistl
push
jp
ds
into
sub
mov
sarb
sbb
pop
push
pop
mov
jbe
adc
lahf
out
mov
popa
xor
xchg
and
mov
vmovdqu
idivb
popa
rolb
pop
xchg
aas
inc
clc
cltd
sbb
xor
inc
imul
sti
movb
lods
mov
lahf
fwait
or
out
push
pop
das
inc
pop
pushf
cmc
loop
sub
scas
ds
loope
mov
fdivl
jbe
cmp
xlat
test
jp
in
sbb
out
dec
jbe
loopne
shll
or
adc
arpl
mov
arpl
or
loopne
pop
ljmp
push
std
sub
mov
inc
leave
push
cmp
in
in
inc
jl
scas
test
push
adc
mov
insl
jo
mov
push
mov
das
movsb
mov
sbb
lahf
loopne
out
add
inc
mov
dec
repz
xchg
das
and
rcrb
outsl
inc
mov
es
add
movb
dec
add
sub
sbb
add
arpl
push
lret
stos
jns
or
add
mov
std
mov
movsb
or
xor
out
dec
mov
subl
sahf
out
adc
jo
sahf
pop
mov
cs
dec
jmp
push
cmp
call
xor
ret
inc
mov
mov
pop
adc
sbb
fldcw
jp
jbe
test
mov
mov
int
inc
mov
cld
push
xchg
pop
adc
call
pop
ljmp
rol
xchg
test
rcrb
push
scas
cmp
mov
cmp
insl
fbstp
pop
mov
cmp
xor
iret
cmp
adc
jg
add
loope
cwtl
inc
int
mov
xchg
jno
cltd
clc
push
pop
pop
rorl
fwait
movsb
mov
ja
loopne
inc
mov
push
sbb
mov
popf
mov
out
das
ffree
pop
mov
loope
rcrb
aam
adc
pop
outsb
arpl
xor
add
sahf
push
dec
mov
mov
mov
ror
dec
sbb
mov
push
xchg
cld
mov
mov
test
lds
and
dec
lret
out
xor
adc
pop
dec
inc
push
xlat
push
repnz
daa
mov
lcall
mov
testb
shl
out
sbb
mov
dec
dec
fnsave
cmp
push
add
inc
sbb
ja
sbb
push
sub
std
loop
enter
push
push
lds
enter
xchg
dec
pop
push
test
inc
mov
and
mov
sahf
pop
int
sub
cmp
into
cltd
mov
mov
jl
jae
stos
add
and
ds
push
or
pop
sub
test
inc
lods
jae
push
inc
xchg
lahf
sarb
es
outsb
ret
jb
vpsubb
mov
clc
inc
lods
mov
xor
mov
pop
jnp
flds
ja
mul
or
jmp
or
xchg
xchg
xor
adc
orb
dec
mov
jmp
sub
hlt
add
xchg
jno
adc
push
xchg
adc
pop
sahf
add
int3
loope
mov
iret
or
mov
aaa
stc
sbbb
mov
inc
std
rolb
mov
stos
lock
gs
mov
pop
push
add
scas
or
sbbl
jae
rcl
cs
or
sbb
pushf
mov
lea
jle
dec
testl
sub
test
pop
inc
cld
jecxz
adc
ja
mov
fisttps
cmc
lds
popa
int3
int
and
jle
mov
jb
jl
out
inc
les
pushl
jae
cwtl
xchg
outsl
adc
jge
leave
inc
pop
jge
xchg
dec
xor
jg
sub
nop
inc
xchg
jmp
ret
scas
insb
mov
pop
sahf
sub
mov
sahf
sbb
jno
sub
cmp
lret
cmp
sbb
cld
or
xor
pusha
push
xchg
mov
andb
mov
inc
jne
aad
add
and
in
cmp
shll
xor
mov
aad
inc
jbe
jecxz
iret
out
push
mov
jb
orps
int3
aas
adc
xor
pop
cld
in
out
mov
fcomps
ret
movsb
dec
aas
jge
je
fdivrl
lahf
shlb
mov
and
cmpsl
scas
std
movsl
ret
or
jp
sarb
pusha
aam
mov
mov
mov
je
mov
push
pushf
mov
stos
mov
pop
pushf
and
sub
xchg
push
fdiv
jae
shll
and
lret
pop
ret
sbb
repz
xchg
or
cmp
push
xchg
jge
push
dec
dec
pop
shr
nop
in
stos
and
repz
out
sub
repz
movsb
xchg
mov
test
out
or
test
fwait
push
mov
lret
adc
inc
mov
push
out
jae
sbb
sub
add
push
mov
jecxz
adc
sbb
int3
cwtl
popa
outsb
lcall
sbb
ljmp
leave
js
cmc
adc
dec
push
test
das
fs
sarl
fisubs
xor
insb
iret
stos
mov
push
mov
cmp
push
inc
loopne
test
pushf
mov
xlat
push
mov
mov
mov
dec
sub
stos
es
pop
push
xor
xchg
cmp
inc
aad
mov
sti
mov
outsl
in
xor
cli
inc
icebp
cwtl
mov
inc
jnp
mov
enter
aad
rcl
dec
ja
xchg
inc
ljmp
adc
testb
aas
pop
adc
sbb
lret
ret
es
jns
adc
or
movsb
clc
dec
popf
aam
push
and
stos
icebp
jecxz
mov
ret
push
mov
push
jle
add
mov
dec
xor
push
jecxz
cmp
scas
sub
push
pop
pop
lcall
into
into
movsb
mov
xor
scas
add
inc
sarl
cmpsb
jo
adc
pop
mov
data16
adc
adc
out
mov
pop
js
pop
lcall
addb
sbb
xchg
fldt
in
pusha
jmp
loope
data16
mov
cmpsb
pop
cmpb
pop
mov
fidivs
sarb
shr
scas
xchg
clc
mov
test
mov
inc
sbb
out
lcall
push
cwtl
sarb
sub
push
push
cld
sarl
fstps
inc
pop
gs
push
adc
sub
xor
addr16
mov
rcl
xlat
idivb
push
sbb
lahf
sub
imul
push
jp
jae
dec
mov
and
andb
movsl
mov
xchg
inc
sub
inc
pop
shlb
cmp
xor
scas
cld
hlt
xchg
adc
push
xchg
insl
enter
push
jp
in
repz
cmpsb
daa
rcl
cmp
pop
enter
jae
cmp
test
sahf
fsubp
mov
push
pop
insb
fsubl
fwait
and
dec
loop
adcb
popf
sub
test
sub
add
test
insl
xlat
flds
ja
cmpsb
xorb
jnp
pop
iret
mov
mov
xor
cld
loop
andl
into
iret
xchg
pop
mov
xor
and
sub
hlt
out
and
dec
out
push
fwait
or
sbb
sahf
jle
pop
and
fildll
sarl
test
mov
xchg
jge
or
aaa
jb
lcall
cmp
push
sub
mov
std
ljmp
inc
loopne
bound
push
aad
movb
dec
out
mov
outsb
stc
or
xchg
jge
mov
icebp
int3
xor
pop
adc
ljmp
add
or
or
push
jno
or
push
or
pop
bound
inc
pop
sbb
dec
jnp
out
cmpsl
cmc
push
rol
sub
push
out
and
mov
stc
shlb
push
cmp
push
mov
in
pushl
xor
adc
cmc
dec
in
and
into
mov
testl
sbb
inc
shll
xchg
xchg
hlt
inc
and
js
mov
xchg
insb
sti
mov
dec
pop
mov
mov
iret
pop
mov
ret
shlb
mov
jns
add
inc
and
xor
inc
jp
inc
and
int3
add
in
mov
push
xor
aaa
notl
inc
aad
dec
popf
loope
rclb
popf
xor
and
das
adc
xchg
es
ja
sbb
fwait
scas
mov
mov
mov
dec
dec
xor
pop
out
imul
dec
sbb
or
fidivs
gs
and
push
in
aas
mov
mov
push
testl
xlat
fcmove
cmp
outsb
lock
inc
jl
shrb
cmp
or
cmp
mov
outsl
js
sub
push
dec
sarl
push
lret
popf
cs
cltd
and
mov
sti
bnd
test
pop
pushf
dec
or
jmp
or
inc
add
enter
or
mov
sbb
mov
push
ljmp
movsb
xchg
into
mov
popf
push
sub
sahf
enter
rcll
xor
add
inc
lock
notl
mov
jo
out
inc
movsb
out
jnp
dec
jo,pt
mov
xor
pop
mov
daa
jge
shrl
outsl
push
add
xchg
xor
rcrb
lods
inc
mov
popf
mov
lahf
les
outsl
dec
das
adc
mov
inc
stos
lret
xchg
xchg
pop
push
mov
xor
test
sbb
or
xor
mov
cli
cmp
push
xor
pop
jg
cmp
cmp
jle
xchg
xchg
adc
bound
mov
dec
sbb
lods
cwtl
xchg
movsl
adc
pop
and
fadds
cmc
jnp
ja
fcomps
mov
out
add
adc
divl
xor
push
adc
jmp
addl
adc
mov
pushf
add
pop
scas
insl
sti
mov
mov
xor
insb
insl
stos
popf
lret
ficoms
fstpt
or
mov
push
dec
inc
fildl
pushf
cmp
es
mov
or
mov
stc
push
dec
cmpsb
push
movsb
jnp
in
test
or
ljmp
scas
aam
push
adc
mov
in
pop
aas
sti
cmpsl
mov
pop
lahf
imul
inc
mov
or
jnp
pusha
push
push
sahf
inc
test
pop
repz
lods
aad
add
pusha
mov
push
sti
add
add
push
shll
cmpb
lods
pop
cmp
ljmp
inc
xor
jns
fcmovnu
adc
lcall
pusha
inc
lea
dec
mov
push
je
mov
ss
scas
cmp
sbb
push
jo
push
pop
cmp
into
jns
arpl
jne
outsb
mov
in
jl
push
popa
loop
sub
push
lock
mov
mov
or
adc
insl
cmpsl
mov
cltd
fwait
in
xchg
inc
cmp
call
lods
in
adc
pop
xor
incb
scas
insb
xchg
clc
rcrl
scas
mov
inc
mov
fucomp
mov
mov
loope
cmp
mov
xchg
popa
xor
mov
mov
xchg
mov
sbb
nop
push
out
jmp
fimuls
adc
in
mov
cmpl
adc
mov
and
mov
popa
in
sub
inc
pop
xchg
cmp
add
inc
inc
jg
sbb
rcr
loopne
jae
repnz
mov
mov
add
mov
xchg
insb
loopne
rcr
push
and
or
push
pushf
cwtl
push
sbbb
inc
or
enter
repnz
ret
mov
mov
sbb
stos
popf
mov
xlat
movsl
mov
fs
jae
fwait
pop
mov
aaa
insb
sub
dec
and
shl
pop
cmp
or
xor
pusha
mov
lret
mov
fcoml
outsl
rcr
outsl
daa
mov
ja
stc
jb
pusha
push
stc
mov
in
fistl
movsl
insl
scas
inc
mov
fwait
mov
mov
loop
or
les
xor
cwtl
decb
andb
ret
pop
mov
jge
add
into
or
push
jg
sbb
pop
insb
add
jb
dec
shld
loop
xlat
in
pop
dec
mov
cmp
fwait
data16
aam
jno
pop
xor
sti
out
adc
insb
mov
jg
das
mov
jecxz
out
push
xor
popf
pop
xchg
iret
pop
fs
push
sbbl
lock
out
lock
jae
mov
push
data16
lods
pop
cmpsb
xor
push
cmp
cwtl
clc
jg
adc
outsb
ficoml
daa
xlat
mov
xor
push
mov
add
or
or
inc
fld
mov
test
out
push
mov
pop
arpl
add
outsb
inc
push
inc
xchg
xchg
pop
xchg
jnp
std
pop
jae
adc
jmp
xlat
push
xchg
fwait
push
repnz
lahf
ss
gs
out
scas
jl
test
push
dec
adc
in
add
ljmp
ljmp
iret
sub
and
int
test
mov
jp
adc
and
ret
add
lcall
push
pop
fdivl
and
pop
push
dec
sub
lock
sub
inc
and
mov
cs
popl
mov
movsl
mov
mov
pop
jl
or
stos
leave
aas
psubsb
daa
scas
pop
dec
add
xor
ret
jle
cmp
lods
jmp
sti
movsb
in
mov
loope
or
push
dec
out
orb
loopne
mov
push
jle
stos
int3
into
in
outsl
cs
shrl
push
push
shll
adc
adc
mov
adc
mov
aad
jmp
push
xchg
cmc
imul
int
cs
punpckldq
jge
jno
shrb
loopne
outsl
cmp
ret
enter
sub
jl
jnp
in
and
movsb
data16
hlt
xchg
mov
imul
adc
and
testl
push
jl
mov
jb
mov
xor
lods
je
sub
das
jb
xor
add
addb
cltd
inc
cmp
push
pop
xor
pop
out
imul
xorb
inc
push
fsub
dec
cltd
test
stos
push
out
xchg
scas
and
rcll
das
xor
leave
es
popf
push
stos
cmp
pause
jb
stos
loopne
int3
adc
push
jl
stc
adc
sbb
jae
push
sti
mov
pop
add
sub
test
inc
xor
adc
mov
sub
xchg
jmp
and
call
jns
mov
addr16
pop
and
ficoml
jns
mov
stos
push
fsts
dec
pop
arpl
mov
mov
aad
push
lods
arpl
loop
movsl
and
add
nop
out
out
pop
push
in
adc
or
mov
mov
inc
dec
jle
testl
jg
imul
mov
in
add
and
dec
repnz
out
pop
mov
fcoms
lcall
addr16
notl
push
adc
out
shlb
mov
shl
xchg
push
or
cmpsb
cmp
and
sub
add
and
leave
icebp
add
or
push
sbb
adc
mov
cli
sahf
pusha
cmp
push
add
xchg
adc
leave
inc
loope
jl
xor
mov
jmp
repnz
xor
sbb
adc
in
popf
xor
mov
push
gs
in
ret
sbb
xor
stos
jp
push
insb
jecxz
jmp
setle
sub
hlt
test
pop
add
mov
jl
mov
aam
sbbl
push
fsubrs
mov
dec
mov
sub
cmp
pop
push
mov
lahf
insb
out
test
mov
std
popa
test
and
cmp
cwtl
loop
jbe
insl
aam
sbb
fidivl
fs
or
into
inc
jmp
sbb
rcl
pop
xor
in
fdivrs
sbb
add
add
sub
into
push
dec
push
add
jg
enter
sbb
jge
pop
push
jle
in
pop
mov
cmpsb
mov
popf
xor
push
jo
nop
jns
adc
push
mov
push
pushf
xor
test
cvtpi2ps
fcoms
mov
and
adc
loope
pop
nop
inc
mov
addr16
jno
xlat
sub
push
out
push
jb
add
or
pushl
jg
add
dec
ljmp
js
repz
repz
adc
or
push
adc
stos
jle
dec
in
lods
pop
xchg
add
in
shl
jmp
xchg
push
leave
inc
push
sub
test
subb
pusha
out
ud2
cmp
nop
popa
inc
test
aam
es
mov
cmp
fmull
mov
mov
pop
mov
mov
jns
sbb
xor
cmp
mov
rdpmc
xor
xchg
mov
ret
mov
inc
inc
xor
mov
push
xor
mov
xchg
mov
repz
pop
jae
jmp
pcmpeqb
mov
inc
and
out
pandn
or
sahf
outsl
mov
nop
cmpl
imul
cmpb
pushf
cld
cmp
decb
aas
pop
jb
push
mov
mov
imul
add
ds
repz
inc
lret
ljmp
push
inc
and
out
mov
xchg
cs
movl
cmpb
lods
jmp
daa
sbb
push
scas
data16
sti
xchg
sub
sbb
roll
stos
mov
imul
insl
inc
sub
inc
sub
std
decl
sub
sti
jge
jle
dec
pop
sub
int
mov
pusha
iret
xchg
xchg
or
dec
jle
jg
addb
leave
ljmp
fsubl
inc
jo
lock
test
xor
dec
sti
call
sbb
sbb
insl
inc
or
inc
mov
xor
aas
add
xor
scas
mov
xchg
inc
es
add
fmul
sub
call
shll
nop
xchg
scas
ret
lock
in
aas
xor
enter
in
and
ds
addl
jl
pop
xor
fcmovnbe
je
add
fbld
inc
xchg
pop
push
jbe
insb
sbb
push
aam
mov
jg
xlat
arpl
imul
ret
jp
js
cmp
mov
cli
jge
cmp
add
scas
rep
insl
or
mov
mov
adc
adc
jae
push
sub
pop
xlat
fimull
jmp
dec
cli
pop
outsl
fcoms
push
mov
arpl
jl
adc
sbb
ja
xor
scas
inc
cmp
sub
mov
popa
xchg
punpckhdq
jno
sub
sub
ds
ret
pop
outsb
and
hlt
xor
int
xor
shll
pop
testl
sub
in
xor
neg
cmp
aas
push
push
adc
xor
shlb
fwait
xchg
mov
leave
into
int3
xor
insl
and
in
mov
add
loop
inc
ljmp
out
pushf
mov
je
add
aas
jb
aam
mov
xor
pop
lods
cmp
push
mov
pop
sbb
or
cmovne
test
sub
or
aad
push
popa
in
push
out
arpl
mov
mov
or
lods
lods
mov
call
aaa
dec
sbb
lods
pop
jne
das
aas
xor
std
push
pop
sub
fwait
jecxz
inc
mov
aas
movsb
cmc
add
jge
das
jnp
sar
jns
cmp
add
ds
rclb
scas
jl
add
add
jno
or
sbb
inc
add
movsb
lea
cmp
aad
and
idivb
push
imul
daa
cmc
and
adc
push
pop
xchg
repnz
test
add
jge
xchg
int
push
sbb
jb
jl
mov
pop
jle
cmp
xchg
cltd
in
add
mov
mov
jnp
jmp
xor
mov
fnstcw
daa
ljmp
cmp
loope
cmpsl
cmp
mov
dec
insl
cmp
push
adc
xor
sub
loopne
shll
in
enter
pop
fsubr
mov
outsb
push
sbb
mov
ret
xchg
negb
pop
add
loop
movsl
sub
push
call
cld
mov
pop
scas
bound
xor
mov
push
jmp
rorl
push
dec
das
sub
idivl
fwait
adcl
inc
sbb
mov
pop
pop
and
es
mov
sbb
or
fstps
into
ljmp
jb
adc
ret
dec
cmpsb
or
imul
or
push
fdivp
es
testl
lahf
or
repnz
push
cmp
dec
inc
aam
dec
xor
inc
push
xor
sub
cmp
mov
jl
ja
addr16
jae
aaa
mov
lret
dec
cwtl
jmp
sub
fldt
lcall
push
mov
inc
sti
les
push
outsl
jno
mov
inc
sbb
nop
mov
aas
xor
and
jne
mov
mov
xchg
xchg
mov
push
lods
test
pop
sub
push
cs
pop
dec
scas
pushf
in
aas
inc
add
lds
pusha
and
xor
stos
push
mov
adc
or
movsl
call
adc
cmp
jo
je
pop
jge
lds
leave
jbe
mov
mov
in
incl
cwtl
mov
fisttpll
push
xor
jne
mov
jp
pop
divb
mov
push
push
add
popa
pop
xchg
xchg
lods
es
test
enter
lahf
mov
fsubr
clc
aaa
ss
dec
or
and
stos
xchg
cld
cmovl
pusha
movsb
hlt
aad
push
outsb
xchg
scas
adc
sub
sarb
cmp
mov
jp
in
bound
push
scas
std
adc
ret
pop
add
sbb
jmp
shll
in
xor
pop
or
adc
mov
xchg
jb
mov
mov
das
mov
sti
and
xchg
mov
jno
push
into
movsl
add
cwtl
xlat
ja
sub
or
lds
pop
in
mov
dec
pop
push
xchg
jo
dec
adc
and
sarb
lds
push
in
lret
popa
test
outsl
sarb
je
xchg
outsl
imul
test
dec
mov
jecxz
shrb
pop
mov
in
mulb
mov
add
gs
sbb
inc
and
or
cwtl
cmp
sub
push
push
xor
test
pop
lahf
and
mov
add
arpl
repnz
stc
jmp
outsl
jmp
ss
loopne
ret
sbb
ret
dec
mov
lods
fcoml
lret
push
ja
push
jl
jge
cmp
imul
js
push
in
mov
test
push
push
cmp
js
jle
test
jmp
popa
inc
push
sti
out
cmovg
mov
aas
xlat
and
push
xchg
adc
fs
lret
pushf
adc
bound
ss
mov
int
mov
mov
insl
int3
es
xchg
adc
lods
movsb
imul
dec
xchg
out
out
lods
leave
sub
or
xor
jo
dec
xchg
and
push
xor
lcall
mov
push
mov
stc
mov
xchg
decl
mov
fcoml
shr
sbb
cltd
push
adc
lods
add
cli
cs
or
cmp
mov
test
cmpsl
and
ret
ja
add
stos
mov
xor
gs
dec
cli
xor
lods
cmp
daa
cmpsl
inc
das
or
mov
stos
sub
enter
fmuls
loop
lock
push
mov
stc
int
dec
cli
xor
or
in
ds
das
in
sbb
inc
int
test
jmp
pop
inc
cmpsl
or
sbb
inc
cmp
lds
das
cmp
jp
inc
jnp
or
into
mov
or
mov
xchg
jl
test
mov
dec
mov
sub
inc
aad
add
into
push
jge
lods
lods
mov
jnp
bound
bound
fs
mov
lods
mov
add
push
dec
jb
movsl
cltd
or
enter
cmp
cmp
xor
out
int3
pushf
xchg
fisubl
fmuls
xchg
jns
hlt
sbb
ss
lcall
and
and
push
mov
pop
int3
sub
mov
cld
cmp
push
jnp
fwait
pop
mov
mov
daa
es
je
lock
xor
out
push
imul
rol
mov
cmp
jbe
daa
sahf
push
lret
stos
cmp
les
lds
pop
aam
scas
fdivl
sub
add
cwtl
push
inc
repz
mov
push
cmp
push
and
sub
sbb
and
fsubrl
dec
sbb
sbb
popa
mov
xchg
or
or
scas
mov
inc
push
push
daa
pop
aam
in
loopne
mov
cmpb
dec
test
add
and
insb
xchg
mov
outsl
cmp
xchg
push
sbb
lds
sub
push
test
out
push
or
push
xlat
rcrb
repnz
clc
shll
cmp
pop
adc
pop
mov
call
xor
out
jecxz
dec
pop
mov
int3
cmp
leave
dec
lock
test
xchg
sahf
and
sbb
xor
adcl
rol
mov
adc
or
sub
cmp
or
jge
sarl
adc
iret
nop
cli
push
sbb
test
scas
cs
xchg
int
xchg
pop
xor
shrb
cmp
aam
nop
or
stc
adc
push
sbb
pop
mov
adcl
fcomps
jl
jmp
pop
mov
loope
bnd
xchg
mov
pop
pusha
push
xor
repnz
cmp
int
cmp
mov
dec
scas
lcall
pop
pop
fs
mov
dec
pop
pop
push
rcll
scas
lods
mov
sti
push
fistps
repz
cmpsb
lods
inc
popf
nop
dec
adc
xor
xor
negl
cld
int
imul
xor
int
cmp
movsl
sti
sub
inc
out
lret
outsb
test
in
jecxz
adc
push
adcb
or
cltd
or
test
xor
pop
lea
dec
les
adcb
aam
pop
cmpb
and
mov
mov
into
bound
mov
idiv
jnp
aad
sbb
cmp
cmp
into
xor
pop
mov
or
and
cld
push
ljmp
outsl
sarl
jo
in
sbb
nop
inc
or
imul
clc
xchg
psrad
testb
or
xchg
push
std
cmp
jae
out
push
pop
add
lahf
pop
and
movsb
lahf
pop
pop
pop
adc
ret
imul
dec
shl
insb
out
gs
mov
adc
or
sbb
add
out
test
ja
or
xchg
add
inc
bound
popa
push
out
adc
push
rol
roll
into
jmp
sub
dec
mov
je
adc
jmp
xchg
or
xchg
or
in
mov
lret
sbb
ret
arpl
lret
loope
test
cld
add
aam
inc
jg
adc
mov
loop
icebp
icebp
pusha
dec
cmp
imul
or
inc
outsb
adc
es
sbb
fsubrp
jle
adc
sub
pop
jmp
xchg
out
clc
mov
or
and
stos
sub
lret
or
mov
mov
and
ret
xchg
fisttpl
or
push
lcall
pop
addr16
test
cwtl
sbb
fstps
push
jb
sub
adc
pop
pusha
and
lea
orl
insl
mov
dec
sbb
ss
cmp
inc
icebp
add
or
roll
fwait
gs
xchg
jp
push
stos
xor
xor
je
leave
mov
mov
les
icebp
inc
mov
scas
add
mov
jb
push
and
dec
xchg
lods
adc
out
ffreep
xor
mov
andb
sbb
aas
lods
pause
adc
mov
out
insb
xchg
out
mov
push
jns
add
xchg
jbe
xor
jg
loop
adc
mov
enter
mov
or
push
stos
gs
or
test
loop
aaa
push
jb
or
mov
jecxz
movsb
or
stc
mov
push
and
xchg
hlt
push
jbe
in
push
and
jecxz
or
inc
testb
lret
mov
push
mov
sbb
std
xchg
or
arpl
push
jbe
jnp
xchg
and
inc
invd
mov
push
pop
or
adc
and
in
sub
cmp
fwait
jb
mov
sbb
xor
dec
pushf
mov
inc
and
pop
movsl
insl
mov
negb
push
leave
stos
stc
cmp
mov
mov
and
aaa
clts
inc
fsub
cs
cli
inc
daa
ficoms
mov
add
jbe
sahf
xor
std
or
pusha
lods
daa
dec
stos
test
or
mov
mov
aas
add
inc
jns
out
mov
sub
inc
mov
subl
pop
mov
pusha
popf
aam
inc
and
mov
mov
add
mov
roll
std
fadds
lahf
shlb
orb
or
inc
ret
xor
cmp
lret
bound
lods
inc
push
loop
shrb
stc
and
mov
ja
inc
xor
inc
xchg
pop
das
sub
xor
ret
fisubrs
push
pop
aaa
jl
addr16
mov
mov
cmpsb
sti
and
rcll
mov
jnp
fcomps
stos
imul
out
xor
xchg
mov
sbb
cmp
and
push
jo
mov
es
mov
sub
inc
xor
and
mov
loop
movsb
repz
js
push
mov
fisttpl
loopne
ss
jbe
jb
shlb
mov
inc
or
int3
jo
movsl
cld
inc
mov
add
aas
pmaxsw
xor
test
sbb
das
gs
lods
divb
fisttpll
shll
or
and
mov
pop
pop
movsb
add
cmp
add
jae
mov
iret
xchg
xchg
jle
jmp
inc
pop
outsl
pop
loop
cmp
dec
std
jmp
pop
mov
mov
mov
orl
into
ja
jmp
sbb
or
xchg
ret
dec
dec
sub
addb
xor
icebp
ret
mov
mov
lret
movsl
movsl
jle
inc
nop
dec
xchg
jge
pop
jle
sub
xor
adc
mov
pop
jns
xor
pop
sub
push
mov
aam
mov
movsb
push
add
int3
sbb
xchg
and
dec
sub
das
inc
out
mov
and
not
pop
lock
test
push
cltd
and
loopne
into
sub
mov
pop
jnp
mov
scas
lock
loop
sti
movsl
jmp
addr16
xor
pop
xor
dec
gs
or
sub
add
aas
stc
lods
add
mov
imulb
mov
popa
push
sbb
mov
idiv
adcl
xorl
pop
out
push
insb
mov
cmp
std
shll
add
out
fwait
in
data16
push
add
mov
adc
stc
cmc
cli
ja
pop
jno
nop
inc
mov
push
inc
sti
and
dec
xchg
cs
xchg
adc
adc
pop
outsb
gs
shlb
clc
sti
sub
push
and
in
dec
call
cmp
ret
xchg
xchg
inc
mov
add
and
jecxz,pt
lods
add
mov
adc
xlat
rorb
mov
lcall
stos
push
dec
cmpsb
lds
jns
push
out
mov
mov
pop
or
imul
sbb
es
add
lcall
mov
cmp
daa
pop
cltd
sub
popa
sbb
mov
pop
dec
lds
fwait
sbb
cmpsl
sub
mov
adc
sbb
add
jl
leave
lahf
inc
jno
xor
ret
sbb
pop
and
loope
adc
dec
test
sub
stos
inc
cmc
sbbl
mov
and
pop
mov
and
movsb
mov
repz
adc
in
or
and
fwait
in
movsb
shrl
test
adc
in
sub
mov
nop
pop
and
addl
jg
lcall
jmp
mov
mov
jae
ds
dec
mov
out
sbb
out
inc
or
xchg
dec
pop
sbb
call
fildl
lods
adc
lret
rorb
or
mov
cmp
std
mov
sar
jb
iret
movb
xor
stos
pop
jae
insb
lock
cmpsb
and
out
sub
push
and
pushf
adc
and
data16
lret
and
xchg
jg
push
mov
fbld
or
xchg
cltd
orl
sbb
add
adc
xlat
in
mov
movsb
popf
or
xchg
push
mov
dec
cmp
dec
mov
xor
inc
jo
or
ret
imul
dec
xor
fmulp
and
jnp
shlb
add
lods
add
xchg
mov
mov
jnp
mov
adcl
adc
dec
cmp
enter
pop
pop
pop
into
xchg
arpl
dec
dec
add
push
dec
mov
adc
or
dec
add
loope
cmpsb
adc
std
ljmp
xchg
adc
fisttps
mov
cmpsl
fcoms
dec
add
and
mov
daa
lea
daa
dec
daa
mov
shrb
pop
adc
mov
add
aad
sarb
dec
jecxz
lds
lahf
jb
push
les
add
out
sbb
loopne
arpl
mov
lahf
imul
jns
jge
xchg
or
mov
add
out
pop
inc
loop
pop
insb
add
dec
data16
outsl
test
xchg
fistps
and
sbb
cmpsb
negb
push
pop
loope
mov
dec
shlb
mov
push
and
inc
push
pop
leave
mov
xchg
loope
jecxz
mov
dec
and
jmp
xchg
pop
sahf
movl
and
popf
mov
ret
pop
mov
gs
sahf
jns
daa
das
iret
xor
lods
lahf
outsb
pusha
cmc
bound
push
movsb
cmpsl
sbb
mov
popa
sub
inc
xor
or
mov
fadd
fndisi(8087
fstps
outsb
pushf
mov
scas
and
sbb
negb
les
jl
push
je
or
or
fwait
rcrl
out
cs
popf
cmp
cmpsl
xchg
add
mov
sub
adc
aas
push
push
fstps
popa
mov
inc
fcomps
mov
mov
sahf
mov
lret
jae
jmp
stos
jne
add
pop
jns
repnz
add
jge
add
hlt
lcall
movsl
add
pop
stos
leave
addl
add
imul
jne
imul
pop
fucomp
push
out
pop
daa
cs
aam
sbb
mov
jnp
xor
add
stos
push
sbb
mov
arpl
fiadds
pushf
outsb
jno
jnp
add
outsl
mov
sbb
das
lret
xorl
out
fisttps
push
dec
add
stos
imul
cld
push
bound
xor
adc
fisttpl
mov
loopne
mov
mov
xchg
mov
xor
adc
out
xchg
cmp
pop
mov
scas
push
and
add
pop
push
xchg
addr16
lret
jp
xchg
xlat
cwtl
test
mov
dec
loop
pushf
sub
fnop
xchg
push
sbb
les
xchg
mov
inc
xchg
into
push
clc
mov
movsl
pop
sub
sub
mov
icebp
cwtl
mov
shlb
jmp
lret
ret
jp
jmp
mov
mov
cmpsb
sti
push
pop
add
inc
nop
gs
xchg
mov
pop
cli
es
lock
push
ret
pushf
push
or
xor
mov
pusha
xor
inc
bound
jmp
jb
outsb
stos
je
aam
xor
adc
data16
cmp
dec
inc
jae
sbb
rcr
cld
dec
xchg
mov
aas
add
mov
cwtl
adc
mov
mov
mov
mov
push
cmp
daa
filds
sbb
into
inc
push
ja
sub
dec
jae
leave
and
mov
cmp
pop
adc
pusha
icebp
out
push
and
push
gs
flds
pop
dec
ficoml
out
imul
test
add
mov
hlt
outsl
xchg
pop
add
nop
imul
inc
mov
sub
repnz
sbb
ret
repz
rcrb
cltd
arpl
xchg
pop
push
es
out
or
enter
popf
mov
aam
out
sbb
dec
enter
outsb
cmc
pop
adc
into
xorb
or
push
ss
mov
aaa
pushf
pop
in
and
aad
jmp
outsb
and
movsb
pop
aaa
mov
mov
aam
jne
inc
mov
out
mov
push
xchg
inc
pop
gs
mov
not
mov
xor
sbb
jle
mov
je
mov
mov
adc
mov
test
jo
dec
cmp
push
xchg
mov
jle
and
imul
xchg
pop
jle
lods
mov
lods
ficompl
aas
cmp
mov
lret
out
jp
cltd
add
loopne
jns
inc
cmp
ja
clc
fcmovb
pop
fiadds
enter
shlb
nop
inc
int
cld
or
adc
mov
or
or
pop
dec
lret
add
lock
addr16
add
push
and
inc
jnp
jo
mov
sahf
das
sub
mov
scas
arpl
inc
nop
les
sbb
xor
daa
sub
call
xchg
mov
push
mov
test
xchg
nopl
adcb
mov
cli
jmp
add
fnstenv
je
adc
xchg
jecxz
jecxz
mov
adcl
cmp
lret
pop
mov
bound
pop
cmp
inc
repz
scas
scas
test
shll
sub
repnz
idiv
xchg
xchg
cmc
cltd
sub
adc
leave
or
hlt
cmp
mov
insl
sbb
popa
pop
fwait
out
and
or
jg
inc
mov
mov
ljmp
adc
loopne
mov
jo
jno
mov
push
sbb
jp
movsl
or
sub
inc
sub
xchg
lock
hlt
scas
pop
xchg
stos
nop
add
test
jns
dec
dec
ret
inc
iret
push
dec
sub
cmpsb
push
xchg
scas
cli
ds
xor
fcmovnbe
pop
or
jge
sbb
hlt
stos
jecxz
shrb
inc
mov
add
lds
data16
fnsave
fsubs
mov
repz
xor
iret
lds
xor
mov
rolb
sub
sub
js
push
dec
sub
das
push
dec
dec
add
adc
aam
in
iret
and
sti
sub
jp
pop
jl
lret
repnz
add
and
pop
dec
cmc
punpckhdq
xchg
push
or
adc
xchg
add
adc
adc
mov
out
ja
inc
popa
repz
xchg
lret
pusha
cli
xor
xor
shl
cmp
loopne
lods
or
movsb
shl
sti
shl
mov
addb
mov
sub
push
lret
jg
mov
daa
stos
mov
jp
fsts
mov
movsb
cmp
mov
mov
insb
ficomps
cmpsl
xor
repz
hlt
pop
lea
and
push
push
sbb
pop
addl
insl
lahf
jecxz
xchg
sbb
dec
sbb
divb
sub
int
pop
jg
call
cli
ljmp
aad
inc
ljmp
mov
xchg
jb
decb
mov
cmp
shl
sub
sbb
xor
lods
shrb
movsl
incb
shr
in
mov
pop
bound
add
push
pop
ret
call
lds
sub
dec
stos
call
jns
cmpsl
inc
rorb
dec
push
lds
stc
and
mov
mov
mov
add
push
pushf
sbbb
xchg
or
xchg
inc
mov
test
enter
and
out
ljmp
lods
loope
inc
jl
loope
aad
stc
pop
aaa
mov
jp
sbb
dec
fcoms
pmaddwd
cmpsl
xchg
inc
jno
movsl
inc
push
xchg
mov
shrl
fdivrs
jmp
jae
int
lret
in
push
xchg
shrl
in
mov
cld
cs
or
dec
cmp
cmp
lret
int
and
dec
add
shlb
into
gs
dec
mov
mov
fsts
sbb
jno
out
mov
push
mov
fldl
mov
mov
adc
fldl
cmp
mov
mov
fstpl
movsb
icebp
fwait
push
insl
dec
xor
xchg
pop
cli
in
rorl
inc
scas
adc
aaa
xchg
stos
mov
jbe
loop
sti
xchg
push
jo
frstor
mov
mov
int
pusha
push
les
and
pop
addl
push
test
push
pop
sbb
flds
ds
out
out
dec
xchg
arpl
test
pop
pushf
inc
fldt
dec
das
mov
xchg
mov
bound
adc
subl
into
pop
jle
je
xchg
or
pop
roll
jo
push
xor
decl
mov
pop
test
aas
push
mov
lret
add
xor
fsubrp
and
in
push
cmp
into
test
lea
lret
addb
cmp
int
mov
cmc
iret
and
shlb
rorl
pushf
data16
sahf
mov
das
xchg
lret
push
fs
rcl
push
add
sub
mov
jecxz
sbb
sbb
out
mov
mov
into
jnp
jns
test
mov
jne
outsl
cltd
dec
bound
pop
iret
iret
icebp
rolb
sbb
out
pusha
pushf
sub
mov
push
insl
negl
repnz
xor
mov
out
pusha
add
cmpsl
push
insl
addr16
dec
scas
pop
bound
adc
daa
adc
jbe
xchg
orb
pop
into
adc
popa
popf
inc
imul
lcall
arpl
out
dec
loopne
cmp
cli
cmp
out
and
xchg
nop
fsubrp
mov
adc
mov
or
or
in
call
add
ret
pop
stc
orl
mov
test
pop
dec
scas
mov
xchg
jno
push
cltd
punpckhwd
aad
shl
and
push
inc
arpl
push
addb
lods
adc
or
int3
js
cmp
xor
pop
in
enter
or
stc
mov
ss
push
inc
mov
aas
lods
dec
movsl
imul
sahf
xchg
aaa
out
cmp
andl
xchg
mov
push
stos
sahf
int3
lods
xchg
cli
xchg
enter
adc
icebp
iret
or
jno
inc
test
dec
jle
adc
popa
addl
das
dec
popf
pop
xlat
popa
call
aas
imul
aad
pop
or
mov
inc
inc
nop
jae
sub
sub
pop
in
adc
fadds
xlat
mov
addps
inc
mov
cmp
add
js
dec
push
jle
rcr
dec
decb
fdivrp
test
mov
push
xor
sarb
mov
inc
lds
pop
cmp
or
ror
cmp
push
xlat
pop
std
bound
xchg
test
cltd
lahf
pop
pop
cld
out
cmp
adc
sti
idivb
and
sti
cli
xchg
jmp
int3
sub
dec
lods
je
sub
ret
mov
scas
fwait
xchg
or
mov
cmp
stos
das
in
fists
mov
mov
into
scas
xor
pop
ss
repnz
imul
std
lock
or
pop
or
sbb
aam
lcall
mov
sti
repz
cmpsb
pop
insl
out
pop
xchg
jns
outsb
mov
imul
push
add
xor
push
sarb
xor
loopne
and
sub
hlt
dec
mov
fs
mov
mov
repz
mov
es
cli
pop
dec
je
loop
movaps
jg
jne
or
xor
jnp
imul
test
es
xlat
call
fdiv
mov
xlat
in
jge
scas
mov
cmc
test
push
cli
add
lret
xchg
lret
mov
push
ljmp
pop
mov
jae
adcl
mov
in
xchg
sti
js
mov
call
sar
xor
adc
ja
into
adc
sub
mov
cmpsl
adc
inc
push
sbb
add
mov
aaa
cs
sub
jno
or
pop
into
outsb
sahf
dec
stos
xchg
mov
decb
leave
add
dec
adc
out
cltd
orps
ss
mov
movsl
pop
dec
mov
icebp
fisttpl
movsl
add
xchg
pusha
xlat
js
sahf
out
jb
rolb
rcll
pushf
mov
stos
fistpl
stc
je
in
cli
ret
popf
mov
in
and
mov
cli
sub
test
loope
add
out
jbe
dec
cmp
inc
test
cli
sbb
subps
dec
jo
jge
pop
cld
xchg
mov
push
js
ja
pop
pusha
call
push
fdivr
xor
pop
divb
pop
adc
xchg
and
push
push
fbstp
sub
movl
xor
lea
push
dec
sub
inc
add
lea
popa
xchg
pop
cmp
aas
addr16
ja
cmp
das
aaa
jns
adc
add
add
cmp
pop
adc
cli
push
push
sahf
js
mov
popa
ds
ficompl
xchg
repz
jb
jno
ja
addr16
sub
push
inc
les
mov
cmp
call
or
outsl
data16
xchg
fdivp
in
push
pusha
xor
jle
pop
xchg
xchg
mov
jp
add
mov
or
dec
mov
nop
add
push
nop
pop
fstpt
mov
and
enter
out
jae
mull
and
pop
xor
xlat
fiadds
lods
xor
fdivr
mov
lods
xlat
inc
inc
cmpsl
mov
out
loopne
daa
cli
push
dec
test
pop
xor
pop
or
mov
adc
out
push
cmp
ret
mov
mov
cmp
sbb
push
cmpsb
pop
pop
cwtl
ljmp
inc
push
jp
add
fnstsw
sub
sub
movb
mul
cmpsb
pop
push
dec
icebp
adc
cmp
pop
pop
adc
aaa
data16
loope
sbb
xor
repz
sub
xor
jo
popa
sbb
dec
subl
adc
shll
mov
inc
jmp
jbe
jecxz
or
cltd
mov
push
lret
cmpsb
sub
cmp
jp
xchg
cli
adc
add
mov
mov
outsl
mov
adc
push
lods
add
jg
sahf
cmp
int
xchg
test
mov
shlb
jp
or
popf
or
call
lods
pop
ljmp
xor
sbb
adc
pop
mov
insb
push
pushf
leave
dec
cli
out
cmp
loopne
and
jmp
sbb
mov
add
test
enter
pop
adc
dec
cmp
lods
inc
cmp
fisubl
jle
lods
xchg
push
jl
mov
je
cmp
test
filds
ja
push
mov
addr16
jno
into
dec
jp
sub
push
jle
repz
fcmovbe
lea
fs
sbb
cmp
mov
push
pop
cmp
push
xchg
sub
add
shrb
loope
adc
mov
roll
popf
dec
or
rcrl
std
je
popa
cmp
shl
fcoml
pop
mov
pop
jecxz
cmp
mov
ret
pop
repz
iret
movsb
sbb
lds
push
ljmp
in
shr
ret
push
movsl
xchg
jge
add
lods
inc
cmp
ljmp
xor
lahf
data16
xor
je
mov
pop
clc
xor
movsl
outsb
pop
lcall
pop
lods
ja
sbb
xchg
inc
ret
mov
mov
mov
mov
ret
icebp
std
xchg
jne
pop
inc
jb
fsubrs
gs
ljmp
arpl
cld
ret
test
lret
sub
add
data16
shrb
das
lcall
xchg
sbb
or
cld
sub
mov
mov
test
mov
xchg
aas
shll
mov
idiv
jbe
pusha
popf
sbb
js
xor
sarl
or
pushf
jns
out
inc
or
cmp
jnp
aaa
shrb
arpl
lea
mov
inc
and
xchg
mov
fisubs
add
cmpsb
dec
ret
add
frstor
gs
adc
and
jmp
mov
push
adc
mov
in
lods
in
mov
push
lret
add
cmpsl
adc
rclb
or
xor
div
js
mulb
cwtl
in
cs
inc
sbb
inc
or
adc
sti
push
pop
lahf
or
jp
xor
xor
testb
imul
pop
pushf
aaa
sub
mov
push
xor
pop
repnz
sbb
divb
mov
push
mov
cltd
insl
cmp
pop
pop
sub
rolb
xor
xorl
neg
push
subb
loopne
out
in
xchg
jge
push
dec
fs
cmp
add
xlat
repz
push
cli
lock
jns
clc
mov
pop
les
aam
test
push
and
cltd
in
icebp
je
sbb
data16
sbb
jp
sarl
dec
or
push
and
lock
sbbb
das
dec
enter
rcrl
push
je
scas
mov
fsubs
or
aaa
cmp
pushf
mov
insl
jle
dec
mov
aam
scas
or
ljmp
xchg
loop
daa
push
stc
cmp
std
adc
or
add
xchg
xlat
js
incb
mov
fcomip
cmc
out
cmp
adc
mov
cmpsb
inc
pop
es
mov
jbe
sub
mov
xchg
outsl
imul
jae
jge
sahf
dec
xchg
jno
xchg
loop
mov
mov
cmp
inc
lock
pushf
dec
or
imul
icebp
fldt
mov
jbe
mov
jne
int
orb
jno
ja
mov
lods
imul
aas
xchg
lods
sti
test
jg
imul
sahf
pop
and
jo
push
lret
idivb
loop
out
sub
jbe
js
mov
pop
stos
push
sbb
or
call
bnd
and
test
lods
int3
xchg
jnp
jge
cmpsb
out
mov
nop
xchg
dec
or
mov
add
pop
dec
adc
icebp
imul
pop
jg
sbb
xchg
xchg
ds
pop
jg
stos
cmpl
push
xchg
aaa
xchg
pop
adc
aam
in
inc
jb
pop
mov
jl
decb
incb
jmp
mov
mov
mov
ds
setb
pop
inc
cwtl
lahf
fs
or
repz
aad
mov
cmp
insb
divl
ljmp
jbe
jns
xor
je
repnz
dec
sti
sbb
arpl
and
jg
sarb
mov
fdivs
jb
sub
add
sahf
sahf
mov
push
or
arpl
sbb
rcrl
fxch
sbb
adcb
mov
mov
pop
cmpb
and
fsts
mov
adc
outsl
dec
xchg
enter
inc
shl
shll
xlat
inc
ljmp
orb
les
add
fcomps
das
xor
call
add
fsubrl
repz
icebp
insb
mov
andb
lea
mov
addr16
add
packssdw
repz
sti
sub
xchg
divb
mov
fimuls
dec
jnp
add
sub
xchg
adc
loop
loop
lret
push
aad
pusha
jo
out
leave
fmuls
stos
xor
jns
cld
lock
sbb
mov
icebp
jns
mov
jmp
scas
icebp
cmp
mov
lret
dec
pop
pop
sbb
ret
lock
call
inc
mov
fsubrs
enter
fs
jbe
ds
sbb
lahf
hlt
push
sar
mov
mov
movsl
loopne
sbb
pop
push
sub
dec
mov
andl
fbld
das
push
mov
pop
push
inc
ret
sub
cmp
ljmp
cvtps2pd
add
jnp
js
sub
out
and
inc
int
mov
mov
jl
and
and
push
pusha
lea
stos
xchg
jo
mov
cmp
js
xor
jmp
dec
xor
idivb
sub
cltd
sub
shlb
mov
incb
in
or
fcmovne
in
adc
pusha
mov
sub
js
popf
repz
sbb
stos
or
in
inc
lock
fwait
push
xor
mov
lods
cld
mov
scas
mov
adc
ss
movsl
sub
movsl
mov
inc
popf
adc
cmpsl
mov
xchg
jns,pn
push
aaa
pop
xor
add
xchg
movsl
xchg
outsl
mov
mov
neg
mov
cmp
mov
inc
in
jge
cld
fadds
inc
cwtl
lahf
out
sbb
pop
sbb
movsb
nop
xchg
mov
pop
sub
and
loopne
jno
stos
push
stos
aam
sahf
push
xchg
mov
add
adc
mov
fwait
xchg
fcomps
push
int
cmpsl
sub
pop
xlat
imul
inc
test
adc
adc
cmp
shlb
test
ficoms
push
cmc
in
xchg
gs
and
shll
subb
mov
rcr
rcll
leave
mov
ficoms
outsl
mov
stos
dec
fucom
in
pop
mov
dec
push
repz
pop
frstor
mov
xor
pop
jae
pop
lods
dec
out
sbbl
loopne
dec
shlb
jb
loop
or
dec
pop
push
mov
addr16
outsl
subb
mov
inc
ljmp
sbb
mov
jp
push
shll
jnp
lahf
and
sbb
int3
push
popa
dec
push
insl
lock
nop
push
mov
pop
aaa
mov
imul
mov
push
cmp
sbb
cs
sti
sub
add
xchg
pop
jb
xor
xor
xchg
xchg
imul
sbb
mov
xchg
aaa
scas
cmp
xor
jmp
mov
cs
insl
imul
fwait
daa
push
scas
cmp
hlt
pop
fucomi
pop
leave
js
popf
fisubl
mov
ficoml
adc
lds
das
insb
dec
fcmovnbe
mov
pusha
cmp
dec
jne
jae
daa
push
lret
mull
lret
adc
add
sub
insl
out
in
xchg
enter
mov
pop
adc
clc
ljmp
push
xchg
mov
stc
push
cltd
mov
cs
test
mov
lret
addl
jge
lea
aaa
pop
pop
pop
mov
jmp
mov
mov
fcoms
mov
pop
loop
iret
lret
pop
xor
sahf
cmp
pop
xchg
loopne,pt
sbb
mov
clc
ds
pop
inc
test
repnz
adc
repnz
hlt
sbbl
mov
dec
lea
jmp
sub
jge
mov
lcall
fcmovnbe
sbb
je
insb
imul
and
jb
xor
inc
push
in
and
fisubs
or
daa
stos
pop
mov
cltd
push
or
int3
dec
jge
push
fwait
mov
fnstenv
sbb
cmp
dec
cmc
test
shl
xor
jns
mov
loope
imul
inc
cmp
xchg
mov
fwait
inc
scas
ds
fistpl
mov
imulb
daa
shl
jmp
in
lods
jo
inc
mov
cld
sbb
jle
jge
mov
sub
and
fstpt
out
fwait
sahf
add
xlat
pop
add
icebp
movsl
pop
mov
jg
outsb
jmp
or
xor
add
call
pop
rcll
inc
call
push
stos
push
jns
cmc
and
jle
push
cli
aas
shrl
test
pop
jne
pop
sub
mov
sbb
sbb
divb
in
mov
mov
loop
call
adc
lods
sbb
ljmp
bound
sbb
fsubs
and
daa
or
inc
jecxz
std
fnstsw
lods
daa
es
sbb
xor
aad
test
inc
lcall
mov
push
movsl
clc
out
fistl
shlb
mov
jge
mov
fistpl
mov
mov
popa
sbb
jb
jbe
jne
pop
push
xor
loop
add
sub
mov
adc
mov
ret
and
or
shlb
mov
add
push
sub
movsb
es
loop
adc
pop
push
mov
adc
xor
sub
add
xchg
outsl
xor
leave
les
ret
or
inc
int3
push
add
rcrl
push
fwait
pop
mov
loopne
repz
aas
pop
out
mov
pop
int
mov
shll
dec
fs
test
push
sub
outsl
adc
or
loope
pop
rcr
cmp
mov
addr16
cltd
iret
push
sarl
iret
in
cmp
cmpsb
fildll
mov
in
std
in
loopne
cmp
and
movb
repz
sub
add
lcall
cmp
scas
loop
cmp
es
fsts
ss
aam
xchg
fidivs
ss
adc
andb
pushf
iret
jae
stos
or
outsb
inc
xor
in
scas
mov
jp
stos
xorb
sub
lret
xlat
cli
int3
out
lret
push
cwtl
mov
test
mov
stos
adc
call
adc
cmpsb
test
add
mov
sub
lods
out
test
pusha
cld
js
xchg
fsubrs
ja
nop
sbb
lods
lea
ds
scas
sub
sub
and
mov
dec
insb
sub
or
xor
popl
mov
inc
dec
daa
into
fbld
xor
sbb
movb
sbb
add
mov
and
dec
dec
dec
stos
aas
xor
cwtl
mov
cmpsl
lcall
xchg
mov
in
mov
ret
ret
out
push
es
ds
rcr
leave
or
mov
jl
jl
jp
scas
aas
xlat
or
repz
scas
push
jmp
xchg
fldenv
fs
fs
lods
lds
fdivrl
insl
or
insl
push
in
cs
test
cmp
orl
add
lods
push
sarl
jbe
jmp
pop
aam
stos
test
subl
cmp
aaa
adc
mov
cmp
xchg
dec
xchg
xchg
push
mov
out
xor
jbe
add
popa
jle
xchg
add
je
add
pop
in
dec
mov
stc
cmp
jb
shrb
loop
shrb
out
sahf
lods
lds
sbb
xor
lods
push
add
xchg
aaa
xor
xor
add
pop
fnstenv
push
push
ret
std
cmp
mov
lahf
mov
jecxz
cmp
sbb
imul
fstpl
cltd
cmp
and
or
fucom
push
mov
test
bound
cltd
bound
addb
mov
jge
inc
sub
xchg
gs
push
call
idivl
inc
mov
mov
lds
sub
shll
jmp
jo
push
and
cs
cmc
cmp
and
pop
xor
aas
js
mov
test
int3
std
ljmp
ja
addb
fdivrs
mov
je
outsb
sbb
icebp
cli
dec
jne
cmp
insl
imul
xchg
je
or
ss
dec
repz
xchg
sub
adc
lret
mov
jb
div
mov
adc
or
fisttps
jmp
jne
mov
rorl
mov
mov
jo
fnsave
rcrl
bsf
les
sbb
sub
pop
jne
stc
insb
mov
adc
xor
and
in
lods
outsl
pop
pop
mov
push
or
shll
xchg
cli
sub
loop
mov
push
xor
and
sub
daa
gs
lock
mov
shl
lcall
pop
cmp
mov
adc
and
pushf
push
pusha
dec
cmpsb
call
repz
pop
in
shll
push
movsb
popf
inc
iret
mov
jmp
pop
add
mov
aam
jnp
and
sub
push
add
pop
xlat
pop
mov
ljmp
shrl
mov
add
add
loop
mov
cmpsb
dec
mov
add
jp
jns
push
mov
out
jnp
dec
adcl
sbb
or
dec
fcomip
push
sbb
adc
adc
movsl
and
test
pop
sub
dec
inc
leave
rolb
lahf
pop
push
and
lahf
or
xor
lahf
sbb
fildll
imul
xchg
cmp
pop
ror
xlat
jbe
out
cmpsb
lods
xchg
pop
push
int
das
jp
loopne
and
rorb
cmp
cmp
test
out
inc
orl
mov
cld
jmp
xor
fisttpll
out
mov
dec
es
clc
aas
hlt
lds
sub
ret
shl
pop
dec
jmp
adc
rcr
pop
subl
fs
test
cmpsb
jge
fcmovne
inc
cli
xor
aaa
xchg
push
mov
mul
cmp
testb
ljmp
pop
inc
mov
sbb
cmp
inc
mov
fnstsw
rolb
pop
adc
jecxz
and
jp
xchg
repnz
fwait
pop
clc
in
cmp
jmp
fsubs
cmc
out
xor
aaa
push
lret
inc
jle
mov
xor
push
push
jle
jg
test
and
jl
test
push
add
add
or
outsb
inc
ret
sub
in
sbb
jo
add
mov
add
sbb
push
fistpl
les
rcll
jp
xor
and
pop
pop
xor
adc
cmpl
mov
loop
xor
icebp
cmpsl
push
bnd
pop
dec
subl
movsl
sbb
movb
mov
out
frstor
pop
jbe
stos
fisubrl
push
push
push
mov
inc
xchg
sub
xor
fsubl
xor
inc
push
scas
out
clc
xor
loopne
in
push
out
jge
sbb
fstl
dec
cmpb
lahf
mov
sahf
mov
outsl
cmc
shlb
popa
cli
or
sbb
stos
stos
sti
aad
jl
push
mov
loop
jg
shrb
cwtl
push
or
test
std
sub
push
inc
inc
mov
jp
mov
imulb
and
add
out
addb
in
xor
inc
cld
sub
xchg
stc
sub
mov
aam
lods
cmpl
inc
jbe
sbb
les
insb
pop
shll
movl
out
int
stos
mov
ficompl
sub
mov
popf
vpsrad
data16
negl
mov
mov
arpl
ds
jp
test
dec
outsb
push
or
cmp
inc
pop
mov
sbb
pop
out
push
ret
stc
test
pop
insb
scas
cwtl
sub
aaa
and
sbb
fmuls
ret
mov
popl
int
fdivs
in
stc
mov
outsb
out
add
pusha
adc
mov
jg
lea
sub
int3
pop
cmc
cmc
sti
ret
shlb
cwtl
inc
sub
jae
loopne
mov
mov
aaa
call
insb
mov
shl
inc
sahf
adc
and
loop
rolb
fwait
adc
push
push
movsb
pop
mov
inc
adc
push
imull
mov
stos
sub
inc
pop
fists
orb
cmp
dec
xchg
cwtl
jo
orb
nop
xchg
push
in
jmp
lock
test
and
lds
orl
fs
dec
xchg
gs
repz
in
movsl
jmp
sbb
xchg
movsl
jnp
sbb
xchg
adc
jecxz
lahf
push
fwait
mov
pop
hlt
jg
shll
mov
adc
rol
and
ljmp
stos
jae
hlt
fldenv
push
and
xchg
sub
dec
fs
lds
lea
fsubrs
lahf
dec
cmc
xor
cmp
pop
pop
and
add
sarb
aad
dec
aaa
mov
jecxz
out
inc
push
cmp
pop
inc
hlt
jmp
dec
jns
mov
and
xchg
into
shlb
lods
push
xor
rep
mov
jl
cmp
scas
sub
sti
mov
rol
and
adc
pop
sub
cwtl
push
pop
pop
fisttpl
push
lds
test
into
and
sbb
pusha
cmp
std
push
cmpsb
pop
sti
and
jecxz
add
mov
dec
mov
or
es
test
ret
movsb
dec
add
ljmp
jp
movsl
mov
jne
fadds
loope
movsl
stos
jbe
out
fnstsw
xchg
clc
orl
or
push
adc
cltd
rclb
ja
pop
fstl
jns
out
pusha
fldt
test
out
jmp
xchg
in
add
lahf
movsb
add
xor
loopne
fiadds
adc
push
push
mov
les
pop
pop
imul
add
mov
jno
xlat
add
pop
mov
testl
inc
cli
or
shll
inc
xor
mov
push
cs
fdiv
sbb
pusha
test
jle
mov
hlt
inc
add
fldt
mov
or
dec
repz
cmpsl
jge
ja
imul
fldenv
repz
fnstcw
xchg
jbe
mov
test
cltd
ja
shr
negl
or
add
call
mov
pop
rorl
sti
in
adcb
aas
push
fisubrl
adc
and
and
dec
mov
cltd
in
int
mov
and
jae
xor
push
lahf
mov
mov
mov
popf
cmp
int3
dec
test
shrl
int
and
mov
pushf
aaa
pop
add
outsl
jns
pop
adc
neg
inc
sarb
mov
jo
xchg
push
or
dec
pop
je
test
shll
push
imul
adc
or
pusha
push
inc
outsb
dec
xchg
or
mov
dec
mov
jp
xchg
fmull
pusha
test
sahf
jmp
les
sub
pop
adc
leave
lret
push
xor
push
xor
and
xlat
popa
mov
aas
push
jns
mov
push
mov
mov
dec
leave
mov
out
cld
cmp
mov
mov
rcrl
pop
adc
adc
rcrb
mov
mov
notl
or
shrb
les
test
repz
push
imul
mov
sarb
stos
xor
mov
sarb
mov
in
inc
lahf
dec
pop
jl
in
in
or
inc
adc
mov
push
outsb
lds
push
sub
jmp
lret
add
loop
xor
jns
fwait
xchg
inc
xchg
rclb
sti
daa
test
les
fwait
es
sbb
cmp
fdiv
clc
xchg
aas
rorl
ljmp
dec
cmpsl
xchg
pop
in
jae
jp
xchg
mov
cmp
cmp
test
jno
clc
lock
and
mov
push
ss
inc
cmp
stos
aas
xchg
jge
test
mov
xchg
jne
ror
mov
test
cmp
mov
bound
pop
sbb
mov
bnd
xchg
ds
aaa
cmpsl
hlt
ss
stos
sub
nop
aad
popa
add
hlt
mull
cld
jge
into
jbe
sbb
sti
iret
rcr
shll
pop
dec
out
push
add
outsb
xor
push
adcb
adc
pop
rolb
dec
imul
jae
int
push
mov
xchg
stc
fwait
xchg
mov
nop
lcall
mov
ja
mov
movsl
xor
ljmp
inc
mov
push
cmp
sbb
shlb
jne
jbe
jae
repnz
mov
dec
push
in
mov
or
loop
cmp
fcoml
outsb
das
ja
mov
subb
adc
fildll
pop
je
adc
lret
inc
jg
mov
and
or
ljmp
call
movsl
or
xchg
cli
iret
mov
std
fwait
inc
mov
mov
inc
scas
shll
or
push
call
les
insl
popf
aaa
std
sbb
xor
sub
sarb
lds
out
ljmp
stos
mulb
outsb
or
and
lock
jns
adc
fs
addl
inc
jg
add
nop
cltd
sub
xchg
dec
xchg
and
push
dec
lods
fcomp
mov
adc
mov
inc
cmpsb
cmpsb
jl
mov
xchg
in
ss
in
dec
in
shr
sbb
test
pushf
jbe
dec
push
xor
jl
xchg
sti
stc
push
sub
es
stos
scas
pop
mov
mov
outsl
jae
inc
push
shlb
jae
gs
outsl
out
jle
push
push
test
dec
xor
loop
ficoms
ret
xchg
lret
mov
mov
adc
pop
dec
mov
xchg
sub
test
xor
adc
test
jo
xor
imul
jne
cmpsl
mov
mov
xor
ljmp
sbb
sub
in
outsl
dec
sbb
pop
fdivrs
mov
adc
icebp
push
dec
sbbb
test
jp
mov
mov
lea
sub
pop
and
ss
movsl
std
movsb
push
pop
sti
popf
mov
in
push
and
fstpl
imul
test
ss
mov
dec
lret
ja
jl
and
mov
lret
nop
jp
outsl
shll
dec
dec
out
sub
pop
jg
mov
xchg
out
push
xor
sbb
cli
jo
scas
sub
lods
sub
pushf
push
and
push
xchg
lock
movl
or
cli
fwait
pop
rolb
jns
lret
sbb
and
addb
out
test
add
mov
movsl
shlb
mov
xor
and
stc
std
sbb
outsb
leave
lods
pusha
push
hlt
push
stos
mov
pop
or
fwait
or
pop
iret
mov
or
ds
stos
cmc
mov
out
mov
out
fcomps
push
push
push
push
xor
shrl
push
push
add
push
jmp
lret
push
aad
push
insb
rcll
jle
sbb
dec
leave
fidivs
mov
jbe
jmp
movsl
mov
lods
pop
inc
mov
ja
xchg
popa
jl
shrl
add
leave
ljmp
fisubrl
in
push
test
jnp
pop
scas
test
nop
stos
jb
inc
pop
aam
pop
sbb
xchg
dec
push
xchg
ret
adc
into
fcmovne
cmp
inc
push
data16
cmp
insl
jle
xchg
inc
cs
addr16
shr
shlb
jmp
mov
dec
cwtl
mov
lea
fdivl
xor
lock
int3
shll
aam
addl
daa
adc
out
std
mov
jle
mov
outsl
jp
rorl
or
inc
inc
adc
jae
movb
test
mov
or
xor
push
sbb
jbe
inc
cmp
add
inc
in
mov
or
int
mov
mov
push
insl
inc
adc
fisubrs
shr
sahf
xchg
xor
push
push
pop
pop
inc
lcall
ret
outsl
inc
xchg
test
pop
sarb
loop
and
jns
push
sarb
aam
cld
and
bound
push
jecxz
lea
mov
test
fdiv
jp
jbe
sub
xchg
ret
sbb
js
and
rclb
inc
sbb
add
outsl
jae
fisubrl
fcmovnu
mov
mov
imul
cmp
adc
test
pushf
dec
mov
jmp
jmp
sub
aam
push
js
or
mov
mov
pop
sbb
out
sub
jns
pushf
and
inc
inc
xchg
pop
mov
mov
dec
dec
xor
cld
lahf
sub
es
dec
jp
mov
push
sbb
fidivrs
mov
lret
daa
fbstp
mov
inc
xor
movsl
sub
shrl
inc
sub
cld
adc
mov
xchg
inc
movsb
ljmp
adc
scas
adc
adc
repz
pop
push
decl
and
cmp
mov
int3
cld
lcall
and
mov
mov
lock
loope
sub
iret
repnz
notb
mov
mov
mov
pop
sbb
loopne
xlat
pop
xor
std
out
mov
inc
pop
adcb
js
insb
mov
xor
pop
insl
inc
movsl
jne
cmpsb
mov
je
mov
std
scas
add
test
gs
jg
fldt
into
in
out
fsts
mov
jb
cmp
cmpsb
add
sub
pusha
pop
xlat
pop
adc
cmp
imul
lock
cmp
lods
lret
jg
gs
icebp
mov
sbb
add
adc
mov
nop
cmp
push
mov
cmp
adc
mov
mov
xor
adc
outsl
mov
cmp
xorb
push
sti
dec
notl
mov
xor
sbb
or
stos
jmp
fbld
pushf
mov
jmp
pusha
push
lret
or
push
mov
sbb
ja
push
out
dec
lods
daa
xchg
rcrl
xchg
add
sub
mov
hlt
or
popa
in
test
dec
mov
cmp
sbb
icebp
push
je
mov
mov
jae
and
mov
mov
mov
in
lods
dec
or
or
repz
cmp
sub
jo
push
jo
jecxz
inc
sbb
jl
fsubr
jbe
jb
inc
aas
outsb
xchg
aaa
idiv
cltd
lcall
scas
insb
lock
adc
adc
push
adc
lret
and
cld
mov
test
xor
in
arpl
cltd
cmpsl
and
or
mov
hlt
mov
fstps
sbb
adc
mov
inc
push
fadd
mov
psubq
sub
lods
or
mov
jbe
cmp
sbb
sub
movaps
add
in
cwtl
int
jns
scas
or
push
or
orb
pop
enter
icebp
test
rclb
mov
sbb
mov
sahf
in
test
outsb
in
stos
cs
inc
dec
xlat
icebp
xor
jmp
push
mov
adc
jle
int
loop
push
cmc
shrb
sub
cli
aaa
shl
sbb
mov
pusha
lret
pop
jbe
cmp
push
push
xchg
lods
dec
adc
mov
mov
pushf
int
add
jecxz
mov
lock
and
sbb
sbbl
mov
xor
or
aam
xlat
sub
and
pop
cmp
jne
jnp
jge
sbb
lret
mov
adc
cltd
xor
xchg
push
jecxz
insl
lahf
xchg
sbb
mov
stos
or
xor
sbb
xchg
sub
dec
mov
lret
lods
rclb
or
nop
fs
arpl
mov
shrb
pop
fisubs
and
fdivrs
inc
dec
jmp
pusha
xor
cmpl
iret
push
aam
lds
popl
add
xchg
ret
shl
add
fisubs
fcmovu
popa
lock
mov
add
mov
fwait
cmp
and
push
xor
in
js
sub
inc
inc
add
sahf
fnstcw
mov
sub
iret
cltd
leave
rol
and
push
and
test
in
or
push
pushf
fcmovu
lret
xchg
xchg
sub
push
push
or
mov
fsubrp
cmpsl
cltd
xchg
ds
push
pop
aas
mov
bound
out
dec
dec
mov
dec
daa
and
sub
mov
add
out
pop
daa
and
sbb
sbb
and
imul
dec
push
xchg
cmp
xorl
mulb
repz
and
test
mov
ds
push
loope
jmp
adc
xor
pop
mov
mov
sub
cmp
daa
stc
adc
inc
enter
cmp
lret
mov
mov
mov
in
lock
fadds
sub
lods
jbe
mov
sbbl
addb
jns
jb
dec
scas
sbb
sbb
mov
pop
mov
scas
mov
jb
loop
pop
ret
int3
lods
pop
fiadds
jns
int3
jo
or
jge
push
movsl
push
out
inc
lret
mov
xor
xor
js
aas
fldcw
popl
pushf
mov
push
adc
les
cmp
mov
stos
xchg
sub
xchg
cwtl
pusha
movsb
jns
stos
repnz
test
push
hlt
cltd
in
or
pop
mov
les
mov
fsubrs
cltd
daa
out
cmpsl
lds
sub
lods
mov
out
push
sbb
ret
mov
js
sub
pop
das
mov
cmpl
jg
mov
add
fdivs
outsb
sbb
pop
xchg
inc
xorl
sub
jns
test
adc
cmp
aam
aas
adc
push
or
xchg
js
xor
fwait
aam
dec
das
movsl
jns
xchg
in
jge
sbb
lods
lods
adc
sti
jbe
jb
mov
mov
icebp
adc
dec
leave
pop
jo
mulb
adc
pop
xchg
jb
aas
or
cltd
pop
mov
das
mov
add
jno
mov
shlb
add
ffree
aam
pop
push
lret
lret
mov
das
lods
pop
adc
cltd
cwtl
mov
loope
negl
rcrl
fcmove
iret
xor
mov
int
push
insl
sub
mov
push
cmp
xor
rcrl
into
xchg
decb
aaa
pop
popf
movsl
mov
iret
inc
mov
std
mov
push
xor
adc
fstpt
add
jmp
out
push
push
fldcw
shrl
icebp
mov
pop
es
mov
lret
aam
or
arpl
jbe
fstpl
test
xchg
rcrb
popf
add
loop
mov
lds
dec
dec
jl
sbb
pusha
fdivs
jbe
je
push
jno
adc
mov
mov
mov
mov
addb
pop
cmc
pop
pushf
xchg
sti
mov
mov
inc
fisubrs
or
mov
loop
cmp
sub
je
add
dec
data16
fisubl
jb
pop
fsin
add
lods
and
dec
jae
pop
lods
dec
xchg
mov
daa
ret
test
add
xabort
xor
ret
repnz
mov
push
lods
and
scas
in
or
pop
lds
pop
lcall
push
sbb
arpl
push
cmc
add
adc
inc
lea
push
mov
jecxz
push
loop
push
daa
or
xlat
std
add
idivl
aas
or
add
push
mov
lods
jo
dec
and
jmp
arpl
aad
mov
cmc
add
lock
mov
negl
lret
nop
ret
pop
xorb
xchg
test
push
div
ja
test
cmp
mov
xchg
lods
xor
sub
pushw
fwait
jb
cmp
xlat
clc
xor
add
smsw
mov
scas
inc
iret
aaa
and
jg
sbb
jo
xor
scas
sbb
incb
xchg
push
lahf
lock
cld
pop
je
rorb
inc
stc
jge
mov
dec
and
push
iret
cmp
insl
xchg
leave
pusha
movsb
negb
sub
lods
shll
mov
in
mov
cli
push
fdivrs
lds
pop
jnp
fwait
xchg
xchg
push
loop
adc
xlat
cmc
mov
daa
xchg
clc
pop
push
sar
sbb
cmp
lock
subl
add
xchg
mov
mov
icebp
pop
xchg
sub
push
out
sahf
mov
hlt
into
adc
sbb
mov
nop
pop
adc
lods
loopne
movsb
push
inc
loope
movsl
movsb
jne
pop
loop
mov
divb
jge
imul
push
jmp
sti
sahf
sub
inc
inc
es
inc
pop
into
mov
in
add
xchg
push
push
hlt
jnp
sub
or
mov
mov
jl
cmp
pop
dec
out
aaa
movswl
lock
mov
pop
ror
push
cmp
arpl
jo
mov
movsb
movsl
dec
fcmovb
sub
in
adc
jnp
push
ret
and
inc
bound
frstor
push
pop
dec
jle
cmp
lock
adc
pop
adc
sbb
push
cmpsl
jge
testb
push
in
push
ss
repnz
inc
push
nop
xchg
aas
cmp
mov
ss
shll
pop
int
hlt
mov
or
or
xor
repz
mov
inc
fldl
xchg
xchg
sbb
jle
push
push
push
cmc
or
aas
mov
and
xchg
lret
imul
mov
fsts
out
ljmp
lret
std
mov
mov
clc
jbe
cmp
int3
push
sub
lcall
sbb
cmpl
xchg
jnp
popa
push
pop
jp
and
push
mov
cmpsl
xor
xchg
sbb
mov
mov
shll
incb
icebp
jnp
inc
int3
xchg
js
xlat
sbb
cmpsb
mov
ss
mov
fists
jbe
imul
mov
cmpb
pop
shlb
mov
dec
data16
dec
push
jmp
cmpsl
mov
aam
inc
loop
pop
subl
outsb
repz
sub
movsl
imul
imul
add
fwait
mov
push
ljmp
sub
repnz
jle
pop
repz
mov
bound
pop
jecxz
or
cltd
addr16
xchg
mov
inc
mov
shlb
leave
push
pop
cmovge
jecxz
xor
pop
sbb
inc
addr16
add
and
mov
addb
outsb
test
sub
inc
mov
mov
loopne
sbb
xor
xchg
jnp
jo
jp
inc
push
pop
pop
adc
adc
dec
jle
aas
cld
mov
mov
mov
addr16
and
imul
or
hlt
sub
outsl
lods
in
xor
inc
mov
pop
sub
mov
push
test
ret
loop
sbb
dec
insl
mov
ret
dec
push
cmp
push
xor
addr16
xor
fbstp
mov
mov
dec
pop
mov
sbb
in
xchg
mov
ja
repz
aad
cmpsl
mov
pop
jmp
pop
cwtl
sbb
repnz
fldl2t
pop
js
cli
xchg
dec
or
fs
repnz
fistps
cli
daa
adc
out
inc
jae
push
xor
xor
popa
pop
movsl
lret
popf
inc
add
xchg
xchg
cltd
dec
xlat
mov
or
xchg
out
xchg
sub
popa
xchg
adc
cmp
jle
xor
int3
mov
push
and
addr16
in
loop
mov
out
popa
adc
jge
test
test
xor
stc
pop
sub
jns
hlt
sbb
sti
jl
bound
inc
movsb
ljmp
test
jp
lcall
xchg
stos
lcall
enter
or
jae
ds
mov
sbb
rcl
add
inc
js
fwait
dec
pop
mov
faddl
stc
sub
pop
lock
ds
outsb
fwait
repz
decl
and
pop
xorl
push
loop
dec
or
sbb
xor
subb
xchg
lock
adc
push
fiaddl
pop
xchg
pop
cmp
mov
mov
ret
xor
or
sbb
imul
pop
fdivrs
pusha
cmp
loop
add
dec
mov
lret
fistl
mov
addr16
scas
inc
mov
mov
adcl
dec
hlt
cs
push
jmp
in
cmp
in
and
loopne
clc
fisttpll
in
clc
mov
repnz
sbb
inc
imull
push
sub
and
outsl
cmp
loope
mov
add
mov
push
and
fidivs
add
and
and
loop
or
push
jns
out
pop
adc
push
pop
push
mov
stc
lea
pop
fcom
dec
dec
jb
mov
sub
xor
je
cmp
adc
push
push
daa
push
scas
shrl
jno
cmpl
pop
int3
mov
sub
sti
cmp
das
mov
jmp
jl
sbb
in
sub
and
sbb
jo
aam
mov
sub
sbb
pop
pop
aam
pop
push
jne
cmp
jbe
repz
inc
loop
enter
xor
aaa
dec
inc
jns
xchg
adc
movsl
ret
jg
clc
xchg
test
lea
push
mov
sbb
out
xor
enter
and
or
sbb
mov
dec
sbb
imul
jne
push
xor
js
ret
cmpsb
lds
mov
add
dec
gs
mov
mov
inc
icebp
and
mov
mov
dec
addr16
inc
sub
jne
jns
jnp
push
call
push
dec
sub
sbb
jle
xchg
ret
aas
xor
sbb
out
in
jb
sbb
insl
sbb
fwait
push
pusha
lds
inc
fisttps
or
nop
pop
nop
mov
or
out
pop
mov
incb
cmp
dec
das
iret
loop
push
leave
xchg
inc
in
mov
xchg
jb
push
and
jmp
inc
loopne
mov
stos
xor
mov
mov
clc
mov
fistpll
pushf
jns
jg
dec
lods
adc
fwait
pusha
jb
sub
mov
outsb
daa
das
push
std
jge
sbb
and
push
pop
rcrl
pushf
ja
and
mov
js
and
mov
loopne
test
in
stos
lds
push
and
arpl
jg
int3
pop
test
mov
xlat
cmpl
addl
decl
cld
dec
mov
mov
jmp
nop
pushf
sbb
fidivrs
mov
popf
cwtl
imul
int
jecxz
fcoms
sbb
dec
dec
ret
mov
lods
xchg
movsb
lret
mov
pop
mov
and
xchg
dec
mov
scas
inc
or
push
mov
into
inc
test
imul
dec
mov
cmp
adc
divb
repz
gs
jo
popa
fildll
daa
stos
add
add
inc
push
popa
push
jmp
cmp
hlt
fmul
cmp
scas
scas
adc
push
cmpsl
cwtl
push
cmp
icebp
cs
xchg
mov
movsb
inc
test
cmp
mov
mov
xchg
jo
mov
addr16
dec
mov
dec
mov
idiv
sbb
add
repz
cmp
cmp
jmp
mov
or
enter
test
mov
fwait
imul
mov
mov
insb
sarb
jl
add
push
daa
mov
xchg
je
pop
cmc
push
push
or
xchg
enter
repz
xchg
sbb
mov
jmp
loope
mov
scas
dec
imul
jmp
sbb
sub
mov
dec
out
jmp
pop
mov
jo
jge
loope
cmp
and
and
repnz
xchg
mov
movsb
into
push
scas
fldl
lods
mov
ds
pop
bound
add
mov
add
aas
jmp
jno
pop
xchg
xchg
insb
cmp
scas
repnz
out
push
mov
movsb
js
bnd
out
in
jmp
popa
repz
fld
leave
hlt
or
pop
js
dec
mov
pop
add
test
pop
mov
jge
fwait
nop
andb
js
cmp
push
push
cmp
movsb
lock
rcr
add
in
cmpl
adc
sbb
adc
fcompp
enter
lea
pop
cmp
or
stc
iret
mov
out
roll
pusha
jmp
jno
push
imull
frstor
mov
lods
divl
pop
mov
pop
addr16
mov
push
js
cmp
jl
and
das
mov
push
mov
dec
pop
test
in
adcl
sbb
movsb
in
push
cltd
out
jbe
jge
sub
imul
mov
jecxz
jmp
test
adc
dec
ret
outsl
jg
in
mov
mov
aad
mov
enterw
pop
inc
nop
cmp
ss
sbb
inc
call
jge
cwtl
leave
dec
gs
adc
ret
cmp
bound
mov
and
cmp
mov
out
and
pop
repnz
ret
xchg
bound
pusha
jmp
and
jae
fwait
jmp
out
jbe
push
jns
inc
adc
push
push
jge
xlat
pop
adc
ja
mov
rorl
mov
lcall
js
cwtl
cmp
push
je
popa
xchg
push
push
cmp
addr16
push
push
das
popf
cmp
je
popa
dec
into
xor
push
enter
enter
out
aam
daa
outsl
aaa
push
mov
rcrl
shrl
int
shlb
jp
inc
call
sahf
stc
inc
clc
sub
jbe
adc
xabort
xchg
dec
pop
icebp
pop
and
add
mov
sti
adc
shl
outsb
dec
mov
cwtl
sub
add
mov
das
cs
andb
je
dec
dec
jg
iret
lret
fisubs
and
xchg
aam
and
add
pop
pop
mov
mov
rcr
bound
sti
xchg
and
outsb
xchg
mov
dec
mov
cld
lds
ret
bound
icebp
mov
push
push
mov
rcrb
xor
sub
xchg
mov
das
sub
test
test
ficoms
fwait
lods
gs
sub
int3
test
xchg
mov
ret
mov
fcoml
scas
outsb
arpl
or
fdiv
test
jb
scas
sbb
and
lcall
icebp
pusha
daa
cmp
daa
mov
fsubrl
mov
cmpl
notl
inc
in
mov
dec
lret
dec
rcrl
cmpsl
xchg
js
mov
mov
jns
insb
gs
push
int3
mov
jno
add
lock
jno
imul
lock
pop
inc
aad
pop
loopne
insl
jo
mov
add
out
test
add
rcrb
mov
cmp
sub
push
push
aas
and
popa
fnsave
lds
jg
outsb
mov
test
jns
mov
out
or
inc
and
imul
jae
adc
aaa
mov
imul
in
lds
fimuls
or
jne
rorb
outsb
imul
mov
mov
shrl
fbstp
fcmovnu
in
add
mov
adc
xchg
lahf
cmpl
stos
xchg
mov
fwait
popa
movsl
out
outsl
loope
shll
mov
xchg
lcall
in
push
dec
outsl
loopne
inc
push
jbe
mov
mov
xchg
lds
sub
sahf
jno
call
push
loope
fstpl
sub
movsb
xor
and
nop
push
dec
sbb
xlat
shrb
jb
divb
lods
shlb
fcmove
bound
lods
fists
mov
cmc
enter
push
pop
pushf
pop
leave
pop
sub
jmp
or
dec
es
mov
rcrb
jge
js
xchg
lret
pusha
add
xorb
push
aam
fwait
stos
add
lock
insl
add
sarb
stos
push
adc
std
cwtl
jo
hlt
out
xor
add
shrb
xor
xchg
push
sbb
test
push
sbb
aad
mov
sub
mov
mov
ja
push
sti
js
sbbl
pop
pop
cli
fadds
mov
or
mov
jmp
cwtl
dec
shll
aam
hlt
mov
adc
lea
pop
pushf
int3
outsl
ja
sahf
out
fwait
inc
xlat
lds
add
dec
inc
cmpsb
push
ljmp
xchg
pop
sub
mov
mov
addl
mov
cltd
jnp
lods
adc
sarl
mov
pop
xor
sbb
test
pop
xchg
cmp
idivb
mov
into
add
jg
add
sbb
xor
rorb
pop
fdivs
inc
imul
xchg
adcl
pop
mov
aad
fcmovne
arpl
clc
inc
popf
in
sub
push
ss
imulb
mov
pop
xlat
xrelease
insb
mov
pop
mov
push
jecxz
cmpsb
jle
rorb
and
xchg
push
push
jl
or
add
test
adc
int
sbb
sbb
lea
jmp
push
sahf
int3
push
dec
std
pop
sbb
loop
lea
inc
shrb
cli
aas
scas
gs
mov
ljmp
insl
ljmp
pop
dec
dec
cltd
fisubrl
in
push
test
mov
jecxz
daa
popf
jle
imul
mov
xchg
aam
mov
inc
pop
out
inc
mov
jmp
pop
pop
jp
inc
xchg
sub
mov
pop
arpl
add
out
jle
sti
jmp
push
cmp
push
xor
rolb
mov
mov
stos
insl
mov
pop
les
sahf
add
dec
adc
dec
insb
and
pop
data16
loopne
insl
hlt
mov
sub
adc
clc
test
xor
aam
mov
ljmp
ljmp
adc
sub
cld
std
xchg
lds
xchg
jnp
jae
fildll
jmp
fs
pop
das
pop
add
int3
sbb
ja
call
iret
sahf
fs
xchg
cmc
xor
cmp
shrl
push
jge
pushf
xor
lret
push
cmp
lods
sbb
pop
push
xchg
lret
add
movl
cli
jo
cmp
fcoml
stc
mov
cmpl
in
add
sti
sub
pop
js
into
aad
cli
push
jne
lahf
lea
loopne
insl
sub
xchg
out
pusha
push
pop
sub
add
xor
insb
push
pusha
lcall
cltd
pcmpgtb
pop
test
adc
ss
int
in
les
iret
inc
adc
jp
mov
mov
fmul
push
aaa
bsf
out
loop
lret
lods
jecxz
shrb
xlat
add
xchg
int
outsb
add
xchg
call
setns
popf
cmpsb
xor
fstpt
mov
mov
cmpsl
insl
adc
loop
pop
sahf
dec
push
data16
cmp
insb
push
in
int3
mov
iret
mov
lcall
xor
mov
push
or
stc
imul
leave
das
mov
add
xchg
out
les
rclb
mov
mov
xchg
int3
push
add
ja
cmp
mov
push
mov
sbb
push
mov
movsl
aaa
jg
scas
aas
rcrl
mov
push
shll
inc
jnp
and
in
addr16
mov
cmp
or
stc
push
insl
cmp
in
mov
push
stos
jo
lret
or
mov
testb
fs
add
adc
sbb
js
sbb
sbb
loope
rorb
add
xchg
xchg
and
push
jo
lret
hlt
mov
inc
std
aam
lds
mov
xchg
dec
outsl
mov
sbb
lods
mov
mov
add
or
jae
jns
push
inc
mov
aad
mov
lock
lret
fisubrl
xchg
sbbl
sub
nop
sbb
movb
mov
aam
insb
out
cli
std
jp
fisttpll
push
test
pop
xorb
aad
inc
mov
add
fwait
or
arpl
xorb
mov
stos
ret
jb
jmp
inc
movsl
xchg
loopne
sbb
sbb
sbb
cmpsb
push
in
mov
inc
push
pop
jg
sub
std
dec
iret
fs
lods
fiaddl
pop
popa
out
pop
movsb
iret
in
pop
loop
inc
ss
ficoml
push
mov
fdivrs
add
jno
sbb
or
mov
scas
lods
add
outsb
sbb
sbb
add
neg
test
push
test
jno
stc
fadd
sub
dec
push
movsb
out
or
cmp
movsl
test
sbb
shlb
lcall
inc
paddw
and
or
dec
pop
mov
cmp
cmpsb
inc
and
dec
jl
daa
hlt
and
mov
xor
dec
mov
enter
jo
push
je
mov
mov
leave
ss
cmp
lret
icebp
mov
adc
mov
mov
xlat
mov
push
fucomp
xchg
inc
scas
push
lock
shll
jl
lret
or
adc
mov
lock
xchg
popa
inc
es
es
jmp
dec
sahf
jg
shll
jl
xorb
nop
jge
lret
xor
jb
sbb
nop
push
push
mov
adc
loopne
stos
fbstp
scas
aas
push
jge
mov
ret
xor
mov
clc
sbb
lock
dec
data16
xchg
add
mov
jg
pop
adcb
je
mov
xor
inc
sbbb
lahf
lds
shrb
sbb
jmp
push
lcall
ljmp
mov
lea
outsl
mov
clc
push
stos
dec
pop
sbb
mov
scas
dec
add
icebp
les
and
jmp
xchg
adc
inc
push
mov
inc
mov
sbb
cmp
andl
dec
mov
std
mov
add
dec
xor
cmovb
or
ljmp
rcrb
xor
std
adc
cmp
insb
js
push
cmp
xchg
dec
imul
xor
pusha
rcrl
sub
push
lret
aad
movsb
push
jg
add
add
repnz
add
push
mov
mov
dec
sbb
aam
xchg
and
push
insb
sub
jg
mov
xchg
cmc
mov
xchg
fidivrs
adc
xchg
xlat
bound
inc
sub
ret
and
inc
push
test
dec
movsb
dec
scas
cmp
lea
xchg
cs
adc
dec
hlt
jmp
pop
push
lahf
pop
fdivl
lret
ljmp
gs
xchg
dec
fmul
call
sbb
leave
imul
jo
push
push
xor
mov
xchg
rorb
lret
jne
xchg
ret
aas
cmp
fcomps
mov
outsl
rorb
push
sub
and
rep
cmpsb
pop
cltd
or
fs
add
xor
cmp
adc
and
bound
out
adc
ret
faddl
test
stos
rolb
aad
pushf
es
xor
mov
rolb
xchg
divb
inc
xchg
xchg
lods
mov
add
pop
xor
push
and
adc
jp
sub
add
sarl
mov
mov
lret
loope
ja
cs
dec
mov
pop
add
into
call
mov
nop
idivl
lds
pop
mov
mov
test
clc
std
adc
lods
push
outsl
cmp
dec
cmp
or
into
loope
mov
iret
ljmp
fs
push
rorl
xor
dec
or
add
in
or
div
add
push
lret
out
push
mov
lea
fdivrl
mov
sub
sahf
sbbl
popa
mov
push
cmp
mov
ljmp
push
insb
jecxz
ret
mov
jecxz
cmc
in
xor
push
xchg
sub
dec
jb
xchg
or
xchg
xor
scas
and
mov
mov
xor
sbb
hlt
inc
jge
inc
in
mov
or
test
mov
add
pushf
stos
push
jge
or
sub
dec
sbb
push
pop
and
insl
mov
adc
ret
lock
mov
cld
pop
pop
jmp
push
daa
mov
movsl
stc
loope
inc
call
cmp
fidivs
imul
dec
in
add
in
out
xor
clc
xor
cwtl
out
push
xchg
inc
data16
and
pop
xor
popa
sub
cli
cmp
cmp
or
or
mov
add
mov
pop
hlt
movsb
sub
sub
shrl
adc
inc
outsb
lods
jnp
std
js
cmc
xor
sbb
imul
ss
push
repz
jb
daa
dec
cmp
xchg
aas
push
imull
cwtl
rcr
iret
adc
je
pop
mov
jp
bound
dec
es
fisttpll
mov
in
dec
cs
loopne
outsl
xchg
out
jns
int3
inc
lahf
add
fildll
and
ror
mov
jp
in
fcmove
and
mov
push
es
pop
sub
imulb
add
mov
jno
or
outsl
js
mov
fstpl
sahf
sbb
ss
arpl
cmpsb
mov
fistl
mov
and
in
sti
arpl
add
dec
add
rcrl
inc
push
dec
int
push
pop
adc
mov
sarb
sti
cmp
int3
dec
ret
cmc
or
mov
mov
jge
mov
pop
sbb
pop
xchg
dec
outsb
js
and
xchg
insl
add
inc
scas
dec
mov
cmpsl
imul
lock
fstpl
rcrl
aam
das
mov
lret
xor
popa
mov
test
pop
push
cld
add
push
in
nop
push
jmp
adc
sahf
clc
imul
popf
aaa
jmp
rol
mov
adc
mov
movsl
imul
je
cmp
arpl
dec
outsb
aad
cli
aas
icebp
or
dec
push
push
and
pop
cmp
dec
rcll
cld
clc
cmpsl
sub
cmpsl
cmp
push
adc
sbbb
icebp
in
add
xchg
out
mov
ss
stos
rcl
daa
sbb
bound
xchg
xchg
sub
pop
sub
arpl
test
or
ret
mov
pop
jmp
add
mov
jo
lea
xchg
push
loope
cli
xlat
stos
out
lcall
pop
mov
xchg
in
jle
insb
mov
jl
loope
mov
or
push
fs
rol
loop
or
and
popf
xlat
pop
sbb
lret
sub
das
hlt
pop
dec
popa
sahf
divb
dec
push
mov
das
add
insb
jmp
inc
incl
add
ljmp
mov
xor
mov
add
dec
mov
xor
sbb
mov
dec
adc
sub
jne
jmp
or
pop
mov
fimull
xor
aam
mov
ret
pop
mov
jle
sub
xchg
rol
lahf
int3
sub
mov
cli
rcll
std
push
test
pop
or
and
insb
mov
fucom
sbb
aaa
lret
adc
jb
cmp
mov
and
fiadds
xchg
push
mov
arpl
ret
fldcw
pop
mov
mov
mov
mov
push
ljmp
xchg
fstpt
sbb
int3
lret
sub
push
pop
add
ret
sub
lods
mov
test
xchg
test
sub
inc
xchg
int3
xor
cwtl
in
movb
pop
xchg
sti
push
imul
mov
dec
sbb
fsubr
adc
fsubrl
or
sbbl
cltd
inc
push
daa
lcall
lret
push
mov
jns
jl
xor
dec
inc
lods
outsb
sbb
ret
arpl
pop
hlt
mov
xor
mov
pop
inc
dec
rcr
pop
bound
mov
push
mov
sub
adc
adc
and
mov
aad
lods
jno
and
into
inc
dec
xchg
jno
mov
adc
cmp
mov
les
ret
push
fs
lret
and
sub
xchg
fstpt
xchg
lods
cltd
pop
mov
ret
cmpsl
aam
aas
and
fcmove
aad
xchg
jns
push
data16
outsl
imul
xor
mov
xchg
push
clc
inc
bound
lock
loopne
or
push
push
xor
mov
ljmp
hlt
xchg
pop
add
into
out
fdivrs
bnd
mov
or
xorb
or
lret
add
sbb
dec
mov
dec
out
jnp
int3
dec
out
lahf
sub
sub
mov
in
sbb
mov
test
adc
push
or
arpl
cs
cmp
xchg
lret
cwtl
push
pop
dec
outsl
mov
inc
mov
les
xchg
decb
cmp
les
xlat
add
fcompl
in
and
fdivrs
popa
pop
adc
push
xchg
imulb
fimuls
int
roll
aam
lret
pop
fnstcw
mov
cli
scas
jge
mov
or
and
fs
fisubrl
xchg
iret
xchg
ret
nop
dec
adc
xchg
in
mov
mov
lahf
mov
shrb
mov
pop
inc
add
push
sub
into
mov
sbb
out
cmp
ds
jecxz
dec
add
call
cmc
dec
add
lret
sub
mov
pop
xchg
shlb
pop
and
jns
mov
add
xor
fcompl
aam
enter
lods
jge
and
addr16
jns
push
out
imul
in
dec
adc
xlat
out
in
out
mov
sub
xlat
outsb
adc
sub
loope
lahf
sub
inc
jo
sub
mov
aam
xchg
aas
fnsave
cwtl
cmp
jg
movsb
andl
jnp
or
imulb
cwtl
movsb
cmp
inc
mov
fcoml
lea
xor
jb
cmp
notl
sets
push
pop
sbb
rcrl
push
imul
pusha
dec
pop
aaa
add
andb
dec
lret
pop
data16
repz
pop
shlb
js
pop
xor
cmp
fwait
into
int3
cmp
adc
test
fmulp
push
lret
ficoml
push
mov
cmpsb
sub
imul
iret
lods
ret
adc
sub
mov
cmpsb
xor
adc
push
jmp
add
mov
jge
out
aaa
sub
rcrb
out
sbb
and
addr16
xlat
movsl
mov
pop
xchg
add
lea
add
repnz
fnstsw
pop
pop
pop
mov
or
stos
rcrl
sbb
jnp
or
add
aam
mov
loop
fst
hlt
mov
sbb
fidivrl
cmp
xchg
mov
in
stos
cmc
stos
pop
loop
lods
rcrb
add
popa
jne
sarb
mov
ljmp
insb
enter
mov
pusha
jns
adc
dec
sbb
fidivrl
fsts
dec
cmp
stos
sub
dec
mov
outsb
pusha
pop
adc
xor
xorl
lock
sub
xchg
in
shll
imul
xchg
mov
inc
out
lods
filds
xchg
daa
ljmp
lahf
push
imul
fstl
adc
sbb
leave
enter
rorl
jne
mov
mov
jg
xor
dec
clc
jno
fisttps
add
pop
into
les
cmc
push
inc
stc
lock
xchg
pop
pop
outsb
pop
xchg
int3
cmp
lret
shrb
stos
addr16
cmp
cmp
adc
xor
mov
enter
std
imul
mov
push
ss
cmp
xchg
subb
ror
mov
fistps
std
out
inc
movb
jo
cmpsb
add
mov
sbb
mov
push
int3
cltd
call
xor
inc
cwtl
rorb
fists
out
bound
pop
mov
lds
das
ficoms
xor
mov
mov
lock
pop
pusha
jmp
xchg
jne
or
pop
mov
in
mov
adc
jecxz
arpl
dec
dec
cmp
lea
xchg
xor
enter
cmpsb
ds
cltd
test
sub
sbb
xchg
jo
pop
sbb
sub
imul
inc
icebp
and
call
push
or
arpl
add
inc
pop
int
sbb
rclb
add
mov
jb
inc
cmp
push
mov
dec
and
mov
lret
icebp
dec
lret
out
mov
xchg
mov
inc
mov
push
push
mov
dec
cmp
mov
xlat
xchg
cmc
fistpl
insl
insl
filds
addl
xor
xor
rcrb
ss
loopne
push
inc
fmul
fmull
cmp
movsb
sub
loopne
repz
mov
xor
jbe
xchg
in
mov
fcmove
scas
add
inc
insl
orw
rol
sahf
xor
jge
jle
pop
addb
jb
mov
dec
ja
mov
sub
jne
xchg
mov
aaa
test
or
xchg
out
pop
inc
xchg
push
cmp
mov
out
push
jb
addb
aas
mov
sti
call
push
sub
cmc
fidivrs
repz
push
loopne
lahf
xchg
inc
filds
inc
mov
dec
mov
les
gs
lea
cld
bnd
js
inc
mov
jp
pop
push
add
shrl
stos
iret
dec
outsl
pop
add
adc
pop
mov
pop
jns
jno
sbb
insl
sub
mov
ja
xor
sub
mov
insl
xchg
or
xor
outsb
int
fcomip
in
fisubrl
inc
mov
sbb
sub
ljmp
jg
arpl
add
add
and
pop
inc
sbb
jmp
mov
xchg
cmp
push
add
loope
movsb
aaa
pop
dec
movsb
test
pop
xor
xchg
arpl
sbb
sub
es
push
lcall
dec
bound
sahf
pop
pop
popa
stos
addr16
pop
cmp
pop
pusha
lcall
cmpsl
sbb
movsb
movsl
mov
int3
xor
xchg
dec
cmp
dec
or
dec
in
xorb
xchg
dec
imul
les
pop
shlb
lods
push
aad
push
ljmp
sbb
frstor
movl
fwait
sbb
pop
pop
stos
lret
out
lret
sahf
jl
ret
cmp
mov
adc
mov
xchg
dec
push
inc
in
jb
adc
cmp
mov
cmpl
adc
push
nop
sbb
mov
xlat
repz
fstl
mov
or
jge
sar
ja
adc
inc
mov
pop
out
push
pop
or
in
inc
xlat
lock
mov
cmpsl
js
inc
cld
add
test
push
ljmp
xor
stos
pop
sub
scas
in
mov
inc
loop
push
mov
xchg
fmul
imul
jmp
lds
fidivl
adc
inc
cmp
fnstcw
jb
inc
and
add
xlat
sub
fldl
pop
andb
pop
adc
aad
mov
xor
cmp
addl
pusha
cmp
inc
js
insb
hlt
bound
push
add
cmc
cmp
testl
add
aad
jns
popf
sub
fs
movsb
in
lcall
mov
fistps
dec
mov
js
lea
mov
roll
jl
in
pop
ja
xor
mov
mov
push
add
and
xor
xchg
jmp
jno
ret
or
push
loop
or
call
test
sti
mov
icebp
movsb
sub
rorl
add
rcrl
xor
mov
cmp
jns
outsb
jp
adc
int3
xchg
mov
ret
fucompp
test
dec
daa
adc
lods
in
add
outsl
mull
cmc
jae
pop
xchg
shrb
mov
mov
push
push
adc
push
sbb
movsb
pop
aam
popf
mov
jmp
jnp
into
das
jmp
movb
fisubl
mov
xchg
sub
push
lret
mov
pop
daa
lds
add
daa
out
inc
or
adc
add
inc
cmc
push
lcall
sbb
sub
pop
cli
mov
sbbb
pop
aam
aaa
lret
fucom
ljmp
and
shlb
and
adc
mov
lock
cmpsl
loope
mov
shrl
adc
pushf
sbb
nop
add
mov
pop
dec
mov
popa
mov
mov
cmc
in
in
or
xor
push
xor
cmp
aad
std
or
test
mov
adc
adc
add
gs
pop
shr
or
mov
pushf
mov
inc
jecxz
cmp
mov
or
ljmp
push
cs
ss
fwait
lret
popf
and
fsts
and
cmp
fldenv
out
xchg
icebp
test
addr16
jae
lret
dec
sub
clc
sub
lcall
or
mov
mov
or
aaa
fldcw
js
mov
xchg
mov
orl
dec
xlat
xlat
jmp
xchg
jle
sbb
inc
jge
out
pop
clc
jae
fstps
cmp
and
pop
insl
fstpl
lcall
push
cmp
enter
ja
cmp
mov
mov
pop
xchg
xchg
jl
push
lret
jb
jb
add
sarb
jns
jnp
dec
addr16
bound
jo
dec
loopne
xchg
push
roll
add
jne
cs
sbb
xchg
es
js
stc
into
imul
outsl
in
rclb
add
test
mov
leave
mov
pop
lods
sub
mov
stos
cwtl
sbb
and
gs
lods
sbb
lea
adc
dec
les
sbb
andl
mov
jl
dec
mov
loope
pop
test
adc
test
xchg
add
enter
jb
jmp
add
mov
in
iret
sub
aad
cmpsb
aas
lods
xor
js
xabort
sbb
mov
fcmovnu
rorb
loope
mov
cltd
cmp
lea
xor
hlt
jno
out
jae
mov
xor
rorl
or
movsl
cmp
sub
rorb
hlt
dec
aad
lds
out
xchg
movsl
pushf
aaa
push
data16
inc
in
mov
test
push
stos
sbb
inc
xor
cli
dec
lahf
mov
push
sti
jg
xorl
fwait
int
jge
mov
inc
adc
inc
sub
outsl
jns
mov
sub
xlat
test
add
sbb
dec
xchg
cs
and
outsl
add
call
jmp
mov
or
pushf
mov
add
pushf
xorl
adcb
pop
lea
rcl
push
cmp
dec
insl
imul
jecxz
lods
fadd
addr16
in
jle
clc
ja
push
sub
sbb
mov
scas
jmp
xchg
jmp
stc
hlt
or
jne
test
add
ss
sub
pop
aad
sbb
xchg
out
lods
subb
push
stc
lret
or
and
test
xchg
xor
lret
push
rcr
pop
xchg
xchg
inc
out
jl
dec
addr16
jne
out
push
and
nop
mov
pushf
pop
push
sbb
mov
sub
jp
sbb
adc
pop
sbb
mov
adc
dec
cmp
add
adc
mov
leave
jl
push
lret
sub
movsl
ret
push
jns
lcall
jmp
addb
dec
das
pop
mov
lods
pop
fnsave
xchg
xchg
fwait
enter
mov
sub
adc
mov
push
pop
loope
out
push
sbb
out
cmc
inc
es
sbb
leave
pop
out
dec
std
add
loope
pushf
scas
in
sbb
or
das
ficoms
leave
mov
lret
imul
mov
jge
mov
lods
in
xchg
ja
xchg
mov
mov
pop
ficomps
repnz
or
mov
fsubr
jg
aam
ljmp
subb
push
lods
fxch
sbb
test
rclb
sub
mov
aas
ficompl
mov
dec
pushf
mov
push
and
inc
loopne
mov
pop
pop
dec
mov
movsl
sub
or
sbb
xchg
pop
xchg
adc
mov
mov
sub
push
mov
xchg
idivb
pusha
imul
movsl
out
lret
pop
inc
rcrl
pop
sub
les
fwait
mov
add
ja
in
popf
aaa
dec
inc
iret
lahf
aaa
pop
adc
push
jae
inc
adc
cmp
jb
divl
sbb
enter
xchg
jns
add
stos
adc
or
mov
xchg
pop
pop
lds
xchg
push
jns
jl
mov
call
cmpsb
xor
mov
adc
and
int
sbb
cltd
mov
fists
pop
aaa
add
pop
or
fnstcw
fldt
inc
mov
cmp
ljmp
into
cmpsl
neg
popf
shl
sbb
into
mov
test
mov
jns
popf
pop
shrb
cltd
mov
loop
outsb
repz
xchg
dec
inc
in
jmp
mov
repz
negl
test
inc
push
clc
das
insl
dec
mov
mov
in
cmpsb
lcall
cvttps2pi
sbb
push
sbb
jecxz
jo
xchg
dec
jecxz
mov
jge
or
inc
xchg
aas
jl
dec
sub
in
sub
inc
aam
lret
push
push
mov
loopne
push
inc
hlt
mov
test
aad
aam
addr16
vdivsd
in
dec
ljmp
addb
in
sbbb
insb
push
sub
mov
out
fldt
push
or
call
mov
push
aas
cmp
and
add
hlt
jnp
jecxz
push
or
mov
pop
fldl
mov
jo
cmc
sti
push
dec
and
mov
in
add
xor
push
lret
pop
out
pop
pop
aad
js
and
lds
cltd
or
lret
add
xchg
fnstcw
clc
dec
cmp
mov
add
mov
push
movsl
int3
iret
les
jo
lret
inc
lcall
xchg
mov
mov
jle
pop
xchg
xchg
in
es
repz
cmp
mov
add
add
push
mov
lcall
inc
pushf
aas
scas
dec
popf
mov
pop
lods
xchg
jns
test
sahf
cmp
nop
cmp
jp
or
dec
pop
or
push
jg
jne
popf
lahf
jne
inc
xor
popf
std
repnz
dec
clc
in
lahf
popa
jno
test
iret
sarb
sbb
out
cmp
fidivrl
jl
and
lods
out
je
mov
imul
shl
mov
jne
fldt
dec
inc
jbe
cltd
mov
dec
push
insl
std
push
cmp
sbbl
mov
imul
add
ja
pop
hlt
pmaxub
jmp
popa
or
hlt
shl
cmpsl
cmc
and
and
jne
aad
rcrb
adc
push
mov
fstps
add
push
sub
loope
ror
jge
pop
xor
cmp
inc
addr16
mov
das
jnp
dec
test
divb
cs
and
xchg
xor
or
test
pop
loopne
lret
xchg
mov
popa
jbe
cmpsl
imulb
icebp
xchg
fidivrl
hlt
sti
xchg
inc
push
sbb
rol
enter
xchg
mov
sti
fucomip
or
pop
shrb
cmp
xlat
ljmp
nop
pop
sahf
out
negb
iret
xchg
dec
mov
sbb
xchg
pushl
adc
mov
push
imul
xor
xchg
add
repz
addl
sub
jl
pop
inc
repnz
push
fcomi
enter
adc
mov
pushf
jmp
outsb
inc
push
movsb
lret
sbb
sbb
aad
in
xchg
pop
adcl
cmp
jl
bound
out
jno
jnp
aaa
jp
adc
lahf
mov
or
mov
sub
lods
lahf
inc
rclb
pusha
stc
push
add
pop
jo
popf
xor
fs
scas
or
mov
pop
adc
jg
sbb
std
mov
add
fists
xchg
inc
fcomps
push
jne
or
test
ljmp
sub
enter
call
jg
pop
pop
mov
mov
rcll
jbe
fisttpl
cmpsb
sbb
sbb
cli
pop
call
orl
imul
fs
lods
push
test
in
adc
mov
je
iret
dec
jnp
jae
push
adc
xor
jp
inc
ja
and
repnz
prefetchw
jmp
pop
lock
fdivrl
sbbb
iret
mov
or
push
insb
shl
lret
aam
pop
jp
test
xor
popf
mov
mov
imul
sbb
and
and
adc
outsl
and
insb
inc
out
in
push
sub
push
xor
rol
pop
ret
push
stos
cli
xor
shlb
xchg
mov
mov
add
adc
movsl
sub
mov
sbb
in
dec
hlt
push
add
in
mov
mov
shl
imul
les
sub
inc
jle
in
pop
cld
mov
push
push
push
in
idiv
in
rclb
lods
or
jmp
mov
xor
shll
stos
push
stos
scas
sahf
mov
push
adc
ljmp
and
jnp
lds
jl
mov
pop
and
pop
ret
and
mov
push
mov
test
adc
jb
mov
inc
popa
ret
add
mov
mov
xor
dec
aad
jns
imul
loop
mov
outsb
nop
addr16
roll
jmp
mov
inc
addl
xchg
pop
jmp
push
in
imul
pop
xchg
xchg
insl
pusha
pop
outsl
cltd
xor
cld
jno
shll
mov
jne
mov
push
repnz
sbb
psubusb
inc
or
jecxz
pop
lock
pop
push
sbb
dec
pop
jge
xchg
push
and
sbb
lock
add
scas
testl
test
sbbb
stos
repz
les
push
mov
push
mov
lret
jns
push
lods
push
mov
ret
mov
cli
jle
xchg
into
mov
sub
cld
popa
imul
jge
xchg
xlat
add
and
adc
mov
inc
ret
add
out
bound
adc
clc
xchg
out
adc
mov
mov
cmp
lods
adc
shl
pushf
fidivs
loopne
dec
push
xor
and
pop
aaa
xchg
and
sbb
lds
pop
stc
test
test
mov
and
in
jbe
xchg
in
fisubrl
dec
cmp
mov
scas
test
mov
cmp
xchg
jns
mov
test
mov
jg
inc
bound
cmp
push
xchg
dec
jne
das
stos
movsb
jno
loope
mov
jbe
ror
sbb
out
or
rolb
pop
repz
ss
jae
enter
mov
add
mov
mov
ficomps
jnp
jmp
adc
mov
or
out
call
and
adc
jnp
pop
dec
or
adc
ljmp
pop
inc
xchg
fistps
add
push
shl
ljmp
adc
rorb
addl
cmp
pop
fwait
xchg
lea
lods
jo
jmp
sarl
jo
pop
pop
xchg
cmpsb
fwait
sbb
fsubr
loopne
hlt
xlat
dec
jne
adc
orl
xchg
xchg
cmp
fcompl
je
popf
iret
out
jmp
push
xchg
aad
adc
out
sub
xchg
fisttpll
jecxz
jg
test
mulb
test
aaa
into
mov
fadds
mov
test
jne
pop
insb
shlb
mov
push
shl
lods
rorl
xchg
xor
mulb
movsl
jp
clc
sub
mov
popa
mov
mov
jecxz
push
jp
jmp
mov
jg
cmpsl
mov
jle
sbb
or
adc
push
out
mov
mov
add
testb
adc
dec
xchg
es
aam
push
dec
dec
mov
jecxz
fadds
leave
mov
into
mov
inc
jge
cld
cmpsl
dec
notb
and
and
andb
sbb
and
xchg
cmp
xchg
in
mov
adc
popa
es
ret
jne
inc
or
flds
mov
jmp
and
test
push
sar
mov
xchg
or
mov
cmp
and
push
pop
ret
and
stos
sahf
orl
mov
sarl
stc
pushf
mov
sbbl
scas
nop
lret
pop
popf
pop
andl
rcl
and
sub
and
pop
add
enter
jne
xor
xor
lea
cmc
dec
lcall
xor
add
sbb
mov
lcall
sub
sbb
imul
jmp
insb
sbb
fwait
xchg
mov
lock
into
out
fisubrs
inc
adc
repz
fstl
lock
push
push
inc
repnz
cmpsb
jnp
ret
pop
pop
add
dec
cs
mov
pop
cltd
cmp
aam
add
mov
sub
jmp
sbb
in
and
xchg
bound
mov
popl
fwait
adc
push
lcall
out
sub
in
and
cmc
loop
and
xchg
mov
dec
in
lahf
adc
adc
and
je
out
div
movsb
rcrl
add
iret
xchg
sbb
fidivrl
xor
mov
pop
jg
adcl
jecxz
and
mov
pop
add
sbb
aaa
sub
call
mov
shrb
in
push
mov
mov
sahf
loop
adc
lahf
adcl
cmp
xor
mov
push
sub
scas
sub
xlat
mov
fiadds
flds
pushw
mov
aas
dec
js
es
mov
inc
pop
je
icebp
push
or
es
dec
jecxz
ficoms
xchg
push
icebp
insl
icebp
jbe
jmp
in
jo
push
mov
and
shl
mov
roll
shll
push
push
mov
cmp
imul
cltd
push
sub
add
pop
inc
fildl
xchg
cmpsl
lahf
jnp
sbb
scas
mov
jne
repnz
scas
ficomps
sbb
and
inc
jmp
lock
push
pop
add
sub
fsubl
push
pop
mov
insb
shrb
xor
fwait
xchg
xor
cwtl
subb
hlt
int
inc
loopne
xor
cmp
imul
pop
hlt
aas
adc
test
mov
cmp
mov
aad
adc
dec
fwait
push
mov
cmp
outsl
nop
out
into
sbbl
mov
mov
addl
nop
ss
pushf
xor
mov
mov
subb
push
ljmp
add
jge
jg
rcll
inc
rcrl
leave
jg
push
fwait
xchg
add
add
xchg
xor
xchg
mov
lahf
mov
loope
push
enterw
mov
inc
enter
das
shlb
mov
add
mov
movsl
fidivl
mov
movsb
out
lods
jae
test
mull
inc
sub
and
xchg
and
mov
int
ret
cli
adc
xchg
in
imul
push
mov
dec
xor
fildll
ss
and
test
pop
fwait
push
loop
lea
mov
mov
xchg
call
xchg
and
jae
lds
xchg
dec
push
adc
xlat
pop
int
lcall
arpl
insb
jno
popf
jo
pop
lods
adc
insl
ss
jb
add
outsl
fisubrl
push
inc
ljmp
movsl
or
xchg
ficompl
insb
jl
mov
movsl
mov
mov
pop
aam
repnz
and
sbb
mov
movsb
sbbb
dec
fldl
ss
fists
and
enter
pop
add
cwtl
dec
and
fidivl
sbb
ds
ljmp
lds
neg
aas
pop
std
cmp
push
mov
xor
sbbl
in
xor
xor
inc
test
jb
bound
into
jle
push
pop
aam
xorb
sbb
inc
mov
mov
add
popa
xchg
fsts
pushf
int
dec
aad
mov
cli
add
scas
push
sub
jbe
fsubr
mov
sbb
push
roll
fcoml
jg
std
lds
sub
mov
push
cld
and
and
mov
jnp
xchg
dec
xor
mov
test
sub
jp
negb
mov
xchg
jno
cs
ret
xorb
xchg
fwait
mov
mov
xorb
push
in
fiaddl
ja
popa
pushw
leave
inc
jne
push
cmp
out
sub
push
mov
jno
gs
jmp
bound
filds
hlt
loope
and
hlt
lock
das
inc
sub
repnz
sub
mov
mov
add
stos
lret
insb
outsb
test
in
mov
mov
xchg
or
pop
lret
in
sbb
lahf
shrb
push
dec
and
push
insl
mov
fidivrl
jl
push
cwtl
mov
mov
fisttps
popa
rol
cmpsl
or
andb
cmp
fsts
sbb
lea
mov
pushf
xchg
call
mov
inc
dec
xchg
aam
adc
jnp
push
popa
in
daa
test
and
inc
and
jecxz
icebp
add
xchg
sub
imul
and
int
lods
inc
push
les
push
lea
divps
xchg
nop
mov
adc
fldcw
xorl
add
lds
adc
movsl
or
fwait
aad
out
lret
dec
xchg
call
jno
cli
push
addr16
add
pop
setns
xor
mov
testl
push
sahf
stc
shrl
inc
cmp
push
mov
hlt
adc
and
ret
or
jbe
dec
xacquire
sbb
jno
mov
loopne
adc
mov
xor
nop
cmp
mov
in
loopne
jp
or
int3
mov
insl
mov
idivb
cmp
lahf
test
cmpsl
cmp
andb
pop
adc
aad
xchg
add
mov
xchg
sub
test
sbb
adc
mov
arpl
push
pop
inc
std
jno
adc
out
out
daa
lods
jge
mov
iret
bnd
pop
mov
sbb
jne
inc
adc
xchg
add
bswap
movsl
fstpt
outsb
stos
fadds
sti
rolb
in
mov
push
add
mov
adc
and
fsubrs
cmp
jo
dec
or
mov
scas
dec
or
test
aam
out
jecxz
cmpsb
adc
sbb
sarl
push
xchg
pop
mov
insb
adc
sbb
cli
popf
cmovle
nop
jle
xchg
clc
cld
insb
or
add
popf
pushf
or
inc
mov
cli
push
int3
test
adc
sti
mov
enter
icebp
cmp
pushf
outsb
je
inc
jnp
or
inc
push
and
pop
filds
pop
inc
out
and
lea
lds
cmpsb
loop
arpl
jns
push
add
xor
int3
outsb
roll
mov
inc
popa
push
cld
sub
inc
mov
pop
movsl
test
add
int
push
and
mov
int3
stos
inc
les
imul
and
lods
pop
enter
dec
inc
xlat
aad
out
movsl
ljmp
pop
stos
daa
xchg
fistps
push
pop
mov
dec
sub
adc
fcmovb
out
dec
add
xchg
scas
pop
jle
dec
in
jecxz
jmp
adc
mov
jae
cmp
lcall
popf
push
push
dec
jo
inc
push
push
adc
test
cmpsb
xor
xor
jge
sub
ljmp
popa
loope
pop
stc
gs
stos
cmp
fmull
ja
and
sub
jbe,pt
push
std
inc
pop
cwtl
and
andl
jp
xor
insl
jo
pop
out
lahf
lods
mov
stc
int
push
shll
push
cmovle
test
mov
mov
enter
sub
jg
add
pop
es
push
mov
pop
pop
in
xor
xchg
push
push
cmc
jp
arpl
jae
sub
xchg
mov
mov
call
ds
adc
dec
xchg
fstpt
sahf
sbbl
jbe
cmp
mov
inc
xor
inc
dec
push
bound
xor
fsincos
cmp
jnp
xchg
cmp
adc
repnz
outsb
inc
stc
push
dec
sub
xor
ljmp
rorl
stos
cmp
sahf
push
xchg
or
in
outsl
out
push
addr16
pop
pop
roll
dec
dec
jge
dec
lds
push
xchg
mov
pop
sbb
inc
dec
jns
lret
xchg
das
clc
imul
xor
and
imul
add
sbb
and
test
bound
stc
mov
enter
and
inc
and
aas
aam
fcomi
push
push
fwait
mov
ljmp
xchg
mov
jge
xor
push
leave
leave
mov
mov
outsl
push
in
push
imul
sub
xchg
inc
fs
popf
mov
jmp
andb
lock
or
scas
mov
lods
scas
mov
mov
jg
push
int
xchg
sbb
or
aas
jae
aaa
repz
mov
lahf
add
cli
jge
cmp
sbb
test
scas
cld
push
mov
jns
lods
xlat
dec
je
inc
js
hlt
retw
cmp
insb
mov
add
call
fldcw
push
cwtl
dec
mov
sub
jbe
add
ret
cmp
and
fildl
sub
in
xchg
aad
insl
cmpsl
inc
fisttpl
and
std
jno
jmp
mov
hlt
repz
xchg
sarl
popf
pop
shll
stos
addl
in
hlt
dec
and
sub
out
push
lods
data16
adc
gs
leave
adc
daa
push
iret
mov
pop
jno
xlat
subl
test
add
popf
lahf
imul
xor
lahf
or
adc
in
pop
fcompp
pop
scas
jno
mov
fstl
sub
pushf
jl
orps
lods
out
ret
test
add
dec
cmpsb
dec
std
xchg
je
aaa
les
and
and
xchg
and
dec
mov
adc
or
mov
xchg
cmp
sub
gs
inc
jne
addr16
sbb
in
adc
scas
sbb
insl
jg
out
into
sub
pop
and
adc
fsubrl
out
aam
pop
cmp
mov
lock
mov
fdiv
icebp
loope
rcll
dec
adc
inc
jbe
mov
mov
ret
pop
cltd
unpcklps
and
clc
aas
jecxz
ja
xchg
jo
pop
repz
inc
arpl
jg,pt
push
fidivrl
mov
nop
push
in
jmp
mov
decb
dec
xchg
xor
sti
ljmp
push
sbb
outsb
dec
imull
jb
out
fmull
or
cld
xchg
jl
arpl
and
push
outsl
push
dec
hlt
vmread
sub
sbb
movsl
clc
std
mov
jmp
push
cli
xchg
push
insb
dec
mov
or
add
cs
cmp
xchg
rcrb
gs
jg
pop
je
push
and
or
pop
sbb
adc
scas
lea
xchg
fmull
stos
imul
mov
mov
stos
xor
and
mov
adc
std
add
call
pop
in
inc
push
push
ficoms
adc
in
cmp
mov
adc
push
mov
ror
add
dec
fisttpl
sub
jmp
mov
je
test
add
mov
lds
jns
xchg
dec
fsub
incl
int
lahf
mulb
push
pop
mov
add
add
pop
mov
fisubrs
adc
cmp
test
fmul
or
adc
xchg
add
adc
xchg
inc
enter
pop
or
cmp
fists
sbb
sbb
jmp
mov
xor
repnz
push
sbb
jle
faddl
push
cs
scas
cmp
push
subl
adc
fwait
addr16
cli
int3
or
arpl
mov
clc
xor
pop
cmpsl
pop
push
mov
cltd
pop
push
aam
mov
test
push
aaa
inc
enter
mov
or
pop
iret
imul
xlat
push
loop
xor
mov
jbe
sub
push
lods
cmpsl
subb
mov
xor
dec
mov
sti
scas
inc
mul
mov
xchg
pop
and
dec
jae
push
and
mov
jl
lock
sbb
mulb
lahf
mov
jl
aaa
xor
insl
dec
xchg
mov
or
lds
xchg
fistl
loopne
dec
insb
lods
cmp
xor
pop
sti
adc
outsb
pop
jp
jle
sti
loop
push
ss
jp
or
out
pop
fmulp
negl
push
push
adc
cmpsl
adc
subb
lods
outsl
push
imull
mov
sub
dec
fldcw
outsl
mull
sahf
sub
sbb
push
jge
nop
jp
je
lock
cmp
sub
inc
cmpsl
mov
test
jae
xchg
cmp
mov
adc
in
mov
sub
mov
in
out
mov
loope
sub
js
pop
add
push
dec
gs
xchg
push
sub
cli
rol
mov
arpl
inc
jg
out
cmpsl
aad
aam
jl
outsb
popf
xor
sbb
pop
aas
test
adc
dec
fstpl
mov
insb
jle
rclb
je
ljmp
aas
add
or
in
adcb
sub
std
dec
pop
push
fcomp
sbb
jnp
dec
cmpsb
fimuls
imul
insb
pop
xor
rorb
stc
mov
es
inc
insb
cmp
lahf
js
mov
scas
xlat
int3
inc
std
repnz
and
scas
xchg
dec
xchg
scas
or
test
cmp
or
push
dec
push
testl
cmpb
mov
nop
cld
lock
and
add
in
std
mov
sbb
fwait
sti
push
cmc
push
std
or
add
sbb
lock
jae
andb
adc
call
pusha
int3
addb
jae
xchg
xor
ss
xor
dec
lahf
jae
inc
jb
loope
and
enter
loop
into
inc
xor
lcall
adc
sar
and
adc
and
fldt
cltd
push
push
cmp
subl
pop
add
xchg
aad
or
aaa
cmp
xor
into
add
adc
cmpsl
lahf
cwtl
push
and
shlb
cmp
and
inc
pop
inc
adc
mov
pop
int3
sar
stc
divb
test
mov
or
mov
mov
daa
mulps
fsts
xchg
in
jb
jg
insb
insb
sub
sbb
xor
fneni(8087
xor
rcpps
xor
jmp
jl
shll
scas
cmpsb
push
sbb
enter
out
cmp
jns
iret
popa
lret
jo
imul
test
loop
mov
dec
aam
jle
enter
xor
in
xlat
sub
add
decb
xor
mov
add
push
popf
out
int3
jns
jge
mov
mov
mov
xchg
fcmovnu
lods
xlat
andl
mov
aam
out
adcl
dec
pop
jae
lods
or
or
fimuls
mov
inc
sbb
movntq
out
test
rclb
ret
xlat
jge
add
sahf
es
add
out
pop
xchg
icebp
push
lods
xchg
std
icebp
clc
push
add
mov
cli
xor
fidivl
jle
cmp
or
jle
cs
xchg
pop
bnd
mov
mull
inc
inc
pop
pushf
lods
jmp
and
in
movb
cli
lds
inc
mov
popl
inc
xlat
shl
cmp
jne
or
icebp
cs
frndint
xchg
mov
fdivr
xor
mov
aam
lds
push
lcall
mov
mov
aas
xchg
sarl
mov
xor
addr16
xchg
pop
jbe
and
mov
ss
mov
rep
dec
xchg
push
push
hlt
mov
daa
sbb
into
sbb
aad
jno
xor
int3
xlat
sub
mov
movsb
leave
stos
cmp
add
mov
or
and
jnp
add
mov
jge
gs
pop
cmpb
push
daa
insb
das
mov
fmul
adc
repz
loop
call
mov
mov
push
das
test
int3
pop
push
mov
add
xorb
mov
cmpsb
xor
fsubrs
sub
pop
rorl
jb
add
cld
fnstcw
jb
add
cmp
xlat
push
add
fimuls
popf
mov
fsubr
shl
call
cmp
push
cmp
int
fucomi
adc
adc
or
push
mov
xchg
cmc
mov
mov
nop
sub
lods
mov
insl
inc
xor
cld
hlt
cmpsl
add
push
sbb
mov
jnp
cmp
xchg
pop
jne
xor
cmp
push
xchg
clc
sub
popa
in
jbe
ret
out
insl
add
shrl
cwtl
xor
xor
mov
pop
mov
nop
das
pop
dec
xchg
mov
and
pop
xchg
aaa
call
mov
lds
adc
mov
bnd
je
clc
adc
insl
mov
xor
push
inc
les
mov
push
pushf
lahf
test
sub
sti
mov
mov
inc
je
jns
xor
addb
inc
cmpsl
int
mov
lea
scas
cmp
imul
ret
lods
jl
cld
xorl
subb
pop
jnp
aad
in
cmp
jg
sbb
add
cmpsb
in
push
lret
jne
cltd
repnz
stos
mul
ret
sbb
pop
fistl
test
xchg
cltd
pcmpgtb
cmp
xchg
and
cs
enter
dec
jns
in
xchg
cltd
or
xor
gs
push
scas
xor
adc
and
pop
mov
and
out
fs
les
inc
les
fcomps
aam
insb
add
test
jne
pop
movb
push
xor
or
ficoml
sub
jg
sbb
add
outsl
dec
xchg
outsb
std
sub
out
inc
mov
cld
iret
mov
out
push
xchg
mov
in
jg
lea
jns
inc
pop
add
push
std
mov
fldenv
cli
into
cli
mov
insl
testl
out
ret
inc
cmp
cli
rcr
mov
push
pop
clc
loop
xchg
data16
adc
repnz
ficomps
icebp
jb
lods
testb
outsl
insl
jmp
rorb
mov
dec
ja
pushf
mov
aad
cmpsb
cmc
sahf
rclb
fsubr
jge
mov
mov
dec
mov
subl
add
jb
dec
or
movsl
jle
cltd
call
mov
shrb
addl
cmp
mov
mov
ljmp
enter
faddl
xchg
stos
mov
and
into
xor
fcompl
cmpsb
adc
or
pop
outsb
enter
xchg
loope
cmpsl
xchg
cmp
adcb
pop
push
xorb
loop
mov
push
cli
out
jecxz
scas
in
stc
inc
rolb
test
scas
sbb
push
pop
add
mov
popa
ret
jnp
jmp
dec
push
dec
in
sbb
jbe
cmpsb
enter
xchg
cmp
add
cmp
mov
mov
push
lcall
stos
sub
pushf
adc
mov
loop
fidivrs
sbbl
loope
popa
out
dec
dec
pop
mov
mov
in
ds
pop
xchg
or
pop
sbb
mov
sbb
stc
fcomip
mov
inc
adc
jns
in
cmp
jb
push
or
rep
sahf
in
rcrb
or
movsb
mov
jmp
lea
lock
lods
mov
sbb
decl
and
fildll
and
push
dec
push
push
out
cmp
adc
mov
std
insb
mov
bound
mov
xor
dec
cld
aad
mov
out
inc
dec
sbb
mov
jle
xchg
adc
incb
and
dec
inc
iret
inc
inc
xchg
das
add
xor
mov
mov
mov
fistpll
cmpsl
imul
sti
dec
jae
jg
shll
pop
adc
mov
xchg
into
jp
lods
dec
fwait
arpl
rcll
push
push
test
jmp
gs
pop
pop
sbb
jb
idiv
js
les
xchg
pop
ja
pop
sahf
inc
sub
pop
incb
data16
push
vmwrite
jo
ss
orl
fsubrp
int
push
das
adc
sub
rcrl
scas
xor
pushf
ja
jo
inc
xor
xor
sub
jne
xchg
xchg
mov
dec
movsl
out
ljmp
rorb
hlt
repz
jne
and
jl
or
ljmp
and
fisttpll
push
jp
pusha
rcrb
dec
adc
push
dec
dec
adc
mov
sbb
cmp
dec
pushf
imul
addl
arpl
movsl
or
mov
pop
mov
and
push
aam
or
mov
mov
movsb
test
pop
mov
jecxz
mov
andl
or
in
jns
mov
add
enter
pop
js
mov
dec
xchg
add
xchg
cmpsb
into
cmp
and
inc
clc
bound
pusha
mov
sub
arpl
and
add
pop
mov
push
mov
pop
les
push
inc
test
push
out
fisubrl
xchg
stc
push
pushf
test
inc
sub
les
orb
test
xchg
cltd
ss
pop
pushl
sub
popf
jns
cld
adc
insb
js
pop
enter
ljmp
cmpb
cli
add
orb
mov
xchg
add
test
int3
bound
inc
ljmp
pop
addr16
xor
into
xlat
lock
hlt
fwait
clc
push
data16
sarl
imull
iret
push
mov
add
stos
loope
pop
incb
cmc
sbb
adc
mov
adc
inc
shll
pop
xchg
push
cmp
out
sbb
leave
pop
mov
dec
inc
rcrl
mov
jle
cs
repz
dec
cmp
add
xchg
cmp
fisttpll
adc
aad
xchg
mov
sbb
pop
add
pop
pop
and
or
jp
jge
movl
int3
xlat
push
mov
movsl
leave
fbld
repz
xchg
xlat
mov
or
add
xchg
xorb
or
mov
sub
add
fisttpl
adc
pusha
add
jge
imul
dec
pop
cmp
jnp
xor
sub
and
pop
outsl
aad
dec
add
jo
loopne
mov
pop
jle
fiadds
sub
jmp
mov
sbb
xchg
cmp
nop
mov
adc
pop
jge
inc
insb
inc
push
je
leave
sub
imul
mov
cmpsl
dec
outsl
lret
lock
jmp
mov
xor
js
mov
into
xchg
outsl
inc
xchg
dec
or
enter
push
pop
xor
dec
push
insb
mov
les
mov
mov
cmpb
fsubrs
sahf
dec
mov
adc
ljmp
lods
xor
dec
in
xor
xchg
adc
pop
inc
push
aaa
sbb
push
test
cld
repz
inc
and
scas
mov
cmp
aaa
xchg
rcrl
mov
pop
push
xchg
cli
scas
cltd
cld
push
adc
mov
mov
fldenv
adc
call
mov
fisttpll
cmovno
mov
ss
sti
cs
mov
lods
setb
daa
pop
cwtl
pop
dec
or
pushf
pop
imull
dec
cmpl
and
cmp
mov
fwait
cwtl
mov
leave
leave
xor
cmp
xlat
scas
cmp
push
mov
inc
fnstenv
test
push
movsb
loopne
adc
sbb
xor
jo
sarl
sbb
bound
push
dec
cmpsb
ret
ss
push
stc
and
mov
cmpsb
fdivrs
push
and
xchg
push
fcmovne
cmp
fs
or
or
sarb
inc
into
xchg
mov
xor
and
jecxz
sbb
or
or
push
popf
out
fcmovbe
stc
mov
xchg
rolb
pusha
lds
mov
jg
xchg
lds
jbe
adcl
jecxz
mov
cmpsl
mov
xchg
int
loop
pusha
pop
push
and
jl
dec
adc
and
cmc
xchg
je
push
adc
cmp
sti
pop
push
idivl
mov
pop
dec
cmp
push
je
into
int3
jb
int
cmpsl
mov
mov
sub
fnsetpm(287
push
scas
xlat
aas
inc
jecxz
hlt
dec
addb
aas
cmp
out
subb
cli
stc
inc
jp
push
or
hlt
fcmovbe
push
inc
call
mov
dec
inc
jl
imul
in
fabs
mov
pop
outsl
aad
shll
rclb
aaa
lret
cmp
lods
add
xchg
mov
pop
imulb
mov
adc
sbb
xor
daa
mov
inc
iret
inc
into
sbb
dec
cmc
pop
leave
daa
inc
inc
les
mov
enter
cli
mov
stos
mov
hlt
adcb
push
imul
jg
call
call
push
or
aad
enter
mov
scas
or
mov
scas
fiaddl
and
in
push
xchg
jns
and
xor
push
adc
sti
mov
daa
sub
fstps
cltd
cld
and
fs
adc
jg
outsl
pop
cmp
insb
mov
in
mov
sbb
aas
adc
fldt
fwait
addr16
shl
repz
out
dec
sub
pop
and
scas
in
out
std
sar
loopne
andl
in
call
mov
mov
mov
lods
cltd
adc
push
xchg
pushf
popa
adc
adc
sbb
ret
sub
cltd
stos
cmp
mov
leave
shll
mov
ja
repz
sbb
js
push
add
repz
orl
js
and
xor
notb
gs
popf
ja
inc
xchg
jae
insb
adc
stc
add
adc
pop
daa
xor
bound
jmp
out
rcr
add
dec
and
dec
sbb
movsb
inc
test
js
mov
outsb
into
loopne
sub
outsl
push
inc
or
inc
data16
or
fnclex
clc
sti
inc
cld
rcr
test
push
pop
lods
sbb
stos
jbe
fwait
xchg
mov
shll
xchg
jg
dec
mov
outsl
xor
pop
lods
push
cwtl
lret
fcmove
mov
sarb
test
mov
sub
std
sub
sbb
lcall
ljmp
cmp
jecxz
es
adc
inc
ljmp
adc
aad
test
imul
cli
pop
jp
addr16
xchg
ds
or
mov
roll
aam
adc
das
fwait
mov
sub
mov
push
mov
je
mov
push
mov
int
rorl
leave
sbb
push
inc
scas
pop
lret
xchg
lods
sbb
sbb
inc
xchg
and
cmc
repz
dec
in
test
and
dec
jns
aam
lods
cli
xor
bound
test
in
inc
iret
das
xchg
mov
iret
add
int3
sub
add
cmc
out
cmp
shrb
cld
sqrtps
mov
sub
call
mov
xchg
add
rorb
std
xchg
pusha
push
les
lcall
andb
or
push
dec
dec
push
gs
jle
push
fsubs
jnp
pushf
lds
in
mov
cwtl
and
lcall
shll
push
lds
loope
mov
sbb
dec
jne
rcrb
orl
mov
jae
lea
std
dec
es
and
lahf
dec
aad
mov
push
popa
test
dec
aaa
adc
sbb
mov
pop
or
mov
test
lret
jns
sub
ss
push
ret
mov
lahf
xorl
or
cmp
fcoms
sbb
add
cmp
cmp
cmp
sub
imul
arpl
mov
ja
orl
sti
inc
add
inc
add
int3
in
sub
push
sbb
js
out
inc
pop
cs
imul
cmp
or
inc
mov
and
subb
xor
inc
jmp
dec
ret
inc
lods
stos
stos
inc
pop
mov
lret
xchg
fcoms
mov
movsl
dec
dec
push
test
or
or
dec
push
adc
cmpl
dec
xlat
orb
push
ret
mov
jp
or
fcom
fcomp
lahf
xchg
push
data16
mov
lret
add
adc
stos
dec
pop
or
add
into
adc
out
test
in
imul
fidivl
lock
out
les
sbb
cmp
mov
sbb
mov
dec
jae
sbb
mov
mov
mov
push
xchg
jbe
fiaddl
xlat
push
pop
jp
xor
int3
xor
and
lahf
les
fsubrs
test
mov
call
jmp
cmp
xchg
cmp
sbb
fnstsw
in
ret
lods
add
adc
xor
aas
adc
fisubrl
cmpsl
push
std
leave
int3
imul
outsl
js
pop
xchg
xor
out
rcrl
mov
xor
mov
fs
add
and
sub
dec
adc
pop
repnz
sbb
lahf
mov
sbb
jbe
fs
push
jge
ja
jb
xchg
inc
adc
dec
pushf
push
cmc
pop
inc
mov
adc
pinsrw
jmp
add
call
jno
mov
sbb
nop
jns
xchg
pop
or
inc
add
mov
stos
pop
or
jb
stc
insl
xchg
ret
inc
fisubrs
pop
and
lock
push
mov
sub
inc
aaa
popf
shrb
ficompl
pop
jo
sub
popa
lret
dec
rcrl
sub
call
mov
push
xchg
mov
mov
mov
xor
and
cltd
inc
out
jp
gs
out
out
mov
or
in
and
push
pop
loope
notl
in
adc
js
aam
or
movsb
add
and
int
into
lds
les
in
sub
ror
repnz
in
fstp
ror
sbbl
call
ljmp
inc
inc
mov
xchg
fisttpl
cmp
pop
andl
jmp
push
ret
in
inc
movsb
mov
not
or
inc
add
pushf
out
loope
fxch
lret
jmp
pop
cld
inc
bound
or
je
or
ret
or
push
xor
inc
and
pop
sub
mov
inc
lea
adc
mov
in
movsb
mov
das
pop
es
scas
jns
sti
stos
push
inc
xchg
stc
ja
mov
inc
adc
xchg
cmp
testb
cli
fmull
imul
jp
not
push
push
cmp
cltd
inc
pop
dec
and
jnp
sbb
out
adc
mov
int3
xor
daa
fbstp
pop
sbb
iret
out
cmpsb
adc
icebp
pop
xchg
jo
xor
cmova
cmc
sar
cmp
hlt
dec
sbb
inc
mov
ja
lcall
mov
sub
xchg
jl
pop
sti
cmpsl
jnp
jecxz
gs
sbb
add
out
mov
pusha
out
dec
jle
jmp
mov
push
out
push
ljmp
or
push
pop
repz
xchg
mov
rorb
sub
adc
mov
mov
and
pop
and
push
faddl
mov
shl
lret
jle
fisubrs
outsl
jp
js
movsb
xchg
xchg
adc
nop
jo
or
cltd
stos
inc
rclb
ljmp
pop
dec
pushf
call
dec
jmp
std
and
sarl
call
stc
pusha
mov
mov
mov
inc
sbb
sti
jns
xchg
test
std
cmc
and
popf
xor
lret
and
mov
shlb
mov
rorl
cmp
hlt
outsb
in
aam
outsb
mov
pop
int
pop
mov
mov
out
rcll
movsb
scas
adc
mov
loopne
or
lock
adc
cmp
movsl
sbb
mov
orl
push
jg
aam
mov
mov
xchg
mov
mov
push
cmp
lcall
mov
jle
dec
mov
mov
mov
repnz
or
das
into
sbb
and
cmpsb
lods
dec
in
sti
test
lock
sbb
push
and
pop
fisttps
xor
mov
mov
daa
xchg
mov
pop
testb
lret
xchg
pusha
and
add
cmp
notb
dec
stos
sbb
jbe
mov
repnz
fiadds
movsl
inc
in
fistpl
stc
mov
pop
movsl
mov
push
test
xchg
pop
rolb
nop
pop
arpl
inc
into
mov
sbb
cmp
rorl
mov
mov
pop
mov
mov
inc
jp
in
std
mov
xchg
fnsave
push
sub
out
lds
pop
cmp
mov
or
mov
filds
pop
cmp
gs
adc
sbb
add
or
adc
mov
aas
jmp
inc
hlt
outsl
mov
jb
insb
add
cmp
mov
sub
cmp
mov
arpl
in
das
xor
push
mov
and
pusha
mov
int3
ja
push
test
mov
jae
je
fs
xor
mov
xor
daa
mov
push
adc
in
cmp
fistpll
xor
test
aas
aad
jns
and
dec
mov
daa
cltd
aad
jle
js
mov
bound
aad
or
mov
rcr
jmp
fcomps
sub
loopne
jle
add
iret
leave
mov
jmp
lahf
pop
jb
sbbl
bound
xor
divl
cs
cmpsl
or
fwait
mov
xchg
push
daa
cmp
insb
push
xchg
sbb
mov
ljmp
jg
mov
fwait
aam
addr16
push
ficoml
loopne
xor
mov
lret
and
outsb
or
dec
out
sti
mov
dec
add
lret
sti
push
jecxz
inc
fidivl
or
jle
jno
sbb
ret
into
xor
lea
sub
adc
mov
cmpsb
pusha
or
shlb
cmp
push
inc
popa
shll
lea
push
jmp
in
arpl
sbb
js
sub
roll
inc
daa
and
sarl
add
push
sub
fwait
sti
mov
xor
xor
addr16
loopne
and
jo
push
sahf
mov
orl
mov
hlt
loope
das
sub
ficomps
inc
lods
pop
sbb
fs
dec
cmpsl
test
test
js
aad
xchg
imul
pusha
int
inc
enter
or
fs
mov
xor
xchg
xchg
sub
or
or
push
jns
adc
xor
sub
sub
sahf
ror
scas
jno
sub
nop
les
xor
lcall
mov
xor
out
mov
popf
push
jbe
fcoms
es
int3
pop
mov
inc
lahf
or
int3
lret
sub
jns
mov
ss
adc
iret
sbb
jge
scas
sar
mov
hlt
test
mov
add
enter
add
mov
clc
push
js
xchg
ret
jae
fisubs
add
add
push
push
add
mov
cmc
bound
fs
nop
cmp
push
xchg
adc
lret
in
jne
adc
cwtl
mov
lret
pop
mov
sub
pushf
and
out
cmpsb
mov
outsl
add
mov
fcompl
cmp
adc
mov
or
rorl
xchg
int
and
and
pop
fpatan
sahf
fdivrs
jbe
in
push
add
mov
jmp
push
mov
push
or
int
nop
test
or
adc
add
cld
popa
adc
mov
mov
pop
in
dec
dec
push
sbb
ja
mov
js
loopne
subb
cmc
add
jo
scas
cmp
mov
rol
mov
sbb
lds
dec
or
jnp
mov
arpl
mov
sub
and
fcmovnbe
mov
repnz
dec
mov
mov
mov
or
fucomi
shl
cmp
inc
add
mov
inc
cwtl
and
sub
fs
mov
dec
lahf
pushf
lcall
dec
jmp
fs
iret
jo
sbb
jl
fldt
mov
in
cmp
andl
stos
mov
aam
push
mov
aad
test
adc
push
mov
and
andb
aaa
push
dec
es
push
retw
shll
lods
rcll
fwait
inc
imul
lods
dec
or
xor
dec
jb
xor
dec
mov
rorb
xorb
sahf
push
lahf
jae
enter
xor
mov
jno
mov
enter
jns
sarb
ficoms
push
out
mov
mov
aaa
adc
jmp
sarb
pop
cli
dec
movsb
sahf
scas
es
fadds
ret
push
mov
ror
enter
adcb
jmp
push
dec
push
lahf
adc
out
mov
dec
cli
ljmp
xchg
push
jb
insl
jmp
inc
mov
or
loope
scas
push
jnp
push
or
sbb
inc
sub
inc
sti
adc
fldl
ud1
push
sbb
jns
xor
xchg
pop
jl
adc
stos
rep
negb
stos
in
cs
add
sarl
dec
push
jg
rcrb
lret
scas
cmpl
jg
test
bound
insl
mov
pop
iret
xor
ffree
or
scas
pop
gs
dec
int
popa
pop
test
nop
push
mov
aaa
scas
lcall
jecxz
pushf
sbb
cmp
popa
stos
pop
arpl
xchg
sub
std
das
jmp
pop
rcl
ss
add
lea
fucomip
xor
jmp
outsb
jmp
and
jmp
jne
mov
lock
pop
les
xchg
xchg
imul
xchg
sti
mov
ljmp
divl
lods
enter
sbb
mov
test
rorb
jmp
sbb
adc
in
jb
cmp
dec
lcall
sub
sub
enter
jno
cmp
ljmp
xchg
adc
js
sbb
mov
loope
data16
rorb
cmpsl
add
addr16
sub
xor
pop
push
test
sub
jo
xor
mov
into
or
arpl
add
je
add
lea
inc
in
leave
cmp
sti
int
adc
movsl
and
pop
sub
dec
dec
jl
imul
xchg
das
cmp
dec
pop
aas
movsl
dec
xor
push
push
movsb
dec
or
jmp
test
sbb
das
jb
push
addr16
add
pop
fldt
pop
xchg
dec
sub
in
mov
adc
mov
pusha
pop
mov
xchg
stc
sub
sub
insb
aam
std
dec
jae
mov
imull
popa
xchg
div
inc
and
sahf
cld
jge
xchg
jl
int3
jecxz
mov
mov
mov
sbb
mov
pop
cwtl
inc
inc
dec
data16
pop
push
inc
push
add
std
inc
cmp
fimuls
jnp
jecxz
xchg
rcll
push
add
pop
scas
stos
movsl
scas
sbb
std
dec
adc
clc
popf
dec
sub
outsb
insb
push
pop
or
movsl
mov
movsl
in
ss
mov
outsl
hlt
xchg
dec
stos
pop
icebp
and
std
inc
out
stos
jo
mov
scas
xor
cmpsb
subb
xchg
lods
rol
or
mov
ljmp
and
sbb
sbb
imul
jne
ret
mov
push
xchg
out
addl
jno
popa
dec
xchg
add
pop
std
push
rorb
dec
nop
pop
xchg
shll
xchg
inc
loop
shl
inc
scas
mov
xchg
adc
xchg
mov
aam
sbb
inc
cmpsl
mov
push
inc
cmp
adc
das
cmpl
pop
lret
adc
mov
mov
inc
sub
inc
xor
lods
lock
addr16
fwait
aaa
adc
push
loopne
loope
cmp
data16
fiadds
pop
std
flds
adc
ja
and
add
mov
or
mov
cmp
sbb
aaa
popa
jl
sub
aam
insb
aad
outsb
faddl
sbb
dec
lds
testl
cmp
mov
xchg
roll
les
xor
lods
dec
ja
inc
addl
mov
insl
aad
scas
add
xchg
in
insb
mov
adc
lods
neg
fldl2e
arpl
ficompl
add
sub
fdivrl
mov
bound
movsl
test
lea
xlat
or
fcoml
daa
xchg
mov
mov
mov
cmpsb
in
int
stc
pushl
clc
movsl
mov
push
mov
jo
push
add
mov
lret
push
mov
into
or
sahf
popf
shr
clc
or
mov
out
push
nop
in
add
es
mov
xchg
add
or
in
dec
out
inc
or
or
popa
fwait
adc
pop
mov
sbb
hlt
insb
gs
sbb
sub
aaa
push
sub
stos
je
jno
cmp
mov
out
inc
pop
sbb
and
js
inc
adc
xchg
in
adc
outsb
imul
test
insl
inc
jnp
in
stc
movsb
fistps
push
sbbl
repnz
mov
jmp
cltd
pop
rep
pusha
das
push
mov
hlt
enter
aad
dec
jp
xchg
lret
lea
push
xor
cwtl
push
dec
cmp
pop
mov
adc
mov
fwait
aas
sti
pop
push
stc
jno
adc
sar
push
jae
outsb
pop
or
sahf
stos
sub
inc
das
push
fsubrl
mov
jne
pusha
jo
ds
std
loope
je
adcl
mov
xchg
out
sub
ljmp
nop
ret
mov
fistl
xchg
std
nop
inc
pop
jbe
and
pop
sbb
test
jge
pop
dec
out
ss
leave
sbb
mov
inc
cld
pusha
mov
shll
xchg
fsubs
cli
sub
jge
jns
aad
and
push
int
roll
imul
dec
dec
jge
pop
inc
dec
sub
repz
cmp
pop
push
popf
pop
gs
sbb
push
pop
xor
xor
ljmp
xor
adc
push
test
inc
mov
es
lods
xchg
lahf
mov
pop
cli
orl
mov
out
pop
cmp
out
inc
jecxz
add
mov
push
jl
jmp
test
sbb
pop
dec
pop
out
push
sub
fucomi
pop
xchg
nop
cmpsl
rorl
enter
out
jl
inc
jg
cmp
adc
sub
stc
insb
adc
mov
fwait
jo
cs
xchg
lea
pushf
pop
jmp
ret
push
faddl
movsl
cmc
sub
mov
dec
or
mov
pusha
dec
or
inc
inc
popf
nop
scas
ljmp
sbb
xor
je
fmulp
pushf
push
fisubl
or
jbe
pop
mov
aaa
inc
stos
pop
aam
inc
jne
inc
sbb
dec
and
mov
cld
loope
fcomps
icebp
fisttpll
sbb
scas
sbb
pop
cmp
stc
std
adc
into
jbe
or
or
pop
popa
inc
aaa
cli
push
aam
andb
or
mov
push
add
addr16
shr
dec
outsb
add
xchg
mov
scas
mov
out
das
xchg
xchg
jg
sub
stc
fmulp
inc
xchg
aas
lods
fildl
jg
cmp
push
push
push
call
ret
sub
and
popf
rcll
insl
pop
inc
push
inc
lret
inc
xor
mov
aaa
lea
fbld
mov
jne
xor
es
fdivl
lea
loopne
stc
insb
imul
fs
out
imull
add
gs
mov
cmc
das
and
into
jle
xor
filds
cmpsl
push
js
ret
and
mov
lock
in
pop
cmp
rcrb
mov
dec
or
lcall
push
sti
and
out
or
fisubl
mov
pop
inc
jl
rorb
lea
pop
dec
and
fwait
jb
xor
cmpsl
jns
shl
add
jb
xor
in
mov
jecxz
jle
orb
scas
dec
sahf
push
mov
xchg
loopne
mov
rorl
cmp
dec
push
add
pusha
dec
mov
xchg
xor
dec
aam
xchg
and
mov
mov
mov
push
xchg
test
out
outsl
or
fwait
inc
or
cmp
mov
mov
into
in
fwait
xor
hlt
lahf
add
push
out
repnz
loop
jae
xor
mov
out
sahf
inc
stos
adc
shufps
cli
pop
repnz
stc
add
fiaddl
inc
adc
andl
mov
shlb
xchg
test
imul
outsl
movsl
xchg
or
outsb
imul
cmp
out
sbb
sahf
push
xlat
cmc
mov
imul
inc
into
rolb
bound
or
cmp
fwait
pop
mov
push
pop
push
loop
cs
dec
jl
fcomps
pop
and
icebp
imul
push
idivb
std
cmp
in
loop
clc
in
or
movsb
out
sub
bound
xor
lahf
pushf
ss
mov
add
mov
mov
gs
cmpsl
sarl
popa
fwait
add
divl
enter
std
dec
testl
imul
xchg
test
push
push
or
sub
adc
filds
ljmp
loop
enter
fistpll
mov
data16
out
xor
clc
inc
push
arpl
xchg
stos
cmp
mov
inc
mov
mov
repz
daa
scas
mov
push
imul
insl
std
sub
mov
ds
fwait
ret
add
mov
and
std
outsb
sahf
push
xor
cmp
push
xor
ja
cmpsl
and
xchg
jl
cmp
andb
mov
push
shll
lock
dec
addr16
lcall
mov
fdiv
cwtl
adc
add
push
mov
jns
xor
push
lret
rorl
test
cli
cmp
mov
nop
pushf
sbb
lcall
ficoml
mov
dec
mov
ss
push
fiadds
cmpsb
ljmp
add
lods
jg
movsl
xchg
stc
push
call
enter
cmc
jnp
out
test
adc
jg
xor
xchg
lret
mov
xchg
add
push
dec
imul
jns
pop
pop
into
pop
pusha
push
das
mov
mov
or
test
subb
add
dec
jg
mov
xchg
movsl
in
sbbl
mov
add
and
jmp
sub
sub
add
jbe,pt
mov
fdivl
or
cli
loopne
dec
nop
out
xchg
cmp
cmpl
jmp
mov
sub
sbb
std
call
lods
xor
pop
mov
sbb
add
out
ss
dec
push
add
cmp
ds
push
repnz
sahf
lods
pop
dec
sbb
ja
or
pop
dec
xor
dec
fbstp
pushl
sub
pop
push
leave
pop
sbb
ud2
outsl
scas
mov
lods
push
out
cmp
mov
test
mov
movsb
push
popa
lea
and
jle
aad
xchg
fistps
mov
push
daa
dec
dec
test
stos
outsb
jge
lock
add
xchg
and
push
jecxz
inc
loopne
mov
and
mov
psubsw
lock
cltd
incl
sbb
inc
popa
ror
mov
addl
shlb
nop
fsubs
leave
rcll
mov
scas
pop
pop
and
mov
inc
test
popf
out
inc
dec
icebp
cli
adc
inc
jnp
loope
fildll
insb
jmp
pop
movsb
loop
lahf
cmp
in
stos
outsl
enter
add
jno
inc
cmpsb
xchg
adc
pop
pop
pop
int3
pop
lods
daa
fcmovu
rcrb
shrl
inc
stc
and
mov
loop
fidivs
pop
cmp
dec
stos
adc
cmpsb
and
imul
nop
loopne
mov
xchg
hlt
int3
cmpsl
dec
test
push
mov
mov
enter
cld
push
imul
js
aas
sbb
jns
flds
sub
mov
mov
push
idivl
ljmp
jle
cwtl
sub
pop
push
adc
lret
orl
insb
mov
cmp
xchg
mov
jno
cs
dec
push
xchg
jb
adc
mov
cltd
mov
jbe
cwtl
ds
stc
add
sarl
cld
add
lock
pop
aad
mov
sti
sbb
orl
or
xor
mov
lods
mov
pop
sub
rclb
xchg
cmc
or
test
lar
mov
popa
out
inc
push
movsl
sbb
mov
and
mov
inc
ss
add
mov
bound
push
inc
out
adc
into
or
xor
pop
jbe
jg
adc
popa
ljmp
aam
push
pop
out
push
pop
add
out
dec
ss
out
mov
sbb
arpl
pop
sbb
pop
in
popl
sub
stos
inc
push
mov
stos
fdivr
mov
ss
sub
push
aas
aas
and
mov
shlb
inc
jl
xchg
fsts
sub
dec
push
int3
rolb
repnz
fisubrs
xchg
mov
jecxz
pop
icebp
sub
xchg
push
push
rclb
mov
shll
pop
add
pop
jecxz
lock
mov
inc
sub
shrl
adcl
dec
mov
sub
push
cwtl
fcoml
mov
xchg
in
in
and
rcrb
dec
scas
push
jnp
mov
imul
mov
inc
ds
sub
shr
lods
sbb
mov
je
bnd
sbb
cmp
jne
mov
mov
cmp
bound
adc
mov
test
and
popf
hlt
jnp
jge
dec
xlat
sbb
xchg
repz
adc
xor
js
sub
jmp
out
or
dec
ja
lods
and
dec
clc
xor
mov
and
iret
sub
aam
jbe
and
lds
cmp
dec
ja
mov
inc
sbb
jmp
popl
or
loope
loop
xor
dec
push
in
push
jmp
mov
arpl
sbb
mov
mov
xor
in
and
cltd
xchg
hlt
mov
imul
lds
add
popa
stos
mov
jge
insb
fs
imul
jno
in
lcall
mov
shll
xchg
mov
scas
cmp
xor
sbb
testb
clc
adc
movsl
dec
sbb
movsb
mov
mov
push
xor
imul
jbe
and
clc
pop
sub
dec
and
cmp
in
and
test
mov
xchg
repnz
test
xchg
push
sub
fisttpl
jle
lods
js
mov
mov
ja
sti
outsb
inc
andps
cmp
pushf
int3
insl
divb
xchg
or
lods
ljmp
mov
pop
inc
inc
loopne
inc
inc
add
inc
adc
movsb
add
ljmp
mov
nop
jl
xor
pop
add
pop
leave
inc
push
shr
lods
xchg
div
sub
dec
sbb
test
into
rolb
pop
xor
add
sbb
pop
fidivl
cmp
cli
dec
sub
lcall
push
addr16
mov
adc
les
push
sub
nop
stos
mov
fucomi
adc
jmp
filds
pop
mov
fsubrl
push
lahf
sbb
popa
jb
insl
sbb
adc
decl
or
lock
push
add
fpatan
sbb
jp
cmp
and
add
loopne
xor
xlat
in
mov
mov
mov
add
add
cmp
jmp
dec
sbb
jno
test
inc
repnz
add
mull
ljmp
cmp
pop
push
or
jecxz
dec
mov
add
in
push
clc
repz
cmp
jno
cmp
arpl
add
sub
pop
inc
fsubl
insl
push
mov
rcrl
into
shll
loopne
jo
cmpsl
add
dec
cltd
or
lcall
hlt
lret
mov
add
sub
insb
xchg
push
jo
stc
das
and
mov
stos
lret
pop
cmp
cltd
mov
push
xor
sub
lods
push
inc
data16
xchg
mov
popf
mov
jl
iret
inc
aad
ds
aaa
push
push
jmp
lcall
sbb
add
mov
mov
inc
nop
xchg
addb
in
and
inc
dec
push
pop
testb
and
inc
and
xor
aad
lock
cltd
pop
dec
lahf
mov
sbb
cmp
sti
test
outsb
dec
lods
pop
ds
adc
mov
enter
or
xchg
mov
cmp
push
cmc
mov
mov
push
je
sbb
mov
test
pop
pushf
sbb
rcr
add
push
cs
jbe
push
mov
lahf
outsb
test
mov
ret
push
and
popf
jmp
loope
ja
or
xchg
pushf
daa
test
sub
jne
xchg
push
scas
sub
cmp
dec
popf
pop
mov
int
pop
fiaddl
shll
pop
jnp
js
sarl
xchg
jo
xor
mov
cmp
mov
jecxz
add
push
sub
int3
ds
add
shrl
fwait
call
jb
pop
push
add
iret
test
mov
xor
jp
insb
jmp
add
fsubrl
fs
movsb
dec
ret
cmp
ja
cmp
movl
sbb
add
ret
mov
out
adc
fsubs
sub
fisttpll
push
stos
mov
mov
xchg
or
inc
push
mov
inc
psubsb
ret
andl
sahf
insb
xchg
fisubl
sbb
loop
fisubl
idiv
sub
xchg
pop
xchg
rol
lret
cltd
sbb
dec
loopne
cli
daa
outsb
in
repz
nop
sbb
stc
dec
arpl
data16
out
sbb
adc
les
add
pop
xchg
out
dec
and
adc
xor
divl
sub
sti
adc
repz
jp
movsb
mov
dec
lret
test
jae
mov
inc
ja
out
xor
jecxz
bound
xchg
imul
in
pop
int
mov
jge
lds
rcrb
nop
pop
xchg
mov
aas
fldl
cmp
cmp
push
push
lea
rclb
icebp
and
and
data16
out
jae
in
mov
jns
cli
icebp
aaa
aas
push
ljmp
std
and
out
inc
cmp
in
icebp
jmp
lods
adc
lock
xor
int3
cmp
pop
xor
xor
in
sub
xor
xor
inc
inc
lods
dec
cmp
jns
mov
test
push
sahf
sbb
or
and
std
xor
jmp
sbb
xor
std
inc
gs
clc
cmp
dec
and
add
in
cmc
adc
pushf
mov
push
sbb
movsb
or
push
popf
jecxz
ror
in
mov
jp
mov
aam
inc
leave
dec
pop
sbb
out
inc
hlt
push
mov
pop
jl
adc
jle
pop
and
gs
pop
lahf
call
int
fucomi
jae
sub
xchg
add
es
arpl
adc
mov
xor
push
movsl
sbb
pminsw
insl
xlat
mov
pop
adc
or
pop
fwait
push
mov
js
adc
add
and
test
push
test
mov
xchg
mov
test
rcrl
or
jbe
inc
xchg
iret
xor
fisttps
dec
adc
or
addl
je
cmp
mov
int3
sub
imul
adc
sub
aas
es
negb
mov
cmpsl
fisttpl
pop
daa
or
sub
enter
lock
cmp
xorl
aas
sub
mov
dec
adc
push
js
xlat
movsl
test
push
xchg
movsb
cmp
imull
stos
jl
push
pushf
imul
mov
pop
dec
adc
inc
and
dec
std
sbb
loope
xchg
xchg
aas
and
sbb
dec
sub
aam
rorb
mov
add
push
add
jge
xor
sbb
pop
jno
lret
adc
fmull
test
adc
lret
sbb
popa
es
sub
mov
scas
lods
out
cmp
mov
push
or
push
out
hlt
stos
push
inc
push
jmp
jne
dec
inc
sbb
test
mov
rcrl
or
leave
sbbl
mov
jg
push
int
fwait
mov
mov
jecxz
insb
or
xchg
popf
add
sub
aaa
loope
sub
fwait
cltd
xor
popa
mov
jmp
int3
add
cld
push
movsb
hlt
inc
push
mov
cs
jle
test
mov
xor
mov
sub
or
fsubrs
outsb
sti
xchg
jp
mov
out
cld
mov
sub
xor
and
mov
push
sub
int
push
inc
or
cmpsl
mov
outsl
int
stos
aad
add
call
fisttps
mov
jae
cmp
pop
dec
push
or
pop
xchg
outsl
in
mov
in
jge
cmp
hlt
cs
mov
inc
xor
test
mov
test
add
aam
push
push
mov
out
test
and
mov
popf
icebp
cmp
jl
mov
arpl
mov
dec
bound
test
jmp
push
vorpd
sti
fdivs
mov
pop
out
test
xor
add
cmpsb
add
mov
push
mov
mov
dec
cmp
or
sbb
gs
int
and
lock
pop
out
aas
dec
fwait
xchg
mov
pop
adc
mov
push
imul
push
mov
iret
fcomps
rcrb
and
inc
pop
iret
wrmsr
insb
test
cmp
aaa
out
inc
adc
xchg
mov
adc
lcall
cmpsl
mov
push
or
jmp
scas
cmpsl
dec
aad
jecxz
dec
inc
outsl
nop
push
ljmp
mov
mov
pop
mov
mov
cwtl
lds
stc
pop
movsl
call
xchg
sub
cmp
test
notl
sub
and
out
inc
repnz
xchg
mov
lahf
aaa
xor
pushf
jmp
adc
or
insb
lea
add
stc
aad
jl
xor
mull
jno
mov
repnz
lods
pop
sti
xchg
data16
push
and
hlt
leave
pop
cltd
xor
mov
out
adc
pop
or
push
stc
add
xchg
push
aas
pop
es
mov
out
cwtl
mov
pop
std
paddusb
xor
and
idivb
ss
and
pop
xchg
push
js
neg
mov
arpl
decl
mov
mov
loopne
push
mov
test
and
out
pop
adc
xchg
jne
push
add
push
and
test
addr16
mov
jecxz
push
pop
mov
sub
or
rcll
mov
mov
hlt
push
dec
jns
inc
cmp
fidivrs
pusha
inc
sub
jo
or
jno
les
xchg
push
sarb
pop
push
mov
enter
and
popa
mov
lods
scas
out
stos
nop
in
xor
test
sub
and
popa
cmp
cmp
in
sbb
add
daa
test
sub
mov
xchg
or
push
ss
loop
jns
or
dec
bound
loopne
and
addr16
mov
cs
mov
scas
lret
push
dec
nop
lds
mov
mov
mov
les
jno
sbb
sbb
mov
scas
lock
les
jl
xchg
add
sti
pop
call
arpl
cmp
add
arpl
repnz
test
lahf
rorb
das
nop
xchg
scas
js
sbb
mov
dec
mov
scas
lcall
lods
push
add
sub
push
aad
xchg
xchg
fildll
popf
push
lret
and
add
icebp
loope
mov
in
je
or
test
jno
lods
es
dec
loop
mov
dec
fimuls
sub
push
jmp
push
addr16
sub
mov
push
mov
inc
mov
or
cmp
push
scas
xor
xchg
aam
aad
inc
gs
jmp
inc
cmp
lahf
dec
fimuls
mov
popf
stc
int3
mov
repz
xchg
jbe
rcr
or
mov
sarl
pop
int
xchg
mov
mov
mov
repnz
pop
jo
sub
shll
imull
jnp
push
cltd
jge
or
leave
daa
sub
ds
add
push
push
push
xor
mov
adc
mov
addr16
pop
xchg
int3
sbb
fnstsw
push
movsb
cmp
fcomip
movsb
pushf
adc
xor
cwtl
mov
int3
jns
mov
ror
adc
pop
popa
sbb
outsb
iret
sub
sbbb
loop
jl
scas
sbb
add
les
lret
pop
cmpsl
or
jbe
push
mov
mov
cmpsl
scas
sub
xchg
test
pop
pop
insl
push
mov
cmpsl
clc
popf
outsb
call
fsubl
dec
push
loop
push
pop
jecxz
repz
test
in
xchg
repz
jbe
iret
push
mov
cmpsb
or
jo
ljmp
xchg
ljmp
testl
hlt
sbb
push
or
iret
jl
mov
inc
push
jge
mov
aad
jl
jle
out
xchg
add
fs
fcomps
push
out
jnp
testb
rcll
testb
inc
lcall
ljmp
lds
dec
cwtl
out
jl
add
pushf
jmp
and
fsts
cmp
sahf
xchg
ljmp
add
inc
xor
adc
xchg
sbb
inc
out
les
xchg
mov
pop
imul
mov
xor
aad
mov
out
push
ljmp
fwait
xor
xor
xchg
cmpsl
or
xor
add
pusha
jb
out
sub
shlb
fists
out
dec
jg
sbb
xor
fs
iret
aaa
cmp
lods
jno
int3
std
jecxz
lods
mov
sbb
mov
stos
insb
pop
mov
jg
imul
nop
push
bnd
inc
xor
add
iret
fs
jge
stc
movsl
add
pop
mov
dec
jg
int
lods
ja
mov
loop
xchg
xchg
xor
filds
xor
push
outsl
sti
out
cmp
xchg
out
inc
cmpsb
int3
dec
jae
jb
in
mov
pusha
daa
dec
pop
in
mov
in
sahf
call
xlat
mov
inc
inc
out
test
cmc
stos
jnp
test
inc
lods
movsl
and
cmp
hlt
dec
cli
adc
clc
mov
mov
or
add
imul
xchg
mov
loop
pop
dec
repnz
ret
aam
outsl
ds
sbb
inc
or
out
pop
je
aad
enter
jb
jne
cmpb
mov
push
sub
adcb
aam
xor
adc
mov
push
cli
jmp
jmp
mov
xlat
int3
shl
mov
das
imul
sarb
aaa
mov
jmp
mov
lret
test
aaa
cmp
or
into
mov
rcll
sahf
sub
fsts
daa
iret
pop
fsubl
aas
and
jne
clc
scas
adc
mov
iret
push
imul
lcall
cmp
add
aaa
xchg
or
repnz
sahf
push
pushf
imul
mov
shlb
cwtl
xchg
push
into
mov
mov
mov
push
sub
or
mov
ret
arpl
cmp
adc
scas
addr16
and
push
xor
adc
cmpb
cmp
push
or
fcom
ret
mov
xchg
loope
inc
rcrl
enter
jb
mov
stos
mov
pop
insl
out
dec
push
insb
jne
push
rorb
inc
jl
xor
pop
imul
shlb
ret
xchg
dec
cmp
stos
push
jae
pushf
xchg
jns
adc
mov
xor
lock
insl
xchg
std
mov
mov
mov
sub
add
sbb
mov
push
push
jnp
addr16
sbb
jae
mov
imul
jne
clc
shl
fmul
and
sarb
repnz
mov
insb
bound
cmp
fs
add
sub
popa
stos
mov
test
dec
jl
sbb
push
mov
das
enter
adcb
mov
mov
test
les
aam
mov
aam
mov
ret
fists
sbb
mov
in
inc
sti
out
and
hlt
adc
mov
pusha
fwait
out
pop
fsubrl
push
sbb
and
fcomps
mov
shlb
pop
clc
sub
orl
jae
jb
lcall
mov
fs
xchg
cmp
mov
imul
xchg
das
fisttps
in
pop
mov
or
or
pop
xchg
push
test
mov
test
fildll
xor
inc
sarb
inc
sub
notl
enter
or
jbe
mov
popf
mov
addr16
out
mov
jbe
push
and
movsl
subl
mov
mov
sbbl
mov
mov
ret
stos
inc
mov
subl
mov
lcall
cmpsb
gs
cmpsl
repnz
ja
sub
cmp
adc
loope
and
in
lds
dec
or
dec
inc
jmp
xlat
scas
xor
aam
fs
cmp
pop
xor
or
rcrb
cld
test
mov
insl
leave
decl
lret
mov
hlt
dec
sbb
cmp
hlt
jb
cmp
sarl
in
pop
ud0
lods
jns
rcr
in
insb
xchg
pop
sti
jb
sbb
pop
pop
mov
repnz
push
cmp
sub
pop
mov
into
aaa
ds
cld
push
pop
loope
negl
xchg
js
test
incl
inc
cli
shlb
add
mov
fs
out
mov
roll
and
mov
aaa
sub
out
out
xor
pop
jo
pop
inc
fstpl
inc
mov
inc
mov
cmpsl
jecxz
add
jmp
jmp
lret
mov
scas
push
cmpsb
inc
aas
xchg
insb
and
stos
mov
sub
stc
mov
mov
xor
adc
cmp
add
sbb
imul
addl
pop
dec
stos
arpl
dec
push
icebp
inc
pop
jns
xor
lret
std
adc
adc
popa
jno
cmp
push
shrl
popf
std
shlb
lods
cwtl
stos
call
and
mov
xchg
dec
jbe
sbb
lods
jo
inc
fwait
dec
mov
cmpl
lds
and
fistl
xor
or
sub
sahf
out
dec
cwtl
jecxz
outsl
sar
mov
mov
jbe
dec
jle
or
jecxz
cld
int3
push
cli
cli
add
lcall
sub
mov
rorl
inc
pop
adc
insb
xchg
insl
mov
rcl
cld
rcrl
add
adc
iret
decl
sbb
ljmp
sbb
xor
clc
movsb
stc
pop
lods
gs
inc
mov
sbb
jp
jecxz
sbb
mov
mov
adc
adc
inc
inc
adc
jbe
scas
out
fcoms
icebp
jge
clc
xor
cmp
lea
shll
pop
add
adc
push
and
push
scas
lock
loopne
insl
add
adc
loope
adc
je
xchg
insb
mov
test
mov
sub
jnp
scas
sbb
adc
shr
scas
mov
inc
mov
scas
icebp
pop
stos
and
std
out
fs
lods
sub
fcoml
cmc
fstpl
xchg
xchg
mov
inc
mov
rcrl
xchg
shrb
mov
xchg
jmp
lea
xor
xchg
out
adc
out
jle
mov
rcl
iret
idiv
lock
out
arpl
xchg
xor
sti
js
inc
adc
aas
sti
popa
clc
fmul
mov
gs
pop
lahf
mov
xchg
sbbb
push
xchg
pushf
xchg
nop
push
cmc
rorb
lret
xlat
push
das
lcall
out
dec
in
dec
rcr
fs
ret
jns
fidivrs
daa
shll
or
jno
in
dec
js
xor
jns
mov
jbe
mov
sub
mov
mov
movsb
jne
pop
inc
leave
subl
xchg
std
pushf
sbb
cld
out
mov
inc
repnz
adc
add
out
int
pop
stos
js
inc
das
nop
cmp
mov
pop
stos
push
dec
mov
cmc
mov
push
clc
cmpsl
push
out
dec
mov
mov
sub
mov
mov
int3
push
xchg
and
lret
or
mov
xchg
repz
cs
roll
pop
jo
insb
push
mov
addr16
jno
imul
or
dec
mov
push
cltd
daa
lcall
mov
aad
dec
add
and
test
loope
pop
movsl
add
jae
pop
out
mov
aaa
or
adc
dec
pusha
lcall
cs
and
mov
or
divb
andl
dec
fsts
fcompl
xchg
ss
pusha
call
out
es
fucomip
imul
adc
pop
push
lret
mov
adc
add
push
xchg
mov
aas
repz
cwtl
xor
in
and
xchg
mov
jb
ljmp
cmp
lahf
data16
shll
fwait
inc
sbb
mov
mov
call
sahf
in
aas
ljmp
push
jmp
and
pop
mov
ja
lret
call
loope
add
mov
mov
mov
jno
outsl
mov
loop
push
xchg
clc
mov
das
sub
rcr
ret
adc
test
cmp
dec
shrl
pop
sub
xor
dec
shr
lods
sbb
adc
sbb
sti
es
inc
adc
in
pop
mov
aas
lods
push
sub
xchg
push
add
and
test
lock
cmp
stos
xchg
push
mov
xor
and
inc
jle
mov
dec
sub
cli
aaa
inc
add
aas
sub
xchg
xorb
sub
cmpl
movsl
mov
sbb
test
outsb
mov
subb
sub
rcrl
mov
xchg
rcr
sub
xchg
outsl
daa
je
dec
dec
fisubrs
mov
fmuls
repz
aas
shll
in
test
xor
fbstp
movb
mov
in
sub
dec
testl
mov
mov
in
outsl
fsts
mov
nop
jne
sub
and
enter
aas
mov
sti
dec
rolb
mov
int
fnstsw
shlb
xorb
sti
in
pusha
cmpsl
jle
lahf
into
or
es
nop
fsubr
dec
jg
movsb
cwtl
cmpsl
cmp
iret
sub
xor
je
addr16
dec
push
add
or
ss
push
jns
jae
sbb
push
push
cli
pop
cmp
scas
and
push
loope
cmp
in
mov
inc
into
inc
xchg
jne
arpl
repz
into
fwait
mov
jae
jno
push
insl
popa
bound
decb
es
roll
add
cmpsl
and
shlb
adc
out
hlt
lds
mov
pop
ret
mov
subb
int3
pop
mov
sbb
xchg
xchg
out
das
push
dec
aas
loope
sub
nop
mov
popa
mov
inc
mov
mov
ret
les
cwtl
imulb
add
test
sahf
push
aaa
lods
sbb
xor
lahf
addr16
mov
pop
and
rcl
in
out
push
insl
or
insl
xchg
test
sbb
xchg
mov
push
dec
popa
inc
inc
stos
rclb
and
sub
sbb
lret
pusha
fwait
in
pop
sbb
out
imul
fchs
rcll
out
and
push
push
movsl
lods
xlat
cmp
insb
adc
lahf
mov
xchg
insl
notb
sub
mov
iret
int3
dec
fidivl
mov
mov
pop
aaa
stos
or
inc
push
and
inc
add
xchg
stos
jnp
adcl
jae
mov
mov
pop
dec
pop
idivl
ljmp
xchg
stos
sbb
mov
test
shlb
mov
sub
push
sbb
out
outsb
xchg
scas
dec
push
movsb
pop
lahf
mov
add
mov
sub
mov
aaa
mov
xlat
lret
adc
ret
int3
and
inc
testb
cmp
in
les
xor
clc
sahf
push
cmp
mov
mov
sbb
xor
push
pop
mov
sahf
in
out
cs
mov
pop
popf
cmp
daa
add
sbb
mov
inc
dec
push
add
mov
lahf
lods
enter
pushf
xlat
push
jle
push
lea
ljmp
loop
cli
mov
inc
adc
gs
int3
xorl
mov
pop
sub
or
and
js
add
dec
aaa
xor
sbb
les
or
jb
xchg
inc
lods
mov
add
ja
lcall
call
jg
mov
ficoml
mov
movsl
and
jb
in
pop
push
out
ss
lahf
push
lahf
ljmp
jecxz
pushf
repnz
mov
mov
cmp
push
add
outsl
add
out
jle
stc
cwtl
pop
mov
xor
out
cmp
jb
aaa
sbb
addr16
pop
inc
adcl
mov
hlt
dec
push
xchg
shrl
lcall
enter
sub
leave
mov
aaa
adc
sarl
push
xchg
bndstx
cmpsl
inc
pop
jno
clc
jno
rcrb
ss
test
mov
push
clc
pop
icebp
xor
fwait
clc
sub
xchg
mov
in
dec
insb
jo
sbb
int3
mov
add
addr16
push
into
push
lock
xchg
cmc
movl
mov
pop
jmp
or
pop
jne
mov
and
imul
sub
push
sub
push
int3
xchg
sbb
popl
add
test
push
in
les
mov
and
lcall
inc
imul
mov
add
cli
xor
sbb
insb
mov
popf
sub
mov
or
test
test
add
xchg
mov
push
jae
mov
jg
test
and
out
pusha
insl
cld
add
shrb
aam
sti
adc
cmp
xlat
sub
dec
imul
dec
push
lsl
pop
jle
movsl
pop
cmp
xlat
pop
jle
or
das
push
push
dec
mov
mov
loopne
fld
inc
jl
push
cmpb
call
or
sub
stos
jge
add
and
testb
mov
xor
enter
jo
stos
xchg
jp
mov
and
ljmp
lock
lcall
rcll
jmp
test
or
dec
xchg
add
pop
sub
js
mov
xchg
and
movsl
int
cmp
jno
sbb
out
jecxz
jo
rorb
leave
shlb
bound
iret
inc
cs
and
mov
fucomi
sarb
jmp
adc
sub
addl
xchg
fcomps
pop
sbb
loope
sbb
lcall
xor
shll
imul
int
jbe
push
jns
imul
popf
sarb
sahf
imul
gs
mov
mov
inc
aas
aam
push
loop
mov
cmp
adc
sub
dec
int
inc
cmp
adc
mov
push
mov
clc
pop
mov
daa
cmp
pop
and
jl
jl
cmp
mov
xchg
test
pop
sub
pop
dec
jl
push
push
or
push
sti
loopne
mov
les
push
pusha
in
ja
pop
xchg
mov
int3
xor
xchg
aam
jb
adcb
std
add
cmpl
push
adc
cmp
fists
xor
js
push
fisubl
add
lock
pop
adc
inc
ret
je
sti
push
clc
clc
mov
xlat
aad
mov
adc
stos
jno
adc
in
lds
bound
inc
lret
loop
mov
daa
add
and
out
lret
xor
movsb
cltd
pop
push
out
loopne
xchg
cmp
data16
pop
in
xlat
add
js
roll
xor
add
mov
icebp
dec
aaa
loope
xor
inc
insb
lods
lods
mov
cmp
or
xchg
jno
sub
orl
push
lcall
mulb
mov
inc
xor
insb
fisubl
add
pop
xchg
xchg
mov
jecxz
divb
push
cmpsl
insb
shufps
movsl
xchg
scas
popa
insb
cmp
scas
mov
subl
jmp
fsubrs
jl
pop
pop
out
lock
pop
mov
mov
stc
faddp
mov
jnp
in
aaa
pusha
cmpsb
scas
fbld
insb
test
std
fildll
es
mov
jecxz
mov
les
jge
xor
lret
movsb
stc
rorb
test
inc
not
addr16
sub
adc
bound
fnstenv
mov
xchg
stos
popf
lods
adc
movsb
neg
movsl
ss
stc
dec
and
scas
call
scas
xchg
sub
in
push
testb
push
fidivrl
inc
testl
test
cmp
ret
jecxz
aad
push
push
mov
fidivl
xor
cmp
iret
pop
push
cmpb
mov
cmp
in
xchg
lds
imul
dec
std
rorb
xchg
icebp
int
cmpsb
dec
mov
inc
xor
popa
shl
add
and
xchg
mov
insb
mov
or
mov
xchg
repnz
js
adc
sbb
mov
xor
test
scas
nop
iret
mov
add
mov
xor
cltd
test
jge
cltd
pop
nop
jae
sarb
dec
cmpsl
enter
xchg
lahf
pushf
imul
mov
xchg
daa
jno
rorl
stos
cs
pop
sbb
inc
inc
jo
dec
mov
pusha
test
jno
rcrl
int3
clc
and
gs
mov
fcomi
call
adc
jns
xchg
inc
cmp
fisubl
mov
daa
scas
adc
stos
scas
jb
jbe
repnz
lods
add
xor
ds
movsb
bound
hlt
mov
aas
dec
sahf
popa
leave
fidivl
sub
push
pusha
push
outsb
stc
orb
insl
cmpsb
cmp
js
pop
loope
dec
rolb
xchg
push
push
mov
fs
shlb
xchg
dec
or
adc
cmp
adc
int3
sub
cmc
fwait
data16
sub
jo
mov
rorl
sub
mov
add
stc
add
mov
cmp
mov
clc
mov
arpl
iret
xor
hlt
mov
lock
and
jmp
pop
cmpl
inc
stos
mov
clc
mov
jno
adcb
inc
or
scas
loop
and
push
push
mov
or
inc
jb
pop
hlt
ljmp
xchg
dec
fs
add
mov
lods
and
in
cmc
loop
and
nop
stos
jg
enter
pop
xchg
pop
mov
jg
stos
stos
std
lret
gs
pop
or
or
mov
in
ja
jbe
hlt
aam
std
sub
lahf
arpl
sub
jae
into
fisubrl
mov
out
inc
push
jno
xchg
and
es
aaa
dec
xlat
call
fists
xchg
mov
push
lods
cwtl
sub
repz
and
push
xchg
mov
stc
lea
xor
xor
imul
inc
gs
call
mov
push
dec
movsl
ja
jno
and
repz
gs
out
sub
jp
int
dec
mov
cli
sbb
call
mov
pop
pusha
push
dec
gs
xchg
pop
sbb
lds
ss
dec
es
xchg
call
cs
pop
lahf
cmp
mov
dec
mov
inc
dec
or
cmp
push
inc
pop
push
popf
add
clc
imul
lcall
inc
cmp
jns
sbb
adc
xchg
add
or
sbb
in
push
mov
xchg
xor
xlat
mov
dec
push
dec
cwtl
popf
jo
add
push
rcr
jge
ljmp
repnz
aad
jo
sub
faddp
jge
aam
leave
daa
jo
add
out
out
fistpll
rorb
adc
js
xor
xor
cli
adc
rcl
add
dec
inc
xchg
mov
in
push
mov
add
xchg
dec
xchg
or
push
adc
sbb
inc
popa
fidivs
add
push
xchg
jg
loopne
lret
hlt
loopne
push
add
fucomip
movsb
ss
mov
popl
rcr
js
mov
aas
xchg
cmp
cli
cltd
xchg
mov
add
dec
add
xchg
lret
sahf
pusha
push
roll
add
xchg
jae
mov
fists
adc
mov
roll
inc
xchg
cmc
mov
adc
xchg
or
cmp
in
add
mov
and
loopne
ret
push
or
inc
movsb
decl
outsl
std
xchg
cmp
addl
inc
rorb
dec
push
andb
xorl
mov
pop
mov
fdivrs
xor
call
rclb
out
ja
rcrl
and
jbe
add
cwtl
insb
xor
push
xchg
add
hlt
les
add
dec
inc
mov
fcoml
xchg
mov
bound
leave
hlt
pop
cmp
dec
and
xchg
mov
mov
add
movsb
mov
loope
sbb
inc
pop
inc
iret
les
pop
mov
push
adc
int3
push
insb
mov
or
mov
jmp
xchg
clc
push
cli
dec
icebp
int3
dec
mov
jmp
inc
or
divb
or
addb
mov
mov
mov
cmpsb
mov
and
insb
cmpsb
sub
repnz
repz
adc
sbb
add
fistl
mov
and
mov
cli
mov
loope
jg
pusha
mov
mov
mov
push
scas
je
stos
int
test
xor
test
jmp
xchg
aaa
sahf
and
aaa
jg
pop
mov
adc
fimuls
ret
movsb
or
push
arpl
in
jnp
pop
pop
xor
mov
xchg
lcall
xlat
jle
sbb
mov
push
mov
cltd
lock
dec
mov
shrb
sub
push
sti
jae
mov
jne
mov
add
mov
xor
out
popa
loopne
cmp
mov
loopne
movsb
rolb
xchg
adc
outsb
xor
stc
cmpsl
in
scas
fs
xor
int
mov
push
dec
pop
pop
aam
int
push
fiadds
xor
jg
add
xor
test
mov
dec
push
mov
adc
ret
movl
push
pushf
in
cmp
dec
xchg
mov
or
gs
ja
cmp
gs
ljmp
xor
jne
cli
add
jb
xchg
ret
jp
jno
xchg
bound
and
adc
iret
mov
cmpsl
mov
xlat
jno
push
jno
sbbb
lock
push
rolb
mov
repnz
mov
mov
shl
sbb
add
pop
aad
push
outsl
stos
jo
popl
divl
js
xor
stos
cs
test
fwait
imul
fldt
lods
xor
scas
push
pop
pop
sbb
scas
or
sub
es
dec
gs
jo
inc
push
push
imul
dec
mov
push
rcrl
pop
xor
popa
les
adc
xchg
je
push
clc
in
pop
sbb
repnz
ret
in
ficoml
pushl
sub
or
sbb
sub
lcall
cmp
pop
xlat
int
imul
push
push
push
xchg
dec
daa
stc
and
push
imul
int3
iret
mov
xchg
mov
xchg
jno
outsl
ds
or
push
jmp
mov
cmc
xor
arpl
jnp
inc
and
loopne
call
testl
aaa
mov
loop
mov
mov
outsb
pop
adc
bndldx
and
flds
mov
adc
xor
xor
sub
dec
vpmulhuw
mov
lcall
mov
aam
push
or
ret
mov
sti
mov
and
in
mov
std
nop
insl
lods
xchg
xchg
mov
jge
insb
rcll
sbb
call
and
fldlg2
test
ret
ret
loopne
push
mov
xor
cltd
dec
push
loopne
or
cmp
xorl
add
mov
xchg
arpl
ret
and
xchg
imul
adc
pusha
jb
aad
imul
jge
jne
lcall
dec
mov
cmp
rclb
pusha
adc
fyl2xp1
imulb
push
stos
iret
mov
or
inc
inc
pop
jae
or
inc
cmp
push
jns
mov
aaa
jb
jae
je
ret
popf
adc
aad
or
divb
cmpsb
repz
mov
jge
movsb
adc
push
cltd
movsb
andl
pop
xchg
ror
dec
aas
xchg
bound
jb
int
mov
scas
mov
xor
lret
icebp
and
fisttps
pop
mov
jecxz
popa
sub
push
mov
imul
shlb
fadd
out
mov
ucomiss
cmp
fildll
xor
push
cmp
cli
hlt
mov
xchg
arpl
jno
je
clc
es
adc
mov
jno
xchg
push
and
popa
add
inc
fsubl
xchg
jae
push
or
mov
repnz
mov
cmp
test
shll
not
push
sub
mov
ret
enter
sbb
jnp
hlt
or
mov
hlt
cmp
mov
mov
pop
cli
dec
cmp
push
sbb
stos
pop
pop
add
in
jg
es
mov
repz
and
adc
xor
cmp
sub
stos
lds
shlb
mov
jmp
jge
sub
sub
sbb
cs
and
fbstp
stc
cmp
inc
shl
xchg
mov
movsb
mov
add
jbe
ffree
repnz
icebp
lds
dec
sbb
stc
notb
or
cli
sub
test
add
mov
xor
mov
jg
lods
arpl
shrb
and
cmp
fbld
lds
in
insl
sbb
loopne
repnz
sti
aad
push
rcr
andl
mov
std
jmp
or
fldt
and
dec
push
dec
dec
cli
pop
movsl
fisttpll
mov
add
add
or
lock
adc
nop
or
jecxz
mov
enter
and
movups
push
add
lahf
jmp
mov
mov
imul
and
xlat
ret
in
xchg
cmp
repz
xor
sub
stos
xchg
lahf
andl
data16
pop
pop
rolb
pop
push
sub
outsl
mov
mov
sar
loop
aam
push
mov
mov
adc
out
sub
test
jbe
btr
mov
pop
iret
gs
imul
pop
or
lock
loop
orb
pop
cli
loope
mov
adc
sub
frstor
pusha
sahf
xchg
mov
fsubs
fidivl
js
pop
sub
and
xchg
add
decb
rorb
or
xorl
cmp
test
mov
lods
ja
add
ret
loopne
ret
xor
mov
and
mov
insb
incb
sub
inc
cmpsb
xlat
cmp
sahf
mov
xlat
xchg
test
roll
imul
in
adc
or
je
ss
sbb
dec
jbe
sub
mov
in
xchg
jp
int
dec
lock
sbb
push
inc
add
imul
stc
mov
mov
sub
notl
scas
mov
push
or
stos
cmp
in
pop
mov
pop
mov
fisubrs
push
mov
push
mov
out
pop
mov
iret
subl
clc
xor
mov
ret
jnp
jne
mov
cmp
or
shl
dec
out
pop
cmp
lock
sbb
sbb
decb
test
cmp
mov
jl
into
jae
pop
dec
mov
jecxz
mov
bound
add
outsb
push
sbb
aad
test
jno
mov
bound
adc
lods
aad
adcb
mov
push
lock
lea
stos
and
lret
push
aas
fsubl
lahf
xor
pop
mov
in
fcomps
shl
or
or
fdivrs
push
arpl
mov
dec
insl
jle
inc
push
je
xor
lods
aad
mov
inc
sub
xchg
dec
lods
xor
sub
dec
jne
sbb
xchg
mov
fcomps
push
and
add
mov
roll
dec
pop
ror
push
in
sub
mov
or
cmp
or
int
mov
popa
hlt
cld
lods
mov
scas
sbb
mov
scas
sbb
bound
sbbb
cmc
and
lahf
inc
insl
jge
jbe
inc
inc
and
mov
or
mov
inc
adcl
sbb
ret
add
cmpsl
lock
fldenv
sub
inc
hlt
add
pop
xor
sub
inc
sbb
mov
clc
xor
popf
xchg
cmp
xlat
lsl
push
inc
hlt
in
jbe
dec
out
test
out
popa
sbbb
dec
idiv
ljmp
mov
es
icebp
sbbb
insb
ss
xchg
sub
shrb
pop
xchg
and
into
sub
adc
fndisi(8087
inc
jbe
in
cmp
dec
clc
loop
in
loopne
and
popa
js
cmp
sti
jnp
cmp
in
sub
mov
rorb
sbb
pop
das
in
cmpsb
and
and
orb
pop
xchg
les
add
iret
jmp
call
inc
xchg
pop
jmp
das
xor
fstl
sti
hlt
jmp
xchg
das
fildll
push
into
jne
and
adc
xchg
lret
es
pop
mov
movsl
cmp
mov
xlat
xchg
cmp
std
enter
inc
mov
enter
popf
cmp
ja
imul
jae
scas
idivb
hlt
std
add
dec
addl
pop
jle
mov
pop
mov
hlt
sbb
dec
test
dec
mov
loope
dec
ret
fcoms
push
mov
out
inc
dec
cmp
pushf
pop
movsb
sbb
inc
orb
stos
pop
push
test
dec
lods
push
or
data16
pop
aad
pavgw
sub
dec
cmp
pop
into
loope
data16
inc
push
insl
cmp
loop
inc
cmp
xchg
mov
sahf
mov
subb
les
push
mov
pop
sarl
xor
dec
or
movsl
or
inc
gs
fisttpl
ljmp
repz
pop
dec
das
xchg
fwait
enter
fcoml
xchg
xchg
xchg
add
sahf
sbbl
pushf
loopne
xor
sbb
enter
out
test
xor
jae
add
pop
loop
push
cltd
inc
call
dec
push
xor
pop
and
xchg
pushl
cmp
fisubrs
cmp
jg
jmp
pop
adc
outsb
mov
divl
imull
daa
or
mov
mov
popa
lock
mov
sub
rep
push
shrb
push
mov
mov
aam
or
sub
les
fsub
test
aas
int3
loopne
repz
test
add
inc
inc
hlt
jae
fildl
jmp
cmovs
push
je
and
cmp
adc
mov
sub
lods
jo
jp
adc
or
loop
mov
jle
push
cmp
inc
xor
add
sub
push
arpl
xchg
xor
call
ds
adc
out
adc
jge
xor
outsb
jmp
xchg
inc
pop
jg
je
fildl
xchg
bnd
mov
jnp
arpl
dec
scas
mov
push
jo
mov
out
std
push
scas
cmp
pop
sub
arpl
cmpsl
mov
mov
out
mov
bound
les
adc
in
cwtl
andb
dec
cmp
std
cmpsb
aaa
insl
xchg
mov
cmpsb
jnp
xchg
inc
stos
sub
mov
cli
cli
idivb
shl
add
dec
cmp
xchg
xchg
and
push
stc
xchg
inc
mov
adc
imul
imul
popf
push
xchg
push
arpl
fwait
mov
sbbb
xchg
xor
dec
aam
xor
xchg
ret
dec
lods
or
adc
or
push
xchg
fldenv
push
mov
lahf
iret
pop
or
cmp
push
xchg
ds
or
ds
sub
push
cli
insl
cmp
dec
inc
repnz
push
adc
lret
pushf
pop
jmp
aaa
xchg
dec
mov
pmaddwd
xor
pop
into
test
adc
jp
pop
cmp
imul
stos
cwtl
adc
mov
cld
das
cmp
les
add
jb
test
gs
xor
dec
adc
jae
ja
mov
insb
jmp
inc
xchg
mov
out
mov
lcall
and
cmp
or
mov
mov
jl
mov
faddl
std
sub
fadds
in
out
sti
fdivs
fcoml
jns
sub
add
out
cmp
pop
push
inc
loope
xor
fildl
pop
cmc
aad
mov
fsts
pop
sub
cmp
xchg
arpl
fcomps
loopne
push
sub
add
iret
mov
inc
xor
mov
lret
inc
push
cmc
cwtl
pop
fs
std
jno
ror
test
adc
pop
push
les
rcl
loopne
dec
inc
jmp
inc
adc
lds
push
into
fisubs
push
ds
iret
mov
popa
scas
xor
je
dec
in
cmp
inc
arpl
aaa
scas
mov
inc
pop
roll
orl
aad
clc
scas
mov
cmovs
cmp
or
mov
push
lock
lret
push
push
bound
std
sti
out
xchg
push
insl
insl
mov
mov
cmp
or
xor
aaa
enter
mov
loop
adc
jl
xor
pusha
sbb
nop
outsl
fbstp
and
out
addr16
dec
add
arpl
lea
shlb
in
hlt
pop
mov
fcmovbe
dec
mulb
dec
hlt
push
scas
call
sahf
pop
cmp
dec
loop
or
mov
roll
push
in
aad
loopne
push
and
imul
sbb
add
and
pop
sub
iret
rclb
push
rcl
popa
stc
repz
adc
push
mov
sbb
and
cwtl
arpl
xor
popfw
out
xor
push
xor
shlb
cmp
mov
int
xchg
insl
sub
push
ficomps
xor
sar
sub
inc
or
loope
xchg
jle
mov
lods
cmc
cmp
in
hlt
and
and
jns
loope
pop
adc
lods
out
pop
xchg
lret
cmpsl
xor
sub
lret
pop
loop
fs
pop
imul
pop
ret
lds
sub
test
xor
ret
stc
sbb
in
ret
outsl
in
mov
dec
test
dec
add
repz
int
cli
add
mov
mov
add
inc
adc
xchg
mov
sbb
loop
in
sbb
mov
jle
pop
shll
in
daa
icebp
nop
addr16
aaa
add
shll
mov
xchg
dec
out
xchg
add
loop
sub
jb
inc
fsubrs
xor
rcrl
inc
test
and
or
movsb
sub
add
int
inc
adc
or
or
jle
fwait
mov
mov
mov
ja
les
jecxz
test
mov
pushf
add
cld
fisttpl
xchg
cld
test
repnz
and
testl
ret
push
xor
rcrb
add
leave
jecxz
add
cmpsb
aam
pop
jae
into
ret
adc
ljmp
mov
jns
fnstcw
movsb
add
imul
push
aaa
mov
xor
scas
shlb
les
cmp
pop
notb
cmpl
mov
push
cltd
jbe
mov
cld
fcoms
xorl
pusha
fwait
pop
dec
sub
insl
cs
push
aam
adc
jbe
mov
std
out
push
jmp
jmp
push
and
out
sbb
es
loope
js
jns
inc
lcall
or
inc
adc
dec
add
mov
xchg
push
sub
sahf
les
mov
orl
xor
ffreep
sub
pusha
fs
inc
xchg
aas
fadds
stos
and
add
push
sub
data16
nop
stos
out
fistps
jno
lret
mov
pop
in
mov
dec
dec
jmp
cs
inc
pop
push
pop
fsubp
jge
aaa
cs
test
outsb
xchg
call
sub
or
call
push
mov
mov
add
xor
fldt
popa
fs
imull
scas
testl
andl
and
jne
mov
and
mov
mov
push
add
xlat
push
push
cmpsb
sub
arpl
and
mov
arpl
and
sbb
jle
sbb
sbb
jmp
clc
sbb
ror
clc
dec
push
push
rcll
mov
sbbb
aam
cmc
xchg
fsubrl
dec
test
and
push
jbe
lock
je
and
mov
and
rol
pop
mov
add
dec
nop
cmp
add
dec
pop
mov
lods
jp
cmp
ret
xor
or
jge
orb
jb
popa
dec
jae,pt
inc
fdivl
pop
push
mov
and
dec
or
xchg
cmp
and
push
mov
icebp
cld
jecxz
and
mov
dec
out
mov
stos
pop
push
jb
add
mov
popf
jle
inc
pop
out
shl
mov
and
adc
addr16
icebp
movsb
test
mov
popf
daa
xchg
lds
adc
and
mov
xor
fnsave
lock
mov
test
cli
pop
mov
iret
xchg
sub
mov
imul
pusha
in
es
scas
adc
cmp
pop
sbb
and
cmp
add
jmp
cmc
sahf
aaa
xor
or
lock
popf
inc
divl
sbb
push
lods
jmp
mov
lret
and
lock
lds
out
inc
mov
push
nop
mov
mov
sti
cltd
ljmp
or
out
das
or
insb
add
ja
aad
adc
test
xchg
arpl
sub
xlat
out
iret
mov
dec
dec
push
mov
test
and
ret
sub
mov
ljmp
cmpsb
psrlq
shrb
lret
xchg
jo
cwtl
dec
xlat
adc
fcmovu
or
ficompl
jmp
test
push
aam
jo
mov
hlt
shll
shl
sbb
fwait
sub
aam
scas
stos
das
sbb
sahf
aam
out
and
fimuls
int
es
pop
jb
stos
or
adc
or
fsubl
pop
sub
stos
dec
arpl
ja
jne
ret
mov
pop
mov
stc
ljmp
pop
pop
dec
aas
fisubs
repz
shrb
cmp
inc
push
push
sbb
call
sub
outsl
xor
adc
ret
sbb
sarl
fcomp
push
lahf
movsb
repnz
adc
and
mov
addb
mov
cmp
fldl
hlt
sbb
mov
data16
add
in
cmp
push
add
jle
aad
repz
pushf
lret
inc
or
insl
sbb
mov
loopne
inc
dec
outsb
lods
pop
or
popf
dec
mov
lods
mov
push
daa
or
out
mov
xlat
mov
repnz
sarb
je
nop
mov
dec
aas
pop
loop
mov
xchg
mov
lret
pop
jae
xor
jne
ss
jae
je
mov
aaa
xor
pop
aaa
out
hlt
lods
inc
scas
lds
jg
mov
jb
add
mov
add
out
mov
fcomps
cli
ljmp
cmpl
mov
inc
cld
int3
or
sarl
bound
fisubrs
or
or
mov
mov
in
push
mov
mov
add
rcrb
and
xor
cltd
das
push
fs
pop
mov
dec
push
call
setae
sub
ret
sub
sub
ficoml
lret
ljmp
add
push
repz
sub
lds
pop
xorb
in
push
cmpsb
inc
xor
mov
lea
mov
negb
inc
inc
subb
pop
mov
int
sbb
scas
add
imul
and
jbe
lret
cmp
mov
sbbb
adc
mov
mov
inc
xor
aad
push
xchg
std
sarl
mov
imul
cmp
sbb
add
or
ja
repz
xchg
dec
and
ficoml
and
lret
mov
lea
test
lret
push
inc
mov
shrl
jmp
sub
lret
std
jns
test
xor
mov
dec
clc
hlt
stos
pusha
in
push
inc
pop
mov
int3
push
in
push
jg
adc
fistps
sub
jno
cmp
ret
and
xor
sub
ret
das
sahf
add
cld
xor
dec
mov
out
jne
or
lock
push
sub
negb
repnz
arpl
pop
iret
jnp
mov
out
or
push
divl
dec
in
mov
mov
push
xchg
ljmp
mov
mov
and
jno
cmpl
test
jge
or
in
add
and
add
rorb
mov
ror
mov
mov
jl
xchg
mov
xchg
repz
cmp
roll
fs
out
outsl
scas
pop
out
jle
jno
lahf
jns
add
leave
inc
in
adc
xchg
pop
ljmp
xlat
leave
pop
push
popa
adc
add
div
and
push
js
ljmp
inc
pop
scas
add
jl
nop
jnp
lea
mov
int3
mov
loopne
add
jle
call
lea
push
push
mov
je
add
mov
mov
sub
icebp
fistl
inc
js
out
cli
mov
xchg
adc
cmc
mov
dec
stc
sahf
stos
xchg
out
or
xchg
out
mov
fsubrs
dec
xor
or
xor
xor
cli
push
addr16
mov
xor
ja
mov
lahf
lods
xchg
ja
inc
je
push
nop
mov
push
push
or
enter
jno
mov
add
cmpsl
ret
and
cmp
jle
cli
dec
arpl
pop
xchg
cmp
nop
hlt
aas
sahf
pop
pop
scas
mov
pop
adc
insb
sti
add
sub
sbb
scas
add
stos
fstpt
dec
stos
sbb
fwait
aaa
mov
and
dec
rorb
xchg
cmc
lds
div
sub
jmp
sbb
pop
mov
or
sbb
xor
into
push
fnstcw
jae
mov
rclb
sahf
inc
es
gs
inc
adc
dec
cmc
cmc
pushf
ds
test
add
pusha
ficoml
int3
cmp
mov
dec
in
outsl
ja
loope
jp
sti
loopne
push
cli
sbb
or
inc
add
es
inc
sti
out
pop
dec
push
jmp
pop
push
in
and
fbstp
dec
ret
stos
push
adc
xor
mov
push
stc
push
movsl
pop
aad
or
xor
push
es
cmp
dec
jmp
shlb
stc
popa
jns
pop
or
js
jbe
pop
dec
dec
out
push
sbb
gs
push
cmp
or
les
xchg
mov
rcl
jge
mov
add
jge
xor
and
loope
lods
fcompl
mov
dec
das
div
les
xchg
lods
sub
ret
push
pop
std
xchg
adc
fstps
lods
aad
mov
repnz
pop
outsl
loope
dec
pop
sbb
xor
cmp
mov
and
push
and
mov
xchg
and
jge
dec
repnz
stos
jle
test
mov
push
xchg
and
xchg
call
jno
fadd
enter
icebp
test
pop
adc
test
movsb
sbbl
shrb
adc
mov
fdivrs
jp
xchg
xchg
adc
imul
ficomps
pop
sbb
and
sti
xchg
xchg
cltd
cmp
inc
sti
cmp
xchg
add
fstps
cmp
lods
arpl
mov
mov
mov
ds
or
fnstcw
sbb
int
pop
cmpsl
jmp
and
or
add
ljmp
inc
fimuls
test
or
insb
mov
int3
insb
adc
stc
in
aaa
imul
cmpsb
push
lods
sbb
aaa
out
bound
pusha
xor
shl
hlt
mov
and
div
pop
aaa
sbb
js
xor
out
xchg
repz
jne
ds
pop
mov
jmp
xor
sub
push
cmp
test
fsubl
in
cli
fldl
cmp
jmp
or
pop
adcl
xchg
and
repnz
pop
dec
cmp
and
test
sbb
cmp
mov
das
cld
or
sub
iret
push
int3
loope
or
aaa
movsb
xor
sub
pop
loope
shrb
mov
add
push
push
pop
xor
rcll
hlt
dec
xchg
mov
mov
sub
and
pop
cmp
cmc
insb
inc
les
inc
lret
xchg
movsl
sub
pop
mov
fistps
or
ds
sub
cs
fimull
jns
aaa
rcll
inc
icebp
jae
xchg
mov
lret
add
push
fs
add
scas
push
dec
dec
or
xchg
cltd
adc
jne,pn
push
xchg
movsb
and
scas
into
and
imul
pop
clc
enter
adc
xchg
push
xchg
xchg
mov
repnz
dec
inc
jle
sti
daa
fmull
cmp
dec
neg
stos
or
push
xor
adcb
jnp
lea
sbb
sbb
jge
xor
inc
inc
inc
cmp
xlat
push
lahf
pop
notl
pop
xchg
push
push
or
push
jne
jae
int
pop
into
imul
nop
shlb
or
out
orb
stos
mov
cmp
outsl
xor
cwtl
out
cld
cld
pop
xor
dec
mov
icebp
cmp
inc
ficoms
call
sub
js
out
popa
test
push
sarl
int3
movsb
jns
or
movsl
arpl
and
ja
pop
jnp
cmp
addb
xor
add
pop
mov
sbb
push
or
push
pushf
daa
rcl
xchg
sti
in
dec
sub
fsubr
push
iret
je
mov
inc
push
cmpsl
inc
dec
enter
adc
jne
cmp
xor
sbb
insl
in
mov
out
ja
pop
inc
jo
xchg
mov
cmc
fisttps
xchg
sahf
ret
je
popl
push
arpl
mov
mov
lock
mov
incl
pop
push
int3
inc
push
ds
dec
mov
imul
dec
dec
popa
jmp
f2xm1
pop
scas
sbb
sub
push
pushf
arpl
xchg
jbe
inc
mov
cli
push
push
popa
cld
sahf
jne
sbb
mov
pop
loop
stc
and
sbb
adcb
push
cmpsb
in
ret
lahf
mov
sbb
cmp
fs
fidivrl
scas
jle
adc
mov
iret
out
lret
jle
je
jmp
jb
loope
mov
jecxz
iret
push
xchg
clc
icebp
jecxz
lea
sbbl
adc
fwait
test
jbe
sub
popf
add
je
filds
mov
icebp
push
dec
inc
stos
rcll
inc
je
ja
insb
mov
mov
xor
repz
pop
jmp
pop
std
xchg
gs
jg
lahf
jne
stc
add
test
outsb
xor
lcall
dec
push
inc
jne
inc
ja
dec
mov
sub
and
test
mov
test
push
adc
lds
add
aam
shlb
adc
pop
call
pop
mov
aam
jnp
or
arpl
sub
hlt
call
loop
inc
nop
ljmp
in
mov
dec
xchg
lret
outsl
fneni(8087
ret
jp
es
push
sarl
fsubrl
xor
aas
sbb
daa
pop
xor
jns
add
xchg
nop
push
mov
in
bound
out
adc
iret
add
stos
sbb
ja
push
loopne
mov
stc
imul
pop
loop
sbb
out
ds
xchg
cmp
sub
sbb
out
cmp
sbb
xchg
pop
pop
mov
clc
ljmp
cmp
add
pusha
adc
or
jp
in
add
imul
jo
notb
or
or
or
stos
jns
dec
xchg
push
movsl
loope
xor
cltd
jnp
out
jb
add
mov
lock
sahf
jl
jmp
jmp
je
fcoms
lret
push
out
add
mov
dec
jnp
mov
jle
les
cwtl
jns
lods
ljmp
adc
imul
mov
cmp
repnz
std
pop
test
fmuls
add
push
adc
mov
or
testl
inc
and
shr
aaa
stos
xchg
sub
pop
cmp
xchg
pop
or
popa
lods
fdiv
fisubs
jo
mov
add
adcb
outsl
lcall
inc
ret
push
cmc
ficompl
mov
mov
xlat
cmpsb
pop
daa
dec
mov
aaa
lcall
mov
repz
or
pop
cmp
mov
sbb
je
inc
jmp
loopne
rcrl
mov
gs
out
dec
mov
and
roll
xor
mov
scas
mov
adc
ss
add
xor
xchg
dec
or
dec
lret
sub
test
cmp
sbbb
xchg
dec
mov
xor
push
or
sbb
sub
fwait
imul
jae
adc
dec
aaa
ja
jg
pop
mov
mov
cmp
cmp
inc
aas
mov
lods
jmp
fs
or
sub
scas
push
xchg
xlat
ljmp
pop
xchg
andb
pop
ljmp
int
lret
push
imul
sub
js
and
dec
mov
nop
push
sbb
lea
les
loop
pop
cmp
jo
sub
loope
div
loopne
pushf
and
ret
test
pop
cmp
ja
adc
sarl
jle
andl
inc
mull
xchg
nop
mov
push
mov
jl
dec
fstl
pusha
cmp
mov
mov
loopne
movsl
mov
or
and
and
lret
mov
mov
or
xchg
add
data16
add
mov
inc
and
inc
cmp
sahf
aad
adc
scas
adc
mov
mov
mov
jns
repnz
mov
mov
rcrl
pop
aaa
add
lds
test
cmp
bound
cmc
adc
sbb
enter
pop
test
push
loope
jno
shlb
push
mov
add
lcall
imul
clc
dec
dec
inc
or
icebp
or
addr16
push
mov
mov
or
add
push
gs
leave
ljmp
inc
mov
addr16
adc
and
psubsw
and
les
fisttpl
negb
repz
iret
nop
lea
aaa
das
arpl
in
cmpb
in
mov
cmc
addr16
or
enter
jle
mov
fsubr
add
mov
loop
bound
dec
xchg
insb
jp
inc
mov
push
xlat
mov
lret
dec
mov
cs
test
and
and
mov
mov
dec
jmp
pop
scas
stc
xor
pop
sbb
adc
shll
pop
pop
repnz
push
in
jp
push
ds
int3
jp
dec
sub
add
jg
nop
je
mov
jge
sub
stos
or
addl
sbb
cmp
stc
mov
dec
xorl
xor
or
cs
xchg
and
sahf
into
dec
or
out
sub
pusha
push
bound
cmc
sub
xchg
and
lahf
fwait
sbb
jge
push
fisttpll
lcall
shl
aad
inc
cmpsl
jg
adc
dec
out
xchg
cmp
int3
jno
shll
mov
nop
and
xchg
jae
sbb
adc
cld
add
je
jmp
mov
add
enter
dec
js
xchg
and
xchg
and
jecxz
icebp
cmovs
push
dec
sub
xor
aas
push
outsl
sbb
push
in
jae
outsb
xchg
or
cmp
popa
int3
jb
and
je
and
lea
lahf
pusha
ret
fiadds
adc
cmpsl
jbe
ja
dec
adc
or
fld
leave
xchg
adc
and
cmpsb
nop
xchg
lcall
pop
test
jns
mov
and
cmp
std
mov
mov
xchg
sub
leave
lods
inc
and
push
xlat
cli
inc
clc
pop
xchg
add
outsb
cltd
fcompl
dec
pusha
and
xchg
jno
and
sarl
cmp
stos
xchg
dec
inc
mulb
fcomps
pop
ja
pop
stos
ss
push
movsb
ds
mov
loope
imul
ja
subl
adc
jecxz
inc
into
pop
xchg
cltd
add
fcompl
filds
aas
into
sbb
aad
fsqrt
push
and
in
mov
and
subb
iret
scas
stc
inc
jecxz
call
mov
mov
fdivl
sbb
xchg
into
xor
pusha
xchg
test
mov
outsb
fisttpl
add
mov
push
pop
mov
sbb
out
outsl
jbe
push
outsb
xchg
mov
and
inc
pop
mov
mov
cmp
mov
push
in
or
mov
mov
push
pop
cmpsb
imul
lods
mov
xor
icebp
pop
cmc
incb
imul
loope
es
imul
clc
mov
hlt
loope
mov
mov
mov
repz
xchg
scas
mov
loopne
jb
mov
in
fldenv
xchg
lods
movsb
cmpsb
fwait
hlt
idivl
test
mov
xlat
aaa
cmpsl
cs
push
js
mov
push
pop
xlat
or
js
xchg
push
insl
mov
jge
add
outsb
mov
mov
mov
insb
mov
add
sub
and
pop
xchg
mov
and
into
lea
mov
cmpsl
inc
sti
fstpt
sbb
leave
arpl
lret
dec
adc
mov
sahf
scas
je
dec
pushf
aam
outsb
repz
sbb
es
sub
mov
jb
out
daa
or
cmp
cmp
and
mov
jecxz
jecxz
js
pop
and
lods
xchg
movsb
pop
mov
roll
sub
data16
notl
pushl
add
repnz
fnsave
mov
sbb
mov
inc
ret
movsb
cmp
aam
sub
imul
push
mov
in
idivl
mul
jae
sub
add
xchg
sub
mov
pop
in
adc
test
cmp
xor
pop
push
add
sub
pop
inc
leave
repz
enter
aad
shll
jle
sbb
fisttpll
mov
or
or
and
push
sub
daa
and
mov
sbb
xchg
push
movsb
lret
popf
je
scas
add
xchg
jb
fsubrs
pop
pop
xor
movsl
xor
adc
aad
push
xor
pushf
jg
dec
int
dec
mov
dec
fwait
jp
shll
cmpsb
xor
lahf
push
dec
push
sbb
sarb
sbb
cmp
xor
pop
mov
cmpsl
add
mov
xor
flds
mov
rclb
out
leave
jmp
out
xchg
addb
lods
push
adc
dec
addb
fwait
loope
gs
mov
out
fsubrs
cmp
inc
in
sub
repz
fldt
adc
cmc
cmp
mov
xor
adc
pop
adc
pop
jne
jmp
aam
stos
test
inc
xorb
mov
adc
or
sbb
daa
jecxz
rorl
pop
fucomip
mov
pop
movsb
idivb
mov
cmc
sbb
repz
jnp
jmp
adc
cwtl
jge
and
ss
adc
push
in
push
dec
adcl
mov
sub
mull
jle
sub
mov
int
fildll
ds
mov
dec
mov
cltd
xchg
inc
inc
fcmovb
inc
rorb
pmaxub
insl
lock
sti
push
lcall
in
insb
dec
in
test
ja
sub
or
mov
dec
jmp
xor
scas
sbb
mov
add
fnstsw
push
ja
dec
jp
inc
lds
sbb
sub
jo
inc
int3
lcall
mov
aad
jno
cmp
icebp
repnz
pushf
xor
int
jbe
sbb
mov
inc
and
jb
push
and
push
adc
or
add
ffree
les
mov
leave
lret
push
pop
dec
addr16
insl
xor
xchg
xchg
jnp
sub
mov
enter
mov
cmpsb
data16
aad
or
cmp
addr16
inc
hlt
and
cld
cmp
icebp
or
in
movsb
and
nop
pop
dec
mov
mov
xchg
mov
das
xchg
inc
hlt
jmp
add
addr16
sbb
sti
out
xchg
and
jle
das
aaa
jbe
negb
clc
pop
or
test
out
pop
mov
es
jle
in
add
fadds
iret
inc
inc
jno
cmpsb
cmp
std
mov
icebp
icebp
test
sub
inc
cmp
pop
js
add
sbb
stos
ss
push
pusha
push
fs
cmp
dec
insb
fwait
cmp
dec
jae
dec
mov
sub
add
stc
xor
icebp
pop
push
or
shlb
xchg
mov
jns
pop
sbb
arpl
sub
cmp
imul
inc
insl
xlat
mov
xor
xor
mov
and
xchg
enter
dec
ret
adc
mov
stos
xchg
adc
inc
outsl
aaa
incl
fadd
mov
std
pop
repnz
stc
push
jno
and
insb
mov
xor
mov
nop
repz
sub
call
call
xor
cmp
push
cmc
gs
pushf
jge
sub
int3
out
pop
xor
loope
in
loop
or
cs
lods
mov
mov
inc
das
cmp
add
sbbb
mov
into
in
gs
hlt
jmp
sub
movsl
jb
out
in
push
ret
mov
xchg
pop
je
fstp
insl
shr
out
mov
adc
adc
inc
pop
clc
lock
pop
insl
adc
loop
cwtl
add
es
sbb
imul
or
cmpsb
sbb
test
mov
or
enter
rol
and
lret
mov
or
cmp
mov
insb
pop
adcl
inc
push
add
jnp
sbb
cmc
inc
out
cmp
or
pop
mov
pop
popa
and
lret
pop
scas
add
lret
pop
aaa
dec
pushf
adc
outsb
iret
test
push
push
mov
dec
add
xor
xor
js
gs
pop
push
jg
xchg
movsb
movb
or
bnd
push
sub
out
jae
loop
xor
adc
adc
or
cmpsb
std
fisttpll
scas
flds
das
outsl
xor
stc
test
es
pop
or
les
mov
add
leave
test
dec
stos
push
mov
cli
leave
fbld
call
adc
cmp
mov
mov
cltd
mov
mov
pop
in
std
les
lods
iret
add
repz
mov
js
fwait
jmp
insl
out
iret
fisubl
xor
ret
xchg
sbb
xchg
adcl
in
lds
mov
adc
mov
add
dec
in
outsb
les
cmp
lret
jl
sti
sub
jno
int
or
pop
jecxz
mov
roll
movsb
mov
mov
rorb
aam
adc
pop
mov
and
jns
xchg
fmull
xor
pop
pop
and
push
insl
es
jnp
insb
and
pushf
out
add
pop
stos
leave
inc
cmpsb
pop
ficompl
enter
cli
or
fistpll
and
dec
nop
addr16
xor
divl
jmp
mov
movsl
add
xchg
test
fcompl
lahf
orps
mov
pop
jnp
insb
inc
adcl
add
dec
sbb
js
lahf
aaa
xchg
xchg
fnsave
rclb
inc
cltd
lods
outsb
sbb
sbb
int3
fbstp
cmp
jl
daa
dec
or
inc
fmul
lds
arpl
jecxz
inc
sbb
pop
pop
pop
add
inc
lods
push
sub
jne
sbb
jl
out
jmp
xchg
xchg
popa
cltd
xchg
add
cmp
mov
andb
cmp
hlt
hlt
scas
xor
dec
mov
xchg
test
fwait
and
push
jb
mov
stc
lret
push
pop
cmp
loopnew
xchg
data16
outsl
lcall
inc
in
xor
arpl
mov
aad
pop
jle
mov
jb
dec
lds
cmpsl
inc
icebp
loopne
cmp
push
ja
push
pop
xchg
adc
xchg
push
mov
testl
minps
gs
inc
je
push
inc
data16
sub
and
iret
lods
cmpsl
out
sub
mov
mov
sbb
lock
jns
jl
pop
sub
sbb
cmpsb
int3
xchg
mov
cmp
test
aad
insb
lea
je
loope
lahf
adc
inc
mov
inc
adc
cmp
jl
fcmovnu
push
cwtl
or
jo
mov
inc
loop
pop
jmp
lods
xchg
cwtl
fsubl
popa
jb
mov
add
dec
ret
shll
and
xchg
in
ret
mov
push
dec
sub
push
and
clc
adc
lea
cmpsl
push
out
scas
adc
sbb
ja
sbb
repz
cmp
adc
fs
sahf
cmpsb
aas
test
xchg
pop
movsb
push
ljmp
cwtl
and
mov
or
jne
fisubl
cltd
rolb
mov
xchg
das
shlb
add
or
outsl
mov
push
lahf
call
xor
flds
outsl
push
xor
and
fimuls
sbb
repz
clc
jge
xchg
pop
repnz
mov
imul
xor
add
stos
push
lret
shr
out
lods
xor
mov
cmp
mov
dec
pop
dec
inc
out
cmp
sbb
inc
fisttps
dec
xor
push
jmp
xchg
pop
lahf
pop
adc
push
dec
inc
jno
lahf
and
out
push
or
lcall
decl
push
stc
mov
clc
push
jo
sub
inc
mov
xchg
pop
hlt
popf
aad
fdivrl
insl
adc
xchg
xchg
mov
btr
xlat
sub
push
dec
mov
fwait
in
cs
pusha
pop
movsl
jl
js
out
loopne
out
jp
inc
lods
sbb
jp
sub
xor
int3
and
pusha
lea
arpl
mov
xorb
add
fs
aaa
mov
ljmp
xchg
pushf
insl
gs
inc
and
xor
cltd
mov
fbld
push
sub
cmpl
pushf
pop
jne
movl
push
leave
xchg
pusha
cmp
sarb
std
lret
and
or
inc
mov
lea
dec
in
fistpll
push
mov
movsb
xor
out
shll
test
push
movsb
insl
js
or
sahf
sub
jae
aad
out
jno
std
ret
scas
jb
push
sbb
dec
repnz
cmp
cmp
int3
add
mov
lea
sub
cmpsb
dec
sub
aad
call
loopne
cmp
ret
mov
in
mov
insb
pop
mov
int3
cmp
fbld
jg
daa
pop
adc
insb
js
mov
lea
pusha
test
inc
inc
push
mov
pop
cmp
mov
and
cmp
jo
push
push
mov
fcmove
int
xchg
outsl
sub
inc
ljmp
lret
movsl
lcall
mov
mov
sub
mov
out
std
cmp
add
mov
rcrl
dec
mov
or
dec
inc
rcrb
and
idivl
in
add
xchg
or
orb
fsubrl
jo
sti
mov
pushf
gs
sbb
xor
push
xchg
dec
and
mov
mov
inc
pop
push
addr16
addr16
mov
shrb
in
adc
mov
mov
ds
inc
pop
es
jmp
fnstcw
xor
sub
aad
mov
lds
mov
inc
jne
xchg
push
lods
aas
xchg
inc
mov
pop
pop
xlat
lock
imul
out
inc
pop
sbb
xor
call
xorl
pop
cmp
in
cmp
ret
and
push
cltd
pusha
insb
in
fcmovnb
mov
adc
jb
movsl
sbb
mov
rcr
nop
jecxz
push
or
pop
es
loopne
scas
adc
dec
int3
aad
add
inc
enter
cmpsb
cltd
or
adc
inc
or
push
mov
cmp
mov
not
mov
aas
mov
or
jge
mov
es
add
add
lret
icebp
gs
xor
xchg
imul
std
outsl
mov
push
scas
cmc
sbb
imul
sub
push
add
mov
mov
ds
sarb
pusha
dec
mov
shr
les
xchg
sub
stos
lods
or
xchg
pop
pop
pop
pusha
push
lea
jno
inc
push
in
sbb
movsl
mov
push
adc
pop
dec
stc
shr
ret
sbb
xlat
mov
pop
ss
or
cmp
popf
pop
mov
aad
xor
sahf
fildl
imul
add
hlt
aam
jae
adc
adc
js
outsb
mov
mov
test
in
scas
xchg
cld
mov
insl
dec
sub
push
xchg
mov
xlat
pushl
int
mov
mov
cmp
test
mov
aaa
cmp
out
lret
jge
mov
leave
dec
lds
mov
icebp
ret
pop
mov
pop
in
gs
pop
mov
mov
rcrb
dec
imul
cmp
bound
add
ret
test
mov
mov
mov
das
jp
mov
sub
push
insb
fidivrs
mov
call
jge
stos
mov
rclb
add
mov
fldl
stc
out
fistpll
sub
push
inc
stc
inc
mov
xchg
sbb
sarl
stos
add
mov
mov
push
mov
mov
or
mov
cmp
subl
sub
loope
rcrl
leave
ljmp
test
mov
stos
xor
cltd
mov
cmc
loope
sbb
cli
and
sub
cmc
cmpsl
arpl
es
hlt
ds
bound
cs
repnz
fsubs
outsl
sub
call
jns
mov
dec
shlb
stos
dec
mull
adc
mov
inc
test
add
popf
cwtl
out
or
inc
shl
fs
popa
mov
aam
mov
lcall
jno
stos
outsl
and
xchg
mov
imul
mov
stos
sbb
pop
test
and
dec
mov
inc
test
add
js
ja
pushf
mov
loop
inc
xor
adc
addb
pop
sub
and
outsb
testl
or
pop
cmp
and
pop
hlt
fldt
cmp
xchg
and
mov
movsl
xchg
xchg
pop
daa
sbb
aaa
pop
arpl
fldl
kmovb
mov
insl
mov
ljmp
dec
mov
std
les
pop
jno
inc
loop
das
mov
sbb
les
sub
mov
imul
mov
add
adc
jo
ss
sbb
add
dec
mov
mov
cmp
clc
dec
out
cmpsb
loopne
aaa
xor
pop
das
sbb
cmpsb
cmp
sbb
into
out
test
out
mov
and
dec
inc
stos
pmullw
sub
aad
mov
imul
int
mov
je
mov
adc
add
pusha
fidivl
sti
cli
sbb
ds
movsl
xor
lcall
push
sbb
cmp
mov
imul
std
jecxz
repnz
outsl
outsb
inc
pop
adc
movsb
add
das
stos
cmpsl
inc
dec
mov
cmc
dec
push
jns
fcompl
outsl
xor
aad
push
mov
push
sbb
ret
insl
xor
aaa
das
jl
loope
pusha
in
mov
pop
cld
mov
add
test
stos
js
test
xchg
fwait
pusha
je
dec
mov
popa
jecxz
xor
add
ficomps
jg
test
jmp
popa
in
push
mov
xchg
test
orl
jl
xchg
inc
xchg
inc
pop
das
mov
push
aaa
pushf
inc
scas
test
outsl
mov
xorb
cltd
out
pop
rcll
dec
repnz
jmp
add
movsl
fsubr
mov
xchg
push
fptan
ds
push
push
popf
cld
push
mov
inc
sahf
xchg
or
mov
addr16
or
inc
push
in
shl
adc
dec
into
shlb
dec
add
xlat
sbb
and
mov
jle
cmpsl
fimuls
mov
xor
xchg
les
mov
sub
xchg
push
cmp
movsb
das
push
fidivrs
mov
ret
adc
sbb
pop
ss
xor
rcl
frstor
adc
rorl
sub
inc
imul
cs
pop
aas
mov
cmc
lods
xchg
xlat
push
mov
stos
mov
jl
cmc
jae
mov
popa
or
xchg
xor
enter
mov
push
mov
cwtd
and
mov
rol
int
repnz
outsl
ret
jecxz
daa
cs
push
sub
jg
inc
cmp
pop
mov
inc
xor
and
adc
notl
cmc
xchg
lods
repnz
push
sub
cwtl
call
dec
cs
lock
nop
push
or
les
inc
sti
push
pop
out
add
das
fs
aad
mov
push
cmc
or
cwtl
pop
mov
jg
insl
mov
and
sbb
mov
dec
test
xor
outsb
add
dec
cmp
inc
xor
adc
icebp
in
rolb
bound
inc
mov
ds
mov
clc
sbb
cmp
aad
xchg
pusha
dec
ret
xor
cmpsl
fisubrl
arpl
arpl
mov
faddl
shll
xchg
and
imull
lcall
adc
push
mov
and
sbb
jb
inc
imulb
add
inc
std
mov
xchg
mov
xor
cmc
pop
sti
flds
inc
fldenv
and
mov
sbb
cmpsl
fcomps
cmp
in
lods
jle
pop
cwtl
and
js
pop
xchg
imul
idivl
cmpsb
mov
push
pop
out
push
std
sbb
fcoml
cmp
ljmp
repnz
and
in
subb
in
orb
sub
inc
jne
adc
adc
xchg
aam
and
cli
push
jb
test
lret
ja
mov
inc
adc
dec
adc
or
push
inc
and
clc
mov
sub
clc
mov
je
add
jb
xchg
in
popa
pusha
sbb
pop
sub
scas
jns
aas
xchg
inc
shrl
cmpsb
sbb
stos
scas
pop
icebp
inc
jno
int3
or
in
inc
add
mov
mov
xchg
cmc
repnz
lret
movswl
push
push
cmp
pop
push
cld
xor
sub
and
sub
adc
mov
or
fisttpl
stos
loopne
fcmovb
rcrl
jnp
test
and
bound
fdivrp
cmp
inc
loop
pop
add
pop
and
mov
leave
out
nop
xchg
lcall
cmp
sub
insl
shlb
xor
outsb
xlat
movsl
js
cli
in
stos
pop
lcall
lret
int
std
lcall
mov
mov
into
pop
add
xchg
fsts
jmp
imul
jb
xor
xorb
cmpsb
repz
inc
cmp
clc
popf
test
or
test
cmpl
je
xor
mov
cmpsb
pop
jmp
sub
mov
rcrb
data16
push
int3
xchg
dec
xchg
cmp
dec
dec
add
aaa
and
push
mov
adc
sub
adc
mov
lods
loopne
lock
sub
xchg
adc
mov
hlt
test
jo
push
imul
mov
mov
insb
push
lcall
add
cmp
cmp
scas
in
pop
and
imul
jo
cmpsl
push
lock
fidivl
jmp
rcll
outsl
cmp
cwtl
fistpl
stos
or
enter
cwtl
push
or
cld
int
push
inc
jg
push
sarl
pusha
iret
jecxz
sbb
rol
std
into
out
ret
xor
std
negl
lods
cmp
cltd
stos
mov
sub
int
adc
xlat
inc
mov
mov
lock
pop
clc
mov
and
xchg
cmp
popf
pop
bound
or
and
loopne
xchg
push
pop
xchg
or
or
xchg
aas
mov
sub
sahf
jne
iret
mov
jns
loop
das
mov
dec
ror
imul
imul
ljmp
and
addb
fidivs
mov
pop
sub
js
lahf
mov
xor
gs
cld
fwait
mov
adc
jmp
cs
test
mov
sarb
dec
push
push
push
xor
addl
stos
push
clc
int3
subl
jne
xor
pop
test
jecxz
lods
push
andb
iret
push
stos
scas
and
mov
hlt
lds
push
fistpl
fistpll
sub
sbb
mov
lea
inc
scas
cli
mov
jne
in
fs
jae
loop
jl
adc
or
jg,pt
or
push
adc
sub
cs
stc
stos
aam
jge
fcoml
aam
ljmp
pushf
push
push
fs
pop
mov
popf
sbb
push
jp
cmp
mov
in
mov
and
jns
or
cli
repz
fildll
jb
lods
jl
sbb
les
ss
mov
adc
jns
sarl
in
lahf
int3
roll
imul
dec
lcall
adc
or
subl
out
subb
fs
aas
or
add
or
dec
js
out
or
inc
pusha
jg
movsl
pop
ds
and
adc
fstpl
add
mov
xor
mov
pop
push
and
mov
mov
daa
stos
ror
scas
mov
mov
pusha
jnp
imul
lret
pushl
xchg
xchg
cltd
pop
pop
shlb
cmp
adc
xchg
rol
mov
add
pusha
mov
xchg
decb
call
sub
sti
or
jb
mov
adc
pop
sti
repnz
mov
mov
repz
and
mov
in
out
shrb
test
and
enter
cwtl
popf
aaa
push
adc
adc
or
ja
nop
pcmpgtw
dec
lret
aaa
mov
ds
mov
mov
cmp
stos
scas
cs
mov
sbb
mov
cmp
shrd
ud0
add
pop
inc
cmpsb
mov
arpl
iret
loope
jecxz
dec
stos
out
xlat
ret
push
int
xor
adc
shlb
pop
sub
xchg
aad
cltd
push
xor
jg
pop
push
push
pop
dec
insl
xor
xor
aaa
test
xor
and
adc
xchg
pop
imulb
lahf
ret
xchg
ret
ss
insl
mov
xchg
cmp
clc
mov
lahf
imul
mov
out
test
adc
not
sub
xor
pop
xchg
stos
mov
sbb
sbb
dec
push
iret
jb
mov
inc
dec
ja
icebp
xchg
cmc
push
adc
xchg
cmpsl
xchg
and
jg
mov
fs
cwtl
rcll
jnp
sbb
and
mov
adc
xchg
dec
jb
jmp
mull
hlt
and
cltd
mov
les
cmp
push
outsl
fadd
fs
pusha
fs
jl
mov
dec
scas
aas
adc
xor
mov
fmul
pop
sbb
add
clc
call
scas
gs
push
sub
xchg
adc
sbb
xchg
movl
mov
xchg
add
pop
jecxz
add
stos
inc
push
cmp
lods
jp
adc
dec
pop
stos
lock
dec
dec
mov
push
adc
in
mov
and
xchg
jno
sarl
lret
or
pushf
shr
sub
imul
bound
loope
mov
lods
dec
pop
nop
xchg
adc
scas
xorl
sub
repz
pop
or
iret
nop
test
sbb
in
testb
mov
hlt
test
data16
pusha
rorl
inc
mov
adc
mov
cwtl
into
mov
call
jp
mov
mov
fwait
les
scas
sub
or
repnz
inc
rcrb
outsb
xchg
xor
pusha
add
push
push
push
mov
lock
pop
int3
addr16
fwait
aas
ds
add
lds
mov
incl
js
sub
mov
fsubp
jg
mov
inc
mov
out
test
in
iret
in
into
call
pop
or
fsubs
inc
sub
inc
test
or
push
mov
fwait
in
mov
scas
aaa
out
ja
in
sbb
cltd
je
xchg
pop
fidivl
lea
loopne
lds
out
dec
jnp
mov
dec
test
icebp
dec
lods
dec
loope
mov
out
cli
push
ss
mov
aaa
mov
sbb
pop
mov
ljmp
mov
lods
cmpsl
sbb
mov
mov
push
inc
sub
push
mov
lds
push
out
mov
leave
std
arpl
mov
cmc
mov
das
and
js
push
push
cmp
in
mov
mov
add
mov
mov
jnp
jb
popf
into
arpl
ljmp
and
inc
cld
dec
jecxz
clc
subb
sti
mov
add
scas
scas
pop
adc
dec
popf
imul
xchg
dec
sti
das
mov
rolb
sbb
shll
lods
push
xor
push
add
dec
xchg
xchg
in
mov
rcrl
cld
sbb
lret
sbb
in
notb
push
xchg
sbb
and
xchg
dec
mov
aam
jp
fdivr
mov
popa
inc
mov
fistps
movsl
ss
push
cwtl
cmp
xor
xchg
sbb
xorl
ret
popa
push
cmp
push
stos
dec
bound
xor
in
sbb
out
cli
clc
mov
div
add
dec
mov
mov
mov
mov
mov
jnp
add
stos
inc
sbb
add
adc
lods
mov
inc
mov
das
shlb
sbbb
ljmp
test
mov
in
insl
cmp
add
sbb
scas
xor
inc
add
popa
inc
stc
leave
and
pop
or
stos
insb
pop
inc
or
jae
in
mov
shll
in
cmp
push
clc
sahf
pop
jo
mov
and
sub
dec
or
sbb
lea
jns
cmp
adc
xchg
push
adc
xlat
mov
add
xchg
push
xor
push
jp
push
sarb
out
shrb
inc
or
iret
clc
sub
and
push
push
test
test
cmc
mov
fsubrs
repnz
push
and
cwtl
daa
jbe
nop
mov
cmp
pop
fs
jge
dec
inc
mov
add
call
and
jb
cmp
xchg
push
adcb
shl
cld
movsl
or
fcoml
push
orl
hlt
cmp
sbb
stos
xor
jmp
xchg
arpl
mov
sub
xchg
pop
sbb
data16
sub
cli
xchg
xchg
mov
mov
imul
insb
shrb
adc
pop
mov
sub
or
hlt
lock
cmp
cmc
icebp
xchg
xor
repnz
rclb
jmp
sub
adc
push
jno
push
add
sbb
icebp
mov
jb
xchg
test
push
test
loopne
cmp
adc
aad
cli
sbb
jle
xchg
ds
test
push
mov
movsl
pop
ret
or
add
hlt
add
jecxz
movsb
cwtl
and
jnp
sub
pop
push
push
xchg
fsubrs
in
xor
dec
dec
lods
sub
mov
jo
push
stos
or
lds
mov
stos
fbstp
or
dec
rcrl
jg
mov
push
xchg
xchg
adc
or
pop
sti
xchg
push
cmp
push
xchg
fdivrs
add
cmpsb
loop
ret
adc
adc
mov
dec
inc
sub
jne
cmpsb
in
dec
cmpsb
xchg
push
addl
add
dec
adc
add
xlat
add
sets
pusha
push
inc
or
imul
sbb
xor
jb
push
push
mov
mov
mov
inc
xor
insb
repnz
add
sbb
inc
push
ljmp
xchg
in
mov
ss
jo
cmp
fwait
lods
pop
fimull
mov
jge
popa
pop
push
shrb
inc
push
sbb
or
pop
iret
xor
in
fisttpl
mov
sbb
imul
test
das
test
mov
pop
sbb
aad
mov
cld
incb
add
jno
add
femms
jae
ja
xchg
pop
mov
xchg
je
adc
adcl
pop
push
cmovno
push
arpl
cmp
shr
inc
inc
jno
fcomps
pop
cmp
jo
or
imulb
sbb
push
js
nop
sti
dec
imulb
or
mov
xor
jp
inc
cltd
mov
inc
iret
cmp
push
int3
pop
in
int
xor
cld
or
imul
xlat
fistl
push
sub
mov
or
in
subl
adc
pop
push
xor
std
sbb
mov
shrd
xchg
dec
outsb
sub
xchg
push
xchg
les
bound
scas
mov
test
aam
fstpl
pop
cmpsb
test
mov
and
cmp
out
and
sbb
fisubl
jge
insb
mov
mov
mov
pop
jns
dec
inc
xlat
xor
jl
push
pushf
mov
lcall
sbb
mov
test
test
loope
scas
jns
push
mov
les
xor
xor
shr
ds
pop
pusha
cmp
inc
movsl
popf
fs
pop
xchg
rorb
jmp
loope
call
sbb
xchg
adc
lods
jns
pop
call
push
xchg
push
push
and
sub
call
sarl
jno
sar
jle
pop
jno
push
xor
xlat
mov
sbb
sbb
clc
push
cwtl
mov
shrl
inc
fldt
jl
cpuid
sub
xor
jg
dec
repz
sub
jp
jecxz
sbbb
pop
lock
add
int3
mov
or
sbb
out
and
and
xchg
push
dec
or
mov
dec
testb
push
imul
repnz
out
lods
fwait
jmp
cmp
in
jbe
loope
lock
insb
daa
or
pop
rcll
test
or
push
jmp
xchg
dec
popf
mov
cli
jne
pop
and
cmp
dec
xlat
loope
fmull
scas
enter
int
dec
mov
movl
and
cmp
mov
lock
cmp
push
sub
xchg
loope
stos
xchg
loope
xor
fcoms
insl
enter
lret
in
scas
arpl
mov
push
sbb
lock
das
mov
daa
xor
jae
int3
sti
into
pop
jl
leave
push
adc
std
fld
lahf
sub
mov
outsl
push
in
sbb
push
jmp
cwtl
push
xlat
sahf
jmp
lods
mov
enter
dec
xchg
and
fnstenv
insl
cmpsb
mov
fstpl
and
adc
sub
add
lret
out
inc
loope
loopne
jecxz
jge
in
or
cmpsl
cmp
cmp
insb
fucomp
fs
cmpxchg
fldl
imul
dec
outsb
cltd
sbb
inc
movsb
test
add
ret
mov
stos
sub
mov
or
sub
sbb
mov
adc
test
in
sti
stos
ljmp
shlb
xchg
nop
cmp
loope
out
int3
sub
xor
ret
mov
jge
or
mov
and
sub
les
xchg
mov
dec
inc
pop
mov
push
push
insl
imul
jne
lret
xchg
insb
and
dec
out
std
cmpsb
cs
sub
insl
xor
inc
js
lds
rorb
sbb
lahf
jb
pop
inc
insl
mov
adc
add
cmp
mov
xor
enter
dec
mov
lock
xor
push
shl
push
push
shl
scas
jmp
pop
std
lret
xchg
imul
les
mov
adc
in
repz
or
mov
lcall
fs
push
and
inc
dec
cmpsb
lret
negl
mov
js
arpl
xchg
sti
stos
pop
xor
dec
dec
movsb
fwait
dec
orb
mov
stc
push
ss
cld
pop
loopne
lds
pop
cmc
das
into
mov
xchg
mov
inc
adc
daa
aad
data16
inc
jne
subb
iret
repz
decb
push
test
js
je
hlt
fldenv
ret
enter
inc
ds
sbb
xor
xchg
aas
pop
movsl
scas
scas
ret
jp
rcr
pop
mov
out
cwtl
xchg
mov
push
cmp
mov
jno
jle
cmpb
and
mov
sub
andl
dec
push
lods
push
je
mov
andb
pushf
sbb
cwtl
push
push
adc
mov
test
clc
call
dec
ficoml
and
or
outsl
fstl
push
mov
xor
int3
rorb
sub
sub
sahf
repnz
sahf
dec
shlb
xor
sarb
add
out
in
aam
repz
mov
les
stc
std
jnp
daa
adc
mov
jb
popf
iret
fld
mov
sub
jmp
mov
pop
xor
fwait
push
or
jnp
xor
outsb
int
push
fbld
jle
aaa
lock
pminsw
fbstp
mov
mov
mov
outsb
mov
lods
jg
aas
push
data16
inc
add
sbb
add
pop
sbb
push
cmp
pop
arpl
mov
sbb
mov
sub
jp
leave
xchg
les
pop
mov
fucom
subl
jmp
mov
dec
pop
mov
mov
fxch
loope
jnp
enter
icebp
jb
jp
xchg
inc
rorb
sbb
and
inc
push
jno,pn
cmpsb
iret
jmp
add
stos
divps
je
idivl
xchg
push
jae
aam
mov
scas
or
lea
arpl
les
scas
mov
add
test
cwtl
adc
aaa
sti
les
lret
cmp
cmp
leave
add
mov
adc
dec
inc
stos
sbb
lods
rcrl
pop
movsb
cmc
pop
dec
imulb
jae
lods
mulb
add
gs
mov
outsb
jne
idivl
je
cltd
mov
xorl
nop
pop
dec
add
jb
mov
clc
add
ror
addr16
je
xchg
add
mov
and
inc
jp
ja
sub
addr16
pop
test
in
push
push
fadds
out
jg
jmp
push
add
push
shll
jg
leave
cs
sbb
stos
js
mov
leave
loope
sbb
repnz
loope
movsb
arpl
arpl
jne
or
mov
fstpl
cmp
scas
stos
and
in
add
sbb
imul
shl
add
pop
es
outsb
jecxz
es
icebp
rorl
notb
sub
inc
in
add
and
mov
pop
scas
data16
cmpsl
mov
pop
mov
jl
jp
push
or
xchg
lret
daa
outsb
add
stos
aam
mov
or
icebp
test
mov
bound
jge
pop
iret
jg
pushf
xchg
jo
repnz
sub
bound
or
jle
pusha
les
cmpl
xor
in
addr16
xchg
mov
pop
faddl
in
inc
and
pop
out
fnstcw
pusha
inc
pop
and
repz
xchg
jne
arpl
sub
inc
sbb
daa
mov
popf
mov
fs
test
sbbl
mov
lock
pushf
pop
mov
inc
xchg
dec
out
int3
insb
mov
shlb
clc
mov
lcall
insl
pushl
mov
loope
cmp
imul
dec
dec
and
les
push
cmp
neg
mov
lds
lods
cwtl
lcall
mov
adc
pop
out
add
loope
inc
mov
jns
out
jecxz
or
aaa
adc
mov
lock
inc
mov
icebp
mov
adc
int
nop
jle
mov
jp
inc
cltd
aas
or
push
cmp
add
fsubl
lahf
pushf
fmuls
test
fs
sarl
inc
and
sbb
fisubrl
fimuls
or
inc
inc
call
outsl
into
xor
leave
mov
lcall
aad
mov
rolb
lock
into
pop
xor
or
lods
or
mov
jne
loope
mov
leave
xchg
mov
ja
aaa
fsubrs
pop
hlt
or
aad
sahf
xlat
loopne
imul
rolb
fs
adc
jp
psubsb
mov
mov
imull
xchg
cmp
pop
sub
scas
pop
pop
call
or
push
or
jo
adc
jbe
mov
sub
lret
push
sub
jge
xchg
insl
leave
dec
adc
jecxz
mov
iret
jae
adc
ret
pop
add
pushf
lds
fwait
jne
int
xchg
fwait
push
imul
cwtl
add
sar
adc
mov
out
ss
pop
pushf
ljmp
adc
and
cli
adc
loop
jns
dec
mov
jecxz
push
push
mov
pop
aaa
and
sbb
popl
insb
mov
addl
inc
test
xor
jb
nop
and
outsl
mov
pop
stc
jmp
jg
lcall
jae
fdivr
and
iret
sub
sbb
mov
fsubl
test
mov
cwtl
in
xchg
and
push
mov
div
and
lret
clc
pushf
movsb
pop
xchg
mov
pop
jecxz
push
sbbb
xor
pop
cli
or
xchg
stos
cmpl
lods
dec
loopne
in
loop
lods
and
xchg
test
enter
push
hlt
popa
mov
xchg
and
in
repz
bound
xchg
sub
in
out
loop
ss
jge
stos
sbb
or
shll
and
icebp
in
mov
pop
inc
or
or
adc
loop
add
adc
or
push
pop
push
popa
mov
aad
hlt
dec
in
jbe
mov
lret
and
mov
and
mov
pop
push
xor
std
xchg
pop
mov
mov
mov
xchg
pop
push
movsl
movsl
add
jns
cbtw
in
mov
add
icebp
xrelease
or
adc
les
fisubrs
pushl
btsl
xlat
sbb
ja
scas
scas
sub
adc
imul
clc
xor
mov
pop
out
xlat
test
scas
sub
cmc
into
lds
pop
movsl
pushf
mov
imul
cmpsl
loopne
int3
sub
mov
mov
sub
mov
or
vorpd
mov
movsb
inc
cld
punpcklwd
and
fisubs
movsl
dec
xchg
jae
or
mov
or
ficomps
lods
sbb
jg
dec
mov
loop
insl
xchg
push
xchg
mov
dec
add
jns
mov
xchg
movsl
push
jg
dec
jp
stc
cmp
pushf
dec
push
lods
inc
push
xor
mov
dec
lcall
cld
fbld
mov
repnz
jno
repnz
mov
insb
inc
mov
ljmp
cwtl
jp
jmp
inc
mov
push
repnz
pop
xlat
cmc
jb
fadd
mov
roll
push
lea
bound
cmpb
outsb
and
cltd
hlt
mov
sub
xor
mov
test
sbb
pop
dec
xlat
xlat
push
lahf
data16
out
stos
and
out
push
mov
fsubrs
mov
pop
je
cli
push
std
cs
and
bound
inc
cwtl
cs
or
je
mov
pop
lret
shll
or
stos
ficoml
jle
test
mov
jne
cwtl
mov
movsl
cmp
add
xchg
mov
pop
pop
sub
mov
lods
incl
jl
mov
vandnpd
push
inc
xor
mov
std
mov
jp
and
push
in
mov
sti
inc
pop
enter
cwtl
mov
or
add
xor
xor
pop
loopne
and
inc
dec
sub
nop
fldl
sub
outsb
mov
cmpsb
jns
adc
fwait
jg
jnp
icebp
sbb
loop
and
loope
mov
inc
out
mov
mov
repnz
sub
push
outsb
add
or
pop
cmpsl
mov
xchg
fidivrl
jnp
movsl
cltd
jne
inc
data16
jge
push
pusha
push
inc
test
jbe
cmp
sbb
test
imul
mov
cmc
jnp
outsl
fstpt
les
test
jns
int3
mov
arpl
sbb
mov
or
inc
cmp
push
cmp
add
mov
std
mov
jge
cmp
enter
pop
adc
sbb
mov
mov
dec
xchg
jmp
inc
test
pop
sbb
pop
orl
in
out
out
in
rol
lods
mov
call
cmpsb
pop
int
loopne
sbb
into
pop
xchg
into
jg
sbb
or
call
cmp
es
adc
inc
movsl
inc
sbb
mov
and
push
loopne
cs
int
and
dec
and
insl
repz
ljmp
push
insl
add
mov
in
pop
pop
sbb
or
stos
mov
push
inc
clc
das
mov
dec
nop
push
sti
and
pushf
out
mov
sub
mov
in
movsl
xchg
dec
test
inc
mov
push
sbbb
xchg
add
fiaddl
cld
dec
out
push
stc
mov
out
mov
movsl
test
xor
jl
jg
icebp
mov
cld
ljmp
dec
bound
outsl
filds
pop
sahf
inc
cld
insl
and
lret
rcrl
mov
push
inc
add
cli
push
fnstsw
jmp
xor
mov
xorb
insl
inc
aad
imul
adc
xor
sarl
pop
out
jo
enter
in
mov
xlat
mov
jecxz
jmp
imul
out
out
xor
negb
mov
je
and
jmp
nop
push
fs
dec
mov
push
test
mov
push
shlb
cmp
add
and
insb
mov
imulb
cli
stos
push
or
iret
das
enter
cmp
mov
fwait
bound
jmp
sub
pop
jg
aaa
cmc
test
mov
pop
test
das
and
stos
push
jp
mov
in
movq
mov
push
xchg
adc
cmp
add
scas
jb
movsb
ret
mov
mov
fisubrs
shr
pop
jl
icebp
push
ss
lahf
xchg
cmp
shl
lret
mov
daa
pop
jle
push
adc
mov
sti
xchg
imul
outsb
idiv
cmp
data16
out
mov
aaa
gs
push
dec
pusha
push
jmp
icebp
stos
sub
adc
lock
cmpsl
inc
loop
or
cmp
xchg
fdivrl
adc
dec
imul
inc
negb
insl
ss
in
mov
pop
rcll
mov
lret
in
fsubrl
sbb
dec
mov
sub
adc
jmp
fldenv
sti
or
fs
ljmp
loopne
add
xchg
dec
mov
pop
movsb
test
adc
insb
out
pop
cmc
mov
inc
das
dec
push
out
jb
rcrb
and
mov
scas
xor
pop
les
iret
fnsetpm(287
pop
mov
mov
adc
xchg
or
rol
pop
nop
xchg
push
gs
pop
pop
mov
lock
mov
mov
push
daa
leave
mov
testb
push
add
jmp
xor
jns
mov
xor
mov
mov
jge
and
push
sub
adc
inc
ljmp
sahf
vmwrite
mov
and
add
xchg
jo
popf
dec
test
clc
add
fsubl
dec
xchg
xor
daa
mov
jecxz
fstpl
outsl
bswap
ss
lret
mov
or
push
mov
fcompl
insl
inc
mov
jb
jge
push
cmp
or
nop
popa
fnstsw
cmp
jns
push
jle
fwait
rcrl
cwtl
sub
outsb
and
xor
aaa
mov
notb
out
xchg
stc
or
leave
push
fxch
mov
int
test
orb
and
inc
les
cmp
out
mov
mov
movsl
xorl
cmp
jecxz
test
insl
rclb
cmc
xor
sub
add
xor
ds
loopne
ret
mov
dec
mov
icebp
into
scas
sbb
decb
and
shr
int3
or
outsl
mov
stos
mov
mov
test
cmp
dec
jmp
ret
pop
xor
leave
scas
dec
mov
push
mov
loope
in
inc
or
push
sahf
sub
xorb
adc
push
lret
dec
sarb
js
push
dec
sarb
repz
lods
cmp
imulb
add
lods
sub
gs
outsl
ja
xor
clc
mov
mov
in
mov
scas
jns
xchg
xlat
stmxcsr
mov
jge
xor
sub
push
mov
fildl
es
fbld
jbe
mov
sbb
xor
lret
and
dec
or
fisubrl
es
inc
mov
xor
lods
pop
cmp
inc
dec
add
insb
push
sti
sbb
enter
sbb
jle
pop
adc
sub
jg
aad
mov
mov
xchg
cld
push
jbe
mov
int
or
sub
in
xchg
das
xchg
mov
cmp
mov
and
or
lock
push
lds
pusha
push
sbb
test
adc
push
pop
add
scas
out
scas
scas
inc
cltd
xor
xchg
and
insl
mov
divl
mov
jno
std
and
ret
push
gs
jbe
clc
adc
aam
pop
icebp
sbb
into
enter
fnstsw
and
dec
xor
test
push
fadd
rcl
and
push
outsl
scas
xchg
in
pop
movsl
xchg
daa
insb
mov
ret
or
je
cmp
pop
pop
repnz
stos
cmpsb
xchg
stos
loop
fimuls
out
push
jnp
dec
imull
mov
cs
lret
ffree
xchg
movsb
push
and
rorl
sub
push
push
xchg
sbb
and
cmp
stos
xor
ss
pop
mov
push
and
movsb
pop
popf
or
outsl
mov
sub
ret
mov
pop
mov
cvtps2pi
shll
out
and
dec
sub
add
mov
les
pop
fistl
out
mov
das
mov
out
xchg
mov
mov
mov
iret
push
pusha
bound
mov
pop
lahf
add
xchg
dec
ljmp
xchg
rcrb
movsb
pop
xlat
imul
dec
and
sub
sub
jb
mov
xchg
scas
inc
nop
js
shll
add
sbb
dec
shll
std
das
push
push
cltd
push
pop
ja
jo
mov
dec
add
sbb
push
push
jae
dec
push
jmp
fldenv
mov
sarl
fsubl
movsb
push
loop
and
in
scas
aad
sub
push
push
aas
mov
jns
xchg
ficoml
mov
dec
dec
pop
movsb
mov
sbb
imul
cmp
js
outsl
jl
insb
xchg
outsl
and
push
addb
mov
out
or
shl
and
fldl
adc
xchg
out
sub
xchg
jge
dec
stc
push
mov
mov
push
mov
jb
cmpsb
jmp
imul
out
popl
sbb
test
xchg
aas
daa
cmpsb
orb
cmc
jnp
into
push
pop
sbb
inc
in
and
pop
jbe
pop
adc
js
jmp
addr16
cmc
into
mov
cmp
push
sti
mov
std
cmpsl
lcall
jb
sub
jp
out
mov
xor
mov
fdivs
fisttps
sbb
test
lea
push
ljmp
pop
sub
jb
push
neg
dec
int3
ret
adc
sbb
jp
adcb
adc
mov
inc
or
fildll
pushf
pop
mov
es
pop
xchg
inc
scas
xchg
int3
xchg
cmp
loop
in
add
push
aas
dec
and
jge
jno
loopne
popf
decb
test
mov
xchg
jns
pop
cli
fisttps
sti
sbb
push
xchg
pushf
fwait
outsl
xchg
push
mov
scas
mov
cwtl
dec
cmp
sbbb
repnz
mov
push
dec
enter
ffree
idivl
fsub
xor
imul
adc
pop
mov
test
fst
popf
test
or
push
imul
sbb
inc
push
xor
js
out
push
mov
scas
out
mov
xchg
mov
jb
fcom
pop
inc
add
add
push
rorl
cmpsb
pop
or
dec
jl
test
mov
shrl
xchg
sbb
sbb
lds
fsubp
call
pusha
pop
pop
out
jbe
sub
in
fnsave
insb
sbbb
mov
int3
ret
sbb
xlat
add
test
stos
adc
lret
outsl
pop
mov
es
inc
pop
mov
pop
sbb
popa
and
daa
movsl
out
push
or
shl
movsb
icebp
shl
rcrb
add
pushf
icebp
jecxz
fimull
and
pusha
sbb
cli
mov
fs
push
xor
andl
cmp
push
lea
mull
popf
sub
pop
cltd
outsl
lods
ret
repz
and
adc
dec
loope
dec
or
scas
enter
movsb
jle
ret
adc
xchg
mov
add
repz
inc
mov
jmp
in
push
mov
mov
mov
call
shll
lret
push
sub
mov
sbb
icebp
push
lock
push
rcrl
hlt
je
enter
aad
aas
hlt
mov
sbb
push
test
insb
iret
sub
cltd
mov
icebp
cmpsl
xchg
icebp
mov
repnz
ja
sub
mov
xlat
jmp
imul
sub
popf
fs
jl
sub
xor
push
ja
mov
xor
loope
mov
cmpsl
pop
or
lods
jmp
cmp
dec
dec
jl
sbbb
mov
in
jno
aam
inc
idivl
es
sahf
xlat
pcmpeqd
push
push
xchg
jo
jge
xor
xor
movsl
mov
into
popa
xchg
jg
sarl
mov
dec
xchg
int
add
pop
add
lret
ficomps
pop
not
xor
sub
add
dec
inc
cs
sbb
jp
aad
jg
or
in
repnz
xor
xor
xor
aaa
mov
std
xor
add
push
and
paddsb
xchg
cmp
xchg
adc
sahf
mov
sahf
or
xor
sbb
jb
fwait
rclb
fadd
test
mov
jl
sti
fcmovnbe
js
xchg
fmull
jnp
clc
les
arpl
jnp
popa
and
push
ljmp
cltd
dec
call
or
stos
data16
push
sbb
test
mov
inc
cmp
mov
add
cmp
adc
push
pop
nop
js
cmp
test
mov
js
sahf
popa
fisttps
insl
or
add
lea
mov
xchg
popf
xor
inc
aas
adc
xchg
mov
in
cmp
push
dec
xchg
pop
cs
mov
pop
sarl
and
xchg
dec
mov
push
mov
fsubr
dec
pop
popa
data16
or
mov
jbe
adc
imul
insl
enter
mov
xchg
ret
and
dec
mov
imul
cmp
test
fstpl
push
xor
lcall
dec
xchg
int3
mov
in
mov
and
std
pop
cmpxchg
and
jns
popf
in
jp
mov
stc
jecxz
sub
mov
push
das
dec
mov
fucomi
stc
leave
push
leave
mov
imul
addr16
test
and
dec
insl
inc
sarb
cmp
rorl
sbb
ret
sbb
nop
sub
call
ret
xor
sbb
jbe
leave
sub
cmc
pop
mov
ftst
pop
xchg
mov
add
fchs
es
lods
dec
xchg
dec
jnp
cs
jo
cmpb
cltd
and
inc
adc
loop
in
stc
sbb
and
mov
mov
and
scas
lods
std
cmp
inc
test
bound
cli
cmpb
lret
imul
sub
or
es
sub
jno
lcall
sar
dec
mov
popa
and
mov
mov
mov
lret
push
jnp
push
pusha
je
pusha
inc
rol
pop
int3
xor
lea
sbb
gs
call
sub
cmpsl
push
and
inc
and
insb
fcoml
mov
adc
shll
add
cmpsl
pusha
inc
or
pop
sti
aaa
decb
pop
jo
jp
inc
into
jno
push
cli
jbe
fsts
pop
insb
pop
mov
mov
aad
jmp
pop
movb
mov
into
lods
jae
dec
loopne
fldl
pop
mov
xor
mov
xchg
push
mov
sarb
test
mov
fnsave
fldenv
push
add
mov
jo
jmp
dec
jmp
punpckldq
and
shll
pop
push
or
outsb
inc
cmc
es
inc
test
lret
insb
cmp
and
cmp
dec
pop
mov
xchg
mov
cmp
push
xchg
hlt
mov
out
mov
xchg
leave
shl
push
pusha
xchg
add
push
mov
sbb
cmp
out
or
and
testb
jmp
push
daa
mov
push
dec
cld
cmp
loopne
outsl
mov
adc
daa
dec
cmp
imul
inc
fwait
into
cmp
jl
shrl
dec
jl
pusha
pop
in
push
scas
call
jae
xchg
in
xor
sub
shll
popa
adc
push
stos
stos
iret
jnp
add
xchg
fisubrs
mov
movsl
push
out
push
mov
and
jb
jb
or
lcall
xor
enter
jb
out
lahf
xlat
mov
mov
mov
xchg
scas
je
cmpsb
scas
lea
jmp
xchg
lock
fldt
fldcw
int
sbb
mov
inc
push
in
push
fwait
pop
mov
jg
xor
mov
aaa
add
lds
pop
mov
repz
out
dec
push
sub
cmpb
std
enter
lods
sbb
mov
jmp
fsubl
push
sub
pusha
push
sbb
mov
out
pop
jbe
imul
ss
xchg
aas
sti
cli
fldcw
adc
hlt
mov
jg
push
pushf
mov
push
arpl
sbb
out
aam
xor
xchg
add
loop
addr16
adc
mov
adc
repz
testl
loop
jg
mov
pop
iret
fidivrs
add
cwtl
mov
or
cmovg
inc
xchg
pop
ds
cmp
mov
rep
push
push
fs
mov
aas
jnp
push
cmp
push
fucom
ret
pushf
push
std
movsl
aas
rcr
ja
adc
mov
xchg
popf
adc
xlat
incb
ret
sub
out
jle
sbb
cmpsl
in
sub
shrb
out
fldl2t
jmp
enter
push
dec
nop
cmc
mov
xor
incl
xchg
frstor
fdiv
inc
pop
xchg
rcr
pushf
push
je
rorl
cmp
pop
jge
add
sbb
add
cli
clc
ficompl
xor
pop
enter
pusha
sbb
loope
stos
mov
jmp
jne
and
enter
sbb
adc
loopne
repz
sub
mov
xor
mulb
add
test
cmp
std
outsb
jecxz
mov
mov
outsb
rcr
out
loopne
or
lret
adc
push
xor
es
dec
aas
aad
scas
fcmovbe
jb
cmp
adc
rorl
and
aaa
push
popl
inc
adc
xchg
and
fiadds
inc
loop
fs
pusha
fcmovne
sti
int3
sbb
in
rol
pop
dec
aaa
xor
mov
pop
pop
data16
adcl
in
pushf
jg
mov
mov
mov
divl
jno
inc
pop
out
xchg
loope
cmp
sub
int
cmp
push
icebp
rcll
stos
pop
pop
icebp
add
shlb
sub
imul
and
mov
mov
shrb
sarb
xchg
daa
lcall
jp
sub
jae
movsb
out
adc
push
mov
mov
sbb
and
addr16
mov
imul
fld
mov
sub
rcll
sbb
mov
enter
aaa
popf
sbb
push
adc
dec
hlt
call
lods
adc
mov
xchg
seto
sbb
adc
subl
add
gs
dec
mov
not
sbb
stos
mov
xchg
or
data16
sbb
cmp
aad
push
shll
inc
dec
pop
sbb
pop
lds
mov
cmp
lock
mov
add
mov
inc
sahf
aaa
xchg
test
cmp
sbb
notl
sahf
in
sbb
mov
inc
mov
loop
ljmp
mov
leave
cmp
sbb
push
ret
xchg
mov
mov
aaa
fwait
dec
inc
ss
xchg
xor
mov
or
ret
test
rclb
int3
xchg
inc
scas
dec
cli
xlat
lods
sub
lahf
pop
stc
mov
aas
pop
push
sbb
mov
adc
cmp
cltd
call
dec
addr16
add
adc
jno
std
ljmp
xchg
mov
sbb
stos
rorb
insb
mov
test
ds
rcl
and
xchg
imul
repnz
sti
repnz
arpl
or
icebp
imul
xor
aam
daa
cmp
lods
addb
xchg
xchg
sbb
jmp
ds
jg
xchg
inc
mov
rcrb
gs
packssdw
push
jno
out
cld
jg
das
mov
pop
ret
addl
cmp
sbb
mov
xchg
cmp
roll
jp,pt
push
mov
sbb
and
mov
imull
xchg
leave
add
flds
sub
push
fistpll
or
xlat
adc
flds
sub
js
lods
xchg
xor
lods
out
xchg
push
mov
push
xchg
sarl
or
bound
shlb
gs
nop
mov
add
jmp
inc
notl
je
bound
les
cmp
add
dec
push
dec
xchg
mov
inc
inc
iret
inc
mov
pop
mov
xor
bound
pop
pushf
xor
orl
call
fsubl
pop
jle
and
jo
mov
dec
sbb
xchg
call
add
jnp
shrb
cli
jp
adc
lcall
es
push
adc
xor
add
insb
add
stos
test
cmp
cmp
or
shll
in
fistpll
jno
ja
inc
jo
push
mov
pop
jb
arpl
std
outsb
popa
xchg
sti
sbb
mov
out
and
or
adc
lcall
xor
or
pop
adc
dec
sub
mov
ret
pop
xchg
push
mov
pop
add
xor
inc
dec
jns
jg
pushf
pop
push
in
xchg
xor
mov
xchg
mov
jno
mov
daa
ss
test
sub
call
iret
loope
gs
imul
dec
mov
xchg
add
xchg
sbb
fisubrl
popa
aaa
ret
pop
xor
inc
and
xchg
xchg
adc
xchg
dec
jecxz
icebp
xor
in
xlat
outsl
sti
dec
scas
insl
sub
roll
xor
jl
stos
icebp
xchg
pop
test
jg
es
into
inc
xor
rcr
cmp
pop
inc
fldt
jbe,pn
cmpb
push
shlb
ss
inc
xchg
das
icebp
sub
rolb
dec
notl
popa
pushf
jne
or
call
jo
test
scas
in
aaa
ljmp
insl
hlt
fsubrl
cld
sub
scas
inc
scas
call
cltd
loop
leave
inc
xchg
pop
enter
je
mov
jecxz
mov
push
jg
addl
test
jge
stc
jno
inc
add
cmp
mov
push
scas
fnsave
mov
sbb
fwait
cmp
ret
push
loopne
outsl
xlat
dec
jne
aaa
dec
aam
lds
mov
ljmp
or
cmp
xchg
dec
jl
adc
push
pop
xchg
push
lea
mov
xchg
pop
jnp
sub
out
enter
sbb
in
les
mov
push
inc
sbb
mov
gs
mov
mov
imul
inc
sub
imulb
jo
sbbl
leave
testb
inc
xor
jecxz
or
outsb
add
in
fnstsw
push
pop
pop
fwait
hlt
push
or
or
add
xorl
sbb
xor
pop
mov
in
ret
es
sahf
cmpsb
sub
test
js
bound
sar
cmc
and
lods
mov
sub
mov
push
aad
push
andb
stos
sahf
das
mov
and
dec
inc
sub
ljmp
mov
sti
outsb
les
je
lods
es
mov
cmp
stc
cli
rol
sub
and
push
inc
sbb
scas
xor
pusha
loope
int
cmp
add
orb
mov
gs
loope
xor
jg
fildll
jo
sbb
jbe
mov
jo
mov
enter
or
sbb
sbb
inc
and
shlb
rcr
mov
jnp
cs
fnstsw
movsb
pop
jnp
out
mov
sub
cmc
fimull
xchg
cmp
adc
outsb
into
sarl
pop
mov
into
dec
stos
xor
push
or
repz
adc
push
cmpsl
mov
sahf
push
mov
clc
bt
addb
fisttpll
and
in
call
cmp
lea
enter
mov
lret
call
cmpsb
dec
and
sub
xchg
test
mov
mov
push
sti
cli
aaa
xor
and
jecxz
cmp
movsl
mov
arpl
dec
mov
xor
add
xchg
pop
push
mov
je
fwait
dec
xor
scas
lods
adc
or
repnz
and
les
fstl
nop
or
pop
ss
jge
push
add
dec
mov
xchg
outsb
out
jns
addr16
cs
mov
adc
and
mov
dec
cmp
pop
lret
xor
sub
mov
data16
dec
mov
sbb
scas
fidivrs
add
xor
push
mov
ss
sbb
push
test
cmp
push
or
lods
sub
insb
fdivrp
out
lea
sub
xor
pop
mov
inc
pushf
mov
out
data16
ss
sbb
jno
aas
sub
mov
lcall
aas
mov
lds
inc
xor
sarb
jns
dec
jmp
in
jns
cli
ror
pop
add
pop
jno
and
and
ds
sub
in
push
push
jl
inc
xlat
xchg
mov
or
dec
adc
mov
mov
sbb
mov
stos
xchg
cmp
insb
in
bound
pushl
pop
and
dec
push
dec
push
ja
adc
pop
fcomps
sbb
scas
pop
aad
mov
sbb
mov
stos
sti
je
stos
mov
sti
and
stc
inc
pop
jg
cmpsb
cmp
jbe,pt
test
sub
xor
pop
shrb
adcb
adc
xchg
cmp
pop
fidivrl
mov
pop
repz
push
repnz
pop
or
les
enter
cmp
insl
daa
scas
dec
mov
je
and
test
dec
cmp
clc
popa
jmp
sub
sub
orb
scas
and
sub
loopne
popa
and
dec
mov
pop
in
jecxz
lcall
pop
fstpl
lds
push
repz
jecxz
adc
stos
xor
inc
and
mov
pop
div
je
out
aam
scas
shll
mov
lret
ss
xor
inc
sahf
stos
xor
bound
rcll
cmpl
mov
or
ljmp
push
sub
int
aad
scas
stos
jbe,pt
das
int3
mov
push
jbe
iret
pop
test
aam
and
push
and
add
rol
cld
inc
sub
in
add
addr16
dec
pop
popf
push
mov
cmp
dec
cmp
into
mov
out
add
pop
clc
outsl
cmc
mov
inc
stos
sbb
pop
call
ret
lahf
add
es
mov
data16
cmp
cmc
sbb
out
std
dec
leave
lahf
dec
or
xchg
lahf
in
cmc
pop
push
bound
lret
mov
cmp
insl
iret
mov
mov
inc
and
xor
aaa
leave
push
push
cs
mov
out
stos
inc
sub
dec
fdivl
jmp
pusha
test
out
inc
jb
xlat
ret
add
inc
sar
xchg
scas
pop
xchg
cmp
dec
movl
mov
xchg
call
enter
pusha
mov
fnstenv
aas
lods
out
addb
mov
nop
adc
int3
xchg
inc
sbb
sbb
mov
outsl
stc
scas
xor
mov
push
dec
iret
pop
jno
cltd
push
fldl
data16
xchg
pop
xlat
push
mov
hlt
out
ja
call
mov
jbe
leave
cmp
cmpsl
and
lcall
push
xchg
add
outsl
shr
test
cvtps2pd
out
sbb
loope
inc
or
push
stc
mov
aam
adc
pop
clc
je
clc
mov
inc
dec
je
rcr
int
aad
stc
sbb
sti
ficompl
clc
sub
cmpsl
dec
cmp
push
adc
add
test
or
jecxz
inc
shl
stc
xlat
xchg
mov
outsb
push
mov
jg
dec
repz
and
jnp
dec
inc
int
aas
push
orb
imul
mov
cwtl
in
dec
sbb
test
or
nop
loop
push
push
aas
or
int
push
cmp
loopne
push
sub
pop
or
jbe
in
pusha
pop
shlb
add
mov
and
mov
int3
popa
iret
add
sub
mov
adcl
add
jne
jmp
sbb
cwtl
es
jle
jmp
pushf
jge
scas
xchg
push
ret
movl
jp
loop
sahf
sbb
jnp
lods
sub
shr
les
push
mov
js
aaa
pop
adc
fmull
shlb
pop
lret
in
mov
out
movsl
inc
mov
int3
repnz
cwtl
dec
cmp
popf
xchg
jne
sbb
imul
or
add
hlt
es
sbb
mov
inc
jmp
or
lret
cmp
les
mov
push
jae
mov
lea
cmpsl
push
sbb
pop
and
lods
mov
cmp
adc
xchg
xor
lods
ljmp
pop
fldl
loope
lret
or
or
dec
enter
insl
inc
pop
inc
jle
outsb
dec
jecxz
adc
xor
ss
and
fidivl
pop
dec
or
push
mov
jb
sub
or
mov
mov
xchg
jle
das
jne
mov
je
mov
cli
xchg
or
xchg
xchg
stos
add
sarl
shld
pop
inc
sbb
stos
jae
jmp
adc
dec
packsswb
push
testl
sub
fwait
xchg
and
inc
int3
sbb
pop
add
pop
mov
jno
add
mov
xchg
mov
inc
adc
and
adc
jno
sahf
pop
call
cwtl
sub
outsb
gs
cmp
mov
mov
stos
lcall
andb
in
pop
inc
xchg
pop
ds
imul
cmpb
movsb
cli
test
mov
cld
xor
test
movsl
jp
sbb
sbb
push
mov
and
push
in
jno
dec
sti
xor
mov
int3
inc
int
cmp
mov
or
pop
enter
js
idivb
repnz
addb
loope
lret
ja
imul
and
movsl
insb
cmp
pop
jns
xchg
and
mov
hlt
fstl
mov
mov
xchg
icebp
test
xor
mov
les
into
adc
adc
mov
mov
mov
lret
in
inc
iret
jp
inc
dec
leave
das
cld
inc
dec
cmpsb
push
ret
aas
add
sub
inc
or
jnp
ss
adc
pushf
mov
out
jecxz
stos
lock
outsb
notb
mov
jb
movsb
jle
fsubp
in
and
mov
lahf
popl
jno
jb
loopne
lods
jmp
sub
inc
es
xlat
sub
xchg
clc
xchg
out
fcompl
push
movsl
sbb
mov
shlb
repz
jecxz
mov
rorb
add
jo
ret
and
add
inc
pop
stos
mov
or
stos
add
das
hlt
flds
test
sbb
pop
in
sbb
testb
scas
mov
sub
addr16
aam
dec
push
test
sbb
fwait
mov
jns
mov
mov
aaa
stos
out
sbb
inc
push
and
xchg
lret
out
jge
sbb
stos
mov
sbbb
pop
sbb
inc
nop
sub
mov
jmp
pop
pop
or
call
into
mov
mov
insb
enter
cli
mov
popf
pop
mov
lock
xchg
push
inc
xlat
in
and
pop
aas
xchg
fsts
ss
flds
int
mul
ja
outsl
push
pop
rolb
vpackssdw
ljmp
jb
lcall
dec
xchg
or
out
mov
cmpsl
or
cmp
ja
test
mov
imul
mov
inc
inc
repz
out
push
addr16
cmc
jns
xchg
dec
cmpsl
ja
xchg
mov
mov
scas
xchg
inc
ss
jle
rolb
add
mov
pop
int3
add
sub
add
push
lds
cmp
fwait
jge
pusha
jae
pop
or
xor
dec
dec
enter
mov
jno
ret
push
int
in
jp
jno
dec
out
mov
dec
mov
andb
int
cltd
lea
dec
or
sub
jne
leave
mov
es
push
das
mov
push
pusha
sbb
lcall
jbe
ds
dec
fcompl
dec
fcomip
pop
stos
pushf
mov
movsb
xchg
sbbb
out
rcl
mov
pop
jmp
ds
cmp
mov
xor
sbb
ds
xor
lock
jo
jo
add
jnp
call
jl
lods
xchg
clc
loop
fisubrs
shl
mov
icebp
js
arpl
lret
cmpsl
fcmovnbe
loopne
mov
scas
hlt
cmp
adc
cli
std
add
push
cmpsb
inc
sub
mov
test
scas
push
adc
lret
stos
scas
push
dec
aad
call
jecxz
or
cld
daa
mov
ds
jb
mov
stc
pushf
bound
repnz
fisttpl
jnp
mov
jo
movb
lret
je
outsl
inc
lods
div
adc
xchg
fsubl
fcmovnu
sub
add
and
cld
fmull
aas
push
xor
xchg
push
mov
sbb
sarb
test
data16
xor
imul
jb
into
xor
inc
xchg
loop
js
outsb
adc
jno
push
in
jg
pusha
enter
sub
clc
int3
fnstenv
daa
mov
mov
xor
jne
int3
cmp
icebp
sti
test
addr16
sub
mov
in
add
jne
mov
push
mov
lds
or
insl
in
pusha
lret
pop
mov
cmp
mov
xor
sbb
dec
cmp
xchg
in
fidivl
out
shll
std
mov
mov
rcr
cmp
xchg
cmpsl
nop
or
insl
and
push
inc
sub
add
movb
add
xchg
pop
fildll
push
xor
fcompl
aas
lahf
idivb
mov
roll
and
aad
jns
fistpl
cld
add
mov
les
lods
xor
into
setge
fs
pop
int
lods
stos
sub
cmp
imul
lods
int
sbb
sbb
push
inc
sub
pop
push
and
adc
ja
mov
shlb
out
or
jp
jo
or
ja
sub
cmc
pop
adc
xchg
mov
pop
shrb
mov
outsb
jbe
shrb
push
add
loop
xchg
xchg
jg
test
lods
pop
mov
dec
stos
int3
fistps
gs
movsb
popf
push
cmc
aad
cwtl
inc
add
pop
pop
dec
jno
xacquire
push
mov
popa
inc
test
xchg
cmc
cmp
push
xor
mov
jo
jge
or
push
push
fisubrl
push
and
cs
fsts
add
gs
add
stos
sbbb
sbb
jb
mov
xor
push
arpl
popf
xorb
mov
jmp
cmp
pushf
into
shlb
aad
xchg
push
iret
push
cmp
pop
inc
in
inc
jmp
xchg
mov
sbb
mov
fs
inc
lcallw
cs
ficoml
or
jb
nop
out
scas
fdivrs
arpl
xchg
jne
lods
sti
lods
pop
scas
jmp
push
jb
jne
and
sbb
adc
data16
iret
fcomip
and
adc
lcall
movsl
pop
cmp
xlat
or
sbb
les
mov
jo
movsb
bound
mov
dec
daa
notl
repz
clc
jg
out
out
xor
dec
aaa
inc
shlb
clc
mov
inc
cmp
cmpsl
daa
rol
mov
dec
out
mov
lds
fisubs
pop
stos
pop
push
add
test
clc
mov
mov
and
add
ret
sub
je
enter
enter
int3
testb
es
mov
inc
loope
call
xorb
ljmp
dec
xchg
sub
xchg
out
cmp
int3
and
cmp
mov
pop
xor
cltd
cs
and
jmp
stos
xchg
mov
dec
mov
pop
clc
sbb
arpl
shlb
stc
adc
and
stos
inc
adc
cli
pushf
xor
repnz
push
test
and
mov
loope
int3
gs
lds
icebp
xor
push
mov
sbb
inc
cmpsl
sarb
cmp
dec
movsb
ficompl
mov
int3
sarl
dec
fdivrl
shlb
int3
cli
or
push
xchg
aaa
cmp
add
cmp
aad
mov
xchg
xchg
insb
mov
test
imul
repnz
or
dec
cmpsb
rclb
es
mov
test
push
mov
push
cmp
sbb
pusha
cwtl
and
jle
inc
dec
into
add
dec
and
jne
inc
sub
lcall
je
mov
les
pop
dec
div
pushf
sub
pop
push
fwait
xchg
into
inc
sub
inc
xchg
or
test
cmpsb
cltd
aam
mov
jmp
bound
dec
xor
sub
fs
mov
lea
fsubrs
cmp
sub
cmp
jmp
adc
pop
jmp
cmpsb
jno
fisubrl
wbinvd
mov
out
out
ret
cmp
js
push
dec
mov
xor
js
aas
sub
or
xchg
stc
cmp
scas
sub
sbb
cmp
imul
aad
xchg
mov
sbb
pop
dec
aas
ret
adc
cmp
faddl
add
mov
mov
ret
enter
icebp
pop
mov
cmp
pop
push
aad
sub
jle
add
insl
jae
push
inc
xchg
test
cmp
out
mov
daa
out
pop
jno
push
dec
stos
int3
mov
stos
cmp
out
mov
rol
andl
test
sub
and
inc
loopne
rorb
mov
cld
sti
fisttps
neg
adc
loope
idivb
mov
je
popa
dec
or
mov
lret
imul
pop
pusha
or
mov
clc
ret
jb
nop
jnp
lret
push
enter
loop
pop
cmp
insl
jae
movsl
dec
dec
mov
mov
inc
mov
insb
dec
cli
adc
aam
or
ja
dec
push
aad
hlt
mov
arpl
jnp
jp
jecxz
ljmp
lea
imul
xlat
xor
sbb
mov
xor
sbb
mov
shll
xor
and
pop
inc
in
xchg
cli
mov
mov
cwtl
dec
jbe
out
xor
or
mov
inc
stc
dec
clc
fisubrl
mov
sub
adc
ss
nop
shlb
mov
or
fsubr
mov
xor
pop
xor
jmp
mov
add
jnp
mov
pop
add
js
in
sti
sub
test
pop
xchg
add
xor
sbb
jae
in
or
push
or
jle,pn
sbb
fisttpll
cmp
add
cmp
les
mov
imul
repz
cld
jg
movsb
aas
mov
sbb
cwtl
ja
rolb
sub
dec
mov
pop
scas
push
aam
in
mov
jmp
sub
fcompl
int3
stc
adc
enter
test
mov
cmpsb
lods
dec
adc
addr16
dec
hlt
pop
mov
xchg
sub
lea
loopne
sbb
dec
jle
lds
adc
loopne
and
adc
popa
lea
in
or
lret
out
ds
addl
insb
dec
jle
sahf
lcall
test
inc
jle
pop
iret
push
popa
aad
cmp
mov
pop
aam
imul
adc
rcl
lods
ror
mov
fwait
push
push
roll
out
in
and
mov
loop
jne
shrw
cmp
push
aad
mov
mov
lock
jecxz
scas
jb
xchg
lret
out
jno
xchg
add
xchg
arpl
fisubs
jne
in
iret
dec
insl
fdivr
xor
mov
sbb
mov
dec
mov
arpl
out
clc
mov
pop
in
pop
pop
inc
sbb
add
in
pop
test
test
test
outsb
dec
pop
outsl
jbe
outsl
cld
dec
add
jmp
inc
push
das
push
push
int3
ds
cltd
leave
gs
jbe
call
test
mov
cltd
inc
lcall
daa
add
xorl
aaa
mov
mov
push
rcrl
lret
mov
push
pusha
mov
jns
jno
or
fstl
adc
and
and
mov
push
cmp
push
xchg
test
aad
aam
es
or
js
rolb
mov
and
push
fdivrl
loope
xor
stos
shll
shll
sbb
aaa
call
xor
sub
mov
push
mov
bound
arpl
mov
rcrl
jns
pop
rcrb
mov
lret
mov
push
iret
jne
pusha
outsl
pop
into
dec
int
outsb
xorl
add
popa
mov
pop
sti
sbb
in
pop
lahf
mov
les
imul
pop
xchg
mov
out
adc
dec
in
mov
fisttpll
sub
inc
clc
das
pop
lea
sbb
aaa
or
cli
cmp
or
sub
outsb
and
cmp
pop
ret
push
pop
mov
mov
mov
mov
cwtl
add
lret
icebp
fildll
fldenv
inc
fs
icebp
inc
xchg
jns
sbbl
xchg
jno
add
pusha
pusha
jb
inc
lods
cmp
daa
adc
into
aam
dec
addr16
daa
imul
insb
push
scas
push
sub
rcrl
stos
push
lret
inc
lods
xchg
jecxz
jnp
hlt
jp
out
sbb
push
jo
push
add
std
pop
test
loop
and
rol
cmpsl
popf
push
xor
scas
mov
in
xor
das
push
popf
inc
cmp
mov
adc
cs
add
cwtl
fs
dec
stc
mov
inc
cs
sbb
pop
add
shl
sub
dec
test
adc
jne
sbbb
ja
pushf
lds
inc
xchg
xor
repz
rorb
inc
sub
jmp
test
mov
stos
mov
xor
das
inc
sub
mov
fwait
movsb
xor
in
add
into
sbb
sbb
inc
and
mov
add
pusha
push
dec
jmp
mov
inc
dec
in
and
lock
mov
xchg
xchg
inc
unpcklps
aas
imul
sbb
fs
int3
push
jge
test
lock
xor
sub
xor
test
xchg
out
push
movsb
xchg
fildll
mov
add
aaa
call
das
movsl
jg
enter
xchg
pop
aas
xchg
mov
sbb
inc
int
les
je
add
std
and
jnp
adc
add
jo
cli
out
aaa
int
jmp
pop
mov
imul
pop
aad
dec
push
inc
adc
aas
js
sbb
sub
mov
mov
mov
jmp
in
pop
or
dec
insl
inc
clc
adc
test
jge
ret
out
pop
mov
in
inc
pop
xor
lret
je
sub
and
ja
andl
sarl
leave
push
mov
add
ds
pusha
sub
lods
int3
int3
and
dec
les
jo,pt
test
ss
and
in
aam
add
pop
mov
push
shr
out
out
mov
mov
loopne
sub
lcall
dec
jb
cwtl
mov
push
loop
push
jae
mov
dec
mov
jmp
push
mov
bound
stos
cmc
inc
inc
or
shll
leave
mov
cmpsl
xchg
xchg
pop
fbstp
jo
xchg
xchg
mov
clc
pop
aaa
pop
stos
inc
mov
clc
jecxz
sbb
pushf
sbb
add
into
in
jo
in
jmp
adc
adc
push
pop
push
and
outsl
lret
rcrl
jp
xchg
mov
xchg
aaa
lds
and
insl
xchg
test
jae
lret
insl
cs
pop
xor
bound
sbbl
adc
and
fldenv
in
gs
ja
addr16
repz
rcrb
sub
jns
adc
out
mov
dec
ljmp
imul
std
cli
mov
sub
testb
jmp
clc
adc
imul
mov
icebp
pop
scas
adcl
aam
shl
jl
pushf
or
rcll
pop
imul
or
out
add
jno
in
fldt
pop
xor
jle
or
add
adc
lds
cmp
jecxz
jno
mov
adc
inc
scas
imul
test
mov
sarb
ficompl
jg
pop
pop
mov
sbb
dec
push
fwait
subl
push
inc
mov
add
rcrb
cmp
loope
lock
cmpsl
mov
ror
mov
in
lods
idivl
rclb
jo
ds
cwtl
in
xchg
sbb
jb
sbb
imul
jnp
adc
mov
mov
sti
cmp
jg
cltd
sub
dec
mov
test
inc
rorl
cmp
push
lods
imul
dec
mov
xchg
fiadds
adc
push
std
sbb
xchg
bound
dec
leave
fdivrl
rol
loop
flds
pop
lock
and
mov
sahf
pop
test
jl
or
int
jb
cmp
pop
mov
stc
fadd
lahf
cmp
gs
gs
dec
pop
adc
cmp
jge
ud2
fwait
ret
fsubrl
adc
in
adc
jbe
push
sub
jg
hlt
cmp
xor
lods
insb
mov
lods
add
mov
repnz
xchg
jne
pushf
xor
pop
xchg
xor
xlat
imul
cmpsl
inc
pushf
jp
inc
das
lods
leave
ret
outsl
pop
lods
movsb
arpl
add
mov
int3
movsl
mov
int3
aas
pop
loop
push
pop
pslld
fs
repz
mov
mov
jbe
mov
stos
insb
and
xor
cmp
iret
dec
sbb
and
insl
pop
mov
mov
jmp
xchg
mov
fistps
or
add
test
aam
add
testb
mov
and
xchg
sar
es
es
bnd
jle
cld
int
jl
fisttps
jae
bound
shrb
xor
mov
rcl
loopne
out
mov
sarl
sub
adc
repnz
adc
xchg
cmp
sub
das
pop
pop
mov
jnp
mov
nop
cmp
sbb
cli
pop
xor
xor
cmpsb
xchg
adc
mov
dec
sub
ret
loopne
add
inc
mov
sub
lcall
aaa
fidivrl
lcall
dec
jg
and
pushf
or
pop
cmp
lods
imul
jae
cltd
sub
sub
adcb
mov
les
test
and
ret
jmp
jmp
fstps
sub
shll
pop
clc
sbb
imul
leave
fisubl
mov
fldcw
lea
xor
js
jb
ret
dec
inc
dec
ficompl
mov
sbb
pop
es
leave
fisttpl
mov
push
push
mov
pop
xor
test
in
xchg
js
fwait
mov
sbb
mov
xchg
aam
insb
adc
aaa
roll
std
popf
xchg
push
loope
fistpl
inc
add
sbb
push
fwait
cmp
clc
jno
push
push
out
movsb
cld
andl
es
xchg
std
pop
jg
push
mov
scas
fcoml
inc
in
jb
cmp
xchg
and
pop
mov
or
sub
and
inc
divb
sti
jmp
movsb
and
decl
mov
mov
jl
out
xor
adc
fcomps
loop
mov
mov
out
xor
fwait
add
mov
mov
jne
push
jle
jmp
sub
add
lret
aad
lds
xor
pop
sbb
dec
xchg
mov
data16
pop
add
in
inc
aas
into
out
nop
jne
xlat
and
les
dec
adc
bound
dec
jecxz
dec
push
sarb
mov
jo
std
push
sbb
ss
pop
sbb
jl
add
xor
lret
adc
and
and
ror
push
jl
and
or
cmpsl
sub
mov
movsl
pop
xor
xor
test
pop
jno
jo
or
test
cli
sbb
push
push
push
rorl
adc
xor
dec
fucomip
fwait
jns
inc
push
or
cmpsl
sahf
jnp
sbb
test
movlps
fsubrl
mov
mov
push
cmp
rcr
and
negb
hlt
push
inc
je
push
cmc
fld
cwtl
cmp
mov
push
sar
loopne
rclb
fsubrs
pop
daa
int3
cs
xlat
inc
add
es
add
mov
pop
push
ficompl
inc
out
les
adc
cmp
pop
xchg
xchg
jo
mov
and
mov
jne
jl
div
aad
adc
inc
out
mov
dec
sub
cmp
push
sub
hlt
stos
cltd
mov
pop
or
les
jo
sub
cld
mov
es
sbb
xchg
stc
xchg
xlat
mov
push
or
dec
add
mov
cmpsl
inc
adc
add
xlat
loop
pop
or
sub
cmpsb
xor
push
leave
pushf
insb
mov
jl
mov
test
mov
scas
or
mov
pop
push
sarl
inc
test
lcall
mov
pop
iret
pop
bound
mov
int3
pusha
shrb
imul
sbb
out
mov
dec
mov
bound
jno
repnz
mov
out
sbb
xor
jle
xor
out
xchg
lods
push
daa
icebp
jmp
mov
adc
sbb
out
ljmp
bound
repz
out
enter
push
push
scas
jns
ret
pop
shlb
sarb
jbe
cwtl
and
jae
inc
mov
aam
es
scas
std
mov
or
or
mov
sbb
je
in
test
inc
fldenv
push
mov
or
std
popf
fs
loope
in
shlb
loop
cmc
cmpsb
cmp
mov
pop
into
fidivs
imul
cltd
sbb
mov
mov
test
push
jle
mov
adcl
das
mov
pop
imul
adc
fistpl
loop
mov
out
imul
in
mov
stos
addr16
pop
sub
dec
mov
push
xor
lods
dec
mov
shrl
sahf
fs
cmp
dec
leave
inc
jmp
bound
icebp
push
ret
jo
and
cmp
push
xchg
adc
icebp
inc
inc
cmp
aam
mov
jmp
in
psadbw
add
adc
inc
mov
mov
repz
sahf
out
cltd
push
into
or
jge
and
loop
stos
icebp
rorl
inc
xor
jl
ljmp
aad
add
ret
push
dec
lret
xchg
icebp
leave
cmp
iret
mov
pop
ret
sahf
push
push
lock
mov
or
xchg
push
lock
mov
cmpl
sbb
cmp
rclb
and
mov
mov
dec
jns
xchg
xchg
aas
pop
pop
imul
cwtl
mov
xchg
and
fsubrs
lahf
push
pop
jb
push
push
cvtdq2ps
lock
mov
movsl
ret
mov
add
pop
xor
insl
mov
mov
xchg
mov
out
shrb
sub
je
bound
fcmovu
mov
sub
inc
sbb
loope
notl
test
mov
lret
ljmp
test
dec
outsb
lods
sbb
jge
mov
sub
iret
or
jp
cltd
jmp
inc
stos
sbb
sbb
movsb
scas
hlt
pop
adc
dec
push
roll
insb
aam
orb
pop
sahf
mov
call
popf
out
rcr
pop
cmp
mov
loopne
cmp
fdivrl
or
movsl
inc
scas
inc
cmc
xchg
in
orb
das
sti
popa
push
dec
movl
stos
imull
mov
xlat
or
enterw
outsb
add
cs
and
nop
jecxz
fwait
and
inc
adc
add
ret
push
loope
insb
pop
ja
xchg
cli
cmpsl
xor
movsb
or
dec
cmpsl
jns
cmp
dec
js
pop
popf
stos
add
mov
push
xor
adc
fs
cli
testb
fchs
xchg
fldt
iret
aas
lock
mov
enter
and
mov
push
addr16
dec
or
xchg
out
fidivrs
fwait
lret
or
jmp
pop
ret
push
imul
and
xchg
clc
arpl
scas
pop
xor
mov
fmull
out
movsl
dec
jp
dec
cli
xor
jmp
idivb
fcom
in
inc
aad
cld
add
mov
orl
xor
daa
icebp
loop
aas
aas
lret
inc
lcall
sbb
add
ret
std
scas
add
rep
loop
ljmp
pop
sbb
insb
lds
mov
out
jmp
mov
fsubrl
cs
push
jecxz
pop
mov
mov
inc
inc
hlt
inc
push
mov
mov
pop
sub
insb
lods
cmp
sbb
xor
add
inc
add
jb
andb
adc
test
pop
adc
pushl
cwtl
jb
xchg
fsubs
adc
ss
push
out
rcl
int
sti
sbb
mov
or
mov
or
jge
repnz
xor
jmp
cltd
mov
jmp
and
loope
cmp
vcvtsi2ssl
push
inc
lock
repz
ss
out
jmp
js
cmp
rcl
icebp
mov
das
sub
les
jnp
test
xor
lea
fwait
ds
mov
sbb
ret
jg
incl
jno
xchg
shl
cmp
xchg
imul
cmp
stos
inc
push
mov
scas
and
sub
out
dec
out
xor
loop
jecxz
lcall
mov
mov
pop
dec
in
mov
in
lods
dec
push
shll
fidivs
mov
cmp
jmp
movsb
xchg
lea
in
stc
out
jbe
rclb
fsubr
cmp
mov
mov
nop
sbb
ret
test
scas
imul
test
inc
repnz
loop
pop
and
push
pop
cmp
inc
mov
in
cld
mov
aaa
out
call
inc
rcr
adc
rorb
cmpsl
jp
or
sub
inc
and
mov
jbe
push
add
mulb
xor
in
outsb
pop
pop
dec
arpl
push
mov
mov
push
adc
sbb
sub
or
imul
or
cli
adc
mov
xor
stos
lea
in
mov
xchg
and
imul
outsb
cmpsl
ljmp
push
push
add
outsb
popa
mov
outsl
mov
mov
fbstp
ret
mov
fwait
mov
sbb
mov
mov
add
add
pop
push
sbb
xchg
popf
ret
vpmuludq
cmpsl
inc
mov
push
sbb
aas
adc
inc
adc
adc
sub
cmp
les
aaa
push
push
mov
xor
inc
mov
add
inc
in
sub
mov
sti
sub
call
and
add
dec
push
pop
pop
test
mov
xor
lret
pop
es
mov
mov
std
fdivrl
out
test
mulb
sbb
inc
xchg
ljmp
xchg
lahf
or
fistpl
pop
cwtl
insl
adc
dec
jmp
pop
jecxz
je
xor
and
lret
imul
in
jbe
jp
sbb
dec
out
push
arpl
shrl
fwait
out
ds
jmp
or
mov
jle
dec
test
adc
ret
inc
stos
mov
repz
xchg
aaa
dec
add
dec
fisubl
jle
out
xor
sbb
add
insl
int
iret
jb
test
clc
jns
or
jo
push
shll
sbb
sahf
outsb
jmp
nop
and
lock
fbstp
xor
shlb
outsl
mov
sbb
inc
lock
ret
mov
cwtl
lds
sub
out
jge
cmp
mov
loope
xchg
jo
sub
loope
cmpb
jo
sbb
cmp
mov
in
out
jns
pushf
adc
pop
decl
ljmp
and
sti
icebp
loopne
pop
push
or
dec
mov
int3
adcl
scas
dec
push
dec
enter
pop
out
mov
out
cmpl
fldcw
jl
push
scas
lods
shr
xchg
lods
dec
sub
hlt
xor
hlt
sbb
ret
scas
ficomps
cltd
cmp
or
ja
lahf
push
mov
sub
jmp
mov
sub
std
xor
dec
cmp
xchg
std
sbb
jle
mov
test
pop
sub
pushf
mov
fldcw
imul
xor
bound
mov
ficompl
sar
push
cli
cld
push
je
scas
add
mov
incb
xchg
out
mov
cs
frstor
std
stos
lock
mov
outsb
or
cmc
out
dec
mov
clc
stos
dec
imul
adc
sbb
jle
push
cmc
mov
mov
adc
xor
loop
test
out
push
lret
loope
fisttpll
push
pushl
out
jo
leave
cmp
aam
loopne
out
out
testb
pop
in
mov
loopne
and
js
xor
jb
and
pop
ret
fucomi
imul
pop
adc
mov
jno
subb
daa
repnz
js
sahf
popa
out
scas
adc
dec
mov
in
shl
push
mov
aas
lock
jp
cmpsl
fisubl
push
lret
fdivl
add
icebp
xor
ret
nop
adc
push
mov
les
jp
aam
mov
je
mov
popf
sub
imul
into
testb
push
mov
repz
out
or
jbe
out
jb
pop
mov
pop
add
push
mov
mov
sbb
ret
clc
jno
test
nop
fistl
push
add
adc
mov
push
in
rorb
outsl
das
aad
popf
mov
cld
mov
call
mov
cmp
pop
in
sbb
sbb
das
pop
jmp
cmp
pushf
xor
in
dec
in
sbb
clc
hlt
sub
sbb
sahf
add
test
sti
lock
mov
mov
data16
lret
mov
pop
cwtl
add
adc
sub
mov
subl
into
daa
xchg
mov
ss
sarl
outsb
adc
cmp
test
fldl
push
push
pop
arpl
pop
mov
add
ljmp
cld
rcll
lock
or
pop
mov
push
rol
lret
xchg
push
imul
cld
xchg
and
inc
lods
cmp
unpcklps
pop
fwait
mov
mov
shlb
jne
ret
incl
fstpt
push
in
data16
adc
shrl
in
test
nop
dec
gs
inc
sbb
addr16
xor
andl
xchg
push
push
sbb
icebp
xchg
cltd
aad
icebp
push
mov
xor
push
popf
dec
pop
sub
and
cmpb
push
mov
or
dec
les
loopne
adc
aam
mov
jbe
or
cmp
mov
fcmovne
and
mov
pop
int
repz
mov
lcall
fwait
cli
adc
dec
sbb
adc
stos
es
insb
mov
xchg
hlt
sbb
sbb
stos
nop
mov
jae
pop
outsb
sahf
push
ljmp
sbb
or
orl
jae
ficoms
pusha
fdivs
in
jmp
lea
lcall
pop
leave
xchg
js
xchg
xor
jbe
fwait
cmp
adc
mov
xchg
jmp
cmp
outsl
stos
outsl
sbb
inc
lcall
mov
lods
popl
fwait
sbbb
mov
push
cmp
notrack
clc
mov
and
call
sbb
sar
cmc
out
xor
xchg
sub
sub
xor
outsl
dec
inc
lcall
mov
xchg
and
rcrl
and
dec
je
mov
nop
shll
repz
cltd
testl
leave
or
jge
pop
pop
add
divb
test
repnz
push
mov
jmp
in
sub
es
cmp
ret
icebp
daa
cmp
xlat
pop
ret
test
shrl
movsb
xchg
and
lret
jo
pop
repnz
xchg
rclb
dec
cmp
sarl
dec
ret
mov
sbb
aaa
xchg
dec
push
mov
pushf
hlt
dec
sti
cwtl
and
dec
sbb
xchg
out
popa
lcall
test
dec
push
mov
cmp
sbb
fwait
pop
cmc
inc
sbbb
mov
test
andl
xor
or
jg
cmpsb
daa
mov
addb
jmp
or
scas
inc
adc
cli
int
dec
dec
int3
fmuls
or
fisubrl
pop
pushf
dec
cli
push
mov
rorl
mov
movsb
xor
lds
jmp
outsl
cmpsb
push
dec
enter
insl
arpl
jns
adc
lahf
cmc
push
cld
xor
nop
lret
sub
aas
xor
fcmovb
dec
cmpsl
out
or
ss
adc
imul
inc
push
jnp
mov
fcomps
and
out
xor
fsts
jo
loop
adc
adcb
es
clc
sahf
cli
sub
mov
jbe
push
mov
ret
add
pushf
jns
sub
int3
push
ret
push
cmp
lds
not
mov
mov
clc
jle
or
sarl
orb
hlt
mov
repnz
push
adc
in
mov
popf
xchg
sar
out
cmp
mull
out
cmpsl
pop
popf
test
cmc
cmpsl
add
and
hlt
inc
gs
xchg
cmpsb
inc
adc
jne
inc
aad
cmp
mov
jo
loope
enter
sbb
jle
mov
and
std
out
hlt
inc
sbb
jae
fisttpll
mov
inc
lcall
loop
dec
insb
out
pop
stc
cmp
xchg
mov
mov
cmp
dec
mov
insl
mov
cltd
cld
stc
pop
pop
dec
cmp
mov
aam
adc
xlat
repnz
and
enter
nop
xor
stc
xor
inc
jnp
ljmp
pop
xor
jb
lods
lods
and
push
jno
sbb
shll
je
dec
mov
shrl
cmpsb
dec
lret
inc
cwtl
inc
dec
and
or
ds
fadd
xlat
imul
jge
sub
jmp
add
inc
push
ds
xor
shr
cwtl
jmp
push
jg
mov
fwait
pop
mov
inc
iret
and
inc
sbbl
and
push
jbe
loopne
testl
fsubrl
mov
push
pop
jns
repnz
loop
movb
gs
mov
aad
sahf
hlt
je
cs
sti
jge
xchg
push
fistpl
std
scas
mov
mov
dec
push
mov
mov
mov
adc
aas
fisubrl
out
out
insl
sub
or
cwtl
sub
mov
xor
movsb
dec
push
jno
pop
mov
xor
mov
stos
rcrl
push
fidivrs
adc
dec
gs
test
mov
mov
ret
mov
fldl
jl
insl
pushf
in
pop
mov
stc
rcl
jle
push
xor
dec
lcall
or
jecxz
dec
push
scas
mov
pop
out
aam
pop
mov
sub
push
out
ja
xor
test
xlat
ja
pop
mov
adc
mov
jl
xor
inc
or
mov
das
sahf
xlat
inc
jge
or
arpl
aas
lock
sahf
mov
and
lret
mov
push
lods
cmpsb
sbb
ljmp
mov
ret
and
push
jns
popa
inc
cmc
and
or
mov
add
mov
jno
sub
cmpsl
or
and
sbb
repnz
loopne
nop
cmp
repnz
in
int
sub
pushf
hlt
adc
daa
cld
inc
inc
lock
in
or
imul
pop
dec
push
scas
or
sbb
shrl
loopne
push
cwtl
xor
loopne
xor
xor
adc
or
mov
pop
inc
inc
sarb
into
mov
std
push
pop
inc
mov
fiadds
inc
sbb
shll
push
lcall
inc
adc
and
repnz
loope
into
mov
xchg
pop
pop
xlat
sahf
ljmp
dec
sub
add
jb
sarb
iret
or
fs
jns
pop
adc
outsb
push
lahf
push
mov
vorps
and
push
mov
sbb
in
lods
pop
push
cmpb
js
out
jmp
sarl
fdiv
sbb
test
or
inc
cmp
sbb
das
stos
loope
lods
dec
push
jge
pusha
int3
loopne
gs
sub
mov
ficoml
push
loope
inc
add
add
lret
push
jne
pop
lods
int
lods
fidivrs
and
dec
cmp
pop
inc
cmpsb
gs
pop
mov
int
mov
inc
adc
fdivrl
arpl
or
lahf
sbb
or
call
into
pushf
data16
stc
sub
cmp
add
ja
adc
sahf
fldcw
xchg
sarl
jl
lret
fadds
aad
push
lods
call
cmp
lret
lahf
sub
cmp
add
pusha
int
enter
movsb
scas
add
hlt
lcall
out
adc
mov
sbb
inc
push
adc
adc
xor
fs
rorl
dec
lret
dec
push
fisubrl
mov
in
xchg
pushf
movsl
popf
cmpsl
jne
fidivs
mov
xchg
adc
stc
fstpl
shrb
leave
imul
push
cs
mov
adc
adc
movsl
aaa
aaa
push
movsl
jmp
nop
test
sbb
jecxz
xchg
mov
pop
xor
xor
in
leave
xchg
out
or
ss
fiadds
cmp
lds
adc
pusha
jg
xor
jmp
xlat
xchg
xchg
stos
jg
xchg
or
dec
loope
xor
shll
push
lcall
je
repnz
push
leave
imul
loopne
xlat
pushf
mov
loope
and
xor
adc
aam
scas
int3
sbb
cmp
imul
add
dec
mov
push
aaa
inc
aas
mov
dec
push
lea
or
hlt
jns
and
jecxz
adc
sub
in
dec
lods
arpl
out
outsl
add
adc
aam
cmp
dec
sub
leave
aam
addps
je
andl
lods
mov
rol
push
ret
jo
mov
jo
js
jo
jo
push
mov
in
loope
pop
jmp
mov
rorb
or
xor
into
dec
dec
test
nopl
hlt
sbb
addr16
dec
mov
mov
shll
adc
aad
call
inc
es
dec
mov
xchg
mov
js
push
jo
cmc
jp
sbb
pop
push
out
pop
sti
jmp
outsb
adc
inc
xchg
cmc
mov
pushf
mov
xor
inc
cmc
je
bswap
outsb
cmpsl
xorl
sbb
test
and
mov
imul
popa
xchg
ss
int
ret
push
adc
adc
mov
mov
dec
cmpsl
daa
mov
lock
ret
push
arpl
cmp
lcall
pop
mov
jae
out
push
push
iret
push
loop
sti
mov
out
stc
pop
push
bound
mov
ss
in
stos
lods
dec
test
test
add
push
or
mov
mov
int
and
xchg
pop
mov
pop
dec
jl
sti
mov
jb
out
imul
pop
sbbl
xchg
outsl
xchg
push
pop
xchg
fcoml
xchg
xchg
push
add
push
lea
pop
pop
jns
ja
inc
jno
xchg
and
push
push
and
jmp
out
ds
test
aaa
xchg
and
jmp
mov
and
fdivp
lods
lahf
push
inc
pop
cmp
mov
ja
sti
into
jb
notb
iret
cmp
push
add
rcl
call
test
push
iret
and
fadds
mov
jmp
mov
imul
xlat
jmp
add
jno
push
int
daa
jp
stc
mov
int
setb
lds
jle
mov
add
xlat
xor
mov
mov
loopne
aas
push
daa
jge
add
shl
fsts
push
add
daa
dec
test
test
sub
sbb
stos
mov
cmp
add
fld
sub
es
mov
imul
pop
sub
sub
xor
and
cmp
into
sbb
or
jge
shll
or
divl
aaa
fwait
loope
call
mov
mov
in
adc
dec
movsl
ret
push
pop
cmpsb
mov
pop
push
stos
mov
or
inc
and
xor
pop
nop
dec
je
push
ror
pop
fsubrs
fldenv
push
and
popa
mov
cmp
aas
jecxz
sbb
fwait
inc
das
sub
in
mov
inc
mov
out
imul
ds
push
aad
rorl
aaa
xchg
jmp
ja
pushf
insl
add
sub
aas
xchg
cmp
mov
test
scas
ljmp
movsb
sarb
ret
dec
mov
cld
ds
mov
pushf
in
ret
sub
in
add
pop
jl
js
lea
call
imul
cs
xchg
out
rcl
into
and
sbb
and
adc
cs
sbb
adc
xor
stc
mov
lock
and
cmp
rorl
inc
aad
xchg
push
into
in
dec
xchg
cmpl
addb
loopne
dec
arpl
xchg
jno
scas
scas
int3
pop
and
pop
jmp
xor
pop
jecxz
mov
lcall
push
pop
push
sarb
pop
push
enter
xor
call
adc
sar
ficoms
adc
in
dec
mov
call
adc
pop
jle
cmp
aad
mov
sti
ds
into
fs
fistps
gs
inc
jle
sbb
pop
ret
out
leave
daa
iret
jle
mov
movsl
cmpsb
mov
imul
jl
sub
imull
bound
aam
push
rclb
xchg
mov
pop
jmp
push
addr16
shlb
sbb
sbb
add
inc
gs
loope
loope
test
ret
dec
xchg
pop
mov
aaa
test
scas
mov
xor
inc
mov
jl
movsl
add
push
xchg
jl
movsb
cltd
or
iret
cmpb
and
addl
repz
lods
outsl
xchg
ds
cmpsb
lds
movsl
repz
dec
icebp
and
test
shlb
dec
jmp
pop
fnstsw
andb
cld
inc
and
adc
jne
mov
dec
cwtl
insl
pop
jle
int3
sbb
mov
jbe
in
cmp
mov
sahf
nop
xor
aam
or
fwait
and
stos
adc
cmp
pop
add
cmova
pop
loop
xchg
push
adc
addr16
push
mov
icebp
jbe
mov
pop
ret
in
neg
aas
mov
int3
shrb
jbe
lcall
hlt
sub
add
inc
inc
add
cmc
push
imul
push
out
inc
test
inc
iret
out
dec
scas
pusha
xorb
xchg
xchg
test
mov
cmp
cmpsl
stos
or
sub
fcomps
add
jecxz
je
and
add
jl
mov
cmp
xlat
stos
movsl
in
dec
in
push
sub
adc
je
loopne
mov
outsl
sbb
mov
xlat
lea
push
mov
ljmp
mov
cmp
mov
xor
mov
xlat
xchg
push
rclb
jno
inc
rcll
aam
out
sbb
movsl
lahf
sub
mov
sarb
jl
jo
add
cmp
jno
inc
dec
pop
testl
xchg
mov
arpl
gs
jae
push
mov
cmp
or
cld
std
sahf
aam
sbb
xchg
mov
or
shlb
jge
adc
enter
ja
mov
mov
jbe
mov
add
cld
dec
and
xor
jg
mov
push
stc
jae
inc
das
pop
or
orb
mov
pop
pop
sti
inc
outsb
loopne
mov
out
subb
push
dec
sti
fisttpl
adc
aas
dec
popa
push
orb
loop
cmovl
dec
adc
or
icebp
stos
xor
daa
add
aam
subl
mov
add
sbb
loope
sti
push
mov
adc
cmp
ffree
int
jmp
pop
cltd
fstpl
add
jmp
js
into
xchg
aaa
sub
add
sbb
aam
sbb
xor
cmp
adc
mov
or
sub
hlt
mov
fildll
mov
xor
mov
mov
pop
inc
test
lret
fbld
fisubl
out
stc
out
rcrl
femms
mov
push
in
mov
addb
addr16
outsl
sti
add
adc
push
push
sub
mov
cmpsl
testl
pop
sub
pushf
cmp
popf
add
add
repz
out
jae
mov
lret
imul
out
cmp
nop
mov
mov
add
arpl
or
pusha
jb
mov
test
dec
fld
rclb
pop
bound
loope
popa
mov
in
add
and
xor
fcoms
mov
cmc
pop
add
xchg
pop
xor
push
jmp
mov
add
lret
jbe
push
orb
icebp
sub
mov
mov
xchg
push
je
fnstsw
mov
loope
test
cmp
jae
int3
sti
xchg
das
adc
outsl
mov
xor
mov
xor
lods
out
cmp
test
insl
sbb
sub
and
stc
dec
into
push
mov
mov
add
in
nop
add
outsb
nop
std
fldenv
cmc
out
rcll
lods
xor
push
xor
or
and
popa
inc
mov
mov
lcall
popa
mov
loopne
jnp
pop
jne
jg
inc
mov
mov
fistl
inc
push
orl
ret
roll
js
cmp
out
sub
pop
scas
mov
mov
pop
push
enter
repnz
cwtl
lock
cld
pop
dec
jno
add
and
pop
and
js
push
out
insl
mov
and
mov
aaa
push
imul
fadds
adc
call
inc
xor
inc
dec
pop
rcll
cmp
push
rclb
adc
or
and
cmp
inc
xchg
add
inc
outsl
int3
pop
push
mov
jae
jle
and
notl
cmpsb
push
sub
insb
pop
inc
push
xchg
or
jns
int
adc
fisubrs
and
and
es
cmp
das
mov
in
inc
test
or
push
push
jbe
pop
dec
cmc
sbb
sbb
imul
mov
add
scas
lret
pop
cmpsb
popa
mov
dec
mov
orl
cs
int
int3
or
stc
int3
int
scas
jae
push
int3
rol
xchg
push
out
dec
cmp
pop
push
push
adc
xlat
int3
fdivs
pop
les
sbb
and
ja
das
inc
mov
sub
sub
iret
add
mov
push
scas
lds
loopne
xor
pop
push
xchg
lods
sub
movsb
jnp
push
lret
jns
out
and
push
int3
jae
iret
arpl
stos
out
movsl
mov
mov
xchg
out
call
jne
xchg
push
push
repz
outsb
cld
inc
fimuls
push
or
les
xor
ret
push
repnz
nop
ljmp
push
inc
test
sub
mov
jmp
jne
pop
mov
mov
mov
and
scas
jecxz
hlt
ja
sub
xor
out
data16
in
mov
add
lahf
out
cmpsb
movsl
inc
icebp
jae
mov
rol
negb
add
movsl
xor
add
mov
ret
mov
rcr
and
lods
out
into
movsl
add
pop
inc
mov
cmp
insb
add
xor
mov
fs
fwait
lret
jne
aas
out
xchg
popa
jno
pop
ljmp
sbb
push
push
test
shr
jns
cmpsb
and
flds
lock
mov
repz
mov
push
in
ss
mov
xorl
mov
inc
leave
sti
adc
loop
cmp
push
lcall
xchg
jns
pusha
inc
jp
push
fldcw
cmp
ja
dec
mov
aas
push
xor
subl
bound
pusha
jae
xchg
mov
data16
inc
sbb
pop
adc
inc
cmpsl
test
cmpsl
push
aam
or
xor
jno
outsl
mov
pop
push
jmp
lret
jno
test
sbb
lcall
daa
sbb
out
mov
mov
hlt
add
dec
lret
roll
clc
iret
dec
fwait
mov
and
ds
call
stos
push
idivl
jae
out
repnz
add
cltd
aad
lods
sbb
xchg
aad
add
and
xor
fcompl
mov
pusha
dec
pop
enter
xor
pop
mov
mov
mov
xor
ds
add
mov
adc
mov
sub
cli
jmp
shr
cmp
int3
add
pop
and
lret
or
mov
adc
ret
pusha
inc
int3
jg
push
sbb
fiaddl
sub
daa
mov
lret
js
push
iret
negb
mov
cmp
push
nop
or
inc
in
mov
in
lds
dec
jp
sub
fnstenv
fdivl
mov
sub
add
movsb
lahf
pop
fsubp
push
fsubrl
xor
sub
subb
dec
les
dec
aad
outsb
add
roll
test
lret
sahf
jb
mov
inc
mov
sarl
mov
cmc
and
push
test
rcr
dec
add
cmpsb
xchg
mov
and
xor
lods
test
add
bnd
add
out
sub
ja
ret
add
aaa
xchg
cmc
negb
lcall
fisttpll
push
fiadds
adc
adc
sub
inc
cmpsl
je
mov
repnz
subl
inc
ret
mov
dec
stos
or
in
add
lea
sub
xor
es
ljmp
enter
int
movsl
fidivl
arpl
pop
lahf
out
xor
sub
addb
or
nop
shll
jno
xor
clc
std
stos
pushf
ds
movsb
dec
outsb
shrl
lahf
pushf
cmc
mov
rorl
ss
rcll
jl
or
push
sahf
xor
jle
je
leave
mov
cld
fsts
sub
lods
addb
adc
test
xchg
stos
mov
mov
or
add
popw
cmp
jno
mov
lock
cmp
das
sbb
and
mov
push
add
jae
push
cmp
mov
ljmp
cmpsb
push
sbb
scas
fidivl
sahf
test
push
or
lret
popa
icebp
stos
inc
aad
cmp
xchg
out
xor
ss
dec
mov
std
aas
mov
cmc
loopne
mov
xor
inc
dec
ret
push
pop
std
fiadds
jmp
jo
imul
lock
cli
xlat
mov
adc
sbb
pop
dec
gs
or
xchg
cmp
movsb
push
push
jno
push
movntq
mov
push
shlb
push
adc
rorb
pop
scas
loop
outsl
pop
mov
fidivl
cmp
loopne
aam
insl
scas
mulb
jo
sbb
sbb
jae
leave
adc
cmp
and
fwait
imul
pop
dec
cmpsb
outsb
jo
lcall
ret
xchg
fiadds
dec
sub
pop
add
dec
adc
adc
xchg
jns
add
and
inc
shr
fidivrs
jg
clc
movsb
pop
pop
sub
lods
or
rcrl
pushf
sub
repnz
pushf
or
cmp
fldenv
ja
dec
mov
jle
test
push
filds
xor
jle
leave
pop
repnz
ret
adc
xor
jo
and
aam
cmc
mov
mov
mov
dec
loope
xor
outsb
adc
xchg
add
dec
pop
test
out
add
mov
ds
test
leave
jo
cmp
lock
orb
xor
je
mov
leave
test
fsubrl
das
cmp
es
pop
icebp
mov
roll
mov
pusha
adc
pop
hlt
cmp
aaa
cmp
mov
imul
adcl
jb
inc
push
insl
cmc
mov
lret
or
les
inc
fbld
sbb
add
gs
stc
and
xchg
inc
mov
xchg
jp,pn
mov
das
fcos
stc
int
dec
movsb
lods
popa
xor
lods
adc
and
andl
cmpsb
shrl
adc
inc
sarl
cmpb
push
mov
jp
sbb
lret
sti
mov
in
jp
mov
test
jge
sbb
fadd
add
jmp
adc
push
push
mov
mov
loopne
pop
mov
popa
mov
xor
mov
inc
fs
push
cs
xor
jmp
and
dec
and
fnsave
fidivrs
cmpsb
dec
bound
fidivl
mov
ret
ret
cmp
loop
int
mov
cmpsl
leave
xor
out
fcoms
mov
and
lock
mov
adc
mov
mov
lock
adc
int3
xchg
push
lock
cmp
inc
add
shlb
dec
cmp
test
mov
cltd
mov
fsubrs
sub
mov
cmp
dec
cld
lods
and
out
subl
daa
aaa
scas
mov
pop
xchg
shrb
jmp
out
cmp
fnstenv
pop
or
fldenv
lret
xor
mov
mov
ja
or
or
sub
aaa
fs
testl
mov
xlat
sub
std
jp
mov
lds
sub
les
rcrl
aas
jbe
mov
cld
and
push
clc
test
sar
pushl
out
cmpb
cmc
fbld
mov
mov
enter
sub
adc
ror
orl
das
mov
pop
in
mov
pop
cmpb
sub
jnp
pop
jp
and
jp
rcl
lea
push
out
shlb
jno
ret
cmpsl
mov
imul
clc
cld
push
jno
bound
inc
jecxz
pop
mov
loope
xchg
push
ret
push
push
adc
mov
lods
sahf
push
icebp
inc
rcl
mov
ret
mov
lds
pop
lret
sbb
ja
adc
daa
sub
lods
icebp
outsb
adc
mov
stc
push
in
aad
sub
sbb
mov
sub
fstpt
in
jo
xor
add
rorl
inc
xchg
cltd
pusha
xchg
es
ror
xchg
jb
push
std
cmpsl
adc
cmovs
cmp
out
adc
lods
loopne
daa
xor
and
cltd
popf
sub
dec
arpl
xlat
addr16
cmp
jns
mov
lret
mov
or
stos
clc
mov
stos
repnz
and
jno
ffree
inc
lock
adc
jbe
xlat
dec
mov
ljmp
sub
leave
iret
add
jne
or
cmp
xchg
call
lds
add
jne
pop
and
fs
pop
outsb
cmp
sbb
inc
rolb
jmp
jne
pop
mov
stos
pop
and
inc
loop
fldl
cld
mov
mov
xchg
ljmp
mov
sbb
leave
testb
sub
xor
pop
push
fdivr
icebp
in
and
outsb
jne
test
jbe
dec
jo
jo
arpl
hlt
push
lret
ficompl
ret
or
fiaddl
shlb
lods
aaa
roll
jbe
cmp
fs
inc
jnp
mov
loope
sbb
stos
int3
std
or
lret
add
xor
xor
fnstcw
cmp
jb
rcrl
jne
jge
imul
jb
add
sar
sub
sub
inc
negl
jno
repz
jns
fisubrs
jb
or
les
add
mov
push
fwait
in
dec
and
inc
adc
repz
xchg
sbb
push
test
loope
mov
mov
testb
aas
jmp
pop
push
and
sbb
arpl
pop
or
notb
xchg
fmull
mov
mov
xchg
fcompl
xor
xor
test
add
notl
cmp
hlt
mov
in
jbe
std
mov
xchg
dec
popa
push
pop
fwait
jecxz
fldcw
enter
push
inc
in
inc
outsb
nop
cmp
cmpsb
sub
jmp
shrb
cmpsl
repz
add
mov
out
mov
imul
std
imul
ss
cmc
clc
push
inc
imul
mov
inc
mov
ljmp
mov
push
mov
mov
aas
inc
lds
sub
aas
xchg
loopne
inc
movsb
std
dec
sti
and
cld
push
xlat
imul
push
adc
fldl
push
insb
cltd
dec
xchg
sbb
pop
xor
xor
xchg
xor
mov
outsb
hlt
mov
xchg
pop
hlt
cli
ljmp
imul
xchg
aaa
mov
jmp
or
roll
scas
or
not
inc
data16
stc
dec
cmp
sbb
sti
mulb
pop
ss
and
and
inc
xchg
test
add
sbb
stos
xchg
fildl
pop
adc
repnz
insl
dec
pop
aaa
test
mov
cmpl
cmp
lods
pop
mov
sti
sbb
pop
mov
xor
sti
lds
les
sub
test
xchg
sub
pop
pop
push
std
imul
sub
imul
jl
in
inc
mov
addr16
or
jl
cmp
sub
shrb
dec
jae
scas
rcrb
inc
push
add
dec
andl
inc
repnz
ds
cld
mov
jo
and
xchg
pshufw
cmp
xchg
and
and
jns
or
xchg
arpl
scas
inc
adc
ds
pushf
sbb
das
call
add
inc
das
pop
add
shll
pop
inc
adc
xchg
mov
lods
mov
dec
andnps
mov
push
rcll
mov
pop
cmp
icebp
mov
adc
sub
pop
adc
ss
mov
lods
je
clc
pop
test
and
insl
daa
add
jg
adc
cld
pop
cmp
in
xchg
pop
aad
pop
ret
xlat
dec
jo
xchg
scas
jmp
test
lock
push
pop
xor
aad
gs
dec
popf
sub
rorb
cmp
add
loop
imul
cld
in
lods
stos
daa
and
pop
movntps
lock
mov
cmp
and
in
sti
inc
gs
dec
and
push
xor
mov
fstpt
fisubrl
cmc
inc
cmp
jecxz
lods
enter
xchg
add
cmp
mov
xchg
daa
in
aam
sbb
rcrb
loop
push
dec
mov
push
jns
mov
ja
mov
sub
mov
lock
add
scas
add
rcl
cltd
lret
andb
cmpsb
jb
inc
cmp
and
cmc
shrb
popf
cltd
dec
sarb
mov
cmpsl
stos
stc
test
push
in
xchg
push
xchg
pop
push
into
test
jae
lods
dec
jae
dec
daa
or
xor
mov
in
fnsave
dec
fwait
dec
imul
ficomps
aaa
cmp
or
jnp
mov
das
push
das
push
push
or
out
test
lahf
cmc
mov
dec
jmp
sub
xchg
fidivrs
es
ret
dec
cli
daa
pop
xchg
mov
lahf
mov
xchg
sub
jns
movl
push
fcomp
mov
je
cmp
stc
in
subb
aad
test
cmp
pop
cltd
gs
mov
xchg
into
xor
shr
fs
nop
call
push
add
mov
divl
mov
mov
lret
add
adc
loop
shrl
xchg
adc
push
sub
xchg
outsb
xchg
mov
addr16
and
addr16
notb
push
orl
out
out
ret
call
pusha
dec
lret
sarl
shll
add
mov
or
xchg
hlt
jnp
in
movsb
je
repnz
or
in
arpl
loopne
and
ret
mov
popa
mov
hlt
xchg
jle
xor
adc
sub
sbb
sub
pop
cmp
jl
sbb
cwtl
arpl
out
imull
jecxz
and
push
mov
sahf
sbb
iret
lock
or
sbb
aad
subl
repz
dec
sub
push
mov
aad
movsl
call
inc
js
inc
bound
fdivl
mov
inc
aas
dec
js
fisubs
sbb
sbb
rolb
jb
je
xlat
pop
daa
outsb
js
xchg
in
shrl
mov
shrb
out
jne
inc
mov
xchg
aam
iret
jb
push
and
or
and
outsb
mov
sbbl
stos
or
xchg
add
mov
adc
loopne
out
dec
mov
pushf
sbb
in
push
add
rclb
int
mov
sbb
mov
cli
lea
lahf
cmpsb
push
push
add
test
lds
pop
popf
cli
fwait
jb
xchg
mov
andb
fdivrl
aas
mov
insl
add
jns
in
ja
shl
jo
adc
add
pop
imul
movsl
adc
fidivl
in
and
imul
or
lret
movsb
sbb
xchg
insl
fidivrl
hlt
pushl
add
and
adc
add
inc
insl
sbb
xor
aam
xchg
pop
pop
imul
fisttpll
ja
or
xchg
int3
repnz
fisttpl
cmp
mov
push
dec
out
scas
test
pop
lahf
mov
cltd
stos
and
inc
mov
sub
outsl
jl
xchg
push
dec
popf
fists
push
or
lret
out
pop
jo
or
notl
push
cmp
jg
dec
lds
es
mov
leave
movsb
adc
pop
mov
mov
jle
jle
sub
push
test
mov
dec
adc
inc
out
daa
add
pop
or
shr
adc
xor
fwait
arpl
and
push
pop
dec
push
push
mov
jmp
adc
jmp
lret
outsl
aam
cmp
xchg
sub
sub
test
jl
sbb
dec
pop
aas
and
fstpl
or
mov
add
out
dec
push
adc
cmp
ret
cld
ret
mov
inc
mov
daa
xor
arpl
mov
aam
jae
push
xor
cmp
or
hlt
add
or
jmp
dec
jbe
inc
adc
pop
sub
lods
mov
movsl
push
jnp
jnp
pop
insb
mov
insl
insl
mov
push
sbb
mov
xlat
xchg
add
push
xchg
sbb
cmp
dec
pop
out
dec
dec
das
jl
inc
popf
clc
mov
mov
daa
xchg
push
int
lock
add
ret
leave
ljmp
aam
out
jo
push
cmpb
aam
fwait
adc
mov
and
movsl
add
cmp
sub
mov
lahf
stc
sahf
and
mov
sbb
push
mov
or
push
dec
cmp
out
je
insb
cmpsl
addb
cltd
ja
sti
mov
dec
andb
scas
xchg
xchg
mov
pushf
cmc
bound
fnstsw
rorb
mov
out
and
xchg
lcall
xchg
addr16
cwtl
adc
jne
sahf
inc
mov
in
dec
sbb
adc
xchg
jno
subb
out
call
lea
dec
mov
mov
pop
pop
sub
mov
loop
jb
and
imul
add
and
or
lea
out
hlt
ljmp
icebp
mov
iret
fwait
push
fistl
fwait
or
jne
loope
sbb
push
mov
movsb
xorb
fistpll
and
mov
pop
inc
jmp
mov
add
mov
dec
fldt
xor
jno
add
mov
inc
xor
les
or
xorb
cli
insb
test
and
and
into
aas
aam
mov
mov
push
cltd
xorps
movsl
jecxz
xor
and
and
insl
cmpsb
stc
es
bound
aas
cmp
scas
pop
loope
adc
dec
ja
sbb
negl
push
jge
inc
cmc
jns
pushf
inc
cli
xor
or
push
lds
ljmp
dec
lds
sarb
mov
lea
xchg
jae
decl
call
adcl
dec
bound
dec
xor
inc
pop
imul
mov
lret
test
inc
sub
mov
repnz
sti
clc
lret
repz
xor
sbb
xchg
xchg
hlt
xchg
sub
cltd
add
push
push
mov
mov
xchg
push
loopne
pop
imul
in
in
loop
mov
call
inc
jo
adc
ficoml
mov
add
and
imul
mov
scas
ret
push
mov
dec
pop
shll
imul
ljmp
in
sbb
les
shlb
js
in
cwtl
add
ljmp
or
or
popf
bound
or
xor
mov
adc
sub
je
iret
stos
jp
or
push
push
sub
push
sub
rcr
mov
shlb
shlb
mov
pop
daa
mov
rorb
jmp
and
pop
pop
dec
add
push
fwait
pop
insl
hlt
test
shrl
outsb
adc
cmpb
xor
sub
aad
add
cltd
dec
stc
shlb
pop
popl
or
mov
xor
sbb
or
xchg
push
lds
mov
mov
mov
cmp
in
and
lcall
pop
sbb
dec
push
jno
jbe
cld
dec
jmp
cltd
std
mov
cli
mov
cltd
rep
or
rcr
push
mov
or
sbb
pop
pop
cmpsb
rol
loope
xchg
inc
mov
mov
cwtl
pop
sahf
add
cmpsl
inc
jge
cmc
pop
jbe
mov
loopne
mov
popf
sbb
data16
arpl
xchg
loop
dec
scas
loopne
lea
xor
mov
nop
lret
aam
adc
inc
and
mov
and
insl
xchg
stc
inc
dec
aad
pop
mov
and
lds
aaa
int3
jns
sub
test
lret
aaa
pop
pop
mov
mov
mov
imul
fldt
mov
insl
test
pop
sub
dec
xchg
pop
jecxz
mov
subb
lods
push
add
leave
les
jecxz
and
push
xchg
sub
push
in
popf
popf
ds
cld
pop
mov
inc
cwtl
push
cs
mov
push
dec
mov
inc
pop
mov
jno
loop
push
cli
pop
dec
inc
sbb
mov
dec
xorl
out
sbb
sarb
jo
cmp
sbb
fs
icebp
inc
adc
mov
xchg
ret
inc
push
jp
dec
dec
pop
sbb
xchg
mov
mov
pop
xor
mov
mov
sub
popa
xor
xor
push
imul
fldenv
fisttpll
xor
mov
repz
mov
daa
aas
pusha
ja
mov
arpl
push
sbb
shrl
xchg
sub
cld
push
push
sbb
fdivrp
mul
fadd
addr16
imul
imul
and
or
ja
ret
push
xchg
into
xlat
icebp
loope
dec
mov
or
add
ljmp
add
adc
outsl
mov
mov
cmp
or
cmpsb
xor
lea
jne
push
sti
scas
pop
cld
out
cmpsl
jnp
pop
shrl
sub
and
mov
push
fsubs
repnz
in
subl
or
cmp
and
push
icebp
sub
adc
subb
push
js
test
xor
js
pusha
ss
out
xchg
in
adc
mov
and
sub
pop
stos
in
dec
das
cmp
push
adc
sahf
jle
int
adc
jns
pop
data16
add
sbb
push
pop
cld
out
lods
sbb
int
js
adc
lods
push
fsubr
mov
fs
ds
iret
xchg
mov
add
inc
jo
dec
out
insb
or
inc
and
movsb
cld
add
jg
mov
jae
inc
loope
adc
pop
ja
xchg
lcall
arpl
mov
lret
stos
or
or
jnp
mov
mov
in
xchg
and
lock
stos
movsl
add
aaa
outsb
jnp
test
sub
xchg
out
xor
or
into
ja
or
rorl
push
ds
fcompl
xchg
mov
cmp
jae
sti
sbb
jbe
scas
loop
test
jge
sahf
sbb
dec
dec
js
out
fcomps
and
lcall
imul
sub
mov
sub
inc
push
mov
add
mov
pop
add
mov
jb
jb
mov
push
rorl
adc
add
popf
stc
icebp
andl
adc
cld
in
push
push
inc
fisubl
test
xchg
out
pusha
push
hlt
push
dec
ret
pop
sbb
push
push
and
cwtl
adc
mov
inc
xor
cmp
test
mov
addr16
daa
add
pushf
xchg
cmp
lret
cmc
jno
mov
sbb
push
jmp
sub
mov
inc
cli
in
in
lods
adc
rcll
negl
in
loopne
enter
stos
jno
xchg
ds
push
add
dec
fwait
sub
mov
push
jl
jmp
adc
mov
jnp
push
lahf
mov
and
dec
or
jnp
scas
add
sub
cmpsl
decl
jnp
inc
les
pop
in
add
cli
inc
sar
jo
mov
jae
aam
mov
lds
test
and
mov
xor
dec
into
mov
bound
xor
shl
lock
inc
mov
out
mov
imul
outsb
mov
push
addl
les
jmp
sub
lcall
insl
mov
dec
mov
rorb
imul
or
lret
fldcw
mov
jp
adc
mov
daa
pop
pop
scas
mov
mov
inc
lahf
gs
div
push
enter
jg
enter
addr16
fidivrl
ja
mov
xor
lret
sub
xor
mov
sub
mov
and
mov
nop
xor
pop
push
out
sub
jne
mov
ret
out
data16
inc
dec
shl
loope
pop
cmp
inc
cli
pop
das
dec
mov
and
add
mov
jecxz
insb
cmp
addr16
inc
fisttpll
ja
xchg
inc
cmpsl
insb
call
dec
add
and
xor
incb
mov
je
sahf
mov
push
leave
cs
roll
jmp
xchg
daa
dec
das
fs
stos
dec
mov
adc
clc
cmpsl
jnp
sti
aas
xchg
stc
sbb
pushf
into
lret
jle
iret
aad
mov
mov
popf
or
arpl
stc
sbb
cmp
cltd
sbb
mov
mov
icebp
enter
roll
jno
sbb
in
in
xchg
icebp
fwait
leave
leave
mov
aad
jo
mov
rcrb
ret
pop
enter
mov
mov
ret
and
adc
ja
ljmp
lock
mov
js
jecxz
mov
sbb
or
int
mov
or
pop
xchg
call
cmp
push
roll
cmp
pop
cwtl
cld
jbe
fstl
fstl
mov
ljmp
mov
lds
cmpsl
enter
pop
or
adc
xor
aas
cmp
mov
add
jecxz
mov
push
inc
jbe
sbb
enter
rclb
and
movsb
add
add
rorl
sub
jle
pcmpeqb
cwtl
jle
xchg
imull
dec
xor
popa
mov
insb
les
sub
sbb
pop
push
push
push
aas
fcmovb
std
push
lret
inc
or
jle
jo
push
adc
sbb
jecxz
loop
test
push
pop
sarb
sbb
pop
inc
stos
jno
and
mov
test
mov
lock
sarl
cmp
lock
mov
leave
int3
push
aam
sub
jno
movsb
data16
iret
test
push
sbbl
push
stc
shll
sbb
jle
sub
fisubs
int3
xor
movsb
stos
pop
fnstcw
cs
add
cld
sub
inc
shl
inc
xlat
mov
inc
mov
push
fadds
repnz
push
adc
pop
push
inc
add
das
ja
movsl
test
sbb
xor
aam
loop
loopne
test
call
jnp
jl
adc
dec
cltd
dec
iret
mov
or
jmp
outsl
pop
out
inc
add
cmp
mov
jo
js
out
sbb
push
test
pop
and
imul
cmp
cltd
sub
rcrb
push
inc
ret
pop
out
sbb
out
ficompl
gs
cli
and
cli
pop
dec
mov
cmp
pop
add
add
es
mov
xor
sti
sbb
cltd
movsb
cld
jle
inc
cmpsb
dec
outsl
push
popl
lret
out
cmpsl
das
clc
in
dec
pop
or
xor
xchg
sti
mov
adcb
jno
sbb
push
sbb
add
lahf
push
pop
and
pop
jmp
jmp
jne
in
and
cs
jmp
xchg
inc
dec
mull
mov
sub
add
arpl
ffreep
push
int
imul
mov
push
or
shlb
sub
adc
xchg
mov
loop
lods
outsl
inc
and
cmp
xchg
pop
lds
mov
dec
mov
loop
add
add
cmp
ret
inc
jno
mov
add
push
jns
icebp
in
popl
testb
data16
push
sahf
out
push
push
push
mov
js
nop
push
pop
add
push
imull
jecxz
xchg
dec
sbb
inc
xor
lds
ror
xchg
sbb
mov
pop
test
jne
xor
jmp
xchg
aad
int3
and
xchg
mov
loopne
mov
sti
cwtl
mov
ja
bnd
sahf
adc
int3
inc
mov
lahf
fwait
repnz
adc
push
push
or
xchg
ds
jmp
xchg
mov
out
insl
stos
fcompl
xor
add
cmp
inc
xchg
xchg
cmpsl
mov
mov
jb
or
and
jne
pop
out
out
mov
insl
add
orb
lahf
xchg
sbb
scas
stos
sub
jl
push
insb
jle
jl
cmp
dec
out
cmp
push
sub
mov
add
shlb
lock
adc
enter
adc
sbb
add
repnz
sbb
test
fcmovbe
mov
sti
pushf
xlat
mov
inc
push
jl
dec
dec
cmp
mov
jae
xchg
lahf
mov
ss
loop
data16
scas
lock
data16
push
cmpsl
cwtl
aam
inc
les
sti
xchg
in
enter
fisubl
inc
or
mov
dec
cmc
and
lahf
cmc
sti
or
movsb
ja
mov
popf
jg
aad
add
inc
sti
pop
insl
lcall
xchg
jno
push
repnz
pop
cld
cmpsb
cmpsl
sub
outsb
jl
mov
stos
ficoms
and
xorb
ljmp
and
adc
jp
and
es
imul
ds
xchg
in
repnz
add
loopne
xor
push
jmp
outsl
movsb
jle
mov
les
pushf
cmp
sarb
dec
stos
jb
push
leave
ss
jle
jae
fidivl
sub
pop
or
std
mov
mov
scas
mov
sbb
or
daa
mov
mov
push
es
mov
les
adc
lcall
pop
mov
jge
sub
jmp
jb
aas
mov
test
bound
xlat
fadds
xchg
mov
dec
add
repnz
mov
sti
cmp
shrl
mov
out
and
cwtl
adc
xchg
sbb
es
mov
lods
sbb
lret
loope
insl
jle
or
mov
lds
push
pop
inc
push
pop
je
pop
pop
jge
jbe
push
jp
addr16
push
cmpb
out
jae
cmp
jle
testl
mov
ds
mov
ret
xchg
inc
imul
mov
and
lret
add
ljmp
cmp
into
testb
dec
test
inc
fwait
pop
pop
push
jo
xchg
xor
addl
js
in
or
cli
dec
jp
clc
inc
dec
sbb
mov
adc
je
lea
push
sti
jae
cmp
inc
cmp
fmul
adc
or
fdivl
xorb
lea
pusha
xchg
ror
jb
cmpsb
andl
dec
gs
jl
imul
and
or
mov
repz
and
mov
enter
jge
push
mov
mov
lods
jns
pop
mov
cmpsl
fcmovnbe
idivl
inc
cmp
and
es
inc
pop
adc
pop
jl
iret
sti
adc
xor
jl
jge
ret
dec
or
fdivrs
aad
test
add
adc
insb
adc
nop
out
or
ljmp
mov
sub
or
cltd
into
clc
inc
lret
shlb
nop
cmc
pop
pop
testb
fchs
andb
cmp
xor
push
popf
je
add
push
mov
cmp
mov
pusha
inc
clc
inc
sbb
push
xchg
or
jp
inc
sbb
jae
push
jge
cs
roll
mov
nop
cmp
scas
sbb
test
cwtl
dec
inc
dec
xchg
pop
ret
mov
ljmp
dec
lock
imulb
popa
into
jp
out
xor
call
mov
lods
hlt
les
in
and
dec
jae
loop,pt
xor
jmp
in
add
in
sahf
push
outsb
mov
adc
or
xchg
jle
out
ja
movsb
adc
das
jle
xor
cltd
pop
jg
icebp
push
pop
fwait
xor
add
dec
cmpsl
aaa
push
push
ret
inc
js
and
filds
mov
ds
stos
js
outsb
cmc
xlat
outsl
pop
rorb
sub
jmp
mov
out
adc
push
mov
rcrl
bound
leave
mov
pop
ds
xchg
mov
movb
mov
or
sub
add
push
mov
push
mov
push
inc
adc
add
sbb
add
outsb
jnp
dec
sbb
lret
dec
into
mov
in
cld
loop
pop
jecxz
pushf
scas
adc
sub
sub
mov
cmp
leave
mov
pop
mov
cwtl
mov
add
dec
jb
or
cmpsb
bnd
inc
nop
fdivp
lea
rcll
mov
popf
mov
lahf
lahf
mov
int
jmp
adc
or
scas
jbe
push
in
scas
cmp
int
sbb
addr16
je
inc
test
addb
mov
xchg
sar
push
ret
mov
jl
inc
xchg
ret
xor
jns
mov
ret
push
popf
sbb
mov
test
lds
dec
mov
mov
xchg
cmpsb
cmpsl
cmpsl
inc
mov
loop
ret
inc
mov
add
sub
cmp
mov
dec
xchg
out
mov
push
or
and
int
cmp
jnp
clc
out
and
out
aam
dec
add
mov
adc
and
mov
out
jns
test
test
outsb
popa
sub
sbb
and
jmp
xchg
aad
mov
nop
xor
mov
ret
dec
ror
inc
push
add
ja
jmp
xor
jae
cmp
xchg
daa
cld
and
leave
out
or
adc
adc
sbb
sbb
cmp
xlat
pop
lahf
add
mov
push
ret
cli
pop
nop
imul
push
inc
leave
adc
inc
mov
xchg
and
aam
movsb
xchg
or
pop
jp
add
and
jmp
sbb
push
add
pop
mov
xchg
jne
scas
repnz
inc
mov
sub
mov
xor
mov
push
ljmp
xor
inc
dec
mov
mov
ja
jbe
push
insb
push
dec
xlat
xorb
lds
xchg
push
jg
push
aad
or
xchg
imul
xchg
test
fmuls
mov
in
hlt
sbbb
xchg
sub
sti
out
sti
mov
loope
scas
arpl
inc
dec
sti
std
lahf
push
add
sti
dec
sbb
test
nop
cwtl
xorb
data16
push
sub
ficoml
iret
jp
push
or
imul
outsl
or
or
sub
out
mov
cmp
cltd
inc
jns
gs
xchg
xor
mov
push
fwait
and
jns
xlat
adcl
fsubl
pop
inc
lock
adcb
ss
and
iret
int3
ficoml
mov
cltd
pmullw
pop
add
scas
insl
adc
cmpsl
ret
or
lods
push
repz
es
movsb
inc
mov
mov
pop
sbb
leave
xor
movsl
xchg
sbb
pop
push
and
mov
rcll
mov
in
mov
push
xchg
jae
shr
stc
xchg
and
fldl
jp
xchg
pop
add
or
stos
dec
xchg
arpl
cmp
push
scas
jmp
dec
stc
lea
lret
push
dec
sbb
inc
lcall
pusha
daa
rolb
addr16
jmp
cwtl
and
sub
mov
pop
popf
pop
shr
mov
mov
and
xchg
jge
daa
lods
in
shlb
pop
outsl
push
mov
nop
mov
xchg
gs
jmp
dec
adc
ret
inc
push
mov
add
mov
pop
pop
sub
xchg
sbb
fldt
and
sti
sbb
mov
adc
sbb
shrl
inc
aad
gs
push
fcoml
lcall
mov
and
and
mov
scas
in
lcall
mov
jge
inc
xor
sahf
stos
mov
dec
xchg
fistpll
mov
insl
and
or
mov
cmp
call
mov
sub
lea
mov
popl
scas
pop
fcomi
pop
push
mov
xchg
pop
insb
sbb
lds
xchg
dec
or
xlat
push
or
test
xor
push
test
cwtl
orl
into
xchg
mov
in
lods
jmp
cwtl
push
test
dec
or
loop
pop
repz
dec
mov
push
imul
test
cmp
mov
pop
cmp
and
pusha
cmpsb
mov
inc
repnz
outsl
rcl
jecxz
hlt
adc
jo
scas
inc
sahf
les
movsb
and
cmp
inc
or
sbb
sub
jl
inc
movb
push
leave
cmc
adc
loope
sbb
jmp
mov
sti
nop
push
ret
xor
test
mov
mov
mov
push
mov
dec
jl
mov
add
scas
pop
or
test
mov
pop
push
insb
cmpsl
fmuls
mov
sbb
in
mov
insl
mov
and
shll
scas
fisubrs
pop
fisubl
scas
fucom
in
shrl
add
inc
popf
shr
call
pop
fldcw
cmpsl
aas
mov
testl
ljmp
sbb
pop
test
faddp
rolb
sbb
mov
push
xor
dec
je
push
repnz
hlt
repnz
xchg
push
and
enter
cmp
sub
testb
pop
push
pop
jne
mov
adcb
xchg
pop
cwtl
int
in
jp
stos
jo
mov
jo
add
jbe
lahf
sub
nop
hlt
dec
push
lock
mov
ja
out
push
xchg
shlb
enter
pop
push
cli
dec
and
xor
int
xchg
in
or
lret
es
jbe
cmp
or
fcomp
lods
sub
in
sbb
insb
aaa
lea
adc
dec
mov
sbb
addr16
popf
xchg
fldl
aam
mov
mov
sbbl
sbb
in
fs
out
sub
mov
ret
loop
dec
fsubs
dec
push
sbb
adc
push
andb
sub
xlat
mov
xbegin
lods
adc
mov
subb
daa
cmp
mov
pop
notl
xor
loop
or
rorb
into
cld
mov
cs
out
lret
orl
enter
stc
or
mov
ret
cmpsl
mov
nop
test
arpl
rcr
ret
cmp
test
pop
mov
in
insl
sarl
pusha
repz
icebp
sbb
imul
pop
pop
push
xor
mov
adc
dec
xor
loope
out
scas
sahf
les
push
pop
lahf
dec
mov
dec
mov
jg
sub
ja
jnp
mov
dec
sbb
fstl
mov
es
shlb
pop
sbb
add
lea
out
or
sub
rorb
loopne
and
ret
into
and
xor
mov
rcrb
sar
hlt
adc
outsl
andl
int
pop
sub
fisubrl
mov
ret
dec
cltd
mov
cwtl
pop
outsl
es
pop
sub
inc
ret
cltd
dec
lods
mov
divb
pop
push
rorl
jecxz
xlat
add
insl
je
or
imul
xor
mov
fwait
rcll
idivb
loopne
cmpsb
pop
setl
mov
scas
xchg
xchg
sbb
rcrb
sarb
adc
add
sbb
push
popf
xlat
inc
xchg
in
aad
cmp
test
jge
fdiv
ds
push
or
andb
push
movb
push
push
mov
cmp
dec
cs
ss
xchg
mov
adc
ror
mov
stc
lods
out
pop
xor
fidivs
test
xchg
testl
icebp
add
sbb
and
xor
adc
in
imull
add
mov
mov
fbstp
xchg
adc
adc
jae
or
jae
xchg
lock
mov
or
repnz
out
subb
movsl
inc
push
push
cmp
adc
cmp
cmc
loopne
jle
test
sahf
je
jo
jae
mov
insb
loope
mov
repnz
adc
leave
lods
sub
fisubrl
pop
mov
cmp
rclb
jmp
push
pop
fistpl
dec
cmp
push
mov
lea
lcall
push
push
inc
cltd
das
inc
and
mov
movsl
inc
and
rorl
cmpsb
insb
dec
rclb
stos
inc
sub
push
ja
clc
iret
lret
test
imull
or
inc
dec
or
lds
nop
pop
cs
sub
movsl
push
xchg
std
xor
sahf
rorb
mov
and
add
call
arpl
das
lods
movsb
adcb
stos
loopne
imul
aas
hlt
push
std
push
push
add
das
jmp
lret
insl
loopne
pop
inc
xlat
fisubrl
jns
adc
pop
rolb
pop
adc
cmp
rorb
push
jp
jnp
xchg
mov
ret
add
jecxz
dec
mull
jne
fdivrl
xchg
cmp
decl
clc
mov
jnp
fs
cmc
pop
cmpsl
out
inc
stos
call
cmp
jns
cmpl
or
cs
pop
ss
jae
push
nop
mov
sub
fimull
inc
test
mov
adc
push
fldcw
sbb
xor
cmc
push
jns
jp
aaa
das
sub
into
add
lret
add
and
add
push
add
push
adc
jnp
pop
push
mov
sub
sbb
call
mov
dec
fs
add
jnp
and
test
xchg
mov
shl
xchg
xchg
mov
and
lods
int
xchg
adc
pop
inc
or
mov
lock
pop
cmpsb
jbe
sbb
das
push
add
mov
mov
icebp
jns
and
leave
push
jo
inc
in
in
mov
push
mov
add
ss
outsb
mov
or
arpl
adc
or
je
jecxz
das
pop
sub
cs
push
js
xlat
es
aad
jecxz
and
cmp
mov
pop
data16
movsb
jbe
xchg
sbb
sbb
pop
scas
rcll
scas
push
sbb
mov
es
ffreep
mov
sbb
sahf
adc
sub
out
pop
negb
xlat
dec
mov
lock
adc
adc
mov
test
test
jp
int3
mov
jnp
fsubrs
divl
mov
jge
xchg
sbb
mov
xor
pop
into
test
sbb
stos
mov
pop
jbe
sbbb
lock
sub
cmp
fsubrl
xor
adc
popf
sbb
sub
inc
test
sub
cwtl
xor
jg
das
adc
shrb
test
mov
mov
cmp
rclb
lahf
lret
scas
push
cmp
push
push
outsl
addr16
jmp
dec
lahf
push
movsl
jo
mov
mov
xchg
push
fcmovne
add
scas
add
inc
loope
sbb
xor
jge
jne
xchg
xchg
xor
jl
xor
data16
rcl
lea
cmp
and
das
mov
jne
and
aaa
sti
mov
sub
mov
jg
rorl
aaa
mov
test
lds
dec
adc
jns
adc
cmp
leave
fstpt
pop
les
jecxz
popf
cld
cmp
es
stos
mov
fimuls
sub
lods
and
nop
pushf
int3
push
mov
lods
mov
mov
add
outsb
pop
out
lock
push
dec
xchg
push
sbbl
sub
jg
into
inc
mov
xchg
jp
in
mov
mov
sbb
rcll
sub
or
inc
or
arpl
add
adc
mov
mov
jnp
andb
lds
dec
rclb
in
pushf
insb
xor
stos
jecxz
mov
sarb
inc
test
inc
ret
or
ret
xor
fistpll
sub
mov
and
lret
sti
outsl
adc
mov
pop
lahf
nop
push
mov
xchg
mov
inc
jp
or
dec
sbb
xor
in
outsl
mov
sbb
mov
sub
dec
mov
stc
or
mov
aam
mov
fldl
or
pusha
aaa
inc
mov
sub
scas
loopne
dec
int3
idivb
call
dec
out
sbb
adc
das
repnz
or
das
add
and
inc
ret
mov
adc
or
mov
imul
cltd
mov
mov
xchg
sbb
dec
mov
cwtl
mov
xorb
aad
leave
adc
xor
enter
aam
inc
insb
leave
ljmp
mov
jno
sub
andb
xor
pop
mov
cli
sbb
xor
out
push
inc
subl
fcompl
cltd
aas
mov
ror
cmp
xchg
fistpll
js
fnstcw
inc
and
imul
mov
andl
clc
mul
out
je
mov
pop
mov
mov
js
scas
push
pop
jnp
std
cmc
push
jae
cmpsl
and
cmpsb
stos
push
xor
pop
push
movsb
or
add
cmpsl
inc
add
out
popf
gs
les
andb
cwtl
mov
xor
sub
push
les
sbb
cmp
mov
lock
lcall
xbegin
ret
adc
cli
orb
xor
mov
sbb
mov
ja
test
clc
stos
xorl
ljmp
repnz
call
sbb
test
outsb
stos
jle
divl
mov
stos
mov
shl
orl
inc
inc
into
mov
lahf
xor
fs
mov
dec
pop
lods
sbb
daa
pushaw
fnstenv
rolb
push
push
or
outsl
mov
add
cmp
lahf
cmp
mov
adc
lea
gs
adc
dec
cmp
pop
sbb
rorl
sbb
pop
xchg
popf
imul
pop
xorl
mul
outsb
mov
cs
cmp
or
or
pop
wrmsr
in
cld
push
inc
movsl
cld
mov
xchg
xor
ret
mov
or
ljmp
dec
and
mov
mov
fwait
push
scas
aaa
sbb
pop
inc
adc
xchg
mov
movsb
insb
mov
push
cmp
inc
xor
in
mov
dec
out
cmp
ljmp
jg
pop
dec
and
inc
scas
or
xorb
cld
stc
xor
mov
or
add
mov
clc
cli
adc
pop
movsl
mov
int
insl
test
cmp
xor
mov
divb
fmul
xchg
inc
add
filds
popf
jns
add
jge
or
xchg
hlt
pushf
cmp
mov
mov
xor
stos
enter
sub
pushf
pop
in
pop
dec
ret
cmp
add
or
bound
in
jge
cmp
in
xlat
push
dec
pusha
popa
outsl
mov
movsb
mov
in
xchg
popa
xor
push
push
ljmp
mov
fyl2xp1
jg
test
add
mov
insl
or
cmp
cli
andl
jns
shrb
jge
mov
sbb
inc
sarb
cmp
xchg
shll
shl
inc
mov
inc
cmc
or
scas
adc
leave
jo
insb
data16
mov
sub
pop
rclb
lret
loope
mov
lock
lcall
mov
fistpl
std
or
mov
push
rolb
stc
xchg
repnz
xlat
mov
enter
adc
stc
adc
dec
xor
mov
mov
push
xchg
and
mov
ds
gs
data16
mov
sub
mov
jnp
mov
cmpsb
bnd
stc
push
push
mov
dec
incl
pop
xchg
mov
in
subb
dec
rcrb
xchg
pop
fdivrs
jp
jp
arpl
xchg
shl
stos
xchg
or
lock
mov
xchg
lcall
pop
sar
jl
movsb
cld
pop
mov
lahf
loope
fnsave
xchg
fnstenv
dec
or
push
fsubrl
jno
mov
jecxz
out
cmp
adc
ror
mov
lock
push
xor
adc
ret
movsl
int3
sub
hlt
div
fstl
xchg
fsubrs
shrl
loopne
test
push
jmp
icebp
das
out
jg
sahf
pop
xor
call
js
std
push
outsb
clc
movsb
and
sar
cmpb
rorb
and
adc
pop
pop
mov
std
mov
cmp
mov
fucomp
arpl
movsl
shlb
int3
or
loope
notb
repz
push
imulb
into
xchg
notl
aas
movsl
xchg
mov
mov
call
in
jmp
mov
xchg
pop
imul
aad
shlb
pop
test
inc
push
sbb
pop
das
movsl
jno
mov
mov
mov
enter
fwait
lds
push
lret
sbb
imul
jg
cs
inc
adc
out
xchg
ret
mov
xorb
frstor
movsl
les
out
inc
pushf
lods
dec
adc
push
aas
jo
fnstcw
pop
repnz
cmp
add
shrl
sub
mov
outsb
inc
inc
movsb
cmp
scas
mov
popl
mov
mov
cwtl
mull
shl
cli
inc
in
and
push
push
jp
push
fisttpl
pop
push
adc
repnz
mov
mov
out
jmp
inc
add
dec
jmp
jo
xlat
das
inc
rcrl
test
hlt
inc
leave
enter
aam
mov
insl
aad
fisubl
pop
dec
jl
popf
imul
add
jle
and
inc
add
lahf
xor
pop
ss
testl
sub
shrb
mov
aaa
add
xlat
pop
stos
mov
push
mov
inc
loope
push
xor
jle
pop
push
fsubr
mov
xchg
int
or
adc
xchg
xor
sarb
data16
mov
shl
out
sbb
sub
stos
lods
or
notb
ja
nop
push
jno
lret
mov
inc
fwait
cmp
adc
jp
pop
jno
xchg
push
movsb
pushf
ret
cmp
rorl
sarl
popa
pop
sarl
xchg
adc
jle
adc
sbb
dec
scas
lods
mov
lret
or
icebp
arpl
xchg
imul
sbb
hlt
mov
aam
add
xor
and
std
add
mov
xchg
outsl
bound
nop
mov
insb
fs
mov
sub
scas
push
stos
add
mov
and
sbb
xlat
and
mov
adc
pop
add
test
adc
subl
inc
add
scas
adc
loopne
and
aad
mov
jge
sqrtps
lods
inc
push
ja
out
dec
inc
ss
int3
sub
les
out
cwtl
add
ret
cmc
adc
xchg
mov
les
sub
les
int3
cli
pusha
stc
add
mov
sub
aas
xor
shll
mov
and
shrl
inc
fldenv
mov
sbb
pop
dec
pop
pop
ror
lods
push
mov
pusha
sbb
xchg
sahf
movsl
dec
sub
xor
arpl
mov
cmpsb
xor
sti
mov
inc
cmp
ficoms
and
int3
cli
push
mov
mov
ja
clc
scas
gs
roll
cmp
mov
xor
andl
sbb
xchg
inc
cmp
xor
daa
add
insl
sti
subl
push
out
pop
mov
cld
cs
loop
jne
clc
or
cmp
xchg
icebp
push
or
adc
cld
shrb
int3
test
adc
and
push
mov
shr
int3
mov
outsl
dec
shll
mov
cmpl
test
pop
pop
dec
insl
add
mov
pop
mov
shll
pop
mov
lret
mov
inc
mov
orb
adc
or
pop
mov
fwait
mov
mov
in
jl
mov
popf
sti
aam
push
lret
dec
push
test
outsb
shrl
addr16
add
sbb
and
nop
jmp
cmpsb
iret
int
cmpsl
ror
mov
filds
idiv
xchg
mov
inc
push
or
xor
in
loopne
lret
jbe
incb
clc
dec
xor
call
std
xor
rcl
loopne
in
cld
pop
cld
push
sbb
int
imul
jp
xchg
ljmp
xor
rcr
lds
iret
adc
pushf
mov
xor
insb
xchg
lahf
in
std
js
push
lcall
pop
mov
and
sub
dec
scas
ja
test
cld
adc
pop
add
dec
jecxz
cli
ss
subb
jp
sbb
fisttps
inc
push
in
xchg
dec
sub
ret
outsl
test
dec
sarl
cwtl
mov
push
push
adc
mov
jmp
loope
movups
mov
fimull
mov
push
test
or
jnp
leave
cmc
shrb
mov
push
mov
dec
sub
icebp
aam
cmp
aas
lea
bound
sbb
into
inc
lock
xor
int3
sub
clc
rcrb
add
mov
xlat
mov
out
mov
insb
sub
adc
sub
sbb
lods
mov
push
iret
and
add
push
lea
dec
cmp
jecxz
mov
xchg
enter
pop
icebp
fstpt
mov
and
cmp
jne
xchg
push
stos
sbb
stos
inc
push
jecxz
pop
cld
cmp
faddp
push
push
out
insb
push
fidivrl
sbb
push
jp
roll
popa
idivl
aad
jae
mov
fisubrs
xor
jmp
sub
mov
adc
xchg
cli
mov
mov
fmul
mov
sbb
mov
lds
mov
xor
cltd
mov
add
iret
sub
into
mov
inc
roll
push
fidivs
mov
cmp
jge
popa
fdivl
cmp
addr16
dec
and
mov
call
pop
popa
lods
mov
dec
dec
push
popa
lret
dec
inc
fdivl
push
mov
xor
and
dec
cmp
pop
sbb
ds
mov
inc
dec
xor
xchg
aad
dec
mov
cmp
xorl
test
lcall
jl
jo
xor
mov
mov
aaa
mov
push
mov
or
add
inc
rolb
and
pop
and
xor
enter
inc
jmp
push
fwait
data16
ljmp
lods
aad
loopne
out
sbb
cmpsl
mov
sub
push
lret
adc
xor
into
adc
mov
mov
jmp
or
sub
into
cmpsl
cmp
cmp
push
in
xor
dec
cmp
repnz
jb
js
es
loopne
jg
out
jns
jl
icebp
pushl
inc
mov
inc
jb
mov
repz
imul
lds
bound
out
insl
and
pop
push
push
test
inc
and
adc
dec
add
test
sub
xlat
jo
popa
adc
mov
sub
ret
fisttpl
leave
clc
lods
jnp
ror
add
fcoms
in
scas
and
and
or
xlat
call
or
inc
fisubl
push
sarb
lcall
jne
int
pop
and
fs
push
jno
mov
xchg
pop
dec
adc
cli
mov
nop
or
or
fists
xchg
hlt
or
xorb
test
in
shlb
divl
aaa
xor
dec
loope
jns
pop
ret
inc
lock
mov
sarb
adc
std
test
inc
xchg
loop
xchg
stos
mov
push
fistpl
in
lret
jne
push
icebp
adc
cmp
push
push
mov
jl
xchg
jns
xor
jne
imul
sti
lock
push
insb
stos
loop
pushl
test
fs
xchg
mov
add
and
add
sbb
jns
andb
sbb
mov
div
fistpll
and
scas
jb
fildll
and
addr16
xorb
fwait
jb
add
dec
lahf
daa
jmp
mov
repnz
xorl
push
aad
roll
pop
jge
rclb
imul
xchg
cmp
cmp
xchg
xchg
sbb
inc
or
jo
mov
std
and
insb
dec
xorb
cmp
mov
das
push
test
scas
mov
imul
jbe
int
mov
mov
outsl
nop
test
pop
mov
adc
push
xor
cmp
inc
icebp
leave
mov
mov
cld
es
data16
das
add
insb
dec
stc
popf
xorl
adc
lret
out
and
mov
aad
out
pop
xor
lock
cmpsb
rorl
aad
sbb
inc
dec
clc
test
rcrb
jl
mov
push
mov
mov
sub
out
je
mov
lahf
mov
push
into
in
gs
sarb
dec
fwait
push
mov
dec
out
cmp
lods
lods
cmpsl
mov
push
mov
mov
inc
testl
pop
sbb
test
pop
jno
pushf
adc
loope,pn
dec
push
clc
les
inc
mov
xchg
cli
xchg
inc
dec
and
push
mov
test
push
xchg
mov
movsl
push
add
sub
sbb
dec
dec
sub
in
das
cmpsl
orb
into
dec
xor
out
mov
arpl
jmp
mov
popf
dec
jb
sbb
xchg
data16
aad
ret
cmpl
adc
sbb
sbb
cwtl
jne
rcll
jae
xchg
cmp
sub
xor
sub
xor
push
jl
ljmp
pop
sti
push
adc
out
push
adc
xchg
ret
push
sub
sahf
jae
inc
push
jg
shlb
cmp
pop
inc
fildll
dec
xchg
jle
leave
shrl
loop
inc
arpl
add
and
pop
sbb
sbb
add
fstpl
mov
jmp
sub
mov
or
jmp
imul
jl
in
pop
das
loop
adc
ror
mov
adc
mov
sti
cmp
mov
out
fs
sbb
daa
in
test
dec
jne
mov
and
xchg
test
cmp
insb
inc
mov
outsb
leave
mov
daa
adc
loopne
dec
xchg
fnstsw
cmp
xchg
dec
add
dec
or
out
xor
lock
push
push
fcmovnu
mov
push
inc
out
movsb
jns
jl
movsb
dec
add
push
push
cmp
fisttpl
mov
js
pop
or
add
ljmp
aam
push
and
mov
lret
push
and
lahf
ficomps
stos
pop
mov
and
cmp
add
decb
lock
sub
cmpb
xchg
mov
ljmp
mov
adc
xor
pop
pop
jbe
stc
pop
xchg
andb
push
flds
out
sbb
aas
dec
inc
clc
jge
dec
bnd
insb
ds
dec
lahf
mov
shlb
mov
or
sbb
icebp
mov
inc
mov
test
subl
andb
push
test
lods
arpl
mov
insl
neg
addr16
loopne
ret
jb
rcll
rcrb
xor
int3
loop
cmpsl
mov
loope
sub
fstp
push
cmpsl
xor
push
in
xchg
out
nop
stc
or
add
pop
cmp
outsb
les
mov
test
rcll
ljmp
mov
les
pop
mov
clc
dec
icebp
sbb
or
sbb
sub
inc
sbb
jmp
lea
out
pop
mov
sbb
jge
movsl
ret
jl
xlat
lahf
jae
pop
mov
xor
mov
sti
out
mov
xchg
sbb
mov
movsl
push
sub
pop
mov
hlt
push
mov
fmuls
lret
fs
incl
mov
or
rcrl
jmp
sahf
int3
mov
lea
int3
aad
aas
mov
jbe
mov
push
dec
inc
in
das
lea
add
mov
outsl
push
dec
scas
cmp
dec
jne
or
iret
out
roll
cmp
scas
mov
shlb
adc
sti
jb
xchg
cs
mov
cmpsl
stc
fimull
and
dec
sahf
cmc
leave
mov
pop
inc
adc
cmp
incb
xchg
int
les
cmpsb
cmp
pop
sti
jbe
testb
in
jns
dec
test
lods
mov
popf
lds
jb
xchg
xor
stos
ret
shlb
cmp
or
das
aad
clc
out
adc
sbb
dec
mov
xor
xor
sahf
fwait
inc
inc
out
in
mov
add
push
notl
inc
in
and
shl
sub
cmpsb
or
sub
mov
loopne
and
mov
cmp
lret
xlat
push
shll
cmpsl
faddp
std
push
dec
fmull
notb
fldl
xchg
cmc
add
sbb
add
iret
out
nop
mov
xor
fdivl
mov
jp
gs
out
xlat
leave
shll
jnp
xchg
inc
insl
ficomps
xor
in
test
aas
je
xchg
loope
push
xlat
xchg
rcr
sbb
rolb
cmc
roll
or
ds
pusha
fdivrp
mov
jne
sbb
das
cld
mov
inc
sub
les
push
jp
xchg
xchg
mov
inc
mov
push
data16
adc
pop
or
push
push
cmp
xor
imul
fwait
mov
xlat
jnp,pt
movsb
mov
jae
xor
cmp
rolb
addr16
js
mov
fists
repz
movsb
sarb
es
outsl
popf
inc
cmp
and
repz
cli
xlat
cmpb
adcl
in
and
pop
jg
icebp
fnstsw
daa
push
lahf
das
dec
push
jp
mov
and
repz
in
clc
pop
icebp
lods
jle
inc
popa
or
sbb
nop
js
push
fisubs
push
bndldx
repz
aad
adc
xor
jno
loope
out
in
dec
mov
jg
mov
jp
pop
cmp
imul
les
loope
stos
jns
aaa
mov
test
mov
mov
jno
push
xchg
sbb
xchg
clc
stos
mov
lds
fistpl
ljmp
sub
jno
inc
pushf
loope
push
mov
cmp
xor
ds
stos
ljmp
push
sub
popa
out
in
icebp
repz
mov
mov
mov
jae
fcompl
test
mov
roll
hlt
jmp
imul
dec
sub
mov
cmp
sub
fcomps
jbe
jo
mov
fwait
gs
mov
incb
call
jge
mov
in
fmul
lods
mov
dec
adc
add
sbb
inc
lds
cmp
mov
or
std
insl
adc
pusha
xchg
lahf
add
rcll
in
and
inc
aam
or
loopne
pusha
cmpsb
out
imul
and
in
icebp
jle
loop
adc
int
and
and
add
mov
addl
in
arpl
jmp
jae
push
pop
push
divb
and
add
sbb
daa
stos
adc
sub
sub
mov
adc
ret
and
jne
mov
mov
cmpsl
sbb
inc
popf
dec
out
daa
js
bound
or
dec
jg
push
xchg
adc
cmpsl
lea
leave
cwtl
aaa
fimuls
sbb
sub
dec
stos
jne
xor
jge
push
movsb
and
cmp
push
sbb
ret
shll
jne
xor
sbb
jg
pushf
pop
pop
jle
add
xchg
insb
or
aas
xor
insb
mov
jg
pop
imulb
sub
jle
test
iret
ret
inc
in
fstl
adc
mov
add
mov
rol
fs
xchg
jo
cltd
fisubs
push
mov
cmc
lret
data16
popa
fstl
stc
loopne
outsb
dec
cwtl
or
mov
leave
inc
mov
pop
fnstsw
cs
inc
popf
pop
adc
jp
dec
int3
mov
mov
imul
iret
out
xchg
push
adc
popl
or
inc
xchg
sbb
jb
pusha
mov
mov
std
iret
jp
jns
dec
loop
adc
mov
inc
push
and
into
mov
sub
std
insl
mov
xor
xchg
leave
cld
mov
mov
test
sbb
das
sub
mov
xchg
xchg
xchg
jge
add
sub
sub
inc
pop
and
push
mov
xor
push
pop
jo
in
mov
sbb
test
mov
xchg
sbb
mov
lock
push
push
cmc
push
mov
mov
xor
icebp
cmp
push
xchg
iret
jge
or
pop
sbb
popf
rolb
mov
enter
pop
outsb
fisubl
mov
and
dec
pandn
out
push
movsb
jbe
and
inc
std
mov
pop
ljmp
pop
out
outsl
cld
mov
mov
ljmp
dec
mov
push
xchg
daa
out
and
dec
out
mov
jg
mov
je
or
ds
jp
mov
lret
cwtl
jb
inc
idivl
imul
adc
cmp
xlat
dec
mov
xchg
xor
sbb
and
adc
out
mov
sub
aad
scas
pushf
xchg
add
stos
stos
sub
mov
add
and
es
jne
stos
lret
out
cmpb
popf
cmp
add
push
pop
adc
sub
xor
push
addr16
dec
jo
mov
inc
sbb
loop
mov
and
pop
dec
pop
pop
and
rcrl
cmc
inc
pop
cld
test
pop
lret
sbb
div
mov
jle
out
push
lods
or
add
push
sbb
pop
sub
dec
and
sub
cmp
sti
ss
push
push
jbe
in
push
gs
lret
sbbb
push
adc
cmpb
dec
push
les
divb
cs
mov
int
aaa
lcall
add
pop
lods
dec
cs
pop
mov
or
inc
jle
leave
push
repz
dec
inc
xor
mov
mov
faddl
dec
mov
je
push
aad
sub
out
lods
dec
xchg
adc
loop
fsubrs
cmp
lcall
sub
fildl
imul
cmp
sub
ds
rcrl
mov
inc
pop
stos
test
rcll
sbb
lahf
jns
sub
cmpsl
in
rcr
or
repnz
loop
dec
int
in
test
pop
cwtl
jae
jae
fsubrl
dec
test
add
pop
pushf
lods
xor
cmp
sub
mov
mov
jp
pusha
dec
ljmp
lret
pop
push
iret
shll
fstl
pushf
push
out
inc
mov
cmc
xchg
aaa
nop
in
nop
repz
sub
mov
add
jmp
pop
sarl
sbb
bound
scas
xchg
and
adcb
stc
mov
sub
out
out
and
mov
xchg
aaa
add
aas
repz
jae
jne
loopne
leave
cmp
xor
sub
scas
mov
loopne
xchg
inc
dec
pop
fidivs
jmp
pop
lds
pop
pop
mov
sbb
std
mov
jno
mov
leave
stc
stos
popa
push
xlat
cmp
outsl
fldcw
jae
adc
iret
aad
add
outsl
adc
push
iret
scas
aam
xchg
ja
dec
sub
add
movsb
cmc
popa
call
sub
fnstsw
adc
mov
push
int3
mov
fs
lods
inc
loop
dec
mov
xor
dec
adc
rcrl
sbb
call
push
sub
cmpsl
scas
das
sub
lret
in
cltd
add
jae
mov
pushf
add
inc
sbb
pop
adc
popf
addr16
fidivs
xchg
xchg
push
inc
jns
into
enter
lcall
xor
lods
sub
movsb
jg
pop
sub
in
std
xor
cmp
add
cli
xchg
cmp
xchg
cmc
push
jge
xchg
sbb
jno
mov
shr
test
std
rcll
push
xchg
rolb
sbb
jl
out
cmp
sahf
int
dec
not
inc
jae
mov
mov
push
mov
xor
fcoms
sbb
xor
pop
pop
xchg
fldenv
sub
xchg
inc
mov
adc
fnsave
ss
fstp
and
adc
ss
lock
xor
in
movsb
mov
sbb
call
sub
cltd
ss
fwait
js
xchg
and
pop
clc
sub
push
cmp
insl
mov
ljmp
arpl
lret
add
test
fadd
lods
push
insl
sub
outsl
ret
in
push
xlat
cmpsb
bound
icebp
in
adc
push
or
shrb
mov
ss
inc
out
ja
fsts
push
pop
mov
mov
cmp
or
sbb
das
iret
mov
jl
or
jo
repnz
xchg
mov
je
xor
inc
cld
mov
addr16
or
notb
dec
cmp
sbb
popf
jmp
dec
jno
or
lock
sti
adc
jg
hlt
xor
or
js
xor
in
mov
out
mov
incb
data16
mov
adc
repz
sbb
inc
je
loopne
fs
outsl
or
cld
in
test
cmp
xor
bound
xlat
adc
xor
out
xlat
outsb
imul
orl
fisubrl
add
aaa
cwtl
jb
xor
and
sbb
xchg
outsb
cmpsl
scas
fsts
fisttpll
push
xchg
cmp
jl
mov
push
dec
xor
lds
inc
mov
sahf
adcl
sbb
sbb
push
xor
lods
push
mov
mov
inc
loopne
aad
cmp
aaa
adc
or
movsl
les
mov
mov
daa
jb
icebp
xor
lds
add
js
or
jmp
fldenv
and
iret
mov
sahf
ss
cmp
mov
lods
dec
sub
cmpl
pop
pop
add
add
aam
mov
inc
or
mov
push
push
aas
push
cmp
push
mov
adc
gs
sbb
pop
pop
and
shlb
xor
fcmovb
adc
push
test
and
sbb
lods
mov
push
or
dec
sub
adc
cmp
in
mov
imul
cmp
in
dec
jmp
jecxz
imul
xchg
ret
pop
sub
scas
out
jl
dec
sub
pop
popl
arpl
mov
mov
hlt
push
fucomi
mov
outsl
shll
jecxz
testl
mov
bound
sti
scas
mov
fstpl
dec
adc
sub
adc
jp
cltd
xor
cmpb
icebp
inc
insb
xchg
inc
jmp
add
int3
or
rol
sub
cmc
pop
adc
sbb
subb
lret
cs
mov
hlt
cmp
test
adc
pop
ret
in
outsl
fwait
movsb
cmc
out
add
xchg
cwtl
dec
pop
test
xor
bound
aad
inc
sbb
sub
bound
mov
lcall
repz
mov
int
sbb
movsb
mov
pop
xchg
jecxz
mov
add
divb
xor
movsb
fs
mov
jl
xor
adc
fadd
mov
push
xor
mov
repnz
enter
mov
sti
xchg
cmp
jns
int
mov
xorb
mov
dec
mov
leave
sub
fstpt
movsb
xor
clc
ds
lret
loope
sub
xor
fildll
xchg
adc
pop
sub
fnstenv
jl
ds
jmp
ljmp
testl
inc
adc
pusha
or
cmpsb
les
mov
test
rcrl
leave
divb
scas
scas
fadd
cmp
xchg
das
pop
mov
cltd
jmp
cld
mov
pop
test
mov
cmp
je
sub
int3
adc
lds
sub
rcrb
or
cmp
jecxz
ds
pop
int3
mov
push
mov
orl
pop
xor
jmp
xor
pop
sahf
lret
dec
pop
cwtl
cli
push
into
movsb
inc
mov
fisttps
mov
int3
rorb
fnstenv
clc
sbb
adc
xlat
js
jle
enter
aaa
push
aam
sbb
fldcw
daa
mov
je
pop
push
add
or
lahf
je
ftst
xchg
push
sub
cmp
sub
jge
add
aaa
adc
dec
jb
fcmovnb
cmp
jmp
jno
repnz
mov
pop
in
je
pop
dec
xchg
mov
sub
sbbb
sarb
sahf
cmp
cld
sub
add
jbe
sbb
xor
sub
cwtl
imul
data16
cltd
and
pushf
lret
or
jns
push
cs
pop
cmp
cwtl
cs
add
hlt
fwait
push
into
sub
fcmovnbe
imul
push
xchg
icebp
mov
les
lret
sbb
adc
aam
fdivrs
pop
xor
iret
adc
mov
jle
push
push
sahf
push
mov
cmc
mov
repnz
jecxz
dec
fchs
cmc
sub
add
mov
popf
aam
shlb
mov
mov
ss
jecxz
ret
roll
cmpsl
movsb
jne
mov
pop
cwtl
ret
sub
xchg
test
hlt
js
ds
call
stc
lods
inc
xchg
test
sbb
adc
nop
lds
enter
jl
mov
mov
movsl
sbb
push
inc
or
mov
cmp
mov
fcmove
inc
cli
pop
jmp
adc
jae
movsl
push
xchg
fcoml
bound
push
add
adc
mov
les
loop
push
aam
movsl
jb
daa
cmp
scas
aaa
inc
add
scas
je
xchg
ss
cmp
inc
mov
mov
jecxz
sub
repz
lods
inc
mov
popf
or
mov
aad
daa
scas
ss
xchg
jl
jb
dec
mov
stc
insb
shrb
pop
push
inc
outsb
dec
lock
gs
decl
jle
xor
inc
mov
rclb
loop
xchg
js
mov
sbb
mov
ja
pop
mov
xchg
or
movsl
sbb
stos
push
sarb
sbb
mov
cmpsl
subl
add
mov
jl
cltd
popa
xchg
and
out
pop
stos
adc
dec
iret
adc
iret
xchg
into
sub
xor
jns
fdivrs
jecxz
mov
xor
lods
mov
adc
or
lods
push
dec
cvttps2pi
cli
push
rclb
scas
xor
aad
sbb
test
push
hlt
outsl
cmp
mov
inc
push
dec
xor
or
push
inc
or
xor
mov
scas
frstor
cmpsl
add
and
inc
xor
or
and
mov
dec
out
sub
or
mov
movsl
dec
mov
xchg
stos
mov
jge
insb
ds
lock
push
or
int
mov
mov
fsubrs
lea
xchg
shrl
push
or
pop
scas
push
lock
into
adc
pusha
subl
sbb
int
fcmovbe
in
xchg
mov
push
pusha
and
pushf
out
pop
daa
xchg
cmpsl
ljmp
add
push
mov
cli
insb
push
ss
aad
jno
mov
dec
pop
inc
ds
xchg
hlt
cmova
fstl
push
mov
test
mov
sbb
push
jp
xlat
mov
mov
cli
jne
push
mov
sbb
xor
fidivrs
mov
push
sbb
icebp
dec
sub
sbb
fnstcw
push
pusha
lds
int
dec
mov
mov
add
mov
pop
mov
push
pop
inc
in
or
jmp
sbb
fsubr
fcoml
pop
insb
rclb
divl
incl
inc
je
mov
loop
mov
icebp
or
cmp
jae
insl
shll
test
pusha
mov
sahf
outsb
sub
xchg
and
pop
jp
sbb
call
stos
mov
scas
or
sbb
repz
add
mov
icebp
fwait
xor
push
and
jle
add
shlb
dec
clc
or
loopne
jecxz
leave
into
or
or
pop
test
arpl
push
das
lret
xchg
inc
mov
and
inc
add
jge
and
inc
xchg
sub
push
dec
or
push
pop
xchg
push
push
push
sahf
fistpll
push
xor
inc
cmpsb
mov
fnstenv
sbb
lods
mov
mov
mov
cmpsb
jle
ficompl
sub
adc
sub
inc
leave
sbb
or
mov
add
lret
pop
cmpb
xchg
fcoml
mov
add
ret
xor
gs
outsb
sbb
outsl
shrl
dec
cmp
loopne
cmc
cld
dec
ret
jno
imul
add
jbe
pop
mov
mov
mov
and
dec
outsl
scas
pop
es
pop
inc
xchg
cmpsl
inc
bnd
push
repnz
and
sti
mov
pop
ret
dec
mov
mov
dec
aas
or
xor
add
sub
arpl
or
mov
imul
dec
inc
mov
adc
jo
adc
aam
jg
jmp
pusha
call
jne
jmp
mov
jo
fs
xchg
aam
aad
insl
sahf
sbb
lcall
dec
sub
mov
arpl
mov
or
lods
xchg
in
sub
mov
inc
mov
and
in
or
ljmp
or
adc
cmp
popa
outsb
daa
push
add
adc
inc
mov
push
jl
icebp
add
dec
test
lret
inc
and
mov
outsl
lahf
imul
fsub
iret
cs
or
sti
sarb
in
adc
loope
repz
xchg
xchg
hlt
popf
sub
sub
push
jns
loopnew
adc
negl
dec
and
mov
jmp
arpl
mov
push
jle
lret
xor
sub
jecxz
mov
mov
push
jle
or
pop
lds
ljmp
mov
add
rcrw
add
clc
push
das
insl
jae
call
xorb
test
popa
add
outsl
xor
xchg
ds
xor
cmp
sub
xor
xor
or
jg
add
dec
mov
cs
mov
xor
jns
or
and
shrl
out
add
pop
mov
mov
and
lea
out
push
xor
cmp
mov
shr
call
pop
add
pop
push
lods
cmp
pop
mov
pop
push
pusha
or
std
xchg
ffreep
jae
pop
in
mov
pop
fistpll
scas
or
scas
cwtl
cmpsb
or
mov
leave
adc
fldcw
mov
mov
inc
xchg
inc
jb
adc
std
mov
clc
imul
xchg
mov
xchg
mov
add
cmp
sbb
test
mov
movsl
adc
inc
dec
in
jns
jae
jae
cmp
jmp
push
dec
mov
mov
je
minps
inc
cmp
scas
add
push
jmp
lahf
arpl
mov
sarb
mov
dec
or
scas
in
or
xor
mov
lahf
adc
lds
lcall
cli
in
es
loope
or
es
rclb
xchg
imul
adc
mov
out
pop
gs
addr16
mov
test
bound
cltd
fimuls
add
sarb
test
lret
out
pop
cmc
arpl
xor
ds
xchg
test
imul
movsb
dec
push
pop
inc
cmpb
mov
inc
jae
pop
mov
push
jb
out
int3
jne
in
int3
stc
sti
push
mov
jmp
nop
into
push
les
sbb
jns
xchg
lahf
jp
roll
or
in
and
mov
outsb
add
call
jmp
jo
fdivrs
dec
int3
fdivrs
adcl
inc
push
pop
xchg
or
mov
pop
test
xchg
push
and
and
or
mov
shr
jno
push
and
les
dec
inc
in
sbb
mov
jmp
inc
xchg
xorb
fnsave
xchg
iret
pop
mov
sti
xor
xchg
or
cmp
mov
cmpsb
sbb
xchg
dec
sbb
sbb
bound
pop
cmp
mov
movsl
sub
dec
push
xor
push
subb
repz
test
dec
insb
in
xchg
shll
in
int3
insl
shlb
add
fs
fidivl
fistpll
sbbb
insl
push
shr
pop
andl
dec
cmp
test
mov
jbe
jecxz
jmp
ljmp
pop
aas
das
push
aad
out
cli
xchg
outsl
jbe
inc
ja
push
int
or
ljmp
lcall
adc
out
test
push
add
push
xlat
cmp
cmp
lods
xchg
push
add
xor
lock
enter
loopne
in
or
push
mov
lret
dec
xor
lods
stos
xchg
xchg
lds
movsl
sub
mov
push
push
mov
les
lret
jbe
mov
addr16
pop
inc
ret
sysexit
push
inc
sbb
in
shrl
repz
loop
sub
push
loop
sbb
jnp
dec
out
jmp
sbb
loope
pop
imul
rclb
cmp
fcmovb
adc
add
paddsb
pop
andl
mov
aam
push
xor
incb
mov
pop
insb
insl
sbb
mov
adc
or
outsl
mov
mov
mov
dec
arpl
mov
les
lcall
dec
fimull
xchg
add
imul
dec
mov
insl
sbb
and
mov
mov
cltd
pusha
clc
fstps
ret
xchg
cmpsb
and
xor
mov
int
insl
sahf
mov
int3
and
pop
cmp
pop
movsl
jbe
mov
jns
stc
lahf
pushf
and
or
add
sbb
and
lcall
adc
dec
fs
dec
mov
jno
daa
mov
and
inc
dec
subb
add
movsl
or
rol
inc
and
push
and
rclb
jne
pop
nop
push
icebp
cmp
push
or
or
mov
xor
imul
jnp
xor
fwait
rcrl
mov
mov
mov
add
push
fildll
mov
mov
inc
iret
lods
mov
out
inc
mov
scas
les
push
cmp
xchg
dec
mov
int
ljmp
leave
push
mov
dec
xlat
lds
arpl
xchg
fmul
movsl
cmp
pop
jmp
mov
insl
dec
call
mov
sub
cltd
imul
test
sti
push
pop
out
repnz
sbb
jb
lcall
dec
aas
pop
sbb
mov
pop
sbb
aad
bound
jl
xor
movsl
daa
cmp
mov
or
ds
xor
aad
je
scas
loopne
loop
jecxz
lret
or
inc
jmp
xor
bound
lods
shrb
dec
inc
jmp
jge
mov
sbb
daa
sbb
add
std
hlt
insb
inc
mov
jnp
pop
or
push
insb
pop
fxch
loopne
and
out
add
stos
sub
mov
bound
loop
add
lret
lds
push
mov
push
idiv
dec
mov
rorl
xchg
stos
out
pop
dec
mov
fstl
sub
stos
imul
add
cmp
sub
in
hlt
mov
movsl
mov
or
mov
push
sbb
mov
imul
and
imul
mov
xor
push
lods
jno
mov
mov
push
icebp
sarl
sbb
scas
jbe
aas
push
sbb
aam
xchg
add
mov
mov
jl
pop
repnz
dec
cmp
or
add
dec
dec
adc
outsb
sub
xor
sub
loop
outsb
out
andl
adc
adc
fwait
dec
fsubs
lret
cltd
jecxz
and
mov
lret
int3
cmpsl
cmp
outsb
xchg
iret
cltd
ss
mov
outsb
movsb
mov
add
jbe
cs
fistps
push
push
dec
scas
or
jecxz
xorl
iret
xor
nop
jecxz
je
mov
push
int
stos
addr16
pop
jo
out
sbb
test
aaa
decb
outsl
loop
mov
lods
cmp
jo
insb
les
fsts
aam
cld
add
fsubrl
mov
push
cli
sub
mov
mov
imul
pop
push
ret
addb
inc
fs
stos
xchg
xchg
stc
insb
mov
lods
and
inc
sub
push
and
iret
data16
imul
mov
inc
sbb
jmp
jb
scas
mov
jge
cmpsb
inc
xor
out
sbb
inc
hlt
sbb
mov
jl
mov
insb
ror
lea
adc
adc
mov
fucomip
aaa
jno
stos
pop
mov
sbb
inc
inc
cmp
jnp
mov
int3
sbbl
icebp
movq
mov
cwtl
imul
xchg
flds
dec
push
or
hlt
cltd
mov
and
xchg
dec
jb
mov
jbe
sahf
and
adc
mov
pop
adc
cmp
sbb
dec
test
jle
sub
lret
sar
mov
loop
inc
adc
sbb
xchg
mov
sti
sub
mov
stos
loopne
outsb
scas
inc
sti
ret
add
loop
xchg
icebp
lea
aaa
push
fsubl
push
pop
cmpsl
arpl
jmp
insl
mov
arpl
mov
xchg
lahf
scas
push
call
push
call
adc
add
pop
popf
xor
loop
cmpsl
lahf
or
cmc
ret
ds
in
iret
jno
sbb
in
pop
fs
mov
add
int3
mov
test
lret
xor
testb
pop
call
xor
test
aas
or
and
imul
outsb
imul
xor
in
or
pop
dec
es
iret
jno
out
mov
xchg
mov
and
ficomps
dec
xor
jnp
pop
sub
push
pop
dec
sbb
mov
fwait
pusha
mov
pop
imul
popf
loope
mov
and
mov
or
sub
fimuls
test
das
xchg
lahf
mov
aas
or
cmp
lcall
xorb
cli
or
add
popf
cli
aad
and
mov
decl
mov
outsl
int3
scas
pop
fisttpl
mov
push
cli
fnstcw
lret
negb
mov
aas
fwait
lods
dec
outsb
jecxz
xchg
mov
iret
inc
cltd
lret
lock
imul
loope
mov
into
add
pusha
nop
and
jecxz
ss
sub
mov
test
cmp
ficoml
add
leave
mov
inc
imul
ljmp
pop
push
cmp
pop
jnp
loopne
cmpb
push
mov
inc
data16
dec
ss
cwtl
imul
pop
addr16
xchg
mov
xchg
popa
jg
sub
adc
dec
imul
and
inc
add
xchg
adc
dec
sub
fsubrl
out
xor
lds
shlb
jge
repz
outsb
adc
push
repz
bound
mov
hlt
shrl
in
jns
sub
ret
mov
cld
popa
cli
movsb
lock
mov
imul
pushf
lret
or
mov
ret
or
stc
or
and
jge
jl
pop
inc
lock
inc
fsub
stc
or
xor
loop
ret
pop
test
scas
jl
mov
xchg
push
jmp
incb
sub
cmc
xor
int3
outsl
push
mov
inc
repnz
lds
push
scas
dec
inc
fsin
iret
ljmp
pusha
repnz
inc
cmp
ja
cmpsl
mov
and
pusha
std
fstl
je
xor
mov
xor
stos
xchg
andl
cmp
repz
adc
xchg
jp
add
lret
sub
push
jnp
fldcw
cmpsl
pusha
jp
adc
jns
inc
dec
fisttpll
cmc
inc
movaps
mov
addl
test
jae
xchg
push
mov
in
mov
add
jns
mov
mov
out
std
add
mov
shrl
sahf
sarl
mov
cltd
int3
aaa
add
jns
mov
stc
jbe
sub
out
test
out
sub
mov
int
add
add
movl
sbbl
pop
js
add
jbe
stos
dec
std
out
cmp
hlt
mov
inc
scas
dec
xlat
sub
out
xchg
inc
sbb
jb
rorl
fsubl
cmp
sbb
pop
dec
cmp
stos
outsl
pusha
dec
push
mov
push
jge
sahf
loop
cmp
inc
ret
jbe
or
inc
add
xor
das
scas
pop
out
cmp
xor
dec
popf
adc
gs
sub
hlt
std
mov
cwtl
je
cld
test
fistps
shll
jae
das
mov
orb
ret
cmp
fcmovu
cmp
out
adc
push
dec
lea
mov
dec
mov
xor
dec
push
mov
and
inc
push
pop
test
add
xchg
fstl
cld
pop
add
jb
mov
xchg
fs
push
and
loope
jp
insb
scas
add
sbb
mov
in
push
pop
xchg
lcall
push
lods
and
add
xor
dec
cmc
and
jge
lahf
call
out
fnsave
ljmp
mov
addb
push
cmpsb
shl
ja
cmp
or
push
popa
sbb
daa
cmp
shlb
and
or
and
dec
cmpsb
or
add
or
into
mov
xchg
adc
js
dec
and
add
jnp
and
xlat
xchg
lea
xor
dec
loope
sub
xchg
adcl
lret
out
mov
mov
dec
orb
adc
addr16
idiv
cmova
outsl
enter
dec
jns
and
rcll
adc
lods
mov
std
jns
pop
arpl
lret
add
test
mov
arpl
cmc
jle
int
cmpsb
scas
sarb
test
or
sub
cmpb
mov
xlat
push
fcoms
lret
mov
fimull
arpl
arpl
jg
or
pop
cs
mov
js
fimuls
push
sub
aad
andb
or
add
and
je
mov
and
fnstsw
adc
in
cmc
inc
lods
xor
mov
mov
or
xchg
lock
inc
pop
outsb
push
loopne
lock
in
call
mov
jne
sbb
pop
sub
je
hlt
fists
in
testl
lret
loop
ja
pop
iret
push
shll
fsubs
dec
xchg
loope
mov
arpl
mov
or
arpl
pop
stc
inc
or
or
and
mov
xor
inc
fnstenv
iret
arpl
jns
in
fcoms
mov
push
out
popa
int
cmpsl
int3
lahf
mov
or
out
addb
fisubrs
lods
jmp
addb
mov
xchg
es
jne
arpl
cwtl
cs
ret
mov
addr16
mov
jae
and
sbb
or
and
ds
das
pop
jle
xlat
push
scas
je
andb
lds
mov
adc
jns
mov
jnp
add
imul
adc
mov
inc
int3
lea
outsl
test
icebp
out
cwtl
add
fstpl
pop
adc
insl
sbb
mov
aaa
pushf
pop
xchg
adc
test
push
cmpsb
or
xchg
and
xor
xchg
jbe
outsl
movsb
rorl
mov
scas
or
sub
test
subl
psllw
ror
in
mov
xor
aam
call
lds
mov
dec
aad
data16
nop
daa
sub
mov
inc
mov
sbb
add
cltd
push
xchg
or
sbb
lahf
push
shrl
sub
xchg
push
and
mov
cmp
jne
inc
mov
mov
mov
mov
jp
out
mov
pop
mov
das
mov
adc
mov
es
incl
xlat
dec
xchg
sti
in
jne
shll
loopne
test
mov
pop
xor
mov
mov
xchg
mov
xchg
mov
sarb
das
or
outsb
fucomip
in
popf
out
hlt
das
mov
int
adc
gs
and
iret
loope
pusha
push
and
mov
sahf
insb
dec
shll
sbb
pop
adc
ficoms
jno
in
decl
movsl
faddl
test
push
in
lods
jg
mov
xchg
stc
jecxz
in
xchg
mov
jg
cmp
movsl
faddl
add
lcall
cmp
shll
and
popf
jle
push
jae
outsb
mov
lahf
fildll
addl
dec
sub
fnsave
hlt
inc
or
xchg
sti
cmpl
lret
push
ljmp
int
adc
repz
mov
jl
adc
sub
test
sbb
insb
mov
sbb
sbb
nop
outsl
aas
push
xlat
inc
clc
jb
mov
rcll
test
mov
flds
cmp
inc
xlat
nop
inc
into
fildll
push
add
fwait
sub
cmp
sub
mov
mov
cmp
pop
or
in
out
adc
sub
cmp
leave
lcall
jge
aaa
rol
leave
inc
xchg
imul
nop
ljmp
push
add
test
fcompl
dec
outsb
xor
jne
adc
mov
into
inc
sarb
leave
sub
outsb
ljmp
inc
mov
mov
lcall
xchg
sub
out
sti
fisttps
pop
pmulhuw
out
mov
mov
add
inc
fsubrs
loop
dec
out
mov
cmpsl
xor
adc
ss
mov
mov
mov
mov
pop
dec
push
pop
movsl
lods
jno
mov
sub
fnstenv
or
das
mov
es
insb
mov
sbb
cmpsb
sub
inc
outsl
out
rcr
les
jmp
jmp
pop
mull
cmpl
push
clc
pop
sbb
mov
pop
jmp
int
addr16
rcll
lret
mov
mov
dec
mov
aas
lcall
mov
movsl
out
ss
fcoml
cmp
xor
xchg
pusha
outsb
lods
imul
xchg
fucomi
shlb
mov
ljmp
mov
stos
lock
arpl
mov
fs
stos
push
mov
imul
mov
add
jno
sbb
cmp
daa
dec
pop
scas
arpl
test
pop
pop
int3
cmp
cmp
add
lds
sub
iret
or
stos
out
andb
mov
popa
push
xlat
les
int3
inc
add
push
pop
cmpsl
and
mov
pop
gs
jb
sbb
adc
lea
repz
xor
pop
xchg
ds
not
repnz
and
call
jo
fdecstp
push
add
push
dec
sub
cmp
jns
imul
cwtl
mov
jp
rcr
sub
xorl
out
mov
movsl
mov
cmpsl
fninit
push
xor
jnp
mov
jecxz
xor
ret
pop
imul
xor
push
mov
mov
xorl
xchg
pushf
jbe
aad
rcl
sub
push
repz
sbb
mov
rcrl
fsubrs
ret
mov
fcmovbe
jno
stc
subl
sahf
sbb
inc
stos
or
jmp
pop
arpl
sub
iret
call
int
test
cli
je
or
jne
xchg
mov
adc
adc
xchg
stos
pop
xchg
ret
xor
out
or
sub
outsl
adc
pop
ds
mov
or
shl
aas
in
or
pop
cmp
test
xchg
fistl
jge
outsb
in
dec
dec
xchg
aam
scas
shl
sbb
adc
mov
mov
je
sub
adc
jmp
sbb
fnsave
jmp
mov
jno
out
arpl
adc
pop
cmp
xor
cmp
cmp
bound
stos
mov
das
movsl
or
cmc
mov
test
sbb
mov
mov
jbe
lods
jle
test
popf
and
inc
pop
ret
mov
mov
das
das
push
xchg
enter
data16
arpl
and
dec
adc
adc
push
pop
jbe
scas
popl
pop
shr
fnstenv
cmpsb
mov
dec
jns
or
xchg
popa
ficompl
fs
pop
fnsave
movb
addr16
outsl
adc
sahf
xchg
jns,pt
jge
les
notl
cwtd
or
jns
mov
out
dec
push
mov
cmp
sti
or
push
cld
pop
add
js
cwtl
sub
outsb
sarb
test
adc
nop
pop
pop
sbb
push
dec
dec
or
push
inc
nop
sbb
dec
pop
sti
sub
cwtl
adc
fnop
ljmp
sbb
in
pop
rcll
js
cmp
aas
lods
xchg
ret
lds
pop
add
lds
hlt
jns
mov
sub
jo
add
inc
scas
insl
bound
icebp
lcall
nop
aam
fsub
xor
das
xorb
add
fnstcw
push
cltd
jecxz
and
nop
adc
fdivs
idivl
les
stc
mov
mov
mov
mov
push
pop
int3
mov
push
jl
inc
div
aad
int
adc
flds
ja
mov
mov
or
pop
imul
xchg
and
fistpll
rclb
mov
enter
mov
xchg
aam
leave
adc
enter
push
mov
mov
fsubl
stc
loope
mov
dec
push
shlb
stos
dec
inc
stos
mov
and
cmp
fistl
xor
sbb
icebp
ss
aas
aas
std
test
clc
fsubrl
ds
cmp
es
in
test
dec
push
push
mov
movsl
jbe
aas
jge
mov
into
and
mov
cli
stos
mov
out
lds
out
xor
int3
adc
ljmp
das
cmp
xor
cmpxchg
push
imul
out
lods
dec
xor
scas
pop
dec
stos
cmp
xor
lahf
xor
xchg
pop
cmc
int
movsl
mov
loopne
pop
neg
push
add
out
gs
push
jmp
and
dec
push
test
inc
xor
xchg
loope
cmp
cmp
arpl
xchg
jb
cmp
mov
sarl
cmp
jb
lret
sbb
gs
adc
das
add
sub
push
fldcw
jl
out
dec
data16
pop
cli
in
dec
out
xchg
clc
cs
pop
push
dec
out
lret
inc
imul
mov
insl
sbb
ljmp
hlt
mov
jnp
movsb
pop
mov
mov
jmp
push
mov
inc
fs
ret
int3
scas
mov
fwait
jecxz
inc
inc
mov
movsb
mov
es
insl
mov
out
fisubl
lret
iret
fistps
shlb
mov
fs
loop
ficoms
js
jle
sub
pop
pop
or
arpl
pop
cld
fldcw
addr16
pop
push
fsts
push
push
and
xchg
adc
hlt
into
addr16
dec
mov
pusha
or
mov
subb
inc
sti
mov
lds
mov
pop
scas
test
lods
outsb
mov
in
sbb
mov
es
jae
gs
lock
inc
into
xchg
xor
inc
daa
aas
and
stos
leave
int3
leave
enter
add
daa
xchg
fcomps
scas
daa
push
add
jmp
pusha
xchg
mov
cmc
insl
xchg
mov
repnz
int3
test
incb
scas
mov
icebp
nop
mov
add
inc
mov
iret
cmc
cmp
adc
inc
and
mov
outsl
push
cmpsb
jg,pt
pusha
inc
push
add
insb
jo
and
cmp
add
mov
or
pop
sahf
lds
mov
xchg
push
in
test
jns
test
cld
dec
imul
add
fs
cmp
mov
imul
mov
cwtl
fsubl
push
mov
push
loop
xchg
cmpsl
jmp
sbb
pop
or
inc
pop
mov
xchg
jmp
nop
xchg
mov
mulb
or
or
inc
xor
xchg
push
push
adc
pop
scas
fnstsw
out
cmp
adc
add
adc
in
and
adc
jp
dec
pop
jmp
inc
inc
imul
pop
or
mov
xchg
or
xchg
leave
je
mov
jne
add
mov
cwtl
add
mov
sbb
xor
cmp
jnp
pop
negb
cwtl
sbb
call
fisubs
inc
jae
jle
pushf
bound
mov
mov
jg
idivb
pop
call
sub
push
xchg
sahf
ja
xchg
and
cmc
loope
dec
push
lds
movsl
sub
cmp
fs
cmpsl
flds
jp
bound
mov
inc
mov
and
imul
mov
pop
sub
inc
sbbl
call
mov
cmc
repz
jno
fldt
mov
lock
dec
mov
xchg
push
out
pop
movsl
lea
cmp
mov
les
out
inc
or
insb
sbb
jmp
out
mov
mov
lret
cltd
stc
and
xchg
dec
mov
ret
mov
and
cld
jecxz
add
dec
in
scas
cs
jg
push
mov
cltd
add
jecxz
ds
js
push
push
andl
popa
lods
mov
sub
xchg
ss
test
add
inc
loope
xchg
pop
into
mov
mov
ret
sub
ss
sahf
xlat
and
push
xchg
jae
cld
fildll
jne
mov
inc
lods
sub
mov
mov
lret
nop
cld
data16
lret
pop
mov
mov
ds
lods
cld
mov
pusha
push
icebp
ficompl
ja
mov
enter
and
fisubrs
out
enter
imul
dec
push
pop
popf
and
sub
mov
fimull
fnsave
ljmp
clc
inc
cmp
lcall
dec
nop
mov
dec
add
loope
insl
sub
in
xor
outsb
sbb
adc
xor
stos
mov
mov
push
aas
cmp
std
aad
mov
rol
shr
stc
cmp
or
or
jbe
mov
mov
test
scas
jg
lods
lock
and
sub
in
push
sbb
jp
in
pop
sbb
pop
jbe
mov
icebp
adc
in
push
and
pushf
lcall
mov
sub
sub
and
pop
and
mov
push
test
bound
sbb
call
cmpl
add
nop
aas
jbe
cmp
faddl
cltd
and
jb
mov
adc
mov
inc
xor
mov
lock
dec
mov
dec
xchg
into
aaa
aad
xchg
pusha
push
fdivl
xchg
test
jnp
mov
jl
dec
dec
in
sub
out
xlat
in
mov
dec
ficoml
xchg
mov
xchg
mov
mov
sub
and
lods
xchg
add
out
dec
lahf
movsb
and
orb
icebp
adc
sbb
idivl
loope
mov
mov
mov
fidivl
out
jae
enter
mov
xchg
adc
in
xchg
ficoms
jb
jno
mov
push
repnz
sub
push
pop
mov
rorb
xor
pusha
jg
inc
push
div
in
sbb
sbb
sbbl
dec
sub
jbe
cmp
lret
mull
fcos
movsl
mov
cltd
dec
dec
test
and
lods
aam
sarl
lea
ror
lret
mov
sub
dec
stos
shll
and
mov
mov
mov
inc
ss
and
in
in
std
pop
dec
loop
aad
je
jmp
add
mov
mov
stos
mov
adcb
push
dec
pop
insb
frstor
mov
jge
jmp
sub
rcl
scas
sbb
fcoml
stos
mov
fs
test
repnz
adc
cmpsl
adc
sub
lret
ljmp
sbb
mov
xor
outsb
pcmpgtd
adc
mov
push
cltd
inc
push
adc
and
mov
outsl
adc
adc
movsl
jb
or
jecxz
outsb
outsl
jge
push
add
imul
fwait
sub
xor
adc
jb
out
cmp
outsl
popf
repz
shll
repz
mov
popa
mov
clc
sub
imul
jp
cmp
mov
xlat
pop
mov
and
inc
stc
and
aaa
add
cmp
clc
test
mov
and
push
fildl
add
xor
aad
adc
xor
das
xlat
and
or
divl
adc
sub
aas
add
jle
popw
int3
jmp
sbb
push
push
sub
stc
loope
test
loope
xchg
push
lods
int
fldt
cmp
out
out
fs
cmp
pop
dec
inc
xlat
fstl
in
xor
push
lods
adc
addr16
dec
xchg
mov
fisubrl
pop
push
or
pushf
fsts
pop
inc
loopne
mov
inc
lods
sub
cmpsl
cmp
fsubrp
rcrl
int
cmp
test
aas
jne
pop
insl
in
fcompl
mov
xchg
in
jge
add
loope
inc
sti
pop
push
pop
xor
mov
sbb
pop
mov
jecxz
mov
cmpsb
lret
cmp
add
jnp
push
mov
les
mov
add
cmp
testl
and
xlat
dec
stos
sbb
popf
lahf
dec
leave
aaa
cs
in
pop
dec
push
sti
hlt
lcall
jb
adc
dec
adc
and
add
mov
sbb
add
ret
notl
dec
push
and
aaa
pop
adc
inc
cltd
push
iret
iret
pop
add
adc
mov
out
xchg
push
out
das
pushf
adc
shr
inc
mov
push
adc
jnp
int3
hlt
mov
dec
push
jno
push
adc
xor
adc
aaa
scas
push
push
int3
xchg
push
ret
xor
sbb
mov
mov
sahf
mov
out
and
sub
xor
shrl
clc
push
fsubs
icebp
int
call
arpl
shll
or
lods
inc
jle
jbe
xchg
push
movsl
cwtl
jmp
pop
cmp
daa
movsl
mov
jae
xlat
mov
leave
push
fcoms
push
hlt
cmpb
add
sub
adc
jp
add
loope
scas
mov
js
add
adc
ljmp
push
fiaddl
xchg
orl
ret
shrb
int3
adc
cli
loope
call
xchg
out
out
popf
addr16
pop
pop
in
mov
cs
push
pop
or
mov
pop
jmp
pusha
xchg
add
jle
cmp
xchg
mov
inc
sub
idivb
inc
in
adc
and
leave
out
sarl
cs
rorl
jb
lahf
mov
cmp
divb
imul
xchg
popa
xor
pop
adc
cmp
insb
pushl
adc
repz
push
stos
shll
rcr
xorl
call
mov
arpl
inc
xchg
or
fistps
shlb
sub
jmp
je
mov
imul
stos
add
xor
cmp
xlat
pop
cmp
dec
jg
movsl
decb
push
das
xchg
adc
push
cmp
lds
mov
mov
hlt
fstpt
push
inc
pop
movsb
xabort
and
xor
mov
mov
add
cmpb
push
add
and
xchg
cmc
pushf
xchg
adc
insb
push
or
sahf
ja
ficompl
dec
jl
das
jns
xor
add
aas
lret
aas
lods
loop
mov
pop
mov
idivb
jns
mov
jae
mov
ss
mov
push
push
fistps
push
pop
inc
xor
mov
in
notl
cmp
adc
jg
stos
mov
inc
add
sbb
xorb
test
mov
jecxz
clc
outsl
cs
pop
out
scas
lcall
push
cmp
cwtl
sub
out
or
mov
xor
jae
in
add
sbb
pop
cmpsb
cmp
fsubrs
fdivl
jmp
mov
sbbb
push
dec
imul
pop
orb
arpl
inc
arpl
jne
outsl
jmp
pushf
and
adc
ret
test
xor
pop
pop
addr16
mov
xor
loop
xchg
std
push
out
cwtl
push
cs
andl
fistps
cmp
enter
enter
dec
xlat
cmpsl
lds
test
mov
push
imul
stos
mov
in
mov
dec
pop
add
jne
xlat
cmp
jne
inc
testb
js
xchg
or
fists
xchg
push
in
xor
push
cmp
dec
adc
bound
mov
adc
jnp
cli
fistps
push
ret
jns
jl
out
fisubs
popf
call
stos
int3
sbb
es
mov
jp
lea
mov
mov
icebp
sbb
inc
daa
adc
aas
jae
es
inc
ficompl
ja
inc
test
pushf
ret
pop
data16
popf
dec
push
sub
push
mov
rclb
xchg
pop
lret
in
ja
stos
in
jns
mov
sub
iret
push
leave
mov
dec
add
cld
pop
loopne
std
std
push
pop
xor
push
cwtl
mov
mov
insb
xchg
cmp
pop
cld
sbb
movsl
xchg
inc
cmpsb
push
push
or
loope
repnz
in
push
xchg
or
push
stos
push
pop
adc
imul
cmp
cli
lcall
sbb
push
shll
mov
divb
cs
lcall
fnstenv
mov
aas
lods
mov
pushf
sbb
cltd
in
fisttps
in
shll
adc
sub
or
fstpl
loop
push
fcmove
inc
fidivl
stc
out
bt
add
pushf
lds
xchg
jnp
adc
adcl
or
jb
sub
ljmp
test
loope
adc
lret
in
clc
in
stos
idivl
push
clc
adc
fstpl
mov
xor
jns
jo
mov
adc
inc
loopne
cmp
or
hlt
daa
rorb
sbb
into
dec
pop
dec
xchg
sbb
leave
add
lods
pop
mov
in
mov
xchg
cmp
lods
cmp
ljmp
loope
mov
xor
bound
pop
pop
push
jle
daa
adc
or
pop
mov
lds
ds
fsub
pushf
push
out
ljmp
sub
test
mov
sub
xchg
jl
lahf
lcall
xor
clc
inc
stos
xor
repnz
test
adc
js
cltd
call
add
mov
xor
fucomi
or
jmp
jge
nop
data16
ficoml
fucomi
and
jg
stos
cmp
mov
sbb
mov
jbe
cmpsb
cmpsb
aas
clc
repnz
jnp
adc
jge
xchg
mov
call
sbb
imulb
jge
push
test
loope
sbb
ss
dec
bound
aad
outsl
call
xor
or
pop
inc
fmul
dec
rol
test
lods
push
cltd
imul
out
shll
push
add
jecxz
jmp
mov
lods
sbb
rcrb
movsl
stos
push
outsb
aad
lods
mov
fbld
xchg
mov
add
ret
clc
fcompl
jns
out
lret
mov
mov
sbb
rcrb
adcb
dec
imul
roll
outsl
mov
jle
je
ljmp
jmp
icebp
in
pop
imul
jb
das
adc
das
and
movsl
mov
fsubl
call
ljmp
and
xlat
pop
subl
push
sbb
sbb
xchg
pop
add
loope
mov
dec
repz
icebp
inc
aas
loop
lcall
inc
xchg
pop
sbb
jae
mov
cmpsb
je
pop
mov
adc
jnp
enter
and
pusha
lea
lods
test
fisttpl
lahf
lea
cmp
in
fnstenv
test
pop
repnz
and
mov
and
mov
ljmp
jle
fildll
ljmp
out
or
aaa
repz
xchg
jnp
cltd
aam
pop
testb
dec
lds
cmp
inc
stos
mov
fmul
xor
sbb
sub
mov
cmpsl
push
cltd
pop
mov
adc
jle
lcall
xchg
jne
pop
mov
sbb
push
xchg
push
jnp
add
inc
in
repz
mov
mov
fwait
inc
in
repnz
jl
pop
push
js
pop
in
mull
fwait
popl
and
mov
jp
pop
test
pop
inc
popf
sbb
mov
loope
mov
add
pop
ss
test
sub
outsl
lret
inc
outsb
or
mov
mov
xor
add
ja
mov
es
scas
repnz
fcmovbe
into
mov
xchg
shll
mov
sbbb
mov
fs
fisttpl
push
aas
mov
xchg
xchg
icebp
in
xchg
dec
gs
scas
fistpll
lcall
jle
adcb
push
pop
fwait
ss
test
pop
into
xlat
popf
pop
xor
in
lea
ret
pop
repnz
push
outsl
push
mov
adc
or
push
mov
cmpl
dec
call
lock
mov
lods
imul
mov
inc
rcl
sbb
insb
seta
cmp
xor
inc
aaa
fildl
aam
loopne
stos
adc
aam
mov
stos
pop
xchg
sbb
icebp
mov
mov
mov
jne
jle
sub
scas
push
iret
add
filds
jbe
out
dec
sub
stos
push
aas
cmp
clc
ss
jns
mov
outsl
or
jb
pminsw
mov
pusha
dec
xchg
out
nop
push
cmc
pop
lods
je
fmulp
mulb
dec
jne
call
cli
mov
add
iret
mov
inc
mov
mov
ror
loopne
inc
movsl
and
mov
cmp
cld
or
mov
inc
pop
jmp
gs
dec
mov
xlat
test
inc
jnp
mov
cmp
pop
arpl
xchg
out
xlat
ds
in
pop
aad
xchg
and
stc
mov
in
mov
push
sbb
movsb
adc
repz
mov
adc
adc
jmp
movb
jmp
mov
jo
test
imul
add
faddl
pusha
add
adc
cli
ss
je
in
xor
fisubrs
mov
das
stc
js
mov
push
in
xor
stc
sub
push
int
loope
inc
ret
push
push
add
outsl
ds
pop
mov
xchg
jnp
mov
sub
lods
lcall
jne
test
fidivl
cwtl
ss
mov
lret
pop
ljmp
call
cmp
fcompl
popf
je
xchg
in
cmc
mov
dec
xor
pusha
pop
add
nop
idivl
fcoml
orl
in
and
dec
pop
cmpsb
dec
cltd
xchg
pusha
outsl
mov
bound
ljmp
xchg
xchg
mov
mov
call
out
xor
pop
adc
xchg
iret
sbb
inc
lods
mov
mov
jae
aas
jb
pop
inc
out
and
iret
or
call
lock
or
push
cmp
ljmp
jmp
bound
shrl
iret
sub
xor
fisttpll
jae
aas
and
enter
jnp
cmc
shlb
aas
movsl
out
inc
test
inc
ror
sub
xchg
movsl
repz
aas
int
outsl
and
pop
jns
bound
idivl
icebp
mov
xlat
mov
ret
jns
mov
mov
sub
les
cli
push
cltd
leave
mov
cmp
dec
mov
cli
fsubrs
cmpb
lea
add
rcr
hlt
mov
add
ja
dec
dec
pop
lahf
test
mov
and
pop
push
or
dec
and
fldl
clc
and
adc
mov
ror
arpl
cmp
hlt
inc
dec
jnp
xchg
inc
cmp
pop
jne
lea
add
cld
out
popa
cwtl
lcall
sub
mov
shl
inc
cmp
mov
push
inc
jge
cli
xchg
lods
fmuls
jno
add
cmp
divb
es
iret
xchg
ret
in
xorb
negl
fidivl
fcos
das
mov
popf
dec
insb
mull
repz
loopne
mov
xchg
pop
cmc
daa
sar
sub
shrb
movswl
dec
jnp
jecxz
xor
sub
dec
mov
and
daa
add
sbb
dec
je
dec
jb
dec
cmp
push
andb
popa
xor
push
cmp
jl
lret
push
in
imul
push
pop
jnp
push
nop
and
jmp
lods
rcrb
stos
and
push
sub
push
adc
xorb
adc
faddp
int
xchg
jg
adc
mov
mov
mov
decb
add
or
loopne
adc
lret
adc
push
jns
mov
js
adcl
inc
sub
xchg
out
arpl
xor
pop
pushf
xchg
rolb
imul
pop
mov
cld
or
sbb
or
or
adc
adc
and
rcrl
mov
push
xchg
xor
mov
rcrb
call
mov
dec
sub
movsb
inc
jns
add
lock
pushf
iret
jge
fmuls
rorl
jns
xchg
sti
icebp
fists
push
dec
xchg
pop
stc
stc
subl
xor
jae
jmp
dec
sub
mov
add
xchg
jle
clc
and
push
sub
sub
shrl
insl
cmp
rcrb
mov
test
data16
mov
or
les
cmp
mov
xchg
popf
dec
jmp
movsb
pop
or
sahf
add
or
movl
out
fsubr
out
cltd
push
sub
mov
js
push
add
lods
mov
int
pop
and
loope
cmc
dec
in
popa
push
bound
dec
add
mov
pop
jbe
imul
sbb
ret
call
das
sub
in
add
call
aaa
inc
push
pop
pop
xchg
push
out
movups
sub
inc
add
pop
mov
xchg
mov
add
ds
sbb
inc
jae
and
xchg
ret
and
push
imulb
addr16
xchg
xor
int
arpl
or
push
lock
mov
lcall
sub
movsb
lret
mov
daa
insb
imul
test
push
icebp
push
cmp
lret
sub
rolb
xchg
shll
cmp
inc
xchg
imul
xlat
mov
shlb
ja
jge
bound
sbb
inc
jne
jle
xor
pop
insl
inc
jbe
mov
sbb
call
mov
das
data16
pop
pop
dec
jno
cmc
xchg
sarl
mov
in
popf
or
add
hlt
push
mov
push
sbb
add
adc
cmp
mov
and
mov
inc
cwtl
mov
mov
ds
stos
pushf
mov
js
cvttps2pi
nop
xchg
mov
inc
andb
sub
cwtl
scas
sbb
ret
xor
pop
mov
cltd
push
jne
or
mov
movsl
cmp
mov
lods
mov
test
pop
rclb
lea
xchg
xchg
repz
test
pushf
inc
add
cmpsb
inc
mov
sti
sub
mov
out
roll
fbld
mov
in
or
inc
pop
imul
or
cld
jle
leave
pusha
aad
scas
inc
cmp
aad
adc
popa
cwtl
out
das
mov
pop
fisubrl
pop
xchg
push
mov
int
xor
push
and
sub
pop
adc
sbb
and
and
inc
fldt
cmp
sbb
mov
mov
lret
lcall
neg
cmpsl
movsl
call
jo,pn
and
push
jo
mov
or
mov
bound
cmpsl
pop
add
or
jmp
repz
nop
sar
test
std
or
daa
icebp
sbb
ret
push
lods
jno
push
fisttps
dec
xchg
and
add
orps
inc
shr
pushf
cmp
jns
lock
cmp
pinsrw
push
scas
in
dec
push
out
sbb
pop
dec
jae
cmc
orl
or
adc
inc
adc
sub
mov
les
vmovdqa
pop
xchg
sub
push
test
jbe
test
sbb
xor
mov
scas
stc
mov
cmp
xchg
out
xor
test
cmc
mov
in
fldlg2
sti
mov
into
sti
lcall
lcall
and
mov
pop
cmpb
popf
out
pop
xchg
mov
and
dec
mov
mov
pop
push
ror
mov
adc
pop
xchg
jb
ficompl
sahf
jns
mov
scas
push
iret
fldcw
repz
xchg
add
popa
xchg
mov
push
lods
ret
aas
jnp
xchg
js
mov
popa
dec
mov
lret
xlat
bound
jo
add
loope
sbb
push
mov
das
fmulp
mov
pop
repz
sub
mov
sub
popf
stos
xchg
pop
cmpsb
mov
hlt
stos
cld
xchg
xchg
cltd
popl
sahf
push
xchg
aam
fsubrp
jle
sub
xchg
dec
les
enter
cld
and
shlb
cli
fyl2x
dec
cli
dec
dec
mov
add
je
arpl
jo
repz
xor
mov
stos
mov
pop
cmpsb
je
cmpsl
pop
fdivl
mov
movsl
sub
movsl
push
adc
cmp
mov
mov
cmp
test
mov
dec
daa
jne
adc
movsb
shlb
and
shlb
pop
cmovne
and
out
fdivrl
out
push
mov
es
push
fcompl
testb
adc
sbb
inc
mov
repz
outsl
pop
or
xchg
leave
mov
jae
inc
cmp
jmp
push
pop
xor
in
aam
fs
cmpsl
imul
aam
mov
enter
inc
outsl
outsb
mov
scas
rol
pop
cmp
pop
mov
stc
aaa
in
add
adc
or
ja
bnd
dec
in
and
sub
xlat
pop
push
insb
add
idivl
fsubrs
pop
aam
fidivrs
outsl
cmc
pushf
inc
mov
fists
inc
lea
mov
repz
pop
xchg
in
dec
jne
jno
stos
lods
out
mov
push
lods
push
jae
inc
les
sub
out
adc
movsb
mov
xor
cmp
lods
mov
fidivs
jns
mov
xchg
iret
pusha
in
loop
iret
push
push
lret
iret
lret
stc
and
shr
aaa
pop
bound
jp
dec
inc
push
imul
pop
push
lret
movsb
jbe
xchg
bound
mov
push
leave
add
enter
dec
insl
jge
icebp
ret
out
jb
and
jmp
pusha
dec
jb
ret
sbbb
xchg
je
adc
iret
jb
sbb
lret
out
mov
jp
gs
pusha
jle
or
ja
cmp
les
movsb
inc
mov
shlb
mov
lds
adc
sub
call
push
jnp
sbb
mov
push
imul
sahf
aam
ror
repnz
xchg
icebp
test
fs
inc
or
sti
rolb
cmpsb
dec
leave
test
fldt
pusha
imul
xchg
popa
testb
or
jmp
cmp
and
add
test
xchg
lea
sub
dec
mov
out
jl
mov
jp
imul
lock
subl
int3
mov
or
lock
adcl
jecxz
mov
data16
xor
jg
shll
fdivrl
sbb
jbe
and
mul
lahf
dec
sbb
jecxz
dec
int
mov
pop
out
mov
mov
sub
jno
std
cmp
xchg
dec
out
fisubrl
lcall
xchg
hlt
push
cmp
es
mov
and
and
or
cmc
inc
jnp
outsb
stos
dec
subb
test
mov
insl
cld
mov
mov
pop
in
and
fldt
inc
inc
repz
fs
in
push
sbb
pop
int
nop
sub
dec
add
mov
cltd
rorb
dec
lret
mov
mov
fistpll
inc
add
cmp
dec
push
add
jo
std
dec
fists
mov
adc
mov
rcl
cmpsb
xchg
outsb
fcmovnb
push
xchg
popf
rol
aad
push
popa
mov
jo
adc
mov
pop
and
mov
addb
dec
fwait
sbb
mov
enter
cltd
xchg
inc
jbe
xor
mov
dec
sub
insl
ds
mov
pusha
aam
mull
lret
jae
and
xor
ret
fadds
test
mov
int
shll
inc
bound
fsubrs
and
push
mov
xor
push
cmpsl
dec
ljmp
add
xchg
add
mov
adcb
mov
add
mov
stos
push
pop
push
sub
sub
and
push
inc
je
pushf
mov
or
or
test
xchg
fmulp
loope
jno
dec
notl
xchg
popf
or
aad
sbb
mov
fisttpll
je
aas
jae
les
add
push
data16
lcall
call
sub
mov
scas
xchg
mov
out
xor
mov
xchg
ret
rorb
mov
and
sar
hlt
add
test
mov
loop
ret
xor
xor
inc
pop
lret
add
xchg
stos
inc
push
inc
bswap
fsubrs
sub
aas
or
cmc
xchg
push
sub
imul
in
mov
scas
loopne
adc
shrb
xor
cmc
jo
or
call
es
ljmp
in
hlt
aad
pop
ficoms
mov
ja
jo
pop
js
and
sbb
mov
jle
inc
and
jecxz
jmp
cli
aaa
sub
ret
lock
jecxz
xchg
push
pusha
das
push
and
or
sub
cmpsl
jns
dec
sbb
leave
push
fcoms
pop
pop
out
pop
push
cld
outsl
mov
repnz
aas
pop
loop
cltd
and
and
fsubp
dec
out
xor
inc
lret
mov
test
mov
into
fstps
data16
fidivrl
shll
or
xchg
sub
fwait
dec
push
iret
or
cs
fptan
hlt
fdivrs
pusha
mov
xor
ficomps
xchg
cwtl
testl
inc
arpl
int3
lcall
add
push
xor
mov
xor
insl
inc
scas
insl
test
out
lds
adc
jmp
aam
mov
jbe
out
inc
mov
xchg
pushf
cwtl
push
inc
sub
cmpsl
es
jg
scas
push
nop
xchg
stos
jg
loop
in
scas
iret
dec
or
mov
ss
or
loope
or
scas
enter
icebp
enter
mull
cli
jns
mov
lret
rol
notb
out
fadds
sub
in
test
stc
sub
jno
fs
cmpsl
xchg
jecxz
pop
push
inc
pusha
pop
mov
push
gs
orl
test
push
iret
xor
loopne
jp
jecxz
das
xchg
sahf
sub
adc
cmpsb
push
shr
xchg
rcll
lcall
mov
out
mov
rolb
out
shlb
pop
xchg
movsl
pop
fdivp
xchg
add
push
cmpsb
loop
sub
and
shlb
pop
es
mov
in
jne
inc
or
bound
add
cwtl
shll
lcall
mov
sub
shlb
dec
movsb
add
add
sarl
mov
cmp
or
nop
and
pop
cs
adc
inc
xorb
cmc
mov
js
scas
rcrb
jae
push
push
sub
imul
movsl
cmp
cmpsb
stc
and
gs
push
mov
pop
out
or
sbb
xor
inc
mov
mov
and
pushf
or
les
push
or
fldcw
add
xor
pop
sbbb
or
xchg
icebp
xchg
shll
xchg
rorl
shlb
out
sub
mov
loope
hlt
inc
sahf
call
fidivrs
mov
imul
lock
adc
jecxz
pop
mov
sbbb
enter
ja
lea
dec
xchg
loop
lods
sbb
fsubrs
xchg
mov
mov
adc
test
add
and
or
aam
cmp
lds
mov
inc
out
sub
enter
in
jmp
nop
les
sub
or
pop
push
movsb
enter
sub
fldenv
xor
mov
call
jb
fcmovnb
or
fs
sub
cmpsl
mov
add
mov
fxam
out
negl
push
stos
inc
push
lock
sub
setl
fs
dec
insl
jp
mov
and
addb
inc
sbb
mov
pop
lds
mov
movl
xchg
aad
mov
or
pslld
test
repnz
cmp
dec
call
fidivrl
push
pop
adc
fistl
sub
in
sub
inc
ret
out
or
inc
call
loop
je
mov
mov
mov
xchg
xchg
outsb
jns
push
mov
dec
or
test
pop
lods
je
negb
jmp
clc
jmp
daa
test
call
jge
mov
add
rorb
repz
aaa
scas
add
add
sahf
and
in
adc
inc
inc
sbb
xchg
sbb
xor
ds
lods
cmpsb
sbb
pop
jns
cld
out
lcall
imul
popa
lahf
imul
mov
imul
enter
clc
mov
mov
out
das
adc
mov
stos
mov
xor
push
aam
jnp
mov
rorb
popf
imul
idivb
xchg
xor
mov
movsb
arpl
or
int3
gs
inc
fistps
mov
ss
cltd
repz
jecxz
dec
and
movsb
lods
ljmp
mov
out
into
sub
dec
aas
fcmovnbe
sub
mov
pop
mov
test
and
mov
push
in
sub
xchg
push
aaa
loop
push
test
adcb
xchg
pop
stc
pop
scas
fisttpll
pop
mov
roll
dec
and
jp
mov
cmp
jmp
in
pop
pop
pop
loope
imul
aaa
and
inc
std
xchg
lahf
lea
and
dec
add
mov
scas
add
rorb
xor
outsb
mov
fisttps
in
fsubl
xorb
mulb
sub
sub
call
arpl
into
jnp
or
bound
int3
mov
cmp
ja
jl
into
outsb
fisttpl
ret
inc
js
xchg
cwtl
push
inc
mov
outsb
lods
xor
inc
enter
jle
jo
lods
lea
lods
xor
repnz
mov
push
pop
xor
xorb
pop
hlt
mov
addr16
dec
xchg
xor
mov
xlat
pop
jg
inc
xchg
push
imul
addr16
mov
subl
dec
push
jl
push
push
fwait
add
pop
test
les
insl
arpl
mov
insb
mov
loopne
and
fsubl
mov
cwtl
push
cmp
push
sub
lods
shlb
xchg
fwait
mov
scas
adc
cmp
push
cmp
xor
mov
jecxz
cwtl
dec
mov
push
push
adc
add
mov
cmpsl
inc
je
or
movsw
inc
std
add
rorl
sub
xor
mov
adc
bound
lea
dec
xlat
mov
cmp
mov
je
arpl
mov
pop
adc
cmpsb
in
and
fisttpll
adc
sbb
xor
lds
nop
inc
inc
sub
out
cmpl
jmp
aam
leave
mov
popf
pop
outsl
xchg
jno
cmp
push
cltd
je
subb
cmc
or
ret
addr16
movl
lds
xchg
insb
ret
jns
jnp
and
jp
mov
dec
or
sub
and
lea
into
sbb
cmpsb
mov
repz
iret
out
movsl
repnz
xchg
inc
enter
lcall
lds
xor
push
pop
clc
fimuls
imul
int3
aas
jle
lea
stos
imul
mov
mov
sti
sbb
or
jg
pop
test
mov
movsb
push
into
insl
jns
xor
sbb
sub
pop
in
in
loope
cmp
daa
sub
jg
fwait
jne
lds
ret
or
aaa
fldenv
imul
fnstenv
in
xchg
cli
inc
sbb
es
inc
test
mov
pop
out
dec
push
hlt
sbbb
dec
sub
dec
push
xor
clc
aam
mov
test
shlb
mov
and
dec
pop
inc
cli
or
mov
cmp
cmpl
fldt
repz
popa
xchg
mov
incb
data16
ret
arpl
nop
out
pushf
pop
sbb
add
add
in
adc
daa
fnstenv
out
dec
xchg
mov
cltd
test
clc
or
int3
scas
adc
outsb
cmp
fcmovnb
shlb
xor
das
pop
imul
cmp
dec
int3
add
roll
out
popa
add
xlat
vandps
dec
nop
jb
aaa
aaa
lea
xor
pop
xchg
xchg
xchg
in
call
push
pop
jnp
push
mov
xchg
fistpl
mov
fiadds
les
pop
in
and
adc
jnp
and
sbb
add
xor
in
ljmp
push
inc
lods
or
outsl
lock
xor
xor
ljmp
je
pop
xchg
pop
cs
mov
loop
movl
mov
mov
jp
mov
pop
xchg
fsubrs
icebp
xchg
negl
xor
ss
lock
adc
cmp
xchg
dec
scas
loopne
insb
sbb
repnz
out
mov
pop
inc
pop
xor
pop
mov
fcoms
xchg
cld
aas
push
xchg
pop
xchg
test
cmovge
les
sbb
push
push
and
mov
dec
mov
rol
stos
sbb
xchg
loope
inc
lcall
fwait
lcall
mov
dec
mov
iret
xchg
add
and
insl
rcr
mov
jnp
mov
push
int
mov
sbb
cld
ljmp
cmp
jl
jb
insb
mov
dec
adc
push
lret
scas
xchg
imul
cmp
insb
test
add
leave
dec
mov
add
ljmp
daa
add
in
cs
add
shrb
mov
or
jmp
shrl
stos
and
out
jnp
sbb
xchg
loope
fdiv
inc
mov
lods
fwait
js
dec
sub
mov
repnz
decl
cmc
cmpb
pushw
fcomp
hlt
cmc
cs
xchg
sub
dec
sub
out
mov
pop
jb
xor
pop
testb
into
sbb
mov
add
xor
lea
fst
jecxz
in
rolb
mov
mov
or
adc
aas
jne
jns
pop
xchg
cmp
and
dec
cmp
js
mov
stos
lahf
xor
movsl
pop
mov
sub
cmp
aam
push
in
sub
dec
jb
daa
mov
testl
pop
xor
insl
loope
push
jbe
mov
cs
jbe
fnstcw
push
fstpt
push
mov
addr16
repz
sub
ret
out
mov
in
test
jmp
orl
out
mov
cld
rep
out
push
jne
es
mov
sub
enter
movsl
pop
mov
ja
ret
fstl
jle
sbb
aas
dec
xor
insb
daa
cli
test
mov
push
daa
xchg
jg
js
mov
cmp
aas
inc
out
cwtl
pop
pop
xchg
jnp
mov
pop
xchg
in
jns
jo,pn
ljmp
pushf
mov
outsl
cwtl
jp
mov
pop
cmp
pop
fcoms
loopne
stos
pop
lcall
outsb
outsl
push
movsl
fldcw
sbb
dec
mov
jge
flds
cmp
imul
mov
mov
pop
movsl
or
int
repnz
add
lods
pop
lret
sbb
and
xchg
cmp
negb
addr16
loopne
in
sahf
loop
pop
mov
or
dec
sar
cmp
mov
aam
push
ss
sar
pop
inc
mov
xor
inc
mov
popf
mov
and
mov
mov
pop
out
cmp
out
je
push
mov
subb
dec
and
dec
incb
dec
sbb
pushf
lret
push
rolb
dec
daa
xchg
mov
aad
in
dec
call
or
cmp
mov
jmp
sti
mov
je
push
mov
decl
fadd
lret
mov
in
insb
jb
add
mov
sub
int
or
mov
inc
iret
imul
fistps
imull
adc
mov
push
pop
add
xor
loope
add
test
add
sbbl
movl
mov
cmp
pop
or
mov
cmp
mov
scas
fidivl
cmp
or
and
cli
pushf
movsb
push
gs
add
jno
enter
adc
test
mov
daa
mov
repnz
sbb
cli
sbb
mull
mov
mov
notb
cs
push
push
dec
repz
mov
push
push
fdivrl
stc
add
enter
sub
sub
iret
jp
lods
mov
xchg
test
push
popf
and
push
cltd
jo
and
add
pop
mov
push
mov
mov
and
jp
into
xchg
sbb
pusha
or
test
repnz
or
sarl
xlat
lcall
jb
push
and
inc
gs
movsl
jecxz
or
push
or
inc
inc
repnz
aaa
jg
cmp
lock
popf
adc
repnz
dec
sub
pop
lods
fidivl
mov
add
shl
and
sbb
lret
xchg
lds
out
and
or
cli
xor
mov
xchg
lds
push
lods
pop
loop
or
cs
fmuls
mov
mov
mov
dec
and
cmp
lcall
out
rclb
xor
hlt
jnp
or
sub
adc
cld
xchg
out
add
sbb
jne
adc
dec
sub
call
lods
adc
fsubl
push
push
pop
js
sbb
push
lods
push
ss
xchg
aaa
les
dec
mov
cmp
in
test
push
lret
testb
xor
add
rorb
push
or
pop
in
adc
ljmp
pop
les
xor
lret
daa
sub
dec
leave
outsl
inc
cs
xchg
cmp
roll
out
daa
loopne
inc
in
ljmp
xlat
cmc
push
xor
jbe
add
push
je
dec
and
mov
into
xor
jmp
push
popf
insb
jg
test
clc
stos
add
sarb
daa
mov
js
and
push
add
pop
or
lcall
xor
xchg
jae
stos
mov
ret
mov
ret
mov
nop
cs
in
jge
cwtl
pandn
lahf
mov
gs
push
icebp
cmpsb
mov
mov
xlat
movsl
dec
mov
cmpsb
fidivrl
lcall
xchg
int
dec
ret
lea
jge
repnz
loop
fbstp
xchg
loop
mov
jp
cmpsl
ja
andb
jns
xor
push
sub
jno
sti
fsts
add
mov
and
pop
ljmp
or
or
outsb
mov
mov
mov
das
adc
scas
push
jb
loopne
cmp
rol
ret
xor
push
xchg
mov
into
jle
popa
pop
mov
in
pop
pop
push
lea
and
xor
cmpb
or
or
push
pop
out
std
dec
add
shr
xor
ljmp
adc
clc
addb
dec
cmp
jp
stos
jle
push
negb
sub
daa
add
iret
inc
pop
lds
je
rorl
jle
sub
into
shr
mov
je
mov
push
lock
arpl
in
pop
mov
mov
test
ret
xorb
sub
fcmovb
cli
ss
add
xchg
lret
dec
arpl
dec
jnp
mov
fndisi(8087
lret
mov
fldenv
sbb
insl
bound
mov
mov
xor
clc
sub
jne
out
inc
ja
push
xchg
in
sti
clc
iret
mov
push
and
in
les
adc
test
out
dec
sub
mov
cmp
dec
cmp
ja
and
mov
fs
shll
push
sahf
inc
add
adc
loop
push
push
in
bswap
xchg
ret
imul
addr16
mov
cmp
iret
imul
lods
shll
repz
jecxz
add
jp
test
adc
sub
das
mov
inc
pop
push
inc
mov
sahf
inc
cmpsl
sub
mov
dec
lea
fs
cmp
popf
inc
xor
fisttpl
mov
call
dec
idivb
add
xchg
add
mov
loopne
lcall
sub
xor
stos
shll
push
adc
lods
es
cwtl
in
dec
mov
jle
sub
adc
jo
leave
out
jmp
movb
adcb
scas
pop
pop
and
vunpckhps
imul
add
jmp
adc
mov
push
jmp
inc
out
sarl
les
loope
lods
push
mov
outsl
cmp
lds
mov
fcomi
sbb
cmp
insb
lret
push
std
sti
or
inc
hlt
cmc
sub
pop
mov
fsubs
add
fsubs
pop
enter
fcom
enter
std
fdivs
std
fs
mov
xchg
and
out
repnz
pop
inc
in
xchg
dec
lret
adc
test
pop
xor
out
leave
repnz
cmp
leave
outsl
cmp
dec
cmpl
scas
dec
mov
int
mov
fnstcw
in
fnstenv
std
scas
and
cmp
sub
lahf
push
mov
outsl
jecxz
mov
pop
mov
jb
ret
dec
adc
mov
mov
sbb
rolb
adc
fwait
orb
stos
dec
jne
roll
or
cltd
out
push
out
test
lret
mov
inc
dec
mov
push
xchg
ret
or
jno
loop
int
adc
ds
xchg
aas
stc
push
pop
sub
mov
lcall
add
and
and
lret
adc
in
fsubrs
push
add
xchg
scas
xchg
insb
cmp
xchg
pop
xorb
rolb
out
xor
in
das
jae
pop
pop
fnsave
adc
insb
shll
xchg
add
jmp
xor
mov
mov
sbbb
xor
sub
fidivrl
sub
int
adc
insl
dec
adc
scas
out
fcmovnb
add
sub
add
mov
sub
mov
data16
loop
jge
movsl
fldt
repz
mov
testb
mov
pushl
xor
xor
jb
cltd
inc
jb
ficompl
jb
arpl
fwait
xor
arpl
jp
nop
push
pushf
enter
xchg
and
mov
or
mov
fdivr
scas
mov
adc
cwtl
in
pop
repz
cmp
and
in
shrb
fcoml
cmpps
mov
sub
into
sub
scas
sbb
jg
out
cmp
scas
cmc
and
lods
pop
addl
dec
push
xor
pop
out
mov
ret
ficoms
hlt
in
outsl
dec
push
iret
lahf
pop
gs
stc
sbb
ljmp
cmp
xor
mov
dec
pusha
jb
cmpsb
std
rcrb
je
cmpsb
xor
mov
int
sbb
test
js
sbb
pushf
clc
nop
sub
cmpl
fisttps
cwtl
in
loope
loop
xor
sbb
pushf
cmp
cltd
jo
jmp
shll
dec
test
sahf
inc
into
inc
xor
cltd
mov
in
push
xchg
push
fnsave
das
mov
mov
fcoms
inc
test
fsubrs
and
dec
testl
out
pop
cmp
paddsw
scas
les
es
shlb
push
adc
mov
pop
push
pop
cmp
shrb
cs
imul
xor
test
pop
ds
loop
xchg
xchg
ret
jae
inc
xor
in
lahf
aaa
add
in
xchg
xchg
jmp
pop
adcb
and
jge
mov
cld
test
lds
shll
xor
or
inc
out
push
mov
call
sahf
sub
push
lahf
lret
cmp
dec
daa
out
loope
jno
inc
dec
cmp
mov
ljmp
fld
xchg
jne
lea
and
xchg
jg
aam
stos
cvtpi2ps
insl
sbb
mov
aaa
mov
mov
mov
ret
mov
lret
jne
dec
or
pop
pop
ret
and
pop
mov
cmp
stos
ja
in
shlb
adc
cmp
xor
data16
mov
inc
fistpl
ficompl
xchg
or
ljmp
inc
dec
jno
arpl
add
loop
sub
lods
mov
outsl
mov
push
es
call
mov
sub
andl
and
and
inc
andb
xchg
sarl
ja
sub
movsb
mov
push
imul
mov
add
cmp
insb
and
sub
adc
shr
jb
test
adc
mov
out
push
ret
cmp
lods
lds
mov
push
or
int3
sbb
inc
and
mov
adc
xchg
inc
sub
xor
mov
pop
xor
cld
iret
repnz
lds
mov
jne
in
jmp
push
outsl
xchg
rorl
sbb
sbb
dec
leave
or
cli
push
cmp
push
ret
inc
sti
adc
es
ljmp
mov
imul
lcall
and
jne
imul
add
inc
jmp
jp
push
fiadds
arpl
scas
mov
jmp
mov
addr16
jnp
inc
inc
cmpsl
or
ret
dec
aad
rcrb
and
movsl
pop
and
pop
mov
dec
inc
pop
dec
cld
push
je
mov
adc
aam
xor
and
xchg
mov
scas
repz
bsf
push
mov
mov
inc
pop
jp
push
dec
add
mov
pop
xchg
cmp
cmp
imul
inc
jne
iret
jb
dec
in
int
test
mov
aaa
xor
sti
test
outsl
call
pop
shr
mov
inc
xor
jecxz
jp
enter
dec
shrb
xchg
cwtl
gs
sbb
mov
nop
call
push
xchg
stos
push
xor
or
mov
mov
adc
pop
aas
push
sub
and
and
jl
or
test
xlat
inc
push
repnz
mov
ljmp
test
test
mov
or
cli
enter
cmp
call
sbb
jmp
ljmp
aam
cmpsb
jmp
add
or
ja
mov
xchg
mov
inc
pushf
std
jecxz
adc
or
int
data16
pusha
mov
test
pushf
pop
scas
xchg
test
and
add
xchg
mov
mov
cmc
mov
in
pop
nop
clc
loop
mov
icebp
mov
mov
and
mov
arpl
testl
and
dec
popl
mov
xchg
mov
fstpt
mov
fstps
or
shlb
push
mov
ret
or
cmovl
push
dec
push
dec
test
dec
push
push
in
mov
ficoml
push
enter
in
loope
in
leave
push
mov
push
imulb
outsl
mov
pop
mov
inc
jns
popf
xlat
jo
movsl
fwait
inc
insw
push
jnp
push
jmp
fdivs
xor
jp
add
ja
mov
ffreep
in
bound
mov
xchg
pinsrw
jno
shrb
mov
push
fnstsw
and
lods
xchg
sub
rcr
sub
out
aad
insl
aam
xchg
xor
and
hlt
test
aaa
or
repz
fsubrs
sub
adc
sbb
lret
xor
clc
mov
sbb
shl
in
xor
dec
adcl
testl
jmp
pop
cmpsb
and
mov
aas
es
push
pop
in
sub
xchg
mov
pop
test
outsl
mov
incl
sub
addb
xor
push
int
cmc
nop
adc
or
in
jmp
es
in
repz
sti
dec
inc
xchg
cmp
loope
pop
add
xor
pop
push
cltd
dec
in
sti
dec
pushl
mov
or
stc
call
sub
stos
and
sbb
and
xchg
push
xor
mov
jmp
nop
dec
sbb
xchg
push
jnp
mov
cmp
dec
or
pop
hlt
fildl
mov
or
mov
pop
negl
cltd
sub
out
out
or
dec
divb
cltd
test
sbb
lea
mov
mov
dec
aad
mov
dec
jno
push
jecxz
or
ds
test
arpl
insb
stos
pusha
pop
jo
ret
cs
lcall
aad
jns
mov
jge
mov
imull
pop
jbe
and
pop
lret
cltd
cmp
or
jecxz
in
mov
and
mov
mov
aam
xor
orb
xor
adc
cmc
dec
xor
jbe
dec
dec
addr16
mov
inc
cmp
add
pop
mov
xor
and
addl
pop
cmp
das
sbb
jle
xor
and
jp
test
jbe
or
xchg
jmp
popf
mov
push
sahf
and
cmpsb
add
mov
cmp
cmp
js
dec
mov
pop
mov
cmp
ss
cmpsl
sbbl
and
jle
jno
xor
xchg
inc
cmp
lds
dec
sbbl
add
imul
stos
sbb
ja
mov
out
pop
out
xor
mov
stos
test
or
ret
pusha
out
cld
gs
jb
scas
hlt
fisubrl
call
imul
imul
xor
lahf
sub
push
sbb
fwait
rorl
cmpb
sbb
pop
lock
insb
inc
adc
xor
clc
xchg
repnz
lods
mov
out
fdivrs
push
add
scas
xchg
pop
sahf
rcr
out
inc
sub
ds
popf
cmpsb
jbe
jae
xor
popa
ss
cmp
pushf
mov
fidivl
mov
pop
xchg
xchg
and
mov
hlt
stc
pop
mov
gs
cmp
sbb
inc
and
xchg
and
inc
xor
fildl
dec
sbb
shlb
pop
js
cmp
fsts
xchg
addr16
push
mov
movsl
add
jecxz
push
nop
mov
mov
mov
test
mov
sbb
in
in
mov
pop
ja
dec
and
mov
pop
insl
cmc
loopne
fidivl
mov
lcall
mov
sub
adc
aaa
cmp
mov
rorl
cmp
add
dec
sbb
xorb
cmpsb
into
sbb
ja
cmpsb
push
in
out
aaa
and
rcr
jl
out
mov
popf
enter
xlat
loopne
inc
sub
out
mov
push
xchg
jmp
lret
in
stos
or
cmp
or
in
mov
cmp
mov
in
xchg
jg
push
jne
mov
out
rolb
or
mov
repnz
sahf
mov
loope
jl
fstl
loopne
mov
xchg
sbb
inc
adc
bnd
filds
push
mov
mov
mov
cmp
and
int
inc
jecxz
mov
test
or
xor
jns
iret
test
and
jnp
jo
inc
adc
clc
arpl
cltd
loope
pop
sub
xchg
jl
push
sub
stos
xorl
xor
test
sbb
cmpsl
or
or
xlat
and
imull
xor
adc
in
test
adc
xor
xchg
mov
mov
outsl
xchg
fidivl
xor
jnp
daa
cmp
sbb
mov
cmovns
sub
cs
call
xchg
outsl
std
es
or
mov
adc
sbb
jge
test
shlb
inc
mov
fistl
jne
xor
cs
hlt
mov
repnz
pop
mov
jmp
rorb
xchg
cltd
push
xchg
or
in
jne
fdivl
cmc
and
iret
dec
sbbl
inc
cmp
xchg
xchg
shl
insl
sub
decl
std
cmp
call
xor
test
testl
jne
adc
push
ret
in
lock
cmp
jb
test
aad
mov
or
cmovp
int3
ret
push
data16
xchg
leave
or
and
fucomi
jae
dec
enter
insb
pop
push
pushf
and
int
xchg
xor
adcl
test
pushf
push
add
push
jns
mov
sbb
cmp
das
adc
push
fcomip
sbb
adc
out
ss
std
daa
xor
adc
cmp
mov
inc
les
movl
pop
lods
xchg
inc
repnz
sub
pushf
add
mov
sahf
movsb
or
fsubrl
lods
lods
mov
mov
dec
call
cmp
fcoml
cli
cld
stc
testl
mov
dec
pushf
jbe
in
not
dec
pop
mov
movsb
loope
call
pop
stos
sub
flds
xchg
sbb
mov
cli
push
nop
jp
ja
subl
les
stos
pusha
sbb
and
in
clc
ret
jne
sbb
mov
sub
push
mov
xor
insl
push
inc
mov
scas
jae
lcall
fsubrl
fstp
es
add
movl
lods
mov
adc
popa
pop
or
jno
je
and
repz
fdivl
or
mov
insb
aam
out
mov
stos
test
mov
lahf
mov
nop
xor
ret
and
jns
out
sub
mov
fwait
or
int
jg
inc
add
pop
fwait
sub
aad
stos
mov
add
adc
add
loop
mov
sub
cmp
into
and
mov
insb
popf
xchg
stos
push
or
cmc
jo
push
jno
push
daa
cmc
pop
inc
push
orb
push
inc
rcrb
imul
adc
sub
int
fstp
icebp
js
jbe
mov
xorl
mov
or
inc
mov
push
lret
cltd
push
push
push
outsb
push
mov
jp
sub
jne
cmp
in
pop
cmp
gs
inc
xchg
outsl
fcmovnb
jp
notb
cli
and
and
mov
mov
sbb
adc
adc
jmp
imulb
inc
jnp
xchg
cmc
sbb
push
mov
add
jnp
inc
xchg
mov
aas
dec
and
sub
mov
push
mov
sbb
shlb
rclb
adcb
shlb
pushf
xor
jecxz
adc
adc
jecxz
or
ss
jmp
adcl
inc
ljmp
pop
stos
shrb
jne
or
aas
xlat
jle
out
push
sub
shll
iret
jno
mov
sar
ja
test
push
cli
pop
pop
negb
push
pop
jne
adc
addl
mov
dec
pcmpeqb
jne
xchg
outsb
cwtl
or
loopne
lret
pop
stc
mov
jno
sub
pusha
xchg
test
sub
lods
test
sbbb
movsb
cmc
and
sbb
jb
data16
test
jle
adc
mov
shlb
inc
pop
lret
insb
cltd
sub
xor
sarb
fnsave
pop
sub
gs
jmp
inc
loop
pop
bound
push
cmp
mov
xor
in
xor
jmp
cmp
cltd
notl
iret
ss
push
adc
add
stos
das
daa
cmp
loopne
jae
pop
and
cmpsb
int
jp
aam
push
inc
sub
scas
xchg
scas
ds
std
push
loop
pop
cmp
mov
push
sahf
inc
aam
shlb
push
push
xor
test
xchg
in
jecxz
mov
std
cwtl
pusha
jmp
int3
test
test
xchg
sbb
pop
dec
je
lea
lea
pavgb
push
fdivs
xor
jl
fisubs
push
jo
push
sbb
mov
in
sub
inc
or
jmp
xor
push
scas
into
imul
add
sbb
jne
fisttps
stc
sub
pop
repz
and
inc
insb
push
jo
addr16
mov
jb
mov
mov
shll
cmpsl
jno
sti
scas
cmp
fdivp
pop
leave
call
or
cmp
out
ret
sbb
fsubrs
pop
xchg
div
fisubs
inc
fcmovnu
cmp
fnstenv
scas
orl
xor
rcr
sub
test
test
js
mov
inc
jle
out
bound
nop
loopne
popa
sbb
clc
mov
push
ret
pop
mov
out
cmc
fidivl
jb
pop
xchg
xlat
and
clc
lea
sub
lret
ja
dec
ficoml
jno
mov
xchg
stc
pop
sahf
add
rep
int
fistps
pop
stos
fs
daa
mov
pop
and
aaa
add
push
dec
lret
stos
mov
test
std
adc
sbb
add
sbb
cwtl
xchg
inc
sub
push
adc
pop
inc
in
adc
aad
xor
mov
xor
mov
addb
decb
je
add
dec
or
aad
jmp
mov
push
sbb
int3
sbb
mov
popa
add
dec
jne
daa
cmp
arpl
mov
sub
pop
push
fs
jnp
sbb
mov
and
call
and
xchg
pop
adc
fidivrs
andps
push
call
flds
xor
fs
rcll
ret
ja
jns
mov
push
mov
mov
shll
rorl
mov
pop
test
push
repz
adc
sub
and
outsb
dec
jge
sbb
popa
ljmp
mov
not
jae
je
cmpsb
sbb
dec
add
cmp
cltd
cmc
add
xchg
mov
fcompl
push
cmp
mov
in
add
lock
das
inc
cmpsb
mov
jae
mov
inc
jbe
out
andb
jmp
cmp
addr16
and
rcll
pop
lret
mov
xchg
pop
inc
push
shl
xchg
mov
cmp
into
xchg
xchg
test
mov
sbb
mov
sbb
and
mov
jae
rcrb
push
mov
sbb
stos
jge
cmp
push
pop
int
std
mov
out
insb
inc
mov
sub
pop
mov
sub
lret
imul
test
out
jecxz
int
jge
dec
repnz
orl
and
mov
xor
mov
imul
repnz
bound
faddl
ja
ret
ja
xchg
jo
add
adc
sub
fldenv
cmpsl
mov
lret
sbb
pop
fcoms
rorb
int3
enter
inc
xchg
inc
arpl
mov
mov
mov
xor
and
xchg
xchg
enter
mov
and
ss
pop
iret
mov
lock
cwtl
in
stos
movsb
popw
stc
insb
mov
lahf
push
pop
jg
push
cld
xchg
mov
sarb
or
add
cmpsb
aad
add
stc
adcb
lea
pop
sub
es
jae
pop
imull
lds
or
jbe
sahf
scas
ss
movb
and
scas
and
inc
pop
scas
sub
or
repz
dec
rorl
jbe
xchg
adc
sub
aas
mov
movsb
loop
mov
and
imul
xor
push
or
inc
fnstcw
pop
dec
les
mov
push
sbb
pop
push
adc
or
std
ja
sbb
outsb
imul
dec
mov
aaa
rcrb
push
adc
arpl
sbb
fsubl
xor
scas
adc
fbstp
inc
mov
sbb
cs
jae
mov
out
out
fcoml
cmp
or
and
outsb
mov
pop
add
add
js
mov
fwait
ret
mov
and
outsb
add
fildl
ja
pop
sahf
pop
mov
cs
movsb
push
cli
adc
out
inc
push
mov
sub
cld
cmpsl
popa
and
lcall
add
stc
push
and
jl
inc
cmp
jmp
mov
fildl
sub
inc
pop
daa
clc
mov
sbb
xlat
mov
test
test
jo
pop
js
call
fcoml
cmp
sar
insb
xchg
hlt
test
push
pop
leave
xor
out
out
cltd
nop
mov
add
jb
sbb
test
arpl
lahf
sub
les
push
add
inc
add
in
in
aas
sbb
cmp
and
or
sbb
push
pop
inc
out
bound
outsl
test
push
stc
aad
jle
hlt
cld
dec
test
ret
int3
movsb
je
imul
push
mov
pop
lea
clc
arpl
dec
bound
int3
mov
jnp
sub
mov
and
imul
and
dec
subl
xchg
imul
pop
xor
fistps
ds
cmp
cmp
loopne,pt
lcall
ret
sbb
enter
xor
cwtl
adc
push
sub
nop
sub
add
and
bound
pop
inc
aaa
daa
les
insb
mov
jge
lahf
or
mov
test
notl
jmp
jge
negb
mov
xlat
jle
dec
in
js
sbbb
in
ret
jmp
enter
and
adc
repz
pop
cmpsb
lods
pop
es
cmp
xlat
aad
arpl
lods
pop
pop
aas
mov
ficoml
stos
aad
pushf
fists
mov
dec
orb
stos
dec
cmp
inc
out
rorb
pop
cmpl
mov
dec
daa
sub
repnz
div
push
cmpsb
pusha
mov
mov
cli
sbb
jge
mov
mov
xchg
or
ret
es
iret
mov
mov
mov
push
rcrl
cwtl
dec
push
addr16
adc
inc
loopne
lods
shrl
mov
push
pusha
scas
js
mov
lea
and
mov
and
fnsetpm(287
jns
out
cmpb
mov
mov
pop
lret
push
xor
push
inc
xor
shrb
add
sub
mov
fwait
or
push
xchg
ds
xchg
int
add
and
push
out
shrl
and
push
clc
out
stos
jle
xchg
pushf
cmp
pop
orb
ret
push
sbb
pop
aaa
cmpsb
outsl
cmp
test
push
rcr
mov
push
or
inc
and
sar
aaa
jo
or
cmpsb
mov
sbb
or
cs
sub
inc
xor
in
lock
cmpsb
mov
pop
jns
jno
in
dec
pop
outsl
popa
test
mov
ljmp
std
shl
mov
lods
jecxz
out
fwait
or
jmp
xchg
adc
jecxz
stos
mov
add
mov
sbb
int3
ret
mov
add
xor
dec
cmp
aad
es
pop
xor
popf
nop
insb
pop
xchg
mov
mov
cwtl
fnsave
xor
jo
stos
jb
dec
dec
rolb
sub
pminsw
mov
add
bound
ficompl
jg
push
cmp
add
les
dec
and
sti
or
jg
jae
loopne
xchg
ficomps
clc
jp
sbb
sbbb
movsb
dec
dec
popl
sub
jne
inc
jo
insl
cmpsl
lret
jne
push
out
add
mov
sbb
push
pop
or
fstp
sub
mov
adc
popf
push
add
out
mov
add
inc
pop
mov
popf
dec
dec
mov
imul
add
dec
pop
iret
ret
or
shlb
decb
xchg
in
xchg
xchg
jns
fimuls
sarb
xor
fsubl
xor
add
cli
lahf
cltd
adc
push
cmc
imul
mov
aad
test
inc
push
out
je
jl
adc
mov
sbb
rcrb
or
lret
or
jmp
adc
das
andb
hlt
push
scas
shlb
jecxz
call
xchg
hlt
pop
sbb
or
mov
mov
loop
sub
outsl
inc
xchg
add
inc
xchg
jp
int
adc
test
out
dec
nop
pop
das
rcll
adc
dec
mov
cmc
lods
mov
pop
sbb
mov
cmc
in
test
add
cli
ja
xchg
out
outsl
mov
jge
xchg
sbb
sbb
or
sbbb
out
cmpsb
sti
mov
dec
shrl
pop
jo
pop
lea
mov
pop
addr16
mov
gs
scas
xchg
xor
pop
in
loopne
cwtl
mov
decl
addr16
inc
dec
repnz
out
lcall
insl
push
xor
push
xor
imul
outsb
cmp
outsb
lret
mov
loop
loopne
mov
dec
jb
cmp
push
and
out
mov
stc
push
scas
jl
les
add
sub
adc
and
clc
mov
push
mov
pushf
cwtl
aam
xchg
testb
mov
add
repnz
shrl
clc
fsubrp
mov
loopne
ret
sbb
scas
sub
pop
cltd
jbe
lods
fldt
jae
sub
out
scas
movsb
cwtl
inc
and
mov
mov
cmpsw
and
push
das
pop
sbb
and
cmp
fbstp
stos
mov
outsb
sbb
mov
jecxz
mov
test
int3
ret
fadd
pop
adc
mov
lods
sahf
test
mov
push
sbb
fdivrs
in
cs
xor
jecxz
pusha
addb
pop
xchg
inc
cmpsb
xchg
and
test
lret
cmp
mov
ss
sub
cmp
lods
xchg
cltd
or
cmp
cmp
arpl
insb
lods
jp
jecxz
inc
mov
arpl
inc
sbbl
cmpsb
fistps
xchg
mov
fstpl
mov
repnz
mov
test
mov
orb
push
and
lock
inc
mov
push
push
not
pop
add
mov
int3
out
movsl
mov
or
test
and
rcr
dec
scas
mov
dec
jne
nopl
xchg
mov
jne
data16
adc
mov
xor
jbe
stc
xchg
push
cwtl
inc
xchg
mov
mov
sbb
pop
sbb
cld
pusha
mov
inc
jns
psubw
mov
add
leave
outsb
cmp
or
aaa
jp
sqrtps
dec
inc
ds
stc
mov
or
popf
xor
popa
ret
testl
xor
jecxz
pop
or
dec
push
mov
movsb
clc
sub
and
adc
mov
add
xchg
mov
mov
cmp
fiadds
adc
inc
aam
movsl
pop
mov
add
andb
xchg
add
mov
adc
aam
xchg
out
movsl
jns
ret
pop
jle
stc
pop
stc
div
xchg
cmpsb
shrl
pop
arpl
xor
out
dec
ds
jmp
xor
leave
mov
xor
mov
sub
jecxz
stos
shrb
push
jecxz
dec
xchg
nop
jno
out
push
and
sbb
mov
sbb
push
mov
inc
xchg
repnz
dec
pop
mov
insl
in
test
jge
scas
out
inc
fcoml
mov
sbb
ret
fistps
cmp
add
icebp
mov
xchg
addr16
pop
aaa
jnp
or
test
push
jmp
pop
sub
movsb
bound
mov
jmp
mov
pop
sbb
subl
lock
sub
xchg
test
mov
loop
cmpsl
or
rclb
mov
mov
je
test
arpl
adc
sub
xorl
mov
rcll
out
xchg
daa
dec
fiaddl
movsl
sub
sti
in
xchg
hlt
shll
pop
dec
add
popf
bound
mov
mov
pop
add
or
icebp
cli
and
sbb
int
sbb
pop
cmp
ficoms
xor
mov
loop
inc
je
push
adc
cli
lea
mov
inc
and
inc
stos
pushf
pop
cmp
jle
cmp
adc
adc
notb
sub
js
add
jnp
sbb
jae
jb
push
out
mov
lret
xchg
mov
xlat
mov
sbb
jns
or
lods
or
pause
sbb
mov
jne
jecxz
fmul
jecxz
pusha
imul
sahf
out
test
inc
pusha
out
jbe
clc
mov
nop
adc
loopne
xchg
or
scas
xor
clc
dec
mov
push
jb
insb
mov
aam
push
gs
cld
jp
dec
xor
lods
inc
jmp
cmpsl
pop
add
mov
mov
mov
scas
bound
in
mov
mov
mov
push
sub
push
hlt
inc
flds
jmp
ds
icebp
inc
push
xor
mov
jnp
dec
cs
lret
test
xchg
orb
addr16
fs
dec
sub
rcll
jnp
movsl
mov
add
jne
inc
fmul
xchg
mov
imul
add
sbb
out
loopnew
scas
push
sbb
mov
mov
shrb
xchg
nop
ret
inc
mov
fwait
xchg
jbe
add
bound
xchg
loopne
dec
jp
and
mov
push
adc
rorl
pop
cmp
sub
out
idivb
ds
inc
repz
cltd
loop
xchg
adc
imul
in
enter
jns
lea
arpl
bound
and
in
insb
or
test
or
jp
stos
fmul
sub
lahf
dec
mov
in
icebp
decb
ret
pop
xchg
cmp
dec
fmull
out
cmovl
xchg
shrb
xchg
je
add
mov
mov
loop
lock
cld
xor
adc
jns
fld
popf
push
xor
outsb
adc
inc
adc
add
hlt
fs
xor
xchg
mov
test
loope
sbb
test
sub
stos
outsl
mov
es
outsb
jns
jne
mov
lods
mov
adc
arpl
fld
gs
pop
mov
mov
stc
dec
cs
jb,pn
popa
push
or
cmpsl
rolb
or
inc
push
pop
or
pop
pushf
pop
pop
rcrb
vrsqrtps
push
movsl
stos
movsb
lret
and
or
or
dec
dec
icebp
in
jo
fs
lds
aam
cli
adc
mov
stos
andl
mov
inc
scas
cmc
iret
or
and
arpl
push
sarl
adc
arpl
bswap
add
adc
test
mov
jp
cwtl
xchg
and
bound
or
cmp
dec
sub
inc
cld
sub
xchg
cltd
shll
stos
push
pop
lods
add
lahf
add
aaa
pop
testb
mov
cld
push
lock
sub
sbb
sarl
push
xor
sbb
adc
xchg
jecxz
xchg
cs
lret
insb
or
push
mov
xchg
push
push
jne
dec
mov
fisubrs
mov
pop
sbb
xchg
out
or
fisubrl
sbb
inc
and
fists
ror
mov
lock
insb
daa
fcompl
mov
pop
xor
cltd
mov
roll
and
test
cmpl
rolb
jle
inc
rclb
or
push
ds
sbb
cmp
dec
test
dec
les
inc
in
xchg
stc
loop
push
or
xchg
jecxz
outsb
mov
hlt
aam
inc
rcl
push
jae
push
mov
sbb
push
gs
jp
fdivp
push
jecxz
aas
and
daa
sbb
mov
imul
es
pop
in
mov
adc
sbb
sarb
xor
mov
push
inc
xchg
or
push
xor
fisubrl
mov
inc
add
movsl
jns
xchg
outsl
sub
inc
imul
cwtl
aam
add
testb
mov
das
mov
push
sbb
mov
sub
int3
mov
ss
mov
inc
xchg
sahf
adc
jp
les
jbe
out
xor
inc
push
decb
repz
imulb
inc
fdivrs
inc
jmp
mov
out
notb
mov
ja
cmp
mov
dec
or
les
mov
cld
sub
ret
mov
sahf
insb
inc
in
pop
fwait
imul
aaa
lret
xlat
movsb
out
adc
mov
fcompl
sbb
cmp
cmp
push
mov
jle
and
lea
mov
filds
bound
pop
iret
cmpsl
pop
add
leave
movsb
inc
mov
sbb
sbb
scas
daa
mov
cmc
push
push
sahf
in
pop
sub
jmp
addr16
mull
cmp
daa
xchg
mov
push
rorb
popf
lcall
mov
test
dec
cmp
jp
fildll
sbb
xor
jns
jbe
aad
stos
jno
xchg
push
jae
cmpb
ss
jp
pop
sbb
mov
or
popl
mov
adcb
add
stos
xchg
lret
jb
or
mov
inc
sbb
push
mov
xor
imulb
xchg
fcmovnb
add
xchg
xchg
xchg
push
mov
push
int
loop
pop
inc
inc
in
rolb
fistpl
ljmp
sub
std
cmovae
int3
adc
lcall
jne
push
out
sub
lret
add
xchg
popf
inc
lds
lock
pop
aas
pop
lods
ficompl
sarb
adc
mov
lods
dec
pop
std
cmpsb
push
sub
ret
sbb
cmp
imul
push
gs
push
lret
push
jbe
pop
pop
movsb
fisubl
and
jo
xor
mov
into
dec
aad
lods
imul
mov
mov
stos
ds
out
outsl
or
test
repnz
cld
and
cli
addr16
inc
in
push
test
fwait
iret
inc
hlt
and
mov
fbstp
pop
aad
or
mov
ror
push
pushf
cmpsb
cmp
cltd
sbbb
jno
nop
cmp
cmp
test
push
jnp
inc
adc
imul
xchg
outsl
sahf
sbb
loop
push
sbb
jle
idivl
test
clc
push
int3
dec
pop
mov
cmp
scas
adc
add
test
pop
test
sub
sub
pop
ficomps
fdivrl
jne
sub
movsl
xlat
in
mov
outsb
mov
xchg
sti
and
daa
mov
jb
stos
xor
fists
fwait
repnz
in
and
jg
cwtl
subl
sbb
inc
push
rcrb
call
divb
xor
pop
adc
xchg
dec
xor
jo
cli
sub
sub
and
fwait
mov
cmpsb
nop
js
cmp
push
lds
and
mov
xchg
int
enter
jecxz
dec
dec
stc
mov
xchg
outsl
inc
cmp
sbb
jbe
and
and
mov
xchg
testl
in
lcall
cmpsl
mov
ret
aas
subb
or
sbb
mov
ret
dec
fsubrs
jns
mov
jecxz
mov
imul
js
out
int3
ja
enter
ss
loope
and
jmp
insl
xchg
xchg
sub
jp
cld
out
fsubp
xchg
mov
inc
rclb
and
add
mov
lock
xor
pusha
xor
decl
es
xor
jno
fs
push
dec
sub
dec
and
jmp
fldl
mov
mov
dec
push
mov
xorl
jns
pop
es
pop
inc
dec
loop
scas
aam
adc
ret
ss
add
scas
mov
and
dec
mov
cld
jle
jne
pop
xchg
or
int
orb
xor
shlb
adc
sub
cli
xchg
dec
inc
or
dec
mov
cmc
lcall
mov
push
cmp
sub
cmp
xor
int3
add
fcmovu
mov
andl
clc
mov
push
adc
sub
jae
les
sub
cli
insl
aad
xor
adc
dec
fnstsw
and
into
pop
addl
push
pop
pop
in
jbe
fimuls
loope
ss
dec
decl
fcoms
outsl
pop
push
mov
sbb
pop
dec
cs
mov
cmp
adc
aas
mov
dec
aas
push
movsl
aam
push
mov
icebp
push
or
aam
adc
jbe
cmp
jbe
inc
mov
adc
lds
inc
jmp
test
int
add
push
mul
add
add
cmpsl
out
jecxz
mov
mov
and
mov
aas
aaa
push
jno
sarl
insb
dec
iret
sarb
add
test
imul
mov
jbe
imul
ret
xchg
sub
popa
dec
icebp
scas
icebp
ljmp
addr16
das
mov
out
fisttpll
jl
fs
add
fisttpl
aaa
inc
outsb
mov
and
xchg
test
mov
mov
mov
pop
or
jo
cmp
sub
push
popl
scas
xor
jb
andb
out
push
xchg
in
icebp
xor
sub
jo
inc
mov
pop
adc
mov
aam
push
adc
mov
sbb
flds
lret
cmp
pop
inc
add
movsb
addr16
ss
cli
xchg
test
clc
sti
scas
inc
fs
inc
add
jne
ret
pop
inc
shrl
mov
cmp
jo
aaa
cmp
lret
dec
popl
in
mov
jmp
ret
pop
xlat
mov
dec
ja
mov
mov
gs
ret
dec
xchg
xchg
nop
lret
mov
ss
adc
cmp
rcrb
sub
repnz
dec
xchg
push
and
rorb
inc
addr16
pop
das
ljmp
add
xor
cmc
enter
shll
bsr
jnp
fimull
data16
and
ret
xor
and
cmc
pop
scas
imul
scas
scas
daa
dec
ja
je
insl
cmp
or
sti
dec
or
fcomi
repz
sahf
pop
dec
xchg
jno
jmp
mov
cli
fs
jmp
repz
cwtl
enter
into
fimull
push
push
sub
cmc
nop
ret
cmp
sub
pop
es
jbe
jle
aaa
jbe
std
cmp
jns
dec
icebp
sub
or
notb
jp
xorl
mov
or
ret
sbb
dec
dec
xor
mov
jae
pop
xchg
adc
out
movsl
jae
xchg
xor
sahf
repnz
mov
push
popf
lret
mov
into
icebp
add
xchg
fistl
jmp
jae
dec
sub
mov
pop
dec
leave
bound
loope
fmul
daa
sub
inc
cwtl
aaa
in
fcmovne
jae
mov
scas
pop
adc
inc
xchg
or
mov
ret
add
inc
popf
test
in
out
sbb
sahf
int
xor
push
sbb
dec
cltd
cmp
inc
repz
sub
inc
inc
adc
bnd
dec
lcall
pop
jne
icebp
fdivp
sub
ljmp
les
pop
imul
xchg
lret
mov
mov
add
icebp
and
xchg
aas
adc
es
cmp
push
dec
push
pop
sub
mov
dec
in
adc
xor
jne
in
push
mov
push
das
sbb
xor
fs
test
jp
cmp
adc
outsb
idivl
std
jae
jle
fisttpl
push
test
movsb
out
lods
cmp
fwait
jl
fucomp
mov
mov
or
lods
push
cld
dec
mov
push
aas
sbb
out
out
mov
cmp
or
ss
insb
test
fisttpl
fwait
dec
pop
dec
add
add
loop
in
jg
shrb
mov
test
or
pop
dec
jg
cwtl
sub
xor
adc
xchg
test
jmp
sahf
jne
notl
cmp
jnp
inc
or
insb
mov
cltd
jge
or
jne
test
jo
push
pop
test
insl
aaa
shll
fstp
imul
je
sti
sti
sbb
jle
adc
dec
daa
loop
mov
jns
andl
mov
mov
cld
jae
dec
or
add
inc
shl
inc
add
mov
mov
dec
ficoms
test
xor
and
and
cmp
mov
cli
std
xor
repz
lods
bound
cmp
push
leave
adc
mov
repz
test
out
fstpl
jae
mov
js
lock
lods
inc
aas
mov
jg
sbb
dec
dec
orl
cmc
mov
jb
outsl
in
ja
push
mov
inc
add
mov
mov
xchg
sahf
jns
pop
push
mov
pop
cmp
int
xchg
adc
jge
dec
mov
aad
fs
out
jne
xchg
lods
add
jp
jmp
jne
sahf
inc
movsb
hlt
in
mov
mov
sti
scas
or
mov
and
add
push
stc
out
push
js
cmp
adc
xacquire
or
nop
jle
jne
jno
cmp
faddl
sbb
lahf
lods
push
mov
nop
and
and
jnp
test
jmp
or
adc
sarb
inc
popf
push
inc
cmp
sbb
cltd
mov
nop
ds
in
mov
adc
mov
mov
and
ret
lea
cmp
push
cmp
call
les
push
adcb
mov
mov
enter
pop
inc
sub
jo
pop
inc
pop
aas
adc
gs
nop
jnp
sarl
pop
xor
movsb
inc
cmp
rcll
iret
cmp
and
pop
sti
test
dec
arpl
bswap
clc
out
leave
rolb
cmp
sbb
push
adcb
xor
sbb
jnp
mov
cld
and
push
scas
xchg
int3
xchg
testb
and
addr16
jp
jae
das
into
pop
enter
fs
jmp
mov
mov
mov
dec
push
sbb
addb
mov
fcomp
mov
lret
incb
push
test
mov
mull
mov
les
adc
mov
aaa
inc
dec
sub
xor
orps
xchg
fwait
mov
ds
aaa
or
sbb
xchg
jle
jnp
lret
aaa
mov
stos
and
lahf
leave
aam
sbb
loope
cmp
mov
mov
test
aaa
movsl
adc
jecxz
push
or
lock
aaa
jp
push
pop
mov
mov
fisubl
xchg
push
mov
mov
in
pop
lcall
aad
aas
xchg
xor
xchg
test
jl
fiaddl
lahf
stos
mov
daa
lahf
xor
movsl
mov
mov
xchg
and
aaa
jns
adc
push
mov
mov
dec
mov
and
xchg
push
je
push
jmp
dec
movsb
ja
and
dec
aaa
pop
mov
call
mov
gs
push
xchg
imul
lret
add
loopne
bnd
jg
pop
dec
test
test
sub
xchg
in
test
cwtl
mov
jle
arpl
push
xlat
dec
popl
rep
sarb
adcl
adc
pop
mov
push
addr16
adc
mov
leave
push
jge
xchg
mov
mov
pop
nop
dec
cmp
je
push
mov
xchg
jp
cld
push
sbb
push
sub
gs
push
lods
push
bound
daa
push
pop
jmp
xchg
sahf
es
xor
push
cmp
lds
jo
dec
aas
mov
in
gs
call
clc
rorl
add
adc
adc
mov
mov
into
or
leave
dec
out
inc
shlb
lahf
stc
pop
mov
enter
and
xorl
add
data16
pushf
mov
repz
cli
cld
push
je
mov
incl
or
push
jne
gs
decb
das
ljmp
shll
dec
lcall
mov
xor
sub
fmuls
inc
inc
pop
xlat
cwtl
idivl
xlat
jo
xchg
jne
mov
out
stos
cld
dec
push
mov
sub
out
sbb
add
loopne
adc
add
add
adc
xchg
data16
sarl
mov
leave
pop
and
push
aas
out
mov
lahf
mov
aad
inc
test
fwait
or
aas
lret
lea
daa
mov
inc
in
call
dec
push
lds
fldl
dec
cmp
xor
shrb
and
jecxz
sub
ss
mov
dec
dec
inc
and
push
rcrl
js
pop
fs
dec
es
pop
xlat
cmp
int
and
mov
cmp
sub
sub
mov
jne
or
pusha
xchg
js
int3
cli
xchg
sarl
dec
inc
cmpl
sub
mov
out
inc
mov
popf
dec
icebp
inc
ret
lcall
idiv
enter
jle
dec
iret
loope
mov
cwtl
push
sarb
pusha
hlt
ret
test
int
dec
arpl
jo
sbb
sbb
push
clc
cmc
dec
rcrb
cli
jne
roll
jp
sahf
sahf
mov
add
sahf
jnp
scas
adc
movsb
repnz
pop
and
mov
and
shl
or
xor
adc
fistpl
int3
mov
ss
aas
mov
dec
mov
int
mov
and
lahf
movl
jb,pt
adc
push
int
cwtl
insl
test
cmpl
pop
or
xchg
lock
out
mov
dec
xlat
lea
fisubrs
loopne
in
xchg
jl
jo
xorb
lock
dec
mov
cmpsb
cmp
leave
ficompl
sbb
jbe
ja
xor
pop
mov
into
hlt
idivb
aad
addr16
and
aas
insl
jle
fstpl
xor
test
mov
scas
sbb
xchg
push
fsubl
bound
sub
mov
shll
jl
fnstenv
xor
and
faddp
jo
outsl
pop
jns
test
cmpl
mov
out
dec
fbld
in
addr16
adc
xor
inc
xlat
repnz
test
jge
dec
bound
fs
aam
mov
mov
mov
push
inc
inc
push
mov
sbb
clc
sbb
popf
nop
xor
pop
rcl
push
mov
aam
adc
dec
movsb
repz
add
pop
and
dec
out
xchg
pop
lcall
in
sti
addl
ja
sti
adc
jl
xchg
out
std
pop
cmp
inc
dec
cmp
mov
jno
sub
lea
jb
lret
sarl
andb
fxch
jbe
lret
add
lahf
push
iret
addr16
into
and
xor
or
fsubrs
pop
xchg
or
scas
mov
xor
adc
loopne
pop
adc
inc
imul
sahf
mov
jecxz
pop
test
fdivl
pop
sbb
or
icebp
lret
and
push
ja
out
jbe
jmp
enter
les
cmp
arpl
out
add
mov
pop
std
adc
inc
aaa
xchg
jp
test
add
test
aam
cwtl
fucom
loop
mov
adc
mov
ljmp
insl
push
je
out
cmpsl
or
xchg
lods
mov
sub
inc
imul
in
jb
fmuls
jecxz
add
xchg
mov
pop
mov
popa
icebp
mov
xlat
mov
push
imul
shlb
insb
mov
std
mov
cwtl
adc
lahf
mov
inc
jl
jb
jmp
sub
enter
insl
arpl
xchg
xor
ds
fwait
jo
loope
ret
mov
add
in
jns
adc
cmc
xchg
fisubs
arpl
xor
cwtl
push
xchg
sub
pop
lret
adc
imul
and
jae
pop
sub
cmpb
sbb
nop
xlat
fidivs
pop
popa
push
pop
and
xlat
js
dec
inc
push
aaa
idivb
and
cmp
pop
ljmp
cli
stc
jb
jne
pusha
sarb
xchg
jae
movsb
adc
pop
nop
xchg
jecxz
xchg
jb
pop
sbb
xchg
insb
icebp
orl
out
add
mov
sbb
push
arpl
data16
jo
add
jb
cmpsb
push
sbb
insb
push
sarl
adc
aam
mov
adc
fwait
rclb
mov
repz
lret
dec
push
push
mov
mov
push
inc
mov
push
sub
outsb
cmpsb
dec
cmp
fsts
dec
fdivrl
mov
enter
jbe
les
loope
test
mov
sbb
imul
nop
pushf
cs
jp
mov
lods
mov
or
mov
pop
iret
inc
test
mov
outsb
sahf
mov
clc
rorb
jmp
mov
fstl
fwait
cmpsb
shrb
xchg
push
cmc
xor
rcl
mov
and
and
insl
sbb
dec
popa
or
dec
or
mov
lret
and
jg
fdivrl
and
mov
push
mov
mov
sbb
mov
xchg
mov
jge
loope
ret
lods
sub
push
cmp
cli
and
pop
xchg
stos
inc
mull
imul
scas
mov
pop
imul
in
push
mov
in
jbe
arpl
lods
push
xchg
aad
cld
call
mov
and
mov
add
inc
cmp
mov
addr16
pop
test
or
pop
xor
and
dec
clc
scas
fldl
call
push
imul
xchg
lods
in
mov
movsl
lret
in
xor
push
pop
xchg
call
push
cli
dec
inc
add
mov
out
sti
dec
jnp
inc
insb
outsl
lods
inc
mov
mov
sbb
in
bound
push
pushf
xchg
in
incb
sbbb
mov
cltd
out
push
pop
pop
xor
insb
push
pop
clc
test
add
dec
pop
fstps
push
addb
xor
in
push
push
faddl
push
sbb
popa
mov
pop
mov
xor
shlb
xor
cmp
mulb
dec
test
ljmp
add
aaa
daa
test
mov
xlat
jg
pop
fs
fcomi
cli
outsb
cmp
fs
xor
incb
adc
push
pop
dec
and
mov
loopne
xor
mov
out
inc
rcrb
popf
add
lahf
pop
in
mov
shll
xor
enter
lock
add
fcmovbe
mov
or
jle
ficomps
popf
stos
cmp
and
les
mov
ret
cmp
in
pop
test
mov
inc
mov
pop
je
decb
dec
xchg
loop
sub
and
lcall
into
test
sub
add
imul
lock
mov
jmp
aad
adc
jb
mov
fcmovnu
pop
mov
lcall
scas
xchg
sub
mov
xor
int3
test
stos
push
inc
inc
inc
jb
inc
in
inc
fwait
xchg
add
loopne
dec
push
inc
sub
lock
push
cmp
inc
add
inc
loope
addr16
mov
or
push
mov
shlb
dec
add
nop
mov
mov
mov
jmp
and
jle
pop
sbb
dec
out
xor
mov
aad
xchg
lods
mov
test
stos
inc
sub
in
jno
popa
stos
mov
gs
jb
xrelease
mov
loopne
cltd
rcr
push
adcl
pop
outsl
xor
adc
inc
stos
aam
mov
int
cmp
bswap
insl
dec
test
sbb
repz
cmp
sub
retw
arpl
jb
and
es
push
scas
push
sub
inc
insb
mov
xchg
push
test
pop
jae
dec
outsb
adc
mov
and
fistl
lods
lods
lds
adc
mov
inc
push
test
jl
xor
aaa
pusha
pushf
sbb
aaa
nop
testl
rcll
sub
mov
lcall
enter
adc
mov
sub
mov
xchg
jb
lahf
scas
fwait
jle
jmp
xchg
mov
mov
out
jne
sbb
adc
add
dec
xor
sub
jg
lock
icebp
jecxz
pop
sub
mov
push
in
daa
scas
pop
cmp
push
cltd
push
ss
pop
add
adc
scas
psubsw
xchg
inc
add
movsl
lds
shlb
lods
push
and
sti
sub
pop
inc
cmc
mov
es
testb
movsb
insb
cwtl
jp
jle
add
inc
shrb
leave
shlb
arpl
adc
mov
inc
jle
repnz
insb
inc
lods
lods
mov
shl
add
dec
jne
mov
mov
and
test
mov
mov
pusha
push
jmp
mov
out
fstl
insl
and
sub
fs
sub
mov
call
jg
notl
stos
pop
popa
xlat
and
xor
pop
movsl
lods
enter
negl
mov
cltd
ljmp
mov
je
aad
push
push
fdivl
pop
jp
stos
out
dec
mov
cmpsl
pop
sbb
mov
mov
cltd
cmp
lcall
int
mov
and
ret
xchg
jge
mov
fisubrs
ficoms
jl
rolb
mov
in
jne
mov
cs
test
out
js
bound
cmpsb
adc
jno
pop
adc
out
cmp
cmp
or
jnp
rorl
push
jl
mov
repnz
pop
and
mov
ret
movsb
addr16
adc
jg
adc
in
jmp
pop
mov
test
test
sahf
out
add
and
mov
sahf
mov
data16
imul
mov
push
mov
leave
xchg
push
in
les
cmp
cmp
pusha
mov
arpl
andb
or
loopne
or
iret
into
sbb
dec
inc
icebp
dec
roll
and
stos
dec
repnz
neg
stc
add
negl
xor
sbb
push
cltd
stc
cmpsb
cmp
addr16
sub
or
xorl
pusha
std
dec
adc
push
jecxz
addr16
push
sub
stc
out
jno
push
fwait
sbb
lds
hlt
les
adc
mov
lods
lret
pop
xchg
cli
sub
loope
pop
inc
xor
mov
in
sbb
inc
aam
jp
cmp
movsb
adc
fwait
aad
push
ja
xor
in
add
adc
dec
ficoml
push
ss
dec
sbb
pop
pusha
rclb
outsl
repz
pop
inc
in
dec
loope
adc
shrl
jbe
mov
xor
dec
adc
push
addl
inc
popf
inc
push
cmpsl
or
add
cmc
xor
pushf
rcrb
pop
add
sub
pop
mov
mov
adc
mov
das
popf
mov
jmp
dec
mov
test
ret
movsb
fildl
fisttpll
push
sti
push
imul
ljmp
leave
mov
pop
push
fcoml
xchg
jns
dec
addr16
dec
fnstcw
or
dec
mov
shrl
inc
mov
mov
cs
add
je
pop
clc
scas
stos
jmp
fs
pop
mov
arpl
mulb
or
push
pop
addr16
mov
addr16
adc
add
fisubrs
loope
js
sub
pop
jno
push
adc
iret
jbe
and
lret
bound
xchg
bswap
insb
int
pop
mov
adc
or
jp
or
push
xchg
hlt
andb
stc
out
repz
sbb
jmp
dec
inc
orb
out
jbe
jle
jl
js
cmp
mov
addb
pop
lea
sub
and
push
push
sti
mov
push
pushl
mov
sbb
je
or
jge
pushf
ljmp
jns
sub
sub
xchg
pop
sarl
negl
popf
cmpsl
int
xor
sub
sarl
xlat
pop
arpl
imul
rcrl
fdivrl
jl
mov
add
enter
rolb
hlt
pop
test
add
mov
push
lea
pop
ss
cmp
mov
ret
jmp
or
push
ds
jbe
int3
adc
nop
ljmp
repz
mov
sahf
shl
sub
sbb
mov
addr16
pop
xlat
loope
push
les
jnp
aas
and
xchg
cmp
out
add
or
dec
add
imul
out
pop
adc
scas
jno
iret
push
les
or
or
loop
xor
jno
fsubrl
pop
clc
pop
push
jecxz
xor
call
or
mov
pop
lcall
inc
push
aam
fldl
inc
or
mov
xchg
out
xlat
adc
lods
test
in
cmp
sub
sbb
mov
dec
pushf
xorl
inc
jmp
aas
jnp
loope
mov
jo
mull
adc
fildll
imul
xchg
sub
push
push
dec
dec
mov
lea
js
in
push
fbstp
push
stc
fwait
lahf
add
mov
gs
push
addr16
mov
adc
sub
pop
das
mov
dec
or
jne
push
sti
cld
insl
xchg
mov
mov
mov
cltd
and
sti
loope
scas
insl
frstor
hlt
lret
inc
aaa
sar
fistpll
cmp
decb
sub
enter
sbb
je
push
dec
dec
sbb
lds
roll
jl
cld
pop
movb
mov
decb
leave
jbe
sar
sarb
push
dec
cmp
push
adc
data16
xchg
loop
imul
decl
stos
loopne
fdivl
xor
xchg
rcl
mov
in
shlb
int
fwait
pop
fsubrl
fidivl
dec
jo
sub
aas
lcall
xor
cmpl
mov
clc
test
inc
outsl
adc
or
idivb
lea
sbb
mulb
ss
sbb
add
in
or
dec
cmpsb
adcl
mov
test
xchg
sbbb
jo
icebp
dec
dec
lods
adc
dec
loop
je
add
xor
das
ret
pusha
loopne
lock
mov
test
fisubl
enter
and
dec
ret
nop
loopne
inc
fildll
pop
pop
std
add
xor
pop
out
imul
mov
add
xor
jl
mov
inc
insb
mov
ljmp
out
and
add
bound
js
es
scas
stos
dec
scas
iret
sub
je
popa
imul
sahf
push
or
pop
jbe
sbbb
mov
push
cmp
and
jae
pop
test
out
adc
xchg
ret
dec
ljmp
sahf
dec
mov
les
xchg
mov
je
fistps
ret
in
gs
in
or
sub
addl
dec
and
repz
push
aaa
imul
mov
sub
push
jmp
mov
scas
mov
mov
shlb
adc
and
xchg
xchg
pop
mov
and
sbb
outsl
test
clc
lods
aaa
rclb
add
mov
xchg
jmp
xchg
icebp
lret
cmp
mov
rol
cmpsl
aaa
lds
jle
xor
dec
pop
cmp
push
test
pop
outsl
and
push
sbb
sbb
jb
cmp
xlat
pop
fnsave
out
or
or
insl
adc
test
mov
xorl
loopne
or
mov
xor
aas
inc
xchg
movsb
mov
xchg
add
lods
cmp
lahf
adc
je
jecxz
repz
xor
inc
jge
jns
mov
orb
push
lea
rcrl
cmp
repz
scas
sbbb
and
sbb
mov
lock
loop
rclb
flds
mov
in
popf
cmp
lods
xchg
in
hlt
push
xchg
sbb
add
in
fisubs
push
cmp
call
inc
ror
cltd
mov
mov
leave
test
mov
add
pop
lahf
sbb
or
and
movb
pop
mov
je
rcrl
inc
pop
lods
in
mov
fiadds
incb
movsb
cmc
stc
fistpll
mov
jmp
mov
adc
mov
fnstcw
aad
push
push
inc
jecxz
jo
sbb
shrb
lods
fildll
xchg
mov
movsw
mov
aam
add
pop
jecxz
jnp
dec
mov
insb
ljmp
mov
cmc
push
mov
fstpt
daa
loopne
xchg
sbb
fs
mov
pop
mov
mov
jp
mov
std
add
lahf
jnp
jmp
movsb
inc
dec
dec
imul
sub
lahf
rclb
add
adc
into
hlt
test
mov
and
sub
mov
sub
data16
in
cmp
ljmp
hlt
ret
or
add
rorb
ret
addr16
adc
std
xchg
mov
aaa
enter
push
or
addr16
popf
out
pushf
in
push
mov
add
inc
dec
scas
mov
mov
sti
aad
ficomps
sub
aaa
setnp
inc
mov
in
data16
and
daa
jo
pop
loopne
test
xor
ljmp
ja
in
es
xor
arpl
int
jo
sub
rol
or
jb
fcoms
out
cld
aad
add
mov
imul
je
xor
or
push
xchg
call
dec
aam
sub
push
lea
inc
mov
adc
pop
or
cltd
pop
jl
mov
pushf
push
out
inc
mov
jns
dec
scas
bound
lret
and
out
inc
jmp
or
imul
repnz
push
jns
repnz
xchg
sub
stc
adc
ficomps
inc
movsb
cmp
xchg
mov
aas
insb
icebp
mov
mov
push
mov
or
add
push
sub
repnz
dec
lcall
mov
pop
cs
xchg
scas
sub
sti
sub
std
xchg
or
inc
aad
jne
scas
setno
aas
sub
mov
sbb
jae
in
fwait
dec
movsl
int3
nop
xlat
add
dec
fistl
ret
push
mov
iret
cmpsb
loop
ja
adc
nop
daa
cwtl
fdivrl
add
mov
out
enter
rcrl
lret
addb
call
xor
mov
clc
pop
dec
mov
sub
iret
jne
and
or
dec
fildl
or
push
popa
scas
fistl
and
lret
xor
add
jp
jecxz
adc
pop
add
js
mov
jmp
pop
lret
mov
jg
movsb
jne
or
ja
dec
adc
inc
push
cmpsb
nop
jne
pop
mov
test
addb
jecxz
cmp
inc
sbb
sbb
cmp
popa
mov
stc
int3
shll
es
sahf
push
push
jl
push
mov
je
inc
jae
sub
push
push
pop
rclb
lock
mov
test
mov
mov
or
nop
pop
mov
push
mulb
sbb
and
nop
xchg
loope
int3
loopne
mov
xor
in
lea
std
jecxz
jge
xor
sub
pop
loope
sub
mov
xchg
ret
mov
add
jle
mov
repz
pop
sbbl
aaa
push
mov
mov
pop
push
hlt
cli
mov
mov
movsb
or
shl
ret
or
roll
mov
fildl
xor
sar
push
cmp
mov
mov
sbb
jg
test
in
negb
xor
mov
cli
jle
jne
sbb
or
or
in
popa
jecxz
adc
sub
mov
cmp
cmp
data16
icebp
addr16
xor
inc
gs
cld
pushf
adc
in
cmp
in
test
movsl
mulb
stc
xchg
mov
jae
adc
pop
in
loope
leave
rol
inc
fnstcw
jne
xor
pop
pop
outsl
jno
scas
imul
int
lcall
pop
shl
aam
stc
sbb
dec
adc
in
push
mov
sub
fwait
ret
imul
ljmp
push
rep
inc
inc
negb
insl
sub
iret
repnz
add
inc
addr16
icebp
jg
jp
mov
stc
fucomi
in
out
push
clc
sbb
mov
dec
or
or
pop
pop
js
rcr
sbb
and
add
out
cmc
pusha
cld
sbb
clc
adc
into
mov
xchg
pop
sub
cmp
push
mov
dec
sahf
jg
cmpb
jb
in
jmp
sub
xor
add
pop
mov
xchg
divl
dec
xor
ret
lcall
push
clc
aaa
cmp
xchg
shl
fwait
xor
push
push
mov
test
xchg
and
test
daa
ljmp
cmp
sub
ret
push
aad
loopne
popf
loopne
cmpsl
daa
push
adc
pop
movsl
lcall
cmp
bound
cs
cs
sub
imul
cmp
push
mov
cmp
jp
stc
lea
in
push
stos
lret
outsl
jb
dec
enter
into
add
dec
mov
and
add
or
mov
xadd
test
insb
cmp
sbb
bsr
loopne
ss
rclb
pop
xchg
xchg
int
out
fstpl
mov
loop
jmp
mov
scas
test
fisubrl
mov
cmpsl
in
mov
or
in
das
push
sbb
cmpsb
loopne
pusha
es
int3
add
aad
gs
mov
sahf
adc
add
or
es
ds
mov
pusha
lods
stos
adc
pop
mov
in
adc
cmpsb
mov
insb
inc
popf
ja
shll
fxch
into
mov
das
push
outsl
xor
mov
cmp
in
mov
lcall
mov
mov
iret
xchg
mov
mov
and
pop
loope
ds
mov
and
sbb
xchg
or
fld
nop
arpl
sbb
and
ja
loopne
mov
in
adc
dec
ja
shll
or
jp
les
jp
aaa
xchg
xor
mov
fs
cmc
mov
and
xor
mov
pushf
pop
cmp
sub
je
mov
gs
cltd
pop
jge
lret
xlat
rclb
mov
jo
outsl
sysret
and
and
pop
sbb
mov
ljmp
orl
data16
movsb
sti
xchg
mov
int3
ret
clc
mov
push
dec
xlat
aaa
fisubrl
add
lock
enter
adc
lret
inc
xor
jbe
addr16
cmp
test
and
cli
je
adc
fisttps
sbb
int
clc
mov
mov
sbb
add
push
sti
std
jno
push
add
pop
sarb
pop
test
stc
out
xchg
test
xor
inc
pop
leave
fnsave
pop
cmp
push
hlt
in
push
pushf
int
cmp
mov
lcall
cwtl
push
add
mov
test
mov
es
fcmovnbe
xchg
dec
push
rolb
push
xchg
sbb
xor
in
push
inc
out
or
fistpll
pop
movsb
cmp
mov
adc
pop
and
popa
jae
es
out
add
dec
xchg
cmp
mov
gs
xor
xor
call
pop
out
mov
jnp
fnstcw
fs
mov
push
mov
in
in
in
jl
ss
insl
adc
sub
ja
mov
push
dec
sbb
adc
xchg
out
add
scas
stc
aas
jp
mov
lret
sti
xchg
xor
cs
nop
push
pushf
push
cld
test
movl
pop
inc
movsb
arpl
sub
pop
aad
ss
int
out
sbb
dec
test
fldt
xchg
or
jecxz
call
fcompl
dec
jne
orl
or
jl
sub
or
sbb
cmp
xchg
mov
adc
and
push
leave
inc
sub
push
mov
dec
jae
sarl
dec
or
sbbl
mov
jp
mov
daa
adc
jle
add
mov
cmp
repz
stos
mov
xchg
push
mov
arpl
push
adc
shll
sub
xchg
dec
iret
lret
xchg
gs
push
sbb
dec
movsl
roll
or
push
inc
pop
jecxz
mov
dec
aam
mov
mov
cmpsb
and
or
lock
mov
lcall
test
push
jmp
or
orb
fstpl
imul
inc
mov
inc
test
adcb
add
loop
add
ss
pop
xchg
pop
mov
sbb
js
imul
dec
sub
sahf
adc
lret
movsb
sub
ss
cli
cltd
loopne
scas
jno
inc
pop
das
xchg
add
lea
mov
iret
inc
sbb
jl
sbb
lods
movsb
mov
lods
xchg
mov
or
inc
lea
popf
stc
test
or
aam
mov
xchg
dec
pop
in
jg
pop
aaa
jbe
xor
mov
sti
imul
mov
push
adc
mov
and
dec
and
xor
ds
out
xchg
mov
cmp
rorb
leave
cmpsl
subl
mov
sarb
mov
xchg
push
dec
jecxz
inc
mov
les
call
int3
pop
xor
movsl
ret
dec
inc
mov
adc
aas
jp
or
or
sbb
jns
pop
sub
jmp
xor
dec
movsl
mov
inc
fwait
icebp
mov
test
imul
pop
add
dec
ljmp
shl
cmp
pop
cwtl
movsb
js
mov
nop
mov
fcoms
out
pop
bnd
push
aad
sbb
test
push
jnp
jb
shl
jp
cmpsl
xchg
rcrb
mov
mov
lods
hlt
sub
cmpsb
mov
inc
xor
push
movsb
jmp
sbb
push
push
sub
xchg
mov
iret
push
adc
mov
arpl
xorl
mov
xchg
subb
mov
mov
fwait
addl
ret
mov
jns
out
dec
sbb
nop
dec
mov
arpl
pop
xor
addl
aaa
rcrb
ret
data16
jmp
aaa
sub
cmpl
inc
adcb
xchg
push
mov
jo
and
xchg
sub
mov
push
xor
jle
inc
adc
idivl
xchg
sbb
data16
ds
lock
call
dec
cmp
adc
cli
lret
jb
jmp
in
leave
int3
push
add
pop
or
mov
iret
and
xchg
lea
xchg
jl
movsb
sbb
test
jecxz
aas
add
lret
mov
and
dec
jb
push
adc
icebp
ror
call
jo
stc
jmp
cmp
pop
ret
xchg
xor
mov
jnp
addl
mov
sti
sete
xchg
lods
xchg
mov
loop
outsb
daa
out
fnstsw
jmp
jg
pop
push
dec
ss
jbe
out
push
adc
mov
dec
mov
leave
pusha
jnp
xor
into
adc
stc
push
mov
fdivrs
sbb
push
adc
xchg
xor
pop
cmp
push
in
std
sahf
dec
dec
pop
sarb
scas
hlt
pop
ljmp
xlat
sub
gs
cli
push
in
lret
mov
pop
pop
enter
aad
adc
cmp
sub
ret
xor
jmp
addr16
sbb
insl
adc
push
ret
ljmp
lret
in
cmp
pop
xchg
mov
mov
je
lods
cmpsl
dec
ds
cltd
inc
andb
lock
push
mov
xchg
dec
pop
loop
imul
das
cltd
pop
sbb
std
jns
mov
jno
dec
push
mov
jmp
add
mov
lret
inc
lods
adc
dec
cmpsb
aad
icebp
adc
push
shlb
ja
andb
mov
jne
sub
inc
and
aad
sub
cmp
mov
dec
add
mov
mov
test
mov
movsb
mov
add
out
cmpl
out
mov
xchg
mov
popa
mov
sbb
jb
mov
pop
inc
add
lahf
nop
movsl
xor
in
ret
mov
inc
insl
addb
mov
outsl
cmpb
jne
aas
pop
in
shl
insl
jns
ljmp
decl
sahf
lods
pop
jle
std
mov
cmc
and
fistl
shlb
mov
into
mov
les
les
push
pop
gs
mov
dec
rcrl
hlt
jbe
fdivl
dec
test
shlb
add
and
adc
outsb
sbbl
and
sbb
scas
add
mov
mov
mov
or
js
or
mov
push
daa
sbb
aad
cmp
jno
push
sbb
lds
sbb
into
inc
rorl
test
push
pop
jge
xchg
imulb
lea
sti
into
popa
mov
xor
mov
aas
inc
dec
lods
ret
mov
inc
sub
shrl
cmp
adcl
mov
cmpsb
push
inc
sbb
roll
lahf
rep
or
jnp
in
add
or
cmpsl
xchg
dec
push
sti
pop
pop
adc
pop
jb
add
xchg
test
ret
and
in
dec
aam
lret
xlat
add
add
mov
mov
xchg
test
in
dec
gs
pop
add
jae
xlat
push
ffreep
insb
dec
jmp
iret
movaps
repz
insl
cmpsl
int
into
mov
frstor
shrb
pop
xchg
pushf
push
insb
hlt
pop
xchg
cmpb
add
adc
or
lret
jne
add
mov
mov
shll
or
movsl
enter
and
xor
mov
int3
inc
xchg
mov
dec
mov
push
lea
ret
add
clc
xchg
inc
jg
and
sahf
jmp
mov
mov
into
das
cld
ret
jl
pop
pop
lahf
insl
loopne
push
jne
mov
test
in
in
repz
rorb
insb
jge
pop
movsl
pop
nop
stos
sbb
dec
ljmp
icebp
fdivr
xchg
xor
pusha
cli
dec
jp
sbb
fucomi
sub
ss
repz
push
cs
xchg
fwait
ss
pusha
fdivs
inc
xchg
lea
jle
and
mov
dec
into
fnstsw
push
addr16
cmpsb
sbb
xchg
mov
mov
clc
int3
sub
xor
cmpsb
sub
cmp
or
and
xor
push
arpl
mov
daa
mov
in
pop
movsl
push
cwtl
jg
daa
jb
arpl
xor
in
movsb
imul
repnz
add
mov
out
mov
ucomiss
aam
jo
adc
and
cs
jmp
scas
cmpsb
cld
xchg
fbstp
inc
mov
pushf
mov
sbb
aaa
cmp
lock
sti
in
scas
sub
scas
add
mov
pop
cmc
and
cmp
pop
sti
gs
sarb
in
lock
fdiv
inc
sub
push
adc
stc
int3
aaa
mov
add
in
popa
lea
inc
scas
test
data16
fwait
inc
imul
dec
xchg
in
lahf
jnp
mov
and
notl
sahf
mov
pop
fdivs
fmull
sub
imul
mov
sbb
pop
ret
fmuls
fbstp
rclb
fldt
mov
inc
sbb
or
add
dec
inc
scas
mov
cmpl
fadds
sbb
cwtl
lret
call
and
loope
dec
pop
inc
push
mov
sti
imul
or
jl
pusha
clc
sbb
inc
xchg
in
xor
sbb
rclb
adc
inc
ret
pushf
xorl
xor
pop
xchg
cmp
sti
and
mov
les
out
pusha
adc
or
cmp
nop
fs
adc
mov
int
cmpsl
cltd
xlat
fs
pop
pop
lds
mov
pop
stos
or
arpl
arpl
shlb
cld
inc
mov
stos
outsb
cmp
cli
add
mov
rcrl
loop
pop
lret
popa
outsl
push
push
das
mov
mov
push
pop
jle
outsl
rcrb
movsb
inc
aaa
pop
int
jnp
mov
adc
ja
fdivrl
insl
sbb
iret
jecxz
insb
fldcw
pushf
mov
jno
xchg
sub
fwait
push
fninit
sub
xchg
pop
lcall
mov
inc
cmp
mov
out
ja
jns
lahf
pop
out
divb
out
push
neg
xchg
push
xchg
sub
mov
mov
and
mov
int
mov
jns
hlt
loopne
pop
sti
push
mov
push
mov
and
ja
sets
pop
mov
xchg
jns
call
in
test
cld
dec
jae
dec
and
cmc
and
fwait
jmp
sub
aad
xorb
js
adc
sarl
pop
inc
enter
js
dec
xchg
sub
or
xorb
jle
hlt
fcomps
adc
mov
fmull
and
fwait
push
ds
ret
mov
push
jmp
mov
inc
adc
cmp
test
inc
adcb
into
adc
jno
loopne
xchg
or
and
dec
xchg
and
sbb
sahf
rorl
iret
adc
dec
xchg
stos
push
xchg
mov
mov
andl
cmpsb
cmp
push
icebp
sahf
aad
repnz
jg
jp
pop
push
test
scas
addr16
inc
mov
push
push
clc
int
jg
and
mov
movsb
dec
orb
es
push
loop
fdivl
jp
sar
lea
cvtdq2ps
aas
lods
cmp
fisttpl
xchg
xchg
xchg
inc
fidivrs
mov
cmpb
mov
cmp
daa
lret
adc
sub
fmul
dec
dec
cmc
orb
mov
test
push
add
icebp
enter
aas
jle
pop
pushaw
clc
dec
pusha
push
mov
nop
imul
movsl
imul
ret
std
pop
and
rorl
es
lahf
xchg
cmp
inc
std
xchg
shl
ljmp
out
and
shlb
push
dec
popa
lcall
ds
push
fcomi
outsl
mull
mov
shll
adc
add
std
dec
mov
dec
in
cld
inc
pop
outsb
dec
popf
and
mov
std
in
sbb
pop
stc
lahf
jnp
lea
lret
pop
ds
bound
dec
cmp
cld
loop
enter
jecxz
rolb
ds
jb
testb
and
pop
xchg
add
mov
sub
sbb
outsl
or
sub
push
bound
les
cli
jno
add
sub
call
imul
enter
jae
nop
jmp
cmp
popf
movsl
jnp
mov
sahf
popf
pushf
push
add
jle
fnstcw
lea
xchg
shll
mov
and
pop
lods
pop
lret
lods
adc
xlat
inc
fcomps
inc
loopne
xlat
xor
mov
adc
sti
arpl
mov
in
outsl
ret
mov
xchg
mov
fabs
outsb
and
push
or
jmp
jb
scas
fisubl
mov
sarb
lods
xchg
xchg
adcl
popa
arpl
ret
push
mov
fcompl
out
ljmp
xor
mov
lcall
cmpl
inc
jle
inc
lret
adc
xchg
nop
pop
cmpsb
stos
lahf
fsubrl
nop
es
shr
out
out
loopne
enter
sbb
call
xor
fisubs
lcall
in
add
mov
and
xor
push
dec
and
cmp
push
outsb
push
push
xchg
mov
and
lock
jnp
ss
cmp
jns
cltd
fisubrs
lahf
jns
mov
xor
mov
enter
add
enter
es
lods
mov
adc
inc
rol
inc
aam
mov
incb
cmp
mov
adc
xchg
mov
or
and
adc
sbb
lret
sbb
push
xor
loop
insl
mov
mov
lods
dec
cmp
loope
cmp
stos
mov
arpl
cld
xchg
call
adc
test
test
aam
aaa
inc
mov
scas
loop
test
fadds
jp
sahf
cmc
pusha
ja
xchg
leave
fmulp
outsl
in
xor
test
mov
dec
movnti
outsl
push
pushf
xor
daa
stos
jge
fistpll
adc
mov
push
xor
sub
xchg
in
fdivrs
daa
inc
mov
roll
addl
dec
inc
sar
or
stc
arpl
hlt
fisttpll
imul
mov
adc
xchg
pop
inc
lods
inc
pop
out
mov
pop
and
sub
lret
insb
xor
push
les
dec
xchg
push
sub
vmovsd
in
jbe
push
cmpsb
scas
mov
lret
xor
jne
push
cmp
dec
mov
int3
and
pop
mov
fnsave
inc
inc
repz
mov
jp
adc
xor
iret
leave
sub
cmpsl
xor
push
pusha
push
aad
sub
push
push
enter
xor
jo
xchg
mov
xchg
mov
xor
push
imul
jne
cwtl
rcr
dec
fidivrl
cmp
cmp
mov
mov
cmovbe
nop
ljmp
cmp
mov
jmp
inc
add
js
add
pop
jo
shlb
test
adc
out
adc
lods
or
xchg
addr16
ret
add
push
or
mov
ss
aad
mov
mov
addr16
xchg
pop
gs
mov
sub
inc
xchg
add
std
mov
ret
pop
adc
adc
jp
insl
test
hlt
adc
sub
aam
ljmp
and
sub
sahf
xor
imul
jg
jmp
mov
push
push
ds
mov
leave
ljmp
xor
outsl
insl
xchg
test
push
aad
sub
jne
shlb
cmc
xchg
jmp
lea
fildll
popa
mov
add
inc
mov
das
mov
lods
sub
loopne
xchg
icebp
pop
out
leave
cmp
jmp
outsl
adc
pop
sbb
mov
xchg
aad
xor
sbb
jo
ret
xchg
push
out
push
cltd
or
ret
xchg
xchg
div
lret
jl
cwtl
mov
inc
push
mov
inc
fwait
xchg
push
mov
or
and
and
adc
inc
aas
mov
fs
fmuls
sbb
sbb
mov
xor
jecxz
mov
scas
es
fcmovu
arpl
xchg
loop
cmc
add
push
and
stos
daa
jno
mov
sbb
dec
insb
mov
xchg
in
mov
push
jns
jp
cmpsb
add
sarb
mov
mov
imul
ja
push
add
xor
or
and
xlat
mov
dec
fwait
in
pop
mov
adc
xchg
and
pushf
enter
fs
mov
mov
add
add
enter
inc
push
add
pop
scas
ljmp
pop
mov
mov
xchg
cwtl
add
daa
mov
ror
jnp
push
cmp
fisubs
in
xchg
mov
cmp
mov
jmp
sub
mov
jecxz
mov
xor
jp
sahf
insl
mul
fcmovu
pcmpgtb
sbb
pop
xor
inc
pop
test
in
je
stc
mov
jle
mov
mov
repnz
sub
rolb
pusha
dec
push
insb
scas
mov
sbb
aas
mov
mov
xor
aad
out
xchg
xor
sbb
rorb
ret
add
loope
or
xchg
das
ret
fmull
pop
xor
ljmp
or
lock
sbbb
cmp
imul
dec
stc
push
xchg
xchg
mov
pushf
or
add
add
lds
sbb
ljmp
popf
sbb
sub
leave
or
xchg
inc
inc
mov
mov
insb
push
and
sub
insl
cwtl
mov
jge
pop
or
mov
das
pop
xchg
fnstenv
int
or
cmp
scas
movsl
adc
inc
nop
xchg
mov
cld
xchg
xor
sub
adc
mov
stos
bswap
add
dec
and
add
pusha
jae
mov
aad
cli
cmp
cli
sti
cli
dec
xchg
imul
xor
pop
cmp
es
fisubs
test
aaa
das
pop
pop
repz
cli
inc
mov
push
fpatan
xlat
in
mov
ja
pop
les
roll
in
mov
je
mov
cs
fdivrs
jecxz
fcompl
jge
xor
int3
pop
loopne
cli
push
add
jo
fisubrs
jns
aam
jmp
jne
pop
repz
ror
cmp
add
pop
sbb
push
pop
loope
idivb
inc
ja
push
lret
or
cmp
jae
push
or
clc
sub
outsb
test
mov
add
jo
ret
fs
fsubl
jecxz
addb
movsb
jae
outsl
fsubs
xor
shr
dec
mov
pop
movsl
push
scas
sbb
jmp
ret
jno
mov
out
jno
fildll
cs
and
movsb
xor
fcomps
pushf
or
mov
mov
sbb
nop
cwtl
cmpsb
ret
pop
mov
mov
gs
sbb
pop
clc
xor
mov
pop
fsubr
push
rcll
lea
push
push
in
mov
pop
in
inc
and
ret
jmp
or
add
in
mov
mov
les
dec
imul
repnz
jo
data16
jmp
aad
out
dec
dec
mov
hlt
push
xlat
out
adc
fcomi
inc
jle
push
jl
insb
out
mov
out
divb
adc
fnstcw
lfs
sbb
lcall
popf
or
pop
mov
lahf
jbe
jnp
stos
cmp
lock
jo
mov
mov
xor
dec
cltd
cld
or
mov
loopne
rcrb
rcll
les
call
cmp
fwait
dec
fcmovb
ret
adc
xchg
test
adc
insb
jno
iret
dec
mov
mov
push
mov
pop
xchg
add
lods
mov
push
cwtl
inc
cmp
shrl
push
jecxz
scas
popf
jo
popf
in
push
sbb
ret
sub
call
lds
jmp
pusha
push
inc
xchg
fsubs
or
or
lods
mov
sbb
cmp
arpl
mov
loop
jge
cwtl
sahf
xchg
nop
xor
push
ja
sub
imul
imul
shll
lret
xchg
push
lds
xlat
shr
ret
push
mov
lods
rcr
out
out
and
and
jo
jne
or
sub
cmp
cmp
incl
cmpsl
jno
and
jmp
in
mov
mov
xor
scas
js
pop
js
push
scas
insl
jne
sbb
xchg
fildl
mov
mov
fcomps
outsl
fisttpll
ret
aaa
pop
fs
jg
ror
std
or
or
dec
jnp
aas
imul
cmpsb
adc
xchg
out
scas
sub
sub
sbb
jmp
pop
push
jge
ret
sbb
or
jp
jle
daa
scas
pop
sub
xchg
mov
dec
cmc
clc
into
mov
xchg
in
imul
ss
sub
hlt
inc
push
dec
dec
pushf
jo
sbb
sbb
inc
bnd
rcll
dec
repz
lds
clc
xorb
or
inc
les
aad
ds
fimull
xorl
sbb
loop
icebp
jle
adc
imul
or
and
push
dec
sahf
push
repnz
fbld
ret
loope
fbstp
daa
lcall
negb
aam
rorl
sbb
int3
mov
sbb
enter
mov
scas
push
adc
or
mov
push
pop
mov
aad
or
jo
rclb
inc
std
push
cwtl
nop
add
fiadds
pop
jns
addl
ss
or
sbb
xchg
data16
add
jp
jmp
push
mov
and
hlt
movsb
adc
sub
mov
psubsb
test
xlat
push
mov
or
test
out
aad
imul
cwtl
out
and
dec
xchg
adc
xchg
test
pop
call
icebp
mov
adc
push
jb
out
lods
ficoml
ret
nop
mov
mov
pop
pop
xchg
push
dec
inc
xchg
int3
pop
xchg
je
push
dec
loopne
mov
das
jl
insl
and
clc
shlb
xlat
repz
dec
cmp
mov
jg
pushf
dec
loopne
inc
xor
cmc
sbb
xor
xchg
xor
std
scas
sub
rcr
or
lds
xchg
leave
xlat
int3
sbb
xchg
insl
ret
mov
aaa
mov
cmp
es
add
imul
out
inc
flds
xlat
mov
ljmp
lods
xor
lret
mov
pop
jge
mov
sub
jno
adc
sbb
outsb
fwait
dec
fcomps
cmp
lods
in
scas
push
cmp
shll
int3
mov
loop
shr
iret
sti
dec
or
mov
or
push
shlb
into
push
mov
inc
lcall
push
adc
inc
int
jo
xchg
loop
push
das
jns
stos
add
int3
jmp
dec
jle
out
jle
out
insl
cmp
inc
cmp
je
adc
pop
mov
test
inc
fdivrl
icebp
push
rorb
push
xchg
cltd
xchg
mov
push
add
mov
outsb
subb
subb
aam
lahf
xchg
stos
out
bnd
inc
repnz
push
push
add
pop
dec
repnz
xor
and
negb
adcl
cmp
xchg
mov
pushf
mov
fstpl
lods
les
out
push
sbb
or
xor
push
leave
or
fisttpl
adc
jp
fldl
add
xchg
inc
sub
cmp
sub
jnp
push
loopne
movsb
mov
out
outsl
xor
test
fsubrs
jns
mov
icebp
dec
mov
ja
mov
lcall
mov
jbe
add
movsb
or
sbb
jl
cmpsl
fsub
scas
push
push
adc
xor
push
sub
pop
in
imul
pop
aaa
js
fstpl
xor
stos
mov
mul
in
lret
fdiv
push
sbb
and
adc
sub
inc
push
add
mov
mov
icebp
pop
pop
mov
mov
xor
mov
adc
mov
in
mov
sbb
out
push
sbb
icebp
pop
inc
add
out
inc
jge
push
mov
cmc
out
mov
inc
xchg
mov
mov
jb
dec
add
icebp
sbb
dec
test
adc
outsb
in
push
mov
mov
hlt
add
daa
mov
jne
lahf
test
xor
lods
int3
xchg
and
adc
pushf
mov
int3
jle
aad
pop
inc
fbstp
in
iret
cld
and
add
xchg
cld
outsl
sbb
andl
jge
in
xor
es
les
add
push
jo
and
jbe
enter
and
inc
lods
shll
jae
shrb
mov
mov
ljmp
lods
mov
push
mov
dec
pop
shrb
add
stc
pop
add
jbe
pop
shl
jne
repz
sub
sbb
out
mov
adcl
mov
shll
sbb
lods
xchg
sub
add
jo
mov
rcr
ret
adc
jle
arpl
mov
pop
dec
pop
and
clc
jne
xchg
jecxz
insb
icebp
inc
jnp
or
sbbb
ret
add
jge
jle
out
xchg
jle
mov
mov
mov
das
aam
or
pop
shlb
nop
lahf
sbb
push
xchg
mov
mov
pop
jle
inc
sbb
mov
jle
imul
testb
mov
adc
mov
sbb
cltd
sub
or
ror
cmp
shll
dec
xor
andl
xor
pop
jp
jmp
sahf
hlt
sbb
std
dec
mov
jb
mov
out
adc
inc
mov
fstps
mov
scas
adc
int
and
mov
adc
fsubrs
and
pop
fs
adc
push
inc
pop
das
enter
push
mov
sub
inc
hlt
mov
cmp
ret
push
stos
cwtl
jns
add
fisttpl
mov
mov
xorl
mov
lret
xchg
or
sbb
and
pushf
testl
or
outsl
and
dec
inc
xchg
lock
cmp
cmp
repz
xchg
sub
out
xchg
lret
mov
cltd
mov
jbe
mov
shr
cmp
cmp
cwtl
mov
addr16
jmp
lahf
sbb
outsl
ficoms
in
cld
or
xor
or
dec
push
mov
imul
icebp
movsl
xor
inc
pop
push
rorb
push
cmpb
adc
lea
push
or
pavgw
adc
inc
test
cmpsl
xor
mov
xchg
repz
icebp
es
add
mull
je
and
cld
lea
xchg
jo
mov
scas
lea
sbb
jp,pn
adc
outsb
fstpl
sub
sub
lea
sbb
jo
scas
ftst
loope
std
mov
inc
and
jno
in
pop
cmp
or
cmp
lea
push
mov
adc
cmp
inc
in
mov
test
pop
jecxz
movsb
dec
jl
in
rol
fdivrs
shlb
cmp
lds
mov
add
and
rcll
mov
out
mov
sbb
sub
jno
test
test
jge
sti
fucomip
int
pop
inc
rolb
mov
sahf
hlt
push
enter
push
and
stc
lcall
push
mov
mov
mov
dec
out
fcompl
xor
mov
xor
pop
xchg
iret
push
jb
sub
cltd
xor
cmp
push
leave
test
or
cmp
xchg
out
push
xor
or
clc
fidivrs
call
jecxz
adc
jns
mov
xor
mov
int
out
inc
pushf
pusha
add
stc
in
mov
jo
fnstsw
push
inc
out
fstl
test
mov
int3
mov
xor
pusha
enter
dec
or
cmpsl
aad
push
das
mov
adc
cmp
cmc
inc
arpl
movsl
mov
lods
aad
es
in
ss
mov
aas
sbb
pop
pusha
stos
cld
inc
jmp
aam
push
into
pushf
lcall
test
dec
sbb
scas
mov
jmp
dec
call
fwait
add
in
test
dec
js
cmp
fcomp
or
dec
int
push
sub
clc
nop
fiaddl
push
icebp
out
and
inc
dec
xor
movq
sub
mov
out
outsl
es
mov
sahf
mov
out
mov
mov
aas
stos
push
push
dec
sbb
mov
and
aad
stos
shll
dec
push
and
cltd
mov
movb
mov
sbb
mov
sub
pop
sub
insb
mov
or
cmp
inc
stos
repnz
imulb
loop
pushf
ret
adc
repz
lds
and
jb
xor
add
shlb
push
xor
ljmp
ret
imul
lock
mov
push
add
pop
es
pusha
test
outsl
pop
or
bound
addb
testl
xchg
cmp
fstps
mov
xor
push
lds
and
out
push
adc
mov
cli
cld
pop
fs
shrb
aaa
out
xchg
xchg
xchg
aaa
je
push
jb
and
push
xchg
xchg
out
sub
ficoms
inc
xor
addb
push
pop
xchg
jge
dec
jb
repz
push
scas
adc
jmp
dec
mov
adc
inc
scas
clc
adc
adc
pushw
jle
xchg
lcall
dec
or
jp
fs
mov
imul
bnd
or
or
fbstp
sbb
rol
jno
mov
mov
fdivrs
and
xchg
or
push
and
ret
jne
mov
addl
xor
inc
mov
in
les
fisubs
sahf
clc
nop
int3
outsl
scas
inc
iret
pcmpgtb
add
out
sbb
mov
sahf
jl
xchg
xchg
sub
and
mov
adc
jbe
out
fwait
rcr
gs
loope
pop
or
xlat
imul
jns
rcrb
in
or
cmpsb
sar
jns
cmp
pop
and
sbb
stc
cmp
stc
ror
dec
or
or
inc
lcall
movsb
xor
sub
imul
dec
xor
cmp
test
incb
mov
adc
push
push
or
sti
cmp
xor
pop
mov
in
rcll
iret
push
or
sub
mov
stc
repz
pop
adc
popf
jnp
and
jo
int3
jae
xchg
or
outsb
das
fsubrp
fdivrs
add
xchg
jns
dec
sub
pop
scas
mov
inc
leave
clc
mov
addl
jns
or
xchg
add
std
stos
rclb
loopne
mov
mov
xchg
xchg
xchg
leave
lahf
jle
and
in
push
sub
jo
fmull
cwtl
popf
cmp
or
es
dec
arpl
and
int3
inc
xchg
mov
pop
add
jmp
mov
in
and
pop
cmpsb
pop
lods
mov
xchg
pop
cltd
enter
inc
mov
daa
shrb
mov
xor
cld
mov
push
mov
mov
sti
je
cmc
cmp
in
mov
out
cmp
out
and
bound
xchg
popa
xor
mov
jp
mov
adc
pushf
add
das
xchg
loop
loopne
scas
xchg
mov
mov
aam
mov
mov
out
nop
pop
fwait
rorb
lea
pop
adc
cmp
imul
mov
loope
js
lock
popf
mov
mov
mov
and
cmp
movb
test
cld
repz
mov
out
lahf
fstp
mov
notl
push
mov
fists
inc
dec
popa
aas
repz
mov
dec
cmp
popa
loope
mov
dec
xchg
xchg
and
test
add
jg
jne
enter
stos
andl
push
fdivl
test
out
sbb
sahf
push
mull
push
adc
repnz
xlat
adc
daa
dec
jno
stos
push
sbbb
mov
and
lahf
sbb
or
sbb
subb
lret
xchg
lahf
dec
bound
mov
aas
push
loopne
cwtl
xor
lods
push
mov
aaa
cmc
ljmp
nop
inc
lock
dec
lods
dec
push
mov
icebp
sbbl
dec
dec
outsl
test
xchg
jmp
outsl
sub
mov
lds
push
mov
xor
les
fisubl
mov
data16
push
adc
in
push
sbb
addb
push
sti
cli
je
rcl
push
and
xchg
add
iret
mov
push
jo
sub
cmp
sub
dec
mov
jo
pop
icebp
sbb
pushl
arpl
mov
pop
fwait
sub
divb
sbb
hlt
test
jbe
push
pop
add
sbb
rcll
les
adc
mov
xchg
mov
or
pop
jnp
sbb
add
and
push
xor
xchg
jle
push
dec
aam
dec
das
mov
add
add
sub
es
push
div
call
xchg
movsb
fld1
pop
or
sbb
stos
pushf
push
pop
mov
xchg
cld
or
es
xor
scas
inc
test
pusha
sub
jb
jp
fsubl
aaa
jmp
xchg
pop
jnp
wrmsr
push
cmp
mov
jp
fnstcw
cmp
lock
xchg
cmp
sbb
mov
xor
bound
xlat
test
push
pop
and
add
mov
and
les
mov
pop
and
scas
pop
add
orb
push
shll
pusha
leave
shll
mov
or
cmpsl
mov
popa
mov
pop
adc
add
loope
xchg
fisttpl
mov
push
fbld
push
pop
mov
cmp
sub
hlt
incl
sub
jno
push
aad
or
rorl
mov
idiv
lcall
mov
adc
inc
icebp
lods
popa
xor
dec
add
andl
nop
xchg
mov
mov
pop
cmp
mov
dec
pop
sti
dec
insb
inc
stc
outsb
mov
loop
loopne
mov
inc
adc
xchg
in
lcall
add
stos
cli
test
xorl
xor
outsb
cs
cwtl
lods
rorl
les
mov
add
jp
xadd
cli
ja
out
push
out
jle
push
js
ljmp
or
enter
bound
daa
cmp
cmp
xor
in
xor
std
or
push
jbe
mov
pop
enter
rcl
sahf
adc
repz
jmp
mov
inc
aaa
sahf
sub
fists
lret
addr16
adc
adc
fists
in
add
or
xor
fnstcw
loope
xor
leave
pop
and
xor
sti
mov
mov
ja
and
rcl
xor
test
pop
shrl
int
or
popf
pop
push
adc
ss
inc
xchg
lds
cmp
adcb
mov
mov
loop
add
ret
popf
mov
sahf
jmp
fcmovnbe
popf
mov
movsb
repz
cmp
cld
das
jae
jae
fistl
stos
and
ljmp
sbb
int3
scas
xchg
pop
or
repnz
icebp
stos
loop
sahf
push
mov
stc
daa
cmp
mov
inc
mov
lds
push
lods
testb
xor
mov
into
jge
dec
push
rcrl
push
fwait
xor
sar
in
movsl
mov
outsb
pop
into
mov
insl
pop
jbe
jecxz
push
xlat
shrl
popf
ret
out
dec
push
add
sub
aam
adc
outsb
push
cli
inc
xor
and
xchg
lock
mov
mov
mov
imul
data16
inc
pushf
add
jb
leave
lods
mov
cmp
insb
sub
mov
adc
push
loopne
rcll
add
pop
xchg
xchg
jmp
adc
jno
test
sti
mov
pop
adc
mov
stos
dec
pusha
shlb
adc
mov
mov
inc
cmp
cld
movsb
rcr
sahf
insl
into
pop
ficomps
and
aam
sub
in
lods
xchg
fbstp
push
enter
shl
ret
sub
fisubrs
pop
push
dec
cltd
jne
pop
lret
inc
cmpsb
hlt
mov
inc
dec
stos
dec
pop
mov
mov
in
xor
pop
push
int3
lods
pop
outsl
call
loop
jb
pop
adc
fmuls
mov
mov
fistpl
sbb
or
outsl
insb
xor
jnp
xchg
mov
adc
ss
jmp
out
cmp
loop
jp
xor
cli
push
xor
xchg
pushf
or
xchg
cmpsb
add
mul
imul
fmull
mulb
jne
in
loopne
cmp
inc
xchg
push
bound
lcall
push
mov
sbb
in
mov
test
movsl
aad
jge
insl
jmp
cli
mov
xchg
lret
dec
lcall
shlb
mov
pop
add
pop
lret
and
ljmp
loop
js
xorb
mov
vmread
mov
fisttpl
mov
cmp
incl
xor
mov
int3
add
push
pop
mov
inc
jns
lds
sarl
hlt
mov
push
sub
lds
xor
test
in
test
ret
sbb
mov
and
bound
sub
stos
and
movsl
shll
push
orb
cmp
cmp
dec
sbb
out
outsb
das
jbe
leave
in
idiv
sbb
das
ljmp
push
xor
dec
ficoms
popa
xchg
lods
pusha
dec
mov
mov
mov
iret
mov
xchg
sahf
xor
ds
rolb
xlat
or
pop
insl
daa
pop
mov
popa
shll
dec
stos
cmpsl
mov
mov
adc
cwtl
jg
cmp
dec
insl
movsb
rorb
adc
jp
js
and
and
sti
mov
xchg
add
or
pusha
push
aam
ljmp
out
xchg
popf
stos
pop
cs
dec
insl
data16
dec
je
sub
int3
jno
dec
mov
imul
shlb
mov
shrl
jg
xchg
ret
sbb
loope
inc
add
mov
and
dec
push
or
lock
std
dec
outsb
mov
pop
insl
ds
jae
test
dec
pop
or
fisttps
sub
adc
xchg
jp
mov
inc
and
xchg
mov
ljmp
cmc
fs
sub
mov
mov
arpl
popf
test
repnz
xlat
cli
jl
ja
neg
cld
hlt
inc
ljmp
ja
shrl
test
mov
dec
mov
leave
xchg
in
std
out
adc
mov
ja
jae
jno
mov
in
mov
sbb
aam
pushw
ja
idivl
push
pop
mov
and
adc
insb
or
or
xor
jne
insl
adc
ljmp
in
mov
daa
loopne
shll
dec
repnz
das
in
pop
cmpsl
mov
cmp
mov
xor
cmp
scas
mov
inc
adcb
push
pushf
addr16
pop
pusha
repz
pop
lcall
pushf
jnp
lahf
mov
sub
inc
jns
jp,pt
and
test
fnstenv
rsm
arpl
and
jns
jns
dec
push
jg
ljmp
pusha
call
and
cmp
add
lret
daa
mov
sub
xchg
shlb
roll
inc
jae
cmp
cmpl
aam
push
mov
pop
push
clc
arpl
dec
xor
and
mov
call
sarl
or
les
xor
xchg
int
les
mov
cmp
jl
xchg
xchg
mov
sbb
jle
dec
pop
ss
outsb
outsl
inc
daa
stos
cmp
lret
enter
and
cli
int
out
pop
jno
dec
dec
lret
or
test
cmpsl
mov
stos
push
in
cltd
loop
xchg
pop
inc
and
jns
mov
cmpsl
int3
mov
leave
and
scas
outsb
lahf
or
repz
dec
adc
jg
fscale
mov
lds
repnz
adc
cld
cmp
xor
sbb
cmp
pcmpeqb
lock
fsubr
dec
sbb
in
sbb
fs
push
or
push
icebp
push
stos
shlb
imul
orl
xchg
dec
out
dec
iret
aas
push
inc
dec
outsl
jmp
sub
sbb
mov
scas
mov
mov
push
fistpll
cmp
lea
or
pop
test
xchg
inc
int3
jne
idiv
in
and
fcoms
in
xor
mov
in
mov
std
adc
mov
pop
pop
or
aam
xchg
fimull
pop
fldenv
mov
or
mov
pop
lahf
inc
sub
imul
test
lret
inc
cmp
push
xor
xor
outsl
rcl
fldenv
add
xor
out
xchg
popf
lods
jle,pn
in
call
hlt
and
pusha
in
xor
mov
les
jle
sub
dec
cli
mov
push
xchg
clc
dec
mov
jb
mov
stos
pop
inc
int3
xor
push
xchg
sbb
es
sbb
daa
mov
in
fistl
sub
fbld
punpcklbw
pop
xor
ds
sub
popa
mov
ss
push
daa
pop
call
adc
test
jno
rclb
mov
jbe
xchg
or
adc
jecxz
adc
das
push
cltd
ret
fcoms
fbld
sub
nop
cmpsb
pushf
mov
rorl
inc
or
stos
lret
mov
pop
shrl
andl
ret
aas
test
sbb
dec
imul
sub
sub
xor
mov
mov
testb
xor
xchg
orb
sbb
fisttpll
mov
test
repnz
pop
push
repnz
cmp
popf
fldl
adc
cld
cld
stc
cmp
push
lret
pop
jg
or
loopne
fildl
xor
imulb
push
sar
or
adcb
xlat
xor
pop
repz
test
psubusw
dec
and
cld
notb
out
mov
insb
pop
mov
inc
sub
inc
stc
lahf
push
and
xchg
xchg
int3
sub
push
shlb
jnp
sub
rclb
stos
jns
stos
add
push
dec
pop
jbe
mov
cli
dec
test
dec
nop
ret
into
aaa
inc
and
daa
push
out
push
pop
je
test
outsl
sub
add
mov
cli
xchg
outsl
movsb
int
rol
pop
and
arpl
cmpsb
cmp
pop
daa
ficompl
sub
mov
adc
sahf
mov
fbstp
hlt
mov
shr
out
inc
or
lock
mov
in
test
ret
icebp
test
lock
inc
mov
mov
adc
roll
push
test
je
inc
jmp
and
or
andl
and
fbstp
sbb
cld
xor
jp
test
adc
mov
addb
clc
in
fldcw
data16
cmpsb
movb
pop
xchg
test
adc
xchg
cmp
fstpt
aam
mov
dec
or
leave
dec
or
inc
mov
je
jb
ret
or
pushf
les
jle
xor
mov
mov
pop
int
xchg
sub
mov
testb
je
jmp
scas
mov
lret
ds
pushf
add
pusha
mov
mov
mov
mov
dec
xchg
mov
mov
cmp
fimuls
sbb
push
xlat
push
or
xlat
cvttps2pi
push
xchg
stos
packsswb
xchg
out
mov
cmp
xchg
scas
test
jl
lds
push
int3
lret
stos
clc
cmp
jp
cmp
gs
mov
in
test
loopne
test
sbb
data16
fiaddl
insl
pop
aad
cmp
movsl
xchg
jmp
adc
add
cmpsl
pusha
stos
jg
adc
js
mov
out
add
hlt
cs
mov
movsl
pmaxsw
cmp
sti
imul
imul
vcvtsi2ssl
mov
sbb
adc
popf
jns
loope
shll
sbb
or
in
roll
inc
sub
fsub
shl
jbe
add
add
cmp
sbb
pushf
gs
xchg
inc
mov
repz
sahf
cmp
jnp
movsb
pop
fistpll
test
or
stos
repnz
stos
ret
cli
aaa
mov
mov
jmp
adc
out
fstpt
xchg
mov
jl
jecxz
std
sahf
rcrb
pop
sub
xlat
dec
outsl
add
sbb
fldcw
dec
ja
pop
int3
jbe
xchg
imul
mov
ja
pop
decb
test
mov
les
mov
and
xchg
insb
sbb
jbe
fsubrs
or
pop
inc
sbb
push
nop
in
lret
push
sub
lods
es
adc
call
cwtl
mov
pop
lods
shlb
mov
inc
mov
adc
inc
sahf
mov
je
cmc
xor
jmp
fmull
sbb
adc
jp
push
cwtl
roll
in
xor
jge
rclb
and
xchg
xchg
mov
sub
add
xor
inc
es
stc
xor
add
jmp
cli
aaa
int3
push
pop
xchg
pushl
loopne
xchg
into
jno
jg
icebp
sbb
inc
xchg
fsts
push
subb
jmp
xchg
mov
or
xor
paddsw
and
aaa
shrb
xchg
mov
adc
cmp
sub
adc
or
jle
cmpb
jge
jb
ss
rorl
stos
dec
mov
fwait
pop
and
mov
push
iret
dec
xor
ja
int
int3
lods
and
fnsave
cmp
in
or
and
jmp
pop
ud0
jmp
or
shrl
fs
mov
mov
and
dec
xor
xchg
mov
inc
push
adc
leave
scas
lcall
push
sub
adc
addr16
push
mov
lock
xchg
cmpsb
pop
xor
sbb
push
fs
adc
cmp
call
inc
cmc
cmc
bsf
loop
iret
fcmovbe
dec
scas
js
inc
popf
popa
movsl
and
dec
mov
daa
and
sbb
jo
push
adc
jge
add
add
mov
mov
loopne
xchg
cmpsb
nop
daa
ret
jecxz
insl
inc
sub
lcall
jmp
lds
in
rorl
mov
gs
or
enter
int3
add
mov
leave
je
clc
adc
dec
inc
dec
jno
mov
ret
out
cltd
adcb
dec
popa
cmpsl
push
ljmp
sbb
sbb
sub
xchg
pop
sub
dec
jecxz
popa
and
sbb
pop
sbb
push
lock
daa
rclb
and
in
sbb
int
push
push
xchg
aaa
outsl
mov
hlt
mov
jns
xor
call
push
cmp
lods
adc
add
in
xlat
xor
jae
out
and
sub
sbb
outsb
sub
leave
jae
mov
push
jae
push
or
imul
in
xchg
aad
mov
dec
mov
jl
lea
push
dec
mov
iret
cli
std
loopne
and
bnd
push
lds
fisubrs
sbb
in
dec
in
push
movlps
xor
outsb
dec
sub
xlat
pop
bswap
inc
jae
nop
aad
hlt
movl
xchg
mov
adc
test
je
cmp
jb
fiadds
mov
push
pop
mov
inc
sbb
jno
leave
jbe
js
sub
pushf
xor
dec
mov
das
lods
subl
fidivl
adc
push
shlb
add
add
pop
cld
cli
mov
inc
testl
and
popf
arpl
cmp
push
xchg
xchg
jg
push
dec
push
mov
and
add
out
lea
aad
scas
xchg
xchg
mov
and
mov
and
xchg
mul
ss
add
imul
adc
or
mov
xchg
notb
cmp
addr16
pop
xchg
jnp
mov
sub
adc
enter
shll
insb
fldcw
ja
or
stc
movsl
ja
sbb
jle
movsl
adc
and
ret
decb
mov
mov
push
add
in
pop
lret
out
aaa
inc
cli
das
jnp
outsl
and
push
int
dec
push
or
jle
out
add
shlb
cmp
lock
daa
stc
and
push
repz
ss
sbb
mov
into
test
mov
xchg
ljmp
and
clc
ljmp
xchg
stos
pop
xchg
hlt
adc
xchg
ja
insl
mov
inc
flds
stos
cmpb
je
shll
push
xor
sbbb
subl
into
add
xchg
addr16
xor
jl
fwait
stos
xor
xchg
das
lret
in
cli
es
stos
push
mov
push
pop
sub
dec
std
cmpl
mov
push
outsl
fcompl
aad
iret
in
push
ljmp
add
sbb
mov
jg
iret
in
sub
adc
jo
and
int3
mov
stc
adc
cld
jle
les
loopne
sub
jo
jmp
scas
adc
addr16
mov
adc
stc
jno
test
or
scas
int
lds
inc
ror
dec
cmp
outsb
popf
data16
in
imul
sbb
jnp
sub
xchg
mov
mov
ficoms
cmp
rorb
lret
sbb
loopne
mov
inc
or
pop
xchg
or
or
mov
call
lock
movsl
mov
push
out
jge
mov
and
aad
mov
cltd
in
add
sbb
sti
and
mov
jno
or
pop
xchg
aas
mov
sub
mov
mov
mov
mov
test
mov
aad
push
jnp
lods
aam
jbe
cmp
xchg
and
bound
pop
add
aad
subb
or
sub
jbe
add
push
orb
outsl
dec
jl
mov
sub
js
or
add
cmp
fdivs
leave
dec
mulb
mov
dec
push
cmp
dec
and
mov
pushw
mov
pusha
xor
and
inc
in
test
sbb
pop
das
xchg
cmp
mov
outsb
les
lock
or
orl
pop
lahf
mov
test
xchg
ffree
fistpl
iret
mov
fistl
mov
sbb
aam
jb
mov
popf
mov
cmp
mov
sub
jmp
aam
fwait
push
add
mov
add
cmp
xchg
inc
jg
push
movl
mov
pushf
sbb
xor
cs
loop
lea
xor
xchg
out
add
mov
cmpsl
mov
add
stos
pusha
xor
fwait
repz
sbb
stc
lcall
pop
pop
addb
xchg
dec
add
inc
xor
leave
adc
push
mov
add
aas
ret
xor
adc
aas
xchg
adc
adc
jo
push
push
mov
adc
outsb
inc
add
fwait
mov
jb
outsb
xor
and
js
cwtl
push
adc
xor
mov
push
lds
or
cmp
lds
mov
cmc
xlat
mov
fnstcw
loopne
std
jae
xchg
add
sti
popa
sbb
sub
das
scas
or
adc
adc
sub
pop
xchg
add
rorl
mov
adc
sbb
dec
adc
ja
inc
cli
mov
mov
aas
in
testl
pop
dec
adc
dec
jne
rcrl
pop
add
fstps
push
arpl
xor
mov
mov
add
stos
mov
je
fadds
dec
cmp
aam
aaa
pop
jge
adc
fidivl
imul
dec
dec
add
fsubrs
test
sbb
fwait
scas
lods
jbe
push
sub
sahf
xchg
ss
mov
dec
dec
pop
imul
scas
outsl
lods
xchg
push
or
xchg
test
outsb
cmp
inc
aas
js
dec
aad
adc
lret
pop
dec
push
dec
in
jno
inc
push
xor
mull
push
fiadds
leave
inc
add
cld
inc
popa
mov
lods
cmp
xlat
fwait
leave
mov
add
pop
mov
les
je
mov
inc
lods
adc
aam
repnz
jbe
and
add
imul
dec
dec
pusha
push
jg
arpl
push
aas
jge
inc
cmp
adcb
dec
icebp
cltd
jne
es
imul
lds
xor
push
cs
push
repz
fiaddl
push
mov
lcall
sbb
sti
dec
fcoms
lret
sbb
je
stos
icebp
jne
push
js
mov
add
nop
js
dec
push
les
outsb
jle
and
and
call
fbld
push
in
dec
pop
adc
jp,pn
aaa
inc
push
xchg
shlb
push
mov
mov
xchg
insl
popf
lds
cmp
in
adc
xchg
mov
push
cld
popf
fistpll
mov
xlat
stos
loope
jae
pop
dec
shlb
dec
mov
sarb
adc
xor
xchg
sti
das
icebp
jge
js
fninit
pop
add
stos
frstor
adc
lods
decl
fimull
in
adc
and
cmp
pop
add
stc
mov
loope
cmp
xor
ret
push
sub
xorb
and
pop
ret
mov
sbb
movsl
arpl
sub
out
fldt
xchg
mov
in
pop
xor
mov
sub
add
pop
sti
mov
xchg
leave
jmp
inc
cmp
test
outsl
mov
cli
popf
sbb
sub
jecxz
push
sub
push
adc
sub
mov
add
mov
cmpsb
xchg
jmp
push
jo
jle
xchg
in
out
mov
mov
fisubs
mov
inc
fwait
dec
cmp
mov
lock
add
jmp
iret
inc
sub
dec
les
cwtl
and
pop
inc
xor
ficoms
mov
xchg
and
aad
xchg
lods
mov
ds
leave
outsl
les
push
popa
mov
jmp
and
ljmp
out
ret
hlt
out
add
sub
add
jp
shlw
mov
rorb
mov
addr16
in
insb
pushf
pop
mov
add
addr16
dec
dec
iret
out
or
mov
xchg
xchg
pop
lret
popl
aad
inc
test
and
and
jecxz
xchg
rclb
in
stos
scas
pop
mov
aas
jg
in
sbb
xor
aas
xor
add
scas
jle
clc
aas
adc
aam
inc
sub
xchg
and
inc
pop
imul
std
mov
movsl
rclb
add
adc
lcall
mov
or
xor
mov
outsb
fcoml
pop
das
lret
stos
or
and
sub
aas
fs
or
cmpsl
xchg
xchg
add
xor
dec
xchg
lods
outsb
xchg
mov
orb
aas
inc
add
aad
mov
dec
mov
jb
add
test
outsb
adc
stc
adc
jns
sub
cmp
push
stos
ljmp
lods
xor
imul
jo
loopne
movsb
cmc
xor
lods
popa
lret
push
js
jmp
sbbb
sbb
scas
outsl
movb
mov
xor
clc
je
jl
mov
mov
jg
scas
in
in
out
mov
scas
sub
daa
dec
sub
stc
lcall
push
inc
dec
xchg
sahf
pop
xlat
pop
sub
dec
and
sarb
scas
xchg
and
fmulp
js
push
hlt
adc
notl
nop
mov
add
mov
dec
add
push
mov
mov
mov
xor
cmpsb
pop
xor
mov
je
pop
repnz
or
cmp
gs
in
js
les
or
jg
xor
pop
loop
push
xchg
jns
fistpll
and
fnsave
xor
ret
rcll
cmpl
sbb
and
pop
in
sub
cmc
imul
mov
xchg
xor
jne
dec
adc
fs
arpl
fs
dec
rorl
and
inc
and
gs
xor
adc
xor
adc
clc
xchg
xor
std
xchg
xlat
jg
push
mov
jl
stc
xchg
dec
js
mov
in
movsl
mov
mov
shll
sub
ds
mov
fs
inc
xorl
orl
fmuls
out
mov
jns
jo
cltd
jbe
sbb
push
test
stc
sub
pop
andl
iret
dec
adcl
sub
mov
mov
sub
xchg
jl
inc
dec
xor
sub
push
in
enter
jnp
out
out
cltd
scas
push
repnz
mov
mov
out
fwait
dec
pop
push
dec
xchg
outsl
inc
arpl
ret
cmc
fistl
push
mov
push
mov
outsl
or
scas
test
add
cmpsl
jae
xrelease
pushf
aas
xor
les
cmp
aaa
enter
or
xor
out
mov
ds
stc
lods
sub
ret
jecxz
cld
pop
ret
push
push
or
mov
in
push
stc
outsb
jecxz
pop
nop
cmp
mov
in
sar
push
push
cwtl
push
push
mov
bound
out
mov
enter
inc
mov
sbb
pop
outsb
mov
or
push
and
addb
mov
sbb
test
lcall
gs
dec
jmp
test
fldcw
dec
or
lods
flds
call
insb
jecxz
xchg
xor
push
bound
test
xchg
mov
lret
cmpl
roll
leave
popf
mul
stc
inc
int3
jnp
push
lret
or
popa
xor
sbb
push
cmp
mov
movsl
mov
pop
sarl
jb
and
sbb
xchg
out
mov
iret
fmul
xor
dec
add
movsl
and
xlat
jb
push
pop
dec
addr16
xchg
test
cmp
outsb
jo
pop
mov
jmp
inc
insl
mov
xchg
xchg
pop
sahf
inc
out
push
pop
mov
push
pop
scas
mov
push
bound
jmp
sbb
outsb
xchg
out
int
push
movsb
rcrb
inc
pusha
in
movntq
sbb
jb
cmc
mov
or
rorl
sbb
repz
pop
jg
sbb
and
test
xor
cmp
ret
imul
cwtl
and
pop
mov
sarb
out
enter
cmp
xchg
and
daa
ss
ljmp
mov
mov
mov
test
enter
mov
mov
into
js
add
or
and
aad
mov
daa
std
pushl
shll
rolb
ss
and
in
int3
outsb
cltd
cmp
cmpl
clc
fnstenv
mov
mov
ror
stc
dec
jge
insl
data16
ret
lods
fsubrs
pop
cmp
sarl
aad
mov
xor
mov
xor
aas
aad
dec
loopne
mov
aam
adc
and
ret
fwait
adc
dec
mov
or
shl
out
xor
lods
lock
movsb
adc
xor
filds
call
stos
ss
jl
or
fcmovu
shrl
sub
in
xor
sub
inc
adc
xchg
or
inc
inc
test
xor
test
mov
popa
cmp
lods
sahf
or
aas
mov
mov
and
push
cltd
aas
pop
dec
ljmp
aam
dec
scas
xchg
inc
pop
dec
je
js
jg
cmp
sahf
or
aad
xchg
pop
mov
push
sbb
xor
mov
mov
jmp
lret
call
mov
push
aaa
loope
and
adc
mov
adc
add
adc
idivl
pop
rcr
cmp
mov
and
aam
mov
xchg
cmp
setge
ret
rcr
or
js
mov
aaa
inc
push
fs
movsl
adc
adc
lods
enter
mov
out
mov
pop
mov
mov
push
sbb
ud2
mov
dec
adc
mov
int
pop
xchg
notb
imul
pop
mov
jecxz
mov
or
out
and
insl
jns
pop
mov
sahf
fabs
inc
mov
mov
in
push
inc
xlat
inc
sub
call
mov
push
push
lahf
mov
mov
or
cmc
in
mov
mov
push
jg
mull
aaa
cmp
xor
leave
test
xchg
mov
fwait
imul
xor
mov
and
xor
xor
pop
pop
mov
repnz
push
mov
nop
fwait
jl
pusha
stos
neg
inc
cmp
sub
xchg
ljmp
jne
push
es
imulb
mov
inc
aas
aaa
xorl
jg
lea
sub
test
xor
push
mov
jle
lret
add
adc
xor
adc
cmp
mov
lods
sbb
jae
mov
sub
add
mov
or
xor
leave
xchg
out
inc
negl
pushf
ss
out
pop
pop
rolb
ret
icebp
xchg
adc
adc
xor
sub
xchg
xor
push
aam
mov
cmp
mov
lea
jge
in
and
movsl
fidivrl
xchg
rcl
leave
sub
and
mov
fstps
cmpsb
sarl
aaa
out
or
or
mov
cmp
cmp
clc
mov
nop
adc
aaa
aaa
xchg
inc
xchg
mov
lock
cld
push
aam
nop
mov
push
data16
repnz
loope
pop
ret
sti
adc
xor
sahf
dec
outsb
das
pop
sbb
push
xchg
pusha
out
insb
incb
out
nop
mov
pop
imul
xchg
mov
mov
rdpmc
add
pop
pusha
sbb
pop
jmp
xchg
mov
and
xchg
inc
and
dec
in
fcomps
sub
iret
out
and
cmc
ss
movsb
lret
leave
pop
sbb
mov
sbb
test
mov
filds
in
lods
cmpsb
int
inc
jb
sahf
cmpsb
popf
xor
pop
aas
inc
out
shr
jmp
lret
mov
mov
sahf
add
mov
lcall
dec
adc
add
std
mov
in
cs
inc
shll
inc
lret
and
and
shlb
ja
divl
and
push
ret
ss
popf
rorb
popa
es
push
iret
paddusb
or
andl
rcl
dec
lea
fwait
cmp
dec
or
sbb
xchg
push
mov
mov
mov
scas
lock
mov
fidivrs
lcall
andb
sub
lret
les
mov
gs
add
lahf
addr16
or
adc
in
ja
pusha
mov
sbbb
jl
pop
outsb
addr16
sub
add
mov
in
addr16
mov
mov
ds
adc
int3
xor
rcll
jbe
dec
inc
push
arpl
mov
jns
pop
test
inc
fists
sbb
insb
and
sub
push
cld
ret
mov
adc
mov
jb
cmp
lods
cmpsl
xchg
cmp
cmp
adc
sbbl
inc
add
add
xchg
std
out
xor
insb
xchg
cmpsl
in
push
mov
push
sahf
iret
mov
mov
dec
sbb
xlat
pop
cmc
mov
pushl
aaa
dec
pushf
sbb
loopne
sub
das
add
mov
cmp
scas
jl
cmp
popa
or
xchg
es
mov
fildll
cmp
lret
ljmp
pusha
jmp
push
in
shl
cmp
inc
fcoms
aaa
xchg
xor
popa
or
fisttpl
mull
or
leave
shlb
dec
insl
sbb
inc
stos
adc
lea
xchg
aas
and
test
sub
ret
lret
mov
or
js
inc
ret
bound
xorb
imul
cmpsl
adc
mov
stos
lea
xchg
push
hlt
inc
xor
lods
imulb
pop
lahf
push
movsl
pushl
sub
jne
jmp
sub
call
sbb
sahf
pop
mov
push
dec
int
push
lea
test
pop
push
movsl
shlb
mov
fwait
clc
sbb
cs
xor
inc
scas
inc
ds
mov
outsl
arpl
stc
roll
out
arpl
push
lods
call
mov
mov
js
cmp
inc
or
push
and
data16
adc
jecxz
and
out
std
hlt
loopne
repz
push
pop
mul
das
push
inc
mov
jae
inc
in
mov
mov
neg
fistps
dec
xor
stos
xor
mov
mov
sub
js
xor
leave
jl
xchg
add
and
das
mov
je
lock
mov
sbbb
fisubl
adc
xor
sbb
push
mov
sar
mov
loope
test
sub
sbb
push
js
lret
loopne
xchg
xor
movsl
lock
jmp
mov
bound
aaa
xor
cmp
and
pop
aad
push
andb
mov
sub
stos
ja
xchg
out
mov
mov
mov
jnp
cmp
cmp
mov
cltd
cmpsl
push
and
adc
leave
test
scas
cmp
sbb
pop
loop
add
pop
xor
ja
fucomp
aaa
and
pop
das
mov
aaa
das
pop
sbb
in
loope
or
fbstp
jp
cmp
inc
inc
cmpsl
xchg
mov
int
sbb
leave
aaa
and
xchg
cld
repz
loopne
fnstcw
repnz
mov
je
nop
mov
push
or
iret
fs
xchg
jne
xor
stos
clc
cltd
cld
sub
js
imull
xchg
ret
outsl
pushf
fstps
outsl
dec
cli
sbb
lds
inc
push
into
adc
imul
or
loopne
add
xchg
push
xchg
push
mov
test
cs
test
loopne
and
lahf
sub
cmp
sbb
stos
xor
imul
cmp
add
mov
xchg
push
add
fsubrs
test
push
lds
lret
cmc
inc
int
jbe
xor
mov
pop
pop
sub
push
leave
jg
push
jnp
pop
mov
mov
es
dec
ja
sub
mov
sbb
xor
outsb
cmp
jnp
and
sbb
sub
sub
add
jl
test
jno
xchg
popl
mov
xchg
pushf
jns
mov
cmpsl
imul
xor
or
xchg
inc
es
ljmp
lcall
bnd
dec
mov
dec
jae
ljmp
int
lahf
ss
add
bound
inc
mov
in
xlat
jo
xchg
data16
popf
ret
in
imul
clc
push
addr16
les
sbb
sbb
in
cmp
aaa
ja
mov
pop
stc
adc
push
push
jno
pop
arpl
sarb
mov
push
pop
xor
mov
pop
sbb
adc
inc
repz
enter
jg
in
ret
lret
gs
xchg
jecxz
xchg
lea
sub
ficomps
data16
cmp
mov
push
rcrb
movsl
aas
sbb
icebp
dec
mov
lahf
lret
xor
mov
fdiv
shlb
fwait
lods
sbb
movsb
orl
insl
mov
push
das
pop
mov
add
xchg
inc
add
xchg
popf
dec
ja
les
xor
fisubs
push
cmp
mov
loopne
pop
into
stos
cltd
cwtl
push
out
mov
in
inc
cmp
data16
cmp
repnz
clc
xor
dec
inc
popa
sarl
mov
in
dec
loope
push
add
ljmp
dec
jmp
leave
sbb
lea
adc
lcall
cs
push
icebp
pop
pop
sub
push
in
inc
movb
or
xchg
repnz
xchg
xchg
aas
xchg
mov
mov
mov
js
rcrb
jb
stos
psrlq
stos
sub
repnz
push
pusha
push
fcmovne
dec
call
pop
scas
rcrb
and
push
mov
leave
out
xchg
stos
scas
cmpsb
mov
and
js
jo
lcall
inc
cmpsl
mov
aad
stos
pop
xchg
imul
inc
mov
loop
adc
inc
cmp
nop
mov
enter
adc
jb
pop
inc
rcrl
sbb
xchg
inc
out
fs
adc
jle
lds
movsl
mov
pop
clc
sub
mov
xchg
xchg
xor
jmp
adc
fstp
std
movsb
mov
mov
push
xchg
sti
in
jmp
pop
das
test
pop
or
mov
xchg
xchg
mov
cmp
fdivrp
cmpsb
mov
mov
scas
inc
cmp
mov
in
push
std
mov
ficomps
adc
mov
mov
jl
das
cmpsb
das
test
mov
or
repnz
jnp
rolb
fsts
add
rolb
sbb
or
cmp
movsb
filds
jge
push
fcoml
sub
icebp
lea
popa
loope
rorl
jp
cmp
pop
lret
cld
pusha
mov
sbb
sub
jecxz
sahf
sub
ss
hlt
jae
xor
dec
mov
xchg
sub
push
jg
fsts
roll
cmc
sbbb
pop
into
jo
and
mov
cmpsb
sarl
cs
sub
rorl
add
ljmp
mov
add
shll
jmp
dec
std
leave
xor
lock
cmp
mov
pop
mov
mov
je
cmp
outsl
xor
sbb
pop
jns
notl
dec
cmp
cmp
jmp
imul
idiv
gs
mov
popf
les
pop
lret
jecxz
adcl
jl
ja
push
inc
inc
push
jns
push
imul
movb
push
dec
adc
add
jb
shrd
sbb
shl
jg
jo
sbb
iret
jecxz
jmp
mov
lods
xrelease
jecxz
mov
lahf
fildl
jnp
or
pop
icebp
shr
push
lock
fmulp
cmp
push
inc
push
aam
cld
sbb
sbb
sbb
push
jmp
mov
roll
push
or
xchg
test
fwait
cmpsb
cmpsb
je
and
cmpl
add
mov
shrb
sti
cmc
or
insl
ror
mov
mov
xchg
sub
mov
sub
into
rcr
mov
or
test
fst
jg
icebp
cmp
aad
das
push
jmp
xchg
adc
dec
mov
mov
hlt
push
fldcw
int3
bound
pop
cld
repnz
xor
dec
jg
and
push
aas
ss
aaa
adc
fcmovne
xor
imul
adc
jecxz
fnstcw
jno
decl
je
adcb
aad
sub
and
sbb
pop
mov
jo
fwait
cwtl
push
outsb
incb
leave
mov
pop
xchg
fmull
mov
dec
jbe
out
or
stc
fadds
mov
mov
iret
adc
das
adc
xor
pop
aas
add
push
aaa
xchg
inc
pop
rol
adc
cmp
adcb
lret
dec
mov
out
mov
fsts
mov
int
sub
or
mov
out
mov
mov
fs
and
mov
mov
ljmp
pop
xchg
mov
push
icebp
mov
sbb
push
cmpsb
test
xchg
fiadds
fnstsw
in
adc
and
out
sbb
jae
add
lcall
push
mov
and
out
in
inc
dec
xchg
js
flds
jb
lods
sbb
or
mov
pop
add
mov
sahf
outsl
lods
push
cltd
lods
fcoml
enter
scas
pop
or
jb
insb
lods
lcall
shrl
mov
inc
out
hlt
lods
cld
jnp
xchg
add
xchg
push
ljmp
orl
sbb
repz
mov
pop
jae
iret
outsl
push
pop
sub
insb
pop
jl
jns
ljmp
xchg
gs
loop
movsl
xor
push
jp
insl
pop
xor
addb
lock
sarl
rorl
sarl
repnz
adc
aas
mov
int3
xchg
adc
js
into
inc
jle
xchg
pop
jb
mov
out
pop
daa
stos
mov
test
aaa
xor
popf
sub
fmul
xchg
sub
lods
pop
dec
movsl
arpl
inc
lcall
mov
int3
dec
call
lds
mov
dec
xor
mov
loopne
xchg
adc
mov
sub
mov
xor
mov
inc
pop
cmp
je
pop
nop
sahf
in
jbe
xor
popaw
aam
pop
int
iret
jno
lcall
notb
sbb
mov
mov
daa
or
or
xor
sbb
cmp
or
add
lret
fsubs
cmp
xor
out
pop
repz
inc
test
fs
cmc
cmp
or
and
xchg
loope
lret
mov
and
jns
dec
movsl
sbb
add
fldl
fsubl
insb
xchg
push
or
cmp
push
sbb
xchg
cmp
pop
orl
lret
lods
pop
hlt
les
repnz
pusha
xor
jmp
in
cs
push
mov
inc
inc
adc
sbb
adc
mov
int3
out
shrb
mov
aad
lret
fwait
stos
cwtl
sub
pushf
ds
popf
repnz
mov
movsb
xor
or
inc
and
mov
xchg
pop
mov
mov
adc
and
int3
shlb
dec
bound
fisttps
repz
lock
and
xor
scas
mov
je
fwait
cld
ret
js
xchg
jmp
daa
dec
cld
mov
mov
push
lods
mov
fldcw
sbb
cmp
scas
outsb
push
push
pop
cmp
out
mov
orl
addb
pop
test
xchg
aad
loopne
cli
fistl
out
out
jnp
or
inc
jmp
cmc
jmp
inc
outsb
addl
mov
xor
sbb
jl
out
cmc
dec
mov
cli
or
mov
pop
int3
sbb
sti
xorl
xchg
adc
sbb
inc
loop
divb
out
dec
and
outsl
lock
cwtl
fsubrl
fsubrp
rolb
sub
cmp
jp
xchg
xchg
jecxz
das
cmpl
xchg
mov
sub
in
sbb
adc
lret
ficoms
pop
jge
adc
inc
pop
outsb
mov
push
popf
push
scas
adc
std
add
mov
adc
dec
fwait
outsb
cld
pusha
cmp
mov
pop
cwtl
xchg
jno
shlb
pushf
test
mov
out
jp
cmp
enter
xor
xchg
inc
clc
cwtl
dec
inc
add
lods
dec
loope
or
cltd
mov
inc
pop
fs
pop
jns
insb
jne
xchg
mov
cld
mov
push
inc
push
or
adcl
xchg
xlat
inc
push
lock
pop
mov
pop
fmuls
aam
rcl
jle
mov
xchg
mov
adc
je
fwait
mov
jl
adc
adc
push
push
in
mov
lds
push
into
int
rcr
cmp
mov
stc
lret
ljmp
dec
inc
andb
adc
popa
jb
test
in
out
or
and
fdivrl
sbb
xchg
bound
test
sbb
xor
int3
les
inc
or
ds
and
mov
out
and
push
out
dec
and
xchg
jno
jno
push
xchg
mov
pop
movsl
xor
popa
lock
mov
aas
ret
loopne
mull
cld
sahf
jl
mov
xchg
and
xchg
orl
out
xchg
or
sahf
mov
jns
dec
mov
xchg
fadds
insb
push
sbb
dec
xlat
bound
jbe
mov
clc
call
fwait
cmp
testl
popf
in
pop
lock
fmuls
mov
lret
cmp
jo
repz
xchg
mov
rolb
mov
add
jl
roll
repnz
or
rorb
cmp
sti
stos
outsl
mov
inc
and
out
push
lahf
icebp
jb
stos
les
outsl
sahf
sti
pop
fwait
stos
pushf
rcrl
pop
push
push
pop
ss
fsubl
mov
fwait
push
xchg
out
mov
stos
mov
fbld
bound
or
popa
cmp
sarl
mov
mov
out
dec
arpl
movsl
mov
xor
lods
sub
out
in
sbb
out
adc
dec
pop
divb
mov
adc
int
cli
lods
jnp
xchg
jnp
mov
mov
cld
out
pushf
out
jbe
adc
mov
adc
push
ljmp
hlt
iret
and
push
jmp
scas
or
ret
mov
pop
push
xor
jecxz
call
adc
rcr
lods
leave
cmp
jnp
sub
pop
and
push
xor
fisubrl
daa
add
mov
mov
mov
int
outsl
les
adc
negl
cmp
dec
xchg
test
je
test
cli
xorb
leave
dec
sbb
adc
into
out
out
xchg
cmp
data16
xchg
xchg
loop
les
fcmovnbe
jg
push
enter
push
mulb
xchg
jecxz
movsb
scas
jmp
xor
xchg
cmpl
inc
jle
adc
ficomps
mov
pushf
push
cmc
pop
into
mov
in
sbb
push
lret
movsl
clc
mov
xor
mov
push
push
lods
into
sub
mov
xorb
xchg
push
shl
mov
pop
in
mov
mov
inc
scas
mov
sub
mov
inc
jmp
mov
outsl
call
pop
jmp
cmp
stc
int3
lea
jmp
movsl
mov
mov
lock
pop
mov
out
iret
iret
mov
cwtl
mov
aad
xchg
pusha
addr16
mov
iret
mov
sub
jno
fbstp
mov
ret
jae
es
dec
dec
stc
push
lods
ljmp
jmp
inc
rorl
push
int3
ja
pop
cmp
sub
ror
jg
rcrb
fs
lods
lahf
inc
or
clc
stc
xchg
and
cmp
call
lcall
jmp
and
lods
out
mov
pop
mov
mov
adc
push
xlat
push
aaa
movsb
and
cmp
cld
fcompl
sbb
in
mov
nop
fiaddl
xor
xor
mov
bound
adcl
cmp
add
imul
mov
and
jecxz
or
lret
hlt
roll
int
jae
or
outsb
filds
out
out
xchg
push
push
out
insl
fcomps
adc
pop
in
inc
inc
or
cmp
mov
mov
dec
mov
inc
sbb
sbb
xor
mov
xchg
or
test
pop
in
int
xor
jne
adc
sbb
movsl
rolb
enter
push
aaa
pop
test
xchg
jecxz
mov
sahf
mov
das
xchg
mov
adc
inc
add
pop
iret
or
fidivrs
xchg
jecxz
ret
mov
and
rorl
inc
js
pop
scas
ja
frstor
lock
inc
loopne
ds
jo
sub
jmp
lahf
aad
popf
xorl
loopne
repnz
push
int3
sbb
cli
push
out
lret
negb
int
adc
test
inc
dec
in
add
mov
inc
jl
addr16
pop
loope
icebp
mov
std
shll
push
mov
imul
dec
or
test
fistps
aaa
popf
les
fcmovnbe
aad
shl
mov
paddd
lahf
adc
and
movb
aas
shll
sarb
sub
add
popf
xchg
inc
push
lods
or
push
sbbb
add
mov
cmp
addb
insl
addr16
test
sub
push
adc
int
push
repnz
cmpsb
inc
imul
je
fisttpl
sub
sub
repnz
mov
das
sti
mov
push
xor
or
scas
aam
cmp
lds
in
inc
pop
push
rcl
gs
cmp
cmp
and
push
inc
in
das
stc
push
shl
mov
and
jo
lods
xlat
fiaddl
and
clc
adc
xchg
or
ljmp
rcrl
shr
cmp
dec
ret
cmpsl
movsl
and
push
es
out
push
lahf
imul
pop
ljmp
aam
cwtl
sub
dec
mov
pop
xor
mov
xchg
fimull
jl
lahf
mov
ja
inc
push
dec
sbb
js
cmc
out
or
pop
sub
add
sbb
sub
sbb
jne
add
aad
sub
add
subl
dec
and
mov
sbb
iret
cmp
je
sub
fisubrl
stc
mov
movsb
sbb
jno
cltd
gs
dec
push
and
bound
adc
mov
push
in
sub
lret
jno
sub
cli
cli
aas
mov
rcrb
xchg
incl
iret
push
test
add
xchg
fcompl
dec
pop
jmp
sbb
outsb
mul
test
inc
aaa
sbb
or
add
sbb
mov
and
mov
repz
dec
push
outsl
xor
adc
mov
mov
ret
pop
movsl
test
arpl
pop
pop
or
daa
sub
mov
imul
iret
ficoms
cmp
xchg
pusha
fildll
dec
cmpb
icebp
sub
fsts
call
nop
xor
sub
repz
mov
neg
hlt
cmpsb
cmpsb
loope
jl
fdivr
out
cli
xchg
cmpsl
push
push
jb
sub
xor
mov
inc
mov
add
incb
cli
shl
mov
mov
xchg
inc
ss
push
sti
sbb
adc
mov
mov
add
add
lods
ret
adc
scas
xchg
pushf
inc
and
lea
stc
out
xor
popa
stc
and
icebp
mov
jmp
mov
push
jbe
mov
adc
pop
fdivr
inc
jge
das
icebp
pop
inc
daa
add
in
push
sarl
mov
sub
enter
sub
fs
loope
xor
je
dec
mulb
sub
in
xchg
movsb
mov
incl
and
bound
jno
sub
push
dec
pop
xor
xor
pop
mov
std
mov
cmp
sarb
push
or
push
imul
mov
inc
xchg
out
ja,pn
pop
das
mov
shr
mov
inc
jbe
pop
jp
mov
arpl
push
cli
add
aad
std
xor
xor
mov
mov
sub
fs
pop
cmp
mov
loop
scas
mov
mov
enter
aam
sbb
je
das
pusha
fsubrs
repz
inc
jnp
cltd
sbb
sbb
adc
lds
in
clc
enter
xchg
insb
inc
imul
movsb
mov
rep
cltd
sbb
cmp
aaa
lock
mov
scas
xorb
mov
test
inc
cmp
lahf
stos
int3
in
or
test
int
scas
jge
xchg
iret
xchg
out
adc
mov
dec
lock
in
loop
dec
and
in
push
pop
leave
into
dec
lock
add
adc
in
rcrb
mov
dec
lods
stos
arpl
jo
push
add
cmp
xor
push
sti
pop
adc
cmp
jb
dec
lahf
add
adc
ljmp
pop
and
testl
dec
sbb
jl
adc
in
xor
mov
push
or
sub
pop
pop
xor
jb
into
mov
push
lcall
push
or
leave
add
roll
xor
icebp
jno
xchg
or
mov
cmp
sbb
lret
push
aaa
dec
jg
ficomps
fnstcw
cli
movsb
sar
adc
call
in
cmpsl
mov
cwtl
test
and
dec
jg
jae
jp
or
and
movsb
push
dec
dec
mov
jnp
sub
dec
mov
shr
andl
push
out
or
jg
fistpll
lea
sub
pop
cmpsb
rclb
popf
cmpsb
subb
jg
pop
xchg
call
dec
aas
out
pushf
xchg
je
call
or
sbb
enter
jne
xor
test
call
mov
or
fs
aaa
test
mov
adc
dec
lock
adc
fstpl
fsubs
pop
outsl
add
es
fwait
movsb
movsb
push
daa
pop
pop
mov
sub
movsb
negb
sbb
dec
add
dec
sub
fiaddl
out
imul
loop
and
dec
xchg
dec
xchg
js
into
inc
cmp
xchg
fidivs
lods
xchg
push
jmp
dec
cli
xchg
stos
or
les
ret
and
or
xchg
in
fmull
out
add
outsl
push
movsl
pop
mov
cmc
push
push
adc
mov
mov
daa
jno
xchg
sbb
push
lods
mov
test
test
lcall
jb
add
or
lods
jg
aas
ss
std
dec
ficoml
ja
inc
ret
jbe
lods
js
jbe
popf
cli
lods
jecxz
shrl
movsl
movsb
cs
sbb
or
mov
jno
adc
lahf
xchg
adc
dec
mov
jae
push
cmp
movsl
mov
add
orb
cmp
popf
lcall
mov
dec
and
stc
shll
lahf
or
mov
mov
pop
call
jge
gs
push
out
into
sub
out
push
aaa
pop
adc
aas
mov
movsb
loope
ficoml
jae
sub
in
xor
mov
shl
mov
or
add
imul
scas
popf
insl
sbb
fimull
fisubrl
mov
inc
in
xchg
neg
arpl
movsb
cmp
mov
test
jmp
xor
fstpt
push
cwtl
cmp
test
cmp
subl
pop
or
std
sub
sub
fwait
shrl
js
or
pop
mov
lcall
xor
sub
adc
test
inc
pop
popf
cwtl
addb
mov
add
out
jecxz
jbe
pop
add
xchg
fwait
shlb
sub
xchg
lds
dec
adc
add
sahf
leave
inc
dec
jge
cmpsb
mov
or
nop
mov
pop
sub
pop
mov
mov
push
push
ret
push
pop
cmp
fs
or
push
fidivrl
sarl
mov
sti
insl
outsl
dec
xchg
xor
add
adc
inc
ja
dec
xor
sub
xchg
outsb
arpl
jbe
cmp
xor
fnstcw
int3
daa
gs
enter
ds
cld
pop
push
notl
cli
mov
sbb
push
aad
and
jae
hlt
inc
insl
xchg
outsb
pusha
add
aaa
cmc
or
push
mov
lret
mov
jns
out
test
addr16
in
outsb
jno
mov
rcrb
push
pop
arpl
inc
jne
clc
outsl
out
sbb
add
dec
in
jge
cli
jbe
mov
cmc
sbb
cld
jl
out
scas
pop
cmc
mov
incl
sti
jmp
and
jge
or
aad
insb
faddl
add
sbb
jge
push
mov
dec
mov
test
mov
clc
mov
ret
push
cld
pop
pop
fildl
or
fiaddl
or
loop
cltd
sbbb
fcomps
xchg
and
testl
jnp
rol
ss
dec
mov
cmp
mov
iret
callw
stos
cmp
aam
outsb
cmp
test
jo
cmp
inc
out
cmp
int3
pop
jae
pop
sub
sbb
mov
pushf
and
int3
xchg
test
cmp
push
or
into
xchg
mov
or
aam
adc
cmp
pop
lods
cmc
cld
pop
ficomps
mov
dec
daa
push
sbb
imul
in
adc
sbb
dec
outsb
xor
xor
aaa
add
iret
or
adc
fidivrl
or
std
xchg
aam
sub
xchg
pop
fisttpll
pop
adc
into
cld
imul
sahf
sbb
mov
pop
in
ds
iret
mov
mov
sub
notl
xor
dec
adc
xor
stos
scas
jmp
divl
mov
fistpll
nop
sub
xchg
xchg
mov
xorl
dec
add
mov
or
test
mov
out
bound
add
std
inc
mov
stos
popf
mov
fst
rcrb
dec
cmp
mov
rorl
test
xchg
push
mov
pop
pop
xor
data16
std
addr16
cwtl
pop
mov
jmp
and
dec
dec
xor
dec
inc
mov
mov
inc
add
arpl
neg
and
xchg
lea
push
enter
dec
push
outsl
sub
jge
loop
mov
jnp
push
addb
dec
icebp
jmp
lcall
sbb
int
in
pop
mov
mov
filds
aam
dec
das
dec
dec
sbb
mov
cwtl
adc
xor
jge
fnstenv
add
ss
std
push
mov
das
adc
lock
push
call
mov
loop
pushf
fcoms
dec
and
in
mov
out
arpl
push
fwait
and
fwait
mov
jns
orl
mov
sti
popf
sbb
sarb
mov
push
andl
rol
and
das
cmp
std
cmp
add
xor
inc
icebp
sub
in
add
xlat
adc
push
mov
mov
in
out
fwait
sub
add
mov
movsl
rcrb
hlt
cwtl
push
push
adc
mov
les
or
sub
or
pushf
mov
shlb
inc
mov
xor
pop
outsl
push
shrl
test
mov
xchg
into
mov
xor
add
iret
or
xchg
inc
jns
int
adc
movsl
sub
pusha
or
adcl
dec
aad
outsl
add
mov
push
shll
in
push
mov
ljmp
push
sbb
or
or
pop
lea
cmp
lcall
roll
imul
hlt
pusha
test
and
mov
pop
pop
push
out
jp
xchg
loop
mov
sbb
je
sahf
push
mov
sub
sbb
cmp
sbb
push
js
and
or
and
mov
add
es
shrb
pop
pop
ret
mov
mov
fistps
clc
ret
pusha
or
push
dec
xchg
fwait
inc
push
jle
fcomi
pushf
ud2
rcrb
in
test
test
cmp
push
mov
imul
dec
scas
call
xlat
adc
push
ret
or
lods
fidivs
testl
cmc
repz
pop
call
add
inc
jge
mov
in
push
ss
imul
dec
push
imulb
xor
cmpsl
mov
or
sbb
sti
cmp
into
adc
ja
rcrb
shll
jns
inc
jns
sahf
sar
icebp
push
add
test
movsb
add
xchg
push
push
push
cmpsb
enter
out
fnsave
movsb
cmp
fsubrs
test
mov
not
add
xor
xor
and
pop
pop
nop
fwait
mov
out
or
loope
das
shr
int
test
shrb
push
sub
into
sti
jl
fdivrp
out
mov
lret
inc
lds
mov
hlt
adc
mov
mov
out
xchg
jge
pop
rol
clc
push
ljmp
outsl
dec
sub
push
sub
jl
lret
fs
inc
mov
xor
jge
xor
cmp
imul
cwtl
mov
mov
fidivrl
popf
outsb
mov
and
push
push
jo
fwait
lea
cmp
sahf
sbb
fimull
dec
pop
ss
ds
jbe
xchg
inc
movsl
das
std
cmp
inc
stos
jmp
push
mov
sub
bound
jae
add
test
sti
jg
in
inc
mov
inc
fwait
jp
sbb
hlt
stos
mov
or
ret
cli
bound
movsb
xlat
arpl
mov
insb
pop
fwait
pop
lods
jnp
aaa
xor
dec
sti
push
push
push
arpl
ljmp
into
insb
mov
leave
jg
addr16
jg
cli
xor
loope
mov
sbb
dec
fisubrs
adc
les
cmp
std
mov
push
pop
mov
mov
jg
lcall
out
sbb
mov
xchg
imul
nop
and
fiadds
xchg
jp
mov
daa
cs
sub
dec
dec
in
loopne
cli
dec
insl
repnz
push
mov
adc
dec
xor
add
clc
pop
aad
outsl
and
jmp
xchg
xchg
das
rcrb
fmull
loopne
dec
fucomp
lret
sti
rcll
call
xor
push
and
loope
les
pusha
mov
push
sub
cmp
cmp
out
sub
sub
xchg
and
and
push
jb
mov
aad
jns
mov
js
cld
sbb
pusha
bound
xor
cmp
mov
lods
adc
pop
cmp
data16
and
sbb
mov
push
cs
pushf
cmp
fldcw
sbb
rcr
lods
stos
bound
outsl
in
sub
and
dec
add
sub
cwtl
rcr
dec
rcll
dec
push
cmpsb
out
jo
repnz
in
in
mov
sti
dec
pop
daa
jo
pusha
pop
notl
je
dec
mov
push
frstor
sar
add
cld
push
icebp
jmp
sub
push
xchg
popa
xor
push
cltd
fadds
push
jp
dec
int
jl
ficoml
imul
sub
jmp
mov
scas
cmp
and
cltd
mov
movsb
or
inc
mov
enter
leave
or
xor
gs
scas
cmp
in
xchg
fs
push
mov
xchg
add
pop
pop
mov
cmp
xchg
cs
jmp
pop
jns
insb
flds
out
bound
mov
dec
fldenv
inc
dec
aaa
or
lock
fistl
jnp
dec
lock
aaa
mov
xchg
sbb
mov
lock
push
scas
data16
push
mov
js
orb
inc
addr16
push
lret
push
fs
jne
inc
aam
retw
sub
xchg
ss
dec
lret
loope
mov
data16
in
adc
mov
addr16
push
xor
loope
xor
cs
adc
lahf
shll
dec
das
dec
aad
sti
dec
ds
clc
inc
dec
jb
insl
sub
pop
movsb
shlb
sahf
mov
push
out
lock
and
lock
mov
mov
sub
gs
test
icebp
scas
es
pop
sbb
mov
mov
mov
in
pop
pop
sbb
fimull
and
cmp
jp
xor
xchg
dec
repnz
xchg
repz
xchg
sub
jae
ss
cs
out
xchg
xchg
scas
dec
ss
sub
sbb
xchg
adc
cmc
and
inc
xchg
add
pop
test
jle
xchg
ds
div
push
stos
pop
inc
and
sub
pop
shlb
in
sbb
push
insb
adc
icebp
pop
sub
lods
lahf
outsl
sbb
cli
cmp
cmp
repz
sbb
xor
or
je
xor
ds
lods
pop
cmp
or
in
and
sbb
gs
lcall
outsl
jb
scas
jo
xor
jne
or
sbbb
cwtl
aad
dec
xchg
cs
int3
xchg
imul
and
inc
idivl
pop
xchg
and
mov
mov
aaa
xchg
sbb
shll
inc
push
int3
pusha
fstpt
call
out
xchg
cmp
cmp
mov
cli
js
popf
mov
aas
pop
and
and
leave
pop
xor
push
aaa
cwtl
add
jmp
mov
in
mov
mov
imul
and
fdivrs
dec
lret
test
mov
adc
rolb
filds
jae
pop
pop
aaa
decb
xchg
jbe
mov
std
lret
xchg
mov
push
ret
nop
dec
mov
push
addr16
xchg
fwait
jb
mov
sbb
jmp
mov
fstp
cmp
and
mov
loop
and
and
sbb
sbb
mov
mov
mov
imul
rorb
or
rol
lods
test
int
add
in
push
push
xor
lret
cs
andl
pop
pop
rolb
into
mov
movsl
mov
fs
testb
idivb
insb
fiaddl
push
faddp
xor
arpl
test
sbb
notl
std
cwtl
sbb
xchg
push
push
mov
shll
push
test
inc
in
shll
jl
fldl
dec
sub
cld
push
fadds
add
in
mov
rorb
testl
gs
or
inc
mov
fistl
mov
or
mov
sbbb
push
mov
mov
stos
rclb
mov
loop
popa
push
and
add
fwait
scas
in
mov
pop
sbb
sub
pop
bound
in
sbb
gs
and
sbb
push
pop
xchg
aaa
and
jo
clc
popf
cmp
loope
mov
stos
cmpsb
sbb
xor
mov
insb
cmpsl
pop
rorl
mov
mov
sub
jae
xchg
or
mov
dec
jp
lods
mov
in
xchg
inc
ret
in
mov
fs
jmp
lds
xchg
and
cmc
push
mov
mov
jmp
cmpb
loopne
xor
popf
xor
bound
enter
cmp
sub
jno
mov
dec
xor
hlt
int3
das
xor
mov
nop
mov
cmc
ret
mov
int
mov
mov
lods
jmp
inc
xchg
mov
mov
int3
and
in
pop
loopne
int
sbb
xorl
jae
test
cld
jo
inc
ret
or
push
insl
out
ss
xchg
popf
sbb
pusha
sbb
sub
fs
add
jno
sarl
hlt
xchg
xlat
fisttps
fwait
int3
push
jle
mov
hlt
cmp
inc
mov
cltd
push
test
push
add
rorl
push
repnz
data16
xor
pop
add
arpl
jo
mov
test
insb
push
jne
les
mov
pop
aad
cltd
xchg
inc
jp
stos
or
popf
jmp
pusha
lods
pop
mov
fdivr
test
mov
repz
and
loope
clc
jle
scas
jo
incb
int
add
out
inc
stos
ds
add
movsb
repnz
data16
lds
adc
jecxz
fstpt
add
cmp
cmp
xchg
dec
mov
xchg
xchg
adc
pop
addr16
and
mov
imul
sbb
add
aam
or
stos
loopne
imul
lock
daa
pop
push
mov
push
xchg
ret
sar
pop
imul
mov
popf
jne
jg
mov
lock
mov
divl
in
mov
cmp
mov
jbe
dec
mov
add
test
fdivrs
in
fstpl
cmp
int3
inc
mov
mov
ljmp
sub
fsubl
pop
mov
and
adc
stos
dec
mov
adc
repnz
aaa
or
push
add
out
loopne
cmc
loopne
mov
mov
sub
or
pop
je
adc
xchg
adc
inc
pop
or
movsl
repz
cli
push
cmp
insl
push
iret
mov
pop
add
xchg
lret
das
ret
ret
data16
mov
in
xchg
int3
push
cli
and
cmp
fisttpll
push
xchg
cli
arpl
mov
ja
mov
lock
cmp
fisttpl
dec
jnp
mov
mov
dec
push
mov
mov
xchg
pop
mov
inc
test
xchg
dec
add
in
jbe
pop
pushf
push
fdivs
je
and
adc
add
xchg
sahf
popa
push
into
xor
les
add
push
lds
fwait
repnz
cwtl
enter
ja
sbb
lahf
or
adc
dec
adc
test
jg
fwait
and
push
int
pop
push
or
push
pop
mov
iret
or
sub
sbb
fldcw
pushf
lcall
dec
mov
inc
mov
sbb
pop
movsb
xchg
sub
test
loopne
cmpsl
pop
bound
sbb
mov
add
fs
push
int3
and
iret
mov
cmp
es
jns
sbb
test
or
mov
lcall
pop
je
pop
cli
cmp
testb
adc
xor
pop
sbb
scas
popa
push
leave
fidivs
in
enter
mov
lods
jmp
pop
mov
jle
ret
mov
mov
mov
ja,pn
jns
jne
jecxz
inc
jne
cli
jnp
aaa
sti
sbb
and
lods
aam
adc
in
sbb
xchg
scas
stos
mov
xchg
idivb
lods
sbb
jle
adcl
lret
testb
jns
inc
pop
outsl
push
imul
icebp
and
test
jmp
cmp
jecxz
inc
sarl
out
daa
or
imul
ljmp
test
pop
aas
std
jmp
pop
mov
imul
sbb
pop
jne
inc
rorl
sbb
push
pop
pop
pop
popf
lret
dec
inc
adc
lock
fwait
cmp
mov
push
add
sub
adc
dec
mov
jo
insl
pop
aam
btr
test
mov
pop
push
and
into
mov
mov
push
or
in
jns
mov
mov
pop
push
or
xchg
mov
jmp
sbb
cmp
loop
dec
out
addr16
sbb
jg
inc
add
scas
add
lcall
subl
shr
xchg
ret
movsl
int3
rcrb
dec
es
cmc
adc
subl
push
mov
sahf
fidivrl
mov
mov
imul
fdivl
fistl
pop
andb
movsl
lods
sub
and
lret
jae
cld
out
stos
int3
cmp
sub
orb
aas
in
cltd
add
addb
and
and
jb
mov
popa
pop
mov
insb
jne
adc
in
pop
jo
and
add
xor
adc
mov
jae
lds
or
minps
out
mov
aad
jae
insl
mov
add
cmpsb
rorb
fcoml
test
adc
or
push
pop
mov
inc
inc
lock
and
sub
pusha
scas
shl
sarb
mov
in
mov
sub
xor
repnz
dec
jle
test
fwait
aam
xchg
sub
pop
or
loope
lds
xchg
xor
and
inc
and
cmpsb
es
cmpl
movsl
outsb
mov
movsb
fcmovnu
sarl
lods
inc
dec
pop
push
push
ret
jae
scas
cmp
xchg
and
clc
jo,pn
dec
cwtl
ret
and
or
jae
dec
inc
cmp
cs
xlat
adc
test
xor
dec
adc
mov
jg
popl
sbb
adc
mov
sub
cld
lret
dec
call
scas
pop
idivb
es
cmpsb
cmp
push
decl
pop
sbb
pushf
inc
icebp
jbe
xchg
adc
aam
push
je
or
xor
dec
aaa
pushl
xlat
out
das
dec
cli
push
sti
inc
xor
xor
rcll
and
ret
out
add
iret
push
cltd
lock
rcrb
aad
std
rolb
mov
outsl
mov
je
movsb
push
xchg
push
inc
fdivl
push
call
test
mov
jnp
mov
rolb
cmp
adc
push
int3
lods
mov
gs
jp
sub
push
out
arpl
andb
sub
mov
xor
mov
push
ret
outsl
pusha
aad
jle
add
push
jno
ja
jmp
dec
fstps
mov
sti
xor
cwtl
or
adc
xor
adc
pop
repnz
pushf
loopne
fldenv
repz
jg
fcmovu
pop
jmp
mov
loop
cmc
add
jmp
test
jb
in
lods
lret
aas
adc
test
add
inc
rcrl
int
imul
int
scas
cmc
add
mov
stos
mov
adc
or
rsqrtps
and
or
pop
lcall
aad
dec
mov
cmp
add
loope
and
sbb
mov
inc
popa
js
les
jne
pop
xchg
in
mov
jge
inc
jg
scas
xchg
dec
mov
mov
in
or
lret
dec
cmp
adc
mov
push
je
adc
push
pop
xchg
in
iret
std
sbb
xor
xor
sbb
mov
lea
lret
xlat
mulb
jno
or
arpl
out
js
gs
test
sub
popf
adc
pusha
das
addl
movsb
arpl
repz
into
xor
push
repnz
aaa
adc
std
out
xor
adc
xor
inc
add
cmovo
data16
outsl
outsb
mov
shll
xchg
gs
imul
pop
cmc
mov
cmp
pushf
iret
inc
daa
stos
test
adc
jp
push
push
mov
inc
jo
xlat
lds
lods
push
jp
cwtl
idivb
in
fsubl
dec
adc
push
pop
sarl
mov
add
and
adc
insl
sbb
jge
pop
icebp
xor
jnp
push
cli
fcoms
test
pop
out
lds
addr16
xchg
push
mov
imul
in
or
in
mov
xchg
pop
pop
adc
test
shl
ljmp
shll
lods
stos
sbb
sub
mov
rcrl
mov
pop
adc
sahf
sub
pop
xchg
mov
xor
aas
mov
add
adc
mov
jle
push
cmpsl
movsb
xchg
sub
sub
ja
cmp
mov
leave
push
pop
mov
xchg
mov
inc
push
les
outsl
popa
popf
test
add
outsb
das
fstpt
fxch
lcall
pop
push
inc
mov
adc
lahf
pop
in
dec
mov
loop
mov
adc
rcrl
mov
in
xor
fldenv
dec
idivb
test
lret
pop
outsb
sbb
sbb
sub
push
push
shrb
push
add
mov
xor
lds
sahf
inc
cmp
inc
cmp
mov
movsb
add
ljmp
pop
xchg
inc
cmp
lods
les
xchg
and
hlt
mov
pop
aaa
push
les
sarl
push
jnp
loopne
not
and
loope
cmc
or
jl
inc
inc
lods
nop
loopne
push
pop
mov
cmp
xchg
loop
pop
cli
push
xlat
dec
testl
notl
mov
xchg
xorb
icebp
and
rcrb
fnstcw
or
movsl
mov
sbb
inc
fmuls
dec
sub
insl
ds
mov
negb
or
mov
sub
push
popf
aaa
or
sbb
in
mov
jmp
add
pop
mov
int3
or
ret
out
lods
fmuls
and
pop
out
inc
lods
enter
xor
les
pop
enter
inc
push
and
divb
test
mov
ss
aas
sbb
sti
mov
sub
popa
adc
out
push
pop
xchg
scas
ds
stos
std
sub
add
mov
cltd
and
sbb
nop
push
and
cltd
inc
lock
sbb
cmpsb
adc
sbb
test
rolb
jnp
cmp
mov
sti
into
add
int3
int
jno
notb
add
lds
inc
aam
fwait
xor
sahf
fidivl
popa
es
mov
shll
mov
add
iret
lea
adc
rorb
jne
test
push
mov
je
pop
out
inc
daa
push
xchg
movsl
stc
mull
out
scas
jl
push
cmp
or
inc
cmp
sub
push
test
ja
mov
cld
mov
incl
rcrl
push
pop
ja
jl,pn
mov
sub
adc
jnp
lahf
loop
push
je
pop
and
cltd
addb
cs
dec
xchg
xchg
fprem1
dec
and
jle
adc
bound
sub
nop
and
adc
mov
call
mov
sub
sbb
jecxz
cmpsl
fmuls
std
or
in
int3
cmp
pop
test
pop
mov
xchg
cwtl
or
pushf
mov
adc
fwait
shll
cmpl
mov
inc
repnz
cs
xor
popf
adc
jns
aaa
arpl
scas
jb
or
enter
and
sub
lds
sbb
mov
in
aaa
add
mov
les
mov
dec
out
xor
dec
lock
sbb
cs
xor
scas
lods
hlt
sbb
cmpsb
stc
pop
inc
xor
pop
lea
sahf
xchg
jbe
pop
pop
sbb
mov
push
mov
mov
popa
dec
inc
fwait
push
mov
push
mov
mov
dec
out
test
inc
sub
sbb
xor
outsb
mov
orb
test
mov
xchg
inc
sbb
jmp
movsl
test
add
std
out
iret
add
jno
xchg
hlt
inc
adc
cmpsb
clc
xchg
rolb
outsb
sub
jbe
mov
insb
and
jbe
push
sahf
inc
or
fnstcw
mov
icebp
test
cmp
pop
mov
push
sbb
dec
inc
es
sub
jg
vaddpd
sbb
shrb
push
inc
xchg
test
push
push
out
dec
push
daa
or
je
and
xlat
sbb
adc
cmpsl
jge
shrl
aas
popf
cmp
ss
mov
std
adc
shrb
jl
mov
and
xchg
mov
popf
inc
sub
cli
daa
aas
pop
test
cs
jno
inc
sbb
push
in
push
xor
inc
ja
es
icebp
pop
xchg
bound
sbb
pusha
mov
mov
pop
pop
scas
cltd
mov
push
add
mov
sbb
arpl
jae
sub
sbb
sub
jle
or
mov
call
sbbl
test
arpl
xchg
xchg
inc
pushf
outsl
es
cmp
testl
pop
pop
ds
and
xchg
inc
aaa
xor
or
inc
mov
pop
xchg
push
data16
out
push
sub
mov
mov
adc
cmp
ret
in
call
dec
or
mov
mov
outsl
aaa
adc
adc
ja
popa
xor
das
mov
jno
ds
dec
daa
cmc
adc
sahf
add
inc
mov
jge
iret
clc
aaa
sbb
cmp
ss
xor
and
fwait
mov
ret
out
aaa
popf
cli
mov
add
and
push
sbb
jg
stc
js
add
addb
bound
sub
cli
lcall
movsb
mov
cld
hlt
adc
dec
dec
loop
imul
fldl
loope
sub
ret
pop
aas
xor
cmp
push
shl
xor
test
mov
arpl
clc
imull
jmp
ja
push
stc
mov
test
fldz
mov
jnp
test
fwait
ds
movsb
xor
fidivrl
or
push
pop
sub
repnz
js
int
xor
movsb
pop
inc
pop
bound
repz
rcr
roll
inc
mov
mov
jae
rcll
mov
jne
imul
cmp
leave
mov
outsl
or
cmp
adc
xchg
sub
mov
xchg
cli
in
dec
add
dec
xchg
sbb
stos
xor
add
jnp
cmp
js
sub
jle
and
mov
jnp
stos
xor
jmp
inc
mov
fs
int
xchg
in
call
mov
and
sti
and
jle
sbb
and
sbb
bound
dec
inc
in
out
adc
and
icebp
je
insl
icebp
push
push
cld
pop
out
push
fldenv
loope
push
dec
adc
mov
and
and
jno
stos
xchg
pop
movb
mov
das
or
es
fdivrl
pop
insl
outsl
mov
cmp
mov
inc
test
fisubs
push
dec
push
jno
dec
test
adc
adc
xchg
jle
xchg
loop
jge
inc
mov
mov
stos
add
push
or
sub
lcall
lret
xchg
push
pop
jle
jno
aas
adc
leave
mov
jmp
xor
mov
jl
int3
cmp
mov
shlb
xor
sbb
dec
neg
sbb
nop
call
sbb
fs
add
and
dec
cmpsb
in
xor
sti
fstpl
test
lahf
or
sarb
and
push
adc
xchg
jmp
xor
movlhps
insb
stos
mov
xor
test
jge
stc
adc
popf
das
or
or
mov
mov
aad
cmp
shl
pusha
sbb
loop
mov
bound
andb
mov
std
push
sub
cmp
mov
xchg
adc
lds
and
xchg
mov
fwait
in
dec
into
pop
int
enter
addr16
in
mov
mov
mov
sbb
or
jne
idivl
pusha
mov
btr
addr16
and
outsb
data16
mov
movsb
pop
cmp
pushf
sub
rol
cs
xchg
fidivl
sub
sbb
mov
pusha
lret
and
iret
push
adc
jle
push
inc
test
arpl
pusha
in
pop
lds
mov
pop
xor
test
add
sub
repz
leave
adc
stos
cmp
ss
mov
mov
cmc
jle
xor
imul
subb
inc
or
mul
push
roll
xchg
sbb
jae
lcall
sti
in
sub
push
inc
xchg
inc
mov
std
mov
jb
loop
neg
cmp
movsl
pop
daa
jo
push
mov
aaa
sub
or
mov
mov
cltd
mov
xor
mov
or
adc
fnstsw
xor
ret
and
add
cmp
xor
sub
and
sbbl
mov
stc
out
sub
orl
adc
out
int3
sub
rcrb
adc
adc
or
stos
jno
pop
das
sub
push
addr16
js
push
fstps
hlt
push
hlt
pushf
shr
test
testb
ror
aad
adc
or
popa
scas
jmp
out
add
adc
pop
nop
add
xor
mov
inc
sbb
xchg
pop
imul
in
push
ljmp
mov
out
jo
aas
outsb
sub
pop
jge
sub
push
sbb
aaa
inc
orl
push
imul
xchg
hlt
jmp
jmp
push
icebp
imul
pop
aas
ret
push
nop
adc
lods
mov
pop
add
jbe
pop
test
ds
sbb
mov
xor
add
xor
pop
and
lds
jle
fsub
in
push
sbbb
pop
stos
pop
pop
test
inc
dec
dec
incb
jecxz
jecxz
les
ficoms
lods
fstps
mov
into
ds
pop
stos
popa
pop
movsbl
dec
push
jecxz
sub
sahf
and
or
out
dec
push
mov
dec
fisubrs
icebp
cmp
je
adc
fs
fsts
test
shll
add
mov
out
jmp
jb
into
into
div
fnsave
xchg
rorb
sbbl
sbb
dec
xchg
std
fnstenv
mov
fcmovbe
lea
imul
daa
sub
dec
push
or
xchg
mov
adc
cmp
xor
xor
lock
dec
movsl
insb
sub
icebp
shll
sbb
jp
shll
xchg
pop
sti
aas
or
sarb
fsincos
test
dec
cmpsb
js
fwait
push
xor
sub
adc
enter
inc
xchg
test
es
cmp
sbb
add
pop
fnstsw
repz
pop
nop
jne
stos
lods
in
int3
rol
int3
mull
xor
movsb
sub
stos
loope
es
adcb
arpl
pop
dec
insb
ds
repz
or
mov
loop
dec
repnz
cmpsb
cs
enter
push
dec
and
icebp
stos
inc
in
leave
push
dec
ljmp
and
fs
loopne
dec
jno
mov
aad
and
mov
mov
and
pop
mov
and
les
cmc
xor
inc
arpl
adc
ret
mov
ja
xchg
imul
fstps
push
push
push
inc
fcomi
push
fwait
xchg
pop
adc
cmp
and
cmp
jbe
push
call
sbb
sbb
mov
mov
mov
out
and
sub
das
xlat
lahf
dec
mov
xchg
cmp
cmpl
pop
mov
add
mov
xor
and
sub
lret
fdivl
loop
lods
xchg
dec
pop
movsl
lock
lea
pop
in
xor
xchg
imul
pusha
mov
outsb
hlt
pop
je
js
aaa
push
push
loop
mov
inc
jne
stos
das
cmp
jmp
fistpll
cld
add
scas
pop
stc
pusha
sub
push
popf
ret
or
in
add
enter
sub
adc
pop
pusha
pop
mov
jae
mov
dec
clc
mov
xor
and
inc
subb
int
in
pushf
testb
pop
jecxz
pop
and
aaa
add
and
mov
cmc
add
and
out
jp
jle
inc
push
xor
adc
or
add
lahf
jge
xorl
jg
pop
add
cli
aas
push
mov
scas
mov
add
stos
and
ret
inc
cmp
dec
popf
and
push
ds
aam
dec
imul
popa
or
rorl
mov
sub
lcall
stos
mov
pusha
dec
les
adc
push
push
xor
roll
and
ss
fwait
push
jns
and
adc
mov
int
das
lods
test
addb
push
push
outsl
arpl
fdivs
dec
int3
inc
pop
pop
push
roll
adc
cld
jmp
adc
adc
sbb
jns
aas
iret
sub
nop
int3
and
xor
notl
movb
loopne
xchg
cmp
test
or
cmp
repnz
movsl
cli
mov
lods
jecxz
lret
enter
inc
pusha
push
ss
sub
add
lods
jo
sub
mov
cmp
adc
xor
pop
add
mov
fbstp
adc
mov
mov
inc
or
adc
cmc
paddb
pop
sbb
mov
push
or
in
out
xor
pop
addr16
adc
mov
xor
jae
ss
shrl
mov
inc
add
ja
scas
mov
movsb
or
sarl
jb
sarl
fimuls
push
out
mov
add
adc
cmp
in
roll
dec
movsb
pop
clc
sarb
dec
lcall
xchg
mov
cld
push
out
shrb
fcomi
xlat
fmul
push
pop
mov
push
test
and
cmp
jge
sahf
enter
jmp
outsb
stos
rcl
imul
xlat
pop
mov
sahf
int
jge
adc
mov
leave
fbstp
sub
test
lahf
ficompl
scas
leave
jae
std
mov
push
in
fadd
ret
cs
daa
negb
mov
lods
rorb
pop
loope
add
js
clc
fcmovb
fsubs
shr
arpl
xor
add
icebp
sbbb
dec
loop
hlt
sub
pop
push
fidivl
test
jae
cmp
xchg
pop
call
fisttpl
sub
rolb
push
push
sub
movsb
mov
lods
mov
mov
fmul
add
icebp
les
popa
push
mov
mov
ret
xorl
and
lret
gs
xchg
fwait
cli
mov
jo
xchg
sbb
or
push
mov
add
cmp
out
cmpsl
push
cmp
sbb
jl
icebp
test
sub
andl
scas
adc
lahf
out
out
dec
mov
sub
inc
popl
and
or
xor
mov
pusha
dec
and
dec
outsl
pop
mov
das
outsl
out
not
xchg
jne
outsb
inc
cmp
int
push
ror
mov
in
jg
mov
daa
xchg
xor
sbb
sbb
jg
notb
jge
movsl
mov
and
shl
push
inc
test
push
mov
sub
popa
mov
jg
je
stos
int
and
adc
jb
ret
insb
mov
test
push
fildll
int
add
fidivs
mov
or
in
or
dec
mov
adc
into
mov
pop
mov
fwait
aad
jl
fbld
inc
pop
inc
addr16
cmp
jb
ret
cltd
sub
in
lahf
push
pop
xor
jge
pop
lds
xor
rorl
loope
jnp
or
ret
flds
fimull
divl
xor
insl
scas
in
les
and
mov
stos
dec
std
cwtl
enter
adc
mov
mov
mov
cld
pop
imul
or
sbb
mov
ror
adc
cli
clc
mov
shll
xor
lret
and
cwtl
or
mov
ret
iret
test
add
into
lret
mov
shl
movsl
fcompl
xchg
sub
popa
enter
ror
mov
sarl
sbb
jo
dec
pop
cmpsl
push
fistpll
push
mov
pushf
adc
mov
xor
sbb
in
push
push
cld
push
mov
xor
sbb
inc
in
add
inc
gs
cs
inc
outsb
add
mov
gs
sti
fldcw
movsl
incl
es
int3
or
popa
mov
sahf
das
push
push
dec
sub
jp
and
or
push
orb
daa
jbe
outsl
pop
xor
and
test
and
inc
sub
pop
orb
sub
shll
test
lea
mov
fldt
les
pop
mov
std
ss
dec
push
scas
mov
jp
dec
pop
stos
jmp
mov
sub
iret
insl
add
loop
aas
cwtl
fadd
insb
sub
cmp
daa
mov
fldl
push
mov
lods
ljmp
aas
inc
mov
xor
add
movsb
dec
lods
jl
xor
push
mov
mov
hlt
ficomps
or
add
xrelease
mov
mov
cmp
adc
outsl
sub
test
je
testb
testl
push
adc
push
or
or
into
in
aaa
sbb
xor
jbe
shrl
or
and
xor
in
adc
inc
pop
in
push
pop
xchg
jecxz
adcl
popl
push
sub
lods
aad
jmp
dec
stos
fists
sahf
mov
fsubrl
fldl
inc
cmp
loope
cmpb
std
clc
divl
mov
and
mov
add
fmulp
fiadds
mov
dec
inc
stc
mov
jl
ds
push
ret
lret
outsb
xor
mov
xchg
int3
mov
push
push
push
or
xchg
jno
mov
mov
push
and
mov
outsl
adc
stos
pop
cmpsl
jae
jnp
mov
mov
pop
xchg
negl
fmul
out
jle
in
fld
mov
test
add
lahf
fbstp
sti
push
cmp
loopne
cmp
rolb
sub
mov
xchg
imul
into
mov
sub
addr16
icebp
daa
xor
ds
xor
jge
or
in
data16
loopne
push
enter
push
fwait
outsb
movsb
adc
lret
popa
mov
sbb
pop
enter
addb
add
ds
in
shll
mov
sub
fwait
inc
push
mov
repz
daa
out
stc
lea
mov
mov
test
shrb
or
add
loopne
lret
and
mov
test
and
inc
mov
lahf
lret
aam
rcl
aaa
subb
sbb
mov
pop
pop
jg
cli
ss
mov
or
sbb
pop
xchg
push
sub
pop
iret
mov
daa
and
cli
sub
into
test
pop
cmp
dec
mov
negb
and
out
dec
pop
push
and
adc
push
sbb
test
sahf
mov
xor
dec
gs
sub
ljmp
pop
xor
repnz
sti
and
hlt
add
lret
sub
or
mov
xchg
loopne
mov
or
mov
out
inc
lea
pop
test
loopne
push
pop
xor
xor
lahf
iret
mov
xor
gs
lods
dec
cli
mov
fiadds
dec
xchg
inc
xlat
jmp
jae
cli
call
fwait
jb
jmp
push
rol
hlt
pop
pop
mov
scas
pop
stos
nop
out
add
push
adc
pop
cs
and
jecxz
stc
lods
les
outsb
test
subl
scas
sarw
push
stc
mov
repnz
sbb
add
mov
sbb
mov
mov
repnz
mov
mov
bts
inc
sbb
test
mov
and
dec
xchg
imul
les
inc
dec
and
movsl
sbb
mov
stos
or
adc
or
inc
jl
lret
and
stc
add
lds
add
fisubrl
cmpb
mov
call
arpl
lret
jae
mov
jnp
sbb
pop
push
mov
inc
pop
pop
popf
mov
sub
fstl
inc
adc
push
aaa
cwtl
addr16
addb
sti
pusha
xchg
or
jne
add
jmp
divl
adc
xchg
dec
test
jbe
push
jae
dec
mov
ficompl
roll
mov
adc
popa
sub
das
cwtl
lcall
push
jmp
sbb
fwait
gs
lock
adc
inc
add
out
sub
pop
inc
or
and
test
mov
pop
pop
and
mov
sbbb
mov
cli
int3
and
pop
or
andl
inc
rorb
bound
jp
ret
call
or
cmpb
insb
les
mov
and
jo
xchg
mov
sbb
mov
dec
cmp
fnstcw
mov
xchg
push
cmp
sarl
dec
test
xor
leave
scas
push
sub
fstl
fadds
xor
iret
rorl
scas
aaa
fists
dec
stos
out
sbb
sbb
sub
gs
cld
leave
cltd
test
ret
mov
hlt
ljmp
out
js
dec
pop
adc
into
outsb
daa
ss
adc
popf
ret
xchg
and
and
andl
push
xchg
ror
shl
push
cmp
repnz
jmp
jb
jl
lret
dec
pop
clc
shlb
int
pop
ja
and
pop
repz
cmpsb
jbe
es
pop
sti
je
dec
enter
iretw
fwait
sar
push
lret
icebp
fmull
pop
es
push
xchg
or
cmovp
mov
out
clc
cmp
scas
cmp
js
dec
xchg
mov
stos
leave
stc
sub
sub
iret
mov
fwait
test
lret
fsubs
mov
sahf
push
xchg
fistpll
xchg
cs
jnp
mov
inc
rorb
ds
negl
popa
mov
inc
idiv
nop
ja
std
adc
xlat
pop
xor
and
jnp
outsl
ja
leave
push
push
xor
cmp
mov
dec
mov
pop
rcrl
add
or
mov
lahf
divb
testb
test
xor
cwtl
dec
xchg
push
sbb
inc
cmp
sub
icebp
cmpb
mov
inc
jno
mov
adc
pusha
divb
fimuls
push
outsb
inc
ja
jle
xchg
dec
sub
mov
aad
fmull
sar
imul
out
sar
xor
das
mov
js
imul
mov
adc
inc
lds
push
jne
or
ds
pop
xchg
fisubrs
inc
imul
cmp
add
sub
outsb
cmp
sbb
push
popf
adc
cmovg
jo
mov
les
je
in
xchg
fidivs
lret
inc
push
xchg
xlat
stc
subb
sub
in
insl
addb
fs
mov
insl
dec
into
xchg
push
jbe
rolb
sub
test
push
int3
jns
add
mov
cld
daa
out
push
mov
sub
push
mov
inc
mov
pop
mov
mov
mov
dec
pop
inc
sti
mov
or
and
pop
xor
mov
daa
test
fstl
in
adcl
or
pop
or
lahf
add
lock
cmp
push
test
sub
add
fwait
xor
or
lahf
adc
mov
pop
pop
lea
cmp
cmovs
sbb
mov
ror
adc
add
push
pushf
pop
and
aam
loop
mov
or
lods
call
outsl
sub
adc
in
hlt
cmp
fdivr
adc
arpl
push
mov
ljmp
xor
in
pusha
mov
mull
or
pop
xor
and
mov
popa
and
add
mov
gs
dec
pop
xlat
push
rcrb
gs
js
mov
mov
fildl
in
mov
adc
xchg
lahf
mov
xor
mov
test
aam
shrb
cli
and
mov
sbb
mov
stc
dec
jge
push
sub
xor
mov
mov
mov
sub
push
and
loopne
sbb
stos
cmp
pop
and
call
pop
mull
xlat
aam
sbb
mov
sti
mov
rorb
cmc
repz
dec
rorl
into
mov
in
mov
cmp
push
xchg
jns
sbb
jns
inc
fmull
xor
mov
leave
das
movsl
pop
inc
xchg
cmc
xchg
fdivp
inc
mov
test
adc
cmpsb
lret
mov
jno
sarl
in
aad
xor
subl
clc
aad
out
testb
dec
mov
aaa
scas
cmp
insl
insl
sbb
out
sub
push
xor
bound
adc
into
addr16
dec
inc
xchg
insb
into
pop
pop
loop
sahf
push
push
stos
pop
xchg
push
mov
sub
mov
repz
jnp
leave
in
mov
inc
loop
jmp
jb
add
sub
daa
jno
xchg
and
inc
sahf
inc
out
cwtl
test
inc
bound
inc
mov
push
icebp
xchg
fsubs
jb
mov
xor
pop
leave
dec
gs
sub
imul
ljmp
push
int
lahf
mov
cmp
repnz
sbb
fs
lret
loope
jae
jp
sbb
cmp
and
js
fisttpll
xor
fidivs
add
js
into
sbb
inc
pusha
mov
outsl
add
push
jne
pop
sbb
insl
sub
push
mov
pop
push
push
jo
popf
inc
jnp
jo
add
mov
xor
or
xchg
cmp
cmp
xorb
pop
xlat
std
js
and
sub
mov
mov
fs
shl
test
adc
xchg
push
in
dec
icebp
pop
xchg
lods
and
jb
mov
adc
into
pop
cmp
xor
das
dec
xchg
in
cmp
cwtl
jge
into
inc
mov
and
sub
or
popf
mov
cmp
pop
dec
enter
repz
int
fs
jb
and
mov
ficoms
mov
xor
jmp
and
dec
mov
push
loope
jo
xor
aam
mov
add
adc
jp
inc
popa
stos
mov
aad
dec
ss
das
pop
inc
loope
addb
xlat
in
es
xor
arpl
sub
fstpl
cli
cmp
in
notb
adcl
mov
jae
xchg
ss
data16
or
push
mov
jno
loopne
sbb
mov
adc
ja
and
lret
xor
std
aam
sub
add
ds
mov
in
cmp
push
je
and
jle
pop
fmuls
xchg
iret
mov
bound
insb
enter
adc
xchg
pop
sbb
fsubrp
ffree
adc
ja
push
sub
xchg
and
lret
ror
adc
adc
and
ljmp
sub
test
cmpsl
mov
notl
addr16
cmp
mov
ss
or
test
int
jl
jl
cmp
dec
aam
mov
shll
push
sbb
in
mov
xor
pop
scas
dec
cmp
sub
jl
sub
icebp
cwtl
or
cs
inc
mov
rolb
mov
out
insb
mov
xchg
inc
ljmp
dec
cmp
xor
push
or
ss
aas
ss
pop
jle
lds
mov
pop
adc
aas
aas
adcl
rorb
xchg
popf
inc
cmpb
bound
jl
xchg
fldt
xchg
scas
xor
dec
popf
ret
fadds
test
in
dec
jns
pop
cs
sub
call
or
lcall
icebp
mov
sub
add
xchg
stos
mov
push
enter
inc
xchg
mov
in
lods
in
sbb
xchg
test
mov
mov
loopne
inc
xor
sub
push
sbb
sbb
outsl
xchg
lret
inc
xor
xor
fldenv
cmp
sti
mov
jmp
sbb
out
lds
push
xchg
in
pusha
mov
roll
test
xor
adc
push
push
addb
sub
sub
and
inc
movsl
xor
or
into
test
jmp
pop
and
das
mov
mov
rorl
sub
xor
incb
pop
inc
aad
aaa
test
or
cmp
inc
sbb
jg
push
jecxz
fs
adc
pop
jl
daa
pop
ljmp
push
cltd
js
das
sti
fimull
or
add
sbb
shlb
imul
dec
mov
cmpsl
and
pop
or
adc
xor
repz
mov
mov
cltd
ret
cmp
push
nop
fidivrs
out
xorl
jmp
popf
or
arpl
sub
sub
add
in
dec
ljmp
xchg
call
fwait
and
out
dec
aaa
cmp
dec
addr16
add
jbe
adc
mov
icebp
mov
fisubl
jo
and
add
leave
lret
mov
push
mov
stos
or
bnd
aaa
pop
fsubs
or
xor
dec
push
push
mov
pop
pop
neg
test
ds
jnp
ja
cmp
mov
dec
or
or
dec
lret
es
addl
sti
push
push
jge
mov
sub
pop
add
das
fs
adc
or
sbb
test
lods
rorb
enter
movd
xor
inc
cmp
sub
ds
jle
imul
lods
imul
xchg
mov
xchg
ljmp
mov
andb
dec
sbb
jp
orb
cmc
pop
xchg
mov
sbb
adc
cmp
and
jmp
bound
ficomps
lret
push
inc
insl
arpl
inc
pop
xor
ucomiss
bound
pushf
adc
notb
leave
fdivl
icebp
icebp
xchg
sahf
btcl
in
pop
lret
xchg
push
outsb
into
add
in
sbb
jne
data16
mov
outsl
inc
pop
pop
dec
cmp
sub
adc
mov
inc
stc
inc
ja
pop
leave
rcrb
pandn
jp
aaa
dec
mov
icebp
inc
aaa
mov
xor
out
inc
or
js
push
ret
jno
out
sbb
push
mov
andl
xchg
pop
nop
std
adc
xchg
adc
test
enter
dec
xchg
inc
fcoms
dec
or
stc
cmp
xor
dec
pop
pushf
imul
mov
mov
int
adc
es
cmc
fimull
mov
shr
mov
hlt
push
shl
cli
push
mov
jge
inc
push
or
dec
out
mov
incb
mov
ds
pop
out
xchg
pop
jno
ret
test
mov
push
xor
cmp
fisubrs
add
adc
test
xchg
lahf
aas
push
mov
fdivl
gs
shlb
add
xor
add
test
daa
mov
sahf
push
test
mov
out
push
xchg
sub
xchg
pop
ret
or
cwtl
insb
push
pop
mov
dec
mov
fs
test
inc
jp
dec
stos
shl
or
add
jnp
fs
pop
push
idivb
gs
xchg
mov
mov
fwait
insl
cld
or
out
xchg
cwtl
xor
push
jmp
lcall
loopne
lds
daa
sbb
cld
movsl
or
dec
mov
adc
test
in
sbb
fisubrl
test
mov
mov
mov
jno
xchg
in
adc
and
add
outsb
dec
int3
lret
in
lods
dec
add
test
xchg
mov
notl
push
fsub
push
rcll
and
mov
es
movsb
nop
xor
aas
incl
call
or
xor
imul
mov
xchg
dec
lods
sarb
je
stos
add
cli
dec
decl
test
mov
sqrtps
sbb
mov
stos
mov
mov
dec
jle
enter
aas
mov
test
push
cmp
or
sbb
clc
mov
pop
lret
pop
shll
and
arpl
ja
sti
out
int3
rol
or
or
jge
xchg
cld
fisttps
movsb
dec
inc
jne
xchg
push
cltd
jp
in
popa
mov
lods
add
popf
xchg
jecxz
mov
and
out
and
lods
insl
mov
jp
mulb
xor
add
andb
push
push
inc
mov
aad
sub
and
add
sahf
iret
lret
pushf
ss
popf
repz
push
add
add
inc
sbb
dec
fnstenv
pop
test
jg
pop
sti
cltd
dec
cld
clc
shr
cmp
jbe
ror
mov
cmp
fmul
inc
jp
cwtl
or
mov
fists
add
xchg
leave
mov
ds
dec
cld
push
push
dec
icebp
fmulp
lahf
and
mov
adc
lods
cmp
scas
cmp
cmp
pop
sbb
shlb
dec
mov
int
add
enter
lods
adc
push
jns
xchg
inc
ja
mov
popa
jl
enter
xchg
pop
adc
cmp
add
stos
lea
out
inc
mulb
or
in
jbe
dec
sub
sar
and
and
jmp
pop
repnz
aam
cmc
mov
cmp
test
jge
push
xor
adc
jp
lcall
and
imul
daa
dec
push
into
push
jo
push
sti
xchg
adc
sbb
iret
inc
outsl
cmp
in
sar
mov
xchg
cmpb
fprem
into
mov
daa
call
mov
xchg
andb
or
addr16
sbb
lret
mov
pusha
push
rdpmc
dec
and
adc
das
fwait
clc
ret
fprem
test
sub
mov
repz
lock
iret
lret
xchg
shlb
test
jo
sub
sub
mov
mov
jmp
sti
mov
into
push
pop
xor
and
pop
test
cwtl
mov
mov
add
sub
insb
push
lods
xlat
or
into
push
sub
mov
sbb
mov
cmpsl
shrb
pop
inc
mov
cmp
sub
nop
pop
loope
lods
sbb
insl
fadds
insb
add
insb
xchg
cmpsb
ret
pusha
xorl
scas
and
fisttps
push
xchg
jecxz
cmpsl
adc
lret
push
add
push
fdivs
mov
or
mov
xor
lcall
mov
jmp
or
or
mov
mov
cmpsl
pushf
int3
ss
jae
cmpsb
leave
lds
push
xlat
mov
or
pop
pop
jmp
fnstcw
jp
lret
dec
xchg
adc
clc
vshufps
enter
jo
js
mov
push
mov
mov
js
mov
dec
push
dec
adc
xchg
ljmp
das
je
adc
dec
insl
add
pop
and
pop
ret
push
mov
test
fildll
xchg
sbb
aam
pop
mov
cwtl
in
or
mov
dec
and
cmp
scas
scas
push
mov
aaa
sub
pop
cmp
loopne
adc
inc
cltd
dec
fbstp
jo
adc
imul
jns
mov
lds
rol
xor
or
pop
fistps
inc
aas
pop
mov
and
loopne
test
mov
pop
xchg
xchg
push
jno
shll
ss
xchg
pop
aad
jb
push
flds
push
sub
ret
adc
aaa
mov
cmp
jg
imul
nop
sbb
cmp
fs
inc
addr16
not
lcall
bound
ret
je
jl
mov
xor
inc
mov
pop
lds
lds
clc
sub
out
xchg
xchg
scas
popa
and
mov
lret
imul
outsb
mov
dec
push
jp
in
loope
dec
sarl
jg
mov
shll
shlb
xchg
call
pop
inc
push
pusha
xor
stos
or
inc
pop
add
push
enter
xchg
movsb
lods
cmp
addr16
scas
push
sbb
fwait
xchg
lods
mov
nop
xchg
xor
lret
xchg
sarl
shrb
lds
jbe
repnz
movsb
mov
cs
jmp
pop
or
cmp
or
cli
movsb
mov
dec
inc
orb
cld
and
push
negb
in
mov
pop
jne
lret
leave
mov
xchg
fistps
sbb
sub
subb
inc
pop
sub
cmpsb
rcr
mov
in
mov
sbb
mov
pop
mov
pop
xor
mov
stos
loopne
sbb
add
shll
and
cmp
mov
pushf
sahf
xor
popf
fdiv
pop
sti
mov
ss
and
movsl
loopne
xchg
ret
enter
lods
push
adc
xchg
ljmp
mov
cli
dec
sbbl
dec
cmc
dec
sub
loop
inc
sbb
or
fnstsw
sti
adc
fdivs
lret
dec
and
fdivrl
cmp
lock
int
xchg
test
pop
add
push
lds
add
mov
and
adc
ret
outsl
ret
dec
mov
inc
aas
or
add
push
fwait
mov
ret
outsl
jb
stos
cmp
test
lret
mov
xchg
jb
mov
outsb
ret
xchg
das
and
and
scas
sarl
push
mov
movsb
sub
mov
movsb
pop
pop
movsb
jae
pushf
lods
imul
mov
sbb
cmp
pop
lds
fwait
subb
mov
jbe
xchg
mov
jbe
std
or
add
popf
je
sub
ret
enter
xchg
jbe
inc
xchg
sbb
ljmp
adc
adc
in
sahf
pop
dec
cltd
sub
mov
pop
and
fcmovu
sub
jl
scas
dec
push
int
push
fdivrp
mov
pusha
jnp
das
loope
nop
xorb
push
xchg
adc
jns
sbb
add
popf
movsb
bound
insb
stos
hlt
push
jmp
push
fidivs
mov
lret
jle
out
shlb
loop,pn
popf
dec
xor
dec
ljmp
or
sub
loopne
js
outsb
lret
stos
call
cmpsb
shlb
mov
xor
cmp
in
cmp
cltd
and
mov
cli
int
or
les
mov
or
xlat
push
pop
jl
sub
rcrl
and
adc
inc
imul
popf
add
jb
subl
mov
test
popa
sarl
push
arpl
icebp
cmp
and
inc
jle
out
sub
stc
aas
int
repz
dec
test
jo
xchg
int
shr
jno
push
and
lock
inc
and
imul
push
jecxz
ds
push
rorb
dec
aad
mov
xchg
fiadds
adcl
int3
cmpsl
cmp
das
movl
or
bnd
mov
mov
xchg
or
and
in
cmpsb
sahf
repnz
cwtl
add
testb
repnz
mov
push
pmaddwd
outsb
inc
lret
sbb
push
add
outsb
data16
xchg
fwait
mov
pop
mov
enter
adc
or
dec
sub
insl
inc
ret
and
icebp
faddp
push
dec
inc
mov
hlt
test
adc
arpl
cmpsb
je
insb
xor
imul
cmp
lea
xchg
fwait
push
inc
adc
dec
dec
test
xor
movsl
lahf
int
inc
in
ja
shll
lret
mov
sub
ds
cmp
or
pop
cmpsb
imul
sub
stos
fildl
out
jnp
scas
pop
outsl
cmp
sbb
lret
out
adc
or
out
std
push
cwtl
fistps
rorb
add
mov
push
cmp
cmpsl
sub
cld
mov
insl
js
fcompl
xchg
movsl
xor
add
cs
imul
cmp
cli
push
lods
popa
mov
pop
xchg
fstpl
mov
mov
mov
das
popf
mov
or
dec
mov
andl
mov
xchg
lods
add
mov
sbb
cmp
test
bound
push
fdivl
pop
movsl
repnz
cmp
dec
jbe
lcall
sbb
imul
sbbl
push
push
fcmovb
scas
adc
hlt
arpl
cltd
jge
xor
dec
mov
xchg
lock
scas
jo
cmp
push
sbb
mov
inc
neg
jne
in
cmp
inc
inc
aas
mov
sbb
and
psraw
das
mov
pop
and
int
mov
out
hlt
int
mov
jl
jnp
push
mov
mov
inc
imul
clc
negl
sarl
fldl
in
in
pushf
add
jbe
sti
sub
xchg
cmp
push
test
mov
call
in
xor
sub
sub
mov
mov
mov
mov
sbb
shll
xchg
and
ret
pop
jmp
in
pushl
xor
mov
dec
cmp
or
and
sti
and
xchg
cmpl
rcll
cmovb
jge
repz
ljmp
xor
je
outsl
pop
shll
movsl
sub
cmp
enter
jbe
jp
jg
or
outsb
dec
jbe
lret
cmp
cltd
xchg
or
addr16
sbb
cmpl
in
push
repz
mov
ret
ficoms
or
pop
jg
mov
xlat
and
cwtl
pop
cli
andb
mov
fbstp
loop
xor
imul
ss
stos
into
test
pop
das
bound
sub
cltd
add
pop
lods
mov
jle
iret
sub
outsl
das
lock
fs
or
lcall
add
mov
mov
xor
sbb
iret
xchg
cmpsl
mov
in
hlt
std
imul
mov
mov
mov
mov
fisubs
popa
sub
shrb
dec
pmulhw
sbb
dec
push
outsb
dec
add
sub
ficoml
lea
or
sahf
and
shll
push
shll
movsl
dec
call
inc
push
and
push
popf
push
repz
sarl
repz
xchg
pop
mov
mov
es
sub
dec
push
mov
mov
jno
aad
xor
stos
or
sbb
decb
adc
dec
enter
lock
sbb
std
mov
push
mov
dec
and
dec
outsl
pop
cmpb
loop
cmp
sbb
adc
fdiv
into
scas
mov
in
cmp
mov
mov
cmpsb
lods
rorb
inc
pop
test
push
xchg
adc
das
dec
addb
dec
push
pop
lea
ss
mov
cwtl
pop
and
mov
jl
cmp
push
adc
ljmp
adc
hlt
and
ret
enter
adc
repnz
xchg
shlb
std
jo
xchg
mov
inc
hlt
cld
mov
cli
sub
out
jge
shll
cs
mov
mov
mov
out
dec
inc
dec
test
pop
xchg
dec
test
xchg
dec
inc
inc
sbb
mov
cmp
in
xchg
insb
inc
ss
add
arpl
aaa
es
xlat
clc
rcl
scas
pusha
dec
insb
insb
ds
fnstsw
fstl
cmpsb
inc
aam
adc
loope
es
cs
xchg
push
adc
xchg
ficompl
repnz
adc
les
xchg
je
loopne
mov
sub
mov
stos
mov
push
pop
test
out
dec
out
int3
add
inc
dec
adc
mov
sub
das
fstpl
or
shrl
fs
adc
xchg
shll
jecxz
push
imul
mov
jge
into
negb
int
leave
mov
mov
lea
xor
out
ds
mov
and
add
and
jo
and
cmp
pop
scas
or
jg
cmp
lea
data16
cld
stc
sub
xchg
lret
push
sbb
mov
lcall
popa
insb
or
sbb
pushf
sbb
addr16
je
pop
sub
xchg
and
xchg
dec
and
inc
mov
xchg
mov
int3
scas
orl
adc
testb
push
mov
xor
cmp
cmp
cmp
adcb
sub
je
out
rcrb
lods
mov
out
xchg
or
stos
cmp
mov
shlb
imul
xor
hlt
push
mov
sahf
dec
or
shl
cld
pop
and
shrb
in
fs
sub
jae
aas
dec
push
sub
push
push
popf
mov
cmpsb
cmp
bound
bound
dec
rolb
sub
mov
mov
ror
fs
cmp
mov
push
sub
ror
pop
mov
push
mov
xlat
and
dec
popa
repz
xor
jns
fdivs
push
and
outsl
test
adc
jg
fnstenv
dec
int
shlb
adc
in
out
sbb
adc
test
mov
xchg
cmpb
nop
rclb
lret
jmp
jae
sbb
xorb
stos
dec
hlt
enter
jae
ja
or
pop
push
lret
rolb
in
pop
mov
rol
dec
bound
idivb
sti
cs
pop
pop
data16
stc
mov
pop
jns
jmp
sub
outsl
cld
xor
sub
nop
pop
mov
test
shr
cmp
mov
mov
mov
or
ficoml
lahf
push
iret
out
xchg
mov
fdivrs
mov
and
xor
mov
mov
arpl
push
cmc
mov
add
stos
shlb
sahf
sbb
mov
scas
in
push
les
insb
cmp
lcall
jo
jnp
pusha
sbb
xor
fidivrl
shrl
cmp
stos
rorb
sub
push
hlt
les
lcall
movsl
push
mov
in
fstps
xchg
pop
xchg
push
mov
jp
repnz
mov
add
sbb
pop
loopw
repnz
test
jne
sti
das
pop
add
pop
push
daa
sub
jl
cmc
sahf
jmp
xor
mov
decb
mov
sub
sti
lea
es
imul
sbb
enter
xchg
scas
ja
test
cmp
mov
movsl
sub
adc
mov
xor
lds
xchg
or
pop
out
push
clc
pop
fwait
mov
mov
cmpsb
jecxz
fsubs
push
jb
sbb
add
jl
ss
aam
or
int3
push
mov
stos
das
popf
mov
mov
ja
xchg
mov
and
add
cmp
pop
loope
jl
jb
lret
imul
es
adc
bound
adc
scas
inc
or
ja
mov
push
mov
pushf
jl
xor
push
cmp
fcmovnb
lock
add
fbstp
push
cltd
dec
testb
les
insl
pop
adc
cld
leave
pop
outsl
jge
push
mov
shll
and
cmp
shll
test
pop
rorl
aad
jge
push
fs
jmp
xor
int
aam
xor
fstps
inc
sub
mov
movsl
aas
movsb
pusha
sbb
out
out
fsubs
sub
in
mov
add
movsl
jns
mov
mov
mov
adc
xchg
cwtl
xor
push
xor
xchg
stc
sbb
in
dec
fbstp
cld
push
int3
sbb
test
add
sbb
xlat
cwtl
xchg
hlt
push
or
cwtl
adcl
addr16
add
dec
fldenv
mov
arpl
cmp
pusha
clc
leave
sub
push
fbld
test
push
bound
test
push
inc
lret
xor
inc
mov
clts
push
cmc
mov
jbe
and
xorl
int
in
and
or
push
out
add
inc
pop
pop
inc
inc
insb
jae
sub
and
mov
jae
pop
rorl
jl
pop
or
mov
sub
sbb
icebp
xchg
or
pop
aaa
jnp
mov
mov
notl
out
ret
movhps
adcl
andb
lods
push
jnp
sahf
xlat
daa
mov
ret
out
pop
or
jb
scas
push
testb
jb
aam
sbb
fistpl
mov
lcall
out
xorb
mov
mov
jle
in
inc
cwtl
push
jmp
xor
or
lret
call
loope
insl
pop
mov
in
or
fsub
faddl
je
in
pop
xchg
or
lods
inc
testl
adcl
mov
inc
xor
stos
jnp
pusha
jae
jns
dec
jl
daa
cs
xchg
out
stos
inc
and
and
popa
ja
dec
je
insb
dec
repz
mov
dec
out
inc
jl
stc
jge
loop
daa
lock
xchg
dec
out
pop
xchg
icebp
adcl
or
lahf
movsl
fs
dec
mov
push
jl
js
test
ret
call
push
mov
fcmovu
loop
xchg
sbb
or
cmp
jnp
je
test
mov
fstpl
cmp
jbe
test
cwtl
push
xor
daa
cmp
jmp
popa
jp
and
rep
setbe
rorb
jp
hlt
mov
loope
test
test
movsl
or
push
mov
fiaddl
and
dec
out
and
xchg
lods
lcall
adc
and
daa
imul
cmp
xchg
adc
jg
imul
push
loopw
mov
pop
in
xor
pusha
inc
insb
push
roll
mov
aam
idiv
stos
loopne
aaa
scas
popa
addb
pop
aad
add
mov
addl
gs
into
in
mov
out
pop
xchg
mov
arpl
push
pop
jl
cmc
push
movsb
sub
pop
scas
xor
jno
mov
or
mov
inc
out
mov
bt
xchg
ja
shl
pop
jnp
inc
sbbl
insb
dec
xchg
fmuls
loopne
popa
gs
lret
xorb
jg
pop
addr16
jmp
lock
sbb
inc
add
inc
enter
xor
aas
sahf
pop
stos
pop
or
xor
xchg
push
arpl
loope
es
or
mov
jl
into
scas
frstpm(287
mov
adc
mov
pop
jno
fmul
lret
test
xor
mov
cli
cmp
mov
or
cs
js
xchg
ret
stos
push
add
test
mull
inc
shlb
adc
jo
ret
add
xchg
scas
test
sub
mov
cli
stos
test
xchg
jo
aad
mov
minpd
jmp
jae
addl
inc
xchg
inc
xor
add
mov
mov
xchg
pop
cmp
cmp
stos
inc
pop
inc
sub
dec
sysret
dec
or
add
jns
inc
mov
lret
int3
mov
mov
xchg
pop
mov
sub
shlb
add
movsl
sub
adc
push
mov
testl
mov
jae
aad
jle
adc
dec
xor
cld
outsb
es
sub
lret
pop
add
mov
insl
inc
in
jge
xchg
sub
add
and
ljmp
mov
adc
mov
daa
and
mov
rorb
test
cmp
aas
cmp
inc
adc
fldcw
mov
andb
mov
insl
adc
in
xor
push
mov
unpcklps
mov
lret
sub
fcmovnu
fisttpll
add
inc
jg
jbe
ret
add
xchg
int3
jg
arpl
out
push
and
insl
stos
lahf
out
out
xor
dec
sbb
jl
test
test
fmuls
mov
push
pop
clc
sub
and
adc
jl
loop
pop
testl
mov
cmp
jmp
mov
pop
outsl
hlt
inc
mov
mov
loopne
or
mov
fmuls
ljmp
pop
adc
cmc
aad
add
push
push
jb
jnp
jb
out
clc
enter
out
xchg
cmp
inc
adc
adc
mov
jge
xchg
sub
push
sub
adc
jp
les
lcall
xchg
xchg
es
jl
js
loop
mov
cltd
stos
push
fnstenv
ficoms
jo
inc
sbb
nop
leave
lock
ret
or
sub
pop
inc
dec
cmp
mov
push
push
add
outsb
xchg
xchg
and
ljmp
adc
sbb
xchg
test
lret
dec
in
ljmp
hlt
jge
jmp
fldcw
pop
es
mov
jae
xchg
and
jmp
enter
jmp
xchg
lcall
fwait
mov
xor
ret
shrl
mov
lods
test
enter
lret
pop
fs
arpl
sbbl
fdivrl
test
cwtl
sub
mov
sbb
xor
sub
movsl
gs
pop
sti
aas
sahf
in
gs
xor
or
aam
out
mov
pop
push
pusha
xchg
cmp
scas
bound
adc
popa
dec
loope
cmp
out
xchg
mov
mov
shll
pop
shr
shll
sahf
mov
sahf
sar
cmp
test
xor
cmp
dec
pop
mov
add
scas
or
mov
addl
add
pop
xchg
mov
call
js
dec
jns
xor
addb
push
dec
insb
int3
lahf
sbb
mov
popf
add
insb
aad
fmul
add
and
test
jmp
test
outsl
sub
pop
sub
pop
mov
mov
insl
xchg
pushf
out
pop
jecxz
pop
or
adc
sti
lahf
je
insb
xchg
adc
add
lahf
sub
popf
shld
neg
out
push
add
xor
outsb
add
push
stos
pop
adc
inc
push
mov
jge
lret
pop
and
xchg
push
pop
in
dec
cmp
mov
icebp
roll
mov
addr16
fistpll
dec
mov
sub
xor
and
add
inc
inc
incl
xchg
sarl
pop
in
sbb
sbbb
mov
jbe
sub
or
cmp
adc
sbb
mov
fwait
inc
es
popa
push
rol
jno
push
lret
sub
in
and
xchg
js
mov
xor
mov
fadds
push
inc
xchg
jns
push
sub
sahf
mov
rcl
sbb
pop
call
in
push
in
jne
cmc
add
add
loope
mov
mov
clc
mov
bound
enter
mov
jb
sbb
push
testl
fdivrl
nop
repz
sub
mov
dec
or
in
loope
cmp
inc
clc
jge
mov
dec
xchg
pop
pop
sub
testl
test
mov
cli
gs
mov
das
subl
out
inc
xor
dec
sub
aam
in
inc
cmp
fs
into
imul
mov
cmpsl
sub
out
pop
rol
insb
insb
push
stos
lahf
sahf
mov
pop
ljmp
jl
dec
gs
jo
push
dec
push
mov
sbbl
add
mov
xor
loop
push
sub
jo
rcl
mov
push
in
ss
mov
cmp
mov
inc
pop
test
sarb
repz
cmp
int
pop
pop
or
dec
test
lods
adc
testb
test
in
arpl
or
in
xchg
xchg
adc
icebp
jno
fmul
lds
and
add
rcrb
pop
scas
inc
mov
cltd
test
mov
xor
push
push
mov
movsb
int
xor
sbbl
ss
jne
push
jb
or
loop
js
cmp
and
sub
outsl
sahf
xchg
ss
jp
addl
fcmovnu
in
aam
xchg
ficoml
cltd
dec
add
and
mov
mov
or
aam
call
or
stos
out
sbb
in
sbb
pop
adc
rorl
jne
aad
push
fcomps
arpl
push
es
cwtl
clc
xor
pusha
popf
sti
adc
lcall
mov
cwtl
inc
in
jns
sbb
cmp
es
adc
ds
into
dec
cmp
jb
negl
jo
sub
out
push
xchg
mov
fcmovbe
xchg
xor
xchg
lds
xor
cwtl
mov
dec
push
lret
lret
movsb
in
sahf
mov
shrl
nop
fistps
arpl
repnz
or
xor
rcll
out
inc
jge
test
jb
mov
fbld
xor
jp
inc
sbb
lds
and
jle
mov
js
mov
ffreep
lock
jae
adc
or
pop
scas
mov
pushf
scas
popf
sarl
cltd
lea
push
inc
jmp
lahf
mov
cmc
jnp
and
sahf
xchg
mov
mov
dec
xchg
jb
cs
les
xor
dec
mov
xlat
lahf
mov
inc
inc
adc
in
scas
icebp
pop
add
pop
int
ljmp
lods
mov
pushf
push
mov
sbb
mov
jo
xor
adc
addl
ja
or
cmp
mov
pop
mov
int3
mov
popl
das
mov
insb
mov
xchg
idivb
push
mov
push
xchg
es
or
leave
test
add
shlb
xchg
scas
or
cmpb
int
sarl
mov
in
mov
aaa
pop
dec
mov
loope
inc
xor
out
inc
aaa
shl
loop
out
inc
adc
sahf
pop
and
arpl
gs
sarl
cmpsb
stos
mov
test
mov
add
mov
ret
sbb
movsb
push
outsl
add
push
mov
jno
add
sub
dec
repnz
push
subl
mov
inc
inc
mov
lods
and
ljmp
jne
mov
or
pop
dec
rolb
sbb
or
loop
fs
dec
repz
iret
scas
jle
xor
mov
and
cmpl
or
xchg
add
popf
in
movsb
lods
orl
mov
test
push
mov
sbb
sub
popa
popa
imul
adc
or
je
cmc
xor
scas
push
inc
mov
dec
dec
cltd
push
lock
movsl
std
sbb
cld
add
stos
fdivl
push
fistps
sub
inc
xor
js
adc
jne
xchg
mov
jecxz
inc
daa
mov
cltd
leave
cmp
movsb
in
outsb
push
add
rcl
sahf
push
es
movsl
int
sub
xchg
insb
fistpl
sbb
mov
xorb
sbb
mov
mov
test
push
repz
shll
out
adc
iret
sbb
cmc
sub
scas
add
sbb
xorl
xchg
add
inc
mov
in
xchg
pop
enter
outsb
addr16
cwtl
jmp
adc
and
push
daa
mov
pop
pop
xchg
popf
cmp
lods
jae
subb
sub
aam
or
aad
sub
lods
mov
repz
lds
jp
mov
xchg
lahf
mov
lahf
hlt
imul
inc
in
ja
cmp
lods
sbb
mov
movsl
icebp
mov
test
mov
popf
mov
cltd
push
scas
mov
dec
iret
sbb
fs
aam
rcll
add
jnp
js
xchg
ljmp
and
and
out
std
mov
pop
rcr
test
cld
xor
jne
call
mov
push
and
lret
jg
add
movlps
add
ficoms
inc
idivb
leave
ret
pushf
adcl
xchg
cmp
out
jl
xor
stc
les
ret
jb
lahf
xlat
aas
jo
mov
and
jnp
ljmp
jp
test
xchg
inc
dec
in
sbb
fidivrs
mov
sbb
into
push
fwait
or
xor
insb
cmp
lahf
add
push
mov
cli
faddl
push
pop
dec
adc
ljmp
mov
mov
mov
imul
cmpsl
adc
cmp
addr16
cmp
aad
adc
xchg
ficoml
clc
jmp
sub
inc
sbb
add
jns
scas
test
xchg
or
dec
in
push
test
sbb
inc
dec
mov
push
daa
dec
std
xor
mov
dec
imul
sti
sub
in
les
or
jo
aaa
aad
stos
ljmp
ffreep
subb
xchg
pushf
sub
in
jmp
xlat
push
stos
inc
fstpt
arpl
les
inc
cmc
jmp
pop
das
sub
sbb
addb
aaa
cmp
mov
out
lods
jns
mov
fcmovu
sahf
and
mov
test
cwtl
cmp
sbb
adc
mov
xor
cmpsl
xchg
mov
inc
adc
adc
pop
and
jl
or
rorb
mov
outsb
mov
pop
divl
aaa
fdivp
and
or
outsb
push
and
and
stos
add
xor
xor
dec
xchg
or
fstp
rcrl
pop
popa
mov
insb
int
pushf
xlat
push
fistpll
dec
push
mov
pop
sub
outsl
loop
repz
push
inc
mov
dec
adc
inc
in
jb
fldl
loope
in
daa
fyl2xp1
repnz
fimuls
dec
fstpt
icebp
and
pop
popa
loop
repnz
sahf
adc
lock
add
add
and
lea
shlb
cmc
dec
mov
pop
inc
jne
sub
sub
out
daa
push
sub
cmp
lret
mov
jmp
jbe
push
hlt
imul
rcr
pop
xchg
scas
sbb
pusha
or
adc
subb
jns
xor
lcall
nop
cwtl
cmp
fldcw
daa
push
xor
ret
pusha
imul
out
aaa
fcmovnbe
cmp
mov
xchg
xor
jns
jmp
xchg
lret
enter
mov
mov
ds
orl
lea
lods
dec
xchg
sbb
jecxz
ficoml
cmp
xchg
js
mov
push
push
insb
mov
adc
je
xor
jecxz
mov
sarb
mov
inc
jnp
inc
sbb
jae
add
mov
or
mov
gs
aad
mov
push
repnz
lret
fcompl
mov
int
inc
mov
scas
cmc
cli
push
sbb
fsubr
pop
outsl
mov
sbb
mov
stos
or
or
mov
dec
insb
push
jg
inc
outsl
push
xlat
fisubs
dec
dec
ds
pop
fcoms
in
cmc
rclb
cs
daa
movsl
xor
or
fwait
pushf
sahf
rep
push
adc
xlat
movsl
adc
inc
stos
jle
mov
xchg
std
jbe
cmp
sahf
mov
mov
cmpsl
test
insb
insb
xor
sbbl
cmp
aad
add
dec
cs
sahf
aaa
dec
repnz
addr16
jg
fisubs
xabort
dec
out
in
rep
inc
pop
cmp
sbb
in
add
push
mov
cld
out
jb
fidivl
aad
ljmp
add
imul
test
out
push
jge
pop
pop
ficoms
lds
mov
sub
jle
pop
incl
stos
pop
test
nop
enter
mov
cwtl
cmp
stos
insl
xchg
cmp
ds
sbb
test
xor
enter
jge
cmpsb
push
fdivr
dec
inc
pop
pusha
out
mov
js
lods
jmp
lcall
pop
hlt
aam
sbb
xchg
cmp
int3
ss
xor
inc
leave
aas
pop
sub
test
cli
push
jge
sub
pop
pop
test
jnp
daa
call
xchg
cmpsl
cld
add
or
xchg
jb
push
pavgb
and
push
mov
sub
jl
adcb
lds
ror
or
in
cltd
int3
xchg
add
out
sbb
dec
orl
mov
das
int
jae
pushf
mov
js
popf
loope
pop
cmp
mov
leave
sahf
or
adc
cmpsl
fidivrl
add
in
sbb
das
pop
dec
jne
cs
add
push
xchg
ret
mov
jl
pop
or
aam
and
out
adc
mov
jne
inc
xor
stos
into
sarl
sbb
sbb
rclb
enter
mov
ss
les
cwtl
aam
xor
inc
rolb
pusha
int3
jp
mov
jg
in
enter
mov
notl
bound
jnp
enter
adc
scas
xchg
mov
xchg
out
mov
mov
sub
pushf
xchg
out
ss
mov
xchg
mov
cmc
jo
jl
mov
inc
dec
mov
mov
push
mov
and
jmp
adc
popf
mov
into
push
out
jmp
mov
add
push
pop
in
scas
dec
mov
std
pushf
mov
das
das
ljmp
stos
mov
addr16
shl
cmp
mov
pop
jle
pop
nop
xor
mov
jno
jp
pop
inc
pushf
sbb
inc
ror
push
call
sbb
loop
pop
push
cld
and
mov
cwtl
imul
dec
rcrl
rorb
les
fnstcw
fisubrl
out
cmp
aam
push
xchg
scas
shlb
mov
dec
jae
dec
outsl
stos
xchg
orb
adc
testb
inc
hlt
rorl
addl
cmpsl
out
inc
push
icebp
dec
xorl
push
rcr
mov
rolb
and
mov
and
frstor
xorl
sub
jbe
sub
jae
fwait
shlb
aaa
pop
cli
arpl
inc
nop
sub
mov
mov
and
int
or
xchg
je
dec
sub
jmp
shl
jb
lret
ret
lea
mov
idivb
mov
mov
addl
iret
in
xchg
aaa
cltd
cmp
cmp
xchg
shrb
ret
in
xchg
dec
mov
test
mov
ds
jge
or
mov
jae
sahf
rclb
aas
inc
sbb
sbb
sbb
push
push
loopne
xor
stos
repnz
dec
mov
popf
pop
push
or
out
pop
xchg
jnp
jae
inc
mov
cs
movsb
sar
test
inc
inc
dec
dec
and
cmp
arpl
jnp
testb
ljmp
outsb
jmp
jo
mov
mov
push
fstp
test
mov
fsubrl
or
add
jp
adc
pop
cmp
jo
cmpsb
icebp
add
fsubp
mov
push
xchg
lcall
cwtl
mov
cld
cmp
jne
sbb
call
sbb
pop
or
iret
inc
fmuls
mov
imul
nop
outsb
pop
mov
lret
imul
cmp
pop
sarb
sub
jmp
dec
add
jno
jbe
int3
in
clc
and
lds
sbb
lock
jecxz
mov
iret
mov
imul
cli
shll
add
mov
fistl
nop
hlt
add
testl
mov
add
xor
jno
mov
mov
in
push
je
stc
pop
adc
mov
sub
add
dec
mov
inc
outsw
or
mov
out
lret
inc
cmp
bound
xor
add
dec
imul
cwtl
jns
fnsave
shll
mov
xchg
pushfw
xchg
or
ret
mov
call
inc
lret
bound
mov
clc
adc
pop
aad
pop
or
hlt
add
xorps
aam
lds
loop
scas
cmc
jmp
and
mov
lret
mov
xchg
scas
in
mov
add
ja
xor
xchg
jmp
adc
pop
xchg
xor
fistpll
sbb
mov
xor
jl
insl
xor
pop
testb
cwtl
pop
adc
loope
inc
push
push
cs
push
cmp
mov
jmp
push
mov
xor
hlt
pop
addb
cli
lea
jno
test
mov
or
outsl
mov
sbb
jge
sbb
into
jb,pt
jo
mov
mov
rcrl
ret
fdivrp
adc
adc
sub
das
pop
cmc
cwtl
cmp
aam
sbb
lods
test
push
inc
ret
aam
xchg
adc
pop
cli
jbe
adc
dec
stos
or
insl
cmp
je
lahf
pop
in
gs
jp
mov
outsb
aad
movsb
in
push
and
dec
imul
ret
jo
xor
out
mov
sub
idivb
lret
popf
repz
sbb
mov
jno
add
outsl
xchg
inc
subl
dec
push
les
loopne
pushf
sub
mov
sti
push
imul
push
and
cmc
movsb
adc
imul
xor
or
pop
jns
fcomps
outsl
jge
inc
dec
inc
push
outsl
scas
arpl
rclb
loopne
pop
aas
popf
pop
aaa
mov
cs
jmp
rcrb
jbe
jmp
jns
lret
pop
inc
lcall
xchg
pop
mov
stc
sub
bound
or
xor
iret
or
sbb
and
push
cmp
mov
sarl
xor
sbb
mov
popa
xor
xchg
push
cmp
lret
sub
xor
mov
dec
in
out
xchg
add
dec
cmpb
mov
dec
scas
in
cmp
lcall
scas
movsl
and
sbb
das
lea
add
dec
mov
mov
and
inc
sahf
cmpsb
je
cmp
and
and
js
mov
mov
and
push
mov
sub
in
jbe
in
mov
iret
icebp
jno
pop
lcall
shrl
mov
adc
sub
xchg
mov
test
jno
mov
fstps
aad
fimuls
or
jae
int3
jo
cmpsb
mov
xor
mov
inc
mov
add
mov
int3
dec
int3
data16
fstpl
out
mov
mov
dec
mov
sbb
sbb
push
push
addl
or
push
ljmp
jle
jne
sbb
mov
sub
mov
imul
add
mov
add
sub
push
jne
dec
in
add
insb
push
movd
cmp
cmc
or
cmc
push
js
fsubrl
pop
mov
push
jne
mov
sbb
xor
hlt
dec
data16
sbb
hlt
ret
mov
or
in
out
ret
mov
xchg
sbb
imul
dec
test
in
lcall
push
and
out
mov
dec
mov
inc
mov
inc
mov
clc
push
jno
in
aas
mov
jle
xchg
sub
loop
adc
fisubrl
loopne
aam
ficompl
or
aam
dec
and
insb
call
mov
cmpl
ljmp
rorl
xchg
dec
and
js
sbb
bound
jl
xchg
pop
cmp
sbb
mov
rcrl
shlb
pop
je
fstps
movsb
mov
movsb
push
dec
data16
add
push
fnsave
out
dec
das
sti
icebp
cmpsl
mov
sub
sbb
add
int3
js
call
pop
ret
push
inc
xchg
test
fwait
jb
push
out
out
adc
rcrb
mov
gs
jae
pushf
fldz
les
adc
cmp
aaa
jecxz
stos
insb
insb
push
push
add
lods
jecxz
mov
jo
adc
sti
cld
pop
sub
mov
insb
outsb
push
jae
pop
inc
jl
test
ss
pushf
stc
push
rcll
add
dec
xor
inc
push
pop
inc
hlt
xchg
fcompl
mov
ret
stc
push
enter
adc
mov
or
pushf
mov
pop
add
mov
sbb
stc
orl
pop
test
push
adc
outsb
xchg
and
ja
jle
mov
jmp
lods
pop
sarl
repz
lcall
stos
nop
push
cmpsl
mov
out
pop
lods
jnp
repnz
adc
mov
lock
mov
mov
imul
mov
fdivs
imul
mov
inc
xchg
aaa
in
cltd
outsl
and
jg
adc
outsl
sahf
mov
push
iret
cmpsl
mov
lock
jae
inc
dec
and
lock
push
and
jns
and
dec
ret
les
mov
push
push
cmp
imul
icebp
or
or
sub
inc
sbb
clc
fisttpl
adc
adc
lret
insl
enter
sbb
adcl
ljmp
or
xchg
xor
cmp
and
adc
jb
xchg
sbb
sub
mov
mov
jmp
js
pop
xchg
stc
sub
ja
jno
mov
scas
shr
es
fcomps
dec
add
pop
outsl
mov
or
pop
xchg
sbb
aam
mov
sub
ss
mov
mov
sbb
cmc
mov
mov
push
sti
push
jno
jbe
pop
fists
icebp
xchg
fs
outsb
aaa
ret
inc
jb
rcll
jle
sbb
addb
ljmp
cld
cmp
ss
addr16
sti
inc
out
adcb
je
imul
ficomps
mov
jp
ss
in
orb
cmp
xor
sub
cld
outsl
ss
dec
and
lods
ss
rcrl
stos
enter
or
push
shrl
andb
fildl
ret
lahf
xchg
adc
jo
fwait
cmp
or
jno
cmp
test
adc
push
iret
jle
add
adc
dec
jb
mov
push
xor
pusha
aaa
xor
lcall
js
mov
mov
add
jl
jecxz
jb
mov
jmp
sub
cmovb
popf
pop
pop
sbb
jnp
adc
rorl
pop
test
jb
mov
testb
mov
xor
aas
add
test
mov
lds
mov
xchg
fldt
stos
das
lahf
pop
icebp
repnz
loop
or
xchg
jae
xchg
fidivl
xor
mov
imul
dec
dec
jle
push
xchg
mov
int
jb
sti
js
es
mov
sbbl
sub
divl
outsb
ret
push
div
jae
stos
sub
insl
cmc
inc
fistpll
or
idivb
jno
mov
cli
clc
rolb
xchg
cmc
je
enter
dec
popa
shll
sub
fisttps
jno
sub
das
cmpsb
cmpsb
sbb
dec
clc
stos
xchg
push
scas
scas
repnz
jmp
adc
mov
icebp
movsl
call
or
adc
cli
out
addr16
sbb
hlt
je
or
cmc
notl
xor
mov
sahf
cld
add
pop
inc
sbb
repnz
lock
shlb
in
jecxz
das
xchg
sti
roll
je
inc
pop
fs
pop
dec
jle
cwtl
dec
dec
icebp
inc
jae
dec
cs
shl
stos
add
fwait
add
cmp
or
arpl
inc
mov
outsl
jp
pop
rolb
aaa
inc
push
cltd
jno
or
stc
xchg
out
xchg
sub
gs
xchg
mov
and
pop
leave
insb
pop
jl
mov
data16
bound
std
xchg
iret
sbb
add
push
jge
aas
dec
loop
jmp
and
pop
jbe
jae
jns
fbstp
outsb
fcomi
outsl
insb
add
push
xor
cld
xor
mov
adc
fcompl
sbb
dec
add
xor
jne
pop
inc
mov
mov
push
ret
ret
add
jns
add
mov
mov
xchg
outsb
pop
mov
adc
xchg
js
mov
clc
xor
inc
push
int
lods
push
mov
lcall
xor
jne
loopne
sub
pop
movsb
pusha
mov
das
cmpsb
mov
dec
jno
push
pop
xchg
lds
or
dec
mov
lods
lock
in
insl
adc
xchg
cltd
imul
add
sbb
push
int
sub
or
cmpsl
adc
ljmp
or
cmpsb
adc
adcb
sbb
add
push
cmp
dec
pop
mov
test
xor
insb
aas
mov
sahf
out
dec
fwait
sti
xchg
sti
jne
add
jge
or
sbb
adc
mov
mov
mov
pop
ja
jb
popa
negb
xor
aaa
bnd
sbb
inc
divb
inc
xor
out
cmp
movsb
imul
jns
enter
jl
ja
add
sahf
fs
or
sbb
sbb
shrb
inc
sub
cwtl
cwtl
cmp
add
jne
lahf
add
subl
mov
add
dec
aaa
sarb
in
out
push
or
inc
push
sub
fs
rorl
cmc
ret
imul
adc
cltd
test
ficompl
rcl
xor
stos
int3
outsb
lret
mov
cmc
xchg
stos
out
shl
add
ftst
cld
lock
add
in
add
rcll
cmc
leave
adc
add
outsb
imul
sub
fdivs
push
jl
mov
fcoml
xorl
push
pop
or
jno
fsub
ja
and
mov
jle
xchg
cld
cmp
jbe
xchg
or
mov
lret
jno
out
into
xchg
jmp
inc
inc
aam
mov
xchg
test
mov
inc
adc
adc
jle
adc
or
mul
cmc
cmp
mov
cmp
icebp
outsb
lods
xchg
repnz
xchg
ds
pop
mov
fdivr
pop
sub
imul
loop
mov
add
je
enter
testb
mov
mov
inc
pop
or
stc
jmp
jl
in
xchg
shlb
ficoml
jl
mov
les
push
push
mov
push
xor
iret
xor
cmpsb
mov
mov
mov
dec
add
out
ret
das
and
fs
movsb
lea
mov
ja
das
or
dec
xchg
rcl
fwait
xor
xchg
pop
stc
mov
inc
aad
cmp
aam
shlb
xorl
or
aaa
mov
jnp
sub
fstps
pop
ja
dec
sarl
pop
mov
das
popf
lock
xchg
and
add
or
and
xchg
jno
outsb
std
pop
push
xor
pop
add
jle
or
sbb
arpl
test
repnz
cmpsl
cli
repnz
mov
push
fimull
xchg
xchg
adc
std
inc
or
pop
cwtl
or
pop
pusha
xor
inc
xchg
pop
xor
add
cmpsb
stos
sbb
mov
fildll
pushf
jnp
sbb
cltd
std
sub
imul
dec
subb
jno
xor
xchg
in
lret
ss
js
push
insb
jb
xchg
jge
sbb
or
nop
pop
mov
fisubl
lea
mov
adc
fmulp
loope
jns
lds
push
stc
sbb
pop
and
mull
lds
fwait
iret
cld
xor
jne
dec
enter
and
cmp
ds
xor
push
les
inc
icebp
fcmovbe
mov
orb
sub
sbb
test
loop
mov
arpl
insb
or
addb
sub
insl
negl
mov
pushf
jns
push
data16
mov
cmp
pop
std
rolb
and
stos
jge
fiaddl
fimull
bound
clc
push
out
fs
mov
das
data16
push
divb
xchg
movl
iret
mov
mov
fdivs
test
adc
xor
cmp
in
mov
aaa
repz
sti
cmp
lcall
add
dec
bound
mov
push
test
fwait
push
pushf
jns
push
sub
xchg
cmp
mov
pop
mov
ljmp
loop
loopne
jns
ljmp
hlt
xor
jmp
stc
ja
imul
pusha
adc
xchg
ja
sub
jo
dec
xor
sub
cmp
cltd
sub
cmp
shlb
in
arpl
push
xchg
lret
call
push
inc
push
inc
icebp
adc
mov
jmp
sub
xor
call
push
jp
mov
or
mov
sub
ds
fnsave
rorb
out
aaa
into
or
lods
jl
sbb
cltd
and
cmp
dec
imull
out
es
and
jg
mov
mov
inc
js
dec
dec
lret
pop
or
out
mov
add
dec
xor
cmp
inc
and
pop
in
repnz
mov
pop
imul
pop
movsb
in
mov
stc
pop
jo
mov
dec
mov
jbe
push
scas
sbb
sub
inc
jno
push
ljmp
push
add
xor
movsl
xlat
imul
mov
outsb
clc
cmpl
sbb
or
mov
mov
mov
test
jns
loopne
popa
or
testb
pushf
xchg
rolb
pop
ljmp
xlat
icebp
pop
jbe
push
cmp
sbb
in
shlb
in
xor
adc
pop
into
xor
mov
das
fwait
in
jg
cld
lock
or
ss
or
sub
mov
scas
xchg
lret
mov
fimuls
sub
in
inc
fisubs
packuswb
adc
mov
add
icebp
in
mov
adc
sbb
xchg
addr16
push
xchg
dec
mov
jp
scas
hlt
push
std
lcall
pop
mov
cs
sbb
arpl
icebp
dec
xchg
push
push
xchg
mov
andb
jmp
and
cmp
ds
aaa
jle
mov
ds
and
lods
pusha
or
sbb
in
jb
xor
in
sbb
aam
fisubl
pop
pop
and
dec
push
inc
push
mov
jle
push
stos
pop
push
pop
ret
scas
frstor
negb
nop
cwtl
push
not
gs
cmp
dec
imul
mov
cmp
aas
add
addr16
adc
cmp
lods
cmc
xchg
mov
fdivs
push
mov
mov
ss
add
inc
or
jle
sub
xor
mov
push
int3
std
xchg
jnp
xchg
ret
xchg
inc
cltd
aam
sub
es
dec
mov
jne
loopne
jns
xchg
sbb
add
add
mov
mov
add
stos
jbe
pop
out
cmp
or
push
pop
xor
add
and
adc
repz
mov
push
cmp
jns
or
icebp
mov
repnz
ss
out
cltd
inc
mov
lea
ret
jecxz
ret
xchg
je
pusha
nop
or
mov
jns
adc
ss
nop
xchg
xor
sub
cmpsb
cmp
ss
out
stc
fdivrs
inc
and
scas
outsb
in
xor
loopne
mov
stc
jecxz
out
cmpsb
jnp
cli
pop
dec
mov
and
sub
imul
dec
xchg
lret
imul
inc
repz
inc
pop
sbb
cmp
in
xorl
xchg
mov
mov
mov
jne
fistl
mov
adc
out
int
xchg
and
ss
std
inc
adc
jnp
shll
mov
xor
jb
aad
fcomi
out
in
add
shrl
into
bound
iret
aad
stos
dec
dec
lret
orl
mov
lcall
lock
psraw
sbb
lock
in
xor
in
inc
mov
icebp
mov
pop
jmp
add
dec
movb
arpl
xchg
repnz
in
dec
and
or
mov
push
aam
aam
call
cmp
inc
xor
fisttpll
jl
jb
inc
movsb
mov
and
or
sbb
inc
xchg
pop
loope
xor
or
adc
repz
outsl
and
xchg
sub
lret
push
in
cmpsl
sub
cmp
mov
into
divl
in
cmp
mov
lods
addl
jno
aad
dec
mov
add
and
push
sahf
sbb
fs
inc
subl
cmpsl
out
fldz
adc
pop
orb
notl
adc
pushf
or
or
lahf
mov
and
mov
rclb
stos
add
dec
mov
mov
sahf
mov
fimull
inc
aad
out
fldl
sbb
xchg
or
xor
fiadds
arpl
adc
mov
pop
insb
outsl
nop
jecxz
adc
aaa
add
aas
xchg
out
mov
and
xor
mov
add
dec
cmp
pop
mov
outsl
mov
inc
mov
aas
mov
mov
xor
neg
test
jb
push
sahf
xchg
addl
inc
push
sbbb
cmc
lcall
mov
push
cmc
insb
push
outsb
sub
js
mov
mull
movsl
test
inc
daa
xchg
in
dec
mov
fs
jns
xor
cmp
jo
mov
jecxz
sbb
mov
push
mov
lds
jle
repz
pop
push
fs
insl
popf
gs
mov
sub
jns
mov
popa
out
and
xor
jb
lds
aad
scas
cmp
push
mov
xor
outsb
inc
popf
mov
push
fisubl
add
popf
sarl
enter
rcr
cmc
xor
fbld
pusha
into
hlt
xor
dec
fs
dec
les
push
push
cs
insl
fldenv
mov
jecxz
or
mov
push
in
cs
xchg
insb
sti
pop
add
nop
pop
pop
aaa
mov
pop
sub
insb
call
arpl
aas
mov
frstor
fldcw
add
xorl
cltd
test
ljmp
sub
into
sbb
ret
dec
push
int
adc
out
ds
mov
jo
push
sahf
add
pop
and
movsl
scas
and
mov
imul
pop
inc
shlb
inc
stos
dec
add
adc
jl
mov
ljmp
cltd
jo
or
sbb
lock
push
in
dec
xor
mov
mov
subb
mov
xchg
mov
xor
pop
int
adc
add
or
xchg
push
outsl
popf
sbb
lds
mov
xor
in
push
adc
lds
shl
mov
cs
mov
mov
adc
and
sbb
in
outsl
aaa
jl
mov
sub
jge
jae
mov
push
insl
fisubrs
std
bound
ljmp
cmpsl
sbb
sbb
lret
subl
repz
arpl
adc
iret
into
xlat
loope
push
xchg
sbb
cmp
aas
fcmovu
jns
sub
and
jp
in
inc
push
pusha
fisttpl
addb
inc
pop
push
fidivrs
test
stos
inc
iret
aam
pop
pop
popa
cwtl
sub
mov
movsl
or
sti
pusha
imul
sbb
clc
adc
inc
stos
fwait
loope
ja
iret
fwait
jg
jo
int3
mov
xor
jle
outsb
aam
mulb
out
pop
mov
scas
popf
pop
enter
xor
stos
add
aad
sbb
xorb
ljmp
jecxz
loop
push
push
mov
arpl
stos
imul
jno,pn
das
iret
sub
or
mov
push
sbb
pop
ds
mov
lret
pop
mov
int
scas
xor
cltd
sbb
dec
aad
add
pop
mov
lahf
jmp
add
fucomip
movsl
dec
aaa
inc
mov
adc
sbbl
inc
inc
aaa
pusha
jmp
cmp
hlt
jmp
mov
push
in
cmpsb
sub
sbb
scas
inc
adc
sub
mov
inc
adc
pop
scas
push
rol
mov
sub
inc
push
push
aaa
xor
push
xor
imul
out
idivl
popa
icebp
add
scas
out
cmp
movsb
std
ds
sbb
test
rcl
test
mov
daa
inc
xchg
es
mov
jp
pop
iret
cmp
or
or
adc
fnsave
mov
ja
test
imul
add
movsb
push
cli
ljmp
xchg
jle
xor
mov
stc
push
jle
sahf
fstpt
pop
mov
pop
pop
adc
imul
add
jnp
adcl
hlt
call
pop
test
inc
pop
sarl
or
rcll
xchg
push
int
aad
stc
ret
mov
enter
mov
mov
push
cmp
nop
mov
adc
mov
xchg
popa
adc
out
sub
mov
adc
fldt
dec
pusha
cltd
mov
push
xor
mov
dec
call
repnz
les
dec
mov
mov
cmp
addr16
sarb
les
shll
xchg
ds
mov
pop
push
xchg
xchg
or
subb
jns
popa
mov
cld
roll
pop
inc
sahf
loope
je
add
cwtl
fs
addl
push
mov
fisttpll
idivl
xchg
sub
jns
sbb
scas
popf
add
and
ja
in
and
cmp
mov
sub
aaa
pop
inc
sbb
dec
xor
movsl
or
jl
mov
cmp
xchg
cmpsb
push
adc
das
jns
scas
cmpsl
test
lahf
xchg
mov
add
dec
jbe
push
push
add
jle
cmpsl
mov
jmp
mov
sub
cs
xchg
sbbl
mov
pusha
jb
mov
sarl
xor
in
push
inc
ret
xchg
jb
adc
lea
mov
dec
jno
pop
jnp
jo
inc
jo
je
jno
jo
insl
add
jecxz
cwtl
sbb
stos
out
pop
pop
leave
mov
aad
out
mov
inc
mov
fsts
aam
xchg
pop
cmpb
inc
inc
cmp
mov
cltd
icebp
sbb
movsl
cmc
fldt
jle
adc
lret
pushf
sbb
repnz
and
cmp
xchg
sahf
add
mov
das
sti
bound
das
lods
shll
push
adc
dec
aam
mov
push
add
pushf
ja
pushf
push
das
je
mov
mov
pop
cmp
or
fisubs
movsb
loope
scas
mov
jl
and
add
jb
mov
ret
xlat
adc
pop
add
adc
popa
and
inc
and
repz
cwtl
add
xor
into
hlt
push
jp
jp
aaa
movsb
idiv
xchg
pushf
repz
int
push
pop
jecxz
jno
push
sbb
repz
ret
push
adcb
pusha
cmc
popa
imul
adc
fcoms
leave
push
mov
pop
sbbb
pop
cwtl
push
gs
movsl
mov
out
xor
fsubrs
xchg
je
cmp
xor
subl
popa
test
inc
fnstcw
sbb
daa
mov
dec
adc
inc
jnp
pop
push
in
adc
sub
daa
or
movsl
imul
fisubrs
ret
mov
add
add
enter
pop
pop
push
sbb
xchg
xchg
mov
mov
je
stos
add
and
gs
jns
js
push
cmp
into
push
call
jmp
popa
jnp
hlt
mov
xchg
insb
inc
gs
mov
loopne
pop
aas
xor
inc
js
in
imul
mov
out
mov
xor
inc
xor
cmp
movsb
scas
pop
pusha
cmpsb
jp
inc
adc
insb
pop
je
push
cmp
fnstcw
pop
shll
in
ss
lahf
aam
cmp
pop
cwtl
rol
xchg
out
outsl
movsb
add
lds
out
push
push
sub
das
in
mov
out
cwtl
popa
bound
add
inc
in
out
cld
loope
iret
inc
mov
adc
mov
jge
ljmp
sub
push
mov
add
and
addr16
add
in
cmpsb
std
out
mov
adcb
cmpsb
jno
out
push
adc
out
in
mov
daa
inc
cmpsl
das
int
leave
pop
mov
sub
data16
push
pushf
jge
cmp
loop
int3
jge
outsl
stc
das
jmp
outsb
je
fdivrl
dec
leave
mov
mov
rdpmc
pusha
movsl
jnp
lret
fsubr
push
in
mov
mov
sub
sti
mov
movsb
fldl
add
mov
arpl
sbbl
testb
jne
adc
xchg
lahf
pop
add
jnp
pop
movsl
lahf
push
in
sbb
sbb
adc
xor
das
xchg
mov
push
cmp
xchg
xchg
pushf
decl
pusha
outsl
sbb
pop
into
adc
testb
std
lcall
daa
xchg
pop
jne
or
mov
xchg
in
outsl
jecxz,pt
xchg
jne
sbb
sbb
and
data16
sbb
movsl
test
sub
push
fadds
cmc
mov
pop
adc
shr
mov
mov
aas
out
jmp
push
xchg
repnz
aad
arpl
gs
lret
pop
mov
cmp
iret
ds
add
or
inc
jne
jl
mov
xchg
jle
mov
mov
jb
jo
nop
enter
in
mov
cwtl
dec
aam
mov
mov
adc
add
xchg
mov
push
fsubrl
sarl
add
push
xor
mov
das
and
cld
xchg
shl
shl
lcall
inc
push
roll
xchg
ret
repz
mov
adc
stc
dec
xor
push
pop
lock
out
mov
push
push
pop
shlb
loope
pop
std
cwtl
push
mov
cmp
sbb
insl
test
cltd
rol
inc
push
adc
jl
gs
jle
cld
cld
popa
add
dec
hlt
xchg
sbb
and
fcomps
jne
cmpsb
mov
lods
ror
jg
push
dec
mov
rol
mov
sbb
aaa
dec
pop
inc
cmc
popa
cwtl
xlat
pop
jne
add
ds
addr16
popf
inc
sub
fnsave
je
jno
dec
test
int3
sub
cmp
or
inc
mul
mov
xchg
cmp
dec
sbb
mov
dec
lods
push
xchg
sti
cmpsl
in
push
dec
lods
or
jle
jg
test
dec
push
sub
fistps
lods
sahf
pushl
stos
pop
dec
out
ljmp
sub
xor
bound
jae
ss
lods
stos
mov
arpl
mov
adc
sahf
dec
jp
jge
push
add
jl
dec
sub
int3
das
add
xchg
rorb
pop
push
cmp
push
sbb
cli
push
xchg
repz
daa
iret
stos
movsl
mov
movsl
out
xchg
and
adc
xchg
push
jg
dec
adc
fldenv
mov
add
push
cwtl
in
or
mov
sti
sbb
fcmovbe
scas
dec
sub
fldcw
out
nop
outsl
out
dec
pop
push
mov
xchg
or
fsubl
pop
repz
cmp
sub
pushf
and
lock
popf
mov
ljmp
mov
adc
xchg
mov
jo
int3
imul
push
mov
rclb
mov
fistpll
int3
outsl
adc
sub
pop
jbe
pop
shr
enter
inc
hlt
mov
dec
jg
lods
es
and
aaa
dec
sbb
cmp
rclb
mov
clc
mov
in
loope
lods
adc
repz
cmpsl
dec
outsl
add
push
inc
leave
xor
pop
int3
fldenv
sub
test
jnp
or
and
stc
mov
mov
xchg
mov
pushf
lods
dec
push
test
mov
pop
fbstp
jbe
add
sbb
cmp
xor
repz
mov
fsubrs
cwtl
fcmove
inc
enter
stos
sub
adc
push
cmpl
pop
xor
popa
aaa
cmp
pusha
xlat
out
clc
push
mov
stos
adc
daa
int
jno
enter
pop
xchg
aad
lods
mov
jle
ficoms
nop
enter
xor
jne
push
movsb
cmp
stos
mov
arpl
jge
push
add
nop
sub
mov
call
jge
in
sahf
adc
cmc
out
imul
inc
inc
add
aad
mov
daa
mov
fimull
scas
enter
cld
stos
adc
or
jge
das
out
sbb
and
jnp
mov
fiadds
mov
imul
nop
lahf
aas
imul
pop
ret
pop
dec
mov
das
pop
mov
dec
sbb
mov
add
pop
inc
sub
mov
push
adc
push
bound
mov
int3
ljmp
sahf
xor
leave
gs
cli
xor
inc
cmpl
jne
ja
mov
xor
sub
mov
test
ss
out
ds
jne
and
fldt
inc
movb
popf
jae
add
xchg
mov
pop
inc
push
mov
ss
jl
outsb
push
loop
pusha
jp
rcrl
and
test
push
sub
xor
sub
rol
adc
leave
mov
pop
jb
movsl
xor
test
xor
inc
idivb
jns
push
lock
stos
jne
sbb
outsb
xchg
inc
repnz
mov
and
addr16
add
gs
lret
rcrb
fildll
fbstp
sbb
mov
out
xchg
sbb
idivb
add
lods
add
jecxz
xchg
enter
clc
test
or
mov
pop
or
loope
dec
cmpsb
lods
adc
push
inc
sub
mov
test
int3
mov
je
xor
pop
enter
dec
mov
xchg
jecxz
mov
xor
lret
fcmovu
cmpsb
lahf
pop
inc
ds
call
sub
jmp
adc
ret
ret
out
push
mov
inc
aas
mov
outsl
das
stos
and
sarb
dec
adc
ljmp
adc
cmc
mov
in
xor
fidivrs
xchg
inc
pop
dec
lea
and
bound
fs
jge
shll
in
popf
jbe
scas
inc
sub
sub
loop
sub
xlat
inc
lgs
cltd
and
pusha
add
andb
shl
mov
shll
gs
sub
jge
sub
xchg
mov
cli
cmp
jp
gs
ret
xor
mov
into
scas
or
pop
lods
jmp
rcl
subl
int3
push
dec
insb
or
mov
adc
sbb
or
rolb
pop
lahf
push
cmp
in
pop
xchg
add
pop
loope
pushf
pop
jo
lea
jae
ss
mov
mov
push
mov
stc
dec
repnz
add
test
scas
xor
lret
mov
jle
mov
lahf
pop
pop
scas
dec
adc
xor
aaa
dec
lret
lods
fisttpl
popf
jge
pop
out
xor
mov
mov
and
sbb
sbb
out
sbb
pop
pusha
das
sub
cmpsb
xor
bound
pop
aad
addb
pop
adc
incb
int
and
mov
sti
mov
mov
fldcw
cmpsl
aas
dec
mov
not
ret
popf
pop
xchg
mov
jmp
push
dec
fstpl
xor
xlat
mov
jp
add
lods
xchg
cmp
pop
repnz
dec
jge
mov
lahf
and
and
jg
stos
orl
xchg
push
int3
pusha
push
dec
xor
out
ss
les
xor
out
fwait
cs
ficomps
cmp
fwait
or
adc
inc
sbb
pop
insb
shll
into
mov
fsubrs
push
push
je
dec
mov
add
jno
cld
in
dec
into
cmpb
loop
jle
fidivl
std
ja
sub
lcall
cmp
or
jg
pop
lock
xlat
or
mov
imul
push
sbb
lret
push
and
pop
aam
inc
test
push
xor
jns
cmc
cs
mov
pusha
int
imul
pusha
pusha
cmc
aad
scas
cmp
xorl
stos
mov
dec
cmpsb
adc
jmp
stc
rorb
in
cmpb
into
scas
or
inc
cmc
cmp
clc
cmp
add
rcrl
push
gs
adc
cmp
mov
sub
pop
pusha
in
cli
jmp
xchg
test
pop
cmp
sbb
jmp
movsb
mov
jp,pt
std
icebp
aam
movb
xor
xor
dec
xor
andl
push
shlb
push
adc
cli
mov
and
imul
fsts
les
pop
repz
in
add
mov
clc
dec
xor
arpl
lret
dec
inc
sub
inc
dec
pop
out
jmp
dec
movsl
mov
jl
roll
mov
xchg
roll
lret
out
into
int
xor
imul
xchg
or
and
out
iret
lea
iret
xor
inc
shl
inc
jb
lea
lret
push
dec
cmp
push
cmc
test
dec
je
jno
iret
mov
mov
mov
pop
hlt
cmpsl
insb
lcall
shlb
jns
decb
scas
shrb
pop
cmpl
xchg
outsl
pop
mov
bound
pop
cmpl
mov
icebp
adc
iret
es
test
std
negl
sub
fs
out
out
je
xor
das
push
pop
pusha
outsb
pusha
push
loopne
dec
aam
stos
das
adc
pop
ficoml
or
push
movsb
call
jg
fadds
adcl
mov
xchg
daa
sub
ret
and
icebp
shl
ret
mov
shll
jge
add
mov
movsl
xor
cmp
or
mov
mov
outsl
dec
push
scas
jecxz
mov
movsl
inc
cmp
bound
sbb
in
push
mov
jnp
fcom
fsubs
mov
jl
loopne
inc
shr
push
pop
inc
rorb
stc
mov
data16
inc
ljmp
and
ds
mov
scas
xchg
aas
cwtl
jns
push
push
popf
das
xor
dec
mov
cmpsl
int
ret
out
jmp
loopne
out
out
aas
add
int3
imul
lods
xor
lods
or
ja
pop
das
sbb
jnp
add
xor
popf
into
sub
jae
pop
mov
iret
cmp
push
insl
xor
mov
movsl
int3
test
jnp
test
iret
xchg
sub
int
jmp
push
push
sbb
xchg
and
and
fs
sbb
pop
and
pop
pop
xchg
in
jl
dec
cmp
jmp
insb
mov
add
lret
push
inc
push
xor
out
xlat
push
pop
sti
in
jle
xchg
pop
stc
movsl
add
inc
ja
repnz
xor
cli
leave
sahf
mov
ret
cmpsb
sbbl
out
fcmovne
scas
jecxz
imul
sahf
lcall
pop
mov
cmp
cmp
cmp
and
xor
pop
leave
addr16
in
pop
rcrb
push
repz
out
ss
scas
cld
adc
gs
mov
mov
stos
pop
addb
or
test
and
cltd
dec
shll
lret
jmp
adc
test
sub
in
add
cmp
jbe
nop
xchg
sbb
mov
xor
daa
int3
dec
adc
cmc
lcall
stos
add
dec
je
outsb
sub
fs
lret
sub
mov
add
fiadds
gs
sub
fs
and
lock
jae
frstor
xor
xchg
xlat
imul
xor
pop
add
mov
cs
push
enter
lds
icebp
in
mov
ds
jns
mov
ds
jecxz
jge
xor
adc
mov
out
nop
imul
xchg
aas
lods
or
push
imul
and
out
jns
orl
and
jb
cmp
and
test
insl
and
and
popf
xchg
xchg
int3
shrb
pop
pushf
inc
test
jmp
pop
push
add
dec
lds
jp
xchg
addr16
jp
mov
jl
jnp
xchg
ds
pushf
jne
xchg
out
pop
sbb
dec
jecxz
mov
ret
pop
dec
lahf
pop
mov
mov
mov
mov
xchg
lods
mov
insb
daa
push
ret
fwait
sub
mov
or
fiadds
loop
sbb
repnz
inc
out
stc
pop
cmp
adc
leave
xor
jns
sbb
cmp
mov
mov
lcall
and
adc
nop
movsb
jnp
lahf
data16
cmc
bound
int3
mov
mov
int3
xor
jnp
mov
xor
rolb
push
sbb
cmp
and
mov
addr16
xor
mov
leave
in
loopne
push
das
shr
sar
push
pusha
jecxz
xor
pop
out
mov
inc
mov
mov
add
ret
xchg
add
repnz
pop
dec
and
xchg
sub
lret
jp
dec
adc
cwtl
cltd
push
cmp
inc
fwait
inc
insl
clc
xchg
insl
push
pushf
or
notb
and
pop
mov
xlat
rolb
pop
push
rcr
mov
ret
cmc
pop
and
insb
cmpsl
pop
dec
stc
mov
inc
add
or
xchg
cmp
lret
pop
push
test
adc
pop
fldenv
push
dec
insl
mov
jbe
test
sbb
ret
inc
mov
adc
cmp
xor
divb
iret
or
push
push
ret
pop
xchg
outsl
add
jne
sub
xchg
xor
test
pop
leave
xor
mov
fmuls
add
adc
rcll
cmp
add
movsb
es
fisttpll
cld
pop
jnp
mov
or
insl
sub
inc
xchg
mov
or
aaa
mov
dec
sbb
icebp
iret
test
mov
jbe
sbb
test
test
das
add
loop
shlb
or
jns
outsb
xlat
add
and
or
jmp
lods
and
call
mov
and
jo
pop
sbb
sub
stc
push
mov
arpl
xchg
dec
dec
mov
out
or
and
sbbb
xchg
xchg
pop
fildll
stos
jmp
cmp
stc
push
ficoml
inc
push
inc
pop
es
dec
fs
arpl
clc
sub
mov
add
cmp
iret
jecxz
jle
lgs
push
jge
push
adcl
jb
push
sbb
xor
mov
pop
xor
pop
pop
jg
adc
mov
fs
push
jno
rcrb
pop
aaa
push
sub
rolb
jae
dec
fcomps
mov
xchg
cmpsb
loopne
push
sti
push
xor
sbb
outsl
sahf
mov
pushf
je
inc
mov
add
sub
push
jns
femms
fcomps
loope
push
mov
mov
mov
mov
outsl
cmp
out
xchg
in
mov
cmp
jl
pop
loop
cmc
jecxz
insl
pushf
in
push
gs
in
xor
xor
pop
mov
dec
xor
and
std
lods
dec
fidivrl
fisubs
in
lret
aaa
test
inc
xchg
push
pop
iret
xchg
out
jl
lods
mov
mov
roll
subl
lcall
add
popa
cmpsl
es
xor
pop
xchg
mov
xchg
gs
mov
cli
and
pop
inc
push
push
jo
sbb
pop
int
ds
mov
sub
sbb
jb
xchg
into
mov
mov
add
sti
push
push
das
les
shll
insb
fsubr
inc
sbb
pop
or
adcb
add
in
lock
adc
lods
rorl
test
aaa
xchg
scas
lods
push
xor
jecxz
ljmp
xchg
movsl
sar
or
xchg
mov
fsubr
mov
ret
jns
fists
nop
mov
fdiv
roll
push
sti
clc
fimull
mov
or
in
xchg
push
xchg
out
sub
xor
dec
dec
add
out
xchg
adc
cmpsb
pop
adc
push
pop
push
inc
and
push
push
ffree
test
mov
add
mov
or
jmp
in
xor
dec
pusha
dec
adc
sbb
mov
mov
popa
into
jno
xchg
inc
repnz
mov
xlat
pushl
cmpsl
pop
jl
outsb
cmpxchg
xor
cwtl
inc
int3
sub
lock
adc
xor
fbld
xchg
push
out
jae
popl
dec
pop
and
dec
sub
push
inc
add
decb
sbb
or
sub
and
sbb
jnp
ret
dec
adc
jecxz
icebp
loopne
nop
mov
shll
rcl
jo
dec
imul
repz
test
add
jnp
mov
sbb
pop
or
dec
or
cli
mov
imul
ljmp
sub
and
lcall
loop
sub
inc
adc
testl
hlt
and
cli
ss
inc
mov
adc
cmp
fidivl
rcr
sub
push
fcomip
xor
jmp
xchg
mov
ds
out
mov
lahf
xor
and
shrb
inc
push
shll
cmpsl
icebp
jnp
addr16
xchg
jl
and
add
ret
sub
push
mov
ja
out
cmp
cwtl
cli
cli
sub
pop
mov
and
sub
push
cmp
add
and
flds
push
xlat
mov
cmp
mov
pop
xor
leave
jnp
test
orb
ljmp
movsl
xor
mov
pop
mov
xchg
pop
shrb
push
add
push
inc
int3
cmp
mov
push
mov
nop
or
insb
ret
mov
aam
gs
xchg
inc
jae
notb
dec
mov
mov
xchg
mov
xchg
movsl
movsl
lret
mov
push
stos
jnp
pop
cmp
push
adc
mov
cmp
mov
mov
shl
hlt
out
lods
push
enter
sub
jae
nop
pop
lea
mov
stos
add
jecxz
ret
jnp
clc
setns
call
xchg
out
push
add
xor
push
inc
minps
out
movsl
shll
aas
sub
or
jne
insb
es
xchg
and
jl,pt
sbb
mov
and
sub
push
add
mov
mov
repnz
ja
mov
cmpsb
or
fists
pop
imulb
dec
pop
sub
jne
xchg
testl
mov
or
add
sub
lea
or
mov
xchg
cmp
std
in
sahf
orb
clc
ljmp
lods
add
xor
cmpsb
inc
ja
cmp
mov
loop
shrb
jnp
and
cltd
dec
gs
adcb
cmp
add
mov
pop
outsl
cmpsl
xchg
ffreep
stos
fcoml
stos
lds
imul
inc
dec
roll
dec
fisttpl
pop
les
fstp
lods
insl
add
bound
and
jbe
sub
imul
xchg
mov
frstor
cmp
je
mov
out
and
and
push
clc
enter
sbb
shl
mov
flds
cmpsb
xor
cmp
inc
aas
xor
ljmp
mov
hlt
sub
mov
pushf
shrb
xchg
inc
cmp
mov
imul
fdivrs
add
mov
sbb
jl
lcall
mov
movb
sbb
call
mov
gs
mov
movsb
lahf
sub
jo
add
xor
clc
roll
jae
pop
pusha
mov
shlb
mov
int
dec
pop
cmp
call
mov
adc
ja
cmp
cmpsb
repz
dec
jl
mov
jno
ljmp
fstpt
dec
enter
push
out
jno
pop
fiadds
fwait
outsb
dec
insl
push
sbb
into
pusha
mov
and
sub
pop
jge
mov
scas
mov
data16
out
es
daa
fistpll
mov
out
mov
mov
cmp
push
shlb
lahf
cld
pop
scas
inc
cmp
and
dec
daa
xlat
ds
cmc
cmp
sar
mov
inc
test
mov
leave
cmp
mov
sub
and
push
sbb
adc
aaa
mov
add
faddp
push
lcall
cs
pop
icebp
fwait
mov
and
mov
je
ds
repnz
jb
aas
das
adcl
fstpt
push
sub
es
aad
cltd
mov
cwtl
mov
lea
or
mov
jl
aas
push
jmp
adc
scas
or
int
das
jecxz
or
and
pop
std
aam
inc
out
sbb
repz
cmpl
rcrb
inc
aad
mov
lea
hlt
xor
mov
in
cmp
pop
jno
leave
cs
das
les
xchg
in
push
cld
les
fldt
inc
mov
jg
sub
push
cltd
hlt
subb
and
scas
stos
pop
or
sbb
sbb
and
xchg
pop
xchg
xor
mov
insl
push
imull
fists
imul
fmul
pop
cmpl
adc
stos
sbb
sbb
ret
or
dec
cmp
push
aam
sbb
outsl
sbb
and
rcll
mov
testl
mov
and
add
scas
push
in
jecxz
or
push
outsb
inc
fdivr
mov
push
movsl
incl
mov
pop
repnz
addr16
cmc
roll
repnz
imul
std
inc
sbb
insl
jecxz
and
ljmp
xchg
fidivl
sub
xor
ficompl
and
or
dec
mov
int3
roll
mov
push
add
cli
jns
mov
jl
pop
arpl
mov
popf
pop
lret
es
push
cli
pop
imul
lret
pop
pushf
stos
jp
orb
and
and
mov
out
or
add
mov
or
sub
pop
push
mov
loope
insl
int
jmp
pushf
out
jle
addr16
and
cmp
fstpt
loop
jno
rorl
inc
les
push
jg
in
jecxz
mov
fwait
dec
mov
cltd
mov
popa
inc
add
fdivs
cmpsl
lret
or
xchg
fwait
bound
mov
fisubs
jg
lret
mov
xchg
mov
aad
jg
jns
aad
jnp
rcrl
adc
dec
mov
add
cmpsb
fsubl
and
out
fldl
dec
repnz
cmp
pushf
jge
pop
jmp
mov
add
pop
lret
ja
cld
out
add
mov
cmp
loopne
jns
sbb
out
and
bound
addb
sub
les
xor
lcall
call
stos
jbe
adc
xor
movsl
lret
mov
pushf
sahf
lods
mov
out
fsubr
insl
push
aas
mov
mov
pushf
test
cmp
aam
mov
outsl
xor
fidivrs
sub
cli
es
cmp
push
jae
dec
push
or
push
mov
jmp
cli
jl
or
jmp
jp
dec
jbe
test
data16
xlat
mov
cs
cmpsb
sbb
xchg
aas
dec
push
mov
xchg
jge
ljmp
and
or
inc
jle
std
mov
repz
xchg
add
inc
xor
jb
mov
subps
xor
lock
ret
test
stos
jno
and
xor
ret
mov
dec
push
dec
ds
mov
push
sbb
cmpsb
call
bound
push
mov
daa
mov
jo
push
loopne
pop
mov
in
push
and
call
outsb
sub
dec
xchg
jnp
or
mov
pop
push
orl
ljmp
xchg
mov
dec
cmp
xor
mov
or
mov
cmp
cmp
jg
jl
sub
mov
daa
jne
inc
pop
add
sub
daa
cmpsb
push
ret
scas
pop
ds
sti
fldcw
cltd
rcll
movsb
mov
rcrl
cmp
in
loope
or
pop
ret
cmpsl
mov
fildl
or
or
sub
pop
adc
sbb
in
nop
jecxz
pop
fsubrs
icebp
movsl
mov
push
lods
mov
sbb
jmp
hlt
imul
imul
push
jge
push
je
sub
jmp
add
pop
fdivrl
mov
or
pop
dec
dec
cmp
push
xchg
jnp
out
sub
push
pushf
cmp
test
and
sub
daa
lock
mov
inc
ja
dec
mov
xor
icebp
testb
sub
aas
movsl
out
sub
jmp
sbb
or
idiv
xlat
dec
test
lcall
mov
jle
dec
mov
fwait
aam
push
dec
loopne
xchg
sub
add
adc
outsl
in
mov
test
add
inc
add
sub
out
pop
mov
pop
les
jo
push
pop
jmp
mov
cmp
push
fwait
adc
popa
lods
imul
jbe
push
mov
js
xchg
repz
out
orb
mov
pop
cmp
faddl
add
jo
push
into
movsb
iret
lret
mov
ljmp
ud2
loop
or
imul
adc
add
sub
pop
jb
arpl
inc
lods
repnz
jl
fsincos
sbb
pop
in
sti
push
mov
fsubl
ss
je
and
or
or
sbbl
push
js
inc
xor
test
imul
pop
call
data16
mov
shlb
add
aaa
dec
pop
push
sub
ret
mov
ret
pop
cs
mov
hlt
adc
pop
cmp
arpl
out
fistpll
mov
cmp
mov
xor
or
adc
and
cmp
stos
xchg
dec
lods
adc
push
cltd
gs
mov
fildl
out
inc
mov
push
and
pop
es
rorb
or
in
xchg
jle
mov
and
repnz
pop
adc
fs
jns
nop
loop
cmp
aaa
jnp
mov
push
mov
push
ljmp
lods
out
mov
sub
mov
cwtl
pusha
cmp
push
mov
js
cwtl
out
fucomi
popf
sub
and
mov
mov
lcall
arpl
movsb
inc
cmp
mov
mov
aam
add
mov
mov
clc
stos
jns
or
dec
stos
dec
lcall
int3
lea
sub
ja
outsb
fstps
nop
pop
sbb
pop
enter
dec
pop
dec
lret
pop
add
mov
xor
pop
sub
pop
jge
popa
jnp
push
mov
scas
jecxz
xor
test
mov
ret
lret
adc
cmc
mov
hlt
push
fisubs
lea
fadds
push
xlat
push
in
sub
enter
xchg
xchg
dec
mov
push
dec
jne
or
adc
hlt
xor
adc
imull
cmp
in
fisubrl
dec
adc
mov
cmp
jecxz
fsubrs
push
push
mov
cmc
inc
test
daa
cmp
das
cmp
push
inc
xlat
sbb
xor
lods
dec
mov
jnp
and
sti
xor
lds
sbb
pop
or
test
lret
jmp
mov
sti
shll
jno
cmpsb
cltd
mov
repnz
je
add
jl
clc
lds
jb
and
iret
icebp
dec
sbb
stos
lods
scas
rcll
push
sbb
nop
loop
push
sbb
pushf
mov
xchg
push
test
ror
adc
jbe
fwait
std
or
pop
popa
ret
shlb
xchg
imul
pop
sbb
jb
or
test
int3
inc
leave
rcrl
jmp
cwtl
xorb
fs
jo
ret
cmpsl
fistpll
clc
push
cli
jne
xchg
fsubrp
divl
push
mov
or
icebp
cmp
jecxz
and
arpl
xchg
mov
arpl
sub
push
sub
imul
mov
add
push
cli
test
jmp
xor
mov
jne
cmp
xchg
xchg
add
sub
xchg
mov
dec
sbb
cmp
imul
inc
sahf
mov
xchg
int3
push
sbb
pop
out
cmp
mov
mov
sub
push
mov
popf
loopne
movsl
mov
mov
popa
inc
xchg
push
cli
jbe
and
push
push
mulb
movsb
fcomp
pushf
icebp
xchg
les
pop
adc
adc
lcall
loope
clc
xchg
int
mov
stos
repnz
or
sbb
lea
testl
mov
inc
daa
push
mov
sbbl
jbe
cmp
test
xchg
fnstsw
xchg
cmp
jge
ret
ficoml
xchg
pop
outsl
xchg
sbb
fs
ud0
in
jno
xchg
mov
xchg
adc
shr
adc
fptan
mov
dec
insb
lods
jbe
aam
jb
adc
std
insl
mov
aas
in
cmp
xor
mull
sbb
addr16
mov
arpl
mov
xchg
dec
pop
fistl
push
fildll
mov
fwait
jbe
scas
jae
sbb
in
adc
push
addl
inc
mov
leave
fidivs
stos
xor
push
cvtps2pi
push
pop
xor
cmc
and
out
cmp
movsl
out
mov
push
dec
dec
xor
insl
add
cmp
ljmp
in
mov
imul
call
fstpl
mov
mov
xchg
cli
rclb
cmpsl
icebp
pop
lahf
arpl
mov
dec
je
mov
adc
sbb
cmp
and
add
xchg
lea
es
mov
pop
and
popf
add
mov
lods
sbb
lock
in
xchg
mov
ret
mov
xchg
test
inc
adc
jmp
push
ja
push
subl
push
lock
std
adc
das
fisubrl
dec
cmc
out
and
xorb
pop
jne
add
push
inc
xor
dec
dec
ror
jg
outsl
mov
lods
sbb
lret
fwait
hlt
inc
jg
inc
mov
dec
notl
push
insb
loop
mov
incb
push
dec
add
sub
outsl
jecxz
dec
jbe
insl
xchg
sub
mov
dec
test
adc
je
lods
xor
mov
cld
daa
inc
test
popa
jecxz
test
pop
mov
jbe
push
push
popa
ret
int3
jno
leave
stos
and
in
mov
fcomps
subl
ljmp
adc
bnd
in
cwtl
jge
lods
cltd
sbb
mov
adc
and
popa
and
fiadds
stc
inc
sbb
outsb
or
repz
cmc
loopne
push
mov
sbb
aam
jb
mov
jecxz
ret
sbb
fldcw
movsl
cmpsb
outsl
xor
cmc
out
ret
mov
dec
cli
rcll
roll
loop
pandn
push
ja
cmp
mov
in
jp
js
push
mov
test
pop
mov
push
and
mov
in
push
dec
xchg
sbb
mov
lock
push
sti
sbb
leave
jg
pushf
lahf
leave
push
sub
jl
pop
push
add
stos
popa
out
ret
lcall
insb
cld
stc
xchg
add
cld
xchg
push
cmp
xchg
or
shlb
es
mov
or
xor
pusha
int3
push
xor
in
fldt
loopne
loopne
scas
incl
push
sub
imul
inc
and
cmp
mov
daa
mov
and
ljmp
popa
xchg
outsl
cmp
cmp
leave
inc
dec
mov
test
arpl
into
add
mov
inc
popl
gs
xlat
mov
xchg
repz
cmp
icebp
sbb
push
clc
dec
push
jp
inc
cli
mov
mov
sub
test
aas
rclb
push
call
jo
insb
mov
push
mov
popa
aam
iret
and
cmp
inc
adc
jnp
ffreep
xor
mov
mov
das
clc
repz
aas
test
sub
sahf
mov
inc
push
rorb
inc
jg
fimull
mov
addl
mov
lea
fmulp
lret
test
jmp
stc
dec
faddl
in
andl
std
mov
and
loope
popa
enter
pusha
daa
inc
out
push
aad
out
hlt
addr16
cmpsl
in
xor
cmp
fwait
sub
pop
inc
mov
jbe
out
jae
outsl
int3
les
addr16
sti
and
mov
mov
bnd
xchg
jb
mov
cmp
rcrb
pop
out
mov
out
xchg
bound
enter
in
adc
mov
xor
inc
enter
sub
arpl
xchg
xchg
test
fwait
jns
mov
rcl
test
push
into
sub
and
dec
ljmp
jns
int3
dec
jbe
or
out
mov
out
outsb
out
fildll
pop
icebp
adc
hlt
mov
das
sbb
xor
and
inc
aad
jmp
pop
cmp
and
pop
push
and
pop
cmp
test
arpl
hlt
sbb
push
jle
out
fstpl
out
test
inc
cli
test
pop
cmpl
orb
fnop
call
push
lret
ficoms
jo
xchg
roll
cmp
rclb
lock
xchg
rclb
pop
adc
push
xchg
inc
mov
mov
lcall
push
jmp
popf
add
fwait
es
scas
jo
notb
cmp
movsb
cli
mov
cmp
xchg
xor
inc
and
shr
shlb
cmp
loop
lods
dec
mov
pushf
into
in
mov
or
jbe
mov
test
adc
sub
aas
rcll
xor
push
push
mov
jne
push
stos
mov
aas
cmp
mov
test
sub
into
cmp
test
sahf
ja
jmp
cld
hlt
cmp
inc
scas
stos
push
das
pop
pusha
mov
mov
add
xor
dec
ja
leave
popf
cwtl
fistpll
dec
mov
adc
out
jmp
jae
int
int
and
push
inc
inc
push
js
or
mov
out
out
mov
pusha
inc
js
push
lods
mov
xchg
add
imul
mov
dec
rcll
pop
pop
xor
mov
or
push
dec
push
mov
sti
jo
adc
xchg
mov
loope
fucom
fsubs
mov
call
mov
xchg
shl
std
ja
or
mov
dec
jnp
dec
mov
lahf
or
xchg
call
aad
ljmp
andl
or
daa
clc
inc
hlt
js
cmp
xchg
adc
jmp
repnz
inc
sbb
mov
pop
sti
lds
fmulp
push
ret
xchg
sub
out
subl
dec
pop
and
push
add
add
dec
dec
loopne
pop
or
adc
and
sbb
aad
xor
imul
add
ss
mov
roll
aad
stos
push
add
pop
in
adc
mov
aad
lahf
xor
imul
rol
imulb
mov
into
out
leave
pusha
icebp
push
jg
clc
mov
js
test
cwtl
pusha
xlat
call
das
stos
fists
mov
xor
inc
sub
push
cmc
mov
mov
fstl
fwait
or
insl
sbb
clc
or
xor
jne
aad
adcl
lods
aaa
ljmp
xchg
lret
jns
mov
movsb
mov
mov
and
jo
mov
ss
outsl
adcb
test
fidivs
sbb
xchg
mov
pop
leave
jnp
filds
sub
inc
aad
sbb
ljmp
pushf
cmp
mov
ret
add
cmc
sti
cmc
fisubrl
scas
sub
mov
add
jbe
adc
dec
int3
mov
jns
and
imull
subb
stos
das
and
xchg
cmp
arpl
data16
adc
std
jp
ja
sbb
xchg
fxch
push
les
in
les
xor
add
sbb
xchg
mov
leave
stos
in
adc
mov
pop
cmpsb
je
divl
xchg
xor
iret
pusha
jge
dec
fstpt
popa
xor
xchg
cwtl
pop
lds
xchg
aam
jle
or
or
jbe
pop
lret
stos
repnz
ret
lcall
test
ljmp
and
sub
xchg
push
lods
scas
mov
adc
ror
cmp
out
nop
fs
add
stos
in
xorl
je
xor
xchg
adc
mov
js
push
mov
lahf
in
xchg
loope
test
and
bound
arpl
je
sub
rorl
inc
in
pop
mulb
dec
dec
cmp
in
add
sti
xchg
and
scas
or
stc
jno
mov
add
or
sbb
mov
lea
jg
enter
mov
roll
stos
push
push
fldt
ficomps
int
test
inc
loope
mov
lock
sti
aam
cmp
sbb
pop
cld
sti
jno
imul
lods
mov
xor
pop
mov
jno
mov
cmp
lods
adc
cmp
in
lods
mov
inc
jns
lret
cld
xchg
pop
and
jns
rcr
pushf
cmp
or
rorb
pop
outsb
add
pop
jae
fsubrl
add
sahf
mov
mov
adc
stos
xchg
pop
mov
lret
mov
int3
mov
and
sahf
lods
je
mov
test
and
bound
pop
pop
push
std
xor
and
push
xchg
cld
faddl
popf
xchg
in
sbb
out
push
add
jecxz
iret
bound
xchg
sub
pushf
pop
jno
dec
pop
push
adc
shlb
mov
add
lret
adc
inc
mov
push
mov
subl
pop
call
movsl
cmp
sahf
mov
in
push
add
imul
sbb
mov
daa
pop
std
out
mov
scas
inc
inc
jp
test
sub
int
and
mov
jmp
in
sbb
jnp
fwait
inc
ret
lret
xchg
and
pop
push
mov
pushf
out
mov
rcll
adc
add
scas
cli
out
sarl
xchg
jecxz
addr16
xor
fsubr
mov
lret
mov
add
inc
sbbb
ja
fimuls
mov
test
mov
xchg
dec
sub
lea
lret
fwait
and
cmp
mov
test
mov
jb
out
mov
adc
mov
mov
inc
add
push
cmpsb
and
push
cs
imul
add
add
fstps
mov
or
adc
fdiv
lods
cmpsb
in
mov
shrb
cmpsl
or
dec
pop
jl
xor
icebp
push
in
cwtl
into
push
movl
icebp
xchg
mov
ret
clc
pop
xor
mov
jo
rorb
mov
dec
aad
adc
mov
push
jg
aam
push
mov
mov
loope
lea
ficompl
add
nop
add
imul
out
mov
mov
pop
out
cltd
roll
in
jnp
xchg
sub
clc
cli
int3
xchg
or
dec
pop
in
inc
jle
jbe
mov
adc
mov
jmp
fsubrs
lcall
fcmovnb
mov
xorl
into
call
jo
mov
test
add
addl
xchg
add
pop
test
add
cmc
sub
xchg
push
in
lret
sbb
cwtl
push
and
adc
cmp
push
out
arpl
sbb
aaa
and
jmp
jg
dec
int3
leave
or
cmpsl
lds
cmp
out
and
dec
inc
mov
icebp
adc
addr16
mov
sbb
mov
inc
aas
out
or
les
and
xchg
stos
mov
clc
rol
dec
add
leave
adc
out
lcall
inc
repz
mov
popa
je
jmp
mov
scas
scas
repz
lret
test
xchg
roll
bound
daa
inc
out
inc
aad
xor
pop
push
or
xchg
push
sbb
mov
pop
and
mov
cli
gs
ja
insb
xor
xchg
push
xor
adc
cmp
das
cmc
repz
jle
ret
lcall
lcall
xor
pusha
ds
xor
mov
sbb
insb
push
cmp
and
pop
push
inc
mov
and
cmc
adc
push
inc
fsubrp
loope
subb
sub
mov
or
repnz
or
xchg
cwtl
and
mov
iret
mull
jp
ret
lea
xlat
mov
cmp
adc
jbe
adc
cmpsb
lods
enter
adc
mov
loopne
xchg
xchg
xor
test
sbb
aad
cmp
mov
pop
jns
subb
out
fildll
out
push
clc
jne
mov
xor
stos
mov
or
pop
cmpsl
or
push
xchg
dec
xchg
jmp
test
sbbl
je,pn
inc
inc
iret
pop
and
call
enter
mov
xor
stos
int
into
and
shrb
inc
or
outsl
pop
jg
loopne
js
jb
lods
in
int
add
call
push
hlt
out
sar
clc
push
xchg
or
in
std
jp
mov
lds
add
jle
pop
xor
fsubrs
insl
lcall
in
jne
cmpsb
insl
icebp
pop
cmp
dec
aad
cmp
cvtpi2ps
dec
lods
mov
xchg
call
nop
fs
les
es
loop
cmp
push
pop
jp
sahf
jnp
push
jno
into
pop
push
adc
cs
mov
xlat
dec
ds
leave
mov
out
nop
mov
das
xchg
mov
jmp
add
jle
js
jp
sbb
inc
lods
aas
scas
mull
or
jle
xchg
js
push
jge
cwtl
pop
mov
xor
pop
fisubrl
mov
adc
loop
jmp
shlb
lds
or
je
test
int
sub
xor
mov
mov
dec
shll
pop
adc
pop
out
xchg
add
cwtl
mov
mov
adc
sti
loop
stc
lds
movsb
hlt
mov
data16
jp
stc
bound
jle
jbe
insl
mov
push
rcrl
ljmp
je
or
xchg
jb
jl
pop
ficoml
dec
inc
push
xchg
sti
repz
lods
jecxz
into
jnp
xor
call
test
xlat
mov
imul
sub
daa
stos
dec
xchg
cmpsl
movsb
dec
fisubs
mov
xchg
pop
push
dec
mov
pop
mov
cltd
popa
stos
push
cmpsb
sub
in
mov
testl
pop
test
pop
mov
cli
imul
test
dec
stc
pop
in
test
les
sub
rolb
pusha
nop
test
xchg
sar
xchg
mov
jnp
pop
loope
or
add
pushf
mov
into
idivl
adcl
lret
and
dec
adc
sbb
mov
fistl
inc
sub
xor
imul
xchg
pop
aaa
cmp
ja
push
vpshld
outsb
pop
push
into
add
inc
test
pop
decb
xlat
jmp
mov
push
lret
and
mov
das
shll
adc
out
xchg
or
xor
ds
fldl
test
iret
shl
jp
push
cmovbe
jg
jmp
mov
jne
out
or
mov
jecxz
pop
pop
in
inc
mov
call
xor
xor
sbb
mov
mov
mov
sbbb
xor
lds
cmp
mov
inc
adc
sbb
out
shrl
mov
push
sub
cld
cld
mov
mov
lods
cmc
push
sbb
cmp
sub
push
sub
stc
mov
xlat
enter
or
mov
mov
popl
push
ss
push
rdtsc
xchg
lahf
je
xlat
mov
jp
test
mov
popa
pop
and
addr16
sbb
sub
mov
push
sarb
xchg
imul
mov
jbe
in
push
dec
scas
jae
or
and
pop
jle
or
mov
lock
inc
xchg
inc
sub
test
outsb
addr16
jo
mov
outsl
adc
xor
scas
xchg
test
je
cmpsl
push
fcom
push
fwait
push
or
sbb
pop
pop
ja
fdivrs
xchg
int3
adc
enter
jge
dec
pop
loop
leave
dec
adc
cmp
bnd
mov
adc
arpl
xchg
mov
xchg
loopne
xor
mov
dec
mov
fldenv
jp
sbb
clc
scas
pop
nop
clc
xchg
roll
std
or
int3
lahf
mov
das
add
dec
jle
jge
js
pusha
push
mov
popf
push
xchg
icebp
pop
imul
mov
mov
arpl
cwtl
sbbl
cmp
dec
repnz
or
jne
adc
fsubrs
test
mov
and
int3
ljmp
push
pop
add
test
push
addb
inc
std
xor
inc
jns
test
js
js
stos
loope
lock
lcall
cmp
es
loope
js
add
push
mull
pusha
data16
adcb
push
xorl
out
push
push
cmpsb
jmp
bound
insb
mov
jmp
shlb
push
jl
scas
mov
pushf
jne
sub
enter
or
inc
fwait
xor
stos
and
push
jle
clc
jo
das
aas
or
push
sahf
mov
aas
rolb
rclb
aad
mov
subb
push
xchg
xchg
pop
sub
cltd
loope
xor
in
rclb
jecxz
mov
and
push
inc
mov
or
lea
push
sub
sub
popa
xchg
leave
cmp
lret
test
shlb
adc
int3
out
stos
test
sti
mov
jne
mov
popa
int3
mov
ret
add
dec
ret
ret
lret
mov
mov
pop
mov
inc
jg
std
les
cld
fisubs
and
outsb
jecxz
inc
jo
sbb
jge
push
mov
out
jl
or
or
aaa
and
sub
enter
data16
pop
adc
or
cwtl
ja
ud1
lret
push
gs
xlat
jmp
ljmp
aas
add
ret
dec
test
in
jae
adc
push
or
mov
clc
in
mov
xchg
mov
icebp
jmp
push
lods
out
jle
inc
sub
jbe
lods
dec
nop
and
mov
cmp
lret
mov
gs
sbb
xchg
lret
sbb
jno
lret
xor
sti
pusha
ds
dec
addr16
push
iret
sbb
sti
lret
aad
xchg
jnp
xchg
sahf
cmp
cwtl
xchg
xor
lods
jl
out
xlat
ja
push
mov
cltd
xchg
xor
push
fbstp
mov
cs
xor
fiadds
pop
lcall
xor
dec
jp
jae
pop
mulb
insl
js
push
add
es
ds
and
idivl
push
cmp
insl
mov
sbbb
dec
xchg
fidivl
ljmp
pop
inc
mov
dec
adc
popf
cmc
shlb
cwtl
addb
fs
popf
push
adc
cmpsb
outsb
inc
mov
in
add
push
popf
sbb
loopne
or
scas
pop
in
adc
out
scas
lea
repz
mov
cmpsb
jge
mov
jb
call
mov
insl
inc
mov
dec
xchg
cmpsl
pop
jb
popf
clc
scas
imul
lea
mov
out
addr16
adc
jae
cwtl
negl
pop
push
jo
inc
jmp
adc
jecxz
movsb
xor
loopne
sub
or
cmp
fisubrl
push
xor
xor
cwtl
mov
rcll
popf
mov
jp
ds
xchg
xchg
sti
sbb
xor
movsl
xchg
mov
sub
mov
sbbb
sti
inc
out
cmpsb
dec
in
lock
bound
pop
js
or
iret
or
mov
sub
icebp
adc
jp
push
dec
pop
or
rorl
int
fmull
outsb
test
push
cmp
lock
popa
lret
ds
push
jbe
repz
sub
inc
add
pusha
mov
mov
or
sub
pop
lods
ds
ja
ja
mov
sarl
sahf
xchg
test
cmp
out
std
push
mov
jle
sub
into
pop
inc
pop
lds
xor
movsb
mov
jae
jns
xor
or
mov
jl
xchg
lcall
xor
mov
mov
mov
push
popa
loope
cld
adc
int
rolb
mov
movsl
cmp
clc
push
pop
sub
adc
and
ficoms
fcoms
pop
mov
pop
sub
cs
out
push
xor
jl
pop
pop
loop
sbb
push
aaa
add
pop
imul
loopne
add
sub
stc
inc
in
sbb
cmp
fildll
mov
cmp
lock
jl
fsubr
xor
dec
xchg
jae
xchg
pop
sub
add
cmp
or
sbb
push
inc
cwtl
cld
xchg
sbb
scas
aaa
insl
pop
fmuls
das
sub
out
mov
nop
fcoml
popa
loop
push
dec
sbb
add
clc
sub
mov
packssdw
pop
cmp
aad
out
push
mov
out
loope
xchg
std
inc
insl
out
jnp
inc
test
clc
lods
add
inc
jle
int3
repz
jns
push
jne
ljmp
cmp
movsl
loop
jmp
pop
outsl
jp
jge
out
loopne
lret
mov
sub
icebp
mov
mov
fwait
test
cmp
xor
adc
ret
adcb
push
into
mov
inc
jmp
stc
fdivp
and
sub
push
xchg
fwait
push
mov
push
push
loop
add
cmpsl
fldt
add
aad
fmul
test
pop
jge
xor
jno
mov
fildl
cmp
or
aad
inc
jp
pushf
dec
pusha
adc
inc
fiaddl
data16
adc
mov
lret
daa
inc
inc
jbe
lret
pop
push
xchg
cmpb
sub
lahf
sub
cwtl
into
cltd
sub
jecxz
jns
sti
mov
sar
cmpsl
inc
sub
mov
lods
movsl
rcl
in
adc
arpl
test
out
int3
dec
mov
insb
sahf
std
inc
enter
sbb
rcr
pop
shrb
imul
cmp
jo
ja
pop
mov
call
mov
ljmp
hlt
or
lods
inc
xlat
mov
lret
les
loopne
inc
or
clts
inc
jns
adc
cmp
movsl
mov
aas
inc
fistl
dec
push
push
mov
adc
cmpsl
pop
xor
jle
jp
or
shll
xchg
bound
rorl
movsl
cli
clc
subb
leave
dec
or
addr16
jns
test
scas
scas
shll
xor
push
push
adc
xor
cli
inc
inc
jae
ja
push
cmp
and
dec
inc
jle
sub
enter
ss
jecxz
cltd
xor
pushf
dec
in
fistpll
or
jmp
je
or
push
push
and
je
repz
es
add
roll
mov
lcall
adc
out
lea
pop
enter
fsubrp
add
enter
aas
icebp
nop
ror
sbb
and
mov
push
sub
mov
icebp
push
xor
jo
xor
jp
dec
and
adc
lret
xor
inc
jg
loop
inc
decb
pusha
pop
or
push
pop
pop
jle
push
nop
mov
sub
adc
or
cltd
mov
movsl
cli
inc
cmp
mov
rclb
mov
adc
inc
loopne
lock
sbb
fstpt
inc
sbb
add
dec
faddp
mov
fsubs
lcall
push
addr16
sbb
in
aad
mov
shl
inc
fidivs
pusha
roll
push
add
sbb
leave
outsl
inc
gs
mov
push
and
inc
add
std
inc
cmpsb
sub
cmp
and
cs
and
push
push
lahf
mov
popa
je
lret
stos
int
pop
push
jns
test
cmp
xor
mov
or
and
mov
mov
int
mov
sub
adcl
insb
add
or
mov
jmp
sub
js
test
cld
out
jmp
popf
insl
push
jl
test
cld
inc
adc
movsl
pop
fnsave
cmp
mov
xchg
test
xor
xlat
jl
idivb
movb
mov
push
or
out
xchg
aas
lea
fs
cmpsl
push
cmp
pop
dec
pop
dec
cli
sbb
inc
dec
sbb
cmp
movsl
cld
xchg
mov
inc
fdivl
lods
scas
test
cld
dec
scas
cmp
cmp
lods
xadd
test
mov
pop
imul
dec
bound
push
les
popf
nop
jbe
pop
push
pop
jle
xor
lea
int3
push
movsb
sbb
and
iret
ret
sub
cmp
popf
sbb
adc
or
sbb
sarl
mov
jmp
push
aam
cmp
mov
js
xchg
jp
outsb
xor
xchg
mov
or
lea
dec
sbb
clc
jno
or
in
gs
sahf
inc
cli
or
sbb
lahf
pop
mov
dec
cmp
jg
out
fsubrs
xchg
les
push
popa
dec
fisubrl
mov
sub
cmp
imul
test
ja
mov
lret
dec
jmp
mov
rcl
xor
mov
lcall
jmp
mov
jg
and
xchg
filds
out
mov
sti
andnps
adc
cmp
jle
in
jbe
mov
push
mov
and
fwait
test
mov
pop
popf
xchg
mov
push
jp
lret
mov
hlt
lds
jecxz
mov
xchg
push
pop
lea
or
scas
test
lahf
addr16
mov
stos
sub
add
dec
fsubl
xchg
pushf
hlt
popa
into
and
movsl
sarb
pop
loopne
sub
cltd
lea
push
jno
push
fs
mov
mov
ret
mov
stc
mov
dec
clc
ja
xchg
or
js
xor
js
mov
cmp
ljmp
adc
jecxz
mov
and
mov
movsl
aad
cmpsl
test
xchg
ja
mov
add
pushf
loopne
addl
or
adc
xchg
pushf
insb
cmp
adc
push
add
cmp
mov
insb
je
or
sete
push
mov
aaa
inc
int
jle
push
imul
sbb
pop
ss
cmc
test
add
inc
addl
mov
sub
cmpb
cltd
or
mov
xor
leave
push
push
lret
xor
in
jno
pop
int
lds
push
repz
jb
add
add
div
mov
data16
dec
lods
mov
sahf
pop
inc
test
xor
mov
lcallw
jb
shll
jge
and
loopne
push
dec
rorb
push
sub
pop
jae
jo
mov
insb
push
ljmp
sub
shrb
mov
mov
test
xor
cmp
xor
dec
jno
cmp
inc
mov
jle
fildl
divl
pop
or
mov
inc
xor
jp
and
out
mov
lods
test
lret
push
lea
in
into
loope
push
sarl
hlt
fcmove
sbb
mov
shll
cwtl
inc
lods
mov
sahf
push
inc
mov
add
imul
lcall
cmp
add
jmp
jle
jb
fisubs
inc
mov
jno
push
adc
aaa
int
push
shlb
push
fwait
pop
stos
into
cmc
popf
mov
js
aad
push
cs
sbb
mov
push
test
cld
int
dec
mov
and
xchg
sub
arpl
adc
push
out
push
out
xchg
sbb
shlb
inc
pusha
pop
mov
into
xlat
outsl
xchg
push
sbb
sbb
pop
out
pop
add
dec
int3
pusha
lcall
inc
mov
xchg
jp
xor
push
sarb
imul
shll
lret
jecxz
out
inc
fstpl
add
push
lds
adc
mov
cmp
sbb
inc
imul
pushf
push
mov
fwait
arpl
or
lret
mov
neg
push
inc
aaa
scas
pop
popa
dec
and
hlt
lea
inc
into
fstl
cmp
dec
inc
jns
in
pop
add
jne
lea
hlt
or
add
mov
scas
fcomps
movsb
mov
cli
and
mov
dec
add
std
cmpsl
or
cmc
shrb
add
insl
sub
dec
movsb
outsb
and
aas
insb
sub
push
sbb
outsl
incl
gs
insb
movsb
ljmp
icebp
ror
adc
adc
ficompl
repz
xchg
loopne
cltd
mov
jg
aaa
stos
pop
fs
movsb
push
int3
mov
fnstcw
test
cmp
push
push
imul
push
xchg
adc
sbbl
pop
pop
cmp
fisubl
fcompl
jl
sbb
pop
popf
adc
aas
sti
aad
xchg
fisubs
aad
and
jno
lock
jge
sub
or
pop
jno
outsb
sbb
pop
mulb
add
pop
jle
pop
das
dec
nop
inc
scas
das
pop
pop
mov
and
fs
mov
test
pop
gs
mov
out
mov
in
jmp
lret
stos
or
std
xchg
pop
lods
jmp
dec
out
inc
cmp
or
and
jmp
mov
inc
jno
mov
nop
sub
cmp
inc
fdivr
out
ja
push
pop
mov
in
repnz
dec
push
push
mov
jno,pt
mov
push
adc
ret
mov
test
pop
nop
test
xchg
cmp
jp
loop
pop
int
or
sti
or
inc
add
pop
and
out
jnp
call
sub
xchg
testl
and
pop
and
or
pop
xchg
or
pop
xor
pusha
mov
add
fwait
lahf
mov
stos
fld1
lock
sub
dec
das
and
xchg
sbb
scas
aaa
daa
add
mov
xor
push
mov
xor
push
shlb
cmp
push
mov
adcl
lcall
je
sbb
cs
mov
icebp
loopne
mov
adc
sub
test
test
pop
icebp
cmp
mov
mov
insl
mov
jns
cld
in
pop
shr
cmp
jg
sub
test
out
xor
in
inc
es
sbb
cld
ljmp
iret
jb
nop
in
inc
pop
stc
mov
sbb
mov
imull
lcall
mov
dec
add
stos
and
jg
dec
inc
call
cmp
cmp
push
xchg
stos
mov
sbb
in
cwtl
jno
dec
sbb
add
mov
pop
inc
mov
mov
jl
stc
sbb
xor
dec
adc
mov
in
sbb
xchg
xchg
and
cmpsl
and
lret
inc
and
fldt
push
out
ljmp
adc
xchg
mov
push
fucomp
mov
and
cmpsl
mov
adc
dec
fcomp
std
cmp
push
adc
aad
mov
mov
pop
hlt
xchg
popa
es
call
xchg
sub
jmp
or
adc
adc
gs
insb
xlat
inc
and
add
fbstp
subb
push
mov
cmp
call
add
fisubs
mov
sbb
fiadds
insb
jge
add
cmp
xchg
add
in
inc
repnz
lcall
das
imul
sub
cs
out
cmpsl
xor
jnp
clc
test
hlt
inc
pop
mov
fs
cmp
aam
cwtl
inc
out
cmpsl
mov
roll
mov
js
push
inc
lods
popl
mov
pop
dec
xchg
or
loop
fbld
movsl
jp
push
pop
mov
int3
sbb
mov
sbb
mov
xchg
shr
mov
dec
dec
mov
fstps
dec
jno
dec
jno
rorb
cld
cli
lods
ss
not
pop
sbb
fwait
pop
stos
dec
movsb
xor
dec
pop
stc
adc
pusha
fdivrs
cli
fs
fcomps
pop
sbb
xor
inc
scas
lret
mov
push
xor
test
xchg
and
aam
lahf
test
xor
or
adc
mov
xorb
jns
or
negb
inc
xlat
jmp
inc
jbe
je
loope
push
xchg
inc
pushf
js
push
and
cld
xchg
sbb
sbb
loope
popf
loopne
repnz
lcall
jne
test
jp
push
xor
pop
std
stos
not
js
mov
icebp
aas
andl
sub
mov
jae
adc
fstp
loopne
or
xor
mov
add
mov
imulb
les
dec
dec
push
das
sbb
jnp
or
xor
jg
movsl
mov
aad
mov
repnz
js
adc
pop
push
adc
aas
pop
xchg
pop
aaa
loopne
xor
cmp
mov
pop
and
jae
sbb
xchg
cmp
inc
hlt
cmp
sub
jns
int
in
cmpsl
inc
adc
dec
sahf
cmp
xchg
mov
enter
xor
jns
sub
cmp
insb
add
xchg
sub
mov
sbb
aad
aaa
jg
into
cmp
xor
lret
pushf
add
mov
cmc
notl
stos
ljmp
pop
sub
fadds
movsb
stc
push
or
icebp
mov
pop
mov
hlt
push
iret
ljmp
sbb
sahf
lahf
fwait
pop
xchg
mov
or
dec
and
cmp
jb
out
gs
enter
in
in
xchg
in
xlat
push
sarb
push
dec
add
shl
and
hlt
sub
jp
dec
sub
leave
addr16
xchg
pop
pop
ja
add
pop
or
sbbw
push
in
fdivrp
adc
mov
into
out
test
jmp
xor
xor
xlat
call
sub
mov
pop
mov
data16
and
insl
cmp
add
pop
leave
aam
lret
xchg
jecxz
jns
inc
ret
stos
dec
lcall
sqrtps
mov
cmc
push
xchg
mov
mov
nop
nop
lahf
cmpsl
mov
jae
dec
adc
sahf
int
mov
add
pop
aam
lock
adc
sub
mov
pushf
sub
pop
bnd
sub
mov
outsl
imul
addr16
add
fwait
or
sub
ljmp
imul
adc
sub
lods
pop
lods
sbb
out
push
sub
dec
mov
inc
loope
push
mov
test
cmp
jecxz
and
dec
fcoml
lahf
inc
inc
dec
xlat
icebp
inc
xchg
lods
lret
int3
or
cmp
pop
les
cmp
jnp
dec
int
mov
lret
imull
cmpsb
mov
mov
pop
mov
push
lods
jb
adc
and
jae
add
or
icebp
bound
cli
gs
test
pop
xor
add
sbb
sub
push
sti
mov
fcmovbe
push
stos
add
add
pop
test
inc
mov
push
or
inc
daa
stos
sub
icebp
pop
sub
jge
adc
out
xor
mov
xlat
xchg
dec
mov
sti
popf
nop
sub
xchg
xor
push
push
jp
xor
shll
lods
push
push
subb
jno
dec
inc
mov
xchg
push
lret
roll
push
shll
adc
sbb
int3
inc
jbe
cwtl
and
cld
sbb
adc
stos
outsb
fisubrl
scas
push
sbb
mov
xchg
cmp
aam
push
mov
mov
pop
xor
clc
dec
push
repnz
popa
movl
xchg
faddp
sahf
pop
scas
iret
es
notb
rclb
xchg
xchg
mov
dec
insb
pop
sub
fsubl
add
fcoms
cmp
aaa
adc
xchg
cmpsb
scas
xchg
imul
into
sbb
fldenv
xlat
cs
addr16
jecxz
add
inc
in
cmpsl
adc
xor
es
leave
orb
cltd
jl
in
loop
jecxz
insl
addl
adc
xchg
xchg
sbb
cmp
push
dec
lret
mov
lgs
cmp
xor
loop
stc
mov
or
pop
hlt
or
cli
enter
jmp
shr
xchg
cmpsl
pop
push
ja
addl
xchg
cmp
bound
ffree
andl
jg
push
loop
addl
mov
inc
and
sbb
lods
daa
xor
mov
rclb
lods
mov
mov
repnz
scas
adc
and
fistpll
push
repz
add
scas
mov
sub
dec
jb
adc
adc
dec
movsl
jne
lea
mov
mov
pop
mov
jne
leave
jno
icebp
pop
sub
pop
pop
imul
aam
jp
xor
in
test
xor
mov
cs
jmp
adc
sbb
jle
shrb
mov
mov
cli
addr16
out
mov
popa
cld
or
dec
xor
aad
dec
mov
jae
insl
rorb
jg
sbbl
shl
repz
outsb
push
mov
fdivrs
adc
or
and
sahf
int
rcrb
push
call
shll
bnd
stc
popf
sub
xor
mov
jne
jle
cs
scas
push
sbb
cmp
pop
inc
xchg
and
cmp
mov
mov
and
pop
out
xchg
and
mov
inc
inc
sub
fistl
test
leave
aad
mov
jo
push
mov
pop
xor
push
cld
jne
adc
arpl
loope
lock
pop
push
scas
or
adc
mov
add
jmp
imul
out
hlt
add
add
dec
lret
les
jg
sbb
leave
xlat
sub
push
jb
add
dec
mov
jmp
mov
leave
cmpb
sti
xchg
pop
mov
cs
outsl
sbb
ljmp
sti
mull
add
outsb
popl
out
gs
cmp
gs
jnp
fwait
xor
push
std
sbb
loop
sbb
xor
ljmp
xor
fisubs
add
je
fmulp
enter
test
add
pop
dec
lods
dec
insb
inc
testb
test
std
add
pop
cmp
and
mov
stc
ljmp
in
mov
iret
mov
fistl
jp
jl
adc
dec
lock
pop
rcrb
fdivp
xchg
arpl
lret
sub
popa
scas
xlat
mov
insb
andb
push
enter
nop
das
sbb
cmp
outsl
push
xchg
mov
stos
decb
adc
sti
les
or
aaa
sbb
sub
cltd
inc
and
pop
mov
push
dec
pop
xor
mov
cmpsl
outsb
cmpsb
xchg
sbb
cmp
andb
rorl
inc
push
and
dec
pop
in
fdivl
pop
xchg
fs
inc
sub
rcrb
rcll
adc
out
stos
cmp
sbb
cmp
sub
xchg
adc
push
dec
jp
cmp
or
mov
mov
outsb
scas
jp
mov
loop
jne
test
ret
es
sar
nop
pushl
hlt
popa
dec
jb
mov
shlb
and
gs
inc
push
sub
movsl
addr16
andl
popa
sbb
cli
fs
lea
jo
test
int
push
dec
pop
ljmp
in
jae
pop
dec
inc
inc
sub
jp
lcall
incb
xlat
xchg
fs
xchg
aaa
mov
fs
mov
scas
lock
aam
push
mov
inc
test
pop
push
sub
or
outsb
fwait
mov
inc
jae
fdivl
lret
xchg
gs
jge
dec
stos
in
cmc
jmp
fcmovnb
mov
dec
into
fadd
aad
sti
cmp
mov
jmp
inc
ja
cmp
aas
cltd
adc
cltd
jle
into
outsl
push
add
sahf
adc
movsb
xchg
push
mov
sub
mov
rclb
imull
testl
fs
xchg
jg
data16
or
shrb
dec
ss
mov
adc
mov
mov
or
cmp
sub
jle
pop
ror
scas
sub
out
cmpsb
mov
shlb
lock
pop
ja
jmp
cli
or
or
sub
inc
dec
test
mov
jnp
es
push
cltd
bound
movsl
jo
xorl
pop
ljmp
xorl
cmc
aad
push
daa
jnp
inc
jge
xor
insb
sub
movsb
inc
xchg
push
mov
inc
scas
sub
mov
mov
movb
push
adc
mov
pop
int
loopne
cmp
in
cmp
and
out
jge
scas
fstpt
bnd
dec
stos
stc
sbb
imul
jno
push
mov
rolb
enter
ljmp
jg
nop
mov
lods
adc
mov
mov
fcmovnb
negl
fdivs
mov
cmp
dec
mov
outsl
mov
and
ja
or
add
dec
jecxz
sbb
lret
pop
lods
xor
jp
sub
scas
fs
xor
clc
outsb
in
mov
mov
xor
mov
hlt
es
fdivrp
in
dec
xchg
mov
mov
sub
xchg
andl
jnp
or
cmp
lock
or
dec
dec
push
rorl
fldenv
ror
lea
scas
ret
loope
sub
scas
sub
adc
mov
cmpsl
test
mov
mov
mov
jnp
mov
movsb
test
adc
mov
cmp
fnsave
jmp
adc
in
addr16
add
jp
mov
out
pop
gs
pop
sub
mov
push
jmp
and
jle
popf
push
fimull
cli
lods
call
and
cmp
call
fidivrs
les
sub
stos
stos
jb
adc
pop
jo
sbb
popf
fs
add
hlt
in
int
or
cmp
xchg
ss
imul
test
repnz
cmp
in
leave
iret
inc
ja
das
push
lea
jae
and
data16
xorb
pop
xchg
pop
xor
xor
aad
push
pop
add
shl
les
sar
and
push
bswap
je
gs
mov
mov
pop
mov
jo
push
rcll
lea
mov
pop
inc
pop
dec
push
dec
out
cmp
lret
in
sbb
or
push
cmpsl
mov
insb
negb
les
sub
mov
fcomps
ja
loop
out
mov
out
xchg
lds
xchg
cld
cmpb
pop
decl
sub
add
inc
mov
imul
bound
jbe
mov
das
rorl
mov
clc
cwtl
je
jge
loope
push
dec
mov
mov
mov
stc
jecxz
or
in
sbb
adc
stos
pop
fimull
aaa
jle
in
dec
pextrw
sub
shr
fwait
popa
daa
sbb
fwait
daa
lods
pop
jmp
xor
insb
adc
ret
xor
cmp
push
mov
adcb
aad
fwait
or
in
and
repnz
int3
insb
sub
jnp
negb
jbe
mov
test
lcall
sub
subl
cmpsb
sti
mov
movsl
enter
int
inc
sub
jb
and
mov
mov
repz
test
clc
clc
rol
aaa
push
adc
out
jae
ficoml
xor
dec
xor
and
repz
push
inc
lret
mov
cmp
inc
sti
jne
cwtl
idiv
mov
mov
mov
je
stos
lret
dec
shlb
dec
jno
lahf
das
add
sbb
out
dec
in
nop
push
es
sbb
ret
jge
mov
xlat
dec
mov
pop
mov
jmp
xchg
dec
xchg
push
adc
ret
sub
xchg
mov
mov
xchg
mov
in
adc
mov
test
arpl
pop
aad
mov
outsb
mov
mov
inc
mov
popf
sub
fnstcw
push
push
add
push
pop
sub
sub
sub
sbbl
push
jl
pop
xchg
rcr
int
movsb
movsl
mov
fs
add
popa
idiv
pop
xor
sti
or
icebp
mov
and
arpl
cmp
cmp
xlat
and
lock
mov
nop
push
je
push
popf
pop
stc
cmp
cmpsb
jnp
jp
jp
enter
mov
lds
jmp
enter
dec
cmp
dec
mov
inc
mov
outsb
mov
push
xchg
push
pop
mov
inc
and
movsb
or
pushf
mov
inc
dec
sbb
cli
add
xchg
xchg
sbb
inc
lret
sub
mov
mov
add
das
add
cmpsb
movsb
in
mov
in
inc
loop
mov
stos
lods
cwtl
mov
push
mov
cwtl
out
mov
adc
in
fisttpl
inc
jno
mov
js
mov
test
cmpsl
ljmp
or
call
idivb
mov
sub
lret
inc
or
fldcw
cmp
test
mov
lds
addl
cmpsl
mov
push
fistl
jns
and
pop
cmp
fmulp
pop
sub
jo,pt
aam
out
inc
pop
lar
dec
faddp
mov
mov
dec
rorl
mov
sub
cli
push
loopne
jmp
push
ret
aam
lods
xor
loope
jnp
xchg
ret
xlat
stc
push
repz
sbb
in
sub
repnz
arpl
xlat
ljmp
adc
adc
ret
fisttpl
mov
adc
add
enter
mov
mov
sbb
roll
aas
out
mov
mov
out
cmp
std
pop
pop
shll
adc
sub
gs
stos
cmp
sti
mov
push
insl
pop
aam
add
sub
loop
dec
jle
aad
std
fisubrs
cmpl
sub
sbb
xor
mov
push
jae
cmpsb
lea
or
push
lea
inc
pop
nop
pop
clc
push
movsl
lahf
inc
jecxz
fistps
ss
mov
add
jns
inc
adc
mov
jae
aad
sub
push
jo
add
push
loop
sarb
mov
dec
cli
shll
xor
fisttpll
xchg
stc
lahf
cmpb
sbb
mov
push
std
test
daa
clc
inc
push
and
fwait
push
cs
clc
and
or
aad
pop
jecxz
sub
pop
shlb
cmpsl
mov
lods
dec
sub
mov
test
movsl
inc
vmulss
or
out
inc
add
pop
loop
cmp
cmpsb
outsb
add
jbe
sbbb
inc
insb
fcmove
pop
das
nop
fldl
je
incl
lcall
xchg
outsl
add
jg
mov
xchg
pop
rorb
push
stos
sahf
jb
mov
icebp
or
aad
xchg
add
daa
insl
incb
fisttps
xchg
jge
repnz
lret
clc
mov
out
fwait
adc
stos
mull
push
dec
mov
xchg
jb
xchg
lock
icebp
push
xor
inc
stos
shrl
icebp
dec
cmp
sub
xor
mov
cmp
insb
icebp
mov
notl
cmpsb
xchg
mov
stc
testl
cld
sub
movsb
imul
xor
add
push
outsb
sahf
jne
and
pop
fwait
loopne
and
repz
mov
xor
pop
outsl
mov
in
push
stos
inc
sub
mov
jb
add
lods
mov
lret
mov
subl
das
jp
sti
ret
jo
jnp
xchg
lods
aad
pusha
xor
and
pop
mov
push
stos
sbb
dec
ret
or
test
or
orb
and
cmp
and
in
fildll
mov
sub
dec
movsb
mov
sbb
dec
mov
push
pusha
cmp
out
in
pop
pop
sti
dec
scas
xor
lcall
jle
aas
nop
inc
inc
leave
sub
in
pop
and
xchg
mov
sbb
cmp
or
or
push
mov
into
jg
mov
mov
push
out
popf
lahf
imul
or
push
pop
imulb
jmp
inc
push
xchg
call
out
hlt
iret
es
jl
xorb
lods
rcll
movsb
loopne
lods
push
xchg
fisttps
fistl
mov
repz
ljmp
int
jb
call
dec
pop
insl
ds
test
push
cmp
aaa
dec
sbb
jno
adcl
bound
pop
xor
fnstsw
add
sbb
mov
cmp
mov
xor
in
dec
jl
jle
arpl
shrb
clc
and
mov
in
pop
aaa
fmuls
and
cmovbe
ret
fiaddl
xchg
cwtl
jle
insl
inc
xor
cltd
mulb
jge
test
out
jge
fmuls
divl
out
pop
data16
setnp
sbb
ret
inc
shll
insb
mov
xchg
test
xor
loope
insb
dec
jmp
xor
outsb
cmpsb
icebp
lret
jb
inc
les
fs
pop
imul
pop
mov
dec
pushf
push
mov
lods
or
repnz
mov
push
sub
testl
xchg
mov
cmpsl
fldl2t
cmp
in
addr16
sub
jne
icebp
imul
push
xchg
jl
sub
xlat
cs
fsubrs
cmpsb
mov
sub
cld
inc
addl
cltd
dec
divl
xchg
imul
fisttpll
pop
cmp
jecxz
cmp
lea
jl
adc
lods
scas
addb
scas
push
ret
cmp
icebp
jg
jne
test
mov
ds
sti
lcall
seta
push
divl
and
lret
sub
test
in
xor
loope
adc
xor
loopne
mov
jno
loopnew
bound
stc
mov
sub
and
enter
pusha
test
rcrb
ljmp
mov
mov
add
dec
xlat
jl
xor
add
cmpsb
addb
das
adc
outsl
mov
inc
mov
int3
xchg
subb
shl
pop
rol
bound
mov
add
daa
sbb
lods
pushf
stc
mov
mov
dec
imul
mov
inc
sbb
cltd
sbb
mov
pop
loope
mov
add
aas
or
inc
adc
jmp
push
or
jmp
jmp
hlt
inc
push
mov
pop
and
mov
aad
pop
xor
inc
rolb
add
lahf
mov
aas
int3
in
add
jge
daa
lods
dec
into
ret
dec
lods
pushf
bound
pop
xor
dec
lods
xchg
push
movsb
push
mov
inc
mov
inc
dec
into
in
sar
sub
mov
pop
fstpl
inc
popf
add
into
and
or
inc
inc
sub
push
js
mov
fs
aam
testb
sbb
out
jnp
mov
pop
or
mov
jge
lret
jecxz
sti
roll
int
out
sbb
iret
mov
rcll
xchg
out
xchg
jmp
pop
mov
imul
cld
cltd
add
not
lcall
jno
aaa
loope
mov
xor
mov
jne
and
cmp
rolb
loopne
push
jg
loope
into
in
and
fisubrl
hlt
ret
lods
mov
popf
adc
fldenv
pop
sbb
cwtl
cli
xchg
mov
xor
inc
mov
shll
mov
sub
pop
or
or
push
enter
and
shll
sbb
outsl
dec
jno
push
fsubs
dec
add
adc
les
sub
push
jno
call
inc
scas
fsubrp
xlat
cld
jle
and
stos
push
pop
cmp
push
lret
out
mov
mov
ds
sbb
pop
jge
push
mov
in
cs
pop
mov
cmp
adc
jmp
sub
jg
pop
mov
je
ljmp
pusha
push
ljmp
pop
imul
xchg
jno
stos
lods
ja
cmp
mov
ljmp
je
xchg
or
fistl
mov
push
scas
jmp
push
jp
mov
and
or
les
ret
sbb
lods
cmp
jno
fldt
cmp
scas
out
out
sub
mov
push
dec
sahf
xchg
dec
mov
lods
insb
stos
xchg
popa
imul
scas
jbe
mov
add
sub
mov
inc
sbb
dec
push
cmp
std
lcall
jne
sarb
mov
test
sub
aad
pop
lret
scas
push
push
or
js
adc
mov
push
pop
aad
and
mov
aas
ret
dec
mov
pushf
lods
sbb
mov
movsl
ficomps
cmp
rorl
mov
lds
sub
loopne
pop
cwtl
cltd
adc
pop
mov
push
fidivs
scas
xchg
loope
lahf
or
pop
inc
enter
gs
andl
sub
fmul
movsb
mov
fbstp
ja
outsb
xchg
mov
jo
jmp
out
mov
ljmp
pusha
mov
pop
dec
push
jnp
mov
into
fwait
or
ret
scas
push
stos
mov
repnz
xor
adc
imul
xchg
and
test
pop
xor
push
or
gs
cs
mov
xchg
pop
xor
inc
out
popf
and
xor
fstpt
push
fs
jmp
mov
cmp
mov
in
inc
clc
jae
mov
js
sub
sbb
or
mov
int3
push
jge
jne
stc
inc
fisttps
xchg
add
subl
mov
std
pushf
mov
fnsave
loop
es
add
jl
sbb
and
in
mov
lret
andb
adc
mov
pop
pusha
test
inc
xor
js
push
xchg
cld
cmp
gs
pop
and
stos
jecxz
cli
push
clc
xchg
lods
jae
sub
andb
add
lds
or
lods
lods
hlt
xchg
pushf
cmpsl
popf
sub
fstpl
lret
push
lods
xchg
dec
ret
adc
pop
test
adc
out
pop
dec
test
adc
sarl
ljmp
je
xchg
mov
push
inc
inc
stos
mov
mov
mov
cmp
cli
xchg
mov
ljmp
mov
cltd
jp
in
mov
mov
adc
adc
std
cmpsb
sub
shrb
cmp
or
hlt
repnz
test
mov
lret
lock
aad
mov
cmp
dec
xlat
xchg
loop
jecxz
jmp
pop
dec
fnstsw
rol
jmp
stos
imul
fdivl
push
aas
xchg
pusha
sub
fisttps
push
scas
les
repz
nopl
or
jle
xor
or
cmp
mov
jbe
in
push
andl
pushf
inc
xchg
mov
sahf
jge
sub
in
xchg
ja
je
mov
test
push
mov
sub
sub
enter
mov
mov
popa
mov
mov
pop
cmp
or
dec
adc
fnstcw
clc
aaa
sbb
add
jmp
xlat
iret
sahf
fsubs
xchg
cmp
mov
inc
adc
test
and
negb
push
inc
add
movb
outsl
shl
aam
pop
loop
jne
mov
adc
adcb
lds
dec
mov
push
das
cmpsb
ds
mov
mov
mov
lock
and
inc
push
ficomps
add
lods
into
jbe
addb
in
pop
cmp
lods
push
inc
subb
jmp
aas
pop
daa
inc
dec
cmp
add
sarb
push
btr
xchg
ds
sub
mov
cmp
pop
sub
mov
movsl
push
clc
arpl
xchg
aaa
adc
shrl
xchg
pop
stos
pop
cmp
adc
push
mov
xchg
arpl
lods
fwait
mov
sub
out
and
arpl
add
cmp
loopew
addr16
repnz
mov
ljmp
push
loop
sub
movsb
inc
and
in
inc
dec
mov
pop
xor
mov
shll
imul
cmc
and
push
imul
shrb
andb
addr16
add
inc
or
aaa
scas
sbb
sub
or
icebp
or
cs
xchg
xchg
mov
data16
push
fiadds
xor
jb
fnstcw
mov
fisttpll
dec
xor
fistpll
ds
fiadds
subl
ds
notl
pop
movsl
repnz
jmp
adc
mov
xchg
jp
jo
adc
and
lahf
pop
add
mov
mov
out
notl
sbb
test
pusha
adc
out
popl
fsubl
push
pusha
icebp
sahf
xor
or
mov
ja
cmpsl
sub
pop
popa
jnp
in
outsl
lods
xor
xchg
hlt
in
test
dec
sub
pusha
push
mov
or
push
int
mov
out
xor
ret
addb
mov
cs
mov
mov
aam
fmull
fnsave
int
jb
sub
push
sbb
push
xchg
xchg
fwait
dec
fs
mov
jp
cmp
pop
notl
push
es
jecxz
hlt
ds
je
hlt
mov
ljmp
xchg
cmp
and
stos
ret
mov
bound
aaa
hlt
fcomip
sub
cmp
ds
cli
mov
mov
std
ljmp
std
jno
mov
add
pop
push
mov
adc
mov
push
fbstp
sahf
hlt
jno
xchg
inc
fs
adc
repz
pop
addr16
pop
xchg
xor
push
push
inc
mov
sbb
sbb
inc
cmpsb
dec
sbb
cwtl
jns
les
cltd
mov
cmp
mov
pop
jne
rcrb
sbb
inc
dec
adc
pop
data16
fldlg2
adc
xchg
dec
mov
aad
pop
shrb
icebp
out
lds
gs
push
outsb
cli
sbb
scas
lods
xor
jg
ss
jb
push
sbb
imul
rorl
ret
mov
pop
pop
sub
adc
addr16
sub
and
popa
dec
sub
imul
adc
cmc
fldt
jae
std
sti
mov
pop
cli
popf
xchg
push
push
push
mov
jmp
add
sub
cmp
dec
pop
gs
inc
jbe
sbb
cli
sub
adc
and
mov
sbb
mov
and
mov
and
adcb
xchg
sbb
cmp
cs
test
fisubrl
adc
ret
cwtl
or
xchg
shll
jns
xchg
sbb
adc
jns
jns
mov
mov
or
mov
aas
xchg
cltd
xor
pop
lea
jmp
adc
inc
mov
dec
popf
test
add
decb
push
adc
add
xor
insl
push
test
adc
mov
push
add
fbstp
fs
sub
mov
push
lret
hlt
jns
dec
push
aad
fsubrp
jg
pop
rolb
sbb
icebp
ficoms
xchg
mov
add
push
xor
dec
pop
cmpsl
scas
mov
mov
dec
sub
mov
xor
jbe
aas
inc
int
lcall
pop
rcll
mov
pop
or
int3
push
dec
xor
dec
cs
adc
cs
adc
in
bound
and
in
mov
enter
sti
pop
push
es
dec
mov
shrb
inc
cmpsl
sbb
test
ds
fs
push
mov
push
ds
test
add
aaa
inc
cmp
mov
lea
jl
mov
add
mov
mov
fdivl
sbb
jecxz
pop
mov
sbb
sbb
insl
mov
inc
jg
xor
stos
sub
mov
and
clc
lds
cli
rorl
mov
mov
lcall
pop
out
add
shlb
gs
sub
cmp
aas
mov
xchg
sbb
pop
cmp
add
xchg
mov
fwait
or
pop
jnp
pop
sbb
or
movsb
dec
jnp
ja
xchg
and
sahf
adc
gs
push
push
in
mov
in
pop
mov
stos
test
adc
testl
lret
pop
out
lahf
mov
or
mov
pusha
loop
rcrl
pop
leave
cwtl
push
and
fnstsw
add
dec
icebp
faddp
movsl
pop
out
add
push
out
mov
xchg
in
mov
cmp
cmp
pop
pop
call
push
adc
popf
or
jo
push
inc
push
iret
pop
lahf
mov
xlat
jle
push
dec
lret
scas
popa
sub
jb
mov
int
das
mov
mov
negb
sub
jle
dec
pop
sbb
jo
into
sub
jo
jp
andl
mov
jnp
push
mov
add
outsl
xor
xor
xchg
sti
mov
sub
ret
cmp
xchg
fcmovne
shl
ljmp
das
xchg
cli
sub
imul
or
rcrl
add
cmp
sbb
sti
fucomp
lods
add
xor
jb
pop
pop
cwtl
imul
test
and
xor
leave
mov
dec
ss
scas
hlt
add
cmp
jge
dec
lahf
outsb
dec
adcb
adc
mov
push
andl
push
mov
push
xor
cmpsw
mov
mov
jp
lret
pop
call
inc
push
popf
jno
inc
into
loop
test
cmp
and
fs
mov
sub
mov
add
rorb
mov
mov
pop
in
jp
enter
adc
imul
call
adc
lea
arpl
rcrb
adc
ds
pop
xchg
mov
sbb
je
jns
js
dec
cmpb
mov
xor
and
imul
orb
sysenter
test
pop
xchg
push
outsl
mov
jb
jbe
and
and
cmp
cmp
mov
popf
pop
adc
adc
bnd
push
sub
push
or
lods
and
adcb
icebp
outsl
and
popa
lds
je
in
faddp
jo
hlt
stos
data16
jnp
sahf
mov
add
insl
and
cmp
data16
xchg
and
pushf
loop
lock
fsts
rcr
mov
adc
sub
pop
and
sub
jmp
fsub
mov
and
pop
int3
jne
lods
rclb
push
scas
xor
mov
inc
cmp
rcrl
rorb
mov
scas
pop
push
xor
xchg
fdivr
xchg
push
lahf
mov
andb
sarb
mov
pop
mov
cwtl
es
ds
add
leave
inc
js
xor
or
or
or
repz
scas
jl
scas
aas
xor
jge
inc
sbb
fcmovne
dec
add
jmp
push
scas
jns
mulb
bound
mov
xchg
lods
test
out
in
loopne
xchg
in
mov
adc
enter
out
test
out
imul
insl
loopne
pop
add
push
sbb
fsubs
fwait
xchg
sbb
int3
xchg
sub
sbb
popa
mov
add
mov
jae
cs
cmp
out
cltd
jbe
jmp
sbb
dec
or
adc
jne
js
sub
icebp
xchg
lahf
cmc
mov
bound
enter
lret
mov
rcll
mov
mov
mov
mov
pop
xchg
cmpsl
adc
add
mov
jg
popa
or
repz
int3
cmpsb
mov
testl
lcall
cmp
dec
dec
adc
xchg
dec
ja
outsl
cmc
or
test
lret
and
push
lcall
jp
push
sub
pusha
inc
cli
fisubrl
cwtl
int3
les
jae
stc
mov
xor
cld
out
dec
sahf
fcmovnbe
mov
jo
movsb
mov
sub
dec
aam
fwait
lret
out
xlat
mov
dec
inc
pop
sbb
inc
test
les
int
pop
xor
sbb
sbb
pop
cltd
lcall
add
ljmp
and
insb
enter
mov
aad
mov
and
repnz
mov
push
pop
repnz
test
adc
mov
mov
shlb
mov
shr
dec
xchg
jle
insb
mov
clc
inc
fwait
push
dec
aad
push
in
mov
xchg
push
xchg
xchg
lcall
lret
stc
cltd
mov
test
outsl
dec
mov
mov
jmp
or
aaa
dec
pop
nop
pop
jl
mov
mov
jecxz
xor
dec
pushf
jo
in
rep
les
movsl
lret
dec
lods
vmulps
push
aam
loop
es
pop
aad
cld
ss
sub
pop
dec
ja
add
js
mov
in
mov
pop
push
push
pop
sbb
inc
stos
mov
add
cs
icebp
das
or
mov
cmp
push
lock
cmp
and
mov
lods
mov
sbb
add
and
sbb
cmp
sbb
dec
xor
loope
cmp
pop
ret
sbb
dec
mov
aaa
mov
shrb
adc
xchg
add
sub
loop
sbbb
dec
fsubrs
mov
cmp
inc
push
jb
adc
or
and
sahf
cwtl
lods
ret
lods
cmp
nop
sub
lock
pop
or
push
fwait
pop
mov
adc
aad
cmpsb
mov
divps
xchg
call
mov
xor
loopne
lds
mov
cwtl
mov
ds
rorb
and
out
dec
out
imul
fs
movsl
push
mov
sbb
clc
fwait
lds
aaa
add
mov
dec
addr16
cld
out
mov
push
sub
movsb
stos
sub
sbb
int
stos
jne
mov
shl
push
inc
push
lods
lret
addl
lcall
fwait
dec
mov
xor
movsb
pop
lcall
push
in
into
bound
adc
popf
fisubrl
in
mov
xchg
dec
cmc
mov
jnp
fcomi
icebp
or
mov
roll
out
dec
mov
movsb
inc
ret
add
lods
fs
shll
aaa
mov
sahf
add
xchg
sbb
push
ja
push
outsl
adc
mov
lea
jmp
jbe
mov
mulb
insl
ret
fucomip
xor
das
push
jecxz
loop
push
aaa
js
leave
xor
xchg
jb
jp
loopnew
jl
popf
mov
divb
insb
jno
scas
inc
push
cld
cmovg
adc
jbe
mov
lret
aam
sarl
inc
ljmp
dec
xor
pusha
out
pop
jg
mov
mov
mov
out
push
push
scas
mov
mov
dec
sbb
or
scas
cmc
inc
and
ss
in
cs
arpl
les
lret
mov
lahf
mov
xor
pop
ljmp
int3
adc
dec
pop
ficoml
jmp
je
dec
dec
ret
cmp
jb
sbb
inc
inc
push
xchg
mov
sub
mov
mov
and
sbb
sti
xlat
sub
int
sub
cmp
sub
into
aad
pop
adc
aaa
mov
fldcw
mov
sub
rorl
stos
push
lods
mov
rorl
call
nop
sub
in
xchg
push
or
imul
push
dec
aad
dec
mov
cmpsb
dec
lods
shlb
and
test
dec
ljmp
and
mov
add
dec
xor
stos
mov
enter
push
popf
add
jae
cwtl
sbb
subb
or
sbb
ret
lahf
jnp
mov
xchg
scas
jo
arpl
or
pop
add
inc
inc
out
add
pop
xor
jns
push
and
and
loope
rorb
inc
inc
add
push
pop
xor
dec
cmpsl
fdivs
push
cmpsb
outsl
mov
mov
adc
rcrl
inc
inc
addb
clc
push
jno
ss
push
push
test
loope
sbb
lock
sbb
jg
out
das
ret
cmp
icebp
call
cmpsb
jg
or
xchg
sbb
jo
pushf
jl
arpl
xchg
or
das
aas
icebp
jmp
push
popf
jle
or
rcrl
repz
stos
xchg
adc
les
cmpsb
pop
mov
call
xlat
inc
inc
addr16
lahf
pop
insl
aam
cmp
or
and
add
js
out
sbb
fiaddl
adc
pop
jl
jnp
jle
and
pop
sbb
mov
mov
fnstcw
mov
xchg
hlt
lret
ja
push
xchg
or
mov
dec
cmpsb
pop
and
push
mov
arpl
inc
mov
insl
sbb
dec
shll
ret
add
sar
or
mov
adc
pop
pop
pop
sbbl
sahf
mov
push
mov
inc
xchg
pop
jae
int3
ds
ljmp
push
mov
cmp
push
out
ljmp
movsb
or
pop
out
fs
stos
cmp
and
dec
dec
lret
aam
enter
stc
idivb
adc
je
iret
add
imul
int
das
fcmovnb
cmp
test
or
in
sub
test
mov
cwtl
pop
push
pop
fisubrs
jg
and
and
xchg
sbb
push
arpl
xor
inc
pop
addr16
inc
xor
xor
sub
jnp
gs
adc
jp
jmp
jns
leave
push
lret
scas
stc
roll
out
repz
mov
or
cmp
gs
push
cmp
xchg
mov
push
in
lock
popa
sub
repz
inc
jle
fs
and
push
mov
mov
and
push
daa
int3
pop
lcall
pop
mov
push
mov
pop
shr
or
call
cli
lret
orl
aas
inc
adc
hlt
xor
mov
in
fs
sub
scas
mov
aam
jge
hlt
das
cmc
cmp
push
les
dec
add
push
jnp
xchg
mov
jle
xchg
mov
das
cmpsb
fwait
sub
sub
shll
loopne
lret
cmpsb
int
frstor
scas
je
rorl
leave
cld
stos
jmp
jb
jb
adc
push
and
sar
negb
in
fistl
in
xor
sahf
negb
inc
shlb
sbb
rcr
cmp
fsubp
mov
ss
mov
or
mov
xchg
out
sbb
inc
add
inc
enter
divl
mov
cmp
and
sub
sub
cli
lret
in
sub
xor
xchg
data16
imul
fsts
mov
ret
mov
xchg
jne
pop
mov
dec
out
cld
ret
xchg
ja
or
mov
shl
cmpsl
mov
sub
pushl
jge,pn
cltd
inc
or
rorb
pop
cld
out
in
les
lret
adc
mov
add
xor
inc
fcoms
movsl
push
cwtl
sub
mov
push
or
mov
xor
or
inc
aam
pop
loope
push
arpl
sbb
faddp
loopne
push
xor
push
aaa
movhps
xlat
sarb
jge
popa
inc
aas
insl
imul
adc
addr16
cld
or
mov
insl
leave
pop
je
xor
call
or
mov
enter
cmp
dec
in
jmp
or
sub
fwait
xorb
dec
icebp
mov
pop
or
pop
nop
dec
xchg
jp
outsl
dec
pop
dec
inc
dec
outsb
subb
std
negb
aas
sub
lods
nop
sub
rorb
out
dec
sbb
xchg
jnp
insl
int3
push
popl
fistpll
lds
daa
pushf
scas
rcrb
int3
or
jb
adc
adc
lret
xchg
sbb
sti
jecxz
fisubrl
sbb
xor
dec
out
jnp
fiaddl
xchg
add
add
inc
mov
mov
cltd
sbb
ss
pop
mov
push
into
ret
dec
mov
pop
and
dec
mov
or
jno
pop
and
ss
cmpb
dec
icebp
test
sbb
cli
js
sub
push
shll
mov
xchg
aaa
jne,pn
jle
jmp
sti
stc
jg
into
loope
xchg
xchg
jb
fsubs
ja
cmp
adc
xor
dec
mov
push
jecxz
lods
pop
mov
mov
cmp
lret
cltd
mov
push
mov
add
cmp
xchg
repnz
jne
ljmp
mov
mov
or
push
std
aaa
mov
pop
xor
mov
pop
orl
inc
sub
jb
xchg
sbb
xchg
ss
pop
sti
xchg
pop
mov
xchg
adcb
fadds
adc
fisubrs
rcll
xor
push
jbe
cli
lea
xor
cmp
movsb
mov
push
test
jmp
ud2
popa
decl
jp
gs
jmp
jns
xchg
lcall
push
cmp
jbe
lret
jle
test
outsl
sbb
cs
xor
jb
repz
je
test
xchg
jl
negl
dec
adc
xchg
scas
lret
mov
jecxz
ljmp
pushf
add
jg
test
mov
test
jns
test
inc
loop
out
scas
and
neg
pushl
xchg
pop
add
dec
mov
mov
mov
lods
dec
les
lcall
std
fcom
mov
mov
mov
stc
dec
filds
push
scas
bsf
mov
pop
cmp
xchg
testl
jl
cmp
xor
dec
mov
jno
aad
jae
aas
dec
cwtl
xchg
call
ficoms
outsl
sti
popf
fcmovnb
roll
popf
dec
int
mov
outsb
pop
mov
jl
push
or
fwait
mov
rcl
addr16
mov
xchg
fwait
test
pop
jo
outsl
outsl
sti
xchg
test
vpsubw
imul
or
xchg
add
lods
int3
mov
and
fmuls
js
pop
hlt
mov
cmpsb
das
add
lods
pop
mov
sub
sarl
jp
or
and
les
es
or
mov
jb
mov
pop
mov
repz
cmp
xor
xor
dec
mov
call
ret
aad
lahf
mov
cmpsb
xor
inc
adc
push
enter
sbb
stc
call
sbb
sarl
or
push
ficoml
rcl
icebp
mov
notl
outsb
xorl
ja
cmp
sub
cmp
sahf
jecxz
popf
movsl
pop
xor
mov
sbb
bound
outsb
pop
sub
fldz
mov
push
add
fxch
pop
or
mov
jmp
mov
int
xchg
cwtl
movsl
mov
arpl
out
sti
insl
insb
pop
lods
adcb
movsl
mov
dec
pop
int
sub
mov
lea
pcmpeqd
std
mov
aam
std
mov
mov
or
xchg
sub
pop
or
cmp
sarb
push
push
adc
jbe
in
dec
mov
adc
inc
and
add
imul
sbbb
push
cmovno
xchg
lahf
das
jl
sub
test
inc
mul
adc
out
mov
in
stos
push
clc
test
fistpl
mov
fwait
and
adc
jmp
pop
mov
pop
mov
add
lret
or
inc
stos
rcr
push
push
clc
mov
xor
jno
jb
negb
xor
xor
jns
sbb
push
cmp
and
sbbl
inc
xor
imul
cmp
nop
cmp
mov
or
test
fistpl
shl
jg
mov
inc
push
lahf
push
aam
dec
mov
lods
push
mov
dec
dec
imul
and
icebp
push
sti
pushf
test
shrl
cld
ret
and
ss
mov
inc
loop
mov
cmp
xor
cmp
lahf
jo
shr
sahf
lods
leave
add
aam
cmp
xchg
lahf
filds
or
in
dec
inc
inc
imul
outsb
inc
pop
push
sub
sub
push
pop
insb
out
leave
sub
iret
icebp
xchg
add
clc
xrelease
push
test
in
sbb
loop
jno
addl
sahf
imul
test
xchg
test
fadds
test
or
stc
sub
sub
inc
sbb
adc
sbb
mov
divb
movsb
and
daa
js
bound
inc
push
jg
jmp
xor
ja
push
mov
add
inc
jbe
cmp
cltd
inc
imul
and
fnstsw
clc
sbb
mov
mov
pop
daa
or
cmpsb
xchg
adc
cmp
addr16
xlat
sti
jmp
popa
clc
xchg
cmp
ret
cmp
into
cwtl
iret
outsb
insb
fstpt
scas
cli
or
fwait
mov
popf
add
lods
dec
xchg
sbb
loop
jbe
jo
jmp
aam
lock
jecxz
push
out
test
jae
loop
adc
arpl
sub
aad
idivl
mov
lahf
mov
mov
enter
lret
dec
leave
pop
enter
xor
push
jle
outsl
pop
xor
rolb
push
ljmp
pop
into
jb
push
xchg
inc
lahf
in
out
jle
mov
xchg
mov
push
cmpb
in
mov
fwait
jae
sahf
enter
hlt
ret
xchg
and
ret
cmc
pop
dec
das
in
jg
xchg
gs
nop
lods
lea
dec
nop
lret
add
sbb
adc
cmp
cwtl
imul
mov
clc
jnp
xor
pop
sub
mov
inc
roll
jp,pn
sub
add
adc
ret
jb
pop
and
cltd
leave
inc
inc
mov
adc
xchg
out
sbb
movsl
mov
testl
pop
sub
xlat
imul
es
xchg
push
sbb
xor
fs
xchg
pop
push
ss
gs
sbb
cmp
inc
js
fcoml
xchg
push
fdiv
aaa
inc
out
ljmp
imul
mov
movsb
xor
dec
fnstsw
loope
xchg
call
testb
adc
jns
jbe
inc
xchg
inc
ljmp
ljmp
mov
mov
xor
adc
shlb
pop
or
adc
out
lea
call
add
lahf
push
ljmp
xchg
shlb
push
pusha
into
and
and
int3
add
sbb
sbb
bound
sbb
mov
mov
push
dec
mov
std
push
aam
mov
xor
ja
shlb
js
bound
adc
cmp
stos
mov
into
fucomp
lods
pop
clc
xor
fwait
rolb
pop
je
mov
fnstsw
repnz
jnp
aad
lds
mov
scas
filds
daa
in
mov
out
xor
dec
or
and
sub
mov
sub
out
sbb
fadds
ja
in
sbb
fdivrs
rcrb
out
testb
mov
mov
daa
inc
add
fwait
dec
sbb
add
push
xchg
fisubl
fnstcw
repz
lods
xor
dec
mov
pop
loop
sub
mov
je
test
dec
stc
pop
movsl
mov
jne
push
xchg
cmp
adc
mov
cmpsl
sub
lcall
mov
ret
mov
xlat
jecxz
int3
rorb
cmp
sahf
gs
cli
fs
add
push
pop
repnz
ret
mov
pushf
jo
add
push
les
mov
xor
and
out
xchg
jbe
daa
mov
mov
jle
xchg
or
pop
insb
inc
adc
lods
loop
sub
dec
rcrl
ljmp
subl
int3
cwtl
inc
daa
push
call
jle
mov
stos
push
addr16
cld
les
add
cs
inc
movsb
lahf
mov
sbb
sub
jae
int
and
mov
test
gs
push
jle
dec
adc
shr
cmp
pushf
sub
icebp
lcall
cmpsl
push
jl
testb
inc
and
adcb
es
push
inc
push
arpl
movsl
or
add
push
lds
mov
stc
lgs
enter
dec
leave
and
sub
and
push
lods
pop
imul
rorb
pop
enter
or
lahf
xchg
inc
dec
push
adc
pop
loop
xor
cld
and
jno
jb
push
shll
xchg
dec
xchg
cmpsl
push
popa
jl
cltd
add
lods
scas
jecxz
mov
or
xchg
xor
adc
cs
loope
xchg
jmp
adc
movsb
lcall
insb
mov
cld
xor
push
leave
mov
inc
mov
adc
fldenv
cmp
gs
fxch
add
or
sbb
rcrb
in
sub
inc
mov
inc
in
jbe
out
sub
out
pop
pop
mov
add
clc
loope
insb
gs
cmp
adc
xchg
xchg
iret
popf
xlat
xorl
loopne
mov
pop
mov
add
xor
sub
and
insb
add
xchg
sarb
push
adc
inc
mov
lods
mov
push
mov
mov
into
push
mov
sbb
xchg
std
add
inc
add
loop
dec
mov
mov
push
jb
mov
mov
xchg
ljmp
jns
or
mov
imul
xchg
sbb
mov
or
fcomps
xchg
jg
cmp
or
or
xor
loope
cmp
push
das
sbb
xchg
dec
inc
movsb
mov
inc
fucomp
xchg
sub
popa
push
sub
in
xchg
jle
ret
or
sbb
xchg
sti
push
insl
mov
subl
mov
mov
imul
leave
dec
or
inc
test
sub
pop
cmp
push
loop
mov
xchg
cmpsb
or
inc
xor
testl
jmp
pop
xlat
add
cmp
insl
mov
push
mov
js
lock
mov
dec
lcall
movsl
insl
sbbl
cmp
hlt
xor
inc
or
inc
fimull
mov
cmp
stc
mov
sti
gs
pop
aas
sub
fnclex
popf
push
fnstenv
insb
imul
mov
mov
xchg
xor
inc
iret
das
or
jp
inc
pushf
jns
dec
aas
leave
sub
cli
push
dec
jo
jno
bound
aaa
or
in
cld
or
jmp
sahf
sbb
and
push
js
scas
aad
or
cs
imul
cmp
adc
vpminsw
mov
fbstp
add
xchg
movsb
hlt
and
cltd
jae
or
jmp
xchg
les
and
jp
mov
dec
aas
adc
mov
sub
clc
and
cli
cmp
inc
mov
stos
ja
mov
sbb
aas
cltd
cmpsl
shll
jge
jp
bound
icebp
pop
cmc
xchg
mov
in
mov
sbb
nop
jmp
aas
sbb
sbb
push
cmp
inc
bound
pop
cmp
rcl
call
push
imul
mov
es
xchg
sbb
xchg
mov
mov
xor
in
xchg
in
ret
in
es
inc
lods
addl
jns
sub
push
inc
test
sub
cltd
enter
dec
imul
xchg
mov
push
dec
in
fwait
test
mov
les
aas
mov
cmpsb
shl
adc
xchg
adc
insl
in
jnp
jb
jecxz
cwtl
mov
mov
sub
jbe
sub
movlps
pop
or
cmp
xchg
cmp
pop
popa
and
scas
xchg
push
out
xchg
jb
or
push
adc
cmpsl
xchg
sbb
xchg
cli
cwtl
add
js
imul
pop
in
push
cld
jno
cwtl
mov
xor
inc
je
loope
sbb
out
or
xorb
pop
int3
fildll
sbb
rcrb
pushw
popa
cmc
cltd
mov
hlt
sub
in
repnz
inc
jne
jbe
stos
sub
xlat
imul
rclb
mov
cltd
xchg
push
iret
pop
enter
popa
dec
jns
test
inc
sbb
jecxz
jae
movsb
mov
addr16
mov
loope
xchg
jmp
jecxz
fildl
cmp
xchg
addr16
and
mov
sub
loope
ret
movsb
mov
daa
add
lret
test
shrl
push
push
scas
rcrl
inc
mov
xchg
mov
out
mov
adc
rolb
inc
inc
lret
mov
push
sub
lcall
outsl
mov
jo
je
hlt
pop
sahf
pop
jl
cmp
fsubl
mov
fists
push
cmp
pop
inc
add
push
fs
data16
jnp
dec
dec
sti
fwait
xchg
sub
add
push
iret
dec
mov
mov
push
lret
dec
les
push
lcall
js
dec
call
and
cld
or
loop
pop
add
rorb
loopne
and
or
testb
add
les
ficompl
testb
lods
push
xchg
pop
imul
test
cmp
push
addb
or
dec
jb
arpl
xchg
jl
ja
outsl
fldenv
xor
fisttpl
lret
jge
lahf
adc
push
fwait
outsl
pop
lods
aaa
imull
pop
pop
dec
rcr
inc
xorl
push
cmp
jecxz
pop
je
mov
in
lea
dec
in
aad
mov
mov
or
loopne
jp
xchg
in
aas
lods
insl
fldt
cs
dec
sub
sub
inc
inc
jae
rorl
into
xor
fdiv
cs
clc
jno
rorb
xchg
es
outsb
out
push
add
mov
stos
hlt
fisubl
out
out
into
in
cmpsb
pop
in
mov
xchg
jecxz
shrb
dec
mov
rol
shrl
adc
or
sub
jge
dec
sbb
cmp
mov
scas
inc
fcmove
jnp
jo
mov
int3
xchg
into
repz
cmpsl
dec
push
lcall
lea
ds
in
loopne
ret
pop
xchg
pop
pop
pop
push
test
cmpsb
popf
and
mov
addr16
jl
dec
es
addr16
leave
mov
jge
addr16
adc
call
mov
and
pop
cmpsl
js
loop
push
sub
into
lcall
lods
cmp
stos
jge
popf
dec
mov
xor
xchg
loop
lods
cltd
cmpsl
gs
movsb
cli
or
insb
push
out
push
sbb
cmc
sbb
loope
dec
mov
sti
stc
cmpsl
pushf
dec
push
ds
lods
and
dec
add
mov
or
mov
inc
xor
jle
sti
push
cmpsl
sub
mov
fisttpll
sahf
mov
arpl
cmp
mov
jge
inc
popa
aad
addb
rorl
fbld
sti
xchg
push
jb
jnp
mov
mov
mov
jo
dec
pop
cmp
and
inc
inc
or
mov
pop
lret
dec
repz
jmp
pop
add
mov
std
mov
inc
xchg
sub
call
push
sti
bound
ja
push
cmp
pop
test
insl
popf
roll
mov
mov
sub
or
and
fsubrs
sbb
in
insl
push
adc
xor
pop
mov
ds
inc
sub
clc
push
xor
jo
jns
rcrl
test
jecxz
push
dec
or
notl
pop
out
test
inc
js
cmp
aad
fistl
lock
or
fnstcw
xor
sub
sub
mov
mov
push
insb
dec
mov
outsb
pop
push
xor
cltd
inc
xchg
jmp
and
insb
xor
test
js
std
mov
sbb
pop
fwait
test
and
inc
mov
fucomp
push
leave
into
in
mov
xchg
xorl
xor
inc
xor
ss
stos
repnz
ja
xor
das
test
lahf
cmc
pop
notl
inc
and
lods
push
jns
inc
and
cli
rolb
jo
sub
xchg
inc
push
sahf
pop
mov
shrb
fcom
jbe
mov
pop
inc
dec
test
mov
mov
test
in
enter
mov
lds
jnp
push
push
push
mov
int
in
lret
stos
sub
cli
aad
movsl
in
push
icebp
in
sub
pop
fsts
shlw
push
aaa
popa
adc
js
push
dec
fsubrs
dec
and
sbbb
cmp
inc
lret
or
and
rorb
dec
imul
ja
mov
jecxz
test
pop
inc
dec
jne
fst
mov
int3
ljmp
xor
in
xchg
or
negl
xchg
bound
xor
fidivs
pop
mov
pop
aad
jb
fsts
mov
loop
add
and
inc
sub
testb
int
adc
fwait
jbe
sub
testb
shl
push
fwait
rolb
mov
inc
dec
fmulp
ljmp
das
or
and
popa
jno
lods
push
lea
xchg
pop
cmp
jns
adc
adc
add
or
and
pop
andb
adc
in
aad
adc
sbb
cmc
incl
icebp
shll
fistpll
pusha
and
ficomps
je
dec
sbb
stos
fmul
or
sbb
mov
cmpsl
hlt
jb
cmp
mov
pop
xchg
jno
mov
movsb
shrb
aad
cwtl
xor
inc
loop
int
testb
sub
ljmp
rol
mov
push
or
in
push
push
pop
gs
rorl
adc
in
movsb
pop
in
shlb
lods
xchg
jg
and
into
inc
adc
add
jns
adc
xchg
stos
dec
xchg
sub
pop
into
and
mov
cmp
mov
jae
sub
sarl
xchg
or
or
xor
push
clc
xor
xchg
pop
enter
mov
out
xlat
adc
jb
sub
ss
pop
movsl
mov
into
and
pop
popf
add
jle
sub
sub
lret
pop
xor
xchg
push
add
or
inc
add
inc
hlt
fidivs
iret
cmp
cltd
inc
inc
lea
dec
jno
push
and
adc
pop
xor
push
mov
fistps
mov
pop
push
xor
rclb
popa
pushf
push
shlb
jmp
adc
mov
rcr
lsl
ss
mov
lods
inc
sub
in
inc
sbb
mov
stos
out
pop
daa
mov
lds
sbbb
int
xchg
pop
stos
or
repnz
out
adc
add
mov
aaa
sti
dec
pop
mov
pusha
jnp
dec
xchg
dec
or
jle
leave
loope
stc
ficomps
jecxz
cmp
push
shrb
cmp
inc
icebp
sub
enter
push
adc
push
adc
lock
scas
jg
push
out
je
les
int3
mov
lcall
xlat
addr16
push
loope
nop
fimull
addr16
out
mov
stos
cmpxchg
in
cs
lds
std
insb
jo
insb
mov
dec
mov
push
rorl
lret
fwait
inc
fistl
push
mov
lret
or
push
add
lret
mov
push
cmpsb
or
iret
call
cmp
xchg
sub
sub
dec
xchg
xor
adc
dec
mov
inc
testb
outsb
in
dec
clc
jb
add
lahf
icebp
mov
test
push
inc
xchg
pop
lret
cwtl
call
pop
sub
movsl
and
cmp
inc
ds
fs
xlat
fwait
or
lahf
pop
xor
icebp
sub
and
push
push
in
sub
inc
pop
dec
gs
push
inc
jns
jno
fadd
mov
stos
jle
pop
xlat
out
packuswb
outsb
call
xchg
xchg
xchg
add
xchg
clc
mov
lds
mov
lods
loope
mov
mov
pusha
push
xchg
xor
inc
push
leave
insl
lcall
jae
mov
and
repz
test
mov
mov
sub
push
fadds
sub
loope
mov
adc
pop
cmp
pop
jns
out
jecxz
sbb
test
jmp
lods
pop
jo
add
mov
jp
fldenv
mov
dec
sbb
xchg
xchg
jg
inc
push
dec
jo
cmp
div
icebp
and
mov
sbb
fwait
lcall
and
xchg
mov
mov
cs
rol
stc
scas
in
pop
mov
push
insb
out
lds
out
mov
mov
std
dec
addr16
inc
pop
into
fisttpll
xor
cltd
hlt
or
mov
lret
xchg
shlb
inc
pop
cs
ret
loopne
dec
xchg
movl
in
hlt
mov
lea
xchg
mov
dec
adc
dec
mov
lds
int3
in
mov
iret
or
dec
lret
sti
lds
xor
push
fwait
mov
sbb
push
mov
into
scas
icebp
mov
or
in
iret
fildll
pop
test
bound
lds
pop
mov
jno
pop
pop
dec
sub
lcall
adc
mov
shrb
cmp
dec
xchg
mov
sarb
dec
push
sub
push
cwtl
inc
orl
jae
or
js
push
lret
bound
sbb
xchg
or
cltd
adc
push
jbe
mov
sbb
jge
mov
pop
fstpl
xchg
sub
mov
orb
addr16
sbb
jb
in
cmpsl
or
add
std
mov
dec
das
dec
cmp
inc
xor
das
inc
ds
cmc
and
pop
rcrl
cmp
fisubl
sub
adc
jae
pushf
adc
cmp
aaa
arpl
pop
add
out
or
push
jns
mul
push
dec
dec
mov
xor
mov
xchg
sbb
xchg
and
push
jmp
add
jmp
test
int
mov
mov
pop
dec
sahf
outsl
xchg
jle
sbb
gs
movsb
fdivrs
popa
pop
xchg
outsl
cmp
and
adc
js
push
dec
in
in
cmp
lods
push
jne
into
ret
inc
mov
add
pushl
xchg
mov
rolb
mov
movsl
mov
out
jo
pop
imul
xor
xchg
sub
dec
cwtl
aas
mov
dec
decl
adcl
mov
stos
out
and
jo
xor
pop
lret
test
pushf
xor
mov
pop
push
mov
mov
mov
inc
sbb
cwtl
jbe
icebp
inc
xorb
mov
xorb
mov
and
pop
mov
aam
jbe
jne
inc
sub
or
xchg
and
cltd
loopne
ljmp
jbe
sbb
mov
aad
push
ret
insl
add
iret
jle
lahf
cmpsl
enter
mov
or
jle
dec
jg
push
lcall
in
mov
sbb
and
test
dec
test
mov
xor
jmp
fcmovu
sub
push
ficoms
pushf
shrb
jbe
mov
js
jecxz
sub
inc
push
jecxz
inc
jns
inc
or
lahf
xor
mov
add
cmpsb
dec
lods
adc
push
fisubs
fs
jno
pop
call
jb
rcll
xlat
xlat
pop
out
mov
sbb
cltd
repz
leave
rclb
xchg
jbe
addr16
mov
cwtl
addr16
les
push
pop
mov
sbbl
inc
mov
mov
repz
dec
push
mov
mov
loopne
mov
xchg
xchg
xor
mov
adc
sbb
add
std
xchg
jmp
inc
cmp
imul
outsb
lods
jl
mov
fstl
enter
mov
filds
pop
into
testb
lret
cmp
ret
lcall
push
xchg
xchg
gs
in
fldenv
cmp
ljmp
test
das
cmp
or
fwait
sub
orb
sarl
mov
or
dec
add
adc
aam
and
movsb
cwtl
push
mov
jns
sbb
lcall
mov
xor
std
lret
inc
lock
xor
push
icebp
jbe
pop
push
and
adc
adc
shll
ds
or
mov
sub
mulb
xchg
shl
outsb
mov
adc
and
inc
mov
mov
mov
mov
mov
mov
aas
out
fdivs
mov
mov
subb
add
xchg
mov
and
mov
mov
mov
jmp
cmp
mov
mov
popa
daa
cmp
pop
and
adc
and
divl
data16
dec
insb
out
inc
pop
cmovge
adc
jo
inc
jno
xchg
adcb
lret
adc
and
inc
adc
in
aaa
pop
dec
divl
out
and
imul
int3
mov
inc
sub
push
adc
push
push
jge
sahf
cmp
and
inc
pop
sbb
inc
mov
cmc
arpl
test
data16
fsubrl
mov
mov
in
mov
jecxz
sbb
push
inc
lret
subb
nop
popf
fists
pusha
pop
push
jge
inc
xor
cmpsb
mov
cld
data16
movsb
or
enter
mov
fisubs
mov
les
std
ds
and
and
or
and
adc
fwait
icebp
clc
jbe
xor
fdivs
addr16
aas
xor
pop
mov
imul
xchg
out
stos
ljmp
repnz
mov
std
add
int
popf
mov
pop
mov
mov
jae
test
jmp
fsubrs
jne
xchg
dec
push
xor
cs
imul
push
cmp
sub
adc
pop
scas
shl
xchg
fbstp
sub
fdivrs
outsl
xor
movsb
int3
and
das
mov
out
cltd
data16
or
decb
js
pop
xor
ror
ja
mov
outsl
push
idiv
lods
mov
cs
in
imul
pop
push
inc
inc
mov
rorb
stos
out
cmp
fldcw
adc
ljmp
lea
js
sahf
scas
or
or
insl
adc
imul
mov
mov
and
mov
test
sbb
jno
push
bnd
gs
divb
jae
mov
xchg
sbb
lcall
cmp
xchg
or
ja
ss
pop
arpl
cmp
sbb
bound
movsl
fsubs
sarl
je
sti
flds
sbb
jecxz
cmp
test
js
fisttps
or
adc
addb
sbb
jbe
les
push
push
lret
lret
fmull
imul
lods
xchg
inc
push
popa
xchg
jbe
jg
sbb
dec
movsb
mov
add
mov
dec
jno
jmp
jbe
adc
inc
push
mov
fstps
cli
loopne
push
stc
jns
mov
cltd
add
mov
sbbb
cmpsl
insb
lret
pop
icebp
xor
xor
in
clc
hlt
pop
pushf
adc
sub
jae
pop
cli
fwait
xlat
adc
adc
jbe
imul
cmc
outsb
hlt
fidivl
sar
adc
iret
insb
in
fnstcw
lea
lods
lcall
and
push
or
addr16
outsb
sub
xchg
call
scas
mov
lret
cwtl
cmova
rorb
mov
mov
lcall
cmp
sub
push
inc
test
mov
daa
sub
lcall
lods
stc
jne
push
mov
xor
add
ljmp
hlt
addb
fnstcw
pop
pop
pushf
decb
mov
inc
out
sbb
nop
xor
pop
inc
mov
add
jp
adc
sbb
push
pop
sbb
jbe
sbb
xchg
arpl
cmp
push
cmp
das
mov
adc
mov
int
lahf
sub
or
fnstsw
adc
mov
cli
inc
cmpsb
je
jge
jne
and
lret
out
mov
mov
in
mov
js
stc
mov
arpl
jg
int
pop
sub
repnz
jnp
lods
pop
sbb
dec
mov
pop
sbb
jmp
testl
mov
adc
outsb
ljmp
out
in
cmpl
pop
pop
sbb
daa
aad
and
mov
inc
ficomps
add
cmpsb
call
shll
xchg
fisubrs
mov
jle
mov
cmp
xor
pop
inc
xor
push
xchg
out
inc
cs
out
in
mov
out
fadd
test
sbb
rcrl
mov
adc
pop
adc
mov
stc
lret
xor
clc
pop
push
xor
int3
leave
jmp
and
xchg
add
sub
xlat
test
rcrl
hlt
dec
shlb
inc
mov
popf
push
sub
in
movsb
cs
lods
inc
mov
adc
nop
xchg
out
jno
aad
enter
adc
adc
xor
pusha
shll
aas
es
data16
sti
mov
aaa
push
divb
adc
stos
fisttps
rcrl
dec
nop
lods
push
in
pop
movsl
fadds
daa
movsb
jno
mov
loope
test
push
das
and
add
mov
mov
lds
pop
add
cmpsl
cmp
mov
mov
stos
push
dec
icebp
insl
xchg
push
mov
bound
pop
adc
mov
icebp
xchg
orb
je
mov
mov
push
push
loopne
shll
jge
sti
cmp
std
cmpl
pop
add
loope
ss
or
std
aad
cmp
mov
cwtl
pop
cmc
or
lret
gs
loopne
jg
dec
push
sub
imul
inc
imul
cmp
lds
loop
ljmp
xor
int3
or
insl
xchg
aam
mov
clc
add
shl
push
cmp
lock
popa
imul
test
inc
jp
sahf
adc
add
jp
imul
jmp
or
xchg
addr16
add
lret
mov
mov
aad
push
outsb
call
stos
dec
cli
shlb
push
fmul
lret
fsts
lods
push
fwait
pop
and
xchg
jg
xor
mov
psrad
xor
in
outsl
and
inc
pushw
ds
fxch
mov
cwtl
inc
outsb
jno
xor
mov
push
mov
adc
gs
in
std
xor
mov
jge
mov
fs
aad
pop
test
push
inc
sbb
arpl
shl
and
push
sbb
mov
mov
mov
mov
lds
in
cmpsl
movsl
dec
sub
lods
cmp
out
rorl
inc
in
cs
cmc
and
mov
jecxz
lahf
fwait
jns
adcl
lods
dec
jge
push
mov
push
jne
dec
imul
mov
jno
jge
and
lods
stos
mov
inc
jmp
scas
rcll
aad
xor
mov
jle
push
inc
sahf
sub
mov
pop
xor
iret
or
iret
lret
ds
xchg
js
fmull
sbb
push
jo
ret
ret
pop
hlt
mov
cmpsb
lret
mov
mov
cmc
mov
cmp
jne
leave
pop
sbb
pop
sub
mov
pushf
mov
cmpsb
clc
xor
mov
mov
jl
dec
les
decl
popf
insb
adc
mull
stc
clc
xchg
mov
push
into
jmp
scas
pop
sub
dec
lcall
jns
je
cmpsl
pusha
rcr
inc
js
inc
shrb
sti
lock
cli
pop
fildl
fists
and
sti
adc
cmpl
sbb
inc
pusha
hlt
jecxz
outsb
mov
jbe
inc
outsb
loopne
mov
cmc
mov
nop
shrb
dec
addb
mov
mov
pusha
add
fcoml
xchg
inc
inc
adc
push
add
push
aam
mov
movsb
mov
sbb
inc
lds
movsb
jns
fcomps
out
test
pop
in
jnp
pop
outsl
data16
pop
pop
popa
lods
or
mov
or
xchg
add
add
xor
lock
xchg
mov
xchg
dec
fsubr
jg
jmp
inc
cld
lcall
lock
inc
pop
daa
dec
mov
dec
inc
mov
repz
lods
and
xchg
cwtl
icebp
insb
mov
push
loop
outsb
loope
fwait
dec
and
jle
scas
std
out
pop
lea
cmp
cmp
fmull
fnstsw
mov
xlat
pop
fnstsw
inc
ds
fimull
movsb
lock
in
lods
cli
clc
int
clc
daa
scas
mov
loopne
xchg
sti
iret
jno
lods
nop
loopne
mov
rol
inc
popf
movsl
jae
fwait
insb
mov
aad
xor
jno
aas
je
mov
and
lods
adc
imul
push
call
sub
in
mov
sub
ds
pop
pop
jns
push
insl
jge
push
aaa
push
mov
xchg
xchg
dec
insl
cwtl
cwtl
cmc
dec
repnz
cmp
lock
sbb
mov
popf
lds
mov
mov
cwtl
ret
sahf
adc
inc
psraw
pushf
push
fisttpl
ret
cmc
pop
dec
mov
or
push
pop
xchg
mov
call
sub
adc
addl
jns
pop
cmc
xor
leave
hlt
or
sub
pusha
push
mov
jae
sbb
stc
mov
in
sbb
cmp
lahf
pusha
int
lock
mov
mov
jl
mov
test
inc
loope
sahf
stos
push
call
inc
or
ja
faddl
push
scas
add
inc
mov
jecxz
aas
in
outsb
pop
imul
enter
sub
or
aam
frstor
sub
pop
dec
or
xor
mov
scas
mov
or
pop
aas
outsb
test
push
jo
jb
mov
cli
xorl
pop
dec
imul
push
stos
push
mov
fildl
xlat
push
add
test
call
inc
adc
bound
mov
xor
sbb
std
into
pop
int3
jl
sbb
mov
push
cmp
test
mov
sub
stos
or
push
push
xor
fwait
cmp
mov
push
inc
mov
jmp
sub
jns
loopne,pt
mov
fists
lret
lods
das
dec
movsl
cmp
push
imul
sbb
arpl
stos
adc
nop
stos
sbb
cmp
sbb
ljmp
outsb
sarl
outsl
mov
xchg
or
leave
icebp
stos
push
inc
fwait
push
ljmp
filds
mov
sarl
stos
xchg
lcall
out
cmpsb
lea
mov
xor
push
mov
dec
into
push
shll
rolb
mov
and
out
xor
xchg
adc
ret
fsts
sbb
sub
loope
pop
shll
dec
scas
sbb
out
fisttpll
adc
fwait
mov
pusha
jns
stc
add
jmp
dec
sbb
sbb
icebp
xchg
mov
stos
xor
inc
inc
fs
mov
insl
loope
stos
xor
movb
imul
xor
lcall
adc
aad
xchg
cwtl
repz
adc
lcall
jmp
js
lret
mov
movsb
scas
das
mov
mov
sub
test
gs
ret
es
sar
cmc
out
push
mov
inc
out
addr16
pandn
popf
dec
shrl
mov
insl
push
mov
imul
in
and
mov
rorb
adc
adc
push
xor
mov
and
rcrl
fcmovb
scas
cs
arpl
sbb
cmp
shrb
sub
and
pop
js
cwtl
and
lret
and
movsb
movsb
repnz
pop
adc
jo
xchg
faddl
syscall
stos
inc
dec
xchg
xchg
push
int3
dec
pop
loope
pop
inc
scas
sar
sub
outsl
mov
loopne
cmp
sub
out
into
jle
adc
and
push
xor
sub
loope
in
negl
mov
sti
mov
fadd
pop
jle
subb
lea
loopne
jns
xchg
mov
outsl
push
sahf
scas
mov
jne
cmc
push
lock
outsb
sbb
jnp
icebp
daa
out
and
enter
or
imul
dec
cli
adc
daa
push
jns
mov
mov
pusha
mov
nop
daa
xor
loop
jge
cmp
push
repnz
xor
ja
fcomi
or
xchg
movsb
pop
push
sub
mov
xor
aaa
adc
das
dec
shrb
jmp
hlt
cmp
test
mov
adc
mov
pop
and
movsl
gs
outsl
popa
pop
sahf
les
xchg
mov
rorl
cld
call
mov
cmp
test
in
and
push
inc
mov
cmp
xchg
fdivs
pop
pusha
in
dec
dec
mov
data16
cwtl
popa
xor
xor
dec
mov
adc
rep
adc
add
push
int3
jle
mov
je
adc
outsb
cmp
inc
mov
xchg
fldt
push
sub
scas
jecxz
cmp
mov
sbbl
sub
cmp
lds
cmp
mov
sub
cmpsl
mov
outsl
push
adc
enter
int
push
mov
loop
sbb
add
mov
mov
rcrb
mov
adc
scas
imul
sbb
inc
mov
cmp
jmp
jne
push
nopl
ret
lea
faddl
adc
ds
fisttpll
pushf
mov
add
adc
dec
sub
xchg
orl
nop
mov
sub
daa
xor
push
in
sub
adc
pop
jbe
fs
arpl
jmp
sbb
mov
inc
lret
rol
insl
jmp
mov
mov
ss
inc
or
inc
sub
mov
leave
and
or
cmp
sahf
inc
jbe
mov
insb
add
adc
sub
or
push
rcrl
jno
std
mov
push
pushf
and
inc
jo
je
ss
or
mov
popf
scas
lcall
into
push
and
fwait
pushw
jl
add
push
leave
dec
popa
mov
insb
iret
pop
lea
adc
int
xchg
popa
mov
je
xlat
fisubrs
xor
loope
xchg
out
scas
jne
fs
hlt
xchg
push
pop
stos
popf
sbb
and
fwait
and
sub
cld
stc
shll
adc
add
in
ja
sub
repz
push
lods
push
into
push
pop
or
jle
dec
shl
int3
push
scas
add
cmp
or
and
adc
xchg
mov
mov
pop
iret
rclb
gs
or
cmp
mov
call
mov
adc
lods
in
mov
rcrb
lret
cmp
jl
jmp
test
sub
cmp
push
pop
jmp
scas
push
fisttps
jecxz
stos
fisubl
jbe
push
insb
pusha
adc
mov
push
mov
jg
ds
xor
std
and
lahf
pop
mov
cmpsb
jmp
jb
jo
daa
add
sub
pop
daa
lods
lds
jecxz
movsb
jge
outsb
das
arpl
inc
pop
cld
push
ficoms
je
in
mov
fcoms
xor
mov
pop
xorl
mov
dec
aas
pop
aaa
addr16
imul
popf
xor
aam
call
push
inc
cwtl
mov
mov
cmp
aad
aaa
inc
or
mov
imul
push
inc
popa
sub
push
pshufw
sub
sahf
sub
fucomip
push
inc
pop
cmp
inc
or
clc
iret
dec
addb
mov
sbb
lods
xchg
sub
xchg
adc
mov
leave
and
sbb
sti
mov
dec
mov
and
sub
repnz
xchg
cmp
cmc
mov
lods
and
in
xchg
cmp
adc
mov
lock
dec
fs
jg
aam
dec
mov
dec
jp
mov
add
imul
xchg
xlat
xor
out
push
divl
mov
xchg
pop
jns
push
add
sbb
mov
mov
pop
xchg
jnp
inc
hlt
cmp
movsl
cld
jb
push
mov
data16
inc
in
mov
jge
pusha
scas
mov
leave
cwtl
mov
xor
push
pop
cmp
jg
fisttpl
out
iret
outsb
idivl
xchg
pop
mov
daa
gs
test
jle
int
fmuls
fstpt
sub
sbb
fdivrs
jmp
jo
jo
popf
dec
pop
pop
daa
int
sti
jnp
mov
sub
cs
dec
adc
xor
inc
mov
and
sbb
jns
imul
fimuls
cld
xor
std
test
jl
repnz
xor
xor
xor
push
shll
rclb
shlb
ss
cltd
xlat
pushf
pop
divb
lods
fstl
mov
add
hlt
nop
int3
dec
mov
push
fistpl
fwait
lret
inc
jle
add
push
pop
out
and
or
dec
sbbb
mov
sub
cli
sub
ror
dec
pop
xchg
inc
cvtps2pd
inc
repnz
add
test
inc
add
insl
enter
sub
mov
adc
sahf
inc
dec
lock
dec
das
jle
cli
jb
stc
jno
mov
daa
sub
push
loop
sar
or
xchg
aam
cmp
call
pusha
sti
mov
jmp
enter
je
jne
incl
xchg
jl
test
xor
cmp
lods
cmp
mov
mov
cmp
je
insb
fnstcw
mov
adc
rcrb
fcoms
or
icebp
mov
rcr
xchg
mov
lods
mov
sbb
daa
sub
inc
mov
sub
pop
push
fcoml
rcr
fbld
out
cmp
push
enter
arpl
xorl
frstor
mov
scas
nop
mov
add
stc
xor
xor
push
mov
inc
or
push
imul
jns
add
fwait
repnz
mov
inc
adc
cs
or
jae
ret
bound
mov
aad
push
mov
adc
xchg
fiadds
je
and
sub
mov
mov
jp
pop
add
rcl
xor
jae
shrl
lret
adc
inc
cmp
sbbb
ret
push
jae
or
arpl
mov
movsb
pop
shlb
sub
mov
xchg
mov
int3
int
inc
stos
mov
bound
out
insl
mov
test
std
mov
dec
or
pusha
repnz
out
cltd
add
and
inc
stc
cmpsl
push
fwait
test
push
mov
fldt
or
lret
aas
xchg
xor
arpl
imul
xor
call
jecxz
pop
add
mov
ffreep
mov
loope
out
lahf
push
or
insl
pop
xchg
icebp
pop
int
clc
stos
cmpsl
ret
add
sbb
inc
cmp
or
push
cmp
xor
aam
dec
aaa
out
std
add
test
cmp
adc
xor
add
inc
cmp
mov
jbe
or
test
dec
int
xor
jns
sub
jns
pop
outsl
ret
adc
pusha
movsl
int
cmp
roll
je
add
mov
push
insl
das
mov
adc
xchg
xchg
add
inc
data16
jae
sbb
jp
sub
or
mov
jne
iret
pop
sbb
call
sbb
lahf
or
inc
dec
dec
pop
xchg
in
pop
mov
stos
mov
movsl
out
loope
mov
dec
shrl
insl
and
bound
sub
lahf
inc
icebp
gs
int
xlat
push
je
mov
ds
mov
movsl
fs
out
les
pop
pop
hlt
jno
int
outsl
xor
jne
shrl
jno
fisubs
mov
cli
bound
insl
mov
aam
pop
pop
push
in
xor
add
add
sbb
push
xor
jle
rcrl
lock
push
ror
lea
iret
fwait
in
mov
mov
cmc
in
inc
push
add
sbb
shlb
subb
test
daa
nop
sub
jmp
sub
sbb
sub
push
lret
add
adc
sub
test
enter
fidivs
imul
xchg
hlt
fmuls
sbb
arpl
cmc
jp
sub
enter
jp
enter
ljmp
mov
add
inc
sbb
dec
jnp
adc
insb
div
cmc
vmwrite
inc
add
push
add
lds
xchg
movaps
mov
xchg
adc
gs
cmp
or
cmpsl
dec
int3
cwtl
and
push
mov
xchg
sti
sub
ror
ffree
cmpsb
data16
outsl
fadd
xchg
insb
leave
mov
dec
cmp
mov
in
dec
lahf
testl
push
dec
jp
push
mov
inc
icebp
push
clc
xchg
stc
add
cmpsl
mov
sarb
bndldx
sub
jmp
sti
sub
mov
cltd
or
or
movsb
xchg
out
sbb
out
xor
and
push
cmc
mov
popf
jns
mov
and
dec
add
es
aas
outsb
cmpsb
xchg
bound
pop
std
xor
pusha
std
cld
xchg
add
lret
and
mov
ret
into
insl
xchg
dec
dec
and
jmp
enter
sbb
call
psrad
push
andl
pushf
xchg
lods
and
or
notl
sahf
inc
lods
pop
xor
aam
sbb
pusha
sbb
stos
push
jmp
or
adc
mov
xchg
stos
mov
push
sub
insl
cmpsb
jno
push
jecxz
fidivrl
orl
pop
mov
lea
cmpsl
repz
outsl
xor
jmp
jno
inc
jl
rcrb
enter
mov
add
xchg
xchg
cmp
dec
test
les
mov
jle
adc
mov
test
mov
push
enter
int
sbb
lahf
aaa
and
std
add
scas
jne
divb
add
add
push
inc
ret
mov
mov
call
in
gs
cmp
sbbb
ljmp
pop
repnz
aam
insb
mov
ret
aaa
out
mov
add
mov
adc
mov
ret
nop
bound
insl
pop
rolb
xchg
pop
ret
scas
cmp
adc
xor
jno
int3
out
dec
mov
cwtl
mov
mov
leave
jl
shll
gs
sbb
xor
dec
jb
iret
mov
and
xchg
idivl
je
jae
xchg
mov
dec
addb
mov
nop
xchg
xchg
mov
mov
sbb
inc
push
inc
daa
cmp
and
sbb
sub
dec
jmp
cmpw
insb
pop
mov
mov
and
push
push
push
mov
out
push
xchg
ret
hlt
decl
int3
enter
ret
sub
push
push
test
lock
imul
push
mov
negb
dec
out
adc
mov
pop
jo
jne
add
scas
and
stos
subb
push
orb
pop
int
sbb
mov
mov
lods
data16
dec
mov
add
mov
ret
mov
sbbl
adc
aas
sub
xor
jmp
mov
ret
lahf
pop
outsl
in
mov
addr16
mov
sub
popf
or
mov
mov
xor
cltd
inc
jmp
mov
sti
xor
mov
pop
fwait
push
rorb
jb,pt
add
out
jp
add
pushf
adc
lcall
jecxz
icebp
jns
mov
repz
daa
shrl
push
push
sahf
rsqrtps
jmp
jnp
mov
mov
or
fwait
jg
fdivrs
insb
xor
xchg
movsb
test
mov
fsubs
aas
loope
fmulp
ffree
fdivl
mov
lahf
dec
and
sub
add
pushf
cmp
subl
pushf
jl
test
aaa
adc
insl
jo
push
jge
lds
mov
cmp
imul
or
lcallw
hlt
aad
xor
cmp
cmp
cmp
xor
fistpl
negl
cmp
dec
popa
sbb
add
cmp
cltd
lret
cwtl
xor
movsl
xchg
cmp
adc
out
jb
cmp
ret
mov
mov
sub
push
std
xchg
test
enter
push
scas
lahf
jno
cmp
mov
or
cmp
jae
jo
call
mov
cld
cmp
in
cwtl
pop
mov
pop
imul
rorl
and
xchg
std
rcll
lods
cmp
add
add
xchg
idiv
cmc
movsl
je
fcomi
mov
int3
outsb
fisubs
stc
mov
lods
bnd
sub
enter
aaa
mov
sbb
sbb
xor
pop
xchg
pushf
ds
int3
xchg
rol
xlat
bound
ja
das
mov
sbb
enter
sbb
inc
or
sbb
add
arpl
inc
inc
fwait
test
cmp
aaa
les
mov
dec
jb
and
mov
cltd
cmpsb
clc
and
repz
fsubl
dec
pop
dec
push
xor
movsb
iret
adc
sbb
sahf
addr16
incb
mov
out
sbb
test
lds
fmull
andl
cmp
push
lahf
fs
sub
aad
mov
lock
mov
jge
pop
rcrb
inc
nop
stc
xchg
push
aam
add
fs
adc
jnp
popa
into
mov
xchg
pop
data16
in
push
inc
push
div
inc
dec
mov
cmc
mov
add
ja
push
push
pop
pop
pop
cmp
mov
sub
pop
cmp
lcall
push
jg
xchg
repz
int
inc
and
push
in
pop
icebp
mov
stos
xchg
test
xor
push
bound
mov
jge
cmpb
outsb
inc
je
dec
inc
mov
or
xor
fldenv
xor
xor
mov
int
out
push
jle
shr
mov
in
les
add
mov
fs
jb
int3
cmpsb
lock
call
jbe
stc
mov
and
pop
into
fbstp
xchg
xchg
xchg
cmpsl
mov
ljmp
std
aaa
mov
mov
pop
iret
pop
push
inc
dec
fmull
add
sarl
jp
inc
sub
dec
push
leave
mov
je
inc
jmp
mov
xor
mov
mov
or
jno
bound
lock
xor
ret
and
jg
mov
add
xor
cltd
ret
adc
neg
daa
mov
js
xchg
dec
ljmp
cld
or
outsb
dec
ja
xchg
dec
xchg
adc
repnz
stos
sub
mov
mov
sbb
jl
sbb
xor
lock
xchg
incb
scas
or
lods
cmp
cmp
arpl
inc
jo
sbb
lea
mov
push
xchg
lret
imul
hlt
cwtl
dec
loope
out
jge
add
add
pop
xchg
jl
imul
bound
scas
lods
stos
pop
mov
ljmp
push
pushf
adc
jns
xor
out
iret
sbb
pop
cmp
cmp
jo
addr16
add
and
int
mov
add
pop
ret
lret
sbb
add
outsl
push
cmc
or
in
ss
popa
imul
ds
xchg
pop
int
dec
sub
cmpb
mov
js
lret
xchg
out
mov
pushf
or
loopne
sub
ja
xchg
ja
repnz
jl
sub
fistps
mov
pop
mov
mov
xchg
mov
cmp
aas
hlt
cmp
in
inc
adc
stc
lahf
test
std
add
pop
ljmp
out
leave
arpl
ds
xchg
push
in
lods
aaa
cs
jno
and
shl
fwait
lods
dec
filds
lret
inc
fcoml
out
cmpsl
mov
adc
xlat
aam
int
arpl
addr16
sub
sbb
out
shrb
push
mov
or
jbe
cwtl
xorl
mov
xor
xchg
mov
jae
push
cmpsb
adc
popf
mov
cmpsb
and
popa
cmp
mov
mov
outsl
pop
iret
ds
es
imul
adc
lahf
mov
ja
mov
xchg
cmp
scas
outsl
int
pop
or
push
enter
dec
insb
xchg
ret
test
push
int3
loop,pn
jmp
cwtl
pop
out
sbb
mov
add
inc
lfs
mov
dec
nop
sti
call
mov
popf
lcall
mov
sbb
ja
jns
adc
add
mov
jno
fisttpl
or
jge
sub
cmpsl
or
xchg
sbb
fsubl
test
sbb
icebp
xchg
pop
jle
and
adc
xor
stc
es
push
lahf
popf
pop
pop
cmp
cmp
adc
pop
arpl
in
mov
lock
iret
sbb
mov
pop
xchg
out
cltd
lret
adc
xlat
fcompl
push
shll
test
shlb
fnstenv
xchg
cmp
scas
sub
sub
jge
push
push
pop
out
arpl
mov
pop
clts
mov
aas
mov
repnz
dec
fcompl
addl
stc
mov
vzeroall
dec
and
inc
xchg
pop
and
xchg
mov
pusha
das
mov
pop
push
and
ja
sahf
cmp
or
stc
push
cmpsb
mov
or
inc
push
cmp
ret
mov
add
adc
or
push
mov
pop
sahf
aas
out
and
sbb
cmp
loop
aas
mov
outsb
add
sbb
hlt
push
lret
lret
cld
adc
xchg
scas
addb
push
sbb
or
cmp
push
cmc
out
fisttps
rep
xchg
mov
into
fdivs
int
pop
fsubrl
add
xchg
aas
fisttps
sbb
enter
mov
scas
xchg
cmp
lret
bound
rolb
xchg
cmpl
shll
pop
test
add
mov
inc
pop
mov
ret
jge
iret
xchg
pushf
int3
mov
jns
push
js
stos
cmc
add
xchg
pop
push
repz
nop
inc
mov
cs
adc
jae
xor
adc
les
fst
shll
dec
add
cmp
int
test
out
jmp
xchg
fisubrl
and
dec
push
sti
filds
push
cmp
cld
or
cli
or
sub
xor
mov
pop
jne
call
pop
test
divl
das
xchg
jae
mov
imul
push
push
sbb
sahf
jne
cmpsb
gs
mov
push
ret
int
lret
jae
imul
fcomps
insl
mov
lahf
cmp
push
imulb
ffree
sbb
mov
inc
into
shll
xor
jns
xor
sub
pop
imul
lret
and
js
mov
pop
cmp
mov
je
jbe
insb
cmpsb
inc
adc
rorl
mov
ret
xchg
dec
xlat
faddp
jae
cwtl
and
jmp
out
popa
pushf
sub
mov
imul
xchg
insl
cmp
sbb
repnz
aas
bound
xor
sub
add
movsl
add
inc
xor
fucomi
loopne
out
jns
inc
mov
xor
leave
insl
and
cmc
ret
test
mov
xchg
cmp
and
outsl
and
mov
inc
xchg
xchg
sti
sub
and
sbb
inc
orb
sti
test
ss
in
sahf
int
jbe
sub
jmp
and
push
je
inc
xchg
sbb
sub
jns
sbbb
push
xchg
sti
push
dec
movsb
lea
test
loop
in
xchg
or
jne
pop
ljmp
xor
sub
mov
scas
and
xor
push
xlat
mov
mov
ret
cld
adc
lock
movsb
daa
push
mov
gs
lahf
das
jo
cld
ds
scas
into
cmc
scas
sbbl
add
mov
ss
fwait
nop
hlt
inc
xchg
js
insb
test
xchg
insl
xor
filds
mov
xchg
mov
xor
jne
enter
sbb
iret
jb
pop
leave
ljmp
arpl
sub
mov
xor
imul
js
xor
test
add
mov
adc
ljmp
sahf
mov
push
fistps
jmp
sbb
push
jno
push
pop
adc
xchg
mov
movsl
insb
sbb
aad
test
clc
xchg
popf
fimuls
xchg
push
or
pop
mov
adc
jno
ja
add
sti
or
sti
pop
movsb
jno
mov
inc
jl
loope
inc
pushf
cltd
mov
jo
inc
popa
js
mov
test
imul
push
add
leave
jp
rcll
pop
xor
lds
scas
add
xlat
pushf
jp
popf
mov
adc
sbb
sti
inc
jmp
sti
jns
pop
mov
lock
in
movsb
sbb
mov
push
add
mov
cmc
lods
loopne
jns
mov
or
cvttps2pi
lods
jg
loope
lods
in
xor
push
pop
mov
pop
inc
jp
mov
xchg
in
add
mov
fldl
and
push
fdiv
fnstenv
mov
in
push
jo
andb
jmp
sbb
rorl
cmpsl
pop
jbe
sbb
xorb
loope
xchg
fbstp
js
push
add
daa
jnp
sahf
add
aas
push
in
in
adc
pop
dec
mov
jp
arpl
jg
pop
mov
test
add
xor
in
lea
out
test
push
outsl
call
imulb
test
mov
mov
pop
dec
subb
sub
inc
test
outsb
or
push
popf
inc
xor
sahf
cmp
stc
mov
mov
mov
je
insb
scas
mov
push
or
or
adc
hlt
cmpsb
testl
inc
loop
and
pop
mov
mov
dec
xor
enter
push
jmp
dec
adc
mov
add
sbb
cmp
sbb
xchg
inc
repnz
fldenv
pop
addb
pop
imul
aad
lock
cmp
dec
in
es
mov
notl
xor
xor
jb
mov
in
dec
in
cmp
and
cltd
pop
cs
lock
sbb
call
clc
scas
mov
in
xchg
cs
pop
das
push
and
mov
push
into
mov
xor
pop
mov
pop
in
ret
sbb
mov
sbb
imul
adc
test
adc
scas
mov
cmp
outsb
push
add
pop
sar
ror
and
cmp
fisubrs
pop
pop
rclb
mov
repnz
jns
or
lods
push
mov
in
andl
or
push
ret
lret
sub
iret
iret
test
pop
out
pop
jbe
sbb
push
dec
mov
cmpsb
imul
mov
outsb
and
in
rclb
mov
mov
inc
stc
dec
xchg
xor
xchg
pop
sbb
or
push
cmc
jecxz
shl
loope
imul
pusha
cld
out
arpl
push
or
jge
xchg
sbb
lods
sub
shll
mov
lods
test
out
jge
jge
roll
add
ret
or
stc
cltd
mov
sub
ret
fdivrl
popa
insl
adc
loop
mov
call
or
or
popa
aaa
div
mov
pusha
push
shl
fisttps
jp
insb
adc
in
jle
push
cmc
sarl
test
pushf
jecxz
mov
add
mov
sbb
fdivr
and
mov
pop
lds
mov
and
daa
daa
neg
in
mov
cli
fwait
mov
xchg
xchg
test
cwtl
pusha
adc
xchg
neg
push
loopne,pn
jae
xchg
pop
add
push
sbb
mov
dec
stos
mov
test
mov
loope
mov
icebp
add
inc
inc
popf
paddsw
lret
clc
push
stos
push
jge
lahf
fisubl
jle
test
ror
arpl
clc
xchg
movsl
stc
jo
clc
test
loop
mov
lds
sub
movsb
push
test
stc
and
jno
inc
insb
outsb
fisubs
ljmp
int
jecxz
loopne
adc
sbb
mov
xor
aam
int
imul
pop
push
push
dec
fsubrl
mov
inc
sbb
xor
cs
ret
and
insb
jmp
fsubrs
lock
or
ja
xchg
mov
imul
int3
es
aad
jo
in
pop
adc
jmp
dec
jmp
xor
fsubp
sti
sub
sbb
lds
inc
mov
xor
mov
pop
aad
movsl
xchg
testb
jecxz
dec
sbb
xchg
shr
inc
imul
sub
inc
jle
test
jle
popa
adc
sub
push
movsl
cmpsl
sub
and
mov
enter
stos
mov
fdecstp
shlb
ljmp
mov
cmp
ror
mov
cmpl
sbb
mov
xor
movsl
adcl
adc
stc
cld
push
dec
fmuls
cmpsb
or
pop
dec
loop
pop
lds
sbb
popa
aas
rcrl
mov
push
dec
adc
loope
popf
mov
sbb
sbb
jbe
pop
xor
lea
enter
rcrb
dec
mov
jle
ljmp
inc
and
sbb
fidivl
sbbl
std
adc
into
add
lcall
jmp
insb
jbe
mov
xor
imul
push
xchg
es
push
fisttpl
add
pusha
inc
imul
mov
clc
sub
pusha
cmp
mov
into
test
loop
jae,pn
adcb
inc
ja
lock
inc
int3
pop
test
ds
xchg
pop
jnp
add
negb
dec
fs
mov
paddd
ds
fnsave
iret
out
imul
aas
leave
pop
mov
pop
into
sub
mov
scas
fdivrs
or
add
add
ficoms
pushf
and
jns
lods
dec
xchg
and
cmp
aad
lea
ret
fwait
es
das
add
pop
push
cltd
dec
xchg
xchg
mov
cmpsl
mov
and
js
sbb
mov
push
or
sbb
mov
xchg
jae
inc
mov
mov
mov
mov
add
fadd
mov
iret
std
ret
paddw
mov
xchg
push
lods
adc
negb
cmp
pop
jecxz
dec
jne
xor
in
daa
in
fsubs
mov
cmp
cltd
das
mov
xchg
nop
out
adc
ja
pop
sub
mov
add
loope
ds
and
push
xor
xor
rcrb
sub
mov
and
sbb
outsb
lret
enter
pop
hlt
adc
sti
fs
test
mov
addr16
cmp
sbb
or
mov
dec
sbb
mov
out
mov
sti
or
ret
shll
jb
jecxz
inc
icebp
jbe
addr16
xchg
mov
jecxz
and
lea
daa
push
mov
rorb
popf
rol
pop
arpl
pop
mov
aaa
add
mov
clc
inc
sub
subl
mov
mov
bound
mov
clc
xor
xorl
out
xchg
icebp
jl
addr16
pop
pop
xchg
dec
fidivrl
lock
cld
lock
into
mov
inc
lock
push
mov
mov
das
mov
addr16
xor
mulb
dec
mov
popa
mov
add
sub
xchg
fisttps
je
xchg
inc
sub
lock
push
xlat
in
push
dec
sti
or
lods
jg
arpl
xchg
jmp
cs
lcall
mov
loopne
aad
lret
jbe
mov
pop
jecxz
push
fnstsw
popl
pop
addb
inc
or
xor
pop
mov
mov
mov
inc
shll
mov
cmp
mov
push
mov
js
push
cs
adcb
push
mov
dec
adc
ficoml
xor
sbb
ljmp
add
imul
in
std
int
or
lods
pusha
inc
popf
subb
adc
adc
into
sub
leave
and
jg
mov
mov
lods
mov
cmp
mov
bound
mov
sbb
sub
sub
inc
lret
push
xchg
into
pop
mov
in
jp
imul
lret
push
pop
pop
adc
dec
sub
push
test
orl
sub
in
mov
imul
sbb
cli
ds
pop
pusha
dec
and
out
inc
mov
cs
add
mov
out
jnp
mov
clc
sub
dec
out
daa
push
xor
je
mov
out
or
or
sub
into
pop
cmp
xor
in
sti
ret
rcll
inc
dec
shll
sub
mov
jno
stos
inc
xchg
aaa
add
add
inc
jg
sbb
lahf
mov
mov
add
je
jae
addb
aas
enter
arpl
loopne
jecxz
lahf
rcrb
cltd
jne
clc
jl
add
jne
push
jno
push
cltd
xor
pop
hlt
jl
stos
inc
cmp
and
sbb
movsb
lds
ds
pop
cld
push
popa
in
pop
inc
adc
mov
push
fwait
out
inc
dec
jns
aas
xorb
xor
outsb
pop
les
repz
inc
sub
and
add
cmp
repnz
aaa
les
and
in
xor
lret
pop
xor
into
xchg
cmp
cmpsb
and
cwtl
cmc
or
scas
jae
jns
push
ror
sbb
lea
pop
and
inc
jmp
mov
test
mov
mov
imul
sbb
xbegin
push
mov
data16
sbb
dec
mov
fs
pop
jns
daa
or
loope
pop
imul
mov
add
lea
fstl
cltd
dec
int3
lods
cmp
iret
shl
lahf
adc
add
clc
mov
or
mov
add
adc
or
movsl
sub
test
addps
sub
mov
fimuls
clc
repz
out
sub
bound
xchg
sbb
sub
cli
popf
outsb
add
mov
xchg
icebp
xchg
cli
cmp
dec
imul
mov
mov
cmpsb
out
pop
call
in
mov
imul
rcrb
popa
aad
hlt
and
inc
xchg
pop
ja
mov
push
xchg
pushf
xchg
movsl
push
js
rcll
je
hlt
adc
mov
sbb
test
mov
mov
jbe
dec
shlb
mov
dec
test
xor
sahf
pop
loop
sub
movsl
inc
mov
testb
movsl
lds
cmpsb
dec
and
loopne
sub
mov
or
push
sahf
das
dec
dec
or
ds
mov
cmc
mov
lahf
frstor
scas
inc
rorb
xor
mov
inc
adcb
mov
xchg
mov
rcr
ds
jb
jo
roll
mov
lock
mov
fisubrs
fsts
push
or
pop
lods
xchg
or
adc
jmp
test
xor
mov
dec
mov
add
sub
inc
jmp
leave
arpl
jo
xor
sbb
mov
movsb
push
jbe
jmp
daa
cmp
insb
mov
outsl
xor
sbb
cld
in
pop
loop
jae
xchg
iret
cmp
adc
mulb
sbb
pushf
push
lock
jns
in
outsb
inc
mov
fsub
adc
bound
sbbl
xchg
addr16
cli
movsb
push
mov
jp
test
xor
nop
repnz
adc
iret
stos
arpl
leave
outsb
adc
inc
addr16
pop
ss
or
inc
inc
mov
xchg
pusha
xchg
sti
shlb
mov
ret
ret
xor
add
ss
push
mov
push
and
jl
test
loope
xlat
fwait
dec
and
lods
es
sub
sbbl
dec
insb
mov
or
xchg
xor
lds
filds
sub
and
mov
mov
loopne
push
ja
pop
cmp
lahf
in
mov
dec
pop
push
mov
xchg
xor
mov
lods
outsl
out
outsb
popf
imul
mov
in
sbb
cmp
adc
cmp
inc
xchg
aaa
adc
and
xor
push
cwtl
push
mov
lret
scas
jle
nop
mov
or
into
lret
pusha
dec
sub
push
nop
lock
or
inc
test
add
push
outsb
dec
bswap
mov
addb
ficoml
fsubrl
jmp
stc
aaa
sbb
xchg
jno
loope
and
jb
ret
push
jle
pushf
mov
in
imul
andl
mov
cmpl
popa
cltd
fsts
push
mov
stos
dec
pop
inc
mov
dec
and
ljmp
in
mov
mov
mov
mov
jno
pop
repnz
cs
push
push
mov
xchg
std
sbb
addb
outsl
inc
fdivr
sub
jl
xchg
pop
stc
mov
imul
jg
adc
xchg
shlb
mov
stc
xchg
sbb
lds
les
pop
mov
xor
fnstcw
mov
in
cwtl
rorl
pop
push
jb
lret
test
xor
xor
aas
lods
lods
mov
ja
xchg
mov
sbb
lock
xor
mov
ret
or
mov
cwtl
mov
lret
mov
aam
jbe
shrb
xchg
movsl
pop
test
pop
out
rcl
shrb
shlb
repz
cmc
cmp
sahf
cs
daa
and
lods
pop
int
bound
adc
into
inc
jbe
push
jo
lret
cmp
or
mov
sbbl
push
push
pop
inc
xor
cmpb
xchg
mov
fstps
jmp
inc
pop
add
fnstsw
insb
or
jne
push
dec
or
adc
sub
out
xor
out
cmp
fsubl
push
or
xor
addr16
mov
mov
pop
sbb
inc
popa
inc
cli
test
add
test
mov
in
fidivrs
outsl
pop
mov
outsb
loope
std
fs
or
fwait
and
jecxz
and
or
jmp
fistpl
fbstp
sti
jmp
inc
push
inc
call
push
inc
lock
jno
scas
lea
mov
xlat
pop
xor
sbb
pusha
addb
int3
pop
inc
jns
test
mov
or
enter
nop
jno
rorb
int3
mov
pop
jmp
les
pusha
mov
loopne
jno
fisttpl
lcall
cmpsl
and
mov
in
out
mov
adc
loope
adc
fdivs
lds
imul
xchg
ljmp
push
cmpsl
daa
lcall
cmp
pop
jg
sub
sub
lret
mov
jmp
xchg
jecxz
jmp
push
das
mov
imul
dec
mov
or
xchg
jmp
out
insb
adc
and
cmp
add
sarb
sbb
xchg
xchg
jmp
adc
or
out
push
rcrb
mov
jno
xor
jl
int3
insb
or
mov
daa
pop
arpl
out
dec
mov
gs
xor
pop
mov
out
scas
mov
stos
pop
fbld
imul
mov
push
dec
in
test
xor
sub
pop
add
aad
xchg
pop
lods
ljmp
cmp
in
dec
addr16
repz
jbe
mov
mull
aad
mov
mov
mov
mov
je
sbb
push
loopne
cs
inc
adc
rorl
int
test
and
and
ror
shld
push
mov
andl
push
mov
ljmp
scas
xchg
xchg
xor
xchg
mov
outsb
add
std
add
push
dec
fiaddl
lods
sub
cmpsl
lods
pop
scas
mov
jl
and
jbe
hlt
mov
push
cmp
jnp
inc
cmovl
and
jg
mov
push
add
das
nop
mov
add
out
jae
jb
scas
or
insb
mov
dec
subb
divb
push
inc
mov
das
jle
rolb
adc
and
and
mov
sub
or
jbe
mov
ret
lahf
fcmovnbe
pop
pop
movsb
imul
int
push
cmp
test
popa
jo
jnp
out
mov
push
ss
sbb
add
push
test
mov
loop
jecxz
sbb
ljmp
aas
insl
xchg
test
mov
mov
add
in
stos
leave
mov
scas
inc
out
xchg
pop
fld
mov
sbb
sub
pop
mov
adc
imul
pop
mov
in
loop
bound
jbe
dec
lret
dec
xchg
fldt
cmp
jo
das
je
andl
dec
jl
pop
xchg
shl
ja
loop
mov
jge
fcmovne
pop
sbb
into
fsubrs
xor
int
xchg
sbb
sub
dec
je
jmp
mov
lods
xor
ficomps
xor
jge
sub
dec
pop
fldt
ret
pop
sub
mov
lret
mov
daa
mov
imulb
mov
dec
sbb
jg
dec
cltd
imul
or
adc
xor
push
in
cmpb
jo
movsl
push
jno
mov
dec
pop
dec
stos
add
inc
iret
lret
lret
xchg
push
pop
or
mov
fwait
lret
data16
jbe
es
int
stos
mov
add
sub
scas
push
xor
dec
push
xor
push
xchg
cmc
xor
xor
push
lock
mov
adc
and
or
xor
sub
lret
lret
sub
mov
mov
inc
mov
sahf
daa
cmp
push
jne
dec
xchg
pop
js
push
stos
sbb
xchg
roll
popa
inc
loop
add
ja
xchg
je
es
insb
movsb
test
jle
jns
mov
mov
std
cmp
jnp
jne
cmp
adc
shrl
data16
dec
cmp
push
mov
inc
push
outsl
aaa
xchg
push
jl
fimull
jmp
dec
adc
mov
imul
stos
xchg
dec
pop
js
imul
in
xchg
xchg
dec
or
dec
sarb
insl
push
repnz
push
lock
push
xchg
inc
pop
std
jnp
xor
adc
inc
jecxz
rcrb
out
sub
stos
add
je
clc
pop
add
insl
jno
sysret
repz
pop
cltd
jnp
aam
inc
mov
cmc
cmp
or
js
mov
jnp
out
bound
imul
or
pop
inc
int3
fcomps
sbb
cmpsb
and
shlb
repz
test
mov
out
dec
cmp
cmp
xchg
out
jo
xchg
repnz
pop
mov
inc
mov
pop
idivb
jmp
ret
push
test
stos
cmp
movsb
in
sbb
push
or
dec
rorl
sub
cmp
inc
push
xchg
orl
lds
xchg
cmp
or
xlat
pop
pop
mov
pop
xor
mov
inc
in
adc
sub
cmp
dec
sub
add
mov
or
pushl
sti
push
hlt
popa
pop
test
xor
in
int
outsl
icebp
sub
sarb
cmc
and
inc
cmp
test
mov
xchg
pop
fiaddl
loop
sbb
jmp
inc
fmul
lret
mov
cld
mov
cld
jg
add
add
leave
addr16
or
xorb
lcall
test
fldenv
stc
ja
cmc
test
jp
jmp
push
call
and
dec
and
jnp
stc
and
fwait
xchg
icebp
mov
dec
mov
push
popf
mov
adc
xor
jo
data16
sbb
adc
std
add
mull
pop
lods
cmp
pop
push
jnp
out
test
insl
fdivrl
stos
sbb
add
stos
shll
cmpsl
ret
mov
lods
int
jbe
sub
gs
outsb
scas
mov
int
bound
in
jo
sub
jmp
inc
xchg
fsts
mov
mov
push
scas
cmp
orb
popf
sub
inc
popa
in
pusha
std
jns
and
testl
lret
pop
aas
call
jae
fisubrs
pusha
rorb
or
mov
lods
jle
dec
aas
in
jmp
aas
loop
mov
lret
ds
mov
mov
icebp
aas
adc
pop
mov
cmp
je
fwait
lods
adc
pushf
stos
imul
mov
sbb
xchg
jl
xor
call
mov
mov
sbb
mov
inc
jg
cmp
pop
sti
and
xchg
xchg
loope
scas
lock
cmpsl
test
jmp
leave
ja
mov
aad
jae
sub
xor
mov
sahf
and
lods
shrl
dec
xchg
inc
mov
fildll
inc
nop
daa
repnz
outsb
mov
dec
mov
mov
cltd
test
pusha
xchg
inc
pop
or
dec
dec
out
aas
xchg
stc
test
in
iret
mov
cmp
mov
ljmp
and
mov
dec
sar
sbb
adc
pop
ficoms
sti
addr16
popa
push
das
outsb
pop
inc
xchg
imul
add
inc
and
sbb
mov
pop
aad
xchg
and
jle
mov
cltd
mov
sbb
lea
xor
mov
pushf
or
orl
xorl
fwait
insb
aas
mulb
jo
dec
loope
shufps
jg
push
pavgb
aam
xlat
sbb
sahf
xor
loope
xor
idivb
cmp
dec
jns
sbb
call
negl
xchg
sti
mov
into
mov
idivb
loop
subl
push
push
rcrb
push
pop
int3
mov
enter
fsubrs
xchg
pop
out
lock
popa
shr
pop
lods
test
xchg
push
popf
xor
inc
push
dec
imul
out
ljmp
fwait
mov
push
nop
jg
mov
push
and
call
lahf
cwtl
in
cmc
mov
mov
mov
fstl
or
sbb
push
in
dec
aaa
rcrb
xchg
cmp
and
dec
or
mov
test
pop
xchg
outsl
jmp
and
push
inc
mov
cli
into
cld
ficompl
add
das
loope
cmp
iret
pop
fdivrs
or
pop
add
insl
mov
mov
iret
cmc
jbe
insl
cmpsb
lcall
js
dec
stc
add
outsl
rcrb
or
addr16
mov
jmp
sub
in
pop
pusha
gs
adc
imul
sub
aam
mov
dec
subl
imull
outsb
inc
lods
cwtl
jge
andb
scas
jb
insl
loope
loop
iret
cmp
pop
movsl
bound
jg
aaa
mov
iret
dec
loope
jmp
cmp
clc
mov
lcall
xchg
out
mov
xor
fimuls
sti
and
arpl
dec
push
das
xor
add
in
aad
popf
imulb
mov
inc
repnz
jae
cltd
and
adc
shl
inc
add
push
sub
dec
repz
push
rorl
push
sbbb
in
xlat
les
sbb
sbb
xor
and
loope
pop
jmp
cmp
addr16
imul
inc
test
addr16
lea
gs
test
dec
repnz
dec
and
loopne
inc
aad
int3
stos
sub
ficoms
loop
sub
sbb
or
xchg
inc
mov
or
fildl
aas
aam
and
pop
xor
sub
push
sub
or
stos
jg
push
pushf
push
into
and
aaa
mov
rcrb
nop
loop
jbe
scas
nop
pop
mov
fistpll
jae
imul
mov
jl
outsl
test
or
jbe
inc
enter
dec
cmp
xchg
jl
rcll
or
aas
pushf
mov
lds
push
xor
aas
adc
cmc
and
adc
jmp
xor
stc
cmc
and
rcrb
sbb
es
dec
mov
and
ds
inc
sbb
sbb
mov
pop
iret
sbb
inc
pop
jecxz
insb
cwtl
sub
xchg
cmp
jmp
lods
lahf
mov
or
and
cld
sub
and
arpl
adc
xchg
push
lods
adc
lea
dec
and
div
pop
in
jo
pop
sarb
cmp
xor
mov
sub
xchg
pop
lods
push
fcompl
loopne
shlb
pop
ja
stc
in
cs
leave
packssdw
mov
cmp
int3
lahf
pop
and
sbb
add
insb
sub
ficoms
push
mov
jge
adc
mov
mov
ficoml
scas
test
repnz
jle
mov
xchg
add
sbb
popf
xchg
pop
loopne
push
and
insb
cmp
adc
dec
lret
inc
sbb
test
aad
jecxz
scas
pop
movsl
pushl
fsubrl
aam
pushl
mov
lock
mov
out
push
addr16
iret
add
bound
cltd
pushf
inc
pop
sarl
pop
es
rclb
stos
insb
jmp
cmp
filds
and
or
test
mov
pusha
fcomps
lock
call
pop
fidivrs
cwtl
add
jae
push
adc
adcl
aas
cmpsb
cmpl
sub
test
idivb
jecxz
das
sub
orb
or
mov
movsb
fstpt
and
pop
or
shrl
mov
push
stc
insb
push
sub
xchg
dec
idiv
push
and
cmp
call
ja
or
pop
xor
xor
push
mov
push
push
jg
lods
imul
fldl
xchg
xor
push
jne
iret
lret
cmp
in
dec
loopne
dec
mov
in
jne
ljmp
roll
push
out
or
out
and
push
mov
loop
sahf
lret
arpl
hlt
sarl
int3
pop
pusha
xor
xor
xchg
lahf
loope
movsb
iret
repz
jecxz
ss
out
push
mov
js
or
push
out
sbb
out
orl
aad
adc
lds
cmp
mov
inc
fnstenv
xor
push
dec
mov
lds
add
pop
push
repnz
adc
rcll
bound
xchg
int3
mov
cmp
pop
add
into
xor
cli
hlt
dec
sarl
pop
aam
hlt
into
dec
in
mov
rcrb
mov
ret
dec
jle
adc
imul
bound
pop
aas
dec
dec
fisubrs
dec
outsb
sti
stos
out
pop
mov
rcll
in
or
mov
add
adc
or
pop
js
outsb
dec
pushf
ljmp
scas
cltd
mov
cmc
scas
in
cwtl
jb
fldt
adc
popa
mov
mov
mov
dec
or
mul
ret
fisubrs
mov
stos
inc
out
cld
int
fisubrs
xchg
scas
std
xor
sbb
fwait
ret
dec
cmp
std
and
iret
shlb
movsl
out
mov
dec
and
pop
clc
jmp
mov
test
out
push
leave
cmpsb
push
xchg
imul
bound
cmp
sti
xchg
sub
out
xchg
sbb
dec
xor
or
aad
pop
outsb
out
xor
xor
jno
js
jge
mov
inc
jl
mov
sahf
ljmp
push
out
stc
movsb
movsl
sbb
jb
push
cmpsb
pop
sbbb
mov
push
mov
push
int
or
pop
mov
mov
add
int3
in
popa
cmc
mov
inc
and
sbb
pop
dec
nop
filds
push
out
ret
popa
mov
mov
dec
push
adc
call
xchg
scas
ja
shrb
and
dec
fisttps
pop
xor
cli
and
inc
and
outsl
jo
sub
xchg
dec
sbb
cld
dec
mov
pusha
xor
inc
call
jns
sub
mov
ss
and
icebp
fcom
cltd
jmp
dec
outsb
adc
lret
imul
imul
lods
faddp
mov
int
sub
sbb
popf
sbb
imul
dec
enter
mov
fcmove
inc
fmuls
ret
les
sub
out
jecxz
jb
pop
push
lock
adc
insl
mov
sbb
inc
xor
movsb
shll
inc
pop
repz
lods
dec
lods
push
int3
add
add
xchg
int3
push
mov
in
in
sbb
inc
cmp
xchg
imul
imul
lock
cmc
es
jp
xor
aas
mov
loope
repnz
icebp
lea
imull
in
and
sub
movsb
jnp
push
fildl
or
mov
shrl
inc
mov
shr
mov
arpl
popf
inc
cwtl
xchg
pusha
lret
mov
out
out
stos
movsl
or
lock
gs
fwait
lahf
and
sahf
incl
lahf
repz
dec
lcall
mov
xor
dec
rolb
jp
dec
sbb
stc
dec
adc
lret
mov
inc
pop
adc
mov
insb
ret
mov
add
mov
in
push
mov
lods
xchg
and
lea
mov
cltd
jne
roll
fisubrs
cmpl
jns
dec
mov
shlb
popf
lods
int3
push
push
fwait
xchg
pop
mov
mov
xchg
xor
lods
out
std
and
sbb
adc
aad
repz
stos
pop
lret
xor
inc
mov
insl
ljmp
sub
repnz
sub
pusha
cmpsb
cmp
gs
out
fstl
pop
in
lods
jb
imul
scas
jp
cmc
les
or
sbb
jl
sarb
out
cltd
out
iret
push
dec
hlt
inc
mov
dec
test
dec
imul
pop
outsb
sub
sub
pop
jnp
push
mov
mov
add
fimull
add
popf
cli
pop
loope
into
sbb
mov
add
sub
out
loopne
stos
mov
inc
and
and
test
and
orl
icebp
xor
mov
xchg
mov
and
fsts
and
jecxz
push
cmc
xchg
mov
mov
push
inc
pop
pop
inc
leave
mov
cld
pop
cmp
sarb
aaa
adc
mov
daa
into
sahf
and
std
mov
push
or
xchg
jg
pusha
scas
and
insl
xchg
add
inc
xor
pusha
or
testl
add
clc
arpl
cmc
cmp
adc
dec
out
scas
ret
cmp
jns
pop
push
or
or
shrl
out
xchg
cs
popa
cbtw
add
jno
xchg
push
push
inc
pop
adc
mov
mov
and
das
add
js
into
dec
add
es
dec
dec
syscall
ficompl
jl
popl
insl
push
push
ret
mov
iret
cmp
sbb
xlat
enter
pop
mov
cmc
sti
outsb
dec
aaa
pop
adc
mov
fwait
dec
rclb
inc
push
mov
fsubrs
test
fistl
test
das
inc
push
aam
pop
add
cltd
ds
sbb
or
xchg
mov
flds
mov
shll
dec
push
xor
add
adc
push
adc
or
or
out
movb
lahf
push
cmp
sti
pop
adc
lods
and
test
and
push
jne
inc
cmp
ljmp
adc
sbb
outsl
sub
lahf
cmp
in
or
xor
movsb
lcall
out
iret
mov
shlb
and
aam
xchg
add
adc
lock
sub
icebp
roll
enter
or
loope
decb
xchg
mov
or
cmp
push
add
pop
out
jl
xor
hlt
in
inc
adc
jbe
adc
testl
xlat
scas
fs
add
in
cmpsl
in
test
pop
stos
repz
fisttpl
mov
xchg
jmp
push
std
loopne
mov
hlt
xchg
push
or
mov
pop
lods
sbb
lods
fwait
sti
push
out
jmp
test
lock
dec
mov
cld
popf
mul
rcrl
ljmp
sub
iret
ror
fstl
repnz
or
push
jl
cmp
hlt
lahf
imul
hlt
mov
dec
fisttps
cmpsb
orb
jns
clc
mov
cli
mov
movsl
aas
cmp
movl
cmp
inc
xor
jg
xchg
pop
ja
push
js
add
and
ret
mov
pusha
add
stc
adcb
aaa
jp
cmp
out
rcr
or
subl
cmp
xchg
jae
pop
into
lods
dec
int3
xor
out
inc
sahf
imul
xlat
ss
je
xlat
lahf
ret
jns
mov
add
loopne
cmp
lds
daa
fnsave
js
insb
test
jp
and
dec
mov
stos
dec
repz
and
imul
pop
cmp
xchg
xor
cmp
jp
xchg
lret
fimuls
dec
jmp
and
jp
jbe
mov
test
cmp
xlat
popf
xchg
jmp
stos
pop
fldenv
adc
sbb
imul
mov
fsubl
sub
fcoml
adc
aaa
roll
cmpsl
pop
xor
adc
shlb
adcb
adc
xlat
mov
cltd
jb
mov
out
fcompl
mov
cmp
dec
push
inc
push
notrack
popf
adc
dec
sbb
jae
cmpsl
cmp
push
in
mov
push
shlb
push
or
adc
xchg
sbb
push
jb
rcl
fdiv
inc
dec
mov
push
dec
inc
imul
dec
lcall
repz
inc
xchg
add
fucom
push
add
sub
jg
fisttps
pushf
fldt
nop
sub
iret
mov
negb
xchg
mov
aaa
aad
out
enter
sub
sbb
cli
lods
mov
inc
xor
mov
sub
xor
adc
aaa
scas
mov
inc
cmp
mov
cmp
lds
lds
insl
fdivr
push
mov
das
pop
lcall
sbb
cltd
xlat
jo
in
sub
push
sbb
fucom
xor
aas
cmp
js
das
outsl
pop
push
movsb
push
lods
inc
call
iret
iret
push
jbe
mov
loopne
cltd
scas
push
out
push
xor
push
pop
iret
push
pop
push
pop
jl
aad
jl
jecxz
lret
dec
and
add
pusha
sbb
sub
cmp
insl
xor
add
sub
or
test
push
sahf
push
imul
fdivl
mov
push
scas
sbb
mov
aas
jmp
xor
dec
in
sbb
sti
pop
pop
pop
dec
pop
sub
ds
mov
aaa
sbb
jne
pop
mov
adc
xor
mov
daa
test
mov
inc
push
cmpb
mov
sbb
inc
cmp
add
push
insb
dec
jnp
xchg
fists
dec
jp
xchg
test
cmpsb
mov
je
adc
cmp
dec
pop
data16
add
sub
cs
jo
mov
jb
fwait
cld
mov
push
push
inc
cmc
enter
adc
mov
xor
push
in
filds
xchg
fldenv
out
inc
push
pop
add
test
repz
cltd
cmp
sub
arpl
clc
ja
movsb
movsb
mov
outsb
ret
fdivrl
or
mov
cmpsb
addr16
jne
out
repz
push
imul
lods
mov
add
lods
push
mov
fwait
insl
in
mov
nop
mov
lods
pop
push
jmp
popf
into
jnp
jae
add
mov
jne
stos
movsl
mov
andb
xchg
cmp
lahf
out
cmp
inc
jg
mov
in
push
xor
fistps
sahf
pop
add
adc
bound
sbbb
adc
dec
aam
hlt
int3
lock
fwait
cli
sbb
leave
scas
mov
cmp
fildl
mov
lret
into
mov
jae
mov
scas
movsb
popf
adc
rclb
mov
mov
lahf
shrb
push
repnz
sub
ret
push
adc
lret
cmp
js
xchg
fsubrl
jle
mov
sub
stos
shr
repz
rcrb
imul
push
lock
stc
popf
iret
sti
repnz
outsb
int3
and
ret
shll
xor
dec
inc
add
fsubr
xlat
stc
bound
idivb
rorl
jg
in
mov
movsl
loope
add
pusha
pop
xchg
and
add
mov
jbe
xchg
add
aas
adc
arpl
push
sub
sbb
lea
mov
sub
mov
fucomip
aam
leave
repz
inc
xor
jae
xor
jmp
gs
and
inc
pop
popf
daa
mov
jns
lret
imul
fistpl
sub
pop
rol
loopne
andb
mov
scas
fadd
das
paddd
push
lcall
notb
loope
cmovbe
inc
pop
clc
xchg
mov
sbb
cwtl
lods
test
nop
sbb
jne
outsl
icebp
dec
push
es
fmuls
xchg
inc
mov
arpl
push
dec
movsl
test
or
or
sarl
in
push
add
push
scas
pop
or
and
je
dec
stos
mov
or
mov
imul
jne
insl
cmp
aaa
mov
aaa
xor
xor
pushf
insb
mov
or
sub
jecxz
sub
push
push
push
roll
loope
popf
std
inc
andps
or
and
arpl
outsl
out
out
jns
lret
sti
popa
leave
lock
push
xor
shll
add
xchg
and
mov
jne
mov
ljmp
dec
mov
inc
pusha
cli
insl
mov
call
push
fmul
and
fdivrs
xchg
popf
dec
nop
inc
and
xchg
lock
sahf
mov
cld
fchs
mov
xchg
arpl
add
and
sub
jg
or
pop
test
stos
dec
sbb
sti
sub
pop
push
pop
inc
cmp
aam
decl
shr
out
lds
stos
cmp
cmp
shr
pop
fsts
test
xor
adc
lds
daa
add
shll
cmp
jp
icebp
mov
ror
and
mov
scas
inc
mov
mov
out
xchg
mov
sub
insl
fidivl
inc
pusha
pop
sub
sbb
jb
jo
sbb
shll
pop
cmp
xchg
pop
mov
lods
movsl
test
decb
mov
dec
int
inc
mov
aas
add
test
iret
xchg
jl
fisubrs
and
pop
in
sbb
aam
negb
mov
pop
cs
lahf
lea
mov
ret
sbb
out
lods
xor
dec
inc
leave
push
xor
aaa
jns
popa
xchg
cli
ret
push
popf
push
pop
pop
shlb
out
adc
addr16
jno
outsb
mov
ffreep
cmp
call
fisttpl
fld
nop
and
popf
shll
out
lods
pop
or
and
sbb
sub
sbb
add
es
pusha
mov
stos
mov
xchg
test
jmp
cmp
jg
sahf
mov
jmp
jp
mov
jmp
push
lret
cmp
mov
sahf
push
fnstsw
cwtl
dec
ror
mov
jns
data16
pop
push
popw
leave
mov
push
xchg
loopne
pop
or
sbb
inc
out
inc
xor
mov
inc
push
test
xchg
sub
and
inc
jbe
sarb
insl
jb
das
sahf
imul
mov
subb
js
dec
pop
stc
pop
adc
or
and
xor
aam
inc
addr16
stc
jae
out
push
mov
vminps
ds
or
jge
xor
pop
lds
clc
inc
inc
scas
movsb
mov
stos
inc
pop
cld
arpl
flds
subl
addr16
loopne
mov
js
inc
mov
or
dec
aas
adc
mov
mov
lahf
flds
xor
in
add
mov
push
repnz
or
loop
sub
sbb
adc
mov
inc
and
mov
dec
addr16
mov
stos
cmp
jp
add
cld
jno
stos
xchg
iret
mov
negl
pop
dec
ss
test
ja
inc
pop
pop
scas
push
push
pop
and
inc
fsin
stc
mov
rclb
and
push
cmp
or
and
xchg
pusha
nop
out
inc
sub
subl
mov
lret
test
push
push
hlt
roll
sub
mov
jns
imul
cwtl
or
dec
pop
inc
rcrb
imul
popa
in
popf
clc
cmpb
mov
addr16
aad
in
repz
pushf
into
adc
pop
sub
pop
insb
inc
or
mov
clc
popf
test
mov
scas
and
xchg
gs
adc
push
jns
es
or
es
mov
sbb
je
icebp
sub
mov
sub
sub
stos
inc
dec
in
popf
add
pushf
pop
das
out
or
cmp
sbb
xchg
sahf
cld
divl
adc
es
mov
dec
adc
xor
lret
jge
sub
arpl
inc
xor
inc
adc
push
pop
in
mov
fisubs
imul
pop
cmp
mov
add
test
pushf
mov
pop
cwtl
xor
imulb
mov
jo
mov
add
roll
outsl
aaa
pop
shll
cmpl
mov
aas
ja
pop
cmpb
push
jmp
push
and
fldl
push
popa
push
icebp
push
cmpsb
fimuls
aad
sub
push
push
xor
cs
nop
jle
movsb
cmpsl
lds
call
pop
pop
jle
push
push
sub
pushf
js
fsubrs
fnstsw
jle
sbb
cs
cwtl
jne
out
mov
adc
daa
in
leave
jne
out
sub
hlt
cmp
and
adc
inc
insb
dec
sbb
push
inc
pop
cwtl
inc
out
daa
jne
sbb
outsb
sbb
fidivrl
pusha
and
add
jnp
mov
cli
push
or
mov
or
dec
ret
movsl
dec
test
mov
xor
bound
add
or
pop
dec
mov
xchg
add
xchg
lods
insb
je
pop
ss
je
mov
in
sbb
clc
jle
sahf
loopne
cmpsb
sti
sub
fdivr
ja
add
inc
jmp
orl
loop
sbb
sub
leave
lods
inc
mov
add
dec
and
lock
sar
sbb
xchg
in
mov
jg
out
imull
adc
stc
je
sbb
hlt
cmp
imul
in
int
aam
sbb
stc
or
mov
sbb
and
js
mov
xlat
subb
out
aam
mov
sbb
or
jno
ds
inc
dec
jb
jbe
sete
add
jg
adc
push
das
in
enter
jo
mov
pop
xchg
inc
into
fstpt
imul
dec
insb
inc
jnp
jl
jp
sbb
loop
push
pushf
lods
mov
outsl
add
mov
and
dec
icebp
pop
fmull
ds
mov
test
aad
fistl
mov
push
xor
call
test
mov
push
ss
sub
mov
or
push
test
dec
push
aam
js
ljmp
repnz
cmp
pop
mov
psrlw
outsb
pop
icebp
testl
sbb
push
inc
outsl
icebp
xlat
push
test
cltd
xor
lock
mov
xor
push
aam
test
clc
dec
pusha
sub
add
sbb
jae
mov
repz
adc
stos
test
sub
jg
dec
stc
sub
adc
outsb
out
xchg
mov
xlat
sub
and
je
push
imul
push
xor
jns
xor
sbbl
adc
dec
add
rorl
fdivs
cmpb
pop
jp
inc
insl
cmp
aam
pop
mov
mov
sub
cmpsl
out
es
cmp
push
or
push
movsb
fisttpll
or
mov
sbb
inc
push
pop
adc
imul
xor
xchg
ja
jae
imul
out
and
pop
xorl
and
adc
mov
scas
call
scas
fnstenv
je
add
cmc
dec
mov
popf
fildl
out
jb
xor
add
in
fldt
das
das
sbb
sbb
push
fisttps
movsl
sar
xlat
jnp
int
aad
xchg
movsl
or
xchg
rclb
sub
dec
cmp
shlb
jecxz
arpl
cwtl
mov
add
roll
push
xchg
js
sbb
mov
xor
jg
or
dec
jg
add
xor
rclb
inc
repnz
xor
data16
or
imul
lds
hlt
idivb
mov
in
scas
jecxz
push
pop
sub
inc
xor
into
add
fs
xor
dec
ficompl
shrb
cltd
mov
xchg
retw
sbb
sahf
aam
repnz
hlt
add
cmp
cmp
clc
addr16
mov
push
cli
sub
push
sahf
jbe
daa
mov
or
aas
cwtl
aas
adc
pop
lods
mov
lret
and
cmp
mov
insl
int
out
daa
mov
lock
and
insl
xchg
push
jge
lret
mov
dec
push
ficoms
rorb
les
jl
xchg
cmp
jg
pop
scas
repz
sbb
ficompl
dec
cld
add
sbb
mov
or
rcrl
mov
addr16
sub
xchg
xchg
push
outsb
leave
jns
pop
or
dec
jg
fistps
js
adc
xor
sbb
outsb
push
mov
call
mov
pop
nop
out
cld
lds
insl
mov
pop
mov
fxrstor
loop
xchg
bound
int
scas
addl
test
lock
daa
sub
push
int3
jge
fmulp
xor
or
popa
lea
sub
cltd
gs
xchg
mov
cmc
les
mov
xor
sub
fcomps
cmp
ljmp
std
hlt
sbb
pop
jae
sti
pop
push
inc
cmp
ljmp
clc
decl
fmuls
jecxz
mov
sub
xor
stc
icebp
and
scas
and
xorl
jp
jns
leave
xchg
xor
jnp
mov
out
aam
int
mov
inc
call
push
aaa
pop
mov
mov
inc
xchg
inc
ljmp
into
addr16
jnp
fwait
mov
dec
bnd
test
push
sub
push
jnp
ss
dec
mov
repnz
inc
xchg
rolb
loope
fcoms
pop
add
jo
arpl
xor
sbb
jle
jl
movsl
gs
sbb
adc
inc
inc
loope
jmp
outsl
xchg
lcall
cltd
add
mov
add
cltd
push
xor
cltd
and
adc
hlt
mov
mov
mov
push
dec
pop
sbb
in
sub
loop
sbb
in
jmp
lcall
mov
in
inc
arpl
andl
jge
aaa
push
xchg
gs
incl
mov
les
movsl
mov
outsl
ja
es
push
jnp
shrl
or
std
xor
test
imul
push
cmp
cmp
or
and
mov
shl
imul
push
mov
loope
ficoml
jbe
ret
push
mov
data16
cmp
push
cmp
mov
aam
pop
sbb
inc
sub
adc
int3
outsl
data16
mov
int
sbb
std
jne
dec
mov
adc
lods
test
jae
popl
clc
in
call
movsb
fadd
dec
jp
je
das
fwait
je
mov
dec
out
lret
jmp
cmp
sub
mov
inc
aaa
stos
scas
int3
pop
imul
push
fdivrs
mull
inc
movsb
lcall
jns
popf
out
pop
ja
sub
pop
les
mov
rcll
popf
clc
xchg
test
sbb
xchg
mov
dec
mov
xor
int3
dec
mov
add
sbb
loope
leave
scas
jmp
lret
int
push
inc
stc
outsb
pop
stos
pop
dec
add
test
sbb
pusha
pop
loopne
imul
xor
mov
mov
rol
leave
ss
out
loop
insl
in
out
or
mov
push
dec
push
sbb
jbe
inc
out
mov
ret
enter
cs
inc
cmp
pop
lock
or
mov
ret
pop
insb
push
pop
adc
add
pop
mov
mov
das
jp
sarb
sbb
sub
push
and
lock
lret
mov
inc
lea
inc
les
outsl
push
or
sbb
fistps
daa
ffree
mov
lcall
mov
and
addr16
call
adc
adc
loope
leave
sti
call
add
divps
ret
popa
cmc
repnz
mov
mov
xor
insl
sub
hlt
sbb
inc
push
aad
jl
movsl
loopne
iret
insb
xchg
adc
mov
push
lcall
inc
xchg
and
push
dec
sub
pop
mov
jg
mov
adc
xor
dec
fistl
pusha
pushf
fadd
push
js
mov
jmp
xchg
xchg
ror
inc
rorb
lock
mov
push
jge
or
dec
mov
rorl
and
stos
cmp
push
adc
aam
pop
stos
adc
cmp
out
pop
jno
leave
mov
mov
cmp
mov
cmp
in
jle
mov
jno
xor
movsb
xchg
insb
aam
lahf
pop
in
pop
aas
mov
adc
jp
push
mov
imul
repz
sub
cmpl
ret
sub
fwait
in
rolb
jo
sbb
ds
xor
lcall
test
hlt
shll
outsl
data16
mov
shrb
mov
cmp
adcl
mov
notb
add
imulb
push
dec
xchg
mov
dec
push
movsb
jne
fstpl
mov
mov
loope
in
inc
lcall
push
xor
test
jae
movsl
in
mov
mov
mov
sbb
outsl
xchg
dec
add
add
mov
sahf
or
fwait
and
negl
inc
fcmovb
gs
or
lods
fstpt
or
es
push
loope
ss
fnstsw
mov
dec
jno
sahf
rol
jb
sti
jno
sbb
xor
fucomip
popf
push
dec
or
arpl
ja
movsl
pop
inc
adc
sbb
fstl
push
add
fistpl
pop
fisubl
punpcklwd
sub
pop
inc
stos
adc
mov
jnp
add
iret
push
insb
jl
pusha
push
in
push
jno
testb
sahf
data16
xor
or
loop
mov
add
sbb
push
sub
adc
fnstenv
inc
cmp
rcl
inc
mov
add
push
arpl
pop
int
sbb
sbb
sti
sbb
leave
je
or
adc
cmp
test
aam
and
loop
in
lea
mov
stos
lahf
xchg
jle
dec
jae
pop
leave
or
imul
pusha
or
sbb
lahf
sub
or
shrl
jmp
mov
sti
and
xchg
int3
jle
into
adc
loope
and
sub
jbe
loope
adc
push
cmpsl
cmpsb
pop
push
and
lcall
scas
test
in
mov
mulb
mov
mov
loop
xchg
inc
out
inc
push
mov
sbbb
insb
dec
xchg
mov
mov
mov
and
js
rcll
imul
ficompl
adc
cmp
imull
repnz
aad
push
jmp
and
sarb
sti
sbb
stos
inc
data16
mov
adc
imul
mov
das
cmp
cwtl
xchg
xchg
lahf
lret
cmpsl
jb
sub
fs
mov
sub
add
testl
xlat
pop
xchg
xor
sbb
pop
int3
sbb
fmul
fldl
xor
xchg
inc
or
imul
repnz
roll
lahf
push
aam
ds
push
scas
pop
outsl
mov
lods
repz
or
les
inc
lds
leave
push
or
pushf
sbb
add
adc
and
das
or
sub
mulb
jge
loope
arpl
ja
das
add
ret
gs
dec
xchg
lret
mov
mov
stos
repz
lahf
pusha
int3
gs
jl
rorb
jp
loope
sbb
inc
mov
rcll
lods
les
filds
mov
adc
test
outsl
out
or
testb
sbb
mov
sti
daa
fwait
into
fstpl
xor
fs
inc
push
jno
add
std
fdivl
fcmove
inc
inc
shlb
push
xchg
scas
shrb
pop
cmp
scas
xor
and
mov
pop
sahf
sub
cmc
push
out
xlat
sub
popa
adc
into
mov
imul
dec
popf
mov
aam
mov
addr16
cmp
in
pop
pop
cmp
sbb
adc
ret
lock
movsb
cmp
pushf
sbb
std
inc
cmpsb
stos
or
and
call
or
push
add
notl
push
jp
jne
mov
xchg
fcompl
cmpsb
fiaddl
or
push
pop
dec
xlat
sub
mov
pop
inc
mov
sub
lods
scas
cmp
xchg
push
ds
pusha
shl
mov
sub
jno
mov
xchg
loopne
clc
outsb
divl
pusha
mov
data16
xorl
mov
pusha
jmp
jno
stos
jbe
xorl
pop
cmpsb
das
lock
pusha
jno
js
sbb
testl
hlt
add
xor
not
adc
and
dec
add
fnstenv
ja
gs
adc
push
jg
stc
dec
shlb
xlat
mov
stos
mov
cmp
fsubrp
sub
in
mov
mov
xchg
andl
aad
jl
ds
xchg
fdivrl
gs
hlt
push
sahf
stos
lds
push
pop
inc
push
push
push
mov
cmc
mov
in
or
xchg
or
es
adc
sarb
sub
inc
pop
test
addb
fwait
out
dec
sahf
std
pop
ds
test
dec
lret
sub
pop
call
pop
cmp
or
jecxz
outsb
pop
xchg
cmp
push
scas
sarl
addr16
xor
icebp
jg
lcall
shlb
pop
imul
inc
shrb
dec
jb
cmpsb
inc
das
aas
cmpsb
dec
sahf
or
xchg
push
jl
sub
push
jae
pushf
xor
mov
push
and
addr16
scas
and
xor
in
ror
jg
dec
xor
push
jge
test
jecxz
and
pop
or
insl
mov
jecxz
or
inc
xor
loop
mov
jb
cmp
pop
xor
shr
jle
int
outsb
cli
dec
mov
xor
xor
loopne
out
cs
scas
push
sub
ret
push
or
xor
pop
pop
sbb
testl
dec
inc
sbb
faddl
outsl
mov
jge
xor
xor
xchg
lret
mov
std
inc
mov
pop
xchg
loope
mov
cmp
jp
pop
int
outsb
mov
sbb
cmp
adc
aas
imul
pop
add
pop
ljmp
adc
test
out
mov
xchg
add
jmp
lahf
rclb
fwait
xchg
sbb
bound
cltd
inc
in
adc
sbbl
loope
pushf
pop
aas
in
cmp
fisttps
leave
add
out
ss
insb
sub
cli
jge
cmc
out
xor
mov
mov
inc
aad
test
mov
sbb
push
jnp
mov
sub
les
lahf
xorb
inc
in
loopne
repnz
mov
adc
mov
xor
and
rorb
jns
pop
pop
push
pop
lods
lret
fwait
mov
scas
inc
sti
dec
add
sub
mov
jmp
es
popa
inc
mov
dec
dec
inc
sbb
adc
and
lods
loope
jne
add
cmp
outsb
jo
outsl
mov
xor
out
rorl
imul
cld
push
mov
int
lcall
mov
jbe
imul
movsb
sbb
adc
test
fst
mov
and
out
popf
rorl
repz
into
add
mov
and
mov
push
add
popf
add
in
outsl
fisubs
insl
loopne
out
xchg
sub
mov
inc
lret
jmp
dec
popf
jmp
lret
xor
dec
ds
idiv
adc
dec
mov
xor
mov
testl
push
cmc
sbb
mov
loop
sub
cmp
mov
call
in
and
push
out
pop
sbb
sub
sti
sbb
pushf
std
add
mov
sub
call
push
xchg
and
cld
dec
out
mov
push
sbb
mov
sbb
pop
iret
or
xlat
dec
imul
xchg
add
xchg
popf
lock
push
lret
xchg
fsubr
mov
dec
mov
je
aam
lea
loopne
cltd
hlt
aaa
mov
mov
je
inc
das
imul
fs
xlat
fildl
mov
fs
mov
push
in
imul
cmp
lods
sub
mov
jns
pushf
jge
das
ficoml
sti
and
mov
or
xor
fimuls
xchg
push
and
add
or
orb
sub
icebp
call
adcl
cmp
cltd
test
pop
loopne
and
mov
and
sarl
jmp
mov
pop
sbb
es
mov
fucom
sub
and
jp
lods
xor
mov
cli
xorb
xchg
imul
data16
ljmp
popa
mov
pop
out
xchg
cmp
inc
testb
mov
sbb
stos
cmpsl
rorl
xor
pop
mov
rclb
outsl
mov
lock
mov
mov
ds
data16
adc
mov
push
shll
aas
test
cltd
push
fsub
xchg
lods
sbb
jne
mov
xchg
lcall
xlat
lds
push
enter
jno
clc
dec
test
xchg
and
cmp
and
std
cltd
pop
nop
in
stc
stos
mov
inc
mov
xor
dec
fsubrl
jecxz
adc
scas
es
xchg
xchg
js
dec
xchg
insl
jbe
sub
dec
or
dec
mov
adc
clc
lds
xor
out
cmc
and
or
jae
aam
xchg
mov
cmp
mov
sbb
xchg
mov
in
stos
xor
sub
clc
mov
pop
pop
xchg
aad
bound
shlb
jmp
scas
adc
sarb
lods
jl
out
xchg
ds
lcall
jo
and
sub
xlat
icebp
jmp
aad
lock
push
repz
xchg
sub
decb
bound
xchg
and
ja
nop
or
jp
sbb
icebp
imul
or
jecxz
int3
mov
xor
insb
test
adc
mov
in
inc
xchg
jo
pop
jno
dec
jl
pop
xchg
test
cwtl
out
push
lahf
xor
push
jl
sub
nop
repnz
xchg
jg
xor
push
test
pusha
mov
mov
push
and
fstpl
mov
and
sub
jnp
xchg
in
inc
add
mov
jbe
stos
xchg
enter
test
sub
cmp
stos
dec
or
xchg
out
out
jp
lcall
cwtl
sub
fwait
cmpsb
lcall
add
int
cmpsl
push
stos
fcoms
cmp
stos
movl
dec
mov
orb
jge
and
jae
jne
stos
xchg
mov
test
adc
push
out
inc
cld
out
or
add
aam
dec
mov
mov
lea
stos
stc
imul
jle
loop
ret
sub
xlat
cmc
sub
add
addr16
jge
jl
int3
mov
inc
sarl
hlt
scas
jge
scas
lea
daa
incl
ja
adc
lcall
pushw
test
les
les
pop
out
scas
jne
lahf
fwait
pop
mov
dec
loop
pop
jb
pop
mov
dec
cmp
sub
dec
lcall
lods
adc
aaa
pop
xchg
push
mov
mov
mov
mov
sarb
dec
dec
push
fmull
fwait
push
int
fs
ss
mov
and
or
xchg
dec
or
jno
adc
mov
out
jno
data16
int
stos
push
jp
jno
mov
clc
push
cmp
insl
cmp
sbb
movsl
sarb
ds
rcrb
mov
inc
imul
xchg
xor
divb
ficompl
xor
xor
rclb
int
pusha
test
lods
add
sbb
sbb
enter
stc
pop
mov
sti
lret
dec
loope
pop
mov
adc
sbb
cltd
dec
add
lret
incl
lret
shrb
ja
insb
ret
cmc
cwtl
insl
cltd
dec
mov
pop
pop
inc
push
inc
hlt
pop
pop
in
mov
shll
pop
loope
int
or
pop
mov
fs
inc
lahf
sbb
add
mov
shrl
into
pop
pop
bound
and
ljmp
push
mov
adc
pop
ror
fidivrs
dec
pop
add
push
out
addr16
xor
xchg
pop
or
mov
jmp
cmp
xor
arpl
bound
dec
or
xchg
aad
pop
ret
sub
add
sub
add
leave
lret
inc
popf
and
mov
sbb
push
bound
mov
push
adc
aaa
jge
mov
mov
test
mov
pop
fyl2x
pop
mov
rcrl
xchg
into
data16
or
fdivrp
leave
xlat
pop
sbb
jno
xchg
lods
es
in
int
ret
movsl
or
mov
js
cmc
sub
inc
out
jecxz
icebp
cmp
dec
lahf
jl
mov
dec
daa
imul
inc
jb
fs
je
les
push
aad
push
and
jge
sbb
outsl
fidivl
ds
xlat
adc
push
cmpsl
inc
lods
fcoml
sbb
bound
inc
enter
push
les
cmp
mov
cmp
jp
xchg
insl
test
dec
int3
sbb
push
or
mov
out
pop
paddb
std
ret
insb
in
iret
pusha
xlat
fcoms
test
lock
inc
push
jmp
in
loope
cld
cmp
push
jmp
sub
fists
and
enter
rorb
pop
out
scas
cs
mov
movsb
adc
cmp
sti
push
out
jl
test
adc
popf
lods
lcall
loopne
mov
cmpsb
int
push
sahf
sub
gs
mov
gs
cltd
adc
cmpsl
cltd
out
mov
int3
mov
mull
and
fiaddl
std
call
jl
inc
mov
xchg
push
jp
jge
xchg
aad
mov
out
pop
inc
dec
mov
sbb
movsl
mov
fwait
jbe
mov
in
adc
dec
xor
sti
mov
ret
loop
enter
dec
test
mov
push
lret
and
negb
stos
or
lods
push
sub
dec
sub
in
mov
dec
test
lea
or
cmpsb
push
or
xchg
jp
pop
cmp
xchg
inc
loopne
fisttps
inc
repnz
aaa
mov
js
insb
adc
jae
shl
mov
ljmp
cwtl
inc
flds
jmp
sub
cli
dec
mov
dec
pop
flds
pusha
xor
cmp
fldt
test
mov
imul
ljmp
add
shl
sbb
mov
pop
in
pop
fdiv
xor
mov
fidivrs
dec
mov
rcl
mov
dec
and
imul
clc
repz
push
loope
into
cmc
fnstenv
xchg
test
sub
ljmp
xlat
test
or
mov
repz
sbb
push
call
mov
ret
inc
into
inc
data16
dec
push
ror
xchg
inc
push
filds
aaa
hlt
push
sbb
jge
sbb
pop
fdivr
ret
repz
cld
cmp
in
fs
cmp
stos
dec
sub
sti
jp
cmp
shll
jae
pop
sbb
inc
add
cs
adc
ljmp
mov
push
popa
dec
adc
dec
xor
addr16
fucom
sbb
cli
scas
shll
testb
insl
inc
and
cmc
mov
lret
add
popf
inc
cmpsl
mov
cmp
arpl
and
fists
nop
add
mov
in
xchg
insl
fwait
xchg
out
xchg
rclb
icebp
rcll
enter
sub
loop
loope
rcrb
sub
in
jp
pop
xchg
das
hlt
mov
mov
nop
or
fs
add
test
adc
xchg
jp
loop
fsubl
mov
pop
push
fimuls
call
sub
push
shll
shll
fdivr
pshufw
pop
push
push
dec
push
rcrl
lea
pop
mov
jne
dec
jp
xchg
mov
aaa
test
cltd
in
loop
and
pop
popf
scas
adc
or
dec
in
imul
fcoml
dec
repz
push
pop
cmp
mov
in
push
mov
push
loopne
mov
cmp
mov
mov
push
adc
cltd
out
sbb
dec
pop
clc
push
bound
cmp
inc
sbb
rcll
sub
mov
push
mov
cli
lock
pop
cmc
stos
popa
sbbl
cltd
inc
outsl
dec
pop
push
dec
jle
adc
xchg
dec
dec
lock
loopne
dec
add
add
pusha
sub
cmp
jb
mov
pop
pop
and
add
jl
sub
xchg
add
outsb
cmpsl
pop
iret
jp
pop
rcl
shrb
xor
xor
pushf
xor
pop
ret
out
pop
add
mov
fmull
and
jle
fwait
test
inc
insb
and
mov
sti
icebp
fwait
rcll
cmpsl
push
cmp
ja
pop
add
cltd
std
loop
sarb
test
lcall
hlt
idivb
sub
or
iret
jmp
add
push
bound
cmp
dec
mov
sbb
fistpll
divb
pop
pop
or
cmpsb
mov
ja
pop
mov
repz
fsubr
adc
mov
fistpll
push
es
or
sbb
xchg
out
mov
sahf
push
push
dec
push
mov
fwait
or
and
shll
dec
jp
dec
sub
je
fdivr
inc
mov
jecxz
cmp
stos
cmp
lret
mov
leave
cs
cmp
jp
push
test
outsb
sbb
inc
inc
sub
mov
fwait
outsb
dec
mov
sbb
jnp
push
out
cmp
mov
lret
xchg
test
ror
stos
and
loope
insb
pop
xchg
mov
fwait
jae
dec
gs
pop
sub
fbstp
int3
sahf
int
cmc
aam
outsl
and
fwait
xchg
pusha
lds
push
jb
popf
loope
pop
aam
jo
nop
adc
or
jl
insb
push
add
repnz
rorb
add
fistpll
xchg
cmpsl
repz
jo
sub
adcl
js
mov
mov
notb
inc
mov
enter
or
stc
sub
je
outsb
mov
jge
movsb
fldt
lds
addr16
xchg
sub
ret
mov
cmp
jae
mov
sbb
push
cltd
jge
jb
push
arpl
mov
push
or
loope
mov
adc
jp
add
sti
fld
jae
std
stos
and
addb
test
pusha
sbb
leave
dec
xor
jecxz
jp
xchg
and
mov
mov
stos
adc
sbb
cmp
inc
add
and
inc
addr16
mov
add
lahf
mov
pop
lds
fisubrl
xor
loope
inc
xchg
and
cmpsb
or
xchg
push
inc
push
int
push
rclb
testb
in
pushf
sbb
cld
adc
adc
das
dec
or
aad
xor
loope
xorl
aam
cwtl
pop
push
pop
aaa
jge
jl
pause
mov
mov
test
push
cmp
pop
sbb
cmpsb
stc
jae
call
cld
jmp
sbb
cmpsb
in
xchg
or
xchg
push
pop
sti
inc
mov
rorl
push
mov
sbb
jmp
ljmp
xor
lahf
xchg
push
scas
jle
inc
rcrb
call
stos
or
std
cltd
jmp
jmp
xor
inc
xchg
shlb
jge
mov
int3
jo
jns
dec
in
push
fsubrl
cmpsl
cmp
cld
jbe
inc
loopne
mov
sti
testb
xchg
mov
stc
lcall
int3
popf
mov
mov
pop
lock
in
fcmovb
inc
xchg
inc
repz
mov
mov
mov
imul
push
mov
mov
loope
mov
pusha
cmc
loopne
imul
stos
push
xchg
and
jmp
jne
outsb
mull
push
and
in
insb
pop
ljmp
cmp
and
hlt
mov
add
xchg
outsb
aad
jg
or
and
pop
jmp
xchg
dec
aad
add
cmc
mov
lret
dec
pop
push
stos
aaa
xor
shl
pop
sub
fidivl
mov
fsubrs
jecxz
adc
sub
jns
scas
lret
and
jne
fwait
sbb
fwait
adc
clc
add
push
aam
ret
cld
push
insb
mov
mov
call
call
int
stos
je
or
repnz
xchg
and
cmp
cmpb
jbe
in
nop
pop
pop
outsb
jae
enter
mov
pop
imul
int
fisubrl
in
push
hlt
lea
and
pop
jmp
and
ds
mov
mov
sbb
mov
repz
out
mov
scas
js
inc
mov
mov
sub
lods
cmp
pop
mov
aam
in
lcall
and
mov
jae
daa
jae
push
pop
xlat
jae
imul
mov
movsb
pop
sbb
clc
iret
or
sbb
xchg
in
xchg
sub
mov
pop
and
xor
cltd
pop
insb
mov
and
gs
pop
mov
neg
into
cwtl
add
mov
and
sbb
in
dec
mov
iret
mov
imul
inc
fcoms
sub
loopne
jae
mov
lods
loop
push
mov
jne
lods
lock
lcall
sbb
adc
pop
sub
in
jp,pt
test
and
sub
xor
dec
sub
push
pop
jp
ret
loope
jge
aas
cltd
test
jge
mov
repz
fwait
mov
rol
stos
jecxz
mull
adc
and
mov
lret
dec
es
and
movsb
push
lods
cli
mov
addr16
notb
add
cli
pop
mov
xchg
insl
test
bound
xchg
mov
imul
hlt
inc
xor
adc
mov
imul
lods
arpl
shl
lret
les
jns
lahf
cmp
push
push
mov
fdivl
push
lds
mov
lods
iret
push
movsb
pushf
pop
adc
imul
cmpb
dec
loop
jae
mov
mov
inc
cs
cli
mov
mov
xchg
mov
scas
jecxz
cld
iret
stc
push
and
enter
fs
push
or
lahf
xor
cmp
jecxz
add
mov
out
outsb
faddp
mov
ljmp
mov
push
or
lahf
sbb
ret
shrl
adc
aad
gs
cmpsl
popf
pop
add
or
rclb
or
outsl
mov
ret
repz
mov
add
and
mov
add
or
loope
xchg
fwait
mov
stc
sub
ja
add
add
clc
aaa
mov
ljmp
int
popf
mov
xchg
inc
ss
roll
sub
lahf
fwait
pop
fimull
push
and
lret
outsl
sub
imul
movzbl
cmp
in
je
mov
adc
out
in
mov
mov
std
ds
cli
lret
xor
add
adc
xor
fwait
movsb
int
sbb
out
popf
dec
mov
cmpsb
xorb
xchg
sbb
jmp
or
lahf
mov
and
lret
xchg
aad
dec
fcmove
push
scas
jle
adc
mov
mov
lcall
es
sbb
sub
mov
jo
inc
add
and
ljmp
mov
je
xchg
movsl
dec
out
mov
pop
jp
hlt
iret
aad
mov
mov
repnz
push
shr
sub
addl
loopne
pop
mov
mov
out
loop
xchg
fcompl
add
iret
mulb
daa
add
and
adc
dec
fwait
adc
je
loop
adcb
dec
xchg
push
in
js
fbld
pop
ja
and
insl
outsb
jecxz
mov
test
xchg
lods
xorb
clc
jbe
adc
dec
jo
dec
imul
push
rorl
xchg
mov
iret
hlt
dec
xlat
popf
dec
cmpsb
inc
sbb
inc
lods
sbb
mov
lahf
cmc
cmc
sbb
aas
lret
in
fcomip
lods
in
test
nop
andb
cmc
les
addr16
pop
loope
fwait
mov
push
std
push
push
rcl
inc
mov
mov
push
cmp
cmpsl
shr
mov
jnp
cltd
movb
aad
jge
movsb
cld
pushf
fildl
mov
mov
pop
lret
fcmovnb
out
sahf
cmpl
orb
incl
sub
mov
jne
in
cmp
dec
bound
jno
cld
mov
xchg
mov
jnp
outsl
push
xchg
mov
and
or
inc
daa
or
xchg
out
addl
push
cmpsl
mov
sub
dec
fwait
dec
je
push
cmp
iretw
xchg
icebp
ds
cmpsb
clc
inc
test
adc
add
jae
inc
jns
jle
xor
dec
dec
jl
shrl
add
call
push
add
cmpb
lahf
adc
cmpsl
fnclex
in
pop
loop
jg
push
out
int
push
fdivl
and
arpl
pop
lret
inc
outsl
in
and
ss
dec
call
addr16
enter
lahf
add
pushf
ret
mov
lock
adc
pop
push
imul
out
xchg
mov
jmp
lods
aam
data16
mov
jo
data16
outsl
add
loope
lret
int3
bound
notb
stos
dec
dec
daa
mov
sub
movsb
mov
mov
sbb
mov
rcl
push
and
push
fiaddl
dec
add
xchg
sbb
and
cmp
and
sub
adc
xchg
jae
xchg
cmp
insl
mov
or
adc
popf
add
imul
mov
cmpsl
adc
or
inc
dec
xchg
jl
and
mov
hlt
xor
fdivrl
mov
pop
ror
cmp
movsb
daa
mov
mov
fstps
aam
sub
popl
je
aaa
and
ljmp
ja
or
lret
mov
mov
rol
jns
lret
pop
ja
shll
dec
xchg
out
ret
jmp
push
repnz
imul
xchg
call
jnp
inc
pop
cmpb
jns
inc
mov
popf
mov
subl
cmp
mov
lret
aaa
mov
and
fisubs
adc
push
std
in
mov
nop
push
mov
idivl
xchg
or
ds
ret
sub
dec
daa
insl
in
imul
add
lods
daa
popf
inc
fsubrl
add
in
lret
test
rorl
sbb
mov
out
stc
mov
and
ljmp
jne
mov
test
mov
push
pop
out
sahf
or
outsb
mov
incb
dec
sub
mov
pop
scas
or
mov
int
push
mov
xorb
mov
pop
insl
pop
call
das
jnp
mov
pop
iret
out
test
lods
sbb
push
pusha
cli
shll
cld
in
lea
icebp
add
sub
pop
in
sahf
sub
and
mov
or
rorb
mov
jno
mov
mov
push
cld
aad
jl
push
xor
push
jo
cltd
mul
adc
xor
xor
jg
cmpb
sbb
or
mov
fiadds
cli
mov
pop
mov
xchg
or
pop
jno
sahf
fnstsw
add
in
js
or
pop
push
push
cmp
mov
push
std
ljmp
imulb
out
mov
push
rcl
cmp
cmc
cmp
mov
shlb
xchg
jmp
adc
in
ficoml
sub
fidivrl
cmp
lods
fldcw
leave
fisttpl
adc
jle
in
pop
repnz
enter
cli
mov
int
scas
xchg
mov
push
or
rolb
mov
add
cwtl
mov
xlat
push
mov
dec
test
cmp
sbb
fnstcw
pop
js
push
call
cmpsl
cmpsb
sbb
icebp
test
inc
cwtl
cli
push
movsl
cli
in
adc
lcall
sub
inc
jns
adc
je
cs
or
scas
stc
mov
mov
mul
inc
test
jns
outsl
sub
mov
ficompl
mov
call
mov
mov
sarl
and
outsb
sbb
push
test
xchg
int3
push
mov
insl
push
shlb
pop
fiaddl
cmp
jecxz
jecxz
sti
push
cmpsl
and
mov
orps
add
xchg
sti
scas
or
and
stos
push
gs
and
cwtl
push
and
sbb
test
pusha
push
aas
incb
lods
xor
or
and
and
insl
pop
imul
testl
lret
push
addr16
pop
xor
or
ljmp
out
cmp
sti
loop
faddl
outsl
pop
lcall
les
lds
lret
sub
xor
outsb
test
adc
mov
fdivp
inc
and
xchg
xchg
js
dec
iret
lret
push
jno
pop
call
int
add
jg
pushf
imul
cmpsb
insb
mov
mov
jecxz
lock
jge
test
nop
jp
ds
xchg
cld
stos
pop
cld
test
xchg
inc
lea
inc
jmp
popa
rcrb
rolb
mov
call
popa
fistpl
iret
fsubl
aas
call
cs
testb
mov
jp
ret
cmpsl
jb
daa
mov
lock
xor
cmpsb
dec
ljmp
mov
lret
sub
sub
dec
jmp
mov
ret
xchg
pop
rorb
sbb
jae
mov
insb
inc
lods
inc
repz
mov
mov
lret
andb
lret
mov
xor
mov
pop
push
xchg
dec
aas
xchg
jl
mov
cmp
push
push
les
mov
sub
stc
jo
sub
dec
xlat
jns
int
xor
fisubs
adc
sbb
lods
inc
cwtl
push
mov
fdivrl
in
pop
das
mov
mov
popf
popa
jnp
out
ret
push
jecxz
push
sbb
jp
aas
dec
cmpsl
mov
sub
inc
sbb
cmc
repnz
mov
push
mov
push
sarl
pop
dec
inc
and
and
add
data16
mov
mov
mov
pushf
inc
cwtl
les
loopne
mov
push
or
cmpsl
test
push
add
jns
adc
insl
or
adc
lea
cmp
dec
inc
xor
mov
pop
mov
fwait
xchg
inc
mov
push
sbb
pop
lock
loop
bound
push
lods
add
and
mov
jo
sti
test
dec
sub
in
sahf
push
jle
test
and
push
sbb
mov
mov
int3
inc
mov
in
push
inc
btc
add
inc
sub
das
adcl
sub
dec
sti
cmc
xlat
cmc
mov
mov
and
jge
rcl
sbb
dec
psrld
push
fisttpll
or
out
addb
or
fcomi
and
int
push
cli
cmp
dec
xchg
int
xchg
mov
lret
clc
sub
hlt
neg
addr16
mov
mov
and
sub
scas
xor
fisubl
pop
lret
movsb
mov
rolb
or
cmp
cs
mov
inc
dec
jp
inc
inc
sub
adc
adc
es
aam
xchg
dec
data16
inc
imulb
push
or
dec
sub
ds
mov
jp
jo
or
xor
insb
push
mov
jle
out
pop
xchg
push
outsl
jne
cs
fadd
cs
jl
pop
pop
cs
in
push
xchg
dec
mov
dec
and
int
scas
cmp
cmpsb
sbb
cltd
jo
push
cmp
repnz
sahf
mov
bnd
sbb
mov
mov
push
sbb
inc
push
clc
push
insl
push
test
mov
cmp
icebp
dec
ds
and
enter
inc
sub
imul
mov
imul
dec
xchg
adc
push
inc
pop
scas
mov
xchg
fidivl
inc
clc
sbb
adc
jno
idivb
sub
shrl
and
out
popf
ss
jb
and
xchg
mov
add
pop
mov
add
loopne
test
insl
cmc
test
pop
daa
xor
and
lea
ret
hlt
and
mov
imul
mov
pop
xor
xchg
sub
jge
sbb
mov
jl
jne
and
out
std
or
cmpsb
jmp
sti
inc
sahf
xor
and
dec
add
lds
jle
sbb
jge
ss
loopne
xchg
fs
std
cwtl
sbb
inc
push
cwtl
push
call
imul
jl
loope
sahf
imul
jo
leave
addl
mov
lahf
fstps
jb
movsb
std
or
push
lret
icebp
mov
bnd
cmp
push
push
pop
les
xor
mov
pop
out
pop
add
fs
adc
stc
scas
scas
jl
inc
push
lods
cmp
das
sub
xchg
shl
fdivrs
sbb
int
in
mov
fwait
pop
imulb
jmp
push
fwait
ret
push
imul
es
test
xchg
stc
cmpsb
add
lcall
xor
add
test
loopne
rolb
jg
fsubrs
or
xchg
xchg
jmp
adc
out
inc
das
int
ljmp
jo
std
sbb
fnstcw
inc
jb
mov
stos
sahf
aas
xchg
inc
stc
mov
mov
push
loope
shl
daa
adc
inc
pop
pop
fistpl
test
inc
out
fdivrl
imul
mov
fnstenv
cld
in
or
mov
rcrb
fildll
fidivl
jne
dec
fsubl
or
mov
inc
ret
jo
xchg
jl,pn
xor
sti
sbb
int
out
movsl
mov
dec
fistpl
sub
cmp
ret
adc
jge
cli
inc
fmuls
daa
ss
icebp
push
imul
addr16
popf
stos
lahf
jnp
or
movsb
sub
rcrb
dec
push
add
and
mov
pop
in
cmp
aaa
mov
push
iret
out
jmp
popa
outsb
add
sbb
pop
popa
xchg
xor
inc
decb
xlat
push
add
mov
leave
aas
daa
inc
aam
enter
push
mov
jmp
jecxz
add
dec
cli
or
test
in
xor
cmp
jo
les
xchg
sub
aam
scas
add
mov
xchg
aaa
adc
out
fwait
cmp
push
stos
mov
mov
xchg
scas
fwait
xchg
or
pop
mov
repnz
cld
push
xchg
cmp
dec
pop
movsl
mov
loop
jno
push
negl
imul
mov
or
xor
shll
movsb
sbb
xor
and
mov
repnz
iret
fsubrs
addl
mov
dec
push
mov
sbb
mov
jns
cmpsb
pop
xor
sti
rolb
in
pop
faddl
enter
mov
pop
insb
repnz
xchg
mov
loopne
imul
outsb
pop
xlat
inc
xor
sub
stc
out
fcmovnbe
xor
sub
jae
shll
or
push
add
leave
adc
cltd
imul
out
repnz
sub
xchg
fistl
test
fwait
test
add
jmp
jb
shll
mov
inc
mov
mov
sbb
lret
and
push
jnp
outsl
inc
pusha
fildll
jmp
add
out
cltd
and
or
cmp
lods
pop
mov
mov
sub
mov
push
jge
mov
pop
lret
aam
sbb
stc
fnsave
inc
leave
sahf
packsswb
fisubrl
add
xor
xchg
shl
jbe
lcall
loope
int
sub
sti
lock
mov
xor
inc
jg
scas
lahf
aad
xor
icebp
push
rcrl
jo
out
cwtl
arpl
xor
dec
decb
pop
je
sub
mov
push
mov
dec
iret
push
xchg
sbb
stc
negb
add
inc
sub
sub
or
adc
sbb
nop
iret
loope
jbe
xlat
jne
inc
adc
sbb
rcl
mov
xchg
push
jge
mov
nop
fptan
pop
mov
sbb
mov
xor
push
xchg
icebp
test
jnp
dec
jl
mov
sbb
push
push
push
cltd
call
mov
sbb
xor
add
sub
dec
xor
inc
push
jecxz
out
inc
pop
pmaxub
into
sub
adc
xchg
push
mov
outsl
cli
pusha
and
rorb
clc
push
es
gs
inc
pop
or
fldenv
push
cltd
les
insl
and
push
cmp
dec
daa
fucompp
cmpsl
sub
push
add
jb
cmp
mov
jge
mov
and
sbb
mov
jns
cmpsb
push
mov
loope
arpl
call
push
add
mov
insb
adc
scas
cmp
pushf
aam
push
pop
mov
sbb
icebp
jbe
xchg
jae
rcll
das
mov
dec
mov
gs
adc
adc
push
in
push
xlat
imul
inc
in
stos
add
lahf
pop
stos
shrb
mov
mov
fdivrl
imul
push
fwait
add
dec
mov
add
test
or
cwtl
pop
xchg
xchg
push
push
iret
sub
and
xchg
ljmp
adc
sahf
test
mov
addl
push
daa
es
js
or
inc
jno
js
int3
sub
imull
mov
push
lcall
fsubrl
add
stos
lea
push
leave
adc
ficoms
jp
add
inc
xchg
lcall
test
fsubrs
or
fs
jp
cmp
and
pop
iret
mov
push
inc
sub
cmp
lock
add
stos
push
inc
sub
decb
pop
cmp
push
daa
push
adc
leave
insl
mov
mov
test
xchg
add
xor
push
and
flds
out
addr16
push
in
mov
push
mov
mov
xor
mov
mov
dec
push
rcrl
cs
dec
jb
adc
lds
test
dec
testb
xchg
mov
xor
leave
mov
mov
inc
mov
xor
sahf
xor
sbb
loopne
push
lds
scas
in
aam
or
shrl
sarb
adc
cli
cmp
jbe
pop
int3
lods
mov
pop
cmp
push
enter
hlt
daa
inc
test
js
je
lahf
aam
andl
adc
add
cmpsb
and
dec
scas
scas
push
rcl
xchg
outsl
xor
fsubrs
xor
shrd
lea
and
xchg
stc
fistps
cmc
cmp
scas
pop
pop
lret
sbb
jg
outsl
rorb
mov
cltd
out
adcl
test
mov
xchg
sti
movsl
or
jge
fistl
inc
fdivp
outsl
inc
push
mov
xchg
ficoms
sub
inc
ss
std
mov
getsec
lret
jl
and
cmp
mov
rcll
fistl
push
lea
bound
pop
push
cmp
push
jmp
xor
push
mov
loop
cmpsl
pop
test
mov
and
xlat
arpl
in
mov
fs
push
xor
imul
loop
or
pop
mov
popf
inc
mov
pop
push
pop
leave
lock
loope
inc
adcb
pop
inc
repz
inc
or
popf
dec
ljmp
mov
mov
jl
jmp
mov
std
cmpsl
jge
add
lcall
or
hlt
inc
aam
cmpsl
fwait
push
repnz
xor
jne
stos
sti
mov
je
cmp
ds
test
ficomps
cmp
dec
lahf
inc
fwait
loope
or
lock
pop
dec
lods
popf
in
xchg
jb
cmc
pop
jp
jnp
sub
mov
adc
push
sbb
mov
fbld
jns
dec
sbb
and
stos
jne
push
rcrb
pop
and
cmp
jnp
or
sbb
addr16
out
fwait
add
mov
push
xchg
jle
scas
pop
aam
lods
imul
test
mov
lahf
loop
and
or
shr
das
jns
xor
or
add
sbb
pop
je
jge
scas
cli
jno
add
pop
or
popf
xor
mov
jae
repnz
mov
cmc
xchg
mov
adc
pop
cwtl
and
adc
repnz
je
push
repnz
loope
sti
insl
out
jo
push
es
inc
rorl
adcl
xor
add
fwait
in
outsl
test
sbb
push
cs
sbb
mov
mov
pop
jne
enter
cli
push
push
adc
clc
sub
inc
sahf
outsl
pop
jl
mov
or
jmp
sub
xchg
cmp
pop
pop
push
jecxz
pop
cmp
inc
inc
das
mov
out
adc
xor
push
sub
fstpl
push
cmp
pop
sar
sahf
jmp
call
or
mov
mov
push
andl
ja
xor
dec
lret
cmc
lcall
and
fcompl
test
mov
push
int
stos
sti
ret
inc
ds
jb
mov
push
loope
cmp
inc
test
and
out
addr16
mov
nop
and
shll
pop
fucomp
inc
ret
pop
push
fildll
inc
push
sbb
ficoms
add
adc
pop
mov
std
repnz
pop
ret
or
mov
jnp
pop
cmpsl
js
clc
addr16
loopne
iret
test
js
jmp
stos
pop
incl
dec
fildl
xchg
inc
mov
adc
push
das
imul
cli
std
sbb
mov
inc
add
insb
pop
mov
loop
inc
inc
inc
jno
loope
push
loopne
scas
jns
repz
test
sarb
aaa
clc
cmp
loope
mov
pop
mov
js
cltd
xchg
mov
cmp
shrb
dec
rcpps
incl
cmpl
xlat
jnp
loop
into
lret
sub
fs
jno
sub
pop
jle
adc
inc
inc
popa
mov
push
jp
insl
pop
jne
test
sub
rcrb
adc
into
lahf
dec
xchg
rcll
mov
mov
xor
jmp
xlat
inc
cld
mov
and
sbb
mov
cmp
data16
adc
repnz
mov
push
adc
iret
jbe
pop
test
xchg
cmpsl
dec
rcr
inc
or
gs
mov
mov
dec
push
mov
je
jae
insb
pop
fwait
pushf
mov
out
jnp
fincstp
inc
lcall
insb
push
pop
cmpsl
notb
arpl
mov
push
push
push
notb
adc
and
shr
jae
sarb
not
mov
and
sbb
adc
repz
sbb
pop
in
mov
dec
inc
xchg
movsl
pop
lea
and
mov
xchg
mov
test
jns
jg
out
das
dec
mov
lcall
sub
sub
push
popf
daa
mov
out
ret
loop
lret
or
push
push
sub
sbb
cwtl
mov
pop
add
pop
nop
mov
xchg
push
int3
mov
cmp
mov
xlat
pop
push
push
pop
lret
cld
push
xor
inc
in
xor
pushf
ja
inc
jo
ret
jno
outsb
xchg
xchg
inc
push
mov
xchg
jecxz
sahf
mov
adc
pop
aam
lcall
js
and
es
call
int
push
daa
mov
pop
pushf
outsl
inc
data16
and
cmp
jns
pop
xchg
aam
jno
xchg
and
jo
addr16
xchg
adc
scas
and
rorb
ret
mov
cmp
cmp
addr16
inc
das
jno
and
adc
mov
addr16
movsl
lods
lock
and
xchg
mov
dec
sarl
lods
dec
adc
iret
cmp
or
pushf
repnz
loopne
pushl
aaa
mov
outsb
mov
fcmove
push
push
inc
adc
cmp
je
push
pop
enter
ret
addr16
daa
jle
push
jecxz
rcrl
das
sub
adc
sbb
jl
jg
leave
ds
aam
cmp
mov
test
shlb
push
pushf
xor
mov
fidivl
mov
cmpsl
or
jl
out
sbb
sub
hlt
pop
dec
lds
mov
negb
push
push
out
xor
pop
or
std
adc
lret
add
lahf
mov
insb
addr16
in
leave
add
push
popa
xchg
fidivs
sub
outsb
jl
xor
sbb
or
adc
call
aas
movups
test
mov
lcall
lret
dec
les
cmp
pop
xor
jp
cmp
xchg
xchg
test
enter
cmp
dec
ljmp
push
fisttpll
or
xchg
daa
lods
jg
push
shr
push
adc
cli
fsubrl
out
push
fwait
adc
push
push
jge
push
js
xor
cmc
lret
inc
xchg
dec
mov
mov
adc
cmc
ret
cld
xlat
jmp
insb
or
in
mov
cli
or
gs
sub
mov
xor
jo
inc
xor
jne
movsl
push
mov
popf
pop
outsl
mov
xchg
push
or
repz
into
iret
pop
sbb
sti
ret
jl
cmp
jge
or
insb
adc
addl
shl
dec
retw
inc
mov
pop
fcmovu
into
and
fcomip
in
leave
xchg
filds
and
mov
pop
push
mov
jle
in
mov
sbb
xchg
scas
fadd
cmpsl
mov
lahf
cltd
sbb
inc
push
and
dec
jne
aaa
mov
adc
push
imul
mov
inc
lods
cmpl
fdivrp
cli
fs
pop
xor
or
cmp
push
xchg
or
cmpsb
sub
js
mov
mov
dec
push
pop
insl
push
add
mov
repz
or
xchg
and
mov
dec
pop
inc
frstor
rcl
jnp
sub
scas
sbb
repnz
mov
inc
mov
jmp
out
push
stc
mov
loopne
mov
in
push
lcall
jno
mov
pop
aam
aas
das
out
dec
orl
xchg
sub
int
add
lock
fs
popa
stos
ljmp
test
dec
pop
cld
mov
ret
dec
sbb
push
movsb
mov
inc
inc
or
dec
inc
fs
add
dec
roll
and
mov
xchg
sahf
xchg
daa
push
or
sbb
cmp
push
mov
xlat
push
inc
jo
sbbb
ljmp
mov
xchg
xor
adc
cwtl
test
xchg
rcr
sub
cmp
sbb
in
mov
outsl
mov
clc
repz
sub
jo
sbb
stc
inc
add
sub
ror
jl
cmp
aam
push
and
inc
mov
cs
jbe
in
ljmp
in
jge
in
mov
mov
enter
mov
jnp
jl
cltd
in
add
xchg
jo
push
or
jecxz
adc
jecxz
decl
cmp
pop
daa
dec
or
das
out
pop
sbb
mov
lcall
inc
push
dec
fwait
lcall
imul
sbb
loopne
in
and
push
lock
int3
je
rcll
xlat
clc
mov
lds
cli
mov
icebp
cmpl
mov
test
inc
sti
out
dec
cmc
and
mov
inc
xor
push
test
mov
add
cmpb
xor
mov
fbld
or
sbbb
or
ljmp
loop,pt
and
div
pop
leave
mov
sub
ds
rclw
sub
loop
cwtl
mov
add
pop
testb
iret
dec
push
mov
hlt
hlt
out
inc
inc
mov
or
popf
adc
sahf
lods
in
push
mov
add
dec
mov
push
or
mov
fwait
or
call
inc
fsubrs
pop
pop
cli
cmpsb
loope
loop
sbb
aam
jbe
loopne
xlat
push
cltd
imul
inc
stos
or
into
mov
add
xor
sbb
and
pop
or
imul
lcall
add
push
ja
adc
pushf
fsubr
clc
aaa
sti
ss
jg
ret
rcrb
mov
pop
cmp
fdivrs
sbb
lret
and
cmp
sub
loop
jnp
add
sbb
aad
jle
mov
dec
or
mov
loop
scas
sub
jno
mov
jnp
out
lahf
ds
or
shrl
scas
leave
sbb
push
push
jl
aaa
scas
mov
adc
xor
pop
inc
xor
iret
in
sub
and
xchg
mov
mov
shlb
xchg
inc
daa
mov
pop
and
sub
popa
pop
popa
mov
mov
xchg
dec
psllq
lods
inc
and
std
add
imul
cmp
aaa
push
stos
sbb
cmp
aam
ss
xor
in
fstpl
ss
mov
mov
inc
mov
mov
lahf
fisttpl
adc
push
push
jo
cmp
imul
lock
scas
sub
dec
jecxz
dec
adc
lahf
pop
cld
mov
pop
jp
inc
xor
loope
mov
call
das
xor
sbb
popa
mov
cmp
adc
test
sub
jns
inc
cs
test
lods
push
repz
or
leave
nop
mov
or
push
inc
or
test
inc
in
aad
xchg
das
cwtl
les
icebp
fsts
pushf
jge
mov
clc
sub
lret
movsb
dec
imull
push
pop
dec
addl
arpl
push
movsb
repnz
add
mov
pop
scas
inc
push
rcl
xor
push
iret
jns
iret
int3
adc
sbb
hlt
shll
cmp
sbb
sbb
pop
outsb
cld
loop
leave
scas
cs
sub
aad
cmpsb
orb
xlat
mov
add
jg
sub
xchg
pop
test
pop
daa
stos
xchg
fldt
and
shll
or
cmp
js
xor
xor
mov
es
xor
fadds
sti
sbb
enter
inc
daa
mov
push
and
push
adc
mov
cli
mov
std
cmp
popa
sahf
adc
je
fwait
inc
dec
shll
mov
push
and
cmc
push
mov
add
sub
std
inc
movsl
jmp
xchg
fadd
test
add
addr16
adc
sbb
dec
mov
push
in
or
xor
lea
pop
jmp
mov
rolb
scas
jmp
repnz
inc
dec
mov
mov
pop
sbbb
aam
jb
and
push
sbb
dec
popa
xlat
cpuid
addl
movb
lds
mov
push
xor
push
adc
fmull
std
jmp
cmp
sub
push
fwait
sbb
int
mov
xchg
xchg
rorl
jo
dec
fistpll
mov
sub
jbe
xor
mov
jmp
jnp
lock
mov
jo
sbbb
pop
leave
fs
jae
xchg
enter
orl
lahf
lds
jae
add
pop
adc
xor
fsubrl
cmpl
repz
mov
pop
sub
repnz
inc
jnp
fdivl
add
ret
mov
mov
shl
add
mov
pop
and
sub
dec
scas
push
sub
mov
xchg
andb
xchg
and
movsb
inc
movsl
add
fistpll
daa
sbb
push
repnz
mov
cmpsl
sbb
dec
adc
lcall
mov
das
jl
cmp
and
imul
jb
xchg
mov
xchg
or
and
jne
aam
push
or
cmp
ret
testl
in
xchg
cmp
add
or
pop
pop
out
cmpsl
pop
mov
sbb
sahf
inc
loop
sub
rcll
nop
loope
dec
test
cmc
add
pop
mov
roll
fst
xor
stos
icebp
pop
xor
push
push
rcrb
test
fcmovbe
fcoml
mov
jl
push
bound
add
mov
lcall
fildl
jne
call
stos
sbb
int
and
or
mov
stc
push
fwait
inc
push
jae
movsb
sar
sbb
ljmp
jmp
jl
fdivrs
sti
xchg
xor
xchg
test
pushf
jg
xchg
fwait
loop
push
loop
mov
push
mov
mov
pop
sub
testb
dec
das
rorl
xchg
xor
cmp
movsl
xchg
addr16
jecxz
cmpl
pop
push
sbb
sub
ffreep
adc
mov
sbb
stos
xor
fsub
pop
cli
jae
icebp
xor
adcb
pop
mov
int3
mov
iret
jecxz
mulb
cmpsl
xor
nop
sbb
in
and
lret
outsl
aad
jg
add
push
fs
out
sub
push
cmp
mov
sbb
idivl
xor
push
adc
enter
mov
mov
lods
dec
fsubrl
scas
jmp
cld
ljmp
insl
adc
sub
mov
test
fisubrl
xchg
imul
test
xor
jne
and
xchg
pop
jmp
imul
imul
jbe
add
leave
mov
loope
or
and
pop
out
movsb
push
mov
cmp
mov
repz
jle
shlb
dec
cmp
lret
and
adc
xor
inc
in
pop
mov
mov
push
cltd
and
stos
sub
xchg
pop
fdiv
int3
negl
lret
pop
and
mov
pop
push
cwtl
jb
faddp
test
xor
lods
sbb
movsl
sti
sub
leave
dec
fisubs
pop
stos
jl
and
mov
xchg
je
imul
mov
push
adc
lea
fdivrp
xorb
sahf
mov
mov
out
lahf
daa
cli
aaa
inc
cmp
lea
pop
aad
lahf
or
xor
adc
adc
and
icebp
dec
mov
sti
pusha
jle
mov
cmp
ficoml
lret
jecxz
sarb
js
adc
mov
or
mov
lret
mov
mov
lods
inc
rcll
out
inc
jp
mov
pop
test
mov
cli
enter
testl
fstps
dec
frstor
jb
std
jnp
inc
ljmp
ret
pop
imul
mov
ja
add
mov
dec
loope
add
pop
sbb
mov
mov
xchg
add
ss
scas
and
push
jnp
ret
add
outsb
cld
subl
and
and
sbb
inc
jno
aas
or
sbb
xor
push
cwtl
jbe
vxorps
lods
xor
inc
fcom
sub
rcrl
out
xchg
test
add
bound
icebp
pop
fildll
daa
lods
shr
and
and
pop
ja
je
out
sarl
dec
cmp
cmp
jg
xchg
lret
les
dec
enter
push
aam
mov
loop
out
inc
les
movsl
mov
int3
out
inc
xchg
mov
push
and
insb
shlb
popa
leave
in
into
inc
repz
and
jmp
cmp
pusha
imul
cli
mov
je
jns
dec
pop
cld
push
jg
jl
pop
dec
iret
and
pop
int
mov
inc
jecxz
loope
sub
pop
insb
out
and
orb
xor
xchg
fs
jno
stos
clc
xor
out
loopne
mov
aam
mov
stos
pop
lods
xor
jno
xor
sbb
fnsave
push
dec
aaa
sub
aad
and
lods
lods
outsb
xchg
push
into
mov
fcoml
loope
add
loopne
andb
and
xchg
pop
xchg
push
in
pop
sbb
xchg
ja
mov
in
cltd
inc
popf
ja
insb
std
mov
popa
shlb
mov
mov
fcmovu
ret
in
lret
rorb
mov
pop
mov
loop
imul
pop
mov
loop
xchg
fisttps
dec
test
inc
mov
xchg
push
inc
inc
sti
pusha
ficompl
ds
fdivrs
dec
sub
push
xchg
jmp
sbb
loopne
popf
add
xor
and
sbb
mov
cld
mov
dec
xchg
xor
aas
cmp
fisttpl
int3
call
push
jbe
adc
popf
xor
sbb
cmp
mov
data16
mov
iret
inc
popa
mov
add
cmp
into
loopne
xor
cmpsl
add
stos
push
xlat
out
lods
mov
or
pushf
int3
fwait
sub
outsb
mov
xchg
jnp
jmp
add
repnz
xor
mov
mov
mov
mov
or
pop
lret
lret
in
push
lret
ret
mov
scas
popf
das
les
mov
add
sub
stos
dec
mov
jp
popa
sub
inc
sub
scas
cmp
fildll
repnz
sbb
aas
mov
fucom
sub
xchg
jmp
push
jnp
and
das
enter
dec
hlt
out
inc
xor
jns
jge
add
imul
rclb
push
js
scas
inc
mov
call
push
aad
sarl
cmc
test
and
out
stos
fucomip
nop
cmp
out
cmpsb
push
xor
xchg
sub
sub
jg
jae
int
jno
adc
clc
xchg
rcl
fisttpll
imul
and
cmp
mov
popf
or
mov
push
in
mov
outsl
ss
and
aaa
test
dec
arpl
mov
jae
xchg
xchg
mov
scas
sub
or
stos
ss
jb
adc
jl
inc
push
insb
lods
ja
xlat
leave
mov
mov
std
imul
push
jg
jae
jp
mov
push
or
xchg
mov
jle,pt
repz
mov
mov
sub
mov
mov
test
rclb
push
sbb
mov
shr
xor
js
or
aaa
mov
pop
out
ljmp
stc
push
movsl
push
pop
popf
lods
arpl
int3
mov
xchg
push
lds
sub
dec
jb
xchg
shrl
xor
xchg
rorb
loope
pusha
pushf
int
fdivrs
jecxz
and
cmpl
cld
adc
push
mov
mov
push
pop
test
adc
fiadds
jns
stc
loopne
scas
cli
mov
repnz
mov
aam
sub
icebp
movsl
fnstsw
out
dec
out
repnz
jnp
lcall
ljmp
push
pcmpeqb
ret
inc
addr16
clc
fucom
mov
cmp
fwait
mov
aaa
loope
dec
xchg
addl
out
xchg
xlat
insb
les
loope
mov
lea
xchg
mov
cwtl
fimull
das
shr
and
adc
sub
repz
cmpsb
mov
mov
mov
or
push
test
movsl
fdivrl
push
ljmp
and
inc
lahf
and
aas
mov
aam
out
cli
xchg
scas
adc
or
mull
out
std
int3
out
mov
sub
pusha
sub
xchg
or
push
dec
test
sbb
cmp
test
add
add
xor
cltd
aas
sub
inc
cltd
sbb
sub
pop
adc
mov
cmp
mov
jb
mov
pop
xchg
jecxz
xor
jo
cmp
pop
aas
add
xor
inc
pop
or
cmpsb
or
scas
push
lods
sbb
aam
push
cmp
mov
and
lea
in
mov
and
mov
mov
daa
jnp,pn
dec
aas
push
ljmp
pop
push
hlt
push
bound
sahf
scas
shlb
testl
xchg
repnz
rorb
xchg
mov
clc
xchg
mov
mov
mov
mov
jmp
push
in
inc
or
mov
nop
jl
adc
out
imul
mov
push
pop
sbb
adc
adc
dec
das
add
mov
inc
push
inc
iret
aaa
movsb
bound
sub
cmc
notl
pop
xor
sbb
out
and
sub
loopne
das
out
xor
and
ljmp
shll
or
clc
gs
ret
sbb
jbe
outsl
jo
stos
sbbb
inc
adcl
lock
ja
pop
cmpsl
mov
xchg
dec
ret
cli
xlat
dec
jns
repz
cld
fs
test
lret
and
clc
enter
mov
addl
arpl
cmp
icebp
pop
lahf
pop
xchg
pushf
lods
mov
cmp
sbb
scas
xchg
sarl
in
xchg
cmp
popf
stos
or
push
aad
or
xlat
xchg
mov
ret
jnp
adc
push
loop
xchg
popa
push
sbb
cli
add
mov
cmpsb
mov
push
pop
push
lahf
pop
loop
mov
adc
xor
inc
adc
aad
sub
jae
or
mov
nop
jb
outsb
orb
shll
and
mov
test
inc
fsubl
push
inc
mov
clc
mov
pop
out
fcoms
jae
into
mov
imul
inc
or
or
inc
jne
dec
jo
insl
xor
mov
imul
cmpb
mov
cmp
aas
fcoml
cwtl
imul
mov
mov
add
call
jmp
daa
mov
or
dec
push
imull
imul
sbb
push
inc
lock
or
lcall
fcomps
mov
mov
fnstenv
sbb
les
enter
push
xor
adc
dec
pop
popf
pop
cwtl
push
pushl
andl
adc
shll
push
pop
push
xchg
mov
inc
addb
mov
fnsave
and
fmul
push
je
jl
adc
mov
lret
or
data16
fistpll
adc
fistl
and
jbe
mov
leave
xchg
push
mov
cli
or
popf
stos
mov
std
sti
test
in
or
mov
mov
pushf
dec
mov
in
clc
dec
ret
inc
int
sbb
lods
loopne
mov
int
cs
sbb
mov
sbb
push
gs
xor
jo
mov
sbb
mov
jg
aam
ja
push
les
sbb
daa
js
fisubrl
lock
cmc
loop
ficomps
sarb
movsl
outsl
push
aam
scas
rolb
bound
int
pushf
mov
insl
rorb
test
sub
ficomps
out
repz
aad
inc
jbe
and
leave
out
out
out
loope
push
ss
adc
inc
ja
sub
dec
and
cmpsb
mov
push
push
ja
sub
pop
push
xchg
pop
in
inc
adc
pop
bnd
int3
scas
mov
push
rorb
push
cs
sub
cwtl
inc
xor
fs
xor
xorb
pop
xchg
push
inc
cmp
pop
mov
sub
pushf
pop
call
mov
popf
aad
mov
inc
lret
push
xchg
add
jl
mov
add
test
test
jg
push
push
lahf
adc
gs
mov
and
pop
into
or
movl
jns
cli
loope
rcrb
inc
mov
lcall
mov
scas
mov
lahf
scas
in
mov
push
xor
test
fwait
and
pop
pusha
mov
pop
sbbb
xor
stos
adc
mulb
mov
push
jns
pop
movb
jnp
xor
pop
mov
addr16
push
mov
loopne
lock
mov
cmp
scas
insl
pop
push
sahf
pop
mov
xchg
data16
jne
push
outsl
inc
cmp
sarb
out
jno
push
lea
jns
mov
adc
shl
dec
pop
sbb
sbb
lret
inc
les
inc
pop
inc
out
cltd
dec
push
pusha
cmp
jb
xor
add
adcl
lea
push
andl
mov
cmp
ret
insl
xor
lcall
jecxz
push
push
jne
leave
test
sub
adc
or
jle
stos
jp
lret
popf
cld
push
jl
mov
mov
add
push
aam
xchg
clc
out
pop
jno
pop
sub
sub
mov
mov
outsl
sbb
int
sub
jbe
mov
aad
int3
mov
mov
and
adc
aaa
jle
sbb
es
lds
dec
shrl
inc
add
loopne
or
cltd
stos
mov
and
sub
push
and
enter
je
and
dec
and
mov
add
fs
stos
ds
je
cmc
test
lret
mov
push
inc
loopne
aad
adc
inc
sub
loope
icebp
ljmp
notb
leave
in
mov
movsl
pushf
mov
sub
mov
jne
push
mull
shll
ss
out
dec
dec
add
mov
or
clc
mov
lods
dec
loop
stos
mov
adc
mov
repz
out
icebp
push
bnd
std
in
sub
test
xchg
dec
pop
pop
mov
ret
jmp
add
sbb
xchg
fistps
mov
jl
ret
mov
sub
mov
xor
adc
pop
lahf
insb
lea
out
cmp
jno
jnp
jae
or
gs
inc
inc
mov
push
mov
data16
pop
xlat
pop
jbe
jns
negl
mov
and
inc
cld
rcrl
es
or
lock
enter
repnz
and
orl
sub
cmpsb
mov
jmp
cmp
mov
pop
push
pop
sbb
ficoml
cmpsl
jg
sbb
jl
ret
arpl
xchg
push
cwtl
jle
and
inc
xor
sub
mov
pop
aam
adc
push
push
je
jp
add
je
mov
stos
stos
cwtl
jge
pop
adc
jmp
inc
insb
push
adc
sti
cmp
mov
lret
jecxz
enter
adc
inc
loop
cmp
sbb
jo
test
mov
stos
cmp
gs
mov
subl
divb
mov
testl
inc
jnp
cltd
sahf
jno
add
icebp
cmpsl
mov
mov
rcrb
jnp
rorb
jno
mov
xor
loope
in
and
out
push
aas
aas
dec
jbe
push
cmp
and
filds
cmpsl
and
xchg
jge
push
dec
dec
sbb
data16
xchg
stos
in
pop
inc
gs
xor
mov
mov
aad
scas
lock
jae
push
hlt
jecxz
popl
mov
sub
push
add
sti
mov
inc
add
and
stos
fidivrl
and
add
popa
push
sbb
out
aas
imulb
xchg
jecxz
xchg
mov
dec
lock
jmp
push
push
fwait
mov
mov
jns
dec
push
pop
dec
jmp
js
lret
leave
stos
inc
push
inc
enter
mov
mov
mov
and
add
pop
or
dec
les
dec
sub
inc
test
sarl
xor
pop
dec
mov
cmp
outsl
int3
pop
pusha
and
hlt
mov
dec
fiaddl
popf
sub
xor
sub
pop
ret
imull
mov
sti
dec
int3
sarl
outsb
divb
gs
cmp
fdivrs
outsb
popf
scas
shrl
cmp
out
lret
xchg
imul
lods
test
pusha
out
ret
jp
ds
fdivrl
jae
loope
andb
xorb
jge
repz
imul
jno
and
mov
sbb
ja
cmp
fnstcw
insb
mov
test
lret
sti
out
xor
mov
flds
sbb
xorb
fdiv
push
lahf
daa
jp
pop
cs
pop
add
es
mov
cltd
lods
mov
cmpsb
dec
cmpsb
mov
mov
clc
imul
inc
sub
ret
jno
lds
pusha
xchg
movsl
leave
add
repnz
out
push
inc
insb
jns
pop
addr16
nop
jg
xchg
imul
dec
xchg
in
sbb
dec
aam
cli
xchg
xor
int
push
popa
jo
aam
xlat
fs
and
xor
cmp
and
subl
jmp
jae
jg
jae
insl
pop
cmp
xor
xor
push
jbe
out
int3
cmpsb
sbb
in
repnz
mov
sbb
ja
bound
jnp
fidivl
in
sub
aad
push
push
adc
xorl
in
lret
push
arpl
xchg
cmp
cmpsb
jl
test
insl
addr16
sbb
and
add
cwtl
fldenv
fnsave
push
mov
push
mov
testl
in
pop
stc
inc
pop
mov
into
jbe
mov
mov
push
test
sub
jb
movsl
clc
movsb
sub
shll
jbe
jnp
xor
push
ret
cmp
inc
ror
shlb
mov
pop
fcomip
push
sub
add
cwtl
mov
inc
sub
adc
mov
cwtl
daa
dec
sbbb
cli
fisubl
push
cmp
into
xchg
sahf
lret
cwtl
cmp
mov
mov
out
out
scas
ss
dec
sbb
lret
adc
push
into
movsl
pop
scas
pop
inc
movsb
fdiv
jno
adc
fs
jmp
lcall
int
fcoml
call
mov
cmpsb
xchg
add
pop
hlt
adc
movsl
jmp
xor
cmpsl
idivb
fs
pop
mov
jnp
jg
cltd
lock
push
or
lods
pop
lahf
dec
cld
pop
or
mov
stc
sub
sub
dec
sub
popf
add
js
mov
mov
cli
jno
pop
hlt
out
shrb
clc
mov
sub
or
add
xor
repnz
xchg
push
sti
call
imul
or
dec
sbb
ljmp
sbb
shl
inc
pusha
xlat
dec
sub
xor
test
xlat
ret
sbb
outsl
fsubs
cli
dec
mov
cvtpi2ps
add
inc
and
cs
pop
push
fisttps
testl
xchg
sub
and
or
inc
add
fdivrl
xchg
xchg
cmp
int
shll
mov
cmp
mov
inc
sbb
jle
sbbl
mov
sbb
or
jge
stc
fnstenv
or
mov
ret
cmp
pop
jno
mov
aam
imul
out
ljmp
imul
dec
cmp
insb
push
xchg
imul
addl
dec
ljmp
gs
sbb
pusha
xchg
ja
clc
enter
test
xchg
test
cwtl
cld
pop
inc
fbld
mov
sbb
cmc
outsl
mov
sbb
mov
add
ja
popa
sti
inc
sub
jp
and
mov
fld
push
ret
int
sarb
xor
mov
pop
mov
cmp
loop
cmp
adc
lcall
ret
ret
scas
xor
push
clc
sbb
adc
pop
je
out
inc
pop
mov
out
mov
test
cwtl
lods
mov
call
jb
dec
mov
int
leave
lds
ret
addr16
mov
xor
clc
jbe
int3
out
jmp
je
or
test
jae
ss
mov
rcl
pop
xchg
mov
cmp
xchg
xchg
jbe
jb
add
insb
shlb
inc
mov
push
inc
jmp
outsl
sahf
fidivs
sbb
pop
in
sti
xchg
mov
js
sahf
dec
adc
dec
xchg
lret
sbb
test
sbb
inc
inc
mov
jns
sub
cmp
xor
adc
mov
jne
push
lock
int
jne
arpl
insl
push
add
movsl
je
mov
addb
pop
jp
xlat
mov
cltd
and
dec
into
adc
fwait
add
sub
rcll
das
xchg
pop
xchg
cltd
movsl
sub
cli
add
ljmp
and
out
sub
or
dec
cmpsb
cmpsl
cwtl
cld
cmpsb
notl
pop
stos
xchg
add
pop
aas
in
aaa
jmp
mov
jle
lret
push
xor
ss
mov
add
je
das
sbb
out
ljmp
dec
pop
xor
mov
cmp
push
mov
repz
push
movsl
inc
mov
mov
push
xchg
shl
sti
mov
mov
aaa
mov
dec
mov
iret
fs
dec
mov
insb
cltd
mov
jns
mov
push
or
rcrl
push
xlat
xchg
jecxz
ficoml
pop
dec
je,pn
ljmp
pop
adcb
into
xor
lret
repz
rol
cmp
int3
jge
sub
aas
adc
fisttpll
xchg
sbb
mov
leave
add
cmp
cli
and
arpl
dec
popa
push
sub
pop
add
in
jbe
lret
arpl
adc
sub
inc
lret
adc
shll
mov
aad
cmpsb
or
and
cmp
xor
xchg
push
sbb
mov
xchg
push
add
nop
pusha
sbb
mov
data16
data16
das
gs
das
mov
mov
mov
or
and
movsl
mov
and
sub
loop
aad
sub
fs
addr16
lock
mov
xor
cmpsb
nop
ret
out
adc
mov
data16
mov
ds
adc
inc
push
dec
adc
adc
mov
fmull
mov
xor
shlb
pop
movsb
add
jo
add
in
ja
and
dec
mov
in
lcall
mov
in
bound
loope
mov
mov
loopne
cmpb
movsl
je
hlt
popf
push
push
pusha
add
stc
or
dec
je
mov
and
es
inc
sbb
xor
stc
sub
lret
feni(8087
push
stos
pop
push
test
fisttpl
aas
mov
das
arpl
push
imul
sbb
fdivrl
imul
in
inc
stos
fnstsw
jae
jno
sbb
cmp
ja
cmpsb
sub
out
add
cmp
das
add
out
pop
cmp
mov
xchg
and
mov
pop
stc
not
jo
popf
lods
loop
int3
call
and
pop
inc
das
mov
xchg
aas
rcrl
xchg
mov
dec
mov
jmp
dec
lret
dec
in
cmp
pop
stc
or
mov
pop
nop
dec
scas
push
scas
mov
arpl
sbb
cmp
sub
pop
mov
inc
daa
pop
out
fucomp
cmpsb
in
repnz
leave
pop
xor
lea
and
jge
pop
loopne
inc
in
xlat
and
dec
test
hlt
xchg
cmp
lea
mov
lods
aam
xor
mov
icebp
ljmp
hlt
js
sub
pop
jnp
add
add
ds
js
dec
pop
mov
xor
pop
xor
andl
mov
std
and
test
dec
sarb
add
sub
lds
movl
sbb
sub
scas
stos
jno
mov
push
insb
mov
psrlw
push
test
pop
or
mov
andb
js
xchg
push
cmpsb
sahf
mov
lahf
lcall
dec
sbb
fldln2
lsl
cmp
sti
std
mov
sub
cmp
movl
pop
clc
rcr
inc
out
inc
test
or
sti
aad
and
jle
xlat
mov
call
jb
psrld
push
daa
sar
std
ret
push
out
stos
data16
mov
test
pop
cmc
mov
jmp
les
mov
push
pop
js
xchg
sbb
sbb
cmp
xor
test
inc
jb
xchg
mov
pop
popa
xchg
push
jmp
fbld
xor
pop
push
pop
cmc
les
enter
ficompl
popf
jmp
sub
push
dec
repz
xchg
and
jl
xor
sub
pop
cmp
movsl
loopne
push
and
inc
add
push
pushl
sahf
outsl
cmp
sbb
cmc
xor
movsb
sub
push
shll
and
outsb
jo
cmp
inc
std
gs
dec
movsl
gs
mov
or
mov
or
sbb
xchg
dec
cmp
sbb
pop
cmpsl
int3
int3
mov
jmp
call
adc
xor
loop
sbb
inc
add
mov
dec
js
lea
sbb
fxch
aam
cli
popf
daa
mov
gs
dec
push
lods
add
lock
mov
sbb
or
inc
jns
clc
sahf
xchg
pxor
sbb
jo
dec
and
ret
xchg
jae
fsubp
xchg
pop
jge
mov
push
aas
dec
xor
or
insl
test
mov
stos
pushl
sahf
mov
push
sub
hlt
dec
adc
ja
sub
aas
jne
movsl
cmp
fwait
scas
fwait
xchg
adc
push
or
mov
in
fwait
std
insl
xor
sbb
aam
add
loopne
pop
stos
ret
loopne
clc
inc
pop
adc
mov
dec
cmpsb
adc
out
mov
pop
jmp
fwait
adc
mov
xchg
mov
cmp
pop
scas
test
or
aaa
or
int
mov
sub
dec
sbb
cld
add
jp
xchg
adc
push
fwait
test
cmp
dec
mov
cmp
ret
pop
out
fistpl
into
cmpsb
repnz
lret
or
addr16
test
push
mov
xchg
inc
test
addr16
sbb
pop
dec
dec
in
mov
in
leave
inc
imul
popf
jno
daa
outsl
shrb
insl
clc
pop
cmc
jo
shlb
gs
mov
in
mov
rorl
cld
dec
pop
adc
int
push
and
or
push
movb
adc
and
cltd
xor
andb
and
mov
cli
dec
pop
shll
fs
xchg
cli
add
mov
jbe
iret
and
pop
imull
ss
xchg
movsl
and
cmp
and
cmp
outsb
shr
lahf
fildl
shr
add
pop
mov
add
cmp
push
fbld
jb
mov
call
cmpsl
mov
loope
sbb
stos
jae
and
xchg
xor
inc
ret
ss
or
daa
dec
push
inc
rcr
fiaddl
cmp
rol
xchg
xchg
add
out
push
fscale
jle
xchg
ss
mov
cmp
inc
fs
xchg
mov
roll
sarl
jbe
inc
repnz
cs
mov
sub
sahf
jge
mov
sbb
adc
sub
mov
mov
mov
rcrb
and
mov
fbstp
jecxz
les
mov
daa
sahf
push
cmc
sub
lods
fistl
addr16
aas
pop
and
push
cmpsb
mov
or
pop
cmp
pushf
ret
clc
stc
mov
inc
jbe
and
movsb
cmp
xchg
stos
xorb
es
add
mov
mov
shll
adc
jp
fs
fs
fists
lea
add
sub
sbb
into
pop
push
jge
xor
rcll
xor
sbb
incb
adc
dec
mov
cmpsb
mov
lahf
mov
jge
sbb
push
push
mov
dec
sub
and
sub
mov
cld
jns
insl
fbld
inc
jne
movsb
cmp
jge
jmp
jecxz
vrcpps
cmp
sbb
out
arpl
cli
arpl
mov
incl
push
call
cld
mov
mov
into
test
push
je
pop
mov
call
dec
imul
mov
dec
and
cmp
mov
mov
xchg
call
stc
fwait
push
add
xlat
repnz
int3
fwait
cmp
and
or
xor
imul
imul
inc
mov
cltd
test
and
test
push
adc
and
xchg
mov
fisttpll
daa
xlat
cmp
add
mov
imul
ja
sti
lods
mov
cs
pop
lock
gs
mov
dec
pushf
mov
xlat
fs
fcomps
fidivrl
cmpsl
jle
dec
rorb
add
lret
mov
sbb
jmp
addr16
add
lock
mov
inc
pop
in
push
sub
int
lea
jns
test
iret
movsb
cwtl
mov
cmp
mov
fwait
jmp
shrb
stc
iret
inc
or
out
xchg
jle
mov
lcall
xor
je
sarb
add
fildll
ja
roll
dec
fdivrs
ret
jns
pop
xor
add
adc
mov
dec
or
int3
and
loop
rcrb
sub
ret
pop
fs
push
mov
mov
sbb
pop
fisttpl
mov
ret
adc
add
jb
inc
adc
mov
mov
jle
aas
fwait
mov
jo
xchg
jp
mov
mov
jnp
shll
xor
popa
sti
call
movl
lock
mov
mov
clc
pop
pop
mov
mov
mov
int
sub
sub
sub
js
imul
stos
in
fists
movsb
add
adc
pop
push
pop
xchg
pop
test
orb
mov
data16
push
inc
sti
mov
outsb
fmuls
push
sub
dec
sbb
mov
cmpsb
cmp
jp
cmpl
adc
inc
cmp
pop
outsl
push
push
push
lock
shlb
jns
add
daa
push
pop
add
push
fstps
fldenv
adc
loop
xlat
addl
daa
cli
shlb
fdivs
faddp
add
mov
or
out
sbb
ja
jecxz
mov
lods
mov
pop
lret
insb
ss
les
inc
es
jo
sub
sbb
stos
cmp
mov
jae
dec
sbb
jl
sub
iret
pop
int3
jmp
xlat
cs
adc
sub
into
mov
cmp
rolb
xchg
and
mov
out
inc
fisttps
outsb
jmp
xor
fstpl
out
ss
cmovge
out
xchg
ja
mov
test
jge
jno
rolb
inc
jne
ds
adc
add
inc
ja
test
jl
aas
mov
scas
mov
sti
repz
mov
and
cltd
and
cmp
mov
pop
push
push
lods
push
shrl
cmp
test
sub
stc
mov
pop
and
in
xchg
les
imul
mov
jno
adc
aas
jle
jle
addr16
ror
jae
js
dec
and
xor
jge
cmpl
out
frstor
jne
and
dec
sub
nop
inc
cld
lods
xchg
cmp
jne
stos
cmc
and
pusha
adc
int
or
imul
or
adc
in
mov
sbb
pop
inc
pop
pushf
sub
sbb
adc
mov
sub
scas
add
sbb
stos
mov
add
xor
icebp
in
cs
xor
xchg
pop
outsl
dec
sbb
dec
pop
hlt
and
daa
fs
insl
aad
mov
push
mov
out
cmp
sub
lcall
outsb
add
or
syscall
loope
xchg
xor
mul
cmpsb
aaa
fsts
and
xor
xor
xchg
sbb
cmpsl
popa
jno
dec
sbb
loop
arpl
inc
pop
push
jge
push
mov
jp
lret
mov
pop
nop
daa
add
gs
dec
cli
or
cmp
xchg
add
out
xchg
or
add
ret
cltd
pusha
mov
cmp
push
arpl
push
xchg
loope
mov
xchg
icebp
rorb
mov
sub
sbb
sti
xchg
adc
sbb
cmp
aaa
pop
jecxz
cmpl
xchg
jp
mov
sbb
xchg
bnd
sub
adcb
fdivp
adcl
push
lea
cmp
imul
stc
repz
mov
outsl
fsub
outsl
cmp
out
bound
sub
loopne
les
sahf
add
add
mov
ficomps
pop
sub
or
aad
sti
and
mov
test
test
insl
xchg
loopew
aad
cli
mov
cmp
lea
daa
or
push
sbb
cli
dec
push
dec
jg
xchg
sub
mov
mov
imul
mov
test
in
mov
inc
daa
jmp
shrl
mov
push
xor
pop
mov
mov
out
mov
bound
mov
test
mov
sbb
push
mov
arpl
dec
cmp
ds
popf
xchg
daa
pushf
out
and
popa
dec
jae
cmp
test
js
mov
aad
pop
and
sbb
cmpsb
lret
cmp
pop
test
ds
inc
cmp
push
stc
popa
stos
xor
inc
mov
std
adc
fmulp
bound
outsl
repz
aaa
pop
add
jae
sub
js
daa
pushf
imul
inc
jb
sub
pop
mov
jge
gs
jmp
xor
js
out
ret
loope
xchg
push
jle
in
adc
scas
mov
add
xor
lock
loope
or
jle
pop
pushf
sahf
fimull
rcll
push
jae
rorl
jge
in
pop
fwait
cmp
clc
loopne
pop
cmpsb
jle
popa
imul
test
mov
daa
xchg
dec
cmp
adc
dec
xchg
mov
dec
and
je
pop
sbb
mov
aas
xchg
rcr
cmpsl
xor
sub
push
jmp
or
repz
shl
stos
mov
pop
iret
into
jmp
xchg
push
daa
ret
int3
jb
jns
xor
js
adc
cwtl
jp
xor
dec
sbb
mov
push
or
jle
inc
jo
gs
add
outsl
arpl
sub
pop
lock
fsubl
dec
repz
adc
cmp
add
sbb
lret
mov
mov
mov
jae
inc
js
arpl
mov
fsubl
ret
loop
std
push
xlat
inc
jno
cmc
push
mov
xchg
jmp
sub
cmc
cs
mov
test
pop
mov
lret
and
movsl
xlat
lcall
fwait
sub
out
cs
pop
mov
lret
decb
adc
outsl
and
xor
out
jl
xchg
xor
in
lret
lcall
pop
das
into
scas
mov
mov
roll
shlb
lock
mov
jmp
mov
sub
mov
mov
cmpsl
in
mov
cmp
shlb
in
movsl
xchg
push
stos
cmp
dec
stc
jns
or
cmpb
xor
cwtl
lods
xchg
mov
xchg
rcrl
jno
in
iret
cmpsl
call
fs
sub
adc
stos
xchg
aam
mov
or
push
aas
cs
out
push
scas
inc
inc
dec
in
mov
add
pop
lret
cmp
aas
xchg
fisubl
xor
pop
xor
in
sbb
outsl
jecxz
dec
push
push
jmp
test
cmp
jnp
adc
scas
inc
rorb
les
fwait
int
sbbb
cmc
addb
out
cli
repz
test
call
mov
cltd
repnz
mov
xchg
pop
xor
push
ret
xchg
enter
loope
loopne
loop
mov
and
out
mov
jmp
dec
rcrb
stos
aaa
pop
sbb
mov
idivl
daa
sahf
sub
loopne
and
mov
aad
cmpsb
mov
and
mov
loope
inc
xor
mov
sbb
lods
cmpsb
push
adc
std
sub
roll
cmc
fimull
sbb
leave
pop
out
cmp
xchg
cs
rcrb
bound
inc
inc
mov
cmpsb
dec
and
sbb
jmp
jmp
lret
or
push
sub
lcall
adc
jmp
js
jle
mov
pop
lds
aam
insb
fildll
stos
movsb
movsb
movsl
pop
and
shlb
inc
mov
out
insl
add
mov
cmp
ljmp
xchg
jb
call
lock
mov
push
test
bound
adc
das
test
stc
jbe
push
in
in
pop
sub
cltd
jbe
test
xchg
pop
fs
xchg
test
sti
out
rcrl
dec
imul
mov
testl
or
dec
xchg
rolb
jge
lds
cltd
in
notl
push
aam
jl
push
fidivrl
es
outsl
push
hlt
xor
dec
pop
sarb
in
lods
sarl
lds
mov
cld
loope
dec
mov
int
mov
or
ss
jp
imul
and
pop
adc
mov
int
sub
stc
fadds
lcall
add
testb
mov
mov
cmp
xor
adc
mov
into
into
jg
in
cmp
repnz
jae
xchg
cwtl
or
jno
adc
jmp
mov
fcompl
gs
addr16
in
cmc
iret
cmpsb
arpl
add
pop
jbe
jle
and
jno
fisttps
or
daa
and
jle
es
jns
sbb
int
mov
andps
sar
mov
xchg
rcrl
insl
inc
test
mov
push
sub
inc
fucom
int3
adc
mov
imul
sub
jns
add
inc
mov
mov
int3
mov
sbb
pusha
add
sub
xchg
test
jmp
imul
xor
out
sahf
cld
mov
insl
aam
in
xor
pop
jbe
push
adc
adc
push
jge
dec
xchg
xor
insl
jo
jg
lods
cli
repz
lods
addr16
mov
adc
mov
aas
or
test
orl
sbbb
push
jbe
mov
hlt
add
add
mov
test
clc
jae
jbe
shr
outsl
cmp
sub
stos
push
xchg
leave
mov
fimull
pop
outsb
icebp
fwait
outsb
mov
pop
cs
dec
adc
enter
and
inc
inc
leave
fsubrs
push
or
cmpsl
mov
loop
and
in
jo
pop
cmp
insb
xor
and
inc
adc
push
mov
dec
jnp
sub
jmp
jmp
psrld
lods
scas
add
mov
test
les
fucomp
imull
bound
xchg
addr16
lock
leave
mov
bound
lret
pop
inc
clc
les
fdiv
stos
jmp
and
mov
fdivs
push
mov
adc
cmpl
xchg
sub
ffree
xchg
sarb
xor
arpl
shll
in
repnz
mov
xlat
and
jg
fmul
enter
mov
push
mov
jno
scas
dec
bound
pop
push
fs
jno
pop
dec
rcll
mov
mov
mov
xchg
popf
loop
loop
jns
pop
mov
push
xchg
lahf
mov
loope
add
inc
lds
push
insl
mov
outsl
test
inc
movb
mov
cmp
or
sbb
pusha
insl
mov
pop
push
push
xchg
std
sbb
fists
jge
imul
cmp
stos
andl
ret
ds
push
mov
inc
xchg
insb
pop
icebp
orl
sbb
and
pop
sbb
or
js
push
das
and
mov
dec
pop
loopne
add
lea
mov
ret
stc
mov
push
fstl
mov
lods
out
pop
sbb
dec
adc
notb
push
pusha
repz
andl
pop
add
pop
and
dec
sbb
adc
xchg
cld
bound
fucomip
mov
lret
mov
repz
mov
shrl
adc
mov
js
mov
mov
jnp
stos
mov
sub
push
or
dec
mov
dec
cmc
mov
leave
xchg
cli
inc
lock
jl
pop
adc
jg
je
movsb
ja
sarb
jnp
mov
sub
mov
les
mov
repz
push
aad
iret
dec
popa
sahf
mov
lds
push
cmp
add
adc
mov
mov
sbb
pop
movsl
adc
mov
negb
xchg
testl
pop
fcoms
cwtl
in
inc
mov
sbb
inc
loopne
xchg
inc
and
int3
icebp
lahf
jecxz
jns
add
pop
inc
scas
pop
lret
dec
adc
rorb
movsb
cmpsb
out
call
mov
sbb
inc
add
movsl
int3
outsb
cmp
les
mov
scas
rol
bound
jnp
int3
adcb
fnsave
mov
pushf
je
mov
dec
pop
ds
gs
inc
loope
fcmovu
sbb
dec
lods
movsl
add
out
repz
adc
mov
add
jns
aam
shll
dec
pushf
into
cmc
jmp
mov
jmp
push
mov
test
jb
mov
or
sbb
ljmp
dec
insl
mov
mov
push
aaa
frstor
data16
shl
sahf
mov
mov
sahf
cltd
cmp
shl
mov
xchg
sub
jnp
hlt
adc
xchg
jns
jae
mov
cli
in
sarb
loope
into
pop
push
jp
aas
or
rcrl
mov
popa
add
push
rclb
pushf
pop
ss
cmp
push
fstp
cmp
mov
outsl
js
repz
pop
cmp
fldcw
push
arpl
subb
xlat
ss
div
outsl
add
dec
push
or
dec
xor
and
mov
in
jae
and
mov
test
jae
mov
dec
hlt
xor
push
push
lea
rcrl
push
mov
push
dec
sub
xlat
outsb
sahf
das
jae
dec
cmp
inc
mov
adc
ja
cmpsb
mov
mov
or
or
cmpl
dec
popf
lret
jg
push
les
mov
cli
xchg
mov
imul
mov
repnz
xor
std
es
popf
jne
mov
repnz
aad
fisubrs
andb
lret
inc
arpl
pop
sub
jl
push
sbb
aam
test
inc
rol
in
loopne
out
or
out
fstps
rcrb
stc
test
mov
in
xchg
sarb
xchg
mov
jle
movsl
dec
pop
push
insl
fisttpll
add
cmp
iret
je
lods
or
mov
sbb
mov
ret
mov
add
std
lahf
or
and
shlb
mov
pop
dec
out
cmpsb
test
and
mov
popa
adc
xor
push
out
sbb
xlat
fsub
mov
hlt
in
push
push
sub
cmp
push
cmp
sub
mov
out
jns
cmp
jp
jno
push
add
std
jl
mov
jmp
inc
into
jl
sub
in
lods
repnz
push
push
ret
lods
loope
rcr
orb
sti
mov
es
or
rcrb
inc
mov
in
push
mov
outsb
ret
loopne
mov
xlat
xor
jg
out
mov
rclb
sub
scas
stos
mov
cli
stos
cmc
leave
lock
jge
popf
loopne
in
pop
insb
mov
jo
dec
sahf
mov
repz
mov
pop
jle
adc
movsb
repnz
inc
cs
rcll
cmpsb
add
insl
rolb
in
insl
xchg
pop
iret
or
jnp
adc
hlt
sti
push
xor
pop
xchg
or
ret
sbb
or
pop
mov
xchg
cmp
or
or
call
and
mov
and
mov
adc
lahf
shlb
cwtl
das
inc
arpl
sbb
stos
jecxz
std
ret
xchg
ficoml
shlb
stos
sub
ds
repz
xchg
sub
sub
fs
xor
mov
adc
sbb
stos
and
filds
mov
mov
fldenv
sbb
jne
lret
push
lret
imul
sub
enter
imul
cltd
mov
push
mov
jmp
lock
mov
mov
fmulp
or
addr16
cli
leave
sub
insb
out
dec
into
push
sbb
loopne
dec
jge
xor
sub
sbb
add
xor
xchg
mov
inc
inc
and
int3
xchg
sub
rcrl
push
mov
out
aas
je
outsb
es
cmova
cld
cmc
adc
jge
pop
sub
in
sahf
movsl
divb
sahf
repz
jb
mov
add
les
dec
scas
dec
push
sti
rcr
ret
sub
push
mov
push
add
pop
and
dec
sub
aaa
shll
sbb
xor
or
loopne
scas
mov
push
jge
dec
movsb
jnp
inc
mov
in
cld
xlat
and
pusha
sti
inc
dec
daa
mov
sub
sahf
xchg
jp
in
mov
test
pop
mov
insl
scas
xor
or
add
mov
arpl
sub
stc
ret
shll
movntq
pop
icebp
mov
mov
xchg
out
lret
test
loope
sbb
dec
and
jae
arpl
call
mov
cmp
test
cmpsl
lret
imul
mulb
push
adcb
ja
out
mov
or
insl
cmp
xor
adc
pop
mov
das
aam
lahf
add
int
mov
jne
mov
jno
dec
cld
jb
arpl
push
add
mov
mov
scas
or
mov
mov
ret
and
loop
pop
in
insl
lcall
fstps
cmpsb
push
or
sti
sbb
flds
mov
cmp
sbb
xchg
inc
psrlq
push
dec
out
inc
pop
ret
pop
clc
cli
or
pop
adc
int3
ljmp
add
jbe
push
es
lahf
jg
sbbb
inc
lcall
cltd
insl
jbe
inc
loope
push
out
shrl
and
and
sahf
js
pop
sarb
adc
jecxz
mov
push
pop
inc
pop
push
test
jl
sbb
aam
stos
outsb
push
lcall
add
add
lret
xor
popf
cwtl
scas
xchg
mov
sub
divl
repz
stos
xor
push
movsl
ret
or
popf
je
push
lcall
jecxz
lea
mov
sbb
sub
xchg
xor
iret
xchg
jbe
bound
xchg
push
aam
xchg
add
pop
nop
daa
hlt
sahf
add
push
xor
movsl
lret
daa
xchg
outsb
push
mov
inc
xor
imul
test
icebp
div
mov
mov
mov
repnz
frstor
sub
fwait
aas
or
test
lods
loopne
dec
imul
xchg
lret
mov
test
xchg
push
fsubrl
jnp
cmp
lcall
fistl
xor
rcll
jb
test
adc
ljmp
cltd
adc
sub
push
jp
orl
lods
push
ja
xchg
into
mov
add
subb
add
lret
cmp
cld
and
cld
int
jecxz
push
cmp
lcall
iret
push
ja
push
leave
inc
in
mov
add
fisubrl
inc
xchg
repnz
cmpsb
fwait
call
inc
or
sbb
and
mov
loope
addb
and
aas
mov
fstpl
push
push
nop
lret
dec
inc
inc
add
and
mov
orb
mov
cltd
dec
iret
mov
lock
loop
test
jl
mov
sbb
jno
pop
dec
sub
push
iret
cmpsb
les
sub
push
sbb
add
xor
add
push
dec
adc
imul
fsub
test
inc
jnp
jecxz
mov
andl
adc
sbb
int3
in
sub
frndint
flds
xor
jae
inc
cmpsb
mov
repnz
movsb
cmc
push
aad
cmpsb
lods
add
mov
in
pop
andb
ret
enter
push
aaa
clc
das
xchg
lahf
jmp
fcomi
push
dec
sub
in
jmp
mov
ja
in
es
mov
out
in
pop
popa
mov
idivb
sub
mov
fstps
out
es
out
lods
lcall
imul
mov
inc
push
mov
les
loop
flds
lods
aas
or
push
sti
scas
cpuid
mov
cltd
cltd
gs
fsubs
insl
mov
mov
fiadds
xchg
xchg
imull
xchg
lock
inc
xchg
pop
pop
lcall
rol
mov
popf
sahf
cld
and
cmp
inc
mov
mov
rcr
cmpsb
xchg
test
mov
je
mov
andl
sub
movsb
and
mov
sub
test
int
fsubs
dec
sub
xlat
xor
ljmp
in
push
sub
nop
cmpsl
mov
pop
scas
repnz
mov
jbe
add
loop
and
xchg
loopne
mov
ljmp
dec
arpl
or
xchg
ret
lods
inc
cmp
shlb
fwait
mov
pop
jo
sub
pushf
xchg
enter
pop
testb
jle
add
jg
inc
popa
pop
sahf
pop
sti
mov
adc
add
push
xor
cmp
mov
pop
adc
pop
push
popf
repnz
push
fiaddl
lahf
int
xor
jns
addr16
xchg
or
sbb
inc
mov
int
cmp
jo
subl
dec
loop
adc
sarl
lcall
cmpsb
sbb
out
pop
jbe
mov
or
adc
lock
leave
and
adc
ror
sbb
pop
insb
adc
or
adc
pop
mov
shlb
add
imul
sbb
inc
mov
cwtl
ret
and
fsubl
ds
sahf
fisubs
mov
gs
jmp
or
lock
test
daa
push
js
fstpl
xlat
scas
cmpsb
mov
xchg
cmpsb
sbb
fldcw
outsl
xchg
jo
mov
xchg
ljmp
jne
mov
idivb
rcrb
notl
popf
stos
popf
fldenv
mov
xor
and
ss
outsl
or
add
xchg
icebp
sbb
add
repz
outsl
mov
push
inc
push
sbb
jg
mov
inc
jp
xor
mov
inc
mov
shll
stos
cwtl
cmp
sbb
mov
xor
je
or
mov
mov
in
inc
scas
fisttpl
push
cmpsl
inc
jbe
fbld
les
repnz
and
inc
sub
mov
cmc
loop
jmp
mov
iret
lock
push
mov
sbb
pop
dec
add
mov
mov
fsub
adc
jg
loop
insl
cwtl
fs
cwtl
int
stc
push
cwtl
dec
repz
cltd
lods
sbb
sbb
pop
jbe
rcrl
bound
push
jne
pop
sbb
movsb
xchg
fbld
js
mov
roll
dec
enter
adc
pushf
bound
pushf
push
scas
psubusw
gs
add
sub
pop
mov
dec
flds
or
xchg
or
cmp
push
icebp
push
pushf
hlt
notl
pop
fwait
xor
stos
fstpt
and
sub
xchg
sbbl
mov
lcall
lea
imul
jecxz
and
and
jbe
inc
lcall
mov
cmp
push
pop
push
repz
repnz
push
xor
dec
lret
mov
mulb
hlt
data16
sbb
jle
mov
push
ss
sbb
mov
jmp
aad
mov
mov
add
sahf
pop
andl
xchg
push
push
js
int
xchg
loope
rcrb
sub
rcrl
icebp
cmp
cld
divb
aad
repz
and
mov
outsb
dec
ret
call
and
xor
pop
addr16
or
sub
mov
sbb
inc
icebp
loopne
xchg
dec
outsb
mov
sub
enter
out
cmp
add
rclb
jbe
gs
rorl
es
and
or
xchg
imul
xor
sbb
xchg
insb
mov
jne
dec
test
test
inc
push
jecxz
adc
xor
push
imul
and
mov
hlt
ffreep
cwtl
outsl
dec
pushw
pop
sbbl
push
push
mov
sahf
ss
push
mov
mov
mov
mov
loope
xchg
imul
xchg
xlat
dec
lea
mov
and
pop
ss
lea
push
adc
repnz
int
xor
gs
xor
jo
in
sub
mov
xchg
mov
push
inc
mov
test
popa
push
mov
push
mov
shlb
call
push
lods
adc
mov
lcall
sti
loop
sbbl
cltd
in
adc
data16
sub
adc
or
ja
rolb
add
mov
sbb
sbb
add
cmp
mov
and
push
ds
clc
cmpsb
jns
jecxz
pop
fstl
cld
aad
sub
dec
or
pop
sub
xchg
adc
ja
dec
mov
fwait
outsb
inc
cmc
pop
push
out
mov
shl
outsl
xchg
mov
mov
sub
call
ss
jb
cwtl
test
mov
xchg
loopne
fs
idiv
xchg
popa
xchg
mov
add
jno
std
push
jns
rcr
push
add
pop
icebp
sbb
shlb
push
js
push
cmc
add
out
adcb
stc
rolb
shrb
xlat
xchg
sub
and
nop
lods
lods
jmp
or
cmp
daa
fiadds
xlat
sub
sbb
sub
lock
sbb
fimuls
loopne
ret
rcl
sbb
cmc
pop
dec
leave
fiadds
mov
std
imulb
cld
stos
xor
push
xor
out
mov
test
ret
adc
cmp
jb
push
fisttps
orl
loop
mull
cld
movsb
cmp
pop
dec
add
add
xchg
adc
repnz
lock
cmpsb
inc
mov
cltd
pop
sbb
xlat
pusha
std
inc
pop
lcall
inc
dec
in
push
mov
mov
sub
or
pop
movsb
cmpsl
cmpsl
mov
and
add
jnp
outsl
scas
xor
xor
enter
mov
xor
cltd
inc
pop
jl
lods
repnz
call
xor
iret
xor
cmp
jae
psrlw
test
daa
int
jbe
mov
andb
imul
sahf
leave
lea
cmovle
adc
sub
mov
push
jge
sbb
cld
data16
test
int3
cmpsl
imulb
lds
cmc
test
mov
push
xchg
std
cmp
jns
imul
sbb
cmpsl
sub
pop
sub
fsubrs
jmp
daa
mov
ret
inc
out
xchg
cmpsb
or
pusha
xor
jge
jno
jl
push
imul
fs
icebp
sub
test
jo
negb
in
and
sahf
xor
lods
add
out
test
out
sub
imul
jecxz
jno
dec
mov
sbb
insl
aaa
mov
idivb
push
sbb
call
sub
or
stos
xchg
aad
cmp
stos
jp
or
push
into
cmpsb
es
jge
xor
adc
lock
adc
sub
dec
test
cmp
push
icebp
movsb
xchg
cmpsb
cmp
sub
or
cmp
or
jle
adc
cld
shr
adc
loope
data16
xor
mov
lock
lock
popa
xchg
cmpl
mov
lds
jbe
cmp
xchg
push
sbb
push
out
scas
popa
fistpl
not
movsl
popa
or
test
stc
lahf
jno
cwtl
jb
std
xchg
adc
mov
test
and
mov
rcrb
cmpsl
ljmp
and
pop
mov
jno
mov
lret
fdivp
push
jbe
fadds
movsb
inc
pop
sub
and
shlb
xchg
or
push
jmp
negl
pop
add
mov
jb
dec
sbb
pop
mov
imul
inc
push
push
dec
xchg
lret
mov
cmp
cld
dec
xor
pop
rclb
sub
mov
adc
adc
fistl
cmp
push
lock
rep
sub
aad
dec
test
aam
addr16
add
iret
fs
testl
decb
push
in
loope
loop
pop
lret
xor
push
gs
andb
in
mov
sahf
sub
repnz
popa
roll
clc
mov
mull
insb
leave
mov
mov
cmc
test
cltd
sub
mov
data16
in
inc
mov
call
insb
nop
les
stos
push
je
out
popf
jns
daa
adc
notb
mov
sbb
movsb
arpl
fcmove
add
mov
nop
frstor
in
or
cmp
fistl
pop
mov
iret
inc
push
ret
cmp
lds
mov
fwait
cmpsl
mov
ljmp
stos
orl
ljmp
and
xchg
xor
cmpl
sub
out
hlt
or
xchg
sahf
leave
add
sub
imul
popl
jecxz
out
daa
ja
enter
jp
adc
fstl
cltd
mov
shlb
enter
sub
movsl
xor
mov
jmp
test
lea
xchg
shrb
test
rcll
jb
push
clc
movsl
mov
push
in
jecxz
add
or
imul
rcrb
je
bound
loopne
aam
pop
loop
cmpsl
int3
rol
mov
outsb
out
int3
push
sbb
push
lods
idiv
adc
push
fldl
and
jle,pt
call
mov
xchg
repz
jp
ficoml
jo
shrl
and
adc
jne
daa
add
mov
push
mov
mov
dec
jo
adc
xchg
jecxz
pop
dec
pop
addl
popf
add
lcall
arpl
ret
xchg
push
jl
push
mov
mov
rclb
enter
popa
sub
adc
xchg
sbb
xor
int
jmp
add
add
mov
or
pop
xchg
cmp
mov
jnp
mov
mov
push
xchg
add
mov
mov
movsl
xchg
jno
divl
stc
cld
out
mov
mov
ds
fnsave
sbb
movb
dec
sarb
dec
mov
lods
jmp
sbb
mov
fisttpll
sbb
mov
inc
rclb
sub
jmp
adc
or
pusha
inc
fisttpl
pop
push
sarb
andl
andb
in
imul
mov
mov
test
xchg
stos
lcall
ss
and
and
push
inc
push
mov
mov
jo
push
push
mov
push
mov
in
rol
outsb
xchg
mov
loop
mov
add
cld
setne
inc
jns
mov
test
mov
ds
in
jae
and
jne
sti
adc
sbbl
test
sbb
sub
xchg
and
jns
in
mov
daa
je
test
mov
jmp
sub
and
and
lock
mov
mov
inc
xchg
mov
mov
mov
adc
xor
add
sub
lret
gs
popa
lds
rcrl
insl
ja
ret
xor
cwtl
hlt
test
dec
inc
or
movsl
insb
ljmp
push
and
idivb
mov
xor
test
insl
bound
fldt
dec
sbb
fisubl
adc
lea
icebp
popl
pop
andb
xchg
ret
mov
sahf
fstps
insl
sbb
xchg
xchg
lods
add
pop
adc
jmp
scas
les
jmp
int3
xchg
cltd
pop
sbb
inc
sbb
mov
ret
movsl
aas
adc
lcall
incl
jo
ss
inc
ljmp
pop
xor
or
test
mov
sbb
pop
push
insl
mov
in
movsb
scas
xor
test
adc
mov
xor
icebp
adc
or
jo
cmp
fwait
push
insb
arpl
mov
jns
adc
sbb
jne
add
out
dec
es
push
stos
xor
sub
lea
in
jo
sbb
and
adc
inc
movsl
push
mov
sub
repz
outsb
loope
out
fcmovnb
ret
or
in
rol
push
mov
add
mov
sysret
pop
sub
jle
movsl
inc
arpl
repz
jb
mov
and
and
push
pushf
xor
mov
bound
jge
ljmp
call
test
xchg
mov
ret
mov
push
es
es
addr16
lcall
ds
mov
in
or
cmp
lock
popl
mov
stos
icebp
xchg
nop
dec
dec
enter
xor
jnp
sbb
push
sub
xlat
flds
ficompl
sbb
lret
ret
push
in
cmp
and
movsl
lret
int
mov
popa
add
jl
xlat
cwtl
loop
dec
dec
repz
sti
in
sbb
xchg
out
repnz
daa
xor
dec
scas
lea
mov
popa
dec
repnz
xlat
push
mov
jno
cmpsb
jg
jmp
std
loope
div
pop
incb
and
cmpb
mov
add
sub
jb
in
movsl
sbb
dec
test
pop
mov
insl
fisttpl
push
mov
fnstsw
jge
and
lods
or
and
cli
push
cltd
push
rorl
gs
fcomps
lods
mov
in
loop
pop
test
movsb
aad
xchg
mov
xor
fimull
cmp
clc
cmp
and
gs
inc
lea
dec
xchg
sub
jae
add
lods
sbb
xchg
movsb
dec
sti
cmp
sti
mov
and
add
int
lret
dec
inc
aad
jbe
and
insb
push
dec
jge
mov
xchg
int
cli
pop
inc
notl
mov
loop
cs
popa
xlat
loop
jmp
and
push
lcall
mov
out
jp
test
lcall
lret
or
or
jmp
lret
lcall
inc
mov
inc
bound
lcall
xchg
pop
jg
imul
push
pop
xor
mov
pop
xchg
pop
fs
cmp
and
gs
and
dec
jmp
and
lods
mov
sbb
inc
inc
push
stc
int3
mov
js
lcall
fstpl
jl
out
jge
xchg
in
mulb
mul
lods
xchg
filds
cmp
outsb
lahf
iret
mov
xor
xchg
bnd
pushf
xor
popa
xor
jl
push
ret
enter
into
cmp
lods
mov
stc
test
cwtl
inc
dec
or
lret
sub
mov
sahf
push
push
or
cs
jg
int3
xchg
out
adc
pop
sti
adc
sub
jb,pn
and
jnp
icebp
ljmp
push
je
jbe
aas
cmpsw
push
mov
mov
pop
mov
in
lock
xchg
mov
xchg
dec
leave
push
lock
xchg
aam
hlt
mov
inc
lea
in
push
add
inc
das
jbe
and
add
and
scas
cltd
jmp
cs
lods
and
ss
addb
outsl
jnp
aam
std
pop
inc
or
shll
jl
mov
mov
les
arpl
fcomps
add
lods
stc
lods
fisubs
xchg
sub
iret
xor
push
or
leave
jno
repnz
bound
stos
jecxz
push
sbb
mov
sub
fcomi
sahf
mov
into
xchg
xor
dec
dec
inc
sbb
cmpsb
test
scas
jo
shlb
fdivr
sub
imul
xorl
mov
lahf
cmpsl
adc
sub
loope
push
test
rcrb
movsb
icebp
iret
push
nop
mov
dec
rcrb
pop
out
out
pop
lods
jmp
lret
movb
das
int
mov
cwtl
sub
xorb
adc
pop
jmp
or
call
lock
lret
add
push
xor
add
dec
cld
dec
jo
cmp
stc
fs
test
lods
scas
xor
je
shrb
push
or
popf
or
test
sub
dec
xor
outsb
pop
ja
inc
mov
aad
das
adc
dec
ljmp
rcll
ljmp
sub
xchg
popf
push
xchg
scas
push
jns
inc
ficomps
xor
mov
loop
adc
jb
sub
lods
rcr
push
pop
je
lds
clc
out
jle
sub
in
outsl
dec
lcall
xchg
gs
mov
xchg
mov
add
hlt
fldl
ret
das
in
adc
push
loope
fildll
adc
stc
mov
cli
xchg
inc
sub
std
adc
aam
mov
xor
and
inc
icebp
push
stos
sbb
sbb
adc
fs
cmc
sahf
fst
adc
jecxz
cwtl
popf
mov
fnstcw
lcall
shl
ja
sub
mov
popa
inc
lock
and
jb
scas
sbb
lret
and
lcall
and
adc
push
cmp
mov
imul
adc
js
mov
sti
xlat
dec
mov
cli
sbb
movsl
loopne
adc
mov
int3
mov
testl
daa
arpl
and
out
sub
push
movl
in
push
dec
lea
loope
arpl
ficompl
fsubrl
outsl
cltd
sarl
mov
lds
cs
ficoml
mov
iret
imul
dec
push
push
ret
rcrb
ljmp
cmc
inc
mov
mov
aad
mov
fidivs
les
outsl
mov
xlat
dec
adc
pop
mov
mov
adc
mov
setle
std
and
popf
neg
add
dec
sbb
or
or
movsb
dec
mov
cmovs
and
mov
xchg
sub
das
repnz
add
into
sbb
cmp
mov
call
pop
inc
dec
mov
icebp
and
mov
nop
inc
pop
jno
mov
cmp
sbb
repz
add
mov
andb
pushf
fsubrs
int3
cmp
push
lods
lods
inc
cmp
xor
pop
repnz
dec
xor
push
inc
jb
pop
pop
repnz
push
icebp
and
pop
mov
in
mov
insl
xchg
push
push
test
xlat
test
inc
pop
leave
mov
imul
insb
das
outsb
push
push
mov
jne
add
pop
add
pop
cltd
inc
and
hlt
add
mov
adc
xor
adc
dec
ds
and
xor
pusha
lret
fadds
enter
popa
pshufw
ss
imul
pop
fwait
mov
or
lahf
es
sar
xor
lds
xor
xorb
test
jae
jae
jo
dec
push
pop
aas
loop
pop
sub
jno
mov
loopne
mov
scas
stc
inc
inc
mov
jae
xchg
rolb
jl
int3
das
repnz
mov
or
sahf
hlt
xorl
ficoml
push
lret
xacquire
mov
std
xchg
and
xchg
sub
hlt
cmpb
call
and
pop
orl
lss
xor
gs
push
loopne
dec
inc
daa
xor
mov
cmpsb
sahf
xchg
fwait
inc
out
or
insb
inc
ficomps
pop
pop
sbb
adc
pop
sub
inc
clc
cmp
mov
push
jmp
pop
fadd
dec
int3
loope
mov
jae
hlt
cmp
shl
in
rcrl
jns
mov
xor
mov
pop
adc
mov
pop
or
cpuid
ljmp
ret
loop
mov
je
imul
stos
imul
in
cmpsb
mov
mov
std
xor
adc
pop
and
fsubl
ficomps
adc
jbe
insb
adcb
dec
xor
test
mov
scas
push
mov
xor
icebp
sbb
dec
hlt
mov
jnp
sbbb
push
mov
fsubrs
popa
push
aam
popa
aam
int
sub
xchg
xchg
mov
inc
xchg
in
movsb
mov
or
mov
adc
iret
xor
mov
ret
mov
lea
xchg
xor
sbb
or
repnz
repnz
ret
xor
sub
mov
inc
lds
inc
mov
filds
push
outsl
or
in
xchg
inc
mov
add
dec
xchg
push
jp
ss
lcall
mov
pop
jg
or
adc
add
ljmp
lock
dec
mov
ss
stos
shll
cmp
and
arpl
test
mov
sub
gs
sbb
mov
cmc
mov
dec
enter
mov
mov
mov
or
or
in
pop
sub
mov
dec
xchg
mov
test
test
push
rorb
data16
pusha
in
bnd
negl
mov
mov
jo
icebp
add
test
sti
test
mov
popf
or
or
loopne
movsl
sub
bound
roll
and
push
dec
int3
push
sbbl
cwtl
adc
add
in
xor
mov
lods
push
push
push
lahf
dec
xor
xchg
push
in
popa
je
cmp
cwtl
cltd
rorb
imul
rclb
xchg
and
nop
mov
pop
jmp
shr
nop
mov
sahf
roll
adc
fsubrs
out
or
divb
push
jo
pop
cmp
ret
jp
hlt
add
ror
push
mov
mov
lods
cmp
fstp
bound
push
scas
stos
test
shll
dec
dec
and
mov
xor
mov
adc
mov
and
lret
or
sub
rcrb
ss
aam
jecxz
push
or
push
sub
lret
mov
lret
sub
pop
push
dec
outsl
pop
nop
jno
xchg
mov
mov
mov
popf
inc
mulb
mov
das
outsb
jg
dec
into
lret
and
cmp
xchg
rol
and
ret
mov
jbe
cwtl
ljmp
enter
lret
inc
add
add
orb
repz
xchg
xchg
adc
test
inc
sub
in
sbb
mov
scas
out
mov
xchg
jns
lds
adc
mov
cmp
mov
mov
rol
add
mov
aad
add
xchg
into
ss
and
cwtl
mov
pop
sti
xchg
and
inc
sub
popf
cmpsb
sbb
adc
xor
sub
sub
or
adc
inc
ficoms
inc
arpl
jae
pop
popf
xchg
pop
cwtl
mov
fwait
jg
in
call
sbb
push
popa
and
jmp
inc
pop
outsb
shl
mov
jns
xor
sub
cmpsb
jge
fs
sbb
push
data16
lods
mov
out
es
mov
sbb
or
cmc
push
andl
aad
ret
movsl
jle
pop
in
shll
dec
popa
stos
aaa
movsb
lret
inc
mov
xchg
mov
inc
dec
pusha
pop
mov
test
orb
add
jmp
lret
push
push
mov
enter
add
lock
push
add
aaa
scas
into
rorl
sub
insl
or
sub
cmc
push
push
sbb
pop
jns
jmp
push
or
xchg
pop
movsl
aam
or
pop
fisubrs
lods
push
mov
rolb
cli
sub
cs
dec
insl
adc
cli
sub
push
bound
dec
sahf
into
adc
push
or
xchg
pop
fs
stos
data16
xor
xlat
push
cmpsb
fnsave
xor
mov
int
test
sarb
movsl
lret
push
mov
and
lfs
imul
add
scas
fs
jno
cmp
mov
dec
xchg
push
dec
test
in
jb
push
push
mov
jmp
int
push
andl
sub
or
sbb
sub
sbb
arpl
int3
and
ret
xor
cmp
jns
add
ds
and
dec
in
inc
mov
jmp
jno
add
xchg
dec
jp
mov
dec
loop
xchg
mov
addl
imul
jne
or
outsl
add
push
push
in
mov
jae
lods
popa
inc
dec
incb
sub
mulb
rol
jnp
hlt
rorb
xchg
sub
andl
pushf
and
fwait
xchg
fisttps
sbb
xchg
cmp
xor
jae
push
pop
mov
inc
mov
dec
inc
and
jecxz
test
jae
mov
mov
sbb
test
fidivs
mov
and
leave
lahf
cmp
cs
movsb
repnz
add
rorb
jb
arpl
inc
cmpsb
rolb
mov
fdivl
mov
mov
cmp
int
std
pop
cli
js
rol
mov
pop
je
xchg
mov
lahf
les
scas
adc
xor
fwait
movsb
out
sub
dec
dec
jno
in
outsb
insl
sahf
xor
aad
shll
jne
jb
scas
xchg
rep
push
fisubrs
sbb
outsb
addl
scas
testb
leave
mov
pop
add
imul
push
cmpsl
pop
subl
pop
or
shrw
ret
fistpll
or
xor
cli
inc
daa
fiaddl
push
sahf
mov
dec
and
mov
dec
mov
addb
cltd
mov
cmpsl
xchg
sub
aam
mov
fistps
aaa
xchg
es
push
mov
insb
jmp
fimuls
mov
js
mov
xchg
cld
movsb
adc
push
ret
jl
cmp
cmp
cwtl
icebp
test
sahf
sub
inc
mov
sbb
add
add
push
addr16
sbb
mov
xchg
movsl
sub
jno
daa
insb
jmp
insl
pop
mulb
scas
out
sub
std
add
cmp
cmpsl
adc
push
sbbl
lahf
jg
test
mov
flds
push
addl
adc
shll
jo
cmp
sti
add
add
js
jp
stc
jnp
popl
fadd
sub
mov
pushf
mov
fwait
loop
loope
je
je
popa
inc
or
dec
ficompl
lds
icebp
test
dec
mov
xor
cmc
repz
ret
add
jge
cld
das
paddd
inc
add
enter
into
fsub
fsubl
jl
cmpsl
les
cmpsl
stc
daa
ret
or
sub
cmp
or
movsb
jne
push
pop
mov
push
inc
push
sub
insb
mull
dec
cmp
adc
and
lea
aam
addr16
xor
mov
mov
testb
mov
pop
inc
stc
leave
cmp
fildll
stos
xor
push
cmpsb
mov
pop
ja
adc
push
adc
mov
dec
cmc
mov
inc
lods
icebp
jmp
xchg
bound
mov
add
test
add
sbb
pop
dec
outsb
push
pop
cmp
daa
rol
lods
arpl
outsl
xlat
fadds
sbb
push
lret
pop
jle
xchg
lea
xor
cli
lahf
mov
vorps
and
cmp
pop
push
pushf
je
or
adc
sti
lods
pop
je
mov
movsb
mov
push
dec
jae
mov
or
pop
aas
dec
jg
incl
test
enter
ror
inc
inc
or
xchg
popf
and
cmc
cs
les
pusha
loope
scas
mov
ja
into
pop
push
pop
adc
pop
pop
xchg
xor
push
fmull
adc
mov
test
and
pop
scas
into
into
lds
push
add
in
adc
sub
jge
mov
mov
jle
cld
dec
fnstenv
imul
inc
inc
xorl
clc
insl
ret
jb
shll
call
jecxz
jbe
pop
mov
add
fcoms
nop
push
daa
jne
cli
inc
mov
fildl
jns
pop
daa
lahf
mov
inc
scas
int
push
out
aad
jl
jle
or
sub
cmp
aad
xchg
dec
lret
sub
les
xchg
pushf
jnp
push
and
mov
xchg
fsts
jbe
mov
or
dec
sub
jno
or
lret
test
push
ret
fistpl
popa
and
cmp
lea
mov
daa
or
add
loopne
fcmovnb
out
dec
andl
aas
cmp
ds
pop
adc
xor
inc
shr
gs
mov
or
pop
or
sub
mov
inc
psubq
mov
dec
pop
lds
dec
pop
mov
fsubs
mov
xchg
mov
mov
movsl
xchg
loope
cmc
jge
or
sbb
jnp
sti
aas
jmp
pop
imul
jbe
adc
mov
mov
dec
imul
loop
xchg
push
mov
cmpsb
push
ljmp
xor
jg
jae
insb
dec
js
adc
dec
pushf
and
pop
test
jp
ret
lds
mov
add
push
cmp
sub
gs
cltd
sub
fwait
xchg
cmpsb
adc
xor
xchg
lds
push
pop
push
je
fwait
cmp
push
and
cmp
xor
rol
jecxz
mov
in
dec
mov
sar
jmp
lods
loopne
les
push
sub
out
add
std
lret
outsl
iret
mov
and
sbb
cmp
xor
or
insb
pop
jne
arpl
jae
fcmovnbe
dec
je
fldcw
sbb
scas
arpl
sbb
nop
or
stos
in
aaa
adc
lahf
cmc
sbb
push
lods
lahf
pop
push
mov
inc
push
push
bound
cmp
out
mov
inc
bound
repz
es
mov
outsl
in
mov
mov
cmc
sahf
adc
fsubrs
adc
xchg
popa
sbb
pop
push
lret
jecxz
or
lahf
stos
ss
or
ret
and
sub
das
or
xor
sti
jmp
dec
adc
xor
andb
pop
loope
fnstcw
mov
push
and
xchg
aas
repnz
fsubl
xchg
push
bound
pop
sbb
dec
inc
xchg
fdivrs
sbb
mov
sbbl
out
enter
or
mov
ljmp
mov
mov
nop
incb
pop
movsl
cs
xor
icebp
mov
mov
js
lcall
movsl
mov
sbb
jo
pop
popa
mov
subb
iret
setp
test
adc
mov
fiadds
pop
inc
add
testl
ds
lret
lahf
xchg
or
mov
test
ret
mov
cmc
aaa
dec
or
fiaddl
inc
out
or
aas
iret
mov
imul
dec
xor
push
out
and
pop
mov
adc
push
mov
dec
cmp
push
inc
mov
adc
mov
sub
ljmp
mov
fwait
lock
or
mov
jg
sbb
push
mov
ds
test
das
add
push
adc
jmp
push
into
jo
cmpb
pop
mov
movsl
int
xchg
add
in
movsl
outsl
lods
test
scas
mov
mov
cmpsb
fsts
cwtl
ret
add
out
imul
imul
sub
add
xchg
push
fidivrs
mov
xchg
sti
and
inc
out
adc
shrl
lock
pop
sbb
mov
cwtl
fxch
loop
scas
fs
es
fldl
pop
frstor
mov
and
enter
jnp
jp
jmp
sbb
lock
or
bound
xor
jecxz
xchg
or
pop
mov
out
or
jne
cs
xor
es
push
inc
push
sub
adcl
dec
pop
call
ljmp
ret
dec
imul
mov
repnz
cmp
add
jo
jb
inc
fldt
inc
icebp
mov
or
push
mov
out
cltd
add
shrl
cs
and
mov
jo
cmp
test
nop
push
popa
in
fdivrl
xorl
adcb
aam
xlat
adc
mov
adc
test
pop
out
jmp
push
mov
adc
movsb
sbb
leave
xchg
fistl
or
stos
push
nop
aad
jl
pop
jl
mov
cmpsb
jne
fnstenv
mov
aaa
es
xor
negl
push
inc
mov
xchg
adc
mov
adc
push
jne
sub
imul
add
lods
cmp
mov
je
mov
sbb
jae
add
xchg
ja
int
pusha
sarl
mov
jl
jl
test
das
push
loopne
sub
mov
in
jno
adc
mov
xor
add
cli
cmpsl
and
loopne
ds
loop
cli
mov
into
loopne
mov
pop
jb
shlb
mov
push
rclb
popa
in
xchg
ss
mov
xor
in
jge
decb
mul
inc
movsb
push
xchg
fistpll
jmp
pop
jmp
add
imul
or
mov
adc
mov
push
cmp
sub
pop
add
cmc
sbb
inc
or
mov
cmp
test
ja
jmp
jp
cmp
lods
lods
imul
lods
mov
stc
imul
jae
sub
sar
stos
mov
scas
out
push
ja
inc
dec
dec
popf
shl
nop
ficomps
imul
loop
outsl
sub
inc
cmp
sub
pushf
cmp
jnp
fldcw
mov
fisubs
mov
adc
outsb
inc
cmp
cmpsb
push
mov
push
push
pop
into
xorl
lret
sub
icebp
pop
push
sub
mov
es
pop
dec
mov
lea
jo
fadd
push
inc
fcmove
hlt
das
addr16
movsl
dec
push
arpl
sub
jp
dec
push
cltd
iret
push
push
xor
out
cmpps
aas
pop
pop
push
cmc
jnp
push
push
fstpt
aad
jns
das
out
jge
pop
dec
cmc
xchg
data16
push
dec
aam
repnz
divl
sub
jbe
loop
push
out
xor
fdivl
xchg
movsb
sbbb
add
je
outsb
pusha
xor
mov
inc
mov
or
lods
xlat
sbb
push
lret
jge
and
xor
fcomps
sbb
add
movsb
out
push
icebp
std
js
stos
jbe
aad
movsl
js
call
and
mov
push
add
push
pop
add
dec
xor
inc
stos
push
inc
daa
cmc
shll
leave
or
push
push
ret
divl
imul
jae
mov
and
adc
shrl
daa
or
inc
lcall
mov
ljmp
stos
and
jmp
fwait
movsl
or
adc
aam
xchg
lret
cld
push
outsb
inc
pop
lods
inc
pop
dec
addl
pop
jb
out
call
fdivrp
or
les
into
ljmp
dec
out
add
stc
std
jns
popf
jae
mov
icebp
pop
sbb
insb
jl
jns
adc
inc
lahf
pushf
cmp
inc
and
idivb
jnp
and
xor
and
enter
sti
xchg
inc
cmp
inc
iret
mov
inc
jge
sbb
cmpsb
xor
mov
sahf
jnp
sbb
ret
pop
addb
sbb
adc
fiadds
dec
xor
xchg
mov
aas
mov
lock
repnz
imul
or
xchg
lret
sub
nop
das
pop
adc
rolb
pop
xchg
sbb
popa
std
inc
add
cltd
loope
je
addr16
lahf
aaa
fstps
adc
cmp
inc
js
fdivrl
jnp
or
or
data16
gs
jge
inc
sub
pop
int
lods
xlat
je
mov
out
lea
lods
sbb
adcb
jl
push
xchg
insb
sbb
mov
xlat
and
fcoml
mov
sti
mov
out
mov
seta
push
add
lods
lods
sbb
xor
pop
mov
mov
mov
dec
mov
into
lds
jmp
shr
fwait
hlt
push
cld
xchg
in
popa
sti
jl
aaa
inc
mov
popf
xchg
pop
in
lret
add
or
in
jne
xor
inc
mov
push
fcoml
mov
dec
loop
lods
cmp
out
int3
out
pop
push
fcomip
cli
repz
pusha
cs
sub
mov
fwait
insb
mov
jbe
fsubs
lcall
pop
push
aad
int3
ljmp
cmp
call
add
mov
mov
aas
sbb
scas
das
les
push
sub
xor
inc
aaa
pop
mov
decb
pop
gs
in
movsb
ja
or
push
mov
or
scas
jae
addl
hlt
cmpsb
or
gs
lods
int
repz
test
je
sub
out
scas
push
arpl
dec
insl
cmp
mov
lock
sbb
jns
mov
sbb
pop
and
or
out
xchg
addl
fucomp
std
and
xor
push
inc
lods
addl
out
iret
imul
daa
cmp
lock
cmpsb
and
cltd
pop
or
sbb
or
pop
add
fsubs
pusha
jae
jno
scas
stos
test
leave
loope
sub
cs
mov
pop
pop
xor
add
dec
shlb
mov
pop
add
fbld
stos
and
xor
push
cmp
push
sub
or
sbbb
aam
inc
and
mov
div
scas
stos
dec
cwtl
ss
mov
popf
mov
mov
sub
mov
outsl
or
inc
loopne
jae
and
and
lds
dec
adc
jo
nop
jbe
fcmovu
inc
pop
push
cmp
in
popf
push
sub
dec
xchg
jecxz
lahf
sbb
adc
cmp
je
fildl
xor
inc
insb
sub
repz
cmp
mov
in
jns
push
mov
sbb
mov
insl
movsl
mov
in
aas
sub
lds
sbb
jecxz
add
xchg
pusha
lret
test
mov
mov
mov
out
shrb
cmp
jmp
adc
nop
pop
xchg
add
ds
and
xchg
cli
aaa
pusha
adc
cmpsl
pop
push
xor
cltd
std
call
add
and
test
sbb
mov
loop
dec
adc
xor
push
clc
jbe
in
out
and
negl
das
jecxz
scas
dec
test
out
fcmovu
adcb
notb
mov
vfnmsubps
out
stos
cmc
aam
sbb
cwtl
imul
in
xchg
arpl
and
mov
cmpsb
leave
mov
xor
mov
mov
add
jb
loopne
dec
cmp
mov
mov
fs
cmp
xor
lds
push
jbe
xchg
ljmp
adc
je
dec
add
or
push
inc
cmc
mov
xchg
pop
lock
jl
cli
test
imul
stc
jne
inc
push
outsl
aad
shl
jmp
sub
gs
cmp
filds
fidivs
push
push
cmp
mov
out
pop
mov
jbe
dec
inc
or
and
test
add
sbb
scas
adc
jge
adc
into
lahf
inc
fidivl
iret
or
inc
iret
lret
push
sbb
and
popf
push
inc
cmp
xchg
sbb
mov
fwait
jo
cmpsb
or
inc
inc
rcrb
fmull
and
test
js
insl
mov
xchg
call
scas
addb
lahf
cltd
jg
add
mov
dec
pop
xchg
pop
cmp
lcall
flds
add
into
shlb
popa
ds
jp
iret
sub
xor
dec
insl
jae
mov
adc
inc
xchg
std
jg
xchg
sbb
out
daa
and
mov
outsb
das
lret
ja
add
jnp
or
mov
push
nop
js
out
and
cmp
decl
xchg
ds
and
xchg
aad
adc
and
sbb
shll
or
mov
xchg
add
icebp
out
sbb
scas
xchg
imul
aaa
cmp
mov
sti
add
mov
push
cwtl
push
cli
cwtl
in
jmp
ss
test
aam
jg
push
roll
fcomip
cld
sbb
cmp
push
inc
and
xchg
sbb
mov
call
nop
mov
out
repz
out
mov
mov
or
mov
ja
sub
ljmp
out
call
jl
jns
pop
xchg
inc
xor
std
mov
mov
jne
out
cmpsb
pop
jecxz
push
cwtl
pop
sti
pop
test
dec
and
ret
or
cmp
push
dec
jb
adc
push
adc
mov
cmp
ja
lods
inc
push
shr
sbb
cmp
cld
or
int
inc
dec
repnz
cmp
cmp
mov
xor
sub
mov
cmp
or
inc
cs
mov
les
sahf
sub
orb
xor
xor
cld
mov
push
pushf
or
adc
sbb
shrl
fstpl
test
xchg
cmp
or
xorb
adc
mov
aas
push
leave
or
sbb
mov
roll
test
movsl
mov
out
movsb
int
jmp
cli
dec
inc
push
cmp
out
fwait
sub
xchg
test
adc
mov
ja
push
inc
push
rcrb
jae
cmp
xor
xchg
aam
hlt
adc
insb
xchg
mov
pop
outsl
jge
mov
ffree
adc
repz
in
push
push
add
mov
jnp
add
inc
and
test
mov
les
adcl
inc
jmp
lds
mov
or
aam
test
jb
fmul
decb
jge
ss
and
repnz
xor
jecxz
push
sub
loop
mulb
in
jo
sar
sub
sub
gs
testl
cs
jmp
shlb
jae
out
movsl
adc
outsb
icebp
add
adc
test
sub
lea
xchg
adc
dec
fdiv
push
or
aam
inc
xchg
pop
sti
sub
inc
aam
bound
mov
bound
mov
cltd
mov
in
mov
mov
xchg
stos
add
xchg
test
mov
stos
push
push
and
cltd
mov
in
xor
xor
mov
jl
ret
std
mov
cmpsb
addb
sub
pop
fcmovu
mov
out
cmp
popf
sbb
push
dec
or
es
xchg
out
sub
rcrb
add
shrb
xchg
mov
fcom
dec
test
pop
loope
out
fsubs
jo
pop
mov
or
sti
lds
repz
and
rcrl
mov
pusha
mov
imul
test
sbb
sub
ds
xor
or
and
or
dec
cmpsl
out
test
mov
push
sub
rcll
aad
popf
sar
dec
cmc
jns
pop
or
das
lea
mov
lds
test
mov
fcomi
jne
pop
mov
stos
lret
sub
sub
mov
xchg
dec
xor
adc
jb
xchg
jl
jb
loopne
xchg
jo
push
imul
jno
or
data16
mov
pop
movsb
movsb
push
fsubs
lcall
add
rcrl
ficomps
ret
cmp
mov
cs
jmp
mov
outsb
arpl
ja
addr16
dec
mov
mov
les
jp
movsl
rorb
insl
into
insb
pop
hlt
or
insb
cltd
leave
jae
mov
mov
out
ds
xchg
dec
pop
push
adc
cli
loop
cmp
data16
repz
pop
push
push
inc
into
jl
mov
and
mov
js
fcmovne
cmc
pusha
test
int3
pop
mov
incl
mov
dec
pop
push
xlat
dec
jl
ss
inc
dec
xor
loopne
movntps
in
movsb
jp
xor
mov
ja
sahf
loopne
jle
lret
loop
xchg
daa
add
sbb
and
insl
and
cmp
fcmovnbe
jo
dec
or
or
dec
xchg
jno
in
mov
cli
jno
xchg
cmc
inc
sub
ret
scas
in
test
stc
out
ljmp
mov
mov
adc
fmul
test
aam
cs
xchg
fsubrs
imul
scas
aad
movsb
xchg
je
stos
mov
aad
arpl
sub
loopne
das
jb
out
jge
ret
mov
dec
dec
scas
outsl
or
ret
jecxz
dec
jo
js
mov
dec
mov
add
dec
pop
add
nop
or
pop
push
cwtl
xchg
lahf
pop
jb
sbb
cmp
rcl
outsl
pushf
and
jno
sub
lahf
insb
add
shll
jge
js
in
insb
pop
xlat
and
lock
push
fistps
iret
xchg
xchg
mov
call
push
fwait
mov
out
insb
xor
xor
aaa
push
dec
repnz
jmp
jne
sbb
mov
out
xor
insl
and
enter
out
mov
stc
jp
jns
les
push
vpcmpgtb
mov
mov
cmp
dec
into
ret
rol
add
mov
push
sub
xchg
je
cmp
arpl
mov
xlat
repnz
xor
mov
cmp
dec
inc
mov
pushf
jg
inc
mov
hlt
sub
adc
lahf
fwait
test
leave
adc
test
imul
repnz
fdivrs
sbb
enter
daa
sub
paddq
jmp
fidivrs
scas
ret
mov
aaa
inc
inc
orl
or
mov
jp
in
xor
sub
inc
pop
push
ds
pop
pushl
mov
mov
adc
rcrl
inc
lcall
pop
mov
jg
sub
pop
and
mov
mov
ljmp
lods
movsl
adc
mov
test
pop
les
sbb
shrb
pushl
sti
adc
add
push
or
leave
je
mov
xor
pop
outsl
jge
cmpsb
nop
or
stc
repnz
push
jbe
mov
cli
push
out
bound
cmpsb
cmc
jl
cmp
xlat
fstps
and
dec
dec
mov
mov
shrl
jb
insl
lahf
xor
nop
jmp
dec
push
cmp
and
cli
push
fcoms
mov
ret
call
data16
xor
ret
jne
inc
icebp
aas
pushl
scas
mov
hlt
out
xlat
cmp
mov
mov
xchg
rorl
inc
inc
or
out
or
or
movb
rorl
and
pop
es
dec
cld
das
sub
jns
lods
push
out
fistpll
mov
cmpsl
xchg
mov
cmc
jmp
jno
fs
adc
xchg
add
pop
aad
jp
adc
dec
xchg
fsts
ja
jo
xor
fistl
cltd
aam
add
es
and
dec
pop
mov
cld
lahf
add
jmp
push
outsb
fs
dec
fidivrl
rcrl
sub
xchg
out
mov
push
sub
lds
out
mov
gs
pushf
jle
pop
push
in
or
xor
fnstenv
insl
sbb
lods
movsl
sub
pop
popf
test
push
outsl
mov
ret
sbb
cli
test
mov
pushf
mov
cltd
pop
mov
or
test
xchg
loope
roll
mov
cs
ss
in
ret
insb
adc
lcall
pop
mov
outsl
mov
and
dec
mov
mov
subb
inc
aaa
rcl
push
jb
and
jecxz
mov
mov
or
and
ljmp
ret
jne
cmp
cmp
das
sbb
imul
stos
out
aas
xor
cmp
daa
subb
push
mov
mov
cmp
cmc
in
pop
push
jo
scas
out
jp
xorb
int3
jl
inc
cmp
scas
xor
lock
dec
sub
and
xor
mov
sbb
and
dec
jne
fucomp
shlb
mov
pop
std
pop
adc
out
xor
in
icebp
test
or
xchg
fisubl
pop
fsubrl
cmp
je
adc
inc
mov
jnp
adc
dec
movsl
das
rclb
sub
in
adc
inc
int
dec
lea
lods
call
sbb
jbe
aas
mov
outsb
ljmp
cmpl
lahf
adc
dec
aam
mov
testb
push
push
xor
sub
pushf
dec
ret
cmp
in
and
mov
pop
js
mov
push
pop
mov
add
cli
ret
adc
add
add
dec
aam
push
psubq
add
js
int
sbb
cmp
in
xchg
cmpsb
stc
pusha
jno
sbb
std
and
rorl
xor
mov
ds
mov
lret
scas
adc
jmp
popa
mov
cmpsb
sahf
popf
inc
ret
push
out
int
adc
stos
fs
cmp
dec
cld
jmp
sahf
lds
xchg
pop
addr16
insb
push
into
enter
rclb
scas
push
sub
pop
mov
lret
loop
mov
adc
cmpsb
adc
jle
pop
in
lods
es
sub
and
and
or
lds
or
pop
lcall
cmpsb
iret
outsb
out
cmpsl
nop
std
aad
mov
mov
out
rorl
push
rorl
mov
mov
mov
sbb
dec
inc
hlt
cmp
arpl
mov
pop
popf
push
xchg
xor
cmp
mov
imul
icebp
adc
pop
dec
fdivs
adc
jne
pop
pushf
dec
inc
fidivs
fwait
lahf
push
add
sbb
dec
les
add
jg
lcall
jb
push
aaa
add
add
popf
xchg
mov
gs
dec
push
out
out
pop
sub
pop
fs
loopne
mov
lahf
aaa
xchg
popa
add
mov
inc
ja
jmp
lods
jb
pop
sbb
push
or
jmp
and
test
cmpsb
leave
mov
divps
adc
fs
insl
cmc
inc
jne
cmp
out
lea
nop
mov
out
mov
fsubl
lea
out
iret
outsb
mov
xor
clc
add
jbe
dec
aaa
mov
xor
aas
std
jae
jno
xor
push
hlt
push
imul
ds
out
push
inc
lret
dec
cmpsl
sub
loope
ret
cmp
je
and
les
gs
dec
inc
scas
popf
jmp
out
les
ffree
int3
cmc
aad
mov
dec
cmp
loope
mov
push
mov
insb
sub
iret
vxorps
frstor
sub
imul
leave
cmp
pop
mov
sbb
call
xchg
or
add
arpl
add
xor
push
arpl
mov
enter
test
xchg
sbb
out
sbb
pop
sbb
lret
notb
xchg
cmp
pop
iret
inc
push
inc
pop
mov
mov
xchg
or
bsf
lret
lods
movl
push
adc
jb
sbb
ret
pop
ja
loop
add
leave
cmp
data16
dec
and
add
fistpl
mov
shr
or
popa
das
ror
mov
xchg
mov
lret
rclb
loopne
xchg
cli
xchg
dec
and
sahf
bound
xchg
xor
pop
decb
mov
test
jbe
pop
sbb
lea
cmp
xchg
ret
jne
jle
mov
dec
js
pusha
movsb
lods
xor
xchg
sbb
out
pop
pop
push
jo
cmp
nop
lods
pop
xchg
dec
icebp
lret
mov
stos
push
push
fdivl
jg
imul
mov
fdivs
js
dec
dec
cwtl
mov
inc
xchg
cmpsl
outsl
sub
les
jle
add
subb
adc
mov
mov
or
into
movsb
in
dec
sbb
and
iret
mov
mov
jge
pushf
pop
shr
xor
and
scas
jg
cmc
lods
mov
imul
sbb
mov
adc
pushf
mov
push
mov
aaa
insb
add
fldt
repz
adc
dec
clc
pop
imul
cmpsb
inc
ret
mov
xchg
push
sub
and
int3
xchg
js
jbe
or
loop
iret
jl
push
cld
jg
mov
mov
sbb
mov
addr16
out
push
push
sub
inc
mov
cld
stos
sub
jmp
dec
pop
pushf
popf
test
and
hlt
xorb
arpl
xor
mov
xor
insb
pop
sbb
outsl
insl
or
inc
jnp
inc
lret
and
dec
aaa
call
lock
scas
pop
and
or
gs
sbb
stos
fsts
jp
add
lods
test
test
rolb
test
call
mov
ss
cmp
inc
inc
stos
adc
xchg
lds
and
xchg
xchg
fnstenv
and
inc
aaa
sub
add
lock
shrb
sbb
rcl
lock
daa
arpl
or
stos
xchg
clc
or
lods
fisttps
cmp
fsubl
hlt
inc
popf
insl
daa
jge
or
push
push
cmc
push
cmp
outsb
ljmp
adc
jbe
fs
sub
push
stos
xor
or
xor
pushw
mov
nop
xor
sub
add
inc
adc
add
icebp
sbb
rcrb
pop
cmp
adc
jbe
in
es
inc
sub
cld
push
fsubl
into
xchg
shll
test
je
push
and
sub
inc
dec
aaa
adc
ss
test
mov
mov
jp
adc
jp
push
js
loop
int
les
icebp
jno
mov
add
lahf
data16
inc
roll
sahf
sahf
lahf
out
sahf
scas
cmp
mov
test
add
ret
scas
add
mov
fsubp
in
stos
jo
mov
shrb
mov
dec
test
mov
aaa
dec
aam
or
lock
clc
shlb
mov
and
hlt
mov
icebp
sarl
ffree
cltd
fsubrs
in
mov
add
inc
push
mov
add
push
and
fs
add
mov
push
add
in
cmpsb
xchg
and
call
mov
insb
or
mov
or
jecxz
lods
loope
mov
adc
xorl
jge
dec
fimull
stos
mov
inc
int
das
andl
add
jl
js
mov
push
mov
fucom
sahf
sbb
loop
inc
add
je
dec
xchg
pop
rcpps
push
jge
adc
mov
imul
in
jle
push
movsb
mov
test
or
insb
in
lret
pushl
mov
mov
push
push
and
dec
mov
sbb
stos
jmp
or
repz
lahf
lcall
push
mov
mov
push
xlat
test
movb
sub
adc
sbb
int
push
mov
xor
mov
xchg
xor
imul
lcall
adc
out
sbb
jb
out
repz
mov
dec
sarb
popa
sub
add
sbb
jp
adc
pop
pusha
movl
in
mov
mov
out
scas
inc
mov
out
sub
out
add
sub
xchg
pop
push
jnp
or
lds
mov
shrl
inc
xchg
cli
jb
ja
data16
mov
daa
dec
popa
sbb
shll
xchg
or
add
outsb
ljmp
mov
xchg
xchg
fadds
or
sbb
add
test
xorl
inc
loopne
push
pop
jl
jb
inc
or
clc
int3
ret
out
int
mov
jbe
nop
or
push
inc
cmp
pop
mov
sbb
inc
add
inc
aad
sahf
cmp
dec
push
sahf
mov
dec
sub
iret
in
sarl
pop
push
pop
sbb
imul
cmp
sub
dec
aas
dec
xorl
or
outsb
mov
push
iret
dec
outsl
gs
out
call
add
lock
pop
mov
or
shl
jge
notb
or
sub
ljmp
fimull
aaa
sahf
mov
fs
test
ja
jnp
or
push
xor
or
mov
mov
dec
mov
pusha
mov
jecxz
out
iret
dec
lahf
cmp
xlat
aaa
dec
push
push
in
mov
or
pushf
std
outsb
fwait
cs
or
popf
rorl
adc
shlb
adc
incb
lret
and
arpl
dec
dec
add
call
sbb
mov
xlat
jae
cs
jp
mov
ja
jge
push
mov
lods
xlat
mov
mov
cs
cltd
aas
fisubs
stos
xchg
inc
repnz
test
mov
pop
iret
fdiv
addr16
pusha
adc
mov
jne
es
inc
es
pop
in
xchg
lret
rclb
test
add
int
aad
dec
jle
mov
push
out
cmp
cmp
test
or
sub
and
icebp
mov
xchg
shr
mov
bnd
fistps
dec
xchg
rcll
or
mov
jno
push
pop
push
imul
out
xor
adc
push
xor
pop
mov
scas
insl
sbb
loop
lahf
push
inc
xor
cld
push
jbe
data16
insb
mov
shl
mov
pop
push
clc
jg
mov
movsl
inc
push
add
add
mov
cmp
nop
lea
out
cwtl
dec
and
mov
bnd
outsb
jmp
adc
sbb
lock
push
fwait
pop
mov
pusha
es
and
mov
inc
pop
lret
pop
cmc
jbe
adc
jns
jae
stos
cmp
cmc
jg
sub
mov
sahf
cmp
std
inc
cwtl
xchg
pop
push
jno
xchg
dec
lock
mov
pusha
out
jb
xchg
add
cmp
mov
jo
cmp
mov
adc
inc
xor
jp
pop
mov
dec
ja
scas
adc
add
mov
sbbl
loop
in
out
bound
sbb
pop
push
adc
je
push
les
sti
add
pop
imull
test
add
lods
xor
inc
sub
jge
das
dec
cmp
inc
push
adc
std
jnp
gs
dec
out
sti
out
leave
jl
or
lret
pop
in
lea
cmpsb
jb
mov
push
fadds
sub
int
and
mov
xor
or
pop
mov
sti
sti
cmp
adc
popf
push
xor
mov
stos
mov
pop
sub
adc
xor
sahf
pop
inc
push
add
or
dec
jne
xlat
inc
int3
inc
adc
ret
out
push
inc
ret
adc
loop
int3
jecxz
inc
arpl
cmp
sbb
jb
or
divb
mov
xor
xorb
orb
cmp
out
ds
pop
in
aam
test
movsb
mov
or
pusha
dec
and
subb
xchg
jg
sub
inc
sub
bound
mov
mov
nop
add
adc
mov
mov
hlt
adc
pop
cmp
sub
cmp
xor
inc
adc
sbb
ret
faddl
jge
leave
mov
and
sti
mov
lods
mov
rclb
push
jg
add
and
repnz
lcall
push
int3
mov
ss
or
inc
mov
mov
call
jns
jmp
insl
pop
aam
jnp
pmuludq
jnp
xorl
dec
loope
mov
aam
cwtl
stos
inc
aaa
popa
ret
sub
mov
ja
mov
mov
mov
insb
mov
xor
push
loop
in
mov
jmp
push
mov
js
push
sbb
mov
aam
test
out
push
gs
add
push
out
out
cmp
loope
push
notl
sbb
sub
inc
mov
shrb
pop
dec
pop
gs
out
cld
mov
popf
jg
xor
fs
push
inc
dec
mov
or
mov
dec
sub
fstpl
fcmovu
jnp
cmc
test
xchg
and
xchg
inc
test
mov
adcb
or
xor
sbb
frstor
dec
lods
push
iret
imul
mov
orb
mov
loop
mov
test
pop
dec
ljmp
sbb
push
sbbl
push
mov
roll
xor
arpl
cmpsb
cmp
xchg
mov
pop
cmp
sbb
rolb
stos
repz
leave
in
xor
test
inc
lea
xchg
push
das
mov
or
push
jg
inc
add
shld
jmp
in
inc
rcll
push
repnz
lock
jp
cs
xor
frstor
sub
addr16
shl
js
push
sbb
lahf
es
adc
sti
daa
mov
fcmove
ficoml
xor
loop
sbb
mov
in
js
enter
jmp
xchg
dec
jns
xchg
in
xchg
xor
and
or
int3
jmp
add
repnz
push
daa
ljmp
call
cmp
leave
or
mov
data16
js
leave
or
add
inc
fsubrs
adc
pusha
adc
cmp
cltd
mov
daa
stc
aaa
push
int3
and
mov
mov
je
imul
mov
mov
lds
les
cmpsb
push
mov
dec
dec
mov
arpl
sub
adc
imul
xor
xchg
jl
and
stc
and
filds
pop
gs
cli
mov
cmp
push
call
aad
dec
cmp
mov
mov
ja
sbb
neg
cli
enter
rcr
sbb
pusha
dec
stc
in
xchg
xor
pop
popf
adc
icebp
push
sti
pop
outsl
push
sarl
js
pop
jge
push
aad
jnp
fists
push
pop
mov
cmp
add
inc
lret
jns
lods
push
pop
arpl
jnp
test
sbb
sahf
inc
push
loop
add
aas
clc
or
add
fsubs
dec
mov
cli
das
inc
jge
divl
mov
ficompl
enter
je
subb
shrl
shll
mov
jae
sub
stos
negb
mov
mov
push
jmp
shrl
sub
push
cli
xchg
aad
call
out
clc
aas
adc
into
push
cmpsb
sub
popf
jno
scas
hlt
xchg
xchg
mov
cmpsl
fidivs
xchg
or
pop
pop
sahf
cmp
mov
fistpl
pop
jle
pop
mov
jle
mov
dec
mov
js
call
ds
movsb
shrl
xchg
cmp
sbb
and
pop
xchg
loopne
repz
pop
pop
jp
loope
and
or
xor
mov
jmp
fincstp
adc
mov
add
push
out
adc
jns
mov
in
jmp
add
pop
jle
mov
call
pop
movl
iret
notb
xor
pop
cmp
ljmp
loope
push
jecxz
scas
les
dec
jbe
dec
inc
pop
pushf
mov
add
push
or
stos
add
push
fisttps
lret
nop
inc
adc
mov
or
pushf
jnp
sbb
dec
cmc
loop
std
ja
inc
xchg
xchg
nop
arpl
adc
xchg
popf
xchg
adc
imul
lock
jle
in
lret
test
inc
les
push
popa
add
lds
xchg
in
jnp
mov
arpl
test
cmp
test
test
lds
inc
fwait
jp
imul
sub
flds
jp
push
ja
push
addb
xor
icebp
add
movsl
fistl
test
mov
push
popa
pop
fnstsw
sahf
bound
bound
jb
xchg
cmp
mov
cld
in
pop
add
dec
xchg
xchg
iret
lcall
ljmp
push
or
xor
in
fidivs
sbb
imul
sub
stos
jge
push
and
sti
mov
test
mov
mov
aaa
insb
movsb
or
push
imul
xchg
in
enter
rcrl
mov
addr16
insb
mov
out
xchg
int3
mov
insb
pop
movsb
mov
fadd
pop
mov
loopne
lds
dec
sbb
loope
shl
mov
mov
test
dec
in
fimull
cs
adc
cmc
and
insb
je
cltd
js
sub
jns
out
shrb
loope
adc
jbe
xchg
lret
out
lock
adc
or
xchg
xchg
add
jmp
push
push
outsl
scas
gs
push
lret
cmp
out
iret
push
jle
mov
pop
test
cmp
jg
mov
pop
testb
pop
into
clc
and
lods
orl
pop
leave
sbb
sub
jo
mov
lcall
push
loop
ret
cmp
sub
sub
dec
imul
scas
shlb
mov
inc
dec
cmpb
jg
in
jbe
sub
push
and
lods
pop
or
pushf
rcr
or
mov
ds
sbb
mov
cwtl
jg
mov
fnstcw
xor
jmp
xchg
aas
pop
inc
inc
xchg
test
movsl
je
ret
lock
fisubs
movb
dec
les
mov
jmp
sub
imul
out
dec
jmp
test
outsb
mov
aas
mov
xor
es
iret
xor
fcmovb
aas
or
dec
cmpsl
fmuls
out
fld
mov
mov
loope
outsl
sub
cmp
mov
imul
pop
sbb
test
sub
int
xor
inc
loop
mov
cmp
out
stos
ja
fdivl
mov
or
jp
push
addr16
add
test
xchg
push
and
repnz
jmp
mov
nopl
mov
cmpsl
repz
pop
cmp
sar
mov
in
mov
or
sub
mov
or
xor
aad
add
cmp
cmpl
push
test
repnz
push
push
ret
jne
mov
inc
lea
jns
cld
idiv
mov
jnp
int3
fcomip
iret
mov
sub
sub
addr16
dec
pop
push
out
pop
enter
mov
mov
inc
cwtl
xchg
push
loopne
stc
push
bound
push
aaa
sub
popf
mov
mov
idivb
sbb
add
mov
ret
cmp
aas
adc
ret
lods
jb
es
xor
fdiv
out
xchg
outsl
jge
insb
cmp
push
jg
roll
push
add
add
pop
popa
jge
mull
adcl
lcall
jae
js
es
cld
sbb
jns
test
inc
cmpsb
dec
movl
loop
mov
stos
xchg
adc
daa
lret
lret
sub
mov
xchg
xchg
jge
sbb
enter
enter
pop
pand
fsubrs
sahf
jbe
or
lea
sub
or
jmp
es
arpl
mov
push
adc
mov
mov
mov
cmp
mov
pusha
dec
gs
mov
pop
lret
jmp
popf
dec
or
sub
or
dec
xor
mov
inc
mov
cld
mov
cld
jge
leave
sbb
popa
lods
lock
scas
push
lea
mov
loopne
mov
out
and
sub
jnp
lods
mov
in
addb
insb
in
cmp
fwait
icebp
and
xor
shrb
inc
jns
cmpsl
sahf
pop
mov
cmp
dec
sub
or
fwait
push
dec
jge
jl
sbb
fsts
scas
xchg
sbbb
ja
test
repz
adc
sbbb
je
popf
dec
mov
shr
xor
mov
out
mov
adc
and
jmp
jmp
lret
fisubrl
xlat
imul
add
ljmp
add
push
lret
mov
dec
jecxz
out
xchg
cmp
dec
mov
or
lods
lds
hlt
adcb
out
jle
test
dec
movsl
add
pop
inc
jae
cmc
xchg
lahf
mov
repz
and
pop
lret
ret
int3
cwtl
add
fbld
popa
mov
or
cmp
mov
out
mov
mov
sbb
pop
or
stos
fmull
adcb
pushf
cli
fstpt
inc
jnp
push
cld
xorb
hlt
fmulp
cmp
icebp
fwait
scas
inc
imul
jne
jo
jmp
je
cs
dec
pop
insb
pop
and
cs
mov
hlt
dec
stos
into
subb
xchg
ret
js
dec
jle
xchg
fwait
das
xchg
add
mov
fmull
jns
fsubrl
in
dec
fcoml
int
sbb
shl
xchg
inc
fcmovnbe
aaa
lcall
addb
outsl
mov
pusha
mov
std
test
dec
loope
add
and
cmp
negb
lahf
daa
mov
cmc
loopne
pop
inc
jg
jecxz
jp
jns
mov
or
cld
jbe
add
jge
scas
add
shll
inc
lret
cmpsl
aad
shlb
cvtps2pd
into
getsec
pop
cld
dec
sbb
ja
or
fs
stos
pop
imulb
xlat
xchg
xor
aam
mov
test
cli
xchg
cmpsb
cmp
ja
arpl
iret
scas
sub
popa
sarb
shll
jae
scas
insl
out
ret
pop
and
cmp
loop
test
push
pop
push
icebp
push
xlat
out
ss
das
sub
and
xor
aam
xchg
pop
loopne
mov
fdivl
sbb
xor
nop
inc
inc
and
and
cpuid
shrb
test
ficomps
xor
xor
mov
sub
sub
mov
xor
or
rolb
dec
pop
inc
cmp
sarb
aam
or
in
pushf
mov
push
pop
cmc
orb
lret
sub
and
insb
faddl
sub
ljmp
lods
or
adc
cmpsl
mov
fadds
or
sub
lahf
cmp
xchg
cmp
pop
mov
mov
hlt
cmp
lahf
cmpl
or
stos
jbe
test
fists
jbe
jl
jbe
cmp
adc
jp
pusha
sub
gs
dec
pusha
sub
outsl
pop
inc
ficompl
cvtps2pd
loopne
adc
xchg
adc
xchg
jno
pop
lods
push
push
mov
jnp
icebp
mov
dec
ret
mov
add
scas
cmp
cmp
jo
jns
and
inc
sbb
insb
jg
or
sub
data16
lds
mov
mov
mov
popf
je
inc
jp
insb
xchg
sarb
rclb
shll
lret
push
ljmp
jno
mov
mov
cmp
in
lahf
mov
fsts
cmp
insb
call
cmp
jns
push
rcrb
jbe
fcompl
jne
fiaddl
imul
ret
lahf
shlb
movsb
cmpsl
and
and
out
xchg
fiadds
mov
jbe
das
stos
and
sarb
daa
inc
and
xor
mov
aas
push
dec
inc
jne
int
into
cli
push
loop
adc
inc
mov
filds
sub
add
mov
pop
push
imul
jmp
in
neg
jmp
mov
daa
add
shlb
aaa
pop
shll
lret
and
pop
ret
hlt
dec
mov
dec
adc
movsb
cmp
cli
mov
push
push
inc
mov
push
cmp
push
aas
jecxz
in
outsb
loopne
popf
mov
aaa
add
cmp
repnz
push
pop
add
mulb
imul
sub
cmp
sub
inc
xchg
repnz
mov
orl
mov
fs
enter
movsl
fcmovnbe
movsb
add
pop
pop
xorb
into
faddl
add
pop
ljmp
jo
jns
mov
push
add
loop
inc
dec
push
out
inc
adc
or
push
cmpsb
pop
mulb
jbe
mov
inc
gs
repz
push
outsb
mov
push
movsb
jmp
pop
sub
dec
les
test
pop
pop
ds
loope
nop
mov
inc
sarl
pop
cmp
icebp
mov
jge
out
call
xchg
subl
mov
aaa
out
call
cmp
aam
dec
pushf
or
lock
stos
movsl
sarl
xchg
adc
mov
push
test
xchg
mov
and
xchg
jno
and
das
neg
lods
insl
pop
nop
je
mov
lock
cs
inc
jno
jb
out
jne
popf
mov
jmp
jge
out
imul
incb
mov
testb
add
mov
popa
imul
je
shl
mov
insl
sbb
cmp
out
push
dec
push
imulb
xchg
insb
lret
int
out
testl
and
cmc
sub
shrl
inc
cmp
xchg
test
shlb
in
loopne
inc
add
add
jbe
and
xchg
out
mov
push
scas
ja
ss
cltd
mov
adc
test
push
or
dec
mov
push
cmp
push
aam
cmpl
push
outsl
or
ljmp
add
out
or
adc
mov
cmpsb
adc
pop
dec
mov
push
jno
leave
cmpsb
arpl
mov
and
bound
inc
push
jge
xor
sbb
movsl
sub
repnz
add
and
rcrb
sub
repnz
and
bound
cmp
inc
js
jmp
inc
jns
xchg
and
push
data16
sub
stc
sarl
xor
ret
movl
fwait
sahf
lcall
arpl
jmp
daa
out
jae
sbb
stc
bound
rol
mov
loope
rcrb
test
pop
pop
mov
mov
gs
mov
arpl
ret
outsl
sti
dec
outsl
sahf
cwtl
adc
in
push
repz
cmc
sbb
mov
testl
mov
in
push
sbb
push
add
jno
or
sub
sbb
push
cmc
pop
mov
fists
shlb
repz
in
mov
jbe
pusha
or
jne
in
jno
mov
std
push
mov
shlb
mov
xchg
out
and
mov
adc
inc
add
sti
lahf
xchg
add
dec
push
arpl
lods
jge
and
fidivrs
mov
lea
push
cltd
fcmovb
mulb
add
inc
sbb
jle
cmp
fldenv
loope
push
pop
xor
aaa
and
xor
cmp
faddl
mov
jmp
mov
ds
lds
and
mov
orb
dec
cmp
dec
cmp
pop
pop
icebp
je
bound
andl
mov
xchg
inc
sub
mov
cmpsb
lock
push
icebp
mov
jne
movsb
imul
imul
push
test
aas
dec
add
xchg
ret
lcall
fiaddl
cmp
in
push
fldcw
js
push
repnz
in
int
lods
fs
mov
adc
xchg
and
cmc
icebp
scas
jbe
fcmovb
rclb
scas
int3
inc
push
pop
aam
add
mov
jns
out
pop
fistpl
dec
icebp
ret
nop
xchg
add
adc
ja
add
subb
ljmp
push
cmp
inc
out
inc
loop
cmp
sub
repnz
cld
mov
xor
jns
xlat
std
mov
cmp
daa
leave
push
fucomp
and
ret
sbbl
loopne
shl
jne
dec
test
loopne
dec
push
jle
jge
les
cli
fildl
xor
or
ficoms
into
or
stc
stos
ja
jo
cmpsl
repnz
pop
lds
xor
out
or
and
xlat
movsb
inc
pop
andb
imull
inc
test
hlt
popa
dec
cmp
pop
test
sub
ja
or
mov
mov
or
mov
mov
adc
xchg
aam
repz
mov
jb
sbb
xor
stc
ret
outsb
addr16
push
cmpsl
sub
test
das
je
testl
das
adc
das
push
ja
jg
dec
mov
or
and
les
push
fsts
into
add
data16
je
jmp
out
aaa
sti
into
fimull
aaa
jecxz
mov
add
sbb
popa
jecxz
mov
out
into
outsb
add
je
in
in
sub
xchg
jge
cmp
xchg
daa
roll
lcall
mov
aaa
mov
sub
popf
out
sub
sti
in
movsb
in
mov
and
add
mov
xchg
mov
xlat
sbb
pop
clc
ror
xchg
movsl
sbb
fmul
enter
cmp
in
pop
bnd
cwtl
sub
add
jg
fstl
or
cmp
or
test
rorl
gs
es
jo
pop
xor
ds
and
or
pop
cmpsl
xchg
into
jle
dec
fstl
ffree
cmpsb
loop
daa
cmp
orl
jns
fnstcw
push
das
sahf
dec
jo
dec
jmp
xlat
insb
jne
ss
xchg
and
roll
sbbl
je
cmp
cmp
in
mov
mov
fsubrs
enter
int
dec
test
fcoml
and
daa
push
jg
flds
arpl
bound
in
sti
je
imul
lods
mulb
outsl
arpl
cltd
das
inc
leave
mov
std
lods
xchg
push
insb
push
out
cmp
inc
lahf
jnp
lcall
aad
fwait
sub
fiadds
cmp
cmp
sbb
lret
nop
cmp
outsl
jmp
ficompl
imul
push
adc
call
out
or
push
je
out
jno
out
dec
test
inc
pop
out
add
or
into
in
sbb
jb
mov
testb
mov
jns
sbb
xchg
dec
adc
cmp
lods
ret
ljmp
jmp
sbb
jge
fildl
lock
jg
adc
xor
xchg
in
leave
aas
faddl
mov
pop
bound
ret
sbbl
xor
rol
movsl
lds
or
fcom
ret
icebp
pop
sysexit
add
popa
ret
xlat
sbb
dec
push
test
cmpsb
jmp
add
sub
or
jbe
bound
enter
inc
xor
xchg
data16
xchg
in
out
ss
cmpb
adc
xchg
repz
mov
sahf
mov
lahf
xor
scas
fisubl
add
lret
or
stos
out
xor
sbb
pop
mov
std
lcall
xor
loopne
out
test
into
mov
xor
push
fsubrl
push
nop
or
add
and
std
add
adc
inc
fstps
jge
adc
push
frstor
mov
jnp
repnz
mov
cmp
mov
mov
push
pusha
push
mov
rorl
mov
jae
icebp
adc
xor
adc
push
xor
pop
xchg
test
dec
aam
je
sub
and
cmp
repnz
addb
std
jecxz
xchg
dec
ljmp
ficompl
adc
dec
sbb
cli
mov
or
pop
cs
rolb
push
sub
push
addb
mov
mov
xor
push
js
push
rorb
cld
into
movsb
mov
insl
or
rolb
jne
jo
hlt
sbb
cltd
out
outsb
mov
lds
pop
fmuls
ja
sub
add
mov
push
into
fmull
fwait
in
lea
inc
inc
pop
or
adc
shll
push
sahf
arpl
ljmp
addr16
scas
jg
out
adc
sahf
sti
fidivrl
jo
xlat
cmp
xor
cwtl
popf
outsb
cmp
outsl
scas
std
mov
mov
sub
jb
ds
mov
push
pop
mov
push
mov
or
add
in
add
jbe
repnz
dec
inc
mov
sbb
jo
rolb
or
add
mov
xchg
xor
addr16
pop
hlt
jge
nop
fadds
inc
fisttpl
inc
sub
sub
loop
adc
cmp
xor
int3
fbld
add
stc
pop
sbb
fdiv
mov
fwait
inc
pop
ljmp
test
iret
xor
pop
push
add
ljmp
out
mov
cmpsb
add
into
inc
pop
jg
jp
xor
pop
xchg
lcall
call
frstor
add
cmp
popa
data16
inc
xor
cmp
js
aaa
out
jge
jg
lret
inc
test
mov
inc
ret
push
dec
or
or
xchg
imul
mov
sub
sbb
loope
test
subl
inc
adc
mov
sbb
imul
push
mov
es
inc
out
in
mov
jmp
push
jge
lds
scas
cmp
inc
stc
repz
inc
mov
push
stc
call
js
into
shrb
mov
test
jno
mov
loope
cs
and
xor
mov
push
mov
dec
sti
xlat
mov
stos
mov
mov
xchg
fcmovbe
mov
movsl
mov
sub
out
mov
add
sub
movsl
push
cmc
inc
mov
iret
mov
fiaddl
lret
sub
or
adc
jae
mov
fs
cmp
sub
mov
cld
inc
fldl
jmp
int
adc
inc
and
cld
and
into
mov
sbb
push
mov
lods
inc
popf
mov
mov
mov
inc
jl
dec
aas
out
ret
and
inc
lods
mov
loopne
lea
arpl
loope
mov
cmc
cwtl
test
inc
push
lret
mov
sub
movl
sub
out
sub
xchg
inc
push
sub
gs
adc
sbb
jnp
xor
inc
out
test
dec
sbb
movsb
jae
push
test
inc
lret
dec
daa
push
pop
lcall
insb
pop
fwait
adc
sbb
roll
in
xchg
je
jns
lock
adc
repnz
jle
xor
ja
js
add
sbb
jb
outsb
test
push
inc
cltd
sub
jmp
push
stos
mov
push
jle
lods
mov
or
in
sahf
xchg
decl
xlat
xchg
pop
jne
dec
aad
outsl
dec
xchg
movsl
xchg
in
jno
daa
mov
push
mov
inc
xor
jl
xlat
fwait
xor
mov
or
xchg
aaa
hlt
xor
jecxz
cmpl
nop
sub
imul
ret
mov
shrb
mov
sbb
xchg
push
lea
xchg
les
add
pop
clc
lcall
out
add
cmp
lods
add
adc
lods
dec
and
mov
pop
hlt
nop
inc
mov
inc
sub
dec
fnstcw
xchg
ljmp
mull
loope
sub
or
fs
lds
dec
push
adc
mov
mov
stos
pop
out
addr16
test
into
mov
mov
push
push
sub
aas
inc
ror
std
xor
cmova
jno
mov
cmp
mov
lcall
test
or
push
cmpsb
mov
dec
pusha
or
mov
imul
xlat
add
xor
xlat
mov
xchg
cmc
push
cld
add
and
lods
xchg
andb
aas
pop
fstps
lahf
xor
rclb
js
in
pop
call
test
xor
pop
push
in
cmp
outsb
mov
xor
loop
gs
sti
push
mov
sub
lret
sbb
lods
adcb
lods
dec
sahf
ljmp
and
jne
mov
mov
aad
je
mov
jl
loopw
jmp
in
inc
sar
push
aad
shll
mov
pop
bound
test
adc
popa
movd
iret
inc
ds
add
into
push
test
orl
orb
xchg
out
nop
cmp
repnz
imul
xor
mov
icebp
daa
ret
lock
xchg
les
ja
jp
jb
sti
push
inc
add
imul
mov
xor
int
movsb
add
mov
stos
ja,pn
in
pop
mov
or
xchg
sub
push
adc
inc
les
sbb
out
repz
in
xor
loopne
or
add
outsb
negb
and
mov
fists
dec
sbbb
cmp
pop
dec
ds
jbe
into
sub
lock
cmpsb
add
ficomps
out
in
stc
fsubr
std
fcmovnb
and
sub
aaa
cmp
pop
sbb
mov
jbe
mov
mov
shrb
mov
sarb
stc
lret
xor
dec
jae
leave
and
loopne
rcll
add
ret
stos
xchg
adcb
sub
mov
movsl
loopne
lods
loopne
sbb
lock
neg
aad
fs
mov
jb
pop
or
dec
sub
sbb
test
mov
dec
insl
daa
fimuls
fmul
pop
lret
test
mov
into
and
jnp
push
cmpsb
pop
mov
call
clc
xor
or
jg
add
cmp
mov
pop
stc
daa
loop
inc
mov
sbb
leave
inc
jl
std
in
test
pop
arpl
dec
push
call
daa
out
cmc
lods
fildll
inc
and
pop
pop
cwtl
mov
cmp
add
stc
fidivl
loop
lret
clc
in
sbb
adc
xchg
pop
sti
outsl
mov
mov
dec
lahf
xor
jge
stc
in
sub
fnstsw
inc
lahf
in
imul
xchg
stc
out
fldenv
daa
ret
stc
icebp
testb
xlat
adc
addr16
icebp
jp
sbb
lcall
loope
ss
mov
add
repz
jb
out
add
xchg
sbb
dec
rcll
insl
ljmp
lea
mov
pop
jae
daa
or
repnz
jno
call
pop
and
dec
jnp
sub
push
jae
dec
out
mov
xchg
into
into
test
pop
int3
stos
sub
or
push
cli
je
repnz
push
add
les
xchg
or
cmp
in
addr16
out
adc
out
dec
mov
xchg
imul
aas
js
adc
imul
scas
dec
test
cmp
adc
push
dec
pushf
mov
xchg
cmp
or
cld
iret
lcall
jmp
pop
out
jnp
push
lods
repnz
xor
out
and
popa
jge
xchg
or
ret
adc
ret
pop
ficoml
addr16
inc
inc
sub
push
aad
jne,pn
jo
aas
dec
lcall
push
imul
dec
mov
pop
xchg
popl
repnz
data16
out
das
dec
push
inc
or
xlat
lods
cmpsl
sarl
mov
add
mov
mov
test
adc
sbb
shll
fisubrl
out
cmp
repnz
adc
movsb
in
xchg
jge
pop
jo
and
ret
xchg
xlat
inc
or
mov
xchg
dec
cmp
mov
sbb
lock
mov
mov
and
xorl
sbb
inc
pop
xor
imulb
outsb
ja
add
test
push
test
mov
mov
imul
xchg
inc
sbb
sar
test
mov
mov
sbb
jl
aad
int
mov
adc
add
sub
arpl
inc
mov
pop
adc
mov
sub
and
cmp
flds
jmp
mov
jp
mov
subb
or
aaa
hlt
add
push
int3
xchg
insl
ret
mov
repnz
cmpsb
js
in
push
mov
add
adc
pushf
loop
mov
mov
lock
icebp
lods
or
gs
sub
call
mov
mov
ret
pop
push
xchg
push
aaa
jb
cs
mov
insb
sbb
xor
xchg
sbb
in
and
xor
fisttpll
daa
jns
add
mov
mov
push
sbb
rorb
sbb
repz
loop
scas
insl
xchg
cmp
ja
pushf
out
out
dec
xchg
push
pop
cli
add
test
loope
and
push
stc
test
sbb
adc
push
push
lods
mov
fisubl
mov
mov
xchg
int
xor
xlat
leave
addr16
mov
loop
shll
mov
mov
xchg
dec
pop
lret
mov
imul
arpl
add
pusha
mov
sub
mov
push
dec
aad
or
fwait
out
mov
fidivrs
and
mov
xor
mov
and
inc
hlt
adc
cltd
sub
jnp
xor
bound
xor
addr16
adcl
in
std
in
pusha
pop
cwtl
insb
or
ficoml
xchg
bound
cmc
add
push
icebp
and
ret
pop
clc
enter
pop
subl
mov
cmp
pushf
ja
mov
dec
mov
movsl
ljmp
or
imul
cmc
iret
fxtract
jb
push
xchg
stos
dec
pop
cmp
shll
jne
cmpsb
jge
dec
sub
cmp
filds
std
stos
cmp
or
pop
bound
cmc
adc
mov
jecxz
jb
xor
jl
fistpl
in
mov
lcall
cmp
je
in
out
lea
dec
out
jge
mov
jne
sub
or
pop
jae
icebp
cmp
call
insb
xchg
dec
das
sti
imul
sbb
adc
clc
into
sbb
repz
popa
sahf
xor
aad
dec
ror
js
in
ss
and
add
rcrb
pop
lds
and
inc
ret
mov
xchg
push
sbb
push
mov
mov
jp
popa
mov
je
in
pop
incb
mov
push
scas
mov
ljmp
movsb
popa
mov
add
jmp
xchg
lea
cmpsb
dec
sti
sub
dec
adc
testl
push
push
mov
jb
push
dec
mov
jb
ficompl
fldl2t
cmp
out
inc
jecxz
mov
jg
inc
fs
orl
sub
test
cmpsl
shrl
addb
rcll
push
test
aad
fsubrl
push
pop
scas
sub
negb
dec
push
dec
pop
cmp
divl
insl
testl
and
leave
mov
cmpl
sub
jmp
insl
xchg
adc
xchg
bound
fbstp
mov
cmp
rcll
mov
xchg
dec
push
pop
sub
jae
inc
adc
cmpsl
idiv
in
leave
cmc
sbb
ret
inc
lea
paddq
aad
adc
lret
hlt
adc
sub
cmpb
test
jmp
call
fcoml
movsl
sbb
mov
xor
pop
divb
xchg
xchg
lcall
cmc
xchg
mov
xor
jae
into
js
xchg
or
xor
daa
pop
pop
rorl
cltd
lods
loop
pop
cwtl
add
push
mov
shll
sti
inc
sub
mov
gs
fidivl
mov
arpl
add
add
clc
push
mov
ss
inc
pop
sbb
prefetch
stos
jo
mov
mov
in
lock
adc
pop
in
out
popf
fcomi
std
test
pushf
mov
adcl
xchg
xor
sub
fs
pop
stos
or
outsb
push
and
dec
adc
das
scas
imul
lock
outsb
adc
jno
popf
cld
fsubl
lidtl
leave
pop
jmp
and
jb
movsl
ds
setb
inc
dec
ss
test
inc
aas
xchg
jmp
dec
outsb
mov
nop
lds
in
in
push
mov
daa
inc
enter
push
into
aad
mov
test
pop
adc
mov
ja
add
aas
xchg
out
xlat
push
push
rolb
mov
in
mov
push
pop
movsl
sub
das
test
sbb
test
mov
mov
push
mov
cmpsl
lds
icebp
ret
aad
out
scas
or
adc
loopne
xor
sbb
cmp
jne
movsl
add
dec
push
push
out
ja
cmp
and
rcrl
fdivs
cmp
dec
mov
mov
std
mull
shll
jo
imul
adc
mov
and
pop
les
xchg
mov
cwtl
in
xor
test
and
test
hlt
inc
clc
stos
fwait
xchg
ret
lock
xor
cmp
cmpsl
call
enter
setp
jle
outsl
decb
mov
xchg
sbb
jnp
shlb
cltd
and
jg
jb
or
out
sbb
out
stos
mov
xchg
mov
aas
or
shll
xchg
jle
pop
mov
fwait
and
shr
cli
cmpl
add
stos
mulb
and
shll
mov
inc
clc
and
pop
aaa
int
call
sbb
and
xorb
cli
and
cli
fcmovnb
adc
push
mov
xchg
les
or
out
jl
cmp
add
pop
lahf
lds
cmp
dec
or
lcall
into
sahf
aad
push
loope
pop
mov
loop
inc
jg
or
xchg
int
test
sahf
push
xchg
mov
test
call
pop
scas
neg
repz
pop
jns
flds
ja
ja
test
shl
lods
clc
scas
cmp
lahf
push
popa
sbb
push
xor
out
jg
push
cld
sbb
mov
arpl
movb
fs
mov
int3
push
dec
mov
mov
dec
xor
add
aam
inc
inc
mov
mov
scas
cltd
xchg
movsl
cmp
into
sub
cmp
and
data16
pop
xor
loopne
imul
inc
enter
daa
mov
and
daa
popaw
jg
adc
xchg
jmp
repnz
xchg
jne
or
and
or
mov
mov
cmp
xchg
icebp
xor
aas
mov
sbb
fucom
rcll
and
sahf
decb
push
mov
push
rcrb
jnp
shl
cmp
sbb
nop
xchg
js
mov
cwtl
add
xlat
in
fwait
or
aaa
mov
pop
or
insl
idivb
and
ss
test
or
cmp
pop
gs
and
or
mov
jge
pop
movsl
dec
dec
mov
mov
jbe
push
xchg
in
loope
scas
xchg
sub
cmpsl
xor
call
mov
fcoms
mov
xchg
xchg
xlat
pusha
xor
push
sbb
iret
or
push
sbb
clc
push
push
push
mov
mov
outsb
rep
stos
xor
arpl
in
push
sub
or
int3
push
add
negb
cld
test
mov
cltd
les
mov
mov
xlat
mov
or
leave
lods
jp
cli
outsb
push
repnz
jno
pop
mov
movsb
aam
sbb
int3
test
cmp
addr16
mov
push
mov
xchg
push
je
ret
fistpll
loope
xchg
push
scas
cli
mov
faddl
loopne
pop
loop
sbb
dec
jg
idiv
mov
inc
mov
sbb
mov
lea
lods
jg
jp
jmp
xor
or
mov
mov
lret
sbb
inc
mov
or
push
test
cmp
pop
xchg
pop
xchg
and
push
je
loopne
fwait
and
sbbl
sbb
adc
adc
lea
js
clc
xchg
mov
mov
add
fmull
jg
sub
inc
aas
jne
xchg
push
in
out
adc
enter
mov
imul
pop
cli
notl
fs
push
rcll
sub
xlat
jns
mov
mov
xor
orb
xlat
mov
out
and
push
fsubrs
push
adc
pop
inc
push
arpl
add
or
push
jnp
and
rol
aaa
testb
push
mov
bnd
and
mov
jp
pop
lahf
pop
mov
test
fidivrs
fwait
cmpsb
sbb
mov
scas
scas
cwtl
mov
data16
les
subl
pop
and
xlat
lea
out
pop
iret
push
cmp
or
cmpsl
xor
mov
pop
addb
in
aam
xor
lods
cmp
xchg
scas
sub
lods
cmpsl
scas
inc
mov
pop
outsb
ss
cmp
inc
or
loope
push
lret
or
xchg
adc
aas
bound
push
adc
jo
mov
repnz
cmpsb
loope
inc
and
mov
pop
loop
nop
cmp
gs
mov
out
inc
jl
nop
cli
and
les
mov
cmpsl
xorl
add
push
aad
aam
xor
sti
out
cmp
bound
icebp
popf
xor
mov
mov
xor
and
mov
and
inc
orl
jp
dec
roll
insb
js
xchg
mov
scas
xchg
mov
fistpll
pop
mov
in
jle
in
popa
adc
mov
sarb
pop
mov
push
cmc
mov
sahf
outsl
inc
sbbl
inc
mov
clc
fucomi
repz
mov
and
stos
roll
pop
ss
scas
or
pop
sub
jae
into
cmp
pop
ret
sahf
and
inc
pop
push
mov
adc
stos
popf
mov
dec
iret
dec
push
jl
or
sub
add
dec
adc
mov
jg
sub
fwait
leave
dec
repz
loop
inc
inc
xchg
xchg
sub
in
insb
cmp
push
mov
mov
leave
fisubrl
je
add
roll
rolb
jb
mov
call
xchg
lret
imul
pop
leave
fwait
jbe
rcl
loope
int3
jne
sub
rcll
stos
pop
cmp
int
lds
jae
das
out
jbe
mov
adc
add
push
dec
push
out
fldt
pop
mov
outsb
scas
cmp
es
jl
inc
orb
xor
sti
pop
repnz
in
loopne
loopne
sbb
inc
adc
outsl
pop
scas
outsl
xchg
stos
xlat
les
sbb
aam
outsl
mov
dec
mov
idiv
scas
sbb
push
mov
out
je
adc
jge
push
jmp
cmp
mov
lods
cld
clc
jns
outsl
cmp
jg
jp
pop
mov
mov
popf
dec
fnstcw
mov
nop
test
mov
clc
or
or
push
lret
jbe
popa
rcrl
or
mov
aas
mov
sub
movsb
sub
fs
mov
cmp
lea
mov
pop
pushf
lock
scas
mov
inc
pop
int3
push
xchg
mov
pusha
lret
mov
dec
imul
adc
mov
test
pop
lcall
jo
gs
sti
inc
dec
jp
daa
imulb
xor
push
push
xchg
xor
jo
jae
filds
cmp
mov
sub
fwait
push
add
lret
gs
jae
xor
outsl
faddl
sarl
jbe
subl
clc
dec
in
cmpsb
loope
or
popf
pop
ss
push
xchg
cmpsb
imul
ret
clc
and
not
flds
add
fcomps
fistpl
popf
sub
orl
iret
rcrb
push
int
cmp
sub
ficomps
pop
stos
mov
mov
cld
lcall
les
out
lods
in
sahf
inc
push
mov
in
sbb
jo
xchg
pop
pop
or
inc
jb
cmp
xlat
fimuls
add
es
inc
stos
imul
pop
inc
add
shlb
inc
jmp
mov
xor
ss
jbe
loopne
jno
sahf
jecxz
test
inc
xchg
inc
loop
jp
insb
data16
icebp
mov
fisubrl
jno
out
rol
data16
pop
movsb
inc
or
jae
jp
pop
repz
jae
jns
xrelease
jl
pop
std
out
inc
cmp
xchg
rorb
out
std
out
out
lea
lret
push
adc
xchg
inc
lods
stc
dec
xchg
sarb
subl
pop
push
add
dec
lods
sub
inc
xor
test
call
call
stc
ss
pop
cs
jl
repz
repz
xor
outsl
jne
mov
adc
jns
sub
or
or
add
cmp
fisubs
xor
in
or
cli
jge
insl
add
jnp
adc
mov
es
pop
inc
int3
lea
lret
jmp
adc
bound
cwtl
pop
inc
xlat
out
lds
sar
in
sti
scas
stos
cli
inc
mov
sti
push
sub
sbb
std
jmp
addr16
dec
mov
inc
aad
cmp
in
mov
push
ljmp
clc
mov
dec
es
mov
add
add
movl
sub
mov
push
adc
cmp
hlt
jnp
sub
inc
std
add
sbb
mov
xor
mov
mov
or
lds
pusha
ds
aam
fistpll
ja
xchg
fs
mov
hlt
mov
cmc
fdivl
pop
lods
ror
insb
jne
xchg
xchg
or
xor
sarb
ljmp
sbb
dec
mov
testl
mov
sub
icebp
jmp
and
xlat
jnp
push
adc
inc
outsl
cli
nop
lret
into
dec
rorl
lock
enter
inc
cs
test
jno
in
xor
push
negb
andl
daa
es
push
pop
add
cltd
and
stos
gs
out
sahf
or
sbb
aam
inc
mov
adc
dec
fisubl
sbb
xchg
lods
ret
or
loop
pop
xchg
and
jg
addl
push
sub
rep
dec
xorb
sbb
push
roll
push
push
push
sti
add
dec
pop
xor
lds
or
cmp
lret
sti
shrb
int
stc
push
xor
jecxz
lahf
lahf
lea
sub
push
push
xchg
xor
test
mov
push
fcomps
sub
pop
cmp
xlat
test
aas
ds
sub
jg
cmp
aad
repnz
sub
arpl
push
pop
mov
notb
xchg
fstpt
and
mov
mov
fadd
scas
pop
shll
aaa
imul
adc
push
pop
mov
movsl
mov
mov
pmullw
jbe
dec
scas
xor
sub
jmp
push
insl
cmp
aas
mov
imul
cmp
jg
dec
mov
and
jns
mov
test
lea
xchg
les
popa
rcrb
in
xor
imul
pop
jle
ret
loop
or
test
shlb
movsb
pop
mov
inc
jno
xor
mov
or
enter
push
adc
cmc
inc
scas
mov
xlat
mov
orb
push
xchg
mov
or
adc
mov
out
jmp
xchg
mov
shrl
int
notl
sub
dec
outsl
pop
mov
pusha
ljmp
je
jp,pt
outsl
add
in
push
das
in
jae
incl
adc
test
loopne
mov
mov
pop
dec
cmp
ret
and
dec
and
or
sub
and
kmovd
pop
mov
dec
leave
sahf
das
leave
add
pop
add
pop
imul
fisubl
mov
test
inc
jnp
push
push
cs
mov
ja
sbb
inc
ja
iret
mov
sbb
inc
pusha
hlt
imul
in
push
orb
pop
sti
movsl
pusha
fisubl
pushw
fxch
int3
adc
pusha
cmp
imul
imul
mov
pop
lds
pop
mov
dec
int
call
in
lret
popa
inc
ss
or
fcoml
enter
rclb
sbb
mov
mov
sarb
stos
jo
inc
xlat
mov
mov
dec
mov
sub
cmp
outsb
push
out
add
mov
cmpsl
int3
test
es
stos
xchg
push
xor
push
outsl
mov
xchg
in
aaa
adc
push
ja
jecxz
loopne
jge
xor
cmc
xor
push
adc
cmp
data16
into
dec
fptan
test
sub
adc
cmp
pop
and
jmp
and
mov
mov
mov
dec
xlat
fstpt
xor
leave
shr
sub
rcrb
negb
fdivs
bound
mov
add
xchg
repz
dec
jb
add
xor
fchs
pusha
movsb
dec
loope
pusha
and
mov
xor
sbb
out
pop
in
or
fldenv
das
addl
xor
dec
or
jmp
add
mov
lock
xor
cld
dec
inc
rcrl
add
sub
adc
dec
shrb
jl
push
data16
sbb
lcall
std
stc
inc
lret
dec
push
fdivl
and
loope
mov
ret
or
pop
sub
leave
lods
mov
xor
fnstcw
dec
dec
ja
sbb
cmc
xor
dec
paddd
scas
mov
into
mov
lock
jg
in
pop
or
sarl
rorb
stos
or
xchg
xor
in
pop
rcrb
mov
fimull
fwait
xor
jecxz
test
or
mov
mov
icebp
pusha
dec
mov
ss
int3
mov
arpl
jl
dec
addb
push
aas
jmp
cmp
jbe
sarl
mov
inc
outsl
xchg
test
mov
xchg
or
bnd
iret
fwait
call
adc
and
pop
sub
sub
rol
xor
imul
sar
adc
es
xchg
mov
xchg
mov
mov
int
lahf
jae
jae
dec
cmpsl
xchg
push
jg
rorl
std
xchg
xlat
add
popf
and
das
mov
pop
or
xchg
jno
lods
lahf
adc
in
cli
or
lock
pop
inc
bound
xchg
enter
push
ss
test
push
lea
mov
pushf
nop
lock
gs
stos
out
mov
push
adc
testl
adc
es
jno
mov
cmp
cwtl
mov
insb
pop
mov
pop
xchg
cs
cmpsb
sbb
and
sub
jae
pop
mov
in
mov
pusha
ffreep
push
sti
popa
pop
mov
icebp
mov
pop
shl
jge
insb
imul
int
stc
jmp
test
mov
push
test
imul
sub
inc
outsb
repnz
xor
lods
mov
sarl
dec
cmp
ljmp
roll
shrb
lods
fsts
loope
iret
test
xorb
addr16
jmp
push
bound
adc
or
jnp
add
lods
jg
inc
xchg
fildll
cmpsb
pusha
movsb
dec
pop
cmc
mov
out
scas
adc
mov
mov
mov
xchg
das
jecxz
pop
mulb
mov
and
xor
lock
imulb
int
ret
mov
jbe
push
mov
popf
inc
ja
imul
mov
sbb
adc
inc
mov
ds
sbb
lret
stos
pop
cld
fldl2t
or
loopne
jo
loop
xor
xor
mov
sub
adc
sbb
hlt
decb
push
aad
mov
gs
add
jbe
push
mov
leave
dec
nop
or
mov
sbb
pushf
je
adc
add
mov
popf
cld
or
or
or
rep
xchg
push
add
adc
mov
sbb
out
add
jae
lret
pushf
xlat
pushf
mov
cmp
xchg
in
cld
dec
andb
cmpsb
push
dec
jmp
arpl
aad
inc
test
pushf
notl
adc
and
jge
fwait
lcall
cmc
and
cmp
fnop
dec
pop
push
in
dec
add
pop
divl
xchg
mov
jno
inc
push
fwait
incb
or
sub
int
enter
std
ljmp
je
enter
mov
pop
adc
add
call
dec
cmpsb
xchg
jp
mov
imull
jae
push
das
cltd
xchg
rcrl
mov
ss
sti
lcall
sbb
test
dec
inc
ja
bound
lret
faddl
or
pop
jnp
jne
push
test
das
fstpt
cmp
push
xlat
lea
xor
int3
jae
mov
sub
jbe
lds
mov
adc
cmp
nop
xor
dec
add
or
xchg
sub
mov
arpl
push
xor
lock
xchg
pop
in
jp
or
iret
inc
add
fcompl
adc
mov
xchg
sbb
insb
lea
ret
mov
addr16
sbb
sbbb
dec
es
adc
push
cmp
sbb
sub
mov
xlat
xor
mov
fdivs
loop
ret
sti
lock
testb
das
or
cmp
inc
ljmp
mov
lahf
adc
sahf
push
int
inc
mov
mov
sbb
lock
or
outsb
jl
shll
xor
sarl
jecxz
in
out
call
and
mov
and
mov
jae
test
cmp
mov
mov
and
cmp
sub
mov
das
and
lds
pop
je
add
xchg
and
push
cmp
inc
cmpsb
das
out
aaa
sbb
fsubl
pop
and
xor
ss
add
bound
xchg
pop
aad
loop
movsb
mov
push
mov
sub
jnp
repnz
addr16
ljmp
icebp
arpl
cmpsl
dec
push
mov
rcll
jno
jle
mov
adc
xor
add
mov
xchg
xor
in
sbb
cwtl
les
inc
shlb
adc
into
repnz
aad
mov
dec
cmp
xor
dec
les
add
pop
inc
ficoml
cltd
add
push
mov
jo
mov
push
jae
inc
movsb
adc
sub
mov
pop
cmp
mov
dec
rolb
cltd
jp
dec
or
mov
pushf
mov
mov
mov
jg
mov
std
push
mov
inc
cs
adc
sub
or
pop
addr16
inc
xlat
sub
pop
leave
xchg
inc
push
pop
dec
inc
dec
mov
lret
xchg
aaa
pop
mov
inc
fst
jb
or
ja
mov
adc
pop
push
adc
push
lea
mov
pop
jp
sub
cmpl
jno
nop
movd
xchg
fcmovnu
adc
cmp
lock
lods
mov
clc
pop
mov
adc
outsb
stos
int3
push
inc
imul
sbbb
xchg
insl
in
test
xchg
pushf
mov
dec
lds
sbb
dec
and
inc
loop
arpl
and
pop
jno
sub
push
pop
sbb
add
mov
cmp
int3
imul
mov
mov
xchg
sub
and
mov
push
addb
xchg
push
jge
roll
xor
in
outsb
sub
push
dec
rolb
push
lock
push
xchg
ja
push
pop
add
sbb
loopne
dec
sub
add
adc
scas
or
mov
enter
pop
inc
push
pop
das
je
inc
and
cwtl
pushf
sub
adc
leave
mov
outsb
test
out
out
nop
push
fdivrs
adc
test
mov
mov
sahf
dec
sub
mov
adc
movsl
lods
mul
and
push
fwait
stos
jmp
data16
ror
in
leave
mov
arpl
mov
ljmp
inc
ret
cltd
cmp
mov
lods
jecxz
xchg
xchg
mov
pop
je
pop
or
xor
mov
scas
leave
mov
jecxz
es
pusha
lret
arpl
adc
jb
mov
mov
mov
jae
mov
pusha
xor
xchg
dec
rolb
add
and
jae
dec
cmp
xchg
rol
adc
movsl
shll
loopne
test
push
pusha
les
bound
mov
popa
in
cmp
insb
xor
pop
push
jg
lock
sub
inc
negb
dec
stos
push
push
inc
mov
mov
aad
pop
std
je
mov
int
cmp
nop
add
mov
xchg
pusha
dec
fildl
call
jmp
lock
cmp
cs
jp
cwtl
imul
jl
or
dec
out
add
dec
adc
test
lds
jg
test
jp
jmp
cmp
sbb
cmp
pop
xor
inc
lcall
add
cmp
cs
mov
outsb
adc
mov
aad
aaa
lods
lahf
mov
push
sbb
add
lock
shll
inc
pand
and
fxch
lret
pushf
mov
jl
push
call
in
mov
dec
push
mov
xchg
adc
hlt
jp
outsb
cmp
mov
adc
cld
hlt
int3
gs
jge
lock
test
fisubl
fisubl
xor
push
cwtl
add
stos
rcll
das
out
icebp
call
clc
insb
xchg
xlat
sbb
sub
gs
hlt
push
dec
iret
repnz
add
push
lods
repz
jns
mov
push
add
cmp
sbb
pop
sahf
out
mov
jmp
lods
mov
rorl
out
adc
mov
sahf
push
cmp
mov
call
scas
int
fs
add
mov
cwtl
inc
push
jp
lods
xchg
xor
dec
bound
imul
push
test
pop
xchg
dec
mov
or
dec
hlt
xchg
xchg
mov
jecxz
mov
insb
js
xchg
loop
sub
pop
pop
popa
retw
sbb
dec
and
xlat
pop
fidivrs
xor
imul
mov
push
inc
stc
mov
jmp
orl
mov
xchg
xor
xor
jge
push
ret
sub
call
mull
jl
and
ret
sbb
gs
xchg
pushf
hlt
fisubs
jae
xchg
xor
xlat
imul
in
bound
mov
jge
lahf
test
inc
mov
xchg
stos
lret
stos
imul
repz
mov
cmc
aaa
mov
xchg
jg
lods
and
in
and
mov
repz
bound
inc
outsl
inc
test
jle
mov
xchg
xchg
mov
and
adc
or
xchg
mov
pop
mov
pusha
in
push
test
inc
mov
inc
mov
pop
xchg
sub
or
cmp
fwait
dec
scas
mov
test
xchg
sti
je
or
iret
sub
mov
sbb
mov
mov
inc
pop
add
cmpsl
dec
lods
push
sti
sub
pop
mov
jno
adc
sahf
ja
popa
mov
jbe
addr16
cmc
addr16
pop
fs
inc
xchg
jl
add
and
lret
or
xor
sub
test
jne
movsb
mov
jb
sub
ja
in
lds
pop
sar
out
cli
fcoml
ret
aam
nop
orb
sbb
in
js
les
sbb
test
fldt
iret
jle
ljmp
or
call
cmp
xchg
push
sti
pop
ficoml
mov
ss
or
jnp
pop
test
adc
add
cmpsl
xor
aad
jns
pop
rorl
imul
sbb
xor
jle
push
add
insl
pop
add
test
popf
jns
iret
nop
sbb
mov
cwtl
ss
lret
add
fadds
testb
push
lods
dec
add
inc
js
xchg
pop
cld
dec
cmp
xor
bswap
or
xchg
xchg
stos
hlt
icebp
push
int3
out
mov
mov
xchg
dec
adc
and
jp
lds
sahf
sub
xor
push
push
loop
and
repz
jbe
add
mov
jmp
icebp
dec
test
rorl
mov
std
sbb
inc
gs
sbb
repz
lret
add
xor
or
jge
jne
push
int3
pop
dec
and
ljmp
or
inc
imul
pop
push
jne
mov
or
fwait
jns
inc
mov
fstpt
pop
lcall
jbe
stc
mov
mov
xchg
push
ret
leave
jae
adc
add
pop
sub
daa
cwtl
mov
sub
xchg
ljmp
jno
pop
dec
cs
cli
pop
int3
mov
xlat
add
sbb
cmp
mov
sub
and
fiaddl
sub
inc
mov
aas
push
stos
jp
adc
dec
pop
mov
cmc
pop
cmp
mov
cmp
mov
xor
repz
sub
adc
xchg
ds
data16
jns
mov
data16
push
loope
adc
test
dec
sub
ret
test
dec
mov
xchg
enter
inc
lds
and
mov
push
mov
mov
push
out
dec
inc
enter
and
pop
std
sub
mov
rcrl
sbb
and
das
clc
push
add
gs
xlat
jno
shl
inc
test
outsb
fmull
pop
cld
mov
shrl
lcall
and
jg
mov
in
and
sub
xor
int
sbb
mov
pushf
cmpsb
popf
dec
dec
dec
enter
ret
pop
cli
pushf
fwait
jp
xchg
cltd
movsl
lods
push
addr16
and
xchg
mov
pop
push
jg
cmp
cmpsl
adc
in
jmp
add
rclb
and
adc
xchg
les
pop
xor
leave
shl
sub
pop
divl
fs
clc
lock
sbb
shrl
stos
popa
mov
pop
test
jg
mull
dec
mov
mov
jnp
mov
dec
fsubl
jnp
and
mov
mov
add
jl
lock
cmp
xchg
mov
shll
inc
cld
mov
sub
cmpl
mov
push
cmpl
mov
dec
aad
shll
scas
adc
loopne
dec
push
jp
sub
or
popf
jns
cltd
cld
cmp
push
loop
mov
ss
daa
outsb
mov
test
data16
pushf
data16
dec
lret
lods
test
jmp
pop
dec
aad
inc
in
cmp
shrb
call
loop
jmp
ds
imul
popf
cmp
in
in
inc
lods
mov
xor
and
in
jnp
orb
je
lret
jg
push
mov
iret
roll
xchg
xchg
sbbl
aaa
xor
dec
rcl
jno
xchg
fidivl
ss
lock
jp
add
aas
clc
jae
push
hlt
lds
push
inc
data16
cmp
xor
mov
call
pop
push
dec
lret
xlat
imul
xor
xlat
add
mov
cmc
pop
pop
xchg
jle
ficomps
pop
xchg
xlat
mov
rorl
addr16
xchg
add
sub
and
or
jns
mov
push
jp
rorl
and
push
leave
in
test
les
add
out
test
dec
mov
adc
jae
pop
dec
mov
cmpsb
xor
sub
cs
loopne
add
inc
jae
int3
pop
jbe
lds
or
mov
out
sbb
data16
fisttpl
pop
sbb
mov
push
cltd
mov
cli
test
sbb
adc
mov
pop
aam
mov
mov
cmp
add
lahf
rcll
in
push
inc
or
ljmp
jne
push
movsl
int3
ret
stc
cmpsb
add
std
cmpsw
xchg
loopne
lods
sub
push
fsubrp
test
loop
iret
jb
insb
mov
inc
lods
test
mov
pop
loop
and
notl
rclb
clc
fdivs
add
ret
mull
arpl
sub
ljmp
sbb
add
je
test
insl
aad
rcrl
xchg
and
pop
sbb
aad
xchg
mov
das
xchg
out
notl
pop
push
dec
pop
sub
inc
sbb
dec
outsb
pop
mov
pop
cs
scas
outsl
call
js
adc
popf
loop
dec
lahf
and
dec
data16
in
inc
cli
push
mov
cmpl
arpl
dec
xor
repz
jg
pop
fs
lahf
je
pop
xchg
xor
ret
aad
cmp
popa
pop
cmpsb
dec
leave
lcall
out
ja
into
push
imul
add
ljmp
fnstenv
inc
mov
lcall
push
dec
dec
dec
dec
repnz
sub
dec
sub
shrl
insb
mov
test
dec
adc
push
cli
or
cmpsb
and
cmp
insb
out
test
adc
inc
std
or
popa
dec
sub
addr16
inc
negl
loopne
jo
add
das
repnz
ds
jnp
int3
pop
cmp
lahf
mov
and
adcb
dec
mov
pop
and
sub
mov
nop
ja
arpl
jno
imul
or
lcall
lcall
xchg
paddd
stc
call
sbb
jge
insb
stos
add
ja
mov
enter
jne
pop
scas
mov
pop
cmc
lock
aad
pop
mov
jnp
out
add
and
xchg
insl
test
dec
es
add
mov
dec
cmp
js
in
xchg
push
mov
mov
scas
insb
push
and
xchg
push
enter
xchg
sbb
sub
lock
mov
into
fcmovbe
emms
loop
pop
mov
icebp
mov
xor
out
mov
cld
rcrl
mov
and
popf
cs
push
insl
ret
pop
cmp
and
and
xor
sbb
out
push
jo
xor
and
xor
cmp
in
jmp
pop
mov
pop
cmc
push
add
sbb
into
rorb
add
push
mov
and
dec
mov
xchg
inc
scas
jo
int3
xchg
arpl
cmp
sbb
ljmp
push
outsb
cmpsb
xchg
js
fstpl
mov
hlt
pop
adc
dec
shll
icebp
fs
push
push
fsubr
jo
xchg
test
mov
xor
incb
fmulp
jmp
xchg
mov
mov
decb
push
test
ss
add
xor
roll
inc
adc
xor
aaa
in
mov
lods
sub
adc
jge
mov
jb
aaa
mov
xchg
stos
lods
mov
or
in
or
inc
mov
imul
adc
xor
pop
pop
mov
stos
xchg
orl
in
xlat
inc
mov
and
push
xor
jno
cmp
imul
lret
xlat
push
rorb
add
mov
popa
fnsetpm(287
jmp
sub
rolb
xor
cwtl
jb
adc
adc
lods
inc
push
inc
notb
sbb
push
and
push
or
out
ficompl
pop
dec
cmp
cmc
test
jne
or
mov
stc
push
mov
ds
std
popf
add
xchg
mov
lcall
dec
enter
mov
cmpsl
dec
xor
jo
data16
sub
popa
xchg
adc
jns
cmpsb
push
pop
into
jp
and
icebp
and
out
mov
paddq
and
cmpsl
add
mov
stos
cmp
pop
gs
sarb
mov
adc
fwait
aam
test
xchg
into
adc
in
mov
inc
loopne
pop
or
mov
gs
aad
jae
add
in
loop
pop
scas
lods
int3
jle
loop
mov
out
or
fcoms
cmpsl
dec
lcall
mov
sub
jl
push
test
and
mov
stc
sbbb
xchg
stos
mov
cmp
lds
cltd
outsb
cmc
cmp
mov
mov
adc
in
insb
pop
jns
data16
adc
mov
xchg
xor
sbb
lock
cmp
rorl
mov
dec
stos
inc
shrl
and
sub
popf
and
or
mov
inc
roll
push
push
loope
cmp
push
scas
or
lea
js
mov
in
jp
jnp
or
mov
add
fmul
mov
cwtl
jl
rcrb
daa
or
sbb
insb
loope
jae
push
mov
cmp
ds
je
loop
loope
call
insb
or
stc
jne
lea
stos
sub
es
sahf
movsl
push
ljmp
icebp
mov
lea
scas
pop
pushf
jae
mov
fidivrl
push
and
xchg
pop
insb
repnz
mov
and
pop
xchg
sbb
cmp
jmp
and
cltd
cli
dec
push
les
nop
mov
mov
imulb
rclb
sbb
hlt
xchg
pop
ficoms
sbb
out
repnz
imul
movsb
nop
fmulp
inc
test
xchg
repnz
mov
ss
inc
or
stos
scas
aas
xchg
inc
fcmovnbe
cltd
dec
mov
mov
sub
jno
push
jb
pop
adc
test
inc
mov
cmp
sbb
enter
test
imul
xchg
sub
and
enter
xor
push
in
sbb
mov
mov
ret
mov
out
stos
jo
cld
enter
sbb
mulb
aam
xlat
iret
sahf
cmp
dec
sbb
bound
lret
push
dec
xor
push
mov
cwtl
xorl
mov
test
movsl
push
scas
cltd
pop
cmp
icebp
shl
mov
add
xchg
pop
mov
push
fs
jg
scas
repnz
in
loopne
lahf
nop
daa
push
leave
inc
dec
mov
jns
gs
cli
mov
test
jae
dec
mov
loopne
sub
adc
shl
inc
fdivl
and
push
push
in
enter
and
loopne
imull
es
mov
movsb
and
int
lods
mov
out
and
push
inc
int3
pop
mov
sub
sbb
imul
das
cmp
negl
xchg
push
dec
jbe
rolb
adc
in
fwait
icebp
jbe
xchg
cmpsb
lret
stos
fisttpl
cli
xchg
sub
lock
push
int3
repnz
icebp
sti
xlat
loope
ljmp
push
or
add
add
fildll
iret
sahf
in
loope
in
jne
out
push
rcll
mov
pop
jle
xchg
mov
stc
add
jbe
inc
cmp
iret
jnp
pop
and
hlt
sub
adc
adc
xor
lods
jne
xor
mov
popa
fimuls
cmp
xor
push
loopne
mov
rcr
fwait
mov
jb
adc
scas
mov
mov
xchg
imul
add
stc
xchg
inc
add
fidivrs
mov
into
out
fidivrs
inc
or
adc
rol
add
call
dec
mov
add
adc
lock
je
sahf
lea
test
dec
sbb
call
stos
and
ret
dec
hlt
jbe
xor
mov
cmp
mov
inc
js,pt
jbe
jp
cwtl
sahf
jle
xchg
inc
inc
inc
cld
lret
mov
nop
insb
mov
cli
fisubrs
bound
xor
push
cmp
xor
sbb
stos
push
fnsave
ljmp
pop
and
decl
sub
dec
sub
mov
push
frstor
inc
pop
je
xor
das
mov
mov
cmc
sub
push
test
daa
inc
mov
mov
insb
daa
mov
push
mov
inc
jae
mov
cmpsl
lret
into
mov
es
int3
fs
xor
jp
sbb
sbb
mov
mov
mov
in
pusha
mov
jo
xor
bound
outsl
xchg
push
push
movsl
push
inc
jl
sub
insb
mov
push
cmp
xor
adc
inc
mov
adc
adc
adc
adc
cmpsb
mov
cmpsl
stos
mov
inc
xor
mov
and
nop
push
pop
test
cmp
mov
jns
cltd
and
and
xlat
mov
jns
jle
adc
ret
mov
hlt
xchg
loopne
int3
in
dec
mov
inc
int3
cmpsl
cltd
test
das
insb
and
and
lcall
fldenv
adc
repz
or
mov
mov
aas
cmpsl
mov
repnz
xor
mov
popa
xchg
push
fsub
loop
popa
cmpsl
daa
and
sbb
push
js
fcoml
push
popa
stc
jns
scas
jnp
mov
or
mov
mov
and
lock
stc
mov
push
outsl
sbb
iret
xor
push
es
sbb
dec
ret
inc
dec
jle
cli
sub
in
pop
push
adc
and
fwait
sub
jge
push
sub
movsb
xor
sbb
jbe
jmp
xlat
dec
fnstcw
loop
out
mov
xchg
cmp
mov
cmpsb
jo
rcrb
aas
adc
sahf
ljmp
sbb
xchg
pop
push
pushf
popa
dec
ds
dec
imul
cltd
add
adc
ds
cmpsb
repz
test
push
call
ret
cmpsb
aam
insl
bound
sbb
push
jge
push
dec
js
and
jle
cmpsb
nop
xchg
adc
jp
rcpps
pusha
aaa
mov
sub
mov
mov
mov
dec
xchg
push
lret
test
inc
push
mov
sarl
nop
cmp
cwtl
inc
xor
xchg
push
fisubs
cmp
pop
je
or
sub
cmp
xchg
insl
sub
out
and
aas
stos
pop
je
push
push
mov
test
cmpsl
push
es
nopl
lahf
dec
sub
or
mov
pop
mov
ret
and
dec
cmp
int3
cmc
jp
repz
add
outsb
add
gs
and
ss
fdivrl
arpl
push
and
inc
pop
fwait
and
or
mov
test
inc
stos
and
cmpsb
pop
lret
data16
repz
inc
lock
or
or
stos
push
xor
mov
mov
fisttpll
mov
inc
mov
or
pop
bound
xchg
mov
add
cmp
testl
inc
mov
stc
add
push
out
push
jl
loop
lods
mov
or
mov
or
outsl
out
hlt
mov
add
and
or
mov
negb
mov
inc
int3
mov
and
inc
jb
dec
sbb
out
jecxz
push
out
icebp
cltd
mov
ret
mov
sahf
sbb
inc
jp
fsubrs
sbb
add
push
mov
pop
lds
cmpsl
mov
add
enterw
cwtl
or
dec
bound
push
insl
rclb
aas
out
xchg
mov
aam
test
and
rol
mov
leave
lods
pusha
xlat
jnp
mov
add
ljmp
jb
ljmp
add
aaa
jle
jp
cmp
lret
sub
out
rcll
mov
xchg
xor
sub
popa
push
mov
gs
mov
mov
repnz
and
pushf
sbb
mov
sub
shl
nop
movsl
stos
fisttps
jl
rcrb
stos
mov
ss
pop
and
add
adc
push
ds
and
movsl
mov
dec
mov
aam
push
test
pushf
push
or
xchg
xchg
mov
movsl
or
xor
in
add
sbb
mov
jne
arpl
jne
mov
es
iret
or
sahf
mov
dec
int3
stos
into
test
jecxz
clc
adc
scas
stc
test
das
push
test
test
mov
add
or
jle
outsl
mov
push
cmp
aaa
addr16
push
adc
push
push
in
mov
hlt
push
add
sbb
lahf
in
lcall
xchg
fiaddl
pop
test
xchg
mov
xor
or
cmp
xchg
les
jb
ds
outsb
and
push
mov
fwait
cmpb
mov
mov
sub
addr16
roll
fwait
lds
pop
push
sbb
icebp
mov
pop
or
movsb
int3
adc
sub
push
xchg
std
or
das
add
add
lods
cld
stc
insb
pop
mov
jp
cs
sub
outsb
iret
push
leave
imul
popf
mov
cmp
popa
mov
scas
aas
ja
push
sub
xor
xor
popa
int
push
inc
xor
sub
fwait
xlat
sub
orl
and
fcomps
push
lret
push
add
cli
pop
fsubl
mov
add
shll
xchg
ret
cmovs
xchg
iret
dec
ret
or
or
jbe
dec
adc
pop
push
push
icebp
int
mov
loopne
lea
mov
stos
cmp
pusha
filds
repz
mov
jo
fisttps
cmc
or
mov
addb
xor
sbb
and
js
push
loope
adc
inc
add
rcrb
xor
mov
adc
and
add
adc
xchg
dec
dec
or
adc
imul
fsubp
xor
jne
lcall
ds
sahf
addb
popf
jbe
pop
in
aad
xchg
stos
jmp
mov
pop
or
les
aaa
cld
cmc
mov
mov
das
push
ds
xchg
push
mov
scas
and
in
clc
cs
xor
dec
aam
out
mov
pop
stos
mov
jl
test
call
cld
dec
aaa
xchg
in
cld
xlat
cvtps2pd
out
xchg
add
jbe
lret
loopne
adc
sub
fwait
pushl
cmpsl
push
cs
xor
dec
sbb
cmc
idiv
inc
jecxz
icebp
inc
in
xor
ret
jg
pusha
cmp
fimull
stos
aaa
rorl
in
lret
lahf
mov
jae
popf
push
push
mov
pop
xchg
movsb
clc
xchg
xor
cltd
push
mov
addr16
jecxz
cld
and
aas
xor
inc
inc
addr16
sub
cltd
xor
leave
mov
repz
push
outsb
xchg
mov
or
add
sub
mov
mov
rcll
aaa
lods
sbb
xchg
fucomip
insb
cmp
loop
jb
fidivl
mov
sub
push
outsl
out
fwait
push
cmp
mov
lcall
sarb
mov
or
xor
add
fidivrl
sbb
outsb
arpl
mov
push
cmpsb
dec
mov
mov
ja
inc
enter
and
mov
mov
in
dec
jecxz
sub
jae
imul
push
test
push
xchg
aas
sahf
fs
fsubs
inc
leave
call
jmp
pop
outsb
mov
arpl
adc
pop
stos
ljmp
and
sub
sahf
inc
rcll
stos
pushf
jl
cs
pop
vfrczps
cwtl
sbb
cmp
cmp
dec
mov
add
pop
sub
sub
or
ficoms
adc
movsb
push
jmp
negl
clc
pop
gs
xchg
add
call
div
in
fcoms
cmp
jns
jmp
aas
sub
sbb
cmp
jnp
push
pop
xchg
aas
in
push
xchg
andl
jne
add
ds
out
inc
aaa
test
fsubl
dec
mov
bound
mov
push
dec
lcall
cwtl
jb
push
mov
inc
andb
negb
jmp
sub
cmpsl
js
divl
add
push
or
mov
lock
and
cmp
lods
loop
gs
jo
fdivrs
test
stos
je
fcoml
int3
fildl
lahf
lret
mov
sub
mov
push
adc
pushf
mov
cwtl
mov
shll
push
xlat
xsha256
cmpsb
xchg
leave
xlat
pop
ret
jp
push
xchg
pop
faddl
adc
stc
lcall
mov
adc
shr
jecxz
aas
sbb
ja
aas
loopne
sbb
lcall
shlb
mov
jns
pusha
pop
add
adc
out
mov
sbb
je
and
add
fisubrs
mov
imul
mov
lods
adc
push
sub
ficompl
pop
mov
add
xchg
mov
xor
data16
repnz
mov
ds
add
sbb
mov
push
push
sbb
ja
loopne,pn
cs
or
ret
imull
xorl
mov
adc
cmp
push
aam
fs
jae
imul
test
or
imul
xchg
js
push
jb
inc
leave
sub
mov
movb
roll
cmp
lea
xchg
lods
xorl
inc
mov
xor
xchg
xchg
lcall
mov
sub
stos
mov
adc
cld
add
in
je
js
mov
xor
pushf
jbe
inc
add
insl
adc
scas
dec
push
iret
dec
mov
and
mov
mov
rcr
sbb
gs
out
xchg
add
jp
outsl
call
data16
pop
push
sarb
pop
pop
ljmp
sbb
sar
sahf
xchg
lcall
addr16
jns
adc
sbb
leave
adcb
sub
pop
add
dec
loop
add
xor
ret
sbb
mov
pop
dec
test
in
int3
das
lret
std
jnp
xchg
add
loopne
and
push
movsl
mov
insb
je
mov
inc
inc
sub
sub
sub
mov
and
addr16
nop
cmp
xchg
aam
aas
and
push
pushf
aaa
rcll
mov
jnp
pusha
dec
jp
imul
test
lods
cltd
in
adc
mov
sub
sbb
nop
int3
cwtl
rcrb
jg
dec
mov
xchg
mov
push
data16
shl
xor
push
pop
out
adc
ret
arpl
out
test
fs
pushf
mov
adc
pop
ds
inc
inc
pop
les
mov
loopne
test
in
icebp
or
out
ret
cmp
addr16
cmpsb
mov
jg
jmp
add
jg
mov
ret
rorl
dec
jnp
cmp
mov
lret
fwait
push
add
mov
das
aas
mov
nop
mov
xchg
dec
sub
dec
fwait
sub
ja
test
pop
add
fcoml
dec
bound
mov
xor
fsubrs
stos
nop
insl
repz
xchg
xor
mov
das
mov
cmp
xchg
mov
out
insb
xchg
adc
ret
and
pop
dec
sbb
test
pop
in
loop
lret
and
or
add
xchg
fadds
mov
xor
in
xchg
pusha
jg
iret
jge
cmp
mov
xchg
pop
ljmp
mov
inc
push
pop
add
daa
rclb
cltd
push
sub
cmc
xchg
and
pop
movsl
test
es
dec
outsl
aaa
inc
fucom
xchg
mov
inc
mov
xor
rcrb
dec
aaa
movsb
sahf
leave
inc
push
add
xchg
push
cs
icebp
movsl
pop
mov
mov
jg
decb
push
add
dec
pop
jbe
loopne
lds
push
push
pop
mov
push
jb
add
push
and
mov
lea
outsl
pop
lret
sbb
jle
cli
add
inc
scas
add
pop
or
cmpl
xchg
dec
in
mov
mov
test
pusha
repz
cmp
xchg
push
in
cmc
into
cmovs
aas
cmpsl
in
xlat
cmp
mulb
mov
sahf
jb
inc
fptan
push
dec
out
xchg
das
mov
mov
xlat
sub
fsub
cld
aas
sub
jge
add
cmp
ret
aad
out
loop
popl
and
dec
xorl
jecxz
push
sub
stos
sub
dec
movl
jg
push
daa
stos
sbb
or
xor
roll
clc
pop
aam
push
lea
enter
adcb
test
fwait
dec
sti
fsubrl
pop
pop
mov
andl
adc
data16
sarb
shld
cmp
loopne
into
stc
add
cmpsl
dec
js
pop
out
lcall
inc
or
mov
xchg
or
adc
push
out
mov
mov
sbb
xchg
daa
imul
adc
mov
es
xchg
jb
mov
imul
cmp
lcall
inc
ret
jne
mov
je
aaa
cmc
mov
aad
dec
xor
mov
cmpsl
add
pop
sbb
dec
jne
cs
pop
jl
dec
adc
xchg
stc
sub
pop
push
stc
mov
int
aaa
data16
push
cld
das
jecxz
mov
adc
decl
insb
mov
fs
add
jno
sbb
repz
daa
mov
idiv
pop
lret
stos
cmp
cmc
pushf
jb
pop
pop
or
cmp
lds
mov
cld
cmp
lods
dec
inc
or
xchg
mov
in
mov
not
inc
cmpsl
sti
inc
call
cmp
outsl
xor
aas
clc
mov
xchg
mov
loop
dec
leave
frstor
in
cmc
enter
jmp
fistps
xchg
jb
xchg
dec
or
push
fnstenv
push
mov
cwtl
dec
xchg
mov
jge
icebp
loopne
xchg
and
and
sbb
jo
mov
jecxz
int
mov
and
cmc
mov
ljmp
jl
push
out
in
shl
dec
sub
cwtl
aas
or
push
xorl
push
xor
and
jge
jbe,pt
data16
popa
movsl
stos
jnp
xor
imul
sub
mov
adcl
testl
mov
fistpll
xchg
adc
jno
mov
cld
call
pop
dec
loope
imul
fisubrs
cmp
aam
mov
movb
add
mov
inc
data16
sbb
lds
add
inc
add
int3
loop
mov
loop
mov
ret
adc
and
pop
pop
pushf
mov
inc
push
sub
stc
dec
push
jno
fucomip
sub
ja
gs
sub
jg
popf
sbb
or
mov
adc
test
or
std
or
cmp
lds
cli
and
movaps
mov
jge
scas
xchg
lods
add
sub
xchg
dec
cmp
fdivrp
sbb
sbbl
sti
inc
ds
sub
xchg
and
decb
in
ja
or
fcomps
sbb
lahf
mov
jnp
insb
add
push
addl
test
es
test
adc
lock
cld
jae
mov
imulb
sahf
dec
incl
cld
and
daa
jmp
test
jecxz
leave
dec
cmp
addl
push
and
fmull
mov
or
cmp
adc
mov
out
rcl
cmp
insb
ret
jmp
gs
adc
pop
ret
int3
jle
insl
mov
insb
inc
outsb
jecxz
xchg
fldcw
popf
and
xchg
push
push
ja
hlt
test
jmp
inc
fnstsw
std
pmullw
jle
dec
mov
push
lds
pop
inc
push
jmp
call
ficompl
sub
jo
jg
push
xchg
hlt
xor
mov
mov
mov
or
je
inc
jo
and
mov
mov
je
add
and
pop
mov
imul
imul
xor
jg
stos
inc
pop
and
mov
daa
subb
mov
icebp
push
inc
mov
add
int
shll
sbb
mov
sbb
dec
je
jp
and
xor
scas
shll
cmp
pop
aas
in
jo
xchg
ja
xchg
cmp
icebp
in
push
jb
pop
das
repnz
shl
aaa
shll
leave
fs
lods
js
dec
icebp
cmpsb
pop
and
dec
or
out
mov
rclb
lret
insb
adc
dec
cld
jb
dec
dec
rcrl
rep
jae
and
testl
roll
scas
xor
push
jmp
and
xchg
add
into
cmp
in
sbb
test
notl
lock
sbb
xor
pop
xchg
mov
cmc
je
mov
les
enter
jle
xor
dec
sub
jl
arpl
add
outsl
mov
sbb
test
insl
inc
lret
rorb
rclb
sub
mov
mov
aas
mov
test
jmp
rcll
jl
xchg
lea
imul
addr16
pusha
xchg
gs
scas
pop
push
xchg
inc
xor
xchg
cwtl
sbb
ret
das
lret
mov
sarb
jge
and
xor
or
mov
push
add
rorl
push
imul
int3
cmp
popa
inc
add
sbb
mov
fcoms
fmuls
or
cld
sub
aas
fwait
mov
dec
leave
lods
test
jb
sahf
jae
cmpsb
std
adc
add
popf
xor
push
or
imul
cmpsb
mov
xchg
jmp
mov
push
xchg
movsl
insb
and
pop
test
test
push
and
inc
lock
or
fs
lahf
and
add
fists
inc
mov
cmp
mov
add
ret
sbb
daa
mov
jo
fists
lods
loopne
sub
or
xor
xor
push
ror
push
dec
mov
or
inc
push
jl
enter
scas
jg
cmc
push
add
push
dec
lds
icebp
mov
jnp
outsb
xor
lea
push
jne
push
subl
fisubs
inc
fsubs
outsl
xchg
xchg
dec
pushl
aam
or
aam
and
add
adc
pop
popf
sti
cmc
adc
lods
addl
xor
add
jmp
mov
mov
and
inc
pop
popf
adc
xor
dec
popf
or
and
sub
inc
movsb
cmp
jle
mov
out
sbb
mov
mov
fdivrp
xor
pushf
sar
dec
mov
adc
cvttps2pi
and
stc
mov
xchg
dec
jbe
pop
cmp
nop
push
test
add
lods
ss
arpl
jnp
lcall
iret
stos
and
or
xor
push
lds
mov
and
mov
in
lcall
and
and
cmc
add
push
sbb
movsl
push
iret
test
stc
inc
xchg
sarb
popa
sbb
pop
or
pop
in
mov
sub
sub
roll
gs
mov
ror
mov
xor
cli
es
loop
shl
test
cltd
push
mov
dec
popf
sbb
add
pusha
das
divb
xchg
popl
iret
sub
shr
or
mov
push
mov
ret
mov
insb
into
jae
in
pop
stos
jo
pop
stc
popa
pop
movsb
mov
in
outsl
div
mov
repz
stos
outsb
or
addr16
mov
std
mov
cmpsb
xor
andl
mov
ja
iret
jb
jae
or
add
rcrb
sbb
add
inc
in
pusha
addb
cmp
or
xchg
xor
push
inc
push
jle
mov
sub
jle
sbb
repnz
push
or
sbb
sub
xor
mov
jb
orl
addb
push
ret
mov
sub
movsl
or
adc
mov
inc
les
je
mov
xchg
aas
invd
jne
mov
mov
test
lock
shr
loop
add
pop
es
loop
test
sbb
jne
jo
dec
fsubrl
ljmp
jo
push
mov
adc
and
or
jg
in
xchg
and
xor
xchg
loop
popl
mov
jl
mov
imul
pop
sbbl
cmp
popf
mov
mov
inc
push
sarb
in
ret
inc
pushf
add
xor
mov
and
sbb
addr16
pop
xorl
mov
inc
leave
aam
cmp
loopne
mov
mov
iret
mov
adc
cmpsb
pop
jge
ds
add
mov
js
cmpsl
xchg
mov
cmp
fstpl
jns
jbe
push
mov
outsl
cmpsl
ret
pop
sub
js
popf
std
in
test
rolb
notl
mov
push
lea
std
addr16
fwait
xor
xchg
les
jae
fcoms
in
clc
jno
mov
fs
and
popf
jne
mov
loopne
testb
cmc
imul
rcrb
imul
cs
xchg
jecxz
adc
add
sub
ret
mov
loop
les
int3
out
push
scas
mov
into
or
cmpsl
add
push
adc
inc
and
add
and
mov
xor
jg
xchg
lret
sbb
ja
mov
jbe
jb
mov
cmp
in
push
pop
pop
sar
pop
pop
xor
mov
mov
iret
lret
scas
movsb
outsb
in
test
jo
jl
jge
shlb
ljmp
loopne
ja
leave
ficoml
dec
ss
std
or
mov
inc
inc
mov
add
jge
sbb
inc
shlb
mov
xchg
sub
pop
sub
push
jg
push
sub
jnp
cld
loop
aam
jmp
sub
test
add
out
fists
test
cmpsl
iret
inc
add
mov
and
or
out
mov
mov
shlb
and
daa
sbb
mov
cmpsb
inc
mulb
je
adc
int3
test
cmp
shlb
sar
or
inc
popf
and
imul
pop
test
outsb
repz
std
mov
lcall
shr
xchg
imul
fs
cmpsb
push
jp
jbe
daa
test
js
cmpsl
testl
jge
aad
cmp
cltd
mov
pop
adc
es
cs
fdiv
sub
imul
xor
adc
icebp
outsb
orl
adc
cmpsb
outsl
cli
mov
movsb
inc
push
je
test
xor
mov
out
rclb
mov
cld
xchg
pop
inc
cmc
push
xchg
xchg
cmpsl
push
shll
in
testb
jp
sub
xchg
aam
adc
adcl
pop
cmp
sahf
test
mov
test
push
sar
dec
fdivs
aas
loopne
aad
mov
fidivs
push
sbb
rorb
push
or
jb
push
inc
mov
xor
jmp
scas
daa
inc
inc
or
jbe
loope
mov
mov
imul
ds
std
jecxz
bound
or
pop
insl
push
jb
leave
sbb
xor
fs
cwtl
adc
xchg
inc
xor
cmp
aad
xchg
push
and
cmpsb
jbe
adc
ljmp
jns
push
add
push
jle
pop
push
push
sarl
sbb
call
mov
sti
into
sub
andb
xchg
xchg
sti
call
and
or
sti
or
outsl
in
and
inc
sbb
popa
push
insb
sahf
adc
test
sub
imul
cmp
push
push
aad
xchg
out
jno
cs
xor
fsub
daa
xchg
mov
cltd
out
jae
mov
xchg
lods
inc
aaa
push
std
lret
jb
pop
lods
loop
cmc
add
sahf
ljmp
add
push
sbb
dec
push
inc
dec
or
push
fnstenv
mov
pop
lods
jmp
adc
test
push
jns
ret
int
or
repz
insb
mov
mov
fs
pop
xchg
xchg
test
fildll
dec
dec
and
in
xchg
lds
mov
inc
arpl
lahf
mov
push
cli
stos
out
sub
popf
aas
adc
mov
fwait
and
push
dec
cmp
fstl
jno
fsubs
jl
inc
and
in
xchg
in
cmpsl
repz
divb
cmp
roll
outsb
ud1
push
sbb
sbb
add
outsl
ret
fisubrs
popf
xor
rol
rorb
sbb
cld
push
int3
lea
pop
mov
test
enter
add
aam
clc
adc
sub
aad
sbb
test
jne
xchg
outsl
movl
mov
mov
sub
outsb
pusha
cs
mov
sbb
xor
out
lds
jg
jbe
leave
xchg
push
xor
sbb
test
lahf
fistpll
jbe
js
push
clc
fst
pop
xlat
jle
sbbb
lods
lods
adc
mov
mov
int3
ficomps
mov
and
sahf
xchg
sbb
dec
fdiv
in
sub
and
sahf
push
dec
mov
jp
push
pusha
jmp
mov
ret
pusha
cmp
std
inc
or
push
cmp
fsub
cmpsb
cli
mov
xchg
push
sahf
out
adc
or
sarb
mov
rolb
inc
test
inc
rcrl
daa
fcmovb
or
stos
dec
xchg
xchg
sub
sti
sbb
stc
sub
adc
sbb
fsubr
popa
mov
xchg
xor
dec
mov
add
add
pusha
enter
bound
adc
mov
movsb
andl
sub
ficoms
push
in
fsubrs
ljmp
inc
sbb
push
sahf
dec
lods
gs
data16
cs
rclb
cmp
outsb
mov
mov
icebp
cmp
pop
add
mov
pusha
shll
hlt
scas
xchg
pop
lock
mov
dec
cmp
int
ja
cli
jo
xchg
adc
mov
xchg
push
fldcw
mov
cmpl
int
aas
ljmp
loope
ja
filds
xchg
inc
xchg
or
or
sbb
or
mov
add
mov
cmp
fidivl
faddp
mov
imul
adc
jge
iret
rorl
mov
fldcw
aas
cmp
and
xor
mov
pushf
es
mov
mov
jno
outsb
xor
xchg
push
adc
mov
xchg
push
fs
std
stos
sub
inc
movsl
movsl
add
pushl
cli
sarb
ja
jp
lods
pop
movsb
cmp
iret
gs
or
cmp
mov
test
movsb
add
shr
nop
subl
mov
mov
xchg
jle
mov
enter
fs
adc
xor
jne
mov
jae
inc
imul
jg
fucomp
adc
fs
push
pop
cmp
inc
aas
or
jg
mov
iret
aas
mov
push
pop
jnp
cmp
stos
sub
inc
inc
lods
sbb
or
popf
sub
outsb
lcall
xchg
mov
pusha
or
movsl
jmp
dec
insb
xchg
add
and
xor
mov
push
jg
or
sub
xchg
push
xchg
inc
sahf
and
mov
xchg
inc
mov
sub
sarl
mov
sbb
jns
cmp
ss
mov
xchg
inc
or
pop
out
in
xadd
push
into
inc
xlat
pop
sub
mov
or
cmp
aam
leave
mov
enter
jae
mov
jo
and
or
jne
inc
pop
lcall
ret
xchg
sbb
imulb
andl
and
rorb
or
dec
sub
sub
mov
mov
fwait
pop
mov
xor
mov
push
add
mov
shrl
xor
lds
in
inc
iret
lds
pop
mov
inc
and
pop
dec
sub
xor
jge
xlat
sub
mov
dec
xlat
test
cmpsb
push
pop
pop
dec
outsb
adc
or
push
lods
jl
xor
in
enter
or
gs
fcmovbe
jo
pop
loop
das
and
andb
adcl
xor
pop
stos
test
lea
mov
jno
pop
pop
loop
mov
or
push
stos
jl
pop
outsl
lea
std
cld
xchg
stc
dec
lret
jecxz
dec
popf
call
mov
sub
aas
out
jecxz
sarl
cwtl
ljmp
inc
mov
popa
popf
push
cmp
and
hlt
sti
shlb
faddl
sbbb
ljmp
xorl
lahf
imull
xlat
xor
or
push
add
ret
hlt
xchg
push
xchg
add
lods
notl
dec
adc
scas
loop
dec
rcl
sbb
push
push
addb
cltd
xchg
ret
add
inc
xor
sub
fwait
not
rcll
ffree
int
test
jno
pop
cltd
loopne
mov
das
dec
jno
pop
out
fisubrs
sub
subb
cmpsb
sbb
sbb
jae
cmc
sarb
ja
outsl
aam
fmulp
ss
xor
mov
gs
xor
push
dec
pusha
adc
mov
xchg
sti
inc
enter
jle
enter
test
mull
call
cmp
cmpsl
aas
mov
mov
or
jne
jge
les
lock
gs
in
mov
sub
pop
aas
cmc
scas
sbb
mov
inc
jmp
in
cmc
sti
mov
xor
rclb
pusha
mov
imul
push
push
lahf
inc
popa
xchg
sbb
push
xchg
xchg
divb
dec
mov
adc
not
sub
mov
leave
dec
gs
push
jo
xor
push
cmp
cltd
or
cmpsb
or
or
sbb
outsl
and
data16
pmaxub
std
pushw
or
call
pop
jb
inc
cmp
add
repnz
sub
mov
adc
xchg
dec
mov
xchg
addb
icebp
ja
punpcklbw
imul
data16
lahf
loopne
int3
insb
lea
lods
dec
mov
sub
outsb
mov
loopne
pop
pop
mov
or
mov
adc
imulb
mov
jl
aad
sbb
sbb
and
shrb
push
fidivl
mov
mov
sub
sbb
ss
push
push
push
xchg
jb
test
push
mov
cmp
into
lret
mov
enter
adc
sub
ja
jb
orb
mov
jno
xor
rorl
inc
jae
js
dec
mov
and
std
call
pop
xchg
fbld
into
cltd
xor
pop
pop
sub
data16
loop
test
iret
test
aam
daa
enter
pop
je
loopne
push
cmp
add
and
lods
addb
divl
cwtl
adc
lret
cwtl
and
fsubr
lret
push
xchg
push
sti
ds
lahf
jb
inc
test
add
pushf
sub
not
fisubs
fdivrs
movsl
lds
jl
fisubs
les
pusha
jecxz
adc
xor
jne
ficompl
pop
mov
test
pop
addr16
loop
into
lahf
xor
stos
xorl
cmpsl
cmpsb
push
sbb
daa
pushf
pop
dec
pusha
jb
and
mov
inc
cmp
pop
add
es
pop
xorl
jg
scas
nop
lock
jge
dec
loopne
fsubl
jnp
stc
xchg
icebp
mov
insl
ret
popf
fnstenv
loop
or
je
outsl
rcrb
call
adc
cwtd
mov
sti
call
or
movsb
adcb
push
adc
push
jg
xchg
ret
mov
dec
mov
pop
sbb
adc
adc
inc
fwait
sbb
xor
or
cld
ret
mov
stos
jae
push
ss
mov
push
mov
cmpsl
lret
imul
shlb
loop
in
adc
sarb
sub
mov
xlat
movsb
test
int
dec
in
push
arpl
cmp
loop
inc
xchg
inc
inc
rol
shrb
mov
fwait
jge
xchg
xor
inc
mov
mov
xchg
stc
mov
pop
dec
mov
sti
scas
loop
inc
aam
mov
pop
loop
dec
das
daa
js
ljmp
or
sub
lcall
inc
or
inc
aaa
jl
mov
inc
cltd
push
into
and
cmp
xchg
inc
out
mov
or
test
push
jecxz
sub
aad
mov
in
cmp
mov
shr
and
dec
jae
dec
jnp
ret
add
jge
and
pop
in
test
roll
arpl
aaa
push
out
pop
popa
mov
cmp
outsb
inc
xor
int3
xchg
mulb
cld
push
jmp
cs
and
and
dec
adc
pop
jb
lret
mov
test
push
sbb
add
imul
pop
stos
fldl
xor
and
or
inc
fdivl
out
pop
andb
out
cmp
out
and
cmpsl
dec
aam
dec
add
sub
sub
stc
add
and
jp
sub
or
outsl
bound
aas
dec
xor
sbb
movl
mov
mov
aas
dec
or
mov
shlb
clc
sbb
call
scas
stos
xchg
lret
jbe
shr
sbb
push
loopne
adc
mov
mov
push
xchg
inc
imul
sbb
jns
xchg
jo
cwtd
mov
xchg
push
jl
mov
or
fwait
ss
jbe
addr16
adc
sti
test
pusha
pushf
pop
cs
mov
divb
orl
cwtl
add
inc
mov
jecxz
fsubl
rorl
in
mov
lret
test
dec
fstps
into
in
push
xchg
xlat
xchg
mov
dec
mov
pusha
into
xchg
fistl
push
in
mov
popf
rolb
fdivl
inc
adc
xlat
and
mov
int
imul
dec
or
add
add
dec
sub
sub
mov
aaa
in
adc
loop
nop
push
rcrl
sbb
mov
sti
loop
das
xchg
out
mov
iret
stos
cmp
insl
mov
or
push
cli
cs
sti
push
jns
jp
mov
ret
bound
shlb
mov
fsts
enter
inc
or
in
sbb
inc
inc
gs
or
fmull
xchg
leave
pop
jb
or
cltd
adc
in
mov
and
add
and
rcr
push
test
xor
sahf
sub
test
into
vmwrite
cmpsl
imul
outsl
dec
arpl
int3
xor
mov
xchg
rolb
xchg
pop
push
push
sbb
dec
loopne
pop
xchg
pusha
jmp
sub
sub
mov
mov
pushl
out
sti
cld
out
mov
test
xor
xor
push
mov
mov
xlat
push
cmc
inc
jno
jns
lahf
sbb
and
xor
lret
pop
add
mov
faddl
in
data16
sub
fldenv
mov
xlat
out
or
les
fldlg2
xchg
dec
repnz
pextrw
mov
inc
inc
arpl
jg
and
fwait
lock
loope,pt
fs
push
cmc
mulb
test
mov
jnp
je
in
sub
adcl
mov
sbb
cmp
xchg
xor
xor
mov
std
xchg
fadds
repz
stos
mov
and
mov
adc
xorl
sbb
and
xchg
jno
addr16
and
lret
insl
inc
outsl
je
mov
sbb
xor
pop
mov
xchg
std
loopne
dec
push
das
cmpsl
fildll
aam
cmpsb
fabs
sahf
loopne
insb
fldenv
clc
push
imul
out
adc
mov
repnz
icebp
inc
inc
xor
or
pusha
mov
jmp
inc
jg
jecxz
lods
flds
lahf
cli
dec
xchg
nop
adc
sbb
ret
popa
fldcw
pushf
or
or
cmp
xchg
xchg
ret
push
in
mulw
aas
aas
or
test
adc
outsb
popa
loop
push
pop
cwtl
pop
xor
aaa
imul
aas
jle
adc
cld
inc
and
inc
xchg
mov
daa
xchg
xchg
inc
in
int
test
mov
fwait
push
mov
pop
cmp
movsb
into
jbe
mov
dec
jo
jle
popl
loop
pop
aaa
pop
inc
icebp
add
or
aas
out
mov
lods
inc
iret
in
test
pop
repnz
pop
lods
movsb
in
popf
out
outsl
mov
xchg
inc
rolb
bound
or
pop
out
xchg
inc
pop
push
adc
push
sbbl
dec
xchg
jnp
jmp
and
cmp
mov
jecxz
mov
cld
jns
push
mov
test
mov
xor
int
cs
cmp
movsb
ret
sub
add
push
cmpsb
xchg
aaa
dec
push
push
mov
inc
ret
fisubs
addr16
les
mov
xchg
jno
pop
push
inc
out
sbb
dec
fiadds
ljmp
subb
pop
das
test
adc
push
fcmovnu
and
adc
outsb
inc
inc
cmp
repz
and
sub
faddl
das
push
popf
mov
fisubs
out
xchg
adc
out
cmp
outsb
jns
shlb
cmp
and
jne
int
add
or
sbb
in
ret
dec
testb
ds
inc
mov
mov
dec
repz
xchg
adc
jmp
movsl
xchg
cmp
mov
or
pop
mov
fwait
cmp
fwait
sbb
out
sub
jo
iret
and
sbb
mov
insb
dec
mov
arpl
testb
idiv
sbb
int3
inc
pusha
pop
fs
xlat
cmpsl
xor
jnp
sub
addb
arpl
lcall
lds
rcrl
lret
iret
sub
btc
mov
add
fwait
nop
jp
push
pushf
icebp
cmp
and
or
int3
xor
icebp
add
mov
pop
jbe
cmpsb
xchg
test
pusha
or
sbb
cmpsb
push
adc
daa
jnp
lods
in
sub
lods
xchg
pop
xor
jae
andl
inc
inc
xlat
outsb
mov
and
sbb
add
push
or
vpsubsw
fldt
sbb
shlb
cmp
xor
sahf
mov
sub
ret
mov
hlt
inc
mov
jno
rcll
cmp
jnp
ss
int
push
inc
inc
mov
test
or
adc
outsb
in
orb
sbb
popa
push
fnop
lret
test
imul
sbb
push
xor
inc
jbe
dec
pop
lods
sub
test
sbb
adc
mov
lds
jmp
pop
out
jbe
dec
or
jp
dec
adc
inc
gs
inc
xchg
or
or
dec
cmpsb
jns
in
je
les
mov
popa
jbe
nop
and
jne
hlt
adc
pushf
mov
aad
mov
mov
add
xchg
imul
mov
rcll
jg
call
sub
mov
aas
bnd
cmp
test
roll
jae
or
adc
mov
dec
ret
dec
das
cmpsb
fisttpll
mov
leave
je
in
inc
iret
andl
or
mov
mov
movsb
mov
inc
mov
mov
std
jo
les
das
jnp
jmp
pop
in
adc
imul
lds
test
push
fabs
inc
or
pusha
test
icebp
xchg
orb
dec
data16
shlb
lods
shlb
ret
and
jge
in
movsl
insl
and
and
fcomps
aad
addr16
or
push
sbb
cmp
adc
subl
mov
es
inc
adcl
mov
loop
lcall
xchg
mov
ret
icebp
pop
ja
xor
xchg
das
mov
data16
adc
movsl
aaa
out
repnz
jae
rcll
add
push
gs
push
and
mov
add
jo
rorb
fadd
adc
adc
pop
sub
mov
mull
add
cmp
les
sarl
fistl
adc
add
xchg
mov
in
xchg
inc
jae
jecxz
mov
cltd
and
sbbl
dec
in
xor
dec
mov
je
dec
xlat
loope
push
ret
int
add
pop
mov
leave
in
xchg
sbb
popa
mov
jl
adc
popf
repz
sbb
scas
sub
popa
aas
jge
push
pusha
pop
jmp
cmp
call
sbb
sbb
sbb
jnp
mov
pop
dec
jb
adc
xchg
add
stos
jmp
orl
mov
push
mov
sbb
dec
aas
mov
enter
mov
iret
sahf
popl
int
cmc
inc
inc
mov
out
inc
out
add
cmp
jae
add
nop
mov
add
add
add
mov
mov
push
es
cmp
xchg
dec
adc
mov
add
cld
inc
shlb
shlb
push
movsl
test
mov
in
shlb
or
jecxz
out
in
lea
mov
push
ss
dec
jbe
and
sub
mov
mov
mov
jo
std
adc
out
repz
clc
out
add
inc
int3
pop
movsl
xchg
and
das
in
mov
mov
sbb
cld
mov
popf
aad
jmp
leave
out
jo
ret
sahf
icebp
sbb
xor
dec
xchg
out
mov
nop
test
stos
aam
fcomi
jno
pushf
or
mov
fisubrs
mov
ret
popa
xchg
scas
jne
jmp
dec
cmc
pop
aas
xchg
xchg
sbb
je
mov
jnp
idivb
sub
jg
mov
mov
out
cltd
int
jbe
test
adc
lods
loope
push
xchg
std
or
roll
aaa
jb
cmp
mov
fdivl
sarb
scas
lret
dec
and
and
cld
push
pop
pop
inc
fdivl
fadds
in
xor
and
push
add
icebp
mov
daa
movsb
out
sbb
aaa
jnp
mov
push
ret
stos
addr16
pushf
xchg
movsl
into
xchg
xchg
clc
enter
adc
and
cmc
rorl
out
adc
pop
inc
push
shrl
nop
test
and
scas
jecxz
cmp
fs
mov
dec
out
mov
inc
in
dec
das
sub
js
dec
es
mul
divl
inc
lahf
or
idivl
movsl
mov
xchg
test
popf
cs
jg
out
cld
xor
stos
outsl
call
push
jge
sbb
xor
push
dec
dec
mov
push
in
ja
cmp
and
mov
ret
test
jle
subl
xlat
pop
dec
aas
mov
xchg
repz
and
enter
movsl
dec
mov
clc
cmp
sarb
and
cmp
fs
mov
mov
add
add
repnz
imul
insb
lock
in
pop
daa
adc
mov
or
lgs
xchg
imul
pop
mov
push
mov
pop
shrb
iret
fistps
fmuls
cmpsb
jbe
xchg
fcmovbe
ret
or
ret
cmp
cmp
cmp
jo
imul
ret
je
in
test
into
dec
push
sub
sarl
xchg
pop
stos
or
fwait
push
inc
roll
xchg
cmp
inc
inc
adc
mov
dec
gs
stos
aaa
rorb
and
inc
push
mov
xor
mov
rcrl
mov
push
inc
xchg
push
mov
mov
mov
jmp
push
getsec
sbb
in
fwait
movsl
popa
xchg
adc
push
and
mov
insb
addr16
jb
mov
dec
pop
inc
jg
sub
mov
cmp
mov
jne
rcrl
vmread
mov
mov
cs
subb
lds
pop
movsb
inc
rcrl
mov
add
cmc
lcall
addr16
out
jns
pop
and
imul
mov
int
int
mov
ja
and
mov
outsb
sub
mov
call
or
mov
movsb
fs
enter
popa
icebp
jle
dec
lds
ja
adc
test
mov
inc
jmp
ja
dec
mov
outsl
pop
xchg
setae
add
mov
jns
and
insl
mov
push
pusha
cmp
push
insl
sbb
icebp
jg
in
adc
sub
pop
mov
aaa
inc
in
xchg
push
and
scas
xchg
add
push
insb
or
movsl
mov
decb
adc
jp
mov
out
pop
jae
push
inc
std
std
xchg
sbb
cmpsb
mov
xor
in
insb
stos
push
pop
xchg
push
cmp
lret
insb
mov
data16
aam
mov
sarb
ret
jbe,pn
mov
jbe
xchg
mov
pop
in
jge
data16
jns
repnz
mov
cmpsl
jmp
daa
push
xor
es
mov
mov
mov
mov
push
push
push
pop
idiv
loop
sub
jae
and
or
in
mov
je
pop
divl
push
adc
inc
jns
xor
call
cmp
cmp
lahf
adc
pop
mov
and
loope
xchg
adc
fnstcw
jp
mov
inc
in
mov
and
lret
mov
mull
xor
lret
jns
negb
imul
jo
ss
lea
es
push
push
xchg
fmuls
dec
test
and
in
mov
ret
daa
mov
stos
aaa
jo
out
xchg
pop
test
inc
popa
ds
mov
inc
xor
mov
push
cmpsl
xchg
mov
xchg
inc
inc
stc
push
movsb
jl
pop
fnsave
outsl
movsl
fs
out
je
xchg
jg
jnp
unpcklps
loope
jnp
jmp
jmp
jnp
pop
mov
les
lods
dec
sub
insl
fildl
shlb
push
ficompl
push
jbe
pop
imul
sub
jo
xchg
push
inc
jno
xor
arpl
xor
adc
ffreep
adc
sub
adc
cmc
test
test
jnp
jl
ja
sbb
mov
adc
pop
push
mov
int
mov
je
inc
pop
ret
adc
or
arpl
sarl
test
dec
cmpl
jmp
adc
mov
cmp
push
cmp
cli
xor
jp
and
stos
jg
cmp
fwait
out
or
adc
xor
daa
sub
fstpl
jnp
push
shll
dec
arpl
mov
push
mov
jb
test
in
xchg
mov
mov
inc
loop
in
inc
mov
cltd
jbe
jnp
mov
sti
loope
mov
mov
pop
mov
cmp
mov
adc
mov
in
dec
dec
and
push
xchg
mov
push
or
enter
ficomps
pop
test
push
ret
popa
addr16
cli
lret
inc
sbb
cmp
pushf
jmp
fdivl
cmpl
addr16
push
mov
jo
inc
sti
dec
fxam
dec
adc
mov
pop
lahf
andb
push
lea
stc
pop
adc
inc
mov
or
sbb
xchg
dec
or
push
mov
ja
pop
fldt
aam
jns
stc
ret
mov
inc
xor
hlt
subb
pop
sub
test
cld
mov
sub
push
mov
xor
cwtl
call
or
push
jae
pop
fldt
inc
mov
clc
mov
loop
aas
inc
jmp
divl
jne
push
jl
mov
notb
jge
cltd
fildl
cld
in
or
add
adc
push
fstpt
mov
shrb
or
lds
pop
add
lods
adc
clc
hlt
push
lods
outsl
test
mov
lea
add
mov
and
add
clc
or
leave
into
xor
in
add
and
adc
mov
mov
jp
mov
aad
adc
ja
lea
call
jle
jns
out
inc
lret
jne
fidivrs
and
xchg
mov
xchg
and
scas
das
add
sbb
sub
repnz
sbb
stos
mov
inc
mov
pop
pop
scas
les
enter
pop
jp
cmp
mov
push
mov
and
jecxz
orb
fwait
and
call
cmp
sbb
mov
mov
add
std
cmp
push
and
test
lock
xchg
jae
por
mov
pushf
or
or
cld
push
outsl
das
mov
add
clc
cmp
mov
dec
out
mov
mov
addr16
lds
lcall
push
std
cli
test
pushf
pop
sub
movsb
lahf
rcrb
cwtl
pop
push
xchg
pop
and
mov
ror
dec
add
sbbb
test
je
and
inc
iret
cld
clc
ret
aad
push
mov
ret
cs
stos
je
stos
outsl
cmp
jnp
sbb
mov
lahf
iret
out
dec
mul
es
xor
rcl
cmp
into
cmp
pop
lds
mov
pop
rcll
add
decl
sbb
sti
mov
call
push
mov
cld
cs
pop
pop
das
adc
jg
imul
lret
scas
lock
and
inc
xor
adc
push
fwait
neg
jae
fisubrs
inc
or
pop
mov
sarb
dec
mov
lock
loopne
push
jle
jp
mov
xor
pusha
add
lods
inc
pop
dec
xor
adc
data16
stos
lods
shll
daa
dec
mov
cwtl
add
sub
mov
jge
add
rcll
sub
cmp
adc
add
and
cwtl
xchg
mov
outsb
dec
sbb
jnp
adc
sbb
push
push
cmp
inc
pop
add
cmpsl
shl
dec
push
fnstcw
clc
pop
dec
or
repz
cli
aas
hlt
jmp
inc
imul
test
and
mov
pop
pushf
sbb
stc
scas
dec
fidivs
in
pop
ljmp
sub
sbb
push
sbb
cmc
movsl
xchg
jg
and
adc
int
adc
out
cltd
rorl
dec
loop
push
std
adc
movsb
jno
push
push
pop
adcb
mov
bnd
xor
dec
lcall
adc
aad
orb
icebp
push
dec
xor
outsb
bound
push
negl
bound
cmp
and
cmc
repnz
lock
pop
or
mov
xchg
xor
sahf
pop
jbe
pop
or
rcr
ljmp
test
cmp
in
gs
sbb
inc
jp
add
jecxz
ret
mov
or
push
shr
ret
sbb
mov
lcall
outsb
shl
add
and
pop
mov
or
push
outsl
rcll
jg
add
mov
sub
aad
cmp
add
jnp
addr16
stos
xchg
mov
pusha
sub
mov
inc
mov
inc
enter
in
outsb
dec
or
cmpb
sbb
xchg
insb
test
lods
lcall
push
popf
das
adc
popa
sub
push
test
les
mov
cld
xor
and
out
jb
inc
je
sub
push
cmp
mov
pop
aas
pop
mov
mov
divb
test
sahf
sbb
insl
rclb
pop
inc
or
xchg
mov
fists
pop
pop
imul
stc
or
add
adc
out
adc
mov
push
or
ss
fsubrs
je
decb
xor
movsl
inc
pop
or
insb
or
or
xchg
js
add
mov
dec
add
inc
jae
adc
cmp
rcll
pop
jb,pt
iret
cmp
mov
jg
pop
stos
jns
cmp
lds
repz
fdivr
adc
div
and
test
pop
daa
lret
dec
push
or
and
ret
fsubs
divb
pop
cmp
mov
shr
dec
shl
jecxz
lods
sbb
mov
out
jg
cmpsb
xor
test
hlt
or
pop
and
cmpsb
add
xchg
dec
fimull
test
fidivl
xlat
lea
inc
in
jnp
cmp
lcall
lods
sbb
in
adc
js
daa
in
call
out
cmp
dec
cmp
movsb
pop
sbb
outsb
into
ja
lock
sti
out
xor
out
cwtl
push
jge
jl
jns
or
mov
les
nop
out
scas
insl
mov
add
ret
sub
icebp
cmpsl
mov
mov
cmp
cld
hlt
jl
pusha
out
fwait
mov
xor
mov
adc
pop
ret
and
in
xchg
xchg
push
or
nop
cmp
test
test
adc
test
inc
ret
push
mov
mov
repnz
mov
nop
mov
mov
sub
cmp
aaa
in
mov
std
cmpsb
xlat
mov
mov
jmp
pop
test
cmp
repnz
push
loop
pop
popf
out
mov
push
mov
adc
xor
dec
mov
and
push
pop
inc
jbe
ss
sbb
ja
dec
xor
out
movsl
aas
sub
lahf
mov
cmp
xor
sbbl
add
or
rcrl
lods
mov
xchg
jge
sub
inc
or
cmp
mov
mov
lods
inc
lods
call
lahf
cmp
push
arpl
scas
addl
push
mov
movsl
pop
mov
daa
das
bound
mov
in
arpl
sbb
test
xor
aaa
mov
hlt
dec
inc
push
stc
mov
jo
jbe
fistpl
movsb
out
hlt
test
xor
sbb
mov
xchg
in
add
pop
push
add
sbb
popf
mov
fidivs
inc
pop
test
dec
in
sub
dec
outsl
cmpsb
push
lcall
adc
or
sbb
push
into
call
fstpl
pop
xor
aaa
pop
xchg
arpl
jecxz
inc
xor
jne
enter
loopne
add
leave
lret
xor
das
jecxz
in
dec
das
call
imul
mov
mov
mulb
pop
xlat
out
push
lods
pop
push
negb
ds
jle
test
fimull
sti
dec
and
mov
jmp
data16
xchg
popa
sbb
push
ficomps
lret
leave
js
mov
mov
push
adcb
out
loop
aad
aaa
inc
mov
xchg
mov
sub
popa
adc
lret
loopne
add
nop
stos
sbb
jno
lahf
mov
out
cs
cmp
xchg
inc
into
mov
imul
push
imul
gs
test
and
scas
insl
cmp
call
xorl
cmpsb
sbb
ret
jle
adc
dec
mov
test
push
repz
pop
insb
push
aam
popf
jne
push
mov
fidivl
movsb
cmp
out
pop
jmp
cmp
int3
lods
lods
sub
js
inc
repz
shll
sahf
sub
dec
ret
push
add
test
fbstp
fsubrl
push
jnp
push
inc
jno
dec
popf
pop
push
inc
and
mov
add
jae
call
mov
lods
movsl
pop
bound
xchg
test
and
inc
shl
es
adc
iret
repnz
aaa
popf
adc
ds
ss
aaa
xchg
mov
adc
mov
outsb
fcmovb
repz
cmp
mov
sub
jle
int
or
or
mov
push
pop
pop
jl
inc
mov
lods
mov
adc
xchg
les
pop
nop
jecxz
sub
into
push
adc
or
call
sahf
cmp
stos
mov
add
outsb
insb
or
lahf
lods
xchg
aaa
ficomps
out
jle
dec
jle
sbb
adc
dec
pop
imull
xchg
xlat
xor
push
jae
loope
cmp
push
aaa
cmp
fnstenv
out
xchg
enter
add
pop
xor
jmp
xchg
pushf
or
xor
xor
dec
mov
nop
inc
cmc
rcrb
aaa
cmc
inc
or
sbb
aad
push
push
xchg
push
adc
jl
pop
push
sbb
mov
call
mov
add
mov
insb
xchg
cmp
inc
pop
cmp
ret
lods
in
cmc
sub
jmp
iret
xacquire
ret
cwtl
cs
orb
stc
rcll
les
jb
pushf
cld
out
mov
dec
movsb
mov
xchg
push
ja
mov
shll
sbb
in
scas
dec
pop
ret
lds
xchg
cwtl
popfw
popa
push
pop
inc
push
popa
mov
les
jo
pop
cltd
pop
leave
das
mov
cs
mov
cmp
ds
xchg
lret
or
mov
pop
sub
scas
je
loope
add
pushf
icebp
shlb
push
repnz
pop
mov
push
in
enter
sub
and
push
adc
out
sti
shlb
jne
mov
fnstenv
add
add
out
inc
or
fstpt
and
xor
aaa
push
cmp
mov
in
ljmp
dec
adc
jg
jecxz
in
or
in
ljmp
pop
icebp
data16
cmc
add
mov
or
mov
sbb
das
icebp
in
ret
fsubrl
add
dec
dec
sub
and
or
sub
jmp
adc
xchg
stos
inc
mov
outsb
dec
mov
sarb
dec
jae
rolb
or
dec
lock
xchg
mov
xlat
jl
push
pusha
outsl
orb
fwait
dec
xor
sahf
aam
and
jp
andl
jecxz
ret
iret
adcb
push
pop
scas
and
testb
add
fwait
inc
roll
lcall
and
das
imul
xchg
mov
sub
sahf
jnp
insb
xchg
cwtl
mov
xor
bound
or
fwait
jae
ja
push
xchg
mov
sbb
dec
in
pusha
sar
add
or
cmp
pop
hlt
insl
adc
std
sbb
inc
orl
mov
xchg
mov
dec
cmpl
mov
xchg
push
sbb
loopne
xor
xor
aad
sub
add
loop
xchg
or
insb
cmp
xor
inc
sti
push
andb
dec
jl
mov
mov
cltd
inc
cmpsl
dec
jne
leave
in
adc
sub
nop
or
sub
testb
nop
pop
inc
ss
lahf
mov
dec
pushf
test
stos
pop
inc
xchg
adc
mov
mov
cmp
jmp
iret
fnstcw
ret
inc
loop
pusha
mov
loop
inc
xor
xchg
popf
pop
mov
adc
fisttpl
push
aam
lret
sub
jp
mov
repz
xchg
xlat
jge
lods
test
pop
fcompl
push
lods
icebp
je
int3
pop
inc
mov
inc
jns
mov
sbbb
push
adc
testl
rcrl
pushf
pop
sub
lods
mov
or
loopne
popf
mov
push
cmp
cmp
les
lret
pop
lock
jns
add
sub
dec
or
lock
hlt
clc
hlt
movsl
and
ljmp
and
data16
jae
push
dec
sbb
dec
inc
dec
js
sahf
out
sbbl
push
stos
or
cmp
jb
inc
sbb
stc
jne
mov
adc
adc
pop
cld
mov
loope
pusha
pushf
mov
stc
pop
gs
in
repnz
outsl
xor
lock
movsl
iret
pop
jb
in
mov
inc
jo
xchg
lcall
cmpsb
xchg
jnp
xor
shl
jg
and
dec
pop
dec
fcoms
mov
into
push
and
sbb
add
jns
mov
in
pop
mov
jmp
stos
xchg
dec
jns
pop
jbe
xchg
test
cmp
xchg
imul
nopl
ficompl
dec
jne
aas
adc
and
xor
pop
in
jge
movsb
ja
stc
xorl
pop
dec
rcrl
scas
xor
xor
push
aaa
cmp
fwait
jo
jmp
jb
mov
pusha
gs
fs
std
sti
std
push
repz
fdivs
imulb
pop
add
movsl
pusha
stc
clc
in
mov
scas
ja
insb
insl
xlat
inc
sahf
gs
pop
dec
xchg
dec
pop
fnstsw
mov
mov
push
testb
inc
dec
repnz
pop
mov
mov
jb
xor
push
inc
stos
ret
in
flds
xor
jns
adc
or
xor
cli
in
iret
mov
sbb
add
mov
rolb
mov
gs
jle
and
sub
add
fldt
ret
pop
aas
xor
mov
cmpsl
fsubs
push
xchg
imul
mov
sub
aam
lcall
rcrl
push
out
fsts
out
jnp
cmp
and
cwtl
aad
addr16
das
sbb
or
call
sub
lahf
sbb
add
pop
roll
sbb
mov
jg,pt
mov
cmp
lods
lods
lcall
push
icebp
push
cmpb
imul
insl
lock
adc
xor
adc
stos
pop
mov
sbb
xor
push
push
jo
push
fmull
pop
and
or
push
and
adc
mov
sti
aas
adc
mov
jae
aaa
mov
stos
cmp
xor
in
jmp
std
mov
mov
add
iret
loopne
sub
pop
xchg
mov
pusha
lret
pop
sbb
imul
sbb
sub
repz
test
adc
pusha
pop
pushf
cli
outsb
lods
add
push
shrd
pop
and
lea
fildll
rorl
rcll
imull
dec
js
and
mov
xor
es
push
or
pusha
cmc
pop
setno
movsb
sbbl
addr16
stc
fmull
mov
jns
cmp
scas
xchg
movsb
or
ss
push
test
push
fwait
inc
pop
jecxz
xchg
mov
add
movsb
lcall
out
xchg
pop
mov
mov
popa
cmp
arpl
xor
push
xchg
jnp
ficoms
mov
into
xchg
adc
inc
cmp
fwait
je
push
inc
fsubrs
xor
rcll
sbb
out
lock
sti
cmp
xchg
and
xchg
adc
pop
jl
cld
les
rcll
xlat
add
inc
shrl
or
sbb
dec
sub
repz
pushf
dec
test
jmp
imul
or
xor
xor
inc
push
mov
jns
mov
dec
jb
jns,pn
jle
inc
or
jnp
fsub
test
and
mov
cmp
pop
mov
cmp
adc
lahf
or
std
xchg
dec
imul
xchg
xchg
std
xor
test
xchg
jmp
jbe
ss
cmp
loopne
loope
adc
jp
cmpsl
cmp
pop
fnsave
pop
out
mov
mov
iret
scas
and
pop
aam
jmp
push
stc
or
dec
daa
sub
pop
inc
outsl
sbb
repnz
push
out
jae
pop
dec
dec
fisttpll
cmp
cmp
jp
lahf
fldcw
mov
movsb
mov
lods
fdivs
popa
sub
pop
in
cmp
hlt
xchg
push
mov
or
sbb
repnz
jecxz
jp
add
push
inc
cmp
loop
fstpl
adc
dec
idiv
sti
fisubrl
pop
push
sub
pop
fidivrs
mov
cmp
loope
push
dec
int3
mov
movsl
in
push
jae
std
inc
mov
jo
inc
int3
add
in
in
adc
fwait
push
fildll
xor
mov
xchg
fnstsw
ret
push
scas
imul
sub
xorb
push
mov
js
add
adc
sbb
lcall
mov
pop
imul
pop
cmp
push
mov
imul
aas
sbb
scas
push
pop
and
das
imul
data16
lcall
sbb
andl
and
out
ja
in
push
adc
hlt
es
jge
or
inc
jecxz
jo
mov
mov
les
xchg
mov
mov
cmp
ljmp
iret
fcom
or
in
mov
cmp
and
or
xor
cli
push
xchg
inc
test
inc
in
daa
sub
idivl
xor
hlt
stos
fmull
popa
xor
mov
pop
inc
pop
mov
or
xchg
jp
cmpsb
pop
jnp
push
test
in
and
repnz
inc
pop
imul
push
insb
ds
and
fwait
push
subl
xchg
enter
pop
imul
mov
out
or
cmpsb
cld
pop
push
inc
jb
mov
adc
sub
adc
js
sarb
inc
mov
push
cmp
adc
push
push
loop
je
pusha
jmp
or
iret
dec
incb
into
jecxz
lret
sub
pop
mov
adc
movsb
mov
jmp
orb
stos
xchg
cltd
and
xchg
enter
inc
jp
xchg
sub
cmp
push
dec
stos
out
push
mov
cld
stc
ret
call
push
sbb
add
shr
mov
push
stos
dec
cmp
pop
adc
stos
subl
int
jp
lds
sbb
pop
imulb
lds
std
xor
mov
cs
and
or
cmp
inc
sbb
cli
lahf
pop
jl
cmp
ret
push
lods
outsb
sbb
sub
out
cmp
fsub
int
adc
push
or
arpl
fiaddl
daa
push
lret
or
jns
mov
sbb
cmp
sub
ja
push
popa
popa
mov
mov
jae
mov
fwait
sbb
push
jecxz
fbld
and
xchg
mov
inc
or
repnz
mov
or
xlat
adc
mov
imul
pop
lret
mov
cld
js
mov
call
push
testl
inc
and
pop
dec
js
popf
scas
lds
or
mov
out
mov
out
xor
adc
cmp
add
inc
add
iret
jb
cli
fmul
test
sub
sbb
jp
out
xchg
scas
jbe
cli
mov
mov
mov
stos
add
aaa
xor
out
into
pop
inc
js
xchg
outsb
test
in
mov
stc
mov
or
pop
mov
sub
rcr
mov
arpl
sub
dec
push
popa
xchg
and
pop
adc
mull
fadds
jecxz
andl
imul
push
rcll
orl
and
jmp
xor
psraw
sbb
data16
push
cltd
add
and
adc
mov
pop
mov
push
xchg
ljmp
push
sahf
mov
sub
stos
sub
mov
lods
sbb
aaa
jle
dec
mov
mov
rcrl
jge
mov
hlt
mov
mov
notl
jne
int3
sub
mov
fcmovnu
jecxz
int
clc
push
and
out
xchg
cmp
mov
pop
int
aas
stc
fisttps
cmp
cli
dec
inc
repz
or
imul
movl
mov
lret
or
inc
mov
negl
adc
std
xor
jg
jecxz
inc
daa
cmpsl
mov
mov
movsl
push
push
scas
jo
adc
sbb
jns
jp
mov
cs
clc
mov
mov
pushf
repz
pop
mov
sub
xchg
icebp
xchg
repnz
mov
jnp
xor
xlat
loopne
cmp
aad
lret
arpl
fs
jp
fwait
adc
cli
in
les
or
mov
sub
add
sub
inc
push
stos
dec
mov
out
jmp
sbb
aaa
int3
add
sub
stos
fsts
imul
out
out
jns
in
fdivp
icebp
imul
xchg
mov
push
mov
add
jge
mov
test
in
inc
ss
jg
cli
mov
pfrcpit2
jno
aas
data16
mov
mov
jb
shr
addb
outsl
aas
fwait
dec
mov
insl
dec
imul
cmpsl
fcompl
adcb
pop
out
out
jnp
adc
out
cmc
aam
fildll
inc
inc
lcall
jns
loop
push
mov
jbe
sarl
mov
dec
or
fwait
addl
rcrl
imul
loop
mov
imull
add
cmpsl
mov
es
fwait
test
mov
es
out
adc
aad
lret
and
test
fcmove
test
dec
sahf
or
sbb
sub
pop
xchg
jns
lret
adc
in
dec
mov
xchg
xchg
ja
cli
mov
xor
mov
lret
mov
or
push
stos
pop
jb
cmc
shlb
cli
xchg
jnp
test
call
rorb
dec
sbb
add
ret
fdivrs
mov
cmp
jo
std
sub
dec
mov
and
xchg
or
push
sahf
in
add
cmp
inc
out
jle
arpl
jmp
push
sbb
fyl2x
jmp
mov
aas
pushf
shlb
clc
cmp
xchg
or
loope
popa
push
ja
icebp
lahf
lods
add
cli
sbb
in
push
push
jmp
mov
popf
jo
xchg
mov
jo
sbb
int
lds
xchg
add
xchg
or
add
test
xlat
push
lahf
dec
ljmp
rorb
je
jnp
jae
aaa
jecxz
scas
addr16
mov
cmp
mov
jp
js
pop
test
push
jnp
outsb
shrb
ja
xor
mov
push
mov
dec
aam
or
xchg
dec
sbb
in
mov
inc
or
dec
pop
aad
pop
mov
xchg
jne
mov
dec
pop
add
int3
mov
xor
int
cld
in
les
xchg
and
imull
mov
add
mov
push
dec
jl
mov
sub
mov
jl
lret
jae
dec
roll
cmc
jmp
cmp
rorb
push
sub
lds
imul
xlat
cmpsl
les
stos
lods
mov
rol
xchg
lods
push
sti
ret
out
add
out
jne
sbb
inc
arpl
sbb
fmuls
mov
dec
push
pop
jno
and
xchg
pop
outsl
enter
pop
shrl
xchg
shlb
out
or
and
je
in
mov
sbbl
repnz
adc
dec
in
push
dec
arpl
es
and
mov
mov
ss
pop
sahf
cmp
cmpsb
jno
mov
push
repz
arpl
mov
xchg
or
jmp
jmp
push
xor
and
xchg
jo
adc
shll
mov
inc
adc
push
pop
test
sbb
xchg
scas
ss
subl
mov
push
jge
mov
jno
aad
or
imul
popf
xchg
mov
mov
dec
inc
dec
fiadds
scas
dec
lea
push
arpl
adc
push
cmp
xchg
jp
cmc
inc
mov
sbb
and
cmp
xor
fisubl
push
sahf
add
inc
fnsave
loope
push
and
pop
or
mov
lret
xchg
lret
in
and
ljmp
xchg
mov
das
dec
push
and
add
xor
mov
int3
xchg
jmp
push
inc
add
cli
push
andb
mov
lahf
and
sbb
ljmp
xor
into
xchg
sbb
out
inc
xchg
jmp
into
stc
mov
arpl
cmp
lret
out
stc
cmpsb
jne
xor
and
mov
pop
aam
pop
in
stos
dec
add
pop
iret
insb
aad
out
add
jl
bound
fists
or
mov
mov
lds
test
mov
loop
es
dec
aas
inc
hlt
xor
adc
jbe
xor
ds
test
mov
call
test
outsl
mov
adc
int
adc
js
mov
push
test
mov
cmp
push
pop
shrl
push
mov
mov
sbb
xlat
js
cwtl
cld
sub
gs
sub
inc
mov
sub
pop
subb
out
andb
xor
mov
je
call
mov
lock
pop
or
pop
jae
shlb
jns
movsb
xchg
stos
xor
popf
or
adc
xorl
hlt
mov
xchg
fnsave
in
sti
pop
xchg
outsl
mov
fiaddl
fildll
scas
lret
xor
test
shl
fwait
test
pop
xor
stos
lea
xlat
bound
dec
cmp
cmpsb
cmp
xor
mov
and
jae
mov
mov
xchg
xor
shl
scas
adc
fst
scas
lods
lret
cmp
call
cmp
rcll
fsubrs
and
lds
push
add
xor
ret
rolb
mov
stos
sbb
cltd
pop
fcomps
fimuls
jns
dec
xchg
jp
cmpb
roll
sbb
call
lods
cmp
cltd
in
fistps
jecxz
subl
insl
neg
add
mov
mov
add
xor
sub
ljmp
ja
enter
inc
js
jne
xchg
mov
in
xchg
scas
xor
hlt
insb
jno
dec
sub
adcl
aam
push
and
ljmp
mov
jb
dec
push
ror
push
testb
push
push
push
mov
mov
jne
xor
jp
fldcw
je
imul
mov
sub
pop
icebp
mov
nop
adc
sub
les
xlat
xor
test
push
pop
push
push
inc
xchg
cmp
mov
sub
addr16
shlb
or
mov
pop
and
xor
dec
add
pop
pop
inc
adc
je
xchg
aas
leave
popa
testb
enter
mov
lret
scas
lret
dec
pop
ds
sub
popf
popa
arpl
lds
ret
adc
push
adc
push
loop
mov
adc
in
and
ret
mov
into
imul
inc
scas
repz
andb
aad
mov
pop
insl
aad
mov
vmread
xor
jmp
enter
adcb
movb
ret
push
jg
and
push
ret
inc
inc
stc
xchg
mov
pop
sbb
pusha
dec
sbb
popa
clc
aad
rcll
orb
repz
sub
jle
movsb
mov
sarl
test
ret
repnz
sbb
shll
stos
shl
mov
mov
ss
mov
sub
add
xchg
ss
pop
jecxz
movsb
dec
fists
iret
outsb
fimuls
inc
sub
rcr
add
cs
xor
mov
arpl
int
mov
cmpsb
hlt
push
dec
fs
lret
ljmp
pop
pop
pushf
dec
fsts
add
pop
mov
cmp
rclb
jg
lock
shll
scas
mov
mov
ja
jg
xchg
dec
addr16
test
insl
out
pop
xchg
sbb
call
pop
aam
js
adc
pop
ja
cmp
jmp
rorl
sar
xchg
sbb
push
lods
push
mov
loopne
stos
mov
xchg
and
cmp
push
aaa
call
pop
pop
and
xchg
out
out
jecxz
stc
cmp
stc
bound
jno
sub
push
ja
mov
add
sub
fldlg2
ja
mov
sub
shlb
mov
stc
into
adc
movsl
mov
xchg
out
je
ss
pop
add
dec
in
popa
sbb
dec
mov
xchg
call
mov
lret
out
iret
sbb
test
cltd
xchg
push
adc
cmp
push
mov
cmpb
lods
xchg
xor
xchg
or
cmp
and
fwait
inc
repnz
dec
xchg
xchg
cwtl
mov
inc
xchg
sbb
dec
cs
das
mov
cltd
mov
mov
movsb
mov
push
mov
pop
push
sub
or
faddp
xchg
imul
jle
push
mov
xchg
push
xchg
shlb
and
in
je
lret
mov
xchg
sbb
ja
push
add
jb
test
bound
mov
xor
fsubs
mov
mov
popa
imul
mov
mov
add
mov
xchg
fdivr
mov
lds
dec
jb
push
add
out
ds
sbb
or
jle
dec
pop
fstpl
mov
adc
adc
outsl
fidivl
mov
push
and
dec
loopne
push
jmp
hlt
sti
in
lods
mov
leave
jg
xchg
and
xbegin
xor
jl
push
sbb
jle
idivb
ret
in
cltd
mov
lock
leave
mov
fistpll
ljmp
repnz
insb
jp
mov
push
std
pop
pop
mov
add
push
std
and
add
jb
mov
push
push
movsl
jno
jg
and
pusha
and
lods
xchg
sub
sbb
lds
jno
xchg
push
xchg
mov
push
xchg
push
push
cmp
lods
sbb
loop
fcoml
sbb
and
lods
inc
adc
jg
adc
dec
push
pop
pop
insl
dec
mov
and
push
sub
pop
adc
dec
and
inc
aad
rclb
cwtl
dec
xor
dec
sahf
out
xchg
dec
repz
ss
push
mov
and
out
cmp
dec
xchg
jmp
and
dec
mov
mov
and
add
add
icebp
flds
dec
xchg
shrl
aam
add
adc
bound
add
dec
ja
jecxz
pushf
jmp
xor
jg
xor
in
add
daa
jbe
add
xchg
inc
pop
xor
push
cmpl
xchg
xlat
push
repnz
mov
sub
xchg
add
sbb
ret
push
cld
int3
clc
mov
pop
sahf
dec
mov
xor
loopne
dec
dec
scas
sub
push
test
ljmp
or
iret
xchg
push
les
icebp
dec
rcr
push
sbb
stos
xlat
mov
repz
fldl
pop
mov
ret
mov
push
add
stos
lret
std
and
shlb
xchg
jle
rcrb
jmp
in
mov
xorl
popf
arpl
cmp
xrelease
loopne
popa
pushf
lods
lods
pop
adc
shr
mov
inc
repnz
popf
lea
jns
or
aam
outsb
cmovnp
push
out
lahf
stc
lods
and
pop
dec
xchg
lret
je
and
dec
sahf
aad
or
mov
mov
iret
mov
das
daa
dec
and
mov
mov
mov
inc
es
cs
into
dec
xor
jb
mov
push
pop
pop
lock
push
mov
ja
mov
loope
mov
sbb
fistpl
xchg
loope
je
movsl
ds
dec
cld
hlt
out
pop
std
jne
jne
test
mov
scas
add
fisubrs
sub
loope,pn
outsl
stc
xor
jg
push
push
xor
add
pop
mov
and
jle
jo
xchg
ret
test
ja
mov
mov
movsb
cmc
mov
jb
xor
xchg
cmp
jmp
insl
xor
xchg
sahf
lcall
add
dec
fistpl
negb
int
cmp
pusha
dec
arpl
sub
sub
add
insb
hlt
or
pop
out
test
imul
mov
fimuls
or
push
xchg
sub
pop
mov
cmp
call
js,pn
xorb
gs
mov
xchg
mov
mov
fcoms
jmp
push
movsl
dec
lea
outsl
sbb
mov
cmp
sbb
scas
mov
fwait
mov
xchg
sbb
or
xchg
jle,pt
enter
add
ror
sahf
ret
leave
aaa
pop
test
lods
jl
mov
notb
aam
call
mov
int3
cmc
sbb
ret
jb
pusha
dec
add
sub
xlat
loope
sbb
sbb
xor
enter
test
xchg
cmp
bound
mov
das
sub
xor
mov
outsl
or
notl
into
xor
inc
and
adc
mov
mov
push
adc
inc
repz
adc
lods
in
leave
loop
adc
and
pop
test
fimuls
jge
mov
push
mov
mov
sbb
test
ror
adc
or
mov
sub
and
pushf
push
dec
cli
xchg
dec
sbb
cs
lahf
aad
xchg
jge
pop
lods
mov
sbb
and
insl
add
add
inc
mov
and
mov
ss
xchg
pop
mov
fs
dec
rcll
adc
test
pop
push
fbld
lret
pop
sub
adc
jg
fistpll
es
ret
pop
push
scas
xor
inc
adc
cli
mov
cmp
lret
pop
lds
add
or
aam
outsb
pop
inc
mov
rcrb
pop
sub
xchg
cmc
cmp
xlat
jnp
mov
jns
inc
jns
ja
jle
loop
aam
in
mov
push
xchg
jmp
es
jecxz
dec
test
dec
adc
imul
xchg
xchg
shrb
int3
jbe
or
repz
xchg
scas
nop
test
testb
les
and
sbb
icebp
jmp
int3
dec
mov
lret
imull
sbb
pop
push
mov
sbb
dec
jb
sub
enter
push
movsl
push
call
add
aaa
push
test
jnp
fwait
test
jb
mov
out
mov
fidivl
aaa
icebp
cld
pop
imul
out
clc
mov
lock
aad
out
add
mov
jae
in
cmpsb
sbb
test
push
aaa
daa
push
cmp
shl
fidivs
cmp
sub
in
enter
enter
mov
adc
outsl
add
xchg
push
jbe
movsl
cmp
or
popa
fidivrl
je
mov
imul
push
imul
mov
jle
dec
loope
nop
mov
lcall
push
xlat
push
sahf
xchg
out
aad
mov
pop
sbb
jl
xchg
inc
push
pop
mov
jns
inc
lcall
add
or
inc
les
popa
mov
das
inc
xchg
adc
lea
pushl
add
fists
add
mov
test
add
lret
fstps
std
jb
inc
dec
add
insl
and
or
dec
sub
cmpsl
imul
mov
mov
rolb
mov
xchg
push
push
push
cmpsb
int3
jle
push
nop
data16
jb
sbb
jp
lock
push
jl
shrl
dec
ja
and
sbb
xchg
das
popa
cmp
fs
xchg
sbb
scas
test
and
adc
aas
fsubl
push
sbb
adc
inc
stos
mov
sub
inc
daa
push
jl
push
pushf
dec
inc
mov
cmp
xlat
or
jbe
lcall
pop
xchg
adc
sub
add
mov
cmpsb
mov
and
cli
pop
cmp
fld
imul
clc
sbb
mov
sub
daa
or
ret
mov
pop
test
pop
sub
int3
cld
or
or
xor
dec
insl
in
or
push
xor
cld
mov
lret
in
adc
and
sub
loopne
push
cli
repz
xchg
in
fsubrl
js
lret
iret
sbb
fwait
inc
movsb
ljmp
jmp
and
imul
jg
stc
push
cwtl
push
cmp
lds
fwait
jecxz
sti
unpckhps
mov
cs
icebp
data16
popa
shrl
xor
out
inc
sbb
push
pop
daa
mov
mov
mov
jns
in
out
lfs
mov
es
test
cmp
lahf
push
add
xchg
in
enter
dec
movzwl
mov
or
ret
mov
gs
or
nop
in
sbbb
add
sbb
sub
cmp
sbb
test
cmp
mov
in
lret
xchg
inc
in
pop
movsl
sbb
js
enter
iret
pop
or
jbe
push
xchg
dec
shll
or
adc
insl
fcmovnb
xchg
nop
sub
ja
lret
neg
dec
xor
xchg
stos
lea
inc
insb
fbld
cmp
ret
push
cltd
lods
push
mov
adc
sub
mov
push
int3
add
adc
ds
ret
jge
lods
in
repnz
test
iret
jo
fld
imul
sti
repnz
inc
test
cmp
xchg
insl
cli
jp
in
into
lods
std
inc
outsl
pop
psrld
call
test
ds
rcrb
jle
pop
xchg
mov
lahf
push
stc
lods
shl
mov
jb
std
test
clc
ja
test
adc
pusha
add
jne
push
pop
cmp
fldt
sub
imul
inc
mov
outsb
sub
inc
hlt
pop
outsl
or
adc
mov
cltd
xchg
xor
jge
xchg
sub
mov
cli
dec
and
cmp
add
push
push
cmp
lods
pusha
stc
xchg
push
pop
push
sbb
loopne
pop
outsl
loopne
pop
xchg
roll
lahf
cmp
test
mov
fistpll
dec
xlat
push
adc
ficompl
cmpsl
inc
inc
lret
push
lock
cmp
shll
mov
std
out
inc
scas
jge
gs
dec
std
das
popf
andl
das
jp
inc
push
leave
push
xchg
xor
jle
divb
mov
roll
xchg
aad
mov
loope
mov
inc
stc
fadds
mov
inc
test
in
dec
mov
push
mov
mov
push
xchg
lock
daa
call
jae
loopne
and
imul
subb
jmp
fbld
or
pop
mov
scas
hlt
lcallw
test
sub
roll
lock
cli
imul
or
cld
scas
jl
imul
mov
mov
out
clc
cmp
adc
xchg
icebp
mov
lahf
push
lods
add
insl
xor
icebp
cmc
add
mov
jmp
push
inc
jmp
mov
outsb
xor
ss
mov
adc
inc
jle
pushf
jmp
andb
or
fildll
js
jp
out
scas
xor
in
popa
mov
sub
inc
inc
idiv
and
stos
xchg
test
xlat
xlat
test
lock
jnp
int
jne
clc
inc
cmpsl
pop
roll
and
stos
mov
mov
popf
push
mov
adc
push
dec
or
sbb
inc
sbb
aaa
cmp
addb
lret
test
fidivrl
jmp
sbb
mov
push
imul
xchg
push
dec
sub
mov
out
repz
in
scas
std
mov
mov
cmp
lcall
gs
sbb
xor
push
fiadds
cmpsb
and
xchg
dec
inc
popf
sub
xchg
and
mov
out
lret
xchg
popa
dec
bnd
loopne
or
xchg
xor
icebp
popf
or
movsb
rorb
lret
inc
aad
jb
stc
int3
in
scas
clc
rcrb
test
sbb
je
les
dec
sbb
lea
mov
jle
imul
mov
inc
loop
push
aaa
inc
cltd
lcall
arpl
xchg
jne
shlb
mov
lret
push
fimuls
sti
les
imul
inc
pop
imul
pop
int3
jge
push
jb
mov
jle
inc
in
repz
movsl
adcl
inc
movb
fwait
mov
jmp
sarl
out
enter
negb
cld
gs
mov
ds
loop
xchg
xchg
je
adc
jo
pop
adc
jg
outsb
inc
gs
outsb
sub
xchg
enter
mov
decb
jbe
cmpsl
pop
jle
xchg
pop
pop
paddb
shlb
rolb
adc
xor
hlt
cmp
pushf
test
insl
xchg
dec
movsl
mov
mov
mov
mov
cwtl
in
jno
cmc
xchg
dec
jle
icebp
mov
jecxz
gs
clc
jg
jge
sahf
and
sti
mov
in
jnp
aaa
adc
insb
pop
daa
pop
daa
rcrb
mov
addr16
in
xlat
repnz
loope
out
jne
sub
in
mov
aas
lret
mov
pop
lret
jne
bound
mov
js
insb
pop
pushf
fcomp
sti
popa
movsb
in
or
or
clc
xlat
ja
ljmp
fadds
stos
fildl
or
loope
int
scas
movsl
jne
ror
cltd
xor
mov
into
and
mov
in
push
pushf
jo
xchg
mov
pop
repnz
mov
shr
out
rolb
decl
pop
or
sbb
rcr
pushf
or
sbb
out
or
sub
mov
test
cmp
nop
shll
or
sti
iret
insl
icebp
sarl
imul
fstp
mov
repnz
jmp
pop
xor
mov
jge
movsl
icebp
das
xchg
push
popa
pop
sub
dec
ret
fxch
cltd
lods
mov
mov
inc
int
dec
shlb
inc
call
cwtl
inc
icebp
loope
sub
clc
mov
sbb
push
or
xchg
mov
mov
fwait
push
jl
icebp
test
or
adc
pop
xor
subl
pop
push
repnz
lods
or
pop
insb
mov
sbb
pop
adc
notb
neg
mov
add
adc
or
iret
xor
fadds
or
inc
rcrl
cmpsb
mov
dec
out
and
add
pop
push
add
sub
ds
and
inc
mov
pushf
sbb
scas
outsl
test
mov
adc
xchg
lret
jnp
repnz
dec
inc
imul
and
or
pushf
rolb
stc
xchg
test
nop
push
xor
add
xchg
inc
and
lahf
cmp
icebp
pop
loopne
adc
mov
leave
sub
aas
inc
lret
dec
ret
lods
daa
aas
mov
sbb
jnp
sti
sbb
inc
xchg
xchg
mov
sbb
mov
test
add
cmpb
pop
mov
out
imul
pop
cli
mov
jp
xchg
dec
cwtl
test
lds
outsb
pop
push
lock
psubd
dec
cmp
jg
mov
std
cmp
dec
xor
mov
adc
jae
repnz
in
push
cltd
adc
insb
jecxz
inc
mov
push
pop
imul
clc
insb
pop
jle
mov
inc
add
mov
push
test
inc
xchg
gs
outsl
jbe
int
sbb
dec
sahf
jne
leave
aad
ljmp
clc
loopne
sub
add
xchg
fs
and
fs
jp
std
push
push
fistps
xchg
frstor
or
add
mov
push
jo
mov
cmp
call
enter
mov
jle
or
sbb
add
mov
ss
loop
lahf
test
sbb
sub
in
push
cs
iret
dec
xor
mov
mov
mov
jno
hlt
push
and
sbb
jp
xchg
scas
sbb
jns
fdivs
in
cwtl
ret
adc
push
inc
das
inc
dec
push
inc
or
and
dec
stos
pop
insb
xor
nop
inc
es
push
sub
mov
cli
jge
mov
push
adc
in
xor
ffreep
xchg
pop
sbb
pop
mov
xchg
mov
dec
test
fidivl
and
xorl
push
and
lods
mov
fstpt
movsl
stos
or
xlat
ds
lods
testb
cmp
dec
dec
inc
movsb
repnz
test
cmp
inc
push
iret
popf
inc
mov
inc
adc
fs
cmp
icebp
lds
pop
or
cltd
cmp
inc
or
out
lea
xor
aad
repz
xchg
sbb
loop
xchg
mov
inc
mov
ljmp
sub
cmp
sbb
mov
sub
add
lcall
inc
mov
ret
push
int
sarb
aas
js
cmovp
subl
test
adc
push
enter
cld
cmp
aaa
in
mov
ret
subl
xchg
sbb
jo
adc
adcl
add
pusha
inc
sub
mov
rcrb
insl
dec
pop
add
mov
dec
int
loop
pop
xchg
movsl
sub
fs
adc
mov
push
dec
mov
cmp
outsb
push
add
inc
mov
cmpsl
sbb
jp
sbb
pop
cwtl
int
pop
inc
sahf
pop
sbb
xorl
sub
xchg
negb
roll
mov
inc
xchg
sbb
xchg
mov
ret
inc
lods
test
xor
sbb
adc
pop
rcll
and
dec
push
push
daa
data16
ss
cmpsl
xor
pop
mov
imul
dec
pop
lea
cmp
xchg
push
bsf
arpl
xor
adc
push
lret
and
mov
repnz
inc
stos
cli
xor
aas
iret
je
aaa
imul
inc
nop
cmpsb
shr
cli
jge
nop
mov
adc
xchg
push
add
xchg
je
scas
rcrl
shlb
ret
mov
out
rcrl
or
daa
das
push
dec
dec
inc
jl
dec
dec
pop
aam
ret
jo
lds
dec
iret
fidivrl
mov
pusha
movsb
es
pop
insb
mov
jb
mov
lods
xchg
pop
icebp
lret
dec
ja
aad
add
pushf
sbbb
sbb
test
out
pop
add
mov
adc
ds
xchg
jl
fdivrl
js
pop
std
enter
orb
jg
fs
fmuls
push
leave
sub
gs
sbb
push
add
mov
lods
xorb
rcll
outsl
cmp
cmpsb
popf
mov
ja
inc
pop
inc
push
popf
add
fmuls
or
repz
ret
add
ds
js
jns
sbb
andb
xor
mov
add
push
adc
enter
inc
cmc
negl
rclb
pop
sbb
mov
shrl
mov
dec
lret
push
cli
mov
data16
enter
mov
inc
mov
sub
aas
push
pop
mov
arpl
push
mov
pop
mov
pusha
xor
mov
mov
xchg
fmuls
xor
xlat
test
mov
jb
bound
cmp
cmp
jge
adc
push
cmpsb
pop
dec
sarl
jbe
mov
das
and
negl
xchg
dec
sbbb
jge
and
stos
test
or
pushf
or
std
enter
push
adc
mov
jle
jo
mov
repnz
push
movsl
xlat
cmp
and
mov
push
lcall
inc
stos
push
xor
or
jp
idivb
push
lock
push
push
jmp
inc
jp
adc
inc
fwait
ja
dec
test
repnz
inc
enter
leave
test
or
xchg
inc
test
mov
js
icebp
push
mov
jge
enter
cld
dec
cmp
pop
mov
loopne
push
mov
jmp
and
dec
add
or
add
sbb
jb
out
cmp
loope
rorb
xchg
and
and
lds
sbb
jns
cmpsb
cwtl
xor
fistpl
sub
dec
mov
mov
push
adc
pop
pusha
mov
xchg
fwait
stos
sub
fwait
dec
jecxz
call
lods
bound
ficomps
jb
or
xchg
push
ljmp
rcrl
shlb
ss
jo
dec
fidivl
cli
shr
shrb
cmp
sbb
js
stos
pop
cwtl
cwtl
js
jns
cmp
pop
xchg
inc
lock
mov
icebp
cmp
jno
in
pop
adc
xor
aas
mov
inc
xor
mov
mov
rcr
or
jno
ficompl
xor
mov
push
mov
out
inc
inc
pop
jnp
aad
xchg
add
sbb
cli
inc
push
mov
scas
jg
out
in
cli
subl
push
pop
sbb
inc
sbb
xor
in
cld
pop
adc
add
jb
sbb
mov
clc
imul
stos
xchg
xchg
imul
shl
jo
or
je
sarb
and
nop
jb
mov
ret
ret
aam
in
adc
push
push
leave
adc
sbb
xor
jl
pop
sbb
sti
dec
enter
mov
adc
sbb
mov
push
in
shlb
and
inc
std
push
inc
insb
lea
mov
sub
add
and
popa
jnp
jle
fildl
or
adc
loope
idivb
rep
pusha
outsb
sbb
cmp
push
insb
adc
adc
inc
cmp
movsb
dec
lcall
adc
xchg
ret
xchg
cltd
scas
push
out
sbbl
adc
inc
arpl
mov
shll
in
js
dec
popa
sub
xor
xchg
and
pop
daa
and
sub
icebp
sbb
jmp
test
add
dec
call
call
cmp
dec
push
aaa
jne
mov
movsb
or
ss
xchg
push
dec
inc
stos
adc
push
addl
inc
stos
enter
dec
pop
lahf
js
shl
xor
add
add
into
test
int3
push
push
adc
jns
xchg
pop
cmpb
adcl
add
sbb
sub
stos
cwtl
test
sbb
addl
fidivl
or
lods
inc
inc
sub
sub
or
pop
std
inc
dec
pop
cltd
xor
push
cmc
pusha
add
or
int
negl
aad
jae
pop
into
js
idivl
es
inc
jge
jg
scas
stc
insl
sti
mov
sub
orb
lea
xchg
bnd
leave
fcom
or
sub
xor
test
lds
jnp
je
hlt
cltd
imul
je
xchg
gs
push
sbb
push
add
or
fiaddl
or
lahf
mov
push
and
sub
inc
or
mov
dec
pop
mov
cmp
cmp
cmp
push
mov
inc
rcrl
mov
fld
mov
push
and
cmp
lds
push
aam
add
pop
aam
cmp
mov
pop
test
int3
lods
in
and
xchg
inc
xlat
cvtps2pi
ja
cld
add
xchg
dec
mov
xchg
adc
loop
cmp
imul
in
xor
xchg
pop
int
add
fildl
cwtl
sbb
xor
loop
loope
subb
fincstp
rorb
and
lret
movsl
enter
or
or
inc
in
mov
js
adc
shll
test
mov
cwtl
je
mov
arpl
jp
jne
cld
test
push
mov
movsb
jae
aas
xor
xor
in
es
fidivl
scas
push
push
push
jmp
test
mov
incl
stos
and
sbb
mov
push
inc
lods
jmp
je
lods
or
cwtl
cwtl
xchg
mov
jl
ja
data16
push
rcll
lcall
or
xor
cmpsb
sarb
add
loope
rorb
std
decl
out
jne
xor
int3
scas
mov
stc
pop
in
xchg
rcrb
mov
das
mulps
fwait
sbb
gs
or
lcall
test
xor
es
adc
shrl
lret
adc
dec
add
pop
sub
mov
fcoms
pop
push
arpl
jp
and
sbb
mov
mov
leave
adc
sub
test
repz
fistl
sarb
mov
rolb
xlat
mov
cmp
out
xchg
movsb
inc
neg
lock
mov
jbe
add
pop
in
cmc
bound
jns
lock
fbstp
ljmp
and
pop
imul
cmc
aaa
lcall
aam
jne
out
loopne
aaa
stos
decl
cmpsb
cmp
mov
push
scas
adc
push
xchg
shr
add
push
cli
mov
push
aaa
xor
adc
lds
cld
addr16
nop
scas
xchg
sbb
cmp
ja
lahf
dec
push
aad
in
adc
inc
cltd
cmc
or
call
add
hlt
int3
xor
sub
mulb
mov
pop
push
xor
cmp
cld
je
arpl
ljmp
neg
fisubrs
repz
rorb
out
mov
adcl
sub
xchg
push
das
adc
mov
add
cs
sbb
inc
pop
cmp
jo
xchg
sti
dec
or
adc
js
mov
ret
rclb
dec
push
loope
add
daa
pop
lret
cmp
std
sahf
pop
mov
push
in
jp
jecxz
push
daa
mov
das
inc
cmp
or
cmp
lods
sbb
inc
out
das
mov
adc
sub
add
dec
je
leave
dec
mov
leave
or
sbb
cld
mov
rorl
nop
add
aaa
mov
fnstenv
push
push
cwtl
jge
pop
mov
inc
int
or
in
push
popf
shll
ljmp
idivl
cwtl
popa
cld
dec
sub
repnz
adc
dec
lock
mov
out
mov
xor
ja
dec
mov
dec
jmp
cmpl
mov
xchg
jmp
jae
jl
lcall
mov
enter
sub
mov
daa
ret
mov
cmp
incb
or
popa
mov
push
push
cs
cmp
adc
cmpsb
mov
rolb
and
cltd
popa
xchg
das
hlt
out
mov
pop
js
jbe
repz
jp
je
icebp
xor
mov
ret
fs
mov
mov
divl
add
out
push
add
or
sti
mov
inc
cli
fildl
or
popa
and
rclb
mov
fs
cmpsl
fiadds
dec
pop
cmc
inc
pop
test
xorl
fsubr
aas
roll
lcall
add
imul
notb
daa
nop
shlb
mov
std
mov
dec
inc
add
out
sub
push
aaa
cmpsl
push
mov
jecxz
std
ret
dec
rcrl
or
jbe
adc
cltd
das
iret
loope
or
xchg
shlb
aad
xchg
aaa
or
or
repnz
adc
outsl
loop
ret
out
xor
nop
xlat
jle
cmpsl
nop
sub
sub
mov
sahf
push
xchg
repz
int
add
clc
stos
dec
pop
outsl
jmp
fisubrs
dec
jnp
cli
shll
ja
mov
jle
mov
mov
dec
nop
cmpsl
mov
push
or
mov
in
push
xchg
jno
push
fcoms
testb
pop
mov
cmc
out
mov
cmpsl
jmp
test
fcoml
cmp
adc
mov
jbe
push
mov
and
fs
add
dec
fildl
pushw
jl
jne
pushf
imul
cmp
je
push
ficoms
dec
dec
iret
iret
cmpb
dec
xchg
in
out
jns
add
jns
mov
sbb
pop
mov
adc
call
push
push
cmp
push
sbb
fstpt
push
dec
jae
and
xor
or
dec
es
dec
xchg
xchg
outsb
sbb
xchg
pop
jbe
xor
pop
sub
xchg
andb
in
xabort
mov
inc
lock
jns
jae
jmp
test
ds
pushf
jno
cltd
dec
call
sbb
in
out
leave
dec
cmc
mov
lock
lods
push
push
stos
mov
out
xchg
xchg
mov
inc
pop
cmpsl
mov
ljmp
dec
sub
sahf
lahf
jb
sbb
add
leave
cmpsl
loop
aas
rorb
popa
xchg
lret
push
cmp
std
inc
repnz
mov
add
pop
push
adc
add
call
dec
ljmp
inc
jne
push
add
mov
jmp
ljmp
jbe
push
shrb
add
mov
ds
ss
sub
loopne
mov
hlt
and
repz
imul
cmp
xchg
daa
jnp
fwait
push
or
aam
test
dec
sbb
push
inc
jo
mov
dec
mov
leave
pusha
mov
std
adc
push
ret
inc
push
mov
jbe
insl
inc
and
mov
addr16
mov
clc
push
rol
pop
jno
sub
xchg
add
and
push
in
outsl
push
lcall
pop
repnz
into
movl
push
ljmp
nop
insb
jmp
xchg
mov
dec
int3
aad
nop
jns
out
cmp
out
jbe
add
push
lret
sahf
test
sub
sbb
add
and
arpl
push
std
mov
dec
js
xchg
addl
shrb
ljmp
push
mov
jo
dec
imul
cmpsb
mov
leave
pop
jp
mov
push
das
sub
mov
mov
dec
rcrb
jns
sub
sbb
cmp
mov
adc
mov
rol
pop
sahf
test
std
jp
adcb
xchg
xrelease
sahf
test
dec
or
movsb
es
sbb
jecxz
bound
jae
out
jns
mov
lea
das
cmp
shrd
test
pop
pop
outsl
adcb
ret
xchg
jecxz
push
loope
push
mov
sbb
cmc
es
andb
lock
es
inc
icebp
scas
add
adc
push
mov
pop
sub
loopne
push
jge
rcr
and
insl
lock
mov
cmp
cmp
xor
cmp
fcmovb
in
aas
mov
mov
movq
stc
mov
xor
pop
movsl
mov
outsb
push
sbb
pop
lock
loop
pop
and
nop
rcll
mov
lret
pop
cmpsb
fstl
leave
cmp
lahf
out
test
pop
jno
ljmp
xorl
lods
sti
inc
ljmp
mov
and
or
or
into
rcrl
sarl
int3
pusha
popa
icebp
lods
cltd
sbb
push
loopne
inc
mov
mov
mov
es
cmp
inc
jns
repnz
xchg
shr
or
cmp
pop
push
mov
pop
jmp
push
mov
mov
data16
pushl
movsl
fdivrs
nop
inc
add
pop
mov
ret
jbe
sbb
adc
nop
adc
xor
push
mov
jne
adc
and
mov
in
push
jne
ret
and
xchg
pop
push
inc
pop
add
out
push
jecxz
jp
sub
xchg
adc
mov
xor
arpl
mov
adc
sahf
test
xchg
insl
xor
jl
jbe
mov
mull
add
jge
adc
rorl
push
mov
das
arpl
ss
imul
jp
xor
sbb
call
mov
and
sub
xlat
enter
inc
aad
jne
cmpsl
inc
lods
loope
movd
cmc
cmp
loope
jb
jns
adc
pop
mov
jl
hlt
sahf
mov
push
movsl
lods
pop
ss
adc
sub
test
push
movsb
je
int3
cmpsb
outsb
repz
pushf
mov
in
icebp
insl
nop
dec
bnd
js
sub
adc
ds
jno
call
cltd
dec
push
and
sbb
stc
add
dec
repz
mov
arpl
and
mov
add
inc
orl
mov
bound
and
sub
jno
and
pusha
sti
xchg
in
in
mov
xchg
testl
xchg
pusha
or
mov
aas
jmp
dec
push
lahf
cli
sahf
movntps
insl
aam
js
mov
ret
int3
mov
inc
insb
out
and
add
shl
xchg
xlat
or
mov
cld
rcll
pop
stos
mov
dec
negb
lcall
inc
mov
cmpsl
outsb
jns
shrl
push
add
fcmovu
dec
cmpsb
adcl
clc
adc
sbb
jnp
js
or
pop
test
out
jp
jbe
daa
notb
xchg
ret
std
xor
icebp
in
ret
jge
shr
sahf
inc
ds
popf
in
scas
jle
jo
in
push
push
movsb
fisubrs
loope
and
sti
sub
cmp
lcall
lock
pop
inc
ja
jo
add
xchg
sbb
aas
aad
loop
add
aad
mov
cmp
adc
loope
xchg
subl
xchg
jb
mov
jo
icebp
dec
sti
xchg
jae
ficomps
pop
clc
cmpsb
cwtl
sbbl
lea
sbb
loope
cmp
inc
rolb
jne
cmp
or
xchg
push
xchg
mov
mov
ficompl
addr16
add
loopne
ds
or
xchg
add
lret
fs
mov
and
fcompl
lods
loopne
out
sbb
xchg
fidivl
lret
dec
js
xchg
lea
push
jns
push
jns
push
cmpsb
inc
and
pop
xchg
cmp
or
lock
mov
inc
push
int3
jae
mov
mov
inc
xorl
jge
loope
int
pop
xchg
fsubrl
cmp
outsb
xor
ret
ret
loope
sbb
je
add
mov
outsl
js
idivl
dec
or
mov
hlt
popl
mov
push
neg
inc
adc
pop
mov
xchg
pop
outsl
jl
adc
cmp
cmpsl
das
fdivrs
adc
rcll
inc
cmp
fiadds
imul
mov
jne
sub
mov
xor
pop
negb
jle
and
imulb
data16
sub
sub
jbe
xor
imul
pop
sbb
pop
loope
fcomps
ljmp
jge
mov
divl
std
jg
inc
data16
push
dec
cmpsb
lock
inc
call
repz
movsl
vmovupd
mov
dec
mov
je
xchg
adc
add
push
pop
adc
pop
and
shl
dec
jno
pop
popf
cld
jecxz
fsubp
dec
jp
js
mov
das
in
insl
sub
xchg
nop
mov
pop
xor
adc
inc
pop
mov
mov
xor
sarb
lods
or
xchg
fiadds
insl
adc
dec
add
hlt
sub
cld
outsl
rcl
xor
mov
sti
jns
into
out
add
or
ds
push
loope
cli
add
ret
aam
xchg
or
adc
push
add
stos
and
arpl
xor
xchg
stos
rcrl
mov
inc
cld
mov
push
jge
xrelease
sub
sbb
xchg
je
in
stc
int
mov
mov
mov
stc
stc
sub
lock
insb
cmc
jae
movsb
es
jl
lds
push
adc
jmp
orl
iret
dec
shl
xor
aas
jp
movsb
xlat
rcrl
out
push
pop
mov
cwtl
jbe
addr16
lods
aad
dec
pop
jno
push
dec
repz
pop
lds
out
js
and
inc
xor
sub
push
popa
sub
push
stos
movsl
add
and
fdivs
and
lock
add
lods
xchg
pop
imul
repnz
andl
imul
xor
and
gs
or
push
mov
xor
sub
jle
mov
push
fldt
div
shrl
mov
dec
pop
into
xchg
mov
mov
jne
sub
in
pushf
cmc
jae
jns
push
outsb
and
dec
jbe
xor
adc
lea
push
adc
dec
push
sti
inc
pop
jle
pop
xchg
jnp
loop
adc
das
movsl
mov
out
ljmp
xchg
out
jb
cltd
push
xor
pop
out
outsl
xor
mov
out
mov
sbb
mov
jbe
inc
lock
pop
cmpsl
jmp
bound
fistl
add
jbe
dec
pop
push
or
sub
in
movsl
loopne
mov
addr16
sub
mov
adc
xor
jge
push
es
inc
movsb
xchg
into
test
fdivl
xor
xchg
imul
add
add
cmc
jae
dec
adc
std
xchg
sti
pop
fcoml
mov
inc
sub
pop
adc
loop
xchg
inc
add
mov
fsubs
or
aad
dec
sub
xchg
xor
clc
into
fs
mov
adc
enter
mov
mov
scas
not
sub
test
xchg
sbb
lahf
cmp
xor
jle
sbb
test
push
call
jbe
shl
adc
sbb
mov
push
mov
leave
iret
xchg
shll
out
jg
xchg
xor
xchg
pop
stos
arpl
pandn
int3
pinsrw
push
xor
mov
xchg
icebp
pusha
ds
nop
sbb
movsb
dec
pop
dec
roll
mov
add
mov
adc
ljmp
jne
dec
call
lret
push
ljmp
lea
fcoms
push
shlb
push
push
or
ficoml
pop
out
or
sarl
xchg
cli
imul
cmp
xor
xlat
scas
sub
pop
inc
lock
fidivrs
mov
sbb
movsb
jge
mov
mov
dec
fsin
mov
ds
fnsave
fs
inc
sbb
lods
cwtl
or
aad
jmp
or
sbb
gs
fmul
jns
les
or
pop
fs
je
clc
std
dec
mov
flds
outsb
xor
int3
push
xchg
sub
xorl
cmp
stos
test
push
push
sarb
in
rcr
or
push
lcall
xchg
icebp
mov
dec
or
in
jnp
ret
cmp
cltd
adc
sbb
mov
in
cli
add
sbb
jae
or
popa
adc
and
mov
jae
imul
jno
fldl
dec
xorb
jmp
cmpb
adcl
and
sbb
jp
sub
fldl
and
jae
mov
pop
neg
push
mov
add
gs
out
mov
inc
xor
or
jecxz
jo
std
dec
push
cmpsl
test
push
jne
jns
sbb
mov
cmpsb
xchg
adc
mov
adcb
add
shll
mov
or
sub
mov
jb
cwtl
and
or
je
lahf
lcall
xor
loopne
add
dec
call
lret
das
sub
movsl
std
ret
iret
clc
mov
or
and
inc
xor
lds
jne
or
ja
mov
add
push
mov
pop
lcallw
add
push
mov
lods
loopne
pop
and
and
int3
shrb
subl
mov
test
mov
xchg
push
sti
fsubs
pop
mov
xor
repz
les
sti
and
inc
push
lcall
inc
push
subb
add
dec
scas
dec
std
lock
pop
lret
fnstcw
pop
data16
inc
jae
sub
in
and
sub
rorb
mov
fucomp
movsl
insb
add
mov
jo
mov
cli
int3
push
push
pop
bound
aaa
dec
cld
push
in
push
add
dec
jg
xchg
mov
add
fstpt
stos
add
mov
adc
movsl
dec
jmp
pop
dec
mov
inc
js
xor
in
jnp
mov
cwtl
jmp
subl
or
sbb
aad
jge
test
push
call
sub
popa
aas
or
pop
mov
addr16
fs
shll
scas
lods
push
push
pop
xor
lods
xchg
lahf
pop
xchg
call
fdivrl
mov
ret
hlt
out
cmp
inc
jbe
fcoms
movsb
push
pop
fsubr
gs
mov
xor
imul
cmp
mov
and
sub
out
cmp
push
xorl
int3
xchg
shl
mov
xchg
in
pop
inc
mov
mov
jle
sub
sbb
faddl
loop
ret
push
sbb
out
inc
rclb
cli
dec
enter
jbe
inc
fcoms
xor
dec
rcll
bound
cmp
je
xor
or
shr
stc
xchg
inc
pop
add
enter
add
inc
jg
push
pop
popa
sub
push
mov
pop
or
lret
test
jb
test
mov
pop
ficoms
jnp
add
je
jle
cmp
out
jp
fdivrs
shrl
cwtl
mov
and
mov
psrlw
adc
jae
adcl
je
lcall
add
test
mov
pop
mov
and
fidivrl
sbb
notb
and
test
fisttpll
push
push
cmp
stc
push
sarb
push
jp
jle
sbb
mov
stos
push
lock
out
mov
fisubrs
cmpsb
es
test
inc
and
or
xor
lahf
jbe
shlb
rclb
mov
ss
push
xor
sbb
outsl
sbb
adc
inc
call
mov
cli
out
mov
xorl
inc
call
mov
cli
jns
or
sbb
push
sub
hlt
or
add
in
push
cmpsl
add
repz
pop
aas
and
mov
je
mov
inc
mov
cmp
jbe
xor
in
out
or
cmp
adc
lret
jecxz
and
mov
test
mov
pop
add
xor
into
insl
pop
idiv
pop
sbb
push
cmpsb
mov
rcrl
push
and
pop
ret
out
mov
cmp
pop
pop
popa
or
jns
mov
mov
in
mov
add
pusha
add
jp
mov
out
cmc
xor
in
jnp
mov
xchg
insb
mov
add
stos
loop
mov
inc
test
fsubrs
stc
dec
pusha
mov
sbb
pop
lret
in
pusha
mov
jmp
mov
and
jb
inc
or
sbb
inc
je
aas
push
pushf
push
cwtl
xchg
int3
sbb
add
mov
ror
mov
aam
out
xlat
iret
aas
inc
pop
lock
sbb
mul
loop
push
js
mov
dec
sub
add
xor
in
cmp
lahf
fdivp
dec
popf
cmp
push
addr16
into
adc
mov
add
push
gs
jle
cvttps2pi
popf
outsl
push
sbb
in
mov
mov
jmp
xchg
jnp
icebp
cs
sub
sub
loopne
sub
popf
xchg
xchg
add
add
dec
ja
dec
mov
or
cli
mov
dec
dec
mov
lret
aad
shrl
mov
sbbl
pop
adc
sbb
xchg
test
jecxz
pop
jo
imulb
dec
ja
fisubl
hlt
and
dec
insb
inc
int
xchg
push
sbb
mov
sbb
add
lods
mov
lds
bound
dec
iret
lock
mov
mov
push
xchg
lahf
popf
adc
in
push
mov
cli
aad
ja
xchg
mov
dec
add
das
pop
shl
and
and
dec
nop
jae
and
gs
jbe
pop
adc
pop
test
pop
incb
aad
jge
push
xchg
stc
jle
add
cmp
fstpt
fcmovnu
setns
and
push
xor
aaa
or
dec
jle
pushf
lds
les
mov
push
enter
int3
or
cli
idivl
mov
inc
add
out
xor
cld
cmp
jmp
into
test
daa
dec
mov
xchg
in
adc
sub
js
ljmp
sbb
sbb
popa
testb
adc
filds
inc
adc
rolb
stos
mov
es
push
stos
fucomip
test
loopne
mov
mov
loopne
movsl
stc
les
xchg
sub
push
addb
std
shl
fcompl
and
stos
arpl
cmp
inc
mov
jbe
pop
and
mov
lahf
imul
mov
outsl
or
scas
repz
or
es
leave
dec
xor
in
ljmp
repz
jp
addr16
enter
ret
dec
stos
push
sti
inc
in
sarl
inc
out
add
addb
jbe
daa
mov
popa
inc
scas
test
mov
xchg
pop
lods
mov
inc
rolb
cmp
lods
mov
dec
cmp
mov
inc
mov
sti
fbld
outsl
inc
clc
xchg
jge
out
or
mov
aas
js
dec
fwait
shlb
stos
arpl
or
adc
jg
dec
in
mov
test
sub
stos
jmp
in
stos
or
adc
jo
sbb
jb
xchg
mov
fldcw
in
in
roll
clc
bound
xor
in
push
repz
jmp
sti
in
xchg
xor
gs
test
pop
scas
jbe
imulb
icebp
xchg
imul
cli
fs
icebp
divl
in
jae
ret
pop
mov
jp
dec
sbb
imul
cmc
xchg
es
icebp
mov
jmp
pop
xchg
std
mov
mov
adc
leave
xchg
dec
push
aam
push
inc
gs
sub
jmp
andb
arpl
sbb
mov
popf
mov
sub
in
in
icebp
xchg
es
lea
push
mov
aam
scas
add
out
js
into
mov
mov
jle
imul
push
pusha
out
pusha
stos
fst
test
stos
rol
mov
mov
in
fmul
push
cmpsl
push
out
jge
sahf
packsswb
mov
lods
xor
or
xlat
mov
movsl
iret
push
jmp
jbe
pop
fisubs
shl
lods
inc
or
jg
lods
xchg
add
sahf
sbb
cltd
fstpl
leave
aas
jae
outsb
pop
fistpl
ja
orl
aam
pop
cwtl
adcl
push
xchg
push
cmc
pop
dec
push
and
in
or
adc
xorb
sub
imul
outsl
ljmp
imul
adc
xchg
das
mov
inc
jns
rorb
ss
dec
lret
cwtl
outsb
push
pop
rcl
cwtl
pop
push
insb
sbb
test
dec
push
mov
jns
out
pop
dec
xchg
mov
decl
pusha
cmpb
dec
stos
xor
push
xchg
jbe
ss
mov
aas
dec
outsb
fwait
pop
scas
jb
jp
fldl2e
xchg
push
inc
jmp
pop
call
push
cli
in
add
inc
cmpsb
scas
adc
adc
cmp
in
sub
imull
add
in
test
fsubs
pop
push
rclb
out
dec
push
gs
inc
nop
adc
adc
fwait
aam
mov
pop
jl
jmp
incl
gs
push
mov
cmp
adc
xor
pop
jmp
mov
popf
xor
in
stos
dec
cmpl
and
xchg
or
inc
call
xlat
xchg
xchg
in
push
imul
popf
xchg
aam
ret
dec
iret
sti
mov
inc
insb
xchg
adc
outsb
test
xor
les
sub
dec
popf
insb
push
iret
fimull
adc
pop
scas
push
aaa
int
jbe
jb
fimuls
push
fdivl
int3
push
es
das
outsl
mov
jecxz
lods
ret
xor
xchg
testb
push
aaa
mov
xchg
subl
loop
sub
adc
fwait
or
in
mov
and
inc
fistl
jecxz
cs
into
mov
xlat
or
push
and
sbb
fdivp
pop
cltd
xor
bnd
sahf
outsb
sbb
mov
out
fsts
jbe
dec
pop
mov
sbb
stos
xchg
int
mov
inc
cmp
sbb
jge
aam
xchg
neg
fdivrs
adcl
data16
push
jb
std
pop
aam
xchg
or
lock
add
inc
call
fiaddl
into
aas
fld1
add
aaa
rolb
enter
xor
fisubrl
sbb
cmp
stos
es
imul
ja
cmp
sahf
inc
cmc
call
jmp
in
add
hlt
inc
adc
ja
fnstsw
fsubrs
fs
push
cmp
cmp
fisubrl
mov
lods
jge
outsl
push
and
push
ror
stc
push
push
in
mov
fidivl
hlt
jns
jbe
imul
fwait
xchg
add
push
jge
inc
xchg
aad
imul
and
inc
lock
push
hlt
inc
dec
jl
inc
outsl
fdivl
lods
lods
loop
enter
push
add
sbb
pop
das
xor
in
leave
adc
push
in
pop
rcll
daa
xor
decl
fildl
xor
fidivl
js
ret
fstps
jnp
aad
cmc
pop
add
into
insl
adc
shrb
and
pop
and
in
ds
sbb
das
mov
in
fs
adc
inc
lcall
adc
xchg
in
xchg
push
ds
jg
enter
push
mov
xor
aam
pop
pop
fcompl
sbb
adc
dec
lea
testb
push
les
in
ds
cwtl
jnp
sbb
xchg
test
pop
mov
arpl
push
outsb
inc
fimuls
mov
push
imul
into
in
jnp
js
rcr
ljmp
push
mov
loopne
jnp
cs
mov
xor
push
call
push
testl
cmp
push
hlt
inc
pop
push
mov
popf
jl
aad
filds
xor
push
push
mov
lahf
jb
or
pop
push
arpl
xchg
shl
adc
pusha
mov
mov
mov
ja
mov
push
sub
lret
test
test
popa
ss
ret
pusha
push
sub
mov
js
cmpsl
lret
fdivrl
fs
mov
mov
lret
sbb
cmp
decb
lods
sub
cmpsl
mov
mov
xlat
pushf
sbb
adc
cmp
gs
orb
xchg
jle
xor
xchg
jge
mov
inc
jns
mov
imul
mov
aad
pop
and
or
shlb
dec
push
adcl
repnz
adc
arpl
adc
test
fists
out
call
mov
pusha
fistpll
xor
mov
push
pop
fiaddl
cwtl
dec
in
cli
pop
cltd
stc
mov
jb
repz
adc
repnz
ljmp
add
xor
inc
cmp
aam
jb
lods
sbb
xchg
fistps
data16
sbb
into
xlat
sub
xor
sbb
dec
jae
out
scas
ret
ret
popa
cmpsl
sub
cmpl
jmp
shll
mov
fbld
test
or
inc
pop
les
fisubrs
or
adc
sbb
jnp
mov
or
rcrl
fisttpl
fnstenv
adc
jb
mov
loope
push
and
adc
sub
js
sbb
add
test
push
out
xchg
fdivr
xor
jne
cmp
pop
xchg
lret
lds
push
lret
subb
sbb
adc
adc
push
mov
add
mov
rcrb
mov
dec
push
lahf
testl
xchg
push
lahf
or
xor
dec
cld
inc
stos
pusha
inc
inc
mov
push
xchg
or
cwtl
fnstenv
sbb
fwait
or
mul
cmp
inc
rcrb
jmp
mov
scas
icebp
sub
dec
loope
sub
mov
les
adc
add
subb
inc
mov
mov
gs
sub
inc
das
add
test
insb
xchg
dec
sbb
int
aas
cmpsl
movsl
lock
fucomip
je
mov
add
pop
imul
cltd
outsb
cmp
jne
or
fwait
jl
clc
rol
mov
mulb
sub
or
addb
cmp
jo
pop
dec
adc
sbb
into
adc
jg
out
jp
testb
addr16
dec
pop
push
sti
lcall
mov
pop
push
mov
insb
shrb
incb
ss
fs
xor
xchg
imul
pop
add
pop
movsl
xchg
ja
pusha
test
inc
push
add
mov
xor
pop
sbb
xor
inc
mov
shrl
in
ljmp
rclb
imul
cmc
out
mov
jno
stc
int
enter
je
out
mov
xchg
dec
mov
push
ret
leave
test
inc
shlb
insb
fcompl
cld
mov
fs
adc
scas
inc
pop
mov
icebp
fwait
outsb
repz
insb
mov
nop
gs
jecxz
push
fidivl
xchg
add
lcall
pop
mov
xchg
cmpsb
fadd
paddusb
jno
dec
dec
lea
jge
inc
out
ficompl
dec
push
stos
cli
sub
mov
hlt
jmp
jne
xlat
adc
mov
and
stc
jae
mov
pop
icebp
mov
jns
leave
addb
mov
sbb
pop
mov
and
insl
nop
jbe
xchg
fnstcw
lahf
pop
sbb
lret
in
inc
fildll
lcall
stc
push
roll
add
pushf
mov
mov
sar
jne
inc
jge
dec
paddw
lret
push
jg
les
push
stos
add
pushf
jae
fidivl
lock
shll
rcl
push
sbb
xor
mov
jmp
cmpl
test
xor
or
loope
ficomps
fiaddl
jb
dec
je
pop
cmpsb
cmc
test
cmpsl
stos
or
dec
in
sub
pop
xchg
stos
xchg
and
lods
arpl
out
cwtl
addr16
fldt
mov
inc
mov
shrl
aas
scas
mov
clc
test
iret
adc
sbb
inc
fstp
fldcw
mov
and
mov
fisttpl
mov
dec
scas
inc
jg
adc
jge
inc
ss
js
sub
or
push
data16
ret
mov
inc
leave
mov
in
push
jle
aad
faddp
insl
sbb
je
nop
cld
xchg
sti
and
imull
jge,pt
fidivrl
nop
jno
test
push
movsl
sbb
popa
sbb
xlat
jecxz
dec
mov
in
cld
shlb
testb
ss
dec
pop
insl
imul
add
jmp
test
adc
mov
je
cmp
inc
inc
in
repnz
xor
in
cmpsb
cmp
std
cltd
ror
add
xor
xchg
lahf
sbb
aad
xchg
adc
xlat
dec
cli
add
mov
cld
fisubrl
pushf
and
lret
push
aam
cmp
test
mov
sub
stc
adc
pop
in
leave
out
mov
leave
jecxz
xchg
mov
pop
aam
ret
sub
dec
sbb
push
imul
movsb
mov
clc
inc
dec
lds
push
repz
popf
dec
into
and
lahf
xor
push
and
and
pop
cmpsl
mov
dec
std
dec
sub
add
jl
mov
fwait
jo
fwait
cwtl
test
js
imul
push
inc
hlt
sahf
adc
jnp
addr16
xchg
in
adc
clc
adc
push
cld
mov
jae
repz
xchg
xorl
addr16
or
adc
sbb
cwtl
shrl
adc
in
fisubl
movsl
dec
aas
insb
shll
jl
jo
sbb
nop
xchg
icebp
xchg
mov
mov
scas
or
fucom
jmp
jg
sti
jecxz
jo
and
fs
hlt
and
cwtl
gs
cmp
xchg
lcall
jl
movsl
xchg
jp
arpl
inc
xchg
mov
jae
mov
jns
mov
mov
sub
shrb
leave
xchg
jno
lods
ficoms
bound
xchg
mov
sub
mov
in
sub
pop
jecxz
lods
stos
stc
rclb
lods
lea
pop
pop
adc
mov
insb
nop
mov
inc
xor
adc
addr16
pop
and
movsb
sbb
cli
add
cwtl
ret
scas
mov
loopne
filds
xchg
jb
sti
out
dec
mov
and
ja
inc
aaa
loop
fistl
mov
cmp
shl
pop
sbb
cmp
sbb
mov
gs
jnp
xchg
or
daa
sbb
fildll
mov
jg
jne
pop
lods
adc
lods
addr16
ret
push
pop
rcll
or
sub
pop
sbb
fwait
enter
scas
cmp
xor
inc
gs
xchg
push
adc
in
add
sub
xor
mov
pop
xor
es
sbb
mov
repz
adc
aaa
aam
lahf
test
lahf
decl
pop
inc
jmpw
imul
pop
notl
das
dec
aam
pusha
test
dec
es
or
and
mov
pop
in
popf
inc
push
add
xor
push
jns
pop
or
cmpsl
cmp
lods
jns
dec
fisubrl
push
insb
jnp
scas
data16
xor
pop
adc
add
push
pop
and
push
incb
cld
rorb
ret
mulb
inc
add
mov
jmp
xor
cmp
adc
or
or
ljmp
js
gs
mov
inc
shr
nop
push
xchg
movsb
adc
xchg
sub
outsl
subb
sbb
sbb
xchg
mov
dec
test
mov
add
sub
inc
loopne
in
dec
xchg
sti
rcrl
fnsave
adc
add
jecxz
fimull
xchg
mov
les
xlat
fidivrl
push
arpl
dec
lock
mov
push
test
mov
call
mov
popf
add
inc
sbb
xchg
xchg
cli
push
aaa
jecxz
divl
inc
movsb
xchg
or
js
jbe
daa
dec
ret
xor
jo
stos
outsb
in
insb
fsubrs
inc
dec
mov
xchg
or
mov
into
movsl
subl
mov
or
in
xchg
movsl
vandps
mov
xchg
scas
mov
clc
sub
sbb
cmc
and
adc
pushf
jg
imul
or
add
out
repnz
push
ja
rol
mov
dec
inc
divb
stos
into
bound
jg
cld
mov
pushf
inc
cmp
jmp
jle
lods
leave
scas
xor
outsb
icebp
and
or
gs
inc
dec
shl
dec
imul
xchg
fildll
subl
sbb
in
push
jge
int3
fnstenv
mov
pusha
jmp
insb
cwtl
add
ds
mov
ljmp
jecxz
or
adc
in
jbe
not
scas
bound
jbe
jns
jp
int
pop
shl
aad
mov
inc
sbb
mov
inc
fcmovu
rolb
popf
fidivl
das
cltd
shrl
sbb
jg
and
daa
sbb
das
xor
je
inc
popa
add
xor
fcomip
negl
xchg
lea
push
dec
sarb
test
push
pop
scas
sub
jno
insb
pusha
cltd
jp
sarl
shlb
aad
in
mov
xchg
loop
pop
pop
sbb
mov
jecxz
add
mov
jbe
jae
xchg
xchg
push
push
ljmp
pop
add
sbb
add
xlat
mov
gs
loope
xor
rolb
push
mov
adc
add
xchg
add
xchg
push
nop
mov
out
cltd
mov
mov
arpl
pop
mov
leave
xchg
insl
mov
add
mov
out
dec
pop
and
repz
pop
stc
test
mov
fsubs
fcomps
data16
push
xchg
xor
imul
std
loop
sarl
mov
jo
adc
sbb
jle
cmp
pushf
xor
into
sahf
gs
lret
fldl
add
inc
mov
cmpsb
pop
aad
fs
les
out
inc
out
addl
or
leave
stos
sbb
mov
cwtl
adcl
push
pop
mov
push
mov
jae
lods
ja
xchg
sbb
xor
jae
stos
outsb
shrl
daa
xor
shll
adc
pop
scas
mov
inc
sbbl
pop
sti
lock
inc
cmpsb
jmp
iret
push
xchg
sar
jmp
imul
and
fbstp
mov
pop
inc
lcall
repnz
push
dec
adc
sarb
push
mov
sbb
std
xor
ja
int
out
push
cmp
inc
loope
std
push
jnp
xor
pop
inc
loopne
add
cmp
push
dec
jae
pop
fadds
mov
imul
lods
icebp
cmp
jne
subb
push
lret
movsl
decl
cld
sub
inc
mov
or
push
jne
std
pop
faddp
subb
xchg
dec
jmp
cltd
xchg
daa
dec
mov
cmp
fstps
or
sahf
std
mov
fwait
ss
repnz
cmpsl
jb
push
inc
xchg
arpl
lret
stos
cli
mov
mov
or
mov
push
std
in
int3
popf
mov
jp
adc
xor
sbb
shlb
cmp
shrb
lcall
imulb
mov
mov
and
aam
push
sti
es
mov
mov
cmc
lahf
stc
lahf
sub
jl
adc
inc
fld1
scas
push
adc
inc
loop
xor
xchg
cs
ret
test
rcrl
jg
mov
dec
aas
xor
adc
stos
xor
lods
or
lret
push
out
sub
mov
adc
mov
leave
mov
rolb
dec
inc
arpl
mov
out
mov
repz
pop
cmp
shlb
lahf
mov
fcomi
ja
clc
push
arpl
or
lcall
sub
mov
xchg
aam
nop
sub
test
sbb
push
jle
roll
mov
lock
push
and
lds
scas
sbb
fldl
mov
add
loop
pop
cltd
iret
das
pop
stc
or
push
cs
aas
cmp
insl
jmp
or
lret
sub
in
sahf
push
adc
jmp
leave
jbe
and
daa
mov
hlt
popf
xchg
stos
out
iret
arpl
popf
jbe
pop
data16
sub
mov
or
cmp
jg
sbb
lcall
int3
and
sbb
inc
cmp
fcoml
mov
sti
inc
test
lahf
in
and
std
cli
push
pushf
mov
icebp
les
inc
outsl
mov
jg
lcall
jl
jp
inc
cmc
movb
icebp
adc
scas
mov
fstpt
mov
ret
and
rcrb
dec
cld
daa
test
test
ja
jae
cmp
or
and
orb
jge
mov
in
imul
ja
test
pusha
jle
inc
jno
lods
jmp
mov
mov
mov
mov
arpl
mov
inc
xchg
or
lcall
cwtl
addr16
sub
lea
jns
repnz
stos
push
insl
xchg
xchg
imul
sbb
fldt
mov
jb
cmp
pop
jnp
push
pop
jae
and
mov
xor
cmc
fdiv
ret
jmp
jbe
add
movsb
add
in
bound
jne
scas
fimuls
jo
pop
jae
xchg
or
push
jo
nop
ja
outsb
stos
mov
es
adc
jno
aam
mov
jl
xor
cs
outsl
inc
mov
mov
mov
mov
mov
mov
rep
sbb
sub
pop
inc
mov
nop
mov
lods
sarl
or
jns
push
sub
int
sub
or
jo
mov
push
pop
adc
xor
mov
psubq
adc
test
jmp
mov
scas
icebp
push
int3
push
xor
cli
and
jne
aad
xor
lods
cmpsb
cmc
hlt
cmp
inc
icebp
daa
adcb
lock
ljmp
lock
push
je
adc
pop
out
push
repnz
in
shrb
fwait
xor
lods
fcmovu
xchg
shll
clc
xchg
xchg
inc
ror
mov
mov
out
and
shll
aas
dec
sub
jae
out
adc
sub
cmp
mov
mov
xchg
inc
adc
mov
inc
repz
mov
xor
into
loop
pop
bnd
shrb
adcb
mov
imul
loope
xchg
xchg
ja
cwtl
aaa
dec
jle
add
adc
ret
mov
and
adc
dec
ficompl
repz
fs
push
add
dec
and
cwtl
dec
cltd
fcmovnu
xor
ficoml
mov
hlt
ja
pusha
inc
sahf
jp
cmp
lret
add
loopne
sahf
pop
pop
mov
hlt
inc
cmp
add
lock
inc
mov
lcall
das
adc
cltd
xlat
mov
or
cmp
jns
outsl
aas
fs
cmp
outsb
aas
ja
shlb
xor
sbb
es
pop
loopne
cmpsl
jne
and
sbb
imul
ss
xchg
pop
mov
mov
pop
ja
rcr
repnz
out
pop
aaa
scas
cs
mov
xchg
mull
sbb
fdivrl
and
dec
lea
jo
mov
andl
enter
sbb
pusha
mov
and
jnp
iret
add
das
icebp
daa
rcll
mov
test
cld
xor
jge
and
cmp
mov
push
inc
pushf
inc
inc
stos
xor
or
bound
push
jnp
outsb
loop
add
repz
or
adc
mov
cmpsb
mov
mov
int3
scas
push
leave
push
add
cs
jne
ja
sti
mov
lret
inc
jo
hlt
jae
imul
push
aaa
fnstenv
push
inc
mov
nop
adc
mov
test
hlt
jecxz
cmp
les
imul
mov
inc
dec
mov
jo
cmpsb
in
xchg
mov
jne
xor
jb
mov
mov
lock
mov
jp
jne
mov
loope
cmp
hlt
mov
push
std
shr
xchg
daa
ljmp
dec
mov
ret
popa
fisubs
testl
pop
push
scas
push
stos
mov
cmp
cmp
sub
sub
hlt
filds
xchg
pop
cmp
mov
aam
ds
add
pop
stos
jno
inc
push
inc
push
ret
es
fsubl
lea
inc
push
mov
scas
data16
outsb
sarb
dec
rorb
push
mov
testb
pop
adc
pop
dec
subb
js
dec
inc
loop
add
es
dec
out
sub
mov
test
or
jge
jae
push
dec
scas
mov
or
add
or
lcall
lea
sub
adc
cltd
adc
push
push
push
js
pop
and
mov
movsb
mov
cmp
sbb
xchg
mov
rclb
cmp
inc
push
cmpl
mov
mov
insb
shl
pusha
mov
cs
and
pop
xlat
ret
movsl
mov
xor
jmp
jbe
lret
jns
jo
ficomps
imul
sbb
fcomps
dec
pop
xor
xor
mov
incb
aaa
jmp
or
and
scas
jle
pop
or
into
jle
movl
push
push
add
push
adc
testb
leave
dec
pop
movsl
dec
push
dec
pop
inc
ret
lock
movsl
push
gs
inc
sub
lds
sub
adc
xchg
jl
stos
mov
sbb
dec
xor
das
das
sbb
mov
fisttpl
sbb
addb
mov
rorb
negl
fimuls
mov
test
out
insb
jge
mov
adc
pop
bound
std
bound
mov
mov
cmp
sti
ficoms
or
cmp
ds
push
add
out
xchg
pop
test
movsb
or
inc
mov
cmp
imul
insw
mov
call
aam
add
jb
das
pop
inc
ret
fimull
push
test
xor
jae
scas
or
or
inc
lds
or
mov
mov
sti
mov
jne
fidivrs
pop
ret
stos
mov
lret
mov
xchg
int
jle
mov
inc
cs
add
sub
mov
xchg
lcall
notl
in
pop
mov
out
xor
add
adc
pop
push
stc
adc
or
clc
mov
lea
sub
das
xchg
sbb
and
mov
pop
mov
stc
mov
jns
fcoms
inc
gs
pop
sbb
mov
jbe
fistps
imul
lock
das
and
xor
in
push
arpl
roll
in
outsl
add
adc
outsl
xchg
lods
push
orb
adc
mov
es
mov
jbe
add
jp
or
push
mov
mov
push
xchg
sub
sbb
mov
fimull
mov
pop
add
mov
subl
sbb
fbstp
test
addr16
mov
jo
dec
shl
mov
iret
je
adc
orb
fiaddl
cltd
push
clc
pushl
lret
fisttps
pop
xor
add
add
mov
outsl
sub
or
mov
add
push
rclb
xor
jo
mov
cli
stos
fiadds
je
sbb
inc
add
mov
mov
jecxz
loopne
or
movsb
pop
sbb
insb
fnstenv
and
cld
mov
push
pop
iret
inc
adc
jo
push
mov
mov
shlb
rclb
test
add
xor
or
inc
es
pop
imul
or
sahf
inc
and
fs
jle
leave
dec
pop
icebp
inc
aam
outsl
sbb
lds
push
and
mov
int3
mov
cmp
push
leave
movsb
popa
inc
pop
cs
and
xchg
lret
orb
add
cmpsl
repz
mov
sbb
jecxz
cmp
ficomps
inc
stos
or
push
imul
jmp
je
clc
stos
mov
dec
repnz
jge
or
cmp
mov
cmp
mov
inc
rcrl
into
mov
xchg
mov
repnz
rclb
xchg
pop
push
push
lds
inc
sbb
and
fwait
dec
jecxz
insl
in
sub
add
add
sub
daa
xor
jbe,pt
sarb
xchg
push
ja
jo
push
cltd
int3
fwait
out
clc
nop
mov
xor
stos
pusha
test
cmpsb
xchg
cmpsl
movsl
lret
loope
lahf
cmp
xorl
xchg
sbbl
mov
aaa
mov
dec
dec
clc
das
pop
pop
sbb
adc
js
stc
push
popf
or
ja
or
lcall
iret
cs
mov
and
push
popa
adc
aam
xor
inc
insb
idiv
lret
lcall
movsl
into
les
fcoms
outsb
push
insb
loop
push
mov
jp
imul
test
cmp
int3
jp
push
xchg
jp
pop
enter
inc
and
ret
in
in
inc
fwait
inc
cmp
jo
adc
rcrl
pop
cmp
icebp
aam
jo
subb
ror
loop
js
cmp
xchg
cwtl
cmpsb
test
adc
sub
fstp
xchg
and
cmp
mov
xor
gs
fstps
inc
in
out
cs
pop
xchg
sbb
xchg
cltd
mov
sub
jbe
sub
mov
cs
leave
jb
dec
mov
testb
mov
loopne
clc
jecxz
sti
mov
xchg
icebp
cmp
insb
shlb
xor
mov
sbb
fsubrp
lcall
adc
push
lods
aad
mov
sti
inc
jne
adc
int
test
xchg
stos
pop
ss
cltd
cmpsl
cmpsb
sbb
hlt
pop
dec
xchg
jle
dec
das
mov
enter
pop
test
lods
cmp
add
and
mov
negb
cmpsl
pop
mov
rcr
sahf
movsb
mov
aad
sbb
inc
mov
call
addr16
mov
in
fisttpl
test
cmp
jne
mov
push
sub
mov
cmpl
cmp
out
scas
cltd
xor
popa
lahf
sahf
push
movsb
push
push
push
arpl
pop
sar
push
fs
push
test
fdivs
mov
jns
inc
aam
add
stos
loope
fs
add
rep
mov
outsb
rcrb
push
and
mov
lock
into
lret
movsl
dec
inc
or
popf
adc
xor
leave
out
mov
mov
sub
icebp
lods
fcmovnbe
or
js
push
mov
je
ficomps
mov
clc
mov
mov
cmpsb
inc
out
cmp
arpl
sbb
cmovg
or
ljmp
push
out
add
jmp
mov
movsl
fmuls
insb
mov
jbe
cmc
in
dec
loop
dec
xchg
adc
add
pop
cmp
mov
in
enter
movb
lcall
pop
sub
aaa
enter
loopne
cmp
in
push
xlat
in
pop
xchg
push
mov
xor
mov
sub
xor
jecxz
mov
cmpsb
iret
xchg
arpl
negl
xor
insl
mov
les
sub
inc
jo
sub
xchg
div
xchg
nop
in
push
push
sbb
sbb
pop
xorl
call
jl
and
fimull
jp
clc
fsubr
outsb
fld
sti
pushf
cwtl
lock
shlb
pop
mov
xor
or
cmp
xchg
sub
inc
adc
dec
mov
aaa
xchg
dec
adc
es
stc
data16
arpl
or
lret
or
std
test
dec
bswap
inc
sub
add
ljmp
add
in
mov
or
mov
popa
int
mov
sbb
xor
insb
aam
cli
aas
jbe
pop
xchg
mov
add
and
pop
jecxz
das
push
cwtl
int
adc
in
mov
cmpsb
aad
aaa
pop
shlb
lcall
std
ret
sti
adc
jno
and
mov
mov
push
mov
inc
popf
adc
sbb
repnz
fs
pop
inc
aad
add
das
dec
or
adc
push
cmp
jl
insb
shlb
shrl
pop
push
clc
pushf
lret
push
push
lea
jge
adc
cmp
sub
ljmp
jge
push
mov
mov
lock
mov
mov
sub
stos
or
push
ret
inc
dec
sub
or
dec
or
mov
cmpsl
mov
sarl
or
adc
pop
pop
sbb
xchg
addr16
dec
jg
scas
push
pop
push
pop
and
pop
push
mov
xchg
enter
and
mov
inc
in
lods
mov
or
mov
xchg
dec
inc
xchg
mov
fbstp
push
fldcw
test
test
add
or
sarl
lods
lcall
fstenv
ja
outsl
out
sbb
pop
outsl
mov
popf
outsl
dec
jno
mov
mov
mov
aaa
adc
out
shll
pop
sub
jmp
jo
jg
out
cld
popf
adc
or
in
and
lods
sahf
push
es
push
mov
inc
mov
mov
ret
repz
out
cld
loope
ljmp
mov
mov
fbld
stos
cmp
lods
pusha
sub
inc
xchg
dec
mov
jmp
mov
bound
or
jecxz
gs
xchg
sub
xchg
cli
mov
xor
jno
mov
dec
sub
cli
mov
in
ficomps
je
aaa
icebp
out
jb
dec
xchg
and
int
int
es
pop
cmp
xor
pop
lock
arpl
fsts
fildll
jmp
mov
xchg
inc
and
popf
push
push
fs
jmp
inc
lcall
mov
fldenv
jg
pop
cmpsl
lret
cmp
lods
mov
sub
rclb
das
daa
fildll
xchg
push
cmp
add
adc
jae
movl
rcr
adc
mov
xchg
outsb
push
sbb
cmp
stos
cmp
ret
xchg
daa
xor
push
loopne
add
push
dec
push
lods
iret
or
xor
pop
sbb
rol
dec
mov
pushf
sbb
nop
jo
jo
mov
jno
push
adc
nop
xor
shrb
gs
lcall
dec
popf
shrl
mov
jl
mov
out
es
es
sahf
cmc
xchg
add
cmpsl
pusha
lret
mov
mov
xchg
xchg
mov
add
les
mov
jmp
idivl
repnz
xchg
mov
push
push
adc
aad
aam
loopne
pop
jo
and
int
sub
xor
sbb
pop
sbb
inc
in
and
movsb
std
das
cmpsl
fsubrs
mov
inc
sbb
xchg
iret
jecxz
adc
imulb
aam
das
xor
jo
addl
xchg
loopne
test
in
mov
and
and
mov
xor
sub
movb
xchg
and
push
jb
movl
dec
in
xchg
dec
dec
lock
jp
jb
loopne
lods
std
push
or
pushf
dec
or
mov
cmpsb
jmp
testl
mov
stos
fiaddl
pop
push
rorl
das
lcall
adc
xchg
pop
jle
dec
outsb
mov
scas
jae
cltd
sarb
cmp
daa
cmp
mov
out
inc
cmp
dec
div
push
orl
ds
jne
shlb
js
pop
push
mov
jno
xchg
mov
ffree
and
sbb
clc
xchg
push
push
outsl
xchg
mov
mov
cmpsb
mov
push
pop
scas
leave
movsl
inc
bound
xchg
dec
inc
cmp
cmp
out
pusha
daa
dec
add
cmp
add
fdivrl
dec
fldt
popw
dec
ljmp
gs
adc
and
push
js
add
cmp
out
rcrb
shrb
lea
aaa
mov
add
push
and
dec
dec
arpl
int3
push
add
pop
push
sub
jne
ds
xor
and
cmp
mov
jno
in
push
pop
mov
into
es
stos
push
add
or
sub
fsubp
push
mov
ficompl
test
cwtl
xchg
dec
nop
ds
cmp
inc
inc
inc
jae
fisttps
mov
cltd
ja
pop
aas
mul
add
add
pop
test
mov
shlb
dec
adc
sti
shrl
push
mov
dec
repnz
mov
dec
mov
mov
cmpsb
mov
daa
pop
cmp
and
cwtl
test
shll
cli
sarl
xchg
or
cmp
mov
mov
push
popl
outsl
not
cld
lcall
cmp
or
push
adc
push
sbb
sbb
xor
fstp
mov
fldt
icebp
cmp
push
dec
popf
loopne
fld
lret
je
ljmp
pop
addb
je
push
test
jo
jnp
insb
mov
xchg
in
adc
iret
clc
lods
and
jle
xchg
loopne
jmp
jecxz
jnp
xor
mov
std
push
xchg
mov
ja
xor
mov
insb
sbb
pusha
dec
and
pop
int3
adc
sti
testl
push
adc
es
js
hlt
rclb
fcomps
push
sub
mov
daa
test
mov
xchg
and
cmc
or
and
orl
xchg
sub
sahf
add
push
xchg
into
aam
cmp
inc
inc
in
decl
add
in
dec
add
xor
inc
sub
call
pop
push
test
ss
dec
js
lods
xchg
jmp
popf
cs
mov
mov
insb
xlat
push
xchg
bound
hlt
mov
cmp
sub
sbb
je
jbe
hlt
xlat
data16
popa
stc
jbe
scas
jns
mov
repnz
sbb
jle
xchg
mov
adc
pop
arpl
insb
ds
fneni(8087
xor
cltd
mov
mov
lods
cld
cltd
dec
cs
notb
mov
scas
rclb
push
push
inc
sahf
lcall
cmp
dec
bound
scas
push
or
leave
push
outsb
push
pushf
popa
push
pop
and
pop
add
jae
pop
jecxz
cmp
aam
es
gs
adc
cmp
pop
jle
cmpsl
adc
mov
jp
outsb
jl
leave
popf
call
add
xor
sub
dec
stc
ja
pop
pusha
cltd
sbb
fimull
fnstenv
jo
cmp
out
stc
sti
aam
ss
mov
aad
cwtl
mov
enter
cmpsb
or
push
mov
mov
daa
push
mov
adc
stc
sbb
in
cmp
lret
adc
jo
jge
shlb
mov
jl
dec
adc
lret
jge
repnz
lret
mov
mov
inc
pop
or
push
fcmovu
push
dec
in
and
mov
in
fnstcw
popf
sbb
insb
aam
addr16
outsl
ret
jns
pop
shrb
and
test
addr16
test
jnp
mov
arpl
sets
xor
dec
inc
pop
xorb
or
loope
int3
call
push
add
out
jecxz
jno
fwait
jecxz
mov
dec
jmp
adc
push
and
adc
inc
out
jl
sbb
jo
dec
xorl
imul
sub
xchg
jne
cmp
or
fisubrl
sub
fldpi
mov
mov
mov
or
mov
xor
xchg
push
ljmp
aaa
cli
xchg
sub
inc
aas
fists
lea
aam
or
ljmp
xor
seto
repz
mov
lods
rclb
in
jg
pop
inc
mov
mov
add
or
fistl
pop
cmp
in
out
pop
int3
mov
inc
movsb
mov
xor
sbb
push
push
mov
fs
jo
jl
and
sub
dec
sti
cltd
call
cmp
cmp
outsb
mov
ss
inc
insb
cmp
inc
movsb
out
je
gs
xchg
mov
cmp
out
adc
lods
mov
cmp
out
sub
xchg
mov
ret
pop
xchg
mov
mov
aam
jp
std
cmp
dec
sbb
xor
in
fbld
adcl
jg
ljmp
in
daa
push
std
out
dec
push
fstpt
adc
lret
std
insl
or
jb
les
sbb
lds
sahf
mov
lods
aas
loope
cmc
stos
rcrb
sbb
imul
mov
imul
ljmp
cwtl
mov
jmp
fdivl
rorb
jle
jae
sbb
cmp
mov
in
push
jae
lcall
xor
in
and
es
es
shlb
mov
jb
mov
fnstsw
dec
movsb
idiv
cmp
xchg
stc
jo
dec
sbb
adc
sbb
cmp
outsb
pop
sub
mov
lret
int
mov
mov
aam
js
fsubrs
pop
pop
mov
xchg
xchg
or
mov
aam
out
push
imul
frstor
ja
test
arpl
cmp
ret
xchg
dec
ljmp
push
hlt
jns
jne
adc
arpl
mov
xor
mov
and
aaa
enter
cli
nop
outsl
rorl
xchg
and
movsb
nop
inc
sub
mov
sbb
stos
sub
push
xor
inc
xor
inc
adc
adc
fs
sub
or
imul
mov
leave
popw
js
sbb
nop
rcr
add
loop
or
subb
xchg
inc
mov
inc
gs
ret
loope
int
sub
adc
scas
fwait
mov
pushl
or
stc
cmpsb
imul
inc
pop
pop
and
fistpll
insl
adc
arpl
das
xlat
pop
rorl
dec
pop
pop
jne
sub
iret
andl
sbb
sub
cmpsl
jmp
add
adc
sti
lcall
mov
xchg
shll
mov
cmp
into
pushf
or
or
bound
addr16
daa
adcb
jecxz
stos
adc
ret
loopne
data16
xor
mov
lods
cmp
jge
dec
dec
mov
movsl
lret
ret
lods
fmull
mov
mov
frstor
fs
mov
push
push
bound
mov
iret
int
lods
in
test
dec
mov
enter
pop
movsl
xchg
dec
xchg
cmp
lds
aad
mov
xlat
popf
scas
rcrb
cld
mov
sub
sarb
xor
ret
int
negl
xor
stos
dec
mov
xchg
cmp
xchg
lea
fwait
cmp
xchg
lock
stos
xchg
out
out
leave
lods
xchg
call
pop
stc
inc
cmpsl
adc
jns
jge
pop
adc
sti
jmp
sub
insb
jne
sub
pop
and
je
je
cmc
push
and
mov
jnp
out
or
outsl
rol
aas
stos
shl
stos
mov
negl
mov
jno
pop
scas
loopne
dec
je
push
mov
inc
or
mov
pop
dec
gs
adc
cmp
arpl
add
pop
dec
xchg
cli
cmp
mov
push
popa
sti
add
out
out
push
xor
ljmp
pop
cmp
out
sbb
pusha
mov
mov
int
lock
and
adc
andb
outsb
ja
push
add
jbe
filds
data16
push
pushf
sahf
std
fdiv
cwtl
mov
xor
sub
xor
incl
and
or
pushf
xor
addr16
cli
adc
adc
mov
jnp
jmp
idivb
outsb
movsl
adcl
cmp
std
push
loopne
cmp
add
sub
in
push
sbb
inc
jno
cwtl
push
mov
mov
test
add
pushf
iret
je
shrl
adc
lods
mov
lea
aas
lock
mov
xchg
xlat
lds
add
mov
pusha
stc
sbb
push
ret
aaa
je
pop
and
test
popa
sahf
inc
mov
ret
adc
mov
push
mov
push
mov
pop
fcomps
dec
sbb
pop
sub
stc
and
push
push
sbb
sbb
js
ljmp
mov
or
fldln2
sbb
xchg
ret
popf
pop
mov
adc
sbb
cld
cmp
add
cld
pop
adc
pop
xchg
push
scas
imul
push
xor
sub
lds
adc
and
ficomps
sub
jbe
stc
adc
jmp
push
pop
xor
call
aaa
lods
lock
jo
outsb
xchg
xchg
iret
or
adc
or
icebp
flds
es
imul
xchg
cmovl
pop
sub
adc
xchg
pop
ror
enter
jns
js
jge
cmp
arpl
push
mov
cmp
addr16
hlt
or
mov
jge
loope
push
adc
arpl
cmp
or
mov
adc
addr16
jle
cmp
xchg
or
int3
pop
cmp
cld
cwtl
ffreep
add
mov
test
mov
test
stos
hlt
jl
sahf
into
cli
inc
or
test
inc
fwait
cmp
cli
and
or
push
add
dec
mov
sbb
repnz
adc
xor
and
xchg
cltd
shlb
dec
push
pop
int
jno
push
daa
push
xor
adc
pop
push
mov
dec
movsl
mov
mov
push
jne
andb
sub
int
aam
aaa
mov
mov
repnz
test
sub
push
or
out
jle
icebp
sti
and
push
mov
add
cwtl
enter
fyl2x
lret
add
cli
js
sub
popf
xor
loopne
loop
outsb
or
jmp
pop
pusha
mov
add
movsl
xchg
or
and
xor
sarb
sbb
call
jb
stos
cmp
inc
cmp
lods
xor
cmpsl
aaa
and
mov
inc
pop
and
fwait
push
jmp
ret
popf
xlat
add
iret
in
fwait
xor
push
xor
push
pusha
js
dec
ljmp
jmp
cmp
in
xor
sbb
loope
addb
fwait
mov
jp
shlb
test
mov
movsl
fsubl
out
test
jne
add
mov
push
out
xchg
pop
xchg
mov
loopne
push
in
lret
mov
inc
push
es
lret
aam
jbe
push
rorb
mov
adc
rorl
cmp
adc
pop
sti
add
fisttpll
outsl
loop
jbe
subb
ss
mov
dec
xor
int3
sbb
sub
aas
sub
sub
mov
dec
and
sub
stos
sub
pop
stos
jle
cmpsl
cld
loopne
add
adc
ja
stos
ljmp
push
outsb
cmpsb
push
das
enter
mov
mov
xchg
test
or
icebp
sbb
lock
lret
pop
loopne
subl
push
dec
les
sbb
xchg
jbe
mov
sub
call
jb
push
and
js
xor
fwait
xor
out
inc
or
ljmp
push
mov
fists
inc
mov
sub
jecxz
mov
js
xchg
or
out
loope
cmc
or
push
sbb
stc
in
push
loop
in
add
mov
sub
xor
out
push
or
mov
iret
gs
adc
dec
push
insl
jl
or
jp
imul
sbb
inc
xchg
out
sbb
jns
xchg
ss
xchg
xor
ds
scas
mov
dec
imul
mov
cmp
jge
lret
mov
leave
inc
pop
jmp
adc
dec
loopne
mov
inc
movl
jecxz
stc
out
pusha
sahf
sub
jmp
xlat
repz
mov
lcall
test
outsl
and
xchg
sbb
test
cmp
out
jle
lods
cmpsl
push
imul
out
mov
int
xchg
pop
add
push
movsl
xchg
pop
cmc
aad
test
out
dec
pop
roll
int3
adc
cwtl
test
xlat
cld
insl
dec
fnsave
add
mov
movsl
pop
cmp
rcll
insb
gs
shr
xor
leave
mov
lret
adc
fcmovnbe
jecxz
addr16
dec
loope
sub
sbb
mov
mov
lret
mov
int
mov
push
pop
push
xor
andl
mov
mov
sarb
pop
or
dec
mov
insl
pop
sub
jae
rolb
cli
jae
test
xchg
push
loope
inc
mov
inc
pop
push
xor
sub
xchg
mov
mov
jle
mov
cld
pop
sti
icebp
cmp
fwait
rorb
dec
movsb
ljmp
rcrl
test
mov
dec
push
ficomps
sub
sahf
push
jmp
fdiv
push
pop
ds
sbb
fisubrl
nop
mov
and
cmp
lcall
cmp
movsl
jno
iret
mov
stos
loopne
out
and
xchg
jo
ds
inc
mov
or
push
xor
and
dec
inc
pop
add
rcrb
mov
adc
adc
mov
pusha
scas
roll
xchg
push
mov
adc
xor
sub
mov
dec
pushf
ret
push
and
xor
mov
dec
dec
out
inc
pop
int
jmp
add
mov
les
roll
cli
aas
mov
cltd
inc
test
sarb
xor
mov
push
scas
pop
mov
or
cmp
sti
dec
and
mov
add
movb
push
xor
fistpll
sbb
inc
shll
xor
cs
dec
sub
adc
lahf
push
mov
lret
adc
xor
fwait
stos
xchg
add
aas
xor
adc
pop
imul
decb
dec
jecxz
cmc
and
add
sar
pop
and
xchg
daa
ret
adc
sbb
pusha
sbb
ds
xchg
pop
dec
mov
inc
leave
push
inc
mov
xchg
xchg
aam
inc
xchg
or
or
mov
jbe
push
cltd
mov
sbb
xchg
jnp
xor
xchg
sahf
je
ret
cs
cmp
fiadds
mov
pop
sbb
test
cmp
insl
mov
rorl
xchg
cmp
dec
cmp
xchg
icebp
push
test
cltd
mov
sub
jg
xor
aam
icebp
pusha
enter
icebp
sbb
sbb
add
sub
xor
bound
cs
cmc
sub
xchg
subl
cwtl
cmpsl
sbbb
adc
push
fldcw
notb
insb
mov
outsl
xor
fwait
aad
scas
sub
adc
pop
dec
out
adcl
mov
pop
pushf
das
jb
jb
add
ret
inc
addr16
xor
das
pop
popa
cmp
mov
test
lods
cmp
sub
scas
mov
int3
jb
arpl
mov
xchg
and
or
lods
fiadds
in
fs
sbb
mov
push
cs
add
add
insb
mov
cmp
jmp
pusha
or
cmp
push
mov
lcall
mov
mov
popl
jne
push
lods
cmp
lods
and
fsubr
es
sarl
pushf
adc
int
mov
pusha
dec
adc
dec
dec
xchg
sahf
sarb
mov
punpckhwd
cmp
dec
mov
ret
or
faddl
xchg
cmp
in
lcall
ret
imul
adc
lretw
scas
jnp
ds
jge
fldcw
adc
mov
xlat
scas
cmc
test
sbb
popf
lahf
lds
mov
pop
pop
mov
mov
push
fwait
out
mov
jge
adc
or
or
mov
sub
outsb
je
push
mov
jne
lahf
cmp
aas
jge
dec
xor
and
inc
hlt
dec
and
insb
sub
push
das
jge
cs
adc
icebp
sbb
add
bound
insb
xor
test
clc
xor
sub
or
in
loope
push
mov
pop
in
add
mov
pop
cmc
and
cmp
lcall
les
inc
mov
leave
shlb
and
rolb
adc
rolb
xchg
add
jg
shrl
jge
adc
jae
mov
lret
imull
mov
in
lret
aas
out
sub
jecxz
or
or
mov
sub
pusha
xor
int
dec
push
nop
dec
cmp
bound
cs
mov
cmpsl
inc
jl
cld
pusha
out
icebp
ljmp
lret
and
es
sbb
push
leave
xchg
ja
ret
in
jb
popf
int3
gs
repnz
pop
enter
call
xor
aaa
sti
mull
fldcw
sbbl
inc
add
inc
int
adc
std
hlt
push
cmovno
orl
dec
xlat
inc
xor
lods
in
bound
mov
mov
mov
cmp
mov
cmp
push
pusha
aad
scas
lret
pushf
mov
subl
in
scas
imul
add
scas
pop
jge
jb
jge
add
pusha
xchg
cli
lret
adc
dec
call
lea
mov
adc
fwait
lret
arpl
ficoml
mov
push
loope
lock
stos
lock
sbb
ljmp
xor
push
or
das
sub
push
mov
cmc
jmp
push
pop
iret
in
jp
hlt
out
ficompl
xor
call
loop
adc
fstpl
pop
fsubrl
outsl
dec
sbb
xor
jns
xchg
adc
dec
mov
or
js
addr16
mov
push
rcrb
mov
xor
sub
push
jg
jmp
fnstenv
mov
faddl
jbe
imul
pop
repnz
int3
cmp
mov
mov
push
mov
jb
push
dec
dec
mov
add
scas
repz
lock
repnz
push
stos
std
fs
xchg
bnd
adc
daa
adc
icebp
inc
jecxz
mov
fisttps
or
adc
push
cmp
mov
insl
fs
and
addb
out
fs
dec
imul
mov
mov
movsl
scas
mov
sub
stos
loopne
addr16
lock
bound
enter
inc
dec
or
les
xor
aas
xchg
xchg
rorb
jmp
fs
adc
jmp
test
lods
sub
xchg
xchg
xlat
sbb
sbb
sbb
mov
in
mov
sub
cmp
pusha
jle
pop
pop
pop
iret
sbb
arpl
pop
inc
lods
pushf
rclb
call
mov
cmpl
mov
adcb
mov
fisttps
mov
xchg
jl
adc
xchg
mov
jl
inc
in
leave
es
cmp
aaa
lret
sbb
inc
inc
push
out
add
jecxz
jmp
and
and
mov
xor
xchg
inc
scas
pop
push
jge
dec
imul
xchg
add
add
xchg
mov
rolb
jg
add
in
mov
xchg
enter
and
pop
jnp
or
and
outsl
shlb
sbb
jns
sbb
xchg
pop
add
movsb
sbb
nop
xor
bound
cmp
xchg
or
hlt
push
out
xchg
data16
push
bnd
ss
mov
and
scas
xor
sahf
in
nop
sbb
ror
js
js
xchg
jp
shl
movsb
jno
aam
int3
ljmp
xchg
sbb
sbb
mov
aad
and
stos
xchg
gs
add
ret
lods
outsb
stos
in
cld
cli
mov
loope
clc
iret
out
sub
insb
repnz
push
movsb
mov
mov
fsubrs
arpl
dec
dec
das
stos
in
int3
fs
test
neg
push
loope
xor
and
lea
out
mov
stos
dec
into
adc
and
xchg
test
in
outsb
test
and
fstl
outsb
ret
jecxz
js
out
pop
lods
leave
rorl
test
lds
ljmp
inc
mov
mov
ror
pop
or
ret
cmp
add
pop
hlt
mov
dec
ja
mov
lahf
dec
je
test
pop
adc
ret
insl
lahf
sub
adc
les
adc
repnz
cmpsl
lds
mov
int
stc
imul
push
sbb
jmp
inc
fisttps
xor
mov
mov
mov
xchg
pop
aaa
cmpsl
pop
mov
fnsave
jg
mov
mov
insl
popa
out
xchg
xchg
popa
dec
jg
data16
jno
push
mov
loopne
xchg
mov
xchg
or
dec
xor
test
enter
imul
in
jbe
push
inc
cmp
inc
scas
aam
lret
mov
inc
outsb
push
push
sbbl
test
hlt
fisttps
enter
inc
sub
jnp
das
mov
dec
jp
pop
add
mov
in
sub
xor
xor
xchg
push
scas
pushf
jp
push
cmp
aaa
popf
loop
scas
div
adc
jno
out
ret
std
and
nop
or
pop
cmpsl
scas
push
jnp
or
mov
mov
add
push
cli
xchg
mov
xor
sbb
push
out
mov
push
or
fcompl
and
adcb
xlat
inc
das
and
stos
in
sub
popf
cmpsl
sahf
cmp
or
jecxz
push
lea
push
jge
es
aas
or
jg
stos
shlb
ss
mov
aaa
aam
lret
add
bound
into
out
xor
or
xchg
mov
add
sub
in
jg
pushl
adc
mov
ret
jbe
in
jecxz
mov
adc
or
out
mov
mov
pop
and
mov
mov
int3
or
mov
mov
sub
dec
adc
fisttps
push
dec
push
roll
out
testb
loope
ficoml
dec
xor
pop
loope
inc
ret
sahf
sbb
xor
mov
sub
jns
shll
js
jle
negb
mov
mov
shr
das
or
xchg
sub
enter
xor
out
inc
dec
pop
xor
pop
adc
mov
adc
rcrb
mov
mov
addb
mov
inc
fs
inc
or
pop
jp
out
outsl
pop
popa
add
jnp
inc
xor
adc
or
nop
jp
shrb
nop
test
loop
imulb
sarb
ret
pusha
in
mov
jne
jae
push
push
push
mov
addl
lds
filds
jl
cmpsl
jno
test
sbb
pop
dec
mov
xor
xchg
sbb
push
mov
or
cmpb
ret
jae
xchg
jb
std
mov
std
push
cmpsl
pop
insl
or
sbb
add
fdivs
and
adc
in
pop
mov
mov
ja
or
lods
cltd
or
std
testl
add
adc
cmp
loope
test
cmpb
push
jp
sti
sarl
xor
scas
aam
rorb
cwtl
jno
addr16
mulb
or
shrl
adc
add
ficomps
in
rorl
or
mov
nop
pop
sub
ja
sub
add
pop
pop
ret
fidivrl
adc
sahf
mov
into
fwait
cmp
adc
mov
les
pusha
rcl
je
and
adc
pop
xchg
push
movsl
cmpsl
in
mov
add
inc
popa
filds
dec
sahf
mov
lods
inc
js
les
hlt
jl
loopne
xor
sbb
out
addr16
inc
mov
clc
add
pusha
xor
and
xchg
cmpsb
pop
cmp
stc
jg
shlb
add
andb
outsb
push
movl
fisubl
cmp
xchg
fstl
mov
xor
inc
cmp
jb
pop
add
imul
and
lock
repnz
imul
jns
push
mov
cmp
and
lret
jmp
lahf
lea
inc
inc
inc
in
stc
push
imul
adc
jnp
adc
push
insb
jne
adc
mov
in
mov
out
mov
js
cmp
inc
test
and
lds
inc
jbe
flds
loop
shrl
or
addr16
xor
adc
lcall
jb
xor
leave
jmp
rorl
mov
add
loopne
and
jl
push
les
cmp
mov
xor
lcall
repnz
pop
ret
sub
shrb
pop
mov
rcr
dec
jo
nop
ja
jle
loop
sbb
xor
add
add
lock
hlt
pop
gs
pop
and
icebp
lods
jns
bound
jae
inc
or
or
lret
dec
fsubl
lods
ljmp
arpl
negb
in
aam
jae
ret
inc
stc
pop
andb
cmp
cmc
dec
inc
mov
cmpsb
inc
sar
jge
loope
aas
sub
cmc
bound
xchg
mov
mov
pop
aaa
xchg
ret
out
mov
sub
xchg
sub
rol
pusha
jp,pn
ljmp
pop
jmp
jo
ffree
cs
push
dec
je
add
sbb
add
mov
test
sbb
cltd
repnz
ljmp
dec
xchg
inc
and
insl
sbb
pop
shlb
fmuls
add
mov
mov
xchg
hlt
dec
hlt
stos
sub
scas
rcl
imul
aam
push
push
pop
jb
mov
cmpsl
iret
add
int3
inc
dec
sti
inc
pop
xchg
mov
inc
pop
cmpsb
loop
sbbb
cs
lea
dec
shl
aad
pop
ds
idivb
sub
lcall
test
lea
andb
inc
pop
test
sbbl
adc
jnp
ja
cmp
and
aam
shll
mov
push
mov
pop
add
iret
or
pop
fiaddl
push
and
ljmp
rcrl
lea
adc
mov
cltd
and
jge
or
xchg
cs
cmpsb
mov
fiadds
stc
mov
out
push
jb
xchg
and
int3
sub
test
xchg
imul
mov
lods
sbb
jl
pop
pop
jns
mov
adc
add
stos
mov
xor
out
outsl
mov
fnsave
jmp
jle
pop
pop
fmulp
scas
xchg
adc
imul
dec
movsl
adc
cmp
pop
pop
jae
ficompl
mov
dec
pop
or
xor
pop
add
sub
shll
or
add
clc
imul
cmovne
int3
xchg
out
out
lock
add
adc
aas
or
inc
pop
in
dec
push
xor
dec
stc
push
popf
dec
aam
xor
subb
test
cmpsl
ret
sbb
jg
fidivl
push
movsb
data16
in
dec
sbb
pop
sub
loop
cmp
nop
mov
data16
dec
cmp
sub
mov
jo
adc
pop
inc
push
xchg
jnp
test
xor
arpl
cs
outsb
fistpl
loop
js
rcrl
sti
jo
jmp
push
or
bound
mov
stos
fistpl
daa
imul
xchg
out
lock
xchg
xorl
push
sti
xor
add
icebp
mov
shlb
dec
sub
jne
std
insl
mov
xchg
fldcw
jbe
pop
add
push
add
or
mov
pop
mov
jmp
nop
pop
dec
cltd
push
loopne
in
mov
jbe
neg
in
popa
lcall
xlat
mov
and
test
repz
pop
cli
dec
or
jg
enter
mov
mov
stc
mov
mov
lds
cmpb
test
jmp
cmp
jo
enter
jnp
dec
rcrl
jne
mov
shrl
dec
add
sub
shl
inc
mov
add
xlat
adc
aas
or
out
pop
dec
ret
std
push
out
lahf
cmpsb
pop
xchg
jbe
pop
or
or
dec
push
ja
jb
fs
push
adc
paddsb
mov
push
push
sbb
or
jmp
mov
cs
nop
test
daa
mov
mov
rcll
mov
aas
inc
jg
adc
cmp
lea
test
clc
adc
jne
cs
xor
fnsave
stc
xchg
add
sbb
xchg
jae
add
filds
movsb
push
loope
aas
insl
sub
cmp
jno
aas
dec
mov
nop
imul
inc
jg
xor
imul
lods
xor
jb
ss
stos
fdivl
outsl
inc
pop
fdivrl
movsl
adc
cmp
adc
cld
das
loopne
rolb
xor
sti
fadd
test
xchg
fisttpll
xlat
adcl
mov
aad
stos
iret
and
scas
push
jno
cmpsb
inc
mov
add
pop
add
mov
loope
ficompl
add
in
shll
xchg
inc
sub
sub
and
loop
inc
pop
mov
jl
sarl
pop
xchg
test
pushf
popa
adc
decl
push
jmp
add
jb
sarl
rorb
mov
int
push
pop
jmp
fisttps
lods
out
stos
shll
fstps
mov
adc
lods
pop
cmc
bswap
bound
gs
xor
andb
add
sbb
out
hlt
cli
push
in
adc
cmp
mov
call
inc
pop
xor
add
push
sbb
leave
xchg
xchg
dec
mov
loopne
outsl
inc
scas
in
mov
mov
push
jno
cmp
cmp
outsb
xor
jnp
jns
mov
dec
filds
jb
les
and
mov
adc
pop
mov
add
testb
lret
insl
enter
pop
loope
mov
mov
push
push
sbb
stc
fstl
out
mov
fildll
mov
cmp
in
add
imul
inc
fdivrl
insl
jne
mov
push
push
loope
mov
inc
das
lds
lcall
mov
pusha
repz
cmp
rol
sbbl
jno
cli
push
testl
or
es
jnp
push
pop
lret
xchg
scas
enter
sbb
mov
pusha
and
sbb
inc
sub
jnp
pop
xlat
in
push
addr16
inc
scas
jae
sbb
adc
fmull
xchg
int
cli
les
add
push
arpl
lret
mov
xor
sbb
sub
lds
inc
loop
mov
iret
jne
push
nop
lods
jb
addr16
dec
mov
push
loope
xchg
mov
xlat
push
or
dec
movsl
imul
movsb
test
dec
jp
sar
and
pop
inc
mov
movsl
and
dec
scas
mov
ret
daa
jnp
outsb
and
jo
ficoms
push
loopne
ljmp
das
add
xchg
xor
mov
in
lret
arpl
pop
shll
mov
imul
cmpsb
add
clc
enter
or
popa
xchg
mov
jbe
jmp
pop
cmp
imul
pop
filds
cmp
xchg
sbb
push
mov
pop
mov
inc
dec
mov
sbb
inc
fidivs
or
in
out
fs
outsl
out
lods
icebp
adc
mov
fisttpl
fwait
mov
and
sub
lds
adcl
and
andb
jecxz
push
inc
cmp
pop
xchg
inc
hlt
sub
sbb
ficoml
push
xor
sti
dec
scas
out
and
icebp
xchg
rorl
sbb
pop
in
or
lea
inc
inc
push
xchg
jmp
orb
jg
subb
cwtl
jmp
mov
xchg
or
unpcklps
repnz
jecxz
outsl
aam
pushf
stos
mov
stos
xlat
ret
fldenv
or
out
jne
push
idiv
repnz
dec
add
xchg
jo
mulb
push
xorb
xorb
adc
movaps
and
addl
insl
pusha
sub
bound
rclb
mov
adc
cwtl
push
andb
xchg
call
xor
mov
jl
popa
fisubrl
fwait
inc
lret
or
divb
or
aaa
repz
cltd
xchg
outsb
stc
mov
dec
mov
push
pop
pusha
je
lret
xchg
cltd
push
sbb
cltd
add
imul
xchg
or
add
mov
add
mov
xchg
inc
add
ret
insl
out
mov
or
addr16
imul
adc
sbb
les
lods
mov
jno
sbb
pop
xor
jbe
xor
adc
add
jbe
jo
loop
add
ss
xor
dec
cld
shlb
aad
outsl
jne
push
add
sub
cmp
or
leave
xchg
xchg
add
adc
rclb
repz
mov
iret
push
and
xchg
mov
cmp
iret
sbb
sub
add
sbb
lahf
das
popf
xor
mov
loopne
mov
xchg
inc
inc
jne
loop
xchg
push
sub
fnstenv
jno
xchg
push
daa
iret
dec
repz
in
mov
outsl
add
popf
jno
mov
imul
mov
aas
push
aaa
inc
cltd
ljmp
stos
mov
cli
pusha
mov
repnz
push
ret
adc
adc
push
enter
arpl
mov
mov
xor
mulb
in
add
mov
mov
push
shrl
lret
add
int3
inc
sarb
sbb
mov
mov
fs
push
adc
addr16
push
sti
mov
test
xchg
mov
bound
ljmp
push
test
cmp
adc
inc
arpl
pop
clc
lea
movsl
dec
pop
push
dec
cmp
imulb
out
cmpsb
add
jg
out
add
in
pop
ljmp
mov
pusha
rclb
inc
daa
mov
movb
jp
popa
pop
adc
int3
xor
pop
orb
aas
xchg
xchg
fwait
sbb
jns
loope
rcl
aam
fisttpll
xor
ficompl
inc
fdiv
popa
out
pop
add
xor
inc
pushf
mov
repnz
test
pop
xor
mov
mov
shll
mov
mov
sub
movsl
or
adc
inc
ss
imul
mov
pusha
popl
push
icebp
sub
inc
rorl
sarb
ret
test
jle
shrl
xor
lods
push
xchg
hlt
aas
lds
sub
mov
fchs
jge
add
addr16
push
mov
sub
xchg
insb
subl
pop
sub
adc
sub
mov
cmpsl
inc
mov
cmp
cmp
sub
jne
sub
rcrl
cli
xchg
imul
in
js
fwait
mov
and
mov
cmp
insl
xchg
sub
jecxz
lock
sbb
jmp
shrl
nop
sbb
pop
inc
imul
mov
cmpsb
out
add
lret
in
cmp
xor
call
jae
mov
mov
lahf
stc
push
pop
lods
mov
pushf
xchg
sbb
stos
jne
pop
roll
lret
mov
jg
mov
or
lods
and
std
adc
mul
imul
or
sbb
jle
xor
stc
cmp
dec
inc
cmp
lret
mov
dec
sub
das
sarl
mov
mov
xor
popa
test
jle
popa
xor
inc
adc
sbb
mov
mov
in
xchg
xchg
ss
arpl
jb
pushl
jb
gs
lret
cmp
mov
hlt
mov
mov
xchg
cmp
setl
inc
pusha
mov
add
imul
xchg
jb
cmp
cmp
sub
sbb
jmp
xor
inc
mov
dec
jle
cld
shlb
fs
jbe
cli
lds
sbb
mov
out
das
cld
mov
cmp
pusha
or
jge
enter
and
and
sahf
stos
dec
mov
add
ficomps
shr
pop
sub
sub
cmpsb
cmp
add
pop
cmc
mov
mov
jl
and
xchg
jmp
xorb
mov
xrelease
adc
das
ja
aas
push
push
xchg
adc
popa
xchg
push
out
or
sbb
shrl
daa
pop
dec
mov
mov
enter
aaa
mov
inc
xchg
jne
mov
enter
inc
repz
cmp
add
icebp
xchg
and
and
dec
mov
mov
fiaddl
mov
fildl
add
loope
out
repz
faddp
test
sub
test
sbb
ret
push
dec
jg
popf
in
test
cli
fnsave
pop
dec
jb
cmp
dec
jle
xlat
pushf
ds
in
sbb
ret
xorl
lret
or
insb
mov
and
sub
push
cli
stos
gs
add
lcall
mov
add
xchg
bound
push
out
mov
push
int
loope
jp
push
loope
je
int3
xor
and
mov
pop
jne
xor
pop
rolb
adcl
mov
test
inc
xchg
inc
jle
pushf
adc
pushf
clc
fcom
or
push
dec
pusha
jle
jb
adc
cs
roll
dec
loopne
dec
mov
popf
mov
lock
mov
rcrb
repnz
mov
mov
or
jbe
std
push
fidivs
cltd
xchg
dec
into
mov
inc
outsb
xor
xchg
jg
sbbb
and
push
pop
insl
js
mov
insb
fistpll
nopl
dec
pop
push
push
xchg
das
lods
jo
sti
in
dec
or
mov
xchg
adc
or
ret
test
xchg
push
movsb
push
push
ja
or
or
movsl
mov
jo
pop
add
cmp
or
aam
mov
mov
in
sbb
adc
out
insb
and
inc
movsl
sbb
jo
jle
test
dec
cmp
or
jbe
pop
jnp
xchg
push
sbb
adc
in
cmp
ret
mov
insb
jl
cmpsl
xchg
popa
mov
js
mov
test
clc
cs
dec
cmpb
mov
fwait
push
int
ret
pop
mov
mov
test
inc
cmp
push
push
xor
dec
and
roll
sub
out
ret
push
or
lcall
push
insb
cld
xchg
adc
push
pop
adc
in
push
int3
lods
imul
ret
loopne
leave
mov
mov
shrb
ljmp
and
sub
repz
lcall
cmpsl
sbb
mov
xchg
insl
lret
inc
and
sub
add
add
xchg
mov
or
fdivs
and
sub
and
inc
inc
mov
es
xor
stos
push
in
hlt
into
outsb
xchg
cs
aaa
mov
pop
mov
mov
mov
fisubrs
push
nop
add
cmpsl
insb
pop
subl
dec
lods
ja
fistpl
jecxz
mov
cmp
sub
jo
ret
jbe
inc
into
popf
sbb
sub
fnsave
xor
push
mov
add
movsb
pop
push
out
nop
sarl
ficoml
adc
push
imul
mov
push
dec
jg
pop
push
and
push
inc
add
mov
cmp
sarb
fs
fdiv
aam
aaa
pusha
xchg
mov
sub
loop
push
cmp
mov
scas
jle
cmp
pop
data16
or
mov
iret
or
bt
ljmp
cmc
je
imulb
jbe
das
adc
popf
out
jge
into
sti
lods
and
mov
push
iret
or
scas
pusha
sbb
sub
mov
das
es
cltd
adc
or
jle
push
xchg
fwait
sub
jecxz
or
mov
jg
jnp
lcall
nop
mov
int3
into
mov
pop
mov
fstps
aaa
jmp
mov
push
adcb
ret
push
mov
dec
jle
adc
lea
push
ret
stc
and
pop
mov
shr
xor
xchg
push
daa
inc
xchg
push
mov
lret
adc
xchg
insb
aad
push
jno
aas
adcb
xchg
lahf
inc
insb
jp
or
repnz
xor
gs
sbbl
gs
outsb
arpl
pop
pop
adc
insl
sub
fstp
xchg
loope
lods
mov
xchg
cmpsb
and
and
rsqrtps
sub
gs
push
mov
test
sahf
mov
es
or
arpl
call
cmp
dec
ret
fcomp
lock
push
inc
cmp
adc
ss
mov
ficoml
jno
pop
into
mov
sahf
dec
add
adc
rorb
pop
fistpll
lds
jge
stos
pop
das
or
mov
mov
push
dec
pop
cwtl
cld
jle
sbbl
iret
test
inc
sahf
xorl
adc
sub
lret
and
xor
scas
push
sub
inc
rcll
test
int
mov
outsb
ret
jnp
pop
out
shrl
das
mov
stc
sub
fiadds
sub
test
cs
add
lods
test
push
mov
lds
shr
adc
dec
sarl
lret
in
sub
adc
pop
fadd
in
filds
sub
sbb
jecxz
jae
andl
js
popa
std
xchg
imul
sub
repz
out
scas
aam
fbstp
mov
jae
lods
jg
inc
insb
add
mov
jno
cld
sti
in
sub
aaa
mov
xchg
orl
int
xor
gs
or
and
xchg
out
ja
jmp
jle
jmp
mov
mov
or
imul
jp
xchg
xlat
sbb
in
pushw
shll
inc
sbb
repz
add
cmpsb
dec
push
sub
add
cmp
push
cmp
xchg
xchg
clc
js
mov
call
test
cs
push
scas
movsl
call
enter
mov
or
pop
jge
repz
stos
std
push
outsl
push
repnz
loopne
push
rolb
xor
push
sahf
and
push
aad
pop
xchg
negb
addl
gs
cli
sub
pop
mov
xchg
jb
lret
xor
aad
and
push
xor
mov
jl
mov
scas
sahf
cs
loopne
and
xor
cmp
mov
das
mov
xchg
inc
mov
dec
pop
mov
in
cmp
lods
jp
mov
orb
loop
cmp
push
js
mov
dec
push
testl
lcall
dec
or
push
clc
imul
stc
fwait
push
cmc
imul
loopne
int3
add
fstps
ljmp
and
enter
pushf
pop
mov
aaa
add
out
xchg
mov
mov
rcll
add
decb
outsb
jle
cmp
test
mov
sarb
xchg
mov
icebp
sbb
movsb
pop
insb
add
xor
push
ja
idiv
inc
dec
ficomps
leave
cmp
inc
cmp
or
es
push
inc
inc
sub
es
lods
dec
adc
popf
and
dec
dec
and
sarl
jl
lret
out
data16
sub
or
mov
loop
ja
xchg
xchg
in
push
mov
mov
adc
outsl
or
in
and
xor
pop
mov
xor
outsl
inc
fnclex
hlt
mov
sub
cmp
call
shlb
cmp
popf
and
mov
jbe
std
cmpb
or
and
push
pop
and
andb
mov
and
neg
repz
stos
sbb
add
scas
mov
add
lea
nop
pop
jo
mov
sub
add
loopne
faddl
mov
stc
cs
pop
cltd
js
sahf
loop
mov
dec
fdivs
add
push
mov
cli
aas
dec
loop
cmp
mov
jl
fistpll
loope
mov
add
dec
add
fldenv
mov
mov
adc
insl
fimuls
test
test
xchg
jmp
pop
push
mov
adc
inc
sbb
lret
imull
ljmp
add
inc
adc
and
int
loope
imul
ret
adc
cmp
cmc
and
xor
sbb
jo
repnz
mov
insb
ljmp
ss
stos
imul
popa
lahf
fcompl
or
mov
mov
cwtl
and
lret
scas
jle
jbe
jo
inc
movsl
dec
xor
lahf
lds
test
lret
das
jae
loope
mov
sub
dec
test
mov
fsubrs
pop
push
and
shlb
iret
cmp
movsb
push
jns
mov
sbb
cmp
dec
orb
mov
mov
leave
out
insb
and
mov
or
aad
lock
out
imul
cs
das
scas
xchg
mov
push
pop
inc
or
mov
fbld
inc
mov
pop
mov
sbb
jne
adc
cmpb
out
mov
inc
mov
push
xor
add
fdivl
and
xchg
cwtl
mov
repz
sahf
adc
cmp
pop
loopne
and
inc
data16
enter
es
mov
ljmp
mov
std
movsl
movsbl
or
cld
inc
in
adc
sbb
enter
jns
icebp
pop
lfs
mov
shrl
xchg
and
xchg
inc
rorl
mov
push
inc
mov
xchg
add
ret
stos
inc
lcall
xchg
or
push
jge
pop
mov
pop
mov
mov
dec
pop
add
sbb
int3
sbb
cli
mov
mov
sti
popf
outsb
insl
mov
insb
outsb
xor
and
dec
fldt
lret
rcrl
scas
ror
or
les
cmp
pop
ljmp
or
arpl
je
or
leave
inc
adc
decl
test
or
jne
push
jne
pop
popf
das
dec
mov
fistpll
std
inc
xchg
aad
adc
outsb
lahf
les
pop
cwtl
rorl
jno
in
leave
dec
in
lods
jns
fsubs
xlat
imul
pop
inc
xchg
daa
or
xchg
cmc
cwtl
imul
inc
dec
pushf
std
pop
mov
adc
cmp
out
or
jge
sub
lret
dec
movsl
cmp
loopne
mov
mov
fldcw
adc
mov
and
sub
dec
or
ljmp
mov
cmp
sti
bndldx
mov
or
clc
lods
lds
jno
push
pop
sub
sub
sub
mov
sub
pop
push
lret
pop
sahf
js
testb
jb
xchg
pop
push
inc
sbb
shlb
cmpb
sarl
mov
mov
mov
pop
pop
mov
ljmp
pop
psrad
push
push
fmulp
add
add
out
daa
inc
and
or
aad
cltd
stc
aad
dec
arpl
iret
mov
mov
imul
xor
or
cmp
es
push
sbb
xlat
push
pop
xchg
mov
sub
test
mov
mov
mov
popf
xchg
sub
sbb
test
wbinvd
cmp
sahf
adc
xor
dec
pop
mov
mov
in
lock
mov
daa
mov
bound
push
dec
add
dec
jae
insb
inc
jge
popf
sub
mov
scas
fstps
inc
add
mov
fisubrl
or
sub
cmpsl
loop
addr16
mov
inc
and
test
sti
out
inc
ljmp
mov
and
addr16
push
ret
jne
lret
ljmp
jae
sbb
into
mov
sbb
inc
mov
adc
adc
adc
adc
movsl
loope
jge
cltd
dec
sub
mov
stc
data16
dec
mov
cmp
movsl
mov
adc
push
js
popf
dec
out
mov
pop
dec
cmp
cs
sub
icebp
outsl
and
sbb
and
inc
out
aad
mov
mov
or
dec
adc
js
pop
ljmp
inc
cmp
negl
jle
cs
push
lret
leave
in
xchg
out
mov
sbb
mov
sub
aaa
adcl
addr16
gs
adc
aam
push
xor
lea
push
xchg
inc
add
dec
jb
ja
push
adc
in
sbb
popa
add
rcll
shl
in
inc
call
fimuls
lock
pushf
ss
dec
xor
stos
lods
adc
cmc
jecxz
or
aaa
jae
push
jnp
test
iret
add
sarl
rcll
mov
fstpt
dec
cwtl
imul
aaa
xor
sbb
imul
stos
and
int
cmp
ljmp
xchg
cltd
cmp
ret
mov
sub
xchg
sarl
mov
mov
or
aad
es
loop
movsl
mov
inc
fcompl
mov
pop
aaa
dec
fildl
push
decl
sbb
into
xchg
out
into
xor
lret
icebp
mov
sub
aaa
and
aaa
jns
lcall
iret
inc
lock
mov
add
inc
push
mov
xchg
mov
test
jle
jmp
icebp
icebp
jle
sbb
fmull
out
xor
xor
clc
pop
inc
mov
shlb
cmpsl
push
adc
or
ficoms
addr16
pop
and
mov
lods
jg
andl
filds
mov
mov
xor
add
imul
adc
or
mov
idivb
fsubl
mov
jno,pt
dec
pop
repnz
cmp
les
in
mov
xor
aaa
lret
xlat
js
repz
arpl
addl
dec
cmp
jae
pop
pop
mov
mov
outsl
dec
cwtl
lods
rcll
mov
adc
mov
cmc
and
iret
cmp
and
lods
xor
and
xchg
jecxz
sbb
jo
test
adc
nop
pop
sbb
lds
sbb
call
das
jmp
stos
frstor
test
add
jo
push
sub
push
sub
testl
pop
mov
ljmp
jne
jae
mov
insl
jae
add
faddl
or
or
sbb
mov
add
dec
inc
jmp
daa
cli
cmpsl
mov
cld
jmp
in
pop
mov
push
pop
aas
dec
mov
or
out
dec
adc
pusha
mov
or
adcb
hlt
push
mov
cld
jo
loopne
dec
lods
xchg
push
mov
fdivr
mov
xor
mov
inc
in
inc
ds
pop
mov
mov
push
jmp
adc
cmp
cmp
daa
jae
xchg
and
xchg
test
fcoml
enter
sbb
sbb
sbb
int
or
das
jecxz
inc
test
sbb
push
and
sahf
push
jbe
ret
pop
mov
mov
rorb
adc
jmp
inc
cmp
xchg
aaa
fstpl
dec
imul
cmpsl
test
mov
mov
clc
push
jbe
filds
add
js
mov
lods
pop
andl
fnsave
xlat
adc
xor
inc
testl
ja
lods
lock
pop
popa
outsl
cmp
mov
sbb
fcomps
fdivr
mov
imul
test
imul
push
mov
scas
and
cwtl
test
stos
hlt
stos
mov
adc
fdivl
push
or
lea
outsb
icebp
lods
mov
inc
adc
aad
xor
xchg
enter
outsl
out
je
ljmp
movl
push
dec
mov
push
and
mov
mov
xchg
mov
xchg
dec
out
movsb
cmp
mov
fildll
inc
aam
dec
mov
mov
jne
mov
lcall
data16
cld
int3
pusha
lock
aad
inc
gs
clc
jg
mov
xchg
fimuls
addr16
xchg
pusha
ret
xor
mov
pop
stos
shlb
imulb
add
push
jo
fucomi
jg
jecxz
insl
push
dec
cs
ud1
inc
pop
mov
insl
pushl
shlb
xchg
insb
or
xchg
fxch
lods
adc
mov
fwait
pop
out
int
and
ds
dec
cmp
pop
lcall
imul
jge
sbb
pop
flds
in
pop
fld1
jge
test
pop
adc
add
jb
adc
jo
and
rcrb
pop
jle
dec
ss
xor
xor
repz
iret
out
cmp
lock
je
jns
mov
rcr
mov
popa
xchg
jp
andb
roll
jae
leave
sub
xchg
dec
into
fisttps
stos
fbld
in
xor
xchg
pusha
dec
testl
or
arpl
xor
pop
sbb
mov
jle
bnd
fisubrl
jo
dec
fstpt
or
imul
outsl
and
dec
pop
pushf
in
data16
insb
popf
xorl
cld
add
es
xor
subl
push
roll
push
out
pop
in
into
jp
je
in
je
adc
testb
pusha
rorb
xchg
xchg
push
gs
add
cld
xchg
push
or
sub
jl
leave
faddl
and
lea
repnz
lods
add
adc
shrb
mov
subb
sub
shl
xor
cmp
fistps
cld
jno
arpl
pop
cmc
xor
call
xchg
ficoml
enter
xchg
pop
rol
push
inc
data16
mov
xchg
sti
push
pushl
xchg
mov
jbe
fdivrs
lds
add
in
or
pop
popl
ja
andb
je
xor
xor
push
into
lock
jle
loopne
cmp
adc
push
push
jb
fwait
add
movsb
fists
or
cmp
mov
jmp
outsb
inc
inc
test
or
out
xor
mov
fistpl
lods
sbb
xchg
mov
dec
mov
cmp
and
jnp
xchg
je
lds
inc
notl
cmp
mov
into
adc
pop
aas
xorps
or
sbb
jge
xor
and
leave
in
arpl
pop
std
jns
roll
xor
js
lret
sbb
clc
or
scas
loop
dec
das
insl
out
cs
dec
and
add
jb
pop
push
call
in
adc
xlat
mov
and
hlt
mov
push
sarb
in
cs
add
out
mov
xor
sbb
sbb
lds
hlt
in
dec
push
insb
jl
inc
pop
dec
or
jnp
lea
repnz
bound
inc
das
or
in
bound
mov
add
inc
js
mov
adc
das
mov
imul
xchg
cmp
in
test
cmpsl
pop
jl
inc
shlb
mov
cld
inc
in
pop
or
repnz
pop
mov
jae
lcall
adc
popa
stos
xor
ret
sub
mov
sbb
ljmp
cmp
pushl
pop
adc
jbe
cmp
nop
stos
xchg
cmp
fsubrl
lret
inc
inc
mov
or
lret
repz
mov
or
lcall
iret
pop
ss
jp
leave
dec
cmpsb
sbb
stos
pop
mov
mov
push
je
das
ficoml
dec
mov
pop
dec
repnz
pop
lret
arpl
cltd
leave
mov
jno
lahf
mov
and
push
mov
es
iret
ret
hlt
inc
fsubrl
and
pop
mov
and
pushf
adc
cmpsb
test
pop
fisubrs
pop
xchg
sbb
mov
nop
movsb
sti
scas
dec
xchg
pop
push
outsb
je
lods
mov
aaa
inc
xchg
pop
jbe
stos
ret
mov
mov
rcrb
cmp
sub
jno
out
ret
es
cmp
imul
add
fcom
je
jge
pusha
int3
and
je
push
xchg
jnp
xchg
repz
popf
mov
and
ret
es
loopne
inc
hlt
nop
arpl
add
ljmp
sbb
inc
fcomip
sahf
shl
lods
mov
adc
ss
lock
jns
adc
pop
sub
sbb
sub
mov
add
mov
push
sub
xchg
ret
inc
mov
add
or
adc
mov
ds
pop
divb
pop
lds
out
pop
fs
fidivrs
sar
loope
add
ret
xor
add
xor
lret
xchg
xor
jno
add
fidivl
jecxz
cltd
sub
loopne
push
lret
fsts
mov
mov
xor
push
add
jae
ffreep
or
xor
cmp
call
loope
andb
scas
push
pop
add
test
pop
sahf
dec
sub
jmp
push
cmp
jmp
pop
sub
aas
xlat
scas
mov
mov
dec
mov
std
and
pop
call
movl
xchg
xchg
les
add
cmc
jecxz
jg
popa
fldl
int3
dec
pop
int
xor
out
outsb
or
movsl
pmuludq
xchg
mov
mov
fldl
out
daa
jne
fucomi
mov
and
xor
int3
adc
inc
dec
arpl
add
and
loopne
cld
adc
mov
imul
sti
inc
push
xor
xor
in
outsl
je
cmp
push
mov
movsb
ljmp
das
mov
add
fists
jecxz
fsubs
jae
or
add
mov
out
test
cmp
mov
cltd
xchg
jle
in
xor
xor
test
lods
rcrb
in
ror
add
mov
pop
into
mov
jae
push
mov
pop
inc
dec
lock
jg
mov
push
shrb
stos
inc
imul
jb
das
ffree
jl
cwtl
add
and
cld
es
dec
stc
sbb
sub
leave
mov
adc
rcll
jo
push
cmpsl
scas
outsb
dec
inc
adc
push
in
arpl
lods
lea
dec
mov
lds
sbb
sub
pop
adc
roll
and
dec
xchg
dec
fnstsw
mov
jb
repz
mov
and
jo
addr16
sbb
ret
es
push
popa
test
bound
xlat
adc
sub
xor
add
cmp
mov
inc
dec
cmp
sub
cmp
je
mov
pop
push
cltd
pop
lods
fs
xor
push
cmpsl
addb
shlb
aam
sbb
js
push
clc
notb
cmp
enter
add
fisubl
fwait
lds
std
pushf
push
and
pushf
xchg
icebp
jne
loop
mov
ss
xor
sub
mov
pop
push
sbb
pop
cmpsl
xchg
or
ficompl
test
ret
stos
mov
stc
lcall
fdivl
sbb
rcl
pop
pop
dec
fisubl
addr16
pop
mov
mov
dec
aaa
cmp
mov
mov
loop
sar
mov
loop
cld
xlat
jbe
cs
inc
mov
bound
ret
es
mov
imul
pop
push
aaa
rorl
dec
test
lret
dec
jnp
mov
pop
popf
and
jg
and
adcb
jo
pop
cmp
pop
insl
push
and
dec
aas
lret
outsl
seta
pop
add
dec
std
enter
out
std
push
repz
xor
aaa
bound
push
sbb
cs
vpmulhw
cmpl
jns
or
cmpsb
outsb
in
push
lcall
jno
jae
push
inc
addr16
pop
lahf
aaa
add
test
dec
add
xchg
xchg
popa
sbb
in
loope
aas
fwait
imul
push
and
mov
mov
or
adc
movl
pop
pushf
xor
movsl
out
imul
cli
fdiv
es
dec
orl
dec
cmp
push
pop
test
arpl
insb
daa
cltd
sbb
mov
xchg
movsb
jecxz
and
mov
xchg
scas
and
sbb
pop
or
imul
lret
inc
mov
insb
and
loop
pop
xchg
mov
out
scas
test
mov
ret
sbb
adc
in
sub
dec
mov
cmpsb
xchg
les
xchg
pop
push
popa
sbb
iret
in
ds
jl
std
sti
jnp
scas
in
outsl
mov
out
leave
inc
pop
in
mov
dec
pop
pop
sahf
jle
jbe
adc
xchg
add
ss
repz
in
push
ja
cmp
mov
xchg
adc
jmp
xchg
ss
pop
daa
imul
adc
inc
fs
jp
addr16
outsb
je
push
stc
int
daa
cwtl
out
cmp
ljmp
lock
ljmp
mov
dec
cltd
inc
push
into
xor
inc
push
lods
dec
je
and
adc
stos
fisttpll
movsb
xchg
repz
pop
ficomps
dec
cmp
fisttps
adc
int3
push
in
cli
aad
outsl
mov
fcompl
out
jne
jne
adc
nop
sti
mov
pop
xor
adc
cmp
push
cmpsb
pop
cltd
mov
jg
mov
out
adc
cld
or
loop
test
and
stos
sti
leave
test
cmp
nop
push
outsl
mov
xchg
mov
pop
pop
inc
xlat
mov
iret
jge
std
xor
or
dec
sbb
negb
loop
data16
outsb
lret
push
test
xor
jmp
add
push
push
cmp
cmp
xchg
das
and
jb
add
push
aam
pop
aaa
lea
xor
pop
stos
or
fsub
and
das
xor
in
pop
mov
mov
jecxz
xlat
fidivrs
dec
adc
mov
sbb
jl
rorl
fptan
out
inc
shll
mov
je
xchg
popa
out
mov
push
in
fcoml
shl
cmc
or
fs
sarb
and
scas
add
in
lods
xchg
xchg
jbe
jle
lods
pusha
lock
and
mov
adc
add
pop
sbb
add
sbb
mov
mov
inc
xor
cmp
or
add
data16
shll
outsb
xor
negb
imull
lahf
ret
repnz
cmpsb
fcoml
pop
pop
and
stos
pop
pop
xlat
outsb
adc
mov
rcrl
dec
add
cwtl
push
pop
lcall
xorl
das
adcb
push
push
jb
or
cmp
cmp
clc
js
sub
nop
add
cld
out
pop
iret
jmp
or
cmpsl
inc
pop
mov
dec
movsl
mov
icebp
or
cmp
push
jo
lret
out
fidivrl
repz
inc
xchg
jle
xor
cmp
fildl
into
lcall
inc
inc
push
lods
dec
xor
cwtl
xchg
les
cmpsl
mov
enter
xor
add
in
mov
inc
lea
frstor
push
outsl
cmpl
daa
lahf
out
jbe
repnz
in
add
rorl
xchg
popf
mov
and
fiadds
int3
hlt
sub
outsl
sbb
push
jo
das
or
cmp
sahf
out
cmpsl
add
fbld
push
xchg
xor
mov
cmp
add
cwtl
or
mov
mov
stc
jnp
jg
lea
adc
mov
jo
lret
pushw
hlt
fwait
dec
pop
popf
dec
les
addr16
mov
sub
mov
imul
jmp
dec
divb
ss
mov
pop
sbb
int3
pop
cmp
mov
add
in
lret
shlb
rolb
push
mov
into
loope
repnz
pushf
mul
mov
jp
jns
hlt
xor
and
dec
add
xor
fnsave
push
shrb
adc
mov
fs
outsl
xchg
lds
aam
mov
dec
data16
jae
mov
rclb
mov
xchg
pop
add
test
sbb
lds
shl
pop
pop
cltd
pop
jo
inc
cmp
mov
int
cld
push
cmp
push
push
mov
into
xor
lds
mov
imul
xchg
ret
mov
in
xorb
sub
aaa
sahf
aam
sbb
cmp
iret
jp
xchg
mov
cwtl
jge
imul
mov
movsb
fnstcw
mov
cmpl
push
jo
mov
push
adc
cmpsl
pop
in
test
adc
mov
mov
rcrl
push
in
mov
pop
mov
icebp
mov
cmp
cmp
pop
sub
mov
sbb
rorl
mov
jge
in
andl
sub
fstps
data16
mov
lds
movsl
cmpsl
dec
shll
test
pop
outsb
dec
xor
and
lret
xchg
out
adc
in
mov
jnp
sub
xchg
pop
fmul
pushf
fimull
in
sbb
xchg
mov
or
pop
xor
shr
add
cmp
repnz
repnz
or
xchg
lcall
cld
das
jne
fucomi
fcomi
loope
lret
repz
jge,pt
add
lcall
dec
mov
push
das
cwtl
cmp
ljmp
stc
adc
sbb
mov
cmp
imul
push
cmp
mov
xchg
xchg
and
jnp
es
rorb
add
jmp
out
loope
cmpsb
mov
sub
cwtl
adc
test
cmp
popa
sub
cltd
lods
outsl
dec
inc
pop
and
pop
xchg
add
jnp
in
and
sub
out
sbb
fldcw
scas
mov
cmp
loopne
push
xlat
ss
inc
sbb
and
mov
scas
jno
addb
or
xor
xor
stc
lret
jle
or
and
inc
mov
add
sub
dec
push
xor
xor
int
sbb
js
rcll
mov
push
xchg
push
sarl
pusha
arpl
out
jecxz
push
jns
xor
inc
enter
std
lret
jmp
enter
movsb
and
add
hlt
cmpsl
shrd
add
push
lret
xchg
or
or
adc
aas
cmc
into
daa
xchg
sub
lret
cmpsl
loopne,pn
lds
mov
inc
xor
mov
jae
mov
movsb
movsl
cs
add
sbbb
sbb
xor
xchg
movsl
sub
and
jbe
cli
push
lcall
ljmp
xchg
loope
and
stc
jbe
dec
lock
and
das
xchg
sbb
fldl
jle
sbb
jno
mov
insl
mov
push
jno
dec
cmp
cmp
into
je
jp
les
and
sub
lcall
mov
jecxz
in
addl
popa
jl
mov
imul
clc
test
jnp
test
mov
test
fcmovnu
rclb
sub
or
xor
mov
xchg
inc
add
in
std
dec
or
jb
enter
push
or
sbb
out
and
in
jbe
cmp
pop
inc
pusha
loop
neg
das
test
adc
push
inc
jo
pop
hlt
dec
inc
out
or
into
in
addb
xor
daa
dec
ret
outsb
data16
inc
outsb
out
stos
lds
mov
rorb
loope
lahf
pop
or
jbe
add
nop
out
mov
push
addr16
add
xor
mov
xor
test
or
cmp
cmp
cli
fimull
lock
daa
mov
rolb
jg
push
xchg
in
ficoml
xlat
ljmp
mov
xor
je
xchg
ret
fmull
loop
bound
icebp
rcr
out
imull
jle
sub
jne
test
sbb
mov
gs
cltd
jns
xor
push
dec
dec
sub
int3
inc
inc
mov
inc
ds
rcrb
xchg
mov
icebp
mov
pop
inc
xor
decl
test
sbbl
mov
fs
nop
rcll
cld
sbb
imul
jae
and
inc
movsb
xchg
push
ja
shll
loop
in
or
push
repz
push
out
adcb
mov
cmp
add
sbb
mov
cmp
call
or
push
in
mov
fdivs
pop
daa
in
mov
test
jo
fcmove
jbe
cmp
inc
xchg
mov
cmpsl
stc
jne
mov
add
push
mov
inc
jge
imul
sahf
sbb
adc
ret
pushf
lret
imul
popf
sub
int
movsl
pop
adc
hlt
cmpsb
in
leave
xor
xor
xchg
dec
pusha
aad
arpl
test
mov
lods
cld
mov
or
sbb
pop
mov
out
testl
mov
inc
test
daa
sub
test
hlt
cmp
xchg
dec
inc
fmull
xor
cmp
xorb
lret
cmp
lret
mov
adc
stos
aad
out
sbb
mov
loopne
sub
inc
sahf
call
xor
jge
movsb
and
jl
inc
pop
sub
pop
bound
pop
jge
ss
pop
add
sti
adc
push
ret
cmc
xor
gs
pop
out
ljmp
pop
mov
push
jo
pop
mov
repnz
shlb
outsl
xchg
aaa
pop
and
in
sbbl
ss
test
and
dec
xor
push
insb
xor
dec
scas
sahf
stos
and
xor
cmp
and
cld
xchg
repnz
mulb
mov
and
icebp
addb
push
scas
push
pop
mov
cmpb
lea
push
jae
lahf
ret
fstpt
mov
dec
sub
adc
xchg
stos
jb
out
mov
cmpsl
jb
push
push
pop
imul
dec
out
add
pop
sbb
cwtl
push
push
mov
sub
or
add
leave
cltd
out
pop
cmp
and
cmp
xchg
js
push
cmp
mov
cmp
xlat
or
mov
dec
dec
push
sarl
stos
fsubs
iret
pop
xlat
or
mov
cmpsl
daa
mov
mov
stos
pushf
fidivrs
test
or
sbb
jns
push
jno
outsl
data16
mov
mov
popa
lcall
lahf
mov
pop
push
sbb
das
jae
pop
and
xchg
out
mov
jne
imull
mov
mov
pushf
ss
clc
mov
add
mov
fimull
cmp
mov
jo
hlt
fistl
dec
ret
push
scas
sub
jae
pop
mov
addr16
cmc
ja
cltd
dec
das
pusha
arpl
out
sbb
push
clc
mov
mov
inc
xor
call
int
in
cltd
xor
ljmp
pushl
mov
dec
mov
enter
add
inc
jnp
fnsave
and
and
dec
fldt
fcoms
imul
and
cmc
xor
repz
movsl
jae
push
call
mov
jns
clc
push
sub
sahf
mov
sub
mov
mov
call
mov
out
inc
js
xor
fwait
xchg
js
mov
arpl
xlat
iret
es
jg
mov
sub
sub
pop
cmp
xchg
pop
sbb
adc
adc
pop
mov
adc
xor
push
mov
mov
and
sbb
lock
xchg
mov
add
pop
mov
fisttps
insl
push
subl
mov
loopne
cmp
mov
cmpb
mov
push
mov
pop
aam
aad
dec
fwait
mov
sbb
xchg
dec
cltd
inc
lods
popa
les
xor
rolb
push
cld
insb
ja
xchg
aaa
loopne
fwait
or
fs
cli
dec
mov
sar
jo
push
sub
or
push
stos
add
adc
mov
or
scas
movsl
out
push
jg
stos
dec
pusha
lret
xor
or
adc
das
xor
inc
loope
lret
pop
arpl
movsb
sbb
or
cmp
test
in
fwait
clc
xor
scas
and
lods
dec
test
xchg
dec
loopne
mov
adc
les
mov
nop
movsl
or
xchg
pop
ljmp
jle
or
pop
dec
push
sub
and
push
pop
xor
fdivrl
push
js
mov
push
loope
test
testb
add
sub
shr
dec
repz
lds
lods
or
adc
xlat
adc
out
jae
add
pushf
dec
sahf
inc
cmpsb
dec
clc
mov
roll
pop
pop
cli
rorb
adc
test
nop
xor
dec
sahf
clc
fs
jecxz
int3
jge
push
xchg
mov
scas
insb
cli
dec
mov
or
movsl
cmp
jne
outsl
jnp
aaa
push
add
cmp
mov
pop
mov
mov
mov
lret
push
mov
cmpsl
and
test
fdivr
adc
std
loopne
loope
mov
iret
add
jle
cli
add
cmpsl
aad
out
orl
sbb
fs
xor
out
push
es
clc
jo
icebp
pop
jl
xor
cmp
sbb
dec
enter
decb
call
push
fnstcw
lcall
mov
or
push
loope
addr16
sbb
pop
in
mov
pop
inc
lcall
sti
xchg
push
sbb
stos
lds
mov
cld
push
pop
mov
xchg
not
cwtl
inc
jae
jb
daa
sbb
mulb
mov
and
xor
push
pop
cwtl
sahf
and
and
push
add
stos
testb
movsl
enter
out
inc
sub
stc
mov
xchg
or
jg
push
pusha
aaa
sbb
mov
sti
and
loopne
cmp
mov
pop
icebp
cltd
test
sbb
cs
xor
test
mov
xorl
dec
and
inc
xchg
or
jae
mov
adc
daa
mov
aaa
daa
xor
jns
lea
or
addl
iret
pop
pop
push
ljmp
jge
mov
stos
xchg
clc
lcall
stos
pop
pop
add
cmp
adc
push
ret
in
mov
nop
cs
rcrb
in
mov
adc
cmp
add
ds
and
adc
cli
push
and
decl
push
lds
leave
out
test
dec
ja
lcall
adc
mov
mov
xchg
movsl
outsb
imul
hlt
push
leave
cs
addr16
adc
and
xchg
ljmp
mov
sbb
jae
cltd
ficompl
mov
push
or
inc
or
out
or
jmp
lcall
inc
enter
cmp
data16
add
imul
sahf
xchg
repnz
aaa
rcll
jns
add
jge
jae
mov
push
cmp
adc
out
push
repz
fstpt
adc
adc
mov
insl
ds
sub
jge
mov
add
pop
pop
cmp
or
outsl
cmpsb
xchg
sti
mov
xchg
cmp
and
loopne
add
cmp
enter
popf
sub
scas
jne
and
adc
fistl
pop
movsb
mov
dec
sbb
jmp
and
xor
mov
mov
shlb
scas
mov
andb
xchg
push
daa
in
xor
sub
lods
lods
test
por
xchg
inc
jl
sarb
inc
lods
testb
jg
addr16
pop
lahf
stos
xor
test
push
shlb
or
fildll
mov
lds
daa
shrb
sbb
sub
js
mov
pusha
jnp
add
icebp
sub
cmp
fists
fstl
adc
leave
sarl
int3
scas
mov
mov
js
adc
push
pop
hlt
inc
aaa
xchg
mov
lods
mov
mov
or
sti
and
dec
das
push
push
mov
ljmp
sbb
or
mov
cmpsb
xchg
xor
lcall
mov
outsl
mov
insb
cli
mov
pop
sti
dec
je
xchg
cwtl
or
and
pop
jnp
or
adc
stos
fidivrl
dec
sub
ficoml
and
in
mov
es
cmp
iret
stc
xlat
roll
cmp
imul
xchg
jo
hlt
test
xchg
cmp
cmp
mov
aas
call
cwtl
lods
inc
daa
mov
sub
push
mov
mov
outsl
push
cltd
cmp
add
adc
mov
fistpll
loop
stc
cwtl
push
out
sub
lea
or
addl
pop
push
push
cwtl
mull
int
gs
xor
and
adc
loopne
sahf
or
std
xorl
ficomps
mov
sub
xlat
iret
outsb
ja
stos
imull
faddp
insl
lcall
arpl
push
push
and
sbb
mov
xchg
cmp
cmpsb
mov
inc
adc
jmp
std
push
adc
hlt
and
shrb
pop
out
les
ja
scas
pop
ret
clc
sub
sbb
and
jp
loope
ss
insl
imul
mov
ret
add
lods
pmullw
mov
dec
pop
dec
icebp
jl
sbb
test
std
fldln2
cmp
enter
pop
add
les
in
fisubs
jp
lahf
mov
inc
orb
sbb
adc
loop
lods
inc
test
in
mov
cmc
aaa
pop
loopne
das
sub
mov
dec
mov
ret
sub
imul
add
cmp
jno
loop
dec
push
xchg
in
dec
xchg
pop
loop
lods
ljmp
adc
push
mov
lret
icebp
jbe
andb
ljmp
add
sub
adc
pop
in
push
iret
cmp
cwtl
xor
or
mov
popf
xorl
test
jge
roll
inc
cmp
xor
mov
add
pop
test
lcall
pop
xchg
jnp
mov
xor
mov
gs
sub
mov
popf
shll
insb
les
mov
repz
sti
dec
inc
push
cmpsb
jmp
dec
fstpl
mov
enter
and
inc
push
lods
sarl
lods
add
cmpsl
in
xor
sbb
aas
ja
add
daa
sahf
adc
les
ret
jb
iret
jae
sbb
sub
rcll
add
das
push
ja
xchg
pop
int3
shll
jo
xchg
sarb
pop
test
js
addb
push
lahf
jmp
lret
outsb
xor
popf
and
jb
cmp
jo
bound
out
fnsave
test
sti
cmp
stos
add
sbb
xchg
imul
cmpsb
xchg
std
adc
lea
xchg
cmp
imul
jae
sbbb
xor
jb
test
int
negb
inc
jbe
scas
xor
xlat
inc
adc
cli
out
mov
cmp
adcl
lea
loopne
aas
push
xchg
fmulp
xor
mov
sbb
ret
repnz
mov
lret
jge
and
fiaddl
stos
ret
mov
xchg
mov
lret
mov
outsl
in
jbe
movl
fs
rcrb
sbb
mov
jnp
pop
fstps
xor
popf
adc
shll
mov
scas
xchg
insl
jne
cmpb
arpl
scas
rorb
push
inc
push
jns
jb
add
cs
push
mov
xchg
arpl
cmp
lret
jg
push
xor
idivl
testb
aad
sub
es
xchg
xor
cmpsb
mov
adc
popf
repz
adc
xchg
xchg
lret
jbe
xor
pop
imul
or
into
push
cmp
out
jge
shl
xchg
mov
cs
sub
leave
pop
popa
fcoms
mov
adc
in
adc
imul
jo
jecxz
outsb
sbb
jge
push
xchg
movsl
mov
imul
push
ljmp
pop
lods
push
xchg
jo
add
ss
fwait
scas
pop
mov
pushf
jne
pop
lret
cmp
dec
adc
and
in
lret
inc
inc
mov
popf
out
popf
fidivs
jecxz
adc
stc
or
aaa
mov
imul
pop
aas
dec
jnp
jmp
fs
mov
mov
xchg
in
adc
cltd
pop
imul
xor
and
shll
stos
das
mov
sub
repz
sub
or
fdivrp
cmp
mov
mov
movl
loop
stc
shrb
jmp
call
add
stos
and
ret
dec
imul
jae
nop
imul
es
sbb
inc
jg
sbbl
lahf
testb
pop
ffreep
mov
jmp
outsb
push
lea
mov
lock
or
aam
shr
push
mov
rcll
jne
daa
xchg
xchg
into
fisubs
icebp
and
xchg
inc
mov
push
pop
shll
nop
shrl
jge
or
rorb
ret
loopne
cmp
xor
adcl
pusha
mov
insl
das
cltd
mov
lods
add
or
pop
jmp
pop
in
lret
mov
filds
jnp
cmc
fbld
insl
mov
push
add
inc
lods
insb
testb
or
bound
mov
fstl
out
aad
xor
jmp
out
ficompl
dec
add
mov
and
and
or
add
sub
dec
lahf
adc
iret
in
mov
inc
out
push
jmp
xchg
fwait
imul
xchg
cmp
jb
inc
dec
mov
push
pop
loopne
pusha
xchg
pop
pop
insb
ljmp
fisubs
mov
sahf
mov
adc
insl
es
out
scas
lret
inc
je
push
fs
inc
fwait
pop
mov
push
lret
xor
sub
shll
sarb
idivb
lea
and
cmp
mov
rorb
ret
push
and
lret
out
jnp
push
dec
mov
push
aad
adc
adc
imul
into
aam
es
dec
and
lods
add
mov
in
push
cmp
push
jmp
shll
dec
push
iret
xor
fcomps
mov
js
xor
push
aam
and
stos
xchg
js
scas
push
pop
test
ljmp
sbb
jl
xchg
pop
jb
stos
bound
andl
jo
dec
dec
aas
aam
in
and
je
or
loopne
imul
jl
shrb
or
or
and
stos
pusha
cmc
dec
in
daa
or
idivb
inc
enter
mov
sub
mov
notb
or
ss
and
lds
sbbb
scas
jle
cmpsl
and
or
jmp
sbb
and
xlat
data16
inc
icebp
out
icebp
sub
sub
stos
je
pushf
movb
mov
cmp
cmpsl
test
enter
cmp
iret
jl
test
hlt
addb
js
popa
push
xchg
adc
aas
and
in
push
out
add
cmp
mov
add
mov
add
and
pop
jmp
pushl
pop
ja
imul
popaw
inc
xchg
fs
fwait
gs
cltd
imul
icebp
mov
mov
or
cmp
es
out
stos
xchg
or
outsl
and
adc
cli
jge
in
sbb
mov
mov
out
daa
sbb
jg
fmulp
nop
popa
or
pusha
ds
pushf
fcoml
int
dec
and
jne
out
js
dec
xchg
adc
jne
addr16
push
jp
add
jb
dec
decb
pop
cltd
sti
ss
xchg
mov
add
jno
mov
adc
fwait
testl
push
lods
iret
inc
jl
add
filds
push
jo
add
fstl
adc
sbb
dec
aaa
adc
add
popa
fnstcw
jns
push
dec
test
mov
mov
and
mov
lcall
add
orl
ss
lds
in
loopne
ficoml
jle
arpl
sbb
jg
cmp
mov
push
into
fisubl
and
dec
dec
les
xchg
sub
insb
in
icebp
cmpsl
imul
inc
cli
je
jecxz
jnp
cmp
das
mov
cmp
loop
repz
pop
adc
enter
gs
mov
sbb
bound
gs
xor
imul
lcall
movsb
jns
inc
push
rolb
insb
inc
jle
fimull
aad
cmp
mov
addr16
gs
sub
fnstenv
mov
inc
stos
cmp
cmc
and
sbb
ja
or
movsb
sub
dec
sub
sarl
loopne
push
cmp
xchg
push
cld
adc
inc
dec
xchg
mov
sbb
jmp
add
nop
pop
inc
add
enter
dec
rorb
in
mov
test
mov
push
lds
test
js
xor
fidivrl
dec
sub
movsb
rcll
cmp
loope
adc
out
jl
lahf
incb
sub
out
stos
dec
sbb
inc
xor
inc
xor
mov
lods
dec
adc
aas
adc
mov
out
sbb
fnstenv
add
imul
inc
out
cmp
popf
xchg
test
pop
notb
mov
cld
das
and
inc
xchg
addb
enter
add
or
js
mov
lea
xchg
inc
dec
test
adc
cmc
imul
stos
daa
aaa
cmpsl
xor
lcall
xchg
jmp
popa
mov
int3
das
mov
mov
pushf
das
lods
push
cwtl
xchg
jns
arpl
repz
inc
aad
mov
out
mov
daa
adc
les
adc
fcmove
sbb
inc
sarl
push
push
repnz
or
mov
imul
pushf
xchg
jp
push
outsl
mov
mov
fcmovu
or
push
dec
nop
inc
outsb
gs
pop
ljmp
iret
xchg
stos
dec
icebp
fstpl
or
cli
dec
push
loop
pop
je
lret
mov
xchg
int3
sub
inc
sub
jno
daa
pop
test
pop
add
jp
add
scas
hlt
sbbb
jne
aas
dec
mov
lock
pop
popf
mov
mov
xchg
cmp
imul
fneni(8087
movsl
pop
sti
pop
cltd
xchg
xor
mov
xor
mov
sbb
movsb
xchg
dec
mov
pop
push
cmpsb
or
cmp
jb
adc
pop
jge
insl
rcrl
shlb
adcl
xchg
fisttpll
cmp
cmp
xchg
jmp
iret
sbb
sub
es
out
mov
ret
and
push
lds
mov
ret
mov
iret
xchg
pop
mov
test
cld
aad
mov
call
mov
outsb
ret
push
rclb
jge
fwait
inc
and
sbb
fsts
mov
cld
xchg
dec
add
cmpsl
sbb
sbb
mov
stos
adc
mov
ss
pushf
adc
dec
cmp
shlb
repz
imul
repnz
in
jb
xchg
push
sbb
cmpsl
add
sub
mov
xorb
aad
jl
outsl
adc
pusha
in
push
in
or
fcompl
mov
mov
and
ret
lods
shll
dec
push
or
lret
pop
inc
and
add
lea
push
fdivrl
popl
push
or
and
jnp
lahf
fnstsw
fdivrs
imul
adc
inc
mov
jle
sbb
xor
insb
jle
xlat
fcmovnbe
cmp
fstpt
icebp
adc
fwait
cmp
in
or
daa
add
adc
sbb
lahf
lds
sbb
sub
out
xchg
test
or
push
or
test
ljmp
sbb
lds
jge
scas
mov
xor
mov
sub
ds
popf
jecxz
scas
rcrl
fimull
pop
cmp
out
stc
mov
cmpsl
sbb
loop
mov
sbb
mov
xchg
mov
cmp
cmp
add
mov
jns
and
shlb
push
call
cld
scas
inc
aaa
lock
inc
mov
xor
insl
mov
xchg
stos
cmp
mov
jl
mov
mov
dec
jge
inc
aad
aas
test
jp
mov
pop
mov
xor
dec
pop
lahf
sbb
dec
pop
inc
std
arpl
cmp
adc
mov
clc
je
shll
ffreep
gs
xchg
aaa
insl
je
into
rolb
push
inc
xchg
dec
mov
sbb
mov
aas
pop
push
mov
mov
in
das
mov
ret
xorl
xchg
xor
mov
inc
pop
js
dec
mov
mov
jecxz
fcoms
out
es
inc
mov
mov
sub
fwait
clc
cmp
test
orl
cmp
xor
cmpsb
sbb
ss
jno
ficomps
xchg
es
stos
mov
fcmovne
lods
imul
rcll
mov
frstor
sub
idivb
push
inc
insl
jmp
jl
dec
push
dec
stos
lret
sub
inc
mov
rorl
xchg
je
cmp
lods
fs
mov
fisubrs
sysexit
ss
and
sub
sub
popa
ljmp
test
stos
jge
xchg
lret
sub
sarb
lock
push
inc
pop
xor
enter
cmp
jmp
gs
xchg
dec
push
inc
mov
mov
adc
adc
sub
aam
sbb
mov
or
ljmp
cmp
lds
mov
mov
jg,pt
jmp
jbe
pop
jno
stc
call
inc
mov
mov
mov
cmp
bound
mov
inc
fadd
dec
shrl
ret
push
jl
imul
dec
cmp
pop
pop
stc
mov
add
lds
mov
rclb
pop
sbb
clc
rcll
stos
pop
adc
roll
sub
out
xchg
and
in
pop
int
ss
rclb
in
sbb
dec
xor
sahf
dec
xchg
and
pop
add
lds
jp
cwtl
test
and
inc
sbb
psubusw
xchg
push
das
loopne
les
lds
out
shl
inc
aam
pop
mov
xor
push
enter
jns
mov
jbe
cmp
imul
lahf
imul
pop
add
mov
add
cmp
dec
lea
dec
mov
fs
cmp
mov
cltd
mov
iret
inc
les
jo
je
das
xchg
mov
in
in
in
xor
mov
mov
xchg
idivl
mov
dec
mov
push
jmp
imul
xor
psubsb
hlt
mov
ja
dec
or
xlat
mov
movsl
pusha
xchg
fnstcw
mov
repnz
adcl
lcall
mov
jno
into
addw
mov
movsl
pop
test
lret
rorb
adc
lcall
inc
out
inc
adcl
ljmp
sarl
loope
rcrb
push
push
jbe
dec
repz
andl
les
dec
jb
cmp
jmp
divb
push
inc
dec
xor
stos
inc
std
daa
test
and
mov
daa
aad
push
jp
test
mov
das
test
jg
adc
add
ds
orb
xchg
mov
imul
std
fisubrs
inc
js
mov
cmpsb
test
adc
add
movsb
test
loopne
mov
mov
or
lods
rorl
and
mov
mov
ja
push
movsb
les
lods
lock
pop
push
mov
cmc
rcr
or
loope
push
mov
fsubrs
pop
popf
loop
mov
hlt
mov
xchg
mov
test
jl
scas
jle
pusha
lock
sub
aas
sub
mov
das
jno
std
enter
push
sub
push
das
out
mov
push
test
cmp
and
lea
negb
sub
incb
jb
push
notl
jge
xchg
fs
jb
push
in
adc
pop
popf
xchg
adc
movsl
sub
mov
inc
cwtl
jmp
jbe
pop
mov
pop
mov
lcall
push
dec
shl
xor
push
pop
dec
pop
stos
mov
sbb
shll
xchg
mov
aas
cmpsb
push
inc
cltd
and
test
xchg
jb
jbe
pop
inc
jge
inc
jo
sub
jno
mov
sbbb
dec
and
inc
pop
and
sbb
dec
xlat
cmp
or
and
das
cmp
ljmp
mov
xchg
cmc
pop
hlt
por
xchg
jno
loop
scas
jp
aam
jmp
ljmp
gs
scas
mov
test
aas
mov
stc
imul
pop
xor
mov
js
pop
outsb
sbb
ret
sub
in
inc
push
call
je
inc
test
rorl
insb
xchg
push
adcb
adc
repz
or
jp
sub
mov
dec
cmc
ss
mov
add
stos
fisttpl
xlat
inc
jecxz
ret
jmp
ficomps
stos
sbb
lods
pop
xor
inc
sti
dec
mov
jp
bound
pusha
leave
rol
jo
cmp
dec
fmull
sahf
js
or
mov
push
int
mov
lahf
divl
test
lret
mov
jmp
mov
adc
mov
push
mov
add
mov
jno
rsqrtps
int3
hlt
cmp
cmp
push
mov
xchg
scas
mov
xlat
aas
adc
xor
fdivrp
cmp
mov
or
adc
jge
dec
pop
pop
enter
out
int3
std
push
jmp
xchg
outsb
int3
adc
push
sub
lods
mov
js
sub
repz
pushl
imul
cmp
lcall
sub
out
and
ret
or
sub
sub
sub
sbb
ja
fisubs
xor
jo
fucomi
sub
stos
into
mov
adcl
shrl
out
imul
mov
inc
sub
pop
sub
mov
xchg
scas
dec
fs
mov
in
dec
imul
mov
pop
and
or
ds
ja
jnp
pop
push
dec
fcmovnbe
in
xchg
setno
pop
pop
cmpb
cli
adc
pop
not
add
je
pop
push
pop
mov
cmp
push
ja
or
neg
jns
das
test
lods
mov
int
lock
stc
cs
arpl
cmpsb
dec
scas
fcmove
xlat
adc
sbb
push
jae
add
jnp
je
dec
hlt
in
jecxz
out
lods
mov
inc
mov
fiadds
sub
inc
or
jg
mov
test
test
inc
or
and
mov
movsl
xor
das
fwait
mov
add
jo
and
stos
and
insl
je
in
subb
aas
cld
lret
jno
in
or
dec
mov
andl
lock
mov
nop
cmp
test
lahf
shr
or
sarb
mov
int3
shll
mov
mov
mov
dec
sub
sahf
insl
lret
or
pop
ret
mov
dec
ja
add
or
shlb
fsubp
cmp
insl
repnz
jg
jecxz
sti
push
es
mov
pop
imul
xchg
xchg
in
ds
xchg
stc
es
in
decl
cmpsl
loopne
stos
add
xchg
adc
mov
std
mov
and
addl
in
xchg
jno
jmp
push
inc
lret
aad
or
mov
inc
or
push
mov
add
cmp
scas
jl
pushf
dec
inc
mov
call
aad
mov
jne
xor
sub
ja
cld
adc
cmpsl
xchg
mov
sbb
movsl
ds
push
lods
and
push
or
fwait
pop
movsl
jp
cmp
xchg
andb
in
jmp
push
mov
in
mov
mov
in
aad
jmp
imul
or
je
lods
imulb
sub
lahf
fcompl
aam
or
jl
dec
jns
insb
in
or
and
inc
test
mov
idivb
adc
fistl
leave
mov
inc
push
out
xor
stos
imul
mov
orl
pop
push
test
mov
notl
adc
add
aaa
data16
fsub
fisubs
sub
scas
in
out
sbb
jae
scas
push
adc
and
dec
fwait
xchg
add
js,pn
mov
sbb
and
dec
push
aas
mov
loopne
pop
push
loopne
ss
jle
xlat
fstpl
sahf
cmp
mov
push
loope
mov
mov
and
pop
cmp
cwtl
rclb
and
pop
add
test
aam
cmp
mov
enter
and
dec
sub
cmp
mov
loopne
movsl
mov
test
sbb
mov
sub
insl
popl
loopne
adc
aam
ljmp
data16
or
add
sub
hlt
jl
sub
sbb
pushf
pushf
scas
add
arpl
mov
jo
mov
push
cs
inc
leave
mov
sub
imul
jnp
addb
scas
jno
pop
dec
pushf
fs
aad
lcall
stos
xor
mov
jmp
add
dec
stos
imul
cmp
xor
xchg
mov
jno
and
shll
loop
sbb
inc
lret
jmp
inc
pusha
mov
xor
hlt
cmpl
in
push
popa
imul
xchg
cmp
aaa
jae
icebp
inc
sbb
fdivl
ret
push
je
dec
or
add
mov
add
mov
popa
cs
mov
and
cmc
flds
cmp
adc
inc
and
fisttpl
cmp
xor
mov
cmpsb
or
repz
out
stc
mov
jae
aam
imul
pop
dec
or
xorb
in
sbb
in
out
sarl
adc
pop
xchg
cmp
jbe
and
ret
popa
sub
xor
jle
xor
mov
push
nop
pop
movsl
add
dec
lret
cmp
fwait
push
xchg
popw
and
pusha
push
adc
js
outsl
cwtl
push
mov
in
sbb
mov
fidivrl
pushf
sub
mov
cmp
sbb
int3
and
pop
mov
or
iret
mov
lea
out
mov
push
xorb
sbb
dec
ficomps
test
mov
jae
inc
enter
cmp
rorb
inc
push
ret
cmpsb
mov
div
and
fsubrp
andb
repz
aaa
lds
shl
int3
cli
adcb
fld
adc
sbb
push
inc
adc
movsb
cmpsb
dec
mov
ficomps
jp
imul
js
int
sub
jecxz
inc
pop
sub
jnp
sarb
cmp
into
xorl
mov
mov
decl
int3
push
stos
lea
mov
cmpsb
iret
pop
mov
jnp
ret
xchg
mov
jnp
mov
jns
and
loop
rcrl
insl
pop
or
mov
and
dec
movsb
ror
fldl
pop
cwtl
lds
inc
addb
sub
or
push
ja
push
rcl
mov
pop
mov
jl
xor
out
pushf
cmp
push
dec
popf
hlt
stc
pop
and
daa
cwtl
cmpsb
pop
scas
mov
adc
fsts
xor
mov
aaa
dec
cmp
push
xor
push
fs
ljmp
aaa
daa
fldt
inc
pop
lods
in
bound
sbb
pop
or
js
insb
add
aaa
das
dec
push
aas
xor
add
enter
xor
sub
xor
ja
fsts
fisubrl
jae
push
mov
jnp
push
test
iret
xor
push
and
js
dec
mov
adc
fists
movsl
je
movsl
push
idivl
mov
jp
dec
out
in
popa
aad
push
aad
fidivl
jns
xchg
xchg
xchg
or
lret
inc
jno
adcl
sahf
ret
lret
sbb
or
dec
push
pmaxsw
sarb
add
jb
mov
sbb
mov
ljmp
test
push
inc
or
out
push
dec
les
and
xchg
jl
btc
daa
mov
out
mov
pop
mov
xchg
add
sub
stc
sbb
xlat
pop
icebp
sbb
in
mov
push
daa
je
or
xor
shlb
mov
cmp
sub
xor
xor
mov
push
outsl
insl
mov
cwtl
movsl
pop
mov
jae
push
out
mov
pop
mov
es
push
sbb
cmpsl
jnp
push
popa
push
jp
mov
pop
inc
popa
std
jns
rorl
negl
sarb
lock
loop
push
int
loop
or
sub
cmp
or
push
pop
andl
lcall
inc
loop
inc
or
xchg
mov
lock
cmp
adcb
aas
dec
jle
cmp
inc
jmp
sub
xchg
mov
lret
mov
push
outsl
and
in
pop
push
jecxz
cmpsl
mov
pop
dec
lods
mov
iret
sub
xchg
orl
xor
iret
cli
das
jge
test
ja
shlb
xor
test
dec
jne
stc
mov
outsl
arpl
jbe
push
push
in
push
aaa
enter
sub
sub
int3
repnz
nop
fmul
or
push
sahf
imull
cs
adc
jmp
mov
icebp
sbb
jbe
inc
cmp
mov
pop
push
decl
lods
mov
push
fcomip
pop
dec
loop
pusha
movsb
push
int3
loopne
je
mov
mov
popf
in
or
sub
outsl
fnstsw
pop
and
jo
ficompl
and
mov
mov
outsl
test
inc
jl
ja
dec
mov
mov
idiv
xchg
cs
call
push
js
and
test
pop
out
adc
mov
fwait
xor
cli
lods
inc
out
mov
jae
push
xchg
ret
xor
jmp
movzwl
cmpsb
je
je
dec
and
mov
lret
adc
loope
out
jne
pop
xchg
xor
mov
pusha
pop
mov
lahf
xor
icebp
shrb
movsb
je
xor
es
sbb
test
inc
outsl
mov
adc
pop
jno
sub
mov
pop
mov
and
xor
cmpsb
add
ror
stos
fs
insl
enter
push
in
dec
fcompl
cmp
sti
pop
or
adc
ret
jno
mov
testl
sub
aam
pop
addl
pushf
jnp
insl
sub
iret
dec
fcomps
mov
inc
sub
loopne
aas
pop
pop
sbb
imul
sbb
mov
pop
dec
insl
dec
xor
mov
insb
pushf
arpl
out
mov
addl
adc
lret
in
mov
dec
int3
repnz
cmpsb
insl
dec
mov
daa
ja
inc
xor
lret
test
outsl
xlat
repz
out
dec
arpl
cld
jge
mov
test
jo
add
cmp
jmp
pop
stos
les
cmpsb
jnp
popf
popf
ljmp
outsb
ljmp
add
pop
push
je
push
dec
push
jns
ljmp
sub
lret
test
sub
xor
and
mov
rcll
mov
cmp
dec
popa
loope
mov
push
movsb
xchg
mov
pop
int
or
xor
cmpsb
push
cmp
or
test
xchg
int
shrl
mov
scas
fisubrl
cmpl
popa
push
stos
dec
pop
lods
aam
movsb
or
sbb
lock
dec
sbbl
sti
leave
pusha
pop
das
ljmp
mov
adc
ror
hlt
mov
movsl
and
sbb
loope
stos
int3
push
cmpsb
pop
cmp
push
jnp
xchg
add
pop
stc
js
jnp
cli
movsb
jp
or
mov
divl
xor
inc
and
aaa
jl
xchg
jo
add
cmp
xchg
icebp
pmulhuw
das
xchg
test
mov
or
pop
mov
out
stc
or
push
fnsave
mov
adc
sbb
sub
repnz
movsb
mov
cmp
cmpsb
insb
push
xchg
sub
icebp
sbb
pop
aam
je
xor
cltd
fisubl
cmp
pop
out
rorl
lea
mov
jmp
fisubs
inc
dec
fs
ds
and
pop
lods
sbb
jmp
negb
lahf
mov
xchg
movsb
mov
je
cli
sbb
sub
clc
and
inc
push
or
lods
negb
test
lods
push
mov
aaa
data16
ss
aam
inc
or
bound
xor
inc
dec
mov
repz
movsl
or
test
pop
pop
mov
std
or
lret
sub
mov
cmp
fisubrl
call
pop
pop
scas
push
iret
negl
adc
js
push
pop
jle
es
mov
test
cmp
inc
aam
mov
enter
hlt
mov
mov
sahf
sub
pop
dec
divb
mov
xorb
call
or
inc
ljmp
pop
jmp
jl
lret
imul
jne
cli
fisubs
arpl
push
push
jmp
sub
and
sub
xorl
aad
sbb
and
cli
in
outsb
bound
fnsave
cmp
push
in
lods
pushf
or
test
or
jecxz
or
xor
int3
cs
push
xchg
dec
mov
test
add
nop
les
add
dec
inc
pop
or
xchg
pop
fbstp
imul
popf
push
push
clc
sbb
jge
loope
xchg
xchg
xchg
fsave
push
pusha
and
jae
fsub
inc
mov
sti
push
jae
mov
sub
sub
mov
out
inc
mov
pop
sbb
je
in
scas
test
aaa
cmpsb
or
push
flds
arpl
std
test
xor
lock
sub
cli
cwtl
in
cmc
push
push
out
adc
lds
adc
sarl
cmc
inc
adc
xor
cs
fmull
cli
out
cltd
in
push
daa
xor
dec
adc
icebp
inc
push
xchg
xlat
fcompl
sub
mov
shlb
pop
inc
push
out
inc
leave
call
mov
popf
iret
inc
sbb
rcrl
sbb
lahf
daa
mov
inc
push
sbb
push
push
mov
mov
adc
mov
jp
into
rcrb
mov
sbb
subb
mov
xchg
pop
in
call
or
in
push
mov
or
mov
aaa
sub
inc
rep
cmp
add
aad
neg
lahf
add
stc
cs
enter
aas
xchg
imul
aas
adc
mov
mov
cmp
xchg
adc
insl
mov
out
adc
sbb
jg
xor
dec
loop
mov
sbb
sub
sarl
movsb
and
jae
outsl
int3
push
inc
aas
in
dec
mulb
ljmp
inc
dec
and
cmp
arpl
and
stos
or
push
push
outsl
ja
pop
rorl
adc
push
sbbl
pop
arpl
test
inc
mov
shrl
sub
lea
fistps
and
mov
xchg
call
outsb
js
jl
aad
orb
add
and
or
rclb
lock
addr16
aaa
mov
jge
outsl
imul
es
fwait
xchg
aaa
mov
cmc
xchg
xchg
jbe
in
test
or
jnp
xchg
shlb
ja
mov
cli
jnp
mov
pop
fsts
fisttpl
fdivrp
mov
adc
mov
rclb
adc
enter
mov
push
sub
or
fwait
mov
mov
adc
jo
cwtl
push
in
mov
loop
ss
pusha
sbb
mov
xchg
aas
xchg
push
xchg
inc
testb
pop
pushf
add
clc
fs
mov
cs
push
mov
adc
lcall
push
pusha
push
lods
inc
pop
inc
outsl
push
sub
mov
sub
mov
cs
ja
cmpsl
ret
jno
sub
or
xchg
push
mulb
ds
pop
aam
mov
and
sub
or
cmpsb
flds
outsb
and
call
sub
mov
adc
mov
imul
lods
inc
inc
mov
pop
pop
inc
jecxz
sub
push
adc
dec
mov
icebp
fstpt
in
and
icebp
cli
push
dec
mov
pop
out
std
cmp
xchg
sbb
mov
inc
jmp
push
sbb
cmp
sub
stos
sbb
mov
fistl
mov
notb
inc
iret
adc
jle
mov
stc
ljmp
out
inc
lds
xchg
or
cld
gs
shr
mov
jge
cmp
push
inc
or
adc
sar
inc
sbb
or
xor
adc
push
imul
xor
ja
xor
rorl
sub
imul
cmp
jno
mov
and
lret
shr
call
fstpl
pop
dec
jecxz
mov
dec
xorb
std
mov
ret
jae
dec
push
cmc
xorl
ret
jo
mov
and
cs
push
push
es
call
jb
mov
outsb
aad
imul
andl
into
out
sbb
inc
xchg
test
mov
or
push
mov
dec
jbe
push
leave
inc
dec
push
mov
and
pminub
repz
push
repnz
adc
or
mov
xor
ret
mov
insl
push
pop
lret
stc
in
mov
mov
dec
sbb
test
adc
insb
jle
movsl
hlt
inc
xchg
dec
fmuls
lahf
stc
js
jge
nop
and
mov
push
mov
xor
js
loope
or
xchg
and
mov
inc
mov
sub
adc
jne
jbe
sub
clc
iret
mov
mov
pop
push
sarb
push
xchg
ds
mov
jge
mov
push
jb
imul
hlt
jno
imul
inc
mov
mov
fiaddl
daa
cs
or
jecxz
add
mov
push
sub
out
push
nop
inc
cmpsb
ret
jp
pop
xchg
lea
in
clc
dec
lret
mov
loopne
js
cmp
sbb
cwtl
iret
lret
pop
push
in
jmp
daa
mov
dec
xchg
divb
or
shrb
push
sahf
into
push
iret
mov
imul
push
in
scas
push
jl
or
push
jo
idivl
mov
imulb
sub
pop
adc
scas
rorl
lret
sub
push
movsb
mov
dec
lods
and
fisttps
dec
cmp
cmp
rcrl
and
add
ret
or
fldl
lock
mov
inc
xchg
sub
lods
jns
xchg
and
insb
xor
adc
or
lcall
or
aad
mov
or
jl
xchg
mov
and
push
dec
xor
mov
inc
jecxz
inc
cmp
cmp
xchg
adc
xor
push
rcl
inc
jle
ljmp
iret
xchg
or
and
daa
xchg
test
push
in
scas
dec
push
lods
and
movsl
lock
loop
shrl
push
pop
and
ljmp
nop
rol
push
inc
ret
popf
push
cltd
pop
xlat
sahf
jae
ljmp
std
mov
xchg
jmp
popf
hlt
lock
mov
xchg
push
sub
enter
int3
aas
xchg
loope
xchg
dec
shl
stos
lcall
cmp
test
imul
or
inc
inc
mov
inc
jle
and
xchg
repz
out
lods
in
stc
adc
outsl
xor
call
mov
fldenv
xchg
arpl
jbe
sub
call
repz
inc
jp
adc
jecxz
in
in
mov
stc
push
fstl
mov
mov
push
andb
jno
mov
sub
push
pop
arpl
movnti
jmp
xor
xor
dec
inc
mov
arpl
push
mov
fcmove
test
dec
sbb
dec
mov
sbb
pop
mov
xlat
push
decl
jnp
sqrtps
inc
dec
pop
fistl
add
mov
mov
mov
int
xor
push
jl
pop
pop
cmp
mov
pop
stos
xlat
bound
sub
mov
shr
ffree
jb
idivb
jnp
test
iret
cmpsl
orl
mov
ja
push
and
int
pusha
mov
and
adc
push
in
jne
ret
ret
shlb
or
ja
cmpl
sub
jp
inc
mov
pop
in
test
or
movsw
inc
das
xor
imul
lcall
pop
cli
cld
mov
shlb
mov
inc
mov
out
pop
out
xor
mov
pushf
mov
mov
addr16
jle
gs
ds
syscall
jp
negl
mov
mov
or
das
mov
sub
into
aad
pop
push
jp
rep
pushf
xchg
mov
xchg
adc
int3
lcall
cmp
outsb
fs
adc
mov
enter
xchg
addr16
push
or
cmpsl
and
dec
add
and
popf
clc
jmp
in
outsb
cs
inc
or
ljmp
scas
inc
rorl
out
mov
mov
sub
cmp
lret
out
stos
sbb
fstps
sub
sub
aad
jmp
test
pop
push
shlb
aad
jns
xchg
pop
test
sub
or
dec
xor
sub
mov
cmp
scas
ret
jbe
cmc
inc
and
push
xchg
xor
adc
cli
xlat
repnz
dec
xor
cmpb
jg
stos
fisttpl
jo
mov
outsb
das
sub
push
imul
cmp
pop
cmp
mov
or
aam
pop
jp
pop
add
xchg
adc
xlat
push
push
add
addr16
dec
fwait
ret
or
outsb
int
push
pop
adc
shrb
cld
cli
sarb
mov
gs
stos
adc
pusha
dec
xchg
lds
in
or
cs
shlb
dec
cmpsl
and
xor
xor
push
add
push
into
mov
ror
sarl
lahf
jl
mov
jnp
in
popa
inc
push
inc
sub
mov
adc
push
lods
jmp
clc
scas
cltd
jmp
lahf
js
or
out
or
xchg
and
adc
dec
jbe
xor
cmp
pop
mov
add
pop
out
lret
sarl
enter
shlb
mov
loopne
adc
mov
pop
clc
push
xchg
loop
cmpsb
push
imulb
mov
push
aam
lods
pop
sbbb
jle
mov
xor
jno
push
lea
aam
in
and
pushf
add
inc
cwtl
into
das
mov
sarb
xor
mov
add
lret
or
xchg
fdivs
push
adc
jns
mov
notl
xor
scas
cmc
pop
aam
shlb
pop
int3
or
xor
pop
jne
shr
mov
shrl
mov
jns
inc
sub
scas
mov
or
sbb
inc
push
mov
inc
mov
outsb
add
pop
dec
push
push
loopne
dec
sarb
fisttpl
fcompl
xlat
mov
add
dec
lds
lret
adc
or
les
jne
pop
lret
mulb
add
clc
adc
push
mov
adc
stc
lret
rcrb
jo
jno
mov
mov
test
lret
jae
pop
inc
fisubl
andb
pop
sub
and
adc
mov
or
push
dec
sub
xchg
orl
call
std
inc
cwtl
add
std
iret
pop
add
mov
or
adc
mov
mov
lcall
dec
sbb
nop
pop
fadd
add
lcall
mov
mov
lods
inc
push
push
lahf
adc
shll
mov
jmp
xchg
orb
mul
push
mov
jp
outsb
call
cld
jle
lods
pop
test
rolb
es
adc
out
outsb
jecxz
lahf
imul
cmp
adc
repnz
mov
push
pop
pop
push
add
pop
js
test
enter
push
cltd
ja
inc
clc
jne
cmp
or
divl
sub
mov
add
fstp
xchg
xor
mov
out
scas
sbb
addr16
scas
mov
xor
or
in
pop
rolb
xchg
pop
aad
stc
inc
out
add
fcomps
lahf
mov
jg
imul
and
adcb
mov
and
flds
adc
test
and
push
mov
cmpsl
adc
enter
popa
hlt
icebp
stos
xchg
fsubrp
mov
push
cli
cli
sbb
fimuls
xchg
mov
push
xchg
sub
fnstcw
jge
cmp
mov
cmp
invd
pop
loopne
push
jl
movb
pop
lahf
insl
ret
out
ficompl
or
jbe,pt
jb
inc
iret
mov
sbb
xchg
mov
loope
cmp
lock
or
dec
and
mov
dec
push
add
add
push
push
fucomi
cmp
and
pop
sbb
push
sbb
mov
cld
stos
cli
mov
test
add
movsb
gs
mov
addr16
push
ret
scas
test
dec
es
test
out
adc
inc
cltd
and
insb
xlat
add
sub
cmp
or
out
adc
jmp
mov
nop
fldt
xchg
mul
mov
loopne
lahf
cmp
add
push
pop
and
push
iret
sarl
cmp
sbb
add
imul
out
fnsave
inc
lret
adc
inc
nop
adc
bound
lods
sbb
pop
into
sbb
icebp
jecxz
ljmp
movsl
cmp
dec
dec
jge
bound
push
iret
cmp
icebp
dec
scas
jne
xor
push
out
mov
loope
mov
dec
js
cmp
mov
lods
dec
sub
gs
mov
pop
cmp
cmp
xchg
imul
push
push
in
jnp
int3
mov
jne
movb
cwtl
xchg
stos
dec
xor
int
sub
ficompl
cmpsl
es
push
aam
xchg
popf
into
sbb
cmp
shll
in
mov
xor
xor
or
xor
in
pop
sbb
insl
push
cmpsb
cli
or
pop
outsl
push
mov
adc
cmp
xchg
sbb
mov
inc
pop
xchg
push
pop
xor
xlat
inc
pop
in
imul
pop
adc
mov
sbb
cmpsl
push
mov
push
mov
aas
inc
adc
pop
inc
jo
xchg
inc
pop
test
fwait
cmc
inc
aam
call
int
and
lret
jle
cmp
mov
xchg
popa
in
and
into
mov
pusha
jbe
lret
mov
push
push
dec
pop
dec
xchg
aas
scas
sbb
sbb
aam
jp
pushf
lcall
sahf
push
cwtl
mov
into
jnp
ljmp
mov
pop
sbb
outsl
jno,pt
push
pop
jnp
loop
pop
int
and
and
movsb
enter
cmp
push
add
adcl
fnstenv
and
mov
sbb
in
outsl
aas
ret
repnz
sbb
mov
mov
mov
add
push
or
jne
push
shll
jle
pop
scas
mov
xchg
add
mov
add
into
insb
inc
cmc
shrl
mov
or
imul
or
mov
sbb
jmp
jecxz
inc
jne
pop
cmpsl
scas
movsb
mov
mov
movsb
cwtl
pop
jnp
and
arpl
xchg
mov
iret
fidivs
outsb
out
pop
gs
daa
enter
cmc
sbb
jl
push
mov
inc
dec
ja
addb
stc
push
inc
nop
push
pop
mov
fistpl
stos
xchg
mov
pop
jg
sbb
sub
xor
mov
sub
bound
pop
jne
push
movsl
cli
int3
ja
test
mov
lcall
scas
push
jmp
scas
cwtl
and
mov
pop
icebp
sub
pop
mov
or
not
dec
imul
push
mov
fs
jle
es
mov
cs
rclb
or
mov
cmpsl
jg
lret
out
cmp
cmp
cmp
cmp
lahf
mov
dec
js
cld
aas
scas
inc
movsl
xchg
aas
leave
scas
cmp
or
xor
rcr
shr
dec
inc
clc
adc
cmp
pop
mov
lds
outsb
ret
cld
je
lea
pop
test
xor
fcmovnb
xor
pop
lods
mov
test
jmp
dec
cmp
sub
push
daa
push
popf
ret
fbld
cmpb
xchg
jb
std
adc
or
scas
mov
dec
mov
cmp
push
dec
bound
cli
rcl
testl
push
or
and
xchg
cmpl
adc
movsb
in
addr16
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
fdivrl
cwtl
mov
and
xchg
cmp
ja
cmpsl
inc
lods
push
lock
cs
imulb
rcrl
jae
in
fldl
repnz
lret
and
jle
cmp
cmp
or
test
mov
fwait
inc
cmc
cwtl
cmp
stc
push
inc
out
ret
scas
fiadds
int
xchg
mov
test
lods
dec
imul
or
or
stc
test
mov
cmp
imul
mov
insb
in
sbb
push
xor
scas
mov
jns
cwtl
fisubs
out
dec
movsl
sub
jns
js
scas
cmp
and
int
add
out
pop
enter
sti
dec
or
cmp
adc
dec
xor
enter
out
in
xchg
lret
popf
clc
aam
das
adc
aam
mov
fcomp
push
es
icebp
mov
mov
xchg
js
imul
in
sti
std
xchg
int3
lret
xchg
stc
inc
lock
dec
dec
int3
leave
das
add
mov
inc
xchg
mov
xchg
add
add
es
in
sbb
or
es
and
cmp
mov
pop
inc
inc
mov
push
push
push
outsb
mov
dec
daa
mov
mov
lds
push
cmpsb
cmc
mov
test
movsl
loopne
adc
int
jae
cmp
rcll
dec
rcrb
mov
in
cli
hlt
mov
cmp
xlat
testl
cmp
hlt
in
push
daa
pop
repz
push
int3
sub
sub
hlt
insb
xor
mov
stos
adc
fcomps
hlt
cmpsb
jo
sub
out
sti
sub
or
push
popl
cmp
dec
fistpll
sub
inc
cltd
mov
mov
int
push
cld
aas
jnp
dec
cmp
add
add
add
xchg
add
inc
xchg
scas
pop
add
lcall
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
mov
