sbb
add
mov
pushf
mov
add
dec
repnz
or
das
mov
nop
dec
ds
insl
pop
icebp
push
jnp
aas
loope
xor
iret
sub
mov
out
jae
mov
push
ja
sub
cmp
or
inc
enter
dec
js
repnz
int3
cli
inc
sbb
loopne
ret
dec
sbb
inc
pop
jb
bound
add
jle
sub
adc
pop
jg
jb
sahf
push
int3
xchg
enter
mov
sub
xchg
mov
sbb
jp
loop
mov
mov
fdivp
std
mov
cld
rcrl
les
lods
add
jp
push
mov
int
dec
pop
dec
jge
sti
je
add
movsl
xchg
pusha
loop
inc
shlb
inc
cld
jb
shrl
outsb
xor
adc
cmpsb
popa
jmp
mov
mov
mov
jnp
mov
bound
xor
sbb
dec
add
nop
lcall
andb
test
movl
fucomp
add
aaa
cmp
sbb
and
out
pop
push
movsl
js
inc
add
repz
jb
cmp
nop
pxor
push
xlat
push
push
add
enter
movsb
mov
push
iret
aam
dec
negl
insb
or
push
fs
dec
shlb
mov
sahf
cmpsl
cmp
fisubl
sub
dec
jl
cmpb
sub
in
add
scas
in
imul
inc
xor
jge
add
cwtl
mov
aaa
push
add
adc
xor
and
mov
hlt
mov
out
mov
mov
xchg
pop
push
fidivrl
jp
push
inc
loop
add
das
inc
out
jae
in
or
insb
pop
mov
inc
jno
imul
pop
iret
shrl
pop
jmp
lahf
or
repz
pop
rorb
outsb
idivb
enterw
sbb
ret
sub
pop
rclb
and
imul
loop
sti
leave
rcrb
jmp
push
aas
pop
jo
mov
push
push
xor
xchg
movsb
fdivs
arpl
sub
pop
pop
lcall
pop
fisubrl
loop
jmp
cmp
mov
cltd
lcall
dec
inc
test
ret
xor
cld
inc
rolb
inc
ja
mov
sbb
mulb
lahf
fdivrl
mov
xor
push
mov
push
fcmovu
lds
jge
test
test
addr16
fwait
jp
leave
mov
icebp
das
jp
repz
imul
mov
adc
xor
enter
cmp
mov
sti
inc
repnz
mov
push
jg
mov
dec
mov
adc
dec
dec
pop
lods
mov
mov
dec
das
int3
in
js
or
and
mov
cs
xor
xlat
into
int
stc
int
pushf
push
xor
scas
outsl
xchg
popa
xlat
xor
inc
aaa
pop
andb
je
shlb
test
out
dec
je
cmpb
cmp
add
cmp
push
mov
pop
sahf
imul
sub
lea
adc
mov
pop
or
insl
adcb
daa
icebp
mov
inc
mov
shl
mov
cmp
into
movaps
decb
movsb
popf
and
xor
xor
and
fiadds
xor
xchg
jbe
rcr
lea
mov
mov
insb
push
movsl
mov
sbb
and
fwait
sarl
pop
cmpl
cmpsb
jl
adc
stc
jo
jne
sub
push
xor
push
sbb
dec
aad
sbb
adcl
int3
rclb
push
push
or
cs
jmp
stos
mov
jnp
lahf
test
dec
fists
inc
cmpsb
mov
or
mov
xchg
cmp
shrl
jns
mov
rcrl
inc
outsl
dec
das
pusha
pusha
cmpl
mov
push
sti
sub
test
repz
lret
lret
xor
clc
gs
and
xlat
jmp
mov
and
jmp
cmp
cli
mov
icebp
dec
jmp
adc
ds
lds
stos
mov
mov
mov
cmp
fsubrs
cld
loopne
mov
punpckldq
mov
adc
addl
jg
mov
fcmovu
imul
mov
pop
add
jo
xchg
xchg
nop
mov
cmp
add
addb
popf
jbe
stc
mov
cmp
imul
xchg
enter
cmp
pop
icebp
cmp
out
cmp
out
fdivs
push
adc
inc
test
ret
and
movsb
repnz
inc
add
rol
test
dec
push
test
out
cmpb
aam
mov
jmp
push
arpl
cmp
xor
cmpsl
outsl
dec
outsb
xchg
fs
je
fldenv
cs
push
add
orb
sbb
push
lahf
movsl
xor
insb
pop
push
and
ficompl
aam
in
divb
inc
mov
cmpsl
push
imul
subl
push
xchg
jbe
ljmp
in
out
xor
xor
dec
jle
sub
cmp
mov
and
xchg
popa
sarl
int3
shll
lret
cltd
inc
pop
iret
dec
es
xor
push
sbb
mov
jg
xor
icebp
mov
movsl
leave
inc
aaa
cmpsl
dec
sbbb
sbb
shrb
inc
cmp
xchg
decb
enter
cmp
je
add
push
js
icebp
jge
push
cmp
jl
fwait
mov
mov
sbb
in
mov
dec
nop
push
push
imul
cmp
call
stos
adc
inc
mov
pop
mov
sub
mov
out
das
jno
dec
adc
jns
fcmovnbe
mov
mov
cmp
cmp
enter
bound
scas
out
jmp
clc
jno
mov
sbbb
pop
or
jns
sub
popf
movsl
mov
fwait
cmp
and
movsl
outsb
jns
lret
sbb
mov
mov
divl
subl
xchg
ds
xor
push
jp
stos
xchg
add
sub
fadds
and
arpl
in
and
pop
paddusw
insl
cmpsl
mov
div
cmpb
jmp
aad
arpl
test
xor
xor
xchg
mov
test
in
pop
ror
mov
out
repnz
out
xor
rcl
lcall
push
pusha
pop
xor
shrl
mov
or
popf
sbb
out
ds
insb
loopne
xor
mov
xor
lcall
push
jge
subb
mov
sub
pop
pop
sbb
sub
xchg
push
rol
outsb
mov
add
mov
or
or
xorb
daa
dec
nop
es
push
ss
pushf
sti
pop
push
fmulp
mov
popa
in
jno
mov
push
push
stos
popa
mov
out
cmp
dec
hlt
cwtl
paddsw
subb
pop
mov
add
sti
mov
cli
fistps
and
xor
mov
fcoms
stos
sahf
sub
xor
sub
sub
cmc
aas
sbb
dec
push
push
pop
arpl
test
add
cmpsb
dec
add
outsb
cmp
and
cmpsl
iret
loop
push
cmp
decb
sbb
mov
xor
sub
add
mov
fisttps
push
or
loopne
aam
outsb
sub
rcrl
xor
jmp
or
test
daa
mov
aam
mov
cmc
test
call
push
jle
sbb
jno
jo
xchg
sbb
adc
xchg
jp
adc
cmp
jnp
outsl
scas
movsl
xchg
pop
imul
add
call
stos
jecxz
jnp
std
add
dec
push
mov
lret
and
lret
icebp
cmp
fchs
push
push
pop
out
push
mov
jecxz
sub
into
cmp
imul
call
call
test
fistpll
aas
add
push
jp
mov
nop
inc
add
add
js
fwait
out
arpl
xchg
je
xchg
push
push
mov
int
cmpsl
mov
mov
je
pop
or
inc
scas
or
out
movsb
das
lods
popf
jns
hlt
and
gs
xchg
cmpb
sarl
pop
push
movsb
pusha
push
pop
cld
mov
cli
sub
sahf
or
or
or
cwtd
fsubs
mov
stc
enter
fsubl
mov
insl
mov
sub
leave
iret
inc
xchg
or
mov
inc
into
ret
mov
xlat
sti
dec
data16
xchg
push
sbb
pop
pushf
stos
mov
int
or
loopne
lea
orb
pop
add
jb
jg
jb
xchg
pop
icebp
dec
popf
dec
pop
sbb
mov
decb
rolb
push
xor
push
je
pop
in
clc
mov
jecxz
out
add
adc
jmp
jle
jecxz
cmp
adc
lea
xchg
cmp
mov
lods
xlat
js
jg
daa
je
mov
adc
es
cmpsb
push
sub
pop
jbe
lret
cmp
lret
outsb
cmp
outsb
icebp
pop
rcl
lods
inc
mov
pop
and
push
mov
or
adc
push
jge
pop
addr16
mov
dec
les
xor
adc
imul
mov
xchg
ss
cld
or
add
nop
adc
jmp
outsl
xor
push
and
adc
push
ss
mov
adc
test
push
out
pop
popf
pusha
jp
cmp
jb
sar
fwait
inc
ja
test
xchg
insb
in
lret
dec
ret
cltd
jb
in
cmpsb
pop
xor
into
stc
faddl
mov
cltd
jnp
xchg
jne
sbb
xchg
or
fs
lods
push
xlat
adc
mov
or
adc
xor
mov
push
leave
stc
add
mov
insb
call
out
adc
out
dec
js
push
in
lea
dec
lods
repz
and
add
pop
push
pop
nop
lock
dec
adc
lret
add
mov
jne
mov
xor
inc
hlt
je
push
or
xor
or
xchg
adc
pop
and
add
inc
rcrb
xor
jge
int
std
xchg
movsb
xchg
movsb
outsb
jg
xchg
adc
test
or
roll
sbb
into
daa
leave
mulb
jo
movsl
sbb
test
ret
mov
addr16
mov
and
adc
scas
add
aas
mov
or
sub
stos
imul
pop
fwait
pop
out
es
sub
mov
mov
test
iret
mov
push
mov
orb
inc
mov
jno
pusha
sbb
push
aaa
xor
inc
jne
pop
jns
xchg
xor
imul
add
imul
dec
push
out
xchg
stos
iret
sbb
mov
aas
ret
push
das
xchg
xchg
or
jae
das
push
adc
add
je
xor
mov
push
test
movsb
lret
cmp
cld
add
xchg
and
dec
cwtl
fiadds
sub
xor
stc
in
cmp
divl
lret
cs
push
jns
pop
cmp
mov
fnstenv
jg
cmp
mov
in
mov
lock
fwait
xor
jge
jl
mov
inc
test
add
push
imul
shlb
decb
cmp
xor
sub
or
int
inc
and
sub
adc
sub
xchg
ret
push
call
and
cmp
aas
mov
mov
mov
pusha
js
and
xchg
sub
arpl
shll
add
std
aaa
pop
inc
xchg
push
mov
addb
or
cmpsb
push
outsl
outsl
fcomps
pop
jmp
sbb
jge
or
popa
cwtl
fdivrp
enter
gs
xor
fnsave
shll
jbe
out
rorb
es
mov
dec
mov
jge
or
lahf
push
repnz
jbe
lds
sub
xchg
rcll
xchg
and
sbb
adcl
jo
mov
lret
iret
jp
xchg
inc
loope
lcall
call
stos
pop
jge
inc
push
enter
jmp
aaa
in
jecxz
daa
and
mov
insl
subl
sub
fcompl
jg
xchg
jnp
sbb
and
daa
mov
in
pop
mov
sbb
mov
dec
xor
jnp
jecxz
mov
lds
js
mov
mov
bound
mov
cwtl
xor
or
xor
pop
sub
pop
mov
movsl
pop
stos
pop
out
fs
in
mov
mov
lods
jl
cli
sbb
inc
and
cmp
jle
jg
dec
bound
fwait
in
dec
mov
push
inc
sub
popa
cmc
dec
data16
xchg
outsb
cmpsb
and
hlt
inc
push
ret
add
pop
cs
dec
mov
outsl
scas
dec
roll
ss
mov
or
stc
int3
inc
iret
jb
sbb
mov
push
add
dec
roll
xor
mov
push
std
inc
dec
ret
loope
or
call
popl
and
pop
daa
sub
sarb
pusha
test
jae
push
sbb
mov
mov
fiadds
jnp
inc
out
jo
stc
pop
and
testl
mov
sub
push
addr16
xchg
lock
aaa
mov
pusha
pop
movsl
xor
pop
popa
cmpsb
push
jmp
add
lret
jbe
push
mov
cmp
fidivrs
adc
fwait
jnp
and
rcrl
ret
pop
jge
push
movsl
sub
sbb
and
idiv
ds
adcb
add
lret
mov
jmp
sub
not
movsl
push
and
hlt
insl
cmp
gs
add
push
jle
cmp
inc
fcomi
inc
adc
xchg
shlb
into
sbb
jae
mov
gs
mov
daa
or
mov
int
cli
xchg
adc
sbb
aam
cmc
mov
das
cmpsb
jnp
sub
push
enter
arpl
mulb
mov
outsl
mov
mov
dec
push
test
jbe
imul
mov
sub
add
dec
popf
mov
mov
popf
and
paddb
mov
fucom
push
sbb
sbb
dec
icebp
decl
mov
adc
jno
sub
pop
pop
fcmovbe
out
xor
std
push
mov
cmp
mov
mov
or
cmp
lahf
aam
popf
add
inc
sub
adc
mov
inc
mov
xor
movsl
sbb
inc
test
sbb
sahf
outsb
mov
sbb
test
push
fimull
outsb
push
bound
adc
pop
push
dec
and
jge
mov
mov
jnp
nop
or
mov
cmpsb
and
loop
xchg
mov
shlb
or
and
ss
and
in
xor
in
mov
adc
aaa
xchg
dec
lods
jecxz
inc
sbb
xor
orb
xchg
fdivr
adc
mov
xor
scas
add
mov
loop
mov
push
outsb
xchg
xchg
and
scas
push
fwait
call
mov
mov
push
xchg
mov
stos
iret
mov
insb
test
out
daa
mov
mov
sub
rcll
mov
jbe
test
fmuls
and
mov
xchg
mov
in
lods
cmp
add
arpl
cmp
mov
adc
push
xchg
leave
imul
cld
mov
cmp
fimuls
movsl
imul
fadds
add
dec
mov
sub
xchg
mov
sub
jg
cmpsl
ret
push
sbb
js
stc
pop
adc
inc
gs
in
push
int3
mov
insl
sbb
aas
fistps
pop
adc
pop
mov
orl
mov
sti
push
ds
inc
add
int3
mov
pop
outsb
and
mov
xor
mov
pop
mov
sub
sbb
jp
xchg
lahf
fcmovnbe
sub
push
mov
push
aam
ja
push
pop
repz
mov
inc
sub
jle
movsb
fbld
adcb
pop
cltd
jns
pop
xor
shll
test
aaa
mov
inc
cmpsl
or
cmp
mov
jo
addr16
js
ljmp
nop
outsb
cwtl
daa
and
repz
sub
sub
adc
in
cmp
stos
hlt
hlt
scas
pop
movsl
mov
test
popf
inc
pop
jmp
pop
jbe
ret
jecxz
test
aam
gs
jae
fidivs
xlat
xchg
jb
sub
mov
into
jl
imul
sub
mov
push
fdivrs
jae
sti
outsb
jl
mov
add
test
popa
cmpsl
cmpsl
adc
insb
pusha
and
adc
ljmp
dec
mov
stc
jl
aas
fimull
pop
call
jecxz,pn
push
or
fistps
fwait
je
add
fdivs
mov
sbbl
push
enter
inc
fidivl
inc
aad
fwait
xor
mov
and
cli
lods
mov
sub
pop
mov
jl
bound
lock
sti
imul
cmpsl
inc
xchg
bound
bound
cmp
xor
cli
loop
mov
js
jne
adc
pop
mov
dec
scas
popa
adc
mov
jle
xchg
icebp
fs
jecxz
cmpl
sbb
mov
in
or
mov
sub
add
int3
xorb
pop
dec
push
jno
mov
insl
cmp
imul
fcoml
pop
or
daa
and
movsb
adc
sbb
popa
or
mov
push
xchg
jmp
and
dec
insl
sbb
mov
mov
push
test
mov
cwtl
mov
shll
repz
nop
jne
cwtl
xor
mov
imul
push
mov
xchg
ficompl
jle
mov
cmp
lret
and
shlb
mov
jecxz
fnstenv
adc
and
fwait
mov
and
les
movsl
sbb
add
adc
ficomps
lahf
sbb
outsl
repz
lret
sahf
cwtl
cmp
shrb
xor
test
inc
jne
sarb
mov
pop
movb
push
add
cs
out
leave
mov
sbb
mov
pop
nop
inc
mov
jmp
cmp
rclb
xor
add
and
xor
push
hlt
hlt
ljmp
int
int
sub
in
adc
push
adc
test
daa
push
cltd
sub
loopne
adcl
test
xchg
adc
adc
mov
jg
xchg
call
mov
pop
sub
xor
xor
pushf
sub
cmp
les
lds
popf
cli
mov
jmp
rorb
inc
inc
inc
dec
mov
jnp
mov
jb
in
pop
pop
push
push
in
lods
lcall
ss
mov
or
lock
push
mov
cli
pop
rcll
mov
std
incl
or
dec
popa
pusha
dec
fnstsw
in
out
loop
loop
mov
and
inc
or
dec
sti
mov
test
inc
ss
add
les
mov
and
stos
stos
out
mov
add
adc
sahf
xchg
push
sbb
inc
inc
dec
push
xchg
ds
icebp
mov
jae
sbb
jg
into
pop
or
xchg
testb
fmuls
sub
mov
fsubp
shll
fidivs
mov
outsb
pop
sbb
lret
lods
nop
rcrl
shl
cmpsl
aaa
or
mov
mov
sbb
xor
xchg
in
xlat
pop
and
jmp
incb
xor
sub
pushf
fcmovne
lret
push
push
icebp
lea
ret
mov
not
lods
leave
cmpsl
das
adc
iret
mov
cwtl
add
lods
jo
xchg
xor
cmp
add
add
outsb
dec
pop
add
xor
fcompl
sub
mov
fistpl
xor
andb
rorb
je
xlat
fcmovnb
pop
cmp
adc
call
add
or
sti
dec
mov
sub
cwtl
push
mov
push
js
fdivl
xor
fistpll
dec
lcall
cmpsb
roll
shrb
popa
ljmp
pop
pop
jmp
xchg
mov
cmp
and
ror
loope
mov
xchg
pop
int3
and
fucomp
cmp
mov
insl
inc
sub
mov
lcall
lds
mov
or
mov
inc
sub
and
or
xor
jnp
mov
aam
sub
and
ds
pop
jg
push
repnz
sub
bound
loope
cmp
int
or
aaa
mov
jle
push
jbe
fsubl
rorl
dec
out
fsts
into
imul
sahf
mov
xchg
inc
hlt
out
scas
mov
xlat
xchg
push
push
std
orl
mov
xor
push
pop
or
xor
push
add
sub
in
xchg
mov
sbb
outsl
gs
dec
fsubs
and
mov
stc
and
jns
aad
push
lods
popa
lods
int3
inc
push
aas
ret
mov
mov
xchg
jns
in
fiadds
xchg
sub
mull
xchg
pushf
add
cmpsb
out
push
in
cmovne
clc
out
xor
mov
mov
cld
pop
hlt
les
or
cltd
idiv
cmp
cmp
xchg
pop
add
scas
fmul
dec
xchg
inc
xchg
cs
ret
es
push
xchg
mov
adc
mov
scas
cmp
cmpsl
jle
jb
insb
xchg
jne
cmp
sub
jo
jnp
imul
add
cld
jb
or
pop
xor
pusha
ss
sbb
dec
stc
mov
push
mov
lea
add
adc
add
aaa
daa
dec
push
lahf
sahf
insb
fwait
sbb
fwait
sbb
pusha
pop
sub
mov
pop
stc
faddp
mov
xorl
xchg
inc
aam
negl
test
popw
shrb
jmp
mov
andb
pop
or
fidivs
xchg
pop
inc
inc
js
mov
cli
inc
push
fcoml
jo
xchg
jp
push
lds
add
cmpsb
loope
arpl
popf
js
stc
xchg
inc
hlt
inc
in
mov
mov
orb
sahf
imul
loope
pusha
jb
sbb
sub
xor
fbstp
jb
pop
jle
mov
jb
fs
aas
stos
jmp
cmpsb
jns
adc
mov
popa
dec
cmp
push
xlat
pop
int3
mov
and
jg
jnp
mov
mov
mov
jbe
push
pop
stos
fldl
and
std
adc
cmc
ret
mov
repz
sbb
xlat
inc
jnp
int3
jg
sti
push
stos
dec
outsb
xchg
sub
mov
js
xchg
inc
mov
adc
les
cmpsb
pop
test
jge
test
int3
lahf
fdivrs
mov
ljmp
push
lret
je
jmp
test
rol
shlb
dec
xor
in
jmp
add
ja
aam
popa
packuswb
fmull
push
cmpb
mov
shlb
push
jae
cwtl
ds
out
lock
stc
cwtl
lcall
dec
jbe
mov
xchg
ja
xor
in
imul
jl
dec
aas
xchg
adc
lcall
jg
jb
jbe
jns
sar
fsubs
enter
xor
sbb
add
test
std
and
push
xor
fmul
pop
loop
add
push
adc
xor
stos
sbb
mov
cmc
pop
or
xor
sbb
mov
in
cmp
negb
ja
push
inc
cs
inc
xchg
mov
xchg
lds
outsb
dec
lock
pop
xor
xor
loope
cmp
inc
lret
cs
pop
mov
fmull
push
loopne
xchg
rcll
or
sarb
mov
mov
outsl
mov
cmpsl
pop
adc
dec
std
test
jae
daa
cld
inc
add
sub
loopne
xchg
test
in
cs
testl
jne
in
les
xchg
cmp
loope
sbb
cvtpi2ps
sub
mov
loop
hlt
xchg
outsb
std
sti
stc
ja
incb
loope
jg
pop
cmp
jecxz
cwtl
repnz
and
test
xchg
push
bnd
dec
or
dec
dec
mov
aad
sahf
out
push
xchg
xor
lret
pop
xor
xchg
inc
rcll
popf
cs
and
cmpsb
cmpsb
push
aaa
rcrb
mov
movsb
mov
sbb
mov
adc
pop
fisubl
adc
mov
cmpsl
sub
xchg
push
cmp
fistl
inc
shll
xrelease
mov
ja
xor
sub
outsl
mov
sub
je
push
pop
lret
daa
insb
xchg
lret
or
push
cmp
jecxz
or
subb
clc
and
xchg
negl
mov
push
inc
adc
sub
sahf
inc
xor
and
mov
ret
lods
addr16
out
xchg
jns
mov
fildll
sahf
ja
pop
sti
add
js
jl
femms
jg
push
loope
lods
mov
dec
or
lds
test
enter
mov
jae
fsubs
and
sub
jns
sub
cld
dec
rol
xchg
aaa
inc
dec
sbb
lock
nop
jb
xchg
xlat
scas
test
lods
ds
push
mov
sub
shll
movsl
std
leave
and
dec
mov
mov
jb
pop
mov
xchg
icebp
push
cwtl
jno
out
mov
stos
cld
aas
mov
jge
mov
leave
fiadds
data16
xor
popa
movntps
jo
cmpsb
ret
pop
test
jge
scas
or
je
sahf
popf
sub
fildl
inc
out
inc
test
inc
sub
fisubrl
outsb
ds
xchg
xor
pop
andb
and
push
cmp
and
shll
sbb
in
xor
sti
inc
fsubs
rorl
aas
jo
mov
sbb
pop
fstpl
and
stos
mov
int3
xchg
ficoml
jmp
mov
jae
jne
sbb
ljmp
aas
sub
cmp
inc
test
fstpl
rcrb
shlb
rcrb
adc
xchg
scas
repz
add
int3
sbb
call
mov
mov
test
push
dec
fldl
hlt
bound
push
cmp
shlb
push
pop
pop
idivb
pop
jp
add
dec
shll
cmp
or
addr16
enter
movsl
cli
imul
sub
rcll
lds
sub
xchg
inc
pop
mov
in
pop
sbb
dec
ret
fisubs
iret
les
cwtl
inc
cmp
inc
js
pusha
aas
loope
and
faddl
fld
adc
and
xor
sbb
or
mov
jnp
inc
dec
insb
ljmp
sub
jo
sub
xor
sbbb
fwait
popl
ret
std
enter
out
in
xor
dec
mov
dec
dec
xlat
in
mov
hlt
or
fisubrs
pop
shlb
test
mov
test
lcall
cmp
cmpsb
push
adc
cmpsl
psubd
jle
dec
jo
dec
fcmovne
mov
inc
div
imul
jb
dec
shlb
in
sub
notb
idivb
push
nop
fnsave
inc
sub
int
addps
pop
xchg
jmp
sub
cltd
jnp
sbb
shll
imulb
xor
data16
inc
bound
adc
es
mov
das
xchg
jp
sub
dec
jle
bound
shll
sub
in
rcr
pop
adc
mov
sbb
xor
outsb
and
xor
imulb
ret
sub
repz
ret
sub
dec
or
sbb
insb
call
dec
outsl
or
pop
nop
scas
adc
scas
jnp
ret
roll
and
int
loop
cmpsb
xor
std
lret
xchg
cmp
fsts
sub
test
js
loopne
xchg
rorl
int
nop
dec
ss
lret
fstl
sbb
test
cwtl
mov
sahf
lock
jge
addr16
add
cmp
pop
push
push
daa
lods
stos
imul
mov
jecxz
icebp
ja
and
adc
je
jp
mov
ficoms
xchg
test
aas
xchg
sub
hlt
cmp
imul
jmp
mov
adc
stos
xor
push
xchg
stc
adc
adc
movsl
mov
movsl
call
or
xor
jbe
pop
mov
and
jno
or
push
xchg
jno
repnz
js,pn
xchg
xchg
jno
fcmovnu
adc
inc
pop
inc
pop
add
cmc
ret
lods
out
outsl
shrl
insb
pop
mov
incb
jb
xor
mov
sub
inc
mov
mov
inc
xchg
popf
pushf
cmpsb
lods
add
push
or
nop
iret
test
out
les
mov
sbb
adc
aas
insb
mov
sbb
rolb
stc
mov
popa
pusha
loope
xor
rcr
sub
das
aad
inc
pop
dec
mov
dec
sbbb
or
int
lahf
or
popl
push
fstp
enter
shlb
dec
inc
js
add
sbb
jg
push
pop
lods
imull
std
popa
scas
mov
mov
or
sbb
dec
incl
adc
negb
add
cmc
mov
in
inc
fistpl
jecxz
sbb
dec
movsb
lods
out
scas
leave
test
lea
cld
dec
and
out
cmp
and
mov
or
inc
adc
es
in
mov
in
shrb
mov
bound
in
mov
adc
and
aad
adc
mov
inc
push
adc
shl
pop
insl
mov
aaa
xchg
dec
out
pop
loope
xchg
pop
cmp
es
cmpb
push
add
inc
mov
sar
jae
ds
movsb
mov
xlat
push
sbb
adc
inc
mov
inc
xor
pop
lcall
adc
sub
dec
sbb
or
sub
cmp
sub
sub
data16
outsb
sub
ljmp
adc
clc
add
or
or
jle
rcr
dec
mov
stos
les
mov
push
jae
arpl
pop
xchg
js
mov
faddl
test
sarb
std
jle
mov
xchg
mov
sahf
aad
xchg
push
sbb
sbb
xchg
popf
add
inc
mov
sbb
arpl
cmp
es
lods
jg
or
pop
mov
mov
cmp
dec
rclb
xor
and
scas
push
mov
sbb
jmp
idivl
sbb
push
mov
inc
pop
scas
dec
movsl
pop
mov
mov
and
and
push
dec
dec
mov
shrb
rorb
mov
repnz
cwtl
mov
xchg
out
call
adc
add
icebp
pop
pop
icebp
das
das
push
jns
out
xor
pop
movb
add
lea
in
clc
dec
cmp
pop
fsubrs
and
adc
cld
jg
or
pop
fadds
mov
out
movsl
popf
enter
push
les
push
fistps
cltd
inc
cli
fistps
adc
adc
aaa
inc
pushf
lock
pop
adc
pop
imulb
inc
or
cmpl
sub
mov
dec
and
popa
mov
cld
lret
adc
mov
adc
pop
iret
push
imul
fisttpl
orb
dec
dec
fadd
push
ja
scas
out
cltd
mov
adc
mov
insb
add
pop
loope
mov
sbb
mov
xorb
dec
fld
loopne
push
clc
fcmovne
cmp
push
dec
pusha
in
jmp
add
jecxz
jmp
or
xor
push
nop
xchg
xor
mov
mov
cmp
and
or
lret
xor
incl
imul
fsubrs
adc
mov
xchg
rcll
cmp
xchg
fnstcw
hlt
sub
inc
out
jnp
repz
aas
aas
mov
fidivl
pop
shl
test
cmp
mov
sbb
test
xor
fidivrs
mov
jl
adc
call
xchg
xchg
nop
je
sub
lods
dec
add
pop
cmp
lcall
mov
dec
push
scas
lea
iret
imul
dec
inc
lret
jae
aam
inc
int
push
fisttpll
sahf
imul
jo
test
pop
xor
test
fistl
cwtl
mov
pop
repnz
bts
scas
push
mov
push
or
decl
fdivp
fwait
mov
stos
movsb
dec
xchg
xchg
pop
xlat
ret
pop
rorb
mov
and
arpl
or
sbb
dec
testb
jmp
sub
mov
jnp
subl
andb
mov
dec
cli
cld
inc
inc
lret
or
or
adc
ret
adc
aam
shlb
fsub
stos
pusha
add
xchg
sbb
inc
or
mov
frstpm(287
lahf
fsubrs
fldt
in
sahf
ja
or
orl
fmull
out
fstpl
sbb
pushf
scas
out
jecxz
pop
sbb
fwait
or
loopne
pop
jo
inc
xchg
cld
sarb
das
daa
xchg
jmp
sbbl
dec
pop
or
fisttps
je
test
cmpl
in
jl
mov
mov
fld1
in
sub
stc
mov
imul
mov
mov
rcl
das
sbb
cli
push
or
ficoms
push
xor
adcl
sub
rorl
lcall
fwait
mov
cmp
dec
out
inc
push
es
out
and
fadd
loop
icebp
xchg
lods
adc
xchg
xchg
mov
jp
jg
xchg
ret
mov
xchg
lahf
sub
mov
mov
movsl
mov
out
aaa
daa
negl
xchg
in
mov
test
xchg
int3
and
fs
mov
xor
pop
rcll
push
sbb
aas
dec
adc
sbb
add
xor
mov
lahf
notl
movsl
jge
cmpsl
cmp
xor
push
push
fcomip
or
int3
mov
lods
shll
es
shrl
out
aam
jp
inc
emms
dec
xchg
xorb
adc
add
adc
lock
or
addb
dec
push
imul
push
mov
xchg
scas
dec
xlat
xchg
dec
jmp
mov
mov
cmpsl
xchg
add
sbb
loopne
fsub
jg
rcrl
cmp
mov
and
leave
pop
jg
icebp
sub
dec
dec
add
cld
and
outsb
aad
pop
xchg
xlat
fwait
push
inc
mov
into
mov
stc
mov
into
mov
and
sub
adc
int3
rcll
movsl
insb
mov
pop
mov
and
arpl
jne
subl
test
pop
mov
fidivrs
pusha
jg
sbb
cmpsl
cmpsb
xchg
into
ss
out
mov
inc
xchg
stos
inc
aam
jl
enter
cmp
in
xchg
inc
inc
cli
jnp
push
sbb
addr16
sub
shl
out
or
pop
outsb
mov
stos
cmp
jbe
inc
pop
sub
sbb
jle
adc
xlat
cmp
jl
xchg
sub
cmp
icebp
mov
js
icebp
out
xchg
xchg
je
cmpsl
and
jnp
inc
push
push
movsb
jg
or
xchg
jae
shlb
outsb
fmull
cmp
xchg
mov
inc
cmp
inc
mov
cmp
jl
lahf
xor
aam
fisttpl
jnp
aas
hlt
rolb
cmc
das
aas
mov
adc
mov
ja
lods
inc
ret
jae
insb
arpl
test
inc
jnp
mov
cmpb
mov
lret
dec
mov
incl
pop
sbb
inc
fmul
fisttpll
and
push
cld
adcb
xor
mov
cmp
and
cmp
add
into
inc
xchg
es
xchg
mov
or
aam
mov
sbb
add
cs
add
and
pop
xchg
repnz
sbb
int3
inc
pop
cmpsb
outsb
mov
stc
lahf
sahf
lahf
lock
mov
mov
sub
out
sbb
or
mov
cwtl
pop
int3
ss
out
popa
or
and
jae
adc
lret
not
jp
or
and
loope
pop
pop
jl
scas
lret
add
pop
stos
jmp
xchg
add
lods
testb
pop
fisttpl
mov
out
int
dec
ret
sub
pop
arpl
sub
xor
out
push
bnd
cwtl
pop
and
cmp
jle
hlt
sbb
mov
mulb
pop
out
imul
jg
xchg
inc
cmp
mov
ret
push
and
push
xchg
push
pop
std
inc
int3
xchg
rclb
in
sahf
sbb
xor
leave
and
dec
scas
les
jno
and
jecxz
dec
dec
jbe
pop
mov
and
addr16
jmp
push
jne
out
jge
push
out
fisubrl
aad
mov
gs
aas
push
adc
and
xor
and
jae
ficoml
repz
movsb
clc
sbb
push
shlb
sub
and
sahf
lret
or
subb
push
dec
js
loopne
cltd
dec
adc
subl
add
fistpl
push
in
shrl
jmp
fwait
data16
test
inc
js
xchg
jp
lcall
add
xchg
xor
cmp
cmp
xor
lods
gs
in
subl
movsl
pop
cmp
ljmp
aam
arpl
mov
ss
mov
mov
push
mov
lret
fucom
and
sarb
jge
jbe
les
gs
jle
jbe
mov
aas
leave
adc
lret
sbb
repnz
push
loope
in
dec
das
jge
lret
test
ljmp
sbb
adc
pop
jo
fldenv
test
pop
stos
push
cmpsb
mov
xchg
shrl
jno
mov
push
data16
pop
inc
jmp
outsb
mov
test
or
sub
es
fcoms
add
pop
jae
frstor
pop
mov
cmpsl
scas
xchg
fisttpll
lds
and
add
or
mov
leave
sbb
add
inc
sbb
mov
aas
das
sub
adc
or
inc
add
inc
iret
pop
cmp
push
in
xlat
fadds
std
adc
or
xchg
mov
add
cmp
push
xor
shll
sub
pop
mov
cwtl
cmpsb
xorl
fdivs
adc
fwait
or
pop
adc
push
notl
fisubrl
or
add
cmp
in
loope
mov
cmp
cmp
dec
jmp
or
enter
imul
jne
inc
pop
mov
dec
sub
je
shll
data16
repnz
mov
dec
scas
mov
jo
xorb
mov
jnp
cltd
ljmp
mov
lahf
add
sti
jno
outsl
mov
aam
mov
repz
add
mov
test
cs
out
pop
clc
inc
sahf
jbe
in
popa
ret
js
jmp
jo,pn
inc
lahf
call
arpl
test
shrb
adc
push
and
inc
fstpl
push
repz
popf
xchg
mov
lcall
sti
add
and
or
adc
hlt
or
icebp
jle
or
xor
lcall
mov
mov
data16
data16
test
add
mov
jge
jns
jle
cli
push
bound
aaa
test
dec
and
cmpsb
push
push
std
out
ss
adc
repz
jge
mov
jne
into
adc
pusha
xchg
test
pop
pop
xor
lods
orl
andl
loop
jp
fcoml
push
or
adc
and
mov
arpl
inc
mov
inc
mov
rorl
lock
jne
pop
mov
fiaddl
movsb
in
dec
push
and
jl
or
inc
lock
pop
mov
jno
mov
xchg
adcb
loopne
inc
stc
mov
fidivs
jb
or
les
out
in
jl
fidivl
adc
add
push
test
outsb
mov
and
fs
xor
push
hlt
sub
jne
ret
shll
pop
imul
cmpsl
push
mov
data16
and
cs
jbe
rcr
xchg
mov
and
add
xchg
aaa
dec
push
mov
sbb
fstps
mov
or
dec
orl
sar
rorb
add
xor
sbb
add
jae
and
test
or
lret
add
add
sbbb
mov
mov
ds
jle
sub
aad
mov
sbb
pop
push
push
in
popfw
pop
xchg
andb
out
or
sub
aas
push
mov
mov
dec
aad
push
inc
pushf
andb
lea
dec
and
push
mov
push
jne
pop
dec
cld
push
ds
repnz
mov
loopne
je
sbb
out
xor
or
lcall
or
lar
push
ja
inc
rolb
pop
in
xchg
sub
push
mov
dec
loop
sub
adc
dec
cld
jge
lock
inc
scas
mov
pop
cmc
repnz
sbb
cmpl
std
adc
xchg
aam
jb
add
daa
push
loope
test
subl
sbb
or
push
lods
sbb
cmp
jno
shll
out
sub
aaa
dec
jle
pop
call
push
cmpsb
jg
das
jne
sbb
mov
xchg
dec
sub
dec
jl
adc
xor
sbb
inc
jmp
cmp
jmp
sbb
xor
sub
gs
adc
pop
dec
daa
mov
ljmp
jo
addb
and
lods
aaa
stc
inc
aaa
push
lahf
cmp
adc
adc
into
sub
or
idiv
pop
mov
inc
inc
mov
cmp
mov
adcl
or
out
or
xor
push
and
fs
sbb
cmp
js
imul
and
js
data16
cltd
add
sub
and
cmp
movsb
cld
mov
and
call
popf
jl
mov
aas
mov
sarl
mov
push
loope
or
pusha
out
sbb
lret
mov
loop
lahf
nop
repnz
or
jo
bound
imul
push
cwtl
pop
cmp
xor
loopne
dec
mov
repz
js
mov
in
loop
cmp
out
test
out
cmpl
lods
dec
mov
pop
jnp
ds
out
std
test
shr
out
stos
pop
add
cmp
loope
jo
outsb
push
add
mov
jb
pop
insl
nop
gs
jae
inc
jmp
inc
jge
and
into
mov
inc
inc
sbb
jnp
mov
int3
xchg
loope
xorb
mov
xlat
add
xchg
imul
cmp
lahf
stos
mov
frstor
mov
mov
push
xor
sbb
dec
out
ljmp
cmpsb
ss
add
xchg
scas
pop
mov
push
mov
fcoms
stc
imul
xor
and
push
pop
insl
ja
imul
ss
sti
add
dec
je
dec
into
icebp
out
or
jno
loopne
or
int
dec
cmp
cmp
test
loopne
dec
or
push
cmp
add
sub
and
call
jg
xor
xchg
inc
mov
cmc
lahf
xor
sahf
out
jmp
mov
cmp
mov
sbb
pop
loope
stc
mov
jns
imul
jmp
lcall
jg
imul
cwtl
dec
xchg
lock
xor
or
clc
push
and
pop
in
mov
cmp
and
int3
mov
jg
movsl
mov
push
mov
lea
pop
cmp
loopne
and
fimuls
in
cld
inc
call
sahf
xchg
mov
enter
mov
int
xor
add
fwait
push
inc
mov
movsb
add
jp
xchg
mov
sub
push
insl
mov
inc
cmpsb
mov
scas
xchg
adc
pop
cmp
loop
sbb
sub
cmp
je
sbb
cli
call
and
inc
jae
cmpl
call
xchg
push
xchg
cmp
mov
inc
xchg
int
cmp
cmp
sahf
ds
push
test
stos
and
pop
das
fldenv
cmp
push
mov
les
mov
pop
sbb
fwait
aad
rcr
jl
or
loopne
adc
mov
leave
adc
out
sbb
mov
fadd
sbb
shlb
mov
inc
inc
xor
fwait
sub
scas
lods
adc
adc
repz
mov
hlt
inc
adc
jbe
popa
pop
imul
hlt
imul
pop
lds
out
pop
lret
sbbb
or
ret
les
mov
dec
mov
xchg
pop
lea
mov
dec
jbe
out
fmuls
mov
sub
icebp
dec
daa
sti
xlat
ffree
clc
enter
dec
out
mov
lcall
adc
adc
jnp
jb
add
push
fdivs
push
cmp
hlt
jb
test
dec
addr16
cltd
or
add
popa
mov
sub
shlb
fdivrp
clc
add
pop
idivl
jle
daa
repnz
insl
shll
je
aas
mov
aam
imul
lds
psllw
insl
sbb
jl
xor
aaa
les
jne
dec
das
sbb
fiaddl
ret
jno
jg
mov
int3
std
scas
scas
mov
pusha
outsl
movsb
cmp
outsl
cs
icebp
je
arpl
sar
adc
je
push
push
dec
je
js
enter
pop
in
out
out
lcall
js
orl
pop
jmp
inc
fisttps
dec
mov
fwait
inc
cmpsl
notb
bound
shll
jecxz
push
push
movsb
sub
xor
add
sub
push
lcall
outsl
pop
adc
mov
xchg
xor
or
cmp
call
pop
fldl
jne
das
xor
cmp
addr16
jmp
sbb
in
in
mov
add
mov
aas
gs
cmp
popf
push
mov
inc
jns
jmp
inc
sbb
mov
push
xor
sub
mov
jb
push
xlat
xchg
and
cltd
fsubs
xorl
dec
std
adc
xchg
jge
cli
inc
lds
lcall
cmc
mov
ss
and
dec
popa
add
mov
jno
add
pop
repz
insb
cmp
mov
cmp
sub
leave
add
insb
xchg
decb
cmp
call
fiadds
dec
lcall
fs
inc
shlb
push
jp
repz
xor
lods
roll
into
loopne
mov
rcll
jp
das
imul
add
js
xor
or
xchg
or
sub
sbb
inc
jb
and
js
push
cmpsb
inc
enter
aad
xor
ljmp
call
and
push
int3
mov
out
xchg
cltd
cmp
rorl
add
and
test
pop
sbb
daa
dec
popa
push
fs
jae
mov
adc
xchg
clc
mov
stos
inc
mov
std
mov
shrl
hlt
aaa
mov
push
or
jns
xchg
push
lds
inc
sbb
mov
shlb
pop
dec
adc
mov
subb
out
mov
pop
xchg
shrl
pop
jne
xor
mov
lret
scas
test
mov
sub
mov
call
arpl
movsb
lret
or
add
jb
jne
arpl
jg
scas
ficompl
popa
rclb
add
xchg
cs
insl
or
mov
mov
push
sbb
and
sbb
pop
std
xor
in
add
xchg
cmp
enter
rcll
scas
mov
lock
mov
push
dec
xchg
nop
and
loop
jo
imul
cmc
lret
mov
add
and
mov
rclb
add
inc
dec
dec
ret
pusha
pushf
aad
and
out
clc
notl
lcall
out
orb
dec
aad
pop
pop
lds
and
inc
pushf
sbb
cmp
dec
mov
add
push
pop
cmp
jmp
add
adc
cmp
mov
ret
push
dec
sub
movl
std
sbb
fwait
orl
data16
jmp
mov
sti
dec
data16
mov
mov
mov
adc
daa
mov
loope
cmp
addr16
push
sub
stc
ljmp
inc
sahf
push
mov
jae
jnp
jno
into
aam
dec
fistpll
in
xchg
jge
jmp
out
pop
je
lds
loope
inc
xorl
leave
mov
int3
jo
dec
xor
daa
fidivs
xchg
scas
loopne
cli
mov
add
loope
push
push
int
pop
and
or
add
bnd
dec
ds
mov
ficompl
loopne
and
rorl
xchg
scas
sahf
jbe
pop
pop
inc
ljmp
inc
and
sbb
arpl
dec
ja
sarb
xor
lcall
int3
xlat
test
hlt
dec
sub
mov
dec
fiaddl
xchg
icebp
mov
addr16
mov
movsb
mov
ljmp
fsubl
or
inc
scas
push
adc
clc
adc
lds
cwtl
xor
stc
mov
sub
mov
add
test
repz
roll
imul
xor
add
push
ljmp
sbb
push
push
shll
fisttpll
sub
mov
mov
cmp
leave
sbb
js
in
movsb
push
cwtl
arpl
cmp
pop
push
sbb
insb
lar
sbb
rclb
addr16
push
loop
dec
sbb
xchg
sbb
add
bound
jns
popa
movsl
mov
xchg
fcoms
int3
or
loop
in
cli
in
mov
dec
loop
cmpsl
jns
inc
loopne
cltd
popf
mov
or
push
fcmovne
mov
sub
sbb
cmpsb
clc
xchg
stc
pop
xchg
popf
xchg
repnz
les
enter
fs
call
mov
cmc
xor
push
inc
fildll
adc
jnp
or
shll
or
mov
insb
adc
rorl
dec
jle
in
int
outsl
inc
jle
cmpsl
cmpsl
mov
xchg
jae
je
or
stc
jle
xchg
and
push
call
nopl
lods
or
lods
lods
inc
inc
sbb
sub
lret
add
cmp
lods
sbb
lock
std
jae
xchg
mov
mov
xorb
push
mov
sarb
mul
sbb
lods
and
and
fwait
jbe
subl
xchg
jo
scas
pop
repz
stc
call
fstl
or
and
cld
outsb
idivb
add
movsb
mov
sub
filds
fcomps
push
cs
push
seto
and
mov
mov
cmp
in
push
aas
test
shl
lods
fsubrl
sti
ret
pop
rorb
fwait
in
adc
outsw
arpl
cmp
scas
pop
xlat
imul
and
das
sub
adc
sbb
cwtl
push
or
mov
pop
xor
xchg
and
jmp
cmp
out
add
mov
mov
or
mov
cmpsb
cmp
inc
lds
xchg
insl
dec
sub
xor
cmp
div
ret
dec
and
inc
push
das
cmp
pop
mov
out
adc
pop
test
movsl
xor
fwait
mov
mov
mov
mov
or
repz
scas
fwait
sbb
test
fistpl
cmp
lret
sub
push
lcall
addr16
mov
sbbb
xchg
jns
inc
out
aam
cld
je
imul
outsl
or
fstl
out
scas
ret
ret
or
or
fidivrl
jge
les
pop
pop
cmp
cmp
mov
jg
mov
shrb
add
sbb
je
out
mov
jge
or
les
jb
cmp
mov
xchg
dec
outsl
mov
or
imul
or
dec
arpl
mov
inc
hlt
push
mov
mov
ret
adc
lock
mov
aad
sbb
jmp
ja
fnstsw
mov
test
xorb
dec
test
lret
in
add
adc
ret
mov
or
and
adc
cmp
jmp
mov
sub
add
sbb
testb
xchg
or
xchg
xchg
sub
mov
out
js
in
cmpsl
stos
mov
std
les
loope
mov
mov
adc
leave
addr16
cmp
sub
cs
adc
or
xchg
testl
cwtl
fidivrl
decb
cmp
sbb
or
jg
add
mov
mov
dec
xchg
fbstp
adc
fdivp
adc
stos
push
lods
xor
lds
dec
and
stos
push
arpl
fbld
in
inc
cmpsl
add
pop
xchg
pop
pop
out
inc
mov
jg
out
arpl
stos
addb
sarb
and
mulb
push
sahf
out
sub
cmp
test
cmpsb
lret
pushl
push
cwtl
mov
insl
dec
out
fistpll
jecxz
orb
push
fsubrl
imul
xchg
mov
ret
dec
into
mov
dec
movmskps
cmp
enter
adc
cmovs
ret
outsb
xchg
jbe
sbb
cmpsb
inc
addr16
les
mov
inc
pop
testb
adc
jmp
in
xchg
data16
ss
push
dec
loopne
push
mov
mov
fwait
and
mov
cmc
pusha
mov
stos
cs
jecxz
fs
aas
arpl
add
repz
aas
daa
test
jg
lret
dec
mov
push
push
or
mov
sub
pushf
sbb
loop
pop
test
jo
and
cmp
xor
imul
jmp
iret
mov
mov
nop
ret
loop
sub
es
outsl
mov
enter
xchg
cmpsl
subl
mov
imull
call
inc
mov
andl
mov
jnp
adc
fisttps
dec
adc
bound
popf
adc
mov
xlat
es
out
sbb
xor
push
mov
cltd
jl
push
jecxz
stc
into
or
xchg
rcrb
iret
xor
inc
adcl
mov
lods
adc
mov
cltd
sbb
jb
shll
sub
jmp
cwtl
lcall
scas
push
cld
push
fisttps
push
adc
mov
push
inc
mov
push
xlat
push
roll
addr16
icebp
mov
fadds
iret
aaa
sub
ret
mov
call
jle
pop
dec
push
xchg
test
cmpsb
xchg
mov
pop
jnp
mov
xchg
inc
std
sub
out
lret
jecxz
or
inc
pop
push
and
out
movsl
lcall
xor
in
mov
mov
movsb
push
add
test
adc
insb
pop
or
sarb
sub
adcb
call
das
push
lcall
in
or
xchg
mov
pop
push
push
adc
loopne
stos
shrb
or
shrb
push
dec
icebp
xlat
add
insl
hlt
stc
push
xor
xor
mov
dec
push
clc
mov
push
iret
push
fdivs
xor
sbb
xchg
into
test
adc
push
sub
xchg
stos
lret
dec
xor
push
cs
add
cmpsb
and
js
and
imul
gs
push
addr16
out
int3
addl
sub
cmp
aad
out
mov
jne
rclb
sbb
leave
sub
out
pop
pop
xchg
jmp
movsl
pushf
jo
addr16
or
daa
out
jbe
imul
jge
call
test
mov
ficoml
or
cmc
inc
rclb
inc
fmull
pop
rorb
imull
cmp
ret
insb
lea
adc
repz
xlat
dec
int3
in
xchg
jge
dec
xchg
in
cmp
out
adc
lcall
pop
lret
fcmovnu
inc
xor
in
inc
fstps
lds
jle
mov
push
inc
inc
and
mov
xchg
xor
out
pop
fstpt
cmp
xor
sahf
scas
mov
adc
adc
loopne
xchg
add
cmpsb
xlat
iret
cmpsl
mov
out
sbb
pop
daa
daa
stos
xchg
mov
pop
sbb
cld
mov
or
xchg
push
cmp
pop
mov
mov
adc
xchg
mov
pop
cmp
cld
pop
jmp
mov
push
cld
dec
movsl
mov
pop
dec
xchg
repnz
mov
rorb
popf
pop
mov
lock
cli
and
push
add
call
pusha
add
or
jg
mov
pop
sbb
es
dec
mov
andb
inc
cmp
in
pop
hlt
mov
ret
mov
jnp
cmpsl
lock
dec
mov
ljmp
fstl
test
ret
inc
mov
jle
xor
dec
mov
cmp
inc
test
mov
mov
call
in
mov
ja
jo
addl
or
xchg
mov
addr16
xchg
jmp
push
mov
or
adc
xchg
loop
test
adc
into
pop
data16
in
loop
fnstenv
cmpsb
fsts
inc
iret
cwtl
out
mov
dec
pushf
mov
test
jp
arpl
push
and
push
testb
jae
lds
clc
testl
jo
inc
add
cwtl
inc
movsl
frstor
add
jle
push
imul
push
jae
out
movsl
testl
ficoms
jns
fmulp
jo
stos
scas
pusha
xlat
mull
sub
int3
inc
loopne
and
movsb
pop
and
mov
fadds
push
jno
fldenv
pop
sti
xchg
sbb
pop
insl
in
lcall
inc
mov
ljmp
repnz
cmp
loope
sbb
adc
pause
sbb
push
mov
sbb
roll
das
push
les
xorl
aaa
scas
out
std
or
mov
imul
sarb
pop
jl
inc
xor
mov
adc
inc
dec
cmp
jne
mov
stos
mov
mov
push
in
lahf
mov
pop
sub
xchg
pop
and
and
fistps
test
jge
stos
pop
lds
mov
push
das
lret
dec
sub
push
cmp
sbb
cmp
insl
data16
stos
adc
insb
xchg
or
cmc
je
xor
jle
mov
sbb
push
mov
xchg
mov
rcrb
lea
and
cmp
aas
ret
mov
cmp
loopne
xchg
dec
sbb
mov
stos
or
cmc
test
stos
lret
imul
loop
repnz
test
enter
sbb
mov
mov
jle
inc
mov
sarb
sahf
sub
inc
jcxz
dec
es
pop
insb
jo
mov
jno
push
mov
or
hlt
lcall
ja
mov
movsb
imul
ret
cld
mov
rolb
sbb
xchg
sub
xlat
dec
push
xor
cltd
rcr
cmp
shlb
pop
aas
inc
out
das
icebp
and
inc
fimuls
ja
jns
push
test
pop
dec
mov
mov
mov
movsb
cmp
loope
jne
inc
adc
test
fwait
ljmp
adc
add
ja
xor
xchg
xchg
adc
popa
stos
pop
inc
loope
push
pop
push
xchg
xchg
jmp
push
or
jne
mov
and
xlat
fsubr
imul
test
sti
pop
lds
jae
sahf
popf
xchg
cmp
outsl
bnd
adc
aam
or
push
add
mov
cwtl
aam
ds
lahf
ljmp
notb
cmp
imul
jle
fbld
lods
adc
in
cwtl
hlt
popa
nop
or
xchg
sub
scas
stos
out
lret
or
aad
int
push
or
cwtl
inc
je
stc
orl
mov
icebp
adc
push
loopne
movups
jnp
cmpsl
cld
ret
test
call
cmp
gs
push
nop
mov
clc
fdivs
stos
jnp
aam
jbe
add
sbb
ret
pop
dec
push
fbld
sarb
loopne
loope
rorb
inc
icebp
dec
stc
jne
sub
add
jl
and
adc
repnz
and
cmp
test
stos
or
mov
dec
aam
mov
fistpl
dec
jg
sub
mov
lea
insl
push
or
adc
lret
fadds
inc
pop
out
sar
call
sub
cmpl
jae
int3
xchg
xor
jns
or
push
fdivl
imul
fldl
sub
in
and
jl
mov
mov
dec
imul
repz
ja
lcall
sbb
fmuls
daa
mov
lds
mov
mov
xchg
adc
pop
xor
paddusb
xchg
add
xchg
mov
inc
mov
pop
je
fwait
push
push
cld
icebp
or
insb
stos
pop
loope
or
push
leave
sub
xorl
int
pop
arpl
loopne
pop
sbb
mov
pop
xchg
std
push
add
cli
jne
mov
cwtl
popf
out
inc
fistpll
inc
inc
mov
lahf
fimull
sub
testb
inc
subl
popf
add
push
pusha
mov
inc
in
xchg
icebp
pop
fdivrp
add
xor
xor
sti
inc
cltd
js
jbe
jae
or
mov
pushf
in
cmpl
pushf
andl
cmp
daa
jno
outsb
test
push
add
stos
jp
rol
mov
add
adc
jecxz
scas
push
lcall
stos
fnstcw
ljmp
shlb
cmp
lcall
jnp
jns
jecxz
sub
mov
and
or
enter
pop
or
jle
push
outsl
or
mov
sbb
jecxz
cmpb
insb
inc
xchg
movsb
cli
es
inc
adc
repnz
pop
xor
jne
dec
add
ljmp
loope
arpl
and
sahf
xor
movsl
idivl
cmp
jge
cmp
jge
pop
or
push
push
and
mov
sahf
pop
mov
xchg
add
scas
dec
lods
lock
mov
adc
stc
xor
js
pusha
mov
push
sub
jae,pn
cmpsl
jg
add
js
add
je
mov
mov
jne
idivl
pop
push
clc
cwtl
inc
repz
jae
sbb
push
xor
inc
jmp
dec
lcall
push
out
lcall
movsl
add
inc
orl
std
inc
inc
notb
hlt
leave
cltd
lock
movsb
fimull
and
xchg
xchg
push
mov
icebp
fwait
std
or
stc
pop
push
int
cmpsb
mov
leave
sbb
lock
sbbb
and
hlt
adc
in
push
inc
inc
out
inc
mov
in
and
les
fs
fs
lods
imul
or
arpl
xor
mov
cld
aam
nop
pop
xchg
lock
iret
notb
fstpl
add
add
push
pushf
imul
mov
xor
mov
in
andl
repnz
stc
sbb
out
adc
inc
dec
lds
sub
es
lret
mov
or
movsb
pop
repz
mov
adc
insl
xchg
mov
adc
dec
and
roll
or
jb
or
lret
cmp
mov
icebp
cmpsb
bound
fistpl
aam
sarl
js
inc
std
xor
pusha
or
mov
jecxz
jp
outsl
xchg
std
stc
mov
add
cmp
dec
dec
xlat
xor
loopne
aad
fwait
sub
mov
and
push
scas
xchg
push
lods
ret
inc
data16
test
mov
les
adc
push
nopl
inc
ss
lea
push
pop
pop
jnp
daa
movb
inc
pushfw
sub
sbb
mov
sbb
pushf
imul
fcoml
xchg
out
push
cli
mov
lods
cmp
dec
addr16
nop
mov
das
pop
mov
ljmp
mov
xchg
mov
cmpsl
aas
push
pop
fwait
push
inc
rol
lock
sbb
mov
dec
adc
fstl
mov
addl
das
loopne
filds
iret
test
jno
sbb
fldl
popf
outsb
and
mov
scas
es
ficompl
nop
jl
xor
nop
lods
pop
push
jl
nop
mov
xorb
lods
insl
pop
test
test
stos
jnp
cmp
repnz
jnp
xchg
test
ljmp
mov
fdivrs
popf
push
jno
push
fwait
lea
inc
add
sbb
jge
jl
sbb
push
pop
push
xchg
jmp
push
jnp
fstpt
or
or
jp
fucom
cmp
cs
sbb
lret
psraw
sbb
data16
insl
js
adc
and
or
aam
mov
sub
and
mov
in
mov
pop
and
adc
cld
jae
lock
ds
in
dec
cmpsb
insb
and
or
sbb
outsl
dec
add
inc
fbstp
ret
jp
nop
aas
push
adc
push
xchg
test
je
mov
xchg
bound
jg
ret
test
xor
and
dec
push
aam
js
outsb
mov
js
jl
mov
loope
mov
imul
bound
shlb
sub
cmpsb
incb
pop
adc
or
inc
cmp
jns
rorb
sahf
sub
fisubs
mov
ljmp
ja
jmp
out
jp
xchg
mov
adc
sbb
addl
insl
test
sbb
xchg
mov
popa
lods
cmpsl
mov
arpl
adc
ficoms
mov
idivl
es
jmp
fcoml
rol
mov
out
in
aam
repz
pop
pop
mov
jne
imul
ljmp
insl
mov
ja
push
push
mov
push
lea
cld
jns
mov
push
cmp
jnp
xchg
inc
jl
or
jle
data16
cmp
inc
and
mov
repnz
jmp
imul
insl
imul
xor
sahf
lods
mov
xor
mov
int3
lods
add
clc
cmp
pop
and
adc
push
sbb
sbb
fistps
das
mov
jb
push
jnp
xchg
repz
js
jbe
xor
pushf
adc
lds
mov
dec
pop
cmp
mov
in
or
or
gs
pop
cmp
xor
divb
dec
mov
add
lea
dec
mov
andb
push
xchg
leave
cmp
scas
out
xor
int
add
loopne
inc
inc
fcmovu
cmpsb
pop
or
and
add
push
adc
xor
add
sbbb
out
xlat
scas
cmc
add
adc
scas
push
sbb
loopne
push
adc
or
sub
sub
aad
mov
js
and
pop
int3
ljmp
xchg
add
out
jp
jecxz
fdivr
je
inc
dec
lock
or
push
mov
adcl
and
push
push
pop
and
jl
or
rorb
test
push
sbb
xchg
popa
and
and
jecxz
mov
inc
xchg
fistpll
xchg
out
stc
pop
popf
sub
outsl
repnz
repz
jne
rcrl
ja
mov
cmp
mov
pusha
pop
mov
inc
push
push
jo
jp
dec
shll
inc
shll
cmpl
push
fcmovb
cmc
out
inc
mov
popf
or
call
cld
je
mov
pop
shl
xchg
inc
push
mov
out
repnz
or
push
orl
xlat
in
pop
xchg
movsb
rcl
mov
jb
adc
jle
push
repz
out
jg
and
ds
aas
incl
xor
fbstp
ret
pop
lock
mov
sbb
pop
push
cmc
iret
loop
movb
push
inc
mov
icebp
popa
lods
or
stos
popf
mov
pop
cmp
arpl
out
andb
adc
mov
into
loop
xchg
out
mov
stos
mov
dec
push
inc
and
fidivs
data16
nop
scas
jge
add
xchg
movsl
ds
outsb
jmp
pop
loopne
mov
movb
adc
add
push
icebp
push
xchg
jl
cmp
imul
scas
ja
test
insl
jns
movl
test
sbb
and
add
rcrl
sub
mov
cmp
or
scas
sbb
daa
mov
fildll
nop
sub
cld
les
jo
out
xor
mov
mov
jge
xor
xchg
mov
push
sbb
inc
dec
xchg
push
sub
mov
xor
add
cs
cmpsl
push
mov
push
push
scas
xor
push
cwtl
clc
mov
dec
adc
fsts
fmulp
jp
pusha
std
repz
stos
xchg
sti
cmc
es
call
mov
adc
xor
test
jae
push
xchg
pushf
or
mulb
jge
mov
push
or
add
aas
add
sbb
mov
cltd
dec
pop
inc
push
sbb
rcrb
test
dec
ret
lea
xchg
imul
aad
push
pop
hlt
or
shufps
adc
sbb
out
mov
addr16
sub
in
popa
mov
and
mov
jecxz
push
imul
mov
push
xchg
imul
jecxz
lret
inc
cmp
push
addb
in
push
movsl
dec
adc
mov
mov
dec
ret
mov
dec
and
ret
sub
das
fadds
and
sub
mov
and
outsb
add
adc
imul
decl
hlt
add
xchg
jecxz
dec
pop
ret
dec
in
sahf
je
pop
add
lods
add
dec
pop
popf
add
add
push
scas
rorb
jno
sub
push
mov
mov
insl
ficoms
repnz
mov
movsl
cli
test
mov
sbb
and
mov
mov
sub
out
jg
add
push
fildll
or
mov
aas
filds
push
or
movsb
testb
mov
xchg
ss
popf
loopne
aas
ret
mov
out
sub
enter
mov
iret
mov
xor
add
ja
mov
inc
mov
mov
mov
imul
repz
mov
fcmovbe
dec
push
mov
jae
into
or
mov
mov
clc
bound
adc
fstpl
jmp
add
cmp
es
sub
push
add
and
mov
inc
cmc
roll
int3
jmp
mov
jp
sbb
std
push
inc
pop
loop
cmp
pop
push
mov
test
mov
xor
mov
out
ret
outsb
popf
lret
daa
icebp
iret
leave
cmpsb
loopne
andl
mov
add
scas
or
shrl
cmp
insl
test
pop
shrl
adc
pushf
cltd
out
aam
xchg
jl
lock
mov
mov
sbb
je
ljmp
push
cmc
movq
dec
fstl
stc
cmpsl
mov
push
push
sahf
push
outsl
pop
icebp
push
fwait
notb
dec
adc
xchg
fsubrs
mov
mov
dec
shlb
xor
stos
adc
mov
lods
pop
sbb
dec
or
das
aad
dec
lahf
es
lcall
negl
mov
lret
jg
sub
incl
cmc
jno
mov
cltd
enter
xor
mov
adc
in
out
xor
lea
jecxz
cmpsb
add
dec
div
jae
jl
add
jnp
mov
xor
adc
cmpsb
and
clc
fs
outsl
lret
inc
mov
mov
cmpsl
test
sub
rcrb
sbbb
test
xor
lret
sub
movsl
aam
stos
mov
mov
lea
das
int3
dec
lods
fimull
cld
adc
lods
mov
xor
add
in
inc
push
out
popa
xchg
sub
out
cmp
adc
lods
lcall
mov
jle
aas
std
lods
pusha
or
stos
pop
ficompl
cmp
pop
adc
addr16
fsubl
adc
je
stos
inc
fiaddl
std
fidivs
fidivs
mov
pop
aas
mov
and
pop
rcrl
das
inc
mov
cmp
fs
xor
scas
dec
lock
int
lods
xchg
arpl
into
gs
out
je
outsl
mov
xor
repnz
push
dec
pop
insb
in
call
fwait
mov
mov
dec
lds
in
scas
or
pop
jns
dec
xchg
lds
ret
cmpsb
jecxz
in
cmp
push
std
icebp
mov
mov
cmp
sti
in
repz
movsl
sub
xor
dec
arpl
sbb
adc
mov
and
and
fisubl
in
scas
fwait
mov
xchg
inc
adc
cmp
pusha
lods
sbb
xor
push
pop
mov
mov
out
xchg
outsl
sub
js
xorb
jns
rorb
ret
dec
inc
cmpsl
xchg
loop
add
push
test
mov
xchg
dec
test
xchg
fimuls
test
inc
imul
dec
shll
cltd
jmp
push
sub
sbb
add
ds
mov
push
les
ret
and
or
mov
xchg
inc
icebp
ja
mov
out
xchg
sub
cmp
roll
fisttpl
and
out
cmpb
xor
outsl
jbe
cmpsl
xor
cmpsb
mov
out
das
jge
cmp
mov
loop
mov
jg
loope
add
pop
inc
mov
xor
dec
sbb
insl
rcrl
mov
xchg
jmp
adc
es
push
testb
outsb
push
push
sbbb
fsts
imul
inc
sti
mov
ret
ja
jle
inc
fwait
cwtl
adc
mov
lods
cltd
xchg
adc
push
loop
stos
cmc
fucom
loop
push
iret
into
rcl
sbb
inc
daa
mov
rclb
cmpsl
jb
in
or
mov
test
adc
xor
and
add
in
pop
outsl
inc
orl
mov
sbb
ror
dec
xchg
xchg
xor
xor
push
xor
outsl
jecxz
sbb
aas
ljmp
mov
mov
dec
add
push
or
call
fistpl
daa
xor
inc
jl
sti
xor
sarb
or
adc
pop
mov
mov
inc
push
aaa
test
xor
push
pop
sbb
mov
ret
xlat
dec
roll
xor
inc
adc
jge
push
lahf
jecxz
pop
shr
xchg
cwtl
and
mov
adc
stos
adc
mov
mov
inc
xor
lcall
adc
sarb
pop
mov
jmp
adc
inc
and
mov
pop
push
stos
push
leave
daa
pushf
mov
pop
lahf
test
mov
test
xchg
sub
pop
shlb
or
in
call
sub
jmp
adc
test
mov
jbe
idiv
pop
imul
insl
js
js
push
or
cmc
pop
or
inc
dec
dec
rcrl
roll
into
xchg
adc
filds
sub
adc
xor
lea
adc
into
enter
ret
cmp
loope
sbb
pop
jae
or
add
das
and
les
in
cs
and
push
std
pop
imul
lock
mov
cmpsl
add
popf
leave
push
std
pusha
test
shrb
popl
pop
mov
cwtl
call
push
add
xchg
mov
push
ret
test
pusha
enter
xchg
and
inc
movsb
std
and
mov
nop
mov
dec
add
mov
or
jns
rol
mov
test
push
inc
push
xchg
lret
cmp
xchg
mov
jge
mov
xor
shrl
sub
rclb
jbe
mov
mov
mov
adc
jge
scas
push
dec
scas
shlb
jo
jle
pop
aaa
call
xor
fsts
es
addr16
mov
out
add
jl
adc
ret
data16
push
pop
dec
lret
hlt
es
or
mov
xchg
mov
mov
pop
outsb
lea
jmp
sbb
jecxz
jmp
add
cwtl
rol
pop
cmpsb
cmp
pop
pop
loope
mov
fdivrl
push
pop
aad
inc
mov
sub
cmp
flds
cld
fcompl
xor
xchg
and
test
movsl
stos
daa
out
inc
cltd
cmp
or
std
xor
pop
adc
sbb
push
ret
add
clc
add
in
cmpl
mov
cmp
or
es
xor
cld
jae
inc
dec
add
jnp
inc
orb
aas
sahf
sti
test
push
mov
fsubp
cmp
cmp
les
dec
repnz
dec
cmp
int3
pop
push
sti
fstpt
nop
mov
ss
jno
daa
lret
clc
pusha
lock
and
mov
mul
aam
loop
pop
cmpb
push
mov
lds
pop
lock
pop
jp
inc
in
pop
mov
lret
jbe
loope
repz
outsb
xor
lret
sub
push
orl
fwait
test
mov
push
push
loop
jge
push
int3
jo
mov
cmpsb
push
inc
loope
ss
fucomi
pusha
mov
sbb
lcall
js
mov
mov
adc
sahf
xchg
std
mov
pusha
or
sbb
xchg
sbb
std
mov
and
dec
mov
pushf
mov
adc
xchg
stc
pop
arpl
popf
das
cwtl
inc
hlt
adc
enter
gs
cmpb
aas
xor
add
fcompl
cmpsb
lret
dec
rcl
sub
cmp
xchg
cmp
arpl
shl
jecxz
inc
push
mov
outsl
sbb
pop
sbb
lds
push
inc
inc
fistps
aaa
nop
movsb
test
sub
xor
adc
addr16
stc
fstl
in
int
out
sbbl
mov
sub
xor
mov
insb
mov
test
xlat
es
jge
pusha
daa
xchg
dec
dec
stos
fcoms
jge
hlt
fldl
addl
xchg
lods
pop
out
adc
stos
fldl
inc
jne
cmpsb
push
int
xchg
ret
hlt
xchg
ror
aam
jnp
xchg
xchg
xlat
adc
enter
int
je
popf
adc
xchg
pushf
xor
mov
mov
adc
lahf
call
lea
pop
icebp
lods
xchg
adc
rorb
sbb
pop
jmp
arpl
adc
push
ror
sub
mov
mov
pop
sbb
add
inc
dec
aas
mov
movsl
dec
fdivrl
out
jge
jmp
or
adc
mov
loopne
jbe
mov
jecxz
push
jle
out
out
loop
out
dec
mov
cli
xor
cmp
stos
xchg
repz
xor
icebp
iret
sub
rorb
or
push
dec
cmp
mov
aad
jmp
push
popa
mov
xchg
sbb
lret
arpl
loopne
stc
in
pop
dec
add
cmpsl
jmp
pop
xchg
xchg
dec
out
pop
fidivrl
cs
test
mov
outsl
loope
aas
mov
out
addl
sub
lds
cmp
insl
jmp
scas
xchg
mov
pop
inc
cmp
pop
pop
adc
sahf
xor
nop
aaa
jg
or
mov
jb
sub
popf
mov
cmp
jecxz
push
sub
ljmp
fs
loope
dec
movsl
lods
mov
mov
mov
int
ret
cmp
and
jecxz
lods
xchg
dec
pop
inc
push
lret
or
mov
mov
lods
add
pusha
lret
mov
lds
aam
xor
and
mov
scas
adc
outsb
inc
into
mov
jne
push
cmp
and
lods
rolb
in
leave
dec
jl
imul
xor
jecxz
and
imulb
ret
and
ljmp
inc
xor
xchg
mov
and
test
push
inc
cmc
xchg
pop
sub
loop
clc
add
cmpb
push
sarb
jmp
les
sub
inc
repnz
mov
iret
dec
xor
iret
in
cltd
bound
scas
fwait
idivb
jbe
in
mov
test
mov
sahf
adc
divl
jo
jle
rclb
xor
fdiv
and
jecxz
pop
std
jecxz
dec
jle
or
inc
fcmovne
iret
mov
pop
enter
in
movsl
in
loope
sub
mov
push
pop
cmp
enter
fcmovnb
out
inc
xchg
push
adc
cltd
dec
fnsave
imul
jp
enter
sub
jo
add
cld
sbb
insl
mov
lret
mov
cld
popa
test
mov
push
push
out
dec
pop
xor
insl
xor
shl
sub
xorb
sbb
inc
cmc
outsb
jp
cld
clc
push
mov
cmp
insl
xor
pop
adc
cmp
test
stc
fadds
adc
jns
adc
mov
test
add
jne
push
pusha
pop
scas
std
cmp
add
iret
pop
and
lahf
sub
sub
jb
jecxz
add
sbb
mov
mov
add
cmp
mov
gs
ss
imul
mov
sub
jl
cmp
pop
push
mov
leave
or
jne
fcomi
mov
dec
sbb
jl
pop
bound
push
xchg
xor
xchg
inc
in
sti
sbb
sbb
and
add
lds
push
repz
or
ficoms
xchg
cmp
pop
mov
mov
xchg
or
mov
mov
mov
sti
and
pop
xor
mov
adc
push
out
push
lods
sub
dec
int
fidivrl
mov
in
or
xlat
insb
add
pop
pop
xchg
push
loopne
rcll
push
pop
add
xchg
cmp
lret
mov
jnp
pusha
rcl
xor
fs
fistpll
andb
jae
incl
subb
ret
inc
sub
dec
popa
sbb
lds
cmp
popf
jno
inc
xchg
shll
lret
and
xlat
mov
ljmp
mov
push
adc
cltd
idivb
adc
xchg
push
je
dec
sbb
out
fwait
out
inc
rorl
cmp
js
cwtl
aas
aaa
imul
mov
adc
jbe
push
xchg
imul
scas
xor
mov
jae
loopne
jmp
lds
je
sbb
inc
sbb
lahf
fwait
out
fucomp
fisubs
mov
xchg
mov
mov
out
in
popa
add
sahf
xchg
into
jg
xor
push
ds
mov
pushf
in
popa
inc
sub
push
daa
lods
sbb
push
add
cli
pop
aas
lahf
sahf
jnp
jecxz
jne
pop
aam
bound
inc
add
outsl
addr16
mov
xchg
jnp
jno
aaa
inc
sub
jb
cmpsb
jno
and
push
push
or
ja
xchg
outsl
jb
jmp
cmp
sahf
test
mov
ljmp
rep
dec
jo
xchg
push
xchg
out
aaa
inc
addr16
inc
cmpsb
sub
arpl
pop
cltd
ficoml
or
cmpsl
adc
ror
jae
out
and
mov
in
negl
push
stos
pop
xchg
fisubrs
test
sbb
dec
push
scas
xor
sub
sub
pushf
sarb
andb
bound
icebp
roll
inc
cmpsb
js
cmp
in
mov
cmp
insb
add
mov
pop
pop
in
xor
cmp
and
mov
push
int3
loop
mov
and
pop
xor
jnp
mov
mov
mov
sub
rolb
out
stos
sbb
rclb
adcl
data16
test
rcrl
sar
sahf
aam
xlat
jge
jbe
xchg
shlb
in
jne
nop
imul
lahf
pusha
mov
jmp
mov
hlt
ret
std
outsb
pop
inc
xchg
adc
adc
push
push
nop
mov
inc
jecxz
fnstenv
test
mov
inc
les
dec
add
ljmp
iret
stos
xor
jo
ja
sahf
loop
gs
mov
lcall
popf
mov
in
rorl
jge
push
leave
or
sub
imul
add
xlat
sub
loope
ja
push
iret
int3
int
inc
test
push
outsl
xchg
adc
das
inc
xchg
cmp
sub
cmp
test
jns
mov
fadd
nop
adc
adc
lcall
testb
je
mov
imul
mov
sub
arpl
arpl
arpl
out
inc
mov
cmp
jnp
test
iret
lret
lods
mov
stos
push
mov
rolb
in
pop
or
leave
cmp
pop
out
lahf
fidivl
into
leave
ret
inc
add
push
ljmp
mov
push
jp
mov
pusha
enter
ljmp
test
push
jbe
xchg
mov
dec
sahf
adc
arpl
lock
outsl
add
clc
jne
mov
aas
adc
or
xchg
js
jl
push
xor
cmp
insl
push
arpl
mov
fisubrl
push
adc
jns
xor
leave
test
shll
mov
gs
cmp
jecxz
mov
lods
ljmp
ds
cwtl
data16
jl
shlb
xorb
clc
mov
leave
xchg
movsl
mov
bound
fstps
mov
mov
or
mov
sub
dec
movsb
jmp
jmp
add
insl
adc
das
jl
out
mov
rclb
sbb
or
add
dec
sub
cmc
imul
mov
inc
enter
push
pop
jns
xchg
loopne
pushf
cmp
sbb
cmpsb
sub
cli
sti
and
jnp
mov
mov
adc
adc
gs
cmp
or
mov
call
cmp
lret
dec
arpl
fucom
or
fimull
jns
loop
outsb
test
int
repz
jl
mov
push
sbb
fdivrs
sub
pop
mov
aas
cmc
pushf
jns
xchg
rcrl
sbb
sub
inc
and
dec
adc
rcr
arpl
cmpsl
jp
out
and
mov
icebp
mov
std
xchg
jecxz
aaa
or
push
jbe
sub
inc
outsb
movsl
mov
mov
mov
and
dec
add
bound
mov
lods
scas
arpl
sbb
scas
enter
inc
pop
xor
dec
push
inc
imul
add
jg
lods
push
mov
xchg
fmuls
fimull
dec
ret
gs
test
mov
add
in
orb
inc
hlt
roll
mov
iret
orl
mov
pop
xchg
cs
sbbl
icebp
sbb
mov
sbb
jno
pop
jg
sub
sarl
mov
shlb
cmp
adc
cmp
repz
mov
fisttps
cmp
pop
push
lret
xchg
cmc
jnp
ret
sub
push
cmp
cmp
push
clc
mull
add
loop
fwait
add
and
sbb
mov
sub
sahf
push
xchg
mov
arpl
inc
cmpl
ret
mov
mov
sub
xor
jl
je
cli
push
cli
mov
dec
jns
dec
mov
js
push
mov
mov
jne
aam
repz
add
ret
gs
shlb
jmp
fs
push
aas
and
loopne
mov
sub
xor
out
push
adc
stos
mov
ljmp
ss
imul
and
gs
sti
call
pop
inc
cmp
shrl
dec
imul
int3
jg
das
sub
adc
mov
fcomip
jl
dec
sub
ljmp
or
aaa
cmp
je
pop
sar
jo
mov
jmp
add
push
cltd
mov
lcall
jp
andl
mov
pop
mov
js
addr16
leave
ljmp
mov
ds
push
push
xor
cmp
or
jnp
pop
mov
imul
sbb
movsb
int3
jbe
sbb
dec
jbe
test
dec
xor
jle
in
js
pusha
and
and
arpl
sub
pop
out
xor
push
adc
pusha
rcr
filds
cli
daa
jge
pop
dec
sbb
jbe
jbe
cmpsb
pop
in
sbb
imul
inc
imul
lea
loopne
mov
pop
fstpt
gs
out
cltd
fbstp
jae
pop
jg
out
ss
int
inc
repnz
fmuls
add
mov
xchg
xlat
ljmp
adc
das
std
cmc
jns
jle
xor
mov
mov
mov
pop
ss
sti
lods
and
int3
ds
mov
insl
pop
cld
cmp
xor
fildll
push
in
xchg
mov
icebp
sbb
add
jae
xor
stc
sbb
pop
xchg
mov
arpl
rcll
jg
xchg
movsb
sub
add
add
hlt
jae
jecxz
xchg
or
fcompl
aaa
push
outsb
lods
jmp
pop
fidivl
fs
ficoms
andb
inc
loope
fisttpll
pop
addl
and
popf
push
mov
jge
inc
daa
jmp
push
loop
xor
clc
add
outsb
push
adc
sbb
lods
or
sbb
xchg
andl
stos
cmc
cmpsl
jg
pop
or
stos
inc
mov
add
add
mov
fdivs
pushf
cmpl
pop
pop
movsb
test
sub
mov
rorb
xchg
jne
mov
or
sub
aam
jmp
adc
repz
mov
mov
cmp
dec
push
test
call
fs
xchg
mov
mov
inc
mov
xchg
pop
loop
daa
add
cli
dec
push
ror
xchg
jo
adc
push
mov
push
cmpsl
scas
or
pop
mov
sub
stos
adc
xor
movsl
xchg
pop
stc
pop
lock
rcrl
or
pop
insl
pop
fistl
out
stc
je
out
mov
or
mov
and
xchg
sbb
dec
jmp
test
jecxz
cvttps2pi
sti
jecxz
jle
push
mov
push
sar
sahf
mov
lahf
jle
jmp
mov
dec
lret
loop
hlt
xchg
lret
add
out
movsl
cmp
sub
xor
movsb
sbb
int
adc
fists
jg
cltd
fsubrs
jmp
inc
decl
xor
push
in
xor
mov
adc
sti
mov
lea
xchg
or
adc
xor
pusha
sub
push
add
mov
xlat
mov
push
mov
loope
negl
jl
xchg
cmp
cmc
xchg
cmpsl
dec
xchg
add
adc
jmp
js
je
incb
adc
repz
sub
rcr
xchg
pop
xor
adc
lret
sub
lods
ret
inc
or
and
mov
test
inc
mov
js
pop
mov
pop
pop
sub
sub
out
shl
xorl
pop
adc
adc
sub
lods
pop
push
pop
jmp
or
adc
addb
mov
insb
jno
repz
subl
fsubl
sahf
and
mov
cmp
es
stos
repnz
inc
ss
sub
pushl
insl
cmp
dec
pop
dec
or
out
xor
idivl
cmp
xlat
push
subl
scas
das
call
aam
je
xor
adc
mov
shll
aad
mov
cs
out
xchg
je
mov
imulb
jns
mov
mov
and
cmp
loop
sub
jp
lods
dec
add
push
mov
lods
fisubrs
push
and
lock
lods
fucom
je
jg
xchg
mov
jns
out
sub
pop
jl
cmp
out
adc
aam
nop
daa
mov
insb
xchg
pop
mov
repnz
xor
pop
adc
lcall
xchg
sbb
aam
fimull
sar
push
mov
mov
jo
or
in
mov
jnp
mov
xor
dec
iret
scas
in
fcmovnu
nop
inc
or
ftst
inc
decl
jns
cmpsl
scas
addr16
enter
popf
scas
sub
mov
imul
push
inc
adc
loopne
xor
adc
lret
insl
aas
dec
push
les
inc
call
cwtl
frstor
bound
jns
andl
add
bound
call
dec
cmpsb
pop
js
xchg
test
roll
pop
rolb
dec
push
cmp
lret
test
inc
out
ret
pop
pop
das
mov
scas
and
outsb
gs
mov
mov
lds
loope
lods
sbb
std
cmc
aad
cmp
rcl
and
sbb
mov
shl
mov
ja
popf
scas
push
cs
mov
mov
cld
xchg
fsubrs
stc
imul
xor
arpl
push
pusha
or
lods
out
mov
jmp
push
fcmovnu
shlb
bound
pop
enter
jns
sub
fildl
nop
stos
bound
xor
push
and
aad
adc
ja
add
leave
mov
lods
in
sbb
push
cs
xor
xor
or
sbb
scas
dec
fistps
dec
xor
fdivs
dec
mov
aad
xchg
push
fmull
stc
xor
ja
jge
jne
or
and
xlat
jne
pop
cmp
pop
pop
dec
popf
imul
sbb
sbb
sahf
movsb
pop
aaa
inc
xchg
lahf
adc
jge
sahf
mov
xchg
hlt
adc
pop
ljmp
test
cmp
les
and
fadd
js
and
leave
mov
cmpsl
ret
or
push
ret
movsb
test
lds
add
sub
or
push
adc
sub
out
iret
clc
enter
push
jno
icebp
push
sbb
imul
je
loop
lods
inc
lret
scas
cwtl
and
pop
mov
dec
aam
mov
mov
iret
add
add
js
sub
imul
sub
sti
adc
xchg
lea
or
sub
movsl
test
loop
add
subl
mov
sbb
aam
pop
sbb
cld
pop
cmpb
subl
test
dec
jl
stc
out
fwait
pop
adc
negl
cmp
add
jo
cld
out
lret
scas
ret
int3
dec
xchg
dec
je
xchg
pop
lcall
leave
aam
sub
imul
clc
ret
jge
fmulp
es
adc
cmp
sbb
movsl
jle
inc
rcrb
dec
scas
and
out
push
and
add
jecxz
pop
xor
subb
mov
scas
inc
test
adc
jle
pusha
cmp
push
out
stos
sub
nop
sub
lods
sbb
lcall
xlat
lods
xchg
or
mov
je
push
jle
mov
shrb
sti
cmp
or
or
call
pop
mov
mov
pop
imul
popl
lcall
push
aam
clc
popf
add
ret
je
sbb
scas
mov
and
iret
sub
je
fnstenv
rolb
dec
stos
enter
inc
movsb
jnp
inc
hlt
div
insb
dec
push
mov
sbb
add
test
cmc
inc
mov
ja
mov
pushf
rcrl
nop
sete
mov
dec
pop
xchg
lahf
aaa
xchg
or
sub
imulb
in
sub
stos
xor
xchg
adc
cmp
sahf
shll
mov
shrl
out
mov
lcall
dec
lock
inc
xchg
ja
mov
mov
pop
xchg
adc
sbb
push
sbb
rcll
pusha
or
shl
xchg
jge
push
mov
dec
xor
aam
pop
xchg
sub
jb
lods
stos
mov
inc
or
dec
daa
je
push
and
gs
test
int3
jmp
dec
mov
dec
leave
mov
sub
nop
in
iret
leave
sub
data16
cltd
aas
dec
mov
sahf
inc
enter
in
js
into
xor
pop
cmp
mov
std
cmp
add
insb
test
inc
mov
cld
psadbw
jmp
loopne
push
jp
enter
mov
mov
sbb
push
filds
popf
push
and
je
sub
fisubl
or
push
imul
mov
dec
mov
xor
movsl
jle
sti
and
mov
out
shll
jle
movl
out
rcrb
iret
xchg
add
mov
aam
xor
jne
int3
in
pop
mov
xchg
jbe
mov
or
push
and
fstps
push
xlat
pushf
cmp
in
stos
lds
mov
jge
movsb
scas
cmp
arpl
mov
jae
and
clc
adc
jno
cmpsl
xchg
inc
jns
jo
sub
mov
popa
enter
adc
inc
stos
movsl
inc
fcomps
mov
jns
xor
sbb
inc
xchg
dec
add
push
aad
movsb
push
fiadds
loopne
nop
sbb
cmp
insl
movsl
lock
mov
push
shlb
push
add
or
jo
push
fisubl
in
sub
push
test
and
shlb
fucomp
adc
es
lods
cmp
cmpsl
or
cmpsb
jl
data16
add
sbb
mov
fcomps
aad
fs
xchg
pop
push
jo
sub
jp
mov
loopne
cmp
cld
xor
arpl
bound
lcall
pop
or
pop
adc
cltd
xor
dec
sub
movsl
rcr
dec
sbb
je
leave
jnp
mov
pop
stos
or
aam
or
add
mov
or
stos
sbb
clc
rol
aam
fsubrl
in
sbb
addr16
popf
jb
or
mov
or
js
nop
inc
adcb
dec
xor
mov
and
clc
imul
stos
mov
cmp
xor
mov
add
rclb
or
scas
addb
bswap
jae
cmpsb
jno
sbb
out
into
and
lret
out
loopne
mov
xor
lods
out
mov
clc
addr16
cld
popf
popf
nop
dec
xchg
hlt
outsb
int3
pop
push
push
sbb
test
into
inc
repz
test
mov
sub
adcb
dec
dec
add
lahf
sub
mov
fists
shlb
mov
fsub
inc
lds
xor
outsl
in
insl
pushf
bound
subl
mov
mov
or
mov
adc
out
lcall
sbb
sbb
std
sub
loope
loopne
jbe
cld
sahf
pop
and
xchg
xchg
addr16
clc
stos
ja
pop
dec
push
xchg
dec
fimull
push
inc
sbb
aad
pmaddwd
jns
roll
xor
test
in
xor
pop
mov
cmp
outsl
movsb
clc
pop
mov
jns
sbb
or
frstor
inc
mov
xchg
sbb
xor
es
xchg
mov
fcmovbe
outsb
pop
loope
in
mov
les
aaa
mov
cld
mov
adc
mov
nop
mov
lahf
sbb
das
and
or
cmpsb
hlt
pop
or
inc
pop
and
addb
sub
in
mov
cli
cmpsl
or
mov
ja
icebp
and
cmp
sbbb
loop
push
popl
dec
mov
addb
push
dec
mov
mulb
pop
sahf
shrb
mov
out
jp
cmpsb
mov
or
xchg
and
idivb
scas
or
iret
fsubr
xor
es
xchg
cld
cs
dec
ret
cltd
and
mov
negb
ret
push
jo
mov
lods
loopne
je
stos
xor
std
pop
mov
mov
jno
mov
lahf
scas
cmp
fsubrl
xor
int3
xchg
add
sbb
cld
sti
sub
inc
lock
cmp
jmp
cmp
inc
cltd
out
insl
repnz
or
dec
fistpll
mov
adc
sbb
ja
inc
rclb
loope
xchg
mov
rol
mov
pushl
jae
cltd
jno
adc
ret
mov
pop
cmpsb
mov
sbb
push
aad
enter
adc
jl
sti
nop
inc
push
cmpsl
lds
sub
adc
pop
add
es
popa
rolb
sub
pop
aaa
outsb
xchg
lahf
dec
push
or
out
addr16
mov
cmp
into
idivl
adc
ret
or
push
cwtl
jl
inc
popf
push
adc
sbb
inc
lods
ficoml
outsb
loop
jecxz
jmp
aad
repnz
push
je
mov
ret
adc
and
dec
sti
icebp
cmp
dec
inc
data16
inc
and
pusha
xchg
xor
jbe
sbb
testb
and
mov
xor
lret
sbb
movsb
add
add
outsl
popf
out
outsl
jns
jg
sub
dec
lea
inc
loop
jl
mov
push
push
orb
inc
inc
mov
add
inc
fstpt
mov
cmp
or
sbb
lods
iret
insb
js
adc
adc
idivl
insb
dec
pop
mov
add
mov
test
and
sbb
sub
cmp
out
test
repz
mov
pop
es
loope
sub
or
lcall
insb
and
jns
out
push
pushf
inc
int
fadds
call
lods
inc
sti
or
xchg
pop
push
ds
add
stc
int
test
inc
subb
mov
add
sub
xchg
mov
stos
mov
mov
dec
fidivs
ja
cmp
aas
fbld
shlb
lock
mov
loop
inc
mov
cmpsl
and
xor
out
or
cmpl
scas
or
mov
mov
loopne
mov
jns
mov
testb
sar
faddp
iret
xor
dec
ficompl
dec
pop
mov
rorb
out
inc
mov
sbb
stc
shr
adc
adc
adc
sti
std
pusha
out
paddw
mov
push
aam
hlt
jne
push
pop
fimull
movsl
notb
lret
pop
mov
inc
cli
mov
inc
jo
ljmp
inc
push
fisttps
pop
ret
test
push
mov
add
ret
dec
xor
dec
mov
in
adc
clc
sbb
out
push
jle
stc
inc
fcmovnu
cmp
lret
mov
adc
cmc
fsts
add
cmp
and
mov
int
inc
sahf
stos
and
movsl
sub
stos
or
imul
loopne
in
psraw
sub
sbb
cmpsl
sub
imul
ja
dec
pop
outsb
mov
push
cld
loop
xchg
push
ret
pop
int
gs
xchg
dec
push
xor
xchg
mov
xchg
je
ljmp
sbb
cmc
sbb
popa
xor
imul
out
cmp
das
aam
inc
dec
mov
cmpsb
pop
push
pushf
cwtl
or
out
insb
xchg
cmpsl
xchg
in
add
pop
mov
xor
mov
mov
ljmp
push
and
jne
sarl
sahf
jecxz
mov
mov
pop
gs
sbb
cmpl
aam
add
dec
sbb
lods
repnz
jbe
loope
lds
clc
cmpsb
out
repz
mov
je
push
js
js
dec
mov
shufps
mov
loopne
ja
inc
ja
pop
mov
rcll
pop
add
cwtl
shlb
ds
add
cmp
push
push
jnp
add
leave
adc
sub
jp
jge
bound
out
inc
pop
cltd
xor
ds
addb
mov
push
xchg
stc
mov
in
ss
je
mov
sub
mov
mov
dec
pop
in
rolb
add
int3
xchg
fs
into
subl
add
mov
hlt
sbb
mov
mov
sti
jns
jmp
test
mov
movsl
cmp
in
push
sub
inc
jl
add
ret
adc
repnz
inc
lret
stos
xchg
and
popa
jg
and
mov
pusha
les
int3
cmpsl
push
clc
out
dec
sbb
pop
add
addr16
out
pop
loopne
push
aad
push
clc
call
outsl
lods
ret
rcrl
push
xchg
xchg
mov
imul
mov
jl
mov
shrb
mov
shll
and
mov
sbbl
sbb
out
jns
stos
or
icebp
xchg
lret
negb
retw
into
ljmp
jnp
adc
adc
andb
push
lahf
sbb
inc
jb
mov
lods
adc
push
gs
daa
add
jae
dec
out
add
jg
sub
or
and
icebp
test
push
mov
sub
daa
clc
lds
cwtl
inc
cmp
out
xchg
jg
gs
mov
inc
popa
int
clc
stos
push
pop
sahf
shrl
cli
mov
push
sbb
or
les
xchg
aaa
cmpsb
sbb
or
xlat
xchg
sbbl
arpl
popf
mov
mov
ja
adc
mov
jne
arpl
out
fidivrl
dec
arpl
fcomp
sbb
xor
adc
cmpl
push
in
addl
shlb
or
push
jnp
or
mov
inc
jb
mov
fmul
jmp
inc
inc
add
les
dec
jns
inc
rcrl
push
dec
pusha
mov
pusha
pushf
sbb
adc
and
dec
scas
and
rorl
jb
addr16
and
inc
inc
inc
push
mov
rol
pop
data16
cld
xchg
add
fstpl
outsb
jae
leave
es
cmp
cli
daa
cmpsb
dec
jle
outsb
pop
sahf
dec
not
push
test
imul
pop
shll
or
add
cmc
mov
push
inc
shrl
cs
je
movsb
xor
imul
clc
js
mov
xchg
xor
pop
mov
pop
pop
fldenv
into
or
cli
mov
or
jge
sbb
cmp
sub
int3
notb
xchg
roll
jo
xlat
jg
adc
je
lea
and
out
aas
sbb
sub
imul
and
jne
data16
insl
and
push
ja
push
dec
sbb
dec
dec
xchg
notl
lods
cld
mov
les
lods
mov
dec
int
jmp
dec
mov
andl
lret
push
clc
call
dec
fldcw
xor
pop
inc
neg
sbb
xchg
stc
in
sarb
mov
lds
popf
or
sahf
mov
mov
cmpsb
iret
sbb
outsl
pop
push
inc
dec
push
stos
leave
std
sub
xchg
inc
lods
push
aaa
lret
and
mov
dec
pop
rol
ret
imul
add
cmpsl
jle
daa
insb
sti
sbb
test
jnp
repz
lcall
pop
push
mov
ss
arpl
jg
leave
ret
mov
outsl
dec
xor
jge
jbe
sub
test
mov
pop
shr
xor
out
loop
fwait
clc
push
jl
sbb
adc
sbb
mov
daa
mov
lret
pop
aaa
cltd
icebp
dec
jecxz
xchg
jg
inc
mov
lret
sbb
inc
pop
add
mov
mov
dec
fsubrl
mov
lret
xchg
mov
dec
xor
push
add
insl
pop
jne
ret
negl
fdivrl
cmpsl
mov
push
mov
aam
push
mov
push
add
add
jl
inc
jl
jb
icebp
sbb
in
dec
les
xchg
sbb
clc
cmp
mov
push
fadds
lods
repnz
or
cmp
sub
xchg
call
jmp
push
fbld
inc
lock
es
push
or
pop
xor
icebp
scas
inc
aaa
xchg
ret
outsb
dec
xchg
in
mov
dec
lahf
add
inc
dec
sub
jns
and
dec
pop
push
add
call
sarb
cmp
push
jge
xchg
lods
imul
mov
and
inc
push
mov
xchg
add
aaa
repz
bound
in
mov
sub
fs
bound
push
dec
lret
dec
shll
daa
jbe
icebp
cmpl
cli
mov
fldt
pop
ss
and
int3
sub
sahf
comiss
scas
pop
xor
in
pop
jo
jg
popa
shlb
sbb
jnp
pushf
sub
inc
mov
mov
js
arpl
iret
pop
push
inc
cmp
inc
inc
sarl
rorb
test
out
push
sbb
jle
and
push
mov
out
sbb
inc
pop
scas
test
ret
and
out
cmpsb
jb
and
ret
dec
aaa
mov
mov
insl
push
mov
jp
mov
xchg
stc
xchg
xchg
cli
mov
shr
push
loopne
fadds
daa
push
iret
popf
rcr
or
bound
dec
std
mov
pop
icebp
pop
addl
cwtl
dec
jnp
jp
outsb
jecxz
xchg
xor
ja
popf
imul
bsf
xor
test
mov
mov
popf
or
sahf
or
pop
xchg
cld
repnz
ljmp
sbb
loope
jae
jecxz
inc
in
rolb
push
out
mov
fistps
cmp
fldenv
cld
add
nop
sbb
mov
out
mov
pop
arpl
lret
mov
notb
scas
pop
dec
clc
mulb
icebp
mov
lcall
sbb
xchg
xchg
adc
mov
inc
aad
into
std
lcall
ficompl
mov
sub
cs
cwtl
adc
hlt
aaa
mov
aam
push
pop
cmpsl
fisubl
pop
xor
pusha
add
xchg
jnp
sub
mov
pop
inc
jp
adc
mov
lret
pusha
lock
hlt
adc
mov
sbb
les
inc
in
js
ja
lods
loope
pcmpgtd
clc
mov
ficomps
push
rclb
outsb
xor
call
and
mov
outsb
push
dec
cmp
pusha
mov
sub
mov
cltd
dec
daa
shrl
call
sbb
jno
jb
mov
adc
cmc
insl
aas
xchg
xor
es
adc
out
fistpl
and
xor
test
jl
add
les
push
and
inc
cs
cs
push
pop
fucom
std
pushf
xor
sub
lcall
ret
pop
xchg
repnz
xchg
fcoms
and
movb
ret
sub
in
xorb
cmp
or
inc
adc
pop
decl
and
out
loope
mov
push
push
xor
inc
les
adc
and
sti
mov
xorl
or
push
mov
jle
fxch
cmp
lea
popf
push
cltd
insb
inc
push
sbb
neg
mov
clc
cld
cmp
ret
mov
pop
and
in
sub
xchg
mov
aaa
jecxz
adc
leave
or
scas
in
cmpsl
mov
mov
mov
fadds
scas
lock
jb
mov
aam
mov
adc
popf
out
outsl
push
arpl
mov
adc
mov
scas
clc
sbb
lcall
mov
cmp
sub
enter
inc
mov
ret
inc
stos
aam
hlt
push
test
adc
mov
aad
mov
add
push
cmp
or
lock
rcrl
sub
xchg
sbb
sub
mov
test
add
add
hlt
decb
loope
lds
rorl
test
dec
and
aam
test
sub
pop
mov
mov
mov
or
imul
pop
push
sbb
aas
daa
push
fsubs
push
cmpsb
imul
mov
xorb
mov
mov
push
or
mov
mov
xor
push
mov
lods
pusha
inc
mov
mov
sub
dec
sbb
sub
mov
jmp
shl
stos
imul
jmp
jbe
ja
loopne
ret
inc
cmp
repz
addr16
push
mov
daa
outsl
shrb
cmpsl
cs
pop
xchg
adc
adc
add
jbe
popa
inc
sbb
mov
lds
subb
inc
daa
cmp
imul
andb
rorl
lods
cmp
pusha
dec
fdivrs
dec
fidivl
pusha
inc
ret
jo
rorb
lret
adc
push
cld
mov
ljmp
test
addl
or
or
pop
loope
dec
pop
nop
inc
xchg
outsl
cwtl
mov
icebp
mov
lret
push
mov
jmp
push
fucomip
mov
mov
mov
mov
or
test
sub
lds
mov
shlb
aad
mov
add
cmpsb
mov
shlb
sahf
push
pop
sbb
jne
jl
lcall
cwtl
dec
jns
int3
ja
push
cmc
leave
mov
testb
clc
shr
pop
jg
mov
xor
mov
dec
adc
movsl
xor
scas
sub
les
popf
jmp
inc
lock
xchg
add
inc
or
lods
nop
stos
aaa
data16
mov
sti
and
aas
push
push
insb
movsb
mov
out
inc
sahf
stos
cltd
fmull
arpl
dec
sub
outsl
movsb
pop
mov
sbb
in
mov
ret
in
iret
bound
insb
mov
mov
negl
das
call
mov
movb
adc
mov
mov
clc
mov
gs
cmp
icebp
lahf
inc
insb
ret
mov
iret
int
fcomps
fnstcw
imul
mov
and
xlat
jge
cli
imulb
mov
and
data16
addr16
jno
mov
aad
mov
adc
or
mov
mov
adc
xchg
dec
icebp
inc
scas
pop
pop
mov
mov
mov
mov
inc
jg
ficoml
push
and
pop
xchg
popa
inc
lods
rorl
jbe
xchg
jns
jecxz
cltd
mov
jno
mov
mov
pushf
push
add
mov
push
adc
pop
xchg
adc
xchg
lahf
sbb
xchg
mov
je
subl
push
movsb
dec
sbb
push
adc
dec
mov
ljmp
data16
rol
mov
fisubrl
sub
sub
movsb
popf
repnz
push
rorb
clc
sbb
inc
push
push
xchg
jnp
push
and
push
cltd
or
pushl
mov
stos
or
jge
sbb
jno,pt
pop
lock
sub
sbb
mov
nop
push
sbb
push
mov
dec
sbb
fiadds
xor
fs
or
jmp
sub
loop
push
dec
and
repz
arpl
xchg
add
and
jno
and
cwtl
mov
mov
lea
pop
shrl
dec
call
jno
push
pop
xlat
jo
mov
leave
cmp
jne
cmp
mov
lods
cmp
cmp
cltd
roll
xor
inc
cmpl
xor
dec
dec
dec
pop
sub
push
add
dec
push
out
movsl
mov
dec
int
shr
jecxz
dec
int3
sub
fisubrl
sbb
dec
add
mov
sarl
adc
call
aam
int3
xor
cmp
inc
sub
mov
test
lahf
mov
scas
pop
pop
inc
daa
repnz
inc
lea
pop
xchg
enter
push
cmp
mov
jge
ja
enter
lret
push
les
xor
add
or
cmp
popf
fs
and
jp
ljmp
sar
scas
imul
or
dec
and
sbb
mov
jo
rcrl
out
leave
notl
cmc
sbb
in
out
frndint
out
sub
xor
sbb
inc
fdivl
movsb
sbb
inc
or
jbe
xor
pop
pop
jae
xorb
stos
in
popf
ret
cmpl
shlb
jns
inc
aad
aas
sahf
cld
add
add
mov
popa
add
leave
loop
daa
push
stos
stos
jb
inc
in
sub
push
rclb
les
fwait
in
inc
movsb
or
mov
adc
fnsave
ds
scas
dec
xchg
adc
popa
push
leave
push
jmp
adc
pushf
aam
sbb
fmul
push
xchg
popf
pop
outsb
jno
aam
mov
mulps
int
fadds
inc
push
add
cmpsl
arpl
shll
xchg
cmp
jle
xchg
fbstp
lcall
push
pop
hlt
xchg
pop
jo
pop
mov
lret
cmc
leave
mov
out
sbbb
xor
aam
jge
es
xchg
aad
add
fbstp
pushf
cmc
ret
imul
dec
fincstp
mov
push
das
scas
xchg
mov
adcb
dec
in
and
std
mov
push
fisttpll
movsl
dec
pop
cs
adcb
movsl
adc
sbb
jo
je
ficoms
mov
jne
pushf
mov
lea
int
shr
into
dec
push
jge
pop
cmp
rcr
std
sub
addr16
mov
imul
or
cld
fisttpl
shlb
daa
loop
xchg
mov
push
sbb
das
sub
mov
xchg
and
hlt
in
arpl
test
adc
scas
movsb
sub
lcall
icebp
rcll
sub
fld
or
lea
and
in
in
das
jmp
pop
in
pushf
ja
adc
ds
call
adc
insb
mov
adc
in
add
lcall
mov
in
jle
jecxz
sub
pop
push
in
inc
jge
out
pop
mov
xor
add
call
mov
pop
es
popa
cmp
cmp
add
int3
jge
cmpsb
add
aaa
push
pop
arpl
rcrl
or
xor
xlat
loop
aad
jg
pop
adc
pop
lock
mov
inc
mov
or
sbb
bound
push
xor
sbb
adc
sarl
xchg
int
mov
mov
dec
call
or
cmpl
lds
add
fsubrs
mov
inc
mov
jle
push
lods
jle
rdmsr
test
out
pushf
les
test
fdivs
push
aas
add
pop
popa
and
xchg
mov
aad
pop
sub
sbb
mov
sar
mov
mov
inc
inc
mov
clc
mov
imul
xor
xchg
popl
push
mov
push
arpl
lock
add
addr16
icebp
fimuls
lcall
xchg
sub
hlt
fisubl
pop
cmc
inc
xor
add
sbb
add
stos
fwait
or
xor
imul
sbb
dec
inc
mov
push
fld
pushf
loope
lock
int3
imul
imul
jmp
pop
mov
aaa
mov
sub
sbb
mov
dec
out
add
insl
movsb
dec
dec
lods
es
mov
cmpsb
insl
cmp
or
mov
inc
and
test
arpl
imul
cld
std
decb
popf
pop
out
and
cmc
pushf
cmp
push
fmuls
mov
jp
jbe
dec
add
pop
inc
sbb
das
push
mov
mulb
lret
shr
dec
sbb
mov
jbe
in
sub
popa
mov
loopne
jg
out
sbb
jbe
pop
jae
pushf
rcl
stc
adcb
int
jmp
jmp
mov
push
xchg
cmp
push
adc
jbe
push
lret
mov
xor
add
frstor
dec
sub
xchg
icebp
inc
stos
sar
xor
mov
lods
pop
fnstenv
push
sbb
adc
xchg
and
cmp
fnstenv
scas
adc
out
incl
mov
mov
mov
xchg
dec
js
rorb
pop
cwtl
dec
mov
imul
test
pop
test
push
add
loopne
fnstenv
cmp
mov
and
mov
jbe
xchg
sub
jl
test
rorb
or
adc
movsb
arpl
sub
add
mov
imulb
mov
ss
pop
or
out
filds
or
lcall
jmp
mov
imul
adc
int3
jae
cmp
mov
cmp
dec
lds
push
lret
xor
daa
sbb
push
xor
xchg
pop
fisttpll
leave
jecxz
ljmp
repz
outsb
repnz
aam
out
inc
mov
lods
gs
cmp
inc
inc
mov
repnz
call
pop
jo
inc
daa
add
pop
int3
rcll
loop
dec
dec
adc
add
stc
add
test
pop
adc
pop
and
xchg
cltd
mov
cmp
add
out
xchg
xchg
jl
movsb
cmpsb
push
jp
pop
ja
rolb
shl
popf
mov
movsl
mov
stc
cmpsl
mov
cmp
sub
push
push
add
mov
fdivp
sbb
daa
cmpsb
leave
inc
ss
cmp
inc
cld
aad
lret
add
cld
push
push
pop
mov
inc
ss
or
cmp
pop
adc
mov
test
mov
lods
jo
fdiv
sbb
ds
ret
test
pop
insl
push
mov
cltd
xchg
inc
sub
das
jg
loopne
push
push
inc
and
fwait
add
js
sub
xor
and
out
mov
xlat
subb
cmp
push
xor
sbb
pop
push
popf
data16
bound
sahf
in
cmc
and
leave
ficomps
jp
xchg
cmpl
push
sub
loopne
add
lret
lret
jge
shrl
in
in
inc
and
mov
aaa
dec
aad
mov
fdivl
jne
sub
lods
inc
icebp
jecxz
bound
jmp
std
movsb
popf
repz
into
sbb
loop
jae
mov
cmp
movsb
iret
rcr
cld
add
mov
arpl
mov
hlt
dec
dec
cmpsl
loop
pusha
push
cwtl
push
fistpll
add
xor
inc
jns
jb
ljmp
ss
call
and
aaa
mov
outsl
mov
stos
xchg
test
push
leave
rol
and
dec
mov
sub
sub
jp
and
ja
jge
mov
mov
ss
jo
lahf
popf
int
pop
test
mov
enter
mov
rcrl
bound
push
addr16
adc
and
pusha
sarb
jb
mov
daa
jbe
push
add
stos
cwtl
add
and
inc
test
mov
es
fistps
nop
lock
cmp
in
sub
xchg
enter
cmp
and
movsb
out
xor
out
pop
out
push
out
test
mov
sbbl
add
inc
sub
dec
mov
lret
test
das
or
pop
and
fadd
arpl
mov
inc
loopne
mov
pop
orl
ja
aad
jb
cmc
jbe
rclb
pop
fsubl
pop
test
pusha
mov
jo
push
pop
clc
or
rol
fldt
stos
dec
pop
cmovbe
insb
js
aad
out
xor
xchg
push
into
jne
lods
sbb
cmc
sub
test
ja
add
sbb
int3
jg
mov
xor
push
xorb
aas
mov
imul
mov
jno
pusha
popa
rorl
jb
aad
das
mov
mov
mov
sbb
iret
outsb
push
sti
mov
add
imul
leave
loopne
idivl
ret
pop
into
jns
cmp
add
jl
mov
cmp
cs
test
popf
les
adc
cmp
clc
subl
nop
out
subb
mov
daa
xchg
cs
jb
fwait
cmp
mov
addr16
cmp
je
out
sub
sahf
pop
test
fldt
mov
and
into
lahf
mov
xchg
dec
mov
pop
push
pop
ja
push
inc
bound
xor
mov
mov
lcall
mov
jns
sbb
pop
jns
dec
xor
shrb
inc
and
pop
cmp
push
add
cmp
or
mov
nop
xchg
dec
mov
pop
sub
inc
cmp
jecxz
sbb
sbb
or
xchg
adc
out
xchg
lock
xor
xor
sbb
mov
sbb
jae
ret
loop
jne
sbb
dec
scas
and
dec
jg
std
mov
pop
js
icebp
xor
sbb
push
arpl
vandnps
lds
mov
xchg
cmc
leave
subl
clc
pop
dec
and
lock
fs
cs
dec
xchg
inc
lock
and
dec
jbe
leave
sahf
test
aaa
or
pop
bound
mov
mov
sbb
cmp
out
out
js
adc
mov
sbb
adc
jge
xchg
add
fstps
push
sbb
pop
es
mov
imul
pusha
movsb
loop
add
xchg
loop
xor
pop
leave
inc
sub
cmpsl
mov
cmp
fdivs
insb
adc
addr16
or
jo
int3
sub
pop
cmp
mov
adc
repnz
push
in
or
lock
xorl
xchg
test
cmpsb
test
and
adc
dec
pop
fsubrs
mov
out
inc
cmpsl
xor
negl
mov
mov
sbb
ljmp
ret
mov
mov
lock
or
xlat
mov
fwait
rcll
push
push
sub
out
add
and
int3
daa
jp
lds
or
pop
xchg
add
in
fstpl
lods
nop
sub
stos
shlb
and
fbstp
dec
icebp
or
adc
les
in
inc
lcall
rep
dec
rol
arpl
jl
stos
lods
inc
aas
or
fisttps
fadds
ja
xchg
and
jne
push
rclb
jg
fadd
xchg
mov
push
notl
mov
xchg
out
daa
dec
ret
lcall
cmpsb
pop
loopne
cli
es
daa
and
data16
sub
dec
or
add
mov
pop
lea
in
std
mov
xchg
cmp
lods
push
aas
outsb
adc
loopne
sub
mov
cmp
jb
and
push
int
das
ds
loopne
cld
xchg
push
sub
ljmp
push
xchg
cmpsb
dec
jb
or
pop
dec
cmp
fidivrl
push
inc
pop
shlb
mov
inc
mov
and
int
pop
sahf
pop
fs
mov
sub
fcmovnb
dec
sahf
xorl
xor
out
pop
mov
push
mov
or
ljmp
std
adc
lods
xlat
aas
mov
push
pusha
sub
cmpb
into
rorb
and
fsts
inc
cmp
or
push
inc
addr16
mov
in
and
push
xchg
cli
mov
push
sub
jge
je
sbb
jp
and
push
sub
fdivs
cmc
and
xchg
lcall
cli
mov
push
mov
xchg
mov
imul
aaa
pop
outsb
dec
int3
out
lret
in
sub
push
push
pop
imul
or
aas
sub
add
insl
repz
jge
cmc
shrl
sub
sbb
jecxz
mov
or
push
fwait
jno
insb
out
push
adc
out
xor
pop
adc
in
mov
jge
cmpsb
lea
in
sub
jne
movsl
subb
cmpsl
movsb
lods
xchg
mov
lods
mov
fistpl
mov
mov
and
repnz
xchg
dec
inc
sub
clc
iret
stos
cmp
mov
xor
shll
xchg
or
iret
xor
push
les
stos
cmpb
repnz
daa
inc
pop
call
mov
dec
jge
sbb
pop
add
mov
outsl
xor
jp
js
adc
aad
fldenv
mov
mov
xor
cli
sub
push
mov
jg
adc
fsub
ds
lods
incl
push
mov
clc
adc
and
aas
je
adc
jge
dec
repz
add
push
dec
lea
add
sub
rorb
sub
mov
sub
sarb
std
mov
ss
stos
outsl
xchg
mov
sub
sti
dec
scas
jmp
int3
pop
mov
iret
mov
in
ds
subb
dec
sub
enter
movsb
jl
mov
fucomi
jle
push
jbe
mov
ret
sub
out
push
jns
aaa
inc
les
xlat
scas
ret
adc
mov
mov
mov
adc
mov
sbb
aam
sub
aaa
jle
mov
xor
dec
sbb
xchg
and
inc
pushf
in
add
into
sbb
mov
les
jo
inc
loopne
adc
push
sbb
mov
add
test
inc
movntps
cmc
and
dec
jl
scas
pop
mov
imul
movsl
xchg
inc
fistl
sbb
sti
fsubs
add
into
mov
sub
js
mov
mov
and
adc
xchg
pop
leave
sbb
pop
add
adc
outsb
mov
aaa
fidivl
jecxz
bound
mov
loop
inc
push
out
push
insb
pusha
sub
shll
ljmp
enter
or
test
loopne
cmc
cmc
test
js
outsb
out
sbb
int
pop
pusha
sar
jns
mov
push
mov
pop
mov
fs
in
iret
mov
and
jae
sbb
mov
sbb
mov
andb
jne
dec
int
mov
scas
js
loope
mov
sub
adc
sbb
pop
mov
enter
and
inc
lahf
outsl
mov
cld
dec
outsb
add
out
xor
mov
jmp
idiv
or
cmp
fildll
xor
test
dec
inc
popf
imull
dec
jae
ds
push
adc
dec
lea
jne
hlt
mov
jg
or
lock
pop
sbb
jmp
jo
cld
mov
les
jmp
or
aaa
adc
pushf
xchg
cmp
cmp
ret
repnz
ret
cli
and
sbb
cwtl
lahf
and
and
xchg
xchg
sub
sahf
loopne
push
push
repnz
or
push
imul
and
std
pop
pop
mov
lret
je
fdivl
xchg
xchg
insb
lret
xchg
ffreep
cmp
scas
test
lcall
sbb
lods
arpl
mov
push
leave
cli
or
sub
not
cli
xor
repnz
inc
lret
inc
xchg
mov
mov
inc
fs
bound
das
repnz
jge
adc
in
mov
test
mov
sbb
jl
stc
inc
stos
fcoml
mov
fstp
jb
loope
push
loopne
lret
xchg
cmpsb
xchg
mov
lods
scas
cltd
or
aad
push
and
mov
popa
mov
pusha
icebp
jmp
pop
addr16
les
lds
cmp
or
inc
xlat
jle
mov
sbb
jne
aaa
sub
lahf
cmc
pushf
sar
insl
pop
les
and
outsb
sti
mov
inc
imulb
dec
lock
sub
xor
mov
inc
jo
movsb
ret
stos
mov
jo
inc
idivb
mov
pop
int3
icebp
and
movsb
or
add
es
and
mov
ss
or
xchg
movsl
sbb
addr16
push
imul
mov
jo
and
popf
adc
push
lret
int3
shlb
repnz
lret
mov
sahf
dec
pop
push
hlt
push
enter
mov
les
push
or
outsb
mov
jns
sar
out
lret
xor
sar
stos
add
int3
push
pmaxub
xor
sub
adc
push
std
jb
xchg
imul
loopne
movsl
in
jg
push
push
mov
mov
aas
outsl
adc
sbb
movsl
cmp
jp
mov
dec
scas
and
sarb
mov
and
icebp
pop
test
in
outsb
mov
xchg
push
cli
push
xchg
in
and
popf
hlt
lret
jo
add
inc
mov
bound
jo
test
xor
and
dec
nop
icebp
jmp
jmp
out
faddp
cmp
dec
dec
nop
xor
jl
push
out
testl
mov
or
fwait
inc
out
xor
sahf
jle
sbbl
and
push
push
fwait
gs
inc
xchg
sbb
bound
fwait
xor
push
xor
mov
pop
movsb
dec
aaa
sub
mov
clc
roll
mov
xor
repnz
movsb
xchg
xor
inc
pop
sub
mov
fimuls
js
rcrl
cmp
xchg
xor
pop
fwait
enter
jge
cmpsb
or
es
cltd
pop
ret
mov
cs
adc
iret
sub
sub
cmpl
bnd
ds
xlat
outsl
inc
in
add
inc
fidivl
das
lods
je
mov
sar
aad
dec
sahf
push
popa
add
jae
mov
enter
and
cmp
ficoms
fs
sbb
pop
lea
inc
push
xchg
mov
ljmp
imul
fcmovnu
mov
lds
push
push
cli
lret
mov
dec
repz
xlat
mov
mov
sub
cli
shl
cmp
xor
into
pop
faddl
out
mov
pushf
ds
out
jb
les
push
scas
cmp
or
xchg
and
pop
inc
pop
xchg
sti
out
sbbl
inc
out
add
addr16
into
or
lods
dec
add
xchg
jg
cmpsl
adc
push
xor
sub
scas
jo
cmp
dec
fadd
jae
mull
mov
in
lret
rcrb
add
daa
mov
add
add
cmp
bnd
xchg
subl
fstpt
mov
icebp
std
xor
pop
stos
add
mov
and
xchg
dec
and
js
pop
xchg
fs
popa
sarl
jno
jecxz
incl
in
sub
and
int3
jns
mov
mov
shrb
inc
pop
das
push
add
call
lea
movsl
lock
into
repnz
mov
add
inc
sbb
mov
mov
cmp
loopne
xlat
cmp
add
test
xchg
mov
xchg
jae
inc
sub
pushf
addl
xchg
pop
or
xor
aaa
mov
sub
lods
pop
leave
push
fwait
sbb
mov
cmp
rcr
out
jb
out
not
xor
mov
fiadds
push
push
fcomip
pcmpeqw
mov
pop
jmp
mov
dec
das
mov
mov
xor
jecxz
xchg
ret
rcrb
pop
daa
into
adc
ja
ds
fcompl
insl
iret
cmp
pop
pusha
adc
xchg
mov
sahf
sbb
in
jo
mov
das
out
imul
add
cmpsl
cld
lcall
rcrb
sahf
xchg
cmp
adc
jmp
in
out
add
cmp
mov
enter
ficoml
adc
mov
xor
fwait
sbb
fs
cmp
enter
cld
xlat
and
mov
ja
dec
push
and
push
mov
push
xor
fldenv
mov
fadds
fs
dec
cmp
cmpsb
fnstenv
mov
jbe
clc
imul
jnp
fwait
scas
mov
pop
cmp
ret
and
and
out
cmp
repnz
icebp
ja
mov
xchg
cmp
stc
cli
mov
dec
push
scas
mov
xchg
pushf
jge
loope
ret
sub
divl
adc
mov
ja,pt
jle
adc
fwait
lret
mov
mov
add
call
mov
pop
stos
jge
xchg
xchg
and
std
cmp
sbb
jo
nop
xor
and
int3
enter
lcall
xor
cwtl
mov
lods
dec
repz
scas
rcr
lds
test
dec
dec
movsl
inc
int3
add
push
arpl
cmp
fsts
loop
nop
and
das
jno
xor
cmpsl
ds
or
dec
fcoms
scas
mov
iret
aam
add
push
cmp
cld
arpl
mov
clc
fadds
insl
fwait
cmpsl
or
add
out
fbld
adc
cmp
cmp
movsl
or
clc
cmp
add
aad
mov
das
aam
repnz
stos
popl
inc
rolb
mov
sbb
xchg
pop
xchg
ds
shl
dec
push
and
pop
test
add
dec
mov
lods
xchg
cltd
mov
push
push
pop
stos
out
pusha
fldl
xor
negl
iret
inc
aam
adc
ret
ds
mulb
xor
dec
test
sarb
movl
cmp
stc
ljmp
jnp
mov
mov
lods
lods
les
lret
subl
sub
inc
push
jecxz
adc
mov
fdivr
sub
outsb
movb
xchg
or
imul
inc
jp
add
push
push
jno
jae
test
lahf
pop
xor
pop
clc
cwtl
pop
fs
shrl
call
cmp
xor
pop
inc
lods
xor
push
sbb
dec
adc
or
insl
pop
out
mov
insb
mov
daa
scas
push
sub
push
ljmp
outsl
inc
pop
jo
mov
push
orb
mov
pop
sbb
lds
fimull
stos
xor
xor
add
pushf
roll
cli
adc
inc
out
out
in
rolb
xor
cmp
jb
dec
jg
xor
call
inc
lret
add
pop
jo
loopne
pop
lock
outsl
cmp
jle
sahf
jge
fcomp
ljmp
cmp
push
pushf
xor
or
andl
idivl
dec
fstpt
xchg
push
xor
jl
or
fldl
jmp
call
pop
pop
mov
pusha
and
rorb
cld
insl
les
adc
vpmaddwd
mull
iret
xor
inc
dec
mov
adc
mov
mov
in
add
jl
ljmp
or
jb
lea
inc
jno
lcall
adc
and
jl
repz
cld
popa
mov
jb
sti
xchg
lret
sbb
test
out
rcrb
dec
mov
jg
xchg
in
mov
popf
push
stc
jnp
mov
mov
enter
int
inc
dec
add
rorl
movsl
xor
add
pop
dec
lods
or
jb
lea
jno
mov
inc
sahf
and
xor
es
ljmp
mov
cmp
mov
pop
cmpsb
loope
lods
sub
lret
out
sub
adc
rcrl
stos
mov
xchg
lock
jmp
jge
lods
sub
stc
stc
sbbb
inc
fwait
push
adc
scas
push
sbb
insl
into
popl
es
mov
mov
in
jno
push
stc
sub
inc
push
lret
jp
ljmp
xor
mov
in
imul
xor
push
mov
mov
cmpsb
xlat
orl
xchg
pop
pop
stc
mov
pop
xor
loopne
mov
pop
in
dec
xor
popf
sbb
sub
pop
aas
rorb
fcmovne
cmp
mov
stc
mov
jmp
push
adc
leave
lods
ss
push
mov
js
es
fiaddl
push
cmp
repz
cli
div
pop
cmp
aad
and
or
iret
mov
jns
arpl
jg
and
loope
in
aaa
inc
movsl
out
pop
xlat
sbb
xchg
sub
xor
rolb
popl
lret
out
icebp
enter
mov
sub
xor
rcll
aas
push
fimull
daa
cltd
call
jnp
hlt
insb
pop
test
mov
ret
mov
ss
mov
repnz
popa
lcall
lock
inc
jnp
jbe
popa
sub
adcb
and
lahf
in
cmpsl
mov
add
inc
jo
cld
mov
scas
js
add
add
inc
icebp
stc
decb
mov
push
or
daa
imul
adc
call
sub
xor
out
test
stc
stc
test
negb
in
cmp
fildll
mov
and
dec
inc
out
sub
mov
dec
ljmp
cmp
sbb
loopne
dec
fldt
fs
js
hlt
iret
push
mov
push
pusha
out
outsl
xor
jo
dec
lahf
addr16
jle
mov
mov
mov
les
loope
int3
mov
nop
jb
icebp
sbb
sbb
cld
mov
dec
xor
fs
cmp
div
mov
xchg
pop
addl
and
std
sbb
fidivrl
fstpl
insl
cltd
mov
mov
and
pop
pop
aad
xchg
sub
adc
adc
jnp
mov
ret
add
push
ret
sub
push
lock
ficompl
fcmovbe
mov
sub
mov
jle
pop
adc
xor
xlat
insl
outsl
lods
xchg
sub
pop
nop
leave
and
push
mov
test
fucom
mov
sahf
pop
scas
mov
sub
push
jbe
xchg
repnz
cmp
lret
dec
movsb
pop
push
jecxz
sti
mov
mov
stos
test
cwtl
and
sub
outsl
out
mov
cwtl
mov
aas
adc
test
xchg
test
negb
je
mov
outsb
sti
mov
xchg
call
aaa
sub
inc
push
mov
inc
test
pop
repz
gs
xor
sbb
xor
cli
jnp
mov
outsl
and
aam
fldcw
shll
cwtl
lret
in
mov
ss
hlt
adc
es
inc
xor
mov
push
pop
shrl
movsl
xchg
repz
jnp
sbb
test
xlat
repnz
sub
roll
pushf
cmp
or
inc
movsl
add
repz
jecxz
mov
ret
and
sub
std
lock
cmp
pop
ret
pop
testb
jl
lds
mov
shrl
fmulp
pop
cmc
cli
push
cmp
insb
add
cmc
or
aad
fnstenv
call
jmp
cmp
pusha
subl
adc
jb
mov
negb
int
mov
mov
xchg
lcall
and
enter
mov
mov
add
loopne
movsl
or
adc
xchg
adc
clc
mov
lret
sbb
inc
push
inc
mov
xlat
mov
jne
sub
cmpsb
mov
int
icebp
or
clc
fs
fcomps
and
dec
add
add
fwait
push
or
pop
ja
cmc
mov
fwait
adc
icebp
xor
add
in
dec
int
fbstp
add
adc
roll
dec
and
add
cmp
insl
lock
xor
and
jbe
pop
mov
adc
fldcw
or
mov
ret
imul
sbb
sbb
jp
xlat
dec
lock
xlat
inc
insb
gs
or
clc
fildll
testl
push
jge
jmp
sub
lret
mov
cmp
mov
movsl
int
lea
sti
xlat
dec
sahf
das
loop
daa
or
jge
in
xchg
in
insb
xchg
insb
jae
sub
in
xor
cmp
mov
cmp
outsl
es
mov
xor
sbb
sbbb
mov
lock
dec
mov
adc
mov
addr16
sbb
vmwrite
mov
out
into
mov
mov
mov
leave
xchg
es
xlat
loop
fwait
aas
cmp
bound
inc
mov
cwtl
sahf
aaa
pusha
pushf
cwtl
and
adc
int3
cmp
push
dec
pop
es
div
ljmp
mov
xor
push
popa
pop
in
cs
loope
insl
stc
into
lahf
cmpsl
cmp
jno
test
outsl
jbe
stos
xor
sbb
or
es
cmc
sub
pop
dec
jmp
mov
or
leave
fadd
sub
insl
hlt
or
jnp
mov
and
outsb
xor
daa
rorb
in
adc
shr
sbb
iret
mov
sbb
ret
fwait
popf
jo
mov
push
pop
jb
ret
xchg
fsubp
scas
dec
pop
push
add
inc
test
mov
and
jg
cmp
stos
dec
shr
stos
adc
dec
lret
jo
xor
push
mov
filds
mov
xor
cwtl
or
mov
les
pushf
cmp
push
push
icebp
enter
mov
js
mov
mov
pop
into
cmp
fcoms
adcb
jo
mov
dec
cltd
frstor
sub
in
inc
sub
fidivl
xchg
inc
mov
adc
xchg
cmp
mov
sbb
scas
enter
dec
xlat
xlat
ja
aad
std
out
cmp
sarb
lock
idivb
clc
scas
xor
mov
ds
lods
xlat
mov
jbe
mov
icebp
stos
mov
loope
xchg
sbbl
arpl
dec
inc
dec
daa
das
sbb
cmp
nop
or
or
mov
pop
xchg
sub
and
fsubrp
mov
les
mov
cmpsb
inc
std
inc
out
es
stos
xchg
daa
fs
sahf
std
inc
ret
fistpll
fucomip
jb
div
mov
sbb
imul
fscale
inc
dec
or
enter
inc
outsl
push
xor
xor
out
data16
jb
push
sbb
sub
ret
mov
mov
mov
push
movsb
pop
or
iret
cmpsb
arpl
les
mov
push
cmp
ret
jp
mov
jecxz
call
and
and
add
xchg
stos
das
sub
dec
or
or
ret
in
dec
in
push
mov
mov
push
arpl
cmp
sub
daa
pop
sbbl
aaa
sub
subb
loop
fisubrs
dec
test
mov
scas
sub
sbb
negl
cmp
ja
xor
out
jo
jae
scas
js
gs
inc
push
lods
push
je
cmpsl
cmpsl
mov
out
lret
add
push
std
mov
jmp
insb
fistpll
inc
mov
rorb
mov
mov
cs
out
outsb
inc
lock
cmpsl
fmull
stos
xchg
jb
loopne
movsb
jno
xor
idiv
mov
out
nop
jo
aam
xor
mov
loope
cmpsb
xchg
lock
xor
pop
mov
cmpsl
pop
les
pop
push
sub
idiv
pop
mov
jp
push
xor
aas
dec
in
sbb
and
jl
xor
adc
xchg
add
xchg
aaa
xor
bound
imul
add
jecxz
sub
pop
lds
dec
and
mov
lods
dec
stos
inc
adc
jp
or
imul
adc
jmp
orb
sub
or
scas
fwait
lret
adc
xchg
adc
loop
out
pop
xchg
shr
addr16
scas
jne
push
movsl
test
addb
into
xor
loope,pn
sub
cmpsb
outsb
cmpsb
or
inc
notb
mov
jb
pop
shll
cli
aad
in
jl
cs
sub
insb
es
mov
inc
leave
mov
jae
pop
jbe
scas
adc
jg
data16
push
inc
gs
jle
add
dec
add
mov
mov
cmp
es
cmp
push
rclb
pop
mov
sti
or
adc
push
movsb
roll
popa
xchg
mov
mov
into
lock
into
add
lock
and
cwtl
and
outsl
iret
stos
imul
lods
popa
scas
jno
sub
cmpb
mov
popa
and
adc
mov
inc
jge
mov
sahf
cs
lods
pop
inc
adcb
jns
push
jp
dec
fadds
xchg
dec
iret
adc
xchg
inc
sub
fisubrs
xorb
daa
aad
mov
inc
mov
mov
sub
imul
and
mov
mov
lds
mov
xlat
mov
dec
lret
jmp
iret
dec
aam
mov
jle
push
or
sbb
xor
gs
ret
fnsave
mov
sti
in
aad
fisubrs
inc
sbbb
mov
pop
loopne
and
scas
scas
mov
xor
jns
pop
cmp
lea
in
sub
mov
enter
cmpsl
add
aam
pop
push
mov
es
mov
dec
push
jno
popf
bound
mov
data16
cwtl
xchg
dec
sti
out
subl
cs
inc
sbb
sbb
fisttpll
loop
shlb
mov
pop
iret
and
jno
repz
lods
xorb
inc
sub
mov
push
or
xlat
xor
clc
mov
sahf
and
pop
loope
xchg
fimull
add
push
xor
add
mov
test
cmp
dec
enter
mov
lcall
daa
xor
dec
shrl
xor
mov
mov
es
push
sbb
lds
outsb
pushf
cld
aam
mov
subl
pop
mov
movsb
cmp
stc
sub
das
jne
dec
aas
mov
dec
cli
xor
jp
jns
imul
test
test
pop
pop
or
hlt
ficomps
ret
test
leave
jl
loopne
jp
movntps
xchg
insl
xchg
or
ja
mov
dec
cmc
mov
testl
sbb
lods
mov
cmp
hlt
jne
roll
ficoml
xchg
sub
stos
int
or
adc
frstor
cltd
insl
pop
sub
mov
fwait
stc
aad
shrb
add
pop
and
push
inc
or
xchg
inc
loopne
stos
je
adc
repz
push
or
push
pop
mov
jle
dec
pop
mov
inc
add
or
out
ds
jne
adc
cli
xchg
add
push
pop
fsts
mov
pusha
sbb
add
mov
aam
scas
jle
pusha
inc
pushw
out
jno
mov
pop
add
hlt
push
mov
scas
sbbb
je
mov
cltd
shl
xor
mov
fsub
xor
inc
stos
addr16
cmp
imul
data16
mov
aad
push
fisubrl
xchg
mov
lcall
sbb
cs
ja
add
stos
fisttps
jmp
or
into
mov
adc
inc
es
in
sub
inc
pop
push
cmp
aad
cltd
mov
test
cmpsb
and
outsb
mov
pop
lods
adc
pop
add
fisubrs
mov
or
roll
adc
cmc
xchg
mov
jmp
aad
cmp
in
push
ss
push
sbb
sbb
fsubrs
xchg
cmp
jno
push
xchg
shrb
imul
jns
pop
cli
sbb
call
mov
adc
or
sub
cmc
int
imul
xchg
mov
int
xchg
adc
push
push
sti
mov
outsb
jo
add
jmp
enter
lods
dec
stos
hlt
stos
pop
pop
aaa
mulb
dec
xchg
ret
lods
or
popf
sub
mov
shrl
imul
ja
xchg
rcll
xor
mov
lods
xor
sbb
add
test
add
xor
jmp
movsb
shl
mov
jle
or
sbb
and
ret
rcrl
stos
jecxz
xchg
sbb
mov
pushf
sti
push
xchg
in
jno
sub
rep
jle
dec
xchg
lcall
add
popa
aam
dec
lahf
imul
xchg
sub
imul
fwait
jbe
movsl
ret
inc
pushf
sub
sbb
push
or
lret
jae
jle
jl
jnp
push
mov
and
stc
adc
jmp
xor
int
sub
dec
out
adc
enter
mov
dec
xor
adc
push
mov
jo
std
sahf
sbb
test
loopne
ffreep
mov
push
or
pop
fdivs
inc
adc
sub
pop
add
jecxz
or
jg
repnz
mov
add
sub
jl
movsl
sub
loopne
clc
sub
addr16
lds
aad
sub
xchg
add
arpl
fmulp
fwait
sub
cltd
cmc
mov
loope
cmp
jg
jbe
mov
leave
imul
fdivrl
sub
sub
lds
bnd
pop
movsl
lods
js
popf
mov
aas
add
push
adc
mov
mov
cmp
add
outsb
and
adc
xor
bndstx
mov
in
sbb
pushl
bound
mov
and
insl
gs
out
add
sti
les
sbb
fimuls
cmp
dec
inc
test
jnp
ret
fcoms
mov
lcall
or
fisubs
cmp
test
mov
push
sbb
pop
mov
aad
adc
push
sti
mov
mov
mov
pop
int
aam
inc
sbb
ret
add
gs
and
and
jne
dec
cmp
mov
dec
addb
mov
sbb
stc
pushf
sbb
repz
shll
pop
or
adc
sarl
ret
test
and
add
add
sub
mov
js
xchg
lods
sub
movsb
sbb
jnp
add
es
xorl
fsubl
or
in
jo
ja
test
cmp
test
jne
out
adc
mov
dec
fildll
inc
arpl
fwait
outsl
jnp
ds
jle
shlb
dec
insb
jae
mov
push
loopne
lahf
test
or
pushf
inc
icebp
jno
out
stos
sbb
nop
pushf
adcl
je
sub
push
std
loope
mov
sub
jl
lahf
mov
jb
sbb
push
lea
cmp
cmp
xchg
idivl
jno
out
pop
xor
push
inc
cltd
rorb
test
repnz
sbb
adcl
rcll
jle
popf
dec
pop
in
fs
in
jae
stos
or
outsb
pop
jp
cmpsb
inc
push
stos
imul
stc
adc
push
xchg
ror
imul
xchg
in
jne
sbb
fisttpll
push
xchg
push
xchg
test
push
inc
and
jle
fnstenv
sti
jg
dec
inc
mov
inc
sub
int
shl
mov
xor
cmc
mov
mov
lock
test
test
jbe
es
aas
push
add
pop
lret
sahf
and
sbb
loopne
push
mov
in
xor
inc
sub
lcall
cs
sub
push
leave
dec
mov
decl
hlt
rolb
call
pop
dec
add
pushf
mov
push
inc
scas
cmp
mov
push
jb
stc
push
aad
xchg
popa
xor
sub
fildl
daa
mov
xchg
xchg
cmp
ss
into
push
sub
xor
nop
mov
clc
push
stos
das
mov
int3
rcr
int3
aad
sub
push
mov
inc
mov
pop
stos
or
stos
lret
jbe
ret
mov
imul
rcll
js
int3
inc
cmp
jae
rcrb
gs
ss
push
and
cmpsb
adc
inc
and
pop
add
and
push
lea
mov
mov
mov
movsb
in
dec
out
and
aam
mov
xchg
mov
mov
sbb
push
cmp
mov
push
pop
mov
call
fisttpl
iret
loopne
leave
mov
cmp
or
jp,pn
adc
movsb
pop
testl
xor
jne
imull
pushl
mov
loope
or
test
enter
adc
push
mov
xor
cmp
xor
fmulp
adc
pop
dec
pusha
pop
cld
shlb
test
lret
rcll
aas
arpl
imul
and
dec
ljmp
mov
pop
cs
fdivl
in
repnz
fwait
pusha
loope
int3
cmpsl
jmp
pop
int3
subb
xor
jle
roll
pop
mov
imul
pop
dec
xchg
inc
pop
jae
cmp
out
pusha
xor
sub
sub
or
inc
fcmovbe
xchg
mov
mov
dec
shlb
adc
and
add
call
andb
leave
and
jo
cld
adc
out
mov
mov
repnz
lahf
dec
ret
fs
mov
or
in
xchg
pop
sahf
out
push
jle
adc
adcl
shll
lock
hlt
lds
decl
inc
lock
jbe
ja
and
loopne
xchg
xchg
insb
hlt
pushf
lods
adc
push
and
and
mov
or
mov
mov
jp
cmpl
shl
mov
sbb
adc
sub
push
cmp
int3
aad
sahf
rol
pop
xchg
frstor
andb
out
dec
lds
iret
sti
jno
cmpsb
cltd
addr16
js
lds
mov
enter
push
xor
cmpsb
or
icebp
cmp
jb
jmp
cwtl
fcomp
xor
jmp
scas
sbb
jo
mov
push
and
xor
add
stos
int
sub
mov
mov
inc
pusha
pop
dec
enter
popa
cmp
cmpsl
jecxz
xlat
add
or
cmc
loop
push
or
ss
testl
test
mov
arpl
gs
and
sub
insl
test
mov
or
lahf
cmp
nop
mov
fcompl
sbbb
lret
pop
cmpsl
pop
sbb
mov
bound
push
test
enter
imul
mov
inc
ljmp
test
imul
lods
sbb
pop
lock
pop
or
setb
and
movsl
pop
xor
ja
sub
dec
mulb
mov
xchg
rcrb
sti
rol
movsb
push
loop
push
jno
movsb
dec
xchg
jmp
pop
xchg
and
dec
cs
mov
xchg
stos
popf
das
cmc
repnz
lahf
push
jb
cs
out
jg
mov
inc
push
leave
push
lret
movsb
pop
or
inc
sbb
jno
test
cmpsb
adc
push
jno
push
scas
and
lods
mov
test
in
addr16
push
or
fsubrp
sbb
push
std
xor
stc
cld
andb
inc
pop
ds
divb
stos
jge
leave
or
js
loope
or
push
push
hlt
mov
pop
push
sub
lds
add
lret
and
out
add
xor
xchg
and
dec
ficoml
sbb
lea
jns
sti
popf
ss
xlat
dec
fiadds
mov
push
nop
mov
sbb
inc
cmp
cmc
stos
or
adc
fdivrl
loop
or
lods
cmp
je
jmp
inc
push
loopne
inc
mov
bound
lock
push
pop
fsubp
push
mull
ret
test
outsl
in
jmpw
xor
inc
std
lahf
aaa
cmp
nop
push
add
sahf
test
outsb
jecxz
xchg
pop
push
cmp
stc
daa
addr16
pop
fidivs
int
push
lock
adc
test
arpl
test
loopne
xor
bound
sub
xor
dec
out
pop
inc
es
jb
xor
mov
add
pop
into
pop
mov
aad
lods
pusha
in
out
pop
sub
push
add
call
out
lret
clc
imul
bound
mov
mov
lea
outsb
xchg
xlat
stos
pop
outsb
sub
and
push
loope
unpckhps
xor
cmpl
pop
loop
or
mov
pop
mov
fildll
sub
mov
push
mov
add
xchg
add
xor
and
stc
jmp
imul
out
pushf
inc
rcrb
leave
je
cmpsl
lods
imul
xlat
mov
lods
jle
mov
movsb
pop
addr16
add
aas
adc
jp
jg
jg
pop
clc
call
lods
clc
inc
mov
xchg
out
and
mov
out
in
and
jle
sub
or
mov
in
fdivs
push
cmp
in
push
fwait
sub
or
rorb
in
loopne
sbb
jno,pt
cmp
pop
or
mov
shr
push
cmpsl
jno
fldl
out
jbe
lret
loopne
adc
inc
bnd
mov
outsl
add
pusha
sub
sub
pushf
nop
gs
jecxz
ja
idiv
lods
push
lahf
xchg
pop
fdivr
stos
sbb
repz
mov
dec
xchg
sub
push
addb
negb
test
adc
sbb
cltd
mov
test
btc
out
mov
stos
test
pop
jo
xchg
push
mov
pop
mov
sub
sub
mov
rorl
and
loop
add
aad
arpl
pop
or
inc
cli
jmp
mov
jne
lret
gs
dec
popa
lods
in
andb
ud1
outsl
ljmp
mov
mov
jbe
mov
fwait
sub
pop
shll
call
and
in
out
imul
push
movsl
sub
push
outsl
lock
les
cmc
cmpl
sbb
mov
pop
jnp
mov
jno
and
pusha
jnp
adcb
xor
and
sub
insl
ja
push
xor
pop
addl
addr16
inc
or
data16
repnz
xor
dec
int
jmp
sub
xor
inc
mov
cmp
cmovp
fcmovu
lret
test
mov
pop
push
adc
rol
add
adc
fidivl
sbb
test
and
and
stc
mov
ss
or
xor
leave
push
mov
sbb
add
lods
pop
shrl
jp
push
mov
inc
daa
cli
aaa
repz
enter
add
int
xlat
mov
aad
js
int3
sbb
test
push
jl
gs
xchg
loop
xor
pop
xchg
cmp
fistpll
dec
adc
push
cmp
jb
pop
sbb
ret
aam
imul
mov
pop
fsubr
sbbl
sub
leave
rcll
push
pop
bound
fs
sbb
or
aas
push
mov
inc
jge
push
cmc
daa
popf
aam
out
nopl
int3
xchg
out
pop
xor
adc
cli
into
arpl
pusha
inc
sbb
mov
dec
or
lahf
stos
repz
inc
inc
push
in
les
xor
lock
adc
shll
js
adc
push
imul
enter
movsl
cmp
xchg
add
stos
push
sbb
add
sti
pop
push
push
xor
adc
out
mov
and
out
pushl
bound
das
jne
and
outsb
dec
imul
add
xor
std
scas
mov
mov
sahf
xchg
dec
dec
sub
out
mov
sub
mov
sub
inc
push
cmpb
into
fstps
rcrb
jo
pop
mov
push
mov
add
lret
sub
insl
xchg
jo
pop
jae
test
clc
mov
cs
shr
and
jge
insb
sub
cmp
je
sub
jp
cmpsl
sar
mov
dec
push
mov
out
sbb
imul
sbb
cmp
mov
cmp
cmp
mov
pushf
pop
inc
aas
xchg
inc
adc
mov
lea
stc
jle
adc
sbb
push
mov
adc
xchg
data16
aad
outsl
mov
enter
pushl
iret
inc
mov
pushf
and
push
in
mov
mov
rcr
pop
dec
loope
rorb
popf
jmp
inc
out
dec
jmp
xor
sar
cmp
sbb
inc
jg
dec
mov
call
fstpt
adc
xor
bound
scas
ja
filds
pop
jmp
or
lods
iret
scas
add
andb
inc
mov
bound
shll
gs
in
cmpsb
into
mov
and
das
xchg
mov
and
jno
mov
call
or
out
rcrb
repnz
addr16
lcall
icebp
inc
loope
test
stc
in
xchg
add
pop
push
scas
ja
lea
pop
insl
mov
gs
lcall
adc
sbb
outsl
cld
mov
loope
cwtl
test
push
jae
or
push
jae
add
in
sbb
rolb
pop
inc
lea
jno
sub
sub
mov
out
ret
jge
outsl
mov
inc
dec
lods
out
mov
lret
mov
dec
xchg
adc
stos
stc
jo
xor
cmpl
dec
push
add
mov
cmp
fwait
cmp
xchg
push
scas
and
faddl
mov
or
jecxz
fistl
cmp
inc
xor
es
lock
sbb
add
fdivs
loop
cmc
adcb
xchg
loop
gs
or
mov
xchg
vpunpckhbw
inc
test
xor
jne
addr16
iret
and
and
sbb
inc
ja
inc
ficoml
daa
inc
call
mov
inc
je
rcr
dec
dec
out
pop
sbb
add
lret
dec
cmpl
push
pop
push
fs
aad
in
mov
fstpl
jo
lret
std
rorb
popa
mov
das
lods
sbb
xchg
add
mov
movsl
pop
cmp
insb
xchg
adc
leave
xchg
cmp
sbb
mov
jecxz
fistpll
push
ja
pop
sub
mov
inc
xlat
jb
push
cmp
add
mov
pop
test
dec
cmp
cmp
cmp
movb
mov
xor
insl
add
shl
fistpl
imul
push
and
jecxz
jge
lret
out
jle
xor
pop
ds
sbbl
jg
xchg
dec
pop
repz
mov
or
lahf
gs
adc
lcall
sub
mov
leave
dec
fmuls
jno
shll
xchg
hlt
insb
sub
in
adc
sub
stos
dec
xor
sbb
jg
bound
jl
and
push
pop
mov
mov
ja
test
mov
add
or
sbb
sub
mov
add
xor
lret
xchg
jl
lods
rcrl
arpl
dec
and
nop
pop
sub
aas
les
or
mov
jmp
sbb
push
sbb
shrl
orb
cmp
shl
or
wbinvd
icebp
lods
out
cmp
into
test
hlt
bound
jge
mov
dec
ja
imul
and
and
pushf
dec
stc
ds
aam
bound
leave
inc
mov
pop
popa
stc
movsb
nop
inc
dec
cli
int3
or
or
push
cltd
dec
shrb
pop
test
loope
lcall
scas
mov
cwtl
push
fstpt
xchg
subl
jp
cwtl
clc
mov
pop
outsl
pop
rdmsr
jge
pop
mov
inc
shlb
out
mov
aaa
arpl
pop
iret
and
cmp
js
jbe
and
mov
jecxz
add
add
mov
cmp
stos
pop
lods
jbe
xchg
rorl
pop
xor
subb
jb
mov
xor
push
lret
daa
cmp
rcll
cwtl
add
int
push
fisttps
pop
jl
aad
pushf
nop
mov
bound
mov
rcrb
adc
loope
out
cmpsb
mov
push
mov
enter
and
or
nop
mov
sub
push
xor
xchg
test
inc
and
aaa
fcmove
push
adc
cmp
jno
ljmp
imul
lods
flds
mov
add
inc
scas
fs
mov
sti
jmp
leave
test
xchg
pop
jnp
lahf
ret
or
aaa
push
scas
inc
rcrl
imul
push
mov
inc
test
mov
cmp
dec
adc
inc
pop
ja
pop
push
insb
xlat
inc
scas
fwait
xchg
fldenv
inc
ss
in
xchg
mov
icebp
ljmp
pop
aaa
and
jle
addr16
cmp
rol
pop
repz
loope
mov
cmp
loopne
das
test
jmp
xchg
ficoms
in
inc
mov
shl
jns
jae
daa
pop
dec
fs
push
pop
outsb
add
jg
xlat
int3
or
out
mov
scas
adc
jnp
and
fstps
pop
int3
and
in
dec
orb
add
outsb
ljmp
xor
xchg
push
repz
imul
xchg
pusha
sti
xchg
sub
mov
lock
aas
adc
lods
sbbl
or
mov
add
jo
push
lret
js
stc
mov
jbe
into
mov
add
aad
in
cmp
lea
push
mov
mov
pop
call
push
dec
test
incb
or
push
and
mov
call
std
das
ja
mov
inc
mov
mov
pop
xchg
shll
mov
outsb
add
add
loop
xchg
sub
mov
arpl
mov
roll
fdivrl
cmp
fildl
pop
inc
xchg
fisubs
jno
pop
lock
mov
adc
fldl
push
stc
xor
lods
or
lret
icebp
add
push
xchg
sbb
dec
fidivs
adc
jmp
aaa
idivl
fwait
stos
jge
inc
add
and
fs
cmp
mov
dec
mov
mov
out
xorb
repz
out
push
cmp
inc
std
push
and
outsb
pop
jno
movsl
fbld
psrld
mov
shr
sahf
mov
fidivl
fisubrl
xor
insb
cltd
cmp
loope
je
push
mov
inc
sub
pop
mov
out
dec
xchg
jmp
ja
pop
scas
aad
aam
inc
push
cmpsl
mov
xchg
dec
andl
in
mov
je
adc
sub
bndstx
stos
push
and
pop
or
idivb
or
jge
add
das
stos
cmp
lcall
inc
xchg
mov
push
stc
add
shl
add
mov
cmp
lcall
mov
movsl
stos
mov
lahf
adc
cmpsb
pop
cmc
incl
int3
push
aas
fnstcw
fs
dec
push
inc
out
pop
jno
xchg
xchg
in
mov
into
xchg
andb
fwait
stos
das
ds
sub
push
jb
push
out
push
jno
lea
fnstenv
cmp
sbb
mov
sti
and
popa
addps
gs
add
or
movsl
call
insb
cli
lret
cmp
scas
cld
dec
jo
into
lret
aas
int
inc
pushf
aam
pop
aaa
repnz
mov
sti
xor
and
subb
imul
xor
sbb
fisttpll
pop
pop
push
mov
jg
rorl
pop
js
sti
stc
movsb
add
pop
cmp
out
cmp
fmuls
outsl
mov
imul
mov
ror
int
fimuls
sub
or
pushf
stos
popa
addr16
cwtl
gs
out
jmp
pop
pop
fs
xor
xor
pop
fcomps
pop
dec
push
push
dec
sbb
xor
and
cmpsb
pop
pop
shlb
jge
repnz
xchg
xchg
int
daa
ss
popa
xor
std
mov
loop
aad
add
and
arpl
loope
movsb
and
mov
xchg
or
cmpsb
mov
sbb
hlt
ljmp
xchg
les
mov
push
leave
mov
sarb
push
push
cs
mov
add
xchg
mov
mov
mov
hlt
iret
enter
xlat
sbb
idiv
cltd
push
addr16
pusha
or
pop
loope
inc
aaa
cmpsb
jno
inc
pop
sub
or
inc
dec
mov
bound
imul
in
into
inc
insl
adc
dec
push
or
pop
inc
cli
loop
lahf
mov
call
pop
dec
pop
jecxz
fistpl
push
add
arpl
xchg
dec
sbb
xor
fwait
mov
xchg
lods
ret
cmpb
mov
cmp
fldenv
rcrl
shll
jns
sbb
push
pop
scas
in
pop
repz
jmp
pop
dec
dec
pop
cmpsb
mov
pop
cmp
popf
push
cwtl
inc
pop
cmp
cmpl
cmp
hlt
popf
les
or
push
or
insl
add
xchg
fcmovu
pop
in
or
in
clc
sbb
leave
push
sbb
lret
sbb
mov
mov
xor
ss
addr16
je
jecxz
xchg
xchg
dec
or
sbb
and
fidivrs
pop
mov
push
dec
mov
lcall
mov
cmp
lcall
lods
js
or
or
lret
je
arpl
sbb
push
aam
ss
hlt
data16
jne
add
ret
pop
aaa
mov
call
mov
mov
outsl
inc
lret
in
sar
dec
mov
daa
pop
xchg
adc
enter
pop
or
stc
push
repz
mov
out
mov
and
leave
add
and
movsb
push
jecxz
xlat
mov
out
popa
sbb
mov
setne
dec
jne
or
lods
test
call
add
xor
dec
cwtl
mov
adc
pop
in
sarb
jb
rorl
xchg
dec
push
je
sahf
jmp
xchg
inc
ljmp
popl
out
dec
xchg
ja
mov
aaa
mov
lret
arpl
or
pop
cs
fld
sahf
insb
sahf
mov
out
push
adc
add
push
mov
test
and
pop
add
rcrl
push
adc
mov
nopl
adc
push
jae
fisubs
mov
jns
cmpsb
mov
add
enter
and
push
in
insl
mov
movsb
ja
ss
mov
enter
adc
push
add
jno
enter
adc
mov
add
imul
cs
std
mov
movsb
cmpsl
xor
xchg
xchg
getsec
push
test
shlb
dec
loope
jp
pop
scas
addl
cmp
jl
mov
mov
repz
cld
sti
push
sbb
xchg
dec
sbb
pushf
and
ret
data16
les
test
pop
mov
xchg
ret
xor
repnz
or
mov
lcall
mov
pop
sbb
loop
std
push
mov
jmp
cmpsb
popf
add
sbb
adc
adc
sub
lods
xchg
fmull
insb
dec
subb
test
mov
add
in
andb
push
mov
stc
shrl
ficompl
dec
push
push
ficoms
je
cmpsl
add
shll
xchg
mov
movsb
shlb
xor
cld
add
jb
dec
inc
mov
xor
mov
in
jecxz
std
enter
jb
pop
mov
mov
into
jb
adc
xchg
ss
sbb
mov
gs
enter
jb
cmp
or
push
sbbb
gs
jle
push
stos
push
ret
mov
sub
fwait
loopne
xor
sahf
pop
push
push
test
leave
add
mov
stos
mov
jnp
push
sbb
aaa
sub
cmpb
inc
lock
or
pushf
jmp
push
xor
mov
pop
dec
push
push
cli
stc
or
fcoms
orl
and
test
aas
movl
jae
rorl
insl
insb
adc
out
call
fimull
push
test
mov
add
or
dec
sub
ret
xor
in
mov
data16
mov
pop
data16
sti
xchg
loope
idivb
cli
or
imul
fs
sub
mov
ja
mov
dec
xor
push
cmp
fcmovnbe
mov
push
xchg
inc
dec
jae
mov
test
cmpsl
ret
movsb
sahf
ja
pop
adc
enter
inc
and
adc
movsl
mov
pop
and
jge
ret
inc
add
aad
scas
inc
mov
jne
ficoms
xor
adc
rorb
xor
adcl
xorb
mov
mov
mov
popf
icebp
jno
xlat
or
push
scas
incb
outsl
and
dec
mov
out
sbbb
lods
jl
pusha
mov
sarl
mov
sub
push
mov
out
mov
rcrl
and
push
push
nop
jb
push
sti
dec
mov
pusha
cs
pop
mov
arpl
pushf
nop
xchg
or
ftst
ss
jg
lcall
jae
adc
hlt
mov
daa
mov
adc
mov
outsl
jle
lea
sub
ret
xlat
movsl
sub
cmp
jge
out
push
xor
push
mov
out
push
popl
and
repz
insl
fs
pop
mov
stos
add
dec
xor
popa
sahf
pop
push
mov
inc
in
je
push
jnp
jl
cmpsb
push
ret
lret
notl
add
jne
push
pop
adc
sub
and
inc
xor
add
cmp
hlt
icebp
arpl
repz
push
sub
xchg
mov
out
loop
add
fs
inc
inc
inc
lret
ror
dec
dec
jnp
icebp
cmp
push
lods
xchg
cmp
push
rorl
mov
jae
ja
leave
stos
movsl
arpl
jbe
cltd
aas
mov
sub
xor
and
adc
mov
inc
dec
xlat
jg
jb
cwtl
aam
lcall
jg
xor
xor
stc
pop
mov
movsb
cmp
jmp
cmp
loopne
movsl
sbb
das
and
mov
std
mov
ficoml
shrl
xchg
add
scas
outsb
imul
pop
loop
or
setne
jge
dec
push
pusha
lds
int
cmpsl
sbb
xor
cmp
cli
xchg
lret
lock
lods
into
shlb
adc
data16
cmp
mov
adc
loopne
dec
test
adc
aam
mov
gs
ret
push
xchg
mov
xor
push
pop
lcall
daa
stc
push
fprem
test
and
mov
mov
lds
mov
call
add
inc
push
mov
ficoms
imul
repz
pop
enter
mull
sbb
or
pushf
or
mov
sarl
pop
out
cmp
nop
in
xchg
mov
jg
and
or
pop
fcoml
cld
arpl
shl
aam
cs
daa
mov
mov
leave
dec
xor
xchg
mov
jle
dec
mov
js
add
mov
adc
loope
inc
adc
jnp
dec
or
je
mov
pushf
outsb
popa
pusha
and
dec
sbb
jns
jbe
inc
psrad
and
pop
or
mov
ja
mov
ljmp
push
push
push
xor
or
dec
ss
inc
mov
enter
add
pop
mov
pop
inc
sti
daa
sbb
mov
in
cmc
inc
sub
xor
out
mov
in
lea
push
mov
push
std
jmp
adc
add
incb
xor
adc
adc
mov
xchg
mov
pop
rclb
sbb
sbb
mov
jp
jl
xchg
sub
jns
iret
and
inc
mov
xchg
lea
out
test
lock
in
lret
dec
lcall
and
rorb
jbe
nop
sbb
js
mov
mov
mov
inc
cmp
adc
cmp
fwait
push
in
sub
rolb
pop
xchg
push
and
xlat
and
pop
push
mov
and
leave
lahf
stos
jne
xor
mov
mov
mov
repz
sub
mov
sub
push
pop
push
lods
sub
arpl
fdivrl
mov
shl
add
insl
push
jb
mov
jl
js
aaa
sub
in
inc
out
mov
sbb
lds
xchg
imul
mov
and
out
inc
or
cmp
lret
mov
testb
mov
insl
xchg
add
out
ret
dec
mov
lahf
inc
pop
repnz
scas
stc
xor
add
mov
cwtl
xor
lahf
stc
nop
mov
add
push
pop
xor
xchg
fimull
jno
cmc
or
dec
pop
pop
call
push
xchg
ds
popa
fstp
xor
movsb
repz
repz
add
out
sbb
jo
cltd
les
mov
or
rcrl
adc
cmp
jg
mov
sbb
xchg
mov
pusha
xor
dec
rol
jge,pt
pop
gs
nop
cmp
movsl
aam
inc
clc
pop
stc
cmp
adc
push
mov
xchg
mov
and
leave
movsl
jl
fucomp
lods
jno
fldenv
fstps
jne
repnz
xchg
arpl
pop
xchg
jg
sbb
aaa
pop
ljmp
aam
int
mov
ret
js
dec
sub
loope
insb
std
ret
mov
add
cmpsb
stos
mov
ljmp
and
mov
fnstcw
iret
jg
pop
xchg
and
sbb
mov
outsb
icebp
cli
lret
test
stc
adc
dec
cmp
xor
fstl
je
in
fdivrl
inc
aas
fs
out
pop
inc
cmp
mov
jl
shl
inc
jp
pop
adc
push
test
es
test
ret
push
clc
adc
inc
push
sbb
push
aas
cwtl
dec
jno
inc
sar
test
in
scas
jno
lods
xor
jle
or
push
sahf
or
adc
cmpsl
insl
pushf
les
cmc
rcl
sub
lock
push
rolb
call
add
int3
xor
mov
xchg
jno
xor
dec
scas
decl
scas
dec
adc
push
arpl
or
lahf
sahf
and
xchg
fcmovnbe
cwtl
dec
xchg
arpl
jno
adc
lret
mov
inc
out
test
in
pop
imul
test
outsl
cmp
rcll
mov
cld
mov
sahf
xchg
popf
out
jle
lcall
push
cld
push
test
mov
int
sub
insl
inc
push
insl
jle
xchg
xchg
push
jp
dec
pop
call
das
or
add
mov
ret
pop
jb
cmp
adc
sub
jno
shrl
or
in
arpl
idivb
lcall
add
jns
hlt
aaa
sub
jae
mov
pop
add
popl
cmp
ja
stc
xor
pushf
pop
mov
xor
mov
aad
shrb
or
fdivs
test
gs
scas
call
mov
mov
mov
pop
sub
arpl
decl
dec
pop
outsb
fstpl
inc
jo
adc
sarl
cwtl
lret
test
mov
outsl
cmp
and
xor
or
outsb
sub
hlt
pusha
mov
xor
outsb
inc
and
mov
daa
call
cmp
ljmp
dec
data16
and
ja
mov
out
xchg
jle
lods
sub
jne
popf
int
fs
push
xlat
push
popf
inc
lahf
jbe
push
sbb
pop
into
mov
dec
or
or
imul
fwait
test
jno
pop
xor
test
mov
xchg
dec
fsubrs
repnz
add
out
and
mov
fimull
sub
jmp
repz
add
and
test
int3
mov
cmovg
stc
iret
add
movsl
dec
lret
mov
add
mov
mov
mov
push
inc
cmp
out
lock
and
cmp
inc
and
iret
sahf
hlt
inc
divb
mov
lds
clc
sub
cmpl
xlat
int
repnz
int3
daa
ret
xor
ds
sahf
push
or
test
adc
out
and
cmc
sti
int3
mov
outsb
scas
dec
iret
mov
cli
jl
negl
pop
mov
push
in
scas
daa
iret
and
je
es
cmp
adc
pushl
lahf
clc
ficoml
sub
fwait
leave
jno
xchg
adcl
jecxz
add
shr
les
mov
push
stos
mov
je
pop
loopne
xchg
jnp
mov
add
and
xchg
mov
std
and
jb
outsl
cmp
decb
in
orl
xor
mov
fidivrl
sub
push
call
test
lcall
shrb
gs
stos
xor
dec
sbb
cltd
mov
xor
test
notb
lods
test
xchg
scas
jne
add
jbe
inc
fisttpl
nop
out
inc
repz
ljmp
push
pop
push
sbb
mov
push
inc
iret
xor
daa
and
ret
bnd
push
mov
in
stos
mov
xchg
mov
sbbl
inc
cmp
mov
xlat
int
inc
fdivrs
idivl
adc
mov
add
jbe
or
xchg
jbe
imul
stos
sub
jae
fs
scas
add
mov
rclb
cwtl
js
jo
mov
int
jno
out
pusha
mov
jle
daa
lock
jnp
mov
and
shr
stos
fwait
daa
into
jb
mov
sahf
and
mov
ficompl
jecxz
loop
mov
call
repnz
dec
arpl
icebp
mov
adc
xor
outsb
cmp
aaa
int
loop
ljmp
dec
jp
test
dec
movsl
loop
je
sub
ss
jl
push
lods
jl
and
sbb
or
cmp
bound
sub
jnp
test
fisttpll
add
adc
mov
fcom
and
rorb
ds
lds
mov
repnz
popa
sbb
fidivrl
pushf
cmc
mov
nop
arpl
mov
cmp
fimuls
sub
push
les
xchg
aad
mov
scas
cmp
in
jmp
mov
cmpsb
adc
cld
in
out
clc
iret
pop
pop
dec
cmp
pusha
mov
cli
cmp
je
inc
repz
xor
pop
push
or
xor
mov
adc
jno
aas
lret
out
xor
cld
sub
dec
lea
imul
cmp
push
adc
or
mov
aad
popf
daa
stos
dec
and
dec
inc
add
decl
push
sbb
ds
pop
loope
lret
fidivrs
out
xchg
shl
and
cmp
push
je
jns
or
lock
add
jecxz
pop
mov
inc
loop
push
or
dec
divl
add
cltd
jae
mov
bound
push
imul
xchg
sbb
xor
adc
loope
mov
imull
call
cmpsb
cmpl
inc
jp
shll
stos
xchg
inc
out
int3
clc
add
das
and
test
les
stos
lds
in
cmp
mov
addr16
lahf
pop
and
clc
test
jnp
pushf
jb
popa
mov
xchg
icebp
dec
sbb
mov
push
clc
adc
jb
jge
loop
inc
test
lahf
into
mov
jne
add
ret
mov
aad
leave
inc
cmpsl
add
cld
jbe
mov
rcrb
xchg
jl
adcb
rorl
bound
je
mov
jge
jo
cltd
les
jmp
es
push
insl
cmc
inc
addb
mov
jo
ja
mov
popf
lock
dec
dec
mov
jmp
or
jmp
pop
dec
cli
loopne
lret
shrb
push
inc
fstl
or
pusha
je
xchg
dec
dec
das
mov
push
dec
je
mov
inc
mulb
jnp
lods
sbb
jp
loop
mov
lods
movsb
adc
jbe
cmp
scas
aaa
lods
dec
pop
outsb
jae
sbb
push
arpl
jle
pop
pop
mov
push
pop
mov
pop
stos
add
mov
xor
or
xchg
aaa
fcom
and
andb
sub
lea
shll
loope
repnz
scas
pushw
xor
jl
pop
mov
repnz
ja
aaa
bnd
shlb
cli
push
scas
xor
rcrl
sub
lods
dec
test
and
jge
and
add
dec
mov
push
movsl
pop
add
jae
jno
jp
push
hlt
int3
lcall
push
push
pushf
add
lahf
mov
cmpsl
add
mov
dec
mov
sub
movzwl
leave
les
shll
loopne
subb
xchg
sub
ja
inc
adc
mov
test
sbb
js
xor
je
ljmp
xchg
pop
adc
je
repnz
mov
sbb
fs
mov
inc
out
push
sub
sub
sbb
dec
or
ss
fdivrl
adc
mov
xchg
mov
add
or
xchg
in
jl
and
shlb
leave
orb
and
aaa
jnp
sbb
mov
inc
repnz
cmc
xchg
icebp
sbb
pop
adc
mov
adc
aas
lret
cwtl
es
iret
adc
add
arpl
imul
jbe
mov
insl
cmp
test
mov
scas
cmp
subl
or
mov
loopne
add
sbb
jp
test
xchg
sbb
dec
jbe
push
jnp
flds
outsb
dec
in
cltd
or
xlat
push
pop
insb
inc
sub
push
and
mov
sub
sub
cmp
mov
mov
aaa
jo
sarb
test
shll
js
sub
pop
lock
fldenv
fs
mov
imul
mov
pop
icebp
shll
cwtl
je
and
pop
fsts
daa
jmp
mov
pop
orb
in
jle
sub
cmp
sbb
and
rclb
fwait
dec
int3
sub
mov
fcomps
inc
mov
es
lods
arpl
rcrb
rep
xchg
js
mov
inc
lcall
cwtl
fbstp
push
fldenv
jmp
pop
xor
sbb
push
cmp
xlat
mov
sbbl
inc
out
aam
mov
dec
cmp
mov
lcall
sub
jmp
mov
and
sbb
repz
or
xor
and
mov
mov
inc
call
loop
and
pop
lds
lret
maxps
jns
add
add
mov
push
in
movsb
in
xchg
xorb
mov
xchg
outsb
jl
xor
push
sub
nop
xchg
xor
mov
in
adc
dec
iret
lcall
pushf
xor
in
mov
shl
loop
das
pop
add
lret
and
inc
inc
cmp
adc
or
loopne
js
loopne
ret
jnp
mov
xchg
xor
cmp
cmp
ret
shl
mov
icebp
sbb
xchg
ljmp
mov
push
and
push
bound
sbb
cltd
pop
jl
pop
dec
mov
rcll
add
fnstenv
and
xor
inc
icebp
lcall
es
es
xchg
frstor
or
add
jns
fstpt
sbb
xor
push
or
xchg
adc
pop
mov
mov
data16
shl
lahf
fwait
pop
sub
cmp
adc
inc
mov
xchg
jmp
scas
dec
imul
mov
out
sar
or
cli
inc
and
cld
or
jg
aam
pop
xchg
pop
out
inc
cmp
jecxz
neg
mov
inc
push
mov
fildl
aad
and
jne
xlat
daa
jno
adc
add
fbstp
mov
cmpb
push
fdivrl
pop
add
xor
add
jno
adc
popa
mov
and
int3
adc
int3
jbe
leave
xor
sbb
xor
xchg
or
adcb
lcall
sbb
shl
sahf
aad
adc
stos
pop
add
dec
xlat
aam
std
push
mov
fs
ret
xor
xor
pop
cld
cli
ret
cmovo
shll
push
ss
mov
sbb
cmpb
xchg
popf
and
rcrb
push
cmp
movb
ss
mov
xlat
bnd
outsb
push
and
sbb
pop
ljmp
and
testl
mov
insb
leave
xchg
mov
out
push
js
in
mov
push
or
pop
nop
gs
push
fistl
mov
ds
fisttpll
call
mov
sti
mov
jle
push
and
scas
xor
cmp
push
popf
jl
cmpsl
jecxz
popf
les
and
mov
andb
mul
fnsave
dec
push
stc
movsl
or
xor
sbb
push
mov
cli
jnp
xchg
das
aam
shrl
lods
and
ljmp
mulb
sub
insl
inc
lods
ljmp
cmp
pop
add
outsl
cmp
adc
add
xchg
jae
xchg
adc
xchg
movsl
or
xor
mov
push
inc
inc
rep
out
jl
jnp
push
repz
cmp
aad
mov
jmp
pop
sti
mov
and
ud1
pop
add
xor
mov
dec
jne
mov
in
repz
scas
jnp
nop
jle
and
les
cmp
pop
ds
push
in
jmp
stc
push
fiaddl
push
dec
mov
and
sbb
or
lods
mov
lods
mov
loopne
rorb
outsb
fwait
call
sub
mov
mov
rolb
in
push
dec
xlat
je
dec
or
ficoms
xor
jno
bound
in
add
pop
ljmp
and
mov
lret
pop
cmc
out
pop
push
shlb
mov
pusha
lock
nop
inc
ja
jg
loop
daa
xorl
loope
rorl
and
inc
loop
add
jb
testb
jae
xor
lahf
lods
test
insl
sub
sbb
mov
sub
push
outsb
repz
insl
les
repnz
jle
and
scas
xchg
jb
adc
cmp
test
fcmovnbe
stos
int3
xchg
insb
lret
adc
mov
pop
in
inc
loop
mov
push
and
lods
loope
add
jecxz
dec
push
rcrb
push
adc
mov
aas
inc
insb
call
aad
jno
or
xor
cmp
jno
jp
js
push
inc
lds
mov
popf
cltd
aad
cmp
sub
and
mov
dec
lret
lds
or
out
lret
or
push
xchg
xor
inc
inc
mov
lds
adc
inc
inc
jo
pushf
mov
inc
dec
lods
testb
and
jo
test
and
cmc
push
adc
xor
in
mov
fistpll
lret
mov
pushf
std
das
daa
hlt
inc
iret
lods
sub
mov
rclb
cwtl
ffreep
idivb
mov
sbb
adc
test
sub
repz
test
mull
sbb
jg
test
sub
sub
lods
xchg
pop
sbb
movsb
push
jbe
jg
call
pop
sbb
sbb
jmp
insl
insl
popa
xchg
fimull
cmpsb
pushf
in
pop
out
or
testl
xchg
ffree
push
cmp
mov
aaa
fmuls
sahf
mov
or
std
push
lea
pop
loopne
xchg
ss
jmp
jns
cmp
insb
dec
pushw
xchg
mov
sub
xchg
add
mov
das
cwtl
loopne
aad
mov
lret
loop
pop
mov
outsb
add
push
mov
xor
stc
jae
ds
cmp
loop
xlat
popf
movsl
add
push
add
roll
aas
imul
les
and
jecxz
mov
push
notb
mov
es
ret
pop
mov
jg
inc
add
repz
stos
xchg
loope
pop
roll
jbe
andl
adc
cmpsl
subl
movaps
in
imul
dec
in
adc
inc
imul
and
hlt
std
jecxz
mov
and
in
cmc
jmp
pop
and
mov
addr16
sub
and
or
icebp
add
push
shl
aaa
gs
jl
sbb
jecxz
shlb
mulb
dec
lret
gs
cmp
addr16
fbld
xchg
dec
inc
xor
xchg
int3
idiv
movsl
fimull
testl
add
scas
push
push
inc
addl
shl
out
and
movsl
movsl
jge
xchg
scas
mulb
sbbb
xchg
pop
inc
ljmp
call
push
gs
mov
ljmp
cmpsl
lods
jmp
ss
xor
mov
movsl
popf
push
enter
mov
add
lret
pop
mov
sbb
icebp
or
xor
hlt
mov
repnz
cmp
xor
and
int3
es
imul
dec
mov
push
lret
rcr
mov
test
mov
into
push
leave
shrb
adc
in
inc
dec
mov
xchg
fucomp
fld
dec
aam
sbb
jne
inc
fistpl
scas
orl
int
hlt
dec
sub
stc
push
lret
jl
shlb
jle
xchg
or
fnstsw
or
ljmp
xor
push
pusha
inc
stos
and
mov
shll
push
and
dec
inc
lea
pusha
mov
rcrb
sbb
xchg
push
and
insl
in
scas
ret
out
cmp
cmp
pusha
ret
test
push
mov
out
adc
out
ljmp
pop
lods
jb
movl
xchg
scas
xchg
lcall
pop
aam
nop
or
sbb
dec
fdivl
push
gs
jl
adc
inc
loop
jle
pusha
js
add
xor
push
outsb
and
into
lock
inc
movsl
mov
push
adc
xor
ret
xor
xchg
sbbb
fsubs
enter
pop
lods
xchg
addr16
outsl
mov
stos
pop
dec
lret
mov
imul
push
fidivrl
cwtl
and
mov
jg
mov
adc
iret
fsubr
xor
cmp
je
setae
pushf
into
ss
push
xchg
mov
ds
cmp
jge
loopne
mov
aam
daa
xor
cltd
sbb
xchg
sbb
mov
jle
repnz
sarb
dec
lea
fsubs
fs
ret
inc
mov
add
mov
hlt
std
adc
mov
jo
cwtl
hlt
lret
insl
pop
adc
mov
fistpl
dec
push
mov
pop
push
loope
stos
add
in
out
pop
out
in
mov
or
jecxz
les
hlt
out
fwait
xor
dec
pop
inc
aas
fwait
mov
notl
ss
push
lahf
sub
sbb
cmp
rorl
inc
add
dec
rcr
movsb
repnz
or
pop
shr
cmp
ret
and
dec
pop
gs
dec
add
mov
cld
out
pop
cmp
inc
push
addb
cmp
pop
lret
and
cmp
adc
inc
mov
push
into
inc
stc
stc
mov
adc
sub
test
mov
push
jno
jp
mov
repz
pop
popa
cmc
lods
sub
insl
adc
js
cmpsb
mov
xchg
cmp
dec
lret
ror
idivb
push
jmp
fbld
mov
leave
inc
xchg
adc
gs
or
test
pop
xlat
sub
insl
xchg
imul
cwtl
and
stos
fwait
cmpsb
cmp
xchg
popa
mov
test
lds
push
fisubrs
inc
imul
sbb
outsb
mov
aaa
mov
lahf
leave
xchg
xor
mov
mov
pushf
mov
ljmp
imul
test
xchg
dec
push
or
push
adc
out
push
aam
jnp
scas
add
in
leave
fs
pop
nop
leave
push
dec
mov
divl
cmp
xchg
arpl
pop
pop
out
dec
jne
mov
mov
cld
mov
dec
arpl
cmp
add
sahf
cmp
test
pop
mov
jbe
jb
das
jp
jb
fdivrl
lock
inc
cmp
inc
push
pop
mov
or
cmp
or
xchg
mov
adc
iret
mov
icebp
xchg
gs
mov
add
xor
fnsave
out
sbb
mov
jbe
push
ret
or
pop
sbb
inc
push
repz
stos
push
pop
popf
gs
dec
jb
decb
pusha
push
xchg
ret
cltd
inc
and
sbb
add
sub
daa
aad
test
xchg
and
into
push
mov
cmp
xor
ljmp
and
bndldx
pop
test
jbe
scas
jb
pop
add
and
insl
nop
jmp
push
repnz
mov
mov
dec
gs
cmp
rcr
mov
lahf
jae
aas
mov
cmp
add
pop
repnz
lods
mov
aam
fiadds
inc
jge
test
repnz
out
ljmp
jmp
sbb
fsubr
test
pusha
sbb
xchg
cmp
pop
xchg
push
inc
xchg
orb
push
scas
jge
push
out
xor
outsb
sahf
pushf
mov
mov
icebp
pushf
inc
hlt
jae
pop
jbe
dec
cmp
push
inc
and
fldt
and
xchg
inc
xor
nop
sub
pop
sub
push
pop
dec
sbb
in
inc
jge
mov
add
rcrb
or
dec
inc
clc
lea
sarb
test
inc
or
push
jne
shll
jecxz
cmp
call
push
push
pop
push
mov
add
mov
adc
and
scas
push
lea
jbe
mov
inc
mov
and
clc
imul
jp
hlt
popa
push
mov
arpl
scas
jg
iret
into
mov
inc
add
mov
and
sbb
loope
mov
adc
cwtl
sbb
fwait
dec
out
out
cmp
in
stos
insl
jle
ret
pop
push
mov
xchg
pushf
arpl
mov
imul
aaa
sbb
movsl
loopne
mov
repnz
cmpsl
insl
mov
jmp
repnz
fiadds
inc
jge
sub
adc
xchg
sbb
pusha
mov
popa
stc
lret
leave
dec
push
fcompl
cmpsl
lea
jp
shll
out
repnz
inc
scas
sbb
cmp
xor
int3
lahf
into
into
mov
jmp
mov
loopne
dec
idivl
jb
pop
xchg
inc
or
stos
data16
adc
push
repz
xchg
pop
aam
shl
pop
jmp
daa
out
cli
pop
mov
inc
test
mov
add
sub
push
cli
mov
lret
mov
lods
push
rcrl
in
test
cmp
pop
negl
or
repnz
push
movsb
arpl
gs
mov
mov
push
js
in
xchg
sub
enter
scas
or
jmp
sub
shrb
push
sbb
jno
dec
cld
mov
inc
sahf
iret
pusha
mov
jl
mov
ljmp
cmc
mull
scas
jp
jmp
iret
and
adc
dec
loopne
dec
add
xor
adc
lcall
lfs
xlat
fstpl
cmp
sub
cmpsb
jg
stos
aaa
dec
jge
in
addr16
fs
cmp
mov
sbb
xchg
leave
mov
dec
sti
inc
push
push
jmp
shl
push
pop
lahf
sbb
out
and
inc
je
notb
fisubrs
addr16
jmp
pmaddwd
inc
daa
push
sti
inc
clc
fstl
in
xchg
inc
jae
inc
mov
xor
outsl
jg
subl
loope
add
aam
dec
xchg
ds
pop
pop
fsubrl
std
stc
pop
js
out
xchg
or
cmp
sarl
dec
mov
mov
add
lds
xor
cwtl
push
rclb
scas
pop
notb
rcl
cs
test
xor
cmpsl
shll
inc
mov
and
aaa
xor
pop
sbb
pop
push
dec
push
sub
jb
push
mov
mov
nop
enter
sti
test
xor
mov
insl
or
mov
mov
popa
ja
or
aas
mov
pop
cmp
xchg
dec
lret
fld
xorl
sub
jmp
pop
mov
in
aad
cmp
testl
inc
jae
popa
dec
push
dec
xor
iret
jne
insl
dec
jecxz
ret
add
clc
pop
jmp
pop
repnz
rcrl
cmovle
inc
rcrl
pop
into
pusha
clc
and
inc
lods
std
mov
dec
xor
cmpsl
lock
jmp
mov
push
and
pop
push
fldcw
sub
mov
sub
adc
aam
push
lods
insb
lret
outsl
js
and
fsubp
push
fmuls
dec
push
test
cltd
into
popl
inc
sbb
aaa
in
ret
mov
jge
test
xor
imul
mov
pop
rdtsc
xlat
xchg
push
lock
scas
pop
lock
jmp
dec
add
adc
xchg
jmp
xor
add
dec
in
rorl
mov
dec
push
in
pop
loopne
scas
dec
test
mov
pop
pop
sahf
fistpl
and
and
cltd
sub
sarb
in
dec
mov
add
jge
sub
inc
int3
xchg
dec
lds
and
mov
call
rcrb
xor
std
fnstenv
jo
sbb
aad
fimuls
sbb
push
sub
fdivrl
pusha
cmp
aas
cmc
inc
dec
xchg
mov
lods
js
cmpsb
and
and
insb
sahf
jp
jae
aaa
sbb
sti
test
dec
or
gs
push
sarb
add
mov
fbstp
inc
test
sub
push
js
pop
pop
sbb
scas
sbb
mov
fldl
xchg
mov
pop
mov
adc
mov
in
call
icebp
mov
mov
mov
cmp
pop
shl
and
push
add
cmpsb
scas
inc
sbb
loope
sbb
mov
add
xchg
cmp
lret
std
je
call
mov
and
lds
mov
lret
push
push
sbb
or
ja
xor
out
xor
pop
nop
out
lret
xchg
lea
sti
cli
ror
dec
lret
daa
cmp
stc
adc
sub
dec
push
pop
cmp
jb
jg
out
por
aam
mov
or
movsb
ja
xchg
shll
lahf
into
sub
fistl
cmp
add
mov
mov
mov
lea
rcl
lods
push
sbb
fbld
mov
loop
and
cld
inc
fs
ret
xchg
hlt
es
pop
adc
jge
in
js
imul
ret
loopne
cmp
and
mov
cmp
jns
rorl
push
or
jb
sahf
sbb
and
sbb
aam
ret
stos
xchg
jne
xor
mov
sub
pop
lods
loop
pushf
mov
and
lcall
lret
shlb
scas
test
test
mov
aas
out
popf
adc
cmpsb
pop
ret
pop
add
jmp
lock
mov
pop
sub
xor
and
push
push
cmp
and
push
add
dec
pop
and
cltd
hlt
and
xchg
int
or
aaa
add
dec
jle
or
pop
mov
lahf
xchg
fistl
mov
adc
push
mov
sub
jg
js
jecxz
negb
fs
push
es
fistps
mulb
fisubs
imul
stos
sarl
nop
sbb
fsub
cld
shld
and
cmpsb
push
or
jae
out
mov
addr16
aad
arpl
fmulp
stos
cli
in
dec
xchg
cmpsb
mov
jl
xchg
out
loopne
pop
cld
dec
jg
lods
hlt
push
jecxz
imul
adc
jle
add
inc
notb
push
test
movsl
xor
xchg
insl
pop
shl
add
jo
mov
xor
ljmp
jno
pop
dec
fnstenv
int3
fnstsw
call
jge
mov
mov
add
dec
call
ljmp
jns
mov
in
fisubrs
mov
lret
pop
xorb
pop
xchg
scas
xchg
stos
pop
pop
in
sbb
hlt
stos
aam
or
mov
stos
aaa
pop
pop
lods
or
stc
enter
add
test
push
dec
adc
call
gs
jb
mov
mov
or
out
notl
mov
das
cmc
call
xchg
add
insl
xchg
icebp
push
push
adc
inc
add
push
add
push
lock
mov
mov
aad
mov
insb
jb
mov
push
inc
push
daa
mov
adc
mov
adc
inc
adc
lret
pop
xor
into
scas
mov
push
pop
adc
push
mov
and
enter
xchg
movsl
imul
jle
scas
fwait
enter
int
ret
lahf
sbb
in
mov
jg
sub
mov
mov
mov
insb
loop
pop
pop
in
cmp
push
in
pop
cmpb
arpl
and
dec
fisubrs
mov
push
push
lret
pop
add
iret
fs
outsb
push
inc
cmpsl
shrb
movsb
mov
cmp
ss
out
mov
popf
xchg
data16
daa
push
test
dec
je
xor
and
in
jnp
and
jo
cmp
xlat
xchg
mov
insb
push
andb
lret
in
loop
and
mov
mov
pop
sbb
or
jb
pop
add
out
dec
stos
dec
popa
or
mov
movsl
loop
pushf
cmp
xchg
shlb
lea
adc
gs
adc
sub
dec
xor
mov
popa
adcl
push
xchg
outsl
stos
and
ja
jbe
enter
sub
int3
cmp
rcrl
xchg
sti
incl
gs
jns
pop
movsb
fcomi
or
push
outsl
push
test
mov
adc
dec
inc
lea
loope
shrl
xor
pop
faddl
push
cmc
out
fcoms
cmp
and
faddl
mov
sub
gs
fimull
mov
gs
add
outsb
es
mov
das
add
and
sbb
adc
or
outsb
mov
push
cmpl
in
adc
out
sub
fiadds
pusha
xor
sub
add
test
fcoml
imul
pushl
pop
aas
push
repz
addr16
inc
mov
adc
dec
push
gs
xor
push
popa
inc
dec
test
pop
mov
mov
je
jmp
enter
insb
add
sbb
push
popa
js
enter
dec
or
ljmp
pop
or
insb
mov
test
cmp
in
clc
sbb
mov
test
xchg
jmp
and
push
les
test
inc
add
in
dec
loope
dec
add
hlt
inc
mov
pop
insl
aad
pusha
arpl
jmp
xor
inc
sub
loope
std
mov
addr16
xchg
add
stos
add
inc
outsb
add
xlat
fdivr
and
inc
and
jnp
out
out
add
fsubs
dec
sub
test
mov
jbe
jp
xchg
mov
sbb
and
das
mov
gs
add
ljmp
jns
sub
arpl
push
out
pop
iret
in
addr16
lds
xchg
scas
cmp
add
sbb
inc
test
adc
mov
inc
jp
xchg
xor
add
cld
add
cld
outsb
mov
rcrl
jb
cmc
test
pusha
xor
cmp
mov
push
xchg
out
mov
jb
jg
xor
js
loop
aas
repz
call
testl
dec
mov
adc
push
sub
decb
jge
orl
loopne
jae
cmpsb
arpl
rorl
adc
dec
out
lock
out
fstpl
mov
cmp
cwtl
or
add
sbb
jo
pop
mov
lret
mov
movl
repz
jmp
jae
andb
nop
xchg
arpl
cmp
lret
cwtl
sub
iret
xor
jno
mov
push
cmp
add
js
mov
mov
dec
fwait
scas
ljmp
mov
mov
mov
sbb
sub
std
or
sbb
stc
fdivl
mov
rclb
imul
pop
jmp
testb
test
xchg
jb
jge
cmc
scas
push
sub
xor
mov
fsubl
push
pop
loop
cmp
mov
mov
sbb
sti
xchg
push
clc
and
mov
das
dec
jb
cmp
test
xchg
jno
inc
lahf
pushf
push
movsl
cmp
push
mov
mov
or
xchg
movsb
add
sbb
pop
aam
mov
adc
addb
pop
clc
sub
and
aad
pop
cmc
sbb
pusha
mov
push
dec
leave
mov
leave
jg
scas
ret
cs
xchg
inc
insl
mov
popf
xor
stos
add
jne
fmul
lcall
mov
adc
mov
data16
mov
hlt
int
push
gs
fcoms
cmpb
test
dec
add
rcll
int
pop
and
push
mov
mov
mov
lret
aas
cli
popf
cmc
mov
or
xchg
xchg
out
mov
xor
mov
mov
mov
orl
sub
icebp
inc
jmp
sbb
icebp
das
insb
mov
and
push
scas
jg
scas
movl
jecxz
out
fdivrs
daa
and
out
inc
xor
add
subb
addr16
mov
insl
dec
sbb
nop
inc
or
sub
jp
sbb
dec
addl
xor
push
lds
xlat
mov
leave
fdivr
or
xchg
mov
cmpsb
aas
pop
in
fbstp
dec
in
or
into
out
repnz
call
jle
lods
pop
rorl
mov
xchg
imul
mov
inc
jl
repnz
inc
cmp
add
push
xchg
fs
scas
out
outsl
jp
fld1
not
repz
mov
add
cmc
out
movsb
ficomps
mov
js
shrl
out
pop
mov
js
mov
lock
lret
lret
in
cmp
aas
cwtl
outsl
jecxz
xchg
fidivl
push
inc
mov
adc
jle
jo
in
pop
jle
pop
sarb
mov
leave
pop
rorb
sub
mov
dec
scas
push
cmp
mov
outsb
jne
js
les
and
shll
loop
push
xchg
loope
xchg
sub
push
insl
xor
add
dec
adc
mov
mov
jbe
cmc
popa
imul
repnz
jp
stos
ret
jp
or
xchg
pusha
mov
fdivrs
fs
cwtl
aad
jbe
ljmp
shrl
scas
lock
or
bound
ror
rclb
stc
xor
sbb
fdivl
cmpsb
pop
ja
sbbl
xor
aaa
mov
xlat
xchg
mov
pop
ja
fistl
inc
je
or
push
jg
mov
or
inc
inc
xchg
mov
cmp
jno
notb
jbe
xor
repz
addr16
stos
mov
jns
mov
out
pop
imul
push
or
cmp
sbb
or
xchg
loop
mov
test
jno
ficoml
iret
and
mov
cld
test
adc
lahf
jl
pushl
out
xchg
rcl
lcall
js
pop
sarb
sbb
shlb
loope
mov
jp
adc
dec
pop
mov
jl
data16
jno
ret
pop
imul
push
mov
in
mov
push
xor
repnz
fs
push
insl
dec
pop
add
insb
lods
cmpsb
mov
out
cmp
pushf
mov
out
pop
cli
sarl
inc
and
out
nop
dec
lret
cmp
cmp
adc
xchg
mov
push
mov
jbe
jns
movsb
push
xchg
repz
adc
dec
xor
push
into
std
xchg
imul
insl
out
lcall
imul
mov
mov
or
jne
cmpsb
pop
sbb
rcr
stos
inc
adc
dec
inc
loope
lcall
nop
out
jbe
jl
push
vpminub
or
in
dec
sbb
xchg
cltd
aad
out
fsubs
stc
jecxz
sarb
dec
inc
sbb
and
jp
int
mov
push
xlat
push
pop
gs
shll
or
push
dec
negb
imul
negl
in
mov
test
add
nop
push
icebp
inc
or
fisubrl
hlt
jg
cli
mov
push
scas
pop
xchg
das
pop
in
sub
jl
cmp
mov
mov
fdivrp
mov
test
mov
andb
subl
xor
out
add
push
in
pop
popf
jae
icebp
subb
cmp
pop
sub
push
lret
cli
test
scas
scas
mov
fbld
mov
cmpsb
mov
jns
mov
add
rorb
cwtl
and
movsl
call
cmp
sub
rolb
jp
cwtl
pop
sbb
xchg
std
or
ja
mov
sbb
mov
dec
cmp
dec
mov
scas
or
add
pushf
out
fwait
add
int3
out
xchg
cmp
jp
cli
xor
sbb
lock
mov
in
hlt
loope
jecxz
out
out
loop
or
or
les
push
stos
push
jg
das
imull
mov
das
ffreep
mov
lods
sbb
mov
aaa
stos
scas
dec
mov
or
adc
inc
adc
dec
lds
mov
or
fistpl
cmp
sbb
shr
jne
jo
lods
scas
adc
pop
sub
push
icebp
adc
or
gs
fsts
xchg
scas
mov
push
fprem
or
call
jo
xchg
ds
movsl
push
shrl
jb
xor
xchg
mov
adc
test
xor
xchg
add
sbb
cmp
enter
xchg
lahf
or
movsb
lods
in
sub
mov
lea
shrl
ss
leave
popa
sub
idiv
scas
cmp
arpl
jno
gs
push
fwait
repnz
loopne
dec
xchg
andl
and
inc
sbb
call
mov
fsubrl
cs
adc
push
dec
xchg
cltd
movsb
sub
sbb
test
mov
es
push
or
dec
dec
sbb
jl
dec
xchg
jmp
xlat
pushf
pop
hlt
lds
cmc
in
ret
test
in
mov
icebp
fwait
jle
cmp
sahf
addr16
test
pop
mov
mov
and
or
add
dec
shr
pushf
or
cmp
cltd
jecxz
or
addr16
gs
sbb
ror
add
inc
xchg
out
pop
ja
adc
fimuls
repz
dec
xchg
and
es
pop
daa
fs
decl
jg
loopne
inc
xchg
test
xor
outsl
shll
add
xchg
xor
and
sub
movsl
adc
js
cmp
les
adc
mov
cmc
xchg
jnp
adc
xor
jmp
mov
push
pop
lds
cld
or
xor
push
xor
mov
mov
inc
int
mov
pop
mov
mulps
je
mov
jno
stos
lahf
daa
inc
call
jb
jg
pop
shr
scas
pusha
loopne
xor
xor
inc
xor
or
out
cmp
aaa
test
ja
pop
out
adc
mov
add
repz
inc
sbb
sub
cld
mov
sub
sbb
rol
sbb
add
js
sbb
pop
mov
dec
xchg
jge
loope
xor
mov
mov
push
pop
pop
xchg
es
dec
jb
mov
popf
mov
pop
push
mov
jae
add
dec
xor
stc
mov
int
subb
xor
cmc
ljmp
mov
mov
arpl
push
pop
mov
push
mov
stc
arpl
push
mov
addr16
dec
adc
mov
nop
jge
into
cmp
mov
dec
les
or
lahf
mov
nop
fsubs
jbe
out
push
inc
out
sbb
add
in
orb
or
std
icebp
xchg
jmp
testb
mov
jne
lret
lds
cwtl
jg
fcoml
add
adc
add
push
aaa
push
mov
pop
fistl
pusha
add
shr
int
mov
adc
cmp
mov
or
loope
sub
push
cs
push
push
insl
sbb
ds
mov
sbb
call
lock
jle
or
das
shrb
loopne
aad
int3
jmp
ja
push
mov
cwtl
rol
ljmp
push
dec
pop
push
insb
filds
xor
dec
sub
pusha
out
or
mov
mov
pushf
xchg
inc
jno
mov
push
std
inc
in
mov
pop
add
push
rcll
scas
aam
popa
mov
popf
test
sbb
jo
ljmp
arpl
xor
cmp
lahf
jb
add
outsl
xchg
jge
push
fs
mov
pop
aas
push
lahf
loope
lods
sahf
jp
push
fisttps
xchg
sbb
popf
fistpll
mov
add
adc
mov
scas
adc
push
jno
lcall
bound
scas
mov
jno
push
test
sahf
mov
pop
leave
aam
dec
dec
insl
push
nop
out
rorl
std
out
xchg
fdivr
daa
rcll
clc
and
mov
and
fcoml
dec
gs
and
aas
les
inc
dec
imul
or
xchg
xor
inc
sbb
pop
out
repnz
inc
je
mov
test
cltd
sub
test
push
mov
rcrl
xchg
jo
movsl
mov
mov
cmc
mov
mov
and
stos
mov
push
sbb
test
push
stos
push
pop
sub
inc
pavgw
shr
test
jle
je,pn
test
pop
outsl
std
inc
sub
aas
xchg
nop
mov
imul
sti
neg
sbb
mov
cltd
loope
and
and
pop
and
divl
mov
inc
mov
add
mov
andl
je
inc
cmp
cmp
xor
add
std
in
inc
sub
mov
push
or
into
out
push
sbb
mov
mov
les
xor
pop
cltd
js
cmp
in
jb
mul
ficoml
iret
push
cmpb
rorb
ret
xor
cmp
jg
enter
mov
mov
sbb
xor
pop
rsm
arpl
js
cmc
js
xchg
mov
iret
push
mov
cmpsl
ss
insb
or
out
sbb
and
daa
inc
stc
sbbl
cmc
mov
imul
add
push
out
cwtl
jb
jg
insl
and
bound
loopne
mov
dec
mov
cmp
mov
mov
xchg
test
push
fs
subl
in
and
mov
imull
aam
out
add
dec
jge
mov
inc
mov
insb
test
outsb
cs
movsb
mov
pop
or
stos
dec
mov
shlb
inc
add
fdivl
stos
repnz
dec
inc
in
ret
les
out
inc
jbe,pn
jmp
inc
fiadds
jns
mov
and
andl
cmp
popf
cs
loope
orl
ficoms
dec
mov
das
sub
inc
or
pushf
lods
mov
cld
mov
hlt
stos
jne
ficoml
mov
cmc
lds
push
cmpsb
outsb
shl
xchg
mov
dec
mov
sahf
test
xor
lock
push
or
xor
push
lahf
dec
addl
decl
mov
out
mov
mov
lea
cmc
decl
inc
push
leave
push
lcall
add
aaa
stos
sub
mov
jns
ljmp
out
gs
sarl
inc
ss
inc
popa
scas
inc
pop
dec
sbb
xor
xchg
int
or
adc
mov
ror
stos
push
sbb
sbb
iret
dec
scas
push
stc
adc
dec
lret
cltd
xlat
stos
add
push
fimull
enter
js
ds
mov
adc
fwait
aaa
les
sub
sbb
orb
out
adc
lret
cld
pop
sbb
popf
addb
je
inc
cmp
cmc
repz
pop
jmp
sbb
dec
test
insb
es
clc
mov
movsb
or
stc
lds
cmp
or
add
enter
and
mov
push
jno
xchg
cmp
inc
xchg
cmp
call
inc
fisubrl
out
and
sbb
iret
shlb
xchg
loop
rcrb
dec
jge
mov
test
inc
aam
or
jp
movsl
mov
cmc
ficoml
and
lds
lret
iret
xor
jbe
lds
xor
add
sahf
dec
pop
dec
sbb
sub
or
mov
mov
shl
inc
testb
jbe
add
ss
cmp
pop
mov
lret
mov
movsb
in
scas
cli
insb
aas
movsl
fs
pusha
mov
inc
jmp
or
dec
pop
push
je
cs
rorl
cli
in
nop
iretw
aaa
jb
cmp
loope
fbstp
pop
or
es
lcall
in
jns
xchg
xor
add
stc
in
cmp
lods
rol
je
cmp
leave
mov
enter
leave
sub
loopne
pop
mov
push
insb
xor
xchg
cmp
pop
inc
inc
sub
bound
addr16
das
int
xor
xor
dec
ja
inc
mov
xchg
movd
jae
inc
stos
inc
repz
popf
dec
fcomi
test
mov
push
adc
mov
xchg
dec
xchg
jns
sbb
outsl
xchg
push
sub
xor
pop
sbb
push
inc
ror
xchg
push
jp
and
movsl
cmp
lret
sti
xchg
jne
and
fbld
ret
mov
push
pop
xchg
shlb
ret
sbb
inc
xor
pop
outsl
nop
jmp
mov
pop
xchg
mov
imul
test
xchg
js
push
ret
ja
pop
dec
fadds
add
test
loope
aas
add
and
pop
cwtl
sbb
jl
fidivrs
mov
sahf
ja
in
jne
ss
push
dec
cs
subb
adc
jbe
push
mov
add
mov
neg
imul
xorl
push
pusha
in
sbb
jnp
out
push
pop
out
sub
dec
mov
bound
or
jge
mov
ffree
inc
push
sbb
cmp
mov
bound
jns
sahf
jle
mov
and
and
popf
pop
vpmaxuw
pusha
adc
pop
in
hlt
in
cs
adc
in
jne
mov
pop
aam
scas
xor
out
lods
dec
xor
iret
xchg
or
pop
or
jno
and
ljmp
fsubr
push
cmp
fistps
aam
sbb
insl
push
fcoms
in
sub
mov
sub
sub
cmp
mov
popa
call
sub
rorl
mov
lcall
dec
adc
iret
mov
enter
adc
jnp
sub
pop
shrb
add
in
pushf
loope
add
add
adc
jl
adc
or
lcall
xchg
fucomp
insb
repnz
mov
lret
in
mov
adc
test
sub
add
in
fucomip
push
into
lea
outsl
mov
lahf
in
pusha
add
dec
push
shrl
xorb
mov
add
aad
push
insb
popf
mov
test
or
sti
mov
push
cmp
jg
lods
iret
inc
andps
push
inc
inc
ljmp
or
inc
idivb
pop
jb
ret
fs
jnp
xorl
mov
repz
jl
jp
push
mov
and
dec
std
mov
pop
and
notl
cld
ret
push
xchg
mov
pop
out
mov
push
ss
add
jecxz
cmpsl
and
cwtl
outsb
and
aam
cwtl
out
pop
into
xchg
jns
cmp
daa
xor
inc
sub
dec
mov
mov
and
ljmp
or
icebp
jb
jg
test
cmp
ffree
popa
sbb
lcall
mov
jmp
lret
jp
pop
sbb
mov
inc
or
std
inc
xor
sub
sub
data16
mov
stos
or
cltd
inc
stos
jno
inc
out
mov
movsl
scas
cwtl
andl
and
jo
pop
test
sti
loopne
xlat
dec
fwait
mov
cmc
sub
lcall
repz
clc
xchg
loopne
cmp
mov
stc
sbb
jmp
fnclex
test
negb
push
push
fcomps
or
xchg
mov
adc
xor
dec
inc
xor
and
aaa
das
je
insb
pushf
adc
pop
arpl
pushf
and
cld
jl
lock
movsl
add
enter
pop
jge
xchg
iret
or
xor
outsl
cld
loop
icebp
push
lds
mov
xchg
push
je
popa
mov
popf
pop
sbb
xadd
imul
out
sbb
xor
aam
mov
fisttpll
and
idiv
int3
mov
lods
sbbb
std
sti
inc
ds
or
jo
fnsave
push
jle
leave
mov
adcb
je
dec
jl
lods
or
cmp
inc
lock
shl
mov
dec
es
das
arpl
les
aam
xrelease
xor
mov
pop
push
push
out
push
repnz
sarb
push
jbe
mov
test
and
cltd
imul
xor
adc
adc
fsubrl
add
in
jecxz
pop
stos
pushf
lret
cltd
jle
dec
jmp
in
pop
mov
sub
push
lock
cld
in
jl
and
test
out
movsl
std
sarb
scas
cld
gs
mov
push
xor
jl
jae
rclb
shr
cmpsl
ret
dec
repnz
mov
rcrb
fidivrs
and
stos
out
cmp
fsubrp
cli
mov
pop
mov
in
and
addr16
sbb
stc
mov
xchg
jns
sub
xor
mov
push
outsl
cmpsb
fnstsw
outsb
movsb
and
outsl
push
and
test
push
pop
cs
mov
int
mov
xor
xchg
xchg
hlt
sbb
dec
mov
mov
xchg
fs
cs
xchg
mov
jge
pop
xchg
repz
lret
ficomps
and
addl
gs
int
bound
adc
in
pop
or
xchg
and
imul
in
dec
scas
mov
pop
scas
and
pop
imul
into
and
scas
add
xchg
xor
push
je
add
lahf
cmp
add
lcall
mov
push
jp
ss
popf
and
int3
sub
add
dec
cmpsl
and
pop
fnstsw
fst
and
lahf
pop
scas
daa
loope,pt
and
mov
ret
mov
mov
lds
dec
mov
sti
test
test
pusha
sahf
push
dec
lds
ficomps
jno
xor
insb
outsl
jle
add
pop
sub
lods
cmpsl
ja
mov
iret
fcoml
sbb
add
loop
pop
or
insb
cmp
cmp
and
sub
jnp
pop
xlat
push
dec
gs
dec
adc
mov
shrb
jmp
xchg
fisttpl
lcall
cmp
fisubrs
jae
dec
mov
lret
cmpsb
dec
sbb
and
je
test
scas
aaa
mov
cmp
jmp
mov
xchg
dec
xchg
sub
test
adcb
sahf
dec
mov
adc
cltd
mov
dec
test
xor
fs
sti
ret
pop
lea
stos
clc
xor
mov
ret
add
push
es
fs
movsb
push
nop
add
sti
xchg
mov
pop
sahf
comiss
cmpsb
inc
mov
xor
clc
shrb
cmpsb
addr16
test
cs
sbb
sub
je
repnz
jl
test
jno
pop
ss
out
imul
push
dec
loopne
mov
stos
mov
dec
je
scas
cmp
push
fs
sbbb
pop
fwait
cmp
pop
fildll
xchg
jno
repnz
imul
mov
outsl
lea
xchg
xchg
int
dec
test
adc
push
mov
shlb
cmp
int
cs
rcl
mov
testb
hlt
cmp
push
out
lock
pop
adc
pusha
bound
push
ljmp
pop
cmp
jp
push
rcl
xor
nop
loope
lret
mov
int3
popf
jne
addl
inc
notb
lcall
int3
mov
inc
add
and
cmp
inc
xor
scas
mov
jg
pop
cmp
push
push
shl
adc
xor
push
in
inc
adc
push
push
pop
imul
pop
pop
mov
cli
push
push
cmp
arpl
or
xchg
jo
in
in
in
sub
dec
add
jo
into
jmp
stc
inc
fnsave
pop
jp
or
fwait
xor
pop
int
js
push
nop
sahf
pop
sti
sarb
fcmovnbe
xor
test
lcall
pop
outsb
imul
add
sahf
lea
sub
mov
mov
movsb
adc
jecxz
sahf
insb
xchg
add
sub
add
ss
xchg
push
int
loop
ds
fisttpl
dec
dec
jmp
xor
js
cltd
or
push
test
inc
pushf
out
fsubrl
xor
dec
rcrb
xchg
mov
lea
imul
sahf
mov
cmpl
ja
sbb
push
lret
cmp
dec
shll
mov
cltd
aad
xor
add
pop
xchg
sahf
push
ret
ret
aas
insl
jo
orb
out
imul
mov
lret
cmp
jp
jae
inc
mov
cmp
dec
bound
push
mov
fists
out
mov
xor
sar
or
adc
mov
sub
mov
mov
shrl
fcompl
mov
mov
rorb
test
mov
repz
ret
sub
add
jg
mov
fmulp
xchg
repnz
mov
sahf
out
sbb
fists
mov
mov
dec
fists
cmc
add
adcl
add
lea
cmp
mov
repnz
mov
adc
push
or
shlb
mov
arpl
jne
sahf
add
cmp
int
nop
cmc
cmc
dec
jg
push
adc
shll
insl
jp
or
cmpsb
sub
fistl
aaa
repz
mov
and
outsl
xor
loope
cmp
push
adc
inc
mov
jbe
lds
mov
mov
mulb
add
sub
inc
sbb
data16
in
test
popa
jle
js
insl
mov
imul
push
mov
cmc
je
test
rcrb
iret
jne
xor
dec
addr16
push
mov
addr16
aaa
int3
add
sub
cmpsl
insb
sti
or
jge
out
pop
aaa
or
pop
pop
daa
iret
les
mov
inc
jge
xchg
add
mov
lret
xchg
push
adc
pop
ret
mov
aaa
sub
push
pop
stos
lret
int3
jns
sbb
ret
jns
mov
mov
adc
inc
stos
clc
push
popa
lahf
jae
pop
push
repz
xchg
pop
dec
mov
push
cld
fsubl
loope
add
pop
enter
pusha
xchg
fsubl
pop
pop
cs
cli
out
jmp
sahf
enter
mov
and
push
jmp
addr16
movzbl
jmp
mov
pop
enter
dec
sub
adc
xor
push
mov
mov
inc
adc
jb
inc
push
add
testb
push
cmp
jno
jle
fprem1
clc
xor
fdivrs
adc
xor
scas
mov
or
fldl
cmp
xchg
cmc
lahf
and
loope
iret
ds
push
call
inc
jecxz
adc
enter
jp
popa
push
jecxz
xor
int
jo
add
lcall
ss
xchg
pop
sbb
aad
mov
mov
call
sbb
or
jg
shlb
push
lds
adc
jo
in
and
xchg
mov
pop
inc
sti
lcall
jne
je
adc
hlt
xor
adc
jb
mov
add
cli
das
cmp
test
sub
lcall
in
addr16
mov
cli
sarl
xor
mov
add
out
out
sub
push
lods
repnz
mul
in
or
hlt
insb
lods
fstp
cmp
sbb
jmp
aaa
or
imul
jno
push
jo
jns
faddp
cmp
jge
hlt
cmp
mov
idiv
rclb
jne
loopne
test
jle
scas
dec
into
xlat
fisubrs
aad
and
and
xorl
adc
xor
add
mov
jns
ror
lea
mov
pop
dec
loope
ljmp
jb
xor
movsl
sahf
out
into
push
cli
fadds
mov
sti
pushf
subb
sub
mov
out
shlb
imul
loop
xor
push
int
sub
push
popf
sbb
out
pop
aad
mov
clc
rclb
xchg
or
repz
mov
bswap
xor
push
orl
push
dec
mov
lds
cmp
jge
cmpsb
mov
cmpsb
sbb
dec
push
scas
dec
jecxz
jns
gs
stos
data16
mov
stc
les
push
lret
mov
xchg
pop
enter
sbb
or
hlt
jmp
sbb
sub
xor
jmp
sub
adc
mov
movw
xchg
xlat
lret
fsubrp
lcall
mov
and
loopne
mov
push
ret
push
leave
in
ss
test
shrl
daa
fs
sti
fsts
popa
fs
shll
and
sub
cmc
inc
inc
inc
mov
mov
dec
clc
jae
jecxz
sub
lcall
jns
push
sub
mov
js
fisubrs
pusha
jno
or
or
mov
dec
push
jno
dec
and
daa
ret
movups
mov
ljmp
mov
out
adc
je
imul
mov
stc
jno
dec
fcmovnb
adc
mov
mov
inc
and
mov
xor
push
xorb
icebp
dec
out
sbb
in
sub
push
pop
mov
sub
loop
mov
xor
in
cmp
shrb
push
int
or
mov
dec
lods
js
test
ret
dec
mov
dec
arpl
fwait
out
mov
or
aas
mov
push
and
ret
inc
or
and
fnsave
fistl
loope
lods
jae
cmp
jbe
jmp
pop
aam
hlt
pop
push
xor
fildll
mov
pop
cmpsb
cld
mov
dec
out
adc
xchg
rorl
aaa
xchg
jecxz
mov
shll
in
cli
xor
mov
cltd
push
sbb
cvttps2pi
stos
pop
jle
xchg
ja
das
or
xor
xor
test
iret
nop
sub
adc
mov
scas
cmp
jp
lret
lahf
scas
stc
inc
xchg
xor
stos
inc
or
xor
ret
test
push
ret
dec
pop
das
mov
mov
sbb
js
cmp
lret
cmp
mov
jno
mov
pop
sub
cmp
pop
xlat
mov
shrb
ljmp
cmc
ljmp
aad
sub
xchg
push
fistl
lock
rol
dec
shl
jnp
lea
js
xchg
in
jp
fld
repnz
mov
add
and
jmp
jl
std
sbb
roll
dec
mov
insl
sbb
jp
push
jmp
scas
pop
sbb
or
outsl
pop
nop
adc
xor
push
imul
mov
mov
lcall
adc
mov
mov
call
scas
movsb
arpl
sub
rcrl
mov
je
xor
or
xchg
outsl
out
addl
icebp
les
add
push
cmp
pop
mov
mov
push
loopne
dec
adc
cmc
jmp
addl
xor
dec
fcmovbe
divl
lahf
cmp
negb
sub
rorb
stos
sub
mov
shlb
mov
add
mov
stc
mov
dec
dec
notl
lahf
xchg
push
int3
loope
or
push
add
insb
es
mov
adc
mov
mov
push
daa
push
shrb
inc
and
loope
push
pop
jge
xchg
sub
push
mov
das
mov
clc
adc
pop
sub
sbb
cltd
adc
inc
rsm
mov
xchg
insl
sbb
shll
fists
cmp
dec
lret
aaa
push
pop
ss
and
js
pushf
push
jmp
push
inc
dec
adc
mov
mov
in
cmpsl
mov
or
cmp
adc
inc
xchg
push
pop
push
adc
or
add
dec
adc
aas
jo
fiadds
mov
enter
xor
xchg
add
cltd
inc
and
sub
fistpll
data16
std
jecxz
cwtl
add
das
imul
mov
inc
push
add
xchg
mov
dec
scas
inc
xor
fstps
mov
daa
popa
adc
pop
sub
sub
adc
rcll
in
stc
push
pushf
roll
fs
pop
xchg
repnz
inc
rcrl
les
lods
cmp
adc
lret
cmp
add
rorl
or
pop
es
cmp
lods
cmpsb
popf
mov
jle
cmp
flds
inc
mov
sbb
loope
fucom
xchg
sti
dec
orl
loope
fbld
es
into
pop
fmuls
cmp
dec
addr16
in
fistps
call
lcall
push
xor
outsl
lods
pop
loop
push
dec
in
sub
arpl
mov
inc
setbe
xor
rol
cmp
mov
popf
xchg
jp
int
jecxz
cmp
call
out
push
mov
and
push
xchg
aaa
xchg
mov
pop
and
std
fsub
in
mov
leave
stos
push
outsb
dec
cmp
cmp
jnp
loop
adc
sti
pop
push
inc
sbb
adc
imul
jle
push
cmp
fdivl
xor
mov
stos
stc
ret
pop
jns
je
mov
push
scas
add
push
add
test
out
xchg
xor
sbb
xor
sahf
mov
mov
mov
clc
mov
mov
ret
test
lret
push
ljmp
scas
mov
xor
push
or
cmpb
vcvttsd2si
cmpl
outsl
and
ja
loope
clc
outsl
jns
gs
mov
mov
test
xlat
aas
movsb
sbb
cs
shrb
sub
ficomps
jmp
adc
nop
dec
das
loope
or
adc
or
or
fsubrp
cld
jecxz
pop
stos
add
cli
fdivp
and
or
test
les
sbb
test
sub
dec
lahf
dec
dec
jb
xchg
or
push
jg
push
mov
fwait
out
or
test
loope
xor
inc
and
int3
insb
pop
jg
and
scas
mov
inc
mov
and
iret
xchg
pop
inc
lret
sti
aad
push
popf
out
fs
pop
mov
add
mov
mov
and
jle
scas
jg
subb
sbb
stos
and
icebp
scas
dec
mov
call
in
jmp
in
stc
add
pop
jg
inc
push
cmp
roll
jecxz
add
xor
cmp
fmull
gs
mov
push
jns
xchg
sbb
and
imul
pop
loope
lock
push
pop
cmpsb
stc
mov
adc
in
sbb
movsl
pushf
icebp
aaa
xchg
insl
jge
scas
and
mov
fwait
js
inc
sub
mov
inc
and
or
cs
sarb
pop
cmp
push
push
js
adc
std
inc
xor
sbb
and
out
loope
sub
sub
insb
mov
cli
pop
add
lcall
pop
fdivl
jo
push
pop
sbb
les
iret
jns
shrl
jne
push
cwtl
jns
ljmp
dec
ret
loop
push
stos
cmpsl
lea
scas
xchg
je
es
icebp
mov
mov
mov
roll
sbb
push
fsubl
clc
popf
push
hlt
lods
stos
mov
aas
adc
pop
xor
test
sbb
enter
pop
inc
dec
inc
mov
sbb
out
jecxz
jp
or
fwait
jge
repnz
sbb
js
movsl
jnp
adc
fs
sysexit
lea
or
pushf
push
add
xor
xchg
adc
xor
add
or
dec
xchg
fcomip
in
or
bound
lret
fcoms
out
xchg
push
inc
cltd
push
lcall
aad
jno
aad
xor
jmp
outsl
fwait
push
daa
cmp
cwtl
add
cld
ss
fbstp
and
enter
cld
or
cmp
out
xor
cmp
nop
pop
mov
pop
fisubl
imul
cmp
or
xchg
pushf
mov
addr16
stos
xchg
mov
adc
pop
dec
aaa
adc
mov
pushf
or
or
adc
pop
inc
cwtl
insb
call
sbb
in
repz
dec
sahf
bnd
xlat
sbbl
out
add
jns
push
xor
mov
pop
push
mov
jg
stos
dec
jno
xor
or
add
ret
cli
or
ss
and
mov
cmp
leave
sbb
lods
stos
pop
mov
inc
or
cwtl
pop
xchg
add
ds
push
in
and
lcall
mov
je
sbb
test
lds
je
mov
in
sti
adc
clc
in
lcall
and
fistps
stos
ret
shll
imul
xor
sbb
sbb
cmp
cmp
js
mov
mov
outsb
push
jmp
dec
sbb
aam
xchg
sbb
repz
dec
bound
add
adc
or
pop
dec
push
push
js
insb
cmp
xor
sbb
into
add
jbe
push
in
push
mov
jge
out
lds
xchg
mov
out
mov
xor
call
in
mov
mov
popf
mul
test
dec
or
scas
cmp
out
and
mov
lret
jecxz
loope
insl
push
mov
into
jl
nop
sti
mov
cmc
hlt
movl
jbe
arpl
sub
stos
cmp
jg
jmp
pushf
push
incl
push
jne
rcr
je
and
imul
mov
enter
pop
adc
arpl
outsb
cmc
mov
push
inc
pop
pushf
push
cwtl
mov
stc
lds
sbb
ja
cs
enter
subl
xor
divl
into
int3
pop
cmpsl
sahf
xor
in
inc
loope
mov
shlb
xchg
scas
cmp
mov
aas
test
call
fdivp
and
pop
icebp
adc
and
jns
and
lcall
push
inc
jmp
sub
push
push
pop
pop
dec
ljmp
sahf
or
test
cmp
sub
push
inc
shll
paddusw
inc
outsb
shrl
sbb
fiaddl
mov
push
enter
mov
push
pushf
jbe
fstpl
add
xchg
mov
inc
mov
in
push
cmp
sub
into
mov
enter
in
jle
fwait
out
aas
cmp
add
mov
cli
lret
pop
clc
mov
xor
popf
mov
push
sbb
lahf
testl
sbb
dec
adc
dec
pop
and
pop
out
adc
cld
int3
adc
shlb
cmpsl
push
lcall
shl
mov
add
es
push
add
push
push
shlb
test
in
add
pop
mov
pop
divb
stos
pop
adc
sub
iret
mov
mov
ret
fmull
daa
sub
cld
pop
mov
push
ja
pop
pop
add
jg
out
in
gs
inc
js
xor
pop
xchg
js
mov
sub
es
push
push
sub
imul
repz
xchg
mov
mov
push
inc
xor
or
je
icebp
fimuls
jbe
inc
cmc
psubq
mov
xchg
aas
pop
jne
push
cmovb
add
mov
and
xor
iret
add
mov
add
push
std
clc
xchg
jmp
sbb
dec
mov
and
movb
xchg
ret
movsb
and
jb
sub
lds
std
xor
js
mov
adc
movsb
shrb
or
cmpsb
mov
mov
mov
cmp
insb
mov
mov
imul
dec
je
or
clc
cli
push
xchg
mov
push
mov
lods
popa
xchg
cld
fldcw
pop
test
xlat
pop
jae
aad
jne
inc
inc
cmp
movsl
push
rorb
add
sarb
push
dec
pop
inc
dec
pusha
insb
insl
shlb
mov
mov
faddl
lahf
inc
popf
imul
or
in
test
sub
test
popf
mov
imul
test
sbb
stos
movsb
sarb
push
inc
loopne
push
lds
sub
xor
cmpsb
adc
xchg
mov
pushf
lret
ds
inc
cmc
dec
fcoms
dec
jno
jae
outsb
inc
jo
inc
or
orl
xchg
jno
scas
xor
in
sbbl
enter
cmp
jmp
mov
lcall
inc
popa
add
into
or
inc
hlt
pop
inc
aas
int
mov
xchg
or
dec
aas
cli
jle
push
or
mov
ds
xchg
push
cmpsb
lret
testb
mov
decb
mov
sub
arpl
pop
cmp
pop
push
xchg
out
xchg
in
pop
stos
idivb
jp
mov
fwait
decb
ret
jno
mov
xor
cmp
fsincos
jns
add
add
sub
xchg
cltd
loopne
ret
nop
mov
mov
addr16
push
sbb
push
stos
out
or
pop
mov
mov
sub
adc
add
xor
cltd
fadds
fsubrl
les
loope
xchg
in
lock
mov
pushf
inc
icebp
xchg
jo
pop
and
rorl
jl
imul
nop
jge
sti
sahf
lret
push
sti
mov
jns
mov
add
cmpsl
add
lock
cmp
idivl
lock
popf
push
sub
fwait
arpl
pop
sbb
mov
push
cld
popf
push
mov
pop
sbb
lret
cmc
adc
sarl
mov
jecxz
push
push
in
lahf
mov
xlat
ret
or
push
pop
imul
test
sbb
out
pop
mov
sbbl
shlb
jae
stc
int
inc
sahf
repnz
adc
xor
xchg
xchg
mov
jbe
push
data16
inc
insb
in
jp
in
adc
mov
ja
mov
xor
das
jmp
dec
repnz
aam
sbb
adc
or
clc
dec
pop
outsl
icebp
outsb
ja
cli
int3
out
cmp
lods
inc
fsts
inc
or
fimull
je
or
push
sbbl
sarl
push
push
sub
fsubl
clc
jb
dec
xchg
mov
fdivl
pop
inc
inc
xchg
lcall
dec
std
xchg
jae
xor
test
jo
loope
mov
xchg
sub
jmp
out
pop
pop
cmc
aaa
inc
adc
orb
cs
push
out
mov
insl
sub
rcrl
mov
xchg
add
xor
add
sbb
or
push
scas
mov
cwtl
mov
cmc
aas
push
mov
iret
sub
jp
or
push
jno
sbb
mov
jns
sub
xchg
gs
sub
dec
outsl
loop
inc
stos
sahf
daa
pop
xor
in
popa
jnp
addr16
sahf
lods
xor
outsb
adc
stc
push
enter
inc
cmpl
pop
stc
mov
mov
jmp
mov
inc
pop
xchg
iret
jns
jne
sbb
mov
add
cmpsl
sbb
pop
push
iret
sub
mov
in
jo
mov
rcrb
loop
inc
jns
xlat
inc
loope
fs
testl
mov
jae,pt
add
adc
cmpsb
mov
adc
sti
add
mov
imul
xchg
out
in
jle
adc
dec
sbb
push
xor
pop
xor
jae
dec
push
aas
jbe
int
into
dec
dec
pop
xor
or
push
fchs
enter
jns
movsb
sbb
out
mov
cmc
jmp
pop
bound
push
pop
push
in
ret
lahf
int3
negb
popf
cwtl
xor
cs
sarl
mov
sub
fmull
imul
pop
stos
repnz
call
test
aam
popa
aam
sti
data16
iret
jecxz
fdivrs
ljmp
imul
xor
mov
mov
push
rorb
lock
stos
or
outsb
mov
or
mov
jnp
xchg
inc
mov
iret
stc
sbb
adc
xlat
jno
outsb
push
ret
jae
cmp
repnz
gs
aas
mov
sbb
sahf
xor
or
xor
mov
adc
test
cmp
add
cmp
out
inc
movsl
ficoml
pop
sbb
mov
fs
mov
addr16
stos
fsubrs
sub
mov
in
jge
mov
lret
fcoms
imul
dec
int
ds
mov
push
ret
add
fsubrs
mov
add
bound
xor
loopne
mov
jne
pop
xorl
jmp
jbe
cs
repz
int
dec
sub
xchg
ficomps
scas
xchg
inc
insl
add
mov
js
pop
loopne
sarb
clc
sahf
lods
and
mov
sbb
into
cs
and
fiadds
je
repnz
hlt
push
cmp
stos
add
scas
stc
xchg
jp
jle
mov
sbb
fisttps
ja
xchg
mov
cltd
fimuls
lahf
pop
in
dec
mov
mov
jbe
rcrb
imul
cmc
shll
pop
pop
jecxz
std
and
jecxz
sti
or
dec
lcall
adc
pop
sar
inc
mov
cli
xchg
sub
cmp
ljmp
das
nop
js
movsl
sbb
pop
popa
pusha
sub
fldenv
aad
cld
imul
fcoms
jb
mov
int3
cmp
test
lea
push
or
push
sbb
push
gs
movsb
push
push
push
dec
popf
aas
mov
adc
shll
shrl
lret
sbb
xchg
pop
jno
sbb
arpl
ljmp
mov
subb
push
or
sbb
mov
lret
ret
inc
or
bound
stos
scas
mov
out
lcall
in
mov
fildll
daa
jnp,pt
ds
dec
rsm
daa
call
sbb
stos
jg
flds
or
nop
aad
cmpl
or
dec
rcrb
es
jae
push
dec
jle
out
das
cmp
sub
lods
stos
pop
cmp
push
sahf
mov
fcompl
mov
stc
rcrb
mov
and
cs
lret
mov
shll
loope
cmpsb
ret
sarl
arpl
adc
aaa
push
or
pop
repz
cmpsb
lcall
loopne
out
nop
popa
pmaddwd
adc
ja
in
dec
stc
imul
and
add
cli
sub
je
inc
mov
lods
rclb
stos
mov
ljmp
sbb
sarl
jo
ds
je
pop
std
add
stc
fistpl
inc
push
jae
cmc
testl
push
inc
arpl
scas
arpl
inc
adcl
fmull
pop
sahf
rcll
add
rcll
out
fmuls
pop
cmp
repz
add
jl
push
mov
aas
add
jle
and
mov
out
mov
sbb
cli
pop
pop
fldt
imul
jle
add
jns
mov
lods
fistps
jo
out
lea
mov
adc
scas
xor
loope
shl
je
out
test
cli
lds
xchg
cmpsl
add
outsb
leave
inc
lds
xchg
cmp
inc
jmp
dec
push
or
les
dec
sti
inc
decb
xchg
test
sub
sti
les
std
jg
pop
insl
cli
outsl
adc
test
aad
jp
jns
sti
pop
in
ljmp
mov
loop
scas
inc
cmpsb
inc
mov
pop
lock
bound
and
sbb
xchg
jge
pop
cmp
mov
add
mov
or
mov
jb
incl
adc
adc
jnp
out
add
mov
xlat
inc
adc
push
and
lods
push
dec
push
adcb
into
loop
movsl
mul
mov
lea
repz
dec
movlhps
and
js
mov
pop
mov
and
loop
adc
in
and
ret
outsl
lret
std
jne
shlb
ljmp
jbe
movsl
inc
push
lock
pushl
sbb
out
add
jge
sub
rcr
loop
cmp
inc
xchg
pop
pusha
lcall
fdivrl
sub
cmp
push
lret
or
in
dec
adc
jno
aaa
adc
clc
inc
xchg
sub
sbb
mov
fs
out
cmc
lods
jge
cltd
jmp
mov
loope
sbb
inc
inc
call
sub
mov
sbb
loope
xlat
cmp
scas
push
pop
cld
lods
shlb
cmp
pop
push
cmpsl
lock
and
ret
cli
adcl
cs
mov
test
adc
xchg
int
cmpsb
movsb
inc
push
xor
call
adc
in
xor
inc
subb
mov
pop
push
push
shl
ljmp
mov
mov
mov
pop
adc
pop
imul
outsl
xchg
push
into
cmp
mov
pop
jmp
mov
cli
arpl
push
xor
bound
ffree
mov
jecxz
lret
sti
and
inc
mov
bound
mov
sub
sbb
mov
sar
mov
jmp
rcll
movsl
int
enter
xor
pop
xor
push
jl
push
dec
pop
push
flds
rolb
jno
sbb
inc
mov
aas
ljmp
sahf
dec
jp
jno
add
jge
push
push
xchg
add
rcll
daa
mov
mov
mov
lret
mov
inc
imul
aad
pop
cs
test
sbb
les
mov
jge
pop
xor
aad
sarb
sbb
mov
and
sub
ja
enter
push
aad
push
mov
mov
data16
and
icebp
adc
jae
imulb
test
arpl
aam
popf
das
add
push
mov
xchg
xchg
cld
call
or
pop
lods
sarb
test
aam
test
inc
lret
adc
cmp
and
arpl
jo
test
mov
sub
insl
or
cltd
dec
int3
or
out
cmpsl
mov
mov
push
scas
xchg
pop
shrb
js
test
sbb
pop
iret
dec
scas
mov
sub
scas
sbb
sbb
xor
movsl
ss
stos
movsl
cmp
jl
fisubrl
iret
pop
jne
ds
test
mov
int
xor
aaa
sub
mov
mov
repnz
out
cmp
xor
fsubl
add
mov
negl
out
xchg
js
out
sbb
pop
cs
mov
movsb
cmpl
cwtl
sub
mov
push
fdivl
push
gs
sbb
xchg
imul
sub
icebp
call
mov
sbb
ret
dec
jne
push
outsl
cmp
push
sahf
and
and
cwtl
out
xor
sarl
jns
xchg
xchg
int3
daa
fstl
loope
mov
and
pop
iret
sbb
pop
pusha
sar
adc
adc
pop
clc
es
out
roll
out
adc
aad
pop
mov
icebp
lods
push
je
xchg
adc
add
je
test
cmp
in
addr16
jns
insb
or
cmpsl
stc
cmp
ud0
mov
mov
loope
incl
outsb
cmp
stc
popf
pop
pop
out
add
aad
inc
push
cmp
pop
call
sti
inc
xchg
pusha
loopne
mov
or
inc
les
mov
hlt
int3
les
add
popa
ret
mov
mov
add
rcrb
fdivrl
and
sahf
movsb
lea
daa
in
stc
lds
sti
pop
fidivrl
data16
mov
push
subb
mov
or
in
sbb
dec
inc
in
xor
jae
pop
pop
rol
push
fldcw
je
cs
lcall
bound
not
insb
push
or
add
xor
loope
or
in
cmp
clc
lcall
adc
cmp
aaa
pushf
aad
push
cmp
jge
cmp
insl
jo
loop
test
adc
es
shrb
loope
xchg
push
inc
inc
sti
test
adc
jb
xchg
sub
mov
arpl
lods
insb
stos
xchg
jne
mov
mov
and
popa
cmp
dec
jg
adc
movsb
adc
push
ret
fwait
sbb
and
aad
xchg
cmp
mov
inc
outsl
es
out
xchg
dec
push
sbb
sbb
inc
push
xchg
in
rcr
pop
xchg
loope
dec
lods
std
add
adc
push
mov
jnp
ret
mov
popa
jo
mov
imul
or
in
push
inc
hlt
dec
fnstenv
mov
les
sbb
sbb
insb
je
fdivrs
or
and
loop
es
inc
mov
mov
mov
mov
push
dec
push
ret
push
mov
mov
dec
out
xchg
pop
sbb
sbb
jo
mov
sti
xchg
popa
ja
pop
inc
jl
push
movsl
sahf
testl
cmp
lea
cs
sbb
iret
push
inc
xchg
push
repnz
xchg
mov
aaa
adc
imul
push
pop
pop
xor
gs
stos
cmp
inc
outsb
pop
out
out
arpl
or
das
adc
movsl
jl
addr16
aaa
fsts
movsl
int
stc
inc
pop
mov
mov
cmp
cmc
negl
dec
cld
test
lret
dec
fldz
or
mov
scas
adc
rcrl
aaa
jecxz
sub
sbb
in
ror
dec
jmp
rcll
mov
mov
loop
and
inc
mov
das
xchg
and
lea
inc
mov
cmp
pop
mov
cmc
cld
test
icebp
mov
pop
push
leave
adc
add
in
loopne
orb
cli
loopne
insb
push
xor
or
orb
cmp
gs
and
fcomps
jns
jge
shll
call
cmp
sahf
mov
inc
jne
movsb
mov
push
popa
mov
loop
fdivp
rcrl
pushf
iret
stos
subb
jg
jnp
fisttpll
imul
and
shl
cmp
fdivl
jns
and
ja
cwtl
incl
mov
shlb
mov
cmp
pop
out
xchg
xchg
jns
pop
add
lock
mov
test
cltd
cmp
mov
jge
movsb
push
es
xchg
mov
enter
into
xchg
cs
push
sub
mov
sbb
mov
jae
add
js
push
pop
push
in
and
test
ss
cmp
enter
aam
data16
pop
idivl
xchg
mov
push
out
cwtl
cmp
cli
mov
jcxz
jmp
insl
mov
lcall
or
or
xor
xchg
shll
popa
jno
fmulp
and
cld
cli
push
outsl
enter
jae
std
push
into
cmp
ja
mov
xchg
int
mov
dec
sub
movsl
movsb
jmp
insl
xchg
add
inc
daa
cmp
es
xchg
ljmp
pop
jo
mov
jle
add
push
dec
inc
scas
movsl
inc
arpl
push
cmp
fldl
mov
push
mov
fwait
inc
rcll
roll
fildll
inc
mov
push
scas
js
and
fs
jmp
jge
icebp
jg
inc
iret
push
xor
dec
addb
test
iret
sub
dec
fildll
mov
xor
mov
shrb
dec
xchg
mov
arpl
loopne
lock
push
xchg
jp
sub
or
cwtl
sub
fcmove
mov
out
enter
xor
adc
sbb
call
push
mov
out
xchg
mov
mov
or
mov
les
pop
pop
sbb
sub
pop
xchg
add
mov
xor
jb
push
sub
lahf
js
je
push
insb
cmpsb
out
sub
loope
xor
sub
inc
aad
fcmovbe
or
jne
cli
mov
xchg
mov
loope
xchg
lea
gs
and
subb
icebp
inc
fiaddl
jno
out
push
idivb
call
mov
mov
popf
push
jle
sub
jg
mov
adc
in
jecxz
jo
push
sub
inc
inc
sub
jmp
mov
dec
adc
fcompl
aaa
shll
jp
sbb
es
repnz
fcoms
shlb
cltd
es
testb
lods
push
xor
xchg
mov
cwtl
xor
rep
lret
xor
xchg
ja
addb
pop
adc
xor
adc
sbb
jmp
push
pop
in
sbb
mov
ss
in
jb
shl
cmc
push
inc
in
ss
jnp
rclb
pusha
pusha
in
jge
sub
mov
mov
push
jle
repz
jge
lea
jg
push
adc
iret
pop
lods
ret
adc
repnz
mov
aas
subl
sub
fs
aas
mov
sub
lret
out
lcall
xchg
in
loopne
and
add
lahf
adc
mov
and
ss
movsl
loopne
iret
loop
xchg
sub
mov
add
sub
add
es
jp
pop
fidivs
jns
cwtl
scas
fwait
sub
cmc
dec
dec
sarl
faddl
and
outsl
cld
and
gs
ljmp
rcrl
push
dec
xchg
pushf
pop
cltd
fisubrs
fwait
jns
pop
jge
in
inc
int
adcb
test
sbb
inc
xor
mov
andb
cwtl
mov
fwait
out
inc
push
icebp
mov
mov
xchg
pop
jg
or
sub
mov
popa
pop
add
ret
repnz
push
and
test
shrb
inc
pop
mov
pop
loop
inc
adc
mov
and
dec
mov
les
dec
add
nop
std
sbb
repnz
cli
dec
mov
shlb
cmp
mov
xchg
lock
add
test
mov
xchg
sub
aaa
outsb
xchg
jge
jmp
sbb
int3
insb
dec
movsl
movsb
dec
into
rcr
mov
or
inc
pop
lahf
js
dec
insl
hlt
iret
repnz
out
xor
mov
or
push
sub
jl
pop
and
mov
mov
addr16
xchg
outsb
jp
sub
lcall
inc
roll
xor
mov
fidivl
xchg
add
or
stc
pop
pop
or
pmuludq
mov
lret
sub
notb
push
insl
mov
std
test
lea
push
xorb
push
push
pop
jle
aas
ret
imul
out
sti
jbe
jbe
mov
xchg
and
dec
insb
dec
and
push
jle
std
or
cmpsb
push
add
sbb
inc
lods
insl
popa
int
adc
sub
xchg
cld
jbe
movsb
subb
push
push
pop
jbe
pop
push
pop
test
cld
roll
iret
adc
test
adc
dec
jae
roll
in
or
xchg
sub
dec
or
add
xchg
xor
adc
mov
shll
int3
jl
mov
ret
add
inc
out
popa
jmp
pop
out
nop
add
add
test
pop
lods
dec
out
lds
inc
arpl
xor
xchg
daa
push
cmpb
arpl
test
jg
sub
dec
sarl
mov
cmp
insl
push
pop
mov
push
bound
xor
push
fidivs
imul
jge
enter
dec
gs
dec
xchg
xor
xor
in
out
jmp
xor
shrb
inc
xor
mov
imul
movsl
pop
push
jb
jl
add
es
jnp
jae
dec
popf
xchg
cmp
push
mov
sbb
or
xor
and
insl
fs
add
push
adc
and
jp
call
cmpsl
xchg
or
arpl
mov
std
repnz
dec
rorb
sub
in
jg
mov
xor
sub
add
out
pop
push
sub
inc
mov
sub
jbe
push
enter
ret
sbb
ret
mov
lret
enter
jmp
repz
pushf
fildl
mov
das
mov
jb
ret
sbb
ss
pushf
or
sti
fistpll
or
test
cmp
or
cwtl
inc
add
pushf
xorl
pop
lret
adc
insl
scas
push
add
fucomi
or
adc
pop
fstpt
shlb
mov
adc
neg
into
fstpl
push
jno
mov
adc
adc
mov
mov
pusha
jbe
add
into
fs
mov
mov
shrl
xor
and
mov
leave
add
mov
cmovbe
int3
movsb
jbe
push
inc
sub
fsubl
stos
ret
inc
sub
mov
rcrl
push
daa
xchg
cmpsl
xchg
lea
pusha
dec
and
sub
jnp
mov
mov
loopne,pn
jnp
xor
sub
ficoml
xor
pop
mov
pop
shrb
sub
out
dec
sbb
es
movsb
and
or
icebp
and
movsb
xlat
out
ja
push
xchg
mov
or
call
mov
jle
lds
call
aam
repnz
push
paddsw
outsl
in
cmpsl
mov
sbb
jns
adc
or
aam
scas
mov
jg
cld
mov
shrb
test
add
in
ret
ja
mull
cmpsb
mov
jl
mov
sahf
push
js
fsubl
ljmp
data16
popf
adc
stc
or
mov
xor
inc
dec
sub
jmp
adc
sub
repnz
rcrb
shll
cmp
popf
pop
cmp
push
aam
xor
dec
in
xor
mov
pop
out
jo
push
lea
out
inc
test
xchg
in
mov
repnz
ja
and
stos
sti
inc
loope
or
inc
xor
xor
pop
rcrb
mov
cli
pop
popa
sub
mov
stc
adc
inc
xor
pusha
sahf
repnz
jmp
cmp
sbb
pop
pop
shll
data16
push
sahf
adc
adc
xor
call
pop
les
xor
mov
or
push
ret
call
adc
xor
and
xor
rcl
mov
add
hlt
adc
pusha
sbb
adc
cmp
imul
inc
cmp
roll
xchg
cld
jns
xlat
rolb
sbb
lahf
inc
mov
cwtl
inc
pop
fs
sbb
rcll
dec
inc
jae
aad
inc
and
jns
jae
adc
xor
add
push
aas
cmp
jmp
repz
lcall
mov
mov
sbb
stc
sbb
iret
in
cs
hlt
cld
push
leave
xor
cmp
xor
mov
xor
cmpl
mov
xor
cmc
imul
or
sbb
lret
daa
fisttpl
into
pop
std
mov
out
cmp
notb
adc
push
jno
or
fidivl
push
aas
lods
fdivrs
pop
add
cmp
dec
test
xorb
mov
sbb
mov
mov
ret
decl
cmp
add
mov
aam
ljmp
loop
ficoml
rclb
or
dec
cmp
xchg
test
dec
pop
push
xlat
adc
movsb
inc
jo
jae
lds
mov
das
pop
mov
mov
fbld
test
shrb
dec
out
fxch
popa
ljmp
out
sbb
cmp
cld
in
cli
cmp
jb
test
ljmp
fistl
or
jne
push
mov
and
jae
sbb
adc
stc
orl
jge
inc
daa
lods
cmpl
jmp
mulb
jecxz
jecxz
jp
mov
pop
cmpsb
fwait
or
sub
mov
leave
xchg
adc
cmp
and
jbe
push
pop
lret
inc
sub
inc
fwait
mov
std
mov
scas
push
jno
xchg
xor
push
fists
loopne
loopne
xchg
add
movb
sbb
jecxz
stos
add
jb
xchg
movsl
pop
mov
xchg
hlt
xor
shl
rcl
call
ja
pop
mov
and
push
or
jl
push
in
imul
mov
xor
arpl
inc
int
fnstsw
int
les
xchg
enter
jmp
sarl
not
adc
scas
mov
sub
cmpsb
lea
dec
jg
pop
daa
aad
xchg
dec
fdivs
aaa
in
mov
push
out
sub
cmp
shrl
cwtl
sub
sahf
and
insl
rcrl
andl
jo
pop
xchg
or
jp
in
sbb
inc
adc
cmp
es
push
or
fsubrs
scas
jnp
ret
mov
jne
and
test
sbb
insl
jl
jge
jne
add
mov
inc
sbb
xchg
shrl
or
dec
jl
insl
loope
sub
push
adc
xchg
jecxz
fimull
or
dec
inc
cmp
jbe
clc
dec
push
cmp
enter
pushf
sti
xchg
lea
pop
in
inc
mov
imul
sub
xor
mov
mov
jnp
sti
push
jecxz
hlt
sub
lret
pop
add
or
movsl
movsb
hlt
pop
ljmp
sti
insb
rorl
cmp
repnz
out
mov
movsl
mov
mov
imul
test
nop
scas
mov
popf
outsb
icebp
xchg
aam
sahf
je
add
or
add
sbb
pop
cmp
mov
jp
push
call
int3
pop
in
rorb
ljmp
fisubl
in
ret
xchg
test
ds
sbb
outsb
xchg
ss
push
xchg
fdiv
fidivrs
xchg
sbb
gs
inc
adcb
dec
pop
ljmp
mov
test
and
inc
outsl
icebp
adc
shlb
sub
push
mov
xchg
add
mov
sbb
pop
lret
push
test
add
scas
stos
testb
div
outsb
sub
adc
pop
mov
outsl
insb
mov
test
add
mov
popf
lahf
seto
int
dec
mov
sub
jbe
cmpsb
push
add
add
lods
rorb
mov
in
sub
fldt
sub
fsubl
testl
cltd
inc
mov
add
lea
int
popf
or
inc
in
jle
imul
test
inc
stos
insb
push
aam
sbb
leave
xor
shlb
insb
push
cs
mov
xchg
aam
daa
loop
stos
mov
inc
loop
out
leave
pop
jb
mov
xchg
xchg
lahf
aad
pop
cmc
jmp
adc
jmp
into
int
inc
sti
pop
xor
cmp
mov
gs
dec
jecxz
push
fsts
cmp
mov
sub
xor
lret
rorl
sbb
dec
lds
shlb
xor
mov
frstor
fidivl
fstpt
jecxz
scas
lods
andnps
xor
dec
or
pop
adc
dec
jmp
pop
subl
xor
imul
sbb
pop
inc
jo
lret
mov
and
sbb
xor
imul
popf
mov
rcll
adcb
test
jne
mov
push
mulb
add
je
dec
inc
dec
iret
sub
add
in
outsl
imul
inc
or
outsl
mov
jl
xor
dec
jecxz
lret
sti
lock
pop
pop
xor
loope
imul
fadd
and
sbb
repz
repz
sahf
cwtl
pop
pop
lret
add
jg
rol
enter
pop
inc
jns
es
push
aaa
pop
add
jmp
push
or
inc
push
arpl
xchg
add
stos
push
xor
sbb
mov
mov
mov
xchg
push
daa
jne
xlat
sub
add
sbb
repz
sbb
sarb
in
pop
into
gs
ret
mov
lret
xchg
dec
in
and
dec
pop
xor
jp
scas
stos
pop
jge
arpl
cmpsl
mov
ss
mov
out
clc
sub
cltd
pop
hlt
cld
jg
dec
sti
inc
cld
test
inc
faddl
das
cmp
icebp
dec
fiaddl
outsl
sbb
movsb
add
mov
xchg
mov
sahf
mov
add
pop
add
pop
push
mov
test
xor
das
dec
movsb
dec
fwait
xchg
inc
stos
fildl
sub
cmp
int3
inc
jmp
xor
out
inc
adc
or
xor
pop
jae
fwait
inc
lret
iret
xchg
mov
inc
loope
cmp
cmc
aad
xor
push
mov
add
daa
es
outsb
mov
dec
test
sub
out
mov
pushf
std
sub
mulb
icebp
dec
add
fmul
or
jp
dec
mov
dec
mov
xchg
int
adc
jmp
mov
in
data16
cmp
sbb
push
std
mov
jnp
xor
xchg
pop
inc
mov
cli
cmp
mov
inc
addr16
test
mov
xor
mov
aam
leave
pop
add
aaa
rolb
xor
dec
fimull
rcrb
and
pop
es
cs
fcos
ss
pop
mov
mov
jmp
inc
orl
fldt
xchg
imul
ret
dec
in
fisubl
stos
xor
imul
hlt
aas
pop
push
xchg
pop
dec
xor
ja
cli
clc
scas
sbb
insb
pop
lcall
in
mov
shll
or
imulb
sbb
xor
sbb
xor
add
xchg
out
push
dec
push
loopne
lahf
aaa
outsl
cmp
jmp
xchg
ret
sahf
push
mov
sahf
jle
jo
push
ss
call
call
sub
mov
sub
les
insl
movsb
in
and
rcll
gs
ret
ljmp
lds
add
shrb
loop,pn
mov
sti
lds
mov
mov
mov
out
pop
xchg
sbb
stos
fs
jg
dec
xchg
jae
jne
int3
mov
repnz
jnp
roll
outsl
out
lret
pushf
insl
imul
lahf
mov
push
adc
int
dec
lock
mov
aaa
ja
pop
dec
ljmp
dec
ret
call
and
dec
movd
jo
lock
mov
fldenv
mov
mov
or
adc
jg
xor
mov
sahf
ss
shrb
and
inc
jns
cld
jmp
dec
mov
fcoml
add
mov
and
in
add
rclb
iret
jnp
pop
mov
sti
push
jl
in
aaa
pushf
jnp,pn
ljmp
mov
xchg
mov
ja
push
sub
mov
repz
pop
dec
adc
push
insb
hlt
add
popa
jg
xor
cld
dec
fbstp
pop
das
pop
in
rclb
and
xchg
add
popf
mulb
repnz
xchg
push
rcll
cwtl
mov
sbb
call
repz
mov
jnp
add
hlt
pop
mov
test
push
push
dec
adc
xchg
push
mov
mov
ja
jns
mov
sbb
sti
mov
push
cltd
mov
dec
gs
push
fstp
fs
add
sub
sbb
push
cld
mov
xchg
fdivl
fdivr
or
xor
and
popa
pop
inc
lods
or
cltd
je
mov
adc
push
pop
cmp
imul
pop
add
mov
movl
pop
and
mov
adc
cvttps2pi
push
cs
lods
pop
fnstsw
movsb
cmp
test
leave
popl
inc
mov
lahf
fsts
push
rclb
mov
aam
jecxz
xchg
sbb
xor
in
xor
inc
add
mov
cmp
insb
int
fidivs
jecxz
push
ds
in
out
fidivrs
leave
daa
incl
testl
xorb
loope
sbb
aam
iret
addr16
daa
jno
jno
and
jne
or
shr
xor
cmp
jg
in
dec
outsb
int
scas
and
dec
in
xorb
sub
sarl
std
ret
dec
xlat
lods
inc
dec
popf
fisubrl
dec
test
inc
lods
sbb
sbb
adcl
stos
ja
aam
pop
jp
add
jo
clc
out
popa
outsb
inc
sti
call
xchg
xchg
out
inc
lcall
inc
adc
hlt
repnz
mov
inc
or
filds
cmpsb
push
movsl
mov
popf
pop
cmp
popf
fidivrl
imul
sub
fs
popf
iret
das
sar
mov
mov
fcmovnbe
jecxz
sbb
outsl
push
add
mov
clc
xchg
ret
fs
pop
mov
shlb
inc
adc
push
mov
out
cmp
xor
fwait
icebp
jmp
inc
mov
adc
mov
push
in
xchg
cwtl
mov
xchg
incb
cmp
imul
das
mov
and
and
adc
clc
ja
mov
in
adc
jl
mov
jmp
je
scas
adc
sbb
xorl
pop
loop
lods
ja
lods
jnp
loope
rcrl
clc
jb
xchg
inc
stos
pop
xchg
jne
adc
and
fcoms
xor
cmpsl
aad
pop
enter
pop
mov
fsubrs
std
mov
jge
clc
fstps
dec
push
out
lods
icebp
mov
ds
loop
xchg
movsb
dec
pop
jno
movsl
mul
iret
dec
cmp
ret
dec
ljmp
sub
lret
icebp
jecxz
cmc
mov
mov
xor
lret
mov
pop
and
ret
in
ss
jbe
sub
ss
cmp
push
imul
sub
jg
mov
sbb
and
pop
pop
and
push
mov
scas
clc
rclb
pop
sti
frndint
rcr
jo
cli
test
fs
popf
imul
ret
sub
sub
xor
pop
pop
andl
xlat
aam
pushf
mov
pop
enter
movsl
cli
mov
add
cmp
fdivrl
xchg
jp
mov
call
push
movlps
rclb
clc
xor
test
dec
call
adc
movsb
lret
aas
sahf
add
dec
xor
or
jge,pt
mov
lahf
xor
sbbl
pop
enter
or
addr16
dec
mov
adc
aas
fwait
lods
add
roll
sbb
out
jb
jnp
mov
lret
jne
fisttps
testl
ljmp
pop
dec
inc
xchg
ret
int
stos
out
mov
daa
sub
mov
mov
push
aaa
lds
les
and
push
test
lods
jns
mov
push
fdivrl
mov
repz
iret
jge
inc
lret
sbb
jmp
sbb
cwtl
loop
sahf
dec
push
sti
jmp
and
js,pt
mov
das
add
jle
dec
mov
std
sbb
cltd
rcrb
dec
insb
sbb
test
sub
movsl
clc
loop
divl
sbb
jae
ffree
sbb
mov
dec
adc
aaa
cmovl
push
ret
add
rolb
pop
test
push
and
pop
adc
insl
jbe
push
push
cmp
iret
jle
fistpl
loop
jnp
std
dec
pop
add
push
xor
data16
and
neg
imul
or
xchg
jle
outsl
push
aam
and
imul
jo
xor
and
pushf
jecxz
nop
push
in
sti
test
das
pushf
push
push
jnp
fistpl
and
adc
push
lcall
flds
mov
jmp
add
xlat
lea
push
sbb
ja
sub
dec
lods
stos
fwait
xor
pushf
mov
mov
or
call
or
insl
cmp
ret
mov
hlt
xorb
jle
adc
out
in
push
inc
in
test
mov
mov
fsubs
pop
add
xchg
test
repz
mov
outsl
dec
xchg
gs
out
ds
mov
inc
ljmp
fs
dec
cmp
sub
les
les
jge
xorl
lds
das
adc
mov
test
imul
push
or
push
out
insl
ret
fucom
sbb
test
xchg
fwait
fwait
mov
icebp
push
mov
mov
loopne
adc
popa
int
icebp
xor
das
or
sbbl
mov
inc
aas
arpl
not
ffreep
bound
ds
push
or
pop
jecxz
jo
aam
rorl
push
or
xorl
fcmovb
cmc
scas
mov
mov
popf
movsl
jp
int3
mov
flds
add
xchg
lret
jbe
js
out
cmp
stc
in
add
dec
xchg
xchg
orl
cs
mov
mov
adc
jle
sbb
int3
enter
and
sub
jne
out
cmp
add
jmp
inc
mov
mov
es
pop
mov
sti
sbb
addr16
cmp
fwait
fs
pop
sbb
or
repnz
and
in
in
adc
or
daa
add
push
add
mov
aam
pop
and
jno
push
mov
xchg
push
cmp
test
leave
mov
mov
call
mov
mov
dec
bound
inc
cmpb
add
push
stc
sbb
sbb
cli
inc
mov
push
cwtl
mov
inc
inc
test
scas
push
jg
and
add
push
xor
orl
nop
mov
jge
outsb
lret
nop
cmp
push
aad
adc
cmp
ljmp
jle
test
aaa
les
movsl
jg
or
jns
stos
dec
out
pop
adcl
jne
fcoml
dec
gs
test
adc
pop
sbb
fs
xor
cs
jo
popf
mov
scas
push
adc
stos
dec
ret
mov
cmp
adc
bound
les
adc
mov
nop
cmp
rorl
loopw
call
mov
leave
sbb
pop
fdivs
sub
cmovne
xor
sbb
add
push
inc
out
cmp
xchg
pop
daa
adc
ficompl
mov
push
xor
jmp
mov
aas
mov
xor
dec
adc
subl
and
push
inc
aas
loope
pop
roll
flds
pop
cmp
inc
sbb
lods
aaa
cli
sbb
mov
sbb
cmp
jb
cmp
jne
mov
subl
leave
fsubp
jo
outsl
stc
insb
sbb
test
mov
push
pop
pop
xor
mov
aaa
inc
nop
lcall
das
out
rcl
cmc
or
mov
pop
outsl
fstpt
or
push
inc
pusha
push
sbb
aad
rorb
add
sub
pop
jecxz
pop
shlb
push
adc
das
div
jns
shlb
add
xchg
mov
jle
jmp
inc
pop
inc
cmp
mov
sbb
cmc
les
dec
ljmp
ffreep
fwait
in
ret
dec
dec
jp
push
push
xor
decb
das
xorb
and
fwait
dec
movsb
jno
and
jbe
loopne
lahf
daa
and
std
jns
dec
mov
int
pop
lods
mov
inc
sbb
das
xor
push
jbe
inc
push
cmpl
jg
ja
test
xchg
mov
das
outsb
and
pop
push
xchg
mov
lea
mov
fcomps
pop
outsl
jb
rorb
pop
or
fcoms
inc
data16
nop
or
mov
mov
pop
cmc
jge
adc
ljmp
pushf
shrb
stc
test
adc
scas
mov
in
jne
gs
jo
outsb
out
dec
lahf
sbb
fmull
lea
aaa
xchg
hlt
xchg
pop
mov
scas
iret
fwait
cmp
inc
push
aad
jne
and
xchg
cmpsl
out
scas
sarb
fs
lahf
fcoms
imulb
sti
outsb
enter
sbbl
dec
js
insb
fdivl
repnz
loop
and
in
das
mov
daa
out
inc
dec
lahf
fildl
mov
pop
jb
or
add
nop
add
mov
xor
fwait
xchg
jle
negb
fcomi
jae
add
pop
cli
push
pop
les
movl
negl
int
push
cmp
push
push
sahf
xor
je
loop
jnp
or
cli
fwait
pop
ljmp
or
outsl
pop
jmp
dec
pop
lods
pop
or
mov
xor
dec
fldl
int
adc
in
mov
pop
push
xchg
inc
es
in
add
stos
cmpsl
add
inc
daa
jg
and
pop
or
lds
lahf
mov
adc
add
push
adc
xor
xchg
xchg
lret
stos
dec
push
inc
loopne
in
fdivrs
pop
adc
fs
xor
mov
mov
add
bound
ljmp
xchg
test
aaa
sub
jle
shl
outsl
out
sbb
mov
mov
hlt
dec
arpl
jae
cmpsb
or
pop
dec
mov
mov
add
lds
or
sbb
lea
add
adc
pop
push
out
inc
and
dec
push
mov
mov
int
cmp
mov
pop
outsb
sbb
cmp
stos
xor
stos
subb
mov
pop
dec
ds
adc
imull
jno
mov
jge
inc
popa
movsl
xchg
mov
push
clc
addps
pop
jnp
clc
jl
sub
pop
mov
dec
insb
push
std
xor
cmp
pop
callw
sub
daa
mov
mov
or
lods
mov
push
xlat
lret
pushf
clc
jmp
cmp
mov
into
dec
cmc
pop
iret
repz
mov
push
mulb
sbb
pop
xchg
fsubrl
xor
xchg
jl
dec
push
pop
mov
bound
jne
in
inc
mov
loope
addb
push
ljmp
push
fsubr
cmp
enter
fs
pop
fwait
xor
inc
aad
add
push
aam
pop
mov
jno
xchg
jp
lret
or
cmp
or
pop
jns
jns
repz
rolb
stos
add
xorb
fcmovb
ja
dec
nop
inc
gs
movsl
das
xor
push
pusha
cmp
push
add
cli
decb
cmp
fisubrs
test
fwait
mov
cmp
lea
mov
movsb
call
sub
jecxz
adc
shlb
push
nop
add
or
push
sub
pop
add
mov
sbb
ljmp
cmp
jbe
jecxz
add
ja
pop
lds
or
adc
mov
add
sub
sti
cwtl
xor
es
shll
mov
jle
fldl
and
ss
jg
daa
fcmovbe
sbb
or
fsubs
mov
or
bound
add
mov
mov
repz
inc
dec
jbe
stos
scas
xor
leave
and
sbb
test
ret
jae
fiadds
xchg
mov
inc
xor
dec
out
and
sub
int3
xchg
in
notl
ds
fcom
adc
jno
dec
jb
mov
push
adc
cmc
loop
stos
jle
ret
testl
sbb
jecxz
jmp
mov
fs
shlb
into
dec
xor
lcall
fsubs
pop
jmp
mov
jmp
rcrb
cmc
or
imul
fsub
pop
fildll
adc
xor
aaa
rol
insl
rolb
inc
mov
mov
popa
mov
sti
aad
std
sub
or
or
bswap
rcrb
add
dec
icebp
data16
lahf
sub
hlt
filds
lea
imulb
addr16
and
int3
adc
push
jnp
ret
xlat
scas
lret
fdivs
sti
int3
jbe
pop
int
fwait
cmc
mov
aas
adc
mov
daa
clc
stos
add
popf
mov
and
xor
js
jmp
in
leave
mov
enter
imul
mov
iret
cmp
lock
pop
push
iret
inc
clc
scas
jae
sub
push
mov
rclb
xlat
fcomps
dec
or
fstp
push
dec
fmul
rclb
jecxz
movsl
inc
subb
sbb
push
mov
rclb
enter
pop
insl
push
xchg
out
insl
movsb
xorb
in
inc
pop
mov
movsb
dec
push
in
jmp
lahf
orb
imul
push
je
rclb
sub
push
repz
data16
and
jle
clc
stc
cli
data16
ret
fimull
fwait
mov
inc
add
push
loop
mov
pop
xor
lea
in
adc
xchg
fidivs
fcomps
movsl
cmpsb
ret
cmp
add
mov
push
es
jno
stc
loop
adc
loop
loope
imul
and
push
dec
hlt
es
ja
sti
mov
mov
jmp
push
js
stc
pop
mov
loope
mov
pusha
jg
out
or
and
cmc
sbb
and
adc
imul
loopne
add
mov
icebp
mov
fwait
inc
sbb
in
sar
shll
or
cmp
in
pop
fwait
int
fstps
in
adc
int
scas
nop
ffree
mov
xchg
ds
faddl
mov
push
fldcw
outsl
stc
dec
push
add
xchg
add
decb
je
mov
out
push
bound
pop
out
cmpsl
in
xchg
push
movsb
fdivrl
xchg
loope
mov
movsl
xchg
or
lds
outsl
popf
aaa
into
aad
jb
lock
addr16
or
add
xchg
das
je
mov
test
icebp
xchg
into
int3
arpl
add
loope
mov
xor
divl
aas
loop
xchg
jo
sbb
and
fiadds
movsl
mov
out
rcll
scas
sbb
dec
pop
xor
push
xchg
or
inc
outsb
roll
outsl
enter
scas
int3
add
and
movsb
xchg
dec
aad
pop
pop
cmpsb
movsl
inc
loop
jecxz
fidivrl
ret
jecxz
push
pusha
xchg
sub
lret
dec
daa
loop
or
xchg
mov
push
sub
push
gs
xchg
xor
addb
cltd
shl
in
sub
stos
outsl
inc
and
test
sar
std
xor
adc
test
imul
dec
loopne
push
cmc
shll
sbb
jle
fldenv
and
addb
int
sbb
cmpl
loope
das
in
mov
pop
mov
push
adc
cmp
div
imul
mov
xchg
adc
sbb
xor
shlb
push
daa
test
mov
jp
sbb
jbe
push
mov
subl
dec
ss
out
jle
inc
push
shl
ds
clc
sub
push
test
movsb
sbb
fnstenv
shrb
xor
jge
push
pop
test
popa
cmc
je
inc
or
fwait
js
mov
mov
inc
add
cli
dec
pushf
and
inc
scas
enter
cmp
mov
cld
adc
pop
xlat
cmc
shll
sahf
loop
subb
mov
push
sbb
dec
cmp
inc
mov
push
jns
xor
inc
mov
mov
dec
and
mov
push
inc
mov
aas
jg
js
icebp
call
scas
pop
inc
add
dec
loope
sarl
mov
inc
repz
push
lds
pop
xor
pop
cmp
add
adc
scas
inc
sahf
sbb
movsl
jg
dec
mov
cwtl
sub
dec
out
lahf
lcall
inc
push
fnstsw
imul
mov
lea
fstps
xchg
sbb
cmp
test
scas
sbb
imul
mov
data16
cmpsl
lock
add
sbb
call
sarb
xor
add
fnstsw
pop
fs
or
sbb
adc
pop
sahf
adc
pushfw
inc
int3
dec
xor
jecxz
adcb
or
pop
bound
and
outsb
push
not
push
lea
inc
push
adc
jg
jg
rcrl
aam
mov
jge
leave
fimuls
movsb
sub
cltd
int
inc
hlt
sar
xor
fnstcw
mov
cs
clc
pop
daa
pusha
cmpsb
mov
or
adc
adcb
cmpsl
dec
add
sub
pop
std
xchg
sbbl
cld
pop
sbb
jnp
ljmp
xchg
mov
dec
or
mov
sti
ja
xor
seta
stc
and
mov
bound
sbb
fcomip
hlt
mov
mov
mov
stos
sub
dec
xchg
mov
jno
lcall
lea
sub
rcl
push
inc
movsl
pushf
adc
fsub
sbb
sub
xor
or
or
inc
inc
and
and
push
dec
mov
out
arpl
push
sbbb
mov
popa
addl
inc
adc
push
dec
jo
andl
or
std
jp
lods
not
pop
push
cli
repz
mov
outsl
in
pop
and
xor
pop
push
data16
cld
jno
xchg
or
add
push
or
push
xchg
push
sub
push
lds
add
sub
not
mov
lds
push
fwait
int
nop
daa
fsub
cmpsl
repz
shl
cmp
ja
jae
pop
pop
push
jecxz
or
clc
mull
jle
inc
cltd
push
cmp
jl
mov
push
ret
lret
xchg
pop
sub
int
ret
push
sbb
push
adc
adc
jns
adc
cmp
es
loopne
filds
dec
int3
icebp
sahf
xor
dec
call
jecxz
andb
add
lcall
mov
scas
ljmp
fcompl
xor
jecxz
fisubrs
imulb
aas
dec
jge
add
inc
icebp
mov
negb
pop
mov
jns
sbb
scas
out
mov
sub
sbb
sub
or
add
push
xor
jns
adc
lea
sub
stos
cmp
das
andb
xchg
fstl
hlt
sub
jle
fcompl
xchg
push
sbb
jl
and
sar
in
fcompl
inc
dec
sub
and
dec
in
add
jns
adc
inc
inc
mov
dec
les
or
mov
sahf
sbb
aam
or
or
loopne
adc
aaa
xchg
mov
push
jle
aaa
push
mov
pop
mov
std
dec
jle
jnp
or
movsb
aam
outsb
sbb
bound
out
xchg
pop
out
push
test
negb
mov
xor
out
dec
rcll
jne
dec
jg
adc
and
ljmp
adc
push
test
cmp
inc
mov
enter
stos
andl
push
fnstcw
push
inc
sbb
add
jg
add
ljmp
pop
aad
aas
imul
hlt
mov
and
mov
add
sbb
gs
std
xlat
test
pop
movsl
mov
xchg
sti
test
cmp
loope
push
incb
lahf
xor
xlat
xor
jbe
or
aaa
xor
inc
in
sub
xor
mov
mov
xlat
out
iret
and
xor
imul
sub
xor
pop
ret
cmpsb
cmpsl
idivl
je
shl
mov
fmull
dec
addb
dec
xchg
jno
mov
fcmove
pop
inc
cld
lret
mov
sbb
lods
cmpb
movsb
test
sbbb
shlb
pop
outsb
int
jae
pop
addr16
sub
shl
pop
adc
addr16
insb
test
aad
ds
test
jmp
and
sub
dec
ds
jno
push
adc
cmp
or
in
sahf
popl
sti
mov
or
and
aam
add
ja
push
loop
sub
rol
xchg
push
mov
adc
or
fbld
jb
arpl
cmp
mov
push
sbb
ja
sub
imul
push
call
rcll
movsl
ds
out
xor
test
mov
into
pop
scas
or
inc
out
jo
ja
push
fmulp
add
xor
or
outsb
dec
movsl
lea
scas
jnp
dec
jle
sarl
mov
fdivrs
adc
cmp
rclb
inc
add
enter
mov
filds
js
cmp
out
cmpl
insb
cltd
xchg
test
cld
push
pop
push
push
xorl
ss
negl
dec
inc
out
movsl
icebp
mov
pop
movl
mov
jnp
and
cs
std
fs
popa
pop
xchg
aam
inc
jns
cmpsl
ret
inc
jg
ds
inc
mov
imul
stos
jmp
int
inc
dec
out
cs
cs
stos
outsl
add
bnd
cmp
ds
in
aam
notb
cmp
dec
mov
push
mov
call
cld
rcr
cmp
pop
add
pop
or
bound
jo
cmc
sbb
jnp
mov
jb
push
sbb
cmp
sub
push
jecxz
xor
inc
mov
lret
shr
stos
pop
enter
nop
fs
inc
push
pop
out
adc
mov
inc
push
fnop
lods
mov
aam
call
in
xchg
fsubs
sti
add
lods
inc
into
sbb
imul
sub
push
xchg
pop
pop
and
or
xor
push
lret
add
jl
adc
adc
pop
cwtl
ret
cli
sub
mov
pushf
push
movsl
stos
push
lcall
ret
lock
pushf
jno
mov
pop
roll
popa
jbe
testl
cmpps
rclb
lods
dec
pop
jne
add
das
or
xchg
ds
mov
arpl
movsb
das
sbb
scas
testb
stos
mov
fs
mov
sub
add
mov
add
jnp
push
stos
cmp
dec
mov
jb
dec
movb
cmp
scas
mov
testl
push
jae
push
or
dec
shrl
and
test
add
lret
test
flds
call
jmp
sbb
adc
cmp
aad
ds
iret
sbb
mov
adc
scas
adc
cmp
sub
aad
push
jo
add
out
lods
push
rolb
lods
mov
push
lahf
push
iret
inc
pop
mov
cmp
sbb
mov
iret
out
adc
scas
jne
cmp
insb
fwait
inc
inc
jae
test
lods
jg
pop
jae
outsl
mov
inc
push
cmp
cmp
xchg
rolb
pop
xor
aas
jae
push
jno
iret
je
int
xchg
cmp
cmp
test
hlt
jl
jo
mov
xor
lods
dec
xchg
add
jne
push
es
stos
fldenv
inc
insl
movsl
hlt
daa
xchg
mov
xchg
mov
bound
xchg
sbb
sbb
adc
sbb
or
pop
scas
ss
sub
inc
jmp
cmp
lret
cli
popa
outsb
jp
jbe
adc
fdiv
xor
pop
movsb
push
pop
push
in
push
mov
sbb
push
jnp
adc
je
mov
xchg
sbb
mov
push
inc
cmc
jmp
jp
xchg
sti
ficompl
outsl
std
iret
enter
repnz
jle
shrl
cld
je
repnz
or
push
inc
adc
div
or
sti
mov
jnp
dec
out
inc
std
inc
imul
pushf
out
sub
jl
and
and
scas
push
jge,pn
xor
rcr
inc
rcrl
pop
shll
test
loope
xchg
jo
push
dec
mov
repz
adc
nop
jmp
test
movsl
mov
imul
fimuls
subl
ss
push
cli
sbb
mov
mov
fs
cmp
xchg
ds
add
rcrb
ficomps
popa
mov
lock
xchg
fcoml
cmpsl
lods
adc
mov
sbb
xor
ss
push
loop
ljmp
repnz
ficomps
imul
cmp
xchg
push
inc
and
push
xchg
mov
mov
push
leave
or
mov
ja
add
mov
loope
add
bound
jbe
jle
add
sub
cmp
mull
push
cmpsb
jecxz
pop
inc
shl
into
push
cmpsl
nop
mov
dec
cltd
push
outsb
je
bound
in
xor
leave
push
jb
inc
and
inc
adc
ret
lods
dec
pop
inc
or
je
jnp
call
lahf
je
sub
and
or
add
jne
inc
xor
xchg
int3
test
lods
out
movl
in
and
ljmp
out
in
int
push
mov
loope
and
mov
push
ss
rcrb
fldenv
push
jge
in
xlat
sbb
lds
pop
xchg
mov
add
shrl
ret
ss
pop
add
shl
scas
pusha
test
lods
call
jno
cmp
into
js
fs
and
fbld
cmp
mov
xchg
adc
push
xchg
add
inc
lret
adc
aad
jnp
fwait
inc
incb
xchg
pop
mov
cmp
cli
xlat
imul
test
mov
jg
pop
lahf
sub
xor
mov
xor
dec
mov
shlb
sarb
xchg
jl
sahf
xchg
mov
test
jbe
aas
sbb
rcrl
in
inc
fs
das
or
mov
repz
out
cmp
lods
ss
in
add
lcall
add
and
cmc
lods
sub
and
lods
and
idiv
sarb
adc
sub
sbb
jne
ja
sub
add
popa
mov
jo
in
sti
sbb
fcmovnbe
clc
inc
xchg
or
ja
ljmp
pop
pop
cld
xor
pop
xchg
call
fwait
sbbl
or
pop
mov
cmp
xor
fcomps
add
add
push
inc
mov
mov
jle
jae
aas
mov
aad
cmc
xor
inc
mov
xchg
lods
loope
dec
scas
aad
stos
or
xor
or
pop
lock
jns
jo
int
fucomp
push
mov
cltd
in
inc
sbb
clc
outsb
push
xchg
nop
fistpll
cld
cs
inc
adcl
jecxz
cmpsb
xchg
xor
push
push
inc
test
mov
mov
mov
fmuls
inc
mov
inc
add
stos
mov
outsl
jnp
jecxz
subl
or
mov
ret
scas
pop
aas
inc
cmp
add
xchg
rcll
jge
gs
pxor
sbb
leave
int
sbb
lods
nop
and
xor
lea
pop
popa
pop
and
cmpsl
imul
dec
loop
ss
inc
push
or
jbe
cmpsb
mov
scas
cwtl
xor
imul
jno
sub
sbb
push
xchg
fcom
mov
stos
xor
mov
test
ficomps
ljmp
xor
mov
mov
push
or
or
or
fstpl
dec
clc
dec
loope
mov
push
fstl
mov
pop
outsl
inc
mov
lods
out
fidivl
or
rolb
out
out
sub
outsl
push
js
in
push
xchg
mov
xor
sub
lds
mov
jne
adc
test
bound
sbb
cld
aas
dec
inc
xor
dec
fildl
jo
xor
enter
sahf
rorl
mov
outsb
cmp
orb
sub
jo
xchg
out
xchg
jle
insb
xor
repz
and
loopne
dec
pop
jo
icebp
push
nop
loop
sub
and
inc
mov
lahf
push
adc
in
dec
lcall
stos
das
cld
leave
dec
std
in
ss
mov
push
pop
movlps
sbb
lods
sbb
addb
out
xchg
daa
mov
cltd
adc
iret
and
sti
pop
arpl
gs
jb
inc
pop
mov
outsb
mov
adcl
dec
dec
xor
iret
subb
cmp
in
bound
mov
and
or
mov
cmp
cmp
clc
lahf
mov
les
xor
nop
xchg
lret
loopne
fs
pop
xchg
and
fadds
test
mov
fnstsw
std
out
in
push
push
adc
scas
dec
push
mov
cld
inc
mov
leave
lds
ret
and
cmp
call
sbb
je
outsl
imul
ja
lret
jecxz
in
rol
or
and
imull
xchg
jns
das
inc
cmp
dec
shll
jns
jmp
pop
push
cs
loope
test
and
daa
mov
xor
adc
ret
xchg
adc
sti
xchg
lcall
movsl
popa
es
add
push
xchg
lahf
adc
cmp
je
aad
leave
xor
cwtl
xor
mov
cmp
test
inc
cmp
push
lods
push
inc
iret
fisubs
adc
jns
test
lock
popf
ret
shll
test
jecxz
xchg
xor
int3
mov
push
push
xchg
icebp
fidivrl
xchg
int3
dec
ret
prefetchnta
aam
xchg
mov
gs
imul
adc
mov
insl
lret
push
lret
cld
xor
scas
push
movsl
insl
dec
or
sti
outsl
lahf
fimuls
adc
jle
xor
mov
and
cltd
adc
in
mov
and
mov
xchg
test
sbb
and
mov
and
dec
je
arpl
cmp
rclb
pusha
inc
mov
mov
iret
sbb
mov
imul
inc
in
int
ret
mov
out
into
or
aas
das
loopne
sbb
jo
shll
sub
repz
mov
jge
xchg
mov
push
add
bound
mov
xchg
adc
cmc
movsb
loope
loop
pusha
mov
inc
loop
and
cmp
stos
pop
rolb
repnz
adc
sbb
rclb
cmpl
jl
orb
jne
dec
cmp
sbbb
popa
sub
push
dec
aaa
aam
std
mov
mov
mov
lds
lods
xor
in
fwait
orl
pop
popf
hlt
mov
roll
scas
jbe
push
mov
aaa
fs
jmp
pop
rorl
push
negb
adc
cltd
int
jecxz
in
dec
jns
fwait
ret
insb
jbe
dec
push
push
lahf
loopne
lods
js
mov
insl
outsl
pop
and
rcrl
jecxz
mov
std
std
cwtl
aad
sub
stos
into
faddp
cld
mov
and
jle
pop
cmp
bnd
mov
icebp
loopne
mov
adc
inc
dec
shll
lea
xchg
jbe
jne
fwait
push
rclb
in
mov
mov
xor
mov
loope
sub
cmp
inc
test
addl
push
lret
daa
std
sub
push
inc
imul
pushf
xchg
daa
mov
loop
xorb
movsl
or
push
add
test
sbb
test
leave
fs
cmp
push
inc
jns
jbe
lods
adc
lret
push
bound
fistps
incl
push
cmp
dec
sub
cmp
dec
jo
sub
or
mov
pop
push
mov
pop
inc
jmp
cld
push
js
pop
mov
xchg
jb
test
adc
addr16
sbb
ljmp
add
xchg
adc
dec
lods
lcall
jb
sub
inc
jge
imul
xorl
aam
aas
scas
mov
daa
and
in
lock
test
imul
je
cwtl
adc
inc
jmp
inc
jecxz
outsb
lahf
lcall
shl
rcrl
and
je
jmp
ja
push
xchg
mov
sbb
jecxz
jnp
icebp
lcall
and
iret
xchg
mov
pop
xor
call
jmp
mov
cmp
lret
xor
faddl
cmp
inc
mov
pop
mov
aad
sbb
sbbb
lret
jg
insb
movsb
sbb
cwtl
sbb
fimuls
orl
cltd
lret
std
dec
xorb
in
cltd
es
jge
fucom
or
std
ja
fdivrs
jge
push
aad
insl
mov
outsb
fldl
mov
push
add
or
mov
lcall
mov
cmp
xorl
push
stos
mov
fidivrl
aaa
mov
cmp
dec
stos
pop
jl
js
stos
fistps
jge
leave
lock
or
jmp
jge
inc
inc
repnz
pop
inc
and
sub
mov
jo
loope
outsl
test
xchg
mov
mov
fdivs
mov
data16
push
sbb
or
mov
lret
sbb
mov
jae
xchg
sbb
insb
add
and
das
test
sarl
jae
xchg
sbb
in
aaa
iret
sbbb
ds
mov
and
mov
adc
repnz
pop
pop
rclb
in
jmp
cmc
loop
xor
outsl
cmp
roll
xor
pop
lcall
stc
ljmp
aas
enter
jae
lahf
mov
pop
lods
sbb
pop
and
ja
data16
push
stos
jle
xorl
jno
xchg
push
mov
pop
cltd
clc
shlb
adc
lods
pop
add
xchg
stos
out
dec
lods
inc
shll
push
push
insl
test
jmp
stc
sub
mov
mov
cli
flds
into
js
push
inc
movsl
ja
lahf
sahf
movsb
cmp
js
inc
xor
test
cmp
cmc
int
shlb
leave
rcll
xor
mov
sbb
gs
rcl
dec
not
inc
popa
sahf
call
cmp
add
or
test
cmpsb
pop
xchg
xor
dec
mov
or
repz
mov
je
mov
dec
xchg
add
sbb
sub
repnz
rcrl
push
pop
and
addl
xor
and
dec
mov
stos
adc
lock
jmp
out
lock
cmp
push
mov
enter
xchg
loop
sub
cmpsl
mov
pusha
fisubrl
mov
aam
jb
cmp
cmc
lcall
or
sbb
addr16
imul
jb
lods
shrl
pusha
mov
lcall
rcll
cmp
mov
fnstsw
push
ror
movsl
ret
shll
mov
dec
push
jp
ret
pusha
cmpsb
gs
scas
aam
lods
mov
mov
inc
or
cmpl
push
sbb
lods
xorl
push
xchg
mov
push
mov
xchg
sbb
enter
hlt
out
jo
test
mov
jbe
jo
xor
icebp
notl
jmp
stos
mov
and
outsb
cmp
sub
jbe
ret
rcrb
mov
lret
adc
sbb
std
xor
adc
dec
test
je
push
stos
loopne
adc
xor
icebp
fisttpl
ret
loopne
xchg
sbb
shr
lods
cmp
fstpl
int3
pop
add
ds
adc
inc
cmp
jp
pop
dec
mov
cmp
jmp
xor
into
jmp
mov
mov
mov
ficoml
imul
scas
adc
lret
xchg
inc
inc
in
insb
popa
out
sub
or
addr16
mov
aam
sbb
mov
mov
idivb
inc
test
mov
shrl
gs
loopne
add
arpl
push
add
or
and
repnz
nop
out
ljmp
bound
repnz
mov
push
jnp
pop
pop
imul
adc
out
ja
xchg
push
inc
mov
mov
mov
in
fs
stc
adc
int3
push
loop
addr16
ret
add
mov
insb
jl
js
sbbl
mov
dec
xchg
fcompl
push
lret
cltd
leave
fisttps
lea
push
rol
cmp
out
into
fs
or
aam
mov
test
lret
cmpsb
xchg
ret
cwtl
lcall
dec
xchg
dec
inc
push
test
out
int
mov
sub
int
shlb
mov
xchg
cmpsl
push
inc
pusha
aam
push
jg
bound
push
inc
lahf
mov
add
xor
ret
aaa
mov
mov
ds
in
push
push
nop
pop
inc
mov
loopne
sub
dec
mov
xor
adc
and
test
ja
out
xor
pusha
push
mov
sahf
daa
loopne
daa
stos
mov
insl
xor
xchg
mov
stos
das
mov
inc
fs
adc
test
mov
cmc
pop
pop
and
and
xchg
pop
js
loop
xor
outsb
mov
or
xor
movsb
and
dec
sbb
lahf
jecxz
adc
fnsave
adc
xor
fmull
xchg
cmpsb
pop
lret
push
inc
arpl
add
mov
jne
pusha
mov
or
shr
addr16
adc
nop
loop
sbb
pop
fcomip
and
out
das
cmp
add
pop
sub
push
sbb
xchg
adc
jle
mov
inc
mov
jl
xor
ds
call
fstpl
cwtl
aam
repz
clc
xor
or
in
mov
repz
inc
sub
mov
mov
jge
add
dec
es
jg
mov
pop
or
mov
aas
mov
add
int3
and
push
add
daa
addb
mov
mov
add
adc
lcall
cmp
cli
mov
cmpsb
push
nop
aad
test
mov
imul
in
loopne
fucomp
push
pop
arpl
mov
outsb
inc
cmp
scas
push
and
mov
pushl
and
cli
mov
sbb
scas
push
mov
les
sbb
xchg
test
clc
xor
add
out
icebp
adc
inc
xor
dec
cmc
sub
cmc
fnsave
jns
adc
mov
ds
sub
mov
movsb
mov
lds
sti
rorb
or
mov
jo
clc
je
push
and
ljmp
idivl
and
jge
mov
mov
test
cmpl
or
mov
icebp
jle
and
xabort
fs
jne
and
or
lcall
sbb
mov
loopne
std
pushf
jae
xchg
mov
dec
jo
fisttpl
aaa
ficoms
into
stc
lods
xlat
gs
mov
inc
or
sbb
in
and
dec
xor
inc
test
pop
pop
mov
rcrl
sub
negl
icebp
dec
and
leave
jle
fisubrl
jle
inc
cmpsb
or
scas
shl
rcrl
pusha
rol
push
pop
mov
add
sub
mov
imul
cmp
xchg
lods
test
stos
insl
inc
cltd
sti
fwait
imul
hlt
push
test
xor
sbb
cmp
cmc
dec
movsl
dec
stc
les
pop
je
loopne
cmp
imul
or
add
lock
lret
jmp
inc
stos
movsb
sbb
das
addr16
inc
ret
jns
fwait
push
inc
jmp
mov
inc
movsl
xchg
jb
repnz
jle
mov
hlt
pop
ficompl
stos
test
mov
movsl
jns
pop
inc
add
sub
cld
test
stos
daa
out
and
inc
jge
pop
insb
movsl
ds
or
in
mov
aas
scas
pop
sbb
out
sbb
mov
insl
pusha
push
push
jo
in
push
fisubs
push
enter
cli
mov
movb
sbb
add
jp
adc
adc
xchg
sub
lds
insb
leave
mov
jo
mov
aam
addr16
jl
or
sbb
imul
std
mov
cmp
or
test
adc
inc
inc
repnz
mov
xor
add
pop
scas
loope
cmp
dec
jg
push
xorl
xchg
fsts
shrb
adc
sbb
cmp
cmp
sbbl
in
sub
sub
js
xor
sbb
sub
and
dec
add
andl
mov
sahf
and
pop
jg
or
aad
lock
fiadds
mov
mov
or
or
popf
adc
push
mov
shll
push
pop
pop
imul
es
repz
push
adc
jl
or
leave
lods
mov
rcrl
inc
movsb
sub
fwait
inc
cmp
loopne
inc
pop
or
fsubrl
lretw
and
push
pushf
add
cltd
aaa
mov
shll
scas
imul
idiv
cmp
cmpsb
inc
cwtl
cld
pop
pop
shlb
rcll
cmpsl
daa
and
addr16
loopne
sbb
hlt
test
or
push
ret
jae
sbb
mov
out
fidivs
imul
enter
mov
sbb
imul
jg
insb
loop
dec
and
dec
loopne
cmpsl
das
xlat
sbb
push
mov
loopne
and
cli
sub
push
repz
dec
lods
push
adc
in
icebp
fimuls
int3
imul
fnstsw
dec
out
hlt
iret
or
push
in
mov
push
mov
mov
mov
out
pushaw
sbb
imul
sbbl
mov
jae
jns
jno
mov
cmp
fstps
inc
leave
push
aas
subb
imul
jno
jg
in
icebp
cmp
popa
pushf
nop
sbb
and
mov
es
cld
xchg
adc
mov
pushf
lock
mov
dec
sub
stos
sbb
cld
or
dec
sahf
roll
and
js
lahf
adc
mov
sbb
push
cld
sbb
push
lods
push
movsb
and
adc
jnp
jns
ljmp
shrb
aas
mov
cmpsl
inc
std
jne
test
xlat
ret
icebp
lds
inc
sbb
push
rcll
xchg
pcmpeqd
test
cld
dec
dec
xchg
std
add
outsl
bound
mov
inc
xor
sbb
cltd
lret
or
mov
inc
shrl
push
pop
fs
ret
cmp
ja
ljmp
imul
mov
ffree
cmp
push
gs
shr
repnz
mov
hlt
jl
test
mov
fists
and
sbb
jo
ret
and
lock
xchg
pop
insb
scas
pop
scas
add
jecxz
or
js
in
cmpb
jno
mov
cmp
mov
xor
fs
push
cmc
jo
je
mov
insl
mov
rorl
cld
outsl
xor
fists
sbb
cmp
mov
aad
push
in
cli
and
daa
mov
jle
xchg
mov
xor
addr16
cmp
or
cli
push
pop
bound
test
mov
arpl
mov
call
push
std
aas
mov
lods
clc
mov
inc
push
xor
into
xchg
pop
add
push
or
pop
sbb
aam
int3
lret
xor
aam
rcl
push
rcrl
lahf
sub
add
mov
cmp
push
cmp
pop
addr16
and
mov
aaa
insb
mov
mov
ljmp
out
jle
jecxz
dec
sti
dec
jmp
or
lods
dec
push
bound
test
out
cli
sub
in
sbb
pop
decl
test
xchg
mov
test
jecxz
stos
addb
lahf
inc
ret
jp
xor
loop
js
jnp
xor
mov
aas
pop
xor
fldenv
xlat
mov
push
xchg
xchg
stc
js
push
push
mulps
inc
mov
fcomip
adc
dec
xchg
mov
sub
inc
and
push
mov
adc
das
loope
dec
jb
ja
lret
daa
push
out
xor
mov
mov
jp
or
mov
add
dec
push
push
decl
sar
xchg
push
mov
xor
mov
add
jmp
add
je
xorb
je
mov
and
inc
nop
fmuls
add
pop
in
data16
nop
out
test
pop
sub
mov
sbb
fldl
push
inc
jmp
jg
pushf
scas
pushf
gs
inc
movsb
and
sub
xchg
jmp
loopne
xor
push
into
out
mov
xor
jnp
dec
sub
inc
int
xadd
cmp
jle
movsb
sbb
lods
insb
ret
sar
or
out
das
cmp
repz
daa
movsl
mov
push
in
xor
in
les
sub
stos
repz
lret
inc
mov
push
dec
or
mov
pop
pushf
mov
and
and
sbb
xor
xor
xchg
sub
jno
into
fwait
std
cmp
ss
xchg
aaa
mov
cmpsb
cmpl
enter
loope
int
cmc
cmp
adc
jmp
bound
dec
scas
imul
movsl
and
out
push
jl
lret
dec
aad
fbld
adc
mov
jmp
mov
js
add
push
mov
mov
mov
mov
and
mov
mov
mov
and
mov
xchg
insl
lock
fcompl
dec
ficoms
pushf
repnz
fmuls
pop
in
sub
sbb
dec
mov
lahf
mov
sbb
out
mov
mov
sbb
cmp
repnz
aad
mov
cltd
mov
or
data16
or
pop
xchg
or
cli
popa
sub
popl
adc
pop
pop
sahf
fdivs
cwtl
fsubp
lcall
cmp
cmp
inc
in
loope
imul
outsl
or
mov
ret
mov
rolb
add
int
repnz
decl
dec
xchg
loopne
pop
fucomp
fdivl
pop
push
sbbl
insb
jbe
out
dec
test
adc
or
pop
cmc
and
lret
inc
mov
inc
xchg
sbb
fwait
sbb
out
clc
add
mov
pop
loop
in
les
imul
xchg
mov
movsb
jmp
mov
loope
stos
in
sub
adc
outsb
fidivrl
add
xchg
pop
test
pusha
push
fwait
sub
cmp
mov
jbe
test
aam
jge
inc
jle
imul
jge
shrl
shl
push
jne
and
xlat
mov
push
stos
and
in
jg
jmp
outsb
mov
iret
mov
or
lret
int3
rolb
iret
inc
sub
sub
sbb
insl
lods
mov
arpl
jb
scas
pop
add
aas
fiadds
lret
mov
push
or
and
cmpsl
sub
jg
inc
fxam
loope
nop
pop
push
in
mov
adc
sti
rcrl
xchg
push
setg
add
pop
stos
jl,pt
mov
dec
pop
xor
mov
sahf
mov
dec
in
das
movsb
cmpsb
sbb
and
xlat
pop
mov
stos
pusha
xchg
mov
pop
mov
adc
inc
out
jb
out
mov
jmp
xor
push
pop
or
or
sub
mov
fsubr
mov
je
inc
jae
jae
and
adc
ljmp
dec
and
jo
xor
cmpsb
daa
push
into
pushf
and
mov
push
jle
out
dec
loope
cmp
add
flds
jae
paddsb
push
shrb
push
sbb
cs
nop
push
cwtl
xchg
fldenv
ret
push
and
movsb
or
jae
inc
mov
mov
pop
psraw
xlat
dec
mov
sub
xlat
out
pop
repz
push
xchg
adc
xchg
loope
shl
sub
adc
xorl
js
enter
fidivrs
dec
jmp
dec
cmp
add
push
and
repnz
mov
dec
repnz
in
xchg
or
fs
lods
inc
mov
jp
xor
out
js
faddp
mov
mov
mov
dec
xor
out
mov
inc
jg
ret
xchg
pop
adc
dec
xchg
add
add
pop
hlt
lret
xor
fsubr
push
call
mov
jg
cs
test
movd
dec
in
imul
fbstp
popa
fnstcw
iret
mov
adc
dec
rorl
mov
mov
stos
popa
push
aas
mov
std
in
pushf
insb
adc
push
movsl
sbb
fdiv
adc
test
mov
or
cld
cmc
and
into
or
rolb
mov
mov
hlt
mov
in
data16
loope
out
sub
movsb
popa
scas
lds
jbe
bound
dec
das
sbb
add
sbb
iret
insb
loop
mov
mov
inc
ja
and
pop
test
pop
jae
dec
push
std
push
pop
outsb
jo
imul
or
int3
aas
ljmp
xor
mov
mov
in
add
sub
push
lods
popf
test
into
cmp
xchg
or
mov
jmp
cmpl
pop
or
rep
fstps
jl
adc
mov
les
cmpsl
shll
pop
inc
jl
out
cmp
push
shll
push
pushf
fildl
pop
jle
lahf
sub
repz
push
mov
pushf
jecxz
mov
or
rorl
push
cmpsl
cmpsb
push
rcl
aam
pop
psubw
adc
cs
mov
adc
test
jmp
out
xchg
in
ss
dec
xchg
jp
inc
popa
dec
iret
mov
cmpsl
or
int
sub
pop
filds
outsl
pop
mov
fbld
sbb
push
xchg
push
rclb
hlt
dec
shr
scas
adc
mov
jbe
shlb
mov
insl
mov
push
stc
ds
ret
test
inc
dec
pusha
dec
ret
dec
insl
mov
push
in
insl
pusha
or
cmp
mov
aad
sti
sbb
mov
push
mov
or
and
add
loop
inc
mull
faddl
xor
mov
cs
mov
inc
xor
into
pop
dec
adc
pop
in
stc
push
data16
into
dec
mov
ret
mov
xchg
or
xchg
icebp
leave
scas
sahf
xor
addr16
add
scas
cmp
inc
frstor
adc
mov
xchg
pop
cltd
add
add
xor
dec
mov
xchg
push
mov
ljmp
lcall
rcrl
fwait
jl
xchg
inc
push
sti
inc
cld
jg
add
bound
jno
div
outsb
cmpsb
sub
fildll
mov
jne
pop
xchg
jnp
inc
stc
mov
lock
sbb
ret
daa
lret
inc
loopne
push
push
jmp
adc
sti
int
mov
xor
fistpl
and
xlat
pop
pop
or
sbb
out
icebp
xchg
push
out
into
pop
ljmp
imul
xor
ljmp
cmpsl
lods
pop
mov
pop
pop
ja
stc
mov
or
inc
int3
imul
xor
adc
jmp
jbe
repz
inc
es
scas
fcoms
aaa
dec
and
push
inc
lea
add
cmp
cmpsb
and
push
jg
test
mov
sub
stos
cmpb
mov
add
xchg
xchg
pop
cmp
cli
mov
jl
mov
add
jb
cwtl
mov
jecxz
jmp
cmp
stos
mov
fsubs
leave
cld
in
xor
rclb
dec
pop
push
loope
and
dec
sbb
and
and
inc
adcl
mov
pop
imul
sbb
or
xchg
jnp
lds
pop
es
negb
xchg
sbb
xor
pop
pop
xor
add
sbb
mov
mov
inc
std
je
inc
imul
jge
inc
fsubl
cmp
gs
dec
jp
out
mov
popf
dec
mov
sbb
inc
fwait
js
call
and
fwait
jg
push
ret
pushf
xchg
flds
mov
cmpsl
stc
aad
insb
cmp
sbb
inc
mov
mov
rorb
int
or
ds
and
and
fldl
mov
lret
imul
aaa
mov
or
adc
lods
test
and
jnp
cmp
jae
push
loop
icebp
xlat
decb
cmpsb
jo
push
out
inc
push
mov
ret
insb
xor
test
in
div
int3
xchg
mov
add
dec
mov
std
das
cltd
and
popf
in
mov
pop
add
inc
xlat
rolb
inc
jg
cmc
sub
push
je
es
xlat
xor
or
pop
pop
or
repz
inc
imul
loope
test
dec
push
subb
lock
push
sub
pop
int
aad
dec
sub
xor
jle
iret
or
inc
aad
add
sub
xor
icebp
lods
rol
mov
les
sbb
or
stos
xlat
loope
cmpsb
stos
sub
std
dec
repnz
insl
mov
in
fldenv
jl
jmp
jge
add
mov
cmp
sbbb
mov
cmp
lcall
jnp
xor
inc
fisubrs
cwtl
jae
sbb
cs
mov
popa
xchg
and
mov
jb
fs
xor
sub
pop
mov
cmp
dec
push
push
sbb
bound
push
cmp
in
cli
mov
lock
imul
orb
mov
je
ss
or
mov
jmp
xor
aas
cmp
inc
nop
imul
scas
ss
cmc
clc
les
iret
stos
lcall
adc
push
iret
lock
sub
lret
pop
test
or
adc
imul
dec
int
dec
jg
xchg
fcmovb
cs
add
cmp
adc
lahf
cmp
xorl
int
xor
mov
frstor
inc
testl
jecxz
shlb
test
stos
pop
insb
ds
lods
jmp
cld
aad
jge
mov
inc
mov
or
push
cltd
mov
stc
xor
scas
lret
xor
xchg
inc
andb
aas
clc
xchg
mov
lods
and
inc
sbb
jle
or
arpl
jg
fwait
mov
xor
xor
lret
fcomp
add
fsubp
mov
adc
sbb
lret
cmp
and
and
test
outsl
cmp
lret
push
jge
push
or
outsl
imul
mov
mov
mov
aaa
dec
mov
lds
ja
scas
xchg
or
mov
lahf
stc
cmp
pop
push
sbbl
mov
inc
cmpsl
mov
into
movsb
jmp
les
push
shl
addr16
xchg
adc
inc
lahf
cmp
jl
pop
ss
cmpb
fs
lret
insb
mov
pushl
adc
xor
push
ljmp
pop
fs
inc
cltd
jg
dec
inc
push
out
popa
out
loope
pop
or
bound
and
xchg
test
stos
data16
xor
mov
into
cs
jns
outsb
ss
mov
cltd
jne
mov
mov
and
xchg
sti
sti
push
insl
imull
mov
xchg
push
cltd
les
mov
fs
xchg
sub
and
iret
adc
push
fidivrs
mov
pop
sub
jmp
fcomps
mov
adc
dec
cmc
xor
gs
dec
fistpll
fadds
or
mov
inc
sbb
cli
xor
ja
adc
sub
pop
cmp
jnp
fisttps
dec
leave
xchg
mov
pusha
push
pop
sbb
mov
lcall
in
sbb
insl
arpl
mov
lock
mov
imul
and
jbe
fwait
cmp
jecxz
push
and
cmpsb
mov
mov
adc
mov
cs
icebp
stc
mov
insb
xchg
sti
pop
mov
jnp
inc
movsl
clc
sti
xchg
mov
rcll
fwait
mov
jecxz
xorl
or
cwtl
or
push
mov
in
movsb
and
xor
lahf
push
fsts
push
jmp
lea
jge
leave
jbe
sahf
mov
lcall
push
push
insl
popa
in
jb
int
call
jecxz
stos
lds
xchg
icebp
push
icebp
mov
bound
fsubl
sti
mov
cmpsl
inc
and
cmpsl
cwtl
imul
lea
fnstsw
sbb
push
fsts
call
sub
pop
dec
inc
cmp
inc
mov
int
adc
lds
xchg
mov
push
mov
sbb
jne
lahf
pusha
xor
out
movsl
sub
jno
pop
push
cmp
loopne
lds
mov
mov
test
mov
sbb
or
dec
mov
and
movsl
imul
lds
insl
popa
xor
nop
jg
ds
mov
jns
inc
mov
popa
mov
jge
es
imul
adc
pop
popa
adc
xchg
jmp
pop
gs
sbb
cmp
adc
testb
mov
mov
mov
test
arpl
mov
sbb
fcomp
subb
ljmp
daa
jge
or
mov
das
divb
mov
xchg
ja
pop
hlt
cmpsb
pop
adc
cmp
stos
adc
mov
xchg
xor
mov
lds
roll
or
lods
jmp
push
inc
ja
add
push
fmuls
jg
xlat
add
mov
or
inc
xorb
insl
int3
fstps
xchg
lret
lret
lods
xor
mov
roll
sbb
dec
push
insb
mov
arpl
xchg
sahf
fs
fidivs
jns
xor
lret
dec
mov
xor
into
and
stos
aam
scas
imul
jp
jg
test
movsl
lcall
lods
nop
aaa
jecxz
dec
incl
mov
dec
jg
sti
sub
repnz
fwait
cmp
and
arpl
push
xchg
bound
out
shll
push
sub
outsl
mov
loop
add
les
push
sub
mov
int
xor
dec
outsb
push
jbe
mov
into
and
jecxz
add
jne
mov
mov
pop
leave
pop
pushf
cli
adcl
jb
cmc
repz
mov
inc
jg
lret
xor
mov
xchg
adc
sub
imul
stc
mov
stos
pop
fistpll
addr16
jbe
inc
divl
lret
loope
adc
add
xor
lock
jno
mov
movsl
popf
les
pop
sarb
sbb
sub
imul
jmp
cmp
xchg
cmpsb
and
bound
repnz
jmp
inc
and
je
lods
jo
iretw
je
test
adc
xchg
outsl
cmp
ja
pop
pop
xchg
dec
cmp
push
sti
scas
fisttpl
sub
imul
ficoms
fbstp
inc
pop
or
adc
push
and
aaa
das
mov
js
out
xlat
hlt
fnstsw
pop
sbbb
sbb
push
enter
sbb
outsb
sahf
lods
and
je
fcoml
dec
cmp
jae
bound
push
xchg
add
data16
xor
mov
dec
push
enter
cmp
lcall
rolb
mov
cmp
push
enter
call
sub
sub
xchg
into
dec
outsl
xchg
or
sbbb
xchg
dec
cld
jbe
jo
jp
mov
jmp
insl
pop
ficoms
mov
fsubr
ljmp
insl
xchg
lcall
jns
cmp
mov
hlt
xor
jecxz
ret
outsl
pop
arpl
dec
js
sbb
or
adc
jp
cwtl
adcb
nop
pop
stos
sub
lret
aad
cmp
sti
sbb
fimull
push
js
mov
push
push
pop
ret
mov
or
negb
imul
loope
repz
enter
test
pop
mov
jmp
sub
out
jle
lock
xlat
fnsave
movsl
pop
add
rorb
mov
sub
jno
shrl
xchg
imul
pusha
imul
or
mov
or
clc
mov
add
inc
aad
int3
cmp
add
das
cmp
adc
sbb
fidivrs
repz
mov
mov
add
cmpsl
fstl
sbb
xchg
xor
inc
xor
inc
and
and
push
stc
xchg
daa
sbb
xor
lret
adc
fwait
lea
mov
pop
dec
sti
add
pop
arpl
lahf
pop
imul
test
pop
es
and
rcll
ljmp
scas
iret
int
cwtl
addr16
dec
and
mov
mov
pop
mov
scas
xchg
mov
insl
mov
push
icebp
mov
inc
gs
out
ret
pcmpgtd
imulb
xchg
sahf
pop
sub
add
pop
xchg
mov
xchg
jmp
and
out
inc
cmovl
icebp
or
out
gs
jle
xor
bound
dec
cmpl
mov
cld
scas
and
push
loopne
jmp
push
mov
jge
in
mov
cwtl
loope
aam
loop
seto
pushf
pop
push
mov
dec
int
jge
jge
sub
xchg
popf
jne
fsubl
mov
pop
dec
out
ja
jo
jge
mov
jmp
rcrb
mov
stc
stc
or
add
loopne
lahf
sti
sbb
test
repnz
fcmovne
cmp
or
out
js
push
or
jle
cmp
and
andl
jmp
out
lret
ja
or
add
lea
jno
pop
imulb
mov
aaa
stc
mov
sub
aad
lcall
arpl
add
fcompl
mov
int
adc
js
icebp
clc
fiaddl
jg
mov
mov
call
mov
jb
ss
into
pop
sahf
inc
out
add
movsb
adc
cmp
shrb
loopne
mov
inc
jo
icebp
sbb
pop
push
repnz
mov
into
fldt
adc
sub
inc
cmc
and
es
pop
sub
sahf
and
xor
aaa
leave
inc
lret
lds
inc
stos
sub
xor
jbe
cmpsl
iret
or
enter
lock
fwait
fisttpl
lahf
out
inc
fcmovnb
inc
into
adc
testl
xchg
insb
inc
dec
ret
jb
out
adc
mov
rorb
jae
sub
push
jl
xor
sbb
loopew
lods
je
movsl
mov
jge
xor
jbe
and
sbb
xor
loop
sahf
pushf
out
bound
adc
insl
inc
repz
jne
popa
mov
int3
maxps
mov
adc
xchg
xchg
stos
fdiv
mov
and
sbb
jp
dec
add
mov
fistpl
cmc
push
aad
jnp
and
test
pop
xchg
dec
sub
jne
sbb
xlat
sbb
sub
test
ss
sahf
mov
xchg
jae
bound
add
int3
sub
push
and
sub
sub
scas
int
sbb
mov
fsubl
inc
in
cmpsl
dec
inc
outsb
mov
sub
dec
push
xor
sub
arpl
sbb
mov
stc
in
inc
and
cltd
xchg
psadbw
mul
xchg
fbstp
imul
push
push
push
pop
push
jne
xor
mov
jl
push
mov
fisttpll
pop
in
pop
xor
das
cltd
shrb
xor
dec
lods
stos
dec
sbb
test
rcrb
jg
out
icebp
enter
std
jne
pop
fcoms
add
fistps
pusha
sbb
sbb
into
sub
jmp
pop
mov
sqrtps
and
inc
scas
int
test
jecxz
out
cmc
fadds
lahf
fmuls
mov
sti
ficoml
add
out
mov
loop
js
iretw
outsl
lea
mov
xlat
push
bnd
out
cld
test
xchg
xor
inc
lods
movsl
ds
out
out
jp
cs
rolb
fidivl
pushf
sbb
sti
and
stos
lock
pop
sbb
pop
loope
fnstsw
fisttpl
jecxz
popa
test
movsb
jmp
mov
rorb
inc
adc
hlt
sub
xchg
popa
dec
repnz
jb
shl
mov
and
ja
das
shlb
xlat
sbb
mov
or
xchg
mov
aas
xchg
iret
inc
inc
jbe
ret
dec
mov
daa
pop
shr
mov
loop
push
xor
int3
or
scas
rorl
cmp
in
stos
dec
sbb
add
jb
les
cwtl
scas
fnstenv
add
scas
mov
jge
fmul
jb
call
lret
mov
fiadds
sbb
and
jno
cmc
ret
or
and
push
cmc
std
movsb
push
lahf
mov
mov
sub
ljmp
jl
shlb
jge
cmp
lock
pminsw
mov
jbe
add
pop
sub
xor
je
cmp
cmp
lods
pop
mov
mov
or
pop
lret
sub
lret
mov
pop
push
push
mov
shrl
stos
mov
xor
push
movsb
outsl
iret
cld
cmp
outsl
add
pop
loopne
arpl
test
inc
adc
ficoms
repnz
jae
mov
pop
and
sub
enter
out
in
in
dec
lods
dec
loope
lcall
add
xchg
sbb
cmp
fsts
jno
push
movsl
mov
pop
jb
andb
scas
ss
mov
dec
ret
pop
cmpsb
mov
inc
lods
push
jl
and
cmc
xor
outsl
mov
int
or
fidivs
inc
lret
cltd
cmp
les
dec
jl
sbb
sti
icebp
js
imul
mov
pop
xchg
js
push
mov
loopne
iret
cmp
addr16
mov
addl
and
jns
pop
movb
aas
and
jecxz
mov
andb
inc
fs
adc
sub
and
xchg
jp
ficomps
addr16
mov
cmpsl
cwtl
das
xchg
mov
movsb
lods
xchg
add
mov
flds
addb
out
arpl
or
push
xor
je
lret
push
pushl
and
inc
sbb
push
adc
stos
sub
dec
push
sbb
stos
out
mov
insl
pop
adc
in
adc
mov
cmp
jecxz
imul
movsb
mov
pop
imul
scas
and
js
dec
lock
or
and
pop
mov
outsl
sbb
pop
sub
push
fdivrs
mov
test
mov
lods
cli
xchg
and
dec
das
dec
pop
enter
cmpsl
mov
movb
fstps
int
out
cmp
imul
mov
outsl
fildl
pop
jbe
out
lods
or
imul
rcrb
sub
xor
popa
sbb
xor
stos
mov
stos
sub
insl
cmp
hlt
sub
inc
test
insb
cmp
cmp
andb
loopne
je
pop
mov
int3
scas
cwtl
jge
xchg
xor
mov
loopne
dec
popf
mov
aad
sub
insb
push
lret
xchg
jbe
jbe
lea
cmpsl
call
add
mulb
adc
jmp
cmpsb
cli
lods
arpl
int
shlb
iret
les
loop
repz
lds
push
sbb
mov
pop
pop
pop
add
adcb
ja
jno
test
mov
jae
iret
adc
push
mov
mov
add
pop
and
push
xor
das
or
or
sarl
inc
mov
roll
cwtl
fimuls
inc
cmp
mov
mov
sub
fsubl
enter
xchg
cmp
cmp
or
pand
dec
pop
loop
movd
push
or
cmpsl
xor
jecxz
pop
test
movsb
push
xchg
or
fildl
push
retw
ret
enter
cmp
iret
fimull
cmp
adc
popf
mov
xchg
test
mov
roll
out
dec
aam
mov
cmp
pop
jbe
fimuls
jnp
sbb
popf
aad
cmp
mov
xor
mov
imul
add
loop
addr16
shrl
jmp
aam
lea
std
pop
hlt
mov
mov
shrb
in
adc
xor
addl
cwtl
push
mov
clc
xlat
daa
fcomi
adc
mov
push
or
int3
mov
fcom
fcoms
fucom
pop
pop
xor
insl
pop
sub
fbld
stc
mov
mov
pushf
mov
jnp
inc
mov
shlb
outsb
inc
in
loop
cmc
daa
ss
sbb
loop
gs
dec
aas
or
lcall
loop
enter
out
jp
lahf
adc
adc
fcompl
mov
testb
mov
nop
stos
sbb
dec
and
jae
sub
rcpps
in
mov
dec
aam
test
cmp
sub
in
insl
dec
pop
stos
fnstcw
cmpsb
sub
sbb
mov
int
adc
jnp
and
add
mov
das
adc
icebp
lret
outsl
xchg
subb
cmpsb
gs
or
push
aas
mov
xchg
push
into
int3
inc
jmp
dec
mov
mov
and
mull
adc
std
or
js
in
xchg
mov
mov
dec
aad
fisubl
sbb
push
stos
jno
shl
je
sub
dec
jecxz
leave
jb
jns
fistpll
sbb
je
out
xchg
mov
stos
addb
push
cmp
adcb
mov
sti
or
mov
cmc
mov
lea
fbld
pop
outsl
jo,pt
ljmp
and
imulb
sbb
pushf
xchg
sbb
sub
mov
pop
pop
xor
int3
mov
jmp
mov
fidivrl
mov
pop
div
movsl
push
adc
out
cld
lcall
xchg
imul
sbb
adc
scas
aas
xchg
adc
pop
ss
inc
arpl
std
push
xor
push
gs
or
aas
popf
loop
mov
test
sbb
test
adc
data16
lahf
dec
or
jmp
pop
adc
int
popa
mov
sbb
fmuls
mov
pop
pop
inc
xchg
xor
jmp
jnp
pushf
adc
imul
clc
and
movsb
nop
sbb
jmp
jbe
mov
iret
popl
and
mov
adc
adc
pop
movsb
fdiv
call
in
mov
mov
xchg
lods
test
aad
in
in
jge
lds
and
cmpsb
xor
scas
inc
inc
xchg
xor
popa
rorb
lahf
sbb
inc
dec
mov
lods
jg
pusha
cmp
fistpll
repnz
adc
xor
jb
mov
pop
jmp
inc
push
add
xchg
ret
cmp
sti
jns
sti
jl
inc
das
push
xor
mov
xor
dec
andb
mov
insl
rcll
arpl
ss
test
cs
or
jnp
xchg
pop
cmc
push
mov
dec
std
pop
jae
or
push
out
jl
lcall
sub
inc
gs
mov
stos
xchg
dec
mov
xor
lret
push
push
idiv
dec
ficomps
mov
xchg
dec
movsl
jno
pop
mov
push
mov
pop
cld
pop
push
fs
add
and
pop
test
stc
bound
lods
inc
rcrl
rcll
mov
inc
das
push
movsb
sub
or
mov
into
pop
outsb
popa
inc
in
inc
std
pop
lds
jns
outsb
cmpsb
xchg
push
dec
ljmp
or
jle
leave
ret
lahf
arpl
les
bnd
and
jp
dec
mov
aad
cmp
mull
mov
mov
es
or
jp
adc
jo
inc
sub
xlat
push
mov
adcl
push
shll
mov
xchg
fmulp
adc
gs
sti
jmp
scas
dec
ljmp
idivl
sbb
jno
ret
loope
das
jg
fbld
in
dec
aas
xchg
cmc
popf
jle
out
lret
fistpl
xor
loopne
cmp
into
jae
xor
xchg
das
bound
push
xchg
jmp
or
sbb
addb
fldcw
inc
inc
ret
xor
mov
push
mov
push
dec
and
mov
xchg
outsl
jae
scas
fldt
push
dec
push
sahf
add
xchg
in
xor
or
jbe
adcl
adc
fmuls
fldenv
mov
sub
fimull
push
inc
not
inc
xor
push
or
icebp
xchg
jp
out
mov
test
xor
and
and
aam
call
dec
rorb
mov
scas
adc
mov
cwtl
faddl
mov
and
ja
outsb
cmpsb
mov
sbb
fldl
cmpsb
jb
test
cmp
insl
std
push
flds
shrb
push
sub
pop
into
shl
jge
and
aas
push
das
adc
jp
adc
gs
lock
jg
sbb
cmp
xchg
cmpsb
pop
popf
fcoml
sahf
xchg
std
out
dec
aas
dec
add
mov
fs
repnz
mov
inc
dec
pushf
push
adc
lcall
cmpl
pop
and
aam
or
lea
stos
push
push
add
cmc
xor
sar
sub
idiv
cmp
sahf
sub
xor
jbe
popa
xchg
std
out
adc
sbb
cmp
idivl
and
loopne
and
fs
mov
loope
pop
cmpsb
push
loop
cmp
fstl
into
js
imul
mov
mov
lcall
xchg
adc
pop
addr16
fldcw
mov
pop
jle
xor
es
xorl
and
and
insl
sub
fwait
shlb
movsb
jle
sbb
sub
outsb
lret
fisubrs
dec
jp
and
jae
test
xchg
push
loopne
in
das
ror
pop
jg
movsb
mov
je
gs
jae
sub
test
insb
in
push
inc
out
es
pusha
xchg
xchg
mov
enter
lea
dec
jns
mov
dec
lret
cmp
pop
in
sbb
jp
mov
jge
push
shlb
stos
push
cld
test
ficomps
lea
pop
mov
out
mov
movsl
daa
add
cmp
test
jp
jl
mov
push
jl
scas
cmpb
hlt
subb
xchg
mov
insl
cmp
ds
sbb
cmp
adc
stos
shl
mov
inc
mov
ds
in
mov
xor
or
pop
mov
mov
add
adcl
imul
xlat
jmp
int3
pop
push
push
and
push
movsl
sbb
or
xchg
xor
or
cmpsb
stc
mov
test
and
mov
pop
data16
sbb
cld
push
fnstsw
inc
gs
or
scas
aad
pop
shl
movq
ret
testb
mov
cltd
dec
push
mov
mov
mov
mov
mov
pusha
add
or
cmp
adc
xor
mov
clc
test
inc
gs
shrl
popf
popf
jae
mov
jecxz
insb
cmpb
stos
xchg
test
cmpsl
adc
sbb
xlat
jge
mov
dec
xchg
and
xchg
push
jo
add
aas
cmp
xchg
js
test
dec
add
enter
scas
test
sbb
xchg
sub
inc
mov
or
mov
mov
aaa
cmp
mov
and
sbb
xor
repnz
jns
aas
pop
dec
or
fisttps
jae
test
mov
and
xor
adc
mov
lock
mov
adc
or
jl
hlt
cli
repz
cltd
std
jbe
fdivrl
cwtl
add
xchg
mov
out
adc
pop
add
or
xchg
pop
rorl
add
sub
loopne
cmp
out
dec
popf
jns
outsl
popl
in
stos
mov
xchg
mov
int
das
pusha
mov
xor
in
or
jbe
push
pop
imul
sub
or
clc
stos
mov
mov
xchg
pop
sub
xor
shlb
inc
decl
sbb
mov
push
sbb
adc
cwtl
adc
push
add
xchg
iret
sbb
push
adc
lret
push
rorb
in
pop
loopne
and
test
and
cld
sub
cmp
cltd
jbe
test
gs
xchg
mov
rcrl
mov
cwtl
fldl
or
sbb
mov
sub
or
mov
mov
and
and
mov
dec
and
lock
push
fldt
loopne
outsb
stos
dec
add
insb
movsl
or
sbb
int
or
push
in
cmp
add
loop
xor
inc
sub
loopne
xchg
and
adc
mov
jae
pop
cmp
les
dec
mov
mov
lea
fs
ret
mov
cmpb
push
dec
lret
jo
push
jge
cld
jmp
cwtl
fs
jns
inc
ror
loope
push
cmp
or
repnz
sbbb
push
mov
xlat
add
mov
jb
dec
sbb
std
sbb
sub
into
push
stos
dec
sub
lret
mov
pop
xor
xchg
adc
imul
scas
mul
sbb
push
sbb
inc
add
mov
cltd
addr16
mov
xchg
cli
dec
rol
dec
lret
fnstsw
enter
arpl
mov
sbb
or
jbe
pop
popf
xchg
sahf
mov
mov
subl
into
negb
dec
cmp
sub
adc
adc
mov
add
push
gs
loopne
enter
and
push
xor
popa
repz
mov
fs
dec
loop
jb
test
in
popa
xchg
pop
andb
pop
jecxz
ds
int3
or
xor
sub
sbb
aad
into
cld
in
jp
dec
mov
push
adc
into
push
xchg
addr16
dec
in
lock
push
dec
and
stos
xor
xor
ja
jge
jb
sbb
inc
scas
shll
adc
mov
frstor
pop
cmp
fwait
out
aaa
aas
jl
xchg
test
popf
mov
rcrl
imul
or
cltd
test
dec
lods
mov
sub
shl
sbb
add
pusha
stc
mov
insl
out
testl
mov
mov
pop
xchg
pop
pop
aad
jecxz
out
pop
lret
call
sbbl
pop
sbb
jl
daa
jbe
jae
sarl
pushf
nop
cltd
push
lcall
cmc
dec
mov
add
cmp
inc
cwtl
stos
enter
jmp
mov
fiadds
hlt
fstpt
mov
mov
push
jns
mov
xchg
mov
jne
xchg
sub
xchg
sub
repz
sub
push
es
xchg
repz
xor
aaa
shll
xchg
mov
xchg
ret
sbb
push
push
lret
adc
jle
jle
imul
push
pop
fstl
icebp
cltd
enter
stc
ret
ss
loope
adc
aas
dec
testb
push
adc
outsl
je
push
in
sbb
scas
adc
clc
or
insb
mov
and
push
scas
jge
gs
cmp
filds
enter
movsb
or
sbb
incl
pop
mov
adc
fwait
add
cmpb
fwait
xlat
ror
jno
es
gs
in
pushf
cmp
mov
stos
push
mov
inc
pop
jg
xorl
push
frstor
xor
jecxz
popa
insb
mov
rcll
lret
cltd
xchg
call
xor
fdivp
jmp
repnz
fisubl
outsl
test
fwait
pushf
push
lahf
jnp
mov
psubsb
cltd
addr16
lds
or
xchg
cmp
or
sahf
cmp
pop
mov
xchg
fs
mov
mov
adc
fwait
in
out
and
cmpsl
loop
adc
adc
fnsave
inc
xor
xor
dec
xchg
adc
jmp
dec
jl
aas
add
mov
lock
fistpll
or
sbb
in
sbb
inc
pop
jns
mov
aas
push
push
rcrl
frstor
mov
dec
push
dec
mov
cmp
ss
subb
pop
mov
neg
dec
inc
mov
push
cld
jnp
jle
cmp
cld
xchg
and
in
fptan
mov
es
mov
movsl
nop
pop
mov
add
mov
rolb
pop
push
sub
adc
lahf
in
fs
scas
loop
pop
aam
jo
mov
pop
roll
xlat
cmc
pop
xchg
xor
in
push
adc
sbb
adc
rcrl
jp
clc
add
into
push
insl
adc
sti
aad
ret
outsl
bound
inc
xor
jnp
cltd
jo
add
inc
shr
cmp
pop
sub
xor
sbb
sti
aam
rorb
or
stos
pop
push
ret
xchg
cmp
cld
cmp
lock
into
mov
ret
popa
mov
and
rcl
adc
lret
adc
cmp
cmp
shll
cmp
mov
in
or
das
dec
std
sub
cmpsb
cld
cmp
fmull
jmp
push
mov
jnp
lock
bound
inc
jnp
sbb
or
mul
dec
sub
int
mov
jbe
xchg
add
imull
rcrl
mov
lret
jmp
push
popf
sbb
jge
ljmp
mov
push
add
das
and
popf
and
leave
loop
cld
adc
stc
sti
sbb
lret
nop
dec
int
in
xchg
cmp
inc
lcall
mov
mov
fs
das
cmpsb
or
push
punpckhdq
int3
fnstcw
ret
sbb
popf
mov
lock
push
enter
js
icebp
xchg
lret
cmc
test
scas
daa
push
pop
aam
pop
mov
shl
stc
aad
bound
mov
jg
adc
xchg
dec
pop
push
add
out
lea
lea
jmp
mov
push
cmpsl
imulb
mov
jmp
sbb
dec
sub
jmp
mov
dec
cmp
add
cmp
sub
pusha
or
and
sbb
popa
imul
lea
or
rolb
loopne
pusha
xchg
sbb
jno
test
loope
push
scas
sub
pop
pushf
cmp
je
xchg
adc
adc
ss
dec
xchg
aaa
sub
movsl
lret
inc
xor
pop
inc
rcrb
push
out
loope
dec
shrl
xor
popf
sti
jp
adc
rcrl
addr16
in
pushf
or
dec
dec
push
fs
xor
data16
clc
push
pop
push
add
js
mov
cs
mov
arpl
add
fsts
dec
add
arpl
xchg
pop
rorl
es
paddsb
push
fprem
jmp
xor
out
mov
addl
mov
dec
pop
mov
pop
sbb
mov
mov
push
adc
js
sbb
sub
or
jg
dec
jnp
sub
dec
sub
cmp
jns
fdivr
inc
outsb
mov
roll
arpl
loopne
add
xchg
push
outsl
xlat
lret
cli
loop
fcoml
pop
jne
xor
jge
cmp
jl
shrl
mov
xchg
pop
fistpl
xor
daa
adc
mov
pop
cmp
sub
lret
jns
jg
xor
sub
xchg
mov
ljmp
xchg
mov
xor
leave
jge
addl
jg
orl
lret
imul
jne
insb
xchg
das
inc
test
cli
adc
sbb
sub
adc
adc
mov
rolb
mov
cmp
cmpsl
sbb
lahf
in
sub
je
mov
ja
fdiv
pop
pop
ret
or
cwtl
push
jl
xor
loop
cld
xor
jg
push
or
andl
sarl
push
aad
or
sbb
add
push
cwtl
inc
dec
stos
lods
stos
push
shr
pusha
inc
mov
fwait
push
sbb
pop
dec
rolb
test
addl
sub
pop
aam
adc
outsb
divl
jg
aas
push
push
adc
adc
out
aaa
imul
sub
stos
test
jecxz
add
lahf
cld
sbb
scas
rolb
lahf
push
fsub
sahf
enter
sub
cmp
mov
push
ds
sub
ret
pusha
xchg
in
jle
cmp
xchg
pop
dec
imul
imul
stos
sub
pop
rorb
cmc
icebp
sub
dec
mov
jp
lahf
into
data16
lcall
jmp
inc
lock
sbb
cmpsb
insl
push
cmp
iret
mov
or
inc
inc
cwtl
and
xchg
inc
xchg
and
stos
loope
xor
insb
jle
cmp
lock
xchg
call
pushf
jl
stos
sbb
inc
aas
inc
xchg
shrb
adc
mov
xor
cmpb
pop
das
imul
lock
les
push
test
inc
mov
mov
push
fwait
inc
cld
mov
in
fmul
ret
or
push
push
jns
dec
jle
mov
adc
les
adcb
push
fcomps
inc
cltd
push
mov
push
test
lcall
mov
lcall
imul
xor
pop
nop
xor
jbe
sub
mov
pop
sub
mov
movsl
dec
sub
sbb
xchg
inc
test
dec
cmc
add
cmp
aaa
out
sbb
mov
test
cmpsl
dec
gs
dec
jl
xchg
sarb
mov
loop
dec
mov
or
stos
sbb
fiadds
in
loopne
mov
cmp
push
mov
inc
repz
dec
cmp
shlb
inc
je
cmpsl
xchg
clc
mov
rcl
cwtl
push
rcrb
jmp
jg
enter
fcomps
leave
test
cmpsl
push
cwtl
xor
mov
hlt
sarb
push
into
cli
sbb
inc
push
popa
imulb
add
stos
fcoms
imul
dec
inc
jg
fmull
inc
push
mov
mov
fidivl
out
sub
adc
ljmp
pop
xchg
adc
lods
xchg
adc
jmp
ret
movsl
aad
mov
push
imul
aam
add
lahf
aaa
inc
pop
rclb
dec
stos
mov
sbb
mov
lcall
xchg
insb
pop
inc
or
mov
es
dec
mov
mov
mov
jae
iret
xchg
add
call
lods
and
cmpsb
pop
cltd
jo
sbb
dec
inc
jmp
jns
iret
cmp
inc
rcrb
enter
jbe
sub
ja
ret
test
lcall
es
popa
jae
lahf
loope
in
sbb
bound
lods
cmp
push
pop
jb
loop,pt
push
adc
mov
repnz
scas
dec
add
push
inc
adc
lods
mov
jge
movsl
insl
xchg
shrb
inc
pop
and
push
dec
mov
rcrl
xor
daa
jecxz
shr
inc
sbb
fadd
push
aas
cmc
pop
push
sbb
inc
sbb
xor
or
dec
xchg
aas
adc
hlt
fidivl
mov
cmc
mov
inc
sbb
mov
jecxz
sub
cmp
sbb
push
hlt
pop
xchg
sub
add
stc
in
jno
inc
mov
lods
mov
cmp
add
ret
ffreep
lcall
add
mov
push
xor
sbb
jg
xchg
and
in
negb
sub
in
nop
pop
mov
iret
xor
std
and
pop
cmp
push
aad
or
pop
sbb
scas
or
mov
mov
lods
add
lahf
fnstenv
mov
pop
cltd
or
loopne
inc
cmp
xchg
sahf
xor
mov
sarl
fildl
bound
pop
pop
mov
bnd
aas
je
out
xchg
gs
scas
sbb
fwait
inc
cs
in
andl
pop
jae
cmp
jae
in
sbb
je
xor
push
and
or
and
mov
pop
stc
out
scas
xlat
out
ljmp
dec
ficomps
testl
adc
sub
nop
dec
dec
and
fsts
in
dec
adc
and
jnp
mov
jle
cmp
jle
inc
push
and
cli
test
add
out
or
popa
stc
aad
push
add
sub
das
adc
add
cmp
dec
cmpsb
or
data16
add
mov
clc
mov
jg
mov
sub
cmpxchg
inc
insb
jno
adc
mov
pop
jp
imul
cmp
jg
cmp
mov
pop
aad
mov
lret
push
xchg
nop
add
and
jns
sahf
cmp
neg
dec
jne
lock
int
imul
repz
push
std
insb
out
lcall
dec
or
pop
ljmp
pop
js
xchg
int
add
test
cmp
push
movsl
daa
jmp
les
fs
rolb
cld
ja
xchg
repnz
mov
stc
inc
mov
or
or
mov
or
shll
xor
popl
pop
lods
nop
pop
ljmp
adc
inc
mov
mov
push
mov
sbb
cs
pushf
imul
repnz
and
mov
and
mov
pmulhuw
shll
push
inc
loope
fwait
mov
pop
ss
or
les
push
mov
jno
sub
aas
sbb
in
xchg
mov
insl
sti
xchg
int
mov
sti
pop
mov
jo
mov
cmp
and
jmp
pop
push
mov
mov
xor
pop
repz
mov
xor
sbb
imul
xchg
dec
out
std
cmp
pop
ljmp
pop
mov
pop
iret
pop
or
jo
or
mov
aas
mov
xor
dec
imul
lret
mov
mov
push
adc
cwtl
jl
xchg
or
push
rcll
dec
cmpsl
pop
pop
xlat
lods
adc
cld
jle
stc
jnp
int
mov
divb
cmp
mov
out
fstps
leave
pop
pop
adc
cmp
jo
inc
repnz
dec
in
imul
out
test
shrl
ljmp
mov
push
iret
notb
into
js
inc
or
xchg
fwait
cmp
mov
iret
pusha
cmpb
xchg
test
inc
movzbl
notb
mov
fnstsw
sub
jno
in
and
adc
xor
push
shll
or
lahf
iret
outsb
lea
pop
add
ljmp
and
jne
stos
ljmp
lds
aad
sbb
aad
and
push
pop
ficoms
lcall
outsb
lods
pop
mov
dec
repnz
pop
shll
mov
test
xchg
push
fistl
popa
mov
das
negl
mov
sbb
fs
add
mov
adc
bnd
fs
test
aas
inc
test
bound
negb
adc
aam
jne
jmp
les
gs
dec
jno
xor
sub
mov
mov
mov
enter
decb
xor
shll
loop
sub
lock
xor
popf
fdivl
cmc
lock
fdivrs
sub
mov
xor
stos
aad
mov
in
jle
leave
sarl
aad
outsb
inc
cmpb
lret
push
sbb
sti
mov
imul
add
rorb
lock
in
xor
push
out
sbb
jno
jmp
iret
subl
pop
mov
rorb
gs
sti
mov
jae
cmp
lret
call
xor
jb
movsl
mov
shlb
loope
mov
cwtl
imul
mov
mov
xchg
mov
and
and
adc
inc
sub
or
lea
pop
sbb
jecxz
popf
pop
std
std
mov
not
out
mov
rcr
dec
lret
ljmp
mov
jg
push
movsb
mov
or
ljmp
test
dec
xor
cld
inc
gs
mov
xor
cli
dec
lods
push
dec
xchg
mov
test
jae
mov
stos
inc
pop
sub
and
mov
dec
or
dec
movsl
shrb
mov
lds
xchg
rolb
in
pop
xor
pop
out
push
mov
sbb
sub
pop
daa
sbb
jl
call
pop
arpl
adc
xchg
and
lret
nop
dec
jne
mov
das
mov
stc
mov
in
add
and
or
mov
popa
test
fldl2e
sub
test
cmp
into
mov
mov
ja
leave
fisttpl
and
lods
inc
mov
xor
fwait
mov
push
add
add
aam
hlt
nopl
push
xor
jne
add
jbe
addr16
jl
dec
orb
int
out
stos
ss
dec
add
aad
stc
popf
ficompl
rorl
cmp
jl
jmp
adc
loope
movsl
xchg
xor
inc
inc
mov
pop
clc
mov
jb
sti
or
mov
fldl
jle
pop
pop
repz
into
jg
and
ret
adc
clc
jno
stos
clc
add
jo
test
lret
sub
addr16
mov
push
insl
inc
flds
les
push
loope
jne
mov
mov
xchg
mov
jnp
into
nop
dec
cmpsb
es
cmp
lret
out
cltd
adc
popa
adc
and
xor
imul
scas
into
aas
cmp
jp
mov
and
sub
cltd
mov
pop
popf
push
xor
scas
xorb
aaa
pushf
int3
inc
sbb
inc
daa
mov
sbb
and
insl
orb
lcall
xchg
pop
testb
imul
pop
xchg
popf
pop
and
xor
jo
fiadds
jnp
jg
sub
fidivrl
shlb
incl
pop
inc
push
in
ss
fldt
dec
inc
mov
fstpt
add
mov
cltd
dec
es
xchg
loopne
lret
lds
mov
xchg
lcall
xor
div
mov
insb
lds
xchg
aam
xchg
dec
xchg
pop
loope
loop
mov
and
les
repnz
push
bound
pop
test
cmp
in
popl
pop
mov
mov
andl
aad
hlt
mov
xchg
fisttpll
test
negb
pop
adc
sbb
sub
fnstsw
scas
aas
dec
outsl
mov
xor
sti
push
mov
mov
pop
fadd
movsb
add
xchg
imul
mov
jo
mov
jecxz
pop
mov
mov
ds
fcmovbe
push
jne
je
rorl
movsl
ds
xchg
cmc
in
js
mov
cmpsl
xor
fidivrl
iret
cmpsb
call
shrb
js
push
cmp
sub
rclb
pushf
push
pop
fnstenv
cltd
mov
outsb
sar
pop
dec
dec
movsl
dec
out
lret
int3
rorl
pop
lret
enter
lret
dec
mov
add
pusha
mov
mov
std
fnstsw
outsb
push
pusha
xchg
cs
cs
lret
cmp
scas
inc
jg
adc
movsb
fs
xlat
fldt
xor
daa
or
mov
mov
loop
push
cmp
sbb
jae
loopne
data16
pop
cmpsb
inc
loope
jae
lds
pop
xor
cmp
jl
mov
mov
or
aaa
call
stc
cmp
pop
or
xchg
or
and
lods
mov
and
xor
aad
cmpl
or
ljmp
ljmp
xor
stos
lock
jge
pop
andb
mov
add
mov
fstl
add
jle
sbb
ret
ficompl
mov
pop
cmp
jecxz
push
syscall
push
icebp
jp
push
jbe
mov
sti
in
lods
andl
clc
jne
sbb
in
loopne
cmpsb
mov
loop
notb
in
addr16
out
lcall
cwtl
mov
das
stos
push
fdivrl
push
and
dec
ficompl
xchg
imul
out
lock
jle
shlw
push
sbbl
mov
cmp
dec
or
or
lods
xor
push
pop
push
faddp
pop
js
fadds
xor
sbb
lret
push
clc
push
movsb
roll
cltd
test
cltd
jns
xchg
mov
sbb
mov
bound
xor
inc
ficoms
pushl
out
cld
in
cmp
int
dec
pop
add
lods
shrb
pop
insb
scas
mov
jb
cmc
inc
jp
rol
inc
rcrb
adcl
daa
mov
mov
push
loope
bound
xchg
int
push
sbb
mov
fidivrl
dec
loop
xchg
xchg
clc
dec
push
pop
cmp
push
dec
scas
test
mov
negl
xor
sub
roll
sub
mov
or
lahf
inc
rorl
jb
sbb
pop
sub
int3
mov
cmpsl
nop
cmp
and
mov
pop
stos
std
out
stos
rolb
or
cltd
add
xchg
inc
hlt
add
pop
mov
xchg
jns
mov
push
pop
dec
add
cwtl
mov
scas
out
xor
rcr
jnp
lahf
pop
adc
out
js
ret
std
ret
jbe
cmp
push
fnstsw
imul
mov
jno
sahf
jmp
jg
cmp
adc
xor
ja
and
cli
mov
insb
adc
inc
fs
sti
xchg
xchg
hlt
aad
arpl
inc
jbe
add
push
jno
cs
movsl
icebp
inc
int3
in
add
jnp
xchg
arpl
dec
outsl
outsb
imul
lods
adc
push
jae
repnz
cmp
scas
xor
pop
subl
and
mov
xor
loopne
stc
sbb
fstps
xor
cld
fiadds
leave
xor
add
insl
dec
cld
inc
cmp
add
mov
loopne
js
xchg
sti
push
scas
test
sbb
or
fs
lret
fidivrs
mov
lcall
data16
sub
mov
das
dec
or
shrl
pop
or
ret
push
sbb
xor
and
ss
into
inc
aad
movb
incl
mov
cli
imul
pop
cmp
lods
pop
inc
mov
cmp
or
cmpb
mov
xor
xchg
lods
or
mov
mov
aaa
movsl
mov
jae
lods
xchg
push
jo
mov
lahf
mov
adc
push
xchg
sbb
arpl
xor
imul
and
cmp
dec
sbb
outsb
ficompl
mov
add
clc
jnp
test
fsubr
rorb
loope
push
in
mov
or
test
xchg
cmpsl
adc
test
adc
xorb
scas
mov
out
cmp
mov
loope
movsb
pop
test
push
inc
mov
xchg
rcrl
pushf
and
test
movsl
cmc
fnstenv
fnstcw
cmp
repz
rorb
jo
mov
aaa
push
imul
sbb
sbb
mov
sub
ficomps
shr
xchg
sbb
pop
test
dec
fstpl
add
mov
shl
out
das
mov
out
and
pop
cmp
push
add
inc
cltd
or
scas
mov
adc
mov
cmc
inc
jg
dec
adc
adc
int3
movsl
das
into
sbb
mov
dec
dec
cs
adc
ds
xor
sub
xor
rcll
cmp
jmp
push
adc
testl
std
ljmp
jb
in
adc
arpl
dec
cmpsb
push
lods
xor
xlat
sahf
inc
aad
jnp
in
pop
push
rcrb
jbe
repz
in
xor
imul
cltd
xor
push
dec
mov
jno
aam
je
cmp
sarl
ss
in
divb
inc
es
push
pop
fldt
cld
and
xchg
xchg
dec
pop
jge
imul
pop
add
cs
pop
and
fcompl
mov
and
les
sbb
jg
xor
icebp
cmpsb
mov
mov
insb
mov
or
cmp
push
arpl
adc
stc
xchg
fwait
jnp
xchg
ja
push
aad
mov
cmp
test
and
push
gs
outsl
ret
adc
clc
inc
std
mov
dec
imul
mov
out
sub
adc
and
ficomps
data16
cmp
test
dec
xor
add
inc
cli
adc
popf
jg
call
or
xchg
adc
popa
mov
cs
ficompl
insb
mov
mov
scas
or
inc
aad
daa
mov
xor
sbb
sarb
adc
dec
sbb
sarl
cmpsb
mov
mov
push
clc
cmpb
xchg
movsl
push
rdmsr
aas
repz
fimull
jmp
pop
pop
cmp
adc
lret
mov
lret
out
jmp
jns
sbb
cmp
mov
xor
push
cmp
pop
xchg
jg
sub
shl
push
in
mov
mov
push
push
out
mov
scas
sbb
push
stos
dec
sub
cltd
xor
add
stos
jecxz
or
mov
sbb
sub
hlt
iret
lcall
insl
jp
pop
mov
or
mov
mov
cld
adcb
fsub
jl
lods
filds
clc
and
sub
ljmp
push
sti
jnp
mov
jns
or
int
data16
scas
ljmp
int3
sbb
xchg
sbb
rorl
sbb
add
adc
loopne
lret
aas
cmc
xor
pusha
out
cs
mov
mov
cmpsb
mov
arpl
lea
cmp
dec
dec
insl
or
out
out
into
push
in
ret
idivb
gs
mov
fimuls
xlat
loope
dec
icebp
mov
or
sbb
adc
dec
mov
hlt
out
mov
mov
add
push
ss
fs
popf
add
push
xchg
jns
shl
and
lods
leave
sub
lret
pop
push
or
and
inc
leave
mov
sahf
fcom
jnp
sarl
loopne
mov
cmp
ds
fiaddl
adc
rolb
sbb
fisubs
pop
adc
int3
lds
movsl
aam
add
shll
in
inc
mov
pop
lods
dec
pop
xor
ss
mov
nop
ds
dec
stc
or
sub
sbb
sarl
jmp
dec
pushf
mov
add
sbb
dec
lock
pop
cmp
lahf
push
push
aaa
ficompl
ret
fstpt
jne
loopne
jae
jbe
mov
test
das
xlat
pop
dec
inc
scas
push
adc
push
jnp
dec
arpl
xchg
dec
mov
sub
xor
daa
cmc
mov
xchg
pop
iret
addr16
out
insb
push
jecxz
sbb
subl
add
add
pop
and
sahf
lcall
mov
ret
xchg
icebp
shrb
push
mov
cmc
xlat
sub
pop
jb
sbb
call
int
pop
pop
push
fcomi
xchg
les
stos
insb
aas
addr16
pop
xchg
mov
invd
inc
sbb
and
mov
dec
outsb
xor
xchg
aad
add
fdiv
movsb
ret
jb
mov
mov
scas
ljmp
aas
dec
cltd
call
insl
imul
mov
sar
jne
dec
cld
stc
xor
add
jmp
and
stc
mov
sub
push
gs
sbb
pop
or
out
jno
movl
into
cs
test
pop
and
sub
cmc
sbb
std
lods
sar
stos
inc
int
mov
push
movsl
out
cmpsl
fimull
pop
out
mov
mov
dec
out
scas
push
cmp
lods
int3
or
cmp
sbb
shrl
sbb
adc
add
aas
sbb
add
jnp
pop
cmp
sub
fstpl
imul
add
hlt
mov
aaa
das
icebp
cwtl
repz
icebp
or
mov
push
mov
inc
sbb
test
jbe
pop
xbegin
je
xchg
dec
test
fwait
push
or
dec
lahf
push
sbb
sbb
sub
xor
rorb
or
fsts
push
das
into
inc
stos
adc
hlt
add
inc
shrb
aam
pushf
adc
push
cmpsl
and
ficoml
or
xchg
push
sbb
pop
cmp
stos
fwait
in
test
xchg
or
sub
adc
add
jp
jno
mov
cmp
sub
loope
aam
jns
jae
nop
lret
ret
add
lret
add
adc
fwait
lret
and
call
movsl
pop
in
fcoms
push
fldenv
ss
mov
xchg
inc
mov
in
pop
xor
pop
mov
or
add
push
mov
insl
sarl
cmp
fwait
repnz
popa
roll
mov
jecxz
repz
test
gs
mov
das
outsb
mov
frstor
and
sub
add
mov
ds
push
fwait
mov
stos
loop
push
sahf
fnstcw
mov
push
jnp
scas
mov
jns
add
je
movsb
add
test
insl
in
inc
inc
push
sbb
in
cmpsb
into
mov
xor
or
insl
push
xchg
mov
out
inc
push
ljmp
mov
mov
xchg
in
pop
cmpsl
sbb
inc
sub
daa
out
fdivr
and
jno
ds
mov
loop
cmp
fcmove
clc
lret
fwait
insl
jle
ret
jbe
shll
mov
inc
out
pop
cmpsl
pop
inc
repz
test
testb
cmp
pop
jne
push
push
loop,pn
push
data16
shlb
adcb
mov
push
arpl
mov
sbb
mov
and
fsubl
pop
inc
rolb
sbb
dec
dec
sub
add
test
xor
mov
loope
dec
dec
and
idivl
fsts
push
aad
jbe
adc
imul
subl
add
sar
mov
insb
fistpll
movsl
stc
fwait
mov
push
or
and
push
fstpt
test
dec
sti
inc
movsl
addr16
rolb
xchg
push
out
out
scas
xor
mov
ret
mov
xchg
xchg
mov
or
push
push
lods
test
and
inc
inc
arpl
adcl
aam
test
jge
or
mov
inc
xchg
in
push
dec
mov
je
pop
into
insl
sbb
lea
fistl
xchg
test
dec
popa
inc
scas
add
fs
pop
iret
pop
xchg
push
or
mov
rorb
popa
lock
cmp
push
or
ljmp
mov
loop
int3
adc
pushf
int
xchg
xlat
in
shl
lock
mov
lods
ljmp
outsl
push
stos
sub
pop
jne
mov
loope
or
sbb
mov
repnz
mov
dec
adcb
daa
mov
pop
insb
fwait
sub
pop
gs
push
pop
push
xlat
sub
push
pushf
ret
adc
in
repnz
scas
stc
fwait
sbb
rcr
mov
cmp
mov
jg
mov
enter
cltd
int3
idivl
in
test
ret
mov
das
repnz
push
ret
push
pop
arpl
inc
iret
ficoml
dec
fucomi
lds
pop
mov
das
jno
js
sbb
shr
in
and
bound
repz
fisttps
leave
mov
int3
enter
cmp
xchg
mov
fbld
add
sbb
pop
je
add
add
aam
adcl
dec
push
push
xchg
add
cmp
cmp
jbe
inc
fwait
into
imul
filds
or
mov
jle
and
rorl
lock
call
sbb
xchg
push
fists
insb
cmp
fcoml
sub
lcall
jl
inc
andb
loop
movsl
add
into
sub
xor
sub
push
xchg
mov
leave
push
ja
xchg
scas
inc
cltd
xorb
pusha
and
hlt
call
adcb
stos
add
mov
push
pop
inc
bnd
and
sbb
cmpsb
cwtl
pop
cmp
rcrl
or
pop
inc
mov
jmp
shll
sahf
std
cmpsb
push
push
movsl
pop
sbb
mov
sub
cld
insl
popl
mov
les
inc
imull
movsl
dec
nop
ret
xor
filds
ja
lret
adc
fcos
and
inc
int3
std
insl
adc
adc
stc
lret
inc
inc
dec
sbb
mov
inc
mov
add
loop
sbb
lods
push
pop
adc
dec
jle
xchg
ja
pop
pop
ja
cmp
pusha
out
sub
mov
mov
xchg
cs
pop
xor
adc
sub
mov
shrb
in
xchg
loopne
jl
lret
pop
scas
and
notl
shll
and
xchg
jge
xor
push
cmp
nop
inc
mov
outsb
std
mov
bound
mov
ffree
insl
cwtl
jnp
pop
or
cbtw
push
xlat
pop
and
popa
push
ss
dec
arpl
into
cmp
filds
out
pop
mov
xchg
loopne
roll
sbb
shrl
mov
repnz
cmpsb
test
adc
dec
pop
ss
mov
add
sahf
add
fisubs
sub
mov
scas
pop
test
jg
sbb
and
lret
sti
sbb
inc
xchg
mov
xor
test
call
cmp
adc
cmp
and
jecxz
push
pop
xchg
imul
aas
jb
pop
movsb
push
add
aad
idivb
stos
ja
mov
xchg
push
push
inc
ljmp
insb
sub
push
jo
sti
pushfw
dec
sub
xchg
jns
or
daa
mov
cmp
leave
and
xor
xchg
repnz
js
stc
out
pop
mov
fldcw
inc
cmpsb
and
addb
loopne
mov
jmp
jns
push
mov
insb
icebp
adc
jg
push
dec
push
js
inc
mov
repnz
dec
mov
fnstsw
mov
cmp
push
cmpl
mov
xchg
push
js
arpl
std
cmp
and
and
rcr
add
in
loop
aam
movsb
bound
and
push
mov
int
xor
push
xlat
inc
leave
mov
add
jb
aad
push
push
cmp
mov
push
push
xlat
repnz
lea
ret
pop
mov
pusha
popa
stc
pushf
mov
sub
dec
mov
jl
ss
mov
stc
and
cs
stos
adc
jbe
push
push
push
mov
xor
push
nop
xor
xorb
or
push
sahf
sub
or
dec
insl
loope
xchg
push
sub
sbb
out
addr16
sti
inc
jle
mov
inc
fwait
repz
sub
cmp
jne
inc
or
push
add
jo
mov
dec
pop
rclb
mov
das
int
or
xchg
fs
mov
or
cmp
shrb
call
daa
fistps
xlat
in
or
fs
or
test
cmp
stc
push
push
cwtl
mov
pop
sti
cs
lock
jle
pop
or
pop
sbb
pop
adc
xchg
mov
jp
mov
sti
sub
ss
or
xchg
addl
test
icebp
dec
xchg
shll
ja
pop
push
mov
add
inc
fucomp
sub
mov
jnp
xchg
ja
pop
loopne
gs
dec
repnz
int
jo
sub
pop
push
pop
lret
dec
xchg
fs
mov
lock
mov
inc
pop
adc
or
lea
iret
mov
xchg
dec
imul
lds
push
test
cld
push
jne
repz
in
cmp
sti
pop
push
sub
mov
jmp
int3
mov
stos
jae
adc
insb
icebp
sub
inc
lcall
xchg
ja
call
test
mov
xchg
or
sti
imul
jmp
subb
adc
test
inc
mov
mov
in
push
call
xor
movsl
imul
imul
mov
sub
inc
dec
enter
jmp
mov
add
sbb
dec
int3
fadds
outsb
mov
sbb
lret
stos
stos
popa
rorb
jmp
decb
es
test
or
std
sbb
shrb
lahf
lahf
xchg
xor
psubusw
incb
repz
test
in
mov
daa
in
adc
sub
outsl
std
jne
push
sahf
popa
aam
mov
into
into
inc
push
rclb
popa
jb
or
or
mov
jns
gs
sub
test
es
or
hlt
shlb
jbe
gs
cmp
and
pop
xchg
imulb
adc
stos
leave
sbb
mov
add
xchg
out
mov
push
repz
mov
pop
jmp
repz
std
lcall
push
loopne
mov
pushl
loop
mov
imul
jae
fwait
aam
popf
test
push
mov
sub
or
loope
data16
jge
xchg
sbb
mov
mov
imul
movsl
mov
push
pop
push
pop
push
mov
popf
dec
sub
mov
lds
pop
jnp
pop
pop
and
movsb
mov
les
pop
dec
cmp
pop
jbe
movsl
pop
mov
jb
push
mov
shll
add
divl
pop
mov
lret
cmc
in
cmp
jl
pop
sub
rcrl
scas
cli
push
inc
out
pop
popa
xchg
inc
xchg
lock
outsl
inc
xlat
ss
cli
or
ljmp
je
jl
fmull
cmovl
je
or
data16
add
xchg
push
mov
or
sti
clc
cmp
sub
inc
ficoms
clc
daa
and
inc
and
cld
in
xor
aam
cmpl
mov
js,pn
mov
or
push
lret
add
loopne
xor
pushf
aas
xchg
add
test
mov
lock
lcall
lret
cli
repz
mov
scas
dec
stc
ds
stos
dec
call
outsl
inc
mov
push
scas
add
fists
pop
xor
fs
sbb
adc
stos
mov
sbb
imul
mov
clc
inc
je
adc
pop
fs
push
inc
dec
mov
or
cmp
int3
into
shlb
inc
out
xchg
cli
aad
lods
in
data16
add
jne
xchg
sti
mov
jnp
sbb
dec
out
leave
inc
cmp
inc
mov
mov
insb
mov
aad
mov
sbb
lock
in
mov
shr
adc
xor
lret
inc
shll
das
insb
inc
stc
es
sahf
jae
jg
jne
js
mov
mov
ficoml
push
mov
repz
mov
adc
mov
out
ja
mov
inc
leave
adc
lods
pop
inc
test
leave
shl
adc
mov
rol
je
pop
push
int
sbb
xchg
dec
leave
fstl
loope
loop
jbe
outsb
imul
xchg
dec
imul
or
arpl
pop
das
mov
stos
xor
test
push
or
xor
pop
xchg
shlb
outsl
pop
cmp
stos
mov
jle
es
mov
jle
dec
and
xchg
or
xchg
push
cmp
aad
xchg
decb
imul
push
xor
aas
imul
mov
jl
dec
lcall
or
stos
push
jnp
lods
ss
xor
add
or
je
jp
mov
xchg
adc
xor
in
fcoms
icebp
lret
hlt
and
xchg
into
jnp
test
mov
inc
in
adc
mov
push
or
jmp
push
xchg
or
outsl
ja
sti
jge,pt
cmp
popf
mov
dec
dec
and
push
and
and
popa
xor
pop
mov
adc
rcll
inc
popf
fwait
jp
add
jmp
dec
mov
dec
dec
scas
inc
std
xchg
data16
shrl
ds
inc
cmpsl
lahf
sbb
pop
or
call
lds
mov
clc
mov
mov
cli
repnz
sbbl
sahf
aas
cwtl
cld
dec
scas
js
into
mov
scas
rclb
cltd
sbb
dec
test
xchg
push
aad
jge
mov
mov
mov
dec
div
in
or
add
mov
les
cmovg
push
push
mov
lods
jae
loopne
negl
dec
cmc
out
inc
inc
cld
shll
pop
dec
shll
xor
inc
mov
mov
jg
nop
mov
dec
stos
out
out
sub
jo
fsubrs
add
mov
and
je
andl
push
push
in
mov
into
push
mov
cs
lret
ds
repz
push
adc
lods
fs
cmpsb
in
addr16
aam
sub
inc
cmp
adc
push
jb
xor
dec
es
fiadds
adc
mov
mov
dec
jmp
xchg
rclb
repnz
fmull
jp
mov
out
jg
mov
mov
sub
punpckhdq
mov
aas
mov
fwait
mov
daa
popl
in
mov
insb
mov
dec
lahf
jno
cltd
cmpsb
negl
inc
cmpsb
outsl
adc
pop
sbb
f2xm1
les
cmpsl
lret
xor
xor
mov
andb
inc
aad
cltd
imul
aas
scas
push
les
adc
xchg
data16
and
imul
gs
cli
cmc
flds
cmp
mov
nop
insl
mov
mov
pop
sbb
arpl
mov
adc
aaa
pop
aaa
sti
push
cmp
aas
xlat
mov
int3
in
push
cmpsb
fwait
lea
sub
insb
mov
aas
xor
insb
or
add
jge
and
pop
jb
cltd
jns
mov
pop
dec
mov
cmpsl
or
lret
nop
pop
jecxz
push
lret
dec
ss
enter
dec
fbstp
lret
xchg
inc
jo
or
rcr
movsb
xlat
test
inc
repnz
js
push
repz
inc
lret
pop
fidivrl
orl
sti
int
aam
andl
mov
dec
cmp
or
outsl
jne
mov
mov
cmp
push
lods
push
ficomps
insl
pop
xor
dec
jle
call
lcall
lret
mov
lret
dec
fsubrl
sbb
aaa
mov
out
aam
pusha
mov
xchg
lcall
insb
dec
andl
dec
jle
push
daa
jne
movsl
repnz
add
repnz
push
lods
push
fdivl
push
cli
lret
imul
jle
xor
mov
hlt
jne
sarb
mov
cmp
mov
sarb
inc
pop
pop
jp
mov
dec
test
gs
daa
scas
mov
or
xor
out
sbb
jnp
test
adc
in
fdivrl
sub
mov
mov
and
mov
mov
icebp
and
cmp
mov
inc
jge
or
repnz
out
pop
sub
jae
jb
addr16
xchg
cmpsb
cli
and
cmc
inc
loopne
aaa
jns
fdivl
loop
daa
inc
pop
cmp
leave
rcrl
mov
pop
mov
iret
mov
clc
inc
xchg
fiaddl
sti
mov
ja
int3
add
sti
sbb
mov
cwtl
pop
pusha
mov
xchg
jno
sub
dec
sbb
mov
fcompl
iret
cmpsl
jo
mov
pop
das
pop
sbb
test
sarl
jle
je
notb
lock
mov
dec
inc
test
and
daa
rclb
lods
pop
jp
pop
or
or
jg
mov
sbb
mov
lret
pop
pop
cmc
jnp
sub
loop
mov
idiv
sbb
cmc
sub
push
pop
mov
inc
pop
sub
es
jle
leave
aaa
repz
cmpsl
std
cltd
sub
xchg
sbb
arpl
dec
ret
cmp
push
mov
or
cs
repnz
push
and
and
lea
pop
mov
daa
inc
and
xor
std
lret
inc
lods
mov
sbb
fs
enter
pushf
scas
outsl
popf
loopne
xchg
mov
xchg
cmpsl
lods
xchg
sarl
repz
inc
mov
xchg
sub
pop
add
cmp
pop
push
out
shr
jne
mov
push
clc
mull
push
lods
push
mov
cmpb
lock
jg
popa
cmp
and
push
push
addr16
mov
xchg
mov
ret
or
test
scas
xorb
dec
int3
lods
lret
or
mov
fstps
mov
enter
notb
stos
sbb
aam
movsb
fiadds
ss
dec
pushf
mov
int3
cmpsb
jge
aam
xchg
enter
sbb
stos
pop
cmp
in
idiv
xor
cld
data16
dec
data16
jle
push
jno
sarb
insl
gs
ret
sahf
out
insl
inc
js
and
mov
mov
mov
dec
adc
push
cld
adc
xchg
jb
sbb
and
lds
sbb
push
push
mov
sub
popf
leave
inc
xor
mov
stos
inc
das
xchg
lcall
dec
int3
pop
pop
and
jmp
mov
outsb
hlt
out
loope
leave
rcrl
outsb
or
xchg
or
mov
fisubl
imul
pop
cli
xor
mov
daa
bound
xchg
dec
std
xchg
jle
jp
cmp
mov
mov
xchg
adc
enter
mov
cltd
lahf
ds
add
movsb
jo
jnp
jg
xchg
xor
mov
mov
cs
cltd
inc
xor
ss
loop
loop
cmp
mov
mov
or
xchg
jbe
sti
aam
push
dec
mov
adc
jg
daa
shlb
cmp
and
int
xchg
pop
push
push
adc
popa
hlt
inc
push
ja
in
test
popa
or
in
sbbb
jmp
mov
cmp
lcall
inc
cmp
cmp
fistps
sub
js
fisttpl
outsl
mov
std
pop
pop
jmp
cltd
jbe
push
test
sbb
je
rcll
push
jo
mov
xor
sbb
add
xchg
fisttps
inc
fwait
jmp
fwait
js
inc
jge
xchg
mov
out
pop
stc
inc
lds
pop
push
in
cmc
sub
mov
sarl
int
sbb
shr
popa
je
and
push
outsl
imul
leave
push
or
xchg
inc
pop
mov
and
mov
add
mov
xchg
inc
into
jge
jae
es
and
or
and
dec
cmp
mov
ds
bound
insl
mov
mov
ss
mov
cmp
mov
cmp
mov
inc
stos
fisttpll
sbb
adc
jle
pop
aaa
leave
sar
jecxz
mov
mov
std
and
jg
iret
mov
popa
sarb
mov
inc
mov
sbb
fisubl
cmpsb
or
adc
xchg
int3
mov
into
adc
lods
shrb
lods
xor
adc
imul
insl
jo
loop,pn
cmp
ss
iret
lret
sbb
roll
jmp
addr16
and
nop
fstpl
lea
iret
out
incl
jl
jnp
punpckhbw
stos
pop
cmp
jno
pop
pop
adc
cmp
inc
call
mov
mov
stos
cmpsb
xchg
cld
daa
sub
pop
push
mov
test
movsb
sti
out
pop
mov
xor
fwait
pop
or
sub
sub
arpl
scas
push
fiadds
das
mov
xor
pop
loopne
mov
push
push
repnz
mov
pop
daa
mov
stos
sub
mov
jb
inc
std
cmp
inc
in
adc
and
lahf
xchg
imul
mov
mov
aad
push
cmp
mov
jns
lods
lock
mov
xor
or
rcll
fisttpl
pop
pop
stos
in
enter
call
test
pop
fistpll
inc
xchg
jmp
cmpsl
leave
mov
adc
hlt
xor
push
sub
or
imul
shll
fwait
rcrl
add
outsb
jg
sub
xor
js
sbb
lods
test
fsubp
or
mov
js
dec
loope
aaa
scas
pusha
xchg
popf
pop
ss
cmp
hlt
push
into
xchg
repz
or
dec
or
pop
test
pop
cs
fs
sbb
sbb
rolb
push
out
and
fisttpll
movsl
push
lods
sbb
xchg
xchg
popf
rcll
cmp
inc
test
in
es
cli
adc
popa
push
xchg
pop
pop
pop
out
jp
add
int
inc
pusha
adc
out
lds
lahf
cmpsl
iret
jns
inc
stos
sahf
or
popf
mov
rorb
daa
test
mov
stc
push
das
scas
out
cmpsb
inc
pushf
jp
inc
aas
push
lcall
data16
nopl
lods
ds
sbb
rcrl
push
int3
and
jmp
ret
jge
pop
icebp
cmp
add
mov
or
orl
dec
faddp
jne
into
push
shlb
lret
addb
jmp
neg
pop
cmp
xor
mov
ds
je
jnp
lock
dec
pop
push
or
pop
dec
pop
sub
jg
rclb
imul
push
adc
daa
lock
pop
mov
and
in
inc
cmp
cmc
cmp
mov
sbb
pop
xor
ret
mov
adc
pop
iret
stos
jb
adc
xorl
addr16
fcmovnbe
add
jecxz
jl
ss
shll
and
insb
push
stos
out
mov
pop
xor
pop
hlt
repnz
push
or
les
dec
loop
dec
xchg
bound
sub
jns
mov
xchg
cld
out
push
aas
xor
inc
inc
rorb
mov
int3
sahf
popf
xchg
pop
mov
mov
cmp
and
addl
popa
pop
in
jbe
and
scas
js
out
sub
cmp
faddl
test
mov
sub
jl
add
lahf
shlb
pop
xchg
push
pushf
nop
mov
pop
mov
daa
mov
scas
push
mov
arpl
xchg
into
fsubr
xchg
mov
xchg
sti
mov
and
adc
aam
mov
into
cmp
push
aaa
test
inc
push
mov
lcall
mov
add
arpl
aas
xchg
sbb
testb
pop
mov
cmp
ja
into
ljmp
push
push
lods
daa
loope,pt
xchg
es
push
lods
dec
mov
repz
pop
mov
push
ret
js
aaa
jmp
aaa
jl
push
cmpsb
scas
aam
push
aad
ljmp
fwait
xor
inc
xor
jl
inc
mov
jb
adc
lcall
xchg
mov
inc
dec
ds
shll
jge
shlb
jbe
mov
push
popa
scas
into
cltd
pop
mov
repnz
push
jno
subl
je
mov
jns
xchg
cmp
fisubs
popa
pop
loop
pop
fiadds
fldcw
int
in
roll
div
lods
xchg
out
lea
add
jmp
arpl
add
daa
pop
and
xor
outsb
loopne
fildll
stos
loopne
xor
js
pushl
lret
in
pop
and
adc
adc
and
scas
pop
or
pusha
jmp
fs
pop
xor
inc
stc
or
pop
mov
sti
mov
mov
movl
inc
sbbl
ja
call
pop
addl
loope
dec
jno
hlt
imul
sub
sti
loop
sarb
jecxz
add
inc
es
fld
push
inc
dec
dec
gs
mov
out
mov
out
and
mov
cltd
cmc
xor
dec
push
pop
inc
jl
ret
xchg
and
and
flds
jl
and
xor
xchg
sbb
cmp
shl
sub
neg
xor
push
mov
sbb
addl
add
leave
insb
cmp
aam
mov
out
mov
add
sub
jge
fxch
pop
add
std
jno
jge
fcomps
push
add
pop
outsl
xchg
mov
ficompl
xor
mov
mov
sbb
ret
stos
notb
push
gs
sub
push
adc
and
adc
in
std
bound
je
test
xor
push
xchg
sub
xchg
and
shl
xlat
pop
iret
add
and
xlat
xor
aaa
jo
jle
xchg
sti
les
in
subb
clc
fnsave
cmpl
sub
jno
hlt
push
icebp
daa
stos
xchg
les
ljmp
dec
lea
les
push
sub
iret
ficomps
xor
push
mov
lds
mov
xchg
movsb
pusha
ret
mov
xor
jb
sub
sbb
dec
mov
scas
adc
mov
movl
fs
and
inc
cwtl
mov
aaa
clc
lahf
jecxz
outsb
add
call
sbb
and
jbe
pop
sub
mov
dec
pop
mov
mov
insl
pop
iret
sbb
cmp
lds
sub
or
mov
call
lcall
or
hlt
in
and
inc
cmp
mov
loope
out
dec
mov
sub
pop
les
sub
bound
aad
popf
inc
mov
mov
pop
mov
dec
dec
ja
cmpsl
lea
fiadds
pop
popf
xchg
add
mov
lea
cmpb
inc
test
shrl
and
aas
mov
enter
cld
mov
shrl
ret
mov
xchg
cwtl
test
mov
jmp
lret
stc
sub
lahf
loop
cli
pop
jp
hlt
push
out
pop
lret
cmp
xlat
sarl
xlat
and
jae
cmc
pop
mov
ret
cmp
lods
jecxz
ljmp
sahf
cmp
add
and
mov
aam
mov
adc
incl
out
and
pop
loop
frstor
cmp
jge
pop
stos
das
xor
in
xchg
inc
xchg
sbb
xchg
loopne
out
das
dec
icebp
jmp
xchg
in
test
lods
clc
cmp
lret
xor
pop
add
sbb
into
pop
subl
inc
pushf
sub
add
dec
mov
or
lock
fisttps
fstpt
inc
ds
fs
add
jnp
push
imul
cltd
mov
cltd
pop
pop
lcall
pop
pop
sub
xchg
repz
aad
fs
aam
push
xor
adc
dec
pop
imul
xor
mov
shrb
int3
je
xchg
scas
ret
jp
es
xchg
jmp
outsl
mov
cmp
pushf
aam
subb
add
inc
mov
lret
push
pushf
ss
in
in
or
mov
mov
or
mov
stc
xor
cli
cmpsl
ret
push
pop
sbb
out
js
or
int
out
lcall
xor
mov
loop
inc
mov
and
fmull
shrb
mov
in
sbb
add
sub
hlt
cli
in
rcll
aas
inc
nop
cmpsb
ss
xor
std
stos
push
push
imul
push
shl
pushf
xchg
stc
pop
lea
rclb
push
outsl
pop
cwtl
dec
sti
pop
inc
adc
cli
mov
inc
outsl
in
gs
lock
mov
jno
cld
aad
outsb
inc
dec
add
mov
lock
test
xor
add
jge
mov
int
sub
cs
es
adc
fwait
imul
int
xor
xchg
fs
daa
inc
movsb
pop
xchg
xchg
jmp
test
xchg
sub
inc
adc
inc
imul
sub
xor
mov
fsubrl
jg
and
jp
and
inc
push
and
mov
hlt
ljmp
sti
call
mov
xorb
movsb
fsubl
push
adc
lea
push
pop
sbb
dec
test
xchg
leave
loop
aam
adc
mov
lahf
xor
adc
jb
dec
arpl
sti
shrl
cs
add
mov
out
enter
mov
push
xor
push
sub
ja
mov
jo
inc
jae
insl
mov
cli
push
dec
and
mov
sub
cmp
mov
rcl
adc
ret
push
sar
mov
popa
push
xor
push
call
fstl
icebp
add
xchg
into
cmc
pop
inc
sahf
mov
mov
fsubrl
xchg
insb
and
repz
add
in
imul
inc
pop
or
test
enter
nop
daa
jl
stos
jae
pop
sahf
mov
lret
inc
inc
sub
xchg
arpl
addb
mov
jge
xchg
xlat
ljmp
add
cs
jne
lcall
cmp
int
mov
mov
or
dec
stos
sub
mov
or
jae,pn
cmc
cld
inc
add
imul
cld
or
mov
push
jecxz
xor
cmpsb
ficompl
xchg
rcl
fadd
mov
push
rcrl
sub
pop
xchg
mulb
stos
xor
fldenv
add
subb
push
int3
pusha
xchg
dec
adc
stc
add
mov
xchg
jl
jo
lcall
push
cmc
lret
lret
aas
leave
shll
mov
xor
fdiv
ja
xor
enter
cmpl
int3
incb
add
imul
sbb
lret
inc
mov
mov
mov
sbb
xchg
push
scas
mov
in
jge
pop
enter
das
and
or
and
fimuls
mov
mov
ljmp
divb
xchg
bound
mov
js
sub
cmp
movsb
cltd
sbb
sub
or
scas
push
pop
add
xchg
stos
adc
int
dec
mov
xor
psubsw
pop
notb
dec
ficoms
adc
adc
ss
dec
mov
jne
sub
fisubrs
mov
in
pop
cmp
insl
adc
in
push
rcr
adc
mov
call
pop
push
sbb
in
call
sub
xchg
mov
lds
arpl
fwait
sub
lret
cmp
mov
push
xchg
mov
push
xor
aam
in
sbb
sub
sbb
pop
jb
sub
mov
adcl
jo
sbb
dec
push
jbe
adc
dec
cmp
pop
das
push
cmp
test
data16
pop
lahf
fstpt
aam
mov
loop
mov
loope,pn
xchg
scas
and
aad
inc
lret
jmp
mov
push
push
add
cmpsb
out
aam
mov
add
loopne
mov
imul
xchg
pop
mov
jo
popa
scas
sbb
or
repz
pop
add
sbb
test
into
loopne
xchg
mov
add
imul
push
dec
pop
and
jnp
pop
scas
cwtl
in
xor
clc
add
aam
mov
sub
cmp
mov
loopne
jns
pop
mov
cmp
jmp
add
ds
enter
stos
test
jmp
imul
inc
decl
sti
add
lds
pop
mov
inc
dec
incl
pop
ja
aas
lret
jecxz
fs
mov
xor
xchg
sub
jb
out
daa
push
push
ljmp
fldl
pop
sbb
and
aad
iret
mov
pop
rorl
push
inc
pop
inc
les
sti
insl
stc
adc
lea
jno
push
xor
or
subb
cld
aaa
dec
in
fldt
dec
jne
add
sub
insl
xchg
popf
jo
ret
sti
shl
in
idivb
mov
cmpsl
mov
inc
lea
push
xchg
shl
xor
dec
aaa
movd
daa
inc
cwtl
stc
arpl
pop
mov
shlb
mov
lods
jno
push
push
xchg
mov
fdivs
js
inc
ss
insb
sarl
inc
mov
call
mov
pop
jns
inc
mov
pop
dec
lret
cmp
cmp
sbb
roll
jns
or
mov
inc
mov
xor
movsl
sbb
dec
loope
or
sbb
lea
std
pop
push
icebp
repnz
cwtl
test
adc
scas
cmp
into
test
pop
lret
jae
lea
cmc
and
add
sti
mov
sbb
pop
jne
add
xchg
fimull
add
aad
xor
mov
test
orb
insl
cmp
lret
ja
sbb
nop
cmc
or
pusha
mov
js
xchg
sub
adcl
scas
xchg
dec
loope
jae
sub
and
int3
sbb
lds
dec
iret
lret
adc
and
dec
adcl
ret
add
arpl
sbb
add
out
lea
fists
pop
cmp
movsl
xor
in
scas
outsb
xchg
hlt
fdivrl
pop
adc
xor
and
add
stos
fs
dec
push
mov
pop
push
negl
cmp
sub
shl
pushf
shlb
jge
xchg
pushf
fdivr
and
adc
pop
dec
or
xchg
push
sub
add
fisubrs
mov
mov
sbb
push
jo
and
cmp
stos
pop
cli
xchg
aad
push
fnsave
into
jle
adc
subb
mov
xlat
xchg
mov
pop
xor
in
lahf
xor
repz
push
in
adc
das
cmc
lret
test
pop
mov
sbb
outsl
or
outsl
xchg
pop
mov
and
mov
inc
add
insl
cmp
jge
push
dec
int3
jbe
mov
scas
adc
fistps
sub
inc
pop
or
and
into
leave
fbstp
cltd
ret
mov
outsb
push
nop
lret
pop
cmp
jl
xor
test
push
inc
inc
push
or
add
mov
mov
jne
mov
rcr
dec
jl
fldcw
lods
or
mov
lods
popa
jae
adc
pop
fisttpll
icebp
ret
push
loopne
jl
push
aad
enter
loope
pop
ds
push
loop
lahf
into
ret
out
aad
lods
and
sbb
sahf
jl
jl
orb
push
xor
shlb
shl
orl
in
mov
es
aaa
aas
loop
push
xchg
outsb
mov
pop
rolb
popf
mov
sub
adc
sub
cmp
adc
lret
ret
daa
sbb
inc
inc
inc
jmp
aaa
jb
adc
xor
mov
enter
sub
push
scas
mov
neg
dec
mov
mul
or
scas
push
inc
testl
inc
mov
sbb
mov
ss
adc
sbb
sbb
rcl
mov
jne
insb
movsl
je
dec
repz
ret
inc
add
loop
dec
mov
inc
stos
or
and
mov
pop
lods
je
leave
pushf
ss
lahf
out
hlt
pusha
mov
mov
ret
ret
push
lods
add
cmpsb
inc
int
sbb
fadds
lcall
mov
inc
sbb
pop
add
cltd
and
sbb
cmp
das
push
lret
sub
cld
loop
std
imul
and
test
je
add
mov
jb
loopne
dec
fisttpll
cmc
mov
jno
pop
rcl
cmpsl
jge
sbb
icebp
insl
mov
scas
jno
lret
and
pop
xor
lods
loop
xor
bound
fs
fnstsw
mov
inc
icebp
xchg
xlat
pop
or
sbb
lcall
xor
pop
mov
les
aaa
js
push
mov
adc
push
dec
jns
sub
loopne
jb
ret
or
xchg
mov
xchg
xor
mov
dec
jmp
xchg
pop
pop
insb
pushf
and
sbbb
lret
cwtl
mov
push
daa
sbb
push
push
scas
jnp
sub
mov
sbb
outsb
out
xchg
dec
and
and
push
test
fsubp
or
mov
insl
mov
and
xlat
repnz
nop
stc
xor
push
sbb
mov
loop
xchg
pop
sub
cltd
jmp
adc
mov
jle
popf
dec
int
ficoml
insb
scas
lea
inc
popf
test
or
dec
mov
out
jo
cld
bnd
lahf
rcll
pop
xor
faddl
sub
or
cmpl
in
mov
mov
inc
out
mov
sub
pop
cmc
repnz
mov
add
push
adc
jg
dec
daa
add
mov
jne
pop
shll
test
jno
shl
jg
pop
pop
pop
push
or
pop
addl
in
cli
push
add
cli
out
push
mov
mov
hlt
push
mov
pop
enter
and
mov
imul
cmp
adc
cmp
insb
rolb
mov
xlat
cmp
jne
movsb
ss
mov
mov
pop
out
and
add
sub
jle
or
cli
pop
add
out
fsubrp
pop
inc
or
sbb
cmp
shrb
aam
add
adc
mov
hlt
or
shrl
insb
mov
in
aad
sub
leave
dec
mov
pushf
sbb
mov
adc
dec
bound
popa
mov
pop
pop
notl
jecxz
and
sub
push
out
in
bound
scas
sbb
in
call
daa
aas
ljmp
dec
mov
test
lret
inc
pop
fsts
les
or
pusha
lcall
push
mov
jo
outsb
out
xlat
aaa
mov
stos
pop
inc
dec
adc
push
adc
mov
lret
shr
mov
cmpsb
aas
cmc
adcb
imul
out
fstpl
sub
inc
outsb
mov
pop
popf
in
aam
imul
movsl
popf
scas
jecxz
test
mov
jb
cmpb
mov
push
rclb
mov
subl
mov
push
mov
cmp
fiaddl
mov
jns,pn
shlb
aam
fstpl
jo
xor
pop
and
inc
loopne
push
cli
loope
mov
out
lcall
imul
sub
mov
in
push
stos
int3
sub
stc
orb
mov
mov
fstps
out
lea
xchg
push
or
xor
mov
mov
mov
pop
mov
xchg
mov
mov
mov
popa
sub
xorb
in
and
aam
adc
mov
and
test
add
add
aaa
clc
lahf
mov
outsb
jp
or
pop
les
scas
mov
mov
out
sbb
fdivrp
std
push
loopne
ret
dec
sti
xchg
outsl
divl
mov
das
pop
jnp
call
dec
fdivl
mov
pop
call
rcll
int
mov
inc
xor
push
rorb
in
call
mov
gs
mov
pop
pop
inc
inc
mov
push
xor
mov
xchg
and
ror
lock
addr16
in
cmp
push
adc
repz
cmpsb
mov
sti
jnp
push
jb
mov
mov
dec
adc
fmuls
out
mov
mov
fldcw
xor
fsubl
in
xor
mov
call
xchg
cmp
adc
outsb
mov
imul
lods
pop
xor
sub
push
imul
mov
stos
xorl
enter
adc
cltd
lds
pushf
shl
sub
shll
sti
adc
inc
cwtl
test
fadd
mov
inc
jp
jmp
jnp
sbb
inc
fwait
xchg
bound
sahf
or
int
fisttpl
sub
jae
xor
mov
inc
lods
and
sahf
adc
or
mov
and
dec
inc
adc
lret
sub
xor
sub
mov
jmp
inc
or
lods
data16
loope
dec
jnp
sbb
jecxz
mov
mov
cmpsb
cmc
inc
jg
aaa
pop
xor
adc
or
dec
fidivrl
inc
xchg
in
cmp
gs
mov
out
loope
decl
call
jo
shlb
add
sub
nop
stos
repnz
mov
iret
mov
jo
shrb
cld
cmp
dec
leave
sub
mov
test
jl
jle
cmp
loopne
mov
scas
int3
bound
data16
inc
fdivr
mov
adc
pop
add
or
cmp
movsl
mov
shr
test
dec
jns
popf
std
iret
sbb
adc
xor
jp
mov
pusha
enter
and
pusha
loope
sbb
and
xorl
sti
rolb
dec
push
cs
add
out
sub
pop
cmp
es
adcl
gs
push
dec
mov
stos
fnstsw
mov
sub
mov
or
cmpsl
into
fwait
andb
in
jbe
sub
inc
add
stc
fstpl
mov
dec
das
adc
add
jne
and
out
push
in
gs
hlt
cmp
ljmp
mulb
lods
dec
dec
pop
incb
add
push
add
enter
clc
xchg
lcall
push
xor
lcall
mov
sub
ljmp
in
push
in
loop
outsb
xchg
cmp
cmp
arpl
xorl
and
pop
mov
or
dec
aaa
and
stc
xchg
cmp
add
aas
inc
xor
inc
pop
sbb
mov
push
lcall
aaa
mov
mov
or
mov
iret
sub
gs
sub
xor
lock
add
cmp
mov
mov
mov
xor
aas
mov
xor
mov
or
mov
jmp
inc
jo
or
xchg
push
movsl
cs
dec
pop
lcall
push
fbld
and
int
push
out
not
xchg
push
add
xchg
ja
mov
pop
push
or
iret
and
movsl
add
xchg
clc
adc
sub
dec
xlat
popf
sarl
incl
loop
jmp
push
pop
xor
xchg
pop
or
cmp
add
inc
pop
clc
test
scas
aaa
out
xchg
xchg
jb
cmp
dec
in
push
push
adc
out
bound
punpcklbw
aad
add
in
xor
mov
inc
jo
and
inc
lea
jae
add
stc
cmp
out
fwait
pop
inc
in
enter
sub
lea
add
loop
add
jg
xor
leave
xor
add
es
inc
sti
xchg
ja
lcall
fcompl
and
addr16
dec
mov
mov
ffree
clc
mov
or
jle
or
mov
das
cmp
dec
je
bound
rolb
stos
adc
int3
sub
pop
mov
mov
cli
or
mov
inc
or
in
xchg
cmc
adc
ret
push
in
mov
mov
mov
adc
hlt
movsl
xchg
pop
scas
pop
sahf
mov
dec
add
cs
outsb
je
lea
stc
rolb
iret
sub
push
sub
adc
xchg
jg
add
cmp
inc
xchg
nop
jne
adc
xchg
or
test
fcomp
cwtl
inc
mov
rorl
cmp
and
rorl
cmc
loope
push
mov
xor
add
enter
popa
jg
mov
cli
and
iret
ret
adc
in
xor
mov
enter
andb
jge
add
mov
dec
add
repnz
mov
stc
inc
fbstp
imulb
dec
jne
pop
jmp
ret
mov
rcr
adc
mov
mov
in
add
bound
mov
jmp
dec
adc
dec
ret
ret
mov
xchg
pushf
mov
xchg
rcl
loop
shrb
mov
sub
cmpb
jno
hlt
mov
sti
inc
cmp
aas
clc
sbb
mov
xor
mov
movsl
subb
cld
out
cmp
in
mov
inc
and
sub
shll
adcb
add
cwtl
in
lret
push
cmc
jnp
xor
fstps
mov
outsl
stc
mov
or
pop
push
ficompl
fsubs
xor
push
cmp
xchg
pop
add
icebp
mov
adc
cmc
fmull
push
dec
fmul
testl
mov
mov
adc
xor
sub
sti
lret
jge
imul
mov
cli
js
push
or
mov
pop
bound
test
pushf
jns
fnstenv
jle
push
mov
ficompl
mov
dec
or
push
adc
sbbl
cmc
cltd
pop
xchg
and
sbb
pushf
push
mov
mov
sbb
mov
push
inc
pop
xor
xchg
jne
mov
movsb
and
stc
mov
push
mov
arpl
or
xchg
cmpsb
imul
push
jecxz
cmpsb
add
out
push
inc
fnstsw
es
pop
dec
adc
xor
adc
jge
xor
dec
dec
pop
fimuls
dec
ja
dec
sbb
adc
jne
jmp
outsl
xlat
addr16
lret
pop
icebp
xlat
repz
mov
test
mov
aam
mov
add
cltd
xlat
movsb
popa
movsb
push
and
mov
lock
cs
outsb
dec
pop
jle
outsl
cmc
pop
stos
lcall
pop
sbb
add
jle
ljmp
cltd
push
outsb
scas
cmpsb
xor
push
hlt
push
push
inc
mov
or
jae
insb
pop
fimull
xchg
sub
sbb
aad
push
xchg
xor
adc
stc
lods
or
xor
or
pusha
dec
rcrb
xchg
add
out
jle
les
stos
mov
mov
mov
in
pop
loopne
das
fsubs
movsl
popa
ljmp
mov
out
in
cld
sub
mov
ja
push
insl
push
outsb
push
add
ss
xchg
fstps
rcrb
pop
imul
lret
dec
sahf
sub
or
mov
adc
pop
mov
mov
int
mov
aas
dec
jb
fyl2x
jnp
test
jae
mul
lcall
fildll
or
cmp
movsb
add
popa
aaa
and
mul
jg
test
dec
mov
outsl
jno
mov
pop
xor
pop
xchg
jo
mov
js
push
test
notb
pop
jg
mov
imul
stc
cmovs
or
mov
das
push
inc
out
or
and
idivb
lahf
mov
cmp
and
or
nop
sahf
call
push
sti
sarl
xchg
add
hlt
sub
cmpsb
cmp
pop
jp
cmp
cli
inc
or
aaa
cmp
outsb
xlat
insl
jne
and
scas
orl
leave
arpl
xchg
pop
sub
js
xchg
push
adc
ret
lods
jae
cmp
mov
pusha
pop
jmp
jle
mov
sbb
fnstsw
test
addr16
lret
and
add
ror
jo
or
call
cmp
inc
insl
aam
dec
movsb
cmpsl
push
xchg
sti
and
out
pop
callw
xchg
add
int
stos
test
and
xchg
push
mov
xchg
sahf
test
or
adc
push
inc
js
lahf
mov
sbb
les
jg
dec
jo
pop
iret
push
adc
push
je
lret
pop
iret
stos
sub
lcall
cmpxchg
stc
jmp
jg
mov
fbld
or
push
popf
cli
rcr
sbb
jbe
and
add
push
daa
jmp
push
std
mov
scas
fs
scas
xor
scas
jnp
fdivrp
jp
ret
addr16
fiaddl
hlt
mov
fucomip
push
enter
jle
cltd
add
jmp
cli
lcall
scas
push
add
popa
imul
adc
scas
pop
xor
push
jg
xchg
xor
les
test
ret
xchg
xor
mov
cwtl
jb
dec
scas
pushf
xor
and
push
inc
mov
lock
enter
loope
outsl
icebp
xor
shrb
mov
mov
dec
jae
xchg
dec
mov
cmp
and
cltd
xor
and
sbb
sbb
pop
fwait
insl
push
jno
daa
push
and
xor
lods
sub
inc
push
and
or
out
fidivrl
jg
jmp
adc
jg
xlat
clc
push
push
rclb
dec
std
test
imul
jg
sub
lock
or
add
mov
xchg
sub
mov
xchg
mov
icebp
and
inc
push
pop
jns
xor
pop
sbb
sub
or
add
fildl
popf
inc
outsl
lret
cmp
add
adc
dec
or
mov
hlt
push
fsubr
inc
aad
lea
cmp
jl
mov
movsl
push
fsubs
mov
imul
xchg
pop
sub
sub
ficoml
sbb
dec
movsb
mov
jbe
fs
int3
sbb
ret
sbb
xchg
push
hlt
inc
rol
sub
sar
adc
push
jmp
popf
aaa
add
add
mov
jne,pn
jnp
jmp
into
adc
or
pop
adc
sbb
and
sbb
inc
sub
fisttpl
aas
xor
push
sar
push
mov
mov
or
mov
add
and
pop
push
sub
test
push
mov
leave
out
push
inc
pop
imul
or
std
sub
out
rolb
shl
jne
test
xor
mov
insl
cs
push
test
imul
popf
xor
sti
pushl
bnd
mov
xchg
repz
inc
or
cmc
insb
jae
jbe
mov
outsl
fwait
stos
add
sbb
aaa
fidivrl
adc
fsubrs
xor
leave
decb
shr
cs
mov
shll
push
pop
mul
loopne
lahf
lock
sub
notl
jg
enter
mov
data16
in
xor
ss
insb
sbb
pop
cmpsb
movsl
push
imul
add
popf
mov
push
scas
jbe
fimull
pop
xorb
or
jns
mov
inc
jnp
xchg
ljmp
mov
jno
jge
dec
ds
jecxz
in
mov
and
cmp
and
enter
pop
mov
and
xchg
data16
pop
mov
sub
lds
sbb
sahf
daa
sbb
mov
int
daa
into
rcrl
leave
adc
and
mov
repz
cli
push
or
pop
ss
inc
lret
in
jle
aam
push
arpl
xchg
jecxz
aas
push
lahf
shll
nop
xlat
enter
pop
sub
cmp
push
pop
in
fdivrs
daa
inc
dec
pop
mov
pop
jecxz
sub
cmp
add
movl
adc
cmp
xchg
cwtl
outsb
in
clc
jmp
push
fcoml
movsb
pop
push
xor
dec
inc
imul
inc
push
cltd
jge,pn
push
cli
or
inc
test
mov
lods
add
xchg
mov
decb
mov
mov
roll
test
lock
scas
xor
cs
movb
mov
push
cmp
push
push
out
pop
add
mov
js
sbb
and
fs
imul
mull
push
hlt
clc
outsl
xchg
inc
push
push
mov
inc
sbb
adc
push
mov
fwait
int3
sub
dec
lods
xchg
jmp
mov
data16
push
test
int
out
inc
mov
imul
clc
pop
cmpsl
cmp
inc
cld
push
repz
test
popl
shr
roll
cmpl
addl
int3
cmp
out
mov
mov
inc
pop
fwait
sbb
scas
leave
gs
mov
xlat
test
outsb
das
and
push
add
sarl
incb
test
repnz
push
and
xchg
test
add
test
cwtl
loope
pop
movsb
repz
popf
popf
pushf
loop
jb
icebp
cmc
nop
jno
jp
pop
std
cwtl
faddl
mov
das
fs
adc
mov
xchg
or
xchg
add
xor
push
in
fildll
inc
jb
push
mov
out
fists
femms
test
stc
lock
sub
aam
pop
aam
loopne
inc
jne
enter
std
fs
loope
pop
lods
iret
adc
or
jp
sbb
mov
pop
cmp
adc
push
or
adc
cld
add
test
fwait
mov
sub
scas
insl
sub
cmp
and
mov
ret
cmc
rclb
in
xor
mov
mov
iret
or
pop
pop
rcll
dec
fbstp
dec
popa
push
dec
lea
lret
sbb
jae
pop
xchg
jge
jo
loop
pop
lock
out
fdiv
rcrl
fmul
or
pusha
sahf
xor
or
fs
incb
out
mov
mov
push
popa
mov
sbb
sahf
push
out
mov
add
lds
push
mov
pop
mov
rorl
jge
test
push
rorb
dec
sti
push
xchg
loope
dec
popl
add
out
cli
jmp
sarb
gs
add
mov
push
mov
sbb
cmpsl
or
fisttps
add
ret
dec
repnz
add
inc
dec
xchg
es
inc
xor
push
push
inc
in
cmp
pop
popf
shll
lds
dec
pop
test
or
cmp
and
xor
and
xor
inc
pop
orb
adc
add
mov
mov
dec
add
xchg
jg
fs
fildll
test
pop
sbb
mov
xchg
popa
sub
or
push
xor
pop
push
lds
int3
cmp
ret
jmp
push
mov
aad
adc
push
lods
imul
lds
lds
mov
scas
pop
sahf
xor
push
fmul
addb
mov
sbb
pushf
push
arpl
pop
sub
decl
out
int3
add
addr16
inc
xor
push
cwtl
xor
lcall
lds
xchg
movl
add
sub
movsl
xchg
pop
mov
pop
mov
aam
add
mov
out
insl
push
arpl
sub
cs
je
pop
aas
pop
sbb
stos
cmp
dec
nop
push
or
inc
stc
adc
sbb
mov
loopne
lret
mov
push
and
js
xchg
imul
mov
mov
loope
nop
aaa
cltd
shrb
fwait
sub
dec
shll
xchg
mov
lods
sar
mov
jnp
or
pusha
mov
push
shl
subb
lcall
mov
pop
imul
jo
cmp
je
repz
inc
das
sbb
mov
enter
aaa
xor
mov
arpl
jge
hlt
ja
jne
outsl
cmp
int3
ficoml
or
pop
jle
stos
and
sbb
mov
mov
jmp
imul
jge
xchg
mov
jecxz
push
bound
out
inc
adc
popf
dec
mov
fisubs
mov
push
push
jmp
popf
popf
mov
aas
loope
pop
jge
pop
in
nop
pop
rcrb
pop
inc
std
mov
std
mov
mov
jae
dec
lods
bswap
fadds
shll
movsl
pushf
int
add
push
inc
sub
add
sub
scas
pushf
cld
cmp
pop
fimull
movntq
mov
or
or
inc
das
dec
xor
sub
xor
mov
rolb
and
jecxz
pop
push
dec
fcompl
jl
or
jb
test
mov
mov
push
dec
out
int3
or
repnz
in
test
mov
cmp
sub
sub
or
mov
addb
jnp
xor
idivl
dec
pushf
pushf
ss
mov
call
sbb
dec
xor
xchg
lock
mov
inc
iret
stos
fistpll
repz
into
mov
jae
jp
lsl
xor
add
inc
mov
push
and
jo
adc
fcomp
stos
cld
push
add
nop
jge
in
jbe
call
mov
movsl
and
ret
xchg
jo
fs
imull
or
sbb
inc
adc
test
add
mov
std
xor
fcomip
or
in
mov
push
fdivrs
or
fs
push
fdiv
sbb
movsb
jp
out
aad
xchg
into
addr16
sbb
jecxz
sahf
dec
jae
iret
xor
lret
mov
loope
in
movsb
jle
sbb
and
mov
adc
js
push
jne
add
xchg
pop
xor
insl
fmull
test
fists
adc
push
adc
jbe
push
xchg
fstl
mov
cmp
push
push
push
cmpsb
dec
xchg
and
aaa
pop
xor
fs
mov
inc
fildl
mov
mov
add
jle
ret
push
daa
fidivrs
pop
fcomps
popf
xchg
xchg
inc
cwtl
stc
xchg
cmp
mov
cmp
push
push
or
ret
out
inc
mov
sub
fiaddl
add
int3
loopne
xchg
lods
cmp
push
dec
add
mov
adc
int
imul
xor
movsl
inc
mov
cltd
out
lds
xchg
lea
cmp
movl
shl
adcb
daa
mov
dec
pop
daa
and
fstp
cmp
rorb
cmp
xchg
lock
xor
and
mov
shrl
scas
test
adc
arpl
pop
jne
xor
fmuls
and
int
ret
daa
loopne
faddl
mov
aad
inc
shl
or
push
dec
cmp
bound
jmp
call
test
int
fistps
test
lods
jl
scas
mov
xchg
pop
dec
aam
jl
aad
fs
les
jno
adc
test
in
rcrl
scas
jecxz
fisttpll
xchg
dec
sub
insb
bound
rorl
fldenv
int
sahf
or
xor
adc
lock
lock
cwtl
outsl
pop
inc
fldenv
sub
fidivl
insb
sub
cld
inc
mov
mov
movsl
cmp
aas
pop
inc
icebp
cs
idivb
sub
lret
push
jl
cs
sub
int
and
push
in
dec
xchg
loopne
les
or
pop
sti
push
mov
push
dec
mov
jmp
imul
mov
push
sbb
daa
pusha
cmp
push
fldcw
or
push
out
sbbb
lret
cmc
aas
pop
lret
jb
je
sub
cli
cmp
xorl
cmp
xor
nop
adc
outsl
mov
cmc
aaa
inc
movsb
cmp
push
dec
inc
lods
xchg
dec
mov
outsl
popa
aaa
in
lock
shl
push
rclb
shll
test
mov
fidivrs
mov
add
loope
sub
pop
push
iret
sbb
push
cmp
mov
aam
out
int
xchg
popf
xor
cmp
inc
sbb
fistl
or
sub
bound
xchg
repnz
push
pushl
mov
fistl
subb
mov
rorl
int
aam
mov
loop
sub
xchg
pop
pop
sar
popf
enter
insl
test
out
cmpsl
scas
cmp
es
or
movb
sub
cmpsl
sub
addl
gs
cmp
add
iret
daa
cmp
scas
jbe
cmc
das
jg
sahf
test
sub
sbb
pop
sbb
push
ss
pop
mov
add
mov
les
push
ja
cmc
ret
fstl
fcoml
cmp
cmpsb
push
adc
cs
test
pop
fcompl
fs
into
pop
fstl
mov
pop
push
clc
xor
add
jnp
lods
mov
lret
push
dec
loopne
xchg
aaa
jns
fidivs
js
push
xlat
and
es
int3
iret
push
mov
in
inc
mov
int3
mov
rcrb
jo
fisubrs
xchg
mov
fsubr
stos
ret
outsl
or
and
cmpsb
inc
ds
mov
lcall
xor
push
insb
or
or
dec
mov
xchg
adc
scas
int
pop
imul
mov
shlb
fnsave
fsts
ret
addr16
push
mov
mov
dec
xor
jbe
divb
cltd
stos
call
cmp
dec
adc
fstps
xorb
int3
popa
mov
sbb
mov
loope
es
pop
cld
push
cmp
or
xor
dec
mov
mov
stos
adc
pop
pop
push
in
xchg
mov
cmp
ret
out
pop
mov
scas
mov
push
mov
jb
punpcklbw
mov
sub
xlat
incb
adc
into
out
push
inc
outsb
fisttps
push
inc
mov
inc
popf
add
mov
add
mov
sub
iret
add
push
xor
push
sbb
lretw
scas
push
xchg
cmc
mov
inc
ret
clc
in
mov
stos
negl
push
cs
dec
insb
in
mov
outsl
adc
push
push
lret
das
mov
insb
and
mov
pop
cs
and
icebp
pushf
hlt
imul
out
repz
sub
inc
in
mov
insb
je
je
cltd
xchg
hlt
sti
and
lods
or
adc
and
sub
daa
adc
popa
lcall
mov
xchg
loopne
lods
stc
into
aaa
mov
sub
and
dec
add
scas
in
ljmp
sbb
xchg
pop
inc
lret
ffreep
mov
jge
lock
sub
fwait
cld
jp
add
dec
jecxz
decb
lahf
jnp
mov
cwtl
add
mov
push
sbb
mov
out
xor
dec
push
inc
mov
fistl
aam
lods
pop
sub
dec
jle
mov
sub
pop
and
clc
mov
addr16
leave
xchg
cld
das
ret
sbb
es
xor
jo,pt
push
push
lcall
rcl
xchg
data16
and
pop
rcl
jb
jle
cmpsl
ror
xchg
ret
aam
enter
adcb
ret
pushf
inc
jg
test
insb
les
insl
mov
add
push
aam
xchg
mov
or
ljmp
in
js
and
mov
stos
mov
in
mov
fwait
mov
sub
insb
mov
or
cmp
pop
mov
je
push
dec
mov
nop
pop
xor
push
lahf
movsb
push
aad
movsl
sbb
aam
xor
xchg
mov
inc
mov
scas
dec
mov
mov
push
mov
rcr
fcoml
xchg
xchg
jns
sbb
and
scas
mov
push
aaa
imul
cltd
sbbl
mov
and
ljmp
cmp
push
inc
sbb
add
mov
gs
orb
add
and
dec
jle
adc
adc
shll
fstpl
arpl
push
xor
pop
rorl
dec
arpl
into
loope
mov
insl
fcomp
popf
fnstenv
mov
jo
out
addr16
negl
and
inc
mov
clc
int
pop
cmpsl
movb
adc
icebp
lea
dec
ja
popf
inc
sbb
fbld
test
out
and
cmp
pusha
xor
scas
in
push
push
loopne
pusha
call
cmpsb
push
inc
cmc
sub
inc
adc
push
insl
dec
push
xchg
sti
xchg
idiv
push
cmp
xchg
cmp
std
cmc
enter
enter
gs
dec
pop
in
and
adc
cmpsb
inc
lods
fwait
rorb
mov
mov
xchg
into
daa
pop
je
aaa
mov
and
flds
push
shll
jge
test
aad
je
mov
mov
stos
jb
sbb
shl
mov
push
pop
fstpt
xor
daa
and
xchg
enter
icebp
dec
dec
sbb
mov
lods
pop
ds
movsb
mov
mov
dec
ja
int3
dec
jno
inc
ljmp
loope
pop
xchg
je
movsb
sub
bnd
repnz
test
sahf
lods
jmp
xchg
dec
inc
daa
jle
gs
inc
xor
push
mov
clc
cltd
ja
cwtl
push
outsl
das
dec
cmp
add
bound
mov
sarb
scas
dec
cmpsb
dec
outsb
mov
cmp
loopne
xor
imul
aam
inc
movsl
jbe
inc
gs
test
ror
test
mov
push
add
add
adc
loop
out
push
popf
xchg
push
cmp
and
out
fsubl
adc
mov
das
or
add
xchg
clc
xchg
cmp
pop
out
push
fs
xor
xor
mov
cli
pusha
ret
je
dec
mov
mov
sub
pusha
cs
ficoms
push
pop
xlat
hlt
lcall
adc
insl
out
add
daa
push
pop
lock
fwait
pop
les
fsubs
xchg
inc
fs
mov
cs
insb
mov
pop
push
push
clc
or
movsl
lret
lock
sbb
mov
push
cmc
fcoms
xchg
mov
stos
aam
ss
sbb
testb
repz
nop
xorb
xlat
rclb
adc
adc
push
push
cmpsl
notl
xchg
jo
jb
push
lret
enter
sar
fwait
test
and
adc
shrl
sub
cmp
lret
jns
nop
call
or
loop
lcall
and
ffree
pusha
aas
out
and
mov
adc
or
mov
shrb
jmp
loope
div
push
add
jmp
shlb
inc
int
cmp
or
sbb
test
sbb
std
add
push
sbb
dec
mov
xchg
test
dec
hlt
push
addr16
stos
mov
mov
inc
mov
rorl
jg
inc
frndint
enter
cmp
jg
in
adc
add
mov
mov
loop
test
addl
lea
out
dec
mov
sbb
lahf
cmp
mov
lods
sub
aaa
sti
aad
mov
jmp
shrl
cmp
jbe
mov
ja
repnz
push
out
rorb
push
pusha
sub
and
int
addb
in
adc
mov
ljmp
cmp
divl
out
cmp
pop
pushf
addr16
push
jl
pop
push
inc
cld
sbb
lods
call
xchg
call
mov
xchg
ss
sbb
jl
es
add
leave
push
scas
into
xchg
mov
add
out
clc
or
sarl
or
movsl
jb
roll
lea
xchg
aaa
cs
mov
dec
push
sub
aam
jle
std
inc
lret
sbb
mov
lret
enter
sub
mov
jl
add
jp
icebp
movsb
jge
pop
xchg
xchg
lret
stos
test
inc
and
data16
test
mov
or
jmp
add
jmp
push
imul
pusha
fisubl
add
into
jbe
lret
cmp
iret
popf
mov
lds
xorl
jl
sbbb
mov
push
popa
mov
mov
fcmovb
push
data16
imul
dec
or
cmpsb
ljmp
or
jle
pusha
or
ror
bound
shll
adc
js
sbb
aad
xor
sub
sub
cmpl
xor
mov
shlb
loopne
jns
addr16
and
aaa
fistl
ja
shlb
sarl
and
adc
push
int3
xor
es
lods
test
stc
dec
shlb
sbb
test
scas
pop
dec
mov
repz
ror
xor
adc
fldenv
sbb
mov
jge
aaa
xor
frstor
sar
and
cmpb
aam
push
flds
sbb
cmpsl
xchg
call
push
cmp
mov
and
daa
push
sbb
jae
mov
mov
je
sbbl
lret
xchg
dec
dec
ljmp
aas
or
jl
int
ljmp
hlt
mov
mov
outsb
pop
repnz
ds
push
test
cmp
mov
movsl
jbe
mov
pop
or
icebp
dec
adc
jecxz
push
push
mov
loopne
sti
lods
xor
adc
sbb
call
adc
jb
aad
jne
loopne
filds
sbb
xchg
lret
mov
push
cld
pop
sahf
inc
mov
and
sbb
adc
jmp
push
addr16
cwtl
dec
clc
loopne
jns
leave
and
inc
aas
lahf
sub
push
sti
outsb
mov
mov
mov
out
subl
sub
sub
mov
jp
movsl
sub
mov
xor
and
and
loopne
mov
stos
adc
je
xchg
lcall
mov
fnstsw
lcall
push
daa
inc
lret
lret
adc
fs
pop
and
in
push
movsl
testl
cmpsl
dec
push
pop
lcall
push
loop
lea
jmp
xchg
movsb
out
lahf
jge
add
std
pop
cld
decb
jp
jge
test
cmp
daa
push
push
push
lahf
lahf
mov
dec
ret
push
xor
or
add
jb
andb
dec
ljmp
mov
or
test
cli
scas
movsl
mov
mov
bound
adc
jge
and
mov
clc
add
mov
jbe
inc
fistpl
out
add
push
inc
dec
pop
mov
inc
cltd
sbb
inc
pop
dec
fcomps
mov
and
xchg
xor
xchg
pushf
iret
fmuls
fmulp
ret
ror
dec
mov
mov
bnd
and
lret
iret
jno
push
add
aas
adc
inc
mov
sbb
xorl
mov
adc
out
pop
mov
repnz
fldenv
std
js
or
mov
cmpsl
jo
ljmp
aad
dec
imul
shl
ret
jl
inc
push
movups
jne
lahf
xor
mov
les
add
mov
sub
rorb
cli
pushf
inc
shl
ljmp
out
pop
out
sub
aad
rcrb
ss
jne
gs
outsl
jecxz
sub
sub
push
dec
outsb
jne
adc
bound
mov
fwait
sub
xchg
ds
call
inc
cmc
and
addr16
mov
test
imul
faddl
cs
cwtl
dec
inc
cmc
jl
jp
lret
scas
xor
mov
adc
jl
stc
mov
lea
cmp
add
stos
adc
xchg
popf
inc
push
and
dec
pop
lock
mov
mov
in
cmpsl
sbb
lret
sub
jecxz
imul
test
popa
pop
nop
fcmovbe
pop
je
lods
xor
jb
gs
ss
xorl
nop
inc
jle
aaa
and
out
adc
mov
push
or
xadd
cs
and
cmpsb
fmuls
addr16
inc
jo
movsl
in
ja
lea
push
cld
xchg
jmp
adc
shr
mov
jno
stos
adc
jns
xor
out
hlt
or
fmulp
mov
imul
sub
xchg
in
lds
sbb
fstpt
pushf
inc
gs
dec
jmp
mov
push
mov
cmc
fsubrl
scas
jo
cwtl
xorl
adc
bound
inc
xor
push
add
mov
push
inc
mov
cltd
fiadds
fsubrs
sbb
or
outsb
push
imul
clc
xchg
mov
fidivrs
and
iret
iret
xor
push
mov
mov
mov
or
leave
movsl
pop
mov
sub
fsubr
sarb
inc
movsb
sub
mov
push
mov
shrl
xchg
xchg
and
sub
push
push
js
inc
hlt
jbe
mov
xor
add
fisubrs
and
js
jle
adc
mov
daa
repz
push
stos
and
cs
sti
add
shrb
sub
sub
mov
jne
out
addb
sbb
pop
sbb
pop
bound
inc
jg
cmp
fmull
mov
add
add
lret
shlb
jns
negl
sub
in
data16
fistl
mov
outsb
into
fcoml
push
sbb
test
in
sbb
xchg
cmpsb
and
jno
jl
data16
rorl
mov
mov
test
rcrb
lret
loope
imul
cwtl
xchg
xchg
jne
loope
pop
je
xor
mov
mov
fldenv
mov
dec
inc
mov
add
xchg
jae
lods
rolb
aas
std
lods
inc
pop
mov
mov
sbb
popf
ret
mov
cwtl
xchg
std
divl
lea
je
clc
dec
idivb
adc
out
popl
inc
pop
stos
dec
fimuls
test
fwait
push
js
push
mov
xchg
inc
fnstsw
mov
insl
sbb
push
das
cli
and
push
jo
sti
sub
inc
mov
sti
cmp
loope
jbe
pop
mov
sub
lods
mov
and
xchg
xor
imul
mulb
aam
into
jne
out
fwait
jge
icebp
daa
hlt
or
out
xchg
hlt
xor
lods
inc
inc
out
adc
repnz
daa
push
push
jae
fstps
lret
in
mov
jmp
subl
xor
or
lods
je
push
lock
sbb
sub
mov
cmp
fidivrs
mov
adc
push
fisttps
test
paddw
aad
jnp
jle
frstor
push
clc
mov
push
add
pop
mov
xchg
loope
fidivrs
sbbl
fimull
testb
mov
pushf
sub
test
xlat
pop
fisubrs
xchg
pop
ret
dec
pop
cmc
xchg
jae
shll
and
lea
pop
xorl
cmc
push
addr16
inc
jge
dec
loope
mov
adc
cli
sub
mov
mov
or
cli
rcr
sub
pop
arpl
mov
pop
adc
push
iret
jg
je
lock
xor
movsl
mov
mov
fsub
sbb
and
mov
stc
dec
or
ret
les
es
mov
xchg
imul
inc
ret
add
imul
push
inc
inc
fldenv
and
mov
and
mov
dec
push
movsb
pop
adc
in
jg
dec
loope
sub
fcoml
mov
jnp
push
xor
out
in
outsb
jnp
outsb
test
cltd
jge
jg
daa
movsb
add
xor
fstpl
dec
xchg
das
imul
and
insl
repz
sbb
mov
dec
popf
ljmp
aam
iret
dec
shrb
shrb
into
cmp
divb
vpmaddwd
dec
inc
lock
aad
stos
sti
adc
call
je
ds
sbb
xor
ds
sbb
or
test
movsb
pop
sbb
add
mull
push
ss
adc
mov
sbb
push
dec
enter
xor
std
cmp
mov
mov
cmp
mov
sbb
xor
inc
cld
cmp
addr16
cli
cmp
xchg
movsb
xor
and
outsb
inc
inc
adc
adc
pop
ljmp
add
stc
mov
in
ja
or
push
rorb
or
ja
adc
inc
dec
aaa
movsl
push
lret
add
adc
lcall
roll
icebp
int3
int3
fisttps
stos
in
mov
push
sahf
sarl
jle
leave
inc
add
cs
sub
das
jmp
leave
addr16
jae
imul
sbb
sub
in
mov
testb
pop
jnp
xchg
ret
xchg
mov
jno
aad
cmp
jl
fs
lods
or
jle
xchg
pop
rcrl
imul
test
std
ret
adc
cmp
cmp
dec
jl
je
and
repnz
es
std
mov
jmp
cmpsb
lret
imul
xchg
lock
mov
nop
cmp
data16
push
out
loop
ja
sub
scas
xchg
cmpsl
sub
dec
test
mov
xchg
je
lea
cmp
fidivrs
popa
dec
ss
stos
mov
mov
jae
lcall
shrl
push
adc
fbld
inc
pop
sub
push
mov
mov
add
les
pushf
cs
xchg
pop
mov
mov
mov
addr16
scas
push
xor
js
lcall
mov
mov
fisttpl
inc
jge
pop
hlt
mov
jg
sub
mov
dec
in
ss
jmp
sbb
or
int3
adc
sub
push
lea
xor
call
fsubl
inc
mov
aam
clc
into
mov
jmp
int3
mov
mov
and
cmpsl
lock
mov
push
xor
xchg
and
mov
and
and
sub
xchg
ret
cmp
push
or
loop
push
mov
cli
xchg
jbe
add
push
out
inc
jae
pusha
sarb
aas
push
negb
add
out
sub
sub
push
sbb
insl
xor
loopne
inc
cmp
add
adc
inc
pop
or
test
cmp
sbb
xor
cmp
aam
dec
ss
or
shll
js
mov
push
insl
mov
xor
push
pop
inc
mov
cmpsb
push
sub
jg
inc
fbld
sub
xor
xlat
mov
ljmp
dec
sub
jno
push
xchg
mov
icebp
and
and
lods
addr16
out
dec
lea
sete
rorl
mov
jmp
icebp
into
ja
mov
jb
mov
dec
jge
cwtl
xchg
sar
je
pop
push
out
push
lret
xlat
ss
pmuludq
out
pop
aaa
stos
fst
andb
fsubs
xchg
sarl
mov
orb
jns
xor
xor
sub
imul
dec
adc
repz
push
and
mov
cs
out
dec
pop
push
fsubr
in
repz
jnp
cmpsb
mov
dec
xchg
inc
pop
push
das
movsl
or
sub
in
push
or
or
inc
lea
sbb
sarb
repz
movsl
cli
add
xor
cltd
lods
movsb
pop
imull
loop
into
lcall
sbb
lds
pop
add
cmp
fsts
movsb
add
inc
sub
and
mov
fiaddl
idivb
lcall
and
lret
aaa
mov
dec
int
jae
out
dec
and
or
ds
cmpsl
es
adc
out
cmp
or
dec
push
adc
sbb
inc
mov
xchg
add
stc
cli
or
add
mov
sbb
mul
ret
es
mov
adc
inc
mov
mov
sbb
cld
mov
xchg
jbe
adc
mov
push
lock
adc
gs
cmp
outsb
fidivl
ret
dec
dec
repnz
not
int
and
mov
xchg
mov
cmp
ret
mov
and
inc
cmp
ja
test
inc
xor
test
mov
push
sbb
or
and
imul
jbe
shr
xor
xchg
movsl
imul
cmp
xor
addr16
pop
repnz
push
sahf
cmp
addr16
mov
cli
lahf
sub
sbb
sahf
fucom
aad
xor
add
nop
insb
sbb
cmpsl
psubusw
arpl
push
scas
nop
cli
int
adc
std
mov
gs
shlb
je
sub
insl
dec
rol
ss
int3
mov
lods
or
clc
div
or
aad
in
sub
mov
or
pop
mov
jbe
mov
xor
inc
cmpsb
sub
mov
sahf
ss
cmp
push
ret
lret
dec
ljmp
xor
movsb
add
pusha
inc
inc
cmpsb
jo
bound
icebp
mov
mov
fdivl
mov
xor
sub
push
or
daa
sub
cmpsb
ja
push
iret
adc
shr
es
sbb
dec
sub
and
repz
dec
xchg
add
loope
out
popa
push
cwtl
mov
pop
mov
cwtl
push
sbb
xchg
push
sub
cmp
in
hlt
mov
dec
mov
inc
jb
sub
in
repz
xor
leave
dec
testb
fbstp
in
push
pop
ret
sti
sub
mov
subb
test
xor
push
mov
pushf
test
outsb
les
jnp
divb
mov
in
pop
fcoms
dec
fisubs
and
aaa
mov
outsl
mov
insl
loop
lock
movsb
xor
pop
into
mov
hlt
in
mov
pop
cld
push
cld
fucomp
xchg
movsb
xchg
cs
push
xor
into
inc
sbb
gs
test
in
fsubrl
xchg
mov
ja
jp
jecxz
mov
or
xor
or
pop
lods
in
jne
add
cmp
mov
ret
loope
outsl
shl
jle
jbe
mov
or
lahf
inc
cltd
xchg
or
inc
pop
push
nop
pop
pushf
xorl
cwtl
out
xlat
popf
call
mov
jl
push
jns
iret
pop
push
adc
movsl
dec
mov
inc
mov
pusha
sbb
adc
xchg
leave
jbe
and
sub
sub
inc
sbb
pop
rcll
sbb
xchg
imul
addr16
xor
mov
xlat
inc
sbb
xchg
scas
cltd
cmpsb
std
in
je
jbe
dec
sbbl
cwtl
scas
shrb
iret
jecxz
std
cmp
cmp
scas
test
mov
out
ljmp
leave
inc
ljmp
mov
rcrl
inc
push
data16
lret
mull
shll
inc
mov
and
lret
movsb
imul
idivb
mov
pop
arpl
ds
lret
mov
clc
mov
xorb
test
lret
pop
mov
movsb
call
add
fucom
leave
inc
add
lret
iret
push
pop
mov
or
iret
out
insb
ljmp
lods
jp
xchg
stc
std
xchg
into
and
xor
mov
aam
lahf
scas
shrb
pusha
mov
xlat
daa
or
mov
loopne
jae
jae
into
cmp
sub
dec
shll
xchg
sbb
sahf
fnstenv
mov
in
sub
lea
push
push
out
jg
lcall
inc
and
adc
add
or
movsb
clc
jmp
mov
test
sub
inc
in
mov
out
push
jmp
clc
scas
fcoms
fwait
int
pop
shrl
nop
push
inc
add
mov
pop
mov
lds
mov
mull
inc
or
add
adc
mov
pusha
mov
bound
or
fdivrp
das
repz
jnp
push
dec
mov
mov
push
dec
call
mov
fs
xchg
add
sarl
or
mov
add
in
push
mov
and
out
xor
sbb
push
int
stc
icebp
jle
adc
mov
lock
xchg
jbe
add
loopne
cmp
ljmp
fistpl
scas
mov
or
push
mov
or
inc
or
mov
gs
jmp
filds
lods
xchg
xor
ss
dec
or
ja
xor
sub
push
adc
fcompl
ret
and
enter
sub
pop
xlat
mov
movlhps
enter
int3
inc
ficompl
xchg
fbstp
jp
ja
add
xor
xchg
fsts
push
fisttpl
ja
out
adc
adc
aaa
add
andb
xchg
and
in
push
clc
pop
xchg
pop
fwait
mov
dec
mov
jbe
sbb
lock
or
or
xchg
sarl
out
push
pop
or
add
enter
loopne
jmp
test
dec
mov
xor
add
fisttps
xor
cmp
lods
jge
ja
enter
mov
cwtl
cmp
xchg
jg
cltd
adc
enter
icebp
cmpsb
push
aas
shrb
imul
mov
jmp
test
cwtl
ret
push
lahf
mov
push
sub
pop
dec
jle
hlt
jl
add
pop
popf
jge
neg
shl
in
dec
and
mov
or
imul
cmp
andl
rorb
xchg
fdivr
mov
jmp
pop
push
mov
fists
push
mov
cld
mov
xchg
cli
pop
sub
mov
fwait
test
imul
mov
add
movsl
stc
in
adc
ror
push
push
push
jmp
dec
test
or
cltd
ret
and
popa
movsl
jns
push
mov
cld
adc
xchg
hlt
mov
or
jl
cmpl
inc
push
or
popf
or
cld
or
sbb
inc
cltd
inc
add
neg
aad
jecxz
imul
dec
dec
and
out
jl
jns
xor
out
or
or
push
or
scas
mov
pop
pop
cmp
rcr
and
mov
and
mov
rclb
add
adc
mov
lds
pop
add
jg
mov
aam
ret
sbb
bound
repnz
xchg
mov
or
sbb
mov
inc
jb
stos
xor
test
sbb
jae
popf
cmpb
lcall
jns
in
rorl
push
inc
cld
fsubl
inc
add
outsb
nop
aas
sub
jg
dec
dec
and
aas
shr
mov
xor
test
test
orl
stos
fstpt
lock
cltd
aas
inc
pop
jg
xchg
adc
leave
std
adcb
jns
dec
enter
aam
inc
pop
lods
jp
dec
mov
cmpsl
lcall
sub
vphaddubw
pusha
popa
les
push
cmp
mov
pop
scas
mov
mov
shl
xchg
mov
test
xor
inc
jno
fstpt
xchg
stos
vandps
add
fadds
iret
push
mov
scas
test
xchg
jle
mov
nop
dec
pop
fmuls
add
and
ja
lcall
leave
nop
inc
loopne
arpl
mov
adc
mov
cmp
push
shrl
xchg
clc
or
out
mov
xchg
xor
cmp
sar
icebp
testb
scas
mov
les
xor
jnp
mov
dec
xor
mov
mov
cmpsb
add
nop
xor
or
mov
ss
cmpsb
mov
int3
push
gs
mov
sbb
add
mov
cli
shrl
stos
lcall
fwait
add
push
inc
lods
jp
xchg
orl
loopne
outsl
sub
lds
lods
shr
jbe
adc
stc
lds
mov
test
dec
mov
xchg
cmp
or
push
xor
jle
push
movsl
jbe
jae
inc
push
fsts
inc
push
mov
push
stc
out
xor
movsb
xor
in
in
mov
mov
or
sbb
in
xchg
dec
xchg
std
or
adc
push
adc
lods
into
pop
jle
cmpsl
adc
or
push
lea
fcoms
xor
sbb
incl
arpl
lock
imul
out
or
mov
lds
cmp
test
std
adc
mov
cmc
out
fs
nop
out
fisubrs
dec
or
fisubl
out
xor
mov
mov
ret
xor
les
jecxz
cmpsb
gs
stos
pop
in
std
pop
jp
jecxz
push
sbb
loop
outsb
push
dec
incb
cmpsb
imull
add
out
loope
xchg
imul
push
mov
add
xor
fs
iret
int3
push
shlb
pshufw
inc
out
in
or
or
sbb
rcr
mov
lock
mov
test
push
in
fucomp
cld
lds
int
push
mov
shl
addl
pop
mov
pop
or
push
pop
and
aad
fwait
dec
in
mov
loopne
cmp
dec
push
fistpll
movsl
fidivs
mov
push
in
xor
push
notl
push
jo
test
cmc
dec
daa
aad
mov
jl
dec
pushf
sub
xchg
repz
dec
sub
cmp
xor
imul
std
negl
push
push
xchg
mov
push
jae
mov
lods
mov
lret
mov
mov
push
add
shlb
fistpll
sub
mov
jne
in
adc
jge
jae
xor
adc
dec
jne
push
xchg
sbb
mov
iret
imul
cmpb
sbb
gs
sbb
sub
call
out
mov
aam
add
xchg
pop
faddl
sbb
js
insb
loope
add
mov
fnop
xchg
call
mov
fsubr
jbe
and
and
jb
jb
orb
int
lret
fists
mov
jne
sub
cmp
addr16
arpl
repz
and
call
jnp
lret
or
outsl
cmp
pop
xchg
xchg
cmp
mov
mov
dec
cwtl
addr16
pop
add
jle
lcall
adc
xor
jl
xchg
dec
or
xor
ljmp
push
out
cmpl
inc
inc
add
mov
data16
xor
fwait
xchg
cmovb
in
cmp
dec
or
or
jnp
out
sub
cmp
outsb
mov
jo
jg
adc
rdpmc
mov
fs
push
xchg
or
add
sbb
jp
add
cmp
xlat
icebp
or
push
js
xor
mov
stos
sbb
sub
pop
inc
jnp
in
test
xchg
mov
imul
es
bsf
fsubl
jmp
jne
inc
push
mov
add
or
jns
mov
push
xchg
fmulp
and
mov
mov
into
js
pop
repz
dec
and
lds
mov
iret
add
in
mov
icebp
xlat
pusha
movlps
in
adc
push
adc
ss
sub
jp
push
push
subl
xchg
out
test
adc
ret
sub
scas
popl
adc
push
cmp
stos
hlt
sbb
jl
cmp
add
inc
inc
test
dec
scas
roll
xchg
nop
adc
pusha
pusha
or
or
in
xchg
cmp
loopne
loopne
lret
adc
jg
mov
lods
cmp
sahf
mov
cwtl
int
daa
and
and
xor
sahf
daa
fsubrl
sbb
ret
lock
jnp
lret
aas
not
cmp
testl
sbb
cmp
sarb
iret
cmp
adc
adc
inc
adc
adc
and
jb
mov
loop
sbb
sub
or
inc
and
fcomps
pop
ljmp
movsb
aam
cmp
fldl
sti
pop
jmp
push
repnz
stos
insl
mov
in
xchg
aaa
push
push
mov
nop
sub
out
mov
pop
mov
inc
outsl
push
daa
adc
jg
push
cmovbe
aam
dec
adc
popa
pop
xor
push
int3
and
jg
dec
or
xchg
fnsave
mov
sbb
jge
dec
pop
dec
iret
mov
mov
xor
mov
pop
mov
dec
movsl
addr16
add
jns
outsl
mov
fdivl
pushf
arpl
ret
gs
mov
adc
mov
mov
cs
sbb
dec
aad
out
cmp
lcall
shl
add
xchg
adc
mov
sarl
jge
test
cld
or
sbb
mov
or
pushf
xor
pop
out
xchg
ljmp
inc
lahf
and
pop
loope
mov
shlb
aas
mov
mov
fs
not
cld
or
sar
cmc
aaa
pusha
xchg
cmp
adc
scas
sbb
in
gs
pop
not
mov
outsb
sahf
movlps
add
or
pop
push
int
dec
ljmp
xchg
jle
xor
jnp
inc
mov
nop
jae
dec
adc
out
mov
mov
push
test
jbe
mov
mov
cmp
mov
adc
jge
sbbl
ficoms
aam
cmp
adc
pop
add
andb
push
aam
sbb
jae
ds
mov
sahf
and
sub
addb
and
mov
es
pop
in
dec
mov
fadds
movsl
dec
cmpb
mov
ja
jns
cld
stos
add
clc
das
bound
ret
repnz
repz
out
xchg
fmull
jge
insl
jbe
adc
mov
ret
in
lcall
dec
je
xor
jp
cmp
das
dec
sbb
cmpl
sub
sub
sahf
mov
xor
daa
lods
in
fdivrl
arpl
fwait
cld
sbb
xor
mov
jge
adc
add
mov
xchg
cli
pusha
pop
ss
adc
mov
lods
mov
mov
popa
push
aad
repnz
in
cmp
lods
roll
inc
and
jae
mov
jb
push
outsb
mov
and
rorl
shrb
sahf
lcall
or
js
popa
add
test
das
in
mov
pop
iret
pop
loop
pop
xchg
push
sub
jae
sub
lea
xlat
shll
es
stos
jae
cli
xchg
mov
movsl
int
popf
pushf
in
and
fldl
mov
xor
inc
push
mov
bound
or
and
lock
dec
push
mov
inc
mov
cmp
adc
popa
and
jns
in
push
std
xchg
std
inc
repz
dec
mov
jge
fisubs
stos
movsb
cmp
jb
mov
jle
add
enter
imul
repz
jg
xchg
push
xchg
ljmp
call
and
test
test
lds
dec
add
lods
js
dec
dec
mov
jmp
push
in
loop
sbb
sbb
stos
push
aas
jo
std
mov
in
jnp
es
cli
movsb
fsubr
daa
mov
cmpsb
cmp
outsl
gs
repz
ds
neg
mov
daa
cs
stc
jg
push
jl
outsl
dec
or
test
mov
std
ds
rcrb
xchg
in
insb
add
shrb
lea
adc
push
dec
fdivl
sti
movsb
ljmp
and
jle
pusha
cmp
push
aad
xchg
cs
pop
test
cmpsb
pop
sar
jecxz
lock
insl
and
jp
cmp
jge
jp
mov
test
lods
push
lahf
loopne
xchg
ljmp
mov
es
out
nop
jmp
pusha
stc
sbbb
jbe
push
mov
pop
iret
dec
cmp
sbb
mov
gs
negl
sub
inc
xor
cmp
iret
vorps
jbe
leave
dec
sub
mov
js
enter
in
pushf
inc
lock
ljmp
sub
lods
stc
inc
pop
inc
cmpsl
xor
bound
dec
scas
xor
out
loop
movsb
dec
cmp
loopne
xchg
jp
jae
leave
sub
or
jg
cmpsb
outsl
jmp
aas
out
in
xchg
in
testl
and
push
lods
cmpl
or
inc
dec
mov
mov
lock
or
mov
or
sub
lea
in
mov
dec
adc
leave
sub
mov
fdivs
mov
clc
jb
mov
add
mov
test
cmpsl
loopne
shll
or
lret
daa
jmp
dec
inc
pop
sbb
xchg
int
xchg
xchg
test
xor
mov
insl
jno
dec
popf
scas
jno
cmp
lods
mov
js
movsb
mov
mov
dec
inc
sbb
movsb
pop
jnp
loop
fwait
lea
add
jnp
nop
test
bound
mov
mov
push
sub
sbb
dec
lret
into
dec
adc
adc
loop
outsb
test
fisubrs
xchg
xchg
test
mov
lea
sub
dec
out
fwait
jge
cmp
adc
cli
adc
andl
jmp
repz
fldl
cwtl
inc
lea
cmp
push
push
cmp
sti
lret
jbe
pop
add
test
and
jbe
jmp
xchg
inc
push
adc
ret
inc
fnstenv
mov
xchg
stc
insb
adc
push
pusha
loope
std
mov
je
int3
rol
out
xor
out
xor
stos
or
test
loop
in
cltd
jp
xchg
mov
jge
loopne
ljmp
mov
mov
dec
cwtl
clc
in
subl
faddl
lods
outsl
pop
push
cmp
sahf
add
push
fstpl
loop
pop
out
loopne
popl
das
scas
pusha
roll
pop
inc
pusha
adc
cltd
inc
push
cli
es
push
mov
pop
cli
xor
loopne
mov
xor
sbb
out
push
push
cli
stc
scas
imul
xor
xchg
mov
jg
cmp
mov
jo
or
bound
jle
and
push
cli
out
lea
jo
adc
jns
mov
shlb
inc
jp
push
rcll
cli
stos
lods
push
std
repnz
sahf
lcall
lret
andb
push
in
add
cmpsb
lods
repnz
pushf
jae
bound
jle
stc
or
pop
add
test
xchg
xchg
movsl
and
dec
pop
mov
bound
pop
mov
ljmp
out
add
stc
jmp
mov
gs
std
sbb
sbb
sbb
sti
dec
out
jge
push
stos
jg
jmp
cmp
rorl
aad
jecxz
jle
mov
clc
mov
mov
xchg
cltd
add
out
push
push
sar
mov
mov
xor
adc
xor
mov
jmp
mov
cmp
pop
sub
js
data16
or
xchg
cli
mov
insl
xchg
daa
repz
sahf
aam
loope
icebp
pop
cltd
scas
imul
test
and
mov
sti
imul
dec
jns
movsb
hlt
icebp
jl
jbe
jp
sbb
outsw
dec
jo
push
push
jae
stos
dec
mov
adc
popa
add
call
mov
jbe
adc
lret
mov
cld
sbb
data16
or
lret
or
int
mov
cmp
push
gs
mov
and
push
int
xlat
enter
out
mov
sbb
cmpl
iret
xchg
mov
sbbl
and
jl
repz
test
add
mov
lock
sub
xchg
loopne
and
aam
or
dec
xchg
jmp
dec
scas
out
lea
jne
out
mov
sbb
gs
pop
adc
xchg
loopne
cmc
ds
cltd
fmuls
sub
loopne
mov
fwait
imull
push
decb
inc
fsts
rorl
xchg
dec
inc
jge
push
mov
jecxz
rcll
arpl
mov
in
into
jge
inc
mov
cmp
jb
test
outsl
adc
loope
loope
sbb
jns
outsl
cmpsl
jmp
lods
and
inc
pop
push
push
pop
push
outsb
arpl
call
push
pop
adc
inc
xchg
mov
mov
dec
das
stos
cmp
or
shll
sbb
mov
test
loopne
sbb
test
xchg
dec
jns
call
mov
cmc
es
in
roll
stc
dec
mov
jg
mov
fdivl
adc
adc
fdivs
leave
push
inc
sbb
inc
cmp
insl
sub
leave
inc
fistl
movsb
or
nop
ljmp
test
out
arpl
negl
clc
or
mov
out
pop
rclb
pop
scas
cwtl
jbe
imul
js
sbb
pop
xchg
lret
test
test
fsubrs
negl
rcr
adc
push
cli
mov
cmp
xchg
sub
in
fimuls
inc
cli
jns
fldln2
mov
pop
xlat
or
mov
leave
lret
sbbb
pop
and
or
dec
into
xchg
scas
insb
lea
or
mov
adc
add
mov
roll
push
jg
fstl
xchg
bnd
sub
sub
test
cmpb
inc
xor
push
insl
xchg
push
or
jl
sti
jne
loopne
inc
pop
leave
xchg
test
push
ja
fs
into
mov
lret
and
mov
mov
fs
test
xor
aaa
in
icebp
xchg
push
nop
sbb
imul
mov
add
jae
mov
cmp
push
fisttpll
rorb
sahf
icebp
pop
push
sub
pop
dec
sub
mov
cmp
rorb
jge
sbb
xor
shr
mov
lds
mulb
inc
pusha
hlt
mov
gs
insl
hlt
adc
sub
mov
pop
or
fucomp
cmpsl
fs
sub
std
xchg
in
push
orl
sub
arpl
dec
ja
jg
add
lret
inc
out
adc
sub
jl
jns
inc
sbb
and
loopne
jg
mov
fwait
xlat
aad
notb
cmp
add
and
sbb
cld
rorl
movsb
dec
xchg
stos
push
lahf
ljmp
loopne
test
or
lock
xchg
pop
out
mov
int3
stos
and
daa
jmp
gs
lret
xchg
daa
sti
lods
sbb
xchg
pop
dec
scas
mov
arpl
push
add
daa
cmpsb
xchg
pop
mov
sub
xchg
mov
imul
mov
adc
ror
cmpsl
push
imul
fsubrp
das
std
cmpsl
imull
dec
sbb
ds
mov
arpl
or
add
faddl
mov
adc
movaps
and
push
arpl
adc
and
mov
mov
xchg
jmp
cmp
push
inc
out
push
test
xchg
xor
xchg
mov
dec
sub
push
pop
jl
iret
ret
mov
test
nop
fistpl
loope
sub
fwait
shll
imul
add
cmpsb
shl
scas
ds
leave
or
pushf
loop
testl
pop
sbb
ja
mov
add
xchg
pushf
jns
leave
sbb
and
and
scas
stos
jl
mov
enter
lcall
jecxz
aas
or
mov
inc
push
dec
mov
sub
in
leave
pusha
mov
lcall
jnp
cld
imul
imul
lahf
loopne
cmp
or
imul
loop
jns
pop
adc
pusha
and
sbb
cld
xor
xor
pop
sub
jge
loope
mov
iret
mov
sbb
ret
xchg
mov
or
pop
or
jg
lret
push
xlat
inc
xor
dec
imul
pop
das
mov
lock
pop
jnp
and
and
mov
mov
pop
test
test
out
xchg
clc
xorl
out
fcomip
jbe
pop
sub
add
xchg
pop
in
mov
dec
xor
inc
lahf
or
jl
insl
out
pop
push
loopne
fs
ss
sub
pop
je
sbb
imul
jb
dec
fprem1
scas
and
mov
cltd
ss
push
outsb
aas
pop
adc
xchg
push
scas
das
sbb
es
xor
push
push
sbb
cltd
ljmp
xor
xchg
mov
mov
test
out
xor
jbe
cmp
mov
cld
fs
ret
fdivrs
pop
jnp
sub
repz
pop
xchg
sbb
and
push
hlt
filds
daa
jns
nop
cld
outsl
insb
out
push
pop
jo
inc
arpl
push
xchg
dec
out
cltd
popf
mov
mov
fimuls
jnp,pn
xchg
jp
jecxz
stos
das
stc
and
mov
ja
mov
arpl
stos
repnz
cmpsb
pop
fistps
decb
je
cli
lods
mov
inc
outsb
dec
dec
shlb
fisttpll
movsl
shll
jo
in
mov
mov
lods
jmp
aam
mov
insb
in
inc
hlt
mov
adc
sub
dec
pop
xor
pop
jmp
mov
movsl
repnz
sub
outsl
add
mov
and
aad
add
jae
lahf
js
loope
push
sbb
push
inc
stc
push
xchg
push
test
jae
sbb
popf
mov
push
dec
push
jae
mov
neg
pop
and
mov
sahf
repz
jb
add
outsl
add
scas
insb
mov
ret
lahf
fcomps
inc
mov
xchg
lods
test
arpl
mov
xor
inc
pusha
in
cmpsl
mov
arpl
mov
cmp
cmp
fcmovne
push
xchg
add
pop
mov
xchg
in
rolb
rorl
fbstp
enter
bound
inc
aad
pop
sbb
xchg
xchg
mov
xor
add
int
mov
push
mov
sbb
xchg
add
es
lods
mov
cltd
dec
xchg
insl
jecxz
xchg
and
mov
mov
je
mov
addr16
inc
lods
add
std
mov
pop
adc
push
rorl
sbb
sbb
xchg
aas
ret
popa
sti
pop
lods
lea
mov
mov
and
adc
rclb
mov
adc
jmp
out
loopne
inc
jno
hlt
fldcw
cmp
mov
mov
hlt
xor
aam
jo
sbb
mov
or
cmp
addr16
push
jecxz
xor
xor
imul
sub
sahf
daa
sbb
push
sub
ret
sub
add
ret
mov
xchg
orl
arpl
test
lods
jge
dec
inc
mov
outsw
ss
pop
in
sub
jne
ljmp
fisttpl
cmp
sbb
cltd
or
sub
add
inc
pushf
scas
lea
jno
sub
int
adc
movsb
jbe
push
sub
and
shll
icebp
scas
movsl
xor
repnz
mov
int3
push
adc
cmp
daa
repnz
fs
jbe
arpl
fs
jno
pop
push
push
pop
sbb
and
jmp
lock
js
jge
ficoml
xchg
out
sbb
and
popf
stc
icebp
sti
pop
pop
out
imul
aaa
fcomps
cld
add
mov
mov
dec
pop
mov
cwtl
ss
cmp
cmp
les
xor
test
dec
shlb
mov
les
sub
push
sbb
xor
out
mov
jne
inc
gs
movntq
jne
xor
js
sbb
ds
cmp
add
rcrb
or
cmp
pop
and
pop
mov
inc
movsb
repnz
inc
inc
push
xor
add
out
pop
jge
cs
rolb
rcrb
scas
sub
test
inc
lcall
xchg
dec
and
shlb
test
movsb
test
test
mov
dec
dec
sub
leave
push
mov
loope
pop
das
inc
jbe
cli
xor
xchg
adc
add
ss
nop
cli
nop
cmpsl
hlt
dec
sbb
xor
loop
stc
mov
cld
mov
imul
out
rolb
xchg
dec
and
cmp
repz
ljmp
mov
ss
inc
orl
add
les
mov
aam
xor
into
ja
adc
fnsave
sub
and
jbe
adc
js
jl
pop
mov
dec
add
dec
push
cbtw
hlt
cmpsl
mov
xor
push
shr
das
sti
aaa
sub
aas
dec
mov
das
in
in
sub
lods
das
xchg
xchg
adc
xor
xor
pop
in
fmull
jnp
xchg
aas
call
mov
movsb
inc
fs
add
sbb
les
inc
mov
sti
dec
ds
fisttps
ja
push
xor
enter
mov
ret
out
jge
pop
adcb
lods
pushf
or
test
xchg
xlat
cli
adc
pop
jnp
xchg
ret
aad
push
es
or
xor
pop
aas
in
sbb
and
jno
push
sub
fistpl
mov
in
and
orl
in
jge
popa
pusha
mov
ja
stc
cmp
je
ret
call
negb
xchg
cld
or
fcomps
sarl
pusha
push
in
lcall
push
or
fs
jb
fsubs
je
das
lret
cld
push
xchg
pop
or
aaa
ror
xor
jb
push
jne
xor
push
jl
iret
or
add
cltd
rcrb
mov
arpl
lret
loopne
jl
add
push
mov
jo
dec
outsl
clc
loope
pop
loopne
hlt
xor
xchg
imul
dec
es
sub
sahf
inc
cmp
push
pop
cmpsl
outsl
lods
jne
push
and
push
shl
push
imul
mov
js
imul
out
pop
into
dec
sahf
lods
adcb
ret
pop
adc
mov
or
fldl
add
and
xor
jne
mov
out
jl
add
dec
push
fisubrs
bsf
ret
push
pop
sbb
in
pusha
rcrl
mov
jge
gs
cmp
mov
sbb
popw
insb
insb
mov
mov
cltd
out
adc
addl
add
jmp
xorl
push
mov
inc
xor
movsl
lcall
jecxz
je
mov
cltd
cmp
ret
call
leave
xor
and
and
adc
movsl
adc
dec
and
pop
mov
push
inc
in
jo
xor
sbb
push
dec
mov
jecxz
cmpsl
pop
mov
imul
push
add
rolb
loope
cs
popa
push
loopne
dec
mov
xchg
jle
xlat
mov
ror
je
sbb
scas
cmp
bound
je
push
repz
jne
cmpsl
push
pusha
fisttpll
xchg
push
cli
fs
jbe
ds
cmpsb
push
jmp
inc
push
inc
pop
jne
rcrl
push
ljmp
cltd
ljmp
test
lret
cmpsl
cmp
and
cmpsl
mov
fwait
jnp
add
xor
lcall
cmpsb
nop
jl
inc
push
push
adc
scas
or
ret
hlt
sub
xor
or
je
ljmp
mov
jmp
fldt
cmc
psubw
in
stos
cmpsl
loopne
nop
inc
inc
or
add
xchg
jmp
scas
jae
pushf
add
rcr
push
lods
std
sbb
aas
mov
loopne
movsl
outsb
jg
outsb
add
scas
mov
dec
push
jae
call
daa
aas
mov
arpl
mov
sub
movsb
cmpl
std
cwtl
lret
pop
jg
test
xor
jno
pop
aaa
fdiv
cmpsl
adc
and
mov
pop
pusha
out
shll
stos
and
xchg
and
mov
pop
fsubr
arpl
popf
mov
int
fnstcw
in
dec
push
jae
outsb
out
mul
cmp
hlt
sbb
stos
out
sbb
movsl
push
adc
mul
hlt
mov
inc
and
iret
adc
ret
sahf
jbe
xchg
lret
out
push
adc
imul
inc
pop
jno
fisubl
shll
dec
push
outsl
adc
xchg
out
add
xchg
or
stos
inc
jns
clc
mov
mov
jne
shll
push
mov
jo
repz
repnz
add
pop
out
pushf
sub
xchg
add
sbb
mov
jbe
fdiv
sbb
and
push
gs
inc
or
shrl
xchg
sub
sahf
cmp
dec
in
mov
dec
test
pop
dec
jno
dec
mov
in
pop
shlb
js
repnz
pop
nop
cli
das
movsl
std
pop
jmp
in
popa
mov
ds
repz
repz
idivl
subl
push
push
jnp
push
arpl
lock
push
xchg
inc
hlt
iret
sub
mov
mov
in
mov
fisttpll
mov
adc
cld
pop
mov
out
hlt
test
daa
mov
jmp
ret
sub
or
xlat
jl
jae
test
add
xchg
dec
or
mov
nop
mov
outsl
scas
push
mov
fcmovu
popa
dec
mov
xor
xor
mov
mov
gs
fmul
inc
xchg
hlt
sub
cld
std
push
lock
fs
mov
movsb
or
scas
mov
mov
mov
and
cvtpi2ps
or
pop
dec
movsb
fsubrl
add
mov
cmp
out
mov
in
jnp
clc
ljmp
stos
xlat
test
daa
sub
fadd
fstl
or
pop
outsl
xor
xlat
pop
addr16
jno
sbb
and
arpl
sbb
push
jno
mov
pop
mov
cs
add
xlat
mov
xlat
jmp
ja
test
mov
lahf
mov
jo
mov
cmp
xlat
loopne
xor
mov
ret
mov
xchg
div
das
ja
mov
cltd
test
adc
lods
mov
dec
repz
out
std
int
imul
enter
push
sub
or
xchg
inc
push
adc
test
aas
int
jg
repnz
lea
push
add
mov
pop
pop
xlat
inc
lret
lods
push
call
sub
cmp
mov
sub
jb
xchg
js
stc
ret
test
sub
sub
jp
loope
shlb
enter
lahf
dec
and
or
mov
or
cltd
cld
dec
clc
es
jae
movl
pop
imul
jmp
fldt
mov
jno
out
mov
push
jecxz
jl
lcall
fimuls
cltd
loope
addl
insl
or
jnp
jno,pt
mov
aad
in
out
shlb
push
mov
pop
xchg
dec
jg
mov
adc
test
outsb
lea
mov
cmp
stos
or
movsl
cmp
jb
and
cmc
icebp
or
in
je
add
aaa
loop
jne
mov
or
hlt
push
movsl
push
pop
or
out
movsl
adc
aas
dec
aad
or
jno
lea
sub
cwtl
jb
xor
add
daa
sbb
add
jno
notl
xchg
inc
xor
xorb
inc
rorl
cmc
add
xor
jmp
sub
cld
sub
repz
cwtl
cmp
mov
insb
cmpsl
repnz
and
daa
jno
cmc
pop
push
push
out
pop
pop
or
pop
or
mov
insb
fldl
jge
repz
push
fists
sti
cmp
cmp
mov
pop
outsb
out
sbb
mov
push
jecxz
xor
xor
mov
fisttpl
clc
shrl
push
in
sbb
rep
xorb
jl
mov
push
inc
push
dec
addb
ds
shlb
mov
pop
sbbb
xor
mov
es
addr16
dec
mov
stos
mov
jb
icebp
out
cli
sbb
iret
jg
jo
and
cmp
lods
push
outsb
cltd
or
ja
hlt
dec
fcomp
test
lods
pop
xlat
jbe
fstps
inc
push
bound
in
pop
cmp
sbb
inc
lods
pop
cmp
jno
cmp
outsl
push
add
ljmp
sarb
or
mov
xor
inc
lock
in
jge
mov
ret
inc
add
jecxz
idivl
push
mov
xor
jmp
aaa
jnp
xlat
jbe
mov
testb
push
pop
xor
mov
in
adc
stc
jp
call
xor
push
ror
outsb
add
repz
adc
mov
shll
je
out
mov
push
pop
loopne
sbb
fsub
or
xor
hlt
daa
add
dec
int
cmp
in
scas
mov
push
push
xchg
xlat
and
jg
push
sbb
fistpl
mov
push
and
fsubrl
mov
mov
or
loopne
or
lds
shrl
nop
dec
popf
aaa
mov
xchg
stos
push
add
out
push
mov
mov
pop
in
cltd
add
js
pop
pushf
xor
jno
in
lock
gs
mov
les
dec
cwtl
cmp
je
mov
sbb
push
leave
dec
fsubr
ds
cmpsb
into
mov
jns
dec
sbb
repz
cmp
lret
stc
cmpsl
push
dec
fstpl
mov
je
jno
sahf
lcall
scas
cli
loope
and
std
daa
sub
and
aad
ljmp
aaa
push
pushf
js
jae
jbe
and
cld
call
add
ljmp
test
int
loopne
push
fwait
mov
mov
in
popf
das
mov
adc
sbb
push
adc
scas
test
push
sti
push
leave
mov
adc
inc
or
xchg
adcl
fwait
inc
mov
ds
cwtl
xor
loopne
mov
int3
adc
lods
movsl
and
insl
jbe
getsec
xchg
jl
mov
ljmp
mov
into
xchg
stc
stos
sub
in
stc
in
push
pop
repz
pop
xchg
pop
mov
cltd
or
jb
xchg
and
std
sbb
xor
cmp
cmp
std
add
jle
test
imul
mov
in
femms
push
addr16
dec
adc
loopne
add
cmp
mov
lcall
or
xchg
ficoms
cmp
sbb
ljmp
mov
mov
test
int
ljmp
shrb
scas
in
dec
rcr
fsubrp
jl
fwait
inc
xchg
into
enter
int
test
imul
cld
lods
add
add
pusha
pop
push
xchg
repz
cmp
into
mov
and
sahf
mov
lahf
jge
js
jl
cli
sub
fistps
inc
inc
cld
xchg
fistpl
out
gs
pop
push
fwait
and
push
or
pop
icebp
xor
out
xchg
es
in
add
adc
add
and
dec
ret
out
mov
adc
ja
pop
jmp
sbb
sub
mov
mov
mov
and
mov
adc
mov
inc
dec
xchg
das
and
inc
aam
or
lcall
jle
mov
pop
jmp
xchg
dec
dec
xchg
mov
pusha
push
jne
jle
mov
xor
movsl
clc
and
or
icebp
es
out
stc
out
mov
pop
mov
in
push
or
lock
xchg
lds
mov
xlat
cmp
gs
push
jno
inc
outsb
lock
ror
outsl
mov
mov
mov
dec
test
dec
loop
jne
sbbb
mov
jo
sub
out
testb
mov
pusha
push
mulb
mov
decl
mov
dec
insb
jmp
mov
fdivs
mov
movsb
gs
mov
pop
jno
test
aaa
stos
inc
lahf
repz
xchg
fmuls
cmp
inc
mov
push
leave
mov
inc
shlb
pop
ljmp
jge
ljmp
lea
cld
dec
testl
in
insl
xor
lcall
sahf
or
inc
cltd
cmpb
fistpll
adc
jecxz
jmp
pop
sbb
outsl
inc
rorb
cmpsb
mov
adc
jnp
sub
jo
loope
add
add
ror
decl
add
sbb
inc
and
push
xchg
shr
aam
cmp
xor
jno
xchg
adc
push
ljmp
mov
int3
call
inc
push
mov
mov
test
ss
int3
loope
adc
sub
lret
dec
enter
mov
fisubl
push
add
mov
or
mov
dec
gs
cmp
decb
sub
fwait
adc
mov
mov
pop
outsb
mov
sub
es
sbb
add
sub
or
pop
mov
cmc
mov
repz
ss
add
dec
pop
test
sub
push
icebp
push
dec
dec
sub
nop
scas
les
pop
inc
xor
popf
xlat
int3
stos
int
cwtl
xchg
xchg
shr
and
insl
cmp
ljmp
dec
mov
inc
stos
movswl
xor
add
loope
loopne
hlt
cmpsb
sbb
loopne
cmp
xchg
sbb
mov
clc
mov
leave
sub
push
xor
mov
ret
fs
rcl
cwtl
loopne
shrl
in
loope
in
jle
cmp
or
xor
xor
pop
push
mov
mov
inc
adc
add
sahf
xchg
push
inc
mov
xchg
scas
sub
repnz
sarb
cmp
lds
lret
adcl
fmul
jo
ljmp
xor
fmull
popa
out
outsl
sub
dec
push
test
inc
mov
les
jnp
icebp
inc
aam
xchg
add
jp
add
xor
fwait
jne
xchg
int
sbb
mov
stos
add
cmpsb
movsb
dec
clc
cli
xor
enter
cmp
mov
mov
fwait
dec
rorl
push
lods
push
dec
aam
jo
in
and
cmp
lcall
sub
movsl
xchg
lea
lret
jmp
add
insl
repz
pop
and
aam
imul
push
outsb
mov
jae
in
and
fdivrl
mov
mov
sbb
adc
jae
cmp
test
js
or
lods
out
fcos
gs
or
inc
pop
xchg
rcl
add
mov
fucom
and
prefetcht0
mov
jae
xor
push
dec
jo
in
dec
es
lods
je
jo
sahf
fcoms
hlt
or
jbe
mov
xor
test
cli
dec
fs
mov
or
push
clc
jnp
fs
mov
leave
mov
pop
aad
lock
std
jle
es
cmp
test
daa
imul
push
loopne
adc
xchg
dec
popf
popf
sub
sahf
fucomi
pop
fs
or
xchg
push
inc
push
iret
jo
mov
ret
les
je
vminpd
and
inc
and
popa
mov
and
xor
inc
rorb
rorl
mov
xchg
js
ja
add
dec
outsb
inc
repz
lods
lods
jb
rcr
push
xchg
pop
pop
je
xchg
das
outsl
lods
leave
fnstenv
or
push
inc
xchg
popf
push
adc
sbb
xor
adc
shl
les
dec
inc
pop
stos
cwtl
call
outsl
push
nop
fs
inc
aas
gs
xchg
inc
cmp
mov
out
adcl
inc
sub
push
mov
mov
lret
iret
enter
pop
or
adcl
push
adc
sbb
cmp
and
sub
popa
dec
mov
les
dec
pop
stos
ljmp
add
test
add
adc
lret
sbb
cmpsb
or
jge
xchg
mov
dec
jg
pop
lret
lret
daa
cmpsl
movsl
mov
push
decb
lods
or
push
xchg
es
sub
mov
jne
mov
add
mov
mov
in
mov
std
test
pusha
push
mov
test
in
xlat
test
jo
sti
imul
push
sahf
ret
mulb
loopne
cmpsl
xlat
ds
fdecstp
jns
xchg
shrb
mov
test
jne
or
mov
dec
cmp
repnz
loopw
fldenv
stc
test
loopne
cmp
sub
pop
xchg
inc
je
mov
jmp
insb
fsubrl
mov
out
popa
xchg
jno
xor
mov
mov
lret
aaa
in
pop
fwait
xchg
sub
cmp
negb
cld
add
insb
xor
xor
pop
xchg
add
add
cmp
int
jne
or
push
mov
lock
lcall
fisubs
jmp
xchg
pop
cmp
sub
movb
sar
lods
loope
add
sub
mov
cli
vpsubusw
and
pop
out
mov
sbb
and
sub
push
icebp
in
pop
dec
icebp
lods
ror
jbe
inc
shll
stos
or
mov
loop
pop
push
lahf
int
lods
fnstenv
cltd
lret
clc
dec
into
sbb
dec
lahf
and
fst
dec
jnp
rcll
push
add
add
mov
aas
dec
lods
pop
sbb
dec
in
mov
loope,pt
movsb
pushf
cmpsl
sub
dec
dec
stos
inc
pop
xor
jno
mov
or
or
push
sbb
loopne
decb
outsb
mov
xchg
insb
push
jb
lret
adc
fcmovne
jecxz,pt
fisttpll
fnstenv
lret
inc
bound
xchg
mov
movsb
mov
in
cmp
cmpsb
sbb
mov
arpl
loope
dec
or
jnp
aaa
fisttpl
das
add
adc
add
mov
mov
aaa
sub
dec
mov
inc
ja
mov
outsl
mov
xchg
sbb
pop
jecxz
pusha
pop
sub
cwtl
push
imul
cmp
mov
inc
push
jbe
pop
outsb
movsb
add
pop
sbb
jmp
ja
dec
jle
pop
fdivs
out
jp
mov
out
ljmp
lds
dec
fmuls
loopne
jne
test
lods
xadd
movsb
jbe
mov
add
je
xchg
stos
push
sub
adc
leave
jbe
cmpsb
sub
mov
sti
ret
mov
out
or
jnp
sti
xor
cmp
pop
fdivr
mov
bound
clc
sbb
sbb
sub
into
dec
lods
or
dec
pop
xchg
jns
leave
lds
scas
mov
xchg
xor
iret
jo
mov
cwtl
xor
xor
pop
jo
in
and
mov
or
add
add
or
test
sub
dec
ret
negb
cmpsl
int
aad
imul
or
pop
enter
test
in
push
mov
cmp
push
in
pop
test
stos
sbb
sub
xchg
xchg
cltd
test
push
out
fadds
mov
icebp
cli
outsb
mov
lds
cmpsl
aas
sub
xchg
ja
cmc
lds
cmc
cmp
jns
dec
xchg
jbe
inc
mov
cli
xor
and
in
pusha
jae
mov
into
arpl
mov
mov
pop
xchg
lods
pusha
dec
sub
out
push
mov
mov
and
cmp
or
icebp
loope
pop
xchg
jae
sub
add
mov
insb
pop
pusha
or
push
mov
fidivs
cwtl
clc
cmp
xchg
xchg
push
inc
mov
xchg
test
mov
pop
lods
xor
fsincos
roll
mov
test
lock
xor
push
mov
and
jg
rcrl
rcll
leave
sub
pop
mov
loopne
jge
xor
outsl
repz
test
scas
pop
mov
mov
fwait
in
sub
pop
clc
dec
fildl
js
xchg
andl
sbb
mov
movsl
hlt
insb
pop
stc
shll
mov
or
stos
inc
dec
nop
inc
lods
pop
push
aam
mov
mov
out
lea
sub
loop
mov
clc
mov
push
dec
pop
popa
add
xor
xor
push
pop
shlb
adc
clc
rcrl
ret
pop
lea
in
xchg
clc
cmp
aaa
stc
rcr
and
movsl
fdivrs
ljmp
mov
in
ret
jnp
pop
and
push
pop
and
cmc
pop
in
scas
sar
pop
xchg
int3
mov
add
sar
cld
cmp
popl
sub
mov
mov
shll
popf
ret
jecxz
and
shrd
adc
sub
sbb
popa
aam
mov
adc
pop
push
setno
push
xchg
jle
outsb
adc
dec
ds
ds
popa
dec
lods
jb
push
add
push
cli
or
fnsave
cmp
mov
stos
inc
insl
add
loop
mov
mov
adc
push
or
xchg
sbb
cmc
inc
xor
dec
pop
dec
or
dec
pop
repz
dec
cmc
out
inc
lods
sbb
adc
jle
sub
mov
stos
adc
dec
movsb
dec
fidivs
pop
inc
sbb
push
int
arpl
ljmp
jno
xorb
je
test
out
push
cmpsb
xor
push
repnz
sub
jo
xchg
mov
and
inc
cmp
bound
jno
push
mov
sbb
inc
jecxz
cld
je
jb
jmp
mov
fcomip
mov
mov
sub
jne
push
inc
sbb
and
sbb
adc
sub
pop
ficomps
mov
lret
mov
flds
out
ret
dec
test
xor
jp
aam
fwait
cvttps2pi
ss
sub
lods
and
gs
adc
fs
adc
push
add
ret
jns
imul
xor
repz
lods
cs
mov
insl
scas
jae
fcoml
fyl2x
or
mov
cmp
insl
dec
in
cli
sub
ret
and
xor
dec
jo
inc
add
lods
push
mov
inc
aas
push
stos
cmp
and
jg
jbe
and
sbb
pusha
ds
dec
xor
push
cmpsb
outsl
lods
sub
pop
mov
dec
pop
add
gs
xor
fsubr
mov
imul
insl
jnp
mov
scas
arpl
popf
push
push
jmp
jl
xchg
push
mov
ret
mov
negl
fldt
prefetch
xchg
movsb
add
inc
aaa
push
mov
xor
mov
or
ljmp
jne
mov
cltd
shrl
or
xchg
inc
adc
lds
into
std
call
pop
je
leave
xchg
loope
and
lock
sub
push
int3
cltd
push
mov
test
push
rcrb
ret
inc
cs
fld
pop
fistps
xchg
cmpsb
enter
mov
or
bound
loope
lock
lahf
lods
aaa
jecxz
dec
in
ret
dec
add
and
pop
test
sbb
mov
mov
mov
adc
dec
cmp
xchg
je
jo
mov
xor
fsts
aaa
test
dec
popl
sbb
hlt
inc
repz
adc
sub
aaa
ret
ret
je
jmp
dec
das
mov
and
mov
and
add
in
mov
add
repnz
inc
mov
call
adc
sarb
sub
orb
inc
cmpsl
push
loop
add
jmp
mov
push
push
pop
cmpsl
cmp
inc
call
mov
ljmp
in
into
xchg
ljmp
jmp
cmp
ljmp
cmp
icebp
iret
std
jae
cmpsb
in
inc
stos
fnstenv
jns
and
mov
mov
stos
mov
adc
cmp
pop
int
xchg
or
ffreep
mov
es
in
clc
and
outsl
icebp
or
mov
outsl
lcall
add
dec
popf
aad
out
in
in
pop
loope
push
or
rcrb
adc
insb
jle
or
mov
cmpsb
dec
xchg
xchg
out
cli
leave
or
mov
xchg
popl
insl
or
xor
xchg
push
popa
and
fildl
or
mov
scas
aaa
sub
and
mov
mov
daa
push
iret
sbb
jmp
pop
sub
sub
aaa
das
and
enter
aaa
push
or
cmc
ret
sbb
cmp
jbe
rclb
inc
cmpl
dec
xorl
or
imulb
int
pop
and
push
mov
adc
rclb
int
incb
push
outsb
scas
insl
pop
push
mov
inc
and
popf
lret
fs
adc
cmp
mov
or
jb
and
daa
fdivrl
push
test
and
xchg
cmp
mov
adc
add
notl
dec
sub
jmp
sbb
shlb
lret
xchg
xchg
es
mov
sub
es
inc
scas
pop
repnz
out
push
outsl
insb
mov
out
mov
cmp
inc
mov
and
jo
pop
les
xchg
imul
lock
lea
stc
and
mov
in
bswap
sahf
and
or
sub
mov
mov
add
xchg
cmp
jecxz
test
cwtl
jle
in
rcrl
xchg
jle
gs
jecxz
mov
imul
sbb
dec
push
lods
out
sbb
lcall
add
dec
loope
int3
loop
cwtl
fdivrs
add
xor
and
loopne
mov
aaa
mov
xchg
mov
cmc
cli
ljmp
das
or
repnz
mov
add
sbb
stos
sbb
xchg
dec
sbb
or
popa
in
jmp
in
dec
shlb
mov
jecxz
and
mov
dec
pop
adc
sub
xor
test
das
es
jg
jmp
dec
mov
cmp
rorb
sub
xor
leave
mov
push
imul
or
fs
sub
les
dec
inc
mov
iret
ljmp
out
aam
push
out
popf
dec
mov
or
inc
mov
dec
and
popf
push
xchg
xchg
xor
movsb
cs
dec
xor
adc
and
adc
scas
rcll
cmp
pop
sub
mov
push
xor
popf
mov
into
add
inc
cmpsl
je
add
gs
nop
std
stos
mov
push
negl
cmpsb
xor
inc
xchg
mov
sub
int
cmc
jl
dec
int
and
jl
clc
lcall
dec
aam
xlat
outsb
mov
out
inc
cmp
adc
cltd
xchg
jo
and
pushf
les
cld
xor
mov
fisttpl
adc
xchg
mov
and
addr16
arpl
popf
xchg
jle
cmp
sbb
mov
bound
mov
cmp
lahf
pop
shll
push
stos
xchg
cmp
sahf
popaw
bound
pop
negb
dec
xor
sub
pop
out
mov
inc
dec
clc
pop
inc
fnstsw
cmp
test
push
mov
imul
loopne
mov
push
movsl
retw
sahf
aaa
in
stos
add
adc
sti
out
xlat
mov
gs
mov
xchg
mov
sbb
fwait
cmpsl
and
inc
adc
pop
loop
xchg
repz
jg
add
dec
aad
mov
and
iret
out
lds
xor
test
imul
mov
sub
fstpl
in
sub
jmp
mov
add
push
lea
xor
sbb
mov
jge
ret
jne
iret
adc
cmpsl
or
push
jl
mov
stos
mov
adc
std
mov
inc
xorb
mov
fcomip
test
pop
push
pop
xchg
shl
jmp
mov
or
nop
popf
daa
xchg
mov
inc
int3
repnz
add
sub
cmp
filds
mov
movsb
fadds
sarb
inc
xchg
xor
push
ss
daa
loope
jge
es
aam
dec
stos
add
in
stos
ja
daa
insb
cwtl
add
dec
pop
add
lock
shr
sub
fwait
xor
sub
xchg
insb
jno
gs
cld
test
xor
fistpl
push
or
pusha
arpl
and
out
dec
fsubs
int
gs
mov
test
aas
or
adc
jae
pop
sbb
jg
pop
ds
cwtl
lds
mov
mov
mov
adc
nop
pop
xor
xchg
dec
mov
lock
lret
rcl
insb
mov
xchg
orl
push
pop
mov
in
pop
add
jge
fcompl
mov
xchg
inc
rcll
mov
or
ficoms
pop
pop
pextrw
popf
mov
xchg
std
into
jl
ret
add
jbe
lcall
and
decl
test
mov
int
or
cmp
xchg
dec
sar
inc
and
jne
mov
add
sbb
ss
mov
lcall
add
pusha
sub
jg
sub
cmp
aas
or
dec
sti
fs
push
sbb
sub
in
outsb
aaa
or
sub
cmp
pop
nop
shll
int
mov
mov
inc
add
andb
sub
rolb
jg
sbb
shlb
aaa
stos
mov
call
mov
or
mov
xchg
cmpsl
rorl
add
outsb
xchg
mov
in
push
jp
push
cmc
lea
xchg
or
sbb
leave
mov
les
shl
loope
sbb
pop
enter
jae
xor
fstps
ds
pop
pop
or
mulb
outsl
mov
jb
fdivl
ja
fstl
push
insl
cmp
mov
dec
adc
loope
or
test
lock
xor
scas
test
cmp
mov
xlat
int
aad
sbb
lods
mov
jno
push
fsubrp
cld
cmpsb
fwait
cwtl
loope
sahf
gs
jo
data16
jae
aas
test
add
movsl
fdivr
mov
xchg
lret
sar
dec
mov
lcall
inc
xchg
aad
mov
push
cmp
rorl
xor
in
cltd
mov
mov
out
mov
lcall
inc
or
fistpl
repnz
in
adc
inc
pop
push
sbb
dec
cmp
mov
es
push
push
sarb
insl
mov
xor
aaa
mov
fdivrp
cmp
icebp
dec
or
mov
popa
xchg
test
icebp
dec
cli
push
xchg
jle
popa
dec
inc
fdivp
or
es
rolb
push
mov
jge
add
xchg
sbb
jmp
scas
stos
sahf
lret
insb
jbe
fs
mov
test
cmpsb
shrb
cld
pop
lock
xor
pop
mov
popf
push
cltd
sti
pop
sub
add
and
inc
mov
stos
adc
push
mov
jnp
jnp
int
mov
orl
inc
dec
ds
pop
jnp
or
fisubrs
and
mov
add
ja
inc
lods
push
sbbb
lods
rcll
jbe
fdivrs
jge
test
orl
jge
dec
pop
inc
xlat
scas
cmp
aas
fwait
jl
push
pushf
mov
adc
in
addr16
in
int3
mov
imul
cwtl
minps
sbb
out
dec
cmp
fidivrl
in
cwtl
in
dec
in
pop
popf
mov
inc
xchg
repnz
aas
adc
icebp
pop
mov
push
jecxz
in
sub
stc
pusha
dec
or
xchg
icebp
scas
mov
mov
out
cmp
add
out
in
jnp
pop
stos
ficompl
mov
ds
shlb
stc
orl
xlat
in
popf
inc
cld
mov
inc
bound
mov
stos
fs
fadds
pop
bound
xor
xor
test
sub
xor
lahf
push
rolb
fdiv
mov
mov
push
das
dec
mov
xchg
out
xchg
out
shlb
arpl
inc
push
dec
pop
and
add
cwtl
inc
cmp
je
sti
pop
adc
aaa
pop
mov
fs
ficoml
shr
add
and
xor
test
cmp
imul
addr16
jge
addl
push
inc
cmp
xchg
in
insb
jns
xor
out
loopne
push
and
outsb
adc
add
xchg
cmc
xor
pop
out
xor
ret
popf
xchg
test
int3
add
shrl
hlt
mov
pop
ror
add
adc
jmp
test
jl
mov
push
sahf
movsb
adc
dec
jl
mov
pause
jo
in
cmp
lahf
out
cli
mov
mov
sbb
in
sub
push
fstps
hlt
test
cmp
stos
mov
push
lods
mov
adc
dec
xchg
push
in
mov
ds
jle
das
imulb
adc
les
inc
pusha
push
pop
push
daa
sbb
dec
out
add
iret
xor
pop
xchg
sbb
insl
mov
stos
insb
xchg
call
jne
push
aas
add
mov
dec
mov
or
mov
sbb
shlb
cmc
mov
adc
leave
mov
add
call
stc
push
sbb
xchg
mov
fs
sbb
adc
adc
push
je
pop
xchg
xchg
aas
jmp
inc
pop
inc
mov
fldenv
roll
fnstcw
inc
outsb
fiadds
mov
fcomi
pop
push
push
pop
jp
sub
sub
outsl
ja
outsb
jmp
pop
popf
divb
push
mov
push
push
push
test
adc
nop
fsubp
inc
stc
dec
cmp
sbbb
dec
push
mov
clc
and
daa
mov
fadds
je
adc
fsubrl
mov
sub
adc
out
push
sub
scas
mov
add
cmp
lret
adc
push
dec
movb
xor
icebp
loope
movsl
jb
sub
dec
das
jne
pop
mov
rcl
lret
mov
push
jns
or
cmp
mov
or
outsb
loopne
cmp
xor
mov
cmp
adc
xchg
cltd
ret
pop
xor
test
sub
rcrb
push
in
push
sbb
or
rorb
adc
adc
arpl
or
aad
add
or
pop
xchg
sbb
pusha
dec
inc
movsb
dec
sbb
add
dec
dec
in
inc
add
inc
stc
stc
jns
clc
cmp
je
and
lock
jns
jns
aad
add
sub
in
mov
out
popa
lods
sub
mov
out
test
add
sbb
mov
sbb
inc
out
mov
cmp
lea
jns
mov
aas
neg
add
sub
fildl
jnp
das
enter
xchg
sub
adc
sbb
pop
in
add
scas
repnz
movsl
fimull
pop
popf
fwait
es
cmp
pop
xchg
mov
lret
jg
add
movsb
imul
leave
cmpsb
mov
aam
orb
fs
fsubs
mov
or
push
adc
pop
fcmovnbe
jecxz
icebp
jae
or
gs
jns
cltd
pop
cmc
lret
stc
pop
nop
xchg
adc
repz
mov
push
sarb
ja
cld
cmpsb
clc
fs
jnp
sub
xor
pmaxub
popa
rcr
roll
jmp
sub
loope
push
and
adc
xchg
imul
pop
shlb
fnsave
push
pop
dec
mov
sahf
in
fs
push
roll
mov
aaa
sub
cld
lret
das
loop
jnp
add
lret
cmp
or
push
mov
imul
cmp
movsb
test
fcmovnbe
mov
stos
fs
cs
hlt
repnz
pop
adc
loope
daa
dec
inc
sub
add
lock
mov
inc
sti
rcl
xorb
mov
call
into
pop
lret
push
jnp
not
mov
xor
out
adc
aas
ret
gs
sub
mov
sub
addr16
lock
idivl
shl
push
jns
pusha
add
nop
inc
and
lods
subl
or
test
dec
insl
in
jmp
sbb
xor
lcall
mov
jp
addr16
dec
mov
mov
loopne
loopne
in
lahf
cmp
fldcw
repz
into
xchg
insb
sbb
ret
es
push
jp
mov
xchg
pop
inc
in
fdivs
ds
and
and
xchg
rorb
addr16
xor
and
aad
pop
sub
mov
inc
jecxz
push
iret
mov
lock
shll
ds
sbb
sub
sbb
in
or
xor
movsb
dec
mov
repz
call
mov
jo
jno
fs
ja
or
pop
mov
cmp
pop
loop
idivb
test
js
cmpsb
cmp
mov
sub
mov
je
or
sbb
jae
sbb
jo
sbb
in
mov
or
fdivrl
adc
cmp
xor
push
ljmp
jge
in
inc
fnstenv
jbe
fxch
into
mov
fstpt
dec
fwait
hlt
imul
push
and
into
call
add
pmulhw
aas
stos
add
movsl
popa
fnstsw
in
sahf
or
aas
call
jno
mul
stc
inc
adc
or
out
mov
idivl
imul
and
inc
adc
and
mov
xor
rcll
add
imul
mov
xchg
bound
fs
jg
pop
inc
movsl
xchg
imul
mov
loope
je
movsl
mov
orl
add
push
out
mov
xor
push
xchg
int
lods
data16
outsl
xchg
in
mov
mov
mov
adc
imulb
xchg
hlt
or
mov
mov
mov
repz
mov
idivb
hlt
mov
enter
aad
into
inc
inc
leave
xlat
push
jp
lds
pop
jae
dec
imul
pushf
outsb
lret
dec
mov
push
lcall
jb,pn
jno
add
adc
rcrb
aam
stos
cmpsb
addr16
pop
inc
cld
mov
sbb
dec
movsb
sub
test
sub
fwait
sbb
shlb
into
frstor
int
sbb
cs
or
addr16
xlat
and
fwait
jmp
sahf
stc
aas
clc
test
mov
rolb
ret
mov
out
and
lds
loope
inc
lret
scas
cld
pop
push
fnstenv
ds
jae
testl
jge
leave
mov
addl
add
push
dec
xchg
mov
ret
into
dec
sub
and
sbb
xor
pop
scas
push
imul
and
leave
jne
mov
push
enter
push
rcr
in
and
mov
lea
pop
ja
cmp
inc
mov
ljmp
std
jecxz
das
mov
faddl
loop
pusha
repnz
sbb
cli
jmp
clc
xchg
pop
jp
mov
sub
xchg
hlt
jmp
adc
movl
dec
sahf
out
aam
shrb
mov
imul
mov
aaa
jecxz
in
push
jae
pop
sub
or
pcmpeqb
push
cmp
insb
int3
inc
rcl
test
test
ljmp
inc
loop
cmp
push
jl
push
fbld
adc
addr16
scas
mov
jecxz
mov
or
pop
testb
jle
inc
push
ret
mov
aad
lahf
cmpsl
test
scas
adc
sub
and
cmp
out
mov
data16
sub
sti
pop
jbe
and
ss
jae
sbb
lret
rorl
inc
push
sub
xor
dec
xchg
sbb
or
push
clc
push
fbstp
jo
fs
inc
sahf
stc
movsl
push
ret
and
mov
mov
nop
jg
inc
sub
xor
in
xor
jmp
sub
or
xor
sbb
adc
xor
push
ror
fucomp
ds
mov
adc
int3
cmp
testb
and
popf
sbb
inc
stc
test
and
loopne
add
dec
jne
shlb
and
xor
scas
push
in
lret
add
inc
iret
sbb
test
test
enter
cltd
movsb
leave
mov
sarl
mov
push
hlt
push
sarb
insl
popa
pusha
enter
cmp
mov
pop
js
into
mov
nop
jp
movsl
jecxz
mov
sub
xchg
jae
ss
stc
lret
das
icebp
mov
int3
mov
mov
scas
fucomip
jno
lcall
mov
mov
fstpl
and
test
stos
stc
lret
and
cltd
rorl
sbb
loope
clc
lahf
adc
mov
insb
pop
and
pop
mov
cmp
aam
outsb
jo
mov
xor
mov
lea
adc
sbb
imul
pop
out
xchg
xchg
mov
js
cmc
sbb
sbb
jbe
popa
test
jbe
in
into
mov
ljmp
cmpl
xchg
inc
mov
rorl
adc
out
and
pushf
mov
lret
popf
push
cmp
movsb
pop
popa
lds
ret
push
add
jne
in
in
sub
inc
pop
jae
xchg
insb
xchg
ljmp
xlat
movsl
dec
shrb
lcall
xchg
out
dec
insb
mov
test
jb
push
lods
hlt
lods
xchg
int3
inc
pop
pushf
pop
or
sbb
mov
xchg
sbb
mov
loopne
int
push
xlat
mov
mov
xchg
mov
adc
iret
rcrl
or
popa
cmc
sbbl
mov
pop
fcomi
rcr
xchg
icebp
xor
cmp
stc
jnp
pop
push
stc
dec
xor
inc
test
sbb
mull
fs
cld
clc
movsb
jp
jno
cs
mov
xor
cmpl
decb
jno
mov
add
out
dec
lahf
adc
mov
ret
push
dec
arpl
adc
push
lcall
leave
sbbl
fs
xchg
lods
rorb
or
arpl
inc
imul
xchg
pop
jle
add
shl
outsb
cmc
imul
mov
or
mov
add
dec
into
mov
insb
jnp
mov
mov
pop
jae
or
and
mulb
stc
lds
int3
inc
movsl
and
movsb
bound
int
cmp
fbstp
rol
shll
push
decb
jg
aam
fs
jecxz,pn
fdiv
push
pop
mov
sbb
jge
push
add
mov
scas
in
xchg
xchg
lahf
and
fwait
inc
sti
fadds
cld
leave
add
insb
cmpsb
sub
cmc
sub
call
leave
adc
dec
popa
push
jne
push
fnstsw
mov
in
inc
lret
sbb
aas
inc
push
inc
and
aas
or
lds
xor
xchg
xchg
xor
les
jns
fwait
inc
test
js
adc
jle
in
mov
aad
sub
faddp
in
xchg
arpl
mov
dec
loop
xchg
outsb
adc
leave
mov
data16
cltd
jge
push
mov
repnz
insl
push
add
loopne
fisttpl
stos
arpl
dec
dec
inc
cmp
and
lock
les
sti
xor
std
cmc
pop
push
lret
push
cmp
mov
and
adc
das
xor
cli
mov
adc
cmp
sbb
xchg
jp
add
in
daa
in
mov
inc
and
fldt
pushf
inc
test
bnd
pop
xor
out
adc
lods
addl
aas
and
jge
mov
and
out
sub
adc
or
lods
pop
mov
add
push
pop
mov
mov
sub
pushf
mov
adc
cmp
mov
cmp
cmp
outsb
fcomps
jns
test
push
mov
movsb
andb
arpl
push
out
adc
jae
ret
in
leave
cwtl
and
fs
ljmp
mov
mov
icebp
xchg
cltd
incb
pop
pop
pop
push
xor
loopne
aam
sub
das
dec
dec
jmp
dec
xor
ret
mov
push
pop
idiv
test
fmull
iret
data16
int
aaa
mov
xchg
pop
jl
jae
xor
jo
adc
jbe
popf
pop
ss
cmp
aam
add
and
sbb
sub
push
or
daa
lret
out
mov
mov
sarl
jg
inc
cwtl
repz
call
fwait
xlat
sbb
pop
or
inc
aad
sbb
or
mov
pop
stos
jecxz
add
imul
outsl
ds
add
pop
test
mov
notb
sub
adc
pop
dec
xchg
pop
xor
rorb
clc
push
sub
repnz
add
push
shlb
cmp
in
mov
pop
pop
in
push
xchg
mov
roll
popa
scas
xchg
mov
addr16
jbe
push
pop
es
out
inc
push
loop
shrb
pop
pop
sub
les
and
mov
adc
or
xor
cmpsb
ja
or
xor
adc
adc
imul
sub
imul
sti
or
mov
push
subl
ja
insl
inc
or
push
test
jnp
pushf
faddp
xlat
cmp
imul
data16
push
add
cmp
fwait
cmpsl
cmpsb
inc
shll
push
cmp
xchg
cmpsl
or
dec
and
gs
mov
xor
stc
xchg
lods
js
xor
dec
pop
push
mov
and
lds
inc
push
popa
mov
pop
push
rcl
add
jb
pop
xchg
dec
lret
outsl
mov
pop
pop
push
shl
mov
jl
jns
inc
push
inc
pop
xchg
lock
lds
sub
inc
ret
in
notb
xlat
push
pop
out
lea
mov
sbb
jle
prefetch
add
sub
cmp
lahf
sub
clc
js
dec
jl
je
sarl
das
cmp
fwait
mov
mov
xchg
nop
nop
fimuls
mov
cmc
inc
xor
and
cmp
xor
mov
mov
add
cmp
mov
cmpsb
add
push
mov
mov
jp
add
popa
aam
sahf
add
outsb
sub
cld
repz
push
hlt
lea
ja
fisubrl
adc
inc
bound
das
scas
xchg
add
hlt
gs
mov
inc
notl
mov
jle
lock
je
cmpsb
xor
cltd
jg
or
ljmp
stos
mov
mov
pop
pop
int3
or
add
pop
dec
fdivrl
enter
mov
xor
jecxz
and
pop
and
out
out
pushw
push
sub
mov
pop
or
and
out
and
mov
mov
in
mov
mov
ljmp
fsubrs
aaa
adc
add
stos
mov
insb
mov
jnp
out
arpl
pop
sbb
dec
fsubrp
jl
pop
mov
lock
scas
movsb
jae
enter
mov
rolb
stos
or
push
adc
inc
lods
mov
rcrl
fnstsw
inc
cmp
and
add
repnz
xor
test
lea
or
jp
stc
int
fsub
add
outsl
js
insl
push
ffree
adc
jl
addl
icebp
popa
and
pop
repnz
in
mov
dec
push
jl
ds
lahf
imul
cmp
jnp
mov
or
mov
cmpl
jb
push
push
lcall
pop
sbb
push
xchg
xor
movl
jg
jge
pop
xor
jno
rolb
or
push
xchg
loope
jae
cmp
ret
int
sub
scas
cli
pop
add
inc
or
mov
sbbb
int3
pop
jmp
inc
clc
aaa
adc
xchg
icebp
aas
adc
jbe
add
xchg
jge
fcmovbe
leave
cmp
cmc
xchg
cmp
movsb
fcompl
icebp
lds
push
sbb
sbb
icebp
adc
cmpsb
rcll
je
js
mov
pop
sub
push
hlt
and
dec
xor
xor
cmc
jno
cmp
clc
dec
cwtl
js
mov
cmpb
and
movsl
mov
mov
or
cltd
mov
or
scas
xchg
adc
pop
les
push
fs
push
push
mov
xlat
adc
pushf
and
and
push
mov
xchg
ret
cs
sub
jmp
lret
or
cmp
sub
dec
mov
outsl
mov
lcall
roll
scas
fs
xchg
cmp
cmc
in
mov
jmp
fdivl
sub
xlat
sub
and
xchg
jecxz
jae
outsl
or
std
mov
movsl
sub
int3
xchg
cwtl
enter
mov
mov
into
fwait
test
push
cmp
push
pop
push
push
cld
lret
jp
pop
xlat
xchg
outsl
stos
sbb
mov
jecxz
inc
pusha
sub
xchg
sbb
fwait
mov
xchg
jnp
daa
xlat
insl
pop
cs
add
out
setae
cmp
sti
inc
jns
mov
xchg
inc
divl
pop
ds
out
sbb
ja
sti
stc
movsl
lea
xchg
mov
fidivs
bound
add
sbb
and
and
test
call
inc
jle
shll
dec
add
cs
jle
ret
sbb
das
xor
lcall
jb
mov
arpl
mov
adc
fs
mov
dec
das
and
leave
mov
repz
dec
pop
fnstenv
dec
dec
dec
daa
shll
pop
or
movsl
int3
xchg
loope
into
jne
cmp
popf
iret
scas
jbe
pop
arpl
ficompl
movl
jecxz
and
int
cmp
mov
leave
pop
sbb
mov
cmpsl
mov
imul
adc
andl
lds
sbb
mov
mov
jg
fldln2
lods
bound
mov
fdiv
pop
jl
ret
outsl
loopne
std
xor
mov
mov
in
xchg
out
mov
inc
dec
pop
insl
mov
sbb
jb
xor
fprem
int
ljmp
dec
push
or
sarl
xor
push
mov
xor
mov
test
pop
imul
cmp
test
dec
xchg
push
sbb
and
repnz
push
xchg
adc
scas
test
aas
sub
jmp
and
mov
shl
clc
rcll
aad
cmp
lahf
dec
out
das
jnp
jns
inc
setnp
cmp
sahf
int3
sbb
pop
aam
add
lods
ret
jecxz
leave
push
sbb
pop
movsb
loop
ljmp
pusha
add
mov
adc
push
jmp
mov
or
xor
test
testl
push
pop
add
push
and
dec
clc
sbb
pop
jmp
dec
call
bnd
pop
movsl
cwtl
or
pop
loopne
movsl
mov
ret
js
sahf
or
and
push
and
out
in
pop
add
dec
xor
icebp
ds
cmp
and
insb
inc
cmp
xor
into
xchg
pop
out
test
insl
adc
push
inc
sbb
lea
sti
icebp
les
pop
das
and
jge
xor
xor
loopne
mov
arpl
lret
sbb
pop
jmp
pushf
inc
add
jle
dec
add
mov
out
mov
sbb
inc
sbb
sahf
pop
mov
test
xor
cmp
sbb
test
test
push
xchg
sbb
pop
hlt
sarl
or
mov
or
xor
mov
js
xchg
ret
sub
in
jb
shrb
jno
inc
sbb
out
dec
loopne
sbb
fcmove
cs
loopne
loop
das
mov
stc
bound
aaa
pop
bound
xchg
cmp
adcl
and
and
nop
push
mov
sbb
rcr
add
cs
icebp
cmp
push
mov
sbbl
sub
lds
fwait
ret
xlat
xchg
mov
push
xchg
inc
or
jne
call
add
sbb
aam
rolb
pushf
jl
pop
cmp
inc
adc
jae
mov
push
and
jp
push
jle
shl
cmp
xor
xchg
push
lock
adc
or
les
stc
sub
adc
outsb
aas
data16
in
popa
cmp
test
bnd
inc
out
fisubs
xlat
repnz
pop
xor
mov
in
insb
ret
jo
jecxz
sub
add
sub
pop
rclb
push
cltd
xor
insb
lea
lds
sub
ja
add
and
jecxz
pop
pop
add
inc
jecxz
dec
and
pop
daa
jl
ret
pop
scas
in
pop
stos
mov
adc
jge
fs
xor
pinsrw
sbb
dec
stc
repz
push
push
xor
daa
out
adc
cltd
cmp
test
hlt
or
jmp
les
xor
mov
cmp
pop
lcall
fwait
sbb
push
addr16
loopne
mov
add
sbb
in
aaa
cwtl
sub
icebp
shrb
imul
push
push
mov
fs
push
mov
xor
xor
movsl
aam
mov
add
cltd
icebp
mov
test
mov
xchg
or
out
test
pop
repz
sub
inc
aam
rolb
movsb
pop
mov
sarb
popa
sub
into
xchg
push
out
lock
loop
aaa
shll
xor
push
cltd
xorl
ret
mov
rolb
testl
cwtl
sub
cmp
push
imul
notb
mov
jle
dec
aaa
sbb
repz
sbb
repz
push
test
rep
xchg
out
push
subl
or
jb
push
dec
popf
test
or
jbe
fistpl
rcrl
jns
sub
imul
jecxz
xchg
ficoml
mov
cs
jp
push
add
pop
push
mov
cmp
or
dec
stos
sub
push
push
inc
jno
adc
test
insl
movsl
lret
push
xchg
jge
dec
gs
scas
insl
int3
cltd
push
movsb
xchg
pop
cmpsl
andl
aam
mov
ja
aas
jbe
add
jmp
mov
mov
pushl
outsb
xchg
js
lock
dec
fimuls
bound
stc
lret
jnp
insl
ret
jp
jns,pn
and
std
push
or
shl
movsb
insl
lock
xor
and
sub
in
or
and
adc
and
sahf
cmpb
mov
jmp
stc
jge
dec
xchg
in
pop
dec
xchg
jno
faddl
movsl
lock
aam
cmp
out
jne
xor
scas
scas
arpl
xor
mov
lret
enter
int3
sub
pop
loopne
and
lods
data16
loopnew
lcall
pop
sbb
xchg
aaa
mov
or
push
mov
mov
pop
or
mov
mov
and
in
shlb
mov
lahf
pop
jmp
sub
and
out
cmpsl
xlat
pushw
neg
sub
or
stos
ret
push
addr16
or
fcomps
popf
testl
arpl
es
lea
push
outsl
cmp
mulb
out
mov
inc
xchg
jo
movsb
loopne
mov
push
sarb
cmp
pop
pop
arpl
cmp
xor
add
mov
jp
enter
pop
jno
add
add
push
into
push
stc
push
movsl
and
jl
cmpsb
aad
mov
inc
sar
ficompl
mov
addb
xchg
pop
in
pop
inc
cmc
cltd
xor
mov
je
sbbb
stos
adc
jl
movsl
jge
pop
adc
add
arpl
bound
lea
lea
mov
in
sub
std
cmpsb
lahf
mov
push
sub
or
imul
xor
es
lods
or
fnstsw
sub
push
inc
pop
popa
and
inc
or
rolb
sahf
or
cmp
mov
stos
scas
and
xlat
inc
in
scas
stos
mov
sbb
mov
dec
inc
mov
lds
cmp
and
lahf
popa
mov
scas
or
pop
aas
xor
fs
adc
mov
jbe
test
and
mov
mov
repnz
sbb
pop
sarb
and
mov
cld
fs
mov
in
push
lret
mov
or
sbb
sub
push
add
inc
mov
push
xchg
mov
pop
mov
jbe
mov
flds
cmpsb
xchg
or
fcmove
loope
xchg
stc
stc
out
imul
xchg
mov
xchg
push
pop
sahf
fs
cli
pop
sti
aaa
sbb
inc
sub
mov
sbb
push
pop
je
mov
insb
and
pop
movsb
data16
xchg
pop
loopne
xor
xchg
daa
push
stos
outsb
cmpsb
or
xchg
push
mov
inc
out
pop
outsb
adc
sbb
sub
cwtl
mov
iret
scas
xchg
test
subb
mov
mov
or
lods
push
arpl
cmc
sarb
push
dec
pop
and
lock
adc
out
insl
sub
fistps
test
ja
xor
in
loop
fwait
mov
mov
mov
gs
aas
lret
test
xor
push
push
mov
push
fs
sub
lcall
hlt
push
roll
hlt
mov
push
sbb
pop
jne,pt
out
adc
xor
mov
jecxz
mov
or
add
leave
wrmsr
and
cs
sbb
cwtl
xchg
fwait
dec
int
xorb
cmp
xor
mov
mov
fisubs
or
jecxz
pop
cmp
stos
jmp
lea
mov
scas
and
adc
sub
test
leave
leave
push
pop
std
inc
mov
jle
stos
mov
jg
loope
lret
pushf
inc
enter
fwait
notb
mov
xchg
mov
fdivrp
cmpl
test
xor
sub
jne
cmc
and
mov
jb
lret
mov
pop
insl
adc
or
inc
push
xor
pop
pop
pop
daa
sbb
pop
data16
stos
es
push
pushf
shlb
mov
aam
mov
mov
jg
cmpsb
insl
arpl
inc
and
push
sub
das
cli
fwait
stc
leave
negl
sahf
add
and
jg
cltd
test
adc
lcall
popa
inc
fcomip
add
pop
ds
pop
in
or
push
fistpll
push
imul
push
jle
cwtl
sahf
ljmp
xor
in
cltd
call
add
jmp
popf
ret
stos
xchg
rclb
ss
jb
xlat
xchg
cltd
scas
cmp
inc
mov
adc
out
pop
xchg
inc
pop
shrl
rolb
test
mov
jle
push
fldt
jg
rolb
mov
gs
mov
fisttpl
lcall
test
in
aam
xchg
adc
add
lods
xchg
data16
lret
scas
int
sti
scas
jmp
mov
sub
jl
mov
mov
fdivs
or
ss
sbb
shll
test
inc
sahf
xchg
jno
jmp
arpl
jns
inc
or
cmp
adc
scas
sub
insb
mov
cmp
mov
or
mov
cld
cmpsb
xor
mov
cltd
mov
or
mov
push
ds
movsb
loopne
sbbl
push
xchg
jg
js
inc
push
into
jl
fwait
mov
das
cld
ds
outsb
repz
out
imul
xchg
mov
and
sbb
jnp
adc
xlat
outsl
not
adc
inc
shl
cmpsb
mov
jmp
mov
xlat
daa
shr
jns
sub
js
add
jae
xchg
out
xchg
pusha
cmpsb
cltd
xor
cmpsb
push
sbb
mov
rcrl
jle
xor
adc
dec
jns
out
push
jle
test
call
push
rcrl
out
pop
test
jmp
imul
or
push
imul
xlat
push
sbb
in
mov
lea
push
xor
enter
xor
bound
jno
xchg
and
jne
aam
or
mov
addl
and
das
fcomps
sbb
or
sbb
ja
dec
cs
mov
inc
sub
mov
push
sub
lret
movsb
sarl
mov
push
push
inc
mov
adc
repnz
sbb
out
ret
xor
stc
xchg
dec
out
sub
jae
mov
loope
shll
sbb
mov
or
sbb
movsb
fnstsw
ret
ds
sub
nop
jno
arpl
fcoms
cmp
push
dec
push
outsb
pop
mov
dec
cmc
test
and
ficompl
imul
imul
pop
jno
insl
adc
rolb
mov
pop
daa
pop
rorb
pushf
sbb
pop
add
xchg
ss
inc
adc
cmc
push
enter
cmpsl
mov
rcll
lret
fcom
sarl
adc
jl
and
fmuls
push
sbb
add
jne
popa
fld
aam
lret
sub
dec
outsl
add
jmp
roll
repnz
add
jge
loopne
push
push
in
dec
pop
jbe
jns
sti
dec
ficomps
mov
mov
jb
sub
and
push
cli
jno
and
jl
mov
inc
icebp
pop
cmp
push
outsb
push
add
fistpl
clc
inc
jl
xchg
das
ja
inc
mov
out
fldt
stos
pand
pop
inc
imul
fnstenv
inc
out
testb
dec
sbb
leave
lock
jp
in
and
test
neg
ljmp
sbb
mov
call
int
inc
pushf
je
xchg
jo
push
ss
jmp
ja
aad
outsb
ss
add
inc
jecxz
sbb
mov
aas
inc
arpl
out
enter
fisubs
loope
sub
dec
jmp
dec
add
roll
cmp
imul
add
imul
xor
add
add
scas
cmp
sub
inc
aam
pop
jb
mov
div
pop
push
mov
js
out
jecxz
ss
int3
and
test
sahf
jmp
lea
fdivrl
add
inc
cmp
sbb
loope
outsb
iret
push
dec
ljmp
push
pop
xor
lock
xchg
push
int3
scas
std
push
pop
ficomps
js
dec
mov
pop
pop
into
mov
int3
out
aad
dec
sbb
push
adc
rcrb
add
mov
mov
dec
lds
xchg
hlt
inc
rcl
mov
lock
and
dec
pop
sbb
mov
mov
out
insl
push
xor
fildll
es
jp
inc
jbe
orb
sub
fdivrs
cmpsb
mov
mov
mov
ljmp
mov
lahf
sbb
bound
sbb
ja
inc
sub
jmp
jge
pop
mov
inc
push
cmp
jae,pt
jmp
mov
xchg
and
shrl
xchg
mov
out
mov
repz
jmp
icebp
imul
push
sub
test
inc
push
out
jmp
mov
lods
adc
das
sub
divb
mov
repnz
in
sbb
pusha
adc
sahf
jge
mov
cmp
mov
add
cmc
push
or
or
and
push
push
push
rcrl
sub
scas
and
mov
scas
mov
sbb
cmp
or
xchg
push
cwtl
inc
icebp
inc
scas
leave
int
pop
in
repz
jb
xor
in
adcl
icebp
sti
mov
mov
leave
pop
inc
mov
sbb
inc
lcall
aas
pop
aaa
pop
cli
add
shll
push
test
fisttpll
and
shlb
adc
sub
enter
das
add
pop
inc
xchg
sbb
jo
pop
repnz
push
jno
fwait
out
int3
in
addl
jg
sarb
mov
orl
jno
pop
in
or
cld
xchg
xor
rorl
fstpl
cltd
cltd
jo
mov
push
push
jge
popa
je
or
xor
sti
test
mov
shlb
lcall
and
andl
subl
adc
test
sub
nop
add
outsb
push
pop
mov
in
fwait
cmpsl
rcl
into
out
iret
movsl
push
fucomp
push
pop
pcmpgtb
push
fcoms
cmp
mov
stos
jmp
sub
xchg
daa
cmp
shll
pop
sub
mov
out
popf
push
push
push
dec
pop
xor
out
sbb
mov
aas
or
cmp
sub
leave
mov
inc
mov
mov
xlat
mov
fldenv
mov
xchg
xor
rorb
div
xchg
adc
xor
mov
jns
inc
xor
test
mov
push
lret
out
mov
xor
dec
out
sbb
mov
sub
jge
hlt
xchg
int3
test
nop
cmpsl
mov
fisttps
fmuls
push
mov
movsb
enter
ds
pop
jp
push
jge
xchg
xor
cmpsb
push
std
lcall
lds
mov
movsl
jns
iret
sbbb
and
mov
push
cmp
test
into
inc
mov
shl
mov
mov
mov
mov
pop
lods
lcall
iret
ficomps
cmp
push
and
or
iret
inc
inc
sbb
ficoms
xor
cmp
scas
mov
nop
sahf
iret
repnz
pusha
pop
jp
add
and
or
insl
sti
fisubrl
mov
fldcw
jle
xor
mov
push
lods
fldt
movsl
ror
inc
sbb
mov
stos
jns
mov
inc
ds
mov
jg
xor
jp
add
outsb
add
sahf
sbb
popa
or
cmp
jmp
adc
and
adc
mov
push
pushl
lods
push
mov
das
sahf
xchg
cltd
test
iret
push
cmp
mov
sarb
add
insb
popf
cmp
sbb
dec
dec
ds
nop
lock
in
movsl
xchg
imul
loopne
dec
push
scas
inc
aaa
adc
mov
pusha
in
test
jae
jl
push
int3
mov
jg
sub
cmc
mov
lret
pusha
push
jno
sbb
lock
out
jle
stc
or
mov
pop
fcomps
bound
mov
stos
mov
jno
lret
dec
addl
cmpsb
out
dec
scas
inc
inc
xor
inc
testb
test
lret
pop
pop
out
mov
mov
loope
mov
cs
add
jge
jbe
cmp
jg
idiv
test
mov
pop
sub
add
pop
pop
insb
lods
pop
mov
and
gs
flds
adc
mov
addl
mov
add
sbb
fstl
mov
jl
shlb
ss
jge
mul
jmp
mov
in
popf
cmp
fcoms
test
jle
push
mov
mov
mov
inc
mov
pushf
push
adc
in
insl
xor
xor
push
jo
fcomps
xchg
sub
nop
push
adc
fadd
stos
cmpsl
inc
cmpsl
test
jmp
mov
int
sub
or
xor
pop
adc
cmpsl
dec
mov
jge
xchg
sbb
adc
jmp
shrb
pop
push
pop
jp
jno
ja
mov
fstpl
mov
stos
and
mov
adc
lock
and
jb
or
rcr
out
daa
push
jnp
idiv
sbb
xchg
cmpsb
push
mov
mov
add
lahf
mov
repnz
push
lcall
add
outsl
mov
mov
sub
sub
das
jmp
rorb
sub
sti
mov
and
lods
int3
or
mov
xor
xchg
jns
pushf
scas
fdivrs
fs
mov
mov
inc
and
sahf
sub
push
sbb
cli
cmp
xorl
out
cmp
xchg
mov
dec
mov
lock
pop
movsl
mov
ljmp
fdivl
insb
and
pop
lods
fidivrs
xchg
pop
test
xchg
div
xchg
xchg
pop
sahf
push
lods
sahf
mov
test
sub
mov
sub
lret
jbe
jmp
adc
mov
inc
dec
ljmp
mov
mov
int3
push
fimull
or
cmc
sub
mov
mov
bound
out
std
in
in
and
pop
jp
in
jnp
dec
dec
cmc
dec
inc
sbb
std
sbb
cwtl
pop
sub
inc
inc
scas
push
cmp
lea
shlb
sbb
cmp
imul
xor
mov
daa
cmc
pop
bound
aas
mov
lret
mov
xchg
mov
xor
xorb
jmp
cld
and
adc
divl
sub
jns
mov
mov
cmp
aam
pop
sahf
movsb
jp
imul
adc
ret
int
or
dec
bswap
es
xchg
mov
add
cwtl
incl
push
fidivs
push
fwait
cmpsl
ljmp
jb
push
xor
test
lds
fidivrl
gs
cmp
sbb
xchg
aaa
mov
stc
xor
inc
movsb
and
cli
std
data16
lods
dec
jns
mov
mov
sub
jo
addr16
cmp
idivl
cld
sti
mov
mov
pop
jp
pop
sbb
popa
ret
or
insb
lcall
lret
pusha
mov
dec
or
shl
cmp
sbbb
mov
push
pmaddwd
nop
adc
sub
push
mov
fs
les
mov
loop
pop
add
fs
int3
in
or
mov
mov
es
sub
sbb
rorb
inc
test
fwait
xchg
popa
into
push
pop
cld
sub
shrl
fcoms
jns
pop
adc
pop
mov
inc
dec
or
fidivl
adc
cld
cld
cltd
pop
add
mov
mov
stos
sub
icebp
dec
imul
loope
mov
cmpsl
scas
add
test
stos
orb
sti
imul
lret
adc
cmp
jmp
cwtl
int3
add
imull
inc
push
mov
jns
mov
out
sahf
mov
adcb
sti
ja
call
sbb
cwtl
xor
mov
inc
loope
jae
popa
in
jmp
dec
dec
ss
dec
shll
sarl
mov
push
jnp
movsb
out
loope
imul
dec
and
test
int3
jns
in
xchg
pop
inc
jae
ds
addr16
mov
lahf
jmp
sbb
jl
xor
jecxz
add
pop
mov
aaa
daa
add
dec
aad
fimull
dec
mov
jge
lahf
push
sbb
pop
add
sub
inc
xor
xlat
pusha
ret
cmc
pop
int
mov
mov
push
push
push
xor
sub
daa
test
push
dec
mov
push
lret
fucomip
lret
jg
adcb
outsl
ret
mov
add
sbb
mov
loopne
movsl
dec
jb
inc
pusha
scas
std
or
sub
push
xor
xchg
fstpl
sbb
lahf
xlat
leave
or
and
inc
movsb
loope
lret
repz
xchg
xchg
dec
stos
cld
leave
aad
aas
lods
inc
jl
fisubs
ss
addr16
jb
ss
iret
adc
jne
iret
cld
les
in
mov
xlat
or
js
out
inc
push
xor
iret
addb
es
shr
mulb
jle
mov
and
push
adc
test
sub
pop
jnp
mov
pushw
and
jno
sub
repnz
stos
out
adc
sbb
rcll
das
mov
stc
das
or
vpsubd
in
xchg
lcall
mov
out
fwait
aas
scas
shlb
mov
out
push
movsb
xchg
inc
or
and
std
or
mov
aam
inc
jp
push
push
lds
mov
std
jns
and
mov
into
test
or
mov
and
mov
lahf
add
ds
pop
popa
jns
mov
cmpsl
rorb
jl
aam
push
in
mov
scas
pop
imul
xchg
mov
pop
pop
jp
addb
and
xchg
pop
sub
mov
pop
or
or
mov
dec
pop
xor
or
or
testl
lret
mov
adc
dec
adc
xchg
and
and
or
ljmp
jbe
jg
push
xchg
addr16
fs
clc
js
jbe
jge
sub
jecxz
fs
ss
cmpsb
and
sbb
push
sbb
jno
mov
jae
cmp
mov
pushf
cmp
push
inc
shl
mov
cld
ror
jae
cli
jae
fstps
rorl
and
sbb
fldl
xchg
mov
mul
mov
adc
je
iret
mov
sub
sbb
mov
or
inc
jnp
xor
dec
std
push
loop
fcoms
xlat
push
push
sti
mov
fstpl
sbb
jno
movsb
loope
imul
sarl
decl
sub
add
mov
dec
leave
push
loopne
push
rorb
xlat
out
cli
xchg
cmp
pop
aas
or
mov
lds
xor
sub
xchg
or
add
in
es
dec
decw
mov
std
mov
sbb
aad
jp
adc
and
rclb
push
mov
jecxz
mov
jecxz
inc
jnp
dec
loopne
xchg
or
in
sti
test
add
adc
inc
subl
cmc
ret
imul
jns
mov
xchg
icebp
add
int3
push
shll
mov
pop
jbe
mov
mov
cmp
sbb
push
inc
xchg
mov
sbb
mov
adc
test
pushl
adc
popf
dec
clc
rorl
and
jg
fldl
sbb
addr16
cmp
xor
insl
xor
push
sahf
mov
mov
dec
pop
cwtl
sbb
push
pop
loop
jnp
fwait
popf
lods
lods
insl
movsb
mov
fisttpl
add
cmp
inc
mov
ja
out
mov
xchg
lcall
or
or
mov
cmp
sub
add
and
sbb
cmp
push
sti
sbb
rcr
adc
ss
mov
negb
push
xlat
cmp
push
push
mov
xlat
aas
ror
inc
rclb
lods
dec
jge
cmp
mov
pop
iret
fsub
dec
jbe
push
jnp
jg
mov
and
ret
imul
faddp
mov
orl
fcmovnbe
in
push
repnz
xorb
xchg
mov
dec
push
mov
push
out
sbb
inc
popl
je
cmp
imull
ja
jle
movsl
pop
ja
aam
push
inc
sbb
mov
sbb
imul
repnz
add
fisttps
test
mov
jge
sbb
in
scas
daa
sub
addr16
or
leave
mov
sub
adcb
sub
loop
jnp
and
push
paddw
mov
jl
in
adc
xor
dec
mov
cmp
mov
shlb
enter
test
clc
xchg
xchg
sbb
xchg
and
mov
in
pop
sbb
cs
or
inc
mov
pop
rcl
fadds
push
movsl
inc
cmpsb
xor
dec
addr16
in
inc
push
dec
push
sbb
cmp
xchg
and
popa
sbb
mov
sub
adc
sub
sub
push
dec
add
push
jge
mov
fwait
ljmp
outsb
xchg
jecxz
add
mov
lods
mov
adc
cs
mov
add
mov
loop
out
mov
jns
dec
mov
data16
lret
mov
push
pop
stos
fcmovne
adc
stos
pop
sbb
fcomps
dec
push
push
bswap
sbb
popf
test
and
inc
fsubrl
push
mov
pop
xor
ret
push
dec
stos
data16
idivb
or
test
jne
xchg
mov
sub
adc
push
test
adc
js
movsb
mov
fwait
push
mov
pusha
push
dec
arpl
aad
pop
shlb
stc
shll
pushl
push
lret
adc
dec
cmpsl
push
and
inc
push
add
imul
add
jge
lock
aam
fdivl
pop
dec
push
sbb
push
xor
mov
pop
mov
xor
nop
inc
shll
lret
xchg
std
adc
outsb
pop
add
test
repnz
sbbl
prefetchwt1
xor
and
sahf
ss
push
dec
fistps
pushf
jle
mov
xchg
jecxz
out
insl
bswap
cld
push
adc
sub
xchg
pushf
push
je
outsb
dec
shl
outsl
stos
dec
rclb
pop
std
mov
scas
std
mov
push
and
ret
push
push
mov
mov
adc
loop
bound
mov
popl
adc
popa
shrl
cmp
xchg
adc
jecxz
out
mov
push
addl
mov
or
push
adc
dec
jb
popa
js
test
jb
jg
push
pop
shr
xorl
sub
jge
sar
gs
int
mov
aaa
fadd
mov
sbb
xchg
outsl
cltd
sarl
lret
mov
aad
mov
xchg
popa
je
push
mov
aaa
addr16
and
push
mov
xor
scas
xchg
aam
add
fistl
mov
ret
mov
or
push
es
and
lret
aam
push
mov
jecxz
pop
lret
scas
mov
ljmp
sarl
cli
mov
pop
mov
in
jb
bound
jo
ret
xchg
dec
inc
push
mov
dec
mov
ret
outsb
push
xchg
pop
fbld
divl
lret
inc
shlb
push
xor
call
jno
out
pusha
cli
int
jle
cmp
cmp
push
and
in
movsb
mov
lret
push
jl
cmp
or
jno
and
cmc
push
pusha
xchg
enter
push
mov
mov
sub
dec
add
mov
push
sti
cmp
inc
jge
mov
xchg
push
add
mov
mov
dec
mov
sub
mov
inc
fwait
sub
or
adc
or
cwtl
push
xor
sar
push
mov
out
xchg
sbb
stos
mov
int3
push
inc
pop
cwtl
jmp
ljmp
pop
push
pop
ds
cmp
aad
pop
dec
int3
dec
ret
mov
je
mov
pop
inc
out
mov
out
out
pop
adc
cmp
shl
scas
or
push
ja
push
dec
cmp
add
ljmp
js
push
inc
cmp
lcall
cmp
dec
in
pop
push
mov
lods
jo
sub
scas
mov
mov
xor
mov
mov
xlat
push
add
je
sbb
ret
jne
push
rolb
xor
mov
aaa
cmp
sub
xchg
icebp
add
sub
bound
ds
sub
dec
addr16
ds
xor
data16
cmp
mov
xchg
mov
sbb
enter
push
inc
iret
mov
cmp
mov
cmp
cli
ljmp
aas
xchg
fidivs
sar
mov
mov
sub
cmp
sub
dec
in
sbb
out
test
or
adc
popf
sti
jecxz
mov
clc
pop
lret
ja
mov
in
in
sbb
jecxz
clc
pop
cwtl
popf
push
sbb
sub
push
loope
lret
popa
cld
xchg
imul
insb
fwait
ljmp
add
outsb
mov
out
and
shlb
mov
call
mov
inc
xor
insb
inc
mov
pop
mov
xor
cmp
and
adc
mov
cwtl
je
push
add
xchg
jo
mov
or
mov
lret
int3
adc
mov
insl
sbb
out
mov
enter
lods
outsl
xlat
pop
inc
pop
scas
sbb
xchg
adc
idivl
xchg
sub
dec
or
cmc
sub
lods
pop
hlt
jns
ja
inc
inc
pushf
addb
fwait
pop
fs
adc
mov
ljmp
mov
call
in
stc
adc
push
fcompl
outsb
add
lock
inc
inc
enter
movsl
xor
outsb
test
push
mov
cmp
push
mov
push
mov
fs
xchg
mov
ret
repz
xor
cli
cmp
rcll
mov
movsb
mov
scas
out
sbb
sub
mov
lods
loop
test
adc
jno
pop
dec
mov
sub
movsb
xchg
test
insl
mov
inc
cwtl
mov
arpl
mov
imul
jge
xchg
xor
mov
std
out
xchg
sti
mov
jne
adc
xlat
add
test
xlat
in
arpl
xchg
test
sub
push
mov
adcb
lods
test
jne
xchg
xor
pop
inc
cltd
jg
repz
jecxz
negb
sar
movsb
stos
fsubr
dec
daa
jmp
ljmp
stos
and
sbb
or
jl
jbe
mov
fucomi
idivb
push
push
add
jmp
adc
imul
lock
sti
subb
sub
adc
mov
add
cs
adc
fsubl
inc
lds
and
dec
loop
stos
out
add
shlb
cmpsl
push
xor
test
addb
mov
adc
adcb
jmp
xchg
jne
jg
and
sub
shlb
push
pop
mov
loop
xchg
add
js
pop
out
addl
pop
test
repnz
loopne
in
cmpsl
pop
adc
add
xor
cmpsb
js
and
sub
mov
shlb
jl
sub
push
jmp
hlt
sbb
inc
push
cmp
out
ror
jmp
push
dec
pop
cmp
das
mov
jne
jo
je
movsb
inc
faddl
dec
mov
repnz
xchg
lret
loop
push
and
add
out
pop
mov
dec
adc
jno
fs
cmpl
sbb
fs
jne
dec
push
idivl
stos
cmp
sbb
scas
push
mov
pop
lret
push
add
loope
lcall
xor
push
data16
pop
les
out
out
repz
in
pop
inc
xlat
movsb
in
enter
xchg
aam
mov
add
je
mov
mov
sub
fsts
mull
sahf
lea
xlat
push
ffreep
loopne
sbb
xchg
lret
arpl
outsl
fdiv
pushf
xchg
add
dec
inc
out
sbb
mov
out
movsb
or
mov
aam
mov
xchg
out
adc
xchg
sub
pop
test
adc
jne
lods
xor
popf
add
inc
cmp
call
imul
mov
mov
cmp
movsb
xchg
lods
mov
mov
outsb
dec
cmpsl
push
loope
sahf
or
out
lret
imul
popf
lea
sti
lret
lret
test
and
jnp
std
jle
inc
sbb
jle
stos
push
cmp
inc
in
adcl
add
pop
call
dec
sti
mov
insb
shl
xor
jge
arpl
fidivrs
imul
sub
xorl
inc
pop
pop
and
push
andb
aad
movsl
pop
call
fincstp
xchg
and
outsl
cmpsb
cmpsb
sbb
xor
xchg
push
cmp
mov
lods
stos
adc
pop
scas
adc
mov
mov
test
jge
shlb
sbb
dec
test
fdivrl
xchg
outsl
push
lods
shlb
jmp
aas
pop
pop
pop
sti
dec
jae
xchg
jnp
cmpl
loope
add
push
dec
cmc
dec
xchg
stos
lret
adc
jge
rcl
add
inc
dec
mov
or
ficomps
hlt
ljmp
jl
adc
sub
imul
mov
mov
and
stos
mov
test
adc
add
lret
rcr
xchg
push
paddb
and
push
adc
iret
mov
cltd
inc
add
and
ja
insl
aam
lods
jl
stc
dec
jmp
int
out
orl
loopne
lods
xor
cmpb
or
sbb
push
loop
mov
xlat
bound
add
xchg
popf
cmp
rcll
in
lret
inc
cmp
div
and
adc
xchg
loop
sahf
add
mov
pushf
cmp
cmp
ja
popf
xlat
addr16
mov
adc
movsb
aad
or
in
or
or
int
mov
outsl
jno
mov
aam
out
leave
cmpb
add
mov
and
dec
mov
mov
into
cmp
ret
jmp
lcall
out
int3
pop
cld
js
sarb
inc
mov
push
mov
loope
add
sbb
jmp
psubq
jecxz
in
jns
xchg
mov
mov
dec
popa
adc
int3
sub
inc
add
and
push
mov
inc
xchg
lock
in
or
push
xlat
cmpsl
inc
inc
stos
jle
aad
leave
lcall
mov
shlb
push
sbb
sub
dec
idivb
in
imul
das
xchg
mov
cltd
std
mov
push
ljmp
rcr
sbb
pop
sub
stos
inc
or
dec
mov
aam
or
cmp
addb
out
ds
or
adc
xlat
mov
fcomps
sbb
mov
cmc
aas
push
out
insb
mov
pusha
lods
cs
nop
or
out
fildl
fbstp
insb
or
int
xchg
aas
dec
out
cld
out
cmpsl
xchg
out
adc
or
stos
mov
iret
into
inc
sahf
cmp
out
jl
popa
adc
mov
xchg
cmpl
hlt
cmp
add
mov
hlt
pop
pop
or
xor
inc
andl
push
jle
loope
ss
pop
outsl
out
cmc
stos
ret
or
imul
orl
add
fdivrs
lret
pusha
les
jno
adc
testb
sbb
into
ja
mov
adc
jmp
mov
mov
or
mov
sbb
adc
or
in
arpl
or
cmp
inc
jo
jmp
imul
push
jmp
xor
dec
fstpl
jge
sbbl
push
xor
nop
pop
push
mov
push
push
add
js
enter
lcall
dec
sbb
sub
sarb
push
adc
sbb
test
decl
lret
add
clc
jns
pop
dec
pop
leave
xchg
sub
ds
jb
loopne
or
daa
sub
push
sbb
ds
cmp
leave
fsubl
sbb
sub
pop
pushl
loopne
push
je
xorl
mov
stc
shll
orb
pop
pop
outsb
stc
push
and
sahf
pop
out
cmp
popa
sbb
shlb
xchg
xor
or
sub
mov
ss
repz
cmp
or
pushf
loope
jb
add
pusha
jle
cs
mov
jp
push
imul
lahf
inc
pop
shl
test
loope
pop
inc
loopne
fs
mov
push
and
xchg
inc
aas
cmp
xor
pop
std
leave
ret
mov
or
std
sbb
sbb
ficompl
fwait
test
lcall
test
notl
mov
xchg
mov
pop
test
out
clc
movsb
jmp
push
cs
scas
aad
stc
mov
mov
fwait
push
mov
daa
aaa
push
inc
xor
adc
and
fimull
xchg
pop
aad
roll
pop
dec
into
fs
pushf
adc
cmp
lock
inc
pusha
jns
xchg
push
sbb
xor
inc
adc
popa
adc
adc
bound
sub
inc
mov
ja
push
xor
push
xor
push
mov
insl
scas
sar
adc
ja
pop
xchg
inc
lret
sbb
cwtl
inc
mov
or
xchg
loopne
mov
es
push
push
pop
mov
loopne
in
sub
mov
mov
aas
arpl
cmpl
mov
fsubl
adc
movsb
ljmp
iret
in
xchg
mov
mov
aam
divb
imul
mov
lea
or
lock
ss
test
mov
xor
pop
ret
fistpll
push
pop
mov
gs
adc
mov
and
and
sbb
int
aad
aam
and
sbb
fnsave
rcl
movsl
jo
icebp
sysret
iret
stos
test
xor
hlt
push
enter
test
mov
fisubrl
cmp
xchg
test
pusha
xchg
rorl
pop
xchg
jp
cltd
xor
or
push
lahf
adc
mov
test
fmull
call
sbb
xlat
pop
jb
or
push
pop
aas
cld
mov
push
and
nop
cmc
sbb
mov
add
and
inc
sub
test
xchg
push
dec
push
icebp
push
or
dec
enter
sbb
sti
outsl
aas
push
sbb
stos
inc
int3
movsb
lock
push
test
push
fisubl
mov
lret
mov
int3
push
mov
icebp
jl
add
int3
mov
mov
xor
movsb
jo
push
sub
rcrb
or
repnz
inc
gs
mov
dec
jne
mov
popa
dec
icebp
sbb
das
dec
data16
and
movsl
insb
add
test
lcall
xor
mov
mov
in
daa
sbbl
add
clc
add
loopne
shll
xchg
pusha
iret
sarl
cmpsl
and
jl
push
xchg
inc
cmp
fisubs
or
into
mov
sub
les
lock
jae,pn
jns
ret
mov
bnd
or
sub
xorl
loopne
imul
adc
jb
jp
pop
add
test
sub
sbb
mov
imul
fdiv
mov
sub
dec
leave
ss
xchg
mov
mov
xchg
add
add
and
adc
sbb
adc
add
sbb
jb
rcrb
nop
lods
jp
adc
push
add
cmp
nop
in
xor
mov
icebp
or
add
or
pop
xor
sub
daa
xchg
push
pop
aas
add
data16
int
sub
gs
push
and
and
dec
cmc
adc
xor
arpl
or
xchg
orl
ret
adcl
add
lcall
inc
add
xchg
fldcw
cltd
adc
icebp
xchg
cwtl
fcomi
adc
jne
xor
add
lcall
or
sahf
lods
mov
mov
inc
or
cli
push
pop
mov
jbe
add
popa
sub
idivl
mov
sub
fwait
inc
pop
neg
xchg
xchg
xor
cld
test
scas
movsb
mov
pop
or
fmul
xchg
adc
pop
sti
inc
pop
jp
cmp
imul
dec
adc
mov
adc
push
in
xchg
ss
push
decb
add
mov
add
insl
fucom
or
pop
mov
incw
fcompl
stc
mov
mov
mov
push
push
mov
push
adc
sub
push
iret
jmp
repz
or
popa
adc
xchg
xchg
mov
inc
xchg
jle
daa
adc
sbb
mov
roll
and
imul
popf
xor
movsl
loopne
mov
out
mov
inc
cmpsl
sub
adc
xor
push
or
jb
scas
dec
test
and
vpsubusb
pusha
jge
mov
jmp
cmpb
test
imul
into
je
pop
out
aas
pop
pop
sbbb
mov
push
mov
mov
les
lcall
loope
push
cwtl
pop
cmpsl
sbb
mov
or
xchg
or
adc
mov
push
jno
sbb
in
push
sub
inc
data16
or
jns
movsl
jg
outsb
jle
in
outsb
sti
loope
pop
lcall
dec
lock
mov
roll
or
out
js
cld
mov
inc
js
sahf
dec
jg
or
pop
mov
xorb
jns
inc
mov
or
mov
adc
mov
in
sbb
add
adc
outsb
or
and
jne
inc
inc
lret
jo
xchg
cmpsb
inc
mov
decb
xchg
cmp
mov
inc
or
fistps
mov
je
repnz
testl
mov
mov
in
fucomp
push
add
sahf
fldl
sti
loop
mov
fildll
dec
or
lds
shl
pop
fcomps
push
sbb
imul
gs
out
xchg
pop
pop
aad
pop
xlat
sub
mov
cmp
ret
xor
push
andb
neg
sbb
sahf
insl
mov
in
cmp
pop
das
cmpsl
or
jns
outsl
dec
mov
push
sar
sbb
mov
mov
fnstcw
xchg
mov
sbb
pop
loop
ror
or
mov
das
mov
mov
clc
pop
dec
and
pop
cmp
adc
daa
jg
and
ret
push
divb
test
andb
xchg
add
mov
bound
dec
popf
and
into
mov
pop
aam
lods
icebp
xlat
push
mov
mov
inc
ficoms
or
inc
repnz
out
xchg
fwait
cwtl
add
aad
dec
push
push
dec
push
sub
mov
dec
sbb
lods
xchg
adc
outsl
and
dec
mov
and
add
cs
ret
jmp
data16
loope
arpl
enter
mov
clc
mov
jp,pt
arpl
pop
rcr
in
mov
mov
stos
dec
mov
sbb
je
orb
iret
or
popf
ja
js
je
push
cmpsl
adc
cmp
fidivrl
out
scas
faddp
rolb
rolb
test
cs
jo
add
outsl
out
sbb
pushf
fimuls
mov
enter
pop
add
mov
push
dec
inc
ret
cmpsb
insb
mov
sbb
ret
jmp
dec
mov
mov
roll
push
push
test
xchg
push
xor
mov
sub
xchg
repnz
add
out
or
fisttpll
cmp
test
loop
xchg
call
xchg
leave
cmp
inc
jbe
mov
cwtl
xor
hlt
xchg
sub
fmulp
xchg
cmpsl
stc
imul
inc
repnz
into
out
unpckhps
cmc
and
pop
outsb
aas
jnp
test
jne
jecxz
ss
enter
push
test
ja
xor
inc
subb
cmp
inc
adc
stos
movsl
mov
cwtl
outsb
stos
movsl
imul
push
in
jnp
inc
and
fwait
cmp
cli
add
es
fstps
and
outsl
fs
sbb
or
pushf
dec
mov
jg
add
and
fisubl
repnz
test
sub
or
or
inc
ret
inc
mov
lock
xorb
jmp
lock
mov
jmp
pop
sbb
aam
jns
in
mov
pop
stos
and
fucomp
lock
xchg
aaa
mov
push
in
and
in
pop
inc
stc
insl
es
cld
inc
daa
ja
jae
and
imul
pop
pushf
adc
sbbb
mov
and
das
or
jbe
mov
mov
push
lds
loopne
lds
xchg
inc
scas
xchg
xor
aad
sbb
clc
xlat
xor
jne
loopne
enter
sbb
das
mov
xor
jmp
mov
push
xor
std
pop
ficoml
pop
into
mov
insl
mov
jnp
and
jmp
repnz
sub
push
inc
sub
stc
bound
in
xor
test
cmp
add
xor
pop
xchg
and
or
mov
lods
fwait
or
mov
cltd
jns
inc
stos
notl
cmpsl
mov
js
out
pop
cltd
pop
dec
sar
xor
arpl
xor
mov
pop
mov
jle,pt
scas
into
push
test
loop
cmp
stc
lods
mov
out
ja
cmp
les
sti
mov
cwtl
sbb
sbb
xlat
push
adc
imul
push
bound
in
movsl
outsb
push
pop
mov
in
mov
hlt
out
jnp
cld
lret
negl
cmpsb
stos
mov
jne
movsl
in
stc
arpl
sbb
push
hlt
pop
push
mov
shll
andl
jmp
test
mov
cs
out
add
mov
imul
cmp
inc
nop
and
insb
into
popa
fisubs
and
fcomps
inc
add
ss
cmp
into
inc
mov
adc
out
in
xchg
dec
hlt
mov
adc
inc
or
mov
ja
lea
push
jb
and
subb
mov
imul
pop
pusha
loopne
movsl
mov
mov
xor
mov
cmc
add
clc
repnz
ret
or
lcall
dec
and
cmpsl
out
lock
dec
pop
lds
lods
repnz
pop
mov
push
sahf
fsqrt
mov
adc
daa
lahf
mov
xchg
js
insl
jns
in
lods
mov
jo
sub
inc
dec
or
jl
mov
pop
repnz
sub
inc
loopne
jge
rolb
push
and
push
in
mov
sarl
in
xor
ds
mov
out
cmc
sbb
lock
lock
es
mov
les
popa
mov
mov
mov
mov
add
xor
iret
lea
mov
adc
lods
inc
es
enter
movsl
icebp
into
inc
pop
icebp
hlt
or
inc
in
fwait
cltd
ljmp
fisttpl
and
xchg
mov
mov
cld
xor
rolb
dec
xchg
jl
aam
fidivrs
jle
ss
lods
orb
jae
ja
adcl
cwtl
imul
lcall
ja
inc
pop
je
stos
je
lcall
jae
sub
and
jp
pop
imul
mov
mov
es
enter
push
shrl
std
pop
hlt
int
mov
jbe
pop
lock
mov
xor
jns
sahf
and
pop
stc
mov
xor
jle
xchg
inc
out
mov
xor
cmpsl
mov
sbbl
dec
mov
xchg
cmp
adc
ja
insb
or
rcl
mov
xchg
dec
fisubl
pop
cmp
jns
ret
jns
mov
stos
sub
cmp
mov
mov
je
xor
mov
shll
lock
je
mov
bound
jns
xor
adc
adc
insb
xor
pop
inc
xor
ss
cmp
stos
mov
leave
add
lods
lods
mov
mov
in
aam
sub
mov
cmpsl
sub
arpl
mov
jb
xchg
test
scas
inc
mov
mov
jbe
mov
cmp
lret
pop
push
push
insl
pusha
dec
push
scas
xchg
stc
adc
sbb
inc
xchg
popl
sub
inc
rcrl
movsl
or
cltd
and
xlat
gs
incb
pop
dec
dec
sub
pop
inc
movsl
mov
imul
xchg
pop
insl
pushf
push
iret
fldln2
mov
daa
pop
xchg
push
and
xchg
inc
add
and
in
sub
lcall
push
rorl
addb
rorb
jle
or
push
sbb
add
movsb
inc
push
cmp
sbb
in
or
in
mov
mov
jns
cmp
out
cmpsb
inc
in
ja
loopne
and
mov
jns
inc
in
inc
pop
mov
sbb
das
jb
hlt
movsb
adc
fiadds
xor
mov
mov
mov
adcb
mov
test
jo
stos
inc
push
fs
loop
aas
jno
sub
pop
cmp
movsb
pmullw
cmp
pop
adc
imull
sbb
xchg
pop
sti
sub
mov
dec
sbb
int3
and
xchg
subb
lods
pop
cmp
stc
idivb
xor
stc
test
mov
sub
xor
mov
ja
push
mov
adc
orb
mov
sub
call
add
pop
jns
dec
dec
sbb
inc
in
cmp
push
shl
lret
cmpsb
lds
jmp
jl
jnp
test
xchg
pop
scas
lcall
popf
addr16
push
ficomps
bnd
mov
hlt
add
fbstp
sbb
jmp
jns
and
push
lock
out
popa
pop
mov
imul
fdivrs
out
fmull
mov
mov
or
arpl
mov
cmpb
mov
std
jp
xlat
fs
hlt
lcall
in
mov
xchg
mov
or
into
mov
mov
ds
leave
movsb
and
mov
and
mov
add
dec
repz
xchg
push
mov
std
bound
je
imul
orb
lds
adc
pushf
xor
fistpl
xor
inc
fdivrl
lret
mov
lret
xorb
mov
or
add
pop
cltd
in
sub
inc
sti
or
test
fcmovnu
or
mov
and
pop
pop
scas
shlb
je
mov
lods
push
mov
mov
xor
mov
pop
jo
inc
imul
cmpsb
xlat
loope
imul
adc
divb
pop
loopne
sbb
mov
sub
adc
jno
xlat
xchg
test
enter
jecxz
mov
jne
loop
xchg
fnstenv
adcb
mov
adc
and
jns
pop
lods
xchg
pop
cmp
cld
hlt
stos
aaa
fdivrs
jl
mov
cltd
lods
inc
ja
inc
xchg
test
inc
ljmp
mov
push
pop
xor
adc
mov
jns
enter
xchg
mov
cmpsl
outsl
xlat
and
mov
mov
dec
sahf
popa
stc
xchg
jge
movsl
stos
fildl
es
mov
insl
mov
lods
add
fst
xor
je
inc
jns
jmp
stos
sub
loop
rorl
iret
sub
leave
fwait
xor
mov
aam
repnz
cmp
add
arpl
cmp
adc
adc
dec
sbb
push
inc
mov
push
push
sub
nop
out
shll
mov
jae
popf
lods
test
or
xchg
cmpl
inc
aaa
xlat
push
pop
ljmp
hlt
and
jmp
outsl
push
aad
pop
jle
adc
jno
push
fstps
repz
lcall
dec
sbb
mov
outsb
mov
sub
adc
sub
jae,pn
xchg
ss
lret
stos
in
rcl
lods
mov
loop
xchg
dec
cmp
aad
popf
nop
lret
mov
xor
dec
xlat
jle
cli
or
sti
sub
lahf
adc
adc
sub
mov
cltd
test
pop
fsts
hlt
jecxz
movsl
stos
mov
std
push
inc
clc
xchg
loop
push
dec
sbb
and
pop
xor
adc
pop
xchg
jge
fldenv
or
sub
or
mov
in
ljmp
sbb
test
pop
jb
imul
mov
lret
aas
mov
cmp
xor
push
adc
lea
mov
call
add
push
pushl
or
push
pusha
or
or
push
pop
ret
mov
push
gs
jg,pn
push
and
push
or
push
sbb
cli
iret
jmp
out
ds
push
mov
sub
push
das
mov
jb
lods
imul
scas
lahf
cmp
clc
mov
in
cmp
sub
lods
arpl
jae
fmull
pop
inc
pop
xchg
lds
iret
dec
lods
sub
mov
outsb
sub
xor
sahf
inc
sbb
sub
fstpt
hlt
inc
jne
jp
repnz
cs
sahf
ret
sarb
nop
dec
dec
shll
jp
jns
push
shlb
adc
push
imul
rcr
mov
xor
in
ficompl
xchg
mov
ss
imul
loop
incb
pop
mov
mov
pop
and
pop
hlt
in
scas
loope
iret
imul
shlb
inc
lret
les
jle
xchg
xchg
mov
mov
pop
xor
repnz
jno
xor
cmp
mov
jl
test
inc
addl
hlt
inc
stc
int
daa
shrl
int
sbb
inc
shrb
out
xchg
std
gs
cmp
pop
xor
jnp
fwait
or
testl
and
jnp
adc
xor
inc
xor
xor
insb
pushf
pop
mov
imul
ror
pop
test
inc
imul
pushw
vfnmsubpd
mov
stos
movsb
or
pop
iret
adc
or
mov
mov
xor
add
push
cmpsb
imul
dec
psubsb
fwait
push
adcb
sbb
testb
jnp
shr
sbb
ret
or
test
add
popa
aam
cld
push
mov
adc
or
push
stc
xchg
rcrl
aam
mov
ss
dec
repnz
pop
js
xor
fucomi
push
mov
or
enterw
sbb
js
mov
push
add
iret
jecxz
std
dec
fdivr
mov
insl
sarb
cmp
popa
das
aaa
out
push
push
pop
lcall
mov
pop
icebp
nop
jns
js
ds
cmpsl
xchg
mov
int
scas
or
push
push
pushf
int3
inc
jl
push
bound
into
gs
scas
aas
fistpll
shll
fidivl
les
dec
cmp
push
jbe
mov
inc
out
cmp
mov
ret
dec
and
mov
addr16
xchg
lea
and
enter
and
ret
pop
hlt
stos
mov
push
fimuls
rorl
sub
mov
add
sbb
dec
add
popa
cs
out
mov
pop
fidivs
mov
sbb
arpl
pop
fdivrs
movb
inc
pop
add
and
sub
and
outsb
dec
pop
dec
imul
movsb
cmpsl
mulb
sbb
data16
add
xorb
inc
insb
repnz
leave
popf
dec
cld
in
xor
fldcw
jle
ficompl
dec
fdivl
mov
addr16
stos
mov
cmp
inc
in
pop
and
inc
addr16
scas
jg
mov
xlat
pushf
mov
insl
sti
jnp
pop
adc
sarb
dec
in
and
jecxz
mov
xor
lods
test
cs
dec
ja
and
mov
int3
dec
mov
mov
push
lahf
sbb
xchg
pop
stos
adc
cwtl
rorb
cld
out
mov
in
jle
repnz
and
pop
aad
bound
xchg
ret
icebp
xchg
and
mov
jbe
ret
sub
sbb
add
mov
fucom
loope
fiadds
or
shlb
pop
mov
loopne
rcll
pop
jg
add
mov
shrl
ret
leave
dec
dec
fisttpl
or
pop
aad
mov
sarb
pop
fstpl
sub
sub
mov
add
sbb
mov
xchg
push
decl
ljmp
or
xor
sub
test
xchg
mov
gs
jge
fwait
cmp
xor
repz
stc
stos
jg
pop
movsb
dec
adc
add
std
ja
gs
or
aad
pop
inc
stc
jg
push
add
lcall
addr16
jp
mov
adc
mov
adc
xorps
cmpsb
mov
loope
xchg
cmpl
push
int
iret
in
adc
pop
adc
sbb
mov
shrl
popf
or
push
adc
cmp
sbb
es
repnz
enter
test
pusha
xchg
js
mov
pushf
and
int
push
shll
ljmp
aad
and
ja
sti
jno
and
rcll
test
ror
push
adc
out
xor
xchg
lods
inc
jl
rcll
mov
dec
rol
dec
jnp
scas
sub
adc
sbb
cmc
pop
jno
add
daa
adc
push
jp
lret
inc
icebp
hlt
je
xchg
outsl
sbb
xlat
ret
mov
push
filds
inc
stos
sbbl
inc
repnz
add
xchg
or
into
out
pop
mov
xchg
into
fimuls
mov
mov
xchg
jne
fst
inc
pcmpgtw
mulb
lret
movsb
jge
pop
test
cmp
lea
mov
call
push
cs
cmpsb
repz
int
sub
out
lret
xchg
out
in
adc
mov
lea
jno
push
dec
mov
and
cli
jg
xlat
ljmp
push
jle
mov
stos
mov
rorl
push
dec
sub
cli
cmp
push
xor
cmp
jl
push
mov
xchg
xor
mov
rep
fs
mov
sbb
inc
fildll
hlt
loope
adc
xchg
jnp
xor
or
int3
pop
rcr
inc
mov
mov
and
fs
inc
ret
int
adc
ret
xchg
outsl
lcall
xor
mov
shlb
mov
loope
pop
xchg
aaa
pop
sub
clc
xor
mov
cmp
pop
pop
out
js
xchg
stos
sub
pop
cmp
mov
test
es
or
mov
in
xor
mov
sub
fdivr
push
sti
add
aad
in
sub
in
sbb
movb
data16
pushf
outsb
out
ss
xor
out
or
nop
inc
pop
jg
cmp
jp
inc
stc
xchg
ret
add
icebp
lods
dec
add
xchg
cmp
pop
push
inc
mov
and
cmp
sub
jg
pop
hlt
sub
mov
xchg
fidivs
pop
scas
jmp
shlb
lock
or
fidivl
xlat
ret
mov
push
subb
stc
push
das
mov
icebp
ret
in
adc
test
scas
pop
clc
push
xor
stos
outsb
xorb
inc
mov
loop
xchg
xor
fidivs
dec
sbb
shlb
dec
mov
inc
mov
iret
sub
push
fldcw
loopne
popa
movsb
xchg
inc
in
push
or
sub
pop
in
aaa
ficompl
int3
mov
fmull
cltd
sarl
rcr
adc
je
out
outsb
sbb
testb
insl
xlat
lcall
scas
xchg
or
scas
test
mov
lahf
mov
mov
out
mov
cmp
mov
outsl
jg
out
int
insl
clc
push
mov
sahf
fcom
adc
pop
xor
insl
or
mov
xor
xor
dec
lea
dec
int
les
jno
sub
incb
inc
adc
inc
xor
xchg
add
mov
add
cmp
inc
pop
pusha
subl
inc
sbb
icebp
lea
pop
cmpb
jne
sub
in
dec
pop
cmp
pushf
enter
addr16
ss
ror
jnp
push
shl
adc
decb
xor
dec
push
xor
testb
adc
icebp
mov
push
lods
lea
mull
xor
add
in
ficoms
sub
ret
jae
loopne
push
stos
pop
dec
xor
nop
nop
or
loope
add
das
movsb
jmp
cmpsl
stos
repnz
shrb
jb
loope
inc
and
mov
shrb
pop
push
cmpsb
mov
hlt
repz
shlb
dec
sbb
pop
inc
jecxz
push
inc
lahf
cmp
or
popa
dec
fwait
out
pop
lahf
xchg
xchg
jle
pushf
fiadds
mov
or
xor
cmp
icebp
inc
inc
jbe
orl
add
and
enter
ss
loope
pop
cmc
dec
subl
and
pop
sub
fxch
add
xchg
outsb
dec
push
xor
jae
or
jne
scas
jo
insl
cmpsb
adc
lahf
pop
jl
sub
pop
ja
dec
inc
test
dec
lds
adc
push
pop
lret
dec
push
sbb
int
aam
bound
sub
jo
mov
scas
sbb
mov
sub
sbb
mov
jne
loop
mov
sarl
add
xor
jno
add
cwtl
lds
xor
iret
pushf
jae
xorl
push
cmpb
icebp
xchg
rcl
add
or
mov
fs
cmp
push
xchg
mov
xchg
or
fadds
lcall
movsb
jns
xorb
xchg
adc
pop
push
iret
jp
push
fnstenv
ret
rorb
aas
sub
stos
xchg
add
add
pop
imulb
xor
icebp
mov
test
dec
cmp
jge
sti
loopne
out
in
inc
fwait
imulb
roll
push
jns
scas
mov
and
mov
in
repz
pop
loope
notl
lret
xchg
push
mov
div
jne
scas
out
loopne
add
loope
aaa
add
xor
and
dec
lock
add
push
xchg
pop
ljmp
sbb
es
jno
dec
cmp
aas
mov
mov
hlt
lods
cmp
adcl
mov
mov
negl
leave
pop
xor
loope
jmp
adc
repz
cmp
pop
dec
mov
mov
and
mov
pop
cmp
arpl
dec
out
je,pn
lods
loopne
mov
fiadds
cmp
in
scas
xor
enter
add
out
sbb
daa
or
fwait
adc
inc
lods
adc
push
shl
std
jmp
enter
aad
mov
sub
lds
shll
repnz
cmp
mov
sbb
jbe
adc
sub
jns
stos
and
or
push
stos
cmp
mov
push
jne
sub
xor
lods
push
cmp
push
inc
sbb
xchg
test
or
ret
push
ja
sahf
sbb
lret
pop
loope
push
shrl
or
jno
andl
sbb
out
fwait
or
inc
arpl
lods
mov
ja
sub
test
repz
cltd
ss
cmp
jbe
sbb
es
sbb
mov
mov
jae,pt
cmp
pmullw
rorb
pop
or
arpl
sub
cvtps2pd
cmp
div
test
inc
mov
cmp
pusha
sub
out
out
lahf
popf
fmul
or
stos
or
rcrb
jbe
sub
pusha
add
pop
ds
add
or
xor
jl
aam
mov
cmp
push
leave
ljmp
xchg
iret
and
roll
iret
or
sub
push
je
dec
dec
mov
in
pop
and
fsubrl
dec
cs
push
test
stos
into
stos
pop
loopne
xor
sahf
andb
lds
les
cmc
push
in
xor
xchg
addl
pop
addr16
push
jbe
push
jb
push
push
cmc
scas
adc
mov
test
sub
sbb
out
add
push
pop
repnz
jne
inc
cmpsl
loope
js
lahf
lock
mov
mov
xchg
fsqrt
pop
cwtl
sbb
and
out
push
mov
fst
pop
out
push
inc
outsl
jmp
ljmp
fisttps
jno
pop
mov
mov
inc
arpl
xor
imul
mov
ljmp
lods
insl
dec
cmp
inc
int3
lret
cmp
pop
repz
ret
jmp
mov
cmp
xchg
xchg
sbb
fs
jecxz
xchg
mov
and
dec
cs
add
data16
addr16
xchg
loop
xchg
push
ds
cmp
jbe
or
and
sbb
mov
jns
in
les
inc
test
jecxz,pn
daa
mov
bound
dec
mov
ret
fidivs
hlt
sub
lods
pop
into
push
lods
jns
inc
xchg
fsubl
mov
pop
iret
out
xor
lock
iret
ret
insb
loopne
xor
stos
lcall
lret
add
sub
test
inc
push
dec
test
pop
and
xor
inc
and
outsl
div
mov
and
inc
add
mov
int3
mov
bound
out
das
rcrb
mov
push
xchg
mov
cmp
ret
add
adc
adc
dec
out
clc
rol
xchg
push
cmc
rcrb
mov
pushf
pop
fbstp
pop
sub
mov
mov
cld
jno
repz
sti
arpl
jo
mov
mov
mov
stos
lea
je
cs
loop
cmp
out
add
push
inc
je
cld
ds
inc
jne
loop
stc
call
test
cld
push
popf
sbb
xchg
inc
in
sahf
jno
jle
cmpsl
mov
jg
lcall
call
out
pop
leave
pop
bound
daa
push
mov
ds
and
fcompl
pop
pop
dec
cmc
mov
pop
mov
sub
xor
fcomi
adc
or
mov
xor
fs
sti
int
dec
aam
int3
mov
movb
ret
push
sub
jge
dec
inc
sbb
loopne
dec
insb
sub
xlat
and
xor
inc
sti
push
xchg
js
out
xor
loopne
in
dec
mov
cmp
mov
ret
sbb
or
outsl
cmpsb
cmp
stos
rcll
add
pop
hlt
aas
mov
and
jnp
pop
xchg
jo
cld
sbb
nop
mov
in
push
cmovs
movsl
rol
lret
pop
subl
push
pushf
xor
shlb
nop
xchg
cli
pop
cwtl
out
fildll
push
lods
addb
icebp
jge
add
rol
loopne
popf
ret
aas
xorb
je
faddl
pop
mov
xor
in
outsb
push
jae
and
add
add
enter
cmp
sub
jne
or
adc
fidivrl
cmp
in
push
fcoml
jbe
dec
out
inc
outsl
lcall
adc
loopne
mov
enter
idivl
fisttpl
mov
mov
pop
fwait
int3
xlat
xor
inc
dec
sbb
and
cmp
jmp
ret
sub
dec
aam
or
cld
mull
xor
or
scas
icebp
gs
aad
jge
sub
ljmp
mov
jle
aaa
and
data16
jne
mov
xchg
in
lcall
pop
lcall
jns
repz
xchg
push
loop
div
popa
xchg
cmp
test
std
add
xchg
hlt
sbb
push
jne
push
mov
sub
mov
mov
sub
sbbb
or
dec
pop
outsl
cmp
or
in
pop
mov
jo
inc
mov
lods
mov
loopne
das
pop
xor
push
pushf
mov
mov
add
in
jbe
pop
push
push
mov
or
sbb
mov
in
push
or
out
iret
sbb
inc
cmpsl
nop
in
addr16
jp
mov
mov
add
jge
mov
outsb
lret
xor
adc
mov
rcll
cmp
mov
mov
test
test
jb
imul
stc
int3
jbe
stos
int
scas
clc
fdivl
inc
or
loope,pn
jmp
into
add
paddd
popf
adc
inc
mov
bound
sub
fdivl
imul
or
jecxz
xchg
inc
fnstenv
stos
xor
adcl
mov
test
ds
xchg
clc
pop
jge
fcomps
sub
in
das
xchg
xor
leave
outsb
mov
push
add
leave
stos
das
fidivs
lds
adc
inc
fildl
hlt
pop
xor
mov
xchg
fsubs
or
xor
lret
add
outsl
ljmp
int
jmp
or
mov
rorl
mov
mov
cmc
lea
pop
js
fsubl
xor
mov
sbb
mov
cmp
pop
movb
negb
push
aas
sub
pop
es
mov
mov
push
aad
pop
enter
mov
in
data16
sbb
test
xor
xorb
inc
jnp
cmp
aam
lret
loopne
inc
dec
push
rcrb
cmp
push
or
jns
ja
int3
bswap
cmp
call
push
jmp
push
int3
arpl
std
jmp
jg
inc
jo
mov
mov
mov
pushf
notl
pusha
stos
adc
mov
mov
dec
jmp
and
pop
into
push
mov
mov
push
mov
add
clc
fldl
sti
aaa
loope
pushf
int3
or
adc
or
mov
push
lcall
sbb
imul
ret
pusha
mov
nop
negb
dec
sbb
std
test
loope
pop
orl
cmp
jbe
outsl
fsubr
ret
in
stc
movsb
popf
out
das
xchg
cmp
jns
sbb
aas
jp
lret
popf
pop
lds
inc
ljmp
push
lret
cli
cwtl
outsl
icebp
in
jge
aad
ljmp
sub
mov
popf
jmp
dec
mov
pop
arpl
lock
fldl
rcrl
adc
cmp
fiaddl
arpl
mov
loop
outsb
gs
rolb
adc
dec
mov
push
idivl
addr16
jmp
das
adc
repz
xchg
out
loop
out
adc
pop
mov
daa
mov
add
repz
in
aaa
fwait
jge
fucom
scas
imul
xchg
cltd
or
je
stos
adc
jnp
jmp
cmp
loope
cmp
mov
inc
xor
dec
out
add
xor
lea
iret
imul
iret
in
sub
push
aad
out
jae
jns
jp
aas
int
push
dec
push
mov
ret
sbb
push
cmp
stc
sarb
jne
fwait
jae
jns
fstpt
sub
aam
in
ja
daa
jae
sub
push
cs
cmpsl
push
xor
push
enter
xor
int
out
mov
jmp
and
and
xchg
cmp
and
push
sti
add
or
jp
mov
repz
outsb
inc
fwait
decb
repz
sub
sub
arpl
iret
shrl
cmp
sbb
jnp
clc
xor
sub
loope
jp
loop
out
ja
inc
dec
stos
fmull
and
dec
mov
divb
ja
inc
loope
cmpsl
jge
add
imulb
dec
add
push
ja
idivl
xchg
sbb
inc
sub
out
nop
dec
fistps
add
cmp
ffreep
decb
loope
popa
hlt
inc
fs
repz
repz
gs
inc
sub
or
or
sbb
mov
pop
jns
aad
in
and
das
mov
push
xor
xor
in
inc
xchg
cmc
out
repz
into
push
aaa
cltd
fidivrl
sbb
ds
movsb
mov
fldl
test
jmp
gs
mov
cmp
push
lret
xchg
test
out
cltd
out
aaa
pop
les
sbb
pop
pusha
push
mov
xor
adc
mov
std
add
insl
adc
paddusw
sbb
dec
jnp
or
and
fdivrs
ja
popf
mov
sahf
movsl
sub
repnz
divl
das
xor
push
adc
push
push
add
loop
push
out
pop
xchg
stos
jg
xchg
fnstenv
icebp
shll
sub
shll
ja
hlt
mov
es
repnz
arpl
rcll
pop
add
mov
out
std
cld
fxch
push
les
or
xchg
lds
mov
sbb
out
jecxz
jge
mov
jae
out
mov
xlat
xchg
es
jmp
into
fwait
pop
pop
add
dec
ret
movsl
mov
stos
pop
aas
push
sub
das
sbb
jle
arpl
fidivrs
jp
jle
cmp
cmp
out
xor
jo
push
jg
mov
icebp
test
ljmp
lcall
notb
xlat
push
sbb
xor
sahf
dec
es
pop
inc
mov
mov
in
ja
or
xchg
shll
and
push
pop
rorl
jns
and
fisubs
mov
sub
adc
js
fdivs
clc
cmp
adc
and
cmp
lret
pop
cmp
inc
in
dec
pusha
inc
push
lcall
jae
xor
shrb
addb
cltd
fisubrl
mov
cltd
jecxz
shl
dec
fbstp
subb
xor
scas
js
mov
lods
int
in
adc
lock
dec
dec
idiv
in
ret
in
jp
inc
sub
fsubrs
xchg
lret
xchg
bound
popf
movl
idivb
test
mov
xchg
ljmp
cmp
arpl
fcomi
mov
mov
adc
add
fwait
scas
push
or
daa
gs
jg
push
inc
dec
mov
sbb
ljmp
jne
les
or
enter
ret
add
mov
shr
inc
test
lods
xor
push
pushf
ret
cmp
xor
push
icebp
ja
push
loop
inc
aam
orl
pop
js
testl
mov
ja
adc
push
in
fidivrl
les
addr16
iret
or
add
out
fwait
adc
cmc
sub
xchg
xchg
call
push
mov
xchg
pop
xchg
ss
into
popf
dec
pop
mov
out
in
push
addr16
xchg
cmc
std
lret
sub
xchg
sahf
xor
cmp
inc
mov
mov
push
arpl
inc
into
andl
mov
shlb
fisttpll
push
ja
dec
pop
xor
jmp
xchg
xchg
jecxz
int3
mov
scas
insl
xor
xor
imul
clc
dec
jmp
leave
cmpl
in
jo
pop
pop
mov
addb
push
mov
add
pop
push
jecxz
lock
repnz
sub
and
cmp
jne
pop
mov
lcall
in
ficoml
lods
repz
mov
xlat
cmpsb
xor
xchg
ret
loopne
cmp
jbe
xchg
les
cs
xlat
sub
mov
cmp
movsb
push
shlb
cmp
sahf
stos
pop
insb
jne
mov
add
imul
push
cwtl
xchg
lds
popa
stos
mov
cmp
mov
pop
popa
gs
jge
jp
mov
pop
jmp
shr
add
aam
pop
jle
js
cmp
ljmp
xor
pushf
mov
rorl
cmp
loope
push
add
inc
out
jmp
jbe
and
and
ret
adc
cs
and
pushf
stos
xor
lds
out
xchg
enter
into
xor
jmp
cmp
jno
cmpsl
or
in
clc
pop
jne
js
cli
sbb
push
inc
sbb
push
inc
pop
repnz
mov
add
mov
into
push
push
lahf
outsl
push
addl
push
stos
mov
fnstcw
and
xchg
hlt
mov
cmp
popf
stos
cwtl
mov
cmc
lcall
icebp
ret
dec
call
scas
out
adc
sub
dec
cmpsl
imul
xchg
mov
dec
data16
mov
popf
pop
jecxz
ja
stc
mov
fwait
push
dec
pop
jecxz
jo
or
lock
and
jecxz
mov
jno
lahf
add
inc
inc
xchg
jno
stos
daa
jne
mov
lods
gs
jne
je
mov
sub
jl
add
popa
add
popf
add
jge
lds
jecxz
ds
pop
mov
enter
dec
mov
inc
push
je
adc
or
add
jae
and
xchg
out
xchg
mov
mov
adcl
sahf
push
cltd
stc
mov
add
and
out
xchg
stos
mov
add
insl
adcl
fucomip
and
es
or
scas
cld
mov
popf
fcomps
xor
mov
imul
mov
sbb
jae
or
aaa
inc
and
xchg
aas
lcall
sub
shll
outsl
xor
cmp
mov
xor
dec
outsb
mov
loopne
lds
mov
mov
sub
dec
push
push
jb
decl
loopne
xchg
cs
xchg
ret
mov
in
push
loope
rorb
subb
jno
and
xchg
scas
stc
add
fistl
mov
inc
and
xlat
mov
test
push
jne
xchg
sub
out
fdivrs
jle
push
or
es
imul
outsl
lods
inc
cltd
mov
shrl
inc
or
add
cltd
xor
in
daa
xlat
test
xor
xchg
mov
mov
sbbl
mov
mov
stos
pusha
pop
fadds
movsb
scas
lahf
in
dec
fidivs
mov
into
jmp
cmc
out
lcall
push
stos
mov
in
fcmovu
xchg
mov
lret
inc
mov
in
inc
sub
pop
insl
xchg
jno
shl
clc
add
adc
mov
scas
out
loop
mov
ja
mov
mov
push
fcoml
mov
into
jg
xchg
cmp
xchg
inc
daa
or
dec
test
aad
shrb
divb
pop
mov
dec
lea
dec
adc
scas
or
xor
mov
in
data16
out
cltd
push
ret
dec
adc
ret
add
sti
push
in
sbb
je
imul
lods
mov
into
daa
mov
movsb
daa
sahf
cmp
pcmpeqd
outsb
pop
test
push
ret
mov
xchg
mov
cltd
or
inc
pop
ret
in
sub
mov
mov
imul
popf
dec
mov
les
jmp
dec
push
and
mov
or
or
pop
mov
fisubrl
out
std
pop
bound
push
sub
dec
mov
jnp
pop
aaa
pop
cwtl
push
mov
pop
jmp
sahf
lods
mov
lods
push
enter
test
xor
push
push
push
mov
adc
add
add
lods
xlat
ficomps
in
push
scas
fists
cwtl
mov
add
and
mov
xchg
sub
jmp
jp
ficomps
push
int3
pusha
icebp
lret
pop
lods
cli
xor
sub
test
adc
lsl
dec
add
xor
and
push
popa
adc
scas
jns
lea
nop
mov
jbe
pop
cmpsl
add
or
insl
jne
sbb
and
out
shl
sub
mov
movsb
cmpsl
aad
aad
mov
sbb
inc
jae
fisttps
jmp
into
jp
sbb
ficoms
mov
mov
not
jp
xchg
mov
mov
dec
bound
xor
pop
adc
fs
jbe
cmpsb
adc
pop
in
and
iret
mov
pop
sbb
jae
pop
push
push
or
jge
rcll
mov
xor
sub
fs
out
cli
push
inc
inc
add
cli
rcll
cli
jp
inc
daa
add
mov
dec
imul
outsl
sbb
xchg
jno
jbe
fdivp
inc
cmc
into
sbb
js
das
lcall
xchg
pop
movaps
das
push
std
mov
arpl
popa
and
mov
and
xor
repz
xor
stc
addr16
and
push
jecxz
cmp
mov
adc
test
mov
fnsave
fsubrs
jg,pn
lods
mov
sub
imul
adc
sub
stos
add
icebp
lods
ja
movb
ret
movsb
pop
sbb
xor
mov
inc
gs
jmp
pop
mov
dec
inc
aas
cli
orb
adcb
mov
movsl
sahf
xchg
into
jge
pop
and
cmp
pop
js
lock
or
xor
dec
cmp
add
push
push
loop
mov
jge
pop
lahf
add
stos
nop
mov
ds
mov
shll
jecxz
scas
inc
mov
pop
push
adc
test
mov
stos
add
sahf
out
xchg
push
and
cmp
jmp
fnsave
inc
lds
mov
jnp
jmp
sub
mov
sub
rolb
push
insl
repz
sub
push
in
int3
xchg
lock
stos
and
pop
lahf
mov
or
lds
pop
push
cmpsl
jmp
mov
sub
xor
leave
pop
or
ss
in
or
hlt
fisubl
notb
and
int3
pushf
testb
pop
lret
pop
xchg
or
imul
iret
mov
cmp
jnp
lock
mov
jbe
sub
cmp
cmpsb
scas
into
sbb
and
daa
jle
add
inc
add
int3
fcomps
fcom
in
adc
jmpw
fcompl
jle
aam
ret
cmp
xchg
fdivrl
cmp
push
fidivs
insl
mov
fisubrs
lret
adc
mov
sbb
pop
or
rclb
jg
loope
int3
xchg
lret
enter
push
jmp
shr
xorl
and
out
xchg
test
adc
scas
mov
mov
and
mov
outsl
or
psllw
rcll
loope
int3
stos
ret
test
pop
cmpsb
cmp
popf
mov
aas
add
in
lret
sbb
sbb
out
mov
iret
lcall
pop
dec
filds
mov
xor
pop
mov
in
mov
test
lods
lret
inc
mov
sbb
push
ret
sub
inc
idiv
stc
movsb
daa
js
clc
outsl
fucomip
add
push
js
cmp
jb
pop
cmpsb
xor
mov
into
jle
mov
add
inc
inc
cmc
mov
sub
pop
mov
mov
xchg
mov
or
adc
int
push
jnp
add
loop
mov
test
mov
movsl
js
mov
in
aaa
mov
sarb
pop
les
xchg
subb
iret
in
shlb
outsb
or
call
cmc
xchg
pusha
mov
jmp
sahf
push
loop
pushf
xor
aas
xchg
data16
pusha
loopne
add
and
and
xor
xchg
hlt
pusha
add
lds
mov
and
test
or
neg
ja
and
pop
lods
mov
or
daa
stos
in
and
sahf
or
inc
sbb
loopne
xorl
xchg
shlb
in
and
inc
jg
xchg
cmp
mov
lahf
int
inc
out
mov
sbb
pop
int3
scas
xchg
jns
or
ret
outsl
faddl
lret
sub
lods
sub
mov
mov
add
xchg
or
dec
insl
add
out
jmp
sbb
cmp
sub
cmp
xorb
movsl
in
loopne
in
jb
cmpsl
das
sbb
add
mov
xor
dec
aam
sub
sbb
cmpsl
sbb
rolb
aam
iret
mov
popa
roll
movsl
aam
dec
mov
xchg
fs
insl
mov
cmp
arpl
pop
inc
sbb
cli
push
adc
mov
sbb
mov
add
sub
sahf
lret
test
mov
fwait
push
adc
ret
jbe
aad
jl
filds
jp
das
or
out
call
cmp
sbb
xor
daa
jb
repnz
loopne
mov
int
cli
hlt
inc
jno
mov
adc
rcrl
xorl
pop
inc
mov
aam
and
int3
sub
fists
add
sbb
js
je
cld
add
and
jmp
sahf
popa
inc
push
inc
or
add
mov
push
imul
imul
adc
xor
lds
jbe
jge
cli
xchg
lds
dec
inc
xor
xchg
out
and
or
or
push
mov
testb
fadd
mov
cmc
test
mov
pop
xchg
xor
inc
idivb
scas
inc
rcrl
scas
cmp
cmpsb
imul
in
jmp
test
xchg
dec
push
or
cwtl
cmpl
jo
push
and
or
cmp
mov
xor
leave
cli
adc
lds
sahf
or
xchg
jmp
call
inc
or
and
dec
mull
cmpsb
dec
sbb
int
aas
xor
repnz
xchg
cmpsb
mov
or
loop
and
decl
push
pushf
cs
mov
shrl
dec
jns
loope
xor
add
pop
or
out
cmp
push
stos
aam
mov
imul
pushf
lods
pusha
fcomps
pop
bound
rclb
lret
mov
jne
mov
into
cwtl
jne
adc
cli
out
and
xchg
insb
testb
jnp
and
into
ret
mov
fnop
movsl
xor
in
xor
pop
jl
push
push
dec
std
es
mov
push
push
fs
xchg
pmaxub
push
sahf
sbb
cmc
cmp
xchg
mov
and
pop
das
loop
or
dec
jge
js
idiv
sub
pop
pop
into
fwait
sarb
dec
nop
daa
cmp
push
adc
xor
subb
hlt
mov
icebp
inc
lock
outsl
add
push
push
dec
cmp
add
xlat
inc
lods
jae
and
scas
xor
push
lret
inc
pop
mov
in
sahf
sti
jns
pop
mov
popa
xlat
jnp
mov
into
mov
adc
sub
in
ret
enter
dec
pushf
repz
sbb
and
popf
jo
cmp
out
add
push
jae
leave
xor
mov
or
add
and
arpl
jae
xor
cmpb
dec
rep
xor
scas
inc
clc
nop
sbb
sub
lret
xor
mov
xchg
lods
fadd
leave
mov
scas
adc
add
and
loope
pop
adc
add
mov
cmp
leave
inc
xor
jb
call
adc
sbb
sti
jle
outsb
dec
aas
jne
cmp
or
mov
mov
jecxz
sub
test
mov
xor
mov
ds
adc
mov
insl
idiv
pushl
rcrb
inc
stos
sub
iret
bound
xchg
and
mov
xchg
movsb
and
inc
insl
movsl
aas
in
mov
xor
fisttps
insl
pop
je
xchg
mov
sub
jp
or
xchg
push
mov
cmp
inc
push
sti
arpl
js
pop
xor
xorl
xchg
in
mov
mov
movsb
dec
fidivrl
fs
adc
or
xchg
xchg
js
dec
gs
scas
inc
xchg
ja
cwtl
or
popa
inc
ljmp
jge
popa
lahf
inc
repz
inc
xor
jle
cmc
into
mov
cli
cmp
sbb
mov
pop
out
ds
jge
and
push
leave
lahf
dec
xchg
ret
mov
aad
and
mov
add
fstl
jae
fs
inc
mov
mov
cmpsl
sahf
pop
stos
inc
out
sub
pop
push
jl
pusha
dec
pop
adc
dec
sbb
int3
xchg
mov
jne
jns
jmp
mov
pop
mov
mov
popf
xchg
add
pop
iret
inc
lods
mov
or
scas
push
loope
jmp
pop
jl
pop
arpl
dec
and
lods
imul
stos
fnsave
ss
ja
push
pop
lahf
xor
in
add
jb
mov
cltd
pop
lret
loopne
call
adc
push
inc
and
jmp
je
sub
enter
popf
mov
dec
mov
xor
mov
pop
add
stc
push
iret
push
sub
enter
mov
mov
clc
lahf
icebp
xchg
mov
xchg
sarb
jns
sahf
mov
cmpsl
or
add
xor
adc
xchg
out
fisttps
pop
pop
pop
push
inc
push
pop
pop
das
sbb
iret
aam
sti
or
imul
pop
sub
and
mov
std
outsl
and
pusha
sbb
pop
xchg
mov
jb
xlat
inc
adc
sahf
sahf
jge
rcr
ret
pop
pop
inc
add
ret
test
lret
in
mov
jecxz
inc
pop
daa
mov
ficompl
addl
lret
cmp
insb
cld
in
mov
test
mov
jg
inc
mov
xlat
imul
fdivl
icebp
and
ds
jmp
mov
cmpsb
push
ss
mov
or
fs
xlat
popf
or
daa
in
jecxz
jnp
dec
xchg
push
jb
xchg
pop
mov
in
pusha
fs
xchg
cmp
xor
lret
mov
fmull
ffreep
stos
dec
inc
jbe
das
push
mov
test
loopne
and
je
cmc
pop
sub
pop
sub
mov
hlt
lea
or
or
jnp
adc
and
or
sbb
and
jp
cmc
and
cmp
ja
mov
mov
cmp
loopne
cmp
stc
xor
jne
lret
adc
lret
shl
adc
xchg
into
pop
mov
sarl
inc
stos
call
xchg
jbe
cmp
cltd
pop
pop
stos
dec
mov
int3
jl
push
call
mov
fldenv
sbb
push
jb
mov
xchg
aaa
data16
scas
shrl
dec
xchg
push
sbb
stc
movsb
cmp
jbe
test
in
loop
cmp
jp
xchg
insb
int3
push
pop
pusha
lcall
in
pop
test
push
jb
xchg
mov
in
in
scas
push
loope
xchg
adc
xor
jmp
pop
je
adc
xor
sbbb
xchg
adc
aaa
outsl
in
mov
fs
dec
rcrb
jecxz
sti
and
mov
nop
or
sub
or
sub
xlat
and
inc
sub
dec
mov
ret
sbb
xchg
push
mov
mov
adc
test
shl
add
rcrb
cmp
shll
pop
push
daa
jb
xor
in
arpl
jl
xchg
inc
mov
add
jp
movsb
dec
mov
sarl
daa
loop
daa
hlt
cld
pusha
add
inc
jmp
outsb
lret
pop
call
cmp
jmp
arpl
sub
mov
mov
inc
pusha
shr
xor
fstps
mov
cmp
dec
mov
sbb
push
or
jbe
xchg
inc
sbb
jge
arpl
xchg
nop
jle
pop
adc
mov
roll
cmp
imul
gs
mov
dec
pop
imul
dec
lcall
popa
mov
or
iret
insb
and
dec
push
cmpsl
and
jmp
xchg
sysexit
out
lock
daa
pop
xchg
mov
jbe
push
cltd
insb
sbb
cmp
dec
out
je
adc
test
cltd
cmc
sbb
dec
fcomps
dec
jle
test
ret
aam
mov
or
addr16
push
xor
sub
jb
pop
mov
je
cltd
mov
sbb
dec
and
pop
jnp
lods
pop
shr
das
pop
mov
aaa
sahf
ret
out
mov
mov
out
clc
jl
fildl
fldl
ret
and
jecxz
es
dec
mov
outsl
mov
imul
mov
nop
cld
jbe
fsubrs
xchg
push
fmuls
xor
mov
or
add
push
adc
fnstsw
imul
repnz
insl
xchg
cmp
sti
leave
outsl
adcb
mov
sarl
in
lahf
mull
movb
sbb
mov
xor
or
data16
sahf
nop
jae,pn
mov
imul
jp
aas
ret
jmp
jbe
pop
in
inc
fisttpl
pushf
stos
or
push
pop
and
stos
inc
or
mov
push
outsb
gs
lds
cmp
hlt
dec
jle
call
inc
push
sub
mov
cmpl
lods
mov
int
mov
xor
inc
fincstp
daa
out
xor
testl
sahf
jne
xor
mov
jne
pop
xor
dec
xchg
sbbb
sub
std
nop
shll
insb
or
cmc
push
addr16
sbb
cmp
xor
sbb
push
xchg
ret
aaa
insb
pop
and
xor
mov
fcoms
inc
fldl
mulb
push
cmp
icebp
in
lret
mov
mov
das
mov
fdivl
rorl
xor
stos
fstl
repnz
sub
jnp
dec
mov
lods
cs
scas
aaa
sub
in
popa
insb
nop
inc
std
dec
jle,pt
icebp
cmp
xchg
aaa
stc
mov
jno
or
dec
movsl
mov
fists
testl
out
hlt
mov
xorb
push
or
jo
sub
sub
fldl
insl
rcl
les
cmp
dec
clc
xorb
popf
dec
mov
loope
rcll
andb
xchg
mov
mov
loope
sbb
ds
out
clc
bound
cmp
sub
xchg
push
push
cmp
pop
adc
es
adc
in
inc
mov
push
into
out
mov
inc
mov
pop
rep
pop
cltd
loopne
cltd
inc
cltd
ss
hlt
out
jecxz
popa
fisttps
es
in
bound
mov
ss
mov
xor
jle
mov
mov
xor
and
pop
clc
add
std
add
les
mov
mov
adc
js
sbb
pop
pop
lahf
cmp
pop
fbld
hlt
cmpsb
jecxz
daa
into
sub
adc
rclb
xorb
adc
mov
xor
jns
pushf
xor
aas
outsb
add
repz
mov
ljmp
lds
mov
dec
fcomps
push
lret
loopne
mov
dec
fcoms
or
pop
cmpsb
subl
dec
sub
lods
aam
pop
jp
sbb
mov
daa
shll
mov
jle
cwtl
push
mov
aas
mov
subl
xchg
cmpsb
ficoml
ret
fsubrs
test
sub
cmpl
fists
mov
sbb
xchg
push
mov
out
or
sub
push
cld
stos
and
clc
aas
pop
mov
xlat
pushf
movsl
jp
out
jl
jle
sarb
add
and
ss
mov
xor
push
xchg
push
cmpsb
sub
push
push
cmc
pop
add
out
dec
incb
pop
pop
movsb
push
sub
and
xchg
loop
adc
lahf
inc
repnz
mov
inc
insl
add
pop
mov
int
push
cmp
bnd
add
icebp
pop
mov
cwtl
ss
push
inc
popf
xchg
lock
in
pop
movsl
jb
sahf
aad
test
stc
jns
aaa
jl
xor
and
mov
adc
dec
push
and
fldl
jb
das
call
ljmp
jae
sub
jb
cmp
pop
xchg
push
in
rcrl
aad
int
test
fsubrl
jne
push
jne
push
test
cmp
ds
mov
jmp
pop
lds
add
push
nop
push
mov
pop
cmc
mov
pop
or
xchg
popa
fwait
mov
cmp
sub
fidivs
daa
shlb
cld
xchg
cltd
xchg
mov
xor
add
mov
sbb
aad
fiadds
shlb
icebp
fs
js
rcll
sub
or
loop
mov
cmc
fiadds
xchg
sub
jo
dec
in
mov
in
mov
adc
push
andb
dec
in
mov
sbb
cmp
mov
out
push
or
stos
rclb
jb
jge
pushf
mov
outsl
mov
fwait
hlt
int
test
push
outsb
fcmovnb
les
inc
outsl
dec
cwtl
push
push
inc
inc
adc
sub
cs
iret
pusha
xlat
add
pop
out
push
cmp
out
jb
push
or
mov
cs
sub
push
and
mov
pop
imul
ljmp
adc
rcl
inc
mov
sti
adc
adc
and
adc
icebp
pusha
add
mov
stos
jecxz
iret
mov
les
push
mov
mov
push
icebp
lcall
das
je
cli
mov
neg
mov
or
push
notb
aam
pop
sub
xchg
les
in
inc
pop
dec
lret
cli
dec
cli
inc
imul
and
test
loopne
xchg
clc
inc
insb
lea
ss
sti
adc
and
dec
test
jnp
data16
sti
outsb
sub
cmpsl
xchg
mov
aaa
lahf
cltd
jg
test
ja
out
lahf
cmpsb
add
clc
stos
cmpl
outsl
adc
mov
out
fdivs
in
cmc
add
test
mov
jo
ret
add
test
dec
mov
imul
in
jp
jp
imul
mov
test
daa
call
dec
aas
push
arpl
jns
stos
dec
fisubrl
pushf
arpl
cmpsb
sub
sbb
in
shrb
into
mov
cmp
jo
mov
jae
jo
and
scas
int
and
sahf
lret
ljmp
sahf
fwait
xor
in
mov
fstpl
insl
int3
adc
push
mov
mov
leave
into
lock
into
xchg
jl
add
push
sbb
rorb
jnp
divl
fs
sti
jbe
mov
push
cltd
mov
ret
push
mov
shrl
inc
insb
sub
fistps
pop
in
popf
into
xlat
xchg
sub
xchg
imul
adc
out
aad
mov
push
xlat
lock
sbb
das
fistpl
das
mov
xor
mov
xchg
mov
cld
dec
sbb
pop
loope
jnp
or
imul
cmpsb
xor
sbb
add
out
jl
inc
ret
inc
aad
rcr
test
test
xchg
xlat
jl
fdivl
jbe
sbb
fdivs
mov
wrmsr
daa
mov
in
sti
adc
sahf
fisubrl
mov
bound
call
xor
adc
jae
aaa
add
pop
inc
lahf
cmp
bswap
mov
jle
pop
pop
sub
mov
movsb
inc
sbb
loop
sahf
sbb
jmp
negb
push
or
in
sbb
loop
stos
push
add
pop
xor
xchg
outsb
mov
in
sub
sub
in
mov
or
xbegin
iret
mov
push
outsb
xchg
jne
or
xorl
mov
xchg
imul
jb
aaa
sub
rorb
mov
xchg
cld
pusha
jae
inc
out
jecxz
rorb
inc
xchg
and
popa
or
inc
and
mov
daa
loopne
sbbl
outsb
and
jl
mov
push
ficomps
xor
fwait
cld
cwtl
add
sbb
sbb
push
cltd
jae
pop
repz
call
cli
ds
sbb
push
jp
dec
push
push
aaa
aaa
lret
xchg
scas
and
inc
dec
sub
jecxz
jecxz
push
xor
jne
xor
adc
out
mov
ss
sub
adc
adc
sti
sbb
cmp
sbb
pop
mov
sub
mov
inc
pusha
sahf
rolb
mov
stc
imul
icebp
xchg
inc
lcall
fnsave
adc
mov
xchg
xchg
or
jbe
mov
mov
mov
hlt
pop
xchg
out
or
mov
mov
sub
daa
aaa
mov
nop
mov
and
mov
mov
test
xor
les
test
sub
xchg
in
sbb
icebp
ss
mov
jo,pn
inc
mov
fistps
scas
cli
jne
sub
cli
mov
inc
mov
je
sub
pop
out
cmp
jecxz
cmp
xchg
add
pop
jne
and
ljmp
sbb
or
outsl
xorl
mov
and
je
pushf
lret
jno
mov
mov
pop
loop
xor
aad
inc
dec
xlat
or
or
sub
cmp
sub
loopne
aaa
xlat
hlt
adc
in
ret
xorb
gs
cmpsb
fistps
sub
lret
dec
rcr
mov
and
xor
imul
xor
push
pop
mov
push
jns
cmp
mov
xor
pop
shlb
xor
push
gs
insl
fs
rorl
insb
and
inc
jp
adc
out
add
mov
mov
mov
jns
das
out
in
pop
adc
insb
pop
in
andb
dec
mov
jns
mov
inc
pop
inc
sbbl
ss
and
lds
pop
pop
ficompl
in
sub
mov
mov
and
mov
mov
aaa
sub
stos
subl
std
xor
mov
rolb
pop
dec
pop
inc
mov
and
loop
xor
pop
add
adc
adc
dec
add
out
push
pushf
cmp
inc
inc
das
adc
inc
out
cmp
mov
xchg
fidivs
jno
sbb
cli
lds
mov
mov
xor
dec
into
cwtl
icebp
addl
mov
imul
mov
sub
aas
cmp
cs
add
adc
dec
push
aam
and
or
test
pop
xor
test
dec
into
push
fwait
and
mov
inc
mov
rol
cli
dec
clc
fs
mov
xchg
jae
decb
mov
mov
cmp
adc
mov
ds
mov
aaa
mov
inc
nop
pop
retw
cmp
mov
jmp
pop
jp
imul
mov
int
test
sti
jmp
rcrb
std
sub
jno
lea
adc
xchg
mov
in
lahf
ljmp
jmp
xchg
cmp
add
pop
or
mov
fdivl
cmpl
test
test
xlat
cmp
popa
test
stos
movsl
cmpsl
jbe
cli
push
out
shrl
cld
sub
pop
mov
pop
mov
or
jmp
sbb
popf
adcb
sub
icebp
sbb
push
or
adc
in
cwtl
jbe
sbb
inc
movsb
sbb
std
clc
dec
push
mov
loop
scas
out
and
jp
insl
lds
jl
cld
sbb
cmp
jno
dec
cs
les
loop
mov
mov
xchg
xchg
pusha
imul
mov
xchg
inc
in
repz
add
inc
jne
xor
mov
ret
mov
mov
and
dec
cld
lcall
lods
minps
sbb
add
sub
aas
or
cs
aam
jmp
xor
push
mov
pop
shll
andl
pushf
cmovp
hlt
add
jl
add
sbb
popl
jb
dec
mov
push
inc
mov
and
adc
mov
fcoml
mov
cli
int
xchg
test
pop
or
orb
test
aaa
shr
out
popf
shlb
mov
inc
pop
jg
xchg
popf
loopne
jecxz
popf
in
mov
js
addr16
rorb
fdiv
iret
mov
mov
push
dec
push
lds
cwtl
test
pop
or
jmp
push
lcall
cmpsb
push
fdivrs
in
jg
rcrb
shll
les
and
in
sub
lock
aas
fwait
lock
xchg
mov
dec
insb
sbb
jns
cmp
cmpsl
shrb
jnp
jp
test
daa
or
in
daa
arpl
push
add
sbb
sub
les
xlat
out
std
cmpsl
sbb
or
and
push
mov
sub
mov
pushf
jp
dec
sbb
cltd
add
adc
mov
cmp
in
cmpsb
loopne
scas
dec
jo
sub
dec
repnz
mov
pop
outsl
and
push
in
aam
dec
push
mov
push
outsb
fs
sbb
loop
jmp
push
xor
movsb
mov
cmp
jge
and
pop
stc
in
insl
push
movsb
xor
fidivrs
fsts
inc
mov
imul
out
add
mov
jmp
into
pop
aas
testb
xor
pop
xchg
rcl
mov
pushf
addr16
jg
repz
gs
push
pop
mov
pushf
pushf
int
xchg
dec
and
xchg
enter
fldl
pop
jbe
aas
cli
aas
lret
cld
jb
mov
and
sbb
mov
push
cmp
mov
xchg
mov
in
clc
addr16
lahf
jb
sub
push
ljmp
cvttps2pi
popl
jecxz
fsubrl
jne
and
int3
addl
and
pop
xchg
and
in
push
add
add
scas
pop
xor
dec
sub
xlat
or
push
fstpt
cwtl
sbb
mov
bound
mov
adc
stc
test
enter
out
cld
push
inc
loope
jae
mov
add
pushf
shl
dec
lods
outsl
hlt
jg
nop
cltd
or
clc
inc
dec
mov
jae
jg
enter
adc
push
inc
adc
cmc
jl
xor
gs
aas
repnz
test
mov
push
jnp
dec
daa
scas
sbb
sbb
xchg
ret
sbb
dec
int
movsb
adc
push
jmp
inc
test
dec
mov
stc
xchg
push
jo
int
outsl
ss
imul
aas
rorl
ret
andl
out
movsl
inc
jecxz
test
push
push
insl
loop
fnstcw
push
mov
mov
insl
cmpsb
mov
rcrl
rolb
daa
or
pop
add
dec
cmp
and
add
xor
jecxz
push
mov
in
push
xor
inc
pop
addb
sarb
pop
data16
adc
xor
insb
fwait
mov
mov
je
scas
shll
aam
int3
mov
psraw
lcall
jno
ljmp
js
ds
mov
js
pop
jle
mov
pop
testb
daa
lods
dec
lcall
lods
xchg
push
fildl
sti
pop
mov
iret
imulb
pushf
ret
fdivr
sub
cmp
pop
lcall
dec
lea
imul
fistl
mov
sbb
pop
lds
in
lahf
stc
loopne
lock
fwait
inc
xchg
pop
pop
repz
mov
aam
adc
xchg
pusha
xor
fdivl
xor
int3
xchg
lods
xor
imul
add
std
sbb
mov
ljmp
xor
add
rcrl
jmp
xchg
mov
xlat
sahf
in
into
push
pop
rcrb
addr16
push
xor
test
lcall
les
nop
push
pop
add
xchg
je
lret
and
cmp
mov
add
loope
mov
push
mov
xor
xchg
sub
dec
adc
pop
and
mov
je
pop
cltd
imul
push
xchg
sub
or
movsl
adc
aaa
cltd
pop
outsl
sbb
mov
jmp
ljmp
pop
jns
imul
adc
adc
adcl
and
mov
or
ljmp
push
ljmp
jne
add
add
push
cwtl
jbe
repnz
cmp
dec
int
arpl
cmp
push
or
dec
sub
test
adc
aam
cmpsl
lock
mov
dec
inc
inc
xchg
push
cli
fidivrs
jp
out
cli
and
sbb
pushw
or
dec
mov
or
or
scas
cwtl
inc
mov
and
and
push
jb
outsl
mov
jne
xchg
dec
jo
sub
mov
mov
and
cmp
ljmp
adc
movsw
xor
cmc
aam
jl
fsubs
jge
sub
idivl
loope
sbb
mov
clc
fdivp
lea
mov
cmc
neg
cwtl
aam
in
fidivrl
fsts
adc
mov
push
inc
push
cmp
jmp
shl
enter
sbb
daa
adc
and
loop
insb
mov
jb
loope
leave
out
arpl
xor
repz
es
xchg
and
mov
in
xchg
xchg
dec
into
add
mov
cmpsb
jns
push
sub
leave
enter
xlat
aam
out
aad
mov
mov
push
addb
adc
les
popf
lea
int3
pop
and
ljmp
push
test
scas
testb
pop
adc
sub
cmpsb
mov
jecxz
in
out
cmp
mov
aam
xor
pavgb
pop
rcr
and
sub
pop
or
loope
fs
push
xor
mov
pop
pusha
mov
dec
jl
test
aas
push
jmp
push
push
xor
dec
outsl
inc
fidivs
popl
xor
je
push
aad
xchg
inc
mov
inc
cmpsb
or
pop
jmp
jle
cmpsb
icebp
jmp
incb
jns
push
ds
mov
in
pop
into
fmull
fdivl
cmc
sahf
aad
push
into
cmp
leave
pop
fcmovb
popw
mov
inc
inc
rcrl
push
mov
cmp
or
sbbl
enter
jo
cwtl
shl
mov
sbb
in
xchg
push
enterw
fidivs
rcrb
sub
call
pop
das
jg
scas
sbb
jmp
fdiv
in
je
sbb
outsb
or
fists
fldl
addr16
popa
insl
fisttpl
in
sbb
add
mov
pushf
pop
push
add
sub
sub
popf
imul
jecxz
adc
pop
or
xchg
xchg
repnz
pop
sbb
inc
mov
adc
or
cmc
or
mov
std
scas
std
cmp
and
fstps
mov
in
je
or
leave
std
das
cmp
fldcw
sbb
enter
xor
scas
sbb
cmp
aas
mov
sahf
or
cwtl
and
xchg
sbb
stos
mov
xchg
xor
mov
xchg
mov
out
pop
leave
dec
mov
lods
push
pop
xor
in
push
out
outsl
dec
mov
test
cmp
xor
or
jnp
shl
jo
push
scas
mov
dec
subl
lea
jmp
in
enter
add
arpl
mov
adc
sahf
pop
adc
push
sbb
mov
sbb
cmp
adc
movsb
es
sub
push
scas
push
adc
fwait
subb
or
shrb
stos
popf
fsubs
xchg
jp
je
inc
push
push
jae
sbb
lock
loopne
mov
cltd
in
cs
mov
rolb
mov
lcall
dec
ljmp
cmpsb
push
adc
ljmp
pop
pop
mov
pop
mov
adc
sarb
xor
jle
leave
ret
and
in
mov
idivb
int3
adc
xchg
push
clc
jecxz
arpl
inc
leave
pop
sub
fistpl
pop
loopne
mov
gs
loope
rep
insl
xor
dec
fdivrs
rorb
xor
mov
xchg
test
mul
pop
leave
cld
xchg
lcall
mov
inc
cmp
lods
out
push
dec
movsb
insl
les
cmp
rcll
lahf
fstl
aas
scas
sbb
loope
in
cmpsl
stc
mov
out
mov
sti
pop
iret
inc
ja
jnp
push
mov
das
mov
sub
mov
scas
push
inc
loop
dec
andl
xor
fldcw
mov
aad
pop
sahf
mov
dec
xchg
addb
push
mov
cmp
add
push
movsl
dec
mov
push
repnz
dec
pushf
jno
icebp
push
jge
push
sub
and
scas
push
cs
adc
fcomi
xchg
push
sbb
mov
out
cs
jmp
inc
mov
cld
mov
xor
xor
pop
pop
mov
xchg
call
and
outsl
fsubl
repz
xchg
dec
call
ret
cmpsl
fwait
push
in
jg
add
push
cwtl
add
aam
int
jb
xor
sub
movsb
sbb
into
pop
js
jmp
inc
in
dec
stos
les
test
out
and
repz
xchg
mov
ret
xchg
jmp
ja
insb
mov
std
clc
addl
cmp
adc
xlat
ds
leave
mov
xchg
lock
or
repnz
pop
push
sub
xor
scas
cmp
pusha
bound
rol
xchg
and
or
arpl
push
and
jb
mov
fcmovnu
aam
sub
lahf
outsl
outsl
bound
mov
xchg
push
cs
ja
or
cmpl
jno
sub
sub
and
inc
sbb
mov
push
out
mov
rclb
mov
jge
out
adc
imul
inc
dec
mov
push
cmc
add
test
jecxz
scas
into
inc
and
test
aas
out
scas
out
lods
cmp
sbb
jns
dec
or
hlt
bound
stc
lret
push
add
aas
mov
and
out
dec
lahf
daa
or
adc
enter
add
and
dec
scas
mov
push
sub
sub
ds
sub
mov
push
xor
fdivs
in
xchg
scas
dec
fwait
enter
in
stos
dec
push
fsts
data16
and
fsubrs
pop
orw
pop
call
xor
call
dec
mov
gs
push
fcomp
sub
bound
fwait
outsb
jmp
xor
fimull
xor
fisubrl
cmp
lods
pop
lock
jbe
jmp
arpl
pop
cld
jmp
lock
arpl
jmp
xor
or
bound
test
cmc
das
dec
or
dec
mov
lods
pop
push
cmp
iret
cmp
mov
in
divl
mov
push
mov
cmp
mov
call
cmp
adc
sub
mov
push
mov
and
pop
xchg
shll
mov
mov
and
dec
js
adc
testl
and
sub
arpl
xchg
xchg
sysret
aad
std
rclb
subb
test
xchg
je
adc
mov
jbe
fwait
ja
xchg
dec
or
out
sbb
cmp
adc
pop
ss
popa
sbb
sub
rcll
test
scas
add
adc
xor
jmp
fbld
les
xchg
stos
xor
nop
popa
jnp
sbb
fucom
lds
dec
xchg
movsb
leave
sub
xchg
pop
mov
mov
add
mov
call
sub
into
mov
out
xchg
aam
hlt
dec
addr16
adc
enter
xlat
jmp
shlb
cmpsb
and
mov
shlb
jb
call
push
fcomps
hlt
repz
add
data16
and
sub
and
add
fnstcw
push
add
add
into
jbe
std
pop
inc
inc
insl
cli
cmpsb
sbb
jmp
mov
xor
dec
lock
das
into
mov
cwtl
cmp
std
nop
data16
sub
shl
add
dec
or
movsb
scas
sbb
mov
adcl
jle
fcoms
dec
push
mov
push
cmp
in
cwtl
or
fsubrl
mov
sbb
test
adc
cli
push
mov
push
hlt
mov
sti
jo
push
mov
sbb
mov
or
push
in
test
pushf
mov
mov
es
inc
lock
xor
test
pop
out
ret
add
out
sarb
out
lea
rorb
adc
filds
dec
pop
sbb
shrb
lods
in
push
fnstsw
inc
push
and
mov
pop
add
xlat
inc
dec
add
adc
les
sub
lcall
out
lcall
ljmp
mov
aad
inc
push
add
xchg
push
jae
xchg
jmp
cli
jmp
sti
sub
mov
insl
mov
std
popa
dec
into
outsb
ss
loop
lods
adc
mov
lock
arpl
cmp
add
mov
jmp
xchg
xchg
fldenv
das
jno
ljmpw
push
xchg
xchg
cld
std
in
lock
daa
or
mov
mov
pop
sbb
adc
mov
fimuls
cmc
iret
aas
rol
js
adc
imul
push
das
xchg
sbb
insb
mov
mov
xor
mov
sti
cltd
popa
fistpll
adc
mov
inc
insl
and
dec
mov
and
loop
idivb
cltd
lcall
mov
xchg
addb
pop
cmpsl
test
repnz
fldenv
lahf
repz
cmpsl
inc
iret
mov
xor
in
int3
outsb
or
mov
or
jbe
mov
repnz
shrl
push
iret
pusha
pop
mov
je
lahf
adc
push
mov
jae
scas
fdivrp
outsl
and
xor
push
mov
pop
daa
je
int
cmp
sub
mov
mul
or
mov
adcl
enter
inc
pop
mov
cmp
push
test
push
jbe
loope
sahf
mov
cs
sbb
cltd
rcr
subb
bound
clc
xor
xchg
mov
dec
in
jb
test
xchg
push
adcb
incb
cmp
out
fisttpll
jg
or
xlat
aam
sub
adc
shrb
mov
lcall
mov
inc
mov
sbb
inc
lock
and
dec
push
fwait
cmp
outsl
fs
jmp
movsl
lds
jb
mov
notb
lret
frstor
xlat
insl
mov
outsw
arpl
das
xlat
push
xor
adc
popf
xor
in
mov
in
das
push
out
outsl
pop
pop
neg
ss
popa
sbb
inc
push
rorb
loop
xchg
mov
aam
out
xor
sbb
mov
sbb
hlt
mov
data16
mov
add
cmp
lcall
jg
add
pushf
and
aad
sbb
jp
mov
or
dec
mov
push
adc
call
aas
mov
pop
inc
push
aad
mov
std
out
xchg
ds
mov
test
inc
push
in
xchg
sub
in
rolb
xor
shrb
push
sbb
add
adc
dec
cmp
push
mov
and
stos
dec
out
sub
in
cmpb
dec
in
jecxz
pop
push
push
sbb
rclb
repz
xchg
mov
ret
dec
gs
mov
mov
leave
outsb
out
sahf
add
pop
into
fisubl
jp
or
sub
bound
shlb
cwtl
cltd
adc
out
outsl
xchg
push
sub
adc
mov
outsl
jo
ljmp
sub
jbe
rorb
push
add
bound
fldenv
xchg
add
orb
popf
sarb
repz
mov
mov
loopne
imul
sub
mov
popa
data16
aas
dec
and
and
aad
jbe
fs
or
into
mov
jnp
les
js
shlb
push
jbe
mov
fmul
mov
cmc
fidivrs
icebp
cli
push
and
inc
into
out
mov
ffree
aaa
sub
jmp
lods
fwait
add
pop
sti
jne
adcb
fimuls
test
int
fimull
jbe
addb
and
sarl
andl
inc
mov
test
inc
js
int
rcrl
roll
insl
rol
out
jbe
pop
or
cmc
cld
lret
outsb
es
jp
scas
pop
loope
add
sub
popa
adc
inc
sub
loopne
cmp
or
mov
lret
outsb
pushf
mov
sbb
fnstenv
movsb
pop
stc
pop
sahf
sub
daa
cltd
aaa
andl
inc
call
int
out
mov
aad
addr16
nop
adc
movsl
cmpsl
pop
dec
pop
loope
imul
pop
mov
bound
jge
lret
int3
test
cli
mov
push
xchg
adc
sbbl
lods
loopne
leave
dec
popa
je
xor
xchg
jp
dec
test
cli
aaa
jo
js
push
pusha
xchg
lods
xchg
and
mov
mov
mov
dec
fiaddl
stos
test
movsl
ljmp
dec
jmp
lahf
pop
jb
mov
gs
mov
mov
adc
or
mov
cmovae
cmp
mov
adc
inc
add
jnp
fs
inc
xor
and
xor
xchg
sbbb
pcmpeqd
repnz
popl
and
scas
inc
push
or
cmpsl
pop
pop
cltd
mov
jge
aas
pop
das
push
mov
cmp
shlb
fadds
nop
loopne
jb
fisubs
clc
mov
in
cmpsl
adc
jne
sub
sub
outsb
mov
adc
inc
sbb
sub
cmp
popa
dec
mov
add
loop
add
or
xor
sub
sar
mov
cltd
jg
negl
jnp
aad
lods
add
aam
cmp
cltd
insl
pop
lds
sahf
nop
ficoml
xchg
call
out
movsb
sbbb
test
outsl
in
std
loope
jae
cltd
repz
pop
push
movsl
enter
out
dec
and
loop
addl
test
push
mov
mov
lea
xchg
bound
jg
pop
and
inc
rorb
cli
fcmovu
mov
test
xor
cmp
lcall
imul
sbb
imul
sub
pop
xor
loope
xchg
in
cmp
xor
imul
std
cmp
ljmp
repnz
fcoms
test
loop
pop
test
mov
jo
adc
lret
mov
inc
push
lea
or
pusha
test
es
out
aad
push
enter
jns
cmpsb
sub
lret
in
xor
lret
sbb
mov
and
lret
pop
mov
sarb
cli
mov
movb
test
or
xchg
dec
lcall
inc
xor
sbb
pusha
pop
in
mov
push
push
xor
mov
outsl
cmpsb
sbb
fmuls
jb
sbb
std
clc
mov
clc
sbb
inc
es
push
jno
idivb
mov
push
jbe
push
sbb
pop
ss
frstor
mov
jp
iret
mov
push
adc
inc
sbb
out
or
mov
clc
mov
pop
cmpsb
rorb
jmp
mov
fsubs
mov
jo
sbb
sarb
sbb
outsb
pop
lea
xchg
mov
jns
orl
adc
lea
cmp
fxch
test
mov
add
aam
cmp
push
fsubl
mov
ficoms
or
repnz
cmp
cmpsb
add
and
fbld
mov
aas
lcall
xchg
mov
sub
and
leave
mov
fldl
push
inc
mov
dec
dec
in
xor
pop
loope
inc
push
mov
pop
push
cmp
cmp
pop
and
sahf
jno
clc
push
pop
out
ror
movb
jge
push
adc
imul
xlat
sbb
xchg
and
loopne
push
out
sub
or
es
in
add
mov
push
in
lods
sbb
sbb
stos
cltd
stc
andb
mov
xchg
mov
dec
adc
mov
dec
repz
fwait
notb
mov
add
mov
in
and
mov
mov
dec
dec
push
jmp
outsb
xchg
jbe
jae
scas
cmp
in
mov
mov
leave
int
jecxz,pn
rcrb
addr16
je
lret
mov
inc
xor
test
adc
stos
jne
pop
iret
fmuls
inc
jae
sar
andl
xor
adc
adc
enter
rclb
jns
repnz
sub
fdivl
or
xchg
push
mov
inc
jns
gs
ror
dec
jns
inc
bound
mov
push
add
xor
sbb
js
lret
aaa
ficompl
pop
add
ja
sub
lret
mov
add
jecxz
fwait
stos
stos
inc
sbb
adc
lret
mov
mov
jnp
ja
sub
adc
mov
arpl
cwtl
aas
nop
das
xchg
repz
jmp
xor
arpl
out
imul
mov
cld
out
xchg
js
jne
mov
loop
adc
bound
adc
cli
mov
into
imul
psadbw
jmp
inc
test
loopne
es
je
xlat
imul
stos
inc
cltd
fcmovnb
rolb
fdivp
loopne
cld
xchg
test
movsl
js
mov
mov
add
aas
pop
filds
mov
pop
adc
mov
orb
subl
mov
mov
adc
loopne
xchg
mov
push
xor
addb
push
lods
push
ret
fnstcw
out
mov
dec
inc
jo,pn
mov
ss
jae
sub
stc
cmp
orl
fs
ds
outsb
sahf
not
loop
cmc
xchg
pop
insl
jb
sbb
sbb
repnz
sbb
push
mov
cmpsb
xor
adc
loope
fistpl
mov
adc
clc
inc
add
push
aaa
dec
sub
sub
pop
mov
dec
sbb
dec
movb
ffreep
pusha
imull
sbb
mov
test
push
stos
mov
in
cmc
out
cmpsl
test
jmp
stc
int3
fsubr
inc
mov
icebp
dec
sbb
lea
inc
xor
ret
push
fmuls
imul
mov
repnz
leave
xlat
test
je
add
lret
scas
inc
je
cld
sub
aad
loop
push
sarl
xchg
jmp
int
movsb
rcll
fists
mov
sub
xchg
cld
and
xchg
repnz
xchg
inc
mov
nop
sti
xchg
mov
out
call
into
repz
icebp
cmp
mov
mov
int
gs
sar
pop
in
mov
mov
das
addb
cli
std
cmpb
or
cmp
pushf
gs
mov
sbb
loop
mov
clc
scas
negl
cs
and
sub
leave
ja
mov
cmp
bound
add
jg
fwait
or
pop
mov
cmpsb
shll
int3
pusha
in
pop
mov
xor
loopne,pt
imul
mov
or
cmp
arpl
sahf
cltd
outsb
push
nop
outsb
out
mov
mov
cmp
aas
cmpsl
ds
and
push
in
add
jae
sbb
loopne
stc
pop
sub
pop
xchg
sbb
add
fbld
shrl
sub
repnz
inc
mov
adc
std
sbb
fmul
cmc
test
negl
flds
repz
bnd
mov
sti
ficomps
mov
adc
inc
mov
jbe
push
cs
imul
mov
dec
test
testb
mov
clc
jns
jecxz
loop
sbb
hlt
cmp
lret
ret
pusha
or
stos
out
jns
or
dec
ljmp
hlt
jns
mov
mov
std
sbb
and
sahf
test
dec
dec
jmp
mov
sbb
stos
sahf
or
dec
sti
call
push
xor
push
jb
call
add
ja
mov
push
adc
mov
sar
ret
dec
daa
ret
subl
inc
xor
popa
es
scas
xlat
dec
push
add
imul
repnz
imul
stos
jnp
jmp
push
rcr
sbb
int
and
add
add
imul
mov
pop
int3
jmp
cmc
ret
and
cmpsl
add
pusha
imul
testl
loopne
sbb
aas
insl
pop
lods
out
jno
pop
es
cmp
xchg
icebp
mov
dec
mov
pop
push
gs
sub
gs
adc
imul
cmp
pusha
fstpt
cwtl
cs
bound
jne
sbb
out
repnz
sub
subb
shll
daa
sbb
test
mov
xchg
push
xchg
lcall
and
or
inc
movsl
pop
jmp
ljmp
stos
jns
push
cmp
push
clc
xchg
dec
adc
addr16
cmpsb
or
xor
inc
ror
shll
shll
and
xchg
mov
cmp
lret
lea
shll
sbb
pop
popl
xor
scas
mov
or
add
xor
mov
mov
push
mov
pop
lea
lods
jecxz
pusha
fwait
imul
mov
inc
mov
pop
fwait
loopne
rcll
push
dec
inc
bound
adc
loope
or
mov
jnp
adc
and
test
xchg
adc
out
std
or
negl
lret
adc
inc
mov
mov
push
sub
into
popf
into
arpl
inc
sbb
push
xchg
xchg
aad
jbe
das
pop
lock
adc
mov
pop
bound
xchg
xchg
pop
imul
push
movsb
push
out
addr16
push
sub
lock
dec
lods
mov
sub
aad
ss
dec
xor
dec
std
xchg
filds
xor
sub
mov
mov
nop
cs
lahf
jno
xchg
or
lods
xchg
mov
jecxz
cmp
outsb
mov
rcrl
jle
mov
xchg
fbld
pop
inc
push
out
sub
dec
mov
mov
push
in
jl
or
jp
mov
fidivl
leave
daa
mov
mov
push
push
mov
mov
xor
push
push
mov
in
jno
lahf
mov
out
inc
push
jp
mov
jns
enter
jbe
lds
sub
repz
pop
loope
mov
mov
cmp
ja
test
mov
fidivrs
aas
es
arpl
fsubl
icebp
xchg
stos
pop
iret
int3
gs
add
fs
hlt
or
test
lret
jle
add
xchg
fstl
push
sarb
aas
dec
mov
cmp
das
pop
mov
and
fldl
adc
lods
inc
sbb
sub
gs
add
repnz
pop
cwtl
push
jle
jg
xchg
call
cli
mov
xchg
pusha
out
cmp
xchg
xchg
push
es
mov
and
ret
xchg
dec
jno
mov
filds
cmpsw
int
adc
cmc
xorl
sub
adc
es
repnz
aaa
jg
mov
jmp
daa
lret
adc
and
out
pop
mov
ja
mov
fs
test
xchg
sub
pop
jnp
or
sbb
pop
ja
jne
push
push
and
jno
jge
lahf
push
or
testl
sub
sbb
and
shll
pop
or
pop
loopne
test
jno
int3
jl
mov
mov
shll
rorb
adc
adc
sahf
fxch
scas
shrl
mov
loope
aad
mov
and
inc
push
or
jmp
mov
and
push
rcrl
dec
jnp
or
nop
jmp
xchg
ret
stos
sbb
adc
test
push
xchg
divb
or
outsl
or
aas
into
int
or
adc
je
daa
xchg
cmpsb
jae
out
mov
lahf
xor
mov
insb
jae
aaa
call
in
lods
pop
mov
push
fucomi
insl
scas
nop
gs
cmp
es
es
int3
je
mov
mov
cmpl
dec
sbb
inc
fdivrs
sbb
push
cmpsl
sbb
xchg
lock
test
pop
pop
enter
push
inc
rolb
jno
les
lods
jo
sbb
cmp
add
inc
mov
adc
pop
pusha
mov
roll
clc
cmpsl
or
or
mov
loope
mov
jbe
sub
jmp
inc
mov
mov
fildl
lods
dec
mov
cmpsb
jb
repz
pop
rep
xor
in
int3
add
daa
imul
xchg
mov
push
popf
ljmp
packssdw
inc
push
dec
repnz
push
inc
fs
xor
divps
push
mov
call
add
cmp
sbb
xor
ret
pushf
out
dec
in
insb
imul
adc
icebp
push
lock
cmpb
mov
rorb
pusha
in
lret
mov
mov
jnp
aaa
xchg
sti
daa
adc
stos
pop
dec
mov
sahf
ljmp
cmpl
fldt
or
bound
cltd
cwtl
or
or
cmp
inc
lret
push
out
mov
subl
inc
xor
sbb
and
add
aam
es
inc
cmpsb
rclb
sbb
shrl
ljmp
mov
push
jbe,pt
sbb
stos
into
addr16
scas
xor
les
mov
sub
fwait
mov
or
ret
and
mov
mov
mov
cld
push
mov
mov
and
lock
test
loope
dec
in
adc
inc
loope
dec
popf
movsb
shrl
xchg
mov
sub
jae
dec
vpsrlw
int3
xchg
movsb
add
fisubs
adc
sbb
adc
add
test
dec
fmull
xchg
pop
cs
lds
mov
dec
rcrb
call
in
in
mov
scas
push
fwait
sarb
std
jl
add
add
push
add
and
insb
and
dec
lock
and
push
insl
or
clc
cwtl
cmpsl
jae
push
push
out
push
pop
dec
fprem
adcb
and
decl
sbb
push
mov
in
adc
jle
std
fisubs
in
sub
dec
sbbl
in
int3
cmp
jo
dec
ljmp
mov
aad
xor
sbb
or
mov
push
pop
dec
xor
lcall
mov
sbb
leave
jo
mov
fneni(8087
cltd
lock
mul
dec
mov
cmp
or
pop
adc
in
test
outsb
push
ljmp
sahf
aaa
mov
call
mov
cmp
lret
and
mov
cltd
mov
sbb
inc
push
addr16
inc
ja
addr16
aas
jb
xchg
add
cld
push
push
lods
sub
ret
call
scas
xor
jno
xor
jae
xchg
xlat
push
mov
xchg
out
adc
adc
add
sti
mov
mov
and
lock
out
addr16
jge
lods
jecxz
jge
movl
ret
dec
bound
push
add
gs
daa
xor
call
pop
repz
xchg
lret
in
pop
or
mov
mov
sub
sub
pop
fucomp
test
mov
filds
cmp
inc
or
sub
jge
adc
pop
push
and
in
fcompl
lea
ds
stos
addl
push
mov
mov
jns
or
jp
pusha
into
add
iret
dec
fs
cs
xor
sub
stos
fstpt
push
leave
cmc
clc
push
inc
push
icebp
jge
pop
adc
sti
test
jle
jl
push
dec
ds
jbe
loope
mov
push
fildl
stc
mov
arpl
loope
jne
addr16
loop
clc
mov
mov
dec
jo
sbb
movsl
in
mov
inc
bound
mov
adc
daa
sti
dec
adc
sti
cltd
xchg
divb
push
jb
outsl
adc
inc
pop
call
mov
cmpsb
imul
into
pop
jo
mov
xchg
dec
jmp
sti
adc
jl
in
xchg
xor
jne
dec
sub
jne
aad
xor
cmp
iret
jmp
outsl
pop
jae
add
lahf
add
fisubl
mov
in
sbb
xor
add
cmpsl
mov
add
add
sarl
int3
xor
xchg
sub
shlb
jecxz
push
sbb
push
and
mov
imul
pop
pop
aam
push
nop
stos
lods
loope
add
std
sub
xchg
sub
jo
pop
ss
and
mov
sbb
mov
and
lods
inc
mov
mov
out
jp
stos
sub
mov
cli
xor
lcall
fisttps
inc
and
inc
imul
fisttpl
js
pushf
xchg
pop
popf
sbb
and
dec
out
push
or
xchg
and
xchg
ret
daa
push
mov
leave
xor
push
popf
fildl
lock
fistl
fldenv
sbb
dec
pop
sbb
inc
shl
insl
iret
xlat
aad
lock
in
aad
sub
dec
bndstx
sub
test
mov
push
or
clc
test
popf
pop
aad
std
mov
sub
xchg
mov
insl
in
inc
rcr
push
dec
mov
fildl
sbbl
pop
stos
test
outsb
shll
inc
cmc
pop
bound
stc
popa
mov
lods
jns
mov
sub
mov
inc
push
repnz
pop
mov
out
test
leave
push
in
xchg
and
scas
lret
dec
dec
pusha
cmp
shrd
cli
push
mov
jo
pusha
jbe
jecxz
xor
cmc
mov
stc
pusha
push
xchg
ljmp
or
sbb
jp
fsubs
xchg
sub
jp
push
fstps
clc
aas
mov
add
xchg
fdivr
mov
push
incl
xor
dec
pop
bound
add
cld
call
push
shr
scas
int3
pop
lret
into
push
mov
lods
add
lods
fldt
jmp
add
xor
std
test
popf
je
mov
xor
xor
inc
or
fwait
popa
add
sbb
xchg
mov
xchg
sub
jp
jbe
shl
fmuls
clc
and
add
insl
addr16
dec
int3
clc
inc
les
adc
insl
xchg
adc
add
cmp
pop
and
ret
ss
jb
push
ljmp
adc
xchg
test
pusha
xchg
sti
fs
popa
cmp
cmpsl
jnp
mov
hlt
jnp
insl
mov
cli
aas
xlat
xchg
mov
ret
pop
add
loope
add
xchg
sub
cli
iret
sub
sbb
popf
cmp
xor
xor
cmp
pusha
push
dec
push
or
lods
cmpsb
mov
jmp
fiadds
jns
inc
insl
hlt
push
mov
aam
add
in
dec
outsl
sub
icebp
pop
lret
push
push
cmp
test
sub
push
orb
jmp
repnz
push
pop
cmp
lods
mov
mov
and
pop
lret
aad
mov
fdiv
xor
scas
shl
pop
mov
outsl
aas
out
pop
ret
mov
cld
pop
fisubs
in
aad
dec
test
aaa
icebp
jecxz
xchg
lods
aas
cmpsb
xchg
mov
mov
inc
cwtl
iret
add
imul
scas
icebp
fs
outsl
cmp
mov
je
inc
mov
jg
adc
testb
mov
dec
xor
hlt
ljmp
stos
cmpsl
lahf
mov
jle
imul
adc
pop
add
jp
cmp
dec
push
out
cld
bnd
inc
dec
cs
das
out
xchg
mov
pop
mov
orl
iret
jne
shrb
lret
mov
dec
jnp
inc
jbe
das
fwait
pop
xchg
push
sub
dec
xchg
lea
mov
pop
lock
ret
mov
sub
mov
out
nop
pusha
xchg
xchg
cmp
cs
push
mov
dec
clc
and
ljmp
xchg
jno
lea
loope
mov
clc
and
mov
cmpsl
in
and
addr16
sub
lret
shlb
or
bnd
mov
pop
aaa
cmpsl
loop
mov
mov
lock
test
es
lret
pop
in
push
jb
sub
xor
orb
inc
ficomps
push
or
pop
jmp
dec
call
lret
test
das
mov
sub
inc
shl
in
xor
movsl
push
shrl
sbb
negl
insl
pop
push
ss
mov
mov
jg
xor
inc
enter
or
sbb
mov
push
mov
pop
cmp
ss
xor
mulb
mov
pop
xor
xor
movsb
xchg
and
mov
push
push
sti
dec
insl
stc
nop
push
mov
in
stos
push
clc
push
adc
aad
cmp
fisubrl
jbe
inc
scas
adc
mov
push
lcall
sub
push
jmp
xor
js
push
out
in
dec
fcoms
movsl
dec
sbb
jno
xchg
adcl
lock
mov
outsl
inc
sbb
daa
mov
and
push
arpl
push
xchg
enter
sub
dec
dec
movsb
roll
mov
inc
bound
fbld
addr16
addb
adc
pop
pop
inc
in
mov
push
cltd
push
dec
sub
lret
fs
out
mov
add
mov
enter
int
scas
jmp
xor
sbb
lcall
rep
mov
add
dec
cmpsl
xchg
notb
sarb
pop
mov
mov
in
pushf
pop
loopne
cmp
jmp
lret
test
push
insl
pop
fldcw
pushf
mov
arpl
xor
in
dec
popf
cmp
insl
mov
xchg
outsl
xorb
dec
inc
or
call
inc
xor
das
dec
xlat
fmull
dec
cmc
cmp
filds
sub
int
mov
adc
pusha
gs
adc
or
out
xor
mov
push
push
mov
xor
pop
leave
mov
es
xchg
add
xlat
insl
xchg
add
jg
jl
sarb
call
xchg
imul
movsl
outsb
pop
mov
mov
add
out
cmc
sbbl
ss
jp
dec
adc
cmpl
fsubr
loope
mov
xchg
mov
mov
jle
cmpsb
cmc
mov
cwtl
das
lds
int3
xchg
jmp
rclb
inc
aad
jnp
arpl
inc
and
adc
mov
xor
pop
in
mov
mov
adc
sbb
jge
jecxz
into
push
mov
mov
pop
loope
add
mov
mov
jmp
mov
pop
xor
mov
int3
mov
lahf
sub
push
fst
and
rclb
add
inc
adc
xor
sbb
repnz
and
and
stc
pop
sub
xchg
dec
push
pop
das
pop
ja
enter
or
lret
cmp
xchg
lods
iret
leave
fstl
add
fs
dec
dec
push
xchg
aam
lea
mov
es
in
add
push
adc
pop
mov
xor
popa
ficoms
inc
stos
fists
cld
sbb
aaa
and
iret
clc
sti
aas
jbe
std
jp
lret
sub
cmc
add
mov
lret
jmp
xor
mov
fidivs
ret
push
fildl
add
shlb
cmpsb
ss
dec
pop
imul
roll
jns
pop
cmp
in
mov
jb
lock
push
es
jg
div
loop
push
dec
mov
in
in
xor
fcmovu
shll
nop
nop
aam
dec
stos
push
mov
xchg
inc
lock
les
pop
out
movsb
or
jno
add
sbb
sub
es
js
xor
test
jno
insb
outsb
sub
push
arpl
decl
mov
pop
sub
pop
and
cmpl
or
pop
shrb
xchg
sbb
arpl
cmp
dec
mov
or
mov
push
icebp
and
aas
jo
pop
int3
add
pop
inc
mov
pop
shrl
mov
xchg
sbb
push
ljmp
test
inc
ja
dec
and
inc
sub
adc
out
jo
or
pop
sub
push
mov
mov
sbb
lods
dec
sub
and
push
sub
enter
cmpsl
cltd
loopne
rcrb
les
fdivrl
dec
xchg
out
gs
mov
aas
cmpsb
cwtl
push
in
arpl
sbb
xor
sbb
popa
ss
jbe
stos
gs
mov
sbb
mov
pusha
push
mov
aam
outsb
xor
scas
out
mov
test
mov
xchg
mov
enter
adc
mov
or
int3
sarb
mul
dec
sub
push
mull
jae
inc
lcall
gs
icebp
and
add
es
jl
push
repz
pop
rclb
out
bound
mov
iret
orb
dec
mov
loope
gs
adc
adc
adc
sti
leave
xchg
enter
mov
jmp
fdivrs
mov
mov
jne
dec
out
loopne
movb
push
shrb
mov
lds
mov
enter
xor
vucomiss
mov
fdivrs
pop
add
cmpsb
sub
fmuls
pop
cld
insl
or
xchg
lods
cmpsl
data16
leave
mov
jne
ljmp
mov
push
push
push
mov
sbb
or
lea
es
push
scas
xor
shrb
dec
inc
xlat
loop
jns
mov
stos
dec
jb
xchg
ss
push
jns
mov
jnp
sbb
and
and
cmp
in
sahf
jno
and
into
fnstsw
pop
mov
popa
insl
int
sub
hlt
add
outsb
inc
sbb
pop
sub
xchg
pop
dec
sbb
dec
mov
jns
fidivl
fidivrl
rcr
addb
mov
mov
cli
inc
xor
push
cmp
sbb
mov
data16
sub
adc
xchg
jns
shll
pop
push
jo
jbe
xor
push
and
xchg
xor
push
mov
add
sti
outsb
lret
or
push
stos
in
mov
call
popa
insl
lcall
lods
stos
mov
insl
sub
in
sti
stc
loope
subb
inc
ds
jmp
cltd
add
mov
or
sbb
imull
add
fcmovne
ret
lock
and
lret
or
pushf
les
pop
imul
add
pusha
test
shr
gs
inc
pop
adc
adc
cli
fwait
push
fiadds
xchg
jge
test
imul
cltd
ljmp
or
sbb
mov
and
sub
mov
xor
fdivrl
imul
push
xchg
into
dec
stc
cmc
jl
outsb
lds
daa
int3
mov
mov
loope
cmp
fsubl
movsl
pop
mov
dec
push
fistpll
rcrb
cmp
xchg
pop
xor
add
inc
pop
cli
stc
mov
inc
cmp
sti
and
bound
out
out
pushf
scas
pop
mov
cmpl
dec
add
cwtl
aad
sub
mov
xor
jnp
mov
loopne
je
adc
shl
pop
mov
adcb
push
add
mov
fs
jg
sub
int3
cmp
aas
js
sbb
mov
stc
fildl
fdivrs
sub
fcmovbe
bound
packssdw
adc
filds
jg
mov
sti
cmp
stc
shlb
push
into
mov
cmpsl
and
xor
cwtl
cmp
mov
or
stos
pop
int
popa
out
or
fwait
int
xchg
cmpsb
sub
mov
mov
pop
pop
pop
dec
rcrl
enter
les
mov
mov
cmp
cmpsb
popa
add
jnp
out
pop
xor
jecxz
jg
adc
or
add
daa
addr16
xor
push
cltd
mov
pop
jge
xchg
sbbl
inc
popa
cmp
movsl
daa
sbb
data16
and
dec
icebp
adc
push
pop
fsts
dec
andb
xor
push
adc
das
xchg
push
cmp
pop
pop
xchg
int
repz
shrb
and
insb
pop
pop
int
loop
sub
shll
xorl
aam
test
cltd
lods
mov
mov
mov
push
add
repnz
jnp
lcall
adc
and
sbbl
adc
rolb
je
cmp
jnp
roll
cld
lahf
jo
mov
decb
les
pop
ret
cli
cmp
outsb
sub
sbb
xchg
ficoml
sarb
cmp
daa
jnp
add
pop
outsl
int
fidivrs
imul
fsubrp
mov
into
and
or
shlb
inc
cmp
iret
rcll
rorb
cmp
test
arpl
pop
imul
xchg
mov
mov
outsl
xchg
xchg
xchg
push
inc
push
adc
ror
xchg
pop
andl
and
xchg
cmpsb
loop
in
dec
fadd
icebp
test
out
push
xchg
test
rcll
cli
xchg
int3
inc
pop
movsb
push
push
icebp
fdiv
cmpsb
lock
mov
push
add
daa
sarl
mov
sbb
inc
sub
cld
sub
add
sbb
mov
cmp
xchg
cs
mov
cmpsb
lock
cmc
or
out
stc
push
out
sub
cmp
push
sbb
js
sbb
adc
loopne
test
cs
mov
mov
push
es
int
repz
inc
ljmp
jns
sub
sub
pop
mov
mov
push
rorb
lods
jp
lret
and
lret
roll
xor
fcmovnb
cmc
pop
jge
cmp
imul
insb
jp
js
lret
mov
jg
sub
dec
sti
or
test
clc
xchg
adc
aaa
or
pushf
mov
mov
push
inc
inc
or
punpckhdq
sbb
mov
enter
daa
repz
pop
adc
inc
mov
inc
movsb
dec
jae
mov
neg
mov
cmp
gs
lret
jp
mov
lahf
xor
pop
enter
jae
addb
mov
mov
bound
mov
jmp
lcall
lea
lods
shr
cltd
rorl
dec
or
push
pop
inc
jmp
push
xchg
ds
popa
out
push
or
lret
push
sbb
jo
pop
scas
add
leave
movsb
and
jecxz
add
in
jbe
jb
xor
cmp
icebp
pop
lock
imulb
movsl
adc
daa
sahf
xor
inc
popf
test
mov
sub
dec
and
outsb
cmp
add
leave
push
int3
inc
movsb
push
int
mov
insl
pushf
data16
and
data16
out
adc
inc
out
inc
mov
jecxz
pop
lahf
pop
cwtl
fiadds
inc
out
loop
pop
push
mov
ds
and
stc
notl
test
dec
popa
cld
fstpt
xor
inc
jnp
sbb
fsubl
lds
sbbb
mov
cmp
mov
and
add
in
mov
jecxz
outsl
mov
aaa
push
repnz
sub
xchg
jmp
xor
icebp
mov
fs
or
xor
popa
push
mov
icebp
mov
or
je
aad
inc
lcall
push
inc
push
stc
pop
lcall
xorb
xor
jle
mov
test
sub
in
sbb
adc
pop
hlt
adc
cld
pop
aam
js
mov
insl
and
int3
push
pop
mov
sbb
outsb
ret
adc
lods
mov
loop
stc
pop
int3
stos
jo
mov
sub
jp
dec
xchg
jle
cmp
shrl
aas
roll
xchg
sbb
imul
sub
xchg
enter
push
fmuls
dec
jbe
fwait
push
insl
mov
jb
aas
orb
add
lds
repz
mov
adc
out
ds
cld
fstpt
mov
mov
aaa
popf
inc
les
mov
aas
cmpsl
repnz
lock
push
jmp
and
ja
imul
fidivl
ja
sahf
pop
repz
gs
flds
xchg
xor
repz
sbb
daa
add
push
pop
mov
shll
and
es
add
dec
xchg
adc
lods
xlat
dec
push
inc
loop
jmp
and
out
les
lock
cltd
js
or
mov
pop
cmp
mov
cmp
push
jnp
insl
popa
pop
imul
fistl
mov
outsb
mov
xchg
sub
jecxz
sbb
aad
ficoml
ss
shll
mov
cmp
cltd
sbb
aaa
lea
clc
sbb
sub
xor
xor
xor
ljmp
xchg
xchg
stos
jnp
xchg
ss
cld
cmp
xor
insb
adc
add
jo
xor
loopne
jne
mov
push
scas
aaa
push
pop
pushf
movsb
ret
cmp
sub
sbb
into
adc
rclb
mov
lret
imul
push
inc
sbb
cmpsb
dec
jae
test
pand
xor
sbb
fildl
in
jmp
xchg
adc
pop
popa
out
icebp
xchg
pop
add
jl
push
inc
xchg
lret
push
insb
cmc
pop
inc
rorb
xor
jnp
lods
mov
xor
pop
out
xlat
inc
fisubrs
mov
rorb
sahf
mov
loopne
push
les
xchg
loop
sbb
shrl
outsb
jns
out
popf
jo
js
adc
pop
adcb
out
imul
mov
add
enter
mov
add
fiadds
adc
xorl
dec
je
jmp
shlb
lods
adc
call
pop
mov
cmp
mov
mov
xorl
sbb
aaa
pop
adc
fidivl
lods
pop
jle
add
dec
ret
push
aad
outsb
jb
inc
and
mov
in
jge
dec
jne
pop
xchg
mov
shlb
pop
popf
xchg
in
sbb
push
mov
sub
mov
insl
lcall
rcrb
jle
bound
stos
nopl
ret
hlt
xchg
mov
jecxz
bnd
pop
lds
cmp
hlt
xor
jl
fcompl
jmp
rorb
inc
outsl
bound
inc
mov
in
rorb
out
or
dec
xchg
adc
mov
dec
std
sbb
sahf
into
ss
jnp
ficompl
lret
scas
ret
mov
or
arpl
cli
lods
inc
andl
cmp
add
inc
sub
pop
dec
add
addr16
push
xor
das
cmpsb
fildll
aad
pop
outsl
mov
sub
popf
int3
aaa
cmp
push
aam
or
jecxz
adc
or
movsl
repz
jge
push
fistpl
dec
pop
xchg
adc
inc
xor
pop
fwait
loopne
test
dec
in
push
stos
cmpsb
mov
ss
sar
fsubrs
insb
mov
mov
aam
push
cltd
repz
lret
stos
out
jp
add
sbb
pop
and
xchg
push
adc
aam
add
sahf
es
test
or
clc
push
pop
push
fucom
stos
jmp
lods
inc
stos
xorl
jo
jo
repnz
sub
mov
and
and
insl
nop
popa
rcll
rcll
je
lret
das
pop
mov
loop
inc
into
mov
jle
inc
enter
and
cmp
fistl
imul
in
or
xor
and
add
hlt
in
xchg
mov
add
ljmp
cmp
data16
imul
and
xchg
adc
jno
ret
lcall
lods
jmp
push
mov
jns
dec
aas
dec
sub
mov
jg
scas
push
test
lods
cltd
testb
lock
pop
cmp
imul
imul
addr16
aam
aas
lcall
ja
inc
and
jb
ffreep
xchg
andb
and
out
pop
movsl
je
push
shrb
add
in
mov
push
icebp
xor
pop
pmulhw
in
rorl
inc
loopne
sti
leave
inc
cmp
and
test
and
into
lahf
push
mov
loope
pop
inc
adc
jae
cmp
cmp
gs
hlt
in
add
into
fnsave
sub
stos
sahf
mov
and
xor
dec
fnstcw
faddl
adc
sub
clc
addr16
imul
or
int
das
clc
mov
cmp
cmc
aad
push
in
jnp
stc
dec
fmull
mov
repnz
or
gs
sbb
loope
mov
pop
rcrb
xchg
inc
mov
int3
shrb
cs
push
mov
dec
fimull
mov
xor
jl
pop
push
aaa
int3
add
cmp
sub
cmp
imull
add
push
adc
mov
push
iret
cmpsb
pop
jae
xorl
add
inc
clc
add
in
cmovne
fsubrl
aad
in
repz
iret
mov
fistpll
movsl
ret
jge
push
out
stos
sarl
loopne
loop
and
nop
xchg
andb
or
cwtl
es
xchg
pop
in
in
sarb
cmp
jns
arpl
bound
lret
dec
out
testb
jg
aam
lret
or
aam
into
cmp
jge
outsl
pop
dec
andb
or
loop
js
mov
mov
sbb
int3
sahf
scas
push
je
jle
push
push
or
les
mov
scas
loop,pt
imul
addr16
jbe
mov
dec
xchg
mov
cmpl
push
sarb
pop
aad
lret
cmpsl
imul
adc
cmp
mov
mov
pop
std
shl
inc
lock
jmp
or
fmuls
mov
push
sar
stos
fwait
clc
inc
dec
jb
nop
loope
lods
lock
js
mov
sbb
out
push
out
or
push
adc
das
adc
dec
jge
jb
push
sbb
pop
lods
add
pop
pop
sub
ret
cmp
fimull
jle
inc
or
loop
sbb
or
int3
mov
push
cmp
iret
out
adc
sbb
mov
cltd
aas
mov
and
inc
add
pushf
test
mov
pusha
pop
mov
xchg
inc
sub
and
sbb
lcall
adc
loop
fidivs
clc
lcall
es
xor
mov
aam
jg
cmc
ret
popf
ret
aas
dec
jnp
hlt
pop
pop
mov
cmp
sti
sub
adc
add
test
in
mov
jmp
enter
shlb
std
fwait
xchg
in
and
xlat
out
loop
fcomp
cmc
mov
pop
gs
jl
push
jno
mov
xor
std
sbb
inc
pop
fnstenv
mov
aam
iret
mov
out
xor
ror
push
fwait
in
lcall
arpl
xor
int3
fnstenv
and
jmp
out
xor
in
nop
js
fstl
push
sbb
lahf
rcrl
rorl
mov
lret
loop
fs
mov
stos
xor
test
aad
sub
out
out
jb
iret
xchg
cmp
cmp
mov
fstpl
push
lcall
pop
hlt
cli
outsl
or
push
leave
imul
test
mov
xor
pop
rcrl
insb
mov
movsl
test
call
outsb
loopne
mov
pop
pop
pop
mov
inc
and
dec
cli
hlt
push
mov
sub
sbb
sub
push
push
mov
jae
in
push
nop
mov
push
repnz
cmpsb
cmpsb
mov
insb
and
rolb
mov
fnsave
ljmp
sbb
fimull
fstl
bound
cmc
int3
pop
nop
push
sbb
mov
stos
sub
insb
inc
or
daa
int
xor
inc
je
addl
das
subb
and
sub
jo
popa
sahf
mov
outsb
gs
xchg
std
mov
cwtl
and
cltd
ljmp
stc
fnsave
je
js
push
cmp
push
pop
dec
or
or
daa
sub
push
ds
bound
inc
movsl
test
and
sbb
sub
lods
out
fnstcw
lea
xchg
add
mov
call
add
in
or
clc
repz
pushf
jle
sub
mov
out
in
into
aas
cs
mov
test
shlb
js
lret
mov
adc
ret
aam
fs
adc
insl
out
mov
push
jl
dec
ljmp
stos
je
cmp
in
cmp
jg
insl
imul
int
add
fldenv
inc
out
lock
addb
pop
adc
icebp
in
imul
jns
in
das
fdiv
jae
icebp
cmp
jbe
jae
push
mov
shrl
in
je
xchg
repnz
fwait
xchg
jg
movsl
sbb
adc
xor
jne
imul
add
lods
stc
fistpl
das
stos
js
dec
icebp
xor
mov
stos
xor
xchg
test
adc
callw
incb
in
xchg
push
xchg
lea
xchg
jno
sbb
in
mov
sbb
iret
dec
adc
jp
insl
subl
pop
xchg
mov
sub
mov
fs
test
sub
push
xchg
jl
sbb
mov
lahf
pusha
push
cld
push
arpl
dec
lods
or
mov
arpl
fcomp
daa
out
movl
mov
lahf
cmp
mov
lods
repnz
ljmp
lcall
iret
scas
xchg
xchg
jp
push
cmp
sub
xchg
sahf
sahf
xchg
mov
outsl
bound
frstor
jg
dec
aad
push
cs
mov
sti
pushf
add
aaa
lds
push
aaa
cltd
mov
and
addr16
nop
les
loope
inc
xchg
pop
hlt
test
mov
test
pop
xchg
in
fcomp
sbb
jl
mov
jns
addr16
ss
push
scas
xchg
jmp
xor
int3
mov
ss
mov
dec
push
and
pop
in
clc
sbb
and
sub
jb
mov
adc
orl
mov
stc
psrad
push
jecxz
dec
mov
test
jnp
add
mov
loope
gs
cmp
sbb
xchg
sahf
fsubs
pop
pop
push
pop
jno
lock
mov
lret
shr
out
cmp
jae
add
mov
jb
and
data16
inc
aam
out
jle
pop
dec
xchg
sub
lret
mov
outsl
jae
inc
xchg
fstpl
lea
cmp
inc
xor
push
inc
push
loop
shl
mov
out
out
sbb
insb
mov
cmp
adc
mov
push
pop
int3
aaa
mov
mov
ds
sub
xchg
pop
dec
add
sbb
inc
outsl
sbb
pushw
xchg
pop
mov
jl
sub
das
cwtl
cwtl
movsl
leave
std
and
dec
sub
jle
jns
repz
pop
cmp
xchg
xor
pop
add
mov
addr16
push
inc
ror
mov
cmp
and
sub
es
and
mov
xchg
test
and
addr16
mov
push
mov
cli
sbbl
test
hlt
cmpb
addr16
adc
and
push
icebp
xor
dec
test
pusha
popf
jb
outsl
mov
fwait
shl
pop
test
push
mov
xlat
ds
ljmp
xchg
fcompl
outsb
out
mov
fwait
testb
ss
xchg
push
add
aad
jecxz
fidivrl
or
mov
jecxz
add
mov
cmpsl
into
cmc
mov
scas
sub
jmp
pop
add
pushf
adc
shrb
cwtl
lods
call
repz
mov
xchg
in
movsl
cmp
xchg
gs
and
stos
fs
pop
enter
or
dec
int3
xchg
movsl
insl
fs
js
jnp
jbe
mov
xor
or
inc
insl
sbb
xchg
ds
sbb
xor
sbb
pop
push
jne
int3
leave
mov
inc
sbb
das
psubsw
mov
ror
mov
cmp
inc
lods
leave
lahf
ret
call
ljmp
mov
mov
pop
mov
mov
push
or
mov
jae
cwtl
ja
loope
fnstcw
inc
imul
ret
insb
ja
shrb
lret
push
mov
bound
lods
test
or
pop
mov
rcr
sub
pusha
in
dec
inc
or
iret
xchg
and
push
and
pop
mov
inc
stc
sub
fs
or
add
jbe
inc
std
into
loop
pop
addl
cmp
or
xchg
mov
sbb
ds
mov
mov
dec
lahf
push
loopne
mov
into
divl
inc
fldcw
scas
or
jne
shrb
ja
pop
js
andl
push
clc
push
js
cmpsb
ficompl
add
fcom
int3
insl
out
jge
xchg
jae
clc
sub
call
pop
adc
fistpll
insl
aam
pop
enter
addr16
adc
sbb
movsl
add
bound
pop
mov
adc
sub
ret
lods
inc
mov
add
cli
movsl
decb
stos
leave
inc
hlt
addr16
fimull
sub
sub
test
jl
xchg
sahf
pusha
test
or
cs
mov
filds
icebp
shlb
jnp
pop
icebp
and
dec
test
aam
xlat
sub
sbb
fnsave
jmp
outsl
mov
jge
mov
aaa
pop
cwtl
int
cmp
aaa
inc
xor
popa
inc
pop
xor
bound
test
xor
dec
dec
and
loope
outsb
pop
jmp
cmc
xlat
je
adc
in
pop
js
cli
ja
xchg
pusha
fcmovnbe
repnz
fisubs
mov
test
shll
sbb
arpl
jae
arpl
pusha
out
out
leave
ret
aam
ficompl
je
lcall
and
popa
xchg
push
jb
pop
rolb
pop
test
rcr
cmp
and
out
add
sbb
mov
pusha
mov
int3
and
add
faddl
pop
pushf
lret
mov
mov
bound
lcall
xchg
mov
pop
push
test
loopne
std
cmpsl
add
xchg
fstps
aad
aam
adc
fidivrl
push
add
into
test
xchg
aaa
sub
or
sbb
xchg
sbbl
mov
xor
inc
movb
cmp
cmp
lods
nop
mulb
pushf
movsl
mov
jl
scas
add
adc
cmp
sub
add
imull
sub
in
push
push
cli
repz
xlat
in
xchg
rcrl
lcall
lcall
mov
sbb
scas
xor
fidivs
push
leave
in
lods
sti
add
outsl
rorl
div
in
out
xchg
pop
testb
or
pop
xor
test
cmp
sbb
dec
aas
js
inc
xor
mov
inc
repz
xchg
int3
je
loopne
std
push
xlat
sbb
neg
mov
stos
rcrb
or
pop
and
add
addl
arpl
bound
or
sub
iret
sub
xchg
movsb
inc
int3
sbb
xchg
jns
adc
cmp
fcomp
push
inc
loopne
pop
rorl
cmp
or
sbb
jb
cs
out
dec
add
fidivs
bound
pop
and
aad
pusha
push
pop
jns
sahf
jnp
hlt
ss
cli
xor
jo
decb
in
stos
mov
mov
ja
add
adc
pop
mov
push
subb
xchg
bound
mov
xchg
sub
js
pushf
or
loopne
enter
ds
es
pusha
sub
jo
add
mulb
jno
mov
ds
push
fisttpl
shlb
push
ss
addr16
fnsave
repz
cwtl
jmp
sahf
adc
add
xor
push
pop
sarl
cltd
pop
bound
mov
test
jmp
mov
or
xlat
fsubrl
jbe
xchg
loop
repnz
iret
or
push
push
rorb
rcrb
mov
cli
mov
ljmp
leave
lahf
aaa
insb
mov
gs
hlt
ficomps
xchg
cli
fsub
xchg
adc
test
sub
mov
es
dec
call
jne
sti
icebp
lock
and
into
cmpsb
hlt
mov
or
and
xchg
push
pop
stos
sub
jecxz
test
xor
mov
jmp
stos
stos
xchg
cs
ljmp
or
push
sbb
jnp
loop
dec
adc
dec
mov
movsb
jg
mov
or
jmp
pop
mov
aam
lds
sbb
push
insb
adc
mov
add
pop
xor
imul
lahf
add
or
movsl
dec
xchg
daa
xor
arpl
stos
fidivs
jnp
sub
cmp
push
cmp
mov
xchg
jns
movsb
imul
clc
outsl
shlb
cmp
incl
les
std
sub
adc
jo
sarb
mov
add
push
xor
cltd
addl
repnz
es
adc
xor
jb
add
lret
insl
dec
jg
mov
cmp
mov
push
mov
test
scas
xchg
cs
cmpsb
sti
xchg
add
test
adc
xchg
stc
xchg
mov
out
ss
shlb
or
jne
movsb
imul
pop
fnstenv
ds
sub
mov
cmp
mov
pop
dec
xor
das
jge
cli
xorl
mov
or
je
sbb
inc
inc
sub
out
pop
int
dec
pop
mov
daa
xchg
cmp
add
fimull
xchg
cmp
cmp
inc
js
dec
fdivr
inc
stos
lods
jne
test
and
ljmp
shll
and
stos
stc
pop
mov
mov
adc
cmpl
xchg
cltd
mov
cwtl
fisttpl
arpl
pop
cmp
mov
mov
cltd
test
into
pop
jp
test
xorl
pop
xchg
inc
add
stos
cmp
into
cmp
ret
pop
loope
jg
iret
push
sbb
xchg
incb
jecxz
dec
sbb
test
aam
xlat
inc
xor
dec
inc
push
lds
xlat
aas
pop
lock
or
jo
lds
xchg
or
inc
cmp
pop
mov
inc
dec
in
sbb
shlb
pop
prefetchnta
or
mov
pusha
xor
add
test
jge
lock
pop
jno
cs
pop
out
mov
test
cmp
stos
pop
xchg
out
outsb
mov
xor
lret
aam
jle
xor
inc
cltd
faddp
adc
sti
pop
mov
dec
popl
mov
ret
sti
in
outsl
adc
popf
imul
cmp
addb
pusha
xor
int
fcomps
cmpl
scas
push
std
test
jnp
enter
dec
push
ja
sub
jo
xor
inc
dec
aam
lcall
mov
dec
sbbl
xor
stc
jle
and
test
inc
sti
jb
and
xlat
and
xchg
sbb
and
aam
xor
in
jge
clc
inc
test
pop
mov
mov
mov
pusha
sbb
addr16
cmpsl
push
scas
movsl
jecxz
lock
shl
xorb
pop
dec
cmp
jecxz
insb
jg
mov
inc
xor
pop
mov
mov
or
adc
pop
push
push
fisubl
stos
ror
pop
lods
negb
loope
stos
lock
decl
sub
js
ret
out
add
aam
rcrl
cld
in
mov
inc
dec
or
inc
stos
out
out
mov
outsl
pushf
ss
adc
jmp
lcall
sets
dec
or
xor
movsb
imul
sub
stos
cmp
adc
xor
out
mov
and
pusha
dec
out
adc
push
pop
mov
pop
jns
sub
ds
decb
push
jge
mov
xorl
cli
push
inc
jl
es
cs
mov
dec
sbb
outsb
pop
pusha
rclb
pop
ret
push
mov
mov
cmc
sbb
in
sub
pop
imul
lods
push
insb
cmc
push
movsl
stos
cmpsl
pushf
mov
or
jno
jle
and
insb
imul
sahf
adc
nop
inc
xor
lret
mov
repz
sub
xchg
in
aad
stc
pop
mov
sbbl
xor
lahf
and
roll
push
out
xchg
add
dec
cmpl
sarb
je
or
movsb
mov
jp
jp
push
jmp
dec
fldcw
mov
aas
sub
add
mov
and
shrb
leave
mov
mov
shl
sub
add
add
sbb
sti
and
cs
jle
push
sbb
and
jg
aaa
mov
pop
mov
pop
out
mov
int3
lock
mov
jmp
xchg
jae
adc
mov
pop
ss
pop
inc
shrb
ret
mov
outsl
cmp
out
and
addr16
or
jnp
add
lods
sub
outsl
jge,pt
jne
cmp
nop
bound
add
push
iret
repnz
add
fs
xchg
outsl
mov
mov
add
repz
xchg
sub
lods
jg
and
in
push
stc
notb
cmc
and
sub
flds
mov
lods
add
sbb
orb
cmpsl
daa
clc
add
adc
adc
cmpsb
cwtl
sbb
jmp
lock
test
adc
out
pusha
xchg
dec
in
cld
xlat
lcall
cwtl
iret
lods
aam
xchg
lock
daa
mov
shrl
sbb
mov
mov
mov
rcl
nop
xchg
in
push
bnd
push
adc
icebp
sahf
adc
push
cltd
movsb
sub
add
xchg
outsb
stos
fcmovnbe
dec
mov
mov
mov
jo
js
jns,pn
out
xchg
xchg
mov
xchg
add
lahf
scas
hlt
mov
fdivrs
mov
cmpsl
xchg
fnstcw
leave
repz
icebp
adc
xlat
jb
lods
mov
div
mov
or
dec
mov
ds
repnz
sbb
mov
in
sbb
inc
in
push
aam
dec
out
fadds
dec
inc
daa
sub
adc
mov
int
pop
xchg
inc
cwtl
push
sbb
mov
bound
cs
fwait
cs
jp
push
dec
dec
jle
pop
clc
mov
movsl
push
adc
cmp
stos
je
jmp
jne
add
dec
jae
in
ljmp
mov
mov
push
add
loope
imul
das
xacquire
jmp
popa
xchg
sbb
pop
dec
inc
add
into
jg
cli
pop
imul
adc
shlb
cmp
or
adc
enter
push
push
stos
mov
mov
mov
ret
movups
or
xchg
outsl
fnsave
lock
mov
xchg
fimull
mov
cmpsb
adc
aas
push
dec
fwait
jbe
mov
jmp
mov
mov
jge
mov
or
in
adc
xchg
bound
out
test
xchg
jne
mov
push
mov
testl
jmp
and
pushf
pmaddwd
lahf
cmp
jnp
sti
clc
lea
ljmp
sub
imul
jmp
sahf
cltd
rcll
das
call
push
xor
pop
aas
cld
xchg
lret
push
jp
sbb
mov
les
inc
cmp
jno
icebp
add
into
std
pop
ret
mov
dec
shr
push
loope
sub
in
pop
xor
mov
int3
lock
adc
push
push
mov
and
pop
decl
mov
inc
push
xor
cltd
push
xor
dec
jge
lret
sbb
mov
cmpsl
inc
and
xor
inc
pop
popa
mov
aam
bnd
mov
lods
pop
lcall
push
stc
or
inc
cltd
mov
pop
testl
jp
pop
pop
cmp
mov
fstp
je
pop
les
test
movsb
insb
andb
sbb
jae
in
cmp
xor
xchg
lret
cmp
addb
and
and
jmp
dec
clc
in
jno,pn
fidivrl
push
fcmovne
pop
daa
mov
out
mov
popa
jmp
lcall
mov
outsb
int3
jns
xchg
cmp
cmp
js
adc
pushf
pop
ljmp
push
iret
push
das
in
lock
sbb
ret
sbb
nopl
hlt
inc
rcrb
push
incb
sbb
xor
js
jle
push
scas
fildll
addr16
loop
and
aam
dec
iret
add
fsts
mov
xchg
and
mov
js
push
fstl
push
push
sbb
xor
mov
sbb
rorl
push
das
mov
aaa
dec
imul
sti
fmull
push
cltd
in
sti
push
scas
hlt
mov
sub
xchg
insl
pop
es
ret
std
sbbl
push
and
sbb
xor
decb
pushf
cmc
cmp
jmp
cmp
push
xchg
adc
fdivp
rcll
xchg
mov
mov
mov
aaa
mov
sub
xor
dec
and
call
cmpsb
inc
pop
jnp
push
or
lret
fwait
test
pop
jmp
sub
lahf
xor
fwait
pop
aam
dec
dec
cltd
xor
movsl
mov
pusha
mov
in
sahf
jb
dec
sub
pop
rorb
fmull
xor
mov
cs
pop
inc
mov
mov
jecxz
sbbl
stc
mov
jns
adc
mov
dec
lret
xlat
mov
mov
or
test
dec
fsts
ss
jae
mov
xor
push
mov
loope
leave
dec
pushf
inc
arpl
inc
or
push
and
inc
pop
xor
hlt
adc
pop
cmc
ds
xchg
dec
cmc
sbb
and
ret
mov
fisttps
or
fs
fdivr
mov
mov
sub
mov
into
imul
cmp
cmp
xchg
inc
clc
inc
insb
adc
cmpsb
aaa
inc
inc
lds
jmp
das
data16
sbb
imul
cmpsl
xor
fidivrs
sahf
push
cli
dec
fnstcw
inc
in
jb
stc
jbe
jb
xchg
out
pusha
les
sbb
mov
ljmp
or
and
scas
xlat
imul
fcoms
test
inc
hlt
test
mov
dec
jb
shll
push
hlt
mov
repnz
fwait
js
add
je
fistpll
add
xchg
cmpsl
outsl
hlt
xor
xchg
pop
test
push
movb
or
mov
ss
js
cwtl
or
lea
adc
jne
fildl
mov
pop
mov
mov
inc
mov
popf
jae
imul
enter
pop
lods
icebp
das
in
sbb
int3
mov
xchg
push
outsb
push
in
adc
fdivl
mov
pop
aad
xorb
rcrl
imul
hlt
mov
mov
mov
push
mov
jae
sbb
sbb
mov
xor
inc
sbb
push
jp
pop
lea
mov
das
ja
test
and
mov
mov
xor
mov
adcb
inc
pop
outsl
js
sub
pop
or
mov
lods
shrb
xchg
pop
push
mov
test
adc
cmp
cli
jb
push
pop
pop
outsb
iret
push
sub
cmp
sub
ss
call
imul
pop
mov
mov
adc
or
xor
lret
setae
jge
iret
cmp
mov
insb
sub
push
sbb
dec
cmp
lret
cmp
xchg
mov
cmp
xorl
inc
icebp
dec
sahf
sub
mov
repz
adc
jmp
call
inc
pop
xor
daa
add
sti
mov
test
adc
lods
test
adc
sub
push
loopne
sbb
hlt
in
pop
loope
das
stos
mov
jnp
faddl
adc
data16
inc
loope
and
jns
inc
jmp
shrb
jo
cld
jp
dec
dec
add
movsb
stos
scas
aam
loopne
mov
std
cmp
mov
je
sbb
inc
pop
or
pusha
mov
sbb
rcrb
adc
scas
xor
jmp
mov
mov
fcoml
xchg
jp
data16
rcrl
push
fidivs
add
out
out
iret
jno,pt
cwtl
cmc
mov
fldenv
mov
rclb
lods
add
sub
jle
sbb
sub
je
call
mov
cmp
stos
dec
sahf
repz
subl
cld
imul
dec
sub
aaa
xchg
push
or
and
or
lret
outsb
adc
repz
xorl
mov
ljmp
sbb
mov
imul
test
test
cmpb
fucom
push
jbe
outsb
inc
push
cmc
cmc
jg
mov
pushl
rolb
mov
pop
mov
xor
sbb
cmp
jle
adc
mov
cmc
aam
xchg
xchg
fcoms
aas
jbe
ffreep
adc
cli
pop
pop
test
sbb
jbe
jbe
mov
js
out
mov
sub
mov
fdivrl
lahf
mov
dec
lret
jle
mov
into
push
lret
negb
pop
xchg
mov
data16
mov
test
xchg
not
test
adc
or
fimuls
icebp
jle
ffreep
lea
sbbb
pusha
mov
shr
mov
adc
xchg
mov
mov
xor
mov
aaa
loopne
add
js
gs
lods
cmpsb
scas
in
aam
adc
jnp
cmp
js
mov
xchg
adc
xchg
int
push
cmp
jmp
push
cld
pop
push
pop
mov
sahf
cld
dec
pop
stos
es
push
enter
xchg
mov
push
mov
in
inc
adc
xlat
xchg
push
cli
scas
fwait
mov
inc
mov
movsb
pop
out
xor
sub
fwait
cmp
test
xchg
test
popf
fadd
push
stos
inc
sbb
fwait
outsb
sti
cmpsl
data16
cmp
jno
sbb
lods
ljmp
xchg
out
mov
inc
shll
xchg
andl
fisttpll
or
push
xchg
cld
inc
sub
lcall
idivl
pop
dec
sub
sbb
inc
movlps
inc
mov
xor
out
jle
jecxz
pop
stos
sbb
nop
adcb
jg
dec
out
roll
sub
mov
xor
jno
inc
fxch
hlt
ja
stos
push
fildl
jo
push
lods
daa
adc
cld
hlt
ror
push
sbb
adc
add
xchg
andl
sti
mov
pop
sbb
stos
pushf
or
mov
outsb
sub
in
dec
lahf
das
out
mov
in
dec
mov
add
dec
xor
xor
fs
inc
lahf
aam
enter
fdivrs
je
les
pusha
cmp
aas
mov
and
int
add
arpl
imul
sub
leave
mov
jno
stos
mov
mov
cmp
xchg
push
insl
or
pop
dec
push
mov
je
rcr
mov
testl
int3
jnp
imul
daa
pop
mov
cmp
rcrb
gs
jecxz,pt
lret
and
jne
lret
enter
xor
ss
pop
aam
aaa
je
push
imul
mov
mov
jo
pop
jae
xor
cmp
nop
stos
push
ret
arpl
or
sub
scas
inc
arpl
in
cld
xchg
add
inc
push
imul
push
mov
cmpsl
outsl
mov
and
sub
out
out
add
jl
loopne
pop
aad
into
mov
mov
jmp
cs
pop
cmp
jg
push
cld
jo
lock
out
mov
cmpl
in
sub
das
sub
adc
cmpsb
add
fstps
sub
lock
push
pop
mov
and
std
push
jl
xor
test
js
push
push
cmc
loope
sbb
pop
and
addr16
flds
lods
add
dec
push
mov
sbb
out
push
mov
int
cmp
sub
jne
inc
push
mov
sub
fisttpl
xchg
addr16
js
out
inc
sub
icebp
push
cltd
loop
mov
mov
fwait
dec
pop
xor
mov
xchg
xor
add
icebp
stos
xor
xor
xchg
jg
pop
sub
mov
loopne
dec
push
mov
inc
and
sarl
lods
push
out
ficomps
js
imul
negb
call
repz
ret
mov
mov
mov
fucom
outsb
addr16
inc
pop
pop
pushf
ret
nop
push
popf
mov
test
movsb
fcom
inc
ret
or
xchg
fists
cmp
std
cmpsb
sub
idivl
cwtl
inc
jno
mov
mov
adc
mov
pop
loopne
jle
jg
test
lret
adc
push
cli
fadds
aas
mov
xor
and
and
xchg
jmp
ss
sarb
aas
ficomps
or
xchg
push
pop
dec
inc
repz
sbb
daa
mov
loopne
int
fwait
stos
jbe
mov
js
adc
mov
sbb
push
lret
dec
cltd
cmpl
pop
cwtl
xor
movsl
push
xchg
push
nop
or
mov
xchg
int3
and
in
fistl
mov
push
mov
jbe
push
mov
mov
pop
jbe
pop
jnp
out
push
xorb
addb
pop
repz
std
add
sbb
fldenv
push
dec
adc
clc
in
cmp
or
in
cmp
or
mov
xor
cmp
movsb
adc
mov
into
push
in
fdivrl
pop
cmp
je
js
outsl
movsb
pusha
fwait
divb
imul
sbb
mov
xor
jo
cmpsb
int
shrl
mov
mov
add
and
xchg
add
push
outsl
cmp
xorl
jne
pop
and
pop
lods
daa
test
sub
mov
mov
adc
popa
shlb
fcmove
orl
aaa
out
and
inc
fisubrs
outsb
jns
jg
loopne
es
add
flds
and
outsl
or
cmc
push
jns
push
lock
or
dec
and
mov
mov
fs
add
mov
pop
xchg
into
dec
test
movsb
dec
cs
cli
imul
test
rolb
cmp
hlt
loope
ja
push
or
shl
mov
fisubs
dec
call
inc
loop
push
fidivs
push
jmp
ljmp
dec
subb
fdivs
movsl
rorl
xchg
stc
test
xor
outsb
xchg
in
aad
sbb
xchg
xchg
mov
adc
or
lret
push
mov
mov
mov
push
adc
lods
fdivl
rcrb
cwtl
les
repnz
adc
imul
test
inc
jmp
lods
std
clc
outsb
ljmp
int
cwtl
mov
lret
insb
mov
jno
adc
jbe
fists
inc
orb
pop
and
push
clc
mov
aaa
outsl
xchg
xchg
out
xchg
fldenv
in
and
xchg
lcall
mull
mov
popa
cmpsl
pop
pop
jge
sbb
xchg
dec
call
call
inc
mov
cmp
addr16
cli
cwtl
inc
add
push
pop
dec
mov
lret
and
inc
fdivl
stos
std
daa
push
xor
jmp
out
dec
sbb
mov
lret
sahf
push
leave
mov
pop
loope
or
les
mov
mov
sbb
test
and
add
stos
xor
bound
popl
fdivl
xlat
int3
or
xor
sub
dec
xchg
pop
aad
orl
repnz
push
adc
dec
sahf
and
xor
or
out
and
inc
rcll
nop
cmc
inc
mov
mov
cltd
xchg
xor
scas
add
xlat
shrb
and
idivl
add
jb
pushf
mov
cmpsl
dec
push
imul
xlat
lcall
sub
jle
lahf
mov
hlt
push
push
orl
mov
pop
lods
jg
fsts
sub
xchg
cmpsb
xlat
mov
les
repnz
les
ss
inc
je
arpl
out
int3
leave
or
test
addl
inc
push
add
mov
dec
pop
inc
sbb
pop
push
test
shr
xor
dec
test
add
or
popf
sub
movsl
inc
jp
dec
and
push
insb
sub
sub
xchg
push
les
lret
and
mov
xchg
repnz
push
sub
arpl
push
pop
test
push
je
in
scas
clc
pop
inc
mov
fstpl
sub
adc
pop
push
fld
aas
mov
add
std
sahf
das
lahf
mov
or
testl
ss
cmpsb
cmpsl
xchg
dec
mov
sbb
jl
repnz
dec
inc
out
hlt
imul
std
loop
adc
out
sub
shll
js
pusha
lcall
mov
dec
cmc
mov
out
jns
pusha
cmpsb
or
jnp
push
adc
stos
es
scas
xchg
pop
test
adc
mov
dec
loope
test
sti
inc
dec
adc
lds
mov
out
rcrb
fs
sub
shlb
insb
stos
test
dec
pop
repnz
jecxz
add
arpl
and
add
outsl
add
or
adc
iret
adc
lds
adc
xor
daa
je
mov
imulb
jnp
scas
xor
xchg
add
jecxz
mov
mov
dec
rolb
cmpsl
dec
xchg
push
pop
outsl
or
or
push
in
mov
push
xor
pop
into
ja
not
das
int3
xchg
xchg
dec
or
push
hlt
lret
lahf
lock
mov
sub
pop
adc
and
mov
mov
pop
mov
js
out
int3
int
cmpsl
fwait
lea
sbb
xchg
jmp
arpl
xchg
sub
sti
jno
dec
xchg
stc
dec
mov
cmpsl
sahf
push
sub
sub
fsubrl
in
pop
adc
out
pop
adc
clc
dec
ficompl
mov
adc
aas
lcall
outsl
xorb
jecxz
movsb
and
jle
addr16
jecxz
inc
addr16
mov
int3
xchg
arpl
paddb
stos
inc
fcoml
mov
lret
mov
sbb
stc
aad
jle
cs
xor
jmp
loope
xor
mov
xchg
adc
add
gs
neg
mov
push
and
loop
lods
movsb
pop
cmc
mov
fldcw
add
xchg
mov
loope
xor
ret
pop
mov
mov
fs
jge
and
lods
sub
mov
jnp
xchg
insb
into
iret
stos
mov
jnp
xor
scas
fwait
cmp
loope
push
jb
mov
js
out
inc
sbb
pusha
movsl
mov
loope
es
fucomi
cmp
mov
mov
mov
push
out
push
lret
cmp
and
dec
mov
leave
ret
call
rcll
jge
cmp
popa
in
mov
outsb
jne
push
in
mov
mov
cmpsb
sbb
loopne
jae
lods
aam
scas
mov
inc
xor
pop
popf
mov
das
loop
dec
popa
inc
stos
hlt
inc
lret
xchg
rcrl
and
jbe
pusha
rcr
pop
mov
inc
mov
aam
cld
and
or
push
jb
sbb
shl
cwtl
fildll
ds
cmp
ret
arpl
roll
fdivrs
leave
push
hlt
and
stc
jne
xor
adc
cwtl
mov
fldt
js,pn
cmp
repnz
into
scas
mov
iret
stc
xchg
mov
addr16
pop
insl
int
jle
mov
xor
arpl
inc
pop
frstor
fidivrl
xchg
cmp
testb
xchg
xchg
lods
pop
xor
xor
and
or
out
pusha
loope
add
push
push
fcompl
dec
mov
imul
push
jp
mov
gs
mov
clc
dec
sub
push
mov
add
pop
cmp
out
and
mov
cmpsb
xor
arpl
push
jecxz
mov
push
fistpll
xchg
fistps
dec
ljmp
stos
cmp
int3
movsl
mov
jmp
inc
xor
xchg
push
mov
mov
or
jmp
addr16
and
mov
imulb
popl
mov
jg
dec
inc
negb
pop
pop
cmp
mov
cwtl
into
in
sbb
inc
xor
push
mov
jns
out
and
push
ror
or
ficomps
lods
add
pop
aaa
mov
mov
mov
push
inc
jmp
adc
push
jp
mov
fmulp
mov
fdivs
or
out
loopne
aaa
lock
cld
dec
bound
fists
enter
call
inc
sub
lcall
mov
js
sub
jl
cld
jle
lock
loop
sbb
jmp
jns
jbe
adc
fsubrl
stos
or
out
adc
xchg
sub
addb
sub
cld
jl
sbbl
and
aam
cmp
pop
sbb
or
jg
and
xor
lods
dec
shl
icebp
clc
call
and
xchg
enter
push
lods
sbb
fcoms
xlat
mov
bound
push
fisubrs
add
nop
dec
mov
mov
into
add
xchg
rcr
push
xorb
movl
pop
push
out
imul
cmp
cld
cmp
repnz
push
das
sub
xor
lea
ficoml
imul
xor
or
mov
adcb
mov
aaa
inc
adc
or
nop
lods
jnp
jl
xor
jge
add
aas
jo
or
sub
cli
in
cltd
cmp
sahf
ljmp
push
icebp
pop
xor
clc
cmpsl
icebp
jmp
sbb
lahf
out
fisubrl
aad
cmpsb
xchg
inc
shl
ds
sbb
inc
dec
mov
cmp
sbb
adc
ficompl
cld
outsb
mov
and
mov
cltd
mov
outsb
mull
push
fwait
or
sbb
cwtl
ja
pop
sbb
dec
pusha
insl
lock
pop
lods
jg
jae
pop
and
jmp
adc
data16
mov
std
pop
or
cmp
pop
push
arpl
std
hlt
into
in
or
pop
arpl
imul
sbb
test
jns
or
pop
sub
mov
and
les
test
cltd
adc
push
stos
imul
add
int3
fisttps
sbb
push
je
cmpsb
jmp
pop
jnp
pop
dec
jle
add
lods
mov
gs
lahf
into
cmp
or
mov
xor
or
mov
fwait
lock
dec
push
fbld
aam
dec
or
xor
pop
pop
lcall
mov
adc
push
ljmp
nop
ds
clc
jmp
jo
jge
cltd
or
mov
jmp
inc
fwait
add
scas
adc
lret
cwtl
js
and
cmp
mov
xchg
cmc
xchg
pusha
data16
int
lret
mov
and
jp
sbb
jo
push
cmp
mov
and
fcomip
xor
test
insl
push
xchg
adc
out
jno
sub
adc
cs
mov
inc
aaa
inc
pop
fstps
loope
cltd
mov
inc
in
loop
xchg
or
bound
gs
mov
mov
cld
das
cmp
addr16
cltd
pusha
push
std
pushf
jns
jmp
out
jl
adc
cmpsl
mov
aam
add
cmp
pop
adc
mov
int
mov
jns
je
js
mov
jle
lret
call
pop
or
ds
leave
sub
orl
popf
popf
xor
aad
xlat
cmc
hlt
out
js
dec
jnp
lods
int
call
mov
push
sub
jecxz
push
fcoms
xor
lahf
ljmp
jae
mov
dec
loope
ljmp
in
or
or
jg
dec
fisubl
sub
aaa
or
inc
imul
fs
push
aam
push
les
sub
stos
js
mov
mov
aad
std
ficomps
mov
xchg
sub
and
arpl
fdivl
rcrb
or
and
add
loop
popa
in
pop
jl
jecxz
mov
push
inc
mov
and
shll
mov
xor
aad
dec
cmpsb
pop
je
jl
xor
stos
xor
sbb
inc
cmp
js
shr
push
in
mov
adc
sub
inc
out
xor
inc
pop
subb
lods
or
idivl
sbbb
pop
mov
jno
mov
dec
mov
mov
inc
adc
xorb
jp
movsl
sti
mov
jnp
xor
ficoml
xor
mov
xchg
es
cmpsb
adc
cmp
lds
enter
shlb
xchg
or
and
cmp
inc
fistps
push
or
punpckhbw
loop
pop
xchg
or
pop
test
pop
ss
iret
push
mov
sub
dec
outsl
xchg
xchg
mov
scas
fnsave
ljmp
mov
jnp
push
push
scas
loope
mov
dec
xor
add
mov
and
out
mov
dec
or
jle
jo
call
scas
addb
xor
pop
shl
jge
ljmp
aaa
sub
loopne
in
mov
push
adc
repnz
add
popf
outsb
test
push
jnp
imul
push
mov
push
ficoms
xor
cs
lcall
daa
shlb
shll
fs
sarl
lock
lea
mov
jl
popf
or
test
dec
adc
xor
pop
sub
pop
add
inc
icebp
add
rcrb
les
and
and
or
xchg
out
addr16
adc
cmpsb
lret
icebp
sub
bound
enter
xchg
or
lock
mov
dec
into
sub
mov
repz
dec
in
xchg
xorl
jge
ret
arpl
pop
ja
lahf
jns
es
mov
push
push
orb
icebp
inc
xor
lock
cmpsb
fwait
int
out
sub
add
push
test
in
testl
iret
and
bswap
push
mov
inc
lock
xchg
shlb
imul
ja
push
add
mov
mov
sbb
scas
cmc
mov
popf
mov
xchg
sbb
es
lret
insl
faddl
sub
fwait
shll
shll
cwtl
xchg
inc
dec
in
ret
mov
inc
aam
inc
or
enter
mov
lods
stos
pop
aam
in
mov
inc
mov
aas
xchg
movsl
jnp
xlat
pop
cmp
adc
call
movsb
ficompl
pop
int3
in
add
std
cltd
stc
mov
fisttpl
mov
scas
or
cmp
dec
lock
dec
rorl
mov
mov
push
std
pop
es
mov
subb
inc
test
jmp
fwait
mov
js
xor
jns
mov
or
cmpsb
movsb
jge
sbb
jnp
xlat
xchg
aas
les
inc
push
out
xor
adcl
fnstcw
dec
mov
pusha
xchg
repz
test
sbb
bound
and
jbe
xchg
xlat
xchg
lods
out
filds
push
out
mov
and
leave
jp
clc
inc
loop,pn
dec
loope
dec
mov
adc
cmc
ret
xchg
rcrl
out
xchg
push
fs
int
adc
es
fmuls
sbb
stos
and
aas
outsl
test
aam
or
cmpb
xor
add
cmpl
sub
push
test
adc
es
sarl
imul
adc
aas
lock
ret
inc
aaa
lahf
push
mov
or
sub
int
adc
inc
test
push
add
les
adc
cltd
mov
jle
les
cwtl
and
xor
pop
pusha
js
inc
int3
xchg
and
dec
subl
mov
push
sbb
ja
mov
cmp
sub
adc
das
inc
inc
lods
push
pop
lret
sbb
pop
test
ss
lea
out
jne
inc
mov
dec
xchg
inc
mov
push
addb
test
adc
outsb
dec
pop
xchg
jp
xor
int3
sar
call
jmp
imull
dec
cmp
or
cmp
sub
ljmp
fmul
jo
popa
addb
hlt
pop
arpl
jb
mov
push
test
std
lds
mov
dec
pushf
xchg
mov
call
stc
sti
orl
pop
stos
push
mov
sbb
insb
push
in
popa
push
inc
in
into
xor
mov
das
jmp
push
mov
ja
sbbb
jl
andb
xchg
jg
sahf
into
add
add
jns
cmp
out
out
std
cmp
fidivrl
jne
imul
adc
out
push
inc
mov
mov
aam
call
mov
movsl
cli
pop
cld
sti
and
xchg
and
ljmp
push
scas
cld
scas
and
in
pop
add
ljmp
es
mov
repnz
sbb
fcoms
cld
int
adc
push
and
xlat
insl
lea
pop
repz
sbb
jnp
movsl
inc
mov
testl
push
hlt
and
loop
sbb
mov
jnp
or
fwait
xor
lret
inc
fists
and
test
sub
ds
sbb
shlb
test
inc
lds
pop
cmp
outsb
or
xchg
or
jno
dec
mov
pop
xchg
xor
xchg
scas
imulb
movsl
aas
pop
sar
sub
xchg
divb
popf
cmc
xchg
loopne
add
cmc
adc
and
push
fmulp
ret
and
movsl
lret
imul
outsb
in
pop
push
jbe
ret
xor
scas
pop
or
xor
pop
or
xchg
repnz
jecxz
add
stos
fildl
popa
fs
cltd
imul
push
sbbb
pop
mov
inc
jo
push
adc
inc
inc
cld
data16
loopne
xchg
add
faddl
ja
pop
int3
jne
pop
jle
dec
insb
movups
popa
or
pushf
adc
or
hlt
inc
stc
sub
dec
cmp
roll
iret
loopne
sar
rcrb
fidivrl
adc
sub
js
aam
sub
loope
inc
sbb
pushf
cmp
or
and
fisttpll
mov
fldt
test
arpl
mov
pushf
xchg
pop
or
jno
dec
dec
outsb
adc
icebp
dec
or
mov
sub
les
jno
mov
scas
popl
cli
and
adc
dec
cltd
pop
aas
fdivrs
clc
stos
add
insl
cmp
inc
xor
jmp
sub
mov
dec
inc
ret
push
mov
cld
in
mov
fisttps
ror
arpl
jbe
xchg
xchg
sub
repnz
and
sub
rolb
sbb
push
cltd
add
sub
jmp
inc
cmc
shl
xchg
xchg
ret
pop
cs
xchg
cmp
or
arpl
jo
cmp
in
imul
mov
mov
outsl
fstpl
push
aad
stc
add
mov
mov
loopne
jo
or
test
mov
jbe
test
add
inc
push
ljmp
xlat
lahf
mov
in
fildll
push
jge
or
cmp
pop
jns
popa
rorb
xor
cmp
push
cmp
dec
cmp
mov
ret
and
sub
and
xchg
sti
in
adc
mov
cmp
arpl
dec
cmpsb
xchg
push
xor
aam
scas
sub
inc
outsl
outsl
ret
sub
loope
fdivrp
or
xchg
pop
push
xor
loopne
in
lds
lea
lcall
stos
pop
aad
dec
jg
jecxz
xchg
lods
xchg
xchg
cmpsb
lahf
ljmp
xchg
int3
popf
dec
outsb
cmp
bound
cs
jne
push
and
sbb
or
xchg
add
sbb
std
aaa
add
in
jge
push
adc
and
xor
jnp
clc
rorl
into
adc
sbb
in
jne
out
out
mov
sarb
rclb
jne
frstor
pop
imul
mov
fildl
imul
sub
push
pop
clc
test
movsl
mov
cmc
pop
fisubs
std
cmpsl
ja
xor
pop
cltd
gs
mov
push
imul
imul
xlat
imul
je
sub
mov
push
sbb
jmp
pop
inc
rcrb
jg
mov
jle
fmul
aaa
sbb
shl
jae
mov
push
push
je
jns
das
addr16
ffree
xchg
mov
jmp
or
int3
add
xchg
fistps
pop
xchg
into
jmp
stc
stos
fwait
loop
repnz
arpl
cmp
pop
cmc
ds
pushf
shr
mov
cmc
and
mov
fimull
int3
push
ret
iret
scas
xchg
xor
push
pop
and
int
or
in
sub
cmp
push
enter
lret
fwait
add
jo
dec
movsl
push
rclb
lret
fs
mov
or
adc
or
and
sbb
xor
fdivs
mov
mov
mov
icebp
in
dec
push
mov
ds
out
push
lock
mov
clc
lods
dec
sub
in
adc
ja
and
movsb
adc
add
fisubs
adc
push
or
xor
arpl
jle
jge
insb
aas
dec
in
fwait
pop
xchg
mov
in
loop
sub
sub
in
stos
sar
imul
mov
adc
stc
leave
movsb
pop
mov
mov
inc
add
add
rolb
lds
cmovbe
lods
leave
mov
cmp
mov
adc
inc
xor
and
jge
ret
dec
jno
adc
jb
push
push
dec
push
gs
or
fnsave
push
jmp
xchg
scas
mov
add
mov
jle
xor
or
es
aad
mov
push
lds
icebp
cmc
xchg
inc
push
push
aaa
jmp
pushaw
sbbb
add
mov
dec
daa
iret
sub
pusha
xchg
call
dec
roll
jge
jp
mov
push
add
xchg
lret
push
inc
and
ljmp
cld
xchg
fisubs
in
add
xlat
cmp
lock
sbb
xor
inc
in
push
xor
and
sar
mov
xlat
or
sbb
lahf
ds
mov
lahf
repnz
jmp
xchg
add
ret
ljmp
cwtl
xor
xchg
sbb
adc
push
add
ja
inc
jne
repnz
sarb
std
pop
in
cli
pop
jo
sub
insl
push
mov
in
ljmp
or
xchg
test
and
insl
scas
shrb
xor
jno
sbb
pop
into
aam
sbb
sarl
mov
imull
mov
xchg
or
pop
mov
cmp
add
mov
jl
adc
pop
mov
or
push
sub
in
sub
ss
aas
cltd
std
stos
popf
pop
test
add
cmp
push
cmp
iret
pushl
fisubrs
fwait
mov
pop
ret
xchg
cmpsl
mov
fsubl
cmp
cld
fisttpl
and
rep
and
aas
mov
jecxz
repz
sti
mov
xor
jp
cvtpi2ps
scas
inc
stos
xrelease
fstps
mov
lahf
stos
push
nop
sub
leave
int
loopne
ret
shrl
lret
push
pop
or
sub
pop
call
mov
adc
cmp
push
inc
lret
loope
aad
in
pop
cli
push
out
xor
push
call
push
inc
mov
cmp
mov
jnp
and
hlt
pop
repnz
mov
nop
pop
outsl
push
pop
inc
add
jmp
out
insb
call
leave
xchg
jae
into
ja
stos
mov
test
lea
jae
movsl
insl
xchg
jno
mulb
cli
test
inc
mov
inc
cmp
mov
jg
getsec
pop
lea
xchg
cld
push
xorl
insl
xchg
sar
aaa
into
dec
iret
inc
jae
add
es
mov
sbb
out
gs
mov
add
int3
repz
sub
pop
sbb
stos
adc
das
xor
sbb
sbb
sub
sti
fsubp
sub
in
je
mov
fwait
pop
test
test
mov
pushf
popw
inc
jmp
insl
fadd
cltd
xchg
data16
gs
jae
sub
mov
add
cld
data16
mov
adc
push
rcrb
mov
push
icebp
push
mov
push
lret
mov
xchg
je
and
xlat
out
adc
in
test
mov
push
xor
push
addr16
loop
scas
mov
push
imull
mov
stos
data16
jg
push
sarl
jecxz
pop
mov
adc
inc
xor
lods
xorl
inc
adc
mov
push
dec
or
mov
stos
sbb
data16
mov
sahf
push
dec
iret
jo
gs
and
push
xchg
fsts
fabs
dec
jmp
fs
ljmp
mov
or
rcrl
arpl
into
stos
cli
and
hlt
jne
shll
add
push
xchg
repnz
mov
clc
and
mov
stc
adc
push
pop
and
incb
scas
cmp
mov
jmp
jp
bswap
push
shl
push
imul
add
xchg
or
mov
add
dec
icebp
push
stos
add
scas
movsb
hlt
push
pop
mov
mov
arpl
cmpsb
xor
mov
mov
pop
imul
sbb
je
stos
in
aas
insl
fisttps
lcall
pop
inc
and
stos
sbb
in
lods
mov
jne
fildl
andl
or
outsl
mov
mov
push
bound
fadds
mov
rorl
jmp
sub
or
mov
push
cmpsl
add
cwtl
mov
push
shll
adc
xchg
adc
ret
add
sarl
into
or
and
jbe
loopne
pop
in
or
fidivs
or
dec
loop
sbb
stos
je
mov
gs
xchg
call
inc
adc
in
push
repnz
push
bound
cltd
and
xchg
pop
neg
loopne
inc
cli
or
inc
outsl
mov
sbb
pop
xchg
xchg
mov
iret
fstpl
sbb
leave
lock
xchg
sar
jo
jb
mov
aaa
inc
xor
push
jb
jbe
cmc
mov
popf
or
aam
xchg
lods
outsl
mov
cmc
adc
lcall
imul
aas
xor
push
xor
ljmp
das
push
push
aam
pop
fnstenv
mov
or
js
or
add
push
inc
xlat
hlt
fnstsw
sbb
and
outsb
ljmp
shrb
ljmp
daa
mov
mov
sbb
push
adc
or
mov
xchg
push
xchg
xchg
pop
test
jns
and
xor
inc
ret
cmp
dec
pop
mov
hlt
nop
mov
mov
fstl
cmp
scas
iret
lds
cli
mov
iret
jo
sbb
aad
sbb
jns
fsubr
ret
repnz
stc
movsb
lret
and
adc
xchg
mov
jo
mov
in
cmc
mov
scas
ds
stc
lret
dec
or
mov
mov
and
mov
mov
push
in
and
pop
int3
es
loope
cmp
push
sub
insb
pop
push
mov
cli
pusha
add
frstor
sbb
fiaddl
fidivs
add
sbb
xor
mov
aad
adc
mov
and
in
mov
lea
stos
gs
loope
xchg
outsl
ja
mov
lret
insb
mov
push
cli
sbb
jle
mov
or
shr
fisttpl
add
jmp
data16
push
bound
xchg
fwait
bound
mov
subl
rcr
inc
push
test
dec
cmp
lcall
xchg
mov
mov
sub
mov
xor
cmp
and
jae
aam
fs
mov
in
push
sub
popa
pop
mov
insb
push
repz
sbb
dec
dec
add
enter
into
scas
arpl
inc
push
mov
dec
out
inc
repnz
mov
sub
shll
add
push
xor
in
xchg
sbb
nop
cmp
xchg
and
jmp
das
stos
adc
xchg
xchg
dec
xchg
push
dec
call
mov
sub
add
xchg
sub
or
add
dec
fsubr
xlat
push
jns
popf
into
mov
stos
lods
inc
out
add
xor
inc
lret
ja
mov
sub
int3
or
cmp
and
inc
pop
lret
jmp
movsb
lahf
adc
sbb
lods
or
dec
data16
inc
int
xchg
xor
iret
mov
ficoml
xchg
pop
addl
mov
cmp
std
xor
mov
js
movsl
sti
lods
mov
push
mov
test
call
mov
and
jp
dec
sub
outsl
inc
mov
imul
mov
dec
and
jle
fmull
loope
sahf
cmc
dec
vphaddubw
adc
lahf
xchg
and
or
or
add
movsl
mov
inc
push
das
dec
pop
jecxz
ljmp
lods
nop
dec
data16
pop
call
ja
dec
dec
stos
aaa
nop
mov
sbb
loope
cmp
cltd
movb
sub
push
cmp
and
mov
add
ret
es
or
pop
aam
cmp
push
mov
sbb
je
push
mov
jge
mov
fstps
mov
mov
mov
mov
lret
daa
lahf
sbb
fdivs
test
ds
xchg
mov
jmp
push
gs
call
jl
pop
cmp
xlat
jmp
out
sahf
and
insl
ficompl
and
xlat
pop
mov
test
mov
xchg
lock
inc
icebp
mov
xor
out
mov
insl
inc
imul
push
pop
sbb
pop
loope
divb
cmpsl
sub
mov
cmpsl
jmp
sub
add
mov
pushl
les
iret
inc
pop
pop
jnp
gs
das
negl
pusha
pop
ret
fyl2x
pop
pop
mov
pop
addl
mov
js
inc
sbb
out
jmp
sub
popf
push
jge
shlb
pop
js
push
adc
inc
repz
jno
or
sbb
mov
xchg
into
dec
inc
pop
movsl
xor
jns
and
pop
mov
mov
mov
and
mov
lret
stos
test
fdivrl
shl
push
and
xor
sub
je
and
in
cmp
mov
daa
mov
push
jne
fs
and
xor
lahf
mov
xchg
push
jg
inc
iret
loopne
outsl
and
xchg
int
mov
rcrw
lods
fistpll
fdivl
test
xchg
outsb
loop
push
stc
lea
jmp
lret
push
jmp
add
cmpsl
sbb
dec
inc
jmp
mov
filds
pop
push
hlt
push
popf
stc
clc
cmp
test
xchg
pop
xor
insb
arpl
aaa
movsl
dec
test
push
xor
adc
push
repnz
arpl
lahf
adc
or
mov
or
fistps
xchg
jb
xchg
fs
decb
sbb
cltd
add
mov
loopne
jo
mov
sub
and
test
jns
jae
andl
ret
ret
popf
sub
dec
mov
popf
cmove
sub
jnp
and
sbb
push
pop
push
mov
ret
mov
fsubr
popa
dec
jo
adcb
icebp
and
jg
dec
out
mov
dec
adc
cli
or
cmp
sbb
sahf
lcall
dec
pusha
call
imul
push
rcr
dec
fwait
arpl
push
push
or
xchg
mov
aad
faddl
ss
add
pop
lret
in
cmp
mov
popa
rcrl
jns
es
pop
xchg
lock
push
and
test
js
jno
xor
or
pop
sbb
in
lock
faddl
rcr
pmaxub
adc
cmp
push
out
loope
outsb
and
imul
lock
mov
push
jge
mov
sub
movsb
in
pop
mov
xor
out
popf
fisttpll
mov
cwtl
sbb
adc
cmpsb
adc
fcompl
movsl
xchg
push
cmpsl
cmpsl
push
add
out
fwait
push
mov
xor
data16
push
mov
cmp
xchg
jb
out
jmp
ds
test
jbe
cwtl
jecxz
aas
adc
fprem
adc
xchg
dec
add
mov
insl
or
andb
lods
fisubs
cmp
jecxz
jbe
cmpsb
jbe
ret
cmc
mov
cmp
push
push
cmp
sahf
add
sahf
insb
mov
bound
dec
xchg
out
insl
popf
pop
mov
mov
pop
add
mov
std
ficompl
cmc
lret
fidivs
adc
pop
mov
xor
cmp
fcmovnb
sahf
cmpsb
sub
iret
lahf
cmp
adc
mov
jmp
arpl
incb
or
les
inc
pop
bound
mov
inc
hlt
dec
sub
rolb
repz
dec
inc
jg
sub
imul
jbe
ret
hlt
jl
xchg
jg
mov
loopne
fiaddl
and
lcall
cmpsb
cmpsb
insb
xchg
mov
mov
jg
push
sbb
cmp
ret
and
xor
jbe
ficoml
xor
lock
shll
sbb
in
mov
xchg
clc
nop
test
fwait
repz
cmp
in
lret
das
loopne
jne
cli
lret
xlat
cmp
add
or
inc
or
mov
mov
ret
xor
and
jecxz
xchg
jno
mov
std
pop
ja
mov
mov
sbb
dec
xor
and
xlat
lret
imul
les
and
jbe
stc
cmp
xor
test
test
jbe
fdivrl
cmpsl
push
push
mov
jl
mov
imul
movl
or
pushf
xlat
pop
mov
inc
subb
add
mov
pop
xor
fs
pushf
mov
mov
jmp
sbb
xchg
fwait
sub
sub
pop
cmpsl
fldenv
mov
mov
cltd
insb
pop
cmpb
aaa
dec
push
jno
inc
into
shlb
inc
outsb
mov
lcall
jae
movsb
roll
xor
xchg
inc
popf
pop
push
popf
cs
push
jb
xchg
mov
xor
out
popa
xor
jmp
lcall
xchg
inc
sub
or
stc
out
shl
mov
bound
cmp
push
jmp
push
loop
out
sbb
and
sarl
xor
inc
jne
push
dec
shll
xor
xor
nop
cmp
xchg
stos
outsl
inc
mov
fwait
sbb
inc
hlt
bnd
pusha
mov
mov
lds
insb
aas
cmp
sub
sub
dec
ret
in
lds
scas
sbb
mov
xor
xchg
sbb
jmp
movsl
repz
push
ds
xor
dec
ljmp
movsb
xchg
dec
hlt
mov
xchg
movb
inc
pop
push
out
es
inc
add
addl
in
aam
push
mov
aad
out
int
dec
bound
sbb
mov
jo
inc
repz
mov
lods
mov
stc
fstl
push
sub
repnz
ret
jb
lods
jp
inc
mov
pop
xor
xchg
add
aas
inc
or
push
insl
ficoms
faddl
pop
aaa
mov
cmp
xor
pop
in
repnz
call
push
das
mov
fsubrl
std
cld
mov
mov
jb
shll
cmp
shll
les
and
sbb
sub
adc
insb
mov
sub
aam
mov
sub
or
cmp
movsl
mov
test
shll
aas
push
ret
leave
dec
or
mov
and
dec
sbb
das
adc
jbe
adc
mov
mov
pop
outsl
mov
pop
lahf
xor
mov
ljmp
stos
leave
mov
jecxz
ss
push
std
push
daa
adc
mov
call
mov
inc
popf
sub
push
pop
repnz
jl
fimull
rcrl
fsubp
mov
sarl
test
push
xor
leave
loope
fdivs
repnz
xor
xor
loopne
int3
sub
or
cmp
ds
jl
sbb
adc
adc
inc
movsb
out
in
push
jb
arpl
xchg
inc
and
mov
and
and
sbb
jmp
jno
or
mov
lock
shll
xor
cmpsl
daa
dec
pop
cld
pop
pusha
sub
cwtl
testl
dec
cmp
popf
xor
cmp
cmp
rcrl
adc
pop
mov
test
dec
dec
popf
mov
fadd
jg
lahf
dec
jne
jnp
out
mov
out
cmpsl
ret
lds
and
mov
push
bound
xchg
test
xor
and
or
fildl
gs
push
bound
int3
mov
mov
int3
fwait
iret
loopne
and
jbe
repnz
std
mov
mov
hlt
cs
rcrb
in
out
nop
cmc
repnz
dec
lods
push
in
xchg
or
aad
scas
repnz
pop
cmpsb
mov
and
fsts
inc
pusha
addr16
adc
xor
leave
jmpw
or
repz
test
push
push
je
mov
sub
xchg
das
rolb
mov
es
dec
pushf
push
or
push
fnstcw
and
aaa
scas
cli
fimuls
sub
ljmp
pop
test
and
jmp
dec
xchg
in
lret
sub
dec
cmc
loopne
inc
push
pop
xchg
xchg
fldl
rorl
xor
iret
xor
cmp
loop
jno,pt
mov
push
jo
cmpsl
jg
call
dec
das
iret
imull
js
ret
jle
add
or
push
xchg
adc
dec
stc
push
mov
xchg
dec
imul
fisubs
push
push
mov
ss
mov
in
xchg
dec
in
sub
jmp
cmp
add
mov
inc
enter
pop
pop
daa
addl
mov
sbb
ss
dec
testl
xor
stos
js
cmp
out
mov
add
sbb
pushf
insl
inc
in
sbb
mov
mov
test
mov
lock
sbb
loopne
push
js
jo
jnp
xorl
lret
ret
jl
jnp
or
or
in
mov
aad
pop
mov
cmp
inc
iret
in
mov
stos
insb
add
dec
xchg
fs
test
aas
call
scas
mov
hlt
scas
cwtl
xchg
xlat
cld
xchg
call
mov
inc
inc
repz
cli
leave
ja
cmpxchg
dec
mov
adc
xchg
add
mov
rclb
mov
test
inc
add
push
fwait
add
loopne
pop
mov
push
mov
xchg
mov
fcompl
scas
and
dec
lret
incb
pop
stos
push
cld
std
jl
push
in
pop
icebp
inc
fmul
push
lcall
call
stc
inc
mov
data16
ss
sub
cmp
cmp
fnstenv
xchg
ret
lret
inc
inc
aaa
mov
popa
insl
xor
pusha
testb
cmpsl
mov
lods
pop
loope
sub
xor
or
push
jno
mov
in
loope
imul
mov
fstp
mov
arpl
rolb
inc
les
sti
sub
mov
shll
add
stos
push
xor
jns
aas
ds
mov
fwait
push
scas
sbb
sbb
gs
xorb
add
sub
inc
mov
aam
xorb
movsb
inc
scas
call
gs
outsb
mov
je
jae
or
pop
ret
add
insb
and
hlt
out
sub
adc
mov
out
lds
mov
nop
jae
ret
or
mov
aas
rolb
mov
dec
punpcklbw
push
jge
imul
sbb
push
adc
fidivrl
scas
xor
movhps
pop
or
push
pop
sub
addr16
cld
jmp
sahf
adc
xchg
lcall
rorl
inc
dec
adc
xchg
leave
adc
and
test
lret
mov
push
pop
pop
sahf
fimull
push
rolb
lds
loope
sub
mov
fadd
cld
jmp
cmp
mov
int3
mov
ret
cmp
sbbl
add
sar
mov
dec
add
iret
iret
sbbb
add
push
jnp
inc
bound
subb
or
cwtl
pop
hlt
pop
sbb
cmp
movsl
jmp
jmp
lcall
mov
lret
xchg
sub
int3
je
stos
mov
add
imul
aas
or
inc
push
mov
iret
inc
xor
fninit
int3
add
out
inc
fists
mov
mov
cmc
mov
ljmp
inc
int3
push
and
mov
jb
aaa
movd
xchg
jo
pusha
sahf
dec
xlat
push
mov
push
and
lods
fstp
or
call
aad
sahf
xor
iret
aas
inc
pop
inc
jnp
adc
and
aad
hlt
adc
push
fisttpl
or
mov
fistpl
mov
jo
cmp
cmpsl
push
xchg
out
inc
outsb
sbb
mov
cmp
or
jge
dec
jge
nop
push
jg
push
test
lods
iret
in
push
jg
push
arpl
inc
fcom
dec
cmp
push
das
dec
or
in
sbb
jecxz
lcall
xchg
and
and
xchg
sub
push
inc
mov
arpl
jo
inc
insb
push
inc
cwtl
xchg
ficomps
mov
adc
xor
pop
popa
mov
jb
jge
cwtl
pop
mov
out
xor
jbe
lahf
adc
ret
xor
jle
sub
sub
sbb
xchg
dec
xchg
mov
ja
xchg
sbb
pop
add
mov
mov
mov
in
fs
sbb
add
add
adc
ljmp
rcll
ljmp
pusha
mov
xchg
push
mov
push
stos
sarb
sub
mov
xchg
lahf
pop
pop
xchg
xchg
lods
cli
mov
jle
jle
pushl
add
out
jbe
pop
int
push
leave
add
loop
mov
fdivl
out
push
lods
push
xchg
and
iret
inc
pop
dec
repz
test
and
sbb
pop
jnp
xchg
lret
adc
jge
jmp
mov
cli
push
and
fnsave
add
cmp
shrb
mov
aad
xor
pop
dec
out
clc
hlt
dec
and
clc
pop
ret
shlb
movl
popf
fadds
sbb
in
test
aam
int
icebp
fildl
rclb
dec
fwait
stos
mov
cmp
xor
cmp
ret
xor
hlt
inc
or
xor
xor
lods
jb
popf
sbb
scas
jmp
ja
inc
pop
movsl
rclb
fwait
gs
pop
jle
add
daa
call
adc
add
mov
sti
mov
push
cmp
or
sub
inc
pop
push
or
mov
mov
xor
test
pop
pop
pop
add
in
push
outsl
gs
test
jmp
add
cmp
push
push
fs
xchg
mov
xor
inc
ret
cmp
add
and
pusha
mov
repnz
stc
stos
xchg
cmc
pop
mov
jns
sbb
sub
imul
add
and
pusha
inc
cli
push
lea
cmp
jns
js
push
mov
jne
enter
pusha
aaa
ret
test
mov
scas
ds
sub
ret
lds
js
pushf
sti
addr16
xor
or
inc
push
adc
pop
dec
dec
cld
fistps
mov
push
jo
xchg
push
cmpsb
dec
cld
mov
clc
pusha
stos
push
loope
sbb
pop
pop
loope
adc
dec
sub
dec
pop
cmp
ret
gs
jo
scas
mov
fsubp
sub
adc
jbe
ret
inc
sub
jbe
or
mov
jb
call
in
loop
or
es
jb
jecxz
pop
js
jl
xchg
inc
push
adc
and
rcrl
call
dec
rcl
ret
imull
in
xchg
enter
and
mov
dec
popa
test
fidivl
jbe
pusha
or
mov
pop
test
mov
stos
addr16
ror
push
and
mov
push
sti
inc
mov
popf
jecxz
add
inc
out
sbb
icebp
ret
dec
jecxz
sub
sbb
data16
testb
xor
loopne
dec
push
xchg
addr16
push
lret
add
cmp
je
or
inc
das
and
sbb
mov
or
scas
pop
push
fsubrl
jne
int3
push
pop
fmuls
inc
fimuls
xor
cwtl
push
xchg
cmp
dec
inc
dec
xor
adc
pop
dec
test
mov
cltd
data16
adc
sub
in
dec
aad
inc
cwtl
mov
cmc
xchg
xchg
bound
pop
bound
push
add
cwtl
hlt
cmc
lock
int
lret
and
add
mov
test
push
int
test
cs
add
out
das
lds
call
iret
mov
rorl
xor
mov
xor
out
cmp
cli
cmp
mov
aas
stc
xchg
rorl
fdivrp
imul
int3
fisttpll
or
orb
push
pushf
loopne
mov
mov
popf
mov
jmp
cld
out
lock
pop
psllq
aam
mov
inc
sbb
add
push
pop
pop
add
mov
aas
ret
pop
shll
push
xchg
pop
shlb
xor
add
scas
jnp
dec
daa
adc
stos
out
add
cmpsb
mov
icebp
xor
cmp
in
mov
clc
jmp
arpl
mov
gs
ja
mov
dec
push
push
test
sub
ss
clc
flds
xchg
push
dec
pop
mov
mov
inc
adc
leave
cmc
call
adc
xor
dec
xchg
faddl
fsubl
nop
std
or
call
push
mov
lods
jae
int3
sub
or
jne
leave
jg
push
jnp
jmp
fscale
dec
push
xchg
adc
mov
or
cwtl
and
fcompl
fisubrs
and
call
inc
popa
adc
mov
enter
and
pop
ljmp
cli
nop
aam
rcrl
rcll
addr16
xlat
sbb
imul
lahf
test
shrl
pop
ja
cwtl
mov
and
lret
fwait
and
mov
jnp
sub
jmp
add
cmp
jo
clc
subb
stos
mov
add
cmp
lcall
jne
scas
aad
ja
gs
stos
loopne
jo
jb
xchg
or
mov
ss
dec
and
jns
nop
gs
sub
and
mov
mov
shlb
dec
stos
and
jmp
pop
int3
xchg
lahf
mov
push
cmpsb
outsb
mov
notl
inc
mov
mov
pop
sbb
dec
xor
jle
dec
pushf
fisttps
pop
xchg
and
aam
mov
adc
inc
push
push
sub
cwtl
inc
add
xlat
addr16
jb
insl
inc
inc
adc
insl
cmp
scas
loop
xchg
jne
add
fcmovnu
mov
and
mov
mov
daa
xchg
dec
sti
js
mov
mov
mov
call
loope
mov
pop
rcrl
jns
fbstp
sub
scas
call
test
test
sub
adc
ror
stos
int
rol
scas
scas
repnz
lods
mov
dec
popf
mov
push
jne
call
hlt
filds
rolb
daa
outsl
shr
fstl
lcall
movsb
xor
aad
je
mov
ljmp
mov
jne
leave
clc
mov
jge
repnz
clc
fistpll
sti
mov
enter
push
mov
xchg
popa
dec
lea
scas
sahf
into
test
sbb
jg
orb
jecxz
push
pop
rcrl
push
addr16
xor
iret
test
adc
jecxz
in
nop
out
sahf
clc
add
icebp
push
hlt
mov
inc
lock
pop
repz
imul
and
out
in
xor
ds
xor
ret
and
lods
cmpsb
sbb
mov
xchg
pop
dec
mov
loope
mov
pusha
repz
fidivs
in
pop
nop
stos
pop
jno
dec
les
out
dec
imul
sub
ss
aam
cmc
jg
adc
and
inc
inc
cmp
xor
outsl
mov
sti
in
add
or
xchg
loop
insl
mov
cli
out
fldenv
jg
daa
dec
pop
xor
mov
daa
cltd
out
mov
fwait
add
jle
aad
xor
pop
outsb
pop
gs
or
std
lea
aaa
dec
lcall
adc
jns
jmp
fs
aas
mov
loopne
fstpl
test
adc
aas
roll
xchg
lods
lret
imul
dec
push
xchg
mov
scas
lret
pop
orl
aas
pop
pushf
addr16
xorl
inc
cli
inc
mov
jnp
push
fldt
xchg
movsl
loopne
push
pop
inc
icebp
push
add
dec
cmp
lds
mov
sub
int
mov
adc
es
push
jge
repnz
adc
push
sub
inc
pushf
sbb
ret
mov
popf
sahf
ret
out
enter
xor
fimull
mov
lahf
inc
mov
insl
inc
outsb
pop
and
add
cld
fisubs
roll
sbb
mov
pop
incb
xchg
cmp
outsl
and
nop
in
cmp
rcll
bound
xchg
movsb
vdivss
inc
mov
lahf
mov
xor
xchg
adc
pop
ficompl
mov
mov
mov
add
xor
dec
aam
and
test
gs
jmp
push
add
jmp
hlt
mov
and
shl
lret
ds
or
mov
mov
aaa
jnp
pop
or
call
scas
out
jmp
outsb
dec
scas
dec
jg
leave
int
add
popf
mov
jp
mov
test
add
sub
adc
mov
inc
scas
fimuls
and
scas
daa
sbb
add
fisubrl
mov
or
push
push
imul
xchg
js
push
dec
in
imul
or
dec
xor
fisttpl
stos
cmpsb
push
xor
shrl
and
cwtl
dec
mov
test
cld
lahf
nop
add
push
push
mov
add
sbb
push
mov
leave
insl
mov
repz
lods
xor
movsl
out
mov
pop
adc
out
push
fisttps
xchg
dec
jg
mov
sub
aad
and
cwtl
pop
sub
xor
iret
push
fs
push
xchg
shrb
or
add
cld
mov
inc
xor
enter
push
hlt
insl
push
std
inc
in
aaa
mov
push
ret
and
lret
jb
inc
ljmp
in
lret
shld
js
popa
fs
std
push
and
shl
dec
cltd
sub
lock
or
xchg
cltd
pop
and
jb
ljmp
sbb
or
xlat
adc
xchg
jle
add
cli
clc
push
cld
pushf
mov
ret
pop
fdivl
xchg
cmpsl
ret
mov
cmp
bound
xor
jl
xlat
pop
push
add
jae
push
shl
int3
sub
xchg
mov
mov
and
xchg
fldcw
aad
sbb
cmp
test
push
or
stos
aad
call
inc
inc
jb
or
or
push
call
rclb
mov
scas
mov
add
sub
fxch
stos
push
inc
int
dec
push
mov
mov
sub
fimull
and
mov
jge
xor
ljmp
add
or
xchg
lods
popa
pushf
imul
and
push
stc
fmuls
and
push
push
pop
repz
push
pop
pop
insb
movsb
cmpsl
xchg
adc
pop
push
pushf
loope
jl
push
lret
out
jge
push
mov
outsb
imul
cs
mov
out
pop
clc
repnz
or
adc
cs
add
shl
outsl
lock
or
push
js
add
lods
mov
movsl
jg
mov
mov
ret
xchg
pop
mov
sub
pop
aam
and
iret
push
pusha
xlat
stos
xchg
push
cwtl
stos
sbb
pop
lcall
fsubp
push
cmp
or
jmp
and
insb
fldl
push
adc
mov
cmpsb
sbb
leave
cmc
ucomiss
jnp
cmc
pop
popa
pop
push
jb
mov
cmpsl
push
nop
mov
push
push
icebp
enter
xchg
enter
sbb
pop
xor
test
pop
shr
out
jmp
xchg
jle
ss
movsl
cmpsb
adc
test
stos
cltd
add
ss
in
dec
popa
fidivl
jle
push
pop
push
mov
cmp
fsubr
mov
jle
pop
push
xor
stos
inc
sub
pop
pop
pop
ds
repz
xchg
sub
movlps
jnp
and
sub
or
mov
int3
xchg
adc
ror
int3
cmp
mov
add
ljmp
int
les
sldt
aam
fcmovnb
out
lock
out
shrb
and
stc
in
into
sub
jecxz
pop
adc
cmp
jno
and
imul
imul
push
xor
test
cs
mov
push
js
cmp
cwtl
adc
jge
adc
ss
sub
pop
mov
fdiv
mov
sub
jne
add
repz
test
es
pop
ljmp
sub
mov
add
notl
cld
dec
movsb
rcrb
lret
dec
in
fldt
xor
std
dec
fwait
pop
mov
enter
or
cli
xchg
xor
cli
pop
ds
mov
push
pushf
mov
lcall
icebp
or
roll
sbb
pop
hlt
dec
mov
inc
aas
iret
lahf
sbb
mov
inc
push
jecxz
pop
addb
jb
cli
mov
xor
cmp
push
fld
adc
fidivl
jno
ror
aas
notl
xchg
outsl
scas
add
pop
outsl
outsl
mov
inc
adc
rcl
cmp
or
adc
arpl
ss
loopne
clc
leave
jae
stos
in
xchg
sti
out
cmpsl
xor
dec
fiaddl
and
adc
out
mov
ret
xor
repnz
inc
fstps
pop
andb
mov
inc
jno
adc
mov
pop
mov
sub
je
cmp
stc
out
cwtl
enter
pushf
pop
cmp
lods
dec
sbb
in
and
push
fdivrs
xchg
sbb
lock
jnp
mov
push
mov
or
mov
sub
cmp
pusha
cmc
xor
outsl
cltd
mov
adc
dec
out
mov
insb
push
cld
je
rclb
add
xchg
mov
adc
push
shll
xlat
cmp
test
ficomps
xchg
dec
fisubrs
dec
imul
mov
aad
pop
dec
icebp
or
push
cld
fprem
adc
sub
stos
xchg
jp
adc
inc
pop
push
xor
jo
pop
repnz
repz
scas
cmp
pop
movsl
cld
iret
enter
inc
push
aaa
inc
fdivs
cmp
jne
mov
inc
jge
xchg
add
outsl
fdivl
sbb
mov
hlt
dec
ficomps
test
jae
lret
fsubl
mov
jne
pop
xchg
inc
and
xlat
mov
mov
shlb
push
jnp
test
lret
sti
aam
lahf
out
jnp
and
in
shrl
rcr
adc
std
push
push
repnz
sub
push
mov
mov
xor
fnsave
xchg
movsl
sub
fldlg2
pop
out
sbb
sbb
sbb
xchg
add
mov
mov
pop
fs
scas
jecxz
inc
mov
adc
cs
mov
lahf
mov
mov
or
mov
addr16
ret
insl
in
movsl
xchg
push
hlt
dec
xchg
into
ffreep
outsl
adc
mov
sub
pop
insl
sub
into
stc
cs
mov
sbb
mov
mov
aam
fiaddl
in
xchg
mov
stos
cmp
and
ja
pop
push
mov
cmp
and
sub
adc
push
jno
loop
lea
mov
cmp
add
cmc
dec
hlt
cs
inc
sar
fcomps
repz
rcrb
cvtps2pi
in
repz
and
int
push
popf
lods
pop
pushf
lret
jns
xor
jnp
int
cmp
sub
adc
loop
dec
jo
sbb
insb
cmpsl
movsl
scas
jb
inc
sarw
fistps
mov
push
or
sbb
xor
xor
ds
push
add
mov
mov
sbb
aad
shl
dec
sub
cld
jae
lret
push
xorl
xor
enter
dec
pop
lock
into
sub
iret
test
lea
jne
negb
xor
nop
ljmp
and
aam
pusha
jmp
or
in
xchg
xchg
out
data16
shrl
add
adc
ja
push
pop
loope
cmp
sub
or
sarb
or
jle
out
jne
imul
imul
jmp
xor
xchg
sarb
ficoms
fwait
lock
inc
scas
push
add
mov
pop
xor
cmp
in
pop
and
mov
movsl
xchg
or
arpl
scas
lods
in
and
sbb
push
pusha
push
fnstcw
push
sub
outsl
add
or
sub
loope
inc
aaa
scas
bound
and
gs
cmp
xchg
sbb
push
sbb
mov
adc
insl
loopne
pop
xchg
sub
int3
inc
cvtdq2ps
frstor
sub
fnstsw
jg
les
cmpsl
sahf
clc
imul
aaa
pusha
push
xchg
push
shl
add
jg
bnd
inc
cwtl
cmp
inc
adc
adcb
or
int
sub
jle
push
cld
mov
repnz
inc
loopne
je
or
add
lock
jno
in
pop
xchg
mov
and
xchg
daa
sbb
in
jecxz
jbe
sbbb
jns
popf
rclb
jg
xor
ss
outsl
xchg
repz
popa
adc
xchg
cltd
call
test
lock
fst
xor
and
test
sbb
dec
and
add
cs
out
adcb
ja
in
cmc
or
lods
ret
sbb
push
push
fsubp
inc
imul
xchg
int3
pop
loop
push
enter
push
neg
xor
loope
bound
das
imul
jg
jg
jp
inc
sti
orb
cmp
xor
call
test
cmp
or
mov
or
lret
cld
fnsave
out
mov
into
imul
pop
clc
nop
clc
out
aam
mov
cmp
lret
and
test
daa
jbe
test
cmc
adc
pop
adc
inc
push
push
lahf
js
jmp
scas
pop
ds
mov
fdivrp
xchg
enter
mov
inc
jl
insl
push
xor
fs
and
sahf
aas
jmp
sub
shrl
in
insb
mov
imul
fmuls
ss
push
jecxz
jle
pop
nop
cmc
add
jne
sbb
shlb
mov
loope
dec
cmp
aad
xchg
sbb
lods
jb
fisubrl
cmp
fidivrl
jmp
mov
or
cmpsl
pusha
cld
sbb
and
inc
loop
icebp
xor
xchg
inc
dec
lods
cmpsl
mov
mov
xlat
push
mov
ret
mov
add
inc
test
nop
pop
test
mov
push
jne
mov
mov
inc
inc
mov
jne
add
movsl
mov
dec
testb
and
scas
pushf
xchg
dec
call
adc
mov
pop
mov
lods
mov
xchg
das
push
adc
in
sub
mov
roll
or
hlt
mov
ret
aaa
jle
leave
xchg
mov
dec
addl
out
add
push
inc
neg
call
mov
fs
jle
and
out
enter
or
pop
lea
out
filds
jo
sub
cs
js
sbb
iret
inc
or
cmp
fmuls
or
dec
out
repnz
dec
arpl
push
jl
mov
cld
adc
add
pop
pop
in
xor
jg
in
scas
imul
pop
fs
pop
or
and
push
dec
sub
out
mov
fmuls
and
leave
mov
call
xor
pop
lods
leave
push
bound
icebp
scas
sub
dec
je
sub
bound
in
in
jb
xchg
dec
xchg
lds
cwtl
fnstsw
xchg
ja
insl
imul
push
dec
mov
hlt
dec
inc
pop
test
das
inc
cwtl
push
push
fadd
iret
rorl
jne
fidivrs
aaa
in
and
cmp
mov
test
jo
cmc
add
mov
inc
and
jg
mov
cs
pop
inc
std
xor
ret
pop
hlt
xchg
sub
add
adc
insl
mov
or
cmp
and
mov
rcrl
sub
mov
mov
mov
add
das
shrl
push
movsb
sbb
xor
les
nop
fucomi
sub
lret
cli
scas
lahf
sbb
fcomps
leave
dec
outsl
es
popa
incb
ret
xor
lods
inc
loop
ja
cs
lahf
int
sahf
daa
adc
xchg
lret
mov
jo
js
mov
sub
jne
sbb
and
shl
movsb
js
mov
jae
jo
popf
iret
jmp
dec
adc
or
addr16
pop
es
test
out
shlb
inc
and
inc
pop
lcall
mov
xorb
inc
jno
push
sbb
ja
dec
inc
mov
or
xchg
test
mov
icebp
mov
sarb
pop
dec
add
js
sub
cmp
popf
sbb
xchg
les
xor
ror
jle
insb
icebp
clc
xor
jno
jmp
dec
stc
pushf
aad
lods
test
lret
clc
incb
xchg
mov
and
sub
inc
fsts
push
push
test
inc
lds
sbb
push
jl
inc
nop
push
cmp
jp
dec
cs
jge
cld
les
call
xchg
mov
and
jbe
mulb
insb
cmp
cmc
mov
mov
push
out
or
pop
cli
int3
mov
jae
sbb
push
xchg
pop
xchg
mov
mov
and
pop
push
lret
mov
lea
or
pop
sarb
adc
clc
pop
pop
mov
notb
add
lea
loope
test
fsubrl
mov
je
push
jp
movsl
jnp
dec
lahf
or
pop
out
aad
push
and
jmp
pop
mov
fstpt
sbb
jns
pop
ljmp
sahf
inc
and
pusha
dec
dec
andb
loope
call
and
xor
stos
cwtl
jmp
push
hlt
sbb
negl
mov
mov
xorb
mov
shll
cmp
xor
jl
and
xchg
out
xor
sub
jmp
int
pop
jle
dec
inc
fstpt
or
pop
lods
adc
std
int
fwait
sbb
or
dec
in
mov
adc
dec
pop
stos
adc
jae
mov
xchg
std
pop
mov
out
out
std
addl
push
push
divl
bound
inc
xchg
lods
test
mov
mov
popa
jl
cmp
push
cs
cmp
insl
push
mov
psubsw
jmp
jns
arpl
in
fiaddl
dec
pop
and
push
insb
in
sub
dec
insl
mov
mov
jne
xchg
mov
flds
xchg
inc
adcb
push
std
add
cmp
mov
xchg
addr16
inc
cmpsl
mov
or
jg
sub
pop
mov
sbb
jnp
xchg
rorb
push
imul
jae
xor
fidivs
lods
scas
mov
fdivrp
rcll
push
addb
lea
pop
subb
clc
cwtl
out
mov
das
inc
fiaddl
sub
sbb
aaa
sub
ret
cmpsb
inc
xor
and
or
sbb
xor
pushf
mov
fisttps
push
fstps
out
scas
lds
xor
repnz
mov
sbb
push
aas
add
sub
outsl
or
pop
push
or
cmovge
sarb
inc
inc
adc
push
mov
cmpl
cs
and
bound
sbb
jp
xchg
push
cmc
xorb
aam
or
inc
jbe
xlat
jb
lcall
xor
fistpll
dec
movsl
enter
cmp
mov
out
loop
push
aaa
inc
pop
pop
adcb
or
xor
hlt
std
ja
or
mov
stc
mov
dec
testl
push
stos
popa
mov
jmp
fsubl
sub
loope
addl
dec
rolb
mov
in
sub
adc
inc
ficoms
add
aas
imul
xor
rol
aam
inc
cmp
cld
sbb
out
mov
mov
fildll
add
dec
fcmove
sub
mov
lds
mov
jbe
push
xchg
or
push
add
leave
mov
repnz
enter
pop
inc
xchg
pop
stos
sub
xlat
jle
fwait
subl
enter
idivl
jl,pn
adc
and
cmp
fdivrs
scas
andl
push
cs
and
pop
xor
mov
stos
in
add
fimuls
out
adc
pop
and
mov
adc
or
sbb
fldenv
sahf
shlb
xchg
xor
push
mov
inc
push
enter
pop
xchg
into
pop
xlat
adc
not
lret
lods
testb
push
fs
or
nop
and
pop
cmp
stos
clc
push
xchg
leave
mov
push
mov
xor
hlt
sti
jmp
mov
and
insb
nop
cwtl
call
dec
cli
fiadds
cmpsl
inc
jmp
xlat
ret
lcall
inc
cld
lock
push
mov
xchg
out
adc
pusha
pop
pop
and
pop
lcall
es
add
jae
xchg
sarb
push
js
push
mov
mov
cmp
movsb
lea
imul
fwait
dec
add
mov
jmp
push
outsl
sbb
stos
cmp
jns
out
cmp
testl
insb
cli
xor
shll
add
mov
cmpsl
repnz
orb
xchg
push
fcmovnu
aas
dec
xor
pop
fwait
adc
insb
mov
icebp
sub
inc
mov
aam
jb
std
repz
mov
sub
and
mov
roll
iret
push
stos
aas
dec
enter
and
sbb
shr
scas
cmp
fs
xchg
les
popa
shlb
fistl
icebp
mov
mov
pop
inc
jmp
push
pop
lds
faddl
int
std
adc
scas
js
inc
movsb
lret
xor
repz
mov
insb
push
ret
push
movsl
add
hlt
jl
pushf
cmpsl
outsl
xchg
xor
push
bound
insb
dec
jb
push
outsb
fnstenv
les
lods
push
mov
out
jno
insl
cmp
sbb
movsb
les
aam
xchg
mov
xor
fadds
mov
mov
out
int3
mov
mov
jb
push
xchg
xchg
or
mov
inc
out
pop
mov
jle
pop
out
leave
loopne
or
hlt
hlt
inc
adc
movsl
lea
push
lret
xor
test
jp
pop
jle
inc
sti
scas
ds
fs
in
aas
loop
pop
mov
xor
es
jg
fs
mov
inc
ds
jno
jbe
out
ja
repnz
push
mov
ja
stos
cmpsl
push
das
jle
add
sbb
push
push
testb
out
push
xchg
mov
inc
int
hlt
pop
inc
sub
mov
mov
xchg
dec
push
leave
sbb
and
xchg
jae
jecxz
rorl
fsubr
cmp
push
aam
jl
push
add
cwtl
data16
adc
decb
or
add
cmp
call
mov
cmp
movsb
fstpt
xchg
mov
jge
push
dec
dec
mov
mov
fmulp
aam
mov
mov
dec
push
arpl
and
lods
add
aam
sub
cli
push
jns
cwtl
mov
pop
insl
push
lret
decb
das
loopne
push
push
test
and
add
mov
je
add
dec
mov
xchg
fcom
mov
push
or
icebp
popf
inc
xchg
cmp
or
jecxz
ret
xchg
xchg
mov
mov
sbb
sti
inc
loope
mov
movsb
xchg
dec
xlat
movsb
out
mov
cmpsl
std
stos
aad
cltd
cmpsl
dec
movsb
ja
jp
pop
ffreep
js
fstl
or
pop
loopne
outsl
sti
lret
or
inc
test
outsb
mov
mov
inc
mov
stos
test
cmpsl
xorb
popf
sti
rcl
insb
or
sub
call
iret
in
or
pop
shrb
sbbb
movsb
fcoml
mov
hlt
or
add
test
xor
pushf
inc
push
cmpsl
sbb
ljmp
aaa
dec
xor
xchg
xchg
in
push
add
nop
out
lods
enter
mov
into
push
xor
test
cmpsb
xor
mov
stos
xchg
sub
cmpl
bound
mov
outsb
sahf
incl
fmuls
mov
inc
popf
push
imul
or
imul
sbb
sub
sub
xchg
sbb
inc
mov
sub
lret
xchg
hlt
stos
cld
sub
adc
adc
push
add
xor
mov
inc
scas
xor
test
xchg
aam
jecxz
shll
dec
shll
push
ljmp
scas
fcomi
dec
dec
sti
add
and
cwtl
or
mov
cmp
add
and
call
leave
dec
in
pop
lds
mov
or
mov
pusha
sub
mov
xor
xlat
popf
mov
and
pop
jecxz
mov
cs
mov
or
inc
xacquire
mov
add
and
rol
fisttps
or
stos
or
dec
sahf
lret
mov
or
mov
inc
push
dec
ja
scas
add
adc
or
lods
int3
pop
fistl
mov
sbb
int
xor
fistpll
and
jle
or
mov
mov
mov
pop
adc
mov
xchg
test
fiaddl
es
cld
dec
mov
arpl
inc
in
jle
xlat
pop
sahf
mov
inc
popf
mov
nop
add
cmpsl
adc
adc
mov
ja
dec
clc
rcr
xor
out
clc
fimull
xor
inc
ficoml
mov
push
or
push
mov
cli
or
stos
push
xchg
in
cli
les
test
xchg
addr16
jge
dec
cmp
jns
es
pushl
lock
pop
ror
and
lea
repnz
inc
xchg
lret
xchg
dec
or
xor
insl
lods
lds
mov
cli
jns
testl
push
sbb
or
xor
leave
mov
stc
mov
and
jnp
sub
jae
ljmp
adc
jo
sbb
and
adc
insb
in
js
xor
pop
aam
mov
mov
mov
cmc
es
aas
sysret
sub
out
out
loope
lahf
add
mov
dec
and
scas
shl
jg
xor
inc
or
in
push
jns
add
xchg
fistpl
jno
xlat
leave
pop
xchg
push
dec
jle
sbb
cmc
jno
push
movsb
lcall
pop
jg
pop
je
pop
sbb
je
add
repz
test
jmp
xchg
mov
dec
stos
cmp
push
jno
jp
aas
pop
enter
call
dec
mov
pushf
inc
lahf
fs
dec
lods
out
mov
nop
or
xchg
sub
int
sbb
je
pop
fadd
add
fwait
xchg
jo
mov
das
std
jmp
cld
mov
mov
fwait
in
mov
cmp
ljmp
fimull
sbb
inc
jns
mov
fisubs
mov
mov
cwtl
call
arpl
lods
cmc
not
cmp
arpl
rclb
adc
test
sbb
mov
jecxz
push
rcrb
sahf
clc
out
in
mov
cmp
sbb
je
push
cwtl
popf
jg
mov
mov
mov
cld
pushf
push
sub
pushf
mov
push
lods
mov
movsb
xchg
cmpsl
or
lds
xchg
jb
jns
lea
xor
fistps
cmp
or
fwait
outsb
mov
aaa
fs
sbb
sahf
jp
or
jmp
push
push
push
lret
push
loope
mov
lds
add
dec
mov
in
add
aas
addl
sbb
je
lods
add
fists
daa
mov
test
push
or
adc
jge
mov
leave
in
cmp
push
test
imul
movsl
push
ret
add
test
fwait
dec
jle
push
adcb
mov
xchg
in
xchg
mov
ret
lret
push
call
jecxz
or
popf
repz
adc
xchg
lcall
lahf
jl
pop
inc
mov
fisubrl
dec
lods
mov
mulb
cmp
push
mov
xchg
insl
call
jle
es
push
rorl
mov
pop
add
xchg
cmp
or
mov
sub
mov
xor
inc
test
xchg
pop
scas
int3
mov
clc
or
mov
push
jl
outsl
sub
arpl
decl
fbld
dec
push
and
or
push
cmp
mov
addl
stos
mov
xlat
mov
into
bound
je
push
out
outsb
xchg
shll
xchg
rcrb
inc
fldenv
dec
orl
add
jecxz
repnz
pop
or
and
in
inc
lock
xchg
jnp
test
lock
loop
je,pt
gs
and
mov
xchg
dec
cmp
hlt
sub
push
inc
jns
mov
adcb
lret
add
cmp
dec
xor
mov
iret
fwait
mov
inc
sbb
xor
sbb
pop
imul
dec
enter
pop
xchg
mov
push
adcl
imul
fldz
aas
pop
push
or
xor
cmp
jmp
lcall
jecxz
adc
jno
and
int
dec
mov
inc
call
sub
sbb
and
aad
push
lods
adc
ret
fdiv
loopne
inc
and
inc
test
xchg
jae
inc
and
xor
shlb
sub
cmpsb
repz
xchg
xor
enter
cmp
mov
jae
leave
shl
stc
rclb
lods
cwtl
outsb
rcl
lcall
sbb
negl
add
loope
aaa
aam
jnp
jmp
cmp
and
adcb
fists
xchg
jmp
or
rcrb
repz
add
cltd
jge
lret
mov
jb
dec
jmp
scas
lret
dec
scas
jae
dec
pop
mov
adcb
in
outsl
push
call
pop
orb
out
sahf
xor
cmp
ret
lcall
xchg
xchg
inc
cmp
or
outsl
dec
call
mov
xchg
cmpsb
xchg
loopne
add
fwait
mov
mov
dec
jnp
cmpsl
mov
fisttps
cmp
inc
filds
mov
inc
xchg
ret
mov
push
loop
shlb
xlat
stc
xor
adc
out
out
pop
lods
inc
add
cmp
push
int
fisttpl
or
or
pop
xchg
pop
out
out
and
xchg
mov
push
jg
jo
push
adc
mov
mov
xchg
rcr
fistl
inc
arpl
mov
cmpsl
cmp
out
mov
adc
outsl
in
push
rorb
or
mov
xchg
inc
pop
mov
dec
mov
xchg
shl
pop
adc
or
dec
scas
in
test
push
test
inc
in
shr
out
push
mull
ds
dec
mov
add
xor
add
xchg
pusha
dec
inc
xor
cli
cs
push
inc
rclb
or
mov
mov
xchg
addl
in
mov
push
outsb
sbb
iret
sub
dec
pop
cmp
js
and
sub
xor
loopne
sbbl
inc
test
mov
daa
aad
aas
popf
insb
dec
es
push
or
fmuls
pop
jbe
inc
rcrl
fisttpll
daa
movsb
lea
repz
in
mov
jne
ljmp
xor
call
and
sbb
pusha
nop
es
sub
stos
push
and
aas
xor
jnp
pusha
mov
mov
add
loop
aad
mov
mov
gs
inc
arpl
add
hlt
and
orl
sarl
popa
daa
cmpsl
xchg
push
mov
sub
xor
adc
xorb
xchg
cmp
mov
mov
loopne,pt
fcmovnu
aad
mov
lock
outsb
test
xor
mov
inc
out
lret
mov
sbb
inc
jecxz
dec
adc
inc
sub
fcoml
mov
lret
mov
scas
inc
xorl
xchg
leave
xor
dec
pusha
and
clc
mov
out
or
jns
iret
popa
and
icebp
inc
add
jb
into
push
clc
pop
ja
mov
adc
les
ds
sbb
xor
imul
in
pushf
arpl
imul
xchg
sti
out
cmpsb
cltd
cmpsb
test
cs
or
mov
add
mov
sub
mov
xor
sub
xchg
push
push
push
mov
pop
mov
jge
stos
scas
arpl
dec
mov
bound
test
mov
mov
mov
test
push
cmp
andb
xchg
xchg
negl
push
cmp
leave
cmpsb
mov
or
xor
and
xchg
cmpsb
pop
sub
and
jl
jmp
jbe
mov
shll
cmp
lods
or
imul
or
pop
or
pop
scas
push
jmp
push
ja
test
pop
dec
test
jb
cmp
call
imul
stos
sbb
xor
roll
call
xor
dec
scas
cmp
xor
jns
fisttps
popa
loope
stc
mov
jb
mov
lret
loopne
add
add
xor
push
xor
out
jnp
lods
icebp
subl
call
pop
dec
mov
mov
mov
data16
mov
gs
fnstsw
fldt
xorl
xor
cmp
add
add
sbb
jns
loope
mov
lods
xchg
xchg
fwait
loope
mov
pop
mov
inc
sahf
jns
mov
mov
fldl
clc
jecxz
jge
lcall
adc
jp
in
sbb
ret
pushf
cmp
sbb
dec
lcall
insl
or
push
sbb
hlt
das
fdivrs
sahf
push
or
int3
ljmp
jp
ss
ret
xchg
mov
test
sbb
fidivrs
lock
mov
ja
pushl
add
mov
sub
imul
xchg
cmp
aaa
mov
inc
sub
das
mov
insb
js
inc
cwtl
pop
or
sub
adc
loopne
out
jle
lds
clc
sarl
adc
push
xchg
add
in
bnd
pop
push
mov
push
add
hlt
xchg
xchg
mov
out
mov
popa
mov
and
cmpsb
adc
jl
cmc
shlb
push
xor
xchg
leave
ret
std
lahf
cli
xchg
push
dec
add
outsl
lock
xchg
imul
loop
mov
add
jl
xchg
les
xor
fisubs
leave
cmpsb
cmp
or
mov
aaa
movsb
jno
ljmp
cmp
inc
std
push
in
jno
or
and
dec
loopne
and
cmovne
jb
imul
push
pop
lret
mov
es
shl
sub
repz
aaa
rolb
fcos
dec
pop
cs
jmp
jnp
jno
int3
dec
icebp
xchg
mov
mov
jo
sub
fsubl
sbb
mov
and
push
lods
or
pop
add
pop
sbb
xchg
xchg
xor
or
mov
mov
pop
push
push
inc
mov
push
jle
pop
insl
ficoms
jp
test
sbb
dec
sub
int
or
and
push
imul
lahf
cmp
fimuls
mov
arpl
lea
in
test
pop
pop
test
mov
jnp
xchg
push
out
push
ss
iret
fdivl
faddl
adcl
movsl
addl
out
sub
or
aas
sahf
js
out
cmpsb
repnz
dec
xchg
add
mov
popa
push
inc
inc
cmpsl
sbb
iret
and
mov
jp
and
outsl
ret
or
jnp
jecxz
sti
cltd
jmp
out
sbb
xchg
fadds
repnz
dec
ja
dec
jnp
lahf
repz
lahf
push
lret
adc
lods
inc
jnp
mov
popf
xor
sbb
fldt
sub
xor
sbb
incl
ret
xchg
icebp
das
xchg
imul
fsubrl
sbb
lret
mov
cltd
gs
adc
js
pop
xchg
outsb
stc
pop
mov
lods
shll
rcrb
mov
daa
stos
icebp
mov
xor
jl
cltd
xor
gs
sub
jnp
orl
sub
mov
repnz
lds
das
enter
rcll
stos
test
or
psubw
cmpsl
ss
pop
or
cmp
push
cli
jmp
decl
xchg
clc
jae
lods
or
inc
xchg
sbb
push
sbb
jbe,pn
enter
and
into
pop
call
inc
inc
test
popa
pusha
lret
mov
stc
cmp
lods
add
mov
jbe
mov
inc
mov
repz
dec
xchg
mov
mov
loop
inc
push
or
xchg
xchg
outsb
test
xlat
outsb
fiadds
sub
insb
ja
sbb
jmp
fdivrs
out
xor
mov
arpl
adc
mov
loop
fsub
in
xchg
rolb
xchg
xchg
imul
mov
and
bound
mov
addl
scas
pop
inc
xchg
stc
inc
fimull
xchg
fsts
sbb
test
aas
roll
cmp
jns
mov
xchg
test
mov
push
pxor
fs
dec
sarb
rcrl
push
pop
cmp
mov
jo
les
lods
jle
jl
in
adc
ss
rcr
adc
sub
xchg
jmp
mov
call
xchg
jbe
pop
imul
inc
lock
sub
sub
shl
aad
push
xor
inc
push
sbb
fadds
ds
ss
cmp
cmp
fs
scas
aam
xchg
es
cwtl
scas
cwtl
pop
lret
icebp
dec
ja
adc
add
push
cmpsl
shlb
test
das
pushl
lret
in
dec
dec
dec
js
mov
ds
mov
sub
cld
jnp
sbb
adc
mov
movsl
clc
pop
xchg
mov
cli
pop
sbb
lret
stos
jno
mov
mov
gs
lea
clc
pop
mov
sbb
xchg
cmp
pop
jbe
cmp
mov
and
fcoml
push
fdivp
outsl
and
push
mov
imul
fbstp
sub
sub
jge
xchg
xor
lahf
jl
inc
subl
movsb
cmp
push
insb
sar
std
adcl
jb
mov
xchg
push
jno
push
add
mov
or
ljmp
cmp
dec
out
xchg
xchg
fnstcw
push
fs
psubsb
dec
jno
cwtl
mov
icebp
push
mov
insl
and
aad
jge
mov
sub
push
ss
push
nop
dec
sub
dec
xlat
push
scas
mov
dec
xlat
cmp
add
xchg
mov
push
nop
mulb
cs
mov
sbb
scas
lret
ficomps
mov
mov
sbb
xchg
dec
inc
fcomps
pop
adc
std
mov
mov
pusha
mov
bound
daa
gs
lea
movsl
inc
jae
mov
sub
push
mull
enter
in
int3
shll
add
xchg
push
lret
stos
shrl
outsl
lock
nop
dec
and
sahf
add
sti
push
xor
adc
push
imul
cmpsl
out
add
notb
loop
dec
icebp
scas
sbb
int3
aad
inc
mov
pop
cmpsb
pop
xor
mov
lahf
sti
push
test
jae
rcll
adc
push
mov
lret
mov
in
inc
lods
push
pop
and
cld
stos
cs
stos
leave
push
clc
and
imul
ss
pusha
cmp
or
jns
in
xor
pop
mov
or
mov
xor
cltd
loopne
testb
or
in
inc
lods
pop
add
cmp
aas
cmpsb
push
cld
dec
or
mov
out
arpl
pushf
jl
add
scas
mov
loopne
jg
xchg
or
addr16
imull
fbstp
pop
dec
pusha
xor
pop
lock
and
sub
dec
lcall
int
mov
push
or
or
add
adc
xor
ds
add
cmp
push
push
std
and
xor
cmpsl
lea
dec
pop
or
aad
cmpb
or
stc
fwait
stos
dec
les
loopne
add
fildl
mov
mov
call
inc
sbb
pushf
lods
movsl
leave
inc
inc
jns
out
mov
insl
push
pop
and
out
test
cltd
call
cwtl
loop
nop
ret
stc
scas
pop
cmp
push
mov
xor
sbbl
pushf
mov
cli
cmp
inc
aad
xor
push
cmc
sbb
fs
ret
les
push
cmp
inc
mov
dec
pusha
xchg
sub
add
jle
cmp
lahf
or
imul
push
dec
inc
sbb
fisttpll
aas
stos
in
test
push
lahf
rolb
inc
pop
push
aas
test
or
lock
inc
in
popa
arpl
cmp
jns
jle
dec
xorl
dec
add
mov
mov
sbb
sbb
sub
lret
push
cmc
jge
mov
jmp
outsb
and
mov
out
out
int3
mov
sbb
cli
xchg
sarl
test
aad
adc
sahf
xor
cld
cmp
nop
mov
jne
fs
sub
in
inc
sti
es
popa
sbb
test
fwait
cli
aad
inc
pop
pop
adc
loopne
jle
in
lahf
jl
loopne
adc
mov
jmp
fbld
mov
pop
cmpsb
fldt
xor
into
sub
xor
repz
fsubl
lret
hlt
sbb
addl
xchg
mov
outsl
and
xchg
push
jnp
inc
jp
test
jbe
xchg
orb
pop
repz
lret
sub
test
jnp
xchg
or
xchg
rcrb
jmp
call
and
add
cmp
and
insb
jecxz
fdivs
add
and
xor
xor
and
cld
sbb
adc
dec
sbb
rolb
fdivs
sahf
stos
outsb
scas
jns
popl
mov
pop
nop
popf
icebp
out
inc
cli
and
int3
loopne
xor
xlat
nop
sbb
stos
movsl
and
movsl
add
add
imul
lds
mov
pop
pusha
pop
xchg
lcall
push
sub
clc
mov
arpl
insl
xchg
adcl
mov
bound
sbb
cmpsb
mov
in
repz
insb
out
aaa
sbb
ja
and
lods
jl
jecxz
push
enter
inc
mov
dec
mov
xor
mov
out
shl
fcoml
gs
loope
mov
pop
shlb
xchg
les
mov
int3
and
int
push
jl
sbb
dec
int3
into
xchg
mov
push
in
fcmovnb
add
ss
jmp
shll
jp
mov
or
rolb
push
pop
gs
and
gs
mov
xchg
jne
shlb
add
notl
adc
dec
repz
mov
jmp
push
ficoml
sti
test
loop
add
push
mov
mov
and
call
mov
or
push
add
inc
xor
das
cmpsl
adc
movsl
outsl
push
pop
ds
xor
ret
les
add
mov
and
push
orb
movsb
jo
push
jecxz
test
dec
and
out
lock
push
xlat
jnp
add
and
jmp
in
scas
je
push
mov
aas
test
and
sub
lcall
pop
mov
pusha
nop/reserved
pop
mov
adc
testb
xchg
jp
scas
cli
leave
push
add
dec
clc
push
lds
fldl
push
mov
jl
popa
jmp
imul
imul
pop
sbb
xchg
mov
cmp
push
out
pop
and
jbe
aaa
stos
sub
inc
js
cmc
rcrb
negl
clc
out
leave
or
fwait
fwait
cmp
icebp
sub
mov
sub
push
push
std
lods
cmpsb
loopne
jl
pop
cmpsb
insb
push
cmp
aas
and
sahf
inc
enter
mov
enter
dec
cmp
mov
adc
jae
sahf
xchg
in
jge
mov
movsl
int
pop
fstpt
hlt
cmc
jp
jno
mov
movb
xchg
fs
add
push
fmuls
inc
adc
push
xchg
imul
xor
cmp
outsb
push
insl
xchg
lods
cmc
stos
sahf
pop
push
lea
pop
mul
ljmp
sti
xor
push
jg
xchg
stos
ret
in
xchg
pop
insb
sub
push
push
and
push
adc
cld
jae
push
sbb
mov
mov
arpl
loop
jp
sub
mov
push
lret
iret
add
xor
add
cltd
adc
lea
mov
hlt
jle
xchg
push
int3
iret
and
xchg
ljmp
call
aas
mov
outsb
sahf
les
hlt
cmp
loop
jb
and
inc
ret
scas
dec
stos
in
and
dec
sarb
dec
pop
mov
adc
lahf
out
sub
xchg
push
mov
xor
aas
mov
out
mov
mov
insl
push
mov
inc
cmpsb
je
pop
pop
adc
jg
outsb
sar
pop
fidivrs
popa
sub
out
or
inc
or
popf
arpl
push
ljmp
stc
sbbl
xchg
out
xchg
inc
popa
xor
mov
dec
cmp
pusha
mov
outsl
jmp
mov
loopne
repz
movsl
inc
inc
fldt
nop
idiv
pop
stos
mov
mov
cmp
cmc
jge
or
or
push
push
pop
frstor
in
inc
xchg
add
lret
xor
xchg
dec
daa
jno
adc
and
shl
adc
xor
xchg
xchg
mov
mov
cwtl
ss
mov
loope
mov
dec
sub
addl
adc
push
adc
inc
cs
aad
popa
daa
adc
rcll
push
mov
jno
aas
adc
inc
xchg
ror
jge
test
sbb
jns
out
aaa
out
roll
or
test
adc
loope
repz
popf
rorl
int
mov
mov
sbb
lcall
sarb
adc
or
cwtl
mov
movsb
rorl
mov
dec
or
pop
inc
sub
iret
xchg
mov
xchg
dec
stos
adc
daa
xchg
pop
inc
cmp
cmp
pop
test
pop
pushf
push
enter
mov
fildl
shrl
mov
xchg
mov
lcall
repz
push
sahf
cmp
popf
inc
out
mov
xchg
mov
test
dec
cmc
in
jae
and
rcrl
xchg
mov
xchg
add
pop
dec
jl
outsb
sbb
movl
test
xchg
ret
call
hlt
insl
data16
test
subl
lock
out
mov
or
push
or
add
sbb
enter
aas
sub
sbb
out
in
popa
mov
fs
mov
call
jae
push
mov
call
jae
inc
in
pop
icebp
add
loope
lret
stc
pop
imull
mov
aad
inc
add
shr
mov
or
mov
test
pop
sub
mov
push
fmuls
cwtl
lea
aaa
sbb
xchg
xor
mov
sbb
mov
movsl
inc
loop
jns
fidivs
lret
or
pusha
mov
pop
scas
mov
mov
cmp
cs
fcmovnb
loopne
cli
mov
pop
xor
sbb
sbb
addr16
or
outsl
lds
out
mov
add
stos
push
add
shl
loopne
pop
jecxz
loop
inc
mov
loope
inc
cmpsl
ss
cmp
in
hlt
lcall
jb
pop
and
jge
les
flds
pushl
iret
pop
hlt
movsl
inc
cmp
loope
shll
push
mov
sbb
adc
lret
loopne
arpl
dec
das
push
aam
push
outsl
ror
paddsb
lock
jne
gs
negb
jge
fs
jns
or
jb
adc
mov
sbb
call
xchg
out
clc
fimuls
lret
dec
aaa
inc
xchg
lret
and
push
shlb
sbb
push
dec
imul
xlat
icebp
aam
jns
repnz
mull
aam
pop
call
clc
jl
fmuls
xchg
orb
jnp
mov
je
dec
mov
pop
rclb
leave
int3
sub
mov
push
test
mov
jge
mov
stos
sahf
js
sarb
repnz
or
cmp
jmp
lret
out
or
out
dec
imul
popa
xor
loopne
sarl
cmp
sbb
shrb
inc
push
xchg
cmc
sub
ljmp
mov
mov
mov
jle
push
lret
lods
or
addr16
sbb
imul
lock
fisttpl
jmp
sbb
mov
cld
pop
push
jae
iret
popf
pusha
xor
je
push
adc
cmp
cmp
xor
xor
lret
cmpsb
sub
aaa
popf
and
insl
push
in
cmp
hlt
add
cmp
lock
shl
fsubl
mov
xor
into
cmp
movsb
mov
mov
cmp
mov
mov
sub
push
lds
ja
je
sahf
jle
and
mov
fdivl
mov
add
push
into
jecxz
insl
push
cli
js
pushf
fsub
pop
xor
mov
pop
repnz
mov
add
adc
ret
out
imul
or
out
hlt
mov
mov
ret
in
xorb
ljmp
dec
jl
lods
jnp
lds
or
push
adc
icebp
in
push
std
cld
xchg
hlt
outsb
into
cmp
aam
push
insl
sahf
push
mov
inc
testb
mov
out
jnp
adc
xchg
imul
out
push
in
ret
or
jle
jno
lock
cmp
cli
xchg
inc
adc
push
subb
sub
pop
fildll
mov
fisttpl
outsb
ds
jmp
fwait
pop
pop
and
das
outsl
xchg
js
mov
jae
adcl
lahf
stos
iret
jae
or
shrb
jns
push
sbb
lods
dec
xor
xor
xorb
jp
sbb
movl
pop
gs
or
dec
arpl
lea
mov
pop
inc
insb
inc
jg
jle
call
out
jle
orl
add
loop
aas
scas
jmp
mov
xor
ds
enter
add
push
cmpsb
inc
shrb
sub
int
and
sub
mov
repnz
xchg
shlb
jge
push
sub
sbb
rclb
push
mov
mov
jns
les
repnz
daa
cmpsl
and
mov
out
cmpl
mov
mov
jge
mov
xchg
pop
cmp
popf
push
push
mov
sahf
push
mov
adc
xlat
hlt
aas
out
cmp
and
cltd
mov
mov
push
fcmovnu
xchg
out
sub
and
rcll
cld
xor
xchg
leave
lds
ljmp
dec
sbb
mov
pop
adc
test
lods
repz
sub
lret
and
jbe
sub
les
xchg
push
leave
insb
and
mov
jg
push
inc
stc
shll
scas
jb
mov
imul
mov
outsb
dec
sub
shlb
mov
xor
xchg
xor
fbld
jno
xor
ret
xor
inc
test
push
js
jp
xor
test
add
and
mov
xchg
subb
aad
testl
cmp
ret
lahf
ja
mov
mov
fsubl
fdivl
jmp
adc
or
mov
js
jle
fsubr
mov
pop
push
sbb
pop
cli
adc
addb
idivb
and
hlt
into
rolb
test
xor
dec
enter
test
xor
and
push
dec
dec
cmp
aad
and
dec
xor
sbb
push
arpl
pop
roll
into
je
ror
cmp
xchg
cltd
cmp
pushf
movsb
test
push
into
data16
jl
xor
pop
and
and
push
dec
cli
pushf
outsb
in
lret
mov
xor
icebp
stos
jbe
xchg
testl
xor
sbb
push
mov
xor
add
mov
push
pop
ret
pop
jbe
push
lcall
pop
lcall
test
loop
mov
ficoms
stc
pop
in
fidivs
fsubrs
dec
dec
sbb
fdivrl
shl
repz
and
cmpsl
sbb
xchg
cmp
push
or
out
cmp
jne
movsb
fdivrl
lret
mov
add
das
pop
or
dec
into
psrlw
or
pop
cmp
je
push
lds
lods
add
pop
push
mov
insb
mov
sub
pop
xlat
inc
gs
test
aaa
or
cwtl
aas
je
jmp
add
out
lock
inc
mov
mov
xor
pusha
ss
hlt
test
aam
pop
adc
nop
scas
xchg
in
divl
dec
in
sbb
imul
push
out
xor
les
inc
dec
movsl
xchg
jp
adc
nop
mov
sahf
insl
mov
je
sbb
inc
jns
testl
dec
cmp
inc
pop
add
pop
shr
sbb
adc
pop
mov
das
cmp
pop
clc
lret
cmp
push
popa
lds
and
icebp
jae
xor
pop
mov
jne
arpl
push
xor
jb
push
pop
jns
dec
mov
icebp
add
aas
add
pushf
outsl
repz
sub
sub
insl
scas
outsl
inc
adc
insb
repnz
lret
mov
xor
cmc
add
sti
jecxz
clc
cltd
sub
xor
insb
push
lds
addr16
adc
mov
pop
fs
addb
jmp
mov
sub
jl
push
sbb
insb
xchg
outsl
cmpsb
mov
cmp
jns
mov
cmp
mov
mov
daa
sbb
loopne
mov
movsb
aad
add
fstpl
add
and
mov
lret
ficoms
mull
test
jg
dec
push
pop
xchg
cmp
inc
sbb
into
std
negl
lret
pushf
cmp
movsb
xchg
les
jg
lods
sub
aas
das
inc
sub
stos
jmp
mov
and
mov
inc
jmp
in
xor
lock
xchg
les
sbb
int3
mov
data16
push
mov
mov
jg
add
icebp
sbb
mov
incl
pop
sbb
ret
jns
out
sub
adc
bnd
mov
or
mov
push
inc
sub
fs
jl
push
lods
sbb
lods
xor
in
dec
arpl
or
sub
mov
loope
test
jno
xor
pop
inc
fistpl
movsb
push
pop
xchg
clc
sbbl
mov
imul
jl
stos
call
xchg
pop
out
or
addr16
sbb
ret
fimull
aas
cltd
and
adc
mov
adc
add
sub
loope
pop
sbb
cld
inc
ja
lods
push
xor
dec
mov
xor
mov
xor
push
sub
mov
ja
mov
pop
ror
stos
cltd
push
subb
stos
adc
int3
out
xchg
mov
jae
inc
call
std
push
xchg
pop
ss
inc
xor
mov
pop
inc
cmp
fildl
insl
sbb
mov
jb
fisubs
xchg
mov
packuswb
jl
or
adc
andl
dec
lea
out
scas
stos
push
jmp
xor
test
lret
int3
push
lret
pop
mov
inc
shlb
xchg
sbb
ret
mov
mov
iret
iret
add
cmpsl
addr16
ds
aam
and
add
lret
xchg
push
sub
pop
sub
aam
inc
jmp
daa
push
pop
dec
imul
inc
int
sub
lret
ds
lods
xchg
xchg
test
push
jbe
pop
test
lret
jl
adc
xor
xchg
xor
test
add
fwait
mov
int3
aas
mov
cltd
add
xor
rcl
push
aaa
cmpl
out
xchg
out
xor
xchg
adc
pop
pop
leave
adc
cwtl
fists
sahf
xor
inc
jnp
gs
int3
cld
mov
inc
or
std
cmp
mov
or
jae
out
les
lds
add
sub
lock
ja
insb
jns
addl
popf
int
imul
xchg
sbb
push
xlat
jb
or
fcmove
xchg
mov
adc
add
xlat
sti
mov
mov
pusha
pushf
and
mov
adc
or
mov
mov
fnstcw
gs
sub
dec
test
cld
icebp
in
push
cmpsb
jnp
mov
movsb
fidivrs
test
dec
xor
and
scas
or
into
and
lahf
pushf
or
lcall
out
mov
sbb
popa
or
bound
cs
push
mov
add
pop
std
pop
in
div
pop
lea
and
fldcw
mov
push
seto
out
inc
pop
push
rcll
movsb
dec
push
sbb
aaa
scas
fisubrl
jnp
sbb
testl
mov
iret
lds
call
mov
fidivrs
add
lcall
rclb
insb
and
mov
jo
pop
pop
jp
insl
sub
and
movsl
mov
mov
mov
fs
mov
cmpsb
clc
inc
fadd
in
push
cwtl
sub
repnz
inc
xlat
pusha
xchg
stos
mov
adc
les
cld
pop
sbb
mov
xor
inc
aas
dec
pushf
lods
out
insl
push
paddsw
es
scas
pop
loop
ret
dec
xchg
dec
sbb
pop
cwtl
gs
les
popa
int3
mov
ret
ljmp
ret
into
andl
out
adcb
cmpb
call
mov
sub
dec
xchg
icebp
bswap
mov
lcall
inc
jae
adc
push
mov
scas
imul
jle
mov
cmp
mov
leave
jno
mov
cmp
dec
xchg
or
sarb
and
inc
icebp
mov
mov
fwait
rcll
jns
fnstenv
addr16
stc
or
lret
outsb
xchg
adc
lock
scas
add
push
stc
mov
jmp
sub
mov
shufps
jnp
sbb
sub
aaa
lret
mov
enter
push
dec
popa
sbb
push
jmp
adc
adc
and
jne
cmpsl
leave
inc
jae
jb
mov
inc
out
rcrl
movsl
add
divl
test
xor
loopne
mov
mov
imul
sbb
sbb
lea
rorb
xchg
les
inc
sbb
dec
popa
mull
mov
jl
std
adc
lods
and
pop
mov
add
movsb
pop
es
cmpb
outsl
gs
pop
mov
xor
stc
push
mov
inc
lcall
ljmp
loop
icebp
push
divl
cmpsb
cwtl
add
or
test
negb
sbb
out
dec
lds
inc
push
add
fmul
mov
push
je
pop
addl
jae
aas
pop
xor
insb
rcrl
jecxz
out
lret
jle
mov
daa
cwtl
mov
lods
sub
pop
cmp
pop
lahf
push
fmull
flds
insb
out
xor
notl
adc
inc
cmp
gs
add
add
data16
xchg
or
sub
repnz
mov
push
sarb
out
cli
add
mov
cmp
fsts
es
xor
ljmp
inc
mov
pop
stos
dec
pop
pop
dec
loope
xchg
lcall
enter
fcoms
sbb
adc
mov
mov
and
pop
mov
adc
stc
bound
pop
loopne
xor
and
jp
aad
mov
pusha
int
sbb
pop
jp
xlat
test
sbb
push
sub
jl
les
int
repz
std
sub
xor
ds
insb
adc
jge
inc
pop
je
loop
push
rorb
jp
jb
movsb
shr
jnp
fbstp
jmp
adc
push
repnz
ja
js
incb
adc
bound
or
sub
pop
repz
stos
dec
add
clc
ss
ja
mov
mov
andl
mov
mov
xchg
lods
sarb
jbe
das
hlt
addr16
jns
mov
pop
pop
push
test
jl
cmp
pop
jp
loop
adc
push
in
fistpll
lock
scas
das
shlb
cltd
mov
outsb
xchg
lods
shll
hlt
mov
sbb
mov
mov
pop
imul
jo
mov
pop
imul
cmpsb
jle
xchg
mov
and
cltd
hlt
subl
dec
cmp
mov
sub
inc
inc
dec
out
push
mov
iret
imulb
addb
xchg
std
cld
fcomi
dec
mov
dec
sbb
test
aaa
addr16
or
or
movswl
cmp
fnsave
pop
into
pop
push
ret
inc
jno
or
arpl
stc
repnz
push
jo,pt
add
stos
cmpsb
and
std
or
in
mov
push
fcomps
test
adc
jo
dec
imul
adc
dec
mov
push
cwtl
test
sub
imul
int3
or
jge
ja
test
jge
mov
inc
push
add
loopne
and
imul
xor
sub
xlat
sbb
mov
add
test
cmpsl
fdiv
xchg
pop
incl
jno
dec
repz
int3
xchg
ret
dec
xor
jbe
lods
outsl
mov
xchg
mov
dec
jnp
adc
cmc
shrb
mov
stc
sub
push
xchg
incb
arpl
sbb
lahf
mov
bound
scas
std
out
dec
mov
lret
test
fwait
stos
bnd
out
or
fwait
imul
xchg
lea
orl
aam
adc
dec
xchg
xchg
jecxz
into
push
sbb
lcall
test
stos
cmpsb
nop
pop
cmp
add
mov
sti
lods
cli
xchg
mov
leave
pop
arpl
fwait
or
mov
mov
adc
mov
xor
or
ljmp
mov
lock
mov
cld
adc
sub
loopne
xorb
xchg
in
sub
sbb
fistps
add
push
lret
mov
mov
inc
dec
dec
int
ret
jbe
rclb
xchg
jp
xchg
sbb
pop
xchg
add
cs
enter
shrl
std
into
mov
mov
sub
pop
add
mov
or
ljmp
popf
jnp
xlat
xchg
stos
stos
or
aas
les
stos
inc
ffree
mov
push
iret
fnstenv
pop
xchg
lahf
sub
daa
mov
sbb
sbb
out
inc
jmp
xchg
cmp
testb
imul
and
inc
mov
in
lock
or
es
stos
clc
xchg
outsl
xchg
xchg
and
mov
dec
jno
scas
jmp
js
pop
xor
andb
mov
repz
add
aaa
mov
test
jmp
aaa
push
jge
add
jge
outsb
sub
or
int3
clc
movsl
dec
icebp
and
dec
pusha
outsb
cli
test
cmp
pop
fsubrs
test
xchg
push
cmp
shlb
mov
scas
aaa
jmp
pop
adc
mov
movsb
mov
sbb
cld
movsb
mov
mov
icebp
xor
dec
sub
push
or
push
insb
or
push
stc
sbb
jno
mov
je
in
jecxz
xchg
inc
inc
mov
outsb
rcrb
add
adc
ret
xor
mov
xchg
fmull
repz
sub
movsb
mov
imul
imul
pop
or
or
mov
adc
shrb
cmp
push
mov
imul
mov
scas
cmp
nop
add
sarl
mov
addr16
mov
pop
leave
sbb
adc
fistl
mov
rcl
mov
jg
cmp
sbb
lret
dec
inc
push
and
mov
mov
cmpsl
outsb
mov
test
mov
enter
dec
addr16
out
xor
mov
popa
pop
bound
cmp
test
fidivs
fptan
push
rolb
idivl
lret
jns
dec
jae
xor
insl
jl
sbb
bound
and
mov
lds
enter
arpl
je
popa
pop
sarb
in
cwtl
xchg
adc
mov
dec
enter
idivb
pushf
jle
push
lcall
mov
pop
js
das
mov
repz
ds
into
adc
pop
insb
les
or
xor
pusha
sub
xchg
sbb
aas
pushl
xchg
adc
add
add
mov
test
xor
and
add
push
lock
xchg
add
inc
or
xchg
add
xchg
lcall
xchg
imul
inc
cs
mov
jnp
pop
dec
ja
mov
nop
adc
imul
popa
xchg
push
cmp
aaa
xchg
pushf
int
push
pop
add
push
mov
andl
fwait
test
inc
pop
adc
ret
cltd
pop
roll
push
shll
loope
shrb
inc
xchg
mov
les
stos
punpckhbw
scas
jns
mov
add
ljmp
notb
sti
cltd
push
cmova
cwtl
xor
or
mov
sbb
vmovss
mov
push
cmp
fstpt
mov
icebp
dec
mov
sbb
das
pushf
push
inc
mov
mov
subl
stc
xchg
int
pop
adc
mov
fdivrl
push
mov
add
cmp
push
push
sbb
adc
adcb
ror
add
mov
jecxz
adc
or
xor
inc
enterw
pop
add
in
mul
xchg
mov
mulb
mov
popa
test
cmp
jmp
cmc
es
xchg
push
pop
movsl
mov
mov
inc
loop
lret
ljmp
push
cmc
jno
lock
jns
mov
inc
inc
sbbb
cli
push
es
fstl
test
js
xchg
repz
cmp
xchg
addr16
sbb
test
fwait
mov
enter
lret
in
jb
cmp
adc
mov
adc
mov
xchg
xchg
es
pushf
je
mov
mov
scas
inc
popa
mov
jno
adc
jg
xchg
xchg
icebp
jecxz
xor
fwait
cmp
mov
loop
cmpsb
fisttpll
pop
ljmp
jno
aad
std
data16
pusha
inc
mov
push
sub
cmp
lcall
jae
mov
inc
pusha
enter
sbbb
jno
cmp
ss
cmp
cmc
int3
in
popa
adc
push
lahf
cmpl
out
repnz
xchg
sub
sbb
push
repnz
mul
lcall
out
daa
jecxz
test
inc
ss
mov
mov
jnp
loop
test
movmskps
popa
mov
jp
mov
enter
lock
cmp
sub
adc
notb
or
mov
push
push
flds
in
pusha
int
inc
mov
aam
sub
xor
aaa
mov
dec
and
ljmp
outsb
cmc
les
mov
mov
mov
sahf
or
add
pop
sub
repnz
mov
lea
add
adc
adc
push
fcmovu
jmp
out
adc
mov
pop
mov
mov
out
or
mov
repz
mov
sub
dec
and
adc
cmp
inc
mov
jne
pop
xchg
mov
test
mov
jmp
not
and
jecxz
or
xor
cmp
fidivs
fiadds
inc
mov
add
sub
repz
sbb
nop
push
cmpsb
test
in
mov
cmc
daa
and
aas
pop
cmp
mov
inc
cmp
xor
push
xchg
ljmp
insl
push
xor
inc
pop
data16
imul
rolb
mov
and
pop
call
cmp
inc
add
pop
xor
ja
or
add
dec
lahf
mov
pusha
mov
shrl
pop
addl
xor
push
push
jge
add
sbb
repz
pusha
lret
xchg
out
sub
je
jge
aam
xchg
std
pop
jge
dec
mov
call
jp
jae
cmpsb
and
out
es
das
inc
mov
lcall
lods
outsl
bound
mov
cmpsl
out
jl
inc
sti
cld
test
insb
xor
xchg
lahf
mov
xlat
fdivs
and
in
pop
in
loope
pop
les
sbb
cmpsb
arpl
add
test
fidivrl
xchg
dec
mov
jns
push
mov
mov
jo
xchg
mov
mov
sub
in
je
dec
sar
lret
jns
inc
jb
mov
out
sbb
inc
mov
and
frstor
add
dec
mov
and
cmp
push
mov
out
xchg
sub
cli
in
mov
pop
sarl
inc
call
pop
sub
cmpsb
repnz
enter
add
inc
aad
jp
iret
subps
mov
pop
loope
stos
xchg
and
pop
cmpsl
xchg
xchg
inc
lcall
shll
dec
arpl
leave
jo
lret
iret
cmpsl
fwait
add
std
lret
cmp
dec
sbb
aaa
add
pop
ret
xor
lcall
sub
dec
sub
fldcw
lea
and
sub
pushf
pop
push
out
inc
mov
xorl
cmp
jb
or
mov
jne
mov
scas
insl
lahf
sub
cmp
bound
pop
jnp
ja
imul
leave
push
outsl
out
xchg
inc
pop
imul
rcl
sub
fcomps
pop
pusha
jns
mov
xor
push
or
cltd
and
dec
add
fsubrs
icebp
int3
mov
xor
sahf
nop
mov
mov
or
in
jbe
out
ss
or
push
cld
sbb
hlt
cltd
out
test
cmp
add
repnz
pop
inc
pop
andl
pop
jmp
outsb
mov
mov
js
bound
push
mov
icebp
jbe
adc
mov
mov
xor
mov
pushl
ret
dec
mov
ret
popa
aaa
enter
call
pop
jb
lods
sbb
dec
add
cmp
add
and
cmp
inc
test
ret
pop
xor
imul
ljmp
enter
dec
insb
and
enter
inc
and
mov
sbbb
fistps
push
out
out
mov
push
jno
inc
push
pop
cmp
pop
arpl
push
dec
dec
lods
push
push
icebp
je
sbb
sahf
notl
mov
ljmp
mov
mov
sub
xor
xchg
push
sub
cmpsb
sub
push
cmp
test
cli
dec
shr
nop
movsl
pop
bound
cmp
add
xlat
or
ret
in
arpl
sub
sub
loopne
ffreep
dec
sub
add
rolb
enter
or
mov
or
sahf
cltd
inc
repnz
pop
push
dec
xchg
mov
mov
clc
push
and
adc
pop
dec
aaa
leave
je
lcall
mov
mov
sbb
call
sbb
ss
cmpsl
pop
sub
jp
fcmovb
xlat
inc
ljmp
xchg
fisttpl
inc
rol
orl
mov
imul
mov
stos
add
sbb
mov
insl
pop
inc
testl
pop
mov
hlt
shl
xchg
js
lds
sti
call
int3
and
xchg
stos
inc
ja
mov
fnsave
sbb
pop
ret
xchg
pop
outsb
adc
cltd
xchg
dec
scas
in
cwtl
dec
andb
xchg
fwait
or
out
and
test
and
pusha
gs
fdivrp
rol
cmp
shll
test
mov
leave
or
js
cmp
imul
push
add
push
mov
js
jno
inc
sub
imul
clc
sub
dec
xor
cltd
clc
xchg
xchg
aam
push
dec
es
mov
pusha
fistps
inc
daa
outsl
mov
push
fldt
lods
fistps
imul
or
test
xchg
es
out
dec
pop
sahf
inc
js
and
dec
ljmp
rcll
push
and
sti
lods
loopne
cmp
xorb
popf
push
cmp
jle
xor
out
push
dec
mov
dec
mov
cmp
fidivl
dec
inc
pop
adc
mov
dec
mov
imul
jnp
mov
cmp
xorl
xor
nop
or
outsb
imul
test
test
sbb
adc
mov
and
pop
push
mov
or
and
lret
test
mov
addps
add
enter
test
sub
jmp
cli
cltd
sbb
fwait
iret
test
xchg
mov
push
mov
subl
xchg
insl
sti
fisubrs
mov
call
loopne
mov
mov
pop
sbb
lret
sti
aas
lret
pop
clc
fwait
imul
iret
adc
and
inc
out
jge
add
mov
dec
popf
test
arpl
sub
adc
jbe
push
push
shl
mov
addr16
mov
xchg
into
add
inc
das
inc
mov
loope
pop
enter
mov
insl
jmp
mov
ficompl
dec
jp
xor
daa
into
jecxz
lret
cmp
repz
lods
or
cmpsl
inc
dec
in
and
ret
sbb
mov
pop
mov
xchg
and
xor
cmp
push
dec
jbe
sbb
jg
dec
aaa
add
add
test
or
stc
pop
mov
xchg
int3
fiadds
test
cld
push
push
fs
dec
or
out
jae
les
call
in
xor
or
mov
inc
pop
test
or
aad
sbb
mov
es
out
adc
pop
insb
shlb
inc
lock
cmp
lahf
cmp
and
adc
xchg
dec
fcoms
xor
pop
outsb
pop
xchg
mov
push
inc
pop
int
mov
shlb
adc
push
ljmp
lret
inc
outsb
addr16
jl
movsb
mov
mov
ja
das
rorl
dec
fwait
mov
arpl
mov
out
pop
sbb
dec
mov
aam
mov
scas
pushf
push
or
nop
cmp
test
and
std
pop
or
test
jmp
mov
xchg
mov
dec
mov
mov
test
cmp
loope
add
fcoms
xor
ljmp
fimuls
pop
xchg
and
xchg
mov
into
rcl
movsb
xchg
mov
jne
daa
push
movsl
jo
mov
jmp
jno
jge
pushf
test
jmp
xor
mov
shll
aad
popf
jne
imul
pusha
adc
inc
popf
fstl
sub
pop
mov
mov
or
ds
pcmpeqd
mov
xchg
daa
nop
mov
orl
jmp
sub
jecxz
push
std
nop
adc
rolb
ss
int
mov
sub
push
lcall
cmp
stos
pop
and
andl
mov
lds
es
cli
mov
sbb
pop
sub
fidivl
add
mov
adc
loopne
mov
lahf
inc
fists
add
add
push
dec
cmpsl
dec
push
adc
xchg
mov
insl
imul
ds
movsl
mov
int3
int3
outsl
dec
adc
aas
jle
out
and
call
dec
mov
cmp
lock
add
inc
aad
push
lret
aas
add
pop
and
inc
xlat
inc
pop
xor
pushf
dec
scas
dec
adc
repz
xchg
fst
stos
imul
push
fs
adc
fwait
loop
stc
aaa
cmp
lods
dec
gs
jl
sub
je
push
aas
sar
or
push
jecxz
movsl
stos
xchg
dec
hlt
mov
out
sub
xlat
aas
neg
cmp
sbb
push
pop
pop
lods
mov
std
arpl
jg
dec
sub
adc
gs
xchg
shll
cltd
dec
insb
xor
jne
sub
das
mov
pop
icebp
push
mov
xor
test
scas
pop
cmpsb
rcll
pop
jo
add
xor
or
gs
and
cvttps2pi
push
dec
adcb
push
or
in
lret
adc
pop
cmp
imul
sub
inc
jnp
mov
xchg
pop
aas
jnp
inc
cmp
pop
cmp
outsl
jle
je
int3
icebp
xor
jne
mov
xchg
dec
sbb
and
data16
xchg
test
mov
xor
push
xchg
data16
dec
add
in
iret
cmpsb
mov
push
mov
jl
add
sub
fbstp
cmp
xchg
sub
sub
pushf
cmp
xor
clc
repnz
lods
push
xchg
mov
or
jnp
pusha
data16
mov
adc
mov
test
or
fdivs
test
lds
mov
dec
sti
repz
aas
xor
into
test
mov
fdivr
push
jp
push
xchg
inc
orb
mov
scas
inc
ljmp
bound
push
xchg
add
and
cmp
in
mov
lret
add
in
cs
pop
and
cmp
adc
dec
lahf
xchg
jns
cltd
adc
xor
inc
sbb
xchg
inc
and
mov
ss
push
and
pop
mov
add
xchg
mov
call
mov
mov
orps
sbb
cli
ret
int
adc
out
push
aam
repz
hlt
xor
mov
leave
push
out
push
movsl
push
cmpsb
pop
and
or
mov
mov
mov
aas
mov
xchg
gs
loope
push
aam
cmp
rcll
addr16
jmp
mov
jg
jno
cmp
rclb
out
rol
flds
rcll
push
inc
or
cmpsl
jl
or
fwait
inc
mov
repz
inc
pop
jmp
pop
test
inc
push
mov
mov
jle
push
js
test
add
out
jge
ret
fsts
mulb
pop
aad
xchg
xor
mov
mov
in
cld
shlb
repz
cli
add
lods
popa
movsl
lock
daa
enter
jp
push
cmp
push
lock
xchg
inc
sub
pop
xchg
inc
mov
out
jmp
jp
rolb
xchg
ss
sbb
movsl
sbb
pop
dec
or
pop
and
sub
sub
adc
xorl
dec
and
pop
sbb
sti
xchg
rcl
icebp
insl
stos
jg
sbb
push
push
or
fldt
and
jo
mov
mov
cmp
xor
rolb
lea
arpl
sarb
nop
push
dec
shrb
out
jmp
mov
mov
pop
iret
cmpsb
jmp
leave
jmp
nop
int3
cmp
popf
cmp
imul
test
mov
push
hlt
in
ret
pop
jbe
adc
ljmp
or
cmpsl
dec
and
push
jg
cmp
in
xor
pop
dec
sbb
or
adc
lahf
int3
stos
push
sub
mov
pop
jns
ror
push
jns
add
add
imul
push
dec
in
lahf
imul
fistpll
ud1
out
push
sbb
leave
les
sbb
adc
bnd
add
cmp
popa
jmp
insb
imul
loopne
and
jp
fldcw
test
lahf
mov
push
enter
sub
out
int
fisttps
ficompl
daa
je
cmp
cmp
mov
xchg
lock
ljmp
call
lahf
lcall
out
add
sub
pop
cmpsl
jns
inc
sub
stc
jns
jmp
popa
or
loope
movsb
out
xchg
adc
push
or
sbb
add
int3
adc
pop
pop
aaa
fists
fsubrl
add
sub
mov
popa
mov
cmp
enter
xchg
sti
inc
add
fistl
pop
ds
cmp
stc
loope
jno
mov
xor
push
mov
push
dec
adc
stos
lret
xor
ret
mov
icebp
sbb
lea
jl
rolb
sahf
xor
or
scas
dec
dec
enter
push
jle
mov
mov
or
mov
mov
or
bound
les
or
enter
push
jg
add
ret
mov
xchg
xor
leave
and
ss
ljmp
mov
aad
push
xchg
pop
out
pop
lret
popa
aas
mov
lret
sbb
imul
in
mov
mov
cwtl
stos
js
arpl
movsb
fisubs
ret
adc
out
fdivl
repnz
mov
in
add
lds
mov
jnp
fbstp
xor
dec
lcall
jmp
rcr
mov
out
cmpsl
and
mov
sub
push
add
test
and
gs
xchg
pop
cmp
and
jnp
mov
dec
lret
andb
je
dec
cmp
sub
or
or
lods
jp
mov
lea
je
sbb
jbe
jge
xchg
mov
jb
leave
call
mov
popa
xlat
and
out
xchg
cmc
cld
popa
push
sub
aam
fisubs
fdivr
mov
and
or
pop
stos
and
cwtl
iret
insb
call
add
adc
add
flds
xchg
mov
pop
cmp
mov
pop
stos
dec
into
mov
sbb
inc
cmpsb
ret
cmp
jmp
sbb
ret
push
dec
call
in
lahf
stos
in
leave
pop
pop
lcall
mov
xchg
out
aam
mov
mov
mov
fsub
ss
inc
jle
std
jle
jle
jae
push
shlb
popl
repz
xchg
pop
adc
out
adc
ds
insb
add
shlb
dec
rcl
cltd
jmp
insl
mov
pop
repz
daa
adc
cltd
push
xlat
cmp
lret
push
mov
test
popa
inc
sarb
idivl
push
inc
cltd
aad
adc
or
jno
ret
dec
push
jmp
jo
js
xchg
setbe
jle
ret
ljmp
xor
jecxz
jno
sbbl
dec
mov
jns
call
add
movb
cwtl
jmp
xchg
add
ljmp
test
sub
push
aad
adc
int3
xchg
cmpsl
pop
out
fidivrs
and
enter
add
ret
mov
pusha
scas
adc
xchg
shlb
ds
and
nopl
sbb
push
mov
das
xchg
mov
and
clc
scas
adc
jae
outsl
and
cmp
sub
lods
insb
adc
adc
jae
pop
icebp
test
sahf
cmc
loope
xchg
mov
xor
les
andl
ljmp
int3
scas
pushl
adc
cmp
mov
sub
fcomip
jns
pop
xor
psrld
stos
nop
lret
mov
inc
adcl
in
daa
sbb
test
adc
adcb
in
pop
cmp
shrl
fisttps
incl
dec
push
and
jno
push
fwait
scas
adc
xchg
jne
sub
and
xlat
inc
test
add
or
std
sub
jg
mov
ret
int3
in
cmp
fwait
icebp
rorl
pushf
push
jo
pop
add
fsubrp
lahf
pushw
xor
je
inc
jl
sbb
dec
xchg
cmp
lcall
pop
scas
cmpsl
xchg
in
inc
std
lret
cld
and
bound
cmp
xor
iret
stos
out
add
lret
cmp
insl
or
subb
stos
or
inc
test
call
cmp
xor
push
jno
shl
fistpl
jbe
xchg
stc
or
cs
cltd
popa
dec
pop
aam
inc
or
dec
pushf
xchg
and
lods
mov
and
insl
lds
imul
jno
les
sub
aad
or
hlt
iret
nop
in
mov
jg
pop
les
push
adc
push
mov
fdivs
movsl
out
sub
out
gs
push
sub
pop
jne
adc
push
insb
ds
push
cmp
mov
mov
bound
mov
cmp
or
xchg
jae
daa
dec
xchg
cwtl
sub
cwtl
mov
inc
jo
mov
mov
mov
jns
imulb
cmc
xchg
nop
add
jbe
stc
inc
and
jb
mov
jge
add
xchg
adc
xchg
push
jne
xchg
fldl
xchg
outsl
loopne
imul
inc
mov
je
ffreep
pop
push
es
syscall
fldl
cmpsl
scas
lods
mov
aad
insb
jae
bound
leave
pop
stc
lds
mov
gs
imul
ret
mov
arpl
or
sub
cmpb
lret
imul
xchg
lods
negb
xor
outsb
lcall
inc
xor
loop
pop
repz
lahf
cmpsl
mov
clc
aam
sub
sti
stc
ret
mov
sbb
sbb
inc
or
dec
sbb
stos
xchg
mov
jg
je
loope
lods
jp
outsl
lock
dec
seto
cmp
sub
or
ljmp
adc
aas
push
dec
sub
push
cmp
repnz
cmpsl
sbb
mov
dec
xor
imul
mov
mov
ja
mov
daa
ss
jmp
push
dec
adc
jecxz
lods
xchg
inc
lods
loope
cs
das
popf
or
mov
sbb
mov
xchg
lds
xchg
jg
mov
outsb
adc
adc
ja
stos
cld
scas
mov
and
push
std
mov
pop
xchg
fsubs
mov
out
js
insb
aas
lods
stc
sbbb
xor
adc
into
mov
xchg
sbb
fdiv
shr
shll
in
sbbl
or
and
lods
adc
dec
push
bound
lea
hlt
fnclex
mov
adc
je
out
push
fs
xor
jg
mov
imul
and
or
xor
cwtl
cmpsl
pop
std
push
insb
cmc
call
int3
dec
ja
inc
xchg
add
cmp
or
stos
xor
fstpl
sub
je
xchg
test
xor
shlb
and
dec
push
push
cmp
jmp
dec
in
aaa
mov
filds
adc
sub
in
xor
leave
adc
test
pop
add
mov
mov
inc
sub
out
cmp
iret
pop
iret
dec
xchg
inc
hlt
push
out
inc
adc
mov
mov
daa
xor
mov
push
loop,pn
cmc
clc
lock
lods
test
stos
dec
sub
cmp
and
sbb
add
enter
dec
xchg
lods
mov
pushf
adc
scas
and
xor
push
scas
or
mov
mov
test
push
out
inc
dec
ficoml
outsl
jecxz
clc
pop
mov
jns
out
xor
or
inc
push
cld
mov
and
in
fwait
popf
mov
idivl
rcrb
mov
mov
sbb
fcmovu
and
jg
fucomip
gs
sbb
loope
fs
lcall
arpl
adc
scas
aam
and
and
push
push
and
adc
push
arpl
mov
cld
mov
movsl
pushf
sti
out
outsb
mov
sbb
int3
mov
add
js
mov
outsb
push
mov
cmp
xor
sbb
or
mov
push
xchg
int3
les
push
aas
pop
or
and
lahf
rol
jne
xchg
jne
rol
sbb
pop
repz
mov
in
addr16
test
arpl
mov
cmp
jns
pop
ret
int
pop
push
lods
and
or
mov
sbb
int
mov
adc
mov
dec
dec
stc
sti
loopne
out
cmp
xor
mov
mov
xchg
aas
notl
inc
dec
mov
fbld
mov
out
push
and
add
leave
mov
fcomps
and
add
test
push
fwait
outsb
data16
sub
dec
call
int
adc
aad
pop
fisttps
or
sbb
pop
mov
es
or
mov
push
outsb
dec
test
mov
icebp
or
rol
add
dec
xlat
jbe
pop
pusha
outsb
adc
sti
in
jno
ds
xor
je
xchg
xchg
mov
les
aad
ficoml
call
stc
mov
sub
lock
dec
push
xchg
stos
cli
mov
inc
lea
loope
adc
push
in
mov
or
push
daa
and
and
cs
popf
arpl
push
inc
ljmp
xor
add
xor
mov
loope
subb
push
rcll
jo
inc
push
jae
xchg
push
jne
inc
cmp
iret
cmp
scas
push
movsb
pusha
pop
insl
imul
inc
adc
ret
pusha
xchg
stos
jo
xor
and
aaa
popf
mov
and
or
mov
mov
cmp
fs
in
fmuls
mov
dec
inc
pop
lcall
mov
movsb
out
das
inc
pop
mov
xchg
test
test
test
ss
mov
and
stos
ret
mov
stc
lods
call
xlat
neg
push
adc
mov
mov
int3
push
cmp
loop
inc
jmp
ds
and
in
pushf
pop
or
or
inc
clc
push
adc
add
fsubp
inc
gs
push
cli
cmp
mov
negb
jnp
mov
xor
jmp
fistpl
les
xor
add
call
lret
push
jg
out
jmp
jg
jnp
xchg
xchg
mov
and
sbb
cmp
inc
push
and
jnp
out
je,pt
lods
lret
sub
sub
adc
int3
repz
pop
xchg
push
std
jo
mov
and
push
jnp
inc
jno
mov
incl
xor
add
sahf
hlt
sbb
test
mov
test
xchg
push
xchg
frstor
stos
popa
mov
loopne
xchg
cld
pop
mov
xlat
xor
in
xchg
btc
jbe
mov
stos
xor
aam
add
dec
and
dec
jp
and
dec
push
jl
rcll
add
outsl
bound
pop
sbb
inc
shlb
push
pop
gs
adc
aas
aam
push
cmpsl
dec
add
ljmp
mov
fistps
std
xchg
pop
cwtl
xorb
jo
adc
repnz
push
insb
je
or
pop
sti
addr16
aam
dec
mov
mov
rolb
adc
mov
loop
dec
shlb
fnsetpm(287
pop
jnp
pop
cltd
sbb
ret
add
fisubs
xchg
ljmp
in
lea
aam
in
jae
pushf
mov
pop
push
daa
aas
popf
les
push
out
int3
outsl
mov
fcom
inc
cmp
xchg
cmp
xlat
pop
stos
adc
sub
je
jbe
cmpb
adc
fbstp
cmc
in
cs
fidivrs
scas
cmp
rcrb
adc
into
jmp
add
push
add
popa
stc
xchg
mov
pop
and
push
les
lods
mov
xor
cmc
pop
mov
orb
inc
cltd
lods
imul
and
add
fwait
pusha
and
cmp
icebp
jp
ja
pushl
adc
mov
dec
xchg
push
inc
push
insl
cld
add
stc
mov
fs
jno
or
push
xor
inc
divl
sbb
xchg
dec
mov
xchg
and
jecxz
pop
jb
not
loop
nop
xor
cmpsl
adc
aam
sbb
push
jns
add
mov
fimull
loope,pn
jg
sub
imul
or
imul
mov
cmpsl
in
popf
adc
jg
outsb
mov
mov
pop
push
subl
icebp
bound
or
push
ficoml
sub
sti
adc
sbb
cmc
jl
inc
lahf
dec
mov
lcall
dec
ljmp
fwait
cmpsb
aas
xor
shrb
sbb
gs
xchg
loop
cwtl
lret
xchg
dec
int
in
xchg
dec
pop
sub
mov
and
jp
ds
mov
test
mov
dec
repz
aaa
ja
jl
fisubrl
add
cmp
sub
and
push
enter
test
mov
mov
fsubr
sahf
xchg
loope
cmc
shrl
and
inc
jne
dec
ficompl
imul
mov
movl
mov
icebp
rcrb
xor
lods
sbb
shl
jno
or
repnz
pop
fwait
out
inc
sub
xlat
inc
sub
adc
mov
pop
daa
dec
rorb
adc
aad
stos
push
rorl
sbb
test
sbb
pop
lock
in
leave
int3
sti
repnz
adc
adc
xchg
jge
mov
xor
daa
mov
and
and
stos
adc
shl
pop
jb
mull
mov
pop
aad
stos
shlb
stos
add
pop
inc
xchg
jle
mov
add
push
mov
lods
fs
lcall
std
lret
xchg
mov
hlt
xchg
out
fdivr
jae
call
jg
lret
mov
pop
mov
xor
mov
xchg
xchg
cmp
scas
in
jno
mov
data16
stc
mov
sahf
cmp
subb
roll
enter
sar
dec
mov
repz
ret
aaa
negb
lock
inc
popa
push
push
gs
add
xchg
pop
cwtl
out
fcoml
movsl
and
cmp
in
adc
push
cmp
xchg
push
hlt
jge
addb
popf
mov
push
std
lret
bound
xchg
inc
fmul
pusha
imul
jle
xor
mov
adcb
imul
test
sub
mov
sbb
mov
test
cmp
fsubs
imul
inc
mov
cmp
mov
rcrl
sbb
and
mov
add
into
cmp
stos
jb
subb
nop
mov
lds
sbb
mov
mov
jmp
add
shr
adc
xorl
inc
adc
xchg
lgs
jno
pop
push
xchg
push
bound
out
xor
shrb
scas
adc
negb
inc
test
les
push
mov
stos
inc
sti
xchg
dec
xor
dec
imul
jecxz
dec
movl
stos
fwait
imul
out
out
pop
sbb
mov
test
and
lahf
xrelease
popa
sub
xchg
jnp
push
dec
iret
loope
pop
jo
cmp
cmp
dec
cmpsb
out
iret
xor
idivl
sbb
cmc
aad
and
test
sbb
fldcw
jecxz
add
divl
dec
mov
adc
push
xor
mov
sti
jno
mov
addl
loopne
inc
inc
mov
movsb
jmp
das
dec
in
inc
xor
mov
lret
mov
icebp
aas
mov
repz
push
lret
and
inc
test
movsb
fsts
pop
ficomps
popa
inc
call
adc
scas
pop
insb
fists
jle
cmp
enter
imul
pushl
inc
enter
cmp
les
or
xor
push
imul
aaa
xchg
ja
in
or
lock
jbe
inc
push
insb
sub
add
inc
add
add
add
popa
mov
add
pop
jl
push
adc
and
movsb
add
push
cmpsb
addb
or
int3
push
repnz
movsb
fs
or
in
sahf
xor
fwait
mov
imul
pushw
test
je
lds
pop
outsl
inc
pop
repnz
cmp
pop
fs
cmpsb
insb
rolb
pop
out
dec
pushf
mov
pop
sarb
mov
lcall
pop
gs
push
out
mov
ljmp
fwait
jmp
fbld
lahf
lcall
dec
fldl
mov
xchg
ret
mov
nop
add
test
jnp
xchg
cltd
lret
test
and
or
subl
out
or
adc
pop
pusha
popf
dec
cmp
fstpl
xor
inc
hlt
jae
vlddqu
int
inc
insl
mov
jnp
mov
sbb
movsb
gs
pop
sub
mov
mov
repz
sbb
cwtl
sub
sub
lret
jb
pop
sarb
into
push
xchg
dec
or
mov
xor
xchg
adc
jge
sub
or
pop
popa
cmpsl
adc
and
cli
pop
stos
scas
scas
ljmp
in
lods
push
cs
loopne
sbb
mov
mov
dec
andnps
jnp
push
hlt
xor
inc
int3
std
sbb
shl
inc
sub
mov
cmp
mov
push
dec
sub
lahf
in
mov
lods
loope
mov
or
test
mov
adc
ret
fldenv
ret
adc
test
insb
push
outsl
push
into
add
out
enter
mov
sbb
push
scas
inc
int
pop
push
dec
add
or
mov
hlt
inc
cmp
pop
pop
lock
scas
sub
popf
imul
jns
int
pop
mov
mov
jg
add
mov
scas
rep
adc
mov
imul
adc
add
pushf
rolb
fnstenv
shll
movsb
dec
mov
loopne
loopne
in
cmp
icebp
hlt
shlb
int3
or
repnz
mov
xlat
push
dec
cld
and
fwait
repz
adc
jae
add
fnsave
xchg
stc
mov
pop
arpl
ss
push
adc
inc
enter
cld
into
pop
xor
pop
dec
iret
pop
jo
int
or
mov
mov
movsl
add
xor
outsb
cwtl
mov
and
pop
rolb
dec
mov
test
adc
xor
xor
test
lea
popa
xor
popa
mov
cwtl
mov
inc
mov
push
mov
fwait
jae
inc
insl
in
cwtl
add
sub
aad
test
testb
xchg
mov
dec
les
cmp
iret
dec
mov
subl
lock
or
push
ljmp
xchg
insb
std
sbb
or
lds
cli
xor
mov
daa
cltd
ljmp
js
jl
sub
movsl
scas
cld
roll
pop
pop
inc
insl
adc
mov
outsl
inc
push
sbb
les
ret
pop
testl
notb
jb
icebp
enter
insb
xor
insb
loop
jo
int
xlat
inc
movsl
pop
call
repnz
insb
cmp
sbb
das
movsb
mov
pop
loop
push
dec
sbb
imul
jns
cmp
pop
pop
xchg
jb
addr16
data16
testl
stos
data16
xor
mov
adc
cmp
xor
mov
pop
adc
loope
call
je
lret
jbe
sbb
mov
cmpsb
cmp
add
ret
xor
call
fildll
add
sbb
cmp
jmp
testb
push
gs
push
xor
add
int3
nop
int
mov
jp
je
fwait
sbb
jge
fcmovu
mov
mov
lea
js
mov
les
push
adc
sub
mov
adc
cmp
rorl
mov
adc
xor
xchg
mov
sti
add
xor
xchg
movsb
jo
test
and
rcl
push
jecxz
sbb
jge
sub
out
popa
mov
fld
and
push
sbb
xlat
dec
lcall
mov
xor
or
call
call
out
inc
sbb
pop
imul
and
xor
lret
int
add
jno
mov
outsl
test
jp
sbbb
cmp
xor
into
push
hlt
repnz
push
sub
imul
stos
inc
inc
dec
jp
inc
sbb
sarl
xor
inc
outsl
and
xor
push
loop
aam
jno
pop
mov
sub
add
jne
adc
jb
push
mov
sbb
pushf
cld
subb
and
cmc
adc
movsl
jo
sbb
mov
xchg
pusha
scas
test
imull
mov
imul
inc
xchg
sub
xchg
arpl
push
sub
repz
mov
imul
mov
xlat
and
adcb
ret
insb
adc
jmp
adcl
int
mov
pop
sub
sub
cli
pand
pop
fmuls
or
and
outsb
mov
in
and
push
pop
fldt
mov
cmp
fisubrs
imul
mov
rcrb
pop
pop
data16
jo
xchg
add
nop
test
mov
inc
or
mov
mov
pop
jbe
xor
push
pop
scas
mov
mov
jl
cmp
inc
scas
push
and
mov
aaa
into
mov
loope
aam
mov
sar
jbe,pn
rcr
sbb
dec
adcb
ret
pop
dec
lods
repz
daa
out
out
ffreep
jge
mov
out
xchg
push
xlat
mov
pop
mov
push
sbbl
xchg
or
mov
nop
adc
divl
jle
push
lds
in
in
scas
cld
xchg
adcl
out
sbb
popf
cmc
idiv
orl
add
shll
sub
outsl
pop
mov
outsb
mov
xor
xor
push
mov
jge
pop
frstor
je
mov
daa
fcompl
je
and
cmp
add
jmp
scas
adc
in
lods
mov
mov
cld
jns
jbe
or
addl
ljmp
lahf
cli
push
mov
mov
les
mov
dec
dec
and
popf
test
outsb
mov
out
dec
cli
push
mov
pop
xchg
inc
dec
ret
das
cmp
sahf
jo
sub
add
or
xor
into
push
shlb
mov
or
push
jge
xchg
cmp
cs
aas
push
lret
mov
shrl
push
repnz
out
xchg
ficoml
in
dec
daa
inc
mov
or
pop
into
push
sbbb
ljmp
dec
outsb
imul
test
and
pop
xor
test
and
xor
jge
push
mov
lock
and
ret
cmp
sub
cmp
ret
loopne
jmp
in
mov
popa
mov
and
sti
scas
mov
pop
xor
shrl
shlb
dec
orl
rorl
roll
movsl
sub
es
mov
mov
icebp
iret
imul
pop
jne
mov
aaa
jae
sub
mov
xorl
sub
daa
lret
leave
imul
aad
int
aas
push
xchg
mov
jae
aaa
loopne
sub
jp
out
test
push
sub
sub
mov
in
jo
push
addr16
adc
mov
mov
sub
inc
jae
inc
ret
int
lret
cwtl
mov
pop
das
lea
mov
inc
mov
rcrb
mov
scas
arpl
fld
add
jne
cmp
in
xchg
pop
hlt
mov
adc
sahf
lods
add
gs
sub
repz
jne
loop
jle
mov
jnp
daa
inc
and
out
jle
std
or
xchg
mov
addr16
jne
pop
xchg
push
je
xchg
sbb
dec
or
imul
push
sbb
and
sbb
int3
pop
jne
pop
sub
das
or
add
rcrl
jge
lock
jno
hlt
push
lea
aaa
gs
int
bound
lods
sbb
or
fdivl
bswap
dec
ljmp
sub
push
shll
popf
or
add
je
adc
jae
imul
adcl
xchg
test
orl
imulb
xchg
mov
out
nop
int3
iret
hlt
add
push
dec
push
mov
mov
push
jo
mov
popa
std
jne
mov
sbb
call
sbb
mov
into
stos
shl
dec
adc
mov
jg
inc
xor
arpl
outsl
std
popa
xchg
inc
xlat
push
jbe
enter
inc
test
imul
xchg
stc
push
xor
jge
pop
pop
adc
pop
pushl
arpl
fstpl
inc
and
jle
movsb
add
inc
fdivp
sub
xchg
xchg
xchg
leave
stos
outsl
push
pusha
mov
xchg
negb
xchg
jmp
pop
mov
lods
ss
push
gs
mull
mov
ret
dec
call
aam
fildll
lcall
xchg
xor
mov
lcall
sti
sbb
mov
in
sahf
ss
add
mov
push
xor
orb
xchg
jle
in
cmp
negl
push
jne
outsl
add
mov
cmp
sub
rorb
je
xchg
hlt
adc
and
mov
aam
scas
xchg
pop
xchg
arpl
pop
aam
shll
xor
adc
push
sub
mov
jno
push
mov
or
pop
pop
jecxz
add
loope
adc
push
shll
in
gs
mov
xchg
fstps
stc
sub
pop
in
push
aam
lret
mov
lea
popf
stc
repnz
jo
lods
rorb
xor
cmpb
push
bound
inc
mov
pop
dec
mov
push
insl
xchg
repnz
repz
mov
sarl
mov
fisttps
pop
les
or
xor
mov
cmp
in
test
or
les
xor
cmp
sbbl
pop
arpl
cmp
test
jne
cmp
lret
add
add
push
add
test
push
inc
push
xchg
xor
adc
outsl
lea
cmp
sub
cmp
push
mov
sub
nop
in
ss
insl
pop
fwait
pop
call
or
inc
xor
clc
inc
insb
dec
js
add
lcall
hlt
and
in
dec
or
push
or
adc
cmpsl
push
and
andb
je
sbb
jecxz
jecxz
out
loop
mov
sub
lcall
imul
mov
fldcw
adc
or
imul
pop
adc
and
cmc
push
loope
inc
xlat
mov
aad
sbb
cmpsl
push
out
xor
cmp
cmc
dec
dec
insl
mov
pop
adc
mov
xchg
aam
cmp
loope
bound
aam
fs
test
or
fucomi
jns
push
adc
mov
pop
jmp
pop
andl
rorl
outsb
and
jbe
leave
or
jle
insl
rcrb
sbb
jmp
pop
adc
outsb
fcmovb
shlb
test
pop
bound
stos
and
cmpsb
call
ja
test
jecxz
xchg
adc
cmpsl
call
imul
dec
mov
sub
loop
xchg
sbb
loope
jecxz
int3
imul
push
xchg
add
add
repnz
pop
addr16
push
push
lahf
rorb
faddp
pop
or
xor
data16
loop
inc
ja
lcall
add
stos
jno
enter
push
add
sub
jno
pop
inc
pusha
sahf
mov
mov
orb
lcall
add
int
adc
cmp
push
jmp
push
es
push
cltd
pop
sub
lods
aaa
sub
repnz
fldcw
cmp
xchg
mov
sub
push
xchg
pop
cmp
bound
in
sub
out
out
xchg
xor
adc
insb
dec
mov
addr16
jbe
pop
mov
ja
fldln2
xor
dec
std
in
dec
repnz
movsb
cmp
in
xor
adc
inc
ret
js
sub
test
hlt
mov
jnp
in
inc
xor
pop
adc
stc
cltd
stc
ds
xorl
mov
mov
sub
sbb
mov
push
cmp
mov
adc
sub
dec
push
in
cmp
sub
movsb
cmp
sub
pop
pushf
mov
xor
sub
shrl
cmp
clc
and
daa
shlb
jmp
pushf
add
sbb
and
imul
dec
sub
stos
sub
and
push
push
and
mov
mov
test
pop
dec
js
inc
jae
loopne
clc
hlt
scas
xlat
nop
mov
xchg
dec
aam
mov
imul
xor
mov
xchg
mov
lret
fcompl
test
insb
addb
pop
jmp
orb
mov
ret
sbbb
push
add
repnz
loope
ss
icebp
mov
jns
xchg
int3
js
sub
add
mov
mov
jae
add
mov
addb
dec
xor
sti
dec
push
outsb
mov
pop
adc
and
test
mov
xor
push
loope
jo
mov
mov
xor
insb
pop
xor
sbb
cmpsl
or
jmp
out
cmp
out
mov
mov
imul
lea
aaa
rcll
pop
or
fnstsw
ret
das
leave
cmp
outsl
fisttps
shll
lahf
aam
xchg
pmovmskb
dec
adc
or
and
cld
add
fdivp
mov
cltd
push
ret
test
lds
mov
pop
sub
xchg
mov
test
inc
xchg
mov
stos
out
fldenv
lock
or
inc
inc
mov
xchg
sub
mov
hlt
popa
jns
repnz
pop
jg
sbb
repz
in
popf
pop
mov
push
add
lcall
aam
jae
mov
push
push
lahf
sub
shl
xchg
jmp
shll
ret
aaa
adc
cld
sbb
mov
shll
inc
mov
in
xchg
inc
fdivl
dec
and
xor
ds
in
xor
adc
or
pop
pop
sub
adc
mov
mov
xor
mov
lds
cmpsl
jno
mov
in
aaa
hlt
clc
add
popf
movsb
inc
fmul
stc
enter
mov
cmpsl
cmpsl
in
mov
mov
xchg
faddl
add
mov
and
mov
stos
mov
pusha
jnp
jns
das
and
inc
ss
repnz
and
scas
cmpsl
dec
xchg
into
sub
ss
dec
popa
cwtl
mov
sbb
dec
pop
lcall
out
push
std
test
dec
imul
stos
fs
int3
sbb
enter
cmpsl
ret
mov
cmp
flds
pop
cmp
push
sub
jnp
scas
test
jnp
dec
cwtl
in
sbb
mov
jl
jo
dec
mov
mov
aaa
ljmp
ret
gs
fsubr
add
aas
or
daa
jecxz
je
sbb
cmpsb
dec
jae
popf
pop
outsb
aam
xchg
xor
jecxz
adc
fnsave
and
stos
mov
mov
mov
add
dec
pushl
incb
out
leave
lods
rolb
das
outsl
add
add
jecxz
pop
mov
cwtl
mov
dec
xchg
gs
adc
xor
ss
data16
cs
xor
loope
mov
xor
xchg
mov
dec
cs
cmp
push
jg
fildll
in
push
iret
imul
repnz
lods
push
or
loopne
fldl
lods
out
push
xor
pop
push
push
jb
adc
scas
cmp
jl
jge
je
loop
test
sbb
mov
mov
or
sbb
sbb
leave
adc
test
loopne
jp
pop
inc
xchg
sbb
push
jne
lahf
call
jge
cmpsl
dec
int3
out
inc
lds
ja
rcll
xchg
push
adc
pop
cmp
rep
movsb
mov
adc
and
add
lods
cld
int3
sbb
adc
sub
outsl
gs
aad
ljmp
sub
in
and
leave
bound
mov
loopne
add
sub
inc
test
lret
leave
addr16
inc
je
mov
fwait
jae
out
test
adc
sbb
movsl
mov
call
xor
ss
xor
in
stos
ljmp
loop
nop
lahf
loope
fists
mov
sbb
inc
aas
xchg
pop
outsl
fs
sahf
jb
in
jb
jns
movsl
fldt
pop
into
xchg
jge
xorb
idivl
loope
dec
js
jo
or
das
jno
mov
push
sarl
or
cmp
and
xor
xchg
out
jecxz
in
mov
sbb
jecxz
inc
roll
push
pop
pop
sbb
or
test
call
push
faddl
dec
repz
inc
es
pusha
and
pop
xor
lcall
enter
jmp
inc
lret
out
in
sub
jge
dec
pop
add
hlt
cmpsb
shrb
dec
scas
stc
pop
and
bnd
add
loop
xchg
leave
dec
cmp
in
clc
push
or
cmp
sbb
divl
in
jns
leave
mov
mov
push
cmp
mov
stos
outsb
pop
je
cmp
iret
imul
xor
jle
sub
pop
mov
xchg
cmc
add
add
cmpl
mov
pop
xlat
imulb
ror
aas
lret
push
mov
add
negb
out
cwtl
jle
pop
adc
sti
lcall
ja
mov
or
ljmp
popf
mov
lret
subl
xchg
icebp
jg
and
jnp
lods
mov
xchg
add
jae
aad
jbe
and
add
ret
test
push
inc
out
daa
mov
or
lcall
outsb
outsb
jbe
cwtl
rcl
pop
fwait
xor
out
adc
cli
dec
xor
mov
xor
fadds
xchg
and
aaa
stos
dec
ss
sub
jl
push
adc
leave
adc
dec
jp
mov
movsb
leave
fisttps
add
mov
out
dec
adc
je
xchg
andps
fwait
out
rol
enter
xchg
jb
fadds
mov
mov
ljmp
imul
or
push
cld
lds
scas
or
mov
dec
pop
movsb
fwait
test
lock
inc
dec
orb
push
dec
jmp
std
mov
pop
fs
cs
arpl
in
gs
mov
push
sub
add
popf
push
gs
jmp
dec
shl
imul
sub
lret
xchg
repz
in
mov
mov
add
mov
mov
mov
mov
pop
movsl
sbb
push
and
ret
sti
ret
ljmp
mov
xchg
sub
mov
or
mov
or
and
lock
push
push
in
and
sub
scas
cwtl
mov
push
and
dec
lods
cltd
int
inc
leave
mov
ljmp
jl
iret
mov
clc
jecxz
mov
sbbb
xor
repnz
outsb
sbb
in
fsubp
add
xor
out
fidivrl
pusha
adc
push
xchg
jae
and
call
push
xor
daa
loop
fidivl
mov
sbb
mov
repz
sti
stc
aas
movl
cli
jmp
inc
scas
fidivrl
sub
jno
gs
pop
or
push
or
out
fmuls
mov
das
lahf
subl
xor
pushf
in
mov
dec
repz
xchg
hlt
push
fcmovnb
pop
mov
mov
mov
jg
loope
xchg
jecxz
test
ds
loope
mov
inc
cmp
dec
pushf
mulb
jo
xor
mov
outsb
cmp
mov
mov
cmp
add
popa
and
test
adc
mov
stos
rcrb
push
fdivrl
fidivl
aad
andl
and
and
push
xor
xchg
mov
push
int
sti
test
in
cmp
sub
jb
es
dec
push
fistps
ficoms
stc
test
jb
loope
shll
enter
dec
fcomi
inc
test
or
jae
mov
xor
nop
call
pop
ljmp
out
scas
push
sub
add
push
aas
or
jge
mov
sub
leave
sub
cmp
push
adc
int3
adc
test
fisttpll
lret
sub
jo
loopne
jnp
xorb
imul
aas
cmp
inc
in
pop
loope
nop
and
xor
xchg
stc
dec
lcall
lret
mov
pushf
sbb
or
add
test
mov
dec
shr
popa
scas
loope
in
sbb
outsl
in
inc
mov
xor
jno
and
sahf
pusha
lods
outsb
je
pop
repz
add
adc
bound
dec
aam
in
push
ret
jne
loop
je
imul
add
es
pusha
adc
shll
sbb
push
xchg
cmpsb
jo
cmpsb
jno
mov
imul
fstl
mov
jbe
xchg
nop
xchg
leave
sub
jecxz
adc
mov
or
popa
repnz
dec
int3
or
sub
es
lret
je
push
jb
js
imul
jns
pop
and
push
push
sbb
rclb
jne
xchg
cmc
aad
mov
pop
pop
add
jb
fs
sbbl
insl
add
in
movsb
adc
inc
mov
int3
xlat
mov
gs
popf
cmpsb
shll
repz
mov
mov
lock
push
push
insl
dec
test
xchg
pop
xchg
xor
inc
push
pop
dec
dec
rcrb
mov
movsl
pop
leave
push
or
out
icebp
daa
push
out
add
into
movsb
cld
xor
les
mov
mov
mov
cmp
les
sbb
add
js
fs
fisubrl
movsl
mov
xchg
push
mov
mov
fcomp
mov
iret
shlb
out
lahf
addr16
inc
mov
lea
in
pop
cmp
pushf
add
xchg
movsl
bndstx
rclb
shll
add
lret
pop
sahf
sbb
jns
sarb
adc
adc
movsl
pusha
mov
ficoms
push
cmc
dec
xor
dec
dec
out
shl
fdivr
cmpsb
data16
fwait
paddw
rorl
push
jmpw
divl
cs
mov
mov
inc
and
addr16
push
notl
or
jg
mov
mov
adc
jb
add
dec
pop
bound
aad
repnz
adc
imul
insb
pop
rorb
loop
push
mov
pop
movsb
scas
cmp
lock
cmp
scas
xorl
and
jns
int
push
cwtl
push
push
iret
daa
dec
imul
ds
into
xchg
mov
hlt
test
je
mov
sub
push
cwtl
pusha
imul
lret
pusha
add
jne
insb
pop
stc
sbb
jmp
arpl
adc
inc
sub
or
fwait
push
repz
loope
sbb
add
sub
loopne
xor
dec
or
out
inc
je
adc
push
and
cmp
xchg
mov
dec
pop
mov
xchg
sahf
cmp
and
out
push
lea
scas
fisubrs
mov
pop
push
sub
lods
inc
enter
dec
and
cs
pop
les
sahf
in
inc
push
adc
xor
or
fwait
jae
test
mov
ss
push
jbe
cli
rolb
testl
mov
mov
movb
or
xchg
imul
mov
sbb
iret
popa
imul
sub
gs
mov
in
loopne
loop
xchg
insb
cmp
xor
xchg
cld
stc
pop
out
pop
adc
jne
mov
mov
call
pop
stc
adc
cmp
add
mov
shlb
outsl
mov
lods
in
or
mov
push
mov
enter
inc
popf
xchg
loope
and
out
xor
rorb
test
or
and
in
inc
xor
xor
or
ljmp
testb
mov
or
jo
lock
in
pop
dec
add
lea
mov
xchg
add
add
addb
xor
test
dec
stos
sub
sub
test
mov
push
xchg
mov
repz
pusha
cld
lds
cmpsl
test
imul
cmp
jle
adc
xchg
popf
out
sub
inc
jbe
fistl
mov
lds
push
es
addb
dec
mov
mov
and
jno
pop
cwtl
mov
xchg
fwait
dec
test
mov
sub
inc
mov
sub
sbb
dec
push
stc
mov
pushf
pop
int
and
mov
popf
in
or
test
pop
jecxz
mov
sahf
xlat
incl
dec
iret
adc
push
in
sbb
bound
hlt
pusha
mov
pop
adc
add
pop
repnz
mov
into
xor
push
add
negl
sub
pop
jb
jle
ja
xchg
jle
in
add
int3
mov
xchg
lea
fldl
and
pop
mov
cmpl
outsl
mov
adc
cmp
repnz
and
fwait
pusha
pop
xor
add
mov
mov
pop
cli
movsb
lcall
inc
lods
in
in
pop
jge
test
inc
repnz
lock
mov
xchg
fstcw
inc
clc
cmp
inc
stos
es
push
popa
daa
cmp
out
repnz
leave
ja
nop
push
jp
mov
nop
aaa
inc
je
sbb
add
xchg
leave
cltd
rolb
cmp
adc
bound
xor
push
loop
sbb
leave
mov
dec
imul
mov
pop
adc
and
outsb
pop
dec
cld
inc
dec
filds
inc
leave
and
mov
jne
test
mov
insb
cmp
jecxz
xor
jp
sub
dec
and
clc
movsl
negl
inc
dec
pop
shll
mov
movsl
insl
or
std
xchg
push
in
xchg
aam
adc
sub
enter
das
bound
jnp
mov
mov
cmp
leave
mov
in
jg
jnp
push
jne
lahf
mov
dec
fwait
mov
cmpsl
inc
xchg
xor
push
sbb
lods
sub
add
jp
pop
adc
mov
dec
adcb
pop
roll
insl
push
hlt
sbb
or
iret
pusha
add
and
insb
mov
dec
stc
movsb
daa
inc
xor
jl
mov
clc
mov
jae
add
adc
and
lret
aad
cs
iret
imul
adc
icebp
fidivrl
lcall
daa
icebp
pop
adc
pop
sbb
sbb
jle
imul
roll
push
fisubrs
jl
fildl
dec
loop
in
out
jne
mov
sub
or
loopne
int
jo
inc
mov
addr16
cltd
adc
lods
lds
inc
aas
pop
subb
mov
lds
adc
aad
jle
sub
sbb
psrld
inc
sub
mov
out
push
sbb
push
rcll
or
pop
icebp
stos
adc
inc
or
push
mov
in
push
mov
in
mov
sbb
xlat
insl
mov
add
imul
inc
aad
jae
mov
push
fisttpl
pushf
leave
and
fsubr
xchg
nop
das
lahf
ror
pop
stos
lea
iret
outsb
call
sbb
frstor
and
ljmp
mov
cmp
push
jo
mov
mov
pop
fldcw
ss
out
xchg
xchg
adc
clc
sbb
adc
jb
inc
pushf
jns
aad
mov
movsb
inc
cli
mov
repz
out
fwait
leave
xor
in
insl
test
ja
inc
insl
or
xor
mov
fyl2x
and
lahf
pop
adc
stc
shll
fbstp
fildl
aaa
jmp
inc
into
aaa
loop
ret
test
push
inc
movsb
add
cmovle
fidivs
cs
test
pop
pop
adc
mov
inc
mov
mov
loop
sahf
rorb
jbe
shl
fisubs
sbb
repz
mov
xor
xor
xchg
fucomip
gs
xchg
idiv
xorb
ss
sub
scas
ds
push
dec
adc
std
movsb
push
enter
cmpsb
bound
outsl
mov
aaa
sbb
jge
imul
out
cmc
xor
nop
dec
jno
sahf
sti
jae
int3
cmpsb
jno
dec
negl
sub
lods
fcmovbe
mov
aad
push
jle
in
xor
fldl
daa
or
and
cs
add
cmpsl
push
jge
cmpsl
sbb
cmp
jae
pop
adc
jmp
xor
adc
jg
xchg
cmp
inc
pop
aad
lret
xchg
call
gs
pushf
shrb
mov
jle
add
pop
fidivl
repz
jnp
cwtl
cmp
cmp
scas
pop
ljmp
mov
stos
push
mov
push
mov
stos
sub
xchg
je
rcrb
rcr
and
shrb
xchg
sub
pusha
mov
push
jg
sub
pusha
cmp
outsb
mov
jge
push
popf
inc
cmp
xor
ret
inc
ds
cld
cwtl
mov
fwait
sahf
es
lcall
add
jmp
mov
scas
jno
hlt
rclb
popf
in
test
lret
jbe
sbb
add
jg
decl
add
sti
out
imul
jle
and
jmp
pusha
mov
cmpsl
push
test
jge
jl
ds
cmc
mov
in
jge
push
test
push
pop
in
jne
pop
mov
and
push
addr16
sbb
or
and
sbb
pop
or
out
scas
pop
test
push
mov
dec
and
sub
lahf
cmp
xchg
mov
nop
mov
out
dec
push
fstps
push
adc
sar
arpl
leave
xor
enter
adc
and
nop
jg
xchg
scas
sub
adc
loop
and
pusha
pop
in
lret
dec
ljmp
inc
popf
mov
stc
adc
push
cmc
insb
das
xchg
pop
mov
mov
or
mov
ja
xor
jae
ror
in
cmp
or
mov
cmpsl
jae
fs
jmp
lods
mov
add
inc
xor
mov
lods
or
fnsave
cmp
add
icebp
xchg
test
das
out
pop
nop
les
push
ds
mov
je
mov
imul
fcoms
push
lcall
jo
rorb
bound
pusha
mov
shrd
daa
cmp
outsb
outsl
xorb
clc
aas
rcl
cmp
fwait
out
sti
sbb
mov
pop
pop
lods
xlat
mov
adc
jle
dec
push
std
gs
hlt
and
inc
ret
daa
adc
push
testb
sub
repnz
xor
push
fldcw
loop
mov
mov
lods
lahf
insl
mov
mov
xlat
adc
popf
rcll
loope
shll
rcrl
or
clc
sub
test
jp
repnz
push
outsb
push
cli
sub
das
ljmp
call
lret
popf
push
mov
outsb
sub
outsb
mov
outsb
jb
nop
add
out
mov
pop
inc
xchg
ds
mov
mov
and
mov
mov
jnp
icebp
jle,pt
adc
mov
mov
xchg
or
sub
dec
int
mov
add
aad
lahf
dec
fsubrs
call
lock
sbb
hlt
mov
mov
mov
popf
jns
imul
ret
or
int3
jno
test
repz
adc
out
fwait
cmp
cmpsb
lods
pop
and
jl
sbb
dec
add
xlat
fbstp
push
add
sti
add
loop
leave
jp
ja
test
push
fidivrs
xchg
cmp
or
add
or
notb
jns
das
gs
jns
inc
repnz
lock
pop
mov
lods
and
pop
fmuls
sar
mov
notb
test
repz
or
notl
cwtl
push
adc
mov
loop
mov
fwait
js
loopne
xor
data16
enter
pusha
jno
loop
in
sbb
push
repnz
or
pop
or
bound
mov
jg
jmp
jl
mov
test
stos
jo
aam
mov
pop
testb
ret
shll
imul
fisttpll
pop
stos
jge
jmp
cmpsb
lcall
repnz
pop
imul
pop
dec
sahf
adc
ds
mov
xor
cwtl
orb
out
roll
inc
xlat
push
push
dec
fsub
call
outsb
imul
les
add
mov
cmp
scas
fcomps
jmp
addr16
add
vdivss
mov
les
xor
gs
mov
jnp
mov
ffree
fisttpl
lahf
pushf
daa
sbb
fcompl
test
push
fdivl
popf
inc
mov
int3
inc
mov
fbld
mov
ja
push
cmp
es
sahf
repz
lahf
xchg
les
xor
lret
lock
pop
mov
xchg
mov
clc
and
je
cwtl
dec
mov
inc
shll
inc
pop
xchg
movsl
jecxz
movsb
sarb
rcrl
lock
jp
out
cltd
sub
sub
pop
mov
mov
pop
cmpsl
shlb
in
adc
stos
mov
ss
movsl
inc
mov
push
dec
mov
mov
add
ss
mov
scas
push
cmp
subl
fdivrl
mov
je
mov
push
roll
lahf
shl
or
jmp
out
inc
cmp
add
xor
leave
xor
dec
add
loope
jmp
jmp
lret
mov
push
outsl
mov
mov
cltd
mov
push
negl
loope
sar
mov
icebp
xor
lcall
push
xlat
push
mov
add
arpl
or
jmp
daa
out
mov
les
mov
add
testb
pop
lahf
dec
jecxz
mov
sub
jmp
pop
outsb
pop
sahf
adc
lret
mov
fwait
mov
in
cmpl
mov
mov
dec
mov
cltd
aad
es
pop
ret
mov
cmpsb
push
stc
sarl
rcl
repz
lcall
mov
xchg
mov
sti
mov
jecxz
push
xchg
shlb
iret
cmpsb
pop
cs
lret
adc
jbe
push
in
into
lods
xor
lods
xlat
pop
in
mov
sub
xchg
mov
adc
xchg
add
js
sub
enter
dec
xchg
add
lea
xor
out
orb
cmpsl
mov
sub
xor
lahf
std
and
popa
pushl
sub
shll
cmp
xchg
ret
sbb
lock
mov
bound
test
sub
mov
mov
ja
push
xchg
ret
cmp
loopne
enter
push
test
push
gs
mov
f2xm1
repz
jne
mov
sub
mov
pop
outsl
lret
and
or
icebp
pop
dec
scas
mov
pop
addb
mov
inc
into
ret
mov
jmp
mov
int3
js
dec
mov
or
jmp
jns
push
xlat
cmpb
push
cs
xor
xchg
cmp
mov
test
mov
xor
and
add
ret
adc
jne
xor
push
dec
iret
mov
cmp
and
sbb
sbb
mov
push
test
or
inc
or
pop
leave
add
add
inc
rcrl
sub
icebp
push
dec
fldenv
nop
popa
dec
pop
sub
dec
mov
add
out
shl
popa
sahf
and
lret
imul
mov
push
mov
adc
dec
sbb
ret
pop
mov
mov
or
jb
into
sbb
call
loopne
arpl
adcl
sbb
mov
shrb
call
or
fisttps
push
test
sbb
nop
mulb
andl
dec
xor
inc
pop
in
orl
outsl
xorb
nop
mov
nop
cmpb
mov
mov
je
xchg
mov
xchg
nop
mov
cmc
fildl
cmp
jae
and
ja
inc
mov
pop
push
push
sbb
cli
fbld
xchg
jl
fisttps
movsb
ss
adc
fsubrl
es
in
sbb
pop
jle
and
push
scas
js
pushf
test
mov
xlat
mov
hlt
pop
dec
add
push
mov
fwait
mov
inc
push
sahf
add
cmp
jp
das
test
sti
push
sbb
xor
lods
mov
inc
icebp
loopne
fnstcw
out
inc
and
pop
loopne
movsb
fdivl
push
cmp
imul
push
outsb
mov
push
mov
jb
lods
sub
xor
mov
xchg
mov
mov
or
jbe
xlat
rorl
mov
cltd
hlt
pop
adc
js,pt
xchg
sub
mov
bound
adc
mov
mov
or
fs
es
adc
push
push
pop
rolb
push
jp
sarb
xchg
push
shll
sub
cmp
jmp
lret
sbb
in
push
inc
sub
mov
xor
adc
rcr
xchg
adc
aaa
fdivrp
add
out
cmpsl
mov
lret
mov
dec
jge
adc
call
test
mov
jp
fcmovb
pop
arpl
cld
repz
std
notb
lahf
push
sbb
push
inc
scas
push
fs
sbb
jae
orl
cmp
mov
movsl
mov
jno
ficoms
push
jmp
push
pop
mov
fsubl
mov
addb
rorl
std
aaa
in
push
ss
pop
aad
cmp
jp
pushf
cmp
ljmp
lock
mov
dec
mov
orl
pop
and
stos
out
cld
bound
mov
cmpsb
fnstsw
or
inc
icebp
movsb
mov
push
dec
fs
cmp
ret
push
add
mov
or
mov
jge
mov
test
std
xor
sbb
and
out
and
int
in
dec
je
push
repz
out
rcl
mov
aas
iret
movsb
mov
push
andb
das
mov
xor
mov
bound
or
es
and
sub
add
mov
jns
js
repz
ljmp
cmpsb
jl
push
dec
and
sar
inc
add
jb
insb
call
sahf
mov
imul
xchg
into
sahf
pop
mov
push
addl
rclb
das
adc
inc
mov
cmovne
cmp
sub
cwtl
adc
mov
dec
cmpl
repnz
mov
gs
xchg
cld
cmp
mov
sbb
mov
inc
roll
or
div
imul
pop
adc
cmp
repz
lcall
movsb
test
xor
in
mov
xchg
out
add
pop
imul
out
push
jge
fistl
inc
in
jge
outsb
xor
dec
int3
sbb
lods
out
jp
xchg
popa
sub
loop
lcall
ljmp
sbb
cmp
mov
gs
dec
js
dec
loop
mov
call
inc
lcall
int3
aaa
insl
hlt
fmull
mov
int3
push
aad
sub
jl
or
sub
inc
pop
xchg
insl
ja
jns
cmp
dec
lret
jmp
stc
scas
cmp
es
test
sbb
pop
xchg
push
incl
popa
out
mov
mov
cmpsl
mov
xor
mov
dec
and
andl
sub
imul
mov
push
xor
sti
cwtl
lahf
and
adc
jbe
data16
bound
fwait
lret
mov
xchg
or
rcrb
jecxz
mov
jno
pop
aad
das
arpl
out
ljmp
and
lds
sahf
cli
adc
jmp
out
mov
les
push
imul
or
sbb
xchg
jg
iret
add
mov
in
outsb
sahf
mov
xchg
jl
in
mov
loope
xor
imul
sbb
out
mov
mov
mov
xchg
or
dec
dec
sub
cs
aad
jmp
xlat
out
incl
daa
sbb
push
mov
out
lret
sti
mov
mov
sub
cltd
push
cld
fsts
or
repnz
shrb
sub
sgdtl
jle
pop
stos
mov
daa
cltd
scas
sbb
mov
call
sbb
push
mov
pusha
jns
mov
subl
lods
or
das
push
iret
jae
cwtl
cs
and
ds
xor
shlb
inc
out
mov
fsubp
adc
xchg
cmpsl
and
data16
lods
push
mov
repnz
pop
stos
dec
mov
insb
mov
mov
movsb
mov
cli
jmp
lods
das
mov
rcr
xchg
dec
inc
repz
dec
sarb
inc
jg
flds
outsl
and
into
pop
pusha
mov
pop
mov
push
outsb
dec
jl
in
inc
mov
mov
mov
pop
in
xchg
mov
cmp
out
xchg
and
fldt
mov
loop
mov
call
in
xor
jg
push
loop
xchg
pop
mov
test
and
fwait
sbb
or
aas
fnsave
mov
test
mov
fisttpl
movsl
adc
or
scas
arpl
leave
push
sbb
pop
sub
stos
mov
push
shrb
xor
push
bound
xor
addr16
psadbw
fcompl
pop
mov
xor
add
pop
aad
fildl
pop
leave
xlat
nop
iret
or
sahf
cmp
fadds
addr16
std
movsb
inc
inc
mov
or
xchg
icebp
adc
fwait
int3
xor
pop
adc
sub
push
mov
addb
xchg
xor
iret
jnp
imul
sahf
sbb
ljmp
imulb
add
sarl
in
xchg
sti
mov
and
add
inc
aad
into
icebp
pop
nop
out
sub
imul
ss
dec
adc
push
in
cmpb
mov
mov
mov
sub
popa
rolb
icebp
push
xchg
lahf
push
xor
xor
mov
cmp
xchg
pop
lahf
popa
out
fdivrp
sub
das
popa
lds
or
sub
aad
jns
and
add
sti
mov
or
add
iret
rorl
loopne
cmp
sbbl
fwait
mov
push
adcl
add
nop
scas
lcall
adcb
jb
lods
sub
jno
es
mov
xchg
cwtl
pop
fisubrl
int3
dec
mov
in
je
daa
add
setb
fdivs
pop
in
sub
repnz
sbb
lahf
adc
mov
jecxz
xchg
push
movsl
mov
je
mov
cmpsb
mov
lods
push
repnz
dec
or
add
pusha
sbb
dec
adc
mov
push
mov
xchg
add
push
sbb
mov
jl,pn
adc
adc
jl
test
mov
pop
sub
push
add
fdivs
aam
sbb
pop
repnz
pushf
jbe
mov
lods
pushf
fnstenv
popf
rclb
leave
push
call
jecxz
mov
fbstp
mov
aaa
lea
jge
fists
cmp
push
xor
ret
imul
and
les
jo
xor
les
push
movsb
sub
mov
xor
insb
jg
adc
push
pop
fsts
lods
jns
insb
or
mov
sub
dec
bound
add
std
push
rcl
enter
data16
daa
xlat
sub
out
push
out
cmp
mov
add
xchg
arpl
inc
push
mov
lret
loopne
add
test
xor
sub
sub
movsl
mov
sub
ss
cmp
cmp
imul
fiaddl
push
pop
repnz
add
mov
cmp
cmpb
or
cmp
and
les
lds
test
lock
add
out
lea
push
das
fsubrs
out
add
leave
or
ds
jnp
das
je
clc
mov
push
adc
or
lods
push
push
cmpsl
xchg
pop
cmp
mov
sbb
pop
arpl
sbb
dec
fdivrp
popa
mov
or
sbb
bound
inc
dec
jo
fwait
jle
mov
xchg
inc
stc
pop
inc
cmp
lahf
test
add
and
mov
sub
pop
stos
outsb
jge
loopne
fstpt
mov
pop
das
sub
inc
test
aaa
jnp
fcmovb
in
jo
ds
and
jmp
push
cmp
mov
pop
mov
pop
mov
sub
inc
cs
cmpsl
jnp
xchg
mov
sbb
jns
aaa
data16
jne
lcall
inc
stos
daa
push
mov
call
push
inc
es
les
dec
je
pop
in
adc
outsb
fisubrl
mov
arpl
dec
jg
lods
rorb
out
mov
out
insb
or
mov
cwtl
cmc
xchg
cmp
sti
adc
stos
stc
lret
fwait
in
out
addl
divb
cmc
xor
jns
mov
enter
adc
xor
jmp
imul
inc
push
std
fdivs
insb
fwait
negl
and
dec
shl
sub
addr16
dec
mov
sbb
xchg
add
dec
cmp
fwait
in
aaa
ljmp
stos
into
jb
push
xchg
jg
cmpsl
xchg
ja
add
cmpsb
xchg
pop
jg
lds
test
in
in
mov
aaa
outsl
jmp
lods
fcompl
or
xor
push
cmovl
testl
filds
add
aam
shl
sbbb
sti
imul
add
xchg
dec
xchg
pop
mov
xor
dec
or
loop
fs
cwtl
mov
gs
out
push
xchg
test
dec
or
sbb
outsl
inc
aad
dec
mov
int3
mov
push
xchg
idivl
adc
add
loop
inc
cmp
in
or
sub
sub
push
or
dec
lods
pop
xchg
call
mov
arpl
fs
mov
mov
leave
loopne
dec
movsb
shlb
repnz
mov
sub
in
movsl
sbb
lods
add
test
push
out
dec
lahf
cmpsb
dec
mov
mov
cmp
mov
dec
ret
ret
push
mov
or
lret
jge
mov
add
sub
jbe
push
outsl
jno
fs
fucom
call
or
cmp
insl
jo
sbb
push
or
repz
insb
mov
and
xchg
stc
loope
pop
subb
leave
out
jno
or
loopne
xchg
adc
or
mov
mov
jge
ds
jo
outsl
ret
and
xor
inc
pop
mov
leave
xchg
or
ret
cmp
lods
pop
push
mov
pop
cmpb
iret
dec
pushf
add
pop
ds
or
xor
xchg
mov
ror
xor
sbb
in
mov
xor
into
jae
or
clc
jnp
xor
cltd
sbb
stc
xor
repnz
dec
iret
xlat
pop
in
ds
jo
xlat
ljmp
in
andb
imul
subb
nop
subb
pop
pop
stos
sub
xor
sub
mov
scas
mov
add
movsl
push
push
xchg
pop
xor
adc
cltd
fwait
sbb
mov
scas
inc
and
mov
mov
cmc
pop
cli
cmpsl
push
cmc
sbbl
push
fdivrl
cmp
dec
pop
repz
cwtl
sarb
cmc
xchg
sbb
xor
insb
xchg
mov
or
or
scas
cwtl
inc
jecxz
push
and
scas
xchg
xor
ret
cmp
loop
push
adc
dec
cmp
sub
sti
mov
and
push
sarl
add
aad
lret
aaa
xor
mov
fidivl
testl
or
or
fiadds
and
jno
mov
cld
test
scas
std
mov
xchg
push
cwtl
stos
mov
lock
add
sbb
mov
jecxz
pushf
test
ja
pop
lds
jl
add
dec
pop
xchg
jb
push
and
stos
fnstsw
cmc
lods
pusha
pop
data16
dec
loope
xor
pop
xlat
jb
cmp
outsb
dec
mov
divb
xor
adcl
js
lcall
push
es
insl
aaa
mov
fidivrs
fs
cltd
jo
loopne
xor
stos
bound
and
das
or
mov
les
sbb
mov
cmpsb
stc
ljmp
int3
push
iret
pop
jp
push
mov
aam
mov
test
xor
mov
ss
jle
out
sub
rep
push
mov
mov
jmp
or
or
fwait
decb
or
sub
jmp
fistl
cmp
icebp
scas
mov
jge
push
es
lods
xor
dec
lods
in
es
mov
xchg
jbe
xchg
out
daa
xchg
aam
stos
add
stos
enter
jmp
pushf
push
pop
das
outsl
frstor
ret
shlb
xchg
mov
aad
stos
sbb
xchg
lret
mov
and
sarl
cbtw
mov
insl
outsl
xchg
int
in
scas
pop
cmc
pushf
or
jmp
mov
add
mov
in
dec
ljmp
mov
sti
or
xchg
cs
xor
lcall
testl
daa
lcall
push
xchg
in
xchg
ret
jl
jne
dec
lret
jmp
xchg
int3
in
mov
jmp
adc
push
pop
inc
cmp
pushl
mov
mov
stos
xlat
push
mov
and
pop
and
mov
jle
add
adc
icebp
out
inc
or
aad
jnp
out
add
and
clc
mov
test
mov
subb
dec
xchg
xor
push
xchg
cltd
xchg
lret
push
in
inc
mov
leave
fdivl
or
scas
cli
cmp
pop
ds
mov
adc
leave
sub
sbbb
mov
aam
dec
mov
push
add
fadds
pop
mov
xchg
call
rcrb
mov
jl
incb
in
inc
pop
fisubrl
sub
dec
rorl
stos
xchg
push
mov
enter
xor
or
lret
lcall
imulb
imul
pushf
sbb
sbb
stos
pop
arpl
push
and
cli
fsubr
push
push
mov
rcrb
movsl
lods
xchg
sbb
mov
inc
push
lret
add
stos
aad
jge
xchg
sub
sub
int
adcb
push
dec
or
push
mov
popa
out
loopne
aaa
in
add
lahf
ret
and
inc
inc
sti
mov
pop
test
scas
arpl
sbb
in
jo
das
push
sub
jno,pn
dec
cmp
daa
cmp
pop
push
add
jnp
je
push
pop
fildl
ret
and
xor
mov
xor
and
call
sbb
les
adc
jle
ret
add
nop
push
mov
inc
mov
dec
and
pop
movsb
bound
pushl
outsb
sub
push
push
imul
movsb
daa
add
jbe
popa
decb
inc
sub
mov
pop
mov
cmp
xor
mov
ja
dec
pop
lea
adc
fdivrs
add
insl
mov
xchg
lods
daa
sub
imul
or
jnp
jp
loop
aad
add
lods
in
hlt
addl
inc
in
test
mov
jle
inc
lods
mov
mov
mov
imul
fwait
adc
test
cmp
xchg
sbb
iret
fs
mov
mov
push
ficoms
cmc
mov
test
push
xchg
cmp
rorb
and
sub
mov
std
mov
xor
mov
addr16
mov
and
dec
nop
sti
call
sti
inc
imul
mov
aas
and
icebp
lret
sbb
mov
loopne
mov
jle
sub
push
aad
loop
iret
hlt
xor
mov
push
add
sub
mov
inc
les
xchg
cmc
pop
fdivs
inc
adc
gs
into
popa
mov
xchg
mov
dec
jl
fmul
icebp
inc
mov
mov
sub
int
jbe
pop
cmp
movsb
dec
cs
or
cmp
and
mull
pop
mov
xchg
cmp
insl
fcomip
mov
sahf
sbb
mov
xor
cmp
out
sbb
mov
and
mov
mov
dec
dec
dec
xchg
lods
out
adcb
enter
mov
ret
pushl
scas
sub
cmc
test
mov
outsl
lods
cmpb
cmp
mov
pop
nop
xor
daa
dec
mov
mov
clc
pushf
out
idivb
or
cld
cltd
adc
or
inc
int3
mov
aam
jno
loopne
sub
add
mov
bound
sub
xchg
out
rol
push
scas
inc
xor
stos
jae
in
xor
inc
sbb
fsubs
popa
orl
mov
jnp
cmp
inc
aaa
mov
cs
lea
push
sarb
jns
xor
call
or
pop
adc
ljmp
xor
cwtl
cltd
int3
jge
push
shll
popa
popf
pop
xor
std
into
mov
add
sub
je
pop
cli
push
mov
and
js
adc
push
sti
add
int
or
push
inc
out
shr
push
ret
jae
mov
push
aaa
cs
pushf
mov
fistps
mov
jg
cmp
in
int
pop
sbb
mov
add
das
es
or
aam
bound
push
hlt
sbb
inc
xor
push
out
scas
sub
cmp
rcl
push
dec
out
bound
and
sti
loope
xlat
imul
xor
loope
outsb
pop
cmc
dec
jns
xorb
or
cmp
je
loopne
cltd
imul
sub
jo
dec
xor
in
incb
rcll
add
lea
fcoml
sub
mov
sbb
mov
ret
fld
push
repz
testl
jbe
cmp
std
sub
dec
loopne
lret
sbb
push
mov
push
dec
add
in
push
xlat
flds
fsubl
cld
insl
and
les
add
cmpsb
jo
jae
in
mov
mov
mov
stc
stos
and
aad
loopne
outsb
dec
inc
xor
add
xor
lea
and
jl
jl
jnp
or
int
call
jl
xor
cmpsb
jmp
dec
gs
mov
sbb
dec
push
in
rcll
std
icebp
lret
in
push
mov
adc
inc
push
inc
mov
jl
bound
mov
lea
sub
or
mov
lret
xchg
adc
setne
xchg
xor
sti
mov
adc
aaa
lods
and
push
icebp
icebp
adc
lea
mov
cmp
sarl
inc
inc
movsb
stos
xchg
cmp
cmp
push
mov
popa
sub
pop
pop
sarb
xor
test
and
pushl
jo
dec
out
push
push
inc
test
inc
fldl
mov
scas
mov
popf
sarl
rcrb
cwtl
cltd
scas
pushf
fcmovu
and
mov
gs
jmp
mov
mov
das
stos
adc
xor
dec
xchg
cli
mov
cmc
dec
mov
pop
cmp
xchg
clc
fstl
inc
jle
inc
mov
mov
or
mov
jl
pop
aas
rcl
dec
rorb
xchg
nop
lds
cli
push
sbb
sbb
out
rclb
lcall
cli
inc
dec
jl
jno
out
icebp
or
mov
dec
mov
popa
jle
ljmp
adc
sbb
inc
xchg
out
dec
js
inc
dec
mov
sub
mov
aaa
jb
mov
pop
mov
imul
cld
ffree
add
mov
or
dec
mov
and
insb
pusha
testl
jne
lret
xchg
mov
mov
xor
subb
adcb
aam
jl
pop
bound
lea
and
popf
movsb
fucomi
adc
xor
sbb
rolb
loopne
cwtl
xor
jo
addl
pop
daa
sbb
clc
rorb
xchg
pop
xchg
enter
inc
mov
push
dec
mov
out
ficomps
mov
mov
out
sub
pop
ja
loop
sti
xchg
fidivl
xchg
jmp
push
fs
xor
in
mull
fistpl
push
and
scas
es
mov
ret
mov
or
test
inc
dec
pop
xchg
inc
shll
pop
cs
call
cli
sbb
rorl
jg
xchg
cwtl
cmp
arpl
stos
gs
pop
in
fisttps
imulb
std
nop
push
mov
sarl
scas
mov
add
fimuls
lcall
dec
push
sub
dec
xchg
xor
xchg
adc
cmp
push
adc
sub
jae
shl
xor
and
cli
or
maskmovq
negl
iret
std
andb
ror
push
pop
sbb
push
cmpsl
divl
mov
xchg
jle
jnp
sub
and
pushf
or
mov
arpl
nop
sbb
pop
mov
rorb
push
shld
aaa
jg
imul
push
js
shl
xor
inc
hlt
testl
and
jmp
out
ljmp
lahf
aam
int3
loopne
and
int3
mov
out
push
mov
push
push
adc
inc
imul
mov
loopne
aaa
xor
cmp
mov
inc
or
xor
pop
sub
pop
mov
mov
test
lcall
std
faddl
mov
jp
mov
mov
dec
jns
sub
popf
cs
pop
push
popf
xchg
aam
or
jp
xchg
cs
push
adc
or
xchg
jl
cs
adc
testl
adc
test
dec
xor
xchg
push
pushf
and
fimuls
add
adc
or
leave
test
cltd
out
mov
dec
push
leave
jbe
subb
dec
adc
xor
loop
sti
jge
dec
popa
push
repnz
lods
jmp
rcrb
and
mov
mov
cs
push
stos
sti
sbb
and
inc
cld
push
bound
jae
mov
and
inc
adc
std
xchg
jge
lea
cmp
xor
subl
lock
in
mov
mov
out
or
xorb
pop
in
sub
jl
adc
xchg
sub
xor
push
push
xchg
sub
mov
enter
ljmp
ror
jge
nop
call
bound
add
cmp
sub
inc
pop
je
lret
outsb
sbb
pusha
or
cli
ret
shrl
icebp
sub
les
ret
mov
sub
hlt
scas
jecxz
call
cmp
fldt
outsb
dec
add
lahf
out
xchg
dec
sub
aaa
inc
mov
jae
dec
adc
aas
push
decl
pusha
out
hlt
iret
xchg
repz
aam
push
out
mov
add
stc
lock
sub
dec
xchg
pop
jno
mov
inc
nop
pop
pop
jno
loopne
into
inc
inc
in
dec
lcall
jbe
imul
lods
xchg
fwait
xchg
xor
dec
call
out
pop
scas
std
mov
jno
mov
sub
mov
pusha
pop
adc
inc
das
push
cmpb
test
mov
in
jl
aam
adc
lret
and
pop
aaa
test
jmp
popa
sub
or
fidivrl
xchg
mov
subb
sbb
sbb
adc
and
outsl
or
out
in
stos
inc
pop
or
out
test
or
sbb
xorb
mov
dec
loope
js
push
lods
lock
movsb
cmp
popf
push
daa
cmp
and
and
xor
lods
xchg
sbb
mov
adc
or
lods
mull
mov
pop
fnsave
loope
sbb
sbbb
rcl
sub
aas
jns
in
push
les
pop
std
cli
imul
sarb
push
xor
push
loop
pop
shr
xchg
cwtl
pop
xchg
sarb
addr16
push
cmp
dec
addr16
leave
icebp
cmp
shlb
or
rcll
in
xchg
sub
adc
mov
rcr
push
jecxz
dec
cmp
and
dec
out
scas
icebp
lods
ds
pop
sbb
mov
dec
push
fsub
jp
push
shll
push
pop
push
in
fs
leave
ret
inc
jl
push
xchg
fwait
mov
repz
jno
sub
xchg
mov
or
and
jecxz
mov
xor
test
xorb
sbb
leave
sub
popf
xchg
xor
xor
xor
cmpl
xchg
push
xchg
fdivrl
xchg
mov
les
dec
addr16
sbb
js
sbb
clc
test
xchg
or
stos
mov
in
arpl
mov
jns
xlat
inc
jo
repz
mov
in
bound
inc
jge
push
addr16
add
jns
clc
test
insl
loope
jg
out
xchg
xchg
popa
inc
jp
test
lahf
out
fdivs
mov
addr16
sbb
pop
xor
jno
jno
mov
in
mov
pop
into
sbb
jg
hlt
or
adc
les
call
xchg
out
lods
sub
xor
fisubs
add
movsl
pop
jne
push
jnp
test
movsl
push
popf
sarl
fsubrl
rcrb
outsb
aad
cmp
mul
shrb
xchg
insb
pop
divb
lods
cmp
test
cwtl
pusha
mov
outsb
cli
mov
test
mov
xchg
dec
dec
out
xor
ds
sbb
mov
push
fcomip
lods
mov
rcr
xor
add
dec
iret
fsts
pusha
pop
ja
sbb
lods
sbb
shrb
lods
std
xchg
fildll
in
in
mov
xlat
cmp
icebp
fdivrl
adc
pop
xor
xor
pop
push
call
mov
dec
es
jge
sbb
dec
cmpsb
es
push
dec
dec
push
pushf
inc
les
jl
insb
cmp
cwtl
outsb
dec
add
shl
dec
cwtl
xor
xchg
adc
sbb
lods
idiv
push
lcall
dec
mov
lods
sbb
lret
add
dec
push
push
xchg
push
add
push
or
jmp
jecxz
popa
push
test
in
mul
mull
repnz
mov
jb
pop
pop
testl
inc
ss
ret
cmp
add
push
mov
dec
push
ja
into
int
push
pop
mov
popf
mov
mov
xlat
mov
test
mov
inc
test
cmp
insl
insb
push
shrl
cmpsl
js
mov
jmp
mov
cmpb
and
dec
dec
and
out
add
lock
or
arpl
sti
in
sbb
push
mov
stos
dec
and
scas
jae
cmp
lea
xor
gs
mov
inc
xor
mov
cmc
sbb
mov
mov
mov
push
mov
and
jge
and
in
adc
dec
jmp
daa
jg
nop
push
adc
andl
jge
push
push
pop
cmp
mov
push
into
loop
mov
adc
dec
addr16
jbe
ss
mov
sbb
out
pop
pushf
pop
out
ljmp
mov
aam
mov
mov
mov
sub
mov
lret
or
sbb
testb
fwait
cmp
outsb
pop
mov
mov
lods
fimuls
repz
sub
fcoms
cli
fmulp
jmp
ficoml
pop
repnz
jb
scas
lcall
pop
imul
pop
mov
mov
sbb
pop
sbb
mov
in
ds
push
or
push
adc
sub
mov
out
js
fdivr
push
inc
xchg
add
mov
cwtl
int3
cmp
xor
les
loopne
cs
dec
and
jg
int
fstl
cltd
adc
movsb
or
mov
test
sub
repz
enter
gs
rcrb
xchg
pusha
cmp
jbe
add
in
mov
mov
call
jg
pusha
and
fcoms
ds
fcmovnb
push
sti
mov
fnsetpm(287
mov
into
aam
cmp
repnz
shrb
or
pusha
xor
aam
aam
cmp
adc
adc
inc
out
jae
sub
movsb
stos
stos
push
xchg
into
mov
jns
in
icebp
bound
pop
pop
fildl
cmp
in
inc
jecxz
inc
out
xor
inc
xor
or
and
fs
xor
adc
adc
fcmovnu
mov
mov
jae
and
pop
add
xor
insb
add
and
jmp
insb
mov
pop
test
movb
shlb
das
sbb
sbb
adc
test
pushf
int
pop
fucomi
mov
push
fwait
dec
push
loop
push
rcr
add
inc
ljmp
mov
xchg
mov
adc
mov
mov
add
cwtl
ret
decb
sub
fmuls
xor
mov
dec
xchg
dec
dec
call
or
loopne
unpckhps
aaa
cmp
add
mov
inc
aas
xor
int3
inc
gs
cli
popl
lock
or
ret
out
sub
mov
mov
dec
rcrl
stc
arpl
sbb
jmp
mov
int3
cwtl
sbb
adc
sahf
xor
xchg
push
xor
jge
jne
out
add
add
je
mov
test
cmpsb
inc
loop
and
fisttpl
and
imul
in
stos
nop
fstp
out
push
xchg
cmpb
mov
push
cltd
xchg
cmp
movsl
sbb
pop
notl
test
add
cld
push
cmc
insb
mov
xor
mov
out
insl
bound
add
and
dec
mov
xchg
dec
or
rorl
add
xchg
aaa
mov
push
fmul
ds
mov
or
mov
cmp
loop
jo
cmp
xor
mov
aas
pop
jge
jae,pn
shll
mov
mov
jo
jno
enter
rcl
mov
rcll
icebp
jmp
xchg
mov
jmp
lret
ffreep
in
nop
shrb
jae
int
popf
dec
and
dec
ss
xchg
fistpl
loope
xor
sbb
sub
cmc
shll
jnp
aam
data16
mov
mov
lods
push
out
sahf
stos
xlat
cli
movsb
mov
rorl
push
and
and
or
sub
xchg
mov
pop
mov
ja
int
iret
lea
test
fisubrs
cmp
nop
or
adc
in
bound
mov
xor
sub
xchg
jp
sub
push
dec
inc
mov
xorb
movsl
xchg
mov
cwtl
and
xor
pop
addr16
mov
das
lret
mov
hlt
outsb
cwtl
and
sbb
pop
cwtl
outsl
js
mov
dec
jecxz
adc
sub
test
shrl
aam
aaa
fbstp
jl
dec
inc
inc
lret
jb
push
xor
adc
movsl
or
movsb
in
iret
icebp
or
test
sub
cmc
dec
dec
out
pop
repnz
dec
scas
or
adc
in
inc
xchg
mov
mov
popf
clc
dec
sub
sbb
sub
mov
cmp
push
mov
and
mov
fxam
push
inc
mov
cmp
je
and
insl
movsb
int3
push
lods
int3
cmc
dec
xor
rcll
ret
mov
mov
pop
ret
stos
popa
dec
divb
xor
mov
or
lret
pop
cmp
fildl
gs
cmp
outsl
or
in
mov
xrelease
cwtl
int3
jmp
cmpsb
jmp
push
and
inc
fpatan
mov
test
dec
pop
dec
arpl
adc
xor
repnz
jecxz
fildll
test
mov
lea
mov
sub
loope
mov
lods
xchg
add
xchg
nop
mov
pushf
jmp
stos
dec
mull
lods
fnsave
jnp
leave
xlat
mov
je
cmp
mov
pushf
testb
dec
cmpsb
cmc
cld
ja
lods
jl
mov
push
jnp
stc
xchg
dec
mov
jbe
addr16
out
dec
fwait
mulb
dec
mov
mov
rcrl
daa
pop
pushf
jmp
cli
clc
cmpsl
xor
push
or
xor
out
mov
dec
enter
inc
and
loop
std
repz
test
jp
scas
and
cs
shl
addl
pop
xchg
nopl
out
in
jbe
xchg
mov
int
add
enter
sarb
inc
leave
dec
mov
test
or
mov
pop
in
sbb
shl
fs
jns
jno
sbb
lock
or
aas
jecxz
fwait
push
pop
test
sbb
mov
pop
mov
les
movsl
repnz
mov
test
pop
adc
stos
jmp
inc
cmp
sti
jnp
or
ret
xor
mov
fldcw
push
fisubrl
push
push
push
mov
repnz
xchg
ss
cmp
fiadds
adc
int3
popf
jl
cmc
pop
stc
sub
cmp
test
mov
dec
pop
add
pusha
out
pushf
cli
mov
nop
or
xor
and
mov
and
mov
ret
rorb
aad
push
push
sub
mov
out
lcall
jns
jo
mov
repz
and
cmp
int
jmp
repz
scas
pop
test
xor
and
addr16
pop
mov
aad
pusha
inc
rcr
dec
pop
cmp
or
fcmovbe
mov
fsubs
xor
ljmp
ret
add
sub
imul
and
arpl
push
mov
sarb
test
insl
ja
ljmp
and
rcr
mov
subb
in
cs
or
adc
aas
sub
out
ret
sbb
into
cmp
ljmp
xchg
jns
cld
mov
popf
cld
into
into
fsts
lock
jb
leave
dec
xchg
pop
repnz
push
pop
adc
mov
addr16
add
mov
inc
xchg
mov
pusha
mov
mov
push
neg
mov
iret
movsl
and
mov
sbb
mov
loope
ljmp
pushl
mov
mov
ljmp
es
add
pop
lds
mov
je
int3
hlt
cmp
mov
or
inc
cli
bswap
ss
add
xchg
pop
add
dec
pop
mull
mov
lret
add
fdivr
sbb
fdivr
sahf
shl
sub
movsb
mov
fucomi
sbb
scas
sbbl
sub
sahf
scas
jecxz
push
mov
mov
fsts
test
imul
sbb
aam
addl
ja
fwait
lds
aam
mov
mov
jl
add
xchg
and
mov
mul
aad
mov
adc
mov
pop
mov
xchg
frstor
int
xchg
test
mov
mulb
pop
stc
add
out
adc
je
aad
lahf
push
push
mov
jp
pop
xchg
mov
shlb
jb
jno
enter
inc
jbe
clc
push
sbb
adc
cmpsl
int
mov
hlt
mov
inc
sbb
mov
test
out
test
cmp
inc
rcr
push
dec
xchg
scas
push
int
sbbl
scas
cmp
callw
inc
movsb
addr16
int3
cmp
hlt
subb
fidivs
push
incl
das
lods
cli
test
mov
cmpl
iret
mov
aam
movsb
jns
addr16
stos
imul
fwait
popa
dec
stc
or
in
gs
lds
testb
adc
pop
mov
test
out
dec
ljmp
and
cmp
xor
addb
adc
out
hlt
add
data16
cmp
xchg
jae
push
inc
test
rcll
and
out
dec
cmp
inc
fs
insl
mulb
cmpsb
aas
and
mov
sub
loope
sub
add
and
sub
in
xchg
jp
jbe
data16
enter
mov
cld
jnp
cmpl
jmp
xchg
ficoml
xor
adc
aam
loopne
shll
nop
imul
mov
lock
stos
sbb
mov
xor
lods
test
or
jecxz
jo
lds
pop
dec
shr
jbe
testl
xchg
icebp
add
icebp
leave
sub
sbb
jno
mov
xchg
adc
jp
lahf
adc
cmp
lret
inc
push
mov
jmp
rcll
in
jp
in
test
mov
mov
mov
cmp
in
push
push
repnz
add
fsubp
inc
adc
std
cmp
xchg
rol
sbb
aad
lods
dec
mov
sbb
jmp
pushf
test
addr16
inc
or
mov
pop
test
jbe
sub
jb
xchg
insb
lods
test
clc
cwtl
jns
in
adc
cld
and
int3
adc
sub
jbe
in
jge
outsl
lds
in
inc
subb
hlt
sbb
fwait
push
jg
jb
mov
pushf
jns
test
sbb
scas
je
int
xor
aas
out
xor
sbb
repz
jb
addr16
stos
js
cmp
jmp
faddl
mov
pop
xchg
pop
mov
dec
jb
xor
stos
mov
or
clc
sbb
dec
cli
mov
and
mov
cmpsl
aas
mov
mov
inc
in
pop
mov
imul
pop
inc
sbb
push
jb
stos
xchg
aam
and
xor
inc
dec
xchg
pop
sbb
loop
data16
or
movsl
cmp
hlt
sub
das
js
add
jg
mov
jae
in
and
mov
clc
dec
push
fwait
lahf
sub
or
or
sbb
in
push
call
rolb
and
into
jge
inc
movsl
lret
daa
add
adcb
add
loop
mov
jb
mov
pop
add
xchg
mov
ret
cmpb
push
lcall
test
rorl
xor
cltd
lods
mov
push
mov
dec
cmp
pop
mov
lcall
sbb
push
dec
inc
push
cwtl
or
dec
mov
data16
shrl
lret
push
inc
jno
mov
and
xchg
pop
cmp
push
adc
scas
enter
ss
movsl
xor
fsts
and
push
ja
mov
les
push
std
cmp
mov
push
add
mov
xchg
mov
daa
jno
xor
push
pop
or
xlat
push
sahf
popf
push
fisubrl
or
xchg
dec
add
adc
pushf
push
xor
inc
in
add
sbb
pop
ds
mov
ficomps
mov
and
cwtl
lret
std
sub
and
adc
repnz
mov
xchg
mov
out
test
mov
xchg
push
faddl
and
fwait
fsub
call
cltd
js
push
push
sub
mov
and
aam
rorb
mov
bound
and
test
fidivrl
push
loop
fsubrs
sub
lcall
and
enter
das
push
push
push
repz
xchg
cmpsl
push
xorb
or
sbb
mov
nop
dec
fldl
call
shlb
movsl
ds
pop
cwtl
outsl
push
sub
pop
mov
sahf
lret
jle
leave
insb
cltd
and
dec
sbb
and
mov
dec
jl
jmp
jecxz
in
pusha
mov
loope
push
lcall
xchg
adc
or
dec
and
or
sbb
push
out
std
jns
bound
leave
xchg
fwait
imul
mov
out
daa
lret
pop
fwait
push
mov
jo
dec
inc
xor
icebp
mov
xor
daa
test
lock
inc
cmpsb
ret
test
cmp
jge
pop
cmp
shll
cltd
sbb
nop
std
or
sti
icebp
and
xchg
push
lahf
fistpl
mov
dec
out
fs
xor
test
mov
xor
cmp
ret
pushf
sbb
mov
mov
cmp
mov
cmpsb
adc
popa
dec
add
adc
mov
insb
std
jl
mov
pop
mov
stos
outsb
jmp
shlb
jns
loop
sbb
shl
shlb
mov
clc
dec
aam
jge
pushw
mov
enter
pop
mov
bound
mov
cltd
fnstenv
push
aam
xchg
push
call
and
jbe
fnstenv
stos
add
notl
cs
adc
mov
fistps
mov
add
mov
movsb
xor
push
clc
inc
jmp
dec
mov
shll
addb
push
dec
fstl
dec
mov
repnz
jl
mov
fldt
or
aad
mov
cmpsl
adc
rcrb
insl
cli
sub
sbb
jle
or
fistl
les
ret
pop
or
insb
aaa
or
mov
pushf
out
sbb
mov
mull
leave
mulb
mov
xchg
fnsave
int3
jge
lds
pushf
icebp
fldln2
ds
lret
sub
aas
ret
xchg
push
inc
jbe
jae
jecxz
and
pop
and
jo
lea
ss
and
pop
jnp
push
mov
ljmp
pop
mov
mov
and
decb
ficompl
mov
test
xchg
fs
negl
sub
out
dec
xor
inc
data16
xchg
lahf
mov
adc
and
popf
mov
lcall
sbb
mov
sarl
repnz
push
mov
bound
icebp
scas
xor
dec
enter
fcoml
test
mov
xor
dec
cmpsb
roll
scas
dec
js
add
js
imul
add
push
in
clc
pushf
icebp
lcall
movsb
jns
sub
jge
mov
jg
sbb
das
push
and
pop
rcrb
adc
hlt
mov
xchg
sub
dec
notb
popf
gs
xchg
adc
movsl
push
fwait
xchg
gs
sahf
shrl
push
pop
xchg
xor
repz
sbb
and
aas
test
in
inc
push
and
pop
nop
sbb
xchg
xor
es
mov
jg
shlb
cmc
pop
leave
insl
mov
test
jmp
cmpsb
in
stc
outsb
or
popf
scas
jnp
add
test
in
mov
jno
xchg
push
add
push
das
test
cmc
jo
fdivs
mov
aas
push
daa
iret
lods
mov
jne
dec
loopne
imul
add
dec
outsb
or
and
jbe
push
sbb
sbb
in
mov
mov
pop
sbb
outsb
push
push
xor
push
inc
pop
loopne
lods
stc
mov
popf
rclb
fimuls
out
cli
lea
jb
testb
jo
test
fwait
xchg
ds
lods
jbe
jbe
mov
repz
add
mov
mov
icebp
icebp
mov
ffreep
aaa
adc
ja
jecxz
repnz
dec
nop
sbb
jae
dec
jns
xchg
repnz
movsl
mov
inc
mov
sarl
scas
pop
call
pop
pushf
or
insb
mov
sti
loope
icebp
mov
aas
sbb
idivl
out
sbb
mov
pop
cmp
sarb
clc
ljmp
ret
xchg
stos
jne
push
xor
fldenv
push
or
push
jae
lds
stos
lds
mov
cs
outsb
inc
inc
xlat
or
push
daa
xchg
icebp
jg
inc
xor
movq
ficompl
or
ljmp
testb
out
sbb
shlb
stos
jb
fst
dec
sub
cltd
cli
cltd
mov
arpl
xor
jmp
mov
mov
clc
dec
jbe
cmp
cwtl
test
in
cmpsb
jns
mov
xchg
lea
sub
pop
pop
mov
inc
cltd
call
pusha
repz
in
sub
ljmp
scas
data16
arpl
mov
fs
loop
xchg
mov
mov
adc
lea
aas
mov
clc
retw
scas
mov
mov
adc
sbb
mov
clc
push
pop
fsubrl
leave
into
lock
pushf
and
mov
mov
daa
pusha
xor
test
push
or
shlb
mov
and
fistpl
adc
xor
ffreep
add
jmp
push
xor
movsb
jbe
inc
das
mov
and
jg
and
into
xchg
cmp
inc
rcr
pop
movsl
adc
decl
mov
add
jge
xor
sbb
mov
sbb
jmp
sbb
lcall
jnp
or
fisttpl
push
insb
fldcw
mov
fimuls
in
addl
xchg
add
imul
mov
js
inc
or
pop
iret
aas
and
mov
lods
cmp
add
neg
sti
insl
add
dec
ja
inc
mov
fwait
xor
push
neg
pushf
cltd
cmpsb
add
incb
test
sub
aas
in
pop
in
pop
loope
inc
or
or
mov
int
xchg
pop
int
mov
sti
shrb
pop
lock
mov
xchg
jbe
sub
cmp
xor
mov
mov
into
dec
xchg
adc
stos
bound
mov
jmp
mov
ret
jp
std
ss
mov
mov
cmpsb
push
mov
ds
hlt
add
daa
aam
es
or
aam
test
test
mov
scas
xchg
mov
inc
mov
dec
cmpsl
rcr
lcall
mov
lods
ja
ret
jbe
aaa
or
jmp
int3
pusha
test
jo
xchg
cmp
cmpsl
sahf
jns
push
push
aam
dec
xor
cmc
nop
mov
rcl
lahf
push
fmuls
int3
jecxz
loope
or
xchg
lret
push
loope
xchg
lret
lea
push
adc
cld
xor
lret
and
or
jnp
sahf
cmpsb
push
lret
icebp
lock
dec
jg
dec
pop
cmp
mov
out
or
pop
lea
xchg
popa
aam
jl
sahf
stos
mov
rorl
fsubl
dec
cmpsl
push
or
sub
scas
lahf
jne
adc
xor
push
push
faddl
sbb
test
mov
scas
mov
cli
jp
and
push
inc
jge
mov
icebp
jg
imul
adc
jno
pop
push
je
xrelease
test
les
sub
pop
xchg
lahf
mov
pop
push
popa
add
lcall
scas
xchg
cwtl
pop
insl
dec
inc
lock
inc
jle
jge
xchg
add
jnp
loopne
sbb
pop
sbb
lods
into
test
outsb
and
loope
mov
xor
insl
nop
add
js
inc
jecxz
push
push
out
shll
enter
sti
mov
insl
sub
shl
add
aad
cmp
jecxz
xchg
mov
jl
pop
repz
push
xor
add
sub
mov
int
imul
aad
cmc
fldlg2
jg
push
sub
cmc
js
insb
sbb
pop
adc
cmp
sub
dec
fucomip
loop
push
jno
sub
xor
jae
sbb
addr16
fnstenv
and
xchg
push
dec
or
js
test
stos
cli
stos
adc
loopne
jle
int3
repz
xchg
jae
cli
push
cmc
movsl
xor
cld
add
mov
adc
mov
js
lahf
fstpt
xchg
pop
out
jmp
outsl
mov
jae
jno
xchg
adc
aam
xor
movsl
call
scas
pusha
ss
arpl
lahf
and
in
repz
mov
dec
into
mov
sbb
and
stos
sbb
roll
ss
nop
mov
test
mov
pushf
aad
mov
lahf
lahf
dec
insb
fbld
hlt
rcrl
test
call
push
je
pop
sti
arpl
mov
pop
mov
cmpsb
mov
jg
int
iret
add
popf
lcall
or
xchg
ss
mov
mov
add
fidivrl
cmpsl
mov
mov
sahf
dec
iret
inc
adc
jo
push
inc
xchg
cmp
and
adc
lea
mov
or
mov
add
mov
lcall
sbb
stos
gs
dec
xchg
mov
push
icebp
push
jmp
sub
xor
notb
push
outsl
sbb
sbb
xor
aad
out
ds
mov
adc
xor
lds
fimull
sarl
push
xor
or
fistl
addr16
sub
xchg
test
fucomp
push
mov
sbb
ljmp
sbb
loope
in
jno
sbb
out
and
mov
out
xor
scas
dec
data16
insb
out
and
stos
pop
rcrl
push
jns
jecxz
pop
loope
aas
das
lds
fwait
test
js
loop
or
pushl
js
jle
push
jo
nop
or
xchg
lret
push
and
push
enter
loopne
mov
int3
jmp
push
negl
cli
sub
pop
push
xchg
pop
dec
add
test
jmp
add
dec
dec
and
rcr
mov
mov
push
add
or
dec
imul
imul
sub
shl
int
je
xor
push
scas
enter
dec
sbb
aam
mov
mov
pop
rolb
cmp
scas
xor
fwait
mov
xchg
jle
call
cld
nop
loop
xor
push
fs
or
or
and
fbstp
in
ljmp
adc
dec
arpl
lcall
test
cwtl
xor
lret
or
cmc
pop
cmpsb
or
and
sbb
xchg
dec
xchg
sarl
nop
push
imul
adc
or
int
fsubl
ja
xchg
sbb
pop
cmp
xor
add
lret
pop
out
movsl
in
in
rcl
roll
testl
repz
iret
xorb
inc
mov
jg
cmpsb
faddl
lahf
in
mov
in
add
ret
dec
inc
jb
insl
add
jno
js
cmp
add
test
jnp
mov
test
push
adc
dec
insb
iret
cmp
add
mov
inc
out
clc
ror
jg
jge
out
pop
test
stc
cmp
xor
jp
pop
dec
roll
add
lods
push
push
pop
fisttpll
repnz
sbb
nop
std
cwtl
jno
and
add
rclb
mov
int
and
stc
push
hlt
bound
loopne
loopne
rcrl
mov
xor
ja
adc
and
shrb
dec
ljmp
mov
or
pop
lods
sbb
shll
sbb
sub
pop
dec
mov
fldcw
mov
jnp
mov
stos
push
xchg
sub
adc
and
je
loopne
mov
lds
sub
dec
pop
or
out
mov
pusha
cmp
adc
cmc
lret
cmp
jle
or
call
sar
popf
xor
xor
repz
mov
or
movsb
dec
xor
or
loop
imul
call
test
loope
push
or
hlt
add
test
cmp
int3
fninit
rorl
int
int
mov
cmp
mov
es
jno
jb
push
adc
add
mov
testl
cmp
out
mov
push
or
push
add
enter
xchg
les
mov
insl
mov
pop
popf
cs
daa
out
test
jnp
std
xchg
inc
divl
pop
daa
mov
fcoml
pop
pop
lcall
mov
rclb
push
dec
dec
pop
fsubs
add
pop
and
inc
aad
push
fldenv
xchg
and
sbb
int
rcrb
test
dec
sub
out
ljmp
std
pop
stos
fisubs
jg
je
add
mov
lock
mov
jmp
aaa
mov
aas
xor
jg
pop
or
sbb
xor
dec
icebp
addr16
xor
jb
lods
hlt
add
jo
sub
xchg
sbb
or
push
lret
adc
outsb
mov
jecxz
subb
mov
mov
fdivrs
int
int
pop
or
je
inc
and
outsl
leave
pushf
mov
dec
pushf
dec
insl
dec
std
cmp
gs
adc
and
call
pop
mov
xor
out
mov
push
rcl
lods
jl
repnz
ja
push
sti
dec
mov
adc
mov
ret
adc
lods
and
lods
lods
pop
push
das
hlt
rcrl
sbb
adc
mov
stos
aas
outsb
mov
aaa
mov
sub
or
push
lret
cmpsl
jno
xor
dec
jae
inc
daa
std
xor
mov
mov
lds
cmp
mov
push
in
cwtl
xchg
sub
inc
inc
movsl
div
or
mov
and
push
cmp
add
icebp
adcb
popf
repnz
and
sub
pop
or
xor
mov
cmp
adc
xchg
bts
dec
mov
gs
pop
xor
push
xor
sarb
mov
mov
or
xor
sti
into
lahf
roll
push
sub
mov
cmpsl
mov
js
daa
jle
addr16
daa
jae
sbb
test
push
outsl
loope
inc
mov
fwait
test
and
rcll
ficomps
xchg
push
pop
add
lods
sub
xchg
inc
sbb
outsl
das
inc
jge
push
pop
and
dec
and
inc
je
lds
xor
mov
addr16
hlt
mov
push
shlb
std
push
xchg
or
cmp
cmp
push
pushl
cmp
push
jmp
in
cld
pop
stc
cwtl
pop
xchg
call
jne
mov
repnz
pop
or
sbb
mov
shl
lea
mov
dec
dec
addb
mov
mov
shrl
aam
sub
mov
mov
and
xchg
jecxz
xchg
scas
ret
in
movsl
data16
xchg
adc
jae
call
rcl
mov
aas
jl
out
ljmp
inc
jo
and
std
faddp
push
clc
out
mov
dec
inc
pop
mov
jp
and
dec
adc
xorl
fdivrl
jmp
fwait
pop
lret
call
adc
repnz
ljmp
push
cmp
inc
push
imul
pop
xchg
lds
cmpsl
inc
ret
lahf
lea
add
sub
mov
sbb
push
push
add
dec
jnp
sbb
mov
dec
push
lahf
push
cmp
lret
scas
cmp
inc
mov
xor
testb
dec
int3
pop
adc
out
inc
xchg
ret
push
sub
mov
add
test
pop
cmc
outsb
mov
or
dec
sub
addr16
adc
xor
arpl
jmp
mov
xchg
jb
adc
dec
pop
mov
inc
sbb
mov
mov
test
orl
pop
sub
out
imulb
and
ljmp
jmp
pushf
lods
cs
mov
cmp
aas
imul
testl
and
pusha
outsb
and
inc
adc
cld
sbb
ret
iret
fisubs
inc
mov
add
test
ljmp
lods
and
mov
mov
data16
sub
imul
imul
jno
in
lahf
jno
jp
and
leave
in
fidivrl
mov
xchg
aad
sarl
pop
cmp
mov
in
repnz
adc
xor
out
jae
negl
push
mov
xchg
rolb
insl
cmpsb
mov
sub
mov
packssdw
in
test
jns
xlat
mov
mov
das
nop
cmpsb
jg
ret
mov
dec
push
xchg
sbb
xchg
call
or
inc
and
sbb
mov
mov
loop
insb
repnz
xchg
cmovae
dec
pop
cmp
fisttpll
gs
cmp
push
in
test
nop
repnz
clc
frstor
outsl
call
pushf
incb
cmc
and
dec
sbb
jl
cmp
je
lea
sti
das
ljmp
pop
jge
sbb
leave
xchg
leave
and
sbb
les
fistpll
mov
movl
stc
es
xchg
jp
mov
aam
or
and
jg
push
pop
sbb
loope
loopne
xchg
cmp
pop
xor
pop
adc
test
pop
fcomi
idivl
mov
add
ret
imul
xor
aas
sub
sub
xchg
shll
loop
lock
ds
inc
xor
or
or
pop
enter
cmp
jno
rorb
and
lea
push
fbstp
sub
mov
push
dec
inc
iret
cmp
outsl
sub
dec
dec
inc
pop
ror
ror
cli
imul
inc
ret
sub
bound
add
cmp
mov
lahf
in
out
js
aaa
sbbb
pop
mov
mov
push
cmpsl
stos
popa
jg
mov
xor
xchg
scas
mov
faddl
xchg
les
or
hlt
out
jnp
daa
les
js
aam
pop
in
xchg
pop
push
push
jne
orb
aaa
xor
add
stos
push
pop
inc
out
adc
ja
fsubrs
jg
movsb
cmp
dec
and
pop
dec
je
aas
dec
dec
and
lds
lea
push
xor
mov
nop
xor
or
test
lods
adc
jnp
jecxz
clc
sarb
xchg
xor
shlb
loopne
out
fdivrp
je
loop
adc
jnp
push
clc
rclb
lods
loope
cli
xchg
mov
into
fldenv
inc
sti
je
and
push
sarb
dec
test
mov
notl
pop
xchg
and
add
xchg
sbb
je
aaa
or
aas
scas
clc
jo
sbb
jle
jecxz
stos
mov
lods
or
xchg
enter
loope
or
pusha
pop
push
aam
pop
jp
push
repz
ret
mov
adc
pop
xchg
push
jbe
mov
mov
xchg
add
sarb
clc
push
jmp
je
testl
pop
mov
cmpb
insb
out
mov
xor
lret
cli
mov
iret
and
cmpsl
lret
inc
jnp
mov
jecxz
push
shl
push
stc
mov
add
imul
outsb
es
inc
pop
stos
and
jl
in
inc
pop
daa
adc
push
out
ret
and
add
sahf
adc
inc
mov
mov
mov
pop
fdivrp
js
xchg
xor
int3
lahf
xchg
mov
xchg
andb
lret
dec
or
jmp
fadds
aaa
imul
shlb
test
pop
or
out
in
daa
push
gs
dec
or
push
mov
push
mov
mov
ret
dec
int
aad
ja
leave
mov
add
outsl
jb
mov
xor
or
lcall
out
mov
push
lea
mov
mov
cmp
insl
adc
pop
xchg
test
jne
test
cmp
punpckldq
mov
frndint
mov
dec
int
jo
xor
xor
lret
shrb
lds
xor
lea
jg
push
lds
inc
push
dec
test
push
add
mov
push
lock
jge
aam
inc
adc
xor
or
stc
add
jae
cli
scas
add
lds
adc
in
pop
sarl
adc
push
xchg
push
pop
cmp
and
mov
iret
stc
jb
out
jge
lret
mov
cld
jecxz
test
and
aaa
pushf
fs
pop
nop
mov
mov
out
dec
jnp
lds
push
pop
inc
fucomip
out
int3
daa
add
lcall
xor
push
adc
les
push
stos
push
jg
or
push
lahf
out
mov
jg
mov
je
push
dec
xor
cmp
les
jno
lea
jns
mov
jns
jge
and
jle
sbb
push
lcall
ds
cmpsl
insl
xchg
pop
push
aam
and
jmp
push
push
add
xor
pusha
arpl
fidivrl
jle
xchg
hlt
ffree
repz
dec
mov
inc
push
jns
jns
fwait
push
sub
fisttps
cs
xchg
loop
sub
lock
jb
and
dec
and
mov
push
rorb
loop
push
inc
jl
cmp
mov
rcll
fs
sub
mov
icebp
jns
jnp
xchg
in
mov
mov
sahf
cltd
out
sarl
or
es
ja
ja
add
inc
pushf
or
jns
pusha
fs
lret
inc
popa
jp
das
mov
xor
mov
pop
cmp
out
call
scas
lret
sti
les
arpl
sbb
arpl
dec
repz
mov
push
nop
push
push
movsb
andb
lock
push
dec
sub
mov
cmp
ret
clc
inc
or
mov
clc
xor
cltd
test
cwtl
punpckldq
in
shl
repnz
xchg
pusha
shll
fistpll
fnstenv
inc
adc
lods
iret
push
sbb
mov
pop
test
push
sub
das
shll
mov
push
dec
mov
cli
shll
lret
jle
sbb
lret
xchg
ret
mov
dec
adc
pushf
pop
inc
jg
repnz
shl
cmc
sbb
push
mov
test
mov
iret
movsl
add
jnp
jne
cs
fs
negb
stos
test
jno
cmc
jl
dec
imul
hlt
xlat
stc
jne
mov
mov
ss
out
scas
lret
xor
pushf
shrl
enter
add
movntps
inc
mov
std
ret
and
test
adc
mov
mov
in
loope
fsubr
dec
lods
aas
popf
xchg
xor
mov
xor
sbb
bound
mov
jge
pop
fisubl
sbb
ds
cmp
xchg
inc
cmpb
aaa
ja
jl
roll
pop
daa
pop
ds
ljmp
cld
add
cmpsb
inc
add
pushw
es
fs
or
sbb
and
xlat
mul
jl
nop
push
cmp
aam
pop
cli
popf
cwtl
mov
das
ss
push
hlt
aas
cmp
mov
push
and
loop
leave
dec
mov
pop
inc
xchg
lret
mov
std
pop
dec
jbe
pop
fadd
mov
dec
cmp
inc
subb
mov
addr16
mov
insl
addl
inc
call
outsb
cmpsl
repz
cltd
xchg
nop
or
int3
inc
std
pop
and
loope
dec
out
leave
jae
cmp
repnz
es
das
insb
daa
add
fs
mov
gs
in
loop
test
pop
cmpsb
sbb
mov
fmull
scas
inc
mov
mov
push
subl
xchg
dec
mov
xchg
incb
negb
in
nop
cli
mov
pusha
push
mov
mov
shl
scas
leave
push
mov
xchg
sbb
adc
iret
add
cmp
mov
adc
je
mov
mov
hlt
inc
in
or
push
cmp
push
insl
push
cmp
addl
pop
xor
mov
cmp
icebp
jb
test
jl
test
out
push
sbb
push
mov
in
and
ret
adc
mov
stc
leave
push
leave
hlt
dec
sbb
and
icebp
cmpsl
xchg
pop
push
mov
push
sbb
adc
into
or
xchg
and
mov
inc
out
les
aas
je
xchg
lcall
cmp
and
imul
inc
mov
popf
int3
mov
lea
mov
jo
pop
cmp
in
in
mov
ds
cmp
or
test
mov
shr
sbb
jo
fwait
dec
and
pusha
aas
sub
aam
js
mov
jge
test
push
into
lahf
mov
data16
pop
ret
cs
xor
sahf
sub
lret
daa
sbb
lret
mov
and
sbb
ret
sub
shr
imul
insb
ret
scas
mov
add
pop
mov
add
lods
mov
insb
aas
loope
pop
sub
push
push
jp
fdivl
xchg
int
out
xchg
xor
shlb
in
lock
pushf
nop
rolb
repnz
sub
and
out
mov
pop
mov
fcoms
fiaddl
repz
pop
lock
mov
xor
mov
adc
inc
aad
jnp
cmc
nop
push
nop
inc
inc
and
ret
jno
push
out
lds
push
icebp
pop
mov
jae
es
out
pop
jmp
sub
inc
ja
stos
shlb
test
lock
pop
add
rorb
mov
call
mov
pop
sub
pushf
icebp
cmp
or
cltd
jno
xchg
lds
cmpsl
ds
bound
push
into
test
out
gs
xor
dec
cmpsb
xchg
xchg
adc
popa
inc
push
lahf
ja
mov
or
xor
iret
inc
sbb
jle
inc
mov
adc
fwait
addr16
gs
icebp
or
shll
ret
shlb
lock
adc
das
xchg
lcall
fstps
or
jo
dec
add
fwait
ljmp
jg
pushf
cmc
xchg
inc
and
sbb
mov
lahf
push
or
popa
jo
mov
in
lds
sbb
xchg
jecxz
pop
stos
mov
out
cmp
mov
stos
dec
push
insb
jne
mov
clc
or
mov
movb
cli
hlt
je
push
mov
in
push
stos
shlb
sti
or
push
stos
popa
outsl
adc
out
cltd
js
lds
sbb
ljmp
xchg
js
pop
arpl
fs
ficoml
sub
sub
mov
add
fsubrl
scas
je
movsb
inc
cmp
ret
cltd
sti
lock
lds
adcl
nop
add
mov
push
mov
pop
dec
inc
nop
test
int
fmuls
out
cmp
mov
add
mov
add
idivb
out
stc
inc
je
ds
enter
ret
sbb
sbb
lea
out
sub
xlat
adc
std
inc
inc
pop
and
js
popf
je
shll
jle
push
xchg
addr16
faddl
mov
addl
push
push
rcll
pop
outsl
jbe
adc
dec
out
ljmp
and
fwait
dec
and
jg
dec
out
push
in
aaa
pop
xor
xor
mov
push
icebp
lcall
jmp
rcr
dec
jnp
push
jno
in
jns
sbb
cmpsb
xchg
xor
adc
mov
mov
push
and
pusha
pop
push
lds
repnz
bound
mov
xchg
xchg
cwtd
outsb
and
mov
testb
jae
cmc
loopne
das
inc
es
xchg
cmp
daa
jne
add
nop
in
xchg
dec
mov
pop
cmp
mov
push
push
fidivl
and
movsl
push
dec
adc
cmpb
mov
data16
fistpll
xchg
out
adc
jne
or
push
cmp
and
inc
out
mov
mov
mov
jmp
jg
or
mov
loope
pop
sbb
jle
movsl
frstor
filds
mov
inc
or
cmpsb
test
and
sbb
outsb
inc
add
addr16
in
xchg
or
std
test
sub
out
ss
sub
fs
add
sub
mov
ss
cmp
jae
imul
sub
sbb
jl
int3
outsl
push
or
lods
lret
fcomip
jb
testl
jbe
sbb
push
sub
rcrb
cwtl
fiaddl
push
dec
lea
push
inc
mov
cmp
addl
add
pop
mov
cmp
clc
or
int3
loope
sub
loope
sahf
cmp
add
sahf
xor
mov
xchg
push
cld
add
mov
out
or
ror
or
ds
xor
ficompl
mov
mov
enter
repnz
gs
ds
mov
and
icebp
cmpl
inc
fs
dec
cmp
rolb
cli
xor
xor
dec
shll
pop
decb
pop
insb
and
jle
sub
fsubrs
cmp
xchg
xchg
jmp
mov
js
push
mov
sbb
cmp
cmp
sub
dec
andl
dec
je
enter
mov
mov
test
dec
repz
push
adc
lods
pop
jae
pop
std
adc
xor
xor
mov
mov
out
push
mov
push
and
enter
fcoms
and
xor
inc
outsb
inc
popa
jg
imul
xor
lcall
lock
rol
sub
lea
mov
sbb
jbe
movsl
adc
adc
fiadds
xchg
sub
mov
dec
inc
add
sbb
sub
pop
ljmp
addb
sub
inc
inc
shrl
ja
cli
aam
pop
int3
mov
sub
add
inc
enter
push
addr16
out
in
xchg
dec
mov
imul
sub
cmc
es
mov
pop
sbb
mov
imul
nop
movsl
push
cmp
pop
jne
fcompl
xchg
fbld
in
xchg
mov
es
mov
and
std
sbb
loopne
and
mov
add
js
lahf
sub
insl
mov
xlat
cmp
fdivrp
out
imul
add
xchg
psrad
lahf
dec
pop
sub
jne
repz
js
mov
jmp
jae
mov
pop
ret
enter
bnd
mov
leave
add
repnz
inc
gs
loopne
ja
jo
adc
call
mov
gs
adcb
jno
je
inc
aas
pop
lds
sahf
and
mov
mov
push
sbb
mov
adc
sbb
loopne
sarl
mov
in
into
xchg
daa
lcall
das
pop
jle
in
roll
inc
in
mov
xor
pop
jg
and
xor
adcl
push
rol
jns
stc
dec
popf
sbb
pop
xor
lock
loop
xorl
dec
mov
mov
cmp
mov
lds
push
jmp
loope
mov
pop
and
jo
dec
jmp
pop
add
inc
jg
xchg
js
pusha
das
xchg
dec
shlb
sbb
xlat
repnz
popf
in
mov
leave
mov
imul
add
fbstp
cmp
xor
lock
xchg
shrl
icebp
repz
or
sti
sbb
scas
mov
and
es
cltd
xchg
cmp
das
out
loop
outsb
loopne
dec
and
stc
femms
pop
pop
pop
outsl
or
mov
imulb
or
mov
jbe
out
xchg
nop
scas
shll
ss
sub
push
shll
pop
add
inc
jo
scas
imul
fldcw
insl
mov
stos
push
pop
popf
negb
push
sub
lea
and
movsb
fs
sub
es
inc
int3
pop
lods
inc
inc
inc
rclb
popf
mov
inc
shrl
mov
lahf
mov
bnd
push
push
stos
push
jle
shlb
push
negl
jle
ja
cmc
popf
insb
push
outsb
ret
xchg
mov
mov
xor
jge
fwait
insl
stos
push
sub
cmp
mov
cmp
pusha
mov
loopne
and
cmp
inc
or
xlat
popf
or
or
xchg
pop
mov
fbstp
pop
mov
movsb
add
adc
mov
mov
push
xchg
shlb
call
xchg
push
flds
dec
adc
adc
gs
sbb
in
add
out
dec
dec
xor
xchg
dec
loope
cltd
mov
repnz
dec
xchg
and
cmp
in
aaa
or
cli
std
fcoml
loopne
mov
cmc
lret
fcompl
inc
xchg
push
data16
cmpsb
jmp
cmpsl
sub
xor
mov
mov
pop
enter
cmp
js
adc
lods
push
sti
lcall
ficompl
aad
dec
ror
mov
mov
adc
xor
dec
scas
mov
and
mov
out
in
shlb
das
lods
push
jg
stos
cmp
adc
in
mov
repz
jb
adc
jp
mov
push
stos
mov
shll
mov
bound
clc
addb
mov
cmp
aam
add
loope
popa
xor
mov
or
outsl
lret
cmp
inc
push
mov
cmp
cltd
mov
sbb
xor
xor
adc
scas
dec
stos
imul
clc
or
push
pop
je
ss
ror
xor
sbb
shrl
ljmp
add
rcrb
inc
mov
adc
push
pop
add
stos
sti
cmc
lahf
mov
sbb
nop
inc
inc
ljmp
mov
pop
fidivrl
sub
sub
shlb
push
stc
scas
jge
jno
sub
ja
cmp
mov
fcoms
sbb
stc
and
ds
mov
mov
xor
dec
cmpsb
rcr
push
pusha
lods
roll
daa
lock
lock
mov
xchg
cs
dec
sub
mov
loopne
scas
cmpsb
or
adc
inc
popf
push
es
je
clc
push
addr16
jmp
int3
cmp
outsb
mov
jb
and
cltd
popf
loope
fdivrs
inc
inc
pop
sti
pop
or
mov
xchg
sub
out
push
in
das
add
push
or
and
pop
popa
ljmp
cmp
out
mov
int3
nop
push
mov
das
out
imul
aas
movsl
sti
xchg
pop
jns
rcr
add
out
or
push
pop
jae
arpl
sbb
or
jb
mov
mov
dec
or
xchg
dec
imulb
mov
mov
std
mov
adc
cmpsl
inc
dec
shrb
lods
imul
mov
and
mov
adc
negl
repz
xor
aas
mov
testb
sbb
inc
or
testb
aam
ficoml
ja
pop
mov
jb
cli
mov
pop
cmc
push
jnp
dec
and
inc
test
pop
mov
fiaddl
add
stos
xlat
lahf
mov
pop
stc
mov
hlt
cwtl
fildl
sub
insl
lods
push
or
lret
sbbb
and
call
int
mov
adc
js
xor
fs
addr16
mov
arpl
cmc
mov
shll
mov
add
call
mov
bound
int3
movsl
in
adc
jbe
mov
imul
cwtl
cmp
mov
lcall
inc
mov
and
or
in
jns
scas
dec
mov
sahf
subb
popa
inc
mov
test
insb
call
sub
das
xchg
js
inc
adc
push
push
les
daa
lea
mov
jp
ret
popa
add
or
jae
shll
pop
in
loop
enter
lods
cmpsb
lahf
ds
aad
sahf
aas
scas
aas
adc
out
mov
daa
mov
mov
es
movsl
jle
fstl
cmc
xchg
mov
clc
cmpsl
xor
adc
jnp
mov
imul
or
out
dec
push
loopne
mov
jmp
xor
in
subb
rcll
mov
cli
push
test
cmc
pop
push
les
dec
adc
push
rorl
ss
lds
rcr
or
jg
adc
xlat
inc
push
pop
mov
push
or
inc
xchg
jae
or
ret
dec
in
mov
stos
jbe
in
test
mov
js
lret
lods
pop
imul
nop
arpl
sub
fcmove
sbb
and
jae
adc
dec
xor
hlt
xchg
adc
dec
xor
push
sbb
dec
xor
adc
fidivl
sub
or
pop
mov
cmpsb
and
pusha
or
sbb
lds
xor
push
ljmp
push
mov
inc
xlat
mov
inc
xchg
outsb
xor
pop
or
icebp
ret
pop
mov
daa
inc
mov
sub
xor
mov
sahf
jl
jge,pn
add
out
rol
mov
ficoms
and
add
stos
lods
pop
pop
gs
push
push
aam
pop
adc
popf
test
vandnpd
jp
andl
or
sahf
dec
dec
mov
mov
xor
insl
sbb
jne
mov
inc
test
adc
fnstenv
cmp
movsl
clc
fiaddl
out
cs
iret
jmp
bound
bound
mov
mov
das
jae
pop
inc
outsl
out
xchg
mov
icebp
push
sbb
add
jge
divl
pop
mov
daa
mov
mov
gs
out
xor
dec
push
insl
sbb
mov
dec
jnp
xchg
out
scas
xchg
pop
popf
jns,pt
inc
test
pop
mov
adc
cmp
sbb
xor
fistpl
cmp
and
dec
ds
ret
lret
pop
cmp
roll
mov
pop
xor
dec
or
xor
idiv
pushl
sbb
mov
dec
xchg
andb
jnp
loope
sub
mov
mov
jl
or
clc
insb
add
mov
out
mov
stc
addr16
es
aad
test
jmp
sub
add
fldenv
fwait
jge
cmp
jnp
dec
ljmp
mov
adc
subl
rorb
adc
loop
dec
inc
dec
ljmp
xor
adc
sbb
into
xchg
mov
and
psubusb
imul
dec
enter
jp
pop
loop
mov
sti
xchg
sti
ja
testl
repnz
adc
rol
rcr
mov
out
inc
lret
sub
jno
std
arpl
add
icebp
leave
mov
and
xor
cmpsl
inc
dec
leave
lret
dec
test
rorb
push
imul
aaa
in
adc
or
scas
jae
push
lcall
insb
xlat
cmp
nop
roll
inc
adc
add
enter
inc
lret
mov
in
pop
add
mov
in
leave
inc
push
sub
adcb
add
jbe
add
scas
xor
aad
sahf
xchg
push
dec
and
out
mov
pushf
mov
in
adc
dec
outsl
cmp
xchg
sub
xchg
into
cmpsb
shl
popf
sub
add
jecxz
and
pop
outsb
push
data16
jae
rcrl
jg
lock
mov
rcl
or
sub
lods
sbb
jl
jle
sbb
mov
adc
fsubs
aaa
int
scas
push
sbb
or
mov
jge
push
dec
jb
pop
mov
gs
mov
sbb
negb
jnp
lods
out
xor
xchg
cmpsb
adc
cwtl
ja
mov
std
sbb
mulb
ds
loop
jb
jae
testb
ficomps
pusha
fdivrs
adc
or
mov
mov
cli
int
pop
cli
dec
or
roll
jl
fdivrl
pop
imul
jmp
insl
pop
je
fdivs
nop
inc
or
in
push
hlt
mov
pop
enter
rcrl
aad
lret
movb
sbb
mov
popl
add
and
inc
jae
scas
dec
or
in
sbb
xor
fdivrs
inc
insb
inc
test
mov
cmc
pop
int3
add
xor
xchg
jns
cltd
mov
push
jo
loopne
and
cmp
push
pop
jnp
mov
pop
and
or
das
fistpl
inc
jp
mov
das
daa
mov
roll
in
jb
fcoms
xchg
daa
mov
fbstp
sahf
and
int3
es
jb
jae
popl
push
or
jg
sub
inc
mov
fstl
lock
test
loopne
jl
inc
sbb
xlat
sub
out
pushf
mov
ret
xchg
clc
decl
cwtl
cwtl
add
sub
popa
sahf
mov
mov
cmpsb
insb
rcrb
ret
pop
pop
fisubrs
mov
xor
mov
test
add
movups
adcb
shll
mov
xchg
pop
xchg
jae
push
cmp
mov
rcl
int3
es
mov
dec
scas
xchg
jge
push
dec
test
or
fucomi
scas
leave
inc
adc
pop
rclb
ss
test
aad
pop
mov
imul
dec
pop
xor
lcall
cli
adc
mov
push
adc
mov
jle
push
and
repnz
adc
subb
ss
push
cmp
fiaddl
out
rcl
mov
sub
fs
add
arpl
int
imul
cli
repnz
jecxz
mov
lds
scas
lds
push
mov
stc
xchg
push
test
sti
push
sub
lods
adc
sub
mov
mov
and
jge
jns
in
cmp
inc
sub
lret
stc
sti
ror
je
xchg
mov
jecxz
adc
lods
cmpb
lahf
cmp
xchg
mov
xor
push
and
mov
or
xlat
shlb
adc
mov
xchg
inc
mov
adc
daa
adc
mov
pop
pop
dec
outsl
push
ljmp
movsb
sub
xor
shr
and
jnp
cwtl
dec
rep
es
adc
dec
jo
loope
insl
mov
add
jno
sub
jo
mov
add
sub
sbb
dec
int3
cmpsl
adc
dec
jge
push
and
test
mov
push
stos
add
aam
and
xchg
test
test
stos
fcomip
in
mov
xor
pop
cmp
inc
sahf
or
scas
les
and
add
add
loope
inc
mov
cmp
outsb
mov
pushf
repnz
jp
add
sahf
cmp
jb
add
scas
sar
sub
popa
movb
dec
jg
data16
add
popa
mov
push
mov
xor
jecxz
sahf
xchg
jecxz
xor
stos
lahf
les
adc
dec
insl
sarb
mov
jle
dec
movsb
fidivl
lahf
cltd
lods
push
mov
int
out
mov
push
cli
dec
sbb
fwait
movsl
or
sbb
pavgb
mov
dec
inc
push
int
popa
pop
pop
cmpb
dec
push
sahf
and
popa
outsb
adc
shlb
outsl
addb
jno
push
dec
jecxz
icebp
cmp
dec
js
dec
ljmp
sbb
ret
cmp
xchg
mov
test
lea
pop
loop
add
pop
les
ficoms
repz
cli
fisttps
fistpll
cmp
or
outsl
or
scas
loop
into
inc
das
xor
mov
pop
subb
ficomps
push
mov
js
jbe
jmp
sub
pop
mov
enter
dec
push
push
adc
outsb
ficompl
mov
push
sarl
inc
iret
lahf
sbb
xchg
sub
es
pop
out
out
mov
xlat
or
xor
jns
dec
lahf
subb
xor
xchg
das
int
das
orb
lds
mov
dec
bswap
cmp
ja
loopne
repnz
inc
faddl
jecxz
pop
pop
jl
aam
push
scas
stc
test
sub
add
sub
ret
repnz
dec
mov
push
xorl
fucomp
mov
in
jnp
adc
push
loope
mov
push
int
imul
into
icebp
push
lock
and
daa
xor
movsl
sub
jmp
pop
jecxz
sub
icebp
popa
lock
jmp
loop
jae
push
sub
or
adc
sbb
in
gs
adc
sub
arpl
adc
ss
dec
xchg
cltd
pop
xchg
push
adc
pop
xor
sub
pop
and
sub
mov
pop
shrl
enter
ljmp
mov
inc
sbb
fsubrl
sbb
jg
cmp
adc
mov
movsl
in
push
int
jb
jle
xchg
in
js
add
fcoms
adc
push
aad
sub
pop
jne
loope
or
lcall
pushf
pop
movsb
fnstcw
nop
xor
pushf
orb
xchg
jns
into
cs
sbb
adc
aam
cli
jno
loope
pushf
pushl
push
push
add
ja
fisubl
pop
dec
inc
inc
fs
pop
outsb
gs
adc
xor
inc
sbb
sarb
dec
xor
roll
mov
xor
insl
stc
mov
shll
mov
add
imul
pop
test
push
mov
addr16
in
sub
adc
mov
rcl
xorl
push
cwtl
shlb
loope
cmp
mov
out
dec
jge
xchg
pop
mov
stos
pop
es
aam
mov
out
notl
loopne
frstor
rcrl
jg
mov
cmpsb
jmp
in
dec
cs
repnz
xor
mov
or
jmp
insb
fcomps
and
pop
test
gs
daa
aad
dec
cmp
adc
xor
jecxz
add
addr16
pop
fnstenv
subl
push
fsub
mov
mov
shll
jnp
mov
icebp
mov
scas
add
pop
mov
js
repnz
aam
fnstcw
mov
loop
xor
test
int3
or
je
jle
or
adc
stos
mov
mov
and
add
insl
es
mov
push
lret
ret
or
pop
fidivs
sbbb
or
mov
adc
sub
adc
push
stos
scas
cld
arpl
mov
pop
fdivrl
std
stos
pop
mov
jl
dec
mov
pushl
sbb
pop
ret
mov
xchg
dec
jns
shlb
movl
xchg
inc
cmpsl
fstps
out
test
rcr
jl
push
imul
jno
in
mov
fldenv
ret
dec
bswap
imul
fidivl
pop
imul
jbe
mov
mov
cs
pop
aad
in
adc
popf
push
nop
ljmp
push
out
mov
icebp
jns
loope
mov
add
lds
out
scas
jle
or
imul
or
jb
outsl
arpl
imul
into
dec
clc
insb
ja
sbb
cmp
add
sarb
pop
jle
and
and
gs
cli
add
aaa
in
push
scas
repz
adc
jb
lea
pop
fsubl
scas
or
lock
jne
cmc
mov
xor
sub
mov
pop
call
jle
mov
pop
popa
mov
sbb
cmp
jle
aad
xchg
add
add
pop
movl
sub
sub
adc
shlb
sbb
jb
flds
pop
std
mov
mov
loop
mov
mov
mov
push
push
inc
cltd
mov
imul
scas
inc
mov
push
loopne
jp
ljmp
mov
pop
fsubr
jbe
push
ss
sub
loop
inc
and
mov
cmp
inc
rcl
mov
add
push
ret
xchg
lret
fmull
push
lret
mov
push
mov
sub
out
inc
les
jg
nop
fstl
or
in
into
and
test
xorb
mov
ret
popf
neg
cli
add
add
not
in
inc
test
aas
mov
test
mov
cmpsl
pop
fistl
mov
aam
mov
test
xor
xchg
and
mov
adc
mov
adc
data16
icebp
push
cmc
aaa
jmp
push
lahf
xor
cmp
ret
xor
fcoml
sbb
xchg
addr16
dec
inc
addr16
out
push
repnz
cmpsb
jecxz
enter
test
push
and
jmp
xchg
aas
repz
dec
in
fists
loopne
das
mov
cltd
lods
sbb
mov
insb
adcb
add
sub
jmp
pusha
and
call
lds
and
fstps
xchg
xchg
into
dec
das
and
rorl
ja
lea
cmp
sbb
pop
xchg
cld
inc
insb
pop
das
popa
push
and
sub
in
popf
ljmp
notb
push
and
xor
shlb
inc
and
xlat
dec
das
xchg
incl
jl
or
daa
add
xor
inc
mov
out
add
adc
stc
push
xor
test
and
scas
cmp
cwtl
mov
mov
ret
wbinvd
js
jnp
call
out
test
ljmp
lods
cmp
add
xor
into
and
out
std
aad
bswap
sub
movsb
push
push
clc
cli
xchg
jecxz
mulb
leave
adcb
addr16
aaa
mov
mov
iret
jns
popa
out
int3
int3
pop
fcoml
mov
lahf
cmp
cli
dec
sub
cmp
nop
lret
ja
int3
bound
dec
mov
addr16
cwtl
mov
lcall
lret
imul
dec
fimuls
popf
add
xor
mov
outsl
mov
mov
cmp
fs
mov
shll
ljmp
sti
dec
add
int
xchg
std
jg
test
fistps
es
test
hlt
xchg
std
mov
xchg
cmpsb
dec
push
movsb
or
stos
and
shll
lods
jmp
jl
sahf
cmc
insb
pop
cld
decl
jge
dec
add
sbb
add
pop
inc
aam
sbb
jle
push
mov
into
pop
test
push
pop
das
aad
sbb
cld
lret
and
xor
inc
aam
cmp
cld
leave
push
lret
jb
shrl
push
or
xor
aas
mov
or
xchg
stc
sbb
mov
mov
shr
push
push
test
sbb
lahf
push
cs
adc
repz
xchg
leave
movsb
xor
and
or
aaa
mov
jns
xor
mov
add
adc
pop
adc
jp
cmc
out
leave
adc
sbb
dec
cmpsb
mov
add
and
adcl
data16
ror
insb
mov
aad
cli
les
push
in
out
sub
adc
mov
and
outsl
jle
popf
and
fsubrp
xchg
cmp
test
pop
add
dec
or
lock
and
les
sub
add
fs
inc
test
jnp
js
xcrypt-cfb
cmpsl
es
out
sub
jbe
mov
adc
lahf
mov
fs
mov
push
incb
shll
or
adc
push
pushf
mov
jae
mov
push
scas
fucomi
add
inc
dec
clc
jns
xorl
and
lds
inc
mov
push
in
inc
cld
ret
and
mov
popa
adc
xchg
mov
adc
cwtl
aas
xchg
andb
ret
jl
adc
add
mov
xchg
int3
out
adc
aad
adc
test
xor
repz
pop
push
jecxz
jl
jns
fstl
push
or
lods
add
out
xlat
stc
imul
cmp
test
testl
and
add
popf
push
push
pop
xor
dec
inc
loopne
imul
data16
mov
daa
sbb
inc
add
adc
popa
lret
xchg
aad
call
fsubr
leave
cmp
ds
sti
lods
mov
cmpsl
out
dec
cs
jae
lea
sub
fisubs
movl
pop
mov
roll
sub
cld
aam
sbb
pop
fwait
sti
xor
sbb
fsts
push
adc
jne
inc
xor
roll
mov
jle
out
xchg
jge
daa
fldt
hlt
xchg
lods
cmc
adc
gs
in
sarl
mov
jmp
les
mov
xchg
lds
scas
outsl
cmp
shlb
lahf
stos
pop
mov
cmpsl
mov
adc
push
cmp
dec
xor
push
aad
and
and
mov
andb
cmp
pop
jb
out
sahf
cld
data16
sub
pusha
std
mov
pop
adc
lock
xor
divb
inc
outsl
mov
out
sbb
jmp
lret
lret
dec
mov
sbb
sbb
add
cmp
pushf
ljmp
mov
mulps
push
push
out
sbb
sbb
jecxz
addr16
js
movsl
and
out
cld
inc
sbb
mov
inc
and
push
pop
inc
in
aam
lods
push
cmp
mov
call
movb
cld
adc
mov
mov
in
fcoml
in
add
sub
inc
enter
xchg
fldcw
rorl
mov
push
sbbb
pop
mov
movsb
stos
fidivrs
fadds
ret
and
out
jle
clc
push
sub
push
inc
insb
scas
jg
pop
pop
scas
pop
minps
pop
xchg
cltd
cmpsl
fstpl
cld
sbb
add
push
test
cmp
inc
inc
sub
aad
mov
js
outsb
ret
je
insb
hlt
xor
add
imul
inc
and
and
push
push
jo
mov
mov
push
fcmovb
sahf
xchg
inc
das
mov
dec
xchg
sub
movsb
int3
push
aaa
popa
sbb
incb
mov
dec
popf
push
idivb
xchg
push
test
push
je
in
push
mov
xor
sbb
mov
test
sub
sti
jge
in
ja
fisubl
fldenv
lods
mov
add
or
daa
pop
jno
push
mov
out
lds
sbb
pusha
stc
xor
cwtl
mov
pop
mov
iret
pop
stc
arpl
mov
out
dec
and
mov
addr16
xor
cmpsl
arpl
cmpsb
ret
lahf
aam
sahf
pusha
jp
xchg
cmpsl
cmp
retw
push
cs
push
mov
es
mov
cltd
mov
xor
xor
push
xchg
cmp
scas
shrl
das
sub
push
push
movsl
jmp
inc
xchg
repnz
add
cs
arpl
decb
or
arpl
mov
sbbb
rclb
mov
and
add
pop
test
and
loope
pop
and
mov
out
fisubs
roll
or
add
addr16
cmpsl
sub
movsl
cmp
pop
push
xchg
mov
push
xor
jb
push
andb
stos
mov
push
dec
sbb
scas
mov
int
scas
pusha
das
lods
or
gs
aad
cli
in
scas
mov
mov
sarl
adc
fwait
mov
pop
or
cwtl
mov
jae
iret
loop
xchg
outsb
mov
jne
rclb
in
icebp
push
push
adcl
or
or
jnp
inc
into
test
xchg
xor
leave
sahf
pop
insb
cmovno
jns
loopne
out
addr16
mov
xchg
les
test
push
ljmp
out
jno
mov
inc
popa
mov
popa
pop
dec
mov
test
fdivr
ret
lret
or
mov
fucomp
mov
stos
pop
cmp
imul
dec
xor
pop
les
lock
leave
cmpl
bound
pop
and
and
aam
mov
push
call
mov
bound
add
jge
mov
pushf
xchg
cmp
xor
add
xor
fimull
daa
jae
pop
cmp
sub
popa
sub
add
shlb
and
add
adc
ja
cmp
and
mov
mov
fidivrl
xchg
ror
pop
aas
fcoml
fwait
cs
sbb
push
mov
sub
bound
movsl
fistpl
cs
lea
cmp
inc
cmpsb
xchg
outsb
ds
imul
cmp
lds
pop
mov
mov
inc
bnd
insl
sbb
cmpsl
pop
fucomp
add
lret
lods
out
jo
push
xchg
lret
int
pop
pusha
outsb
mov
cld
fidivl
out
mov
fimuls
adc
mov
das
pop
cmpsl
orl
in
xchg
xchg
addr16
or
stos
inc
add
hlt
jns
push
jmp
pushf
outsl
into
or
lds
ret
enter
incl
cld
lods
aam
add
xchg
push
fdivrl
mull
mov
add
stc
pushf
loope
lret
add
mov
mov
insb
jbe
ud0
insb
jb
sub
lods
lods
popf
pop
and
mov
ret
cmpl
repz
add
stos
jnp
loopne
bound
sbb
xor
push
add
lret
cmpsb
sbb
aad
mov
test
lret
scas
push
cmp
fcomps
push
roll
push
iret
jnp
cmp
adc
push
jae
lcall
mov
push
pop
pop
mov
sahf
mov
dec
cmp
addr16
sub
dec
push
dec
aaa
into
in
adc
sbb
pop
pop
xor
pop
in
push
mov
push
push
sahf
fwait
cmp
addr16
movsb
mov
out
cld
fs
fistps
sub
es
or
add
add
push
mov
repnz
mov
cmp
jbe
xor
out
stc
aas
fbld
xchg
fistps
loop
cmp
fistpll
test
mov
icebp
sub
les
inc
and
repz
pop
and
inc
sub
jl
mov
mov
xchg
sahf
pop
push
rclb
loope
lods
dec
sub
shrb
add
dec
mov
test
inc
dec
scas
out
fsubrp
fs
dec
push
jg
adc
jmp
movsl
js
clc
dec
cmp
xlat
inc
lea
out
mov
pop
lcall
fcoml
int3
push
lret
in
lods
dec
mov
divl
xchg
mov
outsb
mov
push
dec
lods
arpl
fadds
ja
and
xchg
mov
adc
stc
enter
adc
adc
pop
adc
adc
or
add
popa
loopne
push
jne
jnp
in
jb
push
lret
imul
mov
mov
push
lcall
imul
and
les
pop
xchg
dec
pusha
mov
repnz
js
pop
mov
cwtl
stos
sbb
or
and
fst
inc
inc
dec
ljmp
jbe
xchg
mov
mov
test
and
push
cwtl
dec
jp
jp
xchg
push
movsl
mov
and
inc
pop
or
dec
call
fcoms
push
dec
jno
lock
inc
lret
add
hlt
lods
movsl
ret
adc
inc
arpl
ljmp
imul
mov
cltd
and
jecxz
daa
mov
xor
jbe
lods
dec
hlt
xchg
sbb
add
jle
rclb
push
xor
add
into
adc
inc
das
ud0
push
stc
aad
mov
test
sub
dec
int3
out
fimuls
push
xchg
dec
sti
cmp
pop
jge
in
adc
and
add
push
dec
pop
push
and
cld
jb
lahf
stos
dec
mov
jbe
jnp
dec
pop
out
mov
repz
sbb
iret
sub
and
jb
loopne
cld
push
add
pop
iret
scas
push
cmp
dec
arpl
adc
gs
pop
or
push
xchg
clc
mov
push
xchg
add
and
push
iret
insb
inc
xchg
or
cld
or
xlat
insl
mov
aas
cmp
pop
les
mov
fsubs
popa
dec
jno
xchg
xor
cld
cmp
mov
or
inc
idivl
add
aas
in
jbe
stos
inc
jne
das
mov
or
fdivr
mov
jge
xor
fildl
jae
cmp
sbb
lock
popa
xor
lret
test
shl
mov
jnp
int
loop
out
popa
jae
ljmp
and
mov
outsl
shl
xchg
dec
test
inc
jge
push
sub
ljmp
scas
jecxz
popa
test
adc
in
jl
xor
jmp
mov
in
sbb
mov
push
xchg
push
jnp
push
dec
int
lcall
adc
mov
sbb
ljmp
les
mov
inc
xor
cltd
stos
dec
cli
lahf
mov
lock
jo
sub
andl
xchg
cmp
fwait
push
xor
pop
xchg
jnp
adc
mov
iret
iret
cmp
sahf
xchg
sbbl
outsl
sar
loopne
popa
out
repnz
and
sbb
lcall
mov
push
inc
das
add
xchg
daa
add
push
std
test
cld
bnd
sahf
int3
jo
arpl
mov
inc
pushf
aam
mov
call
pusha
and
mov
mov
jb
add
sbb
jl
aam
aaa
fstpl
sub
cmpsl
sbb
pop
cmpsb
pop
pop
ds
das
mov
sbb
subl
fdivs
cmp
mov
addb
pop
mov
movsb
cmp
jo
loop
mov
data16
dec
sbb
repz
cwtl
into
xor
and
je
rorb
and
add
pop
test
mov
fistps
inc
sarl
int
jns
mov
sbb
cmp
push
ficomps
fwait
pop
cwtl
jnp,pn
cld
lahf
lods
jl
xor
mov
cmp
push
negl
add
stos
xchg
fbld
int
and
pop
loope
pushl
xchg
push
gs
adc
adc
scas
xchg
icebp
adc
stc
and
cmp
jle
cmp
xchg
jg
jmp
add
daa
jb
pusha
xchg
iret
pop
adc
lahf
mull
and
fisttpl
pop
lods
ret
icebp
push
mov
pop
inc
add
push
jo
and
push
fistpl
push
in
adc
lds
xchg
lea
les
dec
imul
xor
push
push
aaa
aam
dec
mov
aaa
faddp
imul
fsubr
jle
or
imul
or
mov
xchg
movsl
icebp
inc
dec
or
bound
out
pop
imul
jno
lods
cmp
mov
push
lret
pushl
mov
inc
idivl
fstpl
push
iret
lds
cwtl
jnp
and
lds
and
ret
test
push
jl
test
xlat
pop
insl
mov
nop
in
xor
sub
dec
cmpsl
insb
inc
stos
movsl
aad
dec
fnstsw
iret
mov
popf
icebp
lret
jg
cmp
jmp
and
dec
push
cmp
aad
std
and
call
cmp
mov
inc
jl
mov
scas
and
mov
mov
or
fucomp
dec
pop
lods
aaa
and
lret
test
or
jle
mov
pop
pop
mov
and
push
fildll
movb
pusha
jge
das
pop
fisubs
in
cmpsl
js
pop
or
dec
mov
cwtl
push
pop
mov
aad
out
aam
stos
cmp
jae
ljmp
dec
sub
popf
pop
test
aaa
loopne
shll
mov
cmp
pop
adc
js
popa
mov
cmpsl
or
out
sbb
cmp
sbb
cli
mov
mov
xchg
leave
shl
scas
or
jecxz
or
fistl
ljmp
call
sub
fmuls
bound
lds
dec
call
stc
xor
sub
pop
xchg
and
leave
xchg
mov
xchg
out
mov
xor
jns
lds
inc
push
gs
inc
cmp
movsl
xchg
xor
test
pop
insb
ja
and
push
rol
out
adc
xor
sbb
mov
adc
orps
add
outsl
adc
aaa
in
cmpsl
gs
sahf
aam
mov
push
push
sub
jge
test
enter
hlt
and
out
mov
clc
mov
jecxz
sbb
mov
xor
mov
xchg
sbb
xchg
movsl
mov
push
or
jbe
jne
fnstsw
xchg
pop
xchg
and
or
mov
and
sbb
in
data16
mov
inc
xchg
push
push
inc
mov
dec
adc
nop
add
data16
or
jecxz
mov
nop
bound
fsubrs
aas
cmp
ja
jns
sub
xorb
aaa
push
push
dec
popf
push
aam
jbe
inc
lods
add
lods
or
mov
xchg
push
out
in
pop
adc
outsl
ds
jge
hlt
lods
cmc
inc
sbb
jns
orb
pusha
loopne
ret
xor
push
add
out
push
lods
sbb
jnp
and
xchg
pop
mov
or
mov
mov
inc
test
cmp
push
and
dec
push
dec
in
rcll
lcall
fisttpll
jb
cmpsb
rorl
test
xor
xlat
mov
test
mov
in
dec
fs
stos
or
pop
pusha
fimull
sub
lret
sub
test
push
rolb
popa
xchg
sub
cmp
subl
test
int3
push
push
mov
fstl
imul
lret
add
dec
adc
adc
arpl
mov
push
cmp
cmpsl
lea
in
add
mov
out
cmp
add
and
lret
jecxz
rcll
mov
shr
lcall
mov
xchg
add
in
push
stos
adc
dec
xlat
sbb
push
or
jb
shl
push
cmpsb
pop
loop
cmpb
jl
cwtl
loop
xchg
scas
aas
xor
mov
roll
adc
in
loope
adc
or
out
pop
mov
insb
cmp
pop
testb
insl
imul
xchg
rorb
out
movb
mov
jp
fs
in
mov
std
lcall
xchg
in
icebp
inc
ljmp
stos
pop
clc
loopne
mov
in
pop
insl
jae
lret
cmp
push
adc
fldt
cmc
or
je
pusha
hlt
fsts
std
or
out
adc
insl
repnz
pop
sub
cli
mov
scas
add
call
xchg
lahf
pop
loope
xor
data16
ljmp
mov
std
jmp
push
xchg
pusha
jl
cmp
aaa
xlat
std
mov
sbb
xchg
test
movsl
pushw
cmpsb
fimull
push
pop
insb
fsqrt
test
lret
aaa
push
adc
dec
lret
ror
adc
outsb
mov
push
xchg
and
stos
fisttps
sbb
xor
xchg
mov
xchg
cmc
out
movsb
pop
cltd
push
cmp
out
inc
sub
pop
mov
xchg
sbb
xchg
sarb
cmp
cld
cwtl
or
pushf
pop
jmp
lea
mov
and
add
pusha
and
jne
mov
ja
sbb
push
cmp
insl
adc
mov
out
add
xchg
push
jl
in
cmp
jb
push
dec
inc
enter
and
xchg
popa
sbb
cmp
or
outsl
pushf
dec
adc
and
pop
sub
mov
dec
jge
filds
pop
add
test
pushf
arpl
mov
sbb
dec
andb
mov
mov
jp
sbb
dec
aas
movsl
and
mov
mov
xchg
ljmp
fisttpl
repz
std
pop
das
jnp
pop
js
push
iret
sbb
push
mov
mov
mov
out
dec
sti
inc
push
dec
loop
loope
adc
mov
out
movsb
ja
fbld
dec
or
inc
shll
ja
test
jno
fcoml
loope
repz
and
ss
popf
jb
sub
shll
imul
ret
fisttps
int3
imul
in
dec
movsl
iret
push
mov
fwait
mov
cwtl
in
les
dec
subl
cmp
mov
fs
jl
or
inc
xchg
mov
out
rcr
jmp
dec
shl
into
aaa
push
pop
inc
cmp
mov
mov
mov
jl,pt
dec
addr16
into
das
jnp
data16
and
pusha
jno
xchg
mov
mov
inc
sub
sarl
out
add
shlb
leave
sub
lret
aad
mov
sub
jae
inc
mov
xorl
add
scas
sbb
push
divl
mov
xchg
cmpsb
mov
dec
lea
outsl
jmp
cmc
inc
ljmp
stos
mov
fsubrl
mov
and
into
fidivl
jno
sub
adc
inc
sbb
lds
call
aaa
jae
test
stos
xchg
in
sub
sbb
loope
daa
push
mov
stos
rol
or
fs
and
lods
jne
adc
out
xlat
out
rclb
lret
pop
sti
jno
outsl
push
xor
fidivl
dec
pop
sti
mov
and
add
shr
fldt
call
pop
add
sahf
adc
into
loop
lahf
lcall
sub
data16
sub
mov
pop
dec
mov
into
outsb
cld
adc
call
pushf
dec
jmp
cmpsl
outsl
popf
cmp
aam
dec
icebp
sbb
pop
ss
ljmp
fwait
jmp
inc
lcall
aaa
cs
loope
dec
pop
or
jecxz
sbb
xchg
cltd
vunpckhps
push
iret
sbb
cwtl
jbe
sub
xor
adc
push
dec
push
shll
jo
cwtl
loope
add
ret
jecxz
mov
ja
cmp
and
aaa
je
mov
aaa
mov
jmp
cli
popa
or
ljmp
pop
loop
xchg
pop
cmpl
shlb
ljmp
push
push
iret
mov
movb
mov
adc
push
jl
mov
ss
sahf
sahf
inc
iret
push
enter
ss
scas
fisttpll
bound
cmp
nop
pop
push
mov
push
sbb
imul
lods
mov
inc
int3
mov
cmp
pop
sbb
aam
shlb
insb
mov
add
test
stos
pop
ljmp
in
loope
or
cmp
in
mov
js
test
popf
movsl
lods
ret
xchg
test
jbe
ret
dec
mov
stos
mov
cmp
and
dec
pop
push
push
mov
mov
mov
mov
adcb
cmpsb
jge
mov
inc
and
addr16
into
popf
mov
decl
jge
dec
mov
pushf
jbe
test
xchg
lds
and
adc
mov
sub
pop
aad
push
or
popa
cmc
mov
ret
xchg
mov
inc
adc
je
adc
push
adc
push
ja
mov
mov
dec
xlat
lods
xor
mov
xchg
inc
dec
dec
call
adc
adc
inc
pop
das
jno
jle
movsl
rcll
sbbb
add
ds
adc
fistpll
and
mov
and
jb
cmp
arpl
mov
iretw
insl
push
ret
and
lahf
popa
scas
stc
in
test
mov
inc
sub
adc
or
dec
pop
into
jo
fcoml
xlat
inc
fwait
cmp
outsl
sarl
cmp
hlt
add
mov
push
jae
add
les
push
arpl
stos
ljmp
and
mov
cld
pop
inc
jl
jno
imul
jmp
je
pop
inc
fldcw
aad
and
inc
ja
pop
cmp
popf
lcall
jno
push
jecxz
or
add
je
dec
sbb
push
fcoml
jmp
rorl
andb
inc
xchg
jne
mov
inc
nop
pop
mov
lods
faddl
int3
push
test
test
jbe
stc
bound
push
xchg
int
push
and
mov
test
cmp
add
mov
out
aas
push
push
push
dec
mov
pop
xchg
or
push
insb
or
dec
add
sub
sbb
repz
fucomp
loop
popa
jns
arpl
inc
rorl
cmpb
dec
inc
cltd
imul
je
jl
push
mov
add
std
or
jb
mov
add
mov
mov
ja
mov
xor
iret
sub
jp,pn
insb
push
adc
xor
add
repnz
shll
out
lret
and
in
lcall
add
inc
dec
lret
push
jbe
and
inc
enter
xchg
mov
icebp
or
jae
cld
repz
jns
mov
xor
outsl
test
jnp
dec
push
mov
xchg
push
subl
mov
ljmp
bnd
cmp
cmp
insb
adc
sub
xor
add
xchg
pushf
shrl
outsb
mov
inc
dec
outsl
cltd
lahf
mov
jbe
insb
xchg
push
sti
in
imul
jno
dec
mov
mov
adc
lahf
enter
gs
fs
push
lcall
xor
pop
and
js
add
sub
outsl
es
pop
scas
or
push
pop
pop
dec
sub
cli
jmp
pavgb
pop
pop
ja
shlb
call
sbb
cld
int
test
clc
fs
inc
pusha
pop
insl
mov
stos
aaa
outsl
pop
or
cmp
stos
xor
dec
and
mov
inc
mov
les
imul
dec
outsl
sbb
ss
cmc
or
jmp
lahf
insl
fcmovne
add
es
adc
pusha
aaa
push
mov
idivl
mov
jne
cs
in
inc
inc
pop
rcr
lods
or
lahf
ret
pop
out
nop
push
jl
pop
adc
addb
test
mov
pop
pusha
in
outsl
imul
xchg
sub
mov
outsl
jge
lret
inc
pop
or
sub
std
call
add
pop
xchg
cltd
hlt
stc
enter
scas
pop
ret
fiaddl
sbb
mov
movsb
cmp
js
jmp
inc
ds
rcl
mov
xchg
xor
loopne
inc
sbb
movsb
outsb
scas
dec
iret
sahf
movsl
out
push
iret
das
popf
and
call
sbb
or
mov
jno
lret
std
push
fidivs
inc
add
push
test
sbb
loope
cli
out
push
rcr
je
xor
pmaddwd
inc
dec
sbb
push
push
movsl
into
jae
ret
pop
in
in
dec
bswap
or
ficompl
adc
add
cltd
imul
dec
xchg
add
outsb
pop
iret
stos
cmp
hlt
jmp
xor
pop
mov
fisubs
mov
hlt
fiadds
dec
cmp
jle
mov
out
inc
add
cmp
jl
mul
pop
xchg
out
xor
enter
xchg
xchg
test
cmp
mov
jae
jle
bound
out
adc
sub
lret
gs
frstor
dec
push
push
xchg
sub
or
lds
fucomi
adc
inc
idiv
popa
int
loop
test
fwait
sbb
sbb
fcomp
mov
inc
mov
cmc
push
mov
sbb
mov
jnp
dec
xchg
push
std
cmpb
dec
fnsetpm(287
out
ficomps
call
ss
mov
inc
or
dec
roll
pop
and
cmp
push
les
and
mov
mov
or
and
out
inc
sarl
lock
or
stc
adc
or
or
and
ja
inc
lcall
test
fs
push
or
push
fwait
mov
adc
inc
inc
out
ljmp
sbb
fxtract
ret
mov
lahf
in
add
int
or
aas
push
pop
ljmp
je
cmp
lock
rcll
movsb
jne
xor
fcmovnbe
mov
sti
in
stos
repnz
dec
stos
out
jmp
sub
and
push
lods
jp
fnstsw
test
clc
sbb
negl
lahf
cs
adc
fstps
lahf
jl
xchg
mov
ret
sbb
mov
inc
jo
mov
or
leave
pop
sysret
pop
loopne
cmc
sub
jecxz
shll
jbe
xor
and
pop
mov
daa
les
sbb
mov
rcr
fdiv
out
daa
mov
enter
push
hlt
xchg
adc
shl
push
cmp
xchg
cwtl
mov
or
sub
cmp
dec
rcll
lret
pop
add
mov
jne
fwait
cmp
lret
mov
movsl
mov
into
lahf
sub
push
jge
shr
push
mov
in
data16
push
inc
xchg
xor
pop
les
and
movsb
mov
inc
xlat
adc
outsl
clc
push
xchg
push
leave
cmc
xchg
mov
movsl
cmp
jecxz
fisttps
les
mov
call
xchg
inc
arpl
rolb
push
enter
ljmp
nop
mov
mov
int
adc
rorb
jne
jecxz
aad
sub
mov
sbb
movsb
push
es
mov
arpl
sahf
ds
les
xchg
sbb
inc
std
insb
aam
adc
xlat
xor
add
xchg
fisubrs
mov
jl
aam
cmp
cmp
out
xchg
push
mov
dec
mov
es
aaa
and
lahf
aad
cmpsb
insl
enter
shll
adc
loopne
in
mov
psraw
cmpl
das
adc
scas
ja
mov
out
js
ss
dec
fistpl
xchg
mov
imul
fs
lods
je
iret
xor
rolb
add
jmp
dec
xchg
adc
es
sbb
push
sub
cmpsb
jb
ficomps
pop
rcrl
pop
adc
movsl
outsb
in
add
xor
mov
loopne
mov
and
aad
xor
or
mov
adc
or
test
insb
jmp
jg
cltd
jp
jg
mov
int
sbb
xchg
and
loopne
cmpsl
insl
mov
jp
cmp
sbbb
or
inc
dec
push
fstpt
mov
fwait
rclb
and
pop
cmp
cwtl
pop
cwtl
mov
inc
push
scas
js
fldl
push
push
lret
into
js
mov
xchg
mov
repnz
mov
sbb
leave
enter
out
nop
push
dec
cmc
push
in
xchg
dec
sahf
inc
int
sub
xchg
mov
sti
and
daa
loopne
xchg
es
sub
dec
fnstenv
mov
or
lods
adc
stos
push
add
mov
fldl
add
popa
in
or
xor
bound
pushf
mov
add
test
and
lds
in
cmp
aam
and
arpl
dec
dec
push
mov
or
loop
jns
js
pop
pop
test
out
cld
ja
jecxz
clc
lret
adc
sbb
mov
adc
xchg
repnz
repz
mov
xchg
leave
pushf
enter
repnz
and
jmp
sbbb
test
ficomps
test
xchg
inc
cltd
ror
jo
lahf
sbb
sbb
jb
push
divl
inc
subb
xor
push
mov
ss
paddq
mov
fwait
mov
mov
repz
jg,pt
xchg
pusha
popa
aad
xchg
pop
movl
jae
ret
xchg
cmpb
data16
or
mov
add
mov
xor
mov
decb
cmp
mov
cmp
inc
je
and
sub
inc
jg
lcall
dec
cmp
mov
jae
add
fs
testb
push
testl
mov
movsb
loop
or
mov
ja
mov
pop
cli
fcmovne
xchg
aaa
arpl
pop
xor
aad
inc
inc
sub
or
cmpsl
scas
repnz
icebp
pop
cmp
and
ret
in
daa
xchg
mov
addr16
das
hlt
divb
pop
and
adc
stos
and
popf
fs
adc
pop
sahf
cmp
dec
movsb
stc
in
stos
fs
xchg
lods
add
daa
aaa
in
aas
ja
mov
in
sbb
mov
mov
loop
inc
mov
sub
xchg
push
leave
and
sub
outsl
lods
cmp
stos
popa
nop
cmc
sub
mov
fadds
inc
std
sbb
icebp
hlt
out
fcomps
test
mov
notl
in
jge
imulb
gs
jle
push
adc
xchg
lds
aam
xor
jae
test
pop
adc
in
cmpsb
xor
ficoms
mov
sbb
jbe
popf
mov
imul
xor
ret
xchg
in
dec
cmp
inc
adc
xchg
jl
pop
jns
fs
lods
adc
mov
mov
iret
test
cmp
pop
inc
jle
sub
xchg
push
cmp
mov
ljmp
push
sbb
sarb
push
out
xchg
pop
xor
or
ja
pop
and
sbb
loope
dec
js
inc
int
mov
push
add
inc
cmp
repz
add
enter
rorb
testb
sub
enter
and
lea
or
lds
push
pop
pusha
adc
jge
dec
jmp
xor
cmc
out
mov
mov
in
lods
pop
addb
jnp
jbe
shll
jo
pop
mov
dec
xchg
dec
sbb
ja
or
in
mov
mov
fistps
push
push
loope
fwait
xchg
push
pop
xor
into
ds
adc
mov
mov
iret
mov
mov
pop
cwtl
mov
fsubrl
xor
rcll
jns
fidivrs
dec
cmp
outsl
nop
mov
shll
jle
xchg
aas
pop
sarb
jb
lods
and
push
repz
xchg
movsb
xchg
ds
dec
xor
pop
sbb
xchg
dec
ljmp
lods
add
popf
add
jae
or
dec
or
inc
enter
je
loope
pop
loop
pushf
mov
mov
sbb
xchg
iret
adc
fidivrs
mov
pop
imul
and
mov
sub
fsubrs
inc
adc
mov
sbb
mov
dec
aad
inc
xor
cltd
call
out
movsl
es
fs
xor
adc
cmp
call
jle
fwait
test
cltd
hlt
orb
pusha
fdivrs
adc
push
xchg
push
or
jnp
adc
mov
mov
lahf
pusha
sbb
jge
xor
or
push
movsl
gs
push
out
xor
mov
sub
mov
jge
cmpsl
jae
inc
xor
mov
mov
frstor
lea
and
fildl
lret
inc
leave
and
insl
cwtl
xchg
out
and
cmp
mov
fldt
jae
mov
xor
pop
movsl
fstp
sbb
jge
push
push
das
loopne
or
outsb
cld
adcl
repz
iret
xchg
jns
je
shll
das
pop
jnp
in
xchg
and
daa
movsb
lahf
sbb
push
or
jecxz
xchg
pop
jg
test
jae
sbb
arpl
pushf
sahf
add
mov
scas
lds
add
sub
lcall
push
mov
test
adc
or
sbb
sub
out
and
or
cmp
ss
push
insb
lock
test
hlt
test
push
insl
jb
sub
ficompl
jmp
sbb
mov
sbb
and
gs
and
sbb
outsl
and
cs
xchg
in
in
arpl
gs
pushf
loope
jnp
insl
lea
or
xchg
test
mov
ret
xor
jne
push
mov
fmulp
inc
xchg
test
push
fisttps
mov
sbb
pop
je
cmpb
mov
repnz
test
pop
lret
sbb
loopne
leave
pop
scas
stos
pop
mov
or
xchg
frstor
es
aaa
lods
insl
mov
test
xor
mov
sub
fsubrs
cli
inc
dec
xor
addb
mov
mov
fwait
mov
push
cmp
outsl
mov
lds
roll
repz
add
scas
pop
aaa
mov
aad
dec
cmp
mov
push
out
call
cmp
inc
jae
pusha
icebp
addl
mov
sub
mov
test
stos
lods
push
inc
or
jmp
sub
xor
cmp
popa
pop
ds
mov
xor
push
cmp
aaa
pusha
mov
add
in
sub
and
push
mov
xchg
repnz
and
shlb
ds
mov
pop
mov
sbb
sub
mov
dec
out
cwtl
or
cmc
movsb
mov
pop
mov
push
mov
and
in
mov
out
lahf
cmc
adc
mov
cs
and
or
daa
cmp
aas
mov
pop
mov
cmc
mov
popa
mov
jg
lcall
add
pop
std
sub
sub
xor
ljmp
hlt
push
hlt
and
sbb
pop
xchg
mov
in
mov
std
cmp
insb
cmpb
imul
and
lods
xchg
ss
lock
stos
sub
out
test
insb
sub
out
stos
mov
mov
clc
daa
sub
jmp
arpl
or
imul
xor
push
and
sahf
mov
icebp
add
popf
fisubs
ja
loop
fists
ror
push
inc
xchg
push
xor
sti
fadds
insb
and
mov
test
sbb
into
xor
sub
jns
int
outsb
rclb
rcrb
fmul
leave
icebp
test
mov
rolb
mov
popf
popa
loop
aas
dec
pop
mov
es
popa
push
and
push
mov
into
mov
loop
push
mov
enter
flds
sbb
jo
add
dec
dec
xor
adc
rol
jo
mov
addl
in
xor
inc
add
cmpsl
jae
aam
push
lea
xchg
sub
leave
and
sub
and
and
cmp
cmc
fisttpl
sbb
jg
push
ds
fbld
mov
rol
stos
pusha
add
push
inc
and
adc
pop
inc
and
jnp
xor
cmpsb
inc
or
dec
xchg
add
sub
or
push
mov
data16
out
push
pop
call
jl
push
les
jle
mov
mov
fists
dec
inc
push
cmp
xor
test
xchg
xor
loopne
or
lret
js
or
dec
add
notl
add
add
movl
jne
jp
clc
inc
cmp
cmp
fs
ret
pop
jmp
add
imul
out
jg
cmp
push
pop
shlb
test
and
pop
mov
outsl
pop
push
xchg
jp
imul
outsb
out
out
lds
jae
loopne
cmp
std
leave
push
sbb
add
loop
jb
mov
xor
fcomps
icebp
or
out
inc
out
adc
xor
roll
or
rclb
negl
xor
loopne
mov
xor
pop
cmpsl
ss
sahf
sbb
sti
push
jge
sub
jecxz
cmpsb
cmp
outsb
jmp
dec
test
sbb
popa
mov
cld
push
and
sub
pusha
sub
mov
lods
pushf
xchg
dec
xchg
mov
lea
dec
adc
call
mov
mov
xchg
adcl
fists
in
ret
sbb
mov
and
rcll
in
mov
mov
imul
dec
shll
xchg
dec
mov
scas
ss
addr16
fadd
lahf
pop
or
dec
or
js
or
xchg
or
scas
adc
nop
xchg
cmpsb
jecxz
cmp
jle
arpl
push
sbb
leave
mov
push
popa
xchg
adc
inc
imul
inc
or
out
ja
ljmp
push
aam
out
pop
xchg
pop
das
and
cwtl
add
jp
std
fcomps
pop
in
mov
das
cmpsl
adc
push
hlt
push
shrl
cmpsb
pop
out
popf
cmp
stos
mov
orl
add
mulb
cwtl
std
test
jb
pop
mov
call
jns
aas
adc
push
popa
inc
sub
and
jmp
movl
sarl
mov
sub
and
inc
mov
add
mov
xchg
adc
mov
cmp
add
dec
shlb
xor
imul
xchg
lods
jp
into
leave
or
pop
stc
ds
std
mov
popf
push
pusha
jo
mov
mov
xlat
inc
inc
test
mov
mov
mov
pop
ss
sbb
adc
mov
sub
xor
mov
aaa
push
add
lahf
pop
xchg
push
xchg
in
stos
leave
sti
test
imul
inc
jp
mov
adc
divl
repnz
loop
outsb
lds
add
add
or
pop
arpl
fldl
ret
fsubrp
mov
add
mov
or
test
xor
jnp
xlat
mov
inc
bnd
lea
pop
outsb
xchg
ret
aam
fmulp
cwtl
jb
js
int3
aaa
mov
mov
mov
mov
add
cwtl
pop
scas
scas
mov
repz
adc
enter
mov
and
bnd
pushf
cltd
fs
test
gs
popf
lock
nop
mov
mov
shll
xor
test
movsl
pusha
int
dec
leave
outsl
jl
xchg
gs
pusha
je
fisttpl
out
mov
sub
cld
sub
sub
xchg
sub
sub
loop
jecxz
or
adc
add
pop
loope
outsb
sti
inc
dec
js
iret
cwtl
leave
jne
lock
test
xchg
cmp
mov
push
dec
pop
inc
in
push
jns,pn
sub
jle
mov
xchg
jae
add
ret
nop
adc
inc
cmp
or
jg
scas
dec
mov
pop
jle
repnz
xor
mov
fildl
and
inc
sti
fcomp
xor
cmc
add
adc
cmc
out
mov
inc
rcll
ss
dec
cltd
ret
adc
mov
dec
cmp
lock
lret
mulb
and
pop
push
ficoml
adc
ss
sub
insb
inc
and
icebp
fsts
jp
or
fnstcw
es
xor
aaa
out
mov
repnz
pop
xor
pop
shlb
pop
mov
push
add
add
out
adc
jle
jno
icebp
sarb
pop
push
in
fisubl
mov
mov
cmp
in
ss
and
xchg
imul
mov
sbbb
dec
dec
fnstcw
popa
call
dec
inc
mov
push
inc
popf
adc
lock
in
dec
aam
cmp
cmp
cmp
xor
dec
jmp
push
or
pop
outsl
sbb
sbb
idivb
pop
sbb
bound
jle
and
or
jmp
mov
sarb
jge
leave
push
mov
xor
sub
loopne
outsb
xor
mov
inc
pop
popa
adc
fdivrs
sub
test
mov
iret
cmp
aam
ljmp
jae
imul
mov
shrb
mov
xchg
pop
or
aas
rcrl
lcall
xor
cmp
mov
stc
outsb
sti
push
lret
cmpsb
imul
in
adc
clc
inc
ret
imul
ret
aas
xchg
cltd
or
xchg
cmp
in
jb
outsb
ficomps
je
aam
test
add
in
cmp
push
in
xchg
dec
js
sbb
sahf
cmp
cld
cld
push
mov
xor
iret
mov
lods
jno
jb
nop
inc
hlt
inc
pop
pusha
daa
dec
mov
push
lcall
xchg
inc
cltd
inc
and
lret
cmp
mov
mov
add
or
shlb
push
call
dec
pop
je
mov
adc
ror
jmp
xchg
pop
pushf
pusha
js
in
repnz
jl
sub
orb
test
adc
xchg
arpl
sbb
fsubrs
pop
arpl
insl
pop
push
mov
xor
mov
call
pop
jg
jg
push
dec
cmp
jno
and
cmp
mov
adc
dec
sti
ret
scas
insb
in
or
mov
jnp
mov
push
std
and
lds
pop
lods
pop
jge
inc
sub
mov
enter
jb
pop
mov
adc
sbb
data16
push
inc
and
mov
and
ja
cmp
adc
subl
std
sub
ret
daa
aam
pushf
shlb
inc
adc
repnz
js
xchg
xor
clc
and
sti
jge
call
sti
shl
and
xor
shrb
int3
scas
cli
ficoml
inc
mov
jbe
xlat
cmp
jb
addr16
sub
pop
push
mov
loopne
rol
pusha
or
xchg
lret
cwtl
mov
movl
cli
lds
push
or
inc
sbbl
hlt
insl
pop
clc
or
fisubs
sbb
stc
hlt
minps
rcl
lret
jno
inc
add
or
push
daa
lds
cmp
cmp
add
fists
negb
xchg
pop
fdivs
inc
in
inc
xor
push
add
xor
or
push
das
sub
icebp
aas
into
pop
mov
cli
xor
dec
in
loope
inc
mov
gs
sbb
xor
pusha
leave
icebp
cmp
movsb
pop
mov
mov
jo,pt
int3
cmc
cmpsb
fs
pop
push
push
insl
sbb
sub
in
sbb
xlat
sub
push
popa
push
stos
pop
adc
sub
inc
dec
lods
movsl
jge
mov
fldl
and
xor
mov
pop
adc
mov
jne
cltd
xor
movsb
hlt
scas
dec
adc
push
pop
das
sbb
inc
icebp
sbb
inc
cmovl
fdivrl
mov
lods
lcall
dec
push
xlat
mov
dec
mov
jle
inc
inc
add
gs
pop
lret
ret
jl
push
xchg
pop
push
adc
bound
jle
pop
jmp
add
js
test
or
adc
push
jae
xchg
inc
sbb
xchg
ret
mov
outsl
sti
add
or
and
or
fs
sub
add
mov
pushf
inc
int3
mov
xor
movsl
sti
bound
mov
adc
cmpsl
mov
dec
pop
scas
shl
addr16
cmp
sub
sarl
aam
xchg
adcl
mov
pop
push
pop
repz
loopne
imul
adc
jmp
outsb
out
jo
ja
fldcw
jno
inc
sub
sbb
out
rcll
dec
or
fwait
mov
repnz
js
out
sbb
mov
ja
cmp
lahf
aam
mov
mov
mov
sbb
aaa
cltd
push
ss
ljmp
in
int
dec
pop
and
pop
mov
xor
fucomip
adc
fnsave
addr16
dec
xchg
pushl
test
inc
push
outsb
sbb
adc
dec
arpl
push
iret
xchg
sbb
daa
stos
jp
mov
cmp
aaa
rorl
or
nop
pop
jg
dec
and
xor
cmp
sub
jg
mov
lret
jae
push
jo
and
xchg
adc
mov
xchg
test
sar
out
pop
or
call
dec
ljmp
gs
lcall
mov
test
or
flds
ret
or
sub
fldenv
test
jae
push
ret
pop
dec
mov
mov
push
xchg
loop
call
test
xchg
mov
push
clc
fwait
stc
adc
aad
cld
icebp
cmpsl
test
aam
inc
out
xchg
outsb
mov
cltd
popa
or
test
std
dec
ss
arpl
adc
push
lahf
out
ficoml
sub
xor
jo
inc
hlt
aam
push
jbe
sbb
inc
add
mov
leave
and
stc
mov
adc
add
mov
lret
pusha
sub
repnz
adc
stc
lcall
mov
in
jb
lds
adc
pop
clc
or
push
and
jns
ficomps
lret
sub
and
in
pusha
lret
pop
repz
and
outsb
cmp
mov
outsl
mov
cmp
aam
sti
adc
outsl
fisttpl
cmpsb
fcomp
jecxz
pop
xchg
mov
jecxz
and
fstpt
sub
ret
bound
push
jge
push
xchg
sbb
inc
out
insb
sahf
cmp
cmp
je
fisttps
popa
sub
adc
outsl
push
and
cmp
cmc
push
inc
jno
gs
mov
imul
sbb
imul
test
stos
stos
fnstcw
popf
sub
jne
repnz
cmc
je
test
outsl
arpl
insb
mov
inc
xor
dec
int3
adc
and
fbstp
scas
mov
loopne
hlt
sub
adc
xchg
test
loopne
outsl
adc
cld
and
pop
xchg
in
in
dec
pop
xor
out
pop
aad
shlb
jne
sbb
inc
xchg
push
lret
scas
aad
inc
jecxz
sar
push
add
frstor
xchg
push
fcom
or
ja
mov
sub
lods
scas
inc
inc
das
mov
jge
loop
stos
cmp
out
outsl
ret
loopne
aam
lret
test
enter
sub
push
mov
adc
pusha
stos
inc
addr16
cmp
lods
sbb
cmc
mov
mov
mov
in
outsb
cmp
push
mov
push
dec
xor
cmpsb
and
data16
mov
cwtl
insb
imull
stc
test
out
into
sbb
test
aad
arpl
pusha
or
inc
movsl
insl
xlat
mov
dec
mov
push
or
dec
scas
test
dec
out
inc
xor
mov
notl
pop
out
jp
aad
shlb
ss
sbb
cmpsl
cmp
dec
mov
sub
fcomi
daa
xchg
stos
and
push
fbld
or
mov
ret
xchg
roll
cmpsb
rolb
icebp
xor
in
adcl
pusha
dec
cwtl
mov
jge
cmp
lahf
adcl
pop
sarl
sub
insb
add
pop
pop
loopne
xor
insb
imul
ss
cli
sub
add
and
leave
xchg
cld
nop
idivl
fmull
leave
rcrl
outsb
in
xlat
movsb
mov
test
rolb
cmp
pushf
jns
insl
sti
popf
popf
adc
xchg
pop
pop
inc
dec
jg
cmpsb
ds
shl
sbb
hlt
mov
pop
nop
sbb
mov
lea
mov
or
cli
insb
pushf
mov
xor
lds
pop
mov
sub
inc
xor
cli
icebp
shl
jecxz
mov
fisttps
jle
orl
jmp
xlat
mov
jle
gs
test
mov
inc
cmp
push
jno
stos
nop
out
push
fimuls
and
mov
xlat
push
xchg
fimuls
xor
clc
mov
lods
scas
fsubrs
sarl
pop
push
mov
xchg
enter
jl
inc
lds
shl
jnp
jne
cmp
and
mov
pop
mov
cwtl
js
sti
mov
cmp
mov
jnp
add
push
mov
jge
in
out
lods
mov
and
push
xor
adc
scas
and
pop
fisttps
iret
sub
inc
cmp
mov
xor
dec
addr16
orb
adc
push
or
std
loope
inc
mov
pop
adc
adc
jecxz
dec
mov
imull
add
in
std
out
dec
sbb
or
pop
mov
xchg
leave
xor
push
out
iret
mov
and
rcll
repz
lea
repz
mov
adc
hlt
insb
pop
jecxz
and
pop
mov
mov
int
inc
clc
mov
out
mov
sub
lret
rorb
pop
xchg
sub
pop
mov
cmp
out
ror
mov
mov
mov
insb
andb
imul
cmc
cmp
mov
sub
mov
insb
aaa
arpl
sahf
cmp
mov
aad
js
notb
imul
push
addr16
push
lock
fadds
icebp
jns
scas
pop
mov
dec
dec
in
imul
sub
out
loope
es
loop
pop
in
ja
stos
sub
es
jecxz
jbe
cmc
popa
mov
cmp
pop
call
adcl
push
pop
dec
mov
int3
es
pop
outsb
dec
xchg
aad
mov
negb
mov
adc
sub
incb
pop
push
sub
pop
lds
test
popf
insl
leave
jnp
mov
cmp
push
movsb
clc
leave
ds
mov
popa
rorb
scas
inc
sbb
addl
fstl
lret
stos
sbb
mov
jp
inc
imul
sbb
cmp
into
test
lret
jp
fisubrs
add
jae
adc
lock
stos
xorb
sbbb
jl
inc
movsb
test
xchg
pop
gs
loopne
fwait
out
cmpsl
in
rorl
nop
mov
mov
and
mulb
rolb
imul
es
xlat
mov
pop
testb
mov
call
or
add
jne
data16
into
bound
arpl
aad
mov
inc
test
les
xchg
test
sbb
push
stos
sub
sub
fldcw
lock
mov
jo
inc
push
mov
movl
cmp
and
push
leave
lcall
add
mov
jl
mov
les
cltd
dec
xchg
stos
cmp
xor
xor
pop
stc
xor
addr16
inc
ret
mov
ds
mov
rcr
xor
cld
js
fdivs
push
ret
ret
cwtl
push
adc
imul
push
int
shrb
xchg
pop
sbb
cmp
pop
dec
shl
imull
sbb
push
mov
insb
push
pushf
adc
es
mov
retw
repnz
sub
test
out
sbb
cmp
pop
inc
mov
adc
xchg
adc
xchg
push
dec
repz
cmpsb
dec
lcall
mov
push
js
scas
int
pop
xor
inc
mov
repz
xchg
pop
dec
inc
je
lock
aaa
add
outsl
and
call
xchg
test
push
in
inc
nop
jmp
aaa
das
push
addr16
xchg
jl
cmp
faddl
js
daa
out
jmp
js
mov
fcoms
jne
in
mov
test
orb
addr16
jecxz
dec
jno
enter
ds
xchg
lret
mov
mov
mov
sbb
loop
dec
xor
insb
ret
ja
rorb
lret
sti
xchg
adc
dec
jp
addr16
and
nop
test
xchg
sub
cmc
inc
cmpsb
je
sbb
cwtl
push
test
push
shl
stc
jge
gs
cmp
movsb
lret
movsb
cld
xchg
pop
movsb
sub
xchg
push
arpl
out
jg
or
aaa
lods
mov
mov
cmp
fdivrl
out
js
cmpsl
xchg
bound
loope
fwait
cmp
lcall
ja
sbb
pop
xchg
mov
data16
mov
test
pushf
mov
les
add
int3
daa
xchg
cmpsb
ds
add
lds
inc
mov
in
mov
out
fsub
hlt
pop
roll
ljmp
push
ret
inc
js
movsl
push
sbb
mov
xchg
jge
sbb
and
or
mov
push
cmp
add
push
push
push
and
bound
cmp
mov
fildll
sub
pusha
hlt
mov
mov
lcall
inc
pusha
adc
iret
xchg
cld
add
mov
sarl
gs
xchg
jne
cmp
pop
loop
xchg
lcall
lock
xchg
nop
push
lret
adc
jle
popa
jecxz
iret
fs
jle
cmc
push
loopne
sbb
clc
mov
push
ss
add
push
stos
add
adc
pop
lea
sub
sub
es
mov
jnp
cltd
jo
cmpsl
lods
and
dec
mov
mov
sbb
movsl
inc
out
xor
adc
cmpl
sbb
sbb
push
icebp
sahf
out
mov
add
lea
jp
in
xchg
in
cmpsl
mov
loope
xchg
pop
sbb
fcoms
pop
test
dec
and
stos
mov
in
push
aas
sbbb
pop
or
or
ljmp
cmp
lods
es
adc
push
sti
cmp
popf
inc
mov
dec
iret
out
movsl
mov
arpl
subb
call
flds
mov
mov
mov
sub
ret
sti
push
dec
dec
scas
in
and
xor
push
mov
hlt
sub
mov
jbe
lods
xor
and
stos
dec
les
in
aam
test
xor
test
or
test
cmpb
sbb
test
idivb
pop
sub
ret
rolb
xchg
mov
mov
cltd
add
les
inc
sbb
cltd
dec
sbb
dec
inc
jb
jmp
or
sbb
mov
dec
pop
leave
push
mov
add
mov
not
inc
mov
ds
aad
test
xchg
out
pop
lods
insl
xchg
xchg
mov
cmc
lret
jmp
dec
enter
gs
or
dec
arpl
mov
imul
mov
aas
ss
idiv
lret
mov
mov
nop
outsl
xchg
jno
pop
data16
xor
ja
mov
push
xor
jne
pop
xlat
lret
addb
ja
shrb
adc
cmp
xlat
lcall
push
xchg
mov
addr16
gs
jns
out
lea
or
inc
mov
lock
and
xchg
and
iret
add
push
jbe
scas
outsb
adc
sahf
pushf
push
push
and
jae
mov
mov
or
sub
loope
scas
shll
cmp
mov
daa
enter
addr16
jmp
hlt
pop
mov
sub
bound
lods
sub
stos
jne
push
xchg
insl
pop
dec
ljmp
aam
inc
rcll
push
ds
hlt
adc
out
mov
repnz
lcall
les
fstpl
aad
dec
je
std
sbb
pusha
add
in
mov
dec
aaa
inc
xor
pusha
cmp
sbb
imul
push
inc
sub
cmp
mov
leave
sbb
add
rorl
data16
mov
stc
cltd
test
sarl
aaa
or
int3
fiaddl
push
mov
jo
sbb
pop
jno
and
lcall
ffreep
ret
dec
pop
shl
nop
call
mov
fwait
xor
cmpb
mov
test
mov
loope
outsl
adc
add
movsb
rorb
push
std
leave
shlb
out
roll
je
js
push
jno
sbb
add
aam
push
inc
arpl
adc
or
out
or
pop
dec
in
dec
sbb
pop
push
sub
xchg
cmpb
inc
outsl
push
movsl
test
xchg
out
cltd
lods
sbb
rcll
dec
pop
inc
bound
inc
bound
shlb
popf
pushf
stc
rcrl
or
jb
loop
mov
mov
aaa
mov
pop
js
xor
dec
sti
sbb
jbe
mov
jnp
cmp
add
inc
sbb
mov
clc
rclb
push
ret
daa
push
bound
xchg
arpl
cmp
push
decb
xchg
jl
xchg
mov
enter
dec
xchg
ljmp
pop
int
das
aaa
stc
xchg
xor
xchg
mov
pop
mov
sti
adc
jp
call
sub
movsb
sub
xchg
pop
sti
xchg
repnz
jmp
adc
adc
and
enter
or
enter
push
sysenter
inc
adc
hlt
mov
cmc
fcomp
xor
pop
aaa
fwait
sub
out
call
aas
lods
mov
out
sti
lea
daa
mov
or
cmovne
aaa
mov
rorl
jmp
repnz
inc
cmp
push
mov
into
sub
xor
sbb
aad
mov
xor
or
les
push
pop
fmull
scas
insl
xchg
or
mov
lret
lods
and
mov
xchg
inc
dec
mov
dec
aas
out
dec
mov
addr16
outsl
mov
inc
icebp
das
scas
or
or
sbb
push
push
addr16
or
inc
hlt
loop
mov
add
test
sub
adc
ljmp
dec
mov
imulb
sbb
mov
mov
flds
gs
dec
pop
lods
xchg
mov
inc
inc
sub
aad
push
shrl
decb
mov
aad
mov
iret
push
cmp
inc
cmp
dec
imul
adc
das
xorl
push
les
fdivr
pop
pop
cmp
mov
pop
push
dec
in
push
mov
jno
xor
fmull
je
test
jge
dec
inc
push
add
xchg
add
shrl
test
es
stos
shufps
jb
arpl
push
xor
jl
dec
lret
pop
rcrl
sbb
clc
sbb
pushf
fadds
cwtl
sbb
and
lret
sub
enter
repnz
cmp
mov
ds
mov
jl
test
call
stc
and
pop
sbb
or
ret
lcall
out
and
sbb
push
test
push
mov
imul
rcll
pop
mov
cmp
out
rorl
cli
and
sbb
fucomip
arpl
mov
sub
cwtl
pop
mov
inc
add
push
aas
adc
xchg
mov
xlat
pop
nop
fsincos
add
xchg
add
insl
xor
xor
sub
nop
and
aas
lcall
lods
js
divl
xor
jge
ds
cmpsl
pop
insb
or
stos
pop
pop
lahf
imul
icebp
jns
or
sub
push
rcr
sti
les
add
push
shll
xchg
outsl
adc
xor
scas
or
mov
sahf
jp
lcall
loop
or
ret
nop
or
pop
stc
jne
addl
mov
movsb
jb
sub
stc
sbb
movsl
aas
sub
cli
cmp
mov
cmpl
pop
and
aad
cs
inc
and
mov
mov
stc
lahf
scas
adcl
ss
fists
or
cld
jp
xchg
dec
cmp
or
jo
ret
jmp
xchg
imull
stos
arpl
lahf
movsl
push
scas
adc
ja
dec
ret
pusha
sub
jle
xor
push
and
adc
out
in
dec
cmp
ret
push
outsb
repz
rcr
aas
mov
cli
sub
les
add
or
dec
cs
sub
and
mov
loop
fucom
stos
push
jle
jns
or
inc
sub
cli
xor
xchg
cld
mov
cmp
rcll
xor
cs
push
push
or
lret
jecxz
lock
cli
mov
or
cmp
gs
push
insl
ftst
scas
je
adc
enter
cmp
mov
xchg
cld
xchg
shl
jnp
test
mov
ret
pusha
inc
push
fadd
ret
lret
jne
hlt
mov
cmp
or
push
ja
dec
mulb
and
scas
enter
rorl
and
sub
rol
xchg
fsub
push
hlt
fadds
add
cmpsl
push
fimuls
push
xor
mov
fisubrl
in
cmpsb
inc
lret
ljmp
gs
lock
jge
or
inc
bnd
inc
or
enter
dec
mov
nop
lcall
push
xchg
inc
or
fisubrl
outsl
mov
and
loop
stos
pop
scas
push
mov
adc
mov
dec
dec
mov
mov
mov
jae
sbb
shlb
mov
cmp
loop
push
out
movsl
pop
shr
sub
loop
dec
fidivs
std
dec
mov
dec
mov
xchg
cltd
adc
xchg
mov
arpl
xchg
sub
cwtl
sbb
mov
cmpsb
subl
xor
test
cmp
and
xor
add
cmp
xor
roll
in
or
or
mov
pop
xchg
pop
xlat
adc
ljmpw
push
dec
mov
mov
mov
insl
mov
scas
push
loopne
in
pop
loop
xorl
xlat
fdivl
dec
lret
clc
pop
pop
lahf
icebp
sub
mov
xchg
popf
sbb
std
mov
aas
aas
dec
push
add
loopne
push
xor
mov
pop
loope
push
enter
dec
mov
mov
pop
ljmp
mov
add
in
xchg
mov
arpl
xor
inc
jnp
sub
sbb
mov
in
and
sub
xchg
shl
cli
movsl
jnp
test
js
fwait
xchg
ret
ljmp
cmpsb
mov
arpl
inc
and
imul
push
insb
or
movsb
cmpsb
mov
push
ja
or
mov
jae
push
fidivrl
repz
sarl
push
push
fildll
jno
sub
sbb
scas
sbb
addb
inc
add
insb
or
push
loop
adc
jo
xchg
popf
and
loope
je
mov
cltd
cltd
mov
dec
xlat
fisubrs
jl
push
imul
mov
ficompl
sub
test
and
out
pop
sub
fsts
fs
or
ret
imul
mov
or
dec
push
fisttpl
outsl
push
das
daa
aam
mov
and
xchg
sbb
and
dec
dec
popa
out
sub
lcall
mov
jge
movsl
inc
mov
mov
dec
inc
sub
adc
mov
pop
or
lods
push
push
or
fldcw
cmp
and
repz
inc
addb
leave
test
add
daa
jbe
out
inc
pop
mov
add
ret
cmpsl
les
xchg
fsubl
mov
sbb
dec
jl
leave
xor
shr
shlb
dec
inc
ret
in
cmp
inc
push
lcall
mov
fcmove
out
sub
test
fdivs
adc
inc
lret
dec
outsl
test
int
mov
xchg
push
es
mov
jo
outsl
mov
mov
xchg
jns
in
dec
cmp
aaa
ja
fldl
mov
push
push
mov
lcall
mov
cmp
fnstsw
dec
mov
dec
out
push
lret
icebp
jmp
jmp
push
test
push
in
enter
sub
cmp
les
aam
in
sub
xchg
mov
adc
sbb
fs
push
cli
sub
add
data16
sub
jbe
cmp
fwait
cmpb
data16
shll
or
aas
mov
outsl
pop
in
push
sub
push
pop
jg
sbb
lcall
icebp
or
mov
loopne
repz
mov
in
add
jmp
andl
lcall
cmpsl
jmp
stos
xor
in
jge
mov
lods
xchg
and
rclb
das
jle
call
lock
ret
pop
insl
dec
sub
xor
int3
popa
pop
cmp
scas
jecxz
jl
ret
and
jo
adc
xor
dec
nop
frstor
scas
sti
mov
mov
and
dec
test
pop
sbb
cmpsl
cmp
sahf
cmp
xor
push
fbld
stc
pop
ret
sub
pop
loopne
das
mov
fcomps
test
inc
mov
adc
gs
in
cmp
out
sti
xchg
test
mov
or
dec
cmpsb
and
sub
jae
pop
pop
pop
data16
pop
dec
scas
stos
push
fwait
sub
inc
pop
jno
mov
fisubrl
push
lods
shl
xchg
sti
cs
pop
idivb
shr
jns
mov
mov
and
arpl
je
enter
sub
lret
mov
mov
imul
outsl
mov
push
loopne
in
cmpsb
pushf
aas
cmp
mov
sub
mov
aaa
add
aas
rcll
adc
ljmp
xor
xchg
adc
xor
in
mov
sbb
or
cmp
adc
aaa
lret
in
rcrb
mov
adc
stc
mov
orl
daa
inc
cmp
sti
adc
js
ret
repnz
push
fimull
jno
imul
pop
adc
mov
adc
js
sub
loope
mov
mov
add
push
mov
loopne
call
sarb
dec
je
je
push
pop
cmpsb
pop
js
mov
mov
std
xor
lods
jle
jo
mov
mov
repz
in
insb
sarb
mov
roll
inc
xor
inc
xchg
outsl
lods
mov
push
dec
mov
sub
push
mov
push
insb
sub
in
popf
mov
addb
iret
insb
or
ljmp
sbb
sbb
mov
mov
cs
rclb
lret
lods
std
push
dec
ds
mov
lock
jbe
das
jbe
push
push
dec
aas
mov
inc
out
out
mov
in
insb
je
loope
gs
fs
mov
ss
inc
pop
loope
jae
xchg
daa
jge
inc
ss
pop
mov
in
clc
mov
popf
inc
lea
frstor
xchg
xchg
dec
push
inc
pusha
jp
adc
leave
or
mov
mov
imul
sbb
shrb
sub
xlat
int3
lret
ds
in
mov
push
int3
arpl
mov
mov
imul
insl
test
adcl
gs
xchg
lret
adc
mov
dec
jnp
xchg
lock
rcrb
das
lock
mov
mov
sub
cltd
dec
imul
dec
sbb
push
hlt
or
cmp
out
push
rorl
jg
mov
sub
cmp
mov
fistl
leave
cmc
ret
push
shlb
nop
add
cli
cli
stc
jns
sub
je
clc
sbb
outsl
cs
test
sub
mov
cmpsb
repz
and
mov
add
xchg
push
jl
int
push
mov
les
cs
inc
movsb
adc
jns,pn
scas
mov
mov
adc
je
add
aas
add
jl
repnz
cli
inc
mov
movsl
sub
in
xor
cmc
pop
adc
adc
mov
div
cltd
cwtl
sahf
or
loope
std
xor
js
movsl
aaa
cli
lcall
jmp
adc
xor
hlt
mov
aaa
outsb
push
call
mov
mov
inc
cwtl
sub
sti
pusha
push
out
loop
leave
sbb
push
fwait
in
repz
ficomps
je
cmp
movsl
cmpsb
cmpsb
dec
add
movsl
in
lret
inc
fs
pop
jl
lods
cmp
es
into
mov
divb
daa
imul
outsl
lret
pop
in
inc
sbb
adcl
mov
dec
scas
mov
and
lcall
decl
cld
lcall
fs
pusha
lret
sbb
push
loopne
lock
xchg
mov
and
push
stc
cs
in
jle
xchg
ja
mov
scas
jmp
sti
push
jmp
xor
mov
lret
movsl
pusha
xor
loope
or
and
leave
rorl
fisubl
stc
adc
hlt
mov
cmp
lret
aam
cmp
rcll
dec
mov
sub
push
jns
nop
mov
dec
pusha
add
cltd
sub
movsl
movsb
int
adc
enter
aaa
in
negl
shll
push
cmpsl
dec
push
pop
sub
popf
mov
gs
repz
or
jl
out
decb
call
mov
mov
sub
adc
jae
or
pusha
xchg
js
movsl
or
inc
gs
lock
pop
or
mov
sbb
out
daa
xor
xchg
ja
pushf
fcomp
stos
mov
bound
and
xor
mov
iret
xlat
mov
inc
pop
bound
jne
mov
and
aas
stc
into
pop
xor
fstl
sbb
and
out
adc
jo
aas
inc
pop
mov
mov
jae
mov
pop
xchg
shrl
mov
cli
js
xchg
push
pop
sbb
jl
imul
insb
inc
xchg
in
inc
sarb
scas
inc
sub
ss
test
aaa
xchg
sbb
add
mov
and
lcall
add
ret
scas
xor
lock
add
int3
push
push
or
or
push
jb
cmp
adc
jnp
inc
mov
inc
repnz
mov
es
xlat
inc
jmp
jg
ja
xchg
test
std
and
lea
xchg
mov
add
clc
pop
into
mov
xchg
and
mov
sbb
aam
jbe
stc
loop
bound
pop
sbb
xor
clc
push
or
bound
lods
sbb
push
fs
push
push
mov
xor
data16
pop
or
stos
or
sbb
addr16
pushf
cmpsb
jns
aaa
enter
imul
adc
mov
pop
push
add
add
repnz
fidivs
clc
xchg
ror
lods
stc
mov
xor
mov
cld
push
mov
inc
fldenv
jns
cmpsb
dec
int
int3
subb
pop
sbb
or
jbe
mov
push
sub
adc
addb
push
fcoml
and
mov
dec
xchg
mov
xchg
out
in
mov
shll
push
mov
fildl
daa
xor
shll
mov
je
xchg
jno
sbb
push
lods
sbb
jno
jbe
popf
or
rolb
aas
lahf
into
pusha
dec
inc
pop
daa
lret
inc
cmp
ficompl
lret
adc
xchg
mov
jl
cmp
movsl
bound
movsl
ror
inc
loop
jmp
cmp
movsb
jbe
cmpsl
jo
xchg
div
mov
inc
retw
mov
add
or
div
mov
pop
xor
lahf
add
mov
and
stos
sub
js
xor
adc
addr16
adc
lods
cmp
jbe
inc
cmp
adc
int3
add
pushf
adc
pop
inc
cmp
mov
testb
xchg
data16
and
sbb
test
jg
imul
jo
push
test
inc
and
cld
adc
int3
mov
fcompl
xchg
cmp
or
loopne
call
adc
or
push
add
xchg
leave
je
and
cmc
add
cltd
outsb
or
and
test
mov
mov
or
xor
test
or
movsb
mov
pusha
imul
mov
jo
jbe
fdivs
adc
sub
stc
dec
lods
or
add
cmc
xor
inc
std
mov
ret
xor
cli
sub
gs
mov
mov
xchg
sbb
nop
pop
dec
sub
ret
pop
in
clc
xor
cli
pop
hlt
jns
loop
lret
sti
jb
mov
sarb
loop
fsub
lret
xchg
popa
repnz
jb
push
push
xchg
lcall
insb
push
push
cwtl
loope
aas
dec
mov
adc
into
push
jecxz
sbb
mov
aas
xchg
dec
ret
mov
scas
mov
das
add
xor
gs
mov
in
or
les
cmpsl
xchg
sub
popa
lret
shll
mov
aad
xlat
nop
push
push
cmc
sbb
pop
jb
fs
sbb
inc
adc
xor
jb
lods
test
rolb
jo
sub
jnp
in
adc
push
cmp
adc
inc
fistpl
xchg
push
mov
stos
sahf
cltd
push
hlt
adc
in
stos
cltd
mov
inc
pop
push
pop
lock
pusha
sbb
mov
jmp
lahf
es
adc
iret
in
movsl
dec
inc
adcb
adc
xor
xor
mov
lret
fdivrl
pop
cmp
xor
pop
cld
mov
mov
jg
int3
and
popf
sbbb
fwait
xor
push
xchg
adc
push
push
mov
and
cmpsb
cmp
and
out
mov
sti
xchg
cld
dec
jae
sbb
test
int3
jno
lods
je
mov
jnp
sub
adcl
sbb
pop
lods
fistpll
xchg
mov
divb
jle
mov
add
fwait
sbb
lods
jge
addr16
jp
mov
int3
pop
mov
sub
and
leave
stos
adc
mov
xor
cmpsb
sub
adc
or
call
inc
ss
push
movl
mov
push
jg
testb
je
inc
mov
pop
dec
rcll
xchg
clc
scas
push
pop
bound
xor
cmp
out
data16
mov
mov
std
aaa
cmp
int
push
pushf
push
ljmp
jge
sbb
xor
push
cmp
or
push
mov
dec
je
jp
sahf
insb
sbb
insb
aas
ss
xor
lret
adc
lret
lret
movsl
pop
repnz
push
adc
pop
vpsubsb
lods
shrb
sbb
jae
int
popa
ret
sub
jbe
xchg
xchg
add
pop
cwtl
xchg
ret
and
pop
mov
ret
fldcw
cmp
cmpsl
jp
cwtl
imul
pop
imul
jne
clc
mov
xorb
inc
loopne
push
mov
adc
ret
cs
jp
scas
hlt
sbb
lea
insb
pop
jo
dec
ficoms
loope
ret
pop
cs
jp
cs
in
push
inc
pushf
arpl
mov
dec
cmpsb
xchg
fmull
mov
lds
insb
or
stc
push
cs
and
jle
insl
mov
in
add
jns
xchg
dec
js
inc
dec
testb
daa
push
or
fistl
sbb
push
inc
loopne
sbb
clts
adc
rorb
scas
call
inc
push
and
dec
cmpsb
mov
mov
sti
cwtl
outsl
pop
repnz
jl
fwait
inc
cmp
mov
add
hlt
add
call
dec
test
push
clc
cld
adc
in
jbe
jb
fsubs
add
push
aas
es
aas
call
add
inc
push
fdivrs
xor
push
jae
ss
pop
adc
sahf
adc
je
movsb
mov
movsb
fisubs
sbb
icebp
push
push
mov
sub
ja
push
inc
mov
scas
inc
lret
add
adc
movl
rorb
shl
cmp
or
iret
xchg
insb
cmp
sbb
push
rolb
jnp
bound
cmpsb
fists
clc
mov
xlat
icebp
lods
sarb
dec
shrl
and
test
mov
test
or
add
call
hlt
push
in
cmp
add
outsb
cltd
movsl
mov
inc
adc
mov
cld
insb
dec
in
fwait
mov
cmp
add
cltd
push
out
and
cwtl
repnz
mull
in
push
rcr
imul
fldt
ss
sub
sbbb
bnd
dec
jo
and
or
add
dec
sbb
jae
adc
sub
mov
imul
xchg
outsb
adc
inc
sbb
jecxz
cltd
ja
cwtl
sub
fdivrp
adc
mov
xor
fisubrl
xchg
xchg
mov
sub
or
sub
out
and
jmp
jecxz
xor
push
stos
sub
mov
lea
and
push
push
pop
dec
add
enter
dec
mov
sub
cld
jns
ljmp
into
testl
adc
add
pop
repnz
loopne
addl
cmpsl
xor
mov
mov
daa
andl
inc
push
nop
fildll
imul
mov
mov
or
jbe
sbb
or
dec
fmuls
sbb
mov
adc
pop
test
iret
xor
mov
jbe
ret
or
rol
dec
add
ret
cwtl
loope
push
lods
insl
je
sbb
leave
inc
mov
pop
loop
push
xor
mov
mov
rorl
jg
add
fcoml
test
inc
jge
inc
jl
mov
mov
cmp
test
lods
in
sub
js
clc
pop
mov
pop
std
xchg
aas
mov
jmp
lret
and
out
jge
std
sub
pop
and
subb
inc
and
outsb
je
cltd
cmp
mov
mov
xchg
mov
xlat
xchg
mov
sub
hlt
add
mov
popf
popa
adc
fadds
push
ret
test
cmpsb
stos
jnp
std
dec
inc
pop
xchg
pop
sbb
aaa
cld
xchg
js
in
push
clc
push
push
mov
xor
push
cmc
mov
cmpsb
sbb
push
sbb
or
jno
adc
cmp
or
aaa
push
xor
dec
jg
movsb
mov
jl
and
fwait
mov
out
cmp
jmp
sub
mov
mov
cmp
rcll
inc
scas
lea
dec
jne
mov
xchg
mov
xor
cmp
dec
loope
mov
push
fdivp
inc
mov
fnstcw
addl
inc
xor
sub
xchg
insb
daa
cmp
jecxz
xor
and
xchg
popf
popf
gs
inc
cli
jge
sub
sub
sahf
movsb
orb
push
cmp
xor
push
push
pop
inc
stc
shlb
dec
sub
mov
jle
sti
jge
jbe
loope
imul
sub
ja
inc
dec
push
mov
jmp
lds
mov
das
out
dec
fucomp
dec
sahf
or
mov
xor
jnp
jl
shlb
or
pop
mov
outsb
icebp
xchg
fistpl
ret
loop
inc
or
lret
sbb
loopne
clc
jnp
adc
and
or
pop
rcr
jno
hlt
cmp
mov
js
repnz
pop
and
mov
or
testb
sbb
es
lock
cld
mov
sbb
inc
or
lea
jbe
out
xor
iret
repnz
push
cmp
jne
sbb
insl
inc
je
out
les
negl
shrb
xor
sbb
arpl
mov
cmp
and
mov
mov
and
xlat
mul
scas
mov
ds
lcall
jns
jecxz
xchg
pop
jne
sub
mov
lds
push
mov
xor
movsl
ljmp
or
pop
in
xor
mov
push
xchg
ljmp
rclb
push
out
mov
popf
bound
mov
test
lea
mov
mov
mov
mov
fsubl
mov
lcall
aas
lcall
aad
mov
lds
fwait
bound
cmp
imul
push
sbb
push
and
inc
xchg
and
jp
dec
addr16
cmpsl
jbe
xor
bound
and
dec
pop
or
jnp
mov
mov
repz
ja
inc
inc
scas
mov
cld
test
pop
mov
clc
adc
lcall
or
cmc
gs
inc
mov
mov
das
dec
jnp
or
shl
xor
pop
sbbl
jae
fprem1
ret
mov
out
shlb
call
xorb
pop
pop
push
xchg
or
mov
push
jo
push
bound
mov
jns
rcr
and
adc
mov
scas
ds
cmp
xchg
addr16
mov
pop
test
xor
mov
outsb
sti
shrl
mov
ret
sahf
scas
lret
movsb
xor
aas
mov
test
sbb
dec
stos
xlat
popa
xor
jle
pop
mov
lret
fisubrl
out
mov
jmp
lcall
jl
dec
minps
pop
cmp
js
mov
adc
jo
jns
roll
add
adcl
outsl
xor
sbb
in
aas
mov
xor
mov
pusha
xabort
sbb
stc
inc
out
mov
ss
push
fwait
push
jae
dec
daa
adc
jecxz
cwtl
test
jmp
pop
fsincos
ja
add
jnp
loop
mov
mov
mov
or
adc
pop
fldl
loopne
mov
in
mov
sub
cmp
push
jnp
dec
cmp
sbb
fs
mov
dec
mov
shl
cmp
shll
aam
mov
mov
jge
jbe
clc
mov
orb
add
aad
rcrb
push
jmp
and
jecxz
jge
sbb
aaa
fisubs
pushl
xchg
dec
inc
pop
and
mov
ret
sub
lock
mov
mov
fninit
xchg
and
push
movsb
and
xlat
sub
jb
xchg
int3
mov
sbb
push
mov
inc
inc
cmp
jmp
pop
lods
mov
or
nop
push
dec
popf
loope
mov
aad
sbb
testb
cmp
repz
cltd
sbb
mov
sbb
iret
mov
pusha
pop
dec
ret
and
subb
push
mov
sbb
stos
jecxz
mov
testl
test
icebp
cmpsl
aad
push
mov
test
jb
nop
jge
je
add
adcl
imul
cmpsb
test
push
mov
fildl
pop
ret
lret
out
aam
mov
les
sbb
insl
or
jl
xchg
mov
rolb
push
mov
data16
call
pop
lcall
arpl
mov
stc
push
or
pusha
push
cs
stc
js
mov
inc
push
xchg
clc
push
insb
xchg
mov
scas
inc
dec
imul
push
stos
or
cmp
rcrb
and
clc
or
sti
dec
jo
lds
divb
fldl
fcompl
mov
sbb
and
pop
fwait
adc
pop
mov
xchg
aaa
shr
jae
stos
out
push
test
and
pop
loop
imul
insb
lahf
jns
inc
or
xchg
pop
push
mov
sbb
inc
int3
ret
icebp
inc
jae
testl
imul
sarb
es
in
pop
scas
rcl
insb
pop
sbb
jbe
div
cmp
and
sub
mov
adc
mov
inc
or
cmp
adc
mov
shlb
popa
arpl
and
mov
sub
test
fdivrp
mov
daa
daa
mov
ror
les
adc
xor
sbb
lahf
mov
jmp
bound
push
push
inc
std
add
xchg
cs
shlb
cmpsl
pop
cmp
adc
fcmovne
xchg
dec
cwtl
mov
dec
push
mov
adc
push
sbb
jno
mov
popa
cmp
mov
lea
frstor
daa
mov
jmp
dec
imul
or
cltd
mov
mov
dec
mov
inc
das
push
and
jg
lods
sub
or
pop
dec
cmpsb
xor
jbe
mov
jl
jb
stos
pop
stos
es
mov
jg
arpl
lods
xchg
rolb
mov
sub
into
push
mov
aad
sub
dec
mov
paddsb
fisttpl
xor
inc
xor
push
add
outsb
data16
adc
js
loope
xor
sub
call
pop
dec
scas
jl
cmp
sbb
int
add
stos
lret
into
mov
mov
sbb
mov
loope
ss
xlat
sub
or
xor
xor
xchg
or
dec
repz
test
pusha
imul
lock
js
pop
and
mov
es
dec
jmp
jmp
sbb
and
inc
jle
bound
loopne
jl
fsubl
cmpb
loopne
lahf
cs
test
jns
notl
cmpsb
in
cmp
add
or
lods
adc
adc
out
shlb
loop
xchg
push
inc
popa
fs
push
std
add
clc
xchg
clc
mov
fs
and
in
dec
aam
testl
mov
inc
test
cs
mov
pop
jns
or
push
add
sbb
out
xor
dec
lea
add
xchg
push
mov
xchg
data16
cld
inc
jle
pop
jle
xchg
sarl
stos
jmp
fucomp
dec
aaa
popf
jge
data16
testl
cmp
movsb
add
xor
cmp
daa
mov
jne
sbb
ret
sub
cmpsl
mov
gs
push
aam
cmpsb
mov
dec
push
sub
mov
data16
loop
adc
mov
sbb
dec
mov
sbb
sub
js
xor
test
nop
adcl
jge
cmp
xchg
pop
jecxz
clc
mov
int3
imul
mov
add
and
push
adc
and
fmull
mov
mov
xor
mov
int
stos
pusha
mov
aam
test
mov
lahf
cltd
insb
dec
or
movsl
sub
mov
pop
xchg
mov
lret
stos
mov
lcall
sbb
xchg
lds
dec
andl
cli
ds
outsb
cwtl
lods
hlt
fsub
sbb
std
mov
ljmp
int3
in
ret
inc
sub
mov
xchg
inc
cmp
pop
inc
std
cmp
xor
outsb
push
hlt
lret
sub
jmp
and
add
shrl
outsl
xchg
jp
sbb
pushf
push
rcrb
sahf
and
mov
popf
jnp
mov
dec
lods
lods
mov
mov
arpl
mov
inc
fstpl
sahf
or
mov
and
and
mov
inc
out
xor
sub
in
out
adc
mov
mov
stos
push
mov
leave
sbb
lock
jle
mov
imul
jg
sbb
cmp
jbe
int
scas
std
dec
pop
test
sub
fidivs
in
mov
fists
lock
or
xchg
in
adc
test
imul
mov
lds
dec
dec
aam
fwait
loopne
dec
add
fidivs
push
or
mov
xchg
dec
mov
pop
or
js
fimuls
add
rorb
fldt
sub
dec
dec
cmp
fbstp
xchg
in
or
lcall
sarb
xchg
mov
mov
or
cli
test
push
negl
shlb
mov
out
push
dec
push
dec
sub
sbb
int
aaa
test
jae
mov
repnz
dec
lea
fs
or
mov
mov
xlat
inc
inc
in
lret
and
pop
sub
int3
and
pusha
dec
movsl
mov
in
cmpsl
mov
dec
mov
hlt
pusha
jecxz
enter
mov
outsl
xchg
je
std
outsb
test
lods
lods
lcall
or
outsl
dec
cmp
inc
xor
pusha
mov
into
mov
jnp
bound
sub
push
testl
pop
dec
sarb
add
arpl
jb
sbb
outsb
mov
mov
pop
js
push
ja
inc
dec
mov
scas
lea
nop
push
outsb
sti
xchg
outsl
mov
sbb
push
data16
inc
push
imul
das
inc
data16
mov
incb
jne
popa
pop
or
and
pop
pushf
int3
outsl
jmp
sbb
gs
and
jns
es
int3
dec
daa
loope
or
jmp
mov
or
inc
imul
xor
imull
add
aas
dec
jb
hlt
sub
ror
jmp
icebp
gs
mov
inc
mov
sbb
js
out
jecxz
jno
jg
sub
sbb
xchg
les
jmp
push
jns
mov
pop
in
pop
jg
inc
push
nop
mov
ret
dec
call
pop
mov
pop
pop
mov
rcll
ret
xor
mov
xchg
cmp
jae
aaa
int3
ss
daa
push
xor
iret
and
adc
pop
cltd
cmp
shl
jnp
pop
jb
mov
adc
icebp
cmpsl
jae
imul
mov
jns
rcrb
xor
movsl
addb
xchg
iret
fsub
sub
push
adc
cltd
stos
jmp
and
or
lea
xlat
iret
push
jne
repnz
mov
or
mov
psubusb
ficoms
loopne
jno
xchg
out
mov
sub
xchg
xlat
std
cmp
xchg
outsb
dec
jbe
fldenv
les
leave
dec
xchg
lods
repz
outsl
daa
into
or
imul
shll
cmp
xchg
lods
in
cli
lahf
icebp
inc
inc
adc
cmp
mov
mov
inc
shr
rolb
xor
movsl
aad
imul
pop
sbb
xchg
xchg
sub
xchg
jae
cmp
shrb
stos
mov
mov
pushf
xchg
or
addps
rorl
sbb
fucom
cmp
push
cmp
loope
push
add
lds
dec
jns
cmpl
hlt
xchg
fadd
or
das
lcall
mov
loop
lods
out
xor
mov
cld
jo
pop
xchg
jae
jae
dec
push
nop
jno
push
jmp
mov
loope
inc
hlt
movsl
mov
cmp
mov
adc
or
jecxz
arpl
enter
wrmsr
movsl
mov
in
xor
pop
loopne
dec
and
add
fisttpll
icebp
in
ds
mov
out
mov
bound
dec
xchg
pop
loopne
into
clc
and
cltd
mov
insl
mov
mov
jmp
push
mov
sub
out
push
aam
xor
add
mov
cmp
cmp
std
pop
testb
popa
imul
jb
inc
je
fcomp
fnsave
pop
stos
cmpsl
fcomip
pop
outsb
dec
ja
xchg
rcr
scas
js
ficompl
adc
out
fwait
xchg
cltd
bound
push
inc
sub
movb
pop
out
adcl
imul
test
mov
mov
out
imul
movsb
mov
test
sbb
out
or
stos
enter
jbe
pop
loop
cmc
xchg
pop
mov
pop
js
enter
xchg
push
jo
jno
cmp
and
mov
ds
jnp
mov
or
insl
or
sbb
dec
movb
cmpsb
pushf
es
add
fs
cmp
xor
mov
xor
xor
orb
adc
bound
cs
mov
in
in
test
mov
mov
ds
mov
decl
pop
fiadds
into
pop
pop
sti
sbb
cmpsb
adc
adc
ds
cwtl
xchg
negl
add
test
testl
ror
sbb
mov
imul
ljmp
out
repz
sbb
cmp
js
mov
pushf
mov
xor
enter
ret
adc
push
punpckldq
xchg
sbb
cmc
outsl
fs
dec
sti
incb
push
or
loope
stos
sarb
mov
lahf
pop
fiaddl
shll
cmp
mov
lcall
jne
mov
in
outsl
adc
cwtl
sbb
imul
jo
push
cmp
mov
xchg
adc
xor
das
and
mov
push
test
je
lds
lds
pop
stos
pusha
adc
int3
ja
fs
push
xor
arpl
hlt
data16
insb
push
out
push
dec
pop
xor
pop
not
jns
push
lods
mov
mov
gs
imul
leave
sbb
cltd
xor
xor
pushf
and
or
scas
xchg
xor
inc
fsubrl
loope
pop
or
mulb
fnsave
pop
cmp
jnp
sub
ds
sahf
cld
sbb
mov
imul
lret
ja
xchg
lods
jge
xchg
loopne
cs
ds
in
sbb
sub
jecxz
sarl
jl
inc
jbe
xor
js
xor
out
jae
pop
mov
mov
mov
xor
lods
into
and
aas
jb
lret
cmpsb
outsl
push
push
iret
xchg
loopne
pushf
cltd
add
cmp
inc
pushf
add
cmp
sbb
mov
in
test
lret
cwtl
dec
lock
dec
pop
add
sub
iret
adc
and
scas
dec
pop
ds
pusha
and
jb
je,pt
in
outsb
cmpsl
push
dec
xor
addl
dec
jp
push
fmulp
sahf
scas
push
cmp
push
js
push
pop
jo
adc
xor
fsqrt
mov
popa
enter
inc
movsl
mov
fstpl
pusha
mov
aam
push
ss
mov
cwtl
aaa
mov
test
pop
cli
fwait
dec
mov
lahf
in
push
iret
test
mov
testl
and
fsubrl
cld
sub
neg
mov
xchg
pop
mov
cltd
imul
mov
cli
bound
xchg
pop
int
int
pop
xor
movnti
adc
and
mov
clc
adc
fcomp
rorb
cmpl
lahf
shll
mov
dec
xchg
sub
adc
push
adc
test
enter
pusha
test
xchg
sub
insl
aas
ds
iret
stos
mov
sub
xchg
pop
xor
insb
adc
cmp
dec
lahf
cmpsb
mov
push
pop
push
daa
movsl
xchg
dec
or
adc
and
pop
out
adc
loope
out
dec
test
push
popa
xor
push
popa
xchg
out
or
xchg
arpl
gs
jle
add
shr
push
xlat
push
xchg
cmp
adc
out
out
pop
xchg
and
leave
pop
cmc
mov
dec
repz
push
mov
inc
sbb
and
hlt
shlb
mov
in
loope
stos
mov
out
test
push
mov
add
addr16
out
mov
sub
inc
bound
push
or
in
jo
cmpb
dec
inc
testb
sbb
pop
mov
xchg
addr16
sbb
into
cmpsb
jecxz
dec
addr16
cltd
cmp
xchg
push
fcomps
cmpb
cmp
sbb
pop
lahf
adc
cmp
rcrl
dec
mov
ljmp
outsl
adc
mov
adc
mov
outsb
loope
and
cltd
cmpsb
in
xor
outsb
clc
fildll
sub
mov
mov
cmp
stos
cld
sub
out
cmp
add
push
sbb
gs
sahf
int3
frstor
push
inc
xchg
pop
bound
sbb
sti
sub
pop
cmp
adc
xor
outsb
adc
into
daa
pop
pop
mov
es
stos
or
or
mov
int
cmp
mov
mov
mov
inc
add
mov
sbb
xor
mov
fdiv
fnstcw
lret
fnstsw
push
int3
jp
dec
in
fs
lcall
push
push
mov
nop
xchg
test
cwtl
pmovmskb
fsubs
lret
jb
jp
sub
adc
mov
clc
scas
outsl
and
lods
ds
inc
pop
int
pop
bound
or
jb
pop
out
test
and
orb
lcall
cmpsb
mov
push
leave
sbb
mov
sub
sahf
test
jbe
push
inc
fadds
jnp
mov
subl
outsb
mov
push
jbe
ljmp
dec
fsts
out
gs
orb
and
mov
addl
mov
mov
and
jp
pusha
or
negb
push
add
dec
sub
std
jecxz
scas
icebp
ficoml
jle
push
pop
dec
xor
or
jp
and
sub
inc
in
mov
sbb
movsb
xor
pop
mov
in
dec
mov
in
shll
xor
lret
jmp
add
sbb
stos
bndldx
push
stc
stos
mov
sub
xchg
outsb
loopne
nop
mov
leave
sub
push
test
fistpl
sbb
dec
add
xor
aad
mov
popf
mov
ret
shrl
imul
test
adc
xchg
idivl
movsl
inc
jbe
dec
fldlg2
mov
or
data16
adc
mov
lods
movzwl
mov
jl
cmp
sbb
push
mov
fisttpll
in
outsl
xlat
add
icebp
push
xchg
push
pop
mov
inc
xchg
inc
into
sub
jmp
sarb
jp
pushf
inc
mov
mov
mov
leave
hlt
mov
xchg
scas
jnp
dec
sbb
outsb
xor
dec
mov
dec
cltd
xchg
leave
cmp
idiv
testb
inc
xchg
jne
mov
jmp
insl
sahf
lods
add
repnz
movsb
imul
ja
pop
mov
jg
cmpsl
xor
mov
pop
mov
test
or
ja
xchg
out
out
xchg
hlt
pop
pop
push
xbegin
or
cwtl
jo
cld
pop
sbb
jne
sbb
out
mov
cmc
imul
int3
pop
dec
push
shll
rcll
and
mov
ljmp
mov
ffreep
jmp
pop
xorl
lret
cmp
fdivrl
ret
cld
lcall
sub
in
out
test
jnp
mov
cs
jbe
mov
int3
cmp
popa
pop
and
mov
inc
cmpl
sub
mov
mov
sbb
xchg
sahf
enter
xchg
xor
pop
daa
sbb
dec
or
xchg
dec
cmp
mov
lds
ljmp
push
push
xchg
outsl
outsl
nop
mov
push
inc
rcll
push
and
xchg
gs
push
ret
divb
pushf
iret
movsl
mov
pop
sbb
in
arpl
and
test
xchg
stc
xlat
movsb
les
inc
repnz
mov
shrb
pop
push
out
cld
add
movsl
jmp
jmp
lea
sti
movsl
mov
inc
leave
dec
shlb
sub
xchg
sub
xor
dec
test
daa
daa
mov
bound
int
addr16
cltd
xchg
outsl
pop
ljmp
dec
mov
aam
jbe
mov
xor
and
aas
mov
mov
insl
fs
mov
xchg
je
movsb
test
jbe
jbe
mov
sub
in
or
stc
addr16
jecxz
sbb
lods
dec
mov
mov
inc
out
cld
mov
mov
ret
shlb
sub
xor
inc
mov
lds
cmc
push
ds
sbb
pop
js
lock
mov
lods
sbb
ljmp
bound
push
and
cmc
lods
fadds
xchg
sahf
aad
push
add
aam
daa
mov
sbb
adc
stos
dec
jle
fmull
dec
cmp
dec
in
add
xchg
clc
loope
add
xchg
cmpsb
sub
stos
popf
xor
scas
out
cmp
test
or
and
inc
inc
popf
inc
dec
push
lds
push
lret
pop
bound
inc
dec
stos
scas
fisubrl
cmp
stc
push
cmp
mov
xchg
arpl
cs
jge
clc
push
adc
loop
sbb
ficoml
insl
scas
sbb
jbe
mov
jmp
mov
int3
push
shll
dec
cmpsb
gs
test
stos
or
inc
adc
adc
dec
test
test
cmp
sbb
jmp
inc
flds
xor
test
cli
out
fnstenv
sbb
stos
xchg
in
push
cmp
or
lea
mov
mov
mov
mov
sbb
push
dec
cmp
shrb
roll
testl
mov
imul
inc
fnstsw
jp
mov
mov
adc
mov
js
bound
xchg
sarb
ja
test
sub
mov
in
sbb
cmp
mov
jnp
pop
repz
in
jmp
or
mov
jl
or
pop
push
dec
imul
pushf
dec
je
mov
mov
xchg
push
jg
scas
loopne
fstpl
fsubrl
dec
leave
adc
and
mov
loopne
mov
inc
jp
std
jnp
loopne
outsl
sbb
stos
out
xlat
and
loope
popa
xlat
sub
dec
aad
fildll
dec
push
jecxz
adc
pop
push
mov
mov
xor
cmp
sbb
cmpsl
bound
mov
mov
jnp
mov
rorl
xorb
mov
xorl
xor
jge
rcl
adc
jno
push
and
das
divl
pop
and
mov
cli
push
lahf
sbb
and
sbb
sahf
in
mov
fists
pop
sub
inc
das
jns
mov
jbe
inc
das
lock
jne
or
lock
repz
xlat
pop
subb
stos
add
jo
in
repnz
pop
lods
pop
ret
dec
adc
data16
xchg
cmp
mov
cmp
rclb
rcl
cmp
xor
fcoms
mov
push
cmp
dec
loop
dec
pop
aas
gs
pop
push
fmull
aad
xor
andl
dec
xchg
pushf
mov
fmul
jp
fistpll
bound
or
add
inc
mov
in
sub
push
and
push
cwtl
jbe
mov
add
loop
pop
lret
js
cmp
sbbl
mov
test
mov
sub
or
andl
sbb
jg
pop
leave
in
push
and
loope
es
xor
push
inc
adc
repz
sub
add
and
test
dec
pop
lret
inc
inc
out
or
mov
test
mov
int
test
xchg
and
sti
jae
xchg
testl
fs
sbb
push
call
test
jne
cltd
mov
adc
in
mov
mov
mov
xor
fbstp
loop
stos
lock
mov
jns
ds
ja
fisttpl
subl
pushl
shlb
adc
push
and
sbb
iret
mov
arpl
leave
pop
pop
stc
sub
mov
fs
test
hlt
scas
fldl
pusha
jle
pop
int3
jecxz
inc
mov
fwait
in
insb
or
xor
std
insb
jecxz
xchg
cmp
leave
bound
mov
adc
dec
loope
fmuls
out
out
movsl
aas
fdivrs
xchg
adc
lods
jbe
out
xor
xchg
xor
push
sub
popa
adcl
mov
mov
jb
xor
sti
pop
or
fs
push
lea
mov
xchg
roll
fwait
sbb
inc
lahf
xchg
cmp
add
test
mov
jge
xor
push
xchg
mov
cld
js
out
push
andl
mov
in
aas
inc
int
cmp
fs
cwtl
mov
insb
xor
mov
loope
jge
push
das
out
jbe
or
lahf
sub
outsl
cltd
cmp
adc
test
mov
push
lods
mov
and
iret
dec
shl
cs
out
sbb
aam
lods
dec
adc
xchg
jmp
sbb
es
out
dec
fs
cli
or
jg
scas
dec
xchg
xchg
push
mov
pop
ret
sub
aas
cmp
sub
add
stos
sub
jle
pop
cmp
push
xor
rol
pusha
lret
xchg
jecxz
xor
xorb
mov
push
lahf
leave
cld
lds
push
sbb
cmp
mov
sub
adc
ss
fdivrs
lds
xchg
add
jp
push
fdivs
hlt
lcall
cmp
mov
cmp
rolb
dec
jo
push
adc
pop
mov
push
outsl
hlt
sbb
xchg
dec
ja
cmp
ds
daa
mov
testl
aaa
sbb
xchg
fdivr
or
mov
std
cwtl
jmp
insl
sub
adc
ds
mov
mov
xor
sub
stos
sub
mov
cmpsb
push
notl
push
jl
movsb
ljmp
das
mov
inc
ja
sub
sbb
mov
out
pop
pusha
jno
movsb
scas
dec
push
mov
mov
lahf
leave
imul
outsb
push
mov
fistl
push
sbb
popa
sbb
and
inc
ss
hlt
mov
pop
fstpt
inc
mov
into
jns
jno
or
adc
int3
out
mov
xor
pushf
mov
pop
jno
loopne
jbe
cmp
rolb
push
sub
and
jg
sub
std
ds
int3
es
pop
ljmp
xorb
outsb
mov
push
sbb
addb
nop
sahf
sti
mov
jbe
sub
adcl
mov
imul
mov
jne
das
ljmp
xchg
mov
pmaxsw
stos
cli
fnsave
mov
sub
int
test
inc
popf
cmp
je
clc
in
lock
cli
inc
or
jb
sbb
add
add
roll
sbb
shrb
test
sub
push
into
lock
fsubl
jecxz
mov
js
mov
jns
pop
hlt
inc
lcall
sahf
xor
xor
pop
jno
or
fstpt
mov
aas
mov
push
aas
imul
mov
sbb
xchg
jge
pop
repz
push
lock
jge
dec
sub
pop
inc
vmovntdq
movl
out
dec
ret
add
sub
cmpl
jae
ljmp
sbb
addl
or
sahf
jb
xor
mov
inc
pop
dec
jo
lea
xor
jno
movsl
inc
mov
push
cs
stos
out
mov
mull
cmp
mov
cmc
fdivrl
mov
push
aad
fs
in
mov
pop
lea
xor
ds
cmpsl
negl
into
ljmp
iret
inc
jae
rcrl
call
iret
dec
pop
inc
gs
pop
mov
sbb
orb
adc
or
in
ds
xchg
jne
test
xchg
jle
dec
je
inc
mov
and
into
repnz
mov
stos
bnd
xchg
in
jnp
enter
pop
inc
imulb
add
mov
int
lea
in
lods
add
xchg
stos
add
outsl
cld
or
sub
sbb
or
repnz
jnp
mov
fildl
cmp
fs
xor
insb
lret
fildl
adc
mov
inc
je
notb
scas
jecxz
ret
stos
sub
pushf
mov
stos
jne
jmp
push
aaa
ja
cltd
stc
out
nop
add
dec
repz
or
inc
test
daa
mov
fidivrl
movsl
jo
nop
pop
dec
cmc
rcrb
movsb
mov
movhps
shrl
outsb
int3
and
jge
mov
inc
sbb
add
test
pop
int
jp
push
push
dec
cmp
push
dec
cmp
xor
lds
jl
sub
dec
scas
cli
cmp
icebp
enter
jecxz
out
push
sbb
sub
fsubp
mov
sbb
test
mov
jns
enter
sar
xchg
xlat
pop
cmp
pop
jecxz
ficompl
scas
arpl
nop
pop
sahf
sbb
addr16
gs
jle
lock
add
and
out
mov
inc
pop
cmc
sarb
cmp
daa
gs
dec
loope
sbb
mov
cltd
sbb
pop
insb
or
or
add
or
cmp
aas
decl
movsb
dec
mov
jge
ss
es
dec
inc
pop
sahf
push
add
mov
test
lods
pop
mov
imul
mov
mov
arpl
jno
or
test
into
lahf
xchg
popf
mov
mov
in
cmc
jl
rolb
std
or
xor
sub
mov
js
test
pushf
inc
stos
xor
ss
jo
mov
push
inc
adcl
mov
test
add
clc
and
stos
xor
pop
add
jp
in
inc
and
icebp
pop
dec
dec
jg
pop
adc
xchg
add
sbb
ss
push
divl
push
int
dec
in
loop
add
jp
xchg
leave
cmpb
mov
mov
pop
mov
pop
and
sub
jge
mov
inc
jo
je
push
pop
loop
cmpsb
sbb
imul
or
sbb
xchg
mov
sbb
cltd
xor
hlt
xor
sarl
movl
pop
xor
pop
stc
das
mov
jno
les
inc
jns
pop
lock
inc
lahf
mov
sbb
shl
xor
insb
pop
ficoml
into
outsl
pop
mov
into
test
sub
and
in
leave
lret
pop
xor
inc
sub
fsts
mov
sub
ja
fwait
int3
push
fcompl
jae
arpl
das
dec
cmp
icebp
xchg
int3
mov
js
pusha
lcall
xor
aad
lea
adc
ret
ljmp
addl
inc
push
iret
not
dec
mov
fstpl
pushf
out
inc
inc
jmp
mov
and
xchg
fiaddl
pop
imul
xchg
imul
scas
dec
jg
xchg
dec
in
cmpsb
xchg
mov
in
mov
sti
test
cmp
outsl
dec
pop
fmull
rorb
mov
jmp
xor
test
or
mov
stos
into
adc
imul
enter
fwait
pusha
dec
in
push
and
stc
pop
ja
pop
dec
adc
out
cld
jg
xchg
idiv
jne
jb
into
jns
ja
sarb
call
scas
jge
push
jnp
psubusb
mov
popf
stc
imull
add
arpl
mov
cmc
lahf
notl
xor
pushf
mov
adc
negl
stos
mov
sbb
add
dec
adc
mov
cmpsb
mov
jp
add
cli
pop
aas
pusha
aas
xor
lret
stos
xchg
cld
rorb
sbb
stc
inc
pop
out
pop
das
xchg
dec
sbb
jecxz
scas
mov
lret
cmc
push
sbb
cmpsb
lea
and
xchg
ret
or
mov
pop
stc
adc
ljmp
xchg
dec
and
mov
jle
pusha
sub
push
insl
and
mov
lea
mov
es
jnp
loope
clc
mov
xchg
loope
jne
mov
fidivs
cmp
lds
lret
imul
cli
jecxz
push
out
push
xchg
out
shrl
cmp
pop
mov
push
add
or
adc
or
sbb
ss
aaa
push
test
sbb
lods
xchg
repz
movsl
push
mov
lods
jp
xchg
jnp
lcall
sbb
or
sbb
cmpl
ret
cld
outsb
test
sbb
xchg
and
mov
xchg
popa
or
sarl
out
popa
into
orb
and
mov
pop
and
cs
pop
repnz
test
mov
mov
ja
mov
sbb
out
je
dec
sub
insl
in
loopne
imul
pop
cmpsl
call
test
xor
fsubl
cmpsl
insb
or
or
jecxz
mov
add
push
subl
cmc
ret
xchg
jns
push
imull
push
rcrl
insl
adc
cmp
xchg
ja
mov
lret
fstps
mov
arpl
mov
and
aas
imul
push
insl
popf
fwait
insl
div
int3
jnp
adc
sub
insl
out
jl
xchg
int
imul
stc
cli
loope
push
call
into
icebp
sbb
inc
imul
ret
mov
cli
pop
mov
mov
push
push
sbb
adcl
test
out
aam
mov
pop
adcb
pop
outsb
bnd
xchg
and
mov
ja
xor
adc
nop
or
and
aad
mov
push
sti
jbe
test
pop
push
push
cli
fmuls
pop
lret
clc
lods
dec
fcmovb
xchg
adc
jnp
test
adc
movsb
ss
sbb
fisubrs
push
mov
pop
jl
popa
clc
xchg
dec
jecxz
jge
ljmp
lcall
outsb
iret
jno
ds
lock
je
push
cli
mov
mov
das
pop
ds
xchg
and
fdiv
flds
fwait
sub
std
test
testb
shrl
cmpsb
and
test
idivb
in
hlt
adc
sbb
test
or
adc
pop
push
movb
ret
jne
fwait
shlb
sub
cmp
and
shlb
push
cmp
lea
pop
hlt
xor
and
fldcw
imul
andl
fcomps
lea
dec
mov
test
aam
dec
scas
add
or
adc
xchg
pop
data16
inc
sbb
fisubl
movsw
adc
in
push
inc
push
xor
into
and
outsl
xchg
out
out
dec
out
inc
ss
outsb
sbb
sub
out
outsb
pop
push
orl
push
es
mov
jne
and
ds
jp
jl
dec
jns
js
roll
lret
cwtl
roll
popf
fstpt
fwait
mov
push
stc
inc
pop
add
xchg
pop
sub
test
adc
ljmp
insl
mov
xor
es
cmp
imul
rolb
xchg
sahf
movsb
out
mov
loope
faddl
loope
pushl
cmp
dec
inc
and
mov
mov
sarb
adc
lret
jp
push
lcall
sub
jb
dec
mov
dec
loope
out
push
push
in
xor
xor
lret
fisubrl
dec
jae
ficoms
xchg
in
xor
mov
jae
pop
add
add
data16
sbb
cli
cmp
movsl
loopne
test
mov
mov
out
xor
mov
push
mov
jns
scas
pop
jns
mov
fs
out
push
iret
jge
stos
test
or
int
clc
pop
int
xor
lds
mov
fcmovnbe
xchg
pushf
out
sub
les
adc
jbe
add
jo
call
push
in
pop
loopne
mov
dec
out
loopne
pop
ljmp
dec
outsb
adc
cmp
outsl
xor
mov
imulb
mov
xor
sahf
sub
adc
mov
imul
movsl
icebp
jbe
or
dec
je
jno
cld
inc
jb
out
jmp
leave
inc
pop
je
andl
ret
mov
xor
ds
xchg
dec
push
push
push
lcall
dec
ljmp
mov
ds
jg
leave
add
adc
add
mov
jmp
in
scas
adc
cwtl
idiv
push
sub
vcvtdq2pd
outsl
pop
daa
fisttps
and
popf
lds
ftst
ds
call
mov
call
xor
scas
hlt
cmpsl
in
sbb
jl
push
xlat
addr16
sub
cltd
lret
pushl
mov
push
push
dec
lods
xor
add
jmp
cmp
out
in
cmp
fcom
je
lods
xchg
pop
imul
mov
or
pop
testl
or
dec
scas
jp
push
mov
or
arpl
rcl
rcl
movsl
daa
mov
push
inc
stos
sbb
and
popf
xchg
lahf
ja
push
in
call
cmpsb
or
repnz
adc
pop
movsl
inc
orb
std
rorl
and
sarl
sub
out
aad
jge
mov
cmc
inc
out
hlt
roll
je
ffreep
mov
sarb
rol
cld
add
lods
lods
sub
add
int3
inc
inc
cld
mov
imul
lods
cs
repnz
mov
es
in
int3
mov
mov
addr16
mov
mov
sub
xor
into
stc
scas
cmp
sti
leave
jg
mov
clc
and
mov
hlt
inc
loope
loop
mov
jmp
mov
adc
adc
or
rcrb
faddl
inc
xchg
xchg
shlb
lock
aas
push
lret
mov
mov
ja
push
xchg
mov
in
ret
jl
cmp
xchg
sub
dec
in
jno
inc
pop
les
and
imull
fs
pop
add
dec
pusha
je
mov
std
and
pop
xchg
or
jg
or
dec
jle
stos
mov
mov
outsb
aam
fnstcw
or
mov
mov
test
sbb
scas
in
mov
xchg
mov
out
jg
loopne
mov
std
hlt
fsubs
into
in
push
xchg
dec
push
sub
std
sub
dec
sti
lret
mov
in
das
lods
adc
cltd
cmp
and
jp
aas
add
sub
cmp
bound
cltd
cmp
aad
aaa
out
jp
or
mov
fstl
jae
outsl
test
repnz
nop
push
mov
in
mov
insb
mov
loopne
and
cmpsl
xchg
bound
adc
nop
outsl
mov
or
inc
arpl
test
insl
insb
sub
dec
int3
mov
imulb
popa
cmp
inc
cli
sbb
pop
outsb
pop
sub
lds
es
dec
imul
sub
sbb
adc
xchg
cmpsl
cltd
cmp
push
in
aad
dec
test
adc
xchg
fildl
mov
lods
nop
je
imul
pop
pop
pop
jne
xchg
sub
sbb
add
inc
sbb
lea
mov
pusha
in
pusha
das
jg
sbb
hlt
add
cli
sahf
mov
add
cmp
sub
cli
loopne
push
test
add
pop
lret
orb
mov
push
iret
ss
jo
jp
push
xchg
mov
push
cmpsb
and
and
pop
jle
sbb
pop
shlb
adcl
cwtl
in
jae
push
sub
add
cmovl
call
mov
pop
add
mov
icebp
adc
inc
out
and
sub
mov
shrl
cld
jl
mov
gs
pop
push
daa
mov
imul
fwait
out
adc
cld
xor
and
ret
hlt
ss
mov
or
movl
sub
add
xor
inc
dec
imul
add
sti
sbb
stos
jo
and
test
std
popf
je
das
and
pop
mov
clc
gs
stc
jbe
jmp
outsb
mov
fiaddl
mov
insl
xor
cmp
fists
xchg
pop
movsl
lods
call
mov
ljmp
cmp
mov
dec
pop
cmp
aad
jmp
mov
fdivr
scas
iret
repnz
or
or
imull
in
inc
pop
xor
add
fcomps
stos
lcall
fwait
cmpsl
jle
aam
out
bound
mov
lret
sbb
idivl
imul
iret
pushf
shll
adc
cmp
icebp
xchg
xchg
cmp
aam
or
inc
pushf
and
xlat
push
push
into
stos
pushf
cmp
shlb
add
cmp
pop
flds
call
xchg
pop
jnp
dec
jecxz
popf
pop
dec
fmull
popa
pop
shrb
jge
pusha
pushf
xor
aaa
sub
leave
fstl
pop
mov
int3
jno
mov
stc
sub
cmp
adc
jmp
push
mov
jp
dec
les
call
dec
pop
mov
imul
aam
inc
cmpb
and
mov
pushf
data16
outsl
out
cmpsb
xchg
jmp
pop
test
ja
nop
iret
in
dec
imul
xlat
shrl
loopne
lahf
xchg
jp
mov
push
ret
jnp
inc
mov
jecxz
ret
loop
jp
xlat
cmc
or
test
jb
sti
sbb
cmpsb
xlat
xor
sbb
lds
mov
and
dec
cmp
dec
xlat
leave
into
pop
push
xchg
jle
push
in
push
dec
cmp
and
popf
divb
test
jno
fwait
jb
test
cwtl
out
bound
test
adcl
test
xchg
testb
or
push
adc
hlt
mov
jo
punpcklwd
pop
aam
stos
stos
scas
fldcw
cmp
inc
fists
or
mov
cmc
mov
in
lahf
cmp
dec
loop
in
push
pop
hlt
xchg
lcall
aam
cmp
pushf
inc
push
mov
cmpsl
or
in
sbb
inc
xor
cmc
das
movsl
movsl
sub
lretw
aas
aam
push
cmp
lcall
inc
cmpsb
push
or
stc
clc
cmp
mov
out
add
subl
test
jl
jg
scas
or
popf
out
mov
or
gs
loop,pt
addr16
ljmp
xorl
ja
dec
nop
insb
fisttpll
add
inc
jo
cmpsl
cmp
ljmp
mov
sbb
inc
xchg
jbe
mov
mov
push
stc
arpl
mov
imul
push
pop
cli
cltd
nop
or
push
aas
mov
mov
xchg
popa
jnp
dec
cmp
mov
lock
cld
dec
add
push
jo
xor
pop
xchg
ffreep
loop
test
scas
mov
insb
movsl
lahf
xor
arpl
mov
xchg
das
or
and
adc
repz
rolb
insl
pushf
fstp
in
jo
mov
pop
bound
ss
mov
pop
cmpb
sar
in
and
jp
sub
lret
cs
in
push
pop
xor
adc
xchg
push
or
stos
fldenv
ss
jg
cmp
sub
xor
mov
test
mov
mov
dec
mov
mov
push
cs
repz
ror
movb
les
adc
loope
lods
insl
scas
push
cmp
fwait
mov
cmp
aas
ds
mov
mov
fldl
pop
jecxz
jge
adc
data16
subb
inc
int
data16
mov
fbstp
cmp
and
aas
mov
mov
push
xlat
fstpt
inc
mov
repnz
or
xor
cs
push
adc
enter
inc
xor
sub
aam
arpl
hlt
xchg
lret
outsb
outsl
hlt
sub
push
dec
dec
cmp
jmp
fildll
adc
xchg
stos
cmp
mov
imul
fs
mov
scas
ss
repnz
dec
xchg
cltd
xor
cmpsb
popa
pop
insl
sbb
sub
out
add
adc
inc
sbb
push
mov
ljmp
and
fstpl
lret
fistl
popa
lock
adc
xchg
and
jg
insl
jo
mov
lcall
mov
je
pop
scas
pop
or
es
fnsave
iret
lahf
mov
xor
push
dec
and
pop
and
push
repz
out
add
pop
xchg
fsub
cmp
repz
stos
xlat
sub
pop
or
xlat
mov
scas
flds
xchg
dec
imul
inc
es
fiadds
ds
lds
addr16
enter
add
cltd
cld
add
insl
or
hlt
test
imul
jo
psubb
cmp
shrl
pop
dec
stos
jge
adc
inc
data16
rorb
movsb
mov
in
and
scas
sahf
xor
cs
rcr
gs
aas
add
xchg
and
aaa
loope
or
push
adc
mov
loope
mov
push
dec
or
mov
lret
cmp
pushf
adcb
add
mov
jnp
inc
pop
mov
loope
repz
mov
sbb
sub
jg
sbb
mov
cmpsb
and
xor
mov
fcmove
xchg
xor
or
out
and
mov
and
and
or
pop
shlb
vmovntpd
outsb
pusha
in
push
scas
test
dec
daa
cmpsl
fwait
call
inc
push
es
out
or
xchg
mov
clc
test
imul
pop
outsb
cmpsl
and
pop
sub
psubq
fstps
in
ret
mov
pop
mov
or
mov
or
lret
dec
insl
das
test
das
lahf
fidivs
mov
xchg
lcall
jle
mov
stc
enter
xchg
sbb
ret
sbb
jecxz
inc
mov
cltd
out
out
rcrb
add
and
push
fmuls
popf
push
mov
jp
cmp
ret
or
pusha
mov
fstpt
add
dec
lods
stc
cltd
mov
push
ljmp
jo
loope
cmpsb
jg
std
xor
xchg
in
xchg
fidivs
inc
push
mov
arpl
or
fsub
mov
out
lahf
ljmp
mov
push
push
sbb
fdiv
pop
xchg
out
fldt
xchg
sub
dec
dec
pop
cmp
bound
shlb
jecxz
js
imul
dec
fwait
sbb
mov
fstpt
jo
outsb
pop
jo
ss
inc
cmp
mov
dec
pushf
dec
inc
outsl
aam
aad
sbb
pusha
cld
pusha
outsl
fcoms
add
ljmp
fnsave
xchg
aad
rcr
stos
push
mov
jg
or
jb
cwtd
aaa
pop
mov
dec
push
and
sub
das
in
inc
or
enter
sbb
les
and
inc
test
push
in
sbb
xor
jle
cmp
mov
inc
xor
cmp
test
rorl
lock
pop
std
shr
jno
je
and
sub
sti
lret
jb
dec
mov
call
xchg
shrb
fstpl
dec
mov
mov
aas
aaa
lock
and
hlt
dec
adc
orl
hlt
int3
push
notb
pop
pop
pushf
mov
out
je
clc
push
test
xchg
and
cmpsb
xlat
cmp
pop
mov
ja
out
insl
jle
js
aam
stos
repnz
sahf
sbb
scas
clc
jo
imul
xor
je
jb
sub
inc
inc
cmp
pop
jmp
add
cmpsb
mov
cmp
fcmovnbe
pop
pop
pop
sub
adc
cs
es
out
jmp
lcall
pusha
idivb
push
fld
and
sub
fsubrs
mov
mov
xor
xor
arpl
jp
or
mov
test
jno
jno
cli
adc
imul
add
int3
bound
push
mov
push
jecxz
add
mov
dec
movsb
dec
mov
add
dec
cmp
mov
loop
mov
xchg
lods
popa
in
testl
mov
sub
jae
cmp
sbb
pop
movsl
jno
sbb
or
jmp
add
adc
leave
push
jne
xchg
jle
es
add
es
movsb
sbb
pop
pop
sbb
movsb
push
mov
xor
mov
cwtl
mov
incl
cld
mov
mov
push
pop
in
lahf
je
add
es
data16
and
in
sbb
xchg
jmp
fadd
mov
push
daa
in
cmp
mov
sub
adc
and
and
cmc
xor
bound
xchg
adc
push
jne
scas
pop
sub
cwtl
popf
imulb
pop
test
int3
jne
xor
sbb
jb
mov
ss
sti
in
repz
vpsubsb
stos
dec
mov
mov
mov
jae
mov
push
es
cmpsb
sub
ja
cmp
xor
jbe
scas
das
dec
fdivr
loopne
inc
in
loop
fs
imul
stos
cmp
push
je
add
mov
leave
fbstp
sbb
out
push
mov
cwtl
fbstp
and
icebp
out
push
jbe
cmp
fiadds
push
das
aas
sar
mov
out
mov
orl
pushf
jmp
sub
cmc
mov
pop
add
ljmp
jae
and
lea
inc
dec
xchg
mov
loopne
cld
arpl
jle
lods
jmp
lock
push
into
or
loop
sub
int3
inc
insb
pushf
test
cltd
insb
sub
aaa
adc
xlat
repz
mov
pop
push
and
stc
jg
iret
xor
adc
shrb
sub
xor
cmp
out
pushf
fsubl
jb
adc
pop
mov
mov
pop
mov
repnz
pop
les
cld
jo
loopne
push
xchg
xor
push
or
mov
aad
push
jg
loope
loopne
mov
add
insl
mov
cld
inc
mov
outsb
pop
inc
out
xchg
mov
jge
mov
in
jmp
push
xchg
pushf
dec
in
push
scas
mov
jl
sub
sarb
dec
es
test
jo
pop
mov
xchg
adcb
sub
xor
sar
lret
jne
push
sub
arpl
test
iret
lret
mov
sub
roll
inc
fstpt
out
rcl
and
mov
push
pop
push
and
movl
mov
mov
jmp
pop
cltd
test
test
sub
je
xor
cmp
test
pushf
sbb
mov
fstpl
nop
mov
dec
push
inc
xchg
jl
xor
sub
sub
wrmsr
scas
adc
in
cmp
xchg
ret
jl
or
add
pop
and
xchg
push
std
jmp
loope
daa
jo
adc
sub
xchg
out
into
push
clc
jo
xorl
imull
pop
and
popf
xchg
mov
cli
and
loop
leave
iret
push
pusha
and
mov
cmp
stos
dec
adc
shll
mov
cmp
jns
out
daa
in
vxorps
imul
push
or
mov
sbb
iret
cli
out
add
mov
mov
js
jg
mov
stos
mov
icebp
sbb
stc
xchg
push
sub
outsl
jae
jb
dec
inc
push
adc
lcall
iret
adc
sbb
out
iret
cmp
lret
lods
iret
mov
xchg
aam
jb
inc
shrb
mov
sub
js
sbb
jge
pop
int
xchg
cmpl
ss
xlat
push
inc
xor
popf
mov
push
xor
adc
shlb
mov
mov
sbb
jo
int
movsb
push
ret
cmp
sub
adc
gs
cmpsb
clc
push
lods
inc
mov
or
add
cmp
xchg
rolb
inc
push
cld
lahf
dec
sbb
xchg
mov
in
mov
hlt
pushf
add
pop
movsb
sbb
adc
xchg
popa
icebp
outsb
or
leave
xchg
push
fwait
dec
ror
loop
outsb
xlat
xor
lods
push
inc
sbb
scas
test
leave
dec
cmp
cmpsl
lods
mov
push
jnp
jl
jg
iret
sbb
dec
adc
popa
dec
xchg
sub
inc
imul
imul
jae
push
les
mov
nop
stos
and
add
mov
popf
xchg
in
dec
clc
fadds
je
sub
and
sar
xchg
loope
pushf
pop
dec
or
pop
mov
dec
or
test
and
mov
mov
shll
daa
cwtl
pushf
out
push
sbb
std
es
pop
jmp
cwtl
int3
int
dec
mov
adc
push
test
inc
jno
dec
jnp
sbb
inc
xchg
inc
mov
je
fiadds
or
stos
or
fwait
test
jnp
rclb
out
out
sub
push
jmp
mov
cmp
cmp
mov
sbb
aam
ja
cmpsl
insb
add
aad
repz
lods
jle
xor
test
mov
roll
cmpsb
loopne
mov
test
lahf
loopne
jns
std
mov
shlb
inc
fiadds
pushf
sub
inc
call
jl,pn
insl
push
ret
xchg
inc
dec
jp
xchg
add
leave
sbb
cmp
jns
push
shll
aad
andb
jecxz
push
pop
andb
loopne
add
inc
lea
cmp
outsb
movb
or
cld
sub
lock
movsl
mov
sti
outsb
out
insl
add
movsl
jg
fdivl
ljmp
std
cli
pop
lds
lock
outsb
test
add
out
xchg
and
je
in
dec
leave
mov
xchg
pop
popa
mov
jb
adc
adc
ror
mov
out
imul
rcll
xchg
and
push
popf
adc
and
repnz
cvttps2pi
out
adcb
dec
js
jle
lea
lahf
repnz
push
pop
dec
mov
addb
push
push
inc
inc
xchg
mov
ret
stc
ret
rclb
icebp
dec
fld
int
test
lock
shl
jle
pop
out
sub
cli
inc
xorl
sub
idivb
and
sub
cli
push
cmp
pop
sbb
add
orl
in
dec
call
es
ljmp
out
dec
jb
jmp
popa
out
mov
aam
cmp
jbe
out
ljmp
push
aad
les
popf
push
mov
outsl
movsl
cld
push
sub
pop
adc
fstpl
push
aad
iret
push
ret
imul
jmp
push
push
sbb
and
xor
js
sbb
or
cwtl
push
ljmp
add
xchg
shlb
fnstenv
loope
pusha
xchg
cmp
sbb
cs
and
xor
cmp
xchg
push
adc
popf
push
adc
int
sbbb
xchg
sbb
fisubrs
mov
dec
subl
rcrb
cmp
imul
jb
std
push
cs
pop
jl
cmp
push
mov
inc
and
fstl
push
ljmp
pusha
sbb
loop
xor
jge
mov
dec
xor
inc
pop
cmpsb
aad
sub
aas
rcrl
xchg
push
addb
es
out
and
or
inc
dec
cmc
xchg
scas
pop
mov
mov
lock
lock
and
mov
jns
inc
xchg
pop
cli
jns
xchg
imul
call
cld
cmp
data16
das
es
xchg
jb
ja
inc
mov
jl
mov
dec
jmp
imul
cmp
add
lret
sbb
add
mov
cmp
pop
out
sub
pop
mov
dec
in
mov
jl
jb
subl
jecxz
adc
notl
out
sub
dec
adcb
sub
aaa
pop
xchg
jnp
nop
test
filds
fwait
mov
out
repz
les
int3
divb
push
es
bound
push
cmp
cltd
aaa
in
out
sub
cs
fucomip
bound
popa
imul
ret
or
iret
les
push
ficompl
pop
mul
shl
push
enter
sub
loope
jg
dec
movsl
aas
mov
dec
in
scas
mov
cmpsb
das
ljmp
xor
and
leave
popf
mov
and
adc
hlt
rep
adc
decl
xlat
popf
cmp
iret
fs
mov
or
test
enter
push
mov
in
cmp
sbb
roll
or
outsl
push
dec
sub
xlat
mov
adc
xor
add
or
pop
lea
xchg
clc
push
or
add
jns
mov
push
sbb
and
add
adc
cmpsl
jecxz
std
test
or
jbe
je
movsb
dec
cld
sahf
inc
mov
pmaddwd
mov
aas
mov
gs
stos
push
jle
movlps
add
stos
leave
icebp
pop
enter
in
push
mov
inc
jbe
iret
inc
fs
pop
loope
jecxz
dec
sbb
adc
adcb
inc
int
sbb
jno
in
xchg
cmp
je
mov
push
xchg
mov
inc
fimull
or
cwtl
mov
pop
adc
cmp
rcr
pop
mov
aad
in
stc
jge
imul
or
scas
or
cmp
inc
aaa
fcomip
xlat
cmp
std
sub
in
xor
mov
mov
jg
std
xchg
mov
add
clc
fs
sub
adc
lret
mov
insb
adc
add
in
loopne
ljmp
lods
mov
push
rcll
pop
add
cmp
add
inc
add
mov
inc
push
inc
mov
mov
sbb
mov
sub
cmp
jmp
push
xorl
cmc
push
xchg
shll
iret
adc
sbb
push
push
cmovo
insl
aam
xchg
sub
mov
imul
or
inc
inc
in
insl
mov
pop
adc
cmpsb
or
repnz
dec
dec
iret
xchg
repnz
xchg
and
cmp
inc
insl
lahf
arpl
mov
es
gs
call
mov
test
mov
or
pop
cwtl
cltd
movzbl
popa
clc
je
shll
cmc
lock
mov
dec
dec
sub
adc
add
xor
mov
pushf
sbb
xchg
mov
and
jne
xchg
sub
roll
test
rorb
fidivs
fistpl
mov
add
cs
xor
insb
decl
jl
pop
lods
out
pop
jo
loope
out
pop
loop
loopw
ljmp
stos
gs
mov
mov
cltd
xor
push
int3
out
mov
cltd
popf
and
stos
jae
mov
scas
lret
es
xor
mov
jo
je
mov
daa
push
push
fstps
into
mov
jne
lret
sbb
gs
shrb
inc
fadds
into
dec
sbb
mov
xor
sbb
adc
into
sbbb
clc
jle
ss
jnp
stc
mov
dec
mov
mov
js
popa
imul
mov
popa
ja
xor
xchg
out
fidivrl
fs
cltd
hlt
sbb
mov
cmp
adc
fwait
mov
je
jg
mov
js
insb
movsb
pop
add
cmp
mov
pushf
mov
sbb
fisubl
test
out
xchg
clc
cmp
inc
jb
inc
scas
jae
sti
shrb
jbe
cli
inc
loop
sti
lahf
fisttpl
and
and
adc
fldenv
into
arpl
nop
jp
adc
lret
mov
jmp
rorb
or
pop
mov
adc
pop
sub
fdivl
jbe
sub
dec
ret
mov
lds
adc
sbb
pop
dec
xchg
push
adc
add
fisubrs
cwtl
cmp
fs
incl
loopne
std
es
mov
int
lock
pop
inc
xor
sub
add
scas
xor
pop
mov
jg
jne
aaa
out
lahf
cwtl
cli
orb
iret
rcl
cltd
xor
lcall
sahf
and
cld
out
xlat
test
cltd
rorl
sub
inc
enter
iret
pop
push
sbb
jecxz
hlt
sti
popa
fdivl
test
cs
pop
inc
push
dec
xchg
cld
fsubl
out
lcall
test
pop
and
mov
mov
jmp
or
aaa
xchg
in
in
fdivrs
mov
sbb
jmp
mov
and
xchg
fdivr
pop
sti
or
cmp
and
push
mov
mov
inc
mov
xchg
cmpsb
ret
add
fbld
test
outsb
adc
loop
sbb
add
push
mov
lods
xchg
xlat
push
jbe
mov
pop
mov
wrmsr
sahf
or
adc
bound
sarb
cmpsl
ret
gs
jne
or
mov
mov
fstps
inc
inc
xchg
sub
jb
rolb
cwtl
jp
push
xor
addr16
mov
sub
lahf
push
dec
and
neg
jns
push
sahf
xchg
dec
fstpl
jae
dec
xchg
lods
inc
mov
movsb
pop
mov
negl
mov
pushf
fwait
imul
mov
add
repnz
repnz
inc
loop
daa
xor
les
or
mov
lds
hlt
cmc
pop
mov
cmp
cltd
mov
test
jbe
xchg
les
fwait
mov
enter
lahf
outsb
adc
in
add
mov
inc
mov
movsb
pop
test
jge
pop
adc
dec
sub
mov
xchg
ja
push
leave
add
rcrl
stos
jl
jbe
arpl
dec
mov
in
or
dec
xor
iret
jg
shrl
jns
adc
inc
mov
jbe
inc
and
std
pop
js
adc
daa
out
push
pop
add
test
loope
mov
dec
enter
or
iret
iret
mov
sbb
or
dec
add
push
pop
fwait
jb
repz
sbb
jmp
push
xor
or
push
mov
and
popf
orl
sub
push
sbb
testl
pop
cmpsl
mov
mov
ljmp
pop
inc
inc
xor
xchg
rclb
xchg
add
xchg
fistps
sub
cltd
lret
and
xchg
push
add
hlt
test
sub
cld
jg
popl
push
loope
mov
loopne
in
push
pushl
dec
dec
inc
mov
int3
add
or
pop
mov
sub
je
repnz
jl
icebp
rcrb
cmpsl
in
sbb
mov
pushf
xlat
xor
and
cltd
pusha
jne
les
mov
test
or
lds
add
sub
fs
pop
and
insl
pop
cmc
cmp
inc
xor
int3
cmp
ja
andb
xchg
push
mov
sub
rcrb
rcl
mov
mov
dec
jge
push
mov
sbb
push
cmpsb
xchg
cli
lret
aaa
outsl
gs
mov
aas
es
push
push
in
add
movsl
pop
mulb
mov
insl
int3
es
es
cmp
add
ret
or
ret
add
addl
dec
pop
and
push
call
sahf
inc
mov
jecxz
add
aad
fisubs
mov
or
or
mov
push
jg
stc
ret
pop
jo
cmp
outsl
xchg
in
mov
bound
mov
nop
xchg
mov
movsb
testl
add
enterw
sub
xchg
ret
xor
or
or
xor
xor
dec
pop
push
divb
mov
stos
gs
aaa
and
iret
cld
pop
sbb
push
mov
dec
fisubrs
xchg
stos
sub
test
push
cmp
popa
push
fldl
pop
nop
stc
mov
inc
pop
add
scas
jns
dec
and
sbb
mov
xchg
dec
les
loope
dec
call
popa
mov
fdivrs
mov
js
cmp
sbb
fists
fwait
outsb
mov
ds
mov
pop
mov
pop
or
mov
scas
aaa
dec
xor
adc
sahf
pop
sub
ljmp
insb
test
mov
mov
cmpsl
mov
push
lods
mov
push
adc
sub
in
in
dec
out
mov
xor
inc
pop
xor
ret
repnz
inc
xor
jb
cltd
and
dec
and
sub
adc
mov
jg
in
dec
sbb
inc
mov
decb
loopne
aad
lret
cld
push
sub
xchg
cmp
push
inc
mov
mov
jp
xor
rcrb
push
outsl
adc
stos
mov
cli
aad
inc
das
mov
adc
xchg
sahf
addr16
sub
incl
popf
inc
call
add
jmp
cs
cmpsl
popf
clc
push
loop
mov
xchg
in
jle
mov
loope
jae
dec
xchg
stos
inc
or
fisttpll
stos
adc
insb
rolb
std
je
or
pop
int3
int
jg
jle
add
inc
and
out
xchg
sub
and
push
ljmp
pop
fstpl
adc
xor
pop
inc
roll
iret
test
add
mov
sbb
ret
mov
inc
xchg
lret
cs
mov
mov
push
mov
push
sub
and
cltd
jb
push
xchg
push
bound
inc
xor
loope
fcompl
inc
mov
fisttpll
call
movsb
test
inc
mov
loop
icebp
adc
rcl
aas
dec
lcall
mov
jge
cmpsb
lahf
inc
sarb
pop
mov
les
ret
in
sbb
cmp
or
pop
push
sbb
xor
xor
aam
add
sbb
jge
nop
mov
in
mov
pop
lock
pop
sbb
push
jae
fstpl
xchg
js
sub
inc
into
sub
andl
cmp
sbb
pop
cmp
mov
cmp
fimuls
shlb
js
inc
insl
cmpsl
cmp
fldcw
icebp
stos
dec
inc
sbb
movsb
icebp
rcrl
sub
shr
or
jns
loopne
js
push
xchg
add
xor
mov
and
and
push
outsb
fwait
lods
add
xchg
push
adc
xor
loopne
and
hlt
dec
jmp
std
and
decl
add
testb
sbb
cmovge
push
sbb
mov
psrad
inc
stos
sbb
mov
xchg
and
jo
fnsave
insl
sub
adc
mov
dec
dec
sbb
int3
sub
jmp
jecxz
inc
cmp
adc
fsubl
leave
sub
fld
jbe
enter
inc
mov
xlat
stos
in
pop
push
cmp
inc
or
fadds
ljmp
jbe
out
push
xchg
stc
mov
imul
fsubs
leave
addr16
cmc
sub
les
rcl
imul
popa
and
jmp
lds
mov
andb
pop
cltd
xor
sbb
mov
jle
fs
in
psubw
pop
out
xor
sub
dec
ficoml
xor
cmp
push
bound
ficoml
mov
xor
scas
mov
add
sbb
lret
sti
pusha
mov
xchg
fistpl
bnd
mov
xlat
test
or
xchg
mov
jns
sti
jl
cltd
insl
push
in
mov
and
aam
repz
sub
push
test
xchg
inc
pop
cmpsl
movzbl
out
mov
mov
pop
faddl
insl
pop
jo
orl
fimull
and
in
leave
dec
or
mov
fidivrs
inc
jmp
fidivl
addr16
push
pushf
or
xchg
pop
xchg
xchg
nop
mov
clc
pusha
in
and
rorl
inc
sub
aas
cmp
xor
mov
push
in
inc
xor
inc
cmp
ja
jecxz
test
add
test
or
push
sbb
call
add
mov
add
mov
cltd
stc
mov
pop
leave
cmpl
or
sub
incl
xchg
xchg
jecxz
mov
nop
mov
push
xchg
ja
sbb
and
lahf
cmp
adc
push
add
xchg
lahf
xchg
xchg
push
adc
jecxz
sbb
ret
lock
mov
mov
sub
out
and
and
insl
sti
push
test
shlb
imull
and
or
xor
push
push
rclb
cmc
add
or
movsb
movsb
mov
cmp
push
inc
notl
sub
push
icebp
sub
xor
cli
jb
js
iret
sub
cmp
lea
push
mov
jmp
cmp
push
into
xchg
xchg
or
push
push
sub
aam
call
lock
mov
inc
add
rcrl
cmp
push
shlb
sahf
leave
loop
call
or
jno
in
idivb
int3
jl
sti
adc
mov
scas
add
pop
pop
lea
fsubr
mov
mov
jae
and
clc
aad
outsb
fistpll
add
or
cmp
lret
jmp
js
insb
jge
xchg
dec
push
sub
push
gs
lcall
sbb
js
mov
pusha
mov
jle
adc
cmp
pop
jmp
cs
mov
pop
jb
mov
out
outsl
jne
and
aaa
and
sbb
je
mov
pusha
popa
daa
push
out
lea
pushf
sbb
jb
mov
cmp
add
fs
add
out
test
cld
mov
cli
pushf
xlat
xchg
test
sbb
cld
jns
pop
sub
jle
add
xchg
xchg
out
cli
lods
test
jl
mov
jle
in
add
pop
pop
loop
push
cmp
scas
ret
inc
mov
add
fwait
repz
loope
mov
adc
jle
jmp
notl
push
sub
incl
jecxz
push
movsl
push
lret
roll
mov
add
push
mov
sub
lahf
rcrb
sar
scas
mov
push
mov
je
aam
cld
sbbb
mov
loop
test
mov
ljmp
xchg
jecxz
push
or
cmc
decl
insb
push
cmp
dec
int3
bound
xor
mov
outsl
jbe
or
jle
sbb
xchg
add
sahf
inc
or
test
mov
ret
pop
push
test
daa
sub
add
xchg
adcb
dec
mov
mov
xchg
mov
sbb
mov
lret
and
xorl
mov
pushl
sub
pop
insb
jb
mov
cmp
sbb
and
or
and
xor
insl
cmpsl
ret
and
dec
jae
in
dec
pop
ja
xchg
filds
dec
inc
shlb
ljmp
xor
jmp
lods
loop
mov
xor
inc
popa
lcall
roll
es
movsb
sub
jae
mov
divb
adc
fstpl
push
push
cmpsl
xchg
xor
pop
and
sub
int
lods
insb
scas
mov
mov
jg
sub
leave
popa
push
dec
push
push
mov
ja
icebp
inc
ficoms
out
ljmp
inc
movsb
popf
aaa
rorl
icebp
enter
ret
lods
repnz
dec
xor
mov
and
test
jmp
nop
in
sbb
xor
mov
aam
lods
dec
loope
or
push
lock
pusha
aam
stc
in
mov
ljmp
dec
lahf
xor
jb
imul
push
mov
pop
jno
pop
loopne
movsl
popa
or
fcmovnb
jge
loop
jg
dec
mov
roll
mov
sub
sti
movsl
test
push
stos
pop
loopne
call
sbb
xor
adc
push
jns
and
iret
pop
negl
xor
cmc
dec
scas
hlt
xor
scas
enter
int3
addr16
inc
scas
sub
les
add
pop
cwtl
dec
es
fildl
fcoms
into
imul
xchg
jb
stos
ss
cld
xchg
xor
cwtl
xchg
jmp
aam
sub
aas
repz
inc
push
sbb
movsl
imul
or
jle
xchg
mov
xchg
ja
jmp
fistpl
roll
mov
ret
pop
inc
test
out
div
jbe
xchg
push
fadds
push
stc
xchg
cmp
in
loope
into
dec
aaa
cmp
call
fisttpl
dec
rclb
dec
andb
sbb
mov
sbb
xchg
xor
fldcw
fbld
stos
mov
xlat
pop
es
dec
adcb
aam
add
mov
jmp
inc
movsb
aad
sub
pop
jo
fdivr
cmovns
mov
insb
xor
sti
or
sahf
mov
cmp
pop
in
shrl
aad
add
push
cmp
outsl
repz
xchg
mov
lret
dec
sti
xor
mov
hlt
popf
add
mov
rorb
std
add
cmp
inc
leave
xchg
pop
or
or
add
sysret
jbe
and
fmulp
cmpsl
in
push
pop
test
cwtl
pop
mov
inc
addr16
filds
popa
and
ljmp
mov
out
mov
cmp
fyl2x
lds
or
add
iret
fs
add
pop
out
xchg
daa
cmc
mov
xchg
lahf
stc
pop
hlt
hlt
pop
out
andl
dec
fwait
call
push
je
and
mov
mov
arpl
dec
xor
push
sub
sbb
xor
rcll
jp
push
out
fisttps
push
iret
pop
and
sar
pop
mov
mov
push
sbb
adc
jno
and
cmp
sub
outsb
cmp
pop
in
add
pop
dec
mov
mov
ret
iret
js
mov
les
and
push
mov
gs
insb
rcr
out
and
pop
ffreep
jle
movl
xchg
or
ffree
xchg
mov
jno
jae
outsl
movsb
or
jbe
add
push
xchg
mov
lahf
mov
enter
push
sub
and
sbb
aam
fisubs
mov
push
cmp
add
aaa
pop
daa
int3
mov
in
gs
enter
test
cli
mov
imul
popf
std
push
fs
hlt
mov
mov
fsts
es
movsb
daa
push
loopne
mov
int3
sbb
lock
sub
jns
cmp
pop
into
add
lahf
clc
cmpsb
addr16
jge
jmp
dec
sub
jge
mov
int
sahf
fstps
and
add
loop
add
dec
stos
sub
cld
cmpsl
fdivr
cmpsb
and
dec
sbb
and
bound
rcrl
insl
movsl
ret
fucomi
sbb
push
cld
outsl
push
addb
mov
dec
mov
or
xchg
mov
mov
jbe
stc
sbbl
imul
fldl
icebp
or
push
cmovl
lahf
cmp
xlat
jg
jl
push
dec
sahf
repnz
cmp
xorl
cli
imul
ret
lret
xchg
test
popl
js
or
arpl
pop
sbb
sbb
in
int3
adc
adc
movsl
ret
loope
mov
into
leave
xchg
push
mov
and
mov
xchg
xchg
enter
jns
dec
add
hlt
aam
jne
xchg
adc
pop
inc
pop
movsl
iret
sub
fimull
das
divl
mov
inc
xchg
call
xchg
icebp
jne
mov
sti
rcll
pop
loop
pop
sbb
icebp
sub
std
fs
fsubr
dec
push
test
mov
xor
lock
xchg
into
inc
loope
or
xor
jmp
pop
push
cmp
adc
and
inc
mov
cli
and
lret
pushf
ljmp
cmp
out
mov
fucom
dec
xlat
pop
dec
dec
pop
movsl
dec
or
les
insb
fmull
adc
inc
stos
jne
dec
and
cmc
mov
loope
rcrb
sbb
sub
and
mov
shll
and
pop
mov
cmpsb
jmp
cmp
mov
sub
test
xchg
ret
or
mov
repz
filds
in
push
fwait
ja
pop
movsb
ffreep
gs
adc
out
mov
ljmp
arpl
bound
inc
push
cmpsl
sub
mulb
sub
adc
xlat
test
add
jae
push
fwait
jge
pop
pop
leave
hlt
inc
xchg
cmp
jae
ret
adc
pop
and
mov
jg
ret
dec
fidivrs
lahf
nop
aad
sbb
fs
or
nop
push
mov
dec
shrb
jp
push
adc
das
cmp
js
imulb
aad
popf
imull
int
dec
and
jg
aad
xor
push
xor
lods
pop
ss
ret
cmpsl
popf
ja
and
out
in
add
fwait
mov
add
add
add
fistl
enter
cli
or
test
push
jbe
jbe
dec
scas
pop
sbb
push
js
xor
sbb
lret
xchg
mov
inc
cmpsl
jb
mov
mov
clc
fistl
and
fists
lods
xchg
jl
pusha
cmp
jnp
je
push
pusha
enter
in
push
mov
dec
inc
pop
jb
in
pop
jmp
pop
push
cmp
adc
mov
sub
out
cmp
mov
in
in
xor
imul
inc
cmp
outsl
sub
inc
jns
xchg
lods
mov
xchg
adc
negb
pop
neg
lahf
ljmp
movsb
or
add
inc
js
pop
test
js
into
add
inc
or
and
inc
test
subl
lret
inc
js
jg
dec
arpl
mov
jns
fildl
push
scas
ds
mov
and
inc
mov
sub
jl
add
mov
pusha
jae
xor
or
sbb
shrb
cmp
adc
jl
and
outsb
jge
sbb
and
and
or
pusha
jb
and
gs
inc
out
mov
popa
movsl
clc
lds
imul
pop
push
rcl
mov
into
cmp
movsl
imul
sub
out
cld
dec
sub
dec
lret
adc
sub
adc
cld
scas
lret
add
add
or
and
xor
es
orl
int
arpl
cltd
push
xchg
pop
xchg
test
xchg
add
ror
aad
sti
cmp
adc
sub
dec
sahf
cmc
push
cmp
jo
adc
sbbb
cmp
lret
aam
not
lcall
iret
dec
jmp
in
cli
mov
in
mov
adc
jnp
out
enter
subb
cmp
and
mov
daa
pusha
cmp
mov
popf
fmuls
push
mov
mulb
loop
xlat
push
dec
and
aaa
fimull
test
push
out
add
or
loopne
nop
xchg
mov
rcll
lock
cwtl
inc
les
push
jns
and
cmpsl
sarb
dec
cmpsl
and
inc
jae
add
enter
add
cmp
shrb
lock
add
push
pop
push
xchg
out
shll
test
fdivp
std
and
push
outsb
adc
adc
out
orb
cld
cmp
xlat
test
fwait
or
mov
pop
pop
inc
sbb
in
loopne
cmp
ds
jns
jl
jns
or
insb
fstpt
pop
subl
jecxz
scas
cmpsl
and
sbb
xlat
subl
mov
in
sbb
push
push
aad
xor
xchg
pop
mov
icebp
mov
nop
ret
call
mov
addr16
jb
js
pop
push
inc
jge
repnz
test
test
popf
in
sti
test
divb
pop
sub
cmp
lods
push
push
mov
les
gs
inc
jmp
fcmovnbe
in
cli
shl
test
sbb
ljmp
data16
mov
filds
ds
lcall
fimull
scas
and
adc
mov
pop
mov
in
ss
gs
in
push
push
out
filds
add
inc
cmp
aam
sbb
lahf
mov
pop
repz
lea
jle
jnp
inc
enter
int
in
test
gs
push
outsl
test
cmp
fwait
jmp
xlat
or
pop
pop
sbb
test
les
cld
push
adc
dec
mov
out
aam
push
je
mov
sub
push
add
pop
repnz
xor
push
adc
nop
test
sti
cmp
popa
and
mov
and
lods
mov
scas
lcall
faddp
mov
push
and
in
movl
lock
push
rcll
ucomiss
ds
jne
sub
lret
jp
roll
ljmp
aaa
mov
imul
push
ds
inc
fwait
mov
mov
mov
shl
sbb
jmp
jb
int3
aaa
stos
out
fisttps
mov
push
jmp
pusha
int
lcall
mov
sar
pop
push
pusha
stos
and
fcoms
cmpsb
mov
cmpsb
outsb
mov
cmp
cmc
xchg
push
pop
aam
push
pop
stc
orl
cltd
adc
mov
inc
or
push
call
or
lcall
loop
and
mov
sub
jnp
imul
imul
out
add
add
call
mov
fs
es
lcall
jge
fidivrs
scas
push
xchg
in
pop
ja
stos
testl
std
or
adc
test
mov
mov
lret
popf
xchg
stos
push
push
pop
add
leave
mov
mov
lods
xchg
inc
mov
sbb
jo
push
and
fcomi
sub
push
rclb
repz
cli
repnz
call
inc
mov
call
ja
jmp
add
mov
adcl
popl
jmp
xor
outsb
push
add
in
fstpl
es
cli
xchg
or
cmp
out
mov
cmp
mov
add
imul
mov
jns
outsl
or
pop
out
cmp
adc
popf
pop
jnp
fst
mov
add
rcrw
mov
bound
fdiv
mov
aaa
and
adc
nop
ja
pop
inc
mov
dec
call
mov
mov
dec
mov
out
mov
push
pop
jbe
cmpsb
mov
mov
or
mov
faddl
or
pop
clc
lret
sub
push
dec
fsubs
inc
jbe
das
loope
cli
adc
iret
push
xchg
test
mov
pop
add
orps
ss
rclb
in
sub
inc
add
popf
and
push
or
scas
jp
and
sbb
jl
xchg
ret
pop
push
adc
mov
or
or
cmp
popa
and
push
push
int
je
and
mov
aaa
xchg
enter
jo
cmp
dec
inc
cwtl
mov
add
shl
in
jmp
es
loopne
adc
subb
out
sub
loop
sbb
les
sbb
cmpsb
loopne
xor
sahf
cmp
inc
push
dec
negb
stos
adc
outsl
shl
mov
dec
out
mov
and
insl
mov
sbb
push
mov
push
xchg
movl
add
stos
inc
xchg
repz
sbb
cwtl
mov
xchg
or
mov
cmpsb
or
sub
and
js
pop
cltd
negb
test
aam
cmp
adcb
stos
pop
movl
sahf
mov
insl
jbe
push
test
sub
pop
sti
daa
sub
mov
fstpt
arpl
xorl
inc
dec
xchg
and
push
push
out
and
push
hlt
jecxz
mov
in
or
xchg
cmp
pop
push
inc
jnp
jmp
aam
ljmp
jp
inc
es
xchg
scas
jmp
xchg
adc
xchg
and
and
outsb
fs
daa
cwtl
enter
mov
xchg
mov
xor
bnd
lods
movsb
subb
mov
xchg
enter
aam
cld
lock
push
push
dec
adc
adc
pop
xchg
cmc
in
lea
pop
jle
stos
cmp
pop
pop
push
aaa
mov
sarl
inc
push
xor
mov
mov
ljmp
std
jo
sub
lcall
js
inc
or
repnz
rcrb
orb
nop
jae
jle
gs
mov
ret
nop
das
out
pop
sbb
aas
push
dec
jp
cwtl
int3
add
lret
mov
adc
in
lret
xchg
aad
lods
mov
loope
cltd
xor
jb
dec
inc
insb
and
xor
gs
cwtl
mov
movsl
sbb
sbb
xor
inc
ret
cmp
out
xor
cltd
das
mov
adc
es
out
mov
sahf
decl
sbb
addr16
cmp
sar
jle
fs
inc
adcb
fbld
mov
xor
repnz
push
ss
cs
in
addr16
aas
insl
sbbb
inc
mov
mov
and
cmp
xchg
xchg
hlt
cmpsl
lcall
xchg
loopne
leave
lret
mov
lret
or
mov
mov
jge
add
add
add
movsl
outsl
jae
ljmp
mulb
pop
mov
inc
push
inc
fs
das
push
cltd
sub
dec
xchg
ficomps
in
bound
int
push
aam
jns
iret
jns
fsub
adc
pop
adc
pushf
aas
leave
add
xchg
xlat
orl
mov
enter
and
loop
fistps
call
mov
mov
sbb
out
aam
lcall
andb
fsubrl
push
mov
hlt
shr
pop
mov
push
ja
add
jl
inc
xchg
in
lods
movsl
inc
pusha
pop
in
mov
sub
jnp
inc
and
gs
aaa
push
or
mov
pop
and
adc
test
and
or
jp
cmp
fmul
push
jns
test
clc
dec
mov
js
pusha
repnz
test
push
out
in
leave
mov
stos
jne
aad
mov
aam
jne
sbb
or
enter
ss
jns
mov
test
jns
pop
mov
xor
adc
xor
test
adc
adc
add
or
scas
nop
mov
or
push
cltd
fsubl
mov
loopne
adc
and
into
and
xchg
faddl
mov
xchg
mov
pushf
movsl
fdivs
mov
cli
lods
call
movsl
cli
xchg
sbb
je
inc
ljmp
jbe
jae
loop
mov
jecxz
sbb
in
bound
sbb
or
pop
sbb
sbb
cmpb
sbb
mov
sti
rcll
incl
hlt
pop
xor
mov
xchg
in
push
arpl
jmp
je
loope
xchg
push
ret
sbb
into
aas
fnstsw
push
xor
out
mov
xchg
or
inc
fbld
loopne
ljmp
xchg
cwtl
pushf
jo
inc
sahf
push
pop
lret
in
enter
rcr
int
negl
and
mov
in
fists
outsl
dec
lret
cwtl
jbe
outsl
lods
add
mov
leave
out
mov
fiaddl
scas
pop
js
stos
jb
adc
mov
push
mov
xchg
xchg
testl
jnp
adc
pop
fildl
test
or
mov
dec
pop
call
dec
xchg
int
sub
imul
add
xchg
dec
scas
stos
or
adc
cmp
je
dec
xor
shr
das
push
out
mov
jecxz
aaa
sub
ja
cmp
sub
in
push
dec
inc
sub
cmpsb
pop
dec
push
loope
repnz
dec
pop
in
sub
pushf
xchg
aam
popf
push
icebp
out
push
push
and
incb
jmp
mov
es
add
gs
jne
and
scas
shll
hlt
into
js
stos
pop
shrl
jecxz
push
lea
push
in
mov
lods
mov
push
mull
fs
jbe
js
mov
and
jge
jb
es
movsl
fidivl
mov
data16
mov
sub
lods
pop
dec
xchg
sub
mov
cwtl
add
scas
cmpsl
add
mov
cwtl
pop
popf
rorb
jns
cmp
jmp
mov
dec
loope
or
adc
lret
gs
xor
mov
test
inc
roll
ret
xor
jns
push
enter
push
adc
into
test
fs
fsubrl
adc
leave
mov
pop
xor
and
add
jmp
ret
xor
fldl
loopne
jo
sub
add
push
sbb
loope
add
xlat
mov
insl
mov
or
sbb
add
cli
cmp
mov
rcrb
mov
sbb
stos
fwait
into
lds
dec
test
loopne
cltd
push
or
xor
mov
mov
mov
fiadds
pop
or
pop
inc
ret
int
xor
mov
out
mov
mov
faddl
add
dec
stos
adc
pop
icebp
cmp
loope
test
aaa
lret
imul
mov
cli
icebp
cmp
mov
cltd
ds
cmp
out
dec
shlb
lods
jnp
inc
xlat
int
jecxz
dec
les
fstl
ljmp
inc
icebp
loop
in
out
push
pop
or
lock
xchg
loopne
lods
push
test
sbb
dec
cmp
fcmovnu
push
jge
mov
mov
mov
push
sub
sahf
in
ret
enter
mov
in
cltd
xchg
ror
pop
mov
pop
rorb
fs
aas
mull
dec
hlt
dec
stc
scas
jp
repnz
jp
xchg
shr
mov
jp
idivb
es
dec
sbb
dec
pop
and
adc
xor
adc
add
xor
fisubrl
inc
dec
shlb
ss
ret
add
test
insb
sub
cmc
mov
jne
stos
rcll
data16
add
dec
pop
pop
pushf
xchg
out
inc
add
push
cmp
mov
jne
add
and
adc
scas
es
mov
cmpsb
inc
ret
mov
push
sub
mov
pop
scas
adc
jmp
mov
test
and
inc
mov
adc
data16
jge
xchg
aad
sbbb
jmp
inc
inc
add
xor
mov
and
test
mov
or
in
push
push
jl
mov
push
push
cld
mov
outsb
mov
push
cs
dec
dec
jb
push
mov
ljmp
cs
pusha
xor
lret
jmp
jo
insl
push
and
pushf
test
pop
jne
imul
jo
xchg
arpl
mov
inc
aad
mov
es
pop
ret
dec
cmp
sarl
cmp
cmc
fstps
aam
or
jg
dec
ucomiss
dec
insb
popa
or
into
pusha
xchg
jge
inc
mov
insl
dec
mov
in
pop
xor
loopne
outsl
cmp
dec
ret
outsb
lods
imul
pop
dec
cltd
aaa
int
mov
testl
mov
or
jg
xchg
dec
xchg
jg
dec
loope
lcall
ja
inc
mov
div
enter
lea
xor
and
and
imul
add
aad
ljmp
jae
int3
fmul
mov
adcb
cmp
xchg
inc
in
mov
sub
inc
call
mov
mov
rorl
push
icebp
sar
shrl
add
and
add
cmpsl
cmp
add
stos
rcrl
shlb
sti
and
mov
pop
mov
push
jl
fiaddl
dec
dec
lea
adc
mov
fs
or
sub
sar
cmpsl
insb
dec
cmp
jle
cmp
pop
ret
cmp
aad
xor
rcrb
cmp
test
ljmp
jns
iret
in
lock
std
ljmp
in
sti
test
lods
lcall
sub
arpl
push
mov
cmp
mov
andl
icebp
data16
aam
mov
jg
cmp
fs
push
fcmovnb
idiv
push
mov
mov
les
repz
dec
adc
inc
pop
pop
mov
jmp
rclb
xor
sub
loopne
xchg
hlt
jge
cs
cmp
bound
xchg
daa
add
sbb
ds
pop
shlb
xchg
mov
xchg
adc
push
gs
jns
jmp
push
scas
gs
aas
jno
repnz
idiv
ret
aaa
shlb
les
shl
mov
push
push
pop
arpl
ss
jno
pushf
jo
addr16
xor
nop
in
and
jae
jnp
mov
fsubrs
xlat
daa
or
jecxz
dec
dec
shrb
add
xor
movsl
dec
lods
inc
sub
and
mov
ljmp
jp
test
sub
xlat
ja
or
imul
stos
out
cmp
sub
xchg
cmp
push
inc
psadbw
lahf
jp
jo
movsb
pop
mov
push
push
add
mov
fsubl
mov
repz
adc
dec
cwtl
dec
aam
dec
jg
mov
scas
mov
inc
mov
xor
sbb
dec
aam
push
repz
pop
pop
out
or
push
sub
xchg
ret
ret
aam
cmp
gs
arpl
jb
rcll
dec
aaa
pushf
iret
xorb
mov
pop
dec
or
push
iret
insb
ds
sub
or
jno
cli
push
out
das
push
pusha
imul
and
imull
xchg
idivb
and
outsb
sub
jne
fstpl
rcrl
aas
pop
ds
push
lea
mov
es
mov
int3
add
mov
lods
fcom
xchg
pop
jmp
cmp
xlat
mov
fwait
shlb
and
arpl
mov
xchg
mov
shll
jmp
sbb
sub
subb
cs
adc
sub
negb
lcall
fsubrs
shll
dec
xchg
push
and
popa
lea
fiaddl
jbe
and
movsl
fildll
popa
and
fnstcw
mov
outsb
mov
leave
rcll
aam
leave
cwtl
xchg
mov
jle
aaa
inc
fildl
add
mov
fistpll
int
in
repz
inc
xor
ror
sub
sbb
push
imul
leave
ret
adc
lret
mov
push
out
add
ret
inc
sbbb
cmp
fistps
stos
insl
cmp
inc
adc
sbb
mov
imul
jg
inc
mov
pop
add
add
scas
dec
pop
out
fildl
in
cmp
xor
dec
jnp
insl
daa
insb
mov
inc
cmp
add
mov
popf
adc
sbb
inc
sbb
mov
adc
mov
dec
xor
dec
filds
sub
add
lods
sub
push
fisttps
mov
add
outsb
sbb
inc
sbb
cmp
idivl
inc
test
or
inc
xor
and
data16
mov
popa
or
cli
fidivrl
xchg
mov
mov
jbe
jo
jle
xchg
mov
int
pop
scas
lret
imul
leave
pop
fs
mov
data16
ds
ret
xor
ljmp
pop
out
push
mov
jmp
add
dec
fidivs
pop
pop
lahf
pop
fadds
cmp
cli
loope
lret
inc
pushf
push
adc
lods
aaa
cmc
cmp
out
out
push
jae
cmp
mov
pop
mov
out
xor
movsl
push
or
jg
js
xchg
rcrb
divb
inc
cld
push
scas
adc
dec
mov
stos
push
sbb
loop
fstpl
jb
gs
adc
int3
loope
and
out
cmp
mov
incb
xor
cltd
clc
and
or
xor
inc
and
push
mov
mov
push
xorl
ja
mov
test
mov
mov
das
mov
inc
mov
pop
push
cltd
into
inc
inc
inc
pop
inc
stc
push
movsb
cmp
pop
add
mov
cmp
jae
hlt
cmc
sub
jmp
push
cli
lods
rcrl
jne
scas
daa
popf
dec
dec
xor
dec
pop
test
call
sahf
inc
add
pop
push
jg
neg
popa
scas
mov
sub
and
loope,pn
jbe
test
cltd
or
pop
cmpsl
jle
and
inc
push
sahf
and
push
sub
adc
sub
push
lahf
push
lret
pop
cwtl
xchg
mov
sbb
dec
mov
adc
mov
addr16
pushf
mul
scas
test
je
inc
fstpt
mov
out
iret
aaa
test
std
cmp
clc
or
imul
jecxz
subb
lret
je
mov
shl
inc
and
xchg
pop
jmp
shl
mov
shll
add
fstpl
and
ljmp
jge
outsl
stos
sub
fdivr
jp
jp
xchg
pushf
icebp
popa
pusha
cli
adc
add
mov
mov
lock
push
idiv
mov
je
jbe
int3
addb
adc
stc
imul
shl
jmp
cmc
mov
pushf
sbb
mov
jno
repnz
mov
mov
shlb
sub
sub
mov
sub
mov
jne
int3
fldcw
mov
shlb
xchg
mov
js
xor
mov
add
push
in
xchg
loop
jle
dec
rcrb
out
ret
dec
xchg
lret
repnz
test
int
shll
out
popa
adc
negl
push
dec
addr16
xchg
ja
xchg
mov
push
lmsw
jg
test
cmp
pop
inc
out
or
je
mov
std
stos
jge
ficomps
push
popa
jb
hlt
jl,pt
out
movsb
push
loop
fsub
add
mov
add
fwait
scas
lods
fdivr
xchg
lods
and
test
mov
movsl
idiv
jb
mov
mov
sbb
or
imul
jne
nop
xchg
push
out
aam
icebp
arpl
or
mov
mov
mov
pop
repnz
cld
cmp
inc
mov
jmp
dec
sub
cmp
std
mov
pusha
jns
pop
enter
jns
je
pop
out
jo
aam
mov
push
sahf
mov
jb
add
nop
jb
adc
andl
pop
in
mov
or
inc
pop
sub
lods
aam
mov
sahf
adc
mov
inc
daa
lret
or
fwait
imull
jle
rcl
mov
cli
sub
xchg
push
scas
pop
mov
aaa
xor
pop
popa
fwait
arpl
mov
jnp
lods
bound
aad
add
jbe
les
mov
rcr
jae
mov
jbe
movsl
repnz
jge
cmpsl
jbe
xlat
and
gs
mov
mov
aaa
xchg
les
stos
xchg
out
mov
ds
in
xor
add
scas
paddsb
mov
jb
scas
sub
subb
popf
test
jge
les
mov
imul
and
xchg
push
jle
pop
enter
sub
push
sti
mov
jb
or
xchg
mov
push
jge
pusha
or
push
jp
test
push
cmpsl
xchg
sub
push
dec
xor
jmp
dec
hlt
inc
lret
push
int3
dec
mov
imul
test
sbb
xor
jle,pt
aas
int3
mov
jmp
cs
movsl
mov
ja
sbb
movsl
mov
and
in
or
ljmp
and
popa
mov
ret
or
in
insl
pop
mov
jno
mov
mov
scas
je
push
xor
cwtl
clc
popa
shll
sub
mov
cmp
xor
jle
flds
lods
or
xor
imul
push
int
repz
mov
pop
add
and
movsb
or
in
jecxz
xchg
pop
out
fninit
and
mov
xchg
faddl
sbb
dec
xchg
aam
push
adc
ret
int3
sbb
pop
push
das
mov
ret
stc
sub
mov
hlt
testb
in
out
gs
inc
stc
fcom
pushf
icebp
lcall
test
jno
shll
sarb
movsl
imul
xorl
push
mov
in
les
out
mov
in
mov
inc
cld
aaa
ja
adc
fsubrp
xor
lods
es
lahf
test
ret
jno
es
jno
mov
pop
movsl
addl
cmp
sub
ss
sub
and
mov
ja
xchg
dec
xor
ret
sahf
sub
rep
aad
in
or
sub
mov
test
int3
pop
jmp
sbb
xor
xadd
inc
adc
shlb
inc
ret
int
test
mov
dec
pop
movsl
arpl
nop
push
jb
mov
push
xlat
and
adc
cmp
jle
xor
adc
iret
pop
rclb
loop
xor
push
stc
dec
mov
jns
push
out
pop
lahf
mov
adc
add
rolb
push
adc
stc
mov
and
jg
mov
pop
add
bound
mov
add
inc
scas
in
dec
push
outsl
int
inc
je
xchg
mov
std
lock
fprem1
pop
mov
in
jns
loope
lahf
sbb
jecxz
into
fidivs
jne
mov
mov
cmp
sti
sbb
lods
aaa
ljmp
stos
xchg
xor
lret
fistl
rol
add
sbb
mov
int
es
or
sub
in
pop
cmpsl
loopne
jecxz
jp
shrl
fcomps
push
mov
push
pop
fidivs
nop
xchg
sbb
inc
out
add
fbstp
ljmp
sbb
loop
dec
mov
js
mov
jno
fwait
aaa
stc
rcrb
dec
xchg
inc
clc
out
pop
inc
xchg
sbb
xchg
pop
movsl
xchg
lahf
insb
movb
into
pushf
push
aam
push
pushf
dec
je
in
pop
out
or
xor
sub
mov
jae
and
inc
insb
test
lds
mov
lcall
add
in
lds
out
daa
aas
dec
add
aaa
fdivrl
or
xchg
jp
lods
das
fbstp
jns
mov
jae
subl
mov
xor
lock
jmp
add
repz
outsb
insb
stc
add
lcall
enter
lcall
int3
nop
xchg
sbb
mov
enter
loopne
mov
push
std
adcb
xchg
xor
sahf
mov
shll
cmp
adc
test
rcr
sbb
sub
popf
call
stos
les
push
inc
push
mov
cwtl
xor
sahf
ret
movsl
adc
sbb
imul
add
inc
pop
fnstcw
test
sbb
fstl
xchg
xchg
mov
aas
dec
inc
dec
add
mov
pop
and
push
in
cmp
sti
add
xor
ficoms
or
inc
xchg
out
stc
test
adc
cmp
cmp
dec
call
out
lods
jne
push
packsswb
push
es
and
mov
ja
add
js
xchg
mov
push
test
push
and
loope
cmp
mov
inc
push
test
or
sbb
cmp
sbb
push
push
push
mov
into
inc
test
adc
lds
mov
jno
push
xor
pop
outsb
shll
pop
jecxz
push
mov
inc
sub
ret
push
adc
or
shll
pushf
into
test
push
dec
mov
jmp
fisubl
pop
and
mov
jp
cmpsb
xchg
sbb
int3
dec
loopne
mov
dec
es
adc
daa
dec
test
jmp
mov
xor
std
pusha
mov
sub
out
cmp
xor
daa
in
xor
lods
lret
xchg
in
hlt
mov
mov
adc
loope
and
repnz
inc
daa
call
sub
xchg
adc
pop
mov
bound
dec
push
push
sbb
mov
movsl
out
jl
add
shll
cmc
dec
xchg
test
mov
jp
xor
lcall
jg
mov
jge
inc
sbb
out
pop
mov
adc
inc
mov
cmc
out
pop
sub
ret
push
insl
ror
cwtl
inc
testl
and
test
pop
xchg
mov
dec
fld
mov
dec
jle
xlat
xchg
xor
cmp
sub
dec
mov
cwtl
sub
inc
je
add
pop
xchg
cmp
ret
fldl
lret
mov
lock
adc
test
shlb
sahf
mulb
mov
repnz
testb
xchg
ss
pop
and
fnsave
lcall
leave
lcall
popf
loop
js
out
and
push
sahf
add
sub
mov
dec
ds
push
jecxz
or
rclb
jae
aad
xchg
pop
fmulp
sub
movsb
inc
lds
imul
cmpsl
clc
in
or
dec
xchg
cmpsl
call
leavew
andl
pop
mov
fwait
or
je
nop
movsl
sub
popf
iret
dec
push
andb
in
push
out
xlat
xchg
add
test
mov
lcall
mov
fdivs
aad
cmpsl
mov
fidivl
dec
jmp
add
daa
test
mov
inc
push
leave
shlb
fcoml
jo
mov
mov
add
insb
rolb
sbb
xor
push
lret
shl
jecxz
sub
sbbb
das
ljmp
int3
mov
popf
out
sub
mov
lds
iret
out
adc
scas
cmp
rcrb
sahf
cmp
ficompl
out
push
or
lcall
dec
xchg
adc
inc
or
push
push
stos
stos
repnz
in
xor
inc
call
mov
and
or
add
mov
and
xchg
inc
pushf
inc
xor
mov
into
rclb
adc
js
inc
hlt
insb
movsl
cmpsb
jl
or
inc
sub
xchg
fwait
mov
inc
xor
jp
jle
lea
outsb
add
sub
daa
push
addr16
xor
add
pop
je
inc
sbb
int
rcr
mov
cmpsb
fldl
lahf
mov
jecxz
mov
repz
test
xor
and
aam
pop
in
ja
pop
push
daa
push
lcall
in
sbb
inc
mov
pop
pop
js
stos
cmpsb
imul
cmp
popf
cmp
mov
inc
adc
mov
scas
repnz
ds
sbb
mov
xchg
sbb
cmp
jno
aad
xorl
in
push
sub
xchg
mov
add
ja
cli
shrb
fs
pop
loop
test
ret
push
push
dec
test
rcl
loop
ja
sbb
cmp
insl
cmp
xchg
sahf
shrl
jns
mov
addl
cmp
pusha
mov
not
mov
lahf
imul
lret
sbb
cs
push
daa
leave
jp
js
mov
sub
jmp
xlat
inc
push
incb
jmp
subl
xor
insb
jae
cmpsb
ret
lcall
push
and
cmp
mov
xchg
movsl
and
xchg
ficoms
xchg
popa
test
mov
test
adc
aam
pop
cmp
popa
jle
cli
dec
ficoms
std
xlat
out
bound
sub
out
movsl
or
aam
dec
imul
adc
cmp
rclb
lea
jns
test
aad
aaa
scas
adc
pop
pop
subb
fisubrl
pop
js
popf
jb
or
and
cmp
push
mov
and
xchg
sub
sub
push
fldenv
and
cmpsb
aam
xor
into
mov
or
push
int3
mov
push
mov
jg
sarb
or
scas
sub
jne
pop
pop
push
push
mov
loop
dec
sub
dec
lahf
cmp
jnp
jge
or
sbb
cmpsl
mov
sti
cmc
jge
pop
mov
mov
mov
xor
test
rcrb
mov
sbb
aam
add
or
mov
push
xchg
cmc
in
xchg
lods
mov
lret
lods
out
pop
xor
test
jno
stc
dec
fldenv
aam
mov
cltd
adc
psrlq
cmp
xchg
inc
movb
mov
sub
clc
fdivs
inc
fildll
int
ret
lcall
std
inc
rcl
pop
jnp
call
dec
test
in
pop
scas
add
cmp
outsl
push
dec
insl
pop
sub
sbb
jbe
or
ss
mov
inc
pop
or
out
inc
aaa
push
push
cmp
mov
punpckhdq
push
in
mov
xlat
dec
jb
lcall
sti
pop
lret
adc
leave
or
in
ror
movsl
push
and
aaa
add
inc
push
mov
adc
incl
imul
repz
xchg
movsl
icebp
pop
xchg
xchg
push
outsl
movsl
sbb
cmp
sub
bound
in
es
push
lea
jl
ljmp
pop
loope
aas
repz
fidivs
or
add
and
adc
insb
jmp
mov
outsl
mov
or
jno
popf
inc
adc
add
mov
adcl
hlt
jmp
inc
xchg
cmc
adc
lods
nop
mov
push
dec
sbb
pop
loop
in
inc
stc
xor
pop
dec
pop
scas
dec
imul
mov
lret
xchg
loope
inc
fwait
mov
adc
cmc
pop
dec
repz
repz
sub
xchg
cmc
mov
xchg
push
and
jae
ret
push
lahf
pop
sbb
outsb
mov
jno,pn
pop
nop
jnp
dec
mov
loop
sub
pop
xchg
dec
mov
icebp
jmp
jecxz
fs
push
or
push
pop
loopne
xor
mov
cwtl
or
ljmp
sub
in
pop
test
andl
out
pop
in
pop
jbe
aam
cmp
cld
sub
jno
push
pop
mov
sahf
add
fwait
sbb
jnp
push
dec
lahf
popf
test
jo
xchg
insl
cwtl
leave
in
aaa
mov
fs
fldl
xor
sbb
jl
cs
nop
pop
call
push
pop
sbb
mov
or
pop
jnp
jnp
push
push
xor
faddl
bound
into
cmp
rclb
popf
cltd
xor
mov
adc
jnp
pop
iret
orl
cmc
ljmp
or
dec
mov
mov
leave
sbb
daa
jno
pop
sbb
outsl
mov
je
jp
ljmp
jle
mov
ljmp
or
mov
jge
inc
sahf
jp
jp
mov
sbb
pop
sub
notl
and
jle
out
ficoms
fs
pop
std
negb
jl
and
scas
mov
fsubrl
popf
jecxz
or
cwtl
mov
fs
mov
in
cld
loop
add
shl
lret
cmp
dec
jbe
aam
push
mov
cwtl
shlb
cvtpi2ps
stc
sub
inc
xor
or
dec
or
xor
in
das
cmp
scas
test
adc
loope
fsubrp
jmp
and
mov
divb
rcl
cmp
cmpb
cmp
popl
into
leave
inc
out
js
push
or
jne
lock
fldcw
xchg
push
call
fiaddl
shlb
push
cld
in
daa
out
enter
out
cmp
ret
jno
in
sub
dec
lahf
push
lds
movl
test
mov
cli
fsubp
imul
test
jle
ss
xchg
arpl
lods
mov
imul
xor
dec
mov
xchg
popw
xchg
jmp
sti
in
mov
sahf
pusha
jmp
dec
mov
or
xchg
imulb
sub
pop
dec
xor
jae
xchg
pop
movsl
lahf
sbb
jge
mov
ja
xchg
leave
inc
mov
or
lret
stc
or
pinsrw
inc
pop
xor
icebp
pop
xchg
lcall
sarb
sbb
imul
xchg
xchg
mul
cli
pop
adc
mov
pop
inc
ret
cltd
fildll
jnp
and
int3
mov
xadd
testb
cmp
sbb
jb
ret
xor
lock
fldenv
loopne
add
mov
andb
mov
sub
out
aam
ljmp
rorl
pop
sbb
mov
or
jmp
fstp
lods
push
cli
loopne
push
push
push
cltd
fs
pop
repz
mov
dec
mov
lock
xor
aaa
adc
nop
shlb
mov
aaa
pop
mov
daa
mov
mov
pushf
into
out
xchg
jge
push
inc
xchg
mov
add
aaa
sub
or
add
adc
sbb
or
or
inc
ror
pop
cmpsl
cmp
pop
push
jle
adc
cmpsl
dec
mov
inc
add
push
jmp
int
dec
cltd
sbb
movsb
or
ss
das
push
cmp
or
mov
xor
add
mov
sub
xor
aaa
mov
sbb
test
inc
dec
fbld
add
pop
daa
jae
shlb
lret
and
or
adc
push
sub
dec
adc
movsb
lahf
jmp
adc
aad
in
mov
push
push
loopne
fs
std
mov
mov
cmp
and
xchg
adc
push
push
testl
fldl
int3
hlt
std
adc
out
out
outsb
dec
fdivl
add
ljmp
insl
loop
test
insl
xchg
lods
cmp
sbb
jno
or
xchg
test
sub
nop
dec
divb
gs
popa
arpl
pop
fucomp
in
jno
cmc
jg
push
add
jnp
pop
push
insb
aam
adcl
dec
mov
and
dec
stos
or
mov
mov
fldl
add
test
in
mov
or
inc
push
mov
into
inc
lock
insb
jl
push
lret
out
dec
es
cmc
mov
cmc
ja
mov
cs
jbe
cmc
dec
mov
dec
xor
addb
push
add
cmc
leave
lock
ja
jae
cltd
jmp
lret
cmc
mov
mov
adc
push
mov
jecxz
push
jge
out
push
inc
pop
add
inc
or
int
mov
cmp
in
dec
jae
or
ret
es
adc
js
adc
aam
mov
jl
jecxz
or
jp
inc
idivl
jg
push
cmp
mov
shll
orl
jae
in
fprem
lea
cmpsl
mov
lods
lea
testb
push
lahf
faddl
arpl
inc
cld
test
or
mov
shlb
jb
sbb
push
andl
adc
movsb
je
xchg
inc
pop
mov
call
and
dec
mov
add
int3
and
add
adc
repnz
push
outsb
inc
push
pop
icebp
pusha
stos
hlt
xchg
imul
hlt
test
fldt
xor
or
popf
sbb
stos
sbb
add
sub
loop
aad
xor
adc
xchg
mov
mov
lods
aas
adc
fdivp
mov
pop
shrb
inc
adc
lods
and
into
test
call
out
mov
inc
dec
bound
push
mov
xor
xchg
psubusb
jl
ds
mov
adcl
xor
mov
sbb
aas
dec
adc
sub
pop
push
or
lods
rclb
enter
sbbb
pop
ss
int
sub
test
shl
dec
xchg
subb
dec
mov
in
sbb
jns
adc
add
popf
sub
push
mov
cvtps2pd
icebp
or
inc
add
aad
xor
pop
adc
and
jge
rclb
pop
jns
xor
push
lcall
mov
or
adc
repz
fs
push
movsb
jns
lret
dec
fwait
inc
push
lods
pushl
cltd
mov
xor
cwtl
shr
add
loope
dec
cmp
jnp
push
shrb
push
test
fbld
out
pop
sub
lcall
wrmsr
mov
jo
and
xor
jnp
je
cli
dec
cmp
sub
cli
popa
fcomip
add
jl
lret
mov
adc
push
pusha
movsl
xchg
push
mov
add
push
mov
ss
xchg
pop
cmc
add
test
cmp
jl
test
fs
mov
stc
mov
stos
fsubl
cmp
sbb
jp
cmpsb
into
jp
cli
lldt
into
mov
push
push
sbb
jle
fidivrs
shll
andb
adc
lock
jecxz
mov
pop
push
nop
jbe
sub
jle
clc
clc
outsl
push
sahf
add
mov
in
jno
outsb
add
mov
aam
mov
iret
jmp
outsl
push
test
psrld
jmp
jmp
jg
aad
test
aaa
xor
mov
shlb
dec
lea
rorb
inc
incl
push
aad
insb
mov
scas
inc
dec
ret
or
mov
sbbl
adc
xchg
jle
sub
dec
pop
outsb
test
dec
nop
jecxz
movsl
insl
cwtl
popa
aas
lea
xor
hlt
cmp
mov
pop
stc
aaa
push
xchg
das
inc
dec
dec
pop
rcrl
xchg
loope
ja
stos
iret
pusha
addr16
mov
inc
lcall
imul
mov
mov
fs
sbb
dec
rolb
imul
xor
lea
std
addr16
dec
rorb
mov
sub
and
icebp
hlt
in
push
lods
loope
cli
lcall
fdivl
pop
add
push
xor
data16
add
and
rcrb
and
pop
mov
xor
mov
cwtl
test
jle
sbb
adc
jb
jns
fidivs
jns
gs
cmc
xchg
push
push
mov
sub
sbb
ret
insb
or
cli
add
sbb
arpl
pop
jg
sbb
repz
nop
stos
aas
mov
sbb
adc
or
inc
cmp
fst
outsb
inc
push
leave
lahf
icebp
cmp
cwtl
adc
scas
sahf
sub
or
not
repnz
sbb
mov
xlat
mov
sti
test
inc
lea
push
repz
mov
mov
sub
adc
cmp
cmp
jne
shr
cli
mov
sbbb
mov
int
movsb
data16
inc
mov
push
nop
push
sahf
nop
pop
jae
ret
lea
jmp
push
sahf
int3
add
aas
jo
popa
dec
aad
sbb
sbb
mov
or
into
js
dec
popf
mov
pushf
or
jns
and
movl
imul
mov
popf
xchg
jbe
xor
imul
mov
pop
cmp
cs
mov
mov
mov
aas
stc
subb
popf
xchg
rcrl
repz
movsb
fbld
push
pop
pusha
push
cwtl
inc
insb
sub
xchg
shll
pusha
or
xor
cli
cmpsb
inc
cmpl
push
rorl
ja
scas
pop
xchg
rcrb
aad
adc
lret
cmp
mov
imul
push
orb
jnp
mov
outsb
xchg
int
adc
and
stos
dec
jbe
push
call
mov
push
inc
movsl
lods
repz
ret
jge
pop
pop
stos
aaa
adc
je
or
push
sub
ljmp
jno
adc
imul
cmp
jo
call
les
cmpsb
sbb
loop
repz
fwait
cli
and
lret
pop
loope
sub
repz
lods
mov
sbb
aad
insb
fbstp
mov
adc
movsl
cmp
fdivrp
scas
aad
push
add
jle
arpl
lods
repnz
mov
dec
mov
fsubr
inc
pusha
sbb
test
sbb
jg
cmp
arpl
push
clc
pop
jmp
out
pop
cmpsl
ret
test
and
xor
inc
dec
mov
jecxz
mov
cmp
sub
push
adc
fidivrl
xchg
movsl
cmp
jl
add
rcrb
scas
sub
xchg
cmp
mov
lds
mov
out
add
les
cltd
out
shll
ljmp
sub
ljmp
test
and
mov
out
stc
mov
lcall
roll
arpl
imul
inc
mov
cmpsb
cmpsb
add
imul
mov
mov
and
push
aaa
sub
jle
mov
jnp
arpl
or
xchg
ljmp
sbb
lea
jl
mov
rolb
pop
ret
repnz
sbb
notb
pop
fdivrl
pop
xor
xchg
adc
pop
into
sub
sbb
lret
shrl
xor
hlt
sbb
pop
xor
jae
dec
xor
and
xor
mov
mov
mov
or
btc
mov
or
and
mov
or
sub
je
pop
adc
pop
mov
loopne
adc
mov
test
cmp
ja
adc
mov
fsubs
jp
imul
sti
sbb
pusha
aam
sub
mov
pusha
push
mov
cli
mov
fdivs
out
into
xor
loopne
and
xchg
std
bound
jns
xor
insl
out
int
out
adc
mov
push
and
cmp
cmp
add
pop
add
stc
stos
subl
push
and
lret
pop
mov
jne
rorl
lods
adc
test
inc
xor
ret
mov
pop
and
das
cmp
xchg
push
in
push
movsb
jge
jnp
mov
and
pop
cmp
cmpsl
cmp
fbld
sub
ja
data16
mov
ret
int3
sahf
das
negb
movsl
movsb
scas
push
pushw
in
stc
push
loopne
ret
cmp
sub
mov
jno
adc
clc
clc
ljmp
jmp
sbb
gs
or
addl
and
ljmp
adc
icebp
sbb
lret
or
movsb
push
mov
or
imul
movsb
add
cld
and
aas
dec
sub
shrl
rclb
cwtl
stc
xor
test
aaa
or
fwait
rcll
or
ficompl
jb
in
pop
fimuls
loope
out
jp
rclb
inc
inc
or
add
jg
xchg
dec
iret
subl
or
fimull
cmp
adc
repnz
mov
pop
into
pop
mov
pop
jp
inc
pop
xchg
and
jle
ret
test
outsb
imul
fs
pop
lret
mov
les
sti
mov
cmpb
xor
lar
jecxz
or
in
in
pop
leave
pushf
movsl
int3
and
jg
dec
stc
push
push
loop
sbb
pop
or
ror
add
xchg
jmp
sbb
enter
shll
xchg
push
lods
pop
cltd
and
xchg
push
cmp
sbb
call
adc
push
push
push
pop
ffree
pushf
xchg
cmp
out
sti
sub
int3
in
push
sti
icebp
lahf
cmc
mov
jb
repz
bound
add
int
cmc
cmpsl
mov
add
jno
stc
cmp
add
xor
in
in
leave
pop
xor
popl
ljmp
rclb
sub
push
add
sub
ret
mov
mov
xchg
addb
fsubrs
sub
sbb
or
cltd
paddusw
bound
std
inc
loop
pop
mov
inc
repnz
cmp
jne
xlat
shrb
cmp
mov
int
clc
inc
stos
inc
shll
pusha
jge
sbb
mov
fstpt
push
sub
mov
fsubs
iret
sub
xor
mov
cmp
push
je
xor
loopne
xchg
in
mov
add
inc
fcomp
test
and
pop
or
push
and
enter
pop
mov
or
dec
pushf
insb
xchg
outsl
cmp
idiv
sub
bound
xchg
or
mov
orb
lcall
iret
sarl
jb
fnsave
jno
arpl
mov
adc
movsl
ja
lret
jl
pop
sub
cld
cmp
mov
dec
daa
cmpsl
xchg
xchg
rcl
add
rcll
data16
xchg
sbb
pusha
ljmp
mov
sbb
dec
lods
dec
jno
inc
mov
or
rorb
stos
cmc
cmc
insl
jle
mov
jo
mov
shl
fsubrs
stos
ret
cld
jae
mov
add
scas
je
jns
out
adc
nop
movsb
mov
mov
pop
mov
cmp
mov
sub
and
and
sbb
add
push
sbb
icebp
push
lea
sub
cmp
mov
dec
cmp
push
test
in
aad
xchg
test
sub
push
mov
clc
fcmove
sbb
xor
or
scas
and
dec
mov
fbstp
sub
scas
js
push
adc
or
and
push
in
clc
inc
daa
jle
hlt
cmp
sbb
pop
sub
dec
inc
inc
dec
and
popf
pop
andl
bound
ja
repnz
daa
hlt
sbb
es
push
mov
in
loop
lcall
push
sbb
dec
or
sbb
adc
rcrl
adc
dec
int3
xchg
mov
adc
push
add
jbe
out
test
cs
inc
imul
cli
pop
icebp
xchg
lea
adc
loope
movb
cld
xor
push
rcr
pop
iret
inc
mov
test
scas
add
xchg
out
inc
notb
push
int3
jecxz
xor
mov
lods
mov
popa
stc
and
loopne
pop
pusha
sbb
cmp
sahf
test
inc
lcall
dec
call
int
mov
sbb
mov
mov
int3
jmp
lods
or
cld
pop
sarl
pop
push
ljmp
lds
test
sub
pop
jnp
or
addl
sar
dec
stc
pop
adc
rorb
js
aaa
or
mov
cmp
into
mov
sar
rcrl
pop
xlat
loop
mov
sbb
xor
jno
test
adc
stc
lods
fwait
cld
shlb
adc
pushf
fldt
aad
pop
insl
or
arpl
rcl
pop
mov
inc
aad
sarb
stc
stc
xchg
dec
add
xor
jp
stos
loop
pop
sub
and
sbb
fists
jle
push
ret
loopne
ror
push
sub
out
mov
or
mov
add
xor
adc
sbb
js
movsl
enter
xchg
imull
out
nop
xor
sbb
pusha
adc
dec
and
mov
xchg
xor
hlt
mov
testb
jg
stc
add
mov
jae
pushf
movsb
out
repnz
push
xor
cli
xchg
mov
push
mov
cmp
int
push
inc
sahf
sarl
adc
xchg
cmp
fnsave
mov
imul
push
stos
xchg
incl
inc
pop
jb
int3
rclb
lods
or
dec
enter
sahf
pop
mov
dec
sarb
jg
icebp
adcl
loopne
call
mov
lea
mov
nop
mov
cmpl
pop
push
mov
ljmp
repz
push
push
pop
fs
cli
jg,pn
push
into
cmp
jnp
repz
lea
cmp
push
jb
test
sub
in
push
or
bound
mov
push
sub
xor
mov
jne
in
sub
in
fimull
dec
jns
cld
pop
inc
out
push
out
or
push
jnp
fistpll
ljmp
imul
sub
mov
adc
lahf
inc
arpl
mov
and
dec
push
mov
hlt
repz
jg
sti
add
call
into
lock
mov
scas
jmp
mov
sub
lret
push
jnp
add
push
popf
out
aaa
mov
dec
test
movsb
in
fiaddl
dec
or
test
xchg
dec
ljmp
aas
pop
sbb
inc
mov
ljmp
aam
sub
jmp
mov
push
orl
push
dec
mov
repz
push
mov
add
jo
sbb
scas
jne
repz
mov
clc
dec
inc
filds
js
push
sub
adc
data16
nop
loope
cmpsb
push
sub
xchg
aad
sub
lahf
or
lds
pop
mov
lret
test
outsl
xor
push
cmp
jg
loopne
out
cmpsl
lahf
lea
add
xchg
int3
rcrb
mul
mov
sbb
cmpsb
repz
lds
sbb
dec
cmpl
repnz
inc
jno
inc
cwtl
inc
cmp
jmp
sbb
faddl
push
xchg
loope
jp
sbb
mov
sbb
pop
xchg
adcb
inc
or
jge
jmp
jnp
or
or
dec
fsubl
mov
pop
cmp
or
xchg
xchg
insl
in
leave
stc
sbb
xor
push
ret
sub
in
stc
add
push
jp
sub
mov
mov
pop
adc
in
loopne
cli
and
popf
or
pop
icebp
xchg
sub
inc
cmpsl
fisubrs
xchg
dec
sbb
or
xchg
in
push
push
bound
movsb
ffreep
insb
and
adc
push
in
xchg
or
mov
xchg
cld
lret
fnstsw
scas
hlt
addr16
mov
xchg
aas
xor
dec
pop
out
mov
mov
cmpsl
sbb
fcompl
mov
push
cli
mov
cmpsb
ja
lods
sub
aas
pop
jge
pop
dec
in
cld
imul
or
inc
iret
sbb
push
fwait
sbb
xchg
adc
inc
out
daa
subl
lea
mov
add
xor
andb
jge
add
xor
xor
jnp
lahf
xor
pushl
addr16
mov
dec
sarl
inc
addr16
cmp
hlt
inc
cmp
std
sub
pop
inc
inc
jmp
ret
dec
subl
cli
js
arpl
dec
xlat
or
mov
jmp
dec
push
jmp
cmp
cmp
lret
pop
repz
adc
jl
push
add
or
scas
movl
ret
mov
mov
mov
mov
out
out
mov
push
out
scas
rcll
jno
icebp
xchg
adcl
mov
iret
mov
aas
push
das
clc
or
jge
xchg
push
adc
je
or
xchg
dec
rcl
xor
test
mov
repnz
pop
sarl
movsb
mov
inc
repz
cltd
mov
mov
xlat
jle
sub
push
add
xchg
sub
rcrl
fst
fcmovb
mov
cmp
sub
in
bound
daa
jae
sub
enter
inc
pop
pop
out
xor
cwtl
adc
insl
pop
test
fmulp
pushf
xchg
pop
and
mov
jg
or
mov
inc
out
icebp
shlb
clc
sbb
int3
cmc
mov
daa
mov
mov
sub
fcompl
dec
scas
cli
cli
imul
fsubrl
xchg
push
and
bound
adc
adc
mov
cmpsl
fsubrs
sbb
test
add
sbb
imul
dec
pop
xor
mov
out
jo
push
inc
repnz
and
sbb
cmc
add
cmp
mov
adc
shlb
mov
xchg
icebp
push
orl
mov
jmp
mov
and
xor
sbb
shlb
push
lock
out
enter
aas
sub
imul
mov
and
sahf
adc
adc
out
mov
mov
aas
mov
out
aas
aam
clc
dec
xor
jne
dec
dec
ss
xor
xor
stos
lret
aam
inc
xor
repz
jg
add
pop
dec
int3
ret
xor
mov
pop
insl
pop
data16
mul
xchg
or
ffreep
hlt
sahf
inc
cmp
xchg
aas
lret
pop
jb
push
jge
cmp
and
jne
pop
cmc
out
js
filds
pushf
xor
jle
test
daa
test
mov
fdivl
leave
mov
ret
xor
js
call
cmp
and
mov
xchg
popf
test
rcrl
mov
adc
cmpb
add
lods
sbb
lahf
or
dec
out
cltd
jmp
xlat
ret
dec
imul
loop
das
push
fbld
andl
loopne
inc
jmp
fwait
mov
shr
push
es
mov
fs
add
jecxz
js
dec
cld
insl
ret
lahf
add
inc
hlt
repz
xchg
sbb
lock
lcall
inc
movsl
aad
jmp
jge
add
sbb
jecxz
int
adc
repnz
push
pop
scas
mov
rcrb
xchg
out
or
repnz
pop
sbb
mov
pop
sub
jnp
adc
fs
repz
and
mov
push
imul
push
cmp
test
sbb
in
pop
add
in
xchg
pop
cmpsb
push
sub
add
into
loop
popf
xchg
lods
rorl
add
in
arpl
adc
fninit
fsubr
and
xchg
xchg
shrl
xchg
dec
cmp
out
mov
push
js
movsb
mov
inc
loopne
cltd
dec
das
mov
out
loope
xchg
nop
iret
popa
mov
xchg
rolb
push
imul
push
enter
push
jecxz
mov
xchg
sub
mov
ja
sub
pop
add
add
mov
orl
push
mov
adc
mov
scas
movsl
into
adc
ja
test
imul
or
adc
addr16
ficompl
arpl
test
and
out
leave
enter
je
repz
mov
xchg
cld
and
jge
cld
xor
dec
iret
insl
mov
xchg
pushf
or
xor
pop
es
sbb
pop
adc
inc
add
mov
xor
or
push
sahf
icebp
and
repnz
push
adc
jle
cs
test
cmp
add
setge
decb
mov
stc
sbb
out
pop
jno
stos
jp
push
in
push
out
xchg
jmp
in
inc
lods
xor
and
lahf
icebp
popf
fcoms
sar
shl
and
jb
add
add
cmp
stc
adc
mov
dec
ret
lcall
jecxz
fsubl
inc
push
mov
xchg
div
mov
ss
decl
inc
xor
mov
rcl
sti
pop
subl
push
xor
xor
jp
dec
iret
pop
xchg
nop
mov
cltd
xchg
or
or
mov
jae
int3
fmul
pop
mov
test
jae
pop
push
mov
adc
lret
movsb
ds
fcmovnu
cwtl
dec
insb
lret
push
sbbl
dec
addl
mov
xchg
sub
outsb
sbb
ljmp
fnsave
ljmp
jg
cltd
lea
test
mov
das
xchg
aas
pop
clc
dec
mov
pop
test
and
push
jbe
lea
adc
repz
out
or
jo
add
bnd
shll
or
cld
into
adc
mov
fwait
jae
cmp
mov
std
mov
and
dec
daa
leave
fs
cmp
and
data16
movsb
insb
push
add
jb
nop
int3
adc
aad
push
fstp
movsb
sbb
out
pop
fcomps
fcompl
pop
repnz
hlt
jmp
inc
mulb
ret
add
inc
ret
out
jae
cmp
lret
jp
push
lret
sbb
xchg
or
fmul
out
cmp
pop
push
dec
mov
test
mov
adc
mov
lea
cs
or
ljmp
ss
sti
jns
adc
push
sbb
je
imul
adc
lea
outsb
add
cmpb
int3
in
adc
mov
cmp
sub
mov
adc
push
mov
aaa
dec
and
aas
fcompl
cmovb
sbb
mov
dec
lcall
and
xor
mov
mov
fnstcw
pusha
or
sarb
into
adc
nop
aam
xchg
mov
mov
xchg
inc
sub
adc
outsl
sbb
les
insl
stos
into
add
das
pop
push
xor
mov
cmp
ret
pop
movsl
and
mov
lods
jo
clc
pusha
rcrl
push
cs
lret
add
cmp
jno
push
adc
sub
scas
cld
in
sbb
xchg
cs
inc
pop
pusha
test
aas
insl
in
jg
jne
jg
xor
jns
lods
jmp
adc
leave
int
shr
xchg
je
test
sbb
lea
ret
push
xor
and
aam
sub
push
arpl
loope
cmp
sbb
iret
pop
mov
lret
mov
sti
push
cs
xor
ljmp
mov
cmp
lods
fsubrs
shrl
push
icebp
xor
in
push
pop
sub
sbb
or
rcrb
jmp
and
mov
add
sbb
push
and
or
and
imul
inc
jo
pushl
shrl
ds
ret
mov
test
roll
xchg
call
jmp
dec
cmp
mov
jmp
fdivrs
les
leave
int
jl
outsb
call
sub
outsl
lret
xlat
bound
ss
ret
loop
lods
scas
push
stc
sub
dec
sbb
push
inc
fistps
sub
inc
adc
nop
loopne
insb
xchg
inc
sub
pop
aad
pop
sub
inc
std
mov
out
adc
sbb
inc
add
int
pushf
cwtl
repnz
sub
jg
and
jbe
sbb
cltd
adc
icebp
icebp
adc
pop
jmp
fisubrs
pop
jg
gs
addr16
cmp
mov
lret
fst
mov
cmp
into
rolb
in
mov
xchg
ja
popa
clc
jns
pop
cmpsb
inc
fcomp
jbe
and
stos
pushl
xor
movsb
fcompl
movl
sub
data16
mov
xchg
and
out
xchg
adcl
dec
push
and
mov
sub
jle
ljmp
mov
push
mov
jno
shll
inc
mov
mov
in
lcall
xorl
mov
jb
xchg
jne
pop
jns
negb
pop
fwait
push
stc
pushf
xchg
cmc
jo
into
adcl
and
aaa
stc
aad
outsl
ljmp
add
add
add
pop
adc
cmp
mov
pop
fisubrl
adc
in
xor
cmp
in
xchg
inc
push
push
mov
adc
pop
mov
mulb
pop
mov
pop
lret
jle
inc
popf
cmp
out
sbb
fwait
icebp
xor
add
sbb
aaa
movsl
shl
not
ljmp
pop
je
aad
dec
lret
fst
or
jle
xchg
shrl
or
pop
inc
enter
adc
xchg
subb
add
dec
rorl
aad
mov
test
xor
mov
ljmp
in
push
outsl
jae
test
test
jnp
mov
xchg
das
sub
inc
jl
xchg
rcrb
aam
push
test
xor
data16
dec
mov
std
and
lret
loope
into
cmp
loopne
or
in
in
ja
mov
push
cld
pop
xchg
pop
addl
pop
addps
push
xor
dec
addr16
add
mov
in
loop
scas
mov
pop
in
push
int
jno
fxam
ror
pop
xchg
mov
add
pop
cli
gs
jae
jmp
pop
and
cmp
jae
arpl
push
pop
push
movsl
sti
iret
cwtl
call
dec
test
cmc
shrb
test
and
push
dec
divb
mov
leave
mov
divps
push
dec
gs
push
ret
scas
in
jne
cmp
jae
call
dec
sub
test
scas
int3
sub
jb
mov
sbb
in
lret
stc
rol
and
cmp
xor
xchg
cmpsb
or
or
out
sbb
xchg
jne
or
cmp
in
out
fstp
dec
xchg
inc
and
sub
lods
out
sub
sbb
pop
ret
loop
leave
jbe
adc
push
sbb
jns
or
daa
sub
sbbl
cli
rcrb
das
sbb
mov
and
or
mov
loop
mov
lahf
movsl
add
loopne
cmc
mov
jp
mov
mov
subl
dec
pop
jmp
loope
sahf
dec
hlt
fisubrl
sub
fistl
ds
pop
push
into
pop
outsl
and
insb
fnstenv
scas
mov
iret
aas
pop
jo
sarb
add
inc
mov
fstps
jno
inc
aaa
ljmp
sbb
lcall
adcw
outsb
out
lods
cwtl
mov
push
out
push
mov
loop
lea
lea
popa
or
jnp
int
dec
sbb
pop
mov
sub
push
rcrl
int
inc
xor
movsl
inc
pop
pusha
shl
cmc
mov
repz
icebp
inc
lahf
lea
and
stc
mov
in
add
push
sub
sub
mov
sahf
cltd
jns
rolb
enter
pusha
clc
or
jbe
aaa
popf
bound
jmp
jl
push
popl
scas
js
cmc
scas
push
lea
pop
jge
lret
fwait
lret
xchg
and
sbbb
xor
mov
pop
push
test
sarl
js
mov
cltd
out
lods
je
mov
jno
outsl
js
fmuls
jb
jae
ret
mov
sbb
addb
decl
fmul
xor
in
pop
testl
sbbb
pop
daa
in
xor
dec
fsubl
add
adc
jbe
pop
in
ss
ja
movsb
or
mov
mov
movsb
add
sub
scas
sahf
bound
mov
sub
pop
mov
jg
das
pop
jle
test
dec
cltd
sar
jl
sub
sbb
and
add
data16
pop
jmp
xchg
inc
dec
rclb
inc
jg
mov
ja
xor
fcmove
nop
xchg
fscale
push
out
xorl
outsl
sbb
das
pop
into
xchg
jnp
xor
scas
mov
push
jg
cmpsb
push
ljmp
push
aas
adc
pushl
mov
sub
in
not
cmpsb
sti
int3
mov
adc
jne
mov
test
rdpmc
pop
sub
mov
and
mov
sbb
ficompl
mov
test
add
cmp
shlb
hlt
mov
mov
lret
sub
or
jmp
sub
or
xchg
xchg
xchg
fs
sub
stos
into
in
push
xlat
pop
aas
ja
bound
pop
or
lretw
mov
jae
cmp
idivb
ror
stos
pop
xor
cmp
dec
mov
int3
mov
lcall
jne
jo
or
rorl
jg
fdiv
add
int
inc
add
movb
flds
jmp
aam
pusha
pusha
in
icebp
call
mov
shr
enter
je
std
js
push
mov
addl
jge,pn
mov
jmp
adc
jp
test
leave
je
adc
and
shrl
xchg
negb
jb
mov
imul
jns
in
leave
das
lock
jbe
sbb
loope
adc
jge
mov
je
addr16
add
jg
inc
xor
mov
int3
jg
add
xor
inc
mov
ret
sub
or
and
fisttpll
sub
xchg
movsb
popf
in
push
xor
mov
out
imul
aam
jmp
icebp
outsb
out
rolb
mov
jb
xor
cmp
push
xlat
add
int
jmp
mov
adc
data16
sub
pop
ds
aam
add
and
inc
add
dec
imul
stos
adc
mov
mov
cmp
call
cmpsb
push
cli
test
fcoms
popa
inc
loopne
mov
adc
mov
rcr
loop
jno,pn
xchg
jo
mov
call
pop
and
test
dec
int
mov
pop
std
outsb
sar
xchg
inc
push
imul
jnp
aaa
loopne
adc
adc
and
scas
stos
xor
jb
ret
adc
cltd
pop
leave
jge
mov
cmovno
shrb
jl
call
sbb
pop
sub
sub
cmp
iret
ja
lds
adc
loope
cltd
mov
cli
push
imul
inc
ret
jnp
jne,pt
clc
cwtl
mov
nop
ss
sbb
cmp
push
or
sbb
pusha
movsb
jns
cmc
inc
and
xlat
shll
cmpb
clc
iret
shrb
movsl
adc
dec
nop
in
mov
jno
mov
mov
dec
add
fwait
mov
test
cmp
push
inc
lock
lock
push
jge
sub
cmpsb
pop
mov
pop
mov
sub
iret
out
cmpsb
xor
stos
lret
lahf
pop
adc
in
add
dec
arpl
jae
push
sub
insb
movsl
shrb
mov
push
sahf
sbb
dec
mov
std
jmp
and
mov
push
xchg
add
cmp
clc
jge
fistpll
dec
cmp
sbb
adc
adc
in
lret
cmp
inc
jnp
dec
xchg
pop
pop
jne
sub
xor
push
scas
pop
xor
cmpxchg
xor
mov
test
sub
stos
xor
out
adc
mov
in
je
stos
sbb
xor
filds
cmp
out
lret
pop
mov
mov
lahf
xor
and
xchg
lods
lods
cmpsl
lahf
sarl
cltd
ds
scas
mov
xchg
and
stos
push
or
sbb
add
sub
lock
ljmp
js
dec
pop
filds
dec
jnp
outsl
ret
lods
push
mov
sub
test
jo
mov
or
mov
scas
int
cmp
pop
arpl
insb
mov
cmp
xchg
xchg
sub
xchg
cmovbe
push
lock
jns
xchg
je
scas
addr16
cli
cwtl
sub
aad
mov
push
out
xchg
out
cwtl
xor
in
repz
mov
mov
jae
pusha
push
cmp
out
sbb
js
sub
adc
mov
lahf
jo
mov
sub
mov
jo
cmpb
scas
insl
div
push
mov
push
ljmp
sub
ss
cltd
push
jg
jle
aam
mov
hlt
sbb
adc
mov
mov
sub
cmpsl
push
aaa
cld
sub
xor
jno
jmp
gs
jno
mov
in
mov
lods
std
cmp
loop
push
push
mov
jmp
pop
idivl
lcall
mov
xchg
popa
cmp
sub
mov
mov
js
mov
jns
enter
data16
mov
push
stos
cmc
ds
dec
jp
in
mov
add
mov
and
xor
leave
aaa
mov
or
dec
orb
sbb
pop
and
in
xchg
sbbl
int3
jns
mov
mov
imul
xchg
xchg
icebp
dec
imul
inc
jge
jmp
mov
mov
mov
add
fistps
push
stc
xchg
push
loope
mov
jno
push
or
mov
push
sub
incb
dec
lea
mov
push
sti
dec
outsl
in
mov
mov
pop
cld
lods
test
das
rol
testb
xchg
bound
pop
xor
or
or
scas
fidivrl
add
into
ss
mov
les
mov
inc
sub
and
popa
inc
pusha
test
sbb
pop
cmp
lcall
clc
repz
xchg
push
xchg
fiadds
inc
leave
mov
mov
iret
dec
outsb
jo
adc
mov
mov
push
push
add
xchg
aad
lret
leave
push
cmp
mov
ret
out
in
cltd
insb
pusha
jnp
call
sub
xchg
pop
pop
and
test
mov
jl
pop
sahf
mov
movsb
cmp
mov
pop
xchg
dec
into
call
add
imull
lret
mov
arpl
adc
jp
ja
mov
pop
jle
and
jg
popa
les
mov
fisubl
adc
jmp
pop
mov
ret
repnz
or
mov
xor
ljmp
cmpsl
pop
notl
xchg
mov
jmp
add
mov
in
movl
push
cmp
and
cld
jbe
mov
popa
repz
xorl
xorb
aaa
mov
leave
mov
dec
adc
sahf
pop
mov
pop
test
std
lcall
pop
loopne
popa
mov
rol
lods
and
inc
imul
sub
leave
call
jge
inc
xor
cmp
fldenv
push
cltd
mov
dec
pop
mov
stc
ja
pop
dec
pop
pop
data16
ret
mov
shrb
inc
or
popa
mov
inc
or
fcoml
addr16
popa
adc
inc
inc
sarl
fidivs
inc
fstpt
or
cmp
ss
jmp
fdivs
sub
add
iret
and
sti
xor
mov
test
loopne
or
push
out
int
pop
or
add
jns
adc
fildll
sbb
flds
adc
fisttps
xor
rcrl
sbb
outsb
add
xchg
inc
mov
sbb
dec
cltd
imul
add
jmp
xchg
test
cli
orl
inc
and
data16
mov
push
bound
pop
pop
in
outsb
sub
jl
pop
push
xchg
xchg
iret
xor
mov
paddusb
pop
xchg
mov
lock
and
out
push
fldenv
jns
inc
rcrb
lret
xchg
sbbb
jns
stos
or
mov
repnz
imul
adc
popf
sbb
push
sbb
and
leave
rep
xchg
fcmovne
cmp
pop
in
cltd
dec
mov
dec
inc
shll
or
cwtl
out
and
lock
cmp
mov
xlat
sbb
dec
adc
es
lret
lods
jge
jp
aam
shl
or
add
rcr
hlt
loop
sub
outsb
sbb
xor
mov
call
popa
ljmp
repz
int
jecxz
test
adc
fimull
jo
mov
inc
inc
loope
add
test
leave
push
xchg
mov
cltd
repz
push
sbb
adc
cwtl
adc
inc
jnp
xor
xchg
mov
jnp
outsl
pop
dec
js
lret
clc
xchg
push
rcll
int3
jns
cmp
mov
jno
jp
xchg
jno
in
in
test
sbb
mov
ja
out
lods
leave
sub
mov
les
jmp
dec
cwtl
xor
mov
cmpsl
repz
jns
add
xchg
int3
in
pop
push
inc
jle
in
mov
ja
push
or
outsb
mov
subb
jo
xchg
mov
nop
pop
in
fwait
add
notb
movsl
dec
aam
lock
dec
shr
mov
mov
daa
mov
imul
mov
and
loopne
add
movsl
loopne
mov
or
mov
push
sbb
arpl
rorl
into
or
test
jae
mov
mov
cmp
xchg
daa
push
adc
hlt
mov
scas
sub
insl
push
into
push
push
adc
aad
fisubs
adc
or
stc
loop
jns
enter
mov
add
std
or
les
in
in
dec
push
lock
popa
jb
les
in
outsl
hlt
insl
repnz
pusha
sar
or
dec
js
fwait
and
and
into
xchg
sbb
xchg
xchg
iret
pop
test
jl
sub
mov
vpackuswb
xor
lret
cwtl
bound
adc
dec
jnp
xchg
test
ds
in
mov
inc
in
xlat
fidivs
subl
lds
lods
mov
aaa
cmc
cmpsb
je
jo
jmp
xchg
sbb
and
pop
jecxz
xor
mov
xor
inc
mov
push
scas
mov
nop
pop
orl
sbb
cmp
xlat
jl
mov
ror
std
lods
inc
add
mov
aam
into
mov
fimuls
aas
mov
stos
push
or
imul
mov
add
adcb
jle
clc
cltd
mov
icebp
sub
fadds
mov
inc
insb
out
sbb
inc
cmp
loopne
into
and
mov
mov
pop
lods
neg
loopew
sbb
iret
loopne
pop
and
or
cld
cld
jne
add
mov
clc
mov
xchg
push
lods
cltd
sub
cli
lods
xchg
adc
push
jge
jns
mov
lea
fiaddl
or
jmp
data16
mov
scas
jmp
out
adc
xor
mov
int
dec
push
repz
fsubs
inc
xchg
dec
push
clc
insl
stos
arpl
mov
mov
mov
vfnmsub132ss
shlb
pop
aaa
insl
repnz
mov
stc
mov
lock
mov
mov
sbb
imul
dec
flds
sub
int3
rclb
cld
ss
stos
mov
shrl
mov
dec
cmp
fsubl
xchg
cmp
es
loop,pn
outsl
rolb
jecxz
jp
lds
lods
cmp
repz
movsb
clc
pop
popa
fwait
push
cmp
lret
cmp
icebp
and
dec
popf
mov
out
and
jge
mov
imul
sub
sbb
sbb
jmp
push
loop
lcall
ficomps
cmc
mov
cld
mov
xor
mov
pop
mov
pop
jnp
sahf
mov
int3
std
lahf
ja
cmp
addb
and
rorb
insl
xchg
in
adc
pop
in
mov
sbb
lock
inc
addr16
ret
cmp
scas
es
pop
dec
in
and
pop
in
lods
jbe
dec
outsb
sarl
mov
jnp
in
mov
iret
mov
xor
popf
sub
call
push
sub
mov
mov
shr
arpl
or
arpl
test
mov
addr16
lods
push
jno
inc
cmp
push
sub
movsl
rclb
sti
pop
cmp
mov
sub
scas
into
inc
push
test
cmp
dec
out
enter
cmc
int
and
adc
jmp
rcrl
stos
pop
mov
sbb
fimull
je
xlat
pop
xor
test
push
dec
loopne
or
test
test
mov
out
pop
jo
fdivrs
cli
movsl
scas
sub
mov
in
pop
ljmp
in
lods
lods
shrl
pop
aad
mov
mov
add
lods
mov
jnp
stos
mov
jno
mov
inc
cmp
xchg
xchg
pop
popa
pop
or
cli
frstor
adc
inc
outsb
jne
lret
xchg
scas
stc
aaa
fstp
jle
ret
addl
repz
or
in
ret
out
dec
push
loope
mov
ret
pop
add
sidtl
or
jp
ret
push
sbbb
outsl
mov
sub
and
adc
hlt
xlat
lds
enter
je
movsb
cmpl
addr16
pop
data16
jmp
mov
adc
lea
jmp
fidivrs
testl
dec
icebp
shlb
and
sbbl
fadds
inc
int
or
loopne
lret
cmpsb
adc
pop
lods
cmp
ljmp
lea
or
pop
rorb
sbb
jno,pn
pop
add
inc
mov
enter
and
fstl
insb
and
sti
loop
dec
mov
cltd
lock
jp
cs
data16
xchg
icebp
cli
iret
pop
mov
sub
push
mov
pop
inc
sahf
roll
cmpsb
adc
xor
dec
push
mov
push
sub
cmp
adc
add
adc
lret
pop
add
or
ja
xchg
push
xchg
repz
imul
adc
xchg
bound
mov
jp
addl
neg
lcall
dec
or
hlt
sahf
jnp
outsb
rclb
dec
and
popa
loope
mov
cmp
and
xor
leave
leave
xor
repnz
je
jp
cli
sbbl
mov
dec
incb
mov
push
xor
jo
bound
psrlq
bound
aam
pop
adc
pop
imul
push
jp
xor
aam
mov
test
mov
pop
addr16
push
xchg
sbb
mov
or
inc
add
insb
push
sbb
or
les
and
scas
outsl
scas
mov
mov
stos
lds
loope
inc
push
fcomip
stc
scas
mov
stos
mov
mov
mov
loope
rcrb
lea
mov
sub
pop
mov
jbe
pop
sub
xor
leave
inc
mov
push
inc
jae
sub
sbb
push
into
xor
dec
scas
push
out
in
fsubrl
dec
mov
rorl
inc
xchg
and
xorl
aam
push
add
arpl
push
hlt
sub
inc
in
movsb
sahf
lock
lcall
outsb
test
mov
std
jne
sbb
aam
cmc
mov
test
or
pop
ret
je
xchg
xor
jbe
lea
repz
pushf
jo
mov
mov
js
add
arpl
lock
mov
mov
sbb
fstpt
mov
and
push
xchg
or
jg
enter
movsl
ja
inc
jecxz
cmp
nop
popa
pop
jg
xchg
std
or
sbb
inc
xchg
and
dec
jae
daa
jle
xchg
dec
mov
mov
mov
repz
pushf
decb
adc
xor
shrb
jo
enter
jno
mov
movsb
mov
in
lods
in
into
pop
jmp
push
add
test
xor
adc
inc
movsb
sarl
pusha
adc
hlt
mov
add
lahf
fmuls
sub
adc
or
loope
sbb
fnstenv
cmpl
call
pop
pop
push
outsl
push
fnsave
xor
lahf
inc
rolb
pop
pop
aaa
mov
push
repnz
in
rorb
jmp
out
sbb
sbb
insb
loope
mov
mov
pushl
stos
xchg
movaps
sbb
loope
test
mov
iret
pop
pop
out
and
repz
fcmovbe
aad
adc
or
mov
xchg
ficoms
imul
add
idivb
push
push
xor
pop
clc
push
jns
push
add
int3
jg
cmp
cwtl
or
fiaddl
jge
cmp
test
shlb
dec
icebp
adc
jmp
mov
cmp
fldenv
xor
test
mov
xchg
xchg
cmp
ss
enter
mov
and
xchg
test
mov
mov
mov
pop
jmp
in
dec
mov
mov
cmc
mov
clc
sti
xchg
pop
push
aam
jl
jne
pop
aad
xchg
data16
jne
cld
inc
cmpsb
sbb
mov
and
dec
in
add
sahf
ljmp
pop
jle
jle
sbb
adc
and
test
aam
sub
pop
adc
rclb
xchg
lods
jmp
adc
shlb
hlt
mov
out
push
les
outsl
ja
popa
cld
and
mov
outsl
in
sub
cmp
fisttps
dec
loopne
iret
add
mov
cmp
loop
or
cmp
push
xchg
hlt
repz
fnstenv
pop
outsl
inc
add
pop
xor
xor
out
cmp
lahf
cmp
lret
ss
pop
scas
repz
popa
xchg
jle
test
test
dec
pop
hlt
mov
sub
xchg
aas
js
orb
jle
hlt
xor
jmp
sub
mov
arpl
jno
stos
xchg
fistl
cmp
aad
fsubs
mov
fistpll
ljmp
lret
mov
jle
ret
mov
push
fst
cmp
test
test
popa
and
ljmp
repnz
pop
sti
jmp
imul
push
fildll
sbb
add
sub
mov
mov
pop
dec
ljmp
decl
jmp
push
dec
inc
out
sub
jno
cmpsl
shrl
shl
je
sub
sarl
cmp
idiv
movsb
inc
fwait
dec
jge
adc
clc
jnp
dec
repz
jnp
and
inc
mov
dec
int
mov
js
xchg
pop
lods
mov
jo
push
sub
push
adc
out
mov
add
cmpsl
jl
push
mulb
xor
adc
mov
stos
ffree
pop
lcall
jg
outsb
mov
movsb
shlb
push
inc
mov
subb
inc
push
test
test
ja
jae
xchg
pop
dec
and
add
or
inc
sbb
pop
pop
add
mov
imul
jne
gs
jmp
pop
addr16
setnp
shlb
cs
cmp
adc
dec
loop
aam
arpl
cmp
mov
xchg
or
lret
insb
xor
sbb
pop
imul
inc
rcll
jecxz
mov
push
cmp
out
fcom
inc
aas
and
add
xchg
andb
jecxz
cmp
aaa
push
xchg
sti
mov
pop
mov
mov
mov
dec
push
and
dec
sub
ja
or
mov
or
in
jno
sub
jno
lods
lea
jo
cmc
mov
cmp
shrb
orl
pop
and
fs
call
in
inc
mov
insl
iret
xlat
std
xchg
mov
jno
sahf
mov
lret
mov
pop
lcallw
fstpl
mov
std
es
push
and
dec
adc
out
dec
inc
in
jp
xor
sub
sbb
mov
or
fidivl
xchg
dec
fsubr
push
sbb
les
sti
and
test
lahf
sahf
mov
test
xor
cld
in
imul
jno
jmp
jle
xor
xor
xor
mov
xchg
icebp
nop
ffree
sbbl
push
xor
add
mov
add
pushl
rclb
xlat
bound
jmp
inc
mov
fwait
shrl
lret
xor
mov
push
jg
or
in
in
popf
lock
mov
add
pop
inc
jp
xor
mov
adc
cmpsb
push
sbb
imul
outsb
aad
pop
pusha
jbe
mov
mov
push
pushf
inc
mov
mov
out
push
lock
mov
rorb
push
mov
lcall
xor
or
xchg
adc
popl
cmc
cs
cwtl
lods
stos
ss
stc
or
add
pop
inc
movsl
shrb
sub
add
vpsubw
sub
shl
iret
mov
fucom
xor
mov
repz
movsb
mov
movsl
xchg
rdpmc
sbb
cmp
push
lock
mov
in
dec
cmp
call
imul
pushf
cmpsb
std
pop
pop
lret
mov
inc
sub
pop
in
std
jmp
out
xor
jb
leave
sbb
adc
dec
movzwl
lea
imul
loope
in
gs
aaa
ss
mov
mov
and
ds
cld
dec
or
pop
out
xchg
push
push
shll
and
dec
jle
xchg
loopne
inc
push
cmp
mov
cld
repz
fmuls
sub
mov
aas
in
fsubrl
push
and
adc
lds
js
jl
dec
loopne
mov
fcom
fsubrl
cmpsb
subl
in
xor
sub
ficoms
int
mov
jg
cmpsl
push
das
jmp
mov
sahf
stc
fucom
mov
outsl
mov
add
addr16
sbb
in
js
and
out
outsb
cmpb
arpl
mov
shlb
mov
mov
iret
mov
mov
dec
inc
mov
inc
out
fistps
imul
cmpl
pop
dec
add
or
stos
sub
filds
sbb
fdivr
or
test
mov
lahf
test
out
aad
xor
test
test
in
sub
sub
loope
pop
push
into
div
inc
lcall
je
dec
sub
push
jp
push
add
repnz
jne
sub
in
movsl
xchg
adc
add
nop
cmp
or
xchg
fidivs
adc
daa
lock
cmp
jle
orb
inc
sbb
aaa
xor
mov
les
cwtl
or
cmp
pusha
xchg
loope
aad
inc
adc
xchg
sbb
xchg
push
pop
adc
sub
sub
cs
xchg
sbb
cltd
dec
or
xchg
cmpsl
push
sbb
ss
and
aas
int
cmc
loopne
test
mov
jg
icebp
call
mov
sbb
fadds
inc
pop
lret
or
ljmp
push
inc
mov
mov
ror
xor
sub
inc
ss
lock
je
hlt
xchg
pop
inc
int3
xchg
and
adc
cmp
fwait
and
jae
cmp
stos
js
dec
and
ja
cmpsl
mov
scas
fsubrp
mov
add
xor
aam
mov
xchg
and
aas
outsb
mov
pop
xor
sub
push
mov
ficomps
rcrb
sub
stc
int3
fildl
cltd
push
mov
jae
mov
jmp
sarl
movsl
xor
mov
and
sti
fldl
dec
shll
mov
jecxz
xchg
sbb
addr16
rcl
insb
mov
pop
test
adc
push
xchg
and
hlt
mov
pop
call
popf
cs
fstpt
jle
sub
pop
lea
popf
in
and
lret
add
arpl
sbb
mov
je
clc
push
mov
cli
push
data16
add
loope
adc
push
jge
lea
lcall
lods
pop
imul
bound
inc
ret
and
jb
cmp
andl
pusha
jbe
lcall
and
xchg
jp
in
imul
outsl
cmp
mov
lea
cltd
ljmp
lods
xor
call
cmp
xlat
push
and
icebp
pop
mov
rcrb
fidivrl
test
mov
dec
cmc
out
rcll
out
push
jp
sub
pop
loop
mov
into
mov
fldl2e
loopne
fsts
shll
gs
mov
fnstcw
in
fprem1
jnp
mov
xlat
cmp
pop
fbld
sbb
out
into
adc
mov
sahf
gs
xor
jg
mov
call
or
outsl
fcomp
pop
mov
pop
or
push
fs
in
jp
rorb
int3
cmp
add
sub
mov
ret
dec
cmp
les
xchg
je
movsb
fdecstp
hlt
mov
dec
fstp
mov
jecxz
fisubrs
lds
in
cmp
inc
xorl
aas
movsl
or
in
test
jle
leave
pushf
mov
fwait
out
pop
mov
add
jne
out
push
add
cwtl
xor
insl
movsl
sub
cwtl
push
in
lods
js
imul
gs
std
xor
or
cmp
inc
jno
xchg
sub
jns
mov
mov
cmp
xor
adc
out
outsb
jp
and
xor
xchg
mov
in
out
push
std
out
dec
lcall
add
or
repnz
dec
and
subl
call
fistpl
fwait
shlb
out
pop
adc
or
adc
mov
mov
loope
push
or
cmc
cmp
mov
or
adc
stc
rcrl
inc
cmpl
out
dec
out
int3
add
frstor
leave
ja
aam
mov
cmpsb
xchg
jg
sbb
ljmp
ret
jl
jb
shll
loop
pop
cmp
stos
xor
push
stos
inc
and
or
psubw
negb
orb
add
push
insb
inc
sbb
fwait
push
and
push
mov
xor
ficoms
ret
push
and
jb
jo
xchg
sahf
xorl
orl
xchg
mov
inc
dec
incl
jl
mov
inc
push
stc
sub
add
stc
sbb
popa
mov
jmp
les
ljmp
mov
mov
sub
add
divb
mov
das
mov
xchg
mov
sar
pop
in
inc
cwtl
bound
ds
loopne
xor
arpl
clc
cmp
or
in
sbb
loopne
repnz
jns
mov
gs
push
lds
mov
push
stos
cmp
gs
daa
push
cmpsl
test
pop
mov
or
cmpsb
and
bound
xchg
fimull
pop
lcall
add
mov
jle
insl
in
lea
mov
cld
pop
iret
ret
mov
push
int
popf
jns
imul
ljmp
cmp
nop
jb
pop
imul
lods
adc
push
aad
dec
add
movsl
loopne
outsb
clc
fst
in
xor
or
jae
jecxz
jno
insb
iret
enter
xchg
fwait
cmp
dec
mov
jge
aad
xchg
lock
addb
inc
les
xchg
jno
mov
mov
mov
dec
ffreep
lods
dec
jae
iret
movsl
pop
ss
popf
add
in
loopne
arpl
incl
test
cltd
lock
adc
and
jge
adc
inc
mov
and
xorb
mov
adc
rorl
push
dec
inc
mov
jo
imull
mov
divl
inc
add
xorb
jl
sbbb
loope
dec
ret
in
es
pop
aam
cwtl
mov
pushf
mov
xchg
adc
leave
mov
outsl
and
imul
push
xchg
and
and
push
cmp
es
ss
cld
xchg
mov
lcall
loop
cmp
scas
aaa
cli
inc
push
xchg
lcall
fists
ljmp
mov
sbb
das
nop
stc
call
inc
jae
call
pop
test
mov
mov
xchg
popa
das
mov
lcallw
sub
cmp
sub
lahf
pop
adc
negl
in
xchg
sbb
or
in
clc
jns
stos
ljmpw
lea
and
pop
xor
sub
enter
hlt
xchg
mov
inc
in
push
call
xor
adc
ss
js
pop
or
jbe
cmpsb
push
adc
cmp
ja
outsb
xor
cmp
aaa
adc
andps
popa
mov
and
mov
mov
data16
loopne
pop
arpl
arpl
out
push
fs
fbstp
sbb
dec
and
dec
xchg
sbb
sbb
insl
stc
aad
xor
rcrl
in
arpl
sub
sbb
pop
cmp
or
or
leave
clc
sbb
pop
fiaddl
stos
sbb
mov
flds
mov
jb
icebp
js
cltd
xor
mov
xchg
cltd
hlt
invd
sub
pop
cmpsl
jecxz
ret
xchg
sbb
ja
roll
or
mov
pop
pop
push
jmp
out
test
inc
add
xchg
cwtl
sti
mov
adc
fdivrs
insb
icebp
jne
mov
cmp
cs
push
out
adc
fwait
mov
add
xor
mov
or
cmpsl
adc
and
pop
stos
dec
jb
faddp
mov
roll
adc
dec
scas
daa
xor
cmpsl
xchg
sub
jle
pop
ss
hlt
pop
aas
stc
add
lods
mov
xor
jnp
pop
mov
iret
xchg
int3
fistpll
jl
out
cwtl
mov
inc
dec
xchg
pop
pop
loop
push
lea
xchg
test
data16
out
repz
jecxz
jbe
outsl
mov
or
jle
pop
lcall
sub
dec
imul
jae
mov
mov
decb
leave
xorl
out
push
jno
jecxz
aam
test
xchg
add
dec
jl
or
repnz
inc
ret
in
in
js
mov
pop
inc
mov
testl
xchg
jmp
subl
cmp
sub
cltd
ret
mov
mov
xchg
mov
and
mov
and
add
fcoml
xchg
aam
addr16
lcall
adc
jnp
or
mov
lock
mov
push
pusha
mov
inc
ret
push
ss
mov
ljmp
icebp
ret
xor
pop
bound
mov
jnp
jnp
inc
add
xchg
ret
lea
test
dec
popa
enter
and
push
rcrb
jmp
add
sub
into
test
and
jp
push
test
dec
push
or
dec
sub
mov
sbb
subl
cs
push
stos
sbb
or
inc
outsl
lcall
dec
cmp
shll
sbb
jle
lock
sti
loopne
mov
sahf
lods
fcmovb
and
orps
push
pop
adc
popf
std
mov
inc
sbbl
aad
pop
out
out
push
push
std
xchg
testl
insb
push
std
mov
or
xchg
loope
add
jg
sub
fcoml
cmp
fstl
jno
lods
mov
jne
pop
pop
mov
dec
mov
push
dec
lcall
fmul
in
or
xchg
adc
jne
adc
hlt
xor
jno
and
insl
xchg
fisttps
jle
aas
xor
out
cli
pushf
sub
mov
mov
jne
inc
sti
inc
pop
int3
pop
jno
jbe
adc
orb
push
and
into
cs
into
out
gs
push
fstl
jge
gs
add
mov
mov
push
fisubrs
sub
inc
mov
cmp
cmpb
stos
out
xchg
jle
mov
xchg
fisttps
bound
popf
jno
sti
repz
pop
stos
out
push
sub
stos
jp
adc
imulb
dec
lock
adc
aad
pop
xchg
sbb
push
movsb
push
jo
sub
xchg
mov
aad
scas
jecxz
push
cmpsl
xchg
jno
or
call
rol
push
cltd
push
xor
mov
and
or
jp
icebp
cld
cmp
xor
add
aas
cli
push
aam
mov
jmp
in
out
fld1
out
xchg
jp
fwait
in
iret
lock
fprem1
dec
mov
push
sbb
mov
cs
jl
enter
xchg
inc
cmpsl
sub
rcrb
jns
jmp
dec
fs
xlat
mov
lahf
cmp
fstp
pop
movsb
lods
outsl
pop
jnp
jo
adc
cmpsl
fiadds
mov
jb
xlat
adc
out
push
xchg
mov
sahf
popl
cltd
cmpsb
mov
and
sub
pop
lods
or
loopne
fidivl
jns
pop
loop
sub
inc
mov
std
mov
mov
mov
xchg
push
imul
in
adc
add
repz
xchg
sbb
test
arpl
addl
pushf
cmp
and
je
xlat
mov
pop
test
sub
insl
mov
jmp
fnstcw
movsb
cltd
fwait
cmovno
jp
adc
cmp
rolb
mov
push
jge
lds
cmp
ret
dec
repz
xchg
cmpsb
std
and
stos
fcomi
cltd
fstl
jns
movsl
mov
test
push
addr16
dec
xor
dec
sbb
stc
mov
mov
imul
ljmp
sbb
out
push
mov
aad
sbb
sti
mov
faddp
sarb
sbb
int3
cld
jo
adc
xor
mov
ret
rorl
push
and
or
leave
inc
sub
loope
in
movsb
push
add
push
jmp
adc
out
jp
movsb
adc
pop
fmull
cmp
mov
or
lea
cmp
add
jbe
dec
movsl
xchg
sbb
out
mov
cmc
jnp
and
sub
out
mov
xchg
cmp
sbb
sbb
outsb
jbe
mov
xor
push
mov
cmp
add
subl
mov
out
mov
loop
or
push
negb
int3
xchg
js
mov
pop
pop
mov
pop
lods
cmp
mov
fisubrl
mov
mov
neg
push
cmp
mov
out
xor
add
mull
jmp
outsl
inc
lods
push
push
scas
ret
adc
popf
lods
mov
lock
add
je
sub
dec
mov
inc
cmp
push
jb
lea
add
push
movsl
fldenv
adc
cmp
mov
mov
lret
mov
or
loope
dec
fbld
addb
das
or
and
pusha
mov
inc
xchg
add
int
add
sub
leave
jl
inc
fwait
jle
outsb
in
repnz
das
xchg
jo
add
cmp
inc
xchg
xchg
lds
xchg
mov
out
ljmp
adc
sbb
int3
sub
sarb
or
push
out
bswap
ret
cmp
xor
lcall
dec
mov
dec
mov
cltd
addr16
dec
aam
mov
enter
cwtl
xchg
cmp
and
inc
loopne
lcall
rolb
in
push
xor
mov
stc
outsl
mov
cwtl
cltd
ljmp
movsb
bound
insl
xchg
dec
ja
or
mov
or
ret
popf
aam
push
and
fistpl
hlt
clc
les
jo
cmp
jge
insb
in
mov
fcmovnu
pop
xchg
jb
pop
or
jmp
rcrl
cmpsl
addr16
shl
fucomp
and
mov
fs
cs
cmp
addr16
outsl
mov
pop
ljmp
cmp
or
les
lods
loope
lret
push
push
cwtl
aas
cmpsb
movups
inc
mov
mov
jge
cmc
adc
push
test
jno,pt
mov
ljmp
fdivrl
or
inc
sub
inc
test
or
xor
sbb
popa
lods
jne
std
sub
and
or
out
ret
data16
push
mov
sbb
inc
adc
imul
or
in
jle
pop
lea
icebp
rcl
cld
fidivrs
mov
in
nop
push
fisttpll
icebp
dec
sbb
aad
sbb
mov
mov
push
lods
les
inc
inc
dec
in
sub
jecxz
or
push
push
xor
mov
loope
imul
xor
cmp
das
pop
or
dec
or
in
sti
int3
in
lock
mov
xchg
push
xchg
xchg
adc
fs
add
push
in
roll
in
or
pop
adc
sub
in
cli
dec
repnz
dec
outsl
fisubs
enter
pop
add
mov
mov
pop
xchg
pop
sti
stos
cmpsb
and
push
cmpsb
inc
push
jno,pn
sbb
lock
popa
lds
subl
inc
imul
pop
flds
cmp
and
jno
clc
xchg
sbb
out
pop
rcr
std
js
dec
jo
pop
mov
xor
mov
jge
pop
scas
mov
adc
lret
cmpsl
xor
add
add
sub
dec
xchg
fsubl
pop
jns
insb
lcall
scas
loopne
addr16
test
lods
aaa
push
aaa
lahf
push
out
dec
lods
f2xm1
mov
call
or
lcall
jmp
mov
lods
mov
or
jb
mov
dec
jp
inc
xchg
cmpsl
cmp
xor
dec
fs
mov
add
pop
out
inc
adc
mov
xor
mov
push
loop
enter
adc
nop
scas
imul
fmul
jno
xchg
mov
ud1
stos
mov
adc
daa
mov
movsb
les
inc
mov
out
sbb
orb
scas
andb
jno
frstor
test
xor
sarl
int
or
xchg
jle
lock
aad
sub
or
sti
mov
mov
mov
mov
xchg
cmpsb
testb
lret
lods
mov
pusha
jnp
mov
ds
aad
scas
cmpsb
mov
xchg
xlat
outsl
adc
lods
jge
hlt
cmp
stc
addr16
adc
and
xor
fs
in
jmp
pop
in
xor
lahf
inc
push
push
pusha
cmp
mov
mov
fwait
adc
pop
fldt
sub
or
xchg
mov
or
mov
ret
aas
pop
mov
sbb
jno
adc
fstpl
pop
dec
outsb
fs
test
mov
mov
popa
xor
adc
fnstsw
cmp
xlat
outsl
into
or
mov
repnz
push
pushf
mov
or
es
push
mov
dec
cmp
push
adc
mov
cltd
xchg
mov
cs
ljmp
into
jl
adc
ret
stos
mov
and
not
mov
mov
or
lret
ds
fwait
adc
jmp
out
or
popa
outsl
int
cld
cli
int
fdivrs
lahf
mov
lret
mov
rcl
xlat
adc
mov
inc
dec
fbld
push
xor
cmp
dec
loop
cmp
mov
add
xorl
bound
inc
pop
pop
or
mov
inc
lahf
sub
xor
movsb
inc
lods
shll
inc
jbe
xor
movsl
mov
sbb
test
lret
lea
aam
sbb
divl
jno
push
out
push
mov
pop
insl
test
adc
movsl
in
add
ret
or
and
arpl
sbb
sbbb
pop
mov
subl
jmp
inc
sbb
mov
push
icebp
pushf
adc
hlt
pop
cmp
movsl
mov
mov
xchg
rep
stc
dec
push
fcomip
ss
pop
scas
mulb
mov
call
adc
lahf
xchg
xchg
bts
add
jo
push
nop
repz
lods
mov
mov
mull
in
adc
daa
daa
jg
dec
push
imul
cmp
mov
out
jbe
and
cld
ds
sub
fisubrl
pop
mov
cmc
hlt
dec
xor
sbb
mov
loopne
xor
insb
negl
xor
xor
rcl
xchg
das
sbb
js
test
lods
stos
xchg
sub
jl
inc
pop
cwtl
xor
addr16
in
das
dec
sub
add
push
scas
es
cmp
stos
repnz
mov
in
mov
movsl
lods
fsts
sbb
scas
or
dec
cmp
fcmovu
inc
out
hlt
insl
shll
and
ljmp
adc
jb
xchg
aam
pop
pushf
cmp
out
scas
mov
repnz
inc
imulb
addb
and
mov
add
cwtl
imul
mov
fldl
xchg
cs
negb
inc
xchg
fldl
mov
outsb
movl
inc
jbe
lahf
ret
pop
or
sar
xchg
aas
mov
icebp
mov
jae
push
pop
pushf
add
addr16
adc
push
mov
enter
popa
hlt
or
xchg
xchg
pop
push
clc
into
xchg
clc
mov
jbe
test
lea
hlt
sub
mov
pusha
subb
dec
xor
or
xorl
jl
push
data16
mov
shll
push
pop
enter
push
bound
int
sahf
pop
lock
add
aas
scas
test
fistps
xor
jbe
mov
dec
and
shlb
xchg
dec
repnz
pop
repz
jge
test
and
icebp
lcall
push
mov
mov
mov
loope
sbb
cmp
xor
pusha
push
addr16
cld
mov
loope
rolb
pop
pushf
je
or
sbb
cltd
pop
jae
dec
mov
popf
pop
loopne
and
sti
jo
cmpsb
xor
scas
push
jae
jecxz
jge
repz
jmp
and
shrl
adc
xor
push
and
cmpsb
mov
fcoml
pop
loopne
shl
jmp
hlt
dec
stc
movsb
sarl
stos
test
add
jg
mov
push
je
fsubs
cmp
cmpsb
jp
mov
sbb
aaa
inc
decl
sub
add
xchg
pop
add
xchg
movsl
insb
sbb
xor
test
sub
adc
sub
dec
clc
add
sub
js
xor
push
rorb
and
insl
out
movl
mov
xchg
inc
pop
test
lods
jbe
test
mov
mov
xor
push
fwait
pop
push
mov
imul
xor
xchg
or
inc
inc
dec
jecxz
and
repnz
adc
cs
dec
mov
xorl
and
test
and
xor
jae
out
mov
inc
loopne
inc
push
arpl
lock
cs
push
test
push
frstor
xor
cmp
insb
add
fs
rcrb
outsl
lock
in
and
popf
push
mov
sti
out
sbb
mov
and
push
subl
jno
and
push
inc
mov
sarl
cmp
das
addl
fiadds
adc
aas
cmp
jb
aad
cs
pop
scas
push
mov
into
loopne
push
or
xor
adc
rcrl
fs
mov
or
xor
lret
pop
icebp
insl
daa
cld
out
jne
add
das
mov
xchg
nop
out
fxch
ss
jae
int
mov
test
rcll
stos
loope
xchg
cltd
fldenv
mov
and
lret
mov
push
dec
repz
mov
jno
lahf
xor
push
push
sub
outsb
mov
jl,pn
je
insb
sub
aad
repnz
adc
push
and
aad
jne
xchg
lods
dec
sbb
rclb
push
jnp
movsb
outsb
inc
adcb
fiadds
xchg
pop
in
mov
aas
cmp
adc
and
inc
out
je
push
mov
leave
adc
xchg
lds
xchg
mov
push
xor
cmp
mov
sbb
jne
ja
shrb
adc
fmul
jne
ret
or
fsts
pop
sbb
aas
out
xchg
xor
dec
int3
xchg
xchg
mov
test
cmp
lea
rcll
arpl
mov
xor
lock
repz
mov
loop
mov
adc
xor
iret
sahf
dec
sti
dec
mov
add
sti
mov
cmp
sbb
xor
call
test
jecxz
imul
rolb
add
pop
aas
push
out
aaa
pop
mov
xchg
xchg
jne
test
std
or
jae
sub
gs
dec
sbb
das
aaa
dec
sbb
leave
shl
xchg
pusha
inc
notb
sbb
lds
jae
sar
mov
idivl
lret
jge
mov
adc
mov
fnsave
xorb
stos
sub
xor
insb
iret
inc
jmp
pop
push
or
imull
pop
push
fsubrl
sbb
in
sub
ficomps
mov
out
inc
push
in
dec
clc
shll
mov
cmpsb
cs
stos
dec
addr16
out
dec
aam
push
xor
cwtl
mov
aad
cmp
sub
and
insb
jo
roll
enter
enter
sub
pop
xchg
aad
je
lods
push
jmp
mov
push
push
mov
lret
imul
cmp
popa
js
outsb
out
out
dec
or
loopne
dec
out
testb
lea
jmp
add
movsl
lea
fisttps
adc
push
mov
shl
inc
cmp
xlat
adc
add
xor
adc
jmp
mov
repz
int3
sbbl
mov
repz
hlt
push
dec
cmpsl
adc
lcall
push
lods
fdivrl
xchg
fidivs
xchg
cmp
sub
jbe
cmp
jecxz
sahf
sub
mov
les
push
xor
add
cmp
cld
add
xor
push
addl
xor
push
popa
sbb
mov
lock
inc
sub
lock
out
es
or
insl
mov
leave
mov
out
movsb
push
mov
addr16
repz
sub
xchg
adc
ljmp
ficoms
jbe
repnz
xchg
popf
xchg
les
ret
jb
dec
test
mov
add
idivb
mov
adc
pop
cmpsl
jp
dec
aam
adc
jl
xor
dec
jb
pop
pop
mov
or
into
jmp
dec
ljmp
test
mov
getsec
sbb
in
jne
sub
sti
lea
and
add
outsl
add
subb
aaa
adc
sub
mov
dec
or
loope
sub
add
scas
faddl
or
pop
mov
int3
sbb
clc
inc
lock
test
inc
dec
pop
and
imul
adc
in
cmp
into
xchg
sbb
jns
lods
iret
inc
clc
mov
xor
mov
adc
aam
ds
mov
xor
divl
mov
adc
imul
sti
hlt
aam
popa
and
sbb
sub
idivl
adc
mov
add
sti
sub
jge
enter
sbb
push
sub
ljmp
add
stos
mov
xchg
popa
je
or
mov
mov
iret
dec
mov
dec
jbe
pop
or
rcrb
out
mov
arpl
jle
out
test
pop
sbb
pusha
popf
adc
mov
mov
subl
and
sbb
popf
cltd
icebp
addr16
mov
inc
pusha
imull
push
mov
ss
mov
push
mov
repnz
daa
out
dec
adc
scas
arpl
adc
dec
fisttpll
hlt
mov
mov
mov
adc
jecxz
pop
out
xor
inc
dec
hlt
rorl
xchg
cli
push
rol
rclb
mov
xchg
push
lret
iret
mov
ficoml
add
outsl
pop
aad
sbb
and
sbb
lea
mov
shlb
mov
mov
dec
mov
mov
mov
and
push
ja
test
xor
sar
loopne
mov
pop
mull
lock
jge
mov
mov
jle
add
lret
push
cmp
inc
outsl
stos
pop
nop
stos
lock
aam
jo
sub
iret
mov
cmpsb
inc
in
fs
je
cmp
out
jnp
ret
push
mov
mov
or
and
subb
scas
aas
jg
xor
mov
adc
je
inc
add
ficompl
jbe
and
mov
sbbb
lret
icebp
sbb
jge
jle
dec
mov
subl
sbb
mov
push
rcl
cmp
inc
popa
lahf
imul
push
call
pop
out
cld
movsl
add
and
cmpsl
jmp
sub
pop
push
ror
cmpsb
sub
fcomi
and
push
cli
icebp
mull
adcb
push
ret
sbb
enter
xor
fmull
roll
popf
add
mov
or
mov
adc
idivl
mov
mov
test
sbb
sub
shll
xchg
stc
mov
xchg
int3
and
mov
and
pop
inc
shrl
mov
cmpsb
jecxz
mov
stos
push
enter
pop
and
sbb
stos
in
sbb
pop
arpl
pop
mov
pop
jae
inc
imul
sub
sub
mov
pushf
add
test
xor
inc
lock
jle
jl
int
repnz
int3
or
bound
mov
loope
and
add
hlt
jmp
mov
subb
push
in
into
cmp
test
addr16
jp
sti
scas
mov
ds
iret
jg
and
adc
insl
and
push
xchg
push
sub
mov
iret
cmp
in
mov
int
mov
cmpsb
cltd
lret
ret
xchg
aas
loope
addr16
mov
aad
pop
cmpsl
js
cmp
xor
sub
lcall
or
fidivs
or
test
scas
cltd
xchg
inc
lods
push
imul
jnp
je
inc
add
mov
mov
pop
adc
cmp
movsl
mov
cltd
jb
les
or
aad
sarb
xchg
adc
pop
repz
test
adc
lea
clc
mov
push
popa
jmp
rcrb
mov
inc
pop
mov
mov
inc
setnp
jne
shlb
arpl
in
sub
add
outsl
outsb
push
fwait
lahf
adc
fs
sub
adc
xchg
repz
lock
cmp
bound
xchg
xlat
cwtl
mov
add
out
inc
imul
add
out
xchg
cmovg
mov
inc
test
outsl
adc
push
rclb
ljmp
fwait
mov
mov
hlt
leave
sbb
leave
cmpsb
mov
push
xchg
and
addr16
mov
adc
cmpsb
in
xor
stos
dec
push
pusha
ljmp
roll
jb
stc
cmpsb
mov
adc
pop
or
inc
outsl
and
xchg
push
and
add
xchg
cs
ds
mov
cmp
sub
sub
cld
in
cltd
dec
push
jbe
into
fstpt
shll
shlb
dec
mov
aad
notb
push
repz
cmp
inc
lcall
out
sub
pop
inc
cmpsb
adc
pop
pop
testb
dec
mov
cmpsl
dec
push
pop
insl
rcrb
pop
add
jns
and
xchg
daa
mov
add
cmc
jle
popf
mov
mov
xor
jbe
dec
push
or
imul
and
shlb
adc
loop
aaa
jg
fsubr
fisttpl
mov
fcmovbe
lock
mov
outsb
ljmp
aam
shrb
outsb
cld
add
mov
lahf
lods
adc
rol
cmpsb
pushf
add
insb
adcl
addr16
xlat
das
jmp
jge
aam
pushf
add
lds
int3
sti
pop
xor
test
xchg
repz
jns
adcb
mov
jo
cwtl
jecxz
in
xchg
fidivrl
pop
and
push
cmp
mov
lcall
clc
cmp
in
xchg
dec
mov
adc
adc
and
cmp
out
mov
es
sub
stos
xor
mov
rdtsc
lds
shll
cmpsb
insb
imul
fs
fdiv
pushf
xor
push
xchg
insb
iret
lock
les
call
rclb
into
cli
or
mov
xchg
adc
xchg
jp
out
push
les
push
sbb
scas
fsubrs
xor
and
in
sti
mov
xor
or
mov
inc
inc
inc
loopne
xor
push
ret
sbbl
pop
dec
popf
cmp
sbb
xchg
sbb
add
xorl
std
stos
cltd
notb
dec
and
mov
mov
shlb
sbb
les
mov
outsl
clc
jmp
jo
cmp
mul
aad
dec
mov
and
les
mov
hlt
clc
xchg
lock
jae
push
push
out
sub
mov
xrelease
mov
xor
dec
sub
in
xor
cltd
push
daa
fldl
bound
push
fdivl
or
pushf
repz
xchg
jno
dec
push
cwtl
movsb
inc
das
jns
in
mov
lret
jg
push
loop
mov
xchg
xchg
stc
cmc
push
lahf
mov
adc
jmp
xlat
mov
pop
and
faddl
cmp
pop
push
call
jl
mov
test
inc
mov
inc
sti
int3
mov
and
in
fcmovnu
adc
cmpsl
jg
jne
and
push
lret
fsubrs
leave
aas
into
pop
into
xchg
push
mov
aam
inc
inc
xchg
jae
xor
decb
jge
stos
jg
adc
jecxz
shl
sbb
clc
lods
adc
jl
pop
loop
bound
sti
je
adc
jb
jl
mov
jp
push
or
push
add
dec
sub
cmc
mov
icebp
sub
js
scas
mov
insl
jg
xlat
dec
fisttpll
sbb
nop
and
mov
lea
scas
dec
and
mov
dec
xor
sub
xor
cltd
iret
pop
or
xor
inc
cmp
push
call
fdivl
sub
xor
xor
jo,pn
mov
dec
in
arpl
sub
push
std
jge
insb
xorl
mov
pop
fdivl
jg
out
and
sbb
inc
mov
push
dec
stos
and
mov
pop
call
outsl
test
and
je
pop
xchg
xlat
mov
jp
mov
cld
jge
sahf
in
or
jl
dec
mov
jbe
popf
nop
inc
inc
daa
jns
and
inc
aam
push
cmpsb
loope
adc
lea
bound
cmp
cmp
repz
ret
aad
or
cmpsb
adc
negb
pusha
xchg
cmpsl
inc
fildll
leave
mov
aaa
or
mov
sub
sbb
mov
ja
jecxz
sub
stos
andb
inc
cmpsl
cli
xor
fbld
jae
mov
or
fidivs
lret
add
xor
mov
dec
nop
pop
cmp
fcomps
mov
icebp
vandnpd
mov
repnz
bound
lret
insb
and
lret
jle
shrb
loope
loop
cmp
jl
loope
mov
inc
repnz
call
lods
in
cli
sub
pusha
xor
sub
dec
scas
rcrb
cmp
jnp
movsb
xor
sub
pop
fiaddl
jbe
fcomi
xchg
shlb
mov
dec
jg
jns
fmull
adc
add
jle
cmp
jl
jp
test
xchg
popa
xchg
sti
out
push
ja
nop
iret
pcmpgtb
lcall
ficoms
sub
mov
sahf
pop
pop
xchg
add
es
pop
xchg
in
pop
cmp
push
jmp
data16
adc
lds
and
repz
cld
add
data16
rolb
xor
std
mov
mov
sub
mov
and
xchg
cwtl
lds
mov
add
mov
adc
cmp
ljmp
repz
fucom
mov
lea
or
fbstp
jbe
pusha
push
or
loope
inc
push
test
jne
in
aaa
call
fsubp
dec
addl
mov
mov
pusha
rolb
pop
fiadds
into
aad
inc
mov
inc
or
imul
inc
sbb
sti
push
or
jmp
cmp
das
pop
xor
jl
addr16
out
int3
int3
mov
pop
pop
xchg
movsl
pop
pop
in
dec
lods
cld
dec
fstpt
sub
jne
fwait
mov
out
das
sub
frstor
sbb
lahf
jecxz
or
lcall
out
add
xor
xor
cmpsb
xchg
es
add
sahf
mov
ljmp
rorb
test
outsb
push
movsb
sarl
jnp
divb
gs
incl
cmc
stos
pushf
cmpsl
add
and
rcll
fisubs
mov
int3
lods
mov
lret
push
mov
and
mov
fildll
rorb
fimull
cmp
xchg
mov
fbld
push
je
jns
aad
div
mov
mov
rcrb
lcall
aad
jae
in
movsb
pusha
adc
mov
inc
or
std
jle
or
int
pop
xchg
fs
adc
or
orb
cli
jno
xchg
loope
fcmovu
jp
and
xor
imul
mov
stos
daa
aam
jmp
test
pop
sbb
xchg
xchg
bswap
ficompl
fs
pop
jge
xchg
adcb
repnz
insb
mov
insl
nop
push
pushf
lea
dec
or
jecxz
mov
xor
dec
into
sbb
cmp
xlat
pop
mov
rclb
cltd
aam
xchg
jecxz
mov
lock
mov
aad
cmp
pop
lods
or
mov
mov
lret
inc
fnstcw
out
pop
movl
push
inc
rcrl
xchg
ljmp
jb
push
nop
outsb
sub
push
incb
push
fcompl
pushf
jmp
mov
fwait
push
mov
lret
cmc
pop
sbb
lret
cmp
popa
or
xchg
mov
mov
pop
mov
out
sbb
hlt
scas
mov
mov
jns
mov
mull
lret
imul
dec
xchg
fldcw
outsb
hlt
pop
les
push
dec
push
xchg
adc
mov
fldcw
xchg
aas
inc
adc
mov
andb
cs
xchg
adc
xchg
jb
adc
xor
jecxz
cwtl
pushf
ds
jne
jnp
leave
and
cmp
pop
in
dec
sub
sub
xor
push
jne
fs
mov
xor
push
push
dec
popa
hlt
xor
xor
inc
xlat
mov
pop
sub
jnp
fdivs
dec
mov
enter
dec
and
scas
jo
ja
insl
push
faddp
pop
faddl
das
sbb
hlt
jp
call
push
lock
dec
std
or
sbb
mov
ds
add
pop
or
add
sbb
mov
jg
rcr
scas
mov
adc
mov
out
ljmp
js
dec
sti
add
rolb
repz
clc
mov
shrl
sahf
lret
lods
out
idiv
mov
out
add
mov
or
cltd
cwtl
cs
xchg
mov
jo
lods
test
bnd
movl
das
scas
mov
jmp
mov
sbb
xor
push
xchg
inc
ficoms
sbbb
push
test
test
repnz
loop
sbbb
adcl
mov
dec
lcall
inc
cmp
jbe
pop
xchg
pushf
pop
xor
mov
sub
pop
mov
pop
lret
jns
add
mov
jnp
dec
imul
ja
xchg
and
inc
push
push
push
lods
les
cmc
mov
dec
sahf
xchg
add
imul
cltd
hlt
addr16
inc
lods
adc
or
shrl
adc
mov
push
mov
loopne
repz
popa
nop
pcmpgtb
jae
or
sub
push
and
clc
in
cld
neg
sbb
inc
or
cltd
in
in
repz
push
pushf
mov
mov
push
sub
jne
dec
mov
outsb
std
and
dec
push
sbb
flds
bnd
mov
jmp
add
xor
and
clc
xchg
dec
lods
out
xorl
xor
mov
mov
int3
loope
add
sti
mov
roll
inc
call
mov
inc
push
push
arpl
out
or
test
push
mul
jbe
dec
xchg
in
mov
sub
int3
aaa
xor
mov
enter
push
dec
inc
leave
cmp
xlat
icebp
dec
adc
inc
add
mov
movsb
fcmovnu
xor
dec
jge
cmp
mov
pop
sahf
jo
push
mov
mov
jge
jge
push
sub
mov
ljmp
mov
jmp
push
inc
dec
mov
aad
add
jnp
repz
add
daa
mov
cmp
adc
push
pop
int
xchg
mov
call
es
push
inc
jmp
es
fxch
out
movsb
adc
ss
je
push
cmpsl
cs
les
negl
xor
cmc
or
lock
repnz
cmpsb
popa
bound
add
notl
xchg
cs
fld
adc
push
int3
cltd
pop
mov
mov
mov
dec
lods
cmp
in
mov
mov
popa
loop
dec
mov
outsb
iret
in
mov
js
ja
shll
sub
out
pop
pop
ret
outsb
out
rolb
mov
lret
movsb
in
or
pop
xchg
fs
enter
pop
inc
inc
cmpsb
ret
push
hlt
add
mov
lds
ja
mov
inc
push
das
sbb
aad
dec
mov
mov
cmp
xchg
mov
in
add
outsl
out
pop
inc
addb
and
xchg
pop
and
push
in
loopne
pop
lock
cmpsl
cli
shll
repnz
loopne
pop
sub
mov
fisubrl
inc
fisttps
int
jg
mov
xchg
out
sbb
and
pop
cmp
mov
into
sub
fs
mov
adc
stos
mov
stos
js
sbb
mov
xor
mov
mov
push
pusha
in
jl
adcb
faddl
testb
pop
and
xchg
inc
loopne
sbb
arpl
mov
ja
xchg
sub
fidivrs
pop
adc
mov
shrl
cmc
xchg
pop
imul
int3
jle
cmpl
insb
pop
hlt
das
adc
dec
leave
inc
xchg
jno
jg
xchg
inc
js
or
in
lds
inc
cwtl
mov
push
xor
ljmp
mov
xor
loopne
sbb
aad
bound
divb
jo
nop
cwtl
jmp
cmp
adc
fpatan
lret
or
inc
icebp
pushf
cmp
hlt
mov
dec
pop
push
insb
xor
popa
jns
lods
pop
out
push
and
add
in
xchg
cmp
inc
xchg
fwait
fwait
pushf
mov
add
adc
test
std
jmp
push
xor
pop
out
or
clc
mov
or
add
data16
or
inc
inc
push
orl
test
or
jp
inc
mov
add
subl
adcl
jmp
adc
mov
xchg
ja
loope
push
movsl
test
into
cmp
inc
sbb
mov
std
out
xchg
mov
push
mov
push
push
mov
jge
loop
inc
lret
push
aad
jg
pop
mov
cmp
cmp
pushf
cmp
mov
call
ret
ds
out
lods
lret
fmuls
add
femms
sbb
inc
and
adc
mov
push
inc
xchg
jno
xchg
pop
test
jae
push
outsl
pop
jl
pop
shr
vpsrlq
fistl
mov
mov
jne
adcl
mov
mov
shr
lcall
orb
enter
lods
or
arpl
adc
mov
jge
jp
mov
push
sub
roll
mov
ret
arpl
adc
push
sarl
fsubp
dec
bnd
jmp
push
loopne
sarb
aaa
mov
mov
mov
cmpsl
sbb
mov
mov
or
je
loope
pop
pusha
pop
fimuls
jne
mov
aam
test
ja
add
pop
add
jge
push
xchg
cmc
daa
in
mov
pop
push
lds
xor
xchg
cmp
mov
ds
xchg
jle
dec
mov
add
mov
mov
mov
outsb
cmp
fisubrs
cmpsl
pop
data16
pop
cmovnp
mov
xchg
fists
cmp
xor
aaa
insl
mov
sub
faddl
and
lret
and
jo
iret
gs
bound
and
mov
adc
sub
sarb
cmp
xchg
or
decl
out
lods
mov
nop
ss
jns
mov
jne
jecxz
jb
jae
cwtl
or
xchg
mov
shrb
adc
sbb
sub
mov
bound
cmp
outsb
cmp
dec
mov
push
push
sbb
bound
cmp
stc
inc
sub
loopne
imul
jge
fimuls
rorb
jns
arpl
cld
je
inc
pop
aaa
mov
sbb
daa
dec
jae
add
jge
push
iret
fsubrs
roll
sbb
xchg
xchg
mov
fxch
fs
pcmpeqw
and
movsb
clc
movzwl
loopne
aas
aas
jb
cmp
aaa
inc
cmp
testl
cmp
and
push
push
cwtl
fsubr
test
loopne
adc
ret
inc
cs
sub
cli
or
jnp
rorb
lcall
or
pushfw
xor
bound
mov
mov
out
xor
ret
dec
xchg
leave
push
cmp
jnp
fidivl
ljmp
cld
inc
addr16
cs
cmpsb
mov
jns
fisttpl
iret
jbe
shrb
movsl
dec
mov
add
jae
jno
icebp
adc
push
repz
pop
mov
mov
filds
jb
sahf
push
sub
mov
push
std
int3
ret
loop
sub
sub
sub
pushf
outsb
daa
mov
push
daa
xor
inc
int3
stc
sub
xchg
adc
cmp
xchg
insl
push
pop
retw
xor
mov
ror
mov
pop
repz
dec
cli
mov
mov
and
lock
xor
je
lcall
push
lds
jle
mov
sbb
fisubrs
add
inc
test
shlb
dec
arpl
fnstenv
cwtl
leave
cmp
int3
cmc
aaa
rorb
mov
push
cld
xchg
pop
dec
mov
in
push
shrl
outsl
lods
sub
mov
ljmp
jl
sbb
mov
cs
and
fwait
push
xor
and
mov
arpl
ja
cmp
jle
and
roll
into
sbb
inc
and
out
test
je
sub
dec
push
bound
gs
scas
iret
scas
repnz
nop
pusha
stos
fwait
jnp
ljmp
mov
inc
outsl
stos
add
mov
and
cli
cmpsb
mov
jg
loopne
dec
mov
jmp
in
xchg
aam
mov
xchg
int
add
fsubrl
fsubrl
ljmp
mov
lock
inc
out
xor
cld
jecxz
lds
mov
loope
pop
push
mov
xchg
xchg
sbb
inc
test
jmp
movsl
push
bound
js,pn
push
xchg
inc
popa
bound
push
into
rorb
sbb
test
in
sarl
loop
fwait
sub
lret
pop
mov
ret
fwait
cltd
loope
daa
mov
fisubrs
mov
adc
or
mov
adc
add
es
inc
aad
sub
in
sbb
lock
repnz
fldl2e
pusha
test
imul
adc
test
test
xor
pop
jmp
mov
sbb
shrl
xchg
push
fistpl
add
jo
iret
movsb
pop
cmpsb
jle
insb
cwtl
leave
ja
popa
fcomps
jno
ss
sbb
movsl
push
or
xchg
frstor
jns
inc
add
push
cli
das
push
or
enter
sub
push
popl
fstpt
pop
cmc
insl
add
cld
push
ret
sbb
fnstenv
insl
xchg
dec
or
and
pop
sub
shll
cmp
lods
arpl
insb
pop
sub
aas
jae
or
sub
jae
out
jnp
lcall
and
jbe
pop
out
jmp
cmc
rcl
add
or
jle
fidivl
shlb
cmc
sbb
mov
cmc
stos
pop
in
push
xchg
outsb
cmp
scas
push
ja
in
lahf
add
sub
lret
mov
mov
inc
ret
jno
into
jno
push
pusha
sbb
inc
mov
or
pushf
out
bound
xor
inc
arpl
xchg
sub
mov
cmp
pop
add
cli
xchg
inc
ljmp
scas
jge
jmp
ss
outsl
scas
out
mov
std
and
lds
das
xor
loopne
lods
sbb
bound
jns
jae
sarb
cmp
mov
lock
sub
ficomps
jge
outsl
fisttpl
and
push
xchg
jnp
mov
divb
sti
inc
add
push
and
out
push
sub
pop
push
loope
push
and
std
cmpsb
lahf
bswap
in
loope
sub
popf
js
out
fisttpl
test
hlt
insl
mov
mov
or
xor
push
push
inc
cmp
adc
cmp
push
pop
call
xchg
roll
mov
repz
fldcw
or
lret
xchg
xor
adc
inc
scas
inc
xchg
push
mov
ret
push
out
mov
scas
ds
mov
in
filds
dec
adc
into
adc
repz
sub
nop
mov
push
imul
mov
add
fistpl
pop
dec
mov
hlt
or
mov
pop
into
enter
xorb
in
dec
fwait
je
rcll
push
push
sub
shl
fsubrs
xchg
sbb
lods
and
cmp
pop
andb
pop
inc
xchg
shll
cwtl
std
outsl
push
enter
es
xlat
xchg
ljmp
jmp
cmp
fnsave
mov
call
dec
js
xor
xchg
dec
add
ja
test
insb
rclb
sub
mov
push
gs
and
das
xchg
adc
mov
mov
push
test
imul
inc
dec
push
lea
push
xor
das
and
pop
sahf
idivb
dec
or
incl
jae
pusha
scas
cmc
mov
andb
xor
frstor
push
aam
fisttpll
mov
ret
mov
pop
adc
or
pop
mov
or
lret
pop
fisubrs
mov
in
stos
iret
xchg
leave
pop
push
xor
sub
push
inc
pop
add
repz
lock
mov
add
adcb
adc
outsl
xchg
mov
pop
sub
jno
clc
xchg
sti
mov
pop
lods
mov
ja
and
aad
cmp
lret
xchg
adc
cmp
repnz
cld
enter
push
jp
inc
sbbl
pusha
arpl
cmp
push
sub
xor
dec
adc
int
xchg
push
pop
clc
ret
mov
addr16
lret
jmp
mov
test
pop
cltd
inc
stos
fdivl
cmpsl
rdmsr
xchg
mov
lret
and
mov
fisttpll
out
cmpsb
jl
scas
out
sbb
sbb
lret
mov
jmp
imul
push
push
mov
jae
or
imul
push
jnp
jle
dec
xchg
jae
inc
mov
clc
lcall
inc
repnz
mov
stos
xor
aas
int
repz
jle
fisttps
mov
nop
mov
idiv
jnp
dec
jo
inc
sbbb
insl
add
adc
lock
cmp
sub
cmpsl
cli
mov
movsb
jmp
fimull
push
cmpsl
insb
insl
mov
mov
mov
pop
add
jle
pop
pusha
popf
mov
lea
mov
outsb
push
xchg
pop
sti
adcb
pusha
or
mov
cmp
dec
ret
cmp
sub
in
sub
in
mov
stos
mov
imul
shl
jmp
popf
cmp
adc
mov
in
push
jns
mov
inc
xchg
sbb
hlt
subl
mov
xchg
fwait
adc
in
jmp
in
pop
andl
and
cmp
xlat
dec
mov
and
cli
adc
mov
movsb
aad
gs
je
imulb
iret
xchg
test
mov
repz
addr16
aam
mov
pop
in
cmp
xor
es
adc
cli
movsl
ret
jbe
jnp
call
fs
insl
push
filds
fnsave
dec
das
and
and
xor
popf
call
mov
sbb
sub
mov
pop
loop
test
jmp
aas
adc
clc
movl
push
popa
stos
sub
cmpsl
cld
or
push
sbb
outsl
jb
sub
imul
push
ljmp
xchg
loop
in
test
xchg
push
in
aas
testb
sub
and
lock
aam
bound
cld
clc
inc
icebp
hlt
xor
adc
sbb
sbb
pop
in
addr16
in
leave
ficomps
push
push
sbb
jno
mov
cmp
mov
mov
les
fsubrl
jno
pop
pop
rorb
notb
sbb
and
lea
sbb
pop
push
ja
addr16
das
ss
lds
ret
cwtl
shrb
inc
mov
es
add
cmpsb
outsb
test
ljmp
out
inc
mov
push
lods
data16
repz
lds
cli
mov
push
iret
popf
fstl
pop
adc
push
insl
fisubrl
in
mov
repnz
jns
sarl
mov
enter
xchg
es
int3
cmpsb
adc
mov
insb
dec
adc
or
sbb
push
push
mov
int3
sbb
dec
loope
sub
mov
leave
xchg
mov
insb
lods
dec
mov
mov
repz
hlt
rcll
icebp
add
sbb
dec
pop
adc
xchg
jmp
aad
je
add
push
mov
insl
dec
movsl
icebp
out
adc
pop
lret
dec
adc
pop
mov
mov
addr16
jns
xor
mov
add
push
sbb
mov
bnd
push
imul
mov
fs
cltd
push
cmp
mov
std
add
bound
pop
and
push
popf
je
sahf
jge
xchg
sti
mov
mov
movsb
insl
inc
lret
push
lret
mov
out
cmp
pop
loope
mov
push
add
jno
mov
clc
pushl
or
loopne
jl
jb
repnz
mov
sbb
cmp
jns,pt
push
jecxz
or
loopne
inc
cmp
inc
icebp
data16
into
loopne
out
xor
gs
sub
pop
inc
ror
sub
cltd
js
ret
adc
and
dec
cmpsl
adc
sub
cmpsl
dec
out
aaa
cltd
push
sbb
incl
stos
inc
clc
xor
push
dec
sti
inc
pop
and
in
xchg
mov
aas
dec
daa
mov
out
sbb
jo
or
mov
push
faddl
xchg
mov
ja
add
sbb
push
add
stos
mov
add
in
test
out
clc
and
into
jno
subl
add
fdivl
pusha
rcrl
popa
push
xor
or
orb
ret
push
xchg
scas
cs
push
adc
mov
xchg
adc
cmc
mov
cmp
push
push
imul
adc
cmp
sbb
jne
pop
lret
jae
fxch
mov
pop
xchg
mov
fwait
jb
mov
cmp
push
sbb
and
scas
xchg
xchg
mov
mov
movsb
mov
xor
cli
push
test
fs
jge
push
jg
mov
shlb
js
mov
ljmp
mov
sti
dec
call
mov
int3
int
mov
into
jmp
lods
cltd
cmp
movsl
add
repz
mov
les
scas
cld
jge
sbb
out
pop
xchg
jl
sbbl
sbb
inc
xor
add
je
inc
mov
mov
fidivrs
popa
jg
jmp
fwait
int
rorl
inc
jo
jle
iret
inc
into
sub
mov
xor
inc
jmp
mov
sub
sti
pushf
pushf
out
xor
mov
dec
inc
xchg
das
enter
rcll
stos
sbb
or
loopne
inc
lock
jge
nop
jno
popf
cmpsb
cmpsb
stc
leave
xor
mov
dec
xor
call
dec
popf
aad
inc
sbbb
push
xchg
das
out
sub
js
je
sub
cmc
cltd
xchg
sub
bound
push
sub
mov
lret
daa
dec
fisubrl
xchg
or
cltd
or
mov
das
lods
mov
sub
enter
inc
nop
push
popf
movb
fldl
jg
arpl
repnz
jns
sub
add
mov
add
dec
ss
out
pusha
push
aas
cmp
sti
bound
inc
add
jge
push
pushf
es
cmp
inc
sti
cmpsl
xlat
rorb
aas
sbb
and
push
icebp
inc
jle
mov
mov
mov
sub
or
sub
push
cmpsb
adc
sbb
pop
xor
lahf
in
and
dec
mov
adc
xor
outsb
aad
xchg
data16
fldcw
jecxz
aas
or
cld
sar
testb
or
pop
pusha
push
mov
jae
mov
or
inc
mov
pop
mov
lret
dec
adc
inc
pop
adc
mov
cmp
xor
es
sub
cmp
divl
dec
pop
nop
out
into
lcall
dec
and
repnz
aaa
icebp
testb
xor
inc
movsb
je
test
push
mov
jae
adc
jle
mov
rorb
pushf
fcmovbe
pop
stc
pop
in
cmpsl
call
js
cli
cmpsb
lahf
addl
jae
nop
jmp
nop
int
decl
cmp
fwait
xchg
daa
scas
faddl
ja
mov
int3
jmp
lods
sub
imul
xchg
dec
movsl
into
cmp
add
and
stos
and
push
jae
arpl
pushf
repz
sub
mov
or
sub
in
jnp
incb
push
mov
imul
rclb
scas
fwait
movsb
inc
cmp
push
fs
xor
rorl
popa
leave
out
push
xchg
adc
add
cs
cmc
cmpsb
sbb
add
cmp
and
inc
jo
mulb
ljmp
push
cmp
cmp
xchg
enter
mov
xchg
pop
iret
inc
inc
mov
or
jmp
adc
je
sub
stc
and
adc
imul
dec
popf
push
jne
xchg
rorb
or
and
or
call
test
cmc
mov
fists
cmp
mov
out
loopne
dec
rclb
call
testb
mul
sbb
mov
insl
iret
jne
sarl
or
xchg
adc
sbb
jbe
mov
fxch
test
hlt
xchg
lret
mov
jmp
into
stos
pop
ret
mov
and
xchg
pop
or
sbb
jbe
loop
fnstenv
add
mov
add
adc
out
daa
mov
add
xor
cltd
outsb
cmp
sbb
movsl
dec
pop
xor
dec
aad
roll
sub
sub
jmp
cmp
mov
aad
pop
pop
dec
jp
cmc
outsl
inc
xchg
mov
clc
ds
sub
sbb
into
out
test
ret
int3
cli
test
sub
testl
nop
hlt
loope
clc
pop
push
je
mov
fmul
sti
lahf
test
enter
add
add
and
pushf
outsb
adc
jg
mov
pop
mov
movsl
pop
push
jle
popf
ljmp
or
fcmovne
fwait
mov
stos
xchg
push
jno,pt
cmp
movsb
adc
add
stc
ficompl
xor
mov
notb
jp
and
inc
push
fistps
cli
bound
movsl
lahf
pop
test
xor
sbb
mov
lret
lods
mov
in
push
xorl
jbe
stos
frstor
pop
loop
jge
ss
add
stc
loopne
aas
xor
rolb
lea
out
aaa
sti
mov
arpl
cmp
mov
out
aam
mov
in
jmp
insl
fistpl
cli
xor
mov
scas
inc
push
fcoms
cmp
push
xor
or
in
bound
sbb
lds
cwtl
out
lea
mov
int
jbe
push
adcb
lcall
mov
or
push
gs
xor
xchg
add
mov
fsubrl
lods
outsb
push
xor
sbb
decl
xchg
cmp
je
jo
fisttpl
dec
pop
aam
mov
mov
push
xchg
scas
xor
or
scas
inc
or
std
iret
mov
dec
cli
mov
cmp
push
fldenv
jnp
imul
notb
rcrb
xor
dec
movsl
repz
cmc
cltd
sub
xchg
lods
in
cmp
ret
lret
sub
mov
cli
pop
cwtl
fnstcw
pusha
lcall
cmp
popa
imul
mov
fucomip
sub
test
jg
orb
add
sbb
sbb
push
stc
mov
shrb
das
jbe
inc
push
flds
or
outsb
insb
leave
mov
imul
add
inc
jge
xchg
popa
push
add
aaa
xchg
inc
adc
ret
mov
sub
adc
mov
insl
insl
insl
hlt
push
pop
pop
insl
inc
push
xchg
lret
mov
stc
adc
inc
bound
mov
inc
mov
fiaddl
xchg
adc
push
and
xor
outsb
jo
lret
jp
pusha
repnz
add
repz
cmp
push
enter
jb
rcrb
lret
shlb
or
push
cmc
repnz
jge
lods
iret
add
stos
fdivs
jp
sbb
add
pop
fmull
data16
out
movsl
adc
mov
inc
ret
imul
test
sub
repnz
aam
pop
xor
xor
and
out
testb
rcrb
sahf
push
add
xchg
lret
movsb
jle
data16
bound
push
push
fdivrs
mov
inc
jge
sti
btc
pop
pop
dec
ja
cltd
xor
movsb
leave
ret
jnp
mov
pop
fadd
xchg
xchg
lea
sbbl
clc
in
push
arpl
out
shlb
dec
xor
push
xchg
xchg
psadbw
lcall
push
cmpsb
call
or
inc
sub
int
ficompl
and
daa
movsl
and
imul
mov
add
in
adc
mov
inc
repz
mov
mov
cmpsl
mov
call
sbb
mov
pop
jnp
push
lcall
sub
es
sbb
mov
int
jmp
fdivr
arpl
pop
xchg
mov
mov
mov
insb
pusha
std
cmp
jo
jp
out
imul
daa
xor
push
fs
imul
int3
xchg
divl
stc
push
mov
fidivs
xor
orl
cmp
bound
enter
cmpsb
cmp
mov
imul
outsl
mov
add
shl
and
fcoms
mov
iret
pop
dec
mov
jno
sahf
or
call
xlat
lods
ljmp
and
and
sbb
decl
xchg
sub
adc
mov
outsb
je
and
jno
lea
push
pop
ss
xchg
les
movl
bound
imul
jle
test
es
rorb
jns
mov
fidivs
cmc
in
inc
lret
in
das
iret
test
fimull
mov
loopne
iret
shl
es
sbb
out
cmpsl
jb
repnz
loop
cs
or
call
addr16
sbb
ss
mov
mov
xchg
cld
jmp
xchg
or
jns
sahf
scas
and
js
aas
push
stos
add
sub
cld
inc
icebp
andb
push
dec
cmpsl
mov
repnz
fcmovnbe
xor
mov
xchg
mov
icebp
orl
iret
ret
les
jae
inc
cmp
jg
rcr
fildl
jbe
fwait
adc
bound
cltd
sub
jo
inc
scas
mov
xor
pop
mov
sbb
cwtl
sub
dec
in
sbb
daa
sbb
and
xchg
loop
stos
mov
xor
pusha
xor
xchg
pop
or
mov
jno
xchg
inc
jbe
or
mov
push
in
and
and
cmp
subb
or
fimull
add
cmp
ljmp
out
leave
mov
dec
add
outsl
xchg
and
iret
sub
dec
mov
movsb
inc
sub
es
ret
imul
pusha
outsl
add
fstl
pop
negl
js
repz
cmpsb
imul
test
jle
pop
pop
dec
push
adc
lds
cmp
mov
mov
out
sbb
mov
lods
cmp
cli
and
cmp
or
or
cmp
pop
insl
leave
inc
jg
aaa
incl
icebp
divl
ret
test
pop
pusha
popf
sub
pop
stos
cmp
jl
jne
jle
lea
cmp
dec
js
dec
mov
pop
inc
sub
bound
pop
xchg
sub
or
int3
lock
cmp
std
sbb
pushf
sub
daa
or
hlt
cmp
pop
xor
push
rcrb
js
xchg
push
mov
jo
shll
out
mov
mov
aam
dec
lods
lahf
int
int3
cmpsb
repnz
sbb
xor
insb
sbb
sub
and
xchg
xor
insb
inc
pop
pop
out
inc
push
imul
outsb
pop
xor
sbb
rcll
mov
or
mov
mov
add
and
je
into
std
ljmp
in
push
and
lock
add
mov
add
iret
push
adc
ljmp
dec
adc
insl
cmp
jg
jo
nop
jl
addr16
sbb
mov
mov
in
in
mov
es
mov
in
pop
push
and
rcr
xchg
dec
xchg
pop
mov
mov
and
mov
testb
sbb
ds
or
or
mov
cld
in
pop
or
mov
out
xrelease
ret
jnp
add
test
pop
out
dec
pop
cmc
fstpl
sub
popa
inc
out
dec
scas
pop
and
jecxz
add
inc
and
pop
arpl
dec
outsb
pushf
adc
jmp
enter
push
mov
xchg
mov
dec
xchg
push
cvtdq2ps
repnz
mov
fbstp
cld
jle
mov
addb
cmp
mov
dec
cmp
adc
mov
stc
shl
out
mov
sahf
stos
jo
and
mov
inc
inc
ret
scas
movsl
cli
jle
and
push
movl
sub
insl
xor
fidivl
mov
imul
sub
cmpsl
leave
push
ljmp
lea
movsl
testb
jg
lret
ret
fcoms
or
mov
cmp
push
and
scas
shlb
lret
dec
xchg
mov
push
mov
xor
inc
repz
dec
dec
in
mov
in
or
mov
rolb
add
sub
aaa
ja
mov
shlb
rdmsr
mov
and
sbb
pop
add
adc
popf
mov
push
fs
pop
sub
adc
mov
adc
mov
call
jnp
sbbl
dec
adc
scas
dec
repz
addr16
clc
inc
fs
cld
out
mov
xlat
and
xchg
addr16
push
dec
das
incl
scas
iret
inc
push
mov
shll
or
mov
loop,pt
sbb
push
cltd
dec
ret
inc
sub
sbb
push
in
mov
js
adc
and
cmp
push
subl
es
adcl
cmp
test
es
cld
cmp
mov
ret
cmp
xor
scas
decl
xor
enter
out
pop
popa
or
cltd
out
scas
mov
enter
repz
out
out
insb
arpl
std
in
mov
push
mov
sub
push
sbb
push
stos
in
shlb
lock
sbb
repnz
icebp
aad
inc
or
jg
xchg
in
lock
fists
cld
sub
inc
mov
cmpsb
push
fcoms
cli
ja
push
lock
les
sub
mov
pop
sbb
xchg
sahf
mov
mov
jo
in
outsb
jl
adc
xchg
sbb
xchg
in
test
scas
rcr
cmpsb
xchg
jae
lds
jmp
gs
pop
mov
pop
mov
out
shl
ss
mov
xchg
mov
mov
mov
pop
dec
sub
hlt
scas
push
xchg
xchg
push
out
cmpb
or
inc
ret
int
mov
arpl
cmc
stos
les
sbb
jb
xor
pop
aad
into
rol
out
lds
aaa
lds
push
clc
sub
jecxz
xor
out
pop
out
dec
sbb
and
das
mov
jbe
xor
mov
xchg
jl
clc
std
mov
ret
xor
push
mov
sub
xor
das
imulb
ret
jl
xchg
rorl
pop
push
aad
addr16
add
cs
add
shr
scas
adc
xor
sahf
icebp
cmp
or
stc
dec
xorl
sub
ja
je
push
stos
bswap
jo
pop
jae
add
mov
and
sbb
inc
xchg
mov
lods
add
mov
cmp
mov
nop
jge
test
lahf
mov
mov
daa
mov
xchg
jno
scas
adcb
mov
imul
push
rorl
test
mov
inc
jo
inc
pop
imul
bound
shll
fwait
cmp
add
cmc
pop
pusha
cmp
into
sbb
insb
sub
and
sbb
or
pop
xlat
and
jae
jae
mov
add
lcall
rcrb
add
insl
mov
pop
or
aad
xor
xlat
cmp
imul
dec
mov
lret
enter
mov
lods
cli
or
cltd
stc
in
bound
imul
fbld
outsl
adc
icebp
inc
dec
and
fs
push
adc
repnz
movsb
mov
cmp
das
jg
sbb
loope
jp
mov
xchg
sbbl
and
adc
push
imul
insl
in
repnz
rcrb
jne
mov
xlat
sahf
mov
push
cwtl
leave
pusha
aas
push
lret
pop
test
pop
xchg
in
jbe
dec
shll
lcall
or
xorb
xor
ja
xlat
jg
jmp
or
sbb
and
add
lahf
dec
addr16
cmpsb
ret
mov
xchg
pop
arpl
sbb
pop
popa
push
pusha
jae
jp
or
mov
jnp
popa
out
jp
fnstenv
shll
scas
adc
test
cld
pop
imul
mov
aam
lahf
out
neg
lock
push
adc
mov
scas
pop
and
push
pushf
mov
fwait
aad
cmp
inc
out
in
push
rcll
nop
cld
outsb
xchg
push
ficomps
movsb
out
rolb
scas
sub
cwtl
fstps
imul
push
push
xchg
adc
cli
mov
add
mov
and
dec
std
push
lock
xchg
pop
leave
jb
cmpsb
jo
adc
fnstenv
jno
mov
add
mov
push
lahf
aaa
sub
out
xchg
int
or
xchg
clc
aam
add
into
and
ja
ja
scas
out
adc
jb
negb
nop
pushf
push
imull
cli
sub
mov
imul
cmp
jge
ret
movsb
daa
xor
xor
jle
out
push
popf
sub
mov
fistpl
std
or
mov
add
pusha
push
dec
mov
cmp
lahf
sarl
loope
mov
pop
xchg
ret
stc
xchg
pop
cmp
jno
jp
push
xor
leave
dec
sti
sub
mov
imul
jge
jne
fsubrs
mov
adc
add
in
je
sbb
add
add
ljmp
pop
mov
jns
hlt
cmc
adc
notb
add
int
pop
mov
gs
add
or
inc
mov
mov
vmptrst
sub
jg
jne
clc
in
lods
nop
cmpsb
mov
lea
jecxz
fcomi
test
shlb
shl
aad
xor
push
sub
in
jno
inc
ficoml
jbe
jmp
push
les
test
test
insl
mov
jg
les
pop
sbb
in
pop
fstl
mov
dec
xchg
jecxz
xor
adcb
add
push
fdivl
cmpsl
jb
jns
and
insl
dec
and
cmc
mov
lods
pop
cmp
adc
xor
inc
jns
add
jns
adc
inc
mov
jl
xor
cwtl
cwtl
mov
xor
dec
frstor
test
mov
push
jnp
gs
fsubr
aad
iret
es
jmp
nop
fwait
mov
test
cmpb
imul
rolb
pusha
pop
into
cmc
aam
cmpsb
sub
sbb
jae
jbe
mov
sub
leave
test
out
jl
mov
mov
aas
mov
jge
enter
adc
call
mov
inc
out
mov
cmpsl
mov
mov
aad
mov
scas
mov
push
aad
icebp
movsb
bound
stos
sti
or
mov
sub
and
or
test
pop
cmc
test
mov
cmp
shlb
les
ret
sbb
roll
lret
adc
popf
gs
sbb
shrb
sub
jge
es
clc
pop
fucomip
lahf
das
movl
mov
jns
movsl
clc
mov
lahf
dec
and
inc
push
ret
and
cmp
or
push
cmp
aaa
out
push
popa
inc
or
sub
jle
mov
filds
jmp
pop
stos
aaa
cld
mov
imul
cmp
or
cmpsb
insb
ljmp
ja
popa
out
lock
addl
or
pusha
les
and
jecxz
cmp
fmulp
nop
mov
pop
inc
fisttps
xchg
xor
mov
mov
jo
xchg
fwait
sub
cmpsb
jp
pop
adcb
bound
mov
insb
pop
inc
negl
dec
mov
loope
jmp
std
nop
out
add
idivl
data16
sub
lret
inc
cwtl
mov
repnz
push
test
mov
xor
sub
xorl
mov
lds
test
popa
adc
mov
xchg
push
lahf
or
js
bound
roll
mov
mov
or
inc
pop
mov
mov
mov
dec
mov
dec
and
daa
sub
xor
pop
mov
popa
jb
frstor
int
inc
adc
inc
push
das
cmp
aam
cmp
mov
out
notl
push
jp
out
dec
mov
psllq
pop
ds
dec
sbb
pop
add
stc
mov
mov
flds
scas
movsl
rcr
cli
cmp
lods
daa
add
add
lds
lea
fdivrl
test
cmp
adcb
inc
fwait
push
add
loope
pop
inc
fwait
mov
dec
pushf
rclb
aad
sbb
mov
gs
mov
push
daa
testl
mov
xchg
mov
je
xor
sbb
repz
repnz
sub
dec
push
outsl
les
jns
lcall
shrl
daa
std
jbe
sub
and
cmp
mov
loope
fsubl
jl
lods
shlb
in
ss
mov
cmp
inc
inc
jae
inc
int3
stc
cmpsl
je
fnsave
inc
shll
sub
and
xchg
aam
loop
aaa
push
in
shr
adc
mov
mov
into
dec
xchg
add
push
mov
fisttpll
mov
shll
sub
cmpsb
pop
popa
xchg
push
sub
or
xchg
xor
fldl
sub
mov
aaa
sbb
push
icebp
stc
push
das
pop
inc
push
clc
cmp
jae
cltd
and
cltd
sbb
or
cmp
xor
jp
mov
sti
ret
cmp
xchg
ja
rcll
sub
fbstp
push
jge
xchg
movl
testl
shll
and
ret
lock
insl
sbb
adc
jge
inc
sbb
shrl
push
or
jns
lcall
inc
aaa
cwtl
es
or
lret
scas
imul
cwtl
lahf
jno
push
out
and
adc
hlt
jecxz
mov
mov
push
or
pop
pop
cld
jmp
into
xchg
inc
adc
fcmove
pop
inc
dec
jp
xchg
mov
mov
out
jno
js
mov
lret
pop
and
mov
dec
outsl
jo
in
push
mov
jmp
or
mov
jp
popa
nop
sahf
push
cltd
dec
sbb
mov
out
inc
xor
dec
mov
shr
adc
repnz
or
mov
mov
xchg
pop
pop
aam
mov
push
cmpb
cmpsb
movsl
sbb
dec
or
fisttpll
inc
or
icebp
rcrl
or
sub
std
cmpsb
or
mov
lds
pop
adc
in
scas
fcoml
outsl
out
push
fmuls
inc
add
xor
imul
pop
mov
pop
mov
mov
pushf
test
bound
ljmp
je
mov
subb
pop
cmpl
xor
sarb
cmp
ret
xchg
and
js
scas
mov
push
dec
adc
and
ds
xchg
xorb
dec
inc
cmpsl
lfs
mov
mov
pop
mov
nop
mov
fisubrs
out
mov
addr16
push
sti
push
cmc
cmp
jl
inc
aas
stos
stc
sub
sub
insl
jae
sub
gs
xor
jnp
pop
dec
outsl
push
mov
ds
mov
icebp
loop
clc
xchg
jb
lea
inc
movsb
add
cmp
cmp
jb
mov
aas
dec
icebp
repz
xor
aaa
rorb
shl
mov
jle
sbb
test
cmp
jl
mov
mov
pop
mov
sbbl
movsb
movsb
ss
cltd
movsb
xchg
lahf
inc
shl
cmp
add
xchg
test
xor
roll
lahf
xor
xlat
adc
shlb
push
test
rorb
arpl
inc
shlb
mov
pop
pop
aas
jp
cmp
arpl
sub
rolb
lcall
mov
cld
sbb
adc
xchg
movsl
cmp
pusha
xchg
push
inc
and
mov
lcall
mov
into
orb
movsl
out
adc
lcall
adc
xor
add
jnp
cs
in
adc
xorl
rcll
mov
jl
inc
das
sub
mov
mov
daa
add
xchg
mov
adc
je
mov
enter
cmc
xchg
inc
mov
push
mov
pop
stos
fs
mov
in
xchg
pop
push
push
out
inc
mov
jle
insb
movsb
lret
xchg
mov
lcall
jae
cmp
xchg
fsubrs
jp
push
pop
push
bound
sbb
mov
leave
subb
dec
roll
aad
pop
test
lock
addl
aad
adc
pop
or
les
outsb
js
add
adc
sbb
or
sbb
mov
jl
inc
mov
loope
mov
mov
repz
rol
jge
mov
pop
shlb
inc
pusha
in
or
test
loope,pt
into
scas
add
leave
shl
fidivrs
std
lret
cmpsl
dec
jns
jecxz
cmc
pop
adcl
loopne
dec
fdivl
cmp
lds
xchg
outsb
or
cmp
xchg
ret
add
iret
lret
sbb
fcomps
in
xchg
out
xor
cltd
imul
std
lock
std
jo
icebp
or
cmp
push
lret
dec
xlat
shrl
call
pop
jbe
pop
mov
fs
lds
push
fmul
loopne
test
pop
mov
inc
insl
xchg
iret
lcall
decl
mov
mov
and
adc
and
push
leave
icebp
cli
jecxz
aam
cmp
add
mov
daa
clc
repz
negb
test
mov
push
js
mov
insl
cmp
and
data16
aas
aas
pop
mov
cmp
sbb
testl
pop
dec
xlat
fldenv
add
sbb
jb
popa
pushf
inc
cmp
push
test
je
enter
mov
xor
fdivrl
mov
jmp
ljmp
xor
cmpsl
aas
pop
les
jge
push
or
push
jbe
push
mov
aaa
nop
cld
mov
pop
js
inc
shrl
sbb
dec
ja
push
mov
push
movsl
std
ret
idiv
mov
add
test
push
addl
jae
pop
xor
insl
lds
inc
cwtl
jno
pop
xlat
push
in
out
mov
fcoml
push
pop
les
jg
leave
pop
push
mov
popa
jbe
aad
inc
push
dec
call
push
cli
stc
mov
aas
bound
and
pusha
rorb
ljmp
andl
sub
add
cmp
fimull
and
pop
clc
insb
pop
fidivs
lahf
ficompl
int3
xchg
or
sub
repz
cld
cmp
mov
pop
dec
loope
aam
jno
dec
pushf
add
scas
loopne
int
rcll
rcr
flds
adc
fdivr
in
cmp
xchg
stos
mov
lret
bound
dec
cmc
add
arpl
or
loop
and
ss
insb
mov
imul
cli
mov
cld
mov
ret
mov
rorl
setp
xchg
neg
ljmp
lds
in
rcll
into
adc
nop
sbb
in
cmp
sbb
aad
cmc
fs
xchg
ret
shll
cwtl
ss
jle
inc
push
mov
insb
aaa
sbb
and
mov
ja
sbb
out
and
jge
inc
daa
jne
fimull
or
mov
ja
out
sbb
sbb
mov
pop
inc
mov
stos
enter
xor
or
fs
rol
insl
inc
arpl
push
jp
fbld
jae
xorl
fwait
adc
clc
or
push
loopne
lea
lret
push
xchg
imul
dec
jb
sbb
loope
mov
cmc
imul
lods
scas
mov
adc
and
notb
adc
lock
mov
jl
hlt
repnz
push
fistl
mov
inc
inc
xchg
sahf
and
sahf
test
xlat
jo
push
mov
aam
dec
jb
cmp
mov
repnz
je
pop
cmp
push
mov
cltd
push
sbb
jl
push
sub
aam
aaa
bound
ljmp
cs
mov
sub
aad
inc
jae
movb
jno
stos
mov
mov
inc
fstps
push
or
mov
push
xorb
cmp
aam
sub
negl
cmp
adc
out
fwait
cmp
je
fwait
inc
imul
arpl
push
ljmp
std
out
and
sub
popf
lds
fcompl
add
clc
xchg
adc
cmpsb
fnstenv
push
ret
rcrb
imul
js
lods
adc
mov
xlat
test
jmp
dec
hlt
ror
mov
cmp
fstps
mov
inc
sub
jnp
out
lret
sbb
jge
enter
and
mov
incb
jne
mov
call
out
test
mov
jmp
scas
test
push
jge
sub
sarl
inc
lret
mov
push
pop
adc
or
mov
mov
lret
lahf
inc
inc
xchg
inc
stos
test
fistpll
stc
mov
adc
pop
xchg
xor
mov
pop
data16
clflush
jno
jmp
sti
sbb
mov
add
data16
test
or
stos
and
arpl
sub
mov
jno
push
jge
add
in
push
cmc
pop
jne
jbe
xchg
cmp
cmpl
mov
push
in
xchg
inc
sbb
and
jg
add
ds
in
popa
loop
std
sti
movsl
adc
ret
out
int3
mov
mov
jnp
vpinsrw
cmp
jo
pushf
cmpsl
push
scas
outsl
pop
cli
repnz
dec
adc
jle
dec
cmp
andl
or
adc
inc
cmp
xchg
add
xchg
push
xchg
in
push
ss
out
ret
shll
ret
out
xor
dec
add
pop
cmpl
adc
cld
ja
pushf
push
aam
push
mov
xor
sbb
ja
jle
rcrb
or
je
cmp
push
mov
int3
mov
in
scas
xor
dec
mov
sub
mov
xchg
inc
dec
cltd
leave
mov
mov
jmp
std
testb
jmp
push
shlb
jmp
or
pop
lcall
pop
fistl
pop
pop
in
pop
out
fidivrs
shlb
fstpt
int
jae
mov
or
subl
dec
xchg
popa
idivb
mov
inc
xchg
dec
int
xor
adc
adc
xchg
repnz
sub
push
adc
jl
fiadds
lods
jecxz
inc
push
in
in
sahf
ficomps
stos
pop
sbb
push
shlb
fs
xor
clc
stos
sub
and
pusha
xchg
xchg
jmp
loop
and
insb
shl
loope
test
cli
xor
in
clc
clc
das
cmpsl
std
mov
inc
repnz
or
outsb
dec
inc
cmp
incb
xchg
loopne
lret
lds
loopne
stos
in
cmp
add
or
ret
fdivrl
inc
out
cmp
scas
sbb
mov
mov
or
adc
pop
lahf
leave
out
cld
ss
icebp
jns
jge
loope
fwait
mov
bound
push
cmp
in
ja
lea
int3
sbb
insl
sub
push
push
dec
popf
sub
int3
in
sbb
pop
sub
inc
adcb
enter
ds
and
lret
mov
push
push
pop
inc
adc
sub
xchg
push
pop
addl
mov
mov
iret
in
dec
cwtl
pop
iret
sub
sar
fnsave
dec
movsb
xor
add
dec
test
inc
mov
and
pop
mov
imul
clc
jg
dec
adc
cmpsb
or
pop
movsl
in
sub
fstpt
mov
enter
add
pop
adcl
outsb
cmpsb
lock
xchg
outsb
in
inc
mov
call
adc
jle
imul
jae
pop
inc
xlat
jg
pop
in
mov
xor
fiaddl
inc
sub
sbb
outsl
push
xchg
stc
pop
pop
inc
addb
and
cmpsb
adc
mov
dec
imul
mov
sub
int3
insb
dec
arpl
pop
lock
pop
repnz
loopne
add
pop
dec
pop
and
mov
sub
outsb
pop
std
xorl
push
jno
out
pop
mov
outsl
rcl
cltd
loope
mov
xchg
aaa
lcall
dec
xlat
push
mov
cmpsb
ret
rcll
rcl
mov
or
test
fmuls
xchg
es
repnz
fucomp
cltd
dec
lret
cmp
mov
orb
pop
fsubl
push
scas
mov
sar
mov
sub
sbb
movsb
nop
push
scas
imul
push
xlat
out
xor
jg
pusha
mov
push
movsl
jl
pop
fwait
mov
adc
jno
sbb
and
xchg
popa
mov
je
xchg
jnp
dec
mov
stc
adc
adc
daa
test
fs
xor
insb
fnstsw
in
push
cld
mov
inc
in
xor
mov
mov
aad
cs
xor
mov
sub
xor
push
in
cmpsb
jl
aas
push
xchg
sahf
das
andb
inc
sbb
lcall
into
push
lsl
dec
or
add
dec
push
push
sub
in
in
hlt
call
xor
subl
sbb
push
push
fsubr
sbb
add
fs
rclb
clc
fst
dec
sbb
pop
dec
xchg
xchg
or
sub
hlt
cmp
rcrl
outsl
lds
loopne
mov
push
lahf
dec
pop
cltd
dec
xor
xchg
adc
sub
outsl
mov
test
inc
jnp
mov
xor
mov
cmp
ja
pusha
aaa
dec
mov
cmp
cmp
mov
in
je
ret
push
les
inc
outsb
inc
add
sarb
sub
push
out
sub
filds
mov
mov
lahf
imul
push
out
in
pusha
mov
sub
stos
jbe
and
sub
push
aad
test
xchg
enter
stos
xor
sub
pop
shll
mov
cmpsb
fwait
sbbl
mov
mov
jno
lret
sub
dec
and
or
mov
xor
or
push
add
inc
mov
fcmovbe
ss
inc
dec
xlat
mov
mov
jae
mov
scas
mov
test
test
insb
add
insl
cmpsl
push
push
pop
fdivs
mov
movsl
das
jne
push
jae
scas
fyl2xp1
fidivs
push
ja
jb
pop
sub
inc
aaa
adc
in
ljmp
outsl
iret
je
lret
jl
ljmp
xchg
mov
mov
jp
mov
cli
clc
jp
xchg
jmp
xchg
loopne
daa
movaps
push
in
mov
mov
mov
mov
cmp
fidivrs
scas
mov
and
cmp
mov
pushf
push
out
sub
fisttpl
dec
jbe
sbb
push
outsl
je
pushf
int
popa
adc
stos
rcrl
out
aad
sbb
jno
shlb
mov
inc
mov
movb
or
jne
mov
popa
mov
lock
adc
and
mov
push
sahf
xchg
mov
mov
sbb
das
call
scas
mov
data16
xchg
push
cmp
cmp
sub
xchg
scas
pop
and
cmc
push
sti
push
jmp
sub
dec
ljmp
pop
cld
push
dec
xor
loope
or
pop
shl
aad
in
cmc
aam
adc
pushf
cmpsl
jmp
pop
imul
inc
rcl
mov
das
rolb
pop
pop
jg
mov
inc
mov
lcall
mov
arpl
adc
push
xor
in
pop
jo
pop
xor
xchg
int
jae
std
sub
pop
mov
aaa
pop
cli
addb
jmp
inc
push
or
mov
pop
sahf
addr16
clc
mov
lret
xchg
pop
js
mov
in
rorb
cmp
addb
push
pop
or
and
ret
daa
ja
xchg
jmp
in
cmc
push
adc
pop
pop
push
adc
cmpsb
scas
pop
ja
dec
inc
mov
cwtl
fwait
cltd
cli
jmp
sti
mov
aaa
sbb
jle
xor
lds
jne
xchg
jg
xchg
cmp
les
inc
ss
lods
fmull
and
cld
mov
sbbl
sub
push
mov
sbb
test
cmp
testl
into
sub
lret
jo
dec
dec
ffree
scas
aas
sahf
mov
xchg
fs
subb
outsb
fmull
adc
mov
or
mov
loope
sbb
outsl
bound
xchg
dec
out
sub
xchg
arpl
stc
mov
roll
jnp
and
fmuls
mov
aad
sub
cvtdq2ps
pop
adc
or
pop
xor
shrl
pop
stos
movsb
pop
xchg
enter
and
mov
cli
call
test
sbb
push
test
lahf
sub
imull
push
call
xor
int
iret
push
jg
test
pusha
cmpb
adc
mov
arpl
add
jae
mov
mov
enter
add
dec
sub
rorl
lods
mov
dec
mov
iret
or
cvtdq2ps
pop
andb
testb
jg
sbb
rcrl
xchg
or
xchg
xlat
or
cmp
jno
fsts
outsb
pop
inc
outsb
adc
mov
or
dec
test
adc
fs
scas
mov
ss
mov
mov
jmp
addb
mov
sbbl
xchg
gs
pop
into
dec
rcrl
in
and
test
mov
imul
lcall
gs
fsubr
add
dec
in
pop
pop
sub
add
in
xchg
movsl
adc
xlat
pop
rcrl
lock
cmc
ds
lahf
dec
out
mov
lds
mov
rcrb
sub
push
loopne
jno
mov
jae
popf
loop
rorl
mov
inc
and
jmp
addl
fadd
test
test
ret
or
or
sub
jle
cld
test
inc
ja
leave
push
scas
push
data16
fidivl
inc
ja
ret
into
mov
jno
pop
adc
vmovsldup
dec
xor
push
mov
call
adc
lds
push
sub
ds
pushf
test
fldl2t
or
mov
scas
aam
jae
add
pop
and
cmp
sub
cli
pop
out
mov
je
nop
or
push
sub
std
mov
xchg
mov
sub
inc
es
in
sbb
sahf
sub
fstpl
sarl
adc
mov
in
test
stc
ds
ret
inc
add
stc
lret
divb
xor
call
test
cmp
add
xchg
adc
sub
xchg
push
fldcw
repnz
dec
and
out
fdiv
ljmp
pop
out
std
or
cmp
leave
lock
xchg
cmp
in
out
mov
in
insb
add
xor
ds
popa
fisttpll
add
std
stos
filds
add
mov
into
pushf
mov
hlt
lods
mov
push
xchg
mov
movb
insb
ss
into
xor
add
filds
mov
xor
cwtl
dec
cmp
cwtl
in
add
outsl
icebp
aad
scas
out
mov
mov
das
adc
sub
cmpsb
adc
shll
pusha
mov
repnz
cmp
js
xchg
xor
mov
push
test
mov
out
pop
iret
insb
hlt
loope
inc
stc
sahf
cltd
dec
in
jbe
xor
mov
mov
mov
faddl
pop
mov
jbe
les
sub
js
repz
popa
push
mov
sbb
ljmp
lcall
push
lock
pop
pop
sbb
xor
rclb
scas
xor
clc
push
dec
aaa
pop
mov
xlat
fwait
cmp
xor
testb
mov
fstps
push
and
fistl
xor
or
mov
lcall
out
vmovsd
xchg
out
adc
xlat
xchg
stos
mov
dec
add
daa
pop
imul
ret
pop
cmp
scas
popa
mov
xchg
pop
push
loop
mov
jl
pop
dec
shlb
lahf
pop
lock
lahf
aad
dec
push
inc
push
mov
sbb
adc
imul
sub
push
fwait
std
cvtdq2ps
lret
sub
out
sbb
mov
mov
or
scas
enter
pop
in
lea
or
mov
sub
dec
data16
xor
in
pop
cmp
mov
add
cmp
cltd
add
mov
arpl
jmp
dec
or
mov
xchg
jo
fnstcw
ffreep
or
xlat
cs
icebp
and
and
lock
pusha
inc
sub
push
call
mov
add
test
das
or
fists
aaa
ljmp
dec
int3
xchg
inc
mov
das
jno,pn
mov
mov
cmp
jg
out
xchg
jo
push
mov
lahf
inc
imull
lds
xchg
add
mov
dec
sbb
push
mov
pop
sbb
fbstp
enter
aaa
push
cmpsb
addr16
shl
xchg
rcr
sbb
call
js
inc
pushf
jno
test
int3
and
jnp
xchg
sub
jmp
insb
in
mov
pusha
cltd
adc
pop
mov
in
add
ja
das
xchg
stos
and
dec
ds
aas
jg
pushf
ror
pop
inc
imul
inc
push
in
sub
jne
cwtl
adc
in
inc
sub
adc
sub
call
sub
push
cmp
fs
inc
in
int
gs
xor
sub
jmp
not
dec
push
sarb
cmp
jle
pop
insl
aam
sbb
pop
and
arpl
jge
xor
xor
xchg
js
sub
loope
xor
sti
jmp
fldcw
sti
lcall
pop
fcmovnbe
xchg
lods
mov
ret
pop
push
out
jne
cpuid
mov
pop
rcpps
or
sbb
and
and
mov
push
aas
cwtl
roll
xor
adc
pop
cmpsb
cs
movsl
dec
mov
xor
leave
dec
xor
lea
xor
and
xor
movsl
adc
mov
imul
ficompl
addl
outsl
mov
stos
mov
aas
mov
shrb
repz
hlt
push
push
scas
mov
xor
or
mov
shlb
sbb
or
clc
sarb
pop
loopne
and
mov
jns
aas
mov
mov
mov
bound
pop
in
and
or
leave
pop
out
inc
dec
jne
repnz
out
sbb
mov
pop
sahf
ret
inc
dec
rcl
fwait
dec
arpl
inc
sbb
push
sti
pop
pusha
mov
hlt
sti
pushf
imul
or
mov
imul
in
inc
std
jl
or
sbb
dec
dec
jo
mov
dec
ret
jb
xchg
cmp
icebp
mov
fisttpll
out
jle
or
in
hlt
jno
cmp
xorb
jp
aas
and
dec
push
negl
shl
mov
idivb
cmp
lods
and
inc
jnp
fisttps
pop
out
and
sbb
sbb
insl
jbe
pop
dec
mov
push
sub
dec
test
adc
cmpsl
and
cmp
dec
cmp
aad
movsl
jl
ljmp
fs
sbb
inc
mov
imul
xchg
pop
imulb
mov
rorb
jmp
cmp
fs
adc
sbb
das
insl
cli
xlat
ds
jle
stos
and
mov
or
adc
jno
inc
pop
arpl
xor
xor
sub
cs
mov
add
jbe
and
int3
ret
jo
dec
cmp
in
lea
dec
jmp
imul
add
push
aam
jmp
mov
push
jbe
shlb
dec
xchg
dec
mov
test
cmp
and
les
or
or
jnp
cmp
or
out
std
je
and
ds
sub
ljmp
popa
push
jecxz
aam
movsl
mov
arpl
sbb
jbe
mov
icebp
cmpsl
out
inc
xor
jp
xchg
xor
push
rcr
fsubl
or
arpl
and
cmp
lods
stc
loope
mov
xchg
push
xor
inc
jl
mov
and
stc
add
push
dec
das
sub
mov
ficompl
pusha
xchg
jnp
je
notl
rolb
add
dec
mov
movsl
jg
adc
cli
cmp
sar
call
jg
insl
xchg
mov
jne
into
adc
xchg
mov
lock
jne
popf
js
adc
inc
je
movsb
sbb
out
popf
mov
loopne
pusha
repnz
sar
inc
dec
scas
xor
jle
ja
insl
add
cs
cmpb
mov
fwait
enter
sarb
test
pop
iret
idiv
jae
loope
xchg
flds
jecxz
movsl
xor
jmp
fsubrl
fbld
lcall
arpl
or
out
jae
mov
or
test
add
repnz
push
bound
push
or
call
insl
loopne
dec
jne
sub
xor
rol
sbb
mov
stos
dec
dec
scas
loope
imul
cmc
data16
scas
popf
movsl
pusha
mov
pop
jmp
inc
mov
das
mov
mov
cs
nop
mov
insb
fidivl
lret
xor
dec
sub
sbb
dec
inc
mov
pop
arpl
push
mov
jae
rol
mov
inc
in
jae
int
nop
cmp
and
or
imul
movsb
mov
movsl
xchg
test
mov
test
imul
jbe
add
ds
inc
daa
add
clc
and
inc
xchg
bound
adc
push
rolb
int3
dec
or
fldenv
pop
xchg
mov
rorl
mov
jle
negl
push
push
jle
add
inc
movsl
cmp
pop
xor
mov
cmc
fsub
roll
cmp
jae
mov
jmp
fnstsw
xor
loope
push
notl
sbb
jp
test
fmul
inc
fimuls
sub
cli
or
mov
stc
test
fists
arpl
sbb
xchg
out
sbb
das
mov
pop
test
pop
cld
adcb
sub
jae
imul
cwtl
rclb
daa
jb
xchg
jo
add
push
cmp
pop
test
dec
cmp
gs
stos
into
sbb
push
or
bound
in
xchg
mov
pop
dec
xchg
jns
call
xchg
xchg
xor
mov
adc
push
or
cmpsb
inc
andb
cmp
stc
imul
xor
push
push
subl
push
sub
add
sbb
es
pop
dec
mov
sub
gs
cmpsb
add
sbb
adc
adc
fcmovu
stc
mov
push
pop
lea
or
cmp
pop
add
dec
mov
sub
enter
fpatan
data16
shr
pushf
scas
jp
sbb
add
ret
fdivrl
sbb
leave
push
mov
sbb
dec
xor
rcrl
dec
bound
xchg
and
cmp
lods
fistpll
jb
movsl
nop
add
je
mov
inc
sub
rcl
mov
and
lods
inc
gs
sbb
je
stos
shrl
jg
lret
mov
adc
pop
inc
maskmovq
ds
xor
cmpsb
fistl
sahf
loop
sbb
addr16
push
xchg
mov
addb
jne
andb
iret
dec
add
lret
loope
sbb
insb
mov
sub
mov
fimull
scas
daa
out
adc
daa
loope
fidivrl
jo
cmp
mov
jge
pop
insl
fsts
mov
fimull
adc
dec
clc
jne
sbb
jecxz
rolb
mov
jns
rorb
ja
push
or
fistps
and
aam
nop
pop
mov
pop
cmp
ljmp
aas
test
mov
xor
jns
add
pop
cmpsl
push
aad
outsb
adc
repz
popa
clc
movsb
cmp
mov
lea
adc
pop
adc
dec
pop
sub
adc
push
repz
sub
add
aas
cmp
inc
std
push
outsb
push
ja
pop
outsl
arpl
insl
mov
test
or
inc
and
cs
in
iret
jge
cmc
jo
adc
popf
test
loope
outsl
cld
push
aad
push
push
sbb
mov
mov
inc
push
pop
jae
push
add
cmp
push
fs
in
mov
pop
and
sahf
mov
shlb
pop
cmp
mov
xor
ljmpw
push
pop
ljmp
add
add
xchg
and
push
sbb
jb
xchg
mov
lock
add
dec
stos
ficoml
gs
pop
out
fimull
cmpsl
dec
cmc
ss
or
inc
psrld
insb
cld
sbb
xchg
push
mov
sahf
jo
out
gs
and
cmp
popa
xchg
aam
clc
daa
pop
lds
sub
clc
idivw
mov
xchg
dec
scas
fs
aad
adc
mov
xor
pop
movsl
mov
ljmp
js
or
adc
xor
or
mov
js
jbe
cld
test
or
imul
xlat
pop
les
sub
pop
out
adc
fadds
mov
and
push
cmc
push
fadds
call
repnz
sub
cmp
mov
int
shll
in
dec
rcll
imul
cmp
pop
sbb
in
popl
stos
out
mov
add
into
and
push
xorb
sub
cmp
cltd
lods
cmp
adc
shr
fadds
adc
cmp
outsl
data16
xchg
lea
xchg
les
sbb
pop
aas
pop
mov
gs
mov
movsb
dec
dec
into
xchg
and
pop
and
je
mov
pop
stc
cmc
lret
dec
pop
or
dec
xor
jmp
jmp
shrl
push
mov
push
add
dec
push
bnd
arpl
cmp
movsl
jb
das
aaa
int
aad
faddl
pop
pusha
jp
imulb
sbb
and
xor
repnz
dec
xchg
mov
or
iret
into
stos
bnd
stos
lock
push
scas
lea
cmpsb
lods
clc
insb
jno
lods
add
push
mov
xor
pop
mov
icebp
mov
aad
lret
xor
xchg
jno
xchg
fidivrl
sbb
cmp
and
lret
push
lods
jae
les
out
jnp
lods
ret
add
icebp
out
pop
cmp
sub
loop
ret
dec
pushw
cmp
pop
mov
push
xor
leave
jmp
push
ret
sub
lods
in
cmc
push
and
or
arpl
adc
sub
cmp
enter
arpl
sbb
mov
jnp
je
inc
mov
ret
into
jne
ja
daa
dec
enter
mov
mov
dec
push
ret
mov
jecxz
xor
fadd
adc
inc
cmpsb
dec
add
sub
cmc
ret
dec
xadd
jle
lret
xor
push
ds
shlb
cmp
or
sbb
xor
dec
xchg
das
push
test
pop
decb
leave
in
aaa
xchg
das
lcall
sbb
jecxz
dec
sub
das
pop
mov
sbb
xchg
mov
test
loop
cmp
int3
aad
sub
dec
lcall
rolb
cld
jo
cmp
pop
in
mov
and
arpl
inc
mov
ficompl
in
imul
push
mov
fistpl
push
cld
jp
mov
out
dec
xchg
fs
movsl
inc
jg
xlat
add
pop
jnp
push
adc
and
nopl
dec
add
fstpt
mov
xor
xchg
lret
daa
push
rclb
xchg
movzbl
push
ja
aad
and
lds
cmc
inc
xchg
cmp
fs
pushf
cmp
sub
cmp
mov
iret
and
sbb
data16
hlt
dec
jmp
les
add
shlb
out
sbb
jb
es
lcall
daa
nop
hlt
dec
jno
test
fisttpl
stos
ja
mov
out
or
enter
cmp
inc
aas
and
push
or
sbb
jle
sarl
aaa
enter
mov
hlt
insl
mov
mov
mov
rclb
cmp
cmpsl
xlat
xor
push
test
cmp
and
dec
or
iret
fidivl
ret
xchg
testb
jne
sbb
mov
popf
call
pop
test
cmpsb
scas
add
dec
jecxz
lahf
push
aam
les
test
cld
push
push
sahf
jnp
push
pusha
pop
mov
add
push
sub
lret
pop
les
sti
and
mov
idivb
arpl
cli
push
dec
push
out
cmpsb
cwtl
je
add
inc
pop
ret
inc
insb
rolb
push
jo
fwait
sbb
or
mov
cmp
inc
jae
push
jl
rcr
pushf
push
mov
ss
dec
inc
mov
jo
cmc
sub
js
scas
addr16
cwtl
loope
dec
adc
mov
add
out
test
cmp
nop
or
sahf
gs
enter
mov
and
mov
push
jne
repnz
dec
sti
movsl
dec
dec
insb
jbe
add
mov
fwait
not
adc
ja
iret
sbb
or
inc
mov
lods
cltd
adc
cmpsb
mov
mov
sbb
inc
jne
inc
push
sarb
xchg
inc
sbb
outsl
push
xchg
sahf
sub
icebp
out
xor
cld
cwtl
add
ret
jmp
pop
xchg
jg
pop
movsb
dec
std
inc
xor
mov
outsl
push
hlt
push
mov
lcall
leave
jbe
jle
stos
addl
jg
jo
mov
pop
cmp
add
mov
and
jmp
mov
popf
jne
adc
dec
xchg
repz
push
pop
cwtl
dec
push
aas
jecxz
jg
imul
mov
pop
inc
hlt
cmp
fld
stc
or
mov
arpl
or
cltd
push
aas
add
jno
pop
popa
dec
lret
jns
jae
ljmp
je
mov
mov
pop
mov
push
xchg
push
sahf
cmp
lcall
inc
mov
enter
or
adc
rorb
mov
fs
or
fs
iret
lcall
mov
fldcw
mov
inc
cmpl
les
je
or
fbstp
test
sbb
mov
or
cmp
dec
testb
dec
xlat
dec
xchg
mov
mov
cmp
jo
sarl
mov
aad
lcall
inc
imul
mov
or
aas
sbb
cmpsl
and
xchg
ret
cmc
sbb
push
je
adc
push
ja
insb
jb
mov
out
jns
inc
adc
push
or
xlat
lods
mov
or
ljmp
fcoms
inc
mov
sub
rclb
out
je
and
jno
cli
cmpsl
in
or
sbb
push
loopne
popf
and
jle
ss
xor
dec
cli
xchg
inc
loope
mov
out
or
pushf
mov
or
or
fdivrl
mov
scas
sbb
incl
or
xor
push
push
and
enter
nop
int
cmp
push
mov
sbb
sbb
pop
mov
aad
fpatan
pop
xor
add
cli
ret
out
sbb
pop
xor
aaa
mov
rcrb
push
pop
xchg
or
negb
dec
pop
xchg
cltd
out
mov
fdivrl
movsl
stc
sbb
lcall
inc
shll
test
jbe
lahf
mov
les
cltd
pushf
imull
pop
or
xchg
popa
addr16
or
xchg
mov
flds
fwait
dec
repz
sub
and
inc
rcr
stos
push
xchg
mov
inc
jl
sarb
cs
movsb
cmp
mov
punpcklbw
rclb
xchg
pop
mov
sub
icebp
or
inc
sub
mov
or
clc
jle
jae
rclb
adcb
imul
xchg
mov
lcall
repz
lcall
cltd
filds
pop
cmpsb
std
push
fcmovbe
dec
or
mov
cli
jge
jns
mov
mov
in
mov
xchg
pop
jbe
ret
je
aad
or
jns
jmp
scas
inc
sti
test
jl
pop
mov
mov
jl
fildl
das
lret
mov
sahf
dec
addr16
out
out
pop
lret
clc
fdivs
leave
sbb
cmp
imul
shrb
xor
xchg
shrb
xchg
pop
cmp
mov
mov
into
pop
or
fstpt
inc
rolb
pushf
fcmovb
cmp
lds
mov
roll
pop
cmp
rcrl
dec
lock
cmp
mov
jmp
mov
scas
mov
pop
out
add
or
fs
jg
pusha
mov
mov
inc
sbb
sbb
dec
xor
sbbb
cmp
xchg
sti
negb
dec
jb
sbb
mov
lcall
lea
xor
adc
mov
and
test
cmp
cmc
stc
addr16
mov
fidivrl
inc
cmovns
adc
lret
sarb
fwait
add
mov
mov
sub
mov
xorl
jo
stos
stos
out
mov
sbb
push
lret
and
jns
sub
mov
push
and
iret
enter
adc
xor
dec
out
push
ds
inc
jl
nop
adc
sarb
xor
or
mov
ss
loopne
push
rcrb
jmp
fs
clc
cmp
mov
fwait
popf
das
cmp
std
insb
jb
fisubrs
loopne
into
loope
push
es
xchg
mov
sbb
add
out
cmpsb
leave
jnp
xchg
xchg
imul
shll
das
and
cmp
mov
pushf
pop
dec
scas
xchg
andl
ja
outsb
std
ds
xchg
outsb
inc
frstor
cmpb
nop
aad
rcr
loope
in
pop
mov
test
icebp
xor
inc
xor
mov
push
cmpsb
cmp
or
je
cwtl
mov
add
push
fiaddl
in
aad
dec
inc
jno
cmp
inc
hlt
xchg
iret
push
or
stos
fdiv
sbb
divb
and
es
test
iret
loopne
es
mov
int
addb
out
popf
or
repz
and
adc
ss
sbb
call
lret
jo
jb
cwtl
xchg
cmp
inc
xchg
cmp
shll
mov
adc
cmp
and
jb
mov
inc
ret
roll
jmp
add
and
adc
js
imul
rcr
mov
push
fstl
in
or
lea
inc
lods
aam
sbb
push
cltd
sarb
mov
mov
stc
addr16
inc
or
jae
and
pop
mov
lock
dec
mov
fdivr
and
sub
and
insl
xor
jl
mov
repz
fistpl
xchg
icebp
inc
push
dec
loope
into
movsl
mov
fnstsw
mov
cltd
jae
mov
push
lock
popf
xchg
adc
imul
mov
mov
jmp
cmc
jl
sub
in
sub
or
and
adc
lcall
sbbb
ror
fsubl
sbb
mov
mov
mov
jae
xor
sub
scas
mov
shrl
scas
dec
cwtl
xchg
pop
test
imul
lahf
push
clc
cmp
xor
in
pop
ss
xchg
les
fiadds
dec
mov
ffreep
shrb
std
stos
lret
push
stos
pop
lods
mov
mov
out
push
aam
add
push
testl
enter
push
cmp
loopne
push
mov
subb
jb
out
rcrl
sub
or
jg
sub
cmp
sbb
xor
mov
jmp
pop
jns
shlb
xchg
lock
mov
add
xchg
mov
xor
cmp
lret
arpl
cs
fs
mov
xor
out
lods
pop
add
flds
lea
aaa
jl
ljmp
adc
jnp
sub
std
hlt
scas
and
xchg
adc
adc
xchg
or
loope
inc
push
nop
pop
jns
push
push
push
mov
subl
mov
jns
mov
in
pop
xchg
jmp
cwtl
cli
in
jge
add
or
aam
add
inc
adc
pusha
sub
divb
jmp
adc
out
aad
and
add
inc
cmp
filds
mov
out
sahf
push
adc
sub
pop
in
cmpsb
pop
jno,pn
es
push
sahf
dec
cmp
mov
outsl
fmuls
inc
fdivrs
iret
adc
mov
outsb
enter
nop
popf
mov
cmp
jbe
mov
push
jg
inc
xchg
daa
adc
je
std
jb
adc
ds
gs
xchg
push
adc
mov
inc
inc
inc
cmp
movsb
bound
add
pop
cmpsl
call
dec
sub
inc
inc
mov
sub
jle
sub
in
pusha
ljmp
pop
xor
sbb
pop
int
sub
cmp
mov
jp
cmpsl
add
imul
arpl
dec
mov
cmp
sbb
mov
je
aam
dec
jo
lea
add
lods
lods
jo
pusha
es
inc
stos
mov
cli
in
mov
or
into
out
adc
lret
pop
fcompl
xor
mov
insl
pop
pop
test
cmp
mov
std
fstpl
movsb
sub
mov
sub
pop
and
and
mov
and
insl
sub
mov
xor
mov
stos
jmp
imul
lcall
ret
pop
test
fcomps
adc
subb
outsl
cmpsl
lods
xchg
ds
pop
enter
cmc
aad
shl
dec
sub
in
lahf
in
adc
mov
cmp
repz
sub
aad
outsb
adc
add
and
stc
jbe
sar
push
daa
pop
cmp
or
into
cmc
mov
and
dec
mov
cmp
sub
sti
mov
adc
fnsave
jae
and
fisubrl
insl
subb
out
mov
mov
jno
cli
out
push
push
pop
cmp
lret
adc
pop
ds
mov
push
and
xor
inc
or
xchg
push
adc
mov
push
jnp
or
pop
inc
sub
repnz
enter
dec
or
pop
adc
pusha
loope
rorl
out
cmp
loop
rcrb
je
cli
in
sub
mov
cltd
or
mov
popf
jne
shrb
popa
aas
dec
rcrl
ja
mov
adc
push
shl
xor
mov
rcr
push
arpl
lret
pusha
pop
xchg
mov
jno
jne
aam
jae
inc
adc
xchg
je
out
jns
in
jnp
loopne
xchg
jne
std
rorb
xchg
jb
or
nop
push
les
push
adc
cwtl
xor
in
jge
std
into
leave
inc
pushf
jle
fdivrs
inc
sbb
push
xchg
outsl
or
leave
addb
push
arpl
sub
mov
sarb
nop
jl
jmp
inc
inc
stos
iret
bound
cs
cmpsb
pop
xchg
mov
sbb
sbb
rcll
data16
out
sub
rorl
adc
in
jb
push
mov
test
push
ljmp
or
cmp
mov
pop
xor
nop
pop
mov
push
sbb
xchg
jg
fadd
cmp
adc
pop
test
shlb
mov
repz
dec
call
test
mov
pop
les
jle
nop
sbb
out
add
loop
push
push
cs
es
mov
test
jge
bnd
addb
pop
sub
hlt
ret
jb
sub
shrb
mov
push
daa
shl
xor
or
add
or
mov
cmp
loope
pop
call
dec
dec
call
sbb
lods
jbe
lret
fistps
mov
gs
add
inc
clc
cmpsb
mov
insl
mov
mov
xchg
cmp
outsb
sahf
dec
pop
repnz
dec
and
mov
pop
inc
sahf
mov
or
scas
mov
test
xchg
clc
mov
mov
xor
out
push
inc
jge
fisubs
in
in
mov
daa
cmp
xor
jg
cmp
xor
mov
sti
xchg
loop
mov
popa
cmp
mov
out
repnz
cmp
mov
pop
xor
push
mov
push
add
stc
pop
shrb
or
popf
mov
push
xchg
inc
push
jle
mov
stos
sbb
pop
int
stc
nop
mulb
adc
xlat
subb
lcall
das
jmp
mov
and
icebp
mov
sub
aaa
push
les
test
out
xlat
jne
xchg
dec
cmpsl
mov
mov
xor
dec
push
movsl
stos
jp
lret
jle
pop
movsb
jmp
dec
xchg
rep
inc
pop
xor
test
push
es
mov
scas
icebp
ficompl
pop
icebp
mov
push
out
shlb
adc
adcb
xchg
cmpsb
data16
scas
dec
sbb
test
je
movb
mov
add
xchg
xchg
sub
out
in
lods
inc
push
push
pop
sbb
pop
pop
mov
xchg
aad
mov
repz
into
rorb
xor
stc
inc
mov
mov
or
cmp
scas
shl
adcl
add
jecxz
cmp
cmp
add
sub
adc
cmpsb
in
mov
cmp
xchg
iret
jp
mov
push
mov
jns
stc
inc
xchg
add
repz
daa
fisubl
pop
cmp
mov
lcall
sub
sbb
push
pop
sbb
loop
mov
insb
cmp
lret
das
sbb
push
out
jge
xor
lock
in
dec
fld
lahf
and
or
or
and
mov
insl
mov
mov
pop
xor
push
cmp
pushf
sahf
sti
jl
push
iret
stc
pop
mov
sbb
lret
test
rcrb
push
sti
out
xor
in
movsl
adc
mov
and
push
adc
xor
sbb
lret
sub
inc
mov
subl
dec
cmp
insl
fstl
icebp
mov
jns
mov
and
mov
aam
xor
loop
in
dec
iret
leave
lock
dec
bound
test
mov
cld
mov
dec
lock
mov
mov
cmpsl
sti
or
push
fimuls
dec
mov
test
cmp
out
pop
jecxz
pop
orl
mov
inc
adc
adc
jo
iret
nop
cmpsl
gs
adc
cld
xchg
cmpxchg
out
cmp
mov
test
orb
fcoms
jp
sarl
add
pop
or
inc
sbb
insl
lds
or
ret
movsl
ja
sub
push
adc
jno
and
cmpsb
mov
ja
xor
jae
imul
insb
cwtl
cmpl
loop
push
pop
pushf
mov
or
test
ret
push
push
or
aas
pop
mov
cld
insb
stos
cli
sub
lods
pop
xchg
aas
pop
mov
movsl
cmp
or
push
or
idiv
push
imull
xchg
mov
sub
mov
sub
pop
loop
jmp
sub
push
push
push
inc
dec
mov
jae
aas
mov
push
fwait
xchg
dec
xor
in
fwait
inc
fnstenv
jg
xchg
mov
fbstp
jo
repz
mov
rolb
add
mov
jle
mov
push
add
xor
fwait
mov
inc
mov
ljmp
rcl
dec
cmp
adc
insb
pop
cmp
dec
add
stos
adc
mov
aam
xchg
mov
mov
negb
mov
iret
add
cwtl
leave
cmpsl
aam
push
fidivl
jns
jo
cmp
cs
push
mov
mov
xor
enter
lods
mov
mov
or
lds
iret
push
jmp
inc
xor
ret
shrb
add
std
cwtl
inc
aad
ljmp
mov
movsl
xorb
pop
jp
adcb
mov
adc
fs
pmulhw
mov
push
test
in
lret
pop
clc
mov
xchg
add
les
nop
insb
jmp
inc
inc
movsb
xchg
push
add
ss
and
sbb
aas
negb
cwtl
jo
add
in
xchg
jo
in
adc
push
fwait
int
rolb
jmp
dec
cmp
fcoml
xchg
xlat
test
xchg
mov
fmull
push
mov
mov
adc
sahf
ljmp
sbb
imul
cmp
hlt
imul
xor
je
popf
adc
sub
xor
mov
aad
aam
push
xchg
sbb
xor
push
adc
jns
cwtl
test
jp
fdivrs
test
imul
mov
imul
xchg
std
jo
mov
jae
fsubrs
push
leave
dec
scas
pop
out
push
xchg
cli
cli
nop
jbe
ja
pop
jns
pop
out
mov
mov
das
sub
add
icebp
add
sub
sti
add
xlat
inc
push
adc
cmc
ss
pop
and
adc
rorb
pop
dec
out
gs
cmpsb
in
jmp
sbb
mov
aas
pop
enter
adc
pop
push
push
cmpsb
lods
mov
lock
push
mov
icebp
xlat
sbb
lret
std
add
fs
sbb
ds
repz
jno
out
cs
popa
cmp
cmp
aad
push
das
sbb
into
in
clc
nop
rorb
stos
stc
xor
dec
jle
aad
sub
dec
mov
pop
adc
lahf
out
faddl
dec
fists
sbb
inc
or
xor
cwtl
and
in
scas
push
dec
sti
dec
aam
push
js
scas
and
add
and
outsb
push
or
loop
cmc
mov
push
sbb
sub
xlat
aad
pop
jmp
movsb
adc
xchg
xor
mov
daa
cmp
das
fcmovnbe
mov
mov
add
jbe
leave
out
push
mov
inc
cld
adc
sub
test
and
adc
fstpl
nop
or
in
movsl
xchg
add
mov
daa
xchg
bound
loop
cld
enter
xor
inc
mov
and
pop
adc
pop
ficomps
icebp
lret
mov
cmp
mov
or
cmpsl
lock
into
xchg
sbb
in
jecxz
scas
jecxz
nop
sub
fcoms
jno
cwtl
shlb
stos
imul
sbb
pextrw
jb
repz
jl
jle
add
insb
out
nop
mov
fs
movb
icebp
sbb
adc
jbe
mov
jp
mov
lods
call
xchg
xchg
jns
cli
repz
mov
in
sti
pop
adc
jno
out
js
insl
jl
cmpsl
sub
repnz
mov
cs
stos
scas
mov
ret
addr16
in
sub
inc
outsl
xor
jmp
inc
out
iret
lods
lods
add
xor
out
addr16
addr16
mov
daa
imul
jae
in
arpl
sub
adc
jae
negb
cmp
mov
and
fcompl
shll
xor
mov
and
push
mov
mov
and
fldcw
pop
pop
or
inc
jp
aam
jb
or
inc
jmp
xchg
xchg
mov
les
repnz
xor
call
cmp
or
jge
push
cmpsb
in
inc
pop
jb
add
fimull
mov
cmp
dec
jae
hlt
rorb
adc
in
or
repz
out
jo
outsl
aam
pusha
or
and
push
jb
push
inc
jae
pop
and
shlb
mov
fldcw
add
lret
clc
ds
rolb
lret
imul
cmc
xorl
mov
sub
and
imull
xchg
les
pop
scas
out
rcrl
ss
mov
test
inc
enter
rclb
int3
mov
fldl
mov
inc
pop
adc
loopne
psubusb
add
inc
push
test
or
arpl
add
and
lods
cmp
ljmp
lcall
dec
loopne
dec
push
loope
xchg
cs
pop
negl
push
fisubl
addl
mov
out
ret
push
sbb
sti
enter
iret
ret
bsr
dec
inc
outsb
inc
test
push
imul
sub
pop
pusha
gs
jl
dec
dec
insl
mov
and
xchg
iret
push
inc
lret
incb
out
mov
sub
std
push
mov
push
xchg
ds
lods
jg
cli
push
repz
out
test
xor
call
scas
dec
mov
in
decb
stos
loopne
das
inc
sbb
xchg
lods
fstpl
cli
dec
test
outsl
push
lods
vhaddpd
imul
stc
ljmp
inc
xchg
movb
fsubl
cmp
sub
cmp
cltd
test
adc
xor
roll
pop
je
and
inc
shrl
aad
cmpl
mov
jae
add
xchg
adc
inc
cwtl
cltd
jp
mov
lahf
push
and
mov
insl
pop
push
xor
pop
xor
cwtl
aas
adc
imul
sub
call
cmpsl
push
inc
xchg
repz
out
sbb
shrb
out
ret
loope
stc
lods
fcmovne
mov
xchg
out
loopne
inc
jnp
pop
outsb
sub
in
push
jbe
addr16
jl
in
cmpsb
mov
push
outsb
push
sti
insl
or
sub
enter
dec
dec
dec
jno
push
repz
xor
dec
les
pop
adc
xor
mov
xor
pop
outsb
ljmp
imull
dec
pop
outsb
xor
scas
push
sbb
sbb
pop
cmp
lret
add
rolb
pop
xor
add
add
push
repnz
pop
mov
push
sbb
push
repz
out
sahf
sahf
adc
sbb
orb
inc
leave
sub
mov
mov
enter
sub
xchg
jp
test
xor
aas
and
in
into
sub
jns
stos
push
xor
or
popa
dec
insl
dec
std
jle
xchg
outsl
lret
sbb
cmpsb
addb
gs
jge
mov
mov
inc
lcall
inc
mov
ret
lods
ss
mov
test
ss
ja
lcall
dec
add
add
mov
dec
hlt
clc
vmulps
add
adc
sub
sbb
int
and
xor
shll
call
inc
negb
clc
pop
push
sub
cmpsl
add
mov
ret
xchg
cmp
imul
cli
fisubl
add
es
push
or
dec
stc
test
jp
xor
add
clc
fs
notl
mov
pop
adc
insl
sub
stos
mov
mov
mov
mov
das
bnd
movsl
les
push
jecxz
mov
rorl
pop
push
cmp
aad
ror
jge
sub
cmpsb
stc
add
add
out
pop
icebp
inc
add
jmp
push
popf
pop
or
sub
sti
cmp
mov
out
fucom
or
fwait
and
adc
and
inc
push
push
scas
push
cmpsl
dec
mov
pextrw
testb
pop
inc
push
dec
movsl
mov
or
popa
inc
insb
jno
mov
pop
sub
xchg
adc
jbe
add
or
call
fs
xchg
sub
pop
xchg
pop
jns
pop
mov
inc
mov
pop
das
jle
mov
and
fdivs
inc
inc
pop
int
add
xorl
push
jg
jecxz
ss
jp
jb
or
xchg
subl
sbb
popa
lds
into
cltd
jmp
aaa
sub
jne
inc
or
adc
stos
cmc
mov
bound
dec
test
or
rcr
pop
das
lods
out
cmp
fistps
inc
mov
out
push
cwtl
call
imul
mov
xchg
orb
int3
lcall
stos
test
jle
call
push
les
in
push
mulb
jne
into
xchg
imul
push
dec
and
mov
xchg
cmc
xchg
movsl
fdivrp
pusha
pop
roll
mov
outsl
mov
dec
xchg
rorb
bound
sbbl
ds
mov
int3
cmp
dec
jne
ret
sti
sbb
stos
pop
and
je
mov
loopne
shlb
adc
jns
repz
sub
inc
in
sub
mov
outsb
cmp
cmpsl
pop
imul
adc
cmp
mov
sbb
inc
mov
fistpl
gs
sub
mov
imul
mov
or
std
movsb
shlb
lods
xor
push
push
and
push
bound
clc
mov
cmp
mov
xchg
imulb
jle
aam
clc
shlb
rorb
mov
fisubs
adc
mov
in
andb
andb
jns
push
or
sbb
lcall
inc
jo
hlt
xchg
mov
lret
mov
cmp
push
jbe
cmpsb
loope
scas
xchg
mov
mov
jae
aas
xchg
adc
in
lds
nop
stos
add
das
test
adc
rep
and
lret
add
mov
lahf
push
test
mov
jp
jne
pop
adc
imul
inc
add
sub
test
push
fidivrs
pop
dec
cmpl
sti
pusha
sarb
mov
es
push
lock
es
clc
stos
clc
sbb
ljmp
mov
les
sti
out
or
movsb
in
jg
cmp
mov
dec
and
add
dec
add
clc
inc
fldt
imul
ds
dec
aad
push
insl
leave
aad
mov
test
mov
jne
add
movsb
jge
mov
lret
gs
cld
push
mov
or
mov
shlb
scas
mov
jge
xor
mov
ret
add
add
test
scas
mov
mov
or
cmp
inc
sbb
mov
fwait
inc
jg
icebp
sbb
jp
inc
imul
or
add
mov
out
lcall
rorb
push
xor
xchg
xor
mov
pusha
stos
and
xor
inc
mov
popa
mov
and
jmp
push
adc
pop
pop
mov
jbe
test
xor
fists
inc
mov
sbb
mov
mov
and
mulb
dec
dec
test
adc
sti
inc
mov
aam
dec
push
inc
add
into
repnz
imul
push
cwtl
repz
inc
mov
jno
cltd
jmp
sub
fldcw
jl
int
or
les
pop
dec
dec
shlb
xchg
or
sub
loop
mov
stos
rcrl
fwait
test
lret
cld
shll
mov
or
mov
pop
aas
cli
sbb
jno
mov
mov
aas
adcl
lods
call
sar
call
xchg
hlt
sbbl
jp
sbb
cli
add
lea
lock
push
add
mov
mov
insl
cmpsb
push
push
out
xchg
jae
dec
roll
push
pop
xchg
add
mov
mov
mov
jb
out
cmp
xchg
mov
mov
setb
jbe
ret
jo
fcom
mov
roll
aam
or
int3
movsl
iret
lcall
stc
push
pushf
adc
stos
das
pushf
cwtl
pusha
pop
icebp
cmp
xchg
inc
mov
push
insl
xlat
fdivrl
addr16
lret
fistpl
rorl
xchg
and
push
mov
imul
add
pop
pusha
ret
daa
xchg
mov
rcrl
sub
jecxz
xchg
ds
push
call
aaa
loopne
stos
adc
or
push
data16
rorb
pop
sbb
and
lods
insl
pop
xchg
xchg
or
and
stc
rorb
sub
xchg
lds
or
lcall
fwait
push
pop
mov
sub
fucom
mov
stos
push
fwait
mov
dec
into
movsb
ret
push
jb
push
fiaddl
rcll
pop
js
push
lods
sub
inc
mov
movsb
rcl
pop
or
mov
dec
xchg
mov
adc
outsl
add
ret
add
mov
cli
mov
das
addb
mov
mov
loope
jmp
pop
add
mov
aad
jbe
jbe
sbb
push
adc
cmpsl
xchg
aad
aas
pop
and
inc
inc
sub
jb
jp
add
add
ret
lock
push
enter
lcall
sub
mov
negl
loop
pop
je
xor
jmp
dec
movsb
dec
pop
outsl
ret
sbb
imul
sub
rorl
pusha
jae
daa
jae
pop
cs
addb
negl
insl
shrb
insl
aaa
lods
mov
lahf
push
lods
fistl
cld
inc
das
or
xor
rcrb
jbe
sbb
pushl
enter
sbb
aad
jg
and
lods
jmp
push
inc
rcll
mov
lahf
dec
add
jo
fs
aas
in
or
jmp
sbb
aad
or
cmpsb
pop
test
lods
sbb
xchg
cmpsl
test
pop
mov
pusha
js
leave
test
popa
fwait
xchg
or
enter
call
fldt
sarl
cmpl
cmp
dec
pop
std
test
test
stos
jp
jns
dec
jo
mov
dec
ror
fcomps
movsl
das
or
dec
jg
cli
imul
mov
divl
inc
mov
xchg
push
mov
fdivl
push
inc
icebp
sub
stc
sbb
imul
into
test
std
or
xor
xorb
mov
scas
int
ljmp
test
aad
cmpsb
jb
pop
out
sub
push
cmc
fcomps
pop
mov
push
shll
jge
push
xchg
mov
mov
hlt
enter
hlt
push
inc
sub
xor
adc
pop
dec
xor
push
lock
leave
mov
xlat
jmp
add
adc
bound
pusha
popa
adc
scas
aad
std
or
jnp
aaa
test
and
popf
gs
or
xchg
mov
in
xorl
or
xchg
mov
add
pushf
cld
iret
cmp
mov
mov
addr16
enter
out
jg
pop
mov
insw
loop
jge
out
jge
sarl
outsb
mov
dec
lret
jb
hlt
mov
addr16
xor
fisttpl
sti
mov
outsb
sub
orb
add
inc
pop
adc
test
popf
mov
xor
pop
xor
and
lods
sub
outsl
fstpl
push
fs
and
data16
int
scas
dec
add
cmc
xchg
lahf
aas
cmpsl
push
in
jp
sahf
sub
insl
es
pushf
push
enter
add
sahf
fstl
push
pop
xchg
mov
fisttps
and
mov
sub
loopne
fisubrs
and
int3
inc
add
mov
jecxz
bound
clc
or
cli
or
inc
xlat
xor
mov
jno
pop
fadds
jne
pop
sbb
enter
cmp
adc
lock
mov
sub
ljmp
pop
loope
jno
aas
arpl
stos
in
cltd
stos
xchg
fucomip
pop
shlb
adc
inc
out
and
stos
adc
mov
xlat
fstl
or
fwait
arpl
out
sbb
in
jb
nop
sbb
sub
mov
push
push
addl
fidivl
ret
dec
clc
in
mov
cmpsb
push
les
and
xchg
pusha
out
push
mov
jge
into
cmp
pop
push
adc
inc
scas
cmp
in
xchg
mov
sahf
inc
add
fcoms
int3
out
fcomip
movsb
mov
mov
sub
repz
and
pop
ret
je
ret
xchg
scas
push
fmulp
leave
sbb
jecxz
or
ret
ljmp
flds
and
nop
das
xor
sub
jge
xor
jge
inc
xlat
mov
xchg
sub
les
sub
mov
mov
mov
sub
lret
cmpsl
loop
adc
repnz
cltd
shlb
adc
cmp
into
or
out
es
add
xchg
xchg
lret
dec
nop
out
or
sub
add
xchg
fmuls
fnstcw
cmp
jp
xor
imul
dec
dec
sub
imul
pop
pop
sbb
jbe
hlt
cmp
sbb
ljmp
inc
add
clc
fdivs
cmc
outsl
mov
push
push
mov
adc
sbb
cmp
cld
lock
push
xchg
daa
sbb
lahf
addr16
jle
imul
in
cld
repz
mov
adc
xchg
mov
mov
lods
sub
sub
cmp
into
push
jo
cmp
dec
dec
add
inc
ja
mov
stc
rcll
fidivl
add
pop
in
jae
ret
arpl
jnp
and
jge
or
cmpsl
ja
ja
nop
pop
dec
pushf
ret
mov
call
inc
and
pop
pop
and
or
add
loop
js
cmp
xchg
mov
nop
or
aad
popf
movsb
mov
jbe
pop
lock
mov
mov
xchg
push
sbb
adc
mov
gs
scas
std
sub
pop
or
pop
and
aad
xchg
xchg
leave
in
sub
lods
sub
jnp
jp
mov
ret
enter
outsl
dec
sbb
push
rcrl
in
mov
cmp
mov
lds
movb
mov
and
hlt
xlat
xor
enter
aam
jmp
xchg
mov
pop
pop
fsubs
mov
push
les
sbb
hlt
mov
add
jge
mov
mov
stos
dec
push
fs
popa
fs
mov
out
sbb
inc
xchg
sub
jmp
subb
sbb
enter
dec
xchg
or
inc
push
add
cmp
insb
mov
or
les
sub
push
sbb
mov
scas
roll
pusha
das
sahf
xor
mov
mov
leave
jns
ret
sarb
pushl
inc
lods
xchg
sub
adcl
inc
xor
out
mov
inc
je
leave
inc
fwait
xchg
fs
jbe
lods
lock
shrb
pop
mov
ljmp
dec
mov
cmp
movsl
jne
mov
fdivr
mov
jg
test
sarl
and
mov
xchg
in
lahf
sub
or
lock
stc
popf
out
xchg
xchg
lret
dec
in
ljmp
ret
push
mov
mov
int
out
push
dec
mov
cmp
ficompl
stc
ljmp
scas
xchg
dec
and
and
jae
lock
mov
ljmp
jne
jne
add
push
lahf
dec
mov
sub
test
mov
add
adc
cmp
dec
push
adc
ljmp
pushf
mov
cmp
cltd
jae
fldcw
mov
negb
adc
push
or
iret
jl
lods
in
ret
mov
test
inc
arpl
jmp
dec
push
jmp
ret
lds
and
addr16
into
jnp
mov
ja,pt
pop
shll
add
mov
or
xchg
and
test
jge
mov
imul
push
cmp
mov
sub
dec
xlat
adc
sub
jae
push
test
cmp
xchg
add
std
mov
jnp
mov
dec
sarb
std
fwait
dec
jnp
pop
push
imul
sub
mov
lahf
push
lret
fiaddl
xor
inc
lock
push
dec
and
pop
in
mov
push
push
pop
cmp
jmp
sbbb
mov
inc
sbb
add
frstor
mov
dec
jnp
add
xorps
sti
cmc
xchg
and
adc
xchg
cmpsb
daa
loop
inc
lahf
dec
inc
xchg
and
clc
fidivrl
cmp
lock
rcl
into
mov
cwtl
mov
adc
adc
imul
dec
xchg
mov
mov
and
sbb
leave
mov
mov
pop
and
adc
cli
adc
and
loop
add
mov
push
insb
xchg
imul
xchg
mov
xchg
sbb
or
leave
stos
shl
loope
xlat
out
jae
sbb
ds
popf
fwait
xorl
bound
and
jne
aad
sub
push
rcl
jae
pop
sbb
mov
xor
iret
daa
sub
mov
mov
leave
xlat
in
dec
sbb
out
test
mov
pop
cmp
rcrb
push
jp
cmp
xor
test
mov
mov
or
xor
xchg
and
inc
enter
stos
jge
pop
fwait
sbb
sub
cli
jno
xor
pop
mov
test
stos
out
push
mov
dec
das
push
xor
xchg
ret
imul
pop
imul
mov
lods
int
and
xorb
add
ret
sti
mov
mov
popf
xchg
or
lcall
test
mov
sub
xchg
mov
sbb
adc
dec
outsb
insb
dec
lds
loope
cmc
sbb
mov
mov
movsl
testl
repz
imul
jl
push
jl
mov
fsts
aad
cmpsb
vprotd
cltd
xchg
sub
cli
test
ljmp
jecxz
outsl
cs
addb
mov
push
push
sbb
call
out
push
repz
sub
mov
sub
imul
xchg
aam
mov
push
mov
lcall
int
icebp
dec
dec
sbb
stos
ftst
cmp
push
neg
outsb
das
pop
cld
inc
outsl
in
pop
inc
dec
jns
cmp
ja
cmp
mov
xchg
jb
sub
jmp
push
mov
out
inc
xchg
mov
sub
sbb
insb
lock
fnsetpm(287
sbb
lods
jmp
fs
and
out
mov
xor
sbb
mov
enter
jle
dec
sub
les
xchg
stos
int
ljmp
int
pop
push
in
stos
jge
insl
cmpsb
stos
mov
das
inc
sbb
cpuid
mov
mov
or
and
sub
cltd
aas
pop
sub
mov
jge
mov
adc
ljmp
and
ds
movsl
push
pop
jge
cltd
into
or
xchg
mov
push
mov
inc
and
in
iret
in
cmpsl
cmpsl
mov
pop
testl
jmp
enter
mov
mov
or
xor
cli
and
sahf
outsb
aad
fwait
pop
cmp
mov
fistpl
pop
mov
jne
into
and
repnz
xor
ds
out
int
mov
iret
popa
rcrb
pop
mov
cmp
xchg
sub
sub
push
mov
lahf
lds
dec
sbbb
ljmp
insl
mov
daa
jns
pop
sub
sub
xor
dec
out
pushf
sbb
out
xchg
not
jno
sarb
incl
push
int3
and
jl
into
push
sbb
jmp
sub
ss
pop
or
xor
out
outsb
adc
mov
pop
or
pushl
pop
push
add
xor
sub
push
jle
ljmp
je
movsl
or
cmc
sbb
cmp
outsl
daa
sbb
scas
scas
icebp
cmpsl
and
pop
popf
out
cmp
sub
ret
push
jae
cmp
rol
pusha
popf
add
shl
xorl
xor
jp
push
mov
sub
mov
adc
dec
fadds
mov
push
sbb
into
dec
xchg
inc
cltd
in
sub
cmp
jae
jl
jnp
adc
inc
fcmove
imul
into
nop
nop
sub
cmp
mov
sub
mov
daa
repz
sub
dec
pop
inc
or
shll
fistl
lcall
inc
pushf
adc
movsb
xor
lcall
fdiv
jl
out
adc
sub
cmp
jmp
sub
mov
push
inc
daa
js
mov
cmpl
jge
test
push
lods
popa
movsl
popa
sub
xchg
xchg
push
cmp
adc
sar
addr16
dec
or
hlt
movsb
push
cltd
sub
in
xchg
outsl
xor
push
aam
sbb
ljmp
mov
fwait
or
aaa
mov
xor
xor
mov
and
outsl
icebp
fwait
xchg
dec
enter
push
fcomp
mov
mov
vmovupd
lods
inc
xchg
mov
dec
iret
cmpsb
imul
ffreep
or
mov
xchg
cmp
inc
push
frstor
rolb
jns
aad
adc
pop
mov
aad
pop
cmp
insb
imul
aaa
lea
subl
rcrb
add
xor
sub
jb
inc
push
movsl
inc
xchg
add
xchg
mov
lret
xor
out
lret
ljmp
fnstsw
push
cld
xchg
inc
jns
xor
push
mov
mov
cmp
shrl
jo
and
lods
int3
mov
movb
in
outsl
dec
push
unpckhps
mov
cli
pop
jecxz
imul
repz
aas
cmp
add
or
sbb
add
rol
mov
pop
pop
cmp
sub
mov
cmp
jp
sbb
or
jns
ja
xchg
cld
aas
fisttps
in
mov
icebp
and
xchg
fwait
setno
in
sbb
stc
fcoms
shll
shlb
dec
ret
aaa
repz
ss
lret
lret
mov
dec
inc
imul
push
xchg
and
adc
adc
pop
cmpsl
cmpsl
dec
cmp
jl
jae
clc
add
mov
aam
mov
lods
mov
mov
mov
sub
jo
pop
push
pop
insb
pop
aam
je
mov
dec
mov
mov
push
or
fcmovnb
push
sub
pop
in
aas
push
adc
xchg
fbld
std
lcall
inc
movsl
out
popf
idivb
movsb
lds
xor
fldlg2
push
push
cmpsl
repnz
sbb
test
push
inc
mov
push
test
cld
jne
or
dec
push
jmp
add
scas
mov
repz
sub
in
stc
arpl
lret
pop
mov
iret
mov
cwtl
daa
ljmp
cld
pop
inc
sub
fst
shrb
das
clc
test
jbe
subb
mov
lods
cmp
test
push
stc
data16
push
cmp
pop
sub
push
or
and
jg
fxam
ret
push
adc
fcoml
mov
fsubp
or
pop
enter
cmp
cmpsl
or
pop
jae
orb
test
xchg
pop
dec
rolb
in
ja
cld
inc
push
sub
or
mov
int
jno
mov
pop
scas
cmp
cmpsb
ds
hlt
jmp
movsl
into
clc
adc
call
push
pop
xchg
mov
cmp
mov
push
shlb
add
pop
loop
sub
sbb
adc
or
adc
pop
dec
cmp
sub
xchg
in
jnp
xchg
int3
in
push
add
mov
push
mov
jl
or
inc
fstp
iret
mov
outsl
add
fs
aad
std
inc
sbb
mov
and
aam
adc
into
lods
mov
pop
test
xchg
and
hlt
sbb
bound
mov
ljmp
push
cmp
mov
mov
shlb
jle
sub
inc
mov
mov
jmp
push
lret
andb
xor
push
ja
addb
or
decb
xchg
adc
notl
sub
push
inc
je
xor
xor
pop
in
pop
cs
mov
lods
les
int
mov
push
movsb
push
sub
mov
cli
add
movq
pop
fucomp
adc
sub
scas
mov
push
into
dec
rcll
ja
jecxz
mov
pop
lahf
cli
mov
lret
insb
pop
stc
orb
mov
xchg
popa
inc
and
in
push
dec
mov
test
jl
cmp
and
add
dec
inc
fistpl
popf
aam
or
pop
sub
mov
cmpl
mov
jg
push
in
hlt
mov
sbb
push
adc
addb
dec
ja
shll
jl
mov
loopne
cmc
mov
or
jno
in
xchg
cmp
dec
pop
divl
dec
jbe
stc
sub
adc
and
mov
lret
adc
push
sbb
ret
ret
test
adc
lods
pop
mov
test
pop
jnp
mov
test
push
add
test
sahf
sti
movl
push
sbb
push
decb
hlt
or
mov
inc
dec
inc
inc
and
stos
and
mov
and
pop
jnp
mov
dec
pop
aas
aaa
cmpsb
xchg
mov
mov
scas
push
or
mov
jns
icebp
hlt
hlt
add
sub
gs
iret
and
dec
mov
mov
cmp
andl
xchg
add
test
cwtl
rcrl
pop
xor
pop
add
inc
xchg
jo
push
sbb
mov
popf
pop
inc
xchg
fwait
sub
jecxz
lods
je
fisubs
into
fildll
cld
lcall
movsb
movsl
aaa
inc
sub
fwait
push
adc
cmpsl
out
sub
mov
or
mov
or
in
faddp
or
outsl
pop
dec
jae
dec
add
mov
cwtl
aas
xchg
fildll
push
push
cmp
ja
inc
add
rcr
pop
outsb
mov
push
shlb
loopne
mov
adc
shr
outsl
rclb
mov
test
cmc
arpl
jnp
sbb
subb
dec
and
push
ja
mov
mov
popf
daa
rcr
cmpsb
and
xor
lret
pusha
cli
addl
push
fdivs
iret
xor
pop
pushf
ret
cmp
movsb
bound
cmpsl
xor
sbb
in
sub
int
lea
aam
and
mov
xchg
addr16
and
adc
dec
loop
cmp
dec
mov
lods
lods
adc
fptan
in
hlt
pushf
jo
push
add
or
popa
dec
dec
popa
mov
pop
mov
mov
dec
xchg
in
pushl
int
in
cmp
in
add
pop
aad
icebp
repnz
sti
jle
dec
sbbl
sahf
ficompl
testl
pusha
dec
push
leave
jbe
mov
pop
das
mov
rclb
inc
shlb
pop
mov
or
sbb
pop
in
scas
mov
sub
in
das
data16
xor
inc
sar
inc
cmpsl
in
nop
xor
movsb
stos
insb
and
aas
stc
pop
shlb
mov
sub
push
xchg
push
mov
pusha
jns
push
cwtl
push
test
negb
in
xchg
hlt
push
outsb
int3
gs
mov
out
pop
jne
in
out
mov
nop
mov
mov
pop
pusha
dec
imul
into
cmp
leave
mov
aas
inc
mov
in
xchg
jecxz
pop
jp
inc
mov
xchg
nop
es
popf
fwait
ljmp
inc
loopne
cs
rorl
xchg
push
push
or
push
insb
mov
push
leave
cli
mov
pushf
out
lds
and
mov
iret
push
push
push
aad
mov
mov
loope
in
lods
xchg
arpl
je
nop
jmp
or
pop
in
cmc
inc
outsl
pop
lods
jbe
imul
lds
cmp
outsl
pop
int
jmp
sar
mov
jecxz
jl
cmp
mov
mov
outsb
adc
mov
movsl
loope
leave
adc
out
mov
cwtl
lock
mov
dec
jle
add
popa
ja
push
loope
sub
out
cmp
xor
add
ja
dec
mov
andl
in
sti
mov
jg
lods
pop
stc
push
call
xor
jb
cmpl
mov
or
lods
fwait
insb
fcoml
xlat
xchg
pop
dec
pop
push
sbb
popf
adc
inc
xor
iret
int
sbb
out
fcomip
push
loopne
fisubl
mov
pop
jmp
pushf
xchg
inc
imul
sbb
daa
jb
dec
or
mov
cmc
lcall
imul
jno
adc
xor
push
mov
ret
daa
pop
jne
test
mov
mov
int
push
dec
nop
stos
xchg
adc
data16
loop
stos
xchg
add
rorl
xlat
sub
fs
int
pop
js
xchg
sub
hlt
outsb
dec
add
mov
xchg
xor
jns
xchg
and
push
push
adc
pop
or
fstpt
pop
push
or
out
mov
add
jecxz
mov
lods
jecxz
jbe
bound
and
push
shlb
cli
in
fmul
daa
iret
ds
mov
ja
cmp
repz
jno
movsb
lret
jg
cwtl
jb
incl
mov
pop
sub
adc
lret
xor
popf
pop
add
cmpsb
call
sbb
xlat
prefetchwt1
out
and
xor
in
pushf
add
and
sbb
mov
mov
and
cmp
mov
mov
ljmp
js
rorl
loop
mov
inc
add
lods
mov
pop
push
xor
jae
push
pop
adc
ss
pop
pop
outsb
insb
stos
lcall
je,pt
inc
aad
inc
or
test
jmp
aam
outsb
fucomp
stc
add
lcall
mov
sbb
cmc
push
aam
arpl
test
push
and
add
fwait
rolb
lods
data16
push
xor
xchg
ss
lods
and
popa
mov
mov
arpl
in
in
shrb
movsl
inc
je
aam
lods
push
pop
or
xchg
mov
dec
pop
xchg
adc
fiaddl
dec
dec
out
mov
test
sub
xor
sahf
rolb
push
dec
mov
mov
mov
mov
loopne
mov
fsubrl
cli
int3
movl
outsb
xor
movsl
ja
inc
lods
cs
mov
out
mov
xchg
cmp
jns
cmpsb
aam
mov
lea
bnd
inc
imul
adc
cmp
loop
lret
mulb
or
push
test
cmp
leave
jae
test
cmp
ja
pop
insb
inc
inc
fs
adc
jg
dec
pop
pop
orl
mov
cwtl
xor
sbb
movsl
sbb
and
push
test
cmp
std
gs
sub
test
aad
cmpl
outsb
and
push
nop
rorl
nop
cmp
push
movsl
lcall
sti
jo
pop
pusha
push
jecxz
ds
xor
cmpsl
mov
cmp
inc
mov
stc
and
cld
data16
into
mov
cmpsl
jne
xchg
outsb
loope
scas
push
jg
sti
mov
enter
pop
enter
not
jl
outsl
push
cmc
mov
in
jno
xor
mov
mov
ja
incb
pop
jg
cmc
fisubrl
push
sbb
popf
mov
and
xor
mov
and
daa
inc
daa
std
xchg
pop
test
lcall
jo
movsl
lea
jne
jle
dec
xchg
adc
pop
cltd
and
mov
cmp
daa
xchg
das
btr
adc
addr16
mov
adc
xchg
sub
movsb
test
push
and
movsl
lahf
pop
xor
sub
jns
cmpsl
sarl
shll
cmp
das
lret
pop
shll
inc
mov
aas
out
stc
or
cli
add
jmp
fldt
jbe
cli
int
popa
pop
movsb
adc
push
lcall
ret
cmp
adc
out
xchg
mov
sbb
inc
jmp
rorb
and
out
sbb
mov
pop
in
test
mov
mov
stos
decl
stos
and
cmpsb
jmp
movsb
or
cli
loope
call
into
mov
inc
decl
jge
xchg
cwtl
adc
sub
jnp
pop
mov
fcoml
loope
mov
sub
movsb
mov
sub
mov
mov
xor
lock
insl
pop
cmp
cli
xchg
sti
int
adc
ret
lcall
and
daa
imul
inc
dec
xor
and
push
sbb
roll
or
test
pusha
push
push
mov
and
inc
push
mov
mov
pop
mov
adc
xchg
xor
andl
cmpsl
lret
add
addr16
cmp
test
int
dec
jge
mov
pop
pusha
xchg
xor
imul
rcrl
gs
mov
ja
inc
sub
lea
cld
in
xchg
pop
push
lds
cmp
sbb
push
or
bound
mov
dec
push
stos
sti
xor
stos
orl
bound
fistps
je
icebp
or
hlt
xchg
mov
cmpsl
das
ret
add
in
push
lds
iret
outsb
sbb
cli
jle
add
and
les
mov
rcl
repnz
shl
loope
ja
add
pop
jl
movsl
sysexit
jno
xchg
push
xchg
jl
sbb
push
xchg
aad
cs
aaa
aad
xor
dec
push
jae
in
add
lea
sbb
or
pusha
cs
add
pop
repz
cwtl
pushf
pushf
dec
adc
lock
gs
aaa
add
lret
arpl
in
xchg
adc
pop
jb
testl
lods
es
jne
sub
dec
and
out
ret
daa
mov
test
insb
add
sbb
lcall
scas
cmp
pop
xchg
push
aaa
lods
pop
sarl
sti
and
pop
sub
jmp
pop
push
xor
daa
in
push
push
rcl
mov
and
cmp
jecxz
fisubrs
hlt
xor
mov
icebp
adc
jo
test
add
sub
mov
hlt
mov
jmp
aam
jne
pusha
cld
jo
lods
or
lahf
mov
into
push
fs
push
cs
ret
mov
inc
lock
int
cmpsl
les
popa
xchg
mov
adc
stc
popa
mov
and
jl
std
testb
or
dec
cwtl
add
popa
jmp
jmp
jnp
lcall
insb
mov
mov
add
popa
cs
fwait
or
sbb
sbb
jbe
lds
shl
loope
xchg
sub
mov
sbb
ficomps
aas
push
ret
xor
pop
cli
adc
push
sbb
outsb
sub
push
mov
sub
xor
int
cli
add
cmpl
sti
inc
add
movsl
sbb
inc
push
push
inc
fucom
ds
insb
in
jb
shrl
dec
push
in
mov
popa
icebp
mov
das
scas
inc
cmpsl
mov
clc
aad
je
xchg
nop
pop
or
adc
js,pt
int
arpl
sbb
les
fwait
iret
jp
hlt
inc
mov
sub
mov
je
sarb
inc
pushf
jmp
test
pop
pop
movsb
ljmp
loopne
jl
pop
cmp
jmp
dec
push
inc
popl
sub
dec
mov
scas
pop
mov
adc
sub
jae
push
adc
clc
pop
cmp
mov
enter
and
pop
ss
add
or
pop
push
pop
sbb
push
lea
jnp
in
xor
inc
mov
icebp
imul
push
shrb
inc
repnz
arpl
scas
cmc
rcrb
and
dec
jo
test
cld
add
mov
mov
adc
lds
dec
cli
cmp
mov
dec
jae
dec
test
cli
rol
in
cmp
int3
or
or
jl
dec
sti
out
sarl
jmp
xchg
es
popa
arpl
or
jo
push
pop
mov
std
movsl
cli
mov
or
mov
xor
rorb
lock
shlb
add
cmp
sub
cltd
cltd
out
inc
les
outsl
push
pop
mov
enter
xor
icebp
xor
jge
push
inc
mov
push
inc
clc
sub
fs
push
je
pusha
repnz
pusha
jae
test
sbb
pop
pop
cmp
dec
gs
mov
clc
dec
pop
add
sbbb
xchg
dec
adc
pop
shll
in
sub
daa
sqrtps
push
in
popf
rcl
lea
push
xchg
lret
push
push
jle
repnz
add
mov
jg
gs
mov
inc
js
js
fbld
or
xor
stos
fcomip
and
data16
insl
call
add
pop
repnz
jnp
rcll
mov
fistps
jle
filds
loopne
mov
sbb
cmp
or
add
aad
adc
pop
and
dec
iret
push
jmp
into
push
mov
aaa
xchg
xor
fcom
cld
scas
mov
popw
inc
cld
push
out
push
pop
sub
in
cld
scas
lods
push
jnp
shrl
nop
pusha
negl
xlat
pop
xor
sub
jle
mov
lcall
push
scas
sub
sub
out
sbb
xchg
inc
into
or
stos
xor
and
div
stc
rcrb
push
test
fisttpl
cmp
jl
xchg
out
out
sub
lods
lret
hlt
ja
jns
nop
clc
push
cmp
repnz
nop
add
push
cmpsl
shl
popa
pop
je,pn
in
xorl
push
adc
cs
and
iret
rep
imul
call
bound
in
movsl
cmp
incb
call
adc
jecxz
mov
xchg
das
sahf
mov
lock
xchg
adc
mov
or
inc
dec
push
data16
and
push
mov
jns
pop
scas
mov
mov
add
push
adc
xchg
pmulhuw
fs
out
lret
sti
sti
inc
add
mov
std
inc
jo
pop
int
dec
rcrl
mov
and
cli
cld
mov
xor
sub
sub
lret
daa
xchg
fdivrl
pusha
mov
xchg
xor
xchg
add
push
fistl
jnp
in
add
sar
test
and
lret
and
adc
loope
out
xor
or
mov
out
sub
mulb
xor
pop
sbbb
mov
adc
mov
cmpsb
aad
ds
pop
pop
jae
fisttpll
fldcw
xchg
pop
aad
rorb
push
xchg
sbbb
jp
int
sbb
sbb
push
fdivs
pop
test
dec
cli
fidivrs
pop
or
mov
pop
std
sti
inc
repz
int
xor
mov
je
fdivl
testl
cld
adc
pusha
pop
lret
andb
mov
stos
out
cmp
cmp
sahf
les
bound
iret
orl
outsl
jns
test
outsb
lahf
xchg
xchg
imul
scas
mov
pop
ds
mov
mov
inc
pop
bound
inc
popa
add
mov
pop
and
mov
adc
insb
or
mov
fistps
test
insb
xor
insl
sbb
mov
jge
cmp
jae
xor
or
or
dec
lds
dec
push
addr16
jmp
lahf
jle
mov
inc
xchg
xor
je
nop
rorb
pop
push
ss
dec
ljmp
fwait
in
js
mov
pop
push
cmp
push
inc
aad
mov
mov
outsl
pop
lock
notl
bound
jb
mov
cmc
dec
ret
js
push
inc
mov
or
or
xor
lods
add
inc
ret
adc
cmc
mov
jg
les
fisubrs
add
inc
pop
inc
and
jae
xor
fadd
pop
mov
loopne
adc
mov
jo
adc
ds
leave
dec
dec
shrb
mov
adc
int
or
mov
data16
test
adc
mov
pop
add
and
or
mov
cmp
add
call
pop
aam
fldl
and
test
pop
sub
or
inc
xor
push
xorb
push
mov
adc
rcrl
push
cmp
sarb
ret
scas
jle
fdivrs
push
fistps
pop
clc
mov
pop
out
jb,pt
dec
fwait
and
nop
mov
xchg
loop
inc
inc
sbb
shrb
pop
mov
mov
pop
pop
mov
push
dec
mov
ret
sub
clc
add
lcall
hlt
dec
popf
lea
inc
cmp
mov
aas
inc
fimuls
push
push
subl
scas
jne
into
cld
data16
lods
and
inc
lods
rcrl
ret
add
shll
sbb
arpl
xor
xlat
mov
in
mov
pop
mov
pop
test
push
cltd
pop
cmp
lret
adc
pop
cmpsl
sbb
mov
dec
xchg
push
fiaddl
loopne
add
or
dec
mov
push
out
stc
repnz
lret
and
push
mov
dec
mov
mov
mov
ja
mov
fdivr
mov
stos
test
jno
scas
cs
add
xor
add
imul
clc
jae
fidivrs
and
mov
and
mov
xchg
dec
xlat
test
cld
mov
cld
ss
rorb
push
mov
dec
repnz
sahf
gs
gs
aad
and
sub
imul
scas
andb
pop
test
pop
test
aam
cmp
adc
aad
sbb
aad
pop
inc
xchg
test
andb
mul
mov
fst
lret
sti
loopne
or
adc
popa
stc
and
jecxz
push
mov
sti
inc
fwait
jns
inc
aam
jb
stos
jb
icebp
pop
and
or
mov
mov
pop
dec
out
inc
and
in
roll
vmovd
cmp
jo
out
mov
inc
sbb
fdivp
aad
pop
dec
cmp
push
jle
nop
adc
mov
add
test
cmp
dec
aas
stos
stc
adc
scas
xchg
mov
mov
outsb
pushf
sahf
xor
js
icebp
mov
cmc
rcll
jg
mov
enter
test
les
mov
push
out
lods
pop
jae
cmp
orl
and
mov
xchg
lea
cli
mov
mov
loope
inc
cmp
mov
xlat
mov
insl
les
icebp
mov
call
mov
in
add
cwtl
ret
fs
pop
xor
lods
cmp
pop
adc
mov
jnp
pop
movsb
xchg
rorl
or
aad
xlat
xchg
sub
lahf
lods
jl
adc
sbb
sti
sbb
lret
cmp
fld
outsb
dec
xor
sbb
mov
mov
inc
adc
mov
mov
arpl
arpl
fdivr
outsb
sarb
jo
mov
xlat
adc
inc
js
mov
out
out
imul
xor
mov
test
push
xor
mov
pop
dec
add
cmpsl
js
adc
aad
dec
jle
iret
xchg
das
hlt
sbb
mov
mov
iret
mov
int
add
mov
mov
out
jl
in
sub
and
mov
addr16
push
cmovle
jle
rcrb
cmpsb
sub
or
movsl
add
jmp
adc
sub
push
fldt
je
mov
cwtl
int3
or
repnz
xchg
in
lods
movsl
or
stos
jmp
xchg
ljmp
inc
movsl
xor
div
stos
push
push
int
sub
dec
inc
jmp
mov
xchg
pop
jno
push
arpl
std
dec
or
rcll
and
jp
fisttps
or
jmp
hlt
jne
jns
jns
mov
cld
xchg
sub
push
jbe
and
jmp
das
out
cltd
scas
mov
add
and
adc
jne
push
inc
out
clc
and
mov
test
sub
add
adc
mov
adc
jns
js
dec
inc
ja
push
push
mov
imul
test
xlat
fs
loopne
sub
inc
mov
adc
in
add
xchg
stc
rcpps
lea
out
xchg
inc
xor
and
rcl
hlt
dec
push
pop
faddl
push
loopne
mov
mov
stos
cmp
outsl
mov
gs
gs
xchg
test
jl
divl
hlt
int
or
aad
mov
repz
into
insb
sahf
mov
mov
std
fsub
cmp
dec
mov
or
in
mov
pop
xchg
pop
pop
xor
movsb
push
int
pushf
hlt
subb
js
mov
adc
push
inc
mov
int
jb
or
jns
pop
mov
outsl
aad
pop
mov
mov
sbb
ret
mov
pop
cmp
pop
inc
aad
pop
jmp
ljmp
rorl
int3
xor
call
inc
movsb
and
sub
adc
sub
push
lock
mov
in
fsts
dec
call
or
or
inc
jecxz
fwait
mov
inc
jge
pop
fcomip
jge
cmp
mov
lret
mov
add
mov
gs
in
lcall
mov
mov
sahf
insl
jmp
imul
out
mov
and
mov
aaa
and
clc
push
add
adc
fistl
mov
fabs
fs
mov
xchg
test
loope
aad
leave
xchg
cmp
ss
xlat
insb
mov
dec
xchg
jecxz
dec
subw
sti
push
mov
pop
sub
lahf
stos
cwtl
ret
xchg
mov
nop
cmp
loop
cmp
xor
out
mov
fldenv
xchg
adc
push
push
jne
cmp
sahf
cmp
pop
add
pop
gs
mov
bound
cmp
and
scas
es
pusha
sbb
and
sub
lret
mov
push
sahf
push
xchg
cmp
in
jle
das
out
add
fwait
test
cmp
scas
inc
jmp
jns
sahf
add
iret
popf
roll
jecxz
or
sbb
lahf
dec
jecxz
pushf
jae
subl
aam
xchg
leave
and
lods
loop
or
inc
test
test
cmp
push
mov
test
scas
add
aad
pop
fists
push
out
decl
dec
and
jae
scas
sbb
shll
push
outsl
rclb
call
js
push
fwait
pop
push
cld
and
sub
outsl
dec
shll
mov
bound
jl
ss
xor
lcall
ljmp
les
rcll
fldt
push
adc
mov
sbb
rcrl
jg
adc
push
or
repnz
sarl
inc
ljmp
lea
lods
cmp
faddl
mov
inc
mov
inc
mov
xorb
cmp
inc
movb
movsl
mov
xchg
cmp
mov
mov
sbb
mov
fs
jge
rcrl
and
mov
push
daa
push
jno
adc
hlt
mov
and
stc
push
hlt
adc
pusha
fbstp
xorl
in
enter
sbb
int3
xor
push
or
cmp
gs
jmp
mov
adc
pushf
adc
pusha
rol
dec
cwtl
mov
andb
lret
jnp
lods
push
sbb
sbb
push
xor
cld
push
jae
jne
xchg
or
ds
dec
scas
jae
rcl
mov
pop
lds
sub
repz
sub
fs
pop
inc
pop
mov
rol
sbb
add
pusha
jno
jg
and
dec
mov
repnz
xor
push
aad
jle
repnz
pop
xor
sub
jns
sbb
mov
popa
iret
mov
adc
lahf
daa
pop
sub
lret
mov
rolb
and
lret
xor
inc
repz
xor
xor
and
clc
xchg
bound
inc
ss
stc
test
dec
sub
pusha
jno
mov
hlt
mov
aam
int3
sub
loopne
dec
cld
push
or
or
pop
mov
sub
inc
stc
jae
scas
dec
nop
int
int
xchg
inc
mov
lds
push
stos
push
jle
cld
or
lcall
inc
ret
sbb
outsl
das
aaa
dec
mov
pop
add
push
mov
mov
aam
in
sbb
imul
xchg
mov
and
fnsave
fcmovu
mov
arpl
mov
int
xchg
iret
aas
leave
subl
rcll
outsl
add
or
jg
adc
lret
jns
mov
ja
nop
xchg
lret
sub
subl
cs
mov
repz
mov
call
adc
xchg
xchg
dec
leave
sub
stos
popf
movsl
daa
icebp
mov
and
fsub
sbb
sti
cld
sti
filds
fmuls
lahf
sbb
cmp
jmp
lock
mov
cli
mov
xchg
stos
inc
pop
andl
fmull
push
mov
add
jbe
inc
push
add
push
add
jmp
xchg
aas
lock
or
jle,pt
push
mov
mov
pop
out
jnp
decb
andb
and
scas
xchg
shlb
leave
xchg
popa
lods
rorl
data16
aad
cmp
minps
cmp
jecxz
out
cltd
cmpb
jle
cltd
cs
and
dec
xchg
xchg
aas
aas
lcall
ret
or
mov
inc
dec
out
add
inc
and
outsb
mov
dec
pop
cltd
jmp
mov
movsl
gs
rclb
jge
sub
in
mov
pop
scas
or
lds
xchg
shrb
xlat
lea
loopne
and
add
ljmp
int
lret
pop
sub
push
hlt
add
dec
mov
divl
insb
push
out
into
les
xchg
sbb
pop
sbb
fdivp
mov
xchg
inc
cmc
bound
xchg
es
mov
stc
dec
pushf
inc
int
out
sub
loope
cmpl
aam
jno
pop
jae
fisttpl
lea
or
stc
outsl
jmp
lock
lcall
pop
inc
ret
push
pusha
mov
jg
std
and
mov
fistl
jl
arpl
xor
and
outsb
jns
push
out
jne
icebp
or
stos
retw
mov
and
repnz
jnp
hlt
je
ret
andb
movl
int
stos
lret
lret
lods
hlt
or
pop
sti
lods
xchg
jbe
sub
sub
mov
lcall
add
mov
mov
ret
jae
fwait
xchg
fimuls
arpl
loope
pop
cmc
sbb
sahf
pop
add
jge
sub
mov
lock
div
cvtpi2ps
test
adc
and
jbe
das
cwtl
pop
xor
scas
sbb
mov
loop
xchg
mov
inc
push
shll
or
jns
lret
xor
sub
and
mov
je
ret
xchg
cld
es
andb
test
in
sub
xor
push
sarl
add
outsb
lods
insb
mov
out
sub
bound
ret
push
lock
pop
je
mov
ret
jmp
mov
fadd
out
js
jae
mov
sarl
mov
fmull
lahf
enter
mov
mov
or
notb
xrelease
cs
pop
ljmp
aam
leave
mov
mov
jns
mov
push
mov
enter
enter
mov
lret
loopne
test
xor
test
icebp
lea
xchg
mov
fsubs
outsl
out
mov
jecxz
std
lea
inc
add
mov
fstpt
jp
inc
mov
in
and
mov
sahf
std
sbb
std
insl
mov
jle
popf
pop
icebp
push
scas
call
cmp
or
sarl
sub
pusha
sbb
push
lahf
push
orl
cmpsl
and
es
mov
cmpsl
ljmp
lea
mov
jg
mov
add
in
iret
adc
es
mov
imul
mov
test
pop
loope
jge
int
aad
xor
xorb
test
push
jmp
idivb
pop
xor
test
jo
movsl
leave
leave
add
sahf
fcomp
into
jno
fidivl
aam
daa
xlat
jl
jmp
jge
arpl
insb
fdivl
es
or
sbb
or
dec
in
sub
jne
into
push
sarb
lea
scas
dec
inc
mov
or
sub
lea
repnz
jmp
inc
lea
cwtl
or
xor
cmpsb
push
or
stos
add
fdivrl
jge
icebp
xchg
jecxz
lea
subl
jge
mov
sub
jae
xchg
mov
inc
inc
mov
pop
adc
xlat
cs
lods
jne
inc
movzwl
sbb
or
mov
gs
aad
mov
mov
arpl
hlt
pop
mov
xor
mov
and
loope
mov
sbb
jno
xchg
jae
dec
inc
lahf
in
push
fdivrp
fwait
or
mov
inc
adc
clc
ja
je
pusha
and
out
add
fimuls
mov
push
aad
out
cmp
cwtl
adc
mov
cwtl
push
jl
or
add
iret
push
imul
pop
pop
sbb
push
mov
movsb
mov
sbb
dec
xlat
push
adc
push
shr
mov
clc
push
add
sbb
sti
das
stos
ds
sub
les
repnz
cmc
xchg
sub
jae
rcll
sbb
shlb
mov
push
fadds
add
pop
enter
pop
xchg
or
xor
dec
leave
sub
adc
test
add
lea
adc
pop
mov
inc
pop
pop
adc
mov
in
insl
les
pop
push
mov
scas
or
pop
dec
mov
in
mov
and
mov
jo
insb
sbbl
xor
ss
push
jle
xor
and
xor
sahf
test
add
mov
cmp
dec
cmp
inc
push
outsl
ds
scas
mov
adc
inc
les
mov
mov
lods
push
dec
repz
and
pop
loop
bound
mov
xchg
scas
insl
and
into
shll
shlb
sub
inc
push
add
data16
jae
xor
in
test
push
ret
jg
mov
sbb
aad
testl
cmpsl
outsl
movsl
aad
in
pop
aam
jle
inc
adc
and
xor
mov
mov
mov
jle
fsubr
mov
adc
test
xor
js
xor
pop
jp
aaa
bnd
sub
mov
sub
mov
addl
scas
in
jno
imulb
nop
push
jg
cmp
inc
and
fs
xchg
xor
inc
ljmp
push
lret
mov
cmp
or
je
mov
xor
mov
fs
fimull
or
movsb
adc
int3
decb
add
mov
je
outsb
or
adc
jne
inc
jge
xor
repnz
loopne
sbb
hlt
mov
dec
jno
pop
lods
enter
movb
mov
test
dec
adc
fnstcw
and
clc
mov
xchg
ss
cmpsb
andl
negb
dec
cmp
and
inc
popa
inc
mov
cmp
add
and
adc
out
jecxz
or
mov
fsubl
pop
cli
or
in
sbb
xchg
sbb
mov
mov
pushf
push
out
iret
jb
dec
dec
lds
fdivrl
xor
ds
clc
mov
dec
mov
outsw
outsb
push
xchg
das
cmp
mov
pop
cs
pushf
stos
add
dec
bound
jecxz
and
pop
sub
call
mov
sub
or
sub
xchg
rcl
xchg
adc
cld
icebp
jmp
outsl
cmpsl
or
push
in
loop
in
pusha
jno
shlb
scas
stos
rcrb
fisubl
pop
push
sti
inc
cmp
push
pause
outsl
out
idiv
in
pop
adc
xchg
sbb
mov
jnp
imul
mov
jp
aaa
jno
cli
popf
or
mov
xor
mov
dec
push
xchg
inc
jbe
sbb
rorl
pop
fidivrs
push
icebp
mov
mov
or
lret
lahf
insb
aaa
mov
insb
xchg
add
sarl
jo
shl
fisubrs
mov
insb
mov
mov
gs
pushf
jnp
mov
mov
jne
ljmp
xchg
cmp
xchg
mov
mov
fs
xchg
xchg
xchg
push
dec
pop
ss
mov
insl
cld
test
xchg
shl
and
mov
ret
jmp
sub
movsl
jbe
mov
sub
movsb
mov
dec
fdivs
fistl
repz
xchg
sub
add
fs
sub
gs
mov
test
adc
push
push
rclb
clc
cmp
popa
jne
lds
rcll
test
inc
loopne
add
iret
cmpsl
pop
or
add
push
lcall
je
and
loopne
popa
inc
add
inc
inc
jne
pop
sub
lods
and
sub
ret
outsb
inc
push
adc
jle
mov
jo
sub
pop
pop
shll
shr
stc
jmp
jae
dec
pop
pop
xchg
pop
add
jb
aad
sbb
mov
dec
fstps
cmp
mov
or
pop
leave
sbb
nop
mov
pop
inc
push
push
ds
mov
pushl
mov
out
push
mov
ss
std
icebp
cmp
nop
movsl
mov
stos
mov
lds
imull
lea
xchg
xchg
mov
xor
loopne
aad
lcall
sbb
sbb
push
jmp
lock
or
outsl
pop
movsb
into
in
mov
movsl
popa
lock
sub
xor
loope
imul
lahf
dec
inc
or
inc
jae
repz
popa
inc
loop
pop
cmpsl
in
scas
xchg
data16
pop
dec
dec
insb
and
fmuls
mov
inc
jmp
ret
or
ret
push
jbe
int
mov
out
ret
cs
inc
pop
pop
and
scas
es
mov
or
ljmp
mov
pop
inc
clc
dec
cmpsl
incl
orl
cs
xchg
sub
mov
iret
stos
adc
or
jge
jmp
jnp
push
shl
sbb
pop
imul
xor
xchg
xor
scas
xor
push
ja
mov
jno
mov
les
in
mov
and
pop
pop
add
sbbl
xor
adc
call
fcmovnb
inc
neg
aad
adc
xchg
sti
xorb
cli
add
inc
sbb
inc
test
mov
or
pusha
jns
ss
sbb
mov
mov
push
loop
in
insb
cli
stos
arpl
sub
roll
or
inc
xchg
lock
fdivp
outsl
xchg
aas
daa
push
mov
scas
out
pop
mov
pop
inc
pop
ret
sub
fnstenv
cmp
ja
jge
pop
aam
mov
shl
mov
jle
adc
das
push
fcmovbe
lret
out
into
test
add
aas
movsb
ds
sub
jmp
inc
das
sub
js
repnz
shlb
cmp
imul
pop
cmp
mov
jbe
jmp
pop
mov
sub
mov
test
imul
mov
out
mov
pop
je
xlat
pop
movsl
out
mov
pop
lods
push
jmp
pop
jae
add
mov
fnsave
aam
pop
cmp
out
or
clc
cli
icebp
add
xchg
dec
mov
xor
xor
jg
or
jl
loop
or
sti
cld
int
ret
jb
mov
mov
test
jle
fsubp
jno
push
les
lret
scas
nop
adc
div
jl
sub
or
xchg
xchg
push
adc
lret
aas
add
cld
mov
pop
pop
lods
jmp
das
add
cmc
test
data16
xchg
adc
sub
out
cmp
sub
mov
or
ret
sub
addr16
mov
cmp
lret
and
jae
pusha
jmp
pop
cmp
jbe
xor
mov
sub
arpl
push
fwait
xor
jbe
mov
or
rorl
push
movsl
ret
lods
les
mov
cmp
push
fstpt
shr
movsl
or
dec
add
cmc
dec
clc
adcb
ds
fcmovb
xchg
sahf
push
ja
je
pop
shrl
xchg
loopne
stos
cmp
xchg
out
dec
popa
ss
lock
dec
sarl
push
push
xor
gs
or
mov
out
addr16
stc
roll
xchg
mov
lds
ficoms
gs
adc
push
loope
inc
popa
mov
decb
push
int
ljmp
push
sbb
jmp
xor
ljmp
xchg
push
les
mov
test
std
push
movsb
mov
orb
sub
and
dec
fs
lcall
rcrl
sub
jae
ljmp
mov
inc
pop
push
shll
mov
repnz
sahf
add
mov
iret
sub
sbb
loopne
and
movsb
mov
push
test
mov
icebp
sbb
in
inc
push
mov
int3
add
mov
sub
mov
dec
aad
gs
or
dec
inc
daa
rcll
imul
mov
pop
cmpsl
sub
xchg
pop
nop
into
mov
outsl
mov
sbb
pop
mov
push
mov
jl
call
aam
or
test
insl
sti
mov
stos
xchg
adcl
jo
mov
int
jmp
cld
js
test
sahf
insl
stos
repz
andl
fidivrl
nop
psraw
jmp
jmp
ror
psraw
xchg
push
iret
mov
jge
arpl
inc
addr16
scas
and
xor
lahf
sbb
jp
ljmp
arpl
adc
leave
out
lock
mov
mov
int
cs
mov
pushf
mov
rol
pop
fs
sbb
jbe
dec
mov
pop
lret
add
mov
fmul
xchg
mov
in
test
push
pop
mov
mov
cmc
cli
ret
es
test
clc
mov
or
inc
arpl
fnstcw
cmp
jnp
lcall
push
push
inc
int3
out
loope
inc
mov
and
sub
inc
aad
pop
push
and
imul
adc
dec
or
jp
clc
hlt
fmuls
xchg
movsb
inc
jo
sbb
sub
cmp
dec
xchg
in
outsb
loope
pmaxub
aam
push
dec
mov
mov
mov
fldl
bound
lods
fisttps
loope
sub
pop
xchg
sub
fdivrs
stos
je
push
test
shll
leave
inc
leave
or
aad
popf
and
call
jae
andl
mov
std
inc
inc
out
sbb
xor
push
adc
fwait
add
ret
xchg
mov
pop
cmpsb
es
mov
test
inc
rcrb
loopne
mov
or
xor
outsb
sub
fisttpll
push
mov
cmpsb
cmp
pop
jecxz
add
repz
or
std
and
push
xchg
and
and
xchg
ret
in
xor
sbb
addb
dec
std
mov
xchg
cmp
mov
testb
gs
ljmp
subl
in
cmp
fstpt
sub
jmp
fisubl
mov
aas
and
in
out
roll
iret
pushl
adc
add
repnz
cli
inc
xchg
dec
ret
cmp
sbb
jbe
push
lcall
hlt
ret
xchg
in
mov
sbb
cmpsl
jg
ret
movsl
inc
cmpb
jp
cmp
fsubs
into
repnz
add
jns
xchg
lahf
mov
in
into
fstpl
push
push
and
adcb
das
loop
or
inc
cmp
test
pop
shlb
call
loopne
aam
popa
sub
mov
sahf
orl
jle
test
fildll
das
jnp
lahf
int3
mov
pushf
sub
inc
int3
popa
jmp
je
pop
mov
lea
int3
sbb
iret
stos
test
loopne
sbb
ret
iret
in
pop
mov
xchg
stos
pop
mov
xchg
mov
pop
jns
movsl
cmpsl
test
lret
mov
outsb
xchg
xchg
scas
clc
das
outsl
into
arpl
pushf
mov
add
jp
daa
cmpsb
jno
inc
add
enter
jbe
mov
or
popa
sahf
xchg
push
pop
divl
add
mov
mov
inc
cltd
cmp
testb
sub
xchg
je
pop
dec
mov
aaa
jb
and
aaa
leave
and
repnz
adc
jg
adc
sub
test
fisubrl
xor
loop
shlb
dec
adc
pop
mov
push
or
fildll
lahf
loope
mov
pop
inc
xchg
dec
ss
mov
dec
sub
loop
mov
and
mov
pop
cmpsb
cwtl
sbb
inc
stos
jmp
in
push
cld
push
add
sub
jecxz
out
aaa
xor
ss
push
imul
push
inc
jle
pop
sbb
add
push
outsl
pop
pusha
inc
cmp
mov
dec
stos
popf
jae
pop
sub
mov
xor
nop
add
mov
xor
dec
xchg
sub
daa
rorl
mov
jge
pminsw
mov
sarb
dec
lahf
add
xchg
sti
push
sarb
arpl
js
mov
pop
sub
aas
inc
cmp
leave
lea
mov
es
add
pusha
mov
lods
push
pop
ja
add
flds
mov
push
cli
adc
cmc
adc
fbld
ljmp
fmuls
sti
rolb
and
xchg
or
sub
jno
jae
sti
jmp
shlb
add
sub
out
adc
dec
adc
mov
test
insl
in
adc
lcall
mov
daa
test
fcmovnu
pop
mov
xor
cmpsb
out
cmp
inc
fcomps
mov
push
xchg
enter
out
pop
mov
mov
pop
cs
adc
cmpsl
mov
test
cltd
cld
mov
xor
xchg
in
inc
int
loopne
js
inc
mov
adc
xchg
or
jg
sub
pop
and
pushf
pop
xchg
outsl
mov
in
xchg
xchg
sbb
or
mov
movsl
dec
les
test
adc
sub
ljmp
inc
push
lock
fstps
cld
sbb
fstpt
sbb
push
adc
daa
lods
adcl
xor
int
not
fdivl
or
fdivs
adc
pop
incl
movsl
scas
test
dec
ljmp
outsb
xor
xor
xchg
cmc
add
mov
dec
jb
popf
sbb
lds
push
shlb
sub
std
sbb
fs
or
mov
nop
aad
xchg
stc
sahf
mov
jae
push
cmp
call
clc
and
add
rcr
add
bound
clc
push
das
ss
xchg
xchg
jbe
divl
pop
lret
clc
xchg
imul
in
jno
enter
enter
sahf
inc
loopne
das
xor
or
mov
add
or
mov
and
cwtl
jp
outsl
sarl
sbb
add
sbb
xchg
inc
xor
xchg
test
xorl
or
dec
and
jne
pop
or
mov
out
xor
adc
jno
fistl
mov
xlat
testb
loopne
hlt
pusha
pop
mov
sbb
pop
or
in
test
inc
mov
dec
punpckhbw
pop
xor
mov
sarb
push
add
mov
xorb
loope
push
or
popa
out
cli
shl
and
fidivrl
cmpsl
scas
shll
mov
bound
aas
mov
xchg
in
shlb
mov
mov
insl
iret
roll
lcall
es
hlt
fst
jns
push
inc
fstp
pushf
mov
into
cmp
scas
nop
sarl
push
mov
push
dec
les
subb
imul
mov
aam
std
pop
pop
rclb
push
jo
movsl
ret
shrl
add
outsb
stos
or
cmpsl
addr16
jecxz
sbbl
sub
inc
sbb
mov
adc
sub
out
stos
or
pop
cmpsl
loopne
sahf
jecxz
inc
xor
mov
cs
adc
jb
or
orl
xchg
pusha
lret
adc
mov
hlt
repnz
in
xor
xchg
bound
xadd
xorb
lcall
sbbb
cmp
push
scas
dec
mov
inc
lods
sub
ja
jp
sbb
sub
imul
xor
mov
pusha
cld
mov
mov
test
pop
sub
xor
inc
xor
jge
leave
je
mov
adcb
lds
iret
inc
push
rorl
cltd
or
cmp
add
enter
leave
shrl
jae
pop
xchg
aaa
fst
imul
mov
jge
lds
push
push
inc
jecxz
sub
or
or
lods
into
adc
fistpl
dec
cs
add
cld
mov
sahf
movsl
ret
jmp
inc
pop
icebp
mov
mov
push
adc
dec
mov
sbb
stc
or
mov
push
xlat
push
sbbb
push
adcb
das
clc
hlt
inc
daa
movsb
repnz
push
sahf
push
test
cmp
arpl
inc
in
aam
mov
fldl
sub
int
cld
mov
inc
inc
clc
pushf
pop
movsl
out
sarb
xlat
fnstsw
push
test
sbb
inc
mov
and
inc
xchg
mov
add
sti
ja
xchg
std
dec
jmp
stos
mov
cmc
popa
fsts
leave
or
in
outsl
xchg
andb
add
ja
mov
or
iret
dec
mov
les
push
pop
fstp
mov
jmp
mov
push
loopne
pusha
and
mov
adc
imul
or
shr
mov
in
or
aam
imul
xchg
fwait
cli
pop
mov
push
outsl
lahf
mov
mov
scas
cmp
pop
scas
cli
out
xchg
xchg
pop
cmp
xchg
mov
mov
push
stos
fcomp
dec
mov
push
out
jne
adc
xor
mulb
pop
nop
pop
dec
enter
xchg
dec
push
int3
xor
js
fcomps
xchg
clc
dec
fistpll
jns
pop
fiaddl
jnp
insb
push
jno
or
cmp
inc
cmc
or
inc
dec
sub
adc
xor
cmp
test
daa
push
push
jg
dec
les
rol
ljmp
out
sbb
add
cmp
into
adc
jbe
cltd
xchg
add
pop
call
xchg
or
sub
neg
and
outsb
xchg
dec
sbb
cmp
or
pop
sub
xchg
push
inc
out
and
and
mov
mov
dec
shlb
inc
sti
or
fidivrs
and
popa
fs
cmp
aad
or
jne
daa
repnz
cmp
fmuls
xchg
leave
jge
pop
pop
mov
sbb
subl
clc
cmp
ret
cwtl
outsl
adc
test
add
inc
ret
xor
fdivl
mov
xor
jmp
mov
add
mov
punpcklwd
dec
or
les
jle
mov
repz
mov
sub
lods
inc
add
jge
mov
cmp
push
in
mov
cmp
pop
sub
mov
and
int
int3
mov
test
push
mov
lea
push
cmpsb
cld
push
out
dec
inc
lds
shlb
stc
mov
lods
xlat
push
enter
jae
outsl
out
aam
xchg
cmp
leave
icebp
lock
cmc
mov
dec
sbb
and
into
insl
push
ss
or
jbe
sbb
rolb
cmp
sub
subl
dec
pop
push
insb
ja
push
call
imul
shrl
sbb
test
dec
loopne
es
scas
mov
xor
dec
adc
cmp
mov
mul
out
xchg
loopne
and
loopne
insb
arpl
in
xchg
sahf
lods
mov
gs
popf
sbb
sahf
repz
or
daa
dec
push
psrlw
imul
jl
stc
dec
cmpl
and
mov
frstor
xchg
out
cmc
or
movsb
and
shll
fistps
xchg
lret
fdivrl
stos
int3
and
jb
push
xchg
in
mov
mov
clc
stos
push
mov
dec
shr
jb
mov
mov
mov
out
sub
insl
jmp
sbb
sub
cmp
cmp
shrb
lock
faddp
sub
pop
loop
leave
mov
push
imul
pusha
and
mov
cmpsb
stc
ss
out
scas
sub
cmp
stos
xor
cmp
fists
push
mov
cmc
push
cmp
je
cld
out
push
dec
enter
negl
in
sti
aas
push
and
jge
out
inc
cwtl
push
adc
std
imul
mov
aas
xor
mov
and
int
enter
add
orb
ljmp
inc
mov
fwait
lret
nop
bound
lret
repz
ss
lcall
pusha
jg
fsubs
pushf
jb
jp
fwait
sub
xchg
arpl
ljmp
stos
cwtl
xchg
leave
out
mov
jo
loopne
dec
in
jp
loope
dec
fistps
dec
or
inc
out
arpl
mov
push
xor
out
mov
pop
lret
sub
xor
cld
ret
mov
push
mov
adc
shrl
cmp
insb
pop
sbb
rorl
jg
sbb
ret
xchg
pushf
mov
xchg
pop
cmp
je
mov
xchg
add
mov
fistl
jmp
sub
cmpb
inc
dec
lahf
out
xor
sub
dec
xchg
push
mov
sbb
sub
mov
data16
or
ret
push
jne
xchg
das
cmp
adc
pop
jae
loope
adcl
imul
leave
cmp
mov
or
xor
mov
fsubs
mov
push
int
sub
nop
sbb
in
xor
mov
adc
xchg
enter
jle
pop
popf
or
ret
pop
aaa
xor
daa
jae
test
mov
movsb
imul
imul
adc
dec
ja
pop
pushl
add
pop
pop
xchg
pop
out
call
cmc
cltd
pop
negb
adcb
cmpl
push
test
insl
int
js
insl
mov
clc
stc
jo
loopne
in
hlt
inc
jle
push
dec
dec
push
add
fcoms
push
cmp
and
rorl
shll
xchg
push
js
pop
out
lret
rorl
mov
lods
cmp
xchg
push
jmp
out
xor
sbbl
fmull
negb
sub
or
cmpsw
fs
push
test
add
pusha
in
pop
outsb
sti
mov
ja
out
inc
mov
ds
stos
addr16
mov
jp
fidivs
scas
push
repnz
outsl
pop
pop
call
add
and
dec
or
add
pminub
jbe
pop
pop
hlt
or
dec
std
pushf
pop
xchg
adc
sbb
xor
mov
das
mov
sbb
adc
insb
sub
cwtl
xchg
clc
mov
sbb
xor
sub
mov
or
mov
outsl
cmpsb
pop
adcb
cmc
mov
pop
mov
adc
jno
outsl
dec
roll
iret
adc
mov
repnz
outsb
and
daa
adcl
call
rorb
push
stos
mov
mov
dec
sub
push
sbbb
cltd
je
mov
push
icebp
shr
push
lods
dec
hlt
fmul
mov
lcall
inc
int3
lcall
cs
push
xor
sahf
pop
leave
decl
sbb
mov
and
enter
mov
add
stos
add
sbb
jmp
cwtl
ljmp
lret
xlat
dec
cmp
gs
jae
insb
mov
das
cs
xchg
inc
lea
mull
into
popf
adc
xlat
call
test
sub
adc
inc
jl
and
fwait
mov
movsb
es
adc
jge
jl
aam
pop
popf
pop
dec
into
push
dec
dec
sbb
xchg
pop
mov
aas
scas
and
lcall
orb
movl
ja
xlat
test
daa
orl
xlat
xchg
movsb
ss
cwtl
sbb
pop
lods
xchg
inc
cmc
stos
fldcw
frstor
lcall
mov
call
mov
inc
push
xor
mov
cmpb
ja
nop
pop
sub
outsl
pop
mov
mov
adc
data16
mov
push
mov
fists
jg
jb
pop
push
sbb
mov
cmc
fwait
xchg
lahf
sub
rcrl
ss
mov
cmp
push
addr16
xlat
nop
mov
test
into
in
push
fcoml
xchg
pop
xor
in
aad
inc
jle
jmp
adc
mov
mov
mov
push
cld
and
cmp
add
cmp
cmpsb
jl
cs
ret
push
jns
dec
mov
mov
outsb
cmpl
xor
cmpsl
pop
xchg
jb
sbbb
cmp
pop
clc
je
jnp
lds
push
cmp
arpl
ficoml
andl
mov
add
loope
push
or
xor
rcrl
mov
pushf
jmp
inc
and
jp
call
mov
lahf
xor
push
aad
cmp
clc
stc
daa
xor
test
aad
out
jl
cmp
into
xchg
jno
xchg
add
lea
cmpb
sub
xchg
jae
scas
je
outsl
lret
or
or
mov
dec
sbb
cmp
xlat
fcmovnb
out
add
sbb
pusha
push
out
out
in
cmp
add
mov
imul
jne
xchg
adc
mov
push
fldcw
add
pushf
shrb
and
and
test
lea
fs
mov
iret
inc
cwtl
ud1
sbb
jnp
dec
das
dec
or
sub
jp
push
push
adc
pop
jp
out
xchg
cmp
push
rclb
out
aam
stos
mov
xchg
xchg
mov
push
lcall
cmp
cmpsl
jle
push
jmp
jmp
ds
sub
iret
lcall
pop
fcomps
inc
push
push
test
call
aam
fwait
sbb
jp
imul
fdivr
imul
arpl
jecxz
sbb
cltd
add
push
add
fwait
scas
in
sub
mov
les
popa
mov
adc
sbb
pop
daa
call
adc
sbb
xlat
jl
scas
aad
daa
je
fnsave
ficompl
cmp
mov
mov
push
cmp
loopne
fnstenv
jns
in
mov
sbb
lock
xchg
movsl
fsubs
mov
out
mov
add
cmp
push
add
in
stc
cmp
jle
cmp
inc
lods
lods
lods
push
sub
xor
scas
cmpsl
roll
mov
fs
mov
in
imul
je
xor
in
pushf
push
scas
dec
ret
jnp
mov
add
loopne
pop
in
and
addr16
mov
mull
dec
and
sbb
out
repnz
ret
popf
push
into
sahf
jmp
lret
je
scas
sarl
xchg
mov
ficompl
mov
and
push
mov
jae
push
shrl
push
rorl
clc
mov
pop
ja
xchg
insb
or
mov
cmpsl
mov
jmp
out
jno
shrb
jo
sub
xlat
cli
retw
ret
pop
jl
push
add
jns
inc
inc
jecxz
insb
into
stos
xchg
jno
mov
pmaxub
sti
jno
pop
out
and
notb
mov
mov
xchg
jae
test
mov
xor
in
cmovnp
inc
inc
and
jne
pop
daa
mov
inc
mov
lret
mov
jo
ds
lds
add
aam
call
dec
push
les
jmp
mov
out
insb
movsb
pop
adc
mov
or
enter
xor
das
arpl
int3
popf
inc
nop
and
xor
into
mov
adc
cs
int3
call
xor
mov
movsb
push
cmp
repnz
sub
mov
in
ss
inc
imul
cmp
outsl
inc
mov
cmp
stc
adc
out
ror
and
mov
mov
mov
pop
lods
push
sub
ret
lods
sbb
jmp
and
push
sbb
xor
pop
les
pop
or
jp
push
leave
jo
bound
inc
xchg
fsubrl
bound
loop
jae
in
mov
cmp
lret
mov
lock
sti
jecxz
rol
testb
mov
xchg
rsm
in
ljmp
fisttpl
fistpl
ds
pushf
mov
jle
lea
loopne
dec
mov
pop
nop
mov
icebp
adc
pop
add
add
push
insb
aam
or
dec
das
or
scas
cmpsl
xchg
daa
or
jg
ds
call
in
push
in
fcmovb
fpatan
cmpsb
sbb
in
sbb
ret
dec
add
cmp
aad
pop
fisttpll
xchg
repz
xchg
clc
mov
mov
push
in
xchg
inc
outsl
dec
sti
fidivs
add
mov
sub
sahf
dec
lds
je
out
push
icebp
scas
cltd
sub
test
add
jb
push
cmp
scas
aas
xor
ja
ljmp
adc
cmpsb
js
adc
fldl
add
arpl
mov
mov
push
sub
test
aaa
out
push
mov
pushl
shl
xchg
orb
sbb
push
or
mov
xchg
xchg
aam
in
inc
adcl
sub
stc
jb
popf
loopne
sahf
gs
xchg
inc
lret
bound
dec
and
repnz
sbb
push
es
add
pop
pushl
loopne
loopne
int
mov
mov
out
aas
jbe
icebp
mov
popl
arpl
jae
sub
fwait
nop
out
sub
fbld
mov
in
lcall
pushf
addr16
cmpsl
iret
iret
arpl
pop
scas
or
lahf
add
ds
or
adc
mov
scas
xor
mov
stc
inc
mov
xor
das
cmp
out
je
test
sbb
subb
push
test
xchg
bound
xchg
adc
cltd
les
add
or
xor
shll
enter
gs
add
rcl
subb
jo
bound
stos
add
rorb
loopne
and
movsb
and
push
ja
subb
push
add
bound
jl
push
mov
dec
lahf
out
cwtl
ja
jmp
inc
jecxz
lods
sub
pop
rorl
lods
mov
jno
out
mov
dec
add
inc
enter
and
dec
jne
lods
pop
adc
loopne
fnsave
xor
test
push
mov
push
scas
xchg
cltd
es
dec
outsb
jecxz
sub
or
pop
clc
xorb
and
mov
push
sub
outsb
std
fs
mov
mov
mov
mov
adc
add
loop
cmp
test
adcb
mov
jmp
mulb
dec
ljmp
xor
push
mov
movsb
mov
mov
adc
sbb
lea
sahf
ret
mov
fwait
ljmp
and
jge
fsubrl
push
outsb
sub
sbbl
fneni(8087
xchg
xchg
inc
mov
jl
sbb
clc
icebp
xchg
aam
lock
imul
adc
sbbl
icebp
mov
sub
or
ljmp
ds
bound
push
das
ljmp
cmp
mov
cmpsl
fsubrl
pop
xchg
xchg
cli
xor
ret
fwait
out
push
and
call
popa
sub
mov
adc
xor
pushf
dec
push
pop
lcall
jb
pop
sub
ret
out
data16
mov
daa
out
push
shrb
mov
xchg
popa
fdivr
inc
imul
xlat
popf
dec
fimull
in
xchg
dec
mov
sbb
cs
data16
xor
ficomps
pop
repz
testb
iret
lret
cmp
mov
xor
add
mov
insl
xchg
and
scas
push
push
inc
pusha
sarb
enter
adc
roll
xlat
aaa
sahf
insb
dec
mov
xor
test
push
int3
andl
or
imulb
filds
lret
mov
ret
and
scas
fs
mov
lcall
test
cwtl
stos
jmp
mov
scas
lods
mov
jae
pop
push
pop
es
lcall
out
sbbb
stos
fldenv
mov
mov
push
push
lret
inc
push
aam
xor
movsb
pop
int
pop
inc
xchg
fcmovb
in
mov
addr16
sub
in
adc
xchg
loope,pt
int3
ds
pushf
loopne
or
out
clc
out
mov
dec
std
dec
xor
ret
xlat
ret
or
xor
jle
test
aad
aaa
cmp
dec
dec
leave
sub
in
imul
adc
in
ja
sbb
gs
adc
loope
adc
mov
dec
or
xor
fcmovnu
fsubs
aam
lds
mov
repnz
rol
add
dec
shrb
cmc
inc
xchg
adc
ljmp
mov
push
popf
inc
mov
ja
mov
repnz
aas
out
sub
into
or
and
inc
add
push
dec
sbb
adcb
mov
sbb
mov
mov
in
stc
and
ret
movsl
lds
adc
mov
addb
arpl
xchg
or
jne
or
adc
mov
fs
and
sti
ja
mov
jmp
pop
rcrb
call
mov
loope
out
dec
or
push
bound
daa
sti
xor
loop
in
dec
jg
ficompl
mov
push
rorl
lods
or
ss
and
jo
cs
jl
arpl
call
and
sub
sub
cld
in
dec
leave
and
xlat
ret
clc
push
jl
mov
stos
jno
add
pop
hlt
push
sub
loopne
pop
jecxz
inc
roll
hlt
jmp
mov
mov
js
les
mov
push
pop
cmp
inc
dec
int3
inc
loop
shr
add
mov
ret
call
les
xchg
cmp
out
jns
in
shl
xchg
cltd
outsb
or
stos
ss
ret
and
idivl
mov
inc
pushf
and
cmc
test
push
jecxz
or
push
adc
out
mov
cwtl
rol
sub
sub
lret
mov
cli
jle
xchg
dec
out
mov
mov
test
cmpsb
ficoml
sarl
in
sub
push
cmp
mov
test
in
rcll
xchg
xchg
push
mov
pop
pop
scas
mov
mov
jmp
xor
fimull
jno
xor
adc
dec
and
sti
mov
shrl
popf
iret
push
pop
loope
testb
incl
incb
add
cmc
out
aad
add
cmp
mov
jp
jo
jne
test
or
push
jae
hlt
dec
jle
adc
cmp
jmp
inc
mov
mov
mov
mov
push
jecxz
and
arpl
xchg
and
cwtl
jge
push
mov
adc
cmp
int
mov
jp
sbb
rorl
mov
pop
mov
sbb
arpl
push
mov
ret
dec
cltd
cltd
push
idivl
cmp
cmp
test
mov
sub
xor
inc
movsb
sbb
shll
test
mov
fstpt
icebp
aaa
sub
mov
sbb
or
pusha
dec
lret
cmp
aaa
cmp
sub
cltd
adc
pop
adcb
mov
je,pt
add
clc
mov
or
decl
add
leave
fcmove
jecxz
sbb
lods
cmpb
pop
push
cmp
pusha
adc
movsl
mov
lds
push
mov
dec
gs
stos
push
je
rorl
or
ss
test
aaa
imul
push
insl
fidivrl
ljmp
hlt
xor
cld
add
out
es
out
hlt
xor
aaa
add
in
out
sbb
sub
data16
cmp
push
mov
shr
loope
rdtsc
fisttps
sub
test
jns
mov
or
pop
sbb
dec
push
push
adc
cmp
cmp
xor
dec
sbb
jle
aaa
scas
lar
sbb
adc
xor
call
repnz
adc
out
push
sub
andl
sbb
mov
fdivs
movsl
sbb
cmc
bound
pop
add
lea
insb
pop
mov
adc
lcall
adcl
das
mov
sub
or
push
testb
stc
push
lea
ljmp
xchg
mov
loopne
jle
stos
and
mov
mov
sub
dec
cmp
inc
cltd
sbb
dec
inc
test
jl
push
xor
mov
sahf
fsubs
cmpsl
loopne
sbb
sbb
aas
test
lret
nop
clc
jg
test
xchg
fistps
ss
insb
mov
xchg
aas
add
dec
mov
icebp
clc
cmp
scas
pushf
shll
adc
sub
push
dec
rcll
pop
pop
mov
jle
pop
bound
adc
movsl
out
or
outsb
adc
scas
push
pop
outsl
ret
mov
test
adc
mov
xor
ds
insl
loope
pop
in
push
cltd
or
jo
lret
ljmp
fistpl
test
xchg
icebp
mov
aas
hlt
lock
aad
and
jbe
sarb
add
dec
test
test
pop
sbb
xor
ret
insl
sub
add
and
cmp
cli
repnz
daa
hlt
jp
call
jb
lods
sarl
xor
mov
mull
fnstenv
and
dec
repz
inc
sub
repnz
scas
cwtl
and
das
cmp
sub
testl
push
arpl
dec
adc
pop
mov
xchg
push
xor
mov
in
fs
int
xchg
or
faddl
clc
inc
add
push
mov
or
in
mov
fcomps
mov
js
mov
push
test
pop
sti
mov
dec
fwait
add
adc
mov
sbb
ffreep
push
xor
out
gs
mov
add
add
aas
sbb
scas
mov
cmp
push
add
mov
push
jp
mov
into
fucom
inc
imul
ret
mov
fstl
aam
in
daa
outsb
popa
sti
aad
test
mov
test
fstpl
dec
mov
mov
mov
mov
sbb
or
cmpsb
js
inc
test
cmpsl
faddl
jle
stos
mov
sub
imul
out
movsl
rcr
scas
adc
mov
lds
xor
hlt
movq
int3
mov
cmc
add
popa
in
mov
arpl
adc
xor
cld
inc
cmpb
mov
lea
in
jmp
push
add
and
jmp
test
xchg
mov
cmp
sbb
pop
push
rcll
add
jbe
jbe
fsubs
cmp
je
ret
dec
mov
jg
mov
movsl
repz
xchg
in
sbb
jp
repnz
in
push
mov
scas
mov
cli
imul
mov
mov
pop
xor
loope
or
push
fwait
and
sub
addb
jnp
mov
pop
aas
test
cmp
rcpps
rcrl
pop
loope
rcrl
call
inc
cmpsl
xchg
mov
dec
out
int
insb
mov
dec
cmp
xchg
leave
add
inc
imul
sub
mov
or
or
dec
into
fildll
shlb
push
pop
or
sbb
adc
rorb
fs
in
fidivs
popf
popa
insl
addr16
fildl
cmp
cmpb
in
incl
dec
daa
xor
and
ss
test
xchg
dec
lock
inc
add
xor
inc
and
xchg
lods
pop
mov
inc
and
divb
sub
xchg
mov
adc
and
out
andb
pop
ds
and
pusha
fistpl
and
mov
cmp
or
jle
sub
stc
cmp
xor
inc
movsl
add
mov
pop
addl
js
lds
test
mov
subl
fsubl
adc
inc
push
pop
ror
mov
out
xchg
in
dec
dec
jnp
fs
cmp
sbb
inc
dec
in
in
pop
add
mov
mov
dec
pop
or
xor
insl
add
pusha
add
push
sub
xchg
xchg
jo
lret
imul
je
ljmp
push
pushw
fbstp
aad
into
lock
rcr
sub
xor
sub
shl
add
in
xor
lcall
cli
xchg
or
outsb
in
push
and
dec
sbb
gs
aas
and
repz
mov
mov
cmpsb
or
or
pop
adc
mov
fdivl
cmp
jmp
or
in
shlb
ret
ljmp
into
out
pop
inc
leave
cmc
sub
and
mov
xchg
add
xorb
inc
shlb
ret
push
test
jle
pop
scas
test
mov
push
and
mov
or
mov
fiadds
sbb
cmp
xor
xchg
inc
and
adcl
xor
fiadds
jne
stc
sbb
stos
bnd
int
or
jge
bound
ss
add
nop
xchg
fisubrs
push
lods
or
jl
ss
rclb
or
lods
jg
lods
push
mov
outsl
out
outsl
add
and
inc
push
jo
sbb
out
test
inc
in
les
push
jbe
push
jo
xorb
dec
cmp
dec
adc
dec
enter
sahf
jae
push
jo
fnsave
push
xor
mov
clc
xor
js
sub
shrl
jnp
lock
leave
std
mull
and
test
icebp
sbb
xor
jmp
add
aas
ret
jne
lods
addl
cltd
mov
mull
mov
pop
sub
clc
nop
and
sub
test
jmp
shl
shl
mov
in
test
dec
push
adc
jg
popa
jl
ja
repnz
data16
push
out
imul
mov
popa
in
mov
push
ds
pop
sub
pushf
pop
imul
add
in
sub
cmp
loope
test
adc
add
loope
push
dec
pusha
in
in
jle
idivb
cwtl
test
shrb
add
cmpsl
cmp
mov
push
inc
xchg
or
test
adc
dec
mov
push
inc
ds
push
fcomip
cmpsb
sbb
fstpt
repnz
mov
incb
jb
test
aad
cmp
sub
push
call
in
push
fcomi
push
loope
clc
imulb
sbb
adc
mov
push
lret
imul
loop
les
fs
ret
sar
sub
out
mov
fstps
xor
shrl
pop
mov
mov
jns,pn
das
cmp
enter
sbb
xor
mov
add
stos
add
and
mov
mov
push
imul
int
stos
adc
push
divl
jecxz
mov
xor
rorl
push
mov
pop
sub
xchg
jne
outsl
inc
cmpsb
jbe
sub
les
cmp
mov
out
rclb
aaa
imul
adc
and
dec
or
push
scas
addr16
pushf
lods
sti
cwtl
or
and
xor
ja
test
dec
sbb
and
out
pop
push
sub
loope
pop
sahf
mov
push
lock
adc
cmp
mov
ds
mov
mov
mov
imul
xchg
bound
std
in
cmp
shll
jge
imul
or
pop
jp
adc
lcall
jge
mov
int
cltd
xchg
popf
pop
mov
mov
pop
cmpsl
xorl
inc
pop
stos
sub
lods
test
leave
lds
jb
cmp
cmp
sbb
clc
push
jge
or
push
aad
push
xchg
in
adc
pop
testb
dec
rclb
sub
in
fmull
push
subl
test
push
push
out
jns
sbb
pop
xor
or
mov
orb
out
jle
js
loope
mov
pop
pop
mov
insb
into
add
add
add
test
xor
sub
xchg
shrb
xlat
push
bound
xchg
fs
or
inc
dec
aam
test
cs
and
sub
xor
add
mov
add
xchg
das
mov
in
pop
lds
mov
cmp
leave
dec
mov
or
cmp
jno
cmp
or
fidivl
int
mov
sub
iret
jp
cmp
add
lahf
cmp
cli
mov
dec
adc
repnz
roll
cli
xchg
fcoms
jne
stc
jge
popa
out
popa
outsl
test
xorb
popl
cmp
or
jecxz
notb
fnsave
xor
loopne
rcrl
xchg
dec
jge
inc
xor
dec
add
in
cmp
jne
aam
push
push
adc
inc
push
push
push
rolb
ret
push
addb
lahf
movsl
loope
cmp
push
notl
mov
sub
lock
and
mov
flds
aam
rorb
lret
out
sbb
adc
dec
clc
stos
lcall
push
in
jb
fstpl
stc
cmp
push
mov
leave
xchg
jb
sub
sub
lds
ficoms
gs
pop
cmc
stos
jo
stc
insl
loopne
sub
ficoml
fcoml
mov
lea
add
mov
js
fidivs
mov
out
stos
scas
repnz
or
pushf
sti
pop
insl
int3
loopne
mov
les
cld
pop
sti
cmp
xchg
xor
je
adc
add
testl
jmp
cltd
outsb
les
mov
jecxz
xor
pop
pop
cmp
mov
push
pop
pop
sahf
mov
not
mov
test
add
repnz
sub
jmp
stos
sti
mov
xchg
lods
push
push
mov
pop
out
push
mov
shl
pop
in
inc
mov
in
pop
mov
bound
add
dec
lds
pop
push
in
push
gs
addr16
cmc
out
mov
pop
pop
lar
imul
aas
int3
mov
mov
ret
pusha
jae
divb
dec
mov
xchg
iret
sbb
add
xchg
ss
pushf
mov
mov
fidivrs
xchg
enter
stos
cs
scas
push
sub
jmp
fcoms
inc
push
jmp
dec
lret
jl
mov
adcb
cmpsb
sti
addr16
push
in
sbbl
jmp
and
cltd
cmp
pop
rorb
mov
sbb
mov
test
out
inc
mov
sub
sub
and
add
jle
nop
mov
inc
mov
mov
stos
loop
jp
jle
bound
mov
pop
subb
xchg
add
cmp
jg
insb
mov
fistpl
jp
pop
sbb
int
nop
xchg
mov
or
or
cmpsb
enter
mov
sub
mov
dec
inc
ljmp
jbe
push
push
leave
rcll
cmp
sbb
mov
lahf
lods
cmp
hlt
insb
add
or
outsl
out
lcall
pop
aaa
inc
jo
cmp
dec
pop
addr16
cmp
inc
lea
call
dec
fadds
jno
bound
mov
mov
sub
ja
aas
ja
mov
test
fisubs
mov
enter
gs
cmp
mov
mov
ljmp
pop
hlt
jae
imul
cmc
adc
lock
imul
call
cmp
or
scas
clc
cmpsb
out
fs
sub
pushf
mov
mov
ret
rorl
fstl
int3
and
mov
jp
mov
iret
mov
fs
rolb
sbb
into
adc
push
mov
sbb
pop
ds
cmp
cs
or
push
dec
pop
stc
lret
mov
in
int3
dec
jmp
xchg
popa
dec
mov
cmpsl
and
jne
pop
out
inc
jns
ss
cmpsb
mov
outsb
shrl
pop
and
gs
std
jge
jmp
aaa
mov
mov
in
mov
icebp
jg
sub
cwtl
lret
dec
lea
sbb
jle
dec
pop
jge
dec
dec
adc
ljmp
fistpll
jae
sbb
aam
lock
dec
pop
and
pop
xlat
and
out
jae
xchg
xchg
cmp
aas
dec
cmp
and
jl
push
lret
sub
faddl
loopne
pop
and
cmc
adc
rcrb
xchg
in
fcmovbe
insl
push
xchg
or
stc
nop
test
push
pushf
shl
adc
mov
or
hlt
data16
adc
dec
jl
mov
xlat
pop
sbb
popa
call
push
dec
cmp
or
iret
xchg
lods
cld
push
push
sub
or
out
ja
inc
outsb
sbb
xchg
dec
jno
xor
sbb
sbb
inc
mov
push
pop
adc
xchg
sti
int
mov
jmp
data16
ficompl
cmpb
test
mov
imul
faddl
leave
xchg
cwtl
xchg
jge
mov
rcrb
mov
or
lods
pushfw
xchg
outsl
jl
mov
jl
or
jbe
or
mov
add
mov
into
sub
mov
jge
test
jno
lahf
shl
rcll
xor
sbb
orps
shlb
jge
lds
loopne
mov
lcall
push
cmpsl
mov
in
les
in
add
sub
imul
pop
sbb
test
fsubl
mov
daa
or
into
add
cmpsl
inc
mov
popa
icebp
and
clc
pop
aad
sbbb
ds
cmp
movsb
popa
xchg
cmp
subb
pop
insl
inc
fs
sub
sbb
pop
xchg
xor
je
push
mov
in
aam
aam
cwtl
mov
pop
or
xor
jg
jmp
mov
mov
dec
mov
cmpsl
leave
mov
hlt
into
or
fimull
sub
movsb
jl
data16
xchg
jl
les
mov
fwait
test
lea
int
gs
xchg
xchg
jmp
test
lods
lods
xor
lods
add
cli
push
icebp
cmp
adc
mov
sbb
mov
sti
aad
movsl
xor
std
or
into
scas
sarb
mov
imul
lock
ret
test
inc
ret
pop
inc
js
std
and
mov
pop
ret
or
fisubrl
test
cld
stc
push
lret
mov
cmpsb
push
dec
ja
ficoml
popa
adc
mov
int
pop
fistps
push
push
pop
jnp
ja
mov
inc
call
dec
mov
add
clc
mov
and
fdivrl
dec
xor
xlat
mov
sub
loop
mov
test
insb
notl
adc
cmp
rcll
mov
icebp
sbb
and
in
cli
mov
mov
mov
aam
inc
pop
cmpsl
loop
mov
outsb
mov
leave
sahf
pusha
mov
out
out
push
xchg
xchg
cwtl
test
inc
es
add
jl
dec
add
and
arpl
xchg
jno
in
mov
mov
inc
cmp
in
mov
xor
nop
popf
adc
sti
add
andl
jecxz
jmp
test
cmp
push
addr16
mov
or
je
outsl
push
cmp
push
pop
aam
cmp
leave
data16
test
or
adc
jbe
mov
push
mov
xor
fcoms
push
jns
add
sub
shrl
rorl
push
rcr
pusha
pop
jbe
dec
leave
lock
call
mov
int
mov
jge
and
mov
jl
popa
jg
inc
test
jns
inc
add
mov
add
dec
aaa
ja
outsb
mov
in
subb
sub
out
jge
mov
and
std
stos
call
mov
jp
sub
ljmp
fsubr
lahf
icebp
daa
pop
sbb
pop
or
mov
out
dec
decl
inc
mov
jns
test
inc
fildll
inc
sub
test
xlat
mov
xor
cld
int
lcall
fldenv
cmc
enter
sarl
xchg
nop
es
in
pop
mul
lods
out
cmpsb
lret
aas
xchg
adc
loope
insl
lock
jle
ds
cmp
rorl
aas
mov
loopne
jmp
ljmp
adc
or
adc
dec
fwait
out
cld
lods
jbe
test
test
push
sub
ds
out
test
std
mov
mov
mov
pop
pop
test
imul
repz
xor
les
mov
xchg
cmp
fmuls
sbb
or
stos
into
pusha
fnstsw
mov
dec
mov
dec
stos
cmp
adcb
lea
xchg
orl
jecxz
mov
sbb
nop
or
cli
stc
es
or
gs
adc
test
ja
shlb
mov
xchg
pop
mov
sub
aad
cltd
push
rorb
cmp
push
inc
cmp
into
outsb
jns
call
jno
inc
jle
pop
cmpsb
xchg
int3
pop
and
jmp
out
shll
lea
fildl
aas
js
jecxz
pop
fdiv
movsl
dec
jecxz
mov
pop
in
ucomiss
sbb
in
mov
in
ret
xor
movsb
sbb
or
push
inc
pop
loope
in
adc
insl
and
je
test
push
dec
adc
fiaddl
xor
lock
std
sbb
ret
repz
add
jge
ds
popa
add
fidivl
mov
cmc
xor
jns
fwait
loopne
rcr
push
and
lea
insl
dec
push
das
mov
jb
adc
cmpsl
xor
rcrl
and
scas
xor
pop
lea
pop
ss
jecxz
xchg
pop
mov
in
sahf
aaa
lea
movsl
sub
or
scas
and
les
pop
push
pop
inc
mov
mov
push
lds
push
mov
int
ja
dec
mov
dec
add
and
test
cli
sbbl
or
mov
pushf
popf
mov
shll
jno
movsb
je
mov
inc
mov
por
xor
out
jle
je
ljmp
aas
cmp
sbb
pop
test
shll
negl
add
call
icebp
pop
and
push
dec
out
push
das
repnz
or
fcmovnbe
imul
nop
add
adcl
sub
adc
mov
andb
shll
popf
imulb
lret
push
scas
out
pushl
loop
and
mov
lea
add
fidivrs
push
cmp
sub
fucomip
mov
or
pop
sbb
jmp
jmp
popf
add
inc
outsb
repz
sbb
dec
and
bound
les
ljmp
loopne
add
mov
jp
js
xor
xchg
mov
xlat
dec
push
xchg
insl
xchg
jecxz
les
push
stos
fdivrl
bound
fdivr
nop
and
pop
mov
pushf
test
xchg
aas
adc
testl
inc
mov
lds
dec
icebp
nop
lcall
jge
fcoms
mov
pop
xchg
call
ljmp
push
xchg
xchg
test
sub
jl
or
data16
ss
adc
cmp
sub
ret
xchg
xor
push
xchg
push
push
adcb
daa
test
pop
repz
mov
jge
jb
sub
pushl
iret
push
jecxz
sti
jbe
add
test
push
pop
pop
shlb
pop
inc
fistpll
stos
add
jnp
rcll
les
xorb
test
or
and
sbb
xchg
cmp
pop
jo
push
ss
out
mov
pop
es
and
aaa
jmp
mov
push
xchg
sub
or
sbb
xchg
repnz
mov
add
mov
scas
lods
add
fiadds
lock
jmp
mov
jb
enter
pop
mov
sub
or
xor
cmpsl
or
fucomip
mov
fwait
sahf
and
or
int3
negl
bnd
pop
jnp
cmp
scas
inc
addr16
and
fs
pop
mov
in
xor
push
xchg
stc
lods
push
into
jl
dec
jae
stos
adc
sub
inc
lcall
fcom
popf
add
loopne
jp
popf
xchg
fucomip
loop
or
mov
rcrl
mov
add
and
add
sbb
leave
cmpl
cld
or
test
jl
xor
mov
popf
bound
jnp
mov
and
stos
pop
int
adc
ss
jge
add
addb
cmpb
lods
sbb
pop
mov
imul
pop
dec
jg
sbb
adc
and
mov
sub
adc
jns
mov
pop
adc
lods
loope
pop
popa
popa
sbb
mov
ret
xchg
sub
inc
sub
xchg
iret
loope
je
dec
aaa
fadds
xor
xchg
mov
pop
mov
jg
leave
repnz
and
adc
test
fcom
subl
mov
test
mov
popa
mov
jmp
or
or
jge
add
pop
adc
faddp
push
push
fwait
cmp
pusha
or
adc
pop
pushf
adc
inc
int
out
push
imul
dec
stc
xor
pop
adc
and
rorl
int3
adc
insl
int3
mov
sbbb
inc
aaa
cwtl
std
mov
enter
and
dec
lea
xchg
sub
mov
pop
in
push
jbe
pop
lds
jle
inc
idivl
pop
das
orb
mov
mov
inc
cs
hlt
repnz
cmp
push
mov
loop
xor
addr16
sahf
sub
add
jecxz
mov
iret
push
push
insl
insl
out
mov
lock
test
sti
fsubrp
dec
loopne
xlat
cmp
mov
or
add
lea
push
mov
push
aaa
loope
add
push
push
mov
mov
xchg
xchg
lret
jb
pusha
ss
inc
cmc
addb
add
mov
and
mov
and
fdivr
xor
test
or
mov
sbb
inc
js
sub
scas
rep
in
lods
repnz
call
push
shl
or
lret
sub
bound
mov
ret
cltd
dec
divb
pop
dec
lahf
adc
rorb
jne
stos
sbb
cwtl
sub
xor
fidivrl
enter
rcl
pop
cmc
scas
stc
ret
or
mov
jle
jno
sbb
mov
pop
pop
sbb
in
ja
jno
jl
ret
fiaddl
gs
lret
jno
out
shll
lods
aam
sbb
xor
rolb
lahf
sbb
jmp
mov
sub
pop
inc
and
dec
icebp
adc
mov
inc
cmp
stos
push
imul
sbb
aam
test
xchg
mov
push
mov
and
dec
xchg
and
mov
push
mov
faddl
mov
movsl
int3
inc
das
lock
fwait
and
jg
xor
out
test
dec
imul
hlt
jg
cmp
loope
jne
lahf
adc
jge
test
popa
dec
mov
or
adc
cli
lds
or
fidivrl
sub
les
sbb
insb
mov
cmp
xor
push
ds
add
add
mov
mov
mov
jg
je
sub
mov
xor
push
jae
xlat
mov
lahf
mov
cmp
xor
xchg
fcomip
mov
push
jns
mov
icebp
outsl
sub
fstpl
popa
xchg
xchg
or
fistps
loope
push
xchg
mov
mov
mov
ljmp
push
inc
inc
sbb
inc
je
fcoms
adc
adc
fwait
clc
nop
shlb
in
sahf
dec
lea
jmp
enter
xor
add
dec
adc
mov
mov
jbe
movlps
outsl
pop
fsubl
test
mov
je
sbb
jle
and
pop
gs
pop
mov
mov
imul
and
sub
adc
ret
flds
nop
jbe
adc
or
xchg
inc
ja
sar
xchg
xchg
push
pop
test
and
daa
push
mov
out
sarb
dec
xlat
or
or
in
jg
jo
sahf
test
arpl
sti
flds
mov
mov
es
test
ret
mov
stos
repz
mov
pop
and
or
dec
mov
adc
mov
lea
ss
movsl
push
mov
add
xor
push
sub
jmp
popf
push
dec
dec
cmpsb
cmp
cmp
cli
aad
mov
in
loope
push
loopne
data16
lahf
bound
in
rcrb
stos
inc
xor
lcall
xchg
in
xchg
loopne
das
adc
call
mov
jp
and
adc
ljmp
jmp
adc
jmp
arpl
inc
fs
cmp
push
jns
rolb
sahf
inc
sub
andb
rorl
mov
ss
jmp
scas
repz
fidivrs
xor
stos
out
stos
cltd
fisubl
sub
xchg
nop
cs
dec
je
mov
cmp
and
imul
mov
mov
fsubr
xchg
dec
ds
xchg
ret
cmp
mov
inc
dec
dec
pop
flds
scas
stos
inc
jnp
orl
fcmovb
xor
xor
mov
pop
pop
push
mov
add
test
pop
cmc
mov
and
dec
push
jmp
mov
mov
lods
sbb
pop
mov
push
iret
and
and
out
sahf
daa
push
push
fildll
pop
notb
in
xor
cmp
cli
add
xor
jge
mov
rcrl
addb
wbinvd
jmp
in
sahf
cmp
push
into
rol
mov
push
push
aam
dec
insb
out
jmp
mov
sbb
aaa
ljmp
adc
mov
fs
jp
out
in
mov
sbb
jae
pop
pop
sub
scas
and
ljmp
ljmp
stos
fisubs
out
add
sub
imul
dec
bound
sbb
mov
aas
inc
enter
push
int
clc
inc
xchg
adc
inc
inc
pavgw
aad
push
and
xor
nop
cwtl
or
cmc
xchg
movsl
jo
jns
mov
lret
sbb
xchg
ds
xor
cmp
xchg
xchg
or
xchg
jp
in
call
rclb
lds
sbb
fidivrs
add
and
mull
xor
adc
xor
push
pop
mov
sub
push
fcompl
adc
mov
jne
mov
insb
mov
mov
mov
jns
push
lds
jmp
and
std
test
inc
pop
insb
mov
mov
push
mov
pop
xchg
movsb
fs
jle
into
push
or
or
outsl
pop
pop
xchg
in
pop
pop
pusha
sub
xchg
push
mov
add
andb
stos
push
and
test
loop
dec
in
cli
cmp
scas
mov
jns
pop
insl
push
sub
mov
test
mov
ja
or
es
mov
mov
cmovb
lds
add
mov
and
inc
insl
in
mov
stos
mov
lods
cmc
aas
jecxz
mov
dec
dec
bnd
lods
mov
mov
pusha
shr
mov
or
jne
mov
mov
sbb
sbb
je
jge
adc
lret
stc
push
iret
dec
lea
mov
mov
mov
pop
adc
sti
loope
enter
mov
int3
fnstcw
sbb
cld
jl
adc
fildll
sub
push
out
std
std
pop
test
push
lcall
cmp
push
out
mov
pop
into
loope
dec
mov
rorb
mov
fnstcw
xlat
mov
fld
outsl
jae
stc
aaa
cmp
cmpsl
scas
stc
push
into
sbb
cmp
mov
mov
test
mov
outsb
cltd
push
sbb
out
lret
add
stc
pop
call
outsb
mov
inc
xchg
in
test
pop
adc
mov
movsl
cld
outsl
test
pop
adc
out
in
fcomi
xor
rcll
dec
mov
ret
mov
jle
addr16
jne
es
and
xor
xchg
push
sbb
aaa
mov
inc
inc
scas
adc
inc
xlat
aam
push
pop
jo
stos
mov
pop
out
nop
push
out
xor
sub
subb
push
movsl
sbb
in
sbb
leave
sbb
loopne
nop
sarw
popl
push
xchg
lea
dec
stc
outsb
imul
push
sbb
std
aad
dec
rcrw
cmp
inc
ljmp
jbe
inc
mov
aam
pop
push
ss
scas
nop
sbb
orb
pop
pushf
fucomip
ret
sbb
adc
xchg
add
cmpsl
xchg
or
push
movsl
push
fldenv
xchg
fbld
xor
xchg
inc
call
cmp
in
dec
ja
das
std
jns
mov
inc
sbb
xor
icebp
mov
sarb
fwait
mov
scas
rcrl
jle
jno
loop
mov
dec
shrl
aad
mov
lahf
fucomp
jno
add
push
adc
jge
cmp
dec
stos
add
dec
mov
jg
and
mov
outsl
pop
mov
pop
cli
dec
pop
loope
sub
or
inc
mov
xor
add
mov
jbe
movsb
or
and
lods
into
xchg
dec
push
mov
icebp
test
pusha
loope
xchg
push
pop
sub
ss
sub
adc
lret
mov
sbb
imul
or
jl
es
movsb
jp
imul
push
pop
adc
rorb
mov
das
andl
rcrl
xchg
data16
push
mov
xlat
mov
mov
sarl
jae
push
inc
aam
in
xchg
int3
cmpsl
cmc
pop
jb
jne
cmc
xor
sub
xchg
mov
push
pop
dec
ficoms
dec
xchg
inc
dec
pop
cmp
dec
mov
sti
xchg
testb
xor
inc
cltd
xchg
push
mov
sbb
loop
sub
fldl
fistps
sbb
mov
mov
or
mov
and
jmp
loop
mov
xchg
mov
out
mov
mov
xor
mov
dec
xchg
pop
aas
pop
orl
repz
in
sbb
pop
push
out
cmp
int3
jle
cs
iret
lds
leave
inc
lar
jb
cli
xchg
add
push
xor
wbinvd
inc
sub
movsl
jle
dec
xor
mov
bound
push
cmpsb
add
push
xor
mov
sbb
add
pop
call
pusha
mov
xor
jmp
lret
add
stc
jo
jo
push
das
loopne
and
and
mov
test
xor
cmpsb
xor
pop
dec
movsl
dec
faddl
cmpb
stos
stos
cmp
jb
xor
or
sub
imul
clc
mov
xor
adc
pop
movl
adc
mov
push
push
sbb
movsl
bound
sub
dec
movsl
pop
pop
je
nop
xor
add
movsl
cmp
inc
ljmp
fimull
jp
adc
fs
xchg
std
or
inc
adc
jbe
into
push
pop
loop
sbb
push
iret
iret
das
loop
xchg
add
or
je
dec
pop
xor
push
test
fildll
inc
outsb
repz
jne
into
pop
mov
mov
jecxz
sbb
inc
xchg
sahf
jns
sbb
cmc
and
push
dec
repnz
std
jns
mov
pop
pop
repnz
jp
sahf
xor
sub
ret
pop
and
xor
jg
je
fs
mov
mov
mull
ds
pushf
or
sub
pop
dec
inc
loop
jecxz
dec
mov
cmp
and
dec
jecxz
aam
jge
or
sub
mov
jle
stos
xor
lea
fdivl
inc
imul
push
jb
pop
int3
sarl
int3
fstl
or
xchg
fs
cmpsl
outsb
inc
pop
cmp
dec
xchg
pop
cld
xor
jle
adc
pop
add
imul
cltd
mov
adc
pop
push
out
push
dec
pop
cs
pop
xor
sbb
and
fsub
xchg
mov
stos
lahf
add
out
cmp
ret
test
and
push
addr16
fwait
cld
popf
lahf
stc
xor
or
inc
movsb
pusha
jl
xor
dec
js
mov
mov
pop
jp
jmp
xchg
jne
mov
in
aas
xchg
das
inc
push
adc
push
popf
fbld
xchg
sbbb
and
js
mov
adc
andl
imul
aad
aad
pop
bound
mov
xchg
jecxz
int3
and
xor
lds
js
dec
inc
pop
test
subl
push
pop
stc
jb
lds
mov
pop
mov
inc
and
fldenv
out
rcrb
popf
sbb
mov
or
cmp
xchg
xlat
leave
sub
mov
bound
add
jle
rol
jg
xor
ja
cwtl
xlat
ja
xchg
sbb
sub
fdivrl
mov
bnd
jmp
filds
std
cmp
stos
lret
push
insb
pusha
add
mov
inc
neg
call
dec
out
sbb
test
icebp
jb
xorl
xchg
ret
cs
pop
stos
jnp
xor
popf
mov
std
loopne
sbb
push
mov
out
and
xlat
into
sbb
lret
push
cld
sub
inc
jno
addr16
xor
add
mov
dec
dec
jmp
xor
push
loop
fs
test
int
add
adc
pop
jge
int
lods
or
and
out
mov
loop
sbbl
scas
pop
dec
into
pushf
arpl
mov
jne
negb
mov
add
movsl
adc
repnz
dec
clc
dec
jg
insl
scas
in
mov
fisttpl
mov
push
mov
mov
or
pop
ret
add
mov
mov
dec
lods
in
push
ret
jno
mov
adc
jb
gs
sbb
sahf
xchg
aaa
sub
lds
pop
adc
mov
sbb
mov
stos
dec
inc
inc
lods
dec
dec
or
out
sub
adc
push
mov
jne
nop
mov
sbb
sbb
mov
mov
daa
jle
mov
cmpsb
adc
stos
in
movsl
mov
gs
xchg
sub
push
out
scas
test
mov
popa
stc
mov
hlt
jns
push
test
mov
in
xchg
movsb
add
mov
jbe
out
das
adc
mov
cmpw
dec
adc
pop
mov
in
fwait
jp
pusha
jmp
xchg
mov
xorb
jb
adc
aaa
mulb
sub
addr16
sbb
mov
xor
mov
stos
xchg
xchg
stos
stos
loopne
mov
mov
or
testb
sbb
insl
add
cmp
in
popw
bound
aam
orb
dec
push
pop
jne
nop
add
push
add
adc
push
fcomi
fiadds
rcr
pusha
in
mov
pop
add
movsl
outsl
stos
add
pop
aam
mov
flds
cmp
xchg
jp
fsubs
test
aad
mov
testl
add
push
sbb
jns
push
sub
pop
or
pop
in
fs
int3
leave
jb
sbb
dec
mov
push
rcrb
push
fdivr
jo
sbbb
adc
sarl
inc
ror
aaa
ljmp
push
scas
pop
aad
mov
dec
dec
sub
repnz
push
add
mov
shlb
sbb
js
sarl
out
in
inc
adc
lcall
push
and
fstpt
icebp
cltd
push
test
mov
aam
out
lcall
xchg
dec
mov
enter
lcall
outsb
andb
insl
test
dec
mov
jnp
enter
adc
lea
in
adc
stos
add
and
pop
lods
adc
aaa
mov
mov
jmp
jmp
sub
xor
into
mov
jne
pop
push
sub
sub
sub
inc
movsl
bt
xor
nop
pop
ljmp
mov
and
lds
sbb
aas
pop
inc
sub
sub
and
inc
add
mov
push
pop
xlat
lea
cli
out
and
sub
movl
les
scas
xchg
xor
insb
push
push
xchg
dec
pop
stc
lea
dec
pop
sub
push
pop
lods
addb
jle
push
sbb
pcmpeqw
fmull
scas
xchg
and
pop
cmp
fidivrl
int
ficoms
xchg
inc
fdivrl
push
fucomi
mov
sub
push
inc
fldt
scas
int3
ja
ds
std
movl
and
jg
push
sbb
enter
shlb
add
lret
mov
call
push
into
jmp
mov
hlt
mov
popa
fistl
xchg
mov
xchg
sbb
addr16
das
int3
or
popf
pusha
mov
fisubs
out
dec
dec
aad
sbb
ds
cwtl
mov
lcall
add
rcrb
mov
in
int3
cmpsb
dec
aam
push
pop
mov
rorb
dec
sti
lods
popf
shrb
push
mov
test
dec
mov
adc
push
sbb
jo
adc
cmp
and
adc
jbe
aas
adc
fucomip
adc
lds
rorl
arpl
push
xchg
adcl
pusha
fists
test
fistps
lret
fwait
pop
cmp
mov
mov
xchg
sbb
sbb
cmpb
pop
mov
cmp
pop
push
fisttpl
fs
in
mov
adc
inc
jno
and
data16
hlt
xorb
xor
sbb
push
xchg
movsb
adc
lods
sahf
mov
and
je
mov
xlat
jbe
pop
repnz
mov
push
test
ds
test
ficoms
imul
mov
cmc
mov
xchg
jnp
mov
pop
mov
lock
out
pop
jne
idiv
jb
daa
jns
push
fs
in
scas
repnz
and
mov
cld
xor
rcr
ret
inc
inc
testb
jg
fldln2
sbb
xabort
cli
fucomip
lea
jne
imul
xor
sar
mov
dec
cmp
add
adc
pop
adc
inc
rcl
sbb
xor
js
sub
xchg
and
xor
stos
mul
add
loopne
sbb
and
mov
into
inc
shlb
test
fs
aas
mov
je
jmp
jno
push
cmp
rolb
pop
and
sub
popa
movsb
adc
sub
jbe
pop
cmpl
sbb
pusha
or
jge
inc
push
mov
and
imul
adc
jne
jo
int
mov
ret
push
loopne
outsl
lcall
jno
cli
mov
stc
jno
rcrl
loopne
subl
fadds
fisubs
mov
imul
fwait
dec
pop
add
sbb
mov
ficoml
xor
cmpsl
mov
mov
fmulp
inc
fistl
bswap
fdivrp
push
daa
mov
inc
les
cmp
popa
push
sub
add
jecxz
dec
dec
test
iret
adc
pushf
push
inc
push
repnz
fimuls
cmp
cmp
push
mov
insb
pop
dec
xchg
ret
fnstcw
inc
sub
sbb
aad
add
divb
enter
pop
call
dec
addb
test
fisubrl
mov
push
lock
sti
aaa
bound
jb
fcompp
cwtl
and
adc
push
xchg
push
lock
std
mov
data16
pushf
and
inc
test
mov
ficoml
movsb
push
push
subl
in
xor
sub
adc
aas
inc
daa
mov
lds
movl
mov
cld
mov
and
push
cmp
int3
jg
and
fimull
push
inc
jae
cmc
lcall
sbb
mov
pop
out
mov
jle
xchg
add
cmp
dec
stos
iret
in
add
inc
hlt
mov
mov
shll
add
xchg
scas
hlt
sub
add
xor
mov
xchg
mov
push
inc
mov
loope
jp
data16
lret
stos
and
shrb
or
flds
sti
notl
stos
lea
lods
ret
dec
xor
jae
jg
mov
int
mov
jecxz
in
cmp
sahf
push
xchg
mov
push
jns
cmpsl
xchg
arpl
imul
fldenv
stos
pushf
sbb
sub
and
sbb
shll
pop
mov
test
fiaddl
add
push
cltd
xchg
mov
dec
xchg
cmp
mov
imul
mov
pop
mov
xchg
push
ss
les
pop
jl
sbb
lret
or
mov
in
xchg
jbe
cmc
testb
in
stos
loope
fwait
mov
jmp
daa
into
inc
cli
inc
imull
mov
lock
mov
dec
bound
movsl
lahf
or
jb
shrb
jle
dec
js
mov
movsb
call
aaa
xchg
ss
adc
pop
test
repz
lahf
test
ss
lods
or
add
mov
js
fdiv
sti
mov
imul
and
sub
pushf
test
addb
cmpsl
sbb
xchg
movsb
push
cmc
adc
inc
mov
daa
test
pop
ljmp
push
ret
cs
sub
loop
and
int
sahf
add
jo
icebp
xor
cmp
add
clc
adc
sbb
subl
stc
push
push
dec
mov
sbb
xor
pop
pop
mov
loopne
mov
in
aam
push
jno
push
jp
push
push
add
push
push
pop
xor
cmp
hlt
adc
xchg
shrl
push
lahf
call
or
xlat
rclb
popf
pushf
fidivl
mov
icebp
sub
out
outsb
into
cmpsl
pop
mov
inc
jg
pusha
cmp
popf
pop
xchg
stos
bound
cwtl
orl
mov
clts
in
or
and
ljmp
mov
call
adc
nop
mov
ss
cmc
cltd
lahf
fwait
jg
mov
popf
jns
test
mov
sbb
insb
add
inc
jns
cs
inc
jmp
and
mov
mov
sbb
movsl
outsb
add
in
fisubrl
add
add
mov
add
arpl
pop
jno
mov
fisttps
and
ljmp
shlb
clc
pop
sbb
aam
inc
push
mov
inc
xor
in
or
es
jb
sub
shr
stos
jno
fdiv
inc
js
jno
xchg
xor
movsl
xchg
iret
in
inc
mov
ja
jmp
nop
push
into
dec
sbb
scas
push
popa
push
xchg
jns
or
sbb
xor
adc
popf
sub
fsts
pop
mov
push
xlat
ja
mov
movb
push
in
xor
jo
ja
fcomp
inc
push
pusha
ret
cmp
pop
xchg
mov
inc
ljmp
jne
adc
lcall
mov
pop
mov
mov
aaa
aas
cli
add
pop
adc
inc
jge
repnz
call
push
mov
scas
xchg
addb
xor
xor
shlb
pop
bound
js
stc
or
mov
pop
push
pop
lcall
ret
mov
jbe
jne
pop
xor
or
stos
sbb
outsl
fsubr
mov
cmpsb
cmp
pop
out
xor
mov
nop
and
xchg
jp
loop
mov
xor
repnz
xlat
or
add
das
pushf
push
stc
cld
pop
jne
leave
inc
mov
lcall
push
scas
sar
sbb
insb
mov
pop
add
rcr
punpckhbw
loop
shl
lock
test
adc
lds
push
addr16
pop
push
xor
push
lret
scas
xor
jns
test
aad
stos
fsubr
xor
cmp
lahf
add
outsb
jb
push
mov
ja
pop
mov
enter
fistps
pop
lock
adc
or
mov
jo
dec
cmpb
sbbb
jmp
add
push
mov
out
jno
lret
call
movsb
inc
xchg
adc
dec
pop
fsubr
out
adc
loope
inc
push
pop
je
inc
pop
loope
cmp
inc
cmp
divb
cmpsl
loop
cwtl
out
or
sbb
stos
jp
jge
jp
cmp
pop
push
xchg
imul
xchg
fnstcw
cmp
or
scas
and
sub
mov
imul
fcompl
or
cmp
cld
flds
mov
jo
jo
mov
mov
cs
imul
jle
fdivrp
sub
cltd
or
jne
push
clc
out
cmpsl
mov
test
lret
xchg
into
jge
sbb
xor
push
mov
fnsave
out
sub
movsl
sub
fadd
in
cmp
ljmp
push
mov
fadd
std
movsb
mov
jl
out
push
mov
push
push
adc
pop
add
pop
div
fsubl
or
sbb
sub
cmp
fsubrl
jg
movsb
xor
mov
lahf
test
or
mov
and
scas
lea
insb
fcomps
or
lret
mov
insb
das
push
sbb
jo
jge
ja
sub
in
out
shrb
pop
inc
imul
out
cmp
int3
jb
imul
mov
pusha
push
fnstenv
fcoml
lds
pop
xchg
jecxz
testl
fildl
and
mov
gs
jae
loope
stos
mov
dec
out
jmp
xchg
pop
arpl
dec
inc
ljmp
jge
push
inc
adc
cmc
lret
cmp
jns
cmp
aas
dec
xchg
adc
cmp
sti
notl
call
je
pop
outsb
jne
sti
fildl
movsb
and
cmp
pop
pop
sti
cmp
inc
mov
jmp
xor
add
jle
aam
dec
mov
push
aaa
mov
or
shrl
daa
sub
cmp
mov
insb
adc
fidivs
push
adc
and
inc
push
ret
mov
das
fistpl
pushf
cld
sbb
jmp
or
dec
sbb
shll
adc
mov
xor
sbb
mov
test
out
scas
addr16
jno
mov
out
pop
sub
iret
sbb
mov
add
push
es
dec
insl
mov
adc
jl
mov
ljmp
add
movsb
decb
mov
push
mov
dec
pop
sub
cli
dec
addr16
push
cld
xor
cmpb
jno
jns
add
push
xor
cltd
imul
xor
sub
rcrl
pop
jp
jp
and
mov
rep
mov
subb
adc
pop
es
addr16
leave
repnz
lods
stc
pop
jge
push
pop
popa
mov
aas
pusha
push
stos
ds
pop
add
adc
icebp
pop
aad
pop
je
test
cmp
inc
and
xchg
sub
adc
mov
lods
mov
in
hlt
push
fnstenv
pusha
std
or
hlt
rorl
push
mov
aaa
push
in
lret
jno
xlat
dec
jnp
imul
xchg
push
mov
add
dec
shr
inc
sbb
mov
adc
add
ret
test
cmp
push
insl
int3
mov
xor
dec
mov
cltd
out
hlt
xchg
cmc
sub
cmp
sub
sbbl
call
loope
mov
out
loop
sub
into
sti
sub
push
ja
push
or
or
pusha
test
rcrl
into
mov
outsb
mov
sbb
cmp
jge
loopne
add
sbb
repnz
cltd
data16
lahf
add
or
jl
xchg
std
test
ds
fistl
xchg
popf
test
aad
jmp
fcoml
into
movsb
icebp
imul
sahf
std
fistl
inc
lret
loopne
ds
add
and
dec
lret
sbb
or
ja
shrl
sbb
sti
scas
pushf
popa
add
sub
jne
jns
sbb
out
cld
or
inc
and
js
add
mov
or
cmp
mov
lahf
fstl
stos
ja
dec
ja
shrb
push
mov
xlat
jmp
pop
shrb
int
int3
adc
pop
sub
xchg
jp
or
out
mov
stc
jmp
lock
cld
out
rorl
dec
aam
gs
ficoml
or
movsl
dec
jg
push
pop
sbb
push
mov
idivl
aaa
xchg
fldcw
or
ljmp
sbb
mov
inc
xor
outsl
mov
push
mov
outsb
mov
loope
xchg
push
mov
clc
leave
xor
lock
ficoml
jl
or
inc
adc
pop
sbb
xor
lds
lret
sahf
pop
fucom
jbe
mov
xchg
ret
sub
es
inc
arpl
hlt
xor
std
loopne
mov
adc
mov
outsl
mov
push
int
mov
ds
insl
mov
push
loop
mov
push
cmp
push
jl
inc
jle
arpl
cmpsb
popf
es
xchg
push
pop
mov
cmp
xchg
sbb
adc
shll
arpl
or
imul
cld
pop
jno
xchg
push
sbb
test
js
pmuludq
push
xor
or
gs
cmp
out
sbb
mov
push
push
in
mov
lock
outsl
std
cs
fimuls
in
add
push
popa
inc
push
push
add
in
into
cmc
adc
int
mov
jle
xchg
or
hlt
jmp
ficompl
fidivrs
push
cli
fstps
outsl
sti
add
jg
xchg
add
cmpsb
adc
adc
cmp
int3
lret
in
push
sub
push
rcrl
dec
incl
lcall
jg
pop
stos
mov
ljmp
dec
loopne
stos
push
in
lods
jmp
cmpsb
iret
bound
into
push
call
jecxz
jno
movl
adc
shrb
arpl
in
or
aad
into
add
mov
push
cltd
std
stos
shll
lahf
outsb
cmc
sub
inc
add
jbe
push
sub
into
pop
inc
xor
aas
fs
or
imul
push
in
lret
cmp
inc
int
aam
daa
cmc
xchg
and
dec
shll
mov
mov
xchg
mov
les
jbe
enter
xlat
leave
mov
xor
and
out
or
test
push
or
outsl
outsb
pop
sub
pushl
mov
inc
xchg
sub
or
sbb
push
xchg
nop
adc
inc
arpl
std
sbb
inc
and
sti
cmpsw
cmp
xchg
hlt
lahf
inc
fcoml
xchg
std
in
push
adc
adc
jns
aaa
sub
andl
jne
xor
jne
pop
and
out
into
bnd
sbb
mov
sbb
xor
sbb
add
arpl
out
cltd
xchg
inc
pop
out
daa
jo
add
aas
mov
pop
dec
and
push
sub
dec
andb
and
or
push
jle
loop
push
stos
scas
mov
cwtl
cs
arpl
mov
or
out
jno
sub
inc
or
mov
movsb
pushf
mov
sub
cmp
jnp
push
mov
mov
dec
mov
imul
out
or
in
ds
adc
popf
loope
je
xor
pop
push
dec
jne
ja
or
sub
adc
int
jns
adc
lretw
in
insl
cmp
popl
adc
movaps
scas
dec
repz
int3
fcomip
bound
push
sti
stos
lcall
add
or
mov
lret
adc
xchg
pop
xchg
xlat
mov
pop
push
mov
xchg
pop
mov
push
enter
cltd
xor
test
fnstcw
rcrb
xchg
mov
loope
pop
pop
push
push
std
sub
aas
xlat
test
lds
movsl
out
sub
adc
jle
push
dec
jo
pop
ret
push
mov
cmp
mov
out
mov
aam
shl
test
mov
add
jp
push
sub
xchg
jo
in
mov
inc
jo
add
jne
pop
lods
cmp
pop
sbb
push
inc
dec
ror
xor
shlb
xchg
mov
sub
lock
or
gs
sub
lods
adc
mov
ret
mov
test
enter
outsl
jnp
push
sbbl
aam
pop
repz
aad
mov
mov
mov
and
pop
mov
cs
mov
std
test
mov
jo
inc
pop
mov
gs
mov
sti
sub
movsb
jge
js
xchg
adc
and
mov
imul
add
sub
push
icebp
loopne
in
scas
and
jnp
idivb
inc
scas
sahf
adc
sub
inc
outsb
xor
dec
sbb
pusha
xchg
mov
or
dec
movsb
sub
int3
shrb
adc
sbbl
push
xchg
xor
test
out
ret
mov
fxch
push
lahf
push
push
jge
mov
adc
xchg
dec
hlt
das
xlat
stc
adc
icebp
out
mov
pop
loope
pop
xchg
push
mov
loop
jge
test
out
push
shll
sub
xor
pop
repnz
push
sub
fsts
rclb
push
rorl
notl
es
mov
cwtl
out
mov
dec
rorl
leave
sbb
test
fiaddl
pop
sbb
cmpb
movsl
loopne
sbb
mov
aam
fcompl
or
inc
jp
push
add
sbb
fcmovnu
cwtl
inc
mov
scas
nop
pop
fs
sbb
test
pop
scas
xor
lcall
adc
mov
cmp
jge
cmpl
adc
mov
scas
ffreep
add
mov
push
or
rorl
xlat
in
inc
aaa
icebp
xor
in
dec
cs
sub
push
pop
bnd
insb
cmovg
mov
cmpb
inc
ja
jno
std
aad
in
pop
testb
dec
ljmp
icebp
pslld
js
pop
xor
and
pop
xchg
dec
cmpl
repnz
inc
push
jnp
ss
adc
fwait
lods
push
loop
jecxz
pop
addr16
outsb
adc
lods
cmp
sbb
cmp
pop
pop
or
mov
dec
mov
clc
inc
nop
pop
jns
popa
inc
pop
sbb
jno
xchg
push
stos
sub
test
xlat
xor
pop
adc
js
out
shlb
dec
sbb
sbb
pop
xor
ret
sub
pop
inc
inc
cmp
into
lea
pop
fwait
mov
out
jecxz
jecxz
scas
mov
mov
ja
add
nop
or
inc
add
aad
cmpsl
popf
xchg
jne
xchg
inc
leave
push
out
dec
pop
es
gs
negb
pusha
rolb
scas
jbe
mov
sbb
push
paddusw
shrb
mov
ds
xor
iret
je
xchg
out
into
cs
data16
cld
rolb
inc
mov
push
mov
or
pop
mov
rol
test
lret
pop
aad
fldenv
sti
sahf
push
fnstcw
out
dec
ja
push
das
in
xchg
aaa
int3
adc
cmpsb
dec
int3
into
dec
pushf
xor
jle
add
mov
dec
xlat
push
sbb
cmp
mov
add
shll
xor
cmove
jo
xlat
imul
shr
jg
mov
pusha
push
fidivl
inc
repz
or
push
jp
fistpll
in
inc
xor
cmp
push
push
decl
mov
mov
fdivs
fldt
cmp
clc
mov
cwtl
test
dec
mov
push
dec
cmp
xchg
je
add
scas
add
pushl
mov
pop
stos
xor
mov
in
jecxz
call
nop
mov
mov
test
imul
icebp
hlt
add
jns
xor
xlat
test
lret
clc
inc
into
cmpsb
and
pop
js
add
inc
xor
adc
mov
loop
call
pop
scas
orl
cmpsl
cmpl
sub
lret
push
xchg
inc
arpl
pushf
push
int3
cltd
iret
jmp
mov
popa
movsb
fldpi
mov
cwtl
sbb
dec
sbb
rclb
pop
inc
pop
cmp
outsb
jb
fnstcw
test
mov
mov
ds
and
jle
push
int
xacquire
mov
or
push
shrb
clc
js
data16
lret
push
and
xchg
mov
movsl
hlt
flds
fldenv
mov
pop
jecxz
adcl
bound
adc
xchg
call
loope
ljmp
fstl
mov
jo
movsb
mov
or
dec
sub
movsl
fstl
mov
aam
insl
sub
adc
jo
xor
js
movl
fbld
xor
cmpsl
ret
and
xchg
jmp
rcll
or
or
jne
outsw
pushf
adc
stos
cld
movsb
mov
xor
cmp
cmp
loope
lret
xchg
xor
cmpsl
cwtl
xchg
adc
inc
in
ss
cmpb
add
dec
jmp
in
popa
out
cmp
and
mov
lea
mov
data16
out
sbbb
jp,pt
mov
push
testb
sbb
fisttpll
mov
dec
push
mov
arpl
and
jmp
sub
inc
test
and
dec
adc
mov
loop
mov
mov
shlb
pop
int
std
jns
adc
std
cltd
out
std
mov
xor
js
push
sub
out
sti
subl
sub
mov
addr16
cmp
pop
pushf
enter
stc
out
stc
jnp
shr
xor
and
iret
mov
cmp
cmp
jge
pop
sbb
jge
push
jae
or
cmc
mov
add
fidivl
push
jge
add
movsl
movsl
aad
sbb
jl
enter
adc
or
pop
and
das
dec
add
in
enter
int
push
test
xor
cmpsl
test
jmp
fisubl
push
das
leave
cmovnp
lock
repnz
push
adc
xchg
rclb
fadd
jmp
push
pop
jb
mov
and
sbb
loop
mov
cmp
outsb
rol
inc
icebp
dec
jmp
lea
push
cmp
bound
adc
pop
insl
out
add
test
mov
aaa
and
mov
pusha
cmpb
out
xor
xor
cwtl
dec
xor
adc
js
or
cmp
nop
inc
stos
mov
in
adc
push
dec
clc
in
inc
jecxz
and
nop
nop
pop
lret
cmpsl
repnz
pop
xor
shrb
ret
push
shl
add
shlb
adcb
sub
out
ficoml
push
lret
aaa
pop
lcall
in
loopne
and
das
fiadds
mov
cmp
sub
notl
cmc
movsb
mov
lods
stos
call
test
jge
les
mov
scas
shll
loop
jge
rclb
xchg
sarl
outsb
imul
pushf
mov
fistps
das
push
or
mov
loopne
push
repnz
push
aam
and
lret
mov
into
mov
add
pop
mov
xchg
addr16
sti
pop
jmp
jp
es
jge
fstpl
sub
mov
jge
xchg
dec
xlat
mov
push
pop
movsb
mov
sbb
jne
fcmovne
les
mov
and
xor
ljmp
int
xor
je
push
out
clc
aaa
scas
or
fs
cltd
sub
xchg
into
mov
dec
cmc
dec
lret
pop
cmp
sarl
inc
adc
aas
add
mov
sub
mov
and
lret
fisttps
lcall
sub
mov
cmp
sahf
shr
scas
sub
lds
mov
ss
scas
int
setbe
enter
mov
jg
and
pop
testb
dec
leave
popf
adc
xchg
and
push
mov
mov
gs
stos
je
enter
stos
and
pop
sahf
sub
sub
sahf
sub
insb
aam
mov
sbb
mov
inc
nop
mov
mov
out
es
inc
notl
sbb
ficompl
xor
inc
je
xchg
jmp
and
sti
sbb
fucomip
mov
cltd
and
loopne
xchg
add
mov
fiadds
mov
sar
testb
and
xchg
and
int3
xor
loope
xchg
in
mov
pop
mov
add
add
mov
mov
and
pop
lret
stos
jecxz
or
add
ret
adc
inc
pop
cmpsb
pop
outsb
cltd
inc
sub
mov
dec
and
xlat
and
mov
xchg
push
adc
ret
mov
cli
test
out
in
insb
rol
daa
mov
mov
mov
mov
aaa
loopne
jnp
cmp
mov
popa
test
movsl
add
loop
outsb
in
aad
and
xlat
cltd
mov
shrb
jne
out
and
mov
cmp
test
xchg
daa
scas
sarb
stos
fistps
pop
push
fdivrl
pop
sub
push
in
push
sub
mov
inc
stc
pop
fdivp
cmpl
lret
add
nop
cmpsb
arpl
arpl
xor
movsb
lret
repz
dec
xchg
testb
xchg
cmp
xchg
xor
jmp
mov
jns
pop
mov
push
or
and
mov
outsl
pop
loope
adc
ror
pop
pop
cmpsl
xor
pop
push
mov
adc
arpl
dec
inc
inc
lret
fs
jo
idivb
imul
dec
mov
aad
xlat
inc
and
dec
xchg
sahf
push
mov
icebp
cmc
jo
not
mov
nop
cmp
in
fbld
imul
pop
inc
and
jecxz
lock
cmp
push
mov
fistps
mov
xchg
jbe
daa
jne
repz
test
arpl
cmpl
insl
pop
loopne
or
xchg
fbld
sahf
loopne
or
iret
fstpt
aad
fldt
rclb
mov
aaa
aaa
rorl
stc
push
call
ljmp
inc
daa
stc
dec
adc
je
adcb
push
xor
and
pop
cmp
push
mov
xor
add
push
icebp
and
imul
stos
cmc
dec
cltd
and
int
arpl
addb
lcall
test
movsb
popf
lcall
adc
push
or
add
icebp
inc
out
inc
and
data16
fistpl
mov
subl
or
es
dec
test
mov
push
outsl
sub
sbb
jmp
ja
fistpl
or
sbb
lcall
and
out
jmp
or
fbstp
fbld
inc
or
jecxz
xor
mov
popa
fdivrl
pop
sub
sub
jge
push
test
in
cmc
out
add
stos
inc
and
js
cmp
push
cmpsb
out
lds
adc
xor
mov
jp
cmc
lock
test
je
cmp
sub
cld
sbb
dec
aas
hlt
inc
pop
int3
adc
inc
lods
ja
pop
jecxz
gs
pop
push
push
push
fdivr
pop
jae
popf
sub
push
mov
icebp
mov
jno
imul
bound
inc
pop
aad
inc
adc
fwait
aas
out
push
lds
add
mov
push
loopne
pusha
sbb
push
call
jne
int3
mov
ss
int3
mov
fsub
mov
dec
sbb
mulb
xor
push
xlat
aas
sbb
into
push
jmp
mov
and
or
pop
jne
les
mov
or
jl
fistl
out
js
int3
imul
mov
icebp
jle
sub
inc
gs
xchg
shll
fsts
enter
fldt
xor
in
mov
shrb
roll
jno
mov
sbb
pop
mov
adc
pop
adc
movsb
fs
adc
icebp
out
gs
mov
lock
and
repz
mov
leave
lds
push
std
cmc
mov
rorl
and
adc
jmp
adc
mov
push
outsb
mov
mov
outsl
addr16
roll
xorb
mov
or
bound
jl
repz
fisubrl
jmp
mov
in
adc
xchg
jle
mov
pop
stos
push
jno
cmpsl
jne
mov
ljmp
mov
add
ja
xchg
shl
mov
nop
shlb
sbb
xchg
pop
adc
loope
jl
aad
rorl
or
mov
lcall
lea
pop
cwtl
fidivl
loop
les
adc
test
mov
xor
fstpt
iret
push
loopne
dec
dec
sbb
repz
mov
pop
jmp
cmp
push
mov
jmp
dec
je
mov
mov
pop
xchg
sbb
pop
in
call
arpl
mov
inc
shll
in
push
push
scas
adc
cmpsl
mov
lret
jno
inc
lret
into
ror
dec
cmpsl
inc
dec
sti
cmpsb
shlb
out
mul
pop
fcmovb
push
loopne
ficoml
sub
or
mov
push
xor
ror
outsb
orl
cs
push
inc
call
and
arpl
test
xor
mov
xor
push
inc
sbbl
ljmp
jne
xchg
push
dec
jae
xor
add
dec
pop
and
jae
inc
cmpsb
xchg
sbb
das
push
dec
xor
ja
rcl
je
insl
scas
or
movsb
pop
iret
xchg
test
arpl
sbb
and
pop
and
or
push
cld
or
popf
daa
ror
out
and
sbb
pop
xchg
jle
jl
aas
sub
xchg
ret
sahf
mov
add
pushf
xchg
lcall
pop
push
jecxz
push
mov
xchg
mov
jmp
out
cs
or
incl
imul
inc
mov
xor
push
in
pop
add
push
xchg
in
mov
xor
pop
mov
shll
mov
sbb
js
fpatan
mov
mov
cld
mov
mov
fsubs
aas
mov
imul
pusha
mov
insb
or
xchg
cld
scas
mov
sahf
mov
pushf
dec
mov
mov
dec
jecxz
inc
mov
stos
fbstp
pushf
mov
mov
adc
inc
popf
lret
movsb
lods
stos
dec
frstor
cmp
mov
nop
adc
test
out
push
xchg
out
ret
out
pop
dec
xor
es
daa
das
andl
jno
lret
push
mov
adc
cmpsb
or
mov
cli
iret
push
inc
jb
lea
pop
in
jno
xchg
pop
testl
xchg
add
mov
call
in
xor
xlat
pop
jno
or
insl
sbb
cwtl
sub
test
push
cmp
push
sub
jmp
pop
es
jbe
push
scas
mov
std
jbe
shrl
outsl
rclb
adc
mov
mov
xor
pop
jl
shrb
cmpsb
mov
push
jge
rorb
xchg
dec
inc
inc
push
add
mov
add
mov
pop
mov
cmpsb
inc
rorb
insl
ja
sar
pushf
mov
ret
jns
mov
js
sarb
lcall
push
in
jmp
adc
fmul
add
mov
int
jnp
insb
imul
add
ja
adc
or
rcll
mov
add
jb
jle
ds
popl
in
dec
in
cmp
fimull
push
addb
insl
cwtl
jecxz
inc
push
ljmp
iret
nop
cmp
push
imul
imul
mov
or
lcall
add
and
cmpb
jo
pop
loopne
mov
int3
jo
imul
andl
and
push
cmp
lcall
ss
mov
sbb
xchg
mov
mov
add
sbb
jo
cli
xchg
cmp
es
fisubs
sub
adc
loopne
jnp
and
out
jae
xchg
outsl
mov
adc
pop
lret
sbb
jae
sub
icebp
cs
jo
das
or
xchg
jp
std
int
mov
in
imul
jo
rcr
jne
sub
xor
data16
movsb
fisubs
jecxz
inc
test
stos
pop
push
and
fwait
mov
jge
sub
dec
adc
lods
out
lcall
mov
fsub
mov
movsb
lahf
push
testb
sub
inc
into
repnz
test
test
push
push
or
fwait
lock
lret
xchg
lret
ror
leave
jb
and
pop
jo
mov
xchg
int
and
xchg
jo
pop
shll
stos
mov
ds
inc
adc
js
loope
xlat
xchg
fistl
mov
xor
inc
push
std
shl
mov
dec
mov
cmp
xchg
sbb
fsubr
test
pop
add
push
add
mov
out
fmuls
sbb
mov
mov
aaa
ss
insl
fsubl
push
push
jp
orb
mov
or
daa
mov
push
inc
dec
mov
fcmovb
inc
adc
mov
test
addr16
test
imull
cmp
push
mov
sbb
insl
mov
jmp
xchg
cmp
adc
dec
roll
dec
in
loopne
rcrl
sbb
push
fidivrl
sub
cld
std
out
inc
bound
push
fwait
xor
push
inc
mov
pop
mov
test
add
jb
pusha
inc
push
or
arpl
and
mov
cmp
lods
inc
and
or
mov
mov
lock
adc
cltd
adc
adc
push
mov
mov
loop
stos
call
pop
mov
leave
mov
ja
mov
cli
shrb
out
sbb
lcall
pop
cltd
push
xchg
and
sbb
jge
add
aad
pop
xor
xor
mov
jnp
jno
dec
mov
mov
mov
add
movsl
jno
mov
sbb
cmp
lahf
in
lcall
es
popa
mov
mov
push
mov
pusha
dec
aad
fadd
jae
dec
loop
jne
scas
jnp
inc
pop
fs
add
iret
dec
stos
pop
mov
inc
in
xor
je
mov
lcall
stos
push
xchg
into
and
sub
jge
pop
xchg
cwtl
test
jae
test
pushf
cmp
sbb
pop
jb
mov
jecxz
jecxz
std
or
mov
subl
mov
pushf
shlb
push
xchg
arpl
mov
sub
fisttpl
cmp
push
cmp
icebp
and
test
scas
mov
insb
or
cmp
pop
mov
in
hlt
cli
jo
lods
sbb
adc
scas
sti
rcl
ss
mov
nop
addl
fs
adc
xlat
cli
pop
loope
leave
sub
sub
cmp
cmp
add
xchg
sub
ds
sub
cmpsb
or
popf
jmp
inc
test
scas
cmc
lret
inc
xor
fnstsw
dec
mov
es
and
nop
shlb
jne
cmp
or
ljmp
xchg
stc
cmp
cld
sub
out
jns
lcall
adc
js
pop
mov
in
and
mov
mov
fisttpll
mov
cld
jbe
enter
mov
lea
pop
in
out
mov
jne
subl
idiv
nop
mov
pop
add
lds
push
cltd
test
insb
push
test
testl
lahf
mov
add
jle
and
shlb
out
outsb
gs
mov
sub
mov
dec
push
rol
jmp
pop
clc
mov
jl
js
psrlq
in
pusha
mov
shl
js
rcr
int3
or
outsb
inc
push
lock
lea
mov
mov
cmpsl
mov
outsb
or
in
popf
insl
mov
or
add
dec
mov
sub
enter
lods
test
pop
repz
lea
lods
enter
and
pusha
push
idivl
pop
lahf
fsubs
dec
mov
fisttpl
fildll
mov
mov
imul
sti
xchg
jle
mov
sbb
jne
notb
jne
mov
add
popl
mov
scas
decb
pop
jnp
push
push
pop
pop
push
stos
fcomip
and
mov
mov
cmpsl
les
mov
xchg
xchg
push
inc
and
out
xor
stos
sub
and
mov
cmp
mov
lock
stos
push
adc
repnz
mov
adc
xor
loope
mov
pop
scas
jle
xor
add
jne
js
dec
cmp
mov
dec
sub
arpl
mov
push
es
inc
rcrb
xchg
or
cmpsl
inc
rcrb
psubsb
and
aas
inc
imul
leave
pop
popa
popa
mov
pop
xchg
push
cltd
ret
sbb
xlat
sbb
dec
loopne
add
xchg
jne
mov
cmpl
rclb
in
xor
add
lods
jge
stos
mov
outsb
push
sbb
fldl2t
or
leave
cmp
fistl
adc
js
mov
jmp
xchg
bound
jb
test
jb
adc
je
test
sbb
push
sub
imul
loop
push
mov
xchg
mov
xor
add
cmp
jl
in
negb
pop
fwait
lea
into
xor
jmp
jge
addr16
mov
fisubrs
mov
mov
pushf
divb
pop
outsb
dec
in
mov
push
inc
dec
xchg
xchg
xor
pop
add
sub
jns
pmulhw
push
dec
cmc
mov
scas
jp
out
cmp
imul
jl
arpl
jp
mov
pop
xor
pop
fildl
jne
add
lret
mov
insb
int
mov
ror
xchg
xchg
movsb
insb
adc
imul
push
pop
ret
jmp
push
inc
adc
cli
and
mov
push
cmc
push
mov
push
mov
xor
push
stos
jae
push
mov
inc
repz
fiaddl
addb
cmc
mov
cmpsl
lahf
jnp
push
loopne
rcr
xor
orw
sbb
inc
and
cmp
stos
jp
ss
adc
sbb
adc
ret
mov
pusha
adc
push
mov
cmpsl
xlat
movb
push
repnz
dec
lds
mov
js
sbb
addr16
xchg
cwtl
imull
fwait
mov
adc
je
mov
insb
clc
shrl
xchg
pop
jno
sub
xchg
loopne
mov
jbe
repz
cmp
out
xchg
in
out
imul
mov
mov
or
cmp
xor
sbb
xor
mov
out
outsl
adc
fisubrl
pop
or
sbb
or
mov
xor
mov
insb
cld
outsb
and
in
jne
stos
xchg
or
dec
mov
push
jl
cwtl
sbb
xchg
outsb
test
out
sar
push
sub
xlat
jo
ret
add
aad
pop
in
aas
mov
inc
xchg
shr
stc
outsl
mov
ret
fisubrl
dec
sahf
pop
mov
push
push
push
je
imul
leave
adc
aad
decl
adc
loop
adc
hlt
jle
cmpb
sbb
mov
sub
cmp
aas
loopne
inc
add
test
outsl
mov
lea
bound
in
dec
sbb
data16
push
bound
push
or
ljmp
aad
fwait
shll
pusha
mov
inc
loopne
xchg
cmp
sbb
int
jbe
pop
daa
push
cmpsb
mov
mov
sbb
xchg
aad
aas
nop
rorb
mov
mov
mov
mov
outsb
cmc
outsl
lock
shl
mov
hlt
sbbb
sbb
inc
enter
or
rcl
aas
aad
loope
lahf
sub
bsf
mov
aad
pop
mov
je
cmp
out
sub
ds
out
jmp
jecxz
in
or
cmp
add
cmp
pusha
cmpsl
in
nop
dec
aam
mov
cli
xchg
xchg
daa
scas
and
xor
out
and
scas
adc
repnz
test
adc
aaa
pushf
or
inc
rclb
inc
into
sub
cmp
in
ret
sbb
jge
arpl
sahf
push
xchg
mov
mov
mov
ja
lods
loopne
stc
mov
outsl
cmp
bound
lcall
xchg
dec
fmull
sub
xchg
imul
testl
stos
es
push
adc
pusha
icebp
in
lahf
data16
xor
pop
inc
lahf
cmp
call
pop
mov
insw
shll
push
repz
jmp
add
lret
pop
dec
loopne
and
notl
jge
push
or
fnstsw
jge
movsl
mov
repnz
add
pop
daa
aam
cmp
incl
and
js
push
stos
pushl
shl
ja
adc
pusha
test
cmp
scas
push
cwtl
push
rcr
stos
notl
dec
add
dec
fstps
cmp
dec
inc
mov
gs
je
jbe
out
loop
adcb
out
add
enter
jle
xor
cld
shll
scas
hlt
mov
mov
sti
icebp
aas
test
addr16
lahf
call
pop
stc
sarl
or
fwait
dec
out
fcoml
sbb
gs
arpl
xchg
or
jno
jmp
pop
fdivr
dec
mov
imulb
dec
sub
les
mov
lret
adc
xor
jne
pop
cld
mov
push
sub
mov
jnp
fidivl
cli
fdivl
hlt
cwtl
xchg
arpl
mov
pusha
or
push
mov
adc
ljmp
mov
add
dec
pushf
rcll
cmp
sar
into
mov
ret
mov
fwait
sub
or
push
fbld
je
aam
sub
stos
xchg
jg
sub
or
loop
lret
jecxz
adc
xchg
divl
jg
push
mov
nop
clc
pop
adc
icebp
arpl
cmpsl
sarb
jnp
rorb
xor
add
scas
adc
fdivrs
mov
je
xchg
and
les
push
push
fisubs
push
aaa
cmp
shll
sbb
movsb
and
add
loope
or
or
int
mov
scas
bndstx
mulb
push
mov
dec
hlt
sbbb
fstpt
adc
xchg
push
adc
pushf
mov
inc
push
das
jb
sub
ficompl
sub
fistpl
mov
xlat
mov
push
sbb
push
adc
daa
mov
push
pop
cwtl
sub
pop
scas
sbb
jae
cmp
push
insl
xchg
push
shlb
jnp
mov
das
pop
repnz
std
in
jl
push
cmpsl
push
es
lock
xor
mov
or
push
pop
loopne
inc
and
and
xchg
stos
idivl
cmpsl
sbb
push
loop
out
xchg
out
pop
out
dec
jge
popa
ss
arpl
out
adc
pop
or
sub
add
xchg
pop
ffree
ja
xchg
xchg
test
arpl
ljmp
mov
rorb
jno
scas
loop
ja
call
movsb
mov
mov
xor
out
sub
adc
cmp
sub
pxor
jnp
mov
add
push
push
fs
cmp
sbb
sahf
xlat
lcall
mov
clc
test
fistpl
sbb
xchg
inc
aam
ret
imul
fdivrl
sbb
inc
dec
stos
jecxz
cs
mov
sti
stc
pop
jmp
or
daa
mov
sub
xchg
sbb
pop
jmp
aas
ror
aaa
jl
xchg
jnp
test
mov
sbb
stc
dec
aaa
cltd
inc
pop
mov
add
or
push
jp
dec
fwait
je
xchg
daa
mov
scas
into
int
jo
iret
mov
pop
dec
idivl
into
lods
int3
sti
pop
insl
scas
stc
in
add
push
jmp
leave
inc
jns
scas
movsl
inc
jge
jo
and
es
test
sub
jmp
pushl
mov
mov
data16
dec
fdivs
jns
cmp
pop
and
or
cmp
mov
and
js
enter
or
jl
std
lret
xchg
in
xchg
or
call
or
jno
xchg
xchg
push
xchg
lahf
adc
movsb
cli
cmp
in
push
push
lods
pop
stc
mov
iret
in
mov
aam
cmc
test
je
in
addr16
mov
mov
rcl
push
int3
in
fsubl
cmova
mov
and
lock
mov
inc
mov
sub
add
outsl
insl
fs
stos
scas
jmp
popf
sbb
out
mov
mov
sbb
into
or
dec
ja
adc
sbb
and
or
sub
ret
enter
fwait
or
leave
push
xor
fsubp
insl
stc
inc
out
not
add
int3
es
test
jo
mov
cmc
jae
push
pop
enter
mov
push
sbb
adc
inc
sbb
mov
mov
or
in
xchg
sti
in
mov
xchg
in
popf
fists
sbb
push
cli
dec
mov
loop
xor
movl
sub
ret
sahf
mov
insl
inc
xor
loop
leave
mov
mov
mov
xor
pop
xchg
ficoms
push
in
es
shr
pop
push
lcall
sub
mov
je
repnz
shll
mov
and
mov
hlt
popf
insl
cmpsb
jecxz
jg
in
shlb
daa
out
loopne
or
out
lock
repz
icebp
push
ret
lret
negb
xor
mov
inc
xchg
out
leave
jp
int3
mov
in
lods
jp
push
inc
jne
mov
stos
movsl
imul
push
ss
inc
rcr
and
or
scas
lods
js
es
inc
leave
pushf
fisttpl
push
outsb
ljmp
lcall
inc
inc
sti
out
lret
cmp
hlt
pop
insl
lds
dec
xor
cmp
inc
aad
inc
les
or
add
popa
pop
jl
adc
mov
bound
insl
jge
decb
mov
and
imulb
mov
mov
ret
out
push
fsubrs
andl
dec
jmp
add
dec
out
cmp
mov
xchg
stos
icebp
adc
lret
mov
aaa
mov
mov
jo
loopne
jecxz
scas
sahf
mov
xchg
lret
lcall
add
imul
jp
inc
mov
adc
jnp
xchg
mov
outsb
pop
sub
or
add
movsl
ljmpw
ret
shll
std
cmp
icebp
jbe
cmp
mov
imul
shrl
notl
movsb
xor
addr16
shlb
ret
lock
xor
loop
arpl
mov
setp
xchg
sbb
out
enter
push
icebp
subb
cmp
and
and
mov
stos
pusha
dec
add
xchg
div
and
xor
jmp
out
daa
and
or
iret
mov
inc
test
lahf
xchg
ret
cmpsl
jne
and
push
fisttps
sub
enter
pop
aad
dec
adc
ds
es
xor
out
sub
ret
mov
scas
jecxz
mov
imul
or
popa
pop
call
add
jb
xchg
xchg
inc
lds
data16
mov
xchg
and
push
jl
xlat
rolb
scas
sbb
in
xchg
roll
push
jno
xchg
xchg
cmp
push
and
hlt
push
loop
push
sub
adc
decl
push
dec
xlat
mov
mov
mov
inc
push
mov
mov
push
cmp
inc
adc
xor
mov
mov
daa
xchg
int
sub
daa
or
cmc
aaa
push
sbb
fcmovbe
mov
cmp
loop
cmp
dec
dec
mov
aam
jg
add
cmc
shlb
or
mov
or
shll
pop
pop
fcmovbe
push
mov
jle
mov
ja
adc
pop
pushf
ljmp
jl
outsb
stos
sahf
cs
scas
mov
enter
cmp
sub
mov
insb
hlt
sub
in
cmp
pop
jmp
das
mov
ret
test
mov
cwtl
pop
test
aam
les
adc
sbb
mov
xchg
lea
scas
les
loopne
aad
lcall
dec
dec
rep
dec
cmpsb
push
fcmove
icebp
inc
inc
in
sbb
push
adc
xor
sbb
or
ljmp
jmp
xor
push
aaa
pop
mov
jp
pop
lods
mov
mov
pop
inc
add
mov
sub
es
shrl
xchg
out
cmp
icebp
popf
pop
inc
add
xor
inc
pushl
out
mov
sti
popf
push
bound
das
rolb
fsub
sbb
mov
cmpsb
clc
cld
imul
bound
pop
push
mov
call
mov
mul
lret
inc
dec
aad
cmc
sbb
mov
adc
stos
das
jge
jle
std
adc
iret
push
hlt
in
ss
inc
jbe
pop
and
int
add
pop
xchg
pushf
lods
jg
aad
pusha
sub
ss
jp
std
sbb
in
rclb
cld
pusha
cmpsl
shr
sbb
mov
sub
jnp
out
fcmovnbe
fprem1
inc
int3
mov
rcr
rcll
insl
rolb
xchg
pushf
cmpsl
jecxz
imul
test
xor
xchg
lret
inc
into
adc
hlt
and
push
fisttpl
sahf
shll
lret
cmc
icebp
loope
clc
popf
add
loop
das
movsl
les
fildll
jo
fildl
cmp
jo
mov
lods
xor
enter
imul
dec
stos
inc
stos
cmpsl
or
add
ljmp
sbb
jmp
inc
les
nop
sbb
bound
stc
fs
xchg
test
mov
adc
and
mov
ja
sarl
in
push
int3
mov
adc
les
js
mov
out
cld
push
push
lcall
ss
inc
fcompl
dec
jmp
je
cmp
lret
mov
mov
mov
adc
lods
scas
ljmp
fbld
fistpl
cmpsl
das
ss
or
xor
imul
dec
push
push
movsb
decb
stos
clc
and
and
test
add
xlat
rclb
add
sahf
add
mov
sub
addr16
pushf
aad
pop
mov
insb
xor
mov
sbb
fistpl
jl
mov
push
push
fildll
mov
sbb
je
mov
and
or
xor
pop
out
and
loope
scas
outsl
push
cmp
mov
out
dec
and
icebp
es
xchg
insb
repnz
mov
xchg
jg
pusha
lahf
adc
jp
dec
mov
xor
xlat
idivl
xchg
movsb
imul
aad
mov
lods
pop
add
in
and
jo
xchg
or
es
sub
lret
in
aas
inc
adcl
pop
and
imulb
nop
xchg
negb
mov
stos
shl
in
xor
xor
cmp
cli
inc
aad
inc
xor
jb
or
mov
pop
inc
push
push
pop
fildl
pushf
xlat
loope
push
sti
lea
aad
fs
fsubrl
add
or
inc
mov
shll
mov
movsb
pushl
xchg
lock
mov
xchg
gs
repz
out
xlat
mov
cli
adc
enter
mov
or
pop
push
adc
in
push
aam
fdiv
cmp
mov
cltd
mov
push
jmp
lods
and
loopne
push
adc
arpl
loopne
mov
cmp
bound
sub
sbb
adc
ret
mov
addl
or
stc
scas
add
std
mov
loopne
loop
fwait
xlat
mov
outsl
cmp
mov
cltd
jge
aaa
xor
jl
shrl
xor
jle
dec
pop
insb
adc
adc
adc
popf
adc
shr
sbb
loop
lahf
pop
sbb
ficompl
sbb
cmpsl
pop
data16
mov
movsb
cmc
or
fwait
leave
inc
xchg
ret
dec
jmp
notb
movsl
out
jno
dec
orl
add
seto
outsl
cmpsb
pushl
orl
test
push
push
and
lret
enter
mov
jl
stos
aaa
cmp
incl
or
jns
or
aad
ljmp
test
aaa
mov
int
or
loope
jnp
push
lods
in
inc
ja
ffree
xchg
cmp
mov
xor
sbb
push
dec
xlat
adc
jne
gs
push
les
mov
jg
and
icebp
sbb
test
pushl
jg
add
add
sbbl
aas
stc
sub
outsb
mov
and
inc
ja
cmpsl
in
sub
xor
jnp
movsb
rcrl
fwait
psubb
mov
repnz
mov
arpl
inc
jnp
arpl
ss
push
xchg
pop
add
adc
jmp
add
or
mov
cmp
aad
or
fisubrl
sub
fisubrl
pushf
xchg
xor
popa
jne
aas
in
or
out
arpl
mov
mov
cmp
mov
add
ja
sbb
or
fsts
repz
xor
aad
insl
xchg
add
lret
data16
cmpsb
int
push
das
mov
xchg
outsl
dec
pop
pusha
cs
push
icebp
sbb
xor
in
and
inc
repnz
je
aas
mov
mull
mov
or
push
or
cli
jns
push
shll
push
or
dec
push
loop
call
cli
push
test
mov
dec
call
addr16
xchg
xchg
andl
loop
sahf
mov
xchg
lret
fs
and
dec
mov
int3
and
jmp
jge
mov
lods
popf
test
aad
sbb
pop
test
cmp
lahf
mov
add
mov
add
push
add
pop
or
repz
adcl
sbb
xchg
shr
jle
out
add
stc
push
lea
sbb
cld
pusha
add
jae
dec
popf
xor
test
push
push
cmp
pop
push
jae,pt
js
mov
sub
aad
jecxz
out
sub
jecxz
cli
push
ljmp
push
push
fcomps
inc
adc
jmp
cmp
idiv
stos
and
pop
jg
cltd
test
pop
mov
pushf
outsb
stos
iret
stc
xor
adc
aam
testb
xchg
or
fisubl
cmp
lock
filds
bound
cwtl
push
jecxz
out
jb
lcall
idivl
cmp
lret
das
fnsave
jne
loope
and
mov
pop
push
lret
daa
in
jecxz
leave
mov
lret
jle
movsb
outsl
pop
lret
add
xlat
and
addr16
movsb
adc
popa
and
sahf
std
aam
gs
aaa
shll
inc
cs
pop
xor
sysret
vpmuludq
jl
xorb
sbb
pop
fldenv
cmp
dec
cmp
jne
andb
lds
test
cs
cld
movsl
sub
out
pop
clc
les
imul
pop
arpl
or
push
xchg
or
mov
sub
adc
dec
lock
push
insl
cmp
dec
dec
jl
test
fs
add
lea
xlat
andb
pop
xchg
flds
in
addr16
sti
push
pmuludq
sbb
and
jmp
pop
sbbb
pop
enter
idiv
cs
mov
push
shrb
adc
xor
sbb
adc
dec
out
adc
adc
testl
insb
cmp
iret
jmp
jnp
rorb
scas
cwtl
cmpsl
lret
push
sbbl
test
jns
pop
mov
xchg
mov
sbb
out
fs
xor
pop
cmp
rclb
and
xchg
and
mov
in
pop
mov
hlt
jle
es
sbb
push
fstp
cltd
iret
dec
cmp
out
inc
push
xor
adc
addb
inc
vpsrlw
or
mov
std
popa
sbb
and
cmp
inc
and
lods
mov
je
mov
add
stos
or
add
and
adc
insb
jbe
and
test
test
cld
rol
jae
lea
call
fwait
xchg
insb
mov
pusha
sub
cld
mov
fmul
pop
adc
fwait
cs
mov
fadds
out
shrl
adc
lods
jo
mov
out
stos
movsb
ja
jns
mov
in
fcomps
dec
mov
das
rorl
mov
insl
daa
xor
loope
aad
lahf
xor
popa
pop
dec
lahf
cmc
fdivrs
adc
or
outsl
xchg
jl
sbb
mov
jb
mov
xchg
hlt
add
in
outsl
or
sub
ret
in
push
mov
stc
insb
insl
jge
sub
pop
int3
mov
add
mov
adc
insl
mov
das
leave
jae
icebp
dec
and
and
pushf
mov
mov
cmpsb
lds
mov
jg
sbb
xchg
sub
xchg
mov
fistps
xlat
jle
outsb
lods
pop
xor
sbb
and
shlb
adc
hlt
test
and
gs
sbb
dec
gs
fdivr
enter
punpckhdq
and
out
xlat
push
hlt
pop
pop
jnp
stos
icebp
stos
mov
mov
call
pop
mov
inc
xor
xlat
ds
jb
aad
lds
inc
mov
aas
cmpsl
cmp
faddp
pop
pop
cmp
insl
or
mov
pop
lahf
sbb
cltd
pop
mov
push
fdivrl
std
shll
inc
repnz
aas
lea
pop
fiadds
mov
jno
outsl
add
fsubr
add
dec
mov
mov
mov
not
push
imul
addl
test
inc
xchg
call
cmp
push
adc
and
outsb
test
sbb
jbe
push
std
insb
jp
or
fisttpll
lret
xor
mov
jle
xchg
inc
inc
ljmp
add
mov
jp
inc
xchg
pop
pop
imul
mov
into
popa
push
cwtl
cld
ss
add
lea
pop
scas
mov
jmp
cmp
ja
mov
mov
inc
sub
cmp
push
adcl
sub
dec
in
leave
mov
cli
in
lods
or
xchg
adc
fwait
push
shrb
sbb
dec
inc
js
into
cltd
icebp
data16
fsubl
xor
push
xor
inc
mov
adc
adc
or
fs
cld
je
add
popf
inc
into
lds
mov
fcoml
xchg
mov
lret
imul
je
sub
insb
sbb
leave
bound
js
xchg
pop
and
or
xor
fsubrl
popa
loope
xchg
repnz
or
mov
mov
adc
xchg
mov
cwtl
stos
push
ja
sub
pusha
lcall
push
imul
int3
and
mov
mov
cmp
dec
mov
rclb
pop
pop
jb
into
out
sub
loopne
inc
fnstsw
lret
push
mov
lea
adc
call
int3
pop
pop
jle
decb
int3
sub
jb
popf
cmpsl
leave
or
mov
testb
aas
pop
inc
mov
lds
lret
dec
insb
xchg
mov
mov
call
insb
lods
imul
xchg
xchg
dec
push
push
leave
hlt
xchg
mov
sub
dec
xchg
jne
inc
ljmp
add
call
bound
add
pusha
jae
mov
mov
shrl
loopne
in
cmpb
xlat
pop
mov
in
xor
sbb
out
pop
arpl
adc
inc
and
and
mov
cmpl
out
sbb
pop
xor
and
pop
lock
cld
pop
mov
xor
repnz
movq
loopne
rolb
pop
mov
in
test
out
shlb
push
mov
jae
pushf
repz
xchg
push
jbe
cmpsl
roll
mov
jbe
daa
nop
mov
add
out
pop
mov
rcll
daa
pop
xor
pushf
aas
add
jne
and
in
dec
icebp
jg
std
add
sbb
jb
push
test
hlt
test
loope
pop
ret
pop
xchg
sub
cmpsl
mov
or
mov
aad
jmp
cwtl
lods
xchg
sub
cs
out
push
mov
fwait
jno
sub
push
add
jbe
in
lea
outsl
out
and
cmp
pop
rcrl
arpl
xor
and
mov
mov
push
inc
mov
mov
or
mov
ljmp
cmp
jno
stc
pushf
jp
or
push
test
sti
mov
inc
je
or
xchg
mov
insl
mov
adc
test
lcall
insl
cmpsb
call
icebp
fdivrl
mov
dec
inc
ds
adc
dec
fnstsw
cmpsb
or
ret
push
pop
push
push
mov
lret
push
pop
sti
shrw
xchg
jbe
fstpl
pop
mov
push
add
dec
sbb
push
mov
in
sbb
jp
insb
subl
test
inc
out
into
sbb
iret
inc
push
into
xlat
lahf
xor
lods
mov
insb
mov
imul
in
pop
mov
jg
lods
xor
mov
push
test
push
xor
stc
or
pop
or
cmp
sbb
scas
pop
inc
movsb
test
xor
imul
pop
stc
js
sbb
pop
mov
sarb
jmp
pop
cli
int
push
mov
ja
xchg
mov
sub
or
call
sub
and
sahf
or
insb
popw
jbe
jnp
xor
idivb
lcall
xor
jecxz
or
pop
out
lds
iret
adc
rolb
add
ret
clc
xor
fcoms
mov
add
jo
movsl
fcompl
mov
xchg
mov
xchg
cmp
in
int
loopne
leave
mov
test
mov
or
and
je
stc
outsl
fs
add
shll
jb
test
jo
push
lret
int3
xchg
in
inc
xchg
jno
dec
mov
scas
outsl
jnp
push
mov
xchg
pop
cmp
jecxz
mov
inc
les
xchg
jmp
iret
jge
pop
nop
sbb
orl
inc
int
fsub
cltd
aad
dec
nop
sti
mov
insb
addr16
in
inc
mov
aaa
sbb
xorl
dec
push
xor
outsl
sub
ss
lcall
mov
or
adc
mov
mov
xchg
mov
out
subl
into
and
andl
in
pop
fisttpll
movsl
add
or
jl
mov
xor
add
push
jo
pop
fs
inc
aas
pop
and
add
in
add
adc
dec
xchg
js
and
mov
push
loope
je
subb
jns
popa
xchg
leave
lds
icebp
loopne
and
mov
cmpsl
inc
mov
into
pop
or
sub
cwtl
std
sbb
jle
in
jecxz
mov
xchg
jg
hlt
sub
push
adc
sub
insb
xchg
gs
or
or
jnp
xor
std
jno
jg
std
dec
mov
push
pop
mov
pop
test
jmp
adc
mov
pop
push
cmp
or
aaa
fcmovnbe
and
dec
inc
mov
mov
sub
cmpsb
popf
pcmpgtd
push
pop
pop
cmp
sarb
insl
mov
mov
mov
arpl
jo
popf
jne
outsb
stos
pop
jnp
and
loop
mul
pushf
scas
lds
cmpsb
pop
sub
cld
jae
imul
arpl
imul
sbb
sbb
pop
xchg
push
jg
sahf
mov
add
dec
push
add
jns
push
in
dec
scas
int3
mov
loope
fs
test
and
std
and
sub
sbb
mov
sbb
and
rol
sub
push
or
pop
pop
push
js
adc
jmp
sub
dec
cmp
addr16
mov
mov
mov
mov
lock
cmp
enter
cmp
sbbb
call
dec
divl
pop
sbb
pop
adc
add
xchg
xor
lcall
fldcw
xchg
aam
mov
xorl
sti
lods
js
sub
inc
cmc
push
pop
mov
mov
or
or
mov
push
mov
aaa
into
out
and
pop
push
cs
or
stc
jnp
int
pop
sbb
cmpsb
cmp
or
or
dec
mov
sbb
fisubrs
ret
mov
aaa
mov
add
test
imul
adc
dec
in
fcomi
jp
sbb
sub
aas
jne
sub
mov
pop
mov
mov
jno
inc
push
sahf
inc
push
lret
stos
and
pop
push
jbe
xchg
add
int
stos
lods
inc
add
mov
idivl
imul
aaa
add
fistpll
lods
inc
xchg
movsl
mull
xlat
sub
or
rcl
sub
cltd
cmc
inc
test
fsubl
stc
mov
sahf
testl
dec
fwait
sub
xchg
cmp
ret
mov
sti
into
push
lahf
clc
inc
rclb
mov
std
xchg
ds
or
in
movl
cs
sbb
std
loope
test
push
mov
xchg
lods
xlat
iret
loop
add
lock
adc
cmp
sub
mov
dec
fs
or
mov
jb
lock
sahf
repnz
daa
add
andl
pop
push
call
addr16
lock
adc
jmp
mov
push
mov
xor
pop
fidivrs
adc
pop
ficomps
shll
cwtl
cmp
or
ss
sbb
ficoml
and
adc
cmp
shl
cli
dec
mov
lahf
and
lods
push
pop
adc
ret
sub
int
and
mov
ret
sbb
in
add
or
mov
and
push
sti
vsqrtss
nop
lds
mov
mov
bound
cmpsb
popf
push
aas
cmp
mov
lods
popf
cmp
stos
push
mov
pop
or
test
or
hlt
adc
pop
pop
es
xchg
cmp
leave
stos
clc
add
lcall
inc
pop
out
js
push
mov
mov
test
add
in
fisttpll
cmp
shl
out
bound
pop
mov
push
mov
push
cmp
mov
dec
dec
fmuls
adc
test
mov
push
xchg
mov
inc
shll
js
adc
mov
inc
or
inc
push
jp
outsl
and
push
dec
jge
push
imul
xor
mov
adc
push
adc
fstpt
pop
nop
xor
notb
inc
aam
sahf
pushf
cmp
xor
test
mov
pop
lcall
fwait
adc
es
xchg
in
cld
jnp
pop
fistps
xchg
gs
and
xlat
jp
aas
pop
cmp
jmp
sub
int3
div
or
icebp
or
imul
pop
add
hlt
loope
mov
sub
sbb
rorb
fsts
cwtl
mov
popa
sti
mov
mov
jp
subb
adc
inc
dec
xor
shl
lea
jo
in
sbb
adc
outsb
outsl
push
imul
push
imul
dec
pushf
jl
push
lahf
es
push
enter
outsb
and
mov
xchg
inc
orl
or
adc
mov
addb
mov
push
pop
pop
addr16
cmp
lret
mov
scas
mov
lods
mov
sarb
inc
xchg
lahf
shlb
mov
pop
in
cld
inc
pushf
xchg
and
xor
push
mov
fadd
std
mov
mov
sarb
xchg
movsb
out
pop
test
inc
push
xchg
clc
jno
cmp
sbb
add
cmpsl
data16
pop
sbb
add
or
cmpb
pop
or
mov
pop
push
into
movsl
push
push
mov
sbb
sarb
xchg
aam
xor
cmp
ss
lock
out
mov
stos
pop
push
in
mov
mov
sub
inc
movb
mov
enter
shl
xor
aaa
xchg
loop
push
int3
or
sub
or
xchg
mov
and
bound
push
mov
xchg
jns
push
sbb
popf
iret
mov
scas
ljmp
rcl
dec
jle
sbb
insb
pop
loopne
lret
push
xchg
pop
loop
xlat
mov
out
cmpsb
pop
sarl
xor
xor
repz
int3
sbb
or
xchg
notl
sub
imul
btr
lea
xchg
jnp
or
cmp
dec
adc
add
data16
test
shl
repnz
cmp
in
xor
out
in
sbb
shrl
xchg
sbb
xchg
mov
jb
hlt
das
int3
stos
ss
adc
xchg
insl
imul
push
lret
iret
stos
adc
sbb
lea
iret
jnp
jp
icebp
cmpsb
shll
mov
cwtl
cmpsl
dec
and
shlb
call
ffree
dec
pop
lock
sahf
cmpsb
jp
pop
pop
mov
inc
lods
xchg
test
movsl
rcr
lock
cmp
sub
repnz
ds
in
insl
leave
push
jge
xlat
aad
xor
cmpsb
in
scas
jmp
jne
shll
outsb
or
ds
push
je
jne
jmp
data16
ds
mov
pop
mov
or
jp
pop
mov
xor
enter
xchg
inc
outsl
out
clc
cmp
jge
jl
and
push
and
jb
lock
sahf
jo
lods
sub
stos
pop
shr
subl
jmp
inc
sbb
hlt
rcrb
push
adc
fsubr
dec
orb
cmp
xchg
shll
out
push
pop
ret
push
stc
mov
cwtl
or
fdivl
testl
scas
in
adc
test
inc
and
into
data16
sbb
iret
pop
pushf
pop
lock
loopne
sub
mov
orb
in
mov
or
ret
xor
lock
add
push
add
jae
or
mov
push
sub
popf
std
fsubs
divb
mov
jecxz
jecxz
adc
aad
sbb
insb
gs
cwtl
dec
jp,pt
aad
iret
jns
dec
repnz
rcl
mov
mov
cmp
mov
lret
loop
fiaddl
sub
push
sub
iret
shlb
cwtl
mulb
push
loopne,pt
jae
out
xor
movl
push
shlb
mov
or
dec
inc
push
pusha
es
pop
adc
lods
rcr
mov
cmp
and
stos
out
int3
mov
jl
leave
pop
jo
add
add
pop
popl
loopne
jg
iret
jae
aaa
repnz
mov
xchg
popa
clc
xchg
pushf
cld
xor
dec
pop
jb
add
test
lods
xchg
ss
adc
scas
jge
xor
sbb
cmp
push
and
sbb
add
inc
ja
fildll
adc
push
push
scas
cmp
cli
dec
inc
sub
cmpl
orb
nop
mov
in
hlt
fwait
lea
and
xor
adc
sbb
loop
xor
mov
movsb
add
and
testb
push
leave
sbb
sbb
je
test
pop
bound
je
push
mov
loopne
call
sti
fisubrs
xor
and
sbb
push
nop
test
cltd
xchg
shr
sar
call
adc
mov
push
sbb
jae
cmp
cli
pushf
in
sub
adc
dec
push
dec
orb
add
xchg
je
cmpsl
dec
inc
jg
jge
mov
mov
inc
out
insb
dec
repz
pop
inc
xor
incl
nop
fwait
inc
lret
imul
mov
xchg
add
fs
in
out
outsb
into
mov
popf
rclb
dec
out
pop
mov
dec
shrb
dec
iret
xor
lock
sub
out
fmull
dec
pop
jmp
aad
roll
outsb
mov
push
mov
repnz
xchg
jnp
mov
cld
fbstp
ja
mov
cli
mov
xor
inc
xor
insb
decb
out
outsb
push
out
je
cmp
dec
adc
add
repz
and
repnz
test
aas
cmp
jns
or
adc
mov
jmp
or
push
sbb
sub
out
test
popf
push
inc
push
movsb
rorb
sti
incl
inc
or
outsl
pop
mov
jle
xor
mov
xchg
inc
inc
sub
jge
aad
jnp
out
imul
xchg
pop
repnz
fisubrl
xor
das
pop
dec
fmuls
mov
dec
jo
jo
jb
adc
mov
jns
in
in
jecxz
pop
mov
nop
shr
cld
cli
hlt
cmp
adc
and
std
jmp
inc
jbe
test
addr16
scas
xchg
mov
jle
mov
aaa
pop
icebp
adc
mov
movb
pop
stos
push
dec
stos
mov
rorb
sub
imul
sbb
push
inc
push
les
in
sub
bound
jbe
cwtl
add
cmp
popf
sub
push
pop
push
xor
add
lds
mov
sub
push
out
in
jae
in
sbb
mov
jmp
pop
pop
inc
mov
repz
add
jmp
out
iret
fnstsw
mov
add
cmc
les
ss
and
ja
mov
sbb
jmp
push
xor
adc
and
aam
aad
pop
xlat
inc
dec
adc
push
test
jecxz
inc
nop
int3
gs
push
mov
adc
jmp
xchg
ret
jmp
test
lcall
std
sarl
pop
sub
push
ret
daa
mov
adc
hlt
xlat
insl
pop
mov
push
cmp
add
cmpsl
movb
rclb
push
pop
or
jbe
inc
outsb
mov
sbb
cmp
jbe
xchg
dec
iret
out
sub
push
in
or
pop
add
add
jae
fcoml
jo
xchg
pop
hlt
sbb
xor
test
push
sub
shr
add
push
test
call
cli
adc
jle
scas
movsl
popf
fisttps
pop
pop
cmp
inc
ret
pop
xchg
into
or
adc
jo
add
jo
nop
and
adc
iret
clc
out
subl
pop
push
lahf
shlb
aam
adc
sub
insb
leave
adc
fadd
test
mov
out
mov
sbb
dec
fwait
mov
sub
cld
jg
sub
mov
mov
stos
cmpsl
flds
mull
mov
ljmp
or
pop
sbb
cmp
aad
dec
mov
push
pop
cmp
xchg
cmp
jmp
fldt
adc
inc
or
xchg
mov
and
out
mov
je
lret
mov
xchg
inc
xchg
mov
mov
insl
andl
xchg
inc
cld
mov
fildl
adc
push
jno
xlat
add
fdivs
xchg
jge
in
xor
dec
pop
jp
or
jno
xor
dec
cmp
xchg
ljmp
pop
xchg
pop
jb
das
mov
mov
insl
pop
sub
push
pop
insb
push
repz
xorb
shrl
cmp
aad
inc
sbb
out
pusha
mov
inc
or
add
lods
and
pusha
sbb
cwtl
mov
xor
movsl
lret
push
and
cmp
jnp
mov
orb
outsl
cmp
ss
jbe
lods
mov
mov
xchg
jbe
outsb
ja
inc
xchg
jae
lahf
pop
ljmp
adc
pop
mov
scas
push
movsb
add
fwait
xchg
jnp
inc
cmp
std
inc
outsb
aaa
lret
xchg
in
hlt
pop
out
loop
repnz
lods
add
adc
popf
pop
jl
sbb
add
pop
sub
dec
add
pushf
xor
mov
mov
fidivrl
dec
stc
xor
fidivrl
cmpsb
mov
adc
adc
push
lods
addr16
mov
test
xor
jp
sbb
movsl
jae
loopne
loopne
movsb
pop
int
xor
jnp
inc
dec
sbb
xor
mov
test
dec
pop
mov
ss
mov
push
adc
leave
mov
mov
iret
jmp
jnp
dec
ljmp
movsl
fs
sbb
add
and
cmp
loope
addl
xchg
fsubl
ffreep
xchg
push
mov
stc
pop
rcl
insb
cmp
das
adc
mov
pop
push
mov
adc
adc
mov
ret
enter
cmp
out
xor
jg
hlt
insb
and
push
pop
fbld
xchg
and
js
and
pop
mov
dec
push
jae
out
xchg
in
sahf
scas
pop
mov
push
insl
push
and
xor
xchg
push
jle
cmp
ljmp
mov
icebp
fldenvs
mov
jg
setno
mov
pop
xor
mov
pushf
ds
jg
out
fmuls
add
lds
push
inc
mov
jno
pop
jl
mov
sar
adc
cs
in
push
xor
enter
movl
jp
pop
xlat
data16
stos
push
inc
xor
and
dec
sub
xor
mov
mov
push
popf
mov
inc
data16
push
and
imul
imul
mov
outsl
xchg
int
sbb
adc
popa
adc
mov
cld
bound
ljmp
jo
inc
fs
jo
das
out
ret
mov
xchg
lahf
das
jnp
pop
icebp
cmp
inc
roll
cmp
xor
lds
push
mov
cld
mull
cwtl
mov
xor
scas
shl
mov
iret
cli
out
sahf
sbb
jnp
sbb
mov
inc
jp
mov
sbb
inc
shrb
inc
push
cs
push
pushf
or
daa
inc
pop
cli
test
outsb
ss
dec
fcmovb
inc
mov
enter
jbe
lods
icebp
push
pop
or
sbb
or
shrb
andl
dec
mov
imul
jne
cwtl
loopne
push
inc
jl
xor
sbb
iret
jnp
imul
ret
cmc
mov
sub
fisttpll
xor
sub
xorl
adc
xorl
lret
cmp
mov
enter
and
inc
sub
pop
push
and
push
outsb
add
push
mov
add
shll
jne
lock
mov
or
and
aas
pop
mov
or
push
loop
pop
push
xchg
pop
adc
sti
xchg
sub
jl
adc
ss
hlt
lahf
jecxz
test
dec
pop
mov
int
shlb
inc
cltd
call
out
push
dec
hlt
outsl
xchg
lahf
mov
int
cmpl
jo
push
push
jo
inc
xchg
xchg
call
add
sahf
jbe
fmul
into
lea
sbb
aas
sbb
pop
daa
cwtl
notb
cmp
or
inc
cld
dec
repz
pop
into
and
or
xlat
test
jae
movsl
and
inc
popf
mov
sbb
stos
test
out
pop
or
in
push
cld
push
insl
xchg
cmp
add
sbb
movsb
pop
int
in
xchg
inc
in
cmp
dec
ret
jbe
xchg
mov
addb
xor
or
and
test
dec
sti
xor
sub
mov
dec
fldcw
jo
and
mulb
mov
add
pushf
push
jle
lret
js
sti
mov
mov
roll
dec
cmc
testl
out
xchg
dec
fisubs
xor
lahf
hlt
and
inc
jo
inc
in
lea
dec
je
stos
or
push
js
es
call
xor
in
xchg
adc
mov
sbb
mov
mov
fisttpll
mov
jp
lea
pop
test
dec
es
or
repz
jo
cltd
mov
fidivrl
leave
sarl
lcall
sbbb
pop
je
in
clts
fildll
mov
xchg
subb
add
xor
loope
mov
or
int3
sub
es
orb
and
dec
ljmp
cmpl
mov
jg
mov
push
fstpt
mov
push
xor
xchg
push
ficompl
rolb
lcall
rcrb
or
pop
andl
insl
fstl
imul
add
icebp
shll
jmp
push
mov
cli
fdivs
adc
pop
adc
in
clc
imul
call
mov
dec
pop
jmp
and
jge
mov
nop
mov
adc
push
jp
lahf
sub
repnz
jbe
lcall
popa
aam
inc
orb
mov
mov
pop
rcl
loopne
jae
lcall
mov
push
ljmp
push
int3
movb
lods
imul
mov
stc
jle
popa
xchg
pop
insl
xchg
es
testb
xchg
add
dec
inc
cmp
in
lahf
inc
xor
nop
pop
gs
frstor
sti
fsubrp
popa
add
out
push
push
imul
jle
les
lea
and
or
fidivrl
or
jne
lahf
xor
inc
dec
out
lret
push
loope
pop
push
xor
or
stc
pop
cmp
fiaddl
add
or
out
inc
sub
loop
add
test
jno
push
cld
adcl
insb
mov
scas
adc
js
mov
fs
pop
cmp
dec
sbb
xor
movb
movsb
sqrtps
divl
inc
inc
xor
push
iret
jo
loopne
bound
adc
mov
mov
les
sbb
mov
mov
sbb
dec
jbe
pop
movsl
sub
loop
cmp
jb
mov
std
push
mul
lret
jno
frstor
xchg
aaa
mov
mov
dec
pop
das
lretw
jo
mov
push
fwait
xor
push
aad
leave
lret
bound
addr16
in
cmp
jecxz
fcmovnbe
xor
test
add
fildll
aam
xchg
packuswb
push
push
inc
insb
inc
sbb
cmp
mov
icebp
push
and
daa
pminsw
ja
jbe
dec
cs
push
mov
push
or
and
data16
adc
imul
jmp
out
push
push
movsl
in
jmp
add
dec
in
nop
je
out
dec
mov
cmp
imull
dec
add
ljmp
xor
push
loopne
push
mov
mov
addr16
lret
xchg
sbb
cmc
outsb
pop
push
xchg
dec
rorl
mov
jp
ja
stos
cmpsb
aam
jbe
sub
movsb
pop
das
addb
dec
cltd
dec
imul
push
cmc
das
mov
jle
sbb
jge
push
fimull
push
outsl
mov
inc
icebp
rorb
inc
shl
ret
xchg
push
ja
mov
repnz
cmpsb
or
jns
push
rcr
mov
jl
movsb
aam
rorb
adc
xor
mov
sub
dec
ja
lahf
cmpsb
or
aaa
mov
jne
repz
in
sub
ljmp
mov
xchg
stos
sub
xchg
stos
jg
cmc
mov
lea
ja
cmp
ss
push
mov
jl
daa
ficoml
pop
das
out
test
dec
and
mulb
or
xor
dec
sahf
lea
js
pop
lods
clc
pop
fbstp
loop
shrb
mov
popa
test
stc
pop
mov
mov
mov
movsb
fstl
mov
in
sub
mov
movsb
lods
or
cmc
test
rcr
dec
add
push
mov
jns
stos
mov
repz
inc
pushf
lret
outsb
sbb
or
pop
out
sbb
scas
fildl
mov
cmp
push
pusha
outsb
das
sub
dec
mov
and
jo
lds
cmp
dec
daa
dec
fdiv
push
aas
fwait
mov
xchg
mov
repnz
cmpsb
movsb
dec
fstps
inc
lcall
xor
outsl
shlb
or
out
mov
lret
dec
xor
xor
dec
dec
mov
js
dec
push
adc
lds
jbe
test
mov
cs
cwtl
pushf
out
roll
call
daa
ds
fcomi
pop
push
insb
mov
mov
push
testl
stc
addr16
fs
xchg
xor
pop
insb
and
shl
scas
in
sub
mov
clc
lret
loope
or
in
sbb
cmp
mov
cmpsl
test
jae
add
or
push
dec
dec
dec
push
xor
pop
lahf
cmp
pop
push
mov
jae
outsb
inc
and
cmp
jbe
inc
cmp
rcll
and
xchg
imul
stos
popf
add
mov
lods
test
or
fcomi
mov
jl
cmp
and
push
fists
or
jmp
out
dec
push
fnstsw
jle
inc
cmp
shlb
movsl
cld
push
data16
dec
add
int
std
sahf
imul
cmp
dec
andb
pop
adc
sub
popf
clc
in
mov
nop
ss
aam
in
cmpsl
stc
pop
jnp
pop
add
jb
lods
add
xchg
rcll
push
fsub
aaa
xchg
push
adc
inc
pop
test
mov
in
cld
push
sub
out
ret
mov
inc
stc
test
call
xchg
cld
mov
sub
gs
nop
out
pop
adc
jbe
das
adcb
filds
inc
popf
out
mov
lret
lds
aaa
in
pop
enter
inc
adc
adc
xchg
cmp
sbb
jge
imul
push
mov
int3
sub
outsl
lds
repnz
sbb
push
rcl
data16
fbstp
push
mov
mov
sub
xchg
ss
in
sub
out
ljmp
mov
data16
sbb
mov
scas
test
adc
shrb
out
fnstenv
mov
cld
popf
mov
and
jg,pt
fdivr
das
push
cmp
sbb
inc
cmp
mov
arpl
and
dec
mov
das
and
fnstsw
mov
xorb
jb
aad
mov
popf
mov
les
adcl
add
add
pop
pop
das
jmp
push
dec
mov
xlat
push
jbe
repnz
and
cmpsl
mov
scas
xchg
mov
cmp
jne
add
in
push
shlb
push
stc
inc
inc
test
jp
push
mov
inc
mov
jg
push
stos
add
or
shll
mov
cmpsl
add
cmp
lock
mov
cmpb
dec
cs
roll
pusha
jbe
mov
lahf
xchg
je
push
cmp
jo
test
push
push
xchg
mov
std
popa
mov
cltd
xchg
inc
xorl
xchg
or
or
stos
loop
push
fnstcw
jae
inc
mov
ss
nop
push
in
pop
fisubl
addr16
inc
mov
xchg
dec
sbb
imul
lret
push
fwait
mov
jp
cmpsl
fisubl
scas
adc
lea
sbb
and
test
stos
cltd
xchg
scas
mov
jnp
pop
lods
cmp
lock
cmp
fcomp
sbbl
xor
pop
mov
jecxz
imul
mov
dec
sbb
outsw
inc
xchg
mov
rep
mov
lds
adc
dec
jo
std
movsb
pop
and
in
cltd
scas
sbb
or
mov
loop
insb
xchg
mov
aad
dec
movsb
cmp
gs
aaa
icebp
or
scas
push
sbb
ds
sbb
pop
add
and
mov
adc
xor
push
mov
mov
inc
cli
dec
loope
jmp
mov
rclb
mov
or
push
xor
roll
lahf
sub
bnd
inc
out
fildl
xchg
outsl
pusha
mov
popf
rol
repnz
cmp
int3
pminsw
jl
mov
xor
js
femms
hlt
sbb
mov
xchg
xor
pop
sub
mov
mov
sbb
insb
sbb
and
sub
hlt
jne
dec
xchg
adc
js
pop
mov
mov
mov
and
das
into
negl
pop
sbb
pop
fisttpl
jle
push
sub
shlb
push
bound
mov
jecxz
push
mov
fimuls
movsb
inc
jno
mov
cltd
ss
fcmove
xabort
or
pop
xor
pop
mov
sub
arpl
mov
pop
ret
mov
mov
jns
out
loope
pop
stos
pop
adc
lock
dec
int
movsb
pop
scas
and
push
imul
jo
push
sbb
repnz
iret
mov
pop
jp
inc
iret
push
repz
pop
adc
mov
mov
aas
ffreep
mov
pop
jmp
and
inc
push
or
jbe
inc
add
jg
adc
out
pop
stc
sub
lds
pusha
inc
insb
dec
add
sahf
jnp
sbb
cmp
lock
das
jmp
test
xchg
xor
add
out
mov
lods
lret
aaa
mov
icebp
dec
mov
xor
xor
mov
pusha
mov
sub
fucomp
or
mov
and
inc
out
movsb
aaa
or
adc
in
bound
rcl
dec
lock
call
dec
ljmp
and
decl
push
xchg
ret
lret
std
jp
test
icebp
ja
add
xor
fs
pop
mov
add
lea
adc
fsubrl
xlat
lea
popl
fldt
mov
cli
sub
loope
mov
pop
adc
push
daa
in
gs
xor
subl
cmp
mov
mov
cmpsl
sub
jns
dec
ror
xor
pop
xchg
xchg
mov
lods
or
out
jb
int3
adc
addr16
fisubrl
add
dec
adc
push
pop
bound
mov
adc
cli
dec
shll
mov
pop
mov
insl
push
jns
test
arpl
aaa
test
add
fstp
inc
jp
out
mov
test
jns
inc
jle
into
sub
mov
cmpsb
aaa
arpl
adc
sub
daa
sub
cmpsb
enter
pop
lds
call
push
bound
rorb
and
aam
jmp
int3
cmp
data16
push
xor
mov
rclb
cmpsb
sbbb
scas
bound
jae
pushf
xchg
stos
ja
mov
push
decb
xor
ret
push
lahf
xchg
jmp
xlat
mov
pop
and
jp
add
sub
leave
pop
fs
cmp
mov
sub
mov
mov
dec
xchg
jne
pop
sbbb
movsb
push
inc
pop
mov
outsb
fcmovnbe
pop
cltd
jl
or
lcall
mov
push
dec
stos
ljmp
testb
lods
icebp
loopne
fwait
push
jne
mov
mov
movsb
fdivl
mov
out
or
pop
mov
inc
cmp
add
xor
es
sbb
pop
sahf
sbb
in
push
push
clc
arpl
test
mov
mov
mov
cs
jge
inc
imul
ss
nop
pop
arpl
jb
jnp
rol
xlat
int
cmp
cmp
jg
mov
ds
ss
push
dec
rcr
inc
mov
and
pushf
popa
inc
ss
dec
sbb
jmp
int
jae
or
hlt
mov
fisubrs
imul
jb
rcrb
int
repnz
js
push
dec
push
xchg
sbb
ss
sub
sbb
dec
mov
jnp
repz
add
jl
dec
popf
fists
inc
repnz
in
cli
ret
mov
leave
xor
aad
in
xchg
lock
pushl
pop
mov
mov
xchg
push
arpl
mov
outsb
addr16
dec
inc
mov
xchg
adc
and
mov
sbb
fs
mov
add
mov
call
mov
in
sbb
adc
inc
ja
bound
sbb
out
add
jb
cmp
jp
mov
push
mov
fsubp
cmp
inc
add
xchg
xor
repz
jnp,pn
shr
push
aam
adc
mov
xchg
das
adc
jnp
mulb
mov
jne
sbb
outsl
stos
push
push
push
xchg
adc
push
dec
dec
xor
dec
out
xchg
sub
xchg
xor
mov
ds
lock
addr16
mov
test
lret
add
sbb
das
or
lret
xchg
jne
in
cmp
rcrl
jge
or
push
sarl
mov
scas
fdivs
mov
ja
xchg
test
pop
aam
inc
pop
les
cs
jle
cmc
fdivrs
jb
sbb
mov
fnstcw
aaa
bound
inc
mov
jp
repz
jmp
sbb
xorb
sub
es
add
shll
aam
mov
movsl
dec
dec
daa
popa
cmp
fcoml
mov
repnz
cs
and
jnp
ret
pop
inc
dec
rclb
jbe
add
push
cld
push
mov
push
mov
push
add
add
rcrb
jmp
in
xor
enter
mov
shrb
jns
pop
clc
sbb
xlat
push
push
xchg
in
pop
hlt
loope
scas
dec
fimuls
jl
sbb
pop
cmc
inc
cmp
mov
xchg
and
push
sub
inc
sub
repnz
add
or
daa
jno,pt
or
xchg
lahf
lds
fs
mov
xorl
dec
jmp
adc
test
test
add
inc
mov
xchg
sbb
sub
lds
push
adc
andl
pusha
andb
push
arpl
movups
bound
mov
scas
aad
arpl
sbb
leave
std
aad
or
jae
adc
adc
shlb
mov
aad
xor
mov
xchg
sub
jp
xchg
or
push
mov
xchg
mov
mov
int
mov
sub
sub
test
sbb
jo
outsb
lahf
jne
jno
pop
jno
leave
in
ret
mov
xchg
movsb
call
inc
daa
push
cmpsb
dec
test
movl
lret
pop
cmpsl
push
mov
out
adcb
lds
and
js
and
jbe
mov
sti
fists
das
or
ds
mov
xor
shlb
xchg
mov
insl
push
mov
pop
dec
aam
cmpsl
jns
bound
pop
dec
mov
icebp
lahf
and
push
xor
in
sub
adc
in
push
daa
inc
aad
in
mov
test
mov
push
pusha
cmpsb
mov
mov
testl
cmp
ja
pop
and
jg
call
stc
xorb
sbb
ret
jge
pusha
sti
sbb
xchg
cs
sbb
push
aad
xchg
adc
add
cmp
lret
pop
lea
sub
addl
mov
movswl
inc
inc
addr16
push
pop
stos
pop
push
jo
jns
out
mov
jl
mov
lret
call
rolb
and
cmp
add
inc
mov
xchg
adc
aad
pop
mov
inc
or
mov
mov
popa
push
sbb
sub
movsl
es
or
and
out
or
test
push
adc
push
push
fwait
sub
ljmp
pop
cli
or
addr16
sti
lahf
dec
xlat
xor
pop
movsb
dec
cmpsb
jae
sbb
push
xchg
imul
push
sbb
cwtl
lahf
ljmp
fldt
loop
lcall
aaa
push
aas
or
cld
das
push
mov
repz
imul
scas
or
push
test
popf
xchg
add
flds
loope
sub
xchg
mov
popa
xor
pop
inc
test
jno
sub
bound
cltd
sbb
cmp
fidivrl
data16
add
lea
inc
sub
ljmp
loope
jb
daa
sbb
js
and
jbe
pop
fists
push
xchg
sub
ds
push
mov
mov
push
imul
add
pop
aam
adc
jno
and
mov
cmp
xor
int3
dec
ss
xchg
addb
dec
mov
xchg
testl
dec
push
jmp
sbb
leave
mov
mov
add
movsb
pushf
xchg
dec
gs
stos
xorps
lods
jle
popf
cwtl
fwait
and
lret
dec
ss
aam
mov
mov
and
pop
les
mov
cwtl
sub
rorb
testb
dec
push
mov
iret
in
xor
fistpl
jge
cmpsl
out
fistpll
inc
adc
dec
jo
aam
sbb
enter
gs
or
jg
xchg
jb
out
pop
xor
jp
es
in
nop
out
push
repnz
shll
dec
arpl
aas
fabs
in
sbb
lds
dec
jp
mov
xor
push
xlat
out
pop
fld
fildl
cmp
leave
in
xlat
push
in
mov
push
sbb
add
add
add
test
adc
xchg
and
pop
jb
sahf
lgs
jne
push
clc
jns
mov
mov
jmp
xchg
xchg
dec
dec
mov
inc
mov
mov
insl
or
push
in
les
loopne
jg,pt
data16
sbb
push
jns
ror
test
pop
push
cmp
dec
adc
je
data16
stos
hlt
in
fdivrp
into
popf
test
rcrb
xchg
shll
rcll
xchg
ds
jns
ljmp
jg
popf
xchg
fistl
je
mov
mov
or
orl
push
sub
imull
xchg
xchg
sbb
pusha
jnp
mov
sarb
adc
push
data16
int3
cld
jge
aad
das
jbe
into
xorb
test
ds
sbb
adc
int
xchg
jge
stc
mov
test
mov
mov
jo
shll
out
xchg
out
out
fdivs
inc
add
fldcw
stos
mov
dec
inc
xor
cwtl
popf
add
imul
lahf
sub
rcrl
loop
adc
loop
and
add
pop
add
dec
push
push
arpl
stc
ds
out
mov
ds
into
in
dec
pop
mov
out
jbe
or
mov
ret
and
dec
arpl
jge
outsl
in
jp
gs
xchg
jp
xchg
mov
movsl
push
mov
push
call
xchg
pop
nop
sub
data16
cmp
js
aas
mov
and
or
fsubp
mov
dec
or
cltd
mov
jp
fdivs
shl
cmpsb
or
shl
addr16
lcall
into
cmpsb
das
jns
push
adc
popa
popa
rclb
scas
out
ljmp
rcl
mov
ret
decl
hlt
in
xchg
pushf
clc
jns
xchg
inc
sbb
push
mov
sub
das
mov
xlat
cmpb
and
xchg
add
in
pop
std
sbb
and
jae
outsb
xor
movsb
xchg
add
sbb
mov
mov
stc
shlb
clc
aaa
lahf
mov
aad
cmp
les
stos
xchg
jae
inc
mov
xchg
cs
jmp
loopne
push
insb
addr16
cmp
pop
pop
jge
sub
add
sbb
xchg
cs
sub
mov
ret
sbb
mov
shlb
adc
mov
ret
les
mov
jle
fldcw
push
push
movsl
cli
ret
pop
mov
stc
cmp
mov
sahf
jecxz
inc
push
rcr
fidivrl
xchg
dec
in
fsubs
ds
jp
add
fisubrs
inc
adc
mov
jp
test
dec
andb
push
adc
out
sbbl
imul
aaa
and
fucomip
test
jne
hlt
js
pushf
inc
jg
pop
cmp
fstps
outsl
lods
test
addr16
jo
add
js
or
sub
mov
mov
mull
cmp
and
lret
pop
adc
fdivr
push
ds
inc
adc
inc
cmp
notl
add
gs
or
enter
fwait
mov
jbe
cmp
inc
inc
jmp
jge
and
ret
push
leave
cwtl
cmpl
mov
push
lahf
push
in
jno
cmp
inc
cmp
sbb
mov
sub
int3
fistl
dec
mov
or
sub
pop
std
mov
in
scas
aas
dec
mov
data16
cld
mov
ret
jbe
std
sub
std
dec
pop
pusha
xor
adc
in
push
lock
enter
test
mov
arpl
sbb
addr16
add
dec
cmp
pusha
pushf
xor
std
push
xor
sbb
mov
lods
cmp
cs
repz
or
mov
outsl
mov
imul
adc
insl
xor
xor
les
shlb
adc
rorl
and
fmull
pavgb
dec
mov
jl
out
mov
repz
mov
cmpsl
aad
popf
add
or
xor
das
mov
xlat
sbb
jo
outsb
js
sub
mov
lret
push
mov
cmpb
inc
xor
cwtl
cwtl
setae
and
dec
inc
mov
aaa
outsb
mov
jg
mov
orb
and
xchg
cmpsb
inc
cwtl
xor
enter
sub
xor
in
aaa
mov
movsl
int3
dec
xor
pop
xchg
es
mov
in
xlat
aad
cmc
push
pop
and
pop
fisubrl
adc
enter
push
mull
fildll
sbb
icebp
pop
mov
dec
mov
insb
dec
xchg
stos
mov
jge
fs
out
dec
fwait
xor
les
adc
clc
adc
mov
mov
xor
pop
mov
ljmp
mov
add
xchg
sub
xchg
fs
outsl
xchg
pop
loop
pushf
or
cmpsl
movsl
js
pop
inc
inc
sbb
or
mov
push
dec
std
iret
in
aam
or
ss
fisttpl
adc
jnp
shrl
jbe
pop
push
test
shll
sbb
movsl
incb
adcl
add
cmp
lods
or
nop
ljmp
xchg
and
push
mov
mov
and
dec
ret
push
jno
xchg
or
inc
aad
add
add
lret
cmpb
xchg
dec
movsl
xor
stos
cmpsl
dec
stc
cmpl
popf
push
push
into
or
jle
inc
or
dec
test
sarl
repz
pop
sbb
push
jl
mov
and
pop
jmp
call
fstp
and
out
or
mov
js
fidivrl
pop
ja
or
xchg
lret
pop
jbe
push
push
cmp
and
jae
rorb
cmc
or
push
mov
lahf
sbb
adc
sti
int3
add
xchg
test
imul
fsub
pusha
inc
pushf
out
insl
int
mov
jne
or
ret
jne
cmpsl
push
pusha
in
fistpl
mov
iret
in
in
and
movsb
inc
pop
fs
mov
xor
inc
cmpsb
mov
dec
add
fs
jle
aaa
and
data16
xchg
andb
sub
xlat
adc
ja
or
jno
clc
xchg
sarl
jge
cmp
xor
xchg
xchg
mov
lock
xor
js
and
ljmp
cmp
or
hlt
dec
push
mov
adc
xlat
stos
jne
cmp
cmpsl
and
nop
jg
je
cmpsl
lret
mov
aad
cwtl
sbb
push
cmp
pop
scas
movsl
add
push
pop
sbb
xchg
fwait
cmpb
enter
ja
arpl
sahf
mov
xor
jge
mov
aad
dec
call
xchg
loope
jmp
sbb
ds
cmpb
fists
dec
fsubrs
xor
inc
fidivrl
bound
mov
cltd
jmp
cltd
xor
mov
jo
dec
pop
outsl
clc
loopne
mov
adc
pop
cmpsb
dec
sub
cmp
popa
sub
jp
inc
sbb
xchg
mov
mov
fs
rol
xchg
jbe
test
rolb
sti
aas
jbe
ret
int
leave
cmc
adc
test
pop
hlt
mov
outsl
sub
jl
push
testl
ss
scas
inc
cs
pop
ret
les
cld
arpl
adc
out
into
and
inc
adc
dec
push
pop
repz
lret
xchg
das
add
loop
popf
add
sub
pop
pop
sub
push
jnp
rcrb
cmpxchg
xor
inc
lahf
jo
xchg
ja
out
mov
gs
mov
mov
cmp
test
in
lret
orb
addb
sbb
mov
leave
mov
lret
loope
sbb
iret
add
icebp
cmc
add
dec
jbe
popa
loope
pusha
dec
mov
pushl
imul
sub
movb
test
mov
sbb
int3
cmc
in
pop
ljmp
xchg
test
imul
adc
push
aas
fildll
bound
ja
pop
xchg
mov
out
stos
jmp
add
jbe
xchg
push
ret
dec
add
shlb
and
pop
add
insl
mov
add
icebp
add
mov
and
or
sbb
aaa
out
xor
gs
push
cmp
sub
mov
ljmp
sub
lods
outsb
std
repnz
push
hlt
out
lahf
iret
dec
ret
cmp
xlat
test
std
or
out
test
imul
sbb
dec
shlb
adc
adc
pop
inc
mov
sub
in
movsl
bound
mov
ljmp
sub
test
test
pushf
test
or
xor
jp
mov
jbe
jg
jnp
jge
and
sub
or
or
stos
test
add
push
pop
adc
jo
sbb
pop
repnz
pop
popf
sahf
xchg
push
sbb
out
xor
aad
in
aad
cli
push
jg
in
cmp
out
jmp
add
mov
push
add
jmp
loope
ljmp
mov
jmp
inc
std
insb
mov
fistpl
and
mov
fs
xchg
sbb
mov
neg
sbb
cwtl
mov
bound
jbe
popf
fwait
movb
xor
push
push
stos
iret
insb
add
lahf
sti
sub
imul
test
xor
rcll
mov
mov
fs
pusha
push
bound
aaa
movsb
lss
and
aaa
sti
outsb
sbb
outsb
test
imul
xor
aas
mov
mov
xor
pop
lock
cld
cltd
shrb
xor
mov
or
mov
orl
xchg
inc
push
mov
or
repnz
or
faddp
or
push
enter
adc
ret
xchg
imul
or
leave
hlt
ret
sub
rolb
dec
xor
push
dec
loopne
inc
mov
and
das
cmp
aas
push
dec
mov
iret
roll
push
mov
out
cmpsl
out
push
xor
in
mov
and
test
mov
repz
or
aas
arpl
insb
sub
pop
push
jns
sub
or
xchg
add
mov
sbbb
xor
stos
push
lcall
mull
insb
das
enter
pop
fs
add
xor
push
mov
or
leave
or
mov
mov
fnsave
rcr
insl
pop
cmp
insl
mov
xchg
addr16
hlt
fbstp
fwait
test
movups
je
aaa
addr16
pushf
adc
inc
int
insl
or
aam
hlt
dec
leave
xor
xor
andl
addr16
jo
cmpsl
das
jno
lret
outsl
outsl
dec
xlat
pushf
scas
add
xor
iret
sbb
push
stc
xor
sub
adc
xlat
in
cltd
in
cmc
jle
dec
xchg
mov
inc
xor
xor
cmc
cmpsl
sahf
ljmp
adc
arpl
mov
or
dec
cmpl
sbb
adc
jne
das
scas
mov
int
push
mov
adc
scas
andb
movsl
fisttps
clc
jns
cltd
and
addr16
nop
in
xchg
arpl
jae
hlt
push
adc
adc
adc
movsl
sbbb
jecxz
sbb
xchg
sahf
jle
jl
faddl
clc
and
lcall
aas
lds
push
cltd
clc
adc
sub
stos
cmp
lds
stos
stos
lahf
dec
dec
adc
pop
or
jnp
inc
or
sub
stos
or
popf
jecxz
sbb
cmp
push
repz
jns
add
sbb
mov
add
mov
xchg
pop
dec
lock
into
cmp
cvttps2pi
mov
stc
test
fdivrl
or
mov
jbe
fs
pop
fldt
jno
xor
lret
in
jno
push
inc
sbb
scas
sub
rcll
movsb
jns
push
cmpsb
push
scas
push
fistl
inc
fsubs
fcoml
add
inc
xor
add
scas
add
jbe
sbbl
jb
in
popa
push
xchg
or
clc
sbb
sub
mov
mov
std
je
mov
push
inc
fs
sti
mov
inc
scas
add
sarl
stos
inc
aas
sti
addr16
xchg
arpl
gs
xor
sub
call
xchg
dec
icebp
fsubl
adc
jge
sub
rolb
loopne
imul
fst
loop
outsb
ljmp
adc
test
inc
mov
call
dec
scas
fisttpll
pop
cmpsb
sub
loope
pop
shl
cmp
sahf
popa
xchg
call
cli
xor
clc
cmp
mov
cmpsb
int3
add
cmp
subl
in
aas
xchg
fdivrp
insb
int
mull
mov
fwait
or
sahf
xchg
xor
cmp
mov
imul
xorb
arpl
jg
pop
jle
stos
adc
inc
mov
dec
sub
add
jb
nop
leave
iret
mov
mov
data16
mov
mov
inc
loope
das
cmp
jae
mov
jl
ret
adc
fiadds
sub
mov
es
mov
mov
mov
inc
mov
subl
popa
outsl
jno
imul
xchg
pop
rolb
std
xor
bnd
mov
cmpsb
push
test
and
add
push
int
fs
and
loopne
in
movsl
dec
cmp
sub
mov
fdivs
inc
lea
or
lock
dec
movsb
mov
inc
push
imul
mov
sbb
pop
in
mov
imul
and
dec
xchg
mov
mov
sbb
lods
cs
scas
faddl
imul
call
idiv
addr16
mov
iret
mov
dec
lret
jg
sub
ds
mov
mov
stos
and
mov
push
shlb
push
mov
xchg
testb
pop
loop
mov
fwait
es
popl
lahf
lock
inc
cmpsb
addr16
pop
and
push
movsl
hlt
sbb
shll
sub
inc
jb
scas
fprem
adc
pushl
mov
aam
add
in
sar
test
dec
sub
push
in
bound
ljmp
push
pop
arpl
imul
push
adc
mov
jg
cmp
pop
push
sbb
adc
pop
mov
jl
xchg
push
inc
xchg
stos
xchg
clc
fwait
ss
test
sbb
cltd
dec
xchg
out
popa
gs
and
xchg
lea
cmpsl
push
add
push
lcall
imul
pop
in
push
clc
xchg
push
inc
enter
es
cmpsb
cmp
xor
xchg
ret
std
ror
pushf
inc
rorb
pop
clc
out
cld
mov
inc
pushf
pop
outsl
xlat
cmp
js
sarb
fs
jnp
gs
scas
test
test
lods
pop
stos
or
leave
jge
and
loopne
jns
mov
popa
sti
iret
inc
cmp
mov
mov
pop
es
jp
scas
scas
inc
or
loope
ret
and
inc
into
mov
adc
cli
push
dec
adc
xchg
xchg
imul
sbb
sbb
sub
mov
sub
and
adc
test
mov
sbb
inc
pop
out
aaa
fdivr
cmc
loop
popa
nop
push
mov
sub
push
and
jno
dec
cmp
jmp
fisubl
test
and
sub
pop
cs
xchg
out
test
mov
call
pop
lods
xchg
pushf
fistpl
lret
push
push
imul
pop
scas
sub
stos
push
and
out
jp
nop
pop
xchg
push
clc
subb
pop
cwtl
mov
jns
rcrb
ja
testb
loope
mov
mov
lock
and
jge
and
rcl
add
fimull
lock
xlat
imul
mov
test
cmpsb
in
xor
into
pushf
pop
js
cmp
imul
clc
jo
cmp
popf
ss
add
je
sub
jp
fisubs
xchg
fcmovb
add
test
jae
nop
lods
inc
adc
out
mov
xor
movsb
sti
xlat
arpl
add
adc
call
ljmp
jno
lods
or
or
xchg
cmpl
adc
jmp
add
and
test
jecxz
cmpsl
jb
mov
mov
sub
int
mov
loop
add
add
jmp
dec
sub
in
rorl
daa
lds
pushl
ss
outsb
jp
pop
push
sbb
shr
dec
scas
test
dec
int3
push
add
xchg
mov
lea
pop
mov
outsl
pop
repnz
jp
pop
dec
sub
and
and
int
jmp
or
push
dec
imul
jo
jmp
test
movsb
lds
lret
inc
mov
xchg
mov
cmpsb
shll
mov
js
mov
lds
push
inc
mov
mov
outsl
add
sarl
cmpsl
add
stc
fldt
lods
hlt
lret
xor
add
icebp
mov
repz
iret
add
repz
dec
mov
mov
sbb
dec
mov
stos
aad
mov
mull
imul
fcmovu
pop
popf
movsl
mov
int3
inc
outsl
jmp
jg
out
sti
inc
mov
inc
cmp
cmp
sub
sbb
dec
sub
addr16
fadd
dec
cltd
fdivrl
lods
xchg
scas
idivl
push
push
int
cmp
out
dec
js
in
sub
or
pop
or
or
insb
or
push
mov
popf
add
sti
xor
dec
jl
dec
dec
cwtl
mov
dec
movsb
add
push
scas
jnp
je
nop
adc
jbe
mov
into
lds
pop
add
add
pop
mov
xor
dec
arpl
xchg
jg
ja
jo
loope
mov
jmp
inc
mov
jne
and
push
iret
scas
outsl
insl
push
push
rclb
cmc
scas
cltd
popa
stos
pop
sbb
cmpsl
fwait
xchg
out
clc
dec
cmp
jo
out
inc
fstp
sbb
xlat
mov
int
stos
jg
addr16
jae
dec
es
das
push
lcall
bound
adc
push
fwait
bound
cmp
inc
and
sub
cmp
pop
into
scas
in
jp
int
sub
jns
test
and
in
in
testl
and
shl
rcrb
pop
lods
mov
sahf
test
dec
rorl
dec
inc
pop
sbb
popa
div
scas
jle
gs
imul
xchg
mov
sbb
xchg
sub
sti
mov
jbe
sbb
jl
ja
jb
jb
jo
xor
jo
push
xchg
jb
ja
or
jp
movsb
js
jno
cmp
mov
cli
inc
adc
sub
scas
push
push
popa
pushf
cs
add
or
mov
mov
shrl
cwtl
lret
outsb
rcl
sub
push
and
xchg
les
addr16
xor
sahf
ret
xchg
dec
fxch
mov
push
sub
push
leave
xchg
jne
sbb
inc
cmp
and
jne
xor
nop
icebp
lahf
xor
dec
xchg
ret
add
lods
jg
jne
cmpsb
jno
gs
iret
mov
sbb
mov
and
aam
cmpb
cmp
lea
or
push
pop
push
stc
fsubrl
jne
fwait
cld
xchg
popf
or
imull
lret
xor
push
out
popf
ss
les
movsb
sub
pop
mov
mov
cmpsb
bound
notl
fwait
addl
nop
loop
adc
lock
ds
push
push
xor
lea
jmp
pop
or
xor
adc
xchg
sahf
inc
sahf
cmpsb
mov
test
cmp
and
lahf
sbb
xchg
shll
cmc
scas
jne
cltd
mov
mov
cmp
mov
daa
test
fmull
xlat
inc
xlat
push
int
incl
push
mov
loopne
out
test
mov
outsb
outsl
sbb
js
dec
xchg
xor
inc
sub
rep
mov
icebp
mov
sbb
push
lret
mov
dec
mov
push
push
and
jmp
mov
push
dec
test
sub
pop
lret
std
lret
stos
call
mov
push
inc
xchg
push
mov
mov
addb
xor
imulb
out
fldl
jmp
jmp
push
adc
or
popw
std
fadds
mov
sar
icebp
mov
outsb
and
out
icebp
in
hlt
imul
cwtl
test
in
or
xchg
and
fists
nop
lds
jecxz
inc
imul
xor
fstl
test
sti
cmp
testl
out
insb
enter
jne
adc
andl
insb
mov
sub
scas
inc
inc
sub
pop
and
jp
addr16
inc
gs
arpl
fmull
inc
aam
mov
adc
std
dec
dec
mov
ljmp
loope
popf
sub
test
decb
imul
pushf
stos
fstp
pop
and
imulb
pop
xchg
je
mov
mov
dec
cs
jo
out
sarb
xor
and
outsb
movsl
movsb
sti
in
or
sub
loop
ja
xchg
out
in
mov
sbb
shl
pop
and
test
push
loop
dec
dec
mov
sbb
aas
mov
lods
pop
jbe
push
cli
call
and
push
pop
popf
add
xchg
cmp
xor
jmp
adc
xchg
notl
into
repnz
fxch
int3
mov
mov
dec
dec
add
mov
xor
sbb
push
mov
push
shr
pusha
ret
pop
push
cli
scas
sbb
sub
out
jns
int3
sub
negb
sti
pushf
cmp
testb
lds
es
xchg
les
xchg
dec
xlat
hlt
add
pop
aad
adcb
inc
xor
sar
pop
andl
leave
int3
loop
add
and
pop
lret
cltd
add
aad
xor
xor
fadds
pusha
shll
pop
arpl
or
fsts
data16
movsl
lds
sub
sbb
je
inc
lcall
push
dec
adc
xor
jnp
cmc
pop
xchg
fsub
cmpsl
pop
mov
ret
jns
popf
and
shll
fdivs
xor
sub
iret
mov
cltd
imul
js
xchg
adcl
pop
pusha
int
fisttpl
add
aaa
cmp
popf
in
es
mov
aad
rcl
test
inc
xchg
push
test
fwait
aas
in
stos
shrl
loop
jmp
push
loopne
adcb
test
push
inc
pop
and
fimull
mov
mov
push
clc
movsl
aaa
mov
aad
or
movsb
inc
mov
test
ja
inc
cs
xor
out
xor
js
loopne
adc
stos
pop
inc
jo
rorl
insb
or
cmp
dec
int3
adc
shrd
xor
cmp
cmc
push
xchg
stos
dec
jo
nop
rcrb
in
adc
enter
push
ja
fstpt
push
aaa
pop
std
enter
push
mov
pop
inc
sub
fwait
dec
clc
pop
jno
xor
icebp
mov
ljmp
mov
cmp
mov
leave
xchg
jb
xor
lods
cli
sti
mov
mov
das
fists
inc
mov
lock
ret
fsub
loope
fstpl
in
mov
outsb
add
push
ficoml
or
vpunpckldq
icebp
pop
into
aam
mov
mov
clc
mov
pop
addb
mov
add
out
icebp
fs
mov
add
push
in
lods
add
insl
stos
xor
ss
pop
lods
in
pop
andl
ret
adc
stos
pop
ret
out
mov
xchg
aas
subb
push
ljmp
popf
mov
jl
sahf
mov
jae
icebp
xchg
adc
sbb
push
leave
shl
push
mov
dec
and
icebp
ret
fstpt
cmp
add
mov
mov
inc
push
jge
push
pushf
call
push
add
jge
xchg
inc
add
repz
in
repz
stos
cmp
hlt
push
mov
fs
sbbb
add
test
jnp
loopne
mov
in
xchg
pop
pop
in
mov
mov
xchg
or
sbb
cld
or
iret
or
cmpsl
dec
sub
sbb
sub
arpl
aas
data16
xchg
pushw
mov
out
mov
out
test
insl
pop
xor
xchg
and
rol
xlat
stos
in
xor
or
sarb
aam
jo
dec
vpmaxsw
xor
dec
addb
cmpsb
popf
push
enter
repnz
loopne
dec
or
loope
pmulhw
add
pop
je
popa
or
inc
mov
or
xor
mov
ds
cld
mov
sbb
xor
and
sbbl
insl
inc
mov
int
ret
test
cmpsl
sub
add
add
inc
pushf
inc
jp
pop
popa
mov
sahf
lock
es
test
pop
iret
lods
adc
or
iret
fcmovnu
sbb
ds
push
decl
and
push
pushf
jno
je
push
inc
popa
sbb
fld1
cwtl
cmpsl
jne
mov
cmp
outsl
ss
push
or
dec
shr
data16
ja
xchg
mov
ss
mov
mov
imul
pop
mov
popa
loope
xor
sbb
pop
push
cmp
and
mov
and
inc
loop
test
inc
ror
aam
ds
pop
dec
pop
sbb
lock
rcll
xor
loopne
mov
xor
out
imull
je
xchg
cmpsl
jo
xorb
ljmp
sbb
add
xchg
or
push
jp
sarb
pop
mull
xchg
cmp
rol
fdivl
xchg
pop
aam
in
out
or
xchg
or
ds
sub
or
cmpsb
cmpsl
or
ja
mov
ss
jnp
fwait
and
add
rcrl
aad
xor
imul
data16
int3
aam
daa
aad
xchg
sub
pushf
inc
dec
cmpsl
pop
push
in
cmpl
sarl
int
jbe
lcall
out
addr16
subl
adc
sub
and
mov
inc
cmpsb
in
aaa
das
loopne
call
in
inc
add
fnstcw
dec
cmp
jnp
adc
lods
sbb
mov
push
xor
out
pop
adc
inc
loopne
roll
dec
xchg
mov
inc
mov
and
enter
repz
xor
pop
xlat
sarb
femms
or
sbb
pop
xchg
out
and
add
pop
xchg
pusha
insl
inc
sbb
inc
outsb
fsubl
lock
xchg
jnp
mov
imul
call
das
add
push
pop
jb
and
mov
xor
jbe
xor
ficompl
mov
inc
popf
mov
pop
jecxz
sbb
sbb
enter
addr16
popf
arpl
cmp
xchg
add
popa
push
insl
loopne
xor
or
ret
push
lea
lret
loopne
xchg
cli
popf
and
insl
jecxz
pop
popf
mov
pop
jmp
adc
negl
xchg
cmp
cmp
push
fidivs
outsl
and
and
cmp
cmc
aaa
and
ds
call
sbb
mov
test
and
xchg
arpl
in
roll
cmp
xchg
int3
xchg
in
test
in
mov
jp
test
es
fwait
aaa
and
xor
pop
test
pop
jmp
and
or
stos
movzwl
je
test
dec
push
rcrb
cmp
cmp
jle
daa
mov
mov
jo
mov
dec
push
pop
mov
inc
hlt
clc
lea
mov
add
mov
cmp
sbb
pop
icebp
pop
lock
and
xor
push
xchg
jg
mov
sti
push
nop
loopne
test
movsb
ss
adc
cmp
insl
jbe
shrl
cs
mov
mov
int
in
jmp
subl
stc
pushf
addl
lcall
scas
loop
out
or
fidivrs
int3
add
jns
jnp
dec
sbb
bound
int
push
stos
shll
mov
jns
add
xchg
data16
inc
and
sbb
mov
mov
jnp
adc
dec
or
sub
xor
gs
pop
jno
adc
rorl
sti
gs
mov
sub
mov
shll
mov
sub
push
pop
dec
stc
aaa
xor
dec
js
xor
pop
add
inc
mov
cs
shlb
mov
ja
adc
xchg
dec
fwait
xchg
jns
adcl
fst
sbb
aaa
js
in
sub
std
or
or
push
push
push
jb
sbb
pop
add
pusha
movsb
imul
js
push
jo
pushf
std
popa
dec
sbb
fildl
pop
fidivs
test
ret
lods
or
push
xor
adc
xchg
sub
sbb
dec
add
inc
inc
stc
loop
push
daa
add
push
je
arpl
mov
rcll
push
jge
xchg
jg
int3
inc
filds
adc
adc
cmp
repnz
mov
xchg
stc
pop
int3
mov
leave
in
xchg
mov
or
xchg
cs
aad
inc
mov
sbb
push
push
jno
imul
xchg
test
push
sub
in
notl
push
mov
imul
cmp
sub
pop
jl
push
loopne
insl
or
xchg
out
fcompl
mov
and
loope
das
aaa
mov
cmpsb
jmp
addl
adc
dec
jmp
jb
and
mov
into
ja
cmp
lea
cmp
je
add
fisubrs
xor
imul
inc
jge
insl
sbbb
std
or
adc
push
pop
sbbb
enter
mov
lcall
lcall
jae
cmp
ja
xor
sbb
mov
or
imul
outsb
or
loope
adc
roll
sahf
pop
dec
and
add
insb
rcr
pop
fwait
jg
fcompl
mov
jbe
aas
and
add
sub
adc
fstp
js
test
test
fwait
and
ror
adc
add
jmp
lret
mulb
in
fsts
ljmp
dec
push
into
ja
rorb
lret
mov
mov
adc
popa
cmp
outsb
test
int
in
iret
adc
test
xchg
cmp
iret
inc
paddb
push
lock
bnd
xchg
cmpsl
movsl
sub
lods
or
movsl
scas
push
mov
cmp
rcrl
xchg
sbb
jg
mov
fistl
xor
insb
insb
ds
cmp
push
push
push
or
ret
mov
push
je
push
pushf
mov
and
inc
dec
enter
inc
xchg
js
nop
xchg
dec
xor
and
xlat
jle
cmp
sub
xchg
out
aas
jmp
pop
sbb
xchg
add
dec
in
out
add
inc
pop
dec
notb
sbb
sar
incl
inc
pop
sub
ds
daa
mov
loope
push
push
cmp
xchg
or
push
jae
pushf
xchg
pop
mov
add
xchg
pop
cmp
jo
inc
adc
lcall
push
jbe
outsb
adc
loop
subb
loope
mov
pop
scas
dec
xor
cltd
cwtl
xor
xor
push
mov
inc
cmp
pushf
outsl
into
inc
add
fdivrl
xor
movsb
xchg
es
mov
pop
or
sbb
fimuls
push
mov
aas
mov
in
and
stc
in
pop
xchg
pop
adc
subb
test
inc
inc
jb
insb
sub
push
add
sub
test
subl
inc
ret
sub
mov
jno
or
aas
jle
bound
or
fdiv
call
xchg
test
add
leave
xchg
cmp
sbb
xor
sbb
stc
ror
fistps
lods
pop
out
leave
push
adc
lahf
cmpsb
mov
jnp
push
ret
sub
outsb
cmp
inc
fldcw
sub
inc
mov
popa
addr16
sar
shr
push
shll
pop
lods
xor
shrl
loope
cmp
lahf
popa
test
sub
mov
cs
cmp
rcrb
mov
cwtl
ret
jl
mov
cwtl
xchg
data16
sbbb
xchg
pop
cmp
out
scas
sbb
test
movl
pushf
jbe
das
in
movsb
pop
mov
mov
out
sahf
daa
sbbl
or
lods
loope
shl
xchg
push
loop
inc
or
jle
jne
call
mov
jae
imul
scas
or
aas
xor
test
and
loop
adc
push
xlat
out
cld
orl
adc
mov
mov
orb
dec
xchg
sbb
inc
lds
cli
jecxz
aaa
sbb
mov
xchg
jnp
jns
jl
sub
hlt
in
out
xchg
adc
sbb
jno
fs
jnp
insl
adc
iret
fadds
adc
mov
jecxz
fs
mov
popf
mov
arpl
and
repz
fdiv
xlat
les
mov
xor
push
mov
cmp
lds
sub
in
imul
inc
sbb
cmp
shll
mov
mov
loop
leave
cmc
jmp
das
gs
mov
mov
inc
sti
test
out
je
lret
or
imul
fbstp
mov
cli
jae
bound
jno
xor
sti
cs
pop
loope
cmp
shlb
xchg
ljmp
movsl
lcall
ljmp
dec
xchg
test
mov
xchg
pop
jnp
mov
vpcomud
add
xor
orb
xchg
rclb
outsl
cmpsl
sub
test
mov
mov
or
mov
push
movsb
rcr
jns
lea
das
jbe
bound
add
xchg
mov
mov
movsl
stos
stos
add
rorl
fmuls
decb
pop
scas
mov
mov
fmuls
adc
pusha
lock
ret
cmp
jb
sbb
pop
push
loop
or
ret
leave
dec
jbe
ja
sbb
das
sub
mov
imul
push
mov
mov
ror
mov
xchg
daa
sbb
mov
jae
cmp
out
pusha
js
add
cmp
xchg
adc
jnp
sbb
data16
jne
mov
mov
cmp
pop
popf
xchg
lock
popa
scas
add
mov
and
call
cli
adc
jns
arpl
jg
fldenv
mov
sbb
xor
mov
xchg
sahf
decb
push
cmp
or
ficoml
push
xchg
push
movsb
imul
rcrb
sbb
xor
mov
or
addl
stc
dec
mov
cmc
in
pop
add
mov
fs
cmp
js
mov
or
adc
fnstcw
adc
roll
and
lods
mov
cmpsl
das
mov
int3
xchg
dec
lret
xchg
fsubl
loope
mov
mov
cmpsb
loop
push
or
pop
add
fdivr
jo
cmpxchg
push
gs
mov
lret
xor
jb
ds
cmp
inc
xorl
and
aas
rcrb
adc
mov
movsb
sbb
lcall
adc
xchg
jmp
ror
lods
in
sti
fcmovne
add
mov
sti
jp
add
fcompl
out
inc
dec
adc
iret
inc
mov
iret
movsb
mov
push
mov
leave
sub
jp
xchg
test
fsqrt
sub
cmc
mov
outsl
mov
pop
dec
jno
sub
mov
sbb
dec
ds
enter
stos
and
adc
std
jae
pop
fistpll
mov
popa
ljmp
or
js
sbbb
stos
xchg
mov
cld
loop
add
cmp
push
mov
xor
jl
mov
adc
outsl
cmp
mov
xchg
repnz
aam
out
add
lahf
sub
loope
inc
sub
and
and
jl
enter
in
push
or
dec
mov
clc
lock
and
mov
icebp
adc
inc
dec
dec
push
mov
mov
mull
fwait
mov
sub
imul
aam
jg
sbb
dec
test
dec
insb
mov
jge
or
out
cmp
scas
xor
outsl
pusha
int3
jbe
dec
mov
int
jo
add
pushf
outsl
pop
mul
das
aam
mov
pop
out
ljmp
jne
mov
addr16
mov
cmc
ret
dec
sub
fildl
xor
addb
push
movsb
js
pop
int3
stos
mov
mov
inc
mov
cmpsl
daa
or
cmp
lahf
fnstenv
cmp
adc
lds
js
lcall
sbb
cpuid
inc
push
lcall
mov
mov
lahf
pop
leave
inc
lods
pop
out
jo
lahf
inc
popa
pop
jnp
shlb
dec
push
mov
mov
insb
adc
mov
shl
pop
loope
jg
ret
push
adc
daa
push
push
mov
aaa
adc
imul
lock
xchg
xor
out
cmpsl
popf
jp
xor
cmp
pop
into
mov
sbb
adc
rclb
pop
mov
cli
sbb
pop
fwait
adc
test
addr16
pop
and
push
inc
or
inc
es
lods
jns
fscale
cli
pop
call
mov
jno
ljmp
ret
xchg
cmp
mov
lcall
shufps
jge
fwait
pop
xchg
rclb
mov
cmp
sbbl
push
roll
add
sbb
in
jecxz
push
jg,pn
sub
push
mov
xlat
out
pop
ret
push
lock
les
lcall
or
test
das
mov
outsl
xor
testb
pop
mov
std
push
loopne
mov
add
inc
add
fwait
stc
jns
and
xor
sub
mov
aaa
pop
mov
and
jge
test
jnp
repz
fiadds
or
push
bound
loopne
out
testb
pop
fistpll
data16
push
push
pop
ret
xor
mov
ret
shll
lcall
mov
sti
cmpsl
idivl
sub
ljmp
jnp
fwait
pop
push
stos
iret
aad
sub
xor
into
cwtl
call
add
shrl
in
mov
jmp
aaa
cwtl
in
xor
sbb
jne
jb
sarb
jae
insl
lock
lods
shll
add
xor
push
push
enter
pushf
ret
rorl
data16
pop
sahf
fcmovbe
lea
push
sbb
lock
mov
andb
mov
rolb
mov
outsl
sbb
outsl
ljmp
adc
je
shlb
in
push
push
sub
aaa
sbb
int3
jno
popa
aas
testl
xchg
fmul
mov
adc
je
ss
mov
add
in
sarb
and
dec
ret
inc
lods
and
fbld
out
repnz
lods
into
add
push
inc
lret
jle
jb
push
add
in
jg
inc
fwait
lret
std
inc
push
inc
push
adc
imull
lahf
sub
xor
inc
pop
dec
dec
cmpsl
cmc
repz
lods
mov
dec
sbb
frstor
sbb
jb
not
adc
mov
mov
test
jnp
lahf
mov
cmp
and
nop
inc
dec
std
and
pop
add
inc
jne
mov
jnp
xchg
mov
dec
mov
push
popf
jns
mov
sti
mov
jb
subps
inc
mov
xor
dec
icebp
movsb
movsl
mov
pop
in
mov
cltd
xchg
test
movsb
xchg
pop
cmp
jge
dec
cli
sub
lds
xchg
push
lods
mov
xor
xchg
fisttpll
xor
stos
ja
clc
sbb
loop
xchg
push
mov
data16
adc
aaa
push
mov
xchg
mov
add
mov
xchg
bound
sub
ficoml
or
and
in
cmp
int3
ret
xchg
bound
xlat
inc
sub
push
push
ja
nop
std
call
int
ds
mov
pop
mov
mov
xor
das
lahf
das
xchg
mov
sahf
inc
push
and
fnstcw
fcmove
sti
mov
cltd
and
mov
pop
outsb
lret
scas
mulb
jmp
rcl
sti
pop
lds
cld
adc
adc
and
enter
mov
lret
test
insl
mov
cmp
into
mov
repnz
in
push
ffree
js
xchg
xchg
inc
xchg
fnsave
and
aas
or
push
jmp
adc
subl
les
push
scas
xor
jmp
lods
daa
inc
insb
push
push
dec
hlt
lret
hlt
xor
jno
or
shlb
mov
push
mov
pop
nop
cmp
sub
dec
push
jl
shlb
fcomps
sbb
lahf
push
sar
sbb
push
mov
dec
sbb
enter
xor
call
in
inc
inc
mov
xchg
jbe
adc
popf
cs
cli
daa
cmp
or
test
adc
cwtl
fadds
fstl
mov
fnstcw
and
aam
jle
adc
bound
repz
sub
mov
sub
cld
jecxz
divl
lods
into
xchg
dec
or
pop
shlb
out
xor
or
add
add
sarb
xchg
xlat
push
xchg
mov
pushl
dec
test
add
cmp
jp
add
xor
repnz
jns
jecxz
dec
jecxz
rcll
adc
sbb
cltd
pop
fnstcw
sbb
dec
inc
pop
and
mov
in
pop
xchg
dec
pop
inc
fbstp
in
push
and
lods
mov
in
mov
daa
bound
fidivrs
bound
cmp
cmp
jge
sahf
xor
pop
je
add
nop
bound
std
loope
insl
sti
cmp
xchg
lock
xor
xchg
sahf
rorb
pusha
clc
rcrl
aas
lods
fldenv
adc
outsl
jnp
outsl
and
dec
mov
in
inc
inc
xor
dec
andl
inc
xor
sub
jp
xchg
ja
std
repz
or
mov
dec
cs
pop
nop
ss
fwait
stos
and
mov
jb
fidivrl
push
xor
daa
push
xchg
xchg
jne
stc
testb
jl
mov
test
ret
xor
jecxz
ja
sbb
mov
jns
pusha
sbb
sub
xchg
push
mov
dec
jno
popf
cwtl
sbb
sub
rcrb
mov
arpl
int3
aad
xor
ficoms
lea
sarb
or
arpl
cmpsb
mov
pop
gs
jbe
stos
fwait
push
sub
jp
cli
xchg
fsubrl
in
mov
cwtl
cmp
xor
add
sti
sub
push
into
jnp
insb
add
sbb
test
daa
mov
gs
pop
cmp
xchg
add
mov
cmp
mov
repnz
addl
mov
out
pushf
or
adc
cmp
pop
ret
je
mov
mov
test
ret
icebp
push
iret
jb
imul
cmp
mov
out
jg
or
mov
sarb
ljmp
sahf
pop
mov
out
xchg
sbb
cmpsb
jl
inc
adc
sub
ja
xchg
mov
gs
mov
xor
rcrl
mov
out
pop
sbb
and
jmp
ret
stc
ljmp
leave
loop
rcrb
fnstcw
cmpsb
push
pop
or
sti
ror
or
push
fisubrl
sub
and
leave
xor
mov
sub
push
mov
divb
or
ljmp
cmpsb
mov
testb
sub
ds
mov
pop
pop
fs
xchg
lock
inc
add
mov
cltd
push
mov
nop
imull
pusha
fs
inc
fcmovnb
sub
dec
outsb
pop
xchg
shll
mov
testl
outsl
ljmp
pop
fstpl
adcl
pop
fcomp
cld
add
dec
mov
inc
sub
push
scas
les
push
or
pop
fmull
popf
mov
int3
or
es
xchg
jmp
adc
insl
sub
cmp
cmp
cli
insb
mov
or
inc
adc
mov
outsl
cmp
push
push
sbb
clc
addl
arpl
loop
pop
mov
inc
rcr
jmp
xchg
inc
stos
ss
out
decb
repz
xor
out
pop
orb
dec
iret
imul
mov
xor
jae
adc
or
je
mov
push
inc
sub
add
loopne
cmp
pop
push
fcoms
adc
push
xchg
sub
mov
repnz
rorb
or
je
idivb
and
cmpsl
pop
clc
in
gs
cmp
push
mov
adc
jge
test
xchg
aas
aam
rorb
lcall
sub
stos
or
xor
sub
out
lods
ret
inc
sub
pop
and
mov
imul
loop
xor
jno
hlt
jmp
popf
jae
fs
or
or
int3
xchg
in
pop
mov
imul
mov
and
into
inc
dec
and
cmp
or
mov
pop
out
enter
jo
jne
fidivl
xchg
ja
movsl
iret
adc
in
jl
dec
adc
jge
rcrl
rorb
mov
cmp
ss
xchg
jnp
mov
aas
test
xor
or
imul
hlt
or
mov
and
jnp
lcall
rcl
cltd
jmp
in
je
subb
sub
xor
nop
and
js
adc
data16
push
addr16
repnz
repz
cwtl
sub
inc
hlt
inc
mov
dec
mov
shll
fimuls
cmpsb
into
addr16
and
cmp
xchg
xchg
cmp
jne
roll
mov
movq
push
mov
dec
sbb
enter
ret
mov
cmp
and
mov
mov
mov
dec
xor
adc
sbb
push
mov
sbb
xor
push
xor
push
rcrb
fisubl
popf
ret
stos
mov
cmp
add
orl
jecxz
dec
adc
jecxz
roll
jle
jp
and
jb
jecxz
lock
sbb
test
push
je
pop
add
rcrl
movsl
aad
outsb
movntps
mov
loopne
pop
xor
xor
lock
idivl
adc
lods
mov
rcl
pop
mov
inc
cmp
and
xchg
mov
mov
call
mov
inc
mov
sbb
and
mov
aaa
fmull
test
sbb
jb
xor
test
mov
gs
cld
lock
int3
sub
mov
push
sbb
xchg
sbb
xchg
out
bound
jmp
out
dec
push
leave
jp
ss
hlt
push
fs
stos
loopne
pop
inc
and
mov
aas
cmp
sbb
push
xchg
loopne
adc
cli
mov
sub
push
xlat
loopne
rcrl
clc
in
pop
dec
in
mov
shrb
add
movsb
ja
out
xchg
push
insl
xor
cmpsl
fs
inc
dec
sub
push
scas
jno
and
test
int3
test
ljmp
jge
xor
add
add
rcrb
inc
add
sbb
mov
mov
sub
jo
ficoms
in
sbb
sbb
adc
in
out
test
xor
xchg
jbe
imul
pop
test
into
dec
scas
jle
pop
movsl
icebp
jbe
shr
mov
xchg
jl
dec
pop
insl
and
fldl
das
sub
inc
mov
and
push
movsb
stos
pop
cmp
negb
arpl
repnz
push
loop
push
jb
aas
aad
push
fnsave
xlat
repz
sub
mov
or
xor
and
xchg
cwtl
in
adc
push
xorb
inc
mov
mov
add
rcrb
inc
sbb
jno
imul
push
inc
inc
hlt
mov
mov
jnp
adc
inc
popa
sub
in
dec
inc
cltd
pop
jno
mov
push
stc
stos
xor
pop
popa
sarb
mov
rclb
cmp
and
and
inc
pop
sub
rorb
xchg
test
enter
add
cwtl
ja
fsubrl
cmpsb
push
pop
out
mov
loope
sub
mov
jmp
sub
xchg
daa
loop
xchg
ret
or
push
jbe
loope
test
sub
dec
sbb
lahf
sbb
mov
inc
push
add
dec
insb
cmp
lcall
nop
mov
jecxz
out
lock
sbb
repnz
lods
sbb
imul
shr
jp
dec
out
lock
movsb
sub
clc
dec
pop
pop
jecxz
jbe
nop
dec
sbb
mov
cmp
lods
ljmp
data16
mov
and
jo
mov
sahf
js
push
inc
pop
out
push
dec
fs
ds
mov
scas
mov
stos
lcall
jo
sbb
in
cli
mov
xchg
or
ja
pop
cmpsb
fisttpl
outsl
popa
jnp
insl
test
adc
inc
push
ret
and
xchg
xchg
mov
daa
push
out
dec
mov
sub
js
push
pop
push
lock
add
pop
cmp
mov
add
mov
xchg
aas
pop
xor
mov
pop
arpl
ljmp
adc
push
adc
loopne
mov
in
xchg
mov
push
lds
std
lock
scas
push
or
aam
dec
in
mov
decb
pushfw
dec
cltd
push
mov
hlt
sub
sub
lods
xor
ss
fs
xchg
in
jle
mov
add
dec
mov
ret
ret
and
cmp
add
shr
adc
loop
lret
pop
popf
stc
insb
mov
pop
stc
scas
bound
movsb
push
out
pop
adc
xor
int3
lock
fldl
pop
xor
mov
mull
aad
les
inc
gs
loopne
lret
dec
clc
push
jle
adc
mov
mov
jbe
mov
pop
cltd
call
sti
fmuls
jle
jne
fnstcw
imul
pop
adc
packssdw
imul
aad
and
cmp
push
cmc
pop
pop
sbb
sarb
into
xor
xchg
pusha
inc
mov
push
inc
fistps
mov
cmpsb
jo
xchg
lock
push
gs
cmp
add
sbb
sub
dec
mov
lock
xlat
cmp
cmp
inc
sbb
loop
out
lods
insl
and
dec
jmp
imul
or
or
sub
cmp
jle
insb
cld
sbb
pushf
pop
pop
dec
mov
jg
lock
mov
jae
gs
and
mov
inc
aam
icebp
outsb
add
int3
xor
jge
aam
dec
ss
mov
xchg
test
mov
fwait
cli
lods
sub
jmp
ds
jns
jp
test
aaa
ljmp
jae
insb
in
xchg
ret
adc
lret
insb
jp
das
leave
bound
pop
inc
mov
stos
mov
loopne
aad
loop
pusha
arpl
imul
jb
fidivl
movsb
mov
push
pop
push
fnstcw
lcall
sub
xchg
jmp
inc
sahf
into
aam
das
sbb
test
mov
cmpsb
sti
fwait
jp
add
in
test
add
rcr
sbb
cmp
cs
shrl
test
cmpsl
es
cmp
inc
xor
sbb
xchg
idiv
adc
mov
jecxz
pop
outsb
xchg
xor
mov
roll
jl
mul
cmpl
test
xchg
dec
nop
xchg
test
xor
push
scas
dec
enter
fs
or
sub
aaa
scas
cmc
push
outsb
jle
mov
inc
mov
dec
adc
sub
cltd
mov
imul
pop
mov
lret
inc
xor
fsubrl
dec
cmp
or
jo
mov
inc
jns
inc
sbb
dec
js
pop
sub
mov
das
iret
push
stos
sahf
adc
sbb
inc
and
ret
mov
je
adc
loopne
loop
stos
es
insb
insb
mov
pop
incl
push
sarl
sarl
mov
pop
xlat
jl
push
jecxz
add
rcll
or
gs
outsb
mov
mov
in
push
ss
pop
shlb
loope
mov
js
jns
out
push
jp
scas
mov
jnp
scas
dec
xor
xchg
xor
mov
sbb
mov
xchg
jo
dec
popa
mov
mov
mov
data16
mov
sahf
push
ja
iret
sub
add
ret
xchg
jmp
cmp
sarb
xor
or
popf
inc
pop
cmp
into
inc
add
testl
les
iret
out
cwtl
out
loop
movsl
xchg
adcl
add
int
jbe
fwait
popa
and
lcall
bound
jno
jmp
inc
mov
in
mov
mov
mov
xchg
repnz
push
push
pushf
dec
pop
add
cmp
add
jecxz
outsb
into
out
push
lcall
in
mov
call
dec
fstpl
push
fidivrl
mov
cmp
jo
mov
mov
xchg
int3
sbb
popf
jl
xor
xchg
push
jecxz
arpl
test
xor
jmp
adc
or
iret
jmp
push
or
mov
cmp
cmp
and
fs
jnp
shlb
es
or
and
mov
xor
push
xchg
lcall
sbb
fimull
pop
xchg
hlt
jecxz
mov
lds
in
cmp
loopne
adc
mov
jno
xor
sub
dec
fs
mov
out
movsb
jecxz
push
lock
push
jg
push
jle
jl
and
daa
int
orb
loop
hlt
push
pop
andl
test
xlat
jne
jmp
push
in
dec
and
out
aas
push
pop
adc
cli
adc
jbe
gs
popa
ret
ss
inc
insl
xor
lock
dec
mov
nop
mov
pop
cmp
hlt
out
mov
std
jnp
inc
fnsave
push
ret
xchg
loope
inc
outsb
cmp
bound
cltd
and
or
popa
xor
mov
inc
xor
sub
mov
xor
add
add
popf
sbb
sarl
addr16
out
les
cltd
push
sub
loopne
pop
enter
lcall
push
fs
xchg
add
inc
in
sti
outsb
test
loope
sub
dec
sarb
dec
xlat
hlt
fwait
jecxz
xchg
add
dec
jns
hlt
jae
jp
lret
dec
xor
inc
pop
mov
loope
pop
pop
lock
repnz
push
stos
push
xchg
fwait
loope
dec
xchg
lock
fldt
mulb
lahf
movsl
jno
je
jg
repnz
inc
test
sbb
inc
movb
aad
xchg
cli
int
sub
and
test
repz
mov
jo
mov
adc
hlt
xor
orb
xchg
ss
mov
adc
test
dec
pop
nop
clts
mov
sub
mov
pop
fcoml
cs
mov
stc
dec
pop
icebp
inc
hlt
push
sbb
inc
push
adc
loope
iret
mov
nop
inc
roll
inc
loop
cmp
call
dec
inc
into
sub
mov
lea
lods
scas
rorl
mov
jecxz
pusha
mov
gs
cmpsl
push
mov
popa
gs
xor
es
push
hlt
imul
xchg
es
repz
sbb
int
int3
pop
sbb
dec
sub
lds
outsb
je
xchg
and
or
pop
mov
lret
jmp
sbb
out
nop
jbe
or
popa
xchg
adc
lods
sub
sub
xchg
in
push
mov
inc
leave
mov
hlt
jl
fmulp
sbb
lods
test
push
jns
mov
adc
mov
cmp
mov
test
and
addr16
inc
outsl
pop
cli
popa
sub
cltd
mov
inc
movsl
sub
and
xchg
cwtl
adc
cmp
xor
xor
mov
xor
mov
sub
push
xor
test
sub
mov
push
aad
movb
pusha
stos
push
xchg
fisubl
sbb
rorb
dec
mov
insb
cltd
outsb
and
insb
add
jne
jnp
push
dec
rolb
cmp
mov
pop
lock
cmp
aam
imul
mov
scas
neg
dec
cmpsl
jb
lods
or
pop
sbbl
and
hlt
mov
cmp
ja
jg
cmc
js
mov
add
into
and
inc
fdivr
ret
and
inc
xor
std
mov
mov
mov
lods
fs
sti
adc
jmp
xor
dec
xchg
data16
sub
rorl
imull
jne
mov
in
push
jae
mov
icebp
mov
and
shll
xor
inc
std
popf
daa
push
test
in
mov
cld
rol
test
mov
push
int
mov
shrb
popa
and
pop
push
test
xor
inc
in
clc
xlat
pop
lret
das
cmp
mov
lods
adc
mov
jmp
mul
cmp
adc
cmc
inc
scas
lahf
cmpsb
dec
daa
sbb
in
adc
ret
mov
je
sub
xor
lods
das
mov
arpl
xchg
and
ret
inc
sbb
int
mov
push
adc
daa
jae
fsts
push
add
adc
nop
sti
adc
sbb
lret
mov
sbbl
dec
movsb
outsb
setne
xchg
mov
mov
test
aas
sbb
cmp
sti
sub
inc
mov
or
sbb
inc
xor
mov
mov
imulb
and
xchg
imul
cmp
jmp
xchg
sbb
push
adc
sub
das
out
jnp
xor
mov
adc
mov
or
shl
adc
das
adcb
xchg
adc
add
rolb
mov
mov
aaa
jp
bound
mov
neg
mov
sahf
or
loope
daa
push
push
test
loopne
loopne
shll
mov
or
adc
xchg
push
dec
int
pop
adc
inc
pusha
fwait
stos
leave
jmp
dec
fdiv
fnstcw
adc
or
push
xorb
mov
push
subl
fmuls
mov
pop
xchg
shll
xlat
rcrl
mov
int3
pusha
pop
into
pop
mov
test
hlt
push
jno
jge
inc
scas
and
ja
dec
in
cld
loopne
xchg
cmpsl
add
xchg
out
jo
inc
adc
popa
xor
outsl
scas
je
jae
stos
and
test
adc
lret
aaa
les
sub
xchg
push
pop
jb
sbb
pop
int3
sar
jbe
sub
bound
mov
icebp
loop
mov
push
jnp
fwait
push
test
xchg
cmp
int
mov
mov
sub
int
dec
push
mov
adc
sti
fisttpl
or
mov
mov
lock
inc
xor
outsl
cmp
lret
xorb
inc
es
or
imul
dec
or
mov
xor
jno
les
jnp
repz
xchg
mov
cmp
out
cltd
jg
mov
xchg
mov
mov
mov
pop
jg
push
cld
pop
adc
add
lds
jecxz
rcrb
pop
addb
mov
addb
and
aad
jp
rol
in
incl
lods
inc
inc
movsl
sub
jb
std
or
xor
and
mov
insl
and
mov
clc
nop
push
push
mov
dec
adcl
in
popf
ret
cmp
ret
xor
mov
imul
mov
rorb
test
mov
bound
mov
xchg
addr16
add
add
imul
shll
mov
mov
push
add
addr16
mov
fadds
add
insl
orb
mov
movsl
roll
inc
mov
and
xchg
lret
and
mov
and
ret
or
xor
jno
jp
repnz
add
jl
or
jmp
addb
int3
and
fildll
and
dec
xchg
dec
je
repz
and
jmp
std
fwait
pop
out
ret
jl
push
cmp
cmc
mov
sbb
fprem
ret
pop
dec
fdivrp
or
test
jmp
in
insl
dec
cltd
in
fwait
xchg
aad
cmp
lock
pushl
pop
push
dec
sbbl
pop
bnd
pop
scas
lock
add
jl
shrl
add
adc
dec
mov
int
int3
mov
add
inc
sbb
daa
loope
data16
inc
push
mov
lret
cmc
adc
xchg
ret
jo
mov
inc
bound
adc
popf
lds
adc
inc
add
in
int3
addr16
add
out
pusha
xchg
fisubrs
dec
lds
and
js
cld
jmp
test
and
lcall
mov
jecxz
sub
dec
fists
push
mov
stc
sbb
and
mov
out
popa
fiadds
inc
inc
or
mov
pop
sti
pop
and
cmp
and
cltd
xor
rcl
pop
jge
or
ljmp
mov
adc
or
mov
mov
cmp
inc
inc
push
daa
mov
push
es
js
jo
popa
cmp
mov
shll
repnz
sbb
aad
daa
mov
test
imul
cmpsl
jg
nop
out
xchg
shlb
or
js
test
mov
popa
inc
in
sti
popa
mov
add
movsb
sbb
inc
pop
sub
adc
push
call
dec
les
in
push
scas
icebp
rol
mov
jo
dec
aad
pop
xchg
test
push
dec
rol
lock
mov
mov
movsb
dec
cmp
shll
cld
pop
sahf
jns
aas
sbb
xor
repnz
and
jbe
repnz
xlat
out
fs
fucom
dec
sbb
loop
dec
rorl
lds
dec
and
push
inc
lock
add
fdivr
push
or
into
fs
jmp
imul
ljmp
dec
inc
js
sub
inc
bound
mov
sahf
push
mov
push
add
leave
sbb
or
loopne
inc
out
mov
dec
stos
insl
xor
dec
cli
cmp
or
les
pop
test
push
and
pop
push
std
les
fs
aaa
and
fs
les
inc
dec
sub
popa
push
sbb
ret
xor
jae
mov
jns
fsubp
xor
sub
clc
and
push
push
ds
push
push
dec
rorb
movsl
cli
xchg
add
mov
jg
stos
pop
cmp
push
mov
in
push
push
or
xchg
xchg
dec
mov
and
pop
popa
push
adc
xor
or
sub
push
scas
mov
movl
jp
add
jp
es
cltd
add
mov
pop
es
cmp
aad
jmp
mov
dec
jge
push
inc
and
dec
and
mov
cmp
fwait
inc
jmp
lock
into
insb
call
fnsave
lea
xor
movsl
stos
sub
movsb
mov
adc
ror
mov
jecxz
sbb
dec
cmc
pop
shr
mov
leave
sbb
rcrl
setnp
mov
sub
leave
jle
jmp
push
je
mov
pop
dec
jg
xchg
xlat
add
scas
fs
inc
test
push
aam
lods
in
mov
push
fists
mov
jne
or
das
mov
inc
loope
mov
lock
insl
std
movsl
int3
push
sbb
dec
stos
mov
movsb
sahf
loopne
cmpsb
scas
clc
inc
rorb
cmc
lcall
test
mov
lea
or
jge
add
inc
pop
loope
push
jb
cmpsb
pop
push
push
sbb
mov
int
out
pop
das
sbb
push
fidivl
pushf
push
and
aas
cmp
stos
inc
mov
scas
shlb
or
xor
add
mov
add
jecxz
scas
ja
xorb
insl
cmp
and
nop
aaa
jp
xor
mov
lea
pop
sbb
add
pop
adc
cmpsl
je
dec
call
fiadds
cs
sbb
sbbb
call
or
push
jne
dec
rcl
insl
pop
and
dec
jmp
icebp
mov
cs
fstl
jg
jmp
pop
add
lcall
or
popa
push
jne
xchg
arpl
sub
orl
inc
mov
repz
push
pop
cltd
jae
xchg
dec
and
in
dec
dec
mov
adc
in
fstpt
jge
xor
jmp
add
mov
inc
xor
ljmp
je
xchg
sbb
adc
mov
pop
fstpt
hlt
stos
sti
nop
add
dec
pusha
aas
movsl
add
xchg
jb
in
cmp
jns
loope
xchg
lds
push
pusha
inc
add
sbb
xor
aam
push
sahf
rorl
ljmp
nop
sub
cmc
std
call
test
popf
mov
sbb
pop
mov
push
enter
mov
mov
int3
cmp
std
or
gs
jg
cmc
mov
adc
icebp
mov
push
xchg
jne
xchg
ret
stc
mov
fsts
or
pop
stc
cmc
dec
add
or
jbe
dec
mov
dec
rcr
negl
pop
xchg
add
out
movsl
fwait
jmp
data16
cmp
testl
xor
in
inc
pop
fldt
cmp
dec
call
mov
or
cmp
ficompl
mov
mov
mov
lret
scas
sbb
sahf
pushf
add
aas
dec
loop
pop
pop
cmp
cmp
xchg
lahf
and
lea
clc
repnz
fwait
sbb
negb
mov
sub
or
dec
sbb
mov
add
shll
cmpsl
push
mov
ss
mov
in
lret
cmp
lds
in
sub
mov
sbb
cmp
daa
popa
cli
lret
cltd
out
aas
mov
mov
dec
jge
ficomps
arpl
popa
lcall
addr16
out
cmp
push
imul
mov
in
jp
call
xor
jecxz
cmp
fdivs
fwait
adc
shrb
in
xor
ret
push
or
outsl
mov
pop
aam
pop
mov
mov
xchg
das
test
adc
fisubs
xchg
fsubrs
mov
es
rcrl
or
adc
dec
mov
mov
mov
add
clc
leave
xchg
imul
or
ljmp
sarb
or
test
xchg
mov
push
sub
jae
hlt
ret
or
cmpsl
lret
jle
cmp
sbb
jge
mov
jns
dec
inc
aas
mov
xor
lock
das
cmc
out
ljmp
psubsb
cmp
jecxz
dec
imul
dec
push
jge
daa
sbbl
rcrl
jle
cmp
cli
jmp
sbb
push
sub
call
pusha
cwtd
ss
divl
cmp
mov
xchg
ret
pusha
pop
dec
je
add
xchg
push
mov
mov
bound
enter
out
xor
push
mov
into
xor
dec
or
sti
jno
adc
es
mov
add
cld
or
lahf
pop
cmp
xor
sbb
cs
pop
and
push
out
popf
jae
mov
stc
adc
sbb
mov
mov
cwtl
mov
das
cmc
aas
in
and
and
adc
cmpsl
repz
cmp
jae
in
test
cmp
and
inc
cmp
xchg
dec
mov
loopne
aaa
dec
jl
cmp
cwtl
shll
and
das
xor
cli
inc
pop
inc
sub
or
leave
jmp
out
mov
movsl
arpl
mov
add
or
sub
std
jae
jnp
test
xchg
fadd
push
dec
shl
int
jl
pop
pop
in
data16
sbb
mov
push
or
and
into
cmp
xor
test
aaa
sbb
jo
je
mov
jno
push
dec
jge
mov
xchg
leave
add
or
imul
cmc
push
pop
pop
dec
jmp
enter
mov
dec
insb
sub
das
fsubs
addr16
scas
out
inc
in
adc
test
out
shll
dec
insb
insb
jae
pop
xlat
xchg
jo
cwtl
push
inc
arpl
stc
ret
adc
call
gs
lcall
pop
nop
ss
cmp
imul
pop
fidivs
add
push
or
outsl
stos
push
sbb
mov
mov
cmp
lcall
outsb
sub
inc
push
addr16
xchg
adc
movsb
xor
xor
das
xchg
sub
mov
inc
popa
and
std
iret
imul
in
dec
and
push
int
loope
movsl
fimuls
jmp
ds
jns
sbb
ret
and
xor
inc
addr16
roll
xchg
xchg
dec
ljmp
fisubrs
pop
aas
fisttpll
movsb
and
mov
sbb
add
xor
cltd
jecxz
loope
lret
mov
mov
adc
xchg
sub
loop
sbb
into
fs
pop
xor
mov
xor
pusha
xchg
test
shl
loopne
cmp
dec
mov
pusha
pop
xor
lahf
xchg
les
add
push
adc
insb
xor
jnp
test
mov
adc
or
ffreep
xor
mul
mov
gs
outsl
cmc
les
cmpsb
bound
inc
sahf
sub
loop
decb
sub
lods
addr16
push
sub
ret
push
fsubrl
push
adc
cmp
cltd
xlat
lods
cmpsb
sbbb
cmp
lret
mov
and
mov
push
xor
outsl
icebp
aad
cmp
dec
roll
push
sub
mov
push
xor
pop
add
mov
bound
rorb
adc
out
out
mov
add
push
orl
sub
cmc
and
fstpt
xor
inc
int3
ret
push
xchg
dec
mov
popa
adc
ror
loope
adc
pop
sbb
push
leave
cwtl
ljmp
pusha
mov
std
lret
in
cwtl
push
cwtl
fdivrs
cmp
xchg
lcall
jecxz
mov
scas
mov
dec
and
inc
and
shrl
lods
sar
cmp
dec
push
repnz
out
push
dec
lret
ljmp
repz
fstpt
test
fwait
sbb
xchg
mov
push
jle
adc
in
push
mov
movsb
js
bound
pusha
sti
gs
divb
leave
and
icebp
pusha
xchg
mov
int
leave
mov
mov
sbb
lcall
and
jmp
mov
inc
mov
cmp
jae
push
insl
rorb
cmp
rclb
in
inc
jo
movsl
pop
mov
ret
into
into
pop
mov
sahf
dec
mov
and
jmp
fadd
adc
es
inc
xchg
jmp
addb
ja
stc
daa
mov
adc
in
jne
mov
lret
sbb
sbb
aaa
mov
mov
cli
stos
push
cmp
jmp
subl
es
das
es
and
int
push
sbb
call
leave
pop
popf
out
push
add
pop
cmp
jno
call
jmp
cmp
mov
jbe
scas
loope
in
sub
mov
filds
je
sbb
jne
test
adc
xchg
jnp
jmp
pop
sub
xchg
repnz
das
movsl
sub
add
outsl
insl
inc
imul
lahf
fwait
or
mov
or
pop
add
mov
mov
andl
mov
push
sub
or
sbb
cmp
add
rcrb
mov
add
push
mov
aas
mov
push
pushf
fstps
loop
fucomp
ret
fcomp
push
fmuls
daa
dec
movsl
into
nop
loopne
lock
scas
cltd
mov
push
mov
mov
mov
push
test
xchg
mov
xchg
jno
arpl
xor
xorb
jno
jne
sbb
out
add
fincstp
mov
add
cmp
fcoml
ljmp
fsubrs
xor
cs
popf
pop
jb
fdivrp
push
shlb
mov
int3
add
xlat
sahf
cmc
dec
or
dec
imul
inc
rclb
fsubs
outsb
sbb
dec
xlat
xor
fs
loope
cmp
xchg
fwait
nop
jg
lret
xorb
add
push
rorb
loopne
cmp
pop
jns
dec
enter
bound
sub
xor
push
ret
cli
call
jno
cmpsb
cli
psubusb
ficoms
filds
gs
or
mov
jmp
ss
dec
cld
add
sbb
jns,pt
sbb
test
sbb
mov
mov
fmull
xor
sbb
popf
mov
and
mov
xchg
cmpsl
cmc
sbb
aam
dec
adc
dec
pusha
add
out
popf
xchg
test
clc
out
dec
movsl
and
xlat
test
js
outsl
or
sub
outsl
pop
xor
dec
xchg
or
cwtl
xor
into
xchg
fdivl
clc
inc
aas
mov
in
pop
xchg
fdiv
rol
je
rolb
andl
in
daa
out
mov
inc
js
cmc
jge
pop
jno
jl
mov
push
lret
pusha
dec
nop
dec
and
fiadds
jp
leave
sarl
dec
out
rorb
test
cmpsl
sbb
loop
push
dec
xor
xchg
cmc
imul
mov
sti
pop
mov
jp
fsubs
aam
mov
and
pop
and
rcrb
mov
jae
ret
in
iret
xchg
fcomps
or
or
cld
add
loopne
push
xor
mov
or
mov
outsl
sub
pop
aam
cwtl
cmp
loope
mov
test
mov
xchg
stos
cs
shll
lea
jg
pop
or
xor
sub
or
push
enter
jmp
rolb
push
ds
pop
lea
fcoms
jmp
fsubl
loope
iret
fnstenv
mov
lcall
pushf
xlat
sub
in
mov
ja
shll
jno
dec
test
mov
mov
sbb
stc
outsl
hlt
mov
cmp
xchg
xchg
mov
gs
inc
cmp
andb
sub
cmp
dec
stos
adc
mov
mov
insb
mov
dec
cld
cmp
add
mov
clc
pop
mov
ljmp
jp
sub
cs
loope
inc
and
scas
push
sub
push
mov
push
push
push
mov
aaa
loop
test
fsubrs
mov
xchg
fs
or
popf
push
push
les
mov
push
ljmp
cltd
pop
aad
push
sbb
jecxz
les
enter
stos
loop
mov
js
and
sarl
push
pushl
dec
mov
sbb
push
pop
jmp
inc
iret
mov
dec
xor
push
xchg
ret
sbb
dec
xchg
pushf
sub
les
js
inc
loop
in
cwtl
add
int
subl
pop
xor
dec
xchg
sub
push
xchg
test
leave
and
and
popa
pushf
clc
pop
sbb
dec
dec
and
inc
mov
and
inc
in
push
push
in
sub
in
pop
test
outsb
xor
cmp
xchg
fucom
dec
idivb
cs
repz
ret
daa
and
xchg
dec
jl
push
std
xchg
fistl
pop
fwait
into
movsl
testl
inc
lahf
or
fcompl
movsb
jno
push
outsl
leave
dec
push
pop
or
mov
jno
mov
mov
and
data16
xor
in
sbb
outsb
adc
and
mov
xor
arpl
insb
inc
push
or
sbb
sbb
loope
jns
mov
sub
mov
aas
xor
push
movsb
pop
out
jo
imul
add
pop
in
and
fsubrs
pop
rclb
repnz
call
insl
outsb
ret
pop
loopne
add
dec
outsb
sarl
mov
sarl
out
sti
imul
iret
lahf
and
dec
push
aad
lods
jne
push
enter
mov
inc
xchg
xchg
divb
incl
push
fdivs
mov
mov
inc
lcall
adc
outsb
inc
jp
outsl
in
mov
stc
add
sbbb
loopnew
xor
es
stc
cmp
add
jl
mov
arpl
sub
nop
pop
mov
rcr
lods
stc
pop
insb
jb
jae
cld
mov
hlt
mov
and
fs
sub
xchg
aam
ljmp
imul
mov
jae
jg
pop
repnz
inc
stos
les
shll
outsl
std
shll
lret
mov
pushf
push
or
sub
dec
mov
pop
mov
sbb
jbe
es
mov
xchg
pop
jp
add
mov
mov
add
in
lds
xchg
aad
dec
add
jle
mov
xchg
mov
pusha
popf
mov
pop
sbb
jbe
in
out
push
push
mov
adcb
into
iret
fucomp
jle
lahf
and
negl
pop
dec
out
or
roll
lods
and
push
xor
in
loop
inc
dec
jmp
xor
dec
pusha
fstpt
vpshufd
int
mov
inc
dec
pop
pop
xor
cmp
pop
faddl
mov
sbb
int3
imul
adc
ret
stc
pop
mov
test
sbb
mov
xchg
rol
mov
pop
mov
and
mov
inc
push
cli
lea
fisubs
and
mov
lods
add
add
add
loop
out
mov
bound
push
push
cmp
xchg
push
jbe
mov
lods
out
mov
outsb
enter
mov
mov
int3
dec
or
sbb
cmp
sub
in
data16
cltd
jmp
sbb
std
je
hlt
cmp
daa
lock
inc
jne
push
dec
mov
xor
mov
sahf
mov
mov
push
fadd
and
or
mov
adcl
mov
popa
sti
inc
imul
cs
pop
fiadds
cmpsl
and
push
mov
stos
adcl
mov
mov
jecxz
fnstsw
sbb
mov
adc
cmp
stc
out
ss
jno
mov
jb
jg
sbb
inc
mov
push
jg
lahf
mov
cmp
clc
fabs
dec
in
loop
shl
arpl
mov
sub
cmp
je
jo
rcl
lahf
mov
or
lods
push
xchg
push
inc
inc
mov
push
mov
xchg
mov
mov
fstps
xchg
fiaddl
xchg
push
popa
movsl
dec
js
sahf
and
mov
push
adc
adc
dec
and
movsb
addr16
in
jo
and
out
jo
mov
sbb
or
rolb
rolb
mov
dec
add
stos
clc
dec
jbe
scas
imul
shll
fisubl
sub
mov
lods
add
dec
fists
int
push
pop
mov
out
jno
mov
bound
mov
inc
xor
rcrb
mov
sub
xor
lcall
jno
insl
daa
push
jmp
imul
xor
sbb
jg
scas
dec
js
jecxz
stos
fcoms
or
add
bound
subl
imul
out
xor
inc
test
mov
andb
push
popf
xchg
sub
aaa
xchg
std
lods
inc
les
pop
fmull
aad
mov
jne
repnz
enter
jnp
or
inc
in
jo
ss
dec
push
imul
ljmp
test
test
loopne
jo
in
cmpl
fimuls
push
xor
mov
sub
lahf
gs
out
cmp
dec
push
cwtl
mov
xchg
inc
pop
loopne
in
loop
out
sarb
bnd
xchg
in
cmc
xchg
test
fdivp
add
sub
mov
lahf
or
bound
icebp
jge
cwtl
rol
jae
test
and
inc
xor
bound
mov
or
repnz
and
imul
sbb
test
inc
or
push
in
cmpsl
in
fnstcw
aas
xorb
jo
xor
mov
repnz
sbb
push
aad
fiaddl
ljmp
adc
scas
fnstcw
jp
sub
test
cmp
loope
jb
mov
add
out
mov
xchg
les
repnz
insb
stos
mov
push
cmp
push
pop
cltd
clc
jae
push
lretw
mov
or
mov
outsb
xor
shr
gs
addr16
insl
stos
or
inc
pop
orb
jmp
pop
dec
xchg
shll
mov
jno
lahf
mov
mov
lock
jns
out
xor
jae
and
jne
xchg
frstor
repz
xor
dec
pop
lods
push
adc
sbb
push
pop
push
jo
jns
inc
mov
repz
gs
das
inc
in
mov
fidivrs
rcl
scas
loope
fsubr
arpl
sbb
adc
mov
adc
pop
ja
push
xchg
mov
inc
sub
pusha
outsl
inc
mov
mov
insl
xchg
mov
push
adc
ljmp
shlb
mov
sbb
andb
xchg
movsl
mov
add
cmpl
and
pop
test
sarl
adc
mov
cwtl
jmp
mov
or
push
stc
dec
mov
inc
inc
out
cmp
mov
dec
inc
dec
sbb
lea
leave
dec
out
sahf
push
adc
icebp
jns
stc
push
ljmp
jo
movsl
aaa
cs
pop
mov
mov
call
push
stc
push
test
fisubl
loope
cld
imul
jle
imul
addr16
cli
and
jnp
enter
js
movsl
mov
pop
shll
shrb
fimuls
mov
ja
add
adc
movsb
add
xchg
popf
arpl
mov
in
ret
sbb
xor
jmp
mov
daa
orl
jo
gs
pop
mov
inc
jno
push
loopne
ret
sbb
push
sbb
ret
add
shlb
out
inc
popa
jae
xor
repz
imul
and
mov
cld
sub
xchg
es
and
fwait
std
cltd
push
arpl
or
cmpsl
dec
push
popf
mov
and
movsb
xchg
dec
lds
insl
cli
mov
inc
jne
mov
andl
loop
test
jg
into
icebp
pushl
push
shll
sub
cld
cmp
push
outsl
in
xchg
cmp
cmp
xchg
mov
pop
div
jno
cmc
or
push
mov
mov
mov
xor
sub
shl
pop
xchg
cmp
aam
and
in
fs
inc
pushf
shl
in
jge
mov
popf
dec
fdivs
mulb
das
jbe
mov
popa
inc
aaa
xor
mov
jns
dec
xor
mov
insb
cltd
push
sbb
iret
push
ftst
shr
and
jbe
or
daa
mov
fsubl
sar
mov
sahf
jge
repnz
hlt
icebp
addr16
ds
or
rcr
jmp
fnstcw
xchg
nop
mov
mov
xchg
mov
jo
mov
repnz
aam
aas
icebp
aam
push
sub
sti
inc
testb
aas
pop
add
insb
shlb
xor
jge
inc
sub
mov
pop
daa
jl
cli
lcall
sub
scas
fisubs
sbb
jbe
ljmp
test
inc
jnp
jo
movsb
xor
sub
aas
pushf
mov
dec
stc
cmc
stos
push
push
xchg
mov
mov
lods
and
out
pusha
fistps
push
out
fmulp
popf
add
mov
movsl
fs
cvtdq2ps
jne
test
pop
mov
mov
inc
jl
push
mov
push
sub
or
mov
repnz
or
call
mov
pop
xchg
pop
pop
pop
sbb
rorb
mov
push
mov
jmp
sbb
xor
ljmp
adc
inc
ljmp
test
dec
mov
ret
and
push
xor
pop
sub
cld
dec
rol
test
pop
pop
xchg
dec
data16
lcall
xchg
movsl
divl
inc
and
xor
cmp
sub
push
lock
sti
filds
mov
mov
inc
dec
addr16
int3
syscall
jmp
in
mov
neg
leave
adc
fidivrs
insb
or
scas
sub
mov
mov
dec
mov
leave
ds
adc
mov
mov
mov
dec
bound
sub
mov
add
xchg
shlb
or
incb
cmp
dec
mov
pop
lea
les
rorb
fsubrs
pop
push
xor
mov
or
fidivrs
xor
push
fnstenv
shrb
fsubs
repz
lock
daa
sbb
shrb
ljmp
add
cmp
js
push
xchg
cld
mov
fs
loope
out
in
or
pop
jmp
xchg
cmc
lcall
or
adc
push
imul
inc
and
push
adc
dec
mov
sub
dec
dec
test
pop
fnstcw
sbb
cmpsb
repnz
fwait
adc
inc
addr16
cltd
insb
mov
out
mov
neg
pop
adcl
neg
dec
dec
lock
cmp
fyl2x
jge
xchg
notw
pop
cmc
movsb
xor
stos
shll
pusha
sub
mov
cmp
neg
or
push
mov
push
xchg
movsb
xor
cli
and
sub
daa
cmp
or
push
or
xor
jecxz
push
dec
push
negb
iret
scas
enter
lcall
imul
out
add
dec
sarb
dec
arpl
ss
sbb
lahf
dec
popf
into
insl
pop
loope
or
fwait
jno
test
nop
ret
pop
out
cld
inc
dec
push
push
lods
cs
ret
in
pop
dec
and
lods
mov
ret
outsb
mov
test
call
jmp
adcl
scas
push
lds
aam
push
push
ret
cmp
jle
call
mov
inc
out
jnp
adc
scas
jb
jl
int
ds
lret
xor
inc
out
frstor
push
jnp
push
and
testb
divb
and
repnz
mulb
jmp
sti
es
adc
xor
pop
mov
ds
add
jno
push
mov
loopne
cmpsb
jecxz
and
loope
lcall
push
ds
ja
adc
jno
push
ret
arpl
push
sbb
xchg
lods
fmuls
push
enter
and
mov
jae
push
mov
orl
mov
mov
rorl
sbb
sar
repnz
sub
jp
outsl
adc
push
pop
sbb
sbb
mov
mov
xchg
test
dec
lods
dec
std
dec
mov
add
les
lcall
sub
call
call
insb
out
jne
imul
sub
inc
insb
divl
int
dec
bound
lcall
cmp
push
sub
mov
mov
xorl
das
test
add
lds
loopne
bound
cmp
ja
sbb
sahf
test
xchg
fidivl
sbb
sbb
inc
loope
rcrb
pop
sbb
das
add
insl
js
gs
int3
and
test
das
mov
fwait
loope
insb
xor
inc
mov
add
cmp
cmovl
dec
cmc
stos
pop
subb
test
fisubrl
xlat
imul
call
add
cmp
inc
jecxz
insb
push
jnp
gs
cltd
lea
imul
lock
xlat
push
lods
psubq
mov
sbb
lret
scas
cld
fadds
mov
push
dec
lods
cmp
lea
sarb
add
enter
sarb
dec
repnz
inc
std
push
xchg
pop
ffreep
xchg
dec
ret
ja
stc
sbb
jns
pop
cmp
jge
jge
fiadds
in
sbb
add
iret
mov
stos
outsl
icebp
roll
repz
inc
cli
push
lret
test
mov
mov
xor
cmp
add
paddb
dec
dec
inc
lea
sbb
jae
fwait
mov
mov
sub
aaa
jecxz
movsb
jecxz
sub
xchg
stos
in
aaa
mov
mov
push
push
pop
je
into
dec
fs
inc
lret
popl
jnp
push
aaa
roll
jno
and
cmp
into
mov
mov
fadd
ss
sub
negb
push
xchg
lea
pop
jg
cld
inc
xor
mov
pop
hlt
es
mov
roll
mov
ljmp
push
subb
inc
nop
insl
or
cmp
sbb
aam
mov
xchg
cli
mov
adc
clc
testl
lahf
inc
push
push
or
or
xchg
ss
pop
fucomp
outsl
lods
rcrl
cmp
inc
push
movsl
les
aad
xchg
jne,pn
lret
lock
scas
fsubr
adc
lret
dec
movsl
cmp
ret
ja
mov
jge
mov
sbb
aam
scas
pushf
or
lds
popf
dec
in
cwtl
jg
jno
xor
hlt
sub
mov
and
stos
or
outsb
cmp
negl
clc
xor
popa
unpcklps
pop
jmp
dec
sahf
push
dec
addr16
test
jae
pop
adc
addr16
pop
inc
jo
and
mov
test
mov
imul
popf
std
xchg
jmp
movsb
cs
adc
scas
inc
jb
addr16
cmp
hlt
adc
cmc
sbbl
aam
mov
push
sti
clc
icebp
in
test
es
out
loop
dec
je
hlt
jae
push
lcall
stos
push
mov
jne
std
xlat
cmc
mov
scas
dec
or
fnsave
cmpsl
in
cmc
sub
adc
mov
and
nop
push
aaa
fsubrp
shr
or
xchg
cmpl
jl
sahf
loopne
aam
mov
shlb
popa
lods
sahf
subl
jbe
add
addr16
sub
pop
add
subl
and
inc
xchg
sub
movsl
jmp
or
or
inc
inc
cli
sub
repz
roll
mov
scas
jae
notb
test
je
push
mov
sub
aad
push
push
sub
pop
or
or
sub
push
outsb
sbb
push
mov
pop
push
pop
pop
dec
xor
mov
lods
cmovl
mov
mov
pop
jp
push
mov
push
mov
loope
cmp
shlb
es
cmc
icebp
xor
sub
xchg
mov
inc
je
or
rcll
mov
in
add
push
dec
aaa
push
scas
mov
mov
dec
pop
or
fidivrl
out
decb
push
push
cmpsb
adc
fidivs
idivl
pop
cltd
ret
add
or
add
adc
insl
xor
insb
popa
xor
pop
ficoms
xor
fildl
cmc
lds
scas
push
xchg
dec
hlt
jp
cs
jne
push
repz
lods
inc
orl
imul
fbld
fcompl
sti
mov
xchg
imul
les
leave
dec
sahf
repnz
mov
out
cmp
xchg
nop
sbb
shlb
ret
in
and
push
out
into
lods
xlat
inc
xor
pop
cld
ss
pop
push
int3
ds
mov
pop
test
cmpsb
xchg
fldcw
jb
sub
sub
jle
cmp
sbb
test
jl
mov
inc
push
scas
faddl
cmpsl
mov
sub
data16
xchg
outsl
xor
aaa
mov
testb
rolb
fcompl
mov
sbb
jne
and
jnp
mov
push
nop
fwait
xchg
iret
push
ss
das
call
ss
inc
lds
test
dec
adc
jo
fbstp
pop
mov
add
js
mov
cmovnp
push
cmpsl
movsb
xchg
cli
inc
mov
pop
xlat
repz
mov
push
xchg
mov
movsl
cmpsl
dec
or
loopne
sub
cli
std
push
or
cmc
mov
jl
or
arpl
mov
cs
movsb
dec
push
or
or
and
sbb
icebp
pop
pushf
add
pop
and
adc
xchg
mov
cmp
jbe
je
aam
mov
cmpsb
ljmp
mov
aas
add
and
push
push
add
pop
jb
clc
push
pushf
and
xor
push
jge
jecxz
es
add
push
mull
hlt
sub
jae
cli
shrb
fiadds
xor
icebp
adc
cmp
into
dec
cmp
dec
jns
pushf
mov
xchg
loop
jnp
cmp
cmp
es
addr16
jmp
xchg
sub
jle
fnstsw
imul
lods
fdivr
pop
pusha
jbe
iret
push
xor
or
mov
xlat
shlb
popf
xchg
adc
mov
or
sub
push
xchg
fwait
jmp
je
mov
arpl
mov
imul
lcall
xor
sbbl
add
cmpsb
int3
lahf
mov
cmp
cltd
in
outsb
insl
lods
mov
fxch
ljmp
add
das
jg
loop
and
decl
adc
xor
sahf
in
lods
mov
mov
xor
scas
fisttpl
and
push
sbb
jge,pt
mov
lods
movsb
inc
out
mov
punpckhdq
das
cmp
push
inc
xlat
nop
xor
sub
cmp
js
shrl
mov
mov
mov
in
pop
lds
aad
xchg
push
iret
mov
push
mov
dec
icebp
mov
mov
sbb
push
mov
fcmovne
xchg
inc
jge
or
in
repnz
mov
pop
cmpsb
jae
xchg
add
mov
xchg
or
sbb
fwait
or
xchg
popa
dec
mov
fsub
add
push
mov
test
push
arpl
sbb
mov
lcall
movsl
mov
xchg
pop
in
push
xchg
subb
pop
sbb
cwtl
popa
hlt
insb
int3
outsl
jne
aam
sahf
popf
cli
mov
lods
in
mov
adc
shrl
push
xorl
sbb
xor
mov
bound
test
sbb
loope
movsb
xchg
mov
test
sub
xor
ja
inc
movsl
inc
xor
dec
mov
jge
mov
cltd
ret
std
mov
lcall
cmp
dec
cmp
fxam
lods
add
sub
rorb
js
test
jbe
jnp
xor
jle
ljmp
and
lret
lcall
sbb
fucom
aad
jo
xchg
aaa
pop
neg
aad
sub
aaa
pusha
or
sub
insl
or
inc
xchg
and
jb
clc
mov
iret
adcl
jae
inc
jns
mov
iret
xor
or
call
insb
sarb
filds
int
les
lret
lret
inc
sarb
and
cmc
pop
mov
and
iret
lock
gs
sub
jl
iret
push
xchg
mov
mov
mov
push
push
ljmp
test
jg
mov
or
push
inc
lcall
fnsave
xchg
pop
enter
adc
pop
jo
sub
push
push
popf
gs
jns
push
in
pop
movsl
dec
jbe
icebp
or
inc
sbb
mov
les
pushf
clc
jnp
xchg
test
push
iret
dec
xor
loopnew
js
xlat
cli
loop
sbb
sbb
gs
gs
sub
xchg
sbb
xchg
fbstp
jl
mov
mov
cmp
jb
xchg
sbb
ljmp
dec
int3
iret
push
mov
loope
jns
xchg
mov
jo
subl
dec
dec
int
jmp
fldenv
loop
sbb
cmp
cmp
push
ret
jg
in
jge
lds
sub
pop
jnp
pop
and
adc
icebp
ljmp
cmp
aaa
je
sbb
cmp
sbb
dec
arpl
pushf
jl
aam
sub
adc
adc
pop
push
lods
add
int3
dec
arpl
mov
outsl
pop
mov
cmp
loopne
in
clc
adc
lea
xlat
mov
xlat
hlt
outsb
pop
cli
cmpl
push
mov
dec
sti
sbb
or
outsb
cmp
lock
movsl
push
fwait
push
fwait
push
fstl
xchg
mov
jecxz
push
cwtl
fwait
insb
or
pop
rolb
div
icebp
stos
sub
into
sarb
ds
cmp
jge
lret
sbb
sbb
addl
push
addr16
movsl
je
movsb
xchg
lods
pusha
jb
push
mov
into
cmpsl
sub
in
cmp
jmp
jbe
std
push
mov
gs
xchg
sbb
mov
and
fiadds
mov
and
jecxz
loopne
shll
call
les
cmp
test
mov
or
adc
fs
fadd
subl
call
mov
xchg
mov
cmpb
xor
add
mov
add
orb
dec
movsl
jns
stos
in
cmp
jge
sbb
fcmovu
sub
mov
mov
jg
xchg
and
xchg
mov
mov
xchg
mov
mov
pushl
sub
mov
in
scas
sbb
stc
inc
mov
cmp
xor
sbb
xlat
xchg
xchg
push
push
test
das
loop
rcr
fld
inc
rcrl
lods
repnz
out
or
push
xchg
loope
insl
into
sbb
je
mov
sbbl
pop
pop
jmp
mov
sarb
cmp
mov
ljmp
scas
dec
inc
cmp
inc
mov
and
adc
test
insb
pop
lea
in
adc
mov
push
xorl
xchg
ret
jne
call
addb
xchg
or
push
xchg
data16
add
insl
pop
mov
jns
scas
inc
lahf
sub
int
jne
int
add
xchg
push
mov
push
cmp
inc
or
mov
jge
inc
mov
xor
xchg
adc
popf
pop
jbe
and
add
mov
sti
pop
repz
xchg
jo
test
les
mov
xchg
sbb
insb
and
popf
cli
push
or
dec
dec
and
cmp
pop
add
bound
dec
xor
sub
xchg
out
sub
add
in
ljmp
or
aad
ja
call
dec
inc
aaa
loope
xchg
pop
mov
pop
adc
sub
mov
cmp
cltd
jmp
mov
mov
inc
fsubrs
pushl
repnz
int3
out
pop
popf
pop
xchg
rolb
jle
adc
gs
ds
push
add
sbb
mov
and
repnz
aam
popa
int3
insb
jp
sahf
ljmp
and
mov
pusha
lahf
push
test
inc
ret
xchg
xor
daa
push
and
xor
adc
out
inc
popa
jmp
xor
mov
stos
pop
pop
add
shl
push
ds
rol
mov
xor
mov
movsl
rolb
lock
push
enter
add
ljmp
cwtl
inc
jne
adc
or
outsb
inc
loopne
mov
push
mov
inc
xchg
add
imul
mov
and
scas
sar
fadd
ret
out
shll
or
enter
rcl
mov
testl
sahf
add
jecxz
pop
push
adc
jp
arpl
push
pop
aaa
push
out
inc
aaa
jo
add
shl
xorl
das
call
int3
adc
cmp
jb
js
inc
cmp
or
fdivp
jne
cltd
lock
add
call
jmp
pop
xlat
imul
or
pop
fxch
mov
mov
push
fs
jb
shl
mov
xchg
cmc
or
mov
aad
mov
pop
cmp
cs
pushf
adc
outsb
cli
adc
imul
fcompl
or
or
and
add
cli
shl
jns
movsb
bound
xchg
jae
pop
das
fwait
adc
xor
adc
mov
add
xor
mov
out
mov
cmp
xor
pushl
mov
imul
adc
fidivrl
xor
lock
mov
mov
lods
scas
inc
mov
ret
pop
test
aas
into
cmpsb
jb
in
pop
jne
int
adc
call
das
in
rorl
sub
test
pop
test
daa
adcl
jge
insl
or
hlt
hlt
std
insb
imul
cmpsb
sbb
xchg
pmaxub
popf
js
fdivrl
sbb
jecxz
sub
daa
mov
add
je
andl
test
mov
andl
add
jmp
test
xchg
mov
inc
dec
fwait
les
jo
mov
and
add
call
jp
adc
pop
pushf
inc
jp
ja
popa
fiadds
xchg
cmp
pop
pop
in
jns
jle
ret
push
out
imul
arpl
push
xchg
xchg
int3
inc
sbb
lea
call
adc
mov
cmpsb
std
mov
fildll
scas
sub
lods
test
shlb
rclb
das
repz
jae
mov
test
jno
pop
sbb
std
insl
pop
roll
pop
fsub
add
ss
adc
cwtl
sahf
test
sub
in
sti
sbb
cmp
aas
repz
clc
xchg
loopne
mov
movsl
push
sahf
push
push
and
mov
loop
dec
dec
inc
sub
hlt
cld
cmp
aam
and
add
lcall
lret
push
leave
mov
pop
and
jne
ljmp
xchg
or
out
sahf
std
aas
sbb
push
adc
jns
xchg
ja
imul
pop
push
pop
in
mov
add
mov
mov
popf
in
push
cmp
cmpsl
out
das
xor
daa
push
addr16
clc
pushf
dec
xor
flds
pop
mov
add
add
xor
jnp
mov
movsb
aaa
aaa
lret
faddl
adcl
outsb
addb
fmull
mov
jg
pop
or
mov
lds
push
prefetch
aas
push
push
push
push
xor
sahf
jge
push
push
pop
sbb
inc
ds
mov
cmc
or
mov
inc
ffree
mov
pusha
pop
and
pop
icebp
adc
jb
negl
sub
das
sub
das
inc
arpl
push
pop
aad
dec
fdivl
das
jns
add
and
sub
test
stos
nop
xor
out
lds
subl
dec
bound
fucompp
mov
imul
or
cmp
lock
adc
jnp
test
hlt
inc
ja
enter
outsl
mov
cmpsl
mov
les
jb
push
scas
jno
dec
int3
dec
sub
movsb
out
fdivrl
lods
imul
pop
sub
repz
adc
aam
lods
jno
clc
divps
lcall
out
and
test
cmpb
jb
test
jmp
bound
dec
js
jle
rcll
in
sti
cmpsl
mov
sbb
fmull
sub
xor
or
or
cmp
iret
stos
outsb
out
push
or
sbb
push
cwtl
mov
push
sti
add
out
or
fcoms
cmp
shl
inc
pop
inc
sub
sub
mov
ja
xor
imul
subb
mov
jecxz
pop
jmp
adc
lods
ret
jo
bound
add
and
dec
and
nop
dec
pop
pusha
loopne
ljmp
lahf
sti
aam
add
fcmovb
jp
iret
fisubs
das
adcb
stos
xor
xchg
mov
pinsrw
cli
xor
mov
stc
inc
stc
std
and
int3
sub
inc
xchg
js
cli
pop
ljmp
fs
pop
leave
sti
stos
and
subb
sbb
sub
jo
mov
jg
sub
mov
cmp
jno
xor
mov
xor
dec
push
cmp
sbbb
data16
or
sub
arpl
ss
sbbl
movsl
xor
subl
shrb
or
aam
jb
pushf
fcomps
ss
pop
in
mov
adc
fwait
in
push
imul
enter
cli
sbb
lea
mov
cld
sahf
sbb
rol
pop
mov
popf
inc
cmpsb
rcr
test
cmp
in
push
or
fistpl
xor
mov
jg
or
aas
rcrb
xchg
adc
jo
cmp
sbb
cmp
fdivp
adc
sbb
cmc
add
xchg
jmp
shrl
jb
pop
ret
cmp
loope
xorb
addr16
inc
lret
sub
pop
lahf
dec
and
arpl
out
in
lods
in
in
arpl
lea
adc
popf
pop
and
inc
cmpsb
or
mov
mov
repz
mov
jmp
pop
data16
out
adc
inc
cmp
inc
out
xor
mov
mov
or
adc
out
outsb
dec
cmp
or
sub
fxch
data16
popf
adc
das
mov
in
mulps
sbb
xorb
cmp
mov
sub
out
out
fsubs
cli
sub
stos
push
sarl
add
minps
mov
pusha
mov
ljmp
gs
icebp
xor
stc
nop
cwtl
enter
jmp
xor
cmp
mov
sahf
push
adc
mov
dec
outsb
jp
xor
jne
push
inc
adc
inc
fwait
inc
test
stos
ja
xchg
pusha
jecxz
into
pop
test
mov
xchg
int3
test
ficompl
sub
lods
pop
sbb
add
xchg
inc
dec
inc
add
lods
out
cld
outsw
jno
xchg
jo
enter
or
loopne
shlb
jb
addr16
lret
lock
inc
mov
jns
shll
enter
xlat
add
sub
pop
jne
cli
pop
xor
imul
je
imul
and
sbb
add
jle
inc
dec
mov
inc
jmp
pop
inc
stc
fistpl
push
arpl
dec
popa
cmp
repz
ds
lods
aam
leave
sub
mov
daa
inc
test
rolb
fiaddl
xor
add
into
or
or
xchg
test
loopne
out
sbb
adc
mov
mov
leave
fdivrl
enter
ja
pop
mov
dec
lahf
inc
jmp
popf
mov
pop
dec
scas
xor
xor
pop
mov
lds
mov
and
jge
sub
add
out
pop
mov
rcl
mov
dec
mov
test
shrl
stc
js
mov
jnp
rolb
cmp
mov
xchg
mov
cmp
stos
cmp
push
leave
add
xchg
clc
rol
jg
pop
pusha
mov
repnz
mov
in
mov
add
clc
push
push
sbb
icebp
jmp
les
sub
orb
neg
mov
int
pop
std
fldenv
dec
pop
mov
add
jno
in
pop
jae
sub
mov
rolb
jo
sarb
push
nop
jmp
mov
insl
movsb
shll
gs
and
cli
jl
lahf
hlt
sahf
imul
jne
adc
mov
jno
inc
ljmp
lret
ret
mov
jns
or
rorl
push
fiaddl
jge
sar
dec
mov
or
cmp
enter
push
cmpb
mov
jp
mov
addr16
test
adc
lods
cmp
mov
ja
jecxz
imul
mov
cmp
cmp
loope
push
inc
sahf
loope
cs
push
test
jno
or
cmp
xor
push
cmp
adc
test
jno
aaa
rcrb
cmpsb
mov
fwait
negb
jmp
jnp
shl
shl
mov
stos
stos
add
test
js
cwtl
sbb
mov
out
ljmp
add
mov
sub
dec
adcb
sbb
cmp
cmpsb
xor
orl
xor
mov
in
xor
mov
mov
ljmp
arpl
xor
insb
jp
lods
or
sub
loop
cmp
xlat
data16
ret
push
push
pusha
pop
clc
pop
mov
stc
push
sti
lret
lcall
pop
dec
stc
loope
inc
and
cmp
pop
fwait
lcall
fwait
das
pop
jmp
in
cld
loop
movsl
scas
rcl
adc
aaa
sbb
jg
dec
mov
cwtl
std
out
or
fmul
or
jl
push
mov
into
iret
pcmpeqw
xchg
outsl
js
divb
pusha
lahf
mov
jge
adc
or
push
mov
sbb
cmp
xchg
cltd
mov
vrsqrtps
sub
or
mov
mov
inc
lahf
sbb
cmp
dec
jb
bound
dec
push
inc
data16
sub
rcrb
mov
xchg
int
pop
push
flds
cmp
mov
test
xor
shrb
push
push
cmp
add
add
jge
pop
cltd
pop
or
mov
or
je
pop
jmp
push
jbe
test
dec
stos
xchg
pop
out
lcall
inc
push
mov
pop
insl
sbb
dec
pop
into
cmpsb
or
jecxz
add
mov
je
add
mov
cwtl
or
in
jg
cmpsb
js
cmpsb
xchg
orb
pop
aas
xor
lcall
fwait
scas
in
movsb
mov
xchg
mov
inc
push
gs
cmp
or
and
les
mov
nop
enter
repz
jl
jp
out
or
cli
pop
inc
and
int
setns
lea
int
push
pushf
nop
std
xlat
sbb
cmpsl
mul
xor
ret
or
push
xchg
cmp
fsubrl
mov
xor
enter
and
stos
and
sub
call
in
cwtl
jp
dec
dec
mov
jmp
imul
gs
mov
xor
cmp
cmc
push
pop
fsubl
and
lret
pop
mov
and
sbb
mov
imul
jno
out
pop
or
iret
or
cmp
ret
ljmp
xchg
subl
insb
mov
movsl
gs
add
lods
and
cmp
cmp
mov
stos
lock
das
cmpsb
sub
sub
xchg
add
out
scas
mov
xchg
inc
pop
sub
les
aas
push
mov
stos
jle
mov
mov
btsl
invd
dec
loop
mov
cmp
inc
add
int
cs
hlt
fs
add
test
push
adc
xchg
movsb
das
xchg
fiadds
push
fdivrl
dec
pop
daa
fs
iret
daa
mov
sub
mov
test
jae
or
dec
push
adc
ds
lcall
in
xor
mov
cmp
loop
add
inc
out
sti
lret
and
sub
add
or
es
xchg
les
cltd
and
lock
jae
jg
push
add
push
or
test
repnz
pop
repnz
daa
scas
popa
add
fldcw
movl
mov
sbb
mov
call
out
insb
dec
and
mov
push
mov
lods
add
jecxz,pn
scas
pop
test
push
test
scas
sub
shr
mov
xchg
fs
je
jl
popf
test
and
pop
movsl
fdivrl
int
pop
sbb
mov
imul
pop
sub
pop
jge
ret
mov
jo
sub
notb
dec
jmp
fstps
cmp
jle
rcll
pop
ret
ss
sbb
push
loop
lea
mov
js
xor
dec
cmp
push
fisubs
decb
sub
out
imul
lods
out
icebp
fcoms
mov
aas
and
and
sbb
mov
cmp
pop
loope
pop
inc
ds
das
fldcw
pop
mov
cmp
lea
icebp
dec
pop
into
xchg
inc
inc
inc
into
mov
xchg
cmp
mov
cmp
ret
mov
jge
fidivrs
loope
je,pt
jle
jmp
adc
pop
cli
inc
mov
push
stc
repnz
push
lcall
add
sub
mov
or
imul
inc
cmp
mov
sub
call
std
xchg
dec
insb
inc
add
mov
mov
mov
ds
jne
jg
xorl
ficoms
xchg
mov
test
pop
in
mov
lahf
aas
imul
rorl
inc
repz
fildl
scas
dec
push
mov
mov
inc
stc
pop
dec
push
sahf
xchg
mov
mov
mov
adc
ret
push
divl
sbb
sub
mov
and
pop
sub
repz
in
sbb
clc
or
sub
inc
arpl
insb
cmp
cmp
xor
sarb
aaa
pop
aad
xlat
cld
pop
or
jg
in
test
push
int3
cli
adc
inc
inc
adc
jb
xor
dec
jle
out
mov
icebp
fmulp
mov
mov
clc
ds
and
stos
cmp
xchg
sub
enter
out
das
sbb
pavgw
test
adc
int3
jne
clc
sbb
and
lods
iret
xchg
cmpsb
xchg
cli
push
mov
ljmp
sbb
pop
or
pop
xchg
xchg
mov
push
movsb
aas
jbe
shll
adc
mov
pop
mov
adc
stos
ret
out
in
jae
xor
les
lret
mov
push
sti
bound
leave
repnz
andl
dec
mov
clc
or
fisubrl
mov
je
dec
loopnew
jbe
push
sub
jmp
lcall
loope
loope
test
cmp
lcall
ffreep
sbb
inc
les
push
adc
pop
fsubrs
sub
push
outsl
aam
out
out
mov
mov
and
loopne
lea
jne
lahf
inc
inc
xor
js
mov
xchg
inc
jns
test
jmp
sub
add
lea
add
ja
mov
jo,pn
sbb
es
lock
mov
ret
paddusb
sub
popa
add
shll
mov
or
and
inc
aad
fbstp
sub
js
test
repz
add
lds
adc
dec
dec
mov
daa
cmpsl
loope
std
jle
fldenv
inc
dec
add
rcl
inc
in
xor
outsb
pop
pop
popf
jne
ds
xor
fistps
mov
shl
sub
add
iret
cmp
lret
cltd
hlt
inc
pop
js
xchg
dec
jo
shrl
std
iret
or
cwtl
sub
cmpb
sub
movsb
or
or
lret
cs
test
and
or
cmp
icebp
jne
shrl
cwtl
ljmp
pop
cmp
gs
dec
sbb
add
fs
dec
mov
out
pop
push
push
lret
pop
insl
pop
jg
scas
dec
inc
adc
clc
mov
jnp
xchg
mov
pushf
ss
adc
and
jecxz
clc
loop
addl
lock
aas
or
rorl
add
adc
pop
stos
add
rolb
jle
add
subb
jo
aaa
jno
push
sbb
cmp
test
mov
xchg
repnz
add
loop
mov
cmp
push
lret
bound
inc
popf
cmc
sbb
inc
push
in
sub
ficoms
loopne
jae
sbb
jnp
sub
mov
aad
shrl
pop
add
push
and
sbb
shlb
addr16
out
bound
shll
xchg
mov
fistps
or
dec
sbb
in
mov
cli
push
pop
inc
push
daa
or
add
adc
inc
push
test
push
shll
add
and
jl
jge
sub
lahf
xchg
xor
adc
push
mov
push
push
arpl
mov
dec
jmp
std
loopne
pop
test
or
sbb
outsb
shrl
lret
mov
ljmp
push
adcb
sbb
pop
mov
dec
adc
adcl
nop
addr16
cli
inc
arpl
mov
das
fisttpll
outsb
dec
imul
adc
pusha
repnz
sbb
fs
cmp
jecxz
jecxz
mov
mulb
mov
inc
insb
mov
push
pop
jo
jnp
mov
jmp
stos
sti
scas
pusha
aam
in
and
cmpl
das
jmp
mov
cmp
push
mov
aaa
jg
sarb
xor
and
leave
arpl
clc
rcrl
and
xor
push
inc
out
movsb
std
mov
ss
sub
push
mov
push
pusha
jmp
sub
repnz
loope
mov
cld
or
andl
mov
jo
faddl
xor
cmp
mov
ret
mov
and
xchg
gs
jge
and
xor
inc
cltd
mov
fdiv
adc
fdivrl
add
aad
sti
and
push
xorl
call
rcrb
shl
sbb
sub
xlat
pop
jle
adc
js
cmp
pop
mov
sub
mov
and
mov
scas
jmp
push
das
sbb
mov
cmp
xchg
and
mov
ja
adc
lods
adc
test
jg
ljmp
call
shr
pop
push
stos
ret
and
lods
rorb
push
nop
sub
ss
dec
pop
push
repz
cmp
add
xor
fisubrl
xor
xor
lock
adc
sti
pop
test
add
or
mov
jnp
xchg
adc
dec
movsl
ret
xchg
inc
ss
ds
sub
adc
mov
mov
mov
int
xchg
repz
nop
leave
and
cmp
pop
outsl
sbb
and
jg
adc
int
sub
outsl
mov
rcrl
jge
and
cmp
imul
mov
adc
sub
push
into
arpl
movsb
pop
out
push
stc
push
add
cmpsl
push
jmp
mov
cwtl
push
repz
leave
and
sbb
pop
cmp
mov
popf
inc
xchg
hlt
loope
in
sarl
arpl
mov
lcall
shl
push
ret
lods
je
sub
mov
leave
test
std
xor
outsl
pop
inc
stc
or
xchg
add
pop
popf
fcompl
ljmp
adc
aas
jle
xor
inc
lock
cmp
push
ret
pop
or
movsb
cmp
leave
jl
jecxz
pop
or
xchg
jnp
ljmp
clc
pop
jl
jne
jbe
mov
call
rolb
sub
xor
shll
es
mov
loope
pushf
movsb
mov
scas
enter
in
stos
movsb
test
addr16
repnz
cld
faddl
imul
lock
push
loop
and
mov
or
aam
stc
mov
inc
xor
std
dec
inc
nop
fists
push
hlt
inc
xlat
test
add
stos
push
mov
mov
mov
cld
fisubl
gs
push
cli
pop
fisttpll
outsb
ja
nop
jns
movsl
in
inc
popf
roll
xchg
mov
xor
cld
scas
and
jl
pop
cltd
cmp
pop
movsl
jl
je
or
shrl
jno
shrl
lock
cli
and
xchg
mov
mov
lahf
cli
shlb
sarb
test
mov
fldcw
lods
cs
xchg
and
stc
les
pop
ficoms
negl
xor
inc
movb
jae
and
shr
es
dec
daa
leave
js
sub
cltd
faddl
ret
lret
mov
out
jmp
loope
je
jl
cmp
enter
push
out
xor
lahf
ss
push
and
pushf
sub
xchg
jecxz
lea
call
mov
nop
pop
fstpl
dec
inc
jae
loope
outsl
inc
repz
jae
cltd
cmp
or
mov
iret
and
pop
lock
mov
out
repz
cmp
fdivrl
adc
mov
aad
scas
sar
dec
or
loopne
and
and
shlb
pop
cli
add
in
sbb
pusha
or
lock
sub
sbb
and
fsubr
sub
sbb
lods
ljmp
cmp
out
cmp
shrb
movsl
mov
mov
xor
movsl
hlt
outsl
dec
sbb
and
dec
inc
mov
dec
xchg
fldt
idiv
pop
cmc
popf
andl
mov
and
ret
pop
adc
or
mov
adc
pop
mov
pop
pop
or
sub
mov
in
and
push
fnsetpm(287
call
add
loop
cs
in
fs
dec
test
lret
int3
inc
add
sub
or
or
or
or
ret
inc
push
pop
scas
addl
jg
pop
jo
mov
mov
and
int3
popa
cmpsb
roll
mov
loopne
idivl
outsb
mov
and
cmp
jb
shrl
inc
inc
xchg
xchg
inc
mov
push
rorb
xchg
lret
mov
ja
ds
inc
inc
pop
add
push
insb
stc
jbe
mov
sti
and
sub
sbb
mov
xchg
inc
sarl
ds
mov
fwait
cs
lret
mov
fcmovnbe
mov
pop
loope
rolb
sbb
mov
mov
mov
lret
jns
xchg
sub
pop
ja
data16
imul
sbb
ss
mov
loopne
pop
sti
pop
or
lahf
push
loope
inc
adc
mov
or
dec
into
and
out
aas
ret
pop
or
and
mov
inc
cld
repz
inc
arpl
push
inc
cmp
shrl
test
aaa
shlb
mov
shrb
jb
fisttpll
cltd
scas
aas
add
subl
mov
test
sbb
popa
fiadds
loopne
or
pop
je
shll
xchg
aad
popf
fdivrs
in
loope
and
call
mov
xchg
mov
xchg
sbb
insb
bound
jg
push
xchg
out
ljmp
loope
mov
notb
inc
pop
xor
mov
test
or
test
xchg
aad
leave
lcall
popa
inc
push
add
lea
in
cmp
lock
hlt
or
les
jle
sub
orb
adcb
push
or
cmp
es
cmp
sbb
or
daa
jp
ja
movsb
stos
jno
aas
mov
cmp
into
je
dec
dec
and
hlt
push
pop
cwtl
pop
jno
xchg
test
jbe
leave
xor
sub
adc
or
mov
negl
arpl
loop
sub
lods
out
mov
mov
xchg
and
nop
outsb
call
insl
int3
mov
jnp
xchg
sub
mov
gs
or
and
push
or
daa
adc
lock
repz
mov
fwait
adc
cmp
pop
cmp
jno
popa
in
js
nop
dec
addr16
mov
pushf
dec
add
cwtl
add
xchg
and
inc
lods
jnp
xor
sub
xor
mov
shlb
pop
dec
cmp
in
fidivs
outsl
lahf
popl
in
adc
jg
push
fistl
pusha
jmp
or
mov
enter
lods
cmp
inc
je
push
mov
pop
fmulp
int3
push
dec
arpl
bnd
cmp
les
jg
imul
cli
push
inc
lods
inc
mov
mov
pop
dec
mov
les
lahf
mov
mov
scas
mov
cmp
jg
cmp
arpl
or
pop
sub
or
rol
imul
lcall
adc
push
bound
ficoml
dec
add
add
pop
sub
xchg
xor
orl
sub
daa
adc
test
jge
lea
loop
sti
fdivrs
or
cmp
shll
pop
and
stos
fstpl
sarb
adc
jle
mov
and
mov
sub
in
xor
movsb
inc
pop
cmp
ret
ret
stos
in
jnp
insl
loopne
lea
push
aam
adc
push
cmp
test
mov
negl
sahf
aaa
popf
loopne
outsl
or
fmuls
or
push
mov
jbe
jb
sbb
and
cmp
out
fistps
fdivr
sbb
hlt
test
adc
int3
insb
jl
addl
jp
sub
imul
jl
jecxz
stos
inc
pop
nop
int3
push
add
or
out
ret
push
lea
les
sub
push
add
inc
shl
cmpl
lods
sar
jbe
pop
addr16
xchg
jne
inc
aas
mov
add
and
stos
pop
xchg
lds
jmp
pop
std
jge
int
sti
fbstp
mov
push
adc
pop
mov
fcmovnu
addb
pop
rep
push
in
cmp
jecxz
jp
sbb
add
andb
outsb
inc
pop
push
or
sbb
test
jns
lahf
adc
cmp
je
loopne
call
outsb
arpl
aas
fstpl
rorb
fdivrl
dec
test
add
jb
add
xor
jmp
push
lods
xchg
loope
lcall
mov
imul
scas
cmpsb
push
adc
fmuls
test
mov
push
iret
mov
xor
pop
or
shrb
xchg
fimuls
mov
and
jg
mov
into
outsb
jne
push
mov
mov
adc
or
mov
stc
jno
ret
pop
cmp
or
push
std
push
hlt
inc
push
pop
cltd
insb
sub
mov
daa
fimull
push
call
xlat
cwtl
nop
xor
pop
and
jns
mov
rorb
cli
inc
xchg
out
rclb
insb
lock
mov
mov
dec
loopne
cmp
andb
jnp
popf
jle
icebp
sbb
push
mov
xchg
pop
adc
test
hlt
jbe
scas
mov
aam
ljmp
sbb
mov
mov
nop
mov
pop
jg
mov
mov
mov
in
mov
lea
xchg
inc
ret
jo
test
std
clc
inc
sub
ss
lahf
mov
fwait
mov
cmp
add
jle
cltd
xchg
dec
movsb
out
dec
xchg
sbb
mov
cmp
lcall
mov
int3
sti
mov
iret
sbb
stos
outsl
popf
mov
adc
jae
icebp
cmpsb
popl
mov
xor
xchg
jge
mov
xor
fsubrl
cltd
stos
xor
mov
mov
call
cmp
inc
jb
clc
sbb
nop
jne
or
lret
lods
repz
push
push
mov
fisubs
pop
pop
lods
fs
mov
loopne
sub
cmp
loope
pop
jb
data16
push
pushf
mov
mov
pusha
repz
inc
mov
dec
jo
lds
je
cmp
inc
dec
add
or
imul
inc
xorl
les
arpl
push
jle
or
mov
in
jne
pop
and
and
jne
pop
iret
mov
add
loope
and
mov
and
dec
and
inc
sub
fdiv
sbb
outsl
mov
ss
jns
xor
incl
imul
fwait
lea
mov
clc
ret
lods
mov
inc
sub
xor
jl
or
es
popf
mov
rolb
jne
and
addr16
jp
lods
and
cmp
out
cltd
dec
js
iret
pushf
push
jle
jo
cwtl
arpl
jnp
mov
pop
xchg
jl
sub
xlat
adc
push
sub
in
sbb
mov
cltd
pop
out
adc
mov
mov
in
movsl
mov
mov
push
jl
subb
sar
ret
jmp
clc
cmpsl
jae
aam
jno
in
inc
out
out
xchg
mov
ret
jmp
xchg
inc
or
out
mov
add
divl
loope
and
inc
pop
popf
lcall
xchg
push
and
xor
sbb
das
sbb
and
push
pushf
fldl
pop
lods
fisubs
xchg
and
fsts
sbb
pop
push
into
in
lret
fistpl
sub
fbld
fists
sbb
je
clc
mov
loop
xchg
je
pop
mov
jae
mov
mov
mov
pop
ja
adc
mov
or
sub
mov
xchg
mov
in
fstl
pushf
xor
sub
call
jnp
iret
mov
cmp
pop
idiv
test
mov
dec
lock
mov
push
push
scas
add
outsb
arpl
and
jmp
daa
cmp
mov
das
test
dec
fnstcw
movsl
and
inc
cmc
imul
xchg
fiadds
mov
and
fs
mov
push
gs
lcall
in
xchg
pop
and
sub
add
mov
lock
sbb
inc
sub
mov
mov
mov
adc
fucomi
fwait
sar
aam
lds
lcall
dec
cmp
xor
pop
fcomps
aad
out
cs
movsl
jl
jno
and
into
pop
ja
xor
pop
movzwl
je
test
inc
cs
mov
fistpl
bound
shl
lods
jbe
or
jl
icebp
mov
push
test
and
sub
fsts
xor
xchg
mov
fdivrp
or
fists
in
ss
cmp
mov
into
push
cmpsl
or
ret
and
fldt
jo
pusha
or
fwait
inc
aam
adc
test
xor
in
or
scas
mov
inc
or
pop
xchg
push
in
push
pop
dec
jns
dec
xor
adc
sub
mov
mov
and
std
inc
repz
and
dec
adc
or
pop
jge
dec
popf
daa
ret
xchg
xlat
flds
or
js
rcll
int
sbb
jbe
loopne
sub
hlt
rcll
xor
arpl
ror
cmpl
incl
ljmp
int3
sbb
fcomps
out
bound
dec
popa
sbb
repnz
popa
xor
sub
mov
jb
insb
cmp
dec
mov
aas
pop
mov
divb
outsl
mov
mov
mov
adc
pop
add
fs
stos
fs
fwait
cli
repz
ret
push
aas
lret
imul
cmp
outsl
and
adc
stos
shll
and
das
ret
loopne
pop
adc
fcomps
or
xor
loope
inc
sbb
leave
mov
lods
test
sub
divl
int
gs
imul
mov
and
jbe
sbbl
push
call
push
cmpsl
pop
cmp
das
pop
aas
inc
notrack
adc
cltd
repz
sub
das
adc
outsb
jo
mov
repnz
scas
cmp
jb
ret
inc
mov
cmp
jmp
jp
xsaves
pop
adc
loopne
pop
in
push
push
push
jmp
cwtl
and
fistpll
push
enter
addr16
mov
sub
icebp
mov
outsb
addr16
shlb
clc
push
mov
jns
nop
js
jl
sti
mov
mov
sub
push
jb
mov
jbe
dec
inc
jle
addr16
inc
lea
hlt
pop
mov
xchg
call
repnz
pushf
xor
push
shrb
add
pop
cmpsl
push
push
sub
xorl
cs
inc
sub
xchg
and
ret
je
aaa
pop
popa
ret
scas
popf
in
dec
jb
sar
push
mov
orb
aas
sub
jg
fldcw
xlat
xchg
arpl
outsb
cmpsb
iret
xlat
lret
insl
cmp
lods
movsb
adc
aas
cmp
int
inc
and
rcrl
mov
lea
mov
adc
sbb
mov
movsb
add
mov
mov
ret
leave
in
cmc
nop
sti
push
les
push
xor
dec
adc
mov
out
jns
aad
cmpsl
sbb
fsubrs
aaa
mov
and
pop
ret
push
fildl
aaa
xchg
shrl
mov
leave
mov
aaa
and
arpl
ss
rcrb
inc
ja
mov
imul
lcall
andl
dec
adc
scas
sbb
mov
cmp
jl
arpl
jle
rcr
shll
jmp
pop
add
test
sbbl
pusha
jle
jl
fstpt
movsl
stos
dec
rcrl
stc
mov
pop
ds
fstp
push
arpl
add
mov
sub
jns
push
fldpi
add
add
dec
mov
not
fildll
stc
ds
fmull
scas
mov
add
mov
in
aad
and
xor
je
pop
push
pop
sbb
jg
negb
lret
push
add
mov
cmp
and
enter
cmp
adc
sub
mov
adc
outsb
inc
mov
fldt
mov
push
or
shl
out
jbe
sti
repz
mov
sbb
cmp
and
gs
daa
arpl
pop
bound
cmp
outsb
in
ret
jae
mov
mov
jle
pop
fdivrs
add
invd
jno
cwtl
adc
xor
lcall
iret
shl
and
sbb
fs
ja
pushf
mov
jno
dec
push
xchg
pop
and
adc
push
mov
xchg
gs
and
sbb
mov
add
fsubr
movsl
add
inc
jns
xchg
pop
jae
loope
rcrb
and
jb
rclb
push
loopne
into
and
dec
or
pop
add
jge
lcall
jmp
push
add
mov
repnz
push
cmpsl
imul
in
fmulp
dec
sbb
inc
cmp
lods
clc
sahf
lods
ret
adc
mov
int3
enter
hlt
out
or
add
scas
aam
xchg
dec
aad
in
int3
iret
aam
mov
nop
push
push
xchg
out
push
mov
clc
xchg
inc
shrb
push
dec
mov
insl
or
push
pushl
psrld
jle
add
hlt
adcl
lcall
push
out
inc
inc
dec
jno
and
jbe
dec
xlat
stos
outsb
adc
adc
imul
sbb
data16
jae
sub
cmp
add
xchg
pop
push
test
xlat
xor
fiaddl
movsl
push
push
jmp
std
sar
or
or
lea
adc
in
sub
inc
xchg
call
loopne
pop
nop
mov
dec
pop
lret
aad
insb
pushf
jp
mov
mov
xor
xchg
enter
out
push
xor
ds
xor
adc
add
pop
adc
repz
rcrb
das
mov
jl
rolb
jnp
imul
mov
push
sub
dec
sub
std
cmp
push
rorl
lods
sub
pop
cmp
shll
sbbl
int
loopne
popf
or
shrl
gs
rcll
push
xchg
xchg
mov
mov
ds
pop
aaa
inc
xor
daa
sbb
mov
rcll
stos
js
repz
xlat
inc
fs
icebp
aas
cmp
repnz
imul
addb
ret
mov
push
divl
or
int
jns
stos
test
stos
data16
out
aad
in
inc
mov
ja
inc
sub
pop
fisttps
or
jnp
adc
mov
and
mov
fidivs
sbb
mov
xor
cmp
or
out
sahf
xor
out
and
fs
stc
in
ja
mov
jmp
mov
pop
mov
ds
xor
mov
inc
in
cmp
mov
jno
out
jge
inc
push
leave
xchg
shll
out
push
stc
hlt
xchg
andb
or
ficompl
mov
rorl
sbb
jb,pt
out
loope
pop
sbbb
or
shl
frstor
dec
cmp
jne
push
jo
mov
je
mov
lods
and
jecxz
dec
and
cwtl
xlat
stos
fs
sbb
xchg
pop
push
fdivs
enter
insl
xchg
sbb
sti
insl
xchg
sbbb
xchg
pop
sub
sbb
cmp
add
fbld
stc
in
loopne
xchg
dec
mov
push
jg
dec
movsl
imul
scas
incl
jb
daa
inc
dec
scas
or
adc
mov
mov
pop
lret
pop
mov
insb
pop
fimuls
sub
xchg
data16
push
shl
push
dec
gs
sbb
and
or
ds
add
mov
es
movsb
push
ljmp
sti
test
jle
inc
lahf
bound
pop
lret
and
aas
rcr
stos
shll
testb
int3
xor
mov
mov
jle
push
and
cmp
loope
int
xchg
pop
jp
push
nop
push
xchg
mov
xchg
call
pop
stc
xchg
adc
or
inc
lahf
pop
xchg
dec
ret
pop
stos
mov
mov
dec
xor
imul
mov
out
insl
dec
xor
scas
js
jg
fcomps
xor
aad
mov
cli
push
mulb
sub
lods
mov
ljmp
sbb
lret
and
scas
jnp
mov
pop
add
mov
fimull
or
xchg
fwait
les
push
jne
cld
adc
adc
sub
sbb
in
data16
insl
insb
fiadds
push
cmpsl
jo
xchg
cli
hlt
inc
fisttpll
and
ret
add
mov
sub
sbb
stos
cmpsl
fidivrl
push
bound
jno
inc
pop
cmp
int3
rolb
int
je
clc
pop
jb
push
fistps
inc
pop
test
xchg
inc
repnz
push
adc
cmc
ficoms
xchg
xorl
and
and
dec
mov
lds
data16
insb
cmpsb
push
lcall
jae
dec
mov
jmp
xchg
cltd
repnz
xor
popf
add
lret
fcomip
call
lret
push
inc
push
ss
or
jp
jmp
clc
xchg
lods
arpl
ret
inc
push
test
test
rcl
cmc
jecxz
arpl
xchg
loop
arpl
and
add
pop
leave
inc
aad
scas
xchg
push
add
push
mov
pop
add
int3
fstp
mov
jg
sbb
cmp
mov
jp
xchg
xchg
mov
add
sbb
jge
jl
xor
jg
sbb
xchg
sbb
mov
leave
pop
push
fistpll
mov
xchg
mov
aam
adc
scas
lea
sbb
push
mov
inc
xchg
xchg
inc
arpl
pop
into
mov
and
jecxz
mov
mov
fidivrl
inc
xchg
jns
xchg
pop
pop
scas
fistps
lods
pusha
scas
xor
sbb
or
testl
xchg
lret
xor
arpl
jbe
test
adc
arpl
aad
cmp
inc
pop
imul
fsubrs
mul
xchg
insb
add
adc
gs
cmp
sub
mov
lea
test
loop
jae
push
jmp
dec
test
dec
fstpt
sti
aam
mov
ret
pushf
test
pop
imull
push
popa
aas
mov
dec
mov
test
rcr
jle
stc
jg
cmp
stos
sbb
icebp
sahf
mov
jecxz
dec
pop
out
or
fwait
xor
cmp
aas
pusha
and
xor
mov
loopne
pop
aas
xchg
movsb
test
movsb
dec
iret
shlb
xlat
sub
gs
xor
movsb
mov
rcrb
pop
xchg
repnz
jmp
and
lds
jae
xor
and
out
aaa
mov
hlt
dec
mov
mov
sub
fdivrl
jne
cmpsb
pop
rcrb
rorl
nop
int3
mov
pop
dec
jle
pop
shrl
cmpsl
jg
dec
push
test
adc
shrb
pop
je
int
jg
mov
std
lock
and
xchg
sbb
sbb
pop
mov
inc
aam
in
imul
inc
sub
inc
mov
fsubrs
push
into
cli
and
pop
cmp
cli
pop
and
ljmp
sub
xchg
shll
test
mov
inc
pop
pop
sarb
mov
je
int
mov
dec
dec
aaa
push
je
bound
mov
jmp
in
loop
gs
inc
movsl
orb
mov
cwtl
in
clc
add
ret
mov
push
fldcw
adc
jge
xchg
inc
mov
daa
fs
mov
fmull
jmp
push
dec
lock
cmp
inc
call
dec
cli
dec
adc
sbb
adc
xlat
lds
add
out
mov
ret
lock
imul
or
out
mov
ss
mov
test
and
pop
sub
mov
scas
int
push
test
jmp
test
out
ret
or
push
pop
add
mov
repz
inc
push
push
mov
xchg
sbbb
add
popa
repz
mov
mov
adc
mov
flds
mov
iret
xchg
push
mov
sahf
adc
repnz
fidivs
jns
or
adc
leave
xor
stos
xlat
in
pop
aaa
pop
sahf
pop
icebp
inc
cmp
ret
cs
mov
aam
or
push
rolb
lods
or
sub
adc
pop
dec
xor
dec
jecxz
xor
leave
add
inc
stc
shl
mov
rolb
push
int3
and
int3
roll
sbb
hlt
or
push
xchg
aas
cmp
mov
in
push
xor
jg
adc
inc
fadds
fistl
repnz
imul
cmp
cltd
jp
sbb
lds
ds
daa
adc
leave
rcrb
in
inc
cs
inc
in
jl
imul
mov
adcl
fimuls
out
movsb
mov
inc
test
testl
pop
js
aas
mov
pop
clc
lods
inc
loop
shrl
mov
pop
inc
int3
or
jb
movsb
movsl
xchg
setnp
lahf
xor
ds
lds
jl
jg
inc
into
or
fadd
ljmp
xchg
push
imul
fwait
mov
lods
sub
sbb
imul
sti
cld
aam
inc
mov
push
mov
in
sub
lock
push
test
jbe
sub
fwait
dec
xchg
fwait
call
add
and
dec
setg
sub
nop
ja
repnz
inc
and
imul
ror
add
pop
push
push
mov
leave
mov
or
ljmp
and
icebp
es
jge
add
push
mov
push
mov
xor
dec
jno
jnp
rcl
roll
mov
mov
mov
xor
cli
or
and
sbb
cmp
xor
adc
test
shrl
or
jp
mov
and
rorb
xchg
jnp
cmp
pop
pop
dec
addr16
adc
add
shlb
sbb
and
daa
sahf
pusha
icebp
lahf
stos
imul
dec
fs
push
push
sahf
ljmp
subl
stos
pop
out
xor
das
jmp
fs
jl
aam
clc
popa
push
dec
shl
movsb
mov
mov
int3
int
add
xor
fwait
in
lahf
xchg
cmp
pop
and
nop
add
fadds
pop
and
mov
adc
xor
cltd
jns
push
jmp
jne
les
mov
mov
jp
mov
inc
stos
clc
adc
mov
stc
push
mov
dec
jp
adc
pop
pusha
adc
mov
pop
add
iret
add
faddp
cmp
mov
aas
cli
inc
int3
rcr
mov
sbb
mov
imul
addr16
addr16
push
mov
hlt
into
pushf
jnp
nop
iret
or
jmp
jnp
xchg
icebp
xchg
cltd
mov
or
inc
aaa
xor
frstor
push
xor
fs
and
scas
xchg
inc
ffreep
scas
push
in
push
sub
out
inc
cmp
fildll
rcrb
call
mov
shrl
fistpl
clc
jge
push
xchg
cmp
aaa
shlb
dec
xor
test
hlt
or
inc
aad
lea
ja
xchg
test
orb
mov
ss
xlat
mov
lock
sbb
jb
push
adcb
xchg
pop
arpl
dec
mov
out
das
jnp
cmp
xor
pop
cmp
xor
aas
mov
mov
inc
mov
stos
lcallw
movsb
scas
or
push
in
xchg
in
sub
mov
add
cmp
pop
push
push
shll
or
mov
mov
addl
sub
or
les
push
nop
mov
jl
jg
and
fsubl
cld
ss
sahf
cmpsb
xchg
data16
cmp
pop
dec
sub
mov
sbb
xchg
popf
jp
mov
dec
cmp
cwtl
mov
iret
cmp
gs
or
incl
rcrb
test
pop
xchg
in
xor
sub
test
cmp
int3
inc
loop
js
pop
std
add
jg
mov
xchg
pop
inc
divb
ret
movsl
jl
xchg
ja
xchg
mov
mov
aad
push
ret
xchg
push
stos
dec
dec
test
inc
mulb
adc
fcmovbe
daa
jae,pn
inc
add
cmp
cmp
leave
sub
leave
xor
cmpl
sahf
sub
jg
jb
idivl
mov
das
and
dec
stos
sub
add
inc
jbe
cs
adc
pop
iret
sub
jmp
xchg
jbe
pop
jne
sub
ja
insl
rolb
aas
sbb
mov
xchg
lods
and
cmp
fstl
mov
loop
add
push
lahf
push
xor
enter
mov
iret
cmp
sub
inc
adc
pop
jp
mov
push
int
mov
pop
repnz
push
xchg
inc
sbb
lods
mov
lcall
add
out
push
xchg
fs
xorl
xor
jle
xchg
scas
jmp
cltd
lock
jecxz
mov
or
mov
cld
in
dec
mov
sti
test
jns
pop
ja
mov
cmp
sarb
js
cld
cmc
lahf
mov
xor
sti
mov
mov
jecxz
fcoms
lret
mov
and
push
shrl
push
in
lcall
imul
lahf
test
out
mov
int3
sbb
mov
push
in
mov
loope
testl
cs
cltd
outsl
push
xor
in
adc
xchg
cmc
cmpsb
pusha
insl
or
xor
shl
cmc
popa
imul
out
mov
das
xor
pop
jmp
sbb
jge
in
adc
adc
lods
rcll
ja
lcall
in
aas
cld
lock
mov
aad
pop
dec
test
add
out
in
mov
xchg
xchg
mov
loopne
fldt
adc
add
insb
cmc
imul
mov
bound
outsb
into
daa
ss
sub
pop
ss
sahf
lret
adc
mov
je
mov
popa
data16
es
or
test
mov
cmp
xchg
addb
cld
sbbl
lods
lods
lea
loopne
push
push
inc
int3
movsb
stos
fisubl
jle
add
stos
in
mov
or
push
jns
pop
je
add
mov
cmp
and
xlat
cmp
std
test
scas
and
rcl
pop
mulb
xlat
cltd
mov
mov
test
adc
and
push
aaa
adc
sbb
adc
dec
cld
fstpt
push
mov
adc
scas
popa
or
and
mov
loop
or
and
jnp
outsb
mov
add
imul
or
int3
fimull
sbb
push
cmp
pop
jp
mov
xor
adc
or
xchg
xor
mov
imul
loope
fsts
rorb
cmc
aas
xlat
cmp
fdivs
jp
push
or
pop
inc
lds
sbb
pushf
std
add
test
hlt
gs
pop
sbb
adc
sar
push
repz
jg
outsl
push
add
in
fmuls
dec
mov
popw
mov
mov
fsubp
loop
popa
scas
push
loopne
mov
gs
cld
das
repnz
adc
shrl
in
roll
sarl
shlb
es
stos
movl
and
push
inc
mov
out
mov
jo
out
pushf
dec
pop
xor
adc
mov
dec
jle
sbb
and
cmp
jmp
mov
xor
mov
push
xor
inc
mov
adc
idivl
xbegin
mov
and
lea
jb
sbb
enter
mov
lods
jge
cmpsl
movsb
out
xor
fisubl
sbb
inc
xor
addl
push
pop
loopne
xchg
les
sbb
dec
daa
mov
xor
mov
sarl
jmp
mov
aaa
daa
inc
call
popf
and
inc
repnz
call
or
xor
pop
add
inc
add
pop
aam
mov
and
call
lahf
fisubrl
cld
lock
into
fwait
cmp
sbb
movl
lock
jb
pop
pop
dec
ds
xlat
and
push
or
aaa
xchg
in
pop
xchg
xor
mov
fsubrl
inc
xor
push
xor
fistpll
movsb
xor
sbb
sub
lahf
inc
jno
xchg
cli
inc
and
adc
jns
mov
or
popf
xor
ffreep
dec
pop
mov
call
inc
lods
dec
inc
jp
pop
dec
scas
cmpsl
pop
pop
pop
in
mov
lods
jl
dec
or
out
aam
cwtl
leave
dec
bound
mov
push
cwtl
mov
jo
dec
leave
orl
sbb
out
pop
mov
jne
and
sub
push
mov
jmp
and
mulb
mov
mov
sub
jmp
cmp
and
mov
imul
ljmp
mov
cli
pop
mov
cmp
pop
mov
push
push
popa
push
aam
cmp
rolb
dec
roll
mov
jne
mov
inc
or
push
jo
int3
mov
iret
fldl
ror
in
pop
outsb
int
das
loopne
mov
ficoml
out
ljmp
cmpsl
orb
mov
stos
jmp
call
dec
movl
stc
out
mov
fstpl
cld
test
hlt
mov
mov
inc
cmp
mov
adc
enter
call
shll
push
nop
jle
setb
sbb
mov
movsb
mov
sub
mov
sub
adc
sub
xchg
and
scas
bound
in
inc
sbb
dec
jb
std
sbb
mov
pop
imul
aaa
cmp
stc
mov
int
je
nop
fwait
sbb
mov
in
cld
inc
jg
push
jnp
imul
ds
xchg
xlat
jmp
sub
cmpsl
push
mov
jecxz
inc
lock
adc
into
int3
add
jne
and
iret
sub
add
sub
or
xor
sti
jo
jns
mov
cmc
xchg
mov
cmpsb
dec
sub
popa
pusha
ret
jne
andb
in
xchg
push
or
ret
icebp
orb
movsl
in
xchg
add
int3
xor
inc
addl
sub
inc
mov
mov
stos
pop
aad
ror
shl
test
neg
cli
cmp
ja
xchg
and
pop
cmp
push
stos
cmp
fnstsw
push
loop
inc
lret
jae
test
sbb
sbbb
leave
pop
cmpsb
pop
inc
aaa
jmp
add
fcompl
mov
repnz
call
rcll
cmp
notl
xor
mov
fdivrl
inc
push
mov
lcall
cmpsb
test
nop
pop
pushf
lods
or
xchg
sbb
jmp
movsl
cmc
and
icebp
mov
es
xchg
and
mov
stos
in
lcall
mov
leave
sbb
push
ret
dec
das
call
sbb
add
faddl
fwait
movsl
daa
addr16
xor
adc
insl
dec
pop
aad
popa
mov
mov
das
aad
pop
fdivr
mov
sahf
rorb
out
ds
fwait
cwtl
loopne
mov
mov
xchg
out
add
xchg
in
sub
inc
pop
or
leave
movsl
aam
enter
out
pop
add
mov
cli
xchg
fdivrs
pop
fs
rclb
sarb
xchg
xchg
adc
sub
test
add
mov
jle
lret
lods
add
aas
icebp
pop
divl
mov
pop
lahf
jo
mov
cmpsb
aas
mov
call
fdivl
je
imul
arpl
movsl
pop
repz
outsl
daa
movl
das
xchg
iret
xchg
rolb
cmpsl
add
and
in
mov
cli
rolb
aas
jge
cmp
inc
and
push
cmp
jne
add
loopne
cld
mov
mov
jg
sbb
scas
mov
xor
loop
test
dec
pop
mov
into
sbb
cmp
add
out
xor
stc
in
ret
mov
fadds
push
nop
outsl
loop
and
cs
pop
shlb
xor
xor
sub
push
pop
adc
ds
out
insb
adcb
enter
lret
jbe
cld
cmc
pop
mov
dec
imul
push
xor
popf
movsl
xchg
out
popa
jae
movsl
scas
dec
jmp
inc
ds
jo
mov
cs
call
pop
lcall
xchg
and
inc
push
aad
out
fstps
addr16
sarl
adc
out
dec
adc
adc
push
pop
and
ret
leave
sbb
sub
testb
mov
dec
and
sub
sub
iret
sahf
lret
mov
mov
dec
movsb
fldcw
aaa
mov
mov
aaa
mov
inc
sub
icebp
lock
roll
femms
scas
aam
jecxz
int
mov
sub
subb
sti
inc
in
sarb
add
inc
push
push
test
push
enter
xchg
mov
das
sub
sub
dec
adc
xor
pop
mov
adc
adc
lock
inc
xchg
adc
sbb
dec
mov
xor
lahf
add
mov
and
inc
lret
cmpb
popa
mov
pop
sub
cmp
adcl
popf
lock
icebp
sbb
inc
imul
daa
ret
lock
xor
fidivrl
inc
adc
pop
adc
dec
add
mov
pusha
sub
outsl
push
or
sbb
adc
xlat
shl
shr
jns
xor
hlt
setbe
scas
je
inc
in
out
icebp
repz
popa
sub
mov
out
and
sbb
or
clc
jg
lahf
inc
das
and
xor
xor
scas
and
outsl
arpl
dec
enter
jg
jl
jbe
insl
push
lcall
cltd
sub
mov
cmpsb
cltd
repnz
sub
mov
sbb
mov
pop
popf
fiadds
imul
clc
jns
and
fsubl
push
cmpb
jecxz
fcmove
loopne
or
int3
in
mov
mov
loop
and
test
in
cmp
in
xchg
lea
out
lcall
lcall
push
or
aam
jbe
xchg
inc
into
push
inc
mov
ljmp
add
dec
call
dec
cwtl
into
fdivrp
test
cmpsl
outsl
push
cs
mov
lahf
rorl
bound
in
add
mov
adc
movsl
out
push
push
pop
inc
sub
scas
out
test
push
mov
dec
inc
shrl
inc
add
push
notb
lods
sbb
mov
pop
jp
test
jnp
lea
je
or
mov
imull
mov
adcl
shrb
pop
cltd
movsb
scas
cmpsb
push
repnz
cs
inc
clc
mov
mov
inc
jle
pushw
jle
fidivs
jno
cwtl
repz
std
mov
enter
cwtl
in
or
subb
and
rcrl
cmpsl
outsb
xor
mov
and
ret
in
push
or
cwtl
int3
sbb
outsb
xchg
stos
hlt
sahf
in
mov
xchg
fnstcw
push
sbb
mov
mov
and
into
gs
rorb
loope
ss
dec
xchg
out
add
dec
pop
fnstcw
or
aad
out
das
int3
pop
dec
adc
arpl
push
xor
or
pop
cli
xor
sbb
int
repnz
sti
push
icebp
cld
mov
jg
xchg
iret
lods
pop
mov
pusha
jns
cmpsb
adc
xor
adc
fldcw
and
stos
outsb
sbb
sbb
ret
imul
or
mov
pop
scas
sub
cmp
les
pop
sbb
jge
jae
paddsw
dec
in
or
or
fstpl
arpl
ja
fsts
xor
push
mov
pop
pop
movsb
mov
sbb
aaa
mov
add
movsl
ja
lahf
jge
mov
mov
or
aas
jl
call
bound
clc
sti
popf
jle
xchg
movsl
mov
add
pop
dec
add
lahf
add
mov
pusha
nop
sbb
lods
adc
ja
mov
adc
insl
pop
cmp
shl
sahf
and
repnz
inc
mov
mov
fisttps
jmp
push
pop
scas
js
push
je
insl
jo
js
lods
ljmp
or
shlb
jg
sub
enter
push
aad
jns
jns
lds
outsb
in
pushf
jmp
jae
adc
ret
sbb
dec
mov
push
int3
mov
xor
jnp
xor
adc
loop
inc
jo
loope
mov
loope
ret
insl
lods
mov
loopne
and
xchg
enter
outsl
mov
inc
das
ljmp
add
dec
dec
mov
out
pop
adc
es
lea
cmpsl
out
hlt
push
xchg
mov
popl
xor
stc
ret
mov
ss
cmpsl
jg
mov
cmp
stos
dec
jno
jns
sub
ret
add
mov
jne
out
test
repnz
jp
mov
test
stos
ljmp
inc
iret
pop
aaa
xlat
aad
cmp
mov
or
cmp
push
push
mov
pushf
stos
lcall
flds
sub
adcl
in
aaa
add
inc
daa
inc
lret
or
data16
pop
insb
subl
hlt
cwtl
xchg
sbb
out
mov
out
icebp
mov
test
scas
out
cwtl
dec
mov
jns
push
mov
jmp
adc
xor
ds
cmp
jecxz
add
movb
jl
mov
jno
imul
popa
fsubr
inc
out
adc
inc
mov
in
leave
adc
int
stc
sti
sub
das
mov
clc
pop
js
push
jns
cmp
jae
mov
ja
int
sub
inc
mov
orl
lea
inc
pop
mov
lcall
js
in
scas
mov
mov
dec
enter
adcb
push
rcr
xchg
jl
mov
sbb
mov
pop
andb
sub
int3
sarl
adc
sahf
mov
mov
repz
test
imul
push
lea
imul
cmp
loopne
push
jns
mov
adcl
jge
adc
lock
mov
lret
jecxz
fisubrl
mov
iret
enter
pusha
loope
aad
sbb
fs
dec
push
or
and
xchg
mov
aaa
lock
shrb
enter
inc
jg
mov
inc
mov
ficomps
xchg
ja
repz
mov
jle
xlat
inc
lret
cmpsl
cmpsb
out
mov
inc
jecxz
aaa
insb
mov
test
arpl
movsl
lret
std
xchg
lds
inc
jne
test
sub
int
add
scas
xor
sbb
or
push
ja
pop
int
cmc
sbbb
in
xor
cmp
adc
gs
aas
in
mov
es
jno
test
lods
add
movsl
repnz
fwait
cmp
iret
inc
mov
pushf
test
lcall
out
in
scas
pop
xchg
add
mov
ret
push
xor
iret
insb
aad
dec
jp
pushf
fs
jae
mov
jno
lods
or
adc
in
ret
mov
lods
jnp
sarb
in
mov
rclb
rep
inc
sub
scas
push
sbb
or
pop
xchg
pop
push
lods
inc
xor
mov
mov
enterw
scas
push
sti
sub
enter
int
shll
push
push
push
adc
ret
enter
mov
jle
mov
pop
lahf
popa
out
fisttpll
and
pop
mov
repz
rcrb
hlt
push
cmp
ss
xchg
in
ds
fistpll
xor
adc
fstp
sbb
mov
aas
dec
out
fisubrs
iret
in
shlb
adc
sub
cmc
adcl
in
xchg
outsb
in
adc
aad
aad
dec
ja
push
fwait
sub
mov
mov
imul
sbbl
inc
out
lods
lods
rcr
mov
enter
fs
or
lds
pop
xor
mov
ljmp
sub
mov
pushf
fst
mov
push
js
aaa
adc
orb
add
mov
push
stos
push
lods
xor
shll
and
ss
add
sub
rcrl
and
in
sarl
ja
push
and
jo
dec
sub
aam
ljmp
std
jmp
or
push
mov
push
int
iret
hlt
mov
jge
popa
loopne
repz
xchg
dec
jp
xchg
sbb
fdivrs
pushf
sub
dec
lock
xor
mov
mov
mov
jl
inc
pop
pop
into
or
jb
rcl
ficoml
rcl
inc
dec
mov
jae
adc
xorb
or
push
test
or
dec
cmp
pop
lret
test
sahf
push
std
dec
jae
adc
jge
xchg
imul
add
xchg
adc
cwtl
ficompl
daa
inc
daa
xchg
adc
je
movsb
jge
and
imul
dec
lea
sbb
jmp
imul
adc
out
mov
dec
roll
or
pop
in
push
push
adc
je
jne
inc
cld
pop
movsb
pop
jns
cmp
insb
jmp
add
sub
int3
jns
sti
test
cwtl
cmp
xor
mov
fisubrl
jl
adc
mov
cs
jb
lcall
fcmovb
and
pop
mov
push
in
mov
dec
mov
fdivr
adc
jmp
sti
xchg
std
ds
fcoms
mov
sub
adc
out
stc
pop
jne
xchg
pop
xor
repnz
cmp
sub
mov
push
jbe
std
outsl
cmp
mov
inc
movsl
mov
sbb
out
insl
xchg
into
lcall
mov
aas
mov
imull
cmc
icebp
sbb
mov
ja
add
dec
dec
repnz
addl
shl
ja
call
scas
sub
sbb
push
in
aam
mov
nop
push
push
xchg
loope
in
pop
mov
enter
daa
inc
xchg
lds
jl
push
aad
outsl
adc
fxam
or
or
and
andb
lahf
mov
push
mov
scas
aaa
outsb
adc
push
rclb
ljmp
pusha
pop
add
mov
push
pusha
pop
sbb
mov
loopne
mov
or
adc
orl
orb
call
cmpsb
xchg
or
lods
jnp
inc
dec
iret
or
mov
adc
popf
into
subl
loop
push
push
movsl
add
mov
lds
mov
mov
dec
bound
xor
sahf
sahf
cmp
lcall
lods
js
scas
mov
push
ljmp
rcrl
jle
sub
fnstenv
out
mov
or
xchg
inc
lret
cmc
jb
mov
jl
cli
add
pop
aad
sbb
mov
mov
cmp
pop
aam
xchg
mov
stc
pushf
xchg
lret
pusha
add
adc
pop
inc
insb
loopne
jmp
and
push
inc
or
insl
push
fs
loope
and
mov
jge
sub
out
add
outsb
pop
negl
out
adc
stc
mov
jbe
mov
pop
mov
ljmp
sub
adc
and
outsb
mov
sahf
addl
hlt
lock
sbb
jmp
push
insl
lock
popa
lcall
int3
adc
imul
xor
arpl
mov
fldt
int
lods
stc
or
xor
push
or
xlat
push
icebp
jmp
cltd
inc
mov
fsubl
je
leave
xchg
bnd
bound
push
pop
jnp
dec
jge
mov
add
xchg
inc
mov
cmp
xor
loop
dec
xchg
pop
sub
jae
addl
mov
xchg
cmp
aad
push
push
xchg
xchg
inc
je
cmp
inc
and
xchg
mov
or
adc
pop
ret
clc
aam
in
pop
push
pop
mov
and
push
cmp
jno
push
int3
pop
repnz
dec
roll
sub
ds
and
sti
sbb
jmp
pop
xchg
lret
inc
popl
adc
int3
mov
cwtl
addr16
fdiv
sub
mov
xchg
cld
mov
mov
int
and
mov
imul
push
jle
or
mov
adc
push
cwtl
adc
adc
ds
sbb
cmp
adc
dec
test
jns
dec
or
xchg
mov
mov
mov
mov
adc
pop
scas
add
call
jno
pop
jmp
push
aad
and
mov
mov
cmp
daa
push
and
push
jae
add
data16
jmp
rcrl
jno
scas
pushf
mov
push
mov
jo
in
mov
xor
push
and
mov
jmp
push
adc
rol
bound
inc
adc
or
test
cmp
popf
jns
lret
fsts
cli
inc
fdivs
xchg
lds
xorl
push
add
cld
dec
mov
fincstp
sar
shlb
dec
js
jmp
out
sub
gs
xor
jnp
xchg
outsb
jmp
scas
test
fisttpl
inc
cwtl
cmp
sub
rcrl
mov
jge
inc
sub
icebp
aam
xchg
lods
adc
cmp
inc
mov
sub
imul
cmp
lea
inc
xchg
ljmp
pusha
jo
sub
test
das
gs
cmpsb
ror
jbe
movsl
jns
cmp
adc
mov
mov
cmp
mov
mov
sub
clc
fidivl
int3
stos
lahf
cmp
push
cmc
cmpsl
mov
ror
out
pop
adc
and
mov
xchg
fdivp
mov
sub
push
pop
rcl
push
scas
arpl
test
pusha
loope
sbb
push
pop
insb
test
lcall
pop
mov
scas
adc
jns
jae
bound
les
pop
mov
push
sub
push
mov
or
cs
lahf
sbb
push
leave
insb
push
xor
mov
jns
cvtps2pi
sub
lea
arpl
sbb
int3
leave
push
sti
sbbb
cmp
adc
ja
in
sbb
call
push
out
dec
xchg
bound
rol
movsb
in
lcall
lcall
adc
add
test
jae
mov
subb
and
loope
inc
mov
sti
cwtl
movsl
and
adc
aad
shrl
xor
fcmovne
jns
popa
jge
jp
mov
aas
scas
xchg
xchg
jmp
mov
xchg
mov
push
ss
mov
repz
out
mov
loopne
jnp
call
adc
or
or
icebp
movsb
mov
mov
xchg
clc
enter
adc
xor
fimull
sar
jb
sarb
and
frstor
mov
jl
insb
push
mov
sbb
jbe
insb
in
jns
mov
stc
in
faddl
movsl
mov
shrb
sbbl
inc
push
stos
pushf
xor
enter
insb
pusha
pop
call
or
and
nop
call
mov
and
pmovmskb
hlt
fldenv
popa
aaa
and
outsb
sub
sub
pushf
movl
loop
call
dec
cltd
sbb
js
lock
mov
loopne
dec
sarl
cmpsb
lods
dec
xchg
jl
mov
sub
cmpsb
cli
pop
jl
call
xchg
in
sbb
adc
insb
or
and
cwtl
push
jb
pop
sub
xchg
xor
stc
orb
jg
rcll
cmp
xor
xor
xchg
rclb
mov
movaps
mov
inc
dec
cld
cmc
dec
addr16
pop
lock
jb
fmul
mov
pop
sbb
fildl
out
pop
movsb
cmpsb
mov
jle
mov
jle
add
in
bswap
mov
lret
and
nop
js
aas
jmp
xlat
cmpb
add
mov
or
fbstp
sub
in
cltd
insb
loope
int
cs
push
lcall
lret
cltd
xor
inc
mov
aad
mov
cmp
aas
js
dec
adc
idivb
pushf
ja
mov
pop
popa
push
aad
push
jge
cli
or
push
inc
loop
outsb
inc
push
adc
sub
mov
cmpsl
lcall
mov
aaa
add
movl
sub
and
dec
dec
push
shl
into
adc
cwtl
aad
inc
push
hlt
xchg
jnp
xor
xchg
push
push
insb
insl
icebp
inc
aaa
into
out
daa
pusha
adc
clc
stos
fwait
je
popf
outsb
dec
call
pop
repz
adc
cmp
mov
dec
pop
insb
test
adcb
add
fsubp
aam
out
and
jne
xchg
lret
loope
outsb
mov
jns
or
jnp
sub
faddl
lock
clc
scas
leave
lods
and
xchg
lret
mov
in
add
aad
rol
adc
dec
push
cmpsl
sub
adc
std
ja
xchg
jle
and
nop
fs
mov
adc
mov
sahf
mov
pop
scas
icebp
pop
test
pop
cli
xchg
mov
insb
cld
cmp
mov
push
mov
add
repnz
call
cmpsl
les
xlat
jo
cmp
into
pop
dec
inc
dec
sti
pop
or
fisubrl
add
fs
pop
jb
in
mul
and
into
std
xorb
shl
push
or
jl
popf
adcl
push
pop
xchg
mov
push
in
xchg
cld
outsl
jns
cli
sbb
es
ror
and
fwait
mov
xchg
jecxz
insb
mov
mov
inc
pop
adc
stos
xor
dec
lea
lods
mov
xchg
xchg
mov
gs
push
call
xor
rclb
push
jp
pop
mov
cmp
test
and
lock
push
xor
gs
aas
out
inc
sbb
fildl
iret
mov
movsb
add
sub
pop
lahf
cmp
xchg
adc
cwtl
out
test
sbb
push
pop
adc
mov
sub
test
xor
cmpsl
push
ds
jns
cli
xchg
inc
mov
mov
mov
push
pop
rolb
mov
push
xchg
cmp
jbe
es
cmpb
addr16
daa
and
cmp
pop
mov
or
loop
push
inc
pop
jmp
cltd
cmpsl
jge
leave
dec
xchg
mov
cmc
push
fwait
inc
inc
scas
rcrl
adc
loop
stos
jnp
dec
cmpsl
int
sahf
movsb
daa
out
xchg
pop
jg
sub
sub
mov
out
cltd
fidivrl
sbb
jecxz
dec
mov
jbe
daa
sub
jnp
xchg
mov
pop
ja
adc
loopne
int3
enter
sarb
xor
dec
subb
or
out
push
dec
dec
icebp
sbb
cli
or
adc
cli
ret
je
push
jnp
fiaddl
inc
cmp
xchg
adc
mov
push
mov
adc
out
lods
adc
mov
mov
pop
mov
dec
mov
rcrl
leave
call
sub
jge
idiv
in
sbb
arpl
lods
xchg
ja
mov
fwait
mov
lds
cwtl
out
mov
repz
add
fiaddl
int3
enter
loopne
push
jae
xor
inc
sub
push
dec
sahf
dec
lret
scas
loopne
insb
mov
xchg
inc
mov
mov
lds
pop
loopne
in
push
lcall
xor
mov
fs
arpl
sbb
push
outsb
inc
cmp
inc
sbb
negb
push
mov
adcl
xor
sbb
add
js
outsb
mov
ss
add
das
cmpb
ss
dec
leave
lods
add
cld
jl
jg
inc
inc
mov
pop
sub
icebp
sub
cmp
cmpsb
cmpsb
out
jae
xor
mov
and
add
sbb
push
mov
sbb
repz
pop
sub
repnz
es
es
jl
mov
inc
inc
mov
pop
ret
les
lcall
push
fldenv
pusha
jg
outsb
mov
and
in
pusha
pop
loope
popf
aad
cli
mov
or
adc
sbb
cmc
in
pushf
push
or
outsb
jecxz
xor
add
inc
cmc
gs
inc
cmpsl
adc
arpl
lret
popf
repz
add
dec
sub
pop
iret
pextrw
movsl
push
iret
and
outsb
data16
not
rcrb
cmp
sub
adc
repz
and
cmp
mov
pop
stc
xchg
popa
mov
mov
sub
jmp
movsl
mov
gs
enter
daa
pop
in
scas
shld
fiaddl
jb
jp
sahf
xchg
aas
fstl
dec
or
push
out
cld
bound
xchg
jmp
xchg
dec
data16
mov
sub
lret
sbb
fbld
jg
les
or
scas
or
mov
hlt
lret
scas
and
dec
into
push
pop
inc
cmp
mov
cmp
ss
iret
mov
inc
aaa
aaa
sub
push
icebp
mov
out
lret
repnz
mov
lcall
sbb
insl
inc
add
pop
scas
pushf
pop
jb
sub
inc
adc
xchg
jmp
push
test
mov
and
nop/reserved
pop
inc
and
adc
push
dec
loop
cltd
repz
movsl
push
jne
mov
mov
les
cmp
sub
inc
dec
mov
imul
mov
mov
or
add
jo
dec
lret
movsb
push
pop
jb
mov
insb
or
incl
jno
mov
jge
fisubl
insl
cmp
add
mov
xchg
push
dec
leave
popa
sti
dec
pop
out
es
aam
mov
lret
inc
insl
cmp
pop
lcall
mov
inc
add
fwait
sub
out
imul
cmp
int
xor
aad
aas
repnz
or
ja
out
outsb
ds
mov
mov
ljmp
jmp
cli
fstp
movsb
sub
mov
push
out
jae
int3
pop
lods
aam
test
jb
int
pop
pop
mov
or
adc
clc
divb
stos
and
js
jbe
cli
sar
add
lods
pop
mov
mov
xchg
aad
lcall
mov
push
mov
enter
shll
pcmpeqd
outsl
arpl
test
jbe
test
mov
and
idivb
orb
inc
sti
adc
imul
sbb
bound
push
sbb
es
movsl
jle
roll
push
stos
cmp
in
push
mov
lcall
gs
stos
jns
push
ror
das
js
scas
sbb
xor
lcall
inc
xor
and
jp
push
aad
clc
sub
pop
xchg
pop
xchg
add
push
in
arpl
jg
mov
xchg
jg
jmp
aad
and
mov
mov
js
cmp
add
mov
popa
addl
xor
sub
out
cmpsb
cwtl
in
pop
push
xlat
mov
dec
lods
sub
clc
jmp
sarl
pop
out
sbb
lds
pusha
jne
mov
insl
aam
ret
arpl
cmp
mov
mov
les
gs
jae
in
push
clc
jbe
leave
inc
push
lds
pop
lahf
cmp
add
addr16
mov
stos
sub
or
iret
ja
pop
pop
cmp
sbb
cmc
pop
push
cmp
inc
sbb
shll
inc
gs
loop
incb
cld
push
adcb
or
push
adc
notl
or
adc
push
cltd
fisubs
int
sahf
outsl
pop
mov
pop
sub
out
add
fldcw
jle
add
lods
ret
push
pop
pop
ffreep
sub
and
pop
addr16
or
lea
outsb
subl
ja
icebp
movsl
xlat
cltd
fdivp
push
ds
cli
in
das
cmpsl
mov
shlb
insl
inc
xorb
shl
or
scas
inc
fwait
stos
xchg
imul
bound
jg
fdivl
scas
fcoml
aaa
cmp
enter
sbb
leave
sti
sub
dec
xor
test
adc
shll
sbb
bnd
cltd
iret
sub
ret
cmpsl
arpl
rolb
out
and
xchg
and
clc
push
push
add
xchg
dec
bound
dec
cli
insl
mov
push
sbb
lods
mov
mov
in
clc
push
mov
insb
mov
mov
es
push
arpl
js
pop
scas
inc
or
mov
sahf
cmpsl
cmc
pushf
ljmp
pusha
jg
call
je
push
sbb
xchg
mov
sbb
aad
clc
lds
push
dec
out
mov
les
imul
dec
aam
add
test
mov
sbb
jmp
jbe
int3
stos
ret
rcll
imulb
ds
adc
sbb
or
jns
in
test
enter
pushf
jns
inc
adc
push
push
push
mov
push
pop
mov
sbb
xor
jnp
adc
jmp
mov
fs
pop
cmp
xchg
int
int3
pop
and
frstor
icebp
mov
mov
cmp
repz
mov
push
dec
jo
shl
in
inc
icebp
or
cmpsl
inc
xor
scas
mov
pop
daa
pop
jmp
jne
pop
sbb
lea
scas
adc
dec
ret
sbb
movsb
push
ror
push
fistps
loop
scas
aad
insl
ds
adc
jmp
dec
mov
jp
call
dec
mov
pop
dec
loopne
xor
push
mov
dec
jecxz
jg
adc
movb
jl
shlb
leave
ret
daa
cmp
or
lods
xor
bound
cmp
outsb
pushf
xor
xchg
pop
idivl
gs
sub
rcrb
adc
aaa
stc
adc
cmp
or
sub
inc
sbbl
mov
sub
adc
es
test
cmp
lock
push
adc
aam
dec
test
push
sub
xchg
push
mov
pop
fisttpll
out
aaa
jne
repz
loop
rcll
inc
and
push
cmpsb
loope
and
mov
jecxz
ficompl
fdivr
lret
fs
push
xor
mov
lcall
jnp
pop
add
insl
xlat
add
mov
imul
pop
imul
out
fildll
fsubl
xor
outsb
xor
ror
and
and
enter
pop
sbb
sbb
ret
ret
push
or
popa
stos
inc
or
loop
jl
mov
sbb
pop
das
out
aam
xchg
inc
inc
mov
lea
or
mov
xor
inc
add
and
mov
pop
int3
fwait
mov
dec
ljmp
jbe
leave
push
mov
jmp
aam
pusha
insb
inc
push
insb
pop
js
xchg
and
inc
rorl
aaa
loope
shlb
subb
lret
std
pushf
mov
pop
pop
inc
cltd
or
push
xor
mov
or
cltd
push
data16
loop
sarb
pop
pushf
inc
push
lea
filds
sbb
mov
enter
lcall
pushf
outsl
cmp
iret
outsl
es
jecxz
pop
in
mov
cmp
xor
hlt
push
cmc
imul
scas
add
int3
push
push
ljmp
or
imull
lret
mov
ret
dec
sbb
daa
mov
hlt
jbe
adc
push
lods
in
cli
jg
in
imul
mov
dec
aaa
inc
sahf
sarb
jge
xchg
ret
or
hlt
and
mov
shrb
mov
shll
pop
xor
aam
mov
adc
xchg
dec
ss
pop
lret
cmp
in
fstpl
lcall
jge
fisttpl
xor
inc
into
cmovae
cmpsb
dec
mov
ss
or
and
or
jb
xchg
aaa
cvtps2pd
mov
std
lcall
mov
and
aad
sti
nop
sub
fwait
orb
testl
fiaddl
subb
in
je
push
sbb
mov
int3
mov
and
push
out
jg
faddp
outsl
ds
push
push
ret
cmc
or
in
movsb
int3
addr16
aam
sub
or
sbb
pop
jmp
inc
data16
test
jb
movsl
dec
js
aam
xor
imul
pop
adc
add
jne
sub
xor
or
movsl
sbb
cmp
sahf
mov
xchg
mov
push
jmp
push
in
push
adc
hlt
cmp
shlb
lret
int3
inc
imulb
jno
lret
stc
add
out
lret
push
sbb
aas
lahf
jg
rcrb
rcrb
stc
jmp
mov
dec
fimull
push
xchg
or
mov
loop
test
mov
pop
mov
xchg
adc
lea
test
cmc
sub
cmp
dec
adc
jnp
mov
inc
fimull
or
rorb
popf
mov
scas
push
cmp
inc
clc
cwtl
pop
nop
js
call
loopne
addr16
mov
or
xchg
pop
mov
push
test
fimull
adc
jbe
inc
sub
mov
mov
in
mov
sbb
decb
add
lret
loopne
xchg
addr16
jae
out
nop
scas
add
xor
push
aas
roll
test
xchg
mov
fidivs
push
cmp
pop
clc
out
mov
sub
pop
or
insl
sbb
aam
jl
inc
lock
sbb
incl
repnz
jg
out
add
movsb
paddusw
sub
mov
jmp
xor
test
inc
out
repz
push
pop
or
rorb
inc
sbb
and
push
xor
lods
out
mov
iret
lahf
cmc
inc
mov
ret
icebp
mov
xchg
rcr
push
xchg
outsb
sbb
mov
sahf
mov
jae
mov
lret
push
fmuls
xchg
and
scas
xchg
shrb
cmpsl
cld
sub
in
push
push
movsl
outsl
pop
mulb
iret
mov
jl
mov
mov
sbb
jae
mov
add
jbe
sbbl
lahf
dec
das
lods
jns
inc
loopne
lea
dec
int3
dec
xchg
pop
stos
sub
push
xorb
jp
ds
imul
pop
sbb
cmp
fiadds
push
and
mov
call
arpl
and
sbb
fstpt
inc
call
scas
dec
icebp
test
imul
dec
push
mov
iret
loop
rclb
mov
pop
cmp
or
das
insb
sbbb
loop
inc
out
mov
stc
push
cltd
or
inc
lret
movsl
mov
lcall
outsb
adc
int
out
in
out
inc
jne
leave
lret
xchg
cmpsl
mov
inc
aaa
add
sti
adc
fadds
jle
arpl
inc
jecxz
sub
inc
sti
pusha
iret
xor
adc
pop
cwtl
xchg
mov
adc
mov
cmp
aaa
xchg
dec
adc
jl
cld
push
adc
aad
cmp
push
icebp
or
in
aam
push
mov
popf
mov
pop
and
fsubr
mov
adc
pop
ret
mov
aaa
mov
sbb
insl
cld
push
hlt
jmp
loope
jmp
jbe
adc
mov
into
inc
popa
not
xor
subl
in
push
je
push
jo
sbb
mov
dec
in
ret
push
push
into
push
dec
in
inc
lock
or
cmp
movsb
mov
xchg
jbe
sbb
aad
test
dec
mov
popa
outsl
leave
addr16
mov
xchg
into
dec
jno
test
inc
pushf
jno
jae
and
adc
jno
push
push
and
scas
and
stos
mov
jp
mov
xlat
xchg
add
enter
mov
insl
fidivrl
pop
dec
sub
mov
iret
mov
add
cmc
loop
xlat
mov
or
sar
adc
pop
jne
shlb
js
testb
xchg
andl
in
mov
ds
adc
repz
push
jecxz
mov
jge
xchg
pusha
cmp
fucomp
add
lods
aas
push
repnz
xor
and
add
or
jg
inc
or
add
mov
scas
xor
pop
repz
adc
add
sbb
mov
sub
lcall
popa
ret
xor
int
jecxz
ffreep
daa
cmpsl
pusha
cmp
bound
pop
divb
push
es
ficomps
xor
leave
push
shlb
mov
repnz
cmp
add
mov
xchg
out
mov
jecxz
ja
sbb
addr16
fdivs
add
add
lcall
cmp
jge
test
pop
and
dec
pop
or
push
sub
in
rol
shll
mov
jecxz
inc
sbb
cwtl
sbb
stc
push
mov
sbb
cwtl
and
inc
jb
or
out
lea
and
ret
lret
inc
mov
loope
sub
stos
mov
push
out
stos
cmp
sti
movsb
movsl
lahf
js
imul
mov
cld
ss
push
cmpb
sbb
mov
aas
faddl
push
inc
jmp
popf
ret
ja
callw
pop
inc
cli
pushl
out
pop
push
push
xor
sbb
xchg
cmpsl
imul
roll
adc
mov
in
cmp
lods
in
stos
lods
aaa
sub
adc
aad
pop
shlb
jp
fwait
insl
clc
pop
imul
adc
lds
movl
popa
push
lcall
mov
fisttpl
shll
and
int
and
sbbb
stos
adc
lods
push
lock
add
pop
loopne
push
sub
xchg
shlb
fldenv
adc
scas
push
jo
mov
xor
orl
rcr
mov
cmp
push
movsb
and
adc
in
test
in
dec
or
mov
icebp
addr16
cmp
fisubrs
js
add
cli
mov
jno
test
jns
xlat
shrl
cmpsl
fistpl
cli
push
test
mov
popa
ror
sbb
xchg
sub
jge
add
cmpsl
adc
dec
loope
cli
lcall
sbb
cmpsl
add
adc
lds
shlb
lods
test
dec
push
cmpsb
es
ret
and
lods
pop
jmp
mov
rorl
ljmp
sbb
imul
arpl
filds
orl
push
jne
xchg
push
adc
fimuls
jns
inc
ja
mov
es
xor
lret
lods
divb
into
enter
popf
sub
shrb
sub
cld
aaa
cmp
inc
mov
fs
mov
push
or
test
xchg
mov
add
add
xor
xor
shlb
inc
fisubrs
mov
inc
mov
stc
lahf
jbe
jl
loopne
pop
repz
mov
dec
lds
lret
ds
dec
fwait
jp
dec
or
inc
push
mov
mov
sarb
sarb
sub
and
pop
in
imul
xchg
mov
scas
and
pusha
mov
sbb
stos
imul
test
cmp
rcrb
cmp
out
mov
cmpsb
dec
roll
shlb
fcoms
data16
xchg
cmpsb
repnz
pop
test
ds
jp
fistpll
pushf
leave
test
or
nop
mov
jmp
loope
mov
pop
or
sub
and
jb
mov
dec
int3
mov
jb
pop
cld
vmovntps
lds
hlt
mov
rorl
xor
sub
mov
mov
lahf
xchg
sti
dec
daa
insb
pushf
mov
cmpsl
xchg
out
xchg
out
loop
mov
aam
shl
fprem1
push
aas
xchg
sub
shll
test
loop
lea
das
mov
sub
aam
pop
push
push
sbb
int
ds
jbe
add
cmp
pop
sbb
cmp
rolb
out
je
in
clc
add
sbb
ret
jl
ficompl
sub
sub
pop
pop
std
cmp
or
loope
mov
test
cltd
pop
sti
testl
int
test
jnp
shl
add
int3
push
aaa
jnp
or
stos
jo
data16
mov
mov
and
into
push
mov
or
and
popf
jecxz
repnz
out
lahf
xor
jecxz
sahf
iret
outsl
btr
test
clc
cmpsb
mov
xchg
cmp
in
scas
rclb
sbb
lods
push
in
sahf
pop
dec
popa
add
pop
and
scas
dec
jno
stos
mov
or
mov
sahf
adc
in
pusha
jmp
xchg
mov
lret
sub
mov
xchg
sbb
dec
lds
outsl
fmul
sub
or
jmp
stos
push
jbe
xorb
mov
jl
cmp
daa
in
xor
jge
sub
cmp
arpl
sbb
adc
jb
test
push
outsb
mov
xchg
out
cmpsb
push
dec
adc
adcb
cmp
scas
fiadds
out
jno
lods
and
insl
mov
xor
mov
xchg
or
push
ss
push
js
lahf
dec
repz
inc
mov
inc
in
enter
sbb
cmp
stc
push
sbb
mov
ljmp
mov
push
shrl
push
jg
mov
xlat
or
mov
cld
push
pop
lds
cmp
fbstp
push
stc
xor
arpl
mov
int3
mov
and
adc
push
push
jns
add
mov
fdivrs
js
jecxz
xor
ficompl
lods
and
inc
les
xor
jg
and
lret
out
add
movsb
pusha
les
mov
out
sbb
shl
inc
cmpsb
and
cs
xchg
lds
int
or
jmp
aaa
dec
xor
xchg
imul
xchg
mov
out
iret
fmuls
data16
dec
js
stos
pop
fcom
xchg
jmp
dec
cmpsl
fistpll
outsl
dec
mov
adc
inc
testb
shll
mov
dec
lock
mov
daa
mull
divl
cwtl
cmp
mov
aaa
lcall
mov
pop
in
out
or
cmp
add
or
iret
and
int3
aas
movsl
push
and
in
xor
leave
bound
inc
sbb
les
and
repnz
loopne
or
mov
decl
xchg
jae
jns
sarb
les
mov
cmp
add
pop
push
arpl
mov
aam
and
pop
jne
dec
pop
stos
or
dec
add
or
inc
je
pop
hlt
cwtl
push
cli
enter
lea
sbb
xchg
and
cmp
loope
pop
inc
cmpsb
cmc
outsl
dec
xor
enter
sbb
pop
ljmp
cmp
push
pop
or
sbb
repz
imul
sahf
jmp
imul
cmp
fstpt
cmp
sbb
inc
popa
dec
jle
dec
pushw
pop
in
loope
into
cmpsb
lea
negl
decl
push
cvtpi2ps
pop
sub
add
lods
shlb
xorl
mov
jmp
adc
sbb
aam
aas
xor
and
mov
cmp
out
ffree
stos
lds
inc
push
pmaddwd
adc
xchg
ja
scas
imul
loope
cltd
in
out
lods
cmp
sbb
outsl
subl
enter
test
scas
cmp
inc
inc
out
outsl
mov
aad
push
icebp
pop
popl
test
mov
pop
loop
sub
fiaddl
in
stc
pop
outsb
incl
mov
outsl
mov
xchg
adc
fnstenv
jp
int
addr16
mov
addr16
out
movsb
sbb
lahf
js
into
pop
xor
fsts
inc
jnp
stos
daa
jo
lock
push
or
adc
xchg
push
or
roll
and
hlt
inc
fucomip
xor
inc
jecxz
cmp
xor
pop
std
cmpsb
dec
jp
int
outsb
mov
cltd
mov
out
into
dec
or
xor
leave
or
or
or
or
inc
testb
loope
xchg
push
adc
shl
sarb
imul
and
pop
pop
cli
data16
cmp
mov
popfw
push
stc
jno
pop
fimull
adc
pop
inc
lock
fsubrs
fdivrs
decl
xchg
stc
xchg
xor
inc
pop
dec
xor
jb
xor
sbbb
aaa
dec
lret
data16
xchg
add
out
push
and
stos
subl
popf
sub
add
wbinvd
adc
jle
cmpsl
jp
mov
sti
xlat
mov
mov
jge
add
mov
iret
movsb
dec
int3
sbb
btsl
jns
jno
seto
jle
mov
dec
adc
adc
arpl
aad
add
cmp
stos
push
out
push
adc
rol
fidivs
sahf
movsl
jbe
xor
mov
add
push
les
out
aaa
imul
add
adc
jmp
cmp
dec
mov
lods
insb
insl
iret
push
aad
push
push
sub
push
dec
mov
sbb
jecxz
cltd
stos
cmc
dec
mov
lods
push
enter
mov
push
mov
cltd
dec
stos
sti
xor
add
inc
lds
dec
mov
arpl
pop
pop
dec
and
xchg
ja
leave
cmp
sub
in
lret
lret
movl
lds
inc
sub
es
push
imul
mov
data16
movsl
rcr
repz
sub
mov
movsl
adc
mov
push
mov
dec
stc
xchg
mov
cmpsb
dec
pop
xchg
mov
jnp
mov
mov
jle
xor
mov
into
call
jo
push
jnp
outsb
cwtl
jge
out
test
outsl
cs
or
ljmp
dec
jns
mov
xchg
pop
inc
sbb
and
daa
shrl
sub
int
xchg
or
cmp
aad
mov
add
push
add
std
xchg
int
sbb
fmull
xchg
lret
sub
iret
cmc
daa
or
mov
and
and
ror
mov
sub
cmp
int3
or
fcmove
fdivrp
stos
mov
pop
mov
out
add
leave
push
in
or
mov
add
sbbb
test
arpl
gs
ficoms
imul
mov
cmp
movsl
inc
rclb
mov
and
mulb
or
mov
insb
lcall
cs
jg
mov
iret
mov
xchg
push
push
and
jp
pop
xor
inc
aaa
mov
adc
addr16
lret
fidivrl
mov
aas
std
sub
xchg
inc
mov
adc
lea
push
push
sbb
sbb
mov
fstpt
aam
push
xchg
hlt
sarl
test
out
mov
mov
pusha
xchg
cmp
push
addr16
fildll
cli
add
mov
cmpsl
sbb
not
xchg
cwtl
leave
push
fs
xchg
push
and
test
dec
insb
out
rcr
es
and
jmp
test
mov
ljmp
sti
push
add
ret
dec
mov
int3
pop
jno
pushf
jecxz
cmpsl
iret
add
loopne
and
loop
pop
cmp
mov
jo
popa
movsb
push
andl
inc
mov
dec
mov
les
es
jmp
lods
sbb
mov
xor
push
faddl
movsl
xor
or
push
push
mov
sbb
ss
dec
idivl
mov
xchg
ds
aaa
inc
iret
out
icebp
scas
loope
stc
xlat
scas
mov
or
test
lahf
push
xchg
jg
sbb
loop
sub
push
rcrl
add
popa
iret
lcall
mov
add
and
les
mov
adc
xor
stc
aam
arpl
aas
ja
xchg
iret
push
inc
lea
push
dec
shlb
sub
rorl
push
add
jmp
popa
test
lcall
ja
sub
and
xor
decl
outsl
pop
imul
jnp
fdivrp
jle
in
shll
andb
mov
cwtl
mov
sbb
out
call
add
fdivrs
lods
xchg
lock
inc
mov
inc
inc
mov
jno
cmpl
addb
jo
push
cltd
test
into
and
pop
addr16
in
out
mov
rcrl
std
cld
xor
lcall
test
or
popf
cmpsl
pusha
jecxz
push
stos
ljmp
sub
int3
iret
mov
jge
dec
aaa
jmp
insb
mov
pushf
mov
jo
clc
iret
movsl
pop
out
pushf
pushf
mov
cmpsb
or
mov
jbe
lret
mov
adc
lahf
mov
and
nop
outsb
dec
aad
data16
in
stos
fldenv
jne
gs
inc
sub
insl
int
outsb
out
mov
scas
lods
imul
popf
pop
sub
sbb
jmp
xchg
arpl
jmp
jle
divb
mov
inc
mov
hlt
lcall
fnsave
std
icebp
or
es
aam
adc
pop
jp
dec
jge
push
dec
mov
daa
imul
lret
push
sbb
es
push
adc
test
scas
dec
mov
pushf
cmp
aaa
les
push
xchg
int3
insl
lods
pusha
imul
jg
movsb
sti
jno
cli
adc
popa
pop
lret
jmp
push
addr16
xchg
movsb
test
jge
pop
push
and
out
dec
and
mov
push
sbb
push
jg,pn
and
inc
xor
xor
adc
sahf
jg
mov
aam
pop
lea
outsl
data16
lret
incl
lods
jecxz
mov
call
jmp
mov
sbb
adcb
pop
pushf
adc
inc
scas
in
and
js
nop
sbb
xlat
testl
xchg
xor
lret
subl
lcall
mov
sub
xor
insb
cwtl
xchg
xlat
jl
adc
inc
ljmp
jmp
bound
xchg
xchg
ror
lret
je
or
movsb
adc
pop
push
fisubrs
add
cmp
mul
mov
mov
lcall
and
sarb
daa
mov
fistpll
decb
dec
nop
sub
into
repz
arpl
lods
or
test
adc
das
sub
pop
notl
and
rorl
xchg
pop
inc
rolb
cmc
inc
mov
fisubrl
or
adc
push
lret
push
inc
jne
jg
aaa
lods
leave
scas
lds
add
lcall
sbb
pop
inc
adc
and
push
xchg
push
sarl
jp
add
add
int3
out
push
xchg
sahf
mov
test
cli
lahf
adc
hlt
pop
loopne
mov
sub
repnz
xor
mov
sub
pop
in
adc
add
fwait
or
jne
push
fs
pop
xor
insl
scas
fsubrp
jmp
xor
inc
imul
sub
jne
lcall
andl
sub
cs
mov
xchg
dec
push
mov
in
mov
inc
outsb
divl
icebp
jl
test
cmp
dec
mov
mov
clc
sub
push
jge
sub
mov
jmp
inc
shrb
or
pop
or
sbb
add
cmp
push
cmp
popf
and
jns
sub
int3
ffree
outsb
mov
fstl
test
push
imul
in
into
pop
pop
and
movsb
mov
push
push
aad
lods
mov
mov
dec
lret
jecxz
inc
mov
push
rcll
jbe
stos
push
outsl
xchg
or
hlt
add
inc
rcr
pop
outsl
mov
cmc
or
test
int
jne
xchg
aas
in
inc
pop
or
int
pop
pop
jns
jecxz
xchg
mov
xchg
lea
cmp
add
fwait
xor
out
xor
pop
push
sub
jecxz
loopne
ficoms
pop
hlt
fwait
jle
cld
jl
je
nop
sub
bound
inc
mov
daa
xchg
pop
call
inc
test
iret
je
pop
jne
adc
mov
dec
int3
in
mov
inc
or
lods
lahf
ss
sbb
pusha
test
in
stos
jbe
sbb
das
pop
cmpsl
lock
lods
adc
add
cs
pop
pop
insl
inc
adc
push
stc
fidivrs
push
pop
outsl
pop
lods
mov
xchg
sbb
dec
and
mov
dec
notl
cld
repnz
int3
fmull
stc
add
xlat
jno
dec
dec
lea
and
sub
add
fwait
mov
xchg
mov
mov
ss
sub
xor
xor
shlb
mov
jns
adc
jl
pop
mov
and
lcall
rorb
pop
adc
loop
xchg
and
lds
cmpsl
in
xor
ja
cld
pop
xchg
scas
push
jne
icebp
in
cmpb
add
out
daa
inc
xchg
lret
or
cli
jmp
push
mov
stos
loop
cli
mov
bound
in
aas
cld
mov
push
outsb
cltd
xor
scas
les
inc
mov
loop
xor
pop
pushf
je
sub
outsb
inc
test
imul
push
jp
call
adc
sar
xchg
adc
cltd
xchg
sub
sbb
push
push
out
pop
xor
mov
nop
or
inc
loope
push
pop
sbb
dec
dec
mov
sub
sti
fisttps
dec
lahf
hlt
push
popf
rorl
jg
call
fisttpl
and
cmp
sbb
sub
rorb
lret
shl
mov
repz
xchg
scas
je
jg
or
hlt
in
xchg
out
lret
testb
fcmovne
sahf
xchg
fwait
cmp
ja
fisubrl
add
jo
push
jp
add
fmul
adc
add
aaa
ret
fnstsw
pop
inc
or
mov
sub
aaa
lds
out
or
sbb
xchg
xchg
sbb
adc
ss
das
fs
test
stos
fists
push
mull
inc
movsb
sub
mov
sub
xor
lods
test
notb
or
adc
lds
ja
mov
sti
iret
push
xchg
or
int3
push
or
pop
out
mov
adc
fistl
add
hlt
ja
clc
pop
lret
mov
stos
dec
ja
aas
push
xchg
or
ds
movsl
xchg
cwtl
ret
or
lret
xlat
adc
jg
cmp
mov
cmp
jecxz
cmp
sub
xchg
dec
test
mov
stos
mov
xchg
mov
shlb
xchg
sbb
push
test
mov
mov
xchg
jmp
sbb
and
xor
outsl
sbb
daa
jle
rolb
neg
ret
out
in
pop
lret
jp
adc
xor
mov
and
pop
cs
shrl
in
insb
mov
push
into
inc
shrb
mov
jg
xchg
cmpsl
mov
adc
stos
lret
enter
mov
cmpsl
mov
inc
cs
dec
popa
cmp
cmp
xchg
test
mov
hlt
imul
mov
ret
jl
sub
pop
push
adc
lcall
pop
shlb
adc
loope
sbb
xchg
loope
sub
mov
adc
jmp
neg
jmp
mov
sbb
dec
mov
in
loopne
not
call
pop
push
shll
mov
push
test
incb
lret
and
and
lret
mov
mov
push
mov
xchg
mov
loopne
cld
iret
fsubp
frstor
fdiv
cmp
shlb
iret
insl
xchg
ret
jbe
push
mov
xor
pop
mov
leave
leave
jecxz
orps
icebp
jb
jno
or
mov
fs
popl
sbbl
call
jp
xchg
adc
adc
loop
push
inc
adc
rolb
call
out
pushf
add
jbe
in
insl
lods
out
popa
inc
jo
or
push
movsl
pop
mov
mov
bswap
ficoml
iret
cmpsl
push
sbb
sub
add
inc
sahf
sbb
mov
adc
stos
fstpt
mov
push
shrl
xor
ret
dec
fdivrl
sub
fidivrs
mov
mov
rol
sti
loopne
fnstenv
loopne
ds
xchg
movsl
mov
outsb
arpl
adc
dec
sarb
dec
fs
lods
or
push
arpl
lret
mov
dec
sbb
add
popa
incl
test
mov
cwtl
pop
lock
adc
and
xor
and
aaa
popf
gs
out
repz
adc
push
popa
lock
cmp
into
inc
cmovg
and
dec
and
mov
iret
pushf
test
pop
cld
add
push
subb
cwtl
cmp
sbb
rcrb
ss
loope
daa
pushf
mov
loope
out
sub
jo
cld
add
fisubl
jns
outsl
call
popa
jle
jbe
call
push
fisubl
add
add
or
stc
jl
int3
xor
sbbl
ljmp
cltd
fs
aad
mov
scas
mov
cmpsl
sub
inc
das
cwtl
insl
mov
insl
lds
rorb
fwait
dec
mov
cmc
push
js
stos
xor
push
mov
push
or
lods
nop
cmp
cli
inc
mov
les
call
jmp
lods
insb
mov
mov
mov
mov
into
gs
add
ss
pop
and
into
repnz
in
sti
jle
jno
jne
movsb
test
cwtl
push
cld
mov
sbb
mov
pop
sub
cmp
sbb
push
push
mov
movsl
mov
jne
pop
filds
push
xchg
pushf
cmp
push
mov
lahf
movsl
idivb
jmp
xchg
cs
push
xchg
xchg
or
rcll
and
mov
push
lods
sbb
pop
test
out
fiadds
out
rcr
xchg
cs
sub
adcl
out
imul
pop
lods
sbb
mov
and
fmull
outsb
cli
push
je
or
xchg
adc
pop
adc
mov
test
jg
push
aas
shrl
lret
dec
in
mov
test
movq
rclb
fwait
in
out
mov
ja
dec
test
loope
adc
fisubs
mov
jb,pt
xor
mov
clc
mov
or
sahf
stos
and
xor
jo
add
cli
cmp
cwtl
pop
mov
pop
je
in
inc
cmp
sbb
popf
es
hlt
je
xor
or
mov
aad
daa
pushf
mov
cs
ret
mov
outsb
fs
mov
cmp
or
data16
mov
cld
xlat
js
or
inc
jns
in
lds
and
fs
int
in
mov
pop
lods
lahf
mov
dec
pop
sub
jo
mov
ror
jp
lahf
fisttpll
test
scas
pop
sbb
ss
mov
jbe
mov
cmp
xchg
jns
out
pop
cmp
xchg
dec
sub
and
shlb
mov
ret
pop
in
orl
loop
add
repnz
int3
cmp
mov
push
add
xchg
mov
mov
mov
sti
insl
add
bound
mov
ret
test
hlt
ljmp
xor
adc
lods
lods
jb
rcrb
adc
push
add
inc
push
shrb
push
loopne
addb
ss
sub
cmp
ret
pop
fwait
pop
mov
and
in
repz
or
pop
shl
cld
pop
mov
push
loop
test
xor
pop
mov
insb
bound
push
aad
add
and
mov
mov
bound
std
jmp
out
xor
shl
rolb
orl
xor
or
test
dec
fwait
test
xor
xchg
jae
loopne
arpl
dec
push
shl
sahf
les
call
push
sbb
out
jle
movsl
popa
pop
or
mov
cmp
pop
enter
shlb
dec
push
adc
in
pop
movsb
fdivl
push
or
movb
stos
ret
xor
push
cli
daa
inc
test
out
jne
std
inc
mov
jnp
or
cld
es
scas
movsb
int
es
fnstsw
jl
addl
add
scas
insl
inc
in
inc
cltd
sub
mov
inc
sbb
ficomps
sbb
inc
and
jl
in
mov
mov
pop
in
ss
mov
pop
push
mov
les
mov
fldenv
nop
jno
mov
jp
xor
subb
icebp
add
fs
imul
xchg
and
pop
dec
gs
inc
pop
xchg
cmp
inc
inc
cmp
and
push
stos
dec
or
and
sbb
jp
popa
xor
dec
cmp
cmp
mov
mov
xlat
cli
in
sbb
lcall
sbb
int
ljmp
push
pop
out
sbb
gs
mov
nop
dec
mov
int
jge
cmpsb
lods
insb
das
lahf
test
mov
psubsw
cmp
cmp
out
pusha
sub
pop
test
imul
cmp
enter
stos
adc
arpl
or
adcb
sarb
ds
mov
cld
int3
js
or
or
addr16
lahf
mov
jp
jbe
sbbb
loopne
push
rorl
sahf
adc
push
testb
lock
push
cmp
push
dec
mov
out
imul
adc
in
add
pop
and
in
test
jmp
data16
repz
mov
mov
mov
outsb
inc
test
xlat
sbb
mov
rclb
cmp
cmp
fisubrs
dec
cmp
clc
outsb
es
clc
sarl
cmp
decl
imul
pushf
mov
ss
stc
mov
lret
jle
jg
jae
jmp
jb
orl
mov
popf
sub
add
fdivrl
lahf
sub
and
jecxz
jne
ret
push
xchg
push
cs
lret
aam
cmp
pushf
add
dec
mov
ss
and
std
icebp
cmp
pusha
dec
sub
in
popf
sahf
hlt
ljmp
push
jecxz
fnstcw
mov
mov
sbb
jno
push
scas
mov
fildl
mov
adc
push
das
sub
insl
cmc
ja
lock
loope
adc
nop
cmp
negl
pushf
and
enter
popf
inc
icebp
shrb
stos
rcr
cmc
xor
or
pop
addr16
cmp
mov
movsl
cltd
lods
jp
jbe
movsb
mov
adc
xchg
adc
insl
push
pop
dec
mov
and
clc
ret
cld
xchg
repz
xrelease
dec
addl
ficompl
mov
or
and
imul
movsb
pop
out
or
xchg
push
ss
sub
insl
adc
ret
subl
sbbb
inc
xor
or
push
stc
pop
push
imul
sahf
test
cmc
inc
neg
lcall
xor
outsl
add
enter
cmpsl
inc
dec
pop
add
sbb
jns
mov
jge
movsl
lods
push
movsb
xlat
sbb
es
dec
into
fadd
adcb
inc
push
stos
out
pop
sub
jmp
aad
pop
pop
sti
push
jb
sub
adc
lret
int3
nop
mov
jge
adc
jbe
cmp
scas
pop
push
pop
pop
jae
mov
out
out
adcb
or
imulb
stos
mov
jge
xor
ret
fdivrs
insb
ja
enter
mov
or
pop
fbld
pop
lcall
pop
sahf
xchg
lahf
pop
shrl
push
lds
push
pop
enter
movsb
repnz
fsubl
or
gs
lret
dec
dec
pop
and
outsl
xchg
std
outsl
out
jae
aad
cmpsb
out
into
push
cltd
scas
test
test
mov
fsub
test
xor
push
push
mov
jp
mov
into
sahf
xchg
cmc
ret
fmul
negl
imul
leave
jp
dec
mov
add
pop
movsl
and
xor
jmp
repz
or
or
cmp
pushf
pushf
pop
cmp
adc
cwtl
in
outsb
bound
gs
in
pop
jae
insb
mov
fwait
mov
jno
sbb
lods
lahf
mov
xor
jl
lret
sbbb
jp
dec
frstor
mov
mov
loope
ret
xchg
aam
gs
inc
xchg
lcall
dec
or
stc
lock
int3
dec
dec
xor
bound
mov
mov
add
mov
cmp
mov
push
imul
mov
rolb
mov
adc
push
rclb
repnz
out
dec
cmpsb
add
aaa
outsl
mov
xor
or
daa
sbb
inc
rorb
mov
sub
sbb
and
jl
xorl
mov
mov
cmp
out
jmp
js
mov
xor
jns
xor
add
jmp
push
imull
push
sub
jns
int
adc
les
ds
lds
int3
adc
dec
nop
jmp
test
sub
jne
in
push
or
in
loop
dec
stos
bnd
push
lods
inc
out
fdivrl
mov
movsb
and
int
ljmp
repz
add
inc
add
xchg
ficomps
shrl
mov
cmp
aas
push
cmpps
inc
dec
popa
push
or
or
add
mov
call
pusha
data16
sbb
xchg
pop
incl
sbb
push
dec
out
or
cmp
inc
lcall
daa
mov
inc
fcmovb
mov
les
mov
lock
sbb
test
xchg
bound
fs
cld
xor
pop
mov
adc
pop
inc
sbb
pop
pop
adc
mov
test
leave
rorb
testb
imul
inc
fnstcw
fs
inc
xchg
mov
pusha
jne
fisubrs
xchg
outsb
cmp
dec
jnp
mov
inc
data16
bound
pop
sub
sbbl
xor
scas
out
into
push
xchg
je
pop
insl
inc
cmp
fwait
arpl
lret
movsl
gs
popa
xor
mov
enter
sbb
notb
mov
out
inc
cmp
or
scas
pop
jmp
leave
and
mov
jecxz
enter
sub
jg
xchg
xchg
jecxz
push
out
popa
in
mov
out
ja
jp
mov
insl
iret
hlt
xchg
cmp
jmp
add
add
dec
xchg
adc
mov
xor
mov
rorl
sahf
int3
stc
aam
push
sarb
xor
mov
mov
scas
loopne
add
push
int
in
sub
rol
push
inc
pop
mov
scas
pop
jbe
in
jae
cwtl
lcall
jbe
and
imul
or
pop
jo
rorb
xlat
jo
cwtl
rcrb
les
jne
lcall
mul
xor
cmc
addb
test
je
inc
add
pop
inc
notb
sarb
push
pop
fs
sbb
add
mov
cld
imul
mov
sbb
pusha
push
cs
and
cwtl
xchg
dec
iret
pop
sub
js
sub
and
and
jae
xor
sbb
mov
sub
fdivl
mov
ret
outsb
push
add
pop
clc
stos
daa
pop
push
sbb
pusha
in
loop
pop
push
and
sarb
xchg
add
test
mulb
jno
test
push
mov
nop
adcb
xchg
jnp
test
xchg
in
call
push
mov
jns
fcmovnu
loop
lea
pop
fsubrl
ret
ds
fldz
sbb
pop
or
mov
iret
and
cmp
test
push
add
push
lahf
fdivrl
jge
lds
cmpsl
sti
loope
inc
and
mov
sarl
outsb
adc
lock
incb
movsl
addr16
jno
xchg
inc
or
dec
fidivl
test
push
fcmovne
loope
stos
pop
outsl
xchg
xchg
test
mov
ds
gs
rcrb
jp
movsb
in
or
scas
push
and
sbb
mov
addr16
mov
lods
mov
or
mov
xchg
inc
or
addr16
jbe
fimull
adc
push
mov
icebp
dec
movsb
push
cmc
mov
add
jge
ljmp
jle
hlt
popa
std
mov
mov
mov
push
leave
cmpsl
lahf
cmpsb
mov
arpl
jb
jbe
mov
lods
subl
mov
ja
cltd
pop
add
and
loop
call
mov
insl
faddl
ret
sub
mov
loopne
pop
and
push
pop
push
dec
jl
in
cli
test
jno
leave
cld
jg
jle
or
nop
and
push
xchg
jne
es
ret
or
xor
jb
sbb
ret
addb
test
arpl
jo
inc
inc
in
mov
lret
xor
sarl
insb
sbb
test
lret
jns
push
pop
sbb
add
push
sub
cli
push
ja
outsl
inc
daa
xor
xchg
sbbb
mov
call
mov
pushf
loope
mov
jo
movsl
cwtl
pop
push
fsubs
cli
mov
mov
xor
dec
xchg
ss
ja
loope
or
loopne
adc
pop
daa
add
pop
test
mov
adc
dec
cmp
xor
inc
ss
loop
and
fs
icebp
enter
sbb
dec
adc
icebp
and
pop
mov
fldcw
jl
jecxz
sbb
mov
push
gs
cmp
bound
fmull
nop
and
pushf
pop
pushl
lahf
shrb
hlt
mov
outsl
lret
imul
jae
notl
xchg
test
lret
or
imul
aaa
adc
pop
mov
insl
fisubl
sbb
mov
popf
inc
aaa
jl
sub
jb
push
sti
jns
cwtl
shl
jmp
cmp
jb
jmp
scas
pop
sbbl
cmp
mov
sbb
shrl
mov
and
inc
cmp
cmp
add
pop
ret
adc
lahf
rcrb
push
pop
das
xor
repnz
and
jb
arpl
rcr
and
xchg
cmpl
lcall
push
pop
add
in
cmp
loope
and
xchg
pop
std
mov
loope
stc
in
dec
cmp
jge
add
mov
jecxz
adc
fsub
xor
scas
pusha
jg
adc
xchg
cmp
sbbb
idivb
jae
ret
pop
test
mov
ret
gs
lods
push
sbb
add
inc
fists
flds
dec
ror
xchg
out
mov
jb
inc
push
or
and
sbb
ljmp
test
das
inc
push
in
test
add
ret
aad
inc
movsl
scas
adc
or
dec
mov
jb
add
cmp
jne
ret
jae
outsb
adc
fidivl
cwtl
inc
movsb
daa
cmp
mov
add
shlb
cmp
pop
lret
lea
sub
cltd
inc
fwait
push
inc
fidivl
mov
cmp
aas
xchg
push
fwait
lcall
out
push
mov
fst
sub
jne
sarb
or
testb
mov
push
in
jne
cmp
xchg
mov
add
or
and
xchg
scas
jo
jp
sub
fcmovnu
or
inc
je
push
mov
cwtl
jmp
lock
xchg
cmp
dec
scas
jo
pop
ljmp
jne
mov
lods
cwtl
out
pop
xchg
or
rclb
paddw
fwait
outsl
xchg
jo
les
lods
repnz
daa
aam
in
jbe
adc
cmp
mov
jecxz
into
mov
out
loop
out
or
mov
mov
sub
leave
sbb
movsl
mov
or
daa
insl
jmp
xorb
lcall
outsb
adc
mov
and
inc
testw
outsl
data16
push
dec
xchg
movl
outsb
fldcw
push
iret
inc
and
sti
and
pop
jbe
or
xor
jecxz,pn
out
jge
jae
iret
out
cs
aas
hlt
adc
pop
ja
jl
push
lret
jmp
xchg
loopne
pop
cld
and
icebp
popa
ljmp
cmpsb
cmpsl
pop
dec
insl
jb
jae
jp
jmp
leave
xchg
mov
dec
jle
mov
or
shll
fbld
mov
int3
lahf
addr16
pop
and
incl
aaa
dec
ffree
cmp
lds
push
sbbb
fwait
add
mov
icebp
push
call
push
xchg
mov
test
add
pop
push
xor
push
add
sbb
out
stos
out
mov
add
sahf
out
jae
movsl
dec
movsl
inc
push
push
bound
mov
xchg
mov
loop
add
jb
mov
pop
jp
xchg
rolb
in
gs
sub
jg
divb
nop
mov
aaa
xchg
jo
sub
dec
int3
dec
pop
in
sti
cmp
movsb
mov
jnp
push
fnstsw
leave
scas
push
lret
roll
or
in
repnz
add
leave
fbstp
adc
xchg
xchg
ja
dec
ds
test
add
imul
sbb
clc
xor
xlat
stos
adc
and
jne
jl
sub
push
xor
sbb
jno
sbb
std
push
mov
in
pop
mov
push
mov
adc
loope
ret
inc
dec
add
mov
lock
dec
cwtl
sub
scas
push
sbb
fdiv
mov
cli
aad
lcall
cmp
fwait
cltd
dec
mov
lcall
mov
cli
in
jae
mov
jo
fcompl
cmp
imull
fcoms
push
gs
lahf
mov
jb
shll
cmpsb
sti
add
or
jl
inc
cmpsb
cmp
mov
lea
push
xchg
scas
inc
and
out
outsl
sub
add
test
cwtl
insl
shr
aam
and
pop
fdiv
shll
adc
sarl
mov
inc
popf
push
fsub
xor
lock
sub
or
lcall
push
rclb
jge
mov
ret
nop
clc
jge
adc
push
out
xchg
mov
ds
lds
push
or
dec
fsubl
shlb
cs
mov
dec
pop
dec
leave
sbb
xor
jmp
arpl
bound
aaa
push
mov
mov
xor
cmp
test
push
aaa
push
mov
daa
mov
mov
jns
ss
test
sbb
jmp
pop
push
push
xor
popf
add
or
or
cmp
mov
sbb
mov
xchg
loopne
call
inc
repnz
xchg
in
data16
dec
or
dec
fsts
push
outsb
inc
sub
xchg
pushf
hlt
mov
push
dec
inc
or
inc
out
scas
cmpsl
shll
mov
push
movsl
add
sub
shl
mov
bound
jb
jbe
push
add
adcl
sbb
fcomps
fcomps
cmpsl
idivl
pop
mov
inc
push
jl
arpl
test
das
push
shll
dec
inc
mov
add
mov
or
or
mov
je
adc
jp
jecxz
das
in
jnp
sbb
jle
or
mov
sub
lea
xchg
jg
inc
aad
jp
inc
xchg
push
mov
cli
fcos
pop
xchg
sub
jg
push
pop
aam
iret
sub
xlat
xor
jl
rcrb
out
push
sbb
mov
stc
call
les
mov
imul
pop
push
sub
push
adc
ret
cmp
add
jl
mov
ds
mov
fildl
jno
cld
fnsave
pop
ror
repz
dec
xor
push
xchg
dec
out
outsl
out
sub
sahf
adc
pop
xor
mov
cmp
iret
push
xchg
scas
das
push
call
xchg
lahf
orl
xchg
xor
jg,pn
pop
sbb
jp
jl
mov
push
cld
arpl
out
ljmp
int
outsl
fistps
and
jl
lcall
leave
test
jns
lock
test
cs
arpl
lock
push
or
clc
test
orb
add
jp
dec
xchg
inc
out
fistpl
ret
mov
dec
push
outsl
pop
xchg
mov
out
arpl
mov
and
sbb
xlat
fistps
lret
fnsave
cmp
push
xchg
inc
xchg
inc
dec
arpl
insl
adc
inc
xlat
and
and
cli
daa
mov
pop
add
in
das
daa
test
mov
add
pop
push
fld
out
into
push
cmp
lahf
popa
shll
iret
ja
dec
std
ljmp
mov
push
call
test
sbb
idivb
adc
loope
lahf
imul
shrl
inc
scas
bnd
loop
inc
call
loop
pop
lret
add
pusha
jns
xor
mov
mov
sbb
stos
xchg
shrl
outsl
ror
sbb
lcall
mov
xchg
jg
mov
aad
scas
xchg
popa
ficoml
push
scas
mov
mov
out
xchg
inc
lock
aam
in
jb
push
jns
les
jmp
sub
push
cmp
repnz
xor
mov
push
dec
ds
mov
ljmp
fs
pop
cmpsb
sbb
hlt
lock
dec
sub
or
jge
xor
out
jb
icebp
push
push
loopne
pop
sbb
dec
fcoml
cmp
xchg
jno
mov
push
mov
jmp
call
mov
pop
fisubl
jp
mov
sbb
addr16
or
and
popf
outsb
xchg
jg
adc
sbb
add
mov
jb
jno
imul
xchg
fwait
pop
icebp
incl
push
loopw
fs
mov
push
insl
decl
dec
jg
aas
cmpsb
adc
push
fbstp
jle
mov
repz
xor
add
lods
adc
mov
xor
adc
pop
xor
mov
notl
es
loop
mov
or
popf
stc
out
arpl
mov
and
xor
mov
scas
test
stc
call
adc
add
fadds
jo
xor
jmp
int
roll
arpl
pusha
stos
xlat
out
inc
inc
nop
icebp
rorb
push
movsb
sub
in
aas
test
fcmove
adc
dec
cmc
shrb
push
adcl
and
push
rcrl
jp
dec
lock
arpl
scas
mov
mov
int3
clc
sub
jb
test
call
roll
xor
popa
or
xor
mov
push
rolw
std
std
sbb
mov
hlt
inc
in
push
scas
aaa
test
imul
arpl
shrl
cli
aam
js
std
repnz
call
xchg
std
adc
mov
and
rcrb
sahf
push
mov
adc
jno
lds
lods
outsb
js
mov
daa
or
add
sub
in
insl
push
les
cmpsb
and
enter
stc
popl
push
lea
cmpsl
mov
push
adc
inc
ja
clc
add
mov
push
xchg
xor
repnz
lods
inc
ds
cli
ffreep
pop
cmp
je
pop
pop
clc
mov
enter
inc
stc
pop
mov
jg
int3
sub
aaa
cmp
add
xchg
adc
dec
les
jecxz
lret
xlat
cwtl
inc
jp
adc
push
ss
adc
fdivrp
stos
add
mov
cmp
daa
xor
frstor
leave
in
inc
insl
xchg
pop
lock
aas
sbb
jb
lock
cmp
loopne
and
xchg
leave
adc
aam
leave
notb
ljmp
mov
cmp
scas
xchg
push
out
sbb
pop
sbb
into
jp
repnz
inc
imul
and
scas
lock
rorl
sbb
scas
adc
pop
and
test
sbb
inc
lahf
incb
add
dec
mov
ds
test
mov
fisttpll
stc
popa
cmp
dec
in
fidivrs
sub
and
or
fmuls
loop
sbb
mov
add
pop
in
dec
jne
pushf
imul
jmp
push
adc
nop
pop
inc
loope
outsb
cmpsb
outsb
jmp
hlt
pop
clc
mov
ret
aas
cs
mov
mov
repz
arpl
push
shll
test
pop
repnz
jp
jecxz
cltd
cmc
pop
mov
aam
lods
int3
inc
jle
ja
push
fwait
mov
mov
inc
xor
shlb
scas
cmpsb
push
jmp
add
inc
jge
xchg
pusha
mov
jo
sub
popf
pusha
add
pop
or
enter
adcb
lret
mov
test
sbb
mov
push
sti
or
imul
add
cmpsb
cmpsl
jo
es
lea
rcll
lea
aaa
imul
fcomi
into
jmp
push
xchg
or
sub
mov
fidivs
rcrl
cmp
mov
push
aaa
outsb
scas
test
mov
xor
scas
inc
lret
mov
mov
mov
xchg
jbe
imul
dec
xor
aas
cmp
xchg
xor
sbb
mov
lret
aas
sbb
jo
xor
inc
cld
lret
or
dec
inc
push
cmp
push
sbb
jo
mov
mull
fstpl
subl
shr
push
ret
and
sub
mov
jo
gs
mov
push
es
xchg
dec
mov
stos
mov
in
jo
xor
into
cmpsl
xor
dec
mov
jge
and
cmp
dec
add
dec
cld
arpl
fisubl
ss
aas
push
xchg
push
cli
fucomip
xor
mov
aam
fimuls
xlat
dec
filds
mov
inc
mov
pop
add
pop
pop
mov
loopne
xchg
mov
pop
in
jns
add
cwtl
in
cmp
ds
add
xchg
scas
adc
push
jmp
adc
int
cmp
fs
mov
je
xor
fcomps
mov
loope
jecxz
inc
mov
mov
and
mov
adc
pop
rcrl
jbe
loope
add
test
dec
imul
pop
mov
lods
std
ja
adc
push
xorl
lea
out
js
inc
sarl
push
rcrb
lret
hlt
cmc
das
pop
dec
fcoml
les
adc
jbe
xor
rorb
pop
hlt
ficoml
fstpl
popf
shrl
jl
lahf
jl
mov
inc
or
addr16
or
int3
adc
xor
gs
mov
scas
push
xor
mov
cmp
insl
inc
pop
subb
leave
inc
add
jo
mov
mov
in
push
inc
test
clc
outsb
xchg
or
mov
mov
test
lock
jne
xlat
test
cmp
push
in
mov
sbb
ret
hlt
out
and
mov
jbe
movsl
les
inc
cmp
daa
add
mov
mov
jle
mov
ret
xchg
adc
int
shrl
jo
imul
testl
pop
and
pop
fs
fisubs
shrb
movsl
sub
jns
mov
incl
in
mull
cli
pop
jo
pusha
dec
je
mov
lock
push
repnz
ds
popf
negl
fnstenv
xlat
aam
push
mov
jg
loop
sub
jbe
cmpsl
stos
mov
mov
inc
inc
push
imul
dec
add
sub
cli
movsl
cmp
les
cltd
stos
fcmovnb
loopne
lcall
ret
jge
fwait
xchg
data16
mov
loope
inc
sar
xor
xor
fs
jle
daa
cwtl
nop
pushl
int
add
pop
addr16
adc
cltd
mov
aaa
mov
leave
xlat
imul
imul
lods
lret
dec
or
mov
pop
jnp
jno
mov
pusha
mov
data16
jecxz
jmp
aam
push
addr16
fsubrs
fs
cld
cli
jg
and
mov
mov
inc
jmp
mov
push
sub
mov
fldcw
std
mov
xchg
cs
cli
or
jg
into
data16
mov
and
pop
mov
xlat
or
xchg
out
pop
xchg
sub
add
orl
lret
cmp
cwtl
push
mov
mov
xchg
xlat
in
xchg
scas
sub
dec
push
and
test
and
mov
or
jmp
pushf
addr16
push
das
inc
data16
imul
xorl
lret
mov
mov
push
jge
insb
mov
mov
out
push
mov
jmp
lock
cmpsb
or
movsb
push
mov
push
insb
mov
cltd
xor
cmp
dec
pop
pop
xchg
adc
or
push
sub
adcl
mov
mov
dec
lods
xor
inc
mov
bound
arpl
push
pop
mov
mov
lcall
das
cmp
repnz
in
call
and
pop
xchg
rcr
clc
sub
push
lcall
outsl
stc
xchg
and
sarl
and
movsb
addl
ds
inc
inc
ja
adc
cmp
movsl
jns
and
imul
fmuls
shll
shll
in
or
xor
dec
add
inc
sbb
pop
repnz
sbb
iret
mov
and
icebp
adc
imul
sub
into
jno
repnz
ljmp
or
or
cld
leave
test
in
outsl
pop
mov
inc
fbld
mov
popf
xchg
mov
fwait
mov
lods
fcomp
sbb
mov
push
adc
adc
lahf
cmc
shrb
xchg
jbe
cs
mov
int
add
jo
mov
sbb
bound
mov
or
pop
pop
nop
pop
rorl
test
rorb
jecxz
dec
aas
sub
imul
and
jnp
in
xchg
test
enter
dec
imulb
stc
aas
push
adc
pop
cmpsb
fbstp
gs
mov
adc
mov
lret
cmp
xor
xlat
daa
rcr
out
popa
rorl
push
rorl
sahf
dec
jns
mov
pushf
cli
mov
std
add
in
andb
cmp
mov
jl
fidivrl
jmp
sbb
shrl
mov
mov
xchg
mov
mov
pop
and
mov
imul
out
mov
push
cmc
xchg
outsl
xchg
push
cmp
mov
outsl
push
repz
push
ds
or
addl
push
jo
inc
adc
out
xchg
lcall
jecxz
xlat
inc
popa
and
xchg
insb
pop
js
stos
jmp
push
mov
jnp
sbbl
in
mov
dec
inc
scas
inc
inc
dec
es
stos
adc
adc
daa
out
inc
and
mov
or
xchg
adc
shlb
jno
dec
xchg
stos
mov
adc
pop
hlt
jae
addl
test
out
test
xchg
je
jo
xchg
imul
pop
sub
or
sbb
push
jnp
fs
xchg
or
outsw
orl
loop
lret
data16
dec
in
xchg
xor
scas
loop
xor
dec
add
adc
xchg
hlt
xchg
dec
cmc
aad
inc
push
mov
jmp
or
xchg
out
repz
dec
cmp
fs
arpl
cmp
das
adc
out
sahf
adc
add
inc
add
bnd
movsb
jo
and
xorb
dec
in
cmp
outsb
cmp
jbe
adc
sub
dec
xchg
es
adc
or
fsts
xchg
mov
push
dec
lcall
sbbl
leave
loope
xchg
icebp
imul
xor
push
inc
aaa
rcrl
push
mov
sub
push
inc
push
icebp
jbe
mov
mov
js
jge
imul
fmulp
imul
js
ljmp
aas
mov
mov
adc
dec
or
or
adc
mov
pop
test
ret
sbb
push
push
lock
dec
lcall
and
pop
push
adc
cmpsl
cmp
rorb
mov
imul
aam
jge
out
mov
lret
hlt
pop
outsl
test
dec
imulb
loopne
ds
icebp
dec
xchg
add
and
insl
ret
dec
sub
dec
push
rcll
adc
sbb
gs
lods
push
insl
out
loope
scas
pop
out
cltd
mov
clc
sbb
dec
fiaddl
out
pop
sbb
orl
dec
cmc
and
or
mov
aaa
les
cli
mov
je
xchg
stos
lret
cmc
xchg
mov
flds
push
into
inc
lods
push
dec
pop
lret
and
cmpsl
jnp
iret
add
inc
jb
rcll
fcmove
pop
dec
or
adc
rol
enter
int
mov
out
jle
jne
mov
inc
loop
nop
call
mov
movsl
repnz
dec
add
inc
push
popf
dec
in
push
push
mov
jle
pop
mov
adc
pop
movsl
nop
hlt
mov
iret
mov
and
mov
pop
cli
pop
movlps
mov
mov
cmpl
das
add
jo
outsb
outsb
out
insl
pop
leave
xchg
jl
mov
icebp
repnz
push
inc
mov
ljmp
ja
fcmovne
push
fs
inc
jno
stc
daa
push
aas
jnp
xchg
sub
mov
or
adc
jbe
cmp
incb
fsubrs
out
push
inc
cmpsb
jecxz
add
jnp
cmpsb
cs
out
ret
or
push
or
jb
jne
adc
push
cmc
fs
ret
push
push
mov
loopne
push
ja
jl
in
stc
adc
jns
fistpll
lock
push
jb
sti
and
gs
push
dec
jbe
pop
cmp
mov
or
scas
cwtl
push
sahf
imul
fldcw
cmpsb
xchg
fdivrl
lea
fmull
mov
popa
in
push
lock
adc
loop
add
out
sbb
jno
jo
jne
mov
sub
stos
int
lret
dec
pop
jno
mov
and
mov
or
cmp
cld
add
and
mov
and
mov
test
pop
cwtl
jmp
inc
cmp
push
jb
inc
cwtl
int
pop
pop
rcll
outsl
dec
lahf
call
pop
sub
es
mov
ret
scas
lods
int
xchg
cli
jmp
sbb
xorl
aad
xor
cmp
pushf
sbb
imul
jle
out
fstpt
adc
mov
mov
adc
and
push
loopne
pop
adc
mov
in
sar
div
lods
mov
vpmadcswd
xchg
pop
sbb
int
mov
push
cmp
push
adc
loope
xor
sbb
stos
test
in
push
xor
das
and
fbld
cmpsl
and
pop
push
xor
sahf
add
std
cmpsb
mov
push
fiaddl
mov
xchg
lret
adc
test
in
shl
lods
inc
mov
in
pop
test
inc
push
orb
pop
adc
xchg
lock
mov
and
pop
fcoms
in
dec
push
push
pushf
dec
repnz
andl
inc
cmpsl
outsl
xlat
add
dec
mov
cmp
mov
jb
test
loope
sbb
daa
aam
dec
xchg
mov
cmp
push
sbb
lret
ds
lret
mov
repz
push
push
adc
push
popa
test
lcall
mov
dec
shl
mov
mov
iret
pop
lcall
aaa
test
call
fidivl
out
push
xchg
gs
cmpb
xchg
xchg
rorb
mov
and
inc
jo
mov
mov
mov
repz
pop
fdivs
xor
inc
pop
xor
mov
sub
cli
jmp
scas
dec
jb
rcll
cmp
aaa
sbb
sub
aad
jo
sti
xchg
sub
mov
mov
push
sub
cli
sbb
pop
lods
jbe
push
mov
lock
js
sub
dec
shlb
jmp
fadds
ss
stos
in
mov
iret
iret
or
push
les
dec
xor
mov
pop
shll
add
jmp
stc
mov
ret
imul
mov
mulb
rcrl
into
mov
jno
cmpsb
push
cld
movb
aas
cli
cli
out
xchg
adc
ja
and
pop
push
xchg
or
and
into
clc
sub
in
stc
adc
lods
push
sbb
dec
bnd
leave
or
pop
pop
push
add
jmp
pop
stos
jbe
jo
insl
jb
fcmovnbe
mov
or
test
xor
fistps
subb
mov
test
xor
or
mov
add
jo
xchg
push
setb
mov
jnp
jge
loope
in
cmc
xor
test
mov
std
or
fisubrl
or
aaa
inc
mov
xchg
enter
icebp
mov
sar
xchg
icebp
sbb
adc
or
fcmovb
cltd
je
imul
add
dec
mov
daa
jns
popf
cmpsl
jne
sarl
jnp
fs
and
stos
add
and
push
push
mov
mov
int3
push
popl
cmpsl
arpl
jmp
xchg
test
fcompl
stos
lods
and
insl
nop
adc
push
aam
sarl
cs
sbb
cmp
out
ljmp
jmp
pop
push
mov
bound
les
mov
sbb
jge
push
adc
cmp
mov
insl
inc
pop
push
inc
or
xchg
jl
sbb
inc
ljmp
andl
pop
int
test
and
dec
cs
jp
imul
jno
add
lds
dec
jge
ret
negb
mov
sub
add
aaa
addl
mov
iret
in
popa
or
push
xor
rcll
fcoml
inc
aam
xchg
xor
icebp
scas
outsl
shl
push
xchg
in
xor
or
sub
ja
jp
push
dec
push
cltd
xor
dec
test
inc
inc
add
sbb
movsl
mov
inc
loopne
pop
mov
out
mov
sbb
jno
mov
lret
add
loop
icebp
and
xchg
push
sub
lock
inc
pushf
out
das
jns
pmaddwd
cmp
mov
push
mov
cwtl
idiv
jg
dec
jecxz
addr16
sahf
cs
push
and
add
xchg
sub
dec
inc
ljmp
ja
sahf
xchg
mov
push
and
sbb
xchg
mov
in
sub
daa
lock
imul
mov
inc
or
pushl
repnz
dec
pop
or
imul
ret
xchg
popa
fidivs
mov
icebp
adc
mov
lea
push
in
fadd
pusha
and
inc
and
mov
loop
mov
dec
push
pop
adc
push
in
fistpl
pop
sbb
sbb
pop
dec
ficoml
jne
mov
jne
cmp
in
mov
rcrl
enter
fsts
xchg
aaa
ss
std
out
fucomi
sub
ret
and
aad
inc
pusha
and
push
dec
xor
pop
jo
int
stos
dec
cli
imul
xchg
and
ret
mov
ds
mov
into
loop
mov
mov
loop
fsubr
jnp
adc
imul
mov
push
xchg
sbb
test
mov
add
mov
mov
xor
popl
imul
jecxz
pusha
xchg
sbb
sbb
sbb
outsb
loop
rep
or
mov
xchg
jae
or
js
sbb
adc
cltd
dec
or
jp
pop
or
andl
iret
pop
test
aas
sbb
jnp
lods
pop
add
jns
out
sahf
mov
loope
and
roll
and
inc
lret
xchg
pop
ds
ret
imul
xor
shr
push
mov
in
sub
adc
mov
bound
xor
add
dec
repnz
aam
cmp
add
stos
mov
fistl
pop
dec
ficoml
jns
ljmp
fsubl
mov
pop
daa
mov
jl
xor
pop
cltd
mov
mov
filds
jmp
sti
stos
adc
mov
mov
lret
pop
adc
or
cmp
push
pop
jmp
inc
adc
mov
std
cwtl
insb
lea
cmp
pop
dec
scas
loope
fisttpll
test
xchg
jo
mov
lcall
push
mov
ds
add
test
pop
mov
jns
pop
mov
je
fcompl
loopne
push
fs
jnp
xchg
dec
fstpt
and
pop
pop
out
cmc
mov
sub
dec
sbb
pop
out
xchg
jmp
push
cld
dec
push
add
rcrb
ljmp
popf
or
ds
push
daa
sbb
loop
jb
lock
push
sub
imull
push
inc
mov
mov
jne
mov
ret
pop
fsubl
and
push
inc
pop
hlt
cmp
adc
sub
pop
testl
ret
add
fcompl
cltd
add
adc
rcll
mov
ja
lods
sub
xchg
rcrb
adc
lret
mov
mov
call
fcmovne
test
xlat
jl
dec
loopne
push
loope
pushf
cs
bnd
jae
mov
xchg
test
pop
pushfw
and
jnp
fs
fcmovne
cmpl
sub
push
test
bound
xlat
or
fdivrp
repz
shll
cmpsl
mov
xchg
decb
adcb
mov
push
das
into
addl
xchg
punpckldq
dec
or
push
outsl
in
adc
pushf
stos
jge
add
xor
add
push
xchg
cmp
jns
dec
lret
je
cltd
mov
cld
inc
mov
scas
mov
mov
and
mov
mov
push
out
jo
mov
cmp
push
mov
xchg
dec
jnp
or
lret
xor
jp
adc
jge
loopne
sub
scas
fdecstp
mov
imul
xchg
cmp
mov
pushf
sti
sub
dec
fsubrl
lods
fcoml
mov
add
push
inc
mov
mov
push
add
stc
repnz
aam
xchg
mov
jb
sahf
in
movsb
mov
int
pop
mov
ret
iret
pop
xor
enter
mov
lods
pop
sbb
lds
lcall
mov
mov
lods
jo
bnd
pop
aad
mov
je
jo
lods
test
addr16
add
fnstsw
mov
jo
sbb
jns
jecxz
jns
stc
leave
dec
mov
mov
cmp
clc
pop
adc
aam
cmpsl
mov
mov
ss
mov
sbb
outsb
daa
dec
mov
jmp
cli
mov
adc
mov
fldcw
sbb
mov
dec
mov
cs
sub
aam
adc
out
push
cmpsb
int
push
fbld
daa
fmuls
inc
inc
repz
lahf
mov
pop
jae
shl
push
push
pop
pop
clc
mov
and
mov
dec
cmp
lods
jg
inc
xor
mov
cmp
lcall
inc
and
movsl
popf
imul
lods
mov
lds
call
push
jo
inc
cs
adc
xchg
out
pop
cli
jno
and
mov
stos
or
mov
daa
pop
push
js
lret
stos
notl
sahf
nop
adc
add
enter
sub
mov
jne
jo
adc
rorl
cmp
idivl
xchg
ss
call
sti
sub
and
lret
jg
push
test
mov
inc
dec
fistpl
je
push
test
cs
fstpt
xchg
xor
pop
mov
and
pusha
js
sbb
dec
stos
pop
pusha
xchg
mov
out
scas
add
mov
enter
xorb
mov
movsl
mov
fcomps
push
repz
outsl
pop
or
notb
test
push
loopne
insl
xor
mov
fists
push
js
pop
inc
scas
jo
lahf
les
add
clc
xchg
inc
mov
push
mov
push
adcb
loop
cli
lods
mov
adc
xchg
sbb
int
test
fildll
sahf
sarl
and
and
divl
fbld
rcrl
cmp
enter
mull
fwait
inc
jge
out
or
pop
out
push
imul
mov
push
mov
lock
lret
pushf
or
jge
clc
leave
sbb
add
add
or
add
jg
jp
pop
xchg
sbb
mov
dec
adc
cmp
and
lock
call
ds
push
loope
push
and
cmp
jp
push
std
leave
inc
pop
sahf
push
xchg
inc
pushf
outsl
loop
cmp
sahf
and
mov
mov
add
push
leave
fildl
js
mov
and
in
sbbb
cmp
bound
push
cmp
iret
dec
push
jg
sub
dec
inc
lock
sbb
ja
fisttps
pop
loope
imul
add
xchg
inc
pop
and
mov
aam
add
mov
dec
mov
cmpl
pusha
jge
sbb
pop
xor
sub
pop
aas
mov
mov
dec
hlt
shrl
insb
jmp
add
adc
and
out
mov
daa
dec
aad
sbb
fdecstp
cmp
loope
dec
xor
sti
push
mov
loop
mov
rcrl
insb
test
call
or
xor
push
lcall
push
scas
repnz
arpl
mov
lahf
pop
add
dec
xchg
mov
jno
hlt
and
or
add
insl
sub
mov
iret
ja
shll
sahf
jbe
jae
add
and
xchg
mov
fcomip
jnp
in
push
xchg
pop
movsb
nop
xchg
lods
pop
xor
shlb
adc
xor
cltd
add
push
mov
add
lahf
dec
and
sub
cmpsb
pop
sbb
push
dec
sarl
add
push
pop
neg
pop
out
adc
cmp
sub
push
inc
scas
cmp
mov
testb
cld
adc
sub
sarl
mov
inc
push
xchg
jecxz
into
jae
insl
inc
xchg
popa
push
sbb
addr16
pop
pop
sbb
add
cli
mov
and
dec
vcvtsd2si
loopne
push
data16
cmc
out
dec
ret
mov
pusha
ljmp
dec
xor
inc
das
pop
xchg
dec
inc
lods
add
ficompl
xchg
fnsave
jne
stc
aad
jns
std
ljmp
or
jmp
adc
jb
mov
cmp
push
xchg
movsb
shr
cmp
push
out
bound
cmp
subl
push
jp
test
and
add
test
out
enter
js
jae
dec
rorb
mov
stos
adc
jl
sbb
insl
xor
pop
and
jle
sahf
cmpsb
icebp
orb
ret
loopne
push
pop
iret
test
popa
push
pop
pop
int3
mov
into
fdivs
pusha
inc
iret
sub
popa
subb
add
pop
aad
hlt
loope
idivl
aaa
xor
loope
push
and
xchg
gs
sbb
adc
sub
sbb
cmp
lea
inc
or
mov
mov
dec
loop
ja
sbb
aad
lea
push
arpl
inc
jns
jle
jmp
mov
movsl
fwait
shl
cli
pop
cmp
arpl
jg
mov
pop
or
ljmp
popf
inc
jle
test
ljmp
ret
xchg
jmp
movsb
inc
inc
rcrb
sbb
in
and
jg
clc
mov
imulb
xchg
ja
bts
xchg
push
dec
ja
pop
pop
add
xor
std
sbb
jo
scas
mov
xor
out
call
cmc
jbe
test
data16
loope
cmp
xchg
or
dec
mov
xor
icebp
sbb
iret
cmc
adc
sub
cmpsb
jmp
movsl
pushl
mov
jns
bound
mov
xor
mov
xor
inc
dec
cmp
cli
aad
into
push
das
sbbb
or
mov
or
scas
pop
mov
sub
sbb
cmpsb
mov
mov
leave
stc
pop
insl
xchg
lock
or
loope
mov
repz
jnp
cmp
cmc
xchg
sbb
and
or
mov
vpaddsw
jae
pop
ss
ss
test
xchg
mov
xor
fwait
jns
pop
push
mov
enter
jecxz
gs
push
shr
mov
mov
stos
outsl
or
shlb
loop
fsts
outsl
fadd
sbb
push
daa
xchg
push
or
in
add
loopnew
insl
dec
bound
pop
xor
aaa
pop
dec
jecxz
jns
pop
push
fstps
testb
popa
pop
je
mov
negl
out
outsb
aaa
pop
lock
negl
add
cmp
add
xchg
arpl
jb
sahf
lahf
dec
outsb
xorb
addr16
inc
mov
ret
push
inc
subl
in
push
inc
fisubl
mov
out
pop
or
imul
movsb
mov
push
inc
dec
jnp
pop
icebp
push
xorl
in
cmp
inc
cmp
leave
sbb
mov
push
cmp
sbb
out
testb
fwait
xchg
push
add
dec
sub
mov
enter
mov
in
cmpsl
mov
adc
add
cmp
sar
jge
out
pop
or
into
xor
cltd
xchg
adc
cli
push
push
adc
out
ficoms
add
pop
cmp
inc
jle
inc
pop
cmp
pusha
jle
aam
inc
cmp
jmp
push
in
cmp
xchg
stos
aam
fdivs
imull
jge
pop
cld
push
inc
xchg
outsl
faddl
in
imul
cmp
cmp
mov
and
push
xchg
cmc
dec
fistl
cmpsb
sub
or
xor
push
cld
imul
stc
les
or
scas
ret
addr16
sub
in
fimull
sub
cs
arpl
dec
mov
or
and
in
fbld
sub
mov
sbb
ja
sbb
push
add
or
add
add
sahf
and
dec
ret
xor
dec
dec
lcall
push
xchg
or
ret
xor
loopne
pusha
mov
jno
out
popf
push
cmpb
mov
sub
insl
leave
xor
xchg
clc
xorl
push
loope
lahf
inc
mov
in
pop
jge
mov
and
int
aas
pop
sti
ss
test
add
lret
fs
xchg
mov
mov
fwait
mov
mov
movsl
cmp
nop
adc
in
mov
outsb
and
dec
lea
outsb
xchg
shll
bound
in
fmuls
mov
es
lret
add
aaa
clc
out
stos
lahf
fcom
sbb
repz
or
jnp
pop
jbe
pop
jecxz
aam
mov
dec
pop
subb
loop
rclb
fists
push
mov
fs
jbe
adc
jns
sub
outsb
mov
mov
add
jne
mov
fidivrl
add
adcl
cmc
mov
mov
xor
dec
popf
mov
sub
mov
cli
lcall
or
mov
dec
ss
mov
leave
sbb
dec
mov
inc
jbe
roll
xor
mov
stc
int
and
pop
gs
outsl
gs
cwtl
sarl
jno
ja
or
xlat
xor
push
push
push
addr16
pop
sub
sahf
dec
scas
dec
push
lods
imul
bound
xchg
cmp
in
xor
aad
repnz
inc
jb
cmpsl
jmp
mov
imul
push
in
push
nop
sbb
jp
das
inc
dec
push
or
sti
xchg
dec
mov
inc
add
aam
or
sub
sbb
rolb
mov
fimuls
and
push
push
inc
into
pop
fstpl
mov
xchg
dec
icebp
lret
arpl
clc
int
push
sahf
cmp
xchg
add
xor
xor
mov
adc
scas
enter
xchg
pop
add
jns
mov
mov
cmp
push
cmp
and
or
loope
js
dec
lcall
mov
rolb
cmpsb
pop
into
or
xchg
fisttps
rcrl
mov
mov
and
push
xor
testb
test
movl
mov
jmp
insl
jb
mov
pop
pop
pop
jae
int
outsl
insl
or
into
pop
scas
jnp
xchg
jp
cld
outsb
iret
jp
mov
lea
push
aad
rcrb
repz
shl
aad
fwait
daa
into
repz
push
ljmp
push
stc
adc
hlt
outsl
pop
lods
dec
data16
sub
in
lahf
push
fistl
jns
push
mov
mov
mov
adc
mov
in
cmp
imul
ja
mov
pop
aad
mov
js
aaa
dec
inc
cs
xlat
in
movsb
ss
das
lret
cmp
int3
pop
jecxz
sti
cmpb
jge
into
add
stos
jecxz
xor
cmp
jmp
je
xchg
shlb
call
add
xor
cld
sub
sbb
pusha
test
cmpsl
xlat
js
nop
push
popf
int3
outsl
loope
cmp
mov
outsb
push
push
das
rcrb
mov
das
mov
ljmp
cwtl
pop
mov
jno
xchg
test
jg
data16
int3
or
sahf
add
xchg
dec
pop
testl
mov
or
inc
push
inc
sbb
pop
pop
xchg
shrd
jecxz
aam
ficoms
push
scas
pop
add
xor
ja
jno
xor
cltd
aas
mov
mull
es
sbb
sbb
bound
push
xchg
ret
bnd
das
test
mov
jb
mov
jp
jno
cwtl
not
daa
mov
jae
pop
dec
push
lret
shrb
cmp
dec
cmp
loop
cmpl
mov
loope
shll
sahf
cmp
inc
mov
cwtl
jno
testl
and
sahf
xor
xlat
icebp
and
jnp
lahf
xchg
cmp
xor
mov
in
fxch
pushf
insb
adc
and
in
xchg
orl
and
pop
xchg
aad
cmp
xorl
inc
or
jne
sti
cmp
ds
jne
xlat
sbb
lods
adcb
add
pop
and
push
outsb
mov
movsl
lods
retw
pop
test
enter
std
imul
cmpsl
mov
arpl
shl
scas
push
icebp
rclb
jo
lock
cmp
cmp
inc
or
in
push
sbb
sub
sarl
or
sbb
pop
sbb
jmp
and
inc
dec
shlb
jns
int
push
mov
add
adc
mov
mov
nop
clc
je
dec
arpl
add
in
mov
fs
xchg
pop
cwtl
fstpt
scas
stc
aaa
mov
dec
jns
fsts
test
dec
imul
pextrw
inc
popaw
insl
rorb
movsl
jl
mov
sub
int3
dec
ds
adc
cmp
hlt
icebp
pop
aad
sahf
imul
mov
scas
shlb
mov
push
pop
inc
mov
jle
out
mov
sub
lea
pop
jmp
xchg
pop
mov
cli
adc
sub
mov
das
ret
sub
dec
sub
movsb
inc
cmc
iret
xchg
lret
loope
rcrb
andb
add
mov
mov
cmp
sbb
ror
push
lods
jbe
ret
imul
mov
fwait
cwtl
mov
jmp
inc
adc
movsb
icebp
call
and
and
enter
aaa
mov
pop
call
add
adc
pop
dec
lods
lret
test
js
hlt
jmp
fs
pop
xchg
adc
fnsave
icebp
sub
cwtd
rorl
rolb
xchg
out
mov
xor
mov
sub
mov
dec
repz
insl
inc
sub
mov
sbb
bound
popf
movsb
pushf
cmp
xor
inc
pushf
add
js
xchg
pop
stos
inc
mov
jbe
orl
mov
mov
jmp
mov
rorb
inc
lret
add
xchg
ficoml
mov
adc
test
inc
mov
out
in
sub
jnp
cld
jb
mov
ffree
rcl
nop
addr16
sub
rorl
pop
orb
cmp
push
jecxz
inc
sti
add
clc
mov
mov
call
insb
mov
into
cmp
movsb
inc
pop
int
hlt
ret
ret
inc
faddl
mov
movsl
dec
das
xor
popa
roll
bound
cmp
jnp
xorl
push
cli
push
stos
sub
jmp
cli
arpl
les
jns
mov
lret
sarb
dec
xor
inc
or
pop
push
shr
dec
sahf
int
ljmp
in
and
les
sub
add
sub
mov
xchg
sti
mov
lds
push
sbb
jecxz
nop
dec
xchg
xor
mov
popa
inc
lea
js
iret
imull
ret
in
xchg
mov
das
ds
punpcklwd
xor
sarb
mov
adc
cwtl
and
and
xchg
in
lcall
or
pop
pop
lods
loopne
push
lahf
cmp
ljmp
ds
mov
es
mov
or
outsb
hlt
push
pop
gs
div
and
gs
aam
cmp
pop
lret
cmp
cmp
fistl
sub
mov
xchg
subb
mov
mov
std
iret
leave
mov
lds
or
mov
sub
in
in
outsl
fsubs
ljmp
and
ror
pop
testb
iret
push
sahf
or
out
daa
movsb
dec
repnz
jecxz
data16
mov
test
fsts
push
pop
dec
push
bound
js
mov
cmpsl
aad
addr16
iret
mov
pushf
mov
inc
mov
dec
xchg
jns
jmp
inc
movsl
fistl
in
xchg
xchg
sbb
jno
cmpsl
xchg
loop
mov
add
loope
mov
cli
inc
mov
clc
add
aam
push
mov
insb
repz
loope
add
cmp
popa
sub
mov
hlt
sti
addr16
cmpsb
repz
push
cltd
mov
cli
das
mov
aam
dec
std
push
xchg
rolb
pop
jb
ret
insb
ficoms
mov
mov
and
push
sub
arpl
sbb
sbb
cwtl
fsubl
adcb
xor
and
sbb
sub
cli
cmp
ss
insl
data16
rcrb
orl
rcrb
cwtl
jbe
out
mov
xchg
push
and
or
std
push
cli
stc
outsl
ljmp
test
icebp
add
xor
add
dec
add
sbb
adc
pushf
mov
stos
add
mov
jp
lret
mov
sbb
out
push
sub
adcl
mov
or
loop
mov
mov
mov
ds
out
inc
pop
insl
fsubs
push
xor
add
pop
pusha
loopne
pop
lret
sub
pop
cmpsb
push
scas
sub
inc
scas
jecxz
and
jne
mov
cld
jne
mov
inc
dec
cs
adc
sahf
add
pop
push
mov
xor
or
mov
lods
or
inc
mov
cmpsl
popf
pop
dec
sbb
push
inc
fs
sbb
push
mov
add
push
movsb
inc
shl
push
nop
js
imul
xchg
icebp
and
rorl
icebp
lods
ss
addr16
sub
call
push
idivb
mov
cmp
pusha
jle
ljmp
pop
xchg
dec
mov
push
repz
adc
sbb
fstps
mov
inc
lret
ret
bound
or
mov
mov
shrl
sti
ret
leave
push
cmp
pop
sarl
cmc
xlat
call
add
add
negl
xor
and
sahf
imul
lret
fnstcw
sbb
int
shll
ljmp
jne
cmp
stos
dec
pop
aad
xchg
dec
xchg
sahf
addr16
cs
add
sbb
inc
sub
pushf
xor
jl,pn
mov
add
pop
fisubrs
mov
push
xchg
push
mov
xchg
inc
daa
or
jecxz
adc
test
push
gs
pop
xchg
je
push
sub
inc
insb
lods
jl
lds
lea
jne
add
jne
lock
push
jmp
aas
mov
xchg
repnz
addb
imul
jns
shll
arpl
or
decl
and
xchg
clc
arpl
ret
negl
cmpsl
mov
or
push
sti
clc
mov
mov
cmp
cmp
in
xchg
adc
gs
ret
movsl
aam
jno
mov
xchg
jb
es
jecxz
push
dec
cmp
sub
mov
pop
insb
or
cmp
rorl
test
loopne
lock
and
outsb
in
fs
lds
push
mov
push
aad
adc
mov
and
fimuls
out
sub
popf
cs
push
push
mov
mov
bound
test
aaa
sbbl
pop
mov
lcall
sar
adc
or
rcl
sti
push
rorl
dec
hlt
and
cs
mov
cwtl
pop
fcmovbe
rorl
jbe
mov
mov
lea
fdivrs
outsl
sbb
and
mov
out
mov
call
in
xchg
stos
pop
xlat
pop
mov
int
dec
bound
aam
mov
repz
pop
mov
pop
js
movsl
mov
outsb
sbb
ret
cmpsb
mov
aas
pushf
lea
test
std
sar
inc
cmp
jnp
sub
jg,pn
push
dec
or
pop
movl
scas
mov
js
push
shlw
mov
hlt
stc
icebp
or
adc
imul
mov
push
pop
inc
movsl
fwait
movsb
jl
cmpsb
ret
imul
or
mov
mov
aam
gs
stos
cmp
push
aam
inc
popa
bound
pop
dec
mov
out
shll
imul
pop
dec
jge
push
cmp
lock
or
jl
insb
arpl
ds
imul
loope
out
mov
and
pop
test
nop
mov
gs
cmp
lahf
hlt
add
adc
in
push
stc
ret
aas
cmp
lcall
mov
and
push
mov
es
mov
and
lds
cmpb
stc
cmpsl
mov
lcall
into
or
pop
into
jno
and
lds
movsb
jl
sbb
lds
sub
mul
out
dec
loope
push
int
fxch
xor
js
outsb
out
mov
jns
movsb
or
add
bound
inc
les
movsb
sub
rcr
sbb
and
xor
aas
cmc
negb
inc
jl
push
and
movsb
je
or
hlt
leave
xchg
mov
xchg
dec
es
xor
mov
push
dec
data16
lcall
push
and
or
sbb
adc
ja
lcall
sbb
xchg
daa
mov
aam
ret
bound
aas
cmp
loopne
mov
aaa
hlt
and
outsl
pop
dec
aad
jmp
mov
popa
xor
sbb
pop
push
sub
sbb
loop
jmp
inc
xacquire
hlt
mov
pop
jl
add
rorl
sub
inc
xchg
pop
addr16
inc
ficoml
in
cmp
fs
mov
mov
inc
push
mov
into
adc
add
repz
mov
clc
jns
push
inc
adc
popf
pop
lret
and
rcr
sti
sub
in
or
test
outsl
sub
dec
idivl
cltd
push
xchg
popf
scas
rcll
cmp
xchg
sub
mov
fistpll
imul
test
gs
push
sub
test
xlat
ss
mov
or
mov
sbb
fstps
mov
roll
enter
push
ja
pop
aam
stos
jmp
bound
mov
out
mov
lret
adc
pop
mov
sbb
mov
lods
xchg
dec
repnz
mov
push
fs
jmp
push
xor
pop
enter
sbb
sub
sub
mov
out
sbb
xor
jg
dec
mov
xchg
dec
mov
scas
sub
lods
xor
jmp
mov
or
movsl
stc
mov
dec
dec
or
stos
sub
testl
and
fmul
int
xlat
fwait
loopne
into
inc
or
fidivs
pop
mov
mov
int3
and
mov
fmuls
jg
adc
in
adc
sub
fcmove
sub
cld
dec
ljmp
in
sti
ss
gs
mov
dec
data16
jne
icebp
shlb
or
repnz
xchg
mov
sti
inc
jle
stc
push
aas
mov
jmp
xor
in
add
mov
and
jae
sbbb
xchg
cmp
cmp
js
aaa
je
fwait
pushf
xlat
or
mov
xchg
jmp
xor
cmp
and
add
in
adc
fcompl
aam
mov
lea
pop
aad
push
loope
fisttpll
adc
pusha
jnp
jns
dec
popf
add
xor
cmpsl
cltd
outsb
lret
mov
push
cwtl
js
mov
in
pop
pop
jnp
aaa
mov
iret
aad
fcmovne
pop
push
rcrl
push
loop
das
push
in
push
and
pop
or
les
cmpsl
mov
lods
lock
xor
pop
imul
fsts
jle
test
jbe
jle
or
sub
dec
dec
dec
jne
out
adc
sbb
fcompp
sbb
pop
popf
ret
mov
call
lods
rorl
negb
xchg
mov
mov
mov
outsb
push
out
out
orl
icebp
dec
cltd
mov
and
xor
mov
push
mov
repz
sub
cli
dec
xchg
add
mov
popf
shrl
inc
mov
aas
sbb
sub
es
and
mov
mov
daa
add
push
cmp
add
xlat
sub
pop
out
or
cmp
scas
pop
aas
leave
enter
and
lahf
jge
loop
add
jnp
and
gs
fsubl
sahf
mov
popf
pop
repz
push
dec
out
insl
push
test
add
adc
cmp
rorl
loope
push
add
inc
push
pop
les
repz
movl
xor
pushf
aam
dec
xchg
xor
inc
cmpsl
cmpsb
sahf
jg
test
out
dec
jle
fs
sub
lock
mov
stos
inc
push
cmp
cmpsl
inc
movsb
in
dec
movsb
cmpsb
hlt
aaa
dec
in
push
pop
mov
adc
fstl
adc
cmpsl
mov
pop
xlat
cmp
sub
xchg
pop
and
fdivrl
js
lods
mov
jge
movsl
add
and
sarb
stc
push
jnp
leave
rorb
add
mov
jp
jmp
push
pop
xorl
popa
and
rorl
pop
iret
aas
mov
pusha
lea
jmp
adc
out
test
mov
rclb
xor
fs
dec
sub
jno
bound
or
pop
outsb
jg
int3
push
arpl
negl
inc
out
inc
xchg
sub
lea
jae
outsb
repnz
ss
sbb
push
and
scas
sbb
push
dec
imul
out
fimull
jnp
adc
push
push
push
xor
push
out
jne
push
jp
mov
mov
mov
into
lret
decb
mov
push
inc
bound
das
push
or
lods
or
inc
and
lcall
in
lret
sbb
sub
inc
jecxz
mov
lods
sbb
xchg
jae
cmp
xor
mov
lahf
pop
or
outsl
adc
jbe
lock
pop
pop
jnp
out
fstpt
pop
ret
mov
mov
push
push
aaa
cltd
pop
fwait
in
xor
pushf
lcall
out
pop
xchg
jnp
sbb
sbb
xor
in
xchg
or
lock
push
mov
jb
xor
fstl
movsb
mov
faddl
sub
les
mov
mov
xchg
dec
mov
push
pop
inc
shrb
enter
or
pop
mov
sbb
cltd
mov
sub
les
cwtl
test
dec
outsl
xor
cmc
int
inc
call
lahf
shll
fstpt
int
inc
mov
test
jne
add
mov
cmpl
pop
xchg
push
adc
inc
in
cmp
adc
pop
push
xchg
daa
xchg
stos
cmpsl
mov
cmpsl
sbb
adc
pop
fs
jns
xchg
arpl
clc
pop
sbb
iret
icebp
aam
push
sbb
rorl
mov
outsl
adc
std
push
int3
outsb
inc
push
rcll
xor
xchg
xor
iret
xchg
in
bound
cs
mov
jmp
mov
add
mov
mov
sub
cmp
xor
lret
mov
nop
mov
clc
or
pop
or
rcrb
int3
ja
mov
mov
cmp
in
nop
mov
mov
add
sar
pop
dec
push
pop
push
dec
jns
pop
inc
es
daa
push
mov
in
sbb
pushf
icebp
adc
enter
and
cmc
dec
mov
push
popf
rorb
pop
mov
ss
arpl
sbb
incb
test
or
xchg
add
xor
popf
fs
das
cmpsb
xor
cmc
mov
ljmp
stos
jb
mov
cmp
cmp
lcall
xlat
pop
das
fwait
adc
cwtl
or
movsb
fs
sahf
add
aaa
and
sub
inc
push
mov
in
or
sbb
pop
stos
push
rcr
mov
je
gs
mov
rcrb
mov
repz
hlt
ret
imul
mov
mov
icebp
add
jp
sub
hlt
mov
xchg
jp
lret
lret
ss
push
mov
jle
repnz
cmpsl
or
fimull
mov
aad
fwait
sbb
jns
aad
mov
imul
jnp
mov
sub
or
pop
inc
sbb
movl
push
mov
mov
nop
mov
xchg
ljmp
loopne
jmp
loop
xchg
cli
movsb
mov
pop
sti
jl
or
imul
cmc
add
std
adc
fwait
popl
bnd
xchg
imul
lock
lret
ror
jmp
mov
fcomps
mov
leave
dec
xor
out
push
sub
dec
insl
clc
lods
lea
lods
dec
jg
mov
shl
test
test
mov
or
mov
pop
ret
movups
xlat
and
scas
les
out
push
sbb
sub
push
in
loop
ja
xor
cmp
fidivrs
aaa
rclb
sbb
stc
test
fwait
negb
pushf
adc
nop
or
aas
ljmp
insb
cmp
xchg
test
and
in
mov
or
dec
jl
sar
rorl
movsb
sbb
cmpsb
dec
xchg
or
add
cmp
sub
lods
das
andb
dec
inc
xorb
nop
popf
and
mov
xor
pop
scas
scas
ja
push
xchg
and
jb
lock
adc
add
mov
lods
xor
mov
stos
jb
mov
jo
ficoml
xchg
fmul
aam
xchg
lret
test
es
out
test
lods
sbb
insb
aam
out
jle
cmp
inc
cmc
cmp
pop
adc
rorl
cmp
mov
jmp
insb
xchg
sbb
add
pop
out
and
xor
push
pop
mov
adc
dec
mov
movsb
adc
js
cmpsl
lds
pop
ljmp
mov
mov
das
cmpsl
adc
das
cltd
dec
inc
mov
cmc
fidivrl
loop
fistl
out
mov
lret
add
dec
push
mov
imul
hlt
pusha
clc
aaa
jnp
or
mov
inc
pop
mov
pop
ljmp
cld
sbb
pxor
imul
call
mov
into
adc
sub
or
stc
cwtl
or
or
sbb
aad
repnz
addr16
in
jl
rcrl
out
or
xchg
dec
in
push
and
pop
cmp
arpl
jae
sbb
pushf
jecxz
xchg
in
mov
and
inc
or
mov
sub
icebp
xchg
sbb
add
pop
stos
lds
aas
testl
push
and
sbb
fidivrl
mov
fimull
jecxz
hlt
rolb
inc
imul
test
xor
enter
add
sbb
sub
cli
cld
jae
push
repz
bound
outsl
lods
shl
test
cld
push
push
add
in
clc
xor
sbb
xchg
mull
dec
into
mov
mov
pop
addr16
fsts
push
test
mov
mov
or
inc
xor
fildl
or
dec
out
scas
test
cmp
ret
mov
adc
cwtl
loopne
or
jmp
adc
dec
or
popa
pusha
int3
xor
pushf
xlat
and
stos
push
push
js
push
cmp
add
fsubrl
adc
data16
mov
ret
rcrl
movsb
push
in
rcrl
pop
mov
cmp
inc
popa
imul
daa
pop
dec
ds
rol
cli
mov
out
cmp
sub
lahf
lret
aaa
das
jbe
and
mov
je
cltd
nop
mov
xchg
aad
inc
pop
xor
mov
stos
mov
push
dec
punpckhbw
sub
jnp
sbb
jb
xlat
sub
push
leave
pop
dec
ret
out
in
loopne
not
cld
pop
out
mov
add
movsb
insl
sub
xor
popf
push
jne
sbb
lea
lods
sti
push
das
pop
mov
repnz
popa
pop
inc
std
jge
lret
fldl
sbb
shrl
jg
stc
mov
mov
lret
add
std
mov
nop
inc
jbe
push
cmp
pop
mov
jnp
pop
xchg
pop
adc
pushf
mov
nop
jg
sbb
lods
push
jb
mov
loope
lret
js
adc
int3
sub
inc
hlt
sub
push
gs
mov
sbb
cli
cmp
and
popa
jo
dec
dec
sahf
adc
mov
or
mov
push
cld
mov
cltd
xor
jle
xchg
out
nop
cmpsl
mov
imul
pop
sub
ljmp
and
dec
icebp
xor
push
add
xlat
pop
xor
rolb
loopne
aam
std
lcall
stos
movsl
sbb
push
movsb
xor
lds
popf
push
pop
pop
inc
adcb
cltd
jge
mov
inc
test
outsl
stos
fsubrl
mov
pop
inc
nop
cmp
sbb
inc
pop
mov
or
pop
test
or
jl
fucomip
or
push
cmp
lods
insl
cmpsb
add
ja
cmc
sarb
cmpsl
sbb
jmp
loop
lds
mov
bound
leave
mov
xor
mov
fcmovnbe
stc
movsl
dec
mov
dec
jnp
sti
pusha
push
jae
test
lret
push
xor
imul
jecxz
push
ss
pop
shl
push
cmpsb
or
in
push
fnstcw
mov
call
sbb
sub
jbe
or
jns
push
mov
roll
push
add
les
dec
push
pop
insl
imul
daa
loop
ja
cmp
adc
mov
jns
mov
jnp
mov
imul
adcb
fsubl
icebp
sbb
mov
fcompl
out
lahf
sub
ret
sub
test
cmp
cmpsb
call
into
pop
out
xor
scas
adc
adc
pop
iret
jns
xchg
sub
xchg
jl
cmpsb
xchg
inc
mov
inc
in
lea
loope
and
jmp
mov
fstps
mov
inc
cmp
fwait
pushf
in
or
repnz
add
jae
push
fstl
xor
add
inc
call
repz
jp
fidivs
loopne
je,pn
outsl
mov
out
in
sub
int
ror
and
cmc
lea
jnp
cld
loope
mov
fcmovne
jmp
lcall
aaa
jmp
cmp
mov
lret
sbb
mov
loopne
sahf
cld
mov
mov
cmp
jnp
mov
cmp
movsl
xor
js
sub
imulb
push
insl
aas
rcrl
popa
cmp
test
lahf
lods
in
jno
addl
push
mov
and
sbb
adc
or
jo
push
or
jmp
push
pop
std
fsts
sbb
xchg
mov
std
xor
or
repz
mov
push
ss
inc
xor
sbb
xchg
stos
scas
mov
mov
dec
xor
xchg
mov
mov
inc
ret
imul
lret
xchg
add
hlt
in
fildl
push
ror
push
test
pop
push
enter
out
or
hlt
and
sar
fsubrs
iret
jnp
xor
mov
inc
add
xchg
ljmp
outsb
mov
decl
inc
push
repnz
dec
push
mov
int
sti
stos
movsl
push
lret
seta
in
mov
add
push
pop
push
push
and
jmp
iret
xchg
fwait
dec
in
insl
popa
scas
fwait
ljmp
push
addr16
ss
aas
dec
sti
iret
lods
add
mov
movsb
mov
loop
arpl
jp
jecxz
inc
test
sbb
ljmp
xor
sarl
xor
adc
xor
mov
xor
out
sbb
pop
int
mov
mov
sub
cwtl
fstpl
dec
je
jns
or
iret
lret
dec
push
jmp
orps
das
dec
movsl
inc
movsb
or
and
stos
dec
dec
call
out
jmp
in
cmc
adc
fwait
outsl
mov
addl
je
test
jl
add
push
cs
ret
dec
add
lods
add
mov
je
pop
jb
cmp
push
mov
sub
xchg
cld
test
dec
cwtl
faddp
ret
into
xchg
es
roll
push
push
dec
mov
sbb
mov
call
inc
sbb
or
mov
loopne
jo
cmp
scas
imul
pop
xor
repz
out
inc
aas
sti
test
pop
adc
mov
std
stos
data16
xor
mov
pop
addr16
push
inc
add
das
mov
sub
dec
sbb
popf
jmp
mov
mov
dec
loope
xchg
fsubrs
dec
dec
mov
ljmp
or
sbb
aam
call
stos
cwtl
repnz
mov
shrl
mov
lahf
mov
add
sub
icebp
sub
stc
fdivl
push
lods
sbb
gs
push
addl
fildll
xchg
aam
pop
mov
add
adcl
addb
cld
jl
cmp
loope
sbb
pop
fsubs
pop
inc
pop
sbb
mov
push
out
sbb
pop
mov
sub
and
inc
repz
sub
xor
pop
or
xchg
fcmovb
sub
in
xchg
int
lock
dec
xor
scas
xchg
and
sahf
cmc
pop
fcmovu
call
addl
and
inc
movsb
test
adc
or
popf
addr16
xor
add
push
leave
andl
and
sub
in
dec
mov
imul
lods
lods
shr
out
cld
mov
xchg
push
in
pop
rorb
fimull
inc
mov
mov
push
mov
add
ret
push
lahf
popa
lea
xchg
mov
xchg
mov
fisubrs
enter
pop
cmp
pop
pop
jl
into
lea
push
dec
mov
sub
pop
sbb
inc
pushf
outsb
sub
mov
or
xchg
in
pop
mov
xor
icebp
sub
cmp
jb
cmpsl
outsl
not
sbbl
iret
fs
sarb
fcomip
test
inc
push
pop
sahf
dec
mov
sti
mov
add
mov
test
lods
divb
lret
dec
add
jg
mov
lcall
mov
bound
nop
outsl
aad
cmp
fildll
out
mov
pop
or
sbb
cmp
lret
dec
inc
or
add
daa
add
pusha
push
addb
xchg
xlat
test
sbb
push
call
cld
movsb
rcll
aaa
pop
add
roll
mov
cmp
imul
pushf
fsubrs
test
adc
or
jo
add
mov
icebp
and
dec
push
stos
or
inc
cltd
roll
sbb
dec
push
adc
stos
imul
lock
adc
roll
pop
cmpsb
cli
mov
sbbl
pop
ret
xor
ret
and
pushf
mov
ljmp
sub
mov
pop
scas
lcall
ret
shlb
dec
mov
inc
adc
shlb
pop
fs
jnp
movsb
adc
jecxz
repz
popf
dec
push
sarl
mov
les
adc
mov
jne
out
jo
inc
call
push
or
mov
adc
xchg
aaa
shrl
rcrl
inc
roll
cs
arpl
imul
movsl
jne
loopne
adc
test
lods
jg
mov
movsl
hlt
enter
test
mov
lcall
dec
outsl
mov
adc
mov
jmp
imul
dec
mov
xchg
pop
pop
adc
pop
call
out
mov
inc
fbld
lret
push
into
iret
push
sbb
out
mov
xor
into
lret
mov
dec
adc
ret
in
ds
insl
cmp
sub
fcmovnb
jb
xchg
sbb
loop
add
sbb
push
pop
lahf
sti
fwait
and
outsb
add
push
mov
mov
push
mov
mov
in
adc
add
mov
popf
adc
sub
sub
mov
lret
xchg
hlt
in
xchg
and
mov
push
or
fstpl
repz
hlt
into
lods
out
lock
insl
test
pop
mov
imul
add
pop
in
mov
add
jnp
xorl
dec
dec
sub
fnstcw
mov
dec
rorb
mov
mov
sub
sub
sbb
pushf
mov
outsb
movb
inc
mov
subl
lret
shll
mov
sbb
ljmp
mov
inc
dec
adc
xchg
pop
cmpsb
adc
cmp
adc
outsl
mov
sub
ds
or
pop
das
jb
cmp
sarb
aas
call
xor
stos
ljmp
sub
inc
adc
pop
cmp
fildl
bound
cmp
mov
add
aas
out
cmpsl
push
mov
nop
pop
mov
insl
sahf
das
stos
or
mov
inc
data16
mov
stc
loopne
dec
jno
bound
ljmp
in
les
std
test
pop
mov
xchg
push
into
je
xchg
cmp
fsqrt
jbe
lock
iret
mov
lea
dec
or
std
nop
iret
fadds
outsb
and
mov
mov
aad
sbb
mov
stc
mov
jno
adc
loop
lahf
ret
dec
aas
push
ret
and
and
nop
outsb
mov
mov
xchg
sbb
xlat
repnz
lret
sub
pop
test
call
jb
int3
jno
add
cmp
xchg
lret
repnz
jge
les
xchg
lret
idiv
add
or
outsl
and
mov
cmp
rcl
xor
cwtl
fnstsw
jne
jmp
inc
jne
mov
cmc
mov
rcrb
lock
cmp
pushf
cmp
jbe
scas
pop
mov
or
pop
inc
je
lea
inc
lds
mov
cmp
xor
inc
shrb
jge
xor
loopne
out
xchg
xor
aad
and
xchg
ds
cmp
sub
ss
imul
push
xor
mov
xchg
mov
xor
lcall
xor
and
fldcw
xor
call
ds
sbb
xchg
sahf
out
mov
stc
ret
in
stc
js
adc
adc
pop
insb
into
inc
and
xchg
mov
sub
cmp
scas
sbb
jae
std
jg
sbb
fildl
dec
jmp
rcll
xchg
fiadds
aam
jne
dec
mov
mov
or
push
addr16
xchg
outsb
mov
inc
xor
xor
jno
cmp
adc
movaps
mov
insb
mov
push
push
ds
xchg
daa
mov
mov
jmp
dec
not
push
fnstsw
xchg
push
cmp
clc
sub
in
pop
jl
mov
lock
sub
cli
dec
out
push
xor
mov
aam
adc
adc
push
or
pusha
inc
mov
add
jmp
addr16
push
cmpsb
mov
je
mov
mov
jge
add
cmp
imull
popf
lahf
or
push
jl
cltd
mov
mov
cmp
fmull
push
mov
sti
stos
mov
jae
inc
adc
mov
repz
arpl
cmp
shr
enter
out
mov
and
mov
dec
call
insb
xchg
adc
add
mov
out
dec
out
xor
cltd
inc
fstpl
jp
dec
movsb
gs
cmp
cmp
jl
loopne
jbe
jg
pop
xchg
pop
add
ret
jb
sbb
push
loop
xor
mov
cmp
jno
dec
sbbl
adc
mov
jmp
pop
push
movsl
push
push
sub
mov
ljmp
inc
and
push
lods
lret
test
mov
pop
or
fidivrs
lcall
std
cmpsl
inc
ret
sbbb
mov
stos
cmp
mov
push
cmc
add
xchg
into
jne
cmp
push
js
cld
inc
out
cmp
cli
mov
cmp
hlt
jb
aam
cmp
add
es
cmp
mov
pushf
es
lahf
inc
pop
ror
and
jmp
sbbl
mov
fwait
xor
enter
xor
push
outsl
or
aas
add
mov
cmp
std
sbb
ljmp
xchg
pop
sbbl
cltd
pop
scas
lods
jbe
rol
test
outsl
cmc
sarl
out
mov
jb
stc
imul
scas
cltd
sti
xchg
mov
dec
adc
ljmp
inc
imul
push
es
adc
push
scas
and
addb
fs
fsubs
mov
xor
xlat
xchg
mov
inc
mov
sub
sub
subl
loope
inc
push
mov
pop
pop
cmp
xlat
mov
test
lcall
add
inc
dec
das
cmp
inc
jo
dec
sub
and
into
push
lret
sbb
movsb
push
shl
fcomps
dec
arpl
inc
mov
loop
cld
fistps
cmpsb
mov
push
rolb
inc
data16
push
enter
xlat
add
push
loope
mov
inc
push
or
cmpsb
push
insb
pop
mov
add
fs
in
add
xchg
xchg
push
xor
stos
shlb
call
xchg
outsb
jl
mov
icebp
pop
and
lahf
sbb
mov
cmp
jns
imul
mov
lret
fucomip
pop
lock
xor
rorl
lret
adc
adc
loope
and
inc
mov
lds
stos
pop
push
addr16
es
push
iret
push
jnp
ror
lcall
xor
inc
and
sti
inc
int
mov
sahf
sub
jae
sbb
mov
xor
out
dec
add
subb
jl
cmp
fcmovu
adc
scas
addb
pop
lock
cmp
adc
xor
sti
clc
pop
out
push
mov
scas
ljmp
mov
loopne
cmp
call
std
adc
jb
mov
sti
sub
inc
cmp
in
push
out
jl
lcall
inc
lret
dec
dec
sub
add
add
push
les
in
pop
push
xchg
cmpsl
push
scas
lahf
fstl
test
sbb
adc
xor
fstpl
adc
lahf
cwtl
fs
pcmpeqw
inc
push
push
fisubl
adc
movsb
ret
add
xchg
mov
jnp
dec
je
repz
daa
push
in
roll
ss
inc
pop
dec
adc
into
sbb
shrl
add
pop
jno
mov
pop
mov
in
and
xor
stos
xor
fists
in
push
add
ljmp
in
arpl
mov
test
jmp
out
sub
xchg
mull
mov
sub
sar
inc
fsubrl
sbb
adc
push
gs
imul
cmpsb
gs
xor
insl
lds
or
pop
pop
sub
mov
repz
insl
popf
fcomps
dec
iret
cli
out
mov
fistpl
or
mov
test
inc
dec
mov
push
mov
movl
stc
les
jnp
movsl
decb
pop
inc
psrad
rolb
outsb
sahf
and
xlat
es
cmp
or
adc
lcall
mov
push
xor
in
insb
lcall
nop
loope
cmp
aaa
adc
int
ljmp
dec
ret
mov
out
lahf
into
test
adc
stos
mov
lods
pop
pop
inc
ds
mov
or
lret
push
arpl
sub
enter
cwtl
loop
pop
mov
sbb
cmpsb
test
sub
mov
stc
or
addr16
lahf
test
test
outsl
scas
scas
mov
jns
fstpl
adc
push
stos
sub
add
pusha
sbb
aaa
push
mov
cmp
sarl
ss
sub
pop
cltd
out
mov
pop
mul
iret
jns
jmp
fs
sti
cltd
movsl
mov
xchg
notl
and
popf
ja
insl
sub
dec
pop
and
test
lret
cld
jo
repz
xlat
inc
adc
xchg
xchg
icebp
nop
aam
xor
push
mov
lods
sahf
fidivrs
add
pop
pop
je
pop
pop
jl
test
repnz
icebp
lds
movsb
inc
ret
cmp
jnp
sbb
push
mov
fwait
sarb
lods
pop
jne
mov
mov
ds
jo
pop
ret
xor
pop
and
jmp
test
cmp
sub
shll
add
jp
cmpsb
push
call
cs
outsb
in
cmp
std
mov
fs
pop
xor
repnz
test
aas
fcoml
cmc
bound
enter
lods
mull
and
add
push
sbb
cmp
push
scas
mov
cmp
lods
mov
mov
mov
dec
adc
sahf
pop
mov
shlb
push
shll
push
xchg
push
cmp
arpl
ficomps
out
in
cmc
and
and
xchg
or
xor
cmp
in
and
lret
mov
mov
nop
and
jmp
and
out
mov
out
pop
push
out
and
mov
adc
sub
mov
mov
or
leave
stc
and
xchg
jb
lds
inc
sar
cmpsl
ret
push
adc
jmp
in
inc
fcompl
call
into
mov
shlb
testl
test
pop
push
jne
out
mov
push
les
int
loopne
test
cltd
clc
and
cmp
xchg
ficoms
xor
ficompl
jmp
mov
lods
jbe
outsb
enter
out
and
aaa
enter
stos
adc
push
mov
test
dec
clc
jno
mov
out
pop
lahf
pushf
sub
xchg
mov
cmp
dec
cld
dec
sti
and
jnp
add
xchg
mov
xor
push
stc
mov
out
fmull
push
inc
sar
stos
or
cli
shrl
pop
push
add
outsb
outsl
int
mov
or
ror
push
inc
jecxz
js
ss
aad
mov
pop
lahf
lcall
mov
lret
fidivs
fstl
clc
lcall
mov
mov
out
lock
or
and
mov
or
xchg
clc
jge
push
icebp
jp
ja
jmp
cmp
mov
or
scas
enter
popa
cmpsb
add
cltd
inc
sbb
out
xorb
mov
push
std
movsb
je
mov
cli
jmp
lock
xchg
shrl
add
lods
xor
cmp
movsb
jecxz
call
in
cmp
mov
mov
inc
loop
cmpsl
push
xchg
rcll
in
in
cs
mov
xor
inc
imul
push
std
jno
notb
fwait
jp
out
or
pop
pushf
sarl
cmp
jge
stos
pop
jmp
and
in
insl
ljmp
adc
cltd
xor
in
xor
jb
jae
and
ret
out
shrb
gs
inc
test
pop
mov
cmc
rcl
add
negl
bswap
loopne
wbinvd
pop
lods
call
pop
in
imul
lds
scas
xchg
cmpsb
sbb
aas
ljmp
mov
xor
xor
or
int3
into
popf
jne
push
daa
pop
testb
xchg
mov
or
dec
fdiv
push
inc
sbb
and
test
mov
jmp
and
pop
scas
cmp
mov
add
inc
divb
cli
aaa
out
jmp
add
lahf
push
and
mov
cwtl
xorl
mov
ds
jno
mov
movsb
cmp
jbe
stc
inc
aad
outsb
and
lar
xchg
roll
xchg
cmp
out
inc
daa
push
cmp
popa
inc
xchg
js
into
jns
ja
daa
jb
fmull
or
sub
lock
cmpsb
push
jmp
push
movb
shr
xor
test
fistpl
mov
mov
cmc
ljmp
cs
repnz
cmc
mov
push
cwtl
adc
fsubr
pop
bound
and
movsl
sbb
inc
add
adc
cmpsb
pop
in
add
out
push
sbb
out
aam
insl
mov
cmc
xor
push
xchg
xchg
call
lock
xchg
xchg
movsl
add
les
cmp
jl
dec
jb
or
push
daa
inc
jmpw
push
out
adcb
jge
in
add
sbb
mov
xchg
daa
or
pop
push
inc
xchg
mov
xor
loope
mov
pop
outsl
out
adc
pop
mov
icebp
mov
lcall
mov
jg
negb
or
mov
pop
data16
push
fstpt
std
jmp
sbb
pop
cmp
or
and
rclb
xchg
sub
dec
xorl
pushf
xchg
gs
jge
pop
lret
push
lahf
inc
pop
xchg
aam
addr16
lock
sbb
mov
mov
push
jns
arpl
cmpsb
adc
mov
mov
dec
cli
and
mov
add
lret
inc
pusha
pop
repz
loop
pop
es
add
js
add
and
cmp
add
je
or
loop
nop
push
fs
inc
popf
push
pushf
cltd
les
test
xor
jle
mov
cwtl
push
pusha
dec
aad
popf
push
cmp
in
xlat
mov
scas
pop
xor
jae
jne
adc
mov
call
push
cwtl
in
inc
xchg
into
aad
popa
sbb
adc
inc
mov
xor
push
ja
push
movsl
xchg
imul
leave
cs
das
xor
push
inc
mov
push
outsl
dec
add
outsb
fistpll
mov
sahf
imul
or
add
xchg
lahf
mov
std
cmp
sbb
xchg
dec
push
sub
das
cmp
cmp
js
add
pop
mov
andl
cld
push
notb
pop
insl
notb
sbb
pop
incb
testb
push
xchg
aad
pop
cmp
das
stc
insb
std
xor
mov
in
popf
imul
jo
and
loope
pusha
mov
testb
jne
out
les
nop
aaa
js
jmp
leave
dec
sbb
xor
dec
lock
lcall
xchg
insl
js
or
popl
dec
jle
adc
sub
out
xchg
iret
push
lock
xchg
addb
cmp
lods
xor
std
push
mov
mov
bound
icebp
push
lea
rcll
dec
lret
mov
xchg
hlt
push
and
sti
push
dec
cs
push
dec
lds
and
imul
fildll
xor
fstpl
dec
inc
push
shrb
push
sti
insl
adc
lahf
popa
cmp
insb
fnstenv
cmp
rolb
cwtl
add
xor
or
push
mov
into
in
jne
jns
adc
gs
fs
or
out
popf
xchg
mov
outsb
cmpl
in
pop
out
adc
loop
jbe
jnp
and
mov
xor
aas
or
lret
push
fsubr
cmc
and
ret
test
addr16
mov
sbb
incb
loopne
jne
pop
in
push
mov
inc
icebp
inc
xchg
lds
push
sbb
jl
lods
push
mov
stc
mov
or
or
in
sbb
cmc
lcall
mov
out
arpl
roll
pop
cmpsb
data16
mov
call
lret
ret
lea
cmpsl
mov
xchg
mov
push
ret
cmc
dec
test
outsl
insb
push
xor
ds
arpl
jnp
rorb
add
or
mov
jae
decl
add
lea
jmp
add
imul
mov
cwtl
dec
adc
pop
mov
adc
inc
mov
jne
mov
repnz
pop
imull
sub
into
pop
movb
mov
fisttpll
mov
jbe
clc
push
fnstsw
push
jg
out
mov
add
inc
sub
push
pop
dec
xchg
aas
mov
mov
loopne
xchg
fdivrp
mov
iret
push
and
cmp
push
xor
and
add
fcoml
add
in
test
add
mov
ds
xor
mov
adc
jp
clc
pop
inc
mov
dec
vmread
shlb
test
ret
add
push
sahf
les
call
leave
and
mov
lahf
dec
outsb
mov
imul
dec
adc
lods
jnp
fldcw
add
lods
add
daa
cld
xbegin
mov
mov
out
ds
push
xchg
dec
jb
adc
sbb
decb
sets
ret
ret
jle
lcall
inc
imul
adc
divb
jl
xor
sub
push
mov
insl
jle
mov
aas
mul
or
int
cmp
inc
outsl
ss
and
pop
test
scas
movsl
xchg
mov
into
pusha
sub
xchg
and
sub
sub
mov
cld
push
out
dec
std
add
mov
mov
std
pop
cmpsb
add
adc
jmp
push
in
push
shrl
les
sbb
dec
in
add
jp
mov
popf
loope
mov
sub
xor
insl
dec
cld
popa
addr16
das
test
dec
mov
mov
mov
xchg
sbb
xor
test
int
dec
push
mov
in
push
test
addb
mov
nop
popa
inc
sub
out
les
cld
out
push
loope
push
mov
mov
shl
lock
ja
pop
push
rclb
test
cmc
sbb
and
jp
les
pusha
sub
mov
sub
xchg
sbb
xor
sub
push
sbb
xchg
dec
dec
cmp
jge
cmp
jmp
stc
add
xchg
add
stos
sbb
filds
loop
inc
aaa
adc
rol
clc
hlt
xchg
loopne
ds
loopne
ja
sbb
stc
xchg
mov
frstor
or
nop
mov
adc
imul
dec
and
aam
shll
enter
dec
shlb
mov
xchg
imul
cs
sub
push
or
ror
cmp
lds
test
add
inc
hlt
mov
sti
into
rcll
popf
xor
lret
mov
inc
jg
cmp
es
mov
jp
insb
stc
inc
std
adc
jno
pop
and
aas
enter
jae
push
lahf
sub
fsub
enter
imul
push
fst
cmp
and
addl
aas
xchg
fists
mov
loopne
cmp
shrb
inc
and
ficoms
data16
xchg
out
scas
jb
jl
imul
push
sti
xchg
jae
pop
mov
push
repnz
jecxz
out
test
stc
or
xor
jp
mov
out
mov
dec
mov
hlt
xchg
push
jbe
test
test
ja
jl
lret
mov
into
and
mov
fistps
dec
inc
test
cmpsl
adc
sub
cwtl
jnp
inc
sti
js
jae
fcompl
pop
jge
ljmp
ljmp
jae
pop
loop
js
push
jne
mov
frstor
div
xchg
push
in
stos
jge
mov
push
mov
sbb
clc
mov
or
inc
push
nop
into
dec
movsl
or
movsl
mov
and
xchg
imul
daa
test
jo
pop
xor
ss
push
lea
mov
scas
inc
fldl
addb
lds
stc
outsl
sbb
bound
iret
or
mov
cwtl
sub
adc
adc
lods
mov
lock
mov
data16
add
sbbl
xchg
mov
lea
sub
cmc
sub
inc
and
mov
int3
sub
push
jne
sbb
imul
pop
test
xorb
mov
sub
adc
xlat
xchg
aam
inc
push
out
outsb
addr16
sub
jle
fs
ja
stos
out
mov
in
fildll
js
pop
adc
sahf
cmp
sbb
shr
mov
mov
stos
shlb
stc
bound
ret
add
fisubs
inc
andb
inc
faddl
cld
pop
out
adc
pushf
in
mov
lcall
cmpsl
movsb
inc
and
test
dec
inc
call
les
jl
mov
insb
dec
sub
and
stos
cmc
roll
sbb
outsb
stc
cmpsl
dec
scas
push
push
fmull
aam
sub
push
mov
sbb
or
add
cmp
sarl
fnstsw
pop
pop
push
cmpsl
icebp
daa
xchg
or
enter
inc
adc
pop
popf
dec
incb
push
std
cmp
daa
or
inc
jp
mov
jecxz
ljmp
js
add
add
push
mov
cmpsb
faddp
pop
xor
ljmp
cld
test
dec
lret
push
mov
push
dec
arpl
rorb
test
mov
mov
dec
dec
loope
xchg
xchg
imul
jbe
jae
or
je
icebp
pop
imul
ljmp
sbb
xchg
cli
adc
cmp
xchg
repnz
movsb
pop
cmp
adc
jle
jle
mov
jno
enter
data16
or
fidivrl
mov
cmp
adcb
lahf
loope
test
jo
cmp
test
insb
sub
ja
mov
jnp
mov
ds
push
sbb
lret
sahf
in
addr16
mov
adc
cwtl
sahf
xor
scas
inc
lcall
repz
jecxz
andl
in
adc
add
jne
xor
pop
test
dec
imul
and
pop
ss
icebp
sub
push
shrl
loopne
int
inc
adc
lret
fwait
push
out
pop
or
stos
and
pop
xchg
sar
in
jmp
inc
lahf
dec
aad
sub
flds
out
bound
lods
test
dec
add
jp
mov
or
fadds
xor
int
mov
mov
fucom
mov
cmp
ret
sub
pushf
mov
xorl
addr16
fwait
sbb
dec
mov
int
mov
push
mov
lret
pop
lock
inc
iret
inc
das
jge
xor
aaa
xor
pop
hlt
dec
sub
xor
mov
lds
dec
xor
out
leave
sti
mov
ficomps
mov
sbb
arpl
lods
jmp
jle
and
shlb
pushf
stos
mov
push
xor
xlat
and
pushf
aaa
xor
mov
sti
shrl
cmpsl
xchg
repz
adc
pop
cltd
add
rclb
push
pop
out
and
push
sbb
and
adc
inc
xor
ja
mov
inc
and
mov
pop
imul
jns
inc
iret
sub
push
ficompl
or
outsl
add
sub
test
in
mov
cmp
loope
push
loopne
movsb
cmc
cmpb
into
ret
dec
pop
out
adc
data16
movl
loope
lock
jmp
scas
xor
pop
addb
stc
jno
mov
inc
push
hlt
adc
cmp
in
test
push
pop
fsubs
idivl
cmpsb
lret
adc
addr16
mov
fnstsw
pop
xchg
addr16
jg
dec
loope
mov
mov
roll
fcmovne
hlt
push
inc
movsb
lds
cwtl
outsb
xchg
jns
lcall
pop
jo,pt
bnd
gs
jbe
cmp
pop
xchg
xchg
sub
mov
fimull
add
push
sub
inc
dec
cld
or
xchg
jecxz
mov
in
lods
outsl
lods
ror
ret
dec
bound
sarl
lcall
lods
sbb
xor
popf
sub
sbb
jecxz
adc
sbb
cmpsl
adc
inc
add
cmc
insb
das
sub
lea
rcr
test
jmp
or
cmp
insb
add
dec
lods
sub
dec
int
ja
scas
bound
cld
xchg
pushf
add
pusha
xor
add
sbb
or
pop
mov
add
outsl
cmc
add
mov
in
lcall
lahf
cmp
pop
mov
add
cmp
imul
dec
dec
jp
faddl
lcall
xor
mov
sub
push
icebp
mov
mov
pop
mov
jae
xchg
mov
divb
mov
stos
cmpsb
mov
lock
cmpsl
mov
mov
mov
xchg
out
test
mov
and
mov
test
imul
lods
popa
add
notb
popf
mov
sub
les
out
jne
push
and
orb
leave
jno
adc
imul
aaa
push
out
shr
xlat
push
sbb
push
xchg
mov
push
xorb
xchg
cmp
xor
shlb
rorb
cmpl
mov
sub
hlt
test
or
leave
aaa
nop
mov
cmpl
lds
mov
dec
fcoml
mov
dec
inc
inc
mov
arpl
test
fwait
adc
repz
xor
pushf
adc
inc
leave
mov
dec
fs
sahf
sarb
lea
inc
sbb
cmpsb
dec
fmul
into
scas
xor
test
jmp
pop
sbb
shll
push
and
flds
das
test
mov
sbb
add
sbb
test
aas
jle
lock
add
lret
nop
cmpsb
aas
mov
js
cmp
cmp
test
or
adcl
adc
lods
in
cs
jecxz
insb
xchg
call
dec
filds
sub
fistps
jne
add
rcrl
and
test
push
mov
and
cmc
xchg
xchg
dec
mov
sub
xor
mov
jnp
loopne
lods
dec
adc
fcomps
mov
mov
adc
jge
hlt
test
cmp
cmpsb
int
xorb
cmc
filds
or
aam
popf
sbb
sub
aaa
sbb
cmp
lods
xchg
mov
mov
in
dec
test
hlt
mov
ficomps
xchg
xchg
adc
icebp
adc
jo
adc
lret
adc
inc
jle,pn
mov
cmp
popa
mov
lds
pop
jno
rclb
dec
jnp
sub
mov
out
hlt
repnz
or
push
xchg
mov
adc
jecxz
xor
jbe
jge
fsubs
mov
flds
pop
fucomi
test
pushf
mov
jle
pop
mov
jge
inc
jnp
mov
or
clc
or
pop
loop
dec
sahf
mov
pop
call
jne
jle
dec
mov
xor
jg
rorb
iret
loope
mov
or
je
icebp
andl
ljmp
adc
xchg
sbb
stos
dec
xchg
insl
mov
lret
je
fdivrl
pop
add
jo
sbb
sbbb
rol
jbe
mov
imul
xor
scas
dec
loope
aad
call
cmc
daa
xor
fnstenv
mov
pop
sysexit
xor
mov
xchg
and
mov
xor
dec
jl
mov
cwtl
outsb
pop
cmp
mov
mov
mov
lds
repnz
add
push
pop
cmp
inc
fdivr
in
jnp
inc
fwait
mov
frstor
sbbl
les
das
sbb
cmp
leave
cltd
je
mov
pop
out
sub
mov
cs
fstpt
and
dec
fcompl
pop
dec
into
sub
scas
xor
outsl
pusha
aad
dec
loop
cmp
lds
sbb
or
imul
add
loop
fcmovb
in
pop
jp
mov
outsl
test
cmc
lds
push
cmp
xchg
cmp
fs
je
pop
fwait
dec
pop
mov
lahf
inc
js
push
push
xor
cmp
testl
mov
push
in
test
cli
into
in
mov
loope
mov
or
mov
inc
aas
scas
adc
sbb
sub
mov
inc
fs
incb
loop
sub
fstl
xor
xchg
xchg
dec
mov
cli
adc
imul
adc
cvtpi2ps
rcl
mov
clc
ret
dec
outsb
push
lret
pusha
leave
push
cmp
aam
outsl
mov
ja
cmpsl
xchg
add
and
std
ror
incb
jo
sar
mov
adc
outsb
daa
inc
push
jae
int
and
mov
xchg
inc
mov
mov
sahf
into
push
xchg
in
jecxz
cwtl
les
xchg
imul
jecxz
mov
popf
sti
pop
pop
dec
cmp
lcall
adc
cltd
mov
push
add
std
jae
add
into
fisttpll
notb
subl
rcrl
faddl
and
in
repz
cmpsb
jno
or
sbb
jle
inc
xchg
and
into
addb
enter
mov
out
xor
push
shl
mov
test
pop
jge
je
daa
lock
mov
cmp
rcrl
jne
xor
xor
push
stos
or
jne
shrb
lds
clc
aam
cmp
push
out
daa
push
loope
sbb
add
jbe
pop
movsl
mov
add
push
out
sub
push
in
dec
cmp
push
or
and
iret
cmp
pop
aad
cmpl
movsb
repz
sub
out
dec
mov
mov
fdivrp
in
movsl
mov
ficoms
push
decl
push
repz
subb
jle
hlt
mov
mov
movsb
mov
or
flds
shlb
add
cmovns
push
jle
shrb
mov
lret
push
push
pop
loop
incb
shrb
xchg
inc
jecxz
stc
mov
pop
fmull
mov
hlt
lds
dec
cld
push
aaa
lea
and
aaa
aaa
test
sub
mov
outsb
cmp
or
movsl
mov
cmc
push
add
mov
testb
adc
adc
fsubs
inc
shl
add
lock
sbb
dec
stos
out
ss
pop
jne
dec
out
mov
mov
sbb
out
outsb
fsubp
inc
ds
andl
clc
in
scas
mov
push
mov
dec
mov
xor
inc
push
mov
xor
cmp
lock
fistl
jmp
jg
mov
mov
dec
mov
jb
icebp
mov
or
cld
out
das
cmp
lret
gs
shl
inc
orl
mov
or
sbb
pop
mov
mov
and
in
push
arpl
out
gs
lea
push
inc
jnp
xchg
jns
push
mov
scas
push
jp
jne
movsb
aad
sub
push
out
or
xorl
xor
int
pusha
outsb
lret
push
xchg
rclb
int
sbb
or
sbb
pusha
adc
jb
xchg
pop
dec
jns
dec
and
sub
mov
test
sahf
cmpsb
stc
std
mov
rorl
out
mov
adc
xor
mov
icebp
dec
test
add
test
push
ljmp
fwait
cltd
and
mov
push
mov
xor
inc
test
test
sub
or
aam
stos
push
hlt
inc
xchg
int3
mov
jbe
pop
lahf
jle
or
pop
xchg
cwtl
sub
sub
repnz
lods
iret
and
dec
bound
xchg
and
dec
adc
lea
fs
push
mov
jno
xchg
xchg
mov
pop
ljmp
cli
lods
sahf
dec
repz
rorl
in
es
shr
jmp
xor
sahf
mov
sbb
adc
jne
lcall
jo
ss
mov
stc
rclb
call
pop
jmp
rol
dec
jne
push
xchg
jecxz
inc
subl
inc
mov
dec
mov
lcall
scas
incb
pop
shr
push
xor
xchg
push
lea
in
sarl
rcrb
jge
iret
pop
fnstenv
enter
out
out
xchg
mov
daa
stc
hlt
push
imul
loopne
fidivrl
sbb
stc
push
loop
jp,pn
mov
cmp
std
mov
js
sbb
divl
fndisi(8087
sub
mov
fiaddl
mov
sbb
sub
or
dec
pop
cwtl
cli
fildll
fiaddl
adc
add
lahf
xchg
aaa
add
ja
pop
loope
ret
test
cltd
sbb
pop
inc
dec
and
loopne
popa
ficomps
adc
dec
insl
lret
push
test
std
mov
jne
das
jnp
push
cwtl
aad
xor
fisubl
push
shrb
mov
repz
jbe
rorl
jns
pop
in
push
pop
mov
nop
scas
test
add
out
cs
lock
fdivrs
add
push
ljmp
subl
in
dec
jnp
xchg
and
aam
sarb
jo
jno
mov
aam
popa
imul
loopne
je
imul
lds
mov
adc
aam
jmp
rol
test
les
jno
xchg
or
and
pop
fildll
repnz
lret
daa
iret
stos
popf
scas
mov
mov
pusha
pusha
dec
cwtl
or
fs
in
mov
test
test
mov
outsb
sub
and
loop
icebp
aam
ret
jle
ss
rclb
sbb
xchg
or
ds
sbb
sub
aam
pop
addb
insb
xor
psllw
or
addb
mov
icebp
push
jo
cs
mov
cmp
pop
push
stc
daa
or
xor
lret
jo
push
pop
out
pop
loopne
cmpb
xor
cmpb
xor
inc
cltd
into
xchg
xor
cwtl
mov
sar
inc
cli
push
lret
aas
test
and
ja
add
in
pop
or
lret
ret
cmp
or
dec
cmc
imull
je
cld
cli
fisubl
out
dec
mov
in
push
push
insb
mov
mov
lea
rclb
lock
dec
jns
pop
ret
push
ds
xor
cmp
pop
loop
add
add
scas
sub
and
insb
push
clc
push
aad
add
stc
test
inc
jbe
mov
in
cwtl
dec
sbb
cs
and
xor
sarl
test
jns
dec
pop
xchg
pop
cmp
dec
out
xchg
test
lds
sbb
gs
es
jae
inc
movsb
sbb
cwtl
ret
push
pop
jge
adcb
dec
jne
jns
mov
adc
xchg
mov
lahf
lcall
push
rcl
out
xchg
pop
push
out
xchg
popf
mull
dec
adc
sub
hlt
xrelease
pop
lds
mov
cs
mov
test
or
or
mov
test
aad
pusha
movsb
test
push
rclb
out
aas
mull
mov
jnp
xor
sub
mov
data16
and
mov
mov
and
nop
ficoml
pop
xor
ret
xchg
repz
inc
ret
negb
push
jnp
mov
into
outsb
push
sbb
sbb
sbb
int
jp
shlb
hlt
cmp
pop
cmp
jg
sar
mov
push
mov
repz
sbb
add
and
push
rclb
jno
decb
je
push
out
pop
pop
jns
scas
and
addl
mov
fidivl
mov
lret
aaa
call
xchg
inc
movsb
outsl
pop
aad
pop
imul
aas
mov
push
and
cmp
or
and
insb
adc
xchg
pop
aaa
mov
push
add
sub
dec
push
push
std
inc
jb
mov
fxch
rcrb
cmpsb
inc
rorl
jns
lret
sbb
test
ja
push
sub
xchg
hlt
sbb
push
push
sti
fsts
popa
notb
xchg
lcall
and
sbb
pop
dec
mov
aad
dec
mov
cld
add
adc
movb
xor
shl
push
push
xor
cmpsl
push
scas
or
xor
dec
lcall
popa
pop
das
push
xchg
cmp
subb
daa
mov
mov
jae
and
lods
aad
pop
outsl
sbb
nop
fisubs
test
cltd
jb
and
adc
cmpsb
call
mov
mov
or
data16
fwait
notl
jle
idivl
fs
pop
dec
or
or
xor
lods
ja
leave
xlat
dec
mov
xorl
or
cs
jmp
js
sbb
ss
xor
jns
fcomp
mov
and
and
mov
inc
jb
adc
les
test
pop
dec
test
jnp
push
cmc
push
fistps
mov
xor
xchg
add
pop
jmp
mov
pusha
lods
mov
sbb
arpl
into
xor
pop
jo
inc
mov
lret
mov
add
stc
mov
stos
in
orl
in
push
into
pop
jnp
mov
lret
sub
xchg
push
mov
inc
inc
inc
loope
xor
pop
out
div
cmp
mov
outsb
int
mov
mov
scas
out
sub
iretw
pop
aaa
jno
lcall
push
jle
aas
mov
push
xchg
data16
std
sub
das
and
add
mov
bound
xor
ds
iret
ljmp
aaa
imul
pop
data16
call
lock
mov
xor
mov
push
std
dec
bound
dec
xchg
and
xchg
ljmp
xor
mov
adc
mov
negb
insl
imul
push
mov
stc
jae
inc
pushf
lea
lea
push
retw
lods
out
insb
mov
pop
int3
std
or
push
mov
in
xchg
shll
aad
in
xlat
adc
std
rol
je
or
pusha
fldl
imul
sub
sbb
push
bnd
push
mov
outsl
push
mov
sub
test
add
jo
movsb
adc
or
lret
sbb
in
mov
mov
push
mov
push
push
pop
cmc
stc
and
inc
sbbb
push
inc
dec
and
adc
cmp
icebp
std
cmpsb
and
out
daa
cltd
das
cs
imul
mull
add
gs
lret
mov
adc
jl
adc
mov
repnz
adc
enter
dec
adc
test
in
push
repz
stos
mov
fmuls
or
mov
leave
lahf
sbb
sbb
in
adc
push
pop
sar
cmp
inc
lea
dec
push
push
lret
add
cmp
pop
mov
jp
ficoml
cs
and
sbb
outsl
cmp
sub
push
xor
push
in
lods
fstpt
sub
shll
int3
stos
dec
adc
gs
popf
xor
pop
mov
xor
enter
cld
mov
fs
add
repnz
into
nop
test
out
movb
xchg
or
and
mov
nop
mov
lcall
adc
mov
das
dec
stos
mov
insb
sub
xor
icebp
repz
rcll
dec
outsb
addr16
and
jle
sbb
das
shl
push
int
adc
call
lahf
addr16
mov
push
adc
icebp
pop
addr16
idivl
clc
sbb
dec
or
jmp
cmp
test
aad
ss
jmp
clc
and
pop
cmc
enter
mov
and
xchg
popf
or
pushf
pop
push
in
ss
mov
push
sbb
testl
push
mov
or
aad
mov
push
pushf
mov
fisubs
mov
int
stc
fsubp
xor
pop
jecxz
sbb
mov
mov
sbb
adc
nop
or
lods
popa
popf
jae
out
icebp
push
dec
shrl
shlb
sbb
add
loope
lods
sar
inc
push
repnz
xchg
pushf
push
insb
and
loopne
pop
dec
loopne
jbe
xchg
test
cs
lods
fwait
popa
pop
add
adc
add
or
hlt
push
sub
lret
jbe
fdivr
lea
or
mov
jp
insb
mov
xor
test
push
or
pop
icebp
cs
cltd
repz
popa
loop
into
sub
dec
mov
mov
pop
jmp
cmp
test
shl
add
sub
mov
scas
pushl
cld
add
xor
aaa
imul
mov
mov
xor
clc
in
test
xchg
int
mov
jl
fdivl
iret
in
fs
stc
ss
enter
mov
dec
sub
insl
les
mov
sbb
push
xor
addr16
leave
xchg
arpl
js
inc
push
movsb
and
dec
jecxz
add
jbe
in
lahf
aad
push
loop
ljmp
jle
jg
notl
and
aas
mov
jb
add
jne
mov
push
xor
xor
rolb
jg
arpl
pop
jmp
mov
ljmp
test
mov
shl
xchg
lds
shrb
pop
daa
sti
and
imull
not
cmpsb
cmpsl
inc
sbb
cmpsb
sbb
sbb
cli
adc
inc
dec
jbe
jno
sti
dec
or
xorb
aad
icebp
fimuls
iret
lret
dec
sbb
std
in
push
adc
loope
std
jno
sbb
pop
outsb
rcl
data16
cmp
adc
pop
jbe
xor
inc
cmp
sbb
scas
push
jbe
sub
andb
adc
pop
jg
into
sub
and
not
and
dec
movsl
jno
add
stos
push
fists
push
daa
div
mov
mov
movsb
inc
or
and
data16
ret
pusha
fmuls
sbb
std
pop
test
outsb
in
lcall
enter
dec
add
fisttpll
ret
sub
mov
lret
es
adc
fabs
les
inc
cmp
lods
or
inc
in
outsb
outsb
add
add
cmpsb
mov
int
cs
push
or
mov
mov
into
scas
xor
xor
pushf
cmpsl
incl
or
push
fistpl
popf
sbb
cmp
in
add
cmp
cld
jnp
repz
and
and
sbb
mov
jp
jbe
adc
dec
mov
lret
jo
aas
xor
add
call
mov
pop
push
std
jne
lds
outsl
cmpsb
sub
repnz
mov
adc
inc
inc
outsl
xchg
mov
jns
xor
push
aad
jno
test
push
fiaddl
push
jle
cmp
mull
mov
or
pop
scas
xlat
outsb
add
jbe
add
jl
add
mov
jecxz
mov
and
mov
mov
and
fistl
ja
mov
in
scas
ficomps
fwait
dec
repz
lret
pop
out
adc
cli
or
adc
int
pop
inc
aad
inc
ds
adc
insb
into
mov
pusha
cmp
sub
movsl
and
xchg
push
dec
cli
push
adc
cmp
or
movsb
int
mov
mov
sub
pop
outsl
loope
and
mov
jmp
push
int3
rcl
dec
mov
inc
cmp
gs
clc
push
lcall
cmpsb
mov
dec
jecxz
sbb
int
cmc
jae
dec
out
adc
and
sbb
pusha
jg
lods
dec
popf
mov
int
loopne
xorb
xor
sti
cmpsl
sbb
inc
cld
cwtl
sbb
adc
jb
xlat
xor
mov
mov
adcl
imull
pop
movsl
adc
fldlg2
ret
add
sub
leave
jnp
mov
jge
mov
test
sbb
bswap
repz
shll
inc
es
out
sub
jge
inc
in
pop
hlt
mov
mov
mov
sbb
push
popa
leave
fnsave
sahf
decl
addb
jno
inc
sbbb
out
jnp
bound
cmc
out
cmp
roll
mov
push
adc
les
sub
fucom
adc
cwtl
int
xchg
popf
xor
mov
scas
dec
lds
dec
ljmp
mov
inc
fistl
hlt
aad
jnp
xchg
jae
out
aad
cltd
pop
icebp
push
movsl
es
lret
outsb
out
mov
rcll
enter
pop
cs
stos
mov
mov
mov
fdivrs
xor
frstor
xchg
into
out
mov
test
pop
nop
imul
stos
push
rcrl
popf
push
cli
test
sbb
mov
aas
mov
xchg
pop
out
scas
jo
jns
fisubl
mov
mov
iret
je
and
pop
scas
xor
fsubrl
cmc
xor
mov
inc
and
inc
xor
sets
mov
aaa
lods
jecxz
jmp
pop
adc
rol
adc
lret
outsb
addr16
scas
sub
cld
pop
test
lcall
add
jno
mov
cmp
test
fisubs
pop
pop
xchg
lea
jle
mov
jbe
add
pop
sbb
and
pusha
data16
lahf
jo
cmp
lock
sub
mov
iret
outsb
inc
xor
dec
push
xchg
inc
mov
div
ret
cmp
mov
mov
shrl
scas
xor
aaa
nop
sbb
adc
fdivl
inc
push
setg
add
pop
or
xchg
cli
sbb
aas
mov
subl
insb
jl
push
sbb
out
stc
sarb
int3
scas
mov
shlb
les
cmp
mov
sbb
fcoml
and
jecxz
mov
push
fs
jle
arpl
inc
repnz
dec
pop
mov
bound
shll
sbb
xor
inc
out
es
sub
xchg
mov
outsl
test
rolb
enter
mov
ljmp
mov
sub
dec
popa
pop
mov
or
pop
push
jl
mov
mov
cld
into
std
mov
mov
lods
push
push
jne
pop
nop
sub
push
mov
popa
pusha
pop
orps
sbb
es
fs
dec
jo
fsubrp
in
and
test
mov
or
xchg
pop
int
call
pop
xlat
adc
pop
inc
push
aaa
in
arpl
sahf
jp
sbbb
xchg
pop
cmp
jne
or
repz
mov
clc
xchg
pop
mov
data16
dec
inc
xchg
notb
cmp
inc
push
adc
cld
stc
mov
inc
stc
subl
mov
and
aaa
popa
leave
fs
mov
lea
adc
cmc
pushfw
leave
ja
data16
mov
sub
stc
and
iret
sub
jmp
out
xor
inc
out
nop
inc
lret
sbb
cmc
in
imul
or
stos
inc
add
mov
jp
mov
push
outsl
cli
xor
pop
aaa
cmp
pusha
out
imul
inc
mov
sub
mov
adc
add
stos
jns
dec
or
mov
jmp
adc
out
inc
fbld
or
icebp
add
cwtl
add
push
popa
add
jmp
incl
popw
add
add
sbb
xchg
dec
loop
addr16
cwtl
mov
insb
jle
jbe
sub
mov
xchg
clc
add
je
jle
mov
cli
jl
in
fs
jno
xor
push
test
aas
xor
pop
int
add
sbb
filds
fsubs
shll
bound
lret
stos
sub
jb
inc
jae
jne
fbstp
jmp
xor
inc
popf
cmc
loopne
bound
jecxz
iret
loope
push
fdivrs
hlt
cltd
movsb
sub
dec
push
jo
fcomp
push
sub
pop
inc
pushf
aam
lret
in
cs
mov
repnz
fldl
pop
in
pusha
jb
jae
sub
pop
clc
xchg
out
pop
repnz
in
adc
loope
sub
stos
jnp
push
xchg
pop
dec
xchg
cltd
loope
dec
iret
andb
xor
xchg
mov
aas
cltd
rolb
icebp
mov
dec
pushf
pop
cmp
or
ljmp
and
pop
or
pop
data16
cmp
xchg
icebp
lods
std
and
adc
decb
and
jb
pushf
movsb
cltd
push
pushf
dec
lcall
xchg
jne
int3
mov
pop
inc
or
hlt
sbb
not
cmp
xor
dec
mov
mov
and
orb
lock
mov
push
pop
outsl
insl
and
clc
call
dec
int3
cld
push
mov
mov
int3
pop
imul
adc
in
addl
and
inc
shlb
sbb
orl
xchg
mov
loopne
fwait
jp
xor
loop
or
decl
jp
in
subb
xchg
jbe
aad
push
jl
clc
xchg
add
sbb
out
js
adc
mov
imul
dec
xor
aam
or
xchg
mov
push
repz
or
fwait
mov
jne
repnz
mov
add
mov
fcomps
jbe
movsb
fcmovnu
aas
test
cmp
mov
inc
jne
or
adc
jo
imul
lcall
lods
int3
cmp
out
sbb
aam
fcoms
mov
adc
or
push
cmp
jmp
std
sub
lock
adc
sar
mov
in
xchg
dec
addb
ret
xlat
cmpb
adc
fisubrl
mov
mov
in
xor
or
mov
sarl
repnz
dec
push
dec
out
sbb
push
dec
mov
loop
in
in
cmpsb
cmpsl
cmpsl
push
ret
xor
outsl
mov
xchg
mov
xor
jge
mov
adc
lcall
ljmp
xor
icebp
repnz
mov
loop
or
inc
lds
daa
mov
inc
and
xchg
sub
lahf
cmpsl
ret
sbb
inc
push
cs
aad
cli
dec
lods
clc
mov
cmc
popf
es
cmp
into
pusha
cwtl
mov
cmp
inc
xlat
sbb
pop
mov
cwtl
lock
add
sbb
test
and
ja
idivl
stc
movsb
jb
popf
arpl
test
cltd
xchg
add
xor
mov
fsts
sahf
sbb
movsl
sbb
and
outsb
cmp
in
jle
insl
mov
inc
jmp
xor
into
pop
cmp
hlt
sbb
xchg
cmp
xchg
dec
mov
mov
into
cmpsb
cmovl
sub
or
jb
and
mov
mov
loope
sbb
cwtl
mov
fidivrl
pop
sar
gs
wrmsr
dec
fcomps
cmp
adc
mov
divl
dec
and
std
in
data16
cmc
sbbb
dec
insl
int
pusha
rol
jp
fwait
pusha
and
lea
push
or
and
or
cli
jp
lea
inc
lods
mov
cmp
pop
xchg
dec
push
mov
call
icebp
xor
scas
add
cwtl
mov
dec
test
xchg
sarb
ret
adc
push
imul
loopne
dec
mov
and
inc
stos
daa
addr16
fs
lahf
xor
imul
add
sti
xchg
adc
inc
lods
out
inc
std
mov
xor
add
mov
xor
inc
pop
imul
insl
lock
push
das
dec
mov
mov
aad
mov
xchg
dec
sbb
bound
mov
pop
leave
cld
or
loope
data16
movsl
scas
or
xorb
sub
pop
mov
cmp
mov
jl
jnp
sub
xor
scas
iret
nop
mov
mov
shll
sub
dec
mov
xchg
dec
ss
ljmp
dec
cmpb
cli
adc
call
hlt
stos
daa
callw
ds
incb
sbb
std
dec
out
inc
pop
imul
mov
sbb
dec
jbe
test
aam
pop
loope
dec
pop
xchg
cwtl
rcll
adcb
jns
jne
cld
mul
cld
mov
xor
popf
add
jge
fcompl
lret
les
xor
loopne
sub
std
add
mov
jmp
jno
lret
fwait
repnz
and
aaa
repz
loope
scas
stc
or
stos
jp,pn
aam
jns
addl
scas
xor
push
roll
jmp
xor
cmp
add
andb
mov
stos
and
sarl
xchg
out
mov
push
loop
inc
aas
mov
xchg
push
mov
push
mov
push
lock
mov
mov
aad
imul
lahf
cmp
dec
mov
mov
popa
push
loopne
into
mov
daa
xchg
fadd
lods
mov
push
or
push
nop
mov
sub
lret
xor
je
mov
shll
rol
test
mov
pop
xchg
cmp
dec
jb
xor
lret
pop
and
adc
test
repnz
add
mov
fdivr
les
sbb
xor
pop
sub
ss
arpl
leave
fistpl
lea
call
pop
adc
xlat
dec
cltd
or
hlt
clc
pop
xlat
outsl
push
sbb
cmp
rcrb
clc
lcall
xchg
mov
adc
movsl
cmp
aas
adc
push
out
cmc
les
xor
andb
ffree
cmpsb
mov
jbe
xchg
dec
sub
sub
sub
pop
fistps
mov
xor
lret
push
mov
mov
pmaxsw
rcr
sub
insb
mov
inc
ss
lods
push
mov
lahf
sub
cmp
sti
mov
xchg
icebp
iret
adc
mov
jge
sub
mov
sub
setae
fnstcw
stc
stc
cmpsl
clc
stc
sbb
sahf
repnz
sub
js
inc
pusha
pop
cmpsl
push
fdivrl
int
push
pop
xchg
les
cli
std
pusha
sub
negb
aaa
aaa
dec
mov
jl
pop
data16
sub
push
sbb
int
mulb
dec
cmpsl
mov
aas
movsb
pop
arpl
mov
mov
mov
or
xlat
xor
out
jl
nop
mov
push
shll
cmp
xor
popa
jo
mov
jmp
outsl
xchg
lcall
mov
pop
cld
outsl
cmp
roll
mov
das
lds
mov
adc
cltd
add
call
mov
in
mov
fldt
clc
xlat
insb
lret
test
bound
xor
cmp
scas
lret
xor
xchg
loope
push
out
cmp
stos
or
mov
inc
push
push
mov
cmp
and
lret
stc
xor
or
ljmp
inc
insl
jmp
dec
and
aaa
ds
push
sbb
mov
jmp
inc
outsb
or
inc
mov
shr
fxch
dec
jnp
out
iret
pop
bound
xchg
cmp
jg
xor
stos
ret
inc
add
test
xchg
dec
popf
enter
push
mov
xchg
movsl
mov
clc
or
add
lds
icebp
jo
mov
or
imul
fdivl
loope
out
jmp
imul
lds
andl
mov
pop
out
xchg
mov
mov
test
mov
out
lea
push
mov
icebp
loope
adc
mov
mov
outsb
idivl
lods
lods
ja
xchg
outsl
fisttpll
sbb
mov
sbb
jmp
or
add
sti
in
pop
ja
shlb
in
sbb
les
lods
sbb
sahf
icebp
aaa
inc
sbb
jno
int
and
test
int3
inc
inc
dec
dec
in
outsb
clc
xchg
hlt
clc
into
out
divb
sti
push
dec
rorb
ret
pandn
sub
sarl
adc
mov
fwait
add
out
fldl
xchg
popa
push
xlat
push
stos
inc
mov
sub
inc
push
sbb
lcall
lods
subl
mov
lahf
push
sbb
inc
aas
adc
in
sbb
jbe
inc
jbe
pop
popa
addr16
icebp
push
addb
scas
sbb
add
add
cmp
add
jmp
jnp
adc
and
std
lds
and
out
std
dec
movb
in
or
pop
jbe
xor
push
je
adc
adcl
jne
sub
pop
cmpsb
aas
inc
test
jnp
hlt
push
xor
xchg
sbb
lcall
xchg
xorl
mov
fwait
pop
mov
insl
ss
mov
sub
inc
rcr
cld
call
lahf
and
je
mull
mov
xchg
stos
hlt
mov
imul
pop
sahf
ret
dec
fwait
cmp
orl
inc
pop
outsb
dec
or
sub
lahf
jb
pop
repnz
jmp
and
pushf
xchg
xchg
mov
push
cli
xchg
mov
mov
mov
ja
je
imul
jns
in
jne
and
sub
or
adc
inc
or
outsl
in
xchg
arpl
scas
inc
adc
xchg
mov
mov
add
in
faddl
outsl
xchg
loope
in
pop
or
nop
push
jl
in
mov
rclb
xor
mov
sub
inc
pop
jb
jp
scas
mov
dec
out
rclb
repnz
adc
mov
push
add
sbb
pop
pop
jbe
mov
iret
mov
jmp
cmp
xchg
stc
mov
fldl
mov
xchg
add
cmp
ret
adc
pushw
mov
adc
pushf
das
les
cltd
or
imul
in
lock
sti
aad
arpl
or
test
xor
jae
and
insb
addl
addb
mov
imul
mov
push
add
push
subb
aam
shl
mov
mov
aam
lods
roll
lods
lock
mov
fs
daa
fistpll
fcoms
mov
xchg
enter
or
xlat
or
or
bound
jne
xchg
mov
test
pusha
cmp
outsl
mov
sub
jbe
mov
dec
or
jge
mov
test
sub
rorb
push
jge
mov
fwait
xor
dec
imul
sbbb
daa
sahf
bnd
lds
push
ja
jnp
push
push
adc
jno
add
cmp
int3
jg
jmp
or
in
testl
sub
insb
fistl
lcall
pop
div
pop
cmp
inc
mov
je
in
xchg
push
aam
push
lret
xchg
movsl
cwtl
movsl
cmpsb
and
lods
cmc
pop
inc
and
push
sbb
dec
and
or
push
inc
jl
rcrb
cmpsl
dec
aam
mov
out
clc
into
xor
ficoml
faddp
pop
mov
sub
and
in
ret
lahf
and
mov
ljmp
pop
aaa
stc
jbe
jb
ds
adc
imul
mov
call
pusha
cmp
shlb
sub
sub
add
mov
inc
fstl
mov
addr16
fisubs
scas
add
jbe
push
lcall
clc
mov
inc
jb
jne
das
xlat
or
pop
adc
push
imul
in
iret
popa
pop
or
pop
pop
fimuls
jmp
aas
mov
push
dec
pushl
push
lea
test
filds
add
sbb
ret
sbb
inc
push
jmp
out
ficompl
push
icebp
sub
jns
xchg
and
fistps
sub
adc
andb
aam
xor
ljmp
or
arpl
xchg
imul
fstl
sub
mov
xor
cs
and
js
and
lds
sti
sub
pcmpeqd
insb
xchg
jbe
cmpl
lock
in
jbe
test
and
inc
cmp
mov
pop
cmp
std
push
in
aam
stos
cmp
in
cmp
mov
inc
fimull
add
push
sbb
mov
pop
sbb
in
sub
fmuls
xor
mov
test
pop
xchg
sub
mov
jno
xchg
adc
cmp
stos
lea
scas
xchg
jl
mov
ds
faddl
leave
ljmp
fsubr
inc
inc
or
pushf
outsl
mov
test
push
rcll
imul
push
out
mov
cmp
insb
cld
das
and
addb
jb
lods
push
push
fstl
sti
push
rol
push
lds
ret
jno
mov
into
fnstcw
daa
sbb
dec
adc
xor
pop
stos
outsl
mov
mov
mov
cmp
add
repz
roll
data16
mov
out
cmpsl
sti
insl
dec
cmp
shr
inc
push
xor
sub
cmp
sub
sub
mul
inc
in
pop
arpl
cli
fstps
js
mov
pop
cli
cld
negl
dec
sub
inc
shlb
addr16
or
rcll
jmp
lock
roll
xchg
scas
lahf
or
dec
movsl
stos
clc
into
mov
push
jb
movsl
shll
push
add
or
push
test
clc
adc
mov
jno
add
ror
movb
jp
adc
les
cmpl
or
sbb
mov
fs
in
xchg
adc
dec
push
mov
stos
aas
cltd
js
xor
dec
mov
sar
push
daa
repnz
fistl
sub
pop
fstps
push
mov
adc
cwtl
inc
popf
int3
fld
imul
popf
pop
in
and
mov
dec
sub
mov
ret
sbb
xor
pop
out
mov
xchg
xor
aad
jle
dec
and
in
rcr
mov
pop
pop
pop
push
and
test
clc
push
push
outsl
jno
lds
jp
je
nop
cmpsb
add
mov
jnp
insb
outsb
xlat
hlt
and
pop
enter
push
adc
imul
push
mov
adc
in
pusha
cltd
fs
mov
pop
mov
or
mov
int
movsl
dec
sub
inc
loopne
jmp
dec
xchg
add
dec
imul
dec
outsl
xchg
push
es
sub
and
aad
dec
cwtl
sbb
pop
bound
or
fnstenv
popa
inc
jmp
sbb
popf
cmp
mov
pop
fidivrs
iret
or
mov
repz
into
cli
icebp
push
rolb
mov
clc
cmp
loopne
repnz
jno
or
iret
je
dec
or
mov
xlat
lret
sbb
fcmovnb
push
sbb
cmp
bnd
fimuls
xchg
add
pusha
mov
add
je
lock
pop
out
push
push
scas
movsl
mov
xchg
inc
imul
cmp
add
dec
or
rorb
and
orb
frstor
dec
sub
inc
ret
test
movsb
movsl
cmpl
jecxz
testb
xchg
test
orb
sub
rorb
and
mov
mov
add
popf
pop
jb
dec
xor
cmp
in
jbe
sti
mov
mov
out
dec
or
aaa
aaa
clc
or
and
and
aas
cmp
pop
push
shll
dec
idiv
sub
cwtl
gs
pop
mov
sub
iret
dec
jb
bound
inc
and
push
nop
sbbb
pop
inc
mov
jmp
dec
ret
mov
or
sar
pop
and
aaa
adc
adc
movsb
fcmovne
jbe
fldl
data16
imul
cltd
or
mov
xchg
test
sti
push
xchg
cli
loope
enter
test
fdivs
lods
push
inc
mov
lret
ret
out
mov
xor
out
jge
leave
xchg
cwtl
test
into
xor
aaa
and
dec
rcrl
das
jecxz
cmpsl
mov
daa
mov
jnp
mov
mov
and
jl
clc
mov
cmp
jmp
mov
inc
mov
or
pop
jno
ja
popf
or
jle
mov
sub
out
mov
or
cmp
pusha
adc
sbb
movsb
mov
fadds
inc
mov
push
jb
decb
cmp
inc
dec
popa
xor
xor
lahf
jno
mov
ret
sbb
mov
adcb
add
push
fidivl
cmp
sbb
insb
or
es
loope
inc
jp
pusha
loope
dec
bound
jbe
cmpsl
movsl
fldt
ret
cmc
loop
and
xchg
dec
pop
fmull
xchg
push
pop
and
push
xchg
rolb
adc
cmp
dec
jle
lods
scas
pop
fsubr
jns
and
lahf
cmp
sub
ja
push
dec
stc
push
repz
lahf
ret
pop
mov
inc
push
movsl
mov
cmp
lods
jg
or
lahf
dec
fistps
dec
insl
movsb
pop
dec
mov
mov
inc
sbb
arpl
outsl
jge
aaa
fistpll
mov
xchg
repnz
pusha
jle,pn
xchg
mov
insl
leave
adc
pop
mov
mov
in
arpl
jno
sub
mov
sbb
out
cwtl
cmpsl
pop
dec
outsl
pop
dec
cmp
int
dec
push
repnz
outsl
insl
or
cmc
mov
add
xor
mov
imul
push
es
pop
mov
jge
cmp
insb
aad
adc
xlat
stos
push
test
jne
sub
out
xor
jle
outsl
inc
push
cmpsl
inc
lret
jmp
insl
inc
fwait
dec
inc
jne
xchg
pop
jg
xchg
jmp
xor
cmpsl
sbb
cmp
mov
inc
repz
push
and
std
or
enter
bound
pop
and
das
mov
icebp
dec
mov
in
push
dec
rcrw
cwtl
dec
sub
dec
outsl
rcr
in
mov
adc
or
and
jp
hlt
adc
addr16
xchg
push
jnp
pop
cmp
jb
mov
mov
adc
cli
stc
mov
repz
enter
push
mov
pop
in
jo
lcall
sub
mov
hlt
ret
popa
and
mov
add
cmc
int
int3
lods
cmp
sbb
xchg
dec
push
outsl
cmp
jmp
cmp
sbb
loope
or
adcb
je
insl
push
sti
dec
in
into
push
ja
rcr
mov
dec
testl
test
cmp
lret
leave
jb
xor
aad
outsl
jns
mov
clc
jp
popf
pop
sbb
jo
sub
shl
test
enter
xor
or
movsl
cmp
popf
imul
sub
xor
testb
pop
inc
inc
inc
std
pop
adc
lcall
cwtl
cmpsl
fst
inc
jnp
xchg
sbbl
add
xchg
lea
pusha
pop
mov
inc
or
push
jae
addr16
imul
out
out
mov
mov
xchg
sbb
loope
push
addr16
xor
push
push
xlat
push
xor
jge
xchg
jb
fsubrl
sarl
dec
jo
jl
fs
or
in
pop
sbb
in
clc
push
jne
or
xor
mov
mov
cmp
xlat
ret
in
mov
cmp
maskmovq
notl
jle
xor
mov
add
call
inc
inc
pop
aas
gs
icebp
arpl
inc
xlat
pop
incl
test
inc
mov
jg
jo
xchg
dec
mov
stos
cmpb
rclb
mov
or
lea
pop
mov
in
dec
mov
pusha
sbb
popf
je
inc
std
inc
xchg
pop
sbb
incb
inc
or
jb
in
inc
jecxz
lcall
sub
and
dec
xor
cmp
movsb
imul
js
cltd
imul
push
xlat
dec
jnp
icebp
cmp
xorb
lds
rol
sbb
pop
scas
xor
push
cmp
mov
cwtl
pusha
jl
stos
mov
pop
test
enter
imul
lea
adc
pusha
sub
mov
inc
std
mov
adc
es
test
pop
jbe
cmp
bound
hlt
push
cwtl
jl
and
mov
xchg
inc
xor
ret
pop
loopne
mov
jno
pop
mov
sbbb
add
sbb
inc
pop
jmp
or
xchg
mov
std
xor
dec
pop
or
mov
and
xchg
dec
lahf
cs
mov
sbb
out
scas
cmc
lds
clc
mov
or
fnstenv
sti
or
insl
sbb
cmc
adc
aaa
mov
int
hlt
mov
lret
jnp
mov
mov
mov
jb
shll
dec
pop
fcoml
jbe
pop
je
mov
ror
adc
test
mov
sti
out
pop
push
lret
clc
pop
aaa
loop
jne
in
mov
adc
inc
jge
or
lods
sbb
mov
mov
mov
ficompl
idivl
xor
test
push
je
sbb
out
test
andb
xchg
mov
out
mov
add
sub
xchg
sysret
jo
pop
mov
clc
arpl
jge
pusha
mov
xchg
clc
test
inc
pop
test
sbb
out
jp
add
or
sub
pop
lds
jle
int3
aas
xlat
ficoms
cmp
ljmp
pop
insb
pushf
push
or
push
adc
dec
xchg
adc
mov
lcall
jecxz
sub
xchg
inc
push
scas
or
xchg
dec
insl
dec
push
sahf
xbegin
xchg
mov
mull
sbb
pop
fisubs
jmp
or
mov
imul
adc
jnp
mov
xchg
repz
mov
add
in
out
fsubrl
fdivrl
pop
icebp
xchg
push
cmpsb
ljmp
imul
mov
out
test
shll
fcmovnu
jmp
mov
adc
mov
loopne
push
psubusw
cmp
xor
lods
popa
sbb
out
sbb
cs
jns
sub
js
push
gs
ljmp
push
and
das
js
mov
mov
sbb
push
subl
test
mov
sti
mov
xchg
cmp
adc
or
jecxz
jno
and
test
sti
mov
jo
dec
xchg
mov
int
lret
or
mov
sbb
mov
iret
and
outsl
add
clc
roll
xchg
mov
pop
and
subl
enter
sbb
iret
sub
add
jp
xor
dec
push
mov
stos
and
pop
int3
mov
fistps
dec
repz
shll
cmc
mov
fldt
mov
lret
mov
mov
pop
mov
out
shll
cmpsb
push
cwtl
add
pop
xchg
adc
es
sbbb
mov
cs
into
mov
sahf
rcl
mov
scas
dec
mov
mov
add
jle
shlb
shl
pushfw
nop
mov
jle
mov
pop
push
repz
inc
rclb
cmpsl
insl
add
std
jns
xor
dec
cmpsl
xorb
test
inc
cmp
imul
mov
sahf
mov
mov
fldl
push
lahf
loope
mov
adc
jp
and
lahf
lret
cs
mov
ljmp
cmpsb
lret
int
pushf
movsl
loop
fisttpl
aam
mov
cwtl
adc
and
pop
dec
xor
stos
add
jne
push
divb
addl
or
add
jno
pop
sub
push
cli
or
decl
inc
in
repnz
loop
mov
add
insl
xchg
cmp
mov
sti
in
in
push
stc
inc
sbb
clc
mov
jmp
xor
mov
cmp
pop
xchg
test
sub
daa
inc
loop
stc
or
mov
add
mov
in
inc
sbbl
sub
sbb
push
jecxz,pt
xchg
insl
je
sbb
cmpl
and
and
cld
xor
mov
dec
xor
or
inc
in
popa
enter
jne
mov
and
and
sbb
xchg
aad
aam
jnp
data16
dec
repnz
mov
movd
inc
push
xchg
int
leave
int
add
mov
in
xor
inc
lahf
imul
push
mov
xor
dec
bound
in
je
or
mov
push
add
in
and
inc
push
gs
cmc
jl
xor
movsl
ret
add
and
shll
push
das
aaa
pop
or
pop
jnp
pop
and
mov
pusha
incl
mov
mov
and
pop
subb
add
ja
cmp
jle
lods
aaa
mov
jo
mov
mov
shl
pop
push
fildl
andb
stc
call
sbb
ja
cs
popa
mov
sarb
loop
xchg
sbb
loope
xchg
adc
ss
out
gs
mov
out
mov
lcall
jp
je
in
cmp
adc
leave
xchg
loopne
dec
jns
jae
cltd
cmp
fistl
icebp
shll
push
test
nop
sti
or
adc
cmp
clc
sub
xchg
jg
shll
rclb
int3
adc
lret
outsl
sbb
xor
insb
push
jmp
add
popa
xchg
mov
aaa
xor
std
mov
cld
stos
xchg
jne
cli
dec
xchg
dec
mov
sti
cmp
adc
hlt
outsl
in
test
imul
or
test
jmp
cmp
or
fdivs
xor
xchg
ss
in
jo
mov
movsb
dec
inc
mov
inc
insl
sbb
stos
cli
cmpb
add
xor
lods
fnstenv
test
pusha
mov
push
or
push
add
or
insl
bound
or
push
mov
mov
and
jo
lds
test
sub
fsubrl
test
xchg
das
xchg
sub
jge
or
sbb
add
jmp
jno
inc
cmp
cmpsl
dec
popf
cli
iret
mov
into
popa
dec
stos
xchg
loope
fimull
inc
sbb
jmp
test
sbb
testl
inc
push
lcall
mov
mov
in
leave
ds
ljmp
push
mov
sub
hlt
sub
in
pop
mov
aam
inc
xchg
sub
sub
fiaddl
lea
sti
fldl
wrmsr
cmp
aad
pusha
adc
in
or
cltd
test
ja
andb
addr16
inc
addr16
fs
fsubrp
int
xor
dec
add
push
xchg
xor
pop
sbb
mov
jge
sub
sbb
es
cli
adcb
xchg
mov
scas
inc
shr
popa
or
in
xchg
adc
jo
fidivrs
sbb
ret
mov
dec
xchg
jg
dec
mov
pop
jns
icebp
daa
stos
xor
mov
inc
xor
negb
fwait
jl
push
shlb
gs
and
pop
dec
xor
clc
dec
cmp
aad
cmc
inc
mov
sbb
mov
fcmove
push
pop
faddp
pusha
insb
stos
xchg
inc
cmpsl
inc
imull
jne
shrb
cmp
add
in
pop
mull
cmp
arpl
fimull
cmp
enter
inc
imul
dec
or
pop
and
pop
loope
inc
push
cmp
mov
into
mov
fisttpll
cltd
out
gs
or
mov
inc
mov
xchg
sbbl
cmp
add
mov
pop
call
or
movb
or
mov
arpl
mov
inc
pushf
aam
movl
pop
ljmp
add
jae
test
pop
push
sub
test
ljmp
andl
bound
or
pop
cmp
inc
sbb
ficoms
in
lgs
shlb
frndint
adc
mov
mov
mov
pop
popa
adc
lods
dec
pop
les
lock
and
dec
inc
xchg
xlat
and
lahf
iret
mov
cmp
shlb
in
mov
mov
cltd
adc
push
bound
adcb
fcmovb
sub
jne
and
add
xchg
cmpsb
jl
movsl
fisubl
pop
aad
push
call
ret
xor
or
nop
mov
lret
bound
mov
lret
cwtl
imul
cmp
or
xchg
scas
stos
fsts
insl
sahf
or
rolb
or
stos
and
out
cwtl
add
adcb
mov
addr16
jmp
les
arpl
dec
inc
hlt
fucom
popa
mov
add
rcrb
jecxz
jle
dec
cltd
loop
test
testb
push
inc
jae
push
jp
pop
in
push
cmpps
fbstp
inc
repnz
andl
ss
xor
test
xchg
xchg
jae
inc
sub
inc
pusha
popf
xchg
sbb
clc
in
aam
aam
and
pop
call
pop
es
addr16
aaa
rcrb
lods
iret
lods
push
push
mov
cmpsb
in
imul
inc
insb
mov
idivl
jb
sbb
adc
les
mov
jge
jne
mov
sbb
inc
in
push
les
out
rcll
mov
in
and
sbbl
pop
push
lcall
dec
sub
or
mov
mov
jns
jno
jp
mov
fstps
imul
cmp
movsb
jecxz,pn
test
and
xchg
cmpsl
jnp
mov
push
dec
adc
lods
repnz
stos
push
jae
rcrb
in
adc
dec
push
xchg
ja
dec
add
jnp
sti
sbb
mov
jns
enter
fldt
sub
add
pop
add
inc
xor
out
cmpsb
lret
push
popw
adcb
fucomi
adc
xor
outsl
iret
jne
ds
popa
xchg
fwait
sub
or
or
pop
sti
sub
test
sbb
cmp
outsl
lret
pop
jg
xchg
mov
push
xor
push
mov
repnz
clc
lret
cmp
das
mov
mov
test
jbe
inc
gs
sti
adcl
add
movsb
xchg
mov
cmp
jo
gs
pop
xchg
cmp
xor
or
push
stos
out
sub
ja
adc
sbb
push
mov
test
mov
mov
pop
xchg
mov
ds
pushf
cmpsl
mov
add
aaa
inc
and
out
stos
into
mov
mov
jl
sub
inc
add
xor
jmp
add
dec
xchg
mov
mov
les
adc
push
sbb
mov
or
mov
jl
jg
mov
aas
popa
add
pop
mov
cmp
mov
dec
add
push
es
jns
scas
lods
mov
cmpsb
lods
movsl
or
hlt
dec
mov
fnstcw
mov
push
jge
cmp
jmp
mov
dec
dec
mov
jnp
cmp
pop
or
notl
adc
xor
add
in
inc
xor
loop
sti
sbb
inc
mov
mov
dec
fstpl
imul
fisttpl
mov
dec
jne
mov
xchg
int
subb
mov
adc
ret
pop
pop
cmp
dec
xchg
loopne
fs
fidivrl
ds
jecxz
pop
repz
faddp
sti
nop
mov
adc
jno
push
pop
pop
mov
add
mov
inc
sbb
mov
aad
mov
push
mov
mov
push
push
gs
push
xchg
push
sub
pusha
mov
inc
leave
outsb
adc
pop
sti
pop
jecxz
xchg
sub
add
test
pop
sub
inc
or
test
insl
lea
xchg
pushf
arpl
sbb
push
jl
dec
das
dec
adc
push
mov
iret
inc
pusha
or
sahf
mov
jg
movsl
sbbb
insl
push
testl
jmp
push
cmp
nop
push
mov
jnp
cld
jbe
lret
jns
pop
add
aas
test
mov
scas
adc
jae
ret
mov
addl
mov
aam
jmp
sbb
inc
push
jae
int3
mov
mov
jecxz
test
push
sbb
out
mov
mov
leave
imul
fistps
or
in
int
and
mov
add
lods
cmpl
xchg
dec
mov
loope
jmp
cmp
int
in
push
popa
dec
add
out
cmpsl
add
pop
test
movsl
pop
rol
adc
fs
testb
push
sub
push
idivl
push
and
inc
sbb
jle,pn
dec
popa
daa
scas
mov
inc
in
sub
sub
mov
cltd
push
orl
or
sub
mov
or
and
pop
xchg
pop
fisubs
fwait
daa
cmpsl
mov
xchg
test
xchg
loop
int3
stos
push
pop
mov
dec
shlb
jnp
fadds
and
jmp
jg
jge
in
mov
add
sbb
mov
xchg
ss
cmp
rorb
jp
ret
xchg
imul
scas
negl
inc
xchg
xchg
testb
fwait
sbb
les
cmp
mov
mov
xchg
or
push
loope
sub
lcall
xchg
xchg
in
adc
mov
sbb
jg
jmp
xchg
scas
mov
out
or
aad
fadds
sub
int
int3
inc
es
mov
aam
lret
xor
enter
add
leave
stc
call
pop
inc
xchg
in
test
out
fiadds
pusha
pop
push
sbb
jp
jecxz
add
rol
xor
add
push
jns
cmp
cmp
arpl
iret
ficomps
pop
xchg
push
jne
rcpps
iret
movsb
dec
lods
das
aaa
and
fsubl
cld
cltd
imul
faddp
mov
add
leave
cmp
std
push
adc
das
lahf
mov
icebp
fnstcw
cltd
popa
ja
xor
fadds
pop
out
mov
add
mov
daa
push
fst
arpl
sub
es
push
daa
jbe
iret
push
adc
ljmp
jo
out
mov
fs
in
sahf
nop
lret
pop
xor
inc
dec
pop
add
or
fbstp
mov
jns
les
and
cmp
cmp
popa
lret
data16
aaa
push
in
cld
fildl
pushl
shlb
and
scas
in
xor
jns
cmc
pop
push
lret
out
mov
incl
sub
push
push
in
fucomi
cmp
xchg
and
mov
lret
pusha
lds
mov
les
pop
mov
mov
dec
mov
xor
pushf
pop
mov
lock
sub
ja
or
mov
add
lahf
xchg
pop
lds
sbb
ljmp
rcrl
je
aad
lcall
pop
aaa
shr
sbb
xchg
add
leave
stos
ret
pop
insb
cld
push
mov
outsb
je
push
test
adc
out
cmpsb
inc
fcomi
hlt
mov
push
repnz
and
in
dec
jne
mov
mov
and
cmp
loopne
loop
out
sbb
or
adc
jg
call
lcall
fsts
sub
movsl
insl
insb
test
ret
btr
jne
fildl
arpl
fwait
nop
adc
push
inc
mov
fadds
mov
iret
imul
push
adcl
sbb
mov
cmpsb
xchg
inc
clc
pop
ret
inc
outsb
mov
frstor
xchg
push
shll
jbe
inc
rcrb
out
mov
xor
jge
or
sbb
sti
in
shrb
pop
mov
mov
lea
mov
stos
pop
ss
movsl
das
mov
jnp
push
mov
aaa
loope
loopne
adc
repz
sbb
xor
adc
or
jns
aad
mov
lock
or
inc
pop
pop
inc
je
pushl
lock
inc
addr16
push
xchg
inc
mov
aam
mov
xchg
push
js
jle
jns
xchg
xor
dec
or
shll
add
std
and
and
in
das
cmp
popa
pushf
push
fwait
sti
xchg
jns
add
xor
in
and
sbb
xor
into
pop
mov
addr16
mov
jmp
pop
xchg
cmp
jle
xchg
jnp
fsubr
lahf
mov
std
xchg
mov
shrl
inc
inc
loopne
inc
out
enter
mov
and
shr
sub
pop
cmp
mov
mov
mov
xor
je
cmpsl
mov
test
iret
or
scas
sub
callw
lret
jbe
lds
mull
in
std
sbb
cmp
mov
ljmp
xchg
lcall
sar
aas
pop
cmpsl
mov
sub
outsb
movsb
push
lret
mov
xor
rorl
cmp
aam
movsl
outsl
aad
stc
mov
mov
test
cld
cmp
dec
jmp
inc
sbb
sbb
ds
movsl
push
mov
cmp
movsl
mov
popf
mov
lock
sbb
push
test
cli
popf
pop
cmc
add
sti
and
lret
sub
jbe
mov
fnstcw
fwait
inc
rcll
mov
add
sub
pop
inc
jmp
das
xor
mov
pop
mov
dec
test
cld
adc
or
inc
pop
push
rcl
pop
adc
dec
cmp
mov
mov
je,pn
push
adc
hlt
outsb
push
adc
mov
and
cmp
add
insb
mulb
and
fimull
and
adc
adc
imul
adc
cmp
popf
mov
rcl
test
dec
xor
pop
add
xchg
pop
xor
cltd
or
add
shrb
je
jnp
cld
add
loop
addr16
icebp
mov
adc
jle
jecxz
decb
and
lcall
aaa
lods
mov
daa
lret
mov
or
mov
out
lods
cmp
or
or
mov
or
jl
and
jbe
sarb
xchg
aam
insb
or
daa
mov
cmp
mov
or
sbb
inc
in
aaa
cmp
pop
add
jne
orb
cmc
xchg
inc
adc
fiadds
fiaddl
rclb
mov
out
pop
jmp
mov
xor
dec
pop
aam
jns
cmpsl
adc
ret
sub
sbb
dec
cli
or
push
out
jmp
inc
cmp
push
xlat
daa
call
clc
jns
sub
addr16
sarb
xchg
les
pop
mov
mov
dec
cwtl
pop
cld
jnp
xchg
int3
xchg
cmpsb
pop
xor
mov
push
add
pop
test
pushf
push
shl
ljmp
sbb
es
stc
fwait
call
and
xchg
pop
mov
shr
push
movsb
dec
push
lcall
mov
aaa
out
mov
push
int
jns
negb
mov
daa
cld
mov
jp
fmul
lcall
mov
mov
movsb
xchg
mov
std
mov
adc
enter
mov
movsb
into
test
out
mov
push
cwtl
bnd
das
in
add
ficompl
lea
fs
cld
cmp
es
inc
lea
mov
push
scas
or
sub
orl
in
jbe
mov
inc
add
fisubs
popa
cmp
pop
and
outsb
pop
add
xchg
ds
mov
sbbb
adc
or
fldl
outsb
out
mov
jo
pop
je
xor
imul
loop
jecxz
scas
push
fsubl
cmp
scas
or
xchg
mov
leave
mov
jp
sbb
cli
mov
or
jae
pop
sti
stos
bound
xor
pusha
cmpsl
sbb
mov
outsb
and
insb
stos
call
fimuls
xchg
ficomps
insl
and
jecxz
loopne
xchg
or
cmp
testb
ss
adc
js
insb
fldenv
mov
push
jns
inc
dec
idivl
cli
jae
std
jle
cmc
rcrb
inc
aas
lret
shr
cmp
pop
push
inc
cmpb
loope
enter
clc
aam
pop
pop
mov
rcll
or
or
push
outsb
mov
mov
outsl
or
dec
pop
xchg
std
test
cs
pop
pop
sbb
mov
mov
sbb
pop
fidivrs
lods
fcmovne
sbb
movsb
pop
jae
cmp
pop
mov
adc
push
jo
sub
insb
xchg
push
cmp
stos
ret
mov
mov
dec
test
in
lods
test
mov
fucomip
jae
insl
sub
jl
or
gs
dec
dec
pushaw
cmc
cmp
daa
das
cmp
hlt
mov
shrb
aas
jle
cld
jmp
cmp
sbb
outsl
fistl
in
inc
mov
pop
das
clc
xor
pop
and
push
pop
lahf
xor
or
xchg
push
imul
mov
and
stos
xchg
add
lea
jp
mov
imul
sbb
es
dec
pop
lret
push
jp
jnp
call
clc
jle
lea
mov
sub
or
mov
or
xchg
fdivrs
test
ss
shll
int
push
es
and
sbbl
je
js
mov
in
test
sub
in
sub
adc
subb
aam
daa
shrl
adc
xorb
xor
mov
fisubrl
ljmp
or
shlb
inc
lock
push
or
mov
cmpsl
sbb
aad
push
nop
mov
fdivrs
mov
push
and
pop
int
iret
rcl
push
dec
jl
xlat
add
mov
inc
and
call
and
jl
pop
jecxz
aad
mov
bound
inc
das
cmp
and
adcb
push
mov
test
bound
jmp
mov
out
push
bound
test
shrl
jle
shlb
xor
mov
cmp
loope
lcall
sbb
pop
cmc
in
into
popa
push
lret
or
mov
jmp
cld
negl
push
sub
inc
fwait
pop
stos
test
repnz
outsl
add
mov
clc
inc
xor
add
pop
and
adc
dec
ret
dec
lahf
pop
push
fldcw
repnz
icebp
sarl
xchg
jp
cmpsl
pop
outsb
mov
jne
scas
iret
mov
or
sub
call
popfw
add
int3
mov
add
pop
test
in
cs
mov
cli
pop
mov
mov
push
sbb
sbb
jl
and
add
pop
mov
inc
pop
stc
mov
sbb
int
lock
bound
and
inc
cltd
xor
stos
stos
fsubr
aas
aas
fldcw
inc
xor
sub
mov
andl
or
out
rcll
and
pop
fbstp
roll
ja
fmulp
dec
gs
mov
xor
lcall
adc
inc
ljmp
dec
mov
sub
add
lahf
jo
outsl
mov
in
aas
outsl
mov
push
and
shrb
pop
push
inc
icebp
push
jle
loop
out
icebp
test
pop
dec
dec
cmpsb
push
cld
fistl
jnp
adc
lds
popa
movsb
pop
xchg
lods
addl
test
xorl
mov
jg
xor
cli
push
mov
mov
leave
addr16
out
xchg
mov
sbb
call
fdivl
imul
inc
in
arpl
ret
fadds
lea
mov
sub
shrb
fs
leave
loope
testb
fistpl
cltd
add
ficoms
divl
stos
addr16
push
lods
cmp
inc
mov
mov
movsl
mov
push
cs
mov
fs
and
pop
dec
push
das
aas
ja
pop
cmp
popa
lret
lret
in
fisubl
fidivl
mov
sbb
shrb
cmp
pop
andb
push
int
or
and
out
lds
lods
xchg
add
push
push
jbe
aas
or
mov
stc
popa
cs
mov
xor
add
inc
and
push
add
mov
popf
lods
addr16
out
rcll
push
repz
adc
insb
leave
cmpsl
aaa
das
int3
iret
stos
xchg
ret
mov
pop
push
dec
daa
movntps
cwtl
add
or
repnz
das
aam
rol
movlps
mov
sub
jmp
nop
xchg
or
shlb
jno
mov
pop
int
cs
imul
in
or
movsb
sarb
xor
stc
sbb
pop
pop
add
mov
mov
dec
push
dec
mov
cmp
push
inc
pop
pop
and
mov
mov
scas
outsb
jge
xchg
movsl
push
pop
int
stc
ljmp
fisubrs
sub
dec
enter
call
cmp
jmp
outsb
clc
push
ja
jb
aam
cmc
sti
lret
cmp
mov
xchg
cltd
sub
pop
stos
add
mov
or
push
js
dec
pop
mov
sahf
mov
ja
popf
jnp
popa
xchg
jne
movsl
xchg
bnd
loop
arpl
adc
add
and
fs
adc
roll
sbb
mov
inc
fdivs
cmp
add
or
sub
xchg
shll
lret
push
bound
ret
or
push
cmp
cli
popf
sub
imul
and
pop
incb
push
loopne
xor
mov
mov
clc
cmp
mov
xorl
call
test
jmp
lahf
cs
mov
pop
or
pop
popa
or
imul
or
push
sub
aaa
fcomps
pop
sbb
jp
push
das
sbb
xor
pop
daa
mov
mov
outsl
inc
fwait
mov
fists
and
imul
in
pusha
leave
shlb
dec
out
movsl
test
test
jmp
out
outsb
in
call
jns
inc
or
add
or
mov
sbb
push
push
push
jg
shrl
testl
ret
and
xchg
aad
incl
mov
xchg
subl
jmp
aam
pop
dec
add
pop
lock
and
push
add
xchg
adc
out
popa
add
adc
jp
sbb
arpl
xchg
push
stos
cmpb
fidivl
fnstsw
jae
inc
xchg
add
stos
lock
or
addr16
pop
push
clc
dec
decl
bnd
stos
imul
xchg
push
jbe
aam
mov
mov
hlt
dec
in
and
movsb
stos
adc
in
fistpl
and
xchg
clc
imul
fldcw
and
cwtl
mov
aam
inc
xor
leave
cmp
xor
daa
dec
int3
arpl
adc
loope
fcmovne
push
and
das
mov
les
sub
popa
push
scas
sub
enter
cltd
ss
test
and
daa
or
repnz
xchg
mov
push
jle
mov
in
lods
dec
iret
fmul
enter
aam
push
pop
lds
repnz
jns
jbe
mov
test
lret
jmp
dec
test
jg
cmp
inc
jle
sub
hlt
jp
dec
xor
pop
fstps
pop
fsubrl
mov
mov
push
inc
mov
ja
cwtl
hlt
mov
scas
mov
sbb
data16
movsb
xchg
or
les
add
or
sarb
fldt
out
mov
test
inc
std
std
imul
mov
lds
cmpsb
je
movsl
pusha
imul
push
pop
daa
js
sbb
push
pop
cmc
lods
xchg
cmpsb
xchg
cmp
dec
cli
call
repz
add
and
rorl
sarl
adc
cmp
addr16
inc
jmp
dec
cld
jle
jge
add
xor
and
dec
das
adc
or
mov
sbb
daa
sub
sti
insl
pop
pop
or
icebp
sbb
adc
out
mov
lcall
fwait
push
insl
lea
clc
xchg
popa
jmp
insl
push
and
notl
cwtl
push
data16
rcll
add
aam
mov
or
mov
imul
mov
ss
mov
dec
mov
out
ret
cwtl
or
adc
sar
inc
sbb
call
push
lods
rorl
fldenv
outsb
mov
pop
mov
dec
jb
pop
xor
lret
cltd
setb
int3
sub
f2xm1
hlt
out
mov
out
lea
lahf
ja
add
ficoml
mov
sbb
mov
mov
mov
xor
test
lea
xchg
cld
pop
push
out
outsl
dec
jl
popf
dec
jl
ds
jne
test
in
sahf
nop
xchg
fisubl
push
fistpl
aas
cmp
push
jg
stos
insl
and
arpl
add
push
mov
shrl
jb
cmp
aas
fldt
and
nop
cmp
out
push
fistl
lret
sub
sbb
arpl
jecxz
mov
pop
mov
arpl
bound
push
fcmovb
add
pop
cmpsl
pop
xor
or
jb
mov
mov
mov
cmpsl
inc
addr16
pop
or
mov
dec
cmpsb
aad
mov
jb
in
mov
test
cltd
xor
and
stc
lock
xchg
cltd
xchg
add
aas
jg
and
push
jg
jae
ret
xchg
test
loope
sub
push
int
in
dec
leave
push
push
aam
adc
xchg
loope
mov
fadd
js
xchg
in
inc
pop
popa
adc
mov
shrl
les
cmpsl
mov
stc
ret
lods
jl
inc
sti
dec
outsb
sub
ja
ja
or
test
aam
and
adc
mov
fisttpll
push
cmp
call
mov
xlat
dec
popf
fsubr
int
mov
push
fldcw
xor
push
xchg
mov
inc
hlt
push
jecxz
mov
cmpsl
lds
rcrl
jg
push
inc
pop
ja
or
cmp
das
hlt
push
sbb
lods
lret
cmc
addr16
fcoms
sbb
sbb
mov
cmp
dec
pop
jnp
dec
sub
xlat
jnp
jg
adc
jns
jge
lock
adc
imul
push
push
xchg
mov
mov
test
or
mov
cmp
push
icebp
in
dec
sbb
cmp
sbb
in
shll
decb
cmpsb
rdpmc
inc
in
fstpl
cmpsb
fcompl
roll
in
fs
pop
cmpsl
mov
jae
xchg
or
ja
mov
pop
mov
or
pop
mov
cmpsl
mov
or
cmp
std
sub
mov
mov
xlat
pop
adc
lahf
int3
pop
sbb
test
fst
popa
in
inc
test
add
pop
jnp
cmpsb
jnp
jbe
pop
jb
xor
xor
jle
jg
stos
lods
fwait
gs
sti
sbb
rcr
and
jb
test
sub
push
incl
xchg
enter
fidivs
and
mov
sbb
jae
pop
jbe
fisubs
aaa
lds
lret
add
loop
mov
xor
outsl
cld
dec
xchg
push
adc
mov
inc
adc
in
pop
arpl
ret
icebp
xchg
push
mov
or
xor
das
aad
mov
sbb
out
cld
xor
loope
icebp
jecxz
mov
arpl
enter
sub
aaa
ret
mov
cmp
pop
xor
inc
pop
lea
push
pop
hlt
int
adc
push
push
daa
sub
pop
jmp
mov
and
je
js
fmuls
and
lods
dec
pop
insb
jmp
iret
dec
aaa
sbb
and
dec
push
fnsave
mov
and
sbb
addl
add
insb
fwait
repnz
pop
mov
andl
cs
adc
bnd
push
out
sbb
dec
pop
cld
and
xchg
test
sub
repz
popa
add
mov
outsb
sbb
xor
test
jg
xor
aaa
mov
xchg
mov
fldenv
sbb
aaa
popf
xchg
movsl
mov
ljmp
ret
inc
mov
int
jp
push
movq
rcrl
jnp
sbb
out
jp
shrb
ss
push
sarl
pop
sub
icebp
jg
xchg
cld
adc
pop
inc
cmp
loop
add
add
sub
xlat
jnp
mov
xlat
jg
cmp
out
movsb
in
pushf
in
int
mov
push
mov
addr16
loop
movsb
in
dec
jecxz
fidivl
movsb
xor
adc
int
addb
popf
aad
xor
jecxz
pop
lds
xor
xor
xchg
gs
clc
ror
in
stos
push
cld
adc
jnp
cmpb
pushf
mov
std
loop
std
jne
hlt
inc
mov
bound
push
adc
outsb
iret
cltd
lcall
gs
mov
movsl
stos
jg
xor
jo
dec
rolb
pusha
dec
outsl
jg
fmul
outsb
stos
loopne
mov
pop
fcomps
cpuid
les
fs
adc
inc
jb
rcrb
mov
fistps
jl
ret
xchg
out
mov
loop
push
sbb
cs
ret
fs
xchg
in
into
js
pop
test
add
jae
jp
dec
inc
cli
stc
jmp
jle
adc
xchg
jg
cs
jecxz
xor
and
xchg
hlt
push
sbb
jbe
mov
popf
aaa
pop
cmp
negb
arpl
adc
push
sub
mov
xchg
inc
add
int
inc
adc
add
test
mov
enter
push
lea
popa
in
mov
add
sbb
sub
out
push
std
fstps
inc
daa
sbb
rcrb
sub
jg
or
ds
je
mov
aam
jl
xchg
jbe
inc
cmpsl
push
ror
and
mov
inc
mov
sub
jp
mov
ds
and
adc
fs
loop
jne
jg
ljmp
jge
mov
das
out
add
cld
jg
mov
add
xchg
aad
xor
and
jecxz
dec
addl
jg
sarl
ljmp
ret
ja
inc
sub
outsb
outsb
sub
sub
inc
jp
orb
ljmp
xor
popf
clc
je
sbb
lret
pop
pop
jne
mov
jnp
and
in
insb
fsubp
adc
out
xchg
and
lea
mov
movsb
or
add
inc
mov
jae
mov
popf
xor
push
les
rol
xchg
test
mov
and
iret
mov
loope
push
aaa
imul
mov
xchg
nop
inc
xor
inc
or
movsb
dec
xor
push
add
mov
mov
shlb
jno
out
popf
add
xorl
gs
jno
xchg
cmpsl
xor
mov
fwait
fwait
pusha
mov
stc
xor
mov
cmp
pop
je
rcrl
fildl
sbb
imul
hlt
adc
subb
adc
ss
mov
sbb
int3
das
push
xchg
push
cld
lcall
add
pop
dec
push
adc
cmp
push
adc
in
add
js
and
clc
push
inc
xchg
mov
dec
lret
mov
les
lea
imul
jns
jbe
clc
lods
inc
ficomps
mov
jp
mov
xor
flds
xchg
addl
push
pop
push
iret
cltd
out
in
dec
cmpl
add
push
pushf
sub
sbb
push
out
push
gs
iret
addr16
cmpsl
test
test
enter
loopne
loopnew
mov
int3
mov
sub
gs
push
add
jne
jle
push
aam
pop
inc
push
rcrl
into
xor
cmp
cmp
sub
cmp
out
fisubl
and
mov
bound
cmpsb
fwait
inc
jge
mov
es
jns,pt
mov
mov
movsb
shll
test
loopne
nop
aam
sbb
push
push
xchg
int3
sub
lods
lds
add
arpl
jp
sahf
add
std
or
sub
cmp
dec
das
out
js
sub
and
xor
ficoml
lret
loope
push
push
pop
jne
xchg
fnsave
stos
test
sar
xchg
nop
ja
cmp
pop
dec
cmp
add
clc
insb
mov
pop
mov
stos
ds
adc
jecxz
insl
xchg
cwtl
fldz
or
add
test
in
mov
or
or
clc
pop
hlt
mov
into
cs
mov
adc
or
xchg
mov
or
and
cwtl
call
and
call
pop
dec
lahf
mov
cld
dec
mov
push
cmp
mov
popf
nop
dec
push
push
xchg
shl
push
not
aam
cmpsb
xchg
sbb
dec
in
cli
xchg
mov
lahf
pop
adc
xchg
adc
imul
jmp
adc
add
push
lds
dec
divl
cmpsl
or
inc
xor
insl
out
aad
push
push
xchg
pop
sbb
fisttpll
jnp
mov
leave
aad
fldcw
add
sbb
outsb
dec
insl
xchg
in
jno
xor
or
popa
add
ljmp
jo
test
aad
dec
lahf
xor
or
pop
neg
data16
in
mov
add
mov
cwtl
inc
es
jp
test
xor
sar
pop
push
bnd
rolb
xor
loopne
test
xchg
xor
xor
and
cmc
adc
fs
xchg
cmc
out
xchg
mov
xor
out
packuswb
test
mov
inc
cmp
push
stos
fldenv
jg
std
add
fdivrl
scas
lahf
sub
and
push
sbb
das
call
cs
and
cmpl
fimuls
push
sbb
mov
insl
dec
mov
push
inc
lret
js
pop
ret
adc
sub
pop
out
adc
stos
xchg
lds
adc
add
pop
cmp
insl
cmpsl
mov
push
push
jne
and
shr
sub
cmp
insb
stos
cwtl
jle
pop
sbb
sub
shlb
cltd
out
jbe
xor
test
popa
mov
int
loop
adc
in
cmpl
sub
cs
push
movsl
aas
mov
mov
mov
push
imulb
mov
sti
in
testb
inc
lcall
cmp
push
sub
push
mov
adc
popa
xor
orl
lahf
movsl
mov
inc
filds
cltd
cli
adc
push
cwtl
pop
testb
jle
xchg
call
sbb
mov
xchg
and
jl
jmp
in
mov
cmpb
or
adc
loope
inc
and
fimuls
jno
ss
sbb
cs
fimull
sbb
jp
dec
jp
mov
insb
pop
outsl
mov
repnz
test
mov
hlt
stos
mov
rcl
push
fiadds
xchg
leave
push
dec
shll
xchg
sbb
sahf
loope
cmp
xor
in
inc
sub
dec
das
mov
mov
aad
movsb
cmp
mov
loope
inc
iret
or
dec
mov
xor
popa
jg
fistl
ljmp
dec
xorl
cmp
insb
popa
inc
pop
mov
push
jl
cmp
and
ret
inc
mov
pop
push
ljmp
pop
xchg
outsb
rclb
adc
mov
dec
pop
inc
jae
popf
fistps
xor
sbb
fsubr
repz
add
mov
js
stc
inc
ds
lds
xchg
sub
mov
inc
cmp
jmp
or
cmp
rcll
mov
push
and
fidivl
jge
dec
fisubrs
lret
scas
pop
lahf
jne
mov
aad
xlat
dec
pushf
mov
das
pop
mov
dec
adc
pop
cltd
test
or
add
mov
shlb
out
dec
inc
mov
add
stc
cmc
idivl
ficomps
sbb
pop
mov
lods
popa
idiv
inc
lea
fs
mov
xorb
mov
xor
pop
mov
cmc
or
mov
movsl
popf
scas
cmpsb
lcall
inc
adc
icebp
dec
jo
insb
sti
inc
xchg
cmovae
cmp
lahf
mov
les
movsb
daa
cmp
cmp
mov
or
daa
sbb
lahf
out
pop
fmulp
inc
fadd
mov
faddl
mov
ret
arpl
aas
or
insl
cmpsl
rolb
test
mov
lock
scas
push
xlat
xor
sbb
pop
add
mov
push
or
sahf
repz
sbb
leave
and
fdivr
push
push
stos
or
xorb
cs
mov
test
jmp
pop
loope
cli
xorb
shll
ror
lcall
iret
add
hlt
pop
inc
cmc
gs
stos
call
out
stos
push
jno
push
pusha
je
lret
mov
or
xchg
stc
dec
rcr
stos
mov
inc
aad
push
scas
push
shl
sbb
movsb
cmpsl
push
aam
push
test
cmpsl
push
movsb
push
fstpl
jno
ret
daa
loope
in
and
push
decb
mov
push
sub
cmpsl
sbb
mov
adc
and
cmp
aam
jle
add
jge
lock
insl
xchg
in
loope
loop
add
ss
dec
lret
mov
jp
rolb
cmp
sub
rcrl
sarb
push
ret
jbe
adc
xor
in
leave
insl
adc
jnp
inc
aad
inc
aam
adc
stos
lods
adc
mov
dec
mov
sahf
sub
sbb
ja
mov
dec
fcmove
push
rol
dec
jns
jbe
jle
or
mov
aaa
mov
mov
sbb
mov
lret
cwtl
mov
jbe
jae
mov
sub
repz
ss
out
imul
in
push
jge
inc
or
rclb
jae
inc
ret
mov
adc
add
dec
int
out
pusha
dec
scas
cli
or
sbb
stos
jne
or
insb
cmp
cmpsb
stos
cli
dec
xor
cld
pop
lahf
sbb
mov
out
cmp
sub
mov
adc
inc
push
mov
pop
notb
fstpl
sub
pop
pop
xor
repnz
loope
push
push
xor
xchg
data16
into
xchg
stos
fdivl
jnp
mov
imul
scas
repz
ret
dec
aam
push
in
lahf
cmc
sub
call
cmpsb
sbb
loope
adc
jmp
rorb
mov
add
mov
push
in
pop
mov
int3
and
dec
stos
mov
jnp
mov
rol
xor
aas
push
ret
jne
pusha
and
mov
jae
inc
int3
jp
repnz
cmc
clc
movl
fsub
addr16
pushf
int
sbb
jg
push
sub
lcall
mov
add
push
in
xorb
push
xor
add
dec
leave
pop
push
clc
cmp
sub
mov
repz
cmp
addl
rcr
or
adc
and
jg
repz
cmpb
les
dec
inc
loopne
mov
dec
pop
sbb
arpl
mov
aas
inc
ficomps
push
inc
clc
add
inc
dec
adc
push
out
inc
xor
mov
in
inc
or
cwtl
mov
and
inc
adc
imul
xor
jge
movsl
pop
enter
push
popf
mov
pop
int
mov
out
insb
stos
rolb
outsl
jno
lret
xchg
dec
sbb
add
sub
adc
stos
sub
ret
push
and
dec
insl
mov
lahf
xchg
adc
push
mov
lods
iret
loop
xor
mov
dec
sub
les
les
aam
xor
mov
test
jnp
out
push
stc
into
pop
nop
pop
cmp
push
pop
adc
loopne
dec
pop
shl
adc
addr16
push
sbb
dec
xchg
mov
and
not
add
sbb
loop
cli
repnz
lahf
dec
lods
and
adc
jo
cmc
shlb
out
enter
jne
sbb
mov
sbb
cmp
cmp
test
shrb
vpsllw
mov
push
cmp
ret
xlat
dec
and
and
dec
imull
mov
sbb
pop
jle
cwtl
sti
ja
mov
sbb
and
or
adc
xchg
jbe
mov
jae
ss
movsl
cmp
add
cmc
lret
icebp
es
dec
stos
add
stos
lods
dec
je,pt
add
inc
pop
fists
aad
or
jnp
aas
jmp
sub
fisttps
fimull
rclb
idivb
scas
insb
adc
insl
imul
mov
lds
sbb
or
stos
mov
sub
xchg
fidivrs
ret
mov
jp
cmp
sbb
into
pusha
sub
daa
cwtl
sbb
xor
sub
jle
jecxz
insb
sub
in
or
subb
out
inc
cwtl
cs
jno
push
mov
add
push
inc
mov
dec
mov
push
or
test
push
mov
filds
jmp
mov
sub
int3
test
and
cs
sbb
mov
stc
rcll
mov
xchg
aad
int
push
and
jg
sub
inc
xchg
dec
sbb
adc
test
in
rclb
and
adc
cld
out
cwtl
in
nop
mov
pop
sub
lds
add
icebp
jg
xor
lods
jo
lea
pop
mov
jge
lahf
jl
aam
push
ja
and
dec
pop
and
pop
lea
sub
in
cmp
inc
test
adc
pop
sbb
jecxz
rclb
pop
test
je
fwait
add
jbe
lahf
jbe
pop
fcomp
add
sub
pop
and
loope
int
scas
cmp
sub
stos
pop
pop
and
cmpl
mov
xor
rcr
jmp
sub
cmp
js
sbb
inc
xor
in
mov
jg
mov
cmp
push
rcrb
push
loop
lods
adc
xchg
pop
cli
push
xchg
pushl
adc
jb
mov
andb
adc
insl
add
jne
xchg
popf
or
divl
push
shll
data16
clc
push
mov
pusha
or
and
mov
jle
add
sub
inc
push
ja
lahf
mov
sub
dec
xchg
pminsw
inc
inc
in
cwtl
adc
push
xlat
dec
xchg
outsl
adc
or
push
out
add
or
call
push
mov
lods
ja
cld
dec
sbb
test
jg
pop
out
ret
push
adc
add
dec
js
jae
push
call
mov
sbb
and
cmp
push
mov
shrb
jb
xchg
out
arpl
mov
or
sbb
xor
sub
rcll
lret
xchg
jg
push
push
inc
les
mov
cli
fisttps
adc
insb
fbstp
mov
sahf
jns
sub
add
push
and
daa
imul
cltd
stos
sbb
andl
lods
out
jge
xchg
cmp
push
testb
sbbl
and
gs
mov
and
dec
or
testb
cmp
push
or
hlt
adc
jne
sarb
fcmove
xchg
sub
lea
add
jae
dec
and
test
mov
aam
popf
jp
push
lcall
pushf
mov
add
push
stos
add
fld
mov
loop
add
xchg
pusha
call
push
mov
jecxz
dec
popa
jo
imul
dec
iret
sbb
jbe
aas
int3
fidivl
ret
add
adc
sub
cmpsb
mov
xor
sub
or
xchg
ss
sarl
aam
mov
cmp
push
push
xchg
mov
sbb
adc
stc
add
aam
test
fdivr
rcrb
icebp
imul
scas
sahf
je
loope
movsb
sbb
pop
dec
push
daa
sti
pop
cmpsb
imul
insl
test
push
adc
xchg
mov
xchg
cld
mov
pusha
push
fimull
pop
stc
pop
mov
or
sahf
bound
lods
loop
icebp
repnz
cmp
sbb
int3
in
mov
inc
mov
xchg
mov
cmp
in
std
scas
jae
sub
add
adc
push
test
dec
pop
xchg
xor
jne
stos
push
jne
aas
jbe
rorb
leave
faddp
mov
sub
out
inc
in
inc
xor
mov
add
out
xor
or
mov
ljmpw
and
sub
subl
fildl
inc
dec
mov
mov
xchg
xchg
xchg
jnp
nop
fidivs
inc
not
popa
jne
sbb
mov
iret
cmpsb
fs
shll
addr16
scas
ds
jg
dec
comiss
fldenv
ss
mov
pop
xchg
mov
popaw
divps
enter
and
nop
fcmovne
rorb
fcoml
into
stos
sbb
pop
in
ret
or
hlt
es
sub
ljmp
and
inc
mov
fisubrs
mov
cwtl
mov
out
shll
mov
dec
and
mov
movsb
sub
adc
out
adc
inc
and
jo
loop
sbb
or
sbb
mov
cmp
mov
movsb
addr16
adc
mov
jae
inc
cmp
jne
add
push
iret
xor
jns
or
into
in
ss
dec
or
push
lds
sub
inc
jge
icebp
stos
sahf
scas
jmp
lahf
xchg
xchg
mov
xchg
pop
cmp
fcoml
mov
adc
xor
push
or
movsb
sub
daa
aam
lock
xchg
push
inc
loopne
lds
inc
dec
mov
andb
mov
mov
addr16
inc
loop
pop
push
int
mov
ljmp
jae
es
xchg
repnz
xlat
je
ret
cli
arpl
push
cltd
enter
jle
xchg
add
jmp
mov
jo
scas
cltd
xchg
jg
mov
adc
or
pop
sbb
push
mov
lock
les
push
gs
sahf
cmp
pusha
in
dec
dec
jo
xlat
mov
cmc
adc
pop
inc
das
or
mov
imull
outsb
cs
sub
cmpb
sarl
enter
fadds
fdivrs
mov
push
mov
mov
arpl
repnz
push
dec
sbb
cld
pop
sbb
inc
cmpsb
loop
fwait
push
daa
push
mov
insb
test
imul
aas
inc
sar
hlt
dec
cmp
fsubrs
mov
xchg
sti
lret
mov
or
cwtl
ja
push
add
data16
pop
aad
cmp
add
pop
adc
insl
fisubl
insl
add
push
mov
sub
mov
pop
int
xor
ficomps
xchg
in
lret
pop
mov
sbb
clc
rcll
scas
adc
out
leave
mov
sbb
mov
push
sub
mov
and
stos
roll
pop
or
mov
insl
les
adc
mov
xchg
jo
inc
mov
es
cmp
sub
enter
pop
lret
mov
cmc
stc
pusha
or
pop
test
mov
movsl
jnp
xor
mov
pop
lock
lods
pop
lret
stos
adc
sbb
repz
xchg
mov
loop
sbb
sub
test
push
pop
into
xchg
aam
jmp
fs
into
xor
fldcw
and
xchg
jmp
repz
xchg
cmp
lcall
sub
jb
dec
lret
into
movsl
add
aaa
aas
sbb
stos
rorb
mov
cld
adc
mov
ret
inc
es
push
or
int3
pop
or
aaa
mov
mov
jb
insl
inc
loopne
jae
jnp
add
repnz
cld
jecxz
xchg
pop
dec
inc
test
lods
fidivs
mov
mov
or
mov
int
out
push
inc
jns
movsl
test
popf
out
hlt
and
mov
adc
push
pop
jns
roll
stc
icebp
mov
das
mov
and
or
add
roll
call
popf
loopne
in
sub
lret
ret
scas
sub
aas
jo
adc
jae
movnti
and
xchg
pop
sub
or
jno
mov
dec
clc
push
mov
fisubs
jb
jo
or
iret
inc
push
rcr
or
mov
rcr
fs
rclb
lcall
sar
push
cmc
icebp
push
fnstsw
or
hlt
inc
addl
mov
mull
xor
mov
mov
sti
ret
cmpb
fwait
xor
pushf
or
loopne
or
lcall
jb
push
xlat
or
sti
mov
es
into
push
clc
jno
inc
aad
lods
iret
pop
push
aas
pop
mov
dec
dec
cmp
popf
popa
ds
inc
mov
xor
mov
pop
cmp
xchg
lcall
xorl
cmc
mov
and
cwtl
push
stos
outsb
cmpsb
mov
pop
mov
pmaxsw
push
pushf
dec
sbb
dec
lock
mov
pop
or
jae
sub
jmp
popa
push
cltd
mov
jmp
push
cltd
repnz
scas
test
fs
je
or
xchg
and
jns
jb
insb
xchg
push
inc
imul
popf
and
jnp
popa
push
xchg
add
cmp
or
scas
adc
mov
add
out
mov
repz
hlt
dec
sub
adc
clc
mov
ret
sbb
popa
iret
inc
int
jno
sbb
xchg
nopl
adc
and
lods
mov
adc
jns
and
adc
cmp
mov
push
in
push
lret
lret
movsl
mov
inc
lret
pop
repnz
pushf
cmc
jo
xchg
shll
jl
sub
xchg
mov
and
and
jecxz
mov
loop
mov
cli
push
daa
pop
daa
popa
mov
adc
add
out
adc
pop
loop
mov
jg
aam
in
sbb
push
out
std
or
je
mov
scas
push
fldenv
add
inc
pop
cs
mov
or
leave
jnp
cli
fildll
sbb
jno
out
and
sbb
adc
scas
iret
rcrl
cld
and
aam
lods
cmp
jecxz
ds
pop
sbb
sub
mov
test
or
fsubs
in
pop
pop
jmp
jl
xchg
clc
lea
loope
insl
mov
fsubrs
pop
mov
out
add
push
jle
xor
xor
and
into
fsts
das
cmp
xchg
sbb
dec
psllw
pop
inc
test
mov
mov
andb
out
lret
mov
ds
fwait
es
xlat
outsb
cltd
jge
lods
jnp
sub
push
dec
imul
cli
mov
scas
mov
push
popf
das
sbb
imul
xor
add
or
mov
xor
mov
sbb
icebp
es
add
fcomps
leave
cmpsb
jae
popa
adc
dec
bound
rorl
in
push
push
xor
enter
cs
loope
fcomi
aas
cmc
jge
push
popa
xchg
daa
cmp
cbtw
and
mov
shl
mov
mov
test
fcoms
mov
and
fists
and
popl
pop
pop
test
xor
nop
push
or
sbb
or
jmp
mov
lea
jecxz
xchg
dec
xchg
rolb
out
cmp
lds
pop
stc
cmc
movsb
ds
shlb
test
adc
jl
into
bound
dec
jg
out
shrb
adc
push
jmp
mov
mov
add
test
mov
mov
jge
xor
mov
es
xchg
adc
lea
mov
std
push
lahf
jb
pop
or
adc
sahf
fsub
jb
pop
js
pop
popf
mov
mov
pop
lcall
loope
iret
pop
jnp
or
dec
push
jbe
xchg
shll
mov
cmp
lcall
out
loope
xor
out
cs
sub
movsl
jbe,pt
push
icebp
mov
into
inc
aam
fwait
xchg
test
sbb
mull
adc
push
xor
rol
mov
inc
push
inc
stos
gs
xorl
xchg
outsb
sub
jp
pop
ds
cmp
and
cli
subb
in
pop
ret
jp
fstpl
cmp
push
outsl
cmp
adc
call
aas
jl
jbe
faddl
xchg
push
test
sub
ret
insb
mov
cli
divb
cs
push
fwait
mov
call
sbb
or
adc
mov
pop
shl
mov
jecxz
mov
ss
mov
arpl
xchg
andb
cmp
inc
sahf
xchg
and
cmpb
jg
sbb
mov
mov
fisubl
shlb
sarb
xchg
xor
adc
movsb
in
inc
xchg
loop
xchg
lods
loop
imul
int
pop
pop
fmull
int
adc
dec
add
pop
mov
cltd
lahf
insb
adc
lock
mov
out
mov
mov
jle
xor
mov
mov
cs
cmpb
pop
bound
push
add
pop
push
mov
std
fwait
mov
push
inc
dec
mov
mov
xor
dec
jg
movsb
pop
jnp
mov
into
repnz
inc
mov
imul
call
inc
mov
jne
jnp
insb
data16
insb
push
cmpl
movsb
insb
xor
lds
mov
imul
pop
dec
and
mov
sbb
loopne
jle
xchg
jnp
jmp
rcr
mov
popl
iret
xlat
cmp
add
xchg
orl
iret
jl
mov
cmpsl
bnd
pop
and
mov
shl
loope
mov
nop
inc
enter
mov
int3
ds
out
js
shlb
sahf
lahf
adc
mov
inc
je
dec
vfrczps
cli
push
mov
sub
les
dec
mov
push
sbb
jne
mov
sub
popa
fs
notl
sahf
popa
push
push
sub
pop
fcmovnb
mov
enter
fistps
or
pop
movsb
add
push
data16
mov
std
int3
mov
roll
into
sbbb
cmp
push
sti
and
inc
pop
outsb
cmp
pushl
insl
fwait
or
rcrb
dec
popf
pushf
lret
add
mov
sub
cmp
ja
or
xor
hlt
fdivs
movsb
xchg
jne
jne
das
pmullw
or
mov
cld
imul
fisubrl
enter
sub
cmp
xchg
ficompl
repnz
xchg
lods
add
inc
push
pop
bound
in
pusha
cmp
leave
mov
push
mov
stos
addr16
int
xchg
mov
dec
std
dec
movsl
loope
bound
xor
and
push
pop
cmp
and
inc
pop
add
scas
sub
shl
sarl
xor
dec
jnp
out
jnp
sarl
xchg
fcmove
fnstsw
xchg
xchg
repnz
pop
dec
cmp
or
call
sahf
pop
mov
jae
inc
add
push
adc
xor
cld
leave
mov
jp
jmp
aad
lret
call
daa
inc
push
sbb
add
popa
addr16
loopne
mov
mov
imul
mov
ljmp
ficompl
iret
dec
adc
pop
es
sbb
ficoml
pop
cwtl
push
jl
test
lock
push
mov
enter
add
cmpsb
inc
adc
std
sub
fcomp
cs
popf
cltd
sub
push
lea
fcomps
or
add
insb
insb
cwtl
mov
sbb
mov
je
shl
push
jg
xchg
pop
pop
arpl
mov
or
ljmp
mov
andb
test
inc
pop
add
jle
call
inc
dec
pop
cwtl
or
and
add
push
andl
outsb
jge
pop
popf
int
mov
pop
mov
mov
pushf
aad
in
movsb
dec
stos
mov
xchg
mov
adc
data16
and
and
jle
call
leave
xor
stos
jmp
cmc
push
dec
outsl
pop
mov
data16
scas
xchg
or
popa
call
inc
jp
xchg
jecxz
dec
push
push
arpl
sbb
testl
scas
mov
push
jbe
arpl
cmpsl
add
repz
in
pop
mov
nop
out
push
scas
repnz
push
sub
idivb
inc
cli
out
sub
enter
xchg
mov
sub
scas
and
shrb
paddw
xchg
popa
sbb
insb
popa
lcall
mov
call
movsl
lahf
pop
jg
aas
bound
addr16
ficoms
mov
adc
cs
and
push
xlat
dec
out
lods
adc
enter
rol
mov
push
add
jmp
jne
pop
call
mov
fs
jne
jl
cli
jae
sbb
jo
stos
rcll
aas
xor
insl
test
out
and
out
aam
lcall
shll
inc
jl
push
enter
setns
lods
add
in
mov
hlt
cmc
mov
cwtl
mov
imul
sub
adc
mov
lock
lcall
inc
cmp
sub
jmp
push
mov
aam
sbb
repnz
arpl
mov
sub
loopne
sti
arpl
lret
scas
xchg
nop
inc
enter
xchg
mov
cmpsb
movsb
movsl
adc
cmp
stos
lock
out
sbb
loop
shlb
or
mov
add
sbb
scas
popa
jbe
rcl
pusha
dec
pop
sbb
xor
pop
mov
int3
ds
aas
mov
xor
call
movsb
incb
adc
scas
add
js
loope
clc
fs
repz
lahf
and
sbb
int
pop
jno
clc
lret
cmpsl
cmp
and
adc
rclb
adc
mov
adc
push
fucom
ds
mov
mov
pop
cli
arpl
fs
ja
mov
xlat
not
cmp
mov
iret
pop
push
xchg
jne
sbb
inc
push
cmp
cmp
lret
gs
into
imul
aaa
push
imulb
and
ds
shlb
dec
xchg
pop
xchg
cld
dec
xor
adc
cmp
aas
scas
push
lret
cmpsl
nop
decb
mov
dec
pop
rorb
mov
jle
leave
jo
dec
das
imul
pusha
idiv
push
shrl
repz
sub
or
ss
sub
dec
out
mov
inc
pop
aam
and
dec
or
shll
lea
and
rcr
in
icebp
pop
inc
jnp
push
lds
pusha
jae,pn
js
lock
shrl
aaa
or
xor
pop
push
pop
rol
mov
je
daa
xor
mov
sbb
jmp
jo
jl
jp
push
inc
inc
arpl
in
jp
into
add
mov
xchg
pusha
mov
sub
stos
pop
pop
jmp
jecxz
fcmovbe
outsl
jge
xchg
pop
jne
imul
sahf
mov
mov
xor
jo
incb
xchg
pop
and
std
clc
outsb
xor
inc
mov
daa
test
jle
push
mov
and
int3
or
inc
mov
sbb
push
sbb
jg
pop
mov
aad
into
sbb
rcrl
test
and
test
push
cld
push
mov
push
fdivrs
repnz
ret
xchg
inc
and
subb
push
xchg
mull
js
cmp
mov
out
outsb
iret
add
jg
jle
pop
insl
lahf
lock
add
mov
fwait
pop
push
mov
sahf
mov
bound
icebp
add
rorb
cmp
aaa
inc
dec
cmp
add
cwtl
ja
dec
or
sub
jno
dec
mov
fidivl
fisubrs
pop
aam
es
xor
push
mov
clc
popf
jmp
jno
pushf
cmp
lahf
in
mov
adc
repnz
push
mov
or
test
or
lcall
ret
and
xchg
lea
test
add
mov
pop
or
repz
call
push
std
add
daa
loopne
das
push
and
loope
insb
cli
push
icebp
add
xchg
loop
pop
lods
add
push
xor
and
idivl
dec
lock
rclb
xchg
sbb
movsl
jae
and
loop
ret
pop
sbb
or
into
add
sub
mov
stos
cmp
xor
loop
adc
or
loope
nop
mov
cmc
pop
mov
test
push
mov
nop
ret
jge
jae
inc
sti
stos
ret
fidivs
adc
push
insl
inc
mov
scas
mov
repnz
mov
add
adc
lds
lret
xchg
push
in
movsl
daa
pushf
push
jmp
sub
sub
lret
push
pop
fisubl
lret
loop
or
out
test
fsts
jne
xor
inc
or
jbe
add
testb
mov
aaa
insb
icebp
mov
mov
int
jecxz
rol
push
shlb
sub
aad
outsb
out
in
dec
pushf
mov
inc
dec
pop
orl
icebp
dec
add
and
fisttps
mov
test
andb
cli
cmp
sub
xchg
daa
fistl
pop
jnp
enter
pop
aad
cmpsb
cmp
xchg
adc
xchg
xor
or
insl
add
inc
lcall
jp
gs
cmpsl
idivb
fcmovu
daa
out
repz
dec
rcrl
and
addr16
stos
ficomps
lret
sbb
mov
insb
inc
pop
dec
ror
mov
cwtl
int3
mov
les
in
sbb
sub
push
fsubr
cld
gs
shrd
in
pop
daa
fisubs
imul
mov
rol
mov
xor
jl
xor
jns
xorb
fstpl
cwtl
movsb
imul
mov
push
jno
cmpsl
insb
pop
imul
jne
jmp
mov
add
fwait
jbe
mov
dec
in
ss
pop
add
outsb
hlt
push
cmp
aam
repnz
fildll
cmc
mov
xchg
jns
scas
lret
mov
dec
mov
int3
in
sub
adc
jnp
sub
arpl
loop
fcompl
ds
adc
in
dec
in
xchg
cmp
imul
add
xor
je
out
mov
repnz
mov
inc
cld
push
ret
cmpl
push
nop
pop
loopne
xchg
mov
dec
lods
scas
aam
ja
fnstenv
outsb
inc
in
test
orl
xor
inc
dec
pop
rep
xor
jne
jle
and
mov
pushf
stc
in
mov
xchg
dec
xor
test
xchg
nop
pop
mov
or
mov
dec
jns
sbb
and
out
jp
es
ficomps
popf
push
push
imul
lret
mov
sbb
jmp
dec
imul
push
push
movl
cmp
mov
mov
dec
aad
lods
fisttpl
push
lahf
mov
clc
lret
add
leave
shl
pop
push
mov
sub
dec
xorb
mov
sub
add
lret
jnp
addr16
fmuls
bound
or
push
repz
lods
and
shl
lods
idivl
sti
and
mov
xchg
inc
fwait
outsb
shl
loop
dec
push
js
cmpl
rcrb
std
or
stos
push
shlb
rorb
sbb
jbe
jmp
or
aas
jmp
add
cmp
xor
fs
ss
loop
stos
outsl
mov
sbb
add
fbstp
out
cmp
dec
ficomps
popf
mov
sub
jno
out
mov
stos
or
dec
inc
pop
cmp
daa
in
sarb
test
cmpsl
into
add
pop
fistpll
pop
jg
or
leave
js
or
insb
outsb
xor
or
testl
inc
cltd
scas
pop
insb
repz
xor
cmpsb
call
pop
fcmovbe
push
or
pop
sti
imul
mov
adc
mov
push
sbb
rclb
cmpsb
fs
xchg
in
jo
xchg
adc
xchg
sahf
lcall
cmpsl
inc
cmp
xor
js
cltd
aam
inc
jp
xchg
into
pushf
mov
ja
mov
inc
lcall
fisttpll
sbbb
js
repnz
push
cmpsl
outsl
aaa
xlat
pop
je
fcoml
and
test
bound
mov
push
stos
stos
adc
sbb
insb
into
dec
mov
inc
lcall
gs
lret
sbb
data16
nop
add
lds
outsl
xor
test
mov
rcrb
and
add
add
andl
test
enter
adc
xchg
sti
mov
sti
int3
pop
rorb
arpl
pop
stos
pop
inc
push
ja
out
dec
jge
cltd
inc
pop
mov
push
xor
inc
jp
filds
and
mov
xchg
repz
cmpb
mov
into
loope
push
lret
inc
lea
push
xchg
dec
sbb
add
fcoms
jmp
inc
enter
mov
cmpsb
xchg
pop
insl
clc
sub
aad
mov
add
or
filds
mov
mov
arpl
lods
int3
push
dec
sbb
insl
push
sbb
cli
pusha
adc
imul
xchg
sarb
mov
pusha
jle
mov
ja
cmp
fistpll
pop
jmp
adc
test
movb
jge
push
mov
dec
jl
jns
mov
push
xorl
mov
lods
dec
lds
sub
ljmp
cmp
int3
shl
lret
mov
xchg
or
or
add
movsb
sub
repz
es
xchg
jecxz
push
mov
stos
sbb
es
ljmp
cmpsl
sbb
mov
mov
pop
mov
sub
or
and
or
jne
dec
push
pop
jge
mov
or
mov
lret
inc
add
xchg
aas
jbe
mov
lea
fwait
iret
pop
add
cld
pop
cld
mov
test
lret
mov
mov
pusha
aaa
cld
mov
sbb
out
mov
stos
cmp
into
push
pop
loope
dec
mov
scas
data16
jecxz
pushl
xchg
push
xchg
testb
dec
fstpl
imul
int3
cmp
sub
shrb
pop
jg
dec
inc
rcr
xchg
push
test
xchg
xchg
and
dec
xlat
and
adc
push
dec
add
xor
loopne
lcall
inc
call
lods
dec
ja
aas
hlt
cmpsl
add
lea
pushf
pop
unpckhps
xchg
dec
loope
lret
pop
sbb
jmp
push
pushf
in
or
mov
or
dec
scas
addr16
int3
cltd
lret
push
jp
xor
test
fucomi
sbb
pop
mov
daa
hlt
sub
test
mov
push
jbe
xor
mov
sub
int
and
lahf
dec
mov
inc
sub
pop
pop
mov
stos
xchg
push
pop
pushl
int
in
pop
in
test
mov
loope
fnsave
mov
sbb
imul
imul
addr16
imul
repnz
jge
js
int
adc
cld
lret
in
cwtl
mov
outsl
movsb
movsl
mov
cmpb
mov
sub
and
sub
lods
loopne
and
cmp
pop
out
ds
xor
push
xchg
adc
push
das
or
std
ja
lods
mov
push
push
xlat
outsb
xchg
movsb
out
movsl
jp
pop
adc
inc
cli
test
cmc
and
testb
and
lret
mov
cmp
jno
pcmpeqb
lahf
mov
dec
add
cmpsb
sbb
and
inc
push
or
repnz
daa
faddl
dec
push
sbb
lods
loope
inc
dec
jns
adc
jbe
in
loope
adc
add
repz
xchg
iret
cmpsb
lcall
out
gs
xchg
cs
jb
and
xchg
jbe
clc
lahf
mov
mov
pop
adc
das
and
ja
or
inc
or
jge
mov
cli
hlt
xchg
sar
push
out
cmp
movsb
jns
in
dec
push
add
inc
or
sbb
ljmp
clc
sub
and
fdivs
or
dec
js
stos
scas
dec
jecxz
stos
xor
lahf
sub
mov
push
xor
cmp
stos
pop
and
cmp
je
nop
pop
inc
cmp
jg
outsl
jnp
push
ficoms
loop
push
mov
xlat
into
or
clc
pop
dec
ret
fwait
push
aad
into
sbb
das
in
xchg
mov
imul
xchg
imul
hlt
jbe
sub
pop
cmp
sub
xchg
aad
aaa
arpl
sbb
mov
sti
mov
sbb
iret
jmp
lock
fisttps
and
mov
sbb
push
in
mov
out
imul
je
mov
in
test
adc
sbbl
cld
push
xor
xchg
imul
scas
int3
jb
shll
lods
mov
cmp
je
mov
sti
pop
cmp
push
push
sbb
cmp
pop
sbb
jo
rcr
jl
mov
xchg
mov
push
in
adc
aad
test
push
inc
insb
mov
mov
push
sbb
sbb
mov
loope
pop
adc
pushf
push
mov
mov
insl
lea
lahf
les
mov
jno
cmpsl
adc
xchg
dec
jae
test
iret
cltd
pop
adc
std
stc
imul
jg
aad
jle
outsl
adc
inc
dec
movsb
mov
clc
mov
fs
imul
jge
jmp
mov
xchg
pop
xchg
jne
sbb
fisttps
or
fwait
and
outsl
orb
sub
ja
mov
lea
les
iret
pop
aaa
or
cwtl
cmp
cmc
dec
leave
add
mov
imul
cld
gs
fldlg2
aas
lds
mov
and
iret
sub
mov
das
hlt
mov
and
iret
add
ret
aad
lods
or
iret
cmp
cld
lds
mov
scas
arpl
jmp
les
les
dec
ficoms
addr16
mov
popa
cmp
adc
xor
xchg
inc
or
ds
jg
jae
mov
sbb
rorl
mulb
test
add
jge
and
movsb
mov
adc
leave
cwtl
sahf
add
jbe
mov
pop
pop
test
push
das
cld
sub
xlat
lret
xlat
mov
pop
js
aam
dec
jns
mov
push
fs
mov
or
mov
adc
test
mov
dec
orb
das
sub
out
dec
adc
push
dec
pop
cmpsb
cmpsl
imul
scas
pop
popf
sbb
cmp
xchg
test
or
add
adc
dec
cmp
sti
mov
inc
sub
add
sub
fwait
dec
icebp
or
pop
insb
sub
lds
xchg
subl
sbb
inc
cmp
aas
dec
mov
lock
push
adc
cmpsl
xchg
sub
pop
sbb
mov
mov
cmc
sub
mov
xorl
sbb
mov
adc
sbb
dec
orl
jb
push
push
dec
add
loopne
dec
popf
dec
dec
pop
and
in
pop
jne
adc
jae
fimuls
fwait
scas
and
lcall
jge
xchg
and
jno
stos
test
movl
addr16
adc
out
xor
mov
test
inc
dec
push
out
sarl
push
movsl
xchg
or
inc
push
scas
dec
pop
clc
mov
inc
jbe
movsb
mov
mov
cli
add
stos
or
add
lock
xchg
fidivl
dec
out
rcpps
lods
inc
xor
call
xchg
test
add
mov
dec
pop
das
shrb
adc
inc
data16
popw
mov
gs
inc
adc
dec
cmpsb
adc
lahf
push
out
mov
sub
mov
aas
dec
subb
xchg
xor
std
movsl
mov
jge
add
dec
or
xlat
or
or
cmp
jnp
or
mov
fldt
jb
movsl
and
sub
pop
rcrl
mov
sbb
and
fisubs
sbb
and
mov
jns
sub
pop
inc
addl
and
adc
push
cmpb
mov
popf
pusha
fwait
lock
mov
adc
push
mov
pusha
push
sbb
rcll
fsubrs
pop
xorb
adc
xchg
rcl
push
jl
cld
test
mov
cwtl
scas
lods
mov
jnp
fs
daa
in
and
cmpsb
leave
mov
out
and
aas
cmp
cmp
rorb
jecxz
faddl
xchg
sti
mov
dec
ds
shlb
mov
and
lock
das
insl
mov
add
repnz
cmp
aaa
je
movsb
mov
cmp
push
cmp
jecxz
xchg
add
cmc
in
mov
pop
out
cmp
xor
mov
idiv
mov
pop
and
sub
out
adc
dec
mov
cmpsl
jno
bound
cmc
xor
cld
cmp
jne
cmpsl
cmpb
movsb
pop
shll
xchg
mov
int
adc
into
repnz
jno
mov
push
mov
daa
js
push
sub
xor
test
add
lret
xchg
lcall
xlat
mov
gs
loopne
push
outsb
in
mov
sbb
mov
outsl
pop
jb
out
mov
mov
popf
sahf
movsl
call
xchg
jge
fxch
push
push
cmp
jle
mov
les
and
mov
mov
push
mov
ret
push
dec
or
mov
insb
mov
xchg
or
icebp
add
pop
xchg
and
in
int
xor
jle
std
xor
aas
je
outsl
filds
and
scas
mov
and
out
add
leave
sub
mov
mov
cltd
dec
roll
adc
orw
out
xchg
lock
repnz
outsl
pusha
jne
ja
leave
dec
out
and
out
cli
inc
mov
lods
lret
add
int3
cmpb
push
add
push
push
rep
pop
enter
lea
gs
xor
xchg
dec
fdivr
out
fucomip
lret
jmp
imul
and
pusha
adc
adc
and
push
ljmp
xor
ficomps
ret
and
shlb
cmp
gs
and
cmp
aas
outsl
pop
adc
popa
mov
aam
xor
daa
aam
arpl
xchg
cs
js
mov
mov
into
xchg
sbb
sub
int3
push
xchg
inc
mov
pop
mov
cmp
jo
rorb
lahf
push
arpl
xorb
dec
sub
enter
aas
ss
xchg
and
push
cmpsl
stc
popa
dec
dec
sbb
icebp
mov
stos
mov
inc
inc
repz
aam
mov
adc
rcrl
xlat
push
sub
cmp
rol
xchg
xor
mov
vsqrtss
or
out
or
in
fisttps
mov
jmp
dec
jno
jne
push
mov
inc
mov
mov
inc
jge
xchg
hlt
cmpxchg
cmc
es
add
and
test
xor
js
mov
sub
mov
cmpsb
xor
outsl
xchg
cmp
push
dec
scas
out
into
jo
jmp
shlb
sub
pop
dec
imul
sub
test
divb
popa
lcall
cmp
js
add
sbb
dec
cli
div
scas
and
mov
in
mov
fistpl
inc
cs
cmp
test
jge
pusha
inc
mov
jnp
mov
in
push
mov
cmp
icebp
enter
shll
inc
add
shll
shrl
and
xchg
fwait
cmp
out
addr16
inc
mov
dec
das
stos
pusha
dec
inc
or
add
dec
std
daa
pop
or
add
add
and
clc
pusha
jnp
jg
adc
fildll
popf
xor
cmp
setne
shlb
js
sub
les
or
inc
pop
or
xor
xchg
xor
add
cld
subb
ds
mov
std
adcb
add
test
jle
scas
pop
mov
xchg
jb
jecxz
xchg
daa
je
repz
hlt
dec
sbbl
pusha
fists
xlat
xchg
jge
std
clc
sbb
rcr
and
pushf
mov
or
jecxz
fs
or
pop
test
paddq
xchg
out
mov
mov
arpl
inc
stc
xor
jge
pusha
add
ret
sbb
rolb
sub
fwait
cld
inc
cwtl
jbe
xchg
mov
out
cwtl
out
dec
stos
xchg
nop
jmp
xchg
adc
test
push
outsb
sahf
sub
or
push
mov
jge
pop
sbb
jge
inc
je
push
push
mov
xchg
add
in
and
roll
insb
pop
pop
sbb
mov
jae
xor
leave
mov
push
stc
popf
jge
ss
xchg
cltd
xchg
mov
arpl
push
leave
aam
fs
fidivl
cmc
idivb
sub
js
fists
or
leave
jns
and
lea
rorl
mov
or
lret
pushf
mov
add
cwtl
jne
lods
mov
lret
cmp
je
mov
je
dec
pop
out
xchg
pop
in
mov
mov
sahf
pop
jmp
mov
or
sub
scas
in
add
xor
ds
add
sbbl
push
mov
adc
and
cmp
fcoms
and
jb
and
sti
jns
cs
pop
lret
out
and
add
test
sbb
sbb
outsl
or
stos
mov
test
cltd
iret
sarl
push
dec
cmp
dec
es
cmp
cmp
popa
mov
leave
arpl
mov
or
cli
cli
les
sbb
shr
inc
ds
add
je
lea
shlb
fsin
adc
sar
sbb
sbb
repnz
gs
jo
push
sub
scas
push
push
cmp
cs
les
sub
pop
roll
mov
sbb
cmp
mov
loopne
fcoms
xor
mov
and
dec
loope
or
lahf
fdivrs
aas
aam
mov
add
in
add
cmp
xor
inc
and
js
mov
mov
sub
dec
nop
stc
jl
dec
lret
pop
js
inc
xchg
out
and
xchg
iret
adc
xchg
shll
xor
cmpsb
mov
cmp
rdtsc
stc
xor
add
cltd
inc
out
sarl
add
pop
in
and
dec
push
mov
and
mov
push
test
and
lock
xchg
outsl
inc
or
xor
fwait
xchg
in
enter
dec
or
and
add
fdivr
push
pop
cld
pop
sbb
or
lock
lahf
push
filds
sub
aaa
mov
je
lahf
inc
add
negb
mov
or
xchg
mov
lcall
adc
in
movsl
inc
fcomps
mov
test
lcall
cmc
jle
cmpsb
shr
mov
xchg
cmpsl
out
sbb
mov
xchg
ret
lea
popa
rcrl
das
fcompl
dec
cli
and
stos
fidivs
inc
lahf
int3
adc
mov
xorl
xchg
pop
push
push
xor
jmp
mov
out
lods
mov
sub
xorb
sub
or
ds
mov
pusha
daa
sahf
cmp
ds
sub
cmp
incb
leave
xchg
adc
jg
pop
pop
mov
shll
ds
mov
out
xchg
xchg
cwtl
mov
dec
push
jmp
sbb
int
mov
jle
adcb
sbb
sub
pop
aaa
pop
jmp
xor
or
int
pusha
repz
sbb
loop
or
xor
scas
xchg
lds
daa
inc
sub
pop
xor
test
aam
sete
aas
movsl
mov
shl
mov
push
add
pop
pop
cs
mov
imul
mov
arpl
inc
ljmp
arpl
push
in
out
inc
add
sub
ret
int3
xchg
mov
adc
imul
fistpl
hlt
idiv
ret
jp
push
jae
cwtl
in
jb
and
pop
xor
jp
testb
and
mov
xchg
inc
mov
pop
fwait
insb
dec
xchg
addr16
ja
sbbl
out
hlt
pop
lahf
fbstp
jns
xor
push
sub
and
dec
xchg
mov
push
hlt
lret
cmp
shll
pop
pusha
dec
jl
hlt
xor
scas
jp
fildl
push
adc
enter
jb
jmp
xlat
inc
fwait
and
in
mov
test
inc
fcomps
insb
pop
sbb
sub
sti
and
cmp
dec
dec
lock
dec
adc
popf
clc
mov
fiadds
inc
xchg
inc
sar
mov
dec
push
push
lods
test
pop
dec
inc
out
iret
subl
push
cwtl
cs
inc
lea
ja
xchg
mov
push
lret
je
icebp
push
movsb
xor
adc
jbe
rcll
stos
and
lea
dec
shrl
dec
pop
cmp
jmp
jae
mov
jo
cld
mov
mov
subl
xchg
ret
cmpsb
cmp
xchg
dec
sub
mov
and
or
or
jae
out
pusha
movl
mov
dec
push
and
push
loopew
cmp
pop
sbb
ret
into
stc
es
fidivs
cmp
daa
mov
js
xlat
and
dec
xor
imul
jno
add
adc
push
aam
and
xchg
jp
fstps
and
insb
xchg
or
jmp
lods
adc
fadd
add
stos
jnp
fs
lods
fnsave
pushf
xor
je
out
sub
shl
mov
loopne
xorl
sub
notb
addr16
addr16
mov
into
dec
sub
std
push
sbb
xor
f2xm1
movsl
or
stos
clc
stos
ds
mov
movsl
push
mov
jbe
inc
or
shlb
dec
adc
sti
mov
mov
std
fadd
int
xchg
out
and
out
add
mov
lcall
jl
adc
add
idiv
add
push
dec
ljmp
and
ja
sub
rorl
aaa
pop
push
rcrl
testl
stos
add
divb
jns
sub
je
lds
mov
pop
mov
mov
ss
test
das
mov
xchg
fldenv
sub
inc
std
clc
pushl
add
cltd
add
jl
mov
shl
rorl
icebp
je
dec
loopne
out
adc
das
aaa
inc
dec
loop
pop
xchg
pop
js
addr16
ret
cmp
pop
push
push
sub
dec
xor
jb
mov
ror
movsb
or
std
adc
inc
xchg
pop
or
loope
xchg
filds
jp
fisttpl
pop
mov
sbb
in
dec
call
cmc
or
ljmp
xchg
daa
out
pop
jmp
push
mov
pop
push
add
inc
dec
jp
sub
mov
fisttpll
mov
mov
test
dec
and
loop
mov
adc
xor
xor
push
std
shl
jl
ja
fsubs
jae
mov
outsl
call
inc
or
add
sbb
lret
jge
cld
push
cmp
scas
and
add
stos
ret
scas
sub
lret
adc
repnz
sub
jecxz
int3
lods
rclb
aad
or
sbb
adc
les
sbb
dec
pop
pushf
int
add
mov
adcl
in
mov
and
insl
int
or
call
and
fcoml
sahf
or
lods
outsb
jl
lahf
out
addr16
std
cmp
ljmp
mov
cmp
mov
sub
rclb
jb
mov
sub
cld
mov
jo
cltd
cmp
dec
imul
fldcw
iret
push
lret
mov
inc
into
adc
inc
pop
les
arpl
or
lret
mov
sub
fwait
inc
mov
stos
out
movsb
mov
fimull
inc
lret
ss
fcompl
loop
cmp
aad
mov
aam
jle
fldl
nop
and
gs
xlat
xor
pop
fisttpll
push
dec
add
sbb
add
data16
loopne
mov
lret
mov
pop
ret
movb
pop
int
xchg
int3
pusha
dec
out
bound
aas
dec
sti
rcrl
xchg
loope
pop
test
cmp
mov
fisttpl
cli
pop
sar
push
push
or
and
sbb
fistpl
js
clc
scas
sub
sub
test
adc
and
pop
outsl
iret
pop
pop
lret
or
in
sbb
pop
test
dec
clc
outsl
andl
adc
add
lret
inc
vmovntps
push
inc
call
push
sub
push
clc
adcb
pop
pusha
dec
pop
sbb
hlt
sub
bnd
stc
fs
mov
lock
mull
mov
xor
fs
add
pop
lds
rcll
sbb
ret
cwtl
repnz
mov
into
jae
xchg
dec
or
push
iret
in
insb
add
mov
mov
mov
into
dec
es
and
xor
xchg
ljmp
in
paddusb
push
adc
imul
mov
daa
jmp
loope
roll
xchg
inc
push
mov
jg
repnz
add
cmpsb
sbb
insb
lcall
mov
and
jb
mov
push
pushf
xor
xchg
inc
or
mov
icebp
mull
jno
xchg
dec
std
jae
scas
daa
jg
in
pop
fwait
shlb
cs
aad
xchg
sahf
jnp
in
cmp
icebp
std
negb
fisttpll
shl
cmp
push
pop
lret
cli
or
enter
cli
stos
inc
es
xchg
out
xchg
push
notl
imul
pop
inc
fstl
push
addb
mov
inc
daa
fnsave
jge
cli
xchg
pop
out
add
jp
lods
cli
adc
aam
cli
push
xchg
das
xor
sarb
mov
imul
imul
not
xor
jns
jno
fwait
cltd
adc
push
xlat
inc
pusha
sub
push
bound
xor
xchg
and
test
divl
cltd
imul
pop
push
mov
sub
lods
lret
loope
fisttpl
fidivl
mov
stos
cld
xor
dec
int
mov
clc
scas
cmpsb
iret
test
sti
mov
insl
xchg
or
inc
cmp
hlt
pusha
jbe
dec
scas
cmpsb
cmc
push
adc
clc
or
dec
jg
mov
shlb
fdivl
lret
popa
and
scas
mov
and
or
xorb
and
pop
pop
icebp
cmc
mov
call
dec
jne
xchg
sub
into
loopne
dec
fcoms
jae
add
call
sbb
mov
dec
jecxz
adc
pop
dec
js
and
fs
movsl
and
mov
cmp
int
gs
fldl
mov
and
cmp
adc
sub
fs
cmc
roll
inc
xor
inc
adc
jno
dec
mov
std
xchg
xor
jnp
xor
pop
adc
jns
mov
rcll
mov
and
out
fwait
mov
mov
cwtl
dec
stos
lods
enter
stos
out
inc
insl
mov
mov
popa
aas
mov
jg
mov
les
aas
scas
mov
jmp
daa
lcall
pop
push
mov
ljmp
leave
test
mov
xor
mov
jle
add
xchg
out
movsb
mov
or
scas
and
out
push
pop
adc
iret
mov
jne
subl
xchg
and
fwait
sbb
daa
mov
flds
sti
push
clc
dec
mov
sub
std
mov
xor
jo
imul
cli
mov
and
xchg
cmc
push
push
nop
incl
shrl
dec
inc
imul
jbe
inc
xor
adc
out
add
sti
aad
pop
or
adc
add
dec
or
add
popa
fildl
mov
adc
ja
pusha
cmp
xchg
mov
and
mov
sbb
out
jecxz
fcomps
imul
mov
test
push
pop
rcll
loopne
aaa
xorl
cmp
adc
out
xchg
add
jecxz
std
out
iret
push
pushf
cltd
dec
sbb
jecxz
cmpsb
dec
in
lahf
pop
xchg
xor
js
mov
int
push
adcb
sub
inc
fisubrl
adc
ret
mov
lea
fldenv
ret
js
xor
sbb
sub
sbb
test
xchg
pusha
int
xchg
fidivrs
cmp
addl
loop
fwait
es
add
minps
inc
jmp
push
popa
std
sbb
mov
and
or
push
in
add
or
rorl
in
dec
xchg
adc
jl
adc
xor
mov
ds
jbe
jb
cmc
lret
xor
push
inc
shll
aaa
and
and
gs
dec
push
outsb
and
lret
imul
dec
in
push
sbb
mov
out
pop
add
mov
nop
fildll
in
jge
push
dec
jl
sbb
int3
lods
add
lret
mov
jae
sub
insl
adc
scas
mov
sbb
mov
xchg
fbld
mov
hlt
rcr
lret
data16
push
cmp
push
push
dec
mov
push
push
lret
gs
or
in
repnz
mov
or
mov
and
inc
mov
es
cmpsl
shrb
repnz
mov
inc
out
fucomi
in
mov
jecxz
int
ror
repnz
cld
div
mov
call
jmp
jne
stc
addr16
sub
adc
dec
jmp
xchg
movsb
jecxz
pusha
mov
mov
pop
dec
ds
push
shll
daa
inc
sub
test
stc
sbb
push
push
daa
cmp
jle
outsl
loopne
xorl
pop
nop
mov
cmp
and
scas
pop
and
mov
jae
pop
dec
cmpsl
pop
or
mov
sahf
pop
movsb
mov
aaa
aad
inc
inc
lds
push
jno
ds
mov
adc
ljmp
bound
cmc
jg
jo
xor
mov
mov
push
push
cwtl
push
push
shll
xor
out
sub
scas
iret
xchg
pop
mov
cmpsl
clc
or
fcoms
adc
test
jmp
inc
pop
sub
xchg
mov
mov
mov
xlat
mov
add
pop
testb
fistpl
stc
mov
dec
mov
sahf
dec
fisubs
adc
fnstsw
fcmovnb
xchg
addr16
sbb
push
lret
jo
sub
in
sub
ret
outsb
stos
and
pop
cmc
and
xchg
orb
pop
imul
ja
aam
ljmp
jns
and
fdivl
xchg
inc
mov
iret
outsl
shll
dec
in
paddq
push
cmp
cld
je
mov
cmpsb
and
mov
dec
jle
xchg
cmp
pop
lret
bound
jle
mov
ret
stc
mov
out
in
daa
jl
rcll
int3
sbbb
push
mov
add
adc
leave
push
pusha
sbb
cmp
imul
mov
out
fstpl
aad
adc
inc
pop
fisubrl
mov
orl
inc
pop
insb
cs
inc
sarb
in
fwait
insl
clc
jp
and
adc
insb
stc
xor
xor
dec
cmp
add
xchg
adcb
ret
sti
ficomps
cmp
lods
icebp
sbb
fisubrl
pop
sub
add
es
mov
sbb
cmp
dec
fs
stos
push
xor
imul
call
push
or
and
out
out
adc
sub
jo
push
mov
out
out
call
mov
mov
push
mov
or
and
lds
gs
pop
sahf
xchg
iret
sub
lret
lods
mov
int
nop
mov
sti
sub
call
sar
fs
mov
cmp
test
or
lcall
mov
outsb
iret
stc
sahf
jmp
or
xor
inc
or
lcall
out
mov
or
push
mov
movsl
xchg
pop
dec
mov
repz
mov
cmc
pushf
and
into
mov
cmc
loope
pop
mov
sbb
sub
popl
psraw
and
adc
outsl
cwtl
sti
xor
repz
mov
vpunpckhbw
in
mov
or
rolb
mov
addb
scas
inc
cs
ror
mov
xor
pop
jg
fdivrp
sub
jae
jp
push
adc
in
xor
mov
mov
add
sbb
mov
clc
push
sbb
cli
mov
and
or
sbb
insl
and
lea
movsl
cmp
sbb
cmp
or
adcl
xor
out
out
imul
add
mov
xchg
test
or
std
mov
push
in
je
mov
add
xlat
adc
dec
xor
nop
or
test
xor
xor
data16
popa
sub
dec
fmul
in
enter
mov
int
andl
add
lods
pop
mov
pop
pop
jne
sub
rcrl
testb
sub
fists
xchg
jne
hlt
outsb
xchg
xlat
test
ja
mov
and
test
je
repz
jp
sbb
dec
mov
add
ror
jge
push
or
jno
ret
repz
fldenv
bound
xorl
xlat
cmp
inc
jmp
pop
je
orl
or
shl
cwtl
jl
inc
push
or
xor
push
hlt
cmp
mov
cmp
cmpsb
sti
ret
dec
mov
jb
sbb
out
dec
cmp
adc
lret
fsts
sbb
xchg
insb
orb
filds
inc
andb
mov
adc
std
scas
cltd
notl
xchg
adc
mov
es
loope
fs
lods
ja
xchg
inc
or
pusha
aaa
test
fwait
mov
pop
lret
ficoml
adc
jmp
xchg
dec
sub
sub
sbb
scas
nop
stc
out
adcb
ret
jo
jnp
js
cs
ds
or
ja
jns
lcall
scas
rcl
ss
ljmp
rcrb
sti
jnp
movsb
adc
jecxz
cltd
out
dec
imul
in
stc
int
xchg
scas
pop
sbb
mov
out
mov
adc
out
test
add
adc
mov
scas
ret
sbb
dec
or
pusha
movsb
insb
scas
adc
pop
aam
mov
jle
insb
xor
jge
add
adc
scas
divl
mov
pop
fucomp
popa
adc
mov
aad
adc
ret
cli
mov
lcall
mov
pop
jbe
lea
mov
adc
jbe
mov
mov
test
addr16
into
cmpsb
sbb
inc
xchg
sbb
in
inc
jns
out
inc
decl
mov
out
sub
xchg
fidivrs
faddl
imul
in
gs
jp
inc
bswap
lods
pop
jbe
sbb
cmc
sub
fdivp
xchg
outsb
idivl
lods
cltd
push
or
xor
and
inc
mov
and
out
mov
xor
popf
and
xor
dec
push
xchg
aam
lods
mov
stc
sub
mov
repnz
stc
push
inc
loope
xor
cmovb
adc
ljmp
adc
stc
or
jno
call
repz
popf
sub
sbb
inc
jge
insl
cmpl
cmp
fsubl
push
outsb
js
rcl
inc
daa
js
push
xchg
pop
cld
dec
shll
jno
sahf
icebp
pop
into
adc
mov
adc
sbb
mov
xchg
insl
pop
mov
cmp
nop
pusha
shrb
inc
cmp
stos
sub
jb
stos
test
xor
or
ljmp
lock
in
dec
xlat
in
inc
je
hlt
jbe
pushf
push
loope
pop
call
jae
popf
xchg
test
inc
outsb
cmp
push
cld
jg
orb
push
lock
flds
push
or
cmp
sbb
mov
pop
adc
jns
pusha
sub
or
pop
jb
insb
jecxz
or
movd
xchg
stc
add
mov
in
pop
pmovmskb
adc
inc
push
mov
add
lods
ret
sbb
xor
rcrb
mov
repz
jp
inc
mov
stc
xor
pop
bound
jle
jl
sbb
stc
xchg
fcomp
sbb
int
in
sub
in
mov
stos
pop
push
in
mov
movsl
arpl
data16
sub
mov
pop
movsb
aad
dec
frstor
jg
mov
mov
push
imul
andl
mov
loope
stos
mov
imull
sub
insb
jl
pusha
and
mov
les
xor
ljmp
icebp
pop
adc
push
repz
adcb
ficoml
icebp
lods
bound
std
sahf
and
or
jo
push
or
imul
mov
test
ret
pop
sti
xchg
sub
inc
dec
cmc
push
cld
cmp
imul
mov
xchg
popf
and
rcll
and
adc
in
and
cmc
and
push
cmpsl
je
cmp
pop
push
cmp
cmp
pushf
dec
xchg
push
adc
mov
sub
in
movsl
out
lcall
pop
fstps
mov
push
pop
push
cltd
inc
mov
adc
mov
sbb
jecxz
mov
sahf
jo
cmc
push
mov
popa
lods
push
repnz
stos
repnz
ds
ret
or
xor
loopne
cltd
or
xor
mov
push
mov
test
lret
call
jb
sti
mov
imul
push
sub
adc
push
out
adc
js
mov
push
js
jge
inc
jge
add
mov
mulb
test
out
sahf
mov
xorl
test
add
test
cmp
loop
cmp
dec
dec
pop
lods
fs
shlb
lret
or
cmp
sub
inc
in
pushl
addr16
mov
xchg
sub
cli
jne
nop
lret
fstl
jecxz
repnz
test
pop
fldcw
sub
push
subl
push
int
pushf
cmp
nop
aaa
pop
pusha
sbb
popf
scas
test
mov
pop
xorb
std
fsubl
push
sub
sub
jmp
mov
ljmp
outsb
push
mov
jns
lret
sar
icebp
sub
out
sbb
pop
mov
pop
adc
lcall
xchg
icebp
mov
xchg
push
test
and
repz
push
mov
std
cmpsb
pop
dec
les
and
fs
cmp
dec
push
cmpl
out
push
xchg
xchg
cmp
outsb
and
jge
push
cmp
lock
insb
inc
xor
push
add
push
shlb
dec
cli
push
xor
mov
testb
xchg
mov
mov
outsb
imul
test
sbb
cmpsb
sub
or
pushf
cltd
lcall
xor
push
pop
ss
or
push
cmp
pop
movsb
pusha
out
je
jno
inc
sbb
dec
loopne
and
mov
out
jns
xchg
push
lods
jge
pop
sbb
cmpsb
mov
insb
mov
xchg
xchg
ljmp
inc
push
idivb
xorl
pop
aaa
sbb
test
and
popa
int
fsubs
and
mov
add
push
in
cltd
loop
data16
or
cmp
sub
add
jb
xchg
movsl
mov
jne
test
clc
pusha
jbe
adc
dec
cmpsb
push
lahf
pop
aam
lea
sub
mov
pop
test
repnz
in
int
and
jb
lea
popf
mov
fdiv
push
or
stos
or
push
dec
iret
hlt
aas
and
or
cli
mov
clc
sbb
push
and
push
pop
push
mov
push
lahf
push
imull
ss
das
mov
push
pop
cmpsl
bound
popf
std
stc
push
fsubrl
into
and
pop
xor
ret
filds
cwtl
in
inc
clc
push
sub
pop
loop
repnz
cmc
mov
les
mov
adcl
jo
dec
call
dec
pop
insl
es
inc
aaa
clc
sub
int
cmp
icebp
xlat
sub
xchg
push
ret
and
fcoml
imul
dec
mov
sbb
inc
jns
scas
inc
cmp
fsts
sbb
sbb
cmp
loopne,pn
cld
ror
aaa
in
mov
incb
not
adc
dec
mull
or
jmp
popf
andl
pusha
xor
cmp
cli
jge
xchg
shll
xchg
dec
shlb
into
xchg
int
data16
pop
das
add
adc
cmp
mov
shlb
cmp
mov
adc
jns,pn
adc
sub
mov
scas
loop
mov
or
scas
cmc
and
pop
aad
out
aad
sub
not
addr16
cmp
cwtl
sahf
js
cmp
xchg
cmp
movsb
lods
jns
push
adc
pop
pop
lods
loop
loop
scas
mov
movsb
push
cmp
in
inc
xchg
sub
stos
jne
in
lods
in
adc
notl
testb
fbld
mov
cmp
data16
or
cmpsb
pop
bnd
dec
mov
and
into
sbb
pop
hlt
push
pop
inc
xlat
frstor
jnp
sbb
sbb
and
push
out
pop
in
in
jge
out
out
enter
xor
stc
inc
xor
ss
ljmp
cli
mov
scas
xor
xchg
lea
cmp
fadd
adc
fimuls
dec
pop
in
fucomip
mov
adc
pop
enter
adc
movsb
jge
push
sbb
mov
popf
xchg
push
xchg
pop
stc
or
push
call
mov
push
mov
push
sbb
dec
xchg
mov
lret
jno
aad
iret
in
insb
outsb
ljmp
mov
js
push
sub
mov
bound
jb
fidivrs
in
addb
cwtl
xchg
lods
clc
cmp
pop
jno
mov
mov
pop
mov
mov
mov
ds
cmp
mov
cmp
sahf
imul
scas
cmc
rcr
mov
adc
ret
nop
movsb
pop
pop
popw
movsb
push
movsb
sub
dec
ret
mov
orl
movsb
add
push
push
dec
rol
arpl
mov
cmp
mov
outsl
push
mov
sub
sarl
aam
cmp
mov
mov
or
jp
cmpb
pop
ss
imul
ljmp
rclb
push
jnp
int
cmp
mov
clc
ja
xchg
mov
adc
push
pusha
xor
adc
lods
mov
cmp
push
xchg
stos
mov
xchg
pop
dec
rcll
push
pop
sbb
xor
stc
ret
leave
dec
add
outsl
pop
inc
push
or
popl
jmp
push
dec
imul
aaa
mov
test
inc
mov
or
fwait
js
mov
loopne
cli
sti
test
fsubrs
insb
jl
rorb
sub
aas
mov
cmp
leave
ja
jmp
cltd
sarb
rcrb
xchg
out
add
sub
inc
aaa
fst
fistl
jb
sbb
inc
mov
or
mov
gs
rcr
mov
adc
mov
add
pop
mov
mov
dec
cmp
aad
push
fs
cld
shlb
data16
push
and
jb
jae
add
xchg
and
daa
or
push
mov
mov
cmpsb
mov
fadds
loope
add
jmp
and
shrb
push
xchg
popa
sti
push
sbb
jg
sbb
neg
jno
jne
pop
fidivl
and
loop
inc
jbe
pop
pusha
or
rcl
mov
incb
ds
addr16
mov
dec
sub
push
jo
aam
gs
imul
addl
stc
ror
sti
mov
sbb
sbb
push
mov
inc
mov
das
sub
in
sub
inc
scas
unpcklps
jo
stc
dec
push
sahf
call
roll
and
std
sbb
pop
and
adc
and
adc
or
call
jmp
mov
xchg
ss
cmpsl
or
lods
cli
daa
cli
sahf
mov
lods
mov
mov
mov
jae
test
je
int
outsl
cld
sbb
ljmp
pop
out
out
orb
popf
adcb
subb
fdivrs
lcall
ret
pop
inc
cmc
jge
and
push
jmp
in
xchg
cs
push
addr16
inc
fisubrs
rol
mul
js
bound
adc
xchg
faddl
nop
pop
jmp
mov
pop
xchg
inc
cmp
sub
cmp
mov
adc
xchg
cltd
adc
repnz
cld
mov
sub
daa
pop
push
lcall
cmc
out
cmpsl
and
inc
xchg
xchg
jecxz
mov
stos
cmc
pop
outsl
or
in
cwtl
jmp
mov
sub
cld
lret
and
push
call
mov
push
fbld
adc
jecxz
mov
sarl
jne
mov
ret
pop
lret
stos
or
loope
sbb
inc
insl
ja
mov
ds
lahf
cmpl
pop
bound
int
inc
fnstsw
and
inc
fists
jl
aas
and
nop
inc
fmuls
add
mov
ljmp
dec
and
xchg
in
sub
lret
lahf
in
outsb
test
inc
ss
sub
stos
mov
pop
fs
cltd
dec
mov
mov
repnz
add
aad
ss
arpl
push
icebp
enter
fstl
in
ds
lret
fnsave
xchg
subl
lret
sub
pop
repnz
sub
bnd
jnp
aas
fdiv
arpl
and
cmp
sub
xor
sub
popa
es
mov
aam
cli
andb
cmp
in
inc
sub
push
push
cwtl
sbb
std
dec
in
mov
fbstp
hlt
cld
jmp
icebp
inc
pop
jb
or
dec
insb
jge
sub
push
xchg
rorb
pop
sub
pushf
loop
jl
mov
jne
out
test
mov
movsl
xchg
into
and
cs
sbb
inc
cwtl
pop
sbb
jnp
mov
pushf
ja
xchg
cs
add
aas
mov
popa
dec
mov
mov
sarl
mov
std
or
adc
in
pop
xchg
imulb
and
sti
jno
je
rcl
xor
cmc
dec
in
sahf
cwtl
hlt
ljmp
sub
push
cmp
ljmp
pop
das
loopne
rcll
mov
fsubrl
ffree
shr
mov
inc
rol
and
add
adc
or
int3
sub
imul
lds
inc
lret
ljmp
add
lock
mov
lock
cmpsb
aas
pop
mov
stos
sub
cmp
ja
cmp
pop
jns
push
fstps
inc
ror
out
lock
push
or
out
out
test
push
lcall
ret
jle
inc
aad
mov
pop
fcmovbe
inc
jge
push
dec
and
or
fsubl
pop
pop
xor
rclb
or
lcall
add
jbe
pop
mov
in
cmpsl
pop
mov
mov
jo
es
mov
xchg
sub
push
and
sbb
add
and
pop
inc
ja
addl
inc
adc
jno
cmp
push
jbe
dec
ds
in
movb
xchg
xor
insl
xchg
orb
cmp
add
mov
dec
stc
ss
inc
aas
mov
cmp
dec
cmp
inc
stos
mov
jle
outsb
jl
or
out
inc
in
mov
lret
push
mov
fidivl
sub
or
and
jns
in
push
ret
and
shrb
lret
xchg
mov
out
lds
pop
pushf
imul
lods
mov
insl
adc
adc
mov
jle
sub
testl
int
dec
call
sbb
inc
fadds
xor
adcl
pusha
imul
test
into
inc
xor
push
repnz
xorl
dec
push
xor
cmc
iret
push
inc
std
fdivs
les
or
push
or
xlat
arpl
or
jg
sti
cli
jbe
rorb
and
out
dec
fisttps
sti
ret
movsb
mov
in
imul
xchg
incl
push
mov
pop
in
popf
mov
and
sahf
push
rol
scas
testb
arpl
pop
adc
insl
in
popa
pop
mov
stos
jo
push
inc
mov
pop
adc
pop
test
ds
in
iret
dec
xchg
pop
add
stos
jl
mov
ss
loop
pop
jbe
xor
daa
pmaxub
inc
sarb
pop
pop
mov
shlb
stc
push
jns
scas
sbb
sub
adc
inc
aad
mov
shlb
fidivs
mov
lret
or
mov
jmp
adc
inc
cwtl
add
mov
int
or
arpl
data16
mov
inc
iret
pop
mov
cli
lret
or
mov
cmpsl
mov
sti
subb
bound
bound
shr
ret
je
dec
adc
xor
cmpsb
lcall
push
adc
pop
mov
inc
cmp
or
adc
sarl
nop
jmp
push
in
xor
rorb
in
and
push
iret
sub
stos
mov
xlat
push
mov
adc
mov
enter
mov
in
in
js
inc
mov
subl
in
and
and
icebp
xlat
nop
xchg
and
and
xchg
push
loopne
rcr
aam
mov
ljmp
sti
mov
call
xchg
inc
push
cmc
and
xchg
adc
pop
sub
nop
loopne
popa
jbe
xchg
in
out
mov
je
aam
das
gs
out
mov
xchg
popf
gs
and
call
aad
call
push
mov
xchg
add
xor
sbb
dec
inc
dec
push
fwait
sbb
jb
push
jno
gs
stos
out
cwtl
and
popa
shrl
mov
scas
repnz
les
sbb
out
push
fxch
movsl
fmull
lcall
mov
mov
pop
das
mul
push
xor
es
aam
repz
or
xchg
andl
and
sub
sbb
dec
dec
or
push
push
lds
lea
jg
or
mov
xor
xchg
inc
dec
dec
cs
movsb
push
and
xor
mov
lds
jp
loope
in
les
lock
sub
fnsave
sbb
push
or
rcrb
jle
jg
fisttps
sbb
push
leave
xor
jl
scas
dec
push
inc
jae
scas
in
push
adc
call
stos
out
xor
and
rorl
daa
in
push
leave
sub
fwait
imul
push
mov
fistpl
cmp
popa
shlb
sbb
sub
scas
mov
add
je
push
lds
jmp
pop
jo
int3
imul
sti
push
fldcw
inc
movb
mov
sbb
and
lock
xchg
pop
push
mov
icebp
lcall
mov
jno
mov
nop
fistpl
lods
push
aaa
cmpsl
cmp
sub
dec
mov
sub
mov
ja
cmp
mov
push
pop
into
dec
aam
fsubrp
loope
cld
or
jmp
adc
imulb
add
adc
pop
lcall
mov
pop
mov
stos
adc
mov
not
and
in
fcomps
xor
and
popf
inc
sbb
lret
imul
rcrl
xchg
dec
xchg
pop
inc
sbb
sub
jle
fstpt
lret
in
or
lcall
cmp
xchg
fiadds
sub
loope
je
add
and
aam
mov
push
dec
mov
mov
hlt
lret
dec
lods
shll
stos
addr16
test
mov
cmp
dec
inc
clc
dec
inc
mov
xor
movsb
or
pop
xor
es
inc
add
inc
aad
dec
lods
in
push
notl
popf
insb
add
clc
cmp
lret
insl
outsl
xorl
dec
fimull
cmp
repnz
pop
sti
sahf
sarb
adc
jnp
jg
cli
push
sti
and
inc
in
mov
mov
inc
std
in
outsl
add
fs
pop
push
sub
stos
les
sub
sbb
jns
xor
push
es
dec
insl
cmp
adc
or
and
mov
aas
das
mov
icebp
pop
add
aad
inc
gs
sub
js
out
mov
sbb
icebp
stos
cmpsl
mov
cs
push
movsb
cmp
loop,pn
or
es
mov
cld
ficompl
lea
fsub
stos
pop
mov
add
xchg
mov
add
mov
jnp
xor
mov
or
hlt
mov
add
xchg
mov
lods
pop
rcrb
push
xorb
push
in
imul
mov
inc
jnp
mov
push
xchg
dec
mov
in
jbe
pop
cmp
outsb
lods
mull
inc
fcoml
mov
dec
nop
or
inc
stos
mov
popf
in
add
ss
add
les
jne
mov
data16
call
mov
je
scas
add
lahf
dec
add
popf
mov
loope
out
inc
jp
add
push
lret
fnstcw
and
jle
adcb
sub
aad
mov
adcl
test
xchg
ja
ficompl
daa
fsub
and
dec
das
clc
repz
pop
add
call
pop
mov
dec
xor
faddl
test
pop
pop
insl
insl
or
aad
jno
shll
xor
dec
iret
ja
push
lods
sub
mov
test
outsl
mov
inc
test
or
adc
arpl
mov
imul
mov
mov
sarl
cmpb
je
xor
lret
lahf
stos
mov
or
push
adc
push
xchg
insl
pop
sub
aaa
pop
pop
pop
ja
push
movsl
dec
ljmp
or
ret
jae
and
scas
push
lock
mov
sarl
jl
stos
addr16
add
aad
insb
out
rcrl
pushf
cli
daa
dec
popa
aas
pop
mov
movsl
sahf
sbb
pop
mov
sarl
or
inc
mov
fxch
test
into
push
jnp
bound
nop
inc
jo
add
les
daa
test
push
out
inc
lret
mov
jl
push
enter
lds
cmp
jl
or
xor
and
mov
pop
ret
cmc
ljmp
xor
add
out
ret
in
sahf
std
in
stos
sbb
std
inc
aad
xchg
cmp
ds
popa
mov
jnp
sub
rorl
xor
add
lret
push
inc
dec
ficoml
mov
in
cs
sbb
push
vmovlpd
ret
fstpl
mov
std
data16
popa
mov
pop
pusha
shlb
cmc
jmp
lock
mov
aad
aaa
cmp
jge
aam
gs
jl
icebp
jne
call
outsb
cli
xor
xor
rcr
add
cli
jne
and
or
ds
sub
add
lods
add
ret
rcrl
sbb
mov
dec
test
inc
bound
lock
fstps
mov
sbb
adc
idivb
sbb
pop
and
cmp
and
xor
mov
dec
sub
fnstsw
cli
aad
inc
out
arpl
or
testl
pop
sbb
sbb
and
xchg
xor
cmp
pop
cld
sub
adc
hlt
jnp
outsl
in
xchg
pop
pop
jno
daa
sub
testb
les
or
mov
jle
mov
aad
lret
jb
mov
popa
test
int3
push
incb
pop
stos
add
and
jnp
out
mov
xlat
mov
shr
fisttpll
or
stos
pusha
fsubs
cli
and
mov
sbb
mov
cmpb
gs
push
out
cmp
mov
cmp
out
mov
fwait
lods
inc
fabs
dec
es
xor
jbe
fiaddl
dec
dec
test
cli
xor
das
in
mov
mov
js
in
lret
imul
cld
sbb
daa
popf
adc
in
xor
push
inc
jno
lock
mov
ss
out
xor
jns
aas
pop
fsubrl
jae
pusha
pop
mov
mov
jnp
clc
filds
jb
mov
cmp
or
mov
mov
int
xlat
and
push
jecxz
ljmp
dec
sbb
aas
pop
leave
call
sbb
pusha
dec
mov
clc
xor
sub
fisubl
imul
negl
jne
lock
imul
insl
addr16
test
fldl
jae
add
and
jl
inc
cld
add
bound
shrl
cmc
xor
inc
mov
rcrb
or
shr
push
mov
sbbl
ja
xor
cmpsb
out
fnstenv
push
loope
xor
xlat
adc
fsubs
jle
mov
ds
bound
dec
cli
cmpsb
or
push
enter
push
test
in
push
fldt
pop
dec
lea
inc
sbb
sbbl
inc
pop
mov
inc
jge
push
adc
int3
xchg
inc
cmp
scas
mov
mov
mov
add
scas
mov
and
testl
and
adc
shll
dec
cmp
mov
sti
jnp
mov
mov
andb
test
test
fwait
jno
lret
aam
pop
les
das
sahf
scas
mov
or
adcl
daa
fnstcw
push
mov
loop
imul
push
cmp
js
xlat
nop
mov
andl
sbb
test
test
add
xchg
push
xor
and
stos
mov
adc
mov
inc
lret
xlat
mov
repz
pop
adc
call
xchg
dec
mov
mov
mov
shrl
dec
movsb
andl
insb
or
nop
and
imul
cmc
test
sub
cs
sahf
shlb
int
add
xor
mov
shll
iret
fsubrl
or
push
das
shrb
nop
jmp
mov
xor
dec
data16
mov
push
ret
xchg
mov
data16
sub
outsl
push
mov
mov
add
gs
push
push
inc
lea
dec
cmc
or
invd
int3
mov
cmp
loopne
lret
jns
imull
call
add
mov
dec
xchg
leave
pop
mov
adc
fisttps
jg
imul
push
neg
enter
or
sbb
xchg
outsb
int3
add
jp
sub
xchg
adc
int3
lret
jae
repz
pop
push
and
inc
mov
lahf
mov
cwtl
inc
cmp
push
mov
fcmovne
into
xorl
aam
scas
lock
inc
mov
stos
shll
pop
add
clc
add
fmuls
fs
mov
popl
pop
cld
mov
push
pop
or
mov
xor
pop
popa
lret
ss
lcall
sarl
pop
lret
push
nop
pop
enter
jnp
int
adc
pop
xor
cmp
push
stos
pop
jle
mov
mov
mov
popl
rcrl
stos
jae
jae
repnz
mov
sub
aad
int
ret
out
push
and
testl
sbb
nop
dec
mov
icebp
inc
pop
sub
adc
cltd
mov
adc
mov
mov
mov
pop
xor
aam
sub
sbb
repz
dec
push
sbb
inc
pop
push
popf
sbb
call
inc
add
out
and
jge
xchg
cmpsl
mov
dec
je
lret
mov
add
pop
inc
cmp
cmp
stc
sub
or
pop
in
fs
adc
addr16
xor
mov
mov
mov
arpl
pop
lods
out
cs
fsubrl
pop
shll
pop
sub
or
mov
jno
mov
xor
jle
insb
inc
jecxz
jmp
lahf
es
ficoms
fisttpl
dec
aad
and
call
lods
cltd
mov
pop
inc
mov
cmp
jge
cmpsb
ret
inc
xor
xchg
xchg
jne
jnp
stos
int
cmp
adc
inc
jecxz
sub
pop
ret
mulb
shl
xchg
add
adc
and
jg
cwtl
in
stos
add
inc
shr
or
fld
adc
loopne
mov
sub
jecxz
pusha
mov
lret
scas
pop
aam
mov
inc
pop
dec
fs
jge
xchg
gs
pop
repz
les
in
shll
add
int3
ds
addb
rclb
adc
mov
sti
fnstenv
icebp
and
or
cmp
lock
lods
aad
jo
sahf
daa
push
cmp
in
lret
fstps
lret
push
inc
subb
pop
or
xchg
das
xor
nop
lods
out
sbb
cmp
xor
lock
push
pop
inc
insb
inc
pop
test
mov
cli
sbb
roll
das
mov
pop
ss
or
jae
xor
sub
dec
mov
das
pop
imul
mov
in
add
movsb
aam
cmc
popf
jg
out
or
and
ret
out
mov
stc
dec
fimull
pop
and
cmp
cmp
icebp
or
pop
mov
filds
and
adc
or
insl
pop
mov
mov
fbld
sbb
push
gs
mov
lods
inc
jecxz
jmp
sbb
pop
push
jo
insl
add
sbb
mov
cmp
push
ja
rcll
adc
dec
outsb
jne
fcmove
pop
dec
out
es
mov
inc
xchg
mov
out
push
shlb
pop
mov
jns
loopne
and
inc
out
adc
sbbl
push
xchg
sub
push
pop
adc
je
jns
ds
aad
imul
dec
add
cmpsb
cs
in
xchg
ljmp
pop
cmpsb
jns
add
sbb
mov
scas
jns
pop
test
addb
xor
mov
test
jecxz
dec
xchg
je
and
fadds
testl
aad
xlat
xor
jge
pop
scas
cmp
fnstcw
clc
gs
sub
popf
icebp
push
jge
adc
sbb
negl
add
pop
mov
xchg
in
imul
rcrb
pop
pushf
subb
jl
in
jne
pop
lss
fisttpl
test
js
ljmp
adc
inc
ret
inc
das
hlt
test
sbb
insl
sub
into
mov
enter
pop
test
mov
aam
mov
addr16
leave
bound
jl
aas
dec
divb
dec
shlb
jl
pop
add
sub
pushf
imul
stos
lods
movsl
pushf
mov
xor
inc
addr16
or
jo
or
mov
aaa
popf
mov
inc
shlb
fists
gs
arpl
xchg
es
ss
daa
add
lea
adc
out
in
sub
add
cmp
sub
int
aad
pop
or
mov
hlt
scas
sub
adc
push
loop
cmp
xor
mov
arpl
leave
add
fwait
jl
sbb
mov
mov
pushf
push
lods
lret
aaa
js
mov
adc
hlt
or
and
inc
imul
xchg
lcall
call
xchg
sbb
pushf
mov
cltd
fisubs
jnp
fisubrl
pop
pushf
push
mov
mov
inc
xchg
scas
jbe
ja
in
fsubrl
insl
fwait
jae
scas
pushf
inc
sbb
mov
jecxz
inc
gs
icebp
test
fcomp
fidivl
dec
lock
or
int
inc
out
pop
inc
sub
pop
shrb
add
xchg
out
aad
jnp
mov
or
and
jne
push
xchg
stc
dec
xchg
pop
pop
dec
xchg
cmp
mov
fsub
loope
enter
out
fld1
add
and
stos
sti
push
xchg
xchg
sbb
in
sub
mov
dec
xor
cmp
cld
jge
dec
sbbl
stc
push
cmp
or
icebp
sbb
cld
and
ficoml
sti
stc
push
dec
fwait
jecxz
rcl
scas
sbb
mov
dec
mov
mov
push
push
pushf
out
clc
popf
sbb
loope
jns
ficoms
iret
cmp
mov
cld
mov
rcrl
and
addb
fsubl
xor
pop
movsl
out
nop
loope
cmpsl
jle
popf
xor
jae
sbb
adc
lds
mov
int3
pop
sub
gs
in
test
pop
xlat
push
iret
das
mov
jbe
mov
gs
mov
cmpsb
icebp
hlt
adc
mov
outsb
sbb
adc
outsb
xchg
icebp
out
xor
sahf
jmp
push
jne
add
ds
in
into
cmp
enter
mov
push
mov
cltd
sub
mov
dec
dec
fwait
insb
lock
cltd
rcr
leave
mov
inc
mov
push
fadds
jl
push
cld
push
xor
sub
fsubp
xchg
push
push
data16
enter
mov
sbb
cmp
cltd
insb
cwtl
pop
stc
add
sbb
ret
cwtl
repnz
fcompl
inc
call
aaa
jmp
and
mov
into
or
and
and
inc
out
cli
aad
inc
push
ss
jns
lret
pop
cmp
sbb
and
push
lods
sub
mov
pop
fwait
dec
or
inc
lds
js
movsb
insl
or
mov
mov
fwait
movsb
and
sub
or
sbb
lods
mov
je
add
and
mov
add
mov
pop
push
jp
jae
add
loope
dec
push
sbb
inc
inc
xor
jmp
push
cmpsb
dec
pop
fistl
mov
lret
inc
jne
movsl
xchg
pop
movsb
or
aad
out
sbb
add
jp
inc
stos
jae
pop
or
addw
stos
cmp
pop
mov
in
sub
adc
dec
sbb
outsl
out
inc
in
add
movsl
movsb
clc
call
mov
xchg
into
mov
or
outsb
fwait
ljmp
adc
fimull
xchg
mov
and
lahf
jmp
pop
dec
js
cli
pop
or
jo
mov
dec
xor
jae
aad
dec
pop
jne
adc
sarb
push
ret
aam
inc
bnd
or
jmp
and
shrl
mov
push
ss
ret
cli
cmc
fmull
imul
jnp
dec
fildl
and
shrb
sbb
xor
es
jae
adc
xor
out
xlat
jp
or
xchg
and
cmp
mov
addr16
xchg
fsubp
mov
cli
idivb
sbb
dec
inc
mov
mov
int
insl
xchg
iret
fwait
arpl
or
mov
mov
xor
or
popf
enter
pop
out
scas
sub
nop
int3
mov
xchg
pop
in
push
add
jg
push
fcoms
imul
scas
xchg
jb
add
gs
mov
icebp
pop
es
rorl
xlat
imul
jae
fdivs
loope
push
call
aad
jle
jmp
nop
aam
adcl
das
fcomps
stc
lcall
cwtl
pop
xorb
shr
in
int
push
lcall
lahf
mov
mov
fisttpll
lret
aad
outsl
fs
gs
xchg
xor
out
nop
rol
push
mov
lods
add
dec
in
jb
jo
adc
pop
int
daa
add
cmp
mov
sbb
or
scas
clc
test
das
leave
rolb
adc
adc
jbe
lock
jns
inc
popa
leave
sub
pop
daa
pop
dec
test
sub
sahf
test
mov
sti
push
aaa
pop
push
sub
sub
aad
dec
mov
inc
vsubps
mov
es
adc
adcl
ficoms
mov
push
dec
cmp
cli
add
add
jb
xchg
sub
adc
push
push
push
lret
dec
xchg
pop
push
jnp
mov
aam
mov
test
out
ljmp
ret
cmp
or
jge
xor
cmp
or
inc
xor
fisubl
ljmp
outsb
out
test
mov
js
scas
xor
inc
jl
insb
and
cwtl
adc
testl
sahf
out
adc
push
adc
rol
call
push
cmc
aam
lahf
rol
popa
or
in
pop
aam
mov
lods
sbb
es
xlat
sub
pushf
cmp
mov
add
idivb
mov
dec
sbb
subb
dec
xor
les
xchg
les
cs
cmp
mov
scas
rolb
mov
popf
xorl
inc
add
into
mov
daa
addr16
add
cmp
test
push
mov
test
scas
push
dec
dec
mov
push
xchg
cmp
push
in
stos
sub
mov
inc
or
andb
xor
sbb
inc
pushf
out
and
inc
shl
mov
inc
xlat
adc
mov
cli
or
lods
aaa
or
hlt
sub
cltd
and
adc
shrl
cmc
inc
jl
xchg
scas
lods
sti
xorb
cmp
sti
lcall
pop
xor
xor
out
in
xor
js
sub
cmpsl
insb
jg
dec
negl
mov
shl
push
enter
push
aad
xchg
test
mov
idivb
in
test
sbb
aas
fsubs
inc
in
fwait
dec
or
shr
cmpsl
pop
in
push
ret
test
xor
add
sarl
int3
or
add
js
or
imul
add
imul
into
pop
je
ljmp
fwait
pusha
jecxz
int
ss
aad
mov
cmc
inc
cmpsb
test
arpl
push
clc
cmovne
adcb
test
mov
fbstp
xchg
mov
push
into
cmp
mov
mov
xchg
inc
dec
xor
cmp
jae
dec
lahf
sbb
sub
cmpsl
sahf
cmp
mov
pop
fsubp
into
add
pop
ret
dec
mov
adc
pop
mov
ret
mov
jp
inc
lahf
or
mov
test
dec
daa
lods
add
cmpl
scas
nop
insb
aas
sub
rcr
bound
dec
arpl
loope
xchg
inc
and
cmp
mov
test
cmp
jmp
xchg
je
fsts
adc
push
pop
xchg
xlat
repz
xor
fwait
lods
imul
xchg
in
loop
je
loopne
mov
push
out
lea
pop
cmp
ffree
push
popf
es
mov
test
jbe
nop
sub
sbb
insb
push
mov
and
xor
in
mov
push
sub
gs
push
xor
daa
cltd
cmpb
dec
mov
and
push
aad
push
pop
mov
mov
push
add
test
mov
mov
jge
sbbl
sti
flds
mov
into
out
scas
frstor
inc
dec
ret
sahf
das
dec
stos
outsl
loop
push
jo
pop
sbb
int3
movsb
cltd
and
dec
and
push
sub
lret
int
icebp
je,pt
mov
test
mov
and
cmp
lcall
fsubrs
xor
jmp
into
mov
inc
stos
je
sahf
out
clc
sbb
mov
jne
sub
mov
dec
mov
and
cmp
cmp
sub
addl
popw
mov
push
xchg
sbb
mov
cltd
jg
add
mov
shlb
pop
sbb
mov
test
out
dec
ficoml
jl
addr16
jnp
lods
cmpb
repnz
mov
xor
into
neg
fdivl
push
mov
insb
cmpsl
repz
xchg
push
cli
inc
rolb
adc
mov
test
and
aam
bound
sbb
adc
movsb
lcall
pop
sub
das
dec
mov
lea
repz
nop
or
test
mov
jo
cmpsb
sbb
out
and
fwait
xor
sahf
lahf
adc
arpl
jbe
dec
enter
and
mov
fwait
lahf
bound
repz
xor
jle
push
clc
les
gs
clc
xlat
push
mov
rcrl
pop
jp
pushf
repnz
pop
cld
push
dec
fsubrp
mov
inc
lds
sbb
sahf
jne
adc
enter
call
and
pop
inc
pop
inc
jecxz
clc
pop
loope
in
pop
xchg
testl
jp
lods
fwait
repnz
call
or
add
pop
cmp
test
jmp
jns
and
push
mov
aaa
cmp
test
cld
fisttpl
jmp
aad
push
inc
pop
imul
dec
icebp
popa
test
fimuls
fdivr
xor
sbb
scas
and
jg
in
mov
leave
enter
cmp
push
add
decb
roll
test
mov
outsb
adc
sti
cld
jae
pop
mov
outsl
add
mov
idivb
cmp
sbb
jb
ret
add
pop
stc
lahf
jp
xlat
mov
xchg
inc
mov
jg
in
mov
or
adc
ret
jno
pushf
popf
push
and
lods
and
enter
pop
or
mov
imul
dec
xchg
sub
out
jmp
xchg
or
jp
push
mov
jbe
hlt
and
loop
clc
inc
stc
syscall
dec
vpsubsw
mov
test
incl
cmp
aad
mov
sbb
stc
mov
xchg
and
pushf
sub
je
ret
jbe
fwait
je
ljmp
sbb
ret
or
cmp
scas
push
xchg
aas
fs
xchg
cmp
enter
dec
shr
xchg
lcall
add
in
jae
jg
adc
aas
mov
lea
mov
movsb
xlat
je
push
push
cmp
mov
ss
fwait
push
lods
adc
or
mov
cmp
add
jns
lahf
sbbb
jge
push
loop
repz
pop
add
stos
aaa
jo
xor
and
aad
ret
xchg
lret
jmp
jl
outsl
sub
popf
pop
test
jae
sub
mov
lret
call
mov
pop
loop
shlb
fstl
mov
in
dec
sub
subl
cmc
sub
mov
shl
or
divl
mov
fwait
jmp
das
or
movsl
or
and
scas
mov
inc
mov
cmp
mov
add
adc
and
add
push
outsb
arpl
push
add
int3
scas
add
sarl
jno
repz
cmp
or
and
ja
call
jmp
loopne
incl
jno
and
cmp
xchg
inc
mov
jo
test
jle
out
dec
jge
fcompl
cmpsl
aam
andl
mov
cmp
pop
das
adcb
cmp
xor
xor
jmp
xchg
xchg
cmp
insb
rorl
and
adc
imul
jp
lea
test
pop
inc
mov
push
mov
xchg
mov
adcl
ljmp
push
mov
mov
int
pop
adc
mov
sub
jnp
dec
outsl
adc
daa
sbb
push
es
or
fmuls
outsb
sbb
lds
or
out
aad
sbb
mov
mov
and
sbb
gs
pop
xchg
fstps
jecxz
pop
push
shl
xchg
cmpsl
xchg
pop
or
in
cmpsb
push
hlt
jle
ds
xor
lea
test
jno
xor
lret
mov
shl
ret
repz
add
int
push
xor
pop
aas
les
cmp
out
std
out
add
fcmovb
loope
ss
lret
popa
pop
adc
cmpl
jnp
popf
pop
jmp
stos
jnp
jbe
repz
aaa
popf
xor
mov
pop
sti
jg
and
push
lea
pop
cmpsl
jmp
jne
cmp
es
int3
lea
bound
push
sbb
ret
into
push
fmull
sbb
lahf
into
sub
sbb
enter
mov
lcall
adc
ficomps
dec
das
in
divb
int3
cmc
in
mov
xchg
push
test
gs
aas
sub
push
push
xchg
fidivl
mov
iret
in
scas
mov
outsl
or
test
mov
loope
daa
xchg
mov
cmpsb
insb
shrl
test
ja
jae
shr
mov
inc
jg
mov
cld
dec
or
adc
sbb
test
fcompl
push
hlt
sub
mov
jl
pop
cld
addr16
pop
imul
in
dec
mov
rcrb
push
push
push
cmp
lds
jmp
test
gs
adc
pop
addr16
sub
out
xlat
faddl
dec
fimull
sub
dec
push
xor
data16
mov
lcall
xor
inc
popf
xchg
cmpsl
adc
or
fsubrl
xchg
xchg
out
jp
ljmp
lea
inc
int
sub
das
adc
push
out
adc
dec
scas
xor
jmp
jg
outsb
push
jp
nop
mov
scas
fsubr
out
push
mov
mulb
outsl
cltd
incl
pop
outsb
mov
cmpsl
ss
mov
sub
cmp
jno
jmp
mov
inc
xchg
dec
cmp
jmp
addb
fcomps
stc
orb
popf
es
ss
mov
imul
inc
lret
fsubl
cmp
cmp
mov
mov
add
clc
dec
cld
fstpl
lods
and
lods
sbb
out
popa
cmp
stos
movsb
fs
lcall
inc
sahf
mov
negl
mov
lock
push
adc
adc
jne
test
xor
stc
pop
in
and
repnz
mov
insb
out
cmp
mulb
imul
imul
jl
in
pop
mov
mov
lods
mov
daa
clc
push
mov
push
dec
xchg
add
popa
ljmp
ja
pop
loop
mov
in
imul
in
fsubs
sahf
cmpsl
mov
push
xchg
orps
into
inc
aaa
stos
fucomip
adc
les
jb
clc
stc
popa
loope
sub
inc
pop
mov
mov
adc
enter
cmp
push
xor
adc
lock
out
pop
js
ret
xchg
ja
sti
cmp
clc
and
inc
in
sub
lcall
mov
add
jo
decl
inc
dec
mov
xchg
adc
bound
jle
jmp
lods
inc
lods
dec
cmpsb
scas
stc
das
pop
popa
imul
in
dec
ss
cld
cmpsb
cld
sbb
test
inc
cmpsb
flds
sbb
addr16
call
aaa
popa
scas
sbb
lods
mov
addr16
clc
xchg
pushf
push
add
cltd
sbb
push
xor
mov
lods
xchg
xchg
xchg
sbb
fidivs
ja
dec
mov
mov
jl
int
callw
pop
jge
xchg
push
dec
adc
lods
adc
insl
inc
dec
ja
jbe
pop
popf
xchg
pop
fcomps
jae
ja
jo
xor
vhsubpd
xchg
clc
enter
std
pop
dec
xchg
sub
cmc
push
cmp
mov
mov
cmp
lret
sbb
flds
iret
orl
cmpsb
stos
pop
mov
gs
mov
enter
dec
mov
bound
mov
jp
dec
inc
sbb
mov
clc
ficoms
dec
ljmp
jecxz
icebp
dec
mov
mov
push
fcoml
xchg
push
mov
and
add
dec
outsl
repz
sub
mov
icebp
pushf
les
sbb
cmp
push
sub
hlt
das
shll
dec
mov
loope
cli
cmp
jae
sub
daa
xchg
rclb
es
sbb
xchg
cmp
loopne
and
mov
mov
dec
xchg
ficoml
jg
shlb
xor
data16
aad
popa
pop
mov
cltd
or
hlt
sahf
cltd
dec
jle
test
sub
out
cmc
int3
jp
push
js
f2xm1
mov
xor
daa
push
cmp
sbb
pop
addr16
or
pop
or
aad
xchg
pop
pop
aam
lret
andl
loop
cmpsl
test
fwait
lahf
leave
out
ret
scas
outsl
cmp
cs
les
sahf
ret
dec
cs
cmp
cmp
or
out
push
pop
jbe
push
lea
mov
dec
inc
xor
mov
js
or
adc
dec
lea
cli
jle
dec
popa
dec
push
or
dec
push
test
int3
jns
xchg
dec
andb
loop
loop
mov
leave
dec
add
inc
add
ljmp
sub
movsb
test
xchg
out
fistl
pop
in
int3
mov
jno
pop
adc
imulb
enter
out
mov
inc
push
jmp
nop
and
and
fstpt
mov
mov
mov
and
mov
lods
xor
jmp
adc
into
inc
dec
aad
jge
mov
push
std
call
mov
ljmp
les
cmp
push
mov
and
mov
xchg
shlb
out
repnz
dec
jge
data16
test
fildl
jmp
pop
inc
lret
rcrl
lods
cmpsl
pop
lret
jae
loopnew
orl
xchg
jbe
mov
jp
sbb
ja
dec
mov
or
and
mov
hlt
xor
inc
fs
cli
lods
adc
and
ja
rcrl
lock
insb
imul
stos
pop
nop
scas
jg
mov
movsl
rorl
adc
push
stc
xchg
inc
inc
adc
xchg
hlt
cmp
add
sub
out
out
xor
dec
shl
mov
jl
push
stc
outsb
rorb
insl
push
mov
sub
ret
pop
ret
jmp
bound
icebp
and
add
pop
sbb
mov
mov
and
mov
jl
into
cmpl
dec
repz
mov
fidivrs
mov
push
add
sbb
push
mov
lea
aad
rcll
ds
iret
xchg
push
mov
push
push
cmpsl
jge
sar
mov
aas
xor
xor
inc
inc
inc
aad
mov
mov
add
lahf
cmp
jae
jle
mov
push
push
jo
jl
fidivl
notl
call
andl
dec
dec
pop
dec
lahf
mov
sbb
mov
lods
push
addr16
dec
fists
shlb
stc
out
mov
pop
bound
jae
pop
add
mov
das
aam
andl
loop
mov
data16
jne
mov
mov
add
sbb
js
pop
leave
inc
andb
std
scas
mov
mov
repz
aam
mov
mov
ljmp
icebp
mov
push
inc
push
shl
jne
jnp
cltd
mov
fcomps
sub
addr16
or
push
sarb
out
adc
and
pop
inc
daa
insb
add
sbb
stc
subl
outsl
inc
imul
sbb
push
mov
and
mov
jno
push
arpl
add
inc
push
js
popa
pop
push
in
clc
mov
cmp
xchg
test
dec
or
frstor
ficoms
mov
cmp
push
cmpsl
ja
cmc
out
bound
push
pop
adc
cli
push
outsb
data16
sub
add
xchg
jb
pusha
mov
jae
jmp
aas
push
lcall
cld
add
mov
pushf
fimull
push
ss
rol
sbb
sahf
aam
subb
test
inc
jge
dec
mov
sub
sahf
xor
sub
scas
cld
jbe
inc
cmpsb
or
fs
cld
adc
adc
loop
test
ss
xchg
rorb
sti
and
cs
fstp
sub
es
pop
inc
mov
mov
sub
lcall
pushf
dec
stos
pushf
pop
adc
arpl
rorb
mov
addr16
into
cmp
fcomi
add
jno
test
pop
fstpl
andl
add
and
mul
add
jo
lods
sbb
out
in
fstpt
sbb
xchg
rcrl
xor
nop
vpsrlw
xchg
clc
sbb
xlat
or
mov
sbb
adc
or
cltd
cmp
js
punpckhdq
inc
sub
pop
or
out
andl
icebp
and
addr16
orb
pop
cld
cmc
sahf
jg
jne
jnp
mov
mov
decl
inc
jnp
cmpb
push
mov
jne
fwait
clc
or
or
sti
add
aaa
xor
sbb
and
imul
ds
imul
xchg
add
aam
and
test
sub
pop
jg
mov
jp
push
repz
jg
aad
pop
fsub
mov
jmp
sbb
xchg
cmp
lods
ljmp
stos
scas
leave
sub
jge
dec
popf
stos
and
mov
into
sub
push
scas
adc
loop
repz
jae
gs
lock
and
adc
test
fdivl
jae
out
or
dec
push
movsb
data16
movsb
adc
movsl
or
xchg
and
xchg
lds
mov
dec
add
sub
leave
jne
mov
ficoml
and
movsb
andl
mov
adc
iret
push
or
int3
push
xchg
into
dec
mov
into
and
ret
movsb
ret
fmulp
lods
xor
pushf
popf
inc
lods
fildll
inc
repz
mov
push
lahf
das
inc
jnp
addr16
testl
movsb
mov
xchg
into
mov
jmp
scas
dec
scas
fidivs
xchg
or
jecxz
dec
push
jge
sub
in
inc
push
mov
pushf
test
popa
icebp
addl
add
inc
nop
rorl
insl
push
xlat
sti
jmp
pop
enter
mov
repnz
mov
jnp
test
or
in
push
jge
scas
test
cli
enter
aad
out
adc
int3
cli
and
lret
jo
test
scas
les
xchg
add
test
addr16
jle
jnp
mov
add
je
mov
jae
jp
mov
sub
fmul
iret
adc
ret
in
mov
dec
inc
or
and
std
mull
xor
pop
pop
fstpl
or
push
test
movsb
jle
jne
ljmp
and
cmpsl
lret
movsb
lds
test
pop
outsb
and
out
xor
cld
cmp
sahf
icebp
mov
rcr
adc
jno
lcall
add
test
fsubrl
jns
inc
cmpsb
mov
lock
cmc
loope
fadds
cli
roll
jmp
aaa
or
fldenv
lret
jb
loopne
test
xchg
jmp
adc
xchg
pop
push
dec
movsb
mov
not
jnp
add
aad
ficomps
inc
jbe
enter
jae
cmpsb
mov
je
sbbl
jo
mov
repz
push
and
cmp
mov
inc
aaa
cmc
jge
push
jae
test
subb
ja
mov
cmp
adc
xlat
or
and
dec
xor
pop
cli
inc
pop
rep
ja
mov
cwtl
fs
xchg
popa
mov
fdiv
pop
dec
popf
push
test
loope
xor
xchg
loopne
xor
test
aaa
sub
out
jmp
cwtl
mov
dec
cmc
mov
push
aaa
pop
mov
in
in
rol
mov
int
lea
jmp
int3
scas
mov
in
or
out
pop
mov
daa
push
mov
imul
pop
sub
cld
mov
hlt
mov
dec
or
push
push
pop
add
out
int
mov
xor
inc
pop
sub
pop
int3
dec
std
pop
iret
xchg
pusha
jp
jbe
insb
inc
dec
add
leave
or
repz
inc
jle
mov
inc
insl
mov
push
add
or
mov
movsl
out
fldt
imul
mov
jae
jp
xchg
fistpll
add
rcrb
jae
int
test
sbb
test
adc
and
sub
jle
icebp
mov
jecxz
mov
in
pop
cli
pop
cmp
pop
rep
and
outsb
pop
stos
mov
adc
and
xor
adc
push
lret
sbb
mov
jp
mov
xchg
mov
xchg
fneni(8087
xorb
jnp
xchg
out
xor
and
stc
sub
adc
mov
cltd
inc
lcall
add
pop
push
mov
sub
in
xchg
ss
ss
pop
lds
icebp
sub
and
insl
cltd
sbb
sub
jg
clc
sub
or
scas
pop
addb
jecxz
push
cmp
push
sbb
popf
stc
sbb
xor
sub
mov
int
daa
cmp
imul
xor
incl
test
loopne
jl
jne
xor
adc
and
sbb
sti
fdivp
ret
or
into
in
rorb
xchg
mov
pushf
cmp
cld
dec
pop
sti
repz
ljmp
cmp
pop
mov
and
stos
push
adc
adc
lcall
stc
popa
sar
sbb
inc
and
xor
jp
nop
sub
xchg
or
andb
jl
jnp
pop
cli
and
scas
sbb
pop
popa
xchg
shll
xchg
push
aas
cmp
ficoml
sarb
bound
xchg
loopne
rcl
imul
and
and
cmpsb
stos
insl
adc
pop
add
mull
pushf
in
lea
xor
lock
cmp
dec
inc
pushf
xchg
jb
sub
and
mov
sbb
pop
in
stc
jne
loopne
clc
jno
and
adc
or
dec
cli
mov
mov
fdivrs
test
cld
stos
leave
pop
sbb
sbb
or
jp
nop
cmp
cmpsb
aas
cmp
imul
inc
pushf
setge
jb
les
sub
loopne
jbe
cmp
sub
scas
add
pop
dec
mov
dec
add
inc
fstp
sub
sarb
jae
or
nop
cmp
inc
add
fadd
push
pop
add
sbb
inc
pop
rcll
push
sub
in
lea
sub
fstl
jns
pop
repz
cmp
imul
cmpsl
mov
xor
xchg
movsl
mov
lret
scas
test
adc
push
ret
pop
jne
push
adcb
rcr
adc
jo
mov
push
inc
mov
pop
push
jb
lods
bound
jno
and
test
xchg
jne
rcrb
cltd
dec
repnz
mov
mov
sub
adc
ljmp
lods
idivb
mov
sbb
sub
and
fstl
sbb
sbb
movsl
into
int
rcll
fnstenv
sti
ret
and
negb
pop
cs
decb
or
or
jecxz
mov
ss
mov
dec
test
je
lret
dec
imul
test
lds
fsubrs
lahf
push
add
sub
sub
jnp
xor
dec
jno
insl
push
andl
cltd
sahf
test
xchg
or
addr16
cwtl
popf
sbb
add
xchg
pop
leave
push
bound
pop
mov
sbb
int3
inc
or
sub
out
lret
cmp
mov
mov
cwtl
cmp
inc
aad
sti
inc
nop
ret
rcrl
cmp
roll
pop
out
dec
xchg
pushf
popa
test
jne
nop
pop
shrl
call
out
lods
rol
add
dec
inc
push
ficoml
lahf
and
sbb
data16
mov
xor
and
or
dec
mov
lods
mov
data16
xchg
push
cmp
scas
stos
cmpsb
pop
iret
outsb
jae
xchg
lcall
leave
adc
add
dec
aas
loope
fistpll
dec
jecxz
jecxz
cs
outsl
cmpl
xchg
in
lock
das
and
insb
pop
jae
jg
addl
sarb
add
daa
adc
cmc
imul
pop
mov
addb
es
push
sbbl
call
pop
mov
xchg
lea
fs
xchg
cmpl
inc
mov
and
popf
lea
movsb
test
lods
out
addb
les
sub
gs
pop
pop
sub
loopne
dec
cli
fmul
gs
int3
pushf
jp
outsb
mov
push
dec
cmpsl
sub
xchg
dec
fstl
adc
add
sub
lahf
out
xchg
gs
adc
sbb
cmc
cwtl
pop
popa
je
fnsave
addr16
shl
mov
xor
cld
adc
shr
jecxz
or
stc
lock
push
jns
mov
test
lds
adc
adc
fwait
lret
fdivrs
sbb
cs
aam
aas
fidivrs
mov
inc
mov
and
xor
scas
cltd
jp
jl
roll
push
jbe
sub
mov
sbbl
add
popa
jo
cmp
or
das
sbb
sub
jno
ljmp
adc
xchg
out
vpminsw
pop
pop
and
mov
pop
jmp
aaa
cmc
cmp
pop
loop
lods
dec
adcl
sbb
add
adc
loop
scas
adc
mov
mov
sub
loope
cli
pushl
xor
fistpl
pushf
call
xor
mov
cmpsl
cmp
ret
jne
in
jne
bndldx
mov
mov
loopne
enter
scas
push
or
mov
xor
cmpsl
push
mov
mov
inc
test
ret
pop
mov
sub
cli
dec
inc
mov
flds
cli
xchg
into
popa
outsb
stos
add
push
ficomps
pop
iret
xor
mov
adc
mov
dec
add
dec
push
shll
fninit
data16
sub
lods
popf
int3
mov
cmp
movsl
xor
outsb
cltd
push
bnd
jg
dec
fimull
test
mov
sub
inc
ss
gs
xchg
call
jmp
or
dec
lods
js
sbb
dec
sbb
adc
lcall
and
pop
sbb
clc
jmp
orl
ds
and
lods
nop
repz
add
pop
fsubl
aam
xlat
ja
pop
pop
inc
or
loopne
mov
sbb
dec
jecxz
repz
insb
cmc
jne
ss
lret
dec
movsl
sbb
lock
jecxz
mov
mov
jmp
xchg
add
jbe
aas
jo
push
aaa
fistl
mov
pop
jno
or
dec
arpl
je
cltd
cs
xchg
aad
add
rolb
sub
pop
mov
loope
jle
sub
jle
xor
aas
mov
mov
nop
outsl
or
jno
lods
out
pushf
lock
jg
imul
xchg
test
outsl
and
ss
lret
sbb
fldl
cltd
inc
dec
mov
and
dec
ja
cs
pop
call
incb
jg
aaa
dec
std
mov
fldenv
xor
bnd
mov
rorl
and
cs
cs
xchg
pop
and
testb
and
jns
mov
stos
loope
add
jb
xchg
push
sbb
sti
leave
xchg
or
sub
mov
adc
push
testl
fisubrl
xchg
mov
lds
xor
dec
jmp
inc
clc
ficoml
insb
jno
sub
xlat
xor
daa
getsec
jmp
icebp
mov
dec
lds
icebp
mov
or
filds
jl
pop
dec
fnstenv
subb
in
jnp
out
jle
dec
cmp
push
idivb
mov
outsb
les
dec
into
enter
adc
and
or
enter
push
into
popf
pop
mov
les
int3
mov
xor
imul
out
popa
mov
mov
adc
rcrb
mov
mov
dec
outsl
lret
mov
roll
mov
rol
fwait
inc
sub
push
jno
into
cmp
pop
mov
mov
mov
pop
push
test
stos
mov
xchg
add
jbe
xchg
outsb
mov
xor
push
jb
add
rcr
stos
sbb
or
fwait
sbb
and
iret
iret
test
pusha
and
test
aad
insb
popa
sbb
pop
xchg
add
not
inc
lret
jae
or
negb
cmp
dec
inc
repz
cltd
jae
cwtl
dec
out
adc
testl
push
rol
addr16
add
pop
add
push
outsb
mov
sbb
or
mov
fwait
jp
push
dec
or
outsb
js
hlt
add
daa
test
sub
popf
pop
push
popf
movsb
adc
sbb
cmp
push
pop
xor
mov
xlat
sbb
adc
fmul
andl
aad
dec
lahf
inc
pop
daa
push
pop
pusha
dec
jns
inc
push
loopne
dec
inc
lds
adc
cmp
mov
fs
xchg
dec
mov
pusha
sbb
icebp
dec
add
xchg
js
add
std
repnz
pop
mov
inc
shl
xor
jne
adc
fidivs
hlt
in
xchg
std
popw
dec
movsb
and
pop
pop
aad
mov
movsb
fstps
and
sarl
push
int
mov
dec
lret
fs
xchg
pop
jns
jmp
es
shlb
jb
mov
adc
mov
mov
fistl
add
ret
dec
push
aas
hlt
in
xchg
loop
pop
sub
dec
loope
adc
and
mov
lds
mov
inc
and
cmp
add
lcall
push
aas
mov
dec
imul
mov
inc
aaa
cs
frstor
pop
popf
push
push
and
sbb
fisubl
mov
jo
push
in
jo
cmp
mov
fwait
cmp
inc
xchg
add
dec
pop
sbb
decl
mov
xor
or
jno
imul
sti
cli
sbb
cmp
icebp
imul
sbb
add
cld
xor
outsl
cmp
fwait
push
cmp
mov
fwait
pushf
fwait
pop
je
rol
scas
mov
mov
mov
rclb
out
inc
cmp
or
adc
adc
push
mov
cmp
dec
fistpl
stc
shl
ficomps
sahf
in
cmp
into
fcompl
push
testb
mov
inc
or
sti
pop
dec
ja
cmpsb
adc
popf
add
scas
icebp
xchg
jg
movsl
cmp
in
shlb
xchg
jp
leave
cmp
lods
jb
stos
sub
cmp
mov
sub
mov
aas
lret
dec
mov
out
sub
mov
inc
pushf
adc
repnz
inc
icebp
daa
jne
pop
leave
jno
pop
push
jl
test
pop
mov
jnp
mov
and
pop
outsl
and
aas
inc
mov
xchg
xchg
mov
stc
mov
xorl
jns
mov
xchg
decb
push
cmc
subb
and
cwtl
mov
xchg
icebp
out
cwtl
mov
sbb
sti
mov
sbb
scas
andb
outsb
push
cmpsb
sahf
jns
mov
jne
sbbl
int3
xchg
mov
loope
dec
les
xor
dec
push
lods
cmpsb
movsl
push
jmp
inc
pop
mov
dec
dec
mov
cld
pop
imul
fcmovb
shrb
aaa
sahf
push
cmp
es
scas
or
hlt
aas
leave
rorb
sbb
in
into
fsubrl
fimull
pushf
sbb
fsubrp
fucom
das
outsb
or
pop
sub
xchg
in
sbbb
adc
xor
cmp
hlt
out
ret
and
rolb
sub
sbb
mov
mov
xchg
insl
xchg
pop
xor
hlt
dec
cmpsb
ficoml
ret
sbb
pop
pop
addb
test
push
dec
imul
sub
pop
fidivrl
aas
mov
mov
daa
sub
divb
push
sbb
sbb
movsb
jmp
jns
pop
cs
lret
adc
notb
or
repnz
xlat
daa
push
insl
jnp
out
add
mov
push
repz
outsl
jb
cmpsb
and
dec
cmp
xlat
movsl
sbb
lds
sbb
jb
bound
jnp
js
data16
in
aam
test
fiadds
and
dec
pop
cmp
adc
ds
rcll
xchg
mov
mov
mov
clc
addr16
into
pop
cwtl
jno
lods
xchg
lcall
test
outsl
jne
adcl
xchg
jo
mov
scas
xor
int
mov
xchg
pop
and
arpl
cmp
jo
lods
shll
mov
push
or
jae
stos
adc
movsl
cmp
mov
cli
pop
lods
push
sub
or
mov
rcrb
push
or
lock
shl
jns
cmp
mov
push
push
mov
out
fs
cwtl
cmc
fs
adc
pop
inc
stos
ss
out
out
mov
mov
in
shr
jae
inc
push
fisubl
push
xchg
cli
mov
mov
or
stos
dec
pop
mov
popa
lock
pushf
mov
mov
add
pop
shll
mov
gs
or
cmp
sarl
inc
jo
jmp
out
fsubr
call
push
jmp
and
inc
fstpt
movsl
in
dec
mov
lods
fstp
fadd
sub
stos
mov
repnz
mov
mov
jp
popf
test
xor
leave
aas
mov
mov
xchg
mov
movsb
xchg
test
arpl
sub
mov
shrb
dec
jo
test
call
adc
pop
mov
ljmp
mov
xor
add
stc
lret
push
xor
les
clc
push
lahf
and
fadds
adc
push
mov
fcompl
or
cli
roll
sbb
cli
mov
das
in
hlt
pop
cwtl
mov
ljmp
mov
add
mov
ret
sbb
fisubl
std
adc
icebp
inc
pop
aad
dec
js
lcall
out
mov
leave
add
pop
popf
jns
jge
push
test
jp
jno
nop
addl
xchg
adc
mov
sbb
sbb
out
out
pop
cmp
pop
xlat
jnp
scas
insl
or
fwait
jp
shlb
lds
loopne
mov
cli
rol
push
dec
xlat
pop
mov
repz
out
xchg
mov
jae
and
xor
orl
xor
mov
adc
xchg
loopne
xchg
addr16
dec
dec
inc
add
jae
pop
das
inc
push
jno
inc
inc
cmp
mov
outsl
fdivr
push
incl
cld
negl
xchg
mov
pop
push
xlat
sub
push
jecxz
xchg
inc
or
fstpt
shll
sbb
pop
shrb
or
lods
mov
repnz
mov
mov
fsubs
out
ror
jmp
inc
dec
inc
out
pop
aaa
mov
stc
fcompl
lahf
mov
pop
into
arpl
sahf
out
mov
stc
cmpsl
nop
sub
and
pop
mov
sar
call
and
iret
je
push
pop
mov
lods
jno
sbb
sarb
scas
and
or
rcr
enter
push
jae
mov
mov
out
data16
pop
repz
inc
test
in
jecxz
cltd
stos
inc
gs
mov
fistpl
inc
cmpsl
sub
bound
out
push
cwtl
call
out
xlat
push
add
je
and
mov
cmp
mov
push
inc
into
cs
sub
cmpsl
adc
fadd
xchg
dec
add
cltd
mov
shl
cmc
sbb
subb
aam
mov
push
or
sub
and
loop
dec
adc
jae
and
push
xor
mov
xchg
fsts
xchg
xor
adc
aaa
pusha
and
fldl
adc
das
sbb
or
cmp
and
sub
or
mov
or
push
clc
mov
add
or
movsb
xlat
xchg
mov
and
sbb
sub
xor
adc
cmp
int
xchg
xor
mov
jg
sahf
outsl
pop
and
dec
dec
outsl
mov
int
sub
jno
push
cwtl
fsts
pop
out
loopne
mov
add
ret
outsb
adc
inc
push
lcall
es
aas
repz
gs
add
std
lret
cmc
pop
jo
sbb
ja
out
adc
aaa
lea
sub
xor
push
cmp
and
add
aam
fdivrl
inc
movsl
ror
je
push
mov
pop
dec
jmp
jp
std
mov
inc
loope
cmp
mov
rol
add
cwtl
push
jae
sbbb
sub
push
lahf
aas
add
stos
or
cmp
jg
pop
aaa
jge
mov
fstps
or
cltd
loop
cmp
lahf
jne
repz
mov
std
lds
daa
adc
aaa
std
add
shll
sar
jmp
es
sub
nop
and
fldcw
adc
out
and
insb
dec
roll
je
decl
loope
pop
adc
xchg
dec
sub
popa
xchg
mov
push
fcoml
loope
daa
cmp
mov
call
movsl
in
cmp
popa
jl
xchg
aad
inc
gs
movsl
in
in
or
sbb
scas
lret
fsub
or
fcomp
add
mov
outsb
stos
lahf
cmp
cs
fisubrl
jmp
movsl
in
adc
mov
cmc
mov
and
jle
test
fwait
inc
hlt
cltd
or
lea
dec
adc
jbe
xchg
cli
gs
inc
mov
mov
push
pop
fisubrl
pop
xor
xchg
les
dec
test
pop
mov
mov
jecxz
xor
mov
inc
sti
add
xchg
and
lret
mov
sub
fs
adc
adc
sbb
xorl
ret
lret
mov
test
shll
dec
mov
data16
push
sub
popf
shr
dec
push
int
xor
cmp
lret
fs
mov
loopne
mov
out
in
pop
sbb
out
movb
ljmp
rcl
add
inc
fmuls
cmp
inc
repnz
or
inc
or
dec
jno
je
jle
fists
jno
add
mov
test
adc
push
or
gs
testb
jbe
jp
stos
clc
imul
in
arpl
dec
popa
test
and
lods
out
pop
sub
xchg
xchg
inc
push
dec
push
cmp
test
outsb
addb
sbb
out
adc
stos
test
inc
inc
subb
sbb
cli
mov
pop
mov
test
sar
fisubrs
jns
and
cmp
xchg
cmp
mov
sti
push
int3
enter
jp
fldenv
loopne
pop
addb
call
mov
mov
dec
xchg
and
sub
push
sub
hlt
out
lods
dec
or
pop
imul
sbb
pop
pop
hlt
lret
pop
lods
fsts
stos
out
js
test
or
enter
rorb
adc
mov
js
in
jne
or
sub
divl
jg
in
repz
lods
jbe
in
pop
mov
jne
fdivrs
push
dec
jecxz
cmp
jo
sbb
inc
arpl
mov
pop
push
scas
outsl
loope
lret
sub
cmp
nop
jne
cmp
xor
leave
imul
dec
rol
xchg
mov
shll
mov
je
std
adc
sbb
jge
repz
dec
orl
mov
push
or
mov
mov
fcoms
and
sbb
or
faddp
in
add
or
dec
xlat
sbb
push
xchg
adc
sub
icebp
sbb
xchg
jo
inc
mov
mov
ss
repz
xchg
xchg
cld
imul
and
mov
popa
lret
iret
push
mov
ja
dec
stos
lock
sub
insb
pop
mov
push
data16
fistl
int3
jecxz
out
jbe
push
fcomps
mov
inc
sub
sbb
fisubrs
sbb
stc
mov
mov
sbb
insl
jo
and
lods
jge
arpl
xchg
mov
outsb
dec
out
test
mov
mov
sub
cmc
fwait
mov
push
mov
inc
pop
addb
sbbb
push
mov
cmpsb
adc
inc
mov
mov
xchg
and
loope
loop
inc
pop
cmp
mov
daa
xor
and
pop
dec
push
jp
pushf
push
mov
or
outsb
sbb
cli
stos
and
insl
jno
hlt
mov
xlat
js
addb
shll
pop
clc
xchg
add
inc
pushl
sub
inc
push
jp
loop
xchg
das
js
negl
pop
jmp
push
inc
sti
push
push
push
and
divl
jmp
pop
push
push
ret
in
cld
sti
sarl
bound
sbb
or
pop
subl
idiv
mov
lock
or
int3
inc
loopne
add
xchg
cmp
subb
mov
push
outsl
test
mov
mov
loopne
push
mov
out
jb
cmp
jmp
enter
test
in
sub
loop
aas
cmpsl
enter
sub
aas
pop
into
les
jmp
bound
addr16
cmpsl
adc
sub
lods
sbb
jae
sub
jb
jb
xorb
shll
negb
scas
sbb
adc
repz
ret
sahf
insb
or
mov
in
inc
adc
xor
add
into
pop
xchg
pop
outsb
insb
dec
mov
push
sbb
jp
and
nopl
cwtl
inc
call
cmc
mov
lcall
sahf
shr
push
cwtl
test
rcll
sbb
mov
mov
jp
mov
hlt
mov
mov
gs
mov
mov
insl
pop
mov
test
xlat
add
mov
xchg
loopne
icebp
aaa
jmp
scas
sub
xor
test
sub
lea
fdivrs
cmp
push
jbe
dec
cmp
out
test
dec
sbb
push
je
shrb
dec
and
mov
std
pop
xchg
test
pop
push
data16
arpl
aas
dec
jno
popf
pop
mov
cwtl
adc
push
and
pop
cwtl
lret
lock
mov
stc
in
mov
mov
aam
push
out
inc
add
mov
adc
or
scas
jbe
gs
outsl
xlat
xchg
add
jbe
ret
ss
pop
out
xor
jno
pop
add
je
push
push
daa
pop
dec
pop
iret
imul
ret
inc
je
xchg
movsb
sarl
imul
lret
rcrl
ret
insl
xchg
es
call
pop
cmp
sbb
add
stos
sub
and
jb
jmp
scas
pushf
cs
aam
jo
or
cwtl
pop
or
nop
sub
pop
adcb
outsb
in
scas
jne
cmp
movsb
icebp
ss
cs
arpl
in
cwtl
and
sub
pminub
xchg
jne
push
push
repnz
dec
inc
fildll
or
push
mov
icebp
ja
loop
pop
ss
cmpb
mov
inc
cwtl
in
test
jo
cwtl
add
popf
aaa
add
mov
out
fstl
popf
test
dec
pop
subl
mov
and
inc
xchg
int3
repnz
int
xor
mov
push
push
xor
lahf
push
mov
jno
pushf
cmpsb
mov
or
mov
pop
es
in
enter
lods
out
in
and
ud2
test
inc
data16
sub
sarl
jmp
test
mov
xor
xchg
jmp
inc
imul
gs
cmpsl
mov
dec
inc
fdivr
imul
std
arpl
lcall
inc
daa
adc
jnp
xchg
adc
adc
scas
mov
js
test
push
xor
test
sub
inc
cmp
insb
sbb
lret
std
mov
cmp
je,pt
push
test
jmp
pop
add
push
pop
sahf
add
lock
aad
dec
add
rcll
fcomi
fidivs
pop
repnz
flds
push
shlb
stc
xor
xlat
ja
adc
inc
loope
mov
mov
bound
in
xlat
cmp
dec
pop
add
loope
aaa
arpl
mov
sub
imul
cld
xchg
fwait
push
imul
cmp
inc
data16
push
imul
clc
adc
pop
movsl
insb
and
dec
xor
ret
mov
inc
cmp
adc
out
lcall
pop
add
cmpsb
leave
icebp
xchg
mov
mov
int
fwait
sub
imul
pop
dec
mov
outsb
cli
test
lret
scas
push
mov
pop
or
cli
dec
mov
and
sbb
test
xchg
xchg
mov
test
push
mov
jno
call
stos
es
push
sub
scas
inc
or
inc
xor
and
ja
cli
inc
movsl
cli
mov
xchg
fcoml
adc
test
cltd
addr16
and
sahf
nop
popf
movsb
mov
push
mov
mov
enter
mov
pop
lods
add
xlat
lock
mov
test
fdivrl
pop
cwtl
leave
dec
mov
ljmp
add
jmp
and
push
imul
orb
out
push
pop
in
push
mov
push
mov
ljmp
outsb
pop
inc
jl
pop
adc
inc
xorb
jbe
inc
mov
sbb
and
pop
lds
popf
insl
sbb
out
mov
lock
jns
call
scas
cmp
sbb
and
and
fldcw
lock
sub
imul
push
pop
je
ds
sbb
pop
add
mov
negl
mov
dec
jbe
mov
mov
cmp
add
ficoms
inc
out
in
ss
mov
mov
test
mov
jae
test
jl
fstl
movsl
rcll
sub
fwait
add
mov
dec
aas
cmpl
dec
movsb
fcomps
ret
ljmp
lds
xchg
adc
adc
push
and
repnz
sbb
push
inc
dec
arpl
rolb
mov
mov
jmp
xchg
lds
and
push
cmpsl
int
add
call
nop
roll
xor
arpl
jl
insl
inc
maskmovq
divl
dec
ljmp
sub
and
jns
pop
pushl
sub
push
xor
into
out
or
pop
jge
fcoms
imul
test
inc
gs
insb
test
push
mov
icebp
push
pop
cltd
movsl
sbb
mov
mov
mov
jnp
dec
xlat
sbb
dec
mov
shlb
push
xor
in
jl
inc
xor
sbbb
jl
shlb
shll
aas
iret
out
dec
int
sbb
hlt
xor
mov
dec
outsb
ja
fsts
repz
push
dec
dec
call
imul
adc
or
sbb
cli
rorl
cwtl
jmp
jo
add
jno
stos
cmp
sub
test
scas
xchg
xchg
jle
cwtl
add
adc
or
test
xchg
cmp
cltd
sub
add
adc
popa
sbb
pop
int3
imul
rcrl
shlb
mov
ret
cld
rep
outsl
dec
inc
xor
cli
pop
lahf
jno
adc
ljmp
test
add
sbb
jb
xor
inc
nop
sarb
mov
je
pop
rorb
pop
jge
cmc
mov
sbb
push
inc
xchg
shr
add
cmp
jecxz
out
or
iret
mov
lret
lods
or
inc
xchg
cmc
sub
ficompl
gs
mov
sbb
pop
sub
out
dec
test
in
adc
add
xor
mov
inc
sub
into
cmp
packsswb
in
shlb
mov
dec
xlat
in
outsl
or
pop
cmp
frstor
jne
sbb
inc
aas
jmp
dec
popa
sahf
mov
rclb
stos
in
fucompp
lret
mov
and
enter
push
and
mov
sbb
lods
sub
sti
xchg
dec
and
jmp
adc
scas
or
xor
addb
daa
mov
pop
test
sbb
ret
cmp
in
in
cs
sahf
inc
fdivl
pop
shll
popf
daa
daa
movsb
mov
and
push
notl
sbb
test
std
test
or
inc
sub
fadds
mov
push
mov
subb
mov
pop
dec
sub
adc
or
sbb
push
add
cmc
pop
add
js
xor
sub
or
cmp
ret
mov
sbb
arpl
xor
repnz
aaa
or
int3
fcmovu
sbb
std
xor
outsb
and
mov
jmp
cli
sub
jecxz
mov
mov
lods
arpl
sbb
pop
fsubr
xor
test
scas
push
dec
ret
gs
gs
dec
mov
ds
mov
stos
push
add
and
mov
inc
inc
sub
cli
in
inc
das
xchg
sbb
in
cmpsb
jbe
fisubl
lahf
inc
rcll
push
in
mov
lahf
sbb
cmp
xchg
stos
sbb
adc
pushl
push
ss
adc
pop
jp
cmc
dec
xlat
lds
stc
sbb
lock
sub
dec
fisttpll
lahf
aad
and
stos
xor
enter
push
xor
inc
outsl
aad
setae
gs
adc
adc
push
mulb
lret
loop
inc
and
call
jae
loopne
ljmp
xchg
icebp
test
scas
in
ljmp
mov
xor
das
out
jnp
mov
or
out
pop
or
addr16
sub
test
shrb
mov
mov
adc
les
sub
sub
leave
sbb
shl
adc
mov
mov
pop
lods
ljmp
xchg
xchg
pop
insb
mov
mov
lods
daa
icebp
mov
scas
inc
push
je
jbe
pop
jg
arpl
int3
pop
ja
cmp
pop
pusha
inc
stos
cld
fiaddl
out
lret
cli
popf
sbb
sub
mov
sub
pop
insl
out
fs
js
sub
es
lahf
loop
mov
std
nop
mov
leave
cmpsb
les
xor
lcall
pop
push
sub
mov
sub
dec
imul
jb
push
push
test
inc
ljmp
into
pop
stos
scas
jno
xor
pop
outsb
sarl
xorl
add
push
lahf
add
negl
scas
jl
xlat
inc
stc
in
scas
fnstenv
mov
sub
mov
clc
fdivrl
push
sbb
ljmp
in
fidivrs
mov
cmc
adc
dec
mov
in
lods
mov
ljmp
cmp
aam
pushf
inc
lds
insl
repz
mov
loop
and
leave
jne
xchg
bound
iret
mov
push
insb
scas
test
jge
rorb
popf
lcall
call
in
add
add
nop
inc
xchg
dec
cmp
pop
sbb
adcb
xchg
mov
adc
and
and
add
adc
aad
mov
pop
je
ss
pop
dec
and
push
and
sbb
mov
ljmp
xchg
dec
push
or
leave
xchg
das
cmp
scas
xchg
xor
sti
jg
sub
adc
cwtl
dec
xchg
gs
sbb
sti
pop
pop
xchg
dec
pop
or
insb
mov
push
shlb
jae
push
cmp
arpl
add
xchg
mov
sbb
adc
insb
imul
lods
adc
add
fimuls
sbb
imul
pop
jmp
lock
xor
lcall
lea
nop
mov
add
or
call
repz
data16
xchg
sbb
mov
xchg
fnsave
push
cmpl
shl
divb
xchg
enter
fisttpl
inc
dec
or
rclb
popa
movsb
imull
in
roll
frstor
lds
movsl
pop
arpl
repz
pop
call
call
add
cmp
push
dec
test
mov
jae
push
and
lods
sub
jmp
mov
or
ja
sbb
lock
ret
mov
inc
cmp
fnstsw
test
test
adc
inc
fcmovnu
popa
jl
jbe
pop
loop
enter
cwtl
sbb
leave
xchg
ja
ret
adcl
decb
and
xor
das
jmp
and
dec
or
in
pop
sub
in
cmpsb
das
dec
jae
jae
andb
movsb
adc
cbtw
test
mov
jmp
adc
loope
jp
mov
xor
data16
mov
mov
mov
test
repz
or
inc
xchg
fwait
insl
or
push
mov
aad
jge
pushf
cmp
adc
push
pusha
and
mov
add
jo
movsl
lods
icebp
int
sbb
jmp
sahf
arpl
ss
icebp
frstor
flds
cld
or
mov
xor
cmp
jg
ret
or
push
xchg
push
pop
in
mov
push
cltd
int
jle
sahf
daa
or
jno
shrb
addr16
sbb
fcomip
mov
mov
and
jge
lcall
ljmp
xchg
sub
sub
xor
sti
dec
push
les
jg
aad
clc
cmc
arpl
enter
xchg
mov
push
lret
mov
mov
sbb
push
push
pop
mov
daa
mov
cmpsl
lgs
and
pop
aad
in
test
dec
xchg
add
mov
xor
jne
stos
outsl
rclb
lock
jb
in
xchg
hlt
std
cmp
adc
out
call
jge
jo
roll
xchg
pop
lock
cmp
out
mov
out
pop
and
and
into
cmp
daa
ds
rcll
add
mov
shll
mov
call
pop
jle
pusha
cmpsb
fsubs
xor
sub
repnz
movsl
push
lock
inc
jl
mov
adc
jns
sarl
push
pop
push
pop
imul
into
js
xchg
movsl
in
pop
and
in
mov
jnp
addr16
out
mov
and
loop
lea
std
pop
fwait
out
xchg
dec
push
and
jmp
hlt
not
jb
dec
out
dec
rcrl
push
daa
rorl
cmc
or
test
mov
scas
or
xor
cmp
out
js
jge
cld
mov
mov
mov
push
imul
in
fwait
xchg
sahf
popf
rcll
cwtl
xlat
lods
sub
jmp
add
mov
lods
push
and
mov
mov
jp
shlb
into
jbe
jl
mov
iret
or
addr16
xor
xchg
or
lret
fstl
arpl
jnp
mov
pop
cmp
dec
pop
lcall
push
adc
pop
mov
leave
fnstsw
lock
mov
mov
inc
xor
pop
sub
xchg
sbb
sub
lea
test
fcmovu
stos
mov
sub
mov
xchg
mov
add
xor
xor
pop
jle
add
or
ffreep
js
insb
sti
aad
int3
sti
mov
push
ja
adc
andb
add
xchg
out
es
lcall
fs
mov
cld
sbb
lret
push
inc
stos
pop
lock
mov
and
fisubs
mov
sbb
je
in
sbb
testb
imul
xchg
dec
testl
pop
push
rclb
mov
mov
sub
es
and
mov
or
sub
jle
subb
imul
mov
mov
in
sysenter
jb
add
rorl
jmp
cmp
loope
xor
pop
xchg
mull
cmpsb
out
out
iret
pop
push
or
adc
test
pop
mov
sub
add
push
mov
sarb
hlt
pop
add
cmp
jge
xlat
pusha
sar
and
or
push
push
hlt
fisubrl
lcall
mov
add
dec
cmp
push
cmp
fld
xchg
out
ret
out
rcr
out
xor
pop
sub
push
mov
fldenv
rorl
or
ds
push
sbb
xor
test
fdivrs
das
cmp
add
and
xchg
push
xchg
enter
shrb
adc
push
jmp
xor
xor
mov
mov
lods
pop
in
es
ret
rolb
inc
shll
imul
lods
int
enter
mov
iret
push
sbb
pop
mov
xor
xlat
sbb
lea
pop
or
loope
bound
jmp
jmp
sbb
sbb
adc
lock
fs
dec
sub
or
xor
adc
mov
sub
adc
out
cs
ja
xlat
and
jmp
xor
popf
add
bound
scas
repz
cmpsb
fdiv
pmaddwd
mov
leave
int3
sahf
mov
jns
loope
stos
repnz
in
movsb
arpl
stos
fisubs
inc
pextrw
xchg
dec
mov
dec
push
pop
pandn
ficoml
push
mov
insb
adc
mov
dec
jbe
fdivrs
adc
push
sbb
lock
stos
mov
add
jbe
and
cmp
lcall
sub
jl
jmp
xor
inc
sub
mov
fwait
loop
add
gs
scas
ds
bound
jecxz
push
ret
adc
jae
jl
jae
push
clc
aad
or
jae
mov
cmp
call
lea
and
test
in
pop
into
push
pop
dec
insl
pop
aad
sbb
addb
iret
mov
mov
mov
jo
das
cmpb
lock
xor
mov
ja
jg
iret
dec
jp
scas
iret
sub
mov
mov
sub
xchg
stos
cs
jle
sub
sbb
jns
cltd
repnz
push
mov
popf
mov
add
sub
or
mov
jle
rcl
fwait
outsb
in
add
dec
mov
cltd
xchg
sbb
test
movsb
repnz
hlt
sbb
popf
cmc
mov
decb
call
push
push
and
aaa
imul
movsl
loopne
ficoms
pusha
mov
fcmovnb
pop
sbb
aas
mov
fmull
enter
pop
loope
mov
push
clc
test
lcall
cmp
pop
xor
jb
push
aaa
mov
mov
xchg
cmp
sbb
js
cs
ror
clc
jecxz
fstl
imul
xor
in
es
dec
and
pop
je
out
mov
sub
das
sbb
xchg
out
fcoml
insl
dec
fistps
imul
je
fucom
push
aad
fmuls
imul
mov
std
pop
data16
lcall
mov
mov
test
cli
add
push
jecxz
pusha
sbb
cld
gs
stos
xchg
int
ja
lods
lahf
xor
xchg
aam
sahf
mov
mov
in
fnstenv
nop
push
sub
jp
xchg
ret
pop
sub
jno
push
lods
addr16
mov
inc
jno
in
loope
push
or
sti
sbb
or
pop
movsl
in
lcall
subb
push
add
cmpsb
fidivrs
fldt
xchg
mov
dec
mov
and
xchg
insb
jae
push
lahf
sub
mov
int3
adc
lds
xchg
or
stc
inc
inc
mov
pop
pop
inc
pop
pop
mov
mov
adc
pop
fwait
arpl
cltd
aad
add
fs
sub
aaa
lcall
mov
outsb
ret
fsubr
shr
jmp
xchg
stos
xor
sub
xlat
insl
outsb
jp
or
push
mov
xchg
mov
jno
cli
fxch
pop
insb
fidivrs
push
sarl
addb
sub
es
int3
aaa
clc
data16
cmpsl
push
lock
les
inc
faddp
jb
pop
mov
sahf
mov
add
fcmove
loop
pop
inc
sbbl
mov
adc
into
outsl
test
inc
aad
shlb
pop
jnp
scas
fstpl
mov
push
and
dec
aam
movsb
cs
add
scas
xchg
shlb
orl
cmp
bound
xchg
test
imul
adc
clc
cmpsb
dec
jno
inc
mov
sbb
sbb
mov
dec
adc
mov
jg
stc
sub
js
aas
push
fildl
gs
mov
into
les
test
shll
adc
push
fsubp
sbb
loopne
xchg
movsb
jg
dec
loope
jp
pop
or
sbb
bnd
loopne
push
cld
imul
xor
lahf
mov
jo
test
xchg
cmp
test
popf
leave
xor
jnp
out
xor
cwtl
xorb
adc
loope
mov
xchg
mov
or
imul
inc
add
cmp
js
inc
pop
xchg
ljmp
xchg
dec
bound
dec
nop
mov
dec
ja
mov
push
icebp
jecxz
xor
pop
inc
shrl
rolb
nop
mov
sbb
and
outsb
inc
jbe
push
imul
pop
jecxz
mov
in
arpl
dec
mov
mov
inc
mov
jbe
jp
push
jp
insl
mov
pop
xchg
sbb
bound
out
pop
sub
sbb
cmpsb
xorl
xor
ret
sbb
cwtl
inc
sbb
dec
mov
sbb
mov
mov
pushf
std
push
cmc
fninit
sub
fs
ljmp
fsubrs
inc
dec
lahf
mov
out
movsl
addl
sbb
aas
push
aam
push
std
mov
mov
sbbl
jae
cld
in
xchg
test
fs
fsubs
mulb
sti
and
daa
push
fadds
lods
pop
jo
mov
dec
pop
or
xor
cmp
push
push
out
lods
mull
inc
sub
push
or
mov
xchg
in
jmp
jl
rclb
out
jmp
mov
inc
mov
test
out
add
sub
addr16
sahf
inc
push
repnz
inc
imul
call
ljmp
pushf
jmp
cmp
and
jmp
push
push
js
jne
or
and
xchg
mov
xchg
or
mov
and
xchg
inc
xchg
cwtl
xor
cmp
inc
push
rcll
das
addb
or
lock
and
mov
mov
adc
xchg
daa
sbbl
push
loope
sub
ja
jmp
iret
and
mul
fildll
sbb
cltd
mov
xor
push
dec
fwait
mov
in
fdivrs
jae
imul
adc
mov
add
cmp
add
push
mov
pusha
mov
and
loopne
scas
pop
or
add
popa
jge
mov
xor
inc
imul
ljmp
in
xchg
xchg
rolb
mov
test
mov
pop
jecxz
or
clc
inc
dec
cmp
int
pop
pop
aaa
sbb
pop
sar
cmp
stc
xor
mov
enter
push
inc
icebp
fs
pop
sbb
stos
into
jle
dec
adc
pop
movsb
xor
mov
add
add
flds
test
stos
adc
mov
mov
hlt
pop
lahf
sti
jge
cmp
inc
clc
leave
or
addr16
jno
and
fistpl
mov
mov
pop
mov
or
popf
inc
sti
ret
pop
fildll
ret
and
ljmp
mov
dec
inc
ret
mov
hlt
xorl
rcrb
push
lds
pushl
rol
fs
jmp
jp
clc
pop
addr16
std
dec
mov
jno
insl
mov
sbb
jg
insl
sub
pop
bound
sub
stos
push
xchg
push
sub
jb
es
dec
cld
push
xor
pop
pop
scas
sub
clc
jnp
mov
mov
xor
insl
popf
lahf
cwtl
cmpsb
pop
stos
repz
in
mov
xor
push
dec
out
out
rclb
adc
out
or
popf
push
loopne
cmpsb
enter
shlb
jo
data16
xchg
sub
dec
lret
dec
ret
inc
jmp
mov
fstp
test
push
mov
dec
pop
pop
adcl
test
dec
lods
pop
jmp
loopne
xchg
mov
cld
mov
das
clc
outsb
dec
cld
mov
mov
movsb
fsubp
adc
pop
add
fcoms
cmp
push
push
add
mov
pop
push
adc
fiaddl
xchg
lock
leave
in
fwait
sbb
in
add
inc
sub
std
adc
cmp
xchg
cmovne
sbb
sarl
and
call
xchg
xchg
push
es
add
pusha
inc
sbb
test
xor
or
and
test
and
jmp
clc
add
fsubrl
or
das
mov
int3
and
adc
jns
cmpsl
and
lret
es
clc
in
inc
xchg
mov
push
pusha
adc
movsb
mov
jmp
jb
in
dec
dec
mov
push
inc
clc
call
adc
push
mov
adc
xor
mov
mov
out
mov
add
xchg
gs
jg
cmp
adc
xlat
xlat
fs
mov
cmp
sbb
hlt
sbb
cmp
aad
push
mov
xchg
and
dec
jg
loope
or
shll
xor
repnz
mov
add
pop
ja
ljmp
dec
and
out
ljmp
repz
in
push
out
inc
je
xor
adc
shl
add
je
jno
stc
or
mov
push
in
mov
repz
insb
pop
jbe
arpl
push
lahf
mov
pop
inc
and
insl
sbb
shl
xchg
imul
sbb
aam
cmp
mov
or
lahf
mov
mov
cld
pop
sbb
lret
mov
call
jae
jecxz
jbe
xor
pop
push
push
in
fldcw
adc
and
in
sub
jne
jmp
dec
ficoms
inc
xchg
mov
in
mov
or
lock
insl
push
mov
loop
test
bound
dec
or
adc
idivl
dec
pop
hlt
rclb
enter
mov
jecxz
pushf
inc
mov
lds
dec
sbb
lods
std
pop
dec
adc
and
mov
adc
sbb
lret
in
mov
dec
or
jno
push
in
or
orb
pop
shlb
add
rcl
cmp
add
xchg
fildl
inc
pop
cmp
ret
and
movsb
push
lret
mov
push
in
mov
or
ljmp
mov
movsl
rorb
popa
mov
mov
adc
dec
mov
push
mov
aaa
pushf
fcmove
cld
adc
rorl
mov
in
jbe
xor
add
sbb
and
repz
mov
aaa
cmp
clc
inc
xchg
ret
sub
imul
inc
fiadds
sahf
test
test
sbb
cs
adc
fisubs
mov
pminsw
sbb
sub
jecxz
jl
test
jle
stos
push
roll
lea
fimuls
cmpb
ds
out
shrb
add
jmp
sub
jns
jb
sti
std
mov
push
add
mov
rorb
or
ss
or
jmp
mov
stc
fs
fimull
xor
sbb
imul
push
movsl
popl
lret
mov
xchg
aas
popf
sahf
dec
xor
clc
push
test
loop
sub
and
icebp
loop
xor
push
cltd
popf
xor
repnz
movups
xchg
imul
mov
xchg
mov
cmp
pushf
mov
int3
aad
push
dec
mov
rcr
sub
lds
or
das
and
ja
pop
movsb
push
dec
push
xor
les
xor
movsb
mov
xor
rcrl
dec
mov
jle
mov
mov
mov
subl
lret
daa
lcall
aad
andl
test
cmc
cmp
dec
loopne
push
in
push
shll
jo
jns
or
xchg
das
in
xor
in
xchg
jne
sub
pop
mov
pop
popa
mov
mov
xor
stos
sub
xchg
xchg
aaa
add
stos
xor
mov
out
les
das
pop
mov
dec
xchg
sbb
xor
les
sbb
aas
cmpsl
gs
jp
pop
jle
and
and
and
push
or
jne
adc
push
jecxz
sbb
mov
std
mov
ja
dec
push
aad
inc
sub
iret
sbb
xor
mov
lret
pop
pusha
pop
test
jbe
cmpb
mov
addl
mov
sti
fsubrl
jle
pushf
arpl
cmpsb
addb
ss
push
push
rorl
push
test
adc
iret
mov
sahf
and
lea
test
pushf
xchg
ret
das
jecxz
sbb
inc
int
out
out
out
pop
mov
div
lods
jo
sbb
je
mull
nop
in
and
pop
xor
andb
repz
pop
mov
daa
jnp
and
dec
pop
add
aas
pop
enter
xchg
aaa
pusha
push
test
dec
jo
ljmp
add
stos
jb
or
inc
cmp
scas
pop
test
jns
push
enter
jl
test
mov
dec
xchg
dec
lret
sub
xor
daa
cmp
ror
adc
pop
mov
lret
sbb
lods
jo
cmp
decb
sbb
mov
mov
add
xor
xchg
rolb
pop
xor
push
inc
fsubr
jge
std
dec
cmp
cmp
sbb
and
inc
movsb
fidivrs
or
shl
js
dec
popa
xor
jnp
cmp
sarl
dec
mov
add
adc
popf
fidivrl
cmpsl
pop
push
pop
adc
aaa
push
bound
sub
mov
testb
and
jae
or
imul
jecxz
sbb
sub
ss
jne
mov
dec
lcall
test
out
repnz
and
test
push
add
inc
dec
add
dec
stos
cmpsb
xor
loop
dec
inc
sub
es
int3
fdivl
xchg
jne
dec
inc
aaa
xchg
jl
mov
sbb
bound
rcrl
imul
push
cld
mov
adc
fdivrs
icebp
cwtl
fisubs
addl
xor
imul
add
pop
push
in
pop
inc
repz
test
negb
imul
xchg
das
sub
loope
arpl
out
enter
pop
and
stc
xor
in
mov
lods
mov
cmc
int3
shlb
or
insl
sbb
in
rclb
gs
jg
mov
pop
xor
or
int
and
insl
test
mov
mov
pop
push
andl
add
cwtl
ljmp
sbb
scas
mov
shll
xor
mov
lahf
dec
scas
cwtl
into
push
jae
mov
jae
cmc
stos
fisubs
push
pop
adc
hlt
pop
in
imul
insl
jge
out
push
insb
stos
icebp
stc
cmc
adc
in
iret
mov
or
out
stos
xchg
addr16
cwtl
subl
xchg
clc
out
cmp
pop
out
test
xchg
dec
les
xor
xchg
pop
and
sbb
sar
cmp
pop
popa
add
jno
loop
push
xor
add
fcompl
ret
lea
cltd
test
orb
adc
mov
stc
or
and
dec
outsb
subb
and
fisubs
fwait
in
insb
pop
setno
in
inc
dec
repz
sub
loop
xlat
xchg
imul
xchg
les
inc
shrl
cmpb
icebp
pop
and
rorl
dec
inc
das
jno
mulb
jno
cli
mov
mov
mov
dec
loope
andb
dec
cmp
and
clc
cld
js
or
aam
sub
dec
mov
inc
mov
sahf
shrb
adc
cmpsb
inc
adc
inc
div
and
add
scas
xor
fs
mov
lock
pusha
mov
cmp
mov
sahf
push
lahf
xor
pop
loope
sub
icebp
stc
fnstcw
inc
roll
decb
shrl
pop
jecxz
outsl
adc
testb
jnp
inc
jmp
fwait
test
mov
pop
push
popf
outsb
std
xchg
jb
imul
stc
or
loope
fimuls
fs
ret
sub
push
gs
mov
insb
adc
cmp
loopne
ljmp
lcall
test
xchg
push
das
jle
pop
outsb
out
sbb
add
repz
cmp
sub
rolb
xor
inc
dec
sub
repz
adc
xor
aas
mov
inc
xchg
aaa
mov
rcrb
push
mov
xchg
push
pop
push
lret
xlat
mov
mov
mov
or
dec
xor
stos
xor
rolb
dec
add
ljmp
pusha
lcall
inc
dec
mov
movsb
jmp
mov
insl
aas
repz
cmp
hlt
testb
shll
xchg
sahf
xchg
xor
add
ret
scas
pusha
mov
inc
jmp
in
jb
out
shrb
fsubrs
fstp
mov
mov
xchg
sbb
push
and
ret
dec
add
push
jp
call
lds
insb
dec
xchg
inc
mov
out
fldenv
and
es
jbe
arpl
adcb
sbb
aad
mov
dec
fisttps
cli
adc
repnz
fdivrs
cmp
inc
pop
pop
pop
mov
cld
and
loop
adc
sub
lret
les
fidivl
popa
and
mov
pop
loopne
out
inc
call
enter
sarb
in
add
sarb
xchg
mov
and
fs
popa
cmpsl
mov
aad
cmpsl
fs
aas
xlat
hlt
mov
popa
add
ds
mov
adcl
fwait
pop
fwait
out
jne
cmp
cmp
fists
add
jb
loope,pn
mov
popa
mov
andb
mov
daa
aad
test
mov
xor
pop
popf
sub
loopne
fmuls
mov
sbb
pop
cs
dec
jle
lods
or
sbb
movsb
jnp
rcr
bound
inc
rclb
cltd
cmp
daa
pop
push
movsl
in
pop
jae
dec
sbb
inc
lcall
and
outsb
xchg
sub
push
incb
hlt
xor
xchg
inc
loopne
sti
mov
in
push
inc
sbb
or
in
mov
jae
loope
out
lods
adc
cltd
add
imull
out
call
insb
pop
loopne
sub
pop
mov
andl
or
mov
adc
ret
aam
jg
addr16
test
sub
add
aad
in
je
jg
adc
dec
int
dec
jmp
dec
jae
push
notb
adc
mov
mov
outsb
add
test
out
xchg
lahf
shl
repnz
push
inc
daa
cmp
cmp
sub
aaa
test
jo
pop
sbb
xchg
adc
lds
lahf
rclb
mov
insl
push
inc
mov
push
gs
dec
push
mov
cs
pop
cwtl
test
lods
pop
xor
add
aad
stos
loope
out
mov
cmc
pop
and
out
and
sub
in
aad
jle
mov
mov
sub
test
sbb
cmp
outsl
jp
sbb
je
int
ficompl
pop
popf
stos
or
or
inc
loopne
movsl
pop
popf
and
jg
add
iret
pop
pop
andl
mov
roll
or
xor
pop
aam
mov
pop
xchg
cmp
in
sub
pop
ret
ret
xlat
cmc
cmpsl
ds
loope
xor
sub
andb
jb
pop
mov
push
jbe
xchg
dec
imul
outsb
mov
push
ds
mov
insl
mov
sbb
sub
jp
aam
cmp
cmpsb
or
inc
stos
mov
out
inc
mov
mov
fnstcw
mov
and
sub
cld
lret
aaa
jmp
sub
mov
mov
imul
shrl
nop
and
lea
loopne
insb
sub
push
in
mov
shrl
ljmp
icebp
inc
lds
sub
sub
xchg
and
cli
mov
addr16
loope
push
cmp
xchg
shrb
dec
fs
or
fs
mov
cli
and
mov
jge
mov
push
scas
mov
pop
mov
cmp
mov
xor
adc
test
cmp
cmp
push
push
push
ljmp
out
mov
repnz
into
push
int3
imul
fidivrs
in
gs
mov
pop
cmp
sarl
out
adc
jae
push
imul
xor
mov
int3
in
adc
lret
sbb
xchg
arpl
test
das
and
pop
pushf
or
jns
push
push
dec
das
fiaddl
xor
mov
adc
aaa
rcrl
or
sbb
sub
mov
jne
add
pop
shrb
xor
add
adc
jnp
test
jl
jae
imul
dec
ds
and
fisubrl
sub
push
iret
mov
pop
or
sahf
in
mov
cmp
popa
and
ret
xchg
es
mov
pop
repz
fwait
rclb
mov
sahf
mov
sbb
fiaddl
adc
lret
js
addr16
in
push
push
and
xchg
mov
inc
mov
je
jae
shl
shll
or
pop
push
add
popa
fadds
adc
mov
in
xor
and
sbb
dec
mov
loopne
mov
stos
fstps
test
mov
xchg
mov
pop
jg
ja
cmp
add
dec
call
push
mov
jp
jmp
xchg
mov
xor
int3
mov
adcb
mov
sub
or
fadds
lds
add
pop
mov
fcmovnu
ret
dec
or
pop
xchg
jecxz
add
jp
lret
cmp
mov
addr16
fistpll
ja
and
outsl
pop
aas
push
adc
jns
mov
push
pop
dec
mov
icebp
filds
ljmp
mov
jl
adc
bound
dec
or
rorb
shll
loop
xchg
lods
mov
shl
int
lock
cmpsl
das
xchg
in
ja
repz
mov
out
icebp
les
ja
aam
push
lods
xchg
add
mov
ja
or
mov
and
daa
aaa
and
lahf
cs
sbb
fld
outsl
ret
js
adc
addr16
xorb
lods
scas
test
outsl
xor
arpl
movsb
cld
gs
add
xchg
pusha
cmp
ljmp
jecxz
or
xor
movsl
scas
xor
push
incl
jmp
xchg
sbb
sbbb
ja
popa
adc
inc
xchg
sub
push
adc
seto
dec
pop
mov
test
cmp
jmp
pop
and
in
test
dec
rcr
and
imul
xchg
mov
imul
jge
sti
inc
imul
dec
fcompl
xchg
gs
rcrb
popa
mov
loope
dec
xor
sub
cmp
adc
jg
loop
sbb
pusha
das
fbld
popf
jbe
and
rcrl
dec
or
adc
lcall
popa
dec
into
lds
dec
mov
mov
fcmovnu
fisttps
inc
cmp
sub
orl
mov
mov
inc
and
xor
add
mov
jp
fisttpll
sti
paddb
push
fistl
or
pop
cmp
cltd
push
shll
mov
test
orb
mov
xlat
shll
adc
div
movsb
lahf
jno
bound
popl
and
xor
mov
cmpsl
sbb
leave
push
inc
push
and
movsl
sub
mov
and
pusha
add
sub
fnstenv
sahf
rcll
fwait
xor
mov
pop
jg
loop
xchg
push
or
fsubr
jmp
enter
jnp
cltd
sti
pusha
aaa
jle
fldenv
es
lds
ficoml
cmp
rol
adc
data16
jp
push
push
ss
mov
movsb
pop
cmp
fisttpll
iret
fcoms
sti
sahf
shrb
daa
popf
stos
jmp
dec
pop
sub
stos
adc
sub
xchg
inc
ret
inc
gs
sahf
fcompl
push
cld
adc
inc
imul
fsts
mov
fdivs
hlt
push
fidivs
lcall
mov
mov
jmp
jnp
mov
jo
mov
pop
pop
mov
xor
mov
lcall
jp
dec
jl
add
sbb
push
popf
lret
xchg
out
movsl
xchg
je
out
xor
xor
mov
iret
out
lock
jnp
fwait
scas
xchg
in
movsl
xor
xor
jl
aas
mov
inc
rcll
sbb
cld
jge
aas
or
arpl
push
sbb
test
lock
dec
rcrb
xchg
push
test
dec
add
lods
inc
adcb
push
sbb
push
aas
test
jns
jb
mov
scas
popf
iret
sub
jmp
rol
inc
sbb
pop
jle
divl
inc
lcall
push
repz
xchg
lock
rcll
or
mov
into
mov
push
ljmp
inc
add
aaa
lock
cmpsb
fyl2x
sbb
in
sahf
sbb
push
inc
xor
lahf
aas
ljmp
adc
mov
inc
xor
push
ficoms
gs
pop
stos
insl
inc
add
aad
push
arpl
pop
or
scas
sbb
jp
repz
and
mov
gs
cmp
mov
mov
push
arpl
test
les
sub
in
adc
addb
and
dec
mov
fildll
mov
dec
xchg
mov
int
pop
pushf
orl
imul
push
movsb
jbe
jno
loopne
inc
out
sarb
cltd
sar
imul
dec
bound
repnz
add
cs
and
pop
outsl
jmp
mov
mov
sbb
test
pop
sbb
cmp
es
pushf
dec
push
lock
in
jne,pn
in
testl
mov
dec
jne
push
mov
inc
enter
js
cmp
sbb
icebp
mov
jno
fwait
xchg
fidivl
fsubrs
shlb
or
into
push
xor
sub
stos
mov
lock
dec
push
push
lahf
xor
inc
jle
enter
mov
fs
and
les
mov
adcb
mov
add
lcall
inc
in
jnp
loopne
add
repnz
or
aaa
cmp
lret
push
insb
pop
mov
in
pop
push
adc
lahf
sti
jns
or
xor
out
and
sub
jnp
pop
sbb
out
mov
mov
cli
fwait
pop
subb
leave
sub
mov
orl
mov
jo
enter
adcb
or
mov
roll
push
or
mov
xchg
test
jo
jecxz
fcomp
cwtl
adc
inc
and
push
fistps
inc
dec
inc
addr16
icebp
pop
mov
mov
xor
int3
addr16
mov
sahf
sub
out
imul
mov
pop
pop
dec
dec
js
or
xchg
add
push
loopne
push
pop
and
insb
adc
cmp
mov
addb
jl
ja
push
xchg
jmp
add
xor
mov
fildl
jmp
cmp
push
inc
jbe
arpl
lcall
xor
js
pop
mov
sbb
jno
or
add
dec
push
aam
mov
outsl
les
clc
push
push
into
xor
cmp
mov
sbb
xor
dec
shr
imul
test
imul
in
shl
cmp
fisttpl
sbb
sub
mov
pop
jne
xchg
aas
mov
shll
pop
test
nop
mov
cmp
jnp
flds
mov
and
xchg
xor
add
lock
mov
fisttpll
sub
push
sub
xchg
fdivp
jno
sub
mov
dec
pop
shl
lds
repnz
std
lret
add
sbb
adc
jno
int3
mov
repnz
lods
push
cwtl
inc
adc
dec
sub
push
ljmp
sub
addr16
lds
lcall
ja
mov
jmp
stos
out
fs
xchg
ds
sti
and
addb
je
cmc
bound
jnp
inc
mov
mov
sub
fadds
push
pop
test
cmpsl
test
cli
mov
pushf
and
ja
std
push
icebp
or
mov
int3
push
scas
lret
pop
and
mull
cli
inc
jns
mov
or
out
cli
adc
jno
leave
sbb
mov
or
adc
cmp
adc
or
push
xchg
mov
out
jno
mov
xchg
lahf
sti
inc
iret
push
iret
jns
icebp
jnp
adc
fimuls
in
lret
mov
cmpsb
addl
push
or
ds
mov
nop
mov
insl
sbb
push
add
test
pop
xor
cltd
rorb
jecxz
icebp
int
xchg
cwtl
icebp
sbb
lcall
cltd
mov
jo
in
push
sbb
or
ret
daa
xchg
and
je
leave
lea
push
sbb
sbb
lret
loope
mov
frstor
mov
and
pop
pop
xor
mov
or
sbb
into
jae
insb
jmp
cmp
inc
fstpt
cmpsl
loope
mov
mov
pop
inc
fbstp
int
sbb
sub
mov
aad
xrelease
pop
dec
xchg
test
icebp
push
sbb
mov
mov
inc
mov
pop
add
mov
adc
jl
lods
std
inc
lock
call
sub
in
xchg
mov
jp
push
mov
push
push
lods
xchg
lds
ljmp
xlat
fsubrs
icebp
adc
clc
sub
in
xorb
psllw
push
cmp
sub
or
and
sbb
cmpb
std
jbe
negb
jns
mov
pop
addr16
push
popa
out
es
pop
psubd
fwait
std
push
out
fsubp
inc
movsl
pop
fidivrs
adc
xorps
jl
cli
pusha
lahf
mov
inc
xchg
mov
push
add
mov
sbb
ret
outsl
negl
addr16
lret
dec
xchg
out
dec
xor
aaa
pop
test
or
xor
rolb
stc
arpl
inc
add
add
jne
jb
sub
dec
or
dec
sub
or
jge
sarb
push
adc
jmp
lahf
int
mov
inc
lret
push
addr16
fisubl
cld
popf
mov
das
cmp
inc
xor
dec
lahf
jl
negb
lods
adc
ljmp
push
pusha
notl
mov
sub
fucomi
sbb
bound
xor
stos
xor
out
mov
mov
dec
mov
adc
inc
jl
push
xchg
pop
sti
outsb
xor
mov
popf
pusha
jns
stos
inc
lock
pop
cwtl
fstl
cwtl
push
inc
out
cmp
jno
test
jp
sbb
fbld
or
outsb
int
cmp
sub
sbb
push
popf
pop
push
fsts
or
enter
add
sbb
jnp
iret
dec
inc
cmp
adcb
in
leave
inc
add
ret
xor
mov
dec
pop
mull
repz
push
jne
fmuls
push
pop
mov
imul
icebp
cmp
fisubs
push
cmpsl
stc
out
inc
jnp
and
testl
lahf
inc
xchg
roll
movsb
add
and
loope
outsl
mov
jmp
ret
xchg
insl
sbb
insb
inc
push
jae
decl
fdiv
xchg
pop
movsb
pop
sbb
pop
or
mov
imul
fabs
xchg
cmc
inc
xor
jns
cmc
or
xchg
iret
stc
cmp
enter
jg
out
popf
js
mov
mov
xchg
cmp
imul
andl
in
aam
les
cli
rep
sub
movsl
insl
jl
loopne
cmp
push
into
sbb
add
ret
out
sub
cmp
or
loope
insl
dec
adc
cmpl
bound
scas
leave
mov
mov
pop
xchg
adc
int3
xor
sbb
stos
push
sbb
fcmovne
cmpsb
and
outsl
rcll
sbbl
sbb
notl
xlat
mov
cmp
lods
cmp
fstl
es
in
lret
jae
cli
gs
mov
jns
adc
imull
add
je
push
or
aam
dec
jmp
mov
jmp
and
pop
cmpb
jmp
lock
inc
faddl
mov
subl
call
inc
push
and
es
insb
or
repz
jecxz
jae
js
movsb
or
xchg
filds
xor
pop
or
addr16
and
mov
fs
mov
scas
pushf
inc
aam
pop
aaa
push
repnz
push
pop
jge
lcall
iret
pop
cltd
inc
test
mov
test
pop
cld
leave
jno
xchg
mov
inc
imul
lcall
adc
imul
and
cmpsl
pop
push
repz
into
pop
mov
mov
or
adc
add
xor
addb
test
mov
adc
sbb
ja
shrl
sbb
and
popf
xchg
mov
lret
xor
out
stc
fbld
xchg
jne
pop
jo
xor
cmc
rcll
xchg
sti
dec
std
pop
test
outsl
dec
or
cmc
mov
data16
leave
add
mov
test
sbb
and
jno
popa
cmp
mov
add
cs
test
scas
pop
enter
lea
test
cltd
scas
in
mov
inc
icebp
xor
and
xor
lds
movsl
int3
and
ljmp
lretw
xor
xor
es
or
or
adc
adc
rorl
mov
rorb
mov
ljmp
push
in
mov
add
push
mov
push
push
scas
or
jbe
pop
dec
fdiv
inc
hlt
pop
mov
inc
cmp
fistps
cwtl
mov
repz
mov
sub
data16
ja
addr16
fsubrp
aaa
testb
xlat
adc
and
cmp
jle
sub
dec
scas
jmp
inc
movl
xchg
fwait
jo
fdivp
loopne
ja
xchg
ss
sbb
lea
mov
fsts
sbb
jnp
dec
scas
es
stos
or
enter
mov
sti
xchg
jmp
sbb
jmp
push
std
ja
pop
sub
xchg
mov
pop
dec
pop
shlb
arpl
daa
outsb
jmp
inc
lcall
test
push
cli
pusha
js
notb
aad
sub
xchg
ljmp
insl
hlt
mov
xchg
cs
mov
mov
iret
insb
xchg
add
xchg
and
in
insl
jns
inc
in
xchg
aaa
xchg
add
lds
aaa
test
xchg
mov
call
sub
mov
sub
jno
push
mov
loop
repz
cmp
dec
or
clc
add
cmp
movsb
push
sub
inc
cmp
mov
dec
sub
adc
cltd
lods
lret
test
pop
push
jno
xchg
cmpsl
out
mov
jbe
iret
push
mov
lods
insl
push
in
shl
push
xchg
inc
bound
inc
out
call
test
popf
in
pop
push
test
lock
push
or
and
pop
fmuls
shll
fimull
mov
aaa
fidivl
call
jecxz
mov
stc
cmp
push
fnstenv
inc
xor
rclb
clc
cltd
mov
fwait
xor
xchg
adc
out
and
pop
mov
scas
pop
jmp
fisubl
in
push
dec
pop
xchg
frstor
push
in
cwtl
dec
jae
fldt
mov
shlb
sbb
sbb
jge
out
les
add
jp
test
push
lock
mov
dec
and
dec
push
call
mov
js
add
jo
stc
repnz
push
sarl
push
arpl
pop
inc
icebp
add
ljmp
jns
xchg
stos
or
ljmp
pop
jbe
aam
and
mov
jne
fiaddl
popf
mov
lods
pop
rorl
scas
add
pop
movsl
or
and
nopl
adc
das
add
sbb
xchg
pop
jge
xchg
rorb
stos
push
lret
or
and
dec
jns
jne
jp
mov
sar
inc
fidivl
cmc
clc
xor
mov
sub
lock
push
jo
push
out
mov
jns
dec
mov
insl
xor
imul
lahf
imul
xor
cld
lahf
stos
filds
push
push
pushf
jno
mov
jge
arpl
je
mov
lods
push
sub
fscale
scas
or
cli
aad
in
sub
shrb
mov
jo
pushf
sbb
gs
sbb
idiv
mov
or
inc
sbb
and
aad
cmp
push
sbb
xchg
push
cmpsl
pop
adc
jmp
ds
insl
dec
rorl
scas
push
mov
das
in
push
sbb
add
sbb
adc
insb
inc
in
popa
push
test
fsts
pop
pushf
adc
iret
mov
inc
test
pop
inc
aad
hlt
mov
jge
pop
sub
push
push
or
adc
dec
test
inc
in
ds
sub
inc
xor
fwait
lcall
push
hlt
mov
insb
icebp
ficomps
and
stc
xor
cltd
mov
or
icebp
int
push
pop
sub
mov
xor
adc
outsb
adc
sarb
jg
dec
addr16
mov
cmpsl
fs
insl
xor
jo
mov
gs
daa
test
loopne
mov
and
jbe
lret
das
adcl
int3
aam
pushf
inc
dec
xchg
pop
adc
lret
int
arpl
sub
aas
std
push
rcll
inc
outsl
xor
loopne
and
iret
arpl
jo
or
fmuls
sbb
pushf
dec
inc
xor
lea
int
mov
dec
cmp
pop
enter
xor
int
jbe
or
add
imul
iret
std
test
mov
xchg
in
mov
pop
jne
les
or
jb
push
addr16
leave
aad
fisttps
shlb
inc
and
clc
rolb
cld
insb
je
cld
push
jae
sbb
xor
xchg
decb
outsl
ss
jg
arpl
pop
cwtl
mov
dec
in
addl
testl
in
and
shlb
mov
rcr
in
jl
fistpl
je
rcl
sbbb
mov
push
sub
out
adc
out
andb
jge
in
xchg
push
mov
sbb
inc
mov
inc
sbb
adc
loop
addr16
sbb
outsb
dec
pop
cwtl
dec
mov
or
imul
push
mov
mov
scas
test
lods
cmp
je
test
scas
jmp
aad
mov
inc
mov
adc
loopne
sub
and
adc
dec
mov
ret
fidivs
pusha
add
in
xor
push
pop
cmpsl
ret
sbb
mov
js
jge
ret
xchg
sbb
xchg
dec
adcl
lret
xor
and
inc
mov
test
in
enter
lahf
mov
sbb
mov
sbb
das
cmpb
xor
xlat
push
imul
cmp
mov
push
lahf
xchg
out
sub
cmpsl
movsb
popf
mov
into
je
outsb
and
in
ja
sbb
and
push
pop
xor
mov
and
inc
les
push
test
inc
mov
int
cltd
mov
inc
arpl
xchg
int3
cmp
repnz
cmp
add
sbb
pusha
jns
or
push
push
test
sbb
xor
push
mov
dec
push
sub
imul
lods
pusha
pop
jo
ja
and
pop
js
inc
mov
xor
fmulp
cld
lea
sarb
hlt
xchg
or
out
fldenv
dec
or
sbb
xor
rclb
push
xor
mov
adc
sbb
jo
mov
sete
cld
jne
xlat
mov
cmpsl
and
movsb
xchg
or
jle
pop
xor
into
xor
imul
out
out
inc
nop
xor
xor
imul
insb
lds
adc
repnz
and
mov
or
cld
mov
sub
jns
pop
clc
xor
sti
mov
mov
or
outsl
test
jb
xlat
adcl
xor
mov
in
cmpsb
ffree
jle
icebp
push
cld
lahf
sub
enter
int
sbb
sbb
pop
push
mov
xchg
pop
sub
cmp
adc
xor
cmp
out
sub
cmp
sti
out
inc
mov
lret
xor
mov
sbb
pop
sub
sti
sti
fwait
or
frstor
push
inc
insl
stc
in
fwait
xor
add
sub
imul
icebp
fstpl
mov
or
stc
lret
or
pop
outsb
adc
sub
mov
lods
out
data16
mov
mov
mov
xchg
push
or
cld
mov
lods
cli
cwtl
push
and
sub
xchg
loopne
pop
pop
les
arpl
dec
sub
popa
fs
ljmp
inc
icebp
cltd
divb
lcall
int3
sbb
imul
stos
mov
bound
lods
lods
rclb
mov
into
insb
mov
push
and
jge
fincstp
mov
adcb
jbe
stc
in
pusha
fisubs
es
stc
lds
out
mov
inc
inc
mov
test
imul
cmc
shlb
mov
fstl
cmpsb
out
inc
fisubrs
mov
ljmp
lret
ss
fcomps
dec
clc
and
insl
popa
push
rcr
push
int
lods
hlt
xchg
dec
popa
mov
ret
inc
fisubrl
test
push
loopne
mov
aaa
xchg
fldcw
mov
mov
inc
dec
jne
cmp
and
fisubl
aad
or
push
xchg
outsl
sbb
shrb
mov
fwait
pop
pop
mov
sahf
jl
je
add
lods
push
rcrl
aam
mov
adc
out
movsb
popa
hlt
in
mov
xorb
mov
cltd
test
jge
sbb
stos
mov
pop
push
jge
xchg
mov
outsb
cmp
mov
jno
inc
cmp
and
pop
out
jmp
xchg
test
sbb
loope
out
adc
adc
outsl
mov
outsb
bound
addr16
dec
popl
mov
lds
aas
xor
int3
xchg
and
out
cmp
jo
or
mov
add
mov
cmpsl
stos
repnz
pop
repnz
cmp
xchg
adc
fsubs
push
rolb
sbb
adc
cmc
out
mov
loopne
mov
push
xor
cli
es
inc
vxorps
outsl
push
mov
xchg
ljmp
push
or
enter
addb
loopne
test
dec
dec
xor
push
loope
js
push
pop
in
xrelease
ljmp
jp
stos
mov
xchg
cmp
imul
es
inc
add
pop
cld
aam
jno
xchg
adc
fstps
cmp
pop
icebp
fsubrp
add
lret
hlt
clc
fcomi
outsl
add
sbb
mov
dec
and
enter
mov
repnz
js
adc
ljmp
lret
push
xchg
jle
dec
sub
add
movb
shrb
mov
lret
int3
clc
mov
or
add
push
fisubs
xchg
or
je
mov
and
mov
jb
lret
or
fld
dec
xchg
scas
or
or
pusha
mov
adc
stos
pop
aad
push
push
adc
mov
jmp
gs
jl
std
mov
and
sub
test
lret
push
jp
and
add
in
subps
mov
cltd
lahf
sub
std
mov
jecxz
push
insl
mov
mov
or
test
adc
adc
pop
mulb
xor
popf
push
out
xchg
fdivrl
adc
pop
sahf
push
xor
xchg
cmp
popa
dec
insl
push
mov
xor
pop
sub
outsl
std
mov
mov
aad
cld
jbe
mov
pop
adc
xchg
push
scas
icebp
adc
fcoml
or
negl
jmp
mov
inc
sbb
addr16
adc
ret
lods
xorl
lahf
shr
stos
enter
movsl
or
xchg
enter
scas
pop
xchg
hlt
movsb
pop
in
std
das
jbe
testl
bound
sbb
push
repz
fstpl
rcr
and
ds
aas
mov
bnd
or
andb
ss
push
dec
mov
fimull
mov
call
push
es
sahf
xchg
fdivl
mov
cmpsl
aaa
mov
add
sahf
dec
in
pop
jmp
rolb
fnstcw
sti
mov
pop
or
int3
addb
ret
add
call
add
roll
push
ret
mov
jns
cmc
sbb
and
fucom
sahf
push
test
std
add
and
test
push
js
call
andps
cmp
enter
jno
pop
dec
stc
mov
cmp
test
pop
pop
jo
sub
pop
je
loope
gs
xor
lret
and
cmp
lret
in
cmpsb
cmp
lods
xchg
sub
repz
js
fs
push
ret
lret
push
inc
pop
mov
stc
js
shlb
cwtl
cmp
xchg
arpl
sub
mov
jbe
mov
ret
out
cld
test
dec
rcll
mov
jmp
sub
cmp
test
imul
cmpsl
lea
in
loop
nop
outsb
jp
or
lds
sbb
insb
ret
movsl
push
cld
stos
mov
dec
cld
push
loope
jb
inc
std
dec
jae
pop
dec
ret
mov
mov
sbb
je
sub
leave
sbb
jp
sbb
cmp
insl
fdivrl
sbb
sbbb
fsubrl
test
std
xlat
aam
sub
bound
push
cld
cs
cmp
cmpsb
mov
lahf
push
loope
ret
xchg
add
pushf
xchg
mov
clc
cmp
cwtl
aam
ss
xchg
movsb
dec
adc
push
popa
ror
mov
push
inc
mov
dec
cmp
gs
xchg
pop
adc
movsl
and
call
dec
neg
push
aad
pop
fisttps
popa
addb
pop
pop
movsl
inc
test
shrb
aad
xor
pop
xchg
ds
dec
mov
pop
pop
out
test
lahf
push
jne
push
scas
enter
add
lahf
jae
aad
fs
rcrl
sbb
add
fld
xchg
push
xchg
adc
sbbl
pushf
xchg
sub
pop
cmp
inc
pop
in
dec
push
mov
sub
sbb
ret
loop
sbb
or
loopnew
xchg
adc
inc
push
test
or
je
jno
jecxz
fcoms
sub
fmuls
or
jmp
pushf
addb
gs
add
fs
mov
cmp
mov
sbb
jns
roll
xchg
js
popa
add
lret
test
sub
add
cld
adc
je
popa
pop
sti
mov
loope
clc
push
iret
or
out
movsl
mov
adc
sub
cmp
fs
or
jae
fsubrl
roll
daa
xchg
push
adc
cmovg
and
dec
enter
or
and
outsl
sub
neg
adc
sbb
pop
repnz
pop
sbb
test
je
mov
cmpsl
negl
mov
ret
and
int
inc
sbb
test
pop
out
scas
sub
shlb
test
mov
inc
nop
jne
sub
icebp
mov
shl
push
imul
out
jl
test
push
sarb
mov
popa
call
in
cmp
in
loop
and
mov
fs
inc
add
subb
inc
mov
and
and
push
mov
in
and
adc
xor
jne
sbb
xchg
jno
mov
or
sub
mov
add
adc
xor
lahf
mov
push
insb
sbb
or
inc
shrb
in
sub
and
jb
nop
pop
xchg
in
mov
mov
xchg
imul
stos
push
jne
cmpxchg
inc
jle
and
cmp
daa
sub
dec
inc
fdivrs
sbb
and
lods
int
inc
xchg
mov
scas
mov
xor
ds
mov
shrb
pop
cld
negb
out
ljmp
je
outsl
cltd
pop
sub
mov
push
jl
adc
fwait
add
dec
int3
inc
sub
fdivs
subl
sub
mov
mov
fwait
into
mov
loop
insl
xor
call
hlt
call
and
lods
pop
jae
aas
cltd
leave
inc
aaa
mov
push
sahf
dec
mov
adc
xor
dec
inc
mov
shll
add
lcall
mov
push
xor
repz
cmp
xchg
div
daa
dec
and
enter
cmp
sbb
pop
shlb
push
dec
stos
push
sub
clc
cli
mov
or
scas
push
mov
sbbb
add
jae
mov
mov
mul
mov
jp
dec
aam
popa
add
sub
sbb
sbbb
std
adc
or
xlat
jbe
inc
dec
push
scas
adcl
add
lcall
fstl
je
insb
inc
gs
dec
sub
std
popf
push
lods
jge
insl
in
sahf
stc
in
dec
push
add
loopne
cmc
sbb
stc
cwtl
adc
lock
aaa
dec
dec
lock
cwtl
push
xchg
scas
cwtl
xor
mov
xlat
mov
nop
adc
push
jl
movsl
fs
jl
out
jae
lds
std
iret
test
pop
fdivrl
add
in
out
inc
sarl
mov
sbb
movsl
nop
aam
xchg
sbb
mov
sahf
mov
outsb
mov
push
mov
pop
leave
sub
add
xchg
imul
lock
int3
insb
and
dec
pop
pop
inc
inc
pop
inc
in
or
aas
negl
fisubl
ljmp
cli
adc
sbb
pop
add
inc
adc
cwtl
dec
rol
loope
mov
popa
and
bnd
insl
cwtl
mov
iret
lcall
je
sti
mov
out
aam
movsl
xor
bound
js
js
jns
jecxz
das
or
push
pextrw
insb
insl
enter
cmp
cltd
push
sub
test
rcll
pusha
xchg
js
and
nop
xchg
gs
cmpsl
rcr
jle
paddq
mov
test
in
mov
pop
rsm
mov
mov
pop
ss
stos
inc
stos
pop
sub
jno
pop
mov
dec
rcl
inc
mov
mov
mov
jno
push
cld
dec
ret
mov
cwtl
adc
mov
mov
mov
push
xor
sub
pushf
inc
aad
sahf
and
or
mov
inc
addl
mov
into
and
cld
inc
fidivrl
pop
scas
andb
das
mov
sbb
sub
jmp
push
push
pop
icebp
out
sub
push
mov
lods
movsb
sbb
out
ss
sahf
ret
dec
push
inc
pop
xchg
aas
dec
push
lock
sti
mov
lock
adc
xor
loope
adc
and
xor
cli
xchg
sub
idivb
jl
repnz
aas
jno
mov
pusha
cwtl
or
nop
push
and
in
es
jle
sbb
iret
pop
and
and
push
out
push
dec
jnp
mov
test
loopne
mov
shr
shrl
mov
add
aaa
xchg
and
adc
dec
sub
jnp
mov
jb
fdivrs
fistps
pop
and
popf
ljmp
lods
outsb
in
inc
sub
divb
push
sbb
or
out
shl
pop
xchg
cmp
jg
push
les
jl
stc
in
inc
sbb
lock
mov
add
and
out
sub
sub
and
iret
imul
test
jae
jb
in
fidivl
mov
int3
push
fxch
fdivs
mov
jl
mov
in
subb
subl
pop
mov
and
mov
fisttps
cli
lret
push
mov
mov
dec
outsb
std
push
mov
pop
iret
jns
ds
shl
sahf
xchg
imul
icebp
push
mov
dec
mov
fwait
repnz
ffreep
lods
cmpsl
xchg
push
push
jge
hlt
je
dec
or
xchg
repnz
push
lods
repnz
xchg
aas
sbb
js
xor
std
movsb
sahf
jnp
and
or
jns,pn
xor
mov
test
mov
sub
arpl
daa
inc
clc
dec
ja
mov
mov
xor
adc
sub
or
push
shlb
scas
addr16
test
arpl
mov
loopne
rcll
movsl
in
movsb
cmp
mov
rorb
sar
pop
dec
mov
int
mov
mov
pmaxub
or
scas
outsb
addr16
xor
mov
or
jb
dec
xchg
push
std
fmul
loope
xor
xchg
pop
cmpsb
cmc
pop
pop
cmp
popa
add
mov
lret
or
and
scas
loopne
insl
push
aad
in
leave
repnz
pop
jmp
xor
adc
je
add
out
adc
or
jle
mov
cmp
xchg
mov
subl
out
mov
movsl
into
mov
adc
lret
in
cmc
push
inc
clc
addb
test
mov
rorb
bound
fadds
stc
jb
decb
outsb
jge
aam
xchg
cmpsl
lahf
sbb
or
mov
adc
js
adc
std
loopne
or
pop
pushf
fiadds
ja
ja
adc
mov
fmul
ficomps
ss
mov
push
and
inc
mov
push
ds
adc
icebp
and
lods
add
pushf
and
dec
add
js
shll
cmc
and
and
xchg
push
push
add
adc
add
jp
mov
daa
mov
mov
cmp
xor
dec
jnp
jle
jge
pop
xor
loope
dec
ja
push
xlat
xchg
call
cmp
lahf
pop
xor
pop
cltd
outsb
cmpl
pop
lock
push
sub
push
jbe
fsubrl
push
dec
int3
or
lods
loop
mov
jnp
out
lods
insb
sbbl
xorl
adc
add
int
notb
int3
cmpsb
mov
divb
push
ja
adc
add
scas
adc
mov
adc
pop
dec
or
rol
xchg
in
repz
inc
add
jns
cmc
stc
jp
pop
andb
pop
stos
fs
mov
lcall
cmpsl
aaa
int3
popa
mov
push
test
out
jae
out
lds
cmc
dec
js
lret
lea
xchg
jnp
or
sub
cmp
jecxz
xor
mov
ret
fimuls
xor
notb
test
xchg
mov
push
test
and
movsl
daa
pop
lahf
pop
fwait
movsb
or
lock
inc
aaa
adc
push
lcall
in
mov
cld
mov
inc
or
push
inc
in
cli
add
movsb
sub
pop
scas
inc
mov
jns
jge
inc
push
fcmovnu
add
mov
mov
mov
xor
jmp
negb
rorb
pushf
push
cs
repz
mov
xchg
mov
jmp
cmc
inc
fldcw
mov
fstpl
je
cmp
popa
adc
jbe,pt
xchg
fcompl
int
cmp
and
add
hlt
das
xchg
cs
sbb
jle
cmp
push
stc
push
pop
icebp
addr16
popa
ljmp
insb
sbb
push
or
stos
sbb
out
adc
lret
jae
stc
std
cwtl
outsb
mov
jmp
push
mov
dec
es
cmpsb
daa
adc
hlt
cmp
shlb
aas
jg
cs
rep
fsubr
mov
mov
imulb
dec
mov
addr16
lahf
sbb
push
mov
and
or
lock
mov
out
inc
outsl
loopne
or
sbb
push
sahf
mov
add
lahf
icebp
sub
fldcw
aaa
add
lds
in
mov
sti
pusha
loope
xchg
dec
and
data16
cs
jns
int
xor
xchg
fcompl
cmp
sub
aam
add
in
xor
cli
xor
push
inc
scas
push
pop
inc
adc
adc
sub
sub
sbb
inc
sbb
in
adc
inc
or
and
xchg
aaa
mov
pusha
push
arpl
pop
out
movsb
and
mov
xor
mov
clc
shlb
or
inc
out
sti
mov
stos
dec
lret
mov
imul
mov
lret
stos
out
add
cmpsb
ss
cli
or
pop
xchg
jo
xchg
adcl
jb
ret
xor
push
ljmp
xchg
insb
or
inc
push
inc
jle
mov
push
cltd
std
adc
or
add
xchg
xchg
add
inc
lret
jo
iret
push
jg
enter
mov
xchg
mov
pop
data16
cld
or
mov
iret
jmp
lahf
cmp
fadds
cmp
or
sbb
bound
adc
xor
push
xchg
dec
xor
repnz
mov
ds
pop
add
jo
lcall
pop
ja
lahf
adc
dec
mov
push
in
adc
out
testb
push
dec
notb
dec
fstpt
fnstsw
in
lds
push
mov
jo
fiaddl
dec
pusha
mov
xor
dec
dec
adc
mov
sbb
int
push
jns
lods
cltd
add
xchg
or
sub
aad
cli
adc
and
pop
add
and
push
sub
ja
scas
mov
inc
xchg
lahf
adc
or
orl
xlat
jne
loopne
les
in
loope
mov
sub
lea
movl
push
movsb
adc
cltd
arpl
push
fisttps
jge
imul
xor
leave
stc
sub
jnp
sti
or
mov
in
repz
xchg
and
or
adc
les
repz
xor
mov
mov
mov
mov
xor
imull
aas
popa
testb
cmp
in
xchg
les
push
lock
or
nop
call
repnz
xchg
jae
fnstsw
pop
cmp
sbb
int3
ficoms
or
push
add
lock
or
xchg
popa
enter
mov
jecxz
lock
adc
mull
xor
out
lods
xchg
adc
loope
pop
adc
cmp
test
int
dec
orb
mov
jle
pop
cmp
dec
std
mov
into
shrl
or
mov
sub
je
and
popa
test
sbb
out
sbb
inc
adc
fs
in
pushf
jns
dec
test
in
push
fwait
jne
add
fnstcw
sbb
jae
mov
scas
mov
leave
inc
insb
into
push
lods
adc
adc
jns
cmc
jne
fsubr
gs
stos
sti
nop
ss
mov
xlat
mov
inc
xorb
ret
test
in
xchg
push
add
lea
scas
in
dec
roll
add
mov
mov
decb
or
addr16
add
cmp
in
mov
jp
rcrl
or
push
mov
jb
aas
aaa
jns
int
mov
stc
nop
and
std
or
inc
imul
mov
push
inc
xlat
std
cmpb
xchg
cmp
jle
adc
gs
xor
out
inc
lahf
push
imul
repz
inc
rcr
sub
jle
andb
sub
rolb
adcl
xor
leave
in
xor
sahf
inc
xchg
cmc
pop
fs
sti
in
pop
fxch
insb
adc
pop
push
fisttpl
jnp
push
icebp
mov
out
push
in
and
lock
fistl
int3
fnstenv
mov
fsts
push
adc
sbb
pop
js
je
fsubl
push
xor
pop
dec
xor
dec
popf
cmpl
sub
push
test
seta
cmp
pusha
mov
mov
fwait
jl
xor
sub
cmpsb
lea
cmp
cmc
out
jns
std
stos
cs
imul
ss
pop
sbb
mov
sbb
inc
and
pop
lock
sub
dec
mov
and
and
mov
jmp
mov
push
imul
xor
loopne
sub
sub
sbbl
aad
addr16
jns
fdivs
sub
xor
loopne
enter
cmp
cmp
sbb
inc
sub
mov
insl
in
jb
loopne
je
jne
sbb
lods
cwtl
shl
leave
test
dec
test
adc
xor
add
mov
mov
cmp
and
and
fldt
dec
jmp
add
inc
push
push
and
dec
aaa
pop
fnsave
cmp
mov
jo
pop
mov
add
ret
cltd
jae
rol
rcrb
mov
adc
xchg
dec
bound
push
dec
mov
mov
fisttps
aam
jecxz
aaa
push
push
insl
outsl
xor
stos
scas
iret
xchg
and
out
fldl
jbe
stos
cmpsb
outsb
mov
pushf
repz
test
adc
jo
cwtl
movsl
or
pushw
push
lods
out
add
scas
push
fucomi
cmc
gs
inc
dec
adcb
test
mov
inc
in
scas
inc
cmpb
inc
xor
or
popa
test
inc
xchg
lret
pop
jnp
subl
in
es
sub
xor
popa
xor
pop
mov
cmp
pop
xor
in
pop
cmp
mov
xor
int
mov
icebp
js
lcall
fldcw
notb
iret
insl
dec
ss
pop
ret
lret
shll
mov
mov
jns
in
hlt
cmp
iret
outsb
movl
adcb
add
mov
dec
jno
rolb
sarb
push
jecxz
ljmp
or
push
dec
iret
bound
push
pop
push
out
xor
cmp
push
cmp
mov
mov
mov
jb
mov
or
sbb
stc
int
ljmp
mov
repnz
mov
int3
mov
pushl
stos
into
xchg
je
sbb
sbb
cmc
jno
rorb
repnz
inc
fxch
xorl
pusha
or
inc
push
shlb
shr
jae
xor
push
repz
xchg
jge
cs
shl
push
jns
je
insl
out
leave
push
or
jg
mov
or
pop
bound
jl
mov
mov
mov
xchg
and
sub
dec
push
xor
mov
sbb
inc
lahf
flds
sub
mov
mov
push
aaa
or
jae
jg,pn
jns
pop
mov
int
adc
or
lret
mov
xchg
enter
cmpsb
lcall
dec
insb
jae
lret
or
sub
sbb
sbb
pop
scas
mov
mov
out
es
xchg
xchg
lods
fs
inc
or
rcl
stc
pusha
icebp
enter
jp
xor
addr16
ret
mov
inc
mov
mov
es
das
test
fadds
push
adc
dec
lcall
das
mov
inc
sub
ljmp
in
jbe
sbb
filds
outsb
stc
and
add
push
insl
jge
and
outsl
adc
dec
xchg
rcll
arpl
mov
cmpsb
xor
cwtl
sbb
pop
push
xor
mov
push
mov
dec
dec
dec
sar
jns
sahf
outsb
fdiv
sbb
ds
xchg
mov
in
xchg
xor
xchg
insb
insb
mov
add
jbe
or
int3
mov
loop
out
stos
mov
hlt
iret
mov
pop
xor
fdivl
out
gs
xchg
daa
sbb
push
in
jg
add
sub
loopne,pn
add
cmp
jo
add
inc
ror
subl
push
push
dec
sbbl
sub
xor
jecxz
mov
add
inc
push
mov
or
and
xor
mov
loop
test
es
ret
out
sub
jno
stc
pop
stos
daa
fcoml
pop
je
cwtl
inc
pop
cld
inc
adc
and
mov
dec
mov
imul
loop
push
sub
or
inc
pop
subl
jns
push
je
sbb
mov
push
or
gs
mov
loopne
dec
lods
or
mov
mov
cmp
sub
xor
out
lcall
sub
lret
sub
adc
rorb
ds
ljmp
dec
sub
dec
das
jle
iret
and
sbb
dec
sbb
mov
push
mov
mov
push
es
jbe
mov
shlb
sbb
leave
mov
mov
loop
out
in
imul
add
push
sub
inc
xchg
or
lcall
outsl
mov
test
jae
into
xlat
push
out
iret
jno
inc
xchg
pop
sbb
or
mov
mov
xor
out
mov
mov
les
fwait
push
jg
or
lock
push
lods
sub
mov
fmuls
mov
rclb
inc
inc
or
test
pop
jno
enter
loop
mov
push
lods
repnz
or
sub
sarb
mov
xchg
cmp
add
jp
pop
popa
mov
pop
loop
jmp
xchg
xor
in
psllq
imul
mov
out
jno
call
pop
cmp
xchg
mov
data16
lcall
js
movsl
or
cmpsl
pop
icebp
cltd
sti
ret
aam
push
push
push
xchg
mov
jae
dec
imul
fcmovnu
pop
lret
xchg
fimuls
lret
jbe
shll
out
ret
rcr
and
icebp
fxch
jecxz
lock
gs
pop
out
rorl
lahf
adc
in
mov
aam
mov
dec
leave
movsl
or
hlt
in
push
test
mov
add
adc
mov
dec
mov
xor
adc
mov
fldcw
xchg
ljmpw
dec
out
aas
push
mov
push
loopne
in
sbb
sarb
shll
fsubrp
gs
sbb
mov
lods
pushl
pusha
sub
outsl
cltd
arpl
cmp
fcom
arpl
mov
inc
and
xor
adc
fisttpl
mov
add
in
aam
pop
orb
sbb
inc
repnz
fcom
push
push
iret
sub
icebp
test
xchg
out
sub
shl
dec
pop
lods
sti
das
les
ljmp
repz
pop
loope
jle
leave
in
shlb
pop
pop
rol
call
scas
jne
push
out
jno
sub
test
pop
xor
je
sbb
fsubs
mov
cli
mov
movsl
mov
cli
xor
jnp
mov
xchg
sbb
mov
adc
pushf
roll
ljmp
in
ja
ffreep
les
js
mov
insb
fnsave
ss
es
sbb
pop
jmp
lock
shrl
adc
cmp
cltd
mulb
stos
cmpsb
fistpl
and
mov
ret
add
fmull
mov
dec
cmp
lahf
loopne
lds
adc
dec
test
mov
push
notl
adc
add
ljmp
inc
mov
inc
aam
or
jno
mov
or
sbb
int3
popf
andl
xor
jb
add
rcrb
sub
or
aam
add
or
mov
xor
mov
dec
fdivs
scas
aas
pushf
mov
pop
xor
js
movsl
cmc
dec
fistps
loopne
fxch
jge
xchg
cltd
ljmp
dec
cmp
pop
cld
dec
mov
icebp
push
sbb
dec
mov
adc
lret
sbb
jg
inc
inc
in
fnsave
xchg
mov
in
or
inc
push
mov
ret
sbb
ljmp
add
pop
addb
hlt
pop
pop
iret
push
xchg
adc
loopne
and
out
sub
mov
cs
mov
inc
cmp
adc
xor
mov
cmp
sub
imull
or
mov
cmpsl
cld
lods
iret
cmp
dec
inc
sbb
sbb
dec
in
pushf
loope
fcoml
or
es
fdivrs
test
ret
std
jmp
cli
or
aad
push
jl
sbbl
xor
icebp
mov
dec
out
jl
jl
fs
push
mov
and
bound
loope
clc
mov
push
repnz
cmp
ret
or
inc
orl
mov
lret
sub
or
xor
leave
mov
rolb
scas
fdivrl
lock
mov
sbb
jno
mov
and
push
popf
aas
popa
xor
es
adc
idivb
mov
xchg
int3
icebp
mov
sbb
xor
jle
addl
int
mov
mov
add
rcrl
notl
xchg
cli
sub
scas
and
insl
push
fucomip
jbe
test
movzwl
adc
sbb
imul
mov
and
aam
or
mov
and
mov
dec
leave
scas
adcb
adcl
icebp
dec
mov
xchg
push
addr16
inc
xorl
movsl
add
sub
outsl
add
mov
jnp
sbb
jb
pop
mov
mov
and
dec
push
jb
mov
inc
and
mov
iret
incb
fsubs
mov
add
test
fmuls
fwait
rcrb
orb
pop
cltd
mov
lcall
repnz
sbb
fimuls
cmp
arpl
add
pop
loop
xchg
in
sbb
loop
js
cld
test
xor
adcb
int
jmp
and
xor
adc
and
cmp
leave
stc
adc
imull
pop
popl
iret
roll
je
imul
lods
jns
mov
push
rorb
ljmp
pop
pop
insb
and
scas
out
fsts
mov
mov
leave
or
cmpsb
std
imul
sbb
loopne
jmp
push
xchg
ss
jecxz
rolb
test
pop
push
loop
xchg
xor
stos
scas
pop
jmp
shl
xlat
jb
xchg
pusha
mov
insb
dec
sub
ljmp
jp
cmp
ret
fisubrs
inc
in
mov
insl
test
test
rorl
cltd
push
xchg
mov
in
insb
negb
lods
in
lahf
jb
lret
adc
push
jno
jle
inc
mov
mov
inc
rorb
and
fnsave
out
and
mov
imul
cmp
mov
mov
or
xor
xchg
push
add
out
fiadds
ds
bnd
std
idivl
loopne
xlat
and
aam
jle
dec
inc
mov
push
mov
lret
roll
push
sbb
leave
testb
mov
mul
fnstcw
cmp
in
pop
aaa
and
cmp
shl
add
sti
divl
mov
test
add
or
mov
mov
xchg
or
jo
xor
mov
jae
sub
cmp
test
arpl
jnp
movsl
push
ds
cmp
out
adcb
adc
fbld
fnstsw
loope
out
sub
and
ret
add
jge
pop
out
insl
mov
shll
mov
inc
or
xchg
lock
adc
into
rcr
mov
push
shlb
sub
jecxz
leave
les
cmp
jge
loopne
cmpb
mov
inc
push
push
mov
jae
or
insl
mov
dec
mov
jmp
cmp
jmp
ret
adc
adc
xchg
inc
cmpsl
dec
je
dec
sbb
cmp
lds
adc
lods
je
mov
and
out
dec
mov
leave
in
inc
jl
jnp
clc
scas
sbb
mov
negb
cmp
push
adc
pushl
test
mov
dec
aas
pushf
lahf
sub
sub
sub
pop
cmpb
pop
inc
fstp
jo
dec
adc
adc
ret
push
xlat
movb
dec
in
in
fwait
mov
xor
js
ret
les
xor
inc
aas
sbb
lret
add
stos
dec
add
rclb
addr16
in
clc
jns
sub
adc
push
sub
sub
jl
js
sbb
fstpl
outsb
mov
iret
clc
pop
dec
dec
jl
cmpb
sar
pop
xchg
das
loop
dec
mov
insl
mov
mov
jp
pusha
pop
cmp
sub
xchg
lods
out
stos
dec
sahf
rolb
shlb
jge
je
cltd
mov
jge
lods
jle
adc
outsl
add
mov
mov
mov
movsl
mov
pop
sbb
sbb
loopne
sub
push
dec
bswap
push
mov
fs
insb
loop
sbb
jns
movl
pop
cmp
xchg
add
aas
rcrb
xor
jne
add
and
int3
in
jg
xor
mov
testb
jo
mov
movsb
mov
fldt
nop
xor
shll
jmp
call
into
dec
sbb
pop
dec
ja
and
push
push
rcl
loope
out
mov
lods
push
and
sbbb
cmp
xchg
out
mov
in
push
je
lods
mov
inc
mov
iret
fidivs
jg
sub
xchg
cmp
pop
inc
jae
sbb
ss
cli
imul
shr
push
int3
xor
jp
xor
int3
jecxz
and
loopne
movsb
pop
xor
mov
push
or
std
insb
gs
inc
sbb
inc
or
test
mov
stos
je
sbbl
stos
inc
adc
jecxz
jecxz
mov
push
jmp
cmp
add
cmovns
data16
cs
pushfw
icebp
ja
mov
repz
pop
popa
and
hlt
ljmp
lret
inc
dec
shlb
sbb
adc
and
cmp
pop
mov
mov
cwtl
xor
fiadds
mov
pop
fistl
cmp
push
xchg
cli
fstpl
dec
out
pusha
xchg
xor
dec
test
out
roll
jecxz
jecxz
or
fwait
mov
sbb
mov
mov
out
je
call
sbb
pop
ret
lods
adc
ror
or
push
fidivl
inc
arpl
scas
jge
mov
bound
mov
jl
lods
sub
rcrb
mov
and
shrb
xchg
lods
jmp
xchg
jo
mov
jb
mov
xor
cwtl
ror
popa
shl
mov
cmp
or
outsl
cmc
test
push
xchg
imul
cli
pop
and
into
pop
cld
push
or
adc
sub
fsubl
es
popl
fmull
push
adc
adc
test
push
pop
ljmp
mov
push
loopne
cmc
lods
out
cmp
sub
dec
lock
call
inc
adc
mov
fcmovu
cmpsb
lods
cmpsb
adc
dec
xchg
jg
sub
jae
fwait
aam
shlb
or
adc
fidivrs
sub
aaa
push
add
jae
std
jecxz
mov
inc
ljmp
or
repnz
lods
and
aam
push
jge
pop
outsb
int
sbb
add
cmp
daa
mov
fistps
cmp
jmp
dec
xor
aad
sub
call
mov
das
cmp
mov
mov
cmp
imul
dec
mov
das
iret
test
data16
lahf
push
pop
out
aas
cli
mov
dec
iret
cs
ljmp
les
aam
mulb
push
lahf
mov
idivl
fadds
pop
pop
inc
jbe
shrb
sbbb
xor
or
adc
fptan
loopne
pusha
loopne
or
sub
dec
lea
pop
out
add
adc
xor
sbb
insb
adc
and
pusha
dec
or
jle
aas
sbb
push
hlt
fcoms
inc
scas
cmp
mov
xor
dec
js
xor
ret
jmp
mov
fwait
pop
ja
inc
dec
jp
mov
lret
xchg
dec
enter
aas
or
fcomip
push
out
cmpsb
mov
xor
fsubl
sub
lds
push
jp
cmpsl
sub
insl
clc
test
pop
rcr
movsb
hlt
in
and
dec
icebp
jp
idiv
pushl
cwtl
lcall
jbe
nop
pop
mov
jg
out
ljmp
dec
loope
mov
pushf
imul
mov
and
inc
je
std
mov
stc
xchg
test
ja
rcl
loop
mov
pop
in
cmp
inc
push
call
test
aas
xor
xchg
mov
pop
cmp
in
xor
addl
push
or
int
jle
xor
aas
lods
lret
push
jae
cmpsl
sbb
xchg
cld
mov
sub
jmp
adc
sahf
shrb
inc
icebp
aad
scas
popf
push
repnz
cld
pop
add
insl
push
adc
mov
gs
out
stos
ss
cmp
xchg
add
icebp
sbb
sti
scas
fnstsw
sbb
pop
je
jg
mov
mov
inc
cmp
popa
xchg
dec
enter
daa
hlt
lods
push
and
mov
sub
sub
pop
cmp
cmpl
cmp
or
shl
cmp
dec
in
mov
in
mov
int
pushf
int3
pushf
fimull
xor
mov
push
inc
sarl
jnp
scas
push
jp
clc
xchg
lds
or
mov
mov
fs
pop
mov
fisubrs
test
sub
xor
arpl
adcl
adc
hlt
add
arpl
scas
cmp
pop
push
fisttps
mov
addr16
idivl
mov
sub
or
pushf
push
shl
sub
and
mov
test
pop
je
imul
aas
cltd
cld
dec
imul
add
or
int3
pop
push
je
loopne
sub
jb
mov
test
jb
fcompl
das
fldl
sbb
stos
xchg
jo
mov
mov
scas
or
repz
mov
inc
jmp
subb
movsb
inc
mov
out
sahf
mov
or
lret
cmp
filds
add
clc
rorb
imul
xchg
lahf
jmp
outsb
push
jns
cs
arpl
cmc
mov
loop
mov
stos
lret
cmp
aam
fisubrl
lds
inc
push
dec
test
push
ret
mov
imull
pop
xchg
sti
xor
imul
es
push
xchg
pop
andb
pop
addr16
clc
xchg
sub
mov
xchg
cmp
fldt
xchg
movsb
and
cmp
jl
push
jne
mov
ret
cli
mov
dec
hlt
jnp
pop
pop
adc
push
lods
or
adc
jo
bound
sbb
sbb
sbb
cmp
nop
int
outsl
cmpsb
dec
mov
out
fcmovnb
xchg
cli
add
pushf
icebp
scas
cmp
inc
sub
sub
pop
xchg
jae
add
xor
iretw
std
out
xor
adcb
fsubrs
jbe
pop
pop
in
lea
int3
jge
push
mov
xchg
addl
inc
xchg
mov
mov
pop
sub
insl
and
xor
mov
repnz
popf
cld
mov
test
scas
push
cmp
popf
or
jecxz
std
jmp
lods
lds
fidivrl
hlt
arpl
movsb
adcl
jnp
or
out
mov
mov
jns
xchg
cltd
jo
sbb
xorl
jns
add
aaa
daa
xchg
cld
pop
insl
aam
leave
sub
xchg
aad
lods
daa
cmovl
in
faddl
and
sbb
repz
jo
repz
sbb
mov
push
scas
aas
popf
dec
and
mov
ret
pusha
lret
push
xchg
push
dec
mov
insb
cmp
movsb
push
lahf
xchg
rcll
xor
xor
pop
xor
cltd
push
xchg
cmp
mov
icebp
mov
push
push
inc
sub
jg
rolb
push
push
push
sbb
and
mov
mov
cmp
adc
add
pop
push
insl
cmpsb
movl
jg
in
out
or
int
fiadds
add
div
insb
ret
dec
subb
clc
xchg
dec
sbb
test
loope
cs
sub
pushf
mov
inc
sti
pop
jge
stos
fcom
das
sbb
or
mov
in
aad
idivb
pusha
lods
loope
test
in
add
mov
sbb
hlt
and
dec
sbb
test
fisubl
fisubl
add
sbb
dec
inc
fmuls
fstps
lds
and
mov
mul
pop
pop
mov
je
sub
arpl
jnp
mov
ret
pop
add
or
or
cmp
xor
pop
dec
or
les
push
std
fisttpll
popf
outsl
cmp
sub
dec
lock
gs
pop
inc
fs
mov
stc
imul
lods
jecxz
into
ror
lcall
push
fwait
xor
inc
jb
clc
aas
sbb
test
leave
notl
pop
stos
stos
movsl
push
and
loopne
dec
and
pop
jno
adc
lods
jmp
repz
cld
icebp
or
out
inc
sub
mov
lock
mov
dec
mov
cmp
sti
cmpsl
adc
sub
xor
jle
imul
add
and
aas
mov
jno
clc
mov
pop
cmp
push
xor
inc
loope
xchg
add
jo
mov
jge
mov
mov
and
notl
cmp
mov
mov
pop
mov
cmp
mov
inc
or
out
mov
jbe
nop
jnp
scas
js
pop
aad
aaa
pop
sahf
sbb
test
scas
xor
xchg
lock
imul
sti
jmp
jge
pop
mov
sub
cmp
jne
jb
add
gs
pop
mov
cmpsl
cmp
scas
je
enter
insl
mov
pop
das
xor
jle
push
mulb
orb
jle
cwtl
sbb
mov
fdivrp
mov
jp
in
add
arpl
insb
jb
pusha
inc
inc
jns
pushf
jp
xor
cmp
lret
mov
push
inc
push
sub
add
sub
push
les
mov
aam
push
addr16
sub
iret
int
aaa
aas
lock
and
and
cwtl
insl
add
mov
das
jbe
adc
push
lea
shrl
push
sbbl
dec
mov
xchg
jno
clc
stos
sbb
dec
ret
aad
das
sub
mov
mov
sub
int3
lea
xor
inc
and
adc
xchg
cmp
call
push
push
inc
mov
xor
gs
hlt
dec
inc
ss
jne
dec
jo
lcall
xor
je
xchg
xchg
or
xor
cmp
add
and
cld
ret
fiadds
or
loopne
sbb
popa
test
inc
jge
jl
addr16
mov
mov
xchg
push
clc
inc
and
out
push
mov
sbbl
sub
mov
orb
arpl
cmp
cli
loope
clc
jmp
sub
jb
lock
cmp
mov
and
divb
xchg
hlt
or
test
xlat
stc
loop
imul
add
repnz
out
les
pop
nop
xchg
xor
mov
mov
int
cmpsb
loopne
inc
inc
clc
sahf
dec
jmp
rorl
cmp
idiv
xchg
jecxz
and
ficoml
inc
arpl
mov
or
fwait
nop
insl
insl
pop
pop
test
mov
leave
loope
sbbb
loope
fs
mulb
int
xchg
mov
dec
cmpsl
mov
enter
mov
ret
cmp
insl
adc
loop
nop
mov
jno
push
lret
mov
insl
lcall
jge
dec
test
push
jle
lea
adc
fstpl
fdiv
dec
jl
ljmp
mov
pop
mov
jb
pop
lds
mov
mov
mov
fdivs
stos
xor
mov
pushf
mov
xchg
push
stc
inc
es
dec
cmp
xchg
stos
int3
icebp
adc
cltd
fistpll
pop
mov
xchg
flds
addr16
mov
lahf
test
pushf
mov
cli
or
fldt
jecxz,pn
xchg
arpl
lcall
xor
gs
test
test
and
lcall
insb
lds
add
test
jne
jnp
adc
push
jmp
xchg
dec
adc
lcall
lods
or
jb
sbb
push
out
fwait
xacquire
sub
cmp
imul
ljmp
ret
aas
cmp
icebp
inc
pusha
ret
xchg
mov
out
xor
into
pop
jns
lahf
cs
rolb
add
pop
out
xchg
je
cli
pop
jno
adc
pop
in
push
pop
dec
loopne
xchg
sbb
in
add
xor
inc
mov
ljmp
inc
adc
and
decl
cmp
es
int
dec
mov
mov
mov
out
pusha
mov
outsb
je
adc
or
aaa
mov
adc
jnp
sbb
aas
nop
lret
mov
jae
xor
xor
icebp
sbb
call
popa
int3
out
or
jecxz
bndstx
inc
leave
xchg
sbb
icebp
mov
xor
stos
addb
shr
add
push
xchg
inc
push
mov
in
bound
js
cwtl
popa
add
hlt
adc
into
xor
rorl
mov
jmp
cmp
shrb
ret
call
ret
leave
xchg
ljmp
sub
loop,pt
or
call
ljmp
mov
push
jnp
mov
pop
and
jns
cmp
lahf
imul
push
mov
in
mov
ret
test
inc
out
xchg
repnz
out
adc
add
ret
sbb
jp,pt
fsubrl
dec
jmp
addr16
in
sub
or
loopne
outsb
mov
stos
frstor
add
pop
cmp
mov
daa
cli
and
clc
cmp
pop
mov
and
inc
cmpsl
iret
movb
pop
insl
addl
push
imul
push
jg
mov
mov
scas
adc
je
push
int
mov
arpl
or
imul
loopne
fs
mov
push
nop
inc
pop
lock
std
enter
mov
divb
inc
and
cmpsw
mov
adc
pusha
arpl
stc
push
cltd
push
jnp
cmp
pop
mov
push
movsb
movsl
test
inc
stos
fs
aaa
popf
or
loope
and
fs
mov
ret
inc
sarb
rorl
add
push
sar
xor
or
cmp
outsb
call
jae
jge
or
and
or
xchg
mov
dec
movsb
out
loopne
sub
dec
dec
adc
sbb
adc
xchg
jae
mov
pop
shlb
bound
iret
push
jecxz
mov
push
sub
leave
sub
cltd
pop
aas
sbb
sbb
push
mov
add
mov
cmp
sub
cmp
jge
push
jns
pop
inc
rorb
icebp
seto
push
mul
in
in
and
movsl
push
jp
into
push
scas
cmpsl
mov
pop
sbb
add
icebp
pop
jmp
cmpsb
sbbb
shlb
mov
lahf
and
daa
gs
push
aad
mov
out
push
pop
sub
out
pusha
jl
cs
fistl
xor
imul
xor
jecxz
or
and
int3
mov
xor
mov
arpl
shlb
or
stc
fistps
add
mov
dec
mov
cmpsb
xchg
pop
jnp
in
push
xchg
arpl
arpl
subl
repz
dec
imul
mov
sub
pop
dec
scas
pop
ljmp
add
inc
rcrb
daa
xor
lea
test
inc
mov
add
cmp
sub
push
stos
mov
stos
mov
ss
aad
push
lods
inc
mov
mov
inc
pop
jmp
dec
xchg
pop
jle
sbb
cwtl
dec
jl
and
add
cmpsl
hlt
mov
add
sti
mov
in
ja
mov
or
pop
int
shl
adc
pop
das
mov
cmp
push
add
mov
pop
rclb
int3
mov
stos
or
inc
jae
popa
ds
jecxz
mov
mov
xchg
arpl
mov
repz
in
mov
jbe
daa
mov
jnp
mov
mov
in
and
mov
mov
pop
cmp
addr16
das
stos
ljmp
mov
les
pop
mulb
or
pushf
pop
daa
rclb
xchg
lret
push
dec
sbb
cwtl
cmp
dec
in
add
push
imul
cltd
mov
or
subl
scas
mov
jne
xchg
mov
ds
mov
nop
dec
cmp
clc
pushf
pop
out
cmc
call
sbb
lds
jae
sub
gs
mov
add
or
out
fdivrl
iret
and
mov
loop
ljmp
mov
push
fbstp
cmp
inc
das
pop
push
lret
mov
push
sbb
add
or
cmp
insl
jle
push
inc
or
sub
leave
shl
movsb
hlt
nop
push
cmp
std
fadds
pop
or
jne
or
lahf
mov
mov
xchg
fstpl
pop
adc
test
subl
scas
pop
inc
and
mov
imul
push
sbb
jns
dec
int
inc
or
aaa
ret
cwtl
ficompl
jp
nop
or
daa
cmp
clc
pop
mov
dec
jne
outsl
xor
cwtl
aas
je
sbb
nop
and
pop
sti
jmp
xchg
and
add
xor
test
ss
pop
push
into
xchg
scas
icebp
sub
aaa
mov
popa
xor
movsl
pusha
scas
mov
cltd
loopne
xchg
pop
out
loope
xchg
cmp
pop
push
lods
lods
lods
sub
mov
cmpsb
xchg
faddl
sub
stos
add
ds
pop
aad
dec
mov
idivl
movsb
jmp
leave
jnp
pop
cmp
sar
jle
mov
cmp
push
mov
ja
xlat
orb
jecxz
insb
aad
scas
push
mov
dec
jmp
cmpsl
add
cmp
lret
shl
push
stc
xchg
addr16
mov
fwait
sahf
sti
cmp
rorl
sub
push
cmp
mov
adc
fbld
orl
insw
dec
push
loope
fimull
scas
or
sbb
push
push
je
xor
loopne
pop
cmp
aaa
pop
mov
test
enter
iret
test
jnp
pop
mov
ret
fiaddl
fidivrl
xchg
andl
fcompl
data16
mov
mov
or
outsl
subl
aam
sti
push
sub
mov
sbb
fcoml
pop
lock
pop
insl
pop
mov
stc
jg
sbb
mov
roll
int
inc
stos
movsl
dec
repnz
cmpsb
add
xor
xchg
int3
adc
adc
movb
fbstp
stos
xchg
addr16
mov
mov
sub
lock
js
ds
and
jns
xorl
jbe
mov
cmpsb
in
mov
inc
pop
dec
shl
mov
aaa
ljmp
xor
add
push
jmp
repz
pusha
and
and
mov
ds
fsts
cmp
cld
push
add
outsb
scas
sahf
cltd
pushf
pop
xor
fs
inc
cmp
inc
xor
pop
loopne
stc
mov
daa
loop
lret
scas
mov
aam
adc
stc
iret
test
add
push
and
inc
inc
pop
int3
or
test
ficompl
xchg
push
adc
mov
fidivs
scas
inc
popf
sub
cmp
fsts
dec
cmpsl
mov
lods
lret
xchg
add
sbb
mov
mov
jbe
sub
sbbl
and
idivb
push
push
push
push
nop
imul
pop
jge
xchg
ret
imul
mov
jns
shrb
dec
fnstcw
sbb
and
push
mov
adc
nop
xchg
arpl
mov
aad
and
test
les
jecxz
xor
in
mov
lea
sbb
leave
push
cmpsl
loopne
cltd
in
xchg
mov
lea
adc
imul
adc
push
sahf
stos
cltd
test
int3
pop
dec
and
or
mov
and
push
inc
in
adc
fwait
inc
fwait
jp
push
outsb
xchg
int
das
mov
sub
xor
cmpsl
loope
xchg
out
jge
jb
jo
out
xchg
push
inc
outsl
hlt
xchg
sbb
ret
sbb
filds
fisubrl
lcall
fistpl
inc
insl
push
jnp
adc
stc
xchg
enter
adc
das
gs
cmpsb
mov
sti
cmp
movsb
mov
addr16
movsb
mov
jl
int3
or
inc
xchg
and
add
pop
in
cmp
out
inc
adc
fcomp
pop
cmp
xor
arpl
loop
dec
and
rcrl
into
pop
test
xchg
mov
fidivrl
cmp
pop
stos
add
xchg
gs
mov
clc
pop
orb
movsb
sub
js
out
xor
mov
jg
mov
and
scas
nop
pop
cmpb
or
das
icebp
and
mov
jecxz
lods
mov
mov
in
sub
cmp
mov
cmc
mov
nopl
push
sbb
sbb
sub
dec
mov
and
subb
push
aas
push
negl
outsl
and
stos
stc
mov
or
sti
sbb
aad
fidivrs
stc
loope
cmp
sbb
ljmp
jmp
shlb
cmc
fstl
test
jge
orl
mov
test
mov
fisttpl
sub
pop
fwait
orl
cmp
push
sub
in
inc
into
clc
pop
dec
inc
scas
add
mov
xchg
add
fdivrl
orb
inc
lahf
inc
fstpt
stos
fwait
std
xchg
jmp
outsb
ja
push
in
add
jns
ljmp
mov
arpl
xor
cwtl
enter
jle
fdivs
add
and
fsubr
and
fwait
gs
adc
jbe
add
mov
jno
dec
inc
cmp
and
int
outsl
xchg
stos
loope
xchg
dec
clc
or
xor
sub
in
lods
fnsave
inc
jne
jne
mov
js
mov
xlat
sahf
stc
xchg
push
fsubr
pop
loope
cmpsb
jbe
lods
adc
cld
xor
sub
cmp
pop
mov
add
jo
cltd
stos
cld
pop
xchg
fdivrp
adc
pop
mov
xorb
dec
mov
adc
xchg
jbe
out
pop
insb
inc
mov
out
mov
pop
jno
sbb
mov
ss
xor
dec
into
push
bnd
mov
jns
ss
lcall
int3
mov
push
popf
in
leave
nop
dec
jp
push
mov
sarb
push
std
jns
popa
cmpsl
pop
sub
sar
cmpb
in
insb
insb
pop
xchg
lods
adc
loopne
mov
adc
loope
lds
cmp
fwait
iret
testb
cmp
or
int
sub
imul
unpcklps
jne
jbe
cvtps2pd
in
fcoml
sarl
pop
mov
cmp
sub
movsb
testl
ja
lods
pop
mov
aas
dec
lods
cmp
sbb
dec
movb
enter
adc
das
aam
mov
push
mov
or
insl
fisttps
or
cmp
push
dec
sub
insl
repz
dec
test
and
fwait
xchg
aam
leave
lcall
sbb
add
lea
test
out
mov
stos
in
xchg
les
push
pusha
leave
sar
pop
inc
mov
pop
nop
cmp
or
or
sbb
mov
lds
dec
dec
add
add
cmp
and
lret
mov
pop
movsb
lcall
test
sub
subl
es
nop
loopne
aaa
mov
cmp
icebp
inc
inc
adc
xor
cmp
xor
lds
pop
loopne
xor
mov
adc
stc
jae,pn
daa
and
cs
sub
sbb
cs
icebp
mov
pushf
lahf
jle
icebp
add
pop
cltd
das
iret
imul
xchg
imul
sbb
mov
repnz
loop
fisubs
mov
mov
std
xchg
vmread
fisttpll
add
loop
jp
dec
dec
inc
imul
fidivs
or
in
cld
aam
mov
sub
lret
in
xchg
mov
inc
mov
sbb
jne
pop
xchg
cmp
push
dec
inc
shrb
push
and
shlb
sbb
fldcw
pop
sub
mov
lret
or
dec
and
cmp
shrl
ss
jne
lcall
lock
out
xor
or
nop
rorb
ss
mov
iret
outsb
adc
loop
xlat
lock
mov
popa
xchg
in
push
fisttpll
jno
mov
inc
jecxz
dec
add
fimuls
es
lcall
nop
push
jo
sbb
jno
mov
fucomip
sahf
or
mov
jo
xchg
icebp
dec
fnsave
inc
idivb
shrb
push
jecxz
rcrl
and
lods
scas
push
insl
cmp
jl
sbb
fidivrs
inc
adc
pop
rclb
xor
sbb
push
inc
dec
dec
rorl
lcall
loopne
mov
cli
fwait
adc
rcrb
lret
or
xchg
pop
push
fs
out
pop
leave
les
fists
sbb
pop
dec
pop
int
rclb
int
mov
dec
and
mov
aaa
mov
scas
push
js
add
pop
daa
imul
cmp
xor
pop
add
notl
and
mov
cmp
add
mov
cmp
mov
arpl
test
jge
cld
adc
int3
jl
scas
lods
and
jb
repz
adc
and
xor
inc
mov
sub
xor
stos
test
lods
leave
adc
sbb
dec
or
cmpsl
cmp
out
repz
xchg
mov
jg
out
jge
pop
push
ljmp
in
or
enter
lods
cmp
dec
inc
scas
push
cmp
aas
fadds
enter
or
push
mov
mov
jl
xor
cmc
ja
repz
sahf
in
sub
rcrl
mov
and
dec
lcall
adc
mov
daa
fcoms
ljmp
inc
jo
leave
insb
jo
ljmp
sbb
or
jnp
ljmp
jecxz
mov
leave
ficoms
mov
cmpb
repz
inc
xchg
sub
mov
les
sbb
and
sub
adc
mov
test
xor
out
movsb
daa
shlb
sub
xchg
in
and
repnz
lds
sub
call
lock
mov
add
out
xor
andl
cwtl
mov
sub
push
cmpsb
mov
jp
lds
loopne
mov
pop
sub
sahf
aam
addb
fninit
pushf
jo
pop
sub
rclb
imul
inc
jbe
movsl
pop
addl
mov
out
pop
sbb
mov
mov
push
movsb
scas
lahf
sub
fdiv
dec
dec
movsl
lea
and
xchg
push
bnd
push
inc
cmc
in
test
test
popa
sbb
or
imul
pop
or
imul
mov
push
inc
subb
scas
pop
sbb
mov
add
xor
mov
repnz
mov
shll
mov
dec
movsl
test
adc
bswap
xlat
add
stos
pop
jecxz
push
adc
pop
ret
arpl
xchg
arpl
adc
in
fistl
fimull
test
adc
fwait
out
enter
sub
jbe
ficompl
push
and
jp
insb
sub
sub
push
mov
outsb
insl
add
cld
push
out
fsubl
fucomip
push
dec
pop
in
mov
cwtl
shr
subl
sbb
inc
fmull
cld
sti
cmpsb
fldcw
mov
push
out
mov
andb
xchg
sub
sbb
xchg
pop
pop
icebp
pop
aas
adc
mov
jne
pop
enter
mov
inc
mov
jmp
mov
inc
pop
data16
rclb
rcrb
xorl
lahf
pop
dec
pop
pop
int3
fucomp
inc
jb
cmp
inc
and
jb
lock
dec
pop
cmpsb
mov
sbb
push
enter
sbbb
mov
or
in
int
hlt
or
fdivrs
inc
sub
or
mov
lcall
and
adc
pusha
jl
push
inc
mov
sub
and
dec
mov
ret
repz
testl
add
add
std
std
jb
int3
xchg
inc
in
dec
jecxz
or
jnp
and
xor
and
loope
out
xchg
cmpsb
je
mov
jmp
pop
inc
int
std
insl
mov
sbb
jg
loope
movsl
jo
xor
cmp
arpl
xlat
adc
mov
lret
pop
hlt
pop
es
fldenv
dec
xchg
xchg
xchg
clc
mov
sub
bound
xchg
movsl
sbb
rolb
scas
pop
cli
dec
bound
sub
jns
push
sub
shrl
es
popa
sahf
mov
push
ret
loopne
xchg
je
movsl
roll
out
test
lret
add
out
jbe
pop
les
pushf
push
sbb
push
pop
mov
fcmovbe
inc
xor
test
sti
dec
shrb
les
sbb
aaa
inc
push
dec
fcoms
xchg
jbe
call
xchg
cmp
sub
push
std
xlat
mov
sbbb
cmpsl
aaa
popa
clc
xor
dec
sbb
inc
adcb
mov
cmp
sub
mov
cmc
in
and
pop
add
sbb
xor
pop
mov
aam
or
jl
inc
xchg
loopne
mov
cmp
or
out
xchg
jnp
sbb
sbb
call
xlat
lods
adc
push
mov
inc
bound
call
pushf
mov
mov
push
pop
arpl
adc
push
lock
adc
pop
lret
and
mov
dec
cmp
xlat
decl
cltd
jmp
fisubrs
call
jl
cltd
shl
imul
lret
ror
cltd
cld
std
cmpl
and
insl
lods
pop
mov
and
xchg
and
mov
inc
push
mov
jp
pop
pslld
fcoms
xchg
pop
leave
ljmp
inc
mov
add
sbb
sti
shlb
sbbb
test
lock
add
and
out
sub
rol
dec
dec
or
or
push
lds
jo
ljmp
xchg
push
push
adc
xchg
mov
inc
nop
mov
sbb
bound
jge
push
jb
ret
dec
dec
pop
test
addl
gs
lods
shlb
out
bound
and
shl
shrl
out
xlat
xor
or
push
sbb
push
ljmp
movsb
mov
mov
cli
lret
adc
sbbb
add
pop
out
pop
push
dec
mov
pop
sbb
mov
loopne
mov
jns
fwait
je
xchg
test
imul
sti
cmc
test
fiadds
push
fs
rcll
or
pop
xor
sub
mov
push
ja
jl
imul
test
nop
mov
add
fbstp
repnz
mov
or
mov
pop
sbb
lret
sub
les
push
xchg
xlat
mov
addr16
cli
mov
cltd
loopne
imul
push
mov
cli
test
lcall
push
pop
lret
movsl
popf
and
out
mov
add
clc
stos
pop
fcoms
pop
or
hlt
sbb
int3
xor
lods
fbstp
int
ds
pop
or
xchg
xchg
lahf
inc
nop
inc
mov
mov
in
test
out
pop
xchg
inc
or
mov
or
out
gs
inc
jnp
jno
mov
cld
jecxz
mov
jp
scas
dec
sbb
orl
cs
pop
shrb
and
cmp
ds
pop
mov
test
push
ret
sar
xor
popa
mov
sbb
dec
clc
jecxz
js
out
sub
enter
test
xchg
sbb
in
add
xchg
fcomps
mov
pop
or
scas
ds
push
inc
loope
jo
add
and
sub
insb
mov
gs
push
jl
in
je
sub
movsl
inc
lea
lods
sbb
lock
fsub
dec
pop
add
xchg
sub
adc
mov
nop
int
loopne
movsl
xchg
jmp
cmc
leave
jmp
pusha
jmp
pop
add
and
data16
pop
movsb
push
pop
or
sbb
and
dec
mov
sub
inc
or
int
jo
cmp
mov
inc
lods
push
sahf
push
push
insl
popa
sub
fprem
outsl
adc
cmp
mov
or
addr16
imul
add
cli
daa
sbb
add
hlt
jg
cmpl
dec
imull
in
fnstenv
jp
mov
sbb
xor
adc
jp
sti
leave
scas
sub
out
into
add
xchg
xlat
sbb
sbb
adc
adc
mov
cmp
int3
sbb
stos
sub
sbb
rcl
and
push
div
sub
ret
int3
mov
lret
mov
mov
scas
lret
jge
stc
mov
shlb
xchg
jns
cmc
mov
push
fistpl
add
lods
xchg
scas
push
loope
sub
outsb
pop
xchg
jge
aad
shrb
push
rcrl
mov
aam
out
test
push
test
and
pusha
ret
jp
dec
and
decb
fisttps
iret
xchg
gs
or
dec
movsb
dec
lods
es
pop
sub
rcl
icebp
mov
movsb
fcompl
cmpsl
push
inc
pop
ror
in
pusha
divl
and
fisttpll
dec
sbb
stos
clc
and
es
xor
xchg
pop
dec
mov
lcall
lock
dec
dec
push
pop
mov
or
mov
aaa
inc
sub
fadd
push
push
clc
sbb
pop
inc
xorl
cltd
les
cmpsb
pop
out
push
stos
pusha
dec
lcall
js
fsubp
cld
inc
and
scas
and
jecxz
xchg
mull
mov
jmp
mov
faddl
rcll
jne
dec
add
stos
mov
jg
or
bound
pop
inc
test
or
or
pop
loop
dec
xchg
push
out
jnp
adc
xchg
inc
jge
out
in
and
pushf
imulb
out
inc
outsb
lret
inc
or
cmp
mov
das
add
jb
add
stos
inc
and
cs
pop
movsl
xchg
lea
imul
clc
pushf
movsl
push
and
lods
push
pop
ret
and
jl
gs
shrl
adc
movsb
outsl
test
mov
loop
push
jmp
jo
push
cmc
adc
inc
mov
gs
add
xchg
popa
xchg
hlt
into
jg
and
adc
repz
into
xor
mov
sbb
pop
inc
js,pt
add
scas
lock
repz
icebp
jmp
fs
and
xor
sbb
inc
mov
scas
xor
stc
hlt
repnz
cmp
add
adc
cmp
mov
cld
je
sub
push
les
out
jp
mov
sarb
sti
push
fsubrl
cmc
addr16
jne
mov
jne
jbe
and
loop
sub
sub
je
mov
mov
mov
faddp
in
es
push
pop
in
out
int
lods
sbb
loopne
out
imul
and
movsl
ds
popf
add
subl
clc
dec
mov
lcall
das
jle
iret
push
sbb
xchg
mov
jge
movsl
fdivrp
cmp
adc
pop
subb
fwait
jmp
jmp
ja
or
incb
mov
mov
mov
cli
out
sub
adc
test
out
mov
jmp
sub
jne
sti
call
jecxz
add
pop
aad
ljmp
loop
jbe
pop
mov
cmpsb
push
pop
cld
aas
gs
inc
mov
insl
andb
jg
xor
std
in
jg
add
mov
pop
cmpsb
cmp
je
mov
mov
mov
jo
push
jns
lods
das
insl
mov
xchg
mov
sbbl
xchg
add
shll
pop
and
fldl
lcall
stc
icebp
mov
cmp
dec
in
shr
outsb
sbb
xor
lcall
addr16
in
shr
and
and
scas
adc
shrb
sub
push
cmpsb
inc
stos
movsb
pushf
out
and
cs
push
cmp
shlb
test
jno
cmpsb
mov
loopne
cmp
hlt
insb
inc
xor
push
in
repnz
ja
jns
aad
push
js
xlat
pop
sub
sub
push
sub
xchg
into
mov
sbb
test
shrb
bound
xlat
pop
mov
idiv
scas
dec
dec
movl
inc
loop
pop
add
icebp
mov
cwtl
jno
fidivrl
flds
dec
div
cmc
inc
das
sbb
andl
insb
dec
sbb
into
andb
mov
jno
aaa
test
into
into
jp
and
inc
mov
data16
orb
push
stos
int3
cmp
push
shl
cmpsb
sub
stos
mov
xorl
mov
aam
loop
insl
or
cmpsl
and
nop
mov
mov
nop
jo
daa
movsb
cmp
or
lds
clc
cld
jmp
lret
xchg
pushf
roll
fcmovb
pushf
pop
lea
roll
scas
xchg
add
fisttpll
cmc
fwait
or
xchg
or
cli
js
xchg
cmpsb
mov
cmpl
out
xor
fwait
into
stc
mov
cmp
out
add
inc
nop
popa
popa
outsl
test
daa
lock
mov
cmp
xchg
loopne
and
daa
xor
cs
mov
add
add
es
out
adc
pushf
int
ret
and
mov
loope
push
bound
xchg
insb
mov
bound
cmp
aaa
frstor
lcall
jle
sub
fwait
cmp
ljmp
daa
out
add
dec
mov
jmp
xor
dec
cmpsl
stc
insb
mov
andl
push
outsb
js
lcall
inc
xor
in
jecxz
test
dec
in
jmp
jp
fdivs
shr
bound
xor
notl
sub
dec
bound
dec
and
and
dec
cli
icebp
inc
ljmp
adc
cs
jp
pop
lret
xlat
repz
in
mov
lds
push
inc
dec
pop
or
xchg
leave
sbb
dec
mov
add
das
xchg
insl
add
call
add
ja
lods
inc
jp
xchg
pop
add
push
and
popf
jmp
int3
sbb
rorl
cwtl
imul
jmp
xlat
xor
push
jle
pusha
push
sti
lret
pop
mov
shrl
in
mov
jae
jo
cltd
mov
mov
loopne
sub
imul
xchg
mov
adc
add
sub
lret
clc
jo
fsubrl
nop
icebp
pop
mov
sbb
aas
push
icebp
or
rcrl
aad
mov
aas
iret
sbbb
ds
ljmp
daa
iret
sti
mov
test
int3
sub
leave
mov
push
nop
mov
and
gs
dec
test
lds
test
nop
add
xchg
movsb
int3
jg
inc
cmp
fcmovnb
cwtl
sub
xchg
xchg
mov
push
popf
push
and
jecxz
and
jae
and
sbb
inc
push
iret
sti
xchg
dec
mov
cmp
adc
jl
inc
scas
mov
out
aam
cmpsb
icebp
pusha
cwtl
cmp
in
rolb
mov
jnp
gs
outsb
aam
dec
pusha
int
fildll
es
mov
repnz
sub
insb
out
adc
repnz
xor
shlb
pop
cmova
mov
cmp
and
scas
jge
std
scas
jp
sbb
mov
add
sbb
clc
imul
pop
push
mov
int
scas
pop
push
addr16
in
adc
jbe
mov
xor
jge
sub
enter
lret
test
jp
rclb
jecxz
subb
inc
xor
sbb
push
inc
int3
ljmp
sbb
lcall
pusha
mov
xchg
cmc
cwtl
push
fsubs
js
inc
mov
mov
xchg
movsb
iret
push
fdivr
push
out
add
jbe
pop
pop
mov
and
add
jno
lahf
jg
js
adc
inc
jmp
mov
pop
or
outsb
pop
sbb
and
jl
jl
scas
mov
pop
pop
incl
fwait
or
or
or
jbe
movsb
jnp
or
movsb
aad
pop
es
sub
jecxz
xchg
xor
aas
pushf
les
and
shlb
xor
sub
arpl
jmp
push
ss
xor
add
popa
gs
gs
stc
xor
fwait
mov
stc
inc
divps
lds
pushf
xor
sbb
subb
cld
xchg
and
xor
and
pop
mov
mov
inc
add
pop
or
pop
or
cltd
mov
sbb
mov
pusha
orl
aad
iret
sbb
lret
mov
imul
jnp
push
and
std
pop
push
xchg
jo
lahf
aam
add
add
mov
inc
ljmp
pop
fiaddl
mov
and
mov
test
xchg
or
iret
mov
data16
sub
aad
mov
sbb
push
bound
xchg
mov
cmp
fmuls
mov
aad
mov
fstl
xlat
fstl
insb
bound
xor
rcrb
push
outsl
inc
xor
sbb
jb
fcom
jmp
sub
jle
lods
jae
mov
cmpb
xchg
push
xorl
xor
aas
sbb
shlb
push
jbe
insb
adc
movsb
sbb
jb
sti
test
sbb
cld
cmp
ljmp
shll
out
test
mov
fcmovnbe
xor
mov
adc
or
inc
mov
pushf
dec
leave
hlt
cmp
ret
fnstcw
lahf
cld
sbb
inc
scas
add
hlt
sub
popf
inc
xor
dec
cli
std
std
adc
fnsave
int
push
and
add
jne,pt
push
jg,pn
push
fdivr
inc
js
mov
jnp
nop
cmp
stos
repnz
lock
dec
in
test
popf
clc
inc
adc
mov
mov
fxtract
dec
inc
adc
and
cmp
jg
cmp
mov
dec
xchg
hlt
cwtl
xor
ficoml
aas
mov
and
nop
shll
shll
fdivr
xor
adc
mov
mov
testl
stc
pop
cmpsl
rcrb
fdivrs
andb
out
scas
push
jbe
dec
out
faddp
inc
test
jae
xchg
jo
stc
jg
leave
or
add
int
lret
mov
and
sbb
sbb
sub
imul
sub
enter
push
out
jno
aad
or
xchg
insb
roll
cmp
and
pop
sbb
lds
imul
std
cmp
rol
push
test
jg
shll
dec
pop
jo
lods
pop
vcmpsd
push
pop
cwtl
jl
sbb
hlt
ss
sub
orl
xchg
inc
mov
popf
sub
mov
cs
imul
lret
dec
sub
dec
sbb
int3
dec
out
dec
lock
push
inc
decl
aam
dec
dec
cmp
out
and
insl
xchg
lods
test
lea
cmpsl
xor
notb
repz
cmp
mov
enter
pushf
icebp
aad
stc
cmpsb
push
jno
fildl
push
arpl
adc
sub
add
mov
mov
aaa
stc
scas
popa
sahf
out
test
lds
adc
pop
and
and
mov
jmp
movsb
in
fstl
iret
add
fwait
stos
loopne
cmpsb
gs
in
fdivl
push
mov
mov
mov
or
xor
mov
sub
xor
fisttps
add
add
sbb
sbb
and
cmp
bound
xchg
jle
scas
inc
call
enter
cmp
imul
fiaddl
inc
hlt
dec
inc
imul
lea
push
adc
or
data16
imul
out
popf
and
dec
adc
lea
rcrb
xchg
jno
in
sub
popa
aas
lret
cli
mov
in
sub
xchg
mov
jae
jl
inc
rcrb
push
pop
stos
ja
jle
lret
jmp
idivl
xlat
scas
pop
adc
mov
add
fstpl
inc
push
and
mov
loop
ret
test
stos
pop
cmpsb
sub
dec
cmp
les
xchg
loopne
jg
pop
mov
adc
pop
fadd
push
add
je
mov
cmp
lock
add
push
fs
sub
gs
sti
sti
adc
mov
enter
das
clc
loop
scas
pop
mov
out
ror
push
push
cld
mov
dec
pop
jle
xchg
iret
cmp
out
pop
rorl
das
push
jle
xchg
ss
mov
aas
xor
shlb
ss
xchg
cltd
jo
pusha
push
lahf
sbb
mov
ret
imul
push
stc
and
inc
imul
aas
pop
or
xchg
shll
xchg
das
iret
loope
add
repnz
aad
js
scas
test
aas
ja
add
jp
inc
sbb
jnp
scas
loop
pop
cld
mov
mov
mov
arpl
outsl
roll
jecxz
mov
mov
or
outsl
pop
dec
mov
stos
or
sub
aas
outsl
and
cmpsb
jmp
iret
out
fdivs
pop
insl
clc
xchg
adc
movsb
lods
inc
ds
out
xchg
or
mov
pop
rcll
adc
inc
cmp
cli
loopne
dec
xchg
push
lock
push
cmp
test
push
pop
push
dec
jmp
adc
test
push
loope
ss
add
xchg
ljmp
pop
inc
dec
adc
fnstcw
daa
cmpb
or
mov
int
adc
sti
pushf
push
aam
loopne
nop
xor
jne
lahf
stos
jns
cmpsb
jmp
mov
lock
std
movsb
rcr
add
and
or
mov
stos
dec
popf
dec
and
push
xchg
mov
scas
stc
mov
dec
cli
xor
pop
adc
cmp
or
test
xor
push
es
cmpsl
adc
push
adc
push
push
shlb
cs
sub
aad
repz
pop
test
aaa
cwtl
subl
lds
push
push
push
aas
pop
gs
insb
push
add
sbb
dec
add
es
outsl
clc
add
sub
pop
dec
mov
mov
stc
inc
jp
xchg
aad
mov
pop
dec
scas
loopne
mov
js
and
shll
dec
neg
nop
xchg
insl
sub
push
shll
or
fstpt
mov
fimull
ljmp
stos
outsb
out
movsb
es
mov
sbb
lcall
add
or
xchg
inc
andb
cltd
lods
xchg
ficompl
fidivl
lods
jne
lcall
repnz
dec
mov
andl
push
andb
hlt
add
sti
loop
sub
jbe
xor
enter
mov
mov
lcall
jo
and
fidivrl
inc
adc
rcl
xchg
inc
loop
pop
xchg
fcmove
pop
adc
mov
inc
ljmp
inc
mov
fisubs
hlt
mov
sub
imul
enter
pop
jb
pop
mov
mov
scas
sub
jge
pop
add
lahf
xchg
jmp
mov
inc
xor
test
jae
imul
fsubrs
cs
push
iret
ss
cli
stc
add
addl
je
shrl
fisubs
mov
push
xorb
imul
push
dec
push
dec
dec
adc
call
scas
ss
ljmp
mov
xchg
ss
push
cmp
jp
cli
lock
rolb
xchg
mov
lods
jg
inc
cmp
adc
jne
pop
fwait
out
les
test
sbb
hlt
loopne
sub
inc
inc
or
mov
bound
pop
mov
jb
jp
enter
adc
icebp
xchg
push
insl
jo
lock
sub
sub
sahf
push
pop
test
ficomps
sbb
inc
or
adc
bnd
dec
popf
popa
cmc
gs
mov
and
cmpsb
sbb
pop
movsb
daa
popa
dec
mov
pop
ljmp
addl
jbe
xchg
cltd
pop
mov
cwtl
push
dec
sub
inc
call
jae
dec
dec
adc
mov
pop
mov
scas
cld
fstps
popa
shlb
mov
in
stos
je
divb
lret
and
mov
push
xor
test
addr16
daa
lahf
jnp
xchg
push
subb
and
sub
dec
decl
push
jbe
pusha
jne
repz
or
dec
inc
ljmp
inc
sahf
incl
cmp
adcb
sbb
divl
cli
outsl
arpl
test
fistl
int3
fmuls
cmp
jl
jmp
shll
fstpt
test
jmp
jnp
ficompl
std
push
mov
cmp
leave
loopne
in
jmp
addl
xchg
sub
sarb
pop
cwtl
and
ret
in
in
dec
out
in
adc
pop
aaa
xlat
pop
aaa
sqrtps
lock
or
lds
ja
mov
cltd
or
xor
cli
fwait
ljmp
sbbb
lock
test
jmp
stos
loop
sbb
shrl
je
movsl
enter
cmp
add
pop
xchg
icebp
fbld
gs
popa
fsts
in
pmullw
sub
daa
or
sub
les
ss
xor
cltd
repz
xchg
iret
pusha
cmp
cld
clc
cmp
leave
ljmp
in
xchg
movsb
insb
sti
popa
stc
jbe
cwtl
add
mov
lds
xor
shlb
iret
inc
sub
mov
adc
pop
cwtl
push
lods
mov
out
repz
or
pop
stc
iret
js
mov
xorl
jbe
pushf
aaa
push
sbb
xor
sbb
push
mov
lcall
xchg
aas
pop
dec
aad
das
iret
jge
es
lea
mov
pop
arpl
sarl
pushf
push
dec
add
jb
cwtl
sbb
sbb
inc
call
push
or
jnp
push
movsl
rolb
in
mov
out
dec
andb
xlat
sbb
cmp
lds
incl
jbe
xchg
loop
mov
aas
jle
push
jle
inc
or
jbe
test
sar
aaa
sbb
mov
daa
fs
dec
dec
xchg
push
cmpsl
push
xor
outsb
aad
imul
sub
inc
decl
enter
lcall
idivb
in
sarb
sub
and
mov
stc
push
add
mov
les
jp
test
nop
pop
cmp
xadd
decb
inc
movsb
jecxz
jle
jb
push
mov
sub
cwtl
or
lea
add
pop
repz
jmp
lods
es
fists
xchg
push
pop
mov
jmp
push
xor
and
scas
imul
and
mov
xchg
mov
int
fistpl
rcl
and
jo
push
and
arpl
test
lock
sbb
adc
ljmp
notb
push
jmp
les
cmpsl
lcall
push
gs
cltd
mov
roll
scas
mov
pop
cmp
mov
mov
cmp
loop
jecxz
call
sahf
cmc
adc
sbb
std
cltd
push
aas
xor
jbe
out
repz
and
and
push
pop
lods
cmp
xor
add
mov
xchg
cli
push
adc
cmpsb
int
jns
xor
pop
les
icebp
jo
xor
jbe
movsl
nop
arpl
mov
xchg
add
inc
movsb
jnp
rclb
dec
imul
ret
cmpsl
iret
lds
mov
add
add
mov
cmpsl
cmp
mov
aaa
inc
inc
add
dec
cltd
fwait
add
scas
inc
paddusw
jecxz
mov
pop
adc
xor
pop
into
cli
cmp
push
jb
jae
fwait
leave
mov
shl
mov
lds
jns
sub
mov
setae
xchg
inc
hlt
aas
in
adc
subl
xchg
loop
cli
in
je
mov
mov
inc
push
add
data16
xchg
cld
cli
cli
and
xchg
sub
xchg
mov
push
jnp
pushf
and
ret
pop
test
pop
xchg
xor
push
out
jge
mov
shrb
pushf
jecxz
add
sbb
push
rorl
shrl
dec
shll
loopne
popf
mov
mov
inc
sbb
icebp
stos
data16
data16
repz
jns
in
pop
movlps
cmp
es
mov
icebp
mov
mov
and
dec
sub
pushf
ficoml
insb
ret
bound
adcl
pop
fndisi(8087
out
add
cmp
dec
pop
pop
es
cmp
out
ret
add
cwtl
mov
fldt
mov
daa
je
out
daa
repz
jge
fwait
push
xor
int
cmpsb
mov
jg
add
pop
mov
adc
sub
push
inc
mov
xor
fists
xor
add
sub
in
mov
mov
mov
adc
testb
icebp
es
mov
push
popf
xor
cmp
fmull
adc
adc
sub
mov
xor
sub
fildll
loop
pop
lock
out
nop
aad
pop
cmp
test
je
pop
mov
xchg
mov
ret
add
rcll
shr
jmp
aam
push
ds
loope
iret
jo
in
clc
pop
pusha
xor
repz
addl
fldl
scas
xchg
arpl
sub
out
test
inc
inc
jns
ret
inc
cmpb
lds
and
mov
pusha
addr16
clc
mov
sbb
jecxz
cld
dec
iret
enter
js
jb
xor
clc
in
stc
and
pop
subl
push
iret
mov
sahf
pop
mov
fidivl
jne
xor
lcall
lret
xchg
mov
add
lds
push
jl
pusha
mov
jns
inc
aas
add
mov
roll
lea
out
andl
aas
in
hlt
adc
lods
pushf
cs
loop
in
sub
jp
mov
and
inc
test
cmpl
mov
push
and
sub
xor
add
fsubrl
jb
dec
adc
dec
mulb
faddl
xchg
and
inc
gs
pop
inc
sbb
dec
gs
ljmp
icebp
ret
sbb
adc
jne
xchg
stos
sbb
out
and
mov
sub
mov
xlat
out
ret
addr16
mov
adc
adc
cli
sub
loopne
or
mov
aad
add
movsb
or
flds
jbe
loope
or
pop
sub
adc
pusha
sub
pop
leave
push
leave
mov
roll
hlt
or
fisttpl
adc
lret
movl
xchg
add
out
jp
int3
jne
mov
jecxz
in
sti
xchg
mov
std
addr16
or
addr16
push
cmpsl
pop
pop
or
mov
stos
push
ret
popf
outsl
sbb
cli
inc
jo
fistps
xor
pop
push
sbb
popa
jp
test
push
and
mov
mov
loopne
cmpb
or
xchg
movb
push
adc
xchg
dec
inc
rcr
insb
inc
adc
cmp
mov
inc
and
movsb
sbb
xchg
enter
sbb
push
push
lds
sbb
xchg
add
sbb
icebp
jge
int
fiadds
dec
jl
cmp
and
lahf
jmp
push
daa
int3
test
pop
cmpsb
mov
jns
adc
test
mov
fsts
or
jmp
add
jno
shll
shrb
outsl
lret
cmp
xchg
sub
mov
cld
gs
sub
jo
cmp
loop
aam
xor
inc
mov
addr16
ret
push
fstpl
lds
loopne
sti
adc
mulb
xchg
jns
and
addr16
sbb
pushf
fsub
jle
xchg
push
scas
stos
mov
in
jo
andb
les
arpl
or
push
sbbl
outsb
jb
bound
or
fnstcw
xor
loop
shrl
sub
mov
pop
rcl
mov
mov
xchg
mov
dec
lea
arpl
add
popa
push
xchg
inc
xor
ficoms
xchg
out
cmp
mov
jl
jmp
sub
add
lret
test
int3
scas
into
scas
sar
fsubr
jo
aaa
ljmp
loop
mov
pop
int3
push
movsb
adc
sbb
jbe
outsl
push
sub
adc
cmc
arpl
pop
or
imul
mov
lea
add
in
xchg
sbb
ss
int
cmpsb
sbb
add
mov
sbb
push
daa
dec
shll
fdiv
inc
and
scas
cwtl
enter
lods
movsb
popf
loope
cmc
adc
dec
mov
or
add
xchg
mov
mov
mov
fs
inc
lods
fcompl
das
imulb
push
push
cmp
aad
js
mov
pop
stos
jbe
inc
andl
adc
mov
insl
mov
jmp
test
arpl
lods
sbb
pop
xchg
gs
or
das
mov
xchg
lcall
lcall
xor
mov
ss
ret
pop
add
pusha
pushf
test
pop
inc
xor
cmp
aas
add
cmp
jns
dec
lahf
push
jno
outsl
xchg
cli
mov
inc
out
mov
lods
pop
mov
test
rorl
aaa
push
pop
mov
sub
rcr
lcall
mov
pop
in
adc
cs
cmpsl
or
ds
or
mov
mov
adc
sahf
jecxz,pn
inc
mov
xchg
adc
pand
outsb
mov
in
dec
pop
or
jmp
jp
cwtl
dec
into
adc
ljmp
mov
jp
movsl
pop
push
in
sbb
cld
mov
ret
or
mov
add
es
mov
cwtl
jl
push
xchg
into
into
or
rorl
jp
cmp
and
fs
push
dec
adc
xchg
cmp
rcrl
inc
mov
mov
out
adc
shrb
cmp
in
mov
or
jle
xchg
test
daa
test
imul
movsb
pop
lea
jnp
xlat
js
sahf
jmp
inc
cmpsb
push
lcall
shl
and
test
jp
call
pop
mov
pop
jl
dec
loope
xchg
imul
lcall
rcl
sub
mov
mov
fs
pop
mov
xchg
dec
push
sub
aad
mov
das
pop
push
stc
daa
adc
pop
mov
mov
ja
ja,pn
cwtl
xor
add
xchg
mov
xchg
adc
xchg
dec
repz
hlt
mov
mov
dec
dec
mov
shlb
iret
stos
hlt
jmp
or
pusha
int3
pop
mov
scas
pushf
out
jmp
orb
dec
mov
mov
xchg
adc
mov
cli
hlt
xlat
push
int3
inc
ljmp
push
subb
sub
in
nop
sarl
aad
ret
sti
push
jl
pop
outsb
lcall
jo
mov
in
in
cmp
inc
or
std
icebp
push
in
out
dec
jecxz
pop
push
in
stc
popf
xor
lock
hlt
adc
imul
lock
orl
inc
hlt
stc
xchg
xor
xchg
xchg
jg
fisubrl
into
add
stc
sbb
sub
pop
pop
mov
xchg
add
sbb
cmpsl
test
icebp
cld
lret
icebp
scas
lcall
or
int
dec
imul
push
outsb
mov
adc
mov
jne
mov
mov
mov
pop
pusha
cmpsl
cmpsl
fnstenv
pop
mov
jns
mov
out
sbb
push
mov
inc
arpl
pop
in
nop
adc
pusha
dec
inc
js
or
sub
sbb
hlt
push
outsb
add
mov
sbb
pushf
push
in
not
lcall
out
aad
sub
pop
mov
pushf
imul
cmp
shll
pop
dec
add
iret
push
inc
jbe
sub
jg
in
add
sahf
cld
ret
gs
mov
jno
sub
mov
enter
pushf
test
mov
push
inc
push
fisubl
mov
xchg
out
orb
out
stos
xchg
dec
push
xlat
outsl
in
inc
mov
daa
loope
test
ret
sbb
fcomp
popa
bound
mov
das
inc
sub
or
fdivrl
icebp
cmp
xor
mov
jnp
mov
cwtl
add
clc
cmp
jecxz
or
popf
stos
rol
int3
push
loope
fnstcw
mov
enter
scas
mov
shrl
push
cmp
xor
xor
sbb
add
fsubs
hlt
sbb
pop
dec
cmpsl
subl
xor
and
in
push
out
sub
pop
xor
jle
into
fcos
shlb
adc
arpl
ret
pushf
sbb
inc
out
push
adc
mov
add
push
nop
or
fwait
adc
jnp
cmp
cmp
in
ds
mov
xchg
xor
or
ficompl
pushf
mov
ljmp
shrl
orb
mov
hlt
addr16
ds
fwait
pop
aas
pop
jmp
xchg
and
jno
insb
inc
stos
faddl
int
xchg
inc
repz
sub
xlat
psubw
pop
imul
stos
std
sahf
ds
xchg
cmc
mov
cmovg
add
inc
sbb
andb
pop
outsb
push
dec
in
sahf
or
sbb
inc
addl
stc
ljmp
popf
xor
dec
sub
fsubl
jns
stos
jmp
les
sub
pop
scas
mov
imulb
gs
xor
sub
pop
test
sub
adc
fwait
and
clc
xchg
les
adc
dec
add
adcb
cs
jle
jmp
test
pop
push
or
cli
out
mov
xchg
fwait
jp
and
test
and
aas
xchg
lods
push
mov
in
sarl
andl
aaa
and
jl
push
fimuls
movsb
cmp
mov
mov
cmp
adc
mov
outsb
fs
pop
test
repnz
cmpsl
repnz
mov
mov
and
lahf
negl
sub
mov
jl
mov
xchg
dec
sbb
jno
inc
pop
or
lcall
cmp
fistps
jnp
in
adcl
loop
xor
dec
jmp
out
xchg
pop
rclb
add
aam
push
adc
inc
js
ret
nop
adc
shlb
dec
dec
or
in
dec
clc
xchg
sub
data16
arpl
dec
jno
popa
adc
test
jmp
xor
addr16
adc
das
cmp
std
and
xchg
xor
cmp
xchg
sarl
mov
jmp
cvtdq2ps
xor
test
jns
push
mov
inc
int
sub
sub
data16
jmp
lds
neg
out
aad
push
xor
jmp
mov
fs
adc
or
fsubrl
push
adc
sub
jecxz
popa
add
scas
insl
jmp
add
xor
dec
sub
and
sbbl
xor
lods
arpl
inc
xor
lods
ret
insl
sti
arpl
sub
movsb
in
dec
enter
je
test
jg
xchg
xchg
pop
push
or
icebp
cli
xor
movsb
xchg
out
ss
xor
inc
ds
popf
hlt
pop
mov
mov
dec
pop
push
sbb
ret
call
jecxz
test
insb
inc
in
clc
or
les
das
sbbl
out
pop
imul
mov
loopne
dec
sbb
out
rorb
arpl
movsl
xor
jbe
cmpl
push
inc
bound
gs
mov
loope
jl
jbe
lcall
sbb
sti
mov
out
pop
or
clc
mov
int3
add
xchg
cmp
loopne
jge
xchg
push
cmp
mov
lea
push
mov
push
xchg
movsb
or
xlat
movsl
cld
mov
sub
mov
adc
jno
xor
or
in
loopne
sub
nop
enter
andl
mov
nop
push
push
ds
cmp
aad
push
xchg
or
leave
mov
popf
and
movsb
sub
add
callw
out
out
mov
xor
jp
inc
mov
loopne
stos
xor
ds
sub
jne
test
sahf
out
push
cld
lea
leave
orl
push
mov
inc
xor
push
fwait
lret
jle
arpl
and
xchg
xor
fistl
or
flds
add
insb
ss
out
gs
rclb
add
pop
fucom
sbb
jmp
push
push
mov
stos
in
aad
ret
adc
adc
fcmovne
mov
sbb
xchg
in
adc
pop
mov
loop
add
mov
mov
ss
stos
cmp
popf
push
popf
mov
mov
xor
shrb
push
outsl
dec
loopne
scas
cltd
inc
adc
dec
lods
push
jmp
jp
xor
push
popa
inc
aas
jbe
or
inc
pop
xlat
incb
les
or
adc
cmp
and
sub
pop
xchg
inc
xchg
mov
pop
lahf
addr16
xchg
or
adc
es
ljmp
arpl
fdivp
fdivrs
add
iret
mov
mov
push
pop
les
mov
inc
mov
mov
insb
mov
push
adc
mov
add
lods
lret
inc
jns
sti
jge
insb
sbb
insb
mov
leave
lcall
ds
popa
mov
adc
in
sbbl
mov
inc
xor
mov
and
cmp
mov
and
aas
adc
out
and
xchg
mov
cmpsl
repz
pop
mov
insl
stc
mov
sub
add
mov
fbstp
orb
mov
and
push
cmp
pop
sub
or
fdivr
mov
xchg
pop
sbb
dec
ret
push
xor
lock
mov
lret
cmp
fstps
scas
mov
bound
xlat
stos
sub
pop
pop
sbb
push
es
jp
cmp
fsubrl
mov
pop
and
mov
test
push
adc
fnstcw
andl
or
xchg
cltd
xor
sub
xchg
sub
push
aaa
add
into
popf
int3
adc
pop
mov
xor
xchg
push
adc
inc
or
inc
sub
aaa
stos
push
stos
or
gs
call
sbb
aaa
pop
add
sub
cld
mov
mov
je
retw
rcll
dec
lods
in
add
popf
aas
dec
inc
mov
pop
fisttpll
push
pop
addr16
dec
imul
mov
mov
mov
pop
xor
adc
mov
xor
insb
ror
fisttpll
pop
dec
enter
inc
pop
out
lock
aas
stos
in
sbbb
pusha
and
cmpsb
daa
lahf
cli
push
test
push
aad
push
cmp
ja
out
dec
pop
fwait
repnz
adcl
mov
or
cld
jae
inc
mov
sbb
je
mov
push
mov
inc
int
loopne
pop
mov
repnz
imul
xchg
out
insb
xor
or
add
pop
lcall
jae,pn
insl
decl
mov
push
mov
leave
out
fisttpll
jbe
scas
cmp
bound
lods
jecxz
cwtl
andl
fdivs
pusha
fstpl
sbb
dec
aad
movsb
enter
leave
mov
dec
loope
jb
xor
dec
sub
xor
add
xchg
pop
sbb
mov
push
int3
les
or
out
xor
stos
xchg
dec
movsb
xchg
xchg
pop
ja
push
add
xchg
lret
push
gs
fwait
test
mov
lods
test
lcall
or
pusha
into
std
pop
shlb
enter
lret
mov
movsl
pop
test
nop
or
mov
in
pop
call
mov
mov
push
out
adc
fadd
loope
imul
xor
dec
out
sbb
lea
cmp
add
adc
jp
stos
push
xchg
jmp
lret
es
fistpl
repnz
mov
outsl
mov
dec
dec
lcall
jge
inc
scas
sbb
fcoms
or
cld
jbe
cmp
cltd
adc
and
mov
sahf
mov
faddl
aas
int3
mov
push
stos
test
add
mov
imul
sub
mov
push
ljmp
mov
fwait
leave
sbbb
leave
xchg
int
movsb
cmpl
gs
mov
mov
add
cmp
je
jno
sbb
mov
movsl
sub
andb
leave
rorl
cmp
add
scas
icebp
jle
add
and
ret
aad
orl
rolb
scas
es
push
bound
mov
and
mov
stc
mov
imul
adc
insb
sbb
enter
adc
insb
mov
mov
sahf
mov
loop
push
out
scas
cmp
scas
sarb
mov
adc
mov
out
les
mov
push
lahf
fbstp
inc
or
ss
cmp
andl
push
push
movsb
mov
pop
aad
fs
and
cmp
sub
xor
fld
adc
clc
mov
das
mov
push
add
popf
xchg
mov
xchg
cwtl
mov
jnp
clc
clc
xchg
sub
icebp
in
in
addr16
push
aas
rcrb
in
lods
pop
sbb
xchg
inc
inc
mov
inc
pop
sub
mov
cmp
roll
push
and
iret
js
add
aas
jecxz
adc
inc
push
enter
ret
or
jb
jbe
inc
stc
cli
mov
and
xor
mov
or
das
pop
sub
test
les
pop
fnstenv
iret
out
shl
movsl
cs
repz
ss
pushf
bswap
xchg
mov
ret
out
inc
cli
into
adc
push
and
xchg
cmp
xor
imul
js
std
xor
dec
mov
add
shl
pop
push
pop
mov
insl
push
loope
adc
arpl
dec
movsb
adc
ss
xor
cmp
loope
cmp
ret
popf
je
and
xor
push
xor
cmc
or
mov
inc
pop
push
mov
add
add
add
push
pushf
jno
cwtl
fs
dec
cmp
call
cs
lcall
dec
push
outsl
clc
xchg
ss
xlat
dec
lds
push
mov
xchg
cmp
cmp
mov
inc
dec
cmp
xor
loopne
scas
jmp
dec
cwtl
mov
pop
or
lcall
mov
inc
mov
dec
jp
push
add
fsubl
jno
pop
jmp
fdivs
ffreep
adc
push
pusha
sub
and
cli
aas
jo
pop
clc
dec
enter
imul
and
lods
push
sub
in
jo
xor
push
jmp
mov
imul
fnstenv
mov
icebp
cld
sbb
mov
jge
pop
mov
fstps
cmp
mov
gs
mov
clc
fs
cmp
xor
push
add
jg
cld
scas
int3
push
xchg
sahf
or
push
xchg
popf
into
cmp
fldt
rorb
loopne
paddd
addr16
outsb
outsl
dec
cwtl
mov
scas
pop
int3
mov
xchg
test
cmpsl
xchg
cld
jmp
div
dec
dec
jb
xchg
out
stc
mov
xchg
inc
lahf
or
mov
mov
jae
xor
add
mov
pop
imul
jo
sahf
cmpsl
add
pusha
pushf
jne
ds
inc
push
ss
mov
inc
int3
shll
insb
les
jb
push
popf
cld
pop
or
hlt
mov
push
rclb
fstps
xor
dec
xlat
inc
lea
dec
es
dec
lret
mov
in
pop
jbe
add
loope
insl
fstl
fwait
aam
fmull
mov
outsb
adc
cmp
pop
sub
inc
jne
cmp
xchg
and
vmovlps
leave
fisubrl
clc
mov
mov
cmp
pop
scas
lods
test
sbb
pop
xchg
pop
jge
jmp
enter
xor
cmp
mov
jno
sbb
pop
push
mov
or
dec
cmp
stos
shrb
jge
sbb
inc
or
sub
imul
imul
test
jae
dec
jl
aad
sub
dec
mov
cmp
inc
popl
push
sbb
jne
adc
pop
adc
mov
pop
int
loopne
fidivrl
cmp
mov
repz
arpl
xlat
mov
into
iret
jo
adc
fadds
dec
xchg
lea
test
xor
movsl
add
push
xor
int
inc
inc
repnz
adc
cs
xorb
push
cmp
and
cmp
xchg
jle
sub
test
cli
cmp
sbb
dec
push
fwait
nop
ja
mov
cwtl
fcmovnb
add
add
mov
sub
mov
xchg
add
lret
xchg
loopne
aad
and
fwait
inc
dec
movsl
pop
mov
in
pop
inc
push
fcomp
std
jle
cmpsl
adc
inc
fsubl
sti
sahf
and
xchg
sbb
lds
mov
mov
fmulp
lahf
and
push
dec
in
adc
ret
push
sbb
pop
int3
xor
movsl
xchg
adc
movsl
movsl
jo
fsqrt
pop
filds
sbb
pop
aad
pop
push
xor
sbb
pop
imul
or
pop
sub
pop
fdivs
sub
xchg
dec
popa
fcmovbe
rcrb
and
aad
ret
jecxz
ret
inc
aam
frstor
xrelease
jno
jle
cmpsb
and
or
xchg
iret
test
xchg
cmp
add
sub
pop
pop
inc
ret
scas
dec
test
ret
xchg
inc
xchg
mov
cmp
mov
xchg
popaw
fs
and
adc
jg
cmp
jge
mov
jg
push
xchg
xchg
pop
daa
or
dec
xor
cld
aam
orl
sub
pop
es
lret
int
pop
outsb
lods
inc
dec
in
enter
mov
fsts
jbe
mov
sbb
outsl
nop
xchg
push
rol
adc
fs
stos
push
xchg
cmpsb
ds
jmp
and
inc
rorl
dec
jb
cs
dec
and
mov
rol
lcall
inc
hlt
cmpsl
inc
ficompl
mov
xchg
cwtl
push
loopne
dec
inc
fcoml
daa
lods
sub
inc
lea
in
sub
add
push
mov
aam
xor
cmp
sub
mov
popf
into
aaa
shr
inc
push
jge
bound
fldl
mov
pop
leave
fwait
stos
nop
pop
or
or
jp
xor
mov
xor
jb
fidivrl
dec
dec
imul
mov
pop
cmp
mov
push
sti
mov
jmp
xchg
xor
mov
shrl
stos
stos
cmp
xchg
xchg
push
stos
and
aas
cmp
or
test
push
mov
pushf
sub
sub
mov
jmp
sub
sbbl
push
mov
xchg
test
loope
mov
divb
mov
xchg
fwait
xchg
sbb
sbb
push
repz
push
repnz
and
mov
add
pop
outsl
mov
jge
cli
xor
out
in
imul
test
xchg
icebp
nop
in
ds
xor
cmpsl
popa
dec
dec
int
jmp
xchg
movsl
lret
js
and
js
pop
jmp
add
cmpsl
cmpsb
adc
loop
rclb
xchg
push
sarb
pop
in
adc
arpl
jbe
notb
cmpsb
dec
test
mov
call
sti
mov
jle
ret
js
sbb
mov
out
xchg
fdivl
add
stos
jmp
sub
pop
loop
push
repz
aas
mov
xchg
gs
mov
mov
int
sbb
stos
idivl
sub
shll
push
les
jge
sti
test
loopne
stos
out
push
scas
lds
rcr
das
into
mov
add
xchg
mov
icebp
push
decb
int3
repnz
mov
push
notb
cmc
push
rcr
mov
iret
ja
jle
xchg
mov
inc
nop
pop
ss
fs
mov
pop
subl
loopne
hlt
dec
jo
into
shlb
scas
pusha
and
mov
clc
cld
xor
xchg
pusha
or
xor
xorl
push
push
dec
out
push
movsl
out
loopne
pop
arpl
divl
or
cmpps
fsubs
jg
inc
mov
sbb
in
pusha
mov
inc
lcall
mov
sub
loopne
pop
and
push
sbb
sahf
sub
mov
ds
push
cmp
out
lea
cwtl
das
inc
pushf
or
dec
inc
out
push
or
adc
cld
jmp
cmp
jge
mov
sub
enter
xor
pop
xor
add
push
popa
xor
jb
arpl
add
mov
nop
pop
mov
or
fsubrs
push
jo
mov
in
push
add
sahf
dec
mull
mov
fmull
pop
xchg
push
int
jae
into
mov
je
cmp
rorb
repnz
or
sbb
mov
ds
cmpsb
dec
cld
cs
jo
jg
pop
jge
int3
dec
movsl
adc
inc
lahf
aad
notb
mov
divl
data16
inc
push
jg
add
xchg
scas
xor
lock
push
cmc
ret
mov
jbe
dec
and
jb
fwait
push
fnstenv
std
test
jge
adc
test
fbld
sahf
out
and
hlt
arpl
mov
leave
sbb
lahf
and
rcr
push
fsubrs
xor
arpl
and
nop
es
out
insb
and
lea
popa
aam
jns
jne
cmp
mov
sbb
jno
mov
or
dec
in
push
xchg
adc
cli
push
sbb
jne
popf
test
shlb
adc
loopne
incb
fbld
xchg
call
jnp
push
nop
int
xchg
aam
outsl
and
pop
addl
aam
or
adc
add
xchg
aas
ror
pop
arpl
ret
sub
push
loop
loope
pop
xchg
or
cmp
sbb
fldcw
nop
into
xor
mov
fdivp
mov
or
sbbb
rcrb
mov
enter
jnp
jno
shrb
pop
pop
xor
add
aas
xchg
in
fwait
mov
divb
pop
xor
adc
dec
inc
and
pop
fidivrs
loop
ret
or
insl
mov
jmp
nop
push
daa
or
arpl
cmp
cmp
xchg
stos
lock
es
jne
enter
ja
add
push
fildll
pop
fists
je
ret
imul
cmp
sar
sbb
loopne
mov
shrl
xchg
fldt
push
push
dec
rcrl
jb
movsl
jge
mov
test
fcomi
mov
ror
adc
in
cltd
cmp
pop
pop
aad
push
inc
out
pop
cmpsl
sub
loope
jbe
cmc
cmp
lahf
aad
mov
add
mov
cmp
cli
fsubs
daa
pop
or
or
in
std
leave
cwtl
or
and
cmp
in
aad
sbb
fisttpll
out
add
subb
and
sub
out
sub
pop
push
pop
inc
stos
push
sub
sub
sub
sub
push
jno
insl
and
push
mov
jge
das
jg
dec
stc
add
mov
test
cltd
mov
sub
push
pushf
xor
mov
push
enter
and
in
and
cli
mov
incb
les
out
push
rolb
aaa
or
adc
and
fsubs
push
fadd
mov
mov
cmpsl
jmp
sub
imull
jnp
mov
loop
adc
ret
in
push
dec
fstpl
rol
scas
jo
cmc
push
aam
inc
sub
lods
cmp
mov
push
movsb
ss
pop
adc
lock
dec
in
in
xor
push
mov
ffree
xchg
out
shrd
lret
cmpsl
sbb
cltd
push
xor
push
pop
jl
jne
jnp
jae
sbb
cwtl
xor
pop
sub
dec
fistps
and
insl
cli
insl
cltd
insl
es
xor
pushf
outsl
and
ljmp
sub
testl
fwait
xor
fstl
xor
clc
stos
or
xor
adc
and
incl
test
call
enter
int3
inc
hlt
cli
aas
cmc
ja
jae
mov
aas
cmpsb
add
xor
mov
int
leave
addr16
sbb
lods
test
daa
push
or
addr16
pop
cld
cmp
add
push
pop
sub
mov
jg
dec
xchg
and
mov
jbe
pusha
in
ja
mov
xor
arpl
sti
inc
or
shlb
jae
pop
jg
mov
xor
jne
sbb
test
pop
mov
dec
xlat
push
imul
cmpsb
ljmp
test
loope
mov
jg
mov
mov
repnz
jno
lea
cld
test
jge
jp
jg
daa
xchg
and
mov
test
add
cs
and
jg
inc
push
rclb
lret
add
jecxz
rcrb
jmp
out
push
xchg
fadds
jo
js
sahf
or
out
mov
add
out
pop
adc
inc
dec
xor
dec
sub
into
push
lock
xor
dec
xor
in
jns
mov
mov
dec
test
xchg
repz
pop
xchg
mov
ret
pop
pop
cmp
add
je
les
push
in
jo
and
imul
insb
loope
cmpb
mov
sub
xor
adc
leave
scas
push
push
test
inc
and
test
mov
fdiv
jno
cmc
pop
add
sub
fdivrl
mov
inc
lret
mov
scas
jle
jne
aaa
adc
mov
cmpsb
in
sub
fldl2e
sbb
mov
clc
mov
mov
sub
add
cld
fisubl
fisubs
frstor
mov
xchg
aas
sbb
iret
push
outsl
leave
sbb
and
sbb
pop
pop
mov
inc
jnp
and
je
stos
out
mov
je
sub
stos
cmpsl
push
scas
dec
lds
sub
ficoml
mov
inc
add
fisttps
push
je
xor
or
gs
das
sub
adc
test
ja
in
adc
push
test
adc
push
addr16
fwait
dec
jle
xor
in
push
add
mov
and
lods
test
das
popf
fsubl
into
xchg
inc
inc
sbb
add
inc
or
dec
inc
repnz
insb
fs
out
mov
andl
mov
sbb
inc
sar
pop
mov
inc
loopne
nop
leave
inc
out
dec
push
insl
mov
sub
mov
pusha
sub
test
mov
inc
push
test
stos
dec
test
add
out
jae
fnsave
insl
push
stos
xor
adc
sub
push
and
jge
es
test
jns
sub
data16
cmp
sub
mov
lds
inc
mov
lret
aam
inc
sahf
cli
addr16
rcr
fcomps
sbb
pop
lods
push
adc
jl
in
xchg
mov
enter
shrl
sbb
inc
lahf
stos
pop
adc
inc
ret
jns
push
pusha
shrb
rorl
jno
jecxz
xchg
lret
insb
mov
sbb
inc
push
enter
push
mov
lahf
rorl
pop
mov
mov
test
xor
pop
call
popf
das
mov
idivb
mov
cmp
push
call
loopne
je
lcall
jle
dec
jg
dec
jmp
dec
mov
or
iret
or
push
mov
sub
pop
insl
push
push
push
and
dec
adc
and
int
imul
daa
sbb
incl
test
lahf
js
adc
pusha
test
insb
pop
movsb
dec
in
mov
cs
jl
inc
shrb
lahf
lods
cmp
movl
add
add
out
and
lea
mov
les
dec
cmp
scas
push
call
sbb
xchg
je
fadds
dec
mov
push
insb
clc
inc
lods
sub
xchg
sbb
enter
faddl
xchg
call
jae
inc
mov
jo
int3
mov
es
adc
xchg
sub
xchg
cmp
cld
add
imul
push
push
sub
xchg
inc
stos
mov
sub
cmp
sub
xchg
sbb
aad
es
lods
push
lods
repz
out
mov
aaa
push
xchg
cltd
and
pop
xchg
jmp
push
xor
adc
cld
bound
pushl
orb
mov
shl
xchg
ja
xlat
cmp
pusha
inc
int
movsb
sub
test
movsl
xchg
add
and
sbb
or
stc
clc
loop
push
ret
or
jae
push
push
lods
std
mov
or
in
adc
cmpsl
mov
pusha
push
repnz
add
add
ds
std
mov
sbb
jecxz
les
adc
rcll
dec
pop
push
pop
lret
imul
and
call
cmp
xchg
shrl
subb
mov
test
loopne
popf
xchg
sbb
push
insb
out
pop
fdivrs
testb
gs
add
loop
push
inc
cmp
push
dec
shr
repz
jmp
or
and
xor
lods
cmpsb
mov
xchg
pusha
arpl
icebp
adc
dec
roll
aad
xor
pushf
rclb
xchg
or
jne
sub
addl
psubusb
pop
push
fwait
inc
js
int
js
sub
lock
sub
pusha
mov
mov
jl
cld
lahf
aas
xchg
pusha
pop
mov
mov
mov
movsl
cltd
in
ret
das
jl
fcomp
jmp
dec
lret
aaa
outsb
cmpsl
rol
ds
out
ljmp
test
adc
pop
ljmp
cmpsb
lret
and
data16
test
jb
loope
lahf
mov
jl
into
shlb
mov
pop
aam
fwait
push
adc
and
inc
or
sbb
out
mov
or
fdivrs
dec
dec
test
movlps
loopne
cmpsb
cmc
cmp
mov
je
mov
movsb
cmpsl
and
jbe
jg
add
xor
fsubr
push
or
imul
dec
jg
pushf
pusha
iret
les
pop
push
ja
rol
into
add
jg
mov
daa
or
push
mov
xor
xchg
cs
pop
xchg
addr16
adc
pop
inc
jnp
or
jb
sub
ja
test
inc
aas
pop
rolb
les
jecxz
ja
mov
sahf
and
jne
jmp
jle
mov
jb
pushf
or
aad
add
adc
sbb
roll
cmp
mov
sbb
out
adc
ds
leave
out
in
stos
out
or
cmp
in
mov
and
ret
sbb
pop
or
bound
enter
inc
inc
clc
and
aas
jmp
xor
dec
in
inc
push
cld
fstpl
pop
dec
mov
mov
leave
shrl
add
inc
pop
les
imul
roll
inc
dec
fs
mov
pop
inc
dec
adc
jp
lods
mov
arpl
dec
pop
ret
xor
in
jge
into
xor
outsb
xlat
mov
push
mov
sbb
fcoms
loop
stc
xchg
mov
mov
push
testl
inc
cmpsb
mov
fwait
mov
xor
sub
xor
add
sbb
cmp
dec
aaa
les
test
sub
adc
xor
xchg
cmp
test
pushf
cltd
scas
test
nop
cs
lods
repz
push
mul
cmp
dec
jne
fisubl
movsb
sbb
stc
jnp
ret
es
adc
cld
add
cmp
shlb
imul
repz
sti
jno
add
arpl
sbb
xor
bound
ds
lret
dec
pop
adc
inc
and
jge
inc
jg
push
push
out
rcl
lock
inc
xchg
aaa
sbb
xchg
sbb
cmp
pop
sbb
out
fimull
sahf
jl
pop
sub
inc
mov
adc
stos
push
movsl
and
pusha
push
push
loope
sbb
xchg
out
adc
lahf
sbb
mov
sti
fsub
into
pop
sbb
mov
icebp
push
enter
andl
add
gs
movsb
inc
fwait
adc
into
subl
xor
test
std
fmull
mov
sbb
loop
sub
in
arpl
mov
fisttps
lret
ss
test
outsl
aad
xchg
push
sub
imul
jecxz
mov
push
push
mov
push
mov
cmc
je
test
mov
xchg
mov
jo
outsl
pop
test
add
outsl
arpl
mov
rcl
or
sarb
cmpsl
dec
jo
movsl
dec
push
cmp
sub
sbb
pop
push
push
cmpsl
out
sub
xchg
mov
ret
test
push
push
cltd
xchg
std
test
xor
insb
mov
or
jp
pop
pop
sub
jb
outsb
mov
mov
push
sub
sbb
stos
sbb
dec
sahf
out
dec
inc
mov
dec
scas
stos
sub
aad
in
aaa
rcr
jmp
sub
adc
fiadds
push
push
jno
xchg
push
push
jg
testb
in
mov
inc
divl
lret
sub
mov
loopne
or
pop
leave
sbb
jge
ds
clc
scas
sahf
push
jb
push
push
std
int3
cmp
and
jo
fistpl
pop
xor
push
mov
xor
xchg
or
sahf
shlb
jge
xchg
xchg
jne
call
dec
xchg
sub
fdivrs
push
popa
or
xchg
movsb
decl
data16
popf
in
mov
daa
cs
xchg
sub
test
and
scas
mov
ljmp
or
decl
add
cmpsb
inc
dec
dec
int3
or
arpl
fstl
fdivrs
insl
pop
mov
or
loop
xchg
pop
mov
add
cld
out
dec
xor
subl
mov
in
out
pop
mov
shl
pop
mov
hlt
mov
cli
leave
call
push
popa
lods
push
xchg
push
popa
mov
lock
xchg
inc
xor
ret
js
loop
xlat
cmc
sub
sbb
imul
mov
add
mov
loopne
fwait
xchg
lahf
dec
hlt
push
sub
xchg
mov
das
cmp
pop
push
xor
imul
pop
and
aaa
mov
jnp
push
mov
rcr
fs
mov
ret
dec
pushf
loopne
stc
sub
loopne
insl
add
data16
jne
xor
pop
add
cli
insb
dec
lret
jecxz
rcr
cmpsl
out
add
dec
pusha
or
pop
aas
in
ret
notl
mov
scas
jae
imul
mov
imul
lret
imul
cmp
lret
fisttps
cmp
pop
inc
mov
push
test
mov
xchg
pop
dec
lcall
pop
arpl
dec
aas
inc
enter
sbb
sahf
and
inc
int3
cmpsl
pushf
xchg
andb
aas
incb
int3
in
jae
shlb
stos
sub
test
sbb
in
shrb
aad
jp
xor
mov
adc
es
in
sub
insb
jbe
repnz
xor
cmp
adc
fiaddl
test
int3
aaa
inc
jae
push
xchg
fldl
sbb
stos
int
stos
loope
dec
aad
out
sbb
mov
mov
std
jg
adc
xlat
push
add
inc
adc
enter
mov
shrl
mov
push
test
push
les
loopne
mov
pop
dec
rclb
push
xchg
cmpsl
xchg
ret
and
cmp
daa
mov
xor
lret
adc
movsb
aam
lret
addb
or
notb
clc
outsl
pop
xchg
es
or
dec
mov
xchg
push
pop
dec
sahf
lds
aam
stc
lea
push
dec
rcl
sub
xchg
stos
cwtl
adc
data16
inc
fs
inc
mov
mov
dec
ljmp
cli
mov
push
jne
arpl
hlt
iret
orb
push
add
dec
dec
xor
adc
add
xchg
popl
mov
jmp
leave
cmpl
jecxz
mov
std
rcrl
adc
pusha
sub
int3
xchg
scas
int3
cmpl
add
cli
lods
dec
xchg
inc
loop
xchg
cmp
fs
xchg
push
movsb
test
setb
adc
cwtl
insb
notl
jmp
sarb
adc
adc
inc
dec
xchg
arpl
test
out
mov
ret
sbb
cld
enter
mov
lret
dec
sbb
ret
jl
adc
mulb
mov
popa
aad
and
cmp
cmc
popa
xchg
loope
cld
enter
fistpl
mov
int3
sub
lds
ret
pop
jl
push
push
bswap
andb
mov
je
mov
inc
adc
lret
adc
cs
loopne
add
push
mov
in
je
test
pusha
sub
sub
cmpsl
and
ljmp
data16
add
sarb
aas
xchg
pop
cld
outsl
adc
push
aas
push
pop
lahf
push
das
cmp
cmp
cmp
and
inc
lret
pop
dec
mov
inc
jmp
jbe
es
lock
adc
imul
test
andl
pop
out
lea
aad
rol
int3
mov
push
dec
jo
icebp
sub
jge
mov
bound
popa
aas
sub
pop
add
fldcw
xchg
and
or
sub
std
cmpsb
push
or
mov
mov
aam
les
jns
rorl
cmp
mov
mov
xor
call
mov
fwait
sub
mov
jae
in
jbe
xor
mov
sahf
or
add
leave
push
test
in
int
mov
imul
jo
imul
add
aas
mov
inc
xchg
mov
pop
jb
mov
mov
ret
or
pusha
outsl
lcall
xchg
push
rep
je
rclb
and
add
mov
cmp
gs
sbb
xchg
rcrb
mov
idiv
push
jge
xor
hlt
ret
pop
lahf
mov
xor
push
sbb
mov
inc
flds
clc
es
or
push
repnz
repnz
mov
mov
add
insb
inc
lds
mov
xor
add
repnz
les
sarl
cmp
cmp
pop
lahf
dec
and
int3
dec
shll
or
les
xor
ss
mov
mov
inc
or
pushf
lods
js
test
movsl
push
int
xchg
or
and
imul
adc
loopne
data16
rcr
adc
sub
sbb
or
push
push
shll
xor
idiv
sar
add
aad
cmp
xor
inc
mov
push
das
fwait
mov
inc
jg
mov
xor
pusha
jae
mov
das
mov
xchg
aaa
sarl
roll
or
dec
xchg
pusha
xchg
imul
jb
add
mov
xchg
aas
lock
sub
mov
xor
and
xor
xlat
std
adc
pop
mov
dec
popa
sbb
jge
mov
mov
int
and
je
fisubl
xor
jo
mov
mov
push
adc
cmp
into
movsl
aad
stos
notb
cmpsl
and
sub
insl
dec
adc
fcoml
mov
sub
cld
ret
jne
out
cmpsb
rorb
inc
xor
daa
test
pop
mov
popa
sahf
lret
dec
aam
and
addb
mov
psllw
and
aaa
dec
or
imul
dec
lods
jp
mov
pusha
mov
fst
movsb
mov
enter
ret
xchg
imul
aad
call
xchg
test
and
mov
mov
int3
xor
push
mov
hlt
adc
push
in
pushf
and
push
pop
push
dec
gs
in
mov
stc
pop
aad
inc
int3
cmpsl
jae
push
cld
out
fadd
jge
cmpsl
xchg
sbb
lock
cmc
mov
test
cli
aaa
sub
mov
xchg
cli
test
insl
pop
sub
jo
push
sbb
out
insl
lock
je
mov
in
ljmp
pop
outsb
adc
int3
cmc
adc
fisttpl
out
xchg
into
push
pop
into
mov
mov
enter
inc
pop
or
and
pop
pcmpeqd
xchg
xlat
cmc
xchg
ljmp
mov
sub
les
sti
sbb
dec
data16
dec
fs
push
lea
mov
mov
cmp
xor
inc
bound
xchg
or
int3
mov
out
and
inc
in
xchg
mov
add
inc
add
xor
movsl
add
loop
pop
xchg
lds
jb
andb
mov
je
xchg
mov
popa
mov
movsb
and
mov
mov
fiaddl
out
sbb
xchg
movl
js
add
mov
inc
push
pop
cmpsb
lods
xchg
pop
addr16
scas
addl
cs
push
in
inc
adc
lahf
add
cmpsl
ret
sbb
aam
insl
add
jle
mov
mov
push
out
jbe
mov
sbb
xchg
sbbl
and
leave
jp
int
push
add
movsb
xor
push
sbb
divl
incb
push
repnz
in
lods
pop
push
xchg
pop
in
mov
sbb
sub
rorb
push
xchg
cmp
dec
shlb
push
inc
push
hlt
inc
nop
mov
sub
pop
adcb
or
mov
mov
adcb
mov
cli
jo
repz
pop
das
add
jae
pop
jl
je
pop
mov
xchg
js
dec
pop
cmc
out
push
ss
xor
out
cmp
mov
sub
cmp
push
mov
jge
das
dec
mov
sarb
mov
outsl
push
lea
adcl
in
fisttpll
jne
xor
fsubl
push
jbe
sbb
shlb
jp
pop
call
xlat
sub
push
jnp
adc
mov
jmp
out
pushf
push
adc
fucom
cli
sbb
or
xor
pop
scas
inc
mov
inc
clc
cmp
pop
fwait
lret
sti
jo
icebp
push
and
pop
sti
mov
xor
mov
jb
aas
adc
cmp
adc
daa
jnp
push
sbb
mov
fsubl
dec
push
test
loope
sbb
mov
sub
test
inc
aam
jo
ljmp
mov
or
push
pop
mov
lods
inc
sbb
xor
or
out
mov
lret
in
sub
ss
jbe
dec
ss
ret
lret
cmp
pop
sub
and
jge
ds
dec
adc
btr
insl
fsubr
dec
push
mov
addl
scas
loop
mov
mov
into
outsb
mov
pop
stos
out
lret
mov
out
or
sbb
xchg
inc
inc
out
outsl
mov
push
cmp
rorl
sarl
mov
cs
jbe
testb
stos
je
pop
shr
sarl
push
mov
sar
mov
mov
insb
dec
sub
divb
leave
inc
vcvttpd2dqy
or
movsb
mov
add
mov
xor
test
aad
mov
subb
mov
push
xor
cld
cld
inc
cwtl
stos
jbe
sbb
dec
in
add
pop
pusha
popf
es
jne
inc
mov
push
sub
js
add
imul
rcr
and
jg
xor
in
data16
pop
push
iret
lcall
cltd
sub
pop
icebp
push
push
xchg
mov
add
cmp
adc
inc
mov
loope
popf
mov
jno
adc
sbb
sub
rorl
mov
mov
das
in
sti
inc
out
je
je
inc
dec
stc
lods
mov
dec
push
dec
dec
daa
sub
add
inc
test
test
mov
loop
dec
lods
mov
movsb
push
lds
pop
scas
pop
int
rol
stos
mov
or
je
lock
fistps
bound
xor
jne
inc
inc
pop
mov
dec
subl
push
inc
cmp
xlat
bound
pusha
shll
cmpsb
js
push
xor
dec
add
gs
fildll
out
ljmp
sbb
sub
out
mov
push
out
xor
xor
mov
pop
add
push
orl
sbb
sub
fnsave
add
jno
mov
push
stc
movsl
cmp
cmp
sbb
das
push
sbb
mov
mov
pop
mov
mov
add
adc
lcall
and
and
xor
mov
ss
add
fiaddl
xchg
add
test
lcall
daa
or
lds
ja
loop
sub
mov
dec
and
fcmovb
ret
sbb
popf
jmp
outsb
sbb
mov
dec
scas
repz
and
inc
mov
add
cmpsb
cmp
xchg
das
inc
push
sbb
in
stos
inc
mov
rol
push
jo
mov
and
pushf
loopne
test
ret
mov
nop
xor
ljmp
imul
adc
xlat
jb
inc
xchg
jecxz
push
cmc
inc
rcll
cld
xor
xchg
js
loop
cmp
mov
or
or
fsubrp
sub
and
mov
jb
push
daa
scas
mov
mov
lahf
mov
outsl
cvtdq2ps
insb
dec
enter
lahf
imul
test
dec
xor
lds
ds
add
mov
iret
and
push
push
mov
fwait
mov
xchg
ljmp
push
push
adc
push
aaa
add
ss
mov
inc
cmp
mov
mov
pop
aad
pop
ret
mov
int3
cmpl
loopne
sub
or
inc
sbb
std
xor
cmpsb
mov
or
adc
aam
fidivrs
push
inc
mov
xchg
stos
push
cmpsb
enter
mov
aaa
addb
cmp
mov
stos
les
add
xor
mov
arpl
or
sub
xor
mov
dec
adc
bound
lret
das
pop
jmp
into
out
std
fmuls
add
sti
jo
sub
fcmovb
push
fwait
jmp
and
iret
xchg
adc
inc
psllq
sub
push
daa
ds
jp
ffreep
div
pop
pop
mov
arpl
add
call
shll
les
fwait
and
push
into
push
repz
fmuls
stc
jp
lret
fildl
or
mov
and
aaa
fcoml
in
or
rcrb
mov
and
xor
or
push
fwait
or
mov
in
fs
add
fisubrl
insb
inc
scas
dec
xor
push
jecxz
hlt
dec
in
pop
incb
loope
sbb
stc
pop
jl
rolb
pop
push
mov
add
jl
sbbl
mov
sarl
sti
cwtl
lret
adc
or
imul
imul
xchg
cmp
push
sbb
and
push
cmpl
jmp
push
cmpsb
loop
mov
leave
adcl
in
cmp
xlat
shrb
lock
fldcw
or
mov
inc
and
scas
xor
mov
dec
rorb
lods
es
cld
pop
outsl
mov
lea
xor
cmpsb
mov
jns
and
adc
rclb
pop
jl
pushl
ret
push
std
stos
inc
adc
loopne
sbb
push
dec
mov
xchg
dec
iret
xchg
sub
mov
adc
pop
push
xchg
popf
mov
lea
mov
mov
aad
dec
pushf
or
cmp
xchg
xor
iret
fmuls
push
nop
mov
cmp
pop
sbb
ja
xor
pushf
dec
add
ret
push
xchg
xchg
push
pop
in
lds
aad
mov
mov
push
mov
clc
push
dec
jno
push
adc
and
ds
hlt
push
cmp
sub
lods
push
xor
xor
inc
test
mov
aaa
stc
test
sbb
ja
sub
jns
pop
movsb
add
sub
mov
jo
out
pop
mov
push
test
cld
jle
xor
jbe
or
xchg
cmpsb
inc
lcall
and
shlb
out
adc
push
jae
add
pop
adcl
popf
cs
fnstcw
mov
test
insb
out
pop
rol
sub
movsb
fsts
mov
sbb
lea
std
push
push
leave
xchg
mov
jbe
icebp
adcb
push
and
xor
jmp
repz
inc
mov
mov
stc
sub
cwtl
dec
adc
int
loope
je
nop
sbb
push
sarb
or
push
jl
xchg
inc
loop
in
sub
push
ss
sub
int3
jmp
adc
int
cld
sub
cld
shll
pop
stos
mull
loope
shl
aaa
mov
std
mov
into
fldt
cltd
ret
insl
fmull
sub
loopne
xchg
int3
jg
call
out
inc
sub
into
jae
mov
xor
dec
mov
int
pop
jmp
mov
fs
rcll
scas
dec
xor
les
xchg
xchg
sub
jl
xor
adc
xor
push
fwait
out
dec
push
addl
jl
fwait
fwait
pop
iret
orl
iret
lret
icebp
mov
mov
add
mov
imul
das
or
scas
jge
in
mov
inc
call
sti
loop
mov
push
arpl
mov
push
sbb
lods
dec
mov
inc
cmp
xchg
xchg
inc
xor
cmp
push
xchg
out
push
outsb
aam
jae
mov
and
cmpsl
inc
jp
cmpsl
mov
cs
popf
pop
mov
vxorps
call
iret
sub
sub
sub
jmp
push
out
push
inc
arpl
cmp
mov
out
loopne
cs
sbb
xchg
sub
in
repnz
inc
movsl
add
cmp
out
movsb
xor
int
cld
jo
mov
loopne
loope
dec
fimuls
cltd
frstor
fsubrl
loopne
adc
shl
arpl
and
jne
adc
js
sahf
inc
xchg
add
pop
lret
push
xor
imul
popf
jp
push
cwtl
xlat
loopne
lock
data16
xor
sub
test
je
mov
jne
push
push
or
or
ja
cmp
mov
xor
mov
mov
or
cs
fldcw
push
data16
dec
popf
mov
inc
push
or
fdivl
ss
daa
lds
jne
push
or
dec
xchg
into
push
or
repnz
pop
xor
enter
pop
mov
insl
fisubl
adc
xor
loop
sub
jecxz
leave
mov
sbb
pop
add
ds
cmpsl
in
outsl
aam
orl
and
out
stos
lahf
cmp
mov
icebp
insl
jns
xchg
mov
pop
jae
xor
outsb
ss
sarl
or
mov
fwait
and
aas
fisttpl
jmp
out
cmp
jnp
cwtl
xchg
sbb
adc
pop
stos
inc
in
add
add
std
clc
pushw
mov
int3
inc
push
dec
fidivrs
jp
dec
in
inc
mov
mov
xorl
mov
inc
fistps
mov
xchg
or
in
inc
aad
jmp
push
add
outsl
in
sarl
cmp
xchg
sbb
jns
inc
out
mov
and
fistl
lds
in
aam
icebp
sub
cwtl
dec
mov
xchg
andl
std
movsl
fstl
enter
into
negb
fists
mov
add
icebp
xor
mov
jae
xor
sub
xor
sahf
xor
je
mov
sbb
loop
pop
sub
lret
cmp
sbb
insl
sahf
scas
push
ficoml
lret
popa
cmpsl
pop
clc
lea
js
cmp
or
mov
add
push
pop
add
mov
jne
scas
or
fcoms
cs
push
dec
mov
jge
inc
scas
pusha
shr
jnp
or
fcomps
andl
hlt
mov
mov
jno
arpl
cmp
lea
and
out
stc
repz
adc
xor
mov
ffreep
xor
outsb
movsl
sbb
roll
xchg
scas
rolb
hlt
jnp
popf
pop
jp
inc
pop
jg
in
mov
xchg
aam
bound
pop
dec
push
mov
loopne
jae
sub
xchg
cmc
inc
or
movq
rorb
and
xchg
decl
jae
fmulp
pop
lret
and
cmpl
cltd
in
in
inc
repz
sbb
or
inc
mov
adc
cmp
popa
enter
xor
xorl
add
add
xlat
xor
insb
jg
push
jns
test
mov
xchg
mull
in
mov
jg
imul
adc
in
add
rolb
pop
mov
rcrb
xor
stc
push
frstor
js
xor
popa
jg
sbb
sbb
xchg
jne
cmp
arpl
xlat
es
or
jbe
adc
or
outsb
test
adc
aad
xchg
inc
mov
sub
pop
hlt
jae
mov
sbb
pop
inc
pushf
and
sub
push
and
pop
mov
xchg
in
push
add
jl
lret
inc
jge
mov
jns
cld
mov
sbb
inc
aam
sbb
mov
rolb
out
je
add
mov
mov
cmp
dec
notb
cmp
and
pushf
lea
mov
shl
mov
adc
jl
js
dec
aad
js
dec
mov
pop
or
addr16
sub
push
data16
or
int3
testl
cmp
adc
lahf
sbb
lds
fstps
lea
lods
xchg
sahf
sub
sub
sub
jle
aad
dec
dec
xor
jb
movsl
sbb
xor
and
scas
cmpsb
ret
lcall
push
cmp
or
dec
push
out
push
push
xchg
dec
xor
xchg
dec
pop
mov
scas
mov
xor
mov
push
mov
add
and
adcl
mov
push
lahf
mov
jge
cmpsl
jp
mov
aaa
xchg
stos
rcrl
test
inc
sbb
push
idivl
sub
repnz
inc
iret
es
fnstenv
fnstsw
dec
std
lods
test
outsb
sahf
cmp
xchg
push
mov
mov
out
xchg
dec
jb
notl
sbbb
pusha
icebp
and
mov
dec
adc
cltd
jmp
mov
les
out
xlat
sti
addl
dec
leave
addl
dec
inc
cmp
xor
lods
xchg
add
sub
scas
mov
pop
cld
mov
mov
stc
and
outsl
add
sub
into
mov
cwtl
pusha
sti
cmpsl
loope
xor
fisubrs
repnz
and
cmpsl
mov
fstpl
insb
inc
cmp
movsb
cmp
loop
call
add
adc
sub
push
xchg
imulb
jns
and
jp
adc
stc
dec
jg
addb
sbb
mov
mov
inc
mov
dec
cltd
adc
or
fdivrp
loope
and
or
inc
cmp
rcll
pause
call
push
in
pop
dec
push
icebp
pop
xor
fs
push
push
sbb
popa
jno
cmc
jmp
outsl
std
or
adc
jb
inc
daa
mov
imull
je
adc
and
add
jb
mov
cmp
lods
js
push
xor
xor
pop
cmp
cmpl
mov
sbb
ret
sbb
xchg
out
pop
sub
jnp
cltd
mov
dec
loopne
andl
movsl
xchg
jmp
aas
popa
movsb
fsubl
mov
mov
adc
decb
fsubl
nop
cmpsb
out
xor
in
sbb
test
aad
mov
aad
hlt
iret
cld
inc
testb
dec
pushf
in
mov
addr16
mov
push
out
xchg
rcrl
lods
mov
push
pop
push
mov
xor
xor
cmp
jle
xchg
outsb
out
out
sub
mov
sub
add
add
add
push
shl
out
outsl
loop
or
jmp
jae
movsl
andb
imul
aam
pop
sahf
ja
mov
mov
mov
xchg
pop
arpl
call
push
cmp
outsb
es
cmp
stos
call
xchg
ds
xor
out
test
pop
inc
addr16
and
aam
es
inc
jmp
aad
inc
cmp
push
inc
inc
mov
orl
fiadds
mov
push
ffreep
cs
test
inc
mov
test
push
add
mov
push
push
inc
push
cmpsl
push
dec
cmc
cmpsl
xor
xor
aas
cmp
sbb
loopne
iret
add
out
mov
dec
sbb
lds
mov
lcall
pushf
sub
loop
js
jecxz
jg
mov
movsb
ret
ror
cmp
push
pop
sub
outsl
out
pop
mov
pushf
repz
inc
sub
dec
pusha
test
cmovne
xchg
movsb
dec
xor
inc
xchg
shll
and
xor
adcl
xlat
push
and
inc
test
sbb
adc
sbb
pop
subl
xor
popa
mov
jae
lret
xor
lods
xchg
jnp
pusha
rcr
inc
mov
mov
pop
pop
and
xchg
mov
add
outsb
xchg
push
xor
cli
nop
pop
loopne
xlat
cli
movsb
mov
pusha
xchg
inc
ror
test
in
ret
pop
or
pop
add
mov
cmp
stc
xchg
lret
pushf
imul
cmp
je
gs
inc
das
arpl
pop
sbb
adc
add
test
jno
sbb
icebp
sbb
or
inc
xor
push
xorl
pusha
lcall
xchg
outsb
dec
xchg
xor
pusha
add
mov
and
push
push
pop
adc
add
test
add
or
orl
push
sub
xchg
es
dec
cs
mov
cmp
add
jne
arpl
mov
ss
xchg
lahf
rclb
jp
fs
cmp
clc
xor
dec
mov
mov
inc
mov
jno
je
mov
sbb
mov
inc
out
test
fisttps
fldenv
stos
dec
push
xor
call
cmpsl
out
add
repz
js
flds
orl
mov
xor
cmp
inc
or
cmpsl
fs
pop
add
cmp
sub
scas
insl
xchg
aad
and
mov
push
dec
or
movsb
dec
cmpl
adc
sbb
fnstenv
fcmove
push
or
fisubrs
inc
sahf
adc
pop
adc
xchg
jecxz
xchg
lods
inc
inc
or
jge
mov
gs
xor
or
jge
call
xchg
adc
ret
jne
test
or
test
dec
xchg
js
xchg
mov
mov
cs
xor
test
mov
aas
xchg
add
loop
out
and
mov
xor
jae
adc
gs
jecxz
das
sbb
arpl
aad
pushf
pop
jnp
cmp
push
or
fnstcw
xchg
into
shlb
mov
jae
sti
sbb
pop
rol
and
push
or
push
mov
daa
dec
fimuls
push
jmp
sbb
inc
shlb
clc
inc
jecxz
xor
stos
push
xchg
mov
leave
and
xor
lods
push
fucomi
or
mov
fcoms
xchg
pushf
notl
fwait
xchg
sub
sub
in
mov
loopne
sub
xchg
shl
adc
mov
repz
mov
cmp
and
jle
mov
add
mov
hlt
and
rcrb
mov
mov
jle,pt
add
popa
loop
lods
je
mov
lock
pop
sub
outsl
sahf
dec
cmc
ss
mov
mov
inc
fisubrl
test
mov
pop
cmp
pop
loopne
sbb
repnz
add
insl
test
push
and
mov
in
xor
or
shr
scas
mov
adc
lods
adc
in
xor
and
in
jbe
adc
mov
das
lods
dec
pop
fucomp
cmpb
jmp
inc
ffree
xor
imul
push
xchg
fsubrs
inc
jnp
jne
frstor
imul
cli
cmp
divb
bound
mov
push
fsub
xor
jnp
fimuls
clc
testl
ljmp
and
inc
rcr
inc
cmovp
dec
pop
cmp
mov
mov
xchg
pop
push
pop
subl
push
stc
repnz
xor
lret
ljmp
dec
xchg
aam
push
mov
daa
insl
mov
xchg
mov
cs
sub
jge
jmp
mov
adc
or
in
lcall
mov
movsl
cltd
adc
inc
pusha
dec
xor
mov
add
inc
fwait
pop
jge
fcomps
xchg
or
fsubr
xor
push
in
mov
fisttpll
adc
sahf
inc
ss
mov
int
inc
push
cpuid
repz
notl
add
movsl
xor
mov
cmpsb
movsl
add
nop
call
and
mov
mov
cmp
hlt
call
loope
dec
testl
ljmp
in
iret
rclb
or
jl
mov
add
dec
test
push
jns
mov
pop
call
mov
pop
xchg
push
adc
fdivrl
sbb
xorb
shll
mov
mov
test
mov
dec
jl
push
ret
out
xchg
xchg
shll
mull
mov
sbb
hlt
int3
sbb
jecxz
icebp
imul
ret
mov
das
xor
mov
fsub
int3
mov
cmp
sahf
imul
add
ror
outsb
and
cmpsb
or
mov
loope
and
sub
xchg
leave
popa
and
pop
push
shll
push
and
xor
inc
aaa
jg
in
xchg
cmp
nop
shrb
pusha
outsb
mov
mov
jnp
cwtl
popl
jae
bound
pop
ret
push
fldl
out
xor
scas
push
pop
pusha
movsb
jge
jae
sub
fdivl
fbstp
test
insb
fnsave
lods
arpl
insb
adc
jl
shl
dec
repnz
dec
mov
jl
test
inc
sbb
pop
pop
jmp
ret
push
aam
daa
jnp
xor
dec
add
jmp
pop
dec
imul
popa
cmpsb
lcall
xor
cmp
inc
cltd
adc
mov
mov
testl
loopne
mov
in
push
sbb
add
test
sbb
iret
mov
pop
sub
inc
jb
push
movsb
stos
sbb
pop
addb
test
cmp
xor
movsl
out
cmpl
aad
pop
test
repnz
pop
mov
in
sub
repnz
adc
cmc
sub
push
and
scas
add
std
sbb
stos
stos
jo
xor
repz
lcall
insb
mov
fstps
repnz
sti
fucomi
fs
les
les
fnstsw
and
mov
cmp
jge
cwtl
jl
jmp
mulb
fs
dec
cli
xor
loopne
mov
xor
mov
dec
add
xchg
mov
aaa
scas
xchg
mov
int3
push
mov
ficompl
pop
jb
add
sahf
movsb
adc
mov
xchg
movsb
fstps
out
test
mov
push
sbb
xor
xor
outsb
lds
inc
movsb
movsb
je
ljmp
add
add
xorb
pop
push
mov
jecxz
and
sahf
and
mov
lret
jp
js
repnz
data16
jmp
cmp
xchg
cmp
mov
ss
jg
call
shll
xchg
je
test
setno
jecxz
pop
cmp
addr16
mov
out
push
pop
sbb
add
rorl
push
fsubrs
repz
jae
inc
push
push
ljmp
cli
or
insb
gs
or
rorb
pop
lock
jl
leave
cmp
inc
xchg
fcomip
mov
mov
push
mov
les
fistpll
lods
loope
push
cmp
adc
dec
int
pop
adc
jo
push
mov
sbb
cs
mov
mov
adc
int
fsubrl
mov
and
adc
insl
lods
mov
push
sahf
cmc
call
mov
adc
push
sub
std
mov
aad
cltd
xchg
mov
out
and
adc
mov
mov
xlat
mov
jp
sbb
ja
sub
sbb
push
cmp
nop
shrb
cmpsb
dec
aas
into
outsl
insl
int
cmc
add
adc
mov
mov
adc
ret
fnstcw
cltd
and
xchg
dec
mov
xchg
je
jne
lock
dec
sti
lock
sbb
and
into
jb
dec
stos
xor
repnz
lods
ja
or
pop
pop
xor
mov
inc
and
imul
aam
js
in
push
pop
jmp
lcall
and
insl
dec
cld
xor
and
sbb
pop
mov
fimull
cmp
sbb
push
mov
adc
test
adc
and
cli
and
and
fistps
xchg
out
les
jg
fcoms
in
mov
sub
dec
mov
xchg
inc
mov
push
je
push
xor
cmp
cmp
ds
dec
clc
jnp
mov
xor
pop
and
fsub
mov
or
pushf
pop
mov
test
stos
sub
addr16
mov
repnz
movsl
add
mov
pop
mov
cmp
orb
aas
push
push
cmp
jo
sub
lds
lret
cld
js
mov
xor
aad
sub
xchg
inc
sbb
mov
mov
cli
ret
xchg
xchg
xchg
cmp
and
fstpl
xor
addr16
outsl
sub
fwait
push
movsl
cwtl
pop
addl
mov
xchg
in
ret
pop
outsl
jg
in
xchg
inc
rcll
aad
stos
stos
adc
mov
push
lock
icebp
mov
mov
into
hlt
add
in
insb
mov
std
and
jb
ss
push
cmp
jmp
push
cmp
stos
aam
movsb
repz
popa
ja
in
jmp
ret
mov
jne
sbb
and
cltd
xchg
cmp
scas
mulb
jno
lret
mov
jg
sub
jl
dec
data16
movlps
jl
xchg
imul
cmpsl
xchg
xor
push
mov
andl
addb
pop
mov
and
sbb
in
into
es
subb
sbb
jno
xor
and
cld
hlt
push
xchg
adc
mov
loope
jp
mov
inc
lret
mov
adc
cmp
inc
in
js
add
loopne
or
adc
jns
lds
xchg
dec
inc
clc
or
mov
hlt
stc
adc
push
jle
aas
arpl
mov
repnz
leave
icebp
into
aas
es
pop
sbb
pop
in
mov
jp
das
fiaddl
xlat
lret
test
jl
pop
fstpt
adc
aam
mov
popf
pop
pop
and
int
adc
in
loop
aaa
mov
xchg
dec
out
dec
mov
mov
jecxz
shlb
mov
push
mov
outsl
push
pushf
dec
mov
pop
mull
adcl
and
cs
testb
jae
pop
orl
stos
push
dec
cmp
imul
mov
movsl
scas
push
scas
insb
fnstenv
mov
enter
mov
stos
scas
xor
fst
pop
xor
cli
mov
xlat
mov
loopne
js
fisttps
add
mov
jns
pop
movsl
jno
cmp
sbb
xor
xor
push
lds
fucomip
fcompl
xor
xchg
add
mov
sub
int
sbb
test
std
pop
pop
in
cs
inc
in
mov
lds
nop
cs
out
lds
insb
mov
inc
add
push
cmpsb
out
dec
sti
mov
pop
shr
push
movsb
cpuid
fs
in
lods
mov
ljmp
out
pop
js
adc
ljmp
ja
push
daa
out
mov
xlat
add
and
call
dec
pop
push
fldcw
mov
adc
xor
jge
dec
xchg
cmp
sbb
imul
test
sbb
pop
push
enter
pop
btr
cli
enter
fbstp
pop
xchg
pop
xor
lret
sahf
das
imul
popa
dec
and
loopne
xchg
push
dec
movsl
inc
cmc
adc
sahf
ja
jae
and
adc
test
inc
sbb
mov
sarl
daa
popf
imul
push
lods
fcmovu
mov
pop
push
push
es
hlt
lahf
push
add
lds
dec
sahf
fwait
dec
imulb
in
adcb
js
call
jge
inc
adc
lret
and
bound
mov
movsb
sarl
jne
sbb
data16
adc
jmp
dec
pop
and
adc
push
adc
int3
loopne
pushf
out
cld
lahf
jge
scas
sub
xchg
mov
xlat
loop
loop
inc
sub
in
std
dec
mov
push
dec
fnstenv
pop
outsl
inc
cmp
cli
mov
push
mov
mov
pushf
sar
xchg
or
adc
and
iret
xchg
sti
in
mov
sti
int3
sbb
cltd
push
mov
data16
dec
mov
outsb
push
push
je
mov
cmpsl
dec
or
dec
inc
test
cmp
clc
jns
mov
xchg
fiadds
lods
cwtl
push
test
out
stc
xchg
arpl
push
sahf
sbb
ret
pusha
dec
dec
mov
lret
mov
inc
icebp
dec
into
dec
jp
test
xchg
test
cmpsl
mov
mov
sbb
and
push
and
ret
rorb
je
in
popa
stos
les
dec
cmp
mov
xor
adc
jbe
movsl
pushf
scas
mov
insb
or
mov
data16
insb
add
hlt
or
jg
repz
das
lcall
mov
ljmp
cs
adc
cmpl
adc
xchg
out
das
sub
cmc
inc
xor
mov
mov
push
add
cld
adc
clc
jnp
cltd
vpsignw
mov
addr16
adc
mov
xor
inc
jp
jecxz
lock
inc
leave
push
xchg
add
adc
mov
loop
rcrl
shll
pop
js
mov
mov
fbstp
pop
push
lret
jnp
mov
cld
xchg
pusha
mov
lea
aaa
sbb
adc
dec
push
or
fldt
imul
jle
xchg
dec
adc
jmp
into
xor
pop
mull
int3
xchg
pop
in
notb
jo
int3
jle
shlb
lock
mov
test
subb
or
nop
push
mov
call
int
sub
push
pop
cmpsl
jno
fmul
jmp
xchg
mov
mov
sbb
cltd
dec
lock
sti
sub
scas
sub
inc
lcall
jae
inc
je
pop
les
call
cmp
mov
mov
loopne
icebp
cmpsb
pushf
mov
repz
lcall
cli
outsb
int
mov
mov
repz
into
cmc
mov
mov
push
push
je
cld
stos
or
pop
xchg
in
stc
cmp
inc
jmp
mov
in
inc
sbb
jge
mov
dec
cmpsl
add
out
shl
pop
jno
out
push
testb
movsl
or
jmp
sarl
sbb
notb
lods
sub
lock
cmpl
out
outsl
push
test
movsb
call
fiaddl
iret
jno
and
mov
lock
and
mov
sub
mov
cltd
xchg
insl
mov
adc
test
lock
add
pop
out
add
icebp
out
das
sub
jmp
rcrl
xchg
outsl
fs
aad
jno
ret
or
mov
mov
ret
movsb
mov
cmpsb
sub
loop
add
add
mov
dec
loop
push
test
jmp
or
mov
or
lret
test
mov
std
pop
sarl
scas
mov
jb
cli
in
mov
add
mov
shll
dec
cmp
xchg
lret
inc
cmp
xor
xor
fstps
xorb
clc
and
jne
sub
aas
pop
ret
jecxz
and
jmp
jp
das
mov
loopne
les
sub
int3
mov
xchg
stc
pop
int
push
mov
out
cld
push
insl
xor
imul
pop
mov
sarl
inc
in
daa
add
inc
cmp
inc
movsb
sub
mov
or
xchg
xchg
shl
in
in
or
cmp
or
cmpsb
insb
ja,pn
imul
sbb
push
or
outsl
dec
xor
mov
sbb
fs
out
inc
dec
fistpl
push
dec
pop
mov
inc
std
scas
xchg
inc
nop
rcrl
popa
inc
sbb
pushf
jb
sbb
cmp
das
or
inc
rclb
mov
mov
mov
rorb
call
jmp
xor
mov
sahf
rcl
insb
int
ja
xchg
and
stos
lret
fisttpll
cmp
aas
stc
clc
das
or
inc
xor
xor
xchg
ds
pop
fisttpl
sub
in
std
or
adc
icebp
add
mov
mov
in
dec
jp
xchg
mov
pop
andb
test
pusha
pusha
scas
push
lods
jle
xchg
mov
mov
mov
cld
push
test
dec
mov
je
lock
add
shll
int
imull
push
jp
or
daa
stos
jnp
xor
jbe
inc
sti
adc
inc
and
lcall
mov
add
subb
mov
dec
roll
loope
sub
fdivp
stos
cltd
ret
fmul
xchg
popf
inc
leave
lea
shl
sbb
push
pop
sbb
je
adc
in
mov
roll
into
xchg
iret
push
std
orl
push
inc
push
pop
mov
sub
and
roll
bnd
sub
inc
dec
mov
fcoml
movsl
scas
sub
mov
sarb
rolb
sbb
cmpsl
les
or
ret
icebp
fdivs
fnstcw
ljmp
repnz
insb
push
repnz
es
mov
pop
add
lahf
std
xchg
ret
cld
data16
pop
jno
imul
gs
sub
rcrb
arpl
fldl
xor
pop
in
aaa
imul
int
xor
xchg
popf
out
movsb
jnp
ja
rcr
push
dec
icebp
jmp
xor
mov
sarl
adc
cwtl
rclb
lock
jo
mov
out
push
mov
lods
lret
shr
push
cs
pop
pop
fcmovbe
cmp
or
in
cmpl
push
int3
pusha
mov
inc
adc
xor
data16
fwait
aad
and
or
inc
jmp
sbb
jne
xor
cwtl
add
inc
iret
add
test
mov
jnp
dec
lret
es
test
or
inc
ss
mov
or
xchg
adc
jl
in
rcl
xor
jbe
sub
or
pop
arpl
or
lds
test
scas
mov
push
mov
lods
dec
lods
shll
enter
or
pop
mov
xchg
std
push
sbb
pop
call
cmc
jns
pusha
jae
movsb
dec
in
pop
and
jae
cmc
insb
test
test
aaa
cwtl
xor
into
into
mov
pop
xchg
loope
mov
jno
xor
ja
dec
loopne
mov
into
outsb
xor
arpl
sub
cmp
xchg
dec
ud2
jp
out
in
pop
fwait
sbb
cmp
or
pop
cli
push
lods
daa
sbb
movsb
mov
mov
stc
cmp
repnz
mov
je
pop
call
cmpsl
mov
mov
je
mov
lahf
adc
das
test
mov
mov
test
push
inc
and
lods
enter
in
and
in
daa
jecxz
jp
nop
inc
rolb
lods
imull
mov
outsb
int
add
mov
out
cmpsl
cltd
pop
icebp
test
or
jbe
adc
scas
adc
mov
mov
or
mov
push
fldenv
es
or
scas
imul
push
cwtl
popa
lock
fadd
dec
push
dec
or
xchg
loop
cmp
cli
aam
xor
jb
lea
subb
mov
cmp
xchg
jge
stos
and
std
ror
dec
mov
mov
mov
jno
mov
orb
sti
jns
adc
mov
mov
inc
mov
in
ljmp
sub
daa
sbb
cld
mov
sbb
rcr
mov
inc
ljmp
adc
hlt
mov
clc
sahf
sub
cmpsl
lret
cmpsb
jne
lods
loop
fucomp
in
mov
shll
mov
xchg
mov
xchg
cmovg
jne
inc
cmp
imulb
add
adc
pop
lds
pop
std
dec
mov
sbb
and
jae
lret
jge
imul
sub
enter
shlb
mov
mov
xchg
mov
pop
addr16
xchg
push
lcall
es
pop
fsub
inc
jge
push
lds
xlat
in
notl
stc
loopne
jmp
xor
sahf
sub
sub
fwait
out
lahf
setbe
popf
sbb
js
stos
jnp
mov
pop
push
outsb
in
fisubrs
es
pop
or
movsl
or
daa
fnsave
outsl
dec
sub
add
aad
adc
jnp
jmp
sbb
mov
jno
call
movsl
pop
in
pop
lds
jg
sbb
scas
pop
fisubs
jg
loope
call
jp
fnstenv
sarl
and
pop
jle
rolb
adc
adc
pop
out
data16
mov
pop
mov
jp
mov
sahf
dec
sub
sub
lds
daa
jmp
push
push
mov
sbb
adc
mov
insl
das
inc
addb
sbb
inc
scas
int3
hlt
mov
aas
cmp
outsb
lahf
data16
mov
inc
shrb
dec
aaa
hlt
ds
jmp
pop
les
jmp
adc
cmpsb
inc
mov
lret
inc
icebp
out
push
pushl
popa
dec
loopne
mov
aaa
outsl
repnz
add
jbe
pop
repz
aas
cmc
sub
ja
stos
cmc
sub
insb
fimuls
pushf
mov
fdivp
inc
xchg
sbb
adc
sbb
test
xor
outsl
loopne
sub
jns
xor
xor
push
or
into
xchg
cmpsl
faddl
repnz
lret
loope
xor
in
scas
add
add
mov
inc
pushl
sub
cmp
adc
add
popa
cli
or
fnstenv
lods
pop
pop
inc
dec
mov
mov
add
cmpsl
mov
orl
fiadds
jns
sub
std
mov
jb
sub
jmp
shlb
hlt
mov
push
dec
mov
insb
sbb
push
xor
mov
adc
pop
aam
punpckhdq
xlat
fidivl
in
popf
xchg
sub
jl
std
sub
cmpsl
cwtl
out
jmp
mov
cltd
and
sbb
mov
ss
fisttps
xor
push
sub
lds
add
sub
int
mov
loopne
xchg
adc
jb
lahf
jle
adc
out
jnp
sbb
add
outsl
aam
out
int
mov
ds
stos
mov
or
pop
nop
ret
xchg
sbb
aaa
aam
popf
stc
addr16
scas
iret
into
cmp
mov
push
fildll
jecxz
lock
fstpl
lcall
pop
and
pop
fimull
test
lods
fisubs
lods
out
cmp
dec
outsb
push
jecxz
inc
dec
iret
outsb
fwait
mov
loop
mov
xor
bnd
cmp
push
push
shrl
push
sub
dec
lea
pop
into
mov
lods
dec
fists
sub
hlt
mov
or
mov
aad
daa
je
push
aas
cld
lods
mull
mov
shll
adc
add
sbb
fwait
dec
ja
or
xchg
pushf
sub
pop
shrb
push
xchg
bound
mov
sub
mov
pop
imul
repnz
mov
mov
push
xorb
push
push
jbe
mov
inc
dec
out
mov
lds
out
cmp
or
push
fs
and
arpl
xor
shlb
sub
cli
mov
mov
lods
out
pop
push
iret
xor
xor
xchg
xchg
mov
shrl
mov
pop
lea
fimull
cmpsb
jbe
push
repz
adcl
push
lock
add
test
aas
std
popa
xlat
push
and
mov
loop
aas
rorb
popa
or
test
mov
imul
mov
mov
sub
bnd
pop
mov
gs
out
repnz
repz
loop
add
lds
xchg
aad
and
orb
fs
rcrl
mov
aas
adc
pop
adc
stos
loope
dec
ret
loop
jge
fldt
rcrb
jg
mov
dec
push
mov
adc
adc
fdivrl
call
movsb
add
cmpsb
push
cmpsl
or
rcrb
sub
sub
jmp
mov
push
out
lcall
pop
mov
pop
roll
hlt
int
imul
arpl
pusha
daa
daa
mov
out
in
in
push
addl
addl
daa
mov
icebp
mov
inc
into
or
add
add
dec
sahf
movsl
frstor
and
pop
add
lret
adc
xor
sub
inc
xor
dec
xor
mov
inc
ret
pop
imul
repz
lds
pop
mov
in
xchg
mov
sar
out
mov
mov
mov
inc
push
inc
mov
movsl
fs
jp
push
ljmp
leave
jle
cli
inc
daa
sub
sahf
cmp
mov
or
in
mov
mov
sbb
jnp
sar
js
or
popa
sahf
xor
push
mov
sbb
add
fs
push
jnp
sbb
sub
add
andb
push
in
popa
xchg
jne
or
xchg
les
mov
dec
lods
xchg
pusha
inc
push
test
sbb
or
push
xchg
push
lock
sti
in
cmp
and
inc
cmp
jb
xchg
or
push
jmp
nop
rorl
sub
dec
scas
cwtl
movsb
loope
mov
jl
imul
dec
incb
sbb
roll
mov
push
mov
mov
xchg
pushf
cs
std
test
lds
or
cmp
push
add
mov
pusha
push
out
sub
bound
decl
addb
icebp
sbb
addb
js
mov
test
fsubp
add
and
jle
cmc
out
pop
dec
sbb
mov
lret
adc
sub
hlt
dec
jge
jno
addb
ret
or
ret
out
shll
test
mov
mov
daa
cmc
pop
les
repz
pushf
mov
push
fidivl
dec
adc
add
in
fidivrl
and
and
cmpsb
adc
and
push
push
lods
jmp
icebp
in
repnz
ljmp
aas
fisubrl
ficompl
jg
jb
mov
repnz
mov
inc
jle
xor
or
inc
mov
sub
ja
mov
xor
or
add
cmp
push
jae
jecxz
xor
stc
movsb
xor
jns
hlt
ja
dec
andl
repnz
jmp
ds
adc
and
dec
stc
add
push
xchg
jl
mov
call
data16
rcrb
loop
pop
sub
push
mov
lock
leave
mov
pop
rol
testl
sub
addr16
rclb
movsl
pushw
ficoms
dec
imul
dec
lods
sub
and
ror
ljmp
inc
jp
iret
jno
xchg
int
out
or
dec
jns
nop
sub
stc
jb
subl
sbb
add
repz
out
testb
imul
jbe
nop
andb
jno
sbb
push
inc
add
pop
mov
xor
lret
pushf
add
into
aaa
gs
int
xor
dec
rcl
in
popf
dec
sub
xchg
and
xor
add
movsb
inc
lret
in
dec
inc
incb
into
out
aaa
push
and
movsl
inc
jg
jl
sbb
jns
stos
sti
inc
inc
jnp
xchg
xchg
add
mov
adc
bound
roll
test
pop
xor
mov
imul
aas
imul
push
outsb
nop
cwtl
jle
hlt
pushf
cmp
arpl
and
arpl
xor
aad
mov
inc
lock
xchg
adc
test
jp
hlt
or
add
pusha
mov
adc
or
and
popf
or
iret
in
mov
xchg
jns
pop
rclb
cmp
xchg
fistl
fs
xor
out
cwtl
push
cmpsb
stos
xor
divl
fdiv
xchg
sbb
jae
xchg
jb
scas
and
xchg
xor
cmpb
sub
inc
dec
loope
rorb
sbb
test
mov
mov
les
fnsave
repnz
push
sbb
xchg
loope
scas
repnz
mov
sahf
xchg
push
stos
out
inc
mov
mov
fs
adc
cs
inc
in
and
lea
or
pop
add
repnz
in
or
in
repz
in
lahf
sti
ficoml
mov
add
scas
addr16
add
and
mov
adc
inc
dec
mov
push
sbb
mov
mov
cmc
leave
push
push
cmpsb
pop
cmpsb
cmp
fs
mov
fwait
inc
and
pusha
sahf
insb
lahf
cmpsl
mov
pop
add
dec
xchg
dec
orl
lods
gs
call
and
mov
cmpsl
mov
lods
xchg
xor
add
fimuls
bound
mov
sub
mov
inc
fsts
fbld
inc
cmp
stos
push
dec
xor
mov
dec
out
out
out
mov
lret
pushf
add
rolb
rclb
dec
ljmp
fcoml
iret
sub
push
fdivp
rclb
sub
mov
mov
push
jmp
popf
push
mov
jno
es
sub
fmuls
dec
fdecstp
test
out
movsb
cli
jle
pop
pop
popf
or
jb
mov
dec
in
or
arpl
or
out
or
pop
pop
es
loop
mov
xchg
pop
arpl
add
sub
repz
xchg
or
or
pop
cwtl
mov
cld
fnstcw
dec
lds
push
dec
dec
bound
pop
dec
in
and
lods
insl
pop
es
cmp
outsl
fsubr
jae
dec
sub
shrb
mov
stc
cmp
pop
xor
imul
mov
aaa
push
sti
add
adc
dec
lret
sbbb
pop
mov
mov
rol
rclb
inc
sti
sbb
push
nop
mov
mov
lea
cmp
lahf
dec
push
pushf
gs
jno
leave
pop
popa
stos
add
push
ss
int3
aas
lock
xchg
cltd
mov
popf
test
adc
fwait
sub
sbb
fwait
rorl
jne
add
add
adc
mov
jne
fs
out
fimuls
fsubl
jp
adc
sbb
incl
jmp
loop
sbb
sub
dec
sbb
js
jmp
scas
xor
dec
out
lods
mov
pop
je
inc
in
les
repz
fists
jo
pop
fimuls
lahf
jb
xor
out
movsb
xchg
jo
leave
outsl
std
push
inc
mov
jecxz,pt
negb
scas
and
jns
cmp
lods
shl
adc
pop
push
cwtl
aaa
aaa
sub
test
pop
inc
push
out
dec
jecxz
inc
rol
push
dec
and
lods
xchg
in
sbb
lock
sub
cltd
xor
lods
and
movsb
int3
cwtl
adc
cmp
adc
sbb
stos
loop
scas
pop
add
fldcw
cli
jl
dec
adc
cmovnp
xchg
push
mov
hlt
inc
mov
out
mov
daa
mov
xchg
clc
mov
inc
test
cmpsl
jb
inc
pop
lcall
iret
lock
les
sti
daa
pop
sbbl
stos
pop
push
push
roll
or
xor
jg
in
mov
inc
test
jmp
movsl
shll
mov
loopne
mov
mov
sti
out
pop
jmp
sbbb
xchg
in
jae
mov
aad
push
fs
sarl
dec
popa
pushf
dec
in
sti
cmp
mov
jae
decb
dec
sub
push
xor
push
cmp
sbb
sub
orb
cmp
shll
fbstp
jmp
jns
inc
pop
std
pop
mov
xor
add
nop
jnp
je
in
mov
out
mov
xor
ret
es
jae
rcrl
fwait
cmpsb
mov
out
jb
dec
mov
repz
jne
hlt
cmp
addr16
sbb
addr16
inc
sbb
ffreep
add
rolb
jl
in
enter
loopne
test
insb
cmpsl
sarb
aas
in
mov
orb
shrb
jo
mov
mov
movsb
mov
push
push
mov
push
fwait
inc
adc
dec
iret
cmp
jle
fdivrl
xlat
add
xchg
push
xor
mov
and
pop
pushf
adc
hlt
mov
cmp
jae
cmp
jle
out
sbb
call
ret
jge
movsl
cmpsb
stos
push
mov
js
sarb
popa
scas
icebp
sbb
jns
inc
mov
fisubl
mov
js
pop
fisubs
and
movsb
or
iret
cmp
les
aam
popa
push
inc
popa
popa
inc
lret
scas
inc
nop
pop
push
inc
jmp
stos
jge
xchg
ds
int
push
push
mov
es
push
les
cmpb
insb
enter
jnp
mov
mov
pop
and
inc
mov
scas
dec
dec
sahf
pop
enter
fsubrp
sbb
or
call
sbb
movsb
pop
or
loopne
cmp
or
and
inc
stos
pop
loop
ss
lods
fcmovb
cmp
lahf
call
fs
pop
test
and
fwait
fs
jge
xor
push
aam
loope
inc
sahf
int3
fidivrl
mov
add
pop
sbb
xchg
inc
and
daa
mov
mov
enter
xchg
das
pop
adc
sub
lret
enter
bound
pop
mov
xchg
scas
or
arpl
aad
imul
cmp
cmpsl
adcl
out
mov
jnp
stos
mov
out
pop
and
add
mov
call
xchg
add
jns
inc
add
push
adc
divl
inc
test
mov
mov
jle
mov
dec
in
ja
fwait
lret
stos
icebp
xchg
icebp
negb
dec
jnp
movlps
and
xchg
jge
pop
pop
cmpl
cmp
aaa
dec
jmp
call
mov
repnz
pop
fcomi
cli
sbb
aas
aad
pop
fbstp
xlat
imull
jmp
xchg
hlt
pushf
push
xor
push
xor
mov
or
push
sbb
sub
pop
addr16
ret
dec
mov
popa
mov
push
test
lea
cs
sarb
or
jle
mov
adc
dec
mov
jb
jnp
adc
iret
fdivrl
fsubs
mov
xchg
push
xorl
xor
xchg
mov
es
push
add
jp
sahf
ljmp
mov
shr
adc
es
jnp
movsb
lahf
cmp
xor
pop
ret
xchg
stos
xchg
and
testl
lods
cltd
jns
or
sub
mov
push
loop
adc
pop
ret
sub
jnp
xchg
cmpl
add
inc
rcll
ss
mov
in
add
mov
imul
shl
adc
or
xor
fwait
cmp
sub
int
test
mov
sub
push
int3
cmc
xchg
pop
fisubrs
in
scas
adc
clc
test
push
lods
xor
dec
shrl
rclb
pop
sahf
cmc
adc
lds
jmp
mov
push
sub
test
jb
cli
mov
xchg
and
call
popa
mov
pop
test
push
push
jbe
mov
push
daa
mov
shll
ret
sub
cmp
inc
insb
cmp
test
dec
data16
xchg
xor
lods
add
call
jno
inc
repnz
jb
xchg
lret
pop
out
adc
lahf
ret
arpl
pop
or
incl
mov
aas
ss
or
outsl
shl
dec
mov
icebp
stos
jo
xor
jbe
test
jae
adc
inc
inc
out
jb
and
jb
aaa
lcall
mov
sub
inc
mov
int3
ret
ja
add
sbb
adcl
mov
xchg
call
mov
xchg
push
jge
in
cmp
adc
insl
push
mov
mov
sub
rep
lahf
sarb
sub
xchg
imul
out
xor
addr16
lahf
fadd
mov
mov
imul
inc
push
xlat
bound
fidivl
mov
inc
lds
push
xchg
mov
dec
jge
ljmp
loop
push
andb
pusha
mov
push
insl
cmpsl
mov
cs
sub
push
idivl
inc
or
jb
cmc
jns
and
xchg
lcall
mov
or
lods
out
imul
fsub
push
pusha
iret
cltd
ja
sahf
jb
popa
mov
xor
ret
lahf
xchg
inc
aas
xchg
dec
movb
mov
mov
xchg
into
js
addr16
popf
icebp
es
add
mov
ds
leave
fimuls
lock
push
or
fisttpl
cwtl
cmp
adc
adc
xchg
repz
cwtl
roll
jle
or
stc
cmp
mov
add
ljmp
cmp
cmp
pop
sub
jns
insl
mov
bound
mov
adc
pop
je
cmp
push
xchg
sub
je
insb
or
mov
addr16
add
or
mov
jno
or
or
mov
sbb
jbe
sub
xor
int3
cmc
ss
cmp
cmpsl
mov
jmp
mov
sbb
mov
hlt
mov
lock
repz
and
sub
mov
dec
or
fistpll
push
or
repnz
insb
sbb
cs
mov
leave
inc
cmp
shlb
push
sbb
sub
adc
cmp
cmpsl
xchg
fcoms
movsl
decb
lods
push
or
clc
push
sbb
xor
push
push
mov
inc
leave
cli
test
cmp
mov
sub
rcr
sbb
lcall
ljmp
and
dec
lcall
in
pop
dec
jbe
adcl
xchg
mov
ret
into
out
cld
pop
dec
push
fwait
adc
dec
icebp
lahf
sbb
add
sbb
frstor
cmpsl
fst
adc
cmp
push
out
mov
fisubrs
int3
repnz
cmpsb
sub
add
mov
and
int3
and
jle
std
daa
fidivrs
cwtl
pusha
adc
ja
adc
cmp
jle
xchg
xor
mov
rcll
pop
data16
jp
adc
sbbl
loop
js
sti
push
popa
add
cmp
mov
imul
aad
bound
jbe
in
add
out
orl
lret
mov
dec
clc
jb
test
or
push
cmp
or
out
mov
call
xchg
inc
fcoml
mov
lock
add
mov
repnz
xchg
push
stos
test
les
test
pusha
dec
xor
jle
cmp
icebp
jmp
int3
fcomp
loope
sub
pushf
cmp
push
insl
mov
movsb
add
cmpsl
mov
mov
test
test
mov
int
daa
dec
inc
test
push
rcr
adc
dec
stos
aaa
loopne
pusha
ss
out
cmp
inc
fistl
aam
sbb
sbb
jp
push
push
jns
cltd
fwait
call
daa
cmp
out
cmpsb
push
cmp
lock
jnp
push
nop
cmpsl
jp
mov
adc
call
not
push
sahf
jg
in
repnz
je
movsl
mov
movsb
cld
test
mov
fildll
in
push
xchg
jp
lret
pop
aam
ds
iret
inc
fiaddl
xchg
in
mov
scas
xchg
mov
dec
inc
cltd
stc
bound
out
sbb
outsb
mov
push
ss
xchg
adc
out
pop
cmpsl
shlb
inc
mov
mov
pop
add
dec
in
push
fisttpll
ja
out
data16
movl
into
jmp
mov
jbe
test
cwtl
subw
inc
push
cmp
lret
and
xor
sbb
push
jg
outsb
nop
mov
jecxz
push
cmc
push
sub
and
jno
xchg
or
push
test
push
ss
push
ss
sarl
inc
in
aam
add
add
lahf
insb
push
sbb
out
mov
mov
sbb
imul
push
and
mov
int3
int3
lock
rol
xchg
cld
ss
pop
stc
fwait
jle
enter
add
popa
imul
mov
and
mov
bound
xchg
ror
mov
dec
fadds
sbb
lods
mov
mov
jno
lea
cwtl
push
mov
mov
pusha
jns
sub
popf
std
sbb
add
lahf
pushf
pop
stc
sub
fsubrs
ret
push
xlat
cwtl
jp
imul
push
xor
into
shll
xchg
iret
insb
inc
loope
sbb
jmp
imul
mov
pop
cmpsb
dec
push
cmp
pop
add
jmp
push
std
imul
pop
sub
fidivrl
fistl
sub
out
or
dec
out
movsb
orl
test
loopne
ja
inc
sub
mov
jns
inc
pop
in
add
and
cwtl
mov
jmp
inc
je
shll
mov
inc
stos
les
mov
mov
mov
dec
popf
lea
xor
insb
or
popf
stos
cmp
clc
mov
and
icebp
mov
inc
mov
mov
pop
in
je
xor
inc
sub
mov
jge
pop
pop
or
fcomps
test
rorb
fcmovu
xor
mov
inc
mov
in
jmp
in
cmp
mov
fnsave
mov
daa
jmp
aas
daa
cld
test
xor
in
call
sbb
loop
mov
notb
lcall
add
jae
push
cmp
hlt
adc
fs
mov
stos
imul
jo
adc
into
mov
sbb
ds
movsl
popf
jg
aad
mov
data16
scas
xor
sbb
mov
add
fdivp
lahf
fcompl
rorb
testb
push
xchg
dec
sub
and
dec
movsl
out
pop
stos
and
rcrb
mov
pop
je
jle
scas
fmulp
dec
mov
add
out
and
inc
add
cld
dec
pop
jo
icebp
xor
lea
jne
subb
rcll
popa
daa
sbb
xchg
hlt
aad
loopne
mov
data16
cmp
cmp
fmuls
push
xchg
jns
sub
add
cmp
test
test
xchg
mov
fsubrs
mov
cmpsb
or
fisubl
jmp
das
push
or
nop
stos
add
scas
or
scas
movsb
movsl
mov
push
fsubp
jl
ljmp
ficoml
sub
mov
pushf
adc
outsb
mov
jecxz
pusha
xchg
repnz
xorb
popa
xor
push
je
mov
pop
and
ficompl
xchg
sahf
wrmsr
sub
shlb
mov
dec
insb
push
stc
loopne
xchg
sub
imul
aam
ret
ljmp
or
out
int
sub
cmc
xor
leave
push
into
xchg
adc
xchg
mov
push
shll
cmp
pop
das
jmp
int
in
add
lcall
cmpxchg
lods
dec
sbb
sbb
adc
xor
jns
sahf
cmp
in
push
cmp
inc
xchg
push
jno
sbbb
or
int
cltd
or
in
pop
inc
fs
or
sbb
add
and
loop
mov
adc
rolb
cmp
mov
jae
jno
jae
fisubrl
pop
lret
sti
add
int3
loop
inc
leave
cli
pop
sbb
int
out
pop
movsl
xlat
daa
mov
mov
adc
dec
in
fbstp
es
or
xor
xor
pop
scas
ljmp
dec
jnp
aas
add
mov
aaa
mov
out
xchg
mov
pushf
pop
pusha
push
mov
mov
cwtl
ja
das
xor
push
sarb
addr16
sub
pop
pop
clc
mov
lock
cmpsb
mov
cld
add
mulb
jecxz
ja
outsb
ss
gs
movsb
push
popa
jg
jg
and
out
pop
xor
pop
mov
sbb
sbb
mov
jno
rcrb
or
push
jbe
mull
mov
jle
mov
pusha
sarl
add
icebp
inc
mov
scas
pop
rcr
sbb
testb
sub
hlt
dec
pop
cmp
dec
sub
mov
pop
gs
lock
mov
andl
jmp
stos
scas
mov
cld
ljmp
lods
loopne
loopne,pt
gs
out
cld
sub
mov
mov
int3
repnz
cmpsl
add
in
inc
sub
movsl
lea
shrb
sbb
push
pop
popa
sti
and
mov
add
outsb
fwait
clc
movsb
in
clc
cmp
shrb
ret
outsb
lret
jne
frstor
insl
adc
repz
aaa
xor
fwait
movsb
xchg
push
xor
cwtl
test
mov
bound
cmpl
out
fiaddl
mov
fwait
inc
xchg
shl
sbb
sbb
push
aam
xlat
aas
mov
push
pushf
out
cmpsb
jb
inc
mov
inc
lock
mov
notb
std
mov
addl
xchg
lahf
popf
stos
adc
imul
cmp
repnz
test
nop
out
adc
aas
imul
push
inc
inc
fisttpll
stos
mov
sbb
lds
mov
cmp
ss
mov
add
mov
icebp
in
sbb
fcoml
gs
or
jmp
cwtl
sbb
es
ret
aam
loopne
aam
popf
sub
dec
sbb
cli
popf
pop
iret
push
jp
repz
sbb
es
test
sahf
sbb
push
out
cwtl
hlt
mov
xor
mov
test
pushf
cld
das
shl
mov
add
lods
cwtl
mov
mov
dec
adc
or
sti
or
rcrl
sahf
pop
andb
sub
add
cmp
mov
scas
js
stos
int3
sub
pushf
lds
ja
add
xor
lret
ret
les
jne
jne
push
sub
cmpsb
pop
lcall
xor
mov
out
inc
fimull
mov
cwtl
mov
es
sahf
xor
lods
sbb
aam
hlt
mov
xchg
andb
shlb
int
sub
loopne
mov
mov
lods
add
fucomi
sbb
addl
push
or
data16
xor
sbb
or
jecxz
push
mov
test
lods
and
push
cmp
or
jnp
adc
mov
mov
push
out
sbb
popa
into
push
sub
jecxz
imul
fdivrs
test
jg
xor
lods
push
mov
out
jge
lods
mov
fiaddl
dec
mov
jne
movsl
rclb
testb
jno
mov
pop
inc
or
push
rcrl
lret
imull
push
rol
push
shll
sbb
sub
mov
jb
ficompl
xchg
xchg
fldl
out
mov
aad
addr16
icebp
jecxz
mov
xchg
sahf
js
mov
cmp
xor
std
bound
ficoml
data16
int
xchg
mov
out
sub
int
pop
leave
ds
test
popa
sub
shll
shl
xor
iret
nop
sub
inc
adc
adc
mov
add
gs
and
dec
ds
push
mov
ss
mov
icebp
out
xchg
call
adc
insb
fs
adc
ja
repnz
push
sbb
pop
or
jb
add
push
cmc
das
sub
fs
sbb
pop
ret
mov
and
mov
ljmp
cmp
les
nop
push
lds
dec
lods
adc
test
push
push
lret
or
and
loope
dec
subl
jp
add
jne
jecxz
sbb
adc
rcrl
pop
fbld
adc
incb
out
push
and
and
xorl
mov
outsb
mov
iret
insb
js
cld
dec
inc
mov
loop
mov
enter
add
outsb
je
push
mov
xchg
jmp
or
or
jnp
ljmp
imul
cmp
or
sbb
gs
pop
xchg
inc
jmp
fwait
sub
xlat
outsb
lods
les
hlt
test
mov
aad
lea
pushf
or
xor
dec
push
icebp
jne
mov
scas
jge
icebp
pushf
lahf
add
cmp
pop
adc
push
in
sbb
mov
js
ljmp
and
add
add
push
lea
bound
inc
jnp
xchg
imul
push
pop
insl
or
inc
sbb
pop
inc
lret
or
sub
repnz
jnp
ret
mov
sbb
jae
dec
jae
jp
xchg
sub
push
jno
xchg
push
jno
in
cmp
lahf
les
out
cmpsb
mov
imul
fists
das
dec
stos
sbbb
shrb
popa
fwait
test
mov
outsb
lahf
shl
inc
aas
out
mov
and
and
push
mov
mov
outsl
pop
push
mov
js
xor
hlt
dec
cs
stos
jg
jle
scas
pop
addr16
or
dec
nop
enter
mov
jb
mov
add
scas
ljmp
cs
mov
cmp
subps
outsb
sbb
repz
jbe
cmp
test
leave
adc
jl
ret
mov
fistpl
and
jp
insl
push
mov
or
cs
mov
lods
fisttps
fisttps
dec
push
adcb
test
jno
inc
or
fisubrl
jp
push
cmp
xchg
sbb
sub
pop
mov
rorb
sahf
push
imul
xchg
enter
cmp
rorb
daa
test
cmp
and
arpl
adc
add
sub
std
adc
adc
pop
hlt
jle
adc
mov
sub
xchg
jns
inc
sub
mov
movsl
add
fdivrp
bound
sbb
cmp
sarb
pop
xchg
int
jbe
add
add
mov
cwtl
iret
out
sub
ja
adc
shlb
mov
ret
int
outsl
push
xor
push
int
leave
mov
lret
nop
add
outsb
xlat
jns
dec
cld
jg
mov
outsl
outsb
ds
pop
loop
fsts
ret
lods
lea
fsts
lock
lcall
mov
adc
out
int3
inc
adc
jnp
jb
mov
push
mov
sub
xchg
sub
xchg
xchg
mov
mov
xchg
mov
push
into
push
inc
js
pop
test
popa
fsubrs
push
pushf
jbe
and
movsl
ss
ret
sbb
lds
aaa
mov
jl
orl
sub
cmpsb
ljmp
daa
sub
lahf
adc
shlb
fcompl
jns
jl
or
aad
dec
cmpsb
xchg
ljmp
outsl
adc
ror
pushl
lea
in
mov
xchg
sbb
outsl
test
cmp
fstps
or
test
scas
add
mov
iret
dec
sbb
sub
xor
xor
pop
hlt
fwait
lds
mov
mov
out
int
aad
das
jl
inc
imul
fadds
push
ret
mov
js
adc
pop
push
fwait
movsl
outsl
push
ret
in
pop
push
dec
leave
cmpsl
pop
cmp
decl
push
test
jo
leave
ja
cmc
cmp
push
call
push
fisubl
cwtl
inc
psubw
sub
push
cmp
adc
cmp
adc
inc
dec
sti
cmp
cmp
cld
push
call
ret
mov
sbb
jl
inc
subl
cmp
jp
mov
xchg
jno
mov
lods
cmpsl
cmpsb
mov
mov
mov
subl
xlat
jno
mov
jmp
xchg
inc
cmp
and
aad
push
enter
je
ret
add
fldl
jle
mov
xor
rolb
pushl
cmp
outsb
into
pushf
cmpl
das
gs
mov
movsb
jecxz
xchg
test
adc
aaa
add
test
incl
push
test
jns
sbb
lds
fisubs
fistl
push
stos
xchg
int3
mov
inc
aaa
pop
cltd
mov
mov
insl
arpl
sub
lcall
nop
and
fnsetpm(287
mov
filds
jbe
adc
iret
movsb
fwait
icebp
adc
jp
fdivs
in
inc
jno
cwtl
call
mov
fists
gs
lret
mov
orb
xorl
neg
xchg
test
xchg
clc
leave
mov
fdivl
mov
insl
lcall
xorb
push
dec
jnp
xor
mov
pop
popa
test
ljmp
inc
push
cld
ret
loop
or
push
adc
aaa
xor
sbbb
rcrl
jmp
mov
mov
les
inc
add
push
fisubs
add
iret
mov
add
popf
dec
outsb
sub
leave
and
out
inc
jnp
dec
inc
fmull
pop
xchg
movl
ljmp
inc
xor
pop
jne
mov
imul
push
lods
mov
pop
daa
mov
insl
rorb
jl
inc
jl
mov
movsl
test
out
out
xchg
pop
pusha
leave
and
jno
in
fs
jnp
jbe
out
sahf
pop
cmp
scas
push
test
push
mov
pop
xchg
push
clc
or
imul
je
cmp
hlt
lcall
in
push
int3
inc
dec
mov
rcrb
or
xor
fiaddl
mov
mov
or
insw
scas
out
int3
cli
inc
outsb
dec
fidivrl
frstor
fcompl
int
add
out
notl
sub
pop
jno,pt
sbb
cmp
stos
pop
out
int
push
stos
rcrl
pop
cmpsl
call
push
mov
push
pop
and
push
push
sbb
or
jmp
jns
pop
or
aas
fs
xchg
xchg
cmp
rclb
push
sub
inc
mov
jge
lcall
iret
xchg
push
shrd
dec
jmp
jmp
adc
data16
sbb
lds
inc
nop
fadd
scas
movsb
leave
movsl
in
lds
push
aas
popa
sbb
mov
lahf
jnp
call
mov
jle
push
ja
in
lea
mov
shrb
push
out
lret
addr16
rclb
xchg
jnp
cmp
loop
daa
pop
jb
add
pop
fnsave
ret
xor
je
sbb
jae
inc
dec
mov
repnz
jge
adc
jge
imul
cmpsb
loopne
sti
ret
push
repnz
push
into
inc
psrlq
add
push
popf
mov
xor
or
xchg
popa
xor
inc
add
sti
rcr
push
daa
jno
xchg
pop
jb
inc
mov
mov
xchg
push
aam
dec
repnz
shl
mov
std
out
ds
xchg
pop
jnp
mov
andl
or
and
adc
insb
cmpsl
mov
xchg
dec
es
and
je
lds
inc
mov
in
data16
outsl
xchg
mov
mov
loope
xchg
ja
int
mov
mov
dec
xor
push
xchg
ss
lock
jne
clc
or
shrl
jb
push
loope
xor
fcomi
loop
addr16
dec
add
test
arpl
nop
movsb
dec
mov
cmp
and
pop
out
jl
fs
clc
add
lds
loopne
add
lods
mov
inc
data16
or
cmc
stc
xchg
test
xchg
cli
or
enter
bnd
xor
dec
adc
push
mov
repnz
test
into
jecxz
mov
xchg
stos
add
ss
sub
cwtl
cs
addr16
mov
hlt
mov
push
les
cmp
mov
arpl
jnp
and
enter
and
add
jl
out
inc
pop
popf
cs
mov
dec
cmp
sbb
sbb
push
mov
jnp
inc
lods
imul
leave
cmc
jp
das
daa
mov
adc
icebp
mov
xchg
lods
sub
mov
addb
sbb
cmp
rcr
sti
cltd
subb
inc
jo
sbb
out
and
ficoms
mov
stos
xchg
and
xor
jge
lock
xchg
dec
xchg
mov
es
jnp
je
insl
and
dec
mov
xchg
fdivs
mov
mov
orl
push
pop
dec
cmp
mov
pop
es
hlt
mov
and
or
adc
fstpt
jo
cmpsb
and
pop
dec
pop
test
pop
mov
mov
fidivrl
add
jge
sbb
insb
push
xor
mov
clc
mov
shlb
nop
test
sub
push
pop
iret
popf
cwtl
mov
sbb
jl
mov
fbld
xchg
mov
out
daa
addr16
outsb
lock
mov
sbb
jns
test
icebp
xor
pop
popa
xchg
in
add
add
xchg
mov
or
fimull
adc
mov
sbb
pop
ds
add
sarb
icebp
and
aam
daa
jl
xor
ss
fsub
pop
add
mov
xor
xchg
int
push
in
or
add
cmpl
inc
mov
lea
xchg
scas
cmpsb
loopne
fildll
pop
rolb
mov
cli
sbb
or
mov
je
sbb
movsl
dec
jbe
fistpll
lock
dec
pushf
stos
sbb
cmp
jb
inc
jecxz
adc
in
or
jecxz
das
not
fimull
and
adc
adc
xchg
or
clc
pop
es
pop
xchg
cmpsl
rolb
cli
aam
aaa
dec
cwtl
jo
imul
mov
mov
and
jmp
push
push
adc
decb
addr16
in
testb
jl
mov
icebp
mov
das
int
cmpsl
or
call
jno
jmp
jle
daa
aas
call
mov
dec
cli
dec
inc
push
or
out
icebp
and
lret
jae
pushf
shlb
sbb
push
lea
cmp
cmp
jne
mov
out
hlt
mov
out
mov
mov
inc
and
mov
stos
mov
adc
and
clc
sti
and
dec
jecxz
dec
insb
mov
bound
sub
mov
pop
lahf
nop
inc
xlat
cmpsl
adcl
inc
add
int
cmp
and
rorl
mov
pop
cmpsl
dec
dec
or
jle
movl
fmuls
ss
hlt
movsl
push
pop
addr16
sti
push
ret
sbb
mov
add
incb
pop
ds
and
sti
sub
imul
arpl
jae
or
adc
test
xlat
shrb
xchg
mov
or
in
inc
cmp
inc
negl
repnz
dec
cmp
call
lods
push
or
sub
sbb
cmp
or
nop
and
cmc
fsub
decl
cmp
mov
les
fildll
outsl
fiadds
aam
jne
push
shlb
pushl
pop
out
arpl
jmp
test
and
leave
sahf
jge
enter
mov
mov
jmp
aas
or
outsb
sahf
in
and
insb
mov
add
jae
js
loope
pcmpgtd
push
aad
fisttpll
sbb
imul
faddl
mov
jmp
inc
test
pop
xchg
pop
movsl
ficoml
dec
adc
inc
cmpsl
ret
push
pusha
xchg
sub
sub
pushf
mov
lcall
inc
subb
mov
mov
sbb
test
mov
stc
popf
sub
in
xchg
test
pop
outsl
dec
xlat
stos
std
aam
outsl
int3
mov
jnp
bswap
outsb
inc
js
mov
fwait
cmc
add
inc
mov
xchg
mov
and
aad
dec
sbb
mov
inc
sbb
div
mov
dec
insb
jnp
sti
mov
imul
outsb
std
in
add
mov
dec
jnp
jmp
test
ljmp
mov
xchg
out
pusha
lret
das
mov
sbb
mov
pop
inc
ds
dec
inc
mov
and
dec
pop
loope
icebp
shr
xor
dec
jne
pop
jne
dec
mov
sarl
sub
or
xor
in
push
sahf
rcrb
je
pop
daa
mov
push
pop
pop
shrl
cli
xor
adc
out
sarl
outsb
xchg
sti
inc
dec
push
push
stc
sub
sub
sub
ljmp
fisttps
push
xor
and
dec
inc
adc
jle
stos
inc
in
sub
aaa
jg
rcr
mov
mov
clc
adc
sbb
xor
mov
and
test
call
adc
cld
pop
and
aaa
fidivs
ret
sbb
xchg
es
mov
xor
out
sbb
orl
cmp
jl
push
mov
xchg
iret
mov
and
jmp
inc
mov
lahf
call
mov
loope
insb
mov
mov
and
sbbl
inc
pop
mov
adc
leave
out
inc
pop
mov
dec
pop
and
popl
loop
addr16
push
ja
mov
aaa
shll
pop
shll
mov
jmp
fisttpl
arpl
sub
inc
lret
and
pushf
and
shl
stos
jmp
push
std
pusha
repz
dec
mov
jl
sbb
insl
mov
dec
mov
push
cmpsb
pop
mov
js
mov
fdivs
jp
mov
repnz
sti
lret
jo
push
outsl
orb
je
lods
test
test
mov
insl
dec
movsb
cmp
cmp
pop
and
adc
push
xor
psubsb
lds
test
lret
jo
mov
or
lahf
sarl
jp
mov
and
in
add
inc
mov
test
mov
xor
jmp
lds
ret
lods
sbb
or
inc
pop
iret
push
mov
push
and
repz
cmp
dec
int
and
adc
loop
daa
mov
mov
orb
mov
js
nop
mov
fwait
mov
int
sbb
pop
push
lock
out
lret
jbe
mov
sbb
fldt
adc
pop
stos
add
bnd
sbb
xchg
mov
pop
add
sbb
inc
gs
jmp
push
cltd
xor
mov
daa
pop
cmc
in
in
imul
es
mov
cs
push
dec
lahf
cmp
cs
les
scas
inc
adc
les
es
testb
jmp
test
les
jl
jb
pop
and
ret
push
mov
fisubrl
cmp
mov
mov
shl
mov
out
jbe
cmp
lods
cmp
mov
inc
jne
popa
jo
lcall
in
gs
or
or
jo
add
push
ja
mov
imul
mov
pop
mov
jl
addl
mull
push
shll
fsubrl
decl
leave
and
jmp
testb
adc
mov
add
loop
pop
les
or
push
pop
pop
mov
out
xchg
xchg
inc
xchg
iret
sbb
neg
push
jmp
push
push
xor
cmp
jecxz
push
pop
push
cld
es
adc
orl
lahf
cmp
add
pop
xchg
jae
sbb
add
xor
mov
dec
shrl
std
pop
mov
push
pop
sbb
xlat
lods
out
jnp
hlt
ss
in
pop
dec
arpl
aaa
lods
sti
jb
jg
mov
dec
lret
or
and
fsubrs
mov
fistl
pushf
sbb
xor
or
add
mov
ret
in
jmp
fldenv
and
in
dec
inc
inc
jae
push
aam
je
xchg
jge
sub
rolb
xor
mov
int3
test
xor
push
mov
mov
push
fsubrs
and
mov
dec
gs
xor
adc
scas
aaa
lds
adc
jnp
jno
or
jecxz
xor
shlb
jle
mov
jge
jge
sub
jnp
xchg
dec
inc
or
mov
mov
lds
xchg
out
je
jb
imul
es
fs
ds
xchg
sbb
movsl
pop
jns
stos
cli
mov
pop
lods
loope
cmp
push
push
andb
mov
jp
sbb
or
push
sub
xchg
xchg
cmpsl
clc
mov
dec
xchg
and
addr16
mov
adc
jl
xchg
test
cmp
xchg
push
dec
sub
les
fs
inc
ss
mov
and
std
lahf
jecxz
or
pop
aaa
das
out
jmp
arpl
pop
xchg
pop
jo
cmp
xchg
xchg
push
shufps
pop
inc
cmpsb
cmpsl
lcall
sbb
sub
lock
frstor
pushf
jo
lods
push
call
stc
lret
mov
mov
dec
out
cmp
lahf
inc
jbe
cld
stos
nop
cmp
addr16
mov
in
sti
xchg
pusha
in
or
sahf
mov
jge
rcll
rol
cli
test
imul
mov
rol
jb
sbb
mov
push
iret
hlt
mov
push
push
push
std
cmc
loopne
jge
push
adc
out
cld
sbb
pop
andb
jo
sub
outsl
aam
icebp
pop
lods
clc
push
movsb
mov
push
test
aad
pop
jle
jecxz
xor
repnz
cs
push
pop
les
xor
mull
inc
cmpsb
in
xchg
push
cmpsl
dec
sub
cmp
pop
mov
and
lea
inc
add
jp
loop
jns
ret
push
pop
jecxz
mov
sub
jns
cmp
sbb
loop
loop
imul
in
jno
mov
push
or
jbe
insl
jb
xor
jnp
stc
xorb
mov
xor
das
movsb
into
into
mov
adc
nop
popf
or
int3
das
test
in
jecxz
dec
pop
pop
fsts
jbe
popa
call
test
push
inc
xor
mov
adc
les
mov
and
movsb
loopne
jns
xlat
mov
cltd
xor
sarb
add
jbe
imul
fisubrl
stos
std
mov
or
jge
lock
mov
push
and
movsb
lret
ficoml
or
inc
sub
jne
movb
aas
popa
icebp
cmp
outsb
pop
jl
dec
aam
out
sub
aaa
lahf
hlt
cmp
mov
xchg
out
jno
dec
fs
cli
push
jbe
in
fcom
push
das
push
mov
push
cmp
ljmp
js
clc
xlat
fs
jnp
adc
enter
jne
mov
or
sbb
out
testl
add
sarl
scas
movsb
cld
sub
loopne
jb
div
push
push
cmc
lods
call
add
maskmovq
mull
popf
into
inc
stc
ret
xchg
es
push
ds
mov
dec
pop
into
mull
push
outsb
mov
out
xchg
arpl
les
test
out
xchg
sti
xchg
je
mov
out
leave
fiaddl
mov
jo
es
pop
and
adc
test
sub
in
mov
jmp
push
mov
mov
pop
daa
pop
sahf
add
stos
pop
push
rdmsr
fisttps
pop
loope
int3
mov
push
xlat
cmp
jae
mov
fisttpll
xchg
in
pop
stos
sbb
dec
test
imul
outsl
push
pushf
subb
push
test
lock
add
mov
cmpsl
insb
mov
mov
lret
push
jbe
mov
xor
xor
mov
es
and
mov
cwtl
icebp
nop
sbb
or
adc
push
fstpt
aaa
xorl
inc
or
and
xchg
push
hlt
testl
sti
push
enter
and
ljmp
ret
dec
fdivl
cmc
mov
push
pusha
mov
loope
loope
push
mov
jne
mulb
sbb
push
adc
aad
cld
mov
dec
add
int3
adc
shlb
js
push
jnp
repnz
bound
imul
push
inc
dec
mov
sbb
cwtl
aaa
mov
xchg
pop
jmp
leave
sbb
jecxz
imul
subb
xchg
adc
push
cs
inc
mov
jae
ss
push
jo
inc
lea
and
push
push
ds
mov
inc
ret
out
hlt
sbb
sbb
jno
and
iret
cmpsb
sbb
sahf
xchg
mov
mov
lods
mov
jno
negb
pop
sbb
ret
or
push
fists
pop
inc
cld
gs
adc
jg
push
mov
add
sarl
test
xchg
pop
test
mov
sbb
pop
xor
and
ret
cwtl
dec
mov
sub
xchg
icebp
ficompl
mov
ja
in
fwait
pop
les
cmpsb
push
add
mov
push
or
fwait
cmp
insb
aaa
add
mov
adc
test
push
std
jg
lea
inc
cmp
mov
in
inc
icebp
test
loop
mov
cwtl
fcomp
aas
dec
lea
inc
pop
xchg
sub
sub
lret
dec
lcall
and
add
sti
inc
mov
pop
outsb
xchg
jbe
mov
popl
sbb
filds
fld
or
inc
scas
push
mov
cmpsl
mov
cwtl
bound
movl
push
test
into
aam
jae
inc
push
mov
scas
cmp
std
sub
adc
jl
pusha
mov
gs
aad
cmpsb
push
inc
xchg
inc
xchg
aam
aas
iret
shl
jbe
into
adc
iret
cltd
push
pop
cmp
sbb
mov
cwtl
aaa
cmp
push
mov
clc
sbb
mov
enter
es
fisttpll
sbb
arpl
inc
pop
js
daa
test
lret
leave
xchg
cmpsb
icebp
dec
mov
inc
sbb
lcall
ficoms
icebp
cld
mov
push
inc
xchg
scas
sahf
cmp
xchg
rcrl
or
test
jp
cmp
ja
inc
mov
ss
cmp
inc
mov
in
push
popf
loope
dec
lods
sbb
jo
sti
sahf
dec
push
pop
jb
cmp
jmp
mov
scas
mov
or
xor
sbb
jae
inc
inc
lahf
rcrb
mov
sbb
jns
sbb
and
inc
and
mov
adc
cmc
add
in
in
fwait
xorl
jne
jo
xchg
jmp
mov
mov
pop
out
jle
aam
mov
jle
shll
jbe
mov
cltd
out
fcom
scas
je
pop
lea
sbb
pop
enter
add
cs
sbb
push
cmp
push
sub
pop
adc
cwtl
xor
xchg
adc
inc
int3
cli
imul
add
movsl
lods
sub
pop
pop
aaa
cmpsb
push
add
cmpsb
push
iret
dec
sub
out
sti
pushf
jne
sahf
mov
xor
fidivs
ret
dec
cmp
lcall
cld
jns
pop
inc
lar
adc
bound
xor
imul
test
pop
std
sbb
out
sub
push
push
mov
clc
clc
popf
add
jge
jo
xchg
and
rcrl
xor
push
push
jbe
shrb
subb
out
cli
jnp
loop
jbe
loope
and
sub
xor
xor
lock
mov
dec
test
repz
sbb
jge
jnp
push
jge
das
movsl
pop
and
cld
out
pop
push
or
mov
push
hlt
loop
mov
inc
jns
psrld
rol
lods
jp
or
das
sti
mov
adc
aaa
or
testl
in
xchg
mov
fdivrp
push
and
rcl
mov
fidivrs
push
sub
cmp
xchg
xlat
push
push
add
jmp
lods
mov
dec
arpl
mov
cld
movsb
fcoms
sub
jle
mov
lods
sti
stos
aam
in
jp
xor
test
pusha
std
mov
pop
and
and
xor
test
push
shlb
stc
push
hlt
gs
scas
or
inc
arpl
cmp
cmpb
inc
mov
or
adc
in
push
push
mov
jo
popa
je
push
pop
repnz
sarl
sbb
not
cld
cwtl
sbb
mov
pop
out
push
ja
sbbb
imul
int3
sbb
mov
stos
mov
sbb
push
sar
pop
nop
mov
jp
xchg
cmpsl
adc
cmp
rcr
stos
js
cmp
and
jmp
gs
iret
cltd
sbb
fisttpll
mov
pop
sub
popf
inc
addl
and
leave
fwait
aad
imul
sub
xor
mov
rclb
sub
mov
or
adc
in
sti
cwtl
call
popa
push
mov
and
pop
ja
mov
or
rolb
xor
outsl
scas
mov
push
xchg
ficoml
inc
ss
test
mov
js
sbb
stos
cmp
ljmp
sub
les
mov
sub
jmp
push
stos
sbb
insl
popf
test
xor
movntq
fistpl
xchg
sbb
dec
fucompp
pop
shl
adc
sbb
ret
andl
sub
adc
idivl
testl
pop
iret
rcrl
or
fmul
jno
sarl
lods
jo
cmpb
cmp
jmp
stos
outsl
sti
and
or
jns
jmp
repnz
mov
arpl
lods
mov
enter
dec
lods
andl
pop
ljmp
hlt
sbb
xchg
mov
pop
test
fucomip
cmc
fstps
into
insl
test
push
arpl
aaa
rcll
sub
ficoml
sub
xchg
outsl
pusha
fdivrs
movsb
pop
pushf
movsl
or
cmc
xchg
or
dec
mov
sub
das
fldcw
test
aas
ret
in
lahf
loopne
test
pop
mov
fwait
xchg
lret
cmp
inc
inc
popf
clc
jl
jl
mov
fiaddl
xchg
imul
mov
cmp
insl
ja
popf
xor
aad
rcrl
fnsave
call
mov
xchg
in
push
mov
dec
nop
dec
out
into
ret
dec
inc
and
mov
orb
ds
ret
cs
popf
mov
add
cmpsb
push
gs
cwtl
add
or
mov
push
sub
dec
test
outsl
xlat
or
xor
add
sahf
in
lods
bound
dec
xchg
xchg
test
inc
jbe
add
cmp
das
int3
stc
cmp
je
outsl
add
xchg
xchg
jnp
mov
lods
jo
mov
cli
push
int3
mov
jmp
scas
in
pop
jp
inc
sti
mov
jbe
jae
orl
dec
mov
cmp
enter
and
test
xor
std
ljmp
dec
xor
outsb
adc
and
mov
popl
addl
aas
pop
cmpsl
jp
fimuls
xor
pushf
pop
push
fdivrs
mov
outsl
les
add
lea
test
cs
xor
out
cmp
and
mov
cmc
and
stc
sub
mov
jle
push
jb
outsl
xchg
fdivrs
ret
ret
mov
in
imul
sbb
scas
jmp
std
loopne
mov
push
ss
out
sub
push
rep
mov
dec
daa
pop
jb
std
popa
sub
nop
outsl
fdiv
or
lret
popf
sbbb
mov
dec
sahf
add
aam
pusha
adc
mov
lcall
adc
out
xchg
ror
and
ljmp
jns
scas
or
push
ss
push
imul
sub
xor
sbb
adc
dec
dec
mov
jle
sbb
lods
inc
sbb
xor
in
xchg
rolb
outsb
mov
sbb
xor
sbb
lret
imul
mov
fistl
sub
jp
insl
lock
jle
jb
dec
add
cmp
or
leave
push
mov
decb
enter
clc
aam
pop
mov
push
xor
cmp
in
mov
lahf
or
push
pop
fcompl
sub
bound
dec
aad
shlb
or
sbb
stos
jno
ds
add
es
xchg
lahf
js
movsb
call
xor
add
inc
dec
jns
push
ljmp
add
pushf
out
lock
cld
sub
sbbb
cld
incb
test
sbb
aam
aad
mov
aaa
imul
pop
sbb
xor
cmpl
jmp
lods
cmp
cmp
adc
and
xchg
cld
jb
push
ss
repz
sbb
out
outsl
adc
ret
pop
jp
jno
or
mov
and
shlb
xor
je
decl
add
mov
sbb
mov
bound
jmp
cli
imul
shll
push
in
sbb
shll
cwtl
bound
and
sar
sub
xchg
fwait
imul
fildll
push
clc
xor
dec
loopne
negl
or
ds
test
aaa
mov
xchg
cli
cmpsl
mov
sbb
stos
sbb
adc
aad
lcall
add
insb
adc
jg
push
in
sbb
and
ja
dec
jo
sbb
cmp
or
fisubl
push
jbe
sub
outsl
cmpsl
lret
and
ja
and
and
pop
xchg
stos
xchg
mov
lcall
mov
cmp
stos
daa
int3
sbb
add
sbb
push
lods
mov
lock
cltd
shll
mov
negl
pop
mov
shlb
push
in
jo
pop
cmpsl
push
aam
xor
outsb
xchg
addb
mov
stc
cmp
lods
mov
mov
mov
adc
stos
pop
sub
ret
cli
in
and
push
or
lock
push
cmp
add
imul
adc
and
je
pop
jecxz
push
pop
data16
dec
push
xor
mov
or
sbb
int3
fcompl
bound
and
cmc
cmpl
adc
bound
xor
sbb
push
adcl
mov
addb
cmp
testl
testl
in
mov
into
rcll
and
sub
pop
jb
mov
orl
mov
jle
bound
jbe
push
sub
lcall
pop
mov
lea
xchg
sbb
aaa
es
addr16
push
mov
fwait
imul
pushf
loopne
stos
loop
mov
inc
into
dec
enter
sbb
jl
pop
je
sahf
or
icebp
cmpsl
xor
pop
jbe
fisttps
shll
cmp
add
lret
or
cmp
lret
mov
out
arpl
mov
xor
subl
cli
outsb
jecxz
xorb
fstpl
mov
push
and
aas
daa
dec
or
insl
mov
sub
adc
faddl
and
fwait
pop
cmc
inc
loopne
adc
mov
cmpb
jno
in
outsb
mov
sub
ds
inc
dec
pop
sub
adc
lret
cmp
jl
in
xchg
inc
sbb
mul
test
dec
and
iret
movsb
xchg
insb
pop
sub
and
mov
fmull
adc
dec
mov
nop
aad
xor
lcall
sbb
nop
testl
data16
and
pushf
sub
or
out
sbb
pop
mov
sub
cli
imulb
pop
clc
sbb
inc
xchg
es
pop
inc
outsb
ds
inc
loopne
int
leave
xchg
test
or
inc
push
lds
pop
push
pop
test
pop
xorb
add
std
rclb
insl
ja
je
jp
fucom
fdivs
jbe
ror
ja
in
inc
cltd
jo
xchg
rol
add
inc
and
call
dec
push
inc
fildl
push
dec
jno
outsb
xchg
pushf
sbb
lock
xor
push
mov
stos
insl
mov
xlat
fisubrs
xchg
sbb
popf
pop
insl
mov
pop
lcall
mov
mov
jae
push
fs
call
orb
mov
js
add
into
dec
xchg
in
clc
xor
mov
fcomps
popl
mov
jo
mov
aam
stc
test
sbb
cmpb
mov
push
cmp
and
test
ficoms
and
jae
pop
mov
ja
sbb
jmp
cmc
sub
xor
les
push
scas
mov
lea
push
cld
lock
shrb
pushf
nop
js
pop
ret
xlat
cmc
xchg
or
mov
in
nop
ljmp
xor
and
xchg
and
jp
out
popa
add
push
loope
cmp
add
mov
or
dec
arpl
push
fdivs
std
add
incb
sub
sbb
xchg
ret
int3
push
adc
cmp
out
inc
push
push
xchg
rol
shrb
daa
in
into
jmp
dec
iret
cmp
xchg
push
sbb
mov
dec
aaa
ljmp
fwait
cld
dec
pushf
adc
cmc
xchg
clc
pop
test
xor
xor
jno
cmp
repnz
jb
fmuls
je
addr16
push
dec
rcrl
jbe
mov
push
dec
ret
ja
mov
pop
rcrl
mov
imul
jl
mov
inc
jl
push
aas
stc
jae
jmp
mov
cmp
lret
stos
add
xlat
cmpsb
push
inc
cmp
leave
pop
push
aad
sub
jmp
ret
lock
cmp
sbb
push
xchg
cmpsb
mov
pop
pop
inc
jbe
push
dec
js
or
mov
data16
cmc
mov
addb
fists
aam
mov
cltd
sub
add
and
movsl
and
add
das
mov
xor
lret
sub
sbb
adc
arpl
bound
loop
addr16
notl
jne
inc
ficompl
push
dec
sub
loopne
cmp
push
xor
jae
push
mov
iret
xchg
cltd
cs
lahf
dec
xor
or
fisttpll
lahf
push
sbb
pop
jb
cmp
jae
subb
push
lcall
arpl
add
adc
lods
mov
daa
sbb
or
jb
jmp
xchg
or
push
jne
cmp
cmp
filds
xchg
push
in
out
incb
sarb
sub
addr16
push
ss
jl
xlat
xor
sub
dec
sbb
inc
bound
or
cmpb
andl
hlt
rclb
add
xchg
test
push
push
sbb
outsl
repz
xchg
add
loope
inc
dec
loope
push
fs
push
pop
push
push
xor
notb
out
and
lret
out
lcall
ljmp
fwait
pop
movsl
inc
jle
in
mov
adc
push
or
cmp
mov
or
mov
sbb
or
inc
push
pusha
sub
xchg
sbb
hlt
insl
or
jb
mov
ffreep
xorl
xchg
and
jno
cmp
aad
cs
sub
out
in
mov
pop
cmc
ret
jbe
imul
sub
testb
fcmove
rcrl
lock
mov
push
setle
dec
pop
ret
nop
mov
imul
mulb
jmp
int3
ret
or
adc
sbbb
loop
and
aad
or
inc
mov
pop
push
push
add
fisubrl
in
xor
aam
addr16
outsb
sahf
scas
jmp
std
pop
add
jnp
sbb
les
adc
ja
cli
lods
imul
in
cltd
in
jae
dec
xor
inc
decb
xorb
idivb
dec
xor
jl
push
jl
test
pop
mov
sub
push
pop
incl
mov
xchg
inc
cmp
dec
mov
adc
enter
lret
cmpsl
jle
jnp
in
aad
in
std
jecxz
jp
adc
addr16
popa
push
mov
cmpsb
sbb
out
xlat
sub
ja
pusha
ret
jo
cmp
scas
inc
dec
sub
and
mov
mov
mov
or
add
jl
mov
daa
andb
push
push
add
adc
adc
gs
cmp
es
ja
jne
prefetch
scas
xchg
sahf
xlat
mov
mov
jmp
inc
incb
or
xchg
cmc
xor
clc
push
dec
cmp
int3
lods
add
ljmp
fdivl
lahf
popa
bound
insb
ss
nop
mov
lret
leave
in
rcrl
into
fnstsw
nop
inc
imul
js,pn
push
leave
in
inc
enter
cmp
ficompl
xchg
xor
imul
inc
cmp
dec
adc
mov
and
xor
push
js
dec
fsubl
sbb
cld
pop
inc
cmp
arpl
ret
push
add
cmp
xchg
dec
mov
outsl
icebp
mov
cmp
inc
lahf
push
loope
fisubrl
pop
cld
stos
data16
sub
cmpb
dec
and
pop
cmpsb
popa
xchg
xchg
dec
movsl
pop
sbb
or
jne
mov
add
outsl
cmp
shl
push
outsb
xor
pop
mov
fadds
mov
xchg
sub
jb
roll
ja
lods
cmp
ds
add
int3
outsl
aaa
shrb
movsb
or
insb
imul
pop
xchg
rcrl
ficompl
xchg
add
sub
div
dec
xchg
jp
imul
jp
or
cltd
jo
mov
rorl
lods
pop
loope
dec
add
xchg
fistpl
fcmovu
and
and
xchg
and
cmp
out
ljmp
sub
dec
mov
mov
test
xlat
iret
mov
mov
add
arpl
insb
xchg
inc
jle
mov
add
testl
xor
jmp
iret
mov
or
jg
leave
push
cmp
xchg
rcll
mov
adc
push
test
jmp
out
mov
mov
and
push
push
xchg
sti
mov
ja
pop
mov
fildll
fs
fdivrl
into
inc
sarb
loop
movsb
add
lds
inc
cmp
daa
sbbl
adc
push
push
imul
jno
xchg
jns
push
dec
xchg
imul
movsl
jmp
fidivrl
sysexit
aad
lods
mov
cmp
int3
ret
sbb
mov
adc
comiss
dec
sub
das
lea
cmp
cmp
xor
sahf
push
push
pop
in
xchg
fcomps
daa
xchg
sbb
push
loop
out
mov
test
dec
dec
fistl
out
xchg
pop
rcrl
repz
mov
faddl
hlt
mov
jp
sub
or
sbb
or
jmp
jge
repnz
dec
mov
daa
fcmovne
sbb
mov
push
lcall
hlt
sub
mov
aad
cmp
and
pop
fcoml
mov
scas
pop
aad
lahf
daa
out
push
pusha
xor
addr16
sub
xor
xchg
xor
mov
mov
setns
pop
repnz
add
jecxz
movsb
bound
dec
or
pop
xchg
in
shll
sahf
cmp
insl
aas
sbb
fistpl
xchg
je
dec
sub
adc
fstps
popa
fs
and
lret
lcall
inc
add
lcall
rorl
mov
mov
into
div
ss
insb
mov
and
outsl
sub
mov
pusha
adc
roll
cmpsb
dec
or
and
fnstsw
jg
rcl
and
arpl
dec
sub
sub
adc
outsb
int3
xchg
inc
data16
mov
mov
cmpsb
xor
in
dec
gs
jae
clc
shrl
push
dec
out
cs
pushf
sub
inc
mov
ljmp
je
ret
lods
iret
mov
stos
lock
mov
dec
xor
jns
scas
aaa
xchg
pop
push
xchg
xchg
scas
xlat
popa
inc
idiv
mov
ret
outsb
mov
repz
ss
xchg
dec
and
inc
sti
orb
arpl
pusha
in
xchg
enter
fdivs
jle
xchg
cmp
jno
ror
bound
add
dec
jne
ljmp
loope
or
fisubrs
pop
ljmp
ja
mov
sbb
push
xor
js
mov
mov
pop
and
test
inc
pushf
hlt
test
sbb
cmp
push
das
sub
xchg
adc
roll
pusha
es
pop
out
or
std
test
cmc
arpl
dec
lret
ss
or
int
inc
jns
or
rclb
out
fcmovb
inc
sahf
imul
mov
int3
lret
ljmp
push
xchg
pop
dec
pop
fstpl
popf
lods
dec
addr16
aad
adc
pop
cmpb
mov
negb
cmp
das
inc
lcall
cmpsb
js
and
mov
mov
leave
cmp
xchg
es
fs
xor
mov
add
jmp
pop
insl
faddl
ffreep
ja
push
js
cmpsl
aaa
and
lret
pop
inc
xchg
mov
fs
mov
pop
out
aaa
jl
or
pop
push
sub
lods
popa
sbb
push
in
aad
mov
and
pop
int3
test
arpl
push
jo
inc
mov
clc
or
std
cmp
xor
sub
push
or
dec
sbbl
fcomps
ss
pop
xchg
mov
dec
imul
loop
movsl
pop
lods
or
in
inc
aam
stc
popa
sbb
gs
fiaddl
xor
clc
in
inc
xchg
cmp
xchg
ret
jmp
sahf
add
or
movsl
loopne
test
sahf
add
lea
dec
jnp
std
bound
mov
xchg
gs
inc
neg
adc
xor
xor
sbb
sub
leave
fistps
xor
wbinvd
ret
push
jno
mov
addb
dec
inc
mov
fmul
or
inc
bound
xchg
aam
inc
adc
xchg
repnz
inc
or
xor
mov
jo
mov
sub
push
inc
outsb
cmpb
xchg
and
and
mov
int
jmp
mov
stc
jmp
add
dec
xor
insb
out
testl
xor
rcll
divl
fnstsw
leave
std
pop
insl
add
outsb
outsb
lret
pushf
dec
test
mov
mov
outsl
xor
cmp
nop
cmp
mov
push
rcrl
ljmp
sarb
cmp
adc
add
pop
arpl
jmp
push
mov
mov
dec
add
into
add
ljmp
jp
aam
imul
jb
push
incb
dec
aad
adc
xlat
mulb
call
inc
in
jo
and
push
push
pop
outsl
dec
ret
gs
sub
xchg
aad
cwtl
aas
or
addb
jae
sahf
pop
cmp
call
push
push
ja
addr16
jae
in
cli
push
les
ror
add
js
shll
mov
mov
ret
out
adc
mov
add
ds
mov
repnz
lret
cmpsb
ror
test
flds
adc
jne
jne
mov
mov
jl
inc
push
les
jmp
adc
repz
int3
adc
mov
mov
cs
cmp
std
or
fdivrs
mov
xorl
repz
push
mov
push
and
ret
sub
gs
test
iret
popa
fisubrs
fisttpl
push
sbb
xchg
nop
inc
mov
sbb
ret
lahf
jl
add
sahf
adc
cmpsb
mov
sbb
push
push
xlat
test
imul
dec
dec
mov
sub
xor
out
repz
pushf
and
adc
jge
jp
loop
and
mov
les
dec
or
hlt
lret
loopne
mov
mov
push
sahf
test
push
mov
rcl
mov
mov
pop
mov
mov
js
dec
icebp
mov
and
push
test
inc
out
sub
mov
push
dec
fsts
subb
int3
mov
and
mov
cld
cwtl
or
push
call
ljmp
sub
pushf
arpl
mov
adcl
mov
arpl
mov
adc
pushf
jmp
int3
xchg
in
push
add
cmp
xlat
or
dec
fsubrl
xor
nop
mov
fildl
sti
dec
inc
mov
mov
movsl
movsl
or
jl
mov
inc
in
mov
idivl
adc
xchg
mov
loop
dec
xor
mov
pop
adc
jnp
xor
in
jle
insb
sub
dec
mov
cmpsl
mov
cltd
rcl
jmp
jmp
or
inc
jecxz
ret
jecxz
jmp
adc
out
push
sub
and
pop
jge
fisubrl
cmc
daa
mov
xchg
shrl
add
xor
mov
adc
scas
je
mov
sub
dec
inc
add
jecxz
xchg
test
push
adc
xchg
jl
sbb
pop
js,pt
or
push
xor
sbb
xchg
test
sti
add
test
pushf
sti
inc
cld
cwtl
les
enter
mov
sub
hlt
mov
ljmp
sti
push
mov
xchg
test
loope
sbbb
jno
scas
push
call
sub
cmc
bndstx
pop
shrl
jo
jmp
xor
cmp
hlt
push
lock
std
jbe
sbb
and
adc
xchg
loopne
xchg
in
add
push
pop
or
lahf
pop
cmp
fs
and
xchg
stc
dec
push
pop
testl
sub
rcrl
addr16
negl
ljmp
ss
popf
inc
cs
test
and
fs
decl
lock
in
pop
or
mov
les
and
xor
out
xor
mov
pop
scas
jecxz
adc
adc
inc
xor
or
rol
lock
hlt
subl
xchg
add
xor
fcoms
xor
xor
stos
dec
flds
jae
popf
lods
mov
lahf
xor
arpl
hlt
mov
jmp
sub
inc
testb
jbe
dec
push
fdivrp
add
repnz
ja
xchg
push
in
fs
test
insb
imul
or
sbb
xchg
es
es
xchg
cld
jl
cmp
clc
out
dec
mov
ljmp
jmp
testb
pusha
dec
mov
int
and
sub
ret
mov
lret
loopne
mov
aaa
inc
inc
repz
fsubr
shr
mov
xchg
dec
pop
outsl
mov
sahf
mov
adc
ficompl
adcb
loope
push
andb
shl
push
xchg
sbb
fcompl
sbb
push
jne
cmp
and
mov
aam
or
dec
out
mov
fsubs
movsl
add
stos
add
push
adc
lds
lret
dec
sub
and
or
mov
popf
mov
dec
xchg
lcall
sbb
idivl
sbb
dec
cmpsl
jmp
sub
mov
dec
stc
adc
imul
iret
mov
dec
iret
and
cmp
and
xchg
push
cmp
and
sbb
movsb
imul
sub
xor
pop
xor
lods
sbb
add
mov
cmpsl
add
xchg
add
ret
and
repz
idivb
sbb
or
push
jb
cli
out
push
sbb
push
mov
es
jns
mov
cmp
pop
mov
cld
int3
insb
mov
gs
bound
out
pop
lock
xor
mov
mov
cmc
adc
dec
stos
jo
xor
adc
mov
mov
mov
sub
mov
push
dec
inc
popf
fbstp
pop
ss
mov
lret
dec
sub
aad
add
add
jns
scas
sub
dec
or
rcl
mov
test
push
daa
mov
adc
imul
gs
imul
pop
clc
scas
jle
incl
mov
add
shll
inc
outsb
mov
out
xchg
addr16
dec
out
adc
and
mov
out
push
loope
or
fbstp
jmp
test
repnz
cld
add
sub
sbb
ret
das
ficoml
jp
rcl
push
mov
enter
int
fists
ss
popf
loopne
sbb
std
cld
mov
test
jbe
cmpsb
sbb
adc
dec
xchg
and
jns
fists
sahf
push
fcoms
add
test
sbb
sbb
ljmp
imul
mov
inc
imul
ds
popa
and
aas
into
popf
fldt
cmp
xchg
jecxz
dec
adc
int3
es
pop
call
cs
jl
in
cmpsb
pop
push
das
cs
jmp
out
push
aaa
pop
movsb
and
xor
cmp
sbb
inc
add
mov
scas
jge
stos
icebp
test
mov
jecxz
push
pusha
cmp
popf
icebp
cli
adc
addl
push
cmp
fs
das
dec
sub
mov
add
xchg
imul
push
xchg
add
sub
and
data16
cwtl
adc
fsubs
inc
jbe
xor
mov
imul
dec
sub
test
xchg
or
pop
in
sbb
shlb
cmp
fcoml
adc
faddl
mov
cmp
mov
fldt
out
lods
mov
dec
arpl
jl
push
inc
xchg
lods
loop
xor
dec
jp
cmpl
nopl
adc
add
mov
shl
jnp
ds
frstor
add
jg
cmp
int
sbb
daa
lods
stos
cmp
dec
cmp
mov
cld
jmp
mov
inc
pop
sbb
jne
dec
add
jge
dec
aaa
adc
lods
mov
xchg
push
insl
mov
add
mov
stc
sub
insl
jp
dec
stos
or
inc
jp
fbld
push
pop
inc
cwtl
in
jno
scas
adc
push
push
and
loop
sbb
mov
add
sbb
add
fstpl
xchg
scas
adc
lea
mov
cmp
popa
stos
add
xchg
mov
push
aas
sbb
fsubr
repnz
push
test
jnp
mov
push
pop
cltd
pop
mov
decb
test
sbb
sbb
popa
ljmp
outsb
push
incl
out
repnz
and
mov
xor
dec
mov
es
lea
lods
popf
and
push
inc
inc
push
movsb
jecxz
jl
int3
or
mov
xor
mov
cmp
lock
adc
sbbl
popf
movl
pop
fstpt
xchg
test
movsl
hlt
ret
push
mov
cmp
xor
jns
xchg
int
dec
js
sti
jno
sbb
movsb
movl
cmp
hlt
sub
movb
and
sarl
pop
push
fiadds
bound
mov
dec
es
xor
adc
add
aam
scas
pop
data16
iret
jge
sahf
mov
insb
push
movb
sbb
pop
lods
xchg
sbb
jae
fisubrl
cmp
mov
jmp
sub
mov
mov
shrb
ljmp
xor
fldpi
lea
les
pop
cmp
sbb
imul
shr
dec
arpl
test
push
stc
lcall
inc
mov
push
push
js
into
mov
ja
pusha
push
pop
nop
mov
pop
mov
icebp
mov
jno
out
cmpb
daa
mul
push
or
adc
fs
movsl
cmp
shll
xor
pusha
lods
not
bound
inc
inc
pop
out
fcmovne
adc
sahf
das
test
das
jg
out
es
mov
mov
ss
cmp
xchg
ljmp
mov
js
and
jecxz
cmp
in
into
movsl
fisttpll
sub
mov
mov
cwtl
fwait
int3
les
outsb
in
jne
bound
jns
cmpsl
insb
push
or
add
inc
mov
or
add
mov
sarl
sub
pop
sub
fsubr
mov
sbb
mov
xchg
mov
iret
jmp
xlat
or
fdivrl
jg
jne
sbb
div
adc
icebp
mov
jo
and
mov
lcall
je
and
pusha
inc
xchg
scas
rorb
stc
jns
mov
sbb
ljmp
mov
inc
and
mov
cmp
mov
mov
mov
inc
dec
pushf
or
inc
fdivrs
test
ljmp
dec
out
cmp
repnz
repnz
imul
rcrb
fists
fsubrs
xchg
mov
cmp
add
jge
mov
dec
or
mov
daa
mov
icebp
lods
inc
add
dec
mov
rcll
jb
enter
mov
les
out
test
daa
push
outsb
sbb
push
sahf
arpl
pop
pop
aas
push
xor
outsb
outsb
sub
xchg
aaa
cs
sbb
in
sbb
inc
int3
ds
test
mov
loopne
loope
and
lret
xchg
mov
leave
out
and
jl
cwtl
in
in
cwtl
or
push
aam
sbb
mov
cmp
call
bound
daa
in
pop
fidivl
add
loope
xchg
cmp
or
sbb
and
inc
into
divb
push
imul
pushf
pop
in
mov
push
lcall
and
lea
xor
sbb
sub
mov
adc
daa
int
aad
inc
mov
std
jp
pop
inc
jp
fwait
je
jb
stos
cmpsl
jns
scas
outsl
clc
push
push
push
sbb
push
cld
mov
shlb
out
mov
add
aas
fsubrs
jne,pn
cmpsl
gs
inc
jle
fisubl
lods
or
xchg
std
sbb
daa
call
call
int
pop
fldcw
dec
sti
inc
adc
cmp
rclb
insb
xchg
or
mov
clc
stos
mov
shrb
out
adc
mov
ljmp
fnstcw
jl
xchg
cmp
sbb
lds
xorb
dec
idivl
push
xor
jne
xor
add
mov
pop
pop
jle
mov
dec
mov
cmpl
adc
popa
mov
inc
jbe
mulb
sub
dec
jno
cmp
mov
ljmp
pop
push
in
out
dec
lock
sub
mov
subb
in
shr
xchg
insb
in
pop
mov
fisttpll
push
jmp
outsl
push
cwtl
out
xchg
leave
cmovnp
mov
fwait
dec
repnz
or
jne
aad
in
and
dec
mov
mov
ljmp
push
test
lods
in
fstl
xchg
popa
cmp
leave
push
mov
scas
mov
sub
jecxz
out
movsb
mov
inc
sti
xchg
mov
mov
push
imul
add
mov
cmpsl
pop
add
jmp
js
push
lods
inc
xor
or
arpl
push
popa
pushl
test
push
notl
nop
jo
lea
mov
sbb
dec
push
inc
data16
bound
orb
shl
cltd
popf
adc
dec
aaa
ret
mov
movsb
add
mov
xor
jbe
inc
push
cmc
ds
fbstp
stos
adc
imul
rcrb
lods
jae
or
shrb
jb
mov
mov
movups
fldt
push
enter
pop
xorl
ror
imul
jg
sub
call
cmp
cmpsb
inc
popa
popf
mov
adc
mov
inc
stc
dec
adc
sub
das
jmp
cmovo
jnp
push
dec
pusha
adc
add
dec
ja
outsb
xchg
lahf
shlb
es
jns
lock
popf
push
push
test
test
pop
push
dec
pop
xchg
xorl
and
mov
push
in
int3
es
push
sbbl
sub
mov
pop
es
addl
xchg
lret
dec
cltd
sbb
xchg
out
xchg
xor
xchg
insb
lcall
orl
xchg
xorl
rol
pop
leave
cmp
out
mov
insb
lds
inc
jg
jle
mov
repz
mov
movsl
aaa
repnz
stc
mov
insb
mov
aam
add
movsl
call
push
push
pop
bound
clc
fldenv
repz
sub
add
insb
out
pop
adc
in
mov
pop
test
arpl
lahf
push
ja
push
or
push
int
inc
cmpsb
orl
rcrl
push
xchg
jbe
and
dec
gs
mov
gs
out
idivl
mov
push
or
cmp
mov
sbb
mov
mov
mov
test
cltd
loope
insb
movsl
xor
xchg
lock
pushf
mov
stos
jl
fbstp
movl
xchg
xor
daa
xchg
sbb
xchg
popf
fnstsw
popa
pop
loopne
fildll
lahf
pop
mov
xchg
ds
mov
push
and
fs
adc
fadds
sub
sbb
mov
xchg
push
sbb
push
xor
inc
jp
and
mov
adc
mov
lods
cmovb
ljmp
adc
jb
decb
dec
mov
stos
xchg
mov
sbbl
push
lret
fmuls
xlat
sbb
ret
push
add
mov
scas
outsl
aas
adc
test
ljmp
mov
pop
imul
xchg
inc
xlat
sub
dec
xor
dec
sarb
inc
aas
mov
pop
mov
add
xchg
rorb
pop
mov
repz
ss
cmp
repnz
xchg
and
push
add
pop
stos
mov
mov
inc
aaa
in
mov
or
dec
mov
popf
aad
lahf
ffree
mov
jle
add
ds
xor
xlat
jbe
dec
sub
lods
aad
in
jno
rcll
jmp
mov
stos
push
out
mov
mov
xor
std
repz
cs
clc
out
push
in
push
push
popf
inc
pusha
xchg
push
lret
daa
jge
dec
jle
mov
sub
js
xor
lods
loope
push
add
fidivs
pusha
orl
jge
xor
cmp
ret
pusha
inc
iret
cmp
xchg
movsl
enter
fwait
jmp
or
testb
pop
loop
fs
lcall
stc
push
loop
mov
cmpb
dec
popa
in
xchg
adc
jns
cmpsb
mov
mov
shlb
and
mov
xchg
or
lret
xchg
sarl
push
sub
les
mov
mov
push
mov
sub
ja
or
sbb
adc
mov
fsubrs
and
notb
fcmovnu
adc
push
add
xchg
gs
hlt
push
adc
cmp
and
int3
lea
inc
sbb
inc
je
xor
dec
xchg
pop
mov
hlt
pop
and
clc
pushf
mov
stos
out
cltd
push
push
imul
or
inc
sub
sbb
clc
jae
std
sarl
daa
mov
jo
std
sbb
stos
shll
sbb
imul
int3
enter
movsl
addb
stos
ja
mov
lea
add
daa
out
ss
nop
mov
mov
aad
pop
aas
pop
pop
xchg
hlt
xlat
arpl
jg
jg
popa
cmc
pop
or
dec
sti
fistps
ljmp
movsl
push
out
mov
add
hlt
sub
adc
mov
mov
and
mov
mov
dec
add
out
mov
pop
fs
in
hlt
int
cld
pusha
sbb
nop
sbb
test
ljmp
sbb
xchg
pop
cmpsb
cmpsb
fidivrl
pop
xchg
insb
adcb
mov
roll
setg
xchg
sbb
je
lds
pop
pop
movsb
mov
pop
into
xor
ljmp
pop
xchg
sub
data16
push
das
cmp
outsb
sbb
dec
scas
arpl
icebp
pop
aas
pop
push
dec
xchg
aas
je
stos
cmp
in
pop
mov
xchg
popa
mov
adc
sub
pop
push
xor
xchg
dec
fwait
arpl
scas
push
pop
data16
imul
mov
arpl
mov
in
adc
push
jbe
dec
mov
sbbb
mov
jns
imul
rcr
mov
jmp
mov
cmc
mov
in
pop
cltd
dec
ret
int
shlb
insb
xlat
mov
cmp
add
out
out
mov
jns
adc
call
pop
repz
mov
movzwl
push
mov
test
jns
jp
cmpsl
pusha
in
mov
les
pop
scas
push
mov
clc
push
jecxz
or
movsl
or
xchg
dec
xor
into
shrb
ret
or
jmp
test
push
dec
pop
sub
stos
xchg
or
outsl
xchg
xchg
fists
adc
pop
sub
in
enter
mov
adc
push
and
sbb
pop
pop
mov
test
push
dec
xor
xchg
cli
push
pusha
bound
pop
jmp
cmpsl
lock
jmp
dec
fwait
insl
iret
ror
mov
iret
cmc
outsl
leave
aas
mov
mov
pushf
repnz
dec
mov
xor
push
jno
pop
lock
adc
xor
fs
out
stos
sbb
push
push
jmp
out
in
lahf
inc
mov
dec
lret
and
sbb
mov
mov
movsb
pop
fadd
shrb
xor
cmpsl
daa
mov
mov
sbb
push
mov
lods
mov
push
fwait
je
pop
sbb
shll
or
lret
lret
jae
dec
adc
icebp
ss
es
add
insl
lods
sbb
mov
jl
and
shlb
out
xchg
push
mov
mov
mov
fstpl
and
stos
inc
movsl
mov
fisubs
dec
enter
orl
push
out
popl
loope
dec
jl
mov
stos
jns
mov
pop
or
or
repnz
lahf
dec
stos
mov
imul
das
ficomps
adc
xor
je
ret
pop
push
insb
pusha
nop
leave
xor
loope
lret
jb
xor
mov
xlat
ds
mov
mov
loope
jnp
mov
ja
lret
ds
or
ret
js
xor
sbb
jl
jmp
sub
cmp
and
fdivs
xor
cmp
jne
mov
in
dec
and
loope
mov
dec
xchg
jecxz
sub
cmpsb
inc
call
sarl
xorb
or
les
sbb
inc
cmpsb
mov
jge
pop
sbb
jbe
mov
cmpsb
sub
iret
dec
shlb
movsb
fisubrl
fsubrs
xchg
sti
bound
ret
loop
push
test
les
and
je
lods
lret
fwait
aaa
cmp
test
mov
dec
cmp
sub
imul
and
sub
mov
cld
fsubrl
xor
xorl
xorb
es
or
or
roll
cmc
push
sub
pushf
lock
hlt
stc
mov
mov
mov
mov
or
vpaddusw
jl
fistl
out
xchg
xor
jae
les
cmp
jnp
sbb
push
inc
mov
xchg
inc
mov
xchg
xchg
rcrl
daa
push
cld
cs
xor
mov
and
xor
test
aas
test
adc
call
inc
lds
push
jne
push
lahf
jo
push
jle
cmp
fsubs
les
das
mov
mov
add
xor
mov
inc
push
mov
out
push
push
xor
jmp
sub
jbe
xor
mov
rolb
jae
shrl
add
sbb
mov
pop
popf
mov
pop
imul
lea
add
pop
fstpl
inc
xchg
jp,pt
lret
jns
jne
fisubrl
fs
jp
dec
and
call
xorl
adc
je
add
or
mov
jecxz
ds
xchg
insb
mov
scas
pop
cmp
adc
xlat
or
lret
rcr
or
mov
mov
stc
aam
insl
stos
push
sbbb
rcl
imul
lret
cmc
popf
lods
sub
sbb
rcl
mov
push
xchg
and
in
sarl
ss
es
lods
xor
cmp
mov
sbb
mov
cli
jbe
sub
cmp
clc
ds
test
nop
fistpll
shrb
mov
pop
mov
movsb
mov
add
fcomp
pop
mov
fwait
js
test
xor
add
xchg
stos
sub
pop
push
shrb
dec
xchg
aaa
mov
mov
test
mov
lcall
out
movsl
dec
aam
lds
lds
fnstenv
rcrl
dec
adc
js
jp
jmp
and
js
in
push
int
inc
stos
fisttpl
push
fs
stos
stos
push
into
sub
mov
lods
pusha
sbb
dec
mov
mov
jmp
jne
lea
popa
and
arpl
push
or
and
repnz
test
cs
clc
jns
into
out
in
and
push
lret
sbb
jge
mov
outsl
bsr
inc
cli
jle
aaa
arpl
push
jbe
scas
sbb
pop
mov
mov
sbbb
icebp
test
xchg
xor
cmp
cmp
push
dec
mov
adc
hlt
loopne
xor
lods
pusha
and
testl
dec
scas
in
cmp
push
jbe
sbb
sbb
mov
les
scas
ss
scas
dec
mul
jnp
jecxz
shll
test
out
fwait
xor
xor
push
ret
sti
xchg
out
movsl
xor
sub
cmp
mov
daa
pop
out
call
pop
or
xchg
xor
stos
pop
in
scas
shr
mov
cmovl
test
movsl
jae
ret
mov
insl
lds
inc
enter
ljmp
pusha
dec
inc
or
mov
fidivrl
rcrb
shl
sbb
scas
in
pushf
addr16
in
cli
lock
and
pmaddwd
lahf
int
pop
cs
xchg
mov
dec
dec
adc
in
sub
adcb
jbe
ljmp
dec
mov
mov
pop
push
jae
imul
cwtl
leave
adc
push
das
mov
loop
popa
pop
inc
inc
sbb
sti
add
in
xchg
xchg
jb
int3
scas
mov
shr
js
sahf
inc
arpl
pusha
ds
adc
das
stc
xchg
mov
xor
icebp
dec
repz
je
pop
lds
in
call
jg
sbb
and
addr16
cmpsb
xchg
gs
dec
stc
push
aad
push
inc
and
cmp
pop
rorb
sbb
loope
nop
shll
cld
loope
mov
jae
xor
cld
push
loop
ret
sbb
push
cltd
sub
in
or
adc
add
addr16
jb
push
inc
daa
pop
ret
fdivl
repz
adc
pop
cli
jne
cmpl
cmp
pop
push
and
iret
xchg
or
and
popf
repz
jp
repz
push
or
mov
xorb
mov
ret
mov
mov
xchg
scas
mov
fs
ficoms
sub
lock
addr16
mov
cli
inc
sbb
mov
popf
lods
inc
mov
mov
mov
jne
leave
insl
dec
xorl
cs
mov
sar
clc
mov
push
in
xchg
mov
outsl
clc
pop
xchg
cltd
outsb
les
sub
jb
xchg
jb
push
dec
jmp
shll
outsb
ds
mov
xchg
or
cmpsl
sbb
leave
loop
dec
xor
pop
out
push
or
jge
aad
into
scas
fcmovbe
ja
push
inc
sub
cmpsb
mov
rolb
jbe
movd
mov
in
shr
fnclex
mov
jo
mov
inc
sub
or
push
sbb
jmp
lcall
mov
call
dec
jmp
es
dec
call
inc
fldt
pop
mov
push
repnz
inc
and
sub
push
or
std
or
int3
out
mov
and
shl
mov
or
sub
add
mov
xchg
mov
cmc
and
shll
xlat
or
pop
je
stos
sbb
jne
dec
mov
cmp
dec
cmp
lock
sub
push
pop
cmp
xchg
mov
mov
or
repz
xor
shrl
inc
add
test
or
xor
je
mov
add
or
push
add
xor
inc
adc
adc
mov
add
cld
push
inc
leave
mov
test
fwait
sub
outsl
fsqrt
mov
mov
clc
mov
xchg
out
js
pusha
fsubr
or
mov
pop
test
or
cmp
jo
je
sub
mov
add
insl
jecxz
dec
jmp
test
lods
mov
leave
mov
pop
in
cmc
jo
ret
dec
les
mov
dec
add
sub
cmpsl
adc
pop
loopne
push
in
sbb
inc
je
mov
mov
data16
mov
push
mov
mov
dec
adc
nop
shl
sub
out
add
mov
dec
outsl
ljmp
rcrl
xlat
popa
gs
test
lods
sbb
add
jmp
pop
mov
push
jl
dec
cmpsb
or
and
jecxz
fsubr
mov
xchg
clc
imul
imul
imul
lods
mov
jp
jae
idiv
lret
cmp
mov
push
mov
fldt
test
lcall
xchg
push
in
xchg
xchg
ret
mov
pop
int3
ja
mov
pop
ret
and
fwait
push
cmp
and
mov
sub
ret
jp
inc
test
in
inc
stos
xchg
cmp
sahf
sub
lret
scas
cld
in
out
sbb
push
cmc
pop
aam
push
fwait
xlat
mov
ret
dec
cmpl
shll
xchg
dec
lret
fcoms
mov
xor
rcrl
adc
mov
push
add
mov
mov
fisubrs
or
mov
xor
dec
mov
adc
jge
inc
sbb
inc
mov
stos
jmp
or
test
shrl
scas
inc
arpl
adc
mov
jg
push
out
pop
loope
sbb
jecxz
fiaddl
adc
pop
xor
push
sub
out
jg
jl
std
ret
or
cmpsb
stc
cltd
pushf
loope
mov
or
and
inc
rcrb
inc
cmpsb
add
mov
outsb
fisubrl
js
and
adc
mov
dec
ds
sbb
inc
xchg
mov
and
imul
xor
pop
stos
and
xchg
ret
mov
push
sahf
mov
scas
sub
rolb
filds
cmp
mov
add
dec
sarb
out
cmc
mov
faddl
cs
pop
in
decl
inc
lcall
mov
cmpsb
aad
mov
movsb
pop
xchg
jbe
es
fcmovu
mov
aam
icebp
or
insl
xor
xor
loope
cmp
fs
mov
add
push
dec
mov
cmp
ret
xchg
xor
xor
clc
adc
outsl
sti
pop
std
into
testb
and
movb
or
subb
in
mov
mov
mov
outsb
add
cmp
mov
cltd
pop
mov
jge
test
fcmovbe
lock
sti
mov
inc
lret
lahf
dec
push
pop
sbb
inc
js
pop
repnz
jge
popa
test
aaa
cltd
pop
dec
cmp
pop
pop
test
xchg
insb
jmp
cmpsl
inc
xchg
jo
add
hlt
jne
push
lret
mov
aas
cmp
jbe
mov
adc
jle
push
loop
sub
jp
mov
add
cmc
mov
sbb
cmp
das
cmpsb
fwait
jmp
loop
lahf
ljmp
rolb
add
sbb
sahf
scas
push
clc
es
adc
mov
dec
pop
imul
loop
dec
push
mov
das
pop
mov
inc
jno
pop
lret
push
aad
shll
cmpsb
insl
adc
add
inc
inc
xor
inc
iret
cmp
icebp
pop
cmpsl
leave
gs
xchg
in
icebp
dec
stc
mov
shll
sbb
mov
movsb
or
sti
cmp
mov
or
xor
mov
pop
push
stos
loopne
dec
jp
sub
aas
jnp
pop
or
stos
jg
inc
jo
iret
lods
mov
test
xchg
cld
fnstenv
xchg
and
aaa
dec
add
adc
out
add
into
cmc
adc
test
dec
dec
adc
or
and
mov
jnp
clc
movb
outsl
loopne
dec
icebp
jno
gs
subl
shlb
sbb
loope
cmpsb
jae
add
fnsave
push
inc
cmp
xchg
aam
sub
std
clc
push
push
aaa
xor
aaa
pop
repnz
ds
testl
sub
movsl
mov
xchg
stos
sbb
inc
popf
cli
pop
push
push
inc
sub
icebp
jl
sbb
sbb
leave
or
mov
dec
mov
insb
scas
pop
xchg
movb
aam
jl
push
arpl
fistps
sbb
test
xor
lods
lcall
mov
insl
mov
or
inc
and
aas
out
push
lods
lcall
xchg
xlat
imul
xor
cwtl
pop
imull
sbb
xchg
mov
stc
loope
popa
mov
bsf
mov
mov
mov
sub
stc
lds
sbb
filds
fadds
cmp
cmp
jne
dec
dec
sub
push
fisubrs
mov
mov
jb
aas
sub
icebp
jp
aaa
mov
mov
scas
loope
lods
xchg
mull
sbb
je
fwait
call
aad
jmp
movl
lahf
jl
in
sub
sbb
div
or
jmp
int
inc
dec
mov
sub
cmp
mov
cmp
pop
add
ljmp
shr
in
push
mov
mov
pop
stc
or
ror
cmp
cltd
ljmp
mov
out
mov
rcrb
loopne
lods
cmc
and
je
pop
jns
cs
loop
mov
or
cltd
jb
xor
shrb
sbb
enter
dec
xchg
sbb
or
mov
dec
inc
inc
test
sub
mov
ret
adc
in
rolb
pop
mov
xorb
push
cmp
inc
xchg
bound
test
imul
sub
icebp
outsb
mov
test
jmp
sbb
addr16
xor
xchg
dec
flds
das
sbb
into
imul
cmp
jbe
mov
cmp
ja
inc
lahf
push
sub
repz
sub
mov
sbb
mov
cmp
sahf
fiaddl
cmp
inc
fdivs
loopne
or
xchg
add
cwtl
push
cmpsl
mov
scas
lret
mov
sub
outsl
enter
orb
jg
sar
loopne
push
dec
push
sarb
mov
mov
in
xchg
sti
movsl
std
dec
sub
das
add
add
dec
mov
inc
adc
jns
push
cmp
inc
imul
push
push
sbb
mov
dec
lret
sbb
xorl
sbb
mov
jne
clc
pop
cmpsl
sub
loop
repz
scas
lret
outsl
sahf
imul
fwait
rorl
jne
loop
sbbb
add
jo
mov
jb
data16
stc
cltd
shrb
push
jno
stos
add
mov
inc
pop
shlb
xchg
rolb
mov
test
pushf
or
aad
cmp
mov
rcll
cmc
jl
lahf
mov
adc
icebp
xchg
mov
push
daa
push
stos
movsb
mov
mov
mov
adcl
jbe
inc
dec
pop
adc
xor
repz
push
mov
mov
sbb
test
outsl
test
mov
inc
xlat
pop
cmp
leave
popf
jb
push
aas
lcall
adc
mov
shll
dec
imul
mov
push
push
xchg
pushf
mov
xor
frstor
or
js
dec
jmp
and
lods
and
imul
add
loope
lretw
xor
iret
int
dec
shlb
les
cmpsb
xor
jl
addr16
std
jmp
push
dec
mov
jl
sbb
fdivs
xor
cmp
shll
and
add
xor
and
mov
rorb
ret
mov
leave
cli
fcomp
add
xor
icebp
test
or
or
aas
push
leave
sub
cmp
lret
ljmp
in
cmp
lea
les
jp
add
add
out
mov
ljmp
mov
sbb
arpl
push
or
or
cmpsb
fwait
rclb
sub
cwtl
add
mov
pushf
xor
cmp
pushf
inc
adc
imul
xor
inc
addb
orl
inc
and
inc
enter
dec
jmp
pop
mov
movsl
sub
inc
aad
or
push
mov
test
cmp
sub
pop
cli
push
mov
lock
pop
mov
outsb
insb
adc
sbb
pop
bound
enter
dec
xchg
std
repnz
xor
adc
jmp
sbbb
pop
scas
jl
imul
inc
jmp
orb
in
sbb
ljmp
hlt
push
mov
lret
loopne
lea
xchg
push
jmp
xor
sbb
push
rol
stos
int
dec
faddl
xchg
in
mov
loopne,pt
imul
out
dec
jno
add
sub
xchg
cmpsb
enter
jmp
aam
mov
mov
lock
mov
add
jns
fcompl
xchg
out
movsl
lret
bound
cmpsl
subl
gs
add
jp
jl
lea
in
push
mov
cld
adc
sti
roll
mov
inc
xor
fiaddl
mov
notb
enter
sbb
mov
lds
dec
aam
into
ret
jmp
jb
and
or
sbb
andb
mov
inc
push
mov
rorl
adcl
xor
sub
mov
call
repz
ficomps
call
cmp
fmull
pop
lods
jnp
dec
sub
mov
xor
sub
fnstcw
les
nop
ljmp
mov
arpl
int
add
dec
xchg
hlt
int
ret
xor
lea
adc
je
jecxz
test
xor
adc
or
sub
inc
pop
mov
push
or
fdivrl
or
arpl
mov
movb
incl
das
sbb
test
xchg
adc
pop
mov
outsl
xor
int3
scas
ret
add
cld
xor
insl
jle
xchg
xchg
pop
fsts
mov
fsubrl
leave
stc
jno
jl
into
mov
add
loope
add
pop
push
les
mov
imul
enter
popa
mov
arpl
push
ficomps
mov
adc
and
lock
push
xor
lcall
push
out
shr
mov
in
rcll
jmp
rcll
ds
push
jg
and
dec
fcoms
pop
cmp
lret
dec
sbb
icebp
lret
lahf
push
sbbl
pusha
ljmp
lcall
cmpsb
add
mov
mov
mov
int
imul
push
sub
mov
fs
lea
mov
mov
sbb
inc
cltd
push
addb
in
or
sbb
into
push
pop
sub
push
out
and
pop
dec
push
rol
inc
pop
jbe
mov
sbb
data16
loopne
push
outsb
push
add
shll
mov
ljmp
loopne
sbb
jb
jb
cmp
lods
dec
mov
stos
mov
mov
lods
and
pop
sbb
fdivrs
jp
shlb
jno
push
mov
xchg
jp
mov
lods
mov
add
dec
xchg
jmp
out
mov
push
movsl
stos
ljmp
dec
ds
int
icebp
les
ret
pop
bound
push
jnp
lds
test
sub
pop
push
clc
ret
lea
loop
mov
sti
and
or
out
in
sbb
push
xchg
add
fsubr
xchg
cmpsl
pop
push
hlt
dec
sub
jbe
or
mov
cltd
xchg
mov
loop
adc
xchg
jo
sbb
in
cld
fsubs
movsb
call
and
pop
jnp
pop
jl
negl
stos
add
xor
xchg
adc
scas
gs
cmp
loop
cmp
jnp
mov
push
pop
and
mov
mov
push
pushf
dec
inc
pop
scas
mov
push
cmp
ret
aas
pop
pop
out
stc
enter
xchg
outsb
lea
or
push
aad
push
scas
cmp
daa
jl
aaa
sbb
jae,pn
mov
push
lds
xchg
push
mov
pop
cmpl
pop
xchg
lods
mov
lea
sbb
inc
rorb
jle
add
pushf
sub
inc
dec
les
ds
icebp
jecxz
pop
add
fcomp
call
cmpsl
push
test
popa
neg
cmp
int
movsl
imull
loop
xchg
jge,pn
and
mov
inc
in
cmpsb
test
cmp
or
out
aaa
test
iret
pop
sub
sbb
pop
outsb
insl
je
pusha
outsb
jl,pt
adc
ss
adc
mov
lds
or
adc
sahf
das
stc
and
sbb
jno
test
movsb
test
xlat
mov
mov
mov
lock
loop
roll
lcall
hlt
xchg
fsubrs
out
jmp
es
lcall
test
insb
outsl
fildl
sub
jmp
popa
mov
jl
adc
mov
shl
aad
xchg
insb
ljmp
cltd
pop
jbe
loop
sti
push
ret
rorb
push
fistpl
and
sti
xchg
cs
sub
dec
mov
loopne
xor
and
jg
lret
sub
sbb
mov
jnp
xchg
inc
hlt
adc
cmc
sarb
rorl
xor
iret
movsb
mov
push
sbb
dec
jb
hlt
jge
and
jg
dec
xor
jo
dec
in
out
lods
aaa
repz
lcall
lcall
xchg
cld
mov
jno
xchg
loope
jg
rcrl
push
sub
stos
in
stos
lahf
or
push
add
adc
arpl
loope
dec
lods
or
xor
mov
es
pop
jl
addr16
jg
in
out
inc
pop
sarb
adc
shlb
shl
cmc
xchg
sub
addr16
mov
cmp
push
aad
fs
lret
ds
inc
cwtl
sbb
add
push
cmp
ret
jp
pop
add
test
sub
test
xlat
add
arpl
mov
fildll
into
inc
ficoml
jle
cmp
clc
out
mov
mov
clc
cmp
adc
mov
sbbb
cmp
int3
test
push
mov
scas
cld
lahf
cld
pop
and
dec
push
fnstsw
pushf
pop
out
xchg
mov
cmp
jnp
lods
je
in
icebp
add
adc
test
jae
jb
ret
std
jp
fs
iret
aam
inc
push
ret
roll
mov
or
xchg
out
pop
out
mov
inc
cmpsl
jno
inc
je
mov
xor
test
push
inc
mov
mov
nop
lea
fmuls
inc
loop
scas
jo
cs
fwait
dec
frstor
testl
ja
add
mov
aad
stc
xchg
shr
jmp
test
orb
mov
mov
jmp
into
pop
mov
cmp
sahf
dec
pavgw
repnz
call
into
into
jge
add
and
push
ja
dec
adc
pop
adc
sbb
xchg
mov
xchg
adcl
scas
push
ds
aad
aam
rcr
xor
sahf
mov
sub
mov
mov
and
or
out
daa
es
out
in
aaa
sbb
jp
stc
sbb
call
mov
or
ljmp
scas
add
into
ds
mov
mov
std
aam
sub
add
inc
sbb
jle
push
pusha
push
pop
jp
cmp
add
cmp
lds
scas
lea
fsub
inc
cmovno
mov
dec
in
int3
and
push
or
add
sub
dec
mov
orl
mov
jl
sbb
jo
bt
jp
adc
out
aam
dec
push
test
pop
mov
popf
jecxz
mov
xchg
cld
fldl
stos
enter
outsl
adc
pop
sub
add
push
test
jg
adc
lret
or
dec
out
loope
cmc
test
fstpt
inc
imul
xchg
popf
jnp
sahf
movsl
aad
mov
xchg
xchg
pop
cmp
mov
cmp
out
inc
push
cmpsb
inc
out
add
int3
jbe
cmp
mov
fstl
push
inc
xchg
and
add
addb
add
add
push
ret
movsl
enter
add
stos
dec
pop
loop
cmp
cmp
rorb
ret
stos
sub
lcall
fs
push
shll
push
mov
dec
push
cli
sub
data16
ficoms
outsl
das
lret
jb
or
jno
ja
ds
push
xlat
movsl
dec
inc
xchg
xchg
cmp
rorl
shl
dec
mov
sbb
test
sbb
add
dec
test
or
sbb
and
outsl
mov
ret
add
bound
xor
enter
inc
xchg
dec
mov
cld
lret
aad
push
and
cld
lahf
add
dec
enter
mov
pop
sbb
inc
xchg
mov
in
push
jo
pop
nop
out
out
fisttps
mov
sub
jbe
and
pop
stos
test
sarl
ja
sub
insl
inc
pushf
jb
fwait
dec
sbb
imul
sub
test
sbb
and
jne
nop
cli
pop
js
xor
mov
inc
iret
stos
stc
inc
arpl
popf
jp
arpl
cld
or
lea
inc
xchg
sbbl
repnz
pop
or
negl
in
test
mov
cmpsb
sarl
loopne
iret
test
dec
push
jno
jge
dec
inc
js
xchg
pcmpgtd
ficoml
into
inc
in
adc
dec
push
insb
push
in
fldcw
sub
mov
into
arpl
hlt
adc
fstpl
push
fnstsw
xchg
jno
or
push
lcall
int3
aam
sub
pushl
xchg
dec
lds
gs
add
rorb
int
cmp
hlt
add
mov
pusha
pop
rcrb
andl
dec
negb
pop
bound
push
cwtl
stos
xchg
lock
clc
jg
scas
mov
dec
mov
sahf
icebp
das
xor
jnp
mov
or
add
fldenv
sarb
push
mov
popa
pop
lea
out
jmp
aad
idiv
addr16
loope
in
ret
mov
xorb
jno
or
insb
add
adc
movsl
test
dec
push
jecxz
imul
dec
xchg
std
xor
push
lds
lds
mov
dec
pop
inc
jbe
mov
fs
out
popa
cmp
pop
add
and
ret
std
cmp
pop
fcmove
and
into
lcall
and
cmp
xlat
les
inc
out
pop
jle
and
mov
sbb
cli
push
nop
bnd
and
sbb
lods
out
mov
cwtl
inc
mov
dec
xor
or
fwait
mov
outsl
adc
push
into
pop
or
jb
scas
add
repnz
fsubrs
jne
jp
into
xchg
lret
inc
xchg
imull
xchg
mov
add
xor
ret
jle
jecxz
cmc
stos
stos
jp
xchg
push
test
push
mov
adc
leave
fucom
add
cwtl
mov
xchg
and
cmp
and
cltd
rorl
pslld
test
int
das
mov
dec
loop
sub
jo
mov
dec
jnp
fcoms
clc
sbb
fwait
cmp
mov
mov
sub
stos
xor
mov
fcmovnb
clc
daa
loop
cmp
jae
xor
cmp
mov
or
cwtl
dec
mov
ret
xor
pop
das
mov
adc
push
std
push
test
pusha
and
and
rorl
sbb
adc
fs
cltd
adc
andl
fcmovnb
push
out
jl
out
inc
pop
pop
inc
sub
xor
ds
and
and
lcall
xchg
pop
cmc
push
xchg
inc
cli
aad
pop
cmp
or
adc
push
loop
into
mov
loop
pushf
jae,pt
les
loopne
fidivrs
cmp
sub
icebp
mov
push
adc
icebp
push
mov
in
and
rcrb
fwait
jp
jge
xlat
sub
roll
cmp
dec
xchg
inc
addl
cmpsl
std
sbbl
aam
adc
imul
add
inc
fadds
push
sbb
std
pop
jno
add
push
loop
push
test
mov
jg
rclb
in
mov
scas
sub
inc
cmp
call
fs
cmpsb
pop
jnp
stos
cmp
or
gs
inc
pop
pop
add
sbb
jnp
jne
cmpsl
unpcklps
mov
or
cmpsb
lcall
or
cmpsb
gs
cltd
mov
sub
adc
loop
sub
pop
sub
cmpsl
cmp
inc
sbb
out
fdivl
outsl
mov
ja
enter
adc
in
xchg
jo
add
in
fnstcw
or
jl
iret
mov
loop
and
aas
aad
adc
movsb
push
jnp
mov
sahf
or
std
or
in
mov
push
adc
lret
shlb
out
xchg
sub
jg
nop
pop
dec
adc
cmp
lahf
mov
fstps
in
dec
ret
xor
jbe
lds
lahf
dec
inc
mov
iret
ss
jns
mov
pop
jecxz
ret
push
adc
test
negb
into
add
mov
push
into
mov
xor
sbb
out
call
adc
aaa
push
cmpsl
cmp
inc
test
mov
mov
jmp
scas
test
push
inc
sub
dec
dec
pop
xor
inc
cmc
inc
xchg
push
push
pop
shl
sub
ss
add
in
stos
push
fs
fnstenv
or
jne
lret
and
outsb
mov
or
decb
cwtl
mov
adc
jno
cmpsb
mov
stos
mov
push
fists
jle
fisttpl
dec
sti
test
clc
mov
adc
pop
rcll
pop
mov
das
shrl
inc
mov
inc
sti
and
orl
mov
sub
stos
into
mov
xor
cmpsl
xchg
mov
test
push
aad
pushf
pop
fstps
ds
lcall
push
dec
jnp
and
mov
lods
push
and
jbe
cmp
out
dec
jle
jae
inc
outsl
mov
xchg
fcoms
sbbb
sbb
sub
adcb
jle
std
mov
movsb
pop
sub
pop
loopne
sub
ret
xchg
sbb
xor
popf
push
xchg
lea
jns
loope
jmp
cwtl
and
jmp
dec
fsubs
mov
dec
sbb
push
sti
lea
fldl
cmp
jmp
push
jp
push
and
jecxz
subb
inc
pusha
test
add
ficompl
inc
xchg
and
shrb
fisubrs
vmovq
xchg
mov
bound
inc
daa
push
lret
sub
jne
movsl
mov
cltd
sarl
pop
pop
lcall
cmp
jmp
dec
bound
mov
mov
stos
stc
out
pop
jns
js
xor
lret
dec
push
xchg
daa
mov
leave
ljmp
xchg
jg
xchg
jge
push
cmp
addr16
jbe
mov
mov
fwait
stc
xlat
cmp
les
sub
sub
cld
ret
pop
fisttpl
xchg
mov
xor
inc
aas
not
or
inc
push
sbb
repz
call
cmc
inc
push
cmpsb
push
xchg
jns
pop
xchg
addl
cmc
cmpsl
outsb
scas
add
in
in
cmpsl
cmpsl
fstpt
sub
sbb
or
mov
stos
hlt
jecxz
cmp
lods
mov
inc
pusha
jecxz
sti
inc
dec
mov
je,pn
sub
mov
test
dec
lea
adc
outsb
sbb
mov
cli
js
mov
pushf
bound
scas
dec
ss
add
imul
inc
cltd
jl
mov
xchg
jnp
cmpsb
rorb
push
hlt
mov
xor
ss
das
add
leave
rcll
xor
sarl
xor
xchg
dec
adc
mov
jnp
and
std
mov
inc
mov
and
push
addl
mov
pop
pop
loopne,pt
add
mov
int3
adc
add
xchg
idivl
jno
lods
mov
imulb
sbb
adc
add
fstps
cltd
push
pop
or
hlt
jb
adc
xor
pushf
dec
adc
ljmp
in
cmp
mov
popa
pusha
test
add
mov
jle
js
xchg
inc
mov
mov
jo
sub
inc
xchg
xchg
enter
xor
idivb
mov
pop
test
sbb
add
xlat
enter
cmpsb
cs
xchg
and
jge
enter
push
dec
cmpsb
push
iret
cmp
push
push
jge
in
int
and
das
inc
cltd
mulb
inc
icebp
xor
pusha
jo
fs
cmp
or
dec
inc
shll
push
mov
xor
orl
loopne
jg
out
mov
idivb
xchg
test
and
std
fwait
and
lea
and
sub
lods
popf
push
fwait
imull
stc
or
sub
push
push
or
xchg
push
push
adc
and
push
rcrl
in
sahf
and
cmp
pop
lock
insb
insb
cltd
jecxz
jne
jno
outsb
mov
push
aas
mov
add
daa
push
lods
adc
repz
push
mov
ret
push
mov
sbb
das
ds
sub
sbb
stos
xor
pushf
dec
pusha
lods
inc
les
outsl
mov
mov
mov
stos
push
push
sub
cmp
test
sbb
adc
adc
sbbb
popa
popl
cmp
dec
dec
loope
mov
fbstp
daa
idivb
icebp
ljmp
add
pop
aam
cld
mov
test
stos
loop
into
pop
out
add
fs
lahf
out
in
mov
jo
bound
fiaddl
push
and
scas
cwtl
fisubl
mov
sahf
or
push
xchg
stc
pop
cli
ds
dec
inc
xlat
aaa
int3
pop
fldt
or
cmp
dec
push
les
hlt
or
data16
inc
cs
inc
mov
ss
lahf
add
mov
pop
jb
or
adc
mov
lods
gs
mov
std
dec
mov
popa
mov
outsl
lds
add
pop
or
idivb
mov
pop
mov
mov
cmc
or
push
push
arpl
cmp
out
cltd
idivb
mov
fiadds
popf
ja
jmp
xchg
dec
sub
clc
push
ss
out
mov
dec
das
fwait
push
fs
push
mov
and
inc
shll
cli
leave
adc
and
enter
ret
adc
mov
fildl
int
stos
jl
add
pop
sub
subb
push
and
insb
in
add
cmpsl
sbb
inc
jb
stc
cmpsl
cltd
out
jmp
or
test
fstps
shlb
push
inc
lea
fnstcw
cmc
mov
push
dec
loop
xor
insl
imul
mov
push
mov
out
pop
mov
fwait
pop
iret
adc
cmc
xchg
flds
adc
gs
mov
sbb
insb
into
cmp
push
aam
lret
cli
mov
fldenv
shll
jne
fst
lods
popfw
adc
out
jge
sub
mov
repz
dec
fistpl
sbb
cmp
xchg
mov
insb
inc
fwait
mov
stos
xchg
xchg
xchg
dec
lods
lock
fstpl
pop
sub
scas
inc
sub
ss
movsl
push
sti
movsl
push
mov
mov
orb
nop
inc
adc
pusha
pop
pushf
lds
mov
adc
inc
sub
xchg
sub
adc
inc
jo,pt
push
neg
mov
test
push
jne
movsb
pop
je
mov
cld
shrl
fstpl
subl
lcall
out
ret
out
push
jle
jo
clc
test
fidivrl
add
inc
mov
loope
loop
xlat
mov
mov
mov
dec
sarl
aam
push
add
xlat
cld
test
outsb
adcl
ja
push
jp
imul
imul
push
scas
shlb
adc
pop
in
mov
sub
loop
pushf
mov
dec
pop
xchg
or
mov
add
adc
test
aaa
dec
jb
push
dec
mov
push
add
je
imul
into
lret
addb
out
mov
push
cmp
or
xor
xor
mov
sbb
fstpt
aam
mov
xor
mov
loopne
jae
popf
inc
je
dec
call
mov
pop
cmpsb
es
lcall
pop
inc
into
sub
int
outsl
pop
repz
add
sub
test
mov
sahf
movsl
fnstsw
lea
das
insl
clc
pop
sub
pusha
dec
movsl
jecxz
mov
loop
mov
push
dec
mov
sbb
cmp
mov
push
out
in
inc
repnz
mov
sti
test
xlat
cmp
add
xchg
call
shlb
repnz
imul
lcall
jno
imul
filds
mov
pop
adc
lds
and
imul
mov
shrb
fsubrs
ja
shll
cmpsb
mov
movsb
imul
or
dec
inc
rorl
test
fcom
push
sub
cmc
and
movsb
dec
jg
lods
and
push
in
pop
xorb
in
fs
push
in
mov
adc
jecxz
jge
mov
pop
or
mov
xchg
cmpb
sub
jp
add
js
jecxz
arpl
sub
inc
and
and
fimuls
lcall
pop
test
jo
imul
cmp
sub
sbb
pop
mov
orps
fdivrl
inc
lahf
fcomp
sbb
mov
mov
jno
xorb
aam
jno
ds
les
push
xchg
pop
js
and
lahf
inc
mov
rolb
rcrb
jecxz
jbe
dec
jns
fucomip
inc
cld
xchg
orl
lock
mov
or
xchg
add
movsb
cmp
out
jo
xor
xchg
pusha
xchg
xor
pop
pop
sbb
or
add
out
cs
popa
mov
and
pop
lea
pop
in
jmp
sahf
xor
inc
test
pop
scas
sub
xor
cmp
js
mov
push
scas
outsl
or
jp
xchg
pop
js
mov
clc
or
pushf
lea
es
int3
movsb
add
mulb
pop
std
jb
xorl
data16
mov
mov
add
and
mov
inc
mov
jmp
push
cmpsl
in
xchg
sbb
mov
int3
or
repz
fs
pusha
dec
out
cld
pop
push
jp
mull
ret
xchg
repnz
add
in
or
aam
addr16
cld
mov
jne
icebp
pushf
loopne
adc
bound
xchg
pushf
and
setle
cmp
lahf
push
rclb
mov
es
mov
pop
xor
xchg
xchg
push
gs
scas
add
jb
add
ror
ja
aad
pop
jb
cld
in
jno
sbb
pop
sysexit
adc
xchg
push
xchg
mov
ret
aam
mov
pop
iret
jb
sub
jl
pop
add
lods
push
jp
stos
ret
repnz
iret
adc
lods
xor
cmc
aad
in
pop
out
test
popa
push
fsts
repz
shrb
lahf
cmp
call
push
mov
or
cmc
cmp
in
xchg
test
mov
cmp
enter
mov
stos
addl
jg
fisubl
sti
xchg
in
sti
mov
or
and
mov
lods
or
hlt
mov
dec
dec
or
xor
int
fnstsw
xchg
lret
pusha
mov
and
adc
cmp
out
mov
aaa
aaa
repnz
rcll
outsb
bound
xchg
in
mov
inc
jno
jp
test
mull
pop
sti
sub
sub
test
sbb
mov
cmpsl
add
add
pop
les
test
fstps
js
repz
ljmp
sti
sti
bound
pop
loop
mov
pop
mov
dec
mov
and
jg
add
addb
dec
xor
inc
dec
mov
lea
in
iret
fs
shr
mov
mov
push
fmuls
jo
leave
int3
rcrb
sub
inc
jbe
shlb
pop
add
rolb
add
push
push
into
sub
cmpsb
out
sti
pushf
cmpsl
clc
bound
iret
xor
pop
mov
insl
std
mov
or
fstps
pop
je
pop
xchg
mov
popa
es
leave
push
mov
in
out
xchg
adc
push
into
pop
jne
in
xor
movb
mov
lods
adc
xor
daa
inc
stc
int
adc
std
mov
pusha
test
xchg
inc
adcl
mov
add
add
lret
gs
jecxz
add
sub
mov
repnz
lea
jbe
push
out
addr16
jae
xchg
mov
cmp
pop
add
add
fistpl
outsl
shlb
or
xor
xchg
mov
div
push
test
add
inc
pop
movsl
xchg
leave
push
sbb
pop
mov
sub
inc
cli
shrl
mov
cli
orl
loop
mov
aas
scas
fnsave
cmp
mov
std
icebp
popl
das
js
lret
add
jle
push
adc
imul
pop
and
ds
pop
jno
xchg
inc
sbb
cltd
mov
fsts
cli
inc
xor
push
inc
setns
cmp
fistpll
inc
jle
cs
mov
jg
sub
mov
push
sbb
aam
in
xor
inc
xchg
lea
pushf
jecxz
or
ljmp
movsl
mov
jno
outsl
test
xlat
lea
push
vshufpd
jmp
data16
mov
dec
push
lods
mov
fwait
sbb
dec
lret
mov
mov
popf
cmp
mov
xchg
sub
pop
sub
dec
or
insl
push
jne
into
imul
in
sbb
jecxz
nop
aaa
stc
int
stos
mov
jg
xchg
es
pop
add
out
mov
sbb
mov
push
pop
pop
not
push
dec
cmp
enter
dec
cmpsb
int3
cmp
cs
out
jne
or
fidivrl
pop
es
xor
ljmp
rcr
loopne
jno
push
jb
push
sbb
xor
inc
cmpsl
lret
jno
outsl
test
mov
popf
syscall
icebp
int3
arpl
fld
xchg
pushf
sbb
fiadds
pop
mov
push
mov
mov
jno
pusha
std
aam
adc
pushf
jg
mov
pusha
cmp
jae
mov
outsb
jnp
xor
rorb
mov
push
pop
xchg
xlat
aam
out
mov
jae
mov
dec
out
insl
cmc
dec
jo
pop
mov
stos
cwtl
inc
subb
hlt
xor
lret
sahf
push
sbb
push
sbb
lock
mov
insl
fcoml
imul
lock
sub
pop
out
cmp
in
cmp
mov
test
fisubs
mov
xchg
mov
fs
xchg
and
mov
je
jle
inc
arpl
pushf
xorl
out
repz
and
hlt
imul
mov
inc
fs
or
mov
mov
xchg
lock
movsb
inc
faddp
sahf
cmpsb
pop
adc
lret
inc
jbe
mov
ljmp
fucomp
mov
push
pop
push
push
push
mov
sbb
jbe
dec
xchg
ljmp
rcr
and
ja
jecxz
sub
pop
clc
cld
pushf
push
add
mov
dec
shl
mov
adc
sub
cmp
jge
enter
insb
xor
jno
imul
pop
rorb
pop
adc
jne
dec
test
dec
cmp
dec
xchg
mov
push
scas
jb
xor
rol
in
fstpl
sub
int
cltd
and
inc
cmp
dec
fwait
xor
sub
out
aas
jle
imul
negb
aaa
rcll
push
inc
lret
nop
mov
xchg
adc
movsb
outsl
xchg
pop
imul
lcall
divl
push
shr
jg
xchg
scas
push
cmpsb
stos
push
add
pop
test
jbe
add
lret
stos
pop
movsl
add
inc
pop
cmpsl
inc
add
insl
xlat
pusha
xor
adc
mov
push
notl
lahf
pusha
out
dec
lds
pop
push
push
sub
mull
mov
into
lcall
dec
pop
je
dec
lods
add
sbb
jne
sbb
mov
popf
sbb
outsb
in
jmp
mov
rcrb
loop
push
mov
jmp
mov
sub
es
push
lods
dec
push
repz
xor
sti
push
je
sbb
packsswb
mov
mov
aad
or
daa
lcall
test
sub
test
in
test
mov
out
adc
mov
pop
inc
sub
out
shrb
push
mov
icebp
jg
add
pop
not
ljmp
repz
fcom
and
cmpb
mov
mov
jne
mov
mov
das
jnp
lea
sbb
div
sbb
adc
test
add
sub
scas
leave
sbb
aaa
scas
xchg
cmp
inc
sub
and
xchg
cmpsb
inc
jl
aam
ljmp
or
scas
scas
enter
xor
push
xchg
mov
out
std
push
insb
mov
outsb
icebp
adc
out
mov
dec
pushf
cltd
xchg
lods
popf
cltd
call
jl
pop
xchg
test
jne
xor
or
jecxz
add
ret
pop
clc
or
stos
add
jbe
mov
mov
inc
test
mov
push
rcll
ret
mov
sbb
rorl
mov
inc
push
rcrb
xor
sahf
xchg
fisubrs
lret
in
pop
jb
sub
xchg
ja
mov
ss
push
mov
mov
mov
pop
xchg
rcl
data16
cs
push
sub
mov
btc
loope
mul
shrl
fnstcw
mov
outsb
lock
mov
imul
shrl
lds
ret
jne
mov
mov
outsl
jg
std
inc
or
lahf
repz
push
cmc
rorb
dec
adc
mov
add
add
add
cld
push
movsb
fcmovne
cmp
fstl
lcall
int3
loope
aas
ret
mov
push
push
and
mov
sbb
loop
fs
pop
sbb
cmp
in
pop
xor
pop
adc
push
mov
pushl
ret
orl
and
fsubl
int3
sub
adcl
xor
test
fwait
mov
lret
inc
cmpsl
mov
and
iret
lods
cmpsb
aam
mov
lock
sbb
pop
adc
movsb
cmpsb
in
int3
dec
insl
jae
mov
xchg
rcr
sbb
xor
shrb
sub
aam
pop
gs
ljmp
and
int3
mov
adc
and
test
gs
test
pop
daa
in
movsl
xor
mov
sub
in
sarb
and
mov
mov
cwtl
xor
jne
jo
repz
lds
pusha
rcrb
inc
cmc
leave
es
cmpsl
mov
enter
call
pop
adc
adc
xor
adc
cmp
fisttpll
jge
mov
sub
test
clc
lea
or
jmp
push
push
lcall
divl
and
in
inc
adc
or
testb
lahf
shrb
fs
jl
cwtl
pop
xor
imul
arpl
sbb
xlat
mov
out
jns
mov
cmp
ja
jge
shrl
lret
out
out
ret
fbld
sbb
pop
imul
mov
xchg
in
loope
mov
mov
int3
ss
leave
aad
ljmp
sub
in
rorl
pop
adc
inc
aas
mov
outsl
jp
popl
ja
push
pop
je,pn
imul
cmpsb
sbb
lret
dec
cmp
mov
or
inc
fisubl
aas
out
jp
and
test
cmpsl
cltd
fisubl
fsub
popf
dec
xor
push
add
out
imul
scas
mov
mov
testl
ja
data16
xchg
jp
sbb
or
mov
xor
xchg
jb
imul
pop
out
mov
aad
cwtl
pop
sbb
xchg
inc
inc
fcoms
sub
cmp
movsl
mov
xor
sub
scas
sub
sub
adc
je
pop
iret
and
jns
movsb
icebp
mov
cld
xor
sbb
jle
cmp
je
cli
pop
insl
jmp
mov
cmp
xchg
adc
push
push
or
xor
push
sbb
repnz
loop
aam
pop
sub
pop
adc
nop
lahf
cmp
inc
xlat
dec
mov
lret
neg
mov
jb
dec
pop
std
adc
add
bound
push
jno
mov
js
jne
sbb
cs
mov
mov
xchg
popl
dec
xchg
arpl
enter
mov
in
jl
sbb
fstps
arpl
cmpsb
imul
xor
lret
push
jp
or
push
add
push
pop
mov
iret
movsl
mov
iret
inc
fstpt
test
inc
jecxz
pop
jl
jecxz
sbb
inc
dec
ss
fidivl
sahf
fwait
cwtl
mov
rcll
lahf
test
pop
xchg
mov
mov
adc
popa
aam
fsubrs
xor
jo
andl
out
adc
pop
mov
subl
inc
inc
fsubrs
mov
dec
sbb
pop
fdiv
test
sbb
std
jo
shlb
repz
in
out
sub
or
sbb
mov
and
andl
sahf
fstps
and
adc
insb
mov
inc
popl
pop
sbb
ljmp
cs
lahf
insb
add
xchg
push
cmp
or
sbb
cmpsb
outsl
and
rolb
shlb
add
push
cwtl
int3
mov
test
push
movaps
xchg
les
mov
and
cmc
insl
aad
das
ljmp
mov
cmp
xor
pop
out
into
outsb
outsl
dec
dec
cmp
push
jno
mov
sub
push
and
mov
lods
int3
int3
pop
and
flds
dec
lods
xchg
jbe
xchg
push
inc
popf
lods
arpl
ffree
div
sbb
aam
push
fwait
xchg
sub
jge
rolb
jno
xor
mov
rorb
cs
lock
sub
add
popa
test
ret
and
insl
sbb
push
pop
outsl
out
sbb
xor
hlt
lcall
unpckhps
adc
adc
out
pushf
xchg
pop
jnp
push
aas
lcall
test
ja
adcb
nop
out
nop
inc
sti
xorb
lds
ja
lcall
dec
sbb
mov
int3
scas
sub
ret
aaa
xchg
xor
add
loop
popa
and
push
test
lock
mov
pop
jno
test
aas
out
int
cmp
test
jmp
outsb
sbb
jle
icebp
mov
or
xor
xchg
dec
subb
int
es
xor
mov
add
xor
mov
jge
call
push
lock
out
jp
sti
arpl
xor
scas
sbb
pop
jo
sub
dec
jno
mov
sub
jge
test
push
push
mov
fmul
jae
cmp
stc
cmp
mov
mov
inc
sub
rolb
cld
pop
std
out
das
mov
mov
imul
push
mov
dec
jl
movb
popa
fldcw
dec
or
data16
pop
pop
fcmovu
add
xchg
or
xor
push
pusha
aaa
inc
and
push
pusha
push
mov
fidivl
cmpl
lock
cwtl
cmp
mov
push
mov
pop
mov
lods
sbb
cmc
xor
test
push
insb
xor
and
adc
shlb
inc
xchg
push
xchg
bound
jg
out
shlb
mov
iret
shlb
pushf
and
sbb
std
sbb
xchg
lahf
shl
fwait
xchg
pushf
out
movsl
mov
ret
jmp
movl
ret
lea
adc
cltd
xor
sahf
mov
mov
lahf
inc
inc
mov
xchg
jne
add
push
or
aaa
dec
jl
pop
xor
insl
push
fimuls
xor
aaa
mov
sub
cmpsb
ss
dec
addr16
sub
pop
jmp
in
inc
out
inc
jecxz
mov
xchg
pop
rcll
pushf
popl
out
mov
mov
int3
inc
mov
movsb
lods
rcrl
push
stos
xlat
dec
pop
fwait
and
ljmp
imul
call
xor
inc
cmpsb
push
in
pop
dec
testl
cs
xchg
push
jnp
idiv
adc
and
lret
out
lods
mov
pop
pop
xchg
loopne
jl
mov
xor
mov
dec
gs
repnz
std
notb
ficoms
jb
rorb
pop
insb
cmp
xchg
jbe
dec
test
ret
fwait
inc
stos
sub
insl
and
lret
cs
dec
or
jns
inc
pop
ret
mov
test
lcall
dec
in
add
incl
xor
call
sahf
jns
pop
xchg
adc
vminss
push
mov
sahf
out
cmc
lds
xlat
repnz
push
jle
inc
pop
sbb
pop
xchg
call
push
sbb
add
mov
test
jmp
mov
or
cmpl
push
mov
mov
pushf
push
stc
or
push
in
jns
sahf
ljmp
pop
aam
lods
sbb
dec
xchg
jmp
push
sub
jle
jae
sub
popa
adc
sbb
mov
push
scas
imul
adc
sub
sbb
insl
and
fstpt
xchg
or
leave
push
adc
mov
adc
mov
mov
xchg
xor
lock
lock
mov
sahf
inc
int
popf
icebp
andb
cmp
loop
les
outsl
sub
in
test
and
test
imul
xchg
fs
out
sub
xchg
pop
lock
lock
adc
sbb
add
fdivrp
ret
sbb
and
dec
and
inc
fstpt
aad
xor
scas
lcall
data16
sub
push
inc
data16
cmc
neg
shlb
stos
and
std
stos
ss
iret
pusha
push
jne
cmp
ret
in
aas
lahf
and
test
dec
test
nop
dec
shl
mov
or
shrb
dec
pop
mov
cwtl
adc
mov
push
cmc
mov
es
bound
or
enter
mov
sub
faddl
out
and
push
jge
jno
movsl
mov
lods
or
mov
xchg
pop
adc
mov
rolb
divb
popf
pop
jbe
xchg
mov
mov
movsl
or
xor
cmc
in
lahf
sahf
rolb
xchg
xor
or
and
pop
sbb
les
push
cmp
xchg
cmp
popa
add
adc
subl
inc
mov
insl
out
bound
shl
stc
jae
insl
dec
xchg
add
inc
add
movsl
arpl
test
out
pop
jo
xor
shrl
add
movsb
adc
xor
push
dec
and
mov
mov
xor
not
pop
add
adc
mov
bound
loope
insl
lods
mov
andl
add
push
nop
push
mov
add
xor
sbb
fnstsw
aas
adc
and
add
cmp
xchg
push
xchg
pop
and
mov
push
cmpsb
sub
pop
out
jp
lds
mov
sub
mov
sahf
xchg
xchg
pop
pop
test
cltd
add
push
mov
jns
loope
call
stos
sub
into
xchg
mov
je
in
ret
movsl
xor
and
adc
imull
sub
aam
mov
xor
and
sbb
jecxz
inc
test
data16
popa
adc
mov
dec
sub
jl
or
and
fisubrs
push
loopne
sbb
ret
ret
inc
xchg
mov
stc
xor
and
mov
push
stos
in
xor
mov
or
add
mov
call
fld1
out
out
and
aam
dec
fsubrs
mov
loopne
xor
cmpsb
adc
loopne
jp
mov
mov
and
sbb
int3
jnp
xor
call
add
cmp
out
mov
jo
mov
add
fwait
dec
es
mov
add
xor
rorb
jbe
ret
in
repnz
adc
ja
cmp
jno
xchg
inc
cmp
sahf
daa
mov
cmp
ljmp
jo
fs
rcll
cs
adc
xchg
lahf
xorb
pop
xchg
push
cmp
inc
inc
push
loope
sbb
adc
mov
jae
nop
rolb
js
fdecstp
or
add
push
cmpb
push
js
dec
fidivrs
sub
aaa
add
and
outsl
sahf
and
lret
ret
dec
adc
and
jo
xchg
shr
movsb
in
xchg
sbbl
cmp
ret
pop
icebp
and
andl
or
inc
shlb
or
sbb
test
mov
push
out
push
and
sti
pusha
iret
out
out
int3
rcrl
jnp
push
mov
ret
mov
rcrb
add
cwtl
int3
mov
push
pop
ror
addb
sbb
or
nop
and
jb
and
loopne
dec
xchg
xor
in
out
cmp
cld
pusha
filds
js
cmp
icebp
pop
mov
std
add
xor
dec
into
inc
addr16
pop
mov
mov
mov
outsl
xor
or
int
into
push
bound
push
test
jecxz
sahf
nop
mov
sbb
orb
xor
xchg
xchg
andl
icebp
sbb
mov
sub
sub
fisubrs
pop
and
mov
mov
pop
in
cmc
mov
out
pop
stc
cmp
inc
sbb
les
jl
orb
sub
incb
pop
push
arpl
pop
aam
iret
test
gs
cltd
xor
jmp
dec
and
push
pop
lds
add
cmp
movsl
mov
pusha
cmpsb
ss
aam
push
push
jb
jmp
cmp
ljmp
aad
notb
xchg
outsl
fs
mov
jmp
pop
cld
inc
std
in
sub
sbb
dec
adc
mov
xchg
fxch
pop
mov
mov
out
jmp
fwait
mov
fistpl
aas
add
iret
aaa
adc
ret
fiaddl
and
xchg
jne
imul
adc
jle,pt
mov
mov
out
xchg
mov
adc
inc
and
popa
jo
adc
cwtl
ret
mov
aad
popa
daa
pop
sbb
clc
lods
and
std
aas
fwait
mov
shll
lcall
pop
loop
adc
sbb
mov
ds
mov
cmp
mov
mov
fst
mov
xchg
jg
lea
aaa
inc
rcll
sub
arpl
xchg
aas
test
sbb
sbb
flds
adc
aas
outsl
out
sbb
das
push
xor
aaa
insl
lds
std
sbb
cmpb
lcall
mov
xchg
pusha
enter
push
mov
fs
lcall
test
sti
mov
outsb
fidivrs
jno
sbb
xor
ja
dec
xchg
orb
xchg
mov
outsl
div
add
pushl
push
or
cmpsl
mov
inc
insb
or
or
test
in
mov
clc
cmp
std
mov
mov
int3
ss
mov
gs
push
loop
push
pop
xlat
fnstenv
adc
mov
mov
push
mov
adcb
insb
pop
and
pop
and
mov
or
ret
loope
les
adc
repnz
add
jae
sub
lret
adc
push
push
jmp
cmpb
fsubrp
outsl
in
repz
pop
cmp
xchg
xor
stos
int
aam
test
mov
int
lods
nop
sub
lods
and
jne
in
cmp
stc
repz
lea
mov
mov
fwait
aam
push
lret
enter
adc
push
cmp
or
arpl
dec
test
inc
jge
inc
sbb
rcll
mov
faddl
cmp
sahf
sub
jecxz
mov
mov
and
xchg
push
ljmp
push
xor
pusha
jecxz
subl
pop
icebp
mov
dec
pusha
in
sub
test
cmpsl
cmc
data16
movsl
call
push
xchg
jmpw
xor
fists
adc
cmp
push
cmp
stc
pop
adc
jo
mov
idivl
inc
sub
sub
mov
sub
arpl
push
repnz
das
shl
in
call
in
push
sti
xor
testl
es
cld
ja
xchg
bound
add
add
jae
pushf
mov
aam
clc
jge
adc
sub
add
addr16
mov
inc
push
ds
call
dec
loopne
filds
loope
repnz
fwait
out
cmp
mov
dec
je
sbb
push
inc
out
insb
loope
enter
mov
mov
ja
outsb
popf
popa
xor
sar
pop
mov
xchg
cmp
bound
sub
rclb
arpl
jnp
jp
jae
and
jns
out
pop
jmp
push
out
test
inc
fsubrl
dec
sub
dec
lds
xchg
and
pop
cwtl
inc
divb
adc
cltd
mov
sub
lret
fucomp
push
mov
in
xchg
mov
jl
xchg
ss
push
xchg
inc
out
sti
aam
std
imul
and
lcall
mul
push
mov
out
jnp
gs
cmp
loop
pop
pop
adc
mov
mov
jnp
adcb
adc
je
jbe
ror
fdivrs
dec
lods
push
subl
xor
fwait
inc
sub
rolb
adc
mov
rol
adc
pop
in
out
mov
ds
or
push
cmp
jmp
stos
rcl
mov
mov
xchg
push
jae
xor
add
xlat
daa
scas
mov
imul
lods
addb
fwait
jg
clc
pushf
jbe
push
int3
dec
fidivl
push
in
mov
xorb
outsl
fistpll
jne
jmp
mov
dec
jnp
pop
imul
pop
lds
sub
mov
jnp
push
cmp
ret
xchg
mov
lret
mov
pushf
push
dec
cmc
xchg
push
add
pop
outsb
cmp
rolb
lock
adc
aad
shll
arpl
push
adc
repnz
dec
out
jmp
ret
sub
fmulp
inc
aam
bound
mov
scas
sub
jl
cwtl
fwait
jl
pop
ljmp
xchg
stc
lea
jb
push
inc
into
cmp
or
xorb
ds
fs
jne
das
xchg
movsb
mov
adc
jo
stos
pop
xchg
mov
inc
mov
push
cmp
lea
pop
and
out
sub
adc
jmp
faddl
popf
and
mov
fmul
cmp
or
pop
imul
imul
pop
shll
fisttpl
sub
jnp
push
aas
adc
divl
inc
fwait
push
inc
clc
clc
inc
xchg
fyl2xp1
or
mov
shrb
popa
lea
push
push
mov
rcr
aad
xchg
and
jp
sti
push
addr16
fidivs
test
scas
cmpsl
ja
or
fisubs
jno
in
fcoml
pop
pop
push
jl
dec
leave
jle
loopne
repnz
das
add
xchg
cmp
movsl
dec
or
aas
jmp
xbegin
push
fnstenv
rcll
lcall
or
inc
mov
or
mov
stc
pop
cmc
xchg
sbb
fptan
pop
xchg
movsl
dec
or
xor
cmp
xchg
pop
add
out
nop
mov
arpl
add
lds
sub
pop
stos
add
or
scas
shll
out
push
pop
and
mov
stc
icebp
jbe
mov
jmp
aaa
inc
movsb
xor
and
xor
add
or
scas
mov
pop
push
orl
hlt
mov
push
jb
cld
pop
xchg
test
xchg
ds
cmovo
inc
mov
pop
inc
mov
inc
pop
cmpsb
mov
push
sub
in
repnz
mov
xchg
mov
mov
dec
roll
cltd
sbb
scas
xor
jge
add
sub
leave
int
sbb
test
movl
fldl
pop
cmp
add
pop
gs
rcrl
lods
adc
rol
push
cmpsb
cmc
neg
fwait
push
jle
push
mov
and
jnp
xchg
std
imul
xchg
push
mov
dec
mov
pop
sub
and
dec
mov
popa
shr
iret
neg
and
or
imull
popf
and
cld
jo
ss
sbb
jmp
loopne
jmp
pop
sub
dec
xor
stc
addr16
push
out
scas
out
orps
cmc
lods
xchg
jae
pop
pop
add
bound
adc
jmp
aas
test
lret
cmp
and
jp
jecxz
and
mov
mov
and
mov
sub
insb
loop
add
arpl
jmp
cli
dec
sbb
push
jnp
jp
inc
into
loop
and
mov
clc
add
mov
lock
inc
xchg
sti
addr16
pop
xlat
aam
mov
mov
xor
aam
stos
cltd
es
adc
frstpm(287
ror
cmc
into
sbb
int
jmp
shrb
cwtl
pop
in
je
add
fstp
aam
push
rcl
xor
cmc
testl
sbb
jg
sarl
rcll
mov
mov
sub
xchg
xor
xchg
add
jo
pop
and
inc
andl
mov
call
mov
daa
sbb
je
sbb
test
fisubrl
pop
dec
pop
push
lret
leave
adc
int
mov
push
std
in
jge
loope
mov
dec
push
data16
pop
rclb
in
mov
sub
loopne
push
stos
jo
mov
jo
inc
jae
push
jl
mov
jl
pop
inc
arpl
mov
mov
notb
or
rcr
push
leave
xchg
aad
push
add
mov
rorb
fnsave
and
or
fwait
scas
xor
push
loop
xchg
ja
mov
fs
in
and
ljmp
sti
pop
jno
int3
test
mov
or
les
dec
les
cltd
push
and
add
inc
jmp
and
or
jg
mov
inc
lods
jno
mov
mov
ffreep
stos
xor
int
push
inc
pop
push
loope
aas
or
fs
gs
out
or
and
xchg
inc
addl
loop
sbb
mov
addl
pop
inc
sbb
cwtl
arpl
lods
js
jp,pt
mov
jmp
mov
mov
xchg
cmp
repz
arpl
rol
inc
out
push
sbb
les
mov
mov
xorb
in
scas
xlat
jmp
push
inc
xchg
fistl
cmp
or
sub
nop
arpl
cwtl
scas
and
sub
jno
or
cmp
lea
mov
js
dec
int
xchg
lock
mov
test
pop
pop
pop
fwait
out
inc
mov
sarl
jecxz
pushf
sbb
add
outsl
sbb
cld
ljmp
or
inc
outsl
jg
mov
pop
and
pop
and
push
ss
push
jle
mov
add
sub
mov
cmpl
or
cmp
or
jecxz
pop
aas
cmp
pop
push
sbb
push
stos
xchg
mov
cli
aam
pop
lahf
repnz
pop
xchg
cmp
andl
or
dec
ret
into
imul
jo
inc
aad
in
push
mov
add
js
int3
into
or
push
cwtl
fistl
add
lds
jge
or
es
xchg
test
cmp
repnz
addr16
loope
notb
xchg
inc
jmp
mov
ret
int
jg
rcrl
sub
xchg
xchg
or
gs
mov
xchg
mov
inc
jg
data16
test
stc
mov
ljmp
enter
mov
es
inc
sarb
mov
mov
push
mov
into
nop
movsb
add
lea
xor
jp
add
sbb
sbb
ja
icebp
test
jo
push
je
cwtl
xor
xlat
dec
jmp
fadd
movsl
mov
mull
sbb
xor
lods
ror
mov
aam
shlb
clc
jle
and
fsubrl
xor
jae
fmuls
test
fisttpll
cli
test
push
xchg
rorl
mov
pop
fldenv
pushf
pop
or
lea
call
movsl
mov
iret
insb
inc
dec
pop
mov
inc
enter
sub
mov
call
dec
xchg
js
outsb
pushf
test
imul
push
xor
lret
sub
jl
push
dec
mov
lcall
lds
pop
outsb
fcoms
jecxz
int
iret
insl
outsb
fldl
fidivl
lea
out
mov
lret
rcrl
std
aam
mov
pop
shrl
mov
add
nop
add
fnsave
movsl
sbb
xor
jg
std
xor
aaa
push
sub
push
fwait
lods
icebp
xchg
pop
jnp
xchg
lock
or
loop
jae
jl
out
mov
pop
shr
repnz
enter
mov
out
cmp
cmp
xor
cmpsl
nop
imul
mov
jg
add
lahf
or
cli
scas
push
push
inc
mov
jno
jmp
mov
sub
pop
push
xchg
mov
sub
popf
shll
rcl
arpl
cmp
icebp
repnz
inc
pop
repz
outsl
xchg
inc
push
mov
adc
icebp
gs
inc
in
sub
jp
inc
stc
outsb
pop
push
and
mov
sub
ljmp
rcll
push
nop
or
pop
inc
xchg
jecxz
mov
mov
pop
test
sub
fists
pop
adc
ja
cmc
mov
ret
dec
jns
sub
fistpl
out
xchg
or
pop
test
add
insb
mov
daa
mov
mov
stc
and
adc
add
jno
xor
mov
adc
jmp
xlat
add
orb
fsub
ret
in
pop
mov
nop
inc
out
xchg
lods
xlat
in
jo
jecxz
mov
dec
vprotw
jns
pop
sbb
mov
cmp
cmp
and
stos
cld
add
int
add
out
lcall
sbb
pop
sbb
ja
pop
xor
je
mov
sti
dec
aam
adc
icebp
dec
xor
adc
mov
xchg
aad
mov
nopl
aam
cmp
js
mov
jbe
test
inc
lret
imul
loop
sub
negl
pushf
cld
idivl
mov
in
andl
add
test
insb
aam
push
lret
or
lea
imulb
mov
and
pushf
addb
xchg
jge
xor
sti
xor
mov
cmpsb
push
cmp
inc
lahf
fsts
dec
cmp
pop
pop
cmp
and
jo
mov
data16
pop
test
pop
imul
mov
push
iret
out
push
sub
mov
xorb
aas
mov
xor
pop
adc
sti
adc
lods
xchg
ficomps
sub
sbbb
das
je
cli
pushf
movsl
or
dec
movsl
inc
data16
pop
mov
imul
xchg
xor
out
push
and
fwait
cmp
xchg
mov
in
dec
and
xsha1
cmpsb
mov
xor
lcall
jnp
arpl
std
sbb
jge
mov
mov
jo
rcrb
test
je
mov
push
jp
cmp
ja
fistpll
cmp
sub
mov
out
cwtl
mov
leave
jmp
add
mov
mov
sub
push
les
addr16
xchg
and
fwait
add
mov
cmp
insl
movsb
lods
push
and
xchg
fwait
stos
loop
rorb
sub
or
rcrb
mov
aam
pop
push
jo
sti
ja
push
hlt
movb
or
jmp
mov
mov
data16
jg
pop
and
jl
jo
scas
cli
test
push
je
add
das
adc
cmc
push
cltd
adc
lock
stos
mov
lods
loope
repz
sub
xor
pop
fsub
jl
sub
dec
lods
jnp
push
and
inc
fldcw
out
jbe
sub
ja
inc
ret
jl
sub
fstpl
fists
xchg
jl
arpl
shll
sub
arpl
filds
pop
or
mulb
mov
mov
push
pop
xor
scas
test
out
mulb
inc
lret
xchg
dec
movsb
pop
mov
movsb
push
jno
or
js
jg
mov
lods
into
ficoms
scas
adc
shlb
and
call
mov
pusha
xchg
xchg
pop
adc
dec
in
lret
push
cs
pushf
xchg
jno
mov
cmpsl
jnp
push
xchg
pop
test
cmpsl
je
push
shll
mov
fs
dec
push
add
adc
and
sbb
out
pop
xchg
adc
and
lret
fwait
push
imul
cld
cmp
xchg
xor
mov
cmp
xchg
scas
xchg
xchg
outsl
orl
push
lods
mov
cwtl
mov
imul
aas
push
incl
hlt
test
push
fwait
icebp
fildl
pusha
test
mov
cmc
das
add
movsl
mov
push
stos
daa
lods
hlt
sbb
hlt
lahf
sub
xchg
lcall
push
cmpsl
pop
idivl
loop
in
das
fwait
out
les
push
adc
fnstcw
sti
movzbl
push
rorb
loop
dec
cmp
nop
loop
cld
mov
inc
dec
in
dec
aam
xchg
sbb
sub
dec
sbb
movsb
mov
out
in
xor
inc
jmp
and
sahf
sar
data16
aaa
nop
mov
aas
mov
cmc
cli
add
testb
push
mov
aad
cld
mov
int
push
inc
gs
orl
and
cli
repz
xchg
repz
inc
add
adc
push
jl
rorb
push
cmp
push
aam
mov
xor
inc
dec
test
int3
adc
pop
xor
xchg
leave
out
pop
dec
fimuls
dec
cli
out
mov
negb
sti
pop
cmpsb
rcrl
cmp
shlb
pop
imul
mov
jle
or
pop
jns
mov
dec
shll
into
cmp
and
sbb
outsb
fistpl
loop
push
adc
pop
sub
xchg
adc
fstpl
push
cwtl
sbb
gs
jmp
sub
and
sbb
ja
push
dec
insl
jno
adc
inc
roll
pop
lret
subb
add
and
pusha
push
push
gs
icebp
lods
lods
adc
add
sub
push
adc
jbe
xchg
into
push
sub
lea
xchg
cmp
lret
rorl
fiadds
jge
jae
das
rcr
popf
test
add
sahf
inc
iret
in
xchg
mov
sti
inc
pop
fldt
push
mov
mov
ret
pop
arpl
xor
lods
movb
out
mov
jbe
xchg
mov
mov
aad
pop
pop
mov
push
push
pop
adc
mov
icebp
fs
pop
xchg
icebp
and
lock
scas
mov
mov
push
in
and
mov
or
inc
dec
movsl
sti
es
xor
in
mov
mov
add
stc
ja
cmpsl
es
push
sahf
mov
mov
in
mov
out
push
mov
imul
fisttps
fs
cmp
sbb
cld
adc
in
test
iret
les
test
ss
movsb
cltd
xor
xchg
mov
cmp
int3
es
repnz
and
fwait
aad
cmpsl
mov
push
arpl
push
xor
into
fwait
jae
cwtl
loope
inc
iret
xor
addb
xchg
mov
nop
loope
sbb
mov
cmp
into
jl
adc
sbb
and
adc
scas
ljmp
mov
sahf
scas
and
mov
lods
idivl
inc
jle
cmp
push
ss
adc
fld
je
sti
in
and
add
subl
sbb
cmp
adc
mov
mov
nop
jp
and
pop
gs
cmp
inc
rolb
jge
pop
jecxz
arpl
jecxz
adc
movsl
push
negl
pop
clc
std
dec
jbe
adc
sbb
pop
rorb
imul
cmp
mov
mov
pop
in
cmp
jae
lcall
xchg
cmp
dec
jecxz
fstpl
ljmp
popa
mov
pop
jo
dec
in
mov
mov
movsb
pop
push
pop
cwtl
ficoms
stos
sub
push
inc
sub
adc
cs
or
outsb
rolb
mov
dec
mov
inc
mov
shrb
add
xlat
cmp
inc
aam
test
pop
jle
push
pop
xor
cltd
fsubrs
inc
icebp
out
cmp
cmc
add
xor
push
jbe
pop
fsubs
xchg
jl
ljmp
adc
and
push
sarb
wbinvd
loop
dec
mov
inc
push
push
inc
push
enter
dec
and
popa
loopne
or
pop
imul
mov
in
gs
int3
stos
push
icebp
inc
jb
mov
push
ljmp
scas
lret
cltd
dec
xor
push
mov
cmp
scas
out
or
inc
add
xchg
mov
or
repnz
pop
cmp
popl
cmp
mov
lods
enter
es
cmc
cmp
loop
dec
dec
mov
add
lea
jmp
les
inc
add
cli
popa
jb
rol
xchg
lock
push
mov
sub
stos
xchg
cmp
push
xor
sbb
mov
mov
mov
push
cwtl
gs
outsb
or
pop
ret
mov
sti
ljmp
cs
ss
pop
loop
stc
add
shr
cld
insb
pop
adcl
mov
lods
xchg
loopne
and
mov
adc
inc
mov
lret
push
push
jle
fsubrs
pushf
jbe
and
pop
gs
cmp
cltd
push
and
pop
mov
push
mov
mov
adc
lret
popf
fmuls
pop
jecxz
add
sti
faddl
mov
mov
iret
xchg
xchg
xchg
adc
jmp
dec
sti
jbe
push
add
adc
loope
fwait
jbe
lcall
xor
adc
pushf
ror
cmp
and
cmpsb
mov
int
or
cmp
mov
mov
lret
push
adc
push
xor
addl
imull
adc
iret
out
adc
ficompl
dec
push
fcoml
lock
xchg
cwtl
shrl
cmp
dec
inc
out
test
insb
cmp
stos
cs
gs
popf
add
adc
int3
pop
outsl
wrmsr
push
in
push
insl
loopne
arpl
dec
jg
iret
fdivs
ficompl
add
mov
push
cs
adcl
cmpsb
aam
cmpsb
imul
dec
xor
jns
push
pop
cmp
add
adc
sub
imul
cmp
inc
insl
mov
rcrl
pop
sti
jge
push
aas
mov
testb
mov
fs
and
push
gs
mov
dec
adc
cwtl
sub
imul
mov
or
inc
dec
out
stc
dec
les
push
lock
sbb
lods
or
leave
test
sub
inc
popa
rorl
add
jbe
into
test
pushf
fistl
int
arpl
aaa
mov
leave
mov
icebp
adc
subl
sbb
repz
icebp
sub
stos
push
test
sub
aas
or
stc
inc
das
popf
call
xchg
mov
lea
xchg
cmp
push
mov
push
push
imul
mov
and
jns
cmp
cs
xchg
sbb
adc
jno
int
inc
and
push
in
dec
pop
jmp
mov
add
mov
pushw
loop
sbb
pop
pop
lret
dec
shll
ja
cld
adc
cmc
inc
lcall
dec
cltd
mov
dec
fstps
das
scas
xor
and
add
aam
jbe
cmp
push
xchg
mull
push
pop
dec
and
scas
mov
fstp
imul
stc
mov
aam
sub
test
push
push
decl
dec
outsb
aas
das
outsb
pop
adc
cmp
dec
adc
aam
dec
xor
pop
stc
cmp
cmp
and
insl
aas
xor
stos
xchg
cmp
jno
sub
fisubl
jge,pt
cmp
mov
mov
cmpsb
push
lds
mov
pop
inc
and
adc
gs
int
cmp
sub
mov
inc
pop
in
shlb
mov
push
rolb
add
loop
dec
xor
mov
inc
mov
movsl
mov
cwtl
fwait
dec
xchg
push
mov
js
push
jb
adc
lret
pop
push
lods
xchg
xchg
leave
sub
push
lds
stos
xchg
out
dec
clc
je
or
mov
and
mov
pop
loopne
pop
aas
mov
cmp
in
xor
sbb
adc
out
xor
sti
jnp,pn
cwtl
mov
int
pop
add
insl
hlt
es
adc
push
dec
xchg
fdiv
sbb
das
rorl
sarb
mov
lods
imul
mov
push
push
js
rcr
shll
mov
mov
pop
cld
dec
leave
cmp
push
mov
nop
shrl
out
dec
out
imul
pop
or
lahf
bound
jo
mov
insl
mov
je
push
shlb
jl
sbb
lock
mov
dec
daa
mov
aad
std
cmp
sbb
add
mov
loopne
into
pop
jno
lea
pop
push
fistl
inc
jmp
mov
popa
and
dec
js
mov
xlat
cmp
stos
imul
cwtl
dec
bnd
ret
add
or
iret
cltd
out
jge
and
fsubrl
push
cmp
mov
es
lret
sub
xor
ffree
imul
lea
or
xchg
int3
and
add
add
ret
mull
out
jmp
add
in
add
cmp
jg
sub
mov
sub
lahf
lea
outsl
scas
and
shll
fildll
ret
std
adc
fistl
inc
mov
inc
mov
data16
rorl
inc
push
cmpsl
inc
icebp
and
mov
imull
call
inc
dec
mov
sbb
stos
insl
movsb
mov
out
mov
sahf
adc
mov
sub
add
xor
notb
js
cli
cmp
jne
fildl
out
out
inc
insl
ficoml
pop
test
xor
adc
mov
js
dec
es
xchg
jle
rcr
rorl
dec
xchg
mov
lcall
xor
lods
popf
push
out
mov
leave
in
stos
loopne
mov
push
loopne
test
gs
ret
push
inc
and
cmp
cmp
cmpsb
pop
cmp
out
int3
jne
cld
jae
jno
push
pop
jns
sub
lret
jmp
mov
shlb
add
add
in
adc
dec
test
mov
lcall
clc
in
dec
sbb
shlb
push
stc
ss
mov
pop
iret
aas
dec
sub
sbb
inc
adc
lods
mov
es
popf
xchg
dec
test
push
or
adc
clc
dec
push
fiadds
cltd
cmp
mull
fcom
sar
cmpsb
sub
nop
push
loopne
jg
adc
aaa
call
icebp
inc
and
mov
cmc
adc
out
inc
and
imul
cltd
imul
in
xchg
ljmp
mov
je
fcmovu
push
jp
and
pop
stos
dec
push
pop
lret
adc
xor
jle
inc
push
pop
inc
sub
imul
dec
scas
imul
pop
std
push
jb
outsb
in
xchg
xor
repz
add
mov
lret
stos
rcl
or
lds
xchg
pop
lahf
push
xchg
jae
pop
cmpsl
fdivrs
fdiv
mov
mov
insb
out
cltd
adc
jl
mov
shrb
or
xor
data16
addb
jbe
xchg
mov
fildll
push
movsb
or
outsb
scas
xchg
mov
insl
inc
sysret
sub
inc
sar
lds
mov
addl
and
dec
sbb
sbb
and
mov
stos
test
mov
push
dec
scas
push
js
rcll
pop
dec
jmp
mov
mov
leave
das
mov
ds
add
or
jno
xchg
bound
lahf
adc
pop
mov
jno
loop
insb
arpl
dec
fs
sbb
cmp
es
sub
ret
addr16
in
mov
xor
sub
jl
js
ss
movsl
loope
jne
fdivs
cmp
xor
sbb
push
mov
pop
push
push
fcoms
movl
aas
out
inc
adc
push
inc
adc
mov
or
pop
hlt
inc
sub
loop
lea
jecxz
in
test
ja
shlb
popa
movntq
push
aas
push
test
cmp
adc
stos
in
mov
or
pop
sarb
dec
xchg
jmp
push
shlb
rcrl
shrl
pop
gs
push
add
adc
cmp
inc
aad
ficoms
out
add
cmp
orb
gs
fnstsw
fwait
jns
xchg
in
jno
dec
sub
repnz
mov
sbb
icebp
roll
xor
push
lods
das
push
iret
jns
cmp
leave
xchg
adc
out
xchg
fsubrp
jno
lods
xchg
xor
pop
push
inc
pop
ds
and
jo
or
jnp
push
or
dec
enter
movl
xchg
lods
lea
repz
scas
inc
test
mov
inc
fisttpll
pusha
imul
xor
push
addr16
clc
aaa
sar
sbb
or
push
mov
es
fcoms
shlb
fsubrs
lods
cmp
pop
aam
pop
cmp
xor
in
mov
adc
std
sbb
dec
repz
hlt
call
mov
arpl
mulb
jl
frstor
ret
sahf
dec
fwait
mov
jmp
push
xor
movsb
inc
sbb
cmp
adc
ja
popf
lea
fldcw
push
push
inc
jle
je
test
movntq
out
cmpl
push
icebp
ds
test
shll
loopne
xchg
pusha
pop
cmp
aaa
xchg
adc
or
outsb
shlb
add
adc
mull
mov
cmc
dec
test
loopne
imul
jbe
pop
test
dec
mov
mov
mov
ss
ret
dec
sub
in
push
adcl
mov
sub
insb
mov
fdivs
aad
xor
pop
xor
sub
aad
movsb
ret
out
xchg
sahf
or
pop
pop
clc
fsubrs
fstl
adc
call
mov
sub
sahf
sbb
xrelease
mov
pop
cmc
ljmp
ret
sub
push
xchg
shll
inc
das
pop
fwait
xchg
out
call
xchg
xchg
int
dec
xchg
in
shl
pop
shll
fistl
insb
add
call
fnstcw
sbb
les
loope
xchg
lock
dec
dec
and
jae
adc
mov
js
dec
pop
ja
sbb
fadd
neg
std
lock
sub
adc
idivb
sub
cmp
sbb
incb
fnstenv
loop
iret
inc
cs
cmp
es
std
or
out
ss
insb
fld
xchg
dec
pop
bound
cmp
xor
out
int
je
daa
mov
ficompl
addb
inc
mov
mov
les
out
push
inc
rorb
loopne
cmp
fmull
ret
inc
xor
fsts
sahf
jbe
add
fcmovu
xchg
sub
adc
ret
and
in
mov
jb
mov
je
js
int
out
loope
jns
push
pop
push
add
mov
test
aaa
adc
ror
push
jne
out
pop
and
nop
lea
push
stc
pop
sub
xchg
jle
leave
pusha
fnstsw
jnp
sbb
or
in
xchg
xor
shrl
enter
addb
xor
das
dec
ret
dec
lods
jg
lea
mov
fisubrs
sub
jle
popa
push
xchg
dec
scas
sub
or
mov
jbe
sub
xchg
xchg
jae
cmp
rcrl
push
mov
push
fcmovnu
mov
mov
adc
or
mov
xor
aas
jle
lea
mov
outsb
push
popa
popa
cmp
xchg
fnstcw
cmp
cmp
out
pop
xchg
shll
sbb
mov
fisttps
arpl
and
aaa
mov
xchg
cmp
or
cli
cmc
cwtl
dec
out
push
cmp
pushf
andl
adc
or
popa
mov
sbb
das
stc
ret
pop
pop
ret
imul
cwtl
add
icebp
in
es
pop
imulb
jle
sbb
sahf
pop
mov
sahf
push
pop
inc
mov
push
sbb
pop
sbbl
jno
rorl
xor
stos
pop
lock
and
add
jne
data16
aam
adc
mov
sbb
xlat
mov
and
jl
xor
sarl
notb
mov
std
mov
mov
xor
or
jg
loope
sbb
cmp
xchg
inc
and
ficomps
shr
dec
and
lods
dec
sbb
dec
outsb
mov
add
push
add
adc
dec
test
popa
mov
ret
mov
movsl
sub
sahf
cltd
push
loop
cmp
fadds
mov
outsl
mov
mov
sub
ljmp
enter
idivb
pop
lods
xchg
icebp
pop
out
mov
jno
out
mov
shlb
mov
sbb
imul
cwtl
jae
cmc
cmp
cld
sti
std
push
jnp
xchg
std
sub
mov
push
or
mov
inc
aad
outsl
and
es
mov
loop
push
inc
fiadds
test
inc
dec
dec
stos
loopne
dec
cmpsl
int
sbb
fldl
js
lcall
sahf
scas
das
ja
neg
js
mov
mov
add
ret
cltd
loop
cwtl
imull
add
into
iret
cld
inc
iret
stos
rorl
push
out
sub
enter
push
xor
popf
xor
cmp
gs
pushf
daa
in
mov
push
std
arpl
loop
cmp
push
fwait
movsl
add
cmp
push
rcl
iret
adc
les
and
sti
add
les
cmc
push
insb
adc
mov
mov
jbe
push
ss
cmp
sub
loopne
dec
ljmp
push
inc
ret
adc
lcall
xchg
pop
mov
or
xor
add
sub
call
ljmp
stos
jns
loope
inc
shll
scas
push
movsl
mov
jbe
xor
dec
mov
andl
outsl
xor
test
sub
and
cwtl
cmp
stc
xchg
stos
cld
sub
popl
lds
lea
push
test
mov
dec
xor
xor
pop
xchg
mov
test
push
mov
aad
mov
imul
dec
hlt
stos
popa
inc
mov
dec
fisubs
lods
scas
lea
das
mov
lock
aaa
cmpsb
mov
xchg
fsubrp
repnz
nop
ljmp
sbb
add
jl
lret
inc
xlat
pushf
adc
dec
test
jb
add
add
aam
add
adc
push
test
lahf
cltd
addr16
cs
xor
and
call
push
inc
mov
xor
mov
push
mov
mov
push
cmp
iret
mov
dec
xor
lock
lods
dec
mov
jl
mov
ja
jnp
mov
rorl
loopne
leave
dec
mov
bnd
stos
cmp
fucomp
cmp
mov
testl
popa
jecxz
cmp
fiadds
call
ja
aas
ds
outsb
lret
clc
inc
xchg
les
faddl
fbld
out
sub
jl
jnp
or
sbb
sbb
cs
mov
lods
inc
jns
and
mov
mov
roll
dec
adc
hlt
xlat
fsubl
mov
mov
sarb
jo
or
inc
push
test
mov
pop
daa
in
lods
icebp
push
dec
mov
mov
fbld
das
movb
pushl
adc
pop
pop
popa
mov
popl
xor
arpl
mov
out
in
insl
inc
sti
dec
and
xor
push
insl
xor
adc
or
sbb
aaa
mov
repnz
mov
sbb
ljmp
js
pop
ficomps
scas
or
push
mov
ja
aaa
mov
test
int
loop
cmp
jns
pop
xor
int
mov
fmuls
dec
pop
pop
push
mov
iret
xor
sub
push
sub
insl
rcll
add
cld
pop
sbb
cmp
rolb
xchg
mov
je
sbb
into
addl
daa
int
pop
mov
lods
pusha
pop
inc
lahf
add
ficomps
dec
clc
sub
shlb
jle
ljmp
pop
in
mov
mov
pop
pop
jne
jge
mov
inc
fwait
clc
and
cli
aad
xor
stc
sub
out
jo
out
adc
pop
lds
xchg
or
cmp
adc
imul
push
sub
int
mov
ret
sbb
jmp
fisttpl
mov
pop
nop
into
loope
inc
stc
xchg
lcall
xor
testb
imul
popa
jmp
mov
push
or
or
bound
cmp
mov
pop
cmp
lfs
std
pop
push
xor
xor
or
add
or
je
xlat
xlat
rcll
push
pop
out
ljmp
xor
out
push
sub
repz
fsub
sub
mov
jno
cmp
lods
jns
push
imul
mov
movsb
inc
sub
mov
sub
das
mov
mov
jecxz
andb
dec
cwtl
adc
push
call
sub
ss
pop
mov
addr16
dec
lods
jp
rcrl
in
ret
push
mov
pop
xchg
cwtl
movb
xchg
in
inc
mov
push
hlt
out
mov
xchg
xor
pop
js
nop
inc
scas
jb
aaa
mov
cwtl
xchg
rcl
test
mov
insl
or
mov
xchg
out
outsb
pop
push
fcmovne
lods
jnp
popa
in
aad
xlat
rcll
dec
arpl
ror
push
lods
push
shll
jl
push
and
rcl
stos
cs
popf
pop
scas
std
xchg
mov
mov
mov
test
inc
call
xor
fisttpl
dec
subl
shll
cmp
addr16
dec
mov
imulb
pop
and
inc
mov
fnstsw
dec
in
and
iret
mov
aas
mov
mov
jns
sbb
ljmp
dec
adc
int
or
aad
jmp
mov
ficomps
data16
test
into
fcomip
cld
pop
ficoml
insl
pop
aas
inc
pop
imul
cmp
mov
aad
cmp
pusha
inc
pop
xchg
es
hlt
mov
add
xchg
jae
rclb
push
mov
movsb
arpl
pop
negb
jmp
pop
adc
inc
mov
sti
in
in
leave
sarl
xchg
test
repnz
jo
cld
mov
xor
push
pop
out
test
mov
xor
outsl
mov
scas
jl
push
xor
std
cmp
add
mov
std
movsl
adc
mov
dec
lret
ljmp
cltd
fwait
sbbb
adc
leave
test
and
pop
lcall
lods
rorl
inc
dec
mov
mov
push
xchg
enter
lods
imul
xchg
pushf
mov
fwait
push
jae
add
popl
mov
add
lcall
call
dec
shlb
jle
pop
int3
push
push
fidivrl
sbb
xor
repnz
adc
imul
fs
cltd
xchg
ficompl
jecxz
adc
pop
fidivrl
mov
cmp
ja
aad
loope
aas
jl
sub
addr16
lods
pop
sbb
iret
mov
pop
xor
addr16
stos
lods
incl
fdivl
jo
clc
dec
jno
in
and
jae
cld
imul
aad
aaa
sbb
mov
sub
and
or
loop
jecxz
aam
mov
lret
leave
ds
mov
xor
testl
insl
cltd
dec
xchg
cwtl
dec
xchg
adc
pop
dec
sub
lods
mov
es
lret
inc
insl
mov
mov
mov
fildll
mov
shl
xchg
addr16
mov
insb
dec
fnsave
mov
cltd
mul
loopne
pusha
cmp
ja
add
rcrl
bound
fbld
dec
out
flds
test
fmull
loop
popf
repz
test
insb
add
outsl
ret
cltd
lds
or
and
shlb
pusha
pop
fs
dec
test
adc
inc
jmp
add
mov
mov
dec
ret
add
outsl
dec
push
sub
push
push
push
mov
popf
lds
imul
mov
shrl
xchg
outsl
mov
das
inc
push
mov
mov
out
add
add
inc
pop
shl
lcall
mull
mov
rorb
push
xchg
jg
in
test
shrl
xchg
dec
es
adc
fisubs
mov
add
out
arpl
sub
dec
xchg
and
push
popa
out
xor
decb
aam
aam
cld
repz
or
mov
arpl
stos
add
lea
int3
popf
adc
scas
negb
test
jl
pushf
push
mov
xchg
sub
or
stc
cmp
jge
icebp
jge
mov
xor
mov
pop
and
in
xchg
and
cmc
or
jle
xlat
xchg
lcall
bound
ja
enterw
sub
lods
mov
and
nop
push
mov
mov
inc
adc
js
push
inc
dec
aad
dec
xor
sub
mov
adc
fs
orl
mov
pop
pop
jmp
add
stos
cmp
dec
insl
jl
mov
push
out
xlat
lods
inc
outsb
ror
jecxz
xorb
mov
cld
les
jge
mov
mov
gs
push
test
test
mov
cmp
adc
pop
sub
jns
test
std
lock
repnz
popl
sbb
mov
dec
fdivrp
shl
cmp
cmc
push
call
cltd
jo
add
addr16
in
imul
repnz
sub
mov
push
dec
sbb
stos
fistl
pusha
jg
movsl
xorl
in
push
sub
std
mov
lods
repz
push
xor
stos
and
mov
xor
pop
pop
test
out
ret
lret
dec
ss
xor
sub
shlb
stos
push
das
push
movsl
dec
push
or
ljmp
cld
stc
push
add
imulb
repz
sub
or
fwait
into
out
mov
rclb
imul
in
and
test
add
les
shll
lods
icebp
aam
add
add
fcmovbe
mov
shl
dec
bound
mov
jmp
cmpsl
cltd
mov
stos
sbb
jns
orl
pop
xchg
mov
daa
jb
xorl
or
mov
sub
fs
std
mov
adc
pop
test
sub
imull
cmp
jno
inc
call
outsl
cmp
fcomi
test
push
sbb
les
dec
rcrb
rcrl
imul
pop
fnstcw
icebp
cmp
mov
mov
nop
push
js
imul
leave
xchg
push
jae
mov
add
adc
rcrl
jne
in
sbb
cmp
and
xchg
and
adc
movsb
sahf
std
sarb
mov
mov
sub
out
sbbb
lods
je
inc
rcrb
gs
and
imul
add
lahf
sahf
fstpl
inc
mov
popf
dec
jge
sbb
cmp
mov
int
xchg
push
mov
push
shrl
andb
sub
lods
fyl2x
inc
pop
jmp
mov
xchg
push
dec
push
out
pop
fimuls
sub
sbb
pop
aam
pop
mov
roll
add
mov
pop
inc
je
loopne
scas
push
dec
sbb
int3
xlat
imul
dec
repz
lock
jmp
push
dec
loop
test
shll
les
ret
test
jg
stc
pop
test
nop
das
dec
mov
loop
les
insb
incl
in
stos
lcall
xchg
js
dec
lcall
adc
rcrb
add
dec
pop
mov
sti
pop
jle
xchg
lock
out
pushf
mov
xchg
pop
cld
arpl
and
imulb
enter
jo
mov
pop
jne
loope
xor
in
sub
xchg
ss
dec
inc
dec
mov
cmp
stos
inc
push
mov
cmp
popf
pop
mov
ret
lret
mov
fcmovnbe
xchg
aad
fisubs
fidivrl
fsub
xchg
pop
xor
subl
movsl
inc
or
and
lods
inc
clc
test
int3
cmovge
sbb
inc
jle
into
jecxz
mov
xor
push
and
sbb
mov
push
adc
jmp
mov
jecxz
cmpl
sbb
lock
and
int3
adc
insl
xor
xchg
je
shrb
push
scas
fadds
in
lea
jns
xor
dec
push
xor
and
adc
fstpl
add
or
pop
fstps
cwtl
and
sbb
dec
jecxz
xor
pop
lahf
into
adc
das
jb
das
jl
mov
jmp
xchg
imul
lret
lret
in
lcall
mov
and
sbb
fiadds
int
xor
or
rcll
add
or
push
add
cwtl
cmpl
iret
lods
pop
xlat
ficomps
push
pop
pop
scas
or
lea
mov
pop
pop
cmp
sbb
int
andl
stos
stc
sbb
xor
pop
aas
cld
mov
negb
jecxz
repnz
cmp
xor
add
jmp
pop
out
cld
fcompl
sub
lret
out
jecxz
mov
pop
dec
mov
enter
add
movl
out
cmp
xchg
lods
ret
pop
push
mov
cmc
xchg
daa
jmp
cmpb
in
rolb
push
cltd
in
jo
unpckhps
sub
mov
sbb
xchg
fs
lret
mov
sbb
fwait
aad
es
sbb
or
mov
fnstenv
das
add
jnp
or
cwtl
pop
cli
inc
and
mov
popf
mov
mov
cmp
sub
mov
lods
adc
loopne
jbe
mov
sub
loop
xor
mov
jg
loopne
stos
mov
add
dec
jne
jnp
pop
aam
adc
adc
sbb
in
cld
fdivrs
xchg
dec
inc
pop
stos
mov
outsb
shlb
add
jp
lcall
sbb
push
add
jo
mov
push
sub
xor
loopne
xchg
inc
jns
mov
jecxz
mov
pop
mov
sub
xor
outsb
cmp
xor
fstl
fwait
pop
fpatan
xor
sub
notl
xor
jo
stos
jb
je
shlb
or
mov
insl
adc
inc
push
pushf
xchg
and
cmp
pop
xor
push
aam
jnp
fcmove
ss
xchg
repz
add
into
and
jl
enter
ror
movsl
cmc
sbb
stc
push
sbb
int
in
xchg
push
fldenv
int
movsb
icebp
es
stos
add
and
icebp
xor
das
out
aas
clc
std
sbb
imull
sbb
xchg
adc
cmp
cwtl
movsb
repnz
jno
adc
movsl
inc
jle
into
ljmp
iret
sar
lret
sbb
and
lods
rolb
aaa
test
jb
imul
dec
inc
jbe
cwtl
fdivrs
mov
jae
lods
add
stos
cwtl
adc
inc
inc
mov
mov
gs
and
ret
adc
bound
cmp
mov
or
lea
mov
arpl
xor
mov
aaa
mov
or
sub
pop
nop
or
dec
add
xorb
push
scas
repnz
cmp
les
mov
inc
add
mov
push
mov
mov
scas
push
mov
insb
fs
adc
dec
inc
cmpsb
loope
lahf
fnsave
sbb
into
and
jns
mov
orl
dec
push
icebp
popf
fsts
iret
les
cmc
stc
or
mov
adc
insl
adc
rol
xchg
pop
imul
pop
ret
pop
and
loope
adc
hlt
jecxz
add
xor
stc
in
cmc
mov
lahf
jo
mov
add
or
add
cmp
ja
jnp
add
int3
or
push
imul
xchg
stos
xchg
sub
movsb
aad
jle
loopne
and
filds
gs
mov
clc
push
xchg
pop
andb
pushf
stc
xchg
bound
inc
stos
push
pop
or
jnp
and
push
pop
lods
lea
jbe
mov
adc
push
cmpsl
mov
push
rdmsr
aaa
ja
xchg
fsub
mov
jno
repnz
hlt
jmp
fdivs
jecxz
jge
fisttpl
push
pop
and
mov
jl
adc
adc
mov
fistl
or
mov
sbb
cmp
stos
inc
aaa
lock
dec
add
in
popf
mov
xorb
loop
push
mov
mov
adc
lock
test
sbb
std
xchg
cmpsb
mov
push
cs
lds
iret
sub
jnp
and
push
dec
jmp
and
imul
dec
orb
mov
add
mov
mov
testb
pop
jle
mov
jle
mov
inc
jp
xchg
mov
scas
hlt
mov
loope
or
daa
dec
out
mov
aam
xchg
lods
mov
dec
ret
ficomps
mov
xchg
add
int
xchg
sub
inc
stc
out
sub
or
rcrb
or
clc
push
sbb
aas
push
test
idiv
cmovp
push
cmpsl
shl
fidivrl
cmp
scas
sbb
lods
mov
inc
jb
ffreep
add
fistpl
addr16
dec
mov
fldenv
cld
push
adc
aad
scas
pop
xor
xchg
lods
xor
repz
jbe
cmpl
xchg
mov
sub
adcl
xchg
lret
sahf
jg
cmpsl
lahf
pop
imul
fwait
mov
loope
cld
xchg
sbb
jmp
mov
xchg
xchg
mov
imul
pop
mov
xchg
and
in
mov
scas
fs
add
leave
ret
or
cmp
lcallw
repnz
ds
cmp
pop
movsl
int3
shl
mov
outsl
adc
jmp
cli
gs
mov
adc
dec
ja
fidivs
add
pop
or
mov
push
mov
xchg
rcl
pop
ret
jecxz
shll
sarl
adc
add
lods
loopne
out
cmp
in
xor
adc
and
paddd
adc
repnz
sub
mov
jmp
inc
dec
mov
jmp
pmaddwd
mov
movsl
or
int3
mov
shl
sbb
sbb
ret
mov
es
xchg
aas
mull
inc
insb
movsl
xchg
mov
inc
jp
loope
mov
imul
add
fs
mov
in
loop
adc
lds
cmp
pusha
mov
pop
stc
scas
aas
outsb
or
xchg
push
push
lcall
sbb
push
or
leave
orb
stos
rcl
cmpsb
and
inc
pushf
repz
ror
push
movsb
add
clc
jo
or
stos
rorb
aaa
xchg
in
or
and
jns
rorl
adc
hlt
jecxz
orl
jle
pop
je
in
mov
clc
mov
jne
dec
xor
lock
dec
mov
xchg
push
xor
loopne
inc
mov
fwait
in
xor
jne
adc
dec
mov
mov
sub
add
nop
bound
into
mov
jb
fnstsw
cmpsl
jb
cmp
add
dec
jb
dec
jo
ljmp
jecxz
insb
inc
cmp
xor
inc
mov
insl
imul
and
jle
orl
lahf
sbb
xchg
xchg
cmpsl
je
ret
test
pop
xlat
fidivl
push
jecxz
adc
xor
cli
xor
out
fwait
jmp
mov
lret
pop
cwtl
cmp
arpl
mov
add
xor
sbb
xchg
out
in
stos
push
pop
and
nop
cmp
sbb
dec
jg
or
dec
jp
xor
adc
arpl
nop
int
cli
aad
test
adc
mov
cmp
imul
xchg
lcall
cmpsl
movsb
subb
push
mov
nop
dec
aad
dec
bound
leave
adc
pop
ljmp
nop
dec
mov
insb
andl
xchg
mov
notb
in
or
jne
push
into
lcall
ds
das
pop
insb
ror
repz
xchg
mov
and
mov
mov
rcrl
mov
cltd
push
scas
dec
sbb
dec
dec
cmp
aas
xchg
adc
and
xor
int
pop
mov
jle
int3
xchg
divl
push
sbb
xor
call
cmp
cmp
mov
daa
jmp
popf
xchg
packsswb
repz
pop
cmpsb
scas
jno
ss
cmp
mov
mov
icebp
jge
xor
push
mov
push
push
mov
sbb
xchg
out
xchg
ret
jg
imul
add
lock
call
xor
mov
inc
fldenv
sub
shll
adcb
jae
jb
sub
sarb
pop
cmp
cmp
adc
mov
pushf
adc
pop
mov
jo
xchg
fnstcw
mov
aad
mov
push
out
out
cmp
sti
mov
xor
mov
int
jp
adc
jb
mov
lea
sbb
cmpsl
sbbl
cmp
mov
lcall
mov
mov
mov
inc
mov
xor
jg
mov
xchg
jecxz
pop
outsb
xor
dec
clc
scas
sbb
pop
push
sub
mov
sahf
mov
lods
cmp
std
test
enter
xchg
xchg
adc
outsl
sub
ficoms
add
imul
push
dec
xor
mull
pop
add
or
xchg
push
push
push
jbe
ds
or
mov
iret
inc
out
xchg
lahf
test
push
enter
les
mov
insb
dec
mov
sbb
mov
lret
int
test
cmp
push
and
loop
test
sub
push
imul
arpl
cmp
mov
test
test
out
mov
xchg
stos
shr
mov
insl
pop
fwait
mov
es
outsb
xorb
pop
and
lea
sub
std
test
pop
je
fs
push
fs
add
xchg
cmp
scas
hlt
sarl
xchg
test
aad
int
fcomps
and
push
and
sbb
bound
xor
lea
les
nop
shl
pop
lcall
pop
push
add
cmpl
std
sub
in
cmpsl
mov
push
hlt
mov
in
jae
mov
repnz
pop
rcrb
mov
sti
outsb
mov
or
in
mov
ret
mov
xor
mov
push
push
jmp
pop
icebp
incb
add
xchg
inc
stos
rorl
imul
sub
nop
rcrb
jecxz
movsb
negb
andnps
fisubrl
repz
enter
clc
jmp
jne
fdivrs
sbb
add
dec
int
ljmp
xor
mov
push
out
je
cmp
jle
ret
sbb
xchg
adc
xacquire
fwait
cmp
pop
mov
lahf
fabs
cld
jge
pop
loop
pop
xchg
aad
imul
lods
mov
les
xchg
lret
insl
sub
arpl
fidivl
or
pop
push
out
test
ret
test
jns
mov
sub
add
out
sub
mov
xchg
repz
push
loop
pop
hlt
iret
clc
ljmp
mov
nop
inc
fisubrl
push
push
insl
adc
lea
inc
sub
mov
sbb
lods
ljmp
adc
mov
std
inc
jp
jp
nop
or
cld
cmp
lds
xor
mov
adc
push
cmpsb
cmp
inc
mov
mov
out
pushl
or
jp
and
push
fs
mov
cmp
fwait
dec
push
das
push
inc
loopne
scas
cmp
pusha
push
pop
dec
lods
ret
sahf
lds
in
cmp
bound
jle
dec
les
call
outsb
sbb
jl
cwtl
dec
jg
mov
cmpl
lret
aaa
push
jle,pt
sub
js
test
mov
stc
scas
fiadds
movaps
push
nop
inc
das
pushf
lahf
mov
dec
addr16
fldlg2
lahf
inc
dec
mov
mull
inc
add
shlb
push
add
dec
mov
ljmp
adc
das
push
lea
cmp
stos
jmp
mov
xchg
fnstcw
loope
xchg
push
adc
sbb
xchg
lods
jecxz
loop
adc
out
in
push
ficomps
bound
jne
sbb
and
js
cli
inc
cwtl
ret
cld
hlt
inc
jmp
sub
inc
and
mov
xchg
mov
fisttpl
lods
call
adc
cltd
xchg
rcl
pop
mov
sti
scas
jno
push
and
push
icebp
pop
jp
adc
or
es
sahf
inc
mov
jle
insb
test
sahf
mov
addb
jnp
add
mov
adc
addr16
test
out
pop
lds
inc
dec
jp
leave
das
and
roll
lret
jge
dec
adc
aas
push
lret
cmp
insb
shlb
dec
jp
and
xor
jle
push
aaa
jnp
lock
jle
jns
push
fisubrs
mov
js
fwait
rclb
or
xchg
xchg
mov
cmp
mov
and
bound
cmpsl
insb
sbb
rcrl
jae
imul
scas
int3
pusha
xchg
sub
sub
mov
push
cmp
pop
sub
mov
or
xor
cmp
push
mov
sub
add
leave
pop
inc
pop
inc
cltd
jle
sub
push
fadds
mov
lds
jns
inc
out
ficompl
cld
push
mov
xchg
ret
push
into
ja
lahf
pop
or
xchg
push
dec
inc
popl
into
out
mov
dec
dec
es
mov
or
adcl
xchg
jae
dec
xchg
pusha
add
js
xor
push
push
add
push
int
pushf
push
inc
mov
pop
inc
push
and
adcl
jb
and
and
insl
lret
add
sub
and
push
pop
ljmp
or
mov
ret
inc
jbe
xor
mov
ss
lret
inc
jae
jns
dec
stos
push
or
mov
stc
xor
rol
iret
ja
adc
or
int
lea
push
pop
mov
std
xchg
mov
pop
push
cmp
lahf
mov
mov
jge
xlat
test
or
inc
jmp
insb
sahf
dec
cmpsb
fwait
out
inc
jg
sbb
mov
lret
mov
xchg
pop
rclb
add
dec
inc
fcmovne
mov
inc
ljmp
push
mov
or
jg
mov
pop
cld
cmpsb
push
sbb
dec
std
ret
xor
fimuls
mov
xchg
ret
pop
leave
inc
cmp
pop
test
int3
add
das
add
pop
lret
fiadds
call
xor
test
xor
and
cmp
mov
sub
inc
cmpsb
push
mov
loopne
sbb
std
pop
fdivr
xchg
mov
out
movsl
scas
pop
rorb
jb
jge
pusha
and
ja
mov
test
loope
mov
dec
pop
mov
fstps
lods
insl
sbb
add
pop
jns
jb
inc
cmp
pop
jl
mov
movsl
jae
sbb
cmp
sub
jne
cmpsl
scas
jge
sbb
push
mov
jns
jo
sbb
stos
cmc
and
cmp
outsb
fdivl
add
jbe
mov
cwtl
or
es
addr16
mov
aas
imul
xor
adc
jge
add
adc
mov
lods
pop
push
dec
in
cmp
movsl
sub
mov
and
push
adc
fisttps
push
mov
sti
mov
cs
adcl
mull
xchg
xor
jb
ljmp
daa
leave
cmpl
or
sbb
rorl
ljmp
xchg
mov
ljmp
fld
mov
cmp
pop
mov
adc
and
fadd
adc
push
mov
nop
sub
lea
cmp
aas
add
insb
scas
fistpl
push
out
dec
mov
pop
mov
in
xor
jl
shl
mov
rorb
fdivrs
into
dec
add
in
in
adc
mov
xchg
ljmp
xchg
or
sub
xlat
mov
icebp
xchg
addl
hlt
cmpsl
movsl
aas
pop
mov
lea
pop
push
jl
lock
mov
scas
std
add
or
or
dec
or
jecxz
add
loop
jbe
mov
inc
xor
fscale
push
fisubrs
jo
leave
les
xor
jmp
out
jp
or
ds
in
fwait
lret
insl
xchg
sbbb
pop
xchg
push
aas
lahf
mov
cli
xor
inc
sbb
mov
and
dec
cli
jl
fwait
and
into
sar
jno
testb
push
testl
adc
jmp
fnstsw
cmp
pop
aad
jecxz
lret
es
adc
les
pop
ret
fcoml
ret
sbb
jae
push
rorl
lahf
sti
mov
cmp
inc
lret
pop
jle
push
insb
add
sub
cli
test
cli
inc
pushf
sbb
xchg
lods
loop
fwait
dec
xchg
xlat
mov
andb
fstl
cs
mov
mov
fldl2e
xchg
faddp
cmc
xchg
repz
hlt
dec
cmp
xor
es
addr16
incb
xchg
mov
loopne
mov
or
stc
sbb
and
mov
add
adc
and
je
adc
pop
aas
pusha
icebp
inc
mov
mov
imul
inc
sub
pop
pop
sbb
sub
pushf
xchg
call
or
jg
call
clc
pop
in
jecxz
out
pop
fsubrp
lds
sub
or
adc
jno
push
pop
pop
mov
stos
jb
lret
jb
pop
add
call
addr16
add
daa
jge
mov
fisubs
enter
jmp
je
jecxz
jp
or
lds
inc
js
xchg
inc
incl
test
in
push
sub
clc
mov
cmpsb
rclb
or
iret
repnz
mov
idiv
and
mov
ljmp
cltd
xlat
mov
pop
idivb
xor
mov
test
cmp
pusha
lcall
xor
mov
subl
enter
jo
lcall
xor
das
inc
adc
push
push
repz
sbb
jle
mov
push
jg
and
mov
xor
ret
cmp
mov
stos
mov
out
adc
or
arpl
lods
sbb
push
xchg
arpl
lcall
jl
subl
add
xchg
cli
push
adc
push
fidivrl
in
cmpsl
jmp
xlat
fwait
push
lods
popa
mov
test
ljmp
cmp
push
leave
fs
cmp
loope
mov
out
scas
mov
or
sub
jnp
iret
popf
sub
jmp
add
sar
cmp
xchg
jmp
lret
sub
jmp
lds
add
or
push
pushf
inc
dec
scas
js
adc
pop
xchg
movsl
jb
shlb
push
sbb
mov
pop
pop
ficomps
and
mov
jmp
rcr
loopne
inc
andb
mov
sbb
mov
in
adc
andl
inc
mov
mov
mov
cmpsb
dec
adc
adcl
test
loop
loop
and
lret
push
inc
adc
je
jo
mov
adc
dec
inc
mov
add
ficompl
pop
lret
lds
fists
neg
stos
inc
xor
mov
mov
mov
repz
lahf
or
rcll
shl
or
mov
push
mov
or
pop
fwait
adc
xor
dec
mov
cmp
mov
sbb
mov
fistpll
insb
aas
push
sub
in
adc
mov
mov
or
fsubr
cmp
sub
pop
pop
test
add
fbstp
mov
push
xor
inc
lcall
pop
xlat
xor
pop
jo
fistps
cld
xor
xchg
data16
stos
mov
sbb
nop
add
scas
cmp
std
leave
ds
insl
and
xchg
lret
loopew
pop
out
out
lods
mov
cmpl
sbb
pop
addr16
push
push
dec
xchg
ja
dec
aas
shrb
aam
les
jo
push
cmp
push
inc
frstor
lock
jecxz
xchg
cli
cmp
repnz
jl
sbb
out
dec
leave
test
test
int
mov
mov
jecxz
or
clc
dec
push
in
sub
ja
add
pop
fisttps
ljmp
ljmp
icebp
pop
adc
pop
xor
adc
xlat
insl
shrb
bound
push
das
dec
scas
xchg
mov
cmp
xorl
push
cmp
das
jmp
lods
aas
push
sub
test
sar
test
in
and
filds
sub
fidivl
fsubrp
push
mov
fdivrl
ja
mov
push
fistl
es
sub
push
cmp
addl
dec
xchg
inc
xorb
iret
lcall
add
mov
mov
je
push
ljmp
jns
or
std
xor
out
int
popa
in
push
xchg
push
ficoms
mov
repz
jo
gs
scas
movsb
sbb
sbb
adc
sti
pushf
pop
shr
jge
cmp
rolb
sahf
mov
rcrl
insb
inc
adc
addl
cmp
inc
and
clc
dec
ds
dec
adc
lret
lea
mov
inc
mov
mov
mov
outsb
dec
call
mov
push
push
aad
push
sub
mov
insl
cmp
push
mov
out
fisttps
or
dec
lds
add
add
pusha
icebp
lods
fisubrl
in
lock
mov
push
mov
test
xchg
push
fildll
shl
add
decb
mov
movsl
sbb
scas
sbb
das
dec
int3
in
hlt
adc
aam
inc
sub
gs
push
pop
jg
pop
sbb
imul
mov
popf
call
outsb
int
in
fistps
jp
push
iret
icebp
clc
fldcw
and
mov
jg
or
ja
fstps
pop
xor
add
mov
loope
adc
rolb
aas
jo
psllw
pop
lea
lds
xor
or
sahf
adc
out
fwait
leave
std
loope
mov
idivb
xchg
out
ss
sbb
jnp
insb
daa
push
int3
movsl
in
clc
mov
xchg
adc
and
xchg
add
push
mov
test
adc
gs
ja
lret
adc
jmp
ret
adc
adc
hlt
jmp
les
fdivrs
iret
sbb
push
negb
fisttpll
popa
cld
inc
mov
stos
fsubrl
shll
das
sub
sub
push
and
jae
imul
test
dec
sti
push
outsl
ret
ret
or
lods
xor
addr16
xchg
dec
popf
insb
sub
xchg
mov
dec
jnp
sti
sub
xchg
pop
sbb
sub
test
into
out
scas
outsb
mov
imul
js
dec
sub
rol
out
jne
fmuls
dec
cltd
push
sbb
pop
jno
inc
cltd
jmp
cs
jo
test
cmp
shlb
jnp
push
pushf
icebp
push
in
idiv
or
mov
cli
jge
repz
mov
les
mov
lret
or
push
xchg
test
std
add
and
bound
push
pushf
outsb
mov
test
cld
push
mov
in
mov
je
add
insl
xchg
mov
ljmp
lods
mov
aaa
test
enter
addr16
out
xor
jo
adc
std
int3
aam
and
push
pushf
push
push
outsb
test
wbinvd
pop
dec
pop
push
push
pop
pop
jo
aam
es
jbe
sbb
adc
and
sub
and
xor
mov
sub
xor
ljmp
pop
not
jae
mov
xchg
mov
pop
xchg
lret
pop
jg
mov
mov
push
push
jle
xor
call
les
insb
loope
daa
or
adc
jae
insb
xchg
xor
outsb
repz
sbb
adc
aas
mov
outsl
clc
or
xor
sub
push
lods
stos
sub
insl
test
sub
dec
repnz
sti
push
cld
xor
dec
sub
jecxz
sbb
and
mov
push
push
and
and
mov
adc
or
jge
jp
add
jp
test
xchg
pop
mov
lret
cmp
cmp
repz
pushf
and
nop
jae
and
jb
add
int
lds
push
sbb
aaa
inc
out
inc
gs
hlt
iret
dec
mov
adc
jl
push
cmp
jl
test
out
sbb
adcl
sub
out
dec
cmp
fsubs
pop
shrb
inc
mov
ret
xor
jo
stos
sbb
inc
xor
incl
mov
out
enter
out
adc
xchg
xchg
or
mov
sbb
test
pop
gs
lret
sbb
dec
dec
stos
ljmp
mov
or
out
or
aaa
cmp
ret
mov
jns
xor
clc
jp
je
dec
sub
cs
mov
xor
xchg
es
cs
lret
imul
pop
add
lahf
inc
push
movsb
fs
sbbl
test
cmp
sbb
sub
gs
sub
jb
sbb
leave
lcall
cmp
inc
mul
or
xor
jno
cmp
loope
jbe
aas
in
cmpl
sarb
daa
pavgw
pusha
xchg
pop
fmull
xchg
pushf
ret
jl
pop
test
clc
push
dec
mov
inc
adc
cmc
add
stos
push
mov
insl
jbe
inc
adc
in
adc
mov
jb
negb
addb
mov
lods
jno
xchg
and
cmp
test
cs
xlat
push
mov
cltd
or
mov
jo
in
jg
call
push
insb
shr
cmc
call
push
mov
fwait
pop
xchg
jmp
sub
and
push
call
mov
leave
mov
add
or
jle
push
mov
lock
std
int
mov
cs
idivb
adc
mov
imul
inc
ljmp
outsb
inc
popl
push
add
fisttpll
inc
adcb
inc
push
sahf
and
hlt
data16
mov
into
sbb
xor
sbb
cltd
sahf
adc
imul
out
lret
testb
jo
mov
cmp
lock
ja
cmp
mov
das
xchg
or
and
cmpsb
push
push
stos
cmp
dec
stc
enter
cmpsl
pop
test
dec
lods
cmpsb
and
jmp
inc
ds
mov
jp
push
cmp
filds
test
pop
mov
add
aaa
stc
adc
dec
mov
sub
mov
jp
mov
jns
inc
mov
addb
xchg
insl
sbb
xor
std
ret
dec
xchg
sbb
and
rolb
push
aad
fs
pop
nop
cmpsb
mov
mov
sub
jle
ss
dec
sub
or
aad
cmp
repnz
repnz
ds
mov
pop
call
xor
cmpsl
das
sbb
dec
iret
popa
sub
test
out
mov
movsl
pop
mov
call
aaa
mov
add
scas
in
std
icebp
hlt
lods
cmp
ss
bound
jns
inc
xchg
insb
js
leave
aad
rorb
aaa
mov
fwait
jl
pop
lret
imul
les
jp
ret
and
int3
stos
js
inc
mov
movsl
mov
xor
push
and
and
jl
cmp
xchg
cmpb
movsb
fs
js
jle
aam
enter
add
test
push
in
sub
gs
adc
js
lret
lds
lds
stos
fs
pop
aaa
jb
sub
mov
mov
jg
mov
rcr
sub
imul
icebp
inc
cmc
dec
shr
xchg
dec
out
repz
adc
inc
dec
cmpsl
jmp
stos
mov
nop
popa
test
push
les
out
jns
ret
or
adc
fistpll
or
xchg
iret
or
pop
in
lcall
jmp
mov
and
call
in
adc
in
movsb
mov
cmc
je
inc
inc
insl
adc
loop
icebp
sti
add
cmp
mov
addb
cmp
pop
or
inc
leave
and
push
fwait
adc
les
sub
xchg
sub
push
stc
fs
xchg
out
xchg
ss
xchg
decl
divb
add
call
ret
mov
pop
push
add
sti
sar
pop
loopne
rolb
sub
and
js
inc
xor
mov
jo
movsb
sarb
and
dec
js
ret
mov
sti
movsb
dec
fldcw
mov
jmp
sbb
jae
cltd
xlat
dec
pop
flds
pop
je
in
idivl
clc
push
adc
cmp
add
scas
cmpsl
pop
jo
sahf
and
repnz
dec
pop
lret
cld
les
test
xor
ljmp
outsb
int
lahf
cmp
xchg
xchg
js
xor
cmc
pop
lods
iret
or
rorl
push
or
add
ret
fmull
adc
cmc
mov
outsb
or
lods
out
fistps
out
rcr
inc
fisubrl
es
cwtl
sahf
scas
sarb
lret
loope
sbb
leave
rcl
sbb
cs
ds
sub
adc
test
js
aaa
mov
adc
or
loopne
dec
scas
shlb
aaa
pop
jae
icebp
xor
inc
push
orb
jmp
divb
cmp
pop
mov
mov
push
push
cmpsb
push
xchg
jmp
test
daa
ljmp
sbbl
in
and
pop
ficoml
cmp
in
and
mov
lret
mov
inc
mov
inc
in
lcall
popa
icebp
in
mov
cltd
jns
lods
sahf
aad
ds
cmpsl
jle
xor
rcll
push
fcoml
outsl
inc
mov
inc
mov
push
fwait
ss
repz
push
clc
cmp
add
jmp
fistpl
cmp
je
in
adc
std
js
inc
sbb
into
push
leave
out
dec
mov
sub
mov
in
pop
lcall
ss
and
mov
ret
xchg
test
mov
icebp
fs
jns
pop
scas
cltd
dec
and
fcompl
inc
orb
inc
xchg
xor
xlat
dec
out
outsb
lret
mov
fcoms
lods
mov
inc
outsl
sti
mov
test
inc
inc
ret
mov
jge
jp
ja
test
fcomps
dec
xchg
push
aam
jmp
orl
mov
jns
cmpsl
pop
dec
gs
jge
std
sbb
add
adc
or
aam
das
add
jmp
movsl
pop
gs
sub
cmp
jmp
xor
pop
mov
loope
clc
dec
sub
pusha
push
push
add
je
fcmovbe
cli
xchg
sar
mov
ljmp
dec
ja
hlt
int3
and
call
cmpsb
dec
in
sub
xchg
out
rcll
dec
iret
push
leave
fcompl
out
stos
sbb
pop
inc
sub
jnp
xor
push
fimuls
xchg
cmp
out
xor
dec
sbb
push
inc
stos
mov
iret
cmp
sbb
add
rcll
sbb
stc
push
jb
lcall
dec
sbb
rorl
pop
push
mov
jmp
div
mov
popa
shrl
cmp
push
je
xchg
dec
cmp
data16
pop
incl
xor
jmp
scas
cmpb
hlt
rcrb
leave
je
mov
jne
inc
pop
pop
cltd
nop
push
lahf
dec
add
jecxz
ss
nop
lds
subl
mov
pop
int3
cltd
adc
jmp
mov
pusha
xor
insl
cmpsb
cmp
fcoms
xchg
bound
out
test
bound
dec
push
jne
sbb
in
push
sub
xlat
mov
xchg
push
lahf
xchg
sbb
fxch
into
mov
xlat
test
adc
test
add
sarl
loop
push
sbb
popa
xor
and
pushf
pusha
push
mov
cmc
nop
push
xchg
dec
pop
inc
int3
das
je
sub
stos
mov
fisttpl
scas
adc
cwtl
add
clc
int
jne,pn
insb
pop
push
jecxz
push
mov
xchg
stc
inc
cmc
scas
adc
es
orl
adc
shl
sahf
test
in
hlt
int
mov
nop
inc
loope
orb
test
xchg
sbb
or
leave
inc
andl
cs
data16
and
imulb
jmp
mulb
push
int3
and
lock
adc
jae
lods
sbb
sub
or
sbb
inc
aas
clc
sub
arpl
pusha
je
add
mov
fsubrl
loop
sbb
mov
or
pop
sbb
or
and
xchg
adc
imul
jecxz
pop
jns
enter
xchg
xorb
dec
outsl
addr16
or
push
jb
sub
incl
pop
shll
test
insl
push
call
pop
icebp
inc
test
push
cmp
adc
sarl
fwait
stc
xchg
or
aas
rorb
adc
push
sbb
sub
repz
loopne
pusha
mov
out
and
xchg
dec
sbb
test
sahf
cmp
pop
fsubrs
idivb
mov
or
inc
mov
sti
lret
lods
mov
lods
aas
aad
fstps
adc
gs
les
push
cli
scas
cmp
or
add
jae
movsb
cmp
dec
push
in
jne
stos
pop
dec
enter
pusha
xchg
and
adcb
dec
aaa
stos
popa
mov
test
es
mov
sarb
mov
cmp
int3
outsl
loopne
jle
loop
movsl
adc
jbe
adc
pop
ja
xchg
dec
sti
mov
aam
stos
imul
imul
fcmovne
dec
call
sub
scas
lods
pop
mov
sbb
push
repz
mov
sbb
cmp
cltd
rorl
mov
popa
cmpsl
lret
aad
repz
insl
fnstcw
mov
movsl
or
sub
pop
movsl
mov
mov
cmp
fs
xchg
fimuls
or
inc
push
sub
sub
cmp
xchg
push
movsb
popf
dec
mov
lods
sub
dec
mov
gs
jle
icebp
popf
sti
or
xor
dec
test
stc
push
xchg
in
arpl
xor
sub
shrl
int3
jae
mov
fadds
scas
xchg
fwait
movsb
mov
and
leave
js
sub
push
pushf
idivl
ret
mov
test
xchg
pushf
sbb
mov
aaa
mov
cmp
xchg
add
lret
or
mov
jge
popf
sbbb
std
stos
ret
ja
cld
xor
pusha
pop
mov
sub
lock
mov
sub
cmp
mov
inc
sub
add
jmp
lcall
popf
cmp
out
jp
sub
mov
aas
aam
ss
stc
lahf
stos
push
cmp
insb
jno
jmp
outsb
pushf
xchg
jle
addl
jns
test
xchg
xor
mov
loop
xchg
inc
adc
outsb
add
outsb
dec
lods
jge
mov
fisubs
call
xchg
lods
dec
shlb
push
jecxz
pusha
dec
sub
pop
mov
test
mov
xorb
mov
sub
push
pop
push
gs
icebp
test
dec
xchg
push
ficoms
mov
mov
adc
int3
push
test
lods
jno
bound
mov
std
xchg
push
xor
push
or
sub
cld
jge
nop
xchg
stos
lea
fisttpl
cmp
inc
push
sbb
jno
sub
leave
push
lock
cmp
jns
adc
jne
fisttpl
fwait
js
and
adc
pop
mov
enter
mov
xor
mov
inc
jnp
pop
sti
xchg
add
loopne
xchg
popf
insl
jns
aam
mov
pop
or
push
adc
sbb
int3
add
mov
fs
xchg
fisttpll
inc
sub
jmp
sub
shlb
js
mov
and
add
scas
stc
jp
fsubr
cmp
in
push
xor
imul
cmpsb
iret
and
xlat
gs
adc
aam
cld
jae
scas
int3
jl
out
pop
test
jecxz
inc
cmpsl
sub
das
and
xor
adcl
add
into
stos
cwtl
lcall
cmc
xchg
push
out
pusha
lcall
sub
sbb
sub
mov
movsb
jecxz
inc
cmpsl
and
inc
adc
test
gs
shlb
sbb
cmpl
cs
sti
stos
add
int3
mov
insb
mov
stos
inc
outsb
mov
int3
pop
sbb
inc
enter
dec
insb
and
ljmp
cmp
fs
iret
and
negb
pop
cs
push
mov
arpl
pop
adc
and
push
or
inc
sbb
lock
aaa
in
es
or
ja
or
leave
notl
cld
or
sub
std
xorb
fstpl
push
adc
add
sub
mov
push
and
fistps
mov
jl
dec
dec
push
cltd
xchg
sub
sbb
lds
cmp
xor
rorl
xchg
xor
or
inc
dec
js
loope
lea
in
cmpb
jnp
fists
aaa
push
cmp
pop
cltd
sbb
je
push
and
in
aad
push
mov
xor
int3
or
mov
cmp
sub
and
inc
aad
sbb
sub
mov
mov
sub
aad
pop
add
repnz
or
addr16
cs
loope
sbb
clc
xchg
ror
shll
in
or
es
aaa
pusha
mov
stos
pop
loope
xchg
jo
or
lods
push
ss
push
je
cmp
loop
adc
rcll
mov
std
mov
jnp
test
cmp
pop
or
add
lds
mov
icebp
insl
stos
pop
shll
ss
sub
frstor
lea
ss
lcall
mov
jl
inc
hlt
mov
pop
mov
pop
sub
fwait
cmpsb
sbb
rorl
inc
sbb
stos
inc
add
pop
andb
pop
cmc
cmp
imul
mov
add
sbb
scas
and
inc
cwtl
mov
jne
int3
push
andl
popf
mov
cli
jae
ja
jp
adc
fnstcw
loop
outsl
add
mov
fs
divb
cwtl
sahf
cltd
aas
jle
or
lea
dec
scas
mov
stc
or
arpl
rcll
negb
push
mov
push
mov
std
mov
inc
inc
mov
lea
js
cmpb
and
cmp
sti
sub
xchg
push
push
into
sbb
loop
jge
and
aas
pop
push
xor
xor
clc
out
xchg
aam
xor
ret
cmp
pop
cwtl
mov
data16
pop
jp
pop
xchg
jb
push
mov
and
insb
mov
add
aad
insl
mov
pop
in
xchg
cmp
cli
cmp
pop
loop
add
mov
inc
negl
fsubrs
mov
push
leave
repz
pop
call
jb
sbb
orb
and
jp
test
stos
mov
mov
push
in
sbb
cwtd
testl
sbb
mov
dec
stos
das
in
or
in
cmp
fcmovnbe
xchg
sti
or
jmp
inc
pushf
imul
hlt
test
pop
pop
xor
imul
cltd
pop
cli
mov
jae
push
popf
clc
and
cmp
ljmp
cwtl
enter
orb
push
adc
push
clc
adc
cmc
lea
jnp
sub
sbb
iret
aaa
ret
ficomps
lret
push
fisubrl
sbb
faddl
or
sub
push
pop
repnz
mov
xchg
cltd
jae
and
add
lods
nop
ja
faddl
sbb
xor
fldl
xor
xchg
or
pop
repnz
idiv
mov
loope
dec
ficoms
pop
or
data16
mov
pop
enter
fcmovnb
inc
xor
mov
mov
ja
lret
mov
popa
ret
and
fisttpl
js
aad
mov
mov
sub
add
gs
aam
jecxz
cmp
mov
dec
nop
mov
vpunpckhqdq
addr16
adcl
xor
add
lret
xchg
std
cwtl
push
mov
lea
shl
fucom
cs
jne
fxtract
mov
mov
cmp
lods
je
add
cmc
cmp
dec
jb
cmp
inc
mov
jne
push
xor
lret
mov
mov
sbb
adcb
ss
aas
mov
xor
sub
inc
mov
push
cs
dec
mov
fisubs
cmpsl
int3
int3
arpl
pop
pop
aam
sti
hlt
mov
andl
test
lds
mov
xor
cltd
cmpsb
jb
xlat
push
call
cmp
dec
cmc
pop
call
xchg
pop
out
pop
ret
xchg
and
mov
jge
adc
jl,pt
fists
sub
jecxz
aam
das
shrb
mov
sub
out
pop
xor
xor
xchg
sbb
lods
mov
out
lods
xchg
loop
pushl
inc
xchg
int
xchg
cmpb
xor
mov
pusha
and
ja
cmp
idivb
shrl
lret
je
fidivrs
in
sub
xor
and
mov
inc
pushf
dec
mov
out
inc
sti
pop
push
cmp
mov
fs
movsb
lods
lods
push
arpl
aam
mov
daa
xor
xchg
lods
mov
add
sub
cmp
pop
push
jle
jg
data16
ds
xor
xchg
mov
push
xor
int
cwtl
jno
int3
sub
mov
ljmp
push
cwtl
pushl
push
or
pop
xchg
adc
movsl
int
cmp
push
adc
mov
test
mov
subb
pop
mov
scas
dec
pop
test
mov
aaa
fs
adc
or
mov
idivl
inc
into
and
dec
into
ja
xor
cmp
add
mov
imul
out
insb
sub
pop
fmul
xchg
inc
test
in
dec
hlt
lds
sbb
pop
dec
shrl
push
mov
fstl
ja
cmp
xchg
fcomps
gs
cs
xchg
dec
jge
pop
arpl
xor
push
mov
into
idiv
xor
int
cld
xor
push
adc
xor
add
stos
test
sti
xor
push
mov
loopne
std
sti
fcmovb
push
test
rorl
aaa
xor
dec
and
fwait
sbb
in
xchg
sbbb
xchg
mov
push
orb
stc
stos
fcmovnb
cmp
dec
lock
xor
jns
flds
aad
mov
mov
dec
pop
int3
add
adc
push
dec
inc
cmp
xlat
adc
sub
mov
in
data16
das
push
movl
push
sbb
jl
push
push
outsb
push
lea
lret
or
arpl
push
push
push
jne
add
shrl
cmpl
jp
and
bound
inc
test
and
test
test
stos
mov
push
sbb
addl
popa
add
mov
cmp
mov
in
stos
dec
arpl
addb
xchg
inc
inc
jne
in
mov
pushf
xor
mov
movsb
and
inc
xor
outsb
std
add
xor
pop
scas
clc
out
sub
sahf
idivb
test
jl
xor
js
loopne
inc
arpl
gs
repz
and
adc
and
hlt
jl
dec
xor
or
jl
dec
sub
pop
cmpl
fildl
mov
xor
adc
popa
stos
add
ret
ret
dec
xlat
shrb
out
xor
popf
lahf
pop
mov
stos
pop
fildl
lods
sbb
ss
repnz
loope
fbld
pop
ljmp
out
popa
sbb
inc
adc
addr16
sub
cmc
xchg
iret
aad
js
push
js
xor
xor
rcrb
mov
cld
sbb
dec
es
mov
push
jae
sti
fwait
pusha
xchg
push
mov
xchg
mov
repz
sub
mov
push
popf
inc
movsl
shl
cmp
push
mov
outsl
pop
pusha
jo
mov
jns
pop
sbb
push
shrl
inc
dec
lea
imul
es
lcall
lods
jae
fistpll
call
insb
mov
int
mov
push
popa
popa
cmp
test
push
xchg
ja
mov
jns
xor
jl
push
jle
xchg
aam
and
lcall
push
sbb
mov
dec
mov
sbb
pop
dec
stc
mov
test
int
xchg
add
mov
jle
test
fs
idiv
fdivrl
loope
int
bound
cli
inc
insb
xchg
mov
or
mov
mov
enter
pop
lret
xchg
xor
jno
movsl
mov
mov
xor
ljmp
and
clc
cld
mov
add
orb
jne
iret
cmc
into
and
add
sbb
popf
loop
jne
xchg
add
pop
push
fucom
dec
add
jg
mov
inc
or
lds
push
pmaxub
pushf
cmp
jb
xor
xor
pop
aas
fstp
push
lar
add
pop
pop
pop
push
mov
inc
dec
xor
pop
sbb
enter
outsb
jo
je
fstpt
pushf
jno
mov
popa
sbb
add
xchg
push
into
divl
mov
outsb
inc
sub
mov
das
jno
ret
dec
mov
andb
ljmp
mov
stos
popf
out
mov
rol
dec
pop
sbb
jmp
jg
stc
decb
add
gs
stos
cmp
add
cmp
cli
sbb
dec
cmp
dec
pop
pop
je
addb
je
sub
cld
sub
sub
sarb
push
shlb
insb
xchg
xchg
sub
fcoml
adc
mov
jbe
cld
das
push
mov
int
push
fwait
or
inc
daa
nop
clc
ljmp
dec
jo
pop
jle
or
gs
or
cltd
cmp
dec
pop
add
in
nop
mov
fwait
mov
cmp
aaa
pop
stos
aas
sti
cmp
mov
xchg
pushf
adc
rorl
outsb
cmp
or
or
btc
pop
sub
loope
push
clc
push
jo
mov
pop
sahf
test
fldl
std
xchg
clc
jb
ljmp
dec
adc
xchg
push
jle
mov
xor
sub
das
add
mov
fadds
retw
mov
hlt
call
pop
arpl
pop
xor
jnp
data16
lock
or
sub
outsl
inc
outsl
mov
sbb
fdivrs
ret
or
gs
clc
daa
faddl
nop
sbb
fiaddl
and
jbe
scas
push
xor
inc
les
mov
pop
mov
fcoml
xor
mov
cld
out
or
mov
xchg
cmc
sub
mov
or
in
bnd
add
or
add
test
or
xchg
lods
loop
cmpsl
or
loop
ja
es
mov
das
mov
xor
movsb
les
push
xchg
push
scas
mov
outsb
int3
dec
or
sub
cmc
pop
in
mov
jo
push
add
cltd
nop
sub
xor
lahf
idiv
mov
stos
mov
adc
add
pop
inc
mov
lds
push
stos
jp
pop
out
aad
cmpb
loopne,pt
push
jo
in
pop
jmp
and
jns
notl
enter
jmp
es
jno
inc
jno
cmp
dec
jae
in
imul
sub
pushf
xor
adc
test
mov
cmp
xchg
sti
ss
jno
mov
fs
andb
into
pop
cli
sub
rcrl
jge
lods
mov
mov
hlt
push
mov
mov
lahf
fs
jbe
lods
pushf
out
adcb
inc
aaa
loop
loop
mov
out
xchg
inc
sub
nop
rolb
xchg
rcll
mov
jmp
inc
lods
sahf
sbb
mov
dec
shlb
loop
cmpsb
cmpsb
test
and
mov
gs
and
test
outsl
std
cld
int3
pushl
mov
shrl
in
icebp
pushf
adc
pusha
sbb
sbb
push
fidivrl
pushf
mov
dec
mov
out
pop
lret
mov
sub
jae
cmp
fistpll
jnp
test
lea
jl
or
mov
xlat
or
repnz
push
mov
mov
push
jbe
jne
add
cltd
inc
aad
mov
in
dec
fstps
je
inc
add
mov
incl
outsb
xchg
push
mov
dec
movsl
xchg
in
adc
faddl
es
pop
sbb
out
test
and
push
cmp
jnp
add
jg
adc
lret
and
or
mov
sub
clc
mov
xlat
sbb
js
or
push
rclb
dec
inc
cltd
inc
adc
lock
and
fs
sub
push
ds
or
xorb
hlt
adc
or
ficomps
dec
leave
sbb
andl
ja
gs
sub
lock
inc
sbb
stos
mov
sub
lds
xchg
xchg
jmp
mov
loopne
pop
leave
mov
cmp
pusha
mov
lock
cmp
sub
xchg
adc
lahf
popa
mov
cmp
data16
sarb
push
out
push
movsl
jae
add
mov
push
pop
sbb
insb
mov
pop
mulb
dec
and
pop
pusha
jae
stos
clc
fbld
dec
pop
add
or
cmp
dec
inc
lret
fldenv
xor
push
jnp
enter
mov
cmp
pop
cs
lret
stc
xlat
push
mov
sub
xchg
test
pop
enter
or
cltd
mov
xor
pop
cld
or
bound
int3
data16
cs
fdivs
mov
push
pop
test
out
xchg
jns
inc
fsub
xorl
inc
inc
mov
mov
es
xchg
push
ljmp
ljmp
inc
addr16
adc
add
xor
xor
push
in
pop
mov
and
cmp
or
xchg
mov
jl
xor
dec
mov
pop
cmpsl
out
les
xchg
add
imul
loopne
pop
mov
xor
shl
inc
leave
jnp
xor
es
icebp
test
jl
adc
mov
sub
add
es
lods
dec
enter
sub
js
dec
mov
xor
jb
dec
jns
shl
inc
or
sub
loopne
lret
push
add
dec
dec
mov
std
or
leave
test
push
into
cmp
add
test
cmp
scas
sub
mov
and
sbb
jb
adc
pusha
rorb
inc
push
push
and
movsb
gs
adc
xchg
in
cs
jns
or
out
push
push
pop
stos
ja
mov
xchg
jle
popa
bound
jecxz
imul
mov
or
push
loopne
daa
xchg
mov
dec
mov
mov
adc
lea
fwait
inc
jo
clc
jnp
in
inc
and
dec
add
in
adc
cmpsb
xchg
je
out
mov
out
fmull
inc
inc
rcrl
mov
outsb
push
cltd
mov
push
mov
psllq
mov
and
leave
leave
loopne
shl
shll
int
mov
add
stos
push
mov
ds
inc
adc
nop
test
int
push
in
inc
mov
dec
cli
push
cs
inc
add
movsl
popa
scas
arpl
rcrb
adc
cmp
aam
lods
push
andb
add
sbb
je
icebp
stos
ljmp
jbe
call
mov
and
sbb
lock
int
std
dec
jmp
call
add
repz
adc
mov
xchg
mov
test
sub
stos
add
mov
jo
push
sub
mov
jle
lds
roll
cmpsl
lods
outsb
arpl
pop
jb
sub
sub
adc
sub
push
xor
xlat
inc
bound
stos
ja
mov
xchg
fstpt
in
xchg
imulb
orb
push
and
mov
pop
sbb
mov
push
sahf
out
ss
lock
inc
aaa
fiadds
arpl
or
popf
jp
mov
pop
mov
in
scas
cmp
sbb
push
repnz
pushf
and
shrd
mov
xor
xchg
push
ja
xchg
rol
jnp
add
dec
fnsave
movsl
or
ja
int
add
sarl
add
aad
lods
push
pop
xor
xlat
xchg
or
and
inc
hlt
lret
mov
mov
dec
movsl
sbb
push
pop
cmc
or
mov
std
rcrl
xor
scas
xor
cmp
dec
and
push
dec
cmpsb
mov
aad
nop
loop
and
insb
or
sbb
xor
mov
mov
dec
arpl
add
cmp
dec
push
adc
imul
add
pop
fst
fcomip
xor
stos
jns
sahf
rcll
push
mov
repz
in
xlat
mov
test
ret
aas
jge
xor
mov
ds
xlat
mov
add
jp
hlt
add
or
xor
dec
hlt
mov
or
inc
div
dec
xor
mov
sub
das
test
cmp
mov
leave
jno
or
lods
stos
or
daa
lret
shll
fcomps
push
dec
ret
inc
ss
or
adcb
fsubs
jae
inc
adc
jecxz
add
inc
mov
andb
repz
adc
pop
sub
mov
fisubrs
fdiv
adc
xchg
sahf
mov
mov
addr16
das
inc
mov
ds
jecxz
fcmovnbe
cs
stc
sahf
rcr
and
or
aas
or
imul
adcl
ret
sti
inc
or
dec
jp
sub
adc
jle
sub
pop
dec
mov
inc
jb
sbb
jo
gs
sbb
sbb
cs
repz
xor
jae
jg
loopne
or
stos
loope
pusha
call
fiadds
lock
cmp
shr
jnp
mov
jns
push
adc
mov
sti
fsubrl
push
sbb
loop
pop
ds
jne
and
cmc
rolb
or
push
test
out
sbb
cmpsl
pushf
into
fcmovnu
dec
mov
fldenv
scas
cmp
xor
add
nop
mov
inc
pusha
cltd
das
out
lock
and
and
mov
jge
fs
les
cs
in
repnz
pop
cmp
in
sbb
and
add
into
shrb
pop
sub
dec
add
popa
iret
in
lea
push
add
push
mov
jp
push
sub
mov
rclb
cmc
sub
fisubl
or
cli
loopne
lret
insb
inc
mov
mov
js
cltd
cltd
xlat
stos
jne
or
movsb
jge
mov
and
mov
and
or
inc
jecxz
fwait
or
mov
jns
jno
hlt
jne
mov
test
data16
lea
in
cmp
add
inc
xchg
insl
clc
jno
bound
daa
and
das
mov
mov
scas
in
insl
pusha
stc
rcrl
push
xchg
pop
rcll
cmc
add
enter
pop
ret
out
dec
fadds
add
fadd
xchg
in
fisubs
mov
mov
pop
jb
sub
aad
fstpl
or
jmp
xor
push
ja
jge
jge
or
add
inc
lods
dec
cmp
jg
cmpb
mov
andl
pusha
push
add
push
fwait
mov
pop
push
push
and
inc
or
mov
pop
jp
je
mov
cmp
adc
test
dec
adc
dec
mov
pop
popf
neg
push
mov
mov
mov
pop
push
ja
clts
ja
js
push
xchg
jp
loop
notl
lcall
sar
push
stc
mov
jmp
dec
add
cli
nop
mov
push
adc
stc
ucomiss
fidivrs
mov
mov
xor
and
ss
outsl
xor
sbb
sbb
fldt
andl
test
enter
test
sub
test
ja
daa
pop
or
aad
cmp
mov
sahf
cmp
mov
ja
int
sti
mov
xor
add
xor
cltd
or
gs
cmpl
xchg
sbb
pop
inc
cmc
xchg
test
popa
inc
sti
popf
lret
fisttpl
push
xchg
push
xchg
cmp
and
pusha
mov
cmp
cs
hlt
dec
add
push
es
dec
fwait
leave
nop
mov
jge
mov
mov
repz
in
pop
das
shll
lahf
lret
and
clc
xchg
in
daa
ja
sub
inc
xchg
pop
lahf
push
push
inc
and
dec
cmp
xor
je
out
mov
push
push
pop
ror
adc
cmc
shll
jae
mov
sub
mov
ljmp
xor
and
push
ror
repz
cs
cmp
js
cmp
test
addr16
cmp
popf
adc
mov
iret
sub
inc
or
imul
cwtl
outsl
sbb
adc
mov
mov
loope
stc
cmp
push
xchg
dec
sub
clc
pop
out
and
xchg
std
xor
cwtl
mulb
roll
loopne
clc
adc
push
clc
xor
popa
jb
pop
add
mov
test
or
popf
or
sbb
ljmp
inc
dec
and
jns
xchg
pop
hlt
sarl
mov
sub
cmp
or
movsl
mov
out
sbb
and
mov
call
fucomp
mov
push
xor
adc
or
jae
fs
orl
mov
je
and
xchg
mov
call
sbb
mov
and
cwtl
rcrb
mov
jle
xorb
daa
cmp
shlb
aaa
cld
jmp
ljmp
and
pop
or
clc
or
sbbb
fsubrl
leave
addb
out
gs
cmc
icebp
call
and
in
popf
jne
jp
pop
test
iret
aad
icebp
xor
sbb
mov
aam
dec
mov
fidivs
stos
sbb
stc
push
mov
xchg
loop
lcall
ficompl
jo
pop
or
leave
add
shll
lods
ss
dec
mov
pop
scas
sbb
inc
or
mov
dec
inc
mov
mov
mov
or
sub
lods
adc
jmp
iret
cmp
stos
sbbl
push
add
mov
iret
dec
ret
out
shlb
cmpsb
jbe
add
or
repnz
fbstp
jbe
adc
xchg
addl
mov
mov
xor
mov
push
fbstp
xchg
std
dec
mov
mov
inc
add
into
mul
dec
sub
mov
or
mov
mov
mov
mov
xor
xor
mov
adc
jb
sub
std
shll
subl
aad
push
dec
adc
aas
je
sub
nop
mov
imul
out
jbe
fdivr
inc
push
pusha
cmp
mov
in
data16
fildll
fimull
xchg
in
fildll
xchg
mov
sbb
jo
in
mov
push
dec
aas
mov
jecxz
popf
pop
adcl
popf
mov
repz
mov
push
stc
push
sarb
cmp
push
cmp
idivl
jb
adc
mov
fimuls
add
mov
xlat
mov
lods
aad
cltd
push
subb
mov
pop
jnp
test
cmp
cmp
popa
cmp
faddp
orb
sbb
add
test
lcall
pop
lret
int
cltd
mov
add
gs
outsl
adc
cltd
inc
cvtpi2ps
cmp
lcall
dec
popf
shrb
sbb
ficompl
movsl
loopne
cmp
push
xor
and
in
jl
push
mov
jo
xor
jns
aam
out
inc
lcall
idiv
mov
nop
dec
inc
push
int
sub
pushf
popf
inc
cmovle
in
enter
push
fmull
sbb
jae
test
adc
xor
inc
mov
sbb
lret
add
mov
or
xchg
cmp
lds
insl
pop
js
jnp
stos
pop
pushf
out
jo
fwait
mov
adc
rorl
mov
push
add
mov
dec
jno
adc
mov
mov
out
pusha
addr16
andb
jnp
sub
jp
gs
cmp
notl
push
xor
js
mov
test
push
scas
ret
cltd
pusha
xchg
push
sub
push
stos
imul
imul
loopne
xchg
mov
xor
call
ficoms
push
leave
out
mov
add
in
movl
and
mov
loop
add
sahf
lcall
int3
jecxz
enter
add
rcll
or
out
imul
push
sbb
or
mov
pop
or
xchg
mov
hlt
push
lock
data16
sbb
jne
lcall
addb
adc
faddp
outsl
cwtl
jp
pop
jb
call
aam
push
dec
mov
adcb
xchg
cwtl
cwtl
sahf
repz
iret
jbe
and
push
sub
cmp
lds
sahf
outsl
cmpsl
xchg
cmp
sbb
or
xchg
add
dec
sub
loop
pop
mov
stos
fistpl
out
push
test
fldt
push
outsb
mov
sti
sbb
push
fldt
inc
jmp
rcr
mov
cmpsl
pcmpgtd
repz
ljmp
aaa
stos
pop
and
loope
fs
scas
icebp
jge
jb
inc
push
jo
pop
fs
push
push
mov
cmpb
add
andl
andl
hlt
shlb
das
scas
inc
lea
pop
pop
cmpsl
aaa
mov
movsl
cmp
mov
js
adc
out
js
xor
arpl
sub
push
in
xchg
xchg
xor
call
adc
jle
add
int3
dec
dec
and
ret
out
sti
popa
fdivrl
push
insl
mov
xlat
push
xor
shr
insb
and
inc
scas
mov
cmp
dec
xor
xor
lret
fs
add
cmp
xchg
inc
sub
in
cltd
sbb
addr16
sti
sub
lds
lods
and
or
push
jl
fwait
cmpsb
adc
or
sub
jns
and
lret
mov
out
mov
mov
out
lock
mov
mov
pop
cmp
les
push
ja
add
fs
lahf
pop
mov
pop
jmp
andb
sarl
sub
pushf
in
dec
pop
popf
int3
and
out
pop
repnz
shrb
repz
push
repnz
mov
out
push
leave
xchg
cld
mov
mov
jne
aas
sub
out
mov
stos
test
gs
cmp
adc
loope
add
ja
pop
cmp
or
or
jns
fcomps
mov
out
ljmp
fdiv
sbbb
xlat
and
adc
addr16
jno
mov
jb
mov
mov
bound
mov
aam
or
cmp
pop
into
subb
mov
mov
push
jae
mov
pop
cmp
push
push
mov
std
rcr
push
jmp
jl
sbb
sbb
cmpsl
inc
inc
add
cmpl
mov
mov
jle
sarl
sub
dec
das
add
sub
dec
and
enter
jl
sbb
xor
aad
xor
ja,pn
sub
jae
movsb
push
ret
jg
imul
sbb
xchg
lret
jae
push
pop
mov
ja
loop
inc
sahf
ja
inc
add
mov
les
lret
nop
sbb
push
out
pop
out
stos
xorb
insb
fldenv
pop
les
sbb
add
mov
fildll
outsb
rcrb
inc
jne
mov
jns
xchg
fidivl
stc
pop
stc
inc
inc
jb
push
in
fdivrl
mov
test
mov
sub
mov
les
cwtl
or
cmp
call
inc
push
dec
pop
mov
inc
mov
les
mov
sbb
push
and
mov
test
fsubl
jecxz,pn
mov
int3
shl
cwtl
icebp
cmc
push
scas
out
addb
and
pop
ja
inc
jno
jae
andl
xchg
jo
pop
aad
sbb
pop
es
mov
outsb
xchg
psllq
xchg
mov
movsl
push
or
jae
and
cwtl
cltd
cmp
rcrl
jns
dec
insb
dec
repz
xor
xorb
pop
popa
xor
cmp
pop
sahf
mov
xchg
pop
sbbl
or
outsb
push
roll
neg
inc
andb
jne
int3
scas
cmp
cmp
sbb
loope
test
outsl
mov
push
leave
xchg
sti
imul
in
inc
jae
movq
sbb
or
lock
mov
cmpl
ljmp
or
mov
lea
adc
push
jmp
out
nop
push
xchg
lahf
mov
bound
lods
shlb
mov
mov
pushf
inc
lea
lods
cmp
jne
fmull
popf
cmp
xor
pop
mov
or
push
mov
movsbl
inc
dec
adc
stc
xor
mov
push
xlat
dec
aad
mov
int3
inc
insb
inc
push
push
ret
push
sub
cmc
cmp
xor
mov
add
int
cli
ss
inc
aad
jg
std
mov
pop
sbbb
jge
cmpl
pop
lahf
and
xchg
add
add
add
sbb
xor
add
loop
cmp
mov
add
outsl
sub
or
xchg
xchg
mov
js
adc
adc
push
inc
jmp
and
aaa
xchg
testl
lea
push
dec
add
testb
bound
xor
push
imul
pop
cs
sbb
stc
or
or
sbb
mov
xchg
scas
aad
sahf
add
inc
in
inc
aas
test
mov
dec
rcr
or
mov
and
pop
pop
loopne
fisttps
mov
sbb
pop
in
aaa
push
jae
cmpsl
mov
arpl
call
sbb
or
js
mov
incl
adc
sbb
imul
ljmp
rorb
and
sbb
xor
insb
rcrb
push
cs
jmp
or
mov
sub
adc
fiadds
xlat
mov
rclb
push
xorl
jge
in
movsb
sahf
xor
aaa
jno
int
test
test
jmp
add
push
mov
hlt
mov
ds
mov
rolb
fsubs
inc
jno
aas
cmpsb
lret
push
jne
push
jp
adc
in
or
outsb
jp
mov
xchg
pushf
inc
xor
xor
aad
loope
xchg
cmpsb
xor
inc
in
repnz
mov
mov
push
lret
js
inc
xor
sbb
cmp
sbb
insl
lret
push
or
xor
fiaddl
ret
movsb
repz
ficomps
inc
std
adc
je
leave
sbb
mov
jne
test
or
repz
jne
out
xchg
test
addl
mov
push
pop
xchg
and
inc
push
data16
push
test
out
scas
sub
fistl
mov
ds
clc
mov
mov
xor
out
arpl
xchg
dec
insb
adcb
hlt
enter
add
and
je
paddusw
adc
test
mov
push
in
les
xchg
dec
in
test
pop
mov
shrl
jnp
inc
lods
out
cmp
scas
cmp
fists
pop
call
pop
dec
popf
push
lds
adc
inc
in
xor
lock
scas
cli
pop
push
pushf
jl
ss
int3
in
sub
xchg
adc
or
and
dec
inc
push
mov
testb
inc
push
lock
cwtl
dec
in
inc
ds
mov
and
loopne
xabort
ja
jp
shl
or
repnz
jne
mov
shlb
mov
mov
lahf
aaa
outsb
loopne
aaa
or
adc
andl
or
das
mov
je
outsl
fwait
cmp
adc
or
jbe
xor
or
outsl
cli
pop
out
out
test
into
or
leave
daa
sbb
jae
jb
fwait
mov
xchg
sahf
lret
inc
and
int3
scas
mov
push
lds
enter
push
mov
sbb
mov
mov
inc
or
inc
xor
shrb
leave
sbb
xor
xchg
push
xor
aas
aaa
cld
in
add
ja
xor
repz
sbb
xor
push
outsl
dec
and
shlb
dec
int3
andb
xor
push
pop
lds
push
cmpsb
std
jmp
sub
add
dec
fldt
rsm
pop
aam
outsb
lods
jno
mov
shl
cmp
test
les
pop
fildll
dec
aas
jp
push
push
xchg
inc
lods
outsl
iret
mov
push
rorb
push
sub
outsl
sbb
cmp
data16
in
push
jg
jmp
mov
imul
arpl
push
mov
faddl
mov
or
cmp
int
insl
pop
shrl
iret
iret
pop
pop
dec
lea
ds
push
loopne
lock
mov
adc
insl
jmp
adc
adc
xchg
or
jecxz
shll
out
loopne
les
loop
mov
femms
shrl
pop
lret
dec
pop
rolb
outsb
lods
jecxz
jnp
sub
mov
add
jb
mov
dec
mov
ljmp
xor
imulb
fcmovnbe
pop
pop
bound
out
pop
pop
cmp
sbb
aaa
jle
push
test
pop
lods
lret
mov
rcl
inc
xor
das
push
mov
arpl
in
jg
push
ss
xor
push
lods
lds
call
fidivrl
sbb
mov
hlt
xchg
cmp
aas
mov
rol
fiadds
sub
lds
sbb
rclb
pop
fwait
aas
into
mov
rorl
fidivrl
cmp
and
addr16
lcall
mov
mov
fcoml
in
xchg
pop
shll
rcrl
daa
xchg
frstor
adc
lods
sbb
jge
and
jle
popf
orb
dec
pop
nop
pop
dec
daa
mov
in
jl
add
movsl
jnp
sarb
jecxz
jb
add
push
add
sbb
scas
lock
add
call
mov
cmp
xor
clc
or
aas
sbb
mov
test
xchg
les
aas
mov
out
xor
push
dec
cwtl
dec
mov
jno
xor
mov
rorb
sbb
addr16
xor
stos
mov
push
loope
in
sub
rol
test
xor
shr
loope
aam
push
cli
mov
loopne
lcall
jno
or
in
fsubrs
push
dec
loopne
pusha
or
ds
sub
std
mov
or
jnp
stos
add
scas
cld
mov
movsl
mov
jno
lahf
popa
jl
out
es
cmp
mov
ja
add
inc
fistpl
sbb
test
imul
cmpsl
dec
call
inc
rcrl
xchg
add
xlat
xchg
mov
loope
mov
insb
cmp
inc
mov
test
je
ficomps
sub
xchg
push
ds
pop
pop
lret
pop
mov
xchg
outsb
mov
cmp
jmp
add
jne
adc
fs
aad
jp
call
movsb
jp
hlt
test
jmp
popl
lahf
mov
cmp
inc
arpl
push
jle
cmp
imull
repnz
dec
call
jp
xchg
stos
push
inc
push
mov
or
out
nop
sub
pop
pcmpgtb
adc
xor
arpl
xor
jbe
cld
inc
or
lock
pop
gs
in
in
mov
sub
or
cmp
scas
loope
ss
shlb
data16
add
sbb
adc
and
mov
sbb
fisubl
push
mov
dec
dec
sbb
xchg
xchg
jb
cmpsb
bound
push
or
pop
jno
sbb
add
xlat
nop
push
add
fucomp
dec
addr16
jb
icebp
or
cwtl
mov
pop
adc
adc
cmc
jecxz
pusha
repnz
js
out
xor
fwait
repz
inc
xchg
or
inc
ja
jbe
leave
fucom
shlb
mov
test
mov
sbb
shrb
std
into
push
rcrb
into
pusha
adc
cmp
sbb
jo
dec
repz
mov
cmp
mov
pusha
ret
fistpl
push
push
daa
cltd
arpl
sbb
scas
xor
jns
sbb
cmp
test
pop
lcall
int
or
in
push
cmc
inc
sub
xor
pop
outsl
cli
stos
fldenv
jae
popf
js
nop
call
das
mov
dec
xlat
jg
jnp
sarl
xlat
aam
xchg
xlat
adc
mov
sbb
dec
inc
subb
mov
xlat
push
pusha
fldenv
int3
jne
fnsave
cmpsl
dec
xchg
or
lock
and
push
outsl
mov
cli
pop
mov
mov
clc
subb
push
imul
lock
outsl
and
push
adc
test
fstps
pushf
std
sub
aam
sub
out
xor
cmpsb
test
in
arpl
cmpl
adcl
add
mov
lock
add
ret
jle
or
push
and
outsl
or
and
sti
add
addl
push
push
jg
xchg
inc
xor
ljmp
sbb
jl
pusha
push
cli
outsl
dec
pop
push
add
cmpsb
add
pushf
sbb
js
jmp
mov
push
mov
xchg
bound
mov
div
cmpsl
mov
xchg
out
xchg
ucomiss
adc
mov
push
xor
shlb
xchg
mov
add
imul
popf
xor
out
fnstsw
sti
mov
xchg
xlat
adc
andb
mov
stos
pop
out
loope
sub
negl
inc
xchg
lret
adc
mov
lcall
mov
dec
add
xchg
adc
mov
jmp
arpl
scas
xchg
cli
popw
add
icebp
dec
test
xchg
jle
mov
or
jl
test
sub
cli
pop
lahf
push
fbld
movsl
dec
jns
call
cli
sub
or
ror
sub
stos
cwtl
mov
push
pop
push
pop
ds
add
je
fnstsw
call
pushf
pop
lcall
mov
xchg
in
jb
xchg
cmp
cwtl
jbe
mov
out
cmp
stc
repz
stos
mov
push
insb
adc
push
mov
mov
dec
sbb
lock
pushf
in
and
es
xchg
and
imul
inc
rorb
jl
es
repz
pop
scas
fiadds
jge
dec
push
adc
popf
inc
pop
mov
lret
fbstp
jo
je
in
iret
push
je
jns
push
and
pop
push
lods
cwtl
movsb
aad
pop
mov
ljmp
pop
cmpsl
mov
sub
fstpt
xchg
hlt
pusha
add
add
xor
ret
jmp
addr16
jge
jmp
mov
movl
cmp
call
imul
int
xchg
arpl
lcall
in
rcrl
ljmp
adc
xor
call
cmp
cli
ret
insl
ret
inc
nop
push
inc
jle
mov
dec
cmpsb
lea
cli
je
out
fimull
xchg
fdivl
pop
int
bound
lret
insl
add
sti
mov
rolb
or
fistps
add
ss
in
testb
jo
sub
cli
push
lea
push
jle
lcall
sub
stos
outsb
inc
sar
inc
xchg
jae
into
dec
sbb
idivb
push
push
test
jp
popf
xor
outsb
inc
sarb
mov
scas
lock
stc
and
mov
cmpsl
add
lods
adc
pusha
dec
lods
push
jle
fistpll
add
sbb
ljmp
mov
rcr
xor
cmp
es
repz
insb
mov
lea
push
pop
jo
push
dec
das
add
pop
ss
xchg
stos
not
and
xchg
inc
xchg
int3
xor
adc
jae
cmpsb
int
or
in
xchg
adc
cmpsl
out
test
jns
sbb
call
pop
fadds
jno
pop
mov
jl
loope
dec
fsubr
icebp
pushf
push
loop
clc
pop
aad
aas
mov
xchg
mov
sbb
xchg
stos
cmc
sub
lea
mov
mov
popa
cmpsb
jb
xchg
scas
enter
rcll
aad
xchg
addr16
outsb
out
aas
mulps
fsubs
or
ret
xchg
jmp
mov
adc
popa
mov
xchg
push
in
out
mov
in
xchg
xchg
ljmp
or
aad
dec
ss
sbb
pop
and
into
push
fxtract
dec
pop
mov
xor
mov
js
jns
jmp
sub
pop
xchg
adc
jbe
les
sbb
arpl
xor
aaa
push
or
and
sbb
mov
sbb
push
and
add
imul
cmc
cld
orl
je
enter
into
rclb
add
movsb
notl
scas
push
cld
inc
adc
imul
mov
shrb
dec
sahf
xor
xchg
mov
aad
cs
sbb
mov
aaa
sub
mov
xchg
ljmp
pop
mov
imul
and
sbb
lods
fimuls
dec
or
ret
jl
leave
or
cs
loop
xchg
sub
pop
gs
es
pop
or
xor
jbe
fistpll
mov
sub
into
mov
xchg
jecxz
jo
clc
push
sbb
out
std
xchg
repnz
cmp
hlt
sbb
sub
fs
add
scas
add
sub
loopne
or
lret
ret
xchg
ja
xlat
pop
dec
pop
ret
mov
mov
mov
push
lret
lret
mov
mov
movb
mov
test
xorl
sbb
dec
sti
inc
clc
push
ljmp
xchg
lahf
stos
and
out
mov
lgdtl
add
push
je
fs
xchg
xor
or
jmp
ja
shlb
mov
retw
out
test
dec
add
xor
stos
arpl
in
fidivl
mov
ja
cmp
cmp
iret
scas
gs
pop
inc
mulb
mov
pop
pop
inc
sbb
mov
dec
xchg
mov
dec
xor
cmp
sti
and
pop
mov
cld
xchg
mov
fbld
cmp
je
arpl
fimull
pop
add
and
pop
pop
dec
in
xchg
daa
mov
sub
cmpsb
cmp
push
std
adc
int3
mov
scas
inc
dec
imul
xor
or
and
pop
popf
or
adc
imul
outsb
popa
stos
dec
pop
push
cmp
mov
xchg
add
inc
jmp
fmuls
sahf
daa
repz
loopne
dec
es
cltd
fbstp
pop
adc
roll
add
punpcklbw
pop
jmp
mov
jg
mov
cmp
xlat
xor
mov
enter
adc
mov
leave
lds
insb
iret
mov
adc
int
dec
xchg
sbb
sub
ja
adc
in
pop
sti
adc
ss
out
pop
push
addr16
sbb
jg
in
cmp
adc
leave
les
in
jl
pop
jno
lock
mov
adc
flds
int3
hlt
mov
push
dec
test
fs
cmp
or
rsqrtps
shrb
adc
sbb
lret
pop
xlat
xchg
add
test
ffree
sahf
loop
and
dec
rorl
jne
movsb
cmpl
xchg
push
lods
push
in
adc
jae
fmul
shlb
adc
into
loope
loop
cmpsl
add
push
push
mov
mov
add
add
push
pop
lea
ret
dec
sti
pusha
push
pop
inc
push
mov
test
sub
test
adc
rcr
repnz
push
sahf
fdivl
dec
insb
jnp
pop
into
or
bound
test
sub
mov
bound
inc
inc
xor
outsb
jge
dec
sti
push
or
push
cmp
pop
pop
insb
mov
je
sub
or
scas
adc
pop
xor
js
addr16
add
xor
sub
lret
mov
cld
cmp
psubq
rol
jg
enter
pop
shlb
hlt
or
stos
outsb
cs
scas
repz
cmc
jmp
jnp
test
and
mov
clc
push
cld
mov
lock
mov
in
movsb
loope
mov
xor
popf
lea
inc
or
repz
mov
mov
jbe
bound
inc
and
loop
jno
cmp
mov
xchg
ret
cs
sbb
push
adc
cmp
cwtl
mov
stos
mov
rclb
mov
xor
shr
scas
jo
addr16
leave
mov
push
push
mov
adc
iret
xor
jb
shrb
fistl
push
cmp
cmp
mov
sti
adc
mov
sub
ljmp
xor
daa
andl
fisubrl
mov
pop
xchg
pop
jmp
jne
sbb
arpl
pop
xchg
xchg
dec
pushf
ret
jno
dec
or
mov
pop
adc
loop
dec
inc
movsb
or
jae
addb
repnz
pusha
pop
in
cmp
cs
add
cmp
pop
mov
loope,pn
fistpll
loopne
dec
xchg
movntq
xchg
push
leave
daa
xchg
lea
mov
movsl
es
test
fstpl
clc
jo
or
adc
test
jg
add
je
loopne
data16
lahf
pop
add
popa
push
push
adc
add
movsl
inc
pop
push
hlt
es
rcrb
test
fidivs
add
stos
mov
ss
sahf
enter
add
pop
not
subl
pop
xlat
out
inc
test
js
test
add
popa
es
dec
mov
nop
pop
stc
xor
pop
pusha
inc
sbb
into
jl
outsb
scas
pop
out
negb
xchg
ljmp
or
add
rolb
mov
mov
mov
jno
push
add
into
rorb
lods
test
mov
add
fs
inc
nop
cmpl
aaa
jl
sub
repnz
loope
loopne,pn
push
dec
sarl
fsubl
pop
outsl
adc
aas
ljmp
in
dec
pop
sahf
push
fldenv
or
add
mov
inc
inc
mov
and
mov
ss
or
push
frstor
pop
movsb
lods
jb
inc
adcl
std
mov
jae
sbb
andl
imul
aaa
test
push
decl
adc
sbb
mov
fstps
sub
fbstp
and
cmp
fwait
hlt
popf
jge
loope
pop
loope
les
arpl
ja
addb
push
xor
pop
rcr
push
mov
aas
sbb
ret
dec
push
fstl
imul
das
or
cs
pop
xchg
test
inc
cld
ffreep
lds
mov
call
xor
popl
js
pop
sub
pop
cmp
jne
jnp
cld
and
or
rclb
in
pop
mov
and
int3
in
cmpsl
cs
fsubs
xorb
add
sti
add
mov
cmc
dec
in
out
push
aas
loop
je
pop
and
out
mov
push
dec
in
dec
mov
sub
mov
js
push
lcall
pusha
leave
cwtl
jmp
or
out
aaa
subl
mov
dec
imul
cmc
lcall
pop
cltd
inc
add
or
adc
test
mov
popa
fcoms
ja
lods
lock
push
test
shrb
sbb
push
jmp
xor
test
jne
stc
sub
adc
sbb
add
stos
lods
and
movsb
sahf
inc
adc
into
sub
cli
mov
cmp
mov
xchg
pusha
mov
add
add
pop
push
enter
ret
les
mov
sub
push
outsb
rcr
jno
and
fcomp
sbb
inc
fsubrl
scas
rcrb
shrb
shll
xchg
insb
mov
rcrb
mov
add
lods
ljmp
jae
mov
jl
fidivs
shrl
xor
iret
and
arpl
arpl
iret
cmp
loope
out
push
jns
pop
aam
fsts
outsb
xchg
mov
nopl
test
ss
xor
popf
sub
je
sub
push
test
and
push
dec
cmp
loope
cmp
addr16
inc
pop
sbb
sarb
ret
subl
movsb
test
jae
pop
int3
insb
mov
cmp
hlt
push
or
push
repz
lcall
jnp
fstpl
mov
lds
inc
mov
aaa
fld1
dec
daa
pop
dec
in
xor
icebp
mov
lods
mov
pop
fmull
mov
gs
pop
movsl
xchg
pop
subl
mov
add
dec
lret
addr16
ljmp
mulb
inc
dec
pop
sbbb
jp
das
rep
adc
arpl
adc
lahf
mov
repz
lret
or
adc
xchg
mov
lret
das
ja
or
cmp
pop
leave
xchg
jg
fiaddl
sbb
aam
dec
mov
xchg
push
inc
add
or
andl
aas
fwait
dec
scas
jbe
xor
adc
jae
lret
cmp
xor
daa
mov
hlt
adc
int
and
pop
ret
adc
mov
int
or
aam
daa
xchg
fstl
sbbb
push
test
outsb
mov
mov
ficompl
enter
pop
aaa
test
xor
outsl
js
fisubl
cld
pop
fisubs
xchg
sbb
jp
scas
fistpll
lods
mov
scas
cmp
add
bound
repz
in
je
sub
jg
or
push
hlt
out
pop
jne
sahf
jbe
sar
pop
sub
aad
mov
subb
nop
stc
xchg
and
repz
fdivl
pop
sarb
test
push
pop
jb
mov
cmp
dec
xchg
xchg
xchg
popw
shll
push
jmp
daa
mov
int3
nop
push
lcall
ret
cmp
push
loop
add
mov
out
sbb
decl
push
out
fcoml
xchg
dec
xchg
xchg
xchg
sbb
adc
rcrb
imul
dec
pop
ficoms
imul
in
fisubrl
sahf
sub
push
lock
and
outsb
cld
pop
mov
pop
dec
cld
test
mov
pop
js
lds
ficoms
cmp
xchg
push
aam
in
popa
ja
dec
movsb
insb
stc
cmpsl
adc
loope
jp
rcrb
loop
xchg
cmp
fldenv
out
or
mov
repz
push
sub
add
push
shll
in
out
insb
jp
cmp
out
mov
push
xlat
inc
mov
add
loop
inc
add
xchg
add
outsl
std
das
outsl
in
sahf
je
pop
mov
gs
xlat
add
in
mov
fstl
repz
push
test
icebp
xor
cmpsb
mov
jle
sbb
mov
jb
xor
sbb
out
lods
push
dec
frstor
dec
repz
cwtl
dec
mov
in
xor
jo
stos
and
or
pop
daa
fisubrl
fsubrl
js
jge
cmp
xor
xchg
dec
push
dec
mov
ffree
out
jno
jbe
xchg
push
cld
mov
push
xor
cmpsb
mov
xorb
push
and
mov
fwait
dec
dec
push
sub
mov
xor
lods
pusha
pop
test
into
jbe
jg
aad
mov
xor
or
jno
mov
imul
mov
xor
dec
push
push
bswap
mov
out
iret
sbbb
mov
sub
sbb
fisttpll
adc
test
in
out
or
in
inc
out
daa
xchg
jb
cmpsb
adc
test
mov
fsubs
jnp
or
das
and
jg
cmp
stos
ja
and
or
loop
loope
or
arpl
xorb
or
inc
sub
push
nop
mov
or
inc
clc
lahf
stos
cmp
xor
add
cld
xor
sbb
ficomps
mov
mov
inc
jae
cmp
mov
je
jno
fcmovb
cwtl
push
out
shrl
test
enter
dec
mov
shl
and
jmp
sbb
jecxz
pop
idivb
ret
mov
out
push
add
jle
lods
loope
stos
lods
push
int3
jo
test
pop
in
jns
jo
inc
jae
pop
dec
repnz
jo
aam
mov
lahf
adc
adc
jmp
hlt
movsl
cmp
stc
jae
pop
or
ljmp
jp
dec
mov
mov
fdivrl
mov
sbb
imul
mov
fstpl
pop
add
out
xchg
mov
sub
fistl
sub
scas
fwait
push
cmpb
mov
sub
out
fs
sbb
xchg
fisubs
mov
and
cmc
aam
cmp
pop
and
lock
nop
fisttpl
das
stos
sti
pop
add
cltd
sbb
jbe
xlat
add
pushf
push
inc
jl
loopne
add
xchg
sub
adcl
mov
mov
adc
or
movsb
bound
or
push
pop
lret
jmp
cmp
and
or
stos
pop
fs
adc
loop
insb
call
xchg
xchg
addl
aaa
enter
mov
jecxz
sbb
xchg
xchg
ss
divl
or
mov
and
std
cli
daa
fmull
inc
ds
loope
insb
les
or
aad
loopne
mov
mov
sub
cmpsb
inc
sub
in
into
idiv
xchg
lcall
clc
filds
inc
enter
les
mov
inc
and
adc
dec
push
fiadds
scas
dec
pop
add
stos
push
sub
mov
sub
xchg
sarl
jb
inc
test
push
mov
fbstp
out
push
xchg
push
xchg
sub
rolb
clc
dec
sub
inc
sbb
adc
cltd
pop
das
adc
inc
push
sub
adc
mov
out
loop
sub
in
popf
jns
enter
mov
and
sub
scas
rcr
cmp
call
inc
or
dec
fsubrl
xchg
adc
push
jp
push
inc
mov
lods
push
cmpsb
test
insw
xor
add
aad
imulb
fwait
xor
imul
inc
jno
cmc
xchg
inc
enter
push
repz
jae
sbb
clc
push
pop
test
clc
mov
dec
cmp
pop
clc
cmp
rcl
xchg
sbb
test
loope
sub
mov
dec
or
xor
dec
cmp
ret
jmp
in
sub
out
aad
je
leave
fwait
and
mov
inc
fnstenv
xor
mov
push
in
jno
test
sbbb
test
sbb
aas
inc
jno
mov
addl
repz
cmp
icebp
push
dec
add
jecxz
adc
push
bound
pop
or
sbb
mov
into
pop
sbb
lea
lock
xchg
mov
lds
mov
cli
or
loope
leave
pop
shlb
das
mov
xor
rol
jb
cmp
bound
cli
mov
lcall
dec
cmp
mov
sub
jo
fists
cmpsb
outsb
popf
ret
ss
dec
imul
and
out
arpl
jbe
movsb
jbe
add
in
xchg
sti
pop
fistps
or
sarb
in
and
jno
inc
inc
addr16
stc
mov
mov
ljmp
cmp
adc
movsb
insl
xchg
sti
ds
mov
icebp
cmpb
stos
lret
adc
icebp
xchg
sub
lods
sahf
pop
repnz
jbe
mov
setne
add
xchg
inc
push
jae
jmp
cmp
aaa
jle
xchg
xchg
imul
outsb
adc
mov
dec
in
cmp
xchg
lds
adc
les
filds
add
hlt
inc
mov
cmp
icebp
push
push
lds
add
mov
aad
andb
lcall
inc
cmp
adc
dec
sbb
aas
xchg
in
and
test
loope
pushf
test
and
jl
daa
sbb
push
addr16
cli
push
mov
rclb
sub
mov
stc
ja
add
ljmp
dec
jge
out
dec
mov
fdivrs
in
pusha
lea
rcl
and
sub
push
jns
inc
stos
pop
jle
mov
in
jecxz
push
inc
and
or
and
call
mov
ret
dec
inc
pop
sbb
cltd
mov
cli
sarl
jns
add
jmp
into
and
stc
lods
out
ljmp
cmpsb
and
jl
popa
mov
sbb
push
jecxz
push
in
xchg
add
mov
mov
insb
jns
mov
mov
insl
loope
lds
add
movsl
fwait
data16
leave
xchg
call
pushf
mov
ror
adc
jmp
pushf
add
jbe
pusha
lret
bound
push
dec
movsb
cmpsl
pusha
mov
push
or
leave
sbbl
push
mov
jg
adc
shlb
data16
sbb
into
push
pop
jle
test
arpl
iret
add
and
mov
jo
adc
loopne
pop
pop
repz
mov
jl
or
inc
or
insb
jo
inc
mov
push
xchg
add
or
pusha
xor
jns
adc
cmpsl
movsb
sub
sub
dec
jb
stos
fbld
inc
repz
and
out
loope
mov
ljmp
outsb
out
fdivrl
inc
aas
ret
mov
loopne
outsl
lods
shll
cli
cmp
mov
xor
adc
sbb
std
lahf
fnstenv
repnz
arpl
adc
lds
les
js
ret
xchg
leave
push
dec
or
mov
cmp
lds
inc
jle
sbb
insl
andb
or
into
das
xchg
push
out
xchg
loope
loop
ss
mov
dec
and
mov
pop
fisttpll
jae
adc
fstp
lock
ds
cs
cmp
jl
xor
cmp
out
jecxz
lcall
lret
gs
inc
imul
sbb
out
leave
insl
rorb
sub
inc
lcall
sbb
xor
subb
out
loope
sbb
pop
jno
sbb
movsb
cwtl
jl
int3
outsb
idivb
xchg
or
push
pop
xchg
adc
xor
rcrb
inc
stos
push
jb
call
add
or
bound
fisubrs
push
fwait
stos
adc
rorb
sbb
add
cmp
fmulp
test
ret
aas
pop
int3
dec
add
mov
ljmp
aaa
fnstsw
ret
lahf
repz
dec
cmpsl
sub
and
popf
les
sub
jne
out
loopne
movsb
ds
sbbl
fistpl
rclb
push
xchg
inc
pop
outsb
idivl
dec
jns
cmpl
lret
push
mov
sahf
les
pop
in
scas
xchg
leave
xor
push
mov
jge
jbe
pop
or
lret
jge
popa
aaa
clc
mov
push
mov
xchg
int
stc
sbb
xor
jne
icebp
sub
cs
pop
push
insl
in
cmp
pop
fisubs
ret
pop
inc
movsl
mov
push
lret
mov
xor
push
or
pop
aad
out
jnp
cmp
cs
sbb
das
pop
test
xorb
daa
std
pop
add
insl
inc
push
adc
faddl
cltd
leave
lret
ljmp
lods
mov
pop
imul
lea
arpl
clc
add
popl
jo
pop
das
in
lock
aad
sub
xchg
push
out
sub
test
repnz
leave
sbb
adc
cmp
push
sbb
mov
pop
xchg
push
sbb
sub
or
outsb
out
cmp
test
cmc
sbb
jp
cwtl
xchg
mov
pop
or
test
xchg
leave
sbb
cmpsl
test
cmp
xor
adc
aad
lret
and
mov
lock
in
mov
aas
frstor
jns
into
sbb
test
jnp
xchg
adc
or
or
jl
out
cwtl
mov
inc
adc
xor
xor
and
adc
leave
das
imul
out
jmp
sbb
adc
mov
and
aas
test
xlat
out
pop
mov
push
sbb
out
or
mov
jl
mov
pop
jle
push
push
jo
out
dec
repz
rcll
inc
add
jnp
into
xor
push
pop
adc
sarb
js
movsl
jecxz
sbb
adc
sub
jnp
gs
cmp
and
jno
mov
addb
jl
push
sbb
sbb
popa
adc
jnp
mov
xchg
jnp
xlat
sti
in
pop
xor
dec
jne
out
stc
xchg
imul
cld
mov
jmp
sbb
jno
cmp
sub
add
stc
imul
nop
xor
jge
cmp
stos
add
dec
xchg
sbb
stos
cmpsb
das
fimuls
popf
out
xchg
dec
mov
push
or
and
inc
adc
jl
shl
out
insb
rorl
jb
mulb
xor
mov
sbb
push
fadd
push
fimull
push
sub
pusha
add
cmc
pop
pop
nop
and
jne
xchg
nop
push
push
pusha
jecxz
popf
inc
imul
jbe
dec
test
mov
repz
sbb
insl
xor
loopne
ja
jo
and
and
jo
push
pop
push
imull
xor
lds
sarb
mov
aaa
fwait
scas
lds
pop
scas
or
loop
xlat
stos
inc
int
ficoml
pop
dec
xor
cmp
pushf
inc
inc
add
pop
stos
mov
lahf
inc
ror
push
test
pop
jb
mov
movsl
das
rcr
insl
int3
xlat
dec
outsb
xchg
fwait
adc
adc
push
cmp
push
fisttps
xchg
pop
and
ficomps
mov
testb
jmp
add
adc
stos
xchg
sub
js
adc
arpl
rcr
pop
ss
xchg
jne
cmp
sbb
push
sub
out
cmpsb
cmp
inc
test
push
fldt
sub
js
xchg
pop
cwtl
sub
dec
push
inc
pop
inc
sahf
push
add
dec
lcall
dec
test
or
int
mov
cmc
adc
enter
out
into
enter
leave
push
push
leave
int3
and
mov
push
lds
leave
push
sbb
iret
inc
int3
cld
sub
inc
jge
and
inc
sub
xor
fisubrs
in
inc
repnz
jmp
add
dec
pop
and
insl
xchg
jge
add
jnp
jecxz
xor
ss
sub
push
js
cmp
je
mov
sub
sub
mov
push
cmp
jns
sub
test
outsl
std
add
pop
insl
cmc
in
push
fistpl
or
jae
cmp
jno
push
pop
lret
es
pop
insl
mov
push
movsl
add
shr
nop
shrl
jne
repz
dec
enter
scas
cmpsl
fcomi
cmp
xchg
push
or
push
mov
mov
dec
sbb
aas
adc
out
ds
out
lret
aaa
repnz
lahf
sub
inc
mov
mov
mov
mov
fwait
iret
mov
add
push
hlt
mov
lock
enter
push
pop
adc
jle
cmpsb
into
loope
adc
inc
xchg
or
aam
jmp
adc
in
mov
add
jns
imul
ja
jno
push
dec
adc
sub
mov
push
adc
cmpsl
and
mov
inc
cld
stos
les
out
push
rcrb
mov
or
in
or
sbb
ficomps
push
sbb
popa
xchg
push
add
mov
aaa
sbb
and
xor
sbb
pop
or
mov
xor
ds
sarb
arpl
add
outsb
popl
pushf
ljmp
mov
fimuls
test
inc
daa
jo
push
stos
sbb
inc
or
loop
fdivrp
clc
outsl
or
popf
hlt
mov
pop
ljmp
shrb
sub
cmc
dec
inc
mov
in
fwait
sub
inc
imul
cs
lds
mov
mov
les
pop
data16
add
jbe
sub
popf
or
sbb
mov
sbb
dec
sbb
data16
cmp
add
pop
enter
dec
test
adc
es
adc
inc
jg
xor
mov
mov
sbb
dec
add
mov
out
mov
inc
inc
push
xchg
rcrl
sbb
std
xor
fmull
or
or
pop
jl
loope
and
cmpsl
ja
call
jo
mov
mov
mov
and
sbb
jbe
inc
add
pop
test
xor
and
mov
xor
stos
in
xchg
stc
in
and
movsb
jmp
out
je
fildl
xchg
cmpsb
cmp
adc
enter
adc
int3
int3
fs
roll
je
sbb
repnz
fidivs
xchg
add
mov
dec
in
mov
mov
bound
xlat
mov
test
xchg
mov
jecxz
repz
mov
pop
cmp
mov
mov
loop
add
stos
jmp
popf
mov
ret
push
cld
lods
clc
test
sub
xor
or
enter
inc
jg
out
cmp
push
sti
cmp
sbb
adcl
mov
popf
xlat
cmpsl
jbe
or
adcb
pop
push
lcall
sbb
jmp
jno
inc
jge
cld
scas
mov
mulb
jge
cld
jp
icebp
inc
mov
jno
aam
test
xchg
jns
insb
pop
and
js
adc
adc
adc
push
adc
and
popa
in
in
jno
stos
stc
test
inc
pusha
enter
push
and
sarb
lods
dec
fisubl
test
cli
scas
or
out
inc
jno
sarb
lcall
mov
cmp
cmp
xlat
les
out
inc
imul
fadds
inc
push
lea
testl
jnp
jnp
xor
cmp
inc
dec
test
mov
pop
daa
cmp
mov
mov
push
pop
cli
insl
std
les
push
jne
mov
out
test
cmp
loop
les
add
icebp
test
mov
mov
in
ds
dec
jl
in
shlb
lcall
inc
js
sbb
out
jmp
and
mov
or
lcall
dec
dec
les
sbb
fistpll
icebp
shr
jmp
sub
sbb
repnz
mov
fs
js
add
mov
call
mov
push
shrl
das
and
sbb
aad
push
pushf
dec
push
fwait
int3
in
repz
mov
mov
imul
sub
mov
push
xor
clc
outsl
loopne
mov
imul
lret
cmp
jecxz
adc
or
xor
mov
leave
cmpsl
pop
scas
push
loop
lds
bound
mov
mov
ljmp
testb
pop
loope
push
cmpb
mov
mov
mov
add
movsb
insb
jmp
jne
mov
and
cmp
daa
je
fwait
aaa
fmull
hlt
outsb
xor
popl
and
into
shrl
sti
and
psubsw
mov
fwait
mov
lea
cltd
xorl
rcll
xchg
dec
cwtl
stos
jae
repz
jo
aaa
push
daa
adc
add
out
adc
sbb
or
mov
mov
imull
lea
xchg
jecxz
or
shll
fstpl
int3
pop
sub
rcll
aaa
aaa
ljmp
out
mov
push
jmp
cmp
pop
dec
sbb
aas
shr
mov
adc
jmp
and
jnp
int3
sub
sub
push
mov
pop
enter
scas
cmp
mov
jg
das
inc
rorb
out
inc
fmull
sub
sbb
xor
outsl
jns
ror
mov
notl
adcb
jns
cmp
cltd
jne
sub
loope
push
mull
mov
lods
call
mov
fldcw
push
pushf
add
push
jge
into
mov
scas
fs
shlb
fdivl
jae
in
ljmp
sbbl
das
sub
adc
sub
or
xor
mov
xor
je
cmpsl
cmp
cmp
js
fiaddl
adc
or
push
ret
pop
sbb
or
add
xor
add
es
lret
jne
fistl
add
or
es
sub
sar
cmp
aad
inc
in
pop
aaa
inc
push
pop
xor
lret
dec
adc
fistpl
inc
push
aaa
int3
subl
das
test
lods
add
push
rclb
das
push
int3
push
in
pusha
and
in
xchg
iret
push
cltd
add
cmpsl
mov
lret
fwait
sbb
std
and
aam
cmp
sarl
sbb
inc
push
inc
mov
cmp
jo
out
xchg
fistpll
dec
fucom
pop
jecxz
jp
outsb
imul
bnd
jno
pop
fidivrl
insb
enter
sbb
jo
add
dec
mov
mov
jo
cmpsb
popa
sub
add
xor
add
pop
scas
xchg
enter
xor
cmp
xchg
jnp
mov
icebp
std
mov
mov
js
rolb
movsb
cmp
jae
or
dec
repnz
test
inc
divl
or
mov
aaa
pop
inc
enter
push
js
pushl
sbb
xchg
inc
lcall
fs
into
sub
jge
negb
mov
cmpsl
pop
iret
subl
arpl
loop
lret
punpcklwd
inc
pop
adc
lcall
add
lods
jns
pop
and
test
testl
jle
aam
lahf
mov
or
inc
sub
cmpsb
lds
push
ja
or
jmp
fsubrl
inc
dec
pop
and
pop
pop
cltd
enter
ret
inc
pop
dec
adc
pop
sub
xlat
out
mov
or
sbb
int3
xor
fcmovbe
movsl
iret
inc
cmp
test
das
cld
data16
pop
pop
sub
ret
xor
sbb
jmp
repz
pop
fwait
popa
inc
out
into
push
sbb
lods
mov
sar
into
mov
xor
and
jp
jno
dec
orl
repnz
sarl
cmp
fnsave
and
movb
inc
push
pusha
cmpsl
subb
fidivrs
pop
into
inc
or
stc
sub
xchg
ja
incl
pop
sbbb
adc
arpl
orl
inc
ficoml
out
sub
movsb
mov
mov
push
je
mov
ret
cmc
mov
mov
push
enter
mov
pop
icebp
or
in
in
sub
sbbl
in
jbe
xor
arpl
pop
mov
or
pushf
jbe
testl
cmp
dec
mov
push
push
lea
cwtl
mov
mov
mov
pop
cmp
popa
repnz
sbb
leave
and
cmpb
and
or
mov
add
inc
test
clc
sbb
fidivl
jb
in
sarl
jecxz
adc
in
push
mov
add
cwtl
pop
xchg
mov
or
fidivl
dec
or
addr16
iret
flds
inc
add
rcl
mov
scas
inc
nop
pop
pop
jbe
pop
ljmp
lods
push
in
pop
movsl
fsubp
loop
lea
mov
lds
dec
test
inc
sbb
test
pop
pop
xchg
shr
je
mov
popf
insl
or
test
push
cld
xor
lret
loop
lahf
sbb
inc
gs
aas
or
push
mov
sarl
divb
lret
xchg
mov
das
adc
and
jo
push
add
imul
es
jmp
lock
cmp
inc
sbb
add
test
addr16
sub
dec
jnp
jecxz
movsb
aad
rcll
pop
adc
pop
out
push
xor
mov
inc
pusha
jae
lcall
insb
clc
jo
nop
jbe
test
lods
data16
mov
hlt
mov
scas
and
loopne
xchg
dec
jle
in
pop
das
or
mov
push
pop
ss
shrb
adc
or
hlt
inc
cmpsb
mov
lret
jne
lods
daa
xlat
pop
sbb
add
adc
mov
mov
pop
adc
pop
scas
push
cli
into
or
ds
nop
jecxz
js
add
mov
lods
fldenv
fs
js
je
pop
mov
out
mov
fdivrl
sbb
outsl
jb
add
cmp
mov
mov
in
xor
push
dec
inc
in
push
call
outsb
test
mov
cltd
xchg
in
je
xchg
sub
adc
dec
dec
push
xor
mov
mov
mov
arpl
add
adc
cmp
sub
sbb
in
or
in
or
popl
and
gs
jecxz
movsl
ret
stc
outsl
out
cs
cmp
test
push
mov
mov
in
mov
das
push
xchg
mov
sbb
adc
mov
nop
pop
xchg
add
mov
cmpsl
stc
addr16
imul
popa
pushf
enter
xor
push
ljmp
mov
mov
clc
jp
test
push
js
into
adc
mov
inc
pop
nop/reserved
mov
int3
stc
xchg
fistpll
sub
push
push
jl
ret
dec
into
test
test
imul
test
inc
je
xchg
xor
xor
push
shlb
jne
inc
aam
sbb
xor
xor
or
xor
jns
add
xchg
or
clc
mov
scas
loopne
and
bound
dec
push
push
lods
push
inc
es
inc
aas
gs
pop
lea
clc
jle
outsb
sbb
imul
andb
stos
idivb
ret
push
xchg
jmp
push
inc
mov
sub
js
push
dec
insl
sbb
cs
jne
fildl
insb
clc
cltd
ss
xchg
push
mov
inc
int
ret
fldenv
lret
lret
sbb
shll
xchg
adc
mov
dec
lds
test
insb
shlb
mov
push
lds
xorb
jl
adc
filds
sub
xchg
fsubs
adc
movl
bound
or
scas
push
push
jbe
call
mov
in
imul
push
xchg
movsl
daa
outsb
or
or
push
xchg
mov
adc
jle
mov
andb
add
mov
cltd
mov
movsl
push
inc
xor
jo
loopne
dec
fsts
cmpsb
mov
insl
icebp
cmpsl
aaa
cli
retw
pop
pop
cmp
xor
mov
cltd
xchg
add
mov
pop
inc
addr16
in
lods
cmp
sub
add
pop
inc
pop
jb
jmp
lea
mov
pushf
cmpsl
inc
jae
and
xchg
and
or
data16
ljmp
dec
adcb
movsl
sti
fidivrl
cld
fsubrl
jge
jg
arpl
or
nop
inc
mov
mov
sbb
and
adcl
call
rcl
rorl
mov
push
fimuls
stos
fldcw
lret
subl
pop
xor
inc
les
dec
ss
icebp
insb
sub
and
sbb
loope
xchg
sub
mov
push
movsl
sbb
jnp
xor
pop
jo
push
jb
adc
lods
mov
and
cmpsb
sahf
call
mov
icebp
push
dec
cmpsl
jl
je
fs
ret
in
mov
int3
imul
lods
inc
aad
or
das
dec
popf
loopne
in
xor
jge
bound
sti
movsb
sbb
es
cmp
adc
loop
jnp
cli
lcall
leave
sbb
into
dec
xchg
faddl
out
push
pop
sbb
stos
add
repz
in
outsb
stos
cld
push
int3
fs
push
xor
push
fwait
mov
xchg
scas
fsub
and
jmp
clc
jle
imul
test
mov
repnz
lahf
imulb
roll
mov
movsb
inc
rcr
mov
scas
rclb
cli
push
in
push
sub
popa
mov
sti
idivb
pop
ss
dec
xchg
sti
fidivrl
lods
testl
ss
xchg
outsb
movsb
ret
xchg
dec
popf
int
jne
rorl
scas
mov
nop
mov
xor
lret
push
mov
lods
movsl
and
xor
aas
and
or
hlt
adcl
xchg
pop
and
nop
repnz
stc
pop
js
ss
mov
or
enter
xor
xlat
arpl
cmp
xor
addr16
xchg
imul
hlt
lock
mov
data16
int
mov
cltd
mov
fistps
insl
xchg
adc
leave
dec
inc
cmpsl
inc
nop
std
pop
pop
popf
mov
push
push
pop
test
inc
sub
push
mov
adc
mov
int
int
mov
and
clc
cmpsb
jmp
scas
rolb
jae
push
stc
test
pusha
dec
xchg
push
jne
sbb
jge
popa
imul
xchg
mov
jecxz
push
mov
and
sti
aaa
inc
mov
dec
cmp
jmp
add
cmpsb
mov
mov
xchg
sahf
insb
es
mov
int
gs
fisubs
xrelease
xchg
stc
ffree
push
scas
mov
add
inc
and
sbb
out
mov
in
fdivl
mov
lret
sub
je
cltd
in
imul
int3
iret
int3
arpl
sbb
or
pusha
aaa
xchg
iret
or
movsb
cwtl
jb
das
dec
mov
dec
enter
notl
enter
push
mov
jne
ja
scas
lock
stos
outsb
xor
mov
cwtl
insl
je
daa
lahf
leave
pop
xchg
jle
sar
cwtl
sti
test
mov
xchg
movsb
fildl
in
mov
adc
adc
mov
movsl
and
jl
jmp
mov
inc
inc
arpl
clc
aaa
mov
call
inc
cmp
mov
ds
test
or
pop
fisttpll
enter
pushf
mov
movsb
adc
loopne
cwtl
dec
js
int3
outsb
fistpl
add
faddp
sbb
push
cmpsl
enter
out
cmp
pop
dec
sti
push
pushf
or
dec
xchg
mov
sbb
test
add
das
jmp
or
lods
dec
mov
inc
xlat
mov
adc
jnp
push
mov
test
push
shlb
push
std
push
repz
sub
aaa
repz
or
xlat
mov
jl
mov
pop
mov
jge
push
and
test
push
into
cmp
pop
or
daa
js
pop
in
xchg
je
jp
stos
pop
fisubs
arpl
cmp
or
xor
push
jb
hlt
jnp
lret
fsts
bnd
dec
add
shlb
mov
loopne
daa
cmpsl
mov
lret
mov
add
sbb
fimull
xchg
movsl
push
mov
or
lret
pop
xchg
push
fadds
xor
mov
dec
sbb
add
xchg
mov
dec
add
cmp
jae
adc
xchg
call
add
lret
and
sahf
sti
mov
adc
xor
repz
and
sti
lds
inc
sbb
lods
adc
mov
aaa
lods
rorb
es
fldl
int3
cld
dec
test
push
xorl
out
mov
sub
insl
addr16
or
pop
dec
aam
sbb
aaa
ss
dec
push
js
loope
sbb
dec
iret
fnstcw
sysret
mov
mov
xor
xor
pop
fistl
adc
test
loopne
lcall
nop
push
pusha
lock
sub
aaa
movsb
lock
fldl
out
icebp
inc
clc
pushl
lret
call
cs
jecxz
cmp
aas
outsb
xchg
mov
sub
stos
frstor
and
pusha
ficoml
stc
xchg
dec
mov
mov
cmp
stos
lods
out
jle
test
mov
mov
cld
jmp
cltd
jo
adcb
lahf
ds
pop
mov
test
ret
inc
stc
jecxz
jp
mov
inc
inc
test
dec
push
outsl
pop
xchg
jo
push
dec
adc
push
outsb
mov
push
mov
inc
into
stos
insl
jle
and
shlb
mov
lret
fldl
add
mov
mov
loop
sub
mov
jno
jmp
xchg
fs
out
mov
sbb
sbb
sbb
mov
push
scas
out
lret
cmc
add
cmpsb
out
xor
movsb
mov
orb
mov
dec
lret
mov
sbb
bound
add
pop
test
jns
sbb
push
dec
cld
sbb
jmp
stos
mov
sbb
imul
push
xor
cmpsb
and
stos
imul
inc
xor
cmp
test
and
cmp
lds
xor
add
ss
sub
and
inc
imul
ljmp
jns
push
fimuls
mov
stos
push
pop
mov
ret
mov
pusha
dec
fildl
mov
jnp
lahf
insl
xor
icebp
add
cmpsl
xor
pop
xor
mov
pop
pusha
and
jmp
stc
dec
fisubrl
out
push
add
cmp
or
dec
testb
out
and
cli
mov
jmp
sub
add
xor
mov
xchg
rcrb
mov
push
mov
stos
jmp
cmpsl
lods
sbb
xor
mov
ss
cs
daa
rol
pop
movb
dec
outsl
pop
shlb
outsl
push
lea
out
pop
xchg
dec
and
and
xchg
shrl
in
adc
into
fwait
in
addl
sub
mov
dec
cld
ds
mov
pop
inc
and
stos
pusha
push
mov
mov
jb
in
sub
bound
arpl
mov
test
add
adc
pop
dec
mov
fdivl
or
mov
ret
daa
push
dec
cs
inc
or
mov
sahf
push
xchg
dec
mov
shlb
fldenv
gs
jbe
nop
push
dec
push
loop
add
jo
mov
les
cmp
adc
gs
jns
je
mov
inc
or
or
mov
outsb
into
hlt
imul
dec
arpl
xor
push
dec
insb
mov
fwait
cmp
push
push
add
rol
fistps
mov
jp
jnp
mov
in
je
dec
test
ret
scas
pop
and
cmp
sub
hlt
inc
fcmove
in
jge
cmp
inc
sbb
bound
xchg
xchg
jb
test
fxch
loopne
loop
clc
cltd
sbb
aam
test
leave
insb
popf
fimull
or
pop
imul
mov
loop
cld
xor
mov
dec
fisubs
mov
fldenv
imul
mov
outsb
ljmp
fsub
dec
xchg
mov
rcl
shrl
and
inc
jno
inc
cmp
adc
push
mov
jmp
movsl
arpl
mov
mov
jb
nop
cli
imulb
mov
and
movsl
xchg
add
sbb
mov
xor
pop
push
push
push
test
das
fldl
fwait
xchg
test
loopne
test
mov
mov
push
outsb
scas
in
pushf
cmp
jo
popf
loope
out
push
push
out
outsl
mov
and
mov
scas
add
stos
lds
js
fstps
gs
and
add
mov
inc
sti
leave
cmpsl
lods
jae
jmp
mov
das
in
and
into
mov
out
nop
lods
xor
movsl
adc
inc
add
daa
aad
lret
cmp
test
test
pop
push
xchg
movsb
xor
adc
aam
push
ror
insb
es
adc
fcmovb
mov
iret
movsl
inc
mov
andl
sti
test
mov
sarl
sbb
mov
test
mov
fs
pop
cmp
adc
or
int3
cmp
pop
lock
xchg
jl
dec
cmc
xor
enter
mov
mov
jle
sub
les
test
jo
icebp
cld
fwait
test
test
mov
sarl
in
ret
jmp
jl
pushf
out
inc
ljmp
into
adc
pop
sbb
jmp
mov
gs
stos
sub
rolb
clc
loopne
jne
cmp
jo,pt
sahf
popf
in
cmp
daa
dec
ds
sbb
push
gs
mulb
push
add
rolb
inc
popa
cmpsb
adc
fistl
add
jmp
mov
mov
leave
adc
js
and
cmp
jnp
gs
xchg
cli
cmpsb
sbb
mov
mov
fsubl
fwait
pushf
xchg
pop
adc
fildl
adc
arpl
xor
in
cmp
pop
pop
pop
xchg
int
lret
add
inc
pushf
jg
adc
xchg
lods
cmp
cmp
xchg
mov
mov
mov
mov
mov
mov
xor
out
lret
xor
mov
movsl
push
fldenv
or
pusha
push
mov
cmp
fmul
and
in
push
xor
inc
xor
int
leave
mov
jl
or
insb
arpl
shrl
mov
in
pop
loope
in
jg
iret
add
jbe
or
and
push
jmp
ljmp
cmovg
jecxz
push
sbbl
mov
test
imul
adc
cld
cmp
cmp
mov
jbe
ret
sbb
inc
pop
mov
sub
movhps
bound
adc
xchg
les
daa
add
adcl
call
ja
jb
cltd
ret
iret
pop
push
mov
xor
xor
jl
push
and
sahf
je
adcb
sub
sub
dec
mov
jo
pop
insb
je
add
xor
or
fimull
push
mov
aad
mov
sbb
mov
mov
push
std
in
push
clc
dec
dec
ljmp
test
testb
inc
jb
mov
daa
stc
ret
xor
addr16
lahf
dec
test
dec
ja
pop
and
push
int
inc
sahf
mov
cmp
ja
popa
jb
shll
sbb
icebp
and
mov
cltd
scas
movsb
or
add
and
fists
ljmp
jp
cmp
xor
sbb
nop
cmp
popa
shlb
push
pushf
mov
test
fists
fcomps
testb
lds
dec
les
xchg
sbb
mov
js
in
or
data16
xchg
push
mov
mov
mov
nop
das
sarl
sarl
xchg
xor
cmp
jle
inc
in
dec
arpl
mov
push
ret
lret
cmp
out
in
add
sti
dec
dec
push
enter
arpl
mov
leave
cwtl
sub
ja
add
movsb
add
sub
fisttpll
adc
mov
jno
xor
lret
mov
mov
data16
xchg
pop
insb
fcmovb
cs
and
sub
dec
out
fisubl
outsl
mov
and
std
xor
sub
jmp
jnp
stos
xchg
daa
sbb
xchg
and
jno
mov
andb
mov
or
lret
imul
xor
iret
push
les
jns
dec
or
mov
gs
sub
idiv
jp
dec
jnp
mov
pop
sbb
adc
popf
push
fs
pop
lods
lcall
mov
imul
sbb
fs
bound
inc
inc
jns
sub
cmc
cmp
pop
jmp
test
add
jmp
jp
out
daa
mov
add
lock
mov
pop
sarl
rsm
js
or
jae
mov
addr16
push
xchg
push
mov
cli
loope
dec
adc
mov
push
jmp
fwait
aaa
les
push
mov
orb
sti
mov
jecxz
fnstcw
xor
mov
pushf
pop
jecxz
dec
xor
or
cmp
popf
or
sbb
jg
cwtl
push
dec
das
das
add
rcrb
pop
dec
sahf
inc
insb
ffree
or
pop
push
aas
lods
adc
fcomps
push
fldpi
lret
pop
pop
mov
jge
xchg
flds
lds
sar
xchg
rcrb
or
cli
mov
push
dec
sub
rorb
jl
stc
inc
mov
sub
arpl
push
cmovle
stos
pop
dec
bound
ror
sbb
push
or
or
add
fcomps
fsubl
and
adc
jp
mov
jmp
jecxz
fidivl
movlps
or
mov
cmp
mov
cmp
xchg
or
mov
push
adc
or
push
dec
ljmp
dec
xor
mov
addb
jne
jl
fbstp
into
int
repz
ljmp
loop
jnp
push
sbb
jg
cmp
adc
and
pop
cmpsb
jo
mov
mov
mov
sub
faddl
nop
enter
or
imul
bound
sti
push
or
stos
sbb
lods
sarb
test
sahf
lods
into
jg
cmp
insb
adc
psllq
imul
jbe
ss
push
lds
mov
in
inc
stc
adc
mov
dec
sbb
ljmp
sahf
adc
lods
cmp
mov
push
shrb
and
ret
inc
jmp
mov
pusha
outsb
aas
cs
gs
jae
fbld
pop
fsts
test
shr
in
sahf
pop
lods
cmp
mov
lcall
mov
gs
shrb
or
jno
adc
push
or
in
jmp
mov
push
jge
pop
ret
addr16
xchg
repz
pusha
dec
mov
lds
mov
cmp
xchg
dec
lods
dec
mov
or
pop
mov
aam
inc
mov
push
adc
xor
fnstenv
jnp
fstps
xor
inc
jmp
into
xchg
orl
lahf
lahf
bound
push
push
dec
cmp
mov
xchg
pop
or
inc
sbb
push
or
icebp
cmp
incl
mov
test
movsb
aas
mov
or
ss
or
addr16
jp
cmp
add
sti
inc
lock
enter
xchg
and
gs
int3
and
mov
rcl
insl
icebp
in
sbb
ss
sbb
dec
cwtl
decl
xchg
mov
outsb
adc
into
jne
loop
mov
movsl
inc
daa
addr16
nop
es
jecxz
mov
imul
cld
adc
xor
adc
xor
fiadds
fidivl
pop
mov
adc
inc
push
test
adc
aam
inc
mov
loop
push
lock
cmp
jo
pop
mov
ljmp
imul
adc
sahf
add
sub
ja
jmp
dec
or
cmc
or
outsb
gs
lods
push
shlb
adc
pop
inc
das
mov
test
xlat
mov
js
ficoml
js
aas
lea
pop
imul
jg
push
xor
subb
sub
mov
js
xchg
test
sub
lcall
hlt
jl
adc
jnp
adc
js
push
int
adc
repnz
leave
enter
xchg
cmc
ljmp
test
insb
sub
and
sbb
xor
and
loop,pt
or
pop
and
ret
or
test
and
xchg
pop
fwait
sti
sbb
inc
adc
jne
je
xchg
and
decl
movsb
mov
jle
inc
cmpsb
daa
cmpsl
mov
mov
test
bound
int3
arpl
insb
push
out
fsts
jl
sbb
push
fldt
lods
xor
inc
push
js
cmp
mov
push
clc
repz
pushf
addr16
or
xor
push
inc
pusha
sub
and
in
aas
inc
in
push
test
shll
dec
out
xchg
leave
in
pop
testb
mov
jb
pop
jb
cmp
in
cmp
dec
repnz
loope
test
cli
mov
jmp
mov
nop
fisttpl
sbb
loopne
xchg
push
and
into
jo
shlb
mov
jp
outsl
pop
stos
inc
out
mov
pop
xchg
js
roll
shll
or
jl
or
xor
ret
or
mov
sbb
cmpb
insb
dec
mov
xchg
scas
jp
or
push
test
cli
xchg
lock
leave
call
addr16
inc
pop
addl
iret
xor
mov
shl
sbb
int3
push
xchg
cmp
inc
shl
imul
jbe
xchg
aam
cli
jo
cmp
xchg
call
push
sub
sbb
mov
pushf
xor
adc
insb
sarl
ljmp
imul
jp
loopne
push
gs
fbld
subl
test
mov
xchg
jne
mov
xor
inc
dec
pop
sarl
jmp
ja
mov
dec
jb
pop
xor
cmpsl
test
orl
cmp
xor
sti
pop
out
sub
mov
inc
dec
push
sbb
sub
enter
and
sub
loop
cmp
sub
dec
jp
inc
outsb
cmp
fsubrl
gs
pop
add
ret
sbb
mov
lea
adc
inc
xor
sbb
test
imulb
popf
dec
hlt
push
jl
aam
push
sbb
popf
das
xlat
and
out
fcomp
cmp
dec
jle
fstps
bswap
adc
jg
arpl
xor
fwait
into
pusha
jo
mov
cmp
sbb
or
adc
mov
mov
pop
fld
std
clc
imul
xchg
pop
ljmp
dec
and
movsb
in
js
mov
cld
fimull
aaa
inc
ret
jnp
cmc
pop
lods
or
lds
mov
mov
adc
out
and
xor
xor
popa
test
jne
lods
cmp
cmp
or
ret
mov
xchg
mov
push
dec
push
shll
xchg
iret
lret
lock
pop
cltd
aam
psraw
push
adc
mov
pop
js
mov
mov
mov
jge
inc
push
jle
or
repnz
mov
cmp
inc
and
mov
push
es
mov
rolb
stos
pusha
out
stos
fcomip
faddl
xor
jl
and
mov
xor
scas
shlb
pop
leave
mov
rorb
xor
jmp
or
pop
aad
and
jo
jbe
and
addl
sub
ds
jnp
jb
mov
push
roll
cmp
cmpl
hlt
add
je
or
jno
mov
pusha
repz
xchg
cmc
sbb
cmp
repz
lret
jae
stos
mov
fisubs
fnstcw
xchg
mov
mov
jo
mov
sahf
scas
cmc
cmc
dec
andl
dec
les
dec
fcmove
shr
lahf
leave
inc
and
jnp
addr16
hlt
sti
sbb
and
rclb
into
jmp
mov
push
movsb
pop
pop
and
adc
jge
repnz
popa
imul
fs
ror
in
out
xchg
push
push
pop
xchg
or
aad
fistps
and
cld
sarb
rorb
pusha
dec
dec
mov
adc
out
aas
aaa
fcoms
xlat
dec
push
lea
imul
repnz
cmp
out
sbb
das
repnz
lods
fistpll
inc
incl
fimull
push
cmpsb
adc
test
push
push
lcallw
loopne
adc
push
jae
dec
sbb
mov
lcall
leave
imul
inc
xor
cwtl
add
jecxz
xchg
pop
mov
bound
jge
jecxz
cwtl
push
xlat
xor
je
mov
lds
rorl
fbstp
sbb
mov
insb
sub
push
adc
in
out
stos
lahf
mov
push
sbb
stos
enter
push
int
adc
or
jne
loope
and
mov
loopne
fiaddl
inc
jae
inc
aas
mov
loopne
pop
imul
repz
ror
xor
movsl
js
xor
outsl
movsb
rclb
fs
and
orl
dec
ds
loope
sbb
jbe
ds
push
lods
push
loopne
mov
shr
mov
push
mov
inc
mov
dec
push
jg
rolb
incb
mov
lcall
lods
enter
cli
sub
pop
sti
add
js
sbb
and
mov
sub
mov
hlt
sbb
lahf
sbb
int
or
mov
inc
mov
xchg
mul
sub
scas
shlb
mov
movsl
jmp
sub
pop
push
aad
das
inc
aad
xchg
testl
push
cmpsl
mov
test
repz
inc
xchg
stos
inc
shrl
add
js
shl
sbb
mov
stos
sbb
mov
cmc
rclb
lods
test
sbb
imul
outsl
int3
add
or
dec
sub
push
ds
gs
pop
xchg
mov
mov
in
repnz
jno
jns
mov
jmp
jb
out
es
or
jbe
mov
fidivs
inc
xor
and
hlt
out
add
xchg
outsb
push
dec
insb
fcmovbe
je
push
imul
into
pop
andl
mov
test
rol
pop
pop
in
pop
fadds
inc
mov
test
add
ja
fs
lds
and
add
mov
lret
mov
sbb
mov
inc
and
adc
sbb
pop
and
imul
dec
add
outsl
mov
pop
adc
lret
jecxz
out
subb
or
ret
sub
movsb
iret
dec
dec
mov
js
lahf
mov
inc
daa
dec
lret
loope
xchg
popa
pmullw
bound
outsb
adc
pusha
xchg
xor
or
or
push
xor
gs
push
xor
push
lcall
mov
in
push
clc
fsubs
cmpsl
cmp
fmull
cltd
in
test
movsb
cmc
cmp
lods
mov
cmc
cmp
out
push
and
fnstcw
andl
jbe
mov
das
sti
inc
adc
xchg
jb
in
lret
push
idivl
jmp
or
mov
add
dec
ret
sbbb
adc
xor
leave
mov
in
inc
mov
sub
pop
pop
pushf
xchg
out
sarl
jb
rol
mov
test
icebp
shlb
outsl
test
pop
adc
jmp
test
insb
js
sub
rorl
sub
pop
and
aad
mov
mov
cwtl
lret
es
cmp
addr16
rcr
call
push
inc
lock
dec
sub
in
sub
and
fidivrl
and
subl
and
pop
xchg
cmp
inc
cmp
mov
clc
adc
test
or
jmp
lock
jae
cmp
sub
push
addr16
pop
loopne
ficompl
or
mov
jg
sbb
idivb
cmp
jp
lret
and
gs
mov
popa
lods
dec
into
or
pop
aad
add
int3
mov
xor
daa
ret
ftst
mov
ds
mov
jp
stc
dec
xchg
out
jg
daa
movsl
dec
jle
and
mov
shl
xchg
or
push
add
ret
out
adc
je
sbbl
cmpsb
cmp
jg
sub
or
repnz
ret
mov
mov
push
xchg
xor
mov
fcmovu
mov
inc
cmpsb
dec
sbb
sbb
or
mov
inc
cmp
pop
ret
xchg
sti
cmp
sti
insl
mov
ja
aaa
adc
sbb
inc
test
sahf
out
dec
mov
sbb
adc
mov
das
jnp
adc
popf
fisubrl
jo
push
fists
cmp
repz
xchg
or
mov
mov
and
dec
push
addr16
inc
push
jb
lds
mov
mov
cli
or
sbb
sbb
xlat
or
xlat
pop
sub
xrelease
push
xor
dec
jo
stos
fdivs
ss
stos
xchg
ficomps
ficoml
pop
scas
sub
fs
push
sub
and
cmp
mov
in
mov
pop
mov
pop
add
mov
cli
xchg
jo
mov
push
sub
xor
jle
or
fdivrl
lret
mov
aam
fiadds
dec
imul
or
add
pop
int
lock
lcall
add
xchg
sub
and
not
lcall
jmp
pop
imul
add
arpl
sahf
out
sub
fsts
sub
pop
popa
data16
bound
pcmpgtd
fs
pop
xchg
loop
sub
xor
sub
shlb
mov
pop
popf
push
jno
xor
add
add
test
mov
jns
mov
in
dec
in
xchg
add
jae
and
loop
jo
xchg
in
repnz
push
daa
ret
sarl
add
jb
cmp
sbb
jg
rcl
stos
jnp
les
div
rcr
push
test
jmp
xchg
jp
movhps
in
inc
mov
outsb
adc
ret
mov
daa
loop
or
out
cmc
inc
jecxz
div
xchg
pop
fstp
nop
ds
and
xor
shl
cmp
xchg
les
cmp
dec
pop
add
sbb
mov
jae
cli
in
pop
xchg
ret
jb
jge
repz
loope
cmp
setg
and
cmpsl
push
push
shll
sub
push
jp
sub
imul
shrb
xchg
shl
aaa
add
movsb
aad
cmp
les
movsb
out
je
jecxz
rcr
nop
pshufw
adc
jnp
or
xor
jmp
aam
push
cmpsl
or
popa
inc
fimuls
into
cmp
imul
push
popa
mov
and
push
adc
dec
mov
jmp
jge
sbb
mov
mov
lea
mov
fwait
pusha
and
hlt
push
hlt
fistps
fwait
sub
mov
aad
aad
enter
jb
incl
ljmp
or
pop
xchg
dec
lds
inc
and
pusha
js
dec
jl
mov
sub
mov
mov
push
inc
cmp
aam
scas
mov
popf
scas
mov
jmp
inc
push
sub
ljmp
dec
xorb
outsl
sbb
pop
add
pushf
lret
mov
gs
mov
lea
jo
and
pop
jmp
sbb
lods
popf
nop
sub
add
inc
sub
pop
adc
lock
push
fstl
cmpsb
dec
shrb
and
xorb
cmp
jnp
mov
outsl
add
xchg
mov
xor
js
jne
inc
sub
xor
xchg
or
sbb
push
or
out
icebp
push
xlat
fisttpl
adc
adc
mov
jmp
rcll
dec
inc
shlb
pop
mov
cmpb
mov
adcl
mov
xchg
fstl
cmp
pop
mov
pop
xchg
dec
or
jg
test
repz
mov
cmp
scas
jp
gs
es
ucomiss
add
mov
out
push
add
daa
push
repnz
std
imul
mov
add
aaa
jp
xor
icebp
imul
hlt
mov
in
loop
push
out
imul
stos
std
cmp
rorl
cmp
mov
rclb
mov
lods
ds
idivl
loop
mov
add
cwtl
jbe
into
aam
cmp
icebp
stc
flds
pop
aas
or
sub
xor
adc
xchg
cmpsl
das
into
insb
idivl
in
sbb
shrb
fs
jecxz
xchg
lea
mov
xchg
cltd
mov
and
jne
cmp
mov
mov
imulb
sbb
push
dec
or
test
in
movl
add
mov
cmp
xchg
sub
in
xchg
push
or
outsl
ret
ds
mov
aas
mov
in
or
mov
push
aaa
int3
int
movsb
mov
data16
cmp
mov
xchg
sbb
mov
inc
int3
dec
fcompl
mov
or
xchg
outsb
bound
push
mov
add
dec
shrl
sbb
addr16
filds
fnstcw
xor
dec
sar
int3
js
pop
xor
jp
mov
push
fcmovb
cmpsl
dec
lret
and
jne
sbb
sbb
add
into
pushf
mov
lds
dec
push
mov
sti
fcomps
out
lret
push
xchg
inc
mov
cmp
insb
mov
sub
mov
sbb
rorb
pop
out
xchg
lock
xchg
ljmp
xor
sbb
and
test
test
aad
lcall
mov
xchg
ja
push
add
mov
scas
dec
or
int3
call
sub
lds
or
ljmp
adc
int
mov
mov
stc
scas
test
lea
popf
nop
loopne
cld
jg
push
outsl
test
fcmovb
mov
movsb
inc
std
cs
ficoms
cli
or
dec
fistpll
orl
aad
mov
insb
outsb
and
rorb
push
lcall
ljmp
dec
mov
sub
rclb
leave
jbe
add
mov
cmp
cmp
inc
mul
xor
pop
cmc
xchg
adc
push
pop
mov
loope
xchg
int3
in
cmp
ss
xor
js
and
sub
mov
cmp
sub
push
add
or
test
test
leave
sub
mov
pushf
pop
and
jp
push
mov
frstor
add
jbe
aaa
call
push
in
lods
mov
dec
pop
inc
fcmovnb
push
icebp
fcomps
pushf
pop
or
sbb
out
inc
mov
cmpsl
push
mov
pop
xor
mov
push
clc
std
and
push
xor
fcoml
or
sbbb
sbb
mov
call
test
mov
aas
sarb
or
dec
lret
push
rcr
xor
mov
mov
and
iret
inc
lcall
cmp
sbb
jecxz
dec
rcrw
cmpsb
std
test
lahf
mov
and
lds
jmp
sbb
mov
mov
cmp
jl
xchg
inc
loopnew
add
stos
xchg
mov
ljmp
push
xchg
loope
xorb
jge
mov
mov
mov
mov
jg
aaa
pop
lahf
call
out
pop
or
popf
in
jnp
addr16
out
xor
aas
sbb
insl
aad
mov
xorb
dec
lds
sub
or
sbb
aaa
gs
dec
or
notl
xchg
xor
cmp
jbe
mov
or
in
and
sub
cmp
cmpsb
add
xchg
xchg
int3
lods
cmp
lds
ja
imul
leave
repz
cld
mov
or
loopne
bound
xchg
inc
popf
je
xor
adc
aam
pop
cmp
loopne
in
sbb
jg
push
sbb
adcl
lods
adc
sahf
fcomps
xchg
popf
jnp
popl
mov
xor
movl
aad
pop
jnp
inc
iret
xor
mov
sbb
mov
fldt
mov
mov
scas
shlb
lods
mov
lods
pop
js
cmp
loope
decb
dec
sbb
out
repz
repnz
mov
cmp
pop
xor
mov
add
push
stos
mov
js
arpl
arpl
adcb
pop
xor
shl
jmp
jge
sub
mov
sub
insl
or
xchg
lock
and
jmp
mov
sti
mov
pop
notl
shr
mov
test
inc
or
outsl
cmp
jp
sahf
out
jge
je
in
xchg
dec
lahf
in
inc
lods
movsl
rorl
fcomp
loopne
jecxz
andl
cmp
outsl
xchg
fsub
push
jge
mov
pushf
popl
fdivp
inc
pop
loop
inc
or
ss
arpl
ja
fs
ret
outsl
sub
mov
push
pusha
jne
jmp
and
xor
sbb
cld
lret
sbb
mov
dec
inc
sub
cli
and
in
out
jo
mov
xlat
lock
and
or
mov
mov
jno
mov
out
jnp
mov
jae
push
pop
iret
xchg
fisubs
push
jns
sbbb
mov
les
rcll
sbb
outsl
popf
lcall
pop
add
icebp
pop
pusha
mov
mov
cwtl
cmpsb
mov
mov
movd
xchg
cmp
mov
lds
out
push
jo
and
fildll
mov
enter
sub
jl
sahf
and
cmpsl
push
mov
lcall
test
sub
mov
inc
insb
mov
xor
sbb
pop
in
out
dec
jl
xor
fdivs
call
mov
mov
pop
lret
adc
lea
inc
shlb
mov
int
adc
dec
inc
ficomps
bound
or
subb
pop
aad
rorb
mov
mov
loop
mov
push
leave
sbb
inc
cld
in
dec
cmp
lods
cmp
pop
sub
jae
fyl2x
icebp
jmp
xchg
les
clc
adc
push
lret
scas
test
push
dec
mov
inc
mov
nop
bound
jl
lods
test
je
imul
lahf
lods
xor
push
insb
push
in
mov
addl
push
jge
je
shll
sbb
xor
jbe
pop
mov
dec
or
mov
or
sti
pop
xchg
dec
je
sti
xor
stos
cmp
test
mov
sub
or
and
cli
es
outsb
std
scas
lock
faddl
cmp
cs
das
lcall
or
add
cs
cld
dec
xchg
jbe
pop
arpl
xchg
cld
jne
mov
fldenv
jge
imul
jnp
mov
ljmp
stos
adc
dec
sti
add
lods
ret
addr16
inc
push
stos
mov
push
jg
outsb
dec
int
outsl
adc
cmp
in
adc
in
imul
cltd
cmpsb
xchg
sub
pusha
dec
inc
dec
and
pushf
sub
xchg
inc
mov
inc
mov
aam
push
pop
mov
xchg
xlat
data16
sub
dec
push
dec
stos
pop
mov
imul
test
sbb
insl
mov
repnz
pusha
dec
mov
adc
dec
lahf
sbb
lock
mov
jp
add
outsb
and
mov
scas
sub
mov
stos
and
jmp
add
cmp
sbb
shlb
cmp
cld
or
xor
stos
leave
cmp
stos
mov
cmpsl
scas
fistpll
pop
lods
mov
ja
roll
mov
insb
sbb
push
lret
sub
imul
jge
movsb
lcall
sahf
mov
stos
dec
insl
shr
insb
nop
loop
xor
push
and
xchg
cltd
ret
insb
sbb
push
aad
ljmp
fwait
xchg
mov
xchg
mov
mov
jo
mov
sbb
jne
pop
jge
jl
jp
push
sbb
std
sbb
adc
jnp
xchg
fimull
shlb
popa
add
mov
adc
xor
dec
mov
loop
sub
xor
cmp
add
mov
sbb
cmpsb
pop
test
inc
jne
push
push
sbb
dec
add
shl
clc
out
mov
jae
loope
push
out
or
add
xchg
fwait
test
fucomp
fnstsw
inc
xor
sub
cli
or
push
mov
inc
adc
fstp
pop
ror
and
mov
fdivs
neg
dec
push
movsb
or
inc
bound
ss
test
dec
dec
call
popa
or
mov
xor
mov
sbb
icebp
incl
gs
sub
lahf
push
xchg
xchg
popa
nop
icebp
popa
dec
cmp
mov
cmp
stc
sbb
push
pop
jnp
iret
loope
enter
into
add
xor
xchg
sbb
in
adcb
xchg
inc
add
repnz
gs
sub
in
push
int3
inc
out
add
xchg
cmp
lcall
in
mov
cmc
stos
push
les
mov
push
sub
repz
in
outsb
les
inc
insb
imul
out
shr
adc
test
xchg
sti
fdivrp
xchg
lods
pushf
jne
jmp
xchg
adc
sbb
xor
gs
lods
lea
push
int3
inc
int3
lds
test
mov
sbb
out
pop
sub
pop
mov
cmp
jne
jo
sub
xor
das
out
xor
dec
sub
imul
dec
adc
push
push
daa
nop
faddl
test
scas
rorl
outsl
mov
add
pop
lcall
or
xchg
sub
repz
xor
dec
jecxz
add
fstps
sub
jns
lahf
enter
sub
push
inc
mov
orb
stos
mov
push
xor
bound
jae
test
out
lcall
cmpsl
cmp
cltd
lret
push
xor
or
inc
sbb
inc
pop
mov
cs
add
loopne
sub
mov
movsb
pop
sbb
mov
xor
cli
movsb
mov
fsubrs
adc
and
or
mov
nop
int
xchg
ja
jbe
sbb
outsl
loopne
aam
jbe
sbbl
cmp
loopne
jno
jnp
mov
add
push
ficomps
loop
mov
and
adc
cs
mov
sbb
adc
repz
sub
xchg
into
mov
dec
mov
cwtl
push
sti
lds
push
mov
pop
mov
dec
test
arpl
pop
xor
out
xlat
jle,pt
mov
mov
ja
fnstcw
xchg
les
sbb
mov
xor
xchg
pushf
adc
cli
jne
pop
scas
mov
cmpsl
fs
mov
nop
das
ljmp
rolb
sub
cmp
jns
push
inc
cmp
and
adc
lahf
push
fisubrl
xor
xlat
or
inc
iret
inc
sti
into
insb
es
pop
jb
cld
push
xor
add
rclb
int3
lahf
or
cmp
jb
cmpl
mov
leave
push
outsb
inc
int
cmp
inc
push
sti
in
xor
and
fcompl
lea
and
inc
mov
in
lods
adc
push
outsl
push
sub
mov
or
cmpsl
scas
xchg
cld
cmp
add
xor
mov
stc
roll
push
cwtl
loope
sbb
loope
dec
pop
push
popa
mov
cld
xchg
shll
testb
push
nop
stc
mov
mov
mov
out
out
mov
push
xchg
icebp
inc
xchg
in
test
jg
fucomp
pop
sbb
and
mov
repnz
cmp
es
cwtl
jg
mov
mov
ljmp
arpl
les
dec
jl
cmc
and
and
xchg
ds
adc
pop
jmp
sarb
imul
mov
cmpl
dec
jns
lods
test
iret
sub
and
push
test
cmp
cltd
jl
fsubrp
dec
and
cmp
pop
mov
out
stos
cmp
rorb
cmp
rcl
imul
lods
aam
mov
jno
or
jp
fnstenv
inc
inc
loopne
lods
gs
das
in
xchg
mul
and
adc
jo
sub
dec
xor
add
fcoms
movsb
and
mov
dec
lods
mov
xchg
jns
cmp
arpl
jb
pop
test
nop
push
dec
and
adc
stos
ds
in
stos
pop
pop
out
sbb
sub
std
adc
inc
push
mov
stc
cmc
shl
loop
and
and
inc
inc
inc
aaa
xchg
mov
push
cmp
leave
ror
mov
daa
cmp
sub
mov
rorl
shlb
in
push
mov
mov
invd
push
cmp
icebp
mov
mov
test
mov
aam
test
sbb
xor
xlat
inc
or
shrb
stos
adc
int
popa
add
or
aas
int
imull
in
in
outsl
into
adc
cmp
mov
or
dec
adc
pop
ja
mov
push
or
dec
mov
ljmp
or
shl
ror
out
into
or
mov
mov
or
mov
cmpsb
repz
dec
lods
mov
push
sub
pop
pop
out
fadds
cltd
pop
adcb
loop
inc
push
mov
xchg
nop
lods
cwtl
pop
mov
mov
inc
jnp,pt
jns
jge
pop
sbb
dec
ss
pop
call
mov
out
adc
les
lea
add
sbb
sbb
mov
jp
lcall
loopne
adc
pop
adc
sbb
cli
add
or
je
inc
push
ret
and
or
mov
ret
adc
dec
xchg
pop
leave
and
cmp
push
xor
inc
cli
jb
push
pop
lret
cmp
psubusb
xchg
mov
ds
mov
ret
sbb
movsl
outsb
out
add
int
rorl
in
loope
loop
dec
out
sub
adc
or
sub
push
push
pop
aaa
lea
fwait
in
xor
mov
add
fcmovbe
dec
xor
negb
sub
loopne
fnsave
fs
jecxz
cltd
ds
mov
popa
jnp
cmovle
enter
push
push
mov
repnz
mov
aam
punpckhwd
pop
or
rcll
push
cmp
xor
jnp
bsr
filds
loopne
pop
shlb
add
jne
daa
mov
dec
jecxz
sbb
loope
repz
sbb
and
clc
xor
mov
movsb
adc
ljmp
push
negl
push
mov
mov
push
xor
mov
cmp
xchg
mov
xchg
clc
add
pusha
js
jb
or
in
cmpsl
ror
mov
pusha
push
pop
cmp
icebp
cli
push
stos
iret
js
adc
inc
pop
sbb
pusha
xor
ja
cmp
or
shrb
es
cmp
and
inc
xchg
dec
pop
pushf
lahf
add
fisubrs
scas
stos
out
mov
lahf
push
in
lock
sub
push
sub
adc
sti
xchg
daa
push
cmpsb
mov
add
cmp
mov
mov
jne
lret
cld
or
or
mov
aam
cmp
outsl
icebp
clc
inc
ja
in
cld
dec
xlat
mov
lret
shlb
jecxz
mov
add
imul
loopne
cmc
cmp
mov
mov
popa
mov
fwait
dec
mov
in
pop
cmp
loopne
in
popa
int
add
push
inc
xchg
sub
ja
sub
and
mov
mov
sbb
xor
jmp
into
push
pop
or
xor
das
and
loope
cmp
xchg
pop
out
lcall
outsl
int3
jge
push
dec
int3
test
mov
mov
dec
dec
pop
ja
sbb
ss
lea
dec
int3
sbb
mov
cmpl
lods
inc
mov
icebp
fidivs
fcmovnu
push
mov
push
in
movsl
inc
mov
xchg
cwtl
mov
xchg
xor
inc
ret
mov
insl
repnz
ds
shl
mov
jle
dec
pop
bound
mov
les
pop
fsub
pushf
push
subl
int3
int
xor
cmp
inc
add
stos
repnz
and
xlat
test
std
xchg
fisubs
mov
adc
enter
jo
cmp
decl
inc
in
fs
inc
push
int
jge
loope
cmp
popa
icebp
out
fs
repz
fwait
pop
scas
mov
pop
dec
inc
dec
xlat
adc
fiadds
arpl
xor
lret
mov
push
insb
fisubrl
lods
add
cmpsb
add
icebp
push
push
outsl
push
std
je
xchg
in
lods
adc
jnp
xchg
or
mov
add
ja
shlb
xchg
pop
shrb
rorb
jo
ja
adc
sahf
push
sbb
scas
test
nop
ret
dec
jbe
in
out
lods
movl
movsb
fiadds
push
xor
cwtl
add
cmpsb
pop
xchg
mov
lock
ret
int3
inc
icebp
outsb
pop
jne
mov
jb
iret
dec
fsubrl
dec
push
pop
mov
mov
mov
ficoml
insb
or
pop
push
push
xor
xchg
dec
movsb
lea
popf
mov
repnz
shlb
mov
sahf
inc
aam
sub
hlt
adcb
mov
int
std
pop
add
sbbl
adc
push
mov
cli
fimuls
das
ja
lcall
mov
push
mov
dec
cmc
xchg
inc
daa
dec
loopne
jmp
lret
stos
and
pop
loop
pop
je
ret
jge
imul
xchg
xchg
dec
xchg
cs
nop
adc
xor
rorb
aaa
cld
in
in
mov
cmpsl
sbb
fucomp
and
clc
leave
jo
and
fistps
subb
lcall
cwtl
mov
push
mov
mov
lds
aaa
mov
cmp
insb
cmp
push
cmp
fmull
mov
bound
add
cld
fcomps
cltd
cltd
xchg
mov
divb
jb
lods
xchg
mov
pop
jge
loop
sub
adc
lcall
dec
pushf
lea
fcoms
sub
xchg
icebp
pop
mov
mov
lds
jl
dec
push
sbb
enter
adc
jns
inc
and
mull
and
or
adc
insb
mov
imul
dec
mov
popf
add
cmp
addr16
shl
test
outsl
mov
push
jmp
dec
jnp
movsb
aam
xor
sub
repz
push
push
daa
es
or
gs
outsb
loopne
jno
lea
fmull
mov
sbb
fidivl
rorl
pop
adc
cmp
mov
inc
jmp
out
into
xlat
pop
mov
and
lock
jbe
xor
incb
iret
adc
mov
cmpsl
pop
inc
pop
ljmp
push
lea
mov
fnsave
sub
pop
jp,pn
cmp
pop
pop
cwtl
jle
imul
and
mov
xor
bnd
push
out
pop
stos
pop
orb
movhps
inc
lahf
or
xchg
push
mov
cli
lods
ds
lds
mov
stos
sub
and
loop
inc
xchg
adc
les
test
jns
stos
stc
das
dec
aam
lea
out
ds
into
popa
daa
ret
lea
dec
add
jmp
and
sti
adc
bound
cli
pusha
into
dec
rcll
sbb
in
mul
in
sarl
lahf
scas
lea
pop
mov
sub
imul
cmpsl
jb
push
push
ja
notl
clc
jns
je
jmp
push
stc
pop
sub
ret
xor
fmuls
pop
sub
pop
push
xor
test
sub
out
aam
pop
jge
jnp
loopne
adc
inc
inc
insl
dec
jp
adcl
adc
call
push
rcrl
pop
rclb
mov
push
inc
or
lcall
pop
jnp
cmc
and
loopne
cld
out
xor
fs
loopne
loopne
gs
mov
xor
ret
cmp
lahf
mov
pop
mov
bound
add
ret
pop
les
stos
mov
outsb
sbb
out
dec
insl
gs
das
jge
adc
adc
repnz
jge
inc
xlat
sub
sti
call
sub
int
lds
mov
dec
dec
pop
pop
shlb
pop
inc
dec
mov
xchg
into
fisttpll
sub
ss
cmp
popf
push
and
jns
mov
testb
andb
jne
xor
pusha
xchg
pop
insb
jo
aam
dec
push
sti
pop
mov
loope
pop
stc
xchg
or
sub
jl
push
enter
insl
sub
mov
xor
in
and
xor
jle
out
sahf
rclb
pop
pop
and
aam
xor
mov
sub
movsb
int3
xor
lea
pop
int
push
dec
sub
dec
stos
stos
jp
pop
pop
clc
pop
xor
mov
popa
xchg
and
or
jle
clc
mov
je
lret
xor
cs
push
in
push
add
xchg
fnstcw
ss
mov
pushf
fisttpll
out
fidivs
jo
or
lahf
xlat
leave
jo
stos
dec
sub
sbb
leave
cltd
dec
test
mov
fcmove
cmpsl
pop
out
xor
push
mov
jbe
lods
lock
jae
push
xor
xor
enter
fisubrl
mov
inc
lahf
pushf
push
xchg
and
popa
mov
addl
les
and
adc
or
sarb
sbb
notb
and
imul
int3
dec
adcl
mov
cwtl
lahf
insl
pop
add
xlat
jnp
jne
subb
shr
sbb
push
pop
push
and
xchg
enter
xor
jne
loope
dec
movsb
rorb
and
test
jns
mov
cmp
inc
jno
sbb
popa
xchg
pop
or
in
jnp
sub
bound
mov
clc
lods
push
rcrb
es
jo
push
or
jno
hlt
test
lods
and
mov
enter
xchg
lfs
fiadds
xchg
imul
sarb
jl
mov
leave
pushf
dec
shll
stos
dec
jo
push
push
or
repz
xor
imul
xchg
aas
std
mov
cld
pop
out
mov
push
ljmp
push
fmulp
pop
pushf
jp
push
sub
mov
mov
inc
adc
and
call
mov
mov
mov
data16
or
imul
mov
lret
js
pop
imul
inc
in
jmp
xor
shr
movsb
mov
sahf
or
jmp
mov
int3
cmp
xor
pop
mov
cltd
xor
xchg
mov
cmpsl
xchg
bound
sbb
sub
mov
nop
in
add
clc
out
jp
inc
add
sub
push
sarb
pop
stos
sub
scas
jo
test
daa
mov
clc
mov
loope
push
repnz
and
xchg
pop
adc
jle
sub
icebp
adc
mov
lods
imul
out
lock
scas
xchg
mov
or
xor
imulb
outsl
aaa
cmpsl
lret
inc
ret
mov
sub
adcb
sub
jb
jo
mov
mov
movsl
jmp
dec
mov
sbb
sub
popf
push
pusha
imul
out
pushf
shl
lcall
mov
stos
rcrl
outsb
outsb
or
mov
pop
aam
dec
movsb
ret
adc
adc
inc
sbb
mov
addr16
cmpb
popa
enter
sub
sub
push
sub
lahf
jle
in
cltd
pop
xchg
jno
push
cmp
sbb
mov
insl
adcl
mov
inc
cmc
sub
dec
cmp
test
es
lcall
xor
cmp
popf
jbe
pushf
data16
sbb
add
outsl
xchg
mov
ffreep
ror
sbb
mov
xchg
xchg
jle
pushf
ss
loope
test
data16
xchg
jp
fucomi
out
sub
xchg
lret
sbb
xor
addr16
int3
dec
xrelease
inc
fucomip
push
mov
hlt
add
cmc
mov
pop
cmp
adc
xchg
bound
sbb
jae
mov
movsl
outsl
popa
fld
dec
or
inc
lea
mov
adc
cmp
push
jbe
jle
nop
mov
xor
dec
adc
sub
xor
or
push
loopne
push
sti
push
popa
inc
xchg
stc
test
shll
sub
or
sbb
push
lods
push
out
add
fucomp
fwait
dec
imul
shrl
ret
dec
mov
cmp
aam
and
in
outsb
add
mov
fnstsw
je
adc
pop
add
test
cmp
popf
xor
push
sub
hlt
jg
sbbl
leave
out
repz
sbb
fidivs
leave
ret
jle
cmp
pop
lods
clc
movsl
cmp
xor
popa
aam
int3
and
cmp
ret
xchg
icebp
aam
cwtl
mov
push
sbb
pop
les
dec
cmp
jg
inc
or
loope
inc
movsb
and
mov
sub
shrl
pop
orb
xor
lock
jnp
into
loop
inc
mov
and
mov
repnz
mov
popa
test
mov
movsb
cmc
xchg
sub
mov
test
arpl
addr16
lret
adc
fiaddl
mov
add
stos
mov
add
arpl
ljmp
pop
idiv
add
shr
mov
in
jb
or
repnz
repnz
ficomps
fdivs
data16
cmp
cmp
lcall
scas
pop
inc
and
push
cmpsl
jg
cmp
sbb
sbb
sub
adc
mov
mov
xchg
div
adc
push
inc
icebp
pop
jae
jne
cwtl
clc
mov
xchg
pop
ret
xchg
popa
shlb
mull
out
cmp
loope
rcrl
inc
mov
lock
clc
pushf
enter
movsl
shrb
ret
cmp
sbb
mov
jae
aaa
mov
mov
mov
push
aad
inc
xchg
rcrl
js
dec
sub
jecxz
repnz
push
xor
mov
xchg
pop
xlat
fcoml
shl
imul
mov
test
adc
outsb
imul
pushf
out
ljmp
mov
jp
aam
test
sub
cmp
repz
add
or
cmp
sbb
adc
stc
xchg
xor
roll
jl
dec
sti
xor
rorb
adc
add
mov
scas
loop
add
in
and
xchg
call
insl
mov
fs
and
cmpsb
ret
leave
add
and
mov
daa
out
jne
add
je
mov
sbb
sub
mov
jns
inc
lock
fisttpll
or
lea
mov
popf
mov
sub
add
mov
insb
and
loope
sbb
xchg
jnp
js
pop
aad
xchg
scas
subb
mov
lcall
fisttpll
add
and
aad
rcr
sub
xlat
push
xlat
cli
mov
sbb
cmpsl
fsubrp
push
inc
lods
add
sbb
outsb
cs
or
jle
mov
push
inc
or
repnz
sub
ja
pop
jg
pop
mov
imul
push
imul
pop
or
aas
in
fsubs
xchg
inc
mov
xor
jmp
inc
mov
cmp
xchg
lcall
xlat
das
cld
clc
into
cmp
adc
cmp
mov
mov
fcomi
ja
fnstenv
popl
sahf
mov
bound
mov
nop
pushf
jg
push
sbb
rcrl
pop
push
mov
repnz
inc
andl
fimull
dec
dec
jbe
loopne
xchg
jp
cli
jo
iret
mov
jecxz
sub
aaa
xor
mov
jbe
mov
scas
jnp
cmc
add
data16
leave
stos
stos
test
iret
out
mov
sub
scas
xor
mov
cld
and
popf
rcr
dec
sub
subl
aam
out
adcb
or
xlat
push
test
mov
xlat
cmp
mov
lea
pop
xor
push
mov
jp
mov
sahf
ss
aam
lock
jnp
and
outsb
pop
sub
mov
test
icebp
or
and
pushf
or
push
inc
mov
out
push
jne
jge
dec
sti
pushl
hlt
sbb
mov
into
into
dec
outsb
inc
pop
andl
sbb
repnz
cltd
mov
pop
sbb
pop
and
pop
push
ficompl
loope
lcall
dec
popf
or
mov
push
lods
pop
and
test
xchg
jne
sbb
clc
mov
call
sbbb
adc
loopne
popf
fcomi
test
inc
arpl
dec
mov
cwtl
popf
xchg
pop
dec
adc
mov
pop
sbb
pop
cmpl
in
mov
add
jb
ljmp
inc
cmp
in
push
fnstcw
dec
dec
ds
mov
in
mov
dec
mov
sbb
dec
dec
loop
adc
jns
xchg
addr16
mov
inc
mov
ljmp
ret
dec
pop
fistl
or
push
sahf
loop
test
hlt
and
mov
inc
sbb
xchg
loop
cmpb
insl
imul
dec
repz
sbb
push
push
aaa
adc
sub
stos
fcmovnbe
rcrb
xor
fwait
shll
inc
test
lcall
cmpb
adc
push
cmp
movsb
xor
das
dec
aas
adc
cs
push
inc
and
dec
arpl
cmp
or
sbb
inc
pop
mov
mov
stos
movsb
cwtl
loop
aad
pop
les
popa
clc
push
or
jbe
and
lods
sbb
mov
roll
pop
aam
add
fidivrl
mov
mov
ret
cmp
es
ds
and
pop
xor
xchg
das
mov
xchg
stos
mov
lret
out
pushf
push
fimuls
cmp
adc
icebp
or
in
jae
jae
jge
fisttpll
sbb
inc
outsl
mov
shrb
loopne
dec
lret
cs
sbb
sbb
gs
aas
sbbl
xchg
dec
lock
mov
mov
xchg
xor
push
lods
or
hlt
xor
sysexit
cmp
lcall
idivl
mov
fwait
popa
lods
fmuls
js
outsl
ljmp
inc
push
inc
push
xor
aam
pop
popa
ret
ss
pop
mov
pop
mov
fwait
sub
aaa
push
xlat
mov
cmc
inc
cmp
test
insb
xchg
sahf
sti
iret
fldt
mov
and
sub
jne
cmp
scas
inc
or
es
cmp
stos
inc
aaa
loop
repnz
add
mov
testb
jl
dec
mov
adc
sbb
in
xchg
push
sbb
test
xor
es
js
js
in
out
sbb
leave
in
cs
adcl
or
sbb
dec
ljmp
negb
xchg
lret
test
adc
jno
fldl
std
jb
or
jmp
cs
and
mov
inc
cmp
sbb
test
aas
out
ss
outsl
in
mov
addr16
or
insb
xchg
inc
outsb
mov
scas
call
or
mov
add
push
loopne
testl
outsb
and
mov
int3
dec
pop
test
aaa
fmull
test
sbbl
mov
jp
push
dec
add
imul
xor
ljmp
inc
mov
mov
cmp
xchg
lods
cmp
test
adc
inc
xchg
clc
pop
and
push
pop
sbb
sub
mov
mov
std
stos
insb
sub
mov
xor
push
inc
mov
lret
xchg
mov
pop
cmpsb
cmpsl
jbe
out
mov
push
jmp
mov
sbb
lret
pushf
xor
mov
leave
jp
ret
subl
add
in
lea
mov
cwtl
sbb
mov
repnz
mov
xor
in
mov
int3
pop
gs
xor
rcll
test
or
push
sbbb
scas
ljmp
pop
iret
jecxz
sti
inc
in
mov
sub
mov
push
cld
sbb
lret
leave
and
in
adc
adc
out
mov
inc
pop
inc
test
imul
dec
xor
lcall
mov
ds
shl
xchg
ror
xchg
add
lahf
jl
repnz
cld
iret
test
push
lods
out
rol
daa
xor
mov
xor
jg
mov
cld
daa
and
mov
pop
into
xor
xlat
lock
xchg
mov
lcall
fwait
in
push
mov
outsb
xchg
jno
mov
xlat
adc
add
lds
xchg
mov
xor
mov
jp
addl
out
sbbl
loopne
jae
jp
stos
les
push
add
or
movsb
call
es
mov
mov
xlat
adc
jns
xchg
fidivl
in
adc
hlt
jo
jecxz
orb
std
ljmp
mov
repz
imul
cltd
or
cmp
jnp
aad
push
imul
cmp
ja
xchg
jns
mov
sub
adc
mov
xchg
xchg
push
push
sub
bound
mov
or
lahf
rcll
xor
cmp
scas
mov
dec
push
inc
int
ret
pop
aaa
outsb
push
cmp
pop
icebp
dec
in
add
into
dec
cmp
test
xchg
movsb
lcall
xchg
mov
ret
pop
fs
ds
mov
add
cmp
push
cmpsl
pop
lcall
xchg
fnstenv
data16
mov
adcl
adc
pop
xor
xlat
pop
pop
hlt
dec
jg
scas
aam
or
or
adc
sbb
pop
xchg
dec
lcall
mov
or
pop
cli
hlt
push
cmp
fmul
jo
sti
stc
stc
push
scas
repz
mov
inc
mov
mov
sbb
jo
push
inc
and
adc
jno
xchg
fmull
lcall
iret
sub
iret
cmp
mov
aam
and
and
in
loopne
or
adc
in
jle
out
or
push
cld
and
fadds
call
inc
int
rcr
sbbb
add
out
xchg
lcall
pop
shl
xchg
lcall
add
ja
or
inc
addr16
addb
ret
ljmp
jno
push
add
cwtl
cmc
and
jae
xchg
fcompl
push
or
roll
std
xor
lods
add
sub
lea
mov
sti
ret
in
out
ret
pop
or
gs
test
jmp
xchg
inc
mov
push
lahf
aaa
xorl
into
jb
cmpsb
lods
in
add
mov
adc
mov
lahf
cmp
mov
mov
or
jo
mov
insb
or
test
jge
push
jp
dec
mov
fcoms
cmp
jge
pop
xlat
int3
jo
mov
xorl
mov
mov
int3
test
iret
xchg
gs
daa
shll
mov
push
cmp
jbe
mov
xchg
je
in
ja
ljmp
aaa
movsl
js
push
pop
sub
sbb
stc
sti
adc
pop
sbb
dec
sarl
sbb
dec
xorb
dec
and
jecxz
jmp
mov
call
cmp
shl
pop
or
iret
stos
xlat
jnp
repz
mov
adc
xor
mov
pop
repz
xchg
addr16
cmp
addb
add
out
repnz
leave
aas
xor
jecxz
xor
xchg
inc
mov
fldenv
inc
cmp
cld
fs
xor
add
cltd
faddl
mov
xchg
fnstenv
mov
in
das
cmpsl
inc
fwait
cwtl
push
daa
test
xchg
xor
aad
mov
movsl
push
jmp
sti
sub
jge
scas
or
imul
insb
inc
in
push
lret
adc
mov
mov
xchg
cmc
mov
icebp
jmp
adc
dec
lock
lret
jp
push
mov
fistps
cmpsl
dec
test
ljmp
cmc
add
stos
and
popf
notb
sub
ss
mov
sbb
pop
pop
cmpsb
xchg
aam
dec
mov
les
cwtl
adc
mov
inc
out
and
aam
mov
sbb
pop
adc
sub
int
inc
cmc
mov
jne
loop
inc
mov
add
mov
mov
lods
or
inc
jns
sbb
xlat
scas
ret
scas
js
dec
xor
movb
jp
jp
cmp
push
sbbb
add
frstor
std
sbbl
ljmp
xchg
adc
sub
mov
push
mov
mov
call
xchg
jp
ss
mov
stos
xor
int
das
sahf
mov
mov
xchg
stc
ret
push
lods
test
add
mov
es
cli
xchg
sbbl
int
jnp
mov
call
incl
or
jns
sub
mov
mov
int
sub
cs
hlt
jno
outsl
xchg
idiv
mov
subb
xor
xor
jo
cmpl
cmp
orl
cmp
data16
ljmp
aaa
out
adc
imul
inc
sub
pop
jecxz
sbb
iret
push
mov
lds
cli
pop
mov
or
lret
pop
cld
movsb
push
add
call
push
scas
cmp
and
sahf
jne
dec
pop
mov
jp
sub
icebp
cmc
pop
cmpsl
sahf
loop
xchg
cmp
inc
rorb
xor
or
add
dec
in
push
adc
pop
sub
dec
xchg
out
inc
mov
inc
imul
or
popa
sti
adc
pop
fdivrs
in
push
fucom
pop
xor
jge
add
enter
sbb
jge
movsl
jb
cmpsb
cmpsl
sbb
add
sub
pushf
in
les
insb
aaa
dec
pop
push
mov
inc
rclb
cli
insb
push
jl
cmp
sub
test
ret
sub
cpuid
lret
sbb
insl
loope
cmp
pop
iret
shrb
push
cmp
icebp
xchg
add
or
and
lahf
jl
das
mov
jl
adc
or
negl
push
ljmp
mov
mov
xlat
sub
fs
cmp
cltd
fldenv
xchg
int
fnstsw
sub
cwtl
fildl
jecxz
dec
push
shll
xchg
adc
das
jl
adcl
mov
cmp
jmp
adc
fwait
mov
xchg
test
cmp
lret
adc
vmwrite
lock
in
std
shrb
adc
movsb
mov
shrb
push
dec
lds
pop
lock
sbb
loope
call
xchg
add
imulb
jmp
pop
ss
xchg
daa
faddl
mov
inc
mov
xor
fwait
es
movsb
aas
ret
adc
fwait
add
stc
xor
mov
aam
dec
sub
xchg
mov
rcll
int
lock
inc
loope
leave
repz
jp
cmp
les
mov
cmp
jp
xchg
xchg
neg
push
sub
das
and
aad
add
dec
in
jmp
mov
add
sub
pop
bound
cmp
dec
jle
scas
pushf
and
xor
pop
sub
out
mov
push
and
pause
dec
inc
jns
xchg
xor
cwtl
push
jg
insb
push
add
scas
pushf
aad
das
mov
mov
sbb
lret
jmp
push
ljmp
std
jno
das
jbe
mov
ret
mov
jae
rcrb
inc
imul
fnstsw
xor
flds
mov
pushf
fisubrl
out
lcall
sbb
stc
jae
iret
packuswb
roll
xchg
inc
mov
mov
push
add
or
into
leave
pop
lock
inc
sub
inc
sbb
imul
xor
subb
scas
iret
sbb
out
jne
xor
lods
popf
and
iret
push
cmpsb
sub
inc
mov
adc
lret
push
movsl
imul
mov
cwtl
inc
call
jo
ds
inc
aaa
jns
jecxz
data16
into
lcall
mov
mov
push
and
daa
shrl
mov
mov
roll
xor
xorb
mov
jp
jmp
in
or
inc
jmp
int
sbb
xor
and
dec
mov
push
int
inc
xchg
movsl
js
test
jne
dec
mov
out
movsl
inc
mov
cmp
xor
lret
gs
js
inc
movsb
mov
sahf
jmp
xchg
mov
loopne
dec
movsl
adc
popf
lahf
cs
aaa
add
test
movsb
push
pop
lcall
cwtl
inc
int
orb
in
push
popf
cmp
notl
push
ret
and
lret
fistl
or
lret
fs
xor
jg
daa
std
lret
inc
sti
push
mov
sbb
in
pop
sub
xchg
xor
enter
inc
subb
xchg
xchg
pop
jb
pop
divl
or
xor
cmpl
clc
jb
dec
in
test
lock
addr16
jmp
insl
sub
in
push
push
popa
fwait
iret
rclb
cmp
test
cmpsb
lea
push
push
jnp
xor
jl
mov
aad
xor
jmp
sbb
shlb
arpl
cli
and
dec
outsl
jle
int3
cld
mov
in
mov
sub
divl
imul
lret
cmpsb
push
in
xor
jle
mov
leave
pop
jnp
out
sub
xor
push
shll
test
lock
jle
dec
xchg
ret
insb
lcall
movsb
arpl
ret
dec
fcomps
orb
sbb
outsl
clc
sub
pop
ss
dec
xor
jp
fsubr
movsb
std
fsubrs
fistl
inc
mov
clc
lods
stos
mov
pusha
ss
imul
or
inc
jo
daa
xchg
mov
subl
call
cs
xchg
mov
loop
sbb
lea
jecxz
push
test
filds
add
pop
les
ret
mov
jle
adc
fs
data16
out
mov
sti
mov
lret
push
inc
stos
and
xchg
pop
cs
mov
sub
inc
xchg
mov
jnp
xlat
leave
andb
cmc
push
mov
sub
mov
push
int3
pop
inc
pop
lods
lds
inc
cmpb
mov
push
cmpsb
test
jp
popw
pushf
aaa
push
pop
inc
xchg
clc
pop
add
pushf
pop
jp
adc
jb
cwtl
or
lds
shll
xor
fadds
das
sub
bnd
rol
rolb
xchg
pop
icebp
cmp
pop
les
mov
xchg
nop
mov
mov
mov
movsl
sub
cltd
sbbb
sbb
lds
shrl
test
stos
movsb
addr16
xor
out
mov
push
add
loop
mov
or
dec
and
cmpsl
xor
add
adc
or
push
in
sbb
inc
ljmp
add
fsub
add
test
pop
les
and
test
dec
push
mov
lods
pop
push
cmpsl
gs
sbb
inc
cmp
ljmp
ret
mov
repz
cmp
jnp
jae
int3
mov
aam
push
les
clc
xchg
inc
add
pop
and
fimull
pop
jnp
orl
in
cmpsl
das
repnz
lods
dec
loope
cmpsl
pop
shll
jne
and
push
cmpsb
icebp
and
xchg
sbb
std
add
out
in
xchg
lcall
icebp
in
cmpsb
insl
pop
mov
fndisi(8087
push
mov
push
js
fdivrl
adc
or
fs
popf
imul
or
or
lea
pop
add
jecxz
or
iret
jne
es
mov
sbb
pop
insb
mov
sbb
and
or
popa
shl
sub
sub
mov
mov
inc
and
fsubs
js
popf
mov
adc
jmp
sahf
pop
push
jns
lds
jl
mov
jle
cli
sub
ja
xor
cwtl
std
push
lods
rorb
sbb
mov
cmpl
sbb
add
dec
mov
push
lock
mov
aaa
cs
sbb
stc
mov
dec
inc
dec
loopne
jmp
push
push
mov
adc
xchg
pop
stc
dec
out
add
lods
jno
mov
pop
jbe
test
das
sub
inc
scas
push
pushl
loop
push
mov
loope
insb
or
lds
imul
and
or
daa
xchg
hlt
sbb
outsb
stos
adc
pop
lahf
sub
pop
iret
pop
pop
dec
sub
aad
leave
jo
ds
cs
or
daa
pop
jle
loopne
call
repz
lcall
int3
fwait
pop
dec
mov
mov
inc
xchg
cmpsb
movsb
xchg
movsl
adc
lret
inc
xor
and
gs
test
stc
adc
dec
out
mov
ret
cmc
lods
icebp
ret
sub
loope
xchg
mov
inc
jmp
pop
js
out
add
outsl
pop
xchg
push
xchg
or
dec
popa
enter
mov
push
adc
shl
jmp
movsb
jecxz
cld
div
scas
jae
xchg
mov
rol
xchg
or
es
aad
and
arpl
xor
out
ret
into
jl
mov
adc
mov
xor
cmp
pop
jge
sbb
popf
sub
mov
bnd
xor
loope
pop
lret
rcl
adc
iret
sub
xlat
or
sbb
std
mov
push
cmp
movsb
inc
xor
js
adc
std
divl
test
cmp
add
mov
in
sbb
dec
into
addr16
mov
push
add
nop
dec
sbb
stos
int3
in
add
adc
orb
mov
xor
jg
mov
mov
jnp
iret
mov
fbld
fnstcw
lret
sbb
mov
and
xor
vmovntdq
repnz
pop
mov
sbb
repnz
cmc
call
push
pop
cltd
imul
jl
ja
lcall
adc
cmp
shll
lock
pop
and
xchg
jecxz
sub
add
jl
jno
imul
test
inc
into
or
out
fistpll
jnp
fisubrl
inc
push
cmp
jge
scas
fcmovnbe
push
mov
sarb
xchg
sti
inc
out
or
mov
ja
push
pop
inc
adc
push
cmp
sbb
xchg
pushf
pop
mov
add
adc
xchg
scas
push
adc
pop
cmovb
insb
in
pop
inc
or
jl
fst
fidivs
cld
mov
mov
les
xchg
rcl
scas
jns
mov
sbb
andl
cmpl
mov
push
mov
add
mov
dec
ret
mov
lcall
mov
xor
and
push
pop
mov
xchg
mov
mov
out
icebp
jle
sub
or
aas
rcrl
push
out
push
mov
push
je
icebp
and
icebp
xor
and
movsb
outsb
pop
cmpsb
xchg
adc
dec
test
jbe
pop
popa
stos
mov
fstpt
lods
dec
adc
jg
sub
out
inc
xlat
dec
push
jae
out
inc
push
test
and
inc
dec
push
cmp
cli
imulb
sbb
adc
add
test
fs
fs
movsb
scas
jp
cltd
sbb
scas
ret
andl
movsb
lcall
mov
xchg
in
popa
shl
lahf
pusha
push
add
pop
orl
ljmp
jg
cmp
pop
xorl
std
add
pop
push
lock
lret
jge
sahf
sub
mov
lahf
outsl
out
cmp
cmc
lock
mov
inc
mov
mov
bndldx
roll
mov
xlat
imul
mov
inc
sub
cmp
mov
mov
mov
or
mov
filds
stos
ljmp
pop
jl
cwtl
or
adc
mov
dec
or
push
aad
dec
adcl
ss
sbb
inc
jns
pop
and
dec
ljmp
out
mov
sub
dec
cld
mov
jge
xor
hlt
lret
mov
dec
cmp
movsb
lret
sub
and
jo
ljmp
ret
sarb
push
bound
arpl
fmuls
dec
push
add
inc
outsl
mov
cmpsb
clc
jge
das
cwtl
dec
push
cwtl
mov
pop
inc
push
xchg
aas
pop
add
popf
divl
loop
mov
and
out
loop
sub
mov
jge
ss
xor
jns
mov
sub
in
xchg
pop
sbb
mov
or
add
jae
and
or
out
enter
mov
fwait
mov
gs
push
out
data16
inc
cli
dec
shll
or
aas
fcmove
lcall
fldl
inc
cmpsl
add
xchg
ljmp
loope
movsb
inc
push
ds
insb
stc
pop
sbb
push
movsl
out
out
pop
cmp
jae
sbb
inc
lea
jecxz
sti
insl
imul
int
add
adc
dec
jg
lods
outsl
and
dec
pop
and
insb
ja
dec
sbb
xchg
xchg
xchg
jle
sub
int3
xchg
mov
jae
shlb
mov
movsl
data16
xlat
aad
or
sbbl
mov
repz
mov
pop
mov
mov
dec
push
cmp
dec
insb
imul
sbb
sub
dec
sub
lods
inc
sbb
cmp
inc
push
imul
xor
lea
sub
stos
sbb
jp
xchg
popa
insl
daa
lcall
aas
rsm
fisubrs
inc
or
mov
push
lcall
dec
icebp
aaa
or
shll
sarl
cwtl
mov
push
movsl
gs
jge
xor
imul
aaa
leave
orb
sbb
jmp
ret
andb
ret
fs
out
jne
xchg
scas
fsubl
out
movsb
lds
movsl
cmp
pop
mov
andl
sub
push
cmp
shll
icebp
pop
ret
mov
sbb
mov
add
mov
cmpsb
mov
or
pop
dec
dec
sti
nop
or
and
fisttps
fnstcw
jmp
mov
pop
stos
fcompl
leave
mov
xchg
xor
adc
test
ret
dec
stos
lds
imul
out
mov
dec
pusha
lds
jecxz
jbe
lods
lea
ret
add
jns
pop
jne
push
mov
pop
xchg
pop
sub
xchg
rol
jecxz
popa
stc
in
sbb
mov
xor
pop
and
cwtl
or
jg
push
lahf
push
sbb
adc
std
push
mov
cmp
scas
pop
add
lds
mov
call
out
push
push
mov
shl
pop
and
inc
mov
sti
dec
jns
xlat
jne
enter
das
mov
out
pop
pop
inc
imul
pop
dec
cmc
mov
or
sbb
jp
out
sub
push
mov
or
push
mov
idiv
cli
std
outsb
jmp
jbe
push
fcomps
ret
rclb
out
mov
or
inc
sub
mov
dec
mov
in
mov
jne
xchg
cmp
or
cmp
add
inc
or
xchg
xchg
call
xor
clc
xchg
push
cs
std
adc
inc
jecxz
jl
mov
out
add
imul
jg
pop
and
sub
imul
cmp
xlat
bound
inc
mov
push
inc
stos
lea
mov
scas
push
mov
shll
or
sbb
popa
loop
hlt
pmulhw
push
sub
in
mov
punpcklbw
sub
and
xchg
push
pushf
shrl
loope
pop
mov
lock
fadds
lock
scas
mov
pop
cmp
ljmp
jl
pop
lea
je
mov
pop
nop
adc
xchg
mov
notb
push
clc
rol
push
inc
les
and
lcall
xor
mov
ljmp
stos
and
andl
rcll
dec
lds
pop
adc
cmpps
int
push
pop
dec
cmp
fsubrs
jle
mov
mov
mov
je
add
push
jne
lods
cmp
or
and
pmulhw
cmp
enter
fwait
dec
ja
lcall
stos
mov
fs
mov
xchg
and
or
shrb
jo
mov
jb
pop
mov
inc
jno
add
das
ss
push
outsl
sti
dec
cmp
cmpsb
inc
sub
roll
movsb
xchg
out
test
out
jb
mov
lahf
sti
lock
mov
sub
jecxz
jb
adc
shll
aad
repnz
shlb
lret
sbb
shlb
xor
xor
test
jns
insl
and
fcmovnu
inc
adcl
mov
or
out
ror
cmpl
daa
pop
mov
sbb
stos
push
out
lcall
sbbb
inc
sub
add
adc
fmulp
repz
inc
lahf
lods
pop
xor
xor
aad
mov
scas
lret
pop
scas
stos
jno
js
xor
imul
pop
pop
jg
mov
dec
cmp
les
jg
leave
sbb
dec
xchg
lods
cld
mov
mov
jns
inc
mov
dec
jns
sbbb
mov
int3
jle
mov
insl
icebp
or
fcmove
fisttpll
sti
lods
or
xor
xor
jo
test
cmpsl
pop
lahf
lods
movb
int
push
and
mov
jbe
stos
pop
es
pushf
mov
jne
xor
mov
or
mov
or
lock
mov
dec
jmp
inc
mov
dec
cmp
test
test
dec
stos
xchg
xchg
jle
sti
dec
sub
lret
mov
dec
js
dec
bswap
xor
adc
or
dec
mov
outsb
popa
and
fidivrl
dec
pop
xor
dec
jnp
inc
aad
mov
out
cmpsl
je
mov
inc
push
push
shlb
aam
sbb
rcl
sub
enter
jl
fdivp
xor
data16
mov
insl
cltd
and
sbb
cmpsb
loopne
jo
js
and
stos
daa
repnz
out
cltd
inc
sub
sbb
addl
lods
jecxz
test
test
cmc
mov
cmc
aas
bound
aad
add
mov
cmpsb
int3
je
and
fld
dec
push
scas
xchg
push
bnd
xchg
xor
and
push
and
xchg
cmp
lahf
movl
test
aad
mov
ja
cmpsl
xchg
and
add
lahf
cmp
push
push
push
pusha
or
stos
lcall
loop
fldcw
nop
mov
mov
shr
cmc
popf
out
dec
lock
mov
pop
rcrb
incb
outsb
adc
pop
imul
xor
mov
sbb
bnd
stos
pop
jo
in
push
push
sbb
or
mov
ret
lret
test
xchg
mov
cmpsb
cld
xchg
inc
jge
mov
dec
test
push
push
push
leave
dec
les
sub
in
sbb
repz
lret
add
or
sahf
jp
mov
inc
and
test
negb
jbe
xchg
mov
pop
mov
sbb
sbb
cmc
cmp
mov
add
lds
push
popf
sub
in
mov
rorb
xchg
mov
mov
out
inc
cwtl
jno
sub
sbbl
mov
stos
insl
xor
out
sahf
cmpb
mov
adc
notl
mov
int3
mov
stos
sub
leave
cmp
mov
adc
add
rcll
shrb
mov
push
xchg
aaa
mov
insb
sbb
xchg
dec
jae
lock
dec
mov
jecxz
push
or
js
cwtl
and
outsb
pushf
je
idiv
inc
repnz
adc
outsb
dec
or
cmp
stos
arpl
pop
or
and
cmp
out
inc
mov
mov
in
out
mov
enter
inc
jns
scas
in
adc
xchg
cmp
out
mov
mov
shll
popa
hlt
jae
loopne
cmp
pusha
les
out
nop
iret
loop
divb
push
in
arpl
mov
mov
mov
push
bts
pop
lea
aad
and
mov
jmp
je
adc
out
push
xor
xchg
mov
aaa
cmpsb
add
mov
mov
leave
fcomps
mov
inc
popf
mov
aas
sub
jp
ficomps
sbb
mov
xchg
xchg
sar
int
ds
inc
pop
lods
pusha
testl
dec
fildll
jge
add
cld
imul
lods
out
fmull
mov
aad
in
mov
js
xor
pop
out
jecxz
and
sub
call
lock
jbe
push
das
adc
sahf
lods
es
sub
test
sbb
movsl
les
adc
lods
pop
popa
cmp
enter
ficompl
fwait
shlb
and
adc
xchg
dec
pop
cmp
jmp
push
ja
sbb
jg
push
cmp
mov
push
and
sub
mov
scas
loop
xchg
sahf
xorb
sub
xchg
ds
jo
or
add
and
idivl
cmc
stc
mov
mov
push
lret
sub
jo
or
sub
cmp
es
lret
out
xchg
in
pop
or
mov
movsl
mov
xchg
insl
out
fistps
cmpsl
cmp
fs
std
mov
xor
jbe
mov
xchg
in
lods
or
pop
mov
lret
push
mov
sbb
pop
dec
cld
sbb
pop
stos
and
mov
push
adc
lret
ljmp
sub
imul
cmpsl
push
lods
sbb
insl
cli
jns
xor
mov
mov
cmp
inc
imul
xchg
sbb
popa
dec
imul
push
mov
imul
adc
cmp
sahf
adc
sahf
daa
sub
dec
and
or
sub
sahf
inc
lea
gs
sub
pop
inc
scas
popa
push
sub
scas
loop
mov
ss
fisttpll
adc
aad
es
fldenv
jge
mov
mov
insl
adc
lds
mov
rcr
addr16
retw
mov
ss
imul
loope
sbb
mov
mov
mov
addb
mov
mov
push
ss
repnz
dec
push
je
sub
mov
sbb
push
call
mov
call
out
jg
push
adc
loope
fiaddl
test
fnstenv
testl
sbbb
aad
jno
sub
sbb
imul
ret
push
cmp
ljmp
clc
scas
ja
mov
cmp
fistpll
imul
movsl
and
sar
mulb
fistpl
and
add
call
negl
sbb
test
xchg
adc
enter
inc
xlat
test
cmp
shll
or
pop
scas
je
cmp
out
and
jb
stos
enter
fsubrs
sbb
icebp
stos
outsb
jecxz
xchg
scas
movsl
clc
fdivrp
sbb
ffreep
dec
pop
xor
mov
jno
push
movsb
insb
int
cltd
pop
jg
pop
push
pop
in
lods
add
lds
and
pop
cmp
mov
adc
sbb
lods
add
sti
fwait
dec
push
jmp
dec
mov
xchg
cmpsl
scas
xchg
xor
shlb
stos
jo
es
push
leave
stos
fistl
jmp
inc
push
repz
or
dec
xor
subl
rorl
addr16
pop
adc
push
faddl
ret
idiv
sbb
cmp
cwtl
insb
cmc
pop
test
sub
mov
ficomps
imul
cmpsb
mov
inc
mov
in
cmc
rcll
cld
mov
dec
or
lods
lret
rcrl
xor
xor
out
xchg
adc
xchg
into
out
out
ss
ds
dec
xchg
rcr
xchg
imul
mov
daa
addr16
xchg
cmpsb
in
pop
push
mov
pop
push
cmp
dec
cmpb
or
imul
pusha
mov
std
mov
daa
pusha
jg
int3
mov
push
xchg
jg
or
rcll
inc
dec
into
int
fstl
dec
pop
mov
add
inc
inc
iret
mov
ja
loope
jp
jge
push
andb
sbb
loope
stos
fildl
fisttpll
inc
stos
xlat
fidivs
lock
mov
jg
bound
xchg
aam
sbb
cs
inc
mov
aad
pop
push
jg
mov
jmp
push
mov
loope
call
outsl
imul
jae
mov
fimull
xchg
mov
pop
out
ret
xchg
fwait
jp
aaa
cmp
aam
stos
movsb
or
outsl
rolb
mov
loope
push
mov
pop
ja
gs
sub
jno
ret
pop
sbb
pop
xor
xchg
jge
xor
adc
jnp
adc
push
mov
or
lcall
cmp
imul
and
push
add
mov
mov
hlt
jb
jmp
aam
dec
adc
fisubs
mov
sbb
dec
ret
mov
insl
in
pushf
imul
jge
js
dec
sarb
mov
leave
sarl
sti
adc
jle
jns
push
add
jg
add
cltd
mov
xlat
inc
xchg
pop
lea
in
dec
call
sbb
add
jns
fwait
inc
mov
stc
cmp
push
popa
lea
pop
mov
jge
pop
fmuls
mov
js
cmp
addr16
filds
sub
loopne
adc
cwtl
mov
inc
in
fisttps
sbb
mov
and
dec
gs
fwait
scas
lahf
cs
call
xchg
cli
push
mov
xor
aas
xor
mov
out
xchg
lret
adc
loop
repnz
repnz
es
jnp
dec
ret
mov
shl
enter
sbb
movsb
jmp
sub
and
xchg
pop
inc
mov
lock
movsb
mov
sub
pop
lea
imul
mov
aad
sbb
bound
imul
xor
pusha
inc
lock
add
mov
scas
pop
pop
mov
sarl
pop
stos
sub
cld
sub
ficompl
mov
fcomip
or
out
jl
pop
and
and
das
out
xchg
xchg
and
inc
in
add
xchg
loop
js
scas
ljmp
ljmp
stos
rolb
out
add
push
pop
sub
inc
cltd
push
cmp
mov
int
and
mov
lods
cltd
rclb
sub
hlt
dec
into
dec
subb
sub
dec
mov
dec
lahf
dec
xchg
or
or
xchg
push
add
popf
lods
pop
pop
pop
sub
adc
gs
stos
pop
xlat
lret
out
stos
shll
sbb
jns
sbb
rolb
sbb
addr16
push
push
sbb
mov
test
lcall
les
data16
lds
pop
xor
lcall
mov
mov
pushf
fyl2xp1
sbb
mov
inc
and
adc
fisubl
cld
jbe
ffreep
in
aas
mov
js
add
out
and
jl
shll
add
inc
jno
cwtl
add
movsb
ljmp
xorps
jbe
data16
int3
test
dec
jnp
and
in
or
push
mov
sbb
je
movsl
push
mov
mov
int
or
mov
aad
xchg
test
jns
push
mov
jle
xor
das
bound
idivb
push
mov
cmp
call
adc
icebp
add
cmpsb
imul
in
nop
adc
xor
nop
ja
sti
sbb
addr16
jno
sarl
mov
sbb
xor
mov
test
jmp
insl
mov
inc
mov
rorl
mov
bound
xchg
jno
fs
out
adc
adc
jnp
cltd
push
xchg
xor
pop
std
xor
daa
mov
pop
addr16
les
loope
mov
jne
xor
subb
inc
lock
mov
rolb
ja
mov
fwait
inc
pushf
fldt
pop
pand
mov
faddl
inc
xchg
add
mov
sahf
sbb
pop
and
add
fdivrs
xchg
fistpl
sbb
adc
push
mov
dec
and
std
loop
lret
pop
cmp
cmp
mov
push
push
mov
test
addb
add
into
sahf
cli
cvtpi2ps
call
pop
cmp
dec
repnz
aaa
cmpsb
mov
mov
adc
pop
arpl
adc
pop
add
ss
dec
xor
insl
push
xchg
pop
jno
push
rcll
aad
ds
pop
bound
and
push
xchg
lahf
push
mov
push
or
xor
jno
lock
loop
int3
cmp
add
cmp
fmul
aad
not
xchg
js
xchg
mov
push
mov
and
push
adc
add
mov
mov
jg
mov
cmp
inc
loopne
cmc
sbb
popa
outsb
out
jne
repz
dec
cmp
sarl
ljmp
repz
xchg
mov
adc
ja
or
dec
cmp
outsl
mov
subb
bound
jg
xchg
mov
or
dec
sub
aam
test
arpl
cmpl
lcall
add
mov
cltd
or
out
add
and
push
cs
jl
xor
fildl
mov
hlt
mov
ja
pop
or
xchg
pop
cld
push
fsubp
nop
and
adc
insb
and
mov
loope
pop
cmp
out
sahf
xor
lret
jno
push
pushf
sub
dec
fcompl
test
insb
add
dec
mov
add
outsl
js
sahf
lods
insb
adc
pop
in
add
in
dec
mulb
faddl
jnp
dec
in
ss
test
fmulp
or
dec
scas
fs
in
lahf
dec
test
pop
pop
rorl
fidivrl
pop
test
stos
aam
lahf
xchg
and
push
dec
leave
mov
in
lret
test
pop
out
xor
add
stc
jns
pop
mov
test
mov
xchg
subb
push
cmpsb
lods
test
addl
scas
cmpxchg
xchg
add
xchg
stos
movsl
cmc
sbb
push
add
in
mov
fidivrl
mov
inc
fldpi
cltd
repz
clc
std
xor
mov
jg
dec
lahf
dec
mov
fdivs
jno
sub
and
cmpsl
fildll
cmc
sub
and
jae
scas
into
mov
in
jae
pop
leave
std
jb
fldenv
mov
lahf
cmc
mov
scas
mov
and
add
notb
inc
test
ficompl
in
push
arpl
add
daa
inc
sbb
dec
mov
frstor
add
ror
xor
jns
sbb
dec
test
dec
test
mov
push
cmp
in
inc
pop
push
add
enter
stc
imul
inc
cltd
psrlq
push
and
sub
mov
int
cmp
xor
mov
arpl
call
popf
jmp
push
aam
xchg
hlt
daa
andnps
insb
daa
stc
ret
sbb
lds
adc
or
out
jmp
out
xchg
icebp
mov
lahf
jp
mov
mulb
inc
jnp
pop
mov
daa
push
les
and
fisubrl
add
loopne
leave
and
test
sub
addr16
addr16
sub
mov
mov
sbb
mov
jecxz
dec
dec
inc
ljmp
ret
insl
and
test
leave
out
push
sti
pop
ja
and
insl
icebp
jae
dec
adc
imul
pop
outsl
cmp
or
fldenv
pop
pop
mov
adc
adc
call
insl
int3
icebp
scas
sbb
push
stc
mov
pushf
loop
stc
inc
stos
jbe
cmp
ficomps
and
add
and
mov
fstps
loope
icebp
pop
mov
ja
sub
jb
cmp
sub
xchg
out
ds
lret
mov
add
mov
hlt
out
ljmp
lods
push
sti
data16
and
mov
fldt
leave
arpl
push
rolb
pop
mov
adc
pop
or
outsb
divl
pop
jmp
adcb
jg
insl
fwait
stc
xor
aas
fcoms
cmp
cmpsl
jae
sub
cld
jecxz
nop
sub
xchg
dec
or
mov
push
stos
cmpsl
xchg
inc
xchg
mov
aad
sub
repnz
inc
mov
loopne
push
xchg
fdivl
rclb
fcmovbe
xchg
mov
aas
int3
or
inc
inc
adc
lahf
mov
xchg
out
and
xchg
push
jne
dec
testl
mov
out
testb
enter
mov
push
mov
mov
pop
out
mov
jg
mov
or
jge
inc
jl
push
mov
and
gs
ret
call
mov
xchg
dec
sbb
push
inc
pushf
xlat
push
int
or
int3
testl
adc
mov
dec
or
call
loop
gs
cmpsb
push
std
mov
arpl
mov
es
inc
fs
sub
andl
adcl
lea
rolb
je
xor
and
fistpl
add
push
jo
daa
mov
ds
push
daa
ret
push
jbe
inc
inc
and
lret
clc
lock
mov
push
jecxz
data16
inc
fwait
nop
push
testl
jnp
jle
inc
lcall
xchg
and
ja
jnp
jle
lret
sbb
sbb
pop
xchg
cmp
in
pop
mov
xchg
adc
cmp
add
nop
jmp
iret
rclb
cwtl
icebp
jle
push
loope
andl
fs
popa
sub
lea
cmc
xchg
fsubrs
mov
mov
pop
js
hlt
addb
subl
xor
call
mov
shr
or
jge
in
add
adc
xchg
pop
fisubs
decb
into
sub
mov
jne
pop
sub
ret
sbb
push
int3
or
and
test
pusha
mov
int3
inc
lods
push
inc
pushf
mov
inc
stc
and
insb
lret
sbb
push
bound
in
aaa
insl
xor
loop
mov
push
cmp
out
jl
ss
inc
xor
mov
loope
in
or
cmp
or
fidivs
rorl
jne
sub
xor
outsl
xchg
mov
xchg
xor
and
xor
or
jbe
xchg
sarb
mov
cmp
fs
inc
push
flds
in
pop
inc
jp
aaa
aad
fsubrl
out
xchg
lcall
aad
call
xor
jle
test
iret
xchg
test
xchg
and
arpl
xchg
rolb
cwtl
adc
jmp
aas
inc
mov
daa
into
or
add
das
js
sub
pop
rolb
jbe
sbbl
lret
inc
push
leave
sub
testb
jge
mov
or
mov
adc
pop
aam
cmp
push
jp
lahf
out
pop
lcall
pop
mov
stc
mov
fcmovne
rol
outsb
or
and
push
mov
sarl
inc
fdiv
xlat
lods
out
inc
add
in
fsubrs
repnz
adc
sub
or
negb
addr16
or
popf
xchg
jle
cmpb
mov
mov
into
cmp
inc
jno
sub
push
loopne
push
fwait
imul
shl
ss
test
int
mov
movq
iret
add
mov
test
xchg
addr16
mov
push
adc
je
mov
inc
inc
pop
mov
mov
fwait
mov
add
ret
mov
fdivrl
in
sbb
insb
push
lds
rcrl
xor
mov
mov
push
sub
xchg
lds
mov
je
lahf
and
push
mov
xlat
loop
cmpsl
stos
mov
mov
sahf
arpl
dec
andb
cs
rorb
jmp
loop
cmp
lods
mov
icebp
mov
mov
gs
xor
pop
mov
and
inc
out
stos
fs
out
pop
stos
adc
cli
or
pop
mov
leave
in
sbb
jnp
push
fisubrs
dec
jnp
ss
cwtl
outsl
ficoml
in
add
and
sub
outsl
cmp
cmc
icebp
or
int
aam
mov
sub
push
xchg
iret
adc
fs
push
pop
dec
cwtl
lret
cmp
inc
push
pop
mov
lahf
dec
dec
lret
add
xor
js
clc
sbb
push
inc
outsl
jp
and
cltd
fimull
fmuls
movsl
mov
sub
inc
jg
jmp
loope
inc
jge
push
daa
push
mov
aas
mov
iret
add
jbe
cmp
inc
push
outsb
pop
pop
lds
inc
or
dec
mov
cmc
push
adc
pop
fistpl
mov
mov
fadd
dec
out
mov
xchg
jnp
or
rep
call
test
mov
lea
test
ret
call
mov
cmp
mov
sbb
and
imul
adc
mov
lock
je
jl
repnz
pop
adc
inc
cs
pushf
xchg
sub
into
sub
dec
outsb
cwtl
insb
es
in
pop
push
sarb
testb
mov
inc
insl
add
pop
pop
adc
dec
rcrb
call
pop
rcr
adc
out
add
iret
and
xor
dec
popa
sahf
lcall
aaa
xchg
repz
clc
fmuls
add
popf
jmp
lret
fnstsw
fwait
cmp
mov
cltd
jle
test
popa
and
add
aad
sub
cwtl
add
lods
addr16
roll
adc
loope
mov
addr16
dec
adc
add
xlat
mov
dec
scas
mov
test
pop
in
inc
sarb
cmp
or
jbe
leave
mov
stos
mov
nop
enter
sub
jns
mov
es
imul
mov
aas
ret
push
clc
mov
and
in
bswap
mov
jle
inc
sub
cmp
ja
loope
sub
fbstp
cmpsb
dec
je
xchg
xchg
fstl
sti
adc
sbb
mov
pop
rorb
movsb
jp
mov
pusha
arpl
andb
inc
aas
sbb
lahf
loop
push
xchg
cmpl
insl
fistps
xchg
ficoml
sahf
sub
movsl
or
out
cmp
dec
rolb
jg
jne,pt
jg
and
inc
subb
insl
mov
dec
insl
and
loop
in
mov
or
test
mov
lcall
and
or
cltd
push
dec
lods
clc
cmp
mov
lods
pop
sub
xchg
scas
xchg
cltd
cltd
repnz
jg
rcrb
xchg
mov
insl
std
call
jp
popf
cmpb
sahf
or
lds
fmulp
jmp
arpl
loope
test
pop
mov
cmp
jl
es
push
lea
pusha
or
cli
push
popf
and
sub
call
adc
cmp
lret
cmp
sbb
jecxz
mov
fstpt
sarl
lock
push
ret
mov
hlt
das
fiaddl
mov
push
clc
push
add
adc
popa
out
mov
jnp
jmp
in
push
mov
and
scas
je
pop
addb
push
pop
mov
jmp
out
and
xchg
orb
mov
decb
pop
inc
pop
pop
mov
cmp
jp,pt
mov
add
mov
test
adc
shlb
test
cmp
js
lcall
push
loopne
adc
ja,pn
lods
les
ffree
cmp
in
cmpl
mov
push
jno
getsec
arpl
cmp
mov
add
repnz
outsl
cmc
or
cmp
cmpl
cmp
push
fmul
and
xchg
adc
inc
ret
sub
mov
push
or
nop
jecxz
int3
and
mov
outsb
sbb
jl,pt
push
mov
decl
pop
loop
lods
cmpl
inc
mov
rclb
sbb
cs
jmp
xor
sbb
jmp
add
ror
scas
fwait
or
mov
cs
pop
scas
test
add
ss
jns
jle
pop
jae
ss
xchg
pushf
rorb
movsb
test
mov
push
or
shll
xchg
ret
inc
mov
xchg
xchg
sub
decl
mov
adc
jg
adc
sbb
and
movsl
fcmovu
jle
push
push
pop
mov
push
fldt
dec
push
shufps
cli
dec
mov
add
push
cmp
lret
int
xor
sti
mov
lods
gs
hlt
adc
mov
in
js
inc
test
pop
aam
rolb
mov
nop
rolb
popa
rolb
rcrb
xchg
imul
pop
xor
jno
xchg
mov
dec
xchg
fistl
sbb
fwait
test
push
cwtl
jo
xchg
inc
adcl
adc
pop
pop
call
mov
into
push
sahf
cmp
into
aaa
fistl
in
jno
sti
int3
leave
pop
or
and
js
sbb
stc
imulb
push
in
shlb
mov
ret
outsb
or
test
rcrb
addr16
jns
popf
sbb
push
xor
xlat
das
cltd
daa
enter
daa
inc
cltd
mov
add
push
pop
mov
test
je
aas
call
ret
dec
fimull
movsl
je
sbb
xor
cld
cli
mov
out
std
dec
mov
xchg
lock
pop
into
sub
lods
imul
in
rcl
rorl
sub
fidivrs
aad
pop
sub
adc
leave
pop
jnp
xlat
imul
add
and
jl
adc
mov
mov
cmc
shlb
mov
rorl
je
push
lods
pop
or
xchg
ds
insb
aad
ds
fdivs
gs
lds
out
mov
xchg
in
inc
dec
mov
cmp
sahf
ds
mov
dec
ss
popf
push
in
mov
test
jno
out
xlat
push
mov
lahf
pushl
push
pusha
dec
test
mov
fdivrs
rol
cmc
mov
movsb
insb
xchg
int3
mov
inc
mov
jecxz
cwtl
aad
pop
std
inc
pop
sahf
fstl
sahf
push
loopne
popa
sbb
jne
enter
repz
or
sbb
jmp
push
mov
test
je
push
pop
add
fimuls
mov
in
push
push
nop
adc
cmp
icebp
je
xor
xor
jl
mov
jnp
ljmp
and
lret
cmp
xlat
inc
push
xchg
mov
les
mov
mov
ret
sub
sbb
sbb
add
mov
pop
scas
int3
mov
jl
bound
sbb
ret
hlt
or
shll
int3
xchg
mov
and
std
arpl
ficoms
cmp
ljmp
scas
sahf
and
xchg
fdivs
into
sbb
xlat
gs
lods
mov
gs
sub
jle
or
test
push
mov
push
aas
or
int3
call
aas
or
push
sti
ss
arpl
test
insb
ret
inc
in
pop
jecxz
adc
loopne,pn
int3
loope
cmc
out
and
je
or
mov
pop
xor
mov
data16
mov
lds
nop
push
xchg
enter
lods
sahf
cltd
sub
pop
jl
and
mov
mov
ret
gs
stc
sbb
aas
jmp
inc
push
mov
aas
push
cmp
mov
addr16
testl
xor
bound
or
lahf
pop
adc
xchg
scas
mov
jnp
addb
or
es
push
xlat
lods
push
sbb
pop
enter
mov
icebp
scas
push
fistl
out
pusha
fistl
dec
mov
in
cmpsb
clc
mov
xchg
mov
outsl
into
jmp
in
insl
sub
push
loopne
push
mov
push
aaa
or
ret
adc
lea
insl
popf
mov
out
mov
or
push
mov
adc
test
jns
fbld
add
mov
and
je
js,pt
dec
inc
xchg
sub
leave
jge
subb
sahf
mov
pusha
fnstcw
jae
fnsave
mov
add
orb
imul
jnp
fidivrs
inc
inc
or
dec
nop
ljmp
pop
mov
addr16
stos
test
xchg
clc
pop
cmp
push
xor
sbb
and
jno
mov
das
inc
jmp
and
sahf
jno
rcrl
push
cmp
mul
nop
xor
aam
pop
cltd
dec
and
cmpsl
push
cmc
fidivrs
mov
je
push
push
xlat
sahf
pop
jmp
sub
mov
cmp
jg,pt
into
push
int
flds
jo
sar
sahf
std
and
mov
and
into
lock
movsl
xchg
pop
fs
test
cs
dec
fstl
dec
cmp
in
movsl
gs
xor
inc
enter
dec
cmp
xchg
enter
insb
cs
hlt
popa
stos
fnstsw
cvtps2pi
xchg
cmpsl
rolb
rorb
xor
xchg
mov
jno
pop
dec
jle
dec
sub
das
inc
jp
shr
dec
mov
ds
std
sub
movsb
int3
enter
out
ret
insl
push
xor
je
shrl
and
daa
mov
push
and
aam
faddl
mov
mov
es
mov
les
pop
xchg
cltd
xor
xchg
and
dec
pop
or
mov
scas
loope
dec
pusha
sbb
push
sub
and
xorl
int3
outsl
jp
cmp
or
pop
pusha
test
jmp
test
dec
push
dec
or
dec
out
imul
rcr
and
push
stos
mov
inc
fbstp
cltd
cmp
push
cmp
pop
add
daa
sub
or
push
andl
in
pop
mov
subb
push
clc
sub
dec
mov
add
outsb
mov
outsb
mov
mov
out
stc
test
mov
lret
xor
loope
sub
subb
add
popf
jb
mov
insl
push
push
sahf
and
mov
into
shlb
push
fiadds
push
jp
sub
pop
loopne
sbb
mov
xlat
stos
adc
adc
pushf
add
dec
jl
jb
cwtl
test
leave
in
jo
add
mov
sub
jno,pt
mov
mov
cmp
pop
stos
push
push
mov
sub
sbb
sbb
lea
loop
clc
in
fistps
jns
mov
sbb
push
dec
rcrb
mov
fildl
push
icebp
pop
ret
ljmp
xchg
test
adc
cld
adc
push
fidivrs
aam
push
mov
sbb
repz
lds
and
sbb
mov
std
sbb
ret
inc
xchg
cmc
arpl
cmp
jo
xor
pop
cmp
and
imul
repz
jecxz
jp
in
pop
add
mov
fstpl
mov
ja
insl
sub
notb
ljmp
pop
pushf
sar
mov
divb
jb
lods
sub
mov
push
les
mov
or
jae
adc
icebp
jns
mov
xor
adc
shr
adc
push
subb
sarl
pop
enter
loope
add
popa
lods
popf
cmp
pop
fnstcw
pop
add
jle
fcomi
pop
mov
xor
pop
enter
out
addb
cmp
mov
or
or
dec
jg
test
lcall
or
push
retw
adc
fs
pusha
clc
pop
cwtl
pushf
xor
mov
fists
loop
mov
cld
or
testl
scas
leave
and
add
filds
shrl
inc
movsb
repz
mov
xor
sub
ss
fldt
das
pushf
repnz
jno
popa
clc
or
arpl
xchg
or
cli
cmp
je
push
jbe
fsubr
sbb
cmp
insb
or
leave
mov
push
ret
mov
sti
out
pop
jae
cli
pop
into
cmpsl
mov
iret
dec
addl
and
sbb
jle
sbb
sbb
jmp
xchg
std
mov
mov
cmpsl
movsb
cmpsb
aaa
mov
loopne
sarb
xor
jge
lds
pop
push
sbbb
sbb
xchg
mov
mov
cmp
push
repz
fwait
ret
push
int
push
pop
xchg
push
mov
dec
cmp
mov
repnz
movhps
push
lock
pop
dec
decb
jo
lock
std
loope
mov
imul
cmpsb
pop
fcom
fisubs
call
out
inc
push
fsubrs
ret
lret
xor
cmp
xchg
jb
dec
fs
pop
jmp
jo
sbb
stc
adc
jmp
shll
add
jmp
stc
aad
push
push
test
pop
dec
es
leave
inc
pop
mov
push
sbb
test
movsl
jne
add
dec
arpl
int3
ftst
jb
les
outsb
mov
loopne
mov
sbb
xor
push
stos
inc
mov
iret
inc
cmpsl
sbb
lods
fs
test
test
aad
arpl
movsl
loopne
push
out
je
jecxz
mov
mov
xor
mov
cmp
loope
nop
push
pop
gs
outsl
xor
dec
xor
out
es
repnz
dec
aad
and
scas
insb
sub
pushf
mov
add
jp
popf
data16
imul
push
cmpsl
push
cwtl
stos
in
mov
add
push
lcall
xor
in
cld
xlat
scas
stos
adc
into
pop
xchg
or
inc
jne
jl
jno
data16
cmp
sbb
xor
ljmp
adc
fistpll
pop
lea
jge
cmovb
pop
mov
or
mov
inc
xchg
adc
cmc
dec
fdivr
sbb
push
popa
lds
scas
mov
leave
jb
bound
mov
dec
cmp
adc
or
jle
dec
sbb
in
arpl
sbb
movsb
push
popa
jle
inc
jle
pop
push
mov
cmp
sub
nop
cmp
loope
add
xor
xchg
lock
jns
push
jp
inc
inc
enter
cwtl
cs
jl
jp
cld
sub
rolb
push
push
loope
mov
ficompl
movsb
test
inc
push
jnp
lods
mov
js
jecxz
loop
js
ljmp
push
or
push
loope
scas
gs
loopne
insb
mov
loopne
fnsetpm(287
es
into
xlat
inc
popf
xchg
dec
cmp
lock
fs
pop
push
addb
imul
sub
mov
bound
repz
shl
dec
sbb
push
mov
stos
cli
insl
cmpsl
icebp
pop
sub
mov
or
lock
cmc
pop
and
loopne
test
enter
mov
pop
inc
fs
cmp
ja
xchg
mov
xchg
fwait
ret
loop
jp
shlb
xlat
mov
cmpsb
loope
jl
nop
stos
mov
cld
pop
in
outsl
imul
je
movsb
xchg
ret
xor
jne
in
adc
int3
leave
pop
adc
sub
shr
adc
jno
mov
ljmp
pushf
out
sub
add
mov
pop
repz
or
dec
popf
fcompl
outsl
ror
add
push
xchg
pop
push
xchg
inc
xorb
arpl
mov
mov
dec
mov
cs
lds
jno
pop
leave
pop
stc
out
pop
xorl
mov
jo
iret
roll
dec
ret
sbb
in
test
mov
fsub
jo
add
das
mov
dec
mov
xchg
xchg
in
cmp
add
pop
dec
cmpsb
testb
push
daa
cmp
fmulp
scas
pop
lret
fnstcw
sarl
sbb
xorl
sbbl
mov
adc
test
int
cmpsl
mov
insb
xorb
xchg
lea
jp
pusha
ds
out
mov
mov
or
mov
or
lret
ds
mull
sub
pop
add
sub
std
sub
jmp
stos
dec
mov
ja
mov
push
cltd
jecxz
mov
sti
pushf
xor
inc
or
and
enter
dec
or
ss
pushf
addr16
dec
sahf
xlat
cmpsl
punpckhdq
fbld
sbb
mov
mov
shll
xor
add
mov
je
pop
movsb
sbb
jae
fdivrp
pop
pusha
jmp
fbstp
sub
xchg
jbe
xor
jae
pop
aam
push
push
in
dec
mov
jge
add
shlb
xchg
insb
dec
scas
lods
cwtl
arpl
fmull
in
inc
ja
pop
sub
dec
mov
jl
popf
int3
xchg
subl
ret
daa
repnz
sahf
lret
dec
push
pop
data16
lahf
mov
mov
cmp
xchg
inc
mov
cmp
imul
in
xchg
mov
fwait
adc
jmp
xorb
adc
mov
bound
pop
jmp
loop
lock
mov
arpl
mov
push
push
pusha
rclb
xchg
test
mov
inc
and
add
pop
inc
test
lods
mov
ja
pop
jae
mov
sub
fildl
inc
pop
stos
int
in
repnz
clc
sbbl
lahf
loop
imul
imul
andl
imull
sub
mov
jmp
sub
stc
cmp
ret
stos
fwait
inc
sub
cmp
xchg
daa
add
dec
loopne
jp
lea
sub
aaa
mov
insl
jae
scas
fdivp
in
sub
add
sbb
fcompl
test
negb
daa
xor
lret
jns
js
xor
push
push
pop
negl
cli
in
xchg
jle
data16
push
cmp
pop
movsl
dec
xchg
call
inc
mov
and
or
lea
js
push
fnstcw
xchg
ss
pop
inc
testb
ret
jge
push
and
scas
sbb
xchg
fs
or
or
les
fsubl
dec
xchg
or
gs
cmpsl
popa
dec
add
shll
nop
cld
or
mov
es
int
jp
jg
insb
cmp
pop
mov
aas
dec
dec
cmp
inc
mov
repnz
inc
push
inc
push
jmp
lcall
xor
fildl
sbb
adc
mul
push
push
add
fists
decb
dec
add
jg
in
or
jge
cld
cld
mov
pusha
mov
xchg
or
in
out
adc
je
lcall
cwtl
xchg
sbb
arpl
dec
and
testb
sub
xor
push
inc
ret
mov
shrl
dec
in
pop
mov
outsl
xchg
adc
push
loope
pop
pop
repnz
lock
or
push
xchg
cmp
test
push
mov
sub
inc
adc
xlat
stos
mov
gs
in
mov
or
aam
cld
and
xor
pop
out
xchg
int
push
xchg
std
mov
stos
push
add
lahf
xlat
sub
enter
outsb
insb
shlb
cmp
neg
adc
fwait
std
jo
data16
cltd
lahf
cmc
int3
pop
cmp
cmp
fildl
cmp
or
pop
mov
mov
xchg
mov
or
mov
lods
xchg
mov
mov
sahf
fsubrp
add
pop
aas
bound
xchg
not
xchg
mov
jo
out
jnp
test
movsl
leave
and
call
daa
cmp
push
js
pop
jecxz
loopne
aad
int3
pop
mov
xor
arpl
shl
inc
int
push
and
and
pop
loope
xchg
out
mov
mov
sub
xor
loopne
repnz
cmc
mov
jl
adc
xchg
sbb
jo
sbb
jns
aas
mov
or
jp
daa
jnp
push
mov
fwait
sbbl
cmp
jb
ret
or
lcall
into
mov
jbe
and
call
xor
sub
nop
js
lahf
mov
imul
or
pusha
scas
js
icebp
and
mov
push
jp
jl
les
dec
out
cmp
mul
or
lock
jp
popf
jg
mov
and
jle
add
imull
imul
and
adc
xorl
sub
in
pushf
cmp
ja
xchg
inc
sub
mov
orb
movsb
pop
in
sbb
cwtl
adc
adc
and
and
pop
test
aas
ljmp
inc
sub
shrb
shlb
notb
rolb
mov
mov
andl
lock
mov
enter
mov
jp
sbb
cltd
fisubrs
addr16
popf
sub
mov
out
mov
jge
mov
sub
je
mov
int3
dec
cmp
cmp
add
jge
lret
int
into
xor
mov
lds
xor
dec
pop
lock
cmp
push
fsubl
repnz
xchg
loop
push
inc
adc
cwtl
mov
scas
sub
jns
inc
cmpb
ja
xlat
lret
flds
test
sbb
xor
jle
notb
int3
loopne
dec
xchg
dec
adc
outsl
cmp
test
outsb
cmp
dec
stos
xor
or
loopne
mov
cmp
mov
arpl
ljmp
icebp
mov
ss
sub
sbb
je
jg
mov
movsl
add
and
sub
ja
jmp
mov
div
scas
sti
movsl
imul
std
adc
fs
push
sub
pop
jns
jnp
cmpsb
repnz
xchg
je
test
inc
cwtl
sbb
fs
adc
pop
fcompl
xor
int
lret
std
fldt
ficompl
rcrb
mov
scas
push
cmp
push
pop
cmpsl
xchg
in
aaa
stc
cmp
xchg
sub
pop
aaa
add
and
xchg
js
int
in
xchg
out
mov
leave
sub
out
inc
imul
xchg
imul
jmp
xor
shll
cmpsl
aaa
add
sti
inc
jmp
rolb
inc
sbb
ret
xchg
ja
xchg
add
lds
inc
pop
inc
adc
jp
xchg
jno
ja
push
xor
inc
fldl
in
test
mov
push
es
add
cmp
adcl
enter
mov
jmp
mov
test
ret
inc
adc
dec
lods
pop
mov
mov
pop
sub
frstor
dec
jae
ret
testl
push
push
push
stos
cli
test
xchg
ja
arpl
and
and
cmpb
pop
mov
adc
mov
mov
pop
shr
adc
cmc
divl
cmpsl
lock
ljmp
pop
fmull
sbbl
or
popa
stos
in
insb
mov
outsl
and
outsb
push
add
mov
pop
inc
sbb
xchg
dec
rolb
jge
imul
dec
ss
mov
mov
cld
adc
ss
or
push
call
xchg
mov
inc
pushf
fisttpll
jbe
repnz
imul
cwtl
outsb
push
xchg
out
push
push
lcall
sahf
or
dec
cs
lock
popf
fimull
xchg
mov
xchg
adc
jb
leave
ss
mov
mov
sbb
or
mov
pop
call
xchg
mov
mov
xchg
adcb
cmp
inc
scas
push
or
insb
adc
mov
scas
imul
out
xor
sbb
or
aam
repnz
gs
or
lea
cld
pop
shl
shrb
inc
fidivrs
sahf
inc
mov
or
mov
and
aaa
jp
mov
mov
xchg
mov
jmp
cmp
lahf
pop
or
mov
push
sbb
sbbb
fucom
and
or
sbb
iret
jp
movntq
ja
in
arpl
scas
out
test
aaa
negb
daa
xchg
fninit
adc
dec
mov
dec
adc
data16
jp
aas
loop
dec
mov
into
out
inc
or
mov
notb
inc
rolb
jno
dec
rolb
xchg
in
jp
movsl
pop
xchg
cmp
sbb
movntq
popf
add
push
imul
xlat
dec
jbe
test
or
scas
cmp
cmc
add
xlat
xchg
repz
adc
jle
add
mov
mov
stos
rorb
pop
ficomps
push
add
jne
lods
pushf
mov
mov
enter
mov
inc
mov
jp
mov
js
into
add
fadd
repz
incl
dec
xlat
leave
add
addr16
cltd
jge
sub
scas
scas
pop
cmova
and
cmp
jo
sahf
shll
cmpsb
ficoms
icebp
dec
pop
pop
xchg
ljmp
nop
ss
mov
add
push
jo
mov
std
add
pop
pusha
xor
xchg
movsb
pop
stc
pop
jp
loope
mov
aas
popa
push
jge
sahf
add
mov
xchg
int
cmp
cs
sub
pushf
ret
dec
mov
xchg
jno
inc
xor
push
mov
out
sti
push
daa
fs
mov
xor
lahf
and
cs
shl
adcl
cmc
sub
pushf
clc
fwait
add
sbb
test
xchg
jl
cli
in
rcrb
clc
cmp
jns
or
push
movsl
jo
or
cmpsl
call
mov
shlb
incb
xchg
popf
dec
push
inc
mov
subl
push
outsb
cmp
in
adc
fsubrl
mov
aaa
mov
jge
sub
loopne
lock
sahf
ljmp
push
hlt
sbb
fmulp
dec
lods
leave
test
xor
ss
sub
and
add
adc
movsb
sbb
popf
cmp
lds
mov
cmp
cmp
adc
push
jg
add
lea
fs
icebp
dec
in
test
jmp
shld
dec
add
in
push
movsb
mov
push
lods
dec
das
ret
movsl
icebp
rcl
cltd
push
sub
stc
sub
test
ret
mov
xchg
mov
lret
adc
jmp
push
sub
jecxz
push
or
xchg
xchg
lods
nop
or
into
insb
jne
nop
mov
sub
jbe
test
xchg
dec
out
jl
mov
mov
insb
js
clc
jns
cmp
and
push
add
dec
add
outsb
adc
mov
testl
or
adc
test
ljmp
faddp
addl
das
jbe
jle
scas
mov
add
sub
sbb
scas
lock
wbinvd
adc
pmulhw
movsb
popf
shl
iret
mov
push
adc
stc
cmp
aas
xlat
cmpsb
xor
mov
or
bound
popf
lods
jbe
outsl
xchg
aam
rol
ss
jg
ret
xor
and
mov
pop
push
jp
add
mov
mov
push
inc
loop
sbb
andl
pusha
pushf
into
imul
enter
stos
cli
out
dec
movsb
mov
dec
jmp
and
mov
fsubl
jno
add
mov
pop
loop
xchg
pop
test
sahf
or
adc
mov
lock
cmp
test
lods
jg
in
adc
push
loop
or
pop
push
add
shll
push
fdivrl
mov
lret
stc
fdivrs
bound
dec
xchg
pop
shlb
mov
fs
andl
xchg
mov
pusha
inc
sub
sub
mov
lahf
ret
sbb
jp
or
inc
or
pushl
mov
pop
cs
or
sub
movb
das
mov
adc
xchg
pop
cwtl
xchg
out
shrl
insl
stos
xor
mov
cli
leave
mov
inc
xchg
loop
push
mov
and
mov
sub
or
std
push
testb
insb
cmpsb
jmp
sbb
int3
popa
sarl
lds
pop
inc
icebp
jne
loopne
mov
jae
xchg
mov
adc
scas
adc
jbe
aam
addr16
xchg
xchg
aam
xchg
mov
pop
xor
std
pop
mov
cmpb
dec
test
mov
mov
mov
aas
fists
mov
movsb
test
in
jp
pop
bnd
or
xor
mov
inc
pushf
sbb
cmp
mov
xchg
icebp
xor
out
into
add
cmp
test
mov
ret
scas
mov
sbb
cwtl
pop
or
inc
jmp
aas
leave
jb
dec
mov
sub
fadd
lahf
inc
call
and
pop
repnz
cltd
in
imul
or
scas
stos
mov
mov
mov
lcall
cmp
xor
ja
and
ficoms
aas
xchg
mov
cs
insl
sub
cmp
int
dec
mov
inc
mov
out
pop
int
add
xchg
or
xchg
ds
jno
lock
push
dec
and
mov
cmp
jp
test
jbe
or
int3
repnz
xor
inc
sub
test
lock
adc
adc
int
loopne
fisubrs
sub
sar
and
arpl
jno
sbb
in
inc
mov
fisubrs
mov
mov
aas
mov
mov
aad
push
push
popa
mov
adc
cmp
aaa
xchg
sub
pusha
mov
das
in
adc
push
fldenv
loop
js
and
or
cmp
sti
int3
lret
pop
pop
sub
pop
pop
cmp
pop
or
nop
fildll
dec
jmp
mov
inc
fcompl
push
cltd
pop
jnp
and
sub
adc
das
fwait
cmp
xlat
push
adc
rcll
test
mov
sub
jge
shlb
movsb
stos
movsb
mov
lods
jl
call
mov
xor
test
jecxz
lds
adc
pop
fidivl
sbb
xchg
lcall
mov
out
jnp
in
sbb
cmp
ss
movsl
pop
dec
mov
and
cmp
pop
or
mov
cmp
mov
in
cmp
dec
div
sub
lret
sahf
imul
lret
mov
ljmp
fnsave
cmp
cmp
mov
je
fldenv
aas
in
adc
jg
add
lret
fpatan
dec
scas
mov
mov
jb
popa
test
mov
mov
dec
push
mov
dec
es
movsb
pop
push
out
cmp
out
pop
mov
es
lret
dec
cmp
test
addr16
mov
xlat
push
xchg
test
loop
andb
stc
xor
lea
insl
sbb
jge
lret
insl
xchg
cmp
and
adc
push
fidivl
dec
jl
dec
or
push
push
bound
stos
loop
insl
sub
cmp
pop
cmp
mov
sbb
xor
hlt
in
jno
fiadds
lcall
xchg
lds
push
jmp
rorb
mov
push
stos
imul
push
pop
in
insb
lcall
in
fidivl
xchg
cld
pop
mov
out
mov
adc
ret
roll
sahf
mov
out
in
lods
or
pushl
loopne
pop
in
cs
add
repnz
stos
movsl
or
fnsave
negb
cmp
fcompl
fadd
test
test
or
repz
xlat
ja
sbb
mov
mov
xchg
lcall
jmp
jbe
pop
cmp
sbb
xchg
adcl
jns
sbb
outsb
push
dec
outsl
and
adc
push
inc
xchg
push
scas
pop
jo
pop
mov
mov
adc
scas
adc
test
jg
mov
or
imul
mov
mov
cltd
arpl
jae
mov
in
mov
adc
clc
in
add
xor
lods
push
lea
push
in
xor
push
push
mov
int3
mov
test
popf
cmp
fldcw
mov
sbb
sub
pop
mov
mov
jecxz
in
and
jns
pop
mov
xchg
sub
mov
decl
sti
jns
sti
pop
scas
adc
push
mov
lret
out
aam
hlt
sbb
data16
arpl
adc
ficomps
adc
sub
bound
lahf
mov
push
lds
add
enter
pop
adc
add
xchg
jge
test
ror
and
push
fcomip
xacquire
outsb
jmp
das
fcoms
or
sbb
adc
sub
mov
call
or
rorb
pusha
out
cld
xchg
pusha
call
icebp
mov
sbb
sub
arpl
jbe
sub
mov
xchg
outsl
xchg
or
into
enter
mov
push
cmp
mov
jb
mov
std
push
and
xchg
in
das
jno
fsub
ja
test
mov
jg
dec
dec
data16
cmp
cmp
stos
mov
repz
add
inc
mov
aad
pop
lds
cmp
jns
sub
and
dec
popf
dec
jae
adc
cmp
mov
xor
arpl
xchg
xchg
ljmp
enter
xchg
sub
pop
lahf
jmp
push
into
mov
ss
fisubl
xchg
jbe
jbe
loop
push
inc
shrl
in
test
add
push
into
sub
ret
stos
out
push
jbe
fistps
xor
mov
les
leave
je
or
das
insb
mov
jns
mov
pop
je
dec
mov
mov
sbb
jnp
xchg
add
xor
cmpsb
test
push
xorb
push
pop
movsb
push
int
bound
jg
iret
pushf
or
int3
adc
int3
pusha
fwait
ret
aad
pushf
inc
and
adc
pop
ds
aad
pop
fimull
jecxz
mov
sub
in
adc
ret
mov
add
daa
mov
or
adc
in
inc
loope
cwtl
pop
mov
out
sub
jno
jl
mov
fxch
inc
fnstsw
jp,pt
aaa
pop
movsb
dec
cmp
sahf
mov
mov
test
lods
xchg
dec
pop
and
aam
jae
dec
loop
fisttps
push
cmp
push
jp
scas
fsts
mov
cmpsb
dec
fcompl
loopne
enter
mov
push
jb
mov
mov
sbb
xchg
xchg
pop
mov
and
leave
negl
jbe
sbb
push
sub
mov
xlat
inc
mov
jae
pop
movsb
adc
std
fisubs
mov
enter
into
inc
popa
test
loopne
test
xchg
cwtl
push
pop
xchg
xchg
push
in
pushf
dec
test
mov
and
xor
cltd
int
dec
inc
or
mov
mov
dec
ljmp
pop
enter
stc
sahf
imul
mov
test
faddl
xor
xor
cmpsb
jp
cltd
mov
in
sub
mov
dec
pushf
lahf
jp
cmp
fsincos
sub
inc
call
mov
jno
leave
xchg
incb
inc
cmp
popa
push
or
out
ss
jecxz
fcmovb
hlt
or
cmp
inc
push
pop
inc
insw
sub
sbb
mov
aas
aas
push
ja
mov
rcl
inc
cmp
jb
ja
out
xchg
aas
outsl
stos
inc
rolb
sub
repz
lcall
clc
lret
fwait
lcall
mov
aas
std
cmpsb
decl
mov
adc
cmpsl
ss
inc
pop
inc
in
pop
xchg
ret
or
xor
push
outsl
sub
jo
lds
xor
dec
mov
or
fstps
sbb
test
stos
mov
mov
xchg
dec
xchg
sbb
push
add
dec
push
pop
lock
ja
cmp
repz
out
add
ret
mov
test
sbb
ret
adc
inc
pop
inc
pop
cmp
jbe
cltd
stc
cmpsl
lahf
or
stos
sbb
jno
mov
or
out
add
mov
xor
push
pop
arpl
lret
dec
lock
cmpsl
enter
sbb
adc
movsl
dec
sub
push
cmc
mov
call
inc
daa
fisubl
dec
movl
sub
iret
pop
jg
inc
pop
cwtl
cmp
cmp
stos
sub
mov
xor
cs
inc
loop
lds
sub
loopne
testb
test
int3
pop
xor
sbb
out
fldenv
jg
cmp
into
outsb
lock
mov
and
sahf
xchg
sub
jle
or
sub
aad
imul
insl
sub
sub
push
xor
je
push
add
ret
loopne
mov
repnz
imulb
push
and
sbb
cmpsb
add
pop
rclb
sbb
lret
hlt
push
gs
hlt
xchg
adc
iret
sub
adc
into
pop
test
push
insl
mov
sbb
shl
lret
jnp
sbb
ja
mov
lahf
mov
aam
hlt
lahf
dec
hlt
lea
enter
pusha
pop
dec
sti
mov
lea
dec
xchg
dec
lahf
or
nop
in
fs
sub
mov
sbb
xchg
nop
cmp
push
push
adc
fsts
lea
jnp
sub
push
inc
lods
inc
insb
add
xchg
in
cmc
cmp
and
lret
or
mov
cli
movsl
hlt
cmpsb
mov
dec
mov
clc
js
and
push
mov
add
push
pop
push
mov
sbb
shlb
mov
cmpsb
inc
fcmovne
int
sub
stos
sbb
aaa
pop
cmp
mov
dec
les
mov
jnp
call
in
pop
rcrb
lcall
add
jl
fcmove
roll
push
sahf
in
stos
test
daa
or
xorl
sbb
pop
jmp
sbb
aas
inc
jo
aad
lods
lods
mov
loopne
and
mov
cmpsb
js
add
aas
andb
sub
adc
mov
imul
xor
aam
ja
shrl
push
xchg
imul
jns
int3
push
sbb
push
scas
push
sbb
lea
bound
dec
out
sbb
push
xchg
push
add
jnp
xchg
add
pop
pop
sti
mov
or
or
sti
sti
cmp
cmpxchg
cmp
lock
push
outsb
mov
jb
scas
test
xchg
das
pusha
lret
xchg
cmpsl
push
das
mov
lret
cmp
cmp
testb
mov
cwtl
fistpll
lfs
adcb
sbb
pop
or
enter
imul
xchg
lahf
out
ds
test
insl
or
and
lods
xchg
repnz
aam
mov
mov
lret
or
outsl
insl
stos
mov
aaa
call
pop
ror
add
push
iret
mov
out
int3
arpl
sbb
mov
push
dec
mov
jge
cs
jne
gs
int
in
popf
mov
aas
lea
idivl
scas
pop
or
imul
xchg
or
ja
rol
scas
mov
movsl
andb
pusha
inc
sbbb
mov
std
repnz
cltd
insl
adc
movsl
push
pop
icebp
mov
das
push
mov
push
std
jge
push
cltd
sub
xor
fiadds
bound
inc
mov
outsb
pop
adc
stos
mov
lahf
stos
xchg
in
icebp
dec
push
jl
repnz
sarl
cmp
pop
fiadds
cmp
movsl
mov
inc
inc
mov
inc
push
push
xchg
mov
enter
and
pop
out
xchg
sbb
lea
loopne
fnstsw
call
into
jne
pop
fstps
insb
adc
cmpsb
inc
jns
mov
sbb
cmpsb
lds
lret
ror
ret
int3
cmpsl
inc
xor
mov
jmp
mov
and
pop
sub
sbb
or
shlb
cld
or
mov
in
cwtl
fistps
jl
insb
xchg
jg
and
jmp
movsb
scas
inc
push
fs
out
movlps
pushf
das
mov
rorl
out
xor
push
loopne
push
xchg
xchg
movsb
fidivrl
fisubl
and
mov
data16
pusha
pusha
pushf
pop
cs
mov
jl
fwait
pop
pop
test
jo
lcall
pop
pop
cmc
out
in
add
sarl
xchg
imul
jl
mov
push
jp
mov
int
inc
jg
mov
leave
xor
add
fisttps
jmp
fwait
jae
adc
in
push
dec
popf
push
rcrl
mov
dec
int3
push
jle
jl
test
mov
dec
adc
adc
and
sbb
mov
lret
inc
mull
pop
mov
jge
jle
arpl
aad
arpl
inc
sti
mov
mov
mov
xor
arpl
shlb
mov
scas
filds
add
in
jmp
fisttpl
nop
add
icebp
clc
mov
mov
pusha
and
inc
mov
outsb
lahf
lods
xchg
cmc
out
xchg
mov
inc
mov
test
fisubs
push
lret
hlt
adc
sbb
sub
inc
jmp
push
dec
int3
inc
sbbl
mov
ljmp
pop
or
icebp
sub
xchg
pop
fwait
iret
xchg
xor
inc
or
mov
icebp
mov
xor
test
xor
fcmovnb
dec
fisttps
add
dec
and
cli
je
add
xchg
fprem1
mov
insl
repz
sub
cld
sub
dec
std
das
pop
mulb
inc
or
and
mov
lds
push
xchg
mov
jl
bound
addr16
xor
push
fisttpl
xchg
inc
add
sbb
xlat
lahf
and
pusha
cmp
cmp
and
sub
mov
nop
test
xor
jg
mov
fildl
mov
lods
push
push
pop
aam
gs
call
sbbl
icebp
int
loope
xchg
xor
mov
cmp
int
mov
test
sbb
or
ret
mov
fwait
in
aam
and
scas
lea
mov
mov
pushf
dec
push
dec
xor
add
mov
xchg
out
cmp
push
pop
jge
pop
aas
mov
icebp
pop
pop
push
rorl
dec
cmpb
movsb
sbb
xchg
leave
das
jae
dec
pop
xor
dec
inc
aad
xchg
repnz
lock
adc
adc
addl
inc
inc
rcll
pushf
or
test
es
or
movsl
mov
dec
mov
ficoml
popf
sbb
mov
in
jg
sbb
ljmp
shrl
xchg
xorl
in
pop
fidivrs
stc
dec
pop
push
pop
sbb
out
cmp
pop
ret
inc
add
or
cmp
in
add
cli
add
push
pop
ret
cmp
or
xor
and
jg
push
dec
inc
fistl
jmp
daa
fimuls
into
inc
dec
sarb
cmc
and
je
lds
inc
or
or
sub
pop
xchg
leave
lcall
jno
lods
cmp
es
pop
push
xchg
mov
ret
pop
test
aam
push
in
sub
and
int
popf
cs
cld
and
outsb
pushf
mov
iret
leave
mov
mov
xor
jge
fcom
jge
out
or
inc
mov
inc
pop
fisubrl
cmpsl
mov
jbe
lret
jl
cmc
popf
data16
push
and
call
or
incb
out
ficomps
cli
mov
jecxz
addr16
add
or
xchg
or
sbb
inc
cmpsl
stc
arpl
jmp
push
mov
sub
imul
or
fnsave
repnz
adc
test
lret
andl
fwait
cld
cmpsb
dec
cmc
jp
mov
jecxz
std
cmc
int3
inc
ds
pop
push
adcl
int3
movsl
fmull
cs
movsl
lds
cmc
ljmp
ds
rorb
addr16
shufps
jmp
inc
ss
dec
add
leave
inc
loope
dec
outsb
jp
lret
push
jecxz
ljmp
mov
pop
orb
es
gs
cmovle
hlt
mov
imul
stc
cmpsb
xor
and
dec
pusha
and
loopne
pop
pop
pop
loope
test
js
xor
repz
add
xchg
sub
mov
push
call
pop
xchg
popa
insl
test
mov
inc
push
insl
pop
lds
cmp
ficoml
dec
sti
or
jns
lea
mov
insl
std
or
jg
push
xchg
xor
mov
lods
pop
push
mov
repz
jnp
push
jae
pop
arpl
pop
cld
xlat
sbb
cmpsl
add
jbe
adc
and
test
jl
ret
vmwrite
cwtl
js
cmc
insl
lods
notl
push
in
cld
gs
ficomps
mov
mov
in
sti
shrb
fs
loope
repnz
mov
lods
pop
js
call
daa
cltd
subl
lock
xchg
fucompp
mov
push
dec
lahf
dec
inc
pop
in
push
setae
or
iret
out
push
scas
jno
clc
push
dec
inc
push
sub
fsub
jg
mov
mov
add
jae
and
inc
fidivl
cmp
or
stc
je
sub
ret
inc
clc
jmp
out
incb
rorl
mov
fidivrs
inc
mov
aad
int3
jo
ss
clc
pop
push
jnp
mov
sbb
inc
mov
dec
js
movl
inc
mov
fisubl
mov
add
insl
pusha
aas
loope
sub
movsb
push
data16
dec
push
cmp
xchg
jb
xor
subl
xor
idiv
pop
jl
insb
stos
push
fnstsw
jne
inc
fstpt
stos
add
mov
jle
cmp
mov
inc
adc
nop
sub
out
cld
loopne
and
jmp
jl
dec
fwait
adc
je
xor
aad
adc
vmovq
xchg
std
sub
ljmp
pop
ret
roll
enter
rorb
dec
mov
mov
pop
push
cmp
push
inc
sub
divl
js
jmp
adc
xor
out
in
mov
mov
xchg
mov
sbb
dec
dec
int3
push
jno
lods
mov
jl
aad
ret
out
ljmp
add
mov
enter
fwait
in
mov
xor
notb
sub
das
scas
std
sbb
lock
push
into
xor
add
mov
cmp
cltd
or
or
andl
and
inc
pop
mov
jle
in
mov
sbb
push
sub
mov
cmp
les
sub
lods
jb
jo
and
sbb
loop
int
add
add
test
cwtl
test
mov
sti
fisubs
mov
cli
add
je
push
cld
movsl
loop
add
leave
test
adc
jmp
ds
sahf
lret
pop
pop
push
scas
xchg
cld
dec
lret
dec
xlat
jns
add
fisubl
xchg
cmp
xor
aad
call
fisubrl
push
adc
adc
test
adc
adc
cs
dec
inc
leave
inc
or
outsl
jl
xor
jle
mov
pop
pushw
js
test
out
pop
sbb
rorb
jl
xor
loop
roll
jl
bound
sbb
shll
loopne
sbb
arpl
pop
leave
sbb
test
dec
dec
sbb
add
adcb
lret
insl
adc
jne
pop
lds
leave
sub
jns
push
mov
adcb
lret
inc
in
sub
mov
sub
xchg
pop
add
dec
adc
mov
lcall
orb
pushf
add
xor
imul
popf
mov
test
xor
mov
sbb
sbb
push
or
inc
mov
sub
inc
shrl
mov
mov
lods
mov
push
sub
and
mov
cmpb
mov
lcall
mov
test
mov
pop
sub
rcll
or
xor
out
sti
movaps
frstor
ja
fwait
xchg
js
out
stos
pop
sub
sysexit
and
xor
inc
jg
in
xchg
dec
mov
sahf
pushf
pushl
sbb
sub
xchg
and
cmp
out
dec
stc
daa
addr16
cs
sub
sbb
scas
mov
mov
out
ret
xchg
xchg
movsl
ficoms
int
mov
adc
sub
movsb
shr
push
adc
or
fs
addb
lea
dec
mov
mov
les
mov
push
xorl
mov
xor
pop
insl
jns
lods
jecxz
sub
inc
aad
cltd
mov
sar
pop
jae
int
scas
jle
xchg
jo
lock
jbe
xor
test
pusha
test
mov
pop
out
mov
mov
fists
cmp
cmpsl
xchg
movq
adc
xorl
leave
testl
push
or
mov
mov
and
add
inc
enter
sub
push
or
dec
push
lea
data16
sbb
cltd
adc
inc
lods
repnz
cwtl
into
sbb
bound
out
pop
popf
out
fildll
xor
test
dec
imul
push
sarl
dec
xchg
scas
lret
shrb
ss
popf
push
scas
sub
out
cmpb
mov
je
gs
mov
sbb
sbb
fimuls
negb
cli
fbld
sarb
fsubr
ja
mov
jne
xor
stc
mov
xchg
jge
je
enter
bound
rclb
xlat
shrl
fs
adc
dec
jecxz
ja
les
dec
mov
jmp
lock
adc
fnstsw
das
ds
jle
popf
fdiv
sub
cmp
scas
out
mov
clc
inc
pop
mov
scas
out
dec
dec
stc
mov
shrb
xchg
lret
mov
xchg
lods
mov
fildl
pop
dec
daa
xor
dec
add
pushf
adc
mov
fdivl
test
push
lea
mov
mov
outsl
aad
xchg
nop
ds
scas
ss
push
in
fdivl
dec
insl
push
out
cmc
push
ds
xchg
or
xchg
cmpsb
test
and
adc
xlat
xchg
cmpsl
sbb
inc
cmc
mov
or
test
mov
mul
imul
cmpl
sbb
mov
and
shll
loope
adc
push
sbb
fucomi
cmp
fwait
pop
xchg
xor
pop
lods
iret
cltd
sbb
sbb
jp
cwtl
add
decb
adc
xchg
cmpsb
sti
push
xchg
xor
pop
adc
call
lret
out
mov
dec
mov
push
sahf
mov
shr
jo
or
push
ja
push
xor
cmp
fnstcw
int3
fisubl
cmp
mov
leave
insb
push
sbb
mov
data16
pop
loopne
xor
inc
pusha
mov
imul
mov
xchg
xchg
pushf
xor
lods
cmp
sbb
in
pop
outsb
dec
jp
adc
or
sub
push
pop
daa
sbb
pop
repz
add
daa
mov
pop
popf
cmpb
pushf
cwtl
cmpl
test
push
sub
xchg
iret
cmpsl
ret
mov
jb
psrlw
das
fcomps
or
lret
jne
test
aas
mov
xchg
les
cmp
add
sub
add
fstpl
std
add
in
out
outsl
jecxz
dec
movsl
xor
jg
in
movsl
cmpsl
xchg
out
push
inc
sbb
ljmp
pop
insl
pushl
and
inc
fstl
xlat
sti
cld
lea
movsb
pop
std
add
in
xor
das
lcall
sbb
cmp
lret
pmaxsw
sbb
sub
stos
aam
sbb
popf
xchg
cmp
cmpsb
and
hlt
add
pop
fwait
test
sub
push
push
lods
mov
mov
out
pushl
mov
pop
daa
shlb
lcall
in
cwtl
imul
adc
cmpsb
aaa
sub
push
subb
and
mov
gs
mov
rclb
cltd
ds
sub
jl
adc
xchg
nop
mov
fcoml
sbb
xchg
jp
push
sub
rcrl
mov
fs
out
aas
out
pop
iret
mov
dec
mov
sti
and
dec
xor
hlt
mov
and
xlat
jnp
popf
inc
mov
stc
dec
test
mov
or
push
inc
divl
stc
push
adc
jnp
mov
xchg
lods
out
shll
sbb
ja
adc
aad
loopne
das
cmc
sbb
repz
std
out
test
xor
insl
cmpb
sar
sub
dec
sub
lret
add
lret
jmp
lds
es
jae
ret
fnsetpm(287
and
mov
mov
xchg
jae
sbb
out
mov
sub
mov
cmp
xlat
in
xchg
inc
loopne
xchg
push
gs
scas
mov
pop
test
jnp
cwtl
xchg
jge
jge
idivl
cmp
jne
call
push
stos
sub
mov
out
int3
cli
dec
pop
sbbl
mov
repz
add
mov
loope
pop
cmpsl
xor
and
addb
xlat
ds
pop
jp
dec
sar
int3
sub
jge
rcrl
jbe
sub
imull
ljmp
sarl
or
dec
xor
xor
dec
and
sar
stc
mov
cmc
imul
and
jno
adc
cmp
andl
xlat
jle
ja
daa
pop
lods
jmp
sub
xchg
stos
inc
jno
or
jl
mov
sarb
jno
mov
fdiv
test
les
test
jl
std
arpl
mov
stos
jo
xchg
loop
dec
lock
stos
inc
daa
inc
and
xlat
scas
adc
and
jmp
xchg
mov
aas
int
fstpl
out
xchg
jb
adc
stos
sub
jne
ja
mov
fs
mov
outsb
pusha
xchg
jp
inc
mov
into
sub
xchg
cwtl
sti
aas
inc
pop
mov
and
popf
inc
pop
jno
cmp
es
andl
xor
mov
mov
or
fiadds
call
rcll
inc
fs
push
rorb
lret
enter
xchg
dec
mov
inc
inc
out
into
and
outsb
sahf
pop
mov
xor
mov
sub
adc
and
idiv
add
mov
mov
out
adcl
xchg
xchg
xchg
das
nop
cmpsb
dec
mov
mov
inc
arpl
loope
lea
rclb
sub
cli
jecxz
mov
lret
add
sub
sub
push
daa
sarl
pop
xchg
xchg
push
lret
mov
pop
inc
cmp
xchg
cmp
mov
clc
js
mov
mov
insl
xchg
xor
aam
enter
inc
mov
test
sbb
je
fsubr
and
dec
out
and
imull
repnz
sbb
out
adc
or
in
fidivs
cltd
jne
or
cld
es
add
test
cmpsl
stos
jl
or
add
cmp
popf
or
orb
aam
cmp
outsl
cltd
lods
add
repz
xor
mov
fiadds
movsb
push
xor
fisubrs
je
sarb
mov
and
jge
daa
push
fisttps
push
push
shlb
pop
and
test
add
or
pop
rcrb
lods
push
popf
addr16
js
popa
and
and
and
add
test
lods
fstpl
gs
pop
ja
adc
jbe
sbb
movsl
sbb
in
pop
subb
sub
mov
pop
fnstcw
out
push
cmp
mov
dec
pop
dec
inc
pushf
fisttps
mov
jp
ret
pusha
xchg
pop
mov
shlb
sbb
mov
jae
ror
mov
inc
add
scas
pop
add
xchg
in
lock
jp
inc
addr16
xor
mov
jg
jmp
cmp
add
or
or
popa
inc
std
mov
sub
clc
pop
stc
adc
push
cld
loopne
push
lock
fnstcw
adc
mov
in
inc
orb
fs
ficoms
aad
inc
mov
mov
lock
cmp
and
and
outsb
add
scas
sub
pushf
bound
add
cmpsl
fstl
jne
in
mov
mov
lret
push
je
mov
push
mov
push
cmp
mov
mov
adc
lret
movsb
pop
inc
lret
in
fstl
pop
mov
scas
cs
jge
lret
jns
int
inc
xchg
xchg
insl
add
addr16
rcr
imul
dec
mov
add
jp
pop
inc
test
adc
pop
push
fmul
lds
push
rclb
ljmp
or
out
or
inc
movsb
mov
sbb
out
mov
fmull
inc
jo
icebp
dec
mov
call
cmp
stc
insl
mov
push
pop
mov
sbb
test
sub
outsb
idivl
loopne
rolb
mov
std
outsl
sti
sbb
jns
jo
mov
cmc
inc
fidivrl
insl
cmp
jg
xchg
and
testl
cli
sub
sbb
push
sub
cmpsb
jae
xchg
lods
or
and
pop
fists
popa
pushw
mov
xlat
lock
or
inc
mov
lock
call
dec
mov
shll
sbb
testb
pop
fmuls
push
pop
les
or
icebp
test
aam
in
push
xor
mov
js
scas
and
jnp
sbb
jle
mov
sbb
mov
fdivl
rorl
scas
mov
sub
jp
mov
lods
cwtl
mov
rorb
xor
or
pop
pop
jg
cmpl
pop
out
dec
push
es
dec
mov
ja
cmpsl
mov
push
adc
sbbl
mov
dec
cmp
mov
cmp
xor
jae
pusha
push
xlat
stc
hlt
xchg
enter
push
add
push
lods
sbb
dec
insb
sub
mov
sbb
adc
adc
mov
fwait
xor
dec
mov
mov
pop
inc
mov
fadd
or
xor
jp
jp
fidivrl
lock
mov
imul
out
mov
popa
or
insl
xchg
xchg
imul
add
pusha
inc
lret
mov
js
jnp
push
cli
fcomi
repz
pusha
xor
iret
and
ljmp
dec
fwait
iret
inc
sbb
and
adc
mov
sub
and
mov
inc
pop
pop
inc
jl
pop
in
or
dec
adc
lret
fdivs
jp
mov
imull
stos
dec
mov
jns
gs
mov
pop
daa
std
add
and
aam
clc
fwait
cltd
push
outsl
xor
mov
scas
pop
mov
jmp
pop
rcll
adc
cmp
jb
repz
and
jl
call
out
and
lcall
or
mov
or
mov
pop
and
mov
pop
cmpsb
sbb
push
push
loopne
push
xchg
xlat
pop
xchg
ret
mov
cmpsb
xor
mov
inc
clc
add
lret
or
mov
cli
setle
xchg
js
jno
push
mov
pop
ds
push
addr16
xchg
outsb
dec
idivl
jl
cmc
push
scas
popf
ja
jmp
jno
xchg
adc
das
jo
pop
jle
ja
inc
mov
rcl
clc
ljmp
pop
sub
lret
sub
jnp
js
movsl
push
pushf
pop
lahf
imul
outsl
jo
jns
and
mov
or
clc
inc
movsb
mov
ljmp
imul
sub
mov
leave
pusha
pusha
mov
cmp
jg
jne
jl
mov
or
cmp
xchg
push
out
hlt
fcoms
inc
adc
sub
iret
cmp
arpl
fbstp
and
enter
xlat
and
fsub
dec
mov
ret
add
lret
jno
pop
lods
xchg
dec
push
mov
arpl
cld
adc
mov
pop
icebp
dec
rol
cmp
cmc
leave
insl
pop
push
push
sub
jb
sub
cmc
pop
mov
jo
test
iret
xchg
xor
dec
js
xchg
inc
lcall
pop
xor
loope
mov
pop
shrl
xchg
sarl
ret
je
push
out
cmp
call
mov
and
mov
enter
push
ds
out
mov
enter
test
add
mov
in
push
push
xchg
sbb
pop
jg
jo
nop
addr16
std
pop
scas
adcb
bound
push
pop
push
arpl
push
mov
push
fildl
push
mov
xorb
pop
xchg
aaa
and
fsubr
lret
fs
cmp
icebp
mov
pop
sbb
and
daa
ja
shlb
sub
adc
xchg
cmp
cmp
int
ljmp
sbb
and
xor
pop
mov
sahf
lcall
and
push
push
loopew
cmp
aam
xchg
roll
jg
pushfw
jg
sbb
mov
add
push
stos
into
cltd
imul
fsubrl
aas
daa
mov
cmp
xorb
shrb
adc
pop
cli
inc
push
push
cmp
pop
inc
lock
push
cmp
imulb
xchg
test
sub
lods
xor
rcrl
cmp
addl
out
xor
int3
std
pop
xchg
cli
jmp
sti
jae
fisttpl
jmp
popf
dec
inc
addr16
shll
xchg
jle
and
sbb
fs
adc
aaa
fs
push
sbb
cmpsl
jb
lret
enter
sub
in
cmc
mov
xchg
std
dec
dec
push
cmp
in
mov
pop
in
pop
fnstsw
sub
int3
mov
sub
jnp
in
dec
cmpb
leave
sahf
and
dec
movsl
jg
fbld
mov
jp
push
sub
mov
sub
outsb
cmpsl
rclb
dec
mov
aas
aam
jnp
neg
xor
pop
and
mov
fucomp
cmp
or
mov
loop
loopne
fs
mov
out
and
mov
pop
decl
mov
xlat
hlt
out
movsl
in
mov
hlt
add
pop
add
pop
xor
mov
lock
nop
into
and
pop
cmp
out
iret
lahf
inc
push
mov
xor
pop
lret
fwait
popf
jb
sbb
mov
jne
or
and
dec
sbb
dec
test
push
popf
clc
out
pop
sbb
dec
or
repnz
mov
sbb
lcall
les
jns
enter
es
lds
xchg
movsb
lcall
ljmp
pop
sub
pusha
fmuls
sub
aad
or
and
adc
lret
xchg
mov
icebp
aam
nop
push
ds
out
adc
int3
lahf
aad
fildl
and
pop
int
pusha
add
jbe
cmp
jmp
imul
mov
add
fnsave
mov
cwtl
sbbb
aam
icebp
data16
mov
outsl
test
js
dec
cli
popf
cmp
call
repz
jmp
mov
inc
pop
das
and
jbe
mov
ret
enter
xchg
or
lock
xchg
add
pushf
inc
jnp
lock
xchg
mov
ficompl
sbb
addr16
xlat
mov
jp
setge
test
mov
int
mov
in
xlat
dec
adc
test
inc
lret
pop
je
sub
mov
mov
push
mov
ret
mov
lods
or
adc
ds
or
orl
lahf
rcrl
ss
lcall
cmp
push
ja
aaa
mov
jge
pop
into
xchg
jbe
lock
scas
loope
nop
mov
stos
mov
push
add
mov
outsb
mov
arpl
dec
inc
inc
add
push
add
and
fs
dec
adc
inc
jecxz
aad
add
in
xchg
fcompl
push
mov
call
and
sub
pop
sbb
pop
popf
out
sahf
adcl
ret
addr16
mov
rclb
out
add
pop
pop
cmp
enter
jle
push
inc
xor
jp
out
cmpsl
adc
jle
shlb
push
add
repnz
scas
mov
pop
lods
adc
leave
popa
mov
jb
loopne
fistpl
jae
dec
fsubrp
xchg
or
pushf
adc
inc
adc
xor
shll
insl
mov
aam
xchg
push
and
cmp
cmp
loop
cmpsl
or
mov
inc
clc
aam
lret
out
in
repnz
or
mov
jg
in
je
mov
mov
push
fcomps
aad
push
sti
mov
push
daa
mov
inc
and
sub
pop
in
insb
adc
ds
jmp
xor
jmp
lea
das
pop
outsb
sbb
adc
cmp
into
mov
daa
xchg
int3
insb
push
mov
xor
test
lret
loop
mov
loop
repnz
rclb
and
cwtl
pop
dec
add
jns
iret
sti
inc
or
xchg
lods
add
cmp
xchg
outsb
lahf
cli
and
popa
push
pop
jno
sub
lock
sub
inc
mov
dec
loopne
mov
leave
jno
mov
pop
dec
xorb
gs
xchg
sarb
sbb
pop
pop
xchg
popa
and
mov
mov
xchg
mov
xchg
notb
sub
gs
test
inc
adc
inc
adc
fs
shll
es
mov
mov
addb
movsb
and
sbb
and
and
in
dec
data16
jg
mov
fnstcw
cmp
sub
push
mov
rorb
rcr
mov
adc
or
jb
test
cld
pop
pop
and
cmp
test
sub
sbb
out
push
out
dec
jl
inc
mov
jae
sahf
cltd
xor
cmp
pop
fsub
push
sub
adc
xor
cmp
fdivrl
loop
jp
pop
mov
in
into
sub
cltd
jns
adc
repz
data16
dec
das
jl
jnp
xchg
push
js
inc
jp
fildll
pop
rcr
repnz
mov
mov
rcrb
iret
mov
xlat
in
in
or
xor
add
divl
in
adc
bound
mov
mov
rorb
movsb
repnz
jmp
add
enter
sub
dec
pop
mov
adc
dec
cltd
or
push
out
into
sub
int
jl
push
aaa
xchg
dec
dec
outsb
xlat
mov
adc
add
decb
jge
sbb
insl
adc
clc
and
fs
xchg
ret
fwait
xor
in
add
loop
dec
call
inc
xchg
xchg
jo
das
shrl
sbb
fmul
jns
fnstcw
mov
inc
xor
and
cli
andb
loope
xchg
jno
ljmp
xchg
sbb
sub
lcall
pusha
stc
xchg
jae
mov
dec
test
stc
push
das
nop
stos
adc
inc
pop
mov
adc
pop
rcl
dec
popf
mov
mov
push
xor
xlat
loope
int3
fsubrl
and
or
push
cmpl
or
loopne
jne
xchg
inc
frstor
nop
mov
add
andb
idiv
fstpt
cmp
inc
dec
or
shlb
ljmp
push
fistpll
mov
push
ja
les
cmpsb
clc
pushf
and
adcb
and
mov
xor
jmp
mov
cmovb
push
shl
lea
lahf
out
push
dec
dec
or
mov
sbb
jno
pushl
push
or
push
lcall
xchg
adc
adc
pop
add
mov
repnz
sbb
sub
mov
addl
fsubs
jne
push
mov
lcall
sub
lods
jg
iret
movb
push
loope
sbb
dec
push
ret
sbb
push
stc
pop
out
xor
fdivl
jbe
push
jecxz
cld
or
jl
pusha
cwtl
scas
and
mov
ljmp
sbb
cmc
and
popf
mov
push
sub
mov
inc
mov
mov
jmp
mov
inc
sub
xlat
ds
inc
insb
pop
andl
mov
stos
jo
inc
lahf
dec
cmp
cmc
xchg
jo
out
testb
idiv
and
es
not
aad
mov
mov
dec
lds
push
add
pop
push
cmp
andb
or
lods
xchg
loop
fisttpll
sbb
sub
clc
add
xor
pop
add
sarb
jb
xor
pop
fucomi
mov
xchg
test
loop
int3
and
shr
std
pop
pop
add
dec
xor
jge
fcoms
and
jbe
add
negl
aaa
inc
movsl
inc
out
push
xchg
popf
fstps
dec
enter
cli
and
sub
sub
cwtl
sub
aad
ret
push
xchg
xlat
lods
mov
dec
and
test
js
or
out
test
int
mov
out
mov
mov
rcl
mov
dec
iret
mov
mov
scas
lods
enter
out
insl
add
fcmovne
popa
jg
xchg
xchg
adc
int3
inc
add
imul
imul
cli
mov
into
pusha
push
lods
in
popf
popf
xor
sbbb
stc
loopne
negl
or
pusha
into
hlt
push
mov
push
fdivs
hlt
mov
insl
xor
in
std
push
sarb
or
in
sub
stos
ds
movsl
jmp
inc
pusha
inc
mov
cld
imul
cmp
imul
mov
popf
ror
xchg
fdivrs
das
or
das
in
xor
hlt
xor
add
lcall
fdivs
xor
iret
xchg
cmp
aas
pop
inc
ret
loopne
cmp
pusha
push
repnz
add
fcomps
dec
out
rcr
ret
mov
aam
fmuls
ss
add
mov
enter
sub
mov
sub
sub
in
mov
pop
sti
nop
jo
fs
add
ret
xlat
fsubrl
xchg
test
xchg
in
stos
mov
outsl
popa
sub
ds
je
xchg
and
lcall
aaa
xchg
add
dec
std
call
lock
jne
imul
testl
push
inc
pushf
push
xchg
daa
xlat
add
pop
dec
cmpsb
inc
inc
jnp
sbb
nop
add
test
sub
add
mov
fimuls
or
sub
add
lds
int3
ljmp
fnsave
jbe
push
bound
xorl
dec
test
sbb
outsb
mov
ror
adc
ds
pop
outsl
mov
out
adc
loop
inc
mov
in
repz
mov
mov
mov
pop
xchg
roll
insb
lds
push
mov
cwtl
test
push
pop
popf
add
xor
mov
sub
adc
insb
jnp
sub
daa
loopne
inc
add
clc
cli
lods
push
lahf
add
sub
xlat
cmp
ret
sub
lret
in
and
into
jge
mov
dec
xor
jmp
mov
push
mov
mov
cmp
push
std
notl
mov
xchg
mov
std
xor
shl
cmpsl
fbstp
fistps
movsl
and
data16
push
addb
sar
addr16
push
or
lods
js
push
xchg
lret
xor
mov
clc
push
in
in
je
pusha
add
sub
lret
loopne
fdivs
lret
mov
cs
sub
xchg
sarb
lods
and
adc
pop
sbb
xlat
cmpsl
push
mov
loopne
mov
sub
pop
xor
dec
bound
out
shrb
fdivr
cmpsl
imul
cmp
mov
fsubs
jae
xchg
loope
pop
stos
scas
shlb
shl
push
arpl
and
rcr
ljmp
flds
in
js
pop
ds
cmp
xchg
xchg
das
jl
je
cmc
data16
pushf
dec
or
mov
and
pop
test
push
push
sub
inc
mov
and
cmp
inc
pop
xchg
clc
mov
jbe
bound
sub
clc
mov
jl
into
push
and
cmpsl
int
push
repnz
jecxz
add
add
addr16
int3
dec
repz
push
xlat
scas
inc
shrb
pusha
xor
lods
add
push
adc
dec
aad
insb
fs
pop
mov
iret
aam
mov
pop
call
int
push
xchg
pop
inc
jae
lahf
gs
jb
xor
add
loopne
out
xchg
sarb
idiv
adc
mov
mov
mov
gs
cld
cwtl
xchg
stc
ljmp
sub
fildl
scas
add
movsb
test
cmpsb
insl
mov
add
sti
jmp
sub
push
filds
repnz
mov
lock
xor
pop
sahf
dec
adc
push
sub
popf
dec
cmc
outsb
data16
add
out
mov
jbe
jae
inc
push
scas
ss
testl
cmc
shlb
iret
popf
out
add
jmp
clc
popf
xor
dec
and
fmull
cs
push
fcompl
xor
mov
dec
in
clc
xchg
ss
dec
filds
push
mov
xchg
out
in
sub
xchg
push
jne
insb
arpl
sub
pop
jle
pushf
jmp
fs
cmc
and
push
sub
je
cmp
lods
jge
outsb
sub
mov
ret
xor
frstor
insl
or
mov
cmp
and
lret
jp
inc
mov
pushf
xor
xor
inc
mov
aas
or
rcll
nop
xchg
fdivl
add
mov
stc
lfs
test
in
test
jp
pop
repnz
pop
cld
push
mov
cs
ds
rcrl
cmp
test
dec
sub
int3
xchg
mov
ljmp
les
inc
dec
cmp
pop
clc
popf
mov
jb
mov
or
clc
scas
roll
les
dec
addr16
xlat
xchg
sbb
add
mov
xor
adc
adc
jg
push
sti
arpl
insb
inc
push
mov
adc
and
pop
jb
sub
gs
ret
sub
in
xor
std
sub
push
cmpb
lahf
daa
pop
and
jb
inc
mov
adc
stc
ds
xor
int
jmp
cmp
cmpsb
or
rorb
daa
jne
cmc
popa
jge
cmpsl
push
push
xchg
addr16
adc
es
dec
cmp
sub
popf
jg
decb
inc
shll
in
rcrl
add
inc
outsb
jl
outsb
das
xor
jge
or
aaa
dec
into
mov
mov
jno
xchg
sti
loope
daa
and
fidivs
sbb
xchg
fucomp
cwtl
push
mov
clc
sbb
xchg
jle
std
push
cmpsb
enter
inc
out
sbbl
rcll
or
test
and
repnz
mov
jmp
lahf
jo
push
inc
cmpsb
pop
push
push
inc
sbb
int3
dec
in
adc
iret
xor
roll
cmpsb
xchg
loopne
ds
adc
mov
sbb
jl
pop
and
push
cs
outsb
xor
insl
mov
jne
cmc
pop
xchg
repnz
add
scas
ljmp
lcall
in
mov
xchg
jno
mov
push
fnsave
fsubr
mov
ds
imul
addr16
movsb
xor
movsb
pop
xor
push
mov
xchg
fldcw
pushf
jmp
cmpsl
scas
leave
mov
cli
std
mov
or
xor
and
mov
pop
xchg
mov
popa
inc
mov
into
push
xor
ljmp
js
pop
out
jnp
into
jle
sti
insl
int
mov
sbb
pop
pop
cmp
jno
roll
mov
in
aaa
stc
cltd
stc
pop
mov
push
shrl
xor
push
mov
push
mov
mov
mov
cmp
icebp
mov
fisttps
push
subb
orb
loope
jmp
pop
jo
rcrl
xchg
pop
jl
adc
int
arpl
xlat
aad
jg
lds
mov
lods
lcall
lods
repnz
push
pop
jo
push
mov
cmp
xor
add
out
imul
rorb
out
mov
gs
les
iret
outsl
mov
insb
jns
push
lods
movsb
and
fdiv
int
mov
lods
xor
adc
ljmp
sti
dec
push
push
push
jae
push
pmuludq
mov
sub
fs
dec
mov
arpl
sub
dec
inc
push
inc
gs
jle
mov
jl
dec
fildl
fsubp
inc
sti
push
outsb
or
or
mov
insl
jl
dec
pusha
mov
xchg
mov
sbb
repz
lock
xchg
arpl
push
movsb
fucom
pop
pop
aaa
out
fcmovne
and
xorb
scas
adc
lods
repnz
repz
xor
aad
addr16
in
movsl
mov
cld
xchg
into
push
fldcw
sub
enter
xlat
orl
adc
xlat
and
dec
dec
out
call
mov
xor
mov
push
shll
mov
and
and
xor
repnz
pop
cmp
sbb
push
fsts
jbe
shrl
popa
mov
adc
xor
cmpsl
lock
pop
jbe
xor
stos
call
mov
fmul
jge
sub
adc
mull
test
rcl
js
ljmp
jnp
sub
jno
ret
out
sub
cli
xchg
out
adc
enter
push
inc
enter
xor
fimuls
push
jle
pop
dec
insl
jno
in
ss
adc
in
mov
in
sbb
pop
xor
cmp
mov
or
dec
cs
data16
inc
or
xchg
imul
cltd
sub
imul
fnstenv
push
shlb
sbb
xor
push
xchg
inc
ret
inc
jge
rorb
lods
dec
sub
xchg
insl
stc
lret
out
orb
fdivl
ffree
or
std
xchg
rol
call
repz
add
das
sub
xchg
jmp
stos
repz
push
jge
mov
and
dec
xchg
sbb
out
adcb
xor
inc
mov
pop
mov
mov
ja
cs
stc
out
bound
fdivrl
sbb
mov
pop
sbb
out
arpl
adc
pop
test
lahf
outsb
mov
fst
pop
sbb
in
icebp
dec
push
lea
sub
mov
lea
lret
cwtl
xor
mov
and
les
sbb
sub
call
cmpsl
xchg
outsl
lods
lock
lahf
test
jmp
cmp
dec
enterw
shlb
sbb
cs
cmp
popa
leave
cmp
imul
mov
mov
fidivs
inc
or
repz
cmpsb
sbb
mov
mov
dec
rcll
pop
xchg
out
lcall
adc
pop
fs
cwtl
popf
sbb
inc
lret
testl
stc
jmp
in
out
divb
lret
fstps
scas
add
pop
dec
mov
dec
sbb
xchg
jnp
fwait
pop
cltd
loopne
enter
sbb
rol
shrb
xchg
add
mov
dec
jno
cmc
push
insl
mov
pop
mov
or
sub
mov
pop
jle
pushf
xlat
clc
and
or
sub
sub
imul
add
mov
or
push
inc
jg
clc
lret
aad
or
add
loop
xor
stc
bound
int
sti
jno
cmpsb
jb
cmp
jle
mov
xchg
int3
shll
xchg
divb
ret
cld
cmpsl
pusha
pop
or
xchg
pushf
stos
cmp
nop
lret
shrb
dec
dec
data16
stc
repz
popf
mov
clc
mov
add
out
test
repnz
and
inc
jge
inc
push
pusha
loope
ret
adc
jno
add
dec
cmpsl
add
divl
fsts
and
mov
rolb
cmp
adc
inc
sub
insl
stos
movsb
hlt
sti
cmp
leave
les
or
mov
in
add
xchg
and
repnz
sub
gs
aam
ret
pop
clc
cs
pop
outsb
sub
pop
ss
push
lret
movsl
fcoml
mov
fistpl
bound
dec
mov
dec
pop
stos
mov
leave
xlat
jge
xorb
jne
orl
mov
sbb
rorb
xchg
cld
out
dec
sub
shl
mov
mov
lcall
pop
xlat
aad
loop
stos
add
pop
inc
cmp
ds
jl
cwtl
xor
imul
sbb
mov
cld
cmp
xor
mov
fstl
lret
fwait
xchg
fisubl
fadds
adc
xor
out
shrl
test
inc
inc
xchg
rolb
dec
ret
or
stos
insb
or
in
or
dec
mov
mov
jbe
mov
and
xchg
xchg
and
push
pop
jge
xorl
mov
pushf
loop
xor
fld
mov
jae
lock
cwtl
out
loope
scas
arpl
pop
or
dec
push
into
cmpsl
fs
pop
aam
sub
jp
mov
std
outsl
stos
mov
jecxz
lods
cmpl
call
fsubrs
fnclex
jp
loope
sti
mov
stos
inc
mov
jo
mov
dec
push
out
jge
xchg
in
sbb
aad
or
xor
jmp
jnp
fs
inc
or
sub
lret
sbb
xor
jae
sbbl
pop
inc
test
ljmp
popf
sbb
xor
inc
loopne
cmp
fldl
mov
ljmp
shll
xor
out
testb
outsb
pusha
pop
int
push
adc
xor
cmp
in
int3
mov
jge
jge
xor
or
idiv
dec
int3
out
mov
inc
dec
mov
adc
stos
sbbl
xor
jnp
pand
sahf
cmp
jmp
adc
jnp
cmpsb
faddl
mov
jo
lret
xor
pop
adc
add
pop
cmp
in
pop
xlat
push
fsts
movsl
xchg
fnstsw
stos
stos
cmc
jo
movsb
testb
popf
and
aaa
pop
xor
insl
js
pop
xlat
push
sbb
std
pop
mov
lret
mov
roll
ds
arpl
daa
clc
jmp
or
jl
mov
cmp
xchg
mov
mov
sbb
pop
jg
add
mov
mov
xor
sahf
fcoms
roll
dec
pop
sub
pop
add
or
fldcw
cmp
jbe
sbb
or
dec
dec
dec
fcompl
shll
jno
lods
mov
and
mov
or
push
pop
ds
add
adc
sbb
xor
and
xlat
enter
fwait
mov
sti
scas
mov
jae
rcll
push
and
push
fadds
shll
xchg
sbb
cmpsb
nop
sbb
pop
repnz
scas
rorb
dec
xchg
or
mov
jecxz
add
jno
daa
imul
fmull
xchg
mov
je
xchg
lcall
shl
incb
dec
dec
movsb
cmp
xchg
mov
movsb
aam
out
mov
ret
and
add
and
mov
and
pop
test
shrb
and
xor
sbb
pop
fidivl
and
jns
in
pop
cmp
out
mov
das
and
cmp
gs
negl
mov
lahf
mov
push
test
daa
mov
xchg
push
mov
and
cmc
mov
sarb
fidivrs
cwtl
cmc
cmp
push
xchg
inc
jp
sti
push
mov
stos
stc
ja
pushf
enter
push
aaa
push
lahf
ljmp
pop
xchg
cwtl
sbb
dec
cmc
out
xchg
cmp
mov
ss
pop
sbb
vmovapd
push
adc
add
mov
movsl
dec
repnz
xchg
adc
push
hlt
mov
js
repnz
insl
add
nop
test
int3
mov
push
pushf
decb
insb
out
gs
push
out
js
pop
push
jno
repnz
sbb
cmpsb
lret
pop
fisubrs
sub
test
push
cmp
in
into
sub
pop
dec
shll
mov
push
sbb
mov
lea
cmp
outsl
xchg
xchg
fwait
mov
cmp
js
arpl
subb
gs
iret
dec
mov
xor
mov
repz
mov
push
stos
jne
xchg
mov
push
cmc
lret
ret
arpl
xor
dec
sti
pop
aam
dec
xchg
shrb
mov
jae
push
sbb
adc
or
scas
dec
mov
adc
xchg
adc
sahf
loope
dec
out
lret
mov
lock
into
adcl
adc
xchg
dec
add
sub
lret
adc
mov
mov
jle
sbb
push
in
sub
faddl
adcb
jge
xlat
pop
mov
xor
sti
in
test
ret
aam
xor
das
dec
dec
test
test
xchg
xlat
roll
inc
icebp
fs
cmp
xor
inc
and
push
mov
sub
sbb
jecxz
xchg
inc
adc
or
fisubl
push
xchg
fwait
outsb
addr16
adc
mov
mov
pop
pop
jb
sub
in
adc
jp
stos
xchg
jbe
mov
mov
ds
aaa
test
fldenv
outsl
pop
mov
int
test
cmpsl
push
push
add
adc
stos
jno
stos
ljmp
mov
lods
shrb
sub
mov
jae
inc
mov
rclb
adc
or
cs
cmpb
mov
fisubl
mov
rorl
pop
ss
pop
mov
cltd
pop
dec
jg
and
add
lea
push
xor
stos
push
inc
cmp
fbld
cltd
sar
pop
and
push
cmp
fsts
xchg
std
xchg
pusha
int3
jo
mov
dec
xchg
adc
cmpsl
inc
mov
push
outsb
in
add
sarl
cli
adc
mov
add
add
cmpsb
divl
cmp
cmp
daa
jge,pt
sub
mov
mov
ja
push
add
shl
push
fs
call
xor
push
enter
push
inc
nop
or
mov
xchg
gs
jbe
shrl
push
ret
out
je
in
jo
jne
mov
push
fmul
push
pop
leave
cld
or
jns
fcmovnbe
cmpsb
adcb
adcl
sbb
out
mov
hlt
call
js
jno
into
or
test
xchg
or
das
pusha
sbb
outsl
outsb
sbb
xchg
xchg
or
stos
lock
and
push
clc
loop
lret
push
daa
test
push
pushf
dec
jne
ret
insl
in
sbb
push
jl
xchg
clc
mov
xor
cmp
mov
mov
mov
jp
jle
push
aad
jecxz
sub
xor
or
xchg
test
lock
sbb
dec
popl
movsl
ja
dec
push
push
lahf
and
or
es
jge
ficomps
sub
fildl
shl
loope
xor
mov
jg
ret
dec
movsl
dec
lods
and
or
loop
out
ret
dec
int
out
nop
mov
out
sub
jbe
mov
pop
or
push
inc
jg
in
and
xchg
sar
cmp
jo
arpl
push
mov
xor
stos
push
jge
xchg
daa
xchg
stc
outsb
sub
lret
popa
mov
rcrl
cli
mov
daa
pop
cmpsb
inc
insb
xor
mov
jo
and
sub
arpl
popa
inc
xlat
sbb
imul
jge
mov
pop
jge
ss
mov
inc
imul
cmpsb
in
adc
insb
jle
jb
pop
mov
add
cmp
jp
mov
daa
pop
nop
pop
cmp
add
aas
cmp
xchg
sub
or
outsl
push
in
sub
mov
jge
dec
adcl
pushf
jmp
sti
push
aam
xchg
xor
stos
adcl
subl
pop
pop
dec
cld
lahf
cli
mov
negb
in
pop
pop
jbe
fscale
sub
add
cmp
xchg
push
in
mov
ljmp
testb
stos
test
aaa
pop
or
icebp
jns
arpl
sub
addr16
inc
ret
and
pop
sub
adcl
jbe
dec
inc
xor
orl
shl
push
mov
jbe
mov
pop
lods
adc
inc
lahf
stc
push
sbb
push
xor
pop
aaa
insb
cwtl
mov
cmp
int3
xchg
and
jno
stos
mov
mov
or
dec
cmp
imul
out
add
ss
out
lds
sti
cmpl
jge
repz
hlt
cli
fstl
mov
insb
inc
jmp
les
xor
add
mov
subb
xor
cmp
stos
scas
ret
cmp
or
loop
sbb
rcl
arpl
add
stos
mov
outsb
push
icebp
stos
mov
lds
mov
lcall
cmp
push
mov
sub
dec
pop
xchg
dec
test
cli
daa
stos
add
xor
test
rolb
add
adc
push
lahf
in
xchg
ret
into
jne
sub
cmc
inc
in
insb
frstor
mov
lods
out
aaa
aad
xchg
fistpll
xlat
ds
inc
add
out
and
in
xorl
inc
lahf
or
mov
imul
jnp
data16
scas
int
idiv
in
clc
and
aam
repnz
xor
dec
inc
inc
dec
outsb
cmp
in
jmp
mov
stos
or
mov
popf
dec
lahf
loop
decl
cmc
and
and
in
add
popf
lcall
inc
jg
dec
mov
sub
inc
xlat
lahf
dec
stos
shr
jns
pop
mov
pusha
inc
aaa
jge
out
pop
add
into
add
ret
imul
fstpt
js
cmp
int
xchg
ljmp
xchg
jle
lcall
xchg
das
pop
push
add
jb
shll
jo
fbstp
nop
inc
pop
pusha
xorl
jge
mov
mov
cmp
inc
in
es
pop
mov
pusha
fdivrs
pop
leave
addb
les
mov
push
fstpl
fstp
and
push
inc
dec
int
mov
inc
inc
ds
jne
test
icebp
dec
scas
xor
jge
lods
and
mov
jmp
or
cwtl
popf
ds
and
inc
push
sbb
pop
shrl
dec
push
rorl
arpl
popa
lea
push
lods
int3
orl
in
jmp
jecxz
jmp
test
jmp
or
test
mov
add
das
jmp
inc
dec
ds
lret
shlb
insb
inc
fcompl
add
sub
or
pop
dec
aas
stos
mov
je
repz
push
fiadds
adc
sbb
pop
push
insb
in
pop
mov
jecxz
loope
outsl
mov
pop
sbb
cmp
mov
mov
adc
xor
js
jne
push
lret
sti
es
stc
cmp
dec
scas
mov
or
xchg
sbb
cmp
rorb
rcll
repz
std
sub
jecxz
pop
add
mov
test
inc
addr16
out
stos
les
adc
scas
mov
jge
mov
mov
cmc
aaa
lret
add
or
mov
int
leave
in
sbb
adc
mov
or
enter
popf
mov
mov
xor
add
dec
jle
pop
jb
cmc
clc
jae
jg
sbb
cmp
xchg
add
xchg
pop
jne
pop
add
add
or
push
insb
mov
orb
xor
lods
mov
mov
out
std
sbb
xchg
icebp
mov
sbb
icebp
inc
fisubs
enter
rcrl
and
push
xchg
jp
decb
fmull
dec
pop
test
fstl
push
or
in
stos
jl
bnd
js
jnp
lods
dec
pop
loopne
sub
enter
and
mov
pop
pop
mov
mov
aaa
test
xchg
inc
out
push
fxch
jmp
inc
push
lea
test
pop
fidivl
lock
xchg
scas
jle
addr16
xor
jbe
dec
pop
lcall
push
mov
mov
jl
push
test
mov
xor
xchg
lock
pushf
push
ds
pop
test
insb
lret
addl
xor
mov
xor
sbb
out
pop
adc
xchg
sbb
nop
fisubs
mov
enter
pop
pop
dec
push
add
pushf
pop
sub
xorl
jecxz
sub
pop
sub
int3
adc
mov
sbb
mov
inc
mov
jo
lahf
xorl
and
cmp
mov
cli
movsb
insl
ret
movsl
scas
pop
mov
push
cld
rclb
cmc
or
iret
mov
push
dec
fsts
fcomps
lock
nop
test
xchg
cmpsb
fiaddl
sub
mov
cmp
stc
lods
mov
push
notb
les
sbbl
mov
fsqrt
inc
xchg
popf
les
sarl
mov
mov
adc
pop
imul
nop
cmpsb
ss
push
cmp
mov
jb
inc
outsb
push
push
pop
push
and
repnz
adc
pop
shrl
xchg
mov
loope
and
daa
jl
lcall
adc
movb
sbb
mov
addb
pushf
or
or
mov
sbb
xchg
in
add
mov
dec
adc
pushf
clc
push
sub
ljmp
inc
clc
xor
fwait
mov
stos
in
in
repnz
lret
int3
jmp
cld
xlat
arpl
out
xchg
es
xchg
cmp
arpl
outsl
lret
jmp
xchg
stos
jl
shl
loopne
test
lods
lahf
aas
andb
ret
lea
jp
cmc
icebp
sbb
inc
insb
pop
xor
xor
dec
pop
mov
lret
push
add
iret
gs
popa
mov
inc
or
xor
in
in
adc
ret
and
jp
inc
or
dec
test
mov
inc
xchg
fstps
cmpsl
and
dec
mov
mov
mov
test
call
mov
pushl
sub
aas
xor
mov
dec
popa
mov
lcall
and
rol
xorl
aaa
orl
test
fs
cmp
inc
sbb
ret
pop
pop
add
push
inc
pop
icebp
mov
in
mov
std
in
je
push
cltd
cmpsl
sub
jae
lcall
mov
shlb
jge
and
cs
adc
cli
hlt
add
mov
faddl
adc
std
cwtl
adc
loope
add
mov
xchg
sbb
test
mov
adc
fwait
nop
dec
ret
mov
sahf
cmpsl
jbe
cmpsl
aam
jb
and
add
inc
xchg
call
out
repnz
mov
adc
sbb
inc
fsubrs
inc
xor
in
and
addr16
test
hlt
sbb
mov
in
stos
sub
adc
jmp
mov
dec
adc
pop
fcoms
pop
push
xchg
jno
enter
pusha
or
sbb
adc
push
xlat
xlat
jae
ljmp
enter
push
sbb
jge
cmp
sbbl
cltd
mov
mov
arpl
shrl
inc
cmp
mov
jo
popa
out
movb
pop
inc
push
addb
mov
test
dec
leave
shrb
mov
or
mov
sbb
adc
mov
prefetchwt1
adc
clc
cwtl
cmp
and
aas
imul
inc
test
mov
sbb
movsb
test
jne
add
test
int
call
popf
dec
xor
mov
cmp
add
sub
sub
jbe
test
cmc
outsl
das
rorb
mov
stc
lods
cwtl
cmpsl
mov
xchg
ja
mov
shr
dec
dec
mov
ret
lret
xor
in
in
imul
in
lcall
jb
and
or
jo
scas
insl
testb
addl
cmp
out
bound
xor
jle
sbb
ds
outsb
push
sub
mov
gs
lods
nop
aaa
mov
lahf
xchg
push
pop
inc
mov
nop
mov
stos
jne
sub
in
repnz
xorb
mov
mov
stc
daa
mov
xchg
inc
inc
xchg
push
aas
pop
sti
adc
cmp
inc
sbb
hlt
sti
rol
je
fldenv
add
xchg
push
cmp
dec
das
mov
mov
fyl2x
xchg
xor
sti
push
cmp
sbb
xlat
js
lret
jmp
push
sbb
mov
xor
js
dec
div
in
mov
and
xor
mov
out
lods
leave
push
dec
ja
leave
stc
es
je
ftst
hlt
push
outsl
mov
bound
sub
fistps
xor
push
lods
and
enter
mov
or
xchg
pop
xchg
cld
rclb
add
gs
dec
mov
mov
clc
mov
addb
icebp
jno
decb
sub
or
jecxz
lods
add
adcl
das
mov
pop
rorl
jb
mov
loope
std
adc
push
movsb
add
sbb
push
jo
mov
xlat
shlb
jb
jge
dec
and
ret
add
int
mov
js
scas
inc
jl
incb
dec
jne
jae
sbb
sarb
imul
sbb
add
mov
fimuls
lea
insl
xchg
inc
push
cmpsb
movsl
cli
test
shl
xor
cmpsl
insb
adc
xor
repnz
push
fbstp
push
and
or
dec
cmc
into
adc
cld
cmp
mov
enter
xor
xchg
jge
add
jno
inc
mov
fs
out
cmpsl
enter
xchg
xor
adc
movsl
icebp
xor
sbb
mov
test
shl
test
cmp
add
jge
jno
mov
mov
dec
push
sbb
dec
mov
scas
adc
adc
jecxz
mov
sbb
lea
pop
dec
xchg
xchg
cmp
and
push
aaa
incl
sbb
aad
xlat
xor
xchg
mov
sub
icebp
std
jno
icebp
cmp
aam
add
xlat
dec
dec
jecxz
mov
out
stc
sti
mov
sub
pop
daa
dec
xor
push
ss
fadd
mov
cltd
lret
repz
insb
int
movsb
movsl
stc
and
je
movsl
inc
mov
push
cs
jae
push
xchg
dec
outsb
mov
dec
sub
dec
jb
and
subps
push
xchg
or
not
sub
shll
fstps
rol
inc
rcrl
mov
ret
pushf
ret
pop
cwtl
iret
cmp
xor
jo
int
cs
xchg
jp
inc
dec
xchg
cld
sub
cld
es
inc
ficoml
add
push
leave
push
sbb
test
mov
xchg
call
pusha
mov
xchg
adc
out
jbe
inc
pushf
ss
cmpsl
fwait
xchg
adc
movq
fisttps
jae
pop
lds
push
mov
in
mov
cmp
sbb
pop
pop
push
cmp
xchg
mov
add
mov
sbb
jl
mov
shlb
xchg
rdtsc
cs
inc
xor
loope
mov
mov
add
pop
fucomip
testl
xor
push
push
mov
ss
cwtl
lea
xor
inc
mulb
sub
ja
ret
inc
or
addr16
rcl
sar
ds
push
pop
push
add
push
push
mov
inc
sti
cmpsl
inc
lcall
inc
and
mov
and
fbstp
inc
push
nop
cld
or
mov
popf
ja
int
fldcw
in
hlt
fistpl
btcl
roll
fcompl
dec
pop
movsl
mov
and
aam
dec
int
add
fcoml
lods
jle
pop
popf
sub
in
xchg
inc
mov
jge
xchg
pop
pop
ja
aam
fsubr
mov
mov
test
jp
dec
push
adc
loope
notl
mov
movsl
test
lret
clc
mov
cmp
aaa
jle
inc
mov
jl
daa
mov
pop
fdivrs
aaa
xor
out
ss
pusha
sub
mov
and
cmp
sahf
xor
push
cmp
movsb
xor
xchg
dec
mov
dec
popf
scas
pop
orb
push
cmpsb
lds
sbb
aad
mov
ljmp
sub
mov
loop
jnp
ret
mov
xor
gs
je
ret
lock
adc
mov
sbb
aam
mov
loop
pop
cld
xor
pop
addr16
cld
das
cltd
cwtl
cmp
or
push
xor
test
rol
test
push
mov
adc
pop
mov
push
sub
sub
mov
imul
nop
loopne
icebp
sahf
sbb
sub
lahf
xor
jl
inc
notl
out
adc
sbb
pop
xchg
cmp
mov
je
insl
inc
xchg
xchg
cltd
push
fimull
cmpsb
xor
pop
std
jb
mov
and
xchg
or
lds
cltd
insb
mov
mov
xchg
pop
sbb
mov
adc
bound
mov
ds
fs
sub
aaa
jnp
pop
pop
aam
push
scas
movb
ljmpw
push
mov
mov
cmp
xor
fidivs
push
jb
xchg
jmp
pop
sti
mov
add
jae
movsl
sbb
push
cltd
adc
sbb
daa
adc
sbb
dec
cmpsl
adc
andb
sahf
pop
add
cmp
repz
lods
jecxz
leave
movl
or
out
addr16
mov
mov
mov
subb
in
mov
enter
data16
inc
and
jle
cmp
jp
mov
imulb
call
int3
fsub
add
leave
xorl
cmp
popf
popa
xor
mov
repnz
loope
jne
sbb
add
bts
iret
sbb
incb
and
sub
or
scas
or
push
cmpsb
sbb
jb
mov
pop
jg
imul
xor
loope
fistl
or
out
aas
es
out
xlat
es
sbb
mov
jne
int
lahf
outsb
popf
lahf
std
mov
push
pop
repnz
add
ds
scas
mov
int3
popa
xchg
test
nop
movl
sub
in
aam
aam
loope
cmp
or
mov
adc
mov
in
push
std
sub
mov
dec
mov
or
fisubl
rcll
pop
push
xlat
hlt
jne
jmp
mov
mov
ds
push
jnp
push
jmp
sub
scas
mov
test
cmc
push
fimull
fcompl
xchg
mov
sub
daa
mov
pop
test
fldenv
pop
jecxz
sahf
fmuls
or
lret
std
addr16
mov
jl
adc
cmp
arpl
pop
stos
stc
xor
fsub
mov
pop
xchg
pop
pop
movsl
std
stos
fiadds
repz
out
aad
cltd
cmp
in
imul
inc
stos
push
sub
xor
es
sbb
xchg
mov
lahf
adc
testl
sbb
rorl
imul
push
iret
sbb
loopne
xchg
pusha
call
pop
adc
mov
xchg
adc
mov
insl
push
mov
dec
idivl
imul
cmp
in
sbb
adc
push
int3
mov
mov
sub
dec
cmp
arpl
mov
stos
sbb
fs
pop
push
cld
inc
cwtl
loopne
aam
jae
leave
xchg
cmp
xor
pop
ds
add
jo
shlb
pusha
xchg
fcmovnb
fwait
loopne
icebp
xchg
mov
push
loop
paddb
mov
fcomps
jno
jns
not
cltd
out
cmpsl
or
imul
jmp
insb
mov
das
loope
mov
dec
cmp
push
jge
subl
add
jl
add
push
outsl
test
ljmp
fstl
enter
jbe
outsl
jns
out
xchg
imul
cmc
cld
ret
mov
push
imul
fisttpll
stos
xor
cmp
pop
dec
mov
ss
inc
sbb
daa
fstl
cld
scas
or
xor
dec
push
aam
lods
popf
nop
mov
push
jle
or
dec
push
adc
jg
je
cmp
out
fsts
jo
or
cmp
mov
inc
mov
cmp
js
rcl
mov
mov
xor
and
in
aaa
xchg
rcrb
fcomps
adc
xor
pop
sbb
in
dec
stos
in
push
pop
cs
mov
xor
cmp
sbb
or
mov
jno
movsb
outsb
ds
lret
ds
sbb
or
clc
pusha
scas
push
sub
inc
jbe
push
jbe
ret
xor
hlt
xor
icebp
out
dec
dec
mov
mov
add
cld
sbb
add
mov
out
push
jecxz
insl
dec
cmpb
mov
jge
push
push
mov
lcall
or
js
shll
mov
jae
adc
xchg
call
adc
cmc
outsb
and
int
ljmp
hlt
xor
insl
jbe
fs
cmp
sti
jae
push
js
ret
pushf
fsts
cwtl
rorb
fwait
sbb
ficoms
jmp
mov
jecxz
mov
pop
imul
fmuls
xor
dec
sub
imul
inc
leave
ja
sub
testb
rcll
mov
inc
mov
fmull
and
sub
jb
call
pop
aam
imulb
lret
pop
cmpsb
stc
push
lret
or
xchg
std
data16
aad
fbld
idiv
insb
enter
mov
shll
lds
push
sti
adc
outsb
and
dec
pop
jnp
mov
mov
inc
mov
cmc
call
jg
mov
pop
int3
inc
pop
jno
xlat
fs
push
rcll
or
mov
cli
jmp
xchg
fcoml
mov
into
mov
inc
sub
ret
add
xchg
xchg
cmpsb
lock
repnz
inc
jns,pn
cmp
jo
xchg
pop
cwtl
dec
sbb
cwtl
mov
lcall
mulb
or
int
nop
jo
xor
aad
es
and
or
stc
mov
pop
movsb
sub
insb
lcall
pop
lahf
daa
jecxz
addr16
int3
sbb
icebp
popf
leave
imul
mov
fsubrs
lcall
mov
or
ret
xchg
outsb
rorl
cmp
fnsave
lods
idivl
mov
pop
jnp
ror
repnz
out
inc
bound
dec
mov
in
movsl
xor
xor
add
lcall
xchg
pop
mov
jbe
lods
jno
aas
out
lea
xchg
cmc
pop
ds
lcall
xchg
jmp
or
out
shr
add
push
inc
sbb
inc
lds
mov
popf
popa
dec
cmp
mov
mov
adc
mov
pusha
ffree
iret
cmp
push
or
inc
dec
jmp
outsl
mov
repz
imul
sub
sbb
jp
add
aas
add
jb
jge
lret
jns
pop
mov
or
insl
sarl
fwait
xor
je
cmp
mov
enter
mov
out
rcrb
lahf
mov
bound
aam
cmp
jmp
jb
adc
fnstcw
dec
lcall
jle
cmp
cwtl
push
sub
inc
imul
loope
xor
cmpsb
testb
push
stc
stc
pop
and
mov
mov
repz
push
and
insl
sbb
mov
and
ss
mov
fsub
stos
vmwrite
fsubrl
inc
scas
and
adc
xchg
push
pop
pop
popf
out
or
cmp
int
push
inc
xor
pop
pop
push
sub
adc
outsl
pop
push
test
ret
cmpsl
test
les
push
adc
inc
int
jb
pop
lret
rcrb
jbe
sarb
xchg
mov
dec
or
out
arpl
pop
push
push
lcall
mov
mov
xor
ret
popl
mov
dec
and
sbb
sbb
ljmp
cmc
dec
pop
xor
out
xor
das
xchg
int
lods
inc
inc
vgatherdps
mov
mov
icebp
in
pushf
js
or
push
pop
jns
icebp
cmp
cmpsl
add
xchg
mov
dec
sub
jns
adc
cmp
push
sub
sar
lods
jns
cmp
mov
sarb
jp
push
rol
sub
jbe
jae
test
mov
daa
jl
mov
jnp
xor
dec
xor
mov
rcl
sbb
ds
xchg
cmp
xchg
adcl
int3
inc
mov
out
pop
les
xor
loop
and
movsl
fnstcw
hlt
gs
or
shrl
mov
jmp
mov
dec
aam
inc
xor
out
cltd
popa
sbb
mov
cmc
stos
les
push
bound
pop
adc
scas
lcall
xchg
mov
mov
push
dec
fwait
xchg
mov
jno
inc
in
xor
sub
cld
jae
dec
lods
adc
and
loope
mov
mov
mov
nop
shlb
in
les
repnz
pop
cmpsl
mov
nop
xchg
outsl
fsubrp
xchg
aaa
scas
ss
push
xchg
inc
fisubl
insl
shrb
pusha
cmc
mov
sahf
jmp
aas
aas
push
shrl
mov
sub
adc
fdivr
pushl
aad
and
jbe
sbb
enter
shrb
imul
fsubrl
rorl
pushf
jbe
cmpl
and
sbb
pop
mov
adc
jp
pop
test
pop
movsb
mov
or
xor
inc
sbb
in
fcomp
mov
cmp
mov
scas
mov
pop
int3
mov
lret
loope
mov
dec
pop
jg
insl
pop
aam
mov
mov
and
push
subl
add
push
dec
shlb
cwtd
stos
movsb
test
push
fadd
jg
data16
divb
cmovnp
mov
sub
add
mov
bound
pop
insl
inc
xchg
icebp
vcvtsi2sdl
lods
push
mov
mov
cmp
jecxz
adc
test
mov
and
orl
out
push
cmpb
cmp
lahf
gs
mov
inc
pop
lods
sub
push
fisttpll
movsl
pop
ja
out
or
fs
xor
dec
imul
repz
shrl
repz
push
jge
mov
sbb
jg
sbb
sbb
nop
cmpsb
js
and
pushf
jge
insl
or
xlat
add
pop
rcr
out
negb
add
lahf
arpl
test
fiaddl
push
mov
shll
sti
jo
pusha
lea
pusha
or
xchg
cmp
fsubs
jmp
and
xchg
sbb
ds
cwtl
out
add
dec
sahf
ljmp
pop
or
push
test
jp
inc
pusha
or
sbbl
mov
movsb
and
js
lods
pop
cmp
insb
hlt
or
jl
jge
and
cmp
add
sbb
pop
or
mov
pop
mov
fwait
lcall
pop
aaa
adc
sub
aam
jns
mov
pusha
loope
js
adc
clc
inc
and
dec
test
cltd
mov
pushl
ja
mov
sub
push
add
pushf
xlat
cltd
sbb
cmp
pop
xchg
ret
dec
and
aad
int3
mov
scas
mov
xor
lret
jae
hlt
in
stos
lock
push
pop
sarb
leave
xchg
arpl
dec
inc
cmpsb
fcomps
cmp
outsb
cmp
movsb
dec
sbbl
inc
mov
rcl
and
xor
adc
xor
add
mov
push
mov
imul
das
pop
mov
pop
jmp
mov
loopne
sbb
adc
mov
push
mulb
test
popf
sub
push
scas
outsl
adc
xchg
les
inc
sbb
insl
mov
adc
jle
ds
mov
mov
xchg
test
dec
lock
leave
cmpsl
or
call
and
movsb
add
and
mov
and
push
mov
andl
xor
xlat
int3
push
xchg
mov
sbb
adc
cli
adc
push
push
nop
pop
xor
mov
pop
sti
loopne
ret
sarb
dec
xchg
or
push
aam
adc
fiaddl
lds
pop
inc
in
adc
mov
scas
bound
jo
sub
lods
inc
repz
add
mov
leave
and
and
adc
imulb
jb
pop
mov
psrlq
cmp
xchg
mov
loope
push
shrl
inc
xchg
mov
adc
jae
or
jg
insb
int
dec
mov
fstps
fists
jne
or
outsb
test
sarl
mov
add
pusha
sub
mov
aam
xchg
in
push
inc
adc
push
test
add
lret
jno
mov
mov
cli
insl
shrl
jle
xor
sub
call
jp
mov
orl
sub
push
mov
dec
mull
arpl
call
and
push
mov
cmpsl
pop
sahf
xchg
jne
dec
roll
imul
popf
sahf
ds
rcrl
mov
inc
int3
movsl
xchg
sbb
mov
cmp
cmpb
jp
xlat
add
pop
jg
enter
lea
inc
loope
add
push
orb
cmpsb
lcall
jno
sbb
or
add
jl
pop
test
adc
xchg
cltd
cmp
lahf
inc
pop
or
mov
jne
xor
cmc
leave
ja,pt
ret
mov
adc
test
popf
mov
into
je
xchg
int
movsb
mov
out
cltd
cmpsb
gs
out
jo
and
lret
or
cmp
jne
stos
or
jl
add
imul
xchg
test
jmp
mov
les
or
sbb
fsubs
pop
mov
mov
test
push
inc
in
push
movsl
movsl
fwait
jecxz
cmpsb
inc
rcl
mov
xor
adc
mov
push
push
mov
ljmp
inc
fs
sbb
fbld
xor
clc
fldl
inc
push
pop
xchg
add
inc
jl
js
push
rcrb
jl
sub
loope
add
mov
popf
out
xchg
xchg
jg
mov
mov
in
ljmp
test
mov
mov
stos
bound
rolb
sbb
stos
jno
cmp
cmp
jge
mov
adc
js
jns
ret
fnsave
lahf
jno
mov
dec
jecxz
mov
sahf
std
lds
jbe
lods
lea
mov
pop
ret
pop
rcl
inc
std
pop
add
mov
leave
in
or
sub
and
inc
out
mov
out
cld
aaa
enter
mov
dec
mov
sub
dec
subl
aaa
out
mov
out
cpuid
sbb
pop
nop
fstpl
lds
mov
jl
xchg
bound
fsubl
scas
dec
mov
fs
dec
pop
xorl
dec
adc
xchg
or
andb
pop
and
sbb
sti
mov
lar
int3
sub
push
xor
xchg
icebp
loopne
pushf
imul
pushf
ret
cli
dec
cmp
scas
jbe
outsb
pusha
aam
adc
cmp
popl
and
in
add
daa
in
inc
ja
adc
aas
daa
push
inc
adc
sub
scas
ss
mov
or
pop
mov
adc
push
test
push
sub
push
sti
push
daa
and
push
jecxz
repz
stos
test
movsl
mov
jl
in
sbb
sub
pop
in
inc
fwait
lea
dec
movb
jl
add
mov
bound
cmp
mov
sbb
loop
and
sub
pop
aaa
loope
int3
xchg
scas
fcoms
and
arpl
mov
jbe
push
enter
leave
fdiv
pop
nop
xchg
scas
movsl
add
jns
or
loop
jbe
cmpsb
enter
adc
out
inc
jmp
int
fidivs
fcom
scas
ss
or
in
pop
adc
leave
mov
std
jns
xlat
mov
or
and
cmp
push
mov
adc
or
lret
and
clc
stc
imul
call
fisubs
xchg
ret
sbb
xlat
push
nop
lods
leave
iret
call
mov
roll
add
sub
loope
loopne
in
add
xor
fisttpll
jmp
push
cmc
aaa
add
cmp
insl
cmc
dec
out
loop
xorb
push
jmp
dec
mov
cld
mov
adc
sahf
test
pop
imul
pop
pusha
xchg
sub
xchg
insl
push
call
adc
cmp
enter
push
repz
daa
pushf
mov
filds
xchg
jl
fldl
movsl
mov
cmc
lret
sbb
cmp
int3
lea
add
add
xchg
cmp
int3
jge
inc
push
imul
mov
jbe
mov
in
loope
pop
mov
push
and
add
xor
pop
pop
mov
sbb
add
test
outsb
adc
insb
xor
or
jb
jl
lds
xchg
or
cmp
xor
mov
xchg
stc
mov
push
push
xor
into
bound
mov
push
push
test
push
xorl
push
xor
sbbl
push
cwtl
shl
cmp
push
push
fdivrs
cwtl
imulb
adc
psubsb
enter
fmul
and
jle
jb
sub
jbe
dec
inc
push
in
cmc
and
mov
mov
outsl
sbbb
test
mov
in
outsb
les
dec
mov
repz
mov
aam
sahf
jb
jmp
call
and
sbb
cld
repz
inc
mov
je
push
bound
push
mov
mov
nop
rcr
pop
pop
bound
xchg
xchg
xchg
mov
xchg
pop
lds
movsb
cmpsb
and
mov
lock
fwait
pop
pushf
ss
insb
clc
rcl
mov
push
fildll
add
xchg
jbe
notb
and
jp
jnp
outsb
int3
xor
outsl
out
sub
add
fwait
cmpsb
sarl
pusha
jg
xchg
and
aaa
dec
push
cmp
cmpsl
adc
jmp
xor
jge
mov
add
xchg
loopne
ficoms
sahf
mov
cmpsb
mov
cmpsb
lods
mov
lods
dec
mov
sub
xchg
test
inc
mulb
nop
mov
mov
mov
xor
push
lahf
cli
adc
stc
mov
orb
clc
repz
and
into
push
lcall
and
push
dec
sub
inc
ret
fdivs
in
insb
inc
ljmp
mov
pop
ret
hlt
and
push
test
cmp
mov
xchg
pandn
mov
mov
add
xchg
adcl
adc
add
sub
cli
cmp
out
cmpsb
loopne
icebp
cli
hlt
in
xor
inc
dec
lods
sbb
ljmp
js
push
inc
arpl
add
pusha
and
adc
pop
stos
inc
pop
mov
fld
jnp
mov
test
jg
movsb
inc
jp
push
ret
insb
aam
inc
sbb
fnstsw
xor
ficoms
dec
out
pop
js
imul
inc
mov
sbb
movsb
es
jp
repnz
or
sti
out
outsb
popa
push
and
out
insb
mov
push
in
dec
sti
and
inc
adc
mov
mov
and
dec
pushf
in
cmp
leave
into
cmp
push
cmp
fiadds
mov
cmp
in
push
repz
repnz
and
and
jno
mov
pop
mov
lret
aad
pushf
xchg
iret
ss
in
push
pop
int
sub
popa
dec
mov
mov
inc
xchg
and
add
mov
xor
xor
cmp
out
in
jno
cli
jno
xor
sbb
jp
cmp
ret
movl
dec
in
notl
adc
imul
les
push
ds
lret
rcr
movntps
movsl
fmull
cmpsl
push
xchg
jno
clc
addr16
shlb
in
call
stos
pop
je
pop
outsb
shll
jge
ret
jbe
mov
inc
xor
push
cwtl
mov
pushf
mov
mov
adc
pop
push
pop
push
pop
xor
popa
mov
sbb
std
pop
or
mov
in
mov
test
or
cmp
adc
in
or
sti
xor
sub
xor
pop
and
incl
mov
push
sbbl
mov
sub
shr
test
fadd
icebp
rcrb
add
dec
jecxz
jp
shlb
ljmp
lret
sbb
jle
test
out
data16
orb
les
pusha
add
repnz
dec
jecxz
shlb
inc
arpl
mov
test
out
lods
leave
outsl
pop
adc
mov
popf
push
xor
ja
and
sub
inc
gs
lock
adc
sti
pop
or
inc
sbb
dec
in
push
out
push
lods
mov
push
stc
jo
leave
and
scas
aaa
aas
jmp
imulb
arpl
mov
mov
add
adcl
daa
xchg
adc
testl
cmp
jae
je
hlt
push
pop
mov
add
cli
or
loop
sub
mov
out
mov
fists
stc
add
xlat
jl
adc
fisubrl
inc
fcoml
jbe
cmpsb
dec
fnstsw
cli
sub
fisttps
push
outsb
jb
cmp
xchg
in
pop
je
es
loope
sbb
lods
inc
lret
fwait
add
cmpsl
xchg
sbb
dec
ljmp
sbb
mov
mov
bound
in
stc
fdivs
jl
incl
in
sti
xchg
int
inc
mov
inc
ret
int3
jb
and
and
mov
jne
xchg
pop
mov
iret
in
fstpl
jge
or
ret
sbbb
inc
dec
mov
lcall
ficomps
push
fsubr
ffreep
test
fs
roll
dec
xchg
addl
addr16
out
stc
shll
xor
xor
sbb
out
cmp
pop
leave
and
lea
scas
dec
ret
push
xor
and
cmp
testb
dec
lea
int3
sti
aam
push
cld
xchg
roll
scas
int
and
xchg
push
inc
arpl
mov
mov
mov
das
mov
cmp
inc
cwtl
int
mov
addb
int3
adc
das
pop
xchg
push
cmp
adc
adc
cmp
inc
mov
imull
cmpsl
cmp
push
lods
mov
sbb
loop
jne
cs
lods
mov
movsl
inc
jo
orl
jo
dec
test
push
jbe
adc
sub
mov
mov
loop
mov
shl
inc
xchg
imul
lods
cmp
or
lret
icebp
popa
pop
lret
push
cli
or
pop
cmpsb
pop
xchg
push
add
cmpsl
sub
jb
fs
insl
pxor
in
push
adc
sbb
enter
cwtl
mov
fmuls
insl
mov
mul
add
movsb
push
xchg
repnz
adc
or
sbb
add
in
or
and
jne
lea
jne
cwtl
mov
repz
mov
or
popa
xor
popf
ss
inc
pop
mov
mov
clc
jg
in
fwait
cld
nop
orl
mov
mov
add
lcall
xchg
push
call
mov
xor
sbb
mov
mov
inc
test
xchg
mov
aad
aad
test
jg
mov
sub
or
aaa
fdivrs
or
rcl
loope
dec
into
push
inc
outsl
mov
xor
jbe
dec
das
mull
jnp
jae
mov
test
movsl
and
int
or
xchg
les
mov
push
addr16
in
fisubl
push
cld
mov
jmp
mov
push
dec
adc
mov
sub
mov
scas
es
fstps
sbb
push
inc
imul
in
notb
shrl
pinsrw
pop
xchg
mov
fists
movsb
rcrb
mov
in
cld
sub
in
ljmp
pop
lcall
aas
aam
dec
pop
scas
out
test
sub
stos
mov
and
adc
adc
jnp
pop
cmp
xchg
fwait
mov
or
xchg
pop
mov
pop
dec
push
lret
mov
jecxz
inc
imulb
adc
add
out
push
fs
pop
cltd
outsb
jnp
call
aam
cli
mov
cmpb
mov
inc
jnp
and
sbb
dec
xor
jge
xchg
and
nop
cld
test
popa
cld
shlb
mov
inc
aam
pop
subl
xchg
outsb
addl
sbb
lcall
dec
mov
aam
pop
fldenv
xchg
xor
pop
and
jne
enter
jo
je
fucomi
shll
iret
inc
divb
sbb
xchg
jne
add
inc
mov
fstl
xor
je
fidivrl
aad
jg
sub
push
subb
mov
jo
or
cltd
or
xchg
pop
jge
sub
gs
inc
std
and
cmpsb
outsb
push
leave
inc
aad
pop
nop
xor
xor
cs
lods
mov
xor
jnp
lret
lahf
daa
pop
lock
push
dec
lret
sub
mov
out
pop
inc
and
sar
sbb
push
rorb
cwtl
xlat
xchg
test
pop
test
mov
ds
sti
je
loopne
xor
cmp
inc
andl
pop
sbb
pop
xchg
inc
inc
je
scas
sahf
mov
pop
out
mov
mov
mov
pop
or
pop
pop
add
imul
outsl
and
mov
ds
pop
cmpsb
xor
daa
sub
push
shl
enter
push
pop
cmp
test
mov
cwtl
xchg
cld
lock
gs
daa
test
cmc
add
call
inc
sub
repz
add
xchg
dec
xor
push
push
sub
mov
les
mov
fnstcw
jg
je
fistpll
outsb
mov
adcb
jl
xor
and
stos
insb
mov
imul
and
and
call
adc
pop
or
push
inc
rcrl
lret
push
jns
push
mov
mov
sub
sub
mov
rorl
mov
xchg
jmp
pop
leave
fstps
cmp
xchg
stos
cmp
das
data16
nop
sbb
out
jb
add
mov
stos
test
and
ja
movsb
fidivrl
inc
test
jp
scas
jg
pop
jl
xchg
xor
cli
dec
mov
fwait
insl
lcall
scas
aad
nop
pushf
or
int
aas
cs
add
xchg
fwait
mov
and
mov
push
ljmp
sbb
xchg
loopne
movsl
mov
cmp
stos
loopne
push
push
jg
xor
xor
or
mov
xchg
mov
add
int
mov
jae
sbb
insb
cld
xchg
rclb
jmp
je
xor
sub
lods
std
js
cmp
das
test
jmp
addl
imul
rcrl
or
push
outsb
mov
fidivrs
cmp
inc
adc
pop
xchg
xor
imul
push
jle
out
jg
test
fnstenv
imul
jno
jle
sub
cmpsb
and
add
and
jo
jnp
mov
add
jle
das
int
popa
lds
sbb
je
out
insb
sub
stc
xchg
call
adc
repz
stos
jg
mov
test
je
jae
cltd
push
sub
sti
cmp
adc
jle
jg
push
inc
adc
in
inc
ljmp
jmp
clc
dec
xchg
sub
call
lcall
mov
cmp
lock
inc
sub
xchg
popf
movsl
xor
iret
and
add
test
scas
mov
and
push
insl
cmp
lahf
scas
loope
mov
adc
or
incb
inc
repnz
cmpsl
push
inc
add
pop
xor
test
xor
push
call
subl
dec
cltd
xchg
jbe
ret
test
mov
and
push
cmpsb
arpl
lods
je
cld
pop
insb
push
dec
push
pop
lds
push
insb
jb
cmp
inc
in
xor
data16
lea
mov
xorb
jns
dec
push
jb
sahf
mov
test
call
inc
push
fsubrl
xchg
xor
fxam
test
mov
mov
ja
pushl
or
movsl
int3
mov
jns
aam
push
stos
inc
movsl
mov
lret
repz
jns
das
push
xchg
test
aad
in
mov
mov
scas
clc
mov
mov
lret
fs
mov
xor
sti
jb
pop
xchg
rol
lea
aad
hlt
das
or
dec
cmpsl
or
xchg
cld
shlb
pop
adc
pop
loopne
pushf
mov
adc
es
es
dec
mov
out
lock
fiadds
dec
mov
gs
insb
xor
add
out
pop
xchg
adc
aaa
testb
aas
ret
out
js
imul
push
xchg
adc
and
xor
ret
lret
subl
add
mov
add
cs
nop
lods
or
outsb
daa
push
jns
mov
std
movsb
pushf
pop
scas
pop
fildll
or
xchg
js
cmp
shrl
daa
test
mov
in
test
jp
icebp
enter
test
jle
lea
sub
jge
fbstp
cli
cmp
mov
pusha
jecxz
sub
loop
adc
mov
sbb
psubsb
or
int3
cmp
repz
jg
test
xchg
pop
xchg
out
lret
test
fcomip
gs
add
pop
dec
pushf
xor
push
mov
and
fisttpll
rcr
pop
cmpsl
jl
mov
cltd
sbb
mov
mov
subl
push
and
lahf
cmp
test
arpl
popf
sti
es
and
jno
mov
sbb
cwtl
cmp
fldl
movb
or
loope
jmp
dec
and
push
dec
call
pushf
dec
inc
lock
xchg
rcrb
imul
into
or
xor
add
dec
scas
xor
inc
jno
lcall
sub
fisubrs
and
xchg
xchg
fcoms
sbb
xchg
mov
repz
shl
dec
xchg
das
inc
pop
or
mov
lods
adc
pop
push
add
add
and
and
jbe
loope
pop
adc
pop
jp
out
movsb
adc
pop
pop
outsb
adc
test
fmuls
outsb
nop
add
testb
nop
inc
imul
pusha
dec
scas
fwait
iret
jecxz
xchg
imulb
cmp
ret
pop
mov
xchg
xchg
gs
sub
jns
jns
popa
and
cld
in
ja
arpl
push
or
sub
push
insb
lcall
scas
popa
pop
ficoms
int3
mov
mov
out
test
ret
cltd
hlt
xchg
movsl
xor
icebp
in
sahf
add
aas
aad
sub
std
fcmovu
std
sub
out
ss
call
pop
test
int3
lds
cmpsl
in
sub
sub
jmp
pop
imul
pushl
ds
or
push
jne
jo
push
ret
sub
adc
imul
inc
cmpsb
mov
jbe
sti
shl
pusha
or
cltd
fadds
inc
ret
mov
into
out
jae
or
xchg
daa
adc
and
inc
aas
push
push
mov
sub
dec
dec
sahf
xor
add
ljmp
imul
adc
popa
sbb
adc
sbb
add
test
mov
add
ror
jl
xchg
pusha
mov
push
xchg
jnp
mov
pop
mov
aas
aad
jge
or
icebp
pop
pop
lock
jge
xchg
mov
aam
or
loop
and
jbe
call
das
stos
or
mov
inc
in
aam
scas
cwtl
mov
cmp
jg
es
sbb
xchg
loope
jae
cmp
sub
sti
dec
scas
nop
sub
xchg
decl
pop
adc
imul
lods
cli
mov
jo
insb
and
arpl
mov
cmp
cmc
push
mov
jg
inc
pop
push
mov
out
out
xchg
insb
subl
sub
jb
lds
jb
sub
in
pop
test
jns
and
mov
cs
dec
xor
xchg
call
jg
cs
sbb
sbb
enter
test
fwait
mov
dec
lahf
lret
pop
push
dec
iret
or
popa
movsl
sub
mov
fists
cmp
cmp
mov
pop
cltd
fadd
test
mov
mov
inc
clc
and
int
jnp
insb
pop
jb
lods
sub
sti
leave
xchg
xchg
mov
pop
frstor
sub
das
call
and
adc
sub
lahf
mov
sbb
data16
pop
out
xor
xor
pop
gs
cmp
adc
popa
xor
cmpsb
adc
jge
out
pop
xor
js
mov
movsb
mov
pop
add
decl
pop
and
jo
mov
mov
mov
mov
jp
lds
aad
ret
scas
mov
in
push
es
sub
sub
gs
mov
cld
out
je
mov
outsl
out
pop
add
mov
and
mov
sahf
enter
sarl
xor
or
push
lock
rclb
cmc
enter
aad
push
iret
insl
cmpsb
ljmp
mov
notl
std
movsb
cmp
jl
arpl
pop
fisubrl
jno
sbb
lock
and
int3
out
lods
xor
dec
in
mov
mov
adc
ret
int3
jnp
mov
repnz
mov
sbb
sub
mov
iret
cltd
jmp
sti
mov
lods
aam
push
push
mov
lcall
mov
repz
push
jbe
xchg
daa
dec
mov
cmp
xor
xor
mov
icebp
inc
xor
lret
out
dec
ret
xchg
add
sbb
xor
add
rclb
pop
cs
js
fbld
jb
or
sub
jge
imul
adc
out
loope
push
ret
add
sbb
test
add
enter
cmpsl
mov
jge
popf
in
pop
adc
xor
jnp
ret
mov
adc
cmp
int3
in
mov
pop
mov
test
jp
adc
jl
popa
test
ss
or
or
mov
jae
mov
ja
nop
nop
xor
loop
lcall
mov
loope
mov
dec
pop
jmp
add
leave
adc
cli
pop
xchg
les
jb
aad
daa
add
adc
inc
xchg
inc
jne
xchg
ljmp
cmpsl
faddp
jl
repz
lret
pop
movb
and
ja
jg
sub
lahf
data16
and
cld
xor
nop
dec
fimuls
cmpsl
movsb
jmp
int3
inc
pop
and
dec
insl
lods
clc
xor
gs
lcall
das
add
scas
xorb
jle
pop
sahf
sub
jp
push
jp
push
cwtl
cwtl
push
jne
ljmp
mov
movsl
mov
mov
adc
andl
xchg
dec
popf
pop
sub
cld
push
mov
mov
test
jecxz
ljmp
mov
inc
push
movsl
dec
xorb
add
inc
dec
in
nop
inc
std
mov
push
xlat
push
stos
xchg
ljmp
stos
scas
sub
sbb
push
xchg
daa
shll
das
nop
insl
sub
mov
add
cmp
imul
pop
add
or
or
jnp
jg,pn
sbb
test
lds
sbb
call
arpl
xchg
aas
mov
jmp
mov
les
adc
cmpsb
cmp
cmp
inc
mov
sub
std
shlb
xlat
mov
mov
sub
mov
das
iret
sub
fistpl
andl
xor
xchg
xchg
mov
sub
cs
in
lock
push
mov
fcoms
mov
or
mov
ret
sub
stos
cmc
cmpsb
mov
mov
or
adc
cli
aas
add
xlat
cmp
cmp
insl
mov
stc
adc
loop
cmpsl
push
lret
push
aad
mov
inc
nop
adc
push
aad
insl
scas
dec
add
mov
cmp
add
popa
pop
push
pop
mov
jecxz
mov
and
mov
push
jae
fsubrp
je
push
sub
adc
mov
dec
int3
xchg
sti
out
add
and
loop
sbbb
sub
push
lcall
stc
dec
mov
dec
nop
jo
jo
rol
stc
fnstsw
gs
mov
add
leave
stos
ss
push
test
call
xchg
popa
lods
xchg
xchg
es
inc
dec
je
pop
xor
cmp
xor
dec
lret
aam
lods
add
xor
fwait
push
xchg
mov
test
cmp
out
mov
in
and
repz
popa
sbb
outsl
loopne
insl
push
sub
lret
adc
or
sub
mov
fsub
call
movsl
push
or
mov
and
jno
mov
js
inc
ret
dec
jle
fwait
aad
push
nop
adc
and
mov
lret
cmp
xchg
xor
xor
cli
push
sbb
movsb
clc
lods
sbb
mov
xchg
dec
div
mov
adc
inc
lcall
in
inc
push
xor
adc
dec
repz
cmpsb
mov
in
fistps
xor
stos
scas
mov
sbb
mov
inc
cli
jne
adc
push
lea
into
popa
xchg
mov
fidivs
js
in
cld
cmp
inc
aad
insl
imul
lods
test
ja
mov
jo
mov
lret
notb
add
scas
out
pushf
cmp
leave
inc
stc
inc
and
adc
rclb
lock
mov
lods
les
inc
jge
inc
inc
pushf
add
pop
loop
mov
std
insb
push
xchg
lret
cltd
shl
std
xchg
xchg
ja
jnp
ds
lcall
idivb
cltd
dec
sahf
inc
stos
inc
mov
movsb
adc
inc
xor
test
outsl
int
insb
xchg
mov
lea
stc
imul
lret
mov
cmpsl
pop
fcoms
jne
movsl
adcb
loopne
std
cmp
enter
jp
shl
xchg
movzwl
fs
ljmp
lcall
nop
cs
cmp
loopne
div
repz
or
fnstsw
cmp
jg
xchg
xchg
dec
clc
jns
jl
arpl
daa
lret
fiadds
call
adc
or
lcall
add
inc
sahf
and
fstl
cltd
jno
jo
mov
in
push
mov
jne
xor
pop
addr16
hlt
stos
aaa
call
xor
xor
push
mov
jb
mov
cwtl
aaa
ds
in
sarl
xor
mov
mull
mov
xor
cmp
adc
xor
pop
sbb
mov
add
dec
into
in
mov
popf
stos
xor
sbb
cli
xor
idivb
pushl
adc
inc
adc
dec
sbb
xor
inc
popa
mov
das
ficoml
imulb
iret
add
dec
mov
mov
push
push
in
retw
hlt
add
outsl
int3
mov
xchg
sbb
popf
jns
shl
jno
call
inc
and
icebp
push
or
xor
ds
add
mov
ljmp
mov
mov
mov
push
push
mov
andb
hlt
movsb
adc
bound
movsl
jmp
test
rcll
fmull
xor
sarl
cltd
pop
xorl
lret
add
scas
sub
scas
out
call
jnp
test
mov
add
xor
push
lcall
outsl
or
pop
roll
rorl
stos
popa
or
xor
insl
outsb
dec
jo
cmp
sub
sub
inc
dec
adc
shr
ss
std
mov
dec
inc
mov
stos
in
arpl
push
int
out
jo
test
inc
scas
xor
mov
mov
inc
out
mov
movsl
jb
fs
scas
adc
ja
sbb
arpl
hlt
lods
lahf
in
pop
into
test
scas
mov
nop
mov
jge
add
popa
cmp
rcrb
inc
mov
mov
andb
and
mov
addr16
pop
mov
movsb
mov
stc
xor
xor
cwtl
sbb
scas
pop
push
mov
sbb
loope
adc
add
in
sbb
popa
in
and
mov
add
adc
adc
sarb
lcall
or
aas
jecxz
mov
popa
mov
mov
iret
ss
mov
cld
push
mulb
dec
or
ds
push
aas
in
lahf
jno
xor
xor
push
lcall
jecxz
sub
pushf
sub
sahf
cld
pushf
cmpsb
or
inc
out
dec
xor
rol
ds
in
jo
mov
inc
out
sarb
dec
mov
push
or
gs
bound
fisubl
dec
mov
je
pushf
in
push
ret
xor
cmpsb
adc
inc
mov
jnp
mov
sbb
negl
sub
mov
out
sub
push
leave
insl
inc
lods
xchg
sbb
sub
sbb
cmp
fiaddl
adc
pop
mov
add
sub
into
lods
daa
fistpl
cmp
out
xchg
mov
fnstcw
or
imul
insl
and
mov
repnz
jg
leave
mov
cmc
std
aam
add
into
stos
jns
leave
clc
es
add
sbbb
leave
test
cs
inc
dec
jns
and
lea
ret
movsb
movsb
outsl
sub
les
lods
push
shrl
bound
repnz
inc
in
or
repz
shll
jecxz
faddp
bound
adc
jmp
lret
fwait
scas
xchg
push
imul
pushf
or
cmp
adc
sub
mov
enter
pop
push
cwtl
jp
outsl
pushf
mov
mov
dec
jge
or
jge
repnz
mov
cmp
adc
stos
and
fdivl
inc
cld
cltd
ss
das
iret
push
jge
inc
test
std
pop
fbstp
ja
xchg
mov
add
notl
jl
or
rorl
iret
mov
insb
ret
dec
scas
pop
bsr
jmp
negl
dec
or
mov
out
inc
stc
pop
xchg
sub
add
mov
cmp
stos
or
sub
jnp
ret
jno
mov
push
mov
iret
enter
rol
test
inc
test
xchg
mov
mov
faddl
ret
pop
push
mov
divl
xchg
mov
xchg
mov
movsl
xchg
or
add
fstl
cmpsb
loope
fidivl
and
bound
shlb
and
xchg
dec
lret
inc
fsubl
out
lods
jge
mov
je
inc
ret
jae
jo
dec
mov
in
jl
add
mov
aam
popf
sub
icebp
loop
pop
mov
xorb
sbb
ret
xchg
in
out
stos
iret
sbb
or
jo
fsts
mov
mov
mov
fidivs
inc
xchg
cmp
cli
in
ljmp
lock
cmpsb
into
fistpll
leave
jecxz
pusha
lock
movsb
sbb
test
fnstenv
cs
inc
or
in
pop
jns
lods
ljmp
imul
jecxz
or
lods
mov
xor
cmpsb
pop
dec
dec
sbb
rcl
icebp
sbb
jge
outsl
lock
push
shlb
out
and
push
adc
or
xor
int3
inc
adc
sbb
cmpsl
fwait
dec
loope
leave
out
rorb
sub
inc
pop
sub
inc
mov
cld
and
aam
js
mov
stos
in
pop
mov
push
mov
iret
mov
mov
pop
mov
mov
jl
xor
js
rolb
movsl
jb
adc
mov
ret
mov
pop
bound
repnz
push
jp
xor
add
mov
into
sub
add
ja
jl
and
xor
jecxz
imul
ret
pop
mov
xor
je
pop
lahf
pop
jmp
mov
xor
shll
jb
jecxz
xor
add
and
sbb
sub
push
mov
cmc
push
jge
je
push
sahf
xor
clc
sbb
xchg
pop
mov
iret
std
frstor
int
and
clc
out
aad
sub
neg
pushf
adc
outsl
out
cmp
cmpl
inc
stos
les
mov
popf
outsb
fnsave
loop
adc
pop
mov
rol
mov
cmp
push
inc
xchg
cli
ret
cmc
scas
push
inc
lret
add
lret
inc
cmpsb
repz
lret
mov
aam
mov
dec
jnp
ret
imul
hlt
fstpl
imul
jnp
decl
bound
pusha
and
adc
xor
mulb
jmp
imul
les
fwait
or
push
int
xor
ss
sub
push
or
std
fdivs
or
mov
pop
int3
fisubl
test
and
repnz
cli
or
insl
xlat
jne
ror
jle
xor
jnp
adc
scas
stc
ss
arpl
pop
cmp
ss
dec
cmpsl
dec
xchg
repnz
xor
pop
mov
jle
repz
popf
lock
negb
pusha
inc
add
dec
and
pop
insb
mov
push
fisubs
mov
push
aad
repz
scas
bound
add
dec
repnz
mov
in
divl
rcrl
jnp
je
jp
dec
inc
mov
loopne
xchg
or
test
pop
test
or
outsl
add
mov
shll
xlat
mov
push
push
dec
mov
inc
adc
movsb
adc
mov
and
add
mov
in
in
subb
dec
cmp
ljmp
sub
in
jno
push
aas
loope
add
out
hlt
cltd
ret
mov
ret
mov
sbb
jbe
or
div
outsl
in
adc
enter
cmpb
fs
enter
sub
xor
into
or
scas
xor
dec
mov
xor
jp
pop
fidivrl
lcall
repz
ljmp
stos
insb
cmp
jbe
ss
add
push
pop
xlat
pop
daa
xchg
outsl
adc
inc
push
rolb
iret
ret
repnz
pop
ret
mov
mov
sbb
orl
xchg
lods
fdivrs
pop
repnz
cmp
incb
inc
mov
out
and
fbld
pop
stos
push
dec
leave
xchg
movsb
mov
xchg
push
add
decl
adc
or
fistps
add
bound
std
cltd
repnz
or
popa
jo
dec
sub
test
xlat
fld
sub
mov
fistps
adc
mov
adc
jb
divl
inc
jle
lcall
xor
dec
or
test
fs
js
pushf
xchg
repz
bound
or
jae
xor
add
push
fwait
cmp
jae
ss
sbbl
addr16
adc
dec
jne
adc
lahf
not
aaa
xor
and
leave
xor
addr16
rol
out
and
inc
mov
shlb
pop
sbb
bound
fbld
pushf
insl
fcmovbe
dec
sti
outsl
sub
inc
ljmp
mov
xor
adc
mov
hlt
jnp
sbb
int3
jecxz
scas
sub
pop
mov
repz
notb
or
ds
outsb
pop
inc
cltd
fs
lods
faddl
or
mov
subb
cmpb
scas
mov
js
or
orb
sub
sar
sub
inc
iret
fadd
cmp
pop
xchg
add
inc
push
cwtl
xchg
push
mov
push
shlb
mov
mov
push
pop
jmp
pop
pop
lret
roll
jmp
sbbl
push
dec
mov
pop
mov
in
pop
cmp
xor
inc
xchg
cmp
mov
xor
sub
jmp
gs
insl
pop
sbb
jmp
fwait
xor
jns
inc
adc
je
jbe
arpl
in
jle
jge
int
cmp
pusha
dec
jg
popa
jmp
sbb
ret
jle
in
push
push
jo
decl
mul
mov
lahf
inc
dec
les
imul
movb
mov
cmp
scas
in
push
leave
mov
add
sahf
popa
xor
gs
mov
mov
lods
cmpb
pop
jae
dec
pop
ror
adc
mov
fs
pushf
jg
test
daa
aas
xchg
xchg
inc
aad
cmp
data16
ret
in
mov
ficompl
imul
mov
out
push
in
jl
in
addr16
aaa
xor
xchg
jge
negb
mov
cmp
fwait
adc
adc
aad
aad
dec
fnsave
cltd
in
outsb
sbb
cmp
fwait
mulb
inc
mov
stos
cmp
mov
and
mov
and
dec
stos
and
and
enter
add
addr16
popa
cmp
popf
outsb
sub
inc
idiv
pop
lcall
adc
push
fcomip
pop
fidivrs
mov
and
push
jno
js
inc
into
xor
cmp
jp
mov
sub
push
nop
push
mov
test
add
xor
xor
jo
into
test
fstps
mull
nop
js
inc
jl
xor
xchg
fiadds
push
fildl
loopne
or
ret
loope
stos
xchg
lds
into
filds
mov
and
dec
test
stos
scas
jns
cmp
and
jge
inc
iret
push
addr16
xchg
jmp
pop
xchg
add
sub
mov
into
add
repnz
jle
pop
sub
hlt
mov
in
or
mov
leave
mov
inc
sub
mov
shlb
xchg
icebp
daa
jbe
jo
imul
or
int3
fstpt
je
bound
mov
push
jnp
inc
popa
dec
rcrb
jnp
pop
ror
lock
push
mov
mov
hlt
lods
cmc
mov
jge
inc
lods
push
stos
roll
add
dec
aam
dec
ds
sbb
das
cmp
pop
popf
or
lret
stos
xchg
out
jnp
outsb
xlat
jno
scas
mov
or
mov
adc
test
push
movsl
mov
popa
mov
sub
into
cmpl
test
xchg
and
xchg
aas
clc
dec
pop
add
sub
in
loope
cwtl
es
das
fcmovu
imul
jmp
movsl
lcall
mov
scas
mov
cmp
and
jge
mov
das
xor
sbb
jbe
lahf
adc
sbb
pop
out
inc
jns
xchg
mov
and
and
test
push
leave
add
jbe
adc
clc
test
mov
scas
dec
fwait
xchg
sahf
enter
jbe
xchg
push
loopne
cmp
inc
fists
mov
add
sbb
pop
mov
insl
mov
sti
mov
pop
loopne
mov
inc
mov
jg
jl
pop
mov
mov
and
add
rorb
xchg
leave
out
repz
sbb
rcrl
std
cmp
in
fxch
cmp
add
cmp
add
and
xchg
inc
test
cmp
lcall
loope
add
lahf
mov
jl
sbb
jnp
add
lahf
test
into
lods
inc
dec
stc
iret
scas
push
mov
inc
jo
and
lahf
or
fs
mov
push
push
push
icebp
add
ret
pusha
mov
or
in
popa
jmpw
mov
dec
loopne
addb
add
cwtl
push
loop
pop
shll
xchg
out
mov
icebp
clc
add
sub
iret
loop
arpl
push
scas
jne
jmp
dec
sub
mov
call
sbb
sbb
or
test
out
pusha
add
sahf
push
xor
sbb
sub
or
cmp
mov
push
inc
cmp
and
xor
mov
sbb
sar
dec
pushf
sti
mov
into
test
out
mov
pop
mov
sub
mov
out
mov
vmovupd
ret
inc
aam
lcall
and
ljmp
decl
sahf
xor
out
or
sbb
sbb
xor
mov
cmp
loopne
fsubl
idivl
roll
lea
pop
outsb
and
in
xor
inc
jbe
leave
testb
mov
cmc
out
movl
sbb
leave
movsb
xor
cmp
xor
sbb
mov
rolb
inc
testb
mov
push
fwait
dec
adc
add
mov
stos
mov
test
push
lock
stos
into
sbb
hlt
mov
in
movsb
xchg
loop
in
and
arpl
jbe
pop
pop
sub
andb
fnsave
adc
out
imul
mov
daa
lret
imul
shll
push
adcl
jnp
mov
xor
fisttps
aas
jl
sub
push
clc
rorb
and
std
xor
data16
and
jb
pop
in
test
cwtl
movsl
add
mov
loop
mov
loop
aam
shrl
bound
xchg
xor
mov
dec
xor
inc
cltd
push
push
movsl
lcall
pushf
aam
cli
push
push
cmp
xchg
xchg
hlt
pop
lcall
ret
dec
hlt
mov
mov
pusha
call
js
aas
sbb
addl
insb
test
fadd
cmp
jge
les
sub
add
adcl
or
and
test
shll
and
lds
inc
pop
sbb
xor
jnp
dec
mov
hlt
fldpi
cmp
push
js
loop
cwtl
in
es
nop
daa
daa
jns
aas
mov
dec
sahf
sub
cld
jmp
bound
pop
jae
outsl
push
pop
jmp
sbb
mov
or
and
nopl
clc
jae
ss
mov
jle
mov
in
inc
pop
fsubl
add
popa
xchg
xchg
sbb
mov
dec
push
mov
loope
scas
mov
shl
cld
lock
xor
xchg
popa
pop
enter
rcr
cmp
fs
xor
lods
xor
xchg
mov
sar
ret
or
int3
lods
jmp
adc
mov
mov
leave
sbb
scas
pop
pop
sti
jne
fstpt
push
pop
mov
dec
add
dec
add
jae
fidivs
pusha
cltd
jmp
stos
pop
lods
xchg
dec
stos
sbb
push
in
sub
cltd
dec
and
nop
jae
adc
rcl
mov
int
cmc
or
dec
xchg
and
mov
dec
sub
and
push
add
xchg
and
mov
sub
mov
inc
stc
scas
jp
mov
pushf
in
xchg
mov
shr
adc
ljmp
popf
xlat
dec
fsubrs
mov
jge
mov
pop
lds
mov
mov
daa
lea
hlt
xor
mov
fiadds
xor
insl
xchg
in
jno
insb
cmp
mov
xchg
and
jnp
add
mov
sub
and
xor
jbe
stos
xor
scas
jg
out
insb
dec
pop
cwtl
inc
lods
xchg
add
scas
popa
out
jo
rcrb
in
sub
repnz
and
cmpsb
pop
rol
cmpsl
xor
inc
adc
pusha
fs
jl
dec
push
sbb
add
push
pop
xchg
mov
dec
cmp
xchg
mov
imul
into
push
mov
test
das
adcb
xor
push
cltd
xchg
xor
pop
add
aam
add
and
mov
sub
pushf
mov
and
movsb
mov
cmp
loopne
cmp
sbb
jne
fistpl
xchg
inc
mov
cmp
in
cmp
testb
xor
lcall
add
pushf
add
adc
popf
js
in
xor
xor
inc
fldpi
js
pop
addl
repnz
sbb
mov
push
mov
mov
lods
shlb
test
sbb
jb
shlb
xrelease
ficompl
in
dec
cmp
mov
pop
sahf
add
out
test
call
mov
and
xchg
dec
andb
jg
and
ss
adc
divb
cmp
ljmp
fsts
jno
or
dec
js
aam
gs
xor
stos
dec
fadds
mov
sti
mov
dec
cmp
popa
push
je
mov
and
ss
add
nop
or
aam
add
sbb
mov
sub
sub
fwait
push
insb
pop
cli
es
jmp
incl
pop
leave
test
inc
jmp
les
movsl
aad
cmp
icebp
push
dec
std
adc
adc
ret
xor
imul
mov
arpl
jns
xlat
pop
cmpsl
out
xorl
mov
mov
mov
dec
scas
mov
sbb
repnz
sbb
or
lret
outsb
cmp
xorb
fmulp
filds
dec
scas
scas
mov
lods
or
es
add
mov
add
cmp
push
into
test
pusha
movsb
add
mov
cmp
jge
cmpb
jp
dec
aas
pop
test
sbb
dec
cmp
gs
add
inc
or
mov
daa
adc
inc
test
xor
jne
lods
jbe
nop
jp
fnstenv
sbb
mov
mov
push
aam
jae
out
mov
push
add
insl
pusha
adcb
aaa
sbbl
xor
loopne
or
out
sub
adc
lea
pusha
enter
xor
mov
fldl
not
sti
cmp
test
inc
daa
loop
lahf
xchg
sbb
insl
cli
movsb
lret
lods
test
sarl
ret
out
or
xor
mov
imul
dec
stc
and
ljmp
mov
and
enter
fisubrl
orl
jo
xchg
add
mov
stos
es
repz
lods
and
cmpsb
rorb
sbb
or
je
vpaddsb
dec
pop
andb
cmp
sahf
push
pop
lock
test
xchg
testl
pop
mov
loopne
clc
scas
incb
sub
cli
and
sub
dec
inc
lahf
push
push
pop
sbb
imul
in
jae
rclb
push
mov
jbe
outsl
xor
dec
dec
stos
pop
xor
mov
mov
mov
loopne
sub
push
scas
test
mov
sbb
xchg
imulb
into
push
jmp
add
sbbl
cmp
push
addr16
data16
hlt
push
xchg
inc
pop
ljmp
mov
sub
inc
xlat
sub
jnp
cmpsb
mov
sti
in
sbb
xchg
repz
or
sub
out
movsl
and
adc
fxch
rcrb
pop
test
xchg
sub
std
insl
ret
pushf
sbb
movsb
stc
pop
inc
inc
mov
lcall
jne
inc
jecxz
push
mov
and
push
lds
xchg
nop
sub
push
cmp
inc
insl
ja
test
stos
int3
pop
jecxz
dec
xchg
cmovle
repnz
ja
sub
cmp
push
or
stos
push
sbb
xor
add
inc
push
imul
mov
daa
lds
mov
xor
cs
insl
daa
inc
cmp
pop
sbb
sbb
aas
lret
push
jae
jnp
pop
bound
adc
rolb
fbld
mov
xor
in
jl
ja
mov
popa
sub
fcomps
inc
xor
mov
jge
roll
bound
cmpps
and
repz
cmp
lret
xchg
pop
std
mov
xchg
xchg
imul
sarb
add
and
cmpsl
lds
je
adc
fidivrl
pop
mov
and
jmp
mov
sahf
test
xorl
jns
push
add
dec
dec
mov
dec
inc
shrl
sub
leave
push
push
jb
es
xor
sub
adc
icebp
sbb
add
inc
loope
xor
mov
pop
xor
jecxz
cmpsb
pop
aam
rcl
das
aam
mov
dec
inc
mov
adcb
pop
aas
or
sbb
dec
in
out
imul
mov
sub
gs
jge
and
sbb
mov
xor
or
dec
mov
enter
mov
iret
fcoml
inc
icebp
push
sub
xchg
jle
mov
je
and
ss
xchg
sub
mov
xchg
adc
lods
fcompl
jnp
cmp
sub
sub
cwtl
xor
pop
and
or
insl
cmpsl
fdivrl
movsb
ja
xor
movsl
sbb
mov
lea
not
test
lret
mov
icebp
cs
adc
jnp
hlt
and
stos
pop
inc
out
or
lret
loop
std
dec
fcompl
loop
fwait
cmp
inc
adc
xor
jne
lahf
daa
sahf
xchg
sub
les
jp
out
add
xchg
mov
rcll
cld
shrl
jl
int3
mov
rep
lds
add
dec
push
xor
cli
pushaw
into
scas
bts
mov
dec
push
cmc
sbb
jne
or
ret
imul
or
xor
into
negl
fwait
stos
test
mov
test
mov
scas
lcall
rcrl
mov
negb
inc
popa
pop
das
mov
hlt
jp
nop
add
call
sti
loop
arpl
cmc
adc
movb
mov
push
loopne
adc
inc
std
sbb
push
add
int
add
or
mov
pop
mov
ljmp
sarl
cmp
and
cmp
and
sub
xchg
push
outsl
ret
sbb
stos
scas
lds
inc
icebp
push
ficomps
aad
and
arpl
cs
mov
xchg
mov
sti
and
mov
push
pop
stc
in
pop
inc
xchg
pop
lahf
loope
fnstsw
pop
out
xlat
adcb
movsl
or
mov
inc
dec
push
imul
insb
push
add
roll
in
rorl
xor
hlt
data16
jne
pushf
mov
push
ret
and
jb
lds
dec
jmp
xchg
fildll
dec
lock
jnp
in
push
popf
jno
xchg
jbe
test
pop
xlat
lret
or
pop
jle
xchg
inc
and
fcoms
inc
test
mov
lods
jle
push
cmp
add
xchg
dec
and
sbb
push
push
push
xor
cmpb
iret
xchg
jns
dec
test
mov
cli
xchg
ficomps
loope
pop
xchg
dec
dec
fcomi
dec
shlb
jno
pop
loopne
xor
test
sub
jnp
mov
xchg
idivl
pushf
push
pop
loope
inc
inc
mov
adc
leave
add
testb
movsl
movb
add
popa
dec
je
negb
clc
mov
inc
bound
dec
cmpsl
mov
jecxz
sub
push
push
and
ret
mov
mov
lods
mov
lds
arpl
cmp
xchg
mov
cmc
cltd
lcall
out
mov
lock
shll
out
lcall
jp
enter
push
test
mov
shll
mov
pop
test
cmpsb
aas
cmp
cld
jo
lds
mov
push
out
icebp
in
push
int3
pop
int
pop
pop
inc
push
sbb
out
mov
je
je
inc
shl
popf
pop
ret
push
or
stc
mov
sub
xlat
ret
repnz
push
sbb
sub
xchg
cmc
dec
std
cmc
adc
sar
cmpsl
leave
or
inc
sub
cmc
les
sub
jae
mov
inc
xlat
jb
jecxz
out
adc
cmp
inc
sti
das
mov
stos
mov
push
rclb
inc
insl
cld
mov
lret
loope
mov
mov
adc
pop
mov
sub
push
jl
or
out
jo
shll
or
mov
les
popf
mov
pop
sub
pop
push
or
cmp
mov
mov
iret
stos
mov
or
jge
dec
popa
mov
and
cmp
js
sbb
lea
call
jns
imul
adc
xchg
fpatan
scas
ja
aaa
cmpsb
push
mov
cmp
and
push
or
mov
clc
jne
xchg
incb
leave
jmp
movsb
adc
jp
jns
dec
add
dec
rcrl
and
int3
aam
jb
xchg
pop
call
cmp
adc
push
in
pusha
push
lock
cmp
push
dec
mov
inc
push
rcrb
icebp
rclb
outsb
add
inc
or
sbb
test
mov
xorl
mov
ret
adc
pop
scas
call
mov
xor
addb
mov
cli
rcl
popf
nop
dec
jno
jmp
mov
dec
addr16
insb
mov
jo
aaa
push
or
jp
addr16
cli
xchg
sbb
leave
inc
pop
push
jne
cltd
loopne
mov
jmp
mov
outsl
cmp
dec
dec
loop
fdivrs
and
fs
mov
adcb
cmp
dec
rorb
popa
mov
jge
fisubrs
xbegin
in
fcoms
cwtl
lea
lock
add
sahf
pop
lea
loopne
aam
aaa
inc
pop
test
inc
popa
jg
cmpsl
rcl
push
outsl
in
sbb
ds
inc
sub
in
ret
outsb
stc
cmp
decb
fbstp
sbb
add
rorl
sub
push
xor
ja
rcl
cmp
and
ss
fisttps
pop
mov
fmull
or
jno
push
and
repz
jl
push
sbb
cmp
scas
movsl
pop
daa
into
aam
cld
push
fmuls
mov
xchg
add
mov
fimull
pop
cmc
fsubs
adc
mov
cmp
pop
gs
lret
xchg
jno
rcl
xchg
xchg
fstpt
mov
jno
sub
out
dec
test
movsb
popf
es
stos
js
arpl
insl
call
adc
cmp
sbb
aam
jbe
mov
xchg
jg
pop
nop
in
jne
lret
in
pop
call
pop
outsl
dec
call
lea
mov
loopne
push
adc
mov
cmp
push
cltd
dec
pop
shl
out
jg
xor
pop
ret
push
sbbl
mov
js
push
das
mov
stos
sbb
push
cmpsl
jmp
adc
arpl
pushl
cmpsb
pop
dec
movsl
std
lods
mov
xor
pop
mov
popf
fcoml
lret
and
push
xchg
adc
jb
mov
int
enter
aam
or
mov
push
xor
shl
mov
push
in
data16
jns
pop
imul
inc
push
sub
stos
mov
and
push
insl
subb
mov
mov
sbbb
pop
jae
rcrb
jle
fstp
push
jg
xor
jnp
sti
movsb
filds
lcall
or
loope
outsl
pop
pop
in
in
and
lods
fsubr
lret
fsubrs
push
mov
in
js,pn
lods
adc
sahf
jne
jo
pop
subb
ljmp
fstl
sbb
xchg
sbb
stc
jo
push
cmpsl
in
out
xchg
or
xchg
push
int3
cli
arpl
pop
das
cmp
cmp
inc
xchg
int3
xor
add
movsb
std
dec
fwait
mov
stos
scas
and
das
int
xor
lds
push
and
ss
lahf
fwait
pop
pop
sarb
jp
outsl
xor
push
pop
fmul
jb
cs
cmc
add
out
adc
aas
mov
call
dec
add
popf
enter
hlt
mov
out
lahf
or
sub
imul
or
inc
push
divb
xchg
mov
lock
sub
xchg
jno
push
aaa
pop
mov
jl
ret
cmp
push
sbb
push
adc
jno
fldenv
xchg
clc
rol
xor
roll
add
sub
xchg
dec
loop
mov
subb
inc
push
push
cmp
pop
xchg
push
fwait
mov
incl
aad
jns
ds
aas
push
clc
xchg
or
cmpsb
aad
sub
dec
pop
movsb
mov
add
dec
sbb
inc
inc
push
insb
pop
adc
in
cmp
add
add
cmp
mov
mov
xchg
pop
dec
mov
xorl
sbb
imul
in
sub
cmc
mov
arpl
pop
cs
pop
call
cwtl
and
bound
or
adc
pop
hlt
dec
push
sub
stos
int
mov
sub
in
and
aad
xchg
or
mov
dec
cmpsl
jg
flds
adc
xchg
fstpt
fnstenv
and
cmp
insb
mov
adc
jno
or
or
loopne
jns
je
std
dec
inc
pop
cmpsb
nop
mov
das
sub
and
fdivrs
das
lahf
or
xor
cmp
jae
jo
dec
jmp
andl
xor
jno
aas
testb
ds
rcll
xchg
jp
test
ret
inc
mov
xlat
push
rolb
mov
pushf
xorl
sub
mov
push
adc
mov
pushf
pop
xor
jl
jno
cld
jg
push
inc
gs
adc
gs
fisttps
add
cli
shll
xchg
and
cwtl
push
cmp
adc
mov
mov
fs
sti
xor
inc
push
cltd
loope
sbb
cmpsl
mov
push
inc
cltd
jnp
jmp
inc
push
fisttps
mov
in
cli
add
inc
sahf
add
test
pop
outsb
inc
popa
xor
mov
fwait
cmpl
loopne
int3
daa
fsubs
test
aam
andl
test
aam
mov
mulb
sbb
ss
pop
movsl
push
mov
roll
push
mov
decl
jmp
stos
jp
lods
sub
and
int
mov
adc
aad
and
stos
sahf
cltd
xchg
mov
addr16
push
imul
sahf
dec
sub
mov
lret
mov
aam
dec
pop
mov
push
inc
inc
rclb
aad
subl
push
je
sahf
sbb
in
push
psllw
xlat
stos
lret
jge
fwait
out
jno
cs
push
fmul
adc
gs
mov
call
fcompl
or
ss
sub
rolb
aaa
std
imul
les
sub
add
and
push
sub
js
shl
add
scas
lret
and
loope
inc
hlt
mov
jl
inc
arpl
mov
sub
mov
xchg
loopne
cmp
push
addr16
stos
cmp
cmp
jl
mov
jnp
das
ljmp
bound
push
leave
andb
cli
adc
and
aaa
jo
push
into
inc
fstps
std
out
gs
jne
ficomps
aam
testl
mov
push
jbe
xchg
xor
push
loop
enter
mov
inc
out
dec
xrelease
cs
add
push
push
mov
sahf
addr16
hlt
movsl
and
adc
xor
in
out
in
lahf
adc
in
jg
or
pop
enter
stos
xchg
xchg
add
inc
add
xor
mov
stc
cmp
cmp
pop
iret
inc
dec
ss
and
add
mov
xlat
aam
addr16
mov
imul
jp
mov
add
xchg
cmp
inc
push
jecxz
pop
cmp
push
pop
jno
aaa
jl
pop
arpl
and
xrelease
cwtl
jbe
rcll
pop
stos
lods
add
inc
stos
fwait
je
dec
mov
test
cmp
and
cmp
scas
xchg
movsb
mov
jae
int3
adc
push
mov
cli
xchg
add
jns
dec
adc
mov
clc
xchg
fdivrs
leave
loop
add
clc
bound
test
mov
add
jae
cmpsl
cwtl
leave
add
xchg
lahf
or
dec
jb
xchg
xchg
enter
fwait
adc
stos
jecxz
popf
jno
dec
std
mov
inc
aaa
push
popa
roll
pop
sarl
fisubrs
jne
push
mov
jle
dec
xor
in
clc
xchg
sbb
push
jnp
xlat
pop
int
mov
sbb
mov
filds
dec
les
mov
jg
jg
rorl
mov
hlt
movsb
lods
and
push
push
sub
jle
iret
scas
in
mov
mov
lds
sbb
insl
xchg
mov
add
mov
mov
cli
pop
lahf
pop
jno
jae
shll
adc
jmp
jnp
leave
add
xor
pop
rcl
push
xor
cmpsb
mov
or
les
lods
xor
lea
cwtl
lcall
mov
cmpsl
stc
loope
pop
inc
jge
sub
sub
es
pop
hlt
sbbl
ja
ud2
nop
lret
lock
dec
mov
jecxz
lret
seto
rcll
mov
and
or
dec
imul
pop
pop
xor
jg
push
pop
xchg
sahf
sahf
mov
jae
cs
add
or
inc
aam
mov
rclb
orl
push
movsb
cs
mov
sarb
pop
loop
scas
jbe
pop
pop
or
roll
stc
mov
lock
pop
and
add
sub
add
adc
mov
adc
call
int3
mov
mov
in
adc
sub
aad
cmp
jae
mov
or
movsb
pop
ljmp
add
inc
iret
add
fnsave
lea
fmull
fwait
cmp
ja
cmpl
and
add
pop
gs
insb
pop
mov
iret
sbb
sub
arpl
scas
cmp
ret
lea
xchg
cmpsb
popf
xchg
lret
mov
jle
inc
rcl
in
test
push
mov
and
jnp
sub
insl
sub
add
push
shld
push
xchg
cmpb
xor
add
push
add
pop
pop
sbbb
mov
inc
mov
dec
fdivs
int3
sub
sub
lret
mov
addr16
xchg
xlat
sbb
pop
shrb
push
dec
and
cld
rcrb
mov
mov
sub
inc
ss
cmpsb
pop
mov
jp
lock
xchg
enter
mov
daa
mov
test
hlt
roll
jg
and
xor
mov
addr16
dec
imul
int3
test
into
ljmp
mov
pop
in
or
stos
in
fstl
jmp
push
bound
jno
dec
rcrb
and
mov
gs
ds
sub
nop
jmp
mov
mov
data16
sbb
xchg
std
push
pop
and
adc
fs
or
ljmp
push
gs
ret
cmp
fidivl
sbb
lea
lds
call
cltd
std
push
loopne
loop
fsubs
mov
fsts
jp,pt
and
dec
push
adc
das
int3
and
imul
sbb
sub
hlt
pop
out
sub
fnstenv
sarl
sbb
test
jo
jmp
pop
xchg
xchg
pop
cli
push
cmpsb
loop
jo
out
inc
rcrl
push
push
fcmovu
lahf
pop
daa
mov
inc
xchg
and
push
lret
sbb
movsb
imul
shrl
pop
cltd
sub
rcrl
jg
in
fadds
push
in
aas
sub
push
jnp
mov
push
or
scas
jge
enter
mov
inc
insl
pop
bound
xor
adc
xor
or
rorl
xchg
inc
lret
hlt
inc
jg
subl
fwait
jge
repz
fistpl
dec
data16
daa
mov
cli
mov
fisubl
push
sub
jb
stc
into
dec
stos
cmp
inc
mov
lods
push
ja
mov
aam
sbbb
push
sbb
add
xor
fstpt
adc
lcall
push
sub
mov
addl
mov
std
enter
lds
or
pop
pop
stos
pusha
pop
jnp
or
mov
push
orl
cmp
insl
push
shlb
insb
push
test
es
sub
shr
cli
pop
enter
pusha
jecxz
push
insl
jbe
test
lret
pop
push
mov
or
xlat
mov
mov
lret
icebp
push
push
and
fs
pop
jo
out
lret
inc
aas
aaa
scas
inc
cltd
push
bound
int3
sub
out
mov
loopne
enter
outsl
inc
jg
xchg
ljmp
cld
mov
or
mov
and
rorl
nop
inc
mov
jmp
ret
mov
nop
lret
stc
testl
cmp
mov
xor
push
fcmovne
js
or
repz
xor
aaa
and
imul
xchg
xor
push
jae
cmpsl
jnp
cmp
adc
xor
dec
mov
bound
dec
pop
sub
xor
and
dec
sub
out
mov
pop
sub
inc
xlat
fwait
mov
into
adc
cs
xchg
push
adc
adc
add
hlt
cmc
insl
hlt
lock
sub
ds
out
dec
loope,pt
js
pop
in
mov
imul
lock
mov
js
pop
cmp
jae
in
out
mov
sub
aas
cltd
mov
lret
dec
xor
andl
in
mov
cmp
inc
aas
bound
inc
out
fs
mov
ja
rorb
lahf
and
xor
or
pop
mov
mov
fimuls
outsb
rcr
sbb
push
mov
mov
sbb
mov
mov
pop
mov
fmull
xchg
mov
stos
das
fwait
cmp
dec
adc
mov
inc
add
aaa
lods
insb
and
clc
push
fstpl
xchg
int3
adc
cmpsb
mov
xchg
roll
fdivp
ds
aad
sub
mov
into
gs
repz
jo
mov
call
mov
mov
xlat
test
roll
ljmp
loope
jge
test
inc
movnti
adc
mov
push
out
dec
ficoml
jmp
movq
fwait
mov
test
sbb
iret
mov
mov
popf
and
testb
jecxz
xchg
fiadds
pop
jne
aad
mov
in
mov
mov
cmpsb
xor
fdivrs
mov
push
lods
aad
hlt
cmp
loope
dec
scas
leave
dec
fwait
sub
mov
daa
in
jnp
cwtl
mov
cmpps
mov
jl
imul
shrb
in
pop
push
mov
push
loope
in
pop
fldcw
inc
xchg
stos
inc
sar
and
in
insl
hlt
repz
sbb
cmc
dec
or
imul
cli
jns
fs
test
mov
in
adc
popw
add
nop
shl
push
les
cld
cld
scas
jmp
stos
mov
xor
push
js
stos
mov
mov
sbb
jl
leave
ret
push
push
stos
mov
ret
push
rclb
insl
xchg
leave
push
lock
scas
in
ljmp
adc
test
inc
aaa
dec
sbb
pop
mov
cmc
stos
stc
imul
insb
outsl
call
dec
je
popa
mov
xchg
adc
insb
cld
mov
pop
add
ss
xor
sbb
mov
lahf
mov
lds
outsb
jecxz
stc
into
cmp
iret
fadds
pop
es
test
cmp
push
orl
jge
bound
push
mov
in
mov
cmp
sbbl
mov
cltd
sbb
or
push
sbb
inc
mov
dec
idivl
xchg
inc
and
movsl
ljmp
push
imul
xor
xchg
js
in
movsl
mov
and
add
jg
mov
inc
dec
data16
lds
shll
sbb
inc
rorb
dec
xlat
inc
mov
sbb
fwait
cmp
and
pop
outsl
sub
out
gs
push
xchg
mov
sbb
inc
xchg
sub
or
addr16
sarl
pop
ljmp
int3
out
call
xor
pushw
dec
imul
clc
repnz
mov
movsb
and
shlb
mov
push
xor
dec
aas
cmp
insb
dec
addr16
xor
and
cmp
lds
arpl
or
test
dec
xor
dec
dec
clc
cmp
dec
int3
push
mov
cwtl
jb
je
add
mov
mov
cmp
inc
stos
jecxz
pop
sti
mov
mov
or
cmpsl
jae
cwtl
push
sub
or
fbld
push
enter
gs
popa
adc
mov
adc
push
cltd
jmp
pop
sub
pushf
cmp
imull
or
dec
lret
call
notl
add
mov
xlat
mov
repnz
cmp
je
xrelease
cmpb
add
push
dec
adc
cmp
or
jno
mov
hlt
sub
ficoml
jmp
shlb
jp
mov
aam
icebp
negl
aam
pushf
fdivrs
push
aas
cmc
pop
jp
or
adcb
inc
jle
fprem1
jb
repnz
imul
cltd
xchg
jge
push
inc
sbb
lods
sub
pop
mov
fstpt
mov
mov
sbb
ja
cmp
mov
js
insl
mov
out
lret
push
pop
mov
mov
pop
inc
or
pop
int3
sahf
cmpsl
sbb
shrl
jp
pop
xchg
inc
xor
inc
ljmp
push
mov
ljmp
cwtl
clc
sub
dec
loope
jl
idivl
push
push
decl
mov
xchg
mov
jle
pop
push
adc
jo
xor
stos
out
icebp
xlat
out
mov
js
repz
dec
loope
dec
add
les
into
cmp
ja
aam
aas
andb
rcll
adc
dec
push
mov
adc
ficoml
lock
xor
mov
xchg
mov
xor
and
dec
xor
mov
in
shlb
dec
cmpsl
mov
loop
pop
pop
test
aaa
pop
pusha
cmc
pop
lods
mulb
fdivrs
inc
mov
fwait
and
aaa
rorl
data16
js
mov
push
fnsave
dec
mov
adc
idivb
and
leave
add
stos
hlt
outsb
jmp
inc
jmp
std
mov
icebp
leave
or
std
les
mov
ds
cmp
xor
out
aas
adc
cmp
int
cmpsl
cwtl
fsubrs
sub
out
sti
inc
or
lods
sbb
movsb
hlt
aas
sbb
fs
fcomi
or
adc
sub
jnp
mov
cli
fdiv
or
sbb
lcall
push
adc
xchg
mov
insl
adcl
int3
dec
lahf
movsb
mov
xchg
and
jne
inc
xorl
bnd
dec
loopne
ret
pop
hlt
out
int
and
sub
jge
or
xor
push
push
test
pop
sbb
lahf
out
lock
or
cmp
jne
xor
push
xchg
mov
xor
popf
mov
jae
shlb
xor
jmp
mov
push
push
push
push
dec
repz
mov
mov
jmp
mov
mov
ljmp
cmp
andb
les
iret
push
fsub
cld
stc
push
repz
lret
lahf
icebp
pop
gs
cld
dec
jb
mov
dec
imul
xor
test
pop
iret
add
add
push
fisttpll
mov
orb
inc
xor
sbb
and
cmp
push
xchg
and
or
pop
aas
cmp
in
push
stos
lcallw
mov
jae
out
jg
or
sub
test
lds
insb
pop
test
push
pop
and
sarb
out
mov
icebp
mov
mov
and
xchg
out
ss
shll
shrl
push
js
aas
and
sbb
push
cld
lret
dec
inc
lret
push
lret
lahf
or
in
mov
xchg
out
inc
adc
xchg
adc
inc
and
divl
je
fcompl
jp
xor
sub
lock
jo
xchg
add
jg
inc
mov
stos
movsb
les
pop
insl
inc
cmp
adc
or
je
dec
xchg
lods
sub
and
fisttpll
pop
dec
stos
cmp
test
in
xchg
add
jg
add
in
test
cmp
cmp
movsl
mov
repnz
xor
jmp
mov
or
mov
pop
lea
mov
rorl
jns
inc
cmpsb
mov
xor
jnp
cmp
mov
jno
loope
test
into
mov
jae
fistpll
xchg
scas
sbb
in
mov
inc
pushf
cs
and
adc
jl
xchg
cld
mov
cmpsl
stc
push
push
test
repnz
stos
scas
mov
daa
ret
std
add
add
mov
mov
jbe
jl
or
or
lea
sbb
in
mov
sti
aad
pop
adc
lret
call
add
sbb
into
aaa
ljmp
imul
push
data16
mov
inc
je
iret
xor
xchg
les
adc
jb
dec
in
lahf
jno
les
lea
out
out
fs
xor
nop
lock
or
dec
adc
sbb
sbb
movsl
adc
loop
jle
cmpsb
testl
stc
ds
and
gs
dec
xor
enter
rcrb
loop
iret
fimuls
sub
out
lea
in
xchg
mov
mov
daa
insb
cmp
sub
add
fcmovnbe
sahf
int3
repz
pop
mov
mov
sub
loop
subl
and
push
cmp
movl
sub
xchg
es
xor
and
mov
insb
adc
mov
mov
mov
popf
or
sub
sub
inc
fs
pop
xchg
adcl
imul
dec
in
xchg
inc
outsl
push
mov
lock
into
sub
cli
pop
mov
sub
imul
sbb
in
lret
scas
xor
pop
cmpsb
js
adc
jbe
mov
mov
ja
rcrl
inc
jmp
mov
test
in
sbb
imul
aad
bound
pop
or
cmp
loopne
cmpsl
sar
cmp
pop
or
pop
shll
data16
movsl
lods
ss
pushf
or
mov
sbb
cmp
aas
mov
dec
xchg
mov
shrb
xor
mov
test
aaa
into
aad
rcrl
out
xchg
xchg
pusha
pop
and
and
cs
push
adc
mov
lock
out
fldcw
movsb
int
xor
mov
test
jle
cmpsl
xor
sbb
add
mov
incb
scas
mov
loopne
enter
out
mov
adc
ret
lods
xchg
repnz
orl
shrl
pop
addr16
mov
and
mov
gs
push
daa
lods
call
movsb
jle
xchg
scas
dec
or
push
xchg
nop
shl
in
mov
mov
aad
lock
cmp
adc
stc
imul
pop
daa
lds
adc
jecxz
jmp
sub
insb
inc
cmpsl
hlt
mov
aas
xlat
mov
imul
pop
and
jmp
adc
int
scas
mov
and
inc
pop
mov
push
push
mov
lret
mov
mov
test
jle
mov
and
test
cwtl
ret
movsl
mov
jae
or
push
sbb
dec
inc
push
scas
adc
sbb
pushf
fsubl
adc
push
out
mov
dec
xchg
insb
pushf
xchg
inc
enter
mov
lret
jns
inc
or
ja
sbb
inc
aam
out
andl
push
fcomps
mov
push
int
popl
outsl
or
dec
cmp
aad
jb
cmp
in
dec
pop
pop
rorb
into
adc
push
sbb
jge
enter
aam
or
jmp
mov
inc
sarl
cmp
std
loop
in
and
flds
jno
subl
xchg
xor
out
add
aaa
int
out
push
dec
mov
jbe
jnp
push
xor
xchg
cld
outsb
adc
mov
rclb
jno
dec
fwait
pop
push
sub
data16
pop
inc
mov
shlb
pop
add
add
and
mov
call
icebp
les
pop
adc
pop
daa
cmpsb
inc
movsb
lret
push
jge
aad
outsb
adc
stc
popa
jp
fmull
pop
pop
clc
jge
mov
add
xor
leave
pop
std
test
xor
pushw
pop
pop
xchg
cmc
fisubrs
test
xor
imul
out
lea
rcl
cmpsb
sub
pop
rol
stos
hlt
and
push
add
dec
icebp
add
dec
xchg
xchg
push
add
mov
ret
movsb
push
push
pop
xor
jg
mov
dec
sub
dec
mov
adc
pop
arpl
testb
cli
cmpsb
fadds
scas
sub
orb
adc
lcall
jbe
xchg
lret
fimull
hlt
sbb
mov
add
lret
rcrl
lods
jmp
test
fdivl
inc
aam
outsb
jne
add
loopne
shrb
jns
clc
dec
push
push
icebp
scas
aaa
pop
xchg
sub
popf
pop
jns
pop
pop
aas
push
jns
xchg
xchg
pop
outsb
in
dec
sbb
rolb
stos
adc
cltd
dec
cld
mov
rorl
dec
aam
fsubp
sbb
mov
pop
test
or
cmc
test
loopne
and
adc
dec
jg
movsl
jge
lret
xor
dec
xchg
repz
push
lea
adc
lods
sarb
into
xchg
xor
add
movsb
mov
stc
mov
fcmove
xor
xor
dec
mov
bnd
cli
xchg
mov
jg
add
cmpb
insl
mov
mov
clc
jns
xchg
test
into
lret
pushl
hlt
jg
ret
sub
fnstcw
cmp
jbe
sarl
shlb
or
and
mov
add
mov
sub
inc
jg
es
mov
add
xchg
jecxz
push
test
pop
xchg
inc
es
int3
call
in
iret
fisttpll
fidivrl
xchg
jp
cmpsb
add
rclb
fldt
add
xchg
cmp
jns
push
fidivrl
loope
jne
pop
sbb
add
push
loope
addr16
into
cmp
out
mov
int3
adc
adc
and
lret
out
jle
dec
adc
pop
push
ja
insb
aas
mov
adc
ds
add
mov
mov
loop
jns
mov
mov
fnstsw
push
and
mov
dec
xchg
mov
in
sbb
push
loop
ret
sbb
add
pop
cmpsl
sti
or
cld
and
push
test
xchg
jle
adc
cmpsb
ljmp
es
push
dec
push
pop
insb
dec
cmp
ljmp
dec
lcall
xor
lods
fdivrl
pop
pop
lea
sti
jmp
mov
addl
cmp
das
daa
ffreep
mov
dec
movsb
xchg
mov
mov
dec
cmp
mov
and
lea
sub
pop
fisttpll
mov
or
andb
mov
sbb
dec
jbe
dec
fildl
mov
and
sbb
ds
push
fistl
repnz
xchg
push
into
inc
mov
cmp
jae
jmp
fisubl
daa
and
addr16
sub
inc
xor
adc
mov
sub
cltd
cmc
jmp
popa
mov
jecxz
adc
xchg
inc
sub
fldt
aaa
loope
jmp
mov
popl
inc
inc
jl
jl
dec
adc
dec
jb
or
loope
imul
fisttpl
out
xor
stos
lea
sbb
add
iret
faddl
xor
sahf
icebp
ds
push
lret
mov
mov
shll
mov
mov
sbbb
loope
hlt
push
mov
int
adc
lods
lcall
push
cmc
rcrb
mov
add
shlb
push
lods
test
sub
popf
inc
jmp
xchg
sub
lea
into
subb
inc
clc
add
fadds
loopne
shlb
add
jl
xor
push
ljmp
inc
and
sti
nop
stc
sub
dec
enter
xchg
jle
adc
mov
insl
mov
pop
jle
mov
or
or
mov
xor
and
je
xlat
lods
in
xor
xchg
sub
lret
cld
dec
push
insb
xor
mov
dec
ret
sar
sub
xlat
jecxz
les
fdivs
cmp
fstpl
jae
jmp
fdivrs
mov
lcall
push
cmpb
dec
xchg
mov
mov
xor
xchg
insl
mov
cmp
jg
dec
xchg
push
sub
and
popf
loope
push
cli
pop
push
mov
mov
icebp
push
and
sahf
pop
and
jmp
cld
arpl
outsl
sbb
mov
sub
stc
push
adc
sbb
popf
and
inc
sbb
lods
adc
dec
lea
test
stos
cld
or
dec
push
enter
int3
sub
aam
add
adc
sub
inc
std
xchg
arpl
add
mov
sub
xor
ficomps
and
sbb
push
mov
in
sahf
shll
inc
push
pop
xor
cli
push
icebp
cmpb
mov
sbb
xor
or
mov
inc
pop
test
cmp
xor
in
call
mov
xchg
pop
xorb
in
stos
inc
int3
push
mov
jge
shl
mov
mov
xor
push
mov
and
pushf
inc
insb
fs
and
xor
dec
test
mov
ljmp
sbb
mov
dec
loopne
in
push
mov
imul
pop
pushf
sbb
cmp
icebp
mov
leave
xor
cmp
mov
dec
std
push
cmc
stos
add
jl
cwtl
and
aas
jne
xor
in
arpl
hlt
push
ret
push
sahf
jbe
shll
lcall
add
dec
repnz
and
xchg
add
push
out
dec
or
lcall
xor
scas
jnp
call
mov
lods
push
in
add
pop
xchg
cwtl
imul
mov
es
adc
xor
leave
pushf
mov
jmp
sub
or
or
or
test
pushf
push
sbb
xor
adc
jo
inc
xchg
mov
neg
or
shrb
xchg
out
fidivrs
cmp
mov
loope
dec
or
mov
and
mov
lock
daa
inc
lret
clc
fidivl
jecxz
notl
and
movl
push
in
inc
cmp
adc
xchg
mov
sahf
lods
cli
aad
fdivl
sub
out
jb
out
push
xor
in
sbb
lock
sub
mov
mov
in
mov
lret
mov
into
shl
fstl
jp
mov
into
inc
xorl
hlt
add
pushf
add
dec
imul
ja
lcall
cmp
fs
pop
cmp
xchg
imulb
stos
gs
ret
jmp
dec
mov
xor
dec
and
rcl
pop
xchg
sub
movb
pop
cmp
insl
adc
inc
inc
insb
bnd
fs
insl
les
and
cmp
imul
add
out
pop
je
inc
dec
popa
pop
movsb
ret
adc
add
in
mov
and
sbb
and
or
push
pop
mov
repz
dec
pop
xor
jo
inc
jb
test
sahf
or
hlt
mov
xchg
mov
mov
das
in
das
pushf
pushf
call
jns
xor
mov
lret
lahf
or
pop
xor
add
sub
shlb
mov
decb
lds
adc
sbb
pop
pop
in
jge
ljmp
not
into
xor
in
fs
push
fs
adc
pop
mov
sbb
ss
or
cwtl
idivl
int3
push
fstpl
rcll
stc
or
push
sarl
lahf
lods
xor
cmp
mov
pop
adc
cltd
xchg
and
out
and
push
inc
cmp
dec
enter
xor
rcrl
push
test
jecxz
nop
xchg
scas
aas
fstps
nop
pusha
adc
addb
inc
push
jne
lret
add
xor
mov
test
icebp
loop
in
cmp
or
mov
add
fistpll
xchg
pop
arpl
pop
mov
adcb
lret
xchg
pop
xor
inc
push
cmpsb
fwait
mov
fnsave
sti
out
pop
cmp
mov
sbb
or
push
je
les
insl
js
imul
mov
fisubl
jo
push
shrb
js
out
notb
mov
inc
lret
pop
mov
cmp
mov
stc
das
test
js
jnp
add
add
aad
movsb
or
pop
sarb
add
pop
push
or
into
mov
jl
clc
jmp
test
je
lahf
jne
fidivrs
adc
inc
popf
in
jne
push
pop
jg
adc
lock
jle
pop
out
push
jl
push
sub
push
mov
cmc
dec
and
shll
nop
xor
adc
xchg
xlat
mov
jno
adc
mov
adc
nop
daa
or
fisubrl
push
sbb
loopne
jo
rolb
add
mov
std
scas
mov
lret
unpckhps
add
xor
int3
insl
sbb
pop
sub
imul
in
ficoms
scas
dec
popa
jp
test
inc
clc
je
in
test
in
faddl
xorb
or
sub
jno
arpl
inc
adc
aam
cmpsb
test
inc
stos
push
pop
das
cmovle
add
xor
push
aam
rorl
jp
sbb
sbb
hlt
mov
push
cltd
cmpsb
jle
ret
jb
lret
mull
scas
repnz
xchg
push
or
lods
sahf
xchg
mov
xchg
adc
jmp
pop
out
xor
and
andl
hlt
sub
in
mov
inc
sti
nop
ret
jnp
cltd
negl
mov
cmpsl
sbb
jno
xchg
sbb
and
sahf
and
pop
mov
cmp
xor
dec
or
in
mov
stos
xchg
mov
sub
fs
inc
popa
das
xor
inc
mov
imul
sti
into
int3
push
lock
xchg
cli
add
bound
cwtl
mov
repnz
cmp
add
xchg
stos
fstpl
or
les
xor
out
fidivrs
cs
std
jg
lock
xchg
in
lock
loop
cli
fisttpl
mov
fildl
xchg
ret
inc
and
add
lret
bound
imul
and
sub
movsl
popf
js
mov
mov
xor
fidivrs
inc
cltd
inc
sti
lcall
xor
ss
ret
sub
mov
jp
mov
sub
popa
inc
mov
adc
and
mov
sub
shrb
and
jne
dec
mov
test
dec
mov
cld
cmp
aad
cltd
lods
push
clc
pop
and
sub
mov
sti
inc
mov
sbb
pop
and
jmp
sahf
cld
or
rorl
mov
push
hlt
jae
and
or
leave
sarb
sub
cmc
scas
aaa
add
aas
mov
jno
scas
lret
adc
pop
xchg
sbb
xlat
jno
push
lahf
cmp
and
enter
and
add
stos
jmp
fsts
mov
pop
imul
xor
or
lock
cmpsb
cmp
sahf
cmp
add
and
incb
fwait
popf
cld
add
xchg
arpl
or
push
push
js
lods
ret
shll
outsb
jb
hlt
push
or
fmull
jne
cmc
iret
dec
pusha
gs
sub
aas
and
inc
gs
push
adc
lds
dec
ret
xor
sub
mov
in
dec
inc
mov
xchg
testl
repnz
xor
aam
mov
cld
idiv
pop
jp
popa
xor
sbb
cmp
clc
negl
inc
ds
mov
testb
loope
mov
add
xchg
sbb
lahf
lret
inc
out
dec
je
mov
inc
in
jno
lret
mov
mov
pop
pop
std
sub
sarl
cmp
xor
andl
fs
stos
outsl
call
popa
dec
jno
rolb
not
add
std
mov
int
rcrb
mov
mov
sbb
ds
imul
test
mov
aad
and
xor
add
sub
testl
inc
mov
shrb
adcb
gs
aas
bound
mov
jp
push
sarb
fiaddl
pop
cltd
jo
movsl
xchg
jl
mov
in
cwtl
mov
dec
test
push
xchg
pop
jno
xrelease
and
clc
and
sub
sbb
pushf
add
out
cmp
ret
ljmp
fisttps
dec
and
hlt
lret
loop
daa
xor
add
push
cltd
pop
sbb
jb
and
cmc
xchg
frstor
adc
div
aam
dec
out
inc
daa
mov
je
mov
xchg
stc
test
test
xchg
add
jmp
stos
stos
ret
imull
aaa
stos
xor
and
add
decl
mov
adc
mov
push
pop
repz
stc
int3
insl
dec
imul
mov
jle
rdtsc
xchg
add
add
divb
cmpsl
cmpsl
push
mov
cmp
in
dec
stos
test
shlb
jge
sub
test
ret
mov
push
dec
call
xchg
icebp
pop
int3
lea
dec
ror
insb
xchg
fdivr
jb
in
cmpsl
push
scas
push
pop
add
adc
and
mov
xchg
jg
mov
sub
mov
and
int
jno
call
or
mov
mov
roll
popa
cmp
sub
jo
in
int3
xchg
push
inc
int
jle
mov
push
out
push
test
sub
adc
testl
out
jne
aaa
and
or
pop
lea
insb
test
inc
pop
mov
out
sbb
test
inc
xor
loope
dec
pop
out
in
ret
inc
and
push
add
add
pusha
andb
dec
pop
insl
scas
mov
xchg
and
push
out
call
int3
cmpl
add
scas
push
and
mov
enter
push
aad
adc
mov
pop
ret
lods
xchg
push
cmp
adc
pop
in
inc
clc
xchg
jp
roll
or
push
adc
pop
loop
push
fisttps
cs
inc
fldcw
push
sub
clc
dec
lock
cld
fwait
mov
jmp
js
repz
dec
test
pop
mov
in
xor
gs
insb
stos
pop
and
bound
or
ret
jo
jno
mov
loope
fcomip
jecxz
lock
or
data16
ljmp
jmp
jns
mov
loop
dec
jg
mov
arpl
sub
mov
es
mov
mov
movsl
add
sbb
fmulp
loopne
xor
and
es
cmp
inc
pop
cld
mov
movsl
daa
sbb
cs
xchg
pop
out
cmp
shrl
aad
lock
loop
in
cmp
jae
mov
xor
jns
sbb
pop
ja
cmp
push
je
jns
shll
mov
push
pusha
or
sub
and
enter
adc
aaa
add
or
adc
and
pushf
mov
in
cmp
scas
cmp
sbbl
rcll
mov
lret
outsl
pop
jns
mov
mov
and
in
jb
mov
add
mov
inc
mov
jne
jne
insb
test
mull
pusha
and
jle
dec
dec
dec
fxch
fsubp
jno
stos
shl
std
in
pop
les
popf
nop
push
int3
push
dec
mov
push
push
mov
mov
neg
inc
fidivrs
jne
fcmovnu
pop
xchg
mov
gs
imul
adc
push
das
push
lock
icebp
dec
loope
sbb
add
push
pop
mov
mov
dec
mov
jnp
dec
pop
push
sti
gs
shll
xor
icebp
cmp
icebp
gs
insb
mov
jnp
xchg
mov
dec
pop
push
pop
and
shlb
insb
test
popa
and
ss
test
sub
lods
std
jno
dec
iret
mov
push
js
push
inc
je
sub
cs
shl
test
mov
dec
and
or
cmpsl
rcll
and
inc
js
sub
xor
inc
and
pushf
cmp
repz
scas
lcall
xorl
and
mov
imul
inc
sbb
dec
enter
dec
shll
and
xchg
mov
shll
pop
cmp
test
cmp
and
ficompl
xor
outsl
dec
mov
add
jp
std
fists
ds
dec
flds
jmp
shr
sbb
dec
sbb
bound
dec
xchg
movsb
and
jbe
in
pusha
fildll
into
push
or
in
xor
stc
xchg
mov
push
loope
or
lret
jnp
jge
popa
fwait
std
icebp
push
sar
or
les
pop
push
aaa
and
push
adc
push
out
shl
push
mulb
or
fimuls
rcr
ja
rcr
cmp
add
sub
adc
pushf
repnz
xchg
dec
in
ja
and
lcall
push
mov
ficompl
sti
test
scas
push
mov
mov
or
push
push
imul
movsl
pop
negb
cmp
rcll
fucom
fxch
xchg
jbe
sub
push
iret
add
inc
pop
sub
mov
cmp
cmp
mov
mov
pushf
adc
add
fsts
lret
mov
call
lcall
addr16
lea
cld
jp
xor
shll
inc
lret
gs
inc
xorl
cmpsl
jnp
fwait
sti
outsl
test
fstps
xchg
dec
xchg
das
mov
dec
mov
inc
push
inc
mov
in
out
sbb
pop
fchs
xchg
jns
jns
lahf
mov
aaa
mov
cmp
adc
inc
jp
pop
scas
sub
mov
scas
repnz
out
outsb
mov
mov
sub
outsl
ljmp
sub
dec
xchg
ret
iret
inc
mov
jg
xor
lcall
adc
cmp
scas
ficompl
add
in
inc
lret
cmpsb
aad
inc
inc
idivl
movsb
push
mov
cltd
sbb
pop
repz
out
sub
sub
movsl
insb
pushf
fdivrl
push
sbb
addr16
incb
push
mov
push
xchg
mov
aad
xor
lds
repnz
xlat
movsl
jmp
mov
repz
fildll
dec
mov
mov
jns
bound
pop
mov
and
cld
jo
cs
pop
push
cld
ljmp
cmpsb
jnp
inc
add
sbb
mov
or
lds
mov
pop
movsb
dec
ljmp
jbe
fistpll
mov
cltd
add
add
xchg
movsl
sub
sysret
adc
adc
test
pop
loopne
jl
cmpl
sti
rcrb
andl
test
out
mov
cltd
imul
int
and
sbb
dec
aam
cmp
xor
add
inc
fiaddl
add
nop
mov
repz
outsb
cmc
rcl
mov
push
enter
xchg
cmp
mov
mov
popa
inc
cmp
stos
jg
push
pop
and
or
lahf
inc
push
xchg
pop
jb
sti
jnp
xlat
mov
push
unpcklps
ds
subb
xor
insb
sbb
mov
mov
sub
mov
mov
out
inc
or
repz
jno
cmp
fsts
inc
mov
or
cmpsb
mov
mov
mov
fidivrs
or
clc
dec
pop
pop
movhps
mov
dec
or
sbb
maskmovq
ds
push
in
xchg
mov
push
popa
sbb
daa
sub
or
and
push
mov
hlt
sbb
and
mov
xchg
xchg
inc
movsb
sarl
or
rcll
sbb
sub
test
xchg
push
into
jae
shrl
rcrl
out
fimull
mov
clc
and
cmp
stos
adc
pop
lcall
xchg
push
cmpsl
dec
outsl
mov
sarl
pop
idiv
mov
ret
xchg
rcr
outsl
into
push
adc
sbb
shl
sbb
cli
mov
scas
and
in
jecxz
out
dec
cmpsl
ja
fwait
movsb
enter
xchg
cmpsl
jmp
icebp
int3
in
sub
jo
inc
pop
push
mov
lods
stos
popa
mov
sub
cld
sbb
cwtl
jecxz
adc
mov
leave
jbe
insb
jae
dec
pop
les
pop
mov
push
outsl
xchg
jmp
sub
out
adc
sub
fisubl
je
push
xchg
shl
ja
lods
add
and
mov
aad
sti
lahf
cmp
pop
test
pop
fldenv
and
dec
lcall
in
addl
into
inc
int3
mov
loop
pop
lret
mov
xlat
dec
sbb
cld
ss
out
lods
jne
inc
imul
fmull
std
aaa
xor
popa
lcall
lock
iret
push
fidivs
dec
sub
xchg
xor
mov
rcl
in
out
ss
dec
adc
das
sub
imul
cmp
das
push
add
jg
frstor
aad
int3
gs
subl
dec
lret
push
jae
pop
jp
test
out
push
and
mov
cmp
js
and
ss
adc
adc
fistpl
fimull
shll
jecxz
aad
iret
cmp
inc
arpl
test
cmpsl
fdivl
scas
push
fsubl
lcall
clc
subb
cmp
lret
dec
shl
mov
push
addr16
push
sbb
jbe
mov
lret
es
jb
and
dec
and
pop
sti
mov
or
cmp
test
fldt
inc
andl
sbb
shrl
lcall
aad
cmp
xor
stos
hlt
xchg
nop
cmpsb
ss
negb
test
ret
hlt
movsl
in
xchg
pop
clc
pop
repz
scas
mov
lock
out
or
orl
add
ja
or
xchg
or
mov
fisubs
repnz
popf
mov
push
adc
lret
in
in
leave
pop
mov
sub
lcall
mov
mov
cmp
adc
xchg
jg
xchg
adc
lret
popf
cmp
es
jno
pop
out
fildll
mov
popf
dec
cmc
lahf
xchg
sahf
fiaddl
jae
jmp
fstpl
pusha
sbb
xchg
leave
mov
repnz
mov
pop
shr
sbb
mov
gs
jg
out
sub
js
fcmove
and
cmpsb
and
jno
sub
mov
jle
lahf
jecxz
shrl
enter
gs
pop
xor
orb
jle
lods
mov
jp
mov
dec
push
loope
pop
sbb
xchg
and
mov
dec
adc
push
sub
mov
hlt
and
sub
add
imul
clc
lret
add
fs
push
lods
scas
xchg
add
xor
int3
je
add
out
ds
mov
arpl
ret
andl
mov
lahf
xchg
aad
cmpsb
add
and
push
mov
or
or
jecxz
dec
pop
sbb
rol
inc
inc
pop
pushf
dec
idiv
lahf
xor
lahf
jge
pushf
and
sbb
and
int
cmp
mov
jno
das
jbe
lods
dec
cmp
and
mov
cmpsl
pop
popl
sarl
xchg
or
mov
in
inc
into
das
xchg
stos
lods
jmp
sub
mov
outsl
dec
dec
fidivs
xchg
xchg
push
jo
pusha
ss
inc
nop
les
mov
and
inc
pop
es
cmp
push
sbb
mov
xchg
xor
cmp
mov
adc
out
dec
pushf
pop
mov
push
cltd
cwtl
push
insb
or
lahf
pop
aad
inc
inc
roll
mov
call
hlt
xor
and
mov
sbb
lods
dec
std
insb
daa
sbb
jg
scas
xchg
lock
mov
push
mov
sbb
mov
xchg
and
inc
aam
pop
fsubr
or
es
adc
addb
out
cwtl
inc
inc
or
fsubl
xchg
orb
mov
sarb
jg
xchg
idivb
sub
xor
pop
mov
insb
test
pop
push
sbb
aas
mov
or
lods
addb
or
mov
lods
pop
shlb
js
inc
pushaw
int3
push
gs
out
popf
sub
aaa
jbe
adc
lea
adc
add
iret
sub
dec
fisubl
push
jge
sub
lea
lret
ret
xor
dec
add
xchg
sbb
mov
jmp
inc
sbb
stos
mov
movsl
fwait
and
mov
shll
xor
fisubs
sub
fucomip
pop
inc
mov
int
xor
icebp
add
or
dec
orb
out
jno
out
mov
ljmp
or
aam
mov
iret
es
sbb
mov
imul
and
push
stc
dec
jl
inc
pusha
push
in
sete
sti
lods
pushf
insl
nop
mov
lds
dec
fsubrs
fcoms
shlb
test
inc
repz
sbb
lret
movsl
sub
iret
gs
ljmp
cmpsb
ret
lahf
icebp
lods
mov
loopne
test
push
dec
jecxz
xchg
in
ss
sbb
movsl
ljmp
adc
mov
lea
lea
adc
leave
int3
mov
add
cmp
adc
sbb
pop
or
inc
or
arpl
cltd
dec
add
xorb
les
inc
ja
mov
adc
sub
adc
mov
test
xlat
mov
adc
cmp
cmp
ret
imul
ds
dec
jmp
add
pop
pop
shll
sub
pop
fld1
sarb
inc
inc
mov
mov
or
mov
daa
jmp
adc
idivb
pop
sub
insl
mov
jg
push
out
mov
push
shrl
xor
out
sahf
insb
fstpl
mov
xor
movsl
mov
mov
push
dec
pop
andl
fcmovne
test
lds
ja
imul
popa
xchg
shrl
add
sub
mov
fcoms
mov
leave
and
les
and
scas
xchg
scas
test
xchg
fwait
add
das
les
sub
mov
test
mov
push
inc
sarb
xlat
jo
push
sub
out
aad
and
cwtl
cmp
ljmp
and
das
test
test
add
outsb
fiaddl
test
shld
pusha
sbb
xlat
xor
mov
jae
adc
gs
xor
cmp
add
jg
daa
shl
dec
outsb
test
outsb
es
fwait
aaa
ret
or
xor
jl
pop
mov
cmpl
jbe
sub
lock
vdivps
push
mov
or
dec
pop
inc
ret
xor
ja
adc
sarl
push
push
sbb
xor
push
outsb
xchg
out
inc
stos
lahf
pop
out
das
fiadds
loop
push
lea
outsl
popf
pop
and
dec
cmp
add
jnp
adc
xor
lret
popf
jg
add
gs
or
adc
mov
adc
xor
dec
jp
dec
mov
sub
or
test
sub
add
or
xor
push
lret
inc
daa
or
aas
lods
mov
lret
sub
pop
add
call
cmp
cmp
adc
mov
push
mov
jmp
pop
movsb
dec
xchg
aas
jns
cli
inc
xlat
pop
pop
jno
and
adc
mov
or
gs
mov
jnp
push
lods
and
loope
in
push
or
jge
cmp
xor
sbbb
sub
pusha
clc
jae
xor
mov
jnp
jbe
mov
in
rol
cwtl
fisttps
data16
sti
or
pop
lret
push
mov
mov
or
adc
push
inc
icebp
or
pop
insb
and
xchg
inc
dec
popa
sbb
sub
psllw
cmp
or
xor
lods
ret
out
fldcw
push
add
xchg
mov
lock
shll
enter
add
je
inc
mov
and
sub
jae
push
fstp
pop
sahf
test
loope
pop
mov
push
flds
push
push
mov
inc
mov
scas
pop
mov
mov
ss
fsub
imul
ret
outsb
imul
call
and
mov
test
gs
testl
in
hlt
cld
mov
pusha
popf
push
cs
push
hlt
jecxz
push
jg
mov
mov
cltd
xchg
push
out
sub
out
sub
adc
sbb
jno
ss
mov
pop
xor
push
loop
bound
enter
adc
cmp
push
pop
pop
in
xor
sbb
mov
cmp
stos
sbb
stos
xchg
and
xlat
and
pop
pop
bswap
stos
testl
jl
loopne
rdmsr
lahf
jecxz
pushf
mov
dec
enter
adc
pusha
shrb
ret
add
test
xlat
out
xchg
nop
or
xchg
push
adc
pop
sti
dec
out
loope
xor
xchg
push
sub
xchg
jp
jo
jno
repz
xchg
push
movsb
sbb
push
test
cmp
push
icebp
or
adc
mov
sub
ss
cli
dec
leave
inc
out
and
popf
xchg
push
pop
cmp
aaa
sub
push
adc
sarb
xor
adc
aaa
jo
and
xchg
cwtl
icebp
mov
sub
mov
stos
stc
call
or
out
mov
xchg
xchg
test
fcomps
aam
and
fdivrs
pop
cmp
inc
movsl
xor
pop
rcrl
clc
aas
lret
inc
stc
stc
inc
cmp
mov
js
adc
lods
test
es
add
cmpsl
out
mov
sbb
mov
in
mov
sbb
mov
dec
js
lods
push
insl
sub
ret
daa
jne
add
fistps
jp
and
sahf
and
xchg
and
jge
jb
cmpsb
mov
test
popf
xchg
imul
jae
lahf
cmp
outsl
cmp
loope
mov
out
and
fwait
cmp
cs
movsl
bound
lock
cmp
fsub
adc
add
sbb
sbbl
rclb
lods
scas
push
jnp
cmp
mov
add
and
cmpsl
imul
lea
cltd
push
scas
ds
cwtl
int3
fistps
fmuls
mov
jg
sub
int3
ljmp
out
ret
and
sbb
jbe
fldl
pushf
mull
stos
jnp
in
inc
adc
and
out
lcall
mov
inc
pop
push
jmp
gs
xor
xor
rcrb
scas
cmp
cmp
xor
imul
stos
xchg
push
push
jns
imul
mov
push
sub
scas
das
movsl
adc
iret
adc
fldt
pop
xor
jno
add
lret
enter
ljmp
pop
xor
test
adcl
cmp
fmul
mov
jecxz
inc
mov
jp
mov
icebp
xchg
push
xchg
clc
lods
jo
adc
inc
jmp
int
ljmp
pop
push
add
sub
cmc
addr16
loopne
das
outsl
push
and
jns
pushf
jns
push
js
pop
into
outsl
adc
lcall
and
jge
add
sub
cmpsb
mov
mov
xlat
dec
lret
scas
add
loope
fs
lcall
rolb
and
jle
pop
xchg
push
mov
xlat
inc
mov
cmc
enter
cmp
and
pop
scas
icebp
or
or
adcb
out
and
repz
pop
sbb
jnp
and
es
sbb
mov
les
and
or
cmpsl
xor
ds
sub
mov
loope
xor
dec
or
push
or
xor
push
rcl
jp
mov
iret
stos
mull
or
sbb
test
push
mov
push
lret
inc
aaa
fcos
int3
push
shll
adc
jb
jp
add
dec
int3
decl
jns
popa
stc
data16
rol
clc
andl
ret
sbb
jp
push
mov
jecxz
pop
imul
xchg
or
cmp
mov
fcomps
shrb
xor
cmc
stos
inc
mov
xlat
push
xchg
xchg
sbb
xchg
inc
imul
in
and
lock
cltd
inc
sub
js
inc
push
xchg
cmp
push
aaa
jmp
mov
dec
jns
push
sbb
lods
imul
test
outsl
mov
cmpsb
lret
cmp
add
insl
out
xor
xor
shll
pop
pop
mov
jno
fstps
lods
xchg
std
mov
cmp
test
dec
lds
cmp
dec
fistl
jnp
or
cmc
push
cmp
mov
mov
or
into
add
jge
in
or
push
into
push
and
in
lea
xchg
pop
xchg
adc
jecxz
aas
repz
cmp
cltd
push
add
or
loopne
sub
pop
sbb
leave
pop
iret
xchg
test
fistl
sbb
aam
mov
test
rcr
fsubrl
pop
mov
test
xchg
std
mov
adc
jmp
sbb
loope
and
hlt
sbb
scas
lahf
push
movsb
scas
divb
pop
dec
dec
dec
fsts
lock
cmpl
std
dec
push
mov
out
decl
out
gs
cltd
and
lret
test
sbb
fistpll
pop
cs
inc
dec
inc
xchg
int
aad
cld
shl
pop
xchg
in
psrld
pop
pop
je
adc
jp
mov
aad
sub
xlat
lea
fs
mov
movsl
push
mov
lea
mov
int
push
pop
mov
jae
jb
fisttpll
xor
cli
xchg
add
in
inc
ds
imul
sub
push
jo
fbld
shrl
out
pop
xchg
add
outsl
adc
call
push
xor
dec
mov
out
sub
pop
pop
pusha
jl
xchg
pop
aas
jbe
fsubrl
stc
mov
and
rcr
xlat
mov
js
popw
push
dec
test
or
inc
hlt
pop
stc
aas
adc
fsubrp
adc
js
aaa
pop
pushf
pushf
and
push
insb
pushw
rep
pop
mov
cmc
xchg
mov
mov
es
ljmp
ljmp
inc
mov
int3
dec
mov
roll
loopne
push
jns
sbb
and
pop
lcall
xor
jmp
inc
orb
push
daa
xor
bound
loopne
jns
jecxz
js
dec
dec
es
jb
and
clc
push
loopne
in
pop
dec
popa
bndstx
add
lahf
mov
or
stos
clc
push
fcmovnu
ja
stos
stos
push
mov
out
test
out
mov
dec
jb
or
lret
push
mov
or
shrl
pop
mov
sbb
jnp
jmp
mov
scas
rorb
adc
mov
fdivl
aas
fidivrs
int
cmp
fs
pop
fidivrl
call
cmpsl
add
adc
scas
jbe
call
adc
and
jl
push
pushf
lock
cmp
cmpsl
repnz
or
insb
sar
cmp
loopne
xchg
out
adc
sbb
loopne
lcall
mov
in
scas
jbe
jge
lret
add
cmp
mov
push
add
pusha
jp
add
xor
mov
aam
xchg
sub
inc
cmp
cmp
movsb
cmp
gs
dec
inc
jp
adc
popa
pusha
xor
movsb
mov
jge
jb
repz
push
jmp
aad
lret
sub
rclb
mov
xchg
sub
sub
jno
pop
insb
lock
inc
fcomps
inc
cmp
sub
sbb
xor
in
and
negl
add
pushf
push
hlt
dec
dec
scas
cmp
std
mov
push
mov
mov
mov
leave
jge
and
cmc
fcmovb
scas
xor
xorb
xlat
jno
jp
or
jp
cmpsb
leave
subl
inc
inc
jmp
fnsave
pop
mov
add
and
lcall
cmp
sub
cmp
leave
mov
push
mov
mov
repz
sbb
pop
les
and
inc
fisubrs
gs
inc
jmp
jl
fs
jno
jbe
adc
sub
sub
rorl
arpl
adc
xchg
lods
xchg
mov
stos
lock
or
mov
add
in
pop
and
cwtl
addb
arpl
pop
push
leave
push
popf
fcom
stos
ret
repnz
lea
out
inc
sbb
rorl
hlt
jae
inc
lock
in
cs
rcll
xchg
lret
cltd
push
lret
inc
adc
or
dec
clc
xchg
jne
cmp
ds
and
popf
ficomps
cmp
loopne
test
add
sbbl
out
into
repz
push
sahf
test
dec
xchg
jbe
sahf
jecxz
sub
jbe
aam
cmp
int
mov
lret
adc
push
test
and
lret
mov
std
jne
mov
mov
int3
or
mov
in
shl
lds
lcall
ret
push
inc
cmp
cltd
push
enter
sub
adc
clc
and
or
sub
pop
add
mov
xorb
xchg
lret
xchg
loop
enter
push
xchg
lods
imul
sbb
stos
int3
das
aam
outsl
movsb
push
ret
out
jne
dec
xor
push
dec
adc
rorb
cmpsl
call
in
lret
stc
cmpl
in
sub
inc
in
out
dec
bound
out
mov
movsl
add
adc
pop
cltd
pop
sbb
jle,pt
xchg
cmp
lods
mov
pop
test
push
sar
hlt
and
inc
test
rolb
push
js
movsb
lds
dec
cmp
cmp
call
xchg
fiadds
ljmp
xchg
xchg
rcll
sub
sbb
jmp
inc
adc
xchg
int3
lods
adc
jmp
ret
mov
nop
insb
pop
ret
push
add
fcoms
dec
adc
xchg
std
test
mov
clc
jae
repz
mov
sarb
push
jbe
rol
push
sub
dec
mov
mov
pusha
hlt
inc
cli
jl
pop
xchg
loope
insb
mov
test
add
push
mov
sti
push
popa
and
fmulp
nop
adc
fcoml
insb
pop
cs
xchg
sbb
loope
dec
or
push
pop
in
fstps
add
icebp
repz
leave
jb
push
ret
cmp
or
jg
inc
cwtl
or
push
in
movb
aam
inc
xchg
push
push
andl
fistps
int
mov
pop
repz
cmp
jmp
daa
push
dec
hlt
sti
fstcw
fnstsw
int3
sbb
xchg
fnstcw
jo
pop
lock
stos
sub
sub
addr16
cmc
mov
call
fcmove
inc
outsb
adc
mov
into
xchg
push
cmp
popf
jg
gs
daa
and
lds
das
jne
fmul
mov
pop
notb
test
or
je
add
push
cmp
leave
loop
jmp
push
xor
pop
push
push
jp
lods
fwait
add
cwtl
nop
ret
pop
push
stos
mov
icebp
jb
xor
pop
sub
jge
call
adc
and
test
sbb
pushf
mov
jg
xlat
xor
fildl
add
imulb
sub
gs
mov
sbb
repz
inc
cmp
inc
cld
dec
test
loope
jecxz
sbb
jecxz
xor
out
bswap
and
push
dec
sahf
mov
adc
dec
mov
cmc
bound
cmpsl
jp
push
nop
fmull
mov
cmp
adc
inc
aad
cwtl
add
aad
lahf
jb
leave
adc
push
cwtl
cmp
xor
stos
in
fadds
push
sbb
std
cmp
mov
push
inc
pop
sti
inc
in
mov
mov
faddl
sub
in
mov
scas
aaa
xlat
sub
mov
sahf
mov
mov
inc
mov
mov
mov
das
hlt
out
pusha
cmp
xchg
fwait
pop
fwait
pop
push
shl
lds
les
shl
dec
inc
inc
xor
push
or
dec
push
imul
insb
stc
cmp
pop
out
xor
aad
sbb
lock
int
cmp
jl
sar
jl
pop
add
movsb
push
aaa
call
loopne
mov
icebp
jae
ss
jmp
add
scas
mov
pop
pop
push
mov
jl
aas
sarb
test
popf
aad
in
add
enter
nop
nop
ss
cmc
scas
push
cmpl
enter
mov
andl
scas
scas
in
cmp
je
adc
mov
sahf
mov
lock
in
rcrb
xor
push
add
aas
sbb
inc
cwtl
adc
pop
ficomps
xor
jb
push
enter
nop
sub
mov
jnp
imul
clc
data16
lock
xchg
inc
imul
jne
test
call
sub
cmpsl
and
bt
test
mov
test
xchg
mov
xchg
ret
xor
push
movsl
fs
and
mov
loop
imul
scas
icebp
push
mov
inc
mov
call
xchg
push
mov
fstpl
repz
incb
fidivrl
fidivl
inc
jae
ret
frstor
iret
std
sbb
nop
pop
lods
js
std
cmp
inc
ss
xor
fs
fcomps
cltd
cmpsl
andb
mov
jnp
cs
movsl
arpl
iret
into
out
mov
mov
out
sub
lods
adc
mov
pop
jae
sub
pop
pop
stos
data16
lahf
xchg
mov
jp
mov
ss
cmpsb
call
dec
je
subb
inc
and
dec
sarl
test
clc
adc
out
or
sub
jne
inc
fs
mov
js
sbb
mov
xor
mov
or
sbbl
cmp
mov
sbb
movsl
leave
and
add
jae
xor
hlt
test
adc
test
push
test
scas
add
mov
cwtl
in
inc
imul
fiadds
inc
jae
iret
or
jne
dec
push
push
imul
sub
xchg
xor
cmp
insl
loopne
fwait
lods
in
adc
je
cmp
sbb
or
mov
push
inc
jmp
pushf
notb
call
scas
mov
push
imul
lret
adc
aas
out
xchg
hlt
int
jo
aam
xchg
adc
mov
icebp
or
test
mov
fnsave
xchg
addl
dec
sbb
ds
addl
mov
push
rcrb
add
cmpsb
cmpsb
xchg
addl
imul
cmpsl
aaa
sbb
pop
clc
ja
test
xchg
push
scas
and
leave
popf
cltd
xlat
mov
xchg
xor
adc
push
cmp
iret
fcompl
gs
imul
adc
and
mov
inc
jp
loop
xchg
je
jo
jg
pop
push
cwtl
jl
push
roll
neg
mov
add
lea
pop
jnp
sahf
mov
mov
jge
mov
adcb
and
mov
mov
and
lock
enter
test
scas
cli
repz
imul
fsts
jns
mov
xlat
cmp
xor
fwait
into
outsl
sub
mov
and
push
lcall
jae
sub
lods
mov
movsl
in
cmc
and
push
icebp
mov
pop
popa
mov
inc
pop
cmp
out
inc
popf
cmp
dec
insb
xor
adc
add
jnp
fdivs
dec
mov
dec
pop
add
pushl
mov
andl
cmpsl
push
addr16
mov
movsl
arpl
dec
fucom
cmp
outsb
mov
ss
lret
jp
enter
xchg
test
lret
mov
fcomi
mov
cltd
jbe
push
lods
enter
fs
nop
sbb
es
sarb
dec
arpl
dec
add
mov
out
fisttpl
or
loopne
inc
and
jmp
mov
ror
push
lods
xchg
aas
pop
xor
jae
loope
push
xchg
imul
jecxz
xchg
push
sbb
mov
jmp
lahf
cmp
cmp
cmpsb
pop
pop
xchg
gs
mov
pop
dec
mov
stos
mov
add
imul
ja
cld
lcall
rcll
les
pop
test
mov
jbe
outsb
fstps
fcomip
mov
insl
out
inc
mov
cmpsb
loopne
rol
xchg
sahf
xchg
adc
int
scas
jae
cmc
dec
movsl
dec
faddl
aas
in
icebp
pop
jle
cmp
mov
test
aam
mov
xor
sbb
ja
clc
jl
cmp
faddp
pop
mov
rcr
movsl
mov
test
insl
sub
mov
or
mov
ret
cli
push
sub
pop
adc
fwait
mulb
pushf
das
jecxz
xchg
cmp
add
lods
aas
add
and
xor
stc
dec
fldt
out
sub
mov
subl
or
mov
mov
stos
movsl
stos
and
xchg
or
mov
add
mov
cmpsb
jae
cmp
mov
pop
pop
or
mov
inc
jge
loopne
xchg
adc
pop
mov
enter
inc
pushf
imul
xchg
push
adc
gs
mov
mov
jmp
pop
aaa
pop
push
sbb
push
add
aam
ret
fstp
xchg
lahf
fiadds
lock
add
out
sub
mov
and
sarl
ret
js
movsl
push
mov
jne
jmp
sarb
mov
testb
add
lret
fstpt
stos
sahf
addr16
shll
mov
notl
mov
jb
stos
mov
out
rcr
pop
mov
inc
or
cli
cmpl
dec
or
clc
std
ret
xchg
ds
xlat
and
mov
mov
hlt
lock
movsl
and
cmp
add
cmp
or
stos
push
stc
xchg
enter
in
js
lds
daa
repnz
stc
rcrl
shll
cmp
fs
imul
cmc
popf
jmp
rorl
lock
cmp
mov
clc
out
loop
mul
inc
nop
push
jae
pop
outsb
mov
clc
xchg
mov
sub
adcl
movsb
or
adc
aas
movsb
out
out
insb
push
into
cmpb
out
sahf
push
mov
mov
data16
or
cmp
repnz
mov
pop
fsts
dec
pop
in
dec
shlb
lret
cmp
test
and
fucomi
scas
sbb
sbb
push
pusha
out
into
or
inc
or
push
inc
cld
jl
out
rol
subl
repz
ss
cwtl
push
push
fdivrs
xchg
xchg
aad
mov
dec
mov
sub
add
xchg
ljmp
mov
and
pusha
fldt
push
adc
sahf
sbb
mov
call
mov
out
push
mov
mov
scas
push
xor
mov
call
bound
fiaddl
pop
inc
in
mov
fs
push
xchg
push
in
fiaddl
lock
ds
adc
stos
adc
test
sub
adc
cltd
mov
out
pop
mov
test
sbb
pop
dec
mov
xchg
cmpl
out
xor
aas
jl
xor
add
aad
ficoml
mov
sub
ljmp
ret
jnp
imul
mov
in
and
pushf
popf
dec
or
cmc
fstpt
xor
cwtl
jl
cltd
bound
add
jl
cmp
pop
xor
pop
xchg
and
cs
das
cli
popa
shl
repz
pusha
jle
mov
mov
add
out
repz
leave
aaa
rcll
imulb
or
aad
pop
pop
sbbl
push
cmp
xor
into
mov
fiaddl
dec
imul
push
daa
in
jecxz
adc
push
or
dec
xchg
mov
test
mov
sbb
imul
mov
ss
jle
mov
stc
add
jge
in
cld
sbb
adc
jecxz
rcrl
fistpll
les
cmpsb
pop
imul
ja
stc
enter
scas
out
xchg
jle
sub
pop
shr
rolb
xchg
adc
xor
mov
fisubrs
pusha
sub
lea
enter
dec
xor
mov
push
pop
cmp
shld
mov
out
mov
insl
pop
aam
out
arpl
sub
addl
cmpl
ljmp
mov
js
dec
push
scas
in
lret
jle
mov
and
xor
das
stos
icebp
jge
push
pop
ljmp
loopne
daa
and
loopne
push
clc
pop
jl
add
sbb
out
mov
sbb
jecxz
push
cmp
mov
add
nop
fwait
test
or
cmp
aam
cmp
ucomiss
push
xchg
cmp
pop
push
xchg
push
scas
pop
jmp
mov
pop
cmpsb
dec
pop
and
sub
cwtl
mov
lahf
sbb
sub
les
jo
mov
xor
jl
aas
mov
fs
bound
adc
mov
xchg
sbb
pusha
les
dec
test
fwait
and
jge
xchg
jp
jle
xchg
icebp
sbb
xor
mov
int
pop
jp
ljmp
pop
in
add
mov
sbb
xchg
jno
cmp
pop
repz
dec
out
hlt
mov
out
sub
xchg
stos
jp
xlat
mov
pop
adc
inc
stos
xchg
jg
sub
xor
hlt
jge
cltd
mov
test
push
jecxz
adc
add
mov
into
dec
xor
or
data16
aam
ficoml
dec
shl
nop
jp
ljmp
mov
cmp
pop
sub
ret
and
cwtl
or
in
push
call
fisttpll
das
lea
mov
add
gs
adc
jmp
sub
mov
dec
mov
cmp
movsb
cltd
mov
jns
into
repz
cmp
repz
js
testl
add
lods
xor
pop
loopw
add
aaa
insl
pop
mov
mov
mov
inc
and
add
push
in
add
scas
push
ss
cmp
push
mov
insl
rcrb
push
xchg
repz
xchg
iret
xchg
cmp
std
xchg
scas
xchg
dec
fadds
sub
xor
aad
lea
iret
sbb
daa
ror
xchg
mov
mov
mov
mov
cmpsb
mov
jbe
test
add
mov
ja
or
lahf
test
lock
xorb
push
push
or
mov
mov
sti
push
xor
push
cmp
scas
xchg
sub
js
sub
outsb
pushf
movsl
dec
jmp
popf
mov
test
mov
push
push
mov
inc
lds
and
inc
inc
addr16
and
inc
in
mov
xor
sub
push
mov
dec
sub
insb
jbe
sbb
cli
and
mov
xchg
mov
ljmp
push
mov
andb
push
and
movsl
int
mov
scas
mov
push
shll
cmpsl
fbld
xor
in
std
not
xchg
adc
lcall
pop
rcll
jbe
pop
loop
in
ss
xor
je
ret
iret
out
fcomps
fdivrs
iret
push
sbb
icebp
and
icebp
mov
xor
fadds
fisubl
push
loopne
aaa
outsl
push
movb
int3
sarl
aaa
test
sub
pop
jmp
fsub
ja
int
insl
mov
ret
jns
push
xchg
sub
loopne
in
ja
and
dec
jnp
inc
pop
mov
imul
lods
sahf
push
outsl
pusha
push
push
dec
dec
mov
inc
or
jmp
fistpl
cmp
pushf
movsb
xor
xchg
imul
mov
inc
dec
imulb
add
ja
sbb
fidivrs
subb
mov
sbb
imul
out
cltd
mov
out
rorb
xor
jmp
add
mov
jnp
pushf
mov
ljmp
stos
xor
push
sahf
mov
cmpsb
xorb
cmpsl
outsl
adc
adc
mov
bound
xchg
out
ret
mov
jnp
rcrl
adc
cwtl
mov
jno
lret
mov
in
out
fnsave
mov
int
mov
mov
out
push
in
adc
jg
jae
jl
cmp
xor
jmp
pop
mov
outsl
xchg
shr
push
int3
fs
push
popa
or
xor
dec
aad
jmp
andl
pop
mov
out
mov
jns
out
test
aaa
pop
jecxz
jno
cmp
in
pop
cmc
mov
movsb
fwait
je
mov
pop
pop
arpl
jle
mov
mov
outsb
pop
xor
dec
mov
xor
and
popa
or
and
in
cmp
dec
faddl
mov
fimuls
sbb
aas
cwtl
xchg
pop
ret
mov
out
into
and
movsb
scas
cmp
push
sub
push
pop
aaa
push
dec
jo
xchg
inc
mov
sbbb
mov
in
stos
jne
push
clc
and
adc
sbb
sbb
xor
jmp
pop
mov
shll
rolb
int
adc
sbb
in
sub
out
cmp
fwait
pop
sub
sub
popf
jg
andb
dec
hlt
mov
sub
loop
sarl
cmp
add
arpl
mov
adc
push
cs
fists
push
mov
xor
outsl
rcr
imul
sub
dec
adc
out
cmp
xchg
outsl
jno
movsb
cmp
mov
addr16
movsb
in
subl
js
or
aaa
pop
test
sahf
mov
add
mov
adc
out
lods
aas
cmp
int
repz
std
xchg
xchg
inc
push
push
test
jge
pop
add
push
mov
lods
inc
jb
testl
xchg
pop
and
jne
les
pop
mov
pushf
sub
dec
mov
int
clc
mov
adcl
xchg
inc
inc
mov
fldl
fbld
cwtl
push
cmp
insb
imul
inc
jo
shl
add
mov
xor
shr
sub
lahf
and
mov
sti
cmc
leave
mov
jae
loop
outsl
adc
aas
aas
pop
cmc
out
cmp
pop
mov
imul
loope
in
test
test
sbb
ss
and
jmp
fiadds
loope
clc
rcrl
and
cmp
push
cmp
cmp
lahf
lahf
push
cmp
iret
xchg
dec
adc
aas
andb
outsb
pop
sbb
or
sbb
or
repz
jne
xlat
push
sub
stc
lret
cltd
in
dec
filds
stc
lidtl
jae
sti
jae
dec
shll
fstpl
and
andb
cld
aam
push
mov
or
ss
jbe
push
pop
cmp
imul
inc
fs
clc
popf
insl
cmp
pop
scas
aam
test
push
jnp
ljmp
mov
shll
push
call
sbb
jmp
cld
xchg
ljmp
mov
mov
push
into
push
adc
pop
push
jp
mul
mov
sub
mov
cs
ds
xchg
and
pop
inc
adc
push
sbb
fwait
jg
push
cli
sbb
jmp
and
sub
loope
xor
sub
mov
or
movsbl
add
fists
xchg
inc
inc
jnp
mov
xor
fsts
pop
and
cmpsl
insb
jns
sbb
ljmp
imul
lods
cwtl
adc
and
and
jbe
jno
sbb
sub
int3
or
push
jg
insl
sbb
pop
ljmp
mov
cmp
xchg
and
into
jb
nop
ljmp
mov
and
xchg
sub
pop
lods
in
call
add
outsb
xor
mov
fxch
mov
sbb
adc
add
sub
push
in
sbb
jno
xchg
mov
movsl
sub
xchg
and
cmp
out
lahf
movsb
cmpb
xchg
movsl
adc
add
decb
adc
into
fimull
or
shlb
in
das
aas
iret
cmc
repnz
add
push
call
aaa
push
add
in
dec
aam
jns
les
test
cmp
mov
aaa
inc
out
xchg
xchg
cmp
repnz
lcall
add
mov
out
push
push
dec
mov
xchg
pop
hlt
jg
inc
cmpsb
scas
xchg
pop
jno
jge
rcrl
es
jl
jb
mov
fldcw
cmpsl
loopne
cmp
sbb
mov
lahf
aas
adc
in
repz
rorb
jmp
mov
cwtl
mov
jb
lea
aaa
adc
std
js
xor
sbb
xor
inc
dec
or
out
rcrl
adc
insl
out
mov
fistl
sub
or
mov
inc
punpckldq
pop
mov
stos
inc
lret
iret
inc
dec
movsl
cmpsl
daa
dec
push
lea
cwtl
sbb
add
shl
sar
or
push
cmpb
mov
push
mov
loope
xor
imull
aam
and
cmp
dec
mov
call
nop
mov
mov
jnp
sub
ret
sarb
mov
jno
mov
int3
out
testb
jno
movsl
lods
jp
mov
add
scas
inc
cltd
incl
mov
adc
in
fwait
mov
jne
inc
xchg
adc
orb
sub
enter
lea
stos
nop
pop
inc
punpcklwd
dec
mov
aaa
cld
aam
insl
push
fs
sbb
or
adc
lea
test
mov
pop
addr16
mov
adc
mov
mov
sbb
loope
test
leave
out
add
les
in
shrb
jle
aad
icebp
filds
xchg
xchg
push
pop
sub
int3
mov
pop
js
out
or
loope
mov
xchg
std
fildll
jg
sub
mov
cmpsb
dec
jb
insb
add
fcoms
adc
cmp
jae
mov
xchg
cwtl
movsl
repz
cmp
cs
jecxz
mov
clc
pop
repz
mov
cmpsl
popa
dec
xchg
push
xchg
rclb
push
mov
sti
jmp
or
add
pop
mov
or
lods
stc
sub
adc
sbb
into
xchg
add
cld
aam
push
ret
inc
int3
add
add
loop
inc
pushf
fisubs
sarl
cmpsl
fwait
cld
pusha
mov
call
lea
gs
add
jno
mov
cwtl
cmpsl
xchg
sti
push
cs
inc
add
imul
inc
js
scas
scas
aad
out
sbb
in
cld
add
and
test
fcoml
push
popa
scas
sub
jle
mov
cmp
clc
mov
xorb
notb
and
test
fsts
loope
push
xorl
xor
pop
rcr
mov
sti
add
pop
ret
or
lods
dec
loop
pusha
mull
test
in
out
inc
push
cmp
jecxz
movlps
mov
ret
stos
lret
push
sub
imul
push
cmp
mov
adcl
out
into
cmp
xchg
mov
test
sbb
js
nop
jge
sar
xor
cmp
lods
sub
adc
jns
cmp
pushf
pop
mov
test
test
rol
inc
arpl
pop
xchg
pop
pop
mov
xor
and
leave
addr16
jg
add
ror
cmovs
cli
jge
push
add
inc
or
xchg
push
outsb
sbb
popa
stc
dec
push
jl
repnz
imul
mov
fs
scas
addb
leave
push
adc
js
cmp
or
push
sbb
xor
int
outsl
jg
iret
mov
inc
jecxz
cmc
mov
mov
pop
add
scas
xchg
sub
pop
xor
jnp
mov
shl
loopne
inc
cmpsl
cmc
int3
shlb
imul
add
push
pop
int3
sub
leave
xchg
inc
xlat
xchg
imul
out
ljmp
cwtl
jmp
mov
lods
out
dec
in
sbbb
inc
jge
ret
pop
insb
div
rorb
adc
sbb
jne
adc
add
adc
xor
ss
mull
sbb
xchg
mov
lcall
adc
nop
mov
cs
and
test
push
out
das
dec
aad
es
sarl
movsl
add
test
adc
dec
js
sbb
lret
scas
xchg
out
mov
fildl
insl
add
fs
dec
shll
mov
loope
push
enter
or
jle
jae
mov
lock
jle
lods
jge
fdivs
push
movb
daa
cld
mov
sbb
mov
sub
jmp
and
inc
add
call
cld
in
lods
jae
in
mov
push
nop
add
icebp
or
jae
in
add
out
inc
sbb
sbb
and
xchg
stos
lea
and
mov
dec
and
test
and
sahf
push
loope
mov
mov
enter
jle
jmp
and
add
stos
sub
shl
or
mov
lret
xchg
mov
sbb
xchg
sub
xor
mov
sub
dec
mov
jbe
loop
push
xchg
xor
sbb
xchg
imul
je
dec
jmp
scas
xchg
jae
out
dec
mov
into
sbb
dec
mov
dec
cmp
subb
movsl
or
popf
pop
xor
jo
dec
mov
lret
repz
adc
jne
repnz
sub
int
or
xchg
fldenv
adc
adc
dec
sbb
ljmp
xor
jp
ficompl
xor
add
scas
flds
orl
in
inc
cwtl
popf
pop
lcall
cli
add
in
add
xlat
subb
outsl
cs
andl
xchg
sub
adc
sbb
mov
lret
cmp
pushf
or
xor
mov
icebp
iret
orl
add
cmp
pop
adc
xor
add
fwait
sbb
ds
jne
arpl
pop
ror
push
add
xchg
int3
in
das
dec
xor
mov
sub
jnp
ja
inc
inc
lods
test
es
ja
inc
ja
mov
push
dec
cmp
pop
jmp
jno
mov
sbb
jl
push
or
fwait
rcll
mov
mov
push
inc
pop
andl
xchg
jle
xchg
stc
or
pop
mov
cli
shrl
cs
sbb
flds
mov
and
loopne
mov
inc
cwtl
das
bnd
fcom
dec
ror
mov
out
ja
inc
lea
fidivl
mov
das
faddl
fstl
sub
notb
pop
ret
adc
leave
adc
daa
mov
pop
bound
shlb
cmp
mov
out
or
mov
arpl
pop
mov
xor
sbbl
aaa
cwtl
cld
sbb
push
add
fs
ret
lret
in
fistpl
rol
mov
or
lds
jg
sbb
sub
mov
stc
sbb
mov
mov
subb
lods
jne
dec
iret
paddq
loope
push
sahf
lret
fs
jp
mov
insb
call
sbb
cmp
mov
je
inc
mov
fwait
outsb
insl
cld
add
cmp
dec
jae
sti
add
lods
lods
pop
pop
pop
jne
xchg
insb
mov
sbb
ret
xchg
mov
dec
gs
xor
cmp
mov
mov
xorb
sub
jno
or
pop
push
je
dec
or
pop
jge
ss
mov
into
jmp
jl
loopne
pusha
jl
cwtl
and
xchg
pop
push
jb
mov
ds
push
stos
jb
cld
in
inc
pop
xchg
nop
adcb
cmpsb
cmp
push
fs
stc
aam
js
les
test
add
data16
mov
fcmove
gs
jbe
mov
pop
hlt
pusha
lret
test
shr
fwait
sbb
icebp
push
mov
inc
mov
or
push
and
mov
insl
pop
push
inc
and
and
xor
das
jo
fsubr
imul
lcall
sti
adc
std
mov
jno
jb
shll
ljmp
mov
int3
out
and
repnz
mov
inc
cld
push
pop
cmpsb
cltd
xchg
mov
jecxz
out
popa
push
jle
pusha
and
push
xchg
pop
cltd
dec
jo
es
cmc
xchg
xchg
add
in
inc
push
sbb
ffreep
lods
jo
ror
xor
addr16
jnp
jnp
xchg
es
mov
xor
xchg
adc
adc
mov
xchg
out
movsb
and
or
sarb
cltd
es
xor
test
lds
or
mov
sub
push
adc
bound
call
dec
scas
mov
mov
cmp
bound
sub
jge
pop
xchg
sti
hlt
loope
fsts
push
cmp
xchg
test
jnp
ss
mov
push
push
aas
cmp
sti
lods
repnz
sbb
cmp
xor
leave
and
fwait
loopne
icebp
jno
arpl
ds
mov
mov
xchg
out
ss
jo
mov
or
add
push
mov
ja
mov
push
pop
out
ja
lods
sub
aad
loope
mov
push
rolb
mov
xor
lds
cli
sti
das
mov
arpl
into
or
mov
imul
pop
and
mov
loop
fbstp
sbb
add
push
je
dec
loop
jb
fstps
jb
ja
sbb
inc
scas
ret
mov
fwait
in
mov
jne
inc
scas
faddp
push
out
mul
popa
in
pop
dec
int3
leave
xchg
xor
push
sha256rnds2
loopne
xor
into
mov
addr16
in
jne
mov
push
dec
jnp
enter
fidivs
bnd
or
and
dec
add
lret
clc
pop
nop
div
rcll
test
iret
push
and
jb
aas
cmpsl
push
sbbl
xor
gs
aaa
testb
shrb
jle
add
inc
dec
daa
repz
mov
mov
xor
cwtl
jb
lret
ljmp
ljmp
xchg
add
push
mov
cmp
pop
xor
inc
js
pop
mov
cld
leave
sahf
mov
and
pop
test
out
mov
dec
push
nop
jg
enter
mov
adc
jns
and
mov
lret
add
testl
sub
sbb
pop
adc
ffreep
dec
xchg
into
cmpsl
scas
jbe
xchg
dec
push
lahf
sbb
imull
leave
and
adc
and
into
stc
mov
std
pop
enter
jo
stc
pop
mov
mov
rorb
pop
and
and
mov
mov
scas
dec
stos
rorl
ljmp
lock
xor
icebp
fcomps
mov
icebp
ffree
ret
cmp
popf
add
sbb
out
aas
push
call
inc
mov
sbb
andb
insb
cmpb
jmp
aam
shl
push
jg
cmp
and
movb
or
fstpt
rcrl
mov
cmp
and
je
adc
inc
inc
ss
pop
jb
jne
dec
gs
fistpll
in
leave
test
out
sbb
stos
xor
push
cmp
mov
test
cltd
xorb
loop
jns
pusha
cmp
fcmovbe
xchg
mov
mov
ret
xor
mov
mov
sub
jmp
mov
xchg
call
out
xchg
sbb
mov
dec
enter
int
mov
pop
ret
imul
jbe
sbb
cwtl
cmpsl
aam
lods
mov
addb
jae
inc
ja
out
lret
xlat
xor
jmp
and
or
cli
sub
inc
inc
add
popf
add
cmp
fnstenv
sub
negl
mov
mov
pop
and
adc
adc
or
js,pt
hlt
push
and
bound
out
pop
loop
adc
nop
insb
mov
mov
out
sub
sbb
dec
cmp
test
in
dec
lea
stos
mov
jo
dec
mov
ja
mov
ds
inc
xor
push
pop
out
push
mov
xchg
loop
outsl
jae
mov
adc
gs
push
les
mov
aam
loopne
or
dec
or
mov
jbe
jnp
loopne
lret
ljmp
repz
in
je
adc
lahf
mov
loope
sahf
fwait
cs
js
daa
pop
dec
jmp
iret
test
mov
push
mov
or
pop
mov
mov
shll
cmp
icebp
test
repz
stos
push
ja
adc
xchg
mov
lea
inc
add
cmp
ret
xor
test
jmp
out
mov
and
movsb
jp
mov
lret
jae
add
mov
cmp
popa
testl
stc
and
in
out
and
mov
shl
xchg
nop
xor
movsb
sbb
inc
push
push
pop
pop
mov
mov
xchg
mov
jnp
mov
addr16
ljmp
movsl
loop
mov
push
jns
or
push
sbb
out
pop
clc
and
sbb
jg
push
pop
out
mov
cmp
xlat
insl
push
or
fidivrs
pop
push
subl
cmp
inc
push
and
cmc
movsb
mov
add
les
gs
pusha
insb
jne
sbbb
add
push
call
mov
and
orl
cmp
cmp
daa
jg
jp
mov
mov
ja
sbb
sbb
adc
xor
jp
sbb
sub
test
jg
cmc
inc
xchg
dec
jns
lods
sbb
or
mov
pop
mov
sbb
and
jae
lock
sub
mov
fsubrp
mov
mov
aad
addl
fdivrl
inc
incl
mov
adc
gs
fdivs
dec
cmp
or
inc
and
call
push
fwait
push
dec
out
cltd
call
cs
fstp
push
test
sub
repnz
jg
dec
jnp
adc
mov
testb
repz
mov
out
add
xchg
pusha
gs
ds
pop
sub
pop
jge
test
push
jae
add
inc
aad
ja
jbe
les
cli
sub
mov
mov
mov
xchg
rol
inc
cltd
ds
mov
jb
sahf
jp
add
cs
imul
add
loope
in
aas
xor
lock
or
insl
mov
arpl
ret
bound
sub
movsb
push
je
cwtl
andb
mov
push
loopne
push
or
cs
lret
test
cli
test
sbb
ud0
push
out
adc
lret
outsl
sbb
les
mov
mov
scas
aad
lds
hlt
ret
lcall
pop
cld
jl
sub
int
cmp
test
in
icebp
and
or
daa
shrb
xor
jmp
stc
adc
test
outsb
push
stos
dec
scas
sbb
shlb
es
dec
cwtl
aad
int3
test
lods
ss
sbb
shlb
pminsw
dec
lea
dec
or
sti
cld
mov
mov
fadd
int3
xchg
outsl
sbb
xor
dec
mov
jecxz
mov
push
lcall
into
bound
cld
jne
mov
rclb
mov
ds
inc
in
loopne
inc
insb
jnp
inc
popa
stos
mov
dec
js
mov
inc
cmp
cld
in
dec
insb
test
hlt
or
in
shrb
stc
js
dec
sti
and
dec
jns
ljmp
jecxz
bound
jno
data16
or
cld
lds
leave
jp
xchg
daa
in
cmp
or
add
xchg
sti
pop
es
inc
imul
jnp
stos
xchg
jle
sti
clc
jbe
imul
jne
mov
aad
sub
pop
outsl
or
iret
in
scas
mov
xchg
push
xchg
add
sahf
pop
dec
push
in
pop
popa
subb
lods
aad
orl
arpl
aaa
cmp
flds
call
sbb
jbe
or
push
in
shrb
push
or
add
push
push
mov
frstor
jno
jge
cmp
jg
loop
data16
mov
jmp
in
add
int3
call
lods
and
push
loop
jp
xchg
fdivs
dec
cmp
jge
pop
pop
cld
call
popf
test
add
popf
arpl
xchg
lcall
pop
ss
jle
fidivl
pop
sub
mov
xchg
aam
cli
or
jl
in
add
pop
out
cmpsb
popa
push
mov
push
das
pop
jae
mov
in
jmp
xchg
and
cli
xchg
lods
xchg
mov
mov
pusha
cli
jns
lcall
mov
icebp
dec
test
xor
sbb
insl
mov
jnp
fldt
xchg
mov
out
xchg
hlt
aad
cmc
or
mov
mov
shll
mov
in
or
mov
add
mov
aas
xorl
cld
pop
lcall
test
push
inc
sti
xchg
lds
in
loopne
mov
loopne
idivb
out
iret
mov
js
add
mov
pop
fldenv
daa
popa
adcb
fidivrl
and
mov
jge
mov
aad
xor
leave
dec
icebp
dec
add
aaa
pushf
stc
push
sub
cli
or
out
pop
mov
pop
jbe
adc
addb
jl
dec
sub
mov
aaa
loope
and
aas
cmp
or
pop
jns
test
cmc
mov
adcb
dec
push
mov
fs
mov
mov
push
mov
pop
adc
arpl
push
ret
mov
xchg
cli
js
movl
leave
int
shll
mov
fists
in
cltd
rcr
neg
add
add
ret
lahf
mov
mov
sbb
fimuls
pusha
repnz
sbb
faddl
mov
pop
imul
sahf
roll
pop
aas
inc
mov
mov
cmp
add
rcrl
adc
jecxz
xor
into
add
push
mov
add
sub
cs
or
push
adcb
xchg
sbb
add
aad
mov
xchg
nop
sub
cmp
nop
jnp
add
xor
shlb
cmpsb
jbe
jno
mov
cmp
hlt
sub
mov
je
stos
dec
ss
repnz
enter
andb
movsb
jmp
cmp
add
xchg
popa
lock
pop
mov
jns
mov
scas
mov
mov
icebp
mov
popf
xchg
fsts
rcrb
lahf
xchg
pop
mov
and
ret
or
or
dec
mov
jb
dec
xchg
mov
pop
xor
pop
adc
mov
shr
sbb
cmp
scas
stc
pusha
mov
fcmove
pop
add
pop
cs
pop
mull
xchg
negb
mov
dec
xchg
sub
rol
jbe
mov
icebp
cs
fldl
jecxz
std
xchg
jecxz
xchg
or
int3
ret
repnz
stos
in
fmul
mov
xchg
je
xchg
les
push
int3
mov
pop
repz
std
mov
sub
daa
mov
and
mov
int3
movsl
in
dec
imul
mov
and
pushw
out
push
mov
inc
inc
xchg
test
mov
test
mov
cwtl
ss
lret
xchg
ret
sub
jb
xchg
sbb
inc
jl
dec
cltd
dec
xlat
xlat
add
jb
lahf
and
or
ror
sbb
xchg
inc
jle
cli
jl
jg
in
lcall
lret
sti
shrb
jno
xchg
cmc
jae
mov
mov
pop
xor
jns
fdivp
icebp
clc
loope
sbb
outsl
jg
adc
xor
xor
outsl
jb
imul
outsb
pop
lods
fisubl
scas
add
cli
sbb
or
push
cmp
addl
adc
or
jmp
gs
stos
mov
cmc
push
and
out
nop
icebp
pop
fbld
push
sub
cld
loop
jbe
negb
jne
cmpb
mov
loopne
ja
sti
cli
sahf
stos
in
inc
sbb
es
pop
sbb
repz
push
mov
add
adc
out
sub
enter
mov
sbbb
mov
pop
xchg
aaa
adc
add
repnz
fistpll
es
fildll
mov
sbb
inc
cwtl
xlat
in
push
pop
xchg
lock
arpl
and
cmp
and
adc
lock
ret
data16
movsl
and
cmp
insl
mov
or
cmpsb
mov
push
lods
or
jecxz
lods
xor
cmc
mov
insb
pop
pop
scas
and
data16
adc
jge
xchg
push
cld
rorl
jecxz
sub
fsub
mov
and
nop
cmp
scas
mov
xchg
test
mov
aaa
dec
push
mov
sbb
or
pop
mov
jp
sbb
shrd
push
pop
mov
push
and
xchg
cmp
xor
bnd
pop
dec
lahf
mov
xor
inc
idivl
or
or
popf
mov
add
fwait
fs
dec
int3
push
pop
cmp
es
sbb
cmp
cwtl
popa
int3
movsb
push
inc
add
sbb
negb
or
mov
add
pusha
scas
jb
shrl
or
mov
mov
out
inc
loope
push
fsub
push
mov
clc
rorl
mov
pop
popf
in
insb
adc
shll
lcall
push
mov
test
dec
stos
pop
pusha
negl
adc
cmp
mov
insl
imul
sahf
or
int
clc
repz
xchg
inc
jl
xlat
jmp
mov
add
mov
mov
clc
sub
add
aaa
ret
inc
movsb
fs
or
mov
sahf
mov
lahf
fsubl
shrb
jno
xchg
call
shl
out
and
xchg
adc
into
sbb
inc
data16
jg
cli
out
lret
cmp
xchg
mov
push
jne
sti
mov
test
mov
popa
xchg
mov
push
mov
rcrl
xchg
loopne
lods
adc
jmp
dec
sub
lahf
test
imul
cmpsb
xchg
ds
fwait
in
fidivrl
or
xchg
push
jae
outsb
imul
xchg
pusha
cs
fsubrl
call
pusha
sbb
cs
cmp
lock
xchg
call
sbb
movsb
testb
cmc
jle
in
test
std
cmp
addr16
outsl
hlt
dec
pushf
in
xchg
in
pop
ficompl
fs
pop
cmp
dec
push
mov
fdivl
loope
aaa
push
shrl
mov
and
sahf
insb
xorb
jmp
test
mov
imul
adc
shlb
mov
jns
cld
pop
mov
mov
jge
scas
int
call
inc
pop
scas
ljmp
stos
dec
push
popa
rorl
cmc
repz
fcoms
sahf
pop
popa
pusha
bound
adc
push
enter
sub
push
dec
add
je
xchg
je
mov
mov
dec
add
int
insl
cs
fdiv
pop
inc
xchg
mov
push
test
jae
push
pop
std
test
dec
xor
push
adc
nop
push
pop
jnp
mov
inc
cmp
lods
xchg
ljmp
jb
mov
xchg
hlt
stc
xchg
rcl
dec
cmp
sub
fdivrs
mov
call
and
sahf
mov
cmp
cwtl
jae
outsb
shrb
popf
xlat
cmp
cmc
scas
cmpb
push
cwtl
jg
bound
fs
int
push
xor
popa
sarb
aas
add
addr16
lret
mov
sub
mov
mov
mov
sbb
cltd
iret
xor
in
sti
enter
add
test
loop
add
fisubrl
daa
pop
jp
inc
xchg
push
cmpsl
sub
mov
sarl
mov
loop
out
push
jnp
xor
xlat
sub
scas
cltd
pop
xchg
mov
aas
mov
mov
or
pop
fwait
pop
inc
sarb
push
mov
jno
fildll
push
aas
fildl
repnz
push
inc
nop
adc
cmp
sbb
sbbl
xor
inc
cs
pop
rcr
xchg
gs
add
inc
adc
xor
dec
mov
pop
ds
cmp
and
mov
inc
hlt
divl
popl
adc
setnp
mov
mov
jns
pushf
test
and
adc
into
cmp
jecxz
jb
push
sbb
loop
sbb
pop
movsb
ret
or
cmp
clc
arpl
sarl
dec
mov
ljmp
shrd
imul
and
lods
fwait
sahf
jmp
pushf
mov
jno
sahf
mov
mov
push
mov
xor
dec
pop
dec
adc
jg
iret
stos
into
sbb
sbb
iret
ficoms
out
xchg
les
dec
les
ljmp
and
mov
in
pop
int
pop
inc
lret
fcmovnu
mov
cmp
rcll
cli
jae
pop
mov
je
roll
int
les
notb
jp
js
or
mov
add
jmp
push
in
enter
lea
mov
test
mov
sub
jl
inc
push
inc
jb
loopne
push
test
adcl
inc
insl
cwtl
or
xor
mov
andb
imul
out
push
fildl
inc
dec
inc
movsb
jecxz
and
out
outsb
pop
mov
imul
fdiv
outsl
rclb
imul
js
xchg
leave
insb
push
ss
addr16
jae
mov
xchg
daa
sahf
sbb
ret
clc
xor
or
stos
dec
push
rorb
cmp
cmc
and
adc
xchg
add
jne
adc
jmp
ret
sbb
pop
mov
pop
mov
into
mov
or
iret
pop
sbb
inc
add
cmp
aaa
repz
fwait
pop
sub
out
popf
xor
sbb
loope
mov
cmp
aas
xchg
nop
xor
stos
pop
xchg
inc
test
pop
jl
add
pushf
jle
mov
mov
stos
pop
or
jns
arpl
mov
cmp
jg
loop
mov
dec
rcll
add
dec
test
push
test
daa
mov
ds
orb
push
lcall
xor
pop
ret
ss
or
jne
ljmp
into
jle
push
dec
fmuls
aam
or
inc
and
bnd
sbb
xor
mov
ret
lret
loope
cs
inc
jl
push
sbb
mov
ljmp
repnz
xorb
fidivrl
inc
dec
es
xchg
xor
mov
push
mov
jbe
in
push
in
cmpsb
hlt
bound
loope
scas
shlb
push
fdivl
mov
dec
adc
or
dec
push
mov
inc
shll
aad
sbb
inc
cmp
push
mov
push
xchg
aaa
jg
adc
xchg
mov
mov
cld
inc
and
std
cli
and
cmp
jae
push
mov
fnsave
jno
adc
add
scas
jle
fnstcw
int3
loopne
pop
insl
aam
addr16
movsb
xor
mov
lret
fmuls
pop
jnp
sub
cmpsb
fwait
repnz
mov
scas
add
xchg
push
loopne
jp
outsb
pop
sub
push
inc
lods
sbb
popf
cmpl
push
dec
pop
and
xor
sub
adc
stos
jbe
sbb
cwtl
add
int3
xchg
shll
lods
inc
fwait
pushf
xchg
addr16
outsb
movsl
jno
or
scas
push
or
cmp
cmp
rcll
test
cltd
inc
and
ljmp
jne
push
push
gs
adc
mov
cmpsb
push
jo
sbb
movsb
pop
scas
lret
mov
loope
mov
lcall
add
iret
repz
vmovdqu
mov
sub
or
add
dec
mov
aad
loopne
dec
rolb
xchg
in
inc
sub
or
push
push
cmp
insl
or
fwait
pop
cwtd
movlps
pop
scas
pop
sahf
sub
and
leave
cli
std
pop
int3
mov
addr16
lock
mov
mov
add
lds
aas
ds
mov
inc
arpl
add
scas
sbb
ret
scas
jle
rcrb
ja
jp
movsb
push
xchg
xchg
inc
push
xor
incb
test
aam
ficoml
imul
add
and
std
lret
xchg
add
int3
add
sub
daa
pop
orb
imul
test
aam
xor
out
shl
je
notb
mov
imul
mov
fwait
jns
or
mov
push
popa
sbb
pop
xor
negb
pop
bound
fistpl
push
xchg
mov
mov
iret
outsb
mov
xchg
into
lcall
mov
jp
pop
push
xor
push
sbb
int
fldcw
shr
data16
repnz
pop
cmp
ret
push
dec
xor
lea
notl
push
cmp
jecxz
loope
sbb
mov
pop
push
push
xor
stos
xor
fildll
inc
fstp
jno
add
lcall
or
sbb
pop
ds
sub
scas
ret
sahf
repnz
leave
mov
xor
xchg
push
xchg
inc
adc
fdivl
test
push
enter
pop
push
xchg
mov
pushf
xchg
and
imul
mov
stos
in
mov
loopne
mov
sbb
int
loop
das
cs
cmp
insl
xor
xchg
lret
mov
fldl
xchg
into
sarl
dec
int3
push
imul
ret
cmp
shl
in
and
aad
test
ret
xor
out
cld
jle
pushf
cld
inc
ret
adc
jge
lret
icebp
cmc
add
faddl
dec
mulb
pop
pusha
or
inc
aam
fstps
cltd
push
daa
aaa
rcrl
sbb
test
xchg
jbe
adc
jge
dec
mov
and
xchg
clc
push
mov
clc
jge
cmpsl
mov
adc
jle
jmp
sahf
insl
sub
xchg
and
popa
arpl
sbb
nop
inc
pop
pop
jg
sub
xchg
sbb
sbb
push
jg
jecxz
in
sbb
and
jg
jge
fbstp
fistpl
femms
test
jle
mov
sub
cmp
push
test
pusha
mov
xorl
adc
ss
sbb
sahf
add
pop
inc
adc
lods
mov
daa
pop
and
inc
dec
cmpb
loopne
out
cmpb
leave
ljmp
fidivl
xchg
loope
mov
cld
dec
lds
call
fnstenv
in
out
or
cli
add
add
push
mov
scas
sahf
mov
dec
ds
push
add
incl
adc
inc
jns
xor
cmp
cmpsb
pusha
mov
add
repnz
add
adc
pusha
jle
push
fisubrs
insb
jecxz
cltd
pop
jp
sbb
int
mov
mov
fnclex
pushf
pushf
imul
push
dec
mov
std
loopne
or
jae
lcall
out
inc
inc
fadds
xchg
imul
dec
popa
lock
repnz
out
aam
rolb
sahf
shrl
pusha
mov
cmpsl
fs
cmp
pop
imul
icebp
mov
pop
pop
jo
es
int
dec
lea
mov
push
into
ds
dec
jp
xor
aad
lock
add
push
test
lcall
sub
ret
test
shlb
movsl
xor
adcl
hlt
lods
jnp
addr16
pop
pop
add
dec
mov
aas
dec
push
shlb
int
aam
sub
xchg
mov
add
xchg
orb
jbe
std
cmpsl
mov
inc
lea
jg
pop
lcall
mov
sub
push
mov
lret
and
inc
in
mov
fs
xchg
loope
push
push
addr16
fwait
into
test
xchg
jbe
not
dec
iret
cmp
pop
push
and
xor
push
sub
push
jmp
jne
or
cmpsl
xchg
fwait
cmpsl
pop
aas
push
les
dec
repz
fwait
or
lods
fmuls
out
mov
pop
and
cmp
cld
jg
mov
lds
adc
out
nop
fucomip
fnstsw
cld
cmp
add
jl
mov
pop
clc
aaa
mov
adc
xor
lahf
cli
scas
sub
adc
testl
loopne
in
aam
or
popa
adcb
fisubrl
scas
sbb
or
xor
mov
dec
sbb
jno
out
push
mov
data16
fsubl
add
lret
inc
dec
dec
mov
scas
fisubs
inc
js
ja
xor
and
push
add
xor
push
sbb
cmp
sub
jo
xchg
pop
iret
js
stos
into
aam
in
and
cld
ds
int3
or
adc
mov
pop
mov
cmp
enter
and
push
jge
in
mov
push
xor
or
pop
pop
jg
or
out
lea
arpl
arpl
inc
sub
xorb
xchg
inc
push
mov
hlt
sahf
dec
ret
cmpl
sahf
pop
jbe
ret
or
lds
cmpsb
push
pusha
jne
dec
imul
jl
cltd
js
push
mov
or
and
add
and
shl
add
aas
fwait
cmp
shll
in
inc
pushf
jbe
sub
mov
pushf
shll
ficoml
inc
mov
pop
xchg
hlt
dec
mov
and
push
fmull
mov
into
rcll
and
xlat
push
addr16
dec
jle
cmpb
mov
es
push
lock
aad
adc
mov
lea
mov
mov
gs
outsl
cli
jg,pt
mov
pop
jmp
cmp
sahf
sbb
push
movaps
xchg
movb
sbb
and
dec
sti
pop
inc
mov
ret
adc
push
add
nop
mov
mov
and
bound
outsl
xchg
fnsave
inc
bound
ds
jne
cmp
sub
dec
movsl
sub
fstpt
lret
cs
movsl
jbe
ss
xor
xchg
ja
mov
fsubrs
xor
xor
mov
jns
pop
and
fisubrl
mov
mov
lods
daa
xchg
jne
jne
add
ret
sahf
and
mov
inc
sbb
inc
ja,pt
or
xor
pop
pop
repz
nop
add
gs
cmp
pop
mov
or
iret
push
push
ret
push
outsl
xor
mov
inc
add
loope
repz
stos
test
int
and
gs
inc
jbe
in
xchg
sub
mov
stos
jmp
aad
sub
fs
fildll
ljmp
aad
push
cmpsl
adc
les
test
push
mov
lret
and
rcrb
cmp
mov
pop
adc
rcl
test
mov
mov
sti
loop
stc
xlat
ret
mov
fisttps
imul
jns
cltd
fmulp
mov
scas
sub
ljmp
jne
out
sbb
js
adc
or
push
fdivrl
je
mov
cli
aad
push
std
cmpsb
add
xlat
xor
dec
les
and
push
pop
inc
adc
out
mov
jns
int3
lret
xchg
mov
loop
push
xchg
repnz
xchg
mov
mov
and
mov
bound
cmpl
pusha
fbstp
imul
or
mull
mov
and
cmp
enter
divb
outsl
sbb
cltd
inc
jmp
cmp
pop
test
jmp
stos
out
das
cld
add
push
data16
inc
shrl
rcl
out
pop
xchg
out
icebp
outsb
dec
sbb
mov
inc
push
mov
lret
sub
xchg
jg
add
jno
xchg
ret
push
or
lods
cmp
ljmp
push
aas
push
sub
jmp
push
shll
std
jbe
push
adc
pop
push
push
mov
out
xchg
aad
cmpsb
pop
lods
fsubl
imul
cwtl
and
mov
sbb
stc
loop
icebp
fsts
sub
loopne
mov
adc
daa
jle
xchg
loope
mov
or
or
scas
fisubs
pusha
push
and
cmp
fcomi
outsb
jae
pop
and
push
or
pop
call
pusha
or
add
xchg
scas
lcall
jae
dec
data16
lahf
add
mov
and
push
sti
dec
dec
sbb
xor
jbe
fadds
push
out
outsb
pop
push
out
pop
adc
popf
jo
mov
pop
out
clc
xchg
push
xor
mov
mov
outsl
sbb
inc
out
or
ret
pop
in
pushf
and
dec
adc
popa
xchg
popa
push
mov
mov
push
cmp
pop
outsb
jnp
push
insl
js
outsl
mov
and
sbb
mov
pop
jne
push
pop
fs
ja
sbb
sub
mov
mov
hlt
pop
out
nop
and
add
fdivrl
bound
fmulp
xor
mov
dec
call
xchg
and
cmpsb
gs
aaa
js
jg
mov
push
cld
aaa
sbb
test
scas
mov
add
in
out
mov
ljmp
mov
jle
fwait
in
aaa
push
or
mov
loopne
xlat
bound
jle
cmp
cmp
sub
clc
cmp
sbb
dec
rcll
adc
test
gs
ds
mulb
out
fwait
in
sbb
add
pop
push
mov
pop
call
movsb
in
ja
stc
xchg
jmp
nop
shrb
push
and
push
mov
aam
js
pop
mov
cmp
mov
fdivrl
jle
arpl
test
call
outsl
add
add
xor
xor
cmp
add
ret
cmp
int
and
dec
js
or
cltd
insl
sbb
xchg
xor
jg
mov
addr16
in
hlt
cmp
dec
jnp
add
inc
out
push
nop
outsw
push
mov
inc
wbinvd
inc
shll
or
in
adc
pop
lock
mov
jp
mov
aaa
dec
repz
adc
std
and
fcoms
inc
stc
sti
sub
pop
cmp
mov
dec
cmp
js
dec
lock
out
mov
add
adc
insl
pop
inc
pop
out
fcmovu
sbbl
or
stc
push
aaa
and
mov
ficompl
cmp
pop
inc
push
cmpsl
lahf
pusha
jns
xor
fiadds
inc
sbb
mov
lcall
in
out
mov
aaa
xor
xor
daa
lds
test
call
dec
xchg
lock
push
cmp
int
lret
xchg
jl
fsub
mov
sti
in
mov
mov
and
mov
push
jnp
ret
test
mov
cmpsb
xchg
sbb
add
push
sub
mov
jg
fldt
aaa
inc
mov
pop
cld
repnz
insb
rcrb
icebp
in
add
mov
sbb
es
cmpsb
cwtl
cmpsb
sub
cmp
push
inc
xchg
inc
mov
mov
lock
pushf
jbe
fsubr
mul
jns
inc
clc
jmp
inc
add
mov
movsb
shrl
push
lahf
mov
test
xchg
cmp
scas
in
lret
xchg
lods
shl
mov
out
aaa
or
out
out
popf
cmc
pop
mov
iret
lret
pop
or
ret
cmp
das
popa
loop
fsubl
mov
insl
imul
cmp
push
mov
mov
jbe
std
cs
int3
pop
fcomps
xor
mov
sbb
adc
mov
xor
mov
out
pop
mov
aaa
das
push
iret
pop
repz
cmp
hlt
xor
jnp
mov
into
jp
dec
pop
fists
cld
cmp
in
mov
inc
subl
mov
out
aas
popa
cmp
out
dec
mov
mov
das
jo
or
sub
or
add
shlb
paddw
adc
lods
psrlw
cwtl
push
loopne
imul
xlat
dec
pop
js
test
and
or
arpl
cli
adcb
jge
cmp
scas
mov
add
mov
cli
stos
and
outsb
push
mov
mov
xchg
cli
cmc
pop
xor
shl
jecxz
jg
fcompl
xorl
in
mov
fcmove
arpl
je
push
push
lret
mov
ret
mov
or
daa
jb
push
lods
int
cmp
std
sbbb
jecxz
sub
aas
xlat
cmp
clc
push
test
mov
aas
rorb
shrl
or
ljmp
xchg
and
pop
jne
jp
sbb
pop
ret
pop
sub
mov
sets
aaa
test
sbb
pop
mov
mov
xor
add
pop
pslld
xor
push
sub
cli
rolb
jl
cmc
pop
jecxz
mov
lock
and
mov
lahf
mov
fwait
jmp
mov
bound
hlt
jns
lods
jns
mov
inc
popa
test
ss
or
or
dec
das
or
fisttpll
mov
or
insl
out
mov
xor
jnp
mov
imul
out
and
movsl
lcall
insb
xchg
jmp
push
lret
aaa
aas
mov
xchg
pop
imul
jns
jbe
and
dec
xor
in
out
mov
stos
out
sbb
cld
pop
xor
inc
sbb
fdivr
dec
rcll
ret
cmp
cmc
mov
and
mov
aas
sub
addr16
fdivrp
xchg
neg
fs
test
or
leave
fildl
or
cltd
jae
enter
xchg
orb
xchg
aaa
jmp
icebp
insl
lret
pop
dec
sbb
pop
add
jmp
and
mov
push
pop
mov
ds
aaa
std
js
into
xchg
scas
or
pop
iret
pop
addr16
popf
scas
add
les
fildl
jno
xor
icebp
les
lcall
push
sub
es
and
ret
inc
stos
xor
pushf
cwtl
or
cmp
add
outsl
jae
out
lds
test
push
out
out
or
push
or
dec
fiaddl
rcrb
mov
stc
jae
add
movsl
insb
lods
cli
decl
add
dec
or
cmp
xlat
pop
cmpsb
push
push
loope
and
mov
pop
pop
mov
jbe
lret
cli
or
or
fcomp
les
sbb
decl
jl
cwtl
in
loope
cmpsl
dec
in
je
test
or
outsl
fnstenv
loopne
add
sarl
icebp
and
sbb
insb
dec
test
push
int
rcrb
scas
push
add
in
add
stos
std
xchg
cmpsb
inc
pop
mov
icebp
or
mov
test
add
push
jnp
bound
mov
in
bound
cli
les
test
cmp
mov
addl
inc
imul
cmpsb
mov
into
fcompl
dec
test
mov
js
or
movsl
data16
shl
mov
popf
jbe
loop
and
cmpsl
les
pop
cmc
sbb
or
outsb
pop
sarl
leave
shlb
xchg
gs
int
xchg
dec
xchg
jns
push
imul
cli
and
in
lret
hlt
sub
sub
push
addr16
sub
sar
sti
jnp
xor
lods
pop
mov
push
das
and
jecxz
faddp
push
lods
ss
adc
in
sub
pop
je
mov
aam
or
add
ficomps
jmp
and
test
fwait
nop
sbb
mov
xchg
xchg
out
ljmp
ss
sbb
mov
cmpsl
lret
scas
fidivs
adc
jno
dec
std
dec
gs
push
lea
mov
lahf
cmp
xchg
push
cmp
sub
shrl
or
sub
sbb
pop
pop
loop
mull
push
mov
pop
insl
scas
lea
inc
lahf
outsb
negl
pop
nop
jle
pop
adc
cld
fstpt
push
andb
sahf
cmp
mov
lods
cmp
dec
enter
mov
push
pop
lods
adc
pop
out
jle
add
mov
sbb
mov
mov
jb
dec
lds
inc
or
or
jae
lahf
sarb
jg
mov
or
xor
cmp
aam
jb
inc
and
jp
call
mulb
icebp
jb
mov
push
pushf
add
loop
ret
xlat
ret
addr16
xchg
cltd
jg
sub
mov
popf
jl
cmp
cld
pop
out
stos
adc
pop
aas
or
sub
or
sarb
cmp
loopne
push
dec
aam
mov
sbb
es
add
fldt
inc
inc
les
or
sub
out
jne
inc
jne
adc
jp
cmp
jg
stos
and
fsubs
lds
sbb
mov
adcb
scas
push
fwait
stos
lret
or
pop
sub
mov
sar
push
mov
in
imul
or
iret
andl
mov
mov
aas
shlb
dec
pop
sbb
adc
xchg
negb
andb
adc
cwtl
loop
sub
into
imul
lock
lcall
outsl
enter
push
xor
outsb
or
imul
pop
popl
add
or
in
mov
mov
addr16
xor
inc
fldenv
ret
sarb
int3
lock
sbb
add
xor
int3
je
jo
enter
scas
xor
mov
mov
lret
es
pop
sbb
or
les
inc
mov
pop
inc
push
in
push
sarl
sbb
sbb
or
adc
test
sub
outsl
jmp
inc
mov
popa
loop
xchg
sbb
test
ret
jp
in
inc
aaa
je
sbb
out
nop
push
fcoml
filds
dec
adc
imul
int
lds
decb
jae
bsf
cmpsl
imul
mov
jecxz
lret
mov
cmp
nop
lcall
rcll
popa
fstpt
and
sbb
daa
lcall
mov
push
movsb
aam
sub
mov
lcall
xchg
das
shlb
cmp
fidivl
aad
sarb
in
out
cmp
jne
xchg
daa
subl
fwait
cld
movl
cmpsb
pop
jg
ret
xor
mov
cld
jae
mov
daa
cmpsl
stos
mov
sub
cmpsl
in
jnp
test
mov
inc
push
mov
stos
mov
pushf
mov
dec
mov
shll
xor
pop
scas
cmp
mov
cwtl
aam
push
inc
int3
xchg
sti
shll
rol
call
xor
sti
adc
sub
stos
push
lcall
movsl
pop
cld
aad
sbb
mov
push
add
xchg
and
shrb
test
and
mov
sahf
ret
or
adc
jns
lds
outsl
fcoms
mov
mov
mov
or
popa
dec
mov
movsl
dec
push
fistl
and
mov
in
add
xchg
and
lock
mov
das
pusha
leave
movsb
outsl
test
int3
mov
mov
mov
add
das
out
stc
icebp
pop
xor
sti
enter
rcl
and
lea
cli
xchg
jg
fidivs
cld
outsb
sbb
cmp
sub
or
loopne
mov
add
lret
in
or
mov
inc
out
inc
fs
push
mov
push
pop
sub
and
sarb
push
jle
sub
mov
pop
sub
lret
lret
idiv
inc
dec
push
dec
mov
cli
jg
push
fisttpll
outsb
test
adcl
xchg
sbb
add
pop
fidivs
jns
sbb
test
xor
movsl
dec
jo
clc
daa
int3
or
dec
xchg
xchg
mov
adc
addl
jb
xor
xor
mov
dec
push
inc
or
cmp
movsl
sahf
outsl
mov
ret
and
std
les
in
subl
cmp
or
je
lds
fsts
jl
andb
aam
pop
pusha
addr16
repnz
adc
shlb
mov
enter
cmp
xchg
sub
mov
xchg
or
fs
lods
lret
sub
jle
mov
jmp
and
cltd
dec
dec
jge
sahf
or
adc
add
addr16
lods
mov
sub
push
push
ljmp
daa
mov
adc
cmp
sub
test
loope
mov
out
lods
mov
push
pop
push
loopne
out
loopne
lret
into
xor
repz
cmp
arpl
out
dec
test
addr16
nop
enter
lds
jb
mov
inc
xchg
test
xor
xor
cmp
jbe
lret
shlb
and
movl
int
outsb
ss
add
outsl
out
pop
testb
int
iret
cmp
rcr
mov
inc
out
fdivl
mov
and
aas
sahf
add
add
xor
xor
inc
call
xchg
popa
dec
aaa
mov
dec
jg
cmc
mov
inc
inc
popf
lcall
or
adc
stos
push
dec
mov
sahf
mov
and
popa
xor
sub
stos
fists
cltd
je
add
push
call
lock
cwtl
sub
or
mov
xchg
adc
testb
dec
nop
lea
mov
fscale
push
ss
lds
jno
xchg
inc
fnstenv
inc
sbb
movsb
insl
jne
cld
adc
pop
jns
fwait
aad
mov
out
sbb
jl
cmp
fnstsw
sbb
ret
sub
outsl
shll
call
cmpsl
shr
fsubrs
loop
fld1
repz
repnz
pop
adcl
out
pushf
add
cmpsb
mov
sarb
add
aas
pop
fwait
mov
xor
add
push
lahf
dec
xchg
dec
jo
call
mov
cltd
mov
lahf
mov
scas
mov
sub
sub
shrl
scas
or
movsl
pop
cmp
sbb
mov
mov
mov
stc
outsl
js
lock
addr16
fwait
add
push
cwtl
mov
inc
jbe
in
sahf
inc
xchg
cwtl
jecxz
iret
sahf
stos
out
push
loopne
mov
sahf
in
pusha
dec
jno
xchg
das
jp
arpl
outsb
and
xchg
lahf
push
sub
cld
shll
mov
pop
cmp
push
sub
push
pop
fsubrs
out
ret
repz
scas
out
icebp
sub
jp
mov
test
push
xor
dec
lock
mov
ss
cmp
and
push
push
mov
mov
ret
or
jp
xor
imul
inc
cltd
dec
les
int
pop
dec
push
loop
push
lcall
ss
mov
dec
sbb
repz
mov
pop
or
out
stc
dec
insl
int
and
incl
js
pusha
cli
fwait
mov
mov
jae
push
xchg
cmc
or
mov
pop
inc
test
popf
jae
test
cmp
cmpsb
out
cmp
neg
cmp
or
cmpsb
adc
xor
mov
addb
jg
adc
fistl
xor
pop
rcll
int
add
and
mov
inc
mov
div
movsl
lahf
int
not
lea
outsb
pop
mov
cwtl
loopne
push
pop
xor
adc
push
add
mov
insl
addb
and
stos
sbb
mov
lret
subb
push
scas
repz
ljmp
dec
mov
out
lods
repnz
xlat
jecxz
in
push
lock
lcall
cltd
js
push
push
loopne
rcr
addr16
insb
scas
imul
ds
add
mov
rorb
bound
mov
dec
cmp
ss
jmp
std
repz
mov
lahf
out
jae
adc
dec
fwait
and
xor
and
sbb
jbe
mov
jle
lock
jo
repnz
sbb
in
icebp
out
test
pop
jae
scas
fistl
sub
popf
pop
test
das
test
or
add
dec
mov
iret
sbb
sbb
insb
pusha
in
mov
rclb
xchg
movsl
mov
cli
stc
or
bound
jle
add
clc
aad
cmp
cmc
dec
scas
pop
mov
repnz
cmpsl
jo
movsl
loope
jmp
adc
mov
bound
cmp
in
mov
push
mov
xchg
inc
sbb
aaa
mov
push
in
push
pop
sarb
js
xor
add
cmpsl
dec
cmp
popa
popf
cltd
xchg
jbe
adc
inc
shl
js
rolb
testb
out
out
cmp
call
sub
insl
sahf
cwtl
xchg
xor
push
jmp
lods
hlt
jmp
jne
fmull
mov
iret
mov
clc
mov
and
shlb
popf
aas
arpl
xchg
pushf
cwtl
dec
inc
sbb
insl
movsb
mov
test
test
fisubl
or
in
into
xchg
mov
pop
mov
and
icebp
shlb
std
add
and
insl
mov
mov
pop
add
push
icebp
stos
cmp
arpl
mov
outsb
mov
pop
push
hlt
js
push
xchg
mov
fcompl
stos
pop
and
in
add
insl
fisubl
mov
jle
sbb
add
ss
jae
add
or
clc
xor
push
rcl
movsl
cld
enter
mov
cmp
sbb
or
and
mov
push
stos
jle
rolb
or
jge
push
xor
fistpll
mov
pop
mov
mov
pushl
pop
dec
int3
repnz
les
mull
dec
pusha
movsb
loope
add
sarl
xor
pop
or
adc
test
pop
sub
mov
ds
pushf
push
mov
addr16
xchg
ret
outsl
dec
push
test
mov
and
inc
jnp
adc
inc
das
mull
mov
das
or
mov
loopne
mov
lret
add
mov
sti
test
cmpl
fildll
adc
test
add
push
jne
pusha
xor
jmp
sbb
leave
dec
out
push
xor
int3
pop
mov
mov
int3
icebp
in
and
movsb
jnp
cld
cs
ja
xor
test
rorb
in
xchg
mov
mov
lock
dec
ret
cmc
inc
aas
dec
or
inc
dec
hlt
mov
int
xlat
mov
dec
dec
dec
mov
int
lods
mov
add
lea
mov
inc
mov
xchg
jmp
andb
test
mov
clc
inc
or
lcall
pushf
ljmp
mov
jne
add
test
jp
inc
push
push
in
jg
and
add
xor
shlb
jns
jl
dec
sbb
in
mov
inc
push
jecxz
jg
jns
xorb
dec
cmc
dec
push
add
cltd
xchg
loop
cmpsb
mov
add
jno
adc
xor
pop
ja
push
fistpl
jge
or
pop
dec
pop
cli
rcrb
jbe
jg
in
inc
pop
push
mov
cli
lret
lods
rcl
rcrl
dec
dec
push
inc
lods
mov
mov
loop
andl
es
hlt
sbb
xchg
out
cltd
xchg
inc
negb
jno
mov
and
mov
enter
lds
adc
sub
jo
repz
jp
push
idivl
les
decb
xchg
call
pop
xchg
xlat
cs
cmpsl
push
mov
lahf
test
lods
xor
roll
div
sti
icebp
sbb
mov
aas
pop
sub
mov
test
xor
sub
sti
cwtl
or
mov
jbe
mov
dec
pop
jne
bound
insl
or
mov
mov
xchg
fmuls
xor
imul
clc
in
notb
push
and
sub
mov
inc
push
gs
fwait
lea
out
imul
fidivrs
xor
cmp
addr16
roll
inc
leave
dec
jge
addr16
add
es
add
sete
fisubl
into
sarl
js
add
out
data16
inc
cmpb
push
xorl
pop
aas
ds
mov
and
mov
dec
or
jge
add
movsl
das
lret
and
aaa
aas
clc
fstp
sub
lods
mov
int3
lods
xor
jne
movsl
jb
fcomps
xorl
jp
ds
push
orb
inc
into
adc
test
pop
loopne
test
shll
push
pop
jmp
xlat
and
mov
test
push
mov
shll
or
arpl
or
xor
inc
lret
dec
dec
inc
dec
xor
movsl
push
sub
cmp
mov
jg
jae
test
fsubl
or
sahf
lock
xor
add
cmp
mov
and
sub
push
inc
mov
mov
pop
cmpsl
dec
push
cltd
add
imul
mov
lahf
sbb
fstpt
push
and
int
dec
jne
data16
into
pop
inc
adc
pop
imul
data16
hlt
sti
shr
insb
adc
and
arpl
aad
mov
fistpl
mov
and
fxch
jb
push
adc
cmp
dec
push
xchg
into
and
inc
or
mov
aas
stc
stos
mov
push
cmc
sbb
into
mov
pop
test
test
xor
dec
push
movaps
xor
lcall
int3
repz
jb
fsubl
jle
and
inc
cmc
push
cmc
mov
fldenv
jbe
cltd
jb
into
stc
hlt
ret
test
and
inc
push
aaa
sti
dec
es
ret
add
out
mov
insb
sti
inc
dec
scas
cmp
lcall
push
out
aaa
cli
aaa
jo
sbb
push
divl
pop
push
notb
stos
das
addr16
idivl
mov
out
push
cmovg
cmp
and
xor
fildl
xchg
clc
cs
mov
loop
scas
in
mov
popa
enter
test
sbb
mov
jl
cmp
leave
sti
cmp
jge
mov
xchg
lcall
sbb
in
mov
dec
mov
mov
pop
dec
cwtl
or
pop
sbb
shl
jbe
addr16
in
inc
je
add
adc
push
rorl
clc
push
lods
divl
add
repnz
lea
repz
and
jo
mov
add
lods
sarb
sub
push
push
mov
fcompl
repz
cmp
mov
adc
or
adc
add
idivl
jg
fwait
inc
pcmpeqb
mov
inc
cmpsl
in
dec
xor
inc
or
int
ds
mov
lods
xor
jg
adc
cmp
or
mov
mov
or
aam
mov
loop
test
popa
iret
outsl
push
xor
ss
rcr
add
lcall
xchg
imul
dec
xchg
adc
adc
push
mov
insb
jl
xor
add
scas
lret
cmc
fisubrl
nop
xchg
pop
daa
loopne
call
jle
fcmovne
aas
mov
mov
sbb
popf
jp
je
dec
push
pusha
jmp
or
jl
cmp
mov
add
daa
add
and
jle
cmp
pop
add
xor
sbb
aad
push
cmc
push
push
iret
pushf
aad
dec
mov
and
push
sbb
mov
cmp
fidivl
ret
out
clc
or
dec
idivb
sub
js
ret
xchg
xor
into
mov
pop
sbb
sub
stos
ljmp
icebp
push
or
pop
cli
test
call
and
cmp
cs
lahf
repnz
cmp
add
call
push
pop
fiaddl
push
jl
inc
cltd
xor
push
int
adc
imul
xlat
mov
test
notb
ss
adc
jmp
call
add
aad
xchg
mov
cltd
and
test
ss
adc
js
mov
mov
push
out
or
aaa
inc
sub
pop
push
xchg
das
enter
sbb
in
fldt
xchg
cmp
adc
dec
leave
cmp
out
xchg
fdivrs
add
jl
sub
fwait
addr16
and
sub
jecxz
shl
push
cmc
in
imulb
lret
mov
inc
cmp
mov
cmp
fildl
in
adc
adc
ficoms
mov
scas
push
notl
cmp
mov
mov
adc
inc
sub
and
lret
dec
xchg
xchg
insl
leave
mov
mov
inc
pop
or
push
dec
ret
mov
sbb
jae
sbb
jne
xor
sbb
cmpsb
xchg
test
clc
inc
lods
sub
stos
mov
inc
mov
inc
mov
int
or
add
in
lret
push
xor
or
adcb
mov
scas
mov
dec
jge
gs
int
shlb
add
xorl
sbb
push
in
xor
sti
aad
cmpsl
or
jp
mov
out
cld
pop
adc
xchg
xlat
pop
inc
dec
mov
and
dec
mov
pusha
sbb
xchg
dec
adc
xchg
inc
push
push
and
mov
jns
pop
sub
pop
ret
jno
cmpsl
add
in
mov
sub
adc
dec
push
jb
mov
xchg
inc
aas
enter
jbe
mov
sub
test
jo
mov
shll
hlt
inc
push
int3
xorl
bound
adc
aaa
inc
in
push
out
test
cmpsb
and
sub
add
shrl
mov
dec
int3
cmp
adc
lcall
fsubrs
mov
mov
and
jle
sbb
sub
ret
add
jge
loopnew
cli
add
xchg
push
or
mov
and
mov
lahf
outsb
std
test
cmp
mov
sub
add
shrb
out
mov
fs
pop
mov
mov
pop
jbe
movsb
pop
pop
icebp
out
lcall
inc
pop
inc
jp
fidivrs
xor
fldt
add
icebp
aam
cmp
jns
out
push
dec
stc
faddl
repnz
adc
dec
fistpl
adcb
movsb
pop
scas
mov
push
sbb
std
test
insl
sub
inc
push
es
scas
sahf
gs
fs
mov
dec
cld
iret
cmp
into
jmp
mov
mulb
adc
jle
cltd
nop
inc
xor
clc
shrb
mov
push
jo
jg
out
stc
out
aam
pop
or
popa
xor
clc
lods
push
inc
jnp
jmp
fincstp
push
cmp
scas
lret
loope
jl
call
mov
vpmulhuw
mov
sbbb
add
cmp
and
enter
mov
ljmp
loope
cmp
and
ret
je
pop
mov
aam
sub
mov
mov
jp
shll
mov
notl
adc
jg
popf
dec
pop
cmpb
lods
orb
mov
xlat
push
bound
adc
jns
mov
dec
rorb
les
sub
movsl
sbb
fisubl
adc
cmp
jns
jmp
daa
cli
dec
lock
mov
dec
sub
pop
sub
mov
jle
cmpb
jmp
jnp
enter
cmp
inc
pop
bound
inc
mov
push
roll
out
sub
jmp
das
jmp
jp
push
mov
dec
aaa
xchg
adc
iret
push
mov
fdivs
es
in
rcrl
pop
jae
xchg
cmpsl
jge
lret
mov
ret
inc
cmpsl
jno
push
daa
mov
enter
jbe
adc
jae
ret
fisttpll
clc
and
sub
in
sub
rcll
iret
mov
or
and
shl
push
mov
xchg
adc
lret
fstpt
sub
pop
sub
xchg
in
out
inc
push
sub
movsl
pop
xchg
mov
dec
pop
mov
pop
sbb
jnp
lret
xor
mov
mov
mov
xchg
inc
push
and
adc
ljmp
mov
inc
pop
je
sub
push
out
movsb
stos
inc
jl
mov
pop
and
adc
fldl
cmpsl
sti
int3
push
sub
mov
pushf
or
mov
jo
imul
sahf
adc
push
jb
repz
fidivrl
cs
loop
ljmp
pop
xor
mov
std
loop
pop
stc
aam
cmp
dec
or
xchg
pop
aam
ljmp
shll
or
fadd
iret
inc
ljmp
push
jl
xchg
mov
ret
jge
imul
cld
jae
dec
push
rolb
jno
sti
in
adc
mov
enter
or
inc
movsl
push
pop
decl
pop
lods
xchg
mov
mov
jne
xchg
mov
sbb
mov
cwtl
or
sbb
out
mov
call
lods
lret
cli
incl
stc
lcall
roll
faddp
inc
out
in
pushf
imul
cmp
dec
dec
cmp
repnz
pop
push
jne
adc
out
js
mov
and
out
xchg
arpl
lcall
int
popa
xor
inc
mov
daa
icebp
data16
int3
jbe
leave
mov
mov
sub
pop
mov
inc
push
cmp
jno
bound
je
je
orl
arpl
inc
scas
push
lahf
lahf
fsubrs
pop
popf
les
xor
mov
push
sahf
or
mov
les
cmp
mov
popf
adc
fwait
mov
push
push
sub
pop
ret
mov
cmp
imul
add
jecxz
shrb
dec
sub
hlt
push
bswap
test
push
stc
cld
pop
mov
xchg
lret
scas
test
jge
orl
popf
sub
xor
mov
movsb
mov
mov
emms
dec
cmp
mov
xor
push
xchg
dec
js
call
shll
mov
add
lahf
dec
lds
leave
sbb
mov
nop
mov
push
mov
dec
fldt
dec
lock
add
xorb
sbb
cmp
sub
push
enter
xchg
cmc
xor
out
sub
xchg
pop
es
dec
dec
ds
cmp
es
in
repz
pop
icebp
xchg
fistl
sbb
pusha
dec
daa
icebp
shll
enter
pop
sti
pop
sbb
imul
movsb
out
fs
mov
sbbb
mov
sbbb
xor
add
sub
popa
scas
sbb
imul
inc
cmpsl
xchg
sub
mov
movl
inc
jbe
cli
ja
cmpsb
ss
pop
cltd
jnp
mov
stc
cli
hlt
jl
pop
inc
pop
xchg
sbb
mov
push
cli
cwtl
sbb
pop
mov
adc
faddp
jno
jecxz
sbb
daa
jns
imul
mov
jecxz
lcall
mov
stos
or
mov
pop
repnz
icebp
pop
ret
pop
out
mov
ss
push
lods
pop
fwait
iret
lods
or
mov
loop
test
in
mov
push
or
pop
daa
int
lock
push
push
dec
ficoms
inc
stos
push
test
je
mov
int
xchg
pop
test
movsb
push
mov
mov
xor
cs
pop
mov
pushf
xor
aad
fdivrl
ret
les
sub
fsubs
push
mov
cmp
fwait
push
push
sti
out
sub
es
jl
push
jns
ficoml
and
inc
and
dec
mov
fistpll
mov
jno
shlb
dec
pop
les
ret
ficompl
dec
scas
lods
test
or
or
out
add
sub
push
mov
sbb
mov
mov
ret
push
test
or
xchg
fcoml
arpl
add
fsubrs
jle
into
leave
sbb
in
outsl
inc
ja
cmp
fwait
push
addl
push
mov
sub
out
enter
aaa
jo
or
ja
js
mov
xor
ja
out
jbe
mov
jb
in
je
leave
arpl
sbb
movsb
insb
xchg
stos
mov
cmpsl
sbb
sub
scas
dec
xchg
in
xchg
aas
or
ljmp
test
insl
pop
icebp
pop
push
nop
and
mov
ret
dec
das
notl
jae
stc
dec
imul
push
mov
xchg
adc
xchg
scas
cmp
ror
adc
dec
mov
filds
js
inc
stos
lahf
dec
push
mov
into
sbb
test
and
xchg
nop
xchg
pop
std
fs
mov
aas
pop
lea
pop
mov
movsl
and
repnz
pop
pop
nop
push
scas
mov
cmp
cs
inc
mov
out
arpl
pop
rorb
dec
insb
dec
fcomps
sub
movsl
imul
sub
cmc
ljmp
xor
cmp
lcall
mov
add
sub
fldcw
sub
popf
sbb
xor
xchg
sbb
and
sarl
mov
sbb
sbb
push
adc
jmp
pop
stc
int3
in
push
ret
stos
pushf
movsb
or
stc
shlb
aad
cltd
xor
or
mov
cwtl
xor
xor
inc
pop
movsb
scas
mov
clc
addb
inc
pop
lods
adc
ret
adc
lret
cmp
test
wbinvd
inc
popf
lods
push
jno
out
dec
in
subl
dec
movsb
pop
sar
adc
pop
je
int
xchg
mov
mov
outsb
inc
aad
sahf
aad
xor
jns
sbb
int3
inc
fdivr
enter
insl
pop
pop
mov
xor
inc
push
pop
adc
jg
hlt
call
fnstenv
adc
cmc
or
sub
repz
pop
fldenv
notb
push
mov
lcall
cwtl
push
dec
jns
sbb
rcr
xchg
dec
faddl
sbb
addr16
xor
sbb
and
lds
lods
jecxz
dec
cmp
cmp
and
into
pop
cmp
push
scas
and
inc
inc
sub
dec
sub
icebp
leave
and
filds
jg
dec
dec
shlb
pusha
sub
std
adc
lock
call
cwtl
adcb
lea
or
sarb
div
lea
mov
mov
int3
incl
pop
xlat
inc
insl
push
xchg
stc
fldenv
fnstenv
and
pusha
xor
std
mov
inc
mov
notb
pop
push
mov
push
inc
cld
mov
lds
aaa
movsb
and
aam
imul
mov
outsb
fs
jmp
jmp
in
lcall
lock
sahf
push
push
fcos
test
dec
cltd
outsb
mov
push
dec
or
push
es
cmp
push
mov
sub
pop
push
xchg
inc
inc
insl
push
lock
sub
jecxz
adc
xchg
call
jae
in
cmp
and
xlat
mov
cs
lret
cmc
imul
xorb
inc
sti
cmp
lods
mov
sahf
add
insl
je
push
add
sbb
lea
xchg
mov
das
sahf
rcrl
inc
sbb
subl
push
loop
jns
stos
nop
mov
movsb
ds
and
rorb
test
enter
pusha
jbe
push
mov
out
ret
pop
push
mov
adc
negb
test
aad
sub
fldt
dec
or
pop
and
push
jmp
mov
push
add
sarb
inc
cmpsl
fimull
xchg
inc
jmp
cmp
jb
push
cli
test
jae
adcb
push
lods
cmpsl
data16
ss
ret
ljmp
test
arpl
inc
cli
fisubrs
imul
push
lahf
stos
in
xchg
cli
cld
mov
mov
mov
sbb
pop
push
and
bound
cmp
dec
mov
es
adc
xor
mov
jg
adc
cmp
sbb
cmp
jns
int
mov
dec
or
and
jb
pop
popa
and
inc
mov
mov
mov
jae
push
jnp
cs
in
cmp
jecxz
or
int3
in
arpl
imul
iret
fimuls
repz
sub
repnz
jg
stc
jl
mov
cli
xchg
lahf
repnz
repz
sub
cmp
inc
add
xor
inc
and
sub
div
push
sahf
dec
and
or
mov
adc
inc
xchg
std
fiadds
pop
inc
pop
stos
imul
mov
dec
inc
subb
cld
inc
dec
jmp
and
xor
xchg
in
dec
mov
xorb
mov
std
cltd
outsb
aaa
out
loop
int3
call
es
and
rolb
xchg
mov
mov
mov
mov
pop
push
or
and
sub
or
sub
enter
dec
stc
das
ret
jae
ret
sbb
jne
int3
dec
and
jg
push
cltd
pop
and
fcompl
movsl
jp
repz
xor
xchg
outsl
ss
int3
aad
sub
sbb
add
mov
out
js
jge
mov
mov
mov
xchg
aad
pop
jae
xor
xchg
sub
into
xchg
cltd
pop
mov
or
lret
imul
xchg
and
cli
adc
fdivr
int
fildll
adc
sub
xchg
xor
cmpsb
and
jno
ljmpw
imul
xor
dec
sub
lcall
xchg
mov
cmp
xchg
sub
clc
jno
insb
pop
jno
or
inc
mov
cld
xchg
sbb
mov
sbb
repnz
dec
cmp
int
rcr
loop
lods
dec
nop
mov
pop
xchg
push
adc
jle
stc
std
jp
or
inc
iret
adc
ficompl
push
pop
xchg
js
enter
xor
push
adc
subl
rol
rcr
cmp
adc
or
xchg
push
jbe
sub
adc
inc
mov
std
je
cld
mov
stc
aam
and
push
sbb
adc
add
sub
mov
sub
ss
out
cmc
rcrl
add
pop
dec
stos
mov
mov
adc
iret
cmp
arpl
fnstenv
out
push
cmp
push
xor
punpckhbw
push
cmc
add
lods
push
mov
inc
sub
mov
mov
scas
adc
xchg
andl
je
fistps
xchg
lahf
add
insl
cmp
and
popf
enter
push
push
pop
stos
daa
lds
mov
cmp
sbb
ret
dec
add
mov
stos
and
fs
or
push
aad
adc
addl
nop
or
sbb
mov
cltd
mov
mov
pop
mov
xchg
xor
mov
sbb
lock
aam
xchg
movsb
in
ljmp
je
or
test
or
loopne
imul
add
pop
orl
stc
stc
int
in
xor
push
cld
das
in
pop
fnstsw
imul
sbb
outsb
les
test
xchg
mov
jmp
faddl
cwtl
and
xor
fwait
mov
sbb
inc
xor
jmp
xor
xor
cld
mov
mov
xchg
push
pushf
fbld
cmpsl
push
mov
sbb
stos
fnstsw
dec
push
loope
cmp
mov
inc
dec
pop
inc
fcom
jo
ficoml
jbe
push
dec
cmp
stos
movsl
add
or
push
cmpb
movsb
or
sbb
pop
sbb
fsubl
dec
rorb
lea
push
mov
daa
cmp
mov
fsubl
ja
loope
adc
out
pop
adc
dec
push
stos
imul
in
aam
imul
aad
or
rcrb
les
daa
idivl
mov
dec
adc
out
inc
pop
inc
pushf
jmp
shrb
fldcw
pop
int3
xorl
addr16
gs
lea
outsb
je
aaa
popa
sub
add
bound
jns
mov
cmp
dec
insl
mov
pop
test
sbb
lahf
xor
xchg
ss
mov
imul
in
popf
sbb
lret
and
dec
or
sbb
sti
int
push
ja
sbb
repnz
sbb
xlat
seto
mov
sub
jge
aas
cwtl
mov
fs
ja
mov
movsl
xor
insb
jne
mov
sub
stos
jae
jmp
insb
jno
cwtl
mov
in
iret
rcll
inc
jno
jp
xchg
mov
mov
fistpl
inc
xor
leave
shl
push
movsl
ret
mov
and
inc
stc
jbe
outsl
pop
lock
push
loope
push
xchg
jl
pop
std
mov
pop
dec
int3
movb
jno
xchg
mov
mov
push
xor
jg
adcb
dec
stos
mov
repnz
mov
sbb
and
sbb
mov
int
mov
and
into
push
adc
xchg
push
call
xor
test
in
and
dec
cmpsb
out
les
cmp
lods
dec
mov
dec
xchg
scas
cltd
leave
xchg
and
sahf
test
and
inc
icebp
fistps
imul
and
in
mov
stos
jp
mov
push
and
add
in
rcrb
jo
aam
sbb
dec
push
push
out
mov
dec
shlb
icebp
xlat
int
mov
mov
add
jae
lcall
rcll
movsl
sub
xor
loope
sub
out
mov
test
bound
mov
xchg
jno
sbb
sbb
ret
push
fndisi(8087
sarb
push
lock
aas
shlb
and
xchg
icebp
push
push
jae
push
lea
dec
pop
pop
push
xor
hlt
jl
mov
xor
pop
aad
xor
fs
adc
shl
push
mov
rclb
fmuls
popa
jnp
push
jp
jno
mov
outsb
or
inc
sub
push
into
adc
fcoms
mov
add
stos
lds
andb
jo
pop
adc
pop
mov
xchg
mov
adc
ss
pop
addr16
sbb
hlt
mov
push
xor
pop
or
mov
insl
sbbb
jg
mov
loop
aam
and
repnz
es
inc
fildl
or
lods
sbb
ljmp
fdivs
rcrl
test
popa
pop
jne
cmpsl
fs
xchg
pop
pop
mov
dec
out
or
add
sbb
pop
push
js
ja
repnz
add
rcrb
movsl
aad
push
les
adc
push
pop
les
inc
mov
mov
mov
divb
adc
ja
push
jb
jno
fists
or
jl
scas
stos
mov
fisttpll
sbb
cmpsl
xchg
and
int
mov
xchg
push
lds
loop
lret
out
test
pusha
out
das
fdivs
and
fbld
daa
ret
aad
and
dec
inc
test
mov
arpl
aad
iret
jnp
mov
sti
ljmp
xor
add
loop
rol
js
xchg
fcmovbe
rcr
es
and
mov
dec
push
and
add
iret
lods
into
frstor
xor
mov
js
insl
and
pop
in
dec
pop
sahf
scas
and
adc
daa
xor
lods
mov
mov
pop
sbb
stos
test
fnstsw
adc
cltd
pop
mov
outsl
lock
mov
dec
xchg
push
adc
xchg
cmpsb
jo
imul
jmp
jb
adc
or
lods
mov
dec
push
adc
dec
push
jmp
ret
adc
xor
jl
push
cmpsb
addl
in
inc
inc
pop
mov
mov
mov
or
push
mov
cmp
add
jb
es
mov
int
cld
bound
scas
in
mov
hlt
stos
mov
cmp
xchg
inc
es
and
popf
mov
clc
in
fcmovnbe
loope
push
insb
jns
mov
jnp
xchg
cld
jp
fistps
mov
nop
stc
push
dec
pop
test
ret
mov
push
mov
add
incl
ror
out
mov
and
in
mov
in
xchg
inc
addr16
mov
jo
pop
andl
cmpsl
mov
aas
nop
inc
cld
dec
sbb
adc
cmpsl
push
xor
and
mov
jo
cmp
add
jae
shlb
cmp
add
icebp
insl
xchg
popa
fcompl
jg
cltd
inc
lods
test
popa
mov
jb
repz
mov
jno
adc
pop
mov
and
out
push
dec
xchg
jecxz
pushf
xchg
mov
adc
dec
mov
dec
inc
push
add
aam
stc
push
inc
fdivs
jle
shll
arpl
mov
mov
and
loope
data16
sub
mov
cld
pusha
dec
push
faddp
jecxz
mov
push
and
mov
ret
cli
test
mov
cmp
lods
iret
mov
pop
mov
mov
cmp
pushf
popf
jge
jg
and
roll
shll
outsl
cli
mov
lds
sbb
jmp
into
mov
add
and
sub
popf
sbb
push
and
mov
addr16
shll
jnp
rcrl
aad
lea
testb
loopne
sbb
mov
repz
add
or
ljmp
clc
cwtl
movb
and
imul
enter
jnp
lahf
stos
test
fnstcw
daa
jo
shrb
sub
jb
pop
clc
xchg
push
repnz
aam
pop
inc
adc
cmp
jns
rcll
enter
inc
movsl
cmp
fistps
jae
shl
imul
and
jo
ficoms
xchg
divb
push
ror
and
pushf
aas
xor
or
inc
fimull
sbb
pop
iret
dec
in
add
loop
or
jae
lds
in
push
xchg
mov
pop
je
insl
xor
stos
std
push
jne
and
loop
les
jnp
push
pop
or
out
mov
inc
jl
adc
push
xor
sahf
jno
xchg
mov
mov
ja
mov
mov
xlat
inc
mov
adc
out
andl
add
test
push
flds
cmp
jle
pusha
gs
ja
rcrb
push
fidivs
repnz
aad
ds
dec
pop
push
bound
push
outsl
adc
sbb
mov
decb
jmp
stos
push
add
inc
dec
xchg
xchg
jne
ret
into
sub
sub
mov
mov
xchg
and
pop
popa
lods
mov
clc
add
xor
mov
mov
xor
mov
inc
aaa
sbb
mov
mov
sub
test
push
lock
sbb
outsb
scas
cmp
mov
lahf
je
mov
jns
gs
or
inc
orb
call
lods
test
lods
imul
addr16
loope
lea
mov
sahf
cmp
pop
mov
lret
push
sub
pop
jo
iret
push
jae
mov
popa
sbb
dec
sbb
ljmp
mov
in
mov
repz
pop
push
das
xor
outsl
mov
adcb
lahf
dec
sub
and
and
sbb
mov
shlb
jg
ret
mov
lret
cmp
fcoms
icebp
dec
test
out
jle
fcmovnbe
rcrb
push
lea
pusha
aam
and
sub
andb
faddl
mov
mov
inc
push
jno
mov
iret
xor
pop
sbb
jge
jg
inc
jge
insb
and
sbb
push
push
or
xor
nop
xchg
in
daa
cmpsl
insb
js
out
test
or
jl
into
sarl
rcrl
cwtl
popf
or
outsl
addr16
pop
sbb
js
jge
mov
in
jp
mov
daa
mov
sbb
into
push
jg
push
movsl
stos
dec
inc
mov
pop
jmp
dec
push
mov
pushf
mov
decl
add
pop
scas
mov
rcrl
lret
mov
ds
dec
dec
xchg
scas
fcoml
andl
stos
mov
mov
mov
dec
mov
lcall
cwtl
rcl
and
or
inc
mov
test
cli
aad
loopne
les
dec
mov
js
xchg
adc
dec
mov
fists
sub
cmp
or
xchg
loopne
lds
fwait
or
xchg
adc
mov
jns
xchg
js
addr16
push
add
or
pushf
lea
lret
xlat
adc
mov
pusha
add
test
sbb
mov
scas
push
mov
jno
push
mov
cmp
pop
inc
jbe
orl
fwait
daa
cmp
or
loop
add
nop
in
push
pop
add
pop
ror
in
mov
jno
insb
inc
cltd
jp
pusha
subb
or
push
arpl
sti
arpl
aad
inc
jae
ret
mov
shll
lcall
cmp
adc
pop
jp
jns
pop
mov
xorb
xor
out
aas
das
scas
inc
test
inc
mov
in
dec
mov
jl
cmpsb
hlt
mov
movsb
mov
lds
in
and
xchg
scas
ret
add
sbbl
repnz
push
and
sub
jbe
or
dec
jg
fdivl
cmpsb
hlt
xchg
lret
inc
jne
test
lds
subl
jp
or
into
xchg
jns
mov
inc
nop
jle
push
mov
aad
xchg
xor
xchg
xchg
rorb
dec
jb
xor
andl
shrb
out
les
negl
mov
repnz
in
sub
adc
andl
dec
xchg
rcll
add
push
mov
inc
push
stc
shll
jp
lahf
jb
mov
inc
jp
or
adc
push
and
ret
mov
adc
add
outsl
mov
sub
mov
push
ret
insl
mov
mov
shlb
push
jnp
mov
lds
sub
xchg
fldt
xor
arpl
xchg
xchg
dec
test
addr16
mov
or
ret
hlt
test
btr
push
pushf
pop
pop
xor
xor
adc
adc
sub
inc
sbb
dec
sub
out
cmp
lds
cltd
and
fsubs
jbe
push
push
test
mov
div
pop
jno
leave
xchg
dec
cmp
push
adc
or
push
scas
sbb
roll
jl
icebp
push
pop
cli
xchg
mov
loop
fstl
into
sbb
loop
stos
lock
insb
xchg
mov
shrl
ss
sub
movsl
jns
inc
dec
out
jbe
ret
xchg
jns
xchg
fwait
and
sahf
sub
add
and
aad
mov
mov
mov
xchg
cmp
jo
pop
repz
fidivrl
sub
xchg
jo
xchg
orb
push
roll
icebp
fdivl
loop
rol
daa
push
sub
std
mov
cmc
aaa
jnp
lahf
fnop
aad
mov
jl
repnz
adc
inc
push
lds
aas
mov
push
das
fildl
aas
icebp
or
pop
int
shl
test
outsb
ret
dec
dec
ficomps
js,pt
insl
sbb
mov
stos
cmp
sub
pop
stc
idivb
mov
ret
in
mov
dec
divb
out
negb
dec
push
push
mov
sbb
and
lock
lds
data16
mov
mov
aad
paddusw
mov
pop
dec
adc
jge
or
popa
rolb
cmp
mov
mov
fldl
lds
lret
pushf
fimull
xlat
mov
dec
test
fwait
ret
lahf
jge
xor
imul
sub
add
sahf
aaa
jecxz
jne
pop
dec
orl
lock
sub
popf
adc
and
push
into
shr
and
and
dec
fdivs
call
or
mov
jl
jns
pop
jg
ja
push
pop
aam
aas
mov
and
add
std
bound
outsb
xor
sarb
data16
cltd
adc
fcomi
sti
insb
outsl
int
shld
stos
xor
jmp
xchg
cld
sbb
es
clc
adc
or
in
addb
adc
stos
jo
or
sbb
xchg
cmp
enter
push
adc
and
or
pop
pop
adc
dec
mov
dec
clc
mov
les
add
nop
daa
int3
fidivs
dec
imul
lahf
dec
add
sub
cmp
jp,pn
sub
loop
fbld
shl
mov
push
mov
push
sbb
test
insl
ljmp
push
arpl
xor
icebp
mov
fmull
mov
shrl
mov
fs
or
add
pop
xchg
daa
jmp
cmp
in
sbb
in
sub
mov
xor
adc
loop
jle
pop
insb
mov
lret
push
das
cmp
clc
mov
jg
fld
ljmp
xchg
andl
test
pop
and
pop
push
adc
pop
add
dec
cmpsl
add
mov
cmpsb
pop
fdivl
mov
in
fldcw
cmp
testb
dec
icebp
into
aas
sub
mov
out
shr
push
xor
outsb
adc
jo
iret
pop
aaa
pop
lods
mov
int3
jns
xor
sbb
jmp
ret
jnp
fwait
sub
aam
and
jp
lret
ficompl
jmp
imul
mov
aas
out
mov
iret
lods
push
loope
gs
lahf
lea
sbbb
cmp
cli
lea
dec
lods
shll
jle
cld
pop
push
inc
jo
xor
jo
addr16
das
pop
cmpw
xor
lds
ficoms
jge
jp
mov
test
movsb
sbb
in
sbbb
fcomps
pushf
push
dec
js
cs
iret
or
xchg
idivb
jge
dec
and
std
mov
and
aad
add
es
mov
xor
sub
nop
rolb
aaa
inc
out
xor
stos
out
out
stos
out
daa
int
stc
mov
mov
adc
dec
cli
jg
lahf
addb
or
in
sbbl
outsl
mov
push
ret
dec
jns
cmp
mov
jns
mov
mov
adc
jno
arpl
add
ret
inc
rcrb
and
dec
les
in
xlat
mov
mov
push
clc
xlat
jle
movsl
aad
dec
xchg
mov
lds
iret
mov
xlat
push
lods
out
cmp
dec
test
aam
inc
lods
dec
test
lock
or
jmp
adc
cltd
add
xchg
les
jbe
movsb
pop
rcrl
mov
fs
push
adc
cmpl
cwtl
jl
jbe
ds
in
notl
jb
add
divl
cld
lods
dec
out
arpl
cs
ss
arpl
dec
jmp
cmpsl
stos
add
jl
jge
lea
lcall
push
icebp
les
ret
xchg
iret
ret
sbb
aad
mov
aas
mov
in
gs
test
dec
adc
roll
arpl
push
cmpsb
sub
lds
movsl
in
sub
xchg
fnstsw
add
bound
je
xor
and
divb
sbb
lret
and
or
outsl
dec
lods
sub
sub
iret
cmpsl
mov
or
and
cld
movsb
xchg
xchg
pop
jnp
add
push
xor
lret
sbb
repz
push
xchg
and
cmpsl
js
data16
jo
int
sbb
adcb
sti
xchg
btr
arpl
bswap
addr16
je
leave
or
mov
mov
imulb
mov
pop
popf
out
sub
fcmovbe
es
pop
dec
xchg
and
arpl
mov
mov
and
data16
fwait
in
lock
jg
xchg
mov
cli
inc
push
into
mov
insl
jns
pusha
sbb
test
stos
mov
pop
pop
add
stos
or
cmp
int
sub
in
push
pop
pop
in
addb
int3
sbb
mov
dec
cmpsb
idiv
lret
std
insl
pop
out
hlt
addr16
jno
cmp
push
dec
rcl
xor
pusha
push
xorb
pop
icebp
lods
add
jecxz
enter
mov
into
add
xchg
in
pusha
vmaxpd
adc
mov
jecxz
pop
jns
lock
dec
ja
inc
imull
cmc
inc
xor
mov
xor
ficoml
mov
push
add
fs
repz
ds
jae
lods
mov
xor
lret
cmp
push
aaa
push
daa
sahf
or
loope
add
lfs
cmp
fwait
push
test
push
jo
inc
daa
clc
rclb
pop
add
and
cltd
mov
add
mov
inc
mov
mov
sub
jge
cs
mov
adc
adc
mov
lret
cld
or
movl
cmpsl
xlat
cmc
out
ja
and
mov
imul
lea
popa
test
psrld
dec
fidivl
divl
dec
mov
pop
shlb
mov
pop
push
adc
aas
xor
mov
cwtl
outsb
out
cmpsb
or
iret
xor
outsb
cmp
mov
test
je
cld
mov
aad
pop
fildll
fnstsw
aaa
sahf
pop
jge
push
gs
outsl
push
and
lahf
sbb
test
stc
test
test
jae
add
daa
idivb
mov
jnp
push
pop
cmc
jg
rolb
out
inc
sahf
scas
jge
inc
or
mov
cld
scas
and
sbb
jmp
iret
iret
aam
mov
sarb
jns
gs
call
or
adc
sbb
loop
push
mov
inc
adc
iret
fcomi
aad
cmp
pop
cmpsb
int
jb
cmp
mov
mov
sti
cmp
sub
stc
cmc
mov
cltd
cmpsl
mov
sbb
mov
pop
rolb
filds
xor
fs
jg
or
sbb
std
lea
cltd
pop
mov
test
push
pop
add
icebp
leave
add
ficoml
jae
adc
sub
sbb
das
or
pop
jge
mov
dec
jns
dec
or
or
mov
popf
cmp
mov
stos
pop
mov
jae
ds
mov
popa
movsl
fldenv
dec
mov
into
sbb
and
lahf
xchg
popa
in
clc
clc
cwtl
push
sub
mov
push
xchg
shl
call
jecxz
jns
pop
push
scas
or
or
fucom
push
sbb
xchg
mov
push
lret
test
jg
sbb
aas
test
jge
jne
inc
nop
test
cmpl
pop
movsb
jno
rcrb
testb
mov
lea
mov
clc
push
pop
ss
pop
sar
sbb
sbb
ret
mov
mov
jnp
push
add
mov
cmpsb
mov
xchg
orb
mov
dec
pop
push
insl
icebp
enter
lea
or
mov
mull
and
jle
xchg
add
jmp
mov
cmp
cltd
test
sti
cmp
es
shlb
pop
divb
xchg
cmpsb
xchg
sub
lods
and
dec
xchg
scas
cmp
push
pop
and
sub
setnp
adc
shrb
mov
lar
es
mov
adc
cld
fcoml
dec
xchg
nop
dec
xor
cmpsb
mov
xchg
loop
leave
cmp
or
inc
inc
cwtl
adc
or
xor
sbb
lret
cli
js
adc
sbb
and
loopne
les
dec
push
jb
pop
cmc
inc
cmp
xor
adc
lods
adc
aam
adc
pop
data16
jbe
add
adc
in
cld
push
mov
insb
push
dec
inc
imull
aaa
mov
je
daa
sbb
insb
mov
data16
push
mov
repnz
push
setl
inc
aam
addr16
inc
scas
inc
dec
insl
fs
ljmp
pop
or
es
sub
test
sahf
test
cmp
insl
ds
push
xor
jae
mov
shlb
ljmp
push
jnp
and
mov
cli
mov
sarl
pushf
and
stc
jbe
push
fisubl
mov
dec
mov
sub
sub
sbb
shll
mov
dec
jge
fildll
mov
int3
mov
fwait
and
jp
dec
fistpll
pop
or
inc
dec
int
fdivl
ret
xor
lods
int3
mov
test
insb
inc
divb
test
scas
mulb
rorl
ss
sub
cmpsb
inc
xchg
add
mov
stc
add
shl
sahf
inc
mov
shl
in
je
pusha
xor
dec
push
or
push
inc
inc
das
loope
les
push
jb
imul
mov
sbb
cmp
xchg
pop
sub
ss
push
rcl
inc
outsb
push
adc
xchg
and
outsb
pop
aad
jge
mov
filds
jp
aaa
inc
or
pop
xchg
xor
mov
pushf
inc
cmpl
mov
mov
xchg
loopne
fildll
sti
insl
lcall
bound
sbb
lahf
in
lret
sbb
xchg
mov
dec
jns
sbb
movsl
ljmp
movsb
fs
mov
push
sub
je
int
cld
push
xchg
inc
adcl
cmp
push
xchg
sbb
jmp
addl
pop
sub
dec
jecxz
psubq
jae
std
mov
mov
jmp
daa
cli
jmp
inc
ret
xchg
lret
ret
fwait
mov
adc
sbb
sbb
and
xchg
mov
dec
cmp
dec
push
jno
xor
jge
popf
pop
gs
or
adc
adc
jmp
xchg
mov
and
jns
push
movsb
or
xor
dec
inc
iret
fldl
pop
pop
xor
dec
xchg
or
jle
dec
mov
push
cmpsb
testb
cmpsl
out
mov
cwtl
mov
jnp
lds
mov
movsl
xlat
adc
std
shlb
jg
xchg
pushl
nop
mov
mov
push
shl
shl
inc
das
mov
jno
or
testb
jne
nop
ret
and
mov
sub
fldenv
and
sar
or
outsb
fists
test
jge
inc
xchg
mov
filds
popa
sbb
jne
test
shlb
mov
and
outsl
mov
push
dec
fsub
les
fcoms
dec
sbb
sub
jbe
lcall
jecxz
sbb
aaa
mov
pop
sub
or
push
in
pop
outsb
scas
lock
push
xlat
cmp
or
and
int
ja
sub
sbb
jo
lcall
dec
fcmovu
dec
idiv
mov
lock
inc
icebp
in
xchg
sub
ss
pushf
xor
jb
lahf
fldt
or
lods
aas
dec
mov
mov
sub
pop
aas
sub
mov
push
or
cmc
cmpsl
rcrl
int3
jns
or
sbb
sahf
mov
out
test
insb
xchg
stc
out
gs
adc
lea
mov
adc
hlt
popf
or
into
mov
mul
push
aad
sbb
and
mov
mov
xor
sahf
mov
in
popf
and
or
std
jge
jl
push
popa
push
cli
pop
fistpl
adc
cltd
sub
xchg
jne
cli
leave
cmp
push
sar
jae
mov
cli
lret
sub
push
in
jns
push
or
rcrl
dec
push
ja
into
hlt
xor
out
push
push
jle
cmpsl
addr16
jo
mov
cmp
lods
lret
sub
ret
outsl
or
je
loopne
int3
lea
mov
dec
cmp
rorl
aad
mov
mov
sbb
notb
lcall
lcall
mov
call
push
iret
lret
clc
mov
fnstcw
addl
int3
call
icebp
jnp
mov
out
cmp
push
xchg
dec
mov
jle
int3
pop
fldt
int
fwait
lock
mov
loope
sub
jp
cmp
push
sub
or
add
sub
loop
movsl
incl
out
xchg
stc
jb
mov
dec
shrb
or
cmpsl
pushf
jle
ret
mov
les
mov
mov
xchg
cmp
in
scas
fsubl
lock
adc
lahf
aad
imul
adc
ficoml
rcrb
cwtl
loopne
leave
rep
dec
test
mov
mov
test
xchg
test
lock
sbb
sbb
ret
aad
cmp
dec
pop
mov
jp
mov
dec
cmp
fs
push
adc
cs
sub
test
insl
adc
ret
outsl
popf
shrl
sub
xchg
mov
in
mov
push
ss
stos
push
pop
pop
pusha
ds
jge
dec
out
jg
andl
leave
movsb
and
adc
insl
test
xor
arpl
cs
es
push
adc
mov
pop
dec
cld
xor
mov
jbe
pop
call
xchg
jl
mov
movsb
lret
or
dec
inc
out
aam
sub
daa
cs
es
bound
cld
xor
cltd
lahf
popa
cmp
repz
pop
and
rcr
sti
adc
aas
or
jno
out
mov
and
dec
daa
xor
xor
add
or
popf
popf
push
and
push
dec
or
pop
cli
mov
data16
and
fsubrs
aad
sbb
pop
adc
push
xchg
add
pop
sarl
icebp
scas
mov
pop
dec
mov
push
sahf
ret
cli
mov
pop
mov
jecxz
in
mov
xchg
sbb
xchg
mov
xchg
ja
or
int3
repnz
cld
cmp
sub
xchg
ret
lods
pop
into
ja
out
leave
pop
push
push
mov
out
xor
ds
push
fisttps
cs
mov
pop
xchg
cmp
add
push
xor
rorb
fdivrl
lret
mov
in
pop
xor
pop
cmp
or
arpl
jg
aas
fldl
aad
cltd
xchg
push
cli
and
push
cli
negl
mov
ret
sub
jg
and
arpl
icebp
dec
and
sbb
call
jo
aaa
cmp
push
ja
out
xchg
sbb
inc
pop
lds
insb
sbb
pop
pop
mov
or
or
in
mov
pop
add
xor
nop
jg
fs
cmc
cmc
stos
cmp
stos
or
outsb
xchg
rclb
subb
add
fsub
push
adc
jp
addb
mov
push
xchg
arpl
inc
sarl
insl
icebp
insl
dec
mov
add
aam
je
aam
mov
lods
subb
shr
mov
test
out
mov
mov
xchg
cmp
pop
lret
lock
aaa
adc
mov
mov
test
push
repnz
lcall
jg
add
out
popf
mov
in
and
loop
mov
jno
jg
sti
jg
je
cli
scas
push
adc
adc
push
mov
mov
xchg
shll
pop
in
movsl
mov
mov
xor
les
mov
adc
popf
xchg
mov
jbe
xchg
adc
insb
cwtl
stc
push
ror
jns
scas
popa
pop
aam
lret
xchg
mov
loopne
mov
cwtl
aas
dec
mov
pop
and
inc
pop
mov
leave
test
insb
or
out
add
push
in
push
fcompl
cld
inc
mov
sahf
mov
pop
xchg
pop
mov
mov
leave
rolb
icebp
jb
les
fs
je
mov
fs
pop
add
gs
xor
clc
dec
push
mov
xchg
das
jns
aam
test
mov
ja
and
xchg
shrb
iret
out
inc
out
test
xchg
pop
mov
fldcw
pop
call
adc
sbb
les
adc
in
inc
xlat
xchg
jns
mov
dec
sub
inc
dec
add
popf
out
add
add
push
inc
cmp
rcrl
fwait
and
fidivs
xor
cld
fimull
push
les
xchg
std
and
inc
int3
es
fstl
add
push
repnz
jl
fdivrl
sub
inc
popa
cmpsb
lret
jecxz
jg
cmp
in
push
dec
dec
xor
fsubr
push
xchg
inc
lret
adc
mov
fcmovnbe
lock
adc
inc
sahf
push
fmuls
ljmp
mov
test
subl
loope
mov
sub
enter
dec
mov
lock
pop
in
ret
adc
jnp
rcl
fwait
ljmp
jecxz
jl
out
subl
inc
inc
out
inc
into
cld
dec
cmpsl
lods
out
cli
ljmp
fwait
insl
dec
call
jnp
repnz
ljmp
add
adc
xchg
cmp
movsl
jp
ljmp
icebp
cmpsl
jb
sbb
vmovdqa
inc
sti
cwtl
or
aad
jg
inc
dec
rcl
sbb
xor
pop
sbb
jbe
mov
mov
ljmp
jge
jmp
xor
test
filds
sbb
mov
popa
std
adc
clc
cmpsl
xor
jns
lods
cld
test
lret
test
loopne
outsb
cmpb
and
xor
jae
and
popa
mov
in
lcall
fstps
mov
cmp
mov
in
call
mov
inc
dec
adc
out
ja
cmpsl
shl
test
xchg
lods
or
sub
dec
jo
stos
add
sarb
pop
sbb
adcl
pop
pop
cmpsl
pop
mov
movsb
adc
pop
nop
sahf
ljmp
cs
and
xchg
inc
aam
test
mov
in
fsts
je
cld
mov
jno
filds
das
lret
push
jle
sub
pop
adc
dec
mov
dec
ret
mov
into
test
insl
push
inc
aam
pop
ljmp
mov
lea
adc
xchg
outsb
and
and
xor
mov
je
ret
cmpsl
mov
aad
adc
imul
sub
fwait
push
dec
inc
ljmp
movsl
xchg
xchg
gs
addr16
push
mov
shl
mov
addr16
ret
inc
fimull
push
repz
mov
fstpt
cmp
push
enter
cwtl
hlt
sbb
call
enter
push
push
pop
testl
fidivl
repz
into
cli
popf
xor
jmp
xchg
pusha
lahf
add
or
xor
lret
out
and
arpl
pop
pusha
push
xlat
data16
jae
add
int
sbbb
enter
movsl
cli
xor
or
lods
popf
aaa
mov
xor
add
lcall
push
xchg
jecxz
in
jge
imul
lock
mov
mov
std
sub
out
fstpl
cmpsl
inc
cmpsl
push
sbb
mov
cmp
dec
cltd
inc
addl
add
xchg
and
sahf
mov
add
inc
call
push
outsb
adcl
ja
sub
fstpl
fiadds
mov
ljmp
cmp
outsb
les
cmp
sub
xor
shrl
xor
pop
cltd
xchg
aam
mov
ss
sbb
pop
jne
fistl
jo
sub
mov
add
out
jbe
ds
shrb
je
mov
test
adc
outsl
shrl
out
pop
or
mov
mov
cmp
jp
ss
rorb
lcall
aad
ret
cwtl
iret
nop
mov
sbb
neg
shll
rorl
push
dec
cltd
sub
jne
mov
lock
jle
jne
pop
mov
mov
cmp
les
xchg
xor
scas
jno
xchg
xor
adc
jo
xchg
icebp
mov
test
repz
cmp
js
lahf
lret
or
dec
jo
mov
push
cmp
sahf
fadds
outsb
mov
jge
and
incl
fcoms
lea
push
leave
or
xor
jo
mov
ror
test
test
mov
outsl
jecxz
cmp
icebp
and
sbb
push
dec
es
xor
insl
js
xchg
dec
test
inc
and
fs
xchg
jnp
and
pusha
cmp
mov
inc
repnz
jae
mov
out
imul
mov
xor
pushf
repz
std
add
sbb
ss
and
pop
add
mov
pop
ds
gs
mov
push
ja
incb
mov
jle
pop
xor
push
xchg
es
push
inc
pushl
jne
inc
dec
movsb
pop
mov
jge
pop
dec
out
imul
pop
xchg
lea
mov
jae
sti
dec
push
sub
and
cmp
jnp
push
inc
sbb
int3
pop
and
jbe
push
aam
mov
icebp
pop
in
pop
xchg
idiv
shrl
or
add
add
pop
mov
cmp
fildl
dec
and
repz
out
mov
inc
adc
ret
add
add
inc
mov
aaa
push
subb
repz
icebp
adc
push
gs
inc
aaa
xor
pop
jb
mov
in
cltd
jecxz
arpl
out
cmp
cld
pop
inc
add
inc
loope
xchg
fsubrs
imull
ja
sub
aas
arpl
mov
sub
mov
sub
xor
outsl
jmp
adc
and
loop
iret
mov
cmpsl
mov
ds
mov
jbe
cltd
mov
insl
xlat
rcrb
aas
idiv
jne
out
mov
mov
out
lods
insb
mov
and
mov
mov
pop
or
dec
bound
imul
bound
jae
pop
lret
pushl
test
icebp
outsb
xchg
out
rolb
fucomi
insl
test
popa
lods
xor
dec
fisubrl
inc
mov
dec
testl
jp
fldl
mov
or
push
sbb
push
test
sub
pop
push
insl
jns
in
es
fmull
icebp
rcrl
mov
xor
ds
push
fistl
sbb
ss
and
xor
dec
outsl
leave
movsb
aaa
pusha
sbbb
pop
pushf
mov
movsl
dec
pop
mov
mov
xchg
and
and
dec
fnstsw
outsb
cmpsb
lods
jbe
mov
scas
fbld
sbb
pop
insb
cmpsl
mov
xchg
push
rorl
int3
add
xchg
inc
ret
sbb
loope
setb
xchg
xor
lods
subl
pop
sbb
scas
aam
jnp
int
mov
fsubp
and
aaa
mov
rorl
xchg
lods
decb
shr
int
push
adc
sbbl
xor
dec
mov
loope
pop
sub
cld
rcrl
loope
mov
out
cmp
call
call
fsubrs
outsb
mov
inc
and
ficoms
add
or
push
pop
stc
dec
addl
push
mov
movsb
loopne
mov
or
cmp
mov
fsubrl
sbb
scas
insl
pop
push
popa
inc
clc
lock
dec
inc
xor
mov
lahf
sbb
push
fisubs
adc
push
jno
or
mov
dec
cli
adcl
push
int
stc
aam
mov
fwait
or
adc
pop
popa
sti
js
push
andb
aaa
fwait
aad
data16
xor
leave
gs
sub
int
sbb
push
into
or
adc
dec
mov
mov
xor
dec
add
cmp
std
xor
lea
lods
xor
mov
sahf
popw
sbb
arpl
out
test
inc
movsb
aaa
out
cs
mov
fdivrs
and
jnp
enter
adc
in
dec
mov
roll
jl
sbb
mov
jmp
iret
loop
sub
pop
repz
out
cs
cmp
push
mov
in
mov
mov
sub
jmp
ret
addr16
lds
dec
xchg
shr
icebp
cs
lds
mov
enter
inc
pop
mov
jmp
xor
dec
dec
fwait
push
cltd
xor
cmpsb
stc
sbb
stos
pusha
jg
cmp
jb
adc
das
stos
mov
out
jns
ja
leave
insb
mov
mov
adc
xchg
dec
outsl
mov
or
adc
imul
test
push
leave
adc
lret
jno
cmp
push
arpl
bound
jg
or
and
popa
jecxz
lahf
mov
mov
int3
adc
aas
addr16
pop
int3
adc
add
andb
add
pushf
xor
data16
out
xchg
push
fcmovb
inc
sbb
sub
jmp
add
and
insb
int3
rcll
inc
add
in
push
xchg
mov
ja
dec
dec
pop
push
imul
ficoms
out
hlt
xchg
sbb
mov
mov
and
mov
cmc
push
lods
mov
jno
mov
jecxz
xchg
into
js
fstp
test
push
movsl
sub
xchg
ja
bound
or
or
hlt
data16
lods
add
push
dec
shrb
pop
daa
sbb
mov
mov
push
out
or
and
mov
adc
pop
in
xor
sbb
idivb
add
aas
mov
push
stos
adc
add
cmp
mov
in
lods
dec
sbb
rolb
insb
cmp
inc
mov
repnz
adc
bound
scas
and
mov
jno
add
ret
pusha
mov
adc
nop
xor
pop
lods
xor
arpl
sub
sbb
inc
cmpsb
lods
scas
cmc
nop
scas
jg
sbb
movsb
loope
ja
dec
pop
outsb
mov
mov
aad
cmpsb
jecxz
ret
aas
mov
insl
xchg
push
aad
lods
aam
xor
cmpsl
inc
adc
shlb
mov
pop
push
pop
cmp
es
xchg
scas
ljmp
fcom
dec
fcomps
add
repz
es
mov
test
mov
or
sarl
jne
jne
sub
mov
dec
mov
push
pop
and
mov
insb
in
pop
pop
inc
jns
mov
ret
add
xor
jne
mov
cs
jle
or
add
mov
lret
dec
cmp
out
bound
call
outsb
and
addr16
daa
push
rol
jmp
je
addr16
mov
sahf
and
testl
lcall
js
jle
pop
bound
push
sub
addr16
mov
andps
pop
jae
xchg
jle
pop
sti
xor
or
inc
sub
sub
sar
pop
and
or
test
sub
je
xor
nop
addr16
pop
mov
fwait
push
mov
push
fldl
push
pop
adc
cmp
hlt
sti
add
repnz
xlat
dec
sbb
and
dec
mov
int3
jo
pop
mov
mov
stos
movl
pop
pop
shrb
jmp
sub
sahf
ret
mov
cmp
inc
jo
aam
inc
add
sbb
clc
fisubrs
scas
pop
jge
sarb
stos
mov
and
popa
jg
add
mov
xor
adc
mov
scas
dec
or
out
and
test
test
jno
call
cmpsb
dec
lea
inc
xor
lock
daa
jle
loope
sbb
lock
mov
mov
xlat
stos
fbld
popf
lock
mov
sub
bound
sub
xchg
sahf
adc
sbb
dec
add
mov
into
xor
enter
ret
imul
lret
arpl
inc
dec
and
xor
add
aaa
xor
std
loopne
std
ljmp
or
xchg
aad
lret
sub
jo
xor
jge
fists
scas
xchg
ss
dec
mov
jne
xor
sahf
jl
mov
jl
pop
outsl
dec
mov
sbb
xor
dec
or
xor
wrmsr
inc
scas
jmp
adc
xlat
push
shrb
call
push
ret
adc
jecxz
sbb
nop
sahf
outsb
xchg
mov
add
cmp
xchg
push
scas
faddl
push
orb
pop
lock
lcall
xchg
push
mov
adc
cli
and
sbb
test
dec
adc
int3
mov
push
testb
xchg
sbb
mov
outsb
roll
inc
lret
jecxz
shlb
cmp
nop
call
jmp
fiadds
cli
push
adc
loop
xor
inc
and
inc
outsb
cmp
push
cld
jnp
push
ds
loopne
jg
popa
sahf
adc
shrl
sbb
dec
shr
pop
xchg
mov
add
decl
pop
popf
pop
jp
add
jg
fstps
arpl
in
jns
and
in
bnd
jo
loop
mov
lods
mov
jge
inc
jge
cwtl
enter
in
mov
push
ja
adc
xor
push
xchg
sbb
stos
icebp
mov
jge
xor
and
sbb
jp
cmp
push
cmp
ljmp
cmp
scas
dec
adc
xor
adc
pop
fsub
push
ss
sub
mov
call
psrlq
cmp
push
sbb
cmp
in
xchg
int
dec
adc
xchg
jns
dec
mov
push
fdivs
jl
nop
fisttpl
iret
shll
pop
add
inc
outsb
insl
insl
push
in
leave
inc
shlb
pop
enter
cmp
bound
add
test
mov
or
xor
pushf
clc
push
lret
push
or
pop
popf
inc
xor
jae
mov
stos
jne
xchg
mov
adc
mov
sbb
jle
adc
push
xor
jbe
pusha
xor
xchg
movsb
push
sbb
call
inc
xcrypt-ofb
cmpsl
sub
pop
subl
or
mov
aam
cmp
loope
and
push
in
mov
push
mov
jle
xchg
int3
push
es
mov
cmc
iret
add
mov
inc
fucomip
mov
cltd
imull
cmpsb
mov
rcrb
mov
xchg
loop
adc
jnp
sbb
adc
sarl
call
jne
lret
aad
js,pn
js
das
push
in
jnp
and
cwtl
xor
es
rol
mov
cmc
lahf
fsubr
mov
fs
test
int3
inc
outsl
test
mov
push
mov
jl
rolb
pop
data16
add
je
jle
xchg
mov
jno
aaa
pushf
cmp
mov
popa
jg
lea
cs
icebp
test
sub
inc
sbb
mov
fcompl
mov
ljmp
fimuls
mov
and
push
test
adc
in
imul
dec
push
push
int
ret
cmpsl
inc
leave
add
lods
mov
inc
negl
fcomps
mov
push
jno
cmpsb
enter
out
push
mov
orb
jne
rclb
in
aam
fwait
icebp
push
pop
insb
mov
popa
push
cmp
cmp
daa
subl
repnz
cmp
aaa
inc
popf
cwtl
loopne
in
add
mov
xchg
std
push
xchg
xchg
stos
enter
mov
fcmovnbe
out
mov
cmp
fwait
and
pop
pop
aas
out
xor
and
arpl
hlt
mov
test
insb
in
out
call
sub
lret
mov
out
loopne
fsubrp
jl
aam
dec
dec
mov
cvtpi2ps
incb
loop
mov
insl
aas
push
cmc
ficomps
aas
xchg
scas
and
jne
sbb
inc
sbbl
enter
adc
lret
xor
les
jmp
dec
shrb
pop
or
adc
clc
xchg
push
movsl
sarb
xchg
mov
mov
ja
or
sub
cmp
ljmp
fcoms
je
rolb
ss
aaa
push
pop
pop
in
xor
cmp
adcb
jecxz
push
sahf
out
xchg
push
nop
stos
xlat
mov
out
ljmp
xlat
adc
mov
adc
sbb
shll
cmp
sahf
testb
xchg
rcrb
jae
and
repnz
test
out
cmc
clc
shl
jp
mov
leave
addr16
ljmp
sbb
addl
rclb
gs
xchg
in
push
aaa
inc
scas
xchg
unpckhps
dec
inc
add
clc
mov
push
cltd
mov
in
mov
inc
dec
sbb
xchg
xchg
push
out
sub
mov
repz
out
pop
and
add
lahf
hlt
push
xor
adcl
jbe
rcrb
jge
xchg
fcoms
add
and
in
mov
ret
test
fldenv
sti
ret
sub
add
sbb
pop
aaa
lcall
repz
or
or
imul
mov
fdivl
jno
pop
sbb
setns
or
and
loop
add
xchg
cmp
dec
jle
push
or
ja
in
test
mov
add
xchg
in
and
xor
sub
pop
sbb
dec
adc
inc
lods
mov
movsb
mov
dec
pop
cwtl
and
int
add
add
or
sbb
adc
mov
mov
aaa
adc
dec
inc
in
xchg
outsl
inc
push
pop
adc
pop
stc
push
inc
repz
int
or
xor
scas
sti
ret
mov
xchg
jbe
mov
inc
mov
popa
push
add
repz
push
dec
call
mov
bound
fs
pop
lret
int3
sbb
addr16
add
pop
sysret
sahf
cmc
xchg
mov
cmp
repz
mov
jmp
xchg
jae
xlat
and
stos
xchg
mov
aad
push
jns
mov
or
or
in
xchg
pop
daa
dec
les
aaa
popf
mov
rcrl
pop
pop
fld
fwait
dec
add
sub
aam
mov
icebp
mov
stos
mov
add
cwtl
add
stos
xor
adc
xchg
sbb
imul
fldcw
enterw
jmp
push
pop
div
out
ljmp
cwtl
xor
out
add
movsb
fisubs
xor
aaa
divb
into
push
stos
in
add
int3
sarl
push
jge
push
inc
mov
imul
out
fbstp
pop
iret
pop
and
ret
pop
repnz
nop
mov
jno
pushl
sarb
cmp
repz
pop
sbb
add
jl
dec
jg
push
out
test
mov
in
scas
iret
or
aaa
xchg
pop
mov
sbb
iret
xchg
dec
les
loop
adc
jae
call
mov
xor
push
loop
shlb
xchg
divb
pop
push
add
cmp
ret
fisubs
jmp
xlat
js
sub
outsl
adc
sbb
stos
pop
or
push
cmp
lds
pop
mov
shll
shl
add
xor
mov
ret
ljmp
icebp
push
icebp
jmp
jo
mov
push
out
mov
rcrl
mov
xor
push
mov
xchg
imulb
je
popa
mov
jnp
cmpsl
bound
sub
ja
fldl
out
and
insb
xchg
inc
fdivs
mov
xor
pop
xlat
mov
jl
jo
outsl
aad
fisttpl
sbb
dec
enter
into
loope
pop
rorb
push
mov
or
andb
or
pop
adc
xchg
push
lds
cwtl
add
inc
in
pop
ja
insl
test
jne
es
mov
sub
mov
mov
mov
or
mov
test
mov
into
adc
and
xchg
mov
jae
sub
adc
xchg
or
test
lea
into
jl
cltd
out
add
xor
jno
in
int3
stos
bswap
jge
push
arpl
xchg
imull
add
xchg
loope
dec
call
xchg
xlat
push
leave
mov
cmp
mov
nop
push
jmp
sub
xchg
arpl
ljmp
fdivrl
cwtl
jb
adc
jge
shll
repz
inc
mov
bt
ret
arpl
sub
inc
sub
lock
sbb
or
test
adc
dec
cli
pop
rorl
repnz
dec
sub
lcall
in
aas
pop
loopne
stos
leave
fcmovu
xor
cmp
loope
dec
stos
lcall
lods
pop
sahf
out
pop
cmp
out
add
xor
ds
rorb
dec
notb
sahf
mov
inc
int3
pop
inc
daa
jmp
sbb
pextrw
test
push
cwtl
fcom
adc
lea
jns
dec
push
test
dec
inc
mov
inc
dec
imul
or
mov
lret
sub
std
or
mov
xlat
imul
pop
push
int
rorl
cmp
fists
xchg
push
out
cmpsl
outsl
fdivs
push
mov
insb
in
mov
mov
inc
sbb
das
pushw
mov
stos
sbb
dec
mov
iret
rorb
rorl
aas
bound
lret
and
iret
loopne
in
insl
dec
cs
or
ljmp
or
jbe
hlt
and
jne
adcl
xchg
mov
jecxz
and
dec
aas
add
les
mov
and
mov
std
jb
push
mov
insb
push
pop
mov
xor
add
es
push
jmp
divl
adc
lods
adc
rep
pop
jge
out
mov
inc
daa
dec
dec
jp
mov
lcall
in
cmp
cli
fldl2e
inc
pushl
xor
lds
or
xchg
mov
sti
aam
mov
add
jp
or
cmp
pusha
mov
jge
cmp
sbb
and
nop
push
add
lret
pop
sahf
sub
sub
stos
mov
mov
and
xchg
xchg
pop
jno
fldcw
mov
cltd
dec
into
movsl
call
adc
jbe
lods
jae
fcomp
fisttpl
arpl
pop
add
jne
dec
fistpl
xchg
adc
pop
add
data16
jecxz
sub
out
fsubp
fiaddl
scas
das
or
in
sub
push
mov
aad
lcall
mov
push
mov
inc
jbe
sbb
dec
xchg
sahf
andl
nop
inc
es
mov
mov
in
scas
jg
bound
insb
push
jnp
xchg
out
jle
out
pop
test
add
cmp
adc
cli
inc
and
jle
stc
stc
jnp
pop
inc
popf
or
push
inc
add
ds
cmpsl
nop
repnz
add
or
pop
mov
hlt
mov
jmp
aas
cmp
fcom
jge
push
pushl
loope
sub
dec
jmp
lods
xchg
adc
cwtl
jb
dec
rolb
push
xchg
pop
mov
pop
out
shrb
xchg
out
aaa
sub
mov
cmpsl
aad
cmp
shlb
jmp
push
mov
mov
or
stos
push
sbb
sbb
lea
mov
jge
shl
stos
fsub
aad
jle
xor
mov
fldz
pop
out
mov
call
imul
pop
fdivp
xchg
adc
aas
pop
mov
cmp
ret
mov
idivl
orl
adc
xchg
out
jecxz
mov
mull
pop
pop
addr16
jle
xor
cmpsl
fwait
jge
xor
int3
fldt
add
xor
pop
mov
mov
shll
int3
jno
mov
shll
inc
loope
gs
icebp
pop
repnz
std
fwait
sbb
and
fs
fdivr
or
jb
xlat
or
maxps
iret
das
xor
icebp
les
aas
out
roll
arpl
outsl
mov
div
cmc
sub
cmp
js
mov
lods
dec
inc
jmp
dec
les
pop
pop
bound
and
sub
mov
push
lea
jg
inc
or
mov
add
pop
xor
or
or
add
repz
cmp
roll
into
outsb
dec
lcall
or
insl
aaa
repnz
jo
int
ret
mov
inc
cmpsb
daa
jge
mov
push
dec
or
loopne
jne
test
jne
insl
int
aad
fimuls
daa
jg
std
inc
subb
pop
stc
mov
adc
sub
ficomps
pop
jg
stos
adc
xchg
jge
mov
fldenv
fcoms
pop
xorb
fimull
push
movsb
push
xor
fcomp
leave
mov
adc
ret
add
or
push
stos
in
and
data16
sub
cs
rorb
pushf
mov
push
and
xchg
xorb
lods
dec
dec
pop
mov
movsb
aaa
in
sub
inc
bound
repz
and
xchg
daa
push
mov
sarb
mov
jne
mov
lret
es
sub
sub
cmp
insb
sbb
mov
cmp
lds
and
pushf
les
sbb
dec
stos
pop
jp,pn
jge
test
mov
cpuid
pop
mov
or
sub
out
mov
pushf
ja
or
mov
cmp
or
repnz
lcall
dec
sbb
jns
je
xchg
adc
mov
pushf
mov
nop
pushf
push
lods
pop
xchg
adc
mov
and
xor
les
pusha
aaa
lahf
xor
push
call
repz
std
ljmp
ja
xchg
ds
mov
shll
push
aad
inc
jae
mov
repz
mov
test
leave
out
cmp
cmp
dec
cltd
imul
orb
mov
mov
sahf
mov
xor
fcomi
sbb
xchg
sbb
mov
cmp
xlat
leave
test
hlt
sbb
push
cmp
inc
jge
scas
add
stos
sub
push
mov
inc
daa
push
popf
dec
cmc
dec
movsl
hlt
add
push
jl
xchg
push
mov
push
jl,pn
ljmp
imul
mov
dec
pop
cmp
stos
adc
lds
les
inc
push
add
mov
imul
jmp
dec
add
push
rcrl
mov
xor
clc
lret
lock
or
adc
mov
fs
int
cmp
in
test
jp
ret
fcomi
andl
jl
je
push
enter
iret
pop
clc
iret
out
mov
inc
cmp
in
fcoml
sarl
mov
mov
push
movsb
lret
arpl
jecxz
xchg
cwtl
lcall
data16
xchg
and
movsb
pop
push
mov
nop
fisttps
inc
sbb
ljmp
jmp
push
test
push
dec
int
cmpsb
stc
mov
xor
repz
subl
sub
add
scas
adc
gs
nop
pop
xor
inc
lcall
xor
sbb
inc
push
mov
in
hlt
mov
subl
lods
aas
mov
pop
mov
je
aad
dec
dec
gs
test
in
lcall
pop
sub
or
cld
sub
push
and
pushf
cmc
scas
ja
push
lods
jne
divl
mov
inc
mov
cmp
or
xor
lock
mov
add
sbb
shl
cmc
lock
pop
sbb
ret
adc
jno
mov
std
arpl
jg
jns
jle
bndldx
push
fidivrl
dec
sub
fs
cmpsl
lahf
sub
mov
sbb
stc
movsb
jl
ljmp
clc
pop
loop
clc
loope
adcb
inc
xor
jo
cmpsb
sti
jp
lock
pop
arpl
in
sarb
cli
dec
arpl
stc
mov
ja
add
mov
mov
stc
sahf
adc
add
push
mov
rorb
test
pop
xchg
sub
stos
jbe
movsb
jne
add
push
or
test
pop
xchg
or
inc
mov
nop
das
insb
xor
nop
cltd
repnz
jb
and
repz
filds
call
cmp
mov
push
dec
sti
out
adc
jbe
leave
pop
fcmove
mov
cmp
push
pushf
ret
outsl
add
pop
adc
cmp
mov
add
dec
pop
mov
int3
lahf
test
or
dec
add
es
out
jo
fsubr
sbb
aaa
add
pushf
cwtl
mov
call
rclb
fidivs
and
cmpsl
add
adc
mov
sub
ljmp
cwtl
add
scas
jl
int
inc
imul
daa
stos
ret
cmp
push
outsb
out
mov
fisttps
push
rclb
loope
and
jae
adc
cmc
mov
add
insb
mov
fbld
outsl
roll
push
loop
in
dec
adc
sub
das
xor
ret
loope
inc
adc
xlat
sahf
pop
ljmp
push
sti
insl
adc
xor
mov
mov
and
add
jne
inc
xchg
jne
jnp
shl
imul
mov
and
mov
cli
adc
ljmp
cltd
push
jmp
es
or
push
cmpl
test
lahf
iret
adc
loopne
aas
js
xchg
int3
enter
dec
pop
jno
jg
or
xchg
inc
dec
dec
popa
movl
subl
push
cmp
jmp
xchg
pop
sub
xchg
or
jo
out
or
or
dec
mov
xor
sub
ret
lret
lret
adc
sub
xchg
mov
int
add
pop
aas
lret
aam
ret
leave
xchg
jp
dec
scas
mov
in
imul
arpl
inc
outsl
pop
pusha
test
inc
cmc
icebp
jmp
dec
mov
ds
push
xchg
leave
out
arpl
insb
fwait
mov
shrb
fdivr
fs
inc
in
lea
xchg
in
fcomps
movl
mov
in
aam
jb
in
popa
lods
push
mov
mov
mov
xchg
sub
pop
dec
call
push
les
sub
movl
xlat
jae
std
sub
xor
andb
sub
fsubrs
push
cmp
add
inc
or
or
jb
xlat
cmp
in
mov
clc
mov
push
mov
ja
data16
in
addr16
inc
fsubp
lcall
mov
push
push
sub
js
fsts
imul
add
inc
mov
push
pop
cmp
stos
ss
inc
nop
pop
fldenv
lds
add
stos
dec
iret
scas
cwtl
adc
mov
xchg
leave
arpl
dec
pop
icebp
push
push
xbegin
pop
nop
fldcw
dec
rclb
add
pusha
int
mov
sarb
pop
mov
cmpsl
outsl
inc
push
scas
jae
mov
pop
scas
lock
nop
inc
pop
pop
aad
or
hlt
xchg
adc
add
sbb
dec
dec
int3
je
mov
xlat
lods
cmp
pop
out
pop
jge
rorl
add
dec
test
mov
mov
iret
mov
testb
pop
inc
mov
fmulp
jle
push
ds
adc
call
inc
test
shlb
popa
insb
xchg
push
xor
push
movb
push
mov
sub
lds
or
shll
push
in
mov
pop
jp
lret
jbe
andb
fldenv
das
pop
xlat
jmp
jle
xor
sbb
or
sti
scas
stc
negl
sbb
into
and
or
adcb
adc
rorb
jb
pushf
sub
les
inc
dec
inc
cmp
mov
orl
mov
sarl
jnp
leave
cmp
lret
mov
cmp
jns
push
cmc
scas
dec
fcoml
xchg
jbe
cltd
adc
mov
jbe
sarb
xlat
sbb
in
xor
outsb
loope
incb
add
mov
mov
test
mov
xchg
add
out
shl
push
lea
mov
jmp
jge
je
mov
movsb
sub
sbb
mov
lret
in
loop
shll
pop
stos
jbe
bsr
outsl
dec
aas
mov
lock
repnz
test
popf
nop
pop
lahf
enter
jb
xor
insb
jg
iret
lahf
xlat
adc
hlt
test
mov
pop
dec
xlat
xchg
push
test
xorb
cmp
cs
popa
mov
push
jo
roll
push
lret
cs
mov
push
xchg
jne
xlat
out
sub
lods
in
pusha
cwtl
add
popa
mov
pop
decb
dec
cmp
and
mov
pusha
add
jno
sub
std
faddl
in
add
push
dec
pop
ds
sahf
adc
hlt
and
out
inc
and
std
inc
mov
popf
mov
sub
daa
movsl
cmp
jge
ret
cmp
lock
cmpsb
ret
pop
add
mov
adc
inc
mov
pop
stos
inc
jge
cmp
sub
orb
cmpsl
push
push
push
sub
in
mov
rcll
fldcw
xchg
ret
out
pushf
xchg
ss
inc
inc
dec
into
and
cmp
jl
jge
or
xorb
testl
or
or
mov
cmp
jnp
pop
jge
movsl
inc
dec
ret
sub
pop
dec
gs
icebp
jg
xchg
in
pop
adc
sub
mov
jno
sarl
fcoml
add
jae
lcall
pop
sbb
dec
jno
or
pop
xor
std
adc
adc
pushf
xchg
and
popa
jne
dec
jg
push
lret
jnp
jmp
movsl
xchg
or
xor
xchg
xor
call
dec
mov
and
xor
cltd
outsb
popf
mov
aad
cmp
popf
lock
cmp
iret
int
popa
data16
lods
cltd
dec
and
or
pop
rolb
fistps
lahf
aaa
fldl
adc
and
bound
imul
pusha
aad
jno
call
imul
insb
cli
xor
mov
stos
clc
mov
push
jge
ja
dec
inc
insb
shrl
add
and
cmp
dec
fcomps
shlb
sarb
dec
xchg
xor
sbb
adc
es
inc
mov
or
icebp
mov
jnp
fs
sbb
jns
jl
mov
dec
cwtl
sbb
mov
dec
pop
dec
add
dec
mov
in
mov
in
sarb
xor
test
in
mov
ja
cmp
cltd
adc
or
loopne
ret
jo
stc
cmc
icebp
xchg
dec
add
push
add
or
xchg
jno
jecxz
mov
cmp
pop
repz
enter
xchg
jne
ja
mov
int
lods
sub
or
shll
in
push
lods
mov
xchg
or
aam
fstpl
sub
int3
jge
or
mov
jae
inc
lret
call
pop
insl
push
enter
push
int3
mov
inc
iret
dec
push
repz
gs
leave
mov
les
lds
inc
in
push
fcomip
push
aas
or
sbb
mov
int3
mov
lret
sub
and
xchg
mov
in
and
shlb
jae
iret
push
lods
aas
pop
iret
fildl
sbb
adc
fidivs
in
xchg
mov
shlb
adc
out
in
push
scas
and
dec
jmp
add
stos
push
popf
push
sbb
es
mov
xor
adc
mov
adc
push
xchg
inc
rorb
sub
dec
push
ret
mov
out
inc
test
and
stc
jg
popf
and
pop
jl
adc
addr16
mov
clc
in
jmp
sub
fstps
pop
inc
sti
repnz
and
push
testb
mov
pop
sarl
std
mov
sbb
sub
ret
stos
mov
jmp
lret
rclb
push
mov
xor
or
mov
xchg
cmp
fstpl
mov
push
push
and
stos
ja
fmull
jmp
push
jmp
shll
test
push
sbb
shr
sbb
les
fisttps
sub
add
fildll
push
xchg
dec
loope
mov
test
out
inc
or
outsb
idivb
cmp
xor
add
pushf
jmp
pop
mov
dec
scas
dec
outsb
addr16
jecxz
adc
jno
and
cmpsb
sub
or
lods
sbb
loope
out
data16
out
ficoml
xor
mov
ja
call
or
xchg
adc
inc
push
aad
mov
cltd
roll
insl
pop
jae
scas
fwait
test
adc
out
pop
test
mov
xchg
adc
sti
mov
sti
test
es
jle
and
insl
aad
jmp
inc
daa
add
mov
mov
cmp
xor
sub
movsb
sbb
mov
paddb
jno
jp
push
fidivrs
push
push
sbb
fistl
xor
hlt
cltd
movsb
leave
cmpb
add
mov
cmpsl
icebp
push
int3
add
dec
cmpsb
mov
sub
xrelease
or
push
inc
lock
mov
jae
cwtl
data16
aad
dec
push
shl
or
enter
mov
pop
push
imul
test
imul
pop
sbb
pop
or
clc
mov
mov
pop
lahf
arpl
fisubrl
dec
shl
testb
pop
decb
sbb
nop
in
das
data16
call
mov
adc
in
pop
fidivrl
jae
push
push
mov
sbb
cmp
ljmp
sub
cmp
repnz
andl
imul
icebp
dec
cmp
jmp
iret
repnz
jbe
mov
das
push
cwtl
ret
mov
push
jbe
adc
cmp
jl
imul
les
pop
testl
cmpl
jo
popf
jecxz
out
adc
stc
xchg
ss
mov
pop
repz
inc
jle
inc
push
jmp
ficomps
sub
mov
adc
leave
xor
add
icebp
and
pmaxsw
push
cmp
js
xchg
push
gs
push
mov
outsl
push
icebp
popa
popaw
sub
cmp
push
jle
insl
loopne
out
fsubs
jle
mov
lcall
sti
jns
sbb
jbe
ja
mov
cmp
lods
imul
cmp
mulb
imul
adc
dec
out
inc
test
dec
push
fs
in
adc
scas
sub
fisttps
jg
inc
adc
arpl
int3
dec
xor
dec
ja
sbbb
movsw
jns
lock
pop
or
mov
pop
pop
mov
lcall
fcoms
push
inc
or
dec
clc
shlb
ret
adc
add
push
arpl
dec
push
cmpsl
dec
pushf
lcall
data16
jo
dec
inc
les
cmpsb
imul
pop
insl
dec
cwtl
iret
pushf
lods
jbe
fs
and
add
sub
jb
mov
xor
repz
dec
or
or
imul
xor
je
xchg
aam
fcoms
lret
adc
push
stos
loop
sbb
scas
lret
stos
push
xchg
inc
popa
xor
mov
inc
adcb
syscall
faddl
pop
daa
movsb
nop
mov
fwait
push
inc
pop
mov
in
gs
push
or
jne
adc
pushf
js
dec
lahf
mov
mov
xchg
jae
mov
push
addr16
inc
mov
lods
cmp
gs
repnz
cld
mov
or
sbb
mov
ja
sahf
inc
inc
and
out
xchg
cwtl
and
adc
aad
insl
testl
inc
imul
cmp
fsubl
xor
mov
nop
outsl
ss
inc
popa
loope
inc
imul
int
jno
inc
xor
mov
push
mov
pop
aam
or
mov
sub
andl
rol
mov
or
xor
and
rorl
mov
hlt
and
inc
mov
mov
jmpw
inc
rclb
mov
pop
and
js
ret
add
shr
push
jb
ret
sbb
ljmp
ret
push
loop
pushf
xor
xor
shll
lahf
or
jle
loopne
test
gs
xchg
es
jns
push
mov
push
pop
xor
mov
pop
add
adc
cld
popa
icebp
mov
mov
mov
mov
cmc
or
aad
jo
push
hlt
rcrl
mov
dec
inc
sbb
movsl
out
mov
insl
mov
icebp
movsb
pop
divb
inc
adc
mov
mov
ja
or
popa
cmp
push
rol
xchg
sbb
loopne
jl
arpl
fldl2e
fs
push
mov
std
lods
adc
pop
mov
and
or
cwtl
in
nop
rorb
imul
sbb
cltd
out
adc
push
cmpsl
loope
mov
movb
dec
mov
imulb
js
loope
test
push
dec
mov
popf
in
cmp
sbb
in
sub
ret
xlat
cltd
pop
lahf
cmpsl
add
sub
pop
pop
xchg
fisttpl
add
inc
scas
xor
bound
sbbb
and
cmp
fbstp
mov
repz
mov
cmp
out
notb
inc
int3
mov
std
lret
mov
sub
icebp
add
out
inc
out
inc
outsb
lahf
leave
out
sbb
cli
out
sbb
sub
cmpsb
imul
mov
pop
insl
inc
test
scas
sarb
cwtl
popf
mov
push
test
js
bound
xor
add
fwait
dec
lock
and
pop
push
iret
xor
sub
inc
mov
inc
cli
lcall
dec
xor
adc
imul
repz
dec
mov
and
inc
push
movsb
call
mov
mov
pushf
xor
dec
pop
mov
inc
push
adc
pop
aad
emms
add
pop
rcll
scas
sahf
mov
sub
pop
std
dec
testl
or
inc
push
mov
cmpl
enter
in
xchg
push
cld
addb
out
mov
push
mov
jl
dec
stos
clc
fistpl
or
cmpsl
and
cmc
lcall
sub
call
sti
cwtl
movsb
aam
sbb
mov
js
addr16
mov
cmpsb
incl
je
push
pop
xchg
test
jns
xor
pop
out
dec
push
orl
add
dec
stos
stos
xchg
xor
inc
jbe
repnz
lds
jns
dec
xlat
ljmp
fs
pop
arpl
leave
call
data16
stos
mov
pusha
sub
loopne
aaa
lahf
sub
jp
out
mov
mov
or
scas
xchg
mov
and
imul
jmp
out
pop
std
insb
clc
psubusb
nop
inc
add
inc
sub
sbb
dec
mov
test
cli
lret
in
lods
jg
imul
xchg
not
daa
int
xchg
and
xor
mov
inc
dec
xchg
mov
ljmp
loop
out
dec
lret
jle
mov
sub
loope
int
and
test
sbb
flds
sub
fbstp
push
bound
mov
leave
jmp
sbb
xor
sub
add
jecxz
cmp
fidivrl
cltd
or
xchg
rorl
and
out
jmp
mov
cmp
mov
outsl
cwtl
pop
lods
pop
inc
dec
and
inc
loope
movsl
inc
sarl
or
dec
push
das
call
in
inc
cmp
or
cmp
mov
daa
mov
rclb
in
sbb
in
push
and
xor
and
into
ret
push
dec
jo
jg
testl
lahf
stos
in
loope
fildl
mov
je
push
popf
sub
or
test
ljmp
aas
mov
cli
sbb
bound
repz
jp
aad
push
mov
test
dec
loop
sahf
pushf
pop
scas
dec
push
leave
faddl
call
sbb
cmp
je
pop
fdivrs
and
cmp
repz
inc
xchg
clc
xlat
jo
into
popa
inc
lods
data16
xor
cmpsl
mov
jb
sbb
and
inc
loop
jp
push
fnsave
sub
push
fdivrp
int3
jo
mov
dec
pop
dec
js
xor
out
dec
and
push
lea
and
mov
mov
ret
mov
ljmp
rorb
or
fcomi
hlt
ficompl
fidivrs
dec
mov
aad
add
xchg
mov
or
das
stc
jbe
shrb
or
cmp
mov
mov
or
add
xchg
repnz
xchg
push
push
daa
jbe
nop
xor
mov
adc
notb
cld
negl
ret
inc
add
pop
push
inc
add
ret
cmp
test
push
orb
inc
pop
mov
sahf
add
jns
cli
dec
mov
sahf
out
sbb
jb
xchg
push
push
daa
cld
pop
bound
cmp
and
adc
in
sbb
xchg
sti
ret
data16
sub
sbb
loop
pop
test
aam
out
push
jne
lock
jb
shrb
cli
movsb
lcall
xchg
hlt
mov
fsubl
xor
mov
mov
and
pusha
in
fcomp
out
gs
aam
jl
sub
xchg
aad
pop
adc
insl
dec
imul
insb
popf
jns
xchg
push
cli
or
outsb
lea
mov
ljmp
cmpsb
push
sbb
xor
dec
jo
movsl
adc
leave
lcall
cli
push
mov
cmp
adc
call
imul
adc
daa
or
push
or
cmc
dec
jno
dec
or
insl
psrlq
fs
jmp
xor
and
xor
or
mov
ja
push
call
scas
pop
adc
aaa
rorl
pusha
pop
fcompl
xor
insb
dec
les
int
pop
repz
shlb
in
addr16
dec
ror
sub
xor
hlt
sub
ret
insl
sbb
pop
mov
ljmp
or
jno
jmp
ds
inc
addl
sbb
cld
jmp
mov
cmpsb
mov
daa
mov
orb
bound
pop
out
cmpsl
test
ds
xchg
outsl
xchg
inc
push
repnz
sbb
stos
ret
mov
sbb
sar
jp
popa
push
inc
inc
cmpsl
iret
and
jns
xor
jl
lock
in
ljmp
sbb
rolb
mov
mov
out
and
fwait
push
cmp
gs
inc
lds
ret
mov
inc
cmp
sub
ret
cmpsb
call
faddp
fs
xchg
in
xlat
pop
jbe
test
aad
lds
jmp
fsubrs
xchg
rcll
in
mov
jns,pn
icebp
loopne
test
mov
lret
xor
imul
subb
aaa
test
xlat
push
out
je
imul
jae
inc
adc
icebp
cwtl
xor
mov
repz
sti
push
test
pusha
std
sub
push
sahf
lods
out
jmp
xchg
lret
dec
cmpsb
aas
cmp
jno
jmp
loope
or
add
inc
shl
mov
adc
xchg
add
pop
addr16
je
stc
mov
lds
loope
das
pop
dec
dec
push
cmc
inc
sarb
scas
mov
dec
cmpl
pop
sbb
add
jns
addb
push
leave
inc
movsb
push
xchg
sbb
pop
sti
in
popa
and
iret
push
fwait
adc
pop
and
sub
jmp
movl
cmp
lea
lea
mov
arpl
pop
cmc
sbb
mov
and
push
dec
fildll
mov
dec
rorl
jg
sarb
negb
clc
mov
out
out
pop
negl
daa
data16
mov
das
or
or
add
mov
mov
dec
ss
cltd
addl
add
js,pn
add
insb
dec
outsb
fs
cmp
mov
or
cltd
mov
pop
mov
sbb
std
div
inc
in
sub
out
in
repnz
imul
scas
mov
mov
aaa
addl
jno
insb
cmp
in
sub
ss
data16
mov
pusha
ret
or
cmp
gs
xor
xor
mov
outsb
out
into
mov
cwtl
xor
xchg
divl
arpl
shll
jo
andb
popf
cmp
sub
fnstenv
stos
int3
mov
mov
cli
out
cmp
mov
jno
pop
xchg
aas
inc
repnz
pop
mov
dec
pop
sbb
fimull
inc
xchg
push
mov
ret
jnp
decb
xorb
adc
or
cmp
mov
int
dec
jmp
je
incl
xor
enter
loop
xor
xchg
push
stc
cmpb
pop
dec
dec
stos
movsb
cmp
sti
pusha
xor
rcl
bound
fwait
cmp
imul
add
jg
stos
insl
mov
sub
cmp
mov
and
lahf
xchg
jecxz
push
fmulp
scas
dec
cwtl
mov
push
mov
aaa
xchg
ret
xor
inc
pusha
imul
inc
add
mov
fnstcw
fsubl
jp
pop
shrl
bound
clc
dec
dec
sarl
cwtl
lret
ja
adc
loop
sub
rcr
fsts
int
inc
fadds
lret
test
enter
daa
cmp
movsb
es
pushf
jnp
push
and
inc
xor
inc
push
pop
xor
push
sub
nop
mov
sbb
mov
adc
les
push
mov
jecxz
pushf
xchg
inc
xchg
sbb
add
or
sub
aaa
sarl
dec
xchg
pop
movsb
pop
jne
sar
mov
rorl
lods
inc
mov
lret
lret
loope
iret
leave
fdivl
add
or
mov
mov
cli
in
roll
cli
mov
sahf
stos
out
or
sub
jbe
test
shr
into
jmp
jnp
or
sahf
ret
push
aam
lcall
jle
fbstp
xchg
adc
into
xor
decl
mov
icebp
insl
add
lods
jno
or
inc
cmpsl
test
arpl
push
fcoms
mov
fisttpl
lret
sub
xor
jl
sub
enter
inc
lret
js
sarl
pop
mov
insl
mov
cld
lcall
mov
leave
stos
sbb
jecxz
ds
and
sub
test
inc
sbb
xor
cli
xchg
dec
repnz
in
loope
inc
test
add
push
xor
mov
mov
sub
loop
negb
test
inc
sub
ficoml
mov
test
test
push
fbld
jnp
dec
push
incb
in
mov
add
jnp
dec
cmp
addr16
insl
cmp
rolb
pop
push
jp
aaa
mov
push
popa
add
enter
mov
lahf
xchg
loop
mov
test
popf
mov
jo
mov
and
push
xchg
cld
push
fsubrl
scas
push
insb
outsb
cmpsl
adc
insl
push
cmpsl
aad
mov
and
inc
pushl
pusha
sbb
mov
dec
cmp
lahf
icebp
cmp
jne
invlpg
adc
jge
xchg
cld
out
or
and
cmp
sub
js
or
jmp
adc
sbb
out
aad
je
aaa
iret
sub
push
test
or
xor
jb
pop
iret
psrld
jns
cli
insl
add
mov
sbb
push
out
sbb
in
or
insb
sarb
out
test
repnz
and
adc
mov
mov
aaa
xor
push
je
insb
and
mov
dec
cli
scas
sti
sbb
cmc
scas
mov
pusha
idivb
test
push
sbb
icebp
pusha
lock
or
xor
out
fiaddl
pop
ss
add
addr16
mov
mov
push
adc
pushf
xchg
dec
jns
clc
negb
out
pop
xor
push
mov
into
adc
cmp
aaa
cmp
xorb
inc
test
sub
ficoms
mov
sbb
pushw
repnz
mov
sub
add
bound
ret
cwtl
out
inc
stos
inc
inc
jbe
dec
std
push
dec
or
lahf
shr
lock
xchg
fbld
pop
cs
add
out
cmp
cli
cmp
iret
sbb
shll
inc
mov
mov
and
xchg
bound
add
insb
enter
dec
test
and
inc
xchg
pusha
sub
or
mov
in
mov
jo
jp
inc
std
jae
dec
iret
aaa
aad
mov
mov
pop
jo
or
mov
mov
mov
stos
jg
inc
daa
shrd
test
sbb
pop
inc
gs
dec
mov
jg
lcall
mov
pop
addr16
popl
adc
cmp
jns
call
cmp
push
jmp
xchg
xchg
hlt
mov
dec
pop
je
shlb
cmp
addr16
or
xchg
mov
psubsb
ja
or
and
pop
inc
stc
popa
and
mov
cmpsb
pop
loope
mov
xchg
ds
cmpsb
popf
jbe
pop
mov
inc
mov
popa
push
insb
pop
sbbb
jae
dec
icebp
cs
inc
cmpsl
shrb
and
jno
mov
jae
push
xchg
push
inc
pop
mov
mov
xchg
adc
jmp
iret
pop
cmp
test
xor
inc
fistl
xchg
test
adc
mov
lret
inc
jae
xchg
xor
push
sbb
xchg
adc
pop
fwait
lea
daa
mov
cmp
sti
or
push
shll
dec
sbb
or
pop
je
icebp
adc
mov
inc
movsl
aas
popa
push
dec
repnz
test
xor
pop
mov
call
cmp
repnz
sub
repz
in
push
adc
jge
leave
fsubrp
jmp
loope
sub
jge
cli
icebp
sub
ficoms
incl
shlb
push
stos
ret
cli
cmp
movsl
sbb
dec
mov
xor
rcl
fnstsw
add
repz
clc
mov
movsb
inc
je
adc
fdivl
dec
pop
lock
loope
test
shll
sbb
data16
lea
scas
sahf
or
inc
or
pusha
andnps
xchg
sbb
addb
sbb
jb
sar
adc
or
inc
sahf
fdivs
outsb
cmpsl
dec
mov
pop
jmp
aaa
data16
dec
mov
cmp
pop
cmp
mov
dec
jecxz
cmpsl
xchg
push
add
scas
cmpsb
pop
push
int
das
in
jmp
xor
inc
sub
xchg
insb
sub
push
mov
movsb
test
pop
pusha
arpl
inc
or
int
xchg
pop
sbb
inc
mov
xchg
or
and
dec
bound
test
out
or
stc
or
sub
push
repz
icebp
rorb
cwtl
test
jb
je
cmp
sub
xchg
push
inc
std
jp
mov
mov
fwait
aas
mov
out
in
test
pop
call
inc
fistpl
jb
mov
fwait
jne
sti
pop
jns
and
test
xchg
xor
std
mov
mov
jmp
call
lahf
xor
cmp
cmp
pop
data16
and
cwtl
ret
cs
outsb
test
lret
inc
test
mov
dec
imul
imul
pop
push
out
fidivrl
les
pop
scas
pop
test
jb
ljmp
and
jl
inc
or
popa
imul
cmpsb
cmp
mov
in
ret
inc
lea
fimull
adc
movsb
fnstenv
cmp
push
pop
fsubrs
cmp
push
icebp
incl
das
imul
insl
cmp
xor
cmpb
sbb
and
mov
push
jge
sub
dec
xor
jl
sbbl
aas
mov
mov
cmpsl
inc
mov
adc
jbe
mov
rcl
js
cli
insb
cmp
aas
loope
push
std
mov
xchg
insl
add
xor
pop
mov
scas
jmp
shrb
imul
clc
ret
pop
in
in
ror
fsubrl
out
loope
inc
mov
mov
sub
sti
pusha
scas
add
xor
shrl
ret
in
add
div
inc
cltd
push
jbe
jb
mov
jno
pop
adc
in
sub
es
cmp
fs
ret
mov
loope
xor
push
mov
test
dec
jl
arpl
inc
xchg
mov
cli
add
dec
lret
lds
mov
jno
dec
aas
movsl
and
mov
out
enter
pop
imul
in
popa
push
insl
adc
inc
mov
sub
mov
rcrb
daa
adc
push
jg
out
jae
pmaxsw
sub
mov
pop
mov
in
jle
dec
movsb
leave
add
lods
lods
jns
fidivrs
shll
pop
idivl
push
dec
push
ljmp
mov
dec
sub
xchg
orl
negb
cmp
outsl
or
scas
mov
and
hlt
divb
lret
xor
aam
pop
ljmp
shrl
loopne
mov
adcl
jl
insl
dec
les
imul
lret
sbb
stos
stos
mov
xor
out
mov
stc
push
fsubs
aam
adc
push
sub
xchg
sub
popa
jne
cmp
push
dec
xchg
das
adc
es
daa
in
mov
dec
mov
mov
scas
shlb
push
cld
mov
jl
repnz
int3
shlb
cmpsl
jns
lds
push
push
adc
std
sub
outsl
inc
mov
lret
icebp
adc
xchg
mov
js
xor
inc
repnz
in
push
jo
data16
rcrb
fwait
aam
xor
mov
popa
je
sub
cmc
nop
shlb
xchg
push
popa
into
push
push
add
addr16
push
shrl
in
xor
movsl
cli
and
inc
pusha
add
aad
popf
push
jle
push
mov
test
icebp
jge
pop
imul
imulb
xchg
sti
xor
mov
int
ss
jns
stos
sub
add
cltd
mov
and
mov
jae
pop
dec
cmpsb
les
mov
jae
push
test
mov
lods
bswap
jb
cmpb
add
inc
lcall
or
push
in
inc
inc
push
lds
cmp
aaa
mov
and
imul
fdivrl
xchg
scas
xchg
les
call
mov
stos
mov
loope
or
adc
incb
mov
insb
out
mov
in
inc
pop
xchg
push
sbb
mov
cltd
jb
jae
outsb
dec
add
and
mov
test
pop
sbb
adc
stos
dec
push
sub
hlt
fdivr
dec
stos
adc
mov
xchg
faddl
push
sub
fs
pop
cmpsl
test
mov
lods
call
push
adc
xor
outsl
ljmp
sbb
jb
orb
dec
xor
in
push
stos
xor
mov
enter
cmp
lcall
jle
jecxz
sbb
add
adc
arpl
lret
sbb
divl
sub
jecxz
inc
adc
push
push
and
push
and
cmp
or
jae
rorl
jl
inc
xchg
ret
mov
pop
pop
cs
mov
gs
mov
mov
hlt
popf
push
popa
test
pop
out
out
pushf
mov
mov
mov
sbb
pop
mov
stos
pop
dec
sbb
ret
or
std
xor
mov
mov
push
int
subl
adc
push
jne
mov
mov
inc
mov
je
lret
ss
and
adc
out
pop
icebp
jmp
and
jg
fistpl
test
xchg
jae
popa
add
adc
xor
add
outsw
jl
jbe
lock
int3
jne
fstpl
sti
mov
and
or
cmp
lcall
inc
dec
sub
lock
pop
and
adc
mov
mov
les
jo
pop
xchg
cs
adc
jnp
mov
daa
add
rcl
sbb
sbb
loopne
fsubs
pop
dec
imul
sti
not
out
mov
test
fld
mov
xchg
jp
jmp
lods
dec
insb
popf
mov
adc
movsl
fcomps
imul
xchg
ret
outsb
ret
xchg
xchg
std
movsb
iret
add
andb
stos
jo,pn
mov
and
lret
fisubs
hlt
pop
out
mov
test
fidivl
cmp
stc
loopne
outsl
xchg
push
adc
xor
cmpsb
inc
orl
add
lea
inc
inc
xor
mov
fisubs
jp
mov
add
lret
push
cmp
in
inc
xchg
lret
mov
mov
mov
xchg
pop
insl
adc
add
pop
shrl
inc
add
scas
or
ds
lds
push
nop
xor
adc
out
outsl
push
mov
lea
sti
inc
lds
jge
add
jl
test
dec
jnp
mov
jmp
hlt
dec
sbb
xchg
pop
fildll
fnstsw
jne
jb
mov
cmp
push
cmpb
push
jl
scas
shll
mov
push
movsb
cmp
mov
loopne
movsb
push
add
js
test
jl
inc
xchg
mov
testl
mov
movsb
xchg
jb
das
push
out
mov
nop
and
ja
mov
cmpsl
ss
push
test
int3
leave
mov
xor
xchg
mov
sub
mov
and
dec
push
xchg
mov
lods
aad
mov
and
xor
xor
loopne
hlt
pop
jno
icebp
dec
xor
lods
cmp
mov
xchg
enter
rorb
cli
push
es
sbb
or
fsub
cmp
push
sub
jge
adc
sti
dec
push
dec
movsl
rcrl
ret
push
xchg
mov
and
dec
xchg
and
jae
xor
or
pop
push
sbb
scas
mov
or
push
jle
push
xchg
mulb
lea
out
and
in
jbe
or
xor
insb
and
lods
sarl
xchg
push
aad
lea
xchg
mov
ljmp
adc
mov
pop
add
sahf
loope
popa
fistps
rcrb
lods
btc
inc
repz
xchg
adc
into
push
mov
ljmp
mov
daa
roll
mov
icebp
dec
push
fisttps
imul
divb
pushf
outsb
cmp
addr16
sbb
pop
dec
clc
mov
iret
stos
cs
jnp
loope
xchg
cmc
arpl
rclb
xlat
jg
daa
xchg
xchg
jo
sbb
push
cmp
mov
xchg
dec
ja
fisubs
inc
and
fstps
jecxz
idivl
cmpb
jne
int
shlb
pop
dec
icebp
and
pop
in
sarb
adc
xchg
jecxz
push
xchg
andb
mov
adc
jp
shlb
cmc
jbe
add
inc
out
cmp
idiv
push
and
pusha
cmpl
mov
jge
sbb
into
xchg
pop
imul
jg
stos
push
mov
add
out
sbb
fldl
jg
lods
pop
rorb
cmp
dec
add
or
mov
jo
imul
pop
loop
inc
bound
mov
enter
push
ds
push
rol
rorl
pop
ret
cmp
dec
mov
push
popf
js
mov
mov
push
xchg
xor
inc
lds
mov
aam
fcomps
add
and
or
fucomi
sbb
popf
add
daa
adc
adc
fs
xchg
inc
outsl
test
jp
add
xchg
lods
mov
fistl
sahf
jnp
lods
add
aas
ja
ja
pop
gs
shl
jbe
fidivrl
dec
aaa
inc
loop
add
dec
lahf
sti
mov
mov
xchg
push
add
mov
xchg
les
cmpsb
in
fcoms
inc
mov
cmp
pop
adc
cmp
sub
imull
ss
jno
xchg
leave
pop
negl
and
sub
lods
xchg
mov
adc
loop
sub
mov
dec
gs
jecxz
cmp
push
sahf
sub
pop
sbb
das
jo
xor
sub
push
add
cwtl
int3
xchg
sub
push
push
daa
frstor
orb
iret
pop
loop
icebp
mov
jp
in
fwait
adc
add
mov
mov
and
sbb
subb
div
xor
pop
mov
xor
add
ret
loopne
outsl
mov
cld
mov
popa
cltd
or
bound
lock
cs
lods
or
sub
sub
scas
fbld
add
mov
push
mov
xchg
mov
ret
out
jb
test
in
and
adc
jns
mov
ds
mov
scas
dec
jmp
jecxz
push
fs
mov
dec
adc
pop
notl
push
mov
xchg
inc
loop
xchg
in
dec
cmp
push
mov
xchg
jmp
mov
xchg
inc
roll
sub
jmp
dec
idivb
js
lret
xchg
inc
xor
or
mov
test
mov
dec
arpl
cmp
aad
sub
insl
sbb
mov
scas
cmpsb
push
rclw
lock
shll
jno
push
lods
les
mov
xchg
cld
int3
pop
sub
mov
cmp
push
int
pop
pop
call
cmp
dec
push
xchg
cld
pop
push
mov
push
xor
lods
add
sub
mov
in
imul
mov
sbb
jne
adc
cld
aam
or
mov
test
ret
push
leave
pop
loop
out
jns
orl
adcl
jb
aad
mov
aad
mov
js
call
fisttps
orb
adc
out
jno
add
add
dec
cltd
inc
aas
push
int
jo
test
push
dec
das
popl
je
mov
push
lret
or
mov
or
adc
add
leave
add
sub
subb
lahf
xor
lcall
cltd
ret
xchg
or
dec
xchg
xlat
movsb
inc
mov
lea
jo
out
insb
stc
jle,pt
aad
mov
xchg
inc
in
movsl
push
sub
mov
cmp
popa
cmp
dec
into
dec
cld
fnstcw
ret
adc
inc
xor
push
inc
mov
pop
cmp
sub
mov
int3
inc
adc
aam
mov
add
push
leave
scas
jmp
jae
lock
xor
sbbb
jecxz
fcoms
pop
cmp
and
xchg
jp
xchg
dec
mov
lods
mov
mov
jnp
xor
xor
scas
je
mov
dec
mov
test
jl
stos
cmp
lea
and
inc
fcmovu
push
std
sbb
or
push
movsb
lret
and
sub
loope
push
jnp
sub
fsubrl
loop
cmpsl
dec
inc
mov
push
bound
insl
sbb
sub
sahf
sub
cld
loope
in
cmp
inc
notl
adc
ss
and
mov
adc
mov
test
sub
shlb
jg
lret
mov
cmp
xor
pop
sahf
ficoms
jmp
pusha
push
inc
iret
mov
and
imul
rcrb
mov
mov
inc
stos
mov
pop
inc
mov
sbb
adc
mov
enter
jb
xchg
dec
mov
lahf
dec
orl
dec
or
push
jecxz
push
fcmovb
dec
sbb
pusha
or
xchg
and
adc
jnp
or
mov
sti
mov
or
mov
daa
pop
fiadds
imul
outsl
push
shlb
lea
fdivl
fimuls
lcall
xor
pop
shl
aaa
movsl
cmp
cmp
fldenv
jmp
dec
sbb
cmp
ret
mov
or
add
sbb
enter
test
pushf
mov
lea
sahf
scas
inc
fcoms
and
int
imul
xor
or
fistl
xor
loope
xchg
aad
mov
jns
inc
jnp
in
jl
movsl
cmp
pushf
jns
xchg
popl
xchg
inc
mov
jl
out
mov
mov
and
leave
in
mov
mov
pushf
scas
out
sbb
lea
fisttps
cwtl
jns
sbb
rclb
int
loope
cmp
cmp
aam
mov
out
mov
out
push
fs
js
popf
out
cmp
inc
pop
xchg
in
daa
mov
xor
pop
fwait
ret
out
filds
mov
mov
scas
adc
sbb
add
jne
inc
jmp
lret
gs
push
add
jae
push
and
sub
inc
mov
mov
push
clc
sub
mov
cs
push
sub
outsl
daa
divb
ror
pop
jns
lods
icebp
xchg
fsubrl
add
cwtl
cmpsb
sti
fdivp
and
push
mov
sbb
fmull
aaa
loope
mov
mov
int
por
mov
adc
shl
pop
pop
mov
pop
push
dec
fistpl
and
dec
adc
mov
mov
add
adc
dec
and
mov
lcall
jmp
push
ss
lcall
and
pop
mov
mov
mov
rorb
sub
cmp
pop
or
lods
imul
push
sub
or
in
hlt
inc
fwait
iret
xor
lret
sub
cmpsl
shrl
repnz
sbb
or
repnz
dec
adc
test
mov
mov
aas
lret
push
imul
pop
negl
ret
sbb
sub
test
ds
mov
ret
popf
fidivs
adc
lret
jnp
das
call
outsl
jb
scas
jnp
lock
gs
repnz
xlat
jae
adc
xchg
lea
testb
imul
sbb
mov
inc
xor
fidivl
and
mov
jno
int3
cwtl
cwtl
pushf
xor
imul
sub
idiv
mov
insl
add
sub
adc
fcompl
mov
lock
adc
or
add
mov
lods
mov
push
movsb
push
in
xlat
inc
cmp
shrl
cmp
int
arpl
lods
je
jb
out
mov
xchg
adc
or
and
loop
pop
dec
ficompl
aad
sub
dec
xchg
shll
outsl
int
icebp
out
scas
inc
ret
sbb
add
ret
test
sbb
mov
mov
mov
xchg
or
mov
sub
push
push
add
adc
adc
push
mov
out
scas
repnz
inc
xchg
add
xchg
xchg
mov
rclb
mov
fdivrl
xor
popa
add
adc
daa
loopne
pop
sbb
cmp
add
xchg
mov
xor
jmp
leave
cli
jno
xchg
flds
or
or
lods
sbb
divl
adc
movsl
adc
sahf
ror
jno
pushf
mov
ficoml
xor
mov
cmp
loopne
sub
mov
cmpsb
xlat
xor
les
fadd
pop
inc
xchg
fwait
inc
ret
pop
xchg
push
push
and
dec
ss
jl
loopne
imul
add
add
ja
sarl
jmp
jo
push
xchg
popa
shrl
mov
mov
inc
or
cwtl
mov
mov
pop
jne
adc
sbb
add
lahf
and
lret
or
and
sti
sub
jbe
push
xchg
adc
outsl
add
cli
lock
and
cmp
jo
mov
xchg
fmuls
push
xchg
lds
add
jge
and
loope
arpl
outsb
int3
movl
daa
inc
xlat
or
out
xchg
or
xor
xor
pop
xchg
arpl
add
push
fistpl
dec
pop
mov
addl
pusha
inc
mov
sub
cld
ss
adc
add
adc
adc
cmp
sbb
fstl
jae
std
or
cmp
js
dec
xor
push
int
sub
in
add
adc
loop
pop
in
or
push
shr
stos
sahf
mov
popf
imul
xorl
mov
cli
lcall
das
adc
mov
bound
push
cmp
pop
sahf
sbb
xor
dec
mov
insl
and
out
ret
push
cmp
psubsb
movsb
xor
test
add
testb
pop
pop
adc
mov
pop
and
fadd
jmp
inc
xchg
lds
clc
popf
fisubl
aas
imul
xlat
cmp
cli
cmpsb
lcall
loopne
mov
xor
jae
xchg
rorb
fwait
cmp
dec
andl
in
iret
fnstenv
xchg
jbe
pop
inc
leave
ret
aas
pusha
jmp
adc
test
sub
fmul
mov
dec
adc
add
mov
cmpsl
enter
sahf
scas
sarl
notl
or
cmpsl
push
movsl
mov
cmp
frstor
mov
out
mov
shlb
cld
nop
es
xlat
addb
incl
jbe
and
cmp
in
cwtl
movsb
dec
jno
mov
mov
lahf
lods
data16
int3
or
fadds
enter
enter
dec
out
add
into
jnp
dec
mov
lods
das
mov
ss
and
push
std
testl
fnstsw
repz
jge
lods
in
xchg
push
mov
jle
movsb
dec
movsl
cmp
and
cltd
xchg
cmp
jmp
lds
hlt
insl
mov
fs
test
jecxz
xor
jb
sbb
jp
inc
cmc
pop
stc
sbb
std
xchg
aas
lahf
scas
nop
popf
xor
add
dec
stc
popa
inc
mov
inc
push
xchg
or
or
movsb
inc
stc
and
shl
fldl
repnz
mov
dec
les
popf
inc
pop
cld
out
jl
data16
inc
or
in
sub
dec
das
mov
rcl
mov
push
xor
lds
cmp
std
mov
push
pop
xor
jge
xchg
jnp
cmp
xor
cmp
orl
cmp
out
aam
fsub
add
dec
sub
fldcw
xlat
cmp
test
gs
imul
lods
mov
pop
push
mov
pop
cbtw
insl
xchg
mov
mov
daa
clc
arpl
andb
mov
das
fmulp
add
daa
in
push
shll
push
ret
lcall
mov
mov
enter
mov
fidivs
or
mov
mov
dec
ljmp
sub
shrb
jns
xchg
push
inc
inc
cmpsb
iret
mov
push
ror
dec
std
sub
xor
les
mov
pop
lds
push
gs
into
inc
pop
push
sbb
lret
test
sahf
and
lret
or
out
fidivrs
stos
or
jp
shrl
icebp
fidivrl
in
sbb
mov
out
and
outsb
push
sbb
pop
out
outsl
movsb
imulb
pop
and
xor
insl
xor
sbb
out
ret
fstl
pop
fdivs
inc
les
xacquire
push
jmp
aam
push
inc
mov
imul
ljmp
sbb
fnsave
mov
xor
sub
mov
std
int3
nop
dec
fcomp
jmp
stc
jl
loopne
adc
sbb
xlat
jle
adc
gs
inc
movsb
xchg
and
xor
and
lret
push
sub
andl
push
sub
xor
cmp
movsl
pop
out
or
and
or
or
mov
mov
fidivrl
cld
repnz
or
cltd
call
and
and
or
dec
mov
pop
xchg
scas
pop
mov
fimull
loop
sub
pop
movsb
or
cld
xchg
movsl
or
jmp
add
daa
data16
pop
cmp
sbb
out
jmp
sti
or
or
stc
imul
cmpsb
adc
adc
pop
idivb
sarb
xchg
adc
cmp
xor
fcomp
push
push
sub
dec
cmpsl
pop
xchg
inc
pop
mov
inc
mov
xchg
pop
dec
ds
aam
int3
or
xchg
mov
pop
push
sbb
invd
inc
push
xchg
jnp
xchg
sbb
aas
xor
jae
imul
cli
mov
xlat
lods
ss
jl
xchg
pop
jbe
inc
jno
cs
mov
or
sub
sbb
inc
push
hlt
xchg
es
mov
and
mov
jnp
pop
xchg
outsb
adc
ljmp
jo
add
lock
outsl
adc
push
dec
test
cmc
test
mov
inc
outsb
or
jnp
data16
and
fstps
sub
shlb
mov
mov
cmp
cmpb
adc
and
xor
repz
insl
xchg
mov
testb
push
jl
xor
adc
xlat
adc
loop
dec
mov
and
pop
jbe
clc
push
push
mov
lcall
jns
aas
incb
mov
mov
or
adc
inc
cs
pusha
or
push
push
int
mov
outsl
imull
jne
mov
jnp
xor
xor
xchg
mov
imul
dec
adc
inc
push
rcrb
test
jns
loop
cmp
xor
stc
or
mov
mov
loope
testb
js
adc
pop
test
mov
fisttpll
sbb
movsb
enter
pop
mov
xor
jp
jmp
push
or
sbb
rorl
xchg
das
xchg
in
test
or
adc
pop
cli
lock
or
jge
pop
divb
pop
lcall
negb
in
mov
mov
sbb
cld
lock
fldt
divb
mov
xor
fnstcw
inc
lahf
cs
movsb
stc
fsubrl
pop
and
ret
into
sub
call
repnz
ds
inc
shll
fdiv
leave
jae
arpl
mov
jo
pushf
inc
nop
sahf
cmp
aaa
mov
int3
jle
leave
mov
push
vmovddup
inc
sub
jnp
cltd
inc
push
int
inc
push
in
out
push
in
xchg
jmp
dec
mov
jns
cmpsl
pop
loop
cltd
cmp
stc
sbb
out
jne
stos
xchg
inc
punpckhwd
sbb
gs
dec
leave
add
jne
sti
clc
jmp
sarl
add
mov
cltd
inc
test
sub
mov
daa
mov
addr16
aam
jg
imul
data16
shlb
mov
adcb
das
outsb
xchg
jecxz
jg
nop
fistpll
add
jl
sbb
adc
mov
es
adc
out
leave
mov
testl
pop
rol
cmp
scas
mov
scas
xor
inc
pop
jnp
jp
cltd
fnstenv
mov
out
push
cmpsl
daa
outsl
daa
jb
mov
jmp
push
jle
push
icebp
sbb
fmuls
or
in
stos
jmp
and
ja
out
orl
out
or
xor
inc
ret
mov
push
mov
cmp
inc
addr16
pop
push
or
xchg
mov
mov
in
loopne
lods
push
mov
rclb
mov
imul
movsb
xor
dec
add
xchg
pusha
sub
pop
and
test
jl
arpl
iret
lret
outsb
rorb
xchg
out
and
cld
outsl
lret
inc
jno
adc
mov
xchg
sti
dec
stos
dec
dec
repz
test
cs
je
inc
mov
add
fistl
adcb
dec
aaa
test
add
adc
jo
cmc
pop
repz
sbb
clc
lea
sahf
or
dec
sbb
and
sbb
mov
std
mov
adc
ds
shl
jns
int3
daa
call
mov
jecxz
push
add
loopne
pop
adc
xchg
sbb
mov
movsb
rorb
into
xor
pop
rcll
in
xchg
xor
cmp
pop
push
xchg
enter
das
jge
mov
mov
test
lcall
gs
xchg
cmpsl
dec
jge
dec
add
dec
lock
jmp
andl
lods
xor
cmp
mov
mov
mov
imul
mov
and
enter
add
stos
stos
xor
adc
repnz
xlat
ret
and
fnstsw
lods
outsb
inc
sbb
xor
js
push
xor
in
ret
addl
adc
popf
mov
dec
es
fsubs
pusha
fdivrs
mov
add
push
dec
imul
sbb
mov
in
sbb
test
sbb
nop
or
cmp
hlt
ret
pop
pop
nop
sbb
jp
xchg
rolb
test
add
adc
js
pop
dec
loope
jae
fbld
jnp
scas
add
pop
sub
test
dec
inc
pushf
ja
pop
je
mov
mov
inc
in
sbb
cmc
adc
int
mov
mov
fstpl
lcall
cmovl
cli
inc
dec
pop
mov
dec
pop
lahf
mov
push
pop
mov
bound
iret
imul
rcrb
xor
jg
mov
and
outsb
scas
lds
notb
fildll
out
shl
scas
rolb
test
sahf
rorl
dec
leave
test
push
sbb
add
pop
and
dec
adc
pop
enter
das
pop
es
pop
cmpsl
mov
test
push
aas
aas
add
push
mov
aas
dec
mov
jne
addr16
ljmp
mov
and
cmp
in
sub
dec
cld
xchg
in
movsb
lret
je
mov
clc
cli
mov
mov
ret
push
cmp
aam
inc
or
pop
and
push
movsl
sub
jno
jne
rorl
test
test
xchg
daa
testl
ret
mov
nop
repnz
jl
pop
xor
jbe
inc
cmp
and
push
cmpsl
push
loopne
cmc
aas
mov
enter
cmpsl
push
mov
clc
push
fnstenv
cld
mov
pop
mov
xor
neg
mov
in
dec
enter
or
xchg
sub
jae
outsb
xchg
shl
in
cltd
mov
sbb
mov
andl
shll
fdivr
repz
and
inc
cwtl
mov
xchg
xchg
scas
jl
push
mov
fucomip
adc
mov
aam
shrb
mov
sbb
mov
es
mov
mov
mov
mov
jp
fldt
jnp
or
mov
sahf
popa
js
cwtl
aam
push
call
push
sbb
ds
daa
dec
push
jno
cltd
xchg
sbb
and
xlat
inc
sbbl
inc
or
imul
xchg
adc
int
dec
inc
pusha
ss
mov
adc
fldl
cmpb
pop
pop
mov
dec
out
jmp
dec
stos
mov
and
jmp
aas
xor
pop
fmull
sti
insb
jnp
das
xor
and
rclb
and
mov
sbb
push
and
cwtl
cltd
inc
xor
stos
jae
sarl
stos
jnp
xchg
popf
test
add
cltd
adc
adc
xor
push
xchg
lods
push
dec
jne
pop
ret
push
xor
jnp
adc
mov
adc
xchg
test
mov
ret
pop
adc
bsr
adc
mov
xlat
rcl
cmp
jns
inc
lret
repz
cwtl
xchg
push
sub
aad
movsb
sti
jecxz
cld
mov
lods
sbb
sbb
jbe
jmp
add
bound
sbb
cmc
sub
mov
in
cmp
out
js
mov
mov
and
iret
xchg
lock
cmp
int3
xor
in
mov
jnp
inc
cmpl
add
jge
icebp
and
stos
incb
popa
jle
jne
dec
stc
psubw
shrb
jp
jno
mov
leave
xchg
fidivrl
mov
frstor
xor
inc
dec
decl
fsubrp
dec
mov
adc
xchg
mov
mov
add
sub
dec
enter
adc
in
packssdw
mov
jne
and
loopne
dec
cld
xor
lds
xor
mov
xchg
cwtl
nop
push
icebp
in
dec
jnp
dec
mov
insb
mov
add
push
gs
sub
iret
cmp
mov
shl
and
and
iret
or
insb
mov
mov
push
leave
inc
leave
fsubrs
cltd
lcall
scas
push
add
cltd
jmp
xor
jp
repz
mov
jl
mov
sub
mov
call
jmp
push
and
iret
test
and
cs
orl
sbb
dec
in
loopne
push
and
mov
lret
mov
mov
lea
push
into
xor
int3
and
ds
clc
mov
mov
stos
in
or
sahf
xor
mov
popf
pusha
iret
or
stos
sbb
mov
push
or
mov
adc
mov
orb
xor
ljmp
mov
fcomip
mov
pushf
sbbb
pushl
loopne
mov
adc
mov
lea
add
push
xor
fwait
test
mov
jbe
in
push
fmulp
push
pop
lret
aam
push
pop
lret
and
aas
in
movsb
sarl
adcl
pop
lret
or
ret
inc
fnstsw
cmp
xchg
push
das
cli
cwtl
fsubrs
movsl
fdivrl
loop
push
fistpll
pop
repnz
lret
iret
xchg
and
and
fsts
mov
scas
mov
pop
xlat
xor
add
or
mov
sbb
mov
push
mov
push
cmovb
mov
push
lcall
imul
or
popf
aaa
push
pop
dec
aaa
lahf
cmp
mov
jns
lock
je
cmpl
add
out
test
push
add
hlt
ret
mov
xchg
sbb
pop
repz
mov
mov
sub
push
xlat
out
jmp
pop
xchg
push
das
scas
pop
fdiv
sub
xchg
pop
bound
lock
gs
mov
jp
push
pop
adc
pop
inc
mov
xchg
cwtl
add
inc
fldl
push
xor
data16
sub
xchg
cmp
jo
jg
cmpsb
ret
mov
xor
inc
push
aad
mov
cmp
jp
enter
out
pop
es
je
mov
adc
mov
cmp
push
inc
xchg
sub
loopne
lret
xor
cmovno
dec
jmp
xor
ret
fidivrs
mov
xor
mov
ds
cmc
jbe
add
fbld
je
psubusb
lret
mov
adc
inc
in
pop
lock
jp
pop
sbb
push
cmpsb
mov
icebp
push
fnstsw
repz
pop
xor
test
lcall
incb
fisttpll
push
fcmove
sahf
cmpb
xchg
jge
int
adc
cmpsl
push
cwtl
adc
mov
mov
or
idiv
xor
mov
mov
xchg
aad
pop
call
out
pop
scas
mov
mov
pop
es
scas
cmp
scas
sub
mov
add
push
mov
test
inc
out
imul
xor
push
sbb
cmp
pop
cmpsb
lret
es
dec
lods
jnp
inc
push
cs
shrl
or
jne
xor
divl
scas
or
mov
mov
cmp
sbb
pop
in
movsb
xorb
pop
addb
fwait
hlt
clc
movsb
fninit
add
call
or
inc
nop
and
mov
lods
xor
push
cmpsb
rcll
pop
lret
cmp
sbb
loop
jl
hlt
jl
sbb
fdivr
add
mov
mov
mov
imul
repz
arpl
or
inc
lret
int3
pop
das
stc
in
sarl
fdivs
dec
repz
fs
and
lahf
insl
push
notw
mov
cmp
cmpsb
xchg
lret
enter
mov
add
xchg
int
mov
les
into
jg
and
xlat
cmc
sarl
icebp
jp
test
push
inc
test
pushf
cld
cmpsb
push
mov
out
add
cld
andl
mov
and
rol
add
ret
iret
mov
sbb
mov
mov
xor
leave
movsl
ja
repz
push
les
arpl
xchg
das
jns
std
and
rolb
mov
fldt
xchg
inc
adc
popf
and
rolb
daa
or
adc
ret
pop
mov
mov
xor
adc
sbb
mov
fcomp
cmp
popf
jg
cmp
dec
out
mov
add
jp
daa
out
mov
and
jg
scas
sbb
mov
push
mov
mov
inc
push
sub
into
testl
aas
jne
aas
es
cmp
mov
mov
test
xor
ffreep
and
enter
xchg
int3
mov
sarl
push
or
fistps
daa
insl
and
cmp
and
and
loop
mov
dec
leave
dec
sbb
pop
pusha
push
rolb
movsb
idivb
icebp
dec
clc
lret
dec
dec
jle
dec
cmp
out
in
xor
mov
adcl
fidivl
aad
call
pop
mov
cmpsb
xchg
scas
out
pushf
iret
cmc
xor
fwait
mov
and
aaa
out
or
fdivrl
in
pop
sub
dec
inc
mov
outsb
ds
and
dec
gs
cmp
cmc
aaa
mov
ret
mov
pusha
popl
push
jp
addr16
push
sbb
inc
and
std
lock
push
push
call
lods
add
ja
loop
lahf
outsl
and
mov
insl
cmp
push
pop
cmp
push
xor
inc
mov
loope
sub
sahf
mov
push
out
iretw
jmp
data16
jb
rcll
xor
addl
fwait
xor
inc
js
inc
testl
adc
mov
push
pop
push
fidivrs
nop
dec
in
mov
and
and
pop
jae
dec
add
mov
sub
inc
mov
fcmovne
lret
xchg
mov
xlat
jge
in
fcomps
jne
jmp
stos
xchg
hlt
add
clc
lock
sbb
bound
ret
shrb
mov
mov
sahf
inc
pop
int3
nop
jl
mov
adc
jg
movsl
and
mov
aas
cld
sbb
pop
lods
push
fs
ljmp
jmp
sub
repnz
repz
call
cmpsb
test
adc
repz
xchg
jo
xchg
int
mov
and
mov
cmp
sub
push
or
cmpl
orb
nop
xor
push
bound
nop
sbb
arpl
dec
cli
jno
push
cmp
sub
xor
mov
inc
ljmp
mov
shll
jge
movsl
push
outsb
and
mov
ja
cwtl
fcomip
add
inc
test
mov
mov
and
add
rcll
in
adc
inc
sar
cmc
cmp
cs
mov
je
jge
inc
jno
jns
arpl
mov
shlb
adc
add
inc
pusha
out
add
pop
and
gs
std
jns
test
inc
cld
dec
mov
sarb
mov
iret
fcmove
cmpsl
in
call
pop
cwtl
mov
mov
mov
xchg
pop
mov
ret
jmp
push
aam
jl
lock
ret
mov
xor
push
shr
into
movsl
cltd
xchg
push
and
push
jg
mov
fldenv
pop
test
lea
mov
xor
mov
xor
insb
setle
xor
and
cmp
arpl
test
add
call
lods
inc
fbstp
xor
das
sub
pop
repz
lahf
pop
iret
pop
dec
and
push
leave
adc
jnp
loope
daa
rcr
pop
push
outsb
and
lret
cld
lods
pop
pop
xchg
or
sahf
es
sub
or
add
sti
ficoms
loop
in
and
xchg
test
loope
push
jae
int
in
jge
inc
jecxz
repz
jbe
cmpsl
pop
or
inc
pushl
repz
imul
sahf
test
dec
fs
outsb
mov
push
xlat
pop
jno
jb
xor
std
test
in
cltd
add
add
mov
imul
sbb
jb
jne
jae
adc
sbb
adc
jmp
xchg
and
jb
inc
cmp
push
aaa
push
fs
cmpl
cmpsl
movsl
sub
push
daa
aas
push
push
aas
inc
imul
push
jne
rcll
sahf
je
sahf
adc
movsb
and
jl
adc
insb
add
popf
inc
mov
xor
andb
gs
push
div
mov
xchg
std
pop
adc
xchg
add
dec
sub
les
xchg
rcr
fisubrs
push
es
das
imul
call
mov
jne
fwait
pushl
sub
imul
addl
mov
push
push
ret
out
xchg
mov
bound
sub
data16
adc
inc
fldenv
imul
and
xor
xchg
ss
aaa
xor
mov
divb
add
or
xchg
dec
cmc
inc
aad
push
cltd
and
fadds
jbe
jnp
jno
movsb
mov
dec
cwtl
inc
sub
cmp
cmc
cmpsl
and
add
jp
icebp
addr16
push
pop
lods
push
or
xor
or
cmp
lods
cmp
lret
mov
lahf
fidivrs
roll
sub
or
sub
les
aad
es
push
shlb
popa
test
inc
xchg
inc
cmc
call
sti
test
sub
in
dec
adc
jae
insl
int3
pop
push
test
jae
sub
aaa
xchg
inc
cld
subb
jp
orl
jmp
push
movsl
jg
pop
add
mov
outsl
pop
ds
sahf
and
fwait
cwtl
sbb
icebp
cmp
dec
ljmp
aaa
jb
icebp
jbe
lock
movsb
inc
insb
xchg
inc
stos
mov
or
inc
es
pop
into
mov
inc
jno
ret
clc
xor
fcoms
ret
push
jae
jge
dec
insb
xlat
fcomip
sahf
sub
test
jb
cmp
scas
data16
inc
out
es
ret
add
fstpt
int
pop
pop
cmp
jl
je
and
repz
mov
iret
lods
adc
mov
sarl
jb
and
mov
inc
pop
xchg
outsl
jns
rep
shlb
lret
testb
mov
xchg
sar
jns
lods
jne
pop
jno
out
add
dec
loop
aam
lds
sbb
dec
cmpsl
or
hlt
add
xor
incb
mov
lret
int3
lds
repz
mov
xchg
loopne
fidivrl
fmuls
repz
out
out
adc
jne
xchg
sbb
fcmovnbe
mov
add
mov
sub
and
test
inc
lock
cltd
dec
push
push
pop
cmp
push
jo
lock
lahf
subl
insb
xchg
fimull
out
cmc
dec
stos
aad
test
mov
test
add
cmp
mulb
cmpsb
mov
fists
clc
add
adc
push
mov
lods
dec
pop
adc
out
push
fcmovu
mov
push
iret
mov
aaa
iret
or
ljmp
cmpsl
sub
dec
xor
mov
mov
jnp
stc
sbb
aas
xchg
testl
je
loopne
fisttpll
out
orb
mov
clc
int3
std
scas
push
lahf
mov
pop
push
pop
imul
cmc
xor
dec
add
stos
mov
ljmp
je
add
xchg
mov
pop
mov
dec
jle
xor
adc
sar
lahf
outsl
push
stos
mov
xchg
mov
jl
shrl
aaa
jle
notb
mov
sbb
inc
fistl
pusha
pop
fldcw
dec
add
and
add
into
jne
jo
daa
clc
adc
fs
jmp
add
cli
add
sahf
jg
insl
add
jle
fmull
inc
test
dec
loop
pop
lock
xchg
std
gs
lds
dec
ja
xchg
in
clc
loopne
adc
sub
std
mov
xchg
and
pop
xchg
pop
cmp
mov
mov
cmpsb
lret
cmp
mov
or
movsb
lcall
push
pcmpgtb
aas
sub
mov
insl
jae
pop
mov
loope
jg
mov
stos
outsl
cs
cli
pop
mov
repz
arpl
das
sahf
leave
mov
pop
and
xchg
and
neg
pop
loope
mov
stc
lret
insb
testb
sarl
scas
hlt
sahf
push
add
es
mov
xchg
stc
ljmp
sbb
jo
mov
adc
pop
pushf
jge
frstor
cltd
or
shl
or
push
inc
fwait
or
pusha
or
sbb
pop
mov
cmc
in
adc
fdivrs
dec
jbe
and
xlat
insb
je
xchg
popa
pop
out
hlt
and
iret
jae
push
jae
jns
decl
orb
into
out
cmp
dec
adcb
int3
mov
adc
rorb
pushf
sub
dec
xchg
xchg
stc
sbb
insl
add
lret
sbb
and
mov
lcall
jecxz
inc
shrb
mov
dec
gs
rcrb
loopne
adc
fnstcw
push
movsl
rcll
cmpb
sbb
fwait
push
shrb
fmull
shlb
pop
nop
push
push
fisubrl
in
rorb
cmc
pop
scas
das
in
sub
push
inc
pop
jne
cli
cltd
dec
nop
into
dec
insl
fmuls
dec
or
es
jp
rorl
repz
mov
sub
mov
js
leave
insl
add
and
inc
or
shll
or
push
fwait
leave
mov
daa
xchg
jp
xor
xor
jae
mov
loope
xor
xor
sar
and
lret
leave
jbe
loopne
jmp
data16
push
mov
sarl
das
jmp
or
pushf
push
dec
mov
sub
mov
ljmp
mov
jno
jg
das
sbb
out
cwtl
and
xor
push
fbstp
jno
jle
xchg
pop
and
rol
push
outsb
fisttpl
mov
sbb
ds
je
and
push
or
mov
dec
into
pop
imulb
inc
or
test
mov
ljmp
cmp
loopne
fistpl
mov
ljmp
ja
sub
imul
inc
psrld
xchg
mov
inc
test
inc
or
xor
mov
xor
hlt
inc
lcall
test
out
and
test
lret
dec
push
or
mov
ret
xchg
sub
movl
push
and
sbb
and
iret
arpl
loope
stc
iret
cli
cmc
daa
or
pop
cmp
jmp
or
mov
popf
outsl
pop
dec
sub
push
pop
pop
sub
dec
add
add
stos
xchg
mov
jne
mov
int
jbe
push
ret
jle
dec
fwait
adc
cmc
dec
and
sub
cwtl
or
xchg
in
adc
fbstp
sbb
xor
stc
inc
movl
fcoml
adc
das
enter
lahf
mov
sbb
ljmp
iret
and
shlb
pop
std
pop
inc
loopne
and
xor
sub
test
sub
inc
lret
shl
adc
fstpl
dec
xor
add
sub
shlb
lcall
xchg
popa
movsb
sbb
jg
nop
mov
pop
imul
mov
inc
jg
pop
in
xchg
arpl
push
pop
into
pop
rclb
shlb
fadd
aad
iret
fsubl
lcall
xchg
xchg
xchg
push
rol
adc
movsl
imul
shrl
imul
imul
movsb
pop
jg
das
adc
push
outsb
mov
pushf
inc
push
in
push
adc
les
roll
or
mov
sub
dec
mov
and
imul
xchg
fdivs
jge
sub
in
mov
sub
sti
je
lock
mov
adc
daa
test
in
aam
mov
pop
mov
leave
pop
cwtl
dec
dec
scas
mov
lret
jne
mov
adc
out
sub
sub
add
shlb
aad
dec
stos
enter
cmpsl
xchg
sarl
stc
mov
stc
push
aam
mov
cmp
jbe
inc
repnz
divb
and
popa
scas
mov
xchg
fwait
leave
or
outsl
ficoml
sub
lret
add
push
and
faddl
gs
add
cli
fsubs
repnz
mov
shr
jo
clc
jnp
arpl
lods
sbb
cwtl
in
fstpl
decb
dec
add
mov
sbb
movsl
add
es
jp
sbb
imul
sti
ret
lcall
test
sub
jecxz
cmp
into
lds
sbb
jmp
fucomp
ljmp
jle
movsl
jne
call
xchg
sahf
fistl
addr16
lods
ret
jno
aad
out
mov
push
sbb
push
mov
push
inc
inc
push
mov
insl
push
cmp
pusha
fisubrl
repz
add
cmp
and
bound
or
mov
xchg
dec
xor
and
adc
ljmp
ss
sbb
sbb
and
dec
aad
xor
movsb
dec
scas
out
sub
fucomip
push
fcomip
sub
aam
mov
cmc
sbb
xchg
cmpsl
outsb
jle
mov
push
sub
sub
pop
jl
or
call
mov
popa
xchg
addb
ljmp
fstpt
fwait
xor
xchg
inc
xlat
jbe
leave
jmp
or
in
js
pop
mov
jmp
cmp
jo
mov
orb
je
data16
mov
inc
pop
in
hlt
mov
inc
imul
sbb
aas
stc
lea
sbb
pop
adc
pop
data16
and
or
add
arpl
dec
ficompl
mov
sbb
arpl
pop
dec
jp
loopne
xchg
push
xchg
icebp
push
adc
add
add
lods
adc
andl
push
mov
ret
lea
inc
push
sub
pop
aas
fsts
push
hlt
xor
mov
pop
mov
jns
sub
lcall
mov
mov
pop
test
jge
xlat
xorb
jl
dec
je
lods
push
fxch
rcrl
aad
ret
add
jg,pt
mov
xor
orl
sub
mov
lea
aas
clc
incb
and
or
push
jno
adc
stos
or
sbb
add
stc
sar
add
pop
xor
and
insb
xchg
xor
dec
xchg
std
jo
pop
mov
dec
pop
clc
sbb
fisubrs
xchg
dec
cmp
add
xchg
mov
xor
test
adc
pop
sbb
jno
sbb
popa
enter
rorl
xor
add
insb
fwait
lds
les
pop
inc
shll
push
out
dec
dec
inc
mov
jecxz
das
mov
push
inc
jge
jmp
sbb
aaa
lods
in
or
pop
sbb
dec
shrl
mov
push
sub
inc
setle
or
pop
lret
mov
js
test
outsb
imull
in
inc
lret
out
in
dec
imul
mov
xchg
andl
icebp
orb
es
sub
icebp
push
sbb
or
test
aam
loopne
mov
jge
jmp
add
pop
xchg
jp
mov
xchg
jge
pop
js
mov
push
mov
shll
in
shrb
lahf
or
inc
outsb
xor
adc
xor
jl
xor
pop
sbb
adc
les
xchg
adc
ret
rcrl
fsubrp
negb
mov
mov
cmpsb
fs
dec
das
daa
inc
sbb
cmp
mov
and
sbb
neg
dec
mov
dec
mov
mov
cmpsl
ds
jmp
lods
mov
jae
sti
pusha
cmp
inc
ret
jle
das
bswap
push
dec
addr16
aad
ds
outsb
aad
lahf
shrl
sbbl
push
jnp
lock
int
pop
add
and
and
ss
jg
mov
in
jo,pt
loop
leave
and
fcompl
cmp
jmp
out
mov
lahf
repz
jns
lret
mov
fsubl
or
mov
pop
adc
ficompl
ret
adc
mov
aas
scas
mov
pop
lret
cmp
cmc
outsl
add
nop
mov
adc
add
cmp
out
addl
sub
xlat
xor
push
dec
outsl
shlb
pop
je
cmp
mov
cmpsl
cli
movb
pop
insb
cmc
pop
ss
fstl
in
xor
test
insb
leave
int3
aam
leave
adc
dec
iret
mov
mov
jle
sub
daa
rorb
leave
cmpsb
inc
daa
pushf
mov
clc
sahf
into
fdiv
adc
sbb
in
and
mov
ret
mov
sbb
cltd
mov
cwtl
push
std
cmp
pop
jnp
inc
xchg
mov
sub
jne
push
rcrl
sbb
lods
ss
push
insl
sub
adc
xchg
enter
add
int
mov
and
into
out
pusha
test
mov
call
add
adc
add
mov
xor
or
xor
push
pop
fs
in
lret
push
xchg
mov
icebp
sbb
cmp
dec
jno
pop
lret
jle
or
jp
push
repz
mov
leave
orl
loop
fst
xor
add
aas
xchg
inc
repz
mov
cmpsl
jne
sbbl
pop
stc
rorl
mov
push
xchg
mov
pop
xor
sub
test
xchg
out
jne
inc
scas
jns
sub
inc
add
push
cmpsb
lods
sub
rcll
movsb
cmp
inc
das
jne
xor
mov
add
scas
xor
int3
lcall
push
adc
loop
int
adc
fwait
mov
xor
daa
repnz
sti
popf
stc
mov
fdivl
aaa
dec
dec
aas
xlat
push
mov
sahf
movzbl
cmp
add
sbb
enter
push
pop
inc
lcall
mov
cmpsl
sbb
jb
adc
data16
fisttpl
das
fbstp
pop
pop
and
push
in
sahf
ficompl
lahf
xchg
test
adc
in
test
adc
xchg
leave
add
push
addr16
xor
mov
dec
jns
lea
sub
js
or
jp
pushf
sbb
test
stos
or
push
divb
mov
add
push
fs
sbb
sarb
les
jp
cmp
sarb
jge
js
in
testl
jle
sbb
scas
lret
fdivrl
addr16
arpl
shrb
mov
xchg
test
push
push
cmp
mov
in
repnz
int3
xchg
inc
dec
inc
mov
add
mov
or
aam
adc
imul
push
rclb
insb
out
add
add
insl
jmp
and
inc
xor
addl
mov
daa
fwait
adc
rcrb
testl
cli
pop
xor
aad
pop
cmp
add
lds
out
roll
aam
jp
subl
fnstsw
nop
mov
mov
mov
sbb
por
mov
aas
add
fdivrs
sub
xor
ljmp
pop
cmpsb
in
or
icebp
data16
push
fsubl
mov
jge
pop
mov
imulb
push
push
mov
pop
sbb
repz
and
pop
dec
fstps
mov
lcall
and
jmp
jmp
push
mov
and
jne
and
jle
cld
rcll
cwtl
nop
sbb
rcrl
out
enter
test
fnstcw
rclb
cmpsb
mulb
in
adc
xchg
mov
dec
ret
sbb
fiaddl
mov
mov
cmpb
cmp
addr16
jb
loop
test
movsb
lea
cli
icebp
fildl
roll
mov
and
cmp
xchg
dec
pop
xor
loopne
rorl
pop
fdivs
xchg
test
outsl
out
into
adc
jae
lcall
ret
mov
pop
push
hlt
inc
mov
scas
aas
scas
mov
test
xchg
adc
xor
mov
lds
mov
jmp
pop
jbe
ds
gs
aas
test
mov
or
loope
not
out
inc
pop
xchg
ror
add
jne
sub
mov
sarb
xchg
or
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
rcrl
mov
push
popf
and
sbb
mov
inc
out
push
sub
movsb
ja
arpl
aam
ss
jo
jno
popa
ss
inc
cmp
lret
xor
xlat
jnp
cmp
mov
call
mov
xor
test
dec
xor
fildll
xor
mov
cltd
test
in
mov
loope
inc
mov
fwait
ja
adc
dec
adc
aam
xlat
mov
cmp
adc
in
cmp
dec
fcmovb
mov
outsl
mov
subb
pop
mov
pop
int
loopne
mov
xchg
xor
out
xor
mov
mov
or
add
cs
xchg
les
sub
xchg
inc
cmpl
push
push
lods
std
dec
jae
lods
adc
jns
pop
jge
inc
jp
mov
dec
mov
sbb
fucomp
xchg
add
mov
xor
mov
mov
call
aam
aam
xchg
push
stos
ret
jae
cltd
cmp
imul
inc
in
push
testb
dec
loope
out
add
repz
or
ror
jae
dec
fcoml
sbb
hlt
je
ja
xchg
sub
js
xor
out
mov
jge
xchg
in
icebp
aas
mov
addb
sti
dec
inc
mov
lds
call
leave
flds
pop
mov
stc
xadd
lcall
cmp
dec
push
sub
loop
in
and
bound
fcomi
ja
xor
jo
add
cmp
in
inc
inc
gs
dec
jns
nop
ja
push
xchg
je
jge
out
es
stos
imul
sbb
xchg
das
popa
xlat
cmp
push
loopne
adc
ss
mov
decb
dec
out
mov
in
dec
sbb
cs
shlb
lods
lds
shrl
pop
pop
xchg
outsl
jnp
dec
sbb
inc
or
aam
pop
or
rep
das
cmc
out
jno
xchg
add
lock
and
cwtl
cmc
aam
add
fisttps
in
dec
xchg
cmp
fistpl
mov
sub
lods
sub
jnp
jns
xor
sahf
pop
aas
lods
pop
add
test
push
xchg
lcall
loopne
mov
sub
mov
push
sti
xchg
dec
ds
cmp
iret
mov
and
out
pusha
mov
rorb
rcrl
xchg
lcall
adcl
mov
outsb
inc
sar
mov
sbb
popl
aas
insl
xchg
jae
or
add
xor
pop
push
mov
test
bound
pop
and
and
jo
add
jne
daa
fndisi(8087
add
cmp
lods
ficoms
call
out
mov
mov
test
faddp
jmp
jl
jl
and
fldl
fsubrs
popa
mull
bound
repnz
xor
or
lar
in
push
or
lret
push
lds
test
int3
dec
popa
int
mov
inc
push
movsl
jne
std
jg
aam
xchg
or
mov
xchg
scas
push
jne
mov
aam
sbb
es
sbb
add
lods
or
lahf
mov
pusha
bound
call
ljmp
enter
xor
sbb
call
inc
lret
mov
daa
dec
fs
add
cs
pop
lret
in
arpl
xchg
ja
aam
cmp
mov
in
push
ljmp
inc
xor
push
jnp
cmp
cmpsb
icebp
in
push
and
cmpsl
wrmsr
inc
pop
in
scas
in
addb
pop
mov
dec
add
xchg
sbb
and
xchg
ja
sub
in
fdivrl
aas
jg
push
inc
mov
sbb
dec
cmc
mov
and
shlb
aad
cmpsb
and
adc
push
mov
xchg
data16
fwait
out
xor
sbb
pop
mov
jae
jecxz
mov
nop
push
xchg
lcall
push
and
adc
mov
mov
shlb
shr
add
test
add
xor
cltd
adc
sub
xchg
ds
outsb
sub
arpl
mov
ret
pop
xor
rol
stos
pop
lret
rcr
and
js
mov
mov
aaa
fs
cli
movl
mov
gs
lahf
pop
sbb
jo
enter
in
les
repz
xlat
mov
xor
int
pop
fisubrl
mov
repz
icebp
sbb
push
mov
and
fistps
and
lds
bound
pop
clc
outsb
aad
sub
push
stos
push
or
xchg
pop
inc
jo
jle
fdivr
pop
xchg
or
mov
bound
mov
ja
bound
or
jecxz
push
ret
push
adc
idivb
mov
scas
imul
lahf
push
pop
cmpsb
int3
xor
mov
cmp
inc
sbb
icebp
and
dec
popf
lret
mov
in
push
jno
lea
sbb
adc
inc
sti
clc
add
inc
into
or
daa
mov
je
scas
mov
push
mov
mov
mov
sbb
mov
push
xchg
sbb
cltd
mov
mov
std
inc
mov
cmc
cwtl
stos
sbb
push
mov
lods
lret
arpl
ss
imul
mov
and
mov
mov
mov
cld
add
out
jb
push
lea
push
hlt
shrl
addr16
stos
in
test
mov
sub
push
ss
dec
push
dec
frstor
xor
inc
dec
mov
insb
mov
js
test
es
ds
daa
pop
and
rorb
pop
sbb
jae
lds
lahf
sbb
outsl
inc
rcrb
xchg
xchg
lret
sub
pop
sbb
inc
inc
dec
std
mov
jne
jbe
jp
in
mov
pop
add
pop
shlb
jmp
cli
fcmovnu
in
mov
shll
out
icebp
sub
out
dec
xchg
and
sub
arpl
dec
idiv
mov
and
jnp
mov
xchg
out
inc
ds
stos
jl
jmp
aaa
pushf
sbb
pop
lret
stc
add
loope
iret
sbb
fcos
outsb
lds
jae
lahf
nop
js
jg
xchg
jge
fwait
lods
or
cmp
jae
int3
jns
cmp
fdiv
jne
mov
xor
fcoml
mov
or
cmp
pop
inc
sub
fsubs
mov
int
scas
push
dec
sub
in
mov
dec
loope
into
repz
mov
push
ret
xchg
dec
mov
popa
push
and
cmp
add
call
jmp
stos
ljmp
jnp
mov
in
cli
jecxz
jmp
loop
inc
cmp
aas
push
stos
cld
and
insl
mov
aaa
mov
xchg
add
and
pop
aam
jne
lcall
cltd
stos
aas
xchg
inc
popa
push
shrb
sarl
push
push
das
cmp
sarb
cmp
and
xchg
inc
lods
and
mov
into
jnp
mov
sahf
mov
in
aas
sub
xor
mov
js
or
sub
mov
push
cltd
jg
sahf
inc
mov
iret
push
cmp
mov
or
sub
inc
outsl
enter
and
rclb
aad
xor
or
cltd
push
test
movsl
inc
dec
inc
mov
ret
call
cmp
xchg
mov
push
lods
dec
adc
dec
xor
and
cmp
pop
sbb
fsts
or
testw
flds
lret
fistl
mov
ret
movsl
ja
jbe
sarb
add
xor
jg
ret
xor
sub
add
es
xchg
scas
call
lret
ret
dec
pusha
cld
cmp
das
xchg
or
add
pop
cmp
or
lcall
mov
mov
cs
dec
xchg
test
inc
aaa
mov
push
cmp
mov
fistpll
stc
jle
xchg
sub
push
and
dec
out
fadd
sbb
adc
shrb
test
in
or
inc
cld
sbb
shlb
sbb
ljmp
push
push
xchg
clc
lahf
xor
dec
scas
nop
add
pop
aam
subb
les
stc
fdivr
insb
sub
sub
bnd
inc
lahf
rorb
push
aad
ja
xlat
lcall
cmp
sbb
js
data16
mov
call
pop
aam
imulb
mov
cmp
cmp
cmpsl
aam
xchg
iret
inc
jo
push
and
push
sti
pop
mov
ss
sub
sub
repz
mov
sub
xchg
cs
fidivrl
sub
andb
inc
xchg
ljmp
arpl
imul
adc
sarb
nop
je
out
dec
and
leave
pop
insb
xor
imulb
mov
push
fldenv
xor
add
sub
stos
add
pop
pop
clc
fcmovnbe
lods
or
jmp
divb
push
inc
jecxz
jecxz
mov
cwtl
stc
inc
adc
int3
das
jb
jge
mov
xlat
ficoms
xchg
adc
xorl
jae
enter
and
add
lret
movhps
loope
adc
jmp
adc
mov
pop
repz
rorl
xchg
gs
pushf
mov
cmpsl
loopne
xchg
push
out
addb
push
test
mov
enter
push
jecxz
cld
jbe
xor
cmp
jns
call
fwait
clc
lcall
adc
push
push
sbb
lahf
scas
mov
sub
test
sub
hlt
jecxz
shrl
mov
mov
sbb
in
ds
mov
out
or
lret
push
int
xchg
out
dec
push
jbe
in
mov
mov
sbbb
xchg
push
xchg
sub
fucomip
and
fstpl
in
jnp
aaa
dec
cltd
cmovo
aas
sbb
cmpsb
fs
loope
push
mov
sub
ljmp
sub
mov
sub
pushl
test
movsb
fwait
stos
lea
movsl
sub
rolb
sbb
in
mov
into
fmuls
in
sub
xor
pop
jg
insl
cmpsl
lds
test
adc
hlt
sbbl
mov
in
dec
int3
pop
and
adc
or
and
fldcw
xchg
fldenv
js
mov
push
add
jae
push
pop
cmp
das
xor
test
push
shr
jno
mov
or
test
sti
aaa
repnz
sub
ret
test
sti
mov
add
xlat
cs
cmp
mov
negl
cmp
outsb
jmp
shrb
aaa
pushf
pop
sbb
dec
nop
lcall
sar
xchg
outsb
loopne
mov
dec
out
int
data16
inc
cmpb
aas
fwait
cmp
hlt
xchg
add
into
xchg
enter
xorb
xchg
lds
cmp
xchg
add
ljmp
inc
mov
mov
cltd
dec
movsl
movsl
insb
dec
js
insb
pop
push
push
aam
sbb
orl
out
mov
inc
sbb
andl
int
sbb
adc
add
jno
mov
mov
cmp
outsl
cmp
adc
sti
inc
dec
jns
outsb
mov
movsl
sub
sbb
aaa
rorb
mov
jecxz
xor
jb
fistpl
cmp
ret
sahf
mov
stos
xchg
and
repnz
push
inc
mov
pop
sbb
mov
lock
outsb
cmpsl
cmpsb
pop
jp
cld
sbb
pop
ficompl
adcb
int3
jp
pop
popa
and
je
mov
ja
adc
adc
mov
addr16
pop
cmp
sub
xchg
cmp
imul
adc
sti
xchg
or
mov
sub
mov
out
push
mov
outsb
rorl
hlt
ja
xchg
in
sub
pop
addr16
arpl
mov
insb
jg
cmp
fsubrs
push
push
jp
and
les
add
add
add
pop
add
inc
xchg
mov
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
nop
fisubrl
int3
fisubrl
mov
