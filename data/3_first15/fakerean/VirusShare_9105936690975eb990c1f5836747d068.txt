push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
or
inc
add
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
scas
aas
inc
add
push
lea
sub
mov
xor
mov
rolb
add
dec
or
dec
js
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
dec
inc
inc
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
dec
inc
add
add
inc
mov
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
xor
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
mov
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
inc
inc
add
push
lea
mov
test
je
cmp
cmp
xor
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
push
and
push
adc
or
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
sbb
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
test
inc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
lcall
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
mov
mov
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
mov
inc
add
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
iret
adc
mov
mov
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
inc
add
test
inc
or
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
pop
jne
cmp
je
mov
lea
push
mov
push
push
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
mov
dec
and
lea
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
xor
cmpl
ja
xor
mov
push
push
push
xor
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
pushl
push
call
test
js
mov
push
push
xor
lea
call
xor
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
jmp
mov
mov
jmp
push
mov
and
push
mov
push
push
push
xor
push
inc
call
test
je
mov
lea
mov
test
je
mov
mov
push
push
call
test
je
test
je
mov
push
call
mov
mov
movl
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
push
mov
call
test
jne
cmpl
je
push
push
push
or
push
mov
call
jmp
or
mov
mov
test
je
mov
test
jle
lea
mov
call
xor
push
inc
mov
call
test
je
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
lea
push
movb
call
test
je
andl
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
cmp
je
jb
movl
mov
ret
push
mov
sub
test
push
mov
je
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
xor
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
je
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
test
jne
pop
leave
ret
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
push
mov
call
pop
jmp
push
mov
sub
push
mov
mov
call
test
je
mov
cmp
pop
jb
or
call
test
je
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
sub
add
push
lea
push
call
leave
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
pushl
mov
pushl
push
call
cmpl
mov
jne
mov
mov
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
mov
mov
andl
mov
mov
movl
mov
movl
push
mov
call
pop
pop
pop
ret
mov
mov
mov
mov
mov
movzwl
mov
mov
push
push
call
xor
ret
mov
testb
jne
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
push
sbb
movsb
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
mov
test
movl
movl
add
js
les
je
push
call
pop
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
mov
push
xor
cmpb
mov
mov
je
mov
cmp
jne
movzbl
cmp
jne
movzbl
cmp
jne
mov
cmp
mov
mov
mov
je
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jne
test
jne
xor
xor
mov
cmp
mov
jle
mov
mov
mov
add
add
cmp
mov
jle
mov
lea
add
push
push
lea
mov
call
mov
mov
mov
mov
xor
mov
sub
sub
add
cmp
mov
mov
mov
mov
jl
lea
cmp
jl
lea
cmp
mov
mov
mov
jne
lea
push
lea
push
lea
lea
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
mov
add
cmp
jge
neg
cmp
jle
xor
mov
cmp
jl
mov
cmp
jl
mov
cmp
jne
mov
mov
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
jmp
mov
jmp
cmpb
jne
jmp
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
jmp
cmp
je
mov
mov
add
lea
cmp
jge
mov
neg
cmp
jle
xor
mov
cmp
jl
cmp
jl
mov
cmp
je
xor
pop
pop
pop
pop
add
ret
lea
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
jmp
xor
jmp
push
mov
call
test
mov
je
mov
push
push
push
push
mov
call
test
js
mov
mov
xor
jmp
xor
jmp
lea
jmp
mov
mov
jmp
lea
jmp
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
test
push
mov
mov
mov
mov
mov
mov
mov
mov
dec
cmp
add
sbb
dec
inc
add
inc
dec
push
add
rolb
jb
mov
mov
mov
cmpw
jne
sub
cmp
jae
cmp
mov
ja
test
je
mov
cmp
jbe
mov
cmpw
jne
add
cmp
jb
cmp
mov
jb
mov
mov
movzwl
add
sub
js
add
cmp
jbe
test
jg
movw
mov
lea
mov
add
add
cmp
mov
jb
test
jbe
xor
lea
cmpw
jne
add
cmp
jb
mov
sub
je
sub
jne
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
lea
mov
mov
cmp
movl
mov
mov
je
cmp
jne
cmp
jb
jmp
movzwl
movzwl
mov
movzwl
addw
lea
jmp
mov
mov
jmp
cmp
jae
mov
jmp
sub
sub
test
mov
jne
lea
mov
shl
mov
test
jne
test
je
lea
and
add
addw
movzwl
addl
test
mov
je
cmp
ja
mov
mov
mov
movzwl
mov
mov
sub
mov
movzwl
cmp
jge
movb
mov
mov
mov
sub
mov
mov
shl
mov
shr
mov
mov
lea
add
lea
mov
jmp
mov
shr
test
jne
jmp
jle
movzwl
mov
add
mov
mov
mov
mov
mov
jmp
mov
and
cmp
je
mov
test
je
mov
mov
lea
mov
sub
add
cmp
mov
jae
mov
shl
mov
lea
movzwl
sub
test
jg
mov
mov
shl
add
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
cmp
je
mov
movzwl
movzwl
jmp
xor
jmp
test
jne
mov
mov
lea
add
mov
mov
mov
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
add
add
add
cmp
mov
jae
jmp
mov
mov
jmp
cmp
jne
cmpl
jmp
movl
movl
movl
jmp
mov
mov
movl
jmp
movb
movw
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
shr
and
cmp
mov
je
test
je
cmp
jb
cmp
jae
test
je
cmp
jb
mov
shr
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
sub
add
add
sub
jne
test
je
movzbl
add
sub
add
add
test
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
mov
pop
shl
pop
or
pop
ret
pop
pop
mov
pop
ret
test
je
nop
movzbl
add
sub
add
add
test
jne
cmp
jae
mov
mul
shr
mov
shl
sub
add
pop
shl
pop
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
je
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
mov
test
jne
mov
mov
movl
mov
mov
shl
sub
and
mov
mov
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
push
push
call
mov
test
add
add
push
add
add
add
add
add
add
in
add
pop
imul
add
add
add
shl
add
add
add
xchg
in
xchg
imul
lea
add
add
in
add
mov
mov
mov
add
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
jmp
jae
add
add
in
mov
xchg
add
cld
add
add
add
add
jns
fldcw
int3
add
add
mov
lods
lcall
nop
mov
add
shll
add
add
jge
add
add
add
add
mov
fstpl
add
nop
mov
lea
pop
popl
push
push
lea
push
push
push
push
push
lea
push
call
add
jo
repnz
mov
incb
pop
mov
add
mov
xchg
aam
mov
stc
rcrl
add
clc
add
mov
addr16
add
movsb
add
loop
ja
nop
pop
jb
mov
fiadds
add
xchg
add
cmc
mov
mov
lea
pop
push
push
lea
push
lea
push
call
mov
add
sar
stos
xchg
lods
out
mov
fmull
jno
stos
add
add
jecxz
aad
iret
add
mov
add
cmpsb
cld
lahf
cmc
add
repnz
lea
pop
push
push
push
lea
push
push
push
push
call
add
nop
popaw
mov
add
out
pushf
fabs
popf
popf
xchg
mov
movsl
flds
cmpsb
fwait
ret
mov
add
js
push
pop
add
add
xchg
mov
stos
mov
add
add
add
les
mov
mov
add
add
lds
out
nop
mov
movsl
add
push
out
scas
mov
add
mov
sbb
push
push
push
push
lea
push
push
push
call
movsl
pop
ljmp
push
add
jno
xorb
popa
add
mov
lock
fwait
add
push
pop
enter
add
lret
addb
fiadds
arpl
add
mov
add
cmc
add
add
movsl
mov
jecxz
add
add
add
filds
push
out
shll
icebp
fisubrs
mov
pop
call
call
push
push
call
add
mov
aad
jnp
popf
test
mov
mov
add
xchg
push
out
fsub
add
add
mov
mov
xchg
mov
cli
lcall
sbbl
mov
add
push
stos
add
add
test
add
jae
mov
add
add
add
aad
stc
add
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
call
cli
in
ljmp
jne
stos
mov
add
add
add
fmul
pop
ljmp
mov
icebp
loop
xchg
les
addb
add
lods
out
add
add
jo
lods
roll
aam
xchg
add
movl
add
mov
add
add
jno
mov
mov
mov
lea
pop
call
jmp
push
lea
push
push
lea
push
call
add
add
add
mov
add
mov
scas
add
aam
add
nop
add
add
add
lret
jb
mov
lret
push
mov
mov
add
in
incb
add
fisubs
add
pop
ret
mov
push
push
lea
push
call
add
add
add
add
fidivs
sahf
pushf
add
cmpsl
add
bound
call
add
mov
test
jbe
add
rcll
lret
push
add
add
mov
lea
pop
mov
add
push
push
call
jle
add
add
push
addl
push
cli
in
add
add
pop
add
add
xchg
jl
add
mov
mov
fildl
gs
add
faddl
add
add
cli
pop
add
aam
mov
fiaddl
add
add
in
jle
call
adc
pop
arpl
mov
push
add
pop
add
add
push
push
push
lea
push
call
add
add
add
push
loopne
add
add
add
ja
loopne
in
add
add
in
push
add
scas
push
stos
add
xchg
push
fdivs
add
lea
pop
mov
xor
push
push
not
push
and
add
add
lea
xor
sub
sub
inc
pop
dec
inc
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
add
add
mov
addb
xchg
into
out
js
out
add
les
add
add
xchg
add
mov
loop
pop
fcomps
xchg
push
fidivl
pop
add
jns
xchg
cli
mov
pusha
sub
jne
call
push
push
call
lret
outsl
mov
clc
add
cli
addb
ja
jmp
add
add
out
add
cmpsb
push
addr16
push
add
pushf
pusha
fs
push
add
mov
xlat
scas
add
pop
mov
movl
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
icebp
test
in
mov
jge
stos
jbe
jl
add
add
nop
add
add
add
imul
in
add
cmpsl
add
add
lock
repnz
push
fiaddl
add
cld
add
stos
xchg
push
add
lahf
lcall
fcoml
loope
int3
lea
pop
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
cmpsl
mov
jns
icebp
add
add
add
add
bound
addb
add
fmul
push
pop
mov
cmpsb
test
add
jae
out
pushf
int3
movsb
add
stos
movsb
add
add
add
lret
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
test
add
mov
add
jmp
ficomps
add
mov
xchg
out
mov
xchg
pop
in
add
add
in
push
add
jge
add
adcl
jns
pop
imul
nop
mov
jmp
add
add
and
jne
push
lea
push
push
push
push
call
outsl
test
add
add
xchg
hlt
add
lahf
jmp
cltd
jne
call
movsl
into
add
nop
andb
jge
scas
add
ljmp
call
push
add
add
mov
add
aad
loop
cld
aam
loopne
push
sahf
movsb
jp
lds
out
push
xchg
add
add
arpl
pushl
push
lea
push
push
lea
push
call
loop
int
add
movb
shl
mov
add
add
js
fistpl
mov
movl
xchg
add
add
add
mov
mov
pop
add
arpl
mov
add
ja
add
js
fdivrp
in
add
scas
rol
mov
lea
pop
call
pushl
push
lea
push
push
push
push
push
push
push
call
scas
add
sti
add
xchg
lcall
filds
add
jae
ret
test
add
pop
mov
cmpl
lcall
movsb
push
hlt
rorb
pop
pushl
push
lea
push
push
push
push
call
rcrb
add
jns
fildl
mov
pop
add
add
insb
fisubs
negl
cld
movsl
add
add
add
js
add
cltd
fsub
in
shlb
add
pop
call
push
push
dec
add
add
add
push
or
not
add
not
add
add
sub
sub
dec
pop
add
dec
add
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
jmp
push
add
pop
into
add
addl
add
movsb
add
add
mov
jle
add
add
add
rolb
mov
push
add
cli
mov
cmc
cmpsl
outsl
mov
sarl
jbe
add
mov
lea
pop
pushl
push
push
push
push
call
div
add
mov
add
movb
add
shrl
add
flds
fcomps
jnp
add
lahf
add
add
add
test
imul
loopne
add
add
mov
lea
pop
call
push
push
push
lea
push
push
push
push
lea
push
push
call
add
insb
jmp
int3
add
add
push
cltd
xchg
add
pop
gs
mov
pop
add
push
scas
add
arpl
mov
xchg
pop
add
add
add
jb
mov
cwtl
sti
add
popf
add
stos
add
pop
add
mov
lea
pop
push
push
push
add
inc
sub
push
or
not
add
ror
sub
ror
xor
pop
add
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
addr16
icebp
add
add
mov
add
loope
add
mul
add
add
jae
add
add
sbb
add
fmul
leave
test
add
mov
add
xchg
add
mov
lea
pop
push
push
push
call
cmpsl
mov
add
add
test
out
je
sar
add
add
ret
cli
mov
out
add
mov
add
jno
add
add
pop
mov
lea
pop
push
call
push
push
push
push
lea
push
push
push
push
push
call
add
jae
lret
hlt
push
js
repnz
mov
mov
les
hlt
add
push
lods
test
add
out
add
push
add
pop
add
add
add
loope
mov
fadds
add
movsb
add
test
push
into
mov
add
add
add
pop
mov
push
push
lea
push
push
call
pop
add
mov
add
xchg
add
jae
add
add
out
lret
add
jge
mov
fdiv
add
mov
imul
mov
faddp
add
test
pop
push
push
push
push
call
jle
add
icebp
pop
cmpsb
gs
push
outsl
fs
add
test
int
add
add
into
lock
pop
add
add
add
mov
add
add
add
add
in
fistpll
pop
in
add
mov
add
outsl
mov
shll
jbe
aam
bound
push
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
in
add
test
add
pop
jb
xchg
rcll
mov
mov
enter
rcr
in
ficomps
add
push
jnp
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
call
jge
add
in
hlt
mov
add
xchg
mov
addb
add
cld
mov
jecxz
add
fucomp
mov
add
add
int3
enter
subl
ficomps
out
fcmovb
rolb
mov
add
mov
add
add
add
mov
mov
add
cwtl
fidivrs
mov
lea
pop
add
push
push
lea
push
call
cmpsb
add
add
scas
jecxz
movsl
out
sti
push
add
fildl
add
roll
add
add
add
add
add
add
mov
mov
xchg
cmc
add
add
add
add
mov
aam
add
mov
mov
push
xchg
fidivl
mov
lea
pop
add
mov
xor
push
push
push
push
push
push
push
push
call
xchg
add
loopne
movsb
add
test
pop
add
fldl
xchg
push
add
add
mov
add
add
add
push
add
push
test
in
pop
add
xchg
loopne
lcall
add
add
add
fs
mov
lea
pop
add
push
push
lea
push
call
add
add
add
add
hlt
xchg
pushf
jp
xchg
add
add
in
xchg
xchg
add
pop
add
add
into
add
add
push
idiv
add
lea
pop
push
push
lea
push
lea
push
push
lea
push
push
push
call
imulb
mov
add
xlat
jb
add
test
mov
mov
cwtl
xchg
cld
add
push
mov
push
mov
mov
add
add
cld
push
add
loope
add
in
add
jmp
xchg
add
jbe
mov
mov
lea
pop
mov
xor
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
in
ja
std
mov
gs
add
out
jbe
movsb
add
push
jecxz
icebp
test
fwait
xlat
add
movsl
xchg
push
mov
xchg
mov
popl
xchg
lret
add
add
add
add
add
pop
add
pop
push
push
push
push
push
push
push
push
push
call
add
fptan
add
mov
add
add
add
add
add
add
cli
add
iret
sahf
pop
jp
add
test
mov
add
mov
mov
shll
testl
loope
scas
mov
mov
lea
pop
mov
xor
push
push
push
push
push
call
mov
add
leave
add
mov
add
stos
add
lods
add
repnz
mov
lret
add
add
nop
add
add
add
out
add
add
xlat
fcomip
xchg
add
add
fmul
xchg
shl
jns
hlt
out
mov
lea
pop
push
push
push
push
push
push
call
cltd
add
popa
xchg
mov
add
jge
jecxz
xchg
mov
lret
jne
mov
pop
fimull
clc
add
add
in
test
jne
stc
test
xchg
imul
add
mov
shl
imul
add
add
add
lcall
add
fidivl
jmp
lea
sahf
jne
jmp
mov
arpl
mov
push
push
push
push
lea
push
push
push
call
add
mov
add
jae
add
js
add
add
add
mov
add
in
fsubr
add
jae
add
add
roll
leave
jle
iret
fisttpl
pop
xor
push
lea
push
call
incb
add
jno
add
outsl
lret
int3
data16
fs
enter
leave
add
shlb
flds
add
fiadds
jp
scas
popf
push
add
add
pop
add
push
push
push
push
call
add
xchg
bound
add
pushf
add
leave
enter
add
add
out
add
stos
out
mov
add
jl
mov
add
hlt
add
jne
repnz
add
mov
add
add
mov
mov
lods
jmp
add
add
test
mov
aam
bound
pop
sub
push
push
push
push
push
push
push
push
call
lret
add
repnz
mov
mov
lock
int
add
lcall
in
add
lret
testl
add
add
mov
add
jns
mov
lea
pop
pop
push
push
push
push
call
and
mov
add
lea
add
mov
mov
stos
mov
flds
add
mov
add
mov
add
lahf
add
add
lea
add
add
push
mov
add
je
add
mov
push
jae
mov
lea
pop
rep
push
push
push
push
lea
push
call
leave
insb
popl
loop
mov
gs
pop
xchg
add
out
fcmovb
add
add
addb
in
fwait
push
add
hlt
testl
in
xchg
add
mov
add
pop
pop
push
push
push
push
push
push
call
mov
clc
add
push
out
add
in
mov
add
imul
ret
lret
out
insb
add
pop
hlt
add
xchg
add
ret
add
push
int
add
ja
add
pushf
add
mov
std
add
push
mov
lea
pop
mov
push
push
lea
push
push
lea
push
call
add
add
xlat
pop
mov
iret
sahf
ja
mov
pop
jbe
mov
add
lock
je
jecxz
jo
add
add
add
add
jmp
push
xchg
imul
push
mov
lea
pop
add
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
ljmp
insb
add
mov
jl
mov
add
int3
les
imul
add
mov
add
add
add
add
bound
pop
add
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
cli
add
push
add
add
add
add
add
pop
addl
add
pop
add
add
add
lret
add
push
add
add
add
pusha
jl
add
rcr
add
add
add
add
add
add
add
mov
lea
pop
add
push
xor
shr
sub
pop
mov
xor
push
dec
pop
mov
xor
push
push
push
lea
push
call
add
lahf
add
add
fsubr
add
outsl
lea
add
clc
repnz
in
jae
add
lret
jl
add
jecxz
mov
test
sahf
add
lods
add
repnz
add
std
int3
add
xchg
add
cli
imul
mov
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
cmpsl
push
mov
add
add
jmp
loopne
add
mov
mov
test
lahf
roll
add
add
add
push
lcall
add
xchg
push
add
xchg
add
sub
or
push
push
push
push
push
call
add
add
fsts
add
jbe
add
pop
movb
sahf
mov
pop
add
add
jne
add
mov
add
cmpsb
into
add
push
add
lret
add
add
add
mov
les
les
not
xor
pop
add
add
push
xor
lea
shl
pop
mov
push
push
push
and
add
add
sub
add
ror
pop
ror
shr
pop
push
push
push
push
push
call
push
pushf
fsubl
addr16
mov
test
add
add
add
add
push
insb
add
add
mov
add
testb
add
add
add
add
clc
push
jmp
mov
movl
int3
int
lods
pusha
mov
push
imul
add
loop
add
lods
mov
data16
pushl
push
dec
xor
pop
call
push
push
push
push
sub
add
sub
dec
pop
dec
pop
push
sub
shl
pop
push
push
push
sub
add
shr
pop
call
mov
push
shr
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
fwait
out
xchg
mov
add
jp
ja
leave
add
jns
mov
enter
add
xlat
add
cld
out
stc
iret
jmp
out
subb
mov
add
add
movsl
fstl
pop
add
ja
add
add
ja
cltd
jo
ljmp
add
pop
add
add
hlt
add
lea
pop
push
push
push
push
push
call
mov
add
add
lahf
filds
add
int
mov
add
jbe
add
add
roll
push
xchg
add
add
jbe
rorb
add
lret
lcall
pop
mov
push
add
pop
add
push
push
call
lods
int3
add
push
add
fadds
add
add
add
lcall
jo
popf
add
add
mov
jl
add
lods
add
add
push
imul
movb
stos
add
insb
mov
lea
pop
add
add
push
push
push
lea
push
push
push
lea
push
push
push
call
adc
lahf
stos
fildl
iret
filds
add
push
add
add
out
mov
rolb
mov
jmp
ljmp
add
add
xchg
fxch
movsb
aad
ret
add
lds
lods
jp
mov
leave
add
test
scas
add
mov
push
les
pop
mov
push
push
push
lea
push
call
out
rcll
add
lahf
popf
xchg
cltd
movb
pop
add
jae
add
in
add
fistpl
testb
xorl
js
pop
je
iret
add
pop
xor
push
push
lea
push
push
push
call
fsubr
int
add
push
push
loop
add
les
clc
add
add
filds
enter
mov
out
fwait
add
add
addr16
js
lock
loop
mov
bound
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
call
xlat
mov
add
mov
fs
bound
push
add
push
hlt
add
add
aad
push
add
add
add
add
test
enter
mov
add
fmull
jne
push
sub
pop
push
push
shr
dec
ror
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
push
call
mov
xchg
pop
add
rcrb
add
imul
hlt
add
add
xlat
test
movsl
add
test
lea
movsl
mov
flds
add
icebp
add
cmpsl
xlat
mov
int3
lea
pop
xor
push
lea
push
lea
push
push
call
push
outsl
in
jns
in
rolb
add
pop
xlat
insb
add
sahf
xchg
mov
add
jl
mov
add
add
iret
pop
popa
add
aam
add
add
ja
xlat
fcoml
ret
add
add
xchg
cwtl
icebp
jmp
mov
mov
jo
add
pop
add
push
lea
push
call
test
out
add
push
mov
scas
mov
jecxz
arpl
addb
add
xchg
ljmp
mov
ljmp
mov
movsb
mov
add
add
addr16
add
pop
add
pop
push
push
push
call
add
stc
add
mov
jne
add
data16
add
mov
movsl
add
add
loopne
add
mov
add
cmpl
add
pop
mov
push
push
push
push
lea
push
push
call
push
clc
cmpsb
add
iret
stc
add
jnp
pop
push
add
xchg
add
filds
lahf
imul
mov
lret
repnz
add
add
mov
add
xchg
mov
cmc
stc
mov
icebp
loop
add
xchg
fwait
jecxz
add
mov
lea
pop
xor
push
push
lea
push
call
mov
push
notl
pop
add
rolb
add
imul
add
into
add
add
push
lock
in
add
add
js
popf
mov
lret
leave
mov
lea
pop
add
push
push
push
lea
push
call
add
lcall
pop
mov
std
divb
add
aam
add
std
xchg
add
add
addl
in
loop
add
pop
out
jp
gs
add
insb
xchg
test
lahf
add
ja
mov
stos
add
add
leave
jmp
ljmp
add
loop
jecxz
jecxz
add
popa
fbstp
add
add
lea
pop
rep
push
push
push
call
popa
fistpll
add
pop
leave
stc
clc
add
test
add
add
aam
lret
aam
outsl
test
incb
jge
call
imul
mov
xor
push
push
call
fwait
add
leave
jle
stos
jno
pop
rol
addl
addb
add
add
mov
outsl
fildl
add
add
pop
or
je
push
ror
pop
mov
xor
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
xchg
hlt
jno
fucomi
je
mov
add
add
mov
add
fucompp
push
pop
add
test
mov
add
add
filds
call
add
pop
mov
xor
push
push
call
int3
add
add
add
pop
rclb
mov
add
mov
mov
fiaddl
add
add
bound
add
test
testl
cwtl
push
push
mov
lret
mov
push
mov
add
scas
add
push
leave
mov
lcall
hlt
xchg
add
add
sti
imul
add
mov
xchg
repnz
pop
add
add
push
ror
pop
push
push
push
lea
push
push
push
push
call
add
add
pop
add
out
cmpl
cltd
add
out
mov
call
mov
out
add
add
rcr
cld
add
add
out
imul
out
lods
add
jmp
add
add
push
movsb
ja
out
add
shr
mov
lea
pop
mov
push
push
lea
push
push
push
call
add
rorl
lds
test
add
cli
add
lret
mov
jb
xchg
shll
std
mov
pop
cmpl
nop
sti
push
add
ret
pop
add
add
add
add
mov
stc
mul
add
add
mov
lea
pop
xor
push
push
push
push
push
push
lea
push
call
rolb
mov
add
out
add
add
pop
push
test
test
add
shll
jge
scas
push
add
add
add
add
jne
add
mov
add
jns
insb
stc
clc
jge
scas
jnp
add
add
mov
fstpl
add
push
xchg
mov
lea
pop
add
push
sub
pop
add
pop
push
not
sub
shl
pop
rep
mov
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
xchg
cli
lock
add
in
lahf
bound
imul
add
add
add
fwait
addl
add
mov
add
imul
add
add
mov
fildl
add
mov
add
add
add
test
add
add
jecxz
popf
add
mov
pop
scas
rorl
cld
lea
pop
xor
push
push
push
lea
push
push
push
call
incb
add
add
in
test
mov
lret
fs
fldl
mov
add
cltd
iret
fildl
bnd
add
lock
add
add
add
push
mov
mov
add
mov
mov
add
pusha
push
cmpl
xchg
repnz
scas
test
add
jecxz
cli
add
add
add
rorl
popa
sbb
les
add
push
push
push
lea
push
call
pusha
stc
rcrb
xchg
mov
clc
jnp
push
add
pusha
xchg
mov
mov
fwait
cmpl
je
add
hlt
mov
cli
add
flds
add
into
push
test
lahf
mov
lea
pop
or
je
push
push
push
push
push
lea
push
lea
push
lea
push
call
pop
loope
addl
push
add
mov
ret
add
popf
add
in
add
jbe
hlt
jmp
clc
add
add
imul
cld
lea
pop
mov
push
push
push
push
call
add
add
jns
add
xchg
int3
add
movl
add
add
add
add
in
xchg
mov
push
pusha
add
pop
pop
rolb
movb
add
jmp
loope
add
add
addb
cltd
scas
add
je
popf
add
addb
add
mov
lea
pop
add
push
add
ror
pop
add
push
inc
pop
rep
push
push
call
negl
add
add
push
testb
jmp
enter
cmc
test
mov
push
add
ljmp
xchg
je
lahf
pop
add
sarb
jns
in
addl
add
jge
aam
mov
outsl
xchg
add
add
xchg
add
mov
lea
pop
pop
push
push
lea
not
sub
push
or
not
add
sub
dec
sub
lea
add
shl
pop
dec
ror
not
pop
push
lea
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
je
stos
add
jbe
sahf
add
imul
popa
xchg
add
add
sarb
add
lods
mov
lret
add
xchg
add
mov
movb
in
lods
cmpb
out
test
rcl
add
mov
lea
pop
mov
push
push
lea
push
push
call
push
leave
xchg
nop
add
add
pop
flds
add
call
mov
add
add
pop
add
mov
mov
add
add
mov
add
fiaddl
mov
loop
mov
call
mov
add
push
jge
mov
lea
pop
mov
push
inc
add
pop
mov
push
lea
push
push
push
call
xchg
jae
mov
sti
je
aam
mov
push
add
jae
out
add
add
add
lcall
add
add
out
pop
ljmp
add
add
add
add
add
mov
gs
cld
fwait
lods
add
stos
jge
ret
pop
add
insb
testl
xchg
pop
mov
lea
pop
jmp
push
push
push
push
push
push
call
add
fcmovb
add
add
cli
add
shrl
add
pop
aam
in
add
ljmp
cmc
push
jnp
popa
mov
add
add
add
add
mov
lea
pop
mov
push
push
push
lea
push
lea
push
push
push
call
data16
add
push
imul
push
add
shl
add
mov
add
imul
add
add
add
filds
add
push
add
add
outsl
fcmovne
add
pop
stos
add
sbb
add
push
sub
pop
push
push
push
not
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
aad
fdivs
add
add
mov
add
add
lret
nop
stos
out
rorb
jbe
add
push
arpl
add
shlb
pop
mov
mov
mov
lret
mov
and
mov
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
lock
in
into
add
pop
add
add
add
mov
pop
test
mov
cwtl
idivl
scas
add
jne
mov
rol
rcl
int3
lea
pop
pop
push
push
push
call
add
aad
jbe
add
add
bound
push
leave
int
mov
jle
mov
imul
xchg
mov
out
testl
test
pop
add
addb
jecxz
add
add
loope
pop
repnz
mov
push
lea
pop
pop
push
lea
push
call
mov
mov
xchg
push
add
add
lods
add
fxch
cmpsb
mov
sahf
icebp
add
flds
add
mov
pushf
mov
movsb
add
test
add
add
cli
push
push
add
clc
add
aam
bound
pop
pop
push
sub
pop
pop
push
push
call
cld
ljmp
mov
add
into
add
xchg
xchg
pop
add
push
std
repnz
lea
testl
fwait
out
pop
xlat
push
add
in
out
faddl
in
add
divl
pop
pop
jno
add
add
jo
mov
out
add
add
icebp
mov
pusha
or
ret
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
cli
add
lods
jb
add
xchg
sti
add
add
push
mov
push
fcomip
cli
push
add
add
lock
add
xchg
add
add
incb
cwtl
add
mov
add
add
loop
in
add
stc
jl
in
fadds
repnz
lods
mov
lea
pop
push
push
lea
push
call
fldcw
add
xchg
mov
cmpsl
mov
add
add
xchg
add
add
add
arpl
popf
hlt
add
add
in
cltd
stc
mov
mov
lea
pop
mov
push
add
rol
dec
ror
pop
add
push
push
push
call
mov
rclb
add
add
sbbl
bound
mov
add
fwait
aad
add
add
lahf
mov
out
jo
add
cli
cltd
loopne
add
jge
addl
or
push
push
push
call
iret
push
je
cmpsl
push
xchg
add
mov
mov
add
add
popa
sti
in
popa
add
insb
add
lret
add
testl
add
mov
fs
add
add
push
mov
call
hlt
out
bound
in
mov
push
mov
scas
fwait
mov
mov
mov
test
call
cld
lea
pop
push
push
lea
sub
add
add
pop
push
push
sub
xor
pop
push
movl
push
lea
rol
pop
addl
test
je
push
pop
mov
push
shl
add
xor
pop
pop
push
xor
ror
pop
pop
pop
push
sub
shr
pop
pop
push
add
pop
leave
ret
push
dec
pop
push
push
sub
pop
mov
add
push
lea
push
push
call
ljmp
pop
mov
push
std
add
jl
scas
rolb
mov
fistpl
lods
imul
add
jbe
push
jle
lcall
lahf
jns
xchg
arpl
mov
mov
lea
pop
push
push
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
xchg
add
add
fadds
pop
movsl
ljmp
scas
add
add
add
lods
add
add
jns
mov
add
pusha
int
add
add
in
aad
push
mov
cmpsb
add
jns
addb
aad
add
add
rcrl
add
add
mov
lea
pop
push
push
rol
xor
pop
push
push
push
call
addl
add
add
add
in
mov
xchg
mov
add
jp
mov
add
add
mov
add
add
loopne
sahf
add
push
jns
testb
mov
out
jbe
push
out
lods
in
mov
lea
fs
add
add
lods
add
pop
testl
push
pop
addl
push
push
push
push
push
lea
push
call
add
add
pop
pop
mov
js
add
add
add
pop
add
insb
jl
nop
mov
add
andl
lods
add
fldl
rcrl
scas
loopne
mov
aam
bound
pop
push
push
push
lea
push
push
push
lea
push
call
push
imul
add
addr16
ljmp
out
int
lods
add
xchg
xchg
lret
push
add
imull
mov
ljmp
add
cmc
add
in
stc
out
arpl
int3
lea
pop
call
push
push
push
push
lea
push
push
call
add
xchg
js
aam
mov
fsubr
add
test
add
add
into
add
add
xchg
aam
push
add
cmc
nop
add
mov
sar
js
pop
add
add
add
add
movsb
add
xchg
pop
add
pop
mov
pushl
push
sub
pop
push
push
push
sub
pop
call
cmpl
jne
push
lea
add
rol
sub
pop
pop
pop
push
rol
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
push
call
cltd
rolb
stos
pop
pop
xchg
add
mov
add
mov
jbe
les
nop
data16
push
subl
add
add
xchg
add
add
subb
jbe
rorl
pop
leave
push
sub
pop
ret
push
push
lea
push
push
push
push
push
lea
push
call
add
in
imul
add
insb
fldenv
lret
add
stos
push
out
scas
add
jle
popa
jns
lret
movb
add
mov
mov
scas
xorl
mov
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
call
add
out
add
pop
cld
add
js
testb
add
rcrb
add
lret
jae
sarb
add
add
xchg
add
mov
jl
mov
cltd
add
mov
pop
xchg
jbe
mov
addr16
push
add
pop
add
push
add
mov
lea
pop
add
push
push
push
push
push
lea
push
call
add
mov
add
into
add
addb
fldl
add
mov
add
push
add
mov
out
mov
add
mov
jecxz
xchg
incb
fadds
rolb
add
add
add
jns
cltd
aad
movb
add
aam
bound
lea
pop
push
push
push
lea
push
push
push
call
mov
add
cli
mov
add
jmp
add
bound
add
in
add
fbstp
add
mov
jno
rolb
cmpsb
je
add
add
iret
add
add
add
in
add
aam
bound
push
push
shl
pop
push
push
push
push
lea
push
lea
push
push
push
call
jnp
add
add
fldl
add
add
push
popa
add
add
add
fisttpl
fadds
mov
pushf
add
aad
jmp
jns
add
cwtl
add
add
push
leave
sarl
in
pushf
add
popa
add
mov
lea
pop
movl
push
add
pop
push
push
add
rol
ror
pop
call
push
lea
push
call
add
shrl
movsl
add
cmpsb
pop
shrb
add
add
iret
add
adcb
jecxz
add
jae
add
mov
push
add
fucomip
jecxz
mov
add
stc
stc
add
stos
push
imul
imul
pop
push
push
lea
push
push
call
arpl
add
xlat
cli
push
mov
add
loopne
hlt
add
lock
add
add
aad
mov
sahf
mov
scas
add
arpl
stos
js
pop
mov
xchg
add
divl
cld
lea
pop
call
subl
push
push
push
push
call
jae
mov
add
movsl
cmpsb
jbe
aad
mov
sahf
jmp
pushf
fiadds
add
mov
add
std
xchg
scas
add
jnp
add
testb
add
mov
leave
call
int
add
mov
xor
in
add
nop
push
pop
jmp
mov
lea
pop
cmpl
jne
push
inc
lea
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
adcb
lret
lods
pop
add
mov
add
leave
add
mov
add
fwait
add
lret
sti
add
xchg
add
repnz
jge
mov
mov
scas
leave
in
add
add
add
push
imul
add
lea
push
add
lock
call
add
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
xchg
pop
mov
int3
test
aad
xorl
test
fiadds
pop
int
pop
xchg
add
add
mov
fsub
pop
int
add
add
mov
hlt
lea
pop
pop
push
sub
sub
rol
pop
pop
push
push
push
push
push
lea
push
call
jp
pop
add
addr16
xchg
add
jle
mov
js
gs
gs
enter
mov
add
add
mov
pop
lret
mov
push
icebp
ret
fxam
movsb
mov
cli
add
mov
lea
pop
leave
push
xor
pop
ret
push
push
push
push
push
push
call
loope
icebp
outsl
add
shr
jbe
add
add
add
add
fidivs
mov
xchg
add
mov
add
add
movsb
add
push
add
flds
add
add
fnstsw
add
push
add
rcr
add
add
add
movsl
mov
push
mov
lea
pop
mov
add
push
rol
pop
push
push
push
lea
push
lea
push
push
lea
push
call
add
out
arpl
jge
pop
add
pop
clc
add
andb
add
fwait
xchg
sahf
add
ret
imul
xchg
lret
add
gs
fmul
test
cld
xchg
add
fs
add
lcall
mov
mov
lods
add
add
scas
add
jmp
pop
fmull
pop
push
push
push
lea
push
push
push
push
call
mov
add
addw
fs
mov
xchg
repnz
fprem
add
add
add
shrb
mov
add
xorl
add
fs
imul
jecxz
add
cmpsl
icebp
jb
add
mov
hlt
lea
pop
mov
push
push
call
add
imul
lea
add
pushf
jb
jbe
pushf
ret
insb
add
add
stos
add
mov
xchg
mov
add
push
cmpsl
add
add
ja
std
mov
int
test
jmp
cmc
add
add
mov
push
add
rorl
push
add
mov
imul
hlt
lea
pop
lea
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
push
add
add
lds
add
mov
jmp
loopne
add
add
add
test
jecxz
mov
add
add
mov
add
cltd
add
pop
sub
push
push
push
push
push
call
out
mov
fadd
mov
scas
imul
hlt
add
add
jmp
rcr
aad
xchg
mov
mov
jle
add
add
push
add
add
test
pop
push
mov
jl
add
cmc
ja
mov
mov
lds
movsl
add
pop
add
lahf
sti
push
add
add
pop
lcall
lea
pop
mov
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
xchg
jp
push
roll
add
add
xlat
add
jne
add
icebp
cmpsb
rcr
ljmp
jne
pop
add
mov
rolb
add
add
xorl
insb
add
add
push
lods
mov
aam
xlat
fists
push
add
jno
mov
mov
xor
aam
add
and
call
inc
mov
add
add
add
add
rol
in
fstpt
add
add
test
fcoml
add
add
sahf
xchg
mov
cmpsb
xorb
add
aam
lods
hlt
jae
jle
fiaddl
add
movb
mov
cld
jl
add
add
add
cli
add
add
add
int3
add
les
inc
or
push
push
push
push
push
push
push
lea
push
call
nop
testb
subl
mov
aad
fldl
add
xchg
push
mov
add
add
push
popl
movsb
hlt
data16
fsubr
add
add
jb
fnsave
add
pop
mov
mov
push
ror
xor
not
pop
add
push
push
push
lea
push
push
call
xchg
jns
stos
movsl
add
xchg
add
add
std
loopne
mov
add
movl
add
mov
stos
add
add
add
mov
cmc
add
add
jp
xchg
xchg
cli
lret
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
call
mov
imul
add
pop
add
iret
add
pop
mov
in
add
rcrl
add
sbb
push
jbe
add
add
popa
jno
jae
xchg
add
flds
add
lods
add
pop
mov
push
lea
push
push
push
push
push
lea
push
push
call
in
out
out
mov
pop
ret
enter
add
add
add
call
xchg
lahf
jmp
testl
add
in
mov
add
jle
lds
pop
mov
push
ror
shl
pop
cmp
jne
push
lea
push
lea
push
lea
push
call
add
xchg
add
test
movsb
add
add
xchg
rcll
add
add
add
add
add
mov
lea
pop
cmp
jne
push
shl
add
ror
shl
pop
mov
movl
push
lea
push
call
jno
add
stos
pop
addb
rol
andl
out
add
mov
fidivs
lret
add
jb
add
add
add
push
add
mov
pop
sarb
jecxz
add
add
add
add
sarb
out
add
pop
jmp
push
push
push
push
push
call
add
add
mov
mov
xchg
add
lods
add
pop
add
add
push
add
mov
insb
leave
add
aam
mov
add
mov
xchg
add
clc
add
rolb
mov
imul
flds
cwtl
mov
add
add
in
sahf
int
jne
lock
iret
add
pop
mov
push
lea
push
push
call
add
push
add
jp
jb
jae
xchg
add
sti
add
add
mov
nop
add
lea
pop
scas
xchg
jp
pushf
push
add
add
ljmp
xchg
mov
int3
icebp
jae
flds
add
add
add
hlt
lea
pop
mov
push
rol
pop
sub
jne
push
add
add
pop
mov
push
ror
add
xor
pop
movl
jmp
push
lea
push
lea
push
push
push
push
push
push
push
call
loopne
add
mov
filds
add
add
addb
add
add
add
addl
jne
lret
push
imul
pusha
outsl
popf
add
leave
lea
pop
add
fwait
fwait
mov
add
mov
add
add
push
mov
lea
pop
mov
push
push
push
push
call
add
add
add
sti
js
insb
add
add
mov
pop
rcll
pop
out
add
pushf
sarb
add
xor
add
sarb
out
sahf
jecxz
pop
into
add
pusha
hlt
movsl
mov
add
add
mov
lea
pop
mov
push
lea
push
push
push
call
add
stos
fadds
cltd
sti
add
add
add
mov
pop
mov
add
add
add
out
fsts
add
fwait
mov
add
pusha
add
cli
jmp
add
push
loop
mov
jp
add
add
int
iret
add
fadd
xchg
out
ljmp
pushf
call
mov
lea
pop
cmp
jne
push
sub
dec
sub
pop
mov
push
inc
xor
pop
movl
jmp
push
lea
xor
shl
pop
mov
push
push
call
add
add
add
jb
mov
addr16
rolb
mov
addr16
mov
bound
add
jecxz
fistpll
add
add
add
incb
lea
mov
or
cmpl
jne
mov
push
push
push
push
push
lea
push
push
push
call
out
lea
jbe
test
test
jle
test
mov
add
movsb
lret
add
ror
add
add
add
cmc
add
mov
jmp
mov
cmc
fldl
pop
call
insb
xchg
add
add
pop
movl
jmp
push
push
push
lea
push
push
push
lea
push
push
push
call
fs
add
adc
scas
lods
xchg
mov
add
mov
scas
add
add
add
out
scas
xchg
jne
xchg
add
lods
add
add
push
add
popl
push
out
mov
add
lcall
and
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
push
mov
add
add
add
jl
jmp
popf
push
hlt
add
add
xchg
add
mov
add
mov
add
stos
into
add
pop
mov
xchg
pop
popa
mov
add
push
bound
mov
add
fwait
jno
test
jmp
test
or
mov
movsl
mov
add
push
push
mov
lea
pop
pop
push
push
lea
push
push
lea
push
call
jmp
jo
test
out
pop
jns
pop
add
jmp
add
add
add
popf
add
add
add
jp
lret
addb
bnd
mov
add
repnz
mov
lea
pop
mov
push
pop
mov
mov
push
push
sub
push
xor
add
ror
dec
sub
shl
inc
pop
inc
sub
pop
push
not
pop
push
call
push
xor
not
xor
inc
pop
cmpl
je
push
push
sub
not
ror
sub
push
and
add
lea
sub
shr
pop
xor
shr
pop
push
xor
add
ror
pop
push
push
dec
shr
rol
pop
call
cmpl
je
push
push
dec
not
ror
sub
push
push
pop
add
ror
sub
add
pop
not
sub
add
add
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
outsl
fs
pop
xchg
repnz
add
add
add
roll
lea
jmp
ja
add
mov
sti
test
mov
scas
pop
out
lahf
insb
push
add
add
add
jle
add
add
add
add
add
decb
pop
push
push
lea
push
push
push
push
push
call
pusha
leave
addl
gs
add
add
add
mov
xchg
push
fadds
add
fdiv
add
mov
add
mov
mov
loop
add
leave
int
mov
add
stc
add
mov
xchg
add
ret
mov
lea
pop
call
push
push
lea
push
call
add
add
mov
jns
sahf
scas
popf
add
jle
imul
mov
add
mov
add
add
add
add
xchg
lahf
cltd
add
stc
fildl
add
lods
add
into
aad
test
popf
add
clc
mov
add
test
cmpsb
mov
rclb
add
add
pop
jb
mov
sti
cld
mov
lea
pop
cmpl
je
push
push
shl
rol
push
xor
add
xor
rol
inc
xor
sub
sub
add
lea
sub
pop
ror
pop
push
push
push
call
add
insb
int3
ljmp
add
mov
sti
out
add
mov
mov
add
lcall
xor
lcall
mov
add
add
scas
aam
add
add
call
inc
add
pop
push
call
push
push
push
lea
push
push
call
lods
negl
sahf
mov
add
cmpsl
ror
lods
add
add
add
add
mov
enter
mov
ffreep
icebp
add
mov
add
iret
add
jns
push
notb
fnsave
pop
repnz
mov
faddl
add
push
mov
lea
pop
cmpl
je
push
push
not
push
sub
add
dec
sub
dec
lea
sub
add
sub
pop
add
pop
push
inc
xor
pop
push
push
push
call
mov
in
add
add
mov
nop
add
add
test
add
test
jbe
imul
add
mov
pop
add
cld
add
xlat
add
add
iret
add
jne
add
add
add
xchg
roll
fimull
pop
call
push
lea
push
lea
push
push
push
push
push
call
add
enter
ljmp
mov
pop
scas
add
xchg
add
add
pop
in
add
addr16
add
add
std
rcrl
add
mov
push
data16
pop
jns
sbbb
xlat
in
mov
movsl
test
xchg
imul
addl
add
add
add
add
jle
cmpl
fmull
cmp
rol
je
push
push
dec
shl
push
push
pop
add
sub
not
dec
sub
inc
pop
not
sub
pop
push
push
push
push
call
popf
push
pop
stos
out
add
add
imul
sub
je
pop
pop
add
test
roll
add
push
add
icebp
add
add
add
hlt
add
add
push
mov
jne
call
add
in
mov
scas
jae
loope
add
mov
lea
pop
push
push
lea
ror
ror
pop
call
push
push
lea
push
call
add
mov
rcl
outsl
add
add
out
fiaddl
add
mov
add
ja
shl
aam
into
int
pop
mov
add
addb
push
loopne
xchg
mov
add
add
add
add
add
imul
icebp
cmc
filds
add
or
cmpl
je
push
push
dec
inc
xor
push
and
add
sub
xor
xor
sub
dec
pop
add
pop
push
push
push
push
lea
push
call
sahf
xlat
add
fistl
add
std
jle
pop
add
add
add
add
add
popa
lods
add
add
jo
add
subl
add
add
repnz
fldt
into
jl
hlt
shlb
jnp
xchg
add
fnstcw
add
rol
add
mov
repnz
mov
lea
pop
push
push
sub
pop
call
push
push
push
call
leave
aad
addb
pop
iret
add
add
add
add
loop
mov
cwtl
add
jl
aad
rorb
data16
lret
out
int
mov
loopne
cltd
pop
add
imul
add
add
roll
les
cmp
or
int3
je
push
push
shr
push
or
not
add
shr
sub
add
pop
xor
ror
pop
push
push
call
add
shrb
filds
push
mov
fldl
add
in
xchg
outsl
jmp
add
call
jge
jl
mul
add
pop
test
add
push
add
add
jbe
add
add
mov
pop
cmpsb
add
add
add
add
add
add
mov
jo
in
add
push
add
add
or
call
push
push
push
push
push
push
push
call
and
mov
jle
add
add
arpl
add
add
fwait
jp
pop
add
lods
aam
pop
jp
xchg
add
add
push
aam
add
add
add
icebp
add
mov
add
add
add
add
add
aad
pop
lret
add
xchg
add
lcall
add
pop
cmpl
je
push
push
sub
push
push
pop
add
lea
shr
sub
sub
sub
pop
xor
xor
pop
push
add
pop
push
push
dec
pop
call
push
push
push
push
push
push
call
add
popl
in
xchg
add
sbb
jne
lret
mov
add
mul
out
aad
add
lods
push
add
mov
ja
icebp
movsl
add
jl
add
cmc
imul
rorl
pop
cmpl
je
push
push
dec
add
sub
not
push
or
not
add
shr
sub
shl
rol
sub
ror
lea
sub
pop
add
inc
pop
push
push
push
call
out
add
movsl
aad
push
add
hlt
roll
mov
stos
pop
jp
add
mov
add
add
add
add
mov
outsl
jmp
in
cmpsb
add
fidivl
mov
mov
push
lods
mov
pop
imul
aad
add
out
in
add
add
pop
push
push
add
pop
call
push
push
push
lea
push
push
lea
push
push
push
call
pop
add
add
add
iret
add
xchg
push
jge
data16
mov
xchg
pushf
push
add
mov
add
movsb
xchg
xchg
jno
shrl
out
push
add
xchg
test
push
mov
lahf
mov
lea
pop
cmpl
je
push
push
not
lea
sub
rol
push
sub
add
not
inc
sub
inc
shr
dec
pop
add
dec
rol
inc
pop
push
add
rol
pop
push
call
push
sub
pop
cmpl
je
push
push
sub
lea
push
and
add
xor
xor
sub
shl
lea
pop
add
ror
add
shl
pop
push
lea
push
push
push
push
push
push
push
push
call
add
add
ljmp
mov
hlt
lret
add
test
repnz
jae
in
add
aad
jl
add
mov
add
mov
testl
mov
mov
scas
fldl
mov
pushf
add
cmpsl
cli
loope
add
aam
add
jecxz
add
add
pop
movsb
data16
mov
add
mov
hlt
lea
pop
push
push
ror
xor
add
pop
call
push
pop
cmpl
je
push
push
rol
dec
add
push
or
inc
add
add
sub
ror
shl
xor
pop
sub
shr
sub
pop
push
push
push
push
push
call
add
in
add
jge
mov
pop
imul
add
lods
add
mov
jnp
std
jmp
pushf
jns
add
pop
mov
add
add
je
flds
add
testl
add
add
ljmp
pop
stos
add
add
mov
mov
xlat
gs
add
add
add
lea
pop
push
call
push
push
push
push
lea
push
call
int
push
add
add
add
sti
add
js
in
movb
add
jge
imul
jle
clc
add
add
jmp
add
add
mov
fsubr
add
add
int
les
js
xor
pop
ret
pop
add
add
enter
adc
add
add
add
iret
pop
jmp
xor
push
push
push
push
push
push
push
push
push
call
pop
add
add
loope
xchg
add
xchg
into
lds
mov
movsl
add
mul
scas
mov
add
mov
jge
xchg
out
add
lock
add
into
xor
xchg
roll
add
and
pop
push
push
lea
push
push
lea
push
push
push
call
shrl
push
add
jmp
add
add
lea
mov
mov
add
mov
aam
pusha
jge
add
hlt
pusha
push
add
add
add
cmpsb
pop
popf
add
mov
add
push
jmp
loop
add
jb
call
movsl
lcall
add
add
fadds
add
push
add
lea
pop
pop
push
shl
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
pop
out
movb
mov
into
fbstp
add
fisubs
rcrb
add
aam
movl
movb
scas
xlat
les
cli
xchg
add
test
pop
add
mov
lea
pop
pop
push
add
shr
xor
ror
pop
leave
push
shl
inc
not
inc
pop
ret
push
sub
add
pop
push
mov
push
dec
pop
add
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
sahf
add
jle
add
jae
mov
ja
mov
hlt
mov
cmpsl
fwait
xchg
jae
mov
jne
add
lods
add
out
lock
add
add
outsl
stos
gs
icebp
add
int3
add
add
mov
push
add
hlt
mov
test
sti
mov
pop
cmpl
jne
push
push
shl
push
or
inc
add
ror
ror
add
sub
shl
xor
pop
rol
pop
push
shr
shr
ror
pop
pushl
push
inc
lea
pop
call
push
sub
pop
push
push
push
push
push
push
push
push
push
push
call
shll
xchg
push
add
aam
pop
add
xchg
add
mov
jl
bound
lcall
add
std
add
mov
or
fwait
test
stos
cltd
jecxz
add
mov
add
add
add
lds
pusha
add
add
fisttpl
hlt
lea
pop
call
push
push
call
add
popf
add
mov
add
stos
scas
shr
addb
push
add
test
les
pop
shrl
mov
add
jb
add
add
xchg
xchg
pop
add
add
popa
pop
mov
add
fcoms
add
lret
scas
js
mov
lea
pop
jmp
push
push
push
push
lea
push
call
push
sarb
add
add
fwait
test
jecxz
add
jns
push
add
fldcw
fwait
shll
repnz
add
add
outsl
fstpl
add
add
add
movsb
mov
jecxz
xchg
jnp
cmc
fiaddl
test
add
add
add
test
push
add
ret
les
jge
add
test
lea
push
push
push
lea
push
push
push
push
push
call
ljmp
mov
rcr
mov
pop
loopne
mov
add
push
add
data16
add
add
add
int3
mov
add
add
scas
repnz
add
loop
add
add
testb
jge
jno
andl
add
pop
add
jne
pop
add
in
cmpsb
fwait
add
ficoml
mov
loop
mov
lea
pop
cmpl
jne
leave
push
xor
xor
sub
pop
add
push
lea
push
call
add
fbld
add
int
add
xchg
nop
add
in
add
add
iret
mov
add
nop
add
mov
add
nop
scas
fildl
mov
fidivs
add
leave
scas
add
sti
push
mov
jge
mov
add
pop
pop
pop
push
not
pop
pop
push
push
push
push
push
push
push
push
push
call
js
leave
pop
mov
add
xchg
int
in
jmp
add
add
nop
add
imul
pop
rolb
pop
roll
test
add
add
filds
pusha
cmpsb
jmp
lea
pop
pop
push
add
pop
leave
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
imul
je
stc
add
add
add
rcr
add
mov
add
add
jecxz
mov
loopne
data16
add
push
mov
add
add
add
test
nop
filds
lods
add
cmpsl
popf
pusha
xchg
add
fldenv
mov
lea
pop
add
ret
push
lea
push
lea
push
call
add
add
popa
add
add
cmpb
out
fwait
sti
xchg
lds
lods
add
loop
call
add
pop
xchg
outsl
popa
cmc
cmpsb
add
leave
add
add
add
sti
add
add
mov
lea
pop
jmp
push
sub
pop
cmpl
jne
push
push
inc
sub
add
lea
push
or
inc
add
lea
inc
sub
add
add
inc
pop
shr
add
not
pop
push
dec
pop
pushl
call
push
push
lea
push
call
nop
mov
add
push
add
leave
add
data16
push
add
movl
mov
ror
add
jle
roll
add
icebp
in
mov
add
add
mov
xlat
mov
js
hlt
add
enter
add
mov
lea
pop
push
call
push
inc
lea
pop
jmp
push
dec
lea
sub
pop
cmpl
jne
push
ror
dec
rol
pop
mov
push
push
lea
push
push
call
add
add
add
mov
add
cltd
add
mov
add
mov
add
add
filds
add
ljmp
add
std
add
add
add
arpl
pop
lret
push
mov
lea
pop
mov
push
not
dec
pop
push
push
push
add
push
sub
add
sub
sub
add
shl
ror
shr
pop
ror
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
add
test
add
mov
mov
add
les
shr
addl
imul
mov
mov
add
movsb
nop
mov
add
test
add
xchg
add
out
add
scas
jmp
xchg
add
pop
jbe
add
out
mov
add
int
add
add
mov
lea
pop
pushl
call
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
in
jo
add
arpl
pop
in
faddl
add
jp
jne
xchg
jae
mov
mov
clc
xchg
imul
lahf
fiaddl
lahf
jbe
add
push
add
mov
add
add
push
mov
add
mov
std
mov
add
in
mov
in
add
lods
add
push
fs
mov
lea
pop
push
call
push
push
xor
xor
push
or
inc
add
add
sub
not
sub
xor
sub
pop
shl
ror
pop
push
push
lea
push
push
call
add
mov
mov
clc
add
lcall
fs
add
roll
lea
xchg
mov
pop
jne
add
popf
add
mov
fdivl
stos
add
rolb
into
lods
add
add
out
add
jns
pop
sti
push
add
iret
rcll
hlt
arpl
push
mov
leave
loope
aam
bound
pop
pushl
push
lea
add
shr
sub
pop
call
call
push
push
shr
shr
sub
push
or
inc
add
lea
sub
lea
shl
lea
pop
pop
push
push
call
mov
ljmp
lods
shll
add
mov
add
mov
les
add
sahf
add
insb
cli
pop
outsl
add
jnp
add
fisubrs
fcmovne
cwtl
pop
stos
rolb
je
add
add
sahf
mov
lea
pop
pushl
push
rol
shr
not
pop
call
push
push
push
push
push
push
push
push
push
call
add
loop
testb
mov
lret
cmpsb
loop
add
icebp
cmc
lods
in
enter
push
pop
jno
loope
stc
add
add
xchg
add
add
jmp
add
add
mov
add
jecxz
push
add
add
pop
call
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
push
add
cwtl
add
add
scas
add
add
rclb
out
scas
arpl
cld
je
jns
call
movl
icebp
add
cmc
add
lods
add
scas
add
sub
pushf
and
ljmp
ds
push
rol
rol
add
not
push
sub
add
not
not
sub
sub
shl
shl
shr
pop
add
ror
pop
push
push
push
lea
push
call
stc
js
lock
fidivrl
add
fisttps
add
add
mov
sahf
aam
int
mov
xchg
add
test
add
lahf
mov
ret
fs
xchg
imulb
add
cmc
in
cwtl
fsubs
add
mov
lea
pop
pushl
call
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
ja
addr16
int3
movl
adcl
mov
add
scas
movsl
popf
mov
add
add
cmc
jne
ror
hlt
add
add
add
mov
scas
icebp
loopne
add
add
add
add
add
mov
lea
pop
push
push
sub
not
pop
call
push
push
lea
push
or
not
add
add
add
shr
sub
shl
add
dec
add
pop
not
pop
push
push
call
jbe
cli
mov
jp
add
loopne
into
xchg
std
outsl
jnp
add
mov
mov
add
add
xchg
xchg
add
add
add
popa
mov
jp
add
jnp
les
lret
sahf
pop
add
bound
xchg
enter
mov
rcrb
fwait
mov
add
or
jne
call
push
inc
xor
lea
pop
call
push
push
lea
push
push
push
push
push
push
call
mov
jae
lds
popl
mov
bound
les
jb
add
push
in
add
add
add
popa
test
xchg
mov
int
pop
add
add
add
jo
jae
int
movsl
add
add
add
hlt
add
xchg
mov
lea
pop
mov
push
push
inc
push
xor
add
rol
lea
lea
sub
xor
pop
sub
rol
pop
push
lea
add
sub
pop
pushl
call
push
sub
add
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
push
call
jo
addb
add
mov
aad
add
add
add
add
rolb
lea
jle
movsl
subb
add
add
pop
mov
lret
imul
imul
movb
add
pop
call
push
push
sub
shl
push
xor
add
xor
ror
sub
rol
dec
pop
shr
shl
not
pop
push
rol
pop
pushl
call
push
push
push
push
push
push
call
clc
jbe
ljmp
add
push
jae
scas
jnp
jae
add
add
add
add
cmpsl
sbbl
xchg
int
add
jo
mov
nop
add
in
add
mov
ljmp
imul
lret
movsl
mov
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
imul
add
imul
add
jbe
mov
mov
add
mov
mov
std
out
add
add
pop
add
repnz
aam
xchg
in
xchg
add
mov
add
mov
add
add
fldl
add
mov
jne
frstor
int3
iret
xchg
faddp
stos
aam
cld
lea
pop
pushl
push
add
pop
call
push
push
rol
push
sub
add
sub
ror
xor
inc
pop
ror
dec
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
loop
add
int
jno
mov
ljmp
in
xorl
add
add
repnz
add
add
addb
js
int3
xchg
add
pop
popa
cmc
loope
add
in
cmpsl
push
xchg
roll
out
jp
add
cli
test
add
add
mov
call
add
xorl
data16
pushl
push
push
lea
push
push
push
push
push
call
add
xchg
sbb
add
add
xchg
add
jmp
add
push
add
fidivrs
push
movb
add
mov
aad
jns
add
add
out
andb
add
pop
add
mov
testb
mov
lea
pop
call
push
push
lea
ror
sub
push
xor
add
dec
sub
sub
rol
lea
lea
pop
sub
pop
push
push
shl
add
rol
shr
push
or
inc
add
rol
shr
dec
xor
sub
inc
pop
shr
dec
not
pop
push
rol
rol
pop
call
push
add
sub
pop
pop
dec
jne
push
push
push
lea
push
call
xchg
test
add
fwait
mov
pop
xchg
add
pop
add
add
add
fildl
add
add
pop
enter
test
js
add
mov
lods
jmp
loopne
add
add
test
mov
add
lock
clc
add
add
enter
lea
pop
call
jmp
push
shl
pop
call
push
push
push
xor
add
not
dec
inc
sub
rol
add
pop
inc
pop
push
shr
pop
pushl
push
push
lea
push
push
push
call
push
fsubrs
in
pop
add
add
pop
add
insb
jne
mov
mov
add
outsl
arpl
int
shlb
pushf
call
shrl
add
add
jmp
jo
jno
add
pop
call
push
lea
pop
push
push
rol
add
pop
call
mov
push
lea
push
lea
push
call
add
add
mov
mov
add
add
sti
mov
add
xchg
out
lock
stos
popf
mov
add
iret
test
add
into
movb
hlt
add
xchg
jmp
loope
scas
add
incb
cmpsl
test
ja
mul
pop
add
mov
insb
add
add
cltd
mov
push
add
loopne
outsl
xchg
je
imul
mov
lea
pop
lea
push
push
not
inc
shl
sub
push
sub
add
add
sub
sub
sub
rol
rol
pop
shl
ror
sub
pop
push
shr
pop
pushl
push
rol
lea
pop
call
push
not
pop
push
push
push
lea
push
lea
push
call
cltd
add
out
ljmp
add
push
add
mov
fidivl
aam
push
push
cmpsb
mov
add
out
add
add
pop
call
push
push
rol
inc
push
or
not
add
rol
sub
shl
add
add
rol
pop
lea
sub
pop
push
dec
shr
not
pop
pushl
push
ror
not
rol
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
call
add
cmc
stos
add
cmc
ror
pop
icebp
lock
in
fiaddl
mov
int
lahf
addl
aam
subb
jl
lcall
filds
add
test
add
jno
pop
fs
mov
mov
lea
pop
call
push
push
push
push
call
nop
std
fsubl
in
add
stos
add
mov
lret
arpl
clc
cmpsl
repnz
jbe
add
add
mov
add
in
add
std
xchg
add
jb
lahf
add
popa
mov
cmpsb
add
fwait
mov
lahf
push
movsb
add
hlt
jmp
xchg
mov
repnz
mov
add
add
mov
ljmp
adc
inc
cld
push
sub
pop
lea
push
push
sub
inc
ror
push
or
inc
add
shr
sub
shl
pop
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
popf
rolb
add
fwait
int3
bound
testl
fcomp
sahf
pop
add
add
add
add
add
pop
add
add
mov
xchg
add
push
add
pushf
add
add
test
jae
add
add
ja
add
add
hlt
mov
pop
mov
xchg
out
mov
lea
pop
pushl
push
lea
dec
pop
call
push
add
inc
pop
lea
push
push
push
push
call
ja
pop
cltd
hlt
add
add
test
lods
add
add
push
mov
jl
push
addr16
loope
sar
icebp
pop
add
add
add
pop
add
pop
movsb
add
mov
faddl
add
sahf
mov
pop
std
xchg
add
mov
sti
add
xchg
pushf
mov
lea
pop
push
push
push
push
call
add
sahf
add
fwait
enter
in
mov
add
add
repnz
in
add
repnz
in
pop
iret
add
cmpsb
rcll
add
add
fmul
pop
add
xchg
pop
outsl
fidivrs
add
add
addr16
movsb
mov
into
jne
xchg
lcall
pusha
or
push
push
rol
shr
rol
pop
push
push
push
push
call
outsl
mov
add
add
shl
cmpsb
mov
and
add
mov
add
pop
add
ja
add
stos
jle
add
add
add
add
std
add
hlt
mov
add
add
pop
pushl
push
push
not
lea
rol
push
sub
add
sub
add
sub
shl
shl
pop
xor
pop
push
sub
rol
pop
push
push
lea
pop
call
push
push
xor
shl
push
or
inc
add
not
lea
ror
add
sub
add
sub
pop
xor
add
pop
push
push
push
push
lea
push
call
pop
shr
add
incb
lock
xlat
add
shll
add
add
add
bound
pop
mov
test
pop
push
add
je
jbe
add
mov
add
test
mov
adc
pushl
call
push
push
push
push
push
push
push
lea
push
push
push
call
ret
in
xchg
js
pop
pop
mov
push
add
mov
push
sarb
lods
mov
out
sarb
cld
add
add
out
cmpsb
cld
mov
jecxz
jae
int3
lea
pop
push
call
push
push
add
push
or
inc
add
sub
sub
sub
rol
pop
ror
shr
sub
pop
push
push
push
push
push
push
call
aam
add
loop
add
pop
add
mov
add
xchg
mov
test
scas
popl
add
jp
mov
add
in
repnz
scas
add
add
js
addl
mov
push
fadds
add
cltd
add
lods
addr16
pop
roll
lahf
mov
test
add
ljmp
lea
pop
pushl
push
push
push
push
push
push
push
push
push
call
jns
in
push
insb
add
out
mov
add
add
mov
lret
movsb
add
pop
add
add
sahf
in
add
addr16
loopne
add
test
imul
mov
rolb
xchg
jne
xchg
add
push
imul
xchg
add
rorl
add
pusha
and
call
push
push
call
add
add
add
lret
add
add
in
add
jno
jp
push
pop
add
les
add
add
pushf
push
add
xchg
cmc
add
movb
add
out
mov
mov
add
or
rclb
mov
aad
add
pushl
push
not
dec
add
ror
pop
mov
push
push
push
push
push
lea
push
lea
push
call
add
leave
xchg
ret
xlat
add
ret
add
lahf
imul
add
and
add
xchg
mov
add
jl
add
cmpsl
add
add
je
fwait
imul
add
lea
pop
jmp
push
push
inc
rol
shl
push
sub
add
lea
ror
sub
add
pop
dec
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
add
testl
xchg
jae
add
pop
je
xlat
mov
jne
xchg
fildl
jle
mov
insb
jns
sub
hlt
lea
pop
pushl
call
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
add
fldl
pop
add
xchg
pop
mov
out
add
std
add
add
mov
add
mov
mov
push
add
pop
pop
add
add
subl
sarl
sarb
test
push
fdivs
mov
add
in
add
fcmovne
imul
loope
cld
lea
pop
push
push
lea
push
call
ja
jne
roll
imul
add
je
fsub
mov
add
insb
jge
add
call
add
add
outsl
ret
pushf
add
add
add
negl
sarb
hlt
lea
pop
call
push
push
add
push
or
inc
add
shr
sub
shr
pop
sub
not
inc
pop
push
push
lea
push
push
call
lret
mov
add
push
mov
mov
andb
imull
imul
stos
popa
add
jp
mov
jae
push
test
loop
add
test
popf
fisubrl
add
add
roll
pop
jno
add
mov
add
repnz
mov
lea
pop
pushl
push
lea
push
call
stc
xchg
leave
lock
repnz
fldenv
add
add
add
addb
rolb
les
add
add
add
insb
mov
call
ja
add
add
movsl
test
jecxz
mov
jns
mov
add
add
jae
add
xchg
push
mov
add
pop
call
push
push
lea
push
push
lea
push
push
push
push
call
push
xchg
add
xchg
in
lods
imul
std
shll
int
je
mov
add
jge
mov
add
add
mov
add
xchg
add
add
sbb
std
add
add
in
roll
ljmp
add
test
cmc
jno
add
pop
add
add
mov
lea
pop
push
call
push
lea
inc
shl
rol
pop
leave
push
push
lea
push
lea
push
push
call
int3
iret
add
add
mov
jge
out
push
add
sarb
ja
mov
mov
add
push
fcmovbe
sbbb
imull
add
popa
ret
test
pop
add
pusha
add
clc
into
insb
add
add
jnp
arpl
jecxz
fidivs
add
add
jmp
scas
lds
mov
jl
hlt
lea
pop
add
push
lea
push
push
push
push
call
jb
add
mov
push
in
add
mov
push
test
xchg
add
addb
add
cltd
add
mov
cld
add
add
add
add
add
add
call
xchg
rcrl
popf
scas
mov
je
add
leave
add
sti
mov
xlat
into
add
adc
pop
push
dec
dec
ror
pop
pop
push
push
push
push
lea
push
push
call
icebp
jmp
bound
add
loop
in
add
mov
add
jno
add
add
push
call
hlt
add
add
add
iret
add
push
imul
mov
mov
lea
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
pop
xchg
add
outsl
test
add
in
gs
add
mov
jns
out
cmpsl
add
out
and
jp
add
add
pop
add
je
scas
loope
mov
add
add
popl
add
cld
jbe
jnp
add
jno
lahf
out
add
out
add
mov
add
mov
mov
lea
pop
pop
leave
push
shr
shl
pop
add
ret
push
push
push
call
lods
jbe
jae
add
xchg
mov
cmc
add
stos
add
mov
add
add
faddl
cli
add
jno
jno
add
mov
movsl
popl
test
add
push
mov
add
leave
lods
jbe
fidivl
frstor
rolb
pop
jmp
add
loop
add
cltd
mov
lea
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
loope
push
leave
loopne
add
pop
sahf
add
mov
addl
mov
add
std
add
push
mov
clc
outsl
out
add
cwtl
add
mov
pop
mov
add
mov
aam
rolb
add
xchg
add
in
mov
sti
jge
mov
mov
int3
lea
pop
ret
push
push
rol
add
sub
pop
mov
cmpl
jne
push
ror
sub
xor
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
add
in
addr16
mov
add
add
add
sar
pop
add
jno
pop
roll
icebp
int
lock
add
rcr
jl
xchg
add
add
add
rolb
repnz
add
leave
sti
cltd
mov
add
pop
jmp
push
push
push
push
lea
push
push
lea
push
call
cmpsl
pop
repnz
in
add
add
mov
mov
mov
fcmovu
push
and
lret
push
movl
stc
add
push
gs
add
lods
mov
imul
add
cli
jne
fmull
inc
or
loopne
push
push
push
lea
push
push
push
push
push
call
lock
loopne
push
fisubs
xchg
jp
add
add
mov
add
mov
movl
add
push
add
ja
add
add
xlat
nop
mov
cmc
add
mov
add
stc
test
pop
xor
push
add
pop
xor
push
lea
push
push
push
push
push
call
out
mov
mov
add
addb
add
int3
jae
loop
mov
add
add
out
add
arpl
add
sti
add
int
add
mov
stc
add
add
add
add
jge
add
cli
nop
repnz
cmc
add
add
push
out
mov
lea
pop
add
push
xor
add
lea
sub
pop
xor
dec
push
push
push
lea
push
push
push
push
lea
push
push
call
cmpsb
rcrb
add
cltd
imul
mov
lahf
mov
add
in
lret
mov
fiaddl
add
add
push
sti
mov
lea
pop
sub
push
push
push
push
push
push
call
add
add
add
arpl
add
icebp
xchg
fldl
movl
add
add
add
add
add
add
mov
imul
add
pop
mov
fmull
jb
add
push
sub
pop
sub
push
add
shr
pop
pushl
pop
push
push
push
call
leave
out
add
add
add
add
test
cltd
testl
std
icebp
add
add
out
std
lretw
add
add
add
rolb
les
push
add
in
test
jo
add
pop
sub
push
pop
cmp
jne
mov
push
pop
lea
push
not
add
pop
sub
push
push
push
push
push
call
sub
mov
rolb
mov
add
fdivrs
bound
add
flds
add
xchg
add
add
add
add
xchg
jge
jo
cmpb
add
add
in
pushf
mov
add
mov
loop
loopne
sahf
jbe
leave
leave
add
add
cmpsl
rorl
add
xchg
push
roll
pop
pop
add
mov
aam
bound
mov
shr
push
push
call
stos
test
jge
out
add
xchg
lcall
add
xchg
mov
mov
fidivrs
add
mov
add
lods
cli
mov
fidivrs
add
push
sahf
pop
test
or
enter
jns
stc
pop
sub
push
pop
pushl
pop
push
sub
rol
xor
pop
shr
push
ror
rol
add
not
pop
and
push
push
push
push
lea
push
lea
push
call
test
mov
add
mov
add
jb
lcall
int3
pop
add
add
orb
out
cli
add
fst
add
cmpsb
add
pop
into
add
mov
lea
pop
sub
push
push
push
push
lea
push
push
call
add
push
add
add
clc
mov
mov
push
loopne
add
out
lcall
add
in
xchg
add
add
add
xchg
call
mov
lea
pop
cmp
jne
push
push
call
stos
add
je
cltd
mov
add
add
jecxz
mov
add
test
adcb
add
add
push
push
push
xor
add
add
add
add
mov
mov
mov
mov
sahf
xchg
add
add
add
add
mov
lea
pop
leave
ret
push
ror
shr
shr
pop
push
mov
push
push
push
push
lea
push
call
add
popa
shrl
xchg
add
add
lods
movsl
add
mov
add
add
mov
rcrl
repnz
add
sbbb
mov
add
jp
sti
jns
add
pop
add
push
push
push
push
push
lea
push
lea
push
call
shrb
out
in
add
movsl
mov
add
rcr
out
add
addr16
test
ret
jnp
cmpsl
add
lcall
loope
data16
stos
cltd
add
mov
hlt
call
lea
pop
push
push
inc
shl
sub
shr
pop
push
push
push
push
push
push
call
add
add
add
les
add
fistpl
mov
add
add
fld
into
shll
add
mov
jbe
add
push
insb
add
std
mov
sahf
mov
test
add
repnz
sahf
push
pop
add
fistl
xchg
popf
add
add
add
pop
push
push
shr
sub
lea
shl
pop
push
push
shl
pop
push
mov
push
inc
shl
pop
lea
push
lea
add
sub
xor
pop
sub
push
xor
dec
pop
mov
shr
push
push
push
lea
push
push
push
push
push
call
leave
jl
add
add
shrb
out
mov
add
add
add
cmpsl
add
add
add
out
add
mov
add
add
xchg
add
add
bound
pop
add
push
add
sub
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
call
jae
add
add
lahf
imul
scas
add
ljmp
stc
mov
add
cli
cli
movl
add
mov
add
pop
add
push
dec
pop
mov
add
push
inc
xor
rol
pop
xor
push
push
call
xlat
add
add
add
inc
mov
jbe
fwait
add
icebp
mov
add
add
in
sarl
pop
adc
mov
lds
roll
add
push
add
movsb
xchg
add
add
rolb
add
test
add
add
add
sarb
add
push
jmp
fiadds
add
addb
pop
mov
and
push
add
rol
pop
rol
rol
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
cmc
add
add
pop
add
fistps
push
test
leave
filds
add
add
shr
add
cwtl
add
add
pop
out
mov
add
xchg
add
fstpt
xchg
in
xlat
shll
jle
xchg
je
add
add
jbe
add
out
add
add
enter
mov
mov
lea
pop
xor
push
push
push
call
push
fdivrs
pop
mov
xchg
add
push
add
lods
pop
add
int3
mov
xchg
xchg
hlt
add
add
push
push
stos
add
mov
mov
clc
add
stos
mov
in
in
add
lret
js
add
cmpsl
lods
add
fisttpl
pop
inc
cmpb
jne
push
not
pop
add
push
not
shr
pop
cmp
je
add
push
sub
pop
cmpl
jne
push
sub
dec
not
pop
xor
pop
push
add
shl
pop
pop
push
sub
pop
pop
pop
push
sub
pop
pop
leave
push
push
push
push
push
push
push
push
call
call
pusha
add
sti
out
in
cltd
mov
mov
push
popl
int
mov
add
add
fwait
jne
loope
add
add
add
jp
add
ljmp
mov
lea
pop
ret
push
rol
lea
shl
pop
mov
add
push
inc
shr
pop
push
push
shl
lea
not
pop
push
push
push
call
roll
je
add
mov
add
jo
add
into
enter
push
cmc
jle
sahf
clc
xchg
jge
add
shll
mov
add
call
add
mov
lea
pop
add
push
sub
dec
xor
shl
pop
xor
add
push
push
push
push
push
call
mov
add
mov
xchg
add
je
pop
repnz
addr16
xchg
aad
jo
pop
data16
add
jge
add
addb
cli
add
add
add
cld
fcoms
mov
jge
jns
aam
bound
testw
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
add
xchg
jnp
mul
add
rol
lcall
out
out
popf
mov
add
add
out
mov
xchg
leave
push
mov
mov
xchg
add
lea
push
stos
mov
jge
lea
ljmp
addr16
data16
pop
push
dec
shr
lea
pop
pop
push
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
pop
add
insb
mov
push
xlat
aam
pop
loope
add
repnz
xchg
jmp
add
test
add
add
xchg
mov
fadds
add
lea
loopne
in
bound
add
jle
repnz
sub
xchg
repz
call
int3
sub
add
pop
xor
push
push
lea
push
push
call
mov
add
arpl
jae
pop
add
add
out
push
add
add
push
out
int3
jb
data16
jecxz
mov
pop
mov
cwtl
test
addl
aad
fcomps
mov
add
mov
pop
add
add
int
xchg
icebp
adcb
add
push
add
add
jmp
add
addb
add
pop
pop
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
fildl
mov
mov
add
std
add
add
add
lret
add
push
mov
cmpsb
xchg
add
mov
sarl
push
add
fldl
add
jge
mov
ljmp
test
add
add
sti
je
pop
add
mov
lea
pop
pop
pop
push
dec
lea
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
push
leave
add
hlt
add
mov
in
lret
add
pop
push
add
int3
add
xchg
push
add
add
add
add
ja
mov
lea
pop
leave
ret
push
push
push
push
push
push
push
call
cwtl
mov
add
stos
add
lahf
add
add
mov
nop
lret
add
pushf
imul
add
add
add
cmpsb
mov
insb
std
jle
jp
int
pusha
add
mov
push
ror
rolb
les
jge
mov
add
lods
add
add
rcl
icebp
mov
int3
lea
pop
push
mov
push
push
push
push
push
lea
push
push
push
call
mov
nop
rolb
faddl
add
mov
add
cmpsl
test
add
iret
pop
add
sti
pop
lock
add
iret
add
add
add
in
add
jns
add
add
add
mov
movsl
fcmovne
add
mov
sahf
ret
mov
movsb
jae
add
add
divl
mov
add
lea
pop
add
push
push
call
add
xlat
mov
mov
lea
xchg
out
fiaddl
bound
data16
cmc
add
add
xlat
clc
rolb
add
test
shlb
jle
mov
add
mov
add
into
add
arpl
and
lods
mov
lea
pop
push
push
push
sub
ror
pop
push
push
sub
sub
add
pop
push
push
lea
pop
mov
push
dec
add
xor
shr
pop
push
pop
push
add
pop
lea
push
dec
dec
add
pop
sub
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
push
push
add
imul
add
push
push
mull
int3
imul
push
add
cltd
add
out
add
gs
ja
jae
loopne
add
orb
mov
imul
mov
popf
add
popf
add
loop
int3
sarl
in
test
pop
mov
push
push
call
cltd
jecxz
adcl
xchg
in
fs
movsl
cmpsl
xchg
push
nop
add
xchg
add
add
add
mov
iret
add
cmpsl
xchg
xchg
add
mov
fadds
add
pop
add
jo
mov
lea
pop
shr
push
shl
sub
rol
pop
add
push
not
pop
mov
push
lea
push
push
push
push
push
push
call
xchg
test
cld
xchg
add
add
add
mov
add
add
add
in
xchg
add
add
add
jne
xchg
jne
push
arpl
mov
movsb
mov
lea
pop
add
pushl
push
push
push
push
push
push
push
push
push
push
call
add
add
add
stos
jb
add
add
pop
shll
add
arpl
add
mov
cwtl
jb
fcom
add
xchg
loope
jecxz
add
add
ja
add
add
fildl
jb
add
add
out
insb
insb
push
add
popf
add
xchg
add
sub
inc
clc
push
lea
push
push
push
push
call
mov
push
add
add
pusha
add
add
add
cmc
js
hlt
les
cltd
cmpsb
les
jp
rolb
pop
add
fbstp
mov
add
xchg
push
add
mov
mov
rclb
push
mov
loope
out
faddl
xchg
mov
add
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
call
aad
imul
xchg
add
add
rolb
add
push
ljmp
xchg
testb
add
movl
push
popa
add
add
pop
add
xor
push
push
push
call
jae
clc
adcb
stos
add
vxorps
add
add
add
fiaddl
out
mov
add
add
jmp
add
lea
fiadds
push
cwtl
data16
add
add
mov
push
mov
add
xchg
fldt
rcr
lods
loop
jmp
add
add
add
push
out
flds
add
mov
lea
pop
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
cwtl
aad
xchg
pop
add
mov
lods
shrl
imul
fdivr
mov
in
addb
jle
icebp
lcall
test
int
pop
xchg
add
add
add
xlat
add
fidivs
mov
lea
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
call
scas
imulb
add
shlb
test
roll
add
mov
add
mov
add
mov
andb
mov
lea
pop
add
push
ror
sub
pop
xor
rol
push
push
lea
push
push
lea
push
call
xchg
mov
leave
add
mov
stos
mov
add
add
add
push
xchg
outsl
lret
ja
fs
out
jecxz
lret
xchg
mov
add
pop
add
mov
lea
pop
nop
push
xor
sub
pop
nop
push
lea
push
push
call
add
add
add
in
movsl
add
add
mov
aam
mov
add
fistps
add
add
add
pop
add
insb
addb
aad
bound
imul
add
jns
push
jnp
mov
lea
pop
xor
nop
push
rol
not
pop
nop
push
shl
pop
inc
push
shl
sub
pop
nop
push
shr
pop
nop
push
push
push
push
lea
push
call
add
jp
add
pop
addr16
rcll
add
loop
int3
test
add
fwait
mov
jno
lods
ljmp
cmpsb
movl
add
add
push
cli
add
add
mov
stos
mul
jmp
add
je
mov
loop
les
cmp
jne
push
lea
push
lea
push
push
push
push
push
push
push
push
call
outsl
outsl
add
pop
add
mov
add
add
lock
push
add
push
mov
add
js
shl
sti
rclb
add
into
idiv
lret
add
push
aad
add
jno
lcall
add
test
sub
mov
lea
pop
add
nop
push
ror
pop
nop
push
push
push
push
push
lea
push
push
push
push
call
pop
fadds
add
xchg
add
mov
shlb
roll
push
add
mov
add
jl
add
add
add
xchg
cmpl
lods
ret
add
lea
pop
cmp
je
push
push
push
call
cli
scas
lock
add
pop
add
js
mov
jae
jp
add
add
loopne
add
pop
pusha
fsts
add
add
test
loope
rcll
rorb
xorb
add
lods
in
imul
lret
jb
add
mov
push
add
mov
lea
pop
nop
nop
push
lea
inc
shr
add
pop
inc
nop
push
add
not
pop
nop
cmp
jb
push
push
push
lea
push
call
add
add
mov
nop
nop
cmpsl
orl
mov
add
mov
add
std
ret
add
rolb
ljmp
lea
pop
xor
jmp
push
not
pop
mov
add
push
shr
pop
movzwl
push
add
pop
mov
add
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
shrb
loopne
lock
jle
icebp
add
lea
push
fwait
mov
add
mov
add
cltd
cwtl
mov
aad
scas
pop
mov
add
add
add
lds
addb
add
add
jmp
lods
jbe
mov
add
jb
imul
cltd
filds
mov
lea
pop
mov
xor
push
sub
ror
add
pop
xor
push
push
push
push
call
add
add
pop
enter
mov
flds
rcl
int
xchg
add
push
mov
clc
mov
add
add
fnsave
pop
andb
jp
iret
add
add
add
stos
add
add
lcall
add
mov
add
add
pop
add
add
mov
outsl
int
add
xchg
add
adc
loope
xor
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
stos
stc
fisubs
mov
add
add
xchg
mov
imulb
jae
cmpsl
data16
add
mov
stos
bound
add
jbe
mov
add
sub
loope
push
lea
push
lea
push
push
push
push
push
push
call
jns
add
jnp
jmp
add
leave
nop
xchg
sarb
xorl
popl
bound
add
scas
push
add
loopne
mov
push
mov
mov
scas
add
add
jp
lea
add
lret
mov
add
lahf
cmpsl
repnz
add
clc
callw
stos
je
std
mov
jne
aam
bound
pop
xor
push
push
push
push
push
push
push
call
add
add
add
pop
cwtl
mov
add
scas
xchg
xchg
aam
add
fldenv
lods
pop
repnz
pop
js
add
bound
xchg
lds
add
add
mov
mov
add
mov
cmpsb
divl
add
mov
add
loopne
cld
mov
lea
pop
shl
xor
push
push
push
push
push
push
push
call
jle
je
roll
add
add
add
mov
add
jnp
mulb
cld
add
pop
xchg
in
add
xchg
stc
mov
pop
pop
pop
add
jno
out
faddl
popa
push
scas
mov
lea
pop
mov
push
lea
push
push
push
push
call
outsl
je
loope
test
add
rcr
lcall
test
sar
xchg
add
add
addl
scas
add
les
cltd
ret
cmpl
mov
add
mov
sarb
add
lcall
add
add
lock
add
mov
lea
pop
add
push
push
push
call
add
xchg
mov
mov
add
icebp
lcall
add
out
push
mov
add
add
filds
add
imul
pop
add
sti
pop
add
fs
jne
xchg
mov
add
ja
pop
cltd
add
add
fnstcw
cwtl
cmc
add
popa
add
lods
lea
movsl
lret
mov
lea
pop
pop
push
ror
pop
pop
push
lea
push
call
int3
add
add
lret
add
enter
lret
add
add
mov
mov
test
add
popf
lods
add
add
add
add
loopne
jno
lock
mov
pusha
or
pop
push
dec
dec
pop
leave
ret
push
lea
not
lea
pop
push
push
lea
pop
mov
push
push
push
lea
push
push
call
add
add
mov
add
add
test
add
add
push
add
xchg
add
add
testl
add
shr
fldl
add
add
mov
push
pop
roll
imul
pop
mov
add
rol
popa
je
mov
in
ret
les
add
push
pop
add
add
hlt
lea
pop
push
push
sub
sub
dec
xor
pop
push
push
push
push
lea
push
push
push
lea
push
call
mov
fs
add
add
aam
pop
in
add
add
in
xchg
mov
mov
mov
aam
mov
add
cwtl
add
xchg
add
jno
lods
lahf
add
test
cli
sahf
jl
add
add
sbb
push
lea
push
push
push
push
push
push
lea
push
call
les
add
notb
jecxz
add
add
ljmp
mov
add
push
mov
xor
jb
mov
push
scas
js
add
lcall
fwait
out
cwtl
les
add
out
test
mov
add
add
dec
add
add
pop
mov
push
push
call
mov
add
ret
fbld
mov
lods
fidivrs
stos
add
out
add
scas
add
add
jmp
add
loope
jp
test
add
mov
fwait
mov
lea
pop
mov
mov
push
rol
add
pop
test
je
push
push
call
hlt
add
les
add
add
pop
add
xchg
mov
lret
add
mov
icebp
xchg
popl
add
std
negl
mov
in
mov
into
fldl
add
mov
add
cmc
in
add
pop
mov
std
add
or
jno
push
pop
test
je
push
sub
add
add
pop
mov
mov
push
push
push
push
push
push
push
lea
push
push
call
mov
add
mov
add
js
je
xchg
mov
mov
add
add
outsl
add
add
add
scas
movsb
nop
add
jno
add
lret
rcl
add
fiaddl
scas
add
mov
add
arpl
push
rorb
les
pop
inc
push
push
push
push
call
nop
addr16
mov
lahf
jae
mov
mov
flds
in
repnz
ljmp
fs
add
add
add
mov
add
push
into
fsubl
les
rorb
test
add
add
push
push
push
push
push
push
push
push
call
add
cwtl
add
addl
jmp
fadds
add
jmp
nop
mov
leave
pop
add
stos
outsl
push
clc
add
jmp
add
jne
add
add
mov
cmpsl
int
faddp
add
popl
jge
sbbl
lret
into
js
lods
lcall
mov
lea
pop
test
je
mov
push
pop
inc
push
push
push
push
call
add
add
test
add
jge
mov
add
in
add
mov
repnz
mulb
sahf
add
add
aad
cli
add
add
mov
add
in
gs
testl
rolb
mov
jp
cltd
add
xorb
pop
add
in
add
aad
jae
cmpsb
add
add
xchg
into
jns
les
rorb
test
add
add
not
pop
test
jne
xor
push
push
push
lea
push
push
call
mov
nop
add
test
test
rclb
idivl
pop
jns
aad
add
add
imul
icebp
add
add
add
roll
icebp
add
les
cmpsl
testb
int3
lea
pop
pop
pop
push
not
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
hlt
gs
test
std
add
add
add
lods
add
addb
roll
pop
lahf
add
insb
add
push
push
test
arpl
mov
add
data16
add
ret
mov
lea
pop
pop
leave
push
push
lea
push
push
push
call
mov
nop
add
xchg
add
add
clc
mov
lret
lock
add
movl
divb
add
pop
rcll
imul
mov
add
add
add
add
fcmovnb
add
add
add
xlat
outsl
mov
add
xchg
add
add
add
or
cmpsl
test
pop
in
aam
bound
ret
push
push
push
lea
push
push
lea
push
push
call
stos
mov
loope
div
add
lods
test
add
add
xchg
pop
add
add
mov
xchg
add
rolb
add
fldl
outsl
add
add
movsl
lds
in
add
xchg
rcl
aam
push
pushf
test
int
icebp
mov
lea
pop
mov
inc
push
shl
rol
pop
cmp
jne
push
shr
dec
ror
dec
pop
lea
push
sub
xor
sub
pop
mov
push
push
push
push
call
cltd
mov
add
mov
add
xchg
add
addl
add
add
xchg
fsts
jmp
add
sarl
out
add
loope
push
add
mov
lea
pop
test
je
push
push
push
lea
push
call
jbe
add
in
add
icebp
add
add
xchg
add
into
mov
cwtl
loopne
lods
add
add
fs
add
roll
pop
mov
add
hlt
enter
add
enter
add
add
in
add
add
add
add
lahf
add
pop
mov
add
push
push
lea
push
lea
push
push
push
push
push
call
add
add
add
loop
add
mov
fcmove
rcrb
add
add
pop
add
add
fcoml
notl
xchg
ror
mov
jecxz
add
ret
orb
cmp
jne
push
shl
shl
pop
mov
push
push
push
push
call
sahf
xchg
out
add
data16
test
sub
mov
add
ret
add
pushf
shll
mov
ffree
add
add
ljmp
rorl
ficompl
jo
cld
lea
pop
test
je
push
dec
shl
not
pop
mov
push
ror
dec
dec
pop
add
cmp
je
push
push
lea
push
push
lea
push
call
test
mov
push
jb
xchg
movsb
ret
faddl
pusha
add
add
add
add
add
add
add
out
jle
add
lret
pop
in
ja
mov
imul
pop
xchg
hlt
jl
add
push
add
mov
add
ljmp
addr16
jmp
push
push
push
push
push
push
lea
push
push
lea
push
push
call
test
add
jo
js
add
rolb
jae
mov
mov
jl
push
fadds
pop
cli
add
lea
lds
andb
pop
popf
add
add
arpl
shr
add
add
pushf
insb
add
pop
xor
push
push
push
push
lea
push
call
add
repnz
add
add
hlt
add
add
add
push
mov
mov
add
mov
add
jb
in
mov
add
js
add
in
movsl
xlat
mov
lea
pop
pop
push
lea
shr
pop
pop
pop
push
sub
rol
pop
pop
push
push
push
lea
push
lea
push
call
add
add
jecxz
push
lahf
pop
mov
add
stc
leave
fcomip
add
add
push
add
add
cld
pop
add
repnz
mov
add
add
mov
mov
add
add
add
pop
leave
push
lea
push
push
push
call
jle
rcrl
test
pop
add
repnz
imul
imul
call
imul
cmpsb
lcall
testl
les
xchg
xchg
in
xorb
push
mov
add
scas
mov
lea
pop
ret
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
sahf
addl
jge
mov
xlat
add
add
add
add
add
pop
out
jns
addb
xchg
lret
jae
add
mov
add
add
add
pusha
test
add
aad
mov
lea
pop
lea
pop
push
ror
not
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
in
popa
scas
shr
add
in
add
cmc
add
add
add
clc
add
cld
add
fsubr
mov
pop
mov
call
add
mov
add
imul
roll
jnp
jno
push
add
mov
js
xchg
xchg
mov
add
add
rolb
mov
push
mov
flds
fs
lea
pop
pop
push
shl
rol
ror
add
pop
pop
push
add
inc
rol
pop
leave
ret
push
sub
sub
add
pop
mov
pop
push
push
push
call
mov
add
add
add
aad
add
int3
test
add
add
add
pushf
shl
add
mov
adcl
push
add
jl
add
clc
fwait
pop
loop
push
mov
mov
add
jle
add
jne
push
add
add
adc
mov
lea
pop
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
ja
add
add
xlat
add
xlat
add
lds
stc
jae
add
add
js
ret
add
add
ret
icebp
add
aam
add
jecxz
add
ljmp
stc
rcl
xchg
jnp
jo
notb
lahf
jns
mov
lea
pop
pop
push
pop
leave
push
push
lea
push
call
mov
xchg
xchg
fisubrs
mov
add
add
push
add
jge
add
add
mov
add
xchg
add
add
add
jns
lock
or
ret
cli
js
jb
mov
pop
jb
mov
pop
pop
jb
pop
pop
jb
adc
jb
cld
pop
jb
xchg
pop
jb
imul
mov
mov
out
adcl
enter
loop
cld
scas
mov
mov
out
cmc
les
out
jmp
dec
mov
aaa
sti
lock
sub
or
xchg
inc
arpl
das
jb
push
outsb
pop
mov
adc
xor
xlat
sti
cmp
sbb
and
test
cltd
and
mov
cmp
stos
push
adc
mov
add
clc
lret
mov
mov
sub
xchg
sbb
and
jbe
or
inc
xchg
mov
in
jle
jbe
lods
cmp
inc
lds
and
imul
jle
mov
mov
fwait
int3
sub
ljmp
stos
mov
dec
or
int
add
xchg
fstenv
sbb
fsubrs
pop
mov
inc
xor
out
jmp
xchg
jg
stc
out
movsl
fcom
jne
scas
or
xchg
imul
inc
push
push
call
pop
movsl
or
in
sub
sub
test
jge
mov
shrb
in
pop
insl
or
and
mov
test
leave
adc
pop
adc
ljmp
adc
mov
lret
call
xchg
mov
jne
in
or
xor
mov
andl
xchg
mov
shlb
xor
push
daa
cmpsb
sbb
mov
jl
lods
sbb
fcmovne
aas
push
inc
stos
mov
or
leave
test
dec
mov
and
jp
jp
lods
adc
ja
stc
outsl
inc
enter
mov
in
adc
lret
test
scas
mov
int3
cmpsl
pop
lret
in
mov
dec
sub
ja
mov
mov
mov
xor
int
mov
push
mov
and
jp
sbbl
icebp
adc
mov
mov
out
test
cmpsl
add
stc
jo
jl
dec
mov
add
in
jle
cmp
in
sbb
jbe
sub
add
negb
dec
adc
outsb
sub
mov
xchg
int
adc
imul
jge
sub
jge
fdivs
mov
test
stos
mov
cmpsl
cltd
cmpsb
fmull
mov
jge
mov
cltd
jp
mov
mov
xor
mov
and
or
nop
out
jl
inc
push
orb
popf
xchg
or
inc
notb
or
sbbb
aas
outsb
dec
repnz
add
inc
xchg
add
mov
mov
or
push
fildl
jne
xchg
xor
jns
fucomip
ja
nop
push
jg
insb
jae
in
inc
enter
jmp
sbb
inc
jae
shrb
insl
fisttpll
addr16
jns
adc
mov
adcb
aad
cli
faddl
sub
mov
pop
adc
and
mov
cltd
imul
mov
cmp
and
xor
stos
inc
mov
xchg
cmp
dec
sarl
xchg
cld
mov
divb
mov
dec
jo
js
stos
dec
mov
iret
push
outsb
les
dec
mov
mov
mov
aam
popf
mov
adc
inc
cmp
cmc
out
pop
sbb
push
pop
outsl
inc
lds
lret
fwait
or
inc
xchg
lahf
loope
mov
shrl
and
mov
jecxz
repz
addr16
jb
movsl
add
inc
clc
stc
outsl
adc
mov
lret
push
js
adc
mov
fmull
mov
pop
arpl
add
jb
dec
sub
mov
add
cli
pop
mov
bts
movsl
adcb
fiaddl
leave
or
mov
stos
test
lahf
xchg
and
pop
les
or
cmp
pop
xchg
lds
jae
xchg
pusha
inc
test
adc
movsb
jne
pop
js
in
in
clc
or
popf
cmp
jo
pop
pop
pop
jb
pop
sbb
loope
adc
xchg
andl
scas
push
jmp
fs
je
sbb
sar
out
xchg
out
sbb
inc
add
mov
rcrl
sti
push
test
xor
adc
adc
pop
pop
lods
mov
icebp
stos
or
lret
xchg
or
push
loop
mov
js
push
mov
push
enter
imul
loopne
mov
pop
add
fistps
xor
sbb
shl
stc
jmp
cld
cwtl
daa
call
subl
lcall
fs
cmpsl
or
popf
movsb
adc
add
aas
ror
pushf
or
test
xor
shlb
sti
fsubl
push
pusha
dec
cmp
loopne
cld
clc
pop
push
add
push
cli
ret
sub
adc
inc
dec
mov
ficomps
push
loop
mov
into
jge
cmp
mov
xchg
adc
dec
les
iret
mov
fst
outsl
lock
xchg
movb
leave
jge
mov
pop
mov
lods
bt
xor
add
and
popf
out
xor
push
push
outsl
pop
sub
mov
inc
mov
ds
out
ds
mov
xchg
icebp
sub
push
test
arpl
in
pop
xchg
fidivrl
shr
push
cltd
mov
mov
std
fucomp
jl
loop
rolb
push
fildll
cmp
test
mov
xchg
insb
aad
mov
adc
sahf
or
adc
movsb
cmp
rolb
je
xchg
dec
arpl
iret
add
sbb
in
rolb
fldt
pop
sbb
aad
push
push
xadd
outsl
xchg
aam
or
xchg
add
mov
addr16
rcll
pop
into
dec
mov
xor
xor
mov
pushf
cmc
sbb
mov
xchg
ds
movsb
and
add
xor
adc
fstps
adc
mov
out
lods
inc
xor
mov
jnp
add
js
cmpsl
xor
add
xchg
mov
hlt
adc
sbb
pop
stos
dec
cld
and
sub
stc
cltd
lret
cmc
pop
xlat
push
sub
xor
jae
xor
xchg
hlt
insl
data16
daa
xchg
push
cmpsb
mov
cmpl
xchg
leave
pop
push
jae
jl
lret
sti
mov
push
pop
fimuls
ret
and
xchg
and
sbb
fcom
pop
or
les
pop
jle
push
in
mov
dec
mov
adc
stos
pop
movl
test
pusha
push
bound
xchg
gs
xor
add
pop
and
imul
sub
sbb
fsubl
stos
add
sbb
ror
sbb
pop
cmp
lds
or
incl
lea
shl
jnp
jg
mov
test
imul
mov
xor
pop
lahf
lret
xor
shrl
test
loope
ret
sbb
jno
adc
sbb
inc
pop
lret
outsl
fisttpll
std
lret
test
ss
mov
scas
fldcw
push
jns
mov
nop
popf
jle
pop
sbb
push
ss
mov
sub
cwtl
test
push
dec
or
sub
pmullw
jae
sbb
fs
ja
mov
lods
adc
out
push
cld
mov
dec
mov
popf
lock
or
divb
jle
mov
push
lods
cmp
fidivl
pop
das
dec
xor
lods
xor
sub
out
std
in
lds
add
push
test
imul
add
push
push
daa
pop
push
andb
inc
add
lret
test
add
sbbl
xchg
lahf
dec
push
add
sbb
stc
xchg
inc
lret
in
das
fwait
jnp
mov
xchg
dec
jae
add
jae
orl
and
jo
mov
int3
and
popa
xchg
leave
mov
dec
cmp
and
xchg
cmpsb
mov
rol
mov
adc
xchg
push
pop
push
roll
lods
mov
pop
pop
xor
mov
stos
dec
fimuls
jg
in
dec
rcr
xchg
jmp
je
popa
mov
jmp
popf
dec
iret
cli
sarl
cld
orl
pop
mov
insb
filds
push
cld
mov
adc
movsl
pop
test
dec
jb
lahf
push
testl
adc
call
sbb
push
nop
roll
or
arpl
cs
test
or
roll
push
mov
push
mov
rcll
cmc
xor
mov
inc
sub
int
push
fs
mov
xor
lods
pop
push
decb
mov
lahf
das
pop
push
lcall
lcall
sub
jno
xor
dec
inc
mov
adc
xchg
xor
or
je
xchg
mov
push
push
mov
and
loopne
ficoml
jge
jne
mov
arpl
mov
push
jnp
pusha
add
pop
xchg
add
dec
insl
popa
aam
pop
cmpsb
adc
shlb
add
and
in
jmp
loopne
xchg
pop
insl
dec
lea
add
ljmp
pushf
fnstcw
mov
push
cmp
in
dec
adc
add
push
scas
and
shll
adc
lret
mov
sbb
dec
lods
xchg
push
das
mov
mov
lret
dec
imul
mov
das
adc
cld
adc
jne
adc
pop
sbb
inc
or
inc
cmp
scas
push
push
jnp
mov
lcall
cld
mov
outsb
outsb
ja
pop
dec
lcall
mov
add
or
push
mov
pop
out
adc
aas
fwait
int3
jmp
ror
mov
cmp
lahf
pushf
repz
cmpsl
jne
aad
fwait
push
or
push
loope
movsl
xchg
sbb
aad
sbb
jns
out
mov
incl
cwtl
test
mov
cmp
adc
cmpsb
arpl
push
ret
and
popf
je
popf
fcompl
mov
cmp
out
nop
sbb
enter
pop
jle
lret
test
adc
mov
inc
jecxz
adc
aad
or
gs
mov
lods
out
gs
mov
insb
push
adc
sbb
jns
sub
gs
xor
outsl
dec
stos
push
mov
mov
mov
lahf
xchg
aam
sub
mov
xor
push
nop
sbb
pusha
pop
ss
mov
dec
push
pusha
jbe
sti
jae
mov
cmp
xchg
mov
cmp
lods
sub
fcomip
mov
and
outsb
lods
loop
mov
shrl
notl
xor
cmp
adc
mov
cwtl
adc
inc
inc
xchg
sbb
push
orb
push
jecxz
pushl
dec
xchg
rclb
lods
mov
fdivrs
jge
jg
pop
rol
cmp
or
test
xchg
mov
add
outsl
cmpb
stc
xor
xor
test
xlat
mov
dec
pop
mov
or
or
aam
imul
xchg
popa
or
das
fbld
lret
or
orl
enter
mov
dec
mov
jecxz
mov
or
fstl
movsb
cmp
jle
sub
push
mov
in
int
frstor
sbb
aad
in
add
xchg
jae
jns
ffree
cmp
adc
popa
push
hlt
cmp
mov
xchg
dec
xchg
das
inc
in
push
lock
rcrb
or
int3
add
inc
scas
push
outsb
rcrb
fnstsw
ret
or
adc
fs
sbb
push
or
and
incb
xchg
add
outsl
cmc
idivl
xor
lahf
pop
out
in
jl
stos
pop
mov
push
shl
mov
test
dec
inc
cli
stc
insl
filds
push
icebp
xchg
pop
sbb
or
hlt
dec
outsb
inc
mov
cmp
jp
fcmovb
mov
xchg
fmuls
adc
daa
and
loopne
in
fldl
dec
adc
notl
mov
inc
inc
bound
inc
xchg
or
dec
das
add
xor
testl
mov
data16
push
mov
out
sub
lea
mov
push
js
mov
in
mov
pop
je
daa
xor
mull
push
cmp
scas
mov
data16
enter
pushl
fadds
xor
andb
lds
xlat
and
mov
mov
lret
adc
stos
test
mov
mov
push
jnp
call
sbbb
lret
cmpb
jg
js
sbb
dec
in
adc
sub
jno
in
lahf
fucomi
inc
adc
xchg
dec
push
out
xor
jnp
cmp
adc
mov
aam
popf
loope
xchg
stos
stc
es
mov
push
or
xchg
pop
mov
rclb
xchg
aaa
test
sbb
notb
inc
aaa
jae
fistps
imul
cwtl
jnp
movd
xchg
fwait
push
inc
out
pop
or
pop
push
xor
shr
and
in
sub
inc
lahf
gs
pop
pop
xor
out
daa
sbb
adc
lret
jnp
cmpsb
call
mov
popf
sbb
lods
ja
fimuls
mov
jne
aaa
jno
dec
ljmp
aad
adc
mov
int
push
push
loop
popf
in
and
divb
add
fisttpll
adc
pop
mov
mov
test
loopne
jae
xor
stos
mov
aaa
nop
inc
loope
lods
mov
std
cwtl
and
cmp
scas
lds
sub
les
sbb
aam
fildll
dec
xchg
call
test
push
inc
sarb
xchg
pusha
cmp
push
xchg
xor
cmp
dec
pusha
insb
enter
in
popa
xor
in
aam
mov
inc
mov
xchg
xchg
repz
repnz
xchg
xor
sbb
mov
test
pop
xor
push
jns
pushf
mov
push
add
inc
test
sub
insb
push
sti
mov
mov
mov
jnp
ret
sbb
hlt
inc
pop
fcoml
aam
xchg
pop
add
aas
pop
jg
or
sbb
cltd
adc
sarl
or
in
xchg
or
jl
aam
stc
xchg
repz
xchg
mov
adc
pop
test
sti
mov
movsb
mov
adc
mov
cmp
std
nop
rclb
mov
dec
js
cli
add
dec
sub
stc
cmp
enter
cmp
jno
mov
pop
ror
xor
mov
iret
and
or
sub
nop
imul
dec
add
mov
xchg
push
out
fdivrs
fs
sub
cmp
and
fstl
hlt
lods
pop
repnz
lds
xchg
in
push
xchg
ret
cmp
add
testl
rolb
test
push
xlat
jmp
js
andl
dec
mov
dec
dec
sub
fsts
or
push
jbe
adc
mov
inc
inc
xor
jne
sbb
cli
sahf
mov
test
repz
ret
lods
push
leave
push
mov
xor
cmp
into
cli
rolb
add
arpl
lcall
xor
movsl
arpl
adc
imul
cli
xor
in
daa
dec
fdivrs
xchg
sahf
sarb
push
pop
jge
test
sub
mov
push
cmp
mov
test
xchg
jo
dec
js
sbb
and
iret
aam
pop
fldl
mov
mov
sbb
xchg
jbe
xor
addr16
pushf
inc
mov
push
fnstcw
xchg
lret
sbb
icebp
push
adc
sbb
or
ficoml
insb
dec
xchg
out
shll
mov
add
dec
shlb
sub
xchg
popa
or
lods
outsl
enter
pop
inc
sub
lock
adc
fcmovbe
cmp
js
daa
inc
add
ss
or
sbb
leave
xor
sbb
in
stos
mov
adc
loope
leave
pop
xor
mov
in
cltd
out
cmc
ret
lret
lret
sbb
out
or
jle
push
cmp
lret
lea
int3
movsl
std
push
sahf
inc
loopne
mov
push
xor
sub
add
jl
pop
addr16
jl
adc
cmp
in
jae
hlt
mov
sub
xor
and
xor
out
add
sarb
mov
add
or
dec
xchg
push
rclb
out
aad
repz
sub
jge
mov
adc
call
mov
push
and
ret
popa
fidivl
push
testl
arpl
xorb
pop
in
push
sbb
outsl
enter
test
sahf
in
fsubl
jns
mov
mov
dec
movsl
ljmp
fnstcw
ljmp
fisttpll
cmp
in
lds
add
mov
inc
mov
repz
bound
xchg
jns
mov
data16
pop
pop
mov
ret
or
lds
iret
arpl
je
xlat
jg
mov
mov
psrlw
cmp
loope
pop
roll
or
or
cmp
std
inc
cmovle
repnz
lret
or
xor
jnp
add
jmp
clc
in
icebp
jno
jnp
mov
aad
popa
cmp
pop
shlb
sbb
cld
movsb
mov
icebp
jmp
inc
mov
jmp
shrb
xor
ret
fst
or
imull
push
pop
fstpl
cwtl
test
dec
js
jmp
rolb
addl
lcall
inc
xchg
pop
daa
xchg
push
inc
insb
jne
and
in
and
int
or
loopne
cmpsb
nop
clc
cmp
jle
mov
inc
or
or
xchg
and
adcb
shlb
dec
test
repnz
stos
mov
xor
inc
shl
aad
mov
pusha
leave
pop
into
icebp
cmp
mov
jbe
popa
mov
mov
push
adc
imul
inc
inc
add
pushf
sub
out
inc
ret
das
jnp
into
mov
scas
push
push
mov
mov
mov
sbb
dec
cmp
sbb
and
repz
cmp
and
jns
fidivl
jno
mov
and
ds
scas
mov
cmp
cmp
mov
js
fisubs
lret
xchg
iret
hlt
or
push
and
out
cwtl
repnz
fsubrp
pop
mov
lret
ja
mov
lahf
mov
leave
mov
outsl
roll
inc
mov
pop
adc
push
push
sbb
jns
repz
mov
ffree
pop
movsb
sub
leave
push
mov
mov
ret
mov
cmp
js
orps
rcl
jle
out
jge
mov
inc
enter
test
daa
or
adc
mov
test
loop
jecxz
pop
push
dec
scas
ljmp
sub
inc
into
ret
mov
ficoml
or
enter
add
fs
sbb
pop
gs
dec
loopne
cmc
or
mov
or
mov
scas
push
lret
or
sub
bswap
and
pop
cld
push
mov
bound
xchg
mov
insl
lcall
jno
cmp
aam
aaa
ja
je
jmp
outsb
mov
int3
dec
jne
jo
or
jge
pop
lcall
outsl
push
cmp
cmc
mov
daa
push
fwait
bound
jne
lods
test
mov
xchg
mov
push
lret
push
mov
push
mov
mov
jnp
xchg
stos
push
xor
mov
mov
xor
jne
cmpsl
mov
lret
dec
testl
push
mov
mov
imul
or
lock
std
pop
sbb
movsb
es
cmpsb
fiadds
mov
or
shrl
adc
shlb
xchg
jg
cmp
aad
int
in
leave
or
jae
movsb
pop
fsubl
and
push
adcb
dec
adc
test
xchg
jp
and
xor
sar
xor
push
add
arpl
inc
ljmp
int3
adc
mov
inc
mov
out
push
xor
icebp
pop
adc
fnstcw
pop
hlt
mov
in
sti
or
ficoml
push
lea
ljmp
loop
jg
jbe
push
loopne
mov
call
mov
jno
jo
pop
and
mov
push
out
pusha
cwtl
fcmovnb
dec
pop
scas
adc
fadds
js
call
lret
icebp
cmp
mov
mov
daa
hlt
pop
sbb
ret
mov
jae
jmp
push
push
rolb
aaa
cmp
inc
jbe
and
ss
clc
jb
es
nop
adc
dec
test
movsb
out
repz
sahf
jnp
pop
cld
stos
dec
call
arpl
pop
mov
js
roll
mov
adc
rorb
inc
xor
xchg
dec
pop
cmc
outsb
jbe
aam
imul
dec
pusha
pop
jge
ja
ret
add
stc
or
iret
xor
jnp
mov
inc
dec
lods
inc
addl
repnz
and
mov
cmp
rorb
cmp
data16
rcrb
jecxz
test
mov
lock
lea
fnstcw
ja
movsl
das
jo
lret
js
push
dec
push
cmp
xchg
sarb
icebp
sahf
inc
push
adc
push
sub
lcall
call
jnp
push
cmp
cld
outsb
sar
mov
mov
or
or
xchg
dec
int
push
or
test
insb
push
and
loope
insl
stos
xor
ficomps
sub
mov
add
pop
sbb
sbbb
xor
lock
cli
inc
pop
jnp
mov
das
mov
outsl
mov
inc
cmp
inc
jae
mov
fbld
in
xchg
addr16
mov
movsl
addr16
pop
jecxz
insl
cwtl
xchg
inc
cmp
int3
leave
clc
rolb
xchg
test
pop
sahf
sbb
jmp
les
push
and
lock
push
fisubs
stc
push
cmp
xchg
cmpsl
sarb
mov
or
xlat
rcr
int3
dec
mov
shlb
ja
mov
jne
xchg
cmp
dec
pop
push
xchg
dec
xor
dec
fsts
cmpsl
dec
push
jae
lret
js
fistpl
mov
lret
jae
clc
filds
popa
mov
dec
pop
outsl
jns
sbb
jno
sbb
jns
out
mov
mov
dec
xchg
mov
add
roll
mov
repnz
and
mov
cmpsb
adc
cs
scas
add
dec
stos
mov
jne,pt
cmp
test
mov
icebp
push
push
aas
pusha
cli
adc
pop
add
jno
add
mul
mov
mov
ret
shr
repz
imul
push
aam
inc
into
test
xor
cmp
push
subl
mov
int
fnstsw
mov
pop
mov
mov
push
add
data16
inc
rorb
cmp
dec
dec
in
lds
sbb
push
roll
out
call
lods
xor
and
mov
mov
dec
jne
push
mov
scas
dec
in
or
icebp
mov
les
push
inc
ja
push
cmp
add
sbb
adc
jb
sub
fstp
fcomps
cld
aam
mov
popf
push
push
push
imul
int3
fs
cltd
mov
fiadds
out
leave
lods
sub
pop
or
or
and
and
fsubp
push
popf
mov
inc
jmp
or
jae
xlat
dec
imull
jp
mov
aas
dec
jmp
fists
lods
lret
xor
mov
stc
cmp
dec
cmp
je
jp
adc
test
cmc
mov
lahf
xor
and
inc
sub
adc
stc
cwtl
insl
mov
sub
xlat
adc
mov
outsb
rorb
ss
inc
sbb
adc
out
stos
jbe
test
ljmp
out
scas
jae
add
test
xchg
jns
jl
daa
sahf
jecxz
push
call
dec
ds
psllw
ror
adc
sbb
push
hlt
inc
scas
pop
or
pop
inc
inc
pop
pop
push
sbb
sbb
sub
jmp
pop
ret
mov
add
gs
add
lret
cmp
sbb
and
cmc
mov
xor
ljmp
dec
ret
enter
divb
cmp
bound
mov
cmpb
xchg
push
cs
test
addr16
adcl
mov
adc
movsb
jg
dec
xor
dec
test
mov
xchg
add
cmp
sbb
data16
ret
mov
mov
push
and
inc
cld
pop
xchg
mov
xor
hlt
and
pop
cmc
push
xchg
push
aad
xchg
mov
inc
cmp
fmulp
sahf
mov
test
and
pop
pop
loopne
adc
rcrb
imul
add
xor
lret
addr16
pop
push
mov
jb
loopne
pop
mov
mov
push
xchg
mov
jno
or
ficoms
xor
fsts
imul
mov
mov
push
add
cld
cli
adc
out
idiv
leave
push
ficomps
sar
push
or
cmp
pop
inc
sbb
test
lock
cs
lcall
movsb
xchg
jl
jmp
imul
enter
sub
sbb
stos
mov
mov
shrb
lods
cmp
arpl
lcall
fwait
xchg
sub
push
xchg
push
push
imul
clc
cmc
sti
push
push
cltd
push
jb
ss
cwtl
in
push
cmc
mov
ret
sbb
dec
xor
push
or
cmp
jbe
scas
push
sub
mov
jg
out
add
add
jo
xorb
cwtl
sub
and
data16
xchg
cmc
mov
fisttpll
roll
sbb
in
in
inc
push
popa
ret
fidivl
push
jmp
sub
xor
shlb
or
and
movsl
es
mov
stos
je
ret
gs
ret
aam
jno
mov
and
add
in
pop
push
mov
sbb
mov
pop
lcall
pop
push
inc
jmp
clc
xor
mov
icebp
mov
and
cmp
mov
lds
fs
fs
lcall
add
aam
aam
cmp
ja
in
cli
test
outsb
xchg
in
shrb
inc
xor
lods
dec
jp
fldcw
sbb
add
lods
mov
xchg
lahf
bound
test
pop
cld
ds
stc
stos
arpl
into
sub
mov
test
mov
and
push
xchg
dec
dec
xchg
enter
xchg
lret
popa
inc
xor
fs
pusha
inc
imul
ljmp
adc
mov
adc
jnp
add
cmpl
add
mov
or
aam
xor
in
scas
cmp
fwait
dec
xlat
sbb
inc
mov
sub
mov
cmpsb
jl
pop
push
mov
push
repnz
fistpll
ja
out
mov
es
jecxz
incl
sti
sub
leave
fcom
scas
inc
mov
popf
out
test
inc
movsb
je
in
aaa
xlat
inc
push
inc
pop
sar
std
push
jl
popf
clc
aam
pop
bnd
call
jg
scas
test
adc
movsl
mov
fcmovnu
stos
pop
push
aad
push
arpl
filds
xchg
out
in
fucomp
mov
xchg
out
enter
xor
outsl
in
hlt
ja
outsb
xorb
stc
and
shr
daa
je
dec
aaa
shll
jae
sahf
roll
imul
fldl
inc
push
pop
mov
ds
mov
movsb
out
push
mov
inc
mov
scas
cmpsb
dec
ret
add
fdivrs
lods
lahf
ljmp
pop
inc
scas
jae
lea
mov
cmp
leave
xchg
sahf
sbb
sub
aaa
popf
add
jle
or
cmc
cmp
loop
int
out
mov
stos
in
aaa
sub
xchg
lods
jmp
jle
push
enter
bound
sti
insl
repnz
inc
test
cmp
loope
xor
mov
pushf
out
adc
popa
sbb
dec
rclb
add
jne
jne
jg
inc
repz
xchg
jbe
imul
pop
jmp
cmp
jecxz
push
mov
cld
aad
test
pushl
sub
stos
push
jns
push
xchg
cmp
scas
fs
sub
popf
mov
push
cltd
aaa
sub
sbb
shl
mov
aad
and
jo
fildl
movsb
push
xor
hlt
sbb
leave
mov
pop
into
jo
inc
sbb
cltd
je
jecxz
fsubp
mov
and
jno
mov
arpl
sbb
jl
cmp
mov
mov
pop
sar
mov
sti
push
out
cmp
std
test
sarl
hlt
movsb
pushf
int
push
hlt
mov
aaa
and
mov
and
and
sub
into
mov
mov
pusha
rorl
jno
push
jbe
mov
insl
add
and
fiaddl
or
sub
repnz
out
dec
jge
inc
insb
add
adc
push
imul
push
pop
into
inc
pop
shl
push
xor
icebp
xor
shl
loopne
decl
adc
ds
test
jnp
iret
xchg
test
xchg
push
test
jl
inc
roll
ljmp
fmull
movsb
ret
inc
in
jnp
dec
aad
lret
arpl
add
cmp
pop
and
pop
in
js
xchg
cmp
ficoms
sbb
mov
or
ret
jne
jbe
in
mov
call
insl
andps
xchg
pop
in
cmc
add
adc
fstps
pop
mov
movsb
iret
into
imul
or
push
sub
xchg
pop
out
ja
inc
out
mov
movsb
mov
pusha
mov
sbb
icebp
adc
inc
push
cmp
mov
popf
jl
push
aam
add
mov
push
icebp
aas
jnp
xlat
insl
pop
mov
push
inc
cmc
pop
xchg
fildll
push
or
ljmp
push
lds
push
rcrb
xchg
xchg
mov
inc
cld
iret
add
outsb
dec
pop
mov
icebp
jp
jl
jbe
xadd
cltd
lds
inc
jbe
pop
dec
push
mov
fwait
lods
imul
mov
nop
pop
push
adc
loope
mov
mov
outsl
xor
aas
and
out
inc
mov
adc
in
das
jge
dec
cmpb
jb
out
push
fcoml
or
push
xchg
fidivs
jmp
mov
cld
adc
lret
add
addr16
lods
pushf
dec
pushf
jb
mov
shlb
and
xchg
dec
mov
xchg
jge
hlt
push
outsb
ja
pop
aad
dec
into
xor
out
idivl
pop
fists
leave
adc
and
lahf
lcall
aam
addr16
addr16
stos
pop
jb
mov
cmp
sub
and
daa
xchg
sbb
cmp
inc
cs
push
das
test
adc
xlat
into
stos
fnstcw
mov
dec
push
mov
adcb
inc
lret
hlt
pop
push
and
icebp
pop
in
je
lret
cwtl
popl
shlb
mov
jge
fwait
rcll
xchg
xchg
jp
dec
jge
fwait
stc
kxnorw
cltd
ja
pusha
pop
push
imul
insb
sti
cmp
repz
xchg
add
add
fimull
sub
sub
sub
dec
push
test
dec
loopne
mov
scas
aas
cmpsl
sub
mov
inc
mov
or
stos
nop
aam
inc
sti
push
nop
ficoml
jo
xchg
mov
xor
outsl
lahf
push
jp
leave
ss
daa
fmuls
int3
punpckhdq
mov
leave
out
or
xor
sbb
adcb
mov
ret
inc
mov
cmp
daa
and
jns
aas
mov
scas
sbb
mov
mov
pop
and
push
lret
ljmp
les
int
pop
nop
addr16
dec
fucomip
cmc
int3
add
or
aad
jecxz
or
in
cltd
or
daa
stos
popf
subb
xor
push
mov
xchg
xchg
loope
mov
jl
lahf
out
mov
push
ror
pop
adc
cmc
sub
mov
adc
aam
popa
les
imul
push
gs
test
mov
imul
call
imul
inc
test
ret
xor
xor
cmc
jecxz
mov
or
cmpsb
sub
cltd
aad
mov
mov
aas
cmp
xor
ss
stc
sbb
inc
out
outsb
punpckldq
outsl
fimuls
data16
push
push
sbb
pushf
pop
insb
xchg
inc
or
sub
imul
mov
repnz
pop
mov
insl
xlat
mov
mov
cltd
push
mov
inc
and
pop
sarb
cvtpi2ps
xor
cmp
mov
push
cmp
aas
cmc
stc
in
mov
sbb
imul
nop
lret
add
dec
push
sub
pop
or
call
pop
repnz
or
or
sub
enter
or
jmp
ja
sbb
dec
aaa
or
out
dec
mov
leave
xchg
add
std
mov
fs
int
mov
inc
jmp
insl
shl
jecxz
leave
jmp
shr
pop
jmp
sub
pop
ret
pop
or
mov
jns
popf
sbb
inc
jo
jns
push
hlt
dec
lea
sub
sbb
sti
mov
and
sub
mov
lea
xlat
or
imul
repnz
push
es
cmpsb
sub
in
inc
scas
fidivrs
jecxz
sbb
jl
les
pop
in
xchg
cld
adc
icebp
gs
mov
repnz
jnp
cmpsl
enter
xor
or
imul
mov
xor
cld
addr16
je
mov
mov
push
mov
mov
xchg
les
inc
cmpsb
shlb
inc
test
cmp
push
loop
sub
pop
aas
mov
aaa
and
nop
push
cmp
ret
fsub
dec
inc
subl
mov
inc
fdivl
or
test
xor
jns
test
sub
ret
cmpsb
mov
mov
push
mov
sub
fnstenv
xlat
js
pop
xchg
mov
int
adc
sbb
enter
lods
inc
and
push
out
lea
or
sbb
je
pop
inc
and
mov
pop
mov
ret
jae
push
mov
addr16
into
sbb
pop
ret
lock
pop
imul
outsl
inc
les
pop
shll
insb
lea
movsb
dec
lret
jbe
aam
jle
jmp
mov
jnp
outsl
shll
sub
iret
xor
call
mov
hlt
insl
shr
fldl
sbb
fadd
call
dec
adcb
sub
xor
hlt
gs
lahf
shlb
addr16
cmp
xchg
inc
add
rolb
inc
addr16
push
bnd
add
loope
sub
mov
movsb
ret
jp
adc
mulb
jle
and
lret
ret
and
ss
xor
sbb
loope
push
mov
dec
lret
mov
test
mov
add
xchg
adc
pop
cmc
sub
insl
mov
cld
ss
mov
dec
lahf
dec
xchg
adc
imulb
int
ret
add
dec
sti
push
fisttps
jecxz
mov
add
cwtl
xor
sar
jecxz
sub
insb
sub
and
and
pushl
rol
idiv
lods
loopne
fs
lcall
or
jp
test
adcb
fs
mulb
fimull
push
inc
push
gs
jmp
push
lahf
dec
clc
cmc
dec
or
jle
shrb
sub
adc
xor
pop
cmp
adc
or
jecxz
sub
sahf
bound
push
hlt
push
repz
orb
popa
pop
mov
push
cmp
sub
leave
dec
cwtl
bnd
xor
sub
iret
gs
clc
cmp
cmp
leave
xor
cmp
out
lock
cmpb
inc
inc
out
outsb
jmp
or
idivb
lods
ret
jno
add
mov
stos
cltd
leave
pop
pop
jecxz,pn
outsb
fs
xor
add
into
sbb
add
out
fistpll
xor
add
dec
pop
jno
xchg
cmp
fdiv
mov
sub
fisttpll
mov
jns
pop
mov
clc
imul
sarb
push
rcll
jmp
scas
in
aam
sbb
jb
stc
test
cmpsl
mov
je
fmul
jle
ljmp
fsubs
push
out
and
cmpl
addr16
test
scas
sub
fwait
mov
nop
movsl
ss
add
ficomps
push
jge
stc
frstor
push
mov
pop
and
cmp
mov
and
dec
xchg
or
fnstsw
in
inc
gs
fbld
pop
add
xchg
push
adc
and
push
jmp
mov
inc
xor
out
iret
outsl
xor
dec
xor
out
flds
fpatan
bound
fs
nop
ja
leave
cmp
sbb
rol
test
pop
imul
add
sbb
adc
bswap
add
fdivrl
pop
push
push
xchg
add
cmp
das
push
push
jge
lahf
pop
fsubrl
cltd
jo
xchg
inc
ljmp
dec
pushl
out
mov
fs
insb
cmpsb
lret
xchg
pop
rolb
sub
sti
std
jno
dec
pop
lcall
lret
lods
lds
scas
cwtl
test
das
push
sbb
movsb
sbbl
xchg
mov
call
inc
jmp
hlt
inc
nop
adc
lret
push
pop
sbb
jecxz
jae
xor
out
shrl
shlb
fistl
arpl
fistps
mov
stos
fs
movsb
fwait
mov
dec
mov
or
rcrb
in
xchg
arpl
ja
push
xchg
push
cmp
fsubl
addl
rorl
test
and
icebp
test
pop
mov
int
std
push
cmpsb
repz
pop
in
ljmp
sub
pop
pcmpeqd
mov
mov
mov
enter
mov
test
repnz
cmp
xchg
rcrl
cmp
lret
loop
add
mov
aad
mov
jmp
inc
add
aam
lret
incl
dec
cmp
inc
adc
outsb
jnp
inc
sbb
and
push
pop
mov
jg
pushf
jp
or
aas
inc
push
pop
or
mov
push
jge
mov
mov
pop
aam
mov
call
std
lods
out
ret
or
inc
clts
cld
dec
pop
lock
mov
pop
add
sbb
cmp
mov
xchg
xchg
pop
add
and
pop
inc
mov
pop
imul
lods
outsl
sub
and
movsl
cmp
addr16
mov
xor
mov
fidivrs
jl
mov
scas
lods
add
jg
sub
jmp
or
pop
cmpsl
js
fmuls
add
or
sbb
les
in
lahf
sub
adc
push
pop
imul
adc
mov
inc
adc
cs
xchg
cwtl
into
es
dec
mov
stos
stc
in
out
mov
bnd
dec
ret
cmp
jns
outsl
mov
loop
fsubrl
gs
push
sarb
sub
imul
test
dec
mov
mov
mov
jl
pop
addb
pop
xor
add
addl
out
int
adc
xlat
fmulp
nop
push
jno
in
dec
lahf
xchg
xchg
movsb
cltd
sti
and
cmpsb
sub
cmp
cmp
jl
in
push
scas
jecxz
mov
insb
mov
fmull
fs
dec
je
pop
inc
leave
mov
sub
std
inc
les
popa
ret
pop
push
fcomps
mov
scas
pop
arpl
mov
push
in
mov
xor
jge
cmp
or
das
outsl
leave
or
lret
fstps
pusha
inc
jb
jno
cmp
mov
jb
adc
jle
push
ret
lahf
mov
inc
loopne
pop
std
in
cmp
or
jmp
scas
push
rep
enter
das
addb
cli
test
mov
mov
scas
cmp
mov
jbe
js
mov
and
jnp
xor
sbb
imulb
mov
movsl
push
mov
js
or
and
inc
dec
cmp
inc
push
insl
push
jbe
push
jle
repnz
sub
lret
pop
sti
test
addr16
daa
inc
scas
xor
lods
aam
jge
mov
scas
mov
adc
or
sub
loopne
mov
push
mov
pushf
cmp
pop
incl
arpl
int
jp
xor
dec
push
jmp
inc
xchg
out
mov
pop
je
stos
dec
fidivrs
andb
jo,pt
jns
and
push
pop
cmpsl
dec
nop
pop
xchg
repz
mov
ret
mov
jl
pop
lds
ficoml
jg
add
cltd
xchg
daa
adc
dec
cmc
xchg
cli
inc
sbb
or
dec
outsb
jno
ror
aad
pop
addr16
aas
ja
inc
mov
int
js
dec
mov
daa
cmp
inc
repz
jo
fldenv
or
es
and
add
gs
dec
bound
xchg
pop
mov
pop
add
inc
mov
xchg
adc
jmp
fisubl
sbb
lret
jge
imul
add
xor
inc
lods
test
repz
mov
sbbb
mov
cmp
ret
int3
popa
fimuls
ss
jl
aaa
pop
or
lret
sti
test
fnstsw
dec
je
test
cs
mov
daa
jb
jns
push
cwtl
adc
sbb
mov
mov
inc
dec
push
mov
aaa
movsb
testb
ret
fs
stos
repnz
push
xor
mov
xchg
call
xchg
and
xchg
mov
and
sbb
mov
cld
cwtl
cmp
jnp
sbb
mov
add
call
in
outsb
repnz
fdivl
sub
pop
cmpb
pop
mov
mov
and
and
push
xor
mov
rorl
inc
xchg
push
call
add
loope
xchg
cs
mov
pop
loop
add
inc
push
push
mov
stc
hlt
and
jl
fsubs
ret
sbb
or
push
imul
jne
mov
cmp
mov
push
pop
jae
pop
jg
dec
aaa
mov
lcall
xorb
or
inc
fidivl
inc
xchg
repz
mov
mov
push
jmp
xchg
jmp
xor
aaa
inc
xor
xchg
cmpsb
rorb
jb
iret
test
mov
mov
call
je
imul
mov
hlt
sub
push
gs
xor
jnp
loopne
mov
mov
xor
mov
dec
stc
push
push
shll
dec
les
std
fiadds
scas
insl
inc
adc
adc
jp
mov
xchg
addr16
sub
out
adc
dec
add
pop
add
iret
cmp
loopne
sbbl
sbb
mov
xchg
xor
sti
fdivrp
mov
cwtl
jg
ss
sbb
cmp
fs
fdivrs
inc
push
stos
fstpl
nop
out
jecxz
mov
pushf
xorb
sbb
pusha
and
sbb
pop
popf
add
mov
popf
aaa
mov
jge
pop
adc
push
bound
dec
add
xlat
test
jnp
xor
popa
cmp
call
stos
stos
push
aad
cld
jb
mov
mov
add
jbe
rorl
jnp
rorl
pop
daa
push
aas
xchg
imul
xchg
in
pop
negl
out
inc
push
sbb
les
add
sub
stos
or
movsl
pop
lock
out
test
sarb
sbb
leave
inc
clc
cmp
lock
xchg
cli
pop
mov
mov
xor
and
mov
push
jb
sahf
mov
cmp
int
jb
dec
std
adc
std
out
cmp
inc
scas
jo
dec
jl
inc
xchg
and
into
sbb
mov
test
mov
pop
add
mov
add
inc
add
inc
mov
add
cs
pop
mov
mov
test
pop
push
stc
push
mov
out
mov
pop
ja
mov
sbb
push
cmpsb
gs
add
jne
cwtl
push
ret
call
cmp
cli
jb
mov
mov
push
daa
push
inc
cwtl
xchg
add
mov
xchg
in
pop
push
js
dec
lret
mov
mov
mov
out
sbb
add
or
jo
jb
ss
lods
sub
sub
dec
into
imul
xchg
add
sub
cmc
sub
push
add
mov
bound
xor
movsb
pop
sbb
mov
cs
mov
jae
push
inc
shlb
add
cli
rclb
lahf
daa
push
popf
add
ss
sub
jns
ret
sbb
xor
int3
sbb
mov
daa
lret
pop
xchg
test
add
sbb
test
fists
ror
rorb
dec
addb
cmp
sub
into
lock
and
int
pop
out
push
inc
lods
mov
int
mov
mov
cmp
aam
add
mov
sahf
mov
loope
cmp
in
mov
add
cmp
sbb
mov
mov
clc
xchg
aam
out
je
pop
jae
jnp
pop
aad
sbb
dec
or
outsl
mov
hlt
push
mov
js
movsl
jae
add
or
and
cmp
arpl
int3
in
pop
sub
lcall
xorb
test
pop
or
adc
sub
outsl
loopne
sti
enter
xor
cld
lods
xchg
cltd
cmp
adc
mov
in
mov
cld
testb
lds
fs
stos
mov
sub
jmp
adc
push
addr16
cmp
or
sub
mov
pusha
shll
add
inc
or
sbb
pop
fisubl
cltd
and
mov
ss
xchg
nop
xchg
out
or
out
lea
push
sar
lock
cwtl
call
iret
cmpb
jl
rcrb
fwait
adcl
enter
xor
jns
testl
addr16
imul
ljmp
pop
push
into
cli
paddb
rorl
out
sbb
pop
repnz
rclb
cmp
push
jle
test
movsl
insb
fildl
stos
dec
lcall
jg
sahf
jecxz
jge
add
and
xlat
cmpl
fcompl
xor
lret
out
lahf
dec
inc
add
loopne
sub
ret
adc
sub
fs
sbbb
push
aad
mov
mov
inc
mov
ror
enterw
xrelease
out
cmp
lods
jbe
fsubs
xchg
xchg
pop
cmpsl
sarl
dec
cmp
jmp
push
jnp
adc
into
rcl
xlat
dec
lock
movsl
test
inc
mov
out
ret
enter
mov
adc
in
fs
and
xchg
push
or
andl
push
pop
lret
popa
xchg
dec
cmp
mov
aas
xchg
sbb
pop
xor
xlat
or
outsb
movsb
and
adc
mov
mov
rcl
stos
inc
sti
inc
sbb
and
test
insl
fdivl
pop
inc
test
or
sti
inc
jle
popf
lods
mov
add
cwtl
push
xor
mov
sub
cld
loop
or
mov
outsb
lea
pop
xchg
js
inc
push
jp
inc
jp
pop
xchg
pop
fwait
jmp
sbb
pop
push
lods
iret
mov
int
mov
rolb
mov
aas
adc
jb
rcll
push
inc
adc
stc
xchg
ss
fwait
mov
mov
jno
cld
mov
push
movsb
out
xor
fbstp
je
shlb
adc
test
pop
imul
mov
repnz
sub
div
mov
dec
adc
fidivrs
clc
mov
jmp
xor
inc
xor
add
ja
and
lea
or
jno
sbb
ja
leave
arpl
lret
mov
punpckhdq
push
push
sbb
hlt
ljmp
popf
xchg
lock
jne
std
mulb
test
mov
mov
adc
imul
xchg
mov
mov
mov
jge
push
mov
stc
dec
pop
xchg
sbb
subb
add
arpl
inc
lret
out
cli
ret
cmp
and
fisttpl
lds
enter
push
dec
data16
jb
push
outsl
aaa
pushf
pop
cmp
cmp
je
out
xchg
push
pop
repz
cmc
pop
sub
mov
ret
or
not
int
push
insl
stc
sub
jb
pop
pusha
cltd
mov
jbe
dec
mov
test
sub
lock
jbe
std
out
push
sbbb
ja
xchg
xorb
and
and
or
fyl2xp1
ljmp
insb
push
lods
cltd
xchg
cmpsb
mov
dec
xchg
ret
test
lds
xor
sub
dec
insb
test
sub
fwait
enter
outsl
cmp
test
out
inc
dec
push
imul
ss
xchg
sub
and
pop
out
mov
cli
xchg
cmp
aaa
loopne
sbb
cmp
ss
pop
pop
outsl
cmp
pusha
mov
out
and
xor
pop
paddusw
lods
iret
add
inc
cmp
orb
dec
fiaddl
push
fs
test
imul
adc
add
xorb
test
sub
cmp
aas
cs
jbe
mov
push
mov
add
testb
add
inc
jg
push
sbb
scas
inc
mov
mov
push
mov
scas
push
fcoml
mov
shlb
pop
outsl
std
hlt
xchg
cs
jp
add
inc
push
jp
ljmp
pop
int3
xor
push
jmp
xchg
cmp
xchg
js
enter
adc
xchg
cltd
cmp
jecxz
pop
imul
and
mov
movsl
call
sbb
test
mov
push
xchg
sub
or
mov
mov
sbb
cmp
jo
int3
jbe
dec
loopne
add
lea
daa
vmwrite
jge
iret
sbb
loop
into
inc
in
dec
push
xor
data16
inc
cmp
mov
xor
inc
loope
scas
lds
add
mov
ret
sbb
mov
push
inc
out
and
sub
fs
rorl
mov
pop
ss
js
xor
test
hlt
or
js
in
push
push
les
scas
xchg
nop
pop
outsl
push
test
add
outsb
mov
or
int
lret
cmp
movb
dec
pushl
roll
xchg
js
arpl
bound
pop
pop
add
subb
pop
add
cmp
xchg
roll
repnz
jl
rcl
xor
daa
sahf
jmp
xchg
xchg
sbb
in
or
xor
push
jmp
stc
jne,pn
aam
int
push
sub
leave
mov
cmp
loope
sub
pushf
adc
mov
jae
cli
ret
sar
mov
add
xchg
lahf
aaa
pop
xor
pop
fs
mov
addr16
inc
mov
jbe
sub
mov
add
in
pop
push
lods
pop
clc
out
or
sub
sub
mov
dec
push
outsl
sti
add
pop
xchg
ret
js
addr16
lock
and
ljmp
push
sbb
iret
leave
sbb
mov
out
push
and
cmp
xchg
cmp
out
xchg
jecxz
test
hlt
in
pop
in
xor
out
jae
or
dec
lea
jp
imul
fwait
add
mov
pop
fs
call
ds
int
pop
jecxz
xchg
mov
lret
ss
mov
mov
jg
data16
push
mov
ret
sub
dec
out
mov
clc
add
sbb
arpl
pop
out
je
jp
je
call
mov
push
dec
cmp
mov
jae
nop
mov
cmc
subl
push
push
mov
cmp
test
adc
lret
es
cld
and
imul
popa
mov
cld
push
jns
xchg
outsb
mov
aam
in
ret
cltd
add
out
in
mov
xor
outsb
jae
sti
and
lahf
pushl
les
sbb
lahf
sti
pop
aaa
push
adc
mov
lods
add
fs
insb
sub
xchg
popf
pop
xor
adcl
add
aam
adc
jmp
sub
insb
mov
fcoms
sbb
jecxz
pop
and
js
mov
push
cwtl
into
rol
xor
mov
roll
fisubl
aam
inc
mov
pusha
lret
aaa
scas
jg
shrl
ljmp
imul
lcall
jo
sti
dec
repnz
inc
jmp
lock
movsl
sbb
sti
cmpsb
lock
ljmp
mov
enter
push
dec
or
push
ret
cmp
out
rcl
stc
inc
dec
inc
repnz
add
mov
jb
jp
insl
inc
xor
aam
mov
mov
shll
push
pop
test
push
testb
inc
pop
add
xchg
ja
ljmp
mov
jb
push
add
in
pminub
sub
pop
pop
xchg
lods
icebp
aam
in
sbb
pusha
push
sub
ret
mov
mov
dec
into
outsb
into
sbb
filds
dec
movb
and
jecxz
dec
push
push
repz
es
in
or
cmp
pop
jg
sub
add
jecxz
pop
and
jmp
lea
jle
push
test
gs
gs
gs
mov
inc
shll
or
xor
out
cmc
mov
inc
adc
es
outsb
aam
xchg
jg
test
mov
mov
fildl
cmp
or
fdivr
lods
jecxz
movsl
ja
fsubrs
cwtl
in
daa
jno
clc
mov
cmc
nop
sub
outsb
xchg
aas
rolb
and
clc
shll
pop
sbb
inc
daa
adc
ret
sbb
scas
subl
fldt
jl
dec
pop
dec
mov
pusha
xchg
pop
cli
ss
insb
orb
pusha
cmp
push
jb
cmp
test
pusha
outsl
dec
inc
pop
lahf
out
and
sahf
das
push
cmp
jae
rcl
daa
jle
mov
lret
aam
mov
jbe
les
into
sti
or
loopne
mov
out
pop
pop
inc
and
push
das
jae
fyl2xp1
aam
int3
out
mov
lods
cmp
popa
pushf
ja
dec
sarl
push
mov
and
fisttpl
jp
lock
ss
mov
push
jae
sub
outsb
into
xchg
fwait
jbe
cltd
fsubl
mov
pop
pusha
adc
sub
cli
mov
inc
rclb
push
hlt
cmpsl
andb
jge
int3
lods
and
clc
push
push
addb
ljmp
out
fldl
dec
ljmp
mov
repz
push
aaa
add
push
imul
jmp
cmp
repz
aas
adc
insl
mov
mov
xlat
aas
int
fcomip
out
lahf
jns
mov
xor
sbb
xor
jb
sbb
jecxz
xor
dec
inc
push
cmp
dec
repnz
or
sti
mov
mov
call
or
xchg
or
loope
jb
gs
mov
xchg
hlt
mov
mov
std
xor
xor
push
loop
xor
bound
and
bound
pop
shr
int
push
stos
inc
orl
cmpsl
lods
adc
push
jo
inc
aad
xlat
add
mov
or
jno
inc
movsl
lcall
mov
mov
lock
fcomip
mov
xchg
ret
pushf
mov
movsb
dec
outsl
xchg
clc
fsubl
dec
mov
das
push
sub
xchg
or
insl
imul
cmc
mov
mov
cwtl
jle
pop
gs
out
stos
mov
sub
push
addl
push
jmp
mov
into
lret
rcrl
pop
push
pop
push
push
xchg
inc
mov
mov
jnp
in
inc
sub
int3
ret
test
in
cltd
sub
mov
fcompp
sti
pop
lret
jbe
sub
shl
mov
adc
movsl
faddl
fsubrl
nop
xlat
mov
fcmovb
xchg
dec
shrl
or
sbb
js
stos
lods
inc
xor
mov
pushf
das
pop
fists
add
js
js
inc
out
stos
outsl
verw
mov
and
mov
and
sub
dec
int3
test
xor
test
bound
popa
call
lds
cmp
popf
jae
pop
xor
jl
xchg
into
or
dec
cltd
pop
mov
daa
pusha
test
inc
xlat
pusha
in
jbe
lock
mov
aam
jns
lea
cwtl
leave
push
mov
push
add
jmp
push
and
xlat
fidivl
mov
test
dec
push
xor
jo
stos
mov
rorl
les
in
cmpsl
mov
lds
pop
sub
mov
rorb
or
arpl
mov
sbb
xchg
hlt
imul
mov
mov
outsl
push
in
mov
mov
xchg
les
stos
push
pusha
fwait
adc
push
and
pop
jg
and
and
jae
pop
cmpsl
mov
and
inc
xlat
leave
xchg
xchg
and
test
adc
scas
call
push
cmc
mov
in
jnp
das
jno,pn
dec
adcl
push
push
daa
mov
pop
lret
or
pop
or
and
jg
lahf
push
cmp
inc
test
or
call
fdiv
mov
mov
jnp
aad
mov
dec
sub
mov
shrl
into
mov
in
mov
cmpsl
add
cmp
mov
nop
fwait
mov
movsl
jae
aaa
daa
sbb
in
pop
out
xor
mov
jae
add
jle
and
inc
std
nop
data16
mov
mov
mov
aam
add
cmc
inc
aas
lods
push
ja
std
dec
ljmp
incl
scas
movsb
or
pushf
addl
jle
mov
insb
cmc
int
push
fs
and
mov
fsubrp
jg
nop
cmc
xchg
lcall
mov
shll
sbb
cmp
pop
fwait
sarl
adc
repnz
hlt
mov
aas
jae
mov
ljmp
std
daa
xor
mov
js
pop
in
rorb
jle
loope
sub
loope
mov
mov
cmp
mov
outsb
pminub
dec
mov
adc
imul
xchg
sbb
pop
xchg
outsl
jnp
dec
repnz
cmp
adc
in
bound
adc
jl,pt
pop
sbb
push
add
outsb
and
and
inc
dec
inc
and
fadds
push
arpl
mov
sahf
je
iret
loopne
cmp
into
mov
sub
jae
sbb
and
out
scas
mov
movl
in
jmp
mov
and
xlat
loop
mov
push
or
repnz
faddp
lret
bound
cmp
xchg
inc
lret
or
cmp
lds
dec
mov
out
divb
dec
lcall
cmp
cmp
pop
mov
lret
or
xchg
and
xchg
add
mov
inc
jns
pop
mov
mov
test
jle
ds
int3
shll
mov
aas
pop
sbb
mov
or
adc
pop
scas
adcl
fwait
js
pop
push
fiaddl
loop
push
fsubrl
clc
fwait
fwait
clc
and
out
jecxz
fldcw
jns
out
cmp
in
push
shlb
inc
or
xchg
bound
inc
jne
cltd
pop
add
lahf
mov
mov
or
xchg
outsb
or
mov
sbb
jne
adc
scas
insl
dec
or
add
pop
fwait
icebp
setbe
movsb
xor
mov
sbb
cmp
stc
xor
shlb
lods
pop
lods
pop
data16
test
sbb
sub
sti
cmp
imul
cs
push
pop
mov
pop
pop
repnz
add
fisttps
mov
movsb
movsl
sbb
dec
jl
out
sahf
inc
or
fnstsw
data16
inc
mov
add
pop
es
sti
adc
xor
jae
pop
icebp
int
inc
notl
addr16
std
enter
or
lods
test
mov
pushf
test
sbb
mov
arpl
xchg
popf
int3
lods
inc
pop
out
movsl
dec
push
pop
add
icebp
fcmovnbe
ljmp
cmpb
fdivs
sbbl
std
jne
pushf
xor
mov
xchg
pushf
mov
xchg
aas
les
mov
push
addl
imul
test
sbb
dec
mov
sbb
add
jl
sub
sbb
ja
inc
sbb
fisttpl
inc
mov
sarl
sti
cmpsb
into
repz
ja
xchg
inc
gs
faddl
pop
icebp
push
fistpl
cmp
movsb
sub
add
xchg
or
cmp
lret
aas
ja
dec
shlb
xchg
inc
bnd
sarb
mov
xchg
movsb
mov
xchg
aaa
inc
cs
and
push
or
pusha
fs
jne
and
sub
sub
cltd
popf
xchg
addr16
mov
pop
inc
jnp
xchg
subb
or
pop
dec
ret
loope
or
jno
inc
dec
aam
add
jne
mov
ret
repz
inc
shll
push
rorb
jmp
movsl
test
pop
lcall
mov
jb
cmp
in
mov
hlt
imul
jg
jo
push
mov
outsb
idivl
add
adc
sahf
gs
negl
xor
jnp
mov
daa
cmpsb
mov
or
sub
pop
sarl
jp
ror
mov
sar
mov
inc
mov
arpl
and
mov
outsl
jns
dec
jle
data16
lods
ljmp
mov
je
stc
gs
aas
or
inc
sti
and
test
sahf
into
push
dec
pop
xorb
aam
push
pop
sbb
ret
push
push
adc
jae
repz
xchg
mov
lret
or
mov
repnz
mov
jns
mov
xchg
xchg
inc
xchg
insb
shrl
lcall
inc
push
in
test
movsb
add
push
mov
out
mov
jp
dec
adc
cmp
in
aaa
mov
testw
pop
into
sub
out
shrl
xchg
out
fstpl
jbe
jne
lea
and
inc
cmp
sub
bound
mov
fs
adc
mov
scas
lds
cs
movsl
push
jge
dec
push
mov
test
lret
sub
jnp
dec
add
pusha
push
sbb
into
cmp
xchg
popa
enter
test
cmp
add
mov
pop
mov
dec
xor
or
testb
mov
test
insl
or
lret
mov
daa
sti
or
inc
mov
inc
adc
jle
inc
fstpt
cmpsl
inc
xchg
or
enter
pop
or
push
dec
nop
adc
icebp
push
xor
jns
in
loop
add
psubusb
imul
ds
popf
lahf
out
dec
lcall
ret
repnz
push
xchg
dec
lret
or
sub
xchg
lcall
or
fs
lahf
or
aas
rolb
jp
gs
scas
rcll
push
mov
es
loope
pop
movsb
inc
rol
nop
leave
sarl
mov
inc
push
pop
out
insb
dec
ret
flds
xchg
lds
sub
adc
gs
in
lret
lahf
cmp
shlb
stos
or
lret
sbb
ss
out
pop
mov
loope
cld
mov
shll
sbb
or
inc
push
rcr
orl
xor
stos
sub
lahf
mov
int
push
out
orl
push
arpl
pop
int
push
xor
mov
pop
or
shr
jmp
cmp
push
stos
dec
adc
dec
repz
jg
jbe
sbb
repz
sub
fbstp
jmp
sbb
mov
push
bound
mov
and
pop
xor
lret
lcall
mov
das
lock
int
std
sahf
lods
jne
fcmovnbe
xor
pop
pop
sarl
mov
mov
repnz
cmp
mov
jno
add
jno
in
add
in
movsb
lret
fstpl
push
outsb
cmpsb
aaa
push
dec
popl
cmp
xor
xchg
mov
add
mov
lock
mov
pop
or
sbb
fidivrl
nop
out
stc
push
addr16
pop
sub
test
mov
xor
ret
push
mov
out
jle
fs
ret
rclb
cmpsb
enter
in
mov
faddl
jge
scas
inc
jo
or
jmp
shrb
loope
push
jbe
bound
cmc
jnp
xchg
stc
push
aas
addl
jle
sbb
inc
jb
lods
subb
aaa
push
rclb
xor
jmp
jp
test
mov
jae
mov
sbb
mov
loopne
in
xor
add
pop
scas
mov
hlt
mov
or
cli
xchg
sub
inc
push
std
pop
add
addb
aam
in
or
mov
pushf
xlat
out
or
push
ret
pop
cmp
adc
sarb
sbb
int
in
mov
cmp
inc
movsl
orl
mov
inc
icebp
rcrl
mov
rolb
pop
cmpsl
std
sbb
rorl
rcrb
xor
outsb
jg
xor
cmpsl
imul
cmp
adc
aam
test
adc
inc
ret
push
or
insb
addl
ljmp
mov
sub
mov
cltd
or
ds
cmpsb
sub
push
mov
divl
bound
fstps
aam
ss
cld
in
lret
dec
add
loope
xor
cmpsb
les
cmp
fcomps
call
xlat
add
mov
repnz
xchg
and
cmp
int3
push
not
popf
repz
and
push
div
daa
and
mov
push
aaa
xor
mov
shr
jns
mov
scas
jg
cmp
test
sar
int3
push
orb
aas
icebp
imul
xchg
sbb
movsl
adc
pop
in
mull
int
add
mov
mov
outsl
cmpsl
push
push
pop
test
movsl
dec
sub
or
ret
xor
outsl
push
icebp
sahf
pop
movsl
xchg
mov
jge
pop
xchg
xchg
inc
sarl
lahf
fistps
jae
push
fnstsw
loop
dec
mov
inc
cmp
cmp
push
mov
mov
aaa
das
mov
jmp
loope
xchg
fiadds
clc
and
xchg
push
mov
push
cli
fnstsw
rcl
add
xor
pop
stc
enter
mov
clc
adc
icebp
imul
repz
and
fidivrl
in
mov
js
xor
add
add
sbb
js
jl
out
ret
mov
dec
jo
fs
aam
adcl
push
loop
mov
cltd
xchg
mov
dec
js
add
and
fwait
sub
loope
xchg
sub
aam
rol
mul
xchg
test
pop
adc
xchg
stos
mov
in
in
jns
inc
lods
jbe
jecxz
or
push
mov
mulb
divb
pop
in
das
fcoml
mov
jnp
mov
sbb
add
movsb
sbb
repz
cs
xchg
pop
dec
add
shr
jno
iret
pushf
jg
push
mov
cmc
test
cli
out
mov
mov
push
in
daa
adc
xchg
out
mov
mov
fisubrl
mov
mov
dec
xchg
lock
mov
das
inc
notb
sub
jecxz
sbb
jns
andl
mov
push
dec
fnsave
mov
push
lods
inc
cmpsb
cmc
adc
mov
inc
add
adc
xlat
cmp
data16
scas
call
add
loope
push
sarl
sbb
mov
xchg
or
in
xor
enter
add
mov
cmp
sbb
and
in
lods
out
sub
fisttps
nop
rol
cltd
jne
dec
or
loope
int
pusha
fisttpl
add
sub
push
xor
fs
decl
lahf
stos
or
jg
fld
loop
mov
leave
and
inc
xchg
pop
fbstp
xor
jbe
mov
pop
jg
push
jl
mov
pop
fdivrl
sahf
jmp
add
sub
adc
data16
popa
pop
or
cmp
aaa
pop
ret
push
stos
push
bnd
xchg
jmp
fst
mov
mov
mov
push
xor
les
loop
inc
lret
xor
ljmp
ret
push
adc
xor
test
divl
lret
push
mov
push
movsb
mov
and
sarb
popa
shrl
jae
xor
shr
inc
popf
pop
mov
test
jmp
ja
and
vfmsub132ss
jb
adc
dec
mov
push
or
mov
loop
mov
push
jbe
ss
fcmovbe
mov
shl
add
mov
or
shll
jo
mov
pop
sub
jno
pop
jmp
mov
push
aas
addr16
dec
in
pusha
sahf
xchg
test
sbb
xor
cmp
in
loop
pop
adc
ja
sub
cli
add
mov
cmp
push
or
cmpsl
xchg
not
inc
xor
les
adc
mov
in
cmpsb
sti
pop
aaa
rcll
lods
xor
mov
aas
pop
and
into
mov
jmp
mov
sbb
mov
mov
pop
lods
push
mov
test
in
subl
sbb
and
mov
shl
cli
scas
or
sbb
jp
jmp
arpl
std
jmp
fisttpl
popf
add
inc
dec
xlat
stos
fcomps
push
jg
hlt
repnz
cwtl
jns
and
xor
cmp
sahf
cmp
nop
int3
sbb
mov
out
int
xchg
lret
add
xor
stc
dec
stc
cmp
and
push
cmp
dec
pop
sub
push
cmp
dec
scas
int3
dec
pushf
sbbb
cld
enter
cmc
lea
jge
out
mov
jmp
sub
pop
and
pop
mov
movsl
ret
ret
adc
sahf
cltd
sbb
sub
or
mov
fbld
mov
sbb
jg
mov
or
xchg
dec
repz
hlt
mov
cmp
xor
add
push
pushf
es
pop
sub
xchg
dec
and
ret
ja
mov
lcall
test
inc
bound
xchg
int
orb
loope
pushf
jb
lret
dec
mov
lahf
xchg
stc
jge
add
or
out
sbb
sbb
dec
cmpsb
notb
inc
fcmovb
xchg
enter
cmp
add
cli
popl
and
adc
fnsave
add
pop
mov
dec
arpl
xchg
sbb
lock
test
repnz
ds
or
aam
xor
xor
mov
and
xor
and
push
and
ljmp
cmp
loopne
outsb
std
subl
enter
pop
adc
fisubrs
sbb
xchg
sub
loope
sub
jmp
fcoms
push
xchg
mov
test
aas
pop
xchg
fwait
sub
cmp
outsb
loopne
and
inc
dec
enter
outsl
imul
xor
add
dec
subb
jo
incl
adc
or
daa
fld
push
jecxz
icebp
cmp
dec
pop
iret
ret
push
mov
imul
les
push
imul
mov
into
xorb
jmp
pusha
iret
andb
or
inc
cwtl
fnstcw
fbld
stos
dec
mov
shlb
inc
pop
cmpsl
push
and
mov
shrl
dec
xchg
mov
mov
and
rol
fildll
negl
stc
and
dec
dec
lret
cmp
add
push
movsl
adc
rcr
jle
or
push
pop
cmc
xchg
push
jge
add
xlat
push
pusha
imul
adcl
rol
mov
addr16
outsl
cmp
cmp
out
or
call
lock
inc
push
and
mov
dec
sbb
mov
mov
in
pop
dec
sbb
xchg
mov
cltd
sbb
mov
lods
out
push
xchg
clc
cmpb
jl
push
push
dec
ficompl
loopnew
shrb
jnp
js
cli
jae
lcall
jle
rcrl
jg
ret
rclb
jmp
sub
in
or
pop
ficoms
lea
xchg
jb
inc
jae
int3
or
stos
rcrl
sub
cmpl
pop
scas
jge
mov
fimull
xor
fimuls
rcll
out
and
in
push
jae
dec
ljmp
pop
pop
in
lcall
pop
les
std
fldenv
aam
mov
fisubrl
fidivl
outsl
mov
push
sti
jae
push
pusha
push
imul
adc
lret
push
mov
xchg
cmp
insb
int
dec
add
and
push
adc
ds
pop
xor
xor
inc
jp
cmc
mov
subl
jge
sti
mov
mov
add
pop
xlat
xchg
es
xchg
fists
jae
out
jns
mov
dec
mov
or
pop
nop
jae
sbb
and
popf
shll
add
pop
cwtl
aad
out
popa
pop
andb
push
push
aaa
fidivs
mov
lcall
xchg
je
inc
fadds
into
lds
push
jecxz
push
sub
fistpl
push
fistl
xor
sbb
aas
pop
inc
push
xchg
and
add
mov
daa
shll
push
sti
dec
cs
je
sub
shrb
stc
es
pop
dec
mov
mov
fidivrl
test
cltd
mov
inc
cs
lods
adc
sbb
ret
dec
jecxz
out
js
ljmp
hlt
roll
cmp
add
xchg
jecxz
dec
push
xlat
xlat
loop
into
out
arpl
adc
out
push
jns
sbb
repnz
or
mov
sub
mov
call
fcmovnu
or
or
dec
sub
xchg
push
data16
ror
add
orl
arpl
lcall
es
add
push
pop
push
mov
dec
lcall
movsl
push
adc
pop
adcl
shll
imul
push
fimuls
lds
pop
lcall
fisubrl
sub
xchg
cltd
mov
add
lcall
loope
adc
adc
inc
cwtl
outsl
movsb
addr16
mov
movsb
jmp
cld
roll
outsb
and
fs
sbb
mov
mov
add
pop
sub
ficoms
add
add
dec
inc
lds
ljmp
imul
inc
xor
add
sub
mov
mov
and
shll
mov
inc
mov
push
adc
adc
ret
mov
daa
ret
ja
mov
fdivrl
loop
pop
sub
cwtl
roll
cltd
subb
push
jecxz
loopne
rol
mov
pop
cs
mov
leave
push
add
cs
lret
sub
sti
add
or
dec
adc
mov
ret
das
xchg
cmp
or
outsl
add
mov
mov
cmp
outsl
fistps
orl
jg
jbe
mov
cmp
repnz
mov
mov
outsb
dec
xor
xor
dec
jmp
fwait
pushf
lock
iret
lods
aaa
xor
loope
int3
cmp
xchg
mov
sbb
push
repz
and
pushf
jmp
jb
movsb
mov
orb
arpl
shrb
or
push
mov
adc
add
adc
pop
popf
test
pop
insb
orl
sbb
add
outsb
pop
leave
sub
add
inc
ljmp
lret
out
mov
das
leave
cli
sti
mov
mov
lret
jb
je
outsb
cmpsb
fsubrs
mov
push
push
mov
xchg
dec
mov
gs
xchg
dec
and
shlb
ss
push
daa
jmp
add
xchg
fwait
loope
and
cmp
sti
mov
out
inc
dec
aad
lcall
sub
cmc
jp
sbb
inc
jbe
ljmp
test
mov
shlb
shl
jle
js
dec
fsubr
dec
daa
add
jae
cmp
fnstcw
mov
sub
xor
shrb
jmp
pop
js
stos
sub
cmp
mov
addr16
pop
sbb
jmp
repnz
push
cmpsl
add
jnp
lea
mov
dec
sar
adc
frstor
pop
push
pop
je
xor
dec
or
cmp
push
xchg
jno
and
or
or
in
aas
test
mov
lock
test
inc
add
mov
hlt
fidivs
inc
lret
xchg
sbbl
push
adcl
mov
shrb
mov
pop
dec
mov
inc
popf
jb
movsl
jne
xchg
xor
mov
mov
sbb
jmp
cwtl
xchg
test
ds
sbbb
ja
xor
xorl
jle
fwait
mov
mov
andl
jecxz
addr16
fcoms
in
roll
jns
inc
subb
fcmovnbe
push
pushf
xrelease
inc
or
inc
cld
aam
loopne
in
daa
rcr
push
repz
andl
stc
jbe
ds
nop
adc
jno
inc
push
cmp
scas
insb
insl
shr
movb
adc
mov
inc
les
mov
mov
sub
ret
or
pop
xchg
xor
push
cmp
xlat
lea
aas
xchg
add
mov
cmp
jmp
jbe
shrl
shll
repz
jnp
sahf
lret
scas
aam
mov
subb
mov
insb
push
pop
stos
cmc
ffree
aad
add
mov
int3
iret
cmc
movsb
add
xor
out
ja
and
outsb
jns
xchg
pop
adc
inc
dec
js
rcl
sarb
mov
aam
pop
add
pop
sub
ss
lock
mov
sub
ljmp
rolb
js
sbb
jg
test
inc
popa
cs
or
rcrl
sbb
sub
mov
sbb
out
icebp
and
push
stc
cmpsl
sbb
aaa
ljmp
pop
pop
xlat
mov
ret
popa
xchg
jae
lret
xchg
xor
and
or
xor
mov
mov
xor
inc
xlat
cmpsl
dec
stos
sub
insl
xor
lcall
cmp
int3
push
rcl
sahf
fs
repnz
and
pushl
pop
adc
add
push
add
mov
imul
cmpl
and
pop
sub
vcvtps2dq
pop
pushf
cmpsl
fcomi
lea
fsubs
mov
xchg
jnp
pop
jmp
xor
sahf
jmp
mov
cmc
sub
sbb
nop
adc
dec
clc
push
jecxz
jae
inc
repnz
mov
out
push
push
cli
faddp
add
or
xor
mov
push
pop
jbe
jp
test
xlat
loop
dec
cmp
push
and
lock
push
adc
push
push
xchg
inc
pop
sbb
mov
repz
or
inc
inc
adc
add
movsb
daa
mov
mov
lahf
jge
add
xchg
pop
jne
cwtl
mov
sbb
dec
jg
cmp
int3
sti
xchg
lods
in
jp
lods
or
xchg
fisubl
jae
cltd
movsb
aaa
and
les
push
movsl
mov
dec
inc
and
and
cwtl
outsb
pop
mov
xchg
dec
add
fs
popa
or
mov
mov
mov
dec
sub
cltd
mov
and
inc
mov
sti
inc
shlb
pop
lahf
sahf
or
dec
push
xor
and
mov
jae
xor
mov
inc
stos
inc
xor
clc
mov
je
insl
adc
out
pusha
xchg
adc
dec
mov
lret
jno
and
push
and
imul
sub
xor
pusha
popf
add
inc
inc
shll
cwtl
mov
mov
leave
repnz
fdivs
inc
inc
and
lods
stos
cmp
ret
mov
mov
repnz
xchg
pusha
inc
xchg
jae
fs
inc
out
mov
fs
inc
or
outsb
add
pushf
push
lea
out
loopne
mov
jecxz
jo
ror
sbb
mov
ret
or
sbb
mov
mov
mov
dec
inc
das
out
scas
mov
dec
dec
int3
jl
fistpll
jp
pop
xchg
in
inc
xor
repnz
cmpb
sub
pop
mov
lahf
cmc
xchg
insb
jg
sbb
mov
daa
cmp
repnz
pop
lea
sti
inc
mov
loope
stos
pop
loop
out
pop
bound
cltd
fildl
imul
jnp
out
ds
mov
push
mov
xor
je
xchg
stos
or
out
cmp
repz
add
je
mov
jp
or
add
push
neg
adc
jae
fistpl
fdivl
adc
clc
push
or
sti
cmpsb
cmp
mov
idivb
adc
outsb
test
inc
pop
and
je
cmp
andb
push
cmp
dec
or
add
push
inc
jo
xchg
dec
shlb
inc
xchg
xchg
iret
or
js
mov
cwtl
ja
cwtl
fsts
jmp
xchg
push
and
insl
test
xor
les
inc
fs
das
cmp
shll
add
or
xchg
stc
mov
jge
stos
fs
enter
jns
addr16
out
push
pop
push
jg
in
lea
mov
dec
mov
pushl
es
je
adc
out
movsl
adc
sbb
dec
sbb
mul
outsb
repnz
mov
lods
jno
in
loop
mov
cwtd
sar
fisubl
test
mov
adc
adc
push
setne
pop
xor
sub
sbb
add
jl
sub
sahf
int3
aad
repnz
sub
push
lahf
fildl
mov
mov
adc
repz
jmp
sbb
stos
sete
mov
jbe
dec
cmpsb
dec
addr16
inc
arpl
jne
inc
sub
in
cli
push
lcall
iret
xlat
add
dec
fsubl
xor
lds
mov
adc
sub
adc
aas
rolb
lret
lcall
add
aad
mov
rcrl
aaa
push
cmp
inc
jae
bound
add
loopne
fcmovnb
adc
outsb
dec
cmp
jl
jge
dec
and
ret
mov
push
jg
push
push
dec
shl
leave
sub
inc
lods
xor
sub
ds
mov
add
fisubl
and
jmp
xchg
sbb
cmc
dec
inc
xchg
psubb
mov
inc
pop
test
or
jno
std
dec
jno
adc
loop
dec
cmpsl
or
or
mov
lahf
or
adc
iret
call
dec
test
pop
jge
sbb
out
jae
and
and
mov
jno
aaa
jp
leave
nop
lea
aas
jae
inc
xchg
sbb
cli
sub
jge
pop
aaa
lcall
mov
iret
jge
aad
repz
out
cmp
dec
mov
lahf
roll
cltd
inc
out
loop
inc
mov
jnp
dec
fxch
or
je
add
lds
fidivl
enter
fdivl
mov
jnp
movsb
cmp
adc
or
sbb
mov
es
bound
push
inc
mov
bound
cmp
mov
aam
sub
fisubs
mov
lahf
add
dec
movsb
test
cli
lea
divl
jecxz
lret
pop
ret
mov
lret
rsm
lret
sub
jle
jmp
into
mov
jo
imul
mov
inc
popa
rorl
pusha
icebp
jo
je
xor
sub
sar
mov
sbb
xor
cmp
push
repz
or
jnp
fs
pop
leave
dec
orb
popf
ret
nop
and
arpl
xor
jo
imul
push
imul
inc
in
add
inc
stc
pop
call
inc
popa
add
push
jno
dec
iret
mov
push
mov
ret
xchg
testl
inc
mov
jb
xor
loop
cs
ret
les
dec
or
cmp
adc
xchg
add
fadds
insl
scas
stos
dec
sbb
pushaw
das
push
add
sub
cmp
xchg
sub
movsb
and
mov
or
push
pop
scas
dec
outsb
xchg
pop
mov
mov
jp
cmp
xchg
popf
aas
cmp
and
fsts
sbb
mov
cltd
or
loope
sbb
fldl
jo
ret
scas
xor
sub
jecxz
pushf
outsw
and
cmp
sbb
xchg
sub
xchg
lds
pop
sahf
jnp
imul
repnz
mov
add
js
shlb
dec
imul
adc
jo
subl
push
and
mov
or
aas
pop
decl
test
in
adc
push
adc
rclb
pop
shll
in
fcompl
mov
cmp
in
iret
cmp
cmp
jg
sti
mulb
xchg
mov
loope
xor
push
or
add
out
and
inc
cli
cltd
pop
les
js
lea
jecxz
lahf
scas
insl
insb
sbb
sbb
and
mov
xchg
cmpsb
shrl
mov
fcmovnb
xorb
dec
in
add
fmull
and
fld
xor
push
xor
pop
cmp
pop
sbb
sbb
stos
xorb
test
sub
fisubs
push
xor
inc
and
sbb
push
xchg
arpl
jp
fdivr
pop
adc
das
outsl
pop
rolb
jl
ja
mov
xchg
sub
dec
pop
dec
add
adc
cwtl
push
jecxz
ss
jnp
cmc
push
das
jae
out
lret
into
mov
mov
or
fistpl
es
push
imul
mov
andb
fstps
sub
mov
repz
jae
mov
lcall
mov
or
and
sub
push
adc
hlt
fdivrl
fnstenv
stc
lods
pop
andb
dec
sbb
clc
mov
insl
xor
cli
rorl
fwait
arpl
mov
fimuls
dec
lock
dec
push
or
xor
inc
jmp
scas
cwtl
imul
push
imul
fcompl
add
mov
movsb
fs
cltd
sbb
orl
fs
xor
xchg
mov
push
lret
add
pop
fcmove
test
push
cmp
add
sbb
repnz
jp
movsl
lahf
cltd
ret
sbb
pop
aas
sub
sub
mov
js
xchg
adc
bound
and
cmc
scas
pop
add
mov
insb
and
push
xlat
rcll
gs
in
out
dec
push
mov
add
adc
pop
mov
popf
call
cwtl
addr16
movsl
cltd
lret
pop
xor
xchg
in
mov
cld
testb
call
test
push
push
fdivl
aas
stc
je
push
in
xchg
jb
mov
sbb
xor
mull
cwtl
jmp
adc
ret
push
add
and
mov
pop
jb
fidivrl
loope
es
popf
xor
ljmp
mov
or
jns
xor
jns
mov
stc
push
mov
movsb
or
jae
clc
push
cwtl
test
xchg
gs
pop
xlat
das
add
aas
cmp
shlb
jae
jbe
jb
mov
nop
clc
iret
inc
xor
dec
nop
imul
int3
xlat
xor
and
jnp
mov
add
mov
push
std
push
lret
ljmp
outsb
std
mov
out
fs
pop
inc
clc
jecxz
mov
outsb
movntps
out
enter
in
notb
jnp
pop
cmp
dec
idivl
add
pusha
test
mov
fld
jmp
in
cld
loope
inc
mov
sub
bnd
int
mov
arpl
xchg
add
xchg
pop
xor
push
cmp
in
in
fcoml
lock
outsl
cmp
leave
push
orb
int
outsl
movsl
mov
lret
sbb
and
adc
adc
ds
sbb
in
sahf
in
lcall
add
test
xor
addr16
cltd
xlat
out
adc
js
add
sbb
out
das
inc
das
outsl
imul
cmp
es
gs
adc
repnz
sub
push
imul
sub
adc
mov
ja
mov
jns
mov
ljmp
pop
enter
xchg
pusha
push
sub
mov
jo
into
xor
jg
pop
mov
in
sti
daa
das
scas
ljmp
dec
push
dec
sbb
ss
and
push
cmp
xor
js
fimull
mov
lods
push
cmpsb
push
rorw
mov
lds
xchg
inc
sbb
scas
adc
cmp
xchg
sar
daa
popa
mov
cmpsb
add
movsb
aam
ret
sti
loopne
or
cld
dec
cli
fbld
or
mov
lahf
aas
mov
scas
xor
mov
jge
or
mov
shrl
sub
mov
cmp
fcmovnu
mov
test
aas
ja
shrb
aam
into
pop
dec
fnsave
adc
cmc
add
lods
fcoml
inc
nop
push
adc
clc
xchg
fiaddl
outsl
jo
push
mov
pop
jp
mov
lock
push
mov
shlb
stos
mov
mov
mov
sub
cmp
jg
xchg
push
jb
adc
shll
xchg
push
and
fstpl
test
mov
out
lods
shr
bound
cmp
hlt
stos
add
outsb
nop
and
dec
hlt
cmc
or
jl
lcall
xchg
insl
les
fisttpl
call
sub
lock
push
dec
inc
dec
repz
incb
into
cltd
out
jae
jmp
pop
jae
leave
mov
pop
lahf
inc
inc
jg
mov
push
push
scas
inc
dec
mov
push
adc
pop
cmp
orb
lods
or
mov
aam
adc
push
fcomps
xchg
data16
xchg
mov
add
insb
and
sub
test
mov
and
ffreep
repnz
mov
inc
jbe
cmp
lods
outsb
popf
mov
insl
push
outsl
lea
stos
outsl
lret
mov
jae
divl
cmc
push
data16
and
fwait
sarb
jle
mov
cmp
repnz
aad
jae
and
xor
das
and
fists
push
sbb
test
mov
mov
sub
jl
jae
cmp
into
pop
je
mov
int3
iret
lcall
cmp
aas
icebp
jecxz
cmp
lds
add
aam
xchg
shll
jmp
jmp
mov
add
and
mov
imul
cltd
pop
mov
xchg
cmp
push
mov
lret
and
nop
push
shrb
aaa
test
xchg
xchg
sub
cmpsb
pusha
mov
imul
stc
ljmp
pusha
lret
cmpb
test
out
inc
paddb
push
leave
insl
leave
repz
movsl
xchg
inc
cmp
sti
int
mov
imul
sbb
xchg
clc
out
repnz
and
cmp
outsl
mull
mov
je
stos
xchg
sarb
mov
outsb
dec
push
pop
fstp
repz
scas
stc
scas
shrb
or
fnsetpm(287
scas
sbb
mov
loope
add
cltd
daa
mov
cmp
aaa
out
add
cmc
sbb
or
imul
dec
sahf
or
mov
xor
test
fstpt
jb
add
dec
les
mov
das
js
mov
sarb
push
inc
int
jb
xchg
mov
in
fwait
es
sub
rclb
js
cmp
call
decl
jno
jno
push
es
ss
xchg
lcall
push
imul
arpl
js
cmp
adc
mov
sub
sub
xchg
push
push
int
xorl
and
stc
lods
cltd
cld
dec
and
cmp
and
push
inc
xchg
ljmp
mov
les
cmp
sbb
mov
and
mov
out
daa
cld
fldl
into
mov
cld
push
int
out
scas
mov
repnz
in
int3
mov
fimull
int
in
push
push
cmp
and
push
push
lea
lret
pop
test
fldl
pop
jns
sbb
outsb
movsl
xchg
popa
scas
jnp
cld
movsb
sub
and
test
mov
mov
push
outsl
sbb
call
cmpb
inc
test
mov
or
jae
pop
cmp
xchg
inc
insl
stos
xor
je
adc
pop
jne
arpl
stos
orb
ljmp
xchg
out
sbb
cld
push
stos
iret
stc
in
xor
sub
iret
jp
push
fcoml
vphadduwd
arpl
cmp
mov
xor
cmp
add
movsb
jge
stos
jl
xor
int
mov
repz
adc
in
cmpsb
add
shlb
loope
push
cmpsl
or
inc
and
mov
xor
xchg
cmp
cmp
scas
clc
fiadds
out
mov
xchg
dec
ret
shll
jle
shrl
stc
xchg
aam
push
jno
incb
mov
lret
or
inc
dec
pop
es
es
shr
cmp
xor
fwait
cmc
sbb
pop
clc
and
fs
shl
stos
out
push
lahf
fistpll
mov
cmp
rolb
xor
rcrl
cld
sahf
hlt
arpl
jmp
daa
mov
pop
inc
lret
loop
loopne
sub
lods
out
sbb
and
sarb
push
mov
aam
or
mov
pusha
or
mov
icebp
in
ljmp
inc
mov
cmp
inc
mov
fldl
call
mov
push
stos
and
mov
leave
sbb
xor
fists
int
dec
push
ret
mov
mov
jno
jl
xchg
jl
imul
orl
loope
rcrb
add
xchg
rclb
setle
inc
pop
add
adc
pusha
mov
cmpb
xor
mov
add
mov
and
pop
xor
in
ds
inc
sarb
in
push
aam
inc
arpl
outsb
fisubl
push
popf
ljmp
inc
insb
pop
sbb
nop
and
icebp
lcall
dec
cmp
cmpl
cmp
cmp
std
push
dec
pop
mov
aad
out
mov
mov
mov
sti
cmp
mov
stc
adc
sarb
add
bound
and
jge
or
test
jb
cmpsl
pop
iret
aam
ss
inc
mov
shrb
call
mov
jne
mov
lods
test
or
xor
icebp
sbb
pop
mov
fcoml
pop
xor
dec
rorl
bound
jnp
in
and
dec
dec
out
scas
sahf
mov
cmp
dec
mov
jne
push
test
lcall
pop
jne
pop
mov
mov
or
mov
inc
scas
mov
xchg
xorb
and
mov
mov
aad
sub
imul
addr16
fstpl
daa
mov
call
ds
cmpsl
push
fs
sub
cmp
pop
int
and
mov
cmp
jmp
aas
inc
and
inc
mov
cmp
pop
rcll
dec
cli
or
pop
fldenv
rcrl
fisttpll
bound
mov
sbb
roll
dec
and
xchg
ror
loop
clc
jae
mov
or
enter
movsl
fisttps
or
cwtl
dec
cwtl
jmp
ds
loope
and
cmp
fbld
fwait
push
sbb
cld
lahf
cmp
test
push
pop
out
test
push
rclb
mov
push
jle
hlt
dec
adc
mov
sbb
and
popa
iret
push
shll
outsb
push
ret
mov
dec
mov
ficompl
int3
push
jle
mov
rcl
rep
ljmp
jp
dec
outsb
fistpl
pminub
mov
insb
enter
test
mov
insb
flds
dec
adc
es
jle
mov
dec
sbb
pop
push
fimuls
scas
jbe
mov
mov
cltd
push
test
incb
popf
jge
dec
cld
mov
sahf
jnp
sarb
mov
pop
aaa
fnstenv
jecxz
or
stc
inc
inc
movsl
sub
push
mov
in
fldl
lcall
lds
sub
lret
gs
xchg
xor
roll
outsl
sub
lea
cmp
dec
je
loope
hlt
adc
mov
inc
int3
dec
jl
scas
arpl
mov
repz
adc
inc
fs
daa
test
xor
sub
es
sub
outsb
fimuls
sbb
xor
or
mul
inc
add
sbb
jae
sbb
jae
mov
push
dec
push
inc
jb
hlt
hlt
shrb
movsb
jns
jno
fs
data16
pop
cmp
xchg
sbb
adcl
jbe
cmc
xor
pop
mov
stos
lret
or
xor
in
arpl
jne
inc
sbb
inc
and
inc
push
add
repz
pop
jl
mov
jmp
xchg
add
lcall
sbb
adc
out
push
push
pop
sub
jle
ljmp
mov
movsl
ret
inc
sub
sub
inc
rclb
and
and
push
and
mov
inc
imul
adc
add
in
adc
push
pop
in
mov
cltd
inc
mov
or
cmpsb
mov
jge
cltd
loopne
shrl
xor
inc
xchg
pop
insb
mov
mov
jge
test
sbb
scas
lock
neg
jg
int
xor
or
push
les
mov
sub
jnp
and
fstpt
pushw
mov
cmp
fptan
sub
icebp
or
xor
sbb
cmp
fdivr
mov
xor
push
sbb
jmp
ljmp
fincstp
sbb
jns
scas
flds
out
inc
test
rorl
fnstenv
in
cmp
cwtl
jbe
add
imul
daa
push
mov
fistps
ret
sti
cwtl
dec
in
incb
mov
mov
int3
sbb
dec
rcrl
adc
jmp
fwait
es
in
sarl
dec
cli
push
mov
sarb
filds
pop
or
mov
sub
adcl
push
inc
inc
scas
int
mov
rclb
mov
inc
jmp
popa
dec
jne
inc
push
jg
les
mov
les
cmpsb
filds
or
jle
lret
movb
int3
mov
loop
pop
inc
jp
mov
mov
cmp
and
mov
jns
cmc
push
imul
add
imul
ds
loope
push
jl
mov
out
cmpb
out
or
mov
call
adc
xchg
jno
jmp
xchg
inc
mov
xor
pusha
and
aaa
imul
sbb
not
ret
mov
sti
int
xor
pop
ljmp
mov
gs
jl
sbb
sbb
cmpsb
int3
sub
adc
andl
adc
scas
xchg
cld
xchg
orl
mov
fisubl
push
es
sbb
inc
ss
pop
and
aad
in
stc
ficoms
clc
stc
cmp
cwtl
pop
stos
je
shrl
mov
mov
or
dec
and
and
push
and
xchg
scas
stc
jbe
mov
jmp
mov
dec
jo
addb
add
notb
dec
lods
pavgb
repnz
jne
test
scas
inc
xor
inc
mov
adc
add
dec
call
icebp
mov
jo
dec
sub
repz
cld
stos
je
cwtl
jp
in
cmc
fwait
sbb
xchg
rcrb
push
dec
mov
cmpsb
mov
mov
xor
stc
fisttpl
out
inc
xchg
ss
faddl
push
dec
cmc
data16
out
roll
and
in
clc
aas
add
jmp
shll
leave
mov
pop
or
mov
nop
inc
dec
cld
jecxz
cmp
jge
out
xor
aas
lea
dec
xchg
or
fiadds
sbb
test
lods
jl
push
add
dec
loopne
mov
mov
lock
imul
ror
sub
fldcw
lods
xchg
jecxz
scas
mov
and
repz
sub
aad
lcall
xor
dec
sbb
clc
and
sub
mov
fmull
rol
divl
jecxz
jno
add
and
xchg
mov
fnsave
mov
adc
push
xor
idivb
push
sti
test
xor
js
repnz
mov
jo
sbb
pop
js
lea
pop
insb
movsb
sub
shl
stos
lret
sub
lret
sub
adc
inc
cmp
add
testb
adc
adc
mov
add
mov
fldl
rolb
dec
lret
dec
scas
cmp
push
xor
aad
mov
mov
sbb
loopne
add
shll
dec
dec
adc
lds
xchg
ss
mov
pop
mov
xchg
lock
pop
cli
ds
lods
xchg
mov
pop
out
mov
shl
pop
int
arpl
scas
dec
subl
rcl
dec
lret
adcl
cli
sahf
sub
cmc
movsb
rolb
sbb
push
xorb
ret
dec
pop
mov
mov
das
dec
call
rcll
fstps
cltd
xchg
cli
das
lret
ja
ret
mov
ret
int3
mov
mov
jecxz
jnp
push
add
jmp
push
jge
inc
or
and
test
shl
mov
jle
gs
shlb
cmpsl
stos
movsb
xchg
dec
mov
inc
inc
popf
lahf
xor
sub
cli
repz
pop
pop
ljmp
ret
dec
leave
inc
shll
mull
pop
aam
call
jecxz
icebp
mov
in
cmpsl
es
lods
in
or
mov
mov
xchg
sub
push
jnp
out
jp
dec
pop
xchg
push
daa
lret
mov
movsl
sbb
sbb
adcl
cmpsb
sti
int
mov
xchg
add
sbb
ret
insl
out
aam
xor
out
cld
or
inc
lods
rol
shrl
sbb
in
aaa
sub
jae
in
daa
fdivrs
popf
in
sub
or
jl
out
cmp
aaa
stos
mov
insl
pop
inc
mov
andl
pop
push
popf
mov
loope,pt
add
mov
sbb
pop
push
dec
ror
adc
int3
sahf
or
popf
jns
pushf
xchg
mov
nop
and
subb
sbb
stc
andb
push
push
mov
pop
ret
sbb
popf
push
lea
lret
pcmpeqw
mov
outsl
pop
mov
fisttpll
stc
cmp
stos
lea
mov
cwtl
and
xor
push
fcomps
mov
in
lahf
xchg
cmp
push
dec
push
add
outsb
or
inc
pop
jmp
pushf
repz
jl
xor
sub
shl
adc
aad
movsl
pop
mov
ja
sub
and
pop
movsb
cmp
out
sub
negl
ret
mov
jecxz
cmp
sub
add
jecxz
mov
out
jg
mov
xchg
pop
adc
sub
pusha
jmp
mov
repz
xlat
iret
push
fmulp
rclb
sbb
sbb
out
in
cld
add
clc
adc
cmp
xor
je
cld
mov
jns
ds
stos
xlat
cmp
xor
ror
fs
mov
es
inc
jle
jo
addr16
and
lods
rcr
inc
xchg
mov
mov
sbb
out
dec
nop
adc
in
push
pusha
insl
sbb
cmp
inc
adcb
lahf
mov
dec
cmp
inc
or
xlat
jmp
out
aad
sub
bound
xchg
xor
push
in
cmp
inc
sbb
ret
mov
push
fdivl
stos
pop
scas
mov
push
add
jecxz
insb
push
push
bnd
xchg
pop
jbe
mov
push
lods
je
sub
and
mov
int3
pop
fmuls
pushl
ljmp
lods
mov
das
std
or
leave
cltd
cmpsl
lods
mov
mov
lahf
add
fisubrl
fwait
and
outsb
xchg
xchg
adc
xlat
xlat
mov
inc
sbb
mov
pushf
dec
ja
rorl
inc
push
sbb
sub
outsl
xor
dec
ja
int3
push
mov
jg
or
xchg
cmpsb
mov
bound
shll
sub
outsl
cmc
mov
xchg
lock
test
sar
and
mov
push
xorl
push
pop
iret
push
or
cs
into
aam
popa
outsl
dec
jo
add
mov
cmp
les
and
and
iret
lcall
je
out
negb
int
mov
adc
les
sahf
xor
ja
scas
pop
sahf
push
and
xor
mov
mov
mov
jnp
dec
xor
push
jl
mov
faddl
lock
ljmp
xor
mov
mov
mov
lret
out
sbb
loop
outsl
jecxz
push
pop
push
sub
add
mov
lea
xchg
xor
xchg
ficoml
sub
jno
or
xchg
out
in
adc
jnp
xor
lds
inc
into
negl
cmp
xchg
or
daa
cmp
jbe
aad
aad
mov
mov
shlb
pop
cmp
or
mov
mov
sub
sub
dec
ljmp
pop
pop
aas
pop
pop
mov
hlt
push
xchg
fiaddl
pop
adc
arpl
cmpsl
gs
icebp
pusha
es
cli
arpl
inc
cmpsb
jb
push
and
mov
fists
or
pusha
inc
lods
dec
mov
xchg
imul
and
clc
and
push
sti
rcrl
sbb
hlt
movsb
or
imul
ret
sbb
daa
mov
daa
pop
fwait
and
mov
inc
push
out
pop
cld
jmp
xchg
inc
dec
mov
and
mov
nop
cs
and
es
xor
jmp
jno
cltd
push
and
ja
or
dec
jne
xchg
paddusw
xchg
ljmp
inc
xor
incb
fwait
cmc
dec
aas
jg
push
mov
bound
sub
loop
xchg
sbb
int
dec
mov
push
push
aam
mov
and
out
xchg
jle
imull
push
fisttpl
into
repz
mov
in
sbb
arpl
inc
cwtl
xor
lds
hlt
js
adc
int3
out
hlt
sarb
bound
in
imul
xlat
dec
loope
dec
mov
sbb
mov
sbb
and
or
mov
movsl
push
push
jbe
adc
or
into
mov
lcall
push
xor
cmp
iret
xchg
and
pop
test
mov
sub
pop
xor
stc
filds
data16
or
popf
mov
inc
mov
dec
sahf
mov
sbb
sbb
mov
push
call
mov
pop
cmpsb
inc
mov
dec
out
popf
adc
sti
pop
cmp
adc
lea
arpl
out
mov
arpl
mov
lret
push
mov
sti
xorb
cmp
jge
xchg
lahf
dec
adc
stc
jno
fistps
push
mov
int3
add
mov
addr16
and
mov
ljmp
arpl
pop
mov
icebp
adcb
bound
and
add
psadbw
push
lahf
les
fwait
ds
out
mov
fisubrl
inc
out
add
aad
test
mov
scas
sub
mov
and
xchg
adc
outsb
das
push
mov
jbe
jnp
mov
inc
jnp
fistps
scas
sahf
and
xchg
push
ja
cmp
xchg
daa
jle
adc
inc
outsb
les
cwtl
dec
call
daa
nop
dec
mov
fcompl
mov
js
shlb
or
sbb
cmp
pop
cmp
mov
sub
or
xor
test
inc
mov
shr
push
das
out
add
aaa
dec
mov
cmp
loopne
in
clc
xor
mov
inc
pop
and
adc
ret
dec
ds
ds
mov
jge
fcmovnbe
repz
and
pushl
or
dec
pop
aam
push
xor
mov
push
jbe
dec
cmp
repz
daa
cmpsl
ret
jb
addl
dec
jmp
xchg
dec
dec
into
dec
sub
cmpl
push
fstpt
mulb
idivb
mov
cmpb
out
ret
or
aam
sahf
sbb
push
test
ds
mov
push
adc
pushf
lods
sub
mov
scas
clc
fistps
movsl
push
inc
stos
rcrb
mov
arpl
insl
dec
ds
stos
pop
push
sarb
repz
jmp
and
lret
jae
outsl
pop
lods
out
dec
mov
mov
jo
in
clc
pop
subb
mov
es
jae
add
repnz
mov
shll
data16
mov
xor
movsl
jb
dec
mov
adc
lcall
pushf
sahf
pushf
sub
xchg
adcl
xchg
ds
adc
into
addb
or
dec
std
or
fxch
movsb
push
les
sbb
jae
fsts
mov
dec
out
aaa
inc
dec
xor
jge
xchg
mov
fmull
pop
fcompl
adc
stc
jnp
cmp
adc
jecxz
sbb
orl
orl
fbld
jne
enter
sub
mov
mov
push
arpl
popa
popf
test
or
enter
pop
ret
dec
shr
enterw
xchg
jns,pt
popf
sub
dec
fs
stos
mov
or
adc
xchg
xchg
aaa
mov
add
lea
movl
lods
orb
or
loopne
jle
aad
leave
ss
sahf
sub
cld
mov
in
fisubrs
sbb
push
mov
jmp
mov
fninit
adc
dec
hlt
xlat
lock
dec
out
sbb
push
push
ja
aad
xor
nop
out
sbb
mov
aas
rcll
jb
mov
int3
dec
test
dec
dec
adc
cmc
inc
stos
in
sub
push
sub
in
cmc
jbe
add
pop
inc
mov
ret
das
daa
xor
stos
inc
imul
xchg
cld
xchg
je
divb
fsubrl
into
jp
mov
nop
and
cmp
icebp
je
and
test
arpl
in
sbb
mov
pop
loopne
cwtl
aad
testl
shrb
test
ret
mov
dec
xchg
cmpsl
imul
mov
fdivrp
xor
mov
in
pop
pushf
mov
lahf
mov
push
sub
jle
rcr
stc
arpl
or
or
rol
push
ds
andl
sub
addl
mov
pop
loop
mov
repz
loopne
pop
inc
je
jb
cmc
scas
sti
mov
jmp
stos
jbe
sbb
cltd
mov
xlat
nop
mov
add
sbb
pushl
mulb
dec
jg
mov
push
daa
lcall
clc
lret
sahf
push
into
mov
xchg
mov
and
dec
dec
push
sahf
sti
fdivrs
or
shr
sub
sub
push
push
pop
ficomps
rcll
repnz
arpl
inc
inc
stos
repnz
lcall
subl
sbb
cmp
push
adc
add
ss
jne
add
mov
dec
daa
mov
push
sbb
xchg
pop
and
push
das
or
addr16
jnp
iret
xchg
adc
ret
push
lock
and
iret
jbe
outsl
xor
pop
aam
xor
in
pusha
jae
jg
shlb
out
or
cmp
jo
jne
jmp
push
jo
icebp
pop
adc
inc
lock
push
sbb
dec
aas
jae
leave
movsl
pushf
adc
jae
add
push
jns
xchg
push
mov
mov
xor
mov
xchg
and
jb
adc
aas
aam
sub
sub
dec
cmp
insb
xchg
or
add
and
mov
test
hlt
pop
mov
jb
out
dec
shll
scas
mov
and
push
jns
sbb
xchg
aas
sbb
ret
jo
dec
sbb
sbb
inc
add
or
imul
outsb
leave
lret
call
jle
mov
pop
cltd
adc
in
jecxz
or
out
sbb
mov
adc
stos
aas
int3
test
mull
and
ss
jbe
cs
jns
xchg
cmp
lds
sbb
fbld
fsubs
stos
mov
cmp
jns
sub
lret
pop
xor
je
rcrl
cltd
hlt
arpl
lock
mov
fisttps
int
jle
or
pop
mov
push
push
imul
loopne
mov
add
add
jl
sub
adc
jno
rcl
lea
loope
lea
or
jmp
pop
or
jb
shl
imul
dec
and
sub
rorl
aam
js
les
in
add
mov
and
outsb
xor
and
push
sti
iret
shll
stos
xor
int
imul
popf
test
arpl
mov
sbb
stos
shlb
outsb
sbb
sahf
mov
dec
sub
xor
in
dec
mov
arpl
xchg
mov
das
stos
nop
xor
movsl
mov
pusha
inc
imul
sahf
fidivs
dec
loop
pop
hlt
jns
lahf
jp
adc
mov
test
or
mov
pop
loope
and
xor
jge
ja
loop
push
xchg
sub
fldl
gs
idiv
daa
lock
pop
out
lods
loop
in
in
jg
push
out
aaa
sub
ja
outsl
arpl
jnp
cld
test
repz
dec
aam
imul
inc
or
jl
push
mov
pop
cmp
imul
cmpsl
jno
or
fwait
mov
mov
mov
int3
push
inc
sbb
rcll
cs
addr16
ret
pop
mov
jns
pop
push
jmp
lcall
movsb
lds
jg
jnp
test
push
stos
mov
mov
jl
mov
xchg
add
mov
adc
mov
stos
dec
mov
mov
xor
push
or
adc
dec
pusha
lret
es
negl
lahf
test
xor
popf
mov
out
add
out
repnz
dec
and
repz
xchg
jns
mov
test
std
insb
push
iret
pop
xorb
aas
lahf
lret
inc
movb
inc
idivl
push
stos
jno
pop
mov
sahf
sbb
or
add
fstl
in
mov
pop
jb
xchg
xchg
sub
add
and
inc
test
loop
dec
lods
arpl
in
cltd
jp
xchg
idivb
xchg
movsb
dec
add
in
bound
fstps
xchg
xchg
adc
jno
mov
loop
daa
inc
daa
in
sub
in
dec
push
mov
aad
mov
push
add
lahf
rcll
jno
aam
rorb
in
sti
cmc
scas
das
adc
jne
ds
clc
mov
fildl
mov
out
pop
and
mov
testb
xor
jo
jo
inc
aam
jmp
outsb
sub
das
mov
lcall
xlat
mov
shlb
lods
in
mov
adc
jecxz
int
iret
xor
sub
mov
ljmp
pop
or
enter
popf
aaa
icebp
insl
xor
gs
js
out
daa
dec
pop
and
xor
cmp
shrb
shrl
dec
or
pop
inc
mov
push
imul
mov
call
or
arpl
fxch
mov
in
dec
lret
inc
mov
sub
negb
pop
pop
cmp
jae
pop
adc
aaa
jo
mov
rolb
push
popf
mov
arpl
pop
xchg
push
cld
mov
inc
cwtl
arpl
mov
cmpsl
dec
fs
xchg
or
or
cmpsl
and
mov
mov
xchg
push
add
lret
rcpps
jne
or
scas
inc
cmp
jle
or
sti
jl
push
sti
xor
xchg
jmp
repz
arpl
xchg
loope
cmp
out
jl
push
push
adc
push
push
adc
fwait
sti
pop
test
dec
and
mov
mov
faddl
cmp
or
aaa
std
stos
aad
les
or
cmp
stos
movsb
fwait
insb
adc
jns
fistpll
xor
sbb
out
icebp
add
fsts
loop
lds
repnz
cmp
sti
in
pusha
mov
mov
push
inc
and
push
out
scas
mov
lahf
pop
or
inc
icebp
add
enter
fwait
inc
xor
cmpsb
mov
dec
aam
mov
mov
cltd
push
repz
bound
hlt
mov
ret
lock
adc
jne
adcl
ficomps
sbb
inc
xchg
sti
adc
push
outsl
sub
or
mov
cmpsl
jp
test
xchg
lods
es
rcr
push
mov
mov
mov
jbe,pn
fsubrs
divl
mov
in
push
jp
rclb
pop
out
pushf
pop
mov
mov
push
les
ja
ret
or
cmpsb
loop
xchg
cld
ljmp
inc
lret
enter
cmp
int3
push
rcl
mov
pop
jno
aad
and
out
ret
ss
adc
pop
sarl
cld
shll
outsl
mov
imul
enter
dec
xchg
add
mov
sub
sti
and
add
inc
js
jmp
test
xchg
xchg
push
loopne
cmp
addr16
mov
push
and
sti
push
aam
dec
mov
mov
ds
in
sub
out
xchg
mov
mov
or
sbbb
mov
repz
adc
outsb
lock
xor
pop
mov
mov
jne
dec
add
lods
orl
mov
and
jnp
mov
test
or
iret
jnp
xorl
popf
push
leave
nop
imul
jl
cmpsl
clc
xchg
outsl
mov
push
scas
rclb
push
icebp
or
es
leave
inc
adc
inc
or
cmp
pop
push
test
jp
mov
repz
sub
inc
xchg
or
inc
inc
and
sub
mov
outsb
push
out
xor
push
ja
push
mov
sbb
lcall
inc
jne
pop
mov
js
jecxz
adc
mov
outsb
fdivrs
jbe
jmp
mov
lret
cld
jl
ror
lcallw
mov
pop
cmp
fcmovne
fsub
loop
jl
mov
mov
shlb
les
shl
in
inc
int3
sbb
lahf
pop
adc
mov
mov
adc
pop
and
ja
sub
or
jae
mov
adc
addb
leave
mov
xor
andl
shlb
div
dec
push
add
sbb
imul
movsb
mov
sub
inc
sbb
adc
pop
push
push
jbe
fiaddl
in
dec
fnstenv
push
jns
test
lock
mov
inc
cltd
es
inc
xchg
int
jl
fsts
or
call
and
out
mov
jne
lds
in
push
or
push
xchg
int
stos
sub
sti
roll
jno
sbb
cltd
ds
mov
jo
inc
fists
faddl
test
mov
roll
jnp
or
inc
pop
fimuls
ret
lcall
xlat
adc
pop
or
repz
ja
or
rcrl
lods
push
je
ja
push
jecxz
adc
mov
les
add
rcrl
in
addr16
out
pop
mov
imul
cmc
jl
jmp
or
mov
cmp
mov
or
leave
sbb
aam
inc
fs
mov
push
mov
fdivrl
and
or
loopne
cmp
test
out
addr16
dec
sub
push
cmpb
mov
pop
mov
push
repnz
mov
cmpl
clc
ljmp
xchg
cli
leave
daa
test
mov
xor
ljmp
dec
iret
add
sub
inc
lods
pushf
addr16
bound
sub
push
xchg
mov
stos
mov
cwtl
stos
aas
aaa
lret
popf
js
inc
ljmp
cmp
mov
outsl
rorb
aam
ret
add
xlat
mov
ret
out
sarl
mov
inc
inc
push
or
push
push
xor
clc
mov
cld
inc
jmp
dec
push
add
lock
mov
stc
inc
xor
loope
jnp
int3
and
xchg
repz
rorb
es
stos
inc
mov
cmc
ja
movsb
cmp
sbb
movsl
mov
pop
in
lret
and
mov
dec
mov
loopne
mov
insl
push
mov
movsl
stos
jge
cmpsb
inc
mov
pop
or
xchg
mov
nop
movsb
inc
sahf
add
or
repnz
push
shrl
inc
mull
int3
mov
inc
cmpsb
or
adc
fistps
mov
or
bound
subb
ss
xchg
cmp
hlt
jl
push
cmpsb
pop
rorl
dec
sbb
out
pushf
jnp
rcl
stos
movsl
sahf
mov
push
fdiv
jo
sbb
xor
mov
jmp
dec
mov
xchg
movb
dec
mov
outsb
mov
ret
adc
inc
movsb
sbb
push
out
mov
xor
pop
test
adc
out
bound
mov
push
or
pusha
mov
aad
nop
mov
xor
mov
inc
mov
jg
mov
add
pop
orb
sub
mov
stc
fwait
dec
cmp
cmp
xor
loop
pop
sub
lcall
push
sbb
ror
inc
fsubrl
test
jge
xchg
xor
cmpb
shrl
into
scas
in
cmp
push
sbb
cmp
bound
push
cmp
mov
scas
in
mov
stos
xor
mov
xor
fsubrs
jle
rcrl
repnz
imul
insl
push
dec
stos
ret
movsl
mov
test
outsb
or
cmpsb
push
cmp
jg
in
popf
icebp
dec
mov
lods
orl
inc
xchg
sbb
mov
divl
loop
loopne
and
mov
mov
aad
add
clc
and
call
jl
outsb
aas
pop
psubb
mov
push
rolb
jae
fsubr
lahf
pop
xlat
or
mov
popf
mov
outsb
xor
fstp
cmc
cmpsb
mov
scas
mov
imull
call
jbe
mov
push
adc
shrl
les
movsb
sub
mov
push
dec
and
dec
js
mov
or
pop
shlb
ret
addr16
add
leave
rcr
mov
je
push
mov
out
aad
fsubl
pushf
jp
jg
test
in
inc
sub
dec
adc
adc
dec
loop
sbb
out
xor
cmp
xchg
dec
mov
mov
jnp
je
add
sub
adcl
ss
fcom
out
aam
mov
and
jno
xor
movsb
repnz
shlb
xor
popa
add
cmp
out
fs
or
jge
xchg
add
add
add
adc
pop
mov
or
inc
pop
push
dec
push
push
jge
fldcw
sbb
dec
lods
mov
popf
jbe
cmp
arpl
clc
mov
iret
xor
enter
xor
mov
int
pop
cmpl
mov
mov
jmp
or
mov
addr16
mov
mov
out
push
fsubl
aas
pop
sahf
loop
psubd
sbb
sub
xor
push
shlb
shll
cwtl
rcr
nop
inc
mov
mov
inc
mov
lcall
fcmovne
lahf
push
pushf
cmp
movsl
or
divl
and
mov
mov
push
or
cmp
xchg
js
lock
push
jne
sub
loope
mov
mov
mov
sub
icebp
mov
stc
dec
sahf
idivl
pusha
mov
mov
or
jae
dec
xchg
lock
scas
jl
jo
aam
add
push
fwait
test
ja
and
mov
mov
or
loope
loope
pop
test
mov
xchg
push
popa
adc
mov
pop
mov
mov
and
icebp
dec
mov
imul
aaa
dec
pop
shrl
dec
das
sarl
jmp
lock
cmp
cmc
cmpsb
dec
xor
or
lds
loop
add
fs
mov
repz
xor
addb
and
pop
mov
dec
jecxz
or
das
sbb
push
mov
mov
xorb
mov
mov
cmpsb
xor
js
add
insb
std
int
scas
pop
xchg
mov
or
jne
dec
push
xchg
and
cmp
or
ret
or
lret
xchg
call
add
mov
mov
nop
xor
mov
lock
cs
negl
pushf
xchg
mov
lcall
xchg
cmp
pop
mov
dec
out
test
je
xchg
pop
jb
mov
loopne
dec
mov
std
sbb
sub
dec
inc
mov
or
icebp
mov
in
xchg
pushf
inc
add
sbb
mov
iret
int3
hlt
iret
inc
int
sbb
dec
fdiv
and
lret
movsl
mov
enter
fnstsw
jmp
xchg
ljmp
enter
mov
mov
sar
icebp
call
adc
inc
pop
or
fcomi
stos
inc
loope
sbb
mov
ds
int
insl
out
aam
sub
stos
int3
xchg
pop
mov
lcall
xor
pop
cmp
add
jo
loope
jb
pop
add
jb
test
arpl
fdivl
test
les
mov
xchg
sbb
dec
rolb
popf
or
outsb
shl
push
xlat
shll
xlat
inc
pop
jnp
pop
mov
sub
sbb
push
xor
mov
pusha
sbb
xor
pop
outsb
inc
mov
inc
outsl
push
push
xchg
rcrl
icebp
stos
in
mov
outsb
sbb
dec
adc
mov
lods
inc
pcmpeqb
xchg
int3
mov
adc
add
sahf
cmpsl
sub
popf
mov
adc
stc
jbe
cld
fs
cmp
stos
pop
out
xor
and
pop
push
jmp
outsb
sub
call
mov
xchg
xor
jecxz
shl
pop
arpl
and
leave
imul
lcall
jo
adc
cmp
inc
xchg
cmp
jmp
xor
adc
clc
mov
mov
ja
pop
ret
lcall
jl
scas
scas
fs
scas
mov
ret
xchg
xchg
je
dec
inc
cmpsb
andb
sub
mov
mov
mov
push
out
ds
xor
pop
mov
aad
and
out
shrl
daa
shll
or
loop
pop
mov
inc
out
daa
cwtl
push
mov
jbe
push
xchg
roll
mov
mov
sti
jge
aam
dec
int3
icebp
dec
aaa
or
lahf
sti
dec
cli
imul
dec
push
and
adc
shlb
or
and
mov
and
aas
jne
js
in
pop
inc
add
push
cli
push
loopne
es
or
in
cld
jecxz
fists
shlb
pop
lods
into
xor
cmc
test
cmp
add
cli
adc
mov
sti
shrb
inc
push
lds
or
mov
lcall
out
push
in
mov
add
jle
push
in
mov
cmc
imul
inc
xor
test
addr16
push
shl
sbb
lock
sbb
mov
movsl
mov
leave
adc
dec
iret
pop
ficoml
mov
in
in
sbb
jb
cs
adc
jbe
sarb
add
mov
in
nop
dec
xchg
pop
push
push
fdivl
cmp
repnz
add
dec
dec
jnp
xchg
shrb
fcomi
lret
jmp
addb
xchg
sub
out
cmpsb
div
jb
adc
push
push
cmp
sarb
clc
clc
ds
mov
fbld
in
push
mov
xchg
dec
outsb
out
lahf
pop
aaa
sub
out
mov
xlat
dec
push
iret
test
icebp
rcll
jl
jg
pop
popf
lcall
jns
lahf
dec
push
lea
sbb
mov
jge
int3
mov
in
mov
push
in
inc
inc
adc
test
and
adc
inc
in
push
mov
fstpt
xchg
stos
mov
in
mov
movsb
xchg
push
inc
ret
stos
rolb
fcoml
jno
fiaddl
push
jl
mov
fcoms
push
jmp
jle
mov
ret
icebp
mov
lods
pop
loopne
adc
popa
sbb
aas
push
mov
divb
pusha
pop
xchg
or
adc
idiv
pop
inc
cmp
pop
inc
inc
xlat
inc
pop
icebp
add
push
fldcw
or
mov
adc
nopl
or
inc
fcmovu
mov
stos
je
sub
sbb
rorb
repnz
imul
jl
mov
stos
cltd
or
es
mov
mov
inc
xchg
cwtl
call
sub
shl
adcl
aam
and
lcall
movsl
rcrl
pusha
arpl
sbb
or
sbb
in
mov
add
mov
aas
cmpsb
or
ret
movsl
push
je
xchg
std
std
add
movsb
fs
lcall
cli
repz
add
dec
and
mov
xchg
inc
mov
adc
inc
clc
adc
iret
xchg
ss
call
pop
es
or
faddl
ffree
inc
sub
cmp
mov
cwtl
jge
adc
divl
test
icebp
xor
sub
insb
sarl
out
cld
pop
jno
sbb
inc
mov
sub
push
jmp
imulb
push
xor
mov
out
stc
mov
bound
pop
insl
icebp
test
or
scas
or
jbe
loopne
lds
jno
dec
pop
pop
fnsave
dec
repnz
or
or
xor
adc
lahf
subl
sub
fcmovnu
dec
push
or
jp
gs
popa
mov
imul
adc
es
dec
sub
mov
cltd
mov
scas
mov
and
adc
cmpsl
add
sub
xor
int3
aas
insl
push
pop
enter
push
ss
scas
pop
jl
lret
sbb
pop
fstpl
es
mov
xor
stos
jbe
xchg
lret
and
mov
pop
fisubs
outsl
les
jp
dec
les
pop
lcall
cmp
inc
addr16
push
das
sbb
cmp
mov
xor
fldl
in
je
pop
mov
pusha
ret
jge
arpl
movsl
inc
jp
sahf
data16
lret
mov
je
outsl
sub
mov
adc
repz
subps
xchg
mov
dec
shll
mov
adc
addr16
dec
ja
mov
inc
or
dec
pop
or
mov
xchg
pop
clc
cmp
sub
dec
cwtl
mov
and
mov
mov
mov
sbb
cmp
cmp
sub
fsubrl
cmp
jnp
and
stos
inc
lret
fldenv
mov
push
in
jle
ficoms
pop
lcall
out
repz
fstl
push
fcomip
mov
cmp
xchg
sub
mov
and
or
xchg
addr16
xchg
add
jo
xor
mov
sbb
inc
mov
mov
pusha
mulb
pop
mov
xchg
ret
inc
xor
icebp
mov
adc
rorl
ficompl
call
push
or
clc
adc
or
xchg
ds
sbb
sub
dec
or
int
push
lcall
xchg
sbb
dec
clc
push
and
jge
notb
shlb
cs
mov
jns
aas
mov
jl
mov
add
pop
push
stos
movsl
icebp
xchg
add
aaa
lahf
outsl
aam
cltd
fisubs
mov
xchg
lods
adc
fcoml
mov
es
inc
inc
scas
lock
add
xchg
je
shlb
sbb
cmp
jbe
loop
pop
pop
cmp
enter
into
adc
cmp
lods
xchg
inc
cmpl
dec
push
stos
out
outsl
clc
jno
pop
mov
mov
cltd
xor
cmp
jge
fsubrs
mov
ror
inc
ret
xchg
cltd
jg
push
mov
sub
sbb
adc
lret
scas
dec
sbb
inc
mov
dec
push
sbb
insl
dec
mov
movsb
and
inc
cmp
fsubs
mov
lea
scas
dec
sti
inc
sbbb
js
insb
insb
push
loopne
mov
jno
or
call
scas
out
xor
jecxz
jae
jb
call
pop
push
stc
in
dec
sbb
outsl
dec
sbb
outsb
sbb
inc
push
repnz
loope
push
sbb
pop
movsb
jae
aaa
mov
pop
mov
out
jl
leave
adcl
sarl
or
es
jns
jo
int3
jae
inc
cs
cmp
bound
fldenv
cmp
scas
mov
mov
xchg
pop
dec
adc
test
mov
stc
mov
cld
nop
cmpl
inc
bound
xlat
inc
mov
inc
inc
sahf
js
and
jecxz
jne
jg
jg
fsubs
xor
pushf
and
fisubrl
cmp
int3
das
loopne
andb
push
mov
lret
aam
in
jne
fwait
call
mov
rorl
fld
pop
fdivrl
mov
cmp
lds
cmp
ret
push
lods
loopne
pop
pushl
shl
lock
gs
and
xchg
xor
ss
test
clc
mov
inc
push
jns
pop
push
lods
sbb
jne
add
cmpb
sbb
int3
jo
sbb
or
pop
cmp
pushl
and
add
fisttpll
xchg
add
mov
cmpsl
das
jl
fistps
data16
jmp
ja
cmpsb
push
sub
icebp
cltd
add
insl
mov
or
jl
push
jl
pop
mov
into
ja
fiadds
es
rcpps
cltd
fildl
arpl
cmpsb
fsts
mov
cmpb
popf
jp
pop
mov
adc
mov
cli
cmp
xor
fldt
adc
aas
lock
xor
sub
jl
repnz
cld
push
lods
unpckhps
xor
push
jo
adc
lea
cmp
js
push
add
dec
faddl
jle
xchg
xor
push
les
adc
popa
fiaddl
jecxz
mov
xor
mov
mov
xchg
sub
xlat
addr16
inc
clc
test
sahf
rcrb
push
jae
inc
pop
adc
xchg
mov
add
or
and
inc
jg
pop
gs
rclb
mov
pop
nop
push
std
cmp
mov
loop
xchg
push
mov
es
ja
jbe
cmp
ja
loop
les
mov
pop
jne
inc
xchg
stos
rcll
cld
mov
push
cli
jecxz
push
push
or
pushf
ret
jle
jo
in
stc
sbb
push
jecxz
lock
mov
mov
andb
adc
push
imul
cmp
push
mov
ja
shll
out
and
pusha
mov
pop
sub
xchg
sarl
popf
sbb
dec
cmp
imull
mov
jmp
sub
scas
cmp
out
add
sbb
jg
xor
scas
aaa
lcall
cmp
pop
mov
push
data16
loope
xchg
mov
ret
fpatan
call
mov
jmp
clc
pop
rorb
cltd
mov
mov
shrl
mov
cmp
test
sbb
aad
aaa
fistpl
dec
arpl
loope
mov
inc
mov
stos
aas
pop
jae
and
mov
pop
cld
arpl
lcall
or
mov
lret
cmpsb
adc
add
cwtl
cmp
daa
dec
sbb
cmp
cmc
test
mov
add
daa
lea
push
aad
sbb
add
sbb
or
cmpsl
aad
sub
add
pop
dec
lods
xchg
xchg
xor
movsl
xlat
int
dec
dec
jns
int
and
repnz
fnsave
mov
jnp
push
and
outsb
test
leave
stc
lods
in
dec
les
add
xchg
lahf
inc
clc
jge
xor
mov
push
lret
push
pop
xor
sbb
sar
cmp
pop
jns
xlat
dec
push
js
arpl
movsb
mov
jno
jge
inc
mull
hlt
xchg
sub
iret
je
xorl
xlat
movsb
adc
sbb
add
push
adc
faddl
out
mov
push
pushf
dec
test
xchg
outsl
and
outsl
adc
mov
dec
mov
aad
shrl
in
or
or
mov
loope
inc
xchg
pop
in
test
repz
push
mov
addr16
mov
cli
insb
cld
mov
lret
movsl
out
and
pop
add
sbb
arpl
lods
add
push
lock
xchg
and
int
mov
sbb
jb
mov
fadd
loop
adc
pop
jnp
mull
das
cld
in
jns
lret
mov
stc
lcall
lret
xor
mov
popf
lcall
dec
cmp
mov
andl
cld
mov
push
push
xor
sbb
sahf
movsl
mov
cmp
mov
push
movl
rcrl
mov
sub
lea
ret
xor
jns
xor
repz
repz
enter
fcmovu
inc
dec
adc
mov
pusha
xchg
sub
or
mov
ljmp
xor
xor
int3
adc
je
dec
add
jno
leave
clc
pop
jo
pop
leave
imul
imul
notl
push
adc
add
shr
imul
rcr
mov
dec
insb
rcrb
and
and
test
nop
jmp
lahf
inc
lds
jl
push
es
or
cwtl
enter
insb
jmp
dec
roll
int
push
out
out
scas
mov
ret
lret
fwait
mov
cmp
or
dec
inc
rcll
test
dec
dec
cs
adc
cmc
pop
ret
sbb
scas
js
inc
std
into
and
mov
pop
repz
cmpsb
rorl
rcll
test
push
and
cmp
out
mov
and
cmpsb
xor
mov
stos
xor
cmc
es
push
out
jb
mov
sbb
cmp
mov
push
pop
mov
fdivrl
jb
sbb
mov
mov
cmp
inc
cmp
outsl
xor
mov
mov
ja
dec
shrb
sahf
addr16
mov
adc
adc
call
xor
test
popa
mov
je
xchg
inc
fwait
inc
add
push
lcall
dec
jbe
popa
out
xchg
push
push
fcmovnb
out
mov
push
outsl
shl
lcall
dec
stos
dec
js
jle
cmp
ss
fsubrs
inc
add
add
hlt
popf
cmp
mov
stc
hlt
sub
pusha
mov
pusha
and
mov
mov
xor
push
rcl
call
dec
in
xchg
aas
sbb
mov
insb
cld
andb
and
xor
nop
lds
inc
aaa
sub
cmp
or
fcom
decb
je
jge
inc
add
sbb
ja
mov
lcall
inc
loope
adc
jb
pop
or
mov
jg
lds
pop
enter
imul
jle
push
test
addr16
scas
pop
leave
scas
mov
jge
and
xchg
pop
sbb
push
inc
adc
cmp
lock
sti
aam
xor
enter
sub
inc
stos
mov
xchg
dec
das
mov
lea
mov
push
pop
mov
outsl
lret
xor
cmp
inc
lret
std
mov
cmp
iret
sub
mov
es
jno
stos
mov
or
add
push
lds
inc
and
jb
mov
cmp
xchg
mov
cmp
fcom
xor
test
dec
jne
pop
inc
adc
pop
inc
dec
mov
xchg
adc
iret
mov
mov
inc
decb
pop
sbb
incb
add
in
add
mov
packuswb
nop
lret
arpl
xchg
jae
scas
push
push
jl
mov
xor
pop
sbb
bnd
stc
scas
sub
mov
js
mov
add
loop
push
pop
loop
ljmp
sbb
sti
popf
adc
push
test
dec
ficoml
cmp
rcrb
push
cmpsb
push
lcall
nop
sbb
xchg
shr
imul
xchg
pop
cmp
outsl
popf
aaa
cwtl
outsl
xor
jge
jge
pop
push
insl
push
lret
adc
sti
js
add
xor
or
jmp
sub
dec
pushf
add
dec
lret
cmpsb
push
mov
jbe
sbb
out
imul
jae
orl
addr16
bound
dec
and
lcall
out
or
bswap
test
shrl
arpl
dec
std
cmp
clc
call
jmp
dec
cmp
jb
mov
lds
pop
repz
xor
pop
cmp
rorl
xchg
shlb
dec
dec
or
mov
cli
cmpsl
rcrb
mov
popa
inc
cmp
shl
xor
push
repnz
movsl
cmpsb
jns
pop
data16
dec
dec
lds
xchg
and
cli
ljmp
fimull
in
adc
and
stc
mov
push
cld
es
jns
pop
fnsave
push
fldcw
stc
push
repnz
jo
add
popf
repz
sub
push
push
mov
popa
jp
ds
fistl
es
xchg
mov
or
add
outsl
imul
ret
in
cmpl
push
cmp
out
mov
or
push
mov
clc
mov
into
in
adc
sub
insb
xor
cmpsb
test
mov
adc
imul
fidivrs
mov
jecxz
pop
repnz
jns
push
stc
lods
dec
xchg
stos
loopne
pop
or
pop
cmp
xorl
sbb
sub
call
cmovne
mov
lret
icebp
lods
aad
xchg
in
jle
test
outsl
testb
aad
adc
xchg
or
ja
repz
mov
aaa
adc
daa
insb
pop
xchg
lret
fisubrs
popf
aas
divl
enter
imulb
popa
mov
addr16
cmpsb
lods
cld
sbb
mov
add
rol
adc
mov
mov
xor
pop
jb
or
das
shll
ja
pop
loope
push
xlat
pusha
js
leave
jecxz
xchg
mov
or
mov
pop
push
sub
xchg
popf
popa
or
dec
adc
lods
cmpl
lods
adc
dec
sbb
inc
mov
mov
lcall
data16
int
and
mov
lds
xor
lahf
mov
add
push
pop
jmp
jbe
dec
adc
xor
jmp
test
dec
setl
test
pop
pop
cmp
lret
dec
pop
std
push
data16
lcall
fcompp
xor
movsb
cmp
mov
mov
faddl
or
or
rcrl
cmp
mov
sub
inc
inc
cmp
inc
xor
push
into
add
adc
push
inc
mov
lock
or
test
cmp
push
mov
inc
jns
jb
jmp
xchg
mov
adc
ucomiss
jp
pusha
je
mov
push
lods
mov
adc
bound
push
gs
cltd
pushf
mov
mov
mov
lahf
xchg
sbb
pushf
ljmp
xchg
maxps
sbb
push
aaa
pop
xor
loopne
push
cs
sbb
mov
mov
xchg
or
xchg
inc
mov
sarb
lock
push
dec
and
aad
stc
ss
negb
ficompl
and
or
add
call
mov
or
test
das
ja
stos
and
push
or
sub
jl
push
addb
jne
loopne
inc
sbb
pop
push
cmp
jmp
xchg
push
sbb
xchg
sub
sub
ss
push
pop
and
arpl
xchg
aas
pop
int3
popf
jle
mov
jns
jl
adc
jo
in
inc
sar
pop
fdiv
and
stc
pop
xchg
mov
or
cmpsb
lret
jbe
and
std
ja
pop
std
repz
pop
fstpt
and
cmc
xor
sbb
lahf
jecxz
jl
icebp
loopne
test
and
sbb
dec
lock
xchg
mov
fsubs
iret
inc
adc
push
or
sbb
mov
sahf
cmc
out
iret
subl
or
fwait
outsb
cmpsb
push
stos
fwait
jns
fwait
mov
test
xchg
fwait
out
or
add
mov
or
aad
jle
lcall
sub
mov
and
pop
cmpsb
xchg
out
out
aam
pop
stos
dec
ss
dec
enter
push
pop
pop
out
xchg
iret
mov
jmp
aas
insb
cli
push
add
mov
aam
jae
cwtl
stos
in
out
jmp
xchg
sub
jne
cmp
int3
pop
sbb
inc
lahf
cmpsl
jo
orb
test
xchg
adc
and
roll
dec
aas
les
jae
push
dec
lahf
mov
mov
mov
adc
pop
dec
bound
rclb
in
jb
insb
xor
xchg
insl
lds
or
jne
mov
insb
addr16
push
fwait
mov
pop
lea
dec
jmp
mov
xchg
outsl
test
fs
xor
fucomip
inc
outsl
movsb
ja
jecxz
in
jne
repnz
das
scas
fisubrl
std
mov
add
or
cmc
mov
xor
xchg
bnd
pop
mov
aad
scas
or
sub
hlt
movsb
outsl
push
mov
mov
push
dec
cmp
cmp
in
cld
dec
int
popa
dec
xchg
loop
cli
pop
ret
rcl
dec
pop
xchg
mov
jnp
imul
repz
fdivrs
pop
data16
xorl
mov
sbbl
orb
insl
or
add
loope
insl
arpl
out
shll
and
data16
pop
push
pop
xchg
jl
leave
dec
mul
ss
iret
fstpl
adc
into
outsl
cltd
sti
roll
pop
dec
push
gs
jae
mov
push
mov
cmp
and
cmp
in
aas
jae
das
popa
test
insl
frstor
stos
lock
mov
mov
sbb
shl
aaa
test
pop
add
inc
ret
xchg
cmp
clc
sarb
jae
mov
xor
iret
std
jb
data16
orb
push
fwait
jne
inc
or
push
or
sbb
call
addr16
jmp
inc
fbld
xchg
fwait
xchg
push
movsb
rorl
inc
xor
mov
mov
mov
rcrl
mov
das
cmc
sbbb
cmp
pop
in
and
sub
fldenv
pop
lcall
rcrb
in
adc
lods
xchg
fnstsw
mov
push
inc
or
aas
dec
movsb
sahf
mov
adc
sub
test
mov
add
nop
adc
outsb
pusha
push
imul
jno
inc
stos
mul
andl
ret
mov
int3
mov
dec
dec
mov
data16
inc
or
push
and
push
xchg
lahf
scas
cmp
jns
xchg
mov
mov
inc
adc
sti
lock
loope
sub
mov
jnp
das
daa
push
hlt
mov
lahf
or
subb
cltd
out
popf
adc
dec
or
in
dec
push
nop
inc
sarb
add
xlat
sahf
mov
mov
popl
sahf
mov
xor
dec
mov
scas
push
out
mov
test
inc
in
or
lock
sub
jl
cmp
rorb
cmp
js
fisubl
mov
fsubs
and
push
xor
clc
mov
xchg
sub
cmp
cmp
iret
ficoms
jb
adc
fwait
dec
sub
inc
cmp
mov
inc
inc
das
adc
scas
lds
cmc
jecxz
or
sar
jnp
movsb
inc
aam
ret
lea
je
sbb
test
add
addb
js
aad
pop
push
cld
subl
sub
xchg
inc
pusha
call
data16
add
insb
cmp
lods
push
lea
sti
mov
nop
mov
and
push
dec
sbb
cmpsl
cmp
and
pop
jb
dec
mov
mov
in
xchg
or
sub
mov
loope
mov
incb
xor
mov
fbld
pop
data16
repnz
lcall
mov
ja
mov
in
shl
jno
fdiv
jp
and
shrd
push
sbb
in
dec
lahf
lods
sahf
sbb
insb
movsl
lock
mov
stc
out
nop
lods
inc
or
into
aas
inc
dec
pop
xchg
je
cwtl
lods
jns
testl
clc
push
loopne
lret
mov
mov
adc
mov
inc
sub
jnp
nop
inc
scas
pop
aam
jnp
in
insl
dec
bound
je
sub
icebp
xchg
nop
cli
add
mov
mov
sbb
cmpsb
jg
popa
or
push
lcall
cmpsb
nop
js
pop
add
mov
in
xor
ds
mov
pop
sti
addr16
cmpsl
and
lock
jecxz
jp
jmp
xchg
mov
xor
push
das
push
add
repnz
loope
adc
je
pop
pop
or
inc
mov
pop
push
push
mov
push
xor
add
stos
and
adc
imul
xor
sahf
pop
into
test
adc
cmpsl
daa
pop
arpl
mov
sub
setns
add
lcall
hlt
and
push
push
mov
inc
outsb
push
pop
fcomi
bound
push
pop
jle
mov
mov
popf
fnstcw
push
mov
repnz
daa
cwtl
sbb
jnp
dec
into
dec
sbb
jge
fwait
loopne
pop
repz
cltd
test
cmp
jge
sub
test
xchg
mov
fsubl
or
xor
aad
mov
adc
pop
mov
dec
pop
mov
les
imul
sub
out
jl
iret
jo
es
xchg
pop
adc
adc
mov
push
xchg
andl
mov
lds
add
push
pop
insl
movsb
dec
sahf
mov
int3
hlt
dec
mov
jb
push
jae
push
xor
nopl
rcr
insl
cmc
jnp
cld
in
daa
sub
cmovle
loopne
fidivrs
test
out
leave
push
inc
xchg
out
adc
stos
loopne
mov
fmuls
ret
sti
push
hlt
mov
frstor
scas
sub
outsl
xor
bnd
movsl
jmp
ss
or
dec
sub
rorb
push
pusha
jl
push
ja
fimuls
pop
jne
gs
add
lea
mov
movsb
lods
push
mov
dec
mov
inc
sbb
inc
mov
cmp
push
mov
es
inc
clc
jge
in
sub
sub
xor
outsb
scas
cmpsb
test
aaa
pop
inc
fwait
fsubs
sub
dec
or
sbb
lods
data16
sarl
daa
loopne
ss
repnz
mov
nop
xor
aad
push
loopne
bound
jl
cmp
sub
jl
scas
cli
inc
cmp
in
dec
gs
sbb
insl
jecxz
mov
jp
mov
and
xchg
adc
xchg
cmpsl
mov
lock
out
in
cmp
xchg
imul
scas
jnp
int
scas
pop
test
jp
ss
stc
cmp
sub
xor
mov
popa
and
mov
stc
add
push
insl
fadd
shl
lret
mov
jnp
enter
sahf
rcl
outsl
loop
sti
movsl
iret
call
push
cld
in
repz
and
outsb
ss
jne
pop
mov
sub
jns
mov
faddl
stc
jge
push
pop
je
jno
aad
scas
mov
xlat
mov
push
xchg
and
cld
sahf
js
cmp
adc
jbe
inc
lret
add
or
mov
adc
and
lret
orb
les
cmpsb
lock
fdivl
shr
sbb
inc
adc
cwtl
cmp
mov
xor
fcoms
or
and
pop
push
push
inc
ljmp
testl
pop
sub
inc
jns
jnp
add
movsl
sub
lahf
pop
in
cmp
xor
in
adc
adc
adc
xor
je
jp
ficoml
sub
stc
sbb
int
iret
xor
dec
sbb
fs
iret
push
add
jp
movsb
test
xor
push
xchg
ret
rclb
adc
or
lret
nop
inc
or
and
test
xor
push
pusha
test
push
and
lock
xor
into
cmp
mov
lods
arpl
das
push
add
pop
aad
mov
repnz
cmp
inc
jb
movsb
or
sahf
orb
sub
cs
push
cmp
dec
addr16
dec
shll
clc
jbe
mov
gs
inc
push
jmp
add
aas
jmp
and
sub
je
cs
push
adc
movsl
mov
push
lahf
sbb
int
stc
lret
ret
fldl
into
and
or
out
lods
dec
push
cltd
lea
out
add
sub
cmpsb
lock
cmp
test
es
sbb
push
repz
mov
mov
arpl
xchg
add
cltd
ja
push
int3
lret
je
push
pop
inc
jbe
ret
sub
sbb
roll
or
shrb
lret
push
push
pushf
xchg
fsubrs
insb
movsl
inc
std
jge
fimuls
jb
fld
inc
xchg
movsl
dec
sbb
dec
subb
and
nop
ja
out
and
sbb
mov
loop
push
xlat
jge
aas
jmp
dec
rcll
mov
cmp
mov
subb
xchg
push
fldl
sub
scas
bound
cwtl
sahf
mov
inc
movsb
cmc
mov
or
sbb
push
sub
cmc
mov
test
sub
movsl
imul
adc
sub
lods
add
add
and
shrl
fnsave
lcall
dec
adc
mov
pushf
clc
dec
pop
jbe
js
jmp
iret
insl
pop
add
jle
popf
sbb
ret
dec
lea
or
sbb
sbb
dec
aad
ss
jecxz
mov
ret
pop
jge
pop
cmp
inc
movsb
sub
outsl
xor
aaa
loope
clc
or
mov
pop
mov
pop
repnz
xor
adc
mov
jnp
jo
mov
xchg
int3
jno
cld
aam
sbb
fidivrl
leave
iret
mov
je
push
mov
fdivs
adc
adc
repz
adc
divb
stc
scas
call
aam
pop
xchg
lds
outsb
cmp
movsb
lret
or
jmp
mov
and
mov
clc
ja
sbb
xchg
dec
jbe
cmc
movsb
cld
popf
test
cmp
in
and
jmp
adc
mov
push
cmc
shlb
jl
bound
jns
pop
js
mov
call
jmp
cmp
push
sti
lahf
xchg
jmp
leave
jno
dec
cmp
xchg
aas
push
es
xor
jge
enter
scas
subl
adc
aas
jecxz
dec
fdiv
sahf
rcl
xor
xchg
dec
push
imul
mov
dec
jb
aam
cli
adc
mov
js
test
shll
ja
dec
scas
mov
jno
sbb
xchg
xchg
cmc
out
or
or
clc
mov
sbb
mov
mov
mov
adc
xchg
cmp
xor
pop
sub
jmp
push
and
fldt
fldt
fidivl
and
fidivrs
fcomps
cld
imull
es
mov
adc
push
add
add
idivb
pushf
inc
sbb
aad
cmp
out
mov
in
call
pop
pop
pop
cmpb
mov
lret
xor
test
test
xor
imul
xchg
mov
outsl
ljmp
push
and
daa
daa
cmpsl
xchg
and
in
inc
jo
sbb
cmp
out
sbb
cmp
inc
fnsave
dec
inc
es
mov
sbb
lcall
sbb
jns
pusha
pop
mov
jmp
mov
pusha
push
mov
aas
das
jae
fs
std
ljmp
add
lret
pusha
xchg
and
push
xchg
fisttpll
or
cld
jb
push
pop
dec
cli
not
pusha
pop
rol
xor
adc
xor
shlb
inc
xor
mov
cltd
push
dec
repz
repz
xor
scas
imull
mov
outsl
dec
stos
das
and
shlb
mov
ret
rcll
jnp
lcall
adc
push
or
inc
dec
ljmp
insb
outsb
enter
dec
xchg
movsb
ja
mov
fimuls
pop
movsb
pop
call
push
ret
adc
add
cmc
imul
or
mov
add
rorb
imull
lret
add
in
fwait
dec
clc
fsubl
jb
jecxz
mov
jp
mov
mov
cli
push
call
fiadds
mov
stos
inc
push
adc
orb
jecxz
rcrl
push
pop
push
cmpsb
pop
arpl
cmp
jmp
add
mov
add
daa
cmc
popa
fucomip
sarl
lds
add
cmp
call
sub
lods
pop
xchg
jns
dec
mov
adc
lods
push
sbb
or
fwait
cmpsb
inc
and
sti
sbb
push
iret
cmp
mov
shlb
dec
add
push
or
dec
shlb
dec
cmp
dec
ds
fwait
daa
mov
lock
cmove
pop
mov
pop
xchg
call
jae
das
xlat
xor
mov
jae
mov
mov
stos
xchg
stos
inc
dec
in
xor
xchg
mov
mov
arpl
xchg
mov
jecxz
mov
shrb
iret
xor
and
add
jge
pop
inc
gs
pop
inc
jp
cwtl
mov
mov
xor
mov
lret
inc
mov
xchg
add
add
push
mov
ds
dec
sti
ljmp
mov
jg,pt
in
cwtl
adc
push
jmp
push
imul
cwtl
fsubp
outsl
add
sahf
dec
jae
insl
push
mov
sub
nop
add
jmp
push
dec
push
and
dec
adc
shlb
cmp
in
das
dec
pushf
loope
jnp
test
fs
fmulp
lret
fwait
leave
out
les
std
inc
cmp
jae
jns
addl
mov
stos
fwait
movsl
pop
mov
lods
decl
in
push
test
xchg
movsl
loope
cmovno
jae
mov
jge
and
aam
int
mov
sbb
jmp
sub
mov
pop
cmp
sahf
mov
inc
xchg
cmpsb
je
rolb
xor
movsl
push
push
mov
loope
mov
push
je
out
testb
repnz
enter
xor
inc
out
xlat
cmp
push
sti
inc
lds
pop
and
movsb
fstpl
mov
aad
jle
mov
xor
sub
jp
jno
mov
cmc
sbbb
fnstenv
das
and
dec
jae
push
cli
and
hlt
loopne
mov
nop
in
jge
repz
push
stos
push
pop
sbb
dec
pop
sbb
popa
xor
fcmovbe
mov
repz
mov
shrb
xlat
inc
hlt
xchg
cmpsb
mov
pop
out
inc
cmpb
mov
pop
jbe
ljmp
xchg
test
ljmp
xor
stos
fwait
sbb
out
sbbb
cmp
ljmp
xchg
int3
sbb
pop
lock
sbb
fcmovb
insl
or
jle
cmc
ja
fldcw
insb
in
fdivrl
adc
push
sahf
shrb
fisttpll
pop
and
push
lods
push
in
scas
or
ljmp
adcl
mov
sbb
pop
push
cmp
popf
imul
jo
pop
inc
cmp
scas
ljmp
lret
cs
roll
lea
push
pop
scas
pop
mov
int3
pop
add
pop
adc
lds
inc
inc
xchg
push
xor
sbb
clc
push
loop
movsb
push
call
arpl
shr
addr16
ret
fwait
arpl
push
fiadds
push
shl
pushf
jns
in
xor
es
or
std
push
xor
push
daa
mov
orl
inc
pop
or
adc
jecxz
add
cltd
jg
lock
outsb
int
shrb
inc
in
cs
lods
add
mov
jp
push
jbe
add
xor
adc
shlb
jge
push
xchg
xor
or
int3
decb
dec
jmp
add
pop
jae
fisubrs
mov
adc
rolb
mov
jo
add
stos
dec
xor
lds
inc
leave
cmc
and
jp
ret
add
arpl
rolb
lods
mov
mov
aam
or
mov
out
arpl
mov
sti
adc
addr16
out
bound
in
and
pushf
mov
xchg
push
adc
xchg
ficoms
test
mov
sahf
cmp
xor
inc
je
jge
in
imul
ja
mov
cli
cmpsb
ret
cmp
push
in
add
fnsave
js
jb
movl
pop
mov
lret
pop
jne
xchg
xor
xor
dec
jb
add
xchg
push
aam
enter
scas
or
jnp
cmp
in
shlb
lcall
jb
sbbb
dec
icebp
and
or
mov
jle
push
dec
aad
pop
jmp
cli
pop
or
test
xchg
and
insl
insl
push
popa
jnp
inc
fs
hlt
lret
addl
lock
and
xchg
xchg
and
loopne
jno
roll
lcall
mov
sbb
and
std
dec
pop
lods
sub
sbb
nop
push
pushf
sti
mov
sub
pmulhw
shrl
mov
cmp
cs
mov
pop
cmp
and
mov
inc
push
enter
rolb
jo
pop
mov
inc
ja
in
push
rol
sub
ljmp
dec
or
fildll
push
and
out
ss
fldenv
jmp
fsubrs
fs
cmp
mov
push
pop
mov
jmp
jge
pop
inc
subl
notrack
xchg
imul
mov
dec
lock
insb
mov
hlt
pop
or
in
add
data16
mov
dec
cmp
dec
adcl
outsb
sub
adc
js
mov
mov
and
dec
mov
cmpsb
ja
inc
mov
adc
pop
daa
loope
mov
or
mov
cmpsl
mov
sub
inc
test
sbb
imul
mov
aas
faddp
sarb
mov
repz
movsl
adc
out
js
sbb
divl
xor
into
test
je
sbb
inc
mov
bound
pop
and
sbb
mov
inc
repnz
or
pop
leave
mov
push
adc
jle
mov
inc
sbbb
add
add
cmpsb
xor
outsl
cmpsb
xchg
fistpll
inc
ja
adc
or
out
sbb
sbb
xorl
ret
imul
dec
and
aad
mov
cld
aad
enter
shrb
pop
xor
cmpsb
test
dec
movsl
loope
inc
daa
push
lea
in
in
icebp
sbb
mov
lea
pandn
inc
popa
nop
pusha
cmp
insb
jnp
hlt
shll
popa
sbb
rcll
dec
and
jns
adc
arpl
mov
aam
and
sbbl
or
mov
pop
imul
mov
push
adc
pop
add
outsl
daa
mov
scas
imul
repnz
jecxz
pop
jae
add
push
cmp
pop
in
cwtl
xchg
xchg
test
hlt
lds
out
jae
lods
cli
leave
fcomps
xchg
aas
mov
int3
and
or
pop
jae
mov
xchg
inc
xchg
or
xor
mov
jo
jge
push
xor
movl
inc
stos
aaa
test
jne
je
rcrl
adc
add
sarl
mov
js
mov
nop
xchg
mov
out
add
sbbb
rorl
imul
xchg
cmpsl
je
xchg
cmp
mov
mov
cmpsb
mov
lcall
in
adc
ljmp
push
xchg
bound
mov
pop
xchg
stc
stc
sub
out
les
jne
mov
push
negl
nop
in
pop
stc
imul
and
xchg
fidivrs
xor
push
int
aad
rol
fs
out
mov
adc
push
pop
hlt
addb
mov
ret
lret
repz
add
push
ret
dec
inc
push
push
dec
dec
mov
sbb
inc
sub
fsubrs
xchg
int
sub
mov
xchg
sbb
lods
mov
lcall
dec
pop
icebp
dec
inc
daa
pop
mov
xor
repnz
adc
push
jae
or
mov
mov
cmp
cwtl
adc
adc
dec
js
pop
stc
mov
in
imul
cwtl
pop
es
popf
jmp
adcb
mov
mov
inc
sub
ret
fmull
push
dec
mov
fildll
mov
je
add
loopne
push
lods
cmp
xor
loopne
repnz
mov
movsb
inc
dec
add
xchg
test
adc
mov
js
add
jg
in
sbb
scas
mov
jl
pop
insl
jg
xchg
cmpsb
das
mov
push
fcompl
roll
enter
pop
dec
mov
pushf
jne
pop
push
pop
cmp
enter
jbe
imul
clc
mov
cvtps2pd
rolb
sbb
xor
movsl
das
out
pop
ds
pop
lret
sub
push
push
pop
xchg
mov
sbb
movsl
or
mov
in
mov
and
das
addr16
imul
dec
push
jle
mov
ret
out
loopne
add
inc
rcrl
sahf
fiadds
movsl
xchg
mov
fildll
push
dec
fs
femms
mov
sti
cmp
mov
inc
mov
fisubl
std
mov
jge
push
push
nop
pop
mov
fmuls
mov
inc
jmp
mov
ret
push
and
jnp
push
jmp
lahf
stc
aad
sub
push
lods
jge
cmp
jle
pop
ljmp
push
push
push
shr
ret
test
dec
sub
push
je
inc
movb
popl
pushf
dec
sarb
mov
bound
mov
push
outsl
shl
jp
ljmp
or
mov
arpl
leave
xlat
outsb
push
insb
or
jb
push
jno
int3
and
mov
pushf
cmc
cmp
jne
xchg
jns
xor
xchg
leave
mov
mov
or
mov
jns
inc
pop
ja
jo
fsubs
mov
fsubrp
clc
mov
sub
lret
cmc
sbb
fwait
repz
jle
xchg
xor
ja
fisubrl
mov
daa
sbb
pop
or
pop
pop
cs
stos
and
jmp
sub
push
mov
sar
cs
jmp
sbb
pop
sbb
dec
jb
mov
ds
lahf
cmp
mov
int
adc
adc
fldt
movsl
cmpsb
and
ror
mov
bound
mov
and
popf
adc
cmp
push
leave
mov
lret
call
mov
dec
je
adc
fdivrs
adc
pop
inc
pop
dec
push
adc
jp
lock
lock
pushf
inc
or
ror
call
xchg
dec
dec
or
aaa
xor
test
int3
pushf
sarl
mov
mov
hlt
and
mov
mov
fcomps
sub
xchg
add
or
popa
dec
mov
sbb
and
pop
cwtl
pop
jecxz
or
inc
cmp
mov
dec
jns
and
out
xor
mov
test
xchg
pop
adc
inc
mov
xor
mov
out
aas
dec
push
xchg
gs
xor
imul
add
lcall
into
adc
test
mov
insl
jbe
push
mov
add
cs
pop
pop
and
sub
stc
push
cmp
dec
xchg
cmp
out
ror
cmp
sbb
cwtl
lods
xchg
fistps
clc
cwtl
insl
xor
mov
pop
testb
fcmovne
testb
add
mov
scas
mov
push
mov
jmp
mov
adc
imul
aam
mov
xchg
test
or
into
popa
mov
xchg
dec
xchg
aas
push
aam
enter
fwait
and
aas
dec
cli
ja
jmp
addl
cld
sub
push
iret
stc
out
jle,pn
mov
movsl
lds
jo
mov
inc
push
insb
mov
inc
cmc
push
adc
jmp
insl
cmp
mov
data16
imul
or
arpl
cld
or
or
out
cmp
add
mov
cmc
aam
xchg
sbb
lods
out
add
loope
clc
mov
mov
mov
push
rolb
mov
fisubl
rolb
cmp
jbe
mov
xor
xor
pop
imul
mov
in
push
vpunpckhqdq
sbb
pop
pop
inc
lods
xchg
neg
ret
xchg
adc
adc
arpl
add
mov
insb
leave
ret
and
push
test
jle
adc
in
sub
mov
mov
cmpsb
leave
popa
sbb
fucom
adc
dec
imul
xor
cli
xchg
lds
sahf
repnz
xor
popa
mov
or
incl
adc
jl
das
and
pop
mov
shll
repz
aad
leave
enter
out
xor
call
mov
inc
push
push
sbb
outsl
and
dec
sahf
dec
xchg
mov
dec
mov
pushf
repz
in
or
mov
adc
movsb
fldcw
xchg
sub
lret
dec
shl
in
dec
int
out
inc
mov
jbe
xchg
cwtl
xchg
pop
cmpl
xor
outsb
mov
jecxz
aam
lret
loopne
push
adc
adc
push
and
arpl
nop
sub
leave
cltd
mov
jb
mov
sbb
jo
lret
jnp
pusha
xchg
adc
jg
lods
jae
out
fdivrs
and
or
or
xchg
pop
aam
shl
push
jbe
jle
addr16
push
pop
mov
cmp
je
ja
mov
clc
mov
jmp
jns
fstps
popa
xlat
push
pop
xchg
mov
mov
cmp
xchg
cwtl
int
insb
sahf
das
add
push
add
pop
or
jp,pt
dec
cltd
xchg
sub
enter
jne
imulb
sub
xchg
mov
pop
xor
push
mov
cmpsl
stc
movsl
loop
sti
fmuls
xor
xor
inc
dec
scas
sbb
pop
inc
cld
lea
adc
mov
repnz
mov
ror
leave
data16
rorl
xorl
sub
sahf
or
dec
and
fnstenv
jnp
mov
fistpll
or
push
es
xchg
sub
and
jae
fsubs
dec
leave
in
insl
xlat
push
movsl
xchg
mov
mov
movsl
movsl
mov
leave
aas
inc
jge
lcall
sub
push
inc
mov
mov
mov
movb
imul
add
add
enter
push
cwtl
cmp
mov
aaa
xchg
xchg
jecxz
cmpsl
mov
adc
or
mov
daa
push
loop
xor
mov
in
sbb
push
imul
mov
les
xor
rcl
push
in
les
je
xlat
mov
adc
mov
add
ret
or
sbb
test
jge
pusha
lock
pop
xchg
xor
mov
in
xlat
adc
fwait
ret
pop
mov
jo
fdivl
clc
lret
leave
xor
adc
clc
jb
fs
shlb
cli
lcallw
add
xor
pop
popf
xchg
in
pop
jb
lods
sub
sti
ja
int3
rolb
decl
sbb
imul
and
std
push
fdivp
mov
lahf
lcall
adc
shll
inc
cmpsb
sbb
lods
movsl
push
adc
or
pop
mov
push
fwait
xchg
mov
dec
movsb
dec
cmpsl
out
shrl
inc
sbb
and
imul
iret
jmp
cmp
cmp
sahf
rcrl
lret
fst
inc
or
cwtl
mov
movsl
cmpsb
out
stc
xorl
out
adc
in
loopne
mov
in
mov
cmc
or
loop
ja
ss
test
push
sbb
pusha
pop
xchg
xchg
enter
push
pop
leave
jno
add
xor
push
xchg
and
sub
rcrl
aaa
xor
les
pop
int
xlat
add
insl
lods
mov
gs
je
out
jb,pt
scas
sbb
push
inc
or
adc
push
imul
stos
xlat
xor
sbb
icebp
mov
or
aam
mov
and
add
rcrb
pop
add
sub
push
js
add
and
std
push
and
sar
jno
popl
icebp
nop
mov
add
push
addr16
out
out
outsb
cmpsl
shl
mov
clc
faddl
xchg
adc
js
cmpsb
push
jg
push
cmpsl
leave
adc
or
enter
push
mov
stos
out
sub
sbbl
rcrb
pop
pop
aad
rcrb
icebp
int
push
mov
fdiv
cwtl
mov
mov
sub
stc
add
pop
movsl
adc
pop
cmp
jge
dec
lea
mov
lods
mov
nop
call
add
lahf
xor
fstpl
push
mov
bound
or
outsb
sub
jb
jo
outsb
fistl
fstpl
mov
outsl
cwtl
and
andl
mov
sbb
ret
clc
cmpsb
cmp
xor
cmp
or
inc
dec
pop
stc
movsl
push
cmp
mov
ror
in
in
and
mov
dec
inc
jge
jmp
mov
lods
and
xor
adc
loop
andl
mov
imul
dec
xchg
rol
out
filds
jnp
inc
fcmovnu
std
lods
fsubl
and
xchg
popf
cmc
rcll
xor
loop
aas
jne
inc
lahf
dec
mov
clc
es
pop
bound
lds
adc
jg
dec
addb
icebp
mov
call
xchg
jecxz
adc
clc
ret
inc
dec
rorl
pushf
pop
cmp
pop
jg
rclb
pop
repz
cmp
fistpl
xchg
pop
and
pop
cmp
jmp
xor
pop
pop
sub
mov
fbstp
rclb
jno
xlat
mov
xchg
loopne
sarb
xor
cmp
jbe
ret
push
pusha
sub
mov
inc
mov
adc
arpl
mov
add
aad
jae
cmp
stos
aam
dec
xchg
test
pop
lock
or
repnz
or
dec
movsl
shrb
jb
movswl
xlat
aam
mov
leave
jp
test
pushf
imul
imul
ret
inc
xor
mov
icebp
lret
mov
mull
dec
pop
inc
dec
cmp
sub
ja
or
pop
cltd
daa
daa
adc
mov
stos
pop
cwtl
leave
and
cmp
scas
movsb
popa
aas
movsl
pop
dec
or
inc
repnz
shll
in
adcb
pop
dec
cltd
cmpsb
xchg
xor
or
cwtl
push
pop
sub
es
in
cmpsl
je
mov
sbb
addr16
test
mov
fcmovb
and
cmp
mov
std
daa
sub
mov
addr16
xor
sub
movsb
mov
aas
xchg
pop
jo
jle
pop
and
sti
push
scas
mov
inc
mov
les
outsb
or
mov
cmpsl
pop
ljmp
stos
cmpl
dec
outsl
add
mov
cwtl
fdivrl
rol
pop
pop
test
inc
push
and
imul
mov
lds
push
mov
sub
lea
ret
in
sbb
repnz
pop
in
mov
xchg
or
cmp
add
fisubs
inc
and
into
movsl
nop
pop
dec
icebp
jg
les
out
sbb
scas
aam
imul
mov
es
int3
test
sub
imul
xorb
push
mov
sub
mov
arpl
mov
pop
xor
or
cmp
pusha
imul
sbb
xchg
out
xor
repnz
xchg
cwtl
jb
faddp
mov
loop
clc
jg
or
lds
sarb
inc
popf
stos
jg
add
cmp
add
sarb
push
inc
xchg
in
jge
jo
lret
or
push
popf
mov
aam
mov
jmp
scas
fisubs
xchg
dec
aaa
mov
aaa
sub
push
fwait
and
fwait
enter
push
adc
push
and
push
add
cmp
outsb
or
es
sub
cwtl
mov
out
xchg
sbb
mov
out
lods
xlat
cli
push
xchg
and
clc
mov
adc
pop
pop
or
loopne
int
cmp
dec
pop
das
pop
xor
leave
outsl
jo
hlt
push
xor
adc
mov
cmpb
sahf
jge
lret
sarl
popa
out
call
lock
mov
fs
ja
push
adc
mov
rorl
jle
scas
mov
xor
xor
insb
cs
add
xchg
inc
mov
outsl
ror
cmc
out
inc
mov
es
sub
jb
mov
sbb
cmpsb
adc
lret
xchg
pop
stos
rorl
mov
ja
mov
mov
and
dec
lock
xchg
lea
xor
push
lret
std
out
jne
sbb
push
pusha
cmpsb
lock
jae
rorl
into
fstps
rcll
lret
rclb
cmpsl
and
in
movsl
mov
adc
inc
mov
lahf
loopne
inc
jg
cmp
mov
int3
shll
push
stos
jecxz
dec
adc
jl
mov
lcall
mov
add
jg
sahf
and
inc
or
mov
jb
int
inc
or
dec
push
rcl
lcall
jecxz
out
cs
mov
sub
mov
pop
mov
lods
xor
sub
push
xor
fbstp
xlat
pop
je
ds
add
mov
mov
cmp
ret
test
in
dec
cmp
test
add
pop
ljmp
pop
imul
cmpsb
push
sub
push
cld
pop
adc
sbb
aas
cld
js
push
jg
sub
inc
inc
adc
sub
insl
and
pop
inc
orb
loopne
scas
outsb
popa
adc
mov
into
jns
das
lds
fistpl
imul
mov
lcall
xor
loope
out
std
lret
and
mov
lret
aas
push
sbb
fidivl
insb
xchg
movsb
push
vmovddup
pop
push
pop
lods
pusha
mov
inc
notl
fs
push
mov
push
stc
nop
dec
cli
or
dec
xchg
or
jg
cmpsb
test
mov
jmp
jg
mov
imulb
push
test
sti
adc
xor
sbb
pusha
mov
sub
mov
stos
push
inc
or
or
inc
sahf
lret
dec
cltd
rol
imul
add
mov
sub
enter
mov
pop
loop
jae
add
je
sbb
xchg
mov
outsl
cmp
jnp
xchg
ret
xchg
shll
dec
fwait
cmp
insb
xor
loopne
inc
out
xor
lret
push
adc
sbb
dec
ljmp
sub
lahf
mov
cltd
push
fadds
lret
pop
ja
pmulhuw
jbe
add
mov
out
js
xor
add
scas
in
movb
cmc
daa
fdivrp
sbb
xchg
mov
inc
rolb
and
add
jle
aam
mov
ja
scas
mov
insb
cmp
leave
idiv
fdivl
outsb
xchg
icebp
and
inc
testl
pushf
or
pop
dec
repnz
xchg
push
scas
insb
je
cmp
mov
aas
add
mov
inc
pop
movsb
rol
outsl
xchg
test
push
outsb
cli
loop
cmp
int
ja
push
mov
int3
ja
insb
mov
xor
cmp
lahf
mov
in
sub
mov
xchg
negb
sahf
icebp
add
cld
enter
filds
xor
sbb
orb
or
rcrl
mov
fstpt
inc
idivb
pop
xor
and
push
push
stos
mov
stc
mov
mov
xor
jne
adc
push
aas
fwait
addb
push
or
fldt
pushf
sti
les
jb
outsl
shll
jp
ret
pop
out
outsl
jnp
stos
lea
cmp
sbb
mov
lods
jne
mov
mov
sbbl
in
testl
in
arpl
jle
jl
scas
cmp
xlat
stos
out
adc
addr16
int3
scas
imul
xorl
leave
inc
adc
jns
int
imul
pusha
in
pop
jo,pt
daa
cmpsl
cmp
adcl
dec
jl
ret
jbe
icebp
test
add
sbb
mov
mov
mov
test
outsb
ss
mov
push
push
popa
daa
and
aas
sbb
test
xchg
xor
fcomip
push
mov
pop
in
sub
dec
shl
cs
cltd
hlt
sub
daa
mov
or
dec
mov
cmp
add
or
in
mov
les
jle
pop
sarb
outsb
sbb
add
dec
xchg
pop
inc
orb
mov
and
inc
xor
sbb
addr16
loop
dec
enter
xchg
sahf
rclb
jp
xor
adc
cltd
mov
insl
jo
jae
shrb
mov
stos
sbb
divl
pop
cltd
cmp
or
in
loop
mov
popa
arpl
xchg
mov
je
adc
bound
stc
insl
insb
dec
lahf
cmp
pop
cmp
jnp
inc
stc
mov
rorb
leave
xor
mov
mov
xchg
add
loope
push
stos
mov
pop
or
movsl
call
dec
sbbl
mov
push
push
inc
sub
pop
sbb
mov
test
jb
aam
adc
sahf
cmp
sub
mov
sub
mull
push
test
aaa
jb
pop
clc
mov
mov
cmp
mov
mov
jl
cmp
scas
inc
or
xor
xchg
push
mov
push
jae
sub
mov
icebp
pop
mov
fwait
xchg
stc
ret
fstps
clc
mov
pushf
jecxz
pushf
popa
inc
fmull
std
inc
adc
popf
pop
test
and
xchg
mov
lret
cwtl
sbb
stc
push
fcoml
ja
push
cmp
mov
inc
inc
mov
jo
movsl
dec
movsb
push
loop
cmpsb
sbb
pop
scas
xchg
aad
push
lock
fisubl
jae
push
scas
pop
ljmp
shr
inc
sbb
es
and
inc
lods
sbb
push
add
lock
jecxz
icebp
jg
lret
xchg
dec
inc
lahf
mov
test
ficoml
cmpsl
sbb
mov
lock
dec
stos
dec
iret
push
add
stos
in
cmpsb
loop
fstpl
push
dec
pop
testb
out
enter
jno
aaa
mov
aam
pop
cmpl
es
mov
bound
std
ljmp
movq
into
movsb
idiv
cltd
pop
lods
mov
roll
fdiv
aad
sbb
push
xchg
movsb
add
push
sub
mov
ficomps
addr16
loop
xor
dec
dec
mov
push
and
cmpsl
mov
jae
fsubrs
ror
mov
inc
jle
test
mov
ljmp
sbb
xchg
dec
dec
leave
out
shl
pop
imul
adc
cmp
ret
lahf
test
xchg
lret
push
enter
mov
push
mov
push
push
fwait
and
shlb
dec
insl
rclb
lahf
or
hlt
dec
push
dec
pop
aad
outsb
mov
subb
movl
mov
sub
xchg
ror
push
mov
aaa
dec
dec
jge
or
xor
add
sbb
mov
jle
add
lea
mov
lock
mov
xchg
jno
mov
cmp
pop
pop
mov
mov
push
cmc
fwait
stos
ds
fcoml
cli
sub
and
pop
stos
cmp
jge
push
mov
mov
test
shrb
pop
ss
loopne
mov
movsb
xchg
insl
sub
repnz
fcomps
add
mov
out
sbb
adc
scas
imul
cltd
gs
sub
movsb
push
and
pop
pop
xchg
cmp
lods
lahf
rcr
test
adc
lea
xor
dec
dec
ljmp
jmp
jp
mov
adc
jo
adc
or
inc
dec
xchg
stos
insl
adcl
test
icebp
pop
clc
sbb
and
outsb
dec
sbb
mov
mov
xchg
fcompl
adc
mov
xor
mov
lret
movsl
movsb
scas
inc
das
and
mov
insl
sahf
fwait
mov
in
pop
xor
ljmp
or
icebp
fcompl
stos
repz
test
in
pop
or
mov
ret
mov
addr16
popf
xor
xchg
push
jns
and
and
je
sti
loope
ficoml
pop
mov
test
jo
lods
cmc
mov
lea
xchg
pop
pop
mov
mov
addr16
fdivrl
sbb
out
jnp
aas
sub
insb
xchg
cmp
xchg
scas
push
es
pop
mov
pop
jae
rorb
or
mov
or
cld
fistps
add
xchg
lock
imul
stos
jbe
iret
mov
jb
popf
fbld
into
bound
cmp
mov
lods
loop
call
push
jecxz
mov
xor
jno
jno
cwtl
xor
mov
xchg
sbb
sahf
inc
hlt
push
nop
fs
and
jecxz,pn
xchg
sub
mov
xchg
test
out
scas
add
mov
xchg
jg
lcall
xchg
and
sub
into
mov
nop
scas
test
xchg
push
das
mov
jb
mov
dec
aad
mov
adc
je
push
cmp
pop
sub
lods
push
mov
decb
fwait
sub
jge
out
sub
sbb
xlat
clc
aaa
aad
pop
cld
dec
and
clc
daa
sbb
ret
xlat
scas
js
in
ss
rorb
cltd
imull
in
fmull
loope
daa
push
std
adc
xor
sub
xchg
dec
xor
fisubrl
and
jp
mov
arpl
orb
nop
mov
push
jle
or
xchg
or
mov
ret
mov
mov
and
or
mov
mov
rolb
adc
lods
mov
xchg
add
vmovlps
rcrb
mov
adc
mov
out
or
dec
out
hlt
ljmp
xchg
mov
mov
gs
jge
imul
fprem
call
test
and
popf
cmp
pop
mov
into
aas
mov
lcall
cmp
pop
stos
imul
xchg
cmpsl
xor
cmpsl
imul
sub
push
sbb
pop
push
push
sbb
push
cmp
insl
popf
mov
xchg
inc
jl
cld
int3
mov
sbb
dec
scas
add
mov
test
clc
pushf
mull
push
mov
mov
adc
xchg
mov
or
pop
popf
pop
mov
inc
cld
adcl
mov
xchg
fldcw
lret
and
xor
push
add
push
and
or
mov
sbb
push
push
mov
jb
jae
int
or
cwtl
push
lods
inc
gs
sub
fmul
lret
push
popf
jp
mov
es
xchg
loopne
out
add
or
sbb
mov
or
dec
pop
cmp
dec
xchg
adc
ss
sub
cmp
in
gs
lret
xor
pop
push
fsubs
das
decl
add
scas
bnd
lea
notl
loopne
inc
nop
mov
inc
sbb
dec
int3
push
push
and
mov
adc
lret
sbb
jne
nop
jmp
add
mov
gs
xchg
aas
sub
mov
shl
mov
shll
cmpsb
jp
jne
mov
sub
adc
and
gs
aad
push
js
ss
jecxz
or
add
sbb
mov
mov
ret
les
sbb
enter
outsl
jne
mov
add
mov
mov
rcrl
scas
push
inc
adc
xchg
mov
daa
xor
fnstenv
mov
fwait
xor
mov
hlt
movsl
dec
clc
jl
jmp
add
cmp
add
dec
push
sub
aad
shr
push
rorl
mov
cmp
pop
clc
mov
and
sub
pop
cmpl
stos
lods
dec
std
shlb
mov
dec
dec
mov
test
mov
stc
mov
push
pusha
or
aad
sbb
mov
jle
enter
mov
push
xchg
mov
add
bound
enter
filds
xor
mov
loop
cmp
inc
out
push
mov
loope
std
xchg
sub
out
setae
mov
mov
mov
pop
jecxz
adc
cs
sub
lret
test
iret
jle
imul
adc
jns
in
mov
test
bound
xor
push
and
inc
dec
xor
xor
mov
mov
add
mov
xchg
xor
psraw
dec
mov
sbb
push
icebp
push
sbb
hlt
aas
pop
jmp
into
lret
ja
xor
mov
popf
inc
insl
push
mov
ss
xchg
inc
push
push
in
cmpsl
fnsave
cli
fwait
add
sbb
mov
call
push
mov
mov
gs
sbb
inc
lea
xchg
movsl
mov
add
pop
sub
xchg
loope
xor
push
add
or
pop
mov
lods
push
or
push
pop
lret
dec
mov
scas
repz
mov
iret
pop
and
push
fildll
add
jecxz
xor
sub
mov
pop
lods
xchg
mov
jmp
mov
pop
aaa
addr16
mov
adc
stc
divw
test
ja
mov
leave
xor
negb
and
insl
jl
es
cmp
jne
sbb
adc
jmp
es
dec
pop
or
pop
sbb
push
xor
rep
cmp
mov
pop
dec
adc
push
mov
lock
sub
aaa
add
fnstsw
ss
arpl
repz
push
dec
idivb
arpl
call
shr
aad
xchg
jl
dec
sti
loope
fcompl
into
out
cld
stos
xor
mov
or
mov
out
idiv
insl
mov
pushf
mov
push
out
loopne
push
jp
fwait
adc
in
in
in
shrl
mov
out
pop
lret
ja
mov
lcall
dec
xor
xchg
pop
int
pop
mov
sbb
mov
fisubl
adc
xor
xlat
call
cld
mov
clc
ficomps
hlt
iret
sbb
movsl
shll
add
push
sub
jmp
sub
jo
jb
aaa
add
data16
jbe
dec
jb
xor
or
or
cmp
jle
stos
fisubs
nop
pop
outsl
out
negb
pushf
mov
xchg
sahf
aas
mov
push
dec
mov
jg
fcoml
pop
jmp
mov
adc
stc
shrb
xchg
aam
xchg
jne
dec
call
adc
out
sbb
loope
dec
mov
movsb
out
das
jns
pop
push
xchg
imul
push
sbb
ret
sub
inc
loop
sub
adc
hlt
mov
xor
pop
xor
aad
nopl
rcrb
and
and
dec
sarb
lods
movsl
cmp
cmp
sbb
jno
xor
ret
jns
jo
mov
int
pusha
cmpl
stos
cmp
lods
and
idivl
cld
cmpsl
aas
test
add
sbbl
inc
mov
mov
push
cmpsl
pop
dec
lods
push
cmp
loop
mov
mov
loopne
test
inc
int
popf
fsubl
sbb
je
or
sbb
push
es
inc
insl
adc
adc
dec
fistl
outsb
fs
inc
sarb
push
js
test
xchg
add
xor
ret
jle
and
sbb
or
inc
mov
fcoml
mov
mov
xchg
jbe
sbbb
add
jae
ljmp
or
lods
push
jbe
jg
or
cli
addr16
fwait
call
mov
xor
out
cmp
test
aam
pop
xchg
sbb
cmpsl
pushf
and
pusha
cmp
dec
loope
dec
mov
push
xchg
jnp
xchg
loop
inc
mov
pop
nop
movsl
add
jne
mov
shll
adc
enter
add
sbb
adc
insl
ljmp
je
sub
test
push
mov
outsb
pop
ret
or
daa
std
xchg
or
adc
enter
out
mov
cmp
xchg
push
cmp
repz
xor
xchg
mov
aam
pop
pop
repz
push
push
and
cmp
pop
testl
xor
add
test
repnz
cld
flds
inc
cmp
lret
movsb
xor
dec
jle
add
jb
xchg
out
icebp
dec
inc
push
aaa
add
in
jne
and
and
adc
jl
mov
sub
repnz
imul
jno
or
call
xchg
inc
insl
sub
push
mov
pop
and
ljmp
aad
cmpsb
mov
lret
shrb
and
jnp
jo
imul
cmp
jnp
lahf
lods
adc
cmpl
lea
sub
xchg
shrb
fstpt
mov
jne
dec
cli
or
mov
ret
xchg
sbb
leave
mov
lods
ds
jne
mov
mov
xchg
fucomp
cmp
push
in
mov
popf
clc
xchg
sti
loop
adc
stos
out
in
pop
out
in
test
sub
pushf
bts
cmp
push
lds
or
xchg
shlb
insl
clc
cli
mov
mov
incl
cmpsb
add
nop
outsl
loopne
fisttpl
xchg
mov
lock
out
int3
mov
adc
xchg
mov
lock
xor
mov
pop
das
and
ljmp
hlt
sub
lahf
clc
sti
scas
jb
cmc
xchg
loopne
dec
mov
push
loopne
xor
mov
frstor
mov
js
enter
sahf
mov
and
fdivrl
pop
inc
cltd
and
add
pop
pop
cli
sbb
jbe
xchg
dec
or
jecxz
vmovntps
clc
insl
mov
adc
adc
pusha
push
jg
jecxz
fimuls
movsb
loopne
and
test
mov
pushl
mov
in
adc
inc
sub
add
pop
mov
sar
sbb
lret
movsl
out
adc
pop
dec
adc
sub
inc
jne
lahf
rorl
inc
mov
jecxz
push
adc
jb
dec
mov
cmc
mov
push
push
jle
sahf
ds
testl
imul
ret
js,pt
clc
jp
mov
in
in
jae
sub
push
cmp
pop
cmp
and
out
fdivr
or
xchg
pop
push
in
xchg
sahf
push
inc
sbb
cmp
mov
shll
in
sub
pop
inc
hlt
jecxz
xor
push
repnz
inc
ret
enter
stc
xchg
push
nop
fstpl
xchg
inc
and
or
mov
mov
pusha
pop
aad
inc
jecxz
or
daa
cmp
dec
mov
sti
adc
sbb
cmp
lahf
cmp
inc
push
xorb
cmp
xor
xor
pop
aas
adc
sub
aaa
cmp
repnz
jp
cmp
or
stos
dec
ss
out
sbb
loope
push
adc
push
pop
xlat
call
add
xor
pop
sbb
repnz
mov
pop
iret
mov
dec
mov
xchg
scas
addr16
mov
je
sarb
pop
xor
mov
rol
fnstsw
xor
insl
fdivl
sub
sti
test
cli
mov
imul
sbb
xchg
out
jo
sub
loopne
testb
xor
fldcw
out
mov
lcall
ja
mov
scas
out
mov
dec
ljmp
lock
push
cli
fdivrl
loop
xor
rcr
not
xchg
flds
pop
and
pop
loope
xchg
mov
fstps
jle
js
or
das
lea
outsb
addb
cwtl
xchg
loopne
aam
pop
lret
add
cli
sbb
mov
pop
mov
insb
pop
mov
push
stos
pop
adc
lods
mov
and
xor
test
push
pop
cmp
jns
jle
nop
movsb
push
sub
pop
sub
jl
pop
rorl
aaa
pop
lods
inc
sub
cltd
loopne
lods
insl
and
lret
out
stc
mov
jbe
mov
push
enter
and
test
dec
mov
xor
pop
mov
mov
shr
push
mov
fldt
das
or
out
jge
out
bound
lahf
xor
pop
cmp
js
outsb
push
stc
dec
cmp
popf
enter
ret
pushf
in
mov
xchg
mov
insl
mov
sbb
mov
cmpsl
mov
out
xor
push
xchg
push
loope
jl
adc
pop
inc
lahf
jl
inc
jo
pop
cmp
enter
push
pop
fwait
jle
xor
shll
clc
dec
rorl
xor
sti
imul
adc
shrb
xor
out
fimull
add
pop
pop
icebp
mov
mov
mov
jle
adc
pop
dec
cmc
bound
pop
add
mov
sub
lret
clc
pop
cmp
xor
pop
dec
fmull
addr16
lahf
dec
movsl
loopne
or
inc
std
fcmovnbe
push
adc
push
outsb
adc
inc
call
jnp
xlat
inc
data16
adc
mov
loopne
arpl
and
mov
leave
adc
jle
ds
or
out
leave
dec
mov
or
rep
push
inc
mov
loope
out
xor
out
inc
movl
in
pop
cwtl
push
lods
fdivl
iret
fwait
js
sti
rcll
testb
add
cmc
and
jg
sub
lea
mov
xchg
outsb
stc
scas
pushf
and
jp
fcmovb
xor
or
sbb
adc
insb
mov
das
ljmp
in
aad
push
mov
lret
dec
int3
mov
push
add
mov
jl
bound
loope
inc
jg
cmp
cmp
loop
push
mov
aad
push
iret
test
imul
repnz
sbb
test
cmpsl
movsb
mov
test
xchg
jl
cmp
mov
fdivl
pop
fstps
aad
pop
adc
fs
pop
xchg
mov
std
scas
gs
jno
push
mov
xor
rclb
pop
aad
mov
in
add
pushf
cmc
pop
jne
mov
mov
jmp
add
sbb
inc
nop
pop
lret
bound
test
sub
inc
ja
cmpsb
xor
cmp
cmpl
or
lds
pop
xchg
es
fcomps
cmp
faddl
cmpsl
sbb
adc
sub
push
outsl
xchg
lods
inc
jo
adc
jl
cld
aam
inc
mov
movsb
mov
movsb
xor
inc
and
dec
fcompl
repz
shr
insl
adc
popa
mov
sbb
cmc
arpl
aam
jmp
and
jno
cmp
aad
cmp
mov
outsl
inc
pop
out
lock
mov
dec
cld
cmp
test
sbb
sbb
push
push
lods
xchg
mov
push
sub
in
jb
into
cmc
dec
sbb
jmp
adc
add
pop
dec
scas
pop
cmpsl
in
jge
lret
xchg
mov
dec
mov
fstpl
cld
in
add
mov
adc
mov
or
sbb
je
jge
iret
push
popl
std
outsb
xchg
inc
inc
adc
stos
nop
rcll
lret
in
sub
xor
aas
inc
push
sar
adc
push
and
iret
mov
xchg
add
jl
daa
push
pop
sub
les
cmpsb
jmp
dec
lods
roll
dec
ss
cltd
push
push
scas
jnp
in
pop
mov
lahf
enter
shr
sbb
pushf
pushf
bound
adc
outsb
dec
inc
fstpl
push
jl
mov
add
icebp
push
ss
jle
roll
push
lcall
inc
add
pop
push
cmc
lods
xor
repz
or
adc
data16
stc
dec
or
add
iret
es
dec
mov
scas
out
das
pop
into
cmp
ret
push
mov
mov
repz
jmp
sub
in
jbe
mov
and
int3
popa
rol
js
adc
jno
ss
mov
pop
in
pop
mov
push
int
sbb
xor
sbb
cmp
cs
aas
dec
stos
push
inc
outsb
lods
loopne
aas
sub
add
and
shlb
jo
pop
out
or
cmp
mov
cltd
jns
mov
out
mov
lock
mov
repnz
call
shlb
nop
cmp
xlat
sub
push
push
push
pop
push
mov
subb
push
pop
lahf
lea
into
mov
mov
and
sar
and
push
jo
jmp
jno
or
cli
repz
aas
mov
daa
bound
leave
pop
jno
fstps
mov
add
mov
loop
and
mov
mov
mov
ja
push
pop
popf
mov
push
inc
xlat
pop
cmp
pusha
hlt
jmp
cmp
adc
test
inc
sub
mov
popf
jecxz
sbb
fcoml
mov
subb
addl
test
std
xchg
xor
mov
xchg
cmp
sub
cmp
sbb
lret
cli
out
pusha
jbe
ret
stos
sahf
scas
mov
leave
and
insl
cmp
andl
adc
dec
iret
jecxz
pop
rclb
pop
xor
adc
push
iret
sti
out
sti
stos
aaa
and
add
sbb
adc
push
sar
jle
lea
pop
shl
daa
sti
xor
std
or
dec
mov
lahf
mov
dec
sub
push
cmpsl
cmp
push
icebp
add
shr
loope
or
aam
mov
clc
adc
and
add
lahf
pop
inc
cmpb
shl
das
addr16
rorl
mov
adc
pushf
sbb
fwait
xor
out
dec
xor
jmp
fwait
jns
mov
jmp
jecxz
hlt
mov
jo
cmp
in
cmp
pusha
jmp
push
dec
xor
std
mov
das
pusha
sbb
lahf
fiaddl
ret
shl
mov
lods
inc
stc
inc
test
cmc
mov
push
mov
cmpsl
fbstp
xor
cmp
stos
mov
addl
mov
cs
fisttps
jnp
xlat
or
add
sub
pop
mov
orb
fs
jp
add
pop
and
jle
cmc
push
sbb
out
xchg
mov
sub
ljmp
mov
mov
scas
inc
pushaw
stc
sahf
xor
mov
pop
fsts
mov
xor
and
je
fdivrl
and
addr16
inc
xchg
push
aam
sub
outsb
jecxz
push
jo
xchg
xchg
sarl
jge
cmpsl
ja
adc
addr16
out
sub
aad
dec
inc
mov
sub
cli
pop
push
push
jecxz
or
inc
adc
and
mov
test
xor
aaa
lods
stos
ja
adc
sbb
cltd
fbld
or
out
jb
pmaxub
loope
inc
xchg
pop
pop
jae
mov
jne
nop
les
es
or
negl
sbb
mov
xchg
xlat
sbb
adc
scas
or
addr16
inc
enter
inc
pop
in
ja
pop
add
mov
pusha
push
adc
xchg
mov
adc
imul
push
mov
jns
int3
mov
push
lret
adcb
add
lret
jb
ss
mov
adc
test
mov
imul
leave
inc
jp
ror
sub
and
inc
inc
add
or
dec
pop
mov
xor
lcall
pop
and
test
mov
sbb
jp
test
xchg
mov
stos
xchg
and
scas
jae
or
and
cltd
mov
jb
mov
fstl
int
mov
pop
push
and
jnp
mov
lods
aaa
fwait
cmp
mov
lret
mov
push
pop
pushf
add
movsl
subb
pop
lret
mov
clc
test
call
add
jns
and
in
loop
push
cmpsb
addr16
sub
lods
sub
pop
or
stos
pop
xor
mov
xlat
arpl
pushf
add
xor
ja
sarl
test
mov
mov
leave
mov
rorb
cmp
sub
pop
std
push
inc
fdivp
cmp
xlat
rcll
add
into
lcall
shr
out
cmp
shrl
sub
and
pop
cmpsl
stc
test
std
enter
rcrl
scas
sbbl
dec
addr16
xor
test
mov
jmp
stos
jmp
shrb
xor
xchg
xor
sbb
lods
xchg
mov
lods
inc
sarb
dec
stos
inc
adc
dec
inc
in
jno
stos
cwtl
mov
jmp
xchg
inc
adc
aam
iret
dec
sarb
into
sub
loopne
jns
jae
xchg
jle
std
and
sub
sub
arpl
sub
pop
mov
or
or
loop,pt
arpl
lret
cmp
cmp
in
lock
pop
arpl
fwait
pop
enter
xchg
or
mov
inc
cltd
outsl
xlat
jno
ret
mov
add
mov
or
cmc
stc
pop
jae
add
es
daa
xchg
lods
leave
rcll
pop
mov
mov
jmp
into
mov
ss
cli
jbe
mov
addb
pop
xor
add
jbe
outsb
test
ret
or
xor
inc
test
push
ret
test
jmp
add
fcmovnu
cmpsb
xchg
jg
clc
xchg
mul
lcall
xchg
out
sub
jecxz
adc
inc
xchg
xchg
mov
cmpsl
je
out
mov
arpl
dec
lock
adc
mov
cli
jecxz
push
pop
popf
inc
mov
or
fnsave
sub
jb
scas
sbb
test
in
mov
pusha
add
shl
push
rcrl
imul
addl
test
xor
pop
push
push
out
sbb
in
jp
fldcw
nop
mov
push
push
push
xor
loop
jnp
scas
pushf
push
mov
pop
mov
pop
out
imul
adc
jg
sbb
add
ret
test
pop
xchg
xor
pusha
loope
or
mov
mov
mov
sub
jmp
mov
sbb
filds
or
gs
cmc
ja
std
cmp
lret
mov
and
push
arpl
mov
mov
sbb
je
lcall
ret
out
fnsave
inc
fimuls
mov
cmp
jl
test
aam
adc
fs
xor
jecxz
aas
jmp
enter
cmp
clc
fs
pop
pop
mov
les
dec
test
fidivl
inc
add
xchg
dec
call
ljmp
enter
mov
jno
stos
outsb
add
add
push
push
xor
jle
sbb
sbb
std
push
dec
rcl
sub
sbb
mov
sub
rol
inc
cltd
xchg
clc
repz
outsl
das
bound
mov
jmp
les
movsl
inc
xchg
repz
cmpsl
pushf
insb
adc
sahf
icebp
out
fdivs
mov
and
push
jb
and
xor
xchg
pop
xchg
sbb
lods
aam
cmp
cli
cmp
repnz
imul
int3
mov
outsl
test
cwtl
cmp
sub
imul
cmp
dec
test
ljmp
mov
mov
inc
pop
add
xor
xor
dec
inc
cmpsl
lea
cmp
push
loope
pusha
std
lea
subb
inc
movb
loop
jne
mov
mov
push
pop
popf
adc
push
push
test
shll
or
push
sar
test
js
scas
cmp
dec
mov
int3
or
stos
dec
or
and
js
xor
mov
xorb
popa
call
add
subb
lret
xchg
or
cmp
pop
add
test
scas
loopne
push
push
dec
ficoms
jmp
adc
push
sub
lods
dec
xchg
xchg
pusha
cmp
aam
lahf
aad
fstl
sti
les
sbb
fstpt
ficoml
in
imul
pop
pop
ljmp
push
jae
mov
lock
xor
fisubrs
pop
mov
inc
pop
imul
pop
int
xchg
in
or
xchg
js
lcall
pminub
cmp
xchg
or
sub
lock
sbbl
lret
cwtl
into
xchg
inc
xchg
xor
mov
dec
xor
adc
mov
mov
sti
adc
dec
or
jae
test
movsb
das
imulb
fcoml
push
cmpsl
mov
cltd
sub
cmp
or
adc
inc
out
jge
and
jno
sub
dec
in
sti
adc
pop
aad
test
push
cmp
fstpt
nop
in
mov
or
push
add
fildll
mov
icebp
imul
push
jl
dec
adc
xchg
int
push
push
and
mov
push
pop
arpl
imul
prefetch
out
xchg
roll
repz
jno
test
pop
adc
dec
inc
dec
pushf
inc
add
aam
mov
imul
adc
movsl
add
push
lcall
and
xor
shrl
sub
inc
push
cmp
push
insb
push
sbb
fwait
popa
dec
inc
add
jnp
or
loopne
push
cli
lock
push
popa
mov
xchg
iret
mov
insb
mov
pop
add
shll
or
int3
mov
cmp
hlt
cmpsw
ja
fdivl
sub
adc
aam
pushl
sbbl
imul
fiaddl
pop
dec
shl
inc
cmp
outsb
adc
pop
jmp
mov
push
add
in
in
jo
jo
leave
jmp
mov
je
fistl
sbb
imul
insb
es
daa
fstps
imul
enter
imul
fs
cmc
xor
dec
push
js
stos
loopne
movsl
or
push
lea
repnz
sub
cmp
dec
inc
pop
negl
testl
mov
sbb
mov
js
loop
jl
sbb
ucomiss
leave
fwait
pop
cld
loope
insb
mov
insb
mov
les
lods
xor
xorb
insl
and
mov
loop
xor
sbb
cltd
dec
mov
les
add
adc
insl
sub
mov
pop
fadds
testl
jb
lahf
mov
icebp
push
and
fstpt
xor
mov
adc
les
out
mull
movsl
mov
aas
lcall
cmp
jo
jns
loop
dec
jmp
and
popf
sub
gs
or
std
shlb
lock
dec
outsb
cs
insl
das
scas
or
sahf
push
lcall
icebp
pop
das
cmpsb
adc
mov
mov
mov
cmpsb
jg
add
dec
nop
ja
push
std
call
mov
das
icebp
lahf
aam
sbb
adc
stos
pop
les
out
inc
xor
lock
dec
lods
xchg
sub
fwait
xchg
mov
add
gs
ret
dec
mov
cmp
cmp
push
pcmpgtw
and
add
mov
mov
lret
adc
xlat
push
rorl
inc
fsts
inc
sti
mov
dec
xor
orb
je
cld
inc
pop
jae
mov
les
mov
xchg
inc
pop
mov
cmp
pusha
inc
mov
cmp
dec
pusha
xchg
fnstcw
stos
dec
add
movsl
mov
cmpsb
pop
cmp
sbb
xchg
jb
cmpsl
negb
test
push
push
cmpl
cli
cmp
lret
sub
push
xchg
sarb
push
pop
inc
push
push
imul
ja
push
push
test
mov
in
stc
call
pop
sub
shll
sbbl
jp
jno
add
loopne
mov
mov
or
repnz
enter
stos
flds
fsub
mov
test
xor
cmp
sbb
sbb
sti
mov
adc
lds
mov
sbb
sbb
ja
and
cwtl
lahf
ljmp
sbb
cmp
xor
out
sarb
sahf
pusha
mov
imul
mov
inc
aam
push
ja
sbb
popa
and
mov
sub
outsl
in
movsb
adcb
mov
add
outsb
loope
rclb
jp
xor
fwait
xchg
aam
adc
popf
jmp
inc
cmp
lcall
aad
outsl
push
jns
fs
jl
stos
cmpsl
push
int3
adc
into
sbb
loop
shl
gs
imul
cmp
dec
push
jo
xchg
int3
popa
pop
xorl
mov
scas
fs
cmpl
jmp
call
sti
mov
clc
inc
fldcw
loopne
int
or
testb
push
adc
test
xchg
jns
je
popf
pop
dec
stos
aam
fildl
ret
push
mov
int
jecxz
int3
out
mov
sub
les
lret
aad
sbb
add
cltd
ds
jp
aam
fistl
test
mov
in
dec
xchg
notb
enter
or
xlat
pop
das
push
out
adc
and
mov
cmpsb
or
sbb
adc
rorb
add
and
push
imul
shrb
jp
ja
mov
stc
xchg
cltd
jae
loop
test
mov
iret
ds
jmp
es
fstps
xchg
nop
imul
adc
jmp
and
inc
aas
rcll
and
jg
dec
mov
cmc
jle
mov
mov
sti
or
push
iret
nop
aad
test
jmp
pop
mov
lock
aaa
insl
push
mov
sbb
aas
pop
jb
lock
int
sbb
iret
cwtl
pop
jns
inc
in
stos
lcall
push
xchg
rclb
jecxz
adc
lds
push
test
psrld
out
inc
movsb
mov
xchg
xchg
cld
sbbl
nop/reserved
aam
xorl
mov
aad
push
or
xor
push
lret
inc
xchg
mov
imul
fprem
int
outsl
das
data16
lcall
out
enter
leave
dec
adcb
add
outsl
dec
lock
push
shll
fbld
dec
js
xor
pop
ds
mov
or
andl
repnz
test
stc
sub
lock
in
loope
in
shll
inc
inc
call
pushf
or
enter
cmpsl
mov
adc
dec
xchg
jo
addl
jns
xor
jle
jecxz
aaa
data16
repz
rol
adc
sub
data16
jl
dec
data16
test
jmp
fstp
test
test
mov
xchg
sub
mov
fcmovu
and
hlt
jp
mov
and
cmp
aam
xor
mov
scas
icebp
ret
rcll
sbb
jns
jb
mov
aam
push
adc
inc
sub
es
push
inc
sbb
cltd
ja
mov
sub
and
das
cmp
int3
out
stos
jbe
mov
or
push
sub
hlt
jecxz
jg
insb
movsl
dec
lds
add
in
mov
and
addl
les
rcll
clc
xor
inc
adc
pop
push
icebp
jo
mov
int3
les
outsb
aaa
or
jle
xchg
fucompp
popa
sub
shlb
ja
mov
into
cmp
pop
xorb
addr16
jmp
jne
shl
ret
sbb
adc
dec
mov
cmc
les
mov
outsb
xor
movsl
pop
mov
or
push
xchg
mov
fcmovnbe
mov
outsb
mov
int
int3
pop
adc
fidivrl
pop
loopne
push
sub
xor
inc
add
repnz
dec
popa
movsb
icebp
icebp
push
cmpsb
enter
push
xchg
in
insl
or
mov
jp
jns
movsb
mov
out
in
imul
jecxz
push
cmpsl
xchg
nop
sbb
jl
stos
out
into
out
outsl
sub
xchg
mov
addr16
or
scas
lods
out
push
sbb
mov
scas
and
adc
nop
leave
and
inc
sub
bound
bnd
mov
dec
jp
rcll
in
into
xor
mov
call
add
out
insl
push
jb
add
into
rclb
dec
bnd
in
add
pushf
jns
ds
testb
xor
push
mov
ret
push
pop
lcall
mov
aad
cmp
movsl
int
aas
cmp
or
enter
arpl
insb
push
inc
push
mov
fdivr
movq
pop
push
xchg
flds
mov
sbb
std
add
dec
mov
xchg
xchg
push
xchg
jge
out
mov
mov
mov
jnp
pop
dec
jp
arpl
pop
xchg
or
jne
xchg
pusha
xchg
xor
call
cwtl
daa
pop
push
ret
es
jmp
mov
push
out
ss
jge
imul
sar
icebp
insb
mov
xchg
jmp
lea
push
in
leave
sbb
jbe
cmp
mov
mov
in
into
ss
mov
mov
or
in
rcll
insb
pop
and
or
mov
lds
jbe
or
fwait
mov
pop
jle
cli
cwtl
jg
std
inc
addb
jle
fcoms
push
lahf
daa
and
mov
add
cli
jg
mov
dec
push
inc
call
jl
mov
outsb
aaa
jl
mov
mov
movsb
in
add
sbb
iret
shl
arpl
push
xor
mov
add
add
pop
stos
daa
xchg
ljmp
pop
and
les
cmp
sbbb
sub
in
test
fisttpl
jge
mov
add
xchg
jb
stos
sbb
or
mov
repz
lods
dec
jp
jne
add
dec
enter
fsubrs
loope
js
aad
add
call
in
add
or
or
cmp
idivl
andl
cmc
aaa
cli
push
jae
ss
push
lahf
fwait
jmp
mov
xchg
push
or
pop
inc
lods
repnz
mov
adc
ss
jns
rol
les
lahf
jg
pop
add
inc
xchg
lret
and
sub
in
mov
stos
outsl
mov
dec
loope
arpl
in
into
pop
xchg
loopne
pop
and
cmc
lret
cmc
mov
inc
push
sbb
and
icebp
xchg
xor
insb
dec
mov
sarb
xchg
fisubrs
movsb
xchg
icebp
in
rorl
js
adc
stc
les
xor
loop
lock
stc
push
mov
jmp
inc
popf
xchg
cli
dec
scas
mov
leave
daa
sbb
and
mov
ss
and
dec
pop
das
xor
sub
jmp
orb
cwtl
lock
cmc
and
lods
ficoml
jo
mov
out
nop
push
ja
sbb
out
mov
mov
fstps
aaa
jl
mov
outsl
mov
repz
popf
daa
or
mov
xchg
and
insb
sbb
sahf
push
lret
fcoms
pushf
jge
rcrb
jmp
ds
jecxz
imul
test
sbb
push
and
sbb
enter
loope
jnp
sbb
cmp
xchg
mov
out
xchg
sub
popf
push
jmp
call
fildl
push
add
dec
addb
sub
int
arpl
mul
insb
icebp
cmp
sub
jge
imul
daa
push
mov
mov
fidivl
or
add
and
in
es
sub
dec
add
and
popa
dec
aas
pop
enter
mov
test
mov
out
sti
loope
and
lods
mov
add
mov
clc
dec
add
xchg
inc
and
insl
mov
popa
jge
sub
rorb
sahf
cltd
push
mov
lret
xchg
inc
xchg
adc
jo
push
and
inc
enter
ss
inc
mov
or
sbb
xchg
add
daa
pop
mov
rorl
or
mov
es
pushf
jg
push
and
lret
into
aaa
xlat
inc
pop
inc
jo
jae
div
dec
lods
mov
lcall
pop
cmp
cmp
or
lods
dec
xchg
je
and
sbb
icebp
jecxz
add
aaa
xor
test
orl
cmpsb
lea
popa
rolb
jne
xchg
pop
and
fs
repnz
xchg
mov
mulb
xchg
out
pusha
or
inc
mov
sti
pop
filds
adc
inc
es
pop
mov
ret
cmpsb
ret
or
cmc
sub
cmovnp
adc
cmp
enter
ds
mov
popf
ficoml
gs
xor
sbb
sub
inc
pop
pop
fld
xchg
cli
loope
pop
ljmp
ror
test
clc
push
fwait
testl
inc
mov
dec
pop
pop
inc
jp
push
sbbb
add
and
adc
xor
enter
adc
clc
lcall
scas
mov
mov
jecxz
jmp
inc
inc
xor
sbb
pop
xchg
push
test
sub
adcl
or
cwtl
loop
repz
xor
adc
daa
mov
out
adc
push
jnp
mov
fwait
jbe
sub
lcall
shll
repz
inc
push
int
or
sub
jb
imul
xor
inc
fisttpl
mov
lea
xchg
fcompl
mov
std
inc
xor
sub
sub
xor
push
das
jge
xor
dec
push
cmp
sbb
stc
divb
mov
push
cmp
jle
vpor
call
fildll
lds
sti
dec
add
or
pop
orb
lods
sub
xchg
or
xor
daa
push
lods
lods
adc
mov
xchg
lods
cli
xor
xor
or
jnp
jb
xor
inc
rorb
cwtl
aas
mov
stc
xlat
shlb
sub
cmc
repnz
mov
lahf
mov
pop
mov
xchg
adc
inc
mov
mov
int3
pusha
push
fcomip
fstl
sbb
ja
stos
inc
les
push
xor
mov
ficoml
inc
push
in
and
stos
mov
and
insb
xchg
popf
hlt
xchg
mull
mov
mov
cmp
iret
jb
bound
jb
je
and
imul
inc
in
dec
inc
mov
addl
leave
or
xor
jo
ja
arpl
adc
push
sbb
jb
sub
dec
repnz
stos
or
mov
in
or
inc
in
cmc
xor
in
add
pop
in
push
or
mov
movsl
test
or
push
loope
cmp
popf
mov
inc
sub
pop
pop
sub
jl
mov
pop
and
jne
movsb
inc
scas
pushl
pop
mov
stos
mov
cltd
fwait
aad
lods
xchg
pushf
mov
jmp
push
push
rcll
jmp
shll
xchg
xchg
mov
cmc
mov
jmp
xor
data16
xchg
cltd
daa
push
pop
repz
dec
call
push
push
xor
sahf
jecxz
stc
lock
lahf
into
mov
js
jne
mov
adc
mov
loop
imul
add
jg
fwait
rcrb
inc
filds
les
call
sub
imul
pushf
jns
or
in
jb
mov
jbe
inc
out
jae
icebp
call
das
adc
mov
adc
jmp
jns
jne
or
pop
outsb
dec
adc
jmp
in
adc
repz
fidivl
xchg
shll
decl
aad
cmpsl
mov
or
dec
mov
subl
add
fwait
xchg
popf
mov
js
jge
mov
aaa
pop
mov
cli
sub
lock
xchg
imul
push
or
mov
or
shll
repnz
xchg
ret
pop
lahf
mov
inc
mov
pop
sbb
mov
pop
jle
xchg
notb
push
lret
addr16
cmp
adc
into
adc
js
sbb
cmp
out
jne
dec
lods
inc
in
and
sbb
xchg
les
sarb
mov
es
cmpsl
cmp
xchg
dec
inc
rclb
sub
loope
adc
fs
es
dec
btr
ret
clc
dec
lret
xlat
mov
jne
and
imul
cltd
popf
add
data16
mov
lea
and
out
xchg
xchg
adc
or
inc
fmul
in
inc
movsl
or
add
fstpl
lds
pop
mov
imul
push
jmp
or
sub
jb
adc
imul
xor
push
sbb
shr
aad
xchg
mov
pop
lock
test
push
xchg
std
setne
mov
hlt
or
or
std
ret
sbb
push
sbb
sub
or
mov
mov
insb
int
ds
mov
dec
loope
inc
sahf
mov
and
arpl
out
push
add
stos
or
mov
sub
add
les
add
leave
loop
popf
out
popf
jno
push
in
mov
fdivp
movsb
pop
and
xchg
add
adc
mov
lret
and
jle
sbb
jl
scas
scas
inc
xchg
and
dec
add
icebp
test
repz
rcrb
sbb
jae
jg
xor
sbbb
and
dec
out
neg
popa
stc
daa
dec
adc
iret
mov
mov
dec
inc
lahf
pop
les
push
addr16
lods
sbb
cmp
gs
cld
test
je
fnstcw
mov
lea
jns
dec
push
dec
not
mov
lret
jecxz
repnz
ret
imul
adc
stos
dec
jl
stc
sbb
and
arpl
xor
negb
xchg
loope
sbb
out
add
inc
adc
inc
and
lds
sarb
test
mov
sub
mov
or
adc
rcr
jmp
movsl
jo
jne
or
imul
sahf
insb
int3
mov
add
in
je
xchg
into
and
pop
lret
and
negl
lcall
lret
outsb
loope
lret
mov
push
xlat
jb
bound
sahf
cmc
pop
adc
mov
and
insb
test
outsb
mov
dec
mov
daa
aad
lret
xchg
xchg
scas
icebp
pop
pop
loopne
std
pusha
sub
or
mov
insb
push
dec
js
popa
arpl
add
andb
xor
mov
inc
scas
and
pop
out
xchg
push
pop
mov
jbe
pop
js
pop
jecxz
jl
fdivrl
adc
or
lods
or
lahf
cwtl
dec
mov
call
imul
sbb
inc
es
pushf
mov
xchg
push
fcomi
lock
push
lret
lods
fisubrs
and
jno
or
pminub
xchg
xchg
pop
pop
jne
add
aas
add
mov
add
sub
mov
mov
imul
xchg
mov
aad
mov
pop
sbb
mov
inc
and
cmp
sbbl
and
loopne
dec
mov
lahf
sbb
mov
mov
popa
jae
lea
fisttpll
aad
cmpl
je
sti
push
add
adc
push
adc
jecxz
add
dec
fwait
sbb
repnz
out
data16
cwtl
shlb
xor
in
mov
jne
jns
inc
jno
jne
xchg
xchg
jmp
dec
add
adc
das
mov
sbb
leave
jnp
push
mov
sub
fldcw
sub
dec
push
mov
inc
pmullw
cmp
pop
dec
inc
cmpsl
sbb
mov
int
lods
cmc
push
stos
xorl
xchg
loopne
loopne
dec
orl
push
sub
xchg
inc
or
and
leave
mov
scas
xor
sbb
dec
xor
or
das
in
push
out
sti
adc
and
push
cld
push
or
mov
mov
inc
fnstsw
ds
pop
jl
push
inc
add
inc
or
cmp
jp
pusha
bswap
mov
xchg
jge
sahf
sbb
popf
into
lret
or
xchg
or
fidivs
xor
push
les
test
adc
mov
js
movsl
jo,pn
gs
push
addr16
push
inc
mov
mov
xor
xlat
dec
lds
inc
lock
inc
nop
loope
jp
fisttpl
rcr
push
cmpsl
pop
mov
fsts
out
jge
pusha
push
pop
iret
mov
std
dec
xchg
jmp
icebp
cmp
cltd
pop
xchg
xor
add
xchg
dec
jne
xchg
sub
or
rolb
xchg
xor
jle
fldl
cmp
in
scas
mov
fsubrp
rcll
aas
inc
fwait
sbb
sbb
inc
ja
aad
jg
cmpsl
aad
push
fsubs
sbb
sub
sbb
add
outsb
cld
es
aad
adcl
mul
pop
repz
icebp
lods
fstl
ffreep
adc
add
and
add
push
push
enter
dec
aam
fxam
push
outsb
sub
pop
fstp
push
cmc
xor
lahf
xor
fdivrp
mov
push
out
jp
decb
inc
jne
and
jne
cmpsl
popa
push
out
cmpsb
iret
jne
adc
out
outsb
incl
jnp
lea
mov
jnp
cmp
mov
insl
mov
test
jl
xor
out
xchg
adc
lock
and
pop
jle
ds
pop
cs
adc
insb
pop
adc
mov
xchg
sbb
mov
das
cld
mov
inc
or
xor
fmuls
popf
ret
mov
or
xorl
lea
add
leave
ffree
or
out
notb
cli
dec
into
sub
shll
out
mov
push
inc
and
jmp
sub
in
dec
bound
es
push
ja
out
and
aam
sbb
pop
jmp
ja
cmp
add
sub
xchg
fmuls
flds
xchg
adc
jbe
pop
je
pop
xchg
shll
das
jp
cmp
push
mov
mov
das
push
out
sub
mov
lret
test
jns
data16
imul
aas
sbbl
lcall
pop
repnz
jp
or
adc
inc
daa
js
cmp
imul
scas
mov
outsl
sub
fdivs
cmpsl
xchg
xor
pop
std
fmul
push
or
test
sub
pop
or
mov
lret
or
insb
dec
push
mov
fisttps
push
sub
mov
pop
orl
adc
cmpsb
or
push
popf
xchg
mov
dec
fdivrl
pop
xchg
sub
push
cs
push
or
pop
imul
scas
hlt
repz
lods
push
cli
leave
clc
or
lds
inc
push
lods
in
lret
popa
xchg
clc
mov
pop
mov
pushf
mov
sbb
fiaddl
xchg
push
rclb
stos
dec
addl
insl
mov
rolb
add
test
scas
mov
inc
ljmp
sub
lahf
imul
das
mov
lahf
stos
notb
and
dec
lods
xor
pop
dec
xor
or
dec
fisubrs
cmpsb
mov
cmpsl
adcb
or
xor
arpl
dec
add
jb
pop
pop
mov
outsb
or
testb
push
push
jge
nop
inc
mov
icebp
test
icebp
cwtl
adc
mov
fldcw
jbe
pop
popf
xchg
cmpsb
xchg
test
xor
lret
and
push
fsub
bound
pop
mov
jns
pop
ss
mov
mov
mov
shrb
out
int3
add
xchg
cli
mov
lcall
ret
xor
ret
sbb
inc
sti
into
jns
fldcw
xchg
jnp
push
lahf
inc
jecxz
mov
scas
mov
mov
and
pushf
dec
mov
jno
aam
fcmovnu
cmp
sub
adc
adcb
repz
xchg
scas
aad
cmp
ja
loop
mov
dec
mov
xor
out
mov
stos
roll
jns
pop
or
sbb
inc
inc
fildl
lock
cmp
lret
inc
das
cs
cmp
sub
js
or
adc
lods
and
xchg
mov
push
ret
arpl
inc
mov
jnp
out
icebp
and
adc
out
out
add
pop
inc
lock
xchg
arpl
adc
adcb
das
stos
push
inc
add
xchg
sbb
divb
and
rcrl
mov
mov
test
notl
pop
icebp
out
pop
inc
aad
sub
fsubr
mov
js
ret
ja
push
and
jmp
rcrb
xchg
imul
call
push
cwtl
add
mov
pand
push
mov
ja
fwait
call
mov
jle
orl
es
sbb
push
popa
jecxz
mov
xor
pusha
icebp
mov
hlt
inc
test
fisubrs
cltd
movsb
adc
cmp
or
lss
jl
adc
dec
lds
mov
pusha
and
aaa
jae
add
loope
jne
or
jae
ret
ja
iret
pop
inc
outsb
mov
out
sub
test
stos
mov
mov
xor
or
sahf
mov
jae
fiaddl
lahf
sbb
add
push
lock
and
mov
push
or
shlb
out
push
jo
jge
arpl
push
xchg
sub
ret
push
mov
ret
pop
push
lds
aam
aam
sub
adc
cmp
outsb
fsub
mov
repz
cmp
stos
cltd
push
cld
rol
les
mov
mov
and
xor
push
jecxz
icebp
fists
imul
mov
cmp
scas
lods
or
pop
lcall
inc
lret
xor
sti
inc
in
loop
fadd
aas
shl
lods
sbb
daa
or
mov
and
push
add
aam
mov
das
adc
into
sbb
mov
aaa
test
add
jae
sbb
pop
add
sbb
fnstsw
sub
and
mov
fistps
ja
xchg
inc
jne
enter
mov
xor
add
add
mov
xchg
leave
mov
jl
and
repz
jo
fwait
push
int
rep
pop
pop
and
jmp
push
push
insb
inc
push
into
xchg
xchg
addr16
sub
jbe
dec
add
mov
fsubl
pop
pop
mov
call
jmp
sub
sub
xchg
sub
or
ret
inc
fnstcw
rclb
andl
je
test
pop
ss
ret
out
cli
push
lret
pop
mov
push
xor
cmp
adc
enter
mov
sub
sar
sub
push
or
add
sbb
jns
mov
into
stos
cltd
aas
imul
pop
pop
push
dec
or
out
cmp
iret
repnz
push
and
and
xchg
ud1
fsubrl
adc
xlat
dec
cli
add
xchg
inc
jno
inc
or
add
xor
cwtl
push
out
inc
mov
xor
outsl
arpl
outsl
sti
sbb
xorb
mov
out
adc
xor
inc
add
lods
mov
clc
std
enter
xchg
movsl
stos
mov
push
into
ds
adc
mov
icebp
dec
cltd
push
push
ljmp
push
mov
sub
xchg
es
add
and
test
in
ss
adc
mov
dec
mov
jae
mov
lcall
and
cs
addr16
repz
or
inc
mov
adc
cmp
jbe
loop
push
paddq
add
out
in
jae
pop
icebp
jne
aam
sub
mov
pusha
out
pop
ror
add
inc
aaa
and
sarb
loop
addr16
adc
ret
enter
fisttpl
test
repz
insb
jo
cmp
and
bound
icebp
jecxz
cmp
arpl
adc
std
mov
jge
mov
lret
stc
sbb
inc
das
xor
cmpb
test
lods
sub
or
mov
bound
fadd
and
xchg
xor
scas
push
dec
fisttps
rorl
imul
xor
add
frstor
stos
rclb
xor
sub
xor
jle
inc
mov
push
lahf
orl
lods
ret
inc
xchg
movsb
mov
hlt
xchg
or
out
ss
cltd
scas
dec
outsl
scas
fnstsw
lods
jns
in
cmp
adc
and
cmp
xchg
pop
test
jp
jge
dec
repnz
aas
xchg
clc
adc
lea
fnstsw
pusha
out
jb
bound
in
or
andl
cmp
mov
or
dec
lods
or
jno
or
das
ret
notl
lcall
out
xchg
cwtl
addr16
dec
jp
mov
push
imul
lods
inc
dec
lods
cmpsl
xchg
pop
rcr
push
jno
sub
sub
jno
jp
mov
xor
repz
add
orl
ss
out
jmp
mov
mov
adc
ret
xchg
mov
icebp
jbe
xchg
fwait
xor
cld
jecxz
jecxz
xor
lods
mov
mov
in
push
aad
pop
shrl
cld
in
sub
push
add
mov
sub
lcall
mov
and
xchg
add
jae
or
xchg
pop
inc
pop
cmp
sti
push
fstpt
dec
imul
push
cmp
leave
mov
cli
cld
pop
nop
fstp
and
jg
das
lret
in
dec
fidivrl
addr16
sbb
dec
mulb
pop
mov
jno
dec
mov
cwtl
push
adc
sub
mov
sub
mov
les
gs
cmpsl
aaa
cmpsl
aam
into
fildl
jb
notb
adcl
pusha
int3
xchg
fsts
mov
mov
insl
xor
cmpsl
lret
subl
mov
adc
repnz
push
mov
les
jns,pt
push
cmp
js
mov
pop
test
in
mov
and
adc
outsb
or
loope
imul
pop
sbb
ret
mov
lcall
inc
pop
and
xchg
ret
aaa
adc
movsl
int3
fisubrs
mov
stos
addr16
and
je
push
dec
sub
repnz
leave
inc
outsl
addl
adc
in
mov
xor
or
stc
mov
fdivrs
pop
fwait
jbe
movsl
push
or
and
adc
adc
or
or
cltd
mov
cmp
adc
mov
cmp
mov
xorb
je
cmp
out
sbb
call
inc
stos
jb
js
add
fildll
xorl
loopne
dec
push
xor
call
add
and
outsb
out
ds
in
pop
sbb
cwtl
pop
and
nop
mov
jnp
cmp
sub
test
addl
xchg
sbb
scas
lahf
stos
sarl
aas
mov
and
rorb
arpl
ja
mov
jo
roll
andl
xchg
insb
cli
daa
fisttpl
dec
ror
push
shll
cmp
bound
test
sbb
cmpsb
aam
push
inc
ret
jmp
ds
cwtl
faddl
jo
insb
inc
ds
iret
sbb
mov
add
adc
pop
rol
out
push
and
xor
dec
bound
and
push
int3
data16
lds
pop
add
sub
dec
pop
mov
rcr
mov
dec
and
push
pop
mov
das
insb
icebp
scas
aaa
cltd
scas
adc
and
xchg
jns
ds
mov
inc
cmpsb
ljmp
cmp
mov
mov
or
sahf
jecxz
dec
repz
pop
sub
mov
sbb
push
movsb
adcb
out
cltd
dec
loope
cmp
mov
and
call
push
divl
enter
xchg
cwtl
insb
roll
jbe
or
les
les
pushf
bound
pop
stc
enter
in
outsb
pushf
cmp
addr16
cmp
mov
sub
and
xchg
shrb
cmc
lahf
icebp
sbb
push
iret
jnp
sbb
pop
call
xor
lret
and
inc
stc
stos
pop
insl
dec
loopne
mov
sbb
pop
ds
cwtl
mov
mov
icebp
push
cmc
and
mov
pushf
adc
jmp
inc
xor
shlb
xor
sub
sahf
cwtl
cmpsl
cmp
sbb
cltd
xchg
push
mov
add
xchg
insb
mov
insb
aaa
push
inc
push
sbb
inc
push
aad
test
sbb
xchg
ret
out
cmp
and
lea
push
inc
or
imul
inc
mov
lock
nop
xchg
push
xchg
or
mov
stos
mov
push
fdivrl
cmovge
jnp
sbb
int
xchg
mov
scas
inc
das
sub
shlb
xor
cwtl
loope
mull
or
mov
cli
push
fcoms
and
or
xchg
jecxz
xchg
pop
sahf
idivb
or
lds
xorb
cmp
pop
fs
stos
sub
pop
cmp
push
jmp
leave
adc
ss
test
xor
imulb
aam
movsl
xchg
fcomps
in
test
dec
xor
push
mov
popa
ja
rolb
aad
ja
jnp
outsb
push
std
xchg
fstpl
jbe
sub
in
pop
cmp
push
mov
roll
in
push
movzbl
jbe
mov
sbb
cli
mov
xchg
arpl
inc
xchg
ret
stos
xor
fs
dec
xchg
repz
je
jo
sub
je
popf
sbb
dec
mov
enter
add
inc
jmp
pop
mov
mov
mov
inc
sbb
xor
out
or
mov
pop
jbe
sbb
sbb
pop
js
xchg
leave
fdivs
pop
imul
mov
scas
adcb
xor
mov
rcrl
push
pop
and
sbb
arpl
mov
jp
push
mov
pop
adc
fcoml
cld
lcall
inc
cmp
xchg
dec
or
xchg
pop
xor
shl
adc
arpl
xchg
notb
dec
push
rorb
fistpl
dec
lock
mov
cs
adc
mov
xor
pop
sbb
mov
jne
adc
fsts
shl
fsubl
adc
sbb
fwait
pop
repnz
xor
mov
jecxz
sbb
pop
das
ljmp
aad
pop
pop
mov
cmp
aaa
inc
int3
inc
out
fstl
jge
xor
xchg
push
scas
jo
test
test
scas
pusha
fldt
arpl
pop
xchg
lcall
sbbl
int
pusha
insl
and
ror
fsubrs
pop
pop
mov
loop
mov
call
or
mov
sbb
mov
dec
inc
mov
into
fcoml
pop
mov
jo
out
sub
lahf
mull
ja
aas
inc
sbb
cmc
fwait
mov
cli
adc
xchg
xorb
inc
fsubrs
cmp
dec
inc
clc
out
insb
mov
jle
mov
aam
dec
jns
sbbb
cmpb
push
dec
iret
mov
sub
ret
adc
push
pop
fs
dec
pop
into
adc
popa
dec
jbe
push
dec
mov
shr
sub
push
cli
in
ss
sahf
lret
call
cmp
cwtl
dec
insl
cmpsb
jp
lds
sbb
sub
pop
push
push
ja
mov
jle
pop
adc
cmp
cmp
repnz
xchg
and
sub
outsb
add
add
xchg
cmp
addl
jmp
xchg
mov
sub
add
add
or
icebp
or
push
xor
out
inc
pop
add
fadd
lods
or
call
dec
mov
cmp
mov
xchg
xchg
pusha
mov
into
xor
inc
pusha
mov
dec
sbb
push
test
rcr
lret
imul
jnp
sub
xchg
cmp
push
or
rcr
ret
popf
sub
icebp
xchg
lret
stos
idivb
pop
movsl
inc
dec
popa
push
jecxz
sub
jbe
scas
or
cmpsl
test
jno
mov
fstl
mov
pop
jo
repnz
mov
ja
daa
adc
mov
dec
mov
xchg
popa
mov
pop
jns
gs
mov
fisubrl
aas
adc
jnp
movsb
int3
test
and
aam
cli
stc
inc
xor
sbb
push
int3
adc
xchg
ja
sub
js
ljmp
lret
and
sub
cmp
scas
fimuls
jne
xchg
push
and
daa
inc
push
notb
sbb
mov
dec
mov
dec
shrb
fnstenv
sub
loop
pop
les
inc
icebp
sti
pop
dec
test
outsb
adc
add
fmulp
repz
call
dec
out
xchg
add
jg
sbb
push
add
ja
movsl
lock
sbb
adc
push
popf
roll
xor
xor
mov
mov
aaa
orl
je
aaa
mov
push
aas
cmp
lret
dec
cmpb
ror
xor
mov
bound
inc
iret
xchg
push
cmpsb
imul
cmc
aam
shr
lods
xor
jnp
pop
cmpsl
call
push
or
sub
lret
jg
arpl
fnstsw
aaa
outsl
or
cmp
cmp
stos
test
adc
mov
dec
cltd
loope
xchg
inc
mov
and
sbb
or
mov
xchg
sub
mov
ret
jecxz
fildll
push
das
inc
mulb
cmpb
mov
mov
add
add
in
movd
push
adc
mov
inc
jp
les
outsl
icebp
xchg
notb
loope
sbb
daa
test
stos
nop
jae
add
push
dec
or
hlt
mov
fdivs
enter
pusha
dec
and
push
xorl
inc
clc
push
and
inc
cld
xor
or
test
mov
repnz
fmulp
xchg
or
dec
pop
add
mov
cmp
js
into
adc
leave
fsubl
inc
stos
fbld
xchg
push
push
mov
popf
dec
nop
stos
inc
mov
pop
sbb
dec
and
mov
pop
stos
and
mov
aad
mov
sub
sbb
test
and
mov
jl
hlt
cmp
cs
push
stos
cmpsl
aam
movsl
in
inc
pop
pop
jge
pushl
mov
dec
mov
push
pop
xchg
iret
push
cwtl
repz
and
xchg
sahf
sbb
jp
sub
jge
mov
arpl
ret
push
and
fwait
movsl
jne
jnp
xchg
push
test
or
cld
clc
into
mov
jno
scas
aaa
jae
imul
lcall
popf
inc
lds
adc
leave
mov
lret
fdiv
inc
int
cltd
jmp
shrl
test
mov
scas
push
mov
lret
or
push
outsl
push
cmp
mov
xlat
cmp
in
cs
dec
xor
sti
adc
shr
pushl
popa
fnstsw
dec
cmpb
rcl
jns
or
sbb
xor
xor
arpl
rcll
adcl
cs
das
xor
jae
aas
mov
xor
inc
inc
pop
stos
sub
cltd
mov
lahf
xchg
xchg
inc
xchg
mov
sbb
mov
dec
and
mov
and
ljmp
xchg
inc
fcomp
popf
mov
outsl
hlt
jmp
shll
push
mov
loope
stc
daa
cmp
pop
and
or
test
mov
dec
add
ds
int3
mov
dec
ret
and
daa
xor
movsl
and
mov
mov
es
add
icebp
arpl
jns
mov
jno
add
pop
push
inc
jo
mov
push
jg
push
flds
mov
ja
xor
add
pop
out
test
jnp
test
jge
repz
jno
xor
inc
xchg
mov
pop
fstpt
xchg
fnsave
mov
fnstsw
jmp
dec
hlt
push
lods
adc
cmp
jbe
add
pop
add
fs
adc
adc
cmp
pushf
hlt
inc
inc
repz
push
out
jo
ja
sub
mov
jbe
sbb
inc
dec
add
insb
add
mov
dec
push
ja
ja
fnstsw
sub
leave
cmp
addb
stos
mov
hlt
xchg
mov
mov
jle
push
jecxz
xchg
add
ja
scas
mov
push
add
jbe
dec
incb
push
jl
jo
mov
loopne
pop
sub
hlt
push
or
arpl
jns
sub
popa
ss
mov
out
jecxz
mov
mov
fs
jb
in
sub
aad
mov
ja
cmp
cmp
sbb
fisttpll
jge
lahf
mov
mov
call
push
into
xchg
int
cs
fisttpl
push
dec
cld
mov
ds
dec
sbb
cs
imul
inc
inc
jbe
cmp
aad
mov
lcall
iret
inc
dec
lahf
shlb
mov
lds
or
stos
pop
popa
dec
push
jo
pop
aas
cs
and
sub
pusha
aas
pushf
pop
pop
fyl2xp1
movsl
jne
lock
fsubrl
mov
inc
push
stos
movsl
outsb
out
add
outsl
sbb
lods
xor
ss
xchg
das
sub
mov
in
adc
insl
or
jno
cwtl
outsl
cmpsb
pusha
hlt
movsb
sbb
fldt
scas
lods
xor
push
inc
mov
and
pop
pop
loop
jns
in
dec
movsl
fidivrl
cwtl
test
inc
fwait
ljmp
add
lcall
ds
clc
stos
sbb
push
sbb
cld
outsl
outsl
jmp
cmp
and
outsl
popf
xor
out
pusha
out
enter
pop
jo
push
ficomps
adc
inc
mov
xor
out
pop
push
jns
xor
xchg
cmp
scas
aaa
jmp
mov
sub
push
mov
xor
dec
push
mov
push
rclb
lods
inc
out
test
mov
movsb
int
fidivrl
adc
mov
and
pop
addr16
sbbb
xchg
mov
push
nop
jne
out
xchg
xor
movsb
push
xchg
sbb
and
mov
adc
das
push
rol
sbb
dec
add
outsb
out
cmp
and
mov
adc
pop
imul
mov
cli
insl
aam
int3
dec
aad
xor
stos
bound
mov
in
or
pusha
lret
aas
aad
pop
cmp
xor
xchg
cmp
mov
dec
cmp
pop
add
fstpt
jnp
jl
std
dec
fmuls
push
outsb
in
sub
sbb
pop
sub
mov
pop
bound
sti
fdivrl
int
dec
fcoml
xchg
add
inc
je
repz
add
add
mov
in
iret
repz
mov
mov
outsb
pop
dec
add
or
aad
mov
push
mov
pushf
sbb
loope
dec
inc
jbe
sbb
call
imul
shrb
xchg
pushl
sbb
adc
inc
mov
adc
sbb
rolb
pop
mov
pop
test
cmp
shll
jnp
and
and
sahf
fbstp
das
add
clc
pop
and
fs
fcos
repz
out
push
and
jae
mov
inc
std
dec
push
mov
jecxz
pop
cmpsb
lea
iret
xchg
add
xor
test
xor
fwait
xor
gs
fwait
cltd
mov
decl
cmp
lods
testl
sbb
pop
fsubl
mov
gs
rcl
mov
mov
cmpsl
mov
xor
mov
aaa
jns
jecxz
sub
jl
jnp
outsl
loopne
rcrl
mov
fmuls
push
cmp
and
cli
xlat
ret
inc
push
sbb
imul
fcmovbe
js
testb
popf
cld
dec
inc
addr16
pusha
xchg
push
pushf
cmp
fldl
out
push
cmc
add
xor
inc
sbb
dec
xchg
daa
inc
xchg
jnp
pop
test
shl
and
inc
int
cwtl
fdivrp
jp
add
cmp
jns
cs
cmp
call
shrb
cmpl
jo
addl
int
fisttps
out
loop
pop
push
iret
inc
sub
cld
vpminsw
pusha
and
out
lcall
mov
sbb
jle
jge
add
jl
scas
xorb
lahf
cwtl
hlt
jmp
jecxz
jp
mov
dec
push
mov
or
pop
pop
push
jnp
daa
sub
lock
fisttpll
pop
std
leave
pop
leave
xchg
int3
mov
leave
mov
mov
stos
xor
and
inc
mov
lods
or
fadd
fsubr
clc
cs
mov
inc
js
sub
xor
iret
xchg
lods
push
movsb
pushf
int
scas
mov
and
rcll
mov
jmp
pop
mov
call
sbb
cmp
sahf
js
or
sbb
or
cltd
call
or
testb
jne
mov
pop
int3
push
xchg
adc
xor
arpl
loopne
ret
sub
repnz
mov
mov
js
push
bt
sub
xor
sbb
xchg
bound
mov
xchg
dec
in
push
fsub
scas
jae
int
inc
repz
test
movsl
adc
in
pop
jb
lock
lahf
push
jl
xchg
sub
inc
out
shl
mov
cmp
push
mov
js
and
lcall
mov
test
out
xlat
int3
outsb
les
jno
dec
clc
fiadds
mov
inc
fsubl
aad
or
out
sub
insb
jp
mov
and
xlat
xchg
clc
cmp
push
decb
xchg
repnz
lret
push
and
outsl
cmp
mov
or
sub
ret
decl
mov
jmp
xlat
mov
in
sub
jb
aas
push
fisubs
cs
mov
mov
mov
mov
imul
cltd
dec
out
add
sar
fisttps
outsl
push
ljmp
cwtl
inc
jns
push
imul
mov
jno
fcoms
push
cld
mov
int3
daa
lea
aas
adc
pop
jl
fs
xchg
in
lea
xchg
cmc
xchg
fcomps
into
cmp
in
sbb
pusha
xchg
mov
ficoml
and
out
lcallw
test
xchg
loope
outsb
xor
xchg
cld
xchg
js
jg
idivl
repnz
mov
cs
pop
fmul
mov
subl
mov
in
aas
stc
daa
sahf
in
loop
mov
inc
mov
stos
in
lea
or
test
sbb
jae
into
leave
imulb
jge
sbb
push
add
xchg
rcll
insb
test
scas
mov
inc
mov
fdivrp
js
dec
mov
push
in
mulb
jg
imul
ds
cmp
notb
leave
nop
inc
cmp
or
pusha
lds
mov
or
add
loope
mov
std
pop
les
addl
fbstp
xlat
enter
jnp
stos
and
push
pop
xchg
mov
cli
rcrl
or
push
mov
shll
into
aam
mov
stos
jl
mov
test
push
dec
cltd
fidivl
negb
sub
iret
cmp
sarl
mov
data16
insb
mov
or
xor
sbb
sbb
jo
cmp
insb
jp
mov
movb
push
cmp
jl
lret
cmp
fnsave
lods
frstor
jle
push
int3
and
cmp
jo
jg
mov
enter
push
cmp
and
mov
mov
add
hlt
add
mov
xchg
mov
cmp
in
adc
leave
loop
daa
shll
imul
pushf
inc
cli
sub
sub
sbb
mov
cmp
lea
das
and
outsb
jo
mov
imul
adc
push
mov
adc
mov
and
lahf
lds
movl
mov
aaa
add
jae
pop
scas
fnstenv
or
lahf
inc
sub
xor
ret
cmpsl
jb
ja
or
mov
fnstenv
cld
mov
lea
or
pop
mov
mov
fisttpll
mov
call
lods
push
popf
in
sbb
jmp
sbb
xor
mov
inc
enter
mov
aas
xorb
xlat
pusha
sbb
add
stos
fbld
sub
stc
leave
push
lret
mov
rorl
xor
xchg
insb
push
sub
rorb
pop
pop
xor
lock
sub
jb
or
xor
fmull
jp
fstpt
fcmovnbe
enter
pop
lret
je
lea
pop
cltd
bnd
sbb
aam
test
addr16
push
dec
aad
std
pop
xor
es
ja
fidivs
adc
push
fildll
mov
sub
ret
sbb
fcomps
movsb
jp
add
out
in
add
pop
lock
scas
scas
adc
test
xchg
fildl
in
inc
mov
popa
stos
adc
sub
movsl
orb
test
mov
inc
out
adc
cmpsl
icebp
clc
xchg
jle
ss
mov
jge
ret
pop
mov
add
je
jns
aad
addr16
sbb
or
or
mov
test
scas
mov
mov
mov
fsubrs
or
andl
xchg
inc
xlat
sti
std
inc
in
mov
jb
xchg
inc
fxam
out
sub
arpl
cwtl
lock
and
jne
xchg
cs
jns
push
xor
adc
cmp
mov
imul
jmp
xchg
mov
inc
pop
and
jae
fsts
push
jno
cmpsl
shr
mov
mov
add
fucom
mov
daa
adc
jmp
cmp
push
xchg
ja
fwait
pop
in
and
xchg
test
cli
ss
sbb
pop
movsl
and
scas
cmp
push
and
inc
loope
xchg
xchg
js
adcl
inc
push
xlat
dec
sbb
adc
cmp
xchg
outsl
dec
rorl
jae
jae
rorl
mov
in
test
pop
inc
push
xchg
rorl
pop
outsb
and
pop
call
mov
sub
sub
jle
pop
and
inc
add
adc
mov
les
popa
pop
inc
cltd
mov
out
push
mov
or
out
xlat
frstor
jno
iret
add
ss
ret
mov
mov
mov
out
cld
adc
mov
push
test
scas
adc
lock
push
add
mov
sub
fst
adc
xor
test
xor
ds
ja
mov
jp
jb
mov
or
add
xchg
xlat
lods
add
cmp
mov
sbb
xor
mov
insl
and
loop
jbe
mov
ss
xor
pop
dec
push
dec
jmp
or
push
jb
jbe
insb
xchg
out
mov
ss
jle
cmp
push
push
push
xchg
cs
stos
jl
mov
cmp
in
sub
arpl
lcall
cmp
push
dec
xchg
je
push
cld
inc
sbb
test
dec
imul
icebp
or
ja
pop
sbb
pop
jp
xchg
stos
insl
xor
sbb
incb
nop
push
das
adc
insb
mov
sub
add
inc
ja
fiaddl
leave
not
or
mov
push
idivb
mov
ret
ljmp
call
test
or
lret
hlt
das
sub
lea
xchg
push
push
inc
push
pusha
in
dec
pop
inc
clc
xchg
or
shl
rolb
cmp
jecxz
inc
popl
insl
xorb
popf
or
push
add
push
addr16
dec
js
loope
push
or
ret
jmp
cmpsl
out
sbb
aas
leave
gs
lret
pop
adc
sbb
fwait
and
add
push
popa
hlt
mov
and
lahf
adc
mov
jae
sub
pop
sub
sbb
repz
out
into
dec
push
or
dec
aas
jbe
inc
sbbl
lret
xor
mov
fcomps
xchg
sbbb
int3
movsb
pop
jle
mov
jle
and
mov
mov
imul
iret
mov
clc
iret
std
dec
call
push
imul
xchg
push
and
sar
dec
mov
sbb
mov
pop
sarb
mov
mov
sub
and
rorl
ret
push
test
push
lods
cltd
lret
loop
into
fs
out
xchg
movsl
test
mov
cld
in
jbe
cltd
addr16
jae
popa
jle
and
sub
movsb
mov
add
arpl
jns
xchg
push
cmpsl
lods
imul
repnz
mov
pop
cltd
aad
fnsave
cmpsb
imul
arpl
adc
dec
fwait
std
dec
inc
xor
loopne
mov
loop,pt
out
icebp
repnz
aad
and
outsl
jmp
fsubrp
xchg
bound
les
add
js
sahf
fildl
add
cmc
lahf
xchg
mov
push
ja
movsb
movsl
cmp
inc
sbb
add
int
mov
inc
dec
pop
addr16
mov
out
test
sahf
sbb
stos
jno
pop
jno
lret
in
xor
fxch
push
inc
inc
mov
add
enter
push
xor
cmc
fildll
jl
into
mov
adc
ret
aas
movsw
icebp
leave
cltd
test
fwait
mov
sti
mov
ja
jbe
mov
icebp
cmp
push
in
pmuludq
leave
lcall
sti
imul
pop
repz
dec
cmpsl
sub
fisttpll
mov
test
lds
aaa
or
adc
fs
iret
cmp
jo
out
sti
push
sub
xchg
out
pushw
rclb
inc
int
mov
pop
pop
sub
lret
popa
mov
and
sahf
jl
jne
movsl
cs
pushf
inc
dec
mov
stos
lock
loopne
mov
ja
sbb
outsl
fcompl
ret
clc
mov
popf
dec
sub
cmp
or
mov
aas
daa
mov
sub
insl
cmp
movsb
cwtl
sub
out
push
and
pop
std
push
stc
jle
mov
stos
sbb
lods
int
mov
sbb
sub
pop
insb
mov
or
xor
push
jb
mov
sbb
in
movsb
mov
mov
push
jle
loop
int3
cld
mov
mov
dec
lods
sti
mov
es
push
repz
jge
lcall
and
dec
cwtl
sti
aad
mov
mov
ja
flds
mov
cmc
jne
push
xor
jl
mov
stos
scas
cmpl
push
stc
shll
xchg
add
mov
or
pusha
aas
pop
aaa
stc
mov
cmp
xchg
mov
stos
mov
xlat
cs
mov
pushf
jbe
addr16
or
and
test
mov
sub
aaa
or
je
aas
js
fisubrs
pop
mov
adc
sub
and
out
sahf
lods
xor
ss
nop
mov
aad
dec
and
pop
scas
push
insl
pop
xchg
adc
aaa
and
sub
mov
je
adc
repz
sbb
jp
sbb
bt
insl
sub
js
sub
pop
in
aaa
fmull
ljmp
mov
add
ficompl
in
ja
mov
loop
sbb
shll
mov
out
push
pop
negb
in
push
sbb
ret
ret
outsb
xlat
clc
imul
jecxz
inc
imul
ljmp
dec
pop
mov
arpl
jns
aas
jns
mull
xchg
dec
mov
xchg
pusha
ret
out
push
mov
mov
ja
aam
sbb
or
nop
add
cmp
sub
daa
imul
aaa
jbe
ss
sbb
mov
ret
lret
cmpsb
imul
jne
mov
push
call
jg
hlt
adc
sbbl
xor
pop
sub
lea
mov
sbb
pop
arpl
shlb
jns
ss
xchg
mov
fcomi
je
and
push
movsb
cwtl
ljmp
sarb
jl
stos
incb
cmc
fmuls
sub
xor
and
or
mov
mov
adc
inc
and
mov
outsl
lea
sahf
aad
insl
add
leave
pop
imul
fwait
cltd
push
sahf
push
adc
iret
test
hlt
sub
sub
pop
movsb
push
rol
pop
mov
fucomp
inc
test
xlat
add
roll
test
push
push
out
outsl
movsl
sub
lcall
inc
sbb
loop
pushf
das
jecxz
cmp
cmp
roll
in
pop
popa
cwtl
add
adc
add
sbb
push
dec
testl
adc
fidivs
cmp
popa
mov
rcll
jecxz
push
adc
cmpsb
repz
mov
mov
das
inc
faddl
imul
movb
fdiv
jbe
sbb
stc
cmpsb
or
push
lcall
divb
cld
hlt
sbb
xlat
dec
jo
test
cwtl
sar
xchg
pushf
add
lea
adc
xor
pop
add
pop
xchg
cs
cli
test
mov
dec
dec
push
call
xchg
popa
fcmovu
shlb
loope
nop
jo
mov
jnp
lret
lret
add
jbe
mov
lcall
pop
flds
ss
adc
inc
xchg
inc
movsl
sbb
pop
stos
dec
iret
ret
sbb
ja
call
iret
rcll
jnp
sbb
les
aad
jo
push
cli
mov
xchg
in
jle
cmpsb
mov
rcrl
stc
ficompl
fucomip
fisttpl
dec
pop
cwtl
adc
cmp
std
push
jp
test
sbb
popf
mov
pop
mov
cs
lock
dec
mov
push
inc
popf
pop
add
adc
imul
jae
mov
mov
dec
lret
in
adc
inc
push
and
repnz
repz
xchg
shrl
dec
cmp
fidivrl
data16
lds
mov
arpl
popa
icebp
fldl
sub
pop
and
call
aas
sub
or
adc
movsl
cltd
mov
mov
fsubr
and
and
ds
and
and
clc
xchg
lahf
adc
mov
jge
push
mov
int3
dec
push
add
or
xchg
cmp
jb
pushf
lcall
ds
inc
fwait
jecxz
icebp
sub
pop
sub
in
jne
fwait
jnp
mov
adc
rcl
push
adc
or
daa
sub
adc
aas
jbe
cli
aas
xchg
cmpb
dec
and
ret
fidivs
sti
or
fsubs
mov
dec
xlat
sbb
pop
test
ja
fs
sbb
daa
lret
test
mov
jno
add
out
push
aaa
sbb
sub
les
imul
mov
mov
mov
fsub
xchg
push
mov
aad
outsb
push
xor
push
icebp
sarl
pop
sub
out
leave
and
clc
sub
ja
pusha
or
outsl
push
inc
and
cli
movsl
les
jecxz
push
xor
shlb
mov
mov
add
clc
sti
popa
or
cmp
movsb
mov
dec
call
jo
cmova
pop
sysenter
inc
ret
outsl
mov
inc
push
or
int3
pop
shll
push
sbb
test
cmpl
stc
xor
jp
int
aad
xor
dec
outsl
push
enter
ljmp
movsb
xchg
les
test
xorl
xor
iret
and
repnz
push
mov
ja
cwtl
inc
mov
icebp
cwtl
adc
into
repz
aam
lods
push
std
in
push
shlb
cld
sub
stos
sti
movsb
test
scas
lods
arpl
dec
mov
jno
ffree
mov
lods
ljmp
pop
mov
xor
test
out
mov
lcall
fs
js
mov
movsl
or
out
mov
ror
and
das
leave
mov
pop
out
dec
imull
aas
jno
jb
add
repz
arpl
adc
shl
xchg
cmc
iret
in
mov
stc
lcall
fistpll
cmp
fsts
loope
push
adc
in
leave
loop
add
mov
mov
mov
mov
gs
add
add
jle
mov
mov
push
insl
test
in
call
ret
imul
sub
or
sbb
jp
outsb
add
orb
das
cltd
je
mov
push
push
cwtl
adc
sarl
mov
push
mov
push
cltd
cmp
negl
mov
dec
in
and
pop
loopne
push
push
negb
orb
data16
lret
scas
lock
sub
jae
rolb
pop
jns
pop
jecxz
xchg
sub
fs
jae
mov
scas
push
sbb
sbb
outsb
and
and
pushf
lahf
sub
sbb
orl
xchg
jno
das
test
xchg
dec
mov
xchg
mov
das
rcr
and
cmp
push
xchg
push
lods
iret
icebp
outsl
xchg
imul
xchg
cmp
scas
mov
fadd
pop
sbb
repnz
fistpll
call
lret
movsb
bound
fs
jns
into
divl
cld
cs
icebp
adc
out
push
lret
sti
pusha
mov
push
jnp
ss
and
jb
mov
in
mov
sub
pop
aas
ret
sub
adc
add
je
push
mov
stc
or
cmp
add
cmp
sub
pop
icebp
ret
pop
rcr
aaa
or
cmpsl
sbb
mov
imul
or
out
push
insb
stos
adc
sub
xor
fdivr
xor
ds
pop
cltd
arpl
inc
sbb
imul
insb
hlt
pop
pop
mov
inc
adc
filds
inc
add
movsb
inc
xchg
add
xchg
mov
divb
arpl
jno
inc
mov
cmp
and
add
bound
inc
leave
mov
push
push
push
repz
lcall
add
adc
lahf
adc
clc
pushf
cmp
rcl
mov
test
cmp
bound
pop
or
adc
testl
dec
ret
addl
addr16
daa
jno
push
popf
out
lret
lahf
insb
in
inc
fiadds
xchg
or
xor
fldl
mov
jecxz
pusha
adc
pop
pop
clc
mov
dec
jae
ss
clc
cmpsl
adc
push
sub
into
imul
cwtl
push
jmp
mov
sbbl
mov
dec
sbb
lcall
mov
xchg
pop
mov
ret
jp
into
cmp
ret
xchg
stc
add
cmp
or
iret
adc
pop
mov
rorl
test
ljmp
mov
mov
adc
xor
bound
fsubr
inc
dec
and
push
adcl
daa
mov
push
pushf
pop
inc
in
add
in
pop
scas
test
hlt
mov
sub
add
cmp
inc
out
cmp
aam
xchg
cltd
stos
scas
sub
test
cmp
xchg
sbb
mov
fists
jae
shll
lds
xchg
mov
sbb
sarl
cltd
jl
adc
pop
mov
jge
test
mov
and
sti
test
insb
add
mov
or
stos
dec
fs
je
gs
mov
mov
rcrl
popa
ret
adcl
lods
shl
pop
sbb
xor
loope
mov
fbstp
adc
aad
cwtl
or
clc
adc
bound
ficompl
pop
negl
je
mov
lds
xor
xchg
xor
or
xchg
push
xchg
cmp
inc
stos
jne
frndint
icebp
shl
idivb
fbld
sub
ds
cmpsl
pushf
pop
imul
sub
fwait
pop
jl
fs
pop
cmp
dec
mov
jp
pop
dec
mull
inc
jg
sbb
js
daa
cmp
mov
xor
lahf
test
into
pop
xchg
out
movsb
dec
xchg
push
dec
sbb
mov
iret
add
ss
jo
cmpsl
ret
mov
sahf
ret
cmpl
addb
mov
popa
pushf
addr16
sub
aas
push
loopne
shrb
mov
ljmp
in
jle
sahf
jge
push
add
xchg
adc
inc
pop
xchg
xchg
daa
dec
and
inc
push
std
mov
jno
add
push
lock
leave
inc
sbb
aam
pop
movsl
cwtl
shrb
jb
imul
mov
dec
add
xchg
stc
outsl
mov
popa
stc
arpl
popa
loopne
insl
lret
add
jmp
push
dec
mov
mov
lds
mov
mov
pop
sub
add
nop
xchg
xorl
pop
popl
mov
out
add
cltd
mov
mov
les
insl
nop
push
and
xchg
and
push
inc
mov
push
sbb
ficoml
lods
popa
out
push
insl
xchg
ljmp
or
jns
mov
push
push
shrl
push
jl
je
inc
daa
inc
repnz
outsb
or
add
jbe
subl
push
cld
clc
add
test
xchg
les
cwtl
add
mov
pop
fwait
adc
cmp
cmc
mov
or
fnstenv
in
and
mov
std
fistl
push
in
and
lds
xchg
in
inc
xor
gs
fidivs
cmp
push
loopne
lods
xor
loopne
js
or
mov
ds
xor
leave
loopne
cmp
aas
inc
mov
in
dec
pop
test
fmulp
es
cmc
out
cmpb
pop
cmc
sbb
lods
push
dec
xor
push
lret
enter
mov
imul
cmpb
mov
and
inc
mov
pop
pop
jmp
xor
and
insl
clc
clc
insl
insl
ljmp
inc
adc
pop
out
ja
imul
lds
cltd
lcall
call
cli
mov
or
outsl
adc
dec
call
outsl
ja
adc
movl
shrl
or
sub
jl
cmp
xchg
sbb
or
pop
sub
das
bnd
imul
sub
icebp
scas
adc
cli
cmpsl
jecxz
js
lret
jmp
or
mov
mov
inc
inc
mov
stc
lock
call
sbb
icebp
sub
imul
cli
mov
call
fistpll
cmc
jmp
mov
jl
pusha
cmp
inc
movsl
sti
and
pusha
inc
fucom
dec
negb
or
cmp
mov
pop
mov
push
aad
xchg
roll
mov
ja
adc
xchg
clc
adc
loope
cwtl
pop
cmp
arpl
adcw
mov
dec
xor
xor
addb
call
sahf
push
mov
loopne
pushf
mov
in
add
test
add
dec
inc
je
cmp
cmp
dec
sbb
push
sahf
imul
sub
mov
dec
mov
ret
arpl
ss
mov
inc
fdivrl
lret
and
dec
sbb
xchg
mov
sbb
cmc
push
dec
or
push
pop
xchg
nop
sbb
and
bound
test
or
test
add
cmpsb
cmpsl
aad
adc
popf
mov
cmpsb
pop
data16
cmpsb
ret
mov
aaa
imul
ljmp
jb
xchg
and
fdivrl
xchg
lret
in
lret
inc
cmc
cli
xlat
pusha
sbb
clc
jb
test
adc
jo
sbb
movl
or
imul
cs
mov
or
mov
mov
push
mov
jo
add
test
js
jnp
pop
loopne
cmpsl
and
pop
pop
sbb
stos
loop
push
in
mov
add
bound
inc
mov
sub
inc
daa
jns
data16
ss
mov
jle
add
movntq
out
mov
sub
lret
xchg
add
mov
shlb
push
xchg
cli
ja
les
mov
mov
and
test
sbb
add
mov
shl
in
inc
mov
rcrb
dec
xlat
mov
or
arpl
test
adc
leave
cmpsl
arpl
sarl
mov
cmp
fldcw
test
sub
mov
cmc
jnp
jbe
and
lea
sub
add
cmp
mov
cmpsb
mov
out
xor
pop
add
scas
push
cmp
and
fucomp
lods
pop
mov
les
xchg
and
fs
leave
aam
fnstsw
in
xor
in
xchg
hlt
das
add
dec
cli
mov
xor
adc
mov
push
xchg
mov
fistps
sub
sub
ds
push
prefetch
test
aad
loopne
fs
sub
inc
insb
mov
sbb
jl
pop
leave
sahf
adc
lods
sbb
mov
movsb
fcoms
mov
pop
jbe
xorl
push
inc
dec
jne
xchg
fidivs
loope,pt
xor
repz
push
outsl
insl
in
jle
jge
push
pop
rcrb
cmpsb
lds
rcrb
sub
fcoms
ror
mov
dec
out
push
mov
mov
pcmpgtb
pop
insb
and
sub
and
out
cmp
sbb
pop
cmp
xchg
lret
clc
inc
fmuls
jae
jge
scas
dec
pop
cltd
jp
pop
xchg
and
loopne
fwait
adc
inc
in
rcll
repz
pop
hlt
or
fsubrl
cld
mov
xor
push
mov
cmc
aaa
pushf
clc
jo
sbb
jecxz
popa
int
adc
inc
add
xchg
push
int
je
leave
movsb
or
pop
negl
xor
daa
xchg
xchg
push
sahf
jo
lea
jnp
mov
fwait
adc
lret
adc
adc
and
jp
std
enter
xor
int
add
into
scas
repnz
nop
or
mov
or
jg
adc
insl
incb
and
cmp
lds
push
dec
sub
or
outsb
or
and
cltd
xor
lock
sbb
je
mov
test
xchg
mov
jb
mov
bound
inc
nop
pop
clc
jns
pop
negl
data16
lods
fcomps
arpl
inc
pop
and
push
mov
pusha
cltd
outsb
ljmp
loope
dec
cld
pop
sub
scas
push
lcall
and
dec
mov
mov
das
int
call
test
push
xchg
movsb
ljmp
imul
imul
fists
xchg
mov
rcrl
insl
lds
push
inc
stos
testl
repnz
fwait
sub
cld
addr16
dec
fcomip
or
es
xchg
ljmp
movl
lahf
setne
inc
repnz
jbe
nop
jno
into
movsb
lock
mov
cmp
aaa
scas
dec
lock
scas
shld
inc
or
jnp
lds
int
sarb
mov
rcrl
aaa
movsl
in
xchg
ret
imul
mov
inc
inc
leave
mov
or
or
lock
int
scas
and
push
or
cld
pop
ss
lock
imul
jo
push
sbb
icebp
xor
lret
jb
ret
filds
mov
int
and
pop
inc
mov
jl
and
rclb
or
jo
or
lea
cli
dec
out
movsl
mov
ja
notl
pop
jmp
dec
mov
mov
stos
cmp
cmp
mov
mov
fdivrp
jl
inc
mov
leave
pop
fmul
push
fstpt
in
sbb
dec
aam
cmp
loope
pop
repnz
lret
ja
mov
lock
lods
stos
pushf
sbb
rorb
testl
lods
add
fnclex
mov
jmp
push
jo
scas
stos
rolb
insb
cld
inc
cwtl
int
lock
jmp
sbb
cmp
sahf
mov
cs
dec
sbb
mov
fwait
cltd
adc
shlb
xor
xchg
mov
sub
loope
sbb
inc
rcl
inc
dec
mov
cmp
cmc
popa
xor
pushf
adc
ficompl
xor
lahf
sbb
jb
jns
int
inc
movsl
xor
mov
push
mov
fcompl
cwtl
aam
repz
mov
mov
xchg
jo
popf
insl
int3
pop
lock
jb
mov
dec
sub
mov
and
jno
sub
lods
ljmp
sub
pop
dec
mov
jne
and
aas
fsts
push
fstpt
std
mov
jmp
cmp
mov
pop
inc
push
xor
fadds
in
int
sbb
pop
add
push
mov
pop
insl
pop
nop
cmp
adc
mov
jo
cli
in
out
insl
shrl
stos
mov
lds
push
push
fsubs
and
mov
pushf
xchg
or
lahf
and
hlt
sub
rolb
addr16
cs
stos
and
fwait
xchg
mov
adc
dec
shll
jg
pop
mov
mov
popf
sub
and
loop
addr16
nop
or
fstpt
aas
rcrb
outsb
mov
fwait
sub
and
sub
test
and
cmp
out
push
xor
insb
fnstenv
imul
stos
popa
dec
sub
push
ds
scas
sahf
dec
push
ds
adc
mov
hlt
call
mov
jnp
adc
pop
add
cmp
insl
lret
jp
mov
outsb
ret
mov
scas
jmp
jp
jo
adc
lret
push
xchg
arpl
hlt
jae
out
sbb
jo
pop
pop
dec
or
sbb
jmp
or
sbb
jge
or
cmpsb
gs
mov
test
xlat
push
cs
xor
sbb
pop
out
incl
frstor
dec
les
rol
xchg
jo
in
jo
xchg
test
sar
cmp
into
mov
sub
ja
inc
or
jo
xchg
dec
aam
jl
jns
xorl
push
jg
mov
add
ficompl
push
push
loope
push
nop
ror
sbb
jecxz
push
movsb
out
ljmp
adc
stc
mov
or
inc
xor
dec
fisttpll
in
inc
repnz
adc
sub
inc
das
ds
ja
mov
and
jle
sbb
ficoml
repz
inc
scas
cmp
imul
dec
aas
pushf
push
in
lods
mov
shll
pop
push
add
jae
xchg
out
daa
add
mov
mov
pop
rcrb
daa
dec
cmp
jle
shl
cmpsl
sub
push
jb
inc
add
push
add
jle
and
mov
and
pusha
dec
icebp
xchg
jne
pop
cli
cs
adc
cmp
sbb
and
lret
inc
paddsw
ljmp
out
subl
test
andl
je
in
jno
jno
adc
lret
or
clc
add
jnp
faddl
push
push
inc
imul
pusha
sbb
xchg
push
clc
int3
cs
sub
push
cmp
inc
cmpsb
cltd
jns
mov
mov
stos
test
arpl
fwait
push
outsb
outsl
and
push
mov
sbb
pop
stos
mov
nop
pushf
inc
sub
mov
fldenv
negb
decb
sbb
shlb
nop
inc
aam
cltd
mov
push
popa
pop
cwtl
jmp
aad
dec
cmpsl
mov
cld
mov
bound
aad
mov
mov
pop
mov
sub
imul
movsl
fnstcw
xor
jmp
xchg
scas
push
in
jae
adc
aad
lods
and
xorb
xor
fprem
adc
push
insb
cmp
push
push
int3
fcmovu
mov
inc
mov
test
xchg
popa
or
mov
ljmp
pop
and
je
dec
fwait
movsl
push
mov
repnz
leave
out
sub
jno
lock
repz
push
in
mov
pop
data16
mov
fcompl
in
or
jg
es
lret
cmp
addr16
lea
fstl
andb
popf
mov
inc
je
cmc
stos
dec
push
inc
push
pop
addr16
orl
cli
fsubrl
in
jo
xchg
call
or
sbb
xor
dec
push
inc
lock
loop
data16
adc
fmuls
jnp
sar
mov
add
setb
mov
stc
or
adc
push
je
aad
test
daa
dec
fistpll
sbb
icebp
jmp
loop
mov
pusha
ja
shlb
jecxz
dec
mov
ret
sarl
sub
and
aaa
js
in
sarb
adc
push
sub
jge
sbb
mov
sub
xor
jbe
das
lods
scas
cld
push
test
lcall
push
jecxz
les
stos
in
and
cwtl
shll
cmp
sub
lret
cmpsb
nop
xchg
test
add
aam
addr16
sahf
and
pop
stos
pop
jecxz
aad
ja
sbb
gs
add
lods
cld
cmp
inc
popa
aam
adc
sub
gs
movb
dec
fcmovnb
call
push
mov
and
pop
jno
scas
insl
jl
jo
xchg
popa
int
jl
mov
cs
iret
xchg
or
repnz
pop
xchg
jle
sahf
xor
pop
aad
mov
pushf
xlat
mov
mov
and
cmp
adc
mov
push
cmpl
shrl
stc
dec
int
addr16
imul
xchg
shll
divb
mov
xor
addr16
mov
or
imul
lock
mov
rclb
test
add
push
movsb
jge
rcll
es
flds
aas
pop
movsb
xchg
cli
xor
xor
rcll
out
mov
xchg
mov
cmpb
mov
mov
pop
xor
pop
xchg
cli
add
xor
repnz
jb
jg
das
mov
fists
insl
sbb
shrb
mov
mov
and
out
pushf
or
repnz
mov
add
and
sub
inc
test
inc
mov
or
add
pop
or
mov
xchg
xor
andb
dec
adc
lcall
dec
mov
xor
sahf
mov
hlt
pusha
fstpt
jg
jns
sbb
push
push
sbb
fildl
js
mov
jo
loope
shr
jb
test
out
add
icebp
out
sbb
mov
int3
imul
inc
cmc
add
enter
push
popf
test
adc
mov
daa
add
sbb
into
mov
push
lods
scas
add
dec
test
add
leave
dec
loope
orb
aas
insb
ljmp
xor
fs
push
cmp
jl
mov
jmp
jns
xor
cmp
fildll
test
or
sahf
lcall
push
int
inc
or
and
fwait
xchg
aad
or
fnstenv
iret
imul
inc
dec
push
ljmp
jmp
movsb
push
rolb
filds
movsb
mov
add
std
xchg
cmp
in
fldenv
mov
push
mov
mov
sub
sahf
mov
outsb
nop
add
inc
sbb
mov
fs
int
pop
sbb
aas
nop
mov
and
lods
push
mov
and
gs
cs
sub
cmp
sub
sahf
pop
add
pop
es
mov
push
jb
push
ret
pop
jge
in
xor
pop
shrl
jmp
push
stos
jae
into
add
jb
in
xchg
pop
xor
push
mov
idivb
hlt
sub
cmpsb
inc
ljmp
pushl
cmc
fstl
imul
push
aam
fbld
add
stos
int
adc
imul
xchg
das
ds
mov
out
inc
jle
aaa
in
jl
lcall
xchg
push
in
and
jne
inc
xchg
call
inc
cmpsl
or
cmpsb
inc
fdiv
les
mov
or
jmp
jmp
add
xchg
sbb
cs
shll
call
or
xchg
push
inc
lods
mov
pop
jg
mov
jbe
sub
pop
test
pusha
daa
push
imul
hlt
rcll
sub
andl
or
jns
fnsave
fistl
hlt
push
enter
lds
lahf
mov
adc
push
cli
jmp
jno
xor
ficoms
rorl
loope
nop
mov
aam
xor
jbe
cmp
dec
cmp
mov
pop
cmp
loope
lds
nop
pusha
pop
pusha
ljmp
ja
adc
mov
and
add
sar
push
stc
ret
add
aad
int3
xchg
loopne
inc
ret
cmp
loope
sbb
hlt
lea
pop
mov
gs
inc
mov
insl
leave
int
outsb
jmp
push
int3
adc
mov
aam
dec
pusha
inc
inc
lock
rcl
inc
sub
jae
ret
addb
imul
iret
movl
push
arpl
stos
movsl
sbb
bound
jmp
sbb
pop
das
adc
insb
cwtl
aam
cld
sbb
ret
adc
ret
inc
insb
repz
in
sub
xchg
fdivrs
idivb
jle
fnstsw
xor
add
lret
out
jmp
cld
and
test
addr16
adc
inc
test
cmpl
xor
int
hlt
js
fsubp
cmpsl
fcmovnbe
data16
fwait
inc
jae,pt
les
cmp
mov
pop
out
mov
sbb
out
jle
fistl
stos
outsl
xchg
cmp
cmp
xlat
lret
xchg
ljmp
inc
stos
sbb
xchg
push
push
mov
add
push
lea
fisttps
call
jbe
cmpsb
add
aam
adc
jb
lcall
push
in
xor
fs
rol
in
outsl
insb
cli
pop
std
xchg
jmp
ljmp
mov
xor
sub
lods
loope
pop
test
sub
mov
into
pop
mov
mov
repnz
test
popl
lods
lods
mov
outsb
jo
mov
test
push
mov
mov
sbb
xor
das
add
out
out
and
orl
repz
add
lret
fwait
cmp
je
fsubl
popf
jae
rorb
pop
rcll
outsb
sbb
push
or
mov
sbb
rclb
pop
sar
nop
push
jge
jae
dec
in
fimull
mov
or
sub
pop
xchg
in
dec
or
sbb
sarl
xchg
dec
add
shll
pop
add
mov
sbb
fnsave
mov
fistl
cmpsb
inc
or
xor
or
mov
aaa
and
push
es
in
push
ret
testl
sbb
and
popf
sbb
push
test
popa
mov
aaa
inc
roll
jge
rcll
les
lods
or
flds
sbb
outsb
outsb
orb
dec
pop
and
cmpsb
dec
and
cmpb
lods
jge
cld
mov
xchg
out
out
lret
bound
adc
negb
mov
push
jns
mov
sbb
subb
push
mov
icebp
les
ja
inc
aam
or
jb
fwait
push
jecxz
imul
test
loope
lret
ret
xchg
fimull
or
sbb
subl
sbb
mov
sbb
sbb
mov
test
scas
vmread
xlat
sub
mov
in
bound
outsl
pushf
iret
or
insb
adc
je
jno
imul
inc
push
enter
sbb
push
insl
adc
scas
jbe
int3
mov
add
xchg
push
jb
inc
sbb
aas
xor
enter
sub
mov
imul
jns
cmp
das
jmp
mov
jmp
fidivrs
xor
push
push
mov
cs
ret
aaa
push
mov
lret
lock
lret
dec
jmp
push
lods
pop
daa
push
cmp
mov
sub
sbb
lods
fldcw
out
out
sti
aas
orb
and
popl
rol
push
test
jne
ds
push
fstps
inc
ljmp
mov
fisttpll
out
xor
xchg
stc
mov
or
jns
shlb
jbe
pop
or
pop
in
syscall
dec
fsubr
jp
xchg
mov
xchg
jge
jb
scas
push
icebp
enter
stos
shl
cltd
lahf
mov
lcall
mov
test
or
cmp
pop
mov
fwait
stc
sbb
xchg
adc
pop
lret
in
mov
inc
orb
mov
pop
push
add
je
and
push
lds
in
fsubrl
cld
mov
pop
cwtl
jle
inc
sti
fucom
aad
mov
bound
sub
mov
sub
adc
mov
or
adc
jecxz
xlat
enter
in
decl
imul
lret
inc
into
leave
mov
xchg
mov
das
shrl
ljmp
ljmp
xchg
add
xchg
or
jnp,pn
mov
sqrtps
and
push
and
push
int3
add
shll
push
fisubl
mov
orl
adc
sub
cmp
jl
daa
ret
aam
sub
movsb
sbb
xchg
mov
fs
sbb
lcall
test
inc
pop
sbb
je
add
lods
cld
mov
cmp
lret
fcoml
faddl
stc
shll
stc
cltd
cs
std
stos
fwait
das
pusha
push
hlt
out
dec
ds
outsb
lret
bound
jmp
add
int3
aad
aad
inc
pop
mov
lret
pop
cs
push
cwtl
call
test
xchg
aam
sarl
enter
mov
rcll
sbb
cld
xor
fcompl
fsubs
xchg
es
push
pop
xor
xor
rorl
loope
repz
mov
dec
xchg
add
mov
aaa
cmp
cltd
mov
inc
jle
js
lods
or
pop
dec
popf
mov
fidivl
dec
arpl
jp
negl
sub
out
sbb
data16
lret
or
inc
fldcw
dec
mov
mov
adc
mov
xchg
mov
xchg
inc
int
pop
or
dec
in
rcrb
pop
xor
mov
cmp
ret
xchg
mov
in
mov
out
or
fcoml
je
xchg
fdivrl
clc
or
ss
mov
jecxz
and
cmovg
cmp
push
jle
xor
push
test
mov
dec
mov
ljmp
jne
push
into
mov
sbb
in
xor
and
sbb
sbb
pop
jno
mov
sti
lcall
cmp
sbb
aad
or
sbb
ds
push
aas
inc
lret
cltd
dec
cmp
xor
adc
sbb
pop
in
pop
cmp
lea
stos
push
aas
push
push
mov
dec
mull
leave
add
fprem
subb
mov
pop
fcmovnu
into
mov
in
repnz
in
jp
jbe
and
in
in
sti
ror
or
dec
lahf
stc
push
dec
dec
mov
push
cld
ficompl
adc
in
mov
inc
scas
sub
dec
mov
aam
push
jnp
xchg
adc
or
pusha
mov
imul
sbb
fisubrl
jo
movsl
or
xlat
sbb
adc
hlt
or
mov
popf
sahf
dec
testl
xchg
sbbl
cmp
mov
int3
jl
lahf
divb
adc
outsl
or
movsb
jl
aas
dec
je
push
pop
cmp
addr16
xchg
fisttps
push
inc
lret
repz
out
out
adc
or
pop
adc
test
aas
rcr
xchg
xchg
and
cmpsl
dec
popf
in
jae
sbb
or
jmp
loop
sahf
gs
sahf
in
sti
pop
mov
inc
jp
and
dec
pop
pop
les
xchg
arpl
call
xadd
sarb
adc
jecxz
insl
mov
insl
enter
and
out
shrb
xchg
push
sahf
out
sub
xor
test
cmp
pop
push
or
cmpsb
lret
push
mov
pop
mov
shr
xor
push
sahf
sub
cli
sbb
push
mov
sub
pop
add
mov
xchg
jp
movsb
add
nop
in
call
dec
mov
int
inc
xchg
arpl
mov
scas
or
fildl
dec
stos
aaa
pop
loop
or
pushf
push
divl
in
push
sti
or
icebp
frstor
or
fmulp
cmp
ret
ror
out
push
sbb
fdivl
mov
cli
ljmp
sbb
aaa
push
dec
ret
pop
stc
in
sub
call
sub
pop
ret
shlb
arpl
pop
mov
pop
hlt
insl
or
mov
lea
out
add
notl
mov
or
mov
popa
imul
aas
testb
imul
insl
adc
insl
adc
jle
and
adc
sbb
lods
in
adc
not
aas
lods
cmpsl
and
data16
sub
mov
and
ds
xchg
and
push
popf
hlt
daa
sbb
test
out
lea
adc
int3
ret
dec
cs
push
les
sbb
in
jp
and
test
dec
xlat
pop
sbb
add
push
add
cmpb
jno
jo
lret
scas
mov
fldcw
test
in
in
jns
mov
jp
mov
stc
loope
scas
pop
or
add
repz
lock
jge
sub
or
inc
mov
xorb
mov
jge
in
arpl
dec
inc
lds
fisttps
dec
sub
in
stc
dec
sub
int3
outsb
sbb
stos
or
or
pop
sbb
xchg
ficompl
xor
fsubrl
js
cmp
adc
pop
add
jl
xchg
movsl
inc
adc
mov
mov
loopne
jne
ficoml
je
fbstp
pop
push
pop
dec
pop
fiadds
mov
push
in
adc
movsl
jg
jne
mov
movsl
sbb
repnz
mov
fadds
imul
lret
int
fiadds
add
aaa
or
call
or
push
dec
fimull
les
out
xchg
fcomps
mov
into
mov
shl
jne
sti
loop
cmp
or
arpl
mov
jae
outsl
jns
jbe
rcl
sub
adc
dec
stos
mov
jle
dec
push
cmpsl
or
lret
dec
sub
out
push
mov
or
imull
test
inc
outsl
pop
int
pop
mov
adc
hlt
cmc
push
add
pop
pop
mov
repz
mov
dec
cmp
cwtl
call
sub
xor
or
sub
xchg
pop
sub
je
pop
and
stc
cli
mov
mov
cld
bound
jl
in
mov
fdivs
sahf
push
and
pop
xchg
addr16
inc
lret
loope
pop
fs
add
ds
and
inc
jg
dec
outsl
push
aad
add
inc
fs
outsb
or
xor
outsl
cmpsl
or
sub
xchg
sbb
popl
loop
xor
pop
gs
lahf
add
faddl
and
dec
push
and
imul
inc
dec
xchg
mov
sti
lods
scas
add
or
lds
dec
mov
fistps
push
jecxz
fldl
push
insl
jge
or
xchg
iret
xor
arpl
and
adc
pop
mov
test
push
xor
sbb
loop
dec
dec
xchg
inc
mov
clc
xor
and
or
or
std
aas
stos
pop
lods
jo
jl
test
xchg
mov
ret
xchg
add
int
or
jp
pop
movsb
xchg
push
mov
in
insl
cld
push
imul
loope
je
outsl
mov
cli
pop
cmp
pushf
orb
xchg
lods
ret
sub
adcb
inc
add
cmp
imul
nop
test
push
fsubrp
mov
jb
add
gs
push
insb
lds
push
stc
aad
jo
notb
int
dec
loope
lea
sbb
outsl
lea
aam
pop
cmp
inc
or
sub
adc
shlb
scas
les
pop
xor
ret
sahf
pop
in
es
sbb
shll
jecxz
mov
jbe
xor
out
xorb
sbb
sbb
cmp
jle
sub
dec
sbb
adc
sbb
cmc
mov
dec
xchg
dec
cmc
sbb
push
int3
xor
mov
add
fdivrl
pop
mov
hlt
ficompl
cltd
inc
outsb
adc
mov
mov
jbe
pop
gs
sti
or
add
inc
mov
fs
add
mov
push
sbb
clc
xchg
icebp
loope
test
push
in
xchg
lcall
sahf
jae
lcall
and
jb
pop
xor
jno
incb
aaa
push
jb
nop
push
mov
cld
dec
inc
mov
inc
outsl
sub
test
clc
loop
mov
jae
jne
movsb
pop
inc
xchg
and
call
in
lods
and
mov
lods
dec
jmpw
dec
mov
lods
loop
cmp
cmp
mov
mov
jno
push
sub
mov
mov
fucom
and
hlt
add
ljmp
jg
push
aam
out
movsb
mov
dec
sti
shl
imul
lret
adc
cmpsb
mov
and
addr16
ja,pt
enter
lahf
ljmp
push
outsl
jo
mov
xchg
lods
xchg
xor
sub
sub
cmpsb
arpl
dec
add
mov
adc
and
popa
mov
sar
fidivrl
xor
pop
xchg
rcr
mov
jecxz
xor
sbb
push
xchg
outsl
orl
ja
jne
xor
mov
mov
jo
insb
xor
fnstsw
mov
jp
arpl
sub
adc
testb
test
cmpsl
sti
mov
xchg
jnp
loope
lcall
gs
in
and
ljmp
ror
test
jb
outsb
xchg
pushfw
lahf
out
cltd
jbe
insb
repz
xor
out
lods
pop
rcr
or
ja
ret
inc
push
outsb
mov
push
cwtl
xchg
cmp
test
ss
dec
adc
pop
clc
lods
or
les
add
sub
fcom
in
jmp
or
leave
jecxz
cwtl
push
ja
mov
ret
mov
sbb
out
cli
cmc
mov
fucomi
pop
imul
cmpsb
pop
out
ret
mov
or
repz
xchg
inc
negb
mov
push
mov
fisubrl
insb
sub
inc
xor
sub
sbb
into
hlt
inc
inc
mov
and
aas
lods
imul
cmp
jecxz
lock
jp
or
and
loope
and
in
dec
pop
pop
scas
leave
mov
jno,pt
mov
lcall
sub
or
fidivl
test
cmp
repnz
std
mov
cwtl
jmp
push
cmpsl
sbb
lock
push
aas
movsl
sub
jne
out
aad
add
pop
cli
xchg
mov
incb
mov
push
jno
out
push
mov
lret
push
leave
xchg
stc
in
fisubrl
jge
rclb
scas
jo
xor
stos
hlt
cmp
shrb
or
jbe
repnz
fldcw
pushf
les
and
push
dec
sti
rcrb
rcr
jb
inc
outsb
aaa
xor
in
or
sub
shlb
push
inc
add
aas
ror
xchg
das
pop
out
sub
and
mov
jle,pn
xor
je
gs
xor
adc
pop
ja
ja
push
xorl
dec
out
push
out
ljmp
sub
into
xchg
sbb
out
std
push
mov
mov
int
inc
pop
aam
sub
pop
in
mov
hlt
cmpsl
les
out
xor
test
mov
pusha
movsb
in
out
pop
add
mov
push
pop
movsb
das
xchg
mov
xor
rolb
add
sub
and
cltd
cld
pop
outsb
xchg
push
mov
push
push
insl
cmp
xchg
aaa
inc
jl
mov
mov
and
cmp
test
adc
inc
insl
idivl
jne
cltd
lcall
ss
fistl
mov
push
jns
push
mov
xchg
mov
mov
fsubr
fisttps
adc
mov
in
iret
clc
stos
xchg
mov
hlt
bound
mov
pop
call
dec
mov
test
push
or
scas
pop
add
push
sub
pop
dec
xlat
mov
or
fnstenv
mov
rcl
popa
dec
lret
lret
jns,pn
shrb
sahf
call
pop
sub
ret
cmp
lock
push
push
dec
stc
cmp
nop
cld
rorb
or
cmpsl
jg
in
idiv
icebp
pop
sub
insb
fistpll
dec
mov
fistpl
lock
sti
adc
data16
cmp
faddl
movsb
seto
fcomip
or
rcpps
mov
adc
inc
cli
mov
mov
aas
ja
imul
and
js
addr16
addl
sub
sbb
push
xor
mov
dec
add
ret
ror
xchg
jmp
xchg
inc
call
and
in
lock
push
and
faddl
mov
lea
leave
sub
or
scas
sub
push
aad
cmpsb
push
shlb
sahf
mov
scas
test
pop
mov
push
sbb
adc
das
jle
dec
inc
push
jmp
aad
aas
add
dec
cwtl
es
pop
lret
push
inc
mov
mov
sbb
in
fldenv
or
and
xor
aam
sub
mov
add
test
pop
filds
cmp
jecxz
jmp
mov
and
repnz
xor
mov
loop
push
imul
cmp
out
lret
inc
mov
sub
xchg
push
sub
pop
add
sahf
mov
orb
push
or
notb
movsl
out
test
inc
lods
xchg
add
jp
cmp
mov
jle
repnz
ljmp
nop
jle
xor
cmp
dec
cmp
movsl
std
sti
daa
fsubrs
dec
aaa
fldt
cwtl
pop
mov
fistpl
scas
test
inc
or
cmpsl
and
fcmovu
cs
dec
dec
mov
xchg
mov
sub
adc
sti
adc
xor
or
and
stos
stos
repz
inc
cmpsb
pop
shll
cs
popf
sarb
scas
sub
dec
sahf
mov
je
push
adc
dec
or
and
sub
mov
mov
sub
and
cltd
mov
lds
push
test
xchg
in
adc
sub
sbb
xchg
fsts
in
ss
add
pop
iret
dec
and
add
mov
shll
push
shlb
and
fcmovnb
add
into
divl
daa
iret
adc
xor
adc
lods
mov
bound
pop
cmp
mov
inc
push
out
adc
mov
mov
iret
jns
sub
insb
jmp
and
push
jmp
int
adc
mull
push
dec
push
push
mov
pop
sbb
leave
cld
outsl
cmpsl
and
mov
test
sahf
add
cmp
xor
lds
repnz
adc
push
sbb
mov
leave
das
incb
les
repnz
adc
mov
imul
xchg
mov
addr16
clc
insb
mov
xchg
mov
jo
and
cmp
pop
jns
out
cwtl
inc
sub
jns
lret
mov
pop
push
jb
pop
std
pop
les
lea
xchg
call
fwait
mov
xor
xchg
fldcw
lcall
adc
jge
add
das
pushl
xlat
push
xor
shlb
or
aas
out
std
cs
jp
jb
mov
mov
iret
xor
lods
adc
inc
mov
movsl
adc
sbb
xor
mov
dec
imul
cmp
mov
add
sbb
sbb
sti
testb
movsl
pusha
test
hlt
mov
rclb
sahf
imul
ficomps
jl
enter
push
fbld
scas
gs
pop
js
cmpsl
sub
pop
test
sbb
test
hlt
call
cmp
js
mov
xor
xchg
jmp
ljmp
popf
pop
cmp
ss
add
sbb
adc
int
gs
ret
in
js
dec
xchg
cs
xchg
jmp
dec
fstpt
popa
or
cmp
push
test
cltd
faddl
fiadds
push
fidivl
test
dec
push
dec
std
dec
dec
jmp
sub
sbb
stos
roll
jecxz
cld
stc
jns
call
gs
inc
sbb
adc
into
cwtl
fcomps
data16
and
gs
cli
push
xor
jne
dec
or
xor
sbb
xchg
mov
mov
push
fstpl
lret
call
incl
lret
xor
xchg
fbld
mov
inc
xor
cltd
add
cmpsl
and
sbb
test
or
sub
jb
push
cltd
inc
cmc
loopne
lcall
and
ss
xor
out
icebp
leave
repnz
and
popa
push
les
int
xchg
jns
shrl
push
sub
cmc
in
jae
or
ljmp
xchg
aaa
add
and
push
pushf
ficoml
xchg
es
or
cmp
sahf
dec
or
push
push
aam
lock
inc
xchg
lock
cltd
pop
shrb
and
movsb
out
test
daa
xorb
jno
inc
xor
test
fwait
cmpsl
mov
sub
lock
dec
xchg
test
mov
int3
in
cmp
dec
ret
leave
adc
addr16
jns
sbb
iret
fldt
out
dec
dec
hlt
and
jl
out
xchg
fs
jecxz
imul
cmp
sub
mov
fst
pop
sbb
loope
sub
jl
cmp
fistpll
fidivl
fcoml
imul
inc
mov
jbe
add
mov
out
je
sbb
lods
scas
lods
push
pop
outsl
popf
cltd
cwtl
das
lahf
xchg
movq
lock
fdivr
xchg
pop
arpl
cmp
ss
popl
jo
mov
and
bound
loop
push
rcl
addl
movsl
nop
ficoms
push
das
xlat
xchg
gs
mov
inc
jp
inc
mov
xchg
push
in
mov
jbe
jb,pn
and
cmp
cmpsl
mov
cwtl
popa
or
mov
lcall
jle
stos
adc
ret
and
inc
xor
jmp
fs
cs
push
inc
fsubs
add
js
inc
lock
stos
push
cld
int3
jge
xor
mov
in
in
mov
mov
add
lret
sub
pop
imul
xchg
mov
and
mov
cmp
push
cmpsl
and
imul
mov
fadds
ljmp
int3
xlat
es
pop
mov
aam
stos
call
xchg
jns
outsl
mov
dec
mov
sub
roll
popf
rcll
xchg
ret
pop
sub
fucomip
scas
inc
mov
les
test
mov
inc
sbbb
and
push
xchg
lret
or
lcall
cltd
adcl
pushf
sbb
sbb
sti
xchg
mov
cli
mov
xchg
ret
sub
add
fcoms
jp
js
fmuls
repnz
fwait
pop
adc
push
scas
movsl
pop
loop
stc
pop
push
and
dec
push
std
mov
cmp
or
daa
dec
adc
pushf
mov
jne
sub
pop
and
fs
push
pushf
lock
pop
pop
shll
xor
or
scas
pop
cmp
jge
xchg
cmpsl
bound
pop
lcall
mov
andl
movsb
or
test
shl
cmpsb
pop
jecxz
sahf
xchg
jb
pop
inc
bswap
mov
dec
pusha
mov
mov
cmc
pop
mov
in
je
nop
mov
cmpsl
or
in
insb
push
cmp
cmp
mov
in
out
adc
cmp
gs
push
jmp
mov
dec
fisttpl
ljmp
aad
and
lahf
xlat
in
mov
lcall
push
xlat
mov
push
add
fidivs
scas
mov
aad
and
mov
clc
ret
mov
mov
cwtl
pop
movsb
push
mov
mov
cmp
jo
push
ds
push
jae
and
loope
xchg
fistpll
enter
hlt
test
pop
pop
mov
sbb
mov
mov
insb
and
ficompl
ds
cmpsl
addb
aas
inc
sub
aam
jmp
push
jno
lret
adc
inc
adc
pop
dec
xor
sub
cmp
idiv
xor
mov
mov
cmp
push
leave
adc
cmpsb
movsl
subl
add
push
fisubrl
mov
push
cmpsl
int
mov
or
rorb
mov
pop
pop
sub
push
into
xor
enter
jge
add
scas
xor
lods
inc
loop
gs
shr
testb
mov
jne
xchg
stos
jns
mov
out
fnstenv
outsl
imul
iret
arpl
jnp
mov
jo
shlb
push
adc
adc
mov
xchg
cli
cwtl
mov
test
fadd
out
push
lods
mov
fdivrl
mov
push
in
xor
pop
inc
xor
jp
dec
lcall
sti
sar
mov
mov
mov
push
jae
jns
fs
push
inc
add
loop
dec
test
push
fistpll
add
outsl
shl
push
xlat
mov
xlat
push
les
cli
jecxz
cmpsl
test
xor
cltd
bound
imul
test
loopne
xlat
mov
dec
les
pop
mov
pop
and
mov
frstor
outsl
aaa
insl
jns
jl
jnp
roll
mov
jno
int3
and
in
cmpsb
add
ja
lret
pop
mov
pop
and
jbe
stc
cltd
fstps
push
cltd
pop
cld
jbe
cmpsl
pop
mov
rcrl
xchg
pop
mov
nop
es
sbb
aaa
cmc
and
cmp
add
bound
lock
sti
jl
jnp
add
orb
outsl
cli
adc
nop
mov
push
push
mov
aad
push
mov
dec
inc
cmp
lock
mov
xor
dec
int
xchg
pop
pop
jnp
shr
imul
pop
iret
mov
hlt
cmp
xor
jge
inc
cwtl
pop
jnp
mov
mov
sar
loop
addb
iret
in
roll
pop
mov
mov
mov
or
sbb
cmc
fs
and
popa
pop
sub
nop
lret
pop
adc
divl
subb
shl
inc
cmp
pop
xchg
scas
fimuls
popf
notl
xchg
push
aaa
mov
sub
and
orb
dec
inc
sbb
aaa
out
es
nop
mov
mov
cmpsl
outsb
popa
call
sbb
loop
sbb
leave
push
sub
jmp
pop
rorl
sbb
add
sbb
mov
insl
jge
cmpb
cmp
mov
lods
fbstp
insb
in
jecxz
add
out
mov
imul
ss
outsl
mov
cmp
inc
stos
push
adcb
jne
sub
sarl
cwtl
loope
stos
or
psrld
mov
xchg
or
scas
dec
loopne
jmp
xor
mov
mov
fisubrs
xchg
pop
pop
ret
push
mov
pop
push
dec
sbb
xchg
shrb
cmpsl
loope
mov
ja
cmpsb
mov
sbb
adc
and
and
cmp
cmp
mov
jb,pt
cs
pop
dec
mov
cli
or
inc
and
jmp
sbb
ret
jno
notb
insl
cmp
mov
cs
mov
fcomi
adcl
daa
dec
inc
and
sti
shrb
sub
xchg
sub
xor
int
sti
sbb
cmpsb
pop
dec
sbb
or
push
xchg
sbb
cli
in
ja
test
lahf
push
cmp
fistpl
mov
pop
sbb
loop
mov
add
jo
inc
mov
or
rol
jp
out
add
insl
test
out
inc
orb
mov
je
and
loop
arpl
mov
stos
push
aad
ds
ss
push
es
add
lock
xchg
stos
inc
pop
sbb
adc
shrb
mov
inc
or
inc
aaa
mov
cli
mov
roll
cmc
add
out
fdivs
int
xor
mov
add
out
test
lods
cmp
aaa
cmp
shlb
daa
clc
or
dec
jbe,pt
jge
nop
cmp
xchg
adc
in
decl
add
mov
sbb
cmp
movsl
stos
jbe
pop
push
and
ljmp
mov
pop
jecxz
lds
jns
popl
inc
or
xor
rcl
inc
test
pmullw
pop
add
insb
dec
fstps
stos
fadd
mov
push
ljmp
loope
sub
mov
push
or
jbe
sub
out
fs
ds
ja
test
mov
fisttps
dec
lds
jae
dec
mov
pushf
loopne
test
mov
scas
inc
inc
mov
cs
mov
sub
push
push
and
pop
mov
sub
xor
cs
jb
movsl
out
divl
pop
ud1
shll
xor
out
rolb
stc
je
jo
mov
push
mov
test
mov
mov
fcomi
push
daa
adc
repz
in
out
jb
mov
adcl
push
jecxz
mov
movsb
call
ljmp
push
xchg
test
fiadds
pusha
das
push
mov
iret
inc
stc
sahf
mov
pop
xchg
push
js
pop
pop
inc
inc
idivb
mov
sbb
jb
dec
rolb
out
inc
xchg
cwtl
jne
mov
dec
shl
xor
cmc
test
pop
pop
test
out
cli
test
or
cltd
test
or
frstor
daa
xchg
lahf
jo
pop
daa
test
es
mov
adc
and
pop
lret
xor
movsb
and
inc
sbb
xchg
and
and
mov
sbb
call
movsl
cmp
sbb
in
push
jae
gs
clc
popa
jle
testb
mov
js
rcrb
push
cs
ffree
jbe
sar
xor
aas
mov
mov
sbb
mov
and
xchg
int3
inc
xor
add
xor
push
xor
dec
push
or
push
popf
clc
mov
stos
adc
jl
inc
insb
enter
mov
add
sub
cmpl
push
mov
test
sub
inc
push
lds
or
xchg
hlt
dec
pop
pop
or
add
cld
pop
pop
cmpsl
and
cmc
adc
or
jmp
in
ljmp
pop
push
jbe
add
jns
add
aaa
movsl
push
testl
test
mov
and
clc
fldcw
jae
daa
mov
inc
dec
ss
test
xchg
and
popa
in
loopne
pop
cmp
pop
lret
jnp
arpl
in
loopne
push
adc
int
cwtl
cmpsl
adc
xor
sub
bound
and
lret
into
in
mov
push
cmp
imul
pop
in
and
clc
push
fstpt
mov
mov
add
mov
and
pop
dec
fs
aam
lods
out
mov
cltd
xchg
loopne
add
hlt
leave
fistpl
out
sub
adc
or
push
dec
pop
popf
cwtl
and
add
and
dec
jbe
lea
pop
xchg
lea
xchg
fisttpl
jl
xor
lods
adc
es
cmp
popa
pop
out
xor
sbbb
inc
sti
cmp
xor
jb
fidivl
test
mov
mov
xchg
pop
js
fs
decb
xchg
cmp
add
and
dec
add
gs
xor
or
cmp
scas
sbb
and
or
cmp
push
fbstp
je
sbb
xchg
xor
lret
bnd
addr16
lods
pop
cltd
xor
xchg
cmpsb
pop
outsl
jmp
adc
scas
cld
int3
sub
insl
cmp
lock
inc
inc
out
xchg
inc
xchg
ret
in
mov
dec
sbb
jbe
mov
jecxz
sbb
out
xchg
add
ds
xchg
and
mov
xlat
mov
cmp
lcall
aaa
add
or
mov
stos
inc
sub
fstl
jge
and
stos
jle
mov
jo
repnz
fisttpll
pop
es
xchg
xlat
mov
hlt
das
cli
or
scas
movsl
pop
repnz
cli
adc
aam
sub
jmp
jmp
inc
adc
sub
push
ljmp
pusha
std
lds
jecxz
outsb
insb
jb
push
sbb
jbe
jp
imul
mov
xchg
mov
gs
popa
add
dec
mov
jbe
not
adc
dec
pusha
cs
xor
insb
xchg
adc
stc
repz
dec
test
jne
insb
out
sbb
fisubl
je
test
add
xchg
mov
cmpl
xor
mov
push
pop
js
cmpsl
adc
adc
xor
popa
fisubrs
insb
and
xlat
fidivrl
mov
insb
dec
test
mov
loope
jne
imul
in
lahf
xor
ja
xlat
pusha
lret
andl
fsts
test
mov
std
jge
cmpsl
add
sbb
or
pop
lods
add
addr16
xchg
imul
and
pop
push
and
jae
push
roll
je
ds
daa
xlat
icebp
and
mov
out
stos
jnp
pop
sub
lock
fadds
pop
pop
push
fcomip
sbb
mov
ljmp
mov
or
outsb
jl
test
sbb
fwait
dec
and
pop
insl
or
outsl
push
xchg
loopne
inc
push
add
cmpsb
inc
jp
ret
mov
or
dec
dec
jae
loop
xchg
cmp
mov
push
xchg
aaa
push
stc
dec
daa
insl
ret
sub
pop
add
sub
pop
fists
sub
xchg
mov
jo
hlt
mov
dec
fcmovne
lods
data16
out
sub
adc
xchg
pop
sti
push
imul
mov
xchg
shr
add
xlat
add
pushf
bnd
push
aam
popa
xor
push
iret
add
cmp
pop
pop
mov
add
rolb
push
out
sbb
push
sarb
mov
pop
in
cmpsb
lahf
pop
arpl
popf
mov
enter
dec
mov
dec
rorl
jae
movb
adc
sbb
or
jmp
insb
sbb
sub
add
es
sbbb
adc
jne
cmpsb
in
stos
jbe
int3
xchg
xchg
imul
jle
fiadds
jmp
cli
pop
sarl
lods
mov
sbb
push
pop
outsb
inc
ja
mov
out
dec
loopne
pop
imul
lret
pop
incb
enter
jno
fsubs
pusha
mov
dec
into
and
test
nop
dec
and
mov
mov
adcb
rorl
mov
pop
shlb
std
sbb
mov
rorl
imul
lea
xchg
or
adc
sub
xchg
stos
push
sqrtps
xor
jae
ja
icebp
incl
fcoml
sbb
pop
dec
cld
popa
sub
imul
iret
sbb
ja
adc
mov
mov
popa
inc
in
mov
stc
pop
push
int3
je
or
das
shrl
fidivl
cmp
addl
xchg
stc
test
int
mov
push
ficoml
repz
dec
mov
jo
dec
ficomps
repz
cmc
pop
in
pop
ds
sarl
and
xchg
icebp
xor
scas
dec
mov
xchg
pushf
out
lods
jle
sti
lret
add
pusha
mov
adc
mov
or
loope
frstor
ja
xchg
lods
aad
and
sbb
idiv
popa
cmp
and
push
jne
cltd
pop
jbe
popf
xorl
mov
std
mov
mov
fisttpll
jle
test
xor
loope
sub
imul
dec
iret
add
out
stc
ljmp
pop
into
sahf
testb
enter
and
pop
repnz
mov
or
aas
jp
lret
mov
mov
scas
jne
xor
xchg
shrb
bound
push
loop
fyl2xp1
pop
pop
or
xor
aas
xor
lock
test
cmc
xor
add
xchg
xchg
sbb
sbb
scas
jl
mov
scas
sbb
ja
popa
push
sub
bound
add
bound
pop
mov
inc
js
cmp
outsb
rclb
fldl
mov
ficompl
mov
mov
adcl
in
push
subl
cmpsl
lods
push
subb
mov
movswl
cmp
das
pop
clc
mov
or
pop
jb
sub
and
aas
pop
ret
test
jecxz
or
lahf
lods
out
repz
push
bound
mov
fcomps
mov
and
leave
lret
movb
rclb
jl
push
pop
mov
jo
xchg
push
cmpsb
sti
aaa
les
inc
leave
cmpsl
jns
ret
bnd
pop
dec
jbe
cli
xor
cmp
inc
test
divb
xchg
fwait
out
mov
jae
fsubr
inc
cmpsl
add
pop
ss
mov
loop
mov
insb
mov
std
loope
and
ficoml
lds
cmc
add
sbb
aad
mov
nop
rcrl
out
jle
out
xor
push
pop
int
adc
cs
jno
fsubrp
test
jno
adc
mov
das
movsb
sub
fwait
xor
mov
add
repnz
cmc
xor
mov
mov
hlt
cmpsb
adc
movsl
sub
xor
cmp
sbb
enter
in
iret
mov
mov
scas
nop
iret
mov
lahf
repnz
xor
xchg
xchg
xor
add
cmp
popf
xchg
mov
scas
test
mov
fisubrl
daa
and
jo
dec
mov
adc
push
push
and
sub
sbb
adc
in
adc
cmp
mov
repz
mov
int3
inc
cmp
and
cltd
add
outsl
add
shl
lahf
jp
push
in
and
pop
and
push
mov
cmpsl
enter
clc
mov
das
popa
in
mov
outsl
cld
inc
xchg
adc
xlat
pop
js
clc
cltd
frstor
inc
push
adcb
sub
inc
mov
pop
enter
loope
js
cmp
insb
jo
ja
lahf
rorb
aas
sbb
int
sti
mov
mov
mov
cmp
jb,pn
aas
cmp
inc
pop
pop
cli
lods
insb
inc
cli
ret
xorb
inc
dec
sub
adc
dec
fsubr
cmp
out
or
pusha
nop
and
adc
inc
mov
mov
pop
inc
sub
shl
xorb
mov
insl
xor
adcl
jae
stos
or
add
jl
xchg
adc
inc
mov
jne
out
jg
jne
int3
into
mov
sti
orb
stos
push
xor
pop
push
xchg
test
lea
push
test
ds
aaa
mov
mov
sub
and
getsec
rcrl
icebp
mov
push
inc
stos
test
pop
movsl
daa
jecxz
push
inc
mov
sbb
mov
aad
aad
ret
add
adc
xlat
ss
rol
sub
mov
addr16
ljmp
test
mov
outsb
mov
xor
repz
cmc
mov
inc
add
dec
cmpsb
lret
mov
push
push
imul
mov
cmp
rolb
insb
aad
adc
xchg
dec
inc
flds
or
mov
cmp
adc
pushf
ss
arpl
mov
mov
xchg
ficompl
jp
add
add
int
aas
xchg
fistpl
or
stos
adcb
jnp
and
mov
subl
stos
gs
mov
push
pop
loop
mov
sbb
xchg
aaa
mov
imul
fdivl
jbe
push
rcrl
divb
fsubl
int
mov
adc
lods
mov
pop
fmuls
test
mov
mov
cs
ljmp
lods
and
aad
pop
xchg
mov
lea
mov
stos
adc
jnp
adc
xor
out
outsl
gs
xchg
in
cmp
and
xor
pop
adc
aad
mov
aaa
std
jmp
in
aad
fstps
fisubl
mov
aad
mov
mov
mov
sbb
or
sub
outsl
pop
sbb
popfw
test
xor
and
lods
das
jl
push
mov
mov
mov
icebp
rol
mov
jne
out
jge
mov
cmp
arpl
les
arpl
aam
adc
outsb
clc
fildl
cmpsl
in
insl
mov
fucomip
imul
out
nop
push
int3
fwait
mov
xchg
xor
test
sub
push
jae
in
ficomps
sahf
inc
stc
shlb
adc
xchg
pushf
lret
add
adc
cli
pop
and
mov
xchg
repnz
xchg
stos
stc
insl
int
adc
mov
lods
xchg
inc
mov
mov
outsl
and
or
push
mov
pop
pop
sub
stos
pushf
in
out
or
clc
adc
xlat
cmpsb
in
dec
shrb
jge
sbb
mov
test
jge
xlat
nop
data16
or
imul
add
pop
sub
pop
fidivrl
pop
rol
sub
fmul
fbld
jo
cmp
cmp
sub
cld
fs
pop
cli
hlt
repnz
es
xchg
lds
pushl
sahf
sub
or
xchg
cmp
f2xm1
ja
fwait
dec
hlt
sbb
xor
fcoms
pop
xlat
add
js
cmp
js
sbb
js
loope
mov
jbe
jo
add
jo
sub
out
aas
xor
outsb
xchg
fs
sti
ret
mov
out
and
mov
scas
cmp
jbe
bound
xchg
mov
shrb
outsb
lds
ds
mov
stc
xlat
cmp
sub
imul
push
cltd
push
sbb
fs
cmpsl
pop
xchg
sub
xchg
cmc
cmpb
ljmp
outsl
mov
idivb
push
cmpsl
push
mov
lea
pop
les
adc
ds
mov
fsub
rclb
adc
aas
sbb
enter
ja
iret
lret
sbb
sbb
sub
sbb
lahf
aaa
popa
push
pop
fnstsw
sbb
call
mov
test
js
add
or
stc
pop
fmuls
int3
loope
mov
cmp
scas
mov
inc
push
mov
scas
int
sbb
scas
imul
cmpsl
int
jae
fsts
testl
push
pop
leave
dec
jecxz
jae
clc
scas
nop
je
arpl
sbb
aaa
mov
ljmp
mov
or
loop
dec
jae
jo
shlb
mov
addr16
inc
pop
sub
aad
mov
cs
dec
shr
and
test
cmc
inc
xchg
fmul
cmp
dec
xor
shrb
mov
xor
pop
sub
popf
je
jnp
aad
cwtl
fisubs
or
xor
dec
xlat
sub
mov
push
xor
ss
push
pop
dec
or
jecxz
pushf
cmp
jmp
jb
jecxz
lret
adc
jne
loope
adc
and
sbb
jnp
jne
je
inc
shlb
loopne
inc
mov
pushf
mov
adc
pop
sub
cmp
loopne
dec
add
pop
xchg
jle
in
mov
dec
cltd
out
ret
mov
mov
enter
lret
mov
push
scas
mov
xor
ljmp
xchg
repnz
cld
or
pop
std
pushf
push
popl
or
and
sahf
dec
out
aam
cmp
mov
insb
mov
lret
mov
stos
add
cmp
dec
jg
mov
mov
jl
inc
subl
es
jne
cmp
or
and
leave
cmpsb
pop
test
mov
mov
cmp
ficompl
testb
inc
inc
cmp
in
in
lock
mov
jb
inc
lret
sub
in
inc
inc
push
sti
mov
dec
das
cld
enter
push
std
adcl
jbe
mov
scas
jne
jae
imul
inc
mov
adc
test
cmc
aas
and
aas
xchg
pop
aaa
imul
inc
stos
sbb
mov
dec
scas
push
mov
adc
xchg
cmpl
movsl
int
lea
push
ret
in
cmp
rcrl
and
push
in
dec
jle
fcoms
aam
jecxz
push
dec
inc
aas
sbbb
outsl
xchg
repnz
sub
out
arpl
call
jne
sbb
dec
shrb
push
adc
pop
mov
mov
mov
mov
enter
xlat
xor
insb
movsb
sub
dec
leave
pop
jl
loopne
das
fsubp
mov
push
int
inc
inc
add
pop
mov
or
sti
out
adc
cmc
xchg
cmp
out
addr16
and
mov
lds
mov
dec
xchg
std
out
lea
shlb
fistpl
testb
int
insb
xchg
inc
iret
push
jmp
sti
arpl
movsl
shll
or
mov
xor
and
adc
popl
test
sbb
lret
adc
fisubrs
jne
push
push
out
sbb
mov
out
mov
data16
cmp
dec
jg
stc
or
in
mov
mov
outsb
sahf
daa
cmp
aam
addl
movnti
mov
sbb
ds
cltd
xor
sahf
scas
add
mov
popa
jo
stos
sub
dec
mov
popf
rorb
flds
fdivrl
cwtl
xorl
xchg
cmpsl
stos
jmp
fcompl
imul
call
pop
adcl
js
test
mov
pushf
lret
xchg
mov
xor
pop
mov
aas
fldcw
pop
gs
aad
push
stc
imulb
jae
cld
pop
inc
mov
sub
insl
jno
or
and
sti
test
repnz
jge
mov
xorl
sub
xchg
fistps
push
add
lods
into
mov
out
or
pop
cmpsl
test
jnp
imul
push
fsubrs
mov
mov
js
pop
mov
sbb
push
push
pop
rcrl
pop
jae
push
loopne
es
mov
fs
cwtl
mov
sbb
cmp
ljmp
or
pop
mov
xchg
xor
in
sub
jmp
pushl
jg
insb
sbb
xchg
mov
mov
adc
jl
test
add
icebp
movsl
mov
fsubrs
ds
aad
push
mov
and
push
sbb
lds
and
repz
mov
mov
stos
movsb
ja
and
mov
addr16
dec
inc
popa
mov
lds
ja
mov
ss
push
and
jle
mov
fwait
iret
jle
and
divb
mov
or
insb
jp
jbe
mov
imul
ret
mov
hlt
cs
int3
or
cmp
push
adc
xchg
push
adc
fsubrl
outsb
out
fnstenv
fisubrl
call
adc
in
dec
jl
adcb
leave
lods
scas
push
mov
aam
adc
into
dec
sbb
inc
inc
js
movsb
cli
jge
in
outsb
push
jecxz
arpl
insb
mov
dec
or
cmc
cmp
fsubr
sarb
cmp
inc
daa
sahf
ret
cmp
mov
loopne
mov
push
filds
lahf
ja
addr16
clc
fstps
jge
push
mov
dec
iret
dec
add
cltd
add
in
js
mov
cmpsb
pop
loope
dec
inc
mov
and
outsl
test
jae
repz
outsb
inc
mov
inc
pop
enter
es
sbb
fcomps
xor
fimull
ror
popf
or
pop
dec
movsl
xchg
lret
jecxz
orb
cmp
aam
xor
jl
adc
jae
sub
rolb
leave
mov
sbb
mov
sub
pop
lcall
sbbl
lds
repz
pop
mov
dec
movsb
adc
xor
or
mov
test
mul
addr16
adc
mov
dec
roll
jne
inc
lcall
push
dec
dec
adc
dec
sbb
jno
lea
lret
cltd
cs
xor
daa
ss
xchg
xchg
aaa
or
andb
rcrb
jnp
cltd
fucomip
xlat
sbb
movsb
jno
rcrl
xchg
cmpsl
xor
add
insl
rcrb
sub
jbe
and
loopne
push
pop
call
das
clc
call
pop
mov
cmp
jae
out
cmc
shrl
orl
add
roll
adc
lahf
inc
or
sbb
std
mov
ficomps
mov
push
incb
popa
stos
xorb
out
jl
insl
push
pop
mov
repnz
add
rorl
and
repz
mov
add
inc
lahf
cmpsb
ret
add
gs
mov
sti
int3
mov
sub
dec
sub
ljmp
rorb
rcll
call
iret
in
nop
mov
dec
je
aas
aad
dec
out
hlt
cld
je
xor
push
les
sbb
sti
adc
cltd
bound
outsl
fidivl
push
imul
das
xchg
xchg
imul
mov
fnsave
mov
popf
dec
das
push
push
std
inc
xchg
push
sahf
outsb
jl
mov
in
rcll
xlat
push
add
mov
fisttpll
cmp
sbb
movsb
or
shlb
pushf
cmp
int
icebp
mov
xchg
mov
push
inc
loope
inc
sti
pop
pusha
or
cltd
inc
mov
xchg
push
paddusb
or
pop
inc
and
lods
pop
sbb
adc
fdiv
popf
push
movsb
pop
je
cs
lret
cmp
pop
push
or
fwait
lds
push
loop
fsubs
jge
adc
xor
and
lock
jo
ds
and
jo
pushf
shll
loop
jbe
lea
cmpsb
out
fbstp
ljmp
ds
push
cmp
ljmp
inc
stos
mov
sub
jg
outsb
add
mov
mov
lods
jne
cmp
daa
mov
add
mov
out
aaa
xchg
roll
and
xchg
sbb
ss
jbe
sbb
movsl
addb
dec
jle
pushf
cltd
bound
sbb
pop
iret
comiss
dec
or
jbe
adc
andb
lcall
lods
push
jbe
or
xor
pop
mov
dec
jl
pusha
ficoml
pop
adc
inc
mov
movsb
and
push
outsb
scas
imul
xor
repnz
cli
add
push
push
inc
je
into
ljmp
push
push
sub
pop
ljmp
jne
mov
or
xlat
adc
mov
pop
faddl
loopne
vcvtsi2ssl
mov
leave
mov
or
adc
xchg
mov
rorl
mov
jb
stos
mul
cs
in
and
aad
es
pushf
testl
dec
rorb
xlat
dec
ret
loop
cmp
fdivl
das
dec
jne
jecxz
inc
jecxz
iret
int
nop
xchg
arpl
or
push
data16
ss
dec
cmp
pop
sti
mov
stos
movsb
mov
popf
movsl
or
fnsave
pop
mov
or
jl
pop
out
ret
mov
sub
xlat
stos
shl
mov
jne
or
pop
mov
bound
ds
mov
sbb
test
out
les
cmp
je
pop
adc
or
mov
int3
add
movsl
arpl
jle
stc
stos
outsl
and
ljmp
add
loopne
xlat
leave
or
cmp
loopne
or
in
rclb
das
xchg
leave
insl
jecxz
outsb
sbb
lret
push
xchg
mov
xchg
andl
cltd
xchg
loop
shll
push
cmp
sub
lods
inc
outsb
mov
cmp
ds
repz
push
pop
fst
cltd
mov
mov
cmpsb
imul
or
jmp
mov
cmp
push
and
int
inc
jmp
jae
sahf
in
js
mov
in
jne
xchg
pop
ret
sub
xchg
add
push
push
ret
xlat
out
mov
and
aad
into
push
lods
stos
and
dec
pusha
js
arpl
fcomps
jp
jo
mov
inc
dec
insb
push
cmpsl
movsl
pop
scas
sub
out
push
pop
jle
add
jnp
jle
test
dec
leave
mov
mov
sbbl
pop
ficomps
mov
push
ds
cmpsl
insl
rcrl
fwait
mov
sub
push
or
inc
jnp
movsb
dec
outsb
adc
rcll
dec
or
cmp
xchg
cmp
mov
lds
jb
popf
push
sub
and
cmpb
adc
movsl
fisttpll
push
jl
out
pop
add
or
cmc
shl
add
adc
adc
movsb
jo
imul
inc
lock
hlt
push
or
mov
cld
into
add
ficoms
jle
jge
inc
addr16
jle
loop
in
fiaddl
mov
jg
das
add
movsl
pop
mov
mov
add
jg
aam
sbb
sub
xor
in
mov
push
pop
add
mov
stos
inc
out
sbb
mov
fisttpl
js
mov
test
sbb
aam
push
mov
mov
fisttps
sub
sub
dec
mov
ret
cmc
ret
sti
or
sub
pop
sbb
je
pop
int3
xchg
add
repnz
les
xchg
add
pop
imul
mov
nop
jo
push
loope
and
adcl
push
push
push
adc
mov
fdivl
nop
repz
sbbb
arpl
pop
outsl
mov
jle
inc
jge
sub
into
push
and
insb
cmp
adc
mov
add
lcall
mov
add
lds
data16
sahf
sahf
bound
out
lret
bound
push
iret
jecxz
sar
pop
xchg
push
scas
enter
pop
sbb
outsl
push
rcll
xor
jnp
lea
test
or
push
nop
cmp
fstpl
rclb
cwtl
sub
fcompl
and
push
xor
adc
leave
add
jg
outsb
add
es
std
and
roll
movsl
popa
cli
int
notb
jecxz
mov
sbb
xor
fsubrl
xchg
jg
push
outsb
popa
mov
pushf
mov
ret
subb
out
mov
int
mov
adc
repz
popf
mov
cld
jp
pop
push
inc
insb
inc
xchg
std
or
xchg
jecxz
jmp
cmp
push
cmp
sti
iret
mov
iret
mov
in
ret
push
cmpsl
call
add
xor
mov
dec
xchg
sbb
das
lods
arpl
sub
stos
pop
or
into
das
das
call
and
aaa
xchg
inc
test
mov
bound
mov
mov
enter
lea
addl
sbb
xor
icebp
lods
out
pop
shlb
xor
shlb
rcr
shll
mov
dec
sub
fisubl
cmp
testb
or
fnstenv
push
outsl
sbb
rcrb
ret
sub
lock
and
mov
inc
ret
mov
movsb
inc
mov
outsb
pop
sahf
cmp
cmp
jecxz
and
ss
pop
repnz
dec
push
push
icebp
push
je
and
sbb
ret
fcoml
jl
jl
mov
push
outsb
cmpsl
repnz
insb
repnz
adc
dec
dec
fwait
rcrl
cmp
mov
sub
cmp
test
sbbb
sbb
xchg
mov
daa
dec
aad
sub
jecxz
pop
stos
jg
lret
je
mov
andb
push
arpl
cld
sub
mov
cmp
xlat
shrl
push
cmp
cwtl
test
lds
jmp
push
arpl
imul
dec
sub
in
insl
stc
xchg
popf
cmp
sbb
pop
int
inc
inc
add
pop
into
loop
pop
jnp
jp
sub
cmpsl
push
cmp
push
call
push
ljmp
cmp
inc
xchg
mov
pop
in
sbb
sbb
mov
je
or
addl
jb
mov
push
iret
js
push
enter
loop
xorb
and
add
negl
pop
divl
sbb
lret
lcall
add
mov
jae
push
mov
mull
xchg
xchg
pop
pop
mov
rcl
lds
add
sub
scas
les
into
gs
fmull
and
xchg
sbbl
out
dec
std
jns
mov
jmp
fldcw
inc
xor
mov
mov
outsb
mov
sbb
add
mov
jae
shll
cmp
and
subl
repnz
out
push
insl
jmp
scas
fisubl
xor
push
pushf
out
cmpsl
mov
bound
clc
jl
jno
add
hlt
std
pop
pop
mov
sarb
std
push
lea
popa
sarl
inc
push
cmc
mov
cs
sub
xor
lods
adc
cld
aaa
sub
lea
lcall
dec
push
push
test
mov
lret
push
sbb
iret
mov
inc
fldcw
mov
push
mov
xlat
pop
ret
outsl
jge
sbb
push
das
mov
enter
in
repnz
mov
xchg
je
xor
cmp
aad
test
push
iret
add
insb
inc
daa
and
mov
dec
lock
sbb
sub
pop
push
scas
pop
dec
imul
repnz
xor
imul
push
jo
dec
out
nop
mov
jnp
jno
jle
xchg
movsb
std
ds
cli
pop
aam
sbb
mov
sub
loopne
jle
incl
nop
xchg
jg
fcoms
fnsave
ds
aaa
clc
mov
leave
andl
and
cmpsl
or
shlb
mov
jmp
in
sub
jns
je
and
lret
mov
pop
jg
and
enter
mov
xor
bound
push
push
or
outsb
imul
add
dec
dec
test
imul
sbb
mov
dec
and
jmp
or
sahf
jmp
pop
add
xor
nop
inc
sarb
out
xor
sub
sbb
bound
or
xchg
xor
into
mov
cmp
cmp
inc
mov
lcall
aam
push
repnz
mov
adcl
dec
push
lods
out
jns
and
pushw
jne
dec
adc
and
ds
shlw
arpl
mov
sub
dec
lods
pop
rcl
lods
mov
pop
fistpl
ja
add
xor
mov
iret
out
pop
xchg
add
and
add
test
or
pop
xor
inc
adc
outsl
pop
jg
mov
sarb
ret
roll
dec
mov
push
mov
leave
dec
sbb
outsl
addr16
inc
or
xchg
mov
pop
je
dec
adc
xchg
mov
mov
pop
ja
rorb
imul
scas
nop
jns
pop
xor
test
xor
repnz
pop
je
in
xor
jne
in
cmpsb
push
xlat
or
int
xchg
sbb
xchg
push
xor
xor
rorb
push
insl
hlt
stos
pop
imul
cld
or
inc
pusha
fcomps
dec
jg
xchg
mov
mov
dec
xchg
and
add
test
cli
jnp
into
in
enter
mov
mov
mov
jae
dec
fisubrl
pop
subl
jo
sub
cltd
subb
pop
movsb
jl
inc
popa
out
dec
mov
jo
rorb
jmp
inc
push
scas
push
cld
adc
xor
mov
out
fs
shrb
pop
push
aam
decl
add
imul
loopne
rorl
mov
mov
fcoms
out
dec
popf
fs
test
lea
push
mov
cmp
jmp
push
pusha
mov
pop
cmp
mov
inc
push
outsl
push
sti
push
mov
push
repz
clc
push
dec
cmpl
xchg
push
mov
mov
mov
add
cli
adc
sbb
push
inc
pop
add
push
pop
push
jae
adc
out
out
in
add
lahf
xchg
inc
negb
jae
les
mov
mov
cwtl
addr16
cmp
jnp
and
push
jno
mov
jp
and
shrl
dec
xlat
daa
sti
addb
sub
xor
cltd
mov
mov
sub
sarl
inc
mov
jne
mov
enter
out
gs
popa
cli
pop
mov
adc
pop
aaa
pop
pop
pop
ret
pop
mov
pop
jb
popf
ret
ror
cmp
mov
jbe
out
insl
cmpsl
sbb
fistps
cli
jae
xchg
push
mov
clc
loopne
mov
lret
dec
int
in
movsl
rcll
loope
pop
mov
jne
sub
mov
lods
movsb
movsl
jns
mov
ss
sahf
jecxz
cmp
xchg
pop
push
mov
subb
div
and
add
icebp
xorb
jbe
jp
push
xchg
clc
je
roll
aam
pop
inc
and
adc
mov
lahf
sub
pop
xchg
or
mov
xor
jg
push
cwtl
outsl
xchg
and
test
in
lcall
out
pop
push
sub
bound
mov
dec
cmp
cld
mov
adc
lcall
pop
test
pusha
push
or
js
out
xor
mov
inc
and
and
ret
mov
fistpll
inc
pop
ret
jnp
rclb
jl
lret
jecxz
and
mov
xor
jmp
aas
into
cltd
jp
mov
sub
push
icebp
fstps
bound
mov
jmp
pop
push
jae
xchg
divb
jp
push
stc
fnstcw
movsb
push
ljmp
test
push
fisttpll
pop
les
pop
cmp
es
fbld
jae
or
mov
js
addr16
test
jns
data16
jl
in
ds
repnz
scas
xchg
add
push
lods
fldenv
add
insb
jo
cli
lahf
inc
ret
cld
hlt
sub
insl
cmpl
pushf
cmp
dec
pop
sub
mov
xchg
fwait
ret
mov
pop
mov
and
aam
test
neg
push
mov
sub
mov
xchg
ret
scas
std
popl
jo
cwtl
in
lret
ret
movsb
stc
push
in
mov
mov
push
jns
iret
pop
sbbb
adc
cli
enter
cmp
mov
ror
push
sub
jl
pop
push
aam
add
add
push
cs
mov
out
jno
add
outsl
cmp
xor
push
push
dec
mov
std
jno
push
in
lods
or
movsb
add
xor
fwait
sub
stos
cmp
fsubs
inc
mov
adc
fistl
ljmp
stos
xor
sbb
call
mov
pop
dec
inc
lea
pop
stos
imul
and
sub
mov
xchg
pop
add
popa
mov
adc
fwait
mov
or
outsb
mov
sbb
cmp
push
sbb
mov
lea
movsl
xor
xor
movsb
leave
les
out
mov
stos
adc
ds
mov
xchg
loopne
rcll
fmul
sub
cwtl
push
popa
je
mov
mov
sahf
and
popf
in
jo
repz
in
das
jp
imul
dec
loopne
or
inc
inc
int
shl
jnp
pop
jne
out
or
pusha
inc
xor
sbb
pop
fs
cwtl
inc
dec
pop
in
add
rolb
sub
inc
pop
mov
ret
pop
mov
dec
mov
fldenv
and
mov
xor
xor
sti
push
pop
bndldx
ljmp
sti
adc
sub
pop
lods
jbe
or
pop
pop
mov
sbb
or
int
dec
test
insl
push
nop
nop
hlt
or
clc
jle
das
stos
pop
clc
jo
enter
mov
push
out
sbb
out
xchg
stos
xchg
sbbb
out
dec
push
adc
int3
test
pop
ljmp
les
push
jle
shrb
rcll
and
mov
xchg
gs
fisubs
daa
arpl
popf
jae
add
dec
mov
popa
xchg
ret
xchg
lods
mov
lds
fsubs
decb
shrl
test
inc
in
call
cmpsl
ret
popf
repz
arpl
cmpb
out
shrb
pop
out
jge
mov
ljmp
cmp
sbb
dec
pushf
sbb
and
xchg
ja
sbb
out
in
sbb
jne
xchg
das
clc
cmpsb
xlat
push
push
push
das
lods
mov
inc
lret
jb
sti
test
mov
aas
aam
imul
mov
xchg
ficomps
mov
outsb
aas
xchg
add
fcomip
adc
mov
xchg
sub
push
cld
jge
outsb
mov
insb
js
pop
les
xlat
adc
call
repz
add
scas
fdivrs
outsb
pop
inc
mov
icebp
push
mov
mov
test
adc
gs
test
scas
movsl
call
or
dec
movsl
pop
cmp
pushf
push
roll
jo
fwait
or
cltd
mov
and
les
and
mov
ficoms
stos
sbb
add
mov
cmp
mov
testl
push
dec
out
push
mov
fnstenv
cmp
in
sarl
leave
cmpsl
mov
imul
enter
in
sbb
dec
xchg
sbb
imul
dec
sub
jb
dec
nop
xchg
or
push
cmp
mov
test
call
out
in
adc
xlat
jno
inc
jo
xor
movsb
dec
jl
cld
leave
xchg
js
fisubrl
or
or
adcl
dec
imul
je
sar
and
jae
or
in
repz
out
xor
or
or
test
sub
addl
pusha
xchg
xchg
sbb
mov
aas
dec
mov
mov
mov
add
sub
jb
jno
cmp
xor
lock
xor
adc
popf
aam
sbb
mov
or
xor
adc
sti
cmp
insb
or
sub
push
aad
mov
call
outsl
adc
adc
lahf
mov
sbb
xlat
mov
in
xor
jno
test
ret
repz
dec
out
inc
push
fsubr
cmp
dec
jb
call
push
inc
das
mov
add
mov
adc
cld
inc
mov
xchg
mov
jbe
and
xor
scas
inc
movsb
or
sub
ljmp
push
mov
xchg
add
cwtl
out
or
jl
cmp
and
mov
cmc
dec
andl
outsb
out
lock
mov
stos
cmp
mov
sbb
insb
dec
mov
xchg
sti
hlt
into
imul
imul
adc
daa
in
push
sub
lahf
lret
in
iret
jge
andl
cltd
in
cmp
xor
add
dec
push
sub
dec
sub
pop
fidivrl
shlb
lods
sbb
fs
adc
add
out
mov
and
lds
pop
fwait
sbb
jp
into
int
jmp
fwait
xchg
mov
dec
loope
adc
jg
push
test
cmc
int
lods
popf
enter
inc
adc
movsb
adc
mov
orl
mov
push
lods
mov
clc
aas
inc
iret
fcmovu
or
pop
imul
mov
add
in
test
jb
andl
and
add
pop
mov
mov
loop
dec
jnp
imul
sub
and
lds
mov
mov
dec
jge
jo
filds
mov
cmpsl
stos
test
xchg
and
cmc
push
jbe
mov
fisubrl
xchg
adc
imul
dec
leave
jge
mov
dec
xchg
mov
xchg
push
cmp
sbb
rcrb
arpl
xor
mov
addr16
clc
sub
pusha
push
test
dec
lods
addr16
jmp
cmc
push
int3
ret
loop
icebp
into
fidivl
dec
inc
and
and
jmp
insb
cmpsb
sub
rcr
aad
mov
mov
xchg
add
sbb
dec
xchg
sbbl
pop
push
dec
mov
out
shl
jge
mov
leave
push
test
mov
xchg
outsl
dec
mov
fistpll
push
jnp
push
pusha
pusha
xor
jae
jmp
cmpsb
in
or
push
and
add
inc
add
dec
jl
jo
sbbb
fs
cli
out
in
mov
cmpsb
or
add
add
cmpsl
test
mov
les
mov
repnz
or
or
arpl
jge
mov
je
push
mov
int
push
jo
orl
divl
and
add
jmp
pusha
add
mov
adc
and
add
imul
call
jp
sbb
mov
jmp
rcl
xchg
rcl
mov
arpl
mov
daa
or
xor
repnz
sub
test
pop
pop
xchg
fs
adc
xchg
sub
hlt
sahf
jecxz
jmp
in
adc
push
or
in
stos
xorb
push
lock
add
fildl
loopne
sbb
push
push
sbb
test
pop
sub
ja
sbb
sub
scas
rolb
lea
xor
add
mov
daa
adc
xchg
scas
clc
mov
cmpsb
mov
jle
xchg
xchg
push
push
sub
cltd
add
in
std
sub
sub
push
add
ja
out
add
jmp
lret
inc
icebp
data16
cs
lods
xorl
ljmp
fstpl
mov
fistps
inc
adc
ljmp
pop
in
loope
ret
mov
xchg
and
xlat
pop
pop
or
xor
push
pop
call
pop
mov
andl
mov
fwait
int
cltd
daa
cltd
orl
add
mov
pop
in
dec
cli
add
cld
imul
es
mov
adc
xor
mov
xchg
sahf
push
jecxz
jge
fldenv
xchg
iret
imul
je
jge
mov
pop
loopne
mov
shrl
push
mov
mov
insl
inc
fstps
das
inc
jge
jno
test
gs
jmp
ret
fcoml
jl
in
jp
aaa
shll
lret
cld
idivb
xor
inc
cs
xlat
and
push
shrl
cmp
xor
push
or
ret
es
dec
stos
add
adc
movl
das
fisubl
add
aam
gs
cs
stc
jg
enter
cmp
sub
divb
adc
push
addr16
mov
and
dec
add
xor
aad
stos
movsb
xor
hlt
push
stc
fldt
mov
repnz
push
orl
shll
ljmp
cli
aaa
cmp
pop
mov
mov
popa
gs
sub
imul
in
fdivs
mov
xchg
jle
and
lea
sbb
hlt
xlat
int3
daa
mov
mov
push
ss
xor
push
xor
imul
pop
mov
or
push
cmc
mov
and
xchg
test
adc
in
jmp
out
adcb
jmp
andl
jnp
aaa
into
out
pop
mov
mov
sbb
repnz
sbb
mov
ljmp
dec
fstl
inc
xchg
fdivrl
cltd
gs
mov
stos
inc
jge
insb
fs
divb
dec
adc
or
mov
cld
and
cwtl
pop
add
dec
stc
cmc
test
repz
or
jo
fistpl
lcall
imul
cmpsl
aaa
mov
in
mov
dec
mov
dec
stc
scas
test
mov
out
mov
push
in
sbb
dec
add
in
test
hlt
inc
mov
xor
mov
int3
xlat
adc
and
jae
mov
or
jb
add
xor
pop
imul
and
add
xor
es
iret
pop
movsb
push
mov
rclb
mov
sahf
lock
xchg
test
dec
mov
cld
jmp
mov
es
dec
cmpsb
shll
inc
mov
sbb
adcb
inc
mov
test
push
mov
and
dec
inc
mov
xchg
xchg
sbb
dec
cmpsb
popf
mov
sub
scas
dec
or
jle
dec
enter
outsl
out
add
repnz
rorl
lock
dec
js
test
xchg
lea
inc
rorb
dec
mov
inc
ss
or
and
repnz
adc
bound
cltd
sbb
dec
mov
xchg
cmp
repnz
xchg
inc
hlt
imul
pop
mov
add
mov
mov
adc
push
jbe
scas
repnz
rclb
scas
popf
enter
je
inc
stc
iret
mov
add
or
mov
inc
cmp
adc
out
adc
mov
cmc
pop
sbb
ret
jge
push
outsb
int
and
sbb
pop
adc
mov
bound
push
push
cmpsb
pop
fs
roll
scas
cmpsl
mov
xor
cmp
mov
and
pmaddwd
out
and
add
cmpsb
mov
xchg
mov
xor
inc
jecxz
jecxz
lahf
or
cmp
pusha
out
movsb
push
push
xor
cmp
cmpsl
push
or
dec
enter
imul
test
les
pop
movl
shrl
mov
lds
mov
sbb
scas
jne
or
sahf
add
xor
cwtl
mov
xchg
int3
or
in
sarb
mov
hlt
lahf
push
hlt
sbb
mov
in
stc
mov
inc
mov
add
push
sbb
jecxz
rcrb
ljmp
push
lret
xchg
test
xor
push
mov
ret
sahf
cmp
pushf
call
inc
lea
lcall
jmpw
orb
pop
pop
pop
inc
cmp
jp
in
mov
fcompl
inc
int
fxch
out
out
or
sbb
inc
pusha
and
shlb
in
fmull
mov
fldl
aas
mov
mov
xchg
inc
movsb
cmp
loope
xchg
sub
xchg
shlb
adc
shlb
mov
cmpb
mov
cmpb
dec
dec
aad
or
lds
pop
or
lock
add
push
fwait
ss
mov
jo
mov
test
and
xor
adc
inc
push
pop
pop
mov
xchg
mov
gs
es
repnz
popf
iret
cmpsb
jecxz
dec
rclb
sbb
jno
lea
rcrb
mov
adc
or
adc
jecxz
mov
xchg
std
cmp
pushf
call
popf
popa
xchg
xchg
pop
sub
xor
xor
inc
adc
adc
or
xchg
dec
xchg
scas
stos
icebp
loopne
xor
jecxz
test
mov
jmp
aad
je
jbe
aad
or
addr16
cmpsl
or
in
xor
js
xchg
pop
sub
mov
dec
nop
pop
pop
and
jae
sbb
or
mov
sahf
cmp
sbb
cmpsb
inc
out
leave
xchg
jae
cmp
scas
and
popf
movsl
adc
jmp
mov
inc
add
mov
mov
nop
jp
movsb
dec
xchg
fmuls
imul
push
fmull
stos
inc
and
sub
push
fcmovbe
imul
push
pavgw
push
pop
and
fnsave
insb
xchg
ja
cltd
nop
fcomi
inc
cltd
xchg
mov
addb
mov
add
xchg
push
adc
frstor
push
in
xchg
jmp
movl
aas
jnp
mov
xor
adc
xchg
pop
imul
or
pmulhuw
cltd
fbld
jae
sub
mov
push
pop
out
imul
arpl
inc
or
loop
push
sbb
and
xor
outsb
and
call
loope
push
inc
rclb
push
inc
xor
lds
cmp
cmp
mov
rcrl
inc
inc
out
xor
push
into
aaa
shll
inc
sbb
sbb
pop
es
loope
sbb
xor
pop
mov
jl
imul
in
or
xchg
cwtl
roll
imul
repnz
jl
adc
push
inc
int3
mov
inc
push
popl
pop
inc
xlat
add
cmp
xchg
test
or
aam
xchg
stos
xchg
dec
mov
inc
gs
fisubl
dec
xlat
addr16
mov
cmp
cmp
adc
mov
std
mov
dec
mov
imul
aam
les
pop
insl
call
jno
lock
repz
mov
sub
dec
stos
dec
mov
movsb
rcrl
lods
gs
and
in
push
es
jb
add
dec
lods
mov
out
test
inc
es
ficoml
jo
or
or
cmpsl
repz
adc
push
push
sti
cmpsl
mov
daa
dec
sbb
addr16
arpl
lods
mov
xchg
out
cmc
and
aaa
mov
xchg
pop
xchg
neg
cmpsl
sub
in
mov
add
gs
rclb
in
dec
in
mov
pusha
es
hlt
sbbb
dec
jne
mov
push
xchg
mov
lea
mov
xchg
mov
lret
in
jb
fsubl
xor
jl
adc
xchg
cmpsl
scas
cli
xor
lret
or
pop
lret
and
add
or
daa
lcall
daa
inc
inc
dec
ja
aad
xchg
add
clc
fbld
mov
fwait
push
dec
scas
xorb
dec
out
push
cmp
insl
cli
pop
jae
mov
and
pop
call
or
sub
mov
sbb
lret
sub
mov
js
pop
test
and
cmp
movsl
loope
icebp
test
jge
rclb
and
dec
sub
jle
jmp
and
push
mov
sahf
sbb
repz
mov
jns
nop
mov
ret
jae
lret
pop
hlt
aaa
leave
inc
cmp
clc
dec
leave
xor
mov
sahf
push
xchg
or
jbe
gs
stc
mov
xor
pop
jmp
cltd
imul
mov
mulb
jmp
sub
mov
test
repz
xchg
clc
xchg
xlat
mov
jg
lea
sbb
push
lods
jle
loope
and
mov
ficoms
fmul
jno
mov
pop
adc
xchg
dec
insl
ret
repnz
cmp
and
cmp
popf
inc
mov
rcrl
jbe
rcrl
sarb
scas
cmp
pop
sbb
fmuls
adc
pop
lock
sarb
or
ljmp
jno
pop
push
mov
adc
js
rcr
imul
sub
jp
mov
xor
loopne
inc
inc
mov
add
xchg
add
mov
out
mov
fwait
push
push
flds
mov
xor
push
nop
jae
sub
icebp
pusha
fstpt
stos
es
inc
scas
fs
dec
jmp
cmp
fildl
sub
add
mov
pop
fsubrs
push
scas
cwtl
dec
idiv
push
icebp
inc
mov
rcll
xchg
daa
add
testb
cmp
adc
add
out
mov
fimull
mov
mov
pop
or
push
fsub
imul
out
cs
mov
lahf
pop
es
outsb
jmp
push
loope
fistpl
out
inc
pushf
repz
inc
icebp
movsb
xchg
add
mov
mov
std
gs
mov
cmpsl
xchg
imul
xchg
inc
jmp
fcmovu
pop
ficoml
inc
push
push
sahf
and
jnp
int3
pusha
loop
mov
xor
cmp
gs
cmp
add
and
mov
lcall
addl
jge
adc
cltd
sub
pop
nop
pop
lcall
popf
adc
sub
jl
test
popa
push
xchg
pop
lea
gs
sub
xor
xchg
les
testb
mov
lahf
xchg
int
pop
lcall
mov
ss
sub
mov
xor
mov
pop
pop
ret
jo
xlat
es
xchg
sbb
incb
sub
leave
sarl
stc
sbb
test
clc
lcall
dec
pop
cltd
and
cli
pop
cmc
inc
push
sbb
sub
fwait
les
jns
xor
jmp
inc
sti
lods
jns
adcb
adcl
mov
int
inc
inc
hlt
scas
call
cmp
mov
jbe
outsl
imul
push
jl
movsb
sub
insb
xor
jnp
sbb
mov
jb
lret
inc
xor
push
lods
dec
cmp
jmp
and
lods
cmp
mov
inc
scas
push
mov
pop
les
mov
inc
daa
ljmp
lahf
jecxz
push
and
push
mov
loope
mov
and
or
jae
mov
and
push
js
xor
cltd
xchg
cs
ret
gs
into
adc
push
fimuls
mov
pop
cmpsl
cmp
mov
mov
mov
xor
adc
cmpsb
dec
movsl
mov
inc
pop
call
pop
lret
xchg
jno
outsb
xchg
lods
into
push
adc
and
testl
idivb
int3
jnp
mov
dec
mov
test
in
popa
mov
insl
pusha
imul
jnp
in
xor
or
pop
mov
mov
jmp
mov
stc
outsb
push
cmp
mov
sbb
jne
mov
loope
call
push
lret
xor
jne
rcrl
add
jmp
cmp
mov
bound
stos
lcall
addr16
aas
fimull
iret
push
cmp
ja
out
clc
push
cmp
push
ret
xchg
add
fstpt
and
test
mov
in
stc
pop
and
js
mov
xor
aaa
inc
mov
addr16
mov
fisubrl
push
les
mov
stc
adc
jbe
xchg
cmp
jp
out
inc
call
aad
mov
dec
and
cmp
je
or
shlb
dec
loopne
insb
stos
sub
imul
add
push
inc
loopne
in
push
sarb
mov
popa
in
push
xchg
jp
push
push
mov
mov
xor
in
call
ret
or
and
jg
loope
into
sbb
shll
inc
mov
or
in
js
lock
sub
ss
sahf
rcll
stc
imul
lods
cltd
adc
mov
lds
jl
sbb
sbb
and
lds
icebp
movsb
loopne
lea
push
cmpsl
xorb
or
xor
add
mov
mov
stos
add
mov
cli
cwtl
cmpsb
gs
les
xchg
or
xor
xchg
ret
sub
mov
arpl
jb
ja
dec
mov
in
jecxz
push
test
mov
jno,pt
add
enter
loop
cmp
cmp
jmp
xchg
push
sbb
xor
and
dec
mov
add
sbb
aaa
xor
fsubrl
invd
sbb
jecxz
inc
cmpb
jle
adc
adc
add
fldt
xor
addr16
ret
mov
sub
aam
jl
cmc
in
pop
cmp
pop
dec
push
out
add
jno
dec
cmp
aas
outsl
in
loope
push
cltd
fdivl
add
dec
dec
push
lds
pushl
sarl
fdivr
addr16
mov
jmp
arpl
jne
jp
sub
pop
xlat
fs
rcr
cmp
test
das
push
insb
out
mov
bound
imul
les
or
popf
sub
pop
add
ret
outsb
enter
jae
rcl
sub
mov
jge
add
adc
repnz
sub
mov
insl
daa
cmpsl
arpl
xchg
mov
inc
repz
cli
mov
fsubr
jb
ss
adc
lea
sub
mov
or
jae
iret
testb
in
mov
inc
pop
mov
xchg
pop
repz
jge
sbb
dec
mov
ljmp
and
lea
cmp
xor
int
out
cld
inc
pop
xor
and
aad
hlt
dec
out
fs
pop
icebp
lods
and
pusha
add
mov
jg
and
mov
je
out
jp
add
cmp
out
push
cmp
scas
or
out
je
mov
div
aad
mov
mov
push
sub
repnz
enter
clc
jnp
pushf
jb
ss
insl
fildl
push
and
mov
sbb
fnstsw
into
push
sub
push
dec
push
jle
vcvtpd2dq
jbe
test
dec
outsl
test
mov
lods
dec
mov
jecxz
les
and
les
outsl
mov
mov
jp
or
inc
push
cli
sub
les
push
add
fbstp
ds
lret
in
scas
aaa
push
mov
ja
hlt
mov
mov
adc
push
addr16
neg
xor
push
sahf
lahf
xchg
cmp
addb
mov
add
popaw
lock
stos
xor
aaa
adc
cmpl
ja
loopne
xchg
popf
jmp
cmp
in
movsl
mov
mov
mov
cltd
adc
adc
mull
xchg
les
test
jo
popf
cmpsb
cmp
dec
sub
push
lock
scas
dec
notl
mov
roll
push
push
cmc
push
mov
mov
pop
std
xor
out
pusha
in
pop
bound
adc
clc
push
aad
int
adc
ja
loope
mov
xchg
jb
push
cmp
sub
das
cwtl
test
xchg
mov
negb
call
es
je
daa
jnp
mov
mov
ljmp
repz
pop
mov
inc
pop
out
imul
inc
jle
lods
and
push
ds
xor
daa
leave
sub
repz
aas
ret
pop
sub
incl
jecxz
sahf
mov
sbb
loopne
test
push
popf
mulb
sbb
insl
mov
xchg
xlat
pushl
or
pop
cs
cmp
mov
sbb
and
adc
rorb
cmp
lahf
dec
xor
pop
pop
in
rcrb
cltd
in
aaa
pop
aas
mov
iret
leave
js
xor
call
pop
out
mov
jne
sub
jb
fs
fbld
dec
sbb
sbb
out
add
sbb
addr16
add
jp
test
fnsave
mov
pushf
call
lods
xor
mov
int
and
rorl
pop
sbb
and
ret
pop
push
lcall
cmp
push
jmp
je
or
sub
sub
or
icebp
pop
adc
inc
mov
dec
ljmp
pop
stc
scas
icebp
addr16
leave
adc
inc
std
adc
mov
call
ret
stos
mov
cmp
push
aaa
les
push
and
jae
je
xor
call
xor
fdivl
es
push
jno
pusha
mov
add
xlat
or
movsl
pop
pop
lahf
pop
pop
jne
addr16
imul
mov
aam
pop
pop
jmp
mov
push
int
inc
into
fwait
das
xchg
testb
or
xor
into
mov
cmp
in
xor
fldt
and
fs
lahf
jnp
clc
xchg
imul
or
rol
lods
add
push
bound
mov
jecxz
push
adc
jle
shl
push
aaa
adc
sub
iret
mov
cmpsl
xchg
cmpsl
push
mov
add
jle
push
or
lods
inc
repnz
ss
sub
mov
neg
xchg
or
fsubl
hlt
dec
pop
cs
movsb
jecxz
mov
orb
xchg
adc
lea
mov
and
fsubl
das
fs
sahf
lds
jmp
mov
inc
sub
fdivp
test
sbb
test
or
lret
sbb
ds
sub
add
lods
dec
ret
mov
push
clc
cmp
imul
imul
imull
stos
mov
scas
xor
jp
cmp
dec
push
adc
adc
jnp
xor
lock
mov
lods
lcall
push
pop
lods
fiaddl
mov
fmulp
or
xor
jl
pop
ficoml
enter
fmuls
adc
mov
xchg
push
lods
out
loopne
pop
mov
in
movntps
arpl
ja
mov
dec
into
adc
ljmp
lahf
leave
stos
cmpsb
and
mov
push
mov
aam
notb
pushf
add
ret
fmuls
rcrb
mov
mov
sub
jns
pop
daa
jbe
cmpsb
and
imul
mov
push
cmc
jmp
gs
jle
pop
inc
and
adc
imul
incb
inc
jae
mov
sub
in
dec
fisubrl
int
shlb
pop
daa
clc
adc
sti
mov
jns
shrl
pop
jb
push
and
mov
lock
pop
sbb
sbb
lds
imul
sbb
test
pop
imul
dec
imul
aad
pop
lcall
mov
out
aaa
stc
lahf
and
arpl
inc
xor
xchg
xchg
rol
xchg
dec
daa
xchg
cmp
in
or
les
pop
cmp
or
rcrb
lea
or
shrb
ret
jp
jae
mov
icebp
cmp
fcom
and
sbb
outsl
add
jno
and
int
aam
jecxz
push
in
jmp
lock
aad
jecxz
sbb
aaa
lea
sbb
pop
dec
inc
push
mov
ja
add
ljmp
idivb
js
aas
lahf
xchg
cmpsb
push
in
dec
clc
jbe
sbb
out
pop
sbb
aad
aas
bnd
pop
jne
scas
push
test
sbb
and
sbbb
dec
jg
mov
test
jbe
fsubp
daa
imul
clc
inc
xchg
mov
sbb
mov
inc
jecxz
out
jbe
data16
lea
mov
mov
inc
popf
adc
les
test
mov
push
xchg
ds
je
inc
adc
arpl
ss
adc
shl
sub
pushf
sbb
push
add
hlt
stos
inc
fs
scas
pop
or
ljmp
lret
sub
sbb
fdivr
lahf
xchg
mov
fsts
into
stos
fistpll
mov
cli
jl
or
repz
pusha
jl
lods
shlb
notb
stos
mov
xor
xor
jo
test
mov
popf
dec
std
dec
das
mov
sub
pop
pusha
sbb
mov
or
stc
scas
cmpsl
xchg
cld
lea
outsb
dec
enter
call
cmpsl
nop
xor
mov
adc
and
jb
or
std
in
and
rcrl
ds
pop
aaa
stc
or
ret
fldl
test
scas
sub
cmpsb
pop
cmp
xchg
aas
push
push
xor
enter
loopne
stos
jp
inc
mov
mov
popa
pop
sub
mov
mov
clts
push
ret
popa
popa
cld
gs
int3
in
sub
ljmp
xchg
flds
cwtl
fidivl
mov
or
int3
cmp
lret
jns
push
mov
insl
pop
jo
xchg
xchg
mov
js
fisubl
dec
sub
sub
dec
inc
cwtl
jb
sbb
out
inc
sub
mov
cmpl
push
imul
mov
push
or
or
rcr
dec
aad
sbb
xchg
and
fs
imul
cmp
sub
adc
sub
fwait
je
mov
rorb
dec
aad
insl
sti
cmp
sub
xlat
les
cltd
pop
cmp
jno
xor
mov
sbb
out
pcmpgtb
jns
pop
iret
pop
out
dec
dec
or
cld
daa
adc
mov
enter
add
movsl
add
scas
cmp
mov
jbe
mov
bound
mov
mov
ljmp
add
sbb
out
hlt
xorl
roll
dec
push
outsb
mov
add
lret
ret
jl
push
adc
outsl
add
loopne
push
jbe
fs
cli
mov
dec
pusha
int3
jmp
and
dec
in
cmp
shr
mov
pushf
jl
push
ss
std
fs
test
add
scas
mov
int
adc
cwtl
cmc
add
fwait
cmp
pop
cmp
mov
mov
es
inc
shll
push
or
dec
sub
sub
or
inc
outsb
cltd
push
in
arpl
loope
insb
adc
fdivp
pop
stos
loopne
sbb
rcrb
insl
bound
arpl
gs
cmp
and
or
adc
lea
sbb
pop
sbb
adc
sub
mov
loope
or
iret
push
mov
xchg
inc
imul
ja
insb
data16
mov
xor
mov
cwtl
mov
sbb
cmp
addr16
stc
push
and
mov
ret
adc
mov
hlt
leave
test
insl
test
adc
xchg
daa
lea
les
sub
in
es
xchg
mov
and
mov
fwait
aad
add
xor
repz
mov
movsb
mov
dec
jne
scas
add
cmp
dec
out
ljmp
fsubrl
rorb
or
paddq
jae
pop
addb
aas
cmp
stc
aad
or
ret
pop
cli
jns
sbb
fcmovne
cmp
fiadds
js
inc
add
ja
push
imul
fs
sub
sbb
fldenv
push
mov
and
repz
popf
insb
mov
pop
jg
ja
lret
sahf
pop
and
int3
test
dec
aam
xchg
stc
inc
ret
and
jmp
xorb
jp
dec
sti
outsb
jae
jmp
adc
cmp
rcll
lds
adc
or
xchg
leave
fstl
or
mov
call
fsubrl
push
rol
push
fmuls
popa
dec
xchg
jmp
cmp
lds
pop
dec
ja
jae
cmovns
jb
xlat
mov
arpl
rolb
shll
xor
jnp
sub
scas
and
iret
mov
ficoms
nop
out
pusha
cmp
adc
ror
jle
pop
stos
mov
sub
adc
cltd
fsubrl
inc
dec
repz
fdivl
mov
dec
sti
push
mov
jg
adc
test
add
jmp
pushf
fcomi
mov
fmuls
adc
push
pop
adc
sbb
pop
inc
test
fildll
repz
or
jmp
pop
jns
movsl
mov
sub
fistpl
lods
and
dec
cli
ret
inc
and
or
cli
inc
dec
fnstenv
pop
mov
adc
dec
jo
adc
das
mov
fstpl
roll
sub
cmpsl
cmp
orl
and
test
cmp
push
lock
fldl
push
and
dec
or
enter
jo
jl
enter
nop
es
lock
jae
push
lcall
cmpsl
fwait
jp
dec
test
pop
cmp
push
push
out
ret
add
insl
sti
dec
test
sub
and
in
inc
in
je
mov
jmp
inc
xchg
mov
fwait
stc
jp
call
scas
adc
mov
dec
rcrb
gs
test
out
push
imul
push
mov
jecxz
xchg
dec
pop
and
out
mov
inc
add
movsl
xor
push
ror
cmovp
rol
lods
dec
js
loopne
or
xchg
nop
and
inc
loopne
add
mov
addl
push
xor
cmp
push
sbb
loop
cmp
add
dec
xchg
subb
jns
sbb
push
ljmp
mov
das
ss
mulb
mov
and
cmp
jns
cli
notb
in
ds
mov
add
imull
mov
decl
ss
enter
stos
inc
mov
enter
sbb
pop
dec
xchg
jg
xor
or
stc
mov
cs
add
and
xchg
adc
pop
xlat
lahf
out
dec
in
or
mov
sub
clc
cmpsl
mov
fwait
out
lret
repz
cmp
sbb
aas
int
in
mov
mov
lea
mov
test
mov
adc
mov
ljmp
int3
jle
cmp
aaa
cmp
dec
popf
imulb
int
jno
mov
push
out
xchg
xor
jnp
inc
subb
cmp
adc
adc
sbb
idivb
xor
add
sub
or
jp
fwait
insl
adc
xchg
inc
inc
pop
cli
in
xorps
lcall
fcomps
lahf
ss
push
das
jb
arpl
shlb
mov
mov
mov
lock
hlt
xor
mov
xor
jmp
fs
or
sahf
clc
cwtl
and
in
shrl
fstpl
movsb
popa
dec
mov
int3
push
out
int3
and
xor
bound
lods
jl
mov
adc
addl
ret
dec
lcall
ret
sahf
mov
pushf
addb
xchg
pop
jb
repz
gs
dec
mulb
sbb
psrad
loopne
repnz
insl
mov
cmc
jb
push
and
and
leave
jo
sub
aas
cmpsl
mov
rclb
mov
jp
pop
pop
jne
inc
and
mov
mov
add
outsb
insb
insl
repnz
sbb
popf
shl
daa
mov
cld
rep
arpl
cltd
popf
es
sub
mov
fcmovnb
mov
out
cwtl
stc
adc
mov
mov
loop
pop
jne
lcall
ret
ds
mov
int3
adc
fcom
sbb
and
mov
push
hlt
inc
insb
adc
fwait
lea
xchg
or
mov
in
push
mov
fsubrl
add
add
push
dec
add
push
js
cli
lds
sbb
loope
mov
dec
cmc
and
inc
decb
pop
shrl
jmp
pop
inc
sbb
sub
add
mov
icebp
xor
ja
inc
test
ret
mov
xchg
sbb
mov
mov
sub
hlt
or
jnp
inc
in
les
inc
jl
and
aas
sahf
or
les
pop
mov
mov
roll
in
jbe
and
xor
or
out
mov
pop
sahf
inc
sub
pop
popf
shll
addr16
enter
aas
adc
sahf
aam
fcomip
ljmp
pop
arpl
clc
rclb
out
aaa
cmpsb
ret
sub
cli
nop
jecxz
fs
push
or
jmp
xchg
outsb
cld
lret
iret
cmc
outsl
and
aas
movsl
popa
pop
arpl
das
add
dec
push
and
ljmp
jns
cmp
or
and
cmpsl
rolb
sbb
aad
cmpsl
mov
fisttpl
xor
scas
mov
dec
mov
jbe
ret
sub
std
cmpsb
fnstenv
pushf
call
test
and
jge
aas
jbe
jge
mov
out
or
sahf
xchg
mov
xchg
andl
push
xchg
fs
pushf
enter
xchg
inc
pop
hlt
insl
pop
js
enter
icebp
rclb
xchg
and
ret
push
xchg
lcall
push
out
jecxz
inc
out
inc
out
test
imul
cmpsl
ja
inc
add
scas
push
push
jmp
aas
jne
add
adc
mov
fcoml
cmp
cld
and
mov
pop
sti
pusha
inc
rcll
and
pusha
push
cmp
and
es
pop
out
cs
and
push
mov
inc
xchg
pusha
leave
test
adc
cmp
cmpsl
int3
loop
call
movsl
inc
cmp
mov
mov
aaa
scas
scas
ret
stos
jne
mov
push
call
inc
aad
orl
or
xorb
pop
cmp
fs
dec
lea
cmp
add
fsubl
iret
push
jne
push
cmpl
pmaddwd
pusha
loop
popf
mov
mov
clc
add
repnz
mul
xchg
aaa
icebp
imul
mov
bound
bound
xchg
loop
inc
and
outsl
stos
mov
mov
adc
das
push
rcll
bnd
les
outsb
xchg
popa
rcl
dec
hlt
je
cmp
xor
xchg
adc
inc
ret
pop
pop
pusha
icebp
mov
arpl
scas
pop
jle
jnp
movsl
push
or
imul
inc
std
ret
cmp
and
sti
out
mov
xchg
icebp
sti
sahf
and
pop
inc
movsb
fwait
mov
jg
insb
pop
push
ljmp
and
nop
rorb
leave
cmc
js
leave
in
ja
cmp
xchg
bnd
jmp
sub
xchg
mov
movsb
cmc
imul
or
pushf
push
insl
xchg
pop
rorb
cmpsb
sarb
mov
sub
test
punpckhdq
mov
xchg
popf
outsl
xchg
jnp
arpl
cmpb
sub
insl
nop
and
push
push
sub
pop
cmp
cmp
std
hlt
fstpt
adc
or
sbb
sbb
pop
mov
sub
cmpsb
xlat
movsb
outsl
testl
cld
pop
cmpsl
push
lock
add
icebp
jg
and
std
dec
das
push
cmpsb
pop
or
movsb
add
mov
mov
shl
pop
jmp
ja
js
and
mov
mov
mov
pop
addr16
xchg
push
push
pop
mov
sbb
jne
aaa
cmp
xchg
nop
mov
pop
leave
repnz
pop
addr16
inc
mov
xchg
loopne
jne
fnstenv
ret
mov
inc
mov
movsb
dec
imul
sbb
sub
pop
popf
dec
dec
outsb
lahf
or
subl
sahf
push
dec
mov
sbbb
fidivl
sub
xor
mov
das
lret
add
int3
push
pop
sub
mov
aad
in
lcall
imul
pop
pusha
roll
sbb
mov
cmpb
jp
dec
int
jbe
xchg
xor
je
lds
int3
sti
sbb
test
dec
jp
adc
subl
nop
clc
pop
fidivs
cmp
je
rol
fisttpl
sub
adc
stos
stos
xchg
adc
sub
pop
and
sbbl
jo
lret
aaa
scas
pop
and
bound
imul
jl
jbe
jo
insb
or
unpckhps
jp
inc
mov
ret
pop
orl
pop
jp
pushf
ja
dec
subl
jno
inc
sub
cmp
push
imul
cli
daa
xchg
cli
outsb
push
mov
sbb
test
mov
and
sub
imul
adc
int
sbbb
cli
xchg
arpl
sub
iret
dec
repz
icebp
sub
pushf
clc
mov
stos
or
dec
cs
cmp
ja
std
loop
popa
inc
js
cwtl
dec
or
fs
stos
adc
sub
cltd
sti
pop
push
rorb
push
pop
push
jmp
push
adc
adc
jl
pop
insl
adc
xchg
or
insl
pop
inc
push
cmpb
cs
lret
dec
xor
sbb
pusha
jmp
lret
sub
dec
je
mov
pop
pop
xor
movsb
mov
jne
cld
mov
movsl
xchg
xor
cld
add
mov
mov
repnz
dec
sub
div
test
sbb
mov
int3
pop
daa
mov
fld1
xchg
icebp
cld
shrb
sbb
sub
xlat
or
xor
roll
push
mov
rorb
lock
pop
sbb
and
cs
adc
pop
loope
sub
addr16
mov
ret
ret
xor
test
and
ss
dec
adc
je
mov
push
mov
xor
jle
jmp
mov
mov
sahf
push
mov
push
mov
inc
jle
jae
mov
repnz
inc
jge
test
leave
pop
outsb
mov
mov
in
mov
sbb
mov
outsl
xchg
sbb
mov
cmp
call
xor
cld
adc
xor
and
mov
comiss
or
stos
jl
rcll
mov
rclb
cmp
lret
cli
js
popf
aad
stos
dec
ret
popf
jmp
jle
xchg
bound
cmpsb
popf
nop
cmc
pop
rcrb
orps
adc
push
pop
rolb
cwtl
mov
fwait
and
add
jle
rorl
hlt
gs
aam
dec
ror
pop
test
xor
push
xchg
lahf
dec
mov
in
mov
mov
mov
cmp
lcall
addl
sub
pop
outsl
test
adc
movsl
lock
mov
and
xchg
xchg
pop
outsb
push
adc
in
pop
inc
xlat
jns
add
call
push
sbb
outsl
adc
mov
inc
or
inc
outsb
movb
scas
hlt
jmp
mov
dec
push
in
ja
in
pop
inc
fwait
sub
xchg
in
inc
cmp
jo
mov
movsl
out
je
roll
lret
and
xchg
pop
lahf
loop
sti
std
dec
and
or
out
shrb
pop
idivl
sub
cmpsb
pusha
je
jnp
dec
jg
hlt
add
icebp
ja
xlat
sbb
ss
mov
or
lods
jp
movsb
outsl
insl
jnp
fdivrl
fadd
scas
sbb
push
rcl
add
mov
sti
mov
push
add
out
dec
dec
outsb
ljmp
xorl
aam
sub
inc
mov
ja
movsb
push
fnsave
jl
stos
xor
mov
js
jle
push
scas
addr16
mov
lret
adc
add
inc
test
or
or
roll
mov
pop
lcall
fwait
lret
cs
ret
mov
test
or
cwtl
outsl
sub
pop
nop
xor
cmpsl
outsb
or
xchg
inc
leave
pop
mov
mov
popa
pop
mov
cmp
mov
movl
sub
xchg
xchg
mov
jns
inc
inc
jle
xor
mov
lock
stos
test
jbe
js
pop
nop
shll
fiaddl
dec
jl
jne
ds
jae
sub
cwtl
jmp
push
cwtl
in
shll
pop
ror
inc
call
loop
stc
jp
sub
loop
lods
fstl
adc
sbb
lock
jmp
dec
fstl
cli
fwait
adc
push
push
inc
ja
xchg
jge
es
fcoml
mov
sub
xlat
cmpsb
xchg
dec
dec
jne
dec
push
stos
xor
pop
cmp
fstl
mov
mov
idivl
pop
cmp
mov
push
sahf
jns
ss
gs
fs
rcrl
and
pop
into
push
cmpl
and
sub
lret
jne
ret
fwait
mov
xchg
scas
xchg
pop
sbb
push
ljmp
jne
icebp
loop
jecxz
icebp
mov
shll
enter
call
jae
cmp
mov
incb
gs
insl
pop
movsb
testb
push
mov
int
lds
mov
sbb
push
into
xchg
lock
pop
ret
xor
jecxz
xchg
sbb
and
and
out
lret
inc
inc
insl
cmpsb
jbe
rcrl
aam
cmp
inc
aas
aas
jecxz
js
push
mov
jp
push
ljmp
in
mov
and
das
xor
fildl
xlat
idiv
or
cmp
or
enter
jnp
stos
dec
push
outsl
dec
movl
das
pop
pop
xchg
popa
mov
mov
ja
pop
out
inc
out
xchg
and
stos
rcl
inc
push
enter
repnz
jo
fld
mov
dec
xor
add
xchg
lods
movsl
push
pusha
fwait
pushl
rorl
lds
push
xchg
adc
out
ficoms
mov
popf
mov
clc
push
mov
cmpsb
push
cmp
xor
add
cmp
inc
xor
xchg
adc
mov
les
outsb
add
push
jmp
fsubs
cltd
jns
ss
xchg
mov
cmpsb
sar
jb
xchg
aam
cs
fistpll
dec
inc
adc
pop
xor
mov
repz
adc
xchg
xchg
repnz
xor
fildll
fsubs
es
or
scas
movsb
leave
into
fstpt
or
sbb
stos
fyl2xp1
lret
push
add
pop
dec
push
jecxz
movsl
std
xor
enter
push
cwtl
shll
push
movsl
inc
pop
and
out
sti
into
ljmp
push
pusha
lcall
jbe
or
add
das
stos
push
pop
mov
dec
push
sub
xchg
aam
loop
jae
or
inc
rcrl
jns
lret
jo
pusha
pop
mov
mov
dec
mov
push
lods
addr16
dec
push
push
stc
stos
rolb
mov
in
gs
clc
inc
pop
js
pop
insb
loop
xchg
outsb
and
mov
pop
decl
sbb
dec
fidivl
push
imul
cmp
jbe
cmp
push
inc
and
adc
mov
repz
fstps
push
stos
ss
ffree
adc
and
out
dec
jne
stc
or
or
add
dec
sbbl
enter
in
ss
and
dec
jecxz
mov
test
shll
lock
cmp
or
cmp
daa
cltd
clc
pop
iret
adc
push
mov
bound
movb
mov
mov
js
mov
sub
add
adc
sub
int
mov
push
xchg
into
adc
test
int
ljmp
mov
or
xor
outsb
imul
mov
aas
sarl
mov
out
cmpl
sub
data16
sar
xchg
xor
and
cmpsl
shrb
fwait
roll
pop
jmp
hlt
dec
xlat
push
xchg
inc
cwtl
test
push
jge
in
movsl
js
mov
pop
xorb
sti
mov
orl
imul
pop
jb
pop
jns
sbb
xchg
mov
xchg
or
test
add
int
pop
dec
mov
fistps
mov
call
or
pop
frstor
dec
in
xchg
inc
xor
jl
adc
xlat
test
and
cmp
xchg
fs
xorl
fidivs
mov
mov
rcll
jle
push
mov
cmpb
imul
inc
in
inc
sub
and
and
dec
fprem1
cli
andl
test
mov
add
mov
inc
push
mov
sti
test
xor
push
and
sub
jne
xchg
pslld
lret
fs
loopne
inc
test
or
sbb
les
mov
bound
das
ds
hlt
mov
mov
dec
gs
sub
rorb
inc
stc
addr16
call
cltd
test
dec
dec
xor
mov
adc
cmp
push
and
xchg
cmp
add
or
xlat
push
push
push
push
movsb
pop
aad
or
push
loopne
imul
push
mov
and
mov
adc
cmp
jns
xchg
pop
in
sub
mov
lahf
imul
repnz
xchg
bound
sub
adc
cs
loop
jo
xor
cwtl
test
jecxz
js
pushf
cld
ret
out
fisubrs
bound
in
mov
add
out
cld
sbb
pop
xlat
jecxz
inc
loop
je
mov
push
or
insb
xlat
adc
test
cmpsb
inc
mov
xchg
adc
mov
cmp
pushf
cmp
push
push
movsl
jbe
push
pop
imul
add
xor
cmpsl
xorl
xchg
std
push
mov
and
lcall
push
push
adc
shrl
xchg
mov
js
pop
ror
aad
in
pushf
cmp
lock
leave
jne
xor
int3
jno
cltd
lahf
sbb
pop
cmpb
pop
push
inc
dec
arpl
shl
dec
pop
pop
call
addb
stos
add
aaa
xchg
bound
sbb
jecxz
out
es
xor
pop
lret
out
aad
lret
movsb
mov
jbe
xchg
fcmovbe
xchg
sbb
cli
jmp
movsl
push
lret
cmp
fs
and
jno
mov
js
xor
sbb
popf
mov
xor
stos
pop
js
rorb
add
fstpl
pushf
or
inc
nop
cmpsl
enter
xchg
xchg
xorl
data16
roll
fisubs
xchg
in
xor
lods
mov
js
push
in
fisubs
mov
frstor
add
jb
lds
mov
and
cmp
push
jae
roll
xchg
push
data16
dec
pop
scas
cmp
adc
mov
stos
ja
ret
in
roll
sub
int
push
jbe
stos
andb
mov
add
imul
sbb
xchg
sub
rorl
shll
mov
sub
repnz
add
mov
add
mov
pop
sbb
jge
inc
adc
inc
mov
jle
jo
add
es
mov
push
xlat
jns
pop
shlb
out
and
push
cmpsl
mov
std
hlt
out
mov
or
mov
mov
push
je
test
sbb
mov
xorl
cmp
mov
lock
ja
mov
mov
sbb
push
ss
lods
pusha
mov
xorl
cmp
addr16
mov
mov
sbb
mov
xchg
ja
adc
mov
nop
sub
sbb
outsb
aas
xor
jnp
jmp
divl
in
jbe
inc
cltd
xchg
je
mov
loope
ret
int
enter
imul
or
sub
daa
push
adc
xor
jmp
xchg
gs
mov
cld
cli
insb
mov
or
iret
lods
mov
mov
push
xchg
cltd
xchg
dec
jge
push
mov
fstp
mov
nop
jle
aaa
cld
adc
jo
pop
xchg
fs
push
pop
daa
push
xchg
pop
addr16
lcall
leave
inc
xor
sbb
xor
sahf
pop
daa
mov
pop
pop
mov
fidivs
leave
ljmp
ja
sbb
rolb
repnz
pop
mov
pop
dec
mov
in
push
int
sub
jb
test
repnz
mov
and
repz
dec
loope
mov
ret
mov
outsb
adc
scas
loopne
adc
cmp
data16
pop
and
adc
cmpsb
and
push
sub
faddl
sbb
jge
shrl
in
sub
cs
mov
rclb
xchg
sub
add
call
lret
hlt
xchg
gs
out
pop
in
push
rorl
push
int3
into
push
cmp
cmpsb
sub
shl
jb
add
test
mov
mov
leave
enter
rorb
pusha
push
mov
xlat
idivl
push
jno
repz
push
nop
and
dec
pop
xor
pop
jo
xor
rcrl
cmp
sar
sub
sub
lret
pushf
out
lods
xchg
les
mov
lret
lock
inc
xchg
leave
jge,pn
fmul
and
dec
in
adc
xchg
lds
sbb
push
mov
or
push
rcl
stc
leave
mov
jmp
call
pop
jae
aaa
jl
add
adc
mov
or
xor
xor
aad
cmp
push
aam
xlat
cmpsl
pop
pop
mov
loope
and
mov
test
pop
stc
dec
cmp
and
mov
or
add
jnp
aad
mov
repnz
jno
jns
cmpsl
mov
sahf
repz
or
sahf
jl
rorl
test
daa
test
jb
out
mov
sbb
js
sub
pop
dec
loop
pop
testl
loop
xlat
or
inc
cli
pop
lcall
stos
pushf
sti
cmpsl
mov
lret
lret
sub
or
dec
mov
inc
imul
out
xchg
xchg
push
sub
aad
mov
and
dec
mov
push
inc
cmpsl
xor
es
arpl
cwtl
mov
mov
mov
sub
sti
mov
jl
inc
mov
cmp
dec
out
out
cwtl
sub
cld
das
sti
test
cwtl
scas
xchg
ficompl
or
adc
adc
in
mov
push
jns
mov
out
test
ror
sarb
or
cmpsl
lret
mov
xor
cmp
inc
xlat
mov
dec
into
fsub
mov
add
cwtl
pop
pop
xchg
mov
repz
jp
mov
sub
outsb
pop
mov
pop
jo
out
cmp
sub
nop
insl
ljmp
daa
pop
mov
sbb
pushf
or
sub
mov
mov
mov
aam
dec
sti
inc
dec
inc
jb
mov
mov
jg
out
mov
bound
cmpsl
push
cltd
push
cmpsb
sahf
imul
sub
nop
and
fiadds
shlb
inc
push
test
sub
test
das
enter
les
xor
sbb
adc
movsb
in
pop
and
push
aam
xchg
dec
xor
mov
les
dec
cmp
js
pushf
int
ret
cmpsl
arpl
xor
sbb
lea
xchg
mov
adc
clc
into
scas
repz
stos
rorl
adcl
adc
icebp
push
add
jns
add
les
aad
xor
shr
xchg
cwtl
mov
and
les
icebp
clc
iret
sbb
outsb
mov
pusha
mov
pop
insb
xor
cmp
in
imul
pop
jge
jmp
shlb
test
cmp
daa
jge
jnp
ja
mov
dec
fdivs
dec
mov
clc
fistpll
xchg
fs
roll
jp
or
mov
lock
shrb
lea
enter
inc
in
sub
cmp
mov
or
fsub
sbb
jno
xor
xchg
nop
xchg
cmp
ds
adcb
inc
cltd
rolb
std
add
sbb
aas
fiaddl
push
sti
cmc
filds
mov
mov
cwtl
add
dec
ficoms
pop
movsb
sub
inc
dec
xchg
test
stc
or
jae
pop
pop
iret
jbe
dec
pusha
bound
sub
adcb
or
cmp
jp
test
int
inc
inc
pusha
mov
mov
je
inc
movsb
push
in
adc
sub
movl
mov
popa
call
inc
cld
popf
sti
sahf
push
mov
loopne
int3
xchg
outsb
xor
out
and
inc
push
and
pop
cmp
rolb
lahf
sub
and
movsb
xchg
mov
cmp
sub
mov
and
cmc
scas
jno
cmpsb
repz
sbb
jno
xchg
mov
cmp
fldcw
rcrb
push
mov
mov
stc
ror
cmc
inc
sub
es
jbe
les
jle
gs
or
shrl
mov
mov
dec
sbb
jp
mov
pop
lods
fwait
mov
sti
jo
aas
mov
or
cmp
lcall
cld
fsubr
lock
movsb
mov
iret
and
movsb
push
sub
lds
in
lcall
mov
je
mov
movl
add
fisubrl
ss
dec
pop
cld
lods
mov
cmp
fmulp
nop
and
out
push
inc
into
ror
xor
mov
xchg
aam
inc
lock
aas
jmp
push
and
stos
test
out
icebp
and
pop
mov
cmp
std
xor
push
mov
jo
pop
fistpll
sub
push
sbb
aaa
mov
cltd
pop
pop
or
fistl
gs
jbe
jo
into
sub
aam
cmpsb
call
or
or
mov
jp
test
fldcw
dec
ja
inc
dec
fwait
mov
push
jle,pn
push
jl
sbb
jno
xchg
sarb
inc
inc
inc
xor
mov
jne
outsb
jb
fstpl
jge
bound
sub
scas
pop
inc
jae
int
pop
je
cs
out
ficoml
inc
sbb
and
ja
sub
or
hlt
test
seta
xchg
stc
iret
idivb
jecxz
outsl
pop
push
push
fistps
mov
xchg
cmpsl
insl
mov
dec
sar
jnp
jp
icebp
cld
sub
cwtl
push
jecxz
test
xchg
std
push
mov
sbb
lea
push
sbb
jp
in
inc
mov
dec
rclb
adc
ljmp
jg
aaa
lahf
mov
lcall
out
pop
or
sbb
loope
out
adc
or
pop
xchg
pop
mov
bound
xchg
int3
mov
pop
sbb
loope
fs
imul
mov
sbb
sbb
jnp
jns
adc
dec
adc
adc
sbb
cmp
test
repz
scas
adc
mov
ret
and
rol
mov
pusha
cmpsb
push
mov
push
dec
out
add
add
movsb
fsts
sbbl
adc
or
data16
fwait
sti
leave
mov
lock
adc
loop
sub
xor
mov
pop
mov
nop
cmp
jl
in
je
stos
test
loopne
insb
add
lcall
test
ljmp
fsts
add
sbbl
or
pop
pop
into
jmp
cmp
pop
pop
inc
jno
mov
data16
je
adc
mov
lcall
push
les
push
movsb
sti
int3
ret
clc
fucomi
xor
out
loop
pop
or
xlat
jb
xchg
stos
adc
add
push
icebp
push
xchg
xchg
pop
add
or
xor
cmp
daa
mull
icebp
lock
cmp
mov
mov
mov
les
inc
leave
xchg
and
xchg
xlat
out
xchg
mov
xor
pop
outsl
arpl
outsb
ficoml
xchg
in
push
push
mov
lret
scas
cld
add
push
insb
ja
xor
inc
lret
inc
stos
loope
push
clc
int3
dec
cwtl
mov
inc
mov
in
jns
sbb
insb
je
insb
xchg
loopne
frstor
push
shr
or
xchg
rcrl
les
ss
mov
cbtw
sub
mov
mov
pop
adcb
sbb
icebp
pop
pop
and
fsts
fbstp
add
push
loopne
jmp
sbb
push
add
and
xor
outsb
xor
in
shlb
faddl
mov
ja
inc
out
in
es
aas
xor
cmp
adc
xor
mov
int
cmp
pop
mov
mov
add
fwait
dec
add
pop
mov
or
and
mov
and
xchg
xor
jae
imul
xor
jnp
mov
dec
movsl
mov
ds
mov
sub
jns
int
or
mov
into
popf
mov
repz
rcll
add
shlb
cmp
call
loop
lods
adc
dec
pop
pop
and
icebp
or
inc
mov
movsb
scas
enter
out
nop
lcall
cmp
and
stos
or
flds
jl
inc
xchg
ljmp
mov
sub
mov
mov
jle
cmpsl
dec
std
cmp
pop
pop
stos
pop
xor
push
leave
push
or
andl
push
mov
add
loop
icebp
inc
loopne
pop
cmp
xchg
or
lcallw
mov
mov
and
jmp
jb
sbb
out
push
mov
repnz
je
adc
adc
dec
mov
sbbl
insl
lods
lahf
cli
or
movsb
mov
pop
jnp
mov
mov
mov
add
divl
and
jbe
jge
aam
or
repz
stos
std
mov
xchg
icebp
mov
inc
inc
dec
xor
push
sub
insl
xor
